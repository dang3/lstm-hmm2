call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xor
cmp
dec
sbb
dec
inc
push
push
arpl
test
mov
cwtl
into
lcall
mov
jbe
outsb
cmp
dec
sbb
push
push
pop
scas
stos
out
mov
mov
enter
xor
cmp
adc
pusha
xor
inc
decb
cmpb
repnz
jmp
sub
sbb
mov
imul
and
xor
mov
gs
xorl
jns
add
outsb
jecxz
xchg
sub
push
and
aas
lods
pop
enter
xlat
jle
pop
push
into
jl
ds
js
cmp
mov
sub
xor
insl
ss
cmp
cmp
or
sub
dec
sarl
jmp
mov
xor
mov
mov
adc
clc
rorl
pop
sbb
ds
int
dec
subb
sti
daa
outsb
fsubs
push
cltd
fwait
jb
aad
test
into
mov
mov
sahf
enter
das
pop
sbb
add
push
mov
or
jl
push
xchg
rolb
sahf
enter
dec
sbb
sbb
and
push
ds
push
or
shrl
xlat
test
stos
ljmp
cmp
js
sbb
jb
jge
shrl
fcmovne
lcall
or
pop
pop
imul
js
dec
push
pop
test
mov
mov
enter
sub
pop
or
ds
push
pop
test
mov
mov
enter
sub
or
inc
sbb
mov
add
xchg
sub
cmp
ret
sbb
dec
xchg
jp
jae
pop
das
loope
insb
out
and
adc
std
in
pop
jp
fiaddl
fwait
sarl
enter
lods
int3
fs
mov
adc
jge
push
arpl
inc
xchg
inc
cmp
mov
jp
dec
call
fs
pop
or
jns
test
pop
cmp
mov
cmp
test
fisubs
icebp
adcb
fisubs
jo
mov
fbld
mov
and
push
mov
repnz
lock
pop
lret
popa
cmp
aas
ror
outsl
loope
imul
loopne
in
imul
test
and
cmp
xor
ds
into
or
or
jmp
fimull
push
or
push
outsb
das
leave
cmpsl
je
pop
adc
std
pop
mov
sub
lcall
push
or
aam
adc
test
rcl
call
jmp
insl
addr16
movsl
je
stos
cmp
inc
sbb
cmp
rcl
mov
aaa
add
sub
and
enter
mov
lea
push
inc
movsl
movsl
jns
repnz
xchg
sbb
pop
inc
xchg
js
pop
cmpsb
mov
rol
fwait
cmpsl
fdivl
jg
rcrb
sbb
jne
in
cwtl
subl
dec
cmp
xchg
pusha
xchg
cwtl
aam
xchg
dec
jne
stos
loop
sar
adc
std
jnp
mov
pop
pusha
xor
out
ret
mov
and
lods
jae
mov
push
testb
iret
mov
mov
aaa
enter
pop
push
jmp
jl
mov
rcrl
fsts
out
jno
cmp
pop
push
cmp
aam
fwait
jne
inc
inc
std
jo
push
xchg
in
rcrb
fidivs
cmpsl
shl
movsb
sti
inc
aas
lret
inc
imul
mov
in
es
or
adc
cwtl
mov
and
sub
aaa
dec
dec
frstor
pop
aaa
ljmp
cmc
mov
push
lods
loop
xor
lcall
cmc
xor
fwait
jnp
add
cmpsl
xchg
std
sbb
cmp
loop
mov
test
call
int
or
das
js
sub
aad
push
lds
xor
inc
inc
sub
push
sbb
aaa
nop
sub
sub
xchg
ret
cmp
jp
mov
pop
sbb
or
ss
and
adc
jo
pusha
inc
adc
scas
mov
cmpsl
adc
xlat
xchg
dec
ret
lea
sti
lods
out
sbb
gs
fwait
push
fcmovnbe
ret
pop
fs
pop
inc
xor
gs
insb
outsb
xchg
and
clc
call
push
jmp
es
jg
mov
pop
and
push
jge
testl
daa
jb
cmc
inc
das
lcall
out
pop
xchg
out
call
sahf
dec
std
je
mov
inc
push
add
mov
test
fs
sbb
divb
pop
or
sbb
pop
cmpsb
add
xchg
inc
cmc
push
inc
cmp
push
fildll
ret
out
dec
mov
repz
sti
push
sahf
pusha
xor
lahf
insl
add
sub
xchg
xchg
lods
mov
mov
mov
sbb
arpl
int3
xchg
dec
jnp
adc
and
and
mov
jae
dec
lds
mov
bound
push
pushf
fxch
fsubrl
dec
movsl
negb
xchg
decb
mov
cs
push
test
fnsave
jo
lea
ja
sub
mov
pop
sub
dec
mov
dec
into
outsb
dec
cld
inc
dec
and
cld
jne
push
inc
popf
add
mov
mov
jnp
add
inc
lods
sbb
rolb
cmp
cmp
add
add
sub
js
add
cli
cld
mov
jno
mov
sbb
mov
cmp
leave
insl
daa
out
popf
sub
mov
pop
arpl
das
inc
ja
jge
add
out
adc
inc
pop
push
mov
jge
aas
mov
and
push
pusha
jb
push
or
or
mov
lock
aas
xor
or
lock
pop
imul
ds
popf
mov
mov
add
mov
push
dec
adc
mov
jmp
pushf
adc
mov
cmp
aam
rol
cmp
pop
aam
jl
outsl
xor
jmp
ret
mov
and
cmp
icebp
mov
dec
enter
mov
leave
lret
in
adc
outsb
add
or
fwait
or
fsubrl
xchg
bound
dec
leave
sub
add
arpl
mov
cmp
aas
push
push
xlat
inc
mov
xor
lcall
and
cmpsl
sub
loopne
jg
scas
decb
test
push
shlb
pop
ss
dec
jns
push
mov
xor
xor
fadds
cmp
xchg
pop
gs
jmp
inc
das
add
fdivrl
mov
inc
bound
sbb
hlt
jne
inc
sbb
sub
rcrb
pushf
das
mov
fistpl
outsb
out
push
add
ror
fnstcw
loopne
sbb
popa
dec
lahf
mov
or
jo
push
scas
addr16
push
pop
pop
aam
sub
jns
mov
test
stc
cs
lahf
adcb
movsb
loopne
sbb
or
iret
insl
and
cmovno
clc
dec
mov
pop
adc
sbb
in
sbb
jmp
jb
dec
cltd
xchg
cmpsl
adc
arpl
mov
xchg
jb
mov
test
cmpsb
shrb
xorl
and
aam
nopw
mov
mov
shl
mov
cmp
loopne
dec
lods
push
inc
xchg
sub
pop
inc
mov
ret
pop
xchg
in
inc
or
icebp
add
pop
popa
xchg
scas
es
inc
push
jl
fistpll
dec
mov
sbb
fst
sub
into
mov
movsb
lret
inc
das
sub
mov
jle
push
inc
lahf
lock
mov
outsl
out
rcrl
pop
inc
fildll
dec
pop
inc
push
into
clc
sarb
mov
dec
mov
push
mov
or
push
jmp
call
adc
xchg
call
mov
adc
inc
mov
mov
xchg
cmp
jnp
scas
sub
rcr
add
ret
fisubs
lea
pushf
and
data16
or
mov
pop
pop
sub
push
enter
dec
mov
dec
jae
shlb
mov
enter
cmp
push
fs
aad
imull
xor
mov
pop
out
enter
sub
les
pop
outsb
das
push
fsubrs
rorb
rorl
push
cmp
mov
or
movsb
jmp
mov
shl
std
jno
shlb
gs
xchg
cltd
pusha
sbb
stc
and
or
lds
sbb
fcmovnu
xor
or
jns
repnz
outsl
xchg
mov
mov
inc
ljmp
mov
cmp
pop
scas
lods
and
das
mov
iret
jne
add
mov
lea
sbb
iret
push
xor
mov
repnz
lock
into
push
add
fwait
adc
lret
popf
movsb
lret
adc
or
pop
std
xor
stos
loopne
jl
xor
cmp
imul
inc
push
shll
or
pop
jns
sti
jp
daa
mov
les
sbb
xor
pop
or
test
femms
cmpsl
lea
pop
gs
aas
insb
scas
sub
int
daa
mov
jno
jge
mov
sub
dec
push
mov
lcall
lea
xor
cli
ret
xor
pop
pop
bnd
ljmp
pop
adc
in
shrb
xchg
adc
negb
loopne
insb
inc
loop
in
or
xchg
dec
mov
pop
push
js
arpl
clc
sahf
addr16
out
pop
lds
test
imul
loope
cmpsl
mov
stc
sti
and
xchg
std
into
cmp
jo
insb
pop
cmp
icebp
adc
cmpsl
je
mov
jnp
outsl
dec
add
mov
add
nop
ss
aam
call
cmpsl
xchg
int
lret
mov
push
dec
hlt
adc
js
bound
pop
jmp
jle
jmp
and
mov
out
sbb
cmp
fisubrl
jae
in
std
or
pop
out
push
xor
aas
cmp
repz
cmp
xchg
pop
icebp
into
je
cli
and
lock
pop
xchg
mov
push
jg
insb
shlb
xor
je
pusha
jge
mov
sub
stos
out
jo
inc
jae
jmp
shl
sbb
daa
pop
jecxz
sar
pop
cltd
arpl
or
xorb
jge
imul
jne
mov
shll
mov
cltd
lock
loopne
dec
xchg
mov
pusha
hlt
jle
jb
les
in
jbe
push
jbe
jmp
int
pop
js
jge
repz
bound
adc
jge
lcall
pop
jp
mov
pop
mov
pop
aam
popf
sub
pop
es
daa
xorl
pop
inc
loopne
cmp
loope
enter
xchg
loop
xchg
mov
mov
mov
push
loop
jnp
call
mov
push
fldcw
xchg
cwtl
jno
pop
mov
push
jae
lret
js
roll
xchg
sub
int3
xchg
mov
fldt
nop
fadds
call
nop
cmp
add
rcrl
lock
bound
push
mov
je
inc
xchg
sbb
sahf
cmpl
push
pop
cld
xchg
adc
insl
push
dec
test
push
std
push
inc
pop
pop
push
xor
xchg
sbb
jle
inc
sub
cwtl
in
fsubrs
incb
xor
sub
mov
hlt
jge
inc
xchg
out
rorl
imulb
int
jg
daa
xor
add
iret
jne
push
pop
mov
push
hlt
data16
std
push
dec
jge
push
rcl
jmp
add
stos
sti
test
jl
cli
repz
pushf
test
arpl
xor
stos
jae
sub
shlb
cwtl
xor
es
aas
aam
sbb
add
into
idivb
cltd
pop
lods
lcall
sub
fiaddl
pop
pop
xchg
pop
mov
outsb
repz
add
popa
pop
ds
push
mov
iret
mov
loope
adc
out
mov
dec
lret
int3
bswap
mov
cmp
jmp
insl
xor
jp
sarl
fmull
in
decb
clc
mov
lods
gs
push
or
aaa
or
pop
dec
cmp
enter
inc
addb
lahf
daa
les
decb
in
cmpsl
jb
js
pop
dec
push
jecxz
dec
jnp
and
add
mov
popa
or
mov
xor
pop
cli
mov
repz
jo
mov
pushf
dec
mov
aas
dec
cmp
inc
add
cmp
ret
pusha
test
xchg
sub
mov
push
loop
sub
xor
movsl
scas
lret
jl
mov
outsb
out
xchg
mov
xchg
push
cmp
or
jmp
les
imul
pop
push
int
pop
xor
cmpsl
mov
add
mov
lods
cmp
faddl
lods
stc
pop
push
adc
in
mov
cmp
and
dec
cmpsl
adc
fidivrl
inc
pusha
cmp
daa
aaa
stos
adc
in
push
lret
inc
sub
xor
scas
push
and
jbe
dec
lods
sub
mov
push
dec
inc
scas
ja
movsl
test
cli
sbb
ficoml
sub
cs
int3
jle
mov
das
outsb
push
ja
mov
mov
inc
lock
xchg
nop
xorb
adc
and
xorl
inc
aaa
ds
sbb
dec
iret
jb
jp
lock
jmp
mov
pushfw
mov
push
popf
pop
in
fbld
test
lahf
roll
pop
mov
in
push
push
pop
daa
fdivl
mov
pop
sbb
aad
mov
rolb
add
mov
or
push
xchg
lds
loopne
xchg
insl
xchg
enter
mov
lret
ja
cs
jle
out
inc
insb
std
cs
nop
lret
add
mov
out
xchg
dec
push
inc
inc
xorl
pop
scas
aaa
lcall
xchg
cmc
jp
rcrl
mov
mov
sti
test
shr
lret
outsb
aad
repnz
aad
lds
xor
add
adc
push
cmpsb
enter
iret
ja
stos
call
cwtl
orb
sub
fimuls
sahf
hlt
lods
and
cld
push
and
or
adc
lahf
lret
mov
je
adc
hlt
jns
es
dec
pop
mov
popa
adc
jns
movsl
mov
aad
iret
add
cmp
sub
jg
aam
aad
insl
adc
inc
jmp
jecxz
mov
xchg
addl
mov
loope
fxch
and
in
js
dec
cmp
nop
loopne
jecxz
and
loop
sti
mov
movsb
lods
push
loope
imull
scas
add
aas
aaa
or
cmp
outsb
adc
xor
pusha
push
pop
clc
ja
lock
cmp
mov
ror
pop
inc
mov
pop
movsb
pop
xchg
add
pop
int
hlt
shlb
insl
lock
insb
sub
mov
into
cmp
sarb
fsubrs
push
pusha
mov
inc
addr16
mov
mov
cs
pop
xchg
mul
xchg
int
xor
out
shlb
sbb
mov
xor
ds
in
nop
lods
push
or
mov
jecxz
cmp
xchg
subl
dec
fcomi
mov
fmul
or
lcall
pop
loope
mov
inc
jb
sub
cmp
push
sub
lods
mov
lcall
das
ja,pt
jp
sbb
sub
sbb
fistpl
iret
push
sarl
enter
test
mov
jno
xchg
push
or
in
sbb
call
or
mov
bound
adc
and
adc
and
outsl
push
aaa
pop
mov
or
cs
cmp
out
cwtl
add
xlat
sub
aaa
aam
and
mov
push
into
dec
mov
jmp
mov
pushf
mov
fnstsw
push
xor
push
in
dec
jnp
mov
xchg
neg
dec
test
mov
jbe
es
xchg
loope
ljmp
mov
pop
ja
add
adc
sbb
mov
cmpsb
hlt
sub
add
jl
rorb
xor
inc
add
rcrl
icebp
jmp
int3
lea
outsl
mov
testb
fbld
cmc
mov
les
inc
xor
adc
push
dec
int3
out
mov
mov
movsb
mov
pop
add
xchg
cltd
insl
and
ss
inc
dec
add
mov
mov
daa
or
pop
dec
mov
lods
jg
mov
push
jp
fists
or
lods
leavew
pop
lds
test
les
incl
xchg
gs
enter
into
xchg
xor
sbb
sbb
cmp
adc
adc
mov
xlat
sbb
mov
adc
mov
pop
ljmp
xlat
dec
xchg
fildll
adc
adc
lret
daa
mov
inc
adc
push
sub
mov
jl
or
xor
in
outsl
jl
mov
aaa
imul
cmpsl
sbb
sbb
pop
xchg
mov
add
mov
pop
cwtl
lahf
int
es
aas
or
lahf
dec
mov
and
dec
aam
and
into
or
xchg
mov
jne
sub
ret
jno
fisubs
or
adc
imul
cld
sbb
test
mov
push
adc
inc
popf
bound
test
inc
mov
cli
inc
mov
mov
xchg
add
decb
adc
and
xchg
push
test
sub
sub
insb
in
pop
shrb
js
jnp
mov
xlat
imul
or
pushl
cmp
std
pop
and
xor
test
inc
add
shlb
xor
mov
cli
into
mov
data16
scas
mov
sbbb
jbe
ss
and
outsb
push
inc
cmpl
ds
call
movsl
inc
jns
insb
lahf
and
test
movsl
xchg
gs
cld
cltd
cld
push
mov
mov
cli
dec
pop
jle
lcall
xchg
sahf
sub
mov
sub
insl
push
sbb
ss
jge
lret
xchg
imul
sbb
repz
sub
je
adc
or
inc
enter
xor
xchg
movsb
daa
mov
adc
jne
jne
push
xchg
sarb
rsm
int
or
mov
into
aaa
jge
aas
adcl
adc
jge
int3
lea
lahf
test
dec
push
push
sbb
pop
aam
nop
decl
inc
jmp
pop
push
lods
or
in
rclb
out
or
pop
jno
dec
fwait
inc
imul
adc
in
orl
mov
or
push
xchg
pop
mov
cmpsb
fsub
jne
jno
inc
idiv
xchg
lock
pop
mov
call
dec
xchg
jno
aaa
loope
stc
scas
sbb
pop
shrl
aaa
aaa
mov
out
loope
or
fstl
add
sbb
mov
scas
add
fildl
dec
cmp
das
cli
sbbb
dec
fsts
adc
lods
and
les
lret
sub
scas
cli
ss
dec
ja
xchg
pop
cmpsb
repnz
dec
test
pop
inc
push
test
jp
movsb
bound
push
dec
cltd
jbe
xchg
shrl
mov
mov
jg
mov
rorb
mov
pop
mov
sbb
hlt
and
movsb
pop
aaa
or
or
push
das
cmpsb
loop
sub
stos
mov
and
loop
das
dec
and
aam
cmc
leave
fcompl
dec
rcrl
pop
je
add
data16
scas
dec
mov
sbb
jge
vxorps
xor
lds
sub
sti
adc
rclb
add
hlt
int3
mov
aaa
push
fistl
sbb
mov
mov
dec
cmpsb
push
das
pop
xchg
incb
jns
test
sarl
test
jb
out
ret
das
cmc
jmp
repnz
sub
sub
cmp
cmp
jmp
push
xor
inc
jp
cmpsb
ja
orl
fstpt
jo
add
mov
pop
lds
addr16
add
sbb
adc
fcoml
pop
add
gs
ror
addr16
insl
movsl
sti
mov
bound
push
mov
out
sub
mov
test
cmp
xchg
lds
mov
inc
aaa
xor
dec
mov
or
add
sub
sahf
aaa
jp
cmp
ret
mov
add
xchg
test
push
stos
mov
sub
jge
xchg
push
add
pop
add
sarl
sbbl
aaa
mov
ret
movsl
stc
repz
sub
mov
fs
inc
int
cltd
mov
dec
mov
shlb
and
mov
pushf
dec
push
cli
repz
sar
stc
out
orb
arpl
dec
push
les
ljmp
fidivrs
sub
iret
mov
sub
push
into
stos
jo
mov
imul
adc
jle
cmpsb
and
or
pop
jg
lret
stos
sarl
cld
pop
imul
cmp
sub
lret
mov
adc
xchg
adc
xchg
lcall
or
ds
xchg
flds
pop
lock
lret
int3
sub
setae
sti
or
mov
push
les
shll
push
add
mov
jecxz
ret
es
jge
dec
xor
hlt
sahf
add
mov
lods
popa
inc
sbb
jle,pn
xchg
push
inc
test
les
or
inc
pop
inc
cmpsb
sub
cmp
push
rcr
sub
push
int3
push
outsl
push
add
mov
dec
and
cli
imul
icebp
lock
std
jae
insl
push
out
push
and
xchg
mov
jbe
jno
sub
xchg
fcmovu
incb
sub
cltd
jae
scas
push
mov
push
cmp
mov
push
or
scas
cmc
pop
fs
jne
xor
stos
dec
jle
orb
push
push
xchg
mov
fdivrs
cmp
push
push
pop
test
mov
mov
enter
sub
pop
or
ds
push
pop
test
mov
mov
enter
sub
dec
or
aas
push
addps
test
mov
mov
leave
mov
cmp
or
ds
mov
test
adc
out
leave
pusha
es
popa
aaa
jno
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
nop
sahf
subb
loopne
sahf
lcall
xor
and
pop
inc
jle
jle
mov
mov
shr
incb
dec
xor
and
pop
inc
outsb
jo
pusha
mov
mov
shr
loopne
adc
and
pop
dec
sub
adc
sahf
lock
out
lds
das
adc
xchg
sbb
imul
xor
fistl
ljmp
fs
push
add
pushl
mov
mov
mov
xor
sbbb
lret
push
sub
add
rcr
scas
sahf
jl
std
cmp
movsl
push
test
repnz
incb
push
in
fdivr
das
not
movsl
scas
inc
or
pusha
jae
popa
jg
dec
stos
lods
es
das
out
mov
imul
add
push
jmp
addl
cs
push
dec
push
jp
imul
inc
mov
cmp
adc
jg
rcll
mov
shr
loopne
adc
add
xor
and
pop
inc
outsb
jo
es
nop
ret
loope
xchg
mov
xchg
pushaw
lods
sbb
pop
push
cmp
pop
add
or
test
xchg
mov
into
pop
jne
jb
push
pop
jb
xor
popa
xor
shll
fmuls
lock
loopne
adc
add
xor
and
pop
inc
outsb
jo
pusha
mov
mov
shr
loopne
adc
add
xor
and
pop
inc
outsb
jo
pusha
mov
in
addr16
cmpsl
or
add
lods
inc
arpl
dec
xor
sub
ficoml
pop
xchg
xchg
bound
mov
fdivs
mov
inc
lods
shr
cmpb
push
test
dec
xchg
xchg
pop
fucomip
mov
into
stc
push
imul
addr16
les
pop
lods
pop
mov
and
cmc
or
inc
or
pusha
sbb
lods
or
xchg
dec
cmp
lret
sarl
jle
xchg
imul
rolb
jle
and
aas
mov
stos
jo
jnp
sbb
lret
lods
lret
sbb
in
loope
jo
mov
aaa
lds
es
pop
push
sbb
or
xchg
push
mov
rorl
xor
jno
cmp
scas
xchg
leave
mov
in
test
inc
push
arpl
push
mov
or
fnstsw
fdivrp
lcall
nop
mov
mov
fdivl
add
fldenv
cmp
xchg
cwtl
inc
push
iret
xchg
push
inc
or
in
mov
addb
push
out
lea
shlb
popa
lret
pop
dec
mov
into
pop
lcall
scas
cld
popf
int
fs
fcmovnu
inc
jecxz
pop
les
mov
dec
cmpsb
mov
mov
dec
test
movsl
fs
movsb
jl
pop
fiadds
outsl
jg
mov
or
leave
mov
pop
pop
fiadds
fsubl
inc
pop
outsl
xor
test
push
dec
mov
cmpb
fcmovb
mov
lods
push
xchg
inc
in
leave
add
jge
mov
lods
add
int
test
push
ja
cmc
subl
shll
out
cmp
das
mov
adc
in
lods
pop
xor
out
mov
imulb
icebp
pop
xchg
xchg
out
adc
into
subl
jge
and
and
stos
popf
adc
mov
adcl
je
dec
outsl
ret
aaa
pusha
mov
jo
test
cmp
movsl
cmpsl
addr16
pushf
lret
sub
rolb
dec
orb
pop
adc
cmpsl
stc
lret
add
xchg
mov
push
lods
mov
pop
ja
push
lds
xchg
mov
cmpsl
ljmp
lods
insb
mov
ss
mov
aad
stos
sahf
cmc
inc
icebp
clc
outsb
aas
xchg
daa
and
pushw
xor
dec
cmpsl
and
fidivl
js
clc
mov
inc
pop
call
jae
aad
pusha
pop
movsb
mov
adc
adc
xor
sbb
cmpsb
roll
pushf
sbb
dec
fldenv
gs
arpl
sub
xchg
and
cmp
fnsave
dec
subb
aam
loope
ret
add
hlt
jp
lret
int3
adc
stc
aaa
xchg
mov
sbb
mov
xchg
and
insl
jb
add
adc
test
mov
inc
rcrb
or
das
test
cmp
xchg
out
in
pop
mulb
hlt
and
mov
xor
repz
out
inc
test
mov
shrb
mov
popa
call
orl
test
int3
lahf
repnz
sbb
sub
xchg
sbb
jo
mov
je
push
mov
add
icebp
add
jns
pop
add
fdivrs
addl
outsb
test
cmpsb
lahf
dec
aam
mov
lret
sub
xchg
push
test
xlat
divl
cld
mov
cmp
arpl
fcmovnbe
inc
js
dec
sbb
inc
push
iret
shufps
lret
and
jb
pop
mov
mov
fwait
cld
push
push
push
cli
fldenv
cs
xchg
popa
pop
insl
sbb
mov
in
aaa
ret
push
cs
roll
sub
xor
xor
mov
test
inc
mov
mov
sub
cmp
pusha
mov
pop
add
bound
popf
sahf
xchg
je
adc
add
mov
in
jnp
out
jne
dec
cmpsb
xor
fwait
movsb
adc
arpl
jbe
inc
fwait
out
test
fsubp
fistpl
push
mov
iret
inc
sub
xor
mov
or
jl
adc
cmp
add
jbe
xor
loopne
aad
mov
out
movsb
push
fcmovb
ds
jmp
cld
clc
add
mov
fdiv
adc
pop
inc
hlt
fs
repz
mov
and
add
cmp
and
xchg
aaa
push
jno
mov
in
add
inc
lods
js
scas
sub
ds
mov
pop
in
dec
mov
mov
mov
cmp
add
clc
lahf
jo
pop
xorl
push
cld
sbb
xchg
mov
orb
data16
xchg
mov
mov
sti
push
and
lret
shll
add
rolb
pop
cltd
aaa
cwtl
mov
lds
inc
out
lods
es
jecxz
push
movsl
xchg
shrl
mov
mov
sub
lcall
inc
mov
movsb
stos
outsl
or
fstpt
push
cmp
test
adc
and
test
insl
jnp
and
fidivrl
dec
shr
xchg
pop
lret
loop
loopne
inc
loope
in
in
mov
jecxz
shlb
decl
mov
rep
aad
mov
xchg
pop
sub
repnz
ss
das
pop
dec
test
or
inc
popf
mov
movd
mov
int
jae
sub
pusha
out
mov
in
xchg
fwait
pop
push
push
call
and
insb
push
ljmp
imul
mov
jecxz
mov
cmp
into
push
out
and
pop
jecxz
xchg
int
sbb
outsb
or
std
xlat
jmp
lret
pop
mov
cwtl
iret
shll
cmpsb
inc
ja
mov
dec
cmpsb
sbb
nop
ds
jns
fstpt
ret
pop
pop
roll
mov
bound
pusha
jne
sbbl
int
cmp
mov
xchg
xchg
push
jns
cld
test
mov
inc
xor
movsl
mov
add
push
or
add
push
push
insb
sbb
loope
and
jo
adc
pop
sbbl
push
inc
or
or
jbe
dec
and
jno
or
push
and
mov
shl
es
xor
push
stos
out
dec
mov
dec
test
inc
frstor
mov
sub
test
aad
lock
shlb
out
and
loop
fnsave
loop
inc
rcl
push
jl
sub
xor
jl
jo
jno
mov
mov
push
mov
test
push
add
lods
mov
push
cmp
sahf
mov
mov
adc
cmp
fiadds
popa
lods
or
jne
add
outsl
xchg
sbb
inc
push
cs
fs
cli
iret
inc
push
sti
dec
or
dec
cmpsb
bsr
mov
cs
push
push
add
outsl
xchg
sub
sbb
insb
mov
mov
push
in
mov
scas
push
lock
xchg
and
adcb
jno
lock
pop
jl
and
sub
out
cwtl
ret
nop
fsubs
and
je
imul
xchg
cvtdq2ps
sahf
scas
dec
mov
fbld
pop
or
stc
cmpsl
mov
cwtl
shll
clc
out
cmp
popa
add
xchg
sub
adc
mov
mov
lds
xchg
push
idivl
nop
add
js
mov
xchg
fsts
jecxz
xlat
adc
xlat
jnp
outsl
sub
lret
xor
inc
pop
adc
xchg
stc
jmp
dec
inc
mov
test
sti
call
ficompl
addr16
adc
test
aad
jmp
sbb
lea
jp
rolb
sub
add
cmp
mov
data16
call
in
pop
push
test
or
dec
fisubl
enter
mov
fistpll
push
adc
cmp
mov
adc
jge
pop
jbe
or
cwtl
or
pop
xlat
sub
pop
in
lock
in
adc
mov
sbb
push
sub
stos
and
insb
mov
into
jbe
pop
add
call
imul
sbb
enter
test
not
es
ljmp
jb
mov
hlt
scas
stos
jb
jp
pop
leave
jmp
and
mov
scas
iret
loopne
fwait
cmp
fisttpll
mov
rcll
and
aam
fstpt
xchg
cmpsb
lock
icebp
cs
pop
shl
push
ficompl
jl
inc
sbb
lea
mov
sbb
sub
movsl
mov
int
sbb
cmpsb
sahf
pushf
fldl
and
inc
testb
pop
jae
xor
cmpb
push
je
push
sbb
jmp
cmp
push
push
je
imul
or
dec
mov
daa
out
mov
cltd
xor
dec
cmp
cwtl
cmp
int3
idivb
sbb
xchg
xchg
dec
push
pop
xchg
pop
or
leave
and
inc
pand
push
add
sub
lods
mov
xor
dec
fdivs
inc
mov
jae
fimull
mov
mull
test
outsb
das
jl
inc
pop
mul
pushf
test
aas
sbb
sbb
lcall
add
add
fdivrl
or
cltd
mov
sarb
adc
aas
jbe
ret
inc
loop
cld
lods
xchg
aad
pushf
mov
cld
aam
aam
lret
pop
out
hlt
push
je
in
jne
scas
ljmp
inc
mov
out
jg
adc
bound
push
or
ficompl
in
shrb
mov
ja
cmp
pusha
mov
dec
adc
mov
divb
sarb
fistpll
inc
xor
cmp
pusha
add
stos
jp,pt
xchg
insl
or
out
imul
scas
dec
jp
aas
ret
orl
pop
fldt
cmp
jae
je
pusha
pop
pop
push
mov
lods
stc
pop
dec
and
xor
outsl
sub
pop
lds
push
popa
jnp
jmp
repnz
pop
stos
into
mov
inc
fdivs
test
fsts
push
cwtl
mov
cwtl
jns
repnz
jl
movsb
movsb
cwtl
cmp
jo
divl
in
xor
ds
dec
lret
flds
xchg
icebp
arpl
sub
jns
lods
ds
xor
or
add
idivl
dec
push
mov
mov
es
pop
xchg
ds
test
dec
xor
sbb
mov
mov
scas
das
cs
vhaddpd
into
fsubl
repnz
insl
adc
notl
sahf
sub
dec
movsl
nop
shrl
xchg
and
loopne
push
or
add
jne
adcl
dec
jle
jnp
testl
pop
test
leave
pop
cmp
subb
or
push
sti
xchg
jl
das
xor
dec
ds
xchg
push
into
pushf
shll
and
imul
jne
addl
xor
adc
aaa
out
adc
stc
jno
sub
mov
mov
jl
xor
sbb
add
adc
call
lock
sub
xlat
or
add
lods
data16
push
sbb
jl
add
test
mov
daa
stos
mov
repnz
out
mov
jno
inc
add
xchg
insb
imul
imul
movsb
push
xchg
loope
xor
daa
push
test
cmc
lds
sbb
inc
and
loopne
movsb
repnz
lods
or
mov
xchg
jmp
mov
je
adc
adc
push
orb
dec
fsts
jae
mov
test
psubd
mov
jle
or
push
les
or
mov
inc
xchg
idivl
sub
cmp
dec
cmp
lret
mov
divb
jbe
jb
pop
movsl
movsb
addr16
in
scas
cmp
pop
lahf
xchg
sbb
mov
mov
pop
out
xor
mov
pop
rcr
test
aam
and
test
push
sub
add
push
cld
mov
mov
cmc
test
es
insl
or
test
mov
cmp
add
test
sub
aaa
dec
jno
lret
mov
ljmp
pop
and
arpl
scas
cmc
shrl
out
xchg
pop
das
jecxz
xchg
xchg
stc
andb
dec
cltd
ud2
imul
hlt
fdivr
pop
sub
clc
test
outsb
adc
arpl
rclb
sub
fninit
fiaddl
jecxz
xchg
cmp
shrb
insl
fsubrs
ja
sbb
aam
pop
pushf
lods
xor
push
xchg
add
push
sub
or
cwtl
sbb
lahf
jp
ss
cmp
mov
xchg
loope
push
inc
jnp
and
test
push
dec
mov
pcmpeqw
jmp
lret
aaa
pop
pop
jbe
in
mov
sub
xor
add
mov
call
hlt
pop
xchg
jno
fcompl
mov
xchg
jmp
jecxz
mov
enter
jno
xor
ds
pop
out
and
mov
mov
rolb
cmpsb
sub
inc
testl
sbb
pop
lret
sbb
sbb
lret
outsl
adc
push
repz
jnp
push
adc
adc
lret
insl
test
ret
cmpsb
sub
fstpt
lea
fbstp
inc
stos
decl
and
mov
sub
adcb
idivb
inc
xor
mov
pusha
mov
adc
sti
movsb
scas
jns
xchg
lods
jl
ret
push
mov
jmp
mov
lret
jmp
or
or
shrb
jb
xor
and
add
mov
jecxz
std
dec
dec
ret
int
pop
out
xor
mov
add
sub
lret
sub
jl
add
sbb
fidivl
cmp
rsqrtps
rcrb
mov
sbb
xchg
in
push
or
scas
cltd
xchg
test
shlb
shrl
and
out
sub
inc
hlt
push
cs
lods
xchg
loop
test
cmp
jl
divps
push
mov
std
jg
ret
imul
out
outsb
loop
pop
xchg
and
push
shrl
or
mov
rol
arpl
push
scas
and
in
jl
jo
repz
stos
sbb
popa
dec
inc
sahf
add
clc
ja
xchg
adc
sbb
sbb
pop
dec
sbb
aas
mov
adc
pop
out
outsl
scas
das
lahf
jns
fisubrs
jno
push
push
push
dec
inc
sbb
sahf
subl
stos
lea
pop
lret
cli
lods
jo
jno
int3
mov
sbb
aad
je
clc
and
cs
push
sub
clc
xor
or
nop
lods
xor
test
lock
lods
sub
stc
and
cmpsl
ja
jb
fucomi
push
pop
xor
lock
icebp
ficomps
imul
jle
fstps
sub
push
sub
xchg
dec
push
fdivl
daa
scas
popf
inc
xchg
jb
lahf
jmp
pushf
xchg
in
pop
jo
sub
fldt
push
stos
adc
mov
leave
add
std
loope
ds
sbb
cmp
pop
ficomps
mov
int
loop
shll
mov
sbb
cmpsb
pushf
test
mulb
mov
cmp
fisubs
xchg
mov
int
jns
mov
ds
andb
fisttpl
shrb
outsl
insb
xor
dec
cwtl
adc
out
es
addb
ror
push
dec
fnstsw
insl
jno
out
add
adc
inc
repnz
fs
or
cs
or
cli
push
pop
push
lods
test
lds
int3
out
das
inc
imul
lcall
addr16
sub
mov
addr16
sti
fnstcw
and
scas
mov
mov
mov
mov
das
clc
and
test
sahf
mov
xchg
repnz
push
iret
cltd
sub
push
push
mov
inc
fcoms
jae
loop
mov
push
pop
gs
mov
scas
fimull
jo
hlt
mov
pop
gs
mov
pop
mov
sbb
adc
mov
in
push
repnz
add
jl
push
out
push
push
adc
ret
jne
dec
scas
sub
adc
pop
fmulp
jno
push
sarb
mov
mov
push
xor
xor
fistpl
xchg
in
inc
insb
fwait
jg
dec
sub
dec
mov
xlat
ds
xchg
cmpsl
rorb
test
dec
dec
dec
pushf
pop
jns
lock
inc
inc
aad
jbe
sbb
sub
dec
lds
mov
push
pop
add
mov
xlat
sarb
ret
fiaddl
push
insb
sbb
lcall
push
or
push
std
dec
sbb
in
ficompl
or
push
and
lret
sub
inc
scas
ficompl
mov
icebp
jp
scas
jg
movsb
mov
ss
cwtl
push
in
inc
incb
mov
cmp
das
stos
js
and
cmc
movsb
sbb
outsb
in
push
ret
rcrb
out
inc
pop
push
push
xchg
jl
mov
and
add
push
adcl
cmc
movsl
mov
mov
lods
jmp
jmp
push
pop
xchg
es
in
adc
sub
pop
aam
xor
add
cmpsb
lret
inc
jle
mov
dec
inc
lds
mov
rorl
dec
mov
popa
push
xchg
loopne,pt
adc
sub
or
dec
rep
sub
test
outsb
lea
lods
scas
test
jbe
out
hlt
cmc
lds
leave
push
mov
cmp
in
mov
jbe
mov
mov
adcb
mov
and
pop
jbe
sub
sbbl
push
scas
cmp
std
fdivl
fucomp
jb
mov
fmull
out
mov
aam
xchg
jg
mov
cmp
mov
and
mov
add
jno
out
push
in
adc
std
mov
enter
dec
arpl
pop
jmp
fst
mov
push
jnp
push
pushf
cwtl
adc
test
jle
lret
xchg
inc
add
icebp
fiadds
jp
dec
out
xor
and
xor
xchg
mov
ja
pop
xchg
sub
repnz
cmpsb
inc
ret
jbe
loop
mov
mov
sti
jle
push
out
fwait
and
xchg
sbb
sub
fcoml
mov
mov
ja
xor
push
popa
cmp
stos
ja
lret
adc
imul
cmpsl
inc
pop
jp
xchg
ss
mov
cmpsl
xchg
mov
pop
dec
jge
inc
add
sub
sahf
cwtl
and
cmp
or
xor
pop
cld
daa
xchg
mov
mov
push
add
add
xchg
or
mov
stos
xor
fmul
loopne
test
adc
sub
lret
dec
inc
sbb
aam
inc
jno
fnstcw
ret
jle
cmp
loope
jmp
aad
sbbl
dec
movsl
popa
or
notb
ds
adc
inc
mov
aam
sti
leave
dec
sysexit
sahf
jle
cmp
or
push
dec
daa
popw
and
cmp
ljmp
sub
lcall
mov
testl
and
jp
mov
push
gs
dec
bound
push
aas
ljmp
sub
testl
lock
ficompl
and
repnz
mov
addr16
or
mov
sbbl
mov
jg
data16
imul
sahf
sbbl
xlat
mov
lea
movsb
lods
mov
cmpsl
cmpsb
adc
sbb
sub
xchg
mov
aam
fnop
push
fs
daa
ljmp
mov
jb
loopne
cmp
mov
push
mov
lcall
insl
jnp
int
stos
loope
mov
sub
jmp
add
es
mov
pop
nop
ret
sbb
dec
pusha
scas
add
repnz
mov
adc
stos
push
lahf
push
inc
sti
jle
movsb
or
inc
cmp
cs
aad
outsb
and
push
jbe
pop
add
xchg
xorb
enter
fadds
dec
push
pusha
push
and
push
jg
loope
dec
mov
dec
and
adcb
aas
fistl
cmp
or
test
sbb
pop
out
loop
fisubl
stos
xchg
and
add
pop
mov
lret
mov
push
mov
sbb
into
rcr
shr
loopne
adc
add
xor
and
pop
inc
outsb
jo
pusha
mov
mov
shr
loopne
adc
add
xor
and
pop
inc
outsb
jo
pusha
mov
mov
shr
loopne
adc
add
xor
and
pop
inc
outsb
jo
pusha
nop
lahf
subb
faddp
out
lock
and
adc
stos
test
ds
cmp
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
aaa
push
jge
dec
ds
xor
dec
sub
test
std
mov
mov
std
into
popf
out
jp
jge
jge
pop
cs
jle
push
out
std
mov
mov
into
popf
out
je
fs
push
ds
cs
and
adc
sahf
imulb
orb
popf
sbb
push
xor
and
cmc
in
push
jge
sti
add
xor
fstps
xchg
mov
dec
lock
dec
stos
ljmp
fs
add
stos
ror
adc
ljmp
push
jge
add
lahf
sub
cmp
pop
lea
add
lret
clc
into
daa
jnp
push
mov
push
jns
std
sub
adc
nop
fldenv
jno
cmp
xor
hlt
je
lea
pop
adc
sub
sbb
popa
add
fadds
stos
pop
lea
lea
shrb
pop
mov
in
jbe
sub
popl
fnsave
inc
fdivrl
insl
popf
sti
lods
push
jge
dec
ds
cs
jle
outsb
hlt
sahf
in
aad
les
incb
sub
cmp
dec
cmp
cmp
stos
call
jnp
imul
pop
cs
xor
popa
pop
pop
or
aad
testl
test
addl
pop
dec
push
jo
dec
or
sahf
std
mov
mov
mov
out
insl
push
jge
dec
ds
cs
jle
outsb
in
sahf
std
mov
mov
mov
out
insl
push
mov
in
add
adc
ret
ja
adc
adc
or
stos
shlb
fs
test
push
lahf
test
mov
and
fsubl
add
sub
sbb
mov
push
aam
inc
pop
popf
and
jnp
add
jne
or
int
push
imul
leave
scas
mov
testl
leave
or
adc
mov
push
mov
pop
js
pop
jnp
in
push
addb
dec
add
mov
sbb
hlt
and
push
hlt
or
pop
sbb
xchg
imul
push
jmp
mov
incb
pop
ret
ja
insl
jge
sbb
sbb
xor
push
mov
xorl
adc
movsb
and
aas
shll
pop
scas
ret
cmpsl
adc
add
ja
popa
in
fcoml
xor
adc
mov
mov
mov
push
dec
jl
xchg
iret
jmp
sbbb
scas
mov
push
imul
fiaddl
into
add
mov
xchg
fsubrs
stc
in
fs
cmpsl
and
mov
and
inc
dec
sbb
arpl
cld
cmpsb
mov
or
cmp
pop
shlb
fadd
xchg
pop
lret
loopne
pop
outsl
mov
fnstenv
std
in
lods
jmp
mov
jl
imul
jae
clc
mov
xlat
xchg
pusha
mov
jb
stc
repnz
jns
stos
out
dec
sub
pop
xchg
test
cmp
cmc
cli
sbb
cmpsb
ss
hlt
sub
lcall
mov
lret
fisubs
jns
adc
cmp
daa
sub
in
sbb
outsb
arpl
int
pop
ficomps
push
lret
aad
test
pop
adc
push
subb
loop
mov
dec
xorb
dec
push
orb
out
jmp
push
icebp
adc
out
xlat
loope
push
orl
lods
push
push
mov
mov
adc
scas
and
mov
sahf
jns
movsb
adc
add
in
pop
pusha
mov
push
repz
adc
inc
arpl
dec
iret
rclb
lods
addb
cwtl
test
stc
jmp
aam
jns
sbb
push
add
mov
and
ss
nop
addr16
pop
xchg
cltd
mov
inc
push
je
mov
dec
push
int
aad
or
inc
mov
inc
push
call
dec
rorl
test
sub
ror
dec
cltd
pop
pop
scas
lcall
xchg
xchg
loope
pop
mov
xchg
jp
dec
sahf
adc
cmpsb
fcmovb
jns
xchg
nop
mov
in
dec
add
mov
sbb
insl
and
inc
in
pop
mov
cmpsl
xchg
out
sub
lret
repz
pop
mov
pop
in
loopne
call
and
and
xchg
ret
aad
cmc
mov
rorb
in
adcl
cwtl
adc
das
popl
fidivl
jg
mov
inc
jno
mov
jge
xchg
xor
xchg
loop
repnz
lret
pop
adc
mov
inc
jno
pop
jg
and
in
scas
sub
lret
into
push
call
cs
lea
cwtl
cmc
xchg
loop
mov
mov
mov
ljmp
push
xlat
lods
cmpsb
lods
jp
jmp
push
adc
pop
imul
xor
sbb
and
push
inc
andl
pop
xor
sbb
push
in
cmpsb
xorl
in
mov
or
fsubl
fcomip
mov
mov
inc
adc
push
outsb
lods
pop
pushf
push
mov
dec
mov
adc
pop
or
xchg
out
xorl
jmp
mov
pop
mov
inc
push
sahf
stos
dec
and
xchg
fldcw
fwait
mov
clc
xor
cld
notb
push
pushf
pop
cmp
ror
jne
fdivrl
mov
add
fs
mov
push
adcl
mov
cli
shlb
and
mov
or
jp
test
aaa
ret
in
xor
inc
push
dec
dec
lret
in
pushl
inc
pop
adc
sahf
rcrb
fmull
leave
mov
ret
test
add
rorl
repnz
adc
push
xor
ret
and
push
mov
pop
outsl
sub
in
icebp
sti
cld
lcall
shrl
adc
int
mov
popa
cmpsb
sbb
mov
int3
int3
dec
repz
xchg
sub
fdivrp
push
fadds
mov
dec
xor
mov
test
lods
arpl
insb
sub
enter
pop
cs
clc
cltd
adcl
xor
mov
add
sahf
jmp
dec
or
and
jo
cmp
xchg
xchg
ret
in
andl
jb
pop
sbb
lds
gs
mov
push
mov
xchg
int
test
int
lods
nop
mov
js
jo
xchg
mov
cmpsb
test
mov
and
sub
add
and
repz
clc
in
out
mov
pop
idivb
dec
or
pop
jle
fcmovne
mov
sub
in
or
cmpb
sbb
inc
inc
aad
iret
mov
mov
mov
mov
xchg
pop
mov
mov
sbb
ret
cli
xchg
mov
aam
jne
repz
lret
scas
cmpsl
xchg
int3
jmp
dec
jmp
add
loopne
xor
push
xchg
sbb
pop
test
out
cmc
sub
shrb
sti
out
push
or
in
fistl
out
cmp
xor
jbe
pop
lock
pop
test
cmpsl
adc
dec
sahf
cld
out
cmc
or
mov
test
out
std
call
stos
das
inc
andl
mov
cmp
push
push
sbb
lea
sub
loopne
loope
das
mov
and
jnp
testl
mov
sbb
xchg
jecxz
mov
ret
and
test
test
ret
in
rorl
cmp
sbb
shlb
insl
dec
mov
jb
sbb
lock
fs
pusha
ret
mov
rol
pop
xchg
jns
jge
mov
out
jbe
or
insb
inc
dec
push
mov
fnstcw
jnp
xor
enter
dec
mov
mov
bound
mov
aas
mov
cmp
push
cmp
lock
sti
mov
bound
adc
ffreep
xchg
shrb
dec
add
mov
mov
sbb
idivl
jae
add
mov
inc
or
ds
mov
jp
ret
in
mov
sub
cli
cmp
clc
xor
push
aas
sub
push
xchg
clc
adc
and
std
orb
xor
cmp
in
lea
pop
sbb
xor
push
scas
imul
push
scas
not
xchg
dec
xchg
inc
cli
xor
fimuls
das
fnsave
ret
jae
and
mov
jmp
bswap
cmpsl
stc
mov
outsl
xor
jo
pushf
scas
arpl
xor
nop
mov
lcall
inc
outsl
xchg
int
push
push
mov
pop
add
mov
mov
sbbl
xor
jmp
pop
jae
push
or
ficoml
pusha
jle
js
lea
inc
cmp
pop
sub
jge
imul
std
andb
movsb
sbb
in
test
mov
icebp
dec
je
insl
ds
das
addb
and
cltd
repnz
or
xchg
jecxz
ret
popl
jb
mov
sbb
inc
lods
scas
lcall
stos
mov
in
mov
xor
rorl
or
cltd
mov
jp
xchg
push
dec
lock
dec
test
cmp
add
sbb
sub
popf
das
icebp
or
loopne
pushl
push
rorb
push
xor
push
pop
adc
gs
sub
lods
loope
fcompl
lea
xchg
inc
loopne
popa
fstps
mov
lods
or
jmp
in
push
jp
mov
stos
jp
mov
sub
cmp
and
or
mov
sbb
pop
dec
adc
add
mov
inc
les
sbb
lahf
addr16
loop
adc
push
or
repz
mov
pop
xchg
jae
add
xchg
pop
sub
mov
fcmovnu
adc
sbb
dec
jecxz
imul
sbb
jbe
cmc
jecxz
shlb
pushf
xor
sbb
add
cltd
inc
test
das
pop
nop
mov
inc
add
les
push
jnp
sub
or
cmp
js
pop
mov
cmp
out
fbld
inc
std
adc
add
xor
cmp
push
test
fistps
xchg
push
popf
leave
aaa
adcl
mov
out
mul
lcall
jmp
or
add
cs
out
push
les
push
mov
dec
pop
cmpl
jmp
push
inc
jmp
nop
cli
aas
sarb
inc
mov
stos
jns
shll
ljmp
add
gs
mov
scas
jecxz
testb
sbb
jbe
repz
lds
pop
call
xor
xchg
lret
and
insb
out
out
lret
insb
inc
outsl
ret
sub
fiadds
cli
sub
int3
testl
outsb
dec
mov
arpl
bound
mov
inc
inc
push
sti
xchg
aas
fisubl
lahf
jg
jp
pop
add
loopne
sbb
rorb
in
dec
or
pop
out
push
mov
mov
je
dec
or
lret
int3
sbb
rcll
mov
sub
movsl
sbb
popa
test
jne
fwait
jmp
sti
aam
test
mov
jle
leave
loopne
dec
push
mov
repnz
mov
pop
push
mov
inc
sbbl
jecxz
or
sbb
cmc
icebp
out
push
jne
fisttpl
cmpsl
push
add
dec
xor
mov
rorb
or
std
cli
push
loopne
insb
out
jle
fstp
and
insb
pop
std
in
dec
push
aad
out
jecxz
xchg
movsb
cmp
fistps
jno
cld
dec
jae
mov
sti
testb
push
in
arpl
std
lgdtl
imull
int
pop
jp
mov
push
add
scas
call
push
imul
jge
scas
add
lock
lea
fsubp
push
test
mov
mov
loop
pop
jle
sub
js
dec
roll
lret
ret
movsl
addr16
push
pop
fmul
aas
jb
es
popl
stos
adc
mov
movsl
add
jmp
rclb
and
loope
lea
testb
push
and
inc
test
xchg
jno
dec
mov
ss
xor
mov
in
push
jbe
jnp
call
xor
or
mov
mov
icebp
xor
orl
mov
imul
aaa
out
cmp
dec
xchg
daa
or
loop
popa
dec
cs
fadd
aas
addb
sbb
xchg
fmull
dec
mov
mov
aam
add
mov
and
or
cmp
fsubr
jbe
sbb
cmpsb
cmpsb
in
popf
inc
pusha
and
adc
mov
ds
dec
push
fs
pop
cwtl
ror
sti
push
hlt
test
call
sbb
mov
dec
dec
push
sbb
lcall
jb
hlt
insl
scas
pop
inc
dec
inc
ja
sbb
pop
subb
imul
fdivr
ret
inc
lret
shrb
movsl
or
nop
sub
xor
push
repnz
mov
movsb
jbe
pop
and
mov
inc
adc
pop
ja
mov
test
rcrb
scas
into
push
clc
clc
shl
clc
push
jns
inc
mov
jns
test
lods
stos
mov
add
into
jl
mov
or
pusha
adc
ret
js
mov
push
mov
jbe
pop
bound
jae,pn
xchg
add
jp
jmp
or
sti
pop
or
jmp
ja
mov
lds
aaa
stos
xor
ret
inc
mov
fisttpll
movsl
pushf
ret
in
sbb
cmc
pop
loop
fcmovnbe
enter
repnz
xchg
sbb
or
mov
repz
adcb
push
jmp
xchg
xor
adc
gs
pop
je
xchg
pop
or
into
aaa
mov
out
mov
or
ljmp
int
aam
dec
inc
mov
xchg
jnp
test
and
sbb
adc
pop
dec
mov
in
ficoml
pop
mov
out
and
mov
cmp
xor
push
in
mov
loop
aas
dec
imul
test
mov
sbb
xchg
repnz
cmp
inc
cmp
mov
and
sub
je
and
cmp
loope
out
and
pop
mov
insb
imul
movsl
dec
pushf
aad
int
dec
cwtl
dec
or
aam
or
push
lret
push
push
shl
xchg
jl
fst
dec
xor
or
mov
pop
rcrb
out
test
ficompl
add
cwtl
ljmp
jmp
and
mov
mov
jae,pt
sub
push
sub
mov
xchg
xchg
mov
inc
fidivrs
jo
dec
xor
mov
and
aaa
lds
inc
ret
mulb
jno
jle
cs
adc
mov
add
jmp
cmc
jno
mov
dec
mov
clc
pop
enter
mov
pop
dec
and
sub
idivl
cmp
cmp
xchg
jmp
in
cmc
outsl
icebp
and
jnp
pop
add
mov
lods
int3
add
movsb
mov
sub
cld
cmp
int3
mov
xchg
mov
cmc
fs
sbb
std
or
imul
mov
jns
ret
addr16
mov
and
mov
cmp
loop
test
ficoms
test
xor
cmpsl
mov
in
fbstp
xor
je
push
mov
jno
lret
insl
xor
lds
mov
int3
mov
aam
cmpsb
mov
mov
stos
inc
adc
dec
jne
lret
xor
mov
in
nop
bound
and
aad
insl
cmp
mov
jnp
adc
cmp
inc
rcll
or
cmpb
outsl
and
stos
imul
ja
jp
sub
jge
repz
mov
stos
inc
dec
mov
pushf
or
or
enter
ss
lret
sbbb
adc
lret
call
stos
mov
fcmovbe
and
and
arpl
es
mov
xchg
subb
mov
xchg
pop
hlt
aaa
mov
push
mov
mov
jbe
and
shll
mov
movsb
or
test
fs
mov
adc
adc
jmp
int3
test
inc
inc
push
fcoml
and
xchg
lods
and
sbb
fsubrs
ljmp
mov
sbb
lods
push
andl
iret
stc
pop
sbb
cmp
inc
xchg
sahf
adc
cmp
test
enter
data16
lret
inc
mov
rcr
sub
push
lcall
pop
xchg
or
lock
loope
mov
int3
mov
mov
pusha
insb
in
mov
aas
or
frstor
out
test
in
movsb
push
out
outsl
out
ja
repz
xlat
movsl
push
push
sub
inc
jge
dec
dec
mov
dec
xchg
mov
xchg
pop
xchg
mov
jnp
xchg
arpl
mov
js
and
cmp
jl
imul
jns
iret
ror
or
jecxz
xchg
orl
push
xlat
jge
insb
push
mov
ljmp
popf
popa
stc
fstpl
and
push
mov
adc
ss
lds
rep
mov
mov
loope
out
add
mov
sbb
lea
xor
add
sti
inc
jp
cmp
xchg
es
mov
cmpsl
lcall
pop
jbe
rcrb
js
mov
cmpsl
mov
sbb
mov
lahf
cli
sbb
push
aad
push
adc
jge
add
cmp
ljmp
mov
int3
inc
dec
jo
mov
fdivl
jle
test
mov
repz
in
xlat
cmpsl
test
ret
aad
cmp
insb
lcall
mov
adc
insb
mov
addr16
adc
lds
push
fdivl
adc
jmpw
in
add
aas
jbe
push
cli
movsl
xchg
mov
xor
roll
mov
cmp
mov
iret
mov
ss
mov
stc
mov
dec
es
sbb
inc
addb
or
mov
mov
test
pop
mov
mov
pop
push
pop
add
fstps
cltd
enter
adc
scas
xchg
or
daa
repnz
shll
sub
push
stc
cwtl
je
mov
loop
cltd
ss
lret
fwait
les
sahf
pop
or
sbb
imul
nop
imul
sahf
cld
in
add
aad
sub
mov
in
ja
xlat
clc
push
mul
enter
int3
arpl
inc
pop
cmp
leave
add
add
or
ss
nop
imul
outsl
sbb
scas
jmp
dec
inc
push
outsl
gs
outsb
inc
push
sub
pop
cld
push
push
xor
jg
mov
mov
adc
jp
xadd
lea
push
js
jmp
inc
pop
scas
push
or
test
mov
out
pop
cld
cmp
hlt
and
stos
mov
in
cmp
and
mov
jle
dec
aaa
jmp
sub
xchg
mov
push
data16
cmpb
and
cli
push
xor
cmp
and
pop
out
repz
sbb
or
push
jae
and
mov
push
cmpsl
adc
push
jne
xchg
push
rorb
in
and
stos
in
outsl
lds
ljmp
jns
xchg
movsb
mov
fnstcw
ret
xchg
fisttpl
fmulp
test
mov
xchg
xor
pop
sarb
lods
fnstcw
aas
xlat
mov
pop
in
ffree
mov
aad
shlb
mov
mov
adc
insb
xlat
mov
add
or
and
mov
add
arpl
nop
repz
fprem
mov
or
dec
popf
insl
cwtl
movsb
pop
push
xorl
inc
popa
addl
adc
cltd
repnz
jl
lcall
pop
xor
bound
lods
mov
pop
and
jl
nop
xchg
xchg
sbb
xor
int3
mov
cmpsb
cmp
fisubl
add
stc
fsts
mov
dec
in
and
ss
int3
mov
sub
dec
xor
lahf
and
mov
cmc
push
lods
lods
sub
sub
mov
mov
movsb
pop
dec
dec
lahf
std
pop
xor
mov
outsl
lret
xor
lods
insl
jg
add
xchg
sbb
in
and
mov
mov
fs
fucomi
dec
in
fucom
cmp
push
mov
jecxz
repz
jb
add
mov
jge
inc
pop
cltd
cmpsb
cmp
sbb
std
dec
lea
mov
repnz
lds
pop
push
inc
test
out
push
nop
test
xor
mov
xchg
pop
sarb
not
aas
cmp
mov
xor
cmc
jbe
loopne
test
sbb
clc
bound
sbb
int
out
dec
dec
rolb
test
jmp
popf
dec
out
xchg
sbb
insl
mov
cli
xchg
sbb
clc
fnsave
dec
jns
push
dec
leave
cli
xlat
jnp
cmp
lahf
xchg
cld
out
pop
xchg
rclb
clc
in
fistl
dec
lea
aas
popa
iret
dec
xchg
outsb
or
into
mov
push
rol
sub
xchg
or
mov
pop
sarb
mov
mov
nop
jnp
out
xlat
jns
jbe
mov
insl
mov
xchg
mov
mov
je
cmpsb
repz
jns
or
jg
test
test
addr16
ret
in
pop
and
movb
sub
addb
arpl
mov
sub
test
int3
mov
xor
and
inc
mov
ficoms
sbb
push
lcall
and
mov
dec
adcb
xlat
addr16
pop
into
push
mov
pop
cmp
pop
push
out
fimull
and
fisttps
test
pop
push
scas
ds
cs
jle
outsb
in
sahf
std
mov
mov
mov
out
insl
push
jge
dec
ds
cs
jle
outsb
in
sahf
std
mov
mov
mov
out
insl
push
jge
dec
ds
cs
jle
outsb
in
sahf
std
mov
mov
mov
out
pop
push
dec
push
jnp
pop
cs
jle
outsb
adc
fstp
ficoml
xor
bound
inc
sbb
pusha
cmp
sub
jge
sub
ret
pop
rolb
sbb
and
sbb
or
cmp
sub
pop
adc
xor
pushf
rorb
repnz
int3
mov
mov
jo
add
and
pop
rcrb
orb
mov
xor
outsl
sbb
push
inc
mov
mov
jae
testl
add
cmpsl
lods
pop
scas
iret
lahf
dec
roll
dec
adc
faddl
pop
jo
inc
paddb
leave
nop
xchg
divb
mov
or
fcoml
ret
mov
jle
lds
das
sbb
and
mov
inc
sbb
or
cmp
push
mov
pop
insb
add
lods
ror
nop
inc
pop
add
nop
adc
aad
in
sar
outsl
xor
mov
fcomp
insl
pop
jnp
shlb
mov
jl
test
pop
dec
cld
sub
fwait
mov
xchg
xchg
fcoml
push
fs
mov
mov
adcl
sub
pop
adc
xor
rcrb
and
and
sbb
arpl
push
ss
gs
jg
dec
or
xchg
sbb
mov
ss
and
add
inc
gs
pop
push
gs
mov
popf
out
lock
ja
cmc
int3
leave
cltd
ficompl
es
adc
dec
and
rcrb
sbb
int3
mov
sbb
or
cmp
sub
pop
adc
xor
rorb
fcoml
in
inc
sbb
pop
std
inc
cmpps
loop
jo
scas
push
jae
add
fildll
mov
jb
das
ljmp
sbbl
sub
inc
mov
xor
imul
movsb
mov
sub
push
cmp
je
fcomi
movsl
idivb
xchg
aam
mov
out
js
testl
sub
jle
dec
push
rcll
ret
adc
xor
push
sbb
aaa
pop
nop
fmul
sub
or
pop
jb,pt
adc
inc
imul
aad
data16
mov
mov
jnp
push
mov
jmp
mov
and
mov
push
test
jmp
jo
xchg
scas
outsl
add
sbb
es
ret
mov
iret
mov
adc
add
and
sahf
mov
addb
xor
xchg
or
in
dec
cmp
push
scas
fisttps
leave
loop
outsl
cli
insb
mov
dec
cmpsl
cmpsb
aad
adc
outsl
lcall
imul
out
mov
inc
push
mov
popa
sbb
sub
in
xchg
clc
pop
push
negb
jo
aaa
int3
cmpsb
jne
xor
jmp
dec
cmp
out
fildll
fs
pinsrw
mov
fistpl
dec
js
push
addr16
and
lret
pop
xchg
dec
int3
leave
or
shrl
jl
stos
lret
sti
fs
fadd
int3
push
fisttpll
adc
adc
lcall
or
mov
or
shl
in
loop
mov
sarl
int3
outsl
rcr
js
fmull
mov
mov
jnp
andb
ss
adc
xchg
cld
dec
and
jle
sarl
sbb
loopne
dec
ds
sub
push
test
lcall
stos
addr16
cs
push
mov
pop
push
fldt
stos
insl
add
inc
xor
test
ret
xlat
jne
mov
cmc
mov
nop
cmc
in
cmp
int
fsubrp
mov
mov
outsb
cwtl
mov
add
cmp
jb
fwait
push
mov
sbb
shlb
mov
pop
push
dec
mov
sub
ja
jne
aaa
lret
adc
mov
jl
sbb
je
lret
imul
loope
call
stos
push
sbbb
or
andl
pop
fdivr
shll
xchg
std
cli
out
nop
andb
sti
lds
aam
push
inc
pop
cmp
xor
ds
fistpl
in
cmp
ja
popa
xor
inc
sub
or
push
les
mov
adc
test
adc
andl
xor
cmp
push
xchg
push
cmp
arpl
pop
lds
paddusw
mov
xchg
loopne
pusha
push
aad
into
pop
or
jae
sub
lret
sbb
push
pop
mov
test
sahf
xchg
jbe
inc
mov
fs
sub
inc
je
ss
iret
in
jno
addr16
lcall
adc
stc
inc
mov
xchg
fisubrs
lcall
fldl
pop
sarb
inc
push
dec
and
xchg
and
push
out
insl
cmc
push
cmp
jg
mov
outsb
add
das
jns
lock
xchg
mov
pop
lcall
mov
and
iret
mov
fcomip
jl
test
sti
xlat
inc
call
jle
test
scas
jno
stos
mov
popf
fildl
aad
cwtl
stos
adc
pop
jle
adc
jg
or
xchg
movsl
dec
fwait
or
insl
imul
std
or
repz
fldln2
mov
inc
icebp
aaa
jno
lock
stc
inc
lea
in
popa
testb
int
je
fdivrl
push
adc
jb
mov
sub
lea
xchg
pushf
out
stc
repnz
rorb
enter
add
or
stc
pop
push
pop
call
cmpsl
adc
jg
bound
sbb
pop
jmp
lahf
adcl
or
or
mov
inc
adc
aaa
mov
xchg
mull
cli
and
in
pushf
mov
push
outsl
jnp
push
dec
xchg
orl
sub
pop
pop
pop
inc
cwtl
inc
lods
imul
xchg
jecxz
add
setl
repnz
jb
add
inc
push
sub
addr16
and
insb
lods
jbe
addr16
adc
fs
outsl
loope
cltd
std
adc
sub
jnp
sub
addb
sub
outsl
pusha
xor
push
iret
jl
xor
mov
aad
and
jne
mov
mov
mov
out
fucomip
sub
xor
mov
cli
lds
outsb
insb
pusha
push
xor
ror
ficoms
mov
mov
jbe
sbb
mov
mov
and
dec
add
sti
jp
or
xlat
mov
mov
decl
movsb
aaa
mov
hlt
jmp
jp
insl
dec
iret
daa
pop
inc
repnz
inc
push
mov
mov
jmp
or
mov
inc
cwtl
push
movsb
out
xchg
sar
insb
stos
adc
xchg
aad
mov
fisttpll
iret
cmp
inc
fisubl
pop
les
es
xchg
pushf
ficoms
test
lock
xchg
adc
ss
jg
cmp
cs
lcall
mov
bound
inc
xor
scas
dec
dec
loop
push
das
mov
cld
outsb
and
insl
xchg
sub
inc
outsb
dec
std
jae
mov
js
lods
dec
adc
mov
push
stos
dec
mov
dec
sub
cs
in
push
or
cmp
xchg
pop
repnz
lea
push
stos
nop
push
dec
xchg
loopne
lods
aas
xchg
and
loopne
imul
js
dec
and
bound
jp
test
xchg
leave
dec
rol
repnz
push
jp
insl
sub
xchg
mov
mov
add
lods
push
clc
xchg
mov
jge
jo
out
and
and
jno
pop
pop
or
imul
adc
shll
mov
mov
jg
std
inc
subl
sub
es
sahf
or
pop
aam
divl
xorl
mov
sub
stc
mov
push
xchg
mov
fcoms
scas
push
jo
pop
push
data16
mov
pop
push
xchg
add
mov
cmp
test
mov
mov
mov
mov
or
xor
in
jmp
add
cmp
jo
hlt
out
xchg
fsubrl
push
add
aam
into
lods
push
out
push
jl
cmpsb
cmp
cmp
fildll
mov
xor
addr16
pop
movsl
ljmp
and
xorl
mov
gs
sarb
stos
push
rcrb
repz
fdivrl
cmp
ja
insl
bound
aaa
mov
into
sub
jo
inc
sti
daa
xor
cmpsl
cwtl
xor
dec
fbld
pop
mov
push
jp
inc
rcr
into
sub
add
dec
in
pop
xor
jle
jbe
mov
mov
ret
jle
ret
das
cmp
xchg
nop
xor
xchg
push
and
pop
scas
inc
cmc
fstps
insl
inc
pop
jmp
and
lock
pop
sbb
pop
push
inc
add
jo
adc
test
sub
out
or
and
andl
push
dec
push
cmpsl
ret
mov
push
adc
popf
push
fdivrs
xchg
mov
push
dec
dec
mov
fwait
jo
js
and
sahf
lahf
pop
fs
aaa
cmpsl
push
push
or
inc
nop
shl
das
test
pop
negb
mov
add
fdivl
cmp
movsl
adc
orl
cli
shl
sbb
nop
push
scas
xor
fisttpl
mov
add
lret
mov
in
loope
loope
xor
je
or
pop
xor
js
adc
lahf
into
out
mov
xchg
cld
lahf
pop
call
adc
adcb
mov
jge
lock
xor
push
hlt
lahf
movsl
or
repz
adc
xor
jmp
cmp
fsubs
dec
daa
cs
stc
and
or
lds
cmpsl
inc
in
gs
repz
jns
stc
jp
out
fdivrs
mov
xchg
jmp
fs
stos
and
sub
in
cmp
push
js
inc
xlat
jecxz
lock
lods
stc
push
xchg
outsl
sub
loope
outsb
loopne
imul
mov
mov
std
push
push
jb
mov
addr16
loop
leave
cmp
jae
es
push
mov
lret
sub
aam
movsb
xor
inc
jno
out
lret
or
pop
xchg
lret
pop
repnz
loope
cld
js
frstor
cmp
outsl
pop
push
or
mov
icebp
mov
je
sbb
mov
lret
ljmp
or
xor
mov
testl
adc
pop
jbe
cmp
dec
mov
xchg
out
jne
icebp
jo
stos
adc
adc
sub
pop
mov
mov
pop
adc
pusha
pusha
xchg
xchg
inc
add
push
jge
pop
mov
test
push
adc
xchg
pop
add
jmp
xor
jp
push
in
push
into
mov
cmp
ljmp
inc
mov
inc
mov
stc
pop
out
int
jno
sbb
push
sahf
push
and
and
xor
jns
andl
mov
adc
arpl
push
or
sub
sbb
cli
mov
pop
aad
push
daa
call
sbb
imul
rorb
lock
outsl
arpl
flds
jmp
mov
bnd
cmp
movsl
aaa
or
jne
fnstsw
pop
pop
jno
sub
dec
xchg
pop
mov
test
jg
and
sbb
mov
imul
not
sub
nop
lock
fldcw
or
sbb
jo
sub
sbb
das
call
sbb
std
xchg
xor
test
mov
push
cmp
scas
jns
mov
aad
or
imul
inc
dec
inc
dec
fdivrl
fmulp
fdivl
popa
push
mov
into
xchg
sar
ret
inc
jne
sbb
cmc
shlb
cmp
mov
div
dec
inc
imul
add
pop
rcrb
adc
fistpl
mov
andb
gs
cmp
pop
imul
mov
fsub
push
xchg
imull
aad
sbb
dec
popf
mov
aam
es
out
mov
add
and
imul
ret
inc
repnz
arpl
add
jb
inc
jne
jo
xchg
mov
out
sbb
rclb
gs
mov
pop
mov
dec
into
jbe
add
ljmp
fimuls
jno
add
mov
jae
movsb
fwait
sub
or
mov
js
call
icebp
and
inc
negl
std
mov
dec
cmp
test
test
xor
outsl
cmp
imul
in
repz
outsb
ret
lods
movsl
cmp
and
ficompl
pusha
addr16
mov
rorl
shlb
es
push
iret
mov
and
int
div
lcall
push
cwtl
hlt
adc
mov
sub
fldl
sub
outsl
inc
sub
or
mov
shll
out
arpl
loope
mov
pop
mov
jp
fimull
pop
pusha
push
sbbb
xor
movsl
test
xor
fdivs
jo
ss
leave
xor
stos
sbb
scas
fists
jbe
and
mov
push
xor
mov
pop
mov
pushf
lock
test
jecxz
popl
add
adc
push
test
mov
jmp
sbb
pop
xchg
cmp
push
mov
cwtl
insb
leave
into
fdivrs
clc
jge
jmp
shrl
fdivrl
enter
in
add
aas
stos
cmpl
rcrb
lret
insb
je
pop
stos
and
pop
movsb
icebp
mov
push
subb
sbb
sbb
sbb
or
shrl
call
int
aas
mov
xor
hlt
cld
mov
pop
rol
test
adc
cmp
lea
call
fcomip
rcrl
cmpsb
sbb
aaa
test
and
popa
fidivs
mov
dec
cs
mov
daa
stos
scas
bound
lret
cmpsb
cltd
add
adc
imul
lods
imul
cwtl
sub
jns
stc
decl
das
push
inc
inc
es
out
jbe
dec
repz
mov
clc
std
aaa
ficoml
pushf
and
mov
mov
out
idiv
sti
jb
mov
inc
push
xchg
and
lret
jns
jle
push
ja
jae
pop
pop
loopne
dec
push
lahf
mov
std
jns
lcall
push
subb
lods
movsb
call
mov
xor
popa
fwait
xchg
lods
jge
xchg
xchg
adc
repnz
mov
mov
xchg
mov
fcoms
mov
dec
mov
sbb
mov
cs
jl
mov
repz
test
and
sub
ljmp
out
inc
sub
loopne
mov
sbb
stc
mov
or
dec
adc
insb
out
stos
dec
pusha
out
and
arpl
divb
xchg
add
fisubl
into
ja
jge
pop
cmpb
incb
jae
and
pushf
mov
in
push
mov
loop
in
push
mov
jp
adc
mov
in
inc
decl
sarl
data16
cld
out
jmp
sub
inc
repnz
jne
mov
stos
frstor
xor
mov
pop
xor
or
sbbb
mov
sub
jnp
sbb
or
jg
cmp
fs
xlat
jmp
jo
jmp
mov
sub
adc
push
adc
enter
mov
rolb
ljmp
sub
pusha
fdivl
dec
inc
xor
sub
pusha
dec
push
sbb
cltd
cmpl
dec
js
test
les
xchg
addb
adc
cmp
mov
sub
mov
and
add
cmp
jnp
dec
adc
dec
jbe
decb
jmp
adc
inc
add
pop
js
movsb
push
add
or
and
daa
leave
pop
pop
mov
cmp
ret
arpl
mov
aas
pop
jmp
std
lret
and
adcb
out
add
cmp
xor
push
push
dec
xchg
or
jbe
mov
cmp
roll
xchg
cmp
lea
jge
lahf
outsl
xchg
mov
sbb
movsl
or
ljmp
subb
sahf
lret
mov
lods
sbb
ja
leave
cwtl
sti
ret
adc
xor
mov
xor
cmp
inc
vpmovm2b
sbb
aad
inc
cld
mov
divb
and
pushf
add
pushf
outsb
push
imul
shl
inc
mov
in
insb
out
test
sarl
and
xor
insl
or
ja
mov
mov
adc
imul
pushf
neg
insb
call
dec
aam
nop
dec
mov
pminub
lods
fistpl
shll
roll
dec
xor
enter
mov
cwtl
push
mov
cmp
mov
repnz
iret
fcompl
subl
push
mov
cs
mov
insl
pop
addb
mov
inc
insl
iret
adcb
pusha
test
insb
out
adc
aam
stos
mov
inc
iret
push
call
call
cmp
js
mov
arpl
jl
dec
sbb
jb
or
es
pushf
fstl
arpl
mov
sub
mov
jle
inc
sub
out
lret
mov
xor
jo
pop
cmp
les
sbb
cmp
popf
repz
push
jl
fidivrs
cmc
mov
mov
shlb
adc
mov
fldt
ljmp
jne
cli
jge
sbb
in
jo
inc
xchg
push
shll
push
iret
mov
xchg
dec
xor
and
mov
stos
push
movsl
cld
add
lcall
push
orb
sub
cmp
data16
jp
mov
in
lret
ljmp
inc
stc
adc
popf
call
test
mov
xchg
sarb
mov
test
push
shrl
sbb
sbb
push
pusha
and
mov
cmp
andl
in
jb
mov
imul
fnstcw
or
cld
mov
es
mov
decl
xchg
enter
fidivl
sub
adc
lahf
adc
sub
push
int3
or
lcall
mov
or
inc
outsb
outsl
sbb
mov
xchg
or
mov
rorl
sub
xor
lods
jg
int
insb
ds
fistpll
test
rorb
es
fdivs
outsl
testb
sub
add
inc
pop
les
fsubl
pop
decl
nop
push
test
sbb
lret
sub
inc
loopne
lock
cmp
xchg
std
repnz
lret
pop
and
call
fdivs
cmp
in
push
inc
and
icebp
into
cmc
sbb
inc
pop
daa
mov
testb
pusha
jne
xchg
insl
dec
xchg
addr16
fnstsw
lock
ret
out
adc
push
push
or
aaa
pushf
nop
sbb
imul
mov
enter
int3
lret
ja
jb
and
iret
and
xchg
jae
and
sti
sbb
push
ret
pop
ficomps
inc
icebp
arpl
cmpsl
aam
inc
movsl
ret
hlt
cs
sbb
leave
xor
orb
sbb
fs
clc
add
rep
fadds
ret
cmp
into
lods
std
sti
lock
inc
mov
out
gs
push
push
lods
shll
push
xor
mov
push
test
popa
rolb
sbb
inc
lds
ret
in
xor
cwtl
outsb
mov
lock
xorb
adc
orb
inc
outsb
jge
sarb
lret
lods
mov
sbb
inc
out
dec
fimuls
mov
cmp
mov
jne
inc
or
mov
and
lret
push
pop
adc
and
dec
jae
jne
or
push
test
push
lahf
dec
xchg
sbb
rcl
stc
mov
outsb
dec
pop
mov
xchg
daa
cmc
loop
push
sbb
pop
xor
rorl
or
or
cmp
dec
fisubrl
loop
in
jae
and
mov
ss
xchg
sub
movsb
add
cmp
jo
inc
pop
mov
dec
scas
adc
and
add
dec
mov
xor
adc
dec
jl
push
push
imul
xadd
and
insb
iret
daa
lahf
rorb
mov
fildl
lcall
bound
lods
in
pop
inc
dec
fcomip
mov
std
jne
xchg
shll
test
repnz
mov
stc
inc
dec
mov
jo
mov
cwtl
lods
dec
mov
data16
in
cwtl
shr
aaa
pop
bound
popf
pop
mov
rolb
cmp
out
xchg
faddl
jmp
or
inc
xchg
sub
lcall
sub
les
cmc
fistpl
mov
mov
insl
imul
ljmp
push
mov
int
jns
push
inc
mov
xor
arpl
jecxz
loopne
aas
and
pop
pop
jo
adc
mov
ja
test
mov
in
mov
bswap
mov
mov
mov
pop
jno
scas
jmp
mov
aam
mov
test
rclb
xor
dec
pop
fists
inc
sub
fldenv
ljmp
xor
lods
jne
dec
orb
add
not
test
mov
in
les
cmp
pop
add
out
mov
adc
setp
sbb
movsl
push
pop
push
lahf
or
dec
ret
jb
inc
cli
adc
xchg
and
in
xor
or
gs
or
xchg
leave
and
mov
rcr
pushf
sbb
stos
repz
ss
arpl
cmpl
xchg
add
repnz
push
mov
out
pop
cmp
push
call
add
or
cmp
add
and
rcrb
sbb
int3
mov
sbb
or
cmp
sub
pop
adc
xor
rorb
fcoml
in
inc
sbb
pusha
and
sub
pop
adc
and
insb
rcrl
movsl
sbb
int3
mov
clc
push
call
add
mov
arpl
es
mov
sbb
mov
push
cli
push
pop
enter
call
mov
movsl
test
mov
addr16
aaa
sbb
enter
pushf
xlat
clc
mov
cwtl
cmpsl
test
mov
addr16
or
sbb
stc
cmp
enter
fwait
mov
mov
loopne
into
out
xchg
ja
or
and
adc
sbb
hlt
add
adc
mov
and
cld
in
popf
or
pushf
push
into
inc
ds
mov
mov
lea
inc
or
dec
lock
mov
jp
bound
pop
xchg
dec
sub
js
or
inc
stc
decl
aaa
or
in
push
clc
enter
gs
cmp
lock
test
mov
popl
add
ret
adc
pop
cmp
fsubs
movl
mov
fisubrl
inc
cwtl
jge
jo
movsb
xlat
push
mov
cwtl
divl
fbstp
rolb
push
ja
xchg
push
aaa
sbb
sub
cmp
call
fwait
cwtl
pop
test
mov
addr16
inc
push
dec
dec
jle
bound
mov
icebp
shr
in
out
xor
cmp
sbb
adc
jns
imul
mov
jmp
idivb
and
pop
jns
or
daa
sub
cmp
enter
call
mov
cmpsl
test
mov
addr16
aaa
sbb
sub
cmp
enter
call
mov
cmpsl
test
mov
mov
hlt
pop
imul
mov
xchg
dec
daa
dec
mov
mov
insl
add
sub
inc
adcb
ja
and
incb
and
mov
stos
cmp
lret
fwait
pushf
inc
or
adc
jg
arpl
std
xor
dec
outsb
in
inc
mov
jb
mov
in
inc
cmp
jno
jb
jp
gs
je
clc
inc
cmp
push
stc
and
mov
es
outsl
bound
jno
pushf
push
insl
add
les
mov
sbb
loope
mov
dec
pop
or
ljmp
cltd
fwait
mov
pushf
and
into
out
mov
sbb
add
xor
pop
movsl
test
xchg
data16
jle
sub
jmp
sar
mov
int
xchg
add
mov
mov
xchg
adc
jae
mov
inc
pop
dec
or
and
push
shrb
jmp
push
sub
fwait
call
mov
inc
xchg
dec
cmp
test
out
sti
jle
out
mov
mov
jp
out
mov
cwtl
add
jb
les
jne
mov
inc
inc
scas
inc
mov
ss
dec
sbb
pop
adc
outsl
ret
inc
push
aad
cmp
test
push
push
loopne
add
dec
test
dec
push
rcrb
push
insb
and
out
insl
leave
jno
jmp
jno
adc
fwait
cltd
stc
rcr
xchg
bound
dec
cmp
jmp
sbbl
dec
mov
sub
xor
mov
jns
mov
scas
xchg
lea
lods
adcl
popa
pop
xchg
nop
addb
jl
lea
lods
out
pop
aad
push
xchg
lds
add
fldt
adc
aam
and
xor
pop
push
adc
xchg
adc
cli
jle
adc
inc
and
roll
pop
mov
out
int
fmull
insl
push
ljmp
movsb
jmp
xchg
push
pushf
xchg
jae
cmp
mov
cwtl
adc
jno
sub
into
and
ljmp
cmp
test
sub
lods
je
xor
outsl
mov
iret
fisttpl
in
xchg
rcrl
lds
jnp
cmp
fld
inc
ror
push
adc
mov
mov
inc
mov
ljmp
jge
pop
in
pop
out
jmp
lods
cmp
pop
cwtl
and
push
cwtl
cs
xchg
into
push
in
in
jnp
pop
add
stos
roll
inc
jbe
cli
enter
and
in
mov
dec
fidivrs
mov
imul
outsl
aam
shlb
lahf
clc
cmp
int
xchg
dec
adc
pop
sub
jg
and
or
xchg
xorl
in
imul
ljmp
inc
int
testb
mov
jmp
aad
mov
push
mov
pop
mov
enter
mov
pop
adc
sub
sbb
xor
leave
xlat
jns
dec
icebp
mov
push
mov
or
xor
xor
dec
inc
sbb
mov
popf
jp
mov
jno
mov
jp
mov
adc
scas
std
sbbb
mov
cs
xchg
arpl
ss
add
popa
rcll
sub
rorb
and
ss
lret
pushf
dec
xchg
cltd
out
or
int
push
mov
and
jmp
imul
xchg
pusha
inc
pop
es
push
mov
fwait
out
fdivl
inc
lea
add
repz
push
xlat
imul
in
mov
cmp
or
addr16
lahf
fdivl
std
in
out
push
push
cmp
fdiv
push
jl
mov
pop
shr
xchg
sub
inc
mov
fldl
ficoml
add
test
mov
sub
movsb
repnz
inc
mov
dec
ret
cs
leave
stc
cli
out
ds
hlt
imul
pop
imul
mov
fcomps
jne
dec
imul
lea
xchg
test
rcrb
icebp
loop
shrb
in
insb
or
in
push
mov
repz
sahf
mov
rorl
sbb
dec
int3
test
lret
add
adc
xor
movsb
ficompl
ja
les
call
in
nop
decl
push
pushf
outsl
add
int
add
in
scas
adc
neg
cmpb
xchg
sbb
dec
push
xor
mov
mov
sbb
dec
into
sub
imul
fbstp
dec
sbb
push
or
dec
sbb
push
sbb
mov
icebp
push
mov
sub
aaa
je
jae
inc
test
je
dec
xor
adc
mov
ret
icebp
cltd
fwait
std
rolb
movb
enter
mov
adc
lahf
cmp
push
mov
dec
xchg
rclb
lods
fildl
cmpsb
in
loopne
dec
dec
pushl
jns
decl
daa
js
sbb
iret
addr16
ss
test
aad
jle
mov
sbb
in
in
cmpsb
cltd
test
mov
xor
dec
nop
xchg
xchg
test
push
xor
add
out
xchg
repz
push
push
data16
push
xor
sti
mov
push
pop
inc
clc
scas
mov
xor
sub
or
push
lret
mov
inc
sti
ds
por
ljmp
ret
jge
jle
shlb
mov
and
ss
lock
fimuls
test
dec
mov
cltd
xor
lods
cmpsb
stos
movsb
mov
movsb
jae
add
pop
sbb
lods
test
add
int3
sbb
dec
adc
push
dec
cmc
sub
cmpsb
mov
and
mov
movsb
mov
inc
fistpll
shrl
orb
xchg
lahf
sbb
insb
mov
ret
pop
gs
out
dec
lds
test
xchg
cmp
add
xchg
add
sbb
xlat
icebp
test
mov
lcall
inc
movsl
or
push
in
daa
pop
js
mov
fcmove
aas
lods
pop
lret
and
mov
lea
adc
push
fadds
cmovns
jb,pn
jne
aad
add
jno
xchg
ljmp
movsb
xchg
dec
or
hlt
and
outsl
lods
ret
adc
daa
stos
pushf
jnp
outsb
sahf
data16
fstpl
popa
add
leave
cmp
pop
sbb
push
push
pop
jl
add
cmp
jb
std
iret
movsl
pop
push
pop
jge
popa
sub
push
aam
inc
sbb
dec
aam
ss
dec
mov
push
enter
add
jnp
test
jb
aas
lods
sahf
xor
sbb
ret
cli
inc
loopne
ret
imul
mov
mov
pop
sbb
icebp
xor
add
orb
xchg
and
lock
mov
ret
jns
or
js
or
jo
xchg
popa
mov
orb
push
call
pop
push
jno
jmp
pop
xchg
jnp
and
add
xor
xor
ja
lcall
daa
add
mull
lret
mov
cltd
pop
cmp
cmp
outsl
popf
xchg
pushf
jl
adc
or
push
stc
adc
or
pop
in
add
mov
stos
sbb
shrl
cmc
mov
iret
cli
xchg
cs
aas
sub
test
test
sub
movsb
jl
push
pop
andb
stos
pop
inc
fcoms
test
cmp
fnsave
jae
jbe
cmp
or
stos
cli
ss
pop
out
shl
psllq
ret
arpl
call
pushf
aad
scas
dec
mov
pop
or
push
or
and
les
enter
pop
loop
add
cmc
xchg
stc
pop
jne
or
pushf
mov
fcmovne
sbb
mov
mov
and
js
pop
out
lret
xchg
mov
sub
rolb
aas
cld
mov
inc
push
sbb
lock
arpl
and
pop
or
jbe
imul
fiadds
mov
das
lahf
lcall
mov
xor
xchg
jg
ret
mov
aad
mov
xor
push
fwait
mov
into
pop
ret
jb
xchg
movsb
cltd
xlat
push
inc
std
xchg
loopne
cmpl
adc
aas
sbb
jno
mov
pusha
cmp
push
popa
cs
bnd
sbb
lds
xor
pop
outsl
clc
push
push
out
or
leave
dec
add
mov
push
call
enter
and
dec
mov
mov
or
pop
and
dec
dec
cmp
aam
sub
rolb
or
adc
insb
push
mov
xorl
dec
xor
insl
xchg
leave
xchg
fimuls
or
rolb
sbb
lret
adc
loop
sarb
cmpsb
jnp
jno
push
je
or
or
pop
bound
or
movsl
xor
adc
mov
xor
pop
add
mov
sub
pop
insb
repnz
sbb
in
dec
leave
pop
mov
rcrl
fwait
in
mov
popa
adc
sub
sar
xchg
mov
je
sub
clc
cltd
sub
and
shlb
jl
or
test
push
or
jecxz
sub
arpl
jl
pop
cwtl
lock
adc
sub
inc
or
js
arpl
jae
add
mov
enter
inc
and
iret
cmp
lds
mov
ds
xor
mov
rclb
imul
dec
call
je
mov
out
xor
jne
lcall
imul
iret
loope
int3
or
fs
fnstenv
aaa
and
roll
cmp
jbe
xchg
sbbb
sub
lcall
fidivrs
ret
hlt
in
mov
xchg
mov
loop
mov
andl
pop
pop
mov
xchg
frstor
add
adc
mov
insl
imul
jb
into
inc
dec
adc
xor
xchg
test
inc
push
xchg
les
push
mov
pop
push
ror
mov
cmp
shlb
adc
and
shll
pushf
ljmp
into
int
jns
sbb
into
xchg
int
loopne,pt
jbe
stos
outsb
pop
push
mov
in
mov
inc
outsl
leave
mov
xor
mov
dec
fnsave
iret
cmpsl
rep
sbb
jecxz
stc
push
mov
call
dec
loop
jg
rol
insl
mov
add
pop
push
inc
adc
xchg
mov
sbb
push
push
jmp
jnp
out
sub
sbbb
das
or
sti
or
inc
outsl
in
inc
push
xor
cwtl
push
inc
popa
push
movsl
out
add
ja
bound
fxch
test
rorb
ja
mov
push
jp
mov
stos
mov
fstpt
cltd
cmp
scas
je
mov
inc
adc
sbb
xorl
inc
nop
cmpsb
sub
enter
popa
lahf
bound
frstor
fistps
out
mov
sbb
push
jb
inc
adc
dec
popa
push
int
repz
into
cmp
mov
bound
mov
adc
push
es
dec
shlb
sbb
dec
out
jno
cld
ljmp
fldenv
loopne
cmpsl
inc
add
mov
xor
cmpsb
mov
or
in
or
jno
push
mov
fdivrl
sbb
popf
push
push
int3
sub
cmp
xlat
xlat
push
cwtl
jmp
mov
cmpsb
and
test
fs
mov
xor
lods
xor
xor
xor
pop
and
das
aam
mov
xor
mov
cmpsl
cld
jp
xor
adc
aaa
out
jle
inc
push
into
cwtl
sub
dec
or
and
cmp
je
pop
xchg
test
pop
cmpl
dec
inc
test
in
adc
xchg
pop
call
scas
outsl
dec
xchg
or
fwait
mov
sub
sar
in
adc
adc
xchg
lods
stos
or
lea
mov
cmp
rclb
pop
mov
sbb
pushf
fs
push
sbb
addr16
sbb
lods
ds
xchg
xor
sub
lcall
or
mov
jp
shlb
push
lcall
xchg
lods
jecxz
fstl
icebp
and
sub
xor
push
insb
out
xchg
mov
dec
pop
data16
out
jbe
ljmp
test
scas
aad
jns
push
mov
jecxz
adc
adc
inc
lret
mov
mov
and
ret
adc
fs
and
test
jge
cmp
ficomps
jle
iret
cli
cs
push
lods
loopne
push
sbbb
mov
xchg
into
loopne
enter
or
inc
sbb
sbb
jne
into
int
adc
add
iret
dec
mov
ljmp
push
inc
sub
mov
lahf
in
fidivl
xchg
mov
dec
andl
js
daa
bound
je
sbb
xchg
rclb
sarl
bound
inc
into
xor
pop
mov
mov
sarb
jnp
inc
test
mov
cmp
dec
lahf
xchg
xchg
sti
enter
outsl
pop
push
imul
imul
fsubs
ljmp
jbe
ficompl
mov
jbe
jmp
or
cmp
dec
xchg
push
push
and
dec
mov
ds
adc
push
or
fdivl
repnz
or
idivl
out
shl
mov
fmull
push
adc
sub
repz
xor
dec
pushf
push
test
ret
push
cmp
sbb
push
cmp
dec
xchg
lret
xchg
ds
xchg
inc
addl
mov
inc
in
inc
pop
sahf
movsb
aas
scas
inc
enter
sub
mov
xorl
in
xor
mov
mov
dec
das
fwait
jb
lahf
lods
inc
mov
daa
inc
sti
stos
adc
push
sar
insl
fldt
nop
mov
lahf
mov
popa
jb
popf
fs
lods
pushf
xchg
sarb
mov
movsl
call
adcb
and
lods
adc
mov
test
cmpsl
and
enter
test
or
dec
ret
call
jge
or
cmc
push
cmp
test
xchg
nop
lret
xor
in
dec
cwtl
das
imul
dec
pop
mov
mov
mov
lds
shll
out
and
std
sbb
insb
or
sub
enter
or
mov
out
pop
in
push
adc
mov
inc
loop
xor
enter
out
mov
jmp
sahf
pop
push
movsl
mov
xor
xchg
sub
int3
cmp
push
pop
in
out
movsb
rol
or
dec
insb
inc
adc
movsl
in
ficoms
cwtl
lods
and
xchg
js
nop
push
or
jle
lahf
subb
or
mov
aad
in
lods
call
jmp
jg
jbe
cmp
sbb
xor
adc
mov
sti
lret
inc
cmpsb
je
les
out
incb
push
movsb
add
mov
dec
das
shll
push
fisubrs
outsb
xor
xor
pop
sub
mov
pop
cli
pop
inc
sbb
mov
popf
sbb
xchg
add
push
sub
sub
loop
xchg
stc
fbld
mov
data16
push
in
test
push
xchg
mov
jl
adc
jp
push
bound
cmp
call
stos
imul
mov
lock
jne
and
cmp
rolb
subb
add
sbb
push
mov
or
jo
and
ja
xor
ja
aam
and
movsb
nop
cmp
sbb
andl
imul
lahf
inc
cmp
mov
mov
pop
int
xchg
mov
hlt
xchg
sti
cmpsl
mov
das
ljmp
repnz
add
add
or
mov
and
push
sbb
imul
mov
sub
mov
sbb
imul
dec
pop
mov
ror
into
clc
mov
jno
mov
dec
or
mov
insb
jbe
mov
mov
imulb
push
mov
inc
inc
sub
mov
loope
out
data16
cli
lods
cmpsb
addr16
mov
rolb
aam
xor
sub
enter
loope
and
outsl
add
es
rorb
pushf
jae
mov
sbb
mov
mov
adc
ret
xchg
movsb
or
aaa
in
adc
pop
hlt
inc
mov
jl
jle
inc
adc
insl
cmpsl
test
xor
pop
shrl
xchg
lods
adcl
shll
cmp
movsb
inc
xchg
pop
cmp
mov
scas
xor
sub
jmp
mov
jnp
sub
pop
jp
pushf
cmp
and
xor
out
loope
dec
push
call
lret
cmp
aas
iret
pop
js
mov
ljmp
push
dec
and
push
cmp
sub
je
adc
mov
jle
dec
stc
adc
inc
xchg
and
sbb
loopne
enter
arpl
aad
xchg
sub
push
sahf
or
nop
or
push
mov
pop
sbb
or
mov
shl
inc
leave
scas
lcall
dec
daa
jne
fistpl
push
push
inc
data16
jns
cs
out
call
insb
das
or
std
mov
clc
les
cmp
test
pop
roll
aaa
stos
ret
or
mov
in
sbb
aas
orl
jg
lret
rorb
std
push
int3
mov
scas
sarl
mov
cmpsb
mov
dec
cwtl
mov
dec
push
adc
movsb
cwtl
in
xchg
pop
pop
xchg
ljmp
pop
lods
or
sub
pop
add
or
mov
push
or
adc
jne
push
rorl
dec
xlat
or
jbe
loop
mov
inc
fmull
jle
cmp
cmpsl
movsb
jl
cs
insb
inc
xchg
scas
jo
cmp
or
test
mov
loope
mov
cli
cmpb
jl
fisubrl
fiadds
repz
inc
arpl
and
das
mov
into
xlat
or
stos
lret
and
jmp
sbb
shll
jae
sbb
stos
adc
xor
pushf
xchg
dec
add
inc
jo
sti
out
cltd
xor
xchg
push
inc
sub
stc
pop
in
test
or
xchg
jmp
mov
xchg
jecxz
loope
js
push
movsl
or
jb
and
pop
push
mov
jmp
and
jne
push
cmp
sahf
insb
jb
mov
out
mov
or
adc
and
inc
stc
das
xchg
lods
mov
cs
or
pop
sub
cmp
dec
lret
pop
pushf
push
jl
inc
jmp
ja
jg
sbb
push
push
ficoml
dec
push
addr16
shll
add
push
xor
addr16
xor
bound
push
addr16
push
mov
testl
xchg
out
adc
sbb
push
push
jecxz
inc
add
movsl
mov
jmp
scas
mov
shrb
mov
lds
call
lock
adc
add
cli
and
mov
scas
out
aad
pushf
int3
or
push
movsl
and
icebp
mov
add
int
push
shll
jne
mov
ds
popa
icebp
arpl
xchg
xor
fyl2xp1
push
mov
mov
inc
push
xchg
or
inc
fsubrp
xchg
xchg
cltd
xor
sbb
loop
je
mov
ror
jmp
rcrb
pop
pop
nop
or
add
pop
add
cmp
cmp
and
mov
stos
cmp
fisubs
cmp
shr
icebp
loopne
mov
dec
pop
test
movsl
sub
jg
cmp
add
push
jae
mov
sub
or
mov
jg
sbb
popa
jle
and
test
loope
push
push
sub
dec
loopne
ss
lret
arpl
pop
inc
clc
rep
out
or
cmpsb
cmpsl
push
outsb
scas
xchg
pop
loope
insb
gs
dec
call
dec
cmp
add
cmp
lods
movsb
mov
jp
push
adc
mov
ss
jmp
jecxz
and
pop
popa
push
push
test
mov
test
imul
jl
shlb
mov
out
inc
cmpl
jae
sbb
sahf
aas
add
jge
xchg
xchg
fistpl
lods
cmp
lea
out
push
test
das
loope
ja
std
addr16
cmp
or
sbb
sub
cmp
enter
call
mov
cmpsl
test
mov
addr16
aaa
sbb
sub
cmp
enter
call
mov
cmpsl
test
mov
das
push
aaa
sbb
enter
call
mov
cmpsl
test
mov
addr16
aaa
sbb
sub
fmuls
xlat
clc
mov
aas
adc
push
movsb
mov
inc
mov
leave
fnstenv
or
je
cmp
pop
mov
movsb
mov
hlt
jmp
fldenv
and
adc
or
je
push
jns
dec
inc
pop
lods
test
pushf
cltd
in
jmp
fldcw
jns
sbb
sbb
bnd
das
in
adc
xor
pop
dec
jl
mov
xor
cwtl
cmp
adc
push
push
lds
mov
or
sbb
je
push
dec
mov
outsl
addr16
cmc
aaa
mov
add
arpl
fcmovnb
sub
mov
je
cwtl
dec
push
mov
pop
mov
mov
pop
mov
jmp
mov
idiv
out
cmp
mov
js
xor
inc
sbb
fs
cld
push
cltd
ss
xor
loop
adc
mov
push
or
inc
rorl
out
daa
add
pop
lret
test
sbb
xchg
aaa
lea
pop
jge
mov
cltd
jecxz
hlt
stc
aam
fstp
sub
or
jns
dec
inc
pop
fadd
shrl
lock
lods
les
addr16
ja
add
add
lret
sub
call
hlt
into
cwtl
mov
xlat
aam
xchg
fnstenv
inc
push
adc
inc
jne
push
movhps
cmp
aaa
sar
enter
in
in
mov
leave
fnstenv
and
adc
add
je
fs
dec
inc
pop
mov
movsb
mov
hlt
jmp
fnstenv
and
adc
add
je
fs
dec
inc
pop
mov
mov
sub
out
sahf
add
clc
push
sbb
inc
xor
sbb
sub
xor
dec
push
sbb
jmp
outsb
mov
cmp
loope
ret
movsl
mov
xchg
jns
pop
mov
ljmp
xorl
cmpsl
lods
fidivl
iret
jl
add
mov
jmp
cmpsb
rcrb
mov
idivb
icebp
mov
pop
xor
rorl
or
mov
in
les
in
sbb
ds
test
fcmovnbe
xor
fldcw
mov
jo
push
daa
mov
cltd
xor
cmpsl
fmull
push
dec
add
ret
shr
adc
sbb
hlt
ss
ret
jbe
cmc
nop
push
dec
scas
jle
and
sahf
jae
jl
dec
stc
sub
sub
subl
jo
scas
xlat
sbb
xchg
int
bndstx
cmp
dec
jae
mov
dec
sub
bound
scas
dec
push
fildll
push
sbb
mov
add
mov
lods
test
inc
rcl
mov
sbb
push
and
dec
into
pop
pop
shl
mov
out
mov
scas
or
cwtl
and
out
jle
push
ficoms
call
mov
pop
inc
inc
mov
mov
je
clc
inc
ret
cmp
pusha
cmpsb
cmpsb
int
stos
es
sahf
mov
cmp
mov
add
pushf
out
ret
pusha
nop
mov
and
cmp
mov
xchg
push
push
push
mov
clc
push
insb
push
xor
out
pop
pop
enter
pop
xchg
and
lock
les
repnz
fisubl
or
jge
xchg
cltd
sub
out
stos
sub
adc
add
stos
mov
inc
and
gs
pop
notb
jo
stos
daa
jecxz
mov
dec
mov
xchg
cs
xchg
mov
rcll
xchg
add
mov
pop
cltd
lods
mov
cmp
loope
sbb
adc
mov
push
pop
fcmovne
sbb
das
inc
sub
jbe
sbb
and
add
ljmp
das
cmpsb
mov
push
loope
push
xchg
lock
jecxz
dec
inc
xchg
push
arpl
dec
mov
movsb
pop
or
ret
push
and
aaa
sti
shl
push
fbstp
dec
mov
stc
nop
or
std
lcall
pop
dec
xchg
jne
or
addb
xor
movsl
xchg
lock
pushf
imul
dec
stc
fs
xchg
test
jge
aad
int3
test
insb
arpl
fstpl
rorb
fcmove
dec
lret
pop
cltd
mov
inc
and
in
mov
or
sub
mov
aad
push
insl
mov
mov
lret
imul
lods
xchg
inc
push
pusha
xlat
jo
ds
stos
adc
add
outsl
pop
arpl
jle
aam
jl
and
mov
or
xor
out
cmp
ds
das
push
xchg
jp
adc
and
test
adc
mov
mov
cmp
push
lret
jno
mov
mov
lods
adc
xchg
mov
ljmp
rcrb
jae
pop
mov
sbb
mov
imul
cmp
test
push
sbb
out
push
lahf
pop
cmp
xchg
xor
push
repz
xchg
ss
mov
bound
pop
fcoms
and
inc
pop
pop
inc
rcrl
jmp
sub
xchg
mov
mov
adc
pop
stos
inc
in
int
or
std
cli
xlat
jl
jecxz
clc
jg
lea
jb
popf
or
lock
add
lock
jmp
scas
bound
ss
inc
xchg
push
cld
out
cmpsl
cwtl
ret
adc
sti
ljmp
adc
cmp
adc
ficomps
mov
out
ljmp
jns
lahf
cltd
mov
and
into
repnz
push
pop
mov
imul
stos
out
sbb
shrb
dec
xchg
in
loope
int3
sub
lock
inc
inc
inc
inc
xor
rcll
bound
sub
insb
data16
xor
jmp
mov
jp
loopne
sbb
cli
lahf
fistpll
mov
push
and
daa
adc
mov
mov
daa
stos
adc
mov
mov
enter
repz
mov
inc
inc
and
adc
aaa
jecxz
jge
orb
dec
push
ret
nop
push
push
pop
clc
cmpb
imull
movb
xchg
push
shl
pop
mov
fstl
lods
lcall
mov
das
push
fnstenv
cmp
xchg
push
sbb
mov
and
cmpsl
mov
inc
stos
pop
adc
ljmp
clc
lods
jbe
push
mov
lods
test
mov
jne
ljmp
lds
add
jle
scas
dec
movsl
add
mov
test
pop
push
popf
sub
dec
haddpd
push
push
or
inc
sbb
xchg
cwtl
cs
inc
aam
aas
sub
inc
mov
or
enter
shlb
pop
ss
xchg
loope
lcallw
sbb
and
xor
pop
cli
sub
aaa
subb
or
pop
xchg
xchg
scas
jae
ret
repnz
mov
mov
ja
push
cmc
mov
dec
flds
cwtl
sub
popa
pusha
insb
lods
sub
or
loop
xchg
in
mov
mov
sbb
dec
daa
cld
ror
mov
inc
fsts
and
mov
arpl
push
mov
xchg
jae
cmp
imul
cmpsb
dec
aad
lods
mov
pusha
cli
loopne
iret
stos
fistpl
mov
cmpsb
mov
jmp
xchg
fwait
lret
outsl
sub
ljmp
cmp
fsubrl
sbb
mov
mov
sbbb
pop
push
les
sbb
pop
dec
das
xlat
mov
lea
mov
pop
pusha
fldenv
lret
data16
add
xchg
bound
lds
mov
lret
in
cli
repz
fwait
mov
xchg
mov
les
int
sub
lds
divl
sbb
test
jns
dec
or
shrl
dec
push
push
sbb
mov
mov
xchg
mov
mov
sub
xlat
pop
mov
xor
aad
inc
inc
jl
dec
stos
sub
adc
inc
aas
adc
fists
nop
ror
add
addr16
movsl
nop
loope
xchg
and
fldenv
jb
out
jb
push
sub
shrb
dec
les
sahf
xor
pop
push
into
inc
imul
add
pop
add
jmp
dec
test
cmpsl
adc
out
divb
xlat
cmp
daa
push
jp
mov
in
rorl
push
int
out
fcomps
out
sub
dec
push
mov
adc
into
fildl
sub
sar
pop
ret
add
ss
pop
stos
xchg
xor
stos
int
jge
lock
inc
jno
outsl
gs
aad
inc
sahf
popf
dec
into
inc
xlat
shll
add
aad
xlat
or
add
ss
shrb
cs
add
xor
vxorpd
xlat
lds
adc
inc
add
add
or
mov
sbb
stos
insl
icebp
aam
or
nop
aam
dec
adc
jns,pn
cli
loopne
cld
or
lods
xchg
push
xor
mov
jg
inc
mov
pop
lock
mov
mov
mov
lahf
mov
fnstcw
jmp
lcall
lahf
xchg
sub
incb
adc
adc
sbb
shrb
mov
mov
pop
jmp
jg
mov
mov
aaa
mov
xchg
mov
pop
fcmovne
das
pop
lods
lock
jnp
shl
jecxz
adc
cmp
fldt
or
dec
pop
push
mov
jnp
add
stos
xchg
ja
dec
loope
iret
pushf
aad
adc
mov
cli
mov
imul
mov
jp
adc
push
jge
dec
popa
or
lret
jno
inc
xor
mov
mov
or
fdivrs
cmpl
mov
pop
loope
imul
mov
and
adc
imul
iret
call
cli
and
cmpsl
pusha
jge
mov
mov
imul
in
push
dec
xchg
pop
jno
loope
repz
movsb
es
pop
sub
inc
dec
pop
mov
lea
add
xchg
inc
int
into
mov
jmp
push
mov
lds
cmp
inc
fs
push
loop
les
fcomip
dec
xchg
faddl
or
mov
out
cmp
out
stos
popa
bound
cltd
mov
mov
loope
xchg
icebp
fucom
test
push
xchg
out
xchg
dec
mov
stos
or
sahf
pushf
fsub
cmpsl
les
ja
insl
test
pushf
fwait
pop
inc
xchg
jmp
punpckldq
mov
loop
mov
or
mov
lds
inc
sbb
sti
loop
jno
clc
scas
das
arpl
xchg
fnsave
fisubs
dec
out
jo
pop
xor
or
cmc
test
fidivrl
arpl
shrb
enter
pop
cli
or
call
cwtl
and
add
ds
leave
cmp
fmulp
push
mov
test
push
inc
dec
jns
lock
andl
cwtl
ret
push
inc
lret
jle
fwait
inc
pop
data16
shrb
int3
xlat
loope
xlat
jnp
mov
dec
inc
jl
lea
inc
jne
inc
insb
inc
sarl
std
mov
or
push
add
lcall
cld
dec
mov
rorl
xchg
mov
ljmp
or
inc
ss
and
sub
sub
testl
imul
shl
hlt
jle
movsl
popa
jnp
jp
sub
in
mov
call
mov
roll
cmpsl
adc
push
cmpl
loopne
ljmp
dec
pushf
mov
faddl
inc
and
xchg
mov
pop
cmpsb
and
mov
jmp
loope
jp
jp
mov
jnp
decb
jo
pusha
jge
dec
addl
rcll
ret
stos
clc
push
movsl
and
test
inc
shl
xchg
mov
pop
dec
mov
scas
dec
jns
cwtl
add
ret
jnp
rcr
jmp
fstps
push
push
push
mov
sub
mov
mov
mov
mov
push
mov
jbe
pop
jmp
push
mov
mov
or
stos
or
les
sub
lds
stos
jns
jmp
js
mov
subb
pop
in
sbbb
sub
xchg
jp
fdivrs
push
in
mov
cmpsl
in
into
add
adc
jae
cmc
fdivrl
fs
aas
jle
sbb
mull
pop
pop
dec
pop
loope
fstpl
ds
test
sbb
adc
xchg
xchg
xchg
sbb
dec
leave
mov
inc
or
std
ficoms
addl
push
loopne
clc
dec
dec
adc
test
fstpl
pop
sar
cmp
clc
or
pop
push
out
inc
je
dec
adc
and
jl
cmpl
push
inc
push
pusha
fmuls
lods
inc
push
dec
push
adc
mov
std
inc
xchg
or
out
decb
pop
insl
lret
mov
jmp
mov
add
dec
cmp
jecxz
dec
cmc
arpl
loope
incl
daa
mov
mov
pop
cmp
mov
pop
or
in
mov
sub
dec
mov
cli
adc
mov
push
sub
das
enter
fisubs
sbbl
ds
in
jno
lods
rorl
das
std
mov
ja
cs
frstor
xor
daa
inc
dec
leave
stos
cmp
mov
adc
pop
sub
jb
cs
repz
mov
xchg
mov
rcl
popf
stc
mov
inc
or
clc
hlt
rcrl
test
sub
enter
rcrb
popa
adc
das
mov
aad
cld
push
addr16
in
jl
imul
pop
aam
pop
and
daa
mov
sahf
ljmp
leave
stos
jp
sbb
push
mov
shlb
cmp
add
add
add
es
les
push
inc
fsubrs
jbe
dec
cltd
add
out
mov
dec
sub
xchg
pop
sbb
cmp
cwtl
iret
mov
scas
and
outsl
sbb
rolb
sbb
add
mov
pop
xor
sahf
and
enter
and
ja
jb
mov
xorb
add
popf
jo
adc
dec
jmp
daa
stos
mov
aam
shl
fldenv
outsb
xchg
mov
cmp
fsubl
xor
sub
sahf
and
adc
mov
sti
bts
ss
ljmp
rorb
scas
or
leave
adc
mov
xor
mov
mov
idivb
cmp
dec
jmp
mov
dec
add
aaa
xchg
and
outsl
bound
pushf
or
jne
int
faddl
mov
mov
jbe
inc
pop
bound
ljmp
leave
imul
aaa
into
sahf
fsts
jno
aaa
mov
mov
dec
push
adc
pop
mov
out
pusha
dec
enter
repz
jns
dec
push
mov
popf
inc
jle
jno
pop
or
xor
pop
adc
addr16
mov
test
pusha
mov
jno
adcl
fistps
call
and
pop
push
sub
rorb
das
jecxz
and
sub
daa
scas
lahf
mov
gs
adc
jns
ljmp
cltd
jae
dec
and
je
hlt
jbe
jg
lods
hlt
mov
pop
ficoml
sbb
cmp
movsb
out
mov
out
lret
mov
pop
notl
leave
mov
into
cld
mov
jmp
push
mov
outsb
jbe
cmp
mov
pop
mov
js
add
add
imul
dec
pop
cmpl
xchg
adc
ljmp
mov
push
loop
test
mov
push
mov
movsb
daa
pop
lea
cmp
pop
gs
outsb
sub
pushf
pop
sarl
out
loopne
mov
insb
aad
gs
inc
push
xlat
es
adc
loop
add
mov
sbb
shll
pop
enter
adc
cmp
scas
cmp
loope
aas
sub
jbe
mov
shll
out
mov
xchg
test
mov
xchg
push
mov
dec
call
loop
pop
mov
movsb
mov
xlat
sbb
gs
sahf
adc
call
jmp
sbb
test
fistpl
cld
sbbl
sub
test
rcrb
xor
shlb
push
mov
pop
jno
xchg
push
mov
icebp
pusha
push
xor
test
aam
mov
roll
inc
push
test
jge
repz
add
dec
mov
cmp
sub
std
je
ret
xor
sub
aam
popa
mov
jb
lret
pop
jb
loopne
shlb
and
adc
fcomip
int
fwait
std
adc
xor
add
or
cmpsb
das
popa
arpl
scas
mov
or
jno
xchg
daa
push
mov
push
inc
fisttpl
dec
inc
sarb
mov
nop
stos
nop
into
mov
push
ret
pusha
jns
movsl
lds
out
dec
dec
es
and
ds
insl
fwait
push
cmpsl
push
sbb
push
test
inc
cmp
in
std
loop
test
imul
cmpsl
popf
xchg
mov
mov
xor
jns
outsb
popa
call
js
cmp
rcr
lret
cmp
cmp
mov
mov
xor
insb
mov
mov
push
jns
xor
jno
jns
ret
mov
sbb
insb
pop
push
mov
or
jmp
push
dec
stos
mov
adc
push
push
xchg
roll
rcll
pushf
cmp
push
ss
xchg
into
pop
lcall
sti
push
cli
shrb
lods
negl
test
aam
mov
cmp
mov
cmp
cmc
add
push
jge
ret
movsb
cmp
rcll
xor
insb
mov
inc
mov
aas
aas
xchg
adc
pushf
leave
lea
push
addb
clc
je
setg
shrl
lcall
fadd
push
push
inc
or
dec
mov
ljmp
iret
sbb
stos
ja
mov
inc
and
lahf
adc
imul
jle
fstps
pop
aad
adc
rcrb
jbe
aam
xchg
fsts
mov
lods
mov
push
popf
ss
in
int
popa
mov
repnz
popf
mov
inc
ds
pop
mov
add
push
insb
out
push
div
mov
lods
inc
cmpsl
push
in
bound
icebp
bsr
sbb
enter
jmp
mov
jl
cmp
sahf
add
xor
addr16
shll
mov
ja
add
jecxz
lret
xchg
or
pop
lods
out
dec
lock
pop
pop
add
mov
add
pop
sub
pop
mov
xchg
bound
ss
push
sub
std
out
cmp
cmp
pop
cmp
cmp
sbb
rorb
add
push
dec
push
adc
lret
mov
adc
jne
mov
or
push
sbb
in
adc
imul
push
test
mov
xor
clc
cmpsb
fwait
repz
push
mov
out
mov
xchg
ds
lock
mov
popf
inc
out
push
mov
movsb
mov
insl
lcall
outsl
pop
dec
je
inc
call
and
mov
sub
cmp
out
insl
or
decl
mov
shrb
xchg
inc
fstps
in
mov
dec
mov
and
scas
repz
in
xor
int3
xchg
mov
popf
mov
in
mov
mov
inc
mov
jno
jns
in
call
imul
mov
sbb
push
xorb
cli
adc
mov
push
pop
jns
sbb
fimuls
sbb
add
xchg
shll
jle
inc
sub
lret
bswap
sub
dec
jl
pop
push
mov
pusha
sarl
test
mov
push
mov
mov
je
test
cwtl
test
das
ss
jae
aad
inc
out
mov
jmp
add
sub
jno,pn
adc
add
in
xchg
sub
add
mov
aaa
mov
pusha
ljmp
sbb
stos
and
int
cltd
stc
push
cli
les
shlb
sbb
es
jns
dec
lea
daa
mov
sahf
icebp
add
xchg
mov
pop
jmp
shl
pop
call
data16
fdivrp
test
and
mov
scas
pop
cwtl
inc
fs
sbbb
push
sbb
pusha
push
jecxz
adc
ficompl
fwait
aad
jp
pop
and
leave
mov
lock
js
sbb
adc
cmp
inc
adc
dec
cmp
and
lods
jle
adc
pop
sar
aad
decb
push
in
push
fstp
sbb
int
add
clc
ss
mov
je
add
in
mov
push
xchg
xchg
xor
pop
jns
jp
adcb
rcrb
mov
cs
lea
ret
mov
in
test
inc
dec
mov
push
and
imul
push
fdiv
mov
cli
dec
stos
daa
mov
es
add
fwait
mov
sbb
or
imul
pusha
cli
imul
mov
stc
pushf
std
in
add
xor
or
mov
dec
inc
enter
mov
negl
mov
push
adc
rclb
xor
inc
jns
mov
mov
jle
cmpsl
cli
int
inc
ds
aaa
push
mov
inc
cmp
in
jl
cmp
test
or
mov
cs
push
adc
or
fsub
popf
inc
stos
jecxz
cltd
mov
pop
lret
lods
add
mov
test
inc
fsubrp
int
cwtl
push
or
leave
mov
and
jne,pt
mov
xchg
pop
in
ds
js
cmp
inc
popf
mov
xchg
test
add
test
stos
pushl
push
in
xor
or
lock
sub
jp
stos
gs
jnp
cmp
jnp
imul
sbb
xor
idivl
stos
and
inc
mov
repnz
in
hlt
cmpsl
mov
adc
xchg
insb
fwait
mov
test
jmp
push
iret
inc
jg
out
jecxz
dec
testl
xor
adc
jmp
or
rorl
mov
add
mov
into
jge
mov
repz
mov
aad
or
popa
sub
mov
jl
push
mov
imul
ret
leave
popf
adc
xchg
mov
lods
dec
pop
xor
xchg
xchg
dec
jb
enter
mov
aam
fnstenv
and
adc
add
je
fs
dec
inc
pop
mov
movsb
mov
hlt
jmp
fnstenv
and
adc
add
je
fs
dec
inc
pop
mov
movsb
mov
hlt
jmp
fnstenv
and
adc
add
je
gs
dec
inc
pop
mov
cmpsb
mov
imul
in
push
dec
inc
es
fistl
add
in
xchg
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lock
pushf
shrb
mov
int3
mov
jo
popa
sbb
sub
cmp
dec
and
adc
lock
pushf
shrb
fcoml
or
jl
sub
cmp
dec
and
add
loopne
shrb
fcoml
movsb
inc
sbb
dec
inc
cmp
or
gs
outsb
jl
mov
jns
sub
fwait
ss
adc
cmpl
mov
lret
dec
dec
mov
mov
scas
sub
and
mov
pop
mov
cmp
or
jo
xor
push
in
add
dec
pop
pushf
jne
add
lock
loopne
mov
int
fcoml
xlat
in
scas
shrl
insb
iret
es
mov
add
sub
inc
jmp
stc
lds
lock
aad
cmp
mov
or
lret
jb
push
push
sbb
jns
sbb
cmp
cmp
push
js
jge
mov
pushf
shrb
fcoml
or
sbb
sub
cmp
dec
and
add
mov
mov
subb
cmp
sub
inc
cmp
mov
lods
into
mov
in
call
je
imul
dec
aaa
jl
jne
xchg
mov
int3
mov
cld
jo
pusha
sbb
sub
cmp
dec
and
add
loopne
shrb
fcoml
or
sbb
sub
cmp
dec
and
add
push
out
sti
dec
add
cmp
out
push
inc
push
mov
stc
mov
push
pop
rcrb
movsl
cli
leave
mov
mov
push
pop
iret
test
gs
lret
or
push
adc
xor
loop
pop
and
mov
ss
lahf
and
test
xlat
pushf
or
inc
cmc
icebp
adc
mov
aaa
pop
sbb
pop
xchg
sar
pop
add
ret
nop
enter
inc
lds
and
loopne
mov
lret
push
js
dec
daa
out
xchg
negl
jmp
shl
lds
out
cmpsb
jp
push
inc
pop
mov
sub
inc
mov
movsb
mov
mov
mov
push
jecxz
xor
sub
xor
dec
fdivrl
and
xlat
ja
inc
enter
jle
movsb
lcall
enter
and
push
sbb
stos
sub
out
cmpsl
sbb
popf
lcall
sub
aad
rol
mov
arpl
pusha
mov
sub
adc
or
cmp
jne
insl
frstor
cmp
xor
shr
xor
dec
test
push
gs
xchg
xor
or
add
cltd
sub
sahf
jecxz
out
and
pop
lods
jbe
sub
fs
test
icebp
stos
movsb
xchg
aaa
jmp
mov
ffreep
andl
inc
mov
fiadds
movsl
inc
mov
rcrb
lcall
movb
push
or
ja
stos
mov
rorb
sub
stos
dec
and
insl
xchg
mov
add
fs
pop
int3
arpl
xor
lret
idivl
mov
js
push
jne
das
mov
sbb
int3
aas
orb
stos
mov
test
ret
dec
out
mov
fldcw
into
popa
and
mov
sub
mov
lret
sub
rep
inc
adc
aad
js
int
ja
mov
xchg
add
loope
mov
rorb
loope
inc
clc
dec
xor
mov
out
or
mov
push
mov
push
cltd
stos
outsl
inc
xor
test
fisubl
ja,pt
shrl
jo
xlat
cmp
or
pusha
out
popa
add
xchg
mov
push
divb
out
and
jbe
lds
mov
adc
inc
addb
sbb
dec
push
push
ss
sub
mov
cmpsl
jns
pop
out
pop
shrl
lahf
jl
sbb
push
mov
lcall
xchg
pop
ljmp
testb
aam
dec
jo
add
out
repnz
pop
jae
dec
stos
jns
fildl
test
jmp
sub
cs
push
lahf
dec
popf
xor
cld
cmp
shl
mov
gs
push
and
cld
inc
add
das
or
push
daa
push
out
mov
and
test
push
lcall
xchg
repnz
ret
scas
push
mov
cmc
shrl
jecxz
mov
mov
out
ja
in
shlb
sbb
sbb
mov
aas
imul
sub
movsl
aaa
popa
iret
push
mov
or
pop
mov
sbb
dec
neg
sbb
movq
jns
imulb
icebp
adc
xchg
push
mov
imul
lcall
sub
dec
inc
jmp
das
xchg
inc
push
repnz
ds
mov
mov
ljmp
xchg
dec
inc
in
icebp
andl
pop
cmp
adc
aam
enter
push
insl
scas
xor
fwait
pop
jge
pop
xlat
leave
ror
sub
sub
pop
aad
sbb
pusha
lcall
jecxz
pushf
jns
jae
sbb
sahf
inc
loop
push
mov
mov
imul
or
mov
out
xchg
add
fisubl
sbb
iret
push
sub
jle
call
loop
out
pop
inc
ja
inc
mov
xor
add
mov
pop
stos
fdivs
shrb
movsl
adc
je
mov
lea
mov
xchg
push
test
mov
adc
sar
push
fisubrl
loope
sahf
dec
int
push
sbb
or
push
add
aas
or
and
xor
sub
in
xchg
dec
adc
push
shr
pop
and
cmp
mov
dec
mov
shrl
or
cmpsl
mov
push
ljmp
jnp
adcb
push
sbb
shlb
xor
call
repnz
inc
pop
sub
xlat
sbb
mov
fiadds
lods
out
fnstenv
cmp
ret
jns
pop
out
jge
es
fnsave
push
dec
xchg
fs
xor
test
stos
in
gs
mov
pop
xor
lcall
push
jl
es
divl
mov
and
in
xchg
add
mov
out
not
dec
sub
inc
and
push
in
js
rol
inc
fsub
lods
adc
dec
or
addr16
lret
pusha
jg
lret
into
sub
cmp
mov
mov
mov
mov
arpl
pusha
test
mov
jg
inc
push
out
push
jge
lcall
loopne
shll
sub
inc
enter
cmp
fistpl
clc
in
pop
xor
mov
dec
loopne
pop
jno
lods
outsb
scas
repnz
xchg
or
inc
or
push
sbb
mov
lods
icebp
repz
sub
adc
pop
adc
jg
xor
das
fwait
push
hlt
pop
int3
inc
jecxz
and
push
fdivr
fldenv
jnp
icebp
je
xchg
fs
or
adc
cltd
je
xchg
repz
pushf
stos
adc
int3
xchg
iret
adcb
int3
mov
jbe
lret
mov
test
clc
mull
out
gs
push
inc
jno
pushf
add
fistl
push
and
popa
xor
fscale
push
jns
das
cmpsb
sbb
sub
xchg
fcomi
data16
adc
pop
lret
push
lret
movsb
adc
push
sub
scas
cmp
test
rcr
incb
pop
pop
sarb
jmp
jle
xchg
out
push
push
fdivrs
addr16
scas
xor
adc
mov
push
xchg
clc
pop
xchg
jne
cmp
cmp
popf
pop
fs
mov
pop
sub
fnsave
sahf
addr16
jp
jmp
lahf
shlb
shll
mov
push
jb
sub
sub
dec
js
cld
mov
push
dec
movsb
xchg
pop
jns
movsl
pushf
mov
jo
mov
out
sbb
rcr
nop
rclb
pop
xlat
outsl
and
scas
jecxz
data16
sbb
lods
inc
mov
fnstcw
sub
insl
cmp
out
jb
add
std
outsl
cld
idivl
aas
xlat
mov
cld
arpl
int3
adc
add
dec
jle
inc
fst
ret
aad
inc
xchg
shl
push
cmpsb
stos
jge
rcr
sub
ss
cltd
jne
leave
testb
cli
in
xchg
stos
fwait
inc
scas
push
inc
f2xm1
in
inc
int
jecxz
cmc
sarb
insl
push
inc
and
sub
loop
push
testl
hlt
je
adc
push
frstor
pop
jge
jb
pop
mov
das
jecxz
fnstsw
mov
jae
inc
pop
shll
sti
div
cmp
andb
jbe
inc
stos
xchg
or
and
pop
adc
add
inc
sbb
test
adc
aas
test
decl
push
cmpsl
mov
cmp
rcr
lahf
inc
cmp
pop
sub
fnstsw
xchg
lret
data16
ret
xor
insb
arpl
or
cmp
sbb
test
aaa
ds
into
mov
out
out
mov
pop
out
or
and
dec
mov
xor
lret
aad
icebp
lea
xchg
icebp
fwait
pop
sub
ja
outsl
jecxz
lds
xor
ret
mov
xor
ret
in
jecxz
jle
push
in
jg
xchg
negb
das
jge,pn
jb
or
cwtl
sbb
pushf
in
push
mov
js
mov
adc
fisubrl
inc
enter
lcall
or
js
add
push
fwait
sub
jmp
push
cmp
pop
call
rclb
sbb
rcll
sbb
mov
cmp
mov
push
ljmp
cmp
xor
cmp
je
push
ffree
ret
xchg
lahf
pop
test
adc
push
sub
movb
std
rcr
mov
xchg
je
js
adc
adc
cwtl
rclb
in
mov
clc
inc
jge
cmp
jl
mov
lods
jno
and
ss
mov
sub
inc
sar
jmp
lds
mov
into
jns
mov
fisubrs
test
shl
das
fs
movsl
cltd
and
inc
sbb
sub
jg
add
arpl
and
add
xchg
roll
xchg
in
pop
leave
cmpsb
jmp
lcall
inc
jle
jns
mov
mov
jno
int3
sbb
cmpb
sbb
xchg
enter
outsl
in
xchg
aas
and
mov
push
pop
in
sub
andb
mov
das
inc
mov
enter
mov
mov
pop
lahf
sbb
scas
mov
cmc
sbb
mov
inc
xchg
out
lock
mov
add
mov
clc
test
sub
jl
inc
push
imul
xor
lahf
stos
add
les
mov
mov
pop
leave
push
and
out
out
inc
js
lds
sub
cltd
adc
movsl
adc
gs
xor
fst
xchg
fnstenv
mov
jmp
push
movb
fs
inc
jae
cs
dec
jno
gs
xchg
cmp
in
fnstenv
mov
and
ljmp
out
cmp
stos
insb
dec
mov
movb
xor
out
xor
dec
or
insb
popa
in
jno
mov
repnz
movsl
shrl
in
in
add
jp
out
mov
ret
mov
adc
test
xchg
mov
push
mov
in
push
js
sub
mov
pop
insb
cld
sbb
std
sbbl
sub
ret
xchg
repnz
loope
or
sbb
out
lods
or
xorb
push
repz
xor
mov
jg
enter
lahf
mov
je
roll
addr16
arpl
aas
mov
into
adc
cwtl
shll
std
cltd
sbb
adc
fmuls
or
mov
jo
fs
shrl
sub
scas
test
pop
ret
xchg
cli
xor
rcrl
sahf
test
pop
xchg
adc
jbe
hlt
ljmp
sub
mov
push
fcmovu
xor
dec
pop
shl
ret
fidivrs
mov
mov
xor
lods
mov
jno
lahf
mov
std
fcoms
sbb
jo
xchg
sub
sbb
or
pop
adc
inc
dec
shll
ja
mov
jb
inc
nop
fnstenv
push
sbb
inc
inc
aaa
inc
fidivs
mov
xor
xchg
add
rol
cwtl
xor
mov
int3
popf
adc
repz
mov
adc
out
ja
sbb
push
xchg
rol
or
int
dec
sub
or
aam
lcall
or
cwtl
dec
xor
stos
fsub
mov
sbb
pop
adcb
xor
dec
daa
inc
inc
xor
lcall
sub
adc
cld
lods
jne
jmp
mov
adc
sarl
insb
lret
test
xor
imul
outsl
lods
adc
sar
pop
mov
push
xchg
dec
jle
rcrb
sbb
gs
je
iret
mov
cwtl
js
imul
loopne
jne
andl
aam
mov
and
dec
xor
movsb
les
popa
xor
cltd
xchg
jle
mov
xchg
stc
lock
aam
rcrb
addb
sub
push
lods
test
outsl
les
mov
lea
add
cmp
ds
lods
sbb
inc
jb
daa
mov
xchg
insb
sub
movsl
mov
lds
xchg
insl
lods
pop
aad
mov
xor
ja
cmp
adc
cld
aam
cmp
sub
pop
notb
sbb
cmp
scas
gs
test
call
nop
push
enter
xor
jo
push
xor
icebp
dec
sahf
imul
xorb
lretw
jecxz
shlb
mov
test
adc
pop
mov
jmp
addr16
or
outsb
pop
mov
loop
push
call
out
jo
das
and
jp
ds
fs
pop
int
mov
ficompl
leave
cld
pushf
int3
test
imul
sbb
cmp
int3
ficompl
sbb
repnz
cltd
sub
gs
mov
stos
push
sub
loop
jae
bound
inc
push
dec
pop
push
jae
roll
ret
cmpl
mov
sub
dec
mov
mov
pop
test
mov
push
mov
adc
dec
jecxz
jns
xchg
push
loope
jb
cmp
test
jno
dec
mov
xchg
lods
mov
lds
dec
mov
dec
fdivs
es
xchg
mov
mov
fnstenv
jl
mov
jle
out
jne
mov
dec
ljmp
and
cli
mov
add
pop
icebp
pop
je
sub
negb
xchg
loopne
frstor
sbb
testl
or
adc
xchg
dec
subl
arpl
mov
into
mov
fisttpll
repnz
lea
sarb
sub
mov
lock
pushf
not
mov
mov
fwait
push
pop
insl
sarl
sti
aaa
mov
sub
mov
out
and
cmp
mov
dec
cmp
adc
or
lods
ljmp
inc
add
popa
jo
stos
or
loopne
mov
stos
sbb
mov
clc
ret
dec
les
subb
inc
outsb
lods
xlat
cli
mov
push
and
out
dec
fistl
or
pushw
mov
ja
popf
mov
push
xlat
sarb
lea
pusha
add
cld
sbb
test
dec
ja
cwtl
mov
andb
cmp
in
scas
test
sub
inc
dec
pop
mov
mov
lods
mov
js
mov
or
mov
fistps
scas
push
cmpsl
outsb
cli
dec
pop
or
dec
fsubr
push
jge
dec
lcall
inc
push
stos
sti
xchg
jno
mov
jmp
stos
push
out
andl
mov
and
mov
lds
push
ret
jne
inc
testl
sbb
gs
cwtl
mov
test
adc
popw
inc
out
sbb
xor
push
je
push
in
mov
ss
loop
push
data16
mov
mov
mov
fildll
fdivl
jmp
add
ja
paddq
push
sarb
imul
jb
gs
xor
add
mov
out
divl
jmp
lcall
rol
sub
or
pop
pop
sbb
mov
inc
lret
loop
pop
mov
lods
sarl
sbb
jo
out
cmp
inc
adc
out
cmpsl
insb
xchg
mov
fiadds
dec
stos
cmp
jns
insb
les
daa
xchg
push
cmp
imul
push
js
push
pop
in
adc
sub
lcall
jecxz
mov
dec
out
xor
mov
fldt
xor
test
cwtl
pop
push
loope
add
mov
fcompl
popa
inc
pop
icebp
test
cmp
outsl
insl
mov
mov
mov
movsl
xor
push
fcmovbe
shlb
inc
xchg
and
hlt
testb
jbe
addr16
lret
popa
loopne
insl
cmp
les
jmp
add
ds
out
mov
mov
pop
or
movsl
rorb
lret
jge
xchg
fists
in
jecxz
jne
je
sahf
cmp
pop
or
es
dec
outsl
sbb
adc
push
imul
jl
fs
stos
lds
pop
jae
sbb
xor
push
dec
std
mov
xchg
scas
sub
xchg
dec
rolb
fldcw
mov
pop
mov
les
dec
xchg
movsb
leave
inc
adc
pop
push
dec
push
addr16
iret
push
adc
add
pop
sub
inc
and
pushw
mov
in
call
aam
fwait
jbe
mov
pusha
push
and
dec
mov
jns
out
sahf
adc
xchg
es
sub
lods
and
decl
bound
cmp
pop
movb
xor
popa
cmp
out
je
push
inc
xlat
dec
sbb
fs
das
mov
adc
lahf
sbb
cli
int3
imull
xchg
aaa
xchg
pop
adc
jb
aaa
rclb
adc
imul
xor
mov
lock
jp
inc
stc
sbb
pop
push
pusha
cmp
into
hlt
idivl
setge
les
in
mov
mov
stos
aaa
int3
call
test
pop
pop
inc
mov
fbld
add
or
adc
aaa
ret
inc
and
ss
add
jno
jns
or
data16
sbb
repnz
andb
adc
loop
cmp
mov
pop
sbb
ljmp
sub
loope
jnp
cmp
out
cmp
xchg
mov
rclb
add
loop
shrb
stc
popa
fadds
and
dec
iret
push
fisubl
insb
outsb
fs
mov
shll
pop
mov
ja
cmp
lret
loope
in
clc
xor
test
aaa
cs
cmp
sub
aad
rcr
adc
lret
push
outsl
fcompl
xchg
lods
jbe
shl
icebp
cmp
mov
in
lcall
mov
lods
scas
lahf
jmp
es
fmull
dec
ljmp
or
and
test
loope
daa
jge
dec
cld
dec
and
cs
divl
cltd
and
fwait
sarb
imul
movsb
es
sbb
mov
ss
rclb
loop
hlt
iret
jb
and
ss
dec
test
out
mov
add
sub
inc
xchg
cld
movsl
data16
int3
bswap
mov
mov
jl
or
test
je
push
aad
dec
lret
sti
fldenv
jmp
mov
dec
scas
ret
sbb
dec
and
jb
xchg
je
sub
pop
inc
int3
stc
add
push
xchg
out
lea
xchg
out
outsb
fdiv
pop
imul
mov
inc
push
lret
xchg
sbb
loopne
xchg
dec
add
in
lock
inc
int
push
dec
fimull
mov
or
xchg
adc
dec
xor
dec
jae
imulb
mov
ja
jmp
cmp
imul
dec
gs
pop
gs
xor
mov
or
pop
pusha
pop
incl
mov
xorl
cmp
push
insl
xchg
fidivrs
test
ficoms
sub
orl
xlat
sub
mov
mov
cltd
adc
pushf
sub
shlb
mov
or
stc
push
cli
mov
adc
add
bound
imul
lret
test
sub
ss
stos
dec
jne
rcrl
jns
rcr
and
popf
jbe
lcall
mov
test
mov
mov
add
pop
adc
mov
in
xor
sbb
mov
mov
mov
mov
rsm
pushf
xchg
cltd
cmp
and
out
addr16
stc
mov
rorb
push
pusha
lret
jmp
push
aam
in
js
pop
dec
sahf
daa
clc
icebp
fdiv
pop
notl
gs
jecxz
push
ficoml
add
push
gs
js
and
popf
ds
pop
pop
adc
push
push
inc
inc
dec
test
bswap
roll
js
mov
testb
push
loope
lret
dec
jnp
push
dec
xchg
jl
ret
bound
sbb
ds
push
outsl
lret
shlb
call
repnz
data16
into
lds
sbb
mov
mov
fldcw
lret
mov
ret
rclb
stos
lcall
gs
ljmp
loop
les
cmp
jl
repz
xor
pop
cmpsb
mov
inc
in
and
pop
dec
mov
in
mov
xor
loopne
inc
je
shrl
add
negb
pop
sbb
sarb
sbb
nop
xchg
insl
mov
bts
insl
fwait
stos
xchg
mov
data16
ljmp
ret
movsl
pop
push
mov
mov
push
in
jo
adc
push
outsl
xor
jo
outsb
jmp
add
pusha
jge
jno,pt
test
adc
sti
sbb
push
outsb
pushf
sbb
rcr
imul
pop
or
adc
sub
push
push
jg
shlb
push
pop
aam
xchg
daa
sbb
add
adc
mov
mov
jecxz
dec
or
push
mov
pushf
shrl
fcoml
or
sbb
sub
cmp
dec
and
add
loopne
shrb
fcoml
or
sbb
sub
cmp
dec
and
add
pusha
sbb
sub
mov
nop
in
add
jo
pusha
sbb
sub
cmp
dec
and
add
loopne
shrb
fcoml
or
mov
sub
dec
inc
les
pusha
xchg
jo
jmp
in
xchg
adc
aam
loopne
cltd
sbb
jne
gs
adc
or
stc
cltd
leave
in
xchg
test
movsl
in
push
gs
jns
dec
gs
push
pop
add
sbb
aaa
loopne
sarl
mov
xor
pop
sbb
data16
popa
jnp
jbe
movsl
mov
xchg
popa
test
push
jbe
mov
xor
dec
call
mov
mulb
pusha
cmp
cmp
shlb
flds
mov
sbb
addr16
jne
xchg
cmp
xchg
xchg
mov
imul
add
or
pop
or
or
dec
std
movsl
sbb
mov
icebp
mov
aam
adc
and
push
aad
js
imul
icebp
jne
movb
sub
pushf
sub
pop
hlt
xor
push
push
insb
sbb
mov
adc
mov
cmpsb
cwtl
add
xor
xchg
jmp
jno
std
mov
xchg
imul
inc
pop
xor
and
adc
mov
stos
jmp
shl
cld
push
push
push
jns
dec
add
dec
imul
inc
jne
andb
cld
test
lock
xor
sbb
cmp
insl
mov
lods
mov
lcall
push
imul
adc
or
stc
cmc
leave
in
xchg
test
movsl
cltd
push
imul
adc
or
ljmp
insl
daa
fildl
xchg
mov
push
push
dec
push
mov
loope
in
inc
cmpl
mov
stos
dec
xlat
out
jbe
pop
rcrb
ds
mov
int
xor
mov
or
sub
inc
out
push
jl
cmpsb
mull
mov
stos
mov
mov
into
movsl
and
test
mov
sbb
fwait
into
sub
mov
add
int3
ljmp
mov
scas
test
push
or
push
fdivrs
jae
cmpsl
test
icebp
inc
cmpsb
xor
insl
ret
test
mov
inc
or
xor
pushf
cmc
and
outsb
aam
out
das
scas
fidivrl
mov
or
mov
cltd
enter
lock
dec
aad
int3
movsb
mov
jne
sti
inc
movsl
jg
jno
and
jne
pop
mov
arpl
mov
xor
mov
stos
cmpsl
push
rcrl
pop
stos
jbe
in
test
lods
mov
rcrl
push
pop
icebp
repz
in
cmp
sub
pop
shl
add
lahf
push
pop
pushf
mov
push
ret
adc
jo
pusha
shl
cltd
movsl
cmp
pop
sbb
notl
daa
das
xor
loopne
psubsb
push
nop
dec
mov
repnz
ljmp
lret
out
pop
sbb
jmp
pop
adcl
cmp
mov
test
enter
mov
and
movl
cmp
xchg
sahf
cmp
push
xchg
jle
shr
stos
arpl
jbe
pop
and
shrb
pop
mov
mov
jb
ret
add
sbb
push
xchg
xor
imul
jmp
sub
jmp
test
push
or
dec
jae
iret
in
int
lcall
ss
push
pop
jbe
es
lret
leave
test
cmp
lret
pop
dec
cs
push
inc
inc
cmpsl
out
and
xlat
mov
shrl
and
xchg
sub
or
push
cmpsb
inc
pop
cs
and
mov
rcll
add
lods
incl
popf
hlt
mov
aad
jbe
inc
inc
lods
call
sub
mov
xchg
filds
mov
subl
iret
pop
popa
and
mov
mov
rcr
aad
dec
mov
aas
xchg
popa
sbb
push
clc
cmp
jl
mov
sbb
lds
jecxz
sti
jae
lock
adc
ds
in
test
jb
dec
fldt
push
or
adc
xchg
dec
enter
out
sub
pop
pop
xor
lcall
pop
idiv
sahf
pop
gs
int3
cmp
fs
fucomp
push
mov
jmp
fdivl
and
arpl
or
testl
inc
jo
out
mov
cmpsl
test
iret
jl
adc
xor
arpl
loop
sub
push
inc
in
jbe
push
cmc
out
lahf
loopne
ret
push
js
dec
movsl
ja
insl
or
icebp
and
aaa
adcb
in
pop
ret
test
mov
jecxz
subb
sahf
subl
stos
das
sub
jo
fwait
popf
adc
iret
shlb
mov
mov
arpl
fiaddl
cmp
adc
dec
out
int
cmp
cmpb
call
adc
faddl
mov
ret
enter
filds
lahf
push
daa
pop
push
sub
mov
jg
inc
rcrb
add
jmp
xor
xchg
sub
add
sub
fsubrl
inc
cmp
dec
out
leave
mov
push
mov
cli
icebp
xchg
data16
lret
and
stos
lcall
inc
outsb
nop
inc
and
sub
dec
arpl
mov
mov
invd
out
mov
ss
pop
mov
lcall
xchg
ljmp
and
daa
in
in
je
xchg
roll
cmc
std
test
shlb
repnz
push
adc
sbb
push
inc
inc
in
sub
pushf
mov
adc
bnd
addr16
in
add
sbb
xchg
loope
movsl
mov
pusha
loop
sub
push
and
and
adc
in
push
call
xchg
bound
sahf
rorb
xchg
loopne
mov
insb
jp,pn
push
push
stos
popa
or
movsl
jno
out
addr16
xchg
mov
aaa
out
js
ds
jl,pn
adc
push
je
mov
rclb
pop
cmpb
mov
and
loop
mov
ja
fistpll
les
rcrb
ds
mov
sbb
pop
jae
inc
inc
iret
stos
and
jg
lahf
movsb
pusha
imul
xchg
repz
stos
jl
test
xor
mov
xchg
jmp
mov
arpl
loopne
cmpsb
mov
mov
aas
cmp
cmp
jbe
mov
adc
xchg
jecxz
arpl
cltd
lahf
das
sbb
xor
aaa
cmp
xchg
adc
cmc
add
fisubs
out
push
xchg
add
jnp
pop
sbb
rcl
mov
mov
sbb
sub
jnp
add
sub
add
stos
popa
inc
fidivl
in
pop
rorb
pop
dec
lret
sbb
test
test
jmp
add
pop
or
aad
js
add
cmp
pop
cs
xchg
insb
faddp
outsl
mov
pop
sub
icebp
jmp
imul
mov
bound
das
psubsb
sbb
dec
movsl
out
xor
cmp
jle
sbb
int3
mov
fwait
sahf
stc
out
int
cmpsb
movsl
in
adc
dec
test
decl
dec
add
pop
sti
xor
jle
jnp
pop
sarb
pop
push
testb
jb
sub
lock
inc
inc
data16
jle
sbb
popa
cmp
sahf
jne
popa
jg
stos
cmc
iret
sbb
fcoml
lock
inc
outsl
ss
int
sub
outsl
jb
loopne
sub
rorl
adc
jo
movsl
das
jae
outsb
mov
dec
push
in
mov
mov
ss
mov
inc
cmc
popf
stos
mov
add
mov
xchg
nop
xorl
push
ret
push
popf
adc
xchg
sub
roll
mov
lea
inc
adc
inc
xor
xlat
dec
mov
mov
decl
push
lcall
dec
test
and
neg
dec
mov
lods
ret
pop
test
and
sbb
push
aas
jns
je
push
push
ds
iret
test
mov
mov
add
pop
ret
frstor
test
fisubrs
pop
and
inc
call
out
idiv
fcos
mov
movsl
xor
arpl
adc
sub
mov
and
sub
popa
jnp
or
idivb
cwtl
outsb
mov
pop
mov
cmc
pop
cmp
adc
or
icebp
jne
dec
fidivrs
icebp
daa
add
in
push
sub
pop
sub
mov
jecxz
shlb
push
mov
aas
in
shlb
daa
test
mov
inc
lock
mov
pop
add
inc
test
or
sub
fsts
je
adc
lahf
divl
divl
loopne
sbb
adc
ss
jns
int3
shl
cs
fld
insl
mov
aaa
sbb
or
dec
jo
imulb
jno
push
mov
fs
bound
mov
outsl
dec
cmp
ficoml
jno
add
sahf
or
adc
sub
out
imul
call
or
jo
jo
mov
les
push
xchg
push
sbb
jge
int3
push
test
scas
daa
add
pop
and
hlt
dec
xchg
sub
aas
xor
fnstcw
insl
int
sub
pushf
loopne
clc
xor
mov
mov
mov
dec
and
push
xchg
lods
mov
inc
xchg
insb
adc
jns
adcl
and
inc
push
cwtl
pop
out
pop
scas
lods
outsb
outsl
out
ja
lret
sbb
and
cmp
mov
adc
jle
loope
scas
mov
mov
int
fwait
incl
pop
mov
imull
ret
jg
pop
mull
add
push
shlb
inc
pop
je
mov
nop
out
jge
xor
leave
in
pop
andl
adcl
xor
mov
dec
jg
dec
sbb
mov
sti
call
pop
add
mulb
jnp
enter
in
mov
daa
outsl
dec
sbb
cmc
hlt
mov
jns
vmaxss
xchg
divb
jmp
xor
cmp
cld
into
or
mov
xor
cmpsb
aad
jno
or
popa
inc
push
mov
call
jo
adc
cmp
sub
in
sti
xchg
enter
cli
test
outsl
dec
in
aas
das
pop
push
sbb
jle
pop
imul
push
cs
test
sarl
or
sub
outsb
stos
pop
inc
popf
sbb
push
stos
lret
lcall
sbb
orl
incl
out
ret
push
pop
mov
jns
into
cmp
mov
cmp
outsl
je
psubsw
js
push
add
push
mov
jb
lods
fnstsw
in
decl
hlt
repnz
cmpsb
je
dec
sub
push
push
enter
or
pusha
jle
aaa
push
pop
test
inc
in
movsl
xchg
in
xor
fs
test
shlb
jo
push
out
cli
mov
pop
popa
or
idivl
jno
push
mov
sbb
and
pop
enter
mov
inc
mov
fisttpl
xor
or
push
imul
mov
push
ljmp
pushf
jnp
loope
mov
ds
dec
pop
adc
orb
jno
das
lret
test
xchg
mov
imul
fs
add
or
aam
mov
arpl
add
and
pop
adcb
xchg
pop
jno
inc
clc
xor
add
push
mov
movsb
into
add
jle
aaa
pop
out
jne
mov
mov
pop
test
or
cmp
mov
or
xor
push
test
aas
es
mov
icebp
js
mov
les
mov
jns
aas
data16
and
fs
dec
pop
je
popa
addr16
int3
xchg
leave
nop
sbb
fs
mov
les
push
pop
inc
push
call
std
std
or
pop
dec
cmp
mov
mov
lahf
sub
lret
mov
adc
insl
dec
or
jp
lock
sub
dec
test
imul
imul
imul
mov
push
negl
aaa
insl
testl
push
in
shr
push
cmp
int3
and
lods
and
mov
pop
jnp
shlb
outsb
aaa
popf
pop
rcl
inc
dec
mov
cltd
adc
push
mov
mov
mov
outsb
cmpl
es
dec
sahf
mov
mov
sub
pop
aas
or
mov
push
mov
hlt
pop
lcall
xchg
roll
lods
dec
rcrl
jo
lods
dec
movsl
jmp
jne
fldt
aas
xor
leave
jb
imul
mov
xor
mov
or
mov
aam
push
cld
fimull
pop
or
je
dec
ss
sbb
call
fildl
xchg
mov
popa
dec
dec
pop
pop
add
subl
or
mov
push
fs
inc
in
popf
add
jns
mov
in
scas
dec
xchg
mov
jl
mov
xchg
pop
lcall
fldl
rep
bound
mov
lock
nop
mov
sbb
cmp
test
xchg
fisttps
push
imul
mov
fstp
cmp
movsl
and
xchg
cwtl
sti
in
cli
jno
outsl
cmp
or
adc
cmp
int
enter
mov
xchg
dec
frstor
rclb
cli
add
xchg
xor
and
inc
mov
stc
loope
pop
adc
jecxz
cmpsl
push
cld
rolb
stos
xor
negl
loope
mov
dec
mov
clc
mov
std
mov
adc
testb
jle
iret
cmp
mov
lods
mov
mov
out
dec
sahf
fadd
fnop
xor
push
jmp
lds
xlat
pop
bound
jp
mov
call
cld
push
or
push
dec
xchg
lea
lea
imul
bound
jae
xchg
loop
jle
roll
adc
fcmove
pop
loopne
xchg
mov
test
mov
xchg
enter
sub
push
loope
int
jg
pop
fsts
cli
lock
and
xor
dec
pop
add
js
aas
test
fs
popf
shlb
add
pop
jo
add
mov
mov
imul
test
sub
cmp
test
mov
loopne
fistpl
push
imul
iret
pop
hlt
mov
dec
imul
jae
mov
pop
add
pop
adc
rcr
repnz
dec
lods
out
insl
imul
mov
int3
mov
or
sub
xchg
cmpsb
mov
lret
aam
stos
mov
aad
cmp
lods
inc
xchg
in
jp
push
sub
pushf
insb
mov
jmp
fstps
dec
sar
xchg
repz
dec
or
imul
pop
arpl
lock
inc
pushf
decl
mov
add
push
pop
mov
lahf
xor
lcall
cmpsb
cltd
int3
loopne
out
pop
mov
stos
adc
cmp
xchg
dec
ja
in
mov
xor
lock
mov
add
dec
xlat
push
fidivs
pop
subb
xorl
add
xchg
sbb
movsb
mov
je
fdivs
test
cltd
push
stc
sti
orb
je
repz
jne
add
mull
mov
aaa
enter
xchg
jg
jle
mov
addb
aas
pop
sub
je,pn
jnp
cwtl
adc
xchg
fstp
jnp
in
mov
stc
ja
xchg
mov
mov
loope
out
and
inc
push
ret
jecxz
icebp
repz
std
push
xlat
hlt
mov
jmp
les
jns
sbb
xchg
dec
inc
stc
loope
mov
mov
inc
je
js
sbb
std
gs
cmp
push
inc
dec
clc
mov
jecxz
popf
movsb
sbb
test
mov
ds
bound
popf
mov
lock
mov
movsl
dec
mov
nop
les
xchg
mov
mov
test
mov
jns
dec
or
xor
jne
cmp
cld
mov
out
xor
enter
pop
add
aad
call
push
mov
ds
fidivrs
mov
or
add
idivb
and
insl
xor
ds
jo
scas
dec
cld
sub
add
test
or
xor
cmpsb
dec
pop
dec
arpl
cmp
mov
std
jp
imul
cmp
mov
sub
sbb
sub
sbb
xchg
test
out
mov
es
loop
jo
xchg
jbe
loop
cmp
xchg
test
lret
and
mov
into
mov
in
push
mov
mov
lcall
inc
or
mov
cwtl
push
sbb
mov
lahf
movsl
inc
and
push
xor
aam
enter
and
cltd
cmpsl
push
xchg
sbb
add
pop
or
mov
cwtl
loopne
or
inc
and
pop
jbe
or
shl
add
cmp
stc
fs
cmp
jae
push
aaa
sub
jp
jo
out
icebp
mov
mov
test
sbb
loop
jecxz
int3
pop
cmpsl
or
push
movsl
mul
enter
in
cmpsl
and
jne
pop
lret
pop
fstp
mov
mov
imulb
out
sub
adc
cli
bound
into
mov
fistl
popf
addr16
adc
xor
out
or
cmp
pop
outsb
jp
fcomip
fists
cmp
mov
mov
lahf
ret
dec
test
aam
scas
mov
and
jb
jecxz
std
out
call
cmp
mov
cs
test
xchg
or
fistpl
dec
popa
loopne
dec
jge
pop
lea
loopne
inc
or
pushf
mov
cmp
jmp
es
jg
mov
fisubl
inc
fucomi
inc
mov
std
jns
jmp
movsb
mov
push
lods
push
fldt
sbb
jb
inc
scas
stos
sub
and
xor
mov
inc
aad
cmp
into
bound
fisubrs
lahf
cmp
lds
pop
nop
sbb
out
add
ds
fbstp
mov
test
jbe
add
inc
and
mov
or
dec
daa
rclb
je
and
lcall
out
and
cmp
cld
int
inc
das
ret
lds
cmpsl
pop
aad
data16
pop
xor
mov
dec
imul
fsubs
push
mov
mov
xchg
insl
mov
push
shlb
mov
lcall
nop
stos
add
bound
aam
push
mov
dec
push
adc
ficompl
cmp
dec
std
scas
roll
loop
add
mov
out
add
insl
pop
sbb
jo
and
inc
fstp
pop
pop
xchg
mov
push
loop
out
push
lret
sbb
pop
sub
xchg
xchg
fistps
fildll
push
jle
pop
sub
insl
test
outsb
inc
pop
adc
dec
jnp
aam
or
fwait
mov
xor
lret
sbb
test
hlt
movl
out
and
stos
jae
mov
add
sbb
shrl
subb
into
push
test
xchg
pusha
loop
xchg
or
mov
inc
cmp
xor
incb
jmp
sbb
xchg
push
pop
jle
mov
popa
arpl
orl
sub
mov
shll
jae
push
leave
and
push
cwtl
mov
inc
or
inc
add
inc
dec
jno
pop
mov
or
inc
jmp
xchg
xchg
pop
fdivs
push
sbbb
in
and
and
adc
inc
add
xchg
fcomps
cmp
outsb
fstps
bound
cwtl
add
adc
rorb
icebp
mov
jbe
dec
loop
xchg
inc
push
cmp
mov
pop
ret
inc
les
lcall
loopne
xor
out
jns
fs
mov
fisubl
jle
pop
xchg
pop
pop
add
xor
jmp
aas
sbb
sahf
daa
loop
ret
jns
adc
dec
adc
add
lods
push
pop
jmp
sbb
xbegin
sbb
movsl
stos
push
jno
popf
stc
in
incb
jo
inc
add
sarl
jp
dec
push
mov
mov
sub
dec
mov
stos
es
rclb
ds
fiaddl
inc
ficoms
orl
xor
sub
outsb
pop
out
sbb
push
cmpsl
subb
xchg
aad
mov
insb
js
push
fcoms
gs
mov
movsb
aas
jno
jge
std
movsb
mov
lret
cltd
pop
addr16
sub
ret
jno
enter
and
neg
fcoms
sarb
push
sub
jl
sub
pop
pop
cmp
add
in
fldenv
dec
fcoms
les
cmp
scas
ja
adcb
jne
or
les
in
push
xchg
inc
fdivrs
mov
aam
inc
pop
ja
faddp
push
test
xchg
dec
dec
fwait
out
adc
cmpsb
jg
pop
sub
fildll
xchg
adc
cmp
iret
aad
mov
mov
xchg
in
movsl
xchg
xlat
ss
es
sti
imulb
mov
push
push
idiv
je
adc
sarb
lods
popa
es
cwtl
sahf
mov
out
pop
mov
xchg
or
add
repnz
dec
sub
ljmp
hlt
xor
outsb
inc
inc
push
scas
add
loopne
ret
lcall
fsubl
iret
hlt
pop
lret
pop
push
add
dec
sarb
pop
in
pop
pop
and
push
or
int3
cmc
sahf
les
fcomps
mov
pop
push
mov
in
cs
xor
movsb
xchg
es
mov
sbb
xor
xchg
and
rcll
into
out
cmp
pop
andb
ljmp
je
dec
dec
mov
push
mov
sbb
or
pop
cmpsl
dec
adc
cld
jbe
cmp
dec
pop
inc
addr16
jmp
mov
cmp
popf
stos
popa
jp
and
xor
jle
jbe
fcmovne
test
fsts
mov
jns
dec
gs
adc
or
stc
cmc
leave
in
xchg
test
movsl
cltd
push
imul
adc
or
stc
xchg
leave
in
add
mov
push
imul
adc
or
cltd
std
scas
int
fsts
mov
rcr
dec
gs
fisubl
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jle
mov
mov
notl
lcall
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
xor
aaa
add
add
add
add
add
add
add
add
xor
mov
add
mov
add
add
data16
add
add
insb
add
add
rolb
ja
lea
out
or
push
add
sbb
inc
add
outsl
or
add
add
add
addl
mov
add
add
inc
add
or
jl
lcall
add
add
aaa
add
add
sbb
loopne
nop
add
enter
and
xchg
add
add
add
add
add
add
str
add
mov
add
add
add
roll
adc
jle
cmp
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
adc
cmp
popa
add
add
cmp
add
adc
dec
add
add
or
mov
rolb
add
or
repz
add
sub
push
add
add
add
add
jnp
cmp
or
iret
push
outsl
add
add
add
add
add
add
add
add
add
add
add
inc
add
data16
add
add
add
mov
add
add
xchg
or
inc
add
add
add
add
add
add
popl
add
hlt
add
add
add
add
add
add
xchg
add
add
push
add
add
add
add
add
das
add
jo
or
cmp
insb
add
push
add
add
add
or
in
push
inc
add
movsb
add
add
popl
inc
add
pop
add
add
add
add
add
add
add
add
add
add
xchg
add
add
dec
add
xor
inc
add
add
add
add
add
add
adc
cmp
add
push
add
add
add
add
ja
jmp
add
sub
cmp
add
add
add
add
xchg
add
push
add
push
add
add
add
add
add
add
add
add
add
add
or
test
add
xor
jno
pop
add
popl
or
or
test
add
push
add
add
add
add
xor
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
push
add
add
add
add
sub
cmp
add
add
sub
add
pop
add
add
add
add
push
add
add
js
aad
xchg
add
lea
jno
sbb
clc
add
into
add
add
add
add
add
add
add
add
add
add
add
out
lret
cmp
lret
mov
mov
jmp
insl
lock
mov
mov
mov
xchg
jo
mov
pop
roll
jmp
push
inc
add
stc
rcrb
pusha
jae
add
enter
cmp
into
dec
or
hlt
pop
lcall
lea
xchg
das
fnstcw
out
mov
add
cmp
cltd
pop
cmp
shrl
sub
cltd
fildl
xchg
testb
pop
sub
stc
jge
jmp
mov
jnp
jp
in
pop
cmc
ret
imul
mov
jmp
mov
pushf
mov
mov
es
pop
adc
les
repnz
sbb
xor
dec
mov
sti
lahf
dec
inc
push
xchg
cmp
adc
fisubl
mov
and
inc
jnp
adc
mov
push
mov
xchg
mov
and
mov
sbb
mov
aam
test
xorb
push
in
mov
cmpsb
xchg
mov
popf
jg
xor
xor
jmp
jb
sbb
hlt
enter
xor
adc
push
sbb
lea
jecxz
sbb
pop
jbe
lods
test
push
je
lods
mov
or
cmp
repz
inc
out
xchg
add
rorb
mov
fisttpl
xor
outsb
pop
add
jmp
add
std
adc
sub
pop
repz
mov
std
bt
dec
dec
inc
xor
ljmp
and
cmpsl
jno
push
adc
jle
sarb
push
jmp
test
fldenv
push
in
pop
call
push
xchg
out
inc
mov
adcl
popa
lret
inc
loope
in
ds
and
fsts
adc
dec
adc
sarb
dec
mov
int
scas
js
loopne
xchg
pop
pusha
pop
pop
sbb
sarl
sar
mov
mov
mov
or
mov
or
repz
pop
fidivrs
xorl
dec
leave
pop
add
iret
jg
adc
scas
adc
stos
popa
and
lahf
ljmp
add
cmpsl
pop
je
call
cli
xchg
fwait
shll
inc
mov
bound
mov
adc
sub
sub
mov
les
pusha
adc
aas
mov
fcmove
aas
hlt
inc
push
cmc
inc
int3
jne
scas
ret
mov
ds
in
sbb
je
out
mov
xchg
hlt
mov
lret
and
dec
adc
jle
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
