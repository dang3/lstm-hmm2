call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
jno
popa
in
xor
add
add
adc
arpl
mov
xorl
jecxz
repz
xor
mov
xor
ja
adc
arpl
push
mov
sub
pop
jecxz
repz
ret
cmp
adc
shll
loop
nop
cmp
out
ret
cmp
add
and
add
push
repz
dec
mov
loopne
pop
jmp
or
dec
arpl
sub
xorb
sahf
leave
add
mov
into
and
cmp
pushf
test
inc
cmp
sbb
sbb
mov
rcrb
cld
lock
ret
cli
jge
gs
data16
mov
cmc
jne
popa
jecxz
jecxz
cmp
push
and
mov
xor
or
dec
push
fstpl
mov
pop
and
add
lock
xor
iret
xchg
adc
lcall
loop
sub
scas
mov
sbb
repnz
pop
and
pop
xchg
sti
daa
push
mov
jb
inc
pop
cmp
std
fnsave
popa
jecxz
repz
xor
mov
shll
imul
lods
jae
inc
test
fisubrl
out
testb
inc
xchg
bound
jg
push
sbb
pop
lds
enter
pop
roll
testb
pop
rcll
inc
mov
mov
mov
daa
xorl
and
mov
jecxz
repz
xor
and
shll
roll
adc
arpl
push
mov
xorl
jecxz
repz
xor
and
shll
roll
adc
arpl
push
mov
cmp
cmp
or
int3
push
dec
sahf
inc
mov
ljmp
mov
dec
mov
fsubl
ficomps
dec
push
in
jbe
jb
xchg
and
addr16
pop
jmp
pushf
popa
clc
and
js
mov
ss
adc
or
jbe
out
cli
imul
in
cmp
ds
outsb
mov
sti
inc
xlat
mov
cmp
xor
ljmp
mov
aas
cmpsb
les
mov
test
rcrl
out
jb
xor
xor
rol
xor
notb
nop
add
inc
xchg
fildll
jl
pop
je
mov
jp
jg
sbb
dec
es
push
pusha
aas
movb
pop
dec
push
pop
pushf
fdivrs
mov
and
cwtl
scas
add
out
out
or
rcl
mov
loop
fcmovne
fcmovbe
stos
fwait
data16
push
or
xor
cmp
clc
and
and
loopne
add
sub
aas
xchg
imul
or
pusha
dec
jbe
sbb
call
push
add
xchg
cmp
cmp
fwait
xchg
pavgw
xor
insb
push
push
ljmp
test
shrl
ret
fimuls
push
inc
aad
testl
les
stos
and
outsb
aaa
int
lahf
stc
dec
cmp
inc
shl
inc
adc
pop
les
cmc
mov
sub
mov
fmul
xchg
fisubrl
sbb
imul
sub
scas
sbb
cmpsb
frstor
fwait
and
mov
inc
fmuls
jns
jmp
sbb
cmp
xchg
stos
jno
rolb
jb
ss
dec
fwait
add
push
jbe
pop
lea
mov
adc
jbe
cld
cwtl
mov
lods
addr16
into
cmpsl
mov
dec
adc
nop
or
lds
gs
pop
xor
lock
andl
jle
lcall
xor
xlat
inc
push
xchg
and
aam
cmp
jmp
test
sub
inc
cmpb
inc
xor
cmpl
loope
dec
mov
and
lods
xchg
into
mov
xchg
xchg
cwtl
adc
jns
xchg
mov
notl
or
lcall
ret
scas
fs
iret
adc
add
fists
lret
sub
inc
mov
mov
push
pop
das
xchg
aad
loop
call
adc
lock
jns
lahf
out
jo
mov
aas
cli
loopne
cltd
inc
popf
jecxz
xor
dec
arpl
sub
adc
jp
push
pop
sti
icebp
mov
inc
pop
push
push
sahf
mov
ror
jle
or
mov
xchg
loopne
xchg
push
mov
out
sub
jl
jae
xorl
adc
aam
cmpsl
loop
push
dec
push
push
imul
add
and
popf
imul
leave
cmp
les
movsb
mov
and
fsubrl
xchg
rolb
lds
fisttpl
ret
leave
int3
in
and
popl
push
cmp
adc
enter
push
sti
pusha
xor
scas
jl
rolb
jle
mov
push
iret
cmc
lods
mov
pop
push
scas
loop
shrd
and
ja
add
jne
pop
sub
or
push
addr16
arpl
cwtl
and
test
fldl
sub
gs
push
and
nop
in
sbb
hlt
js
jle
push
test
into
leave
fsubl
fwait
jl
inc
daa
aaa
iret
jg
icebp
push
push
cmpsl
jecxz
sub
jns
cmp
into
sub
inc
scas
sub
sti
xor
sub
xor
scas
add
mov
or
push
data16
push
jl
xchg
ret
add
dec
lea
cwtl
rolb
nop
fistps
lret
sbb
jbe
std
ret
imul
cmc
xor
dec
pop
or
or
push
ss
rolb
in
mov
insl
xor
xor
push
sub
inc
fnstcw
jmp
pusha
scas
cs
cltd
and
dec
xor
test
repnz
shl
mov
xchg
inc
popf
xor
jno
xchg
pop
mov
xchg
imul
dec
fmuls
lret
mov
and
add
andb
fldt
clc
ret
iret
adc
mov
and
sbb
pop
cmp
push
push
mov
or
ss
jg
lret
sahf
rcl
or
test
push
inc
push
inc
push
aad
clc
xor
push
movd
dec
insb
sub
mov
in
pop
dec
int
xchg
loope
test
divl
sbb
inc
aad
test
loopne
mov
pop
call
ret
cwtl
xor
cli
lea
in
addr16
or
rol
aaa
jns
mov
adc
ss
jae
adc
mov
mov
pop
adc
sub
xor
sbb
inc
sbb
push
jo
jno
movsl
cltd
dec
mul
mov
mov
lods
ljmp
in
outsb
nop
sub
or
mull
mov
push
adc
cld
fdivr
mov
scas
mov
xor
sbb
aas
pop
add
int
jge
sbbb
add
mov
imul
sbb
outsb
fistpl
int
lret
add
or
test
aas
fdivp
dec
std
sub
cmp
sub
mov
sbbl
notb
xchg
mov
syscall
pushf
push
xchg
repnz
sub
inc
outsl
ja
inc
cmp
jl
je
sar
imul
ja
mov
ds
daa
aaa
bound
aas
dec
imulb
pushf
loopne
sbb
in
inc
out
incb
cwtl
in
je
inc
xor
insb
push
mov
aam
insb
ret
les
and
outsl
adc
sub
aas
dec
jne
aad
ss
push
stos
pop
icebp
aaa
pop
xchg
jnp
sbb
inc
sbb
xchg
repz
fs
or
add
lcall
xor
add
cltd
mov
xor
adcl
adc
movsb
or
test
ljmp
mov
fldenv
inc
fstl
movb
out
xchg
in
dec
paddusb
outsb
xchg
sub
test
adc
hlt
aaa
addr16
and
rcr
xlat
jne
scas
mov
mov
push
mov
leave
sahf
dec
adc
fisubs
fsubl
je
fs
fildl
or
jb
mov
add
jne
push
sub
cld
insl
outsl
clc
lds
out
xchg
mov
test
imul
gs
xor
mov
add
sbb
or
cmpsl
in
lea
xor
push
push
popa
and
dec
call
or
cmp
mov
adc
dec
jg
push
sti
cmc
jge
or
dec
pop
sub
outsl
movsb
jecxz
and
in
mov
and
lahf
clc
jb
jo
push
dec
es
sub
ja
popf
mov
xchg
sub
push
add
sahf
pop
bound
stos
fwait
cwtl
add
fimull
shrl
lahf
aas
lcall
sahf
add
out
and
movsl
jae
pop
das
mov
sbb
pop
mov
out
sbb
sub
pusha
jae
lcall
or
jle
es
lods
adc
mov
mov
push
or
sub
es
data16
test
pop
fdivrl
into
sub
add
fstps
jns
mov
or
xor
xchg
mov
mov
out
hlt
xchg
pop
xchg
sub
fcomps
push
adcb
mov
lods
sbb
sub
aad
dec
cmp
das
ds
rcll
xchg
xchg
sbb
fs
xchg
mov
test
loope
mov
push
not
jbe
push
scas
imul
xchg
or
mov
rorb
movl
loope
or
cmc
inc
xor
add
dec
and
xchg
andb
lret
mov
mov
xor
bound
call
and
sub
pushf
test
mov
jno
mov
test
je
lock
push
les
call
insb
jbe
push
ja
xor
pop
xchg
bound
rolb
push
fisubs
mov
fwait
push
shrb
out
cmpl
gs
pop
adc
stc
repz
inc
leave
pop
scas
loope
scas
push
cli
mov
push
ja
data16
or
sub
adc
mov
dec
loope
xchg
cld
fs
mov
pushf
loopne
sbb
dec
in
hlt
bound
or
jo
xor
cmpb
pusha
cmp
add
mov
jae
and
je
jne
cmc
lds
and
jbe
add
dec
and
scas
inc
out
sub
inc
mov
aam
sti
mov
jmp
inc
enter
nop
loop
sub
xorl
incl
shrd
push
in
fidivl
scas
adc
mov
leave
fistl
inc
lds
daa
nop
jb
xchg
inc
jbe
jl
das
xor
and
xor
cld
inc
mov
adc
nop
dec
jmp
shlb
pop
in
dec
test
repnz
jecxz
pop
and
dec
push
int3
push
dec
test
outsb
or
xchg
adc
adc
scas
roll
sub
insl
mov
dec
or
and
sbb
clc
out
cmp
pushf
not
mov
arpl
mov
push
je
mov
pusha
mov
sbb
jecxz
loope
icebp
fsincos
rcll
add
clc
es
sbb
add
pop
sbb
xchg
xor
popf
jge
adc
mov
mov
mov
js
inc
mov
and
mov
imul
jns
test
scas
pop
push
popf
or
mov
xchg
test
add
mov
scas
clc
lds
fs
fists
mov
inc
das
cmpsb
inc
aaa
add
cwtl
add
pop
mov
add
adc
cmpsb
repnz
in
leave
shr
jle
jb
dec
add
jnp
jnp
lods
dec
inc
mov
mov
cld
jge
iret
inc
js
xchg
and
mov
cmp
andb
mov
out
mov
shl
jmp
mov
and
cld
or
sub
or
scas
sbb
pop
xchg
jle
mov
adc
adc
negl
xchg
and
lret
lahf
cmp
mov
jecxz
mov
decl
push
movsb
out
cmp
jg
dec
mov
adc
pop
jns
daa
bound
pop
scas
out
fisubrl
mov
xor
repnz
mov
inc
fs
jnp
jae
lea
notl
cmp
jns
cmpsl
movsb
jne
clc
lahf
cltd
xchg
ret
lock
outsb
testb
faddl
fbld
jge
jno
and
in
fcomps
sbb
aas
pop
cli
rorl
and
sbb
sub
popl
test
movsb
add
dec
insb
mov
repnz
out
add
xor
andb
xchg
or
out
das
addr16
adc
inc
push
mov
mov
hlt
mov
rcr
ds
cmc
ret
mov
test
in
fwait
loopne,pn
test
sbb
scas
icebp
jo
jmp
mov
cwtl
out
or
jbe
jnp
mov
sub
rcrl
mov
cmp
ss
nop
std
pop
dec
movsl
lea
xchg
jae
inc
je
mov
dec
call
enter
cmp
xchg
xor
mov
sub
sbb
iret
and
mov
aad
and
jns
jl
lods
int3
daa
sub
sbb
pop
xchg
or
cld
sbb
pop
out
je
pop
jns
inc
xlat
lods
push
push
or
leave
jne
pop
push
push
arpl
fdivs
ficoms
push
idivb
cmp
ds
mov
dec
loope
push
ret
mov
scas
lcall
adc
mov
inc
adc
enter
stos
fsubrs
jo
mov
sbb
scas
jg
sub
subb
in
sub
lods
xchg
in
push
sub
pop
sbb
adc
mov
cmp
enter
imul
xor
fsubrs
pop
xchg
sbb
push
daa
sub
ficoms
fisubs
inc
xchg
and
add
dec
xchg
loopne
push
adc
js
jnp
jae
subl
filds
out
out
cmp
jmp
leave
cmc
lret
mov
movsb
pop
mov
scas
ret
xchg
mov
push
mov
outsl
std
xchg
xlat
jbe
sbb
rcrb
dec
test
pop
push
cs
xchg
or
add
mov
divb
ret
clc
add
mov
cli
call
out
mov
imul
inc
frstor
ss
add
and
ljmp
popf
sti
sub
pop
or
cmp
push
adc
jo
xchg
adc
or
pop
or
fnstcw
insb
sbb
shl
adc
lcall
fstl
push
xchg
inc
outsl
lahf
sub
xchg
stc
insb
pop
imulb
call
rcrl
ljmp
xor
push
loop
or
or
cmp
neg
call
push
mov
push
cld
sub
add
mov
add
sbb
insl
fsts
inc
roll
ljmp
xchg
mov
incl
jns
je
je
add
dec
sbb
out
mov
addr16
push
jecxz
jmp
stos
stos
adc
outsl
ljmp
push
pop
jge
mov
and
cmpsb
test
gs
imul
ret
jnp
cmpsl
ds
outsl
push
push
pop
xor
loopne
sub
loopne
cltd
push
stos
aas
pushl
test
xchg
pop
in
out
and
and
or
into
add
ds
adc
daa
push
iret
cmp
sbb
xorl
sbb
std
fdivl
sbb
std
mov
dec
lock
push
mov
jg
hlt
jp
out
jge
out
jns
mov
jb
mov
push
jl
inc
xor
int
jo
sbb
fimull
fmulp
sarb
arpl
cmpsl
adc
shll
cmp
jmp
and
dec
lods
sbb
push
es
sbb
jecxz
dec
jmp
das
stos
mov
xchg
jl
dec
adc
jle
xor
ret
push
pop
jl
imul
mov
test
popl
cmpsl
pop
sbb
xor
out
int
test
pop
push
rcl
jge
dec
aam
cs
sub
sub
inc
jmp
stos
mov
jns
sub
fnstenv
stos
sbb
scas
cmp
das
dec
add
roll
xchg
enter
mov
jl
adc
xor
xlat
mov
cmp
cmp
fnstcw
les
jl
lcall
cmpsb
rol
pop
or
sbb
popa
data16
jmp
jbe
cmpsb
jnp
xchg
insl
xchg
mov
cld
lods
xchg
cwtl
dec
orl
jmp
nop
pop
cli
push
jge
sbb
rcrl
test
pop
les
xchg
and
sti
and
xchg
cmp
je
jge
mov
inc
xor
mov
imul
adcl
pop
in
xchg
or
add
int
sub
inc
icebp
rcrl
add
pop
xor
aas
mov
pop
fimuls
and
or
dec
mov
mov
sbb
inc
xlat
roll
dec
mov
fistpl
jmp
dec
lea
fistl
cs
sbb
arpl
mov
and
push
pop
fst
cmpsl
in
and
inc
loop
and
mov
xor
push
imul
sbb
pop
or
xchg
outsb
dec
pushf
les
sahf
and
and
xchg
push
adc
or
test
bextr
inc
jns
inc
and
xor
mov
idivl
xchg
sahf
pop
lcall
outsl
and
out
push
jp
cltd
mov
ret
inc
inc
add
jmp
mov
cmp
sbb
rep
inc
cmp
adc
loop
outsb
test
sarb
in
pop
ja
incb
sbb
call
push
or
mov
addr16
js
xchg
sbb
cmpsb
jne
dec
mov
dec
movsl
bound
not
push
pop
ljmp
jl
cmp
lcall
jmp
repz
jl
add
rorb
mov
add
cmc
sahf
add
popf
jae
lea
fisubl
repnz
mov
outsb
mov
pop
das
test
mov
ds
cmp
in
mov
repz
cmpsb
xor
loope
jne
mov
rcr
fs
xor
adc
cld
add
and
mov
xor
pop
je
xor
mov
lcall
jbe
inc
mov
adc
push
test
stos
or
mov
sti
mov
xor
aam
pop
jp
jb
popa
lea
add
into
mov
push
pop
or
fstps
mov
fdivs
ret
mov
xchg
sarb
mov
and
lock
jo
aam
xor
mov
adc
sub
enter
inc
scas
rcll
pusha
popa
xchg
decl
or
or
cmp
outsl
mov
fmul
ljmp
daa
dec
adc
push
xchg
xchg
repz
adc
jge
addb
or
cmp
or
sbb
xchg
xor
clc
jle
out
dec
inc
fbstp
mov
inc
sahf
into
jo
fsubr
pop
cmp
cmp
mov
and
mov
jo
adc
xchg
push
cwtl
les
jl
sbb
mov
cli
mov
mov
nop
jmp
es
cmp
xchg
sbb
movsl
inc
push
mov
dec
scas
out
hlt
std
xorl
fwait
dec
lret
xor
push
cmc
and
xor
fildll
imul
pop
jp
pop
xchg
outsl
add
gs
sti
insb
pop
gs
das
mov
ret
mov
out
mov
repz
shrl
movsb
rorb
das
xchg
push
mov
aam
arpl
inc
rcrl
das
or
out
aas
mov
js
ja
adc
mov
ret
inc
inc
ljmp
fnstcw
inc
cmp
jmp
adc
inc
scas
ss
notb
cmpl
ret
aam
cmp
xchg
inc
cltd
mov
and
scas
adc
xor
lcall
mov
imul
mov
cmc
mov
pop
push
lea
pusha
inc
add
mov
imul
fisttpll
inc
stc
inc
jmp
rorl
das
push
sbb
or
and
sarb
mov
or
frstor
icebp
cmpsb
xlat
shrb
jno
in
push
xchg
jb
cwtl
fstl
cld
pusha
in
scas
lret
jl
mov
jbe
out
mov
mov
sbb
push
push
ja
stos
lods
xor
into
sbb
notl
pop
subb
cmc
std
push
rcrl
adc
or
and
lock
xchg
insb
in
xchg
aam
test
data16
loop
lcall
xchg
inc
enter
mov
mov
popa
jecxz
adc
std
cmp
ds
adcl
mov
mov
jge
lahf
test
mov
inc
in
mov
insb
or
mov
inc
pop
ror
ret
roll
out
jmp
dec
sar
cmpsb
pop
pop
pop
pop
test
mov
arpl
fistpl
pop
pop
or
pop
cmp
popf
and
test
cmpb
sti
pop
fstpl
sbbl
fildll
xchg
xor
add
dec
or
dec
sbb
insl
jns
arpl
dec
lods
test
xor
call
cmpsb
cli
and
mov
sbbb
std
in
mov
xchg
es
lods
pop
jno
and
push
push
stc
insl
loope
in
mov
sbb
xchg
jo
push
rolb
jnp
cmp
sti
popa
push
ja
xor
and
imul
pusha
mov
shll
sub
movsb
pop
push
cli
das
test
jno
pusha
je
cwtl
sub
pop
jmp
je
sub
lds
fwait
sub
cmp
stos
ret
movsb
xchg
xchg
sub
fsubl
fcmovb
mov
test
sti
push
scas
mov
adc
lret
nop
shrb
ja
xchg
loope
jb
pop
pop
jg
cli
addr16
mov
in
pop
cmp
fcompl
in
pop
inc
bound
pop
jnp
icebp
aad
jl
cmp
ret
add
std
mov
mov
adc
mov
ljmp
jb
lods
mov
lea
std
int
add
dec
in
and
data16
jg
ja
add
je
cwtl
inc
ror
lock
mov
add
cmp
loope
addl
xchg
popa
jecxz
repz
xor
and
shll
roll
adc
arpl
push
mov
xorl
jecxz
repz
xor
and
shll
roll
adc
arpl
push
mov
subl
jecxz
repz
xor
xor
add
adc
arpl
push
inc
mov
xchg
xchg
and
adc
add
mov
loope
xor
icebp
adc
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
popf
arpl
push
aam
stos
pop
mov
adc
jecxz
repz
mov
insl
xchg
popf
arpl
push
frstor
int
std
add
adc
ret
sub
mov
subl
arpl
push
frstor
int
std
add
adc
mov
rcrl
xlat
ds
xchg
jmp
daa
les
push
add
aad
cmpsb
aaa
ret
sub
or
pop
jno
jb
inc
push
push
lods
fstp
int
add
add
xchg
ret
ret
rcl
or
cmp
cmpl
jbe
movsl
xlat
mov
aas
mov
aaa
add
xchg
mov
test
pop
mov
insl
xchg
popf
pushf
stos
jb
inc
stos
inc
mov
xor
movsb
ljmp
fdivrl
dec
jecxz
jge
mov
decb
cmp
in
int3
add
inc
sbb
add
loopne
imul
addb
mov
call
std
xchg
pop
sbb
loop
movl
mov
arpl
push
frstor
int
std
add
adc
ret
sub
mov
subl
push
out
mov
mov
imul
lcall
or
sbb
sbb
cmp
inc
in
add
inc
xchg
outsl
cmpsb
push
inc
xchg
sub
fcoml
pop
std
cli
xor
daa
cwtl
dec
int
std
add
adc
ret
sub
mov
subl
arpl
push
frstor
int
std
add
adc
ret
sub
mov
subl
arpl
data16
aas
and
scas
cli
fidivs
add
jl
inc
jb
loop
xor
push
sbb
das
mov
pop
push
sub
mov
sbb
mov
xlat
in
out
in
push
ret
sub
addl
js
test
loopne
pushl
push
ffreep
jbe
aam
imul
test
pop
xor
pop
pop
in
lea
sbbb
xchg
loop
in
clc
clc
fcoms
inc
pop
mov
insl
xchg
mov
scas
rolb
adc
mov
mov
cmc
adc
pop
outsl
sbb
bound
inc
xor
xchg
cmc
out
pop
dec
inc
mov
or
out
ret
aas
es
jp
inc
add
add
clc
adc
lahf
mov
sub
adc
das
sbb
ret
cmpsl
stos
dec
dec
lock
in
push
dec
outsl
imul
push
insl
cmp
test
mov
movsl
xlat
movsl
dec
jnp
sub
push
in
jle
rolb
mov
rol
test
ret
cmpsb
testl
add
push
cmc
sarb
xlat
sbb
rcrl
test
mov
add
leave
test
xchg
adc
js
out
jnp
mov
hlt
adc
dec
movsl
dec
dec
cmpsb
and
jg
stos
sub
lahf
mov
orl
mov
xchg
leave
xchg
iret
or
fimuls
pop
pop
mov
add
in
mov
lcall
mov
add
and
nop
call
pop
jecxz
push
xor
cltd
dec
mov
mov
bound
pop
orb
pop
jle
sbb
sub
into
and
mov
inc
mov
add
mov
lods
arpl
push
iret
adc
lret
ja
fistpl
sbb
xor
outsb
cmc
inc
arpl
pop
mov
scas
jmp
add
sub
cli
test
pop
insl
call
sub
push
mov
jecxz
ret
fwait
cmpsb
dec
mov
and
pop
mov
xchg
int3
and
add
in
adc
mov
lret
scas
push
popa
fcomps
cld
xor
js
or
sub
push
aad
pop
fsubs
or
inc
xchg
push
mov
rol
add
xchg
les
rclb
xchg
shrl
in
out
lahf
sub
xchg
ret
sahf
cli
push
test
sahf
popf
stos
dec
or
xor
cld
ficoms
rol
shlb
sub
add
pop
loopne
xlat
inc
fisubrl
jle
leave
pushf
pop
xchg
dec
xchg
pop
push
clc
pop
add
lds
fisubrl
aam
ss
sbb
mov
adc
inc
pop
add
das
adc
cmp
xchg
cmp
cmp
aas
xchg
xor
lret
shrb
lahf
jp
aas
pop
jl
push
incb
sti
pop
xchg
pop
push
xchg
adc
fwait
push
mov
and
push
dec
xor
xor
clc
adc
mov
les
nop
or
sub
push
in
add
arpl
mov
inc
hlt
mov
sbb
repz
mov
inc
inc
out
test
or
cmc
cld
es
int
jns
movsl
addr16
aam
add
jmp
lea
jge
push
add
add
xor
sub
jle
leave
push
jae
into
andb
cmp
cmp
push
addl
mov
dec
out
fisubl
add
and
mov
mov
fs
push
jae
inc
fdiv
sbb
popa
rcl
sarb
dec
ljmp
out
mov
testl
sbbl
adc
fildll
or
push
mov
cmp
repnz
shl
loop
outsl
xor
adc
stc
add
mov
repz
out
repnz
jp
fnstsw
add
jmp
sub
cmpsl
mov
scas
lret
mov
jb
sub
shlb
xchg
xchg
imul
and
ret
mov
jecxz
dec
test
out
jmp
dec
inc
jo
adc
mov
fildll
xchg
lea
outsb
pop
sti
cmp
xchg
or
insl
enter
ss
and
outsl
lea
insl
test
or
pop
icebp
push
loopne
bound
dec
xlat
jb
icebp
push
js
cmp
lcall
out
push
out
xor
dec
lcall
sbbb
lea
out
dec
sbb
stc
inc
mov
js
ds
cmp
bnd
xlat
mov
mov
enter
addl
xrelease
push
pop
lret
in
out
xchg
sub
sti
push
mov
out
cmc
loop
test
push
sbb
cwtl
sbb
insl
sti
fwait
outsb
add
clc
cmp
aam
scas
ljmp
sti
jo
cs
out
inc
les
cmpsl
insl
ja
push
pop
repz
loope
or
add
call
daa
add
mov
sbb
daa
movsb
loope,pn
lahf
sti
sbb
iret
out
daa
idivl
popa
or
ss
fwait
in
roll
dec
lds
insb
test
shl
cmp
cld
jbe
roll
sarl
mov
pop
out
or
pop
cmpsb
sbb
mov
nop
aam
or
and
lds
pop
test
jbe
mov
arpl
mov
jb
pop
adc
icebp
inc
sub
ret
test
ret
pop
subl
xor
shll
movsl
mov
xchg
repz
lret
mov
sub
pop
mov
sbb
stc
mov
add
hlt
int3
xchg
pop
push
arpl
cmp
pop
pop
icebp
inc
sysenter
ror
stos
push
aas
int
inc
or
cmc
jge
push
mov
fwait
lret
clc
mov
jne
loop
pop
xchg
mov
pop
fistpl
mov
mov
les
bound
pushf
lock
jl
cmpl
hlt
cmp
in
jle
sub
pop
xor
push
jb
test
bound
jns
jg
jne
mov
std
lret
cmp
and
xor
pop
test
repnz
cwtl
scas
dec
adcb
int
stc
mov
jl
scas
dec
fwait
push
mov
pop
cmp
lahf
mov
xchg
mov
leave
dec
push
push
out
jns
loope
push
rorl
dec
xchg
sti
xchg
cmp
insb
sbb
ret
mov
adc
daa
push
int3
subl
sbbl
push
inc
xchg
scas
jmp
add
iret
or
jle
push
fisttpll
mov
and
outsl
mov
loope
adc
ret
js
xchg
mov
lods
jp
arpl
fisttpl
cmp
insl
in
outsb
add
call
cmpsb
mov
das
cmpsb
sbb
arpl
int3
lock
xchg
fiadds
push
inc
dec
push
jecxz,pn
cmp
push
cwtl
push
sub
dec
cmc
lcall
mov
adc
pushf
cmc
icebp
and
cmp
in
loopne
mov
xchg
je
pop
call
push
je
movsb
push
jle
cmp
shlb
jno
sbb
mov
adcl
ret
push
xlat
daa
loop
add
mov
and
xchg
adc
sub
iret
fisubs
mov
sahf
inc
cmp
push
sahf
outsb
or
lret
lock
sub
xor
movsl
out
dec
stc
daa
or
and
xchg
jg
mov
loopne
fnsave
mov
aaa
rcrl
loopne
jmp
or
xor
lcall
sub
scas
std
sbb
testl
inc
repnz
mov
test
add
mov
add
ds
cmpsl
lret
jecxz
fs
lock
cmp
aaa
lahf
adc
ret
repnz
adc
cmp
fmuls
inc
dec
dec
insl
or
into
cmpsl
addr16
push
adc
sub
das
mov
mov
add
pop
das
cmp
rol
pop
mov
ret
flds
adc
inc
outsl
call
mov
sbb
fistl
movsb
les
mov
lcall
pop
lock
pop
xchg
scas
outsb
rol
xor
movsl
adc
insb
je
loopne
mov
inc
xor
js
fsubrs
mov
aam
dec
sub
fs
ss
iret
jmp
pusha
cmpsl
sub
insb
das
sub
xchg
pop
mov
or
adc
jnp
fs
repnz
fstps
out
ja
push
inc
popa
cmc
pushf
clc
sahf
and
outsl
mov
push
pop
lahf
in
roll
inc
pop
adc
call
jp
add
negl
xchg
mov
and
ret
divl
mov
jne
xchg
test
sbb
jae
pop
leave
in
fsubrl
pop
js
xchg
inc
dec
insl
cmpsl
daa
call
cs
mov
ret
cmp
insl
addr16
mov
push
xor
mov
cwtl
mov
sbb
lahf
cmp
mov
out
pushf
leave
mov
or
mov
out
inc
mov
shlb
push
call
xchg
push
jo
out
fwait
mov
adc
cmc
dec
xor
sbb
adc
add
xor
and
mov
shl
jbe
rcrb
mov
sbb
xchg
shlb
push
mov
cli
into
mov
cmpsl
push
xchg
push
xlat
fdivrs
inc
add
out
jl
sbb
jl
inc
jns
push
icebp
mov
mov
push
and
ja
lods
outsb
mov
mov
add
enter
test
mov
add
mov
or
fsts
cmc
movsb
push
xlat
daa
xchg
adc
and
test
xor
enter
in
adcb
fcomps
cmpsl
add
sbbl
mov
rcll
sbb
pop
and
add
sbb
int3
lods
mov
insl
push
mov
push
pop
mov
sub
dec
in
daa
sahf
inc
and
push
sbb
sti
fs
mov
dec
insb
cwtl
sbb
pusha
in
sub
and
fnstcw
push
inc
pop
mov
and
mov
std
outsl
jg
push
pushf
xchg
ret
pop
test
or
data16
inc
pop
mov
xor
mov
out
movsb
wbinvd
jae
push
mov
loop
negb
filds
fstp
xchg
ja
add
icebp
and
ja
shl
rcrl
cld
lcall
ror
das
jae
dec
cld
mov
ja
xor
sbb
lods
sbb
sub
cmc
xchg
scas
hlt
xchg
cmpsb
add
adc
enter
arpl
mov
lcall
pop
sbb
out
dec
shlb
cli
nop
jo
xor
xchg
xchg
fcmove
scas
adc
adc
push
cmp
adc
cltd
js
cli
lea
jns
sbbl
jae
outsb
mov
mov
xchg
inc
push
data16
add
outsl
ljmp
mov
dec
xor
jle
mov
inc
imul
and
aaa
xchg
pusha
push
add
sub
icebp
push
xchg
ficomps
cwtl
aas
jbe
adc
loope
xor
push
pop
loopne
xchg
ljmp
dec
mov
iret
out
sbb
mov
movsl
inc
in
dec
addr16
fs
cmp
and
sbb
lret
xchg
mov
xchg
xchg
lret
and
or
cltd
and
lahf
push
cmc
pop
xchg
gs
sbb
and
cmp
int3
jg
add
sarb
stos
sbb
sub
jb
mov
add
sar
cmp
ljmp
mov
sti
sti
call
fdivs
cli
xor
lock
sbb
loop
jae
mov
jmp
pop
inc
pop
je
loope
push
negl
leave
nop
inc
mov
and
jae
outsb
mov
xchg
out
push
cmp
stos
pushf
and
aas
push
inc
push
mov
lcall
jns
test
mov
mov
cld
sahf
icebp
sbb
push
fwait
lcall
aad
jp
stos
addr16
test
subb
sbb
divb
rep
mov
pop
lods
push
or
gs
call
or
or
push
sub
push
adc
jmp
pop
and
pop
rol
std
push
jmp
add
cltd
fistpll
jg
jge
pop
add
mov
mov
pusha
cmpsb
jmp
in
bound
cwtl
adc
mull
and
pop
sbb
mov
push
iret
lods
add
imul
rorl
inc
mov
lods
daa
dec
sbb
mov
int
jl
in
dec
inc
out
and
or
mov
xor
sub
out
repz
xlat
testb
inc
pop
add
xor
pop
adc
dec
jmp
mov
cli
push
xchg
lods
jmp
divl
or
divl
mov
and
sbb
or
inc
popa
mov
loop
and
aam
add
xor
int
mov
test
xor
inc
jo
daa
in
inc
xchg
pushf
sarb
icebp
out
push
push
inc
xchg
mov
daa
notl
xchg
mov
xor
inc
xchg
pop
shll
mov
jnp
fcompl
xchg
stos
inc
inc
dec
outsl
iret
sbb
loop
mov
cld
mov
cmpl
out
arpl
in
mov
add
mov
loop
xor
inc
xlat
mov
ret
bound
jno
xor
jns
repnz
shl
inc
or
pop
xchg
push
js
movb
test
movsl
cmpsl
and
jl
outsl
into
ja
cmpsb
rorl
push
lea
push
mull
subl
xlat
mov
pop
mov
arpl
sub
sub
insl
sub
rolb
les
jb
push
lcall
cld
sbb
mov
mov
pop
cmp
mov
mov
lahf
aad
ja
sbb
lret
lods
sbb
mov
movsl
cmp
jmp
mov
pop
in
push
cmpsb
add
ja
xchg
std
popl
pop
sbb
lods
xchg
sbb
out
adc
call
rolb
cmpsl
pop
aaa
lods
das
inc
push
adcl
mov
mov
inc
xlat
xchg
clc
icebp
dec
repz
or
aaa
sub
inc
into
jne
in
push
cld
adc
jnp
loopne
shl
or
pop
xor
mov
adc
dec
sbb
adcl
cmp
mov
sbb
mov
outsb
jno
arpl
add
jbe
dec
subl
jne
mov
cmp
xchg
mov
jae
repnz
fnsave
sbb
bound
sub
gs
cmp
arpl
test
jl
push
xor
sub
jb
in
mov
dec
cmp
ss
mov
lahf
outsl
pop
push
inc
inc
rorl
icebp
ret
test
in
mov
fdivrl
mov
mov
mov
cmp
fmul
and
testl
test
adcl
ja
jne
psubsb
loope
cli
push
mov
sbb
in
adc
repz
dec
and
ret
push
inc
jno
mov
lds
pusha
xchg
dec
push
mov
and
mov
inc
fisttps
push
in
call
je
mov
les
mov
cmp
or
sbb
ret
cs
or
sub
aas
mov
stos
fnstenv
bound
push
fs
mov
pop
jge
fmul
fwait
lock
mov
xlat
mov
cmpsb
sub
out
jbe
mov
out
ss
sub
or
inc
push
push
mov
jg
int
pop
mov
cmpsl
dec
xchg
sbb
repnz
xor
sarl
sub
fcmovbe
lcall
test
scas
lock
xor
xchg
push
cmp
movsl
or
mov
mov
and
aas
outsl
notl
sbb
sbb
pop
mov
pushf
movsb
sub
ss
xchg
dec
mov
out
xchg
or
imul
mov
pop
and
int
mov
les
loop
pop
aaa
call
clc
sub
mov
push
jne
and
push
cmp
or
ja
mov
push
add
rclb
pushf
inc
mov
jae
jmp
popf
dec
adc
xor
nop
lret
stos
and
mov
mov
sub
push
gs
loop
insl
les
push
lret
jp
jmp
jnp
sub
je
arpl
add
test
push
fdivs
push
fnstsw
mov
lods
mov
adc
leave
or
inc
es
dec
rcll
rorl
mov
jmp
or
mov
adc
push
push
sub
jb
loopne
mov
out
ss
movzbl
jae
into
inc
xor
sbb
push
pop
inc
add
fsubl
fdiv
jbe
hlt
pop
sub
push
in
in
adc
pop
adc
mov
dec
push
sti
lret
loop
pop
and
sbb
lcall
push
repnz
add
sub
jecxz
cwtl
push
sarl
cmp
sub
test
fucomip
out
push
stc
mov
jecxz
and
pop
jo
mov
xchg
jns
jns
and
sub
cmp
cmp
mov
mov
lea
jbe
aad
mov
xor
mov
push
lods
mov
sbb
push
ja
adc
lcall
pop
sub
and
dec
imul
mov
idivl
sbb
cmc
jmp
mov
lcall
aad
push
mov
fcmovne
fs
ja
push
mov
sub
rclb
cld
mov
test
push
xchg
lret
cld
add
daa
iret
imul
stos
call
xchg
seta
mov
pop
xor
rolb
xor
jne
pop
and
std
mov
fisubl
push
inc
jp
pop
pop
es
and
mov
rcrb
icebp
popf
arpl
adc
mov
lock
mov
mov
push
mov
jle
fisttpll
pop
jno
std
add
test
cmpb
in
mov
lea
scas
or
sub
jno
push
rol
inc
inc
idiv
fistpll
iret
cltd
dec
sub
jle
mov
mov
sbb
add
mov
cmp
loopne
and
push
stos
and
adc
dec
cmp
cmp
mov
loopne
adc
xchg
out
lahf
pushf
rcrb
bound
andl
mov
fdivs
xor
mov
cmp
mov
repnz
out
fistpll
loope
sti
mov
mov
push
xor
jle
cmp
pop
inc
addr16
sbb
scas
jnp
push
inc
cmp
pop
mov
or
pop
popa
or
jae
lcall
adc
adc
inc
js
pop
lret
sub
cmp
outsl
mov
cmp
cmp
dec
or
push
test
scas
jl
mov
fstl
fdivrs
imul
xor
xor
dec
adc
lcall
sub
mov
out
jb
push
enter
call
or
cmpsb
xchg
mov
adcb
sub
push
mov
cmp
push
pop
and
stos
shlb
sarl
push
inc
push
push
add
lcall
inc
add
pop
mov
iret
subl
or
mov
xchg
shl
out
sbb
push
push
mov
dec
add
push
push
sbbl
scas
dec
or
loope
pop
sahf
leave
shrl
pop
mov
mov
out
push
js
aaa
repz
cmpsl
loopw
sub
mov
loop
push
or
gs
cmpb
jmp
in
xor
inc
lcall
adc
rcrl
std
sbb
das
jnp
sub
sbbl
xchg
sub
jns
inc
ret
inc
and
shlb
mov
stos
fwait
and
sahf
push
pop
push
arpl
adc
iret
mov
and
add
xchg
clc
mov
pop
fnstcw
push
push
in
out
mov
push
int
pop
jl
out
enter
test
arpl
subb
push
call
adc
pop
push
sub
push
cmpsl
in
std
adc
std
repnz
mov
inc
jl
ja
push
popf
or
and
dec
pusha
test
xor
dec
push
mov
ret
nop
lahf
jae
bound
idivl
pushf
pushf
xlat
sbb
add
iret
cmpsb
imul
ds
shrb
pusha
xchg
sub
cwtl
mov
pop
nop
repz
jne
pop
fwait
cmpsb
and
ret
repnz
fnstenv
sub
jne
pop
imul
mov
arpl
adc
and
push
jge,pn
jne
sahf
push
mov
sti
loopne
push
adc
sbb
addr16
daa
adc
pop
adc
arpl
lea
adcb
jne
dec
jmp
sarb
xor
cli
lret
mov
xor
movsb
and
add
insb
and
xor
mov
and
fmull
jae
inc
lods
push
frstor
int
std
add
adc
ret
sub
mov
subl
arpl
push
frstor
int
std
add
adc
ret
sub
mov
subl
lea
inc
lods
push
frstor
int3
xor
add
adc
or
rcrl
dec
mov
subl
arpl
push
frstor
int
jge
insl
in
loop
repnz
xchg
ret
sub
dec
test
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sub
inc
or
fildll
push
and
out
bnd
stc
or
sub
inc
or
bound
jnp
dec
xor
mov
repnz
loop
loopne
or
adc
jp
or
push
sub
mov
cwtl
loope
mov
xchg
jmp
xchg
notb
push
push
xor
pop
insl
add
mov
pushf
int
or
add
ret
loope
push
or
dec
ljmp
jnp
xor
jnp
into
int
sub
gs
lret
inc
and
aam
sub
inc
pop
cmp
rolb
jg
rolb
cwtl
push
sbb
lret
mov
out
or
mov
xchg
adc
mov
pop
cmpsl
and
mov
outsl
adc
sti
pop
inc
dec
xchg
arpl
cmp
cmp
adc
lret
daa
ret
lods
dec
mov
call
mov
mov
lret
sbb
lret
mov
movsb
loop
and
imul
jl
imul
xor
mov
mov
sti
repz
lcall
pop
xor
outsl
pop
sbb
sbb
inc
stos
mov
incl
mov
cmp
add
pop
adc
dec
inc
or
call
xchg
jmp
nop
cmpb
push
inc
addr16
jae
and
jnp
dec
xor
stos
sarb
loop
xchg
sti
or
or
bound
jnp
dec
xor
stos
sarb
loop
xchg
sti
or
mov
push
pushf
dec
cld
sahf
cmp
addr16
cmp
js
loop
push
nop
lods
stc
pop
inc
out
rorl
pop
cmp
movsb
sub
xor
or
stc
xchg
fs
imul
aas
rcrl
dec
jns
leave
pop
push
and
cmpsl
fnsave
cmpsl
mov
push
fdivrs
cmp
jl
insl
lds
mov
mov
lods
inc
add
outsl
push
cmp
pop
and
dec
pop
das
pop
cmp
and
cwtl
subl
fstpt
fcomi
pushf
adc
sub
fistpl
sub
daa
fistpll
xor
mov
sbb
es
cmp
shll
out
fimull
add
nop
dec
mov
neg
mov
cmp
mov
aad
push
lret
popa
sub
nop
mov
mov
pop
pop
mov
movsl
add
pop
add
sbb
data16
mov
jns
stos
sahf
fdivrl
mov
mov
subb
das
sti
cli
push
cmp
jg
push
cmp
sahf
sub
or
push
nop
call
lahf
pop
add
push
xchg
in
adc
push
mov
and
and
scas
mov
stos
sbb
test
jae
clc
imul
enter
sbb
pop
or
mov
loopne
ds
mov
xor
pop
sbbb
or
sahf
inc
lock
in
push
jmp
into
pop
push
inc
fnstcw
mov
shl
sbb
inc
pop
stos
xor
sahf
jno
adc
icebp
cmc
mov
leave
aad
inc
jbe
and
out
outsb
push
dec
xchg
rcll
sbbb
mov
test
or
mov
dec
aaa
push
xchg
test
dec
stos
xor
cmp
ljmp
fistps
jp
aad
imul
lea
clc
pop
sub
fimull
sub
leave
or
cmpsb
dec
mov
inc
xchg
fsts
loop
fisubl
mov
aas
sub
mov
mov
jp
mov
cmp
and
xchg
inc
inc
add
sub
les
mov
mov
pop
dec
or
cmp
movsb
adc
push
je
call
cmp
or
xor
add
andb
cmp
jmp
inc
pop
add
insb
testl
je
add
xchg
test
pushf
or
into
sub
xor
loopne
mov
arpl
lea
aaa
rolb
cmp
xchg
stos
jo
jg
out
push
and
jl
and
mov
lahf
js
mov
jecxz
lods
or
sbb
hlt
jge
or
xchg
xchg
pop
mov
push
sbb
fwait
inc
dec
shrl
jb
sub
pop
sub
inc
mov
xor
dec
pop
mov
sbb
incb
lret
push
jbe
pushf
cltd
cmpl
sahf
mov
mov
fstpl
push
test
push
out
lds
adc
jno
addl
add
dec
xor
mov
adc
xor
insl
fsubrp
insb
or
pop
cmp
jne
push
adc
andb
je
xchg
add
pop
lods
in
pop
dec
jns
pop
xchg
loope
push
jp
ja
pop
cld
out
arpl
jmp
lahf
int
mov
dec
ss
js
loop
push
cld
adcl
xchg
rclb
clc
cmp
jle
hlt
insl
push
out
mov
int3
or
gs
andl
loope
inc
sbb
cmc
adc
lret
out
das
sbb
xor
xlat
add
movsl
sub
rolb
inc
cmpsl
test
and
out
push
sahf
gs
mov
xor
iret
add
test
insb
push
adc
jmp
rolb
push
xlat
or
inc
arpl
dec
and
mov
dec
lea
sbb
xchg
lret
test
repz
cli
xchg
out
cmp
loopne
adc
lret
lea
cmp
jp
mov
clc
sbb
push
icebp
movsl
ljmp
adc
lock
sbb
mov
daa
sub
dec
cmp
cmp
in
pop
je
cmc
xchg
xor
jb
lret
jecxz
xor
loop
ljmp
jne
ret
ret
test
inc
data16
inc
jl
inc
mov
inc
mov
popf
js
inc
call
mov
pop
and
lahf
dec
mov
inc
cli
negb
aaa
std
shll
enter
push
dec
fistl
jmp
jg
nop
rcrb
xlat
xor
mov
xchg
dec
add
sbb
mov
fdivr
js
jbe
fidivl
cli
push
rol
xchg
mov
push
jae
es
xchg
add
in
call
jae
popf
push
or
loop
popa
repnz
ljmpw
test
push
mov
push
scas
pop
movsb
mov
mov
les
jo
test
xor
pop
hlt
ja
and
movb
bound
pop
aam
gs
jb
lret
and
cmc
or
ret
xchg
mov
cmp
sbb
jl
mov
mov
stc
lock
iret
cwtl
dec
mov
out
xchg
cmp
clc
fcmovb
sub
mov
int
nop
xchg
loop
mov
out
add
add
lahf
adcl
enter
imul
jnp
outsl
xchg
and
and
cs
test
repz
add
in
xchg
sbb
xor
notb
pop
hlt
push
add
sbb
cmp
push
outsl
lea
dec
ficoms
inc
or
in
dec
cmp
inc
leave
inc
mov
dec
xchg
add
loope
add
or
jg
fnstcw
pop
outsl
mov
sub
xor
push
cmpl
imul
jae
add
adc
sub
push
sahf
lea
mov
add
xchg
into
mov
mov
mov
mov
aam
imul
out
mov
in
sub
jp
cmpsb
call
test
pop
adc
ucomiss
imul
ss
mov
cmp
jo
sub
sub
jp
push
jns
push
movsb
adc
mov
cli
ljmp
push
dec
ljmp
adcb
mov
sub
mov
scas
dec
mov
negl
ljmp
mov
sbb
pandn
stc
jmp
in
rclb
jmp
jl
add
and
mov
jno
test
cld
test
in
jne
xchg
sbb
dec
lret
cmc
js
mov
ret
and
jp
jne
popa
inc
pushf
add
sbb
sub
out
push
daa
jl
or
and
jg
push
rcr
enter
sub
push
pop
cmc
xor
in
cmp
ss
ret
in
mov
int
dec
aam
mov
pop
sub
stc
hlt
xchg
fwait
adc
ret
xchg
pusha
lods
fwait
sub
xor
lods
mov
inc
icebp
in
insb
fildl
or
rcrl
xchg
jp
push
std
lret
fwait
cmp
mov
insl
sbb
cmp
mov
push
push
mov
xchg
je
jb
std
pop
sub
cmp
adc
sub
nop
std
push
and
pop
mov
adc
jl
lea
push
add
push
xor
cmp
mov
mov
mov
xor
and
aam
jmp
push
mov
adc
dec
push
xchg
sub
mov
xor
add
inc
or
iret
rcr
mov
mov
pushf
imul
fisttpl
mov
dec
push
orl
mov
aaa
push
dec
into
fsubrl
mov
les
xchg
inc
inc
cltd
xlat
push
daa
test
cmpsb
adc
jl
and
push
cmpsl
xchg
pop
mov
cld
dec
sub
rcrb
in
add
xor
setne
cmp
scas
cltd
xchg
jle
and
int3
fs
addr16
pop
pop
mov
fwait
and
leave
pop
cmp
adc
inc
push
cmp
clc
mov
in
and
xor
shl
mov
dec
dec
out
xor
xchg
lret
mov
adc
xor
dec
insb
cli
lods
xor
sbb
sub
xor
movsl
inc
lods
jnp
add
xchg
fsubrp
dec
or
jg
ds
shll
xchg
adc
leave
insl
cld
or
dec
popa
pop
fwait
push
xor
iret
enter
ss
in
sbb
xchg
xchg
ja
out
scas
shr
cltd
mov
ljmp
mov
movsb
sub
mov
imul
cmp
mov
les
mov
test
xlat
or
loopne
ljmp
das
cmp
loopne
cmpsb
push
imul
shr
js
out
arpl
pushf
mov
aas
push
dec
movsb
gs
mov
cmc
mov
sub
bound
inc
add
je
shlb
mov
sub
sub
xor
inc
in
hlt
ds
pop
xchg
imull
pop
inc
popf
cmpsl
rcrl
mov
sbb
call
mov
pop
sbb
mov
adc
test
loop
std
or
and
push
jmp
xchg
repz
inc
das
mov
and
or
adc
roll
loop
js
lea
out
in
add
es
icebp
and
xorb
push
mov
fcomip
jmp
push
out
insl
and
pop
fsubr
faddl
mov
jle
mull
in
mov
and
and
fists
int
push
push
aam
negl
ljmp
jb
lahf
adc
add
mov
je
mov
add
fidivs
xchg
inc
cmp
push
pop
out
mov
cmp
ret
add
mov
xchg
xlat
pop
fs
adc
outsl
cmpl
cltd
cli
idivb
sbb
nop
or
push
dec
xor
push
pushf
jecxz
es
cs
out
mov
xor
jp
out
aad
jg
out
pop
int3
loopne
xor
inc
mov
and
xchg
mov
insb
aam
out
stos
lods
in
sar
aad
dec
movsl
pusha
fcomps
test
or
es
out
jle
sbb
fs
loop
add
mov
xor
push
ret
xchg
jno
shlb
pop
std
call
pop
call
in
js
and
jno
popf
pop
inc
jp
push
sub
add
arpl
push
popa
xor
jge
sub
push
add
insl
xchg
cmp
dec
xchg
fcmove
mov
adc
push
or
ja
jl
mov
jae
sbb
jle
jns
push
sbb
adc
jae
and
aaa
jbe,pn
jne
cwtl
cmpsb
add
int
pusha
popf
mov
push
cli
cmp
jnp
jns
loop
pop
xor
je
adc
sub
lcall
sti
daa
add
push
rol
or
jne
je
add
or
push
pop
test
ja
sub
ret
xor
push
mov
icebp
popa
add
add
and
and
enter
jecxz
push
cmp
ret
and
insb
mov
mov
loopne,pt
je
mov
and
arpl
fldl
cmpb
add
jge
loopne
bound
xor
mov
aas
and
inc
jnp
sub
cmpsl
pop
outsb
or
xchg
rol
inc
fucom
push
stos
iret
mov
pop
mov
lock
enter
lods
iret
lods
dec
mov
cltd
pop
mov
mov
sbb
mov
loopne
mov
lret
and
je
push
inc
xor
push
je
push
xor
sub
sbb
mov
mov
xchg
xchg
inc
mov
rcll
movsl
js
mov
push
cltd
push
inc
push
dec
dec
movups
jle
pop
adc
insb
mov
int
sbb
nop
loopne
mov
orb
or
xor
mov
leave
or
outsb
pop
sbb
push
add
cmp
inc
shl
pop
inc
mov
mov
fwait
scas
inc
or
xor
add
rcr
test
in
cmp
xor
cmp
and
mov
sbb
or
pop
icebp
lock
aam
cmc
pushf
scas
cld
lret
or
and
inc
push
gs
push
lret
popl
sti
xchg
flds
or
imul
shll
or
lcall
xchg
icebp
bound
fdivp
mov
lahf
cmp
sub
inc
cmp
cmp
sub
data16
xor
xchg
std
clc
fmull
jge
mov
div
es
jp
es
scas
mov
ljmp
add
sbb
xchg
aad
pop
clc
mov
cmp
mov
cmp
loopne
xor
mov
stc
das
fwait
mov
mov
cs
pop
adc
pop
movsl
andb
mov
sbb
popf
dec
lods
dec
mov
xchg
out
lcall
hlt
loope
fcmovbe
xchg
aaa
mov
ret
testb
imul
push
leave
cld
dec
aaa
scas
out
pop
ss
call
loop
shl
insl
cmp
xchg
cmc
daa
inc
scas
and
push
sbb
bound
inc
repz
aaa
aas
nop
sbb
fmulp
jge
loop
push
mov
or
mov
mov
test
adc
mov
dec
cld
jecxz
mov
and
sbb
enter
or
test
outsl
lret
fimull
or
or
inc
std
inc
xchg
repnz
add
inc
xor
pusha
cwtl
dec
js
faddl
insl
scas
test
inc
sbb
and
cmp
je
cmpl
stos
repz
push
aas
mov
ror
cwtl
scas
outsl
pop
and
test
aas
mov
fs
jb
dec
cmp
shrb
fimull
sub
xlat
xchg
stos
lea
jmp
in
sbb
push
out
ret
xor
mov
pop
dec
mov
enter
xchg
add
inc
scas
jecxz
add
ss
push
lods
pop
xchg
nop
aad
std
pusha
jae
inc
jb
test
sub
cmp
hlt
inc
jp
and
inc
sarl
jnp
call
add
cli
les
mov
dec
mov
dec
insb
cmpb
cmp
push
xchg
jnp
sbb
xchg
fadds
inc
or
mov
mov
or
adc
push
cmp
aas
out
pop
aad
or
cmpsl
cmp
or
gs
sti
stos
cmp
jp
jne
xorl
pop
push
lds
aaa
cli
icebp
mov
rclb
movsl
dec
jne
push
daa
adc
stc
pop
xchg
and
cmpsl
pop
jge
cmc
scas
mov
inc
xchg
ficoms
sub
movsb
ret
lahf
push
push
lret
fisubrl
std
movlps
or
ffreep
adc
repz
xchg
fists
movsl
xchg
fcmovnbe
mov
pop
imul
rcr
shr
test
sub
and
dec
dec
shrb
out
pop
das
lods
pop
cmp
mov
movlps
jmp
jmp
lcall
aaa
or
xor
std
dec
aad
push
rclb
sub
outsl
test
jo
shrl
pop
mov
jp
jbe
xchg
cmp
in
and
jnp
aas
and
jl
and
mov
out
xchg
arpl
cmp
movb
repz
stc
movsl
fwait
mov
iret
mov
outsl
mov
fcmovb
mov
arpl
xor
pushf
mov
dec
test
out
clc
fimuls
stc
rcrb
jo
pop
dec
ds
mov
lea
test
sbbl
decl
mov
leave
leave
cld
jge
adc
in
xor
imul
dec
ja
lahf
cs
je
mov
les
adc
jg
dec
clc
addr16
movl
dec
and
out
jnp
cmp
in
cmp
in
gs
xchg
jl
insl
out
leave
xchg
cmp
cltd
out
xchg
sub
inc
xor
in
inc
inc
push
sub
adc
push
pop
jg
jb
sub
pop
dec
mov
and
ljmp
out
loope
push
test
sbbb
repz
loopne
stc
dec
xor
xor
sub
out
pop
xor
scas
sbb
stos
cli
aaa
push
mov
mov
add
ldmxcsr
mov
call
dec
lret
mov
leave
subb
mov
mov
ret
add
repnz
jmp
xchg
js
xor
lds
imul
pop
movaps
stos
push
xchg
mov
cmp
enter
ljmp
scas
sbb
aam
xorl
or
jnp
into
js
sub
push
push
pop
dec
ret
add
es
pop
cmpb
push
sbb
inc
test
cld
arpl
enter
jecxz
imul
cwtl
loope
std
call
mov
pusha
pop
lods
sub
aam
mov
scas
mov
insl
arpl
adc
sub
daa
sub
jl
pop
xchg
jnp
insb
fisttpl
jecxz
jl
xbegin
sub
xchg
out
jmp
nop
and
insl
movsb
mov
mov
push
dec
hlt
daa
push
mov
lock
cmp
jp
not
pop
in
scas
xchg
jge
push
xchg
jle
int3
cmpsl
scas
loope
add
mov
mov
pusha
cmp
xchg
cmp
cmp
jmp
int3
les
imul
div
mov
push
clc
lds
mov
pop
cmp
mov
pop
push
aad
inc
test
repz
lahf
jae
xchg
jbe
mov
adc
jg
fwait
mov
jae
mov
clc
push
sbb
pop
push
push
out
sbb
fisubrl
push
imul
inc
les
push
jg
push
mov
add
dec
push
sbb
das
adc
lcall
sahf
arpl
imul
repnz
dec
push
icebp
es
std
fists
xchg
adc
mov
mov
inc
sbb
mov
mov
mov
sbb
or
inc
or
movsl
or
inc
lds
sti
mov
xchg
sub
cli
ja
xor
dec
add
divps
xchg
out
cmpsb
enter
and
mov
shlb
adc
push
adc
lret
popl
cwtl
lock
fwait
enter
ret
xor
sbb
or
push
sti
rcrb
adc
cwtl
jmp
mov
stos
pop
insb
test
aam
push
xor
jle
cmp
push
mov
mov
hlt
mov
out
shll
adcb
int3
cmp
imul
xor
push
in
xor
xor
jno
add
data16
rorl
cmp
cld
push
mov
sbb
xchg
ljmp
mov
mov
jmp
inc
xor
dec
xor
les
mov
mov
shl
xchg
roll
insl
sub
clc
popa
push
ljmp
xchg
mov
mov
cwtl
inc
cmpsb
cld
mov
in
push
in
xor
sbb
dec
cmp
push
mov
xor
inc
in
int
cmp
cmp
add
psrad
test
pop
or
shlb
or
cwtl
push
xchg
adc
ja
repnz
inc
ds
sub
or
jecxz
idiv
sbbl
aaa
and
andb
dec
sti
out
ja
push
jns
mov
mov
sti
inc
shrl
jbe
cmp
mov
xchg
fwait
sbb
loop
mov
addr16
andl
lcall
pop
inc
call
xchg
push
cmp
push
sub
std
dec
loop
dec
ja
mov
test
loope
pop
sbb
jp
xchg
dec
xor
jle
nop
pop
insb
fdivl
out
cwtl
and
cs
sbb
push
leave
std
push
xor
negb
and
push
dec
daa
bound
fiaddl
shl
inc
fwait
push
nop
nop
fsubrs
loopne
and
dec
pop
pop
das
xor
ret
lret
xlat
repz
sti
mov
aas
adc
mov
xchg
jp
lds
cmpb
mov
es
pop
push
icebp
sbb
cmc
pop
aam
jp
addr16
imul
stos
stos
xchg
fstps
pop
mov
sub
cs
fcomps
or
sahf
jl
or
out
sbb
pop
jmp
sti
cmp
jns
and
mov
cmpsb
movsb
lods
movsb
sbb
add
das
jbe
sub
cmc
adcb
inc
cmp
cmp
cwtl
mov
inc
mov
in
xor
inc
add
sbb
ret
xchg
xor
adcl
pop
sub
sub
sbb
adc
leave
dec
inc
add
bound
jnp
dec
xor
stos
sarb
loop
xchg
sti
or
or
bound
jnp
dec
xor
stos
sarb
loop
xchg
sti
or
or
bound
jnp
dec
xor
stos
sarb
out
xchg
cli
or
fldenv
or
bound
jnp
lret
xor
loop
rolb
repnz
xchg
pushf
sbb
xor
and
ljmp
or
enter
nop
dec
push
jnp
dec
cltd
pop
mov
clc
cmp
or
sbb
ljmp
or
pop
lcall
cwtl
pop
mov
pushf
cmp
or
sbb
ljmp
or
pop
lcall
cld
pop
out
mov
je
mov
sahf
pop
lret
insb
arpl
xor
or
mov
ret
ret
outsb
jo
pushf
pop
es
or
xchg
jae
test
mov
ret
xchg
test
movsl
pushf
aad
cmp
mov
lret
scas
into
and
cmpsl
add
cs
lahf
lcall
push
sbb
mov
js
imul
inc
call
pop
xor
lods
das
leave
adc
out
add
repnz
dec
addb
iret
data16
mov
vcvtpd2psx
add
add
dec
loop
rcrl
lods
mov
jb
jp
mov
dec
fstps
sub
sbb
or
pop
lcall
cltd
pop
mov
stc
cmp
or
sbb
mov
ds
cwtl
cmp
dec
lret
sub
pop
lods
push
lahf
inc
scas
push
mov
stos
cmp
sub
push
enter
sub
dec
pop
fldt
pushf
push
jg
mov
cli
jp
jl
jno
dec
mov
dec
push
jp
dec
cltd
pop
mov
stc
cmp
or
sbb
ljmp
or
pop
lcall
cltd
pop
mov
stc
cmp
or
sbb
ljmp
into
push
mov
lods
sbb
jmp
pop
scas
lcall
pop
adc
test
mov
or
push
mov
adc
mov
fsts
mov
lret
js
leave
loope
xor
push
jns
xchg
sub
jecxz
call
jecxz
lock
dec
pop
push
fisubs
mov
dec
test
arpl
into
pop
ja
cmp
push
nop
movsl
popf
pop
inc
popa
das
mov
and
out
and
rcrb
mov
jp
push
jp
sbb
je
lods
mov
xchg
mov
aaa
or
insl
jl
rcl
or
inc
mov
or
jge
insb
addr16
aad
lods
in
and
sbb
repz
imul
mov
addr16
ds
in
xchg
sub
pop
scas
arpl
push
push
ret
lahf
imul
or
lods
rorb
shl
arpl
pop
push
mov
or
cmp
and
dec
sbb
fsub
es
fucomp
insb
loop
imul
into
jge
or
aam
sbb
xchg
mov
rcr
sbb
and
xchg
mov
jae
ror
es
movsb
ja
pop
xor
sbb
dec
fcoml
shrb
jo
jnp
add
fs
addb
sbb
cltd
mov
pop
jne
lea
sbb
in
filds
shrb
movsb
push
mov
xchg
inc
inc
and
cmc
aas
mov
lcall
aam
cmp
ja
jb
xor
push
lock
jg
inc
test
or
push
mov
loope
mov
adc
es
out
and
mov
insb
icebp
cltd
xorl
test
inc
adc
popa
bound
sbb
fldt
stos
jp
xor
in
or
or
shll
mov
adc
add
icebp
sub
icebp
lahf
xchg
cmpl
and
pop
adc
push
inc
ret
fsubrl
fistpll
or
mov
enter
scas
aas
cmpsb
lcall
cmp
push
sbb
scas
cli
add
jle
sub
mov
shll
or
into
fdivrl
xor
xchg
outsb
dec
imul
mov
cmpsb
imul
pop
leave
pop
pop
pop
add
jmp
and
xchg
sbb
shrl
xor
pop
xchg
pop
out
xchg
lock
loopne
cmp
cmp
dec
sbb
pushf
dec
dec
orb
jbe
xchg
push
call
adc
fstpl
inc
daa
sbbl
ret
ja
shll
notb
xchg
jns
sbbl
pop
nop
leave
lds
stc
jmp
jle
xor
add
test
sub
mov
inc
pushf
cmc
cmp
ds
mov
adc
fdivrl
dec
jge
mov
jg
jno
hlt
pop
dec
lahf
insl
hlt
test
push
adc
cltd
pop
fs
cmp
xchg
shll
arpl
xchg
loope
and
or
loope
fdivr
mov
jns
xchg
and
cmp
sbb
enter
stc
mov
mov
pop
dec
jmp
pop
push
pop
iret
imul
in
pop
xor
mov
incl
ljmp
scas
push
jne
push
ret
jmp
pop
xor
cmp
dec
cld
push
push
xchg
and
daa
pop
jae
bound
pop
sub
pop
dec
xlat
push
adc
mov
imulb
jp
and
push
cmp
gs
or
jns
mov
inc
aas
jb
and
sub
or
dec
mov
out
hlt
out
inc
or
dec
add
mov
scas
sub
xor
int3
add
pusha
dec
sti
enter
mov
xchg
out
xchg
inc
inc
xchg
jmp
in
jbe
pop
dec
dec
fldcw
mov
lcall
mov
and
clc
add
adc
pop
mov
add
imul
add
gs
sti
adc
sub
aas
dec
lods
das
mov
lods
ror
push
mov
in
jae
inc
fiadds
shr
adc
data16
pop
pop
in
loop
pushf
cmc
pop
pop
test
scas
mov
repnz
psubsb
sbbb
jl
inc
sbb
or
inc
dec
out
sub
xor
add
addl
lods
aam
push
pop
jbe
mov
mov
cli
dec
test
xchg
sub
inc
ret
dec
adc
adc
adc
cmp
pop
icebp
arpl
in
int3
pop
sub
test
push
lret
mov
movsb
addb
fidivrs
adc
out
arpl
fwait
jo
mov
add
lds
jle
xor
adc
nop
and
adc
into
mov
cltd
mov
pop
mov
lea
jge
dec
mov
and
mov
cwtl
in
xchg
xchg
xlat
psubd
out
or
rcrl
loop
dec
cmp
ficoml
jnp
inc
mov
and
mov
es
shrl
xchg
pop
xchg
cmpsb
sub
movsl
jp
cli
fs
mov
in
scas
stos
cs
inc
inc
and
xchg
inc
xchg
lret
pop
mov
jecxz
and
movsb
jge
rcll
mov
ds
scas
in
imul
mov
adc
xlat
cwtl
xor
or
pop
lret
jg
arpl
xor
addr16
or
movb
in
cmp
adc
fisubrl
inc
sbb
mov
dec
pusha
iret
pushf
cltd
in
movsb
lret
jmp
push
dec
push
pop
je
adc
test
fidivrl
iret
jno
stos
jo
leave
aaa
out
aaa
adc
cwtl
cld
push
aam
popf
outsb
mov
xor
and
dec
xor
repz
jecxz
pop
inc
mov
fistl
mov
shlb
jnp
je
and
and
call
hlt
je
sbb
ljmp
add
lea
add
shll
neg
pop
jl
int3
adc
and
and
ljmp
push
pusha
mov
nop
cld
pusha
pop
push
lods
mov
pop
inc
push
pusha
pop
xchg
cmp
sub
cmp
push
shll
mov
adc
jle
out
lods
jno
mov
cmp
xor
sbb
push
sub
rclb
imul
mov
push
push
mov
leave
push
mov
adc
ljmp
sub
pop
mov
mov
rolb
mov
adc
sahf
mov
fs
scas
xchg
jo
std
mov
sarl
adc
add
or
cmp
jne
jp
push
mov
test
jle
lahf
jno
out
lock
pop
out
jge
pop
sbb
mov
popa
cmpsl
fsubr
mov
inc
jmp
dec
gs
sbb
cmp
lret
push
aam
cwtl
ljmp
xor
jbe
mov
mov
or
xlat
mov
jo
inc
cwtl
xchg
repz
and
jmp
aam
pop
addr16
je
mov
rorl
pop
jmp
hlt
das
lret
shlb
fstpl
xchg
es
iret
andb
mov
fisubs
mov
pop
mov
repz
dec
xor
push
movnti
jmp
arpl
xchg
imul
jl
mov
daa
xchg
iret
xchg
pop
in
mov
inc
int
cmpsl
add
and
stc
rorl
or
mov
pop
push
out
std
pop
sbb
mov
cli
push
or
in
bound
shlb
cmp
jbe
mov
sbbl
imul
cmp
sbbb
jge
aaa
mov
jbe
insl
push
ja
sub
cmp
cltd
shlb
arpl
sti
dec
leave
lret
inc
push
out
cmp
out
mov
shlb
movsl
iret
repz
mov
and
jl
hlt
inc
jecxz
add
cmp
mov
mov
adc
fs
jl
loop
jl
fcos
or
sbb
test
lock
xchg
xor
mov
wrmsr
sahf
push
outsb
mov
out
jb
sub
push
clc
shrl
sub
cmpb
in
sbb
push
jecxz
inc
movsl
cmpsl
imull
xlat
ljmp
pop
xor
ficomps
xchg
add
mov
cmpsb
sub
sarb
jle
pushf
fucomi
mov
insl
jbe
dec
les
jmp
sti
adc
xchg
cmp
outsb
test
loope
mov
sub
lahf
xchg
into
in
popfw
xchg
xor
pop
shr
lds
pop
or
std
cmovp
imul
sarl
mov
and
std
push
sti
push
loope
lods
sar
adc
mov
adc
add
popa
into
imul
psllq
fldl
aaa
push
lods
mov
mov
shll
fldenv
xchg
and
into
neg
or
insl
aad
mov
icebp
cli
ret
cmp
cwtl
pop
aas
fwait
stos
push
leave
add
xor
sti
jmp
pop
cwtl
add
mov
push
prefetch
iret
test
xchg
push
ja
popf
xchg
fstpl
rorl
dec
stos
push
mov
push
movsb
in
inc
aaa
pushf
inc
jle
jns
sub
aas
or
arpl
dec
in
xchg
jg
insb
adc
mov
ret
repnz
jae
lds
mov
xor
push
xor
cli
push
insl
cmp
pop
jnp
pop
mov
enter
and
dec
aaa
cmp
push
jp
ds
push
push
add
rep
xor
jb
lods
shll
lcall
mull
leave
fucomp
shlb
mov
adc
xchg
mov
scas
lods
testb
cmp
dec
ljmp
sbb
cmp
jb
dec
cmpsb
test
adc
mov
cli
fldenv
inc
cmovle
adc
ret
imul
cld
and
ficompl
and
movsb
adc
sub
movsl
enter
fldt
jbe
push
inc
ss
mov
mov
ja
repz
push
js
stos
or
sub
add
inc
pop
sbb
sub
mov
cmp
adc
pop
nop
mov
lea
popl
sub
mov
loop
sub
hlt
xor
or
push
pop
push
je
icebp
jp
jmp
gs
fldenv
adc
insl
lahf
pusha
cs
jl
and
cmp
fcompl
mov
ret
mov
or
xchg
dec
xchg
je
cmp
scas
add
dec
cs
xor
mov
dec
inc
iret
movsl
add
int
xchg
lret
xor
aam
cmc
inc
push
mov
xor
mov
repz
subb
shr
in
ljmp
fisubs
out
push
rcrl
jge
rorl
enter
add
xchg
cmp
dec
inc
mov
or
adc
push
xchg
pop
flds
xchg
adc
call
aas
dec
idivb
mov
in
jno
xchg
test
cwtl
mov
sub
in
ja
mov
insl
scas
int
mov
xor
sub
fwait
xor
cmc
sub
xchg
sbb
dec
cmp
pop
add
popa
fisttpll
stos
loop
cmp
xlat
aad
push
push
or
movsb
outsl
cld
cwtl
leave
cmp
push
inc
jo
idivl
xchg
sar
rorl
xchg
cmp
fldcw
out
xchg
jle
jo
sub
int
outsb
or
cmp
les
lret
fcomp
les
push
popf
cmp
sub
dec
cmp
sub
es
cwtl
push
xor
scas
cmp
dec
test
and
repnz
pop
push
cmc
call
dec
push
ficomps
cmpsb
sbb
push
push
lds
std
gs
fstpl
out
lcall
mov
push
pop
xor
ja
vpsllq
add
inc
inc
ltr
xorb
add
xor
sbb
add
and
int
fisttpll
jle
repnz
aas
mov
xor
pop
lret
sub
sbb
push
iret
shl
dec
insl
popf
xchg
pop
or
sub
xchg
push
lcall
mov
push
call
mov
pop
pusha
or
add
jbe
add
test
addb
cmp
icebp
mov
pusha
xor
stc
lods
out
lea
gs
shrb
pop
pushl
and
xchg
dec
aaa
insl
lods
fstpt
andb
lods
pop
mov
repnz
shlb
sbb
mov
mov
test
cvtps2pd
in
ss
ss
ss
jg
mov
add
mov
pusha
outsl
mov
xor
sub
sbb
icebp
lods
mov
xchg
sbb
fdivl
or
sti
dec
pop
jg
xchg
imul
jl
mov
cmp
push
clc
stc
jl
cmp
gs
stos
jo
mov
push
push
mov
dec
adc
shr
push
sub
scas
pop
mov
or
rorb
push
and
mov
repz
fwait
or
mov
addl
and
dec
inc
dec
repz
shrb
js
and
dec
jo
inc
test
and
mov
push
addr16
mov
leave
sbb
dec
inc
loop
xchg
mov
fiaddl
cwtl
or
aam
pop
and
cwtl
jnp
test
cs
dec
add
inc
ficompl
or
icebp
add
aam
lds
rcrl
sbb
divb
mov
jg
jo
xor
cmp
or
xor
mov
arpl
paddw
add
mov
xor
imul
cli
sbb
push
pop
in
push
mov
sbb
sbb
dec
xchg
jb
mov
xchg
lods
rorl
fsubrs
inc
push
dec
inc
sub
gs
loope
cmp
push
mov
daa
test
adc
or
jl
sbbl
mov
jne
fwait
sbb
push
insb
mov
movsl
int
xor
cmpsb
mov
xlat
sahf
pop
xor
cmp
mov
push
cld
jae
xchg
in
stos
jae
aas
loope
or
xchg
scas
loop
cmp
and
ja
xlat
inc
int3
in
pop
stc
pop
push
jo
jns
fsubl
jno
shlb
fildl
lret
mov
sti
addr16
es
or
enter
mov
test
clc
jl
clc
nop
movsl
jl
and
jnp
xor
cwtl
pop
insb
push
xchg
xchg
inc
xor
push
ja
fsubr
sbb
test
xor
sub
insb
jmp
insl
sahf
cmp
sahf
mov
outsl
dec
insl
mov
cmpsb
jecxz
outsl
ljmp
test
mov
fstpl
inc
xor
lcall
sahf
outsb
repz
lds
dec
fdivl
xor
xlat
pop
int
faddl
gs
add
js
popf
push
push
lcall
mov
sub
scas
xchg
jae
and
pop
and
loope
push
das
add
or
lret
in
dec
inc
stc
inc
mov
or
and
js
and
add
test
push
cmp
fst
sub
ja
out
xor
mov
in
clc
lahf
outsb
shlb
inc
xchg
shlb
mov
adc
dec
push
sub
rcrl
sarl
mov
pop
cmp
pop
and
int
jo
or
xchg
mov
sub
xchg
outsl
or
loopne
mov
repz
cli
ljmp
xchg
std
into
fsts
sub
mov
daa
or
pop
test
bound
push
xchg
bound
mov
aaa
xor
sbb
mov
lcall
cld
loopne
xchg
cmc
pusha
fistpll
xlat
sbb
ds
stc
in
jne
pop
popa
scas
leave
flds
pop
and
jg
int
xchg
stos
cmp
fbstp
dec
xor
inc
jge
in
push
mov
out
shll
push
loop
add
clc
fwait
sub
lahf
sti
dec
stos
movsb
sub
outsl
fucomip
adc
aas
filds
imul
out
cmp
cwtl
inc
mov
xor
in
dec
sbb
pop
in
jo
iret
cmp
xchg
xchg
aam
into
ljmp
and
repnz
mov
inc
jle
fdivrl
inc
pop
mov
adc
or
scas
mov
jecxz
popf
push
mov
cltd
sti
repnz
xor
dec
stos
rolb
jns
push
shrb
cs
movsb
sahf
jp
jp
scas
in
fsubl
push
inc
cmp
sbbl
fcomp
pushf
ljmp
js
loopne
xor
outsb
clc
inc
in
and
cmpsl
mov
inc
sub
int3
stc
add
out
outsl
and
mov
bound
popa
xor
xchg
aad
js
pop
repnz
push
mov
add
pusha
mov
xor
jg
push
movsl
outsb
jmp
inc
lcall
test
mov
and
jb
jbe
pop
lods
mov
pop
mov
adc
inc
out
push
push
jge
iret
std
int3
repnz
stos
ljmp
out
mov
dec
xor
iret
dec
clc
xor
cmp
mov
push
mov
movsl
xchg
inc
pop
xchg
push
jb
outsb
jmp
inc
jae
cmpsb
push
dec
xchg
pop
mov
sbb
cld
decb
adc
fs
pushf
pop
movsl
shl
mov
inc
dec
aam
pop
out
mov
test
inc
filds
jle
fistl
xchg
cmpsl
cmp
int
std
mov
dec
popa
lret
xchg
rcrl
movsb
in
lret
mov
jne
aaa
mov
adc
inc
adc
xchg
sub
roll
sarb
mov
pop
jnp
ds
mov
xchg
fisttpl
ret
or
out
js
loope
push
sarl
insl
daa
or
ja
les
push
mov
out
cmp
rcrb
xor
ret
cmpsl
pop
add
inc
rorl
jle
rorl
and
fiaddl
mov
dec
xchg
cli
or
std
or
pop
inc
xchg
out
aad
int
mov
lock
mov
and
xchg
add
iret
cmp
xchg
stc
push
outsb
cli
mov
and
movsl
push
call
mov
jns
out
imul
js
dec
mov
cmp
fcomps
push
loope
dec
movsl
jmp
push
lret
loop
pop
add
sbb
pop
test
addr16
jne
mov
fs
xor
sub
test
jge
and
sti
mov
mov
mov
dec
mov
ret
mov
fbld
adc
fsubp
or
shrb
mov
data16
sub
sub
push
mov
and
out
xor
sbb
xchg
dec
iret
cs
add
notl
dec
scas
xchg
sub
shlb
push
rclb
mov
cmc
xchg
inc
lods
cmp
mov
dec
incb
sub
inc
outsl
or
jle
not
stos
xchg
cli
xorb
fnstsw
mov
mov
std
fnstenv
cmc
push
rcr
pop
mov
mov
repz
movl
dec
cs
ds
sbb
jp
notb
repz
xlat
cmpl
into
fnstenv
gs
je
test
cmp
inc
pushf
fcompl
int
push
scas
inc
or
fldcw
outsl
fwait
pop
jns
xchg
ret
lea
fstl
mov
cmpsb
and
mov
fldt
lock
inc
cltd
xchg
mov
cmp
xchg
mov
jmp
dec
loopne
and
je
xchg
xor
push
mov
pushf
bound
xchg
mov
sub
out
movsl
and
outsl
mov
lods
push
fs
inc
add
gs
outsl
pop
arpl
pop
les
insl
sbb
push
ficompl
xchg
imul
out
test
xchg
fwait
push
sub
loope
mov
not
pop
cmpsl
and
pusha
cmc
push
iret
mov
or
stos
hlt
shlb
aam
cmp
leave
dec
loopne
xchg
mov
adc
fdivs
dec
sub
lods
into
mov
call
dec
dec
jae
imul
mov
jo
sbb
popa
nop
sub
je
loop
ja
sbb
shll
loop
mov
xchg
sbb
xchg
scas
icebp
inc
outsl
out
dec
idivb
sub
sub
pop
fs
push
jb
mov
mov
lock
idivl
stos
pop
inc
xchg
imul
movsb
sbb
cmp
and
cli
cmp
jl
fidivrl
imul
loopne
sbb
call
inc
outsl
pop
mov
imul
sub
push
pop
hlt
leave
inc
int
or
shr
dec
cmp
xchg
sbb
stc
cmc
cli
sub
xchg
or
pop
sbb
aam
jge
and
mov
mov
pop
in
cmpsb
pop
xor
jno
mov
or
loopne
daa
lds
pop
imul
xchg
in
das
frstor
or
bound
lret
pop
pop
jl
add
cmpsl
mov
mov
xchg
pop
push
xor
ds
leave
dec
ret
xchg
fldt
ficoml
inc
nop
add
gs
dec
lds
sbb
or
pop
lcall
cltd
pop
mov
stc
cmp
or
sbb
ljmp
or
pop
lcall
cltd
pop
mov
stc
cmp
or
sbb
ljmp
or
jns
imul
cltd
pop
mov
stc
cmp
or
sbb
ljmp
or
pop
lcall
cltd
pop
pop
jno
push
jp
push
inc
stc
push
mulb
out
sub
cmpsb
aaa
aam
ret
xchg
ja
data16
movb
es
not
push
push
mull
out
xchg
inc
xchg
mov
cmpsb
add
inc
mov
cmpsb
data16
test
es
xchg
push
testb
push
mov
cmc
pop
stc
add
jne
outsl
mov
cmpsb
push
js
push
mov
sbb
jp
scas
xlat
test
jns
aaa
negb
cmp
test
lea
cmpl
inc
mov
and
jmp
jmp
stc
adc
push
pop
adc
cmp
sbb
rcl
push
or
adc
sub
mov
arpl
adc
movb
or
push
popf
cmpsb
mov
add
xchg
mov
push
sub
push
sub
sub
cmp
movsl
jne
mov
bound
jbe
aad
xchg
popa
data16
xchg
outsb
xlat
mov
cs
jl
arpl
add
dec
es
mov
pop
jmp
movl
jb
push
out
mov
xchg
mov
inc
push
jbe
data16
push
ljmp
mov
gs
aad
jecxz
icebp
movnti
ds
sbb
add
bound
push
xchg
mov
push
addb
repz
gs
ficomps
add
sub
push
ret
add
pop
xchg
jne
xchg
popf
mov
jbe
push
xlat
and
jbe
xchg
jbe
data16
movb
ss
not
push
push
mulb
out
xchg
inc
xchg
data16
jbe
xchg
jbe
data16
movb
ss
not
push
ret
sarl
sbb
fisttps
cmp
cmc
sarb
pop
movsb
push
sub
push
jle
xor
mov
aam
nop
scas
insb
int
daa
int
sbb
imul
fildll
xor
cmc
sahf
fisttps
mov
not
mov
in
add
loope
jl
mov
add
sub
xchg
mov
inc
subb
aas
mov
cmp
lret
jp
hlt
dec
xchg
loop
jmp
or
out
add
and
mov
ret
adc
ficompl
ret
andl
ljmp
cmp
pop
out
pushf
dec
adc
inc
in
cmpsb
out
and
adc
pusha
addl
fists
and
sti
jge
ret
xor
push
es
insb
push
in
cmpsb
sti
xchg
cs
mov
mov
add
and
in
fdivrs
addl
adc
push
divb
mov
popa
mov
jp
and
push
movsb
push
outsb
leave
ja
mov
jge
mov
push
adc
in
les
pushf
lea
pop
or
pop
icebp
cmp
int
movsb
pop
sarb
jbe
mov
add
push
or
rcr
lahf
xchg
dec
jae
fstp
adcl
inc
lcall
cmpsl
pop
test
jle
lds
pop
sub
and
mov
into
clc
push
fcoml
add
mov
dec
pop
or
pusha
pop
into
outsb
pop
les
rclb
xchg
fwait
mov
dec
jbe
dec
push
cmp
sbb
pushf
xchg
fistps
push
js
popf
jge
out
pop
in
inc
nop
jge
push
inc
cmp
movl
in
daa
sbb
int3
fimull
aad
jecxz
test
mov
aas
loop
les
lcall
sub
lret
sub
pop
dec
outsb
and
sub
aas
stc
mov
pop
adc
inc
and
lds
mov
daa
call
clc
cmc
outsb
xor
movsb
dec
jg
aam
scas
sbb
stos
push
push
in
pop
lcall
test
sbb
mov
and
push
ds
mov
xchg
push
ror
call
cmp
in
push
shlb
hlt
pop
push
adc
cmp
push
sub
fmuls
nop
js
dec
xor
daa
loop
push
in
enter
sahf
out
orl
clc
dec
out
mov
push
push
lret
nop
imul
lret
dec
dec
xlat
shrl
pop
xchg
pop
mov
aad
xchg
push
xchg
cmp
jl
out
xchg
mov
mov
push
fs
jmp
sbb
insb
repnz
jae
mov
popf
scas
push
aas
jle
pop
dec
mull
add
mov
shlb
push
andb
adc
filds
adc
loope
push
aas
dec
enter
push
cmp
and
jns
loope
mov
xor
movsl
xor
add
pop
sbb
sub
push
inc
out
into
dec
out
adc
jmp
pushf
push
rolb
test
push
into
xchg
movsb
fnsave
sub
lcall
xor
xor
xchg
lahf
or
fdivrl
dec
loop
jmp
int3
add
mov
xor
cmp
dec
xor
inc
insl
fldcw
xor
into
test
call
jno
test
pop
push
and
insb
mov
lar
jnp
call
loopne
inc
outsb
lahf
mov
xor
cmp
xchg
fwait
mulb
cmpl
dec
rol
mov
mov
out
dec
jecxz
pusha
in
jns
sahf
cmc
in
lea
jmp
mov
pop
and
pop
push
call
mov
mov
sub
scas
push
sbb
lret
rclb
jne
pop
adc
add
or
xchg
push
push
lahf
rcrb
movsb
jbe
cmp
adc
ss
and
jbe
adc
hlt
dec
aas
clc
inc
cmp
test
jecxz
or
lock
ret
lret
fwait
stos
push
fisttps
mov
pop
push
mov
popf
xor
mov
mov
roll
ret
cmpsb
cmp
push
dec
push
push
data16
jnp
xchg
fs
fs
scas
andl
andl
or
mov
movsl
ljmp
inc
mov
add
icebp
enter
push
inc
std
fisubrs
test
pop
cmp
or
dec
shufps
ss
pushf
or
pop
pop
sub
shl
push
dec
lret
mov
mov
fwait
xor
inc
iret
mov
lds
out
lret
aaa
dec
push
xor
hlt
jns
mov
and
aas
jno
dec
sbb
notl
pop
fnstenv
cmp
mov
xor
jns
popf
pusha
fdivrp
fucomip
dec
push
std
mov
sbb
mov
nop
ja
pop
sti
xchg
push
inc
lea
sbb
inc
cs
cmp
push
xchg
push
jo
inc
adc
in
enter
inc
nop
push
mov
scas
mov
loopne
test
inc
xchg
bound
xlat
in
add
push
adc
mov
lahf
test
adc
rcr
add
adc
pushf
xchg
adc
aad
cmp
pushf
cmp
fisubs
jno
into
xchg
lcall
aas
sub
jns
xchg
sahf
jae
mov
mov
adc
and
roll
mov
dec
in
adc
xchg
add
sar
inc
mov
rorb
mov
mov
mov
cmp
inc
mov
scas
xor
cmpsl
xchg
mov
xchg
movsb
cwtl
loope
cmpsb
add
xor
pop
adc
fs
inc
pushf
lret
mov
ret
cwtl
sbbl
push
pop
push
mov
imul
add
mov
out
nop
insl
cmp
xchg
sbbl
sti
rorl
ret
sbb
mov
jae
mov
or
xor
cmc
xchg
push
je
pop
ss
push
mov
cmp
sbb
test
add
mov
or
mov
mov
hlt
xor
mov
dec
shll
lods
out
pop
sbb
ds
jl
inc
ljmp
mov
outsb
iret
shrb
cmp
mov
cmpsl
test
push
cld
shll
xchg
cmp
or
inc
mov
or
sbb
imul
cs
sbb
adc
sub
pop
ljmp
shr
ja
xchg
cmp
cmovs
ret
or
push
lret
add
cmpb
daa
and
or
fstps
or
scas
push
cmp
ja
lcall
ret
das
movl
daa
int3
sbb
std
fdivs
cmp
jo
mov
mov
sbb
pop
mov
add
mov
mov
fsts
lahf
inc
or
lret
or
repnz
push
lahf
dec
popa
popf
sbb
pop
ds
mov
popf
aas
mov
out
andb
scas
jle
mov
rcl
xchg
mov
mov
or
or
push
push
or
jno
mov
cld
cs
jmp
fldenv
and
into
pusha
pop
pop
adc
lods
push
in
push
mov
lea
jbe
xor
push
out
pop
sub
mov
cmp
xlat
outsb
inc
insb
adc
loope
rcl
mov
inc
movsb
or
push
imul
sub
faddl
fs
pusha
mov
out
int3
add
test
out
call
int3
subb
push
cmp
and
adc
imul
dec
dec
jnp
xchg
sbb
ds
dec
ss
in
icebp
test
popa
jns
aam
mov
shrb
adc
pop
aas
mov
mov
sub
cmp
cmp
mov
fwait
inc
cmp
pop
xor
inc
fistpl
movsb
enter
cltd
dec
push
daa
mov
cmp
push
inc
push
inc
loope
aaa
pop
push
mov
js
sub
inc
in
adc
sub
jae
jge
push
in
ds
adc
pop
adc
lret
sbb
mov
jg
fistl
inc
mov
fisubrl
ficoml
in
jae
dec
xor
paddsb
out
sbb
out
leave
adc
negb
xchg
in
cmp
inc
aas
push
sbb
test
in
mov
es
movsb
xlat
sub
sbb
ja
jns
jecxz
dec
es
js
jge
and
xlat
cmp
gs
into
mov
pusha
dec
pop
repz
push
jno
out
mov
sub
mov
cmpsb
add
stc
pusha
or
dec
std
in
inc
imul
dec
js
idivb
out
pop
cltd
lret
jl
lea
xor
orl
sti
cli
mov
mov
add
xor
test
adc
pop
cmp
fmull
and
mov
sbb
cli
or
adc
mov
in
pop
pop
cmc
mulb
jno
test
add
int
aaa
mov
rol
and
mov
xlat
push
lcall
sub
mov
xor
inc
xlat
pop
clc
cmp
sahf
mov
push
test
push
pop
xchg
stos
movsl
xchg
fldt
cmp
push
pushf
add
cltd
hlt
push
les
jg
push
pusha
xor
in
mov
pop
ret
lock
lahf
ds
icebp
add
cmp
scas
ss
negb
incl
jns
jne
bound
xchg
in
fcoml
es
out
or
mov
fmul
std
outsb
imull
stos
in
or
mov
dec
jmp
cltd
inc
cmp
push
movsb
and
mov
addr16
enter
loop
mov
xor
xchg
lea
bound
movsl
popa
xor
jp
jne
mov
int
mov
sbb
push
xchg
incb
mov
stos
out
xchg
arpl
sbb
incl
or
xchg
jbe
out
push
es
xchg
sbb
cmp
in
out
es
dec
jo
mov
sub
sub
inc
mov
jge
jl
repz
xor
sub
stc
jmp
cmp
cmc
dec
xor
push
jge
pop
jmp
xchg
pop
mov
orb
jg
add
jle
push
jp
popa
repnz
out
push
inc
mov
mov
aas
dec
lods
jle
shlb
cmp
or
jne
repz
add
les
roll
lcall
jbe
rclb
pop
mov
loope
cs
mov
xchg
bswap
sub
pushl
inc
mov
dec
push
pop
jnp
call
icebp
mov
xchg
std
subb
and
pop
into
in
inc
jecxz
mov
test
mov
shr
xor
rcll
shlb
pop
mov
outsb
cmp
in
jo
jne
push
loopne
and
test
sbb
sbb
cmpsl
pop
add
scas
daa
xor
jp
data16
cmpsl
dec
push
shl
pushf
addb
add
adc
es
cmp
push
mov
inc
arpl
xor
div
in
xchg
dec
push
push
push
push
popf
cmpsb
icebp
push
stos
scas
push
mov
popf
dec
push
xchg
dec
adc
subl
mov
xchg
ret
arpl
lods
adc
lahf
add
xor
cld
stos
xorb
xchg
add
sbb
dec
fwait
jnp
test
and
mov
shlb
push
jns
push
inc
xor
adc
std
into
pop
mov
lret
dec
jb
mov
mov
mov
fnstenv
in
xor
inc
pushf
das
dec
pushf
fcmovnbe
out
mov
in
xadd
sar
lock
xchg
inc
das
lods
xor
or
fdivl
mov
jne
pop
in
mov
jg
popa
pop
dec
mov
into
lahf
lea
xor
std
pop
cmp
jle
mov
nop
dec
jl
pushf
sub
sbb
push
sahf
mov
outsl
jno
lcall
fidivs
into
dec
xorl
push
inc
test
int
nop
leave
dec
mov
mov
sahf
movsb
mov
push
and
adc
adc
mov
pop
addr16
scas
lret
mov
in
mov
adc
xor
lods
jmp
addr16
jmp
or
inc
jge
xchg
add
dec
xchg
out
in
add
bound
mov
xchg
sti
sarl
jb
jbe
inc
xor
push
dec
cmp
test
dec
fsub
out
adc
mov
pop
dec
cmp
and
out
mov
sbb
outsb
int3
repz
enter
mov
inc
mov
les
addl
pushl
popf
mov
cmc
mov
xor
test
movsb
jae
shll
fsubrs
jg
inc
xchg
mov
xchg
jo
mov
icebp
sub
push
mov
dec
sub
shrb
lods
mov
sbb
push
lds
cmp
into
scas
xchg
jp
adc
inc
data16
sbb
repnz
repz
push
adc
fs
push
int3
loopne
js
cmc
ret
mov
loope
mov
cmp
dec
stc
inc
mov
stc
mov
mov
ljmp
inc
pop
test
out
aad
jle
popf
push
jno
repnz
out
sub
lret
nop
mov
ljmp
inc
daa
es
xor
es
psubd
xor
jb
arpl
sbbb
scas
mov
loope
xchg
sub
pop
xor
enter
in
pop
push
loope
fs
out
outsb
push
icebp
lret
in
add
jecxz
rorl
aas
hlt
in
loope
leave
scas
lret
out
js
leave
shld
int
mov
xchg
ficomps
stos
test
push
lahf
jnp
inc
stos
loop
jmp
es
fwait
sahf
cmp
push
and
inc
outsb
dec
jns
push
imul
cmp
arpl
or
dec
or
mov
cmpsl
pop
aas
push
adc
xchg
pop
xchg
scas
mov
cld
getsec
das
inc
sub
mov
pop
daa
xor
mov
out
pop
icebp
clc
mov
aam
test
sub
dec
jle
and
fwait
repnz
or
xchg
iret
addb
fdivs
les
fldenv
loopne
orl
dec
pop
dec
ljmp
gs
jns
xlat
and
inc
xor
xor
cmp
outsb
push
jle
xor
push
push
adc
dec
ror
pop
loop
pop
push
test
dec
pop
xchg
dec
jg
jns
int
and
ret
std
stos
add
lock
push
ror
movsb
sub
push
shr
adc
jecxz
dec
scas
sbb
or
mov
ss
mov
sbb
out
pushl
icebp
sbb
pop
das
cmpsl
mov
into
imul
into
sub
mov
sub
xchg
or
jmp
fcomip
std
lahf
jecxz
lcall
adc
mov
xchg
cmpsl
jo
add
aaa
lock
subb
aam
in
cmp
xchg
or
call
cld
int3
imul
addr16
cmp
loope
xchg
pushf
jns
dec
loop
or
mov
cmp
gs
stos
mov
pop
iret
das
dec
test
mov
mov
shlb
clc
in
pop
mov
hlt
test
in
shlb
popf
mov
push
fistpl
call
fimull
jne
adc
or
leave
cwtl
aad
sub
mov
outsb
data16
hlt
xorb
mov
es
dec
mov
test
repnz
sub
sub
xchg
dec
dec
inc
pop
sub
das
stc
shlb
cltd
xchg
dec
popa
and
lods
pop
icebp
push
sbb
pop
push
mov
xchg
subl
in
sub
jne
inc
ja
aam
ret
das
or
mov
add
and
dec
dec
outsb
mov
repz
xor
jp
jmp
call
or
andb
std
out
fimuls
fiadds
push
icebp
daa
lods
popf
add
pop
cltd
insl
movb
push
fidivs
add
iret
adc
add
rcrb
xchg
mov
fcoms
imull
sti
cmpsb
je
mov
push
aas
fwait
jne
pop
cmpsl
inc
lcall
in
adc
xchg
push
or
insb
std
mov
mov
xor
pop
fldl
and
sub
adc
ds
decl
xchg
ljmp
sub
sbb
adcb
push
stc
leave
and
insl
idiv
scas
mov
mov
cmp
pop
mov
cmp
inc
xchg
aad
and
add
mov
aad
rcr
sub
subl
push
xchg
rclb
mov
aas
out
pushf
fsubrs
lock
js
pop
adcl
mov
int3
dec
cmp
addr16
jmp
es
jbe
out
iret
xchg
subl
pop
imul
inc
in
scas
mov
mov
dec
ja
xor
jbe
xor
push
push
add
rcll
push
fidivs
jecxz
ret
jns
out
xorb
mov
jns
jo
dec
test
fcomps
mov
mov
and
jae
dec
pop
mov
mov
sub
insl
cmp
jb
in
clc
inc
aas
daa
stc
dec
jo
ja
xchg
xor
daa
fildll
movsl
cmp
cli
push
lret
push
rcrl
imul
jns
dec
sti
add
fsts
je
fcoml
inc
adc
lods
jo
cmc
inc
test
test
and
inc
imul
cmp
xcrypt-ctr
cmpsl
pop
cmpb
jge
mov
insl
mov
or
push
or
stc
loop,pn
jae
sub
rcrl
mov
stos
cmp
mov
inc
push
cmp
movsl
jmp
not
push
test
mov
push
or
inc
cwtl
mov
add
je
fs
cli
rcrb
je
cld
add
dec
lods
cmp
stc
scas
test
push
scas
xchg
js
aam
lcall
cmpl
jle
fidivrs
aam
mov
adc
sbb
inc
adc
adc
jno
scas
pop
scas
pop
ja
xchg
xor
inc
shlb
rol
cmp
neg
push
shlb
movups
cmp
mov
popl
outsb
stos
jns
and
enter
xor
dec
repnz
stos
inc
mov
in
lods
cmp
dec
in
jp
lahf
hlt
aaa
imul
stos
xchg
pop
pop
sub
int
jne
jp
mov
repz
lahf
in
sbb
fiadds
cmp
jg
jp
pop
inc
jno
mov
int3
jnp
push
fst
sub
pop
mov
popf
add
mov
pop
in
jmp
jo
and
mov
loope
mov
jns
jnp
fcoml
inc
pop
popf
mov
push
mov
push
fdiv
ss
adc
imul
mov
sti
cmp
lods
push
dec
or
ficomps
adc
or
pop
inc
xlat
pusha
cmp
sub
cmp
test
popf
or
push
test
add
addl
mov
push
push
add
fiaddl
dec
insl
push
cmpsl
stc
jp
jo
repnz
xchg
pop
or
mov
push
push
jl
sub
pop
mov
pop
leave
dec
popf
xor
push
and
mov
mov
fldt
sub
mov
bnd
lods
clc
cmp
mov
sbb
outsl
adcl
push
xchg
cs
pusha
jle
mov
lcall
repnz
repz
mov
loope
xor
pusha
mov
fmul
insl
mov
es
push
movsb
lret
adc
lret
cmp
test
ret
add
pop
xor
cmpsb
cmc
jmp
mov
insb
push
jmp
jl
repnz
or
out
fstpt
or
cltd
das
das
inc
add
in
pushf
gs
mov
jns
fisttpll
sub
mov
test
cld
add
lahf
jo
cmpsl
add
xlat
cmp
lods
xor
mov
sbbl
cmpsb
aas
add
faddl
mov
jns
popf
inc
mov
fmull
xchg
jbe
pop
dec
mov
jno
mov
popf
mov
lcall
data16
int
aaa
cmp
jge
jbe
mov
mov
pop
out
xchg
popf
scas
std
push
mov
adc
and
ret
xchg
notl
add
out
gs
pop
rclb
jne
mov
jne
movsl
fisttpll
cld
test
mov
shrb
or
dec
clc
mov
inc
xorb
xchg
mov
ljmp
jle
daa
inc
loop,pn
imul
xchg
inc
xchg
data16
jbe
xchg
jbe
data16
movb
ss
not
push
push
mulb
out
xchg
inc
xchg
data16
jbe
xchg
jbe
data16
movb
ss
not
push
pop
negb
ss
inc
xchg
mov
cmpsb
jbe
pop
inc
xchg
jbe
data16
movb
ss
daa
not
push
push
mull
out
xchg
inc
xchg
out
jbe
jns
cmp
cmpsb
shlw
sub
sbb
or
fwait
push
adc
add
jge
or
daa
xor
outsb
jecxz
mov
lods
neg
jecxz
shr
ret
out
cmp
and
adc
add
jae
arpl
jle
outsb
jecxz
mov
scas
repz
ret
out
jmp
lds
arpl
push
jg
mov
mov
lret
loop
rcrl
mov
jb
add
dec
je
clc
mov
xchg
push
loopne
scas
adcb
clc
sub
repnz
inc
je
sub
pushf
mov
hlt
out
push
pop
data16
scas
push
fwait
push
decb
arpl
xor
sti
or
dec
daa
or
repz
add
or
outsb
into
and
pushf
out
jbe
pop
push
outsb
ds
push
jb
pushf
mov
inc
xchg
cmpsb
into
lock
pop
jl
jle
loope
je
test
rol
mov
mov
or
adc
mov
scas
add
mov
mov
and
in
cmpsb
in
fs
scas
inc
mov
lcall
jecxz
xchg
add
incb
push
and
adc
outsl
xor
pop
daa
dec
push
addr16
ja
xchg
xchg
dec
cmpsl
popf
mov
std
cmpsl
mov
push
push
push
aas
insl
das
sbb
adc
add
mul
test
loop
lcall
xorl
stos
push
push
dec
enter
add
xor
mov
loop
test
in
subb
inc
pop
adc
pop
inc
pop
xor
push
jle
outsb
mov
mov
scas
repz
into
sar
ret
out
xor
and
adc
add
jae
arpl
jle
outsb
mov
mov
scas
repz
into
sar
ret
out
xor
out
mov
arpl
xor
daa
xchg
or
in
xor
mov
mov
int3
xchg
xchg
rcrb
repz
sub
addr16
mov
es
sub
in
pop
xlat
ljmp
jmp
mov
out
mov
mov
jo
mov
mov
popf
icebp
pop
push
fstp
popf
mov
adc
popa
jmp
and
and
out
mov
sbb
push
mov
and
jmp
xor
int
test
repz
addb
negb
ret
fs
inc
sub
or
mov
sub
mov
pop
mov
lahf
pop
cs
cwtl
stos
lahf
sbb
pop
dec
sbb
add
test
jecxz
xchg
or
les
jp
inc
and
cmp
pop
and
out
sbb
loopne
xorl
fwait
mov
fmul
xchg
aaa
sub
push
mov
mov
lods
popw
push
sbb
add
and
orb
xchg
cwtl
jmp
mov
bound
mov
push
or
jmp
push
loopne
in
icebp
dec
hlt
inc
std
pop
pusha
shll
xchg
fisttps
lods
xchg
sub
fsubs
or
mov
add
sbb
inc
xor
lahf
sbb
xlat
outsl
cli
adc
sub
clc
pusha
loope
and
mov
inc
dec
ds
icebp
out
test
out
daa
sub
add
jnp
sbb
test
loopne
int
shr
or
and
sbb
scas
repz
and
mov
mov
adc
push
ss
ds
movsl
fildl
adc
sub
insb
ja
hlt
mov
imul
or
inc
nop
fmul
imul
lds
movsb
add
iret
adc
jmp
icebp
hlt
xchg
push
pop
jo
push
jae
ret
xor
adc
in
nop
pusha
push
fsubr
fucomip
rcl
mov
fistl
in
mov
xchg
mov
daa
test
or
ss
cmp
mov
mov
aas
es
mov
mov
or
loope
aas
fcoms
lock
iret
cld
lret
cli
out
aas
mov
dec
add
mov
dec
hlt
push
mov
enter
popa
outsl
fcmove
rorb
das
mov
jp
jecxz
cmp
push
xchg
dec
or
loope
repz
and
in
inc
stos
fbstp
notb
inc
imul
dec
popa
fwait
in
xor
sarl
adc
mov
das
fsubrp
arpl
pop
dec
xor
js
cmpsl
repnz
push
cli
cld
sarl
cmc
rdpmc
movb
les
mov
or
lea
pop
aaa
xchg
inc
in
mov
push
into
xor
dec
xchg
cmp
cmp
fisttpl
iret
sub
and
jg
cmp
mov
ficompl
add
mov
pusha
fcomps
jb
nop
add
gs
ds
xlat
cmp
in
imul
pop
push
loope
cmp
mov
in
lock
sbb
push
add
push
mov
rcrb
push
movsl
jp
jg
or
mov
ja
imul
dec
enter
mov
lods
dec
les
outsb
adc
test
stc
or
mov
xor
mov
lods
aad
mov
pop
add
sbb
adc
testl
xchg
popa
xchg
jmp
dec
sahf
push
divb
sbb
xchg
dec
sub
mov
repnz
mov
pop
xchg
test
jecxz
popf
jo
xchg
xor
adc
dec
ss
mov
adc
int
sub
popf
inc
mov
mov
sub
jmp
mov
mov
pop
cld
int
fwait
jo
mov
test
pop
inc
jne
push
ret
mov
outsl
xor
cli
js
ljmp
out
jne
enter
vrcpss
mov
xor
ret
stc
das
test
add
push
add
in
xor
lea
adc
xchg
test
xlat
outsl
scas
sahf
mov
popa
push
sub
in
jg
xchg
push
jmp
in
cwtl
cltd
bound
pop
xlat
je
sbb
clc
fs
pop
mov
mov
mov
or
lahf
in
movsb
stos
or
js
lods
out
das
push
mov
fisttpll
pop
cmp
pop
jne
testl
movsl
aas
cmp
ds
dec
ja
movb
dec
insb
icebp
test
push
test
jbe
dec
dec
mov
outsb
fsubs
iret
xchg
xchg
shlb
xor
push
leave
sub
out
in
dec
pop
incb
mov
stos
aad
inc
mov
mov
divb
dec
xor
rcrb
or
mov
fiaddl
call
mov
ss
mov
or
or
lret
aam
inc
pusha
xor
popf
dec
clc
or
and
pop
dec
sub
int
cld
lcall
in
int
loop
xor
popa
insl
sbb
pop
stos
orb
mov
cmp
add
jge
mov
jo
lock
push
mov
jl
sub
jo
into
mov
adc
in
call
mov
rolb
cmp
mov
pusha
jl
pop
or
cwtl
pop
in
push
aaa
mov
cmp
push
cli
mov
xor
push
push
adc
cmpsl
jae
testl
cltd
jae
jecxz
sub
push
lods
push
mov
mov
gs
pop
ffree
push
xchg
out
sub
hlt
fwait
je
fs
inc
addr16
data16
ret
cmpl
lahf
popf
aaa
mov
mov
popf
add
out
or
fs
xchg
mov
fistps
mov
lods
fistps
out
dec
xor
add
inc
xor
in
into
test
divl
lret
mov
flds
imul
stc
xchg
bound
sahf
mov
adc
dec
pop
mov
fildll
mov
jl
mov
ljmp
xchg
or
push
das
xor
pop
stos
in
and
mov
pusha
lock
movsb
inc
push
push
testb
or
arpl
imul
add
test
xor
dec
loope
push
and
and
pop
nop
push
inc
iret
jnp
mov
lods
pop
push
les
push
les
test
jne
mov
add
xchg
cmp
sbb
pop
stos
arpl
fiaddl
mov
shll
in
pop
mov
and
xchg
pop
out
cli
mov
fdivrs
mov
sub
mov
mov
xor
and
cmp
pop
int
insl
push
mov
sub
and
imul
shll
das
mov
or
int
loope
adc
push
dec
repz
pop
nop
filds
adc
push
pop
div
sub
xor
insb
mov
sbb
lret
or
lods
fsts
bswap
into
sti
adcb
mov
sbb
insl
es
sub
sub
fst
repnz
inc
out
xchg
adc
ret
pop
fnstsw
scas
cmpsb
sub
leave
push
repnz
sub
xor
add
repz
aaa
sub
mov
add
adc
adc
or
movsb
je
arpl
cmpsl
mov
lahf
push
mov
push
xchg
repz
dec
ja
imul
test
shr
iret
adc
sbb
dec
popf
aas
ret
adc
pop
adc
adc
sbb
dec
scas
arpl
and
in
dec
cld
or
dec
mov
pop
jnp
xor
mov
dec
dec
jecxz
aad
inc
xchg
sub
mov
lret
add
adc
pushf
ffree
xor
mov
and
fstps
xchg
addr16
mov
js
xchg
push
aam
sub
add
outsl
fistpll
fmull
dec
out
add
fidivrs
stc
dec
pop
push
and
push
jmp
mov
mov
dec
aaa
bound
xchg
xchg
loop
mov
clc
and
mov
mov
popf
clc
fsqrt
hlt
es
cmp
loop
pusha
popa
jne
ret
push
dec
lods
mov
lock
cmp
or
into
out
aad
aam
jge
aaa
sbb
pop
ds
and
aad
add
mov
and
pop
lds
mov
cwtl
test
pop
in
fstp
scas
out
add
call
inc
pusha
xorl
mov
enter
outsl
pop
push
push
inc
xchg
adc
adcl
xchg
mov
xor
in
rolb
inc
cltd
pushf
xchg
push
lods
lahf
fistpll
push
ljmp
mov
and
dec
and
inc
scas
sahf
pop
xchg
jo
push
rorb
pop
mov
xor
push
and
mov
xchg
mov
lret
data16
xor
inc
aaa
adc
xchg
cmp
es
xchg
stc
imul
push
xor
mov
lret
and
adcl
xchg
es
je
add
cmp
lock
inc
mov
pushf
mov
hlt
loopne
in
mov
cltd
pop
xor
jne
bsr
enter
addr16
insl
outsb
mov
xchg
mov
ficompl
lods
mov
mov
jl
push
xor
mov
les
aad
xchg
loope
int3
roll
pop
push
out
xorl
leave
xchg
xor
push
and
jp
fistps
loope
stos
rorl
mov
test
mov
adc
lahf
dec
jge
sbbb
lret
xchg
loop
mov
dec
arpl
cmp
aam
dec
sbb
in
xchg
test
push
in
daa
dec
out
mov
dec
jbe
xor
int
ret
mov
repz
mov
mov
mov
ljmp
mov
or
mov
test
es
leave
adc
xor
mov
xor
jmp
push
sub
popf
sub
das
mov
push
cmp
dec
pop
mov
fisttpll
sbb
push
inc
cmpb
fnstcw
pop
outsb
cmp
cmp
lahf
inc
out
sbb
cmp
mov
mov
mov
cmp
and
enter
pop
sbb
aaa
push
xor
xchg
xor
mov
gs
xchg
sahf
pushf
jge
ret
stc
xchg
pushf
arpl
stos
mov
popf
ss
andl
fwait
push
xor
testl
fadds
cmc
jge
mov
jne
and
adc
sbb
mov
add
cltd
addr16
aaa
ljmp
sbb
sub
sub
push
mov
aam
adc
lahf
sub
test
xchg
mov
fistpll
out
pop
ficompl
cli
popf
inc
es
bound
push
mov
xlat
popf
mov
popf
dec
lods
notb
and
ss
jo
in
mov
jmp
insb
sub
into
aam
icebp
adc
ja
rorb
leave
pop
sbb
xchg
jno
pop
xor
adc
test
insb
and
jo
adc
xor
jns
pop
jecxz
dec
sub
mov
js
popf
repz
subb
sbbl
or
lea
add
xor
movsb
mov
aam
rorb
sbb
jnp
cmpsb
mov
jne
ja
test
mov
xchg
mov
ss
xor
enter
stos
mov
mov
sahf
nop
jns
jne
pop
cmpsl
cltd
std
daa
mov
push
jp
sahf
dec
mov
bound
mov
pop
lret
jge
xchg
or
enter
bound
xchg
bound
jge
xchg
xor
jb
adc
dec
test
mov
repnz
dec
mov
je
ficompl
xchg
jg
les
pop
imul
xchg
cmp
fsubr
or
lods
push
test
push
xor
aaa
in
in
xchg
mov
sbb
ljmp
cmp
outsb
fstpt
pop
sbb
stos
test
mov
mov
outsl
mov
imul
int3
cltd
mov
bound
shlb
mov
dec
cmp
out
adc
aaa
jle
or
inc
cmp
add
and
mov
cmp
pop
adc
dec
xchg
jns
add
sub
jle
jns
jae
imul
or
sub
aam
cmpsl
sbb
or
mov
ds
andl
in
and
je
jmp
cli
outsb
lods
cld
xchg
jge
in
mov
mov
mov
add
mov
mov
inc
xor
cmp
lahf
fiadds
mov
cli
icebp
push
adc
sub
addr16
popa
mov
and
je
repz
shlb
jecxz
call
xchg
add
in
in
xchg
gs
pop
int
in
ljmp
and
and
int
pop
movsl
shlb
mov
jle
push
add
fs
mov
pushf
xchg
cmp
test
mov
ds
test
and
daa
cltd
stc
jae
mov
add
aas
mov
mov
xchg
iret
xor
loope
ud1
mov
stos
sar
lret
shrl
sbbl
adc
cwtl
jo
mov
adc
jns
ljmp
leave
jb
ds
enter
mov
popa
jb
xchg
in
movsb
dec
xchg
pop
pop
fwait
xchg
xlat
movsl
inc
sub
cmc
xchg
cmp
inc
out
rcl
push
sub
mov
xchg
ficompl
fucomp
sub
es
aam
pop
or
out
js
adc
movsl
add
jnp
xchg
cld
testb
stos
cltd
cmc
push
movsb
ss
push
pop
push
mov
mov
cmp
inc
dec
ret
imul
shrb
shlb
fs
pop
pop
jge
push
add
mov
and
iret
loopne
xor
jg
das
or
lods
movsb
xor
sub
in
xchg
jmp
push
ds
adc
jne
inc
outsb
dec
clts
fadds
aad
and
jo
cmp
inc
or
mov
mov
fwait
cmp
jecxz
aas
and
enter
insb
cmp
testl
out
push
mov
mov
fdivr
pop
imull
push
or
jecxz
lea
shlb
test
inc
jge
push
sahf
ja
mov
out
cmp
cli
shl
dec
lcall
and
dec
cmp
adc
push
cmp
ja
xlat
inc
xchg
sti
jo
fidivrl
imul
arpl
int
dec
pop
sub
decb
mov
out
loop
aaa
inc
shll
jecxz
les
cmpsl
push
movb
imul
adc
cli
xchg
fdivrl
fsubs
lods
mov
mov
cwtl
push
std
dec
dec
mov
fstpt
dec
lret
xor
fisubrl
rcrb
nop
pusha
cli
fsqrt
das
sbb
mov
xlat
and
jnp
and
in
insb
inc
popa
sbb
jns
out
mov
sub
mov
add
adc
adc
cwtl
pop
sub
fst
faddl
sbb
inc
inc
mov
je
xchg
cmpsl
cld
xchg
push
mov
orb
lock
int3
xor
das
or
and
movsb
cmp
push
pop
sub
jg
aam
popa
add
into
xchg
sbbb
cmp
mov
jl
dec
hlt
addr16
rolb
imul
push
xlat
bound
jmp
int3
xor
jns
dec
lods
adc
inc
pop
das
cmp
insl
adc
jns
cmp
outsb
sahf
cmp
xor
mov
arpl
inc
out
mov
mov
rol
mov
push
adc
jmp
sub
or
mov
sahf
mov
popa
ret
dec
mov
or
scas
cmp
xor
or
jo
xchg
push
test
push
push
ret
or
inc
cmp
daa
dec
icebp
pop
xor
aas
sub
sti
fcomps
xchg
or
cltd
pop
test
imul
movsb
inc
jecxz
sti
lcall
lods
or
jecxz
jns
pop
out
stc
lods
arpl
int
pop
xor
lods
push
fcomps
mov
je
fisubs
rclb
stos
mov
cld
roll
andl
mov
inc
jnp
cwtl
in
push
pop
push
push
cli
insl
aad
and
adc
imul
pop
inc
clc
mov
xor
xchg
pusha
xchg
xor
xchg
shll
push
rclb
out
jl
mov
push
sti
inc
movsb
ds
pop
loope
jg
dec
and
outsl
cmp
xor
outsb
icebp
pop
mov
xchg
jae
fs
inc
sahf
into
sbb
mov
into
out
mov
cmp
xor
xchg
jo
add
enter
xor
jecxz
mov
inc
adc
mov
xchg
stos
std
into
xchg
mov
push
fcoml
std
mov
dec
add
inc
sbb
ss
les
sarl
xchg
xchg
inc
jns
sbb
dec
mov
mov
roll
or
shll
shlb
movsl
scas
shl
dec
mov
cli
arpl
jns
mov
or
dec
sbb
push
clc
sub
ret
and
or
xchg
rcrl
jle
sub
mov
jg
adcb
lcall
pop
cmc
inc
xchg
push
xchg
loop
fs
mov
loopne
adc
out
xor
add
fs
repz
xchg
in
xor
push
sbb
xchg
out
out
ljmp
addr16
and
cmp
push
pop
push
in
push
push
cli
mov
outsl
das
into
hlt
fwait
loop
insb
push
jmp
fcmovu
jge
sbb
repnz
xor
mov
nop
dec
jge
imul
push
inc
inc
cltd
ljmp
je
outsl
cli
cs
or
fldt
mov
lret
test
icebp
insb
add
test
xchg
mov
cmc
movsb
shr
fcmovne
insb
iret
push
imul
inc
mov
loope
push
iret
adc
sub
sub
push
mov
adc
sub
mov
inc
jecxz
adcl
mov
xchg
leave
out
hlt
popf
dec
push
sbb
push
aad
cmp
andl
jno
mov
mov
adc
icebp
push
xor
out
xor
ds
mov
xchg
fstpt
xlat
cmp
outsb
fwait
enter
jp
call
adc
mov
cwtl
fs
repz
cld
lock
cmpl
ret
inc
lods
cmpl
mov
cmp
stc
cmp
dec
or
or
push
xchg
xor
lods
push
daa
jnp
test
cmc
xchg
and
pop
cld
cld
pop
ss
ret
je
repnz
stc
lock
test
xchg
aam
xor
lcall
pop
popf
push
dec
push
cmpb
mov
mov
pop
xor
outsb
and
inc
mov
pop
and
cmp
mov
jl
mov
sub
lahf
incb
dec
push
popa
add
add
cmp
stos
jmp
sbb
lds
fisttpll
test
push
mov
push
mov
xchg
sbb
fadd
popf
test
lea
data16
stos
ja
aaa
cmp
lock
mov
push
xlat
repnz
push
push
cs
xor
push
in
mov
xchg
sbb
sbb
inc
stc
nop
pop
enter
in
inc
adc
jb
fucomip
inc
jb
adc
and
pop
push
push
pop
mov
iret
xlat
push
leave
pop
sbb
jbe
mov
jp
xor
aaa
insb
push
cmc
mov
rcr
leave
aas
mov
jl
cmp
pop
sbb
test
push
and
ljmp
popa
cs
or
jae
jno
inc
leave
repnz
outsb
je
jmp
mov
sub
or
mov
dec
push
mov
inc
mov
pop
xchg
pop
push
pop
movsb
or
pushf
test
jnp
addl
sbb
mov
mov
sub
jmp
leave
les
fcmovb
outsl
out
cmp
xchg
aam
cmp
movsl
je
lret
lock
fstps
fiaddl
jmp
test
stc
scas
inc
xor
cltd
cmp
ret
cmp
adc
pusha
sbb
ljmp
or
dec
scas
or
orb
sub
jle
mov
add
cld
mov
fldl
shll
sbbl
add
arpl
mov
test
push
xchg
out
mov
pop
int
imul
stos
jecxz
and
push
cmp
or
ss
jo
aam
xor
push
push
mov
out
cmp
mov
stc
mov
xor
mov
mov
xchg
test
jecxz
jne
lods
outsb
xor
sti
sub
mov
sbb
sti
dec
add
mov
xor
sbb
shl
sbb
pop
dec
test
mov
fstps
aam
push
sbb
mov
jle
rcrl
xchg
in
lods
lea
xchg
push
add
in
sti
test
jg
cmp
insb
sbb
lahf
xchg
outsl
mov
mov
cwtl
add
dec
jmp
out
mov
dec
sbb
pop
xor
rcrl
jae,pn
arpl
jle
outsb
mov
mov
scas
repz
into
sar
ret
out
xor
and
adc
add
jae
arpl
jle
outsb
mov
mov
scas
repz
into
sar
ret
out
xor
and
add
add
jb
addr16
push
jle
outsb
mov
mov
scas
repz
into
xlat
push
out
sub
femms
fwait
sub
jae
jae
push
jle
outsb
mov
pop
and
mov
imul
add
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
idivl
sub
sbb
or
adc
add
test
cld
and
adc
adc
nop
cmp
sub
sbb
or
jl
insb
xchg
pop
test
fs
xor
cld
and
adc
add
dec
cmp
sub
sbb
or
jl
insb
mov
adc
lods
cmp
and
scas
pop
int3
lcall
pop
mov
movsb
dec
xchg
movsb
or
leave
or
and
adc
add
sbb
lods
push
jp
repz
or
push
adc
popf
mov
add
sti
popf
or
mov
icebp
in
pushf
sbb
mov
inc
pop
inc
jno
std
popa
sub
and
inc
sub
mov
dec
jge
insb
imul
mov
addr16
mov
adc
fsubr
shl
cltd
pop
repz
jge
jns
dec
bswap
push
inc
out
push
arpl
dec
jno
and
in
and
inc
or
cmp
dec
or
imul
lods
inc
leave
pusha
lods
fisttpll
sub
pop
int
cmp
sub
sbb
or
jl
insb
xchg
pop
and
lods
and
in
faddl
mov
adc
insb
loopne
test
fnstenv
fdivs
hlt
and
inc
popf
dec
lahf
jge
popa
lea
sbb
jle
xor
or
rorl
fsts
jecxz
lahf
dec
xchg
inc
pushf
cwtl
jne
jg
je
imul
pop
test
lods
push
pushf
inc
mov
and
adc
add
hlt
cmp
sub
sbb
or
jl
insb
xchg
pop
test
lods
push
pushf
inc
mov
and
adc
add
hlt
cmp
gs
scas
add
jnp
dec
sar
and
mov
add
shr
stos
mov
and
out
pop
dec
jmp
notb
aad
imul
or
mov
cmp
aaa
push
pop
popf
imul
or
lock
pop
fimuls
sub
int
bound
test
das
adc
jae
pop
test
fsubrl
adc
push
pop
pop
iret
pop
inc
cmp
add
mov
pop
imul
mov
push
gs
hlt
lds
mov
or
lcall
mov
arpl
cwtl
outsb
add
dec
ret
mov
popa
push
jge
mov
je
sbb
in
cmp
pop
jmp
push
cltd
fcmovnb
arpl
jnp
fcoms
jg
jae
fisttpll
add
mov
mov
and
inc
ja
subl
adcl
sub
jge
out
fnstsw
ret
xor
repnz
xor
xchg
jb
enter
iret
les
sbb
pop
into
aad
dec
test
jbe
add
lahf
das
jmp
cltd
test
jmp
xchg
outsb
popf
push
test
cmp
pusha
sub
mov
xchg
imul
repnz
xchg
hlt
test
dec
sbb
pop
xchg
mov
cltd
mov
push
aam
ss
inc
ror
mov
cmp
xor
cmp
int3
ret
pop
mov
mov
xchg
aaa
jnp
mov
xor
iret
jne
and
jl
cli
sbb
movsb
popa
aas
fldt
scas
out
jge
sub
lds
inc
jb
out
xchg
xchg
nop
cmp
or
loopne
inc
or
test
xor
jae
inc
je
lock
ret
lahf
xor
aad
adcl
test
adc
or
fwait
mov
mov
add
stos
and
movsl
mov
outsb
leave
push
xchg
jg
ds
rorl
adc
aaa
dec
out
lret
pop
push
lret
in
push
int3
pop
or
stos
sar
out
jno
hlt
mov
cmp
lock
clc
fcoml
and
rcrl
lods
pop
mov
dec
sub
outsb
mov
add
sub
es
jl
fsubl
or
or
je
int
repnz
mov
xchg
es
pop
add
pop
add
dec
pop
jmp
test
gs
andb
mov
insb
xor
lods
dec
lahf
outsl
mov
in
test
in
loop
xor
mov
mov
or
aaa
pop
adc
lods
or
fistpll
mov
mov
enter
popa
mov
loope
cld
jne
inc
mov
lret
jg
inc
out
shll
inc
mov
mov
cmp
hlt
pop
cwtl
aas
xchg
data16
repz
stos
xchg
gs
outsl
jmp
jl
cmovs
and
or
lock
mov
sub
shl
or
mov
pop
jb
mov
mov
pushf
clc
and
jo
jb
insb
pop
jns
push
bound
fstps
out
popa
push
repz
adc
xor
mov
push
int3
cmp
aam
fcmove
add
pop
adc
cmpsl
aas
sbb
fstpl
push
and
xor
les
mov
mov
dec
mov
xchg
or
arpl
and
push
sti
add
cmp
stos
pop
sub
or
sbb
adc
xchg
or
add
cmp
and
movsb
jns
cmpsl
inc
cmp
fisttpl
fs
pop
jmp
or
xchg
dec
cmp
lret
mov
mov
or
sub
in
cs
mov
out
add
nop
out
imul
mov
sti
fcomp
aad
lods
movsw
adc
jnp
mov
cmp
movsb
test
xorl
mov
and
in
in
iret
adc
mov
rorl
mov
iret
xchg
cmp
sub
dec
push
push
mov
mov
test
mov
mov
popa
movsb
mov
jle
out
and
imul
cs
stos
nop
push
shrb
push
cld
imul
add
and
dec
inc
dec
rcrb
das
insb
adc
icebp
xor
js
leave
imul
repz
push
popa
mov
jecxz
sub
sbb
iret
or
inc
adc
cld
and
pop
sub
jnp
xlat
jo
adc
popf
push
imul
xchg
movsl
lcall
cmpsl
pushf
sbb
push
inc
jmp
loope
ficomps
xchg
loopne
xor
push
push
shlb
pusha
loop
sub
out
dec
jb
and
xor
sub
sbb
mov
or
mov
ds
mov
xor
aad
xor
or
and
subb
mov
or
xor
xor
clc
inc
sub
in
mov
ret
out
mov
sub
iret
xchg
xor
and
jle
cmpsb
popa
and
sub
scas
js
push
clc
subb
pop
sarl
pop
ret
mov
stc
sbb
loopnew
cmp
push
or
mov
push
lcall
scas
pop
call
shrb
jb
or
jo
inc
cwtl
or
mov
and
add
sub
pop
test
ficoml
lret
jno
xor
fsubrs
test
pop
bound
push
jge
pop
jnp
xchg
pop
fcompl
lods
push
aas
jo
jns
mov
orb
fnstsw
es
divl
out
mov
scas
lea
stos
sub
sub
js
xor
out
js
mov
jmp
and
fcoml
mov
cmp
scas
cmp
fdivl
mov
lods
call
arpl
and
rolb
push
sbb
sub
test
and
sbb
pop
jmp
fcomps
mov
pop
fnsave
shll
daa
jbe
mov
idivb
jbe
repz
xlat
sbb
ret
out
fwait
aas
movsb
stc
sub
xchg
fiaddl
loop
pushf
sub
cmp
call
mull
movsl
rclb
xchg
pop
mov
push
movsl
lret
mov
bound
push
cmc
fisubl
sahf
ja
js
lods
mov
movnti
test
mov
loop
or
mov
jge
cmc
adc
sub
cmp
mov
cmpl
adc
cld
mov
jg
fidivrs
aas
mov
inc
or
cmp
sub
iret
icebp
fbld
inc
mulb
xor
ds
mov
mov
es
in
sbb
in
sbb
rclb
loope
push
in
into
mov
int
cmp
push
dec
shll
cs
xchg
dec
cwtl
cmp
mov
ret
popf
cltd
test
add
mov
imul
pop
hlt
movsb
sbb
arpl
rep
test
sbb
and
fisubrl
adc
in
add
fwait
dec
cmp
mov
xchg
push
aam
mov
mov
aam
hlt
arpl
mov
jae
js
lods
jae
and
es
jne
popf
mov
cli
out
shrb
movsl
test
pop
lods
mov
jno
xchg
xchg
pop
xor
test
hlt
mov
and
xor
push
subb
fwait
mov
pop
sbb
js
in
push
push
arpl
cmp
jg
stos
pop
loope
or
mov
and
mov
andb
dec
mov
mov
add
jbe
lret
je
jne
or
in
and
nop
es
inc
out
adc
sti
xchg
notl
xchg
dec
stos
scas
and
inc
dec
mov
enter
and
adc
inc
jno
ds
rcrb
xlat
sub
in
fs
fnstcw
bound
andb
jp
out
fs
sbb
sbb
orl
pop
dec
mov
or
jno
in
insl
mov
push
inc
ret
lret
jecxz
stos
mov
xlat
xchg
aas
adc
sub
jmp
pop
push
clc
xor
test
jg
sub
iret
xor
inc
jno
pushf
sti
mov
lea
mov
das
and
cmp
ljmp
orl
xchg
sub
repz
xor
mov
call
test
adc
xchg
push
pop
fdivl
push
fcomip
pop
imul
je
lret
aad
push
mov
stos
mov
sbb
xor
and
xchg
out
and
add
lds
or
dec
lret
nopl
enter
and
jns
lahf
mov
sbb
fs
stos
packssdw
sub
xorl
add
mov
stos
push
push
or
enter
add
imulb
cmpsl
jmp
jge
je
mov
addr16
xchg
push
adc
add
rolb
lods
das
and
jne
rcrb
sub
push
adc
push
addr16
or
and
js
cmp
push
inc
xlat
add
popf
mov
xor
fabs
andb
shlb
add
and
dec
xor
dec
lret
push
or
mov
test
cmc
cmp
sbb
jnp
ja
repz
adc
xchg
lahf
cltd
mov
add
lods
aam
hlt
js
mov
inc
cli
pop
jns
xor
push
mov
jl
push
mov
shll
inc
cmp
adc
cmp
pop
cmpl
stos
sbb
popf
cmp
int3
sbb
dec
pop
push
and
scas
jl
js
enter
data16
mov
inc
sub
inc
test
mov
int3
lock
adc
insl
fmul
rcrl
push
pop
adc
pop
lcall
adc
xchg
ret
and
out
add
xchg
aas
das
pushf
mov
jae
dec
ja
mov
push
jecxz
cld
jae
ja
push
test
out
mov
loop
int3
stos
into
fwait
sub
cmpsb
mov
and
aas
push
aam
fs
data16
mov
jmp
insl
cs
in
lss
lret
mov
fstl
sbb
mov
xchg
mov
push
xchg
push
sbb
dec
rcll
je
mov
cmp
or
sbb
clc
jp
jne
rclb
and
nop
shlb
sub
or
cltd
mov
push
decb
lods
loop
cmp
xchg
cmp
xor
leave
jl
pop
dec
cwtl
or
lock
scas
inc
aas
sub
push
pusha
mov
dec
test
das
adc
xlat
sub
cli
fisubs
sahf
pop
add
lret
and
pushf
push
dec
or
test
and
jmp
push
push
and
outsl
adc
dec
loope
out
push
jge
mov
gs
inc
sub
loopne
xor
cmp
add
jo
or
out
cld
sbb
jne
mov
xchg
sbb
sahf
iret
pop
push
sub
xchg
das
jo
fsubrs
xchg
push
or
addb
js
dec
push
sbb
inc
mov
cld
dec
xorl
jge
jge
adc
bound
sbb
push
shrl
es
sub
leave
add
and
adc
lcall
jl
adc
xor
shl
cs
pusha
in
movl
mov
inc
jo
xchg
loope
jns
xchg
add
sub
mov
adc
or
rorb
outsl
int
pop
mov
xor
shrl
rolb
sub
enter
sub
dec
and
pop
sbb
cmc
adc
je
fadds
mov
or
inc
push
inc
and
fdivrp
pop
jne
pop
xchg
gs
jp
or
andb
sbb
insl
mov
test
js
je
ljmp
mov
fwait
stos
sahf
aad
jno
cmc
or
test
sub
call
fwait
movsl
pop
aad
sahf
mov
push
jnp
or
dec
jle
loope
xor
fdivs
std
cs
test
or
adc
push
jne
lods
lods
xchg
sahf
pop
pop
lret
sub
mov
push
sbb
stc
sti
rorl
in
enter
xlat
sub
inc
je
js
rcrl
pop
xchg
jmp
sub
outsl
nop
inc
insl
adcl
test
adc
fstpt
adc
lret
adc
leave
insl
fisubl
cmp
push
scas
inc
push
cmp
pop
jg
loop
pop
sbb
mov
stos
jle
push
out
aas
das
das
pop
and
or
je
xchg
test
adc
pop
loopne
repz
jno
test
cmc
adc
xchg
mov
dec
jno
mov
xor
sub
sub
cmovg
lar
inc
mov
lock
imul
movsb
in
pop
out
fldt
mov
cmp
inc
std
pop
and
lret
test
imul
mov
outsb
mov
add
sbb
xor
mov
mov
mov
iret
aas
cli
int
jge
aaa
jns
cld
inc
aaa
leave
je
nop
in
xchg
dec
xchg
rcrl
sbb
dec
mov
mov
push
mov
cmc
jns
movsl
mov
mulb
outsl
std
pop
inc
pusha
pop
xchg
cmc
pop
push
pop
pop
cltd
lods
lods
sub
popa
add
cltd
mov
or
mov
jo
sbb
mov
into
cmpsb
inc
sub
add
sbb
or
cmp
adc
mov
pop
lret
mov
testl
xchg
decl
pushf
sub
sar
dec
push
push
jb
cli
add
stos
lea
dec
add
push
xor
rol
sub
iret
incb
mov
sbb
sub
ret
jg
aad
lret
jnp
lcall
out
lea
in
dec
xchg
adcl
dec
or
lret
push
or
pop
fs
das
mov
jge
cld
loopne
fstpt
pop
cmp
pop
inc
dec
sbb
or
les
push
into
or
push
mov
jns
or
aaa
mov
out
loope
fwait
mov
popf
lea
out
shrl
and
iret
adc
mov
or
fnsave
rcrb
sbb
add
and
push
add
and
fwait
rcrb
in
mov
sbb
lea
sub
xor
lret
dec
movsl
inc
push
cmpl
pop
cld
inc
pop
jns
xor
test
sub
dec
bswap
pop
cmp
push
and
lahf
and
scas
pop
mov
pop
xchg
test
push
lock
pushf
icebp
pop
aas
repnz
bound
push
mov
dec
fwait
cwtl
cmpsb
repz
repz
lods
xor
ljmp
scas
mov
xor
fsubs
adc
cmp
ljmp
mov
xor
fistps
fimull
inc
add
mov
xor
stos
addr16
inc
cs
lods
and
fstpt
mov
adcb
cmp
pop
hlt
push
or
add
xor
mov
sbb
or
add
bound
popf
ret
sub
psrld
fiadds
jno
mov
push
dec
inc
xchg
and
lret
pushf
scas
jae
je
cmp
push
push
inc
push
sbb
or
mov
jp
pop
int3
add
push
inc
pop
push
jecxz
in
les
xchg
loopne
sub
or
fwait
mov
rol
hlt
jmp
mov
jge
mov
ss
jmp
xor
jle
sub
lea
and
and
mov
xor
sti
enter
jno
cwtl
adc
inc
sbb
cmp
repz
scas
lcall
stos
ja
lods
xor
pop
dec
fldcw
sbb
std
in
dec
mov
jle
xlat
xor
sbb
repz
shrd
mov
mov
mov
xor
pop
mov
sahf
scas
inc
fdivrs
cmpsb
push
mov
ret
jbe
jp
fwait
pop
fists
mov
in
scas
gs
add
ret
push
adc
dec
jae
neg
adc
fiaddl
xor
addr16
pop
rorb
dec
pop
pop
push
mov
or
repnz
mov
xlat
and
out
ret
scas
aam
aad
cmc
test
inc
push
jl
scas
arpl
int
cld
xchg
neg
stos
and
in
mov
xor
push
cld
and
lods
adc
adc
dec
mov
repnz
adc
jge
pop
test
rcr
arpl
pushf
pop
jge
jne
int
xchg
call
jb
jecxz
sub
sub
fwait
scas
aas
rolb
jbe
fisubrs
or
lods
fstpl
cli
pop
js
push
push
lret
xor
cmc
inc
cli
inc
stc
jb
cli
xchg
inc
xchg
das
ret
dec
cmp
inc
icebp
fcmovu
push
scas
mov
xchg
pop
lahf
cmp
sti
pop
xchg
fwait
pop
inc
cs
jge
int
fstpt
lahf
pop
inc
jo
push
lret
loope
les
ds
pop
dec
rcrl
cltd
mov
clc
dec
push
mov
dec
jo
adc
inc
jb
mov
insb
pop
mov
jbe
or
xchg
push
cmp
mov
aas
test
int3
xchg
xlat
mov
xchg
push
loopne
push
stc
sub
es
dec
dec
add
ljmp
cmc
lock
pop
inc
ja
jbe
je
movsb
aad
xor
and
push
sub
leave
jbe
mov
in
ds
jns
cmpsb
xchg
sbb
iret
and
daa
fsts
sub
pop
fs
movsb
stc
cmpsl
cli
out
popa
stos
adc
jns
lods
sti
in
outsb
pop
fidivs
mov
sbb
mov
lock
test
dec
insl
xchg
mov
sarl
sub
push
cmp
pop
mov
mov
fstl
das
jl
mov
cmp
xorb
mov
mov
into
rcrb
jb
jno
out
fbld
mov
clc
imul
sub
inc
cld
sbb
cmpl
cmp
jo
ja
rcrb
cmp
add
pop
push
je
loope
jle
mov
xchg
adc
stos
cmp
cmp
enter
fs
jo
sbb
adc
add
cmc
lret
loopne
lds
sbb
mov
nop
int3
in
mov
xlat
fsubrl
mov
xchg
leave
idivb
or
mov
dec
mov
fsubs
gs
ror
xchg
inc
add
mov
jle
lods
mov
push
adc
cld
movsl
pop
dec
nop
mov
fmuls
mov
mov
inc
jae
mov
cmp
cmp
orl
popa
loopne
cmpsb
lahf
insl
test
rol
push
std
pop
insb
mov
pop
adc
adc
adc
outsb
sbb
xor
mov
push
inc
sub
loop
pop
in
inc
jp
mov
cmp
cmp
movsl
adc
in
pop
add
mov
pcmpeqd
push
xor
into
cmpsl
lock
push
test
imul
or
adc
cwtl
enter
xchg
pop
xor
inc
int
xchg
dec
lods
mov
fidivrs
adc
data16
inc
mov
and
lahf
out
mov
xor
mov
add
inc
nop/reserved
mov
lret
sub
test
test
mov
fistpl
push
xchg
lcall
out
movl
mov
or
push
cli
jle
daa
lret
bound
jae
add
inc
js
addb
ljmp
scas
push
cmp
add
jne
sub
pop
bndldx
imul
imull
movsl
lcall
sub
out
adc
mov
xchg
push
sti
nop
repz
nop
pop
jae
mov
mov
imul
dec
jo
push
aad
and
jecxz
out
add
xchg
add
or
ljmp
dec
push
adc
cld
push
add
stos
imul
gs
dec
lods
and
push
sbb
adc
testl
xor
add
fldcw
and
xor
stc
adc
push
xor
add
and
pop
repnz
jecxz
mov
fs
xchg
das
out
and
scas
jnp
das
pop
js
out
xchg
mov
mov
inc
out
scas
jl
popa
sbb
mov
les
lds
cmova
sub
insb
pusha
cmp
sbb
popa
leave
jbe
sti
icebp
fst
in
push
rcrb
mov
stos
inc
sbb
idivb
mov
push
xor
push
pop
roll
ret
fdivrs
and
testl
jbe
ret
adc
jns
sub
pusha
jns
out
adc
xchg
sahf
js
rcrl
sbb
ret
cmp
mov
sub
sbb
test
or
cmp
and
ds
mov
pop
cmp
lods
dec
dec
xor
xor
add
movsl
sbb
ds
add
inc
add
xchg
sbb
or
jl
insb
xchg
pop
test
lods
push
pushf
inc
mov
and
adc
add
hlt
cmp
sub
sbb
or
jl
insb
xchg
pop
test
lods
push
pushf
inc
mov
and
adc
add
hlt
cmp
lods
mov
les
jl
in
xchg
pop
inc
dec
je
lods
movsb
pushf
inc
mov
xor
adc
in
int3
loopne
mov
or
jl
insb
xchg
pop
add
je
fwait
push
pushf
inc
sti
inc
je
adc
and
xor
xor
add
cmp
xchg
decl
mov
pop
icebp
or
js
push
and
jno
popa
clc
push
call
mov
pop
popf
dec
loope
shrl
xorl
mov
shll
loopne
incl
mov
adcb
ja
add
mov
inc
mov
jns
add
push
xor
lret
ficoml
lret
lock
pop
stc
sub
mov
jo
addr16
cwtl
bound
test
jno
in
pop
and
vdivsd
test
sub
mov
jnp
pop
xchg
jns
loope
mov
imull
enter
in
loope
push
scas
jns
je
add
std
rcr
pusha
adc
call
pop
cmp
sbb
cmp
add
loope
fmull
cmp
popa
adc
in
sub
mov
nop
aas
js
mov
jo
test
out
div
imul
mov
shrl
pop
xor
add
jno
popa
clc
push
icebp
inc
add
xor
js
jno
jmp
in
pusha
fstl
int3
add
test
dec
hlt
inc
cmc
xor
sub
sbb
push
mov
stos
add
lods
and
jge
pop
in
lahf
cmp
or
mov
mov
push
call
mov
pop
icebp
dec
loope
shrl
cwtl
xor
add
jno
popa
clc
push
call
mov
pop
icebp
dec
loope
shrl
cwtl
xor
loope
rol
add
mov
ss
jnp
rcrl
in
das
clc
arpl
lds
sub
sarb
or
mov
sahf
scas
lock
loopne
bnd
ja
sub
mov
sub
jg
decl
movsb
jle
xor
js
push
popa
dec
leave
loope
stos
xor
and
or
and
enter
enter
cmpsl
xchg
push
fcompl
push
out
or
call
inc
or
enter
ror
xchg
xchg
or
push
pop
sbb
outsl
or
ljmp
or
lret
aad
pop
fsubs
jo
test
stos
lcall
sub
ja
das
xor
and
push
mov
mov
cmp
push
push
daa
fimuls
idiv
clc
mov
inc
outsl
mov
ljmp
mov
dec
push
inc
and
pop
mov
fs
lods
mov
std
jnp
sbb
iret
icebp
mov
shrb
scas
mov
out
lea
inc
add
sti
pop
fdivl
jbe
jle
lods
fisubrl
mov
jnp
cmp
in
inc
xchg
sti
push
rcll
fisubs
cmp
fisubs
test
xchg
mov
aas
xor
into
inc
call
insb
sub
inc
pop
jg
mov
mov
cmpsl
sbb
fistl
cs
scas
adc
xor
fwait
mov
inc
shl
jnp
sahf
subb
ret
in
xchg
mov
adc
push
push
sti
test
cs
add
adc
or
les
adc
sbb
loopne
sub
jp
sub
and
cmp
lahf
adc
cs
popf
cmp
sarb
loope
stc
jb
out
div
pop
mov
sbb
rorl
in
fidivrl
pop
xor
jae
inc
jae
es
icebp
repnz
fcmovbe
ret
movsl
lods
call
mov
int3
icebp
push
inc
or
mov
ror
and
dec
mov
sti
cmp
nop
pushf
dec
dec
rorb
xchg
dec
cmpb
dec
rcll
push
jo
out
dec
and
jmp
fwait
adc
jbe
push
add
out
loop
pop
cli
add
add
lock
hlt
mov
pop
inc
cmp
loop
ljmp
inc
scas
and
inc
mov
nop
icebp
inc
add
mov
sub
movsb
mov
adc
and
xor
int3
mov
cmp
xchg
fldcw
es
mov
sbb
aam
clc
push
dec
adc
sarl
fldl
ret
jne
mov
xor
push
cmpb
cld
pop
dec
push
lret
dec
mov
movsb
int3
mov
and
scas
dec
or
lret
dec
sub
mov
fsubl
xchg
xchg
ss
dec
jnp
pop
movsl
jnp
dec
xlat
dec
jg
daa
call
icebp
psrlw
add
push
or
test
adc
push
jo
rorl
adc
jl
jmp
mov
cltd
imul
fdiv
fucom
icebp
push
cmpl
jle
aam
xchg
test
shll
mov
sti
push
lea
mov
test
adc
jp
xor
das
sub
or
imul
inc
xchg
mov
mov
in
xchg
jecxz
jecxz
je
in
or
push
pop
lcall
jge
xor
mov
xchg
xchg
ljmp
sbb
sub
pusha
fdiv
xchg
push
mov
push
repz
cmc
cs
mov
psadbw
jg
fs
mov
mov
pop
loope
int3
mov
fwait
popf
dec
stc
sahf
jle
movsb
sti
xor
mov
shrl
cmp
lahf
mov
adc
sbb
inc
add
fs
ja
filds
adc
and
push
rclb
jge
repz
insl
pop
cwtl
mov
sbb
aam
jp
sub
or
sti
out
sbb
pop
jbe
or
ljmp
test
dec
xor
cmp
cmpsl
jne
call
fistpl
out
xorb
loopne
ss
pop
pop
jmp
dec
sti
xchg
shlb
jge
push
push
push
imull
loope
shrb
cmp
mov
cli
pxor
jge
mov
pop
push
sbb
out
push
adc
and
jecxz
cmp
pop
js
adc
das
xchg
mov
ss
popa
xorb
rol
mov
pusha
dec
cwtl
xchg
fstp
lea
mov
bound
mov
pop
sahf
mov
in
jbe
repnz
insb
repz
push
sbb
aaa
mov
fsubl
cmp
fistpl
xor
mov
roll
data16
or
int3
movl
sti
adc
jmp
adc
loopne
mov
inc
scas
inc
adc
sub
out
jl
into
stos
fsubl
jle
push
mov
dec
cmp
mov
push
push
loopne
imul
mov
icebp
jae
shl
mov
inc
xor
outsl
addr16
xor
pop
inc
test
les
mov
imul
add
pusha
movsl
ffreep
sahf
lcall
adc
sbb
stc
adc
movsb
jo
fwait
xor
pop
stc
inc
mov
popa
fmuls
and
and
call
enter
jns
inc
outsb
mov
dec
or
sahf
xchg
push
outsb
mov
add
xor
mov
sbb
cmp
mov
or
imul
add
sbb
test
cs
dec
inc
je
xchg
push
movsl
pop
insl
push
pushf
lods
xchg
enter
sti
sarb
insl
dec
push
cmpsl
dec
nop
cmpsl
es
int3
pop
shll
and
and
mov
outsl
push
push
xchg
or
pop
iret
pop
scas
cmpsl
or
push
dec
jae
lahf
shrb
push
ret
imul
cs
popa
xchg
sbb
jae
pop
or
jle
icebp
push
cmpsb
dec
pushf
inc
ja
adc
add
mov
mov
and
push
inc
daa
push
jecxz
xchg
pop
insl
and
adc
clc
inc
stos
shl
push
fdivp
mov
mov
out
or
pinsrw
lcall
loope
pop
push
cltd
adc
or
sub
push
mov
ljmp
and
nop
jae
out
xor
jge
mov
repz
out
xor
in
sub
push
add
add
adc
in
xor
mov
scas
jb
xor
and
xor
mov
in
aad
and
xchg
xchg
icebp
imul
and
cmp
mov
cmp
fmull
dec
pushf
mov
hlt
imul
jo
pop
inc
dec
add
pop
fadd
jb
push
adc
outsb
pusha
js
ss
test
scas
pop
loope
mov
movsb
sbb
or
jge
xor
jbe
mov
orl
or
testb
lods
pop
xchg
mov
imul
gs
push
cmpsb
imul
mov
clc
mov
inc
push
cmp
lock
idivl
int
pop
lods
hlt
aaa
popa
rcr
pop
sbb
pop
inc
pop
popa
mov
inc
xchg
mov
aas
ds
cmc
dec
xor
jae
cmp
jmp
icebp
mov
xor
cmp
andl
pop
int3
scas
cli
add
inc
mov
rorl
subl
jmp
rorl
sbb
pop
daa
ljmp
daa
icebp
pop
add
and
ret
mov
hlt
in
pop
andl
add
dec
or
sbb
and
cmpsl
jae
or
fadds
push
dec
dec
aad
loopne
fadds
test
das
add
xchg
daa
and
mov
sbb
inc
or
xor
lods
ficoms
xor
adc
mov
xchg
cmp
lahf
adc
dec
and
add
push
xchg
imul
cmpsb
xor
jecxz
and
inc
test
cmp
xchg
loop
xor
pop
ficompl
cwtl
xchg
xor
adc
test
dec
es
fistl
inc
or
sbb
cmp
dec
pop
pusha
fisubl
cmpsb
into
out
jmp
lea
out
jno
jg
ja
popf
ret
enter
subl
popa
dec
iret
test
movsl
pop
pop
sub
xchg
mov
inc
outsb
lret
push
scas
adc
xorl
xchg
push
andl
cmp
pusha
inc
and
inc
insb
in
xchg
cmpsb
mov
push
ror
ja
mov
add
push
mov
sub
sub
mov
outsb
out
cwtl
popf
std
lret
dec
cmp
frstor
dec
js
pop
adc
addr16
out
jmp
xchg
add
and
imul
pop
or
rorl
xor
and
icebp
lret
cwtl
adc
lret
and
jbe
or
inc
xor
and
adc
adc
jle
shlb
sbb
jl
xchg
iret
sbbl
and
jne
dec
shlb
mov
cmp
js
cmpsl
sub
jl
mov
lea
adc
xchg
fucomp
pop
mov
jne
add
movsl
js
jg
pop
or
adcb
xchg
sub
rolb
stos
sub
dec
gs
jnp
mov
scas
pop
aas
mov
lret
inc
inc
aad
in
adc
inc
xchg
insb
xor
cmp
scas
test
xchg
sub
cltd
xchg
cs
xor
mov
and
cmp
fincstp
stos
push
sub
inc
inc
orb
pop
push
push
insb
int
movsb
jae
pop
mov
mov
loop
jmp
dec
sbb
jp
ret
cmp
pop
call
stos
xchg
outsb
daa
xchg
clc
fidivl
or
jnp
cld
addr16
jnp
aaa
mov
cli
mov
mov
pop
ja
jne
pop
movsb
or
cmp
cmpsb
mov
stos
pop
int
lock
jae
mov
inc
push
pop
xor
fstpt
mov
jg
fisubrs
movsl
push
fisubl
dec
lods
jo
movsl
jne
mov
sub
or
cltd
mov
jb
mov
mov
movzbl
aad
leave
mov
xor
push
jl
inc
in
mov
int
push
lock
or
cld
mov
or
iret
mov
fsubl
lret
aas
mov
repnz
or
jae
int3
pop
gs
sub
jmp
repnz
jb
and
pop
cmp
dec
cmp
fidivrl
jne
sbb
fwait
ljmp
mov
ja
sub
sub
push
in
inc
pop
mov
jns
cmp
push
or
jno
sub
jne
and
add
mov
sub
aad
cmp
ljmp
push
iret
leave
jno
sbb
bound
into
test
mov
clc
dec
xor
sub
repnz
mov
das
lds
fdivr
cmpsb
push
sub
inc
inc
sub
push
imul
mov
outsb
inc
and
lret
cmp
cwtl
outsl
nop
inc
cli
pop
pusha
loop
dec
das
mov
subl
push
or
xchg
cmc
push
xchg
arpl
ret
mov
imul
mov
mov
popa
leave
test
cmp
mov
daa
jo
inc
pop
orb
sarl
stos
add
sub
jnp
dec
add
bound
adc
cmpl
mov
insb
rolb
lret
sub
adc
icebp
cmc
fisubrl
and
dec
cmp
jo
rorl
pop
into
push
cmpsb
negl
subb
inc
add
xchg
out
adc
fnstcw
xchg
int3
adc
xor
lcall
dec
cmovbe
lock
sbb
push
les
fstpl
dec
or
into
sbb
inc
jmp
xchg
jmp
insl
mov
cmp
push
hlt
aaa
sbb
popa
lcall
jae
or
in
push
mov
fisttps
out
icebp
pop
and
or
pop
and
push
xor
test
cmp
and
jg
es
inc
out
rcll
cmp
xchg
ficompl
sbb
jecxz
sbb
push
int
cli
stos
and
sub
push
or
push
ja
cwtl
mov
lret
jns
xchg
jl
out
inc
pop
lcall
clc
clc
je
mov
stos
fcoms
repz
xchg
or
jg
repz
loope
scas
and
add
jp
dec
xchg
dec
xor
jnp
push
xor
xchg
imul
or
fstpl
fs
xor
pusha
nop
dec
addl
scas
jecxz
arpl
push
in
mov
inc
push
ret
jbe
out
scas
xor
out
inc
xor
arpl
fdivl
nop
cmpsl
or
cmpb
neg
mov
jae
std
xor
notl
push
in
mov
in
adc
icebp
pop
pop
push
add
lock
jle
xchg
push
sub
dec
fwait
and
add
jno
ss
movsb
add
lret
in
hlt
push
mov
lea
sbb
aas
push
int3
fsub
push
inc
fcomi
jg
mov
repz
push
lret
mov
jne
add
pop
jbe
mov
negl
outsl
out
push
inc
and
mov
xchg
pusha
inc
push
add
stos
lods
xor
orl
push
cmp
scas
add
jnp
insb
sub
shll
push
divl
add
xchg
test
mov
push
arpl
mov
out
ja
pop
ljmp
and
ss
and
or
inc
daa
xor
cli
mov
lcall
aaa
and
fs
in
xchg
int3
add
popa
push
push
rcrb
les
sahf
mov
or
push
inc
add
shll
and
movl
xor
or
xchg
jecxz
sub
movsb
mov
xor
fistl
pop
lret
inc
ljmp
inc
and
sbb
scas
pop
pop
lods
ficoml
push
push
jnp
mov
mov
xor
stos
sub
pop
push
hlt
rcl
push
jecxz
pop
fisttpl
icebp
xchg
sub
inc
push
dec
lcall
pop
jo
pop
xchg
mov
mov
and
add
adc
sbbb
cmp
jp
adc
aaa
jnp
mov
mov
imul
sub
jle
loopne
push
or
xchg
xchg
popf
push
ljmp
test
ss
lds
cmp
xor
dec
loop
push
mov
int
push
sbb
fisttpll
adc
repnz
adc
fwait
mov
js
mov
ja
lret
jb
pop
jg
test
daa
xchg
push
add
mov
insb
clc
aam
fwait
pop
repz
jnp
add
sub
cmpsl
orl
pop
nop
add
adc
iret
ds
sbb
pop
lods
inc
leave
pop
scas
sub
sub
inc
in
mov
into
adc
inc
xlat
sub
rcrb
push
mov
cld
ret
jge
push
fwait
pop
inc
xchg
pop
push
mov
push
les
test
push
adc
out
add
stc
jo
in
push
xor
mov
addr16
sbb
fidivl
lahf
lret
fwait
sub
push
pop
inc
xorb
arpl
jbe
jmp
xchg
cmp
dec
fcoms
jg
inc
in
popa
inc
ljmp
sub
fcmove
mov
cmpsl
cmpsl
call
jae
clc
push
or
out
xor
sub
mov
cmp
mov
lods
fcoms
in
out
lods
stos
sbb
and
push
movsl
sbb
adc
mov
ss
mov
mov
int3
adc
fsts
loopne
push
fdivl
mov
and
loope
push
lods
fwait
adc
ret
cmpb
paddd
and
lds
dec
addr16
cli
pop
push
negb
push
jnp
xchg
inc
popf
adc
mov
adc
push
lea
pop
lret
ja
xlat
mov
test
pushf
lret
mov
repz
and
sbb
sbb
gs
push
jle
or
jne
das
xchg
mov
lea
leave
imul
lret
mov
in
repnz
dec
inc
push
into
pop
lock
notb
and
pushf
add
pop
js
lea
jecxz
inc
or
cmpsb
enter
fldenv
leave
pop
addr16
loopne
fcoml
jmp
stc
or
push
jae
mov
fidivl
pop
movsl
dec
push
daa
pop
pop
jg
mov
cmp
or
test
hlt
fwait
and
out
inc
out
sbb
lret
ret
sub
cmpl
xchg
imul
pusha
push
rolb
je
out
adc
pop
fcmovne
mov
xor
adc
out
mov
cs
rcl
stc
divl
fwait
call
addr16
sbb
addb
sbb
imul
pushf
test
aaa
inc
pop
push
lea
lds
mull
stc
mov
pop
inc
repnz
test
dec
fistps
loop
mov
mov
sarb
test
fisubrs
jge
inc
popf
ja
adc
ret
mov
int
pop
mov
or
psubsb
cmpsb
xor
pop
fbld
add
mov
jne
mov
mov
push
adc
cmp
jl
xchg
pop
arpl
scas
ljmp
xchg
mov
lea
adc
add
adc
jp
inc
pop
push
mov
sbb
cwtl
fwait
icebp
dec
insb
inc
rcr
in
sub
pop
leave
push
dec
test
test
stc
push
loopne
cmp
lods
mov
fnstenv
mov
notl
inc
sub
pop
data16
outsl
rclb
jns
sub
mov
add
popa
insl
xor
movsl
and
xchg
clc
insl
and
add
and
into
into
fs
jmp
std
dec
cltd
pop
test
shll
dec
dec
fisttps
add
icebp
sahf
inc
mov
push
test
dec
or
push
lret
jns
jp
pushf
cwtl
lds
bound
push
out
jecxz
cwtl
in
pop
repnz
pushf
pop
push
push
xor
add
mov
ds
pop
jmp
add
enter
or
dec
in
pushf
sub
or
xor
or
jne
pop
loopne
test
sahf
mov
insb
aad
lret
mov
andl
pop
xor
enter
cmc
out
mov
mov
movsb
mov
pop
repz
testl
ds
cmpsb
inc
negl
out
into
js
mov
mov
xchg
call
iret
aas
inc
pop
pop
jge
and
cmpsl
repz
test
mov
and
add
add
out
push
data16
xchg
adc
sub
xor
ret
jge
jno
inc
insb
cmp
movsb
jo
dec
mov
ret
mov
mov
imul
jg
call
pop
sub
daa
xchg
sub
sub
adc
adc
int
cmc
into
or
sbb
aas
insl
dec
ss
mov
xchg
lahf
orb
inc
mov
sub
testl
xchg
and
rcrl
sub
mov
mov
fwait
test
xor
inc
pop
jle
dec
add
out
xchg
stc
push
push
icebp
mov
and
enter
jne
outsl
clc
mov
cmp
jno
arpl
daa
into
ss
ljmp
cli
adc
sbb
enter
xchg
mov
mov
pop
mov
xchg
test
test
mov
jne
dec
inc
imul
adc
cmc
push
int3
adcb
xchg
xchg
ja
pop
lods
push
cmpsl
sbb
or
cmpb
mov
xchg
mov
push
mov
or
std
jmp
adc
jbe
inc
push
mov
jge
xor
les
sbb
vpsllw
into
mov
ret
out
sbb
mov
sub
mov
iret
inc
nop
push
ljmp
call
test
outsl
sbbl
fstpl
xchg
mov
test
jl
add
stc
jmp
xor
jmp
aad
dec
adc
ljmp
cmp
popa
ret
mov
and
cmp
stos
sub
pop
pop
dec
sahf
push
ror
lea
les
inc
ja
dec
cmpsb
mov
test
push
xchg
jns
out
arpl
push
popf
sbb
movzbl
sbb
not
xchg
aad
iret
jnp
gs
out
sub
mov
idiv
cmc
jbe
inc
cwtl
sti
mov
sub
lods
imul
sbb
daa
testl
dec
push
imul
mov
mov
adc
fwait
bound
sbb
or
bound
popa
into
cmpsl
in
in
xchg
jl
in
mov
xlat
sahf
mov
sbb
pop
push
mov
jns
insl
in
mov
insl
imul
das
and
adc
popa
clc
push
call
mov
pop
icebp
dec
loope
shrl
cwtl
xor
add
jno
popa
clc
push
call
mov
pop
icebp
dec
loope
shrl
cwtl
xor
add
jno
popa
clc
push
call
mov
pop
icebp
dec
loope
rcrl
lods
xor
fdivs
popa
js
push
or
jns
push
xchg
xchg
ds
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xor
fwait
in
pop
pop
xor
or
insl
xor
or
add
add
add
add
add
add
add
js
sbb
add
add
add
add
xor
add
add
add
add
add
add
mov
push
add
add
iret
add
add
verr
add
add
add
mov
or
cmp
push
add
add
mov
ja
add
add
or
sbb
add
add
adc
mov
test
test
adc
flds
adc
mov
les
imul
mov
add
add
add
xor
jmp
jmp
add
in
popf
add
add
sbb
add
and
fiaddl
fiadds
sub
mov
add
add
mov
add
add
ljmp
add
add
add
add
les
cmp
mov
test
pop
add
add
roll
add
add
or
test
lcall
add
add
add
or
add
add
add
add
pusha
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
mov
fiaddl
sub
incl
aam
outsl
add
pushf
add
add
add
add
and
jmp
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
xor
movsb
add
add
add
add
add
add
add
add
pop
dec
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
mov
ret
add
add
add
add
add
add
hlt
add
add
add
add
add
add
pop
add
add
add
add
add
mov
mov
inc
add
dec
add
add
xchg
add
sbb
push
add
add
add
add
add
add
jae
jl
add
add
add
add
mov
add
add
add
mov
dec
add
push
add
add
add
xchg
add
add
sbb
lea
dec
add
add
add
add
sub
push
add
add
add
add
ja
sub
push
add
add
add
out
add
nop
add
add
add
stos
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
test
dec
add
add
add
add
jmp
add
scas
add
addl
add
add
fwait
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
cmp
sbb
scas
pop
add
xor
and
fistpll
rorl
mov
xor
sub
outsb
sahf
inc
or
out
lock
mov
add
push
or
mov
fimull
daa
inc
mov
fnstsw
mov
enter
sub
and
fisttps
out
cmp
sbb
adc
adcl
mov
in
leave
dec
and
inc
fsts
fxrstor
pop
out
iret
loop
xor
jb
cmp
fdivp
xor
out
icebp
push
sub
push
js
xchg
xor
jns
sbb
xor
push
int3
adc
or
imul
lret
rolb
lds
pop
mov
adc
mov
movsb
out
mov
repnz
jb
in
jmp
mov
push
lods
aaa
or
adc
out
clc
stos
adc
add
daa
popf
popa
or
cmp
test
cmp
lahf
dec
dec
outsl
enter
push
push
ficoms
sti
cmp
pop
jmp
sub
add
adc
out
inc
popf
mov
fcomps
scas
mov
fs
sbb
and
xlat
cltd
movsb
test
call
pop
divl
leave
xchg
dec
std
add
rorb
jge
push
repnz
mov
xchg
push
iret
ret
xor
inc
add
push
mov
push
cli
inc
hlt
mov
cs
mov
push
hlt
jle
mov
ret
push
ss
and
outsb
mov
push
adc
repnz
dec
ret
xor
addl
in
xchg
pop
jl
pushf
std
mov
jo
test
mov
loope
inc
mul
pop
ja
mov
dec
lret
scas
les
mov
xchg
and
push
mov
aad
mov
pushf
sub
into
ss
aam
aas
xorb
test
ficoms
dec
imul
mov
xchg
sbb
sbb
jg
popf
insl
out
jne
sub
jbe
icebp
arpl
xchg
rorb
int
xor
inc
cmpsl
es
and
lds
jmp
xchg
dec
std
or
jl
cltd
jle
mov
arpl
daa
insl
pop
adc
test
sbb
out
sub
push
jp
add
ror
pushf
cmp
outsb
sub
out
lea
and
pop
je
and
or
cwtl
push
inc
jle
popa
xor
dec
ss
out
ror
cmpsl
mov
mov
imul
xchg
xchg
mov
mov
mov
pop
or
fimull
push
lret
cmp
loop
mov
mov
push
and
adc
scas
xchg
mov
mov
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
