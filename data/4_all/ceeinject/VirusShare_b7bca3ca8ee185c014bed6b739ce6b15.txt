in
mov
in
mov
movl
mov
inc
add
and
ret
int3
add
idiv
mov
or
add
test
incl
push
add
lcall
push
call
add
movl
xchg
out
inc
adc
sub
push
sbb
and
and
test
in
clc
clc
punpckhwd
stc
push
inc
cld
inc
xor
js
pop
mov
rcrb
int
std
pusha
mov
xchg
pop
jns
xchg
push
call
movsbl
push
mov
sarb
cmp
mov
push
outsb
sbb
push
push
push
les
idivb
test
add
and
mov
push
sarl
ja
inc
not
sbb
out
rcrl
int3
mov
dec
jo
movzwl
mov
fstp
idivl
pop
imul
pop
enter
push
push
cmpsb
push
je
and
rol
lahf
cmpsb
adc
sub
inc
xor
add
push
aam
push
lds
jb
inc
outsb
inc
cmp
add
and
lahf
add
in
cmp
xchg
xchg
js
dec
imul
cmp
subb
je
lock
cmp
lahf
les
cmp
push
inc
add
movsb
cmp
mov
jmp
push
mov
jbe
pop
push
xor
repnz
cli
mov
std
add
xor
xor
and
push
push
cmovbe
test
fdivrl
addb
push
fimull
push
xchg
and
sbb
sti
xchg
loopne
or
add
stos
enter
sbb
xor
or
in
mov
mov
popf
xlat
movsb
adc
ja
js
mov
inc
loop
js
shlb
push
xchg
push
pop
dec
clc
mov
stos
inc
std
jno
lods
call
mov
sbb
adc
pop
pop
stos
push
or
mov
and
pop
push
fisttps
mov
push
in
ljmp
push
mov
in
mov
lcall
in
xchg
or
repz
movsb
movsb
add
subps
push
cmp
imul
enter
inc
dec
mov
push
mov
xor
imul
cmp
pop
adc
xchg
pop
daa
jg
mov
lea
jmp
mov
add
mov
sbb
cmp
outsb
mov
inc
fs
or
into
mov
mov
scas
popf
cltd
dec
scas
adc
mov
add
sbbb
rcrl
xor
sbb
add
mov
pop
sub
addr16
or
lock
inc
jmp
cmp
xchg
inc
clc
movb
xor
xchg
in
in
xor
incb
jmp
dec
inc
mov
add
cmp
lock
adc
add
int3
je
cmpsl
or
push
nop
cmpsl
or
shlb
and
ret
sarb
nop
clc
or
hlt
push
cltd
fistps
cmp
nop
inc
mov
addr16
jo
scas
and
sub
dec
clc
push
push
push
mov
rorl
push
mov
inc
add
sbb
and
jb
mov
clc
jge
sbb
pop
xchg
fidivs
or
xchg
cmpsl
ffreep
loopne
lahf
lea
xchg
scas
pushf
sbb
mov
fcmovnu
out
stos
and
test
sarl
xchg
test
pop
cmp
sbb
sbb
adc
inc
pop
pop
mov
add
jg
xchg
arpl
xchg
push
lock
inc
or
lea
jg
lea
imul
test
adc
and
aas
test
add
xor
pushf
lock
fs
adc
push
push
push
lcall
lds
lcall
jge
push
mov
leave
mov
in
and
adc
add
mov
subb
mov
mov
iret
int
je
mov
cmpsb
inc
mov
out
xchg
fwait
jl
mov
xchg
sbb
push
push
jecxz
lock
hlt
clc
sbb
orl
mov
cmp
arpl
push
jnp
lds
loopne
cltd
mov
pop
jmp
ja
mov
in
lods
or
pop
sbb
outsb
loope
fadds
mov
in
xor
mov
mov
pusha
mov
and
jmp
add
pop
jb
pop
xchg
inc
clc
cltd
jl
or
push
xchg
jl
hlt
mov
add
outsl
xchg
mov
xchg
fldl
daa
je
dec
std
push
cmpsb
push
xchg
cld
aas
pop
xchg
jge
inc
or
imul
push
loopne
xor
dec
sub
test
mov
inc
outsb
or
xchg
cmpl
cs
jbe
insl
jae
xchg
out
dec
fdivl
bound
test
je
movsb
rorl
sub
or
xchg
mov
dec
adc
or
xlat
stc
shlb
cwtl
ret
cmp
mov
jecxz
add
movsb
cmpl
in
pop
cs
xchg
xchg
add
and
icebp
gs
scas
icebp
ss
int
or
xchg
movsl
in
iret
inc
cltd
add
test
push
mov
mov
sahf
mov
add
xor
or
pop
add
pop
sub
fadd
pop
jle
adc
scas
inc
xlat
mov
push
jl
lret
sbb
imulb
sub
stc
push
int
adc
clc
scas
jmp
sbb
push
subb
out
loop
pop
inc
ds
dec
cmpsl
fcoms
add
mov
dec
adc
add
pop
xchg
push
adc
inc
or
or
push
push
movsb
adc
in
push
lahf
add
jge
fsubrl
inc
xchg
jno
test
jne
xor
cld
mov
repz
push
fdivs
push
cmp
vmovaps
add
push
pusha
shlb
loop
fldcw
test
push
loope
movsl
jno
int
adc
sbb
sbb
scas
push
inc
inc
push
mov
inc
or
nop
pop
filds
dec
add
inc
jl
dec
adc
mov
and
add
cmp
mov
xor
lock
and
pop
or
lods
sbb
jo
xor
jae
pop
std
pminsw
test
je
push
enter
xchg
lea
cmpsb
lods
sbb
scas
pop
pop
xor
mov
sub
fs
add
call
mov
movsb
fldl
push
and
lock
dec
push
clc
pusha
repz
mov
push
push
inc
push
cmpsl
push
mov
mov
mov
rolb
das
xchg
dec
xor
xchg
cmp
cmpsb
fstl
jnp
adc
sbb
testl
sbb
cmpb
sub
int3
in
push
pop
inc
ss
sub
jb
lods
ss
pushf
pop
push
fsub
fneni(8087
mov
loopne
aam
or
xor
cltd
pop
cwtl
pop
test
push
aaa
nop
mov
push
push
xchg
or
mov
mov
mov
adc
sub
push
cmc
sbb
xchg
je
mov
pusha
jge
in
test
imul
sbbl
ret
or
test
in
push
dec
pop
js
cmp
sub
mov
xlat
mov
das
mov
or
xchg
sbb
push
mov
rcrl
mov
int3
in
lods
es
enter
mov
mov
sub
shr
mov
adc
xor
xchg
dec
push
dec
adc
mov
push
enter
xchg
inc
push
movsb
push
test
in
mov
cmp
push
sub
test
and
test
lock
shlb
jp
popf
mov
mov
xchg
mov
enter
mov
xchg
adc
popf
inc
ficoml
adc
pushf
push
adcb
xchg
test
aad
test
push
jbe
push
test
add
stc
orb
push
push
mov
inc
and
mov
js
push
ljmp
add
sbb
jge
push
in
xchg
mov
test
add
cmc
js
jbe
sbb
div
fstpt
out
push
push
aad
add
push
arpl
xchg
ja
inc
sub
push
lods
roll
pop
and
or
aas
mov
or
or
mov
sub
xor
insl
pop
sbb
xchg
fldt
mov
mov
rolb
adc
lcall
jmp
sub
push
ja
inc
icebp
orb
adc
test
insb
scas
je
mov
lods
adc
lea
jp
xor
adc
adc
push
or
iret
inc
mov
cmp
popa
pushf
mov
test
mov
imul
pusha
xchg
dec
push
icebp
adc
inc
sub
je
push
lcall
test
or
xchg
push
dec
add
inc
jno
add
pop
sub
push
ds
repz
in
lock
sbb
neg
sbb
xchg
mov
fldenv
shr
lea
pop
push
fcomps
dec
cld
jne
imull
jmp
mov
jne
jne
gs
xor
rcrb
hlt
xchg
test
popf
mov
xchg
xlat
jmp
sbb
rorl
add
jbe
dec
cmpsl
jo
jo,pn
test
sub
push
and
lds
push
mov
pop
xchg
shll
jmp
mov
repz
xchg
sub
push
ss
inc
add
sbb
sarb
mov
shr
pop
or
push
loop
inc
pop
pop
pop
dec
add
sub
push
mov
icebp
inc
imul
push
xor
adc
repnz
inc
sub
sbb
sub
adc
and
popa
pop
test
ret
xor
adc
and
sbb
lea
xor
adc
ftst
call
xlat
jmp
adc
or
and
pusha
xchg
sti
sbb
test
adc
jns
pusha
rclb
dec
and
push
or
outsb
and
dec
mov
icebp
movsb
fwait
jns
scas
gs
cmpsl
aas
adc
in
mov
add
es
out
jle
xor
mov
xchg
in
rol
in
adc
add
jae
pop
inc
cmp
pop
mov
loopne
iret
orl
lds
or
cmc
pop
xchg
data16
adc
push
jb
and
and
mov
mov
add
xchg
mov
popl
dec
pop
mov
push
mov
mov
scas
shrl
call
adc
pusha
mov
mov
mov
add
insb
in
lds
cs
fcomi
jo
xchg
xchg
sub
add
xlat
fld1
or
jg
pop
lock
cmpsl
and
daa
or
mov
icebp
dec
inc
add
pop
push
xchg
xchg
pushf
mov
mov
gs
and
push
jo
fwait
lods
sub
pop
pop
in
inc
mov
testl
push
test
jne
jg
sub
jo
cltd
idivb
jmp
pop
xor
mov
lahf
mov
or
push
or
outsl
ds
inc
enter
js
add
add
popf
or
lods
add
cld
movzwl
cmp
dec
adc
jg
cmp
add
rolb
cmp
dec
dec
sti
fisttpl
lock
lea
movsb
clc
mov
dec
push
mov
push
push
shrl
adc
inc
repnz
inc
inc
in
pop
or
in
scas
fucomi
outsl
or
dec
push
cmp
jge
sub
sub
shlb
adc
push
and
cmc
outsb
sbb
or
in
jl
mov
jmp
shl
js
or
out
sbbb
mov
add
add
add
cmpsb
ror
orb
mov
lret
xor
call
in
cld
cltd
jno
scas
xor
push
or
dec
or
cmpl
pop
push
shl
scas
sbb
dec
loopne
roll
mov
cmp
ss
and
jb
in
jo
clc
cwtl
jmp
jae
inc
imul
or
push
les
les
fsubrl
idivb
pushf
mov
xchg
idivl
cmp
xchg
or
xor
mov
sub
or
push
xor
hlt
xchg
bound
mov
xorl
mov
test
push
es
gs
xchg
dec
fsubs
fcomps
cmp
and
mov
aam
xchg
inc
sub
rcl
dec
jo
sbb
or
jmp
popa
mov
push
aam
and
call
add
jle
mov
adc
add
int3
xor
shr
cmpw
cli
mov
add
xchg
cmp
jmp
cmpsl
push
mov
push
aas
imul
cmp
or
mov
or
insl
push
hlt
and
adc
into
in
std
push
and
adc
push
push
mov
push
sti
imul
loop
adc
add
shll
mov
add
jmp
cmpsl
loope
out
jbe
inc
add
aam
or
jmp
mul
xor
or
add
sub
adc
rorl
add
fsubs
inc
rep
mov
mov
mov
aad
movl
xor
push
lock
enter
push
jmp
cmp
cli
push
lods
ljmp
cmp
fimuls
call
jbe
scas
pop
addb
sub
cld
enter
cld
cltd
sub
gs
sub
hlt
in
add
out
xor
jno
in
mov
dec
sbb
and
push
cmp
sub
aam
jge
es
sub
inc
sbb
push
in
jne
movsl
filds
adc
cmpsb
or
pushl
dec
jecxz
cmp
jne
subb
test
sub
sub
dec
add
mov
mov
andl
push
call
int3
rcr
sbb
sbb
cmp
movsl
stos
xor
in
clc
outsb
loope
out
sbb
mov
pop
sub
sarb
outsb
lea
sub
mov
sub
pop
pushf
jmp
mov
imul
movsb
daa
inc
les
push
mov
or
add
sbb
fwait
lock
adc
hlt
or
nop
inc
cld
int3
shlb
add
xchg
mov
xchg
dec
pop
adc
lahf
mov
das
xor
mov
es
xchg
xchg
cwtl
mov
call
xchg
lret
cltd
mov
push
lcall
add
fsts
jne
fdivs
leave
cwtl
jo
cmpsl
je
or
in
add
inc
sbb
sbb
lock
adc
xchg
xchg
push
and
mov
aas
adc
js
sub
sbb
loop
je
push
dec
pop
mov
or
lret
rorb
or
or
inc
jnp,pn
xchg
in
loope
popa
xor
add
inc
xchg
dec
add
and
push
scas
ror
sub
inc
bound
jmp
ljmp
xchg
mov
or
push
inc
sub
incl
inc
mov
lea
push
loopne
fldpi
and
mov
dec
push
jne
mov
xor
mov
lea
flds
mov
stos
add
push
clc
adc
test
setnp
dec
cmp
mov
sahf
fidivrs
xchg
shlb
shlb
jbe
mov
in
mov
pusha
push
pop
cmp
push
mov
imul
ds
or
add
gs
mov
clc
inc
cmp
enter
lock
cmp
mov
adc
in
cmp
in
xor
add
xchg
mov
test
int3
ret
movsb
push
mov
shl
cmp
xorb
mov
fbld
mov
sub
pop
and
aaa
aas
cs
pop
mov
lea
and
dec
mov
and
stc
xchg
cld
or
mov
shlb
push
or
jmp
cmp
cmp
loop
roll
test
add
out
xchg
call
mov
and
repnz
or
push
jbe
mov
es
sbb
pusha
pop
and
popa
or
aam
or
addr16
leave
arpl
xor
pop
mov
add
stc
mov
add
test
pop
ret
lahf
push
inc
push
ret
negl
pop
test
lods
mov
inc
jecxz
push
movsb
ja
notb
pop
mov
add
jge
add
push
inc
sar
xor
push
mov
lea
jae
insb
push
test
mov
imul
add
pop
jbe
outsl
popf
scas
aas
sbb
inc
or
add
push
dec
cmpl
jb
sti
bound
inc
mov
das
pop
loop
nop
cmp
mov
mov
sub
cld
sbb
jl
and
popf
fcom
cmp
dec
sbb
cld
das
loope
movl
loopne
out
les
out
imul
or
adc
shrb
shr
pushf
in
data16
dec
or
push
out
mov
or
pop
push
jge
divl
aas
cmp
enter
cmp
dec
cmpl
dec
mov
add
scas
mov
sub
in
pop
pushf
mov
cmp
fs
mov
dec
sub
cmp
jbe
inc
repnz
fs
mov
dec
cmp
jae
push
mov
jecxz
mov
pop
aas
cmp
int
pop
rcll
pushf
rolb
inc
xor
lahf
mov
mov
sub
dec
shlb
lret
lock
test
les
negb
ret
mov
insb
out
faddp
mov
and
push
insb
sub
add
lcall
xchg
test
or
and
in
test
movsb
push
es
jne
notl
cmp
test
fwait
cmp
mov
daa
sbb
mov
mov
add
fldcw
orl
mov
mov
push
insl
adc
insb
or
cmp
inc
mov
ja
sub
pop
mov
arpl
mov
test
lods
in
or
mov
mov
mov
popa
adc
jge
ret
lock
or
or
dec
mov
sbb
mov
shll
mov
divb
xor
jae
mov
test
out
mov
mov
mov
cs
mov
or
in
jp
in
push
gs
sbb
rorl
or
ret
jecxz
ja
pop
xchg
es
in
add
in
in
scas
shll
in
mov
mov
or
dec
icebp
mov
insl
dec
sti
outsb
push
and
add
lock
std
icebp
imul
dec
mov
in
es
sti
fcomp
sbb
xor
in
pop
add
loope
xor
add
cmpsb
mov
add
sbb
sub
pop
ret
mov
shrb
and
rorl
mov
push
jo
lea
loopne
loopne
dec
shll
loopne
sub
cmp
jmp
or
je
cwtl
xchg
testl
cmp
shlb
push
sub
xchg
mov
aam
push
lock
pop
movsb
loopne
jmp
bound
jne
inc
add
push
call
add
movsl
jb
in
loopne
loopne
lock
out
or
rcrb
shl
int
fisttpl
icebp
add
enter
and
adc
push
js
xorb
lret
xor
sub
movl
jmp
xchg
xchg
enter
inc
stos
lret
outsb
les
pusha
jo
enter
jmp
imul
fisttpl
xchg
cmpsl
adc
rcl
gs
inc
sahf
iret
enter
xor
lret
mov
add
lahf
mov
addb
test
and
loopne
mov
dec
sub
push
addb
in
jl
je
jno
cmc
or
call
outsb
mov
or
cmp
xchg
pushf
enter
in
mov
sti
pop
div
sub
dec
sbb
jmp
fsubs
fmuls
or
out
mov
cli
in
fdivl
inc
fwait
dec
sub
mulb
test
insl
call
enter
les
cmp
dec
push
add
scas
mov
sbb
out
testb
pop
dec
adc
test
add
movb
shrl
stc
add
int3
jb
ror
cmp
sub
test
pushf
xor
lret
movsb
das
mov
mov
sbb
adcl
outsb
test
lret
pushf
test
mov
adc
add
les
cmpsb
in
add
mov
push
mov
adc
lcall
mov
rorl
ret
push
xchg
push
or
data16
lods
adc
sbb
sub
fcmovne
and
mov
cld
popa
add
sbb
xorl
cld
cld
hlt
or
loopne
cmc
add
push
pusha
ja
or
jmp
in
popa
popa
out
call
inc
imul
add
adc
inc
cmp
inc
mov
adc
clc
add
ja
or
jno
ret
push
lea
int3
xchg
loop
insb
adcb
enter
icebp
inc
push
ret
mov
add
jo
fcomip
arpl
movl
leave
test
movsb
mov
lahf
or
movsl
push
mov
fimull
xorb
mov
inc
in
movl
mov
pop
jl
out
inc
inc
cmp
or
test
subb
mov
cld
stos
pop
push
push
lcall
movsl
add
adc
or
jnp
push
imul
add
jl
push
clc
fnstcw
cmp
insl
dec
mov
pusha
adc
test
ja
and
or
popa
and
inc
fninit
mov
lahf
or
test
sbb
or
pushf
pop
push
adc
cmpsb
jb
sub
adc
cmp
rorb
fldl
fs
adc
js
js
int
jmp
jmp
push
data16
xor
xor
mov
je
sbb
cmpsb
call
data16
sarb
cmpsb
add
pushf
pop
fcompl
test
jp
pop
and
loopne
add
inc
inc
jns
pop
jg
push
push
inc
add
adc
test
ljmp
loopne
lahf
decb
add
mov
jb
ror
add
iret
and
movsb
sub
std
aam
cmp
and
leave
jns
sbb
scas
loopne
movsb
or
pusha
adc
mov
add
jmp
adc
and
std
xchg
mov
call
add
test
fisttpl
lods
imul
push
out
mov
sub
xchg
push
xor
std
mov
mov
in
call
or
adc
add
cmp
cmpsl
xor
fnstsw
ret
push
add
lods
imul
scas
adc
or
push
add
dec
push
rolb
or
mov
loope
pop
iret
in
or
cmp
ret
dec
push
adc
lea
in
enter
sti
cmp
mov
xchg
movsb
jp
xchg
jo
pop
je
lods
lea
adc
sub
lea
inc
lcall
fsubs
or
xchg
lods
jno
mov
leave
sub
mov
or
pusha
dec
adc
dec
movsl
cmp
lea
pop
scas
lods
adc
inc
lea
lds
popf
push
push
sub
and
add
pusha
push
ja
mov
mov
inc
cmp
sbb
add
mov
bound
cmp
lds
mov
rorl
cmp
add
add
push
dec
mov
hlt
lods
stos
in
insl
mov
lahf
and
inc
dec
cmp
mov
pop
cmp
sbbl
pusha
jmp
daa
filds
mov
cmc
mov
xchg
test
add
pop
rcrb
rorl
xor
sub
push
pop
pop
xchg
les
or
jmp
rclb
cmp
in
pushf
incb
jo
addr16
adc
cmp
int3
lds
insb
xlat
push
inc
jae
aas
dec
ja
movsb
and
gs
push
add
es
fildl
fsubs
push
adc
inc
mov
mov
xor
lahf
mov
les
adc
roll
rorl
add
or
dec
or
jo
enter
test
addb
xor
fdivr
lahf
fldenv
test
adc
sbb
xchg
xchg
mov
push
scas
mov
leave
aas
xor
jno
imul
mov
shll
inc
mov
dec
ret
shlb
shlb
push
and
and
je
idivl
pop
les
cli
into
je
fdivl
test
fxch
mov
shlb
lcall
sub
add
fwait
xchg
fsubrl
sbb
shrb
jl
or
jnp
push
inc
jl
add
or
bound
call
movsl
push
cmp
adc
mov
mov
xchg
test
and
push
push
xor
adc
sbb
and
out
fcoms
adcb
push
shll
push
jne
rol
push
movsb
push
jbe
inc
sbb
pop
push
xor
std
pop
test
adc
push
cmp
hlt
jnp
arpl
out
adc
cltd
cmpsb
xor
mov
fbstp
mov
cmp
xor
push
xorb
dec
je
push
pop
adc
pushf
sbb
insb
add
imulb
or
dec
pop
mov
adc
mov
adc
mov
in
mov
pop
jne
inc
cmp
call
xchg
adc
fcomp
pop
adc
jno
dec
mov
ja
or
push
outsl
and
cmp
push
add
mov
in
sbb
outsl
enter
mov
movsb
shll
pop
pushf
inc
push
xchg
movsb
jns
push
rolb
fsubs
sbbb
xchg
call
movsb
sub
push
pusha
pop
or
test
adc
imul
add
inc
adc
shll
test
fdiv
adc
repnz
pusha
sbb
add
adc
ret
push
loop
fildl
push
lea
shlb
out
jne
add
sub
mov
mov
sub
test
aas
mov
push
in
add
xchg
push
xchg
mov
ds
sbb
call
mov
adc
je
push
adc
xchg
or
mov
scas
in
push
lea
add
inc
dec
jmp
lds
push
xor
sub
mov
cmp
imul
movl
jnp
pusha
inc
pop
jmp
mov
adc
jo
add
std
sbb
orl
imul
es
mov
push
pop
arpl
dec
clc
lahf
sbb
clc
mov
mov
and
js
or
pop
cmp
sub
xor
push
es
aam
aad
xor
jns
pusha
push
movsl
push
push
clc
rolb
rcrl
test
insb
test
icebp
gs
push
repnz
xchg
sbb
push
loope
test
add
loop
les
xor
stos
mov
testb
sbb
out
popf
bound
mov
mov
jb
jecxz
test
or
inc
cmpl
loopne
xor
jge
pop
adc
push
daa
push
loope
shll
and
aaa
fcoms
xchg
xchg
scas
mov
sbb
popa
add
ds
push
into
out
dec
sbb
enter
lea
je
adc
adc
sti
dec
xchg
add
and
in
pop
sbb
jnp
sbb
cs
arpl
mov
int3
shrb
jmp
out
and
sbb
in
dec
pusha
jmp
iret
xlat
mov
pop
movl
dec
call
inc
sahf
enter
enter
pop
and
xchg
pop
sarb
dec
sub
mov
mov
fimuls
lock
dec
or
sar
add
jmp
mov
push
cmc
push
shrl
add
imul
mov
inc
pop
adc
test
jo
inc
xor
mov
mov
fs
sbb
pusha
push
mov
insb
cmp
sbb
aam
xchg
sub
adc
inc
xor
out
push
lret
sbbb
loopne
adc
and
xchg
stos
mov
sub
xchg
add
dec
ja
lret
shrl
rcll
outsl
mov
imul
jmp
cmp
inc
stc
dec
push
push
into
pop
js
clc
push
push
pop
repnz
dec
dec
add
pop
into
andps
adc
rcl
std
sub
shr
cmp
xchg
pop
xchg
mov
jne
shlb
cmp
insb
cs
pop
pop
das
into
xchg
stc
mov
xor
test
sbb
jo
pop
inc
pop
xchg
adc
xchg
push
lock
lret
rcll
adc
sub
dec
ds
fsubr
adc
mov
adc
mov
push
test
and
std
inc
sub
jecxz
mov
add
sub
je
adc
sub
mov
push
xor
lods
dec
jecxz
rcrl
test
mov
dec
sub
lds
inc
aad
add
push
jmp
dec
or
stos
lds
bound
pop
int
pushf
jb
add
push
sub
dec
sub
insb
insb
jne
loop
aas
pop
dec
pop
pop
inc
ss
insb
mov
xchg
div
cmpsl
sbb
cmpsb
shll
mov
mov
pop
sub
or
dec
pop
push
push
rol
mov
mov
out
sub
nop
insb
pop
inc
and
fisttpll
inc
lods
push
lea
out
fbstp
fs
mov
mov
roll
cmpb
out
pusha
sbbb
pop
dec
in
ret
sub
or
fcomps
shl
and
mov
cmc
testl
xlat
cltd
sbb
push
leave
test
xor
jmp
movsl
test
xchg
push
inc
js
push
pop
add
ljmp
or
rcl
cmp
enter
mov
cmp
inc
and
dec
mov
and
lods
adc
rol
xor
add
adc
mov
popa
inc
pop
pushf
aas
pop
mov
push
std
leave
push
push
lret
test
sbb
or
cmpsb
or
pop
cmp
fcoml
outsb
ret
inc
xor
xchg
mov
xchg
push
mov
inc
mov
mov
dec
shrb
shrl
and
movsl
jb
dec
int3
mov
xchg
xor
lret
jns
adc
stc
push
adc
aam
add
push
test
dec
sbb
adc
out
sbb
add
loopne
arpl
mov
mov
bound
mov
ret
mov
nop
int
sbb
add
mov
sarl
ljmp
lods
sbb
pop
jg
movsb
pmaxsw
add
cmp
push
or
xchg
mov
minps
sub
fwait
adc
or
enter
adc
dec
stos
test
imul
xlat
push
repz
push
add
adc
push
push
add
cmp
push
sub
and
test
add
test
movsb
adcl
xor
add
and
cwtl
sub
pusha
mov
ficoml
dec
mov
pusha
dec
cmpsb
movsb
cmp
mov
loopne
inc
sub
call
les
xor
sub
mov
in
cmp
rcl
dec
push
cs
test
lret
int3
ror
add
fwait
sbb
dec
xchg
add
int3
iret
call
push
mov
cmp
add
adc
jnp
loope
nop
lret
test
insl
jns
jb
jnp
addr16
std
sub
cmp
cmp
push
rcll
mov
mov
lods
jno
mov
cmp
data16
and
xchg
sub
lods
icebp
mov
dec
loopne
dec
adc
pushl
test
xor
lods
pop
rolb
jb
add
mov
cwtl
or
dec
jne
push
sbb
std
notl
aam
adc
nop
inc
fmul
mov
lods
sub
scas
add
cwtl
sub
inc
inc
mov
dec
sub
dec
movsl
add
push
cli
jo
or
iret
mov
mov
les
roll
mov
fdivrl
dec
or
and
test
test
fnsave
or
sbb
test
pop
test
int3
imull
xchg
pop
out
dec
outsl
sub
inc
inc
cmp
push
movsb
add
div
and
aaa
ret
test
mov
or
test
add
pop
mov
jp
xchg
xchg
lea
jnp
in
test
popf
ror
ror
pop
addl
cmpsl
cmp
cltd
fs
pushl
push
push
and
mov
adc
dec
inc
jae
push
push
adc
pop
enter
lock
push
push
jne
stos
inc
mov
add
jne
cmp
adcb
add
and
push
out
pop
sbb
notl
js
pushf
subb
pusha
and
xor
addb
int3
mov
scas
je
les
dec
push
push
movsl
jb
dec
fnstcw
movsl
jb
xchg
cli
cli
int3
testl
ror
sbb
xchg
jle
pop
fidivrs
push
xor
add
fnstcw
sbb
cmpb
sbb
cld
or
adc
shrb
cmc
loop
loope
inc
outsb
out
mov
sub
push
jle
inc
sub
and
inc
push
out
shld
mov
insb
add
push
mov
orl
inc
or
imul
cmp
adc
or
ja
mov
adc
scas
rcrb
dec
xor
push
insb
pop
xorl
add
inc
xor
pop
mov
push
dec
sahf
sbbw
faddl
add
pop
mov
adc
daa
sbb
je
or
or
sbb
repz
pop
mov
add
sbb
xchg
loopne
push
inc
pusha
testl
sub
sbb
or
in
mov
mov
pop
adc
es
call
popa
lea
inc
rorb
sub
jle
mov
dec
add
pop
je
cmp
pop
pop
icebp
test
sub
nop
clc
dec
jb
xor
mov
xchg
sbb
cs
mov
push
sub
adc
aaa
xor
test
gs
pop
or
sbb
mov
dec
roll
mov
xchg
out
mov
mov
or
adc
les
mov
add
pop
dec
mov
add
fisubs
aas
daa
lea
lea
je
push
push
mov
and
fwait
or
and
fwait
jne
movsb
ret
pop
push
lea
add
xor
jns
leave
inc
inc
inc
push
push
dec
push
and
lods
mov
mov
xor
jg
add
lods
add
xchg
xor
add
mov
aam
insb
adc
loope
lods
ret
add
and
jle
rcrb
loopne
inc
icebp
or
xchg
ret
scas
cmp
jb
adc
fadd
and
rclb
push
fdivl
jecxz
mov
cld
or
adc
ret
xchg
loopne
stos
lods
pop
out
sbb
out
lods
out
push
into
mov
mov
inc
in
sbb
or
arpl
fs
stos
mov
ret
fildl
mov
cs
jb
dec
repz
sub
fdivr
aam
lea
aam
in
aad
add
mov
out
mov
loopne
test
mov
and
mov
adc
xor
mov
ss
imul
je
pop
ret
adc
inc
lret
dec
mov
shrl
push
icebp
lret
mov
test
out
fdivrl
mov
addl
mov
mov
or
movl
popf
cmp
dec
add
shr
inc
or
push
xchg
lea
push
ljmp
xchg
cmc
add
jl
jnp
jne
mov
mov
fdiv
call
stos
clc
adc
out
add
cmpsl
std
jge
xor
mov
outsl
mov
adc
pop
adc
sahf
int3
mov
sbb
lods
aaa
inc
addr16
insl
or
push
imul
xchg
xchg
outsl
cmp
movzbl
and
pushf
or
out
fcmovne
add
xchg
push
inc
mov
lahf
pushf
mov
scas
and
out
aaa
sbb
push
adc
cmp
mov
dec
adc
sub
cmpl
out
loopne
fbstp
add
je
jmp
or
xorb
or
dec
or
subb
jnp
ljmp
add
movsb
lcall
fwait
xchg
inc
mov
loop
cmp
or
mov
adc
add
into
sbbb
or
les
movsb
mov
ja
cmpsl
inc
cmpsb
clc
jne
cwtl
hlt
pop
lea
stos
add
mov
and
flds
pop
out
or
sub
fsts
adc
mov
mov
cmp
push
add
add
js
mov
inc
or
mov
ljmp
dec
mov
stos
jnp
mov
inc
pop
add
or
fistpl
push
shl
mov
inc
xchg
fucom
xchg
repz
sbb
mov
fstps
jg
test
or
cmp
jbe
adc
push
inc
out
push
dec
xchg
stos
add
add
xchg
int3
pop
cmp
xchg
mov
adc
das
dec
data16
xor
mov
mov
dec
sub
adc
pop
add
mov
test
adc
push
cli
push
sub
adc
jae
out
jge
add
push
je
cwtl
fsubl
adc
lahf
movsb
mov
xchg
cmpsl
aad
out
jmp
xor
mov
push
insb
dec
jne
mov
int3
pop
addr16
or
cld
adc
arpl
mov
ds
pusha
je
data16
jbe
xor
dec
ffreep
jae
mov
in
add
rcll
mov
xor
jmp
push
inc
outsb
pop
ret
addr16
push
pusha
mov
xchg
xchg
jg
sub
outsl
outsl
jnp
fwait
out
leave
data16
mov
dec
das
xor
loopne
insb
cld
cmp
or
ljmp
pop
in
cmp
pop
fdivrl
mov
push
sub
sbb
ja
push
cmp
int3
push
loopne
cmpl
xchg
jl
fsubrl
inc
aam
adcl
add
addb
aas
cwtl
mov
xor
mov
mov
push
fsts
xor
pop
push
adc
fists
shrb
adc
mov
xchg
xchg
scas
in
call
add
les
add
stc
mov
mov
test
jo
or
xchg
push
adc
ljmp
or
bound
push
and
shlb
jo
or
je
enter
sbb
adc
js
rorb
add
pop
rolb
dec
dec
cmp
xchg
mov
rolb
pop
mov
pop
xor
pop
xor
pop
mov
and
inc
cmpsb
shll
stc
loopne
and
mov
sti
cld
add
sbb
pushf
or
add
or
fwait
mov
pop
add
or
fildll
loop
scas
add
lret
test
push
sbb
leave
int3
jl
xor
pop
and
loopne
roll
jmp
push
jl
add
imul
stos
push
adc
loop
cmpl
cmp
push
jns
xor
mov
push
nop
in
jns
mov
adc
or
ret
jns
or
ret
lods
lods
sbb
scas
movsb
int3
or
repnz
xchg
lret
int3
int3
sti
in
push
jp
xchg
cmp
inc
nop
test
cmp
pusha
fs
js
pop
mov
pop
and
sti
mov
adc
fsubs
ss
jbe
inc
xor
js
lods
mov
fwait
push
xchg
lea
inc
mov
rclb
popf
xchg
pop
sub
stos
mov
jge
sbb
aas
and
mov
enter
into
jnp
or
push
inc
ja
xor
mov
xchg
mov
popa
inc
pushf
jmp
inc
xor
jmp
rolb
sub
daa
mov
push
dec
xchg
mov
repz
push
inc
jns
mov
ds
or
sarl
int
xor
mov
jg
or
stos
jp
xchg
add
add
add
push
sub
ret
incb
or
adc
or
add
or
ret
fadds
adc
loope
cli
jbe
je
adc
cmpsl
push
ja
dec
fmuls
pushl
xor
mov
cmp
lods
pushf
cld
negb
incl
lcall
ret
adc
or
test
rorl
pause
mov
and
stc
jns
sbb
pop
adc
cmp
fs
or
jecxz
inc
pushf
mov
add
lea
add
addr16
repnz
and
loopne
popa
jmp
push
loopne
or
mov
mov
or
inc
lea
xchg
fimuls
cld
cwtl
fimull
neg
jnp
dec
lret
xor
and
cmp
add
dec
movsl
mov
push
jne
shlb
clc
xchg
cmpsb
pop
call
sbb
and
fdivr
pop
js
enter
cmp
jne
test
mov
cs
in
pop
fadds
divl
in
and
and
popf
or
pop
jg
fiaddl
add
xchg
lock
cmp
push
adc
pop
pop
in
lahf
dec
mov
and
add
jmp
call
inc
rsm
pusha
cli
add
sbb
movsl
aas
sub
jo
or
sub
cmpb
sub
fdivr
ja
or
pop
xor
ljmp
out
scas
cmp
push
repnz
xor
repz
mov
adc
xchg
je
je
ret
sub
lret
push
sbb
sub
and
sbb
xor
stc
add
mov
inc
lock
ret
scas
cmp
loope
adc
adc
and
mov
les
leave
lods
and
push
sahf
jbe
adc
inc
or
adc
cmpl
dec
pop
xchg
dec
ficompl
cmpsb
cltd
cmpsl
or
jl
add
cmp
push
sbb
mov
xor
stos
adc
and
inc
mov
inc
mov
pop
loopne,pn
push
and
push
jbe
pop
cs
clc
cmp
pop
leave
adc
loopne
shlb
scas
jmp
cs
dec
imul
dec
mov
mov
or
add
mov
xlat
xchg
out
das
adc
fstl
jmp
push
in
jbe
adc
adc
jne
fwait
insb
lcall
jmp
mov
inc
addl
pop
cmp
jne
dec
pushf
ss
jmp
adc
dec
sbb
or
cmp
aam
or
je
add
cmp
subb
mov
out
lock
popw
cwtl
jp
jmp
mov
adc
pusha
push
imul
int
clc
xchg
in
xorb
data16
adc
push
sbb
add
add
neg
or
jge
or
ret
icebp
sub
cmp
arpl
push
bound
stc
add
mov
les
xchg
into
adc
iret
adc
dec
out
pushf
arpl
pop
dec
fistpll
mov
or
jne
loope
adcb
or
je
mov
sub
jo
jns
pusha
push
rorb
sbb
fdivp
cli
adc
inc
das
or
test
mov
push
or
inc
sarb
push
or
sbb
mov
dec
mov
fstps
leave
push
mov
mov
fisttpll
or
jb
mov
cwtl
lahf
add
ja
adc
xchg
add
sbbb
shlb
movsb
les
aaa
fsubs
xor
adc
lret
in
test
push
movsb
test
and
icebp
sbb
test
idivb
sahf
xchg
cmp
lcall
out
push
dec
jbe
cwtl
ret
das
fwait
pushf
std
xchg
fdivrs
sahf
incb
pop
add
add
add
and
mov
add
and
popa
imul
aaa
sub
mov
and
or
call
clc
add
dec
cmp
std
inc
daa
nop
lods
into
sub
dec
clc
jmp
add
int
xor
or
lods
mov
fists
into
push
push
cmp
add
and
and
sub
rcr
push
sbb
inc
mov
lock
insl
clc
push
push
repz
xchg
push
stc
jbe
and
pop
mov
xchg
lea
push
fsubrl
clc
adc
shr
int3
lock
push
pushf
mov
cs
dec
je
shlb
movsb
add
mov
push
rclb
cmpb
adc
loope
cmp
loopne
pop
test
pop
push
int3
jg
adc
sar
add
sbb
push
sub
cmp
sahf
test
lock
lods
les
or
mov
sbb
hlt
mov
xchg
hlt
hlt
and
repz
push
fsts
std
or
pop
clc
aas
xchg
fsub
jmp
mov
es
js
mov
cltd
dec
xor
fs
inc
popl
pop
cwtl
orl
repnz
add
test
mull
ds
and
pushf
xchg
add
lods
daa
add
loope
xor
inc
inc
dec
pop
sbb
dec
and
jae
cmp
or
hlt
cmp
icebp
push
sub
xchg
push
or
inc
sahf
cmp
xchg
aaa
push
lock
xlat
xchg
inc
jle
hlt
push
push
popa
add
gs
stos
mov
sbb
jmp
aaa
sbb
jge
and
add
lock
push
rorb
xchg
xabort
clc
rclb
push
icebp
aad
adc
pop
and
push
push
addl
clc
ss
add
int
or
add
cmp
je
mov
push
cmp
fidivrl
cmp
clc
jne,pt
jae
rorl
sub
and
mov
bnd
pop
add
cwtl
shl
xchg
push
clc
xchg
int
add
add
adc
out
add
outsl
ficomps
push
and
jge
jo
and
adc
push
inc
mov
add
inc
outsl
sub
in
icebp
jbe
push
add
pop
loopne
add
call
movsl
push
int
xchg
cmpsb
stos
dec
or
sbb
testl
jmp
adc
test
mov
dec
rolb
mov
ficoml
xchg
mov
xchg
fisttps
scas
sbb
icebp
movlps
push
xchg
jb
pop
lea
adc
lahf
lods
ror
xchg
jne
pop
mov
mov
mov
xchg
mov
sub
inc
mov
jo
test
out
dec
mov
dec
push
xor
loopne
nop
sub
mov
or
cld
ljmp
sub
xchg
push
sbb
jb
add
mov
fs
cwtl
ss
imul
xchg
pusha
das
rclb
ja
or
dec
call
mov
dec
inc
cli
and
xchg
sbb
pushf
adc
push
mov
push
cmp
cld
scas
in
xlat
divb
in
pop
inc
or
adc
popa
mov
adc
hlt
cmp
mov
push
scas
mov
ret
js
gs
xchg
aam
and
lods
cmp
add
mov
jb
scas
movsb
std
push
ret
push
adc
rorl
inc
xor
jo
dec
jb
or
stos
mov
xchg
repnz
incl
adc
add
jp
xchg
adc
xor
sti
in
shl
pop
and
or
mov
jno
jnp
xor
or
xchg
add
jl
mov
mov
scas
push
sbb
aas
or
or
mov
adc
adc
test
fiadds
and
out
repz
imul
cs
popa
daa
fwait
push
inc
sub
cmp
clc
repz
mov
push
fisubl
lds
mov
cmp
ffreep
inc
add
outsb
fadds
push
push
or
inc
fldl
cld
pop
add
jl
xchg
ljmp
mov
xor
loope
clc
or
or
jge
aas
mov
adc
test
push
nop
add
ret
aas
jb
mov
adc
pop
out
xchg
add
push
loopne
cmp
mov
push
mov
jmp
lahf
lock
clc
or
and
mov
pop
jnp
out
je
enter
or
arpl
push
movsb
xlat
pushf
push
std
jecxz
cmpsl
mov
mov
in
dec
inc
pop
xchg
je
cld
mov
orb
and
adc
icebp
add
clc
into
push
inc
enter
push
mov
sub
ds
adc
sbb
stos
cld
pop
scas
test
mov
add
repz
movb
dec
testl
test
mov
xchg
push
ret
lea
push
jo
mov
pushf
mov
push
rcll
test
mov
or
test
add
add
insb
repz
inc
jae
jge
pop
stc
push
add
pusha
mov
pop
dec
sbb
lahf
adc
sbb
hlt
xor
push
les
mov
or
or
std
adc
andb
push
push
or
jne
adc
or
out
imul
hlt
push
push
pop
jle
mov
sarb
das
mov
addr16
fadd
push
out
sub
or
pop
mov
add
loopne
push
jmp
mov
add
pop
jg
xchg
inc
sub
lock
sub
and
add
es
jmp
loopne
jns
inc
add
push
xor
dec
clc
or
repnz
not
lea
and
sahf
pop
mov
cmp
pop
das
int
insb
and
adc
dec
ret
mov
test
movb
xor
ret
adc
mov
insl
int3
mov
jmp
dec
or
lea
adc
enter
and
mov
pop
aas
and
pusha
push
mov
fs
je
jno
pop
cmp
jge
and
lods
das
clc
push
cmp
lock
popf
pop
movsl
in
jge
mov
int
and
add
fisubl
cmp
push
cwtl
add
movsb
shlb
mov
in
push
inc
add
xchg
xor
jo
mov
xchg
sub
jnp
shlb
xlat
push
loopne
add
and
popf
mov
inc
jae
jne
mov
ret
push
cmp
subl
loopne
shll
cmp
pop
jne
fdivrs
push
mov
fwait
mov
mov
push
in
cmp
xchg
lods
fimuls
add
adc
lods
push
enter
cmp
push
push
push
adc
aad
repnz
movsb
add
adc
shrl
stos
cmc
push
dec
mov
rcr
and
and
adc
push
cmp
rorb
outsl
mov
mov
jmp
or
nop
repnz
or
pop
repnz
inc
jnp
fildl
sarb
adcb
pop
cmp
lea
push
pop
push
cmpb
xor
add
dec
lret
daa
ja
xchg
mov
loopne,pt
push
add
mov
stc
jmp
in
sub
pushf
adc
or
lret
and
jmp
andl
loopne
mov
add
ret
sbb
xor
jo
push
mov
aam
mov
or
jae
mov
mov
adc
ljmp
test
movsl
cmp
add
adc
shr
push
int3
xchg
and
dec
mov
cmpsb
xor
test
add
call
icebp
or
add
inc
mov
add
mov
pop
add
lcall
pop
xchg
add
je
rcrb
adc
lods
js
xor
loop
cmpsl
adc
in
mov
push
sbbb
cmp
dec
jge
mov
jo
insb
push
and
adc
jmp
sub
jne
ja
icebp
cmp
xlat
inc
test
leave
mov
js
neg
mov
ret
mov
mov
add
add
push
pop
out
fadd
imul
mov
add
in
arpl
xor
shlb
ret
shl
scas
adc
sub
aam
insb
xchg
push
mov
insl
mov
jmp
adc
rcr
jno
push
out
test
imul
dec
adc
daa
fimuls
mov
inc
rcll
fdivrs
fcoms
dec
fistpl
stc
xchg
jne
lahf
inc
lcall
mov
sbb
shl
inc
cmp
sub
sub
xchg
dec
lret
lods
ret
jmp
lea
and
pop
or
imul
rcll
add
mov
out
int3
imul
hlt
int3
xchg
or
mov
xor
loopne
int3
cmp
jnp
cmp
xor
mov
gs
dec
hlt
int3
xor
mov
fsubrs
shrl
cmp
pop
in
xchg
sar
jne
daa
dec
jne
sub
jl
jne
adc
jne
xchg
push
mov
pop
std
pop
dec
or
sub
lea
int3
inc
and
adc
jl
push
sub
mov
movsl
pop
mov
fsubr
push
ffreep
mov
jne
stc
jb
fdivl
jb
cmpsb
adc
add
insl
add
add
shrb
push
dec
test
bound
stos
mov
xchg
cmp
push
sub
call
mov
lea
fdivl
pop
aad
lcall
or
out
addl
hlt
test
arpl
shll
or
jecxz
lcall
sub
jo
inc
popa
xor
xorl
sub
sub
mov
mov
mov
arpl
pop
push
fadds
cmp
cmp
adc
dec
lret
cld
nop
out
je,pn
or
cmp
mov
aam
cmp
mov
adc
push
jmp
add
jmp
push
add
incl
sbb
mov
or
add
add
inc
or
mov
push
divl
in
mov
aad
and
loop
movb
je
adc
jmp
cmpsl
cs
inc
popa
test
daa
mov
movsb
ja
cmc
push
pop
cld
push
dec
cmc
movsb
popa
ds
je
xlat
mov
mov
sahf
in
inc
pop
add
rolb
pop
lea
fisubrs
rorb
add
xchg
sbb
push
adc
shll
mov
movsl
mov
loopne
movsl
mov
and
mov
movsl
add
push
and
adc
mov
xor
push
push
push
or
mov
pop
std
mov
push
push
aas
jg
xchg
cld
lods
cmp
insb
sub
push
push
sub
cs
push
fdivrs
je
inc
dec
mov
in
xor
adc
dec
leave
insb
ja
in
and
mov
jp
jnp
inc
jbe
in
push
nop
or
sub
and
mov
dec
cmp
xor
push
pop
jo
les
lods
std
dec
pop
lods
mov
sub
inc
leave
push
xchg
clc
addl
cmpsb
mov
clc
lea
dec
rcrl
or
xchg
cmp
in
pop
mov
mov
mov
sub
dec
in
mov
mov
pop
dec
cmp
jb
dec
xchg
lea
cs
aas
pop
lahf
insb
push
xchg
lcall
and
inc
mov
push
push
scas
mov
mov
test
mov
outsl
dec
rol
je
es
pushf
insb
mov
adc
pushf
sbb
idivb
and
sahf
sub
test
scas
mov
in
jbe
pop
ja
xchg
lcall
mov
fs
jp
les
adc
adc
push
popa
jp
cwtl
rorb
jns
andb
loope
and
js
jnp
mov
cmp
jns
inc
test
cmp
cmp
in
lret
aam
sub
pop
add
cmpsb
sub
or
sub
lock
mov
out
mov
jno,pt
dec
sub
test
mov
and
outsl
xor
cmp
fnsave
sub
and
nop
or
xor
pop
popa
dec
scas
or
pop
cmp
xchg
or
jmp
roll
ja
fs
test
out
and
cmp
inc
mov
add
mov
xor
sbb
ret
stos
xchg
add
mov
popa
inc
cmp
or
push
mov
cmpsb
cmp
push
or
shrl
data16
sar
cld
sbb
cmp
add
or
or
sbb
adc
push
adc
loopne
mov
sti
cld
shl
push
xor
jbe
test
jg
pop
pop
add
add
or
lock
ds
dec
clc
xchg
lock
mov
loopne
inc
push
pop
push
or
adc
pop
jo
std
push
in
lea
mov
cmp
mov
lcall
xchg
cmpb
mov
jle
adc
insb
adc
pop
mov
mov
mov
pop
hlt
shr
jb
cmpsb
cmp
sbb
mov
aad
out
lret
xorb
insb
lret
idivb
lret
fmull
jle
cld
popa
cld
cmp
scas
mov
push
mov
js
sti
clc
push
imul
mov
push
sub
rorb
push
jp
mov
xor
lahf
sarl
sbb
decb
pop
bound
xor
mov
decb
ljmp
in
adc
icebp
push
mov
inc
mov
or
push
clc
mov
daa
pop
adc
ret
sub
fnop
xor
rorb
mov
push
cmp
mov
or
pop
lea
jno
mov
scas
jge
inc
dec
dec
popf
or
sarb
adc
jne
jae
jmp
add
add
mov
and
sub
in
dec
xchg
and
push
mov
push
jne
sub
push
jmp
cmc
mov
es
xor
dec
test
lcall
cmp
addr16
les
push
jecxz
add
mov
lea
cld
push
jg
mov
adc
fadd
push
dec
pop
cld
je
rcl
sub
push
jno
and
lds
clc
mov
outsb
add
cmp
shr
nop
fs
jmp
arpl
and
push
cmp
xor
jg
push
pop
sbb
xor
push
pop
adc
inc
imul
add
pop
adc
rcr
dec
and
call
negl
hlt
and
hlt
jge
sub
sbb
push
jmp
je
pop
xor
scas
daa
and
dec
sbb
fldl
lea
loopne
jo
push
lcall
lret
cs
add
movsl
inc
addb
stc
push
cli
addr16
or
jns
xor
int3
scas
movsb
inc
push
or
jmp
jmp
push
adc
pop
push
xor
push
or
mov
xor
popa
mov
push
popa
jg
stos
testb
pop
sub
add
dec
or
push
addb
fidivrl
iret
xchg
mov
add
mov
add
cmp
rclb
imul
mov
pop
shl
add
jl
js
or
inc
xchg
leave
push
repnz
aam
stos
int3
mov
std
mov
mov
mov
sbb
jp
aam
lahf
xchg
push
jne
outsl
adcb
orl
popf
jb
push
or
imul
xor
or
gs
xor
or
add
mov
frstor
in
addb
and
fs
aas
mov
adc
or
sbb
repz
pop
cmpsl
or
fadd
dec
ljmp
adc
arpl
add
push
testl
pop
mov
or
ja
push
xor
scas
fsubl
and
sub
xor
in
inc
xor
dec
inc
les
push
cmp
fs
cmpl
xor
test
out
push
push
lea
jecxz
dec
ret
mov
or
jns
adc
std
mov
lsl
int3
lds
or
enter
imul
lds
push
pop
mov
insb
es
push
sahf
inc
push
lock
jecxz
push
call
lret
je
or
shl
in
or
dec
hlt
les
dec
or
and
xlat
add
ret
mov
or
and
dec
imul
inc
xchg
arpl
out
adc
mov
push
int
aas
dec
or
pop
movsl
mov
xchg
fiaddl
add
fstp
sarl
add
sub
rorb
xorl
cwtl
xor
out
mov
pop
pop
adc
adc
or
adcb
mov
push
pop
and
cltd
fsubrs
inc
or
push
es
stc
xchg
je
ret
jle
dec
out
sbb
aaa
mov
pushf
lds
ret
or
sarl
fstpl
cld
dec
and
shll
push
cmpsl
imul
sub
inc
icebp
sbb
xchg
or
arpl
cmp
inc
test
add
push
insb
adc
sub
addb
and
adc
sahf
jbe
sti
push
push
pop
push
jecxz
xchg
and
mov
pop
push
sub
setge
loopne
xchg
push
add
xchg
lret
in
or
mov
rolb
xorl
mov
idivl
or
inc
sub
or
jl
and
jo
or
jnp
pop
loop
or
jno
dec
dec
out
sub
xor
jle
cmp
sti
dec
in
mov
out
add
sbb
ja
movl
les
jl
sub
and
inc
or
inc
add
push
cmp
into
push
jbe
cmp
cmp
add
imul
andl
sbb
aas
ljmp
subl
lret
jo
pop
sub
cmp
mov
xchg
adc
or
jmp
and
lret
cmp
xor
jecxz
or
xchg
dec
fbstp
cld
adc
hlt
ds
xor
loopne
adc
ffree
cmp
push
clc
mov
mov
mov
stos
leave
mov
sub
mov
stc
hlt
sub
ja
sub
mov
xor
cmp
push
mov
cmp
mov
scas
sbb
cld
or
push
test
sbb
jbe
orb
aaa
aaa
adc
cmp
mov
push
push
mov
popa
fistps
cwtl
sub
adc
cmp
addl
lock
sbb
leave
les
inc
dec
mov
fsubrs
jecxz
sbbb
ja
loopne
xchg
or
int3
or
loop
test
mov
adc
wbinvd
push
fsubrl
repnz
sti
push
inc
inc
lcall
mov
lcall
xchg
cld
addl
xchg
mov
cmpsb
mov
mov
add
adc
fdivrs
imul
loope
js
adc
repnz
push
adc
cmp
fsubrl
rcll
adc
call
xor
rcr
pop
add
sti
clc
dec
cmp
out
jmp
add
mov
repz
fcompl
popf
rolb
mov
arpl
push
jne
fidivrl
test
push
enter
mov
je
test
out
les
in
cwtl
mov
sub
aad
or
enter
push
lea
push
jecxz
and
push
push
cwtl
and
out
test
rcl
aaa
mov
cmp
adc
hlt
pop
or
and
dec
add
mov
and
push
push
sub
cwtl
int
sub
hlt
lea
inc
adc
nop
out
and
roll
pop
sbb
movsl
add
iret
fadds
aas
daa
push
and
add
sbb
imulb
data16
mov
jns
stos
movsl
cltd
in
out
push
adc
sub
cmp
adc
push
rolb
pop
adc
mov
sbb
xlat
insl
pop
leave
fadd
sbb
mov
iret
lcall
in
lahf
xor
xchg
and
dec
and
call
shll
inc
loopne
and
xor
dec
jmp
xchg
push
push
xchg
loop
jmp
xchg
jg
sahf
mov
cmpsl
cwtl
dec
push
jg
mov
lret
mov
adc
adc
mov
bound
adc
pop
pop
xor
add
dec
orl
call
or
sub
inc
in
call
nop
inc
in
lods
or
fwait
dec
test
or
out
ja
add
xchg
dec
push
in
int
movl
pushf
add
loope
mov
adcl
push
mulb
xchg
jl
push
imul
inc
add
jl
dec
pop
sbbl
adc
xor
sbb
loopne
mov
push
movzwl
pop
push
iret
mov
not
push
add
xlat
dec
lods
xor
test
js
adc
mov
or
js
xchg
adc
lahf
jb
je
push
shll
jb
sub
sub
mov
jnp
sti
mov
push
cmp
divl
andb
js
mov
outsl
cmpb
sar
stos
adc
clc
sub
xor
push
push
adc
lock
mov
push
mov
push
jecxz
inc
in
adc
adc
mov
in
push
or
fstl
js
mov
cmp
lock
aad
xchg
mov
fbld
in
outsb
gs
and
les
loopne
add
lods
xchg
jns
fwait
jb
fsubrs
or
inc
mov
and
aam
sbb
mov
ss
sub
movsb
xchg
mov
in
cmpsb
or
or
add
add
insl
iret
enter
and
xchg
push
in
push
lods
lea
outsl
add
sub
or
add
pushf
adc
sub
outsl
imul
stos
xor
inc
addl
lret
jne
push
movhps
rclb
or
or
push
mov
mull
sub
ret
add
adc
ja
insb
iret
mov
insb
movsl
push
add
jne
in
lea
es
mov
ret
sarl
cmp
fsubs
out
push
rclb
push
and
insl
nop
and
xor
adc
add
popf
adc
sbb
xchg
push
add
add
push
daa
popf
lahf
test
dec
mov
call
jge
in
aas
test
stos
jno
cmp
mov
hlt
cmpsl
out
add
push
imul
push
cltd
mov
xchg
jl
add
js
pop
andl
mov
xor
lds
das
aam
jo
in
loop
cmp
adc
mov
adc
jae
cmpsl
sbb
push
pop
shrb
add
mov
aam
mov
mov
pop
ret
mov
call
imul
nop
shrl
mov
ljmp
mov
mov
test
jnp
push
mov
xchg
pop
inc
inc
xor
lods
orb
mov
movsl
cmp
rcr
and
lret
and
add
sbb
ja
gs
pushf
shl
and
mov
je
les
pop
or
and
jae
xchg
movsl
cmpxchg
jo
mov
addr16
jb
js
jge
sbb
add
cmp
mov
mov
mov
mov
mov
pop
sub
xor
adc
dec
stc
ficomps
sarb
mov
lods
js
lret
and
ja
pop
jl
sbb
and
dec
test
pop
loopne
cmp
test
test
std
pushf
jmp
jp
pop
add
hlt
loope
idivl
and
add
lret
dec
in
pop
es
imul
enter
scas
mov
inc
cltd
lock
repnz
cld
mov
sbb
adc
sarl
jae
xor
sbb
test
add
or
adc
pop
lock
lret
jge
push
addr16
lahf
pop
push
ja
mov
mov
push
data16
jmp
pop
dec
faddl
push
movsb
inc
mov
mov
push
dec
mov
adc
mov
out
mov
pop
xor
or
sahf
orb
cld
pushf
movsb
add
dec
mov
les
xchg
movsb
push
call
push
sbb
xchg
mov
adc
mov
jle
add
jge
mov
fcoms
sbb
jmp
add
add
sbb
js
add
rorb
cwtl
aam
fcomp
cmp
and
loopne
cmp
dec
mov
inc
sahf
inc
pushf
lods
adc
inc
imul
mov
jbe
jnp
mov
pop
cmp
ret
ret
pop
lcall
add
es
or
cmpl
sbb
loop
movsl
int
cs
out
rcl
mov
enter
xchg
cmp
dec
cmpl
inc
in
xchg
repz
add
in
jmp
jno
and
addb
or
subl
sub
xchg
test
call
push
add
cvtpi2ps
shll
movsb
enter
orps
or
sbb
sbb
mov
sub
jle
ret
stc
mov
pop
roll
add
add
mov
call
or
jns
mov
and
je
fnstenv
push
ret
jo
sbb
and
sbb
and
or
adc
cmp
aaa
and
mov
das
dec
add
ds
add
add
mov
push
je
mov
xchg
lahf
loope
cmp
xor
push
ret
push
add
xchg
add
loop
or
cmp
jbe
loopne
jl
lahf
push
and
jno
and
insl
jmp
and
aas
pop
push
adc
lods
addb
clc
gs
inc
imull
lea
push
push
sbb
arpl
loopne
dec
rorl
mov
clc
imul
push
idiv
dec
test
lcall
xchg
inc
int
add
inc
xchg
add
sub
lea
ds
cltd
shl
in
jmp
lret
cmp
sub
sbb
mov
lods
popa
das
add
sarb
pop
xor
sbb
push
mov
or
pushf
je
cmp
fst
xchg
insl
mov
mov
imul
fistpl
lods
jge
push
stos
push
outsb
divps
xchg
push
inc
sahf
repnz
dec
lea
loope
jle
std
aam
xchg
sub
sbb
aam
add
aaa
in
add
xor
push
sub
cmc
adc
lods
enter
mov
xor
dec
jo
inc
int3
dec
int
add
xchg
shlb
push
adc
inc
ret
imul
xor
sub
insb
mov
sbb
jne
dec
cmp
outsl
lods
xchg
dec
enter
add
sub
adc
das
subb
add
sbb
jae
dec
fdivrl
roll
jne
cli
or
mov
cs
dec
cmp
rolb
test
xchg
dec
push
inc
rol
mov
add
mov
stc
es
int
int
mov
icebp
sub
mov
sbb
sbb
out
jae
push
sbb
jne
dec
leave
sbbl
out
in
lret
call
js
jnp
int3
add
sub
clc
ret
xchg
outsl
add
push
pop
aas
sub
pop
jmp
cltd
or
lahf
or
add
push
fs
imul
in
enter
jge
loope
jmp
xchg
hlt
fnstcw
les
jnp
dec
les
cmp
inc
add
inc
lret
mov
mov
fisubrs
or
cld
push
push
outsl
imul
sub
scas
add
dec
and
in
ljmp
loopne
sub
and
dec
jo
sub
mov
orb
mov
lahf
inc
lahf
sub
dec
insl
movsl
fistl
mov
in
jne
push
adc
jge
inc
pop
sub
leave
adc
sti
add
lcall
adc
hlt
mov
sub
and
sbb
fildll
movsb
sub
and
mov
xor
push
adc
inc
and
dec
sar
cld
mov
inc
cs
sbb
push
pushl
lock
test
adc
cmp
lcall
rcrb
ret
loopne
xchg
or
mov
or
jnp
jl
pop
mov
add
mov
int3
inc
jg
subl
loop
fiaddl
mov
aad
pusha
push
repz
cmpsb
mov
push
cli
jl
push
jne
sub
dec
shl
pop
hlt
hlt
cmp
dec
mov
movsb
or
aas
jmp
movsl
rcrb
mov
jp
scas
inc
daa
cmp
jbe
jl
test
jcxz
call
add
cwtl
push
push
cmp
pusha
mov
inc
je
adc
or
in
jbe
faddl
and
fcoml
cltd
push
add
mov
fstpt
loop
inc
loopne
dec
jmp
pop
mov
push
or
lock
dec
call
loopne
inc
xor
pop
jg
mov
push
add
cmpb
push
xor
xor
mov
mov
adc
incb
stc
sub
lea
bound
fildl
test
mov
inc
dec
jne
test
pop
jne
dec
mov
les
mov
sub
mov
pop
mov
sbb
in
xor
lea
sbb
mov
push
mov
cmp
or
xor
push
push
loopne
std
lods
mov
jns
push
jmp
scas
mov
pushl
frstor
sbb
sbb
ds
movsb
xchg
add
into
es
out
popa
iret
jge
sbb
xor
push
pop
fs
lea
cmp
sbb
inc
jmp
push
xor
push
xor
cld
popf
sar
out
mov
into
add
pop
mov
dec
cli
cmp
leave
ret
or
jmp
and
mov
push
push
mov
jne
cmp
adc
int
enter
scas
xor
in
je
sub
mov
bound
sub
push
mov
add
mov
adc
aam
push
and
mov
mov
xlat
ficoml
adc
shlb
movsb
loopne
pop
push
jmp
or
dec
and
mov
lcall
into
aam
push
xchg
mov
std
or
mov
mov
cmp
jb
neg
pusha
cmpsl
pop
add
rorl
data16
fimull
mov
shl
rorl
jmp
mov
or
rcrb
aaa
mov
push
clc
sub
das
push
les
shlb
enter
clc
push
jb
dec
shrl
xchg
mov
add
add
bswap
push
push
cmc
push
faddl
pop
jl
mov
xchg
mov
mov
arpl
loopne
leave
sub
mov
xchg
pusha
movsl
sub
fs
arpl
ss
clc
inc
mov
add
or
test
inc
add
std
movsl
les
cmp
mov
iret
lock
loop
cld
push
rclb
cld
sub
mov
pop
out
sahf
roll
adc
and
lds
inc
mov
xor
sbb
leave
dec
inc
mov
outsb
jbe
jns
adc
mov
jbe
gs
push
addl
stc
jo
ss
pop
add
inc
xor
xchg
andl
fcompl
add
dec
and
sbb
mov
sbb
dec
add
and
pop
mov
pop
jne
push
push
mov
out
mull
adc
lock
inc
fistps
xor
shrb
or
aam
mov
pushl
inc
aam
pop
xchg
enter
punpcklwd
sub
rcr
cwtl
mov
mov
mov
inc
dec
lock
cmp
std
data16
dec
hlt
mov
movl
jmp
mov
sbb
mov
sbb
adc
add
lret
gs
cmp
add
call
out
or
cmp
xchg
das
mov
stc
push
jno
sbb
imul
cmp
jae
inc
les
mov
jmp
cmp
xlat
shll
movsb
dec
and
adc
loopne
xchg
add
cmp
jge
cmp
xor
jb
jno
jle
clc
jge
sub
xor
sbb
pop
or
add
repz
addl
jmp
push
dec
stc
lods
cwtl
inc
add
mov
cmp
imul
lock
repnz
inc
negl
add
loope
test
jg
dec
stc
in
jne
pop
dec
add
mov
sub
xchg
cmp
mov
or
jmp
xor
xor
pop
sbb
sbb
ljmp
mov
fadds
in
mov
mov
jecxz
push
mov
mov
pop
xchg
jb
dec
out
aad
push
in
sub
inc
xor
sbb
inc
xor
push
inc
testl
xor
lahf
clc
sub
cld
stos
enter
jnp
movsb
adc
or
jle
jle
je
in
je,pn
push
push
fldt
loop
imul
leave
xor
xor
xor
cmp
xor
lret
pop
idivl
seto
cmc
xor
push
pushf
push
adc
or
mov
js
xor
inc
jmp
or
add
mov
cli
mov
push
adc
pop
sub
push
pop
push
sub
sub
inc
sbb
push
sbb
jecxz
dec
push
xchg
dec
xchg
push
push
pop
mov
inc
mov
loopne
movsl
xor
cvtpi2ps
or
add
pop
shll
cltd
add
jne
add
add
pushf
inc
loopne
push
ja
out
outsl
nop
xchg
push
movl
aad
arpl
icebp
enter
add
fwait
fwait
pop
out
stc
les
fisttps
rorb
adc
sbb
pop
inc
jmp
push
sahf
or
jle
roll
roll
cmp
jbe
clc
setae
cmp
andb
in
mov
pop
and
and
dec
pop
pop
adc
loopne
mov
test
pop
xchg
cmp
fcoms
fidivs
nop
mov
mov
jb
loopne
mov
enter
lea
push
mov
jg
jmp
sbb
inc
push
push
mov
mov
mov
jl
mov
or
scas
adc
mov
push
dec
add
dec
push
pop
push
movl
outsl
inc
sub
add
sahf
out
push
ror
sarb
test
mov
mov
sahf
out
call
out
sahf
out
hlt
clc
clc
cld
fdivrs
add
lock
fnstcw
iret
imul
sub
mov
mov
inc
pop
xchg
mov
sti
and
outsb
or
push
lea
jl
cld
push
jo
sub
and
std
cld
out
mov
nop
add
fsts
pop
sbb
stc
sub
ficoms
lock
jl
sub
out
add
dec
inc
fcomps
add
jbe
mov
jecxz
insl
pop
add
ljmp
mov
or
push
push
pop
cmp
repz
insb
je
jns
out
ss
sbb
adc
jns
out
adc
or
and
jns
or
add
jo
jnp
inc
mov
int3
and
push
insb
push
add
pop
mov
adc
ja
cmp
and
fadds
lock
push
push
cmp
lret
gs
push
popf
cli
sbb
push
pop
mov
push
add
add
jmp
ds
cmp
adc
or
sarl
add
mov
push
popf
and
sub
scas
pop
pop
sub
push
jb
shr
stc
je
icebp
sub
fiadds
sub
mov
push
flds
add
push
pop
fistl
out
cmpsb
sbb
es
ljmp
inc
in
mov
lock
add
adc
xor
sbb
mov
add
addr16
addb
mov
adc
fstps
out
clc
push
movsb
sbb
push
cmp
test
inc
aam
add
inc
sub
clc
inc
push
inc
mov
lcall
andl
ss
js
pop
or
scas
jns
or
or
pushl
sbb
ds
nop
push
cmp
cs
movsb
push
push
in
adc
int3
dec
sub
cmpsl
cmp
js
mov
hlt
or
sub
sbb
push
cmp
add
inc
mov
or
call
loopne,pn
xchg
jae
pop
push
jp
inc
sbb
pop
sahf
dec
pop
scas
mov
int3
leave
stos
add
mov
decl
mov
mov
les
cmp
jne
inc
inc
inc
inc
jmp
and
ret
and
shrl
xchg
or
sbb
and
js
jmp
call
mov
inc
xchg
std
mov
add
out
xor
dec
je
loopne
sub
test
ret
ret
rep
adc
data16
rol
or
or
loop,pt
push
arpl
mov
or
mov
mov
cmp
clc
testl
dec
jo
pop
dec
sub
mov
mov
jnp
push
cmp
adc
aas
or
mov
testb
adc
sub
adc
pop
loop
add
inc
add
outsl
bound
pop
mov
dec
mov
cmp
pusha
ja
mov
xor
jge
int3
pop
add
and
jmp
jp
and
sub
push
inc
in
insb
fs
adcb
int3
add
jno
es
mov
mov
in
mov
add
cmpb
pusha
jo
mov
push
jecxz
sbb
and
mov
loope
pop
sub
push
adcl
dec
push
inc
cmpsb
fucom
pop
inc
push
hlt
clc
mov
in
repnz
inc
and
mov
hlt
xchg
push
fucomi
hlt
stos
loope
cmpsb
insl
rcrl
hlt
cld
cmp
jne
inc
adc
jb
push
add
add
jbe
sti
push
push
push
mov
cmp
inc
imul
add
xor
cmp
movq
jl
cmpb
cmp
jb
cmp
jl
jg
outsl
inc
xchg
jbe
add
int
and
pusha
repz
add
add
cld
mov
dec
leave
je
add
mov
jl
mov
incl
fcomps
out
push
sbb
push
mov
hlt
std
mov
add
test
xor
test
inc
pushf
jbe
push
xor
sbb
iret
mov
negb
jne
push
lock
imul
xor
fadd
inc
and
testl
je
popf
dec
mov
xor
xor
rcrl
ret
adc
sub
mov
jbe
in
ficompl
fsts
sub
frstor
push
and
jl
mov
or
les
adc
aaa
aaa
int3
fs
add
popa
add
sub
fisubl
inc
cmpsb
xchg
or
imul
sbb
sbb
sbb
aaa
push
sbb
sarb
scas
leave
jbe
push
das
push
pop
cltd
pop
idiv
add
mov
or
fcompl
lods
lods
dec
jg
jl
out
jo
cltd
stc
lea
dec
push
push
mov
mov
shrl
aam
decl
sub
lcall
test
loopne
cmp
mov
test
cwtl
stos
pop
jmp
adc
xchg
rcrb
lret
popf
jecxz
enter
int
loopne
mov
push
orb
push
adc
push
push
xchg
insb
cmp
push
jg
push
loopne
pop
cmp
xor
add
outsb
add
add
rcrb
loopne
jl
in
pop
dec
pop
sahf
jle
cmp
mov
push
push
cmp
divb
fs
rcl
mov
cld
mov
or
or
pop
jl
mov
sbb
lods
rcr
jne
mov
sbb
mov
decl
push
jbe
xor
cmp
cli
shrl
jne
jb
push
int
out
test
sbb
mov
and
aad
mov
mov
push
fsubs
push
pop
das
add
dec
xchg
lret
aaa
clc
inc
xor
js
push
inc
add
out
adc
adc
push
inc
inc
mov
push
sbb
push
lods
push
push
cmpsl
add
jl
cmp
push
pop
cmp
or
push
add
int3
or
xor
mov
jle
inc
dec
jecxz
mov
bound
fiaddl
add
hlt
shr
adc
pop
jno
push
and
je
daa
std
jmp
fistpll
or
ret
jmp
sarb
or
jmp
pop
pxor
jmp
lea
dec
movsl
sarb
inc
adc
and
inc
std
test
xchg
push
pusha
jo
mov
movsl
jl
test
std
dec
outsb
cmp
cli
sub
pusha
or
jne
cmp
roll
lea
mov
sub
fidivl
aad
into
sub
mov
cmpsb
inc
jmp
rep
ss
neg
enter
or
pop
movsl
lock
push
add
sub
or
jecxz
pop
mov
jo
add
sub
push
andl
xchg
repnz
ret
cltd
xchg
fcomps
in
adc
push
out
mov
dec
push
pushf
pop
aam
pusha
pop
adc
pushf
pop
sub
je
push
popf
fisubs
add
push
mov
sarl
pop
mull
add
loope
pop
data16
shr
mov
sbb
lods
mov
push
mov
pusha
jle
xlat
movl
add
jmp
fdivrp
aas
clc
xchg
dec
push
add
cli
xchg
lock
lea
cmpb
dec
mov
pushf
adc
cmp
cmp
dec
dec
and
push
add
or
outsl
jae
into
add
test
or
jmp
xor
stos
dec
dec
inc
loopne
jns
adc
sbb
jne
mov
jge
mov
pop
jno
mov
in
add
sbb
insb
insb
adc
mov
pop
adc
xor
jo
jg
mov
cmc
mov
pop
cmp
je
fisttpl
add
test
loopne
dec
or
mov
fs
insl
mov
xor
push
add
pushl
loope
mov
jmp
pop
lcall
jo
or
xchg
das
cmp
jae
inc
std
fldpi
xlat
sahf
dec
add
je
in
inc
sbb
xor
cmpl
xor
decl
cmp
je
push
and
loope
mov
and
inc
sbb
xor
inc
arpl
add
dec
dec
or
mov
nop
mov
stos
and
pop
pop
dec
sub
sbb
add
jle
pushl
inc
stc
jne
dec
mov
mov
mov
test
out
mov
insb
arpl
push
jl
sbbb
sub
xor
or
add
add
out
loopne
sub
or
or
jg
xor
add
lret
shrb
jle
push
push
arpl
pushf
adc
pop
jo
lea
fstpt
out
and
sahf
jno
push
clc
jno
mov
adc
sbb
cld
imul
fildll
or
pop
jg
jmp
nop
add
jns
sti
pop
inc
cmp
jl
pop
pop
mov
leave
lock
loop
lods
push
outsb
js
test
ficomps
fstl
stos
orl
add
rolb
and
lret
aad
pop
inc
je
in
int3
les
dec
adc
pushl
or
gs
loopne
pop
inc
fmul
mov
cs
mov
or
rcr
int
loope
fdivs
aaa
inc
mov
pop
sbb
push
lret
movsb
incl
jbe
dec
call
jmp
and
lods
sbb
dec
cmp
pop
dec
or
pop
adc
adc
inc
or
sbb
push
mov
pop
je
mov
jle
mov
jg
push
shlb
popf
in
fscale
adc
and
adc
rclb
add
xchg
inc
outsb
fmuls
sti
pop
mov
rcl
in
stc
push
mov
ds
cmpl
adc
cli
call
cmp
and
inc
clc
add
jne
mov
cmp
lods
aam
or
cmp
xor
cmp
rolb
adc
sarl
pop
data16
adc
cmpsl
mov
adc
mov
xor
and
mov
push
xor
xor
xor
pop
sub
test
inc
out
pushl
lret
cmp
repnz
and
flds
sahf
sub
adc
decb
add
jbe
mov
pop
jnp
lret
je
int
cltd
aam
push
push
cmpl
xchg
adc
jne
add
push
jmp
jnp
cmc
pushf
cmp
or
je
xchg
je
arpl
fs
mov
sbb
or
fs
cmp
sbb
aad
jge
mov
pop
or
and
push
xor
push
add
stc
xchg
ret
mov
xchg
loope
mov
addl
fmuls
and
pop
cmp
or
stc
jecxz
enter
dec
je
dec
jne
mov
xor
hlt
add
jno
inc
mov
push
or
sbb
arpl
loopne
cmp
cmpsl
cmpsb
push
fldl
xchg
data16
dec
in
fsubrl
and
popl
pushl
fists
add
icebp
enter
jno
cli
inc
cs
arpl
adc
jnp
push
or
sbb
xchg
or
popa
or
mov
or
pop
out
pop
fcmovu
cmpb
or
fists
inc
cmp
je
pop
cmc
and
and
push
out
shlb
adcl
inc
push
sbbl
sbb
mov
ljmp
inc
cmp
jae
push
cmp
jl
mov
inc
add
pop
and
scas
aam
lods
mov
addb
pop
mov
testb
jne
clc
push
mov
in
loopne
push
add
into
add
push
ljmp
jb
pop
pop
pop
pop
sub
aad
add
cmp
mov
push
pushf
in
dec
stos
sbb
pushl
enter
adc
mov
icebp
cmp
scas
xor
std
mov
xlat
dec
mov
adc
or
incl
sbb
cmc
add
insl
xor
or
jne
and
cmp
imull
xor
jne
jmp
fcmovnb
out
scas
in
rcll
mov
mov
adc
dec
dec
mov
ss
cld
icebp
scas
push
loopne
cmpb
jle
xchg
data16
clc
mov
dec
add
cs
xor
inc
add
sub
inc
xor
add
nop
pop
sahf
das
aam
cld
sbb
lret
and
pop
mov
push
jle
pop
and
push
jbe
push
dec
loopne
clc
dec
imul
xor
cmp
jae
mov
adcl
jo
jl
ljmp
subb
mov
imul
and
and
test
jne
push
test
sbb
jl
add
dec
jg
adc
orl
mov
lret
pop
hlt
dec
adc
jne
aad
xlat
insb
shl
or
rolb
pop
nop
cmpb
mov
push
decl
scas
addr16
and
negb
std
jb
or
or
jne
js
pop
adc
movsl
xlat
dec
xor
repnz
andb
push
push
dec
or
mov
xor
cmpl
mov
lret
push
mov
push
mov
adc
sahf
add
cmc
fstps
pop
arpl
imul
add
push
or
sbb
and
nop
adc
xlat
je
mov
cli
es
mov
and
cmp
jb
testb
and
cmc
xlat
xchg
insb
testb
int3
loopne
pop
clc
or
out
gs
movsb
mov
movb
and
cmp
jne
cmpl
sub
jb
or
daa
mov
push
or
addl
in
push
out
sbb
movsb
gs
push
call
call
and
lea
lcall
push
movsb
add
xor
mov
adc
mov
sbbl
jnp
push
pop
push
cmp
shlb
push
sbb
jg
in
daa
mov
mov
inc
in
mov
and
push
and
sbb
icebp
push
sbb
xchg
add
sub
cmc
cld
pushf
push
dec
mov
mov
movsl
mov
adc
in
pop
push
test
inc
mov
or
push
push
push
outsb
ja
nop
mov
sbb
push
loop
mov
lods
sbbl
jge
shrb
mov
pop
push
mov
xchg
incl
jle
cwtl
and
sbb
call
mov
popf
mov
push
cld
push
jo
xchg
inc
or
add
mov
scas
movsb
or
clc
je
in
cmp
pushf
test
or
sub
mov
fiadds
cld
jle
inc
shlb
sub
pop
shl
xlat
arpl
fnstsw
pand
mov
adc
adc
sbb
cmpl
ret
dec
push
push
sub
dec
jle
sahf
or
push
sub
xor
push
movsb
mov
dec
xor
cmp
cld
mov
decl
cmpsl
xor
push
fmull
clc
fistpll
icebp
push
sahf
jp
cmp
nop
inc
fdivrl
xor
popf
inc
and
dec
lret
mov
sub
sbbl
sbbl
icebp
andl
jle
test
sbb
movsb
jno
inc
in
push
dec
or
fistpll
insb
and
pop
pop
cmp
fistl
loopne
or
add
push
cmpsb
jne
sub
lds
jge
pop
adc
adc
mov
xor
mov
push
lret
enter
sbb
pusha
test
cmpl
int
leave
adcl
mov
and
daa
test
movl
dec
ja
mov
or
adcl
and
sti
jb
enter
out
mov
mov
je
or
fnstenv
push
jne
rcrl
gs
andb
dec
mov
xor
mov
push
inc
out
and
rcl
sti
adc
inc
js
push
lahf
mov
cltd
aas
dec
xor
jl
push
and
sbb
loopne
sbb
inc
scas
add
arpl
loopne
fwait
mov
mov
add
jb
jo
bound
pushf
fisubrl
push
fstpl
pop
jmp
or
mov
arpl
leave
mov
and
and
add
inc
jns
sub
push
add
sub
insb
jbe
pop
inc
pushf
aas
push
shrl
sub
repz
or
mov
testl
lods
je
pusha
mov
cld
xor
dec
jle
adc
mov
push
and
sub
mov
adc
dec
loopne
fadd
and
push
push
push
lock
inc
les
sub
jmp
in
sub
mov
mov
and
or
cmp
lea
mov
mov
pop
sbbl
dec
cmp
mov
pop
test
inc
mov
add
subl
jmp
insl
in
rolb
cld
insl
mov
jns
pop
int3
push
or
cld
mov
cmp
test
dec
push
mov
jle
jmp
adc
inc
add
imul
push
lods
push
fsubr
and
test
movsl
inc
mov
sbb
outsb
dec
fldl
push
jmp
sbb
push
testl
sub
icebp
jb
push
or
shll
jb
xor
call
pop
testl
mov
mov
aaa
sub
and
sub
loopne
in
push
or
test
test
clc
pop
mov
pop
pop
mov
xor
inc
jg
xchg
adcl
mov
sub
bound
xor
adc
xor
cld
aas
hlt
sub
adc
ret
adc
test
adc
add
jg
popa
push
clc
cmp
jb
cmp
jb
mov
push
ficoms
mov
xor
jb
mov
mov
lock
jae
inc
add
outsb
pop
inc
add
jbe
test
call
fiaddl
loopne
xchg
popa
dec
pop
add
ret
dec
or
xchg
xor
jge
mov
idivl
sti
mov
adc
xchg
inc
mull
cmp
sub
int3
loopne
cmp
push
imulb
xlat
push
mov
loope
and
lret
stos
mov
cmpsb
test
add
cmp
jge
clc
or
lea
jl
sub
dec
add
push
cmpsb
jns
jmp
push
inc
out
mov
adc
inc
mov
mov
lret
clc
or
adc
repnz
cmp
sbb
mov
sbbb
cli
inc
cmp
jle
push
adc
push
rcrb
adc
sub
or
shrl
es
rclb
cmp
mov
scas
cmpsl
lret
add
inc
mov
push
les
je
testb
cmp
in
push
and
outsb
daa
pop
ret
mov
cmpb
std
jmp
out
inc
mov
jnp
mov
sbb
leave
mov
push
inc
std
jg
mov
jle
int3
std
sbb
cmp
je
dec
sub
cmp
clc
inc
int3
sub
jg
call
imull
dec
movsb
cli
cmp
pop
add
ss
sub
sub
sub
jne
scas
sub
scas
mov
push
adc
pop
lock
les
jo,pt
mov
decl
xor
or
sbb
or
mov
or
push
inc
push
ret
push
dec
xchg
das
mov
adc
mov
cmp
or
ljmp
or
mov
jbe
adc
cmp
push
jnp
cmp
ret
js
cmp
rolb
mov
xor
ret
test
pop
cmp
cmp
fucomi
cmp
and
inc
cmp
add
add
sub
add
push
divb
js
nop
sbb
shl
je
pop
movsl
into
ret
xchg
push
out
push
imul
xor
call
jmp
dec
mov
mov
adc
fidivl
adc
push
outsl
nop
jl
outsl
push
push
dec
adc
push
and
mov
dec
push
pop
outsl
inc
or
cmpsl
sbb
jl
pusha
jle
or
cmp
outsl
ja
jo
mov
aad
mov
sbb
arpl
push
or
mov
ret
cmp
dec
stos
shlb
sub
and
or
dec
mov
or
jne
test
push
xor
add
jg,pt
fcomps
call
icebp
push
push
xchg
aam
push
test
adc
shl
push
in
add
sub
lock
in
lock
rep
insb
push
cmp
jne
or
adc
sbb
xor
sti
aad
mov
push
push
ret
jo
push
pop
jmp
insl
and
sbb
movsl
mov
test
faddp
hlt
shll
stos
adc
and
inc
push
icebp
push
les
cs
out
pop
xlat
or
pop
loope
jecxz
pop
pop
xchg
pop
xchg
ret
idivb
sub
scas
push
push
clc
les
outsl
xor
mov
in
cmp
sbb
mov
add
mov
scas
cmp
call
add
dec
cli
add
dec
sti
ret
movsl
lahf
mov
and
rorl
cmpsb
mov
sub
lods
lods
mov
loopne
fcoml
lods
lods
mov
mov
clc
or
mov
les
idivl
lock
lea
shll
enter
dec
cld
jl
mov
pop
add
rol
push
ljmp
add
test
fcoms
nop
xchg
push
je
xchg
dec
mov
test
add
pop
mov
push
cmpsl
xor
sbb
xchg
dec
pop
dec
into
popa
aas
dec
sbb
jge
pop
jmp
jge
sbb
jns
mov
call
xor
imul
in
push
adc
push
pop
out
inc
ss
inc
dec
inc
pop
aas
mov
outsb
jle
and
lods
xchg
and
imul
ss
mov
ret
cmpb
pop
add
inc
jnp
idivl
inc
adc
push
cwtl
sub
or
jno
push
push
js
outsb
aam
mov
xchg
loop
pop
xchg
out
jns
out
push
loopne
ror
rclb
out
pop
iret
imul
push
sub
mov
out
in
push
sub
sub
mov
mov
fadds
add
jns
jb
pop
mov
out
mov
mov
or
push
fs
jns
out
je
test
aaa
pop
inc
mov
adc
enter
daa
ret
add
lcall
or
ja
adc
adc
scas
outsl
hlt
stos
adc
sbb
fimull
cmp
inc
mov
jne
jo
sub
jmp
mov
sarb
xorl
mov
ja
xor
push
loope
loopne
sbb
cmp
adc
clc
cmp
ja
cmp
jo
inc
aam
popa
push
push
or
and
jne
ds
rolb
mov
sbb
add
pusha
mov
lret
das
aad
inc
sub
sub
rorb
cmp
ljmp
and
add
je
jl
test
pop
jmp
push
dec
daa
or
or
xor
pop
out
sbb
je
mov
shl
sub
test
add
outsb
pop
or
jle
rolb
std
push
std
inc
jb
add
add
jb
test
in
adc
cwtl
mov
xor
in
out
sbb
inc
dec
sub
ret
adc
push
cld
sbb
adc
cmpsl
in
or
mov
add
fcoml
push
cmp
sub
sti
mov
ret
inc
add
fs
pop
mov
cmp
ds
jae
mov
push
mov
cmp
jb
cld
orb
lea
sub
or
ja
sar
push
lea
sub
jbe
jno
rcrl
mov
add
xor
inc
out
xchg
pop
pusha
dec
pop
xchg
or
pop
add
and
mov
sbbl
add
ret
andl
xor
rcr
call
or
pop
pop
adc
sub
loope
add
repnz
pop
repnz
jno
sub
sub
push
pop
add
xchg
fldl
lahf
or
je
xchg
cmp
stos
test
scas
ds
adc
mov
shrb
sub
push
mov
mov
lods
xor
xchg
popf
imul
pop
adc
clc
add
and
les
mov
test
pushf
testb
add
xor
and
cmc
insl
aaa
shl
push
call
dec
sbb
mov
xchg
jge
sub
xchg
jne
lahf
pop
pop
mov
mov
or
pop
stos
jl
mov
clc
js
or
or
adc
std
into
adc
adc
jno
pop
cmp
jne
mov
add
pop
fcmovnu
pop
in
sub
pop
cmp
ja
insl
mov
or
ja
adc
addb
add
cmp
jae
insb
or
sahf
fwait
loopne
jb
push
clc
jbe
add
pop
or
int
scas
dec
dec
test
jne
sbb
pop
test
pop
add
cs
jl
mov
adc
sbbl
test
jne
test
cmp
inc
push
push
ja
addb
call
es
cmpsb
add
fisubs
push
and
mov
test
mov
arpl
and
pop
mov
xor
push
cmp
push
sub
pop
dec
ret
adc
mov
cmpb
jmp
pop
insb
popa
pop
and
sub
mov
add
pop
or
daa
mov
add
mov
adc
or
fcomps
add
incl
arpl
push
mov
aas
sub
mov
add
or
loope
or
lea
stos
add
cmp
adc
sub
mov
mov
adc
jne
lea
daa
or
fwait
popa
xor
mov
add
push
adc
fsubl
leave
mov
jmp
add
jle
scas
inc
div
mov
and
xor
mov
popf
out
and
add
pop
add
enter
lea
test
add
pop
orl
or
cld
js
jo
ficoml
push
movsl
xor
data16
push
cs
push
push
loope
cmp
xchg
inc
inc
push
add
cld
cmp
dec
and
mov
test
mov
dec
push
sbb
lods
jmp
and
je
or
cmpsl
push
and
outsb
lock
or
test
add
mov
test
xor
fucomp
leave
sub
mov
cmp
movsb
aas
lods
test
sti
rorb
push
roll
sarb
and
and
push
shlb
inc
jmp
push
inc
cmp
jb
push
pop
sbb
outsl
push
mov
sbb
cmpl
ja
add
popa
rorb
popa
sub
or
popf
ss
sbb
pop
cs
cltd
push
mov
mov
insb
push
adc
mov
push
adc
and
fstl
push
cmp
lock
mov
sar
jne
movl
cmp
nop
jmp
inc
std
jne
xor
xchg
sbb
fldt
out
xor
jno
cmp
les
fwait
cs
in
loope
dec
sub
sub
clc
sub
imul
mov
cmp
or
push
mov
and
mov
mov
mov
std
dec
call
lock
out
shr
push
sub
std
fs
push
jmp
fs
cmp
cltd
pop
xchg
push
out
push
and
cwtl
les
xor
push
jge
push
inc
rolb
jnp
jae
cmp
jbe
iret
je
std
das
push
jne
mov
test
jae
imul
dec
inc
pop
leave
inc
push
xchg
rorb
lock
loop
aaa
jmp
push
into
sub
aas
movsl
pop
ds
jmp
inc
sbb
or
add
jg
add
clc
jbe
ljmp
les
add
pop
jg
inc
loopne
xorb
xor
inc
rcrb
push
mov
fsubrp
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
and
je
xorl
sbb
add
shll
pop
das
loope
jle
xor
ret
push
mov
inc
dec
jne
fisubl
ret
movsb
mov
cltd
add
mov
inc
sbb
xor
inc
jmp
jmp
push
call
lds
mov
faddp
cmp
loop
inc
movsl
or
and
dec
add
or
sub
sahf
mov
sti
rep
andl
pop
jno
cmp
loopne
cmp
or
adc
jecxz
cltd
inc
push
mov
int3
cmp
sub
ljmp
xor
std
and
inc
mov
push
or
pusha
push
clc
add
loopne
jecxz
or
xor
inc
jmp
xor
dec
sbb
movsb
sti
sbb
mov
pop
xor
add
lret
bound
ret
fcomps
arpl
pop
sbb
jno
push
pop
ja
es
mov
lock
jmp
push
and
loopne
sub
push
jecxz
and
shll
outsb
ds
adc
and
int3
pop
movl
mov
mov
outsl
cmp
cmp
mov
pop
cmp
jne
sbb
pop
adc
mov
ds
adc
inc
mov
movsb
jb
into
sbb
data16
mov
inc
inc
sbb
sub
jne
and
lret
sub
and
rcrb
cwtl
rolb
mov
bound
push
cwtl
mov
jne
addr16
pushl
out
repz
cwtl
sarb
es
push
cmpl
sbb
adc
pop
cmp
add
sub
push
decl
jne
sbb
out
xor
popa
rclb
movsb
mov
mov
inc
rorb
enter
add
cmpl
insb
xor
push
pop
ret
jo
aam
movsl
sub
or
inc
add
or
incl
xor
cmp
je
push
mov
push
ret
sub
sbb
adc
lock
pop
in
pop
cmp
lea
jbe
outsb
inc
and
ret
cmp
jle
sbb
jo
loope
clc
and
or
inc
insb
mov
rorb
sub
jmp
sub
data16
adc
jge
adc
into
and
xchg
inc
mov
imul
xor
leave
nop
sbb
mov
cmp
int
mov
add
cmpsb
imul
lock
cltd
aaa
mov
inc
inc
jecxz
and
lds
fdivl
or
cmp
imul
push
sbb
dec
loope
cmp
mov
push
dec
imul
repz
cmp
je
mov
xor
xchg
and
xchg
loop
xor
aas
push
jl
lret
mov
pop
mov
imul
dec
xor
push
aas
add
xor
out
das
cmp
repz
js
lret
pop
jnp
or
std
loop
sarb
cmp
fxch
fnstcw
add
sub
sbb
adc
cmp
fsubr
push
and
testl
push
push
mov
data16
mov
xlat
data16
sti
cmp
jne
mov
mov
jmp
adc
outsl
jo
pop
aaa
test
enter
pop
les
imul
mov
int
xor
mov
or
fsubrl
fdivr
xorl
jne
orl
nop
flds
xor
cmpb
jle
sub
lds
pop
pop
imul
mov
and
or
jl
cmp
jg
test
hlt
adc
out
xor
les
icebp
adc
xor
jne
imul
in
pop
inc
jo
jge
aas
sbb
dec
enter
enter
mov
popa
ss
sub
pushl
pop
adc
dec
sub
jne
enter
xor
fsubrl
add
adc
mov
incb
jecxz
std
and
or
inc
adc
cmpsb
hlt
or
push
cltd
pop
idiv
push
negb
insb
pop
cmp
mov
loopne
push
mov
arpl
sbb
fistps
mov
xlat
xchg
xor
ret
cltd
imull
sub
mov
lea
cltd
es
mov
jp
imul
lea
in
fs
dec
js
ja
cli
pop
sub
add
sbb
lea
jmp
add
lods
dec
adc
add
or
pop
sbb
jo
xor
or
cmp
jle
sub
jmp
icebp
xchg
out
shll
sbb
mov
pop
adc
jne
imul
dec
and
and
leave
call
pusha
adc
add
xor
push
jmp
mov
loopne,pn
filds
or
out
jbe
mov
add
jg
ltr
decl
sbb
sub
push
lock
incl
fnstenv
in
push
lock
hlt
aam
jae
inc
jg
add
cli
pop
add
mov
add
in
push
in
xor
inc
add
adc
push
lock
jbe
xor
add
imull
adc
adc
adc
cmp
jne
and
xor
cmp
xchg
pop
push
push
push
push
or
stc
ss
xor
ret
or
enter
mov
push
shll
lahf
pop
mov
mov
push
sbb
ss
jnp
pushf
jmp
cmp
sahf
pop
push
jg
je
mov
or
jge
push
pop
mov
xor
add
aas
push
pop
push
push
jnp
sbb
loop
push
das
popa
xchg
mov
xlat
mov
data16
mov
cmp
jl
cmp
jg
push
jle
jge
int
xor
mov
push
popf
pusha
mov
push
jle
imul
push
pop
inc
add
pop
jmp
inc
xor
add
adc
sbb
pushf
or
mov
orb
sbb
sub
icebp
sbb
adc
sbb
sbb
xor
sub
pop
push
js
pop
xchg
mov
mov
fsubl
pop
es
push
sub
xor
and
add
orl
test
jmp
inc
je
or
pushf
test
inc
pop
shlb
push
jl
inc
push
dec
or
bnd
xor
outsl
aas
pop
or
xor
es
xchg
ja
push
push
push
xor
add
push
lock
add
lea
stos
jge
jns
sub
test
push
adc
rolb
sbb
fwait
test
add
lea
push
lea
lods
sub
cmp
sbb
push
mov
adcb
and
xchg
inc
adc
subl
add
push
sbb
jb
mov
loop
adc
mov
inc
mov
repz
idiv
and
mov
sub
outsl
jmp
ss
pop
leave
mov
or
sub
dec
push
jb
add
rolb
stc
ret
cltd
sub
and
scas
int3
outsl
imul
mov
pop
pop
sub
adc
inc
add
or
ss
sbb
jl
dec
adc
add
test
mov
push
xor
flds
or
pop
cltd
cld
in
test
push
push
sbb
push
mov
call
push
scas
push
inc
fldcw
sbb
mov
pop
cmp
add
cmpsl
mov
test
sbb
cmp
or
pop
or
jno
dec
jae
or
mov
or
jge
push
push
push
and
mov
add
or
jge
inc
repnz
fnstcw
fiaddl
sbb
sbb
cmp
sbb
jne
sub
pop
and
sbb
icebp
ja
pop
xor
push
shr
inc
push
xor
cld
out
dec
push
daa
shr
rcr
shr
rcr
or
lods
ds
in
sbb
lock
xor
cmp
es
std
ja
jb
cmp
add
out
dec
pop
push
loopne
fiaddl
sbb
loopne
ret
ret
push
bound
out
and
mov
cmp
adc
sbb
jl
in
loopne
pop
push
or
ret
jns
jmp
inc
xor
or
cmp
mov
or
adc
out
or
sub
adc
push
or
shll
adc
sbbl
sub
mov
ret
cmpl
mov
mov
push
mov
rcll
xchg
or
pop
bnd
or
rcr
ror
repz
enter
adc
fidivl
pop
dec
mov
iret
sub
xchg
shlb
and
sub
mov
add
lahf
inc
dec
push
das
xchg
mov
sub
inc
jmp
fmul
cmc
pusha
xchg
lock
jmp
movsl
inc
aas
aam
neg
pop
mov
sub
idiv
rorb
mov
adc
leave
fs
push
popf
cmp
push
jne
pop
pushl
imul
cmpsb
inc
js
push
lock
push
jl
addb
mov
jb
cmc
pop
mov
clc
into
push
test
inc
sbb
call
in
mov
adc
in
sub
sbb
pop
clc
sub
add
stc
push
pop
add
or
cmp
loopne
aam
inc
push
clc
movsl
int
sub
and
mov
bound
inc
pop
or
scas
or
jb
add
sbb
fmull
sbb
xor
pop
cmp
inc
cmp
dec
dec
imul
sbb
adc
adc
test
push
cli
add
in
sub
fsubrl
in
sub
std
incb
jb
mov
je
sbb
ss
push
jp
mov
call
test
xor
inc
loopne
cltd
je
cmpsb
cmpsb
fcompl
ret
mov
aas
stc
lock
push
rcrb
and
and
push
adc
inc
sub
ss
mov
movsl
in
inc
arpl
test
xchg
or
push
test
add
cwtl
sub
pop
fcoms
add
subl
jbe
xchg
and
outsb
dec
pop
pop
int3
cmp
jl
gs
insb
sbb
inc
push
cmc
push
enter
mov
mov
neg
movsl
adc
jb
sbb
out
pop
jb
or
xorl
pop
inc
mov
jo
add
jae
mov
test
lock
sti
cld
scas
cmp
adc
push
mov
pusha
push
cmp
or
mov
shll
add
insb
or
push
cli
cs
arpl
testb
jbe
sbb
sti
lods
fs
push
mov
sub
push
pop
adc
mov
bound
or
xchg
insb
lock
push
push
imul
mov
mov
stos
dec
inc
push
mov
inc
and
mov
incl
in
mov
and
sti
in
pop
and
pop
add
lea
push
test
push
adc
add
rcrb
push
lahf
pop
addl
jne
push
or
test
das
arpl
daa
orl
jecxz
jp
push
cmp
mov
imul
xchg
call
out
imul
ret
jae
sub
mov
push
add
sahf
popf
xor
pop
mov
or
mov
test
sub
insb
and
cli
mov
pusha
dec
fmuls
adcb
adc
pusha
test
or
jg
cmp
cmp
jge
imul
mov
andl
clc
ret
cmp
mov
aad
nop
lods
or
pop
add
sbbl
fdivrs
cmp
inc
scas
ds
lea
mov
popl
push
js
pop
mov
fs
pusha
mov
mov
jmp
leave
push
sbb
push
pusha
lock
test
adcb
inc
sub
xor
test
js
ja
fildl
cmp
mov
and
and
xor
xchg
rolb
push
aam
mov
jo
add
jmp
push
push
push
xorl
mov
enter
add
mov
or
popf
sub
loopne
sbb
data16
loop
les
adc
jmp
add
push
inc
push
jmp
ja
and
cmp
adcl
adc
call
je
cwtl
cmp
into
push
pop
push
pop
sbb
cld
adc
cmpsb
iret
add
add
mov
mov
adc
dec
add
daa
mov
fld
jo
pop
dec
ret
dec
decl
popf
add
adc
push
push
out
pusha
mov
out
add
add
xor
add
jo
aad
popa
push
aam
mov
sub
and
incl
cld
or
fdivl
mov
sahf
ret
push
inc
mov
adc
push
mov
mov
rcr
outsb
mov
sti
and
or
xchg
add
inc
cmpsl
push
xchg
jnp
imul
sub
cmp
ss
jmp
xor
pop
add
shlb
add
clc
lods
dec
inc
mov
je
pop
sub
add
sarb
sbb
and
mov
xchg
jmp
pop
sti
stc
add
sbb
icebp
xchg
xchg
roll
je
and
or
cmp
and
add
mov
push
mov
mov
add
xor
sbb
test
pop
add
cpuid
jmp
adc
jbe
pop
push
andl
xchg
pop
add
lods
push
mov
out
insb
push
mov
mov
jmp
mov
sbb
add
movsb
repnz
rcll
jge
fiadds
stos
cmp
loopne
shrl
inc
dec
shl
lea
cmp
jb
add
mov
loope
testl
push
orl
inc
and
pop
add
mov
xorb
add
pop
cmp
jne
mov
subl
and
and
inc
xlat
mov
js
add
xor
add
and
test
add
gs
cmp
je
inc
inc
or
add
jne
repnz
add
push
sar
inc
push
push
adc
js
lret
jb
sub
gs
loopne
xchg
cmp
ss
sbb
inc
shlb
inc
xor
pusha
cmp
pop
ret
jmp
sbb
test
addb
mov
inc
adc
in
out
popa
or
sti
or
sub
out
int
add
push
pop
inc
xchg
ficomps
xor
xor
adc
mov
dec
pushf
inc
cmp
mov
push
dec
pop
push
dec
clc
or
mov
call
mov
out
data16
or
or
push
and
imul
inc
mov
insl
mov
js
into
mov
addr16
shlb
push
sbb
int3
mov
sar
test
add
push
sbb
sbb
or
rcrb
and
mov
rorl
pusha
pop
subb
andb
add
cmp
frstor
loope
jb
mov
cmp
mov
adc
sub
call
fimull
je
mov
fmull
push
push
or
add
shl
repnz
add
jmp
pop
shl
add
pusha
dec
dec
add
and
push
cld
outsb
pop
xchg
std
ror
inc
or
inc
adcl
mov
xchg
je
xorl
adc
or
in
push
orb
jmp
xchg
addl
dec
dec
mov
push
roll
adc
aas
push
aaa
xor
ds
mov
add
jmp
adcl
lret
or
je
and
dec
movl
jl
icebp
adc
loope
pop
notb
sbb
test
mov
or
jae
mov
pop
loope
sub
and
lret
dec
mov
cmp
or
adc
shl
outsl
push
dec
mov
inc
mov
sahf
mov
hlt
add
push
enter
sub
pop
cld
add
cmpsb
jge
mov
jmp
jge
sub
and
pop
aas
sbb
and
and
sub
test
gs
or
cmp
pop
shrl
sub
testb
adcb
and
pop
push
push
pop
sbb
aaa
xchg
fwait
push
cld
dec
xchg
mov
xchg
pusha
add
mov
jp
iret
mov
jg
mov
hlt
xchg
mov
js
xchg
lret
add
push
add
or
sub
jo
leave
into
arpl
nop
cmp
adc
pop
lahf
dec
push
sbb
ror
dec
inc
and
sbb
adc
stos
mov
es
testl
fsubrs
or
dec
or
lock
mov
push
or
mov
lods
lret
test
mov
inc
shrl
aas
push
push
mov
mov
add
or
shlb
push
cmp
imul
sbb
cmp
cmp
pop
dec
lock
dec
xor
pop
add
mov
test
sti
loop
adcb
or
mov
not
push
insb
in
and
rcrl
sbb
nop
outsb
mov
std
pop
pop
pop
sbb
jl
mov
stc
or
add
mov
pushf
popl
xchg
pshufw
push
mov
pop
sbb
add
ss
jbe
cmp
mov
rolb
bound
arpl
ficompl
mov
imul
shrl
push
pushf
push
xchg
mov
push
xchg
add
or
fldt
sub
add
mov
xlat
sbb
add
out
ret
insl
jmp
inc
jb
lcall
mov
clc
dec
xlat
lods
fidivrl
cmc
pushf
popa
shlb
cmc
cwtl
adc
jbe
pushl
out
sbb
or
adcl
hlt
and
sarb
and
shrl
sub
xchg
negb
mov
push
mov
adc
jl
ja
push
call
scas
sbb
pop
push
cmp
int3
pop
dec
jge
pop
testl
mov
out
add
cmp
inc
pop
aam
movsl
push
popa
sub
int
mov
cmp
in
sbb
cwtl
mov
fs
cmp
mov
sbb
sbb
pop
xchg
inc
jmp
push
pop
mov
jne
sbb
sub
pop
push
imul
in
mov
jmp
addl
roll
in
mov
mov
or
mov
mov
add
das
adc
ss
add
arpl
add
and
aam
xchg
fidivs
push
mov
adc
sbb
cmp
lret
add
add
sbb
mov
int3
jo
xchg
ret
push
jp
and
imul
nop
sub
je
jns
inc
jb
adc
dec
aaa
mov
lcall
push
dec
jge
pop
cmp
aaa
inc
inc
mov
mov
adc
inc
cmpsb
add
lret
sbb
add
add
adc
mov
call
aaa
inc
cld
push
sti
fmuls
cmp
nop
lods
stc
cmp
adc
mov
push
test
inc
test
pop
cmp
pop
stos
adc
add
lret
movsl
aas
aad
cmp
shrl
cltd
add
cmpsl
mov
mov
sbb
outsl
clc
inc
add
or
push
dec
or
lret
cli
sbb
ljmp
or
fld
jb
inc
add
cmp
jb
aad
gs
lahf
xor
cs
int
hlt
add
xchg
inc
pop
xlat
sbb
cs
popa
stos
movsb
sarl
mov
shr
not
movsb
push
bound
ljmp
mov
adc
push
lahf
imul
shlb
adc
push
push
push
push
push
push
adc
push
cli
sbb
pop
sub
sbb
call
xchg
cli
mov
push
dec
push
pop
mov
or
dec
jmp
inc
movsl
aas
in
pop
gs
mov
popl
divl
ds
jmp
sbb
jo
int
add
jo
push
and
pop
stc
lcall
sbb
push
out
push
sbb
push
mov
adcb
jmp
mov
mov
add
jp
sahf
mov
out
mov
rcrb
xlat
cs
push
dec
insl
fiaddl
push
and
and
push
or
mov
loopne
insb
xor
jmp
lret
or
adc
mov
mov
ss
mov
lock
or
adc
mov
lcall
scas
and
sub
cld
shr
mov
imul
mov
inc
and
push
dec
or
shrl
cmp
adc
push
cld
push
icebp
pushl
or
ret
je
cli
add
sub
push
fildll
fnstsw
cmp
jne
xchg
pop
mov
je
shr
lea
ljmp
mov
mov
dec
cmp
pop
dec
loopne
pushf
mov
cmp
sub
rclb
dec
imul
ljmp
mov
cmpsb
decb
push
or
add
add
clc
and
into
in
cmpsb
setae
inc
and
sti
add
mov
incb
fidivs
mov
mov
imul
xor
and
cmp
je
inc
jno
mov
cmp
shr
testl
jne
sub
cmp
jle
jmp
lea
das
mov
xor
xor
pop
dec
pusha
dec
pop
pop
lret
dec
xor
and
iret
ret
les
fidivs
sti
push
pop
pop
lock
mov
push
pusha
fidivs
or
adc
jo
popa
pusha
mov
mov
inc
mov
mov
lock
push
push
or
or
mov
dec
or
jmp
dec
adc
iret
push
lods
dec
push
mov
movb
push
orl
int
lock
imul
dec
loopne
call
lods
ffreep
loope
add
pop
enterw
adc
aas
mov
imul
gs
push
or
cld
in
popa
frstor
dec
inc
adc
inc
push
mov
add
and
jbe
gs
out
and
in
pop
int
mov
mov
adc
push
ljmp
push
add
iret
ret
push
loopne
mov
insl
or
mov
sub
pushf
push
mov
daa
mov
shrb
rol
call
push
outsl
push
add
mov
or
out
push
sarl
add
xchg
cmp
negb
les
sbb
ret
imul
push
mov
mov
and
adc
repnz
sbb
pushf
jmp
orl
mov
orb
mov
and
xchg
push
mov
add
loope
je
movb
inc
dec
stc
ljmp
rorb
incb
pop
mov
add
inc
dec
jne
repz
push
inc
cmp
adc
add
sub
jns
cli
xchg
ret
push
call
jge
sbb
cmp
ja
sub
shr
pop
jecxz
add
clc
incl
nop
cld
ja
loope
or
adc
out
inc
inc
cld
lock
jno
fldl
iret
dec
jne
mov
cmp
dec
loopne
add
adc
jmp
sub
fs
inc
popf
mov
fistps
inc
inc
mov
lock
push
mov
jne
or
and
ljmp
adc
or
adc
pop
clc
or
jne
xlat
sub
pop
push
pusha
and
shr
jb
cld
cmp
dec
cmp
stos
mov
add
and
jbe
mov
test
outsb
mov
mov
fstps
cmp
stos
lret
cmpb
mov
add
andl
and
inc
stc
sbb
clc
and
nop
es
test
in
add
cmp
nop
push
inc
jae
dec
or
push
jns
push
into
add
mov
stos
movsl
adc
cmpsb
incl
cmp
xor
fstpl
adc
imul
jg
mov
jle
mov
in
lcall
movsb
shlb
iret
fisubs
jo
js
and
and
out
loopne
mov
sub
push
test
push
xor
adc
stos
insb
xor
popw
and
clc
jl
mov
inc
or
jnp
xchg
sub
pop
xor
push
dec
cmpl
dec
jp
movsb
cmp
ret
sbb
punpcklwd
xor
cmp
fdivrs
mov
fistps
sub
orl
cmp
ja
ja
sbb
ficoms
add
mov
jo
mov
loope
lea
mov
jo
xorb
mov
lods
push
cmp
in
jb
lods
decb
into
mov
dec
cmp
rdmsr
cmp
xchg
arpl
mov
sbb
jb
push
adcb
push
mov
lods
pop
and
lock
push
dec
push
push
push
jecxz
scas
push
inc
into
call
out
adc
jmp
push
mov
aam
push
imulb
lock
fldcw
push
nop
cmp
sub
insl
and
or
cmp
jb
push
jne
mov
dec
inc
cld
fnstenv
jmp
sub
mov
xor
aaa
arpl
push
out
adc
xor
ret
out
loope
pop
scas
push
sub
pop
lcall
lods
cmp
je
scas
inc
mov
mov
cli
loope
inc
adc
and
pop
iret
mov
xor
jo
jno
mov
or
push
add
dec
mov
out
repz
mov
and
jne
mov
push
pop
or
leave
inc
test
inc
push
pushf
mov
les
sub
icebp
sbb
and
push
test
sbb
sbb
cmp
ss
push
jg
loopne
dec
cmp
into
in
and
mov
decb
jne
dec
das
cmp
repnz
jmp
jp
xor
int3
dec
mov
ja
dec
bound
dec
push
and
push
clc
into
xor
dec
shll
xor
cmp
inc
mov
or
ror
dec
je
xor
sub
mov
mov
and
cmc
subb
cmp
or
mov
or
or
mov
in
mov
or
cmp
lret
sub
adc
into
ljmp
and
mov
hlt
mov
lea
sub
cmp
into
pop
add
and
or
fcmovnbe
inc
add
es
inc
sbb
push
lcall
cmp
adc
add
push
inc
push
ret
insb
jge
push
push
push
xor
sbb
in
daa
dec
loopne
mov
loopne
leave
add
or
pop
push
or
or
jo
dec
ret
adc
rclb
dec
and
imul
sti
test
pop
mov
cmp
fcomps
sbb
sub
sbb
push
shll
adcl
push
pop
adcb
dec
jnp
js
sub
pop
lock
cmp
loope
or
pop
leave
mov
insl
inc
pop
mov
sub
or
xor
das
sti
add
gs
and
ss
dec
mov
ret
outsl
sub
xchg
sbb
adc
sbb
cmc
shlb
mov
xchg
xchg
push
sub
lret
mov
inc
adc
pop
sbb
inc
lods
loopne
sub
and
mov
sbb
lcall
jmp
ljmp
jne
push
mov
add
cmc
cltd
adc
stos
or
adc
add
pop
dec
inc
bound
lcall
nop
es
mov
adc
sbb
loopne
dec
les
xlat
punpckhdq
inc
cmp
inc
cmp
push
push
inc
cmp
adc
or
cmp
or
outsb
stos
mov
adc
fistl
or
mov
rorl
fxch
pop
jns
or
sub
fst
jo
inc
dec
jmp
adc
adc
pusha
pop
mov
mov
cmp
push
xor
call
aaa
or
mov
sbb
pusha
shll
inc
pop
mov
adc
dec
cmp
pop
inc
cmp
jne
or
test
out
dec
fsubr
into
mov
jge
inc
out
pop
je
xlat
jne
lods
mov
fadds
int3
add
je
xchg
push
rolb
out
jecxz
xor
pop
or
push
sbb
pop
add
or
and
cmpsl
cmp
inc
push
push
pop
div
loopne
test
mov
aas
or
fsubs
cld
clc
jbe
mov
cmpsb
sbb
test
cmp
push
cmp
add
jmp
add
hlt
hlt
mov
dec
mov
xor
xlat
shlb
cmp
pop
cltd
and
outsl
inc
loopne
mov
inc
adc
insl
div
inc
or
je
xchg
sbb
add
add
cmpsl
xchg
dec
arpl
jle
in
test
or
in
add
push
push
sbb
sbb
loope
adc
and
push
or
jne
or
push
sub
shll
ja
fistpl
sbb
adc
mov
cmp
or
inc
push
or
xor
loope
in
fdivr
outsb
cmp
hlt
sbbb
fstpt
lds
inc
adc
outsl
push
aad
addl
mov
sub
push
gs
in
daa
mov
mov
ja
mov
sub
cmp
je
movl
or
call
fcoms
outsl
mov
push
mov
hlt
jecxz
jmp
decl
jnp
lahf
ds
inc
and
fcompl
jl
sub
push
ficomps
mulb
jl
mov
xor
xchg
push
rol
ret
pop
xchg
adc
es
clc
xor
inc
or
cmp
daa
lea
psrld
cmp
inc
pop
adc
add
ljmp
addr16
cmpsl
push
cmc
push
push
shll
mov
stc
int3
cmp
aam
push
jb
stos
push
xlat
push
int3
jl
dec
mull
sub
stos
jg
add
add
add
leave
in
sbb
sbb
push
xor
movsl
adc
stos
add
cmp
ja
pop
dec
test
aas
push
into
or
push
in
push
sub
lods
jnp
lcall
fstl
lret
jmp
sbb
pop
sbb
jle
sub
sbb
and
xor
test
les
add
push
dec
js
cmp
push
and
sub
cmc
cmp
push
in
add
sbb
and
aaa
mov
out
sbb
shll
push
test
mov
push
or
outsb
mov
xchg
adc
ss
dec
dec
dec
sub
xor
dec
dec
dec
sbb
cmp
jbe
mov
cmovs
in
in
push
push
pop
cmp
cmp
push
insb
jo
js
imul
adc
mov
xchg
cwtl
xchg
dec
xor
pushf
mov
jno
mov
add
xor
shlb
add
test
insl
mov
je
mov
push
and
data16
mov
nop
adc
orb
sbb
cltd
nop
pushf
and
imul
xchg
push
out
ret
adc
add
pusha
addr16
ret
mov
xor
sarb
sbb
dec
jne
add
das
cs
mov
mov
jle
arpl
in
mov
ljmp
xorl
or
ret
add
jmp
mov
pop
dec
popf
inc
jp,pn
push
xor
fwait
mov
dec
leave
inc
sbb
insl
aaa
inc
pop
xor
push
fcoml
push
mov
jmp
xlat
mov
rorl
ss
mov
aam
mov
ds
test
jmp
sbb
xlat
mov
jns
rcr
cld
lea
push
push
mov
pop
jo
fsubs
cmp
cwtl
or
cli
mov
icebp
or
lea
repz
pop
adc
popa
cmp
mov
add
sbb
lods
or
fdivp
jnp
popf
test
mov
je
popa
dec
mov
in
and
inc
movsl
push
jbe
adc
aaa
push
cmpb
jne
xchg
dec
push
sub
lock
rcll
lea
jmp
js
cltd
scas
lea
fwait
cli
enter
pop
fdivr
sub
out
fadds
imul
frstor
fmuls
mov
or
add
loop
aaa
jo
testb
rclb
lock
out
dec
or
add
xorb
xor
cmp
ret
mov
sub
arpl
jno
repz
jg
je
mov
add
shll
fs
lret
mov
adcb
es
popw
jmp
pushl
mov
mov
dec
mov
pop
xchg
sub
je
or
je
dec
je
dec
adc
aaa
mov
cmp
pop
push
mov
push
pushf
jb
mov
imul
push
xchg
xor
addb
insb
add
and
in
roll
rol
sbb
scas
inc
add
adc
mov
aam
fidivs
jne
sbb
inc
orb
mov
into
jne
fcoml
inc
cs
jge
or
adc
or
adc
jmp
dec
bound
test
insl
lock
sbb
push
ret
dec
adcl
pop
add
addb
mov
inc
aaa
xor
sub
adc
cmp
push
ficomps
js
sbb
cmp
mov
sbb
jmp
lcall
pop
or
sahf
pop
pop
lds
test
sbb
insl
cmp
add
and
adc
jl
dec
add
dec
jns
sub
push
adc
push
jmp
pusha
das
mov
lea
sub
mov
pop
mov
fisubs
inc
push
jnp
fstl
cmp
adc
push
and
push
daa
mov
aam
lret
into
mov
or
in
mov
push
fiaddl
push
sub
testb
sub
dec
cmpsb
and
sbb
jmp
mov
fldenv
ds
adc
test
adc
lea
cld
aas
bnd
movsl
adc
das
adc
inc
xchg
inc
sub
pop
dec
into
push
mov
sarb
jle
or
adc
out
adc
mov
adc
push
add
push
loop
das
sarl
cmc
out
lods
adc
pop
sbb
sbb
aas
inc
mov
jle
and
xor
push
sbb
sub
add
and
xchg
std
fldenv
xor
jbe
push
pop
sub
mov
les
in
nop
ss
mov
out
jno
adc
icebp
mov
sbb
into
or
int
insb
cld
ja
orl
dec
out
cmp
mov
jnp
mov
jno
mov
xor
xchg
or
and
push
cli
mov
xor
mov
dec
cmp
out
xor
es
cli
adc
mov
addr16
cwtl
and
jl
or
int3
icebp
dec
push
xor
aad
sti
mov
jae
mov
adc
or
and
push
jmp
mov
mov
popl
rclb
cli
rcrb
in
add
and
push
scas
xor
sti
inc
daa
mov
dec
jo
int3
sar
mov
ret
lahf
add
push
pop
xor
xchg
dec
es
hlt
pop
int3
add
and
outsb
insl
adcb
cltd
adc
add
jne
loope
insb
sbb
nop
add
mov
cmp
push
jb
add
mov
xadd
pop
sarb
push
jae
sub
cmp
jmp
ja
dec
je
push
adc
shr
adc
repnz
cmp
sbb
dec
mov
add
in
faddl
scas
lds
sub
adc
sub
lret
jbe
mov
ds
or
push
and
sub
mov
mov
mov
sar
je
cmp
jae
sub
add
fcomip
inc
clc
xchg
xor
dec
cmp
test
push
nop
sub
push
mov
inc
cli
and
push
add
sbb
xchg
sub
or
dec
fwait
xor
mov
rol
fidivs
dec
adc
in
and
push
sbb
imul
jo
add
cs
push
pop
mov
inc
or
pop
add
add
pop
add
inc
out
pop
xchg
dec
dec
inc
pop
and
inc
call
and
test
hlt
mov
inc
dec
jle
cmp
sub
inc
ss
je
or
je
sahf
or
fs
or
ret
nop
fwait
cmc
add
cli
daa
xchg
in
sbb
fmuls
or
into
in
push
push
popf
jbe
xlat
rcrl
int3
sbb
ja
out
adc
add
cmpsb
jmp
ficompl
cmp
inc
add
je
push
das
pusha
add
push
aad
rcrb
inc
push
dec
and
enter
or
push
ja
inc
fadds
push
jmp
lea
test
and
or
enter
jmp
outsb
rcrl
or
out
push
add
cwtl
xchg
pop
xchg
add
cmp
jno
pop
sbb
outsb
movsl
test
out
pop
adc
pop
sub
pop
mov
cs
mov
cwtl
jg
ja
int3
je
add
lret
mov
push
add
push
xor
adc
sbb
je
imul
dec
mov
lock
lods
and
push
lods
lret
pop
cmpl
or
js
int
lock
lods
jg
adc
in
and
xchg
jb
pushf
jo
jno
mov
shrb
or
addr16
cmp
daa
add
jp
cmp
jg
fmull
push
mov
cmpsb
jle
cmpl
jl
jle
sbb
fldl
ljmp
jle
pop
insl
inc
out
xchg
aas
xor
loopne
sub
incl
sbb
cmp
pop
fstpl
add
pop
fisttps
dec
ret
test
and
push
cmp
sub
adc
xor
pop
cmp
je
cmp
mov
adc
or
adc
int
inc
dec
add
add
lds
push
cltd
pop
xor
mov
dec
test
sahf
movsbl
sub
jmp
test
jnp
mov
sub
cmp
cs
repnz
add
cmp
jae
enter
insl
jb
movsb
cmp
jbe
pop
and
and
aaa
or
adc
fldcw
add
add
adc
pushl
mov
sbb
xchg
push
sbb
xor
add
dec
imul
xlat
jne
cwtl
into
insl
jnp
mov
or
fdivrs
adc
push
cmp
jns
aas
les
dec
xchg
hlt
mov
sbb
aam
and
into
sub
pop
movb
add
mov
ljmp
and
shrb
or
jp
iret
lods
movsb
adc
es
xchg
jo
sub
es
sbb
popf
push
push
fimull
push
push
cwtl
mov
add
xor
mov
dec
cmp
mov
movsb
jb
dec
orl
jge
je
adc
push
in
push
pop
leave
jne
shll
jo
cld
fdiv
inc
jmp
push
xlat
add
push
iret
or
add
sbb
pop
add
imul
xchg
push
gs
or
mov
in
and
add
dec
fldl
loopne
call
or
mov
dec
fmull
or
gs
jg
mov
push
adc
mov
movb
je
aaa
int
lcall
add
inc
inc
jo
xor
add
push
push
pop
or
rcrb
or
push
pop
pushf
outsl
pop
pop
mov
insb
add
stc
cli
or
add
lock
cli
ror
fists
or
je
xchg
scas
das
cmc
stos
ds
mov
mov
into
es
push
push
subl
xchg
les
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
cltd
xchg
rolb
adc
or
mov
neg
mov
into
leave
jl
inc
sbb
out
adc
or
hlt
or
push
ret
xorb
imul
popa
dec
stc
cmc
push
and
in
int
aad
push
add
test
inc
gs
sbb
or
repnz
std
push
push
pop
dec
cmpb
pop
sub
cmp
dec
and
outsb
inc
adcl
ljmp
pop
out
pop
mov
xor
cmp
jle
cmpl
fsubl
xorl
nop
jge
ss
adc
push
jle
dec
scas
dec
filds
sbb
xlat
jle
add
scas
sbb
and
adc
adc
data16
xchg
push
jl
mov
out
stc
stc
add
push
icebp
or
enter
mov
dec
push
hlt
dec
sbb
jb
pop
test
jne
rol
ficomps
dec
insl
add
js
sbb
jmp
cmc
sbb
xor
mov
outsl
inc
add
ds
je
mov
ret
call
test
je
mov
cmp
jb
cmp
jbe
inc
inc
mov
jmp
pop
out
or
mov
xchg
popa
imul
nop
mov
sbb
jbe
or
loope
into
adc
inc
sbbl
push
push
or
dec
aam
and
in
call
inc
mov
inc
rorb
pushf
sysret
repz
dec
push
daa
push
mov
pop
test
add
loopne
imul
test
push
pshufw
mov
ljmp
je
in
cmpl
imul
aad
das
and
in
je
test
push
xor
frstor
push
push
mov
aam
or
pushf
loopne
fadd
xchg
xchg
push
loopne
pop
mov
insl
jle
fnstsw
test
xchg
inc
sbb
mulb
lret
test
mov
adc
movsb
hlt
sbb
repnz
dec
jnp
fisttpl
inc
sbb
jne
stos
dec
clc
jmp
adc
mov
les
mov
cmp
add
inc
add
xchg
mov
and
loopne
shlb
jle
stos
mov
adc
push
test
fsubl
dec
test
hlt
sub
inc
adc
push
push
push
jbe
aas
jo
mov
sub
sti
aam
push
ret
test
imul
sbb
xlat
aaa
dec
jmp
add
mov
adc
push
fsts
arpl
insb
pop
pushf
pop
mov
push
dec
xor
mov
push
sahf
and
or
shlb
cld
add
dec
imul
push
jmp
xor
sub
or
sub
adc
inc
mov
rcrb
xchg
push
add
mov
fisubl
sbb
mov
in
push
inc
pop
pusha
inc
imul
clc
mov
test
add
xor
and
pusha
jns
cmp
dec
sbb
dec
shll
incb
and
test
sbb
and
sbb
xor
adc
call
mov
cs
cmpb
ss
pop
jl
jno
cmp
dec
lea
ss
xor
daa
inc
int3
ffree
popf
sbb
test
test
mov
fwait
mov
dec
mov
mov
lret
fsubs
out
stos
loopne
xchg
hlt
loopne
jmp
dec
loop
jge
frstor
xchg
lea
sbb
loope
push
sub
js
pop
movsl
mov
and
pop
add
les
cwtl
mov
pop
leave
inc
js
adc
pop
inc
rcll
pop
int3
clc
fcompl
adc
inc
cli
out
and
sub
add
mov
inc
jb
mov
and
and
lcall
xor
sti
push
ret
push
and
push
add
cmpsb
in
sub
sub
subl
xchg
mov
pusha
mov
ja
outsl
and
push
popa
sbbl
frstor
lret
xor
inc
in
mov
mov
js
hlt
cmp
cmp
jg
sbb
lcall
shl
inc
xor
mov
cmp
je
paddw
loope
or
or
or
sbb
and
cmp
or
data16
push
aas
push
fs
push
pop
sbbl
mov
ret
sub
jmp
adc
lea
pop
ret
in
or
ret
mov
cs
scas
push
iret
xchg
es
iret
jge
stos
lods
push
sub
jecxz
push
sbb
adc
dec
lock
push
xor
lret
mov
or
ds
iret
xor
jo
and
push
sbb
or
hlt
inc
pop
dec
out
jne
lods
dec
add
sub
inc
cld
ret
jg
ss
cmp
je
mov
mov
and
mov
aam
xchg
pop
addr16
outsb
or
xchg
scas
enter
or
dec
push
mov
jb
fsubr
add
xlat
add
sbbb
fcoms
fsubs
into
mov
out
mov
xor
movl
mov
fstl
mov
out
lret
int3
push
push
mov
ret
imul
pop
sub
xor
ds
lea
sti
xchg
adc
sbb
ja
or
movsb
sub
movsb
movsb
dec
cmp
or
push
add
loopne
push
mov
jle
fdivl
mov
add
adc
mov
lods
inc
sub
xorl
sbb
or
ja
movb
repnz
mov
enter
mov
push
movsb
dec
add
dec
push
shl
add
repz
jmp
mov
cld
pop
push
push
lahf
mov
mov
mov
mov
jg
adc
lods
mov
push
adc
test
fs
dec
in
sbb
mov
jae
fadds
inc
lods
hlt
int
lahf
cmpl
movl
pop
aas
adc
mov
add
or
add
jg
outsb
mov
push
push
sbb
push
bound
and
ljmp
arpl
imul
outsl
inc
popa
dec
js
imul
pop
inc
dec
inc
inc
push
push
jns
ljmp
pop
imul
addr16
dec
jae
push
jno
jbe
gs
jo
pop
push
inc
popa
gs
stc
call
imul
gs
dec
js
inc
je
dec
inc
push
dec
popa
outsb
inc
push
inc
push
jno
lcall
jns
push
jp
dec
jae
pop
jb
push
dec
jne
outsl
je
mov
sti
fildll
dec
inc
addr16
dec
popa
push
pop
inc
lock
push
inc
outsb
add
dec
inc
ljmp
jno
jae
inc
dec
inc
jno
push
jo
dec
inc
dec
inc
push
bound
addr16
jae
jno
fs
gs
sti
fildl
cs
outsb
ja
push
je
scas
jo
popa
jno
insb
gs
dec
ljmp
clc
push
dec
outsl
dec
imul
outsl
pop
dec
je
inc
push
jne
ja
jne
inc
push
add
push
je
push
outsb
cmp
push
dec
inc
jbe
insl
in
or
inc
push
pop
push
pop
inc
imul
arpl
push
std
fists
push
jns
outsb
jbe
imul
insl
dec
push
push
insl
jbe
jne
jno
jns
push
dec
inc
mov
push
addr16
jb
jno
sbb
fs
bound
pop
jl
inc
ja
dec
push
push
jbe
lret
inc
push
arpl
gs
bound
lcall
mov
dec
imul
push
or
outsl
inc
push
push
jo
decb
in
jo
push
push
inc
dec
pop
js
push
fs
imul
aaa
sbb
push
jb
push
dec
je
je
dec
push
jl
add
jp
push
lcall
or
push
push
dec
jns
push
addr16
imul
pop
jbe
push
inc
xchg
add
push
push
dec
data16
ja
pop
fdivr
xchg
outsl
dec
insb
push
pop
dec
jns
inc
inc
cmpb
insb
mov
incl
push
ja
inc
inc
dec
inc
insb
jne
inc
sub
pop
dec
testb
lahf
add
sub
or
out
or
ss
jns
xor
xor
inc
push
pop
sti
imull
je
push
dec
gs
add
or
das
inc
push
pop
inc
loopne
insl
rorl
imul
jno
mov
mov
jne
jb
inc
pop
and
xchg
daa
and
cmp
fildll
inc
inc
push
ja
adc
movsb
jae
dec
outsb
outsb
gs
sub
and
mov
fildl
inc
ds
xchg
mov
fcmovnu
pop
aaa
daa
pop
mov
mov
cmpsl
das
data16
and
outsl
inc
imul
xchg
push
daa
ja
adc
mov
aas
xchg
aad
mov
push
jb
cmp
gs
sub
inc
ret
fistpll
dec
push
rolb
ja
bound
lcall
mov
fstpl
outsb
je
insb
insb
cs
jo
mov
outsb
insl
popa
jo
imul
bound
dec
mov
mov
add
popa
aaa
aaa
mov
inc
js
dec
gs
xor
pop
dec
imul
ljmpw
rorb
add
add
jmp
outsb
scas
ret
pop
jmp
call
pop
dec
fsub
jb
dec
or
call
dec
inc
pop
jnp
inc
inc
cmp
xor
sub
cmp
sub
cmp
aaa
aaa
sub
xor
inc
aaa
inc
push
or
add
push
jb
insb
jo
or
add
or
outsb
lds
inc
mov
cld
mov
daa
test
inc
adc
outsl
ja
and
push
shlb
adc
dec
or
jg
mov
outsl
fs
outsl
aas
aad
test
je
dec
and
push
repnz
dec
xor
inc
dec
push
icebp
mov
add
inc
insb
jae
add
pop
roll
je
cmp
pop
inc
cmpsb
adc
mov
xchg
mov
mov
imul
movups
adc
adc
call
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
pushl
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
mov
push
mov
pop
pop
insl
clc
pop
cld
pop
pop
pusha
popa
bound
addr16
imul
jno
or
aas
hlt
jne
ja
jns
jnp
jge
jg
jno
faddl
and
repnz
jb
sub
dec
add
sbbl
jb
addl
pop
addb
push
sbb
insl
sub
push
mov
sub
add
fcoms
and
add
ja
push
mov
mov
imul
mov
mov
pop
rcl
inc
pop
inc
out
and
add
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lcall
movsb
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
fdivrp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
adc
aad
jmp
loope
add
inc
and
stos
call
push
popa
and
mov
add
ljmp
dec
outsl
outsb
push
jne
push
gs
push
push
popa
outsl
mov
lcall
popa
outsb
inc
bound
jb
jo
or
dec
add
inc
jne
mov
push
gs
arpl
jbe
xchg
jb
js
adcl
je
xchg
gs
insl
add
je
js
xor
jb
add
sahf
insb
adc
jne
je
insl
and
jb
pop
not
inc
or
push
push
and
repnz
dec
dec
inc
add
inc
and
push
ss
icebp
outsl
mov
outsb
and
jo
imul
and
into
sub
je
gs
jo
and
insb
insb
popa
pop
mov
es
push
bound
cwtl
adc
mov
cmpsb
push
iret
fmul
insb
jns
or
xorb
outsb
je
arpl
int3
mov
mov
sbb
xor
jl
fcmovb
and
insl
push
xchg
or
pop
aas
xor
pop
rcrl
rolb
in
adc
stos
out
insl
bound
in
mov
jne
xchg
and
jbe
dec
mov
sbb
ja
add
pop
es
gs
bound
and
je
sub
flds
and
push
ds
mov
mov
xchg
ret
and
mov
adc
pop
daa
sub
push
shrl
das
arpl
cmp
mov
cwtl
rolb
mov
push
data16
add
inc
xchg
movsl
cmp
call
xor
push
pusha
int
int3
or
push
sbb
pop
data16
popa
pop
enter
xor
jo
and
gs
push
fistps
adc
int
push
or
xor
scas
shll
hlt
popa
xor
and
sahf
dec
mov
sbbb
and
outsl
outsl
adcl
xor
push
jno
jbe
inc
xchg
push
dec
notl
xor
push
gs
mov
mov
adc
cmp
outsl
jo
xlat
in
adc
outsl
push
or
arpl
in
cmp
xor
inc
aaa
insl
in
in
arpl
adc
imul
bound
das
imul
pop
or
jle
bound
rclb
leave
push
insl
imul
cmp
adcl
in
fadd
inc
enter
push
and
push
cmp
pop
mov
sub
push
jae
xor
mov
fsubl
out
add
or
or
mov
push
sub
add
bswap
inc
sub
pop
dec
jmp
dec
or
add
cmp
addr16
xchg
fisubrs
jne
ds
arpl
pop
fsubl
dec
and
dec
cmp
add
mov
pop
sbb
add
lea
xchg
dec
cmp
mov
and
push
scas
cmp
push
or
jbe
dec
bound
in
or
mov
push
daa
inc
ss
add
mov
imul
fildl
inc
inc
xor
imul
loopne
in
inc
mov
cmp
or
mov
mov
cs
push
push
andl
xor
mov
mov
pop
mov
imul
bound
jbe
push
push
lahf
stos
shl
jns
and
xor
popl
cmp
pusha
gs
stos
loopne
and
inc
inc
pop
es
push
mov
dec
lahf
lock
out
pop
inc
xchg
pop
pop
pop
push
lods
jbe
push
push
jae
cmp
push
adc
scas
cmp
call
out
jae
addr16
subl
jo
sub
mov
inc
xchg
fcomp
and
mov
notl
push
dec
testl
dec
je
outsb
mov
ret
lods
pusha
cmp
fildll
sarb
jg
mov
xor
bound
mov
sbb
outsl
sbb
jae
inc
in
lret
xor
add
adc
lds
sub
inc
aad
push
or
cmc
fcomps
das
je
outsl
xchg
daa
negb
ret
daa
popw
pop
cmp
sahf
jl
cmp
cmp
push
das
push
fst
cmp
inc
jl
push
mov
push
jle
sub
sub
push
iret
ror
cmp
jle
add
out
lret
pushw
sub
sub
push
jnp
push
mov
lea
push
cmp
sbb
dec
pop
pop
xchg
stos
push
test
addr16
push
jb
and
das
jo
ss
fidivrl
push
cld
sbb
adc
push
xor
ss
jae
inc
jo
sub
in
jbe
push
out
sub
pop
sarb
cmp
and
stc
sahf
out
adc
clc
mov
jns
mov
mov
iret
jnp
call
loopne
cmp
repz
rol
sarb
mov
test
repz
movsb
mov
cmp
repz
mov
repz
jo
push
fs
pop
pop
push
push
cmp
repz
dec
cmp
sub
iret
repz
clc
mov
sahf
out
test
iret
repz
add
mov
cmp
repz
pusha
push
sub
jns
iret
repz
in
mov
sahf
out
push
sub
mov
jns
cwtl
insb
push
mov
or
dec
dec
cmp
cmp
add
dec
mov
adc
add
das
das
adc
adcl
inc
test
cmp
mov
and
adc
mov
sub
jne
or
xchg
in
xchg
outsb
gs
xor
mov
push
push
push
filds
pushf
jae
scas
cmpsl
xchg
popl
outsb
jns
jg
addr16
popa
movsb
addr16
sbb
adc
ss
daa
push
clc
sbb
cmp
and
xchg
pop
pop
movsb
cmp
dec
inc
aas
add
pop
push
rcl
jmp
mov
push
cmp
push
cmpsb
xor
inc
jb
dec
fildl
ss
inc
arpl
xchg
outsl
aad
sub
daa
pop
lea
mov
ss
push
inc
push
xor
cs
mov
dec
lds
popa
cwtl
push
xor
push
stos
adc
pushf
in
add
xor
adc
jle
mov
and
add
dec
xchg
in
push
inc
add
pop
in
hlt
add
xor
dec
and
add
neg
push
push
push
insb
das
inc
mov
out
cmovo
mov
and
mov
pop
cwtl
lahf
das
les
int3
ds
mov
movntq
out
inc
lock
ja
adc
mov
push
sub
mov
mov
pop
inc
mov
pop
dec
jae
xchg
push
fs
insb
cltd
inc
pop
bnd
fs
cmp
test
add
push
enter
test
enter
clc
or
pop
enter
xchg
clc
insb
mov
pop
stc
into
mov
lock
mov
bound
pusha
cmp
repz
nop
mov
out
loop
fwait
sub
outsb
and
jbe
inc
lcall
adcl
ja
mov
adc
scas
mov
mov
fidivs
aas
cmpsl
stc
xor
push
jg
cs
mov
fstps
adc
out
add
push
or
aaa
iret
jo
cmp
bnd
cmpsb
aas
roll
jb
mov
les
and
iret
inc
dec
lcall
repnz
enter
outsl
or
and
pusha
push
pop
in
sbb
mov
enter
sub
xor
stos
lea
mov
push
push
aaa
shl
xchg
or
pop
movsb
mov
cmpsb
inc
push
lahf
popf
or
dec
or
push
dec
mov
and
dec
push
jbe
jge
cltd
push
rcrb
xlat
or
or
adc
orb
push
and
aam
shll
leave
es
sbb
pop
mov
adc
push
fs
loopne
adc
xchg
mov
inc
mov
sarl
and
cmp
addr16
mov
outsb
mov
xchg
aad
scas
out
jnp
sbb
sbb
cmp
rcrb
sbb
push
and
pop
mov
adc
pop
jb
push
jle
pop
inc
cmp
dec
inc
and
adc
mov
mov
leave
or
cmp
inc
adc
aas
daa
xchg
pop
mov
jns
mov
and
mov
inc
repnz
cltd
mov
push
pop
jne
loopne
pop
aas
imul
popa
inc
es
push
outsb
aas
shlb
out
jge
jle
ds
jle
daa
fimull
xorl
mov
sbb
std
pop
xchg
inc
pop
in
int
add
es
jge
into
out
je
sub
cltd
aaa
push
mov
out
pop
jo
or
pop
leave
xchg
adc
ret
pushf
into
pop
mov
add
incl
inc
sub
push
addr16
inc
push
jp
inc
dec
dec
jae
gs
dec
push
inc
insl
insl
insb
gs
fs
push
push
push
insl
inc
push
jb
jp
idiv
call
imul
jne
inc
gs
push
insb
inc
dec
outsl
push
push
dec
dec
pop
js
jno
mov
inc
inc
jns
push
push
jae
push
add
jns
push
mov
push
push
inc
fs
dec
push
dec
pop
bound
inc
jne
je
jae
insl
inc
push
imul
mov
dec
inc
push
inc
push
inc
push
dec
dec
bound
gs
inc
inc
inc
outsb
pop
cld
or
dec
jb
inc
imul
jns
dec
outsl
inc
insl
jne
push
jp
jne
imul
add
and
push
xor
out
lock
addr16
jle
mov
jg
xchg
and
jbe
lds
pusha
sarl
lcall
add
and
aaa
pop
cmp
cmp
inc
and
data16
aas
stc
pushl
cmp
jns
and
and
inc
popa
jge
adc
mov
je
fists
pushl
add
xchg
dec
int3
stc
mov
jns
mov
and
neg
stc
aaa
sbb
ljmp
xor
ds
insb
addr16
outsl
jb
push
jns
xor
out
gs
dec
enter
jge
pop
insl
xor
cmpsb
stc
push
push
add
inc
je
dec
loopne
xchg
mov
dec
in
add
adc
xor
int
cmp
inc
es
push
cld
inc
adc
mov
imul
or
cmpsb
inc
sbb
incl
and
adc
outsl
cmpsb
mov
fisttps
inc
addr16
dec
je
inc
jae
pusha
and
jae
add
add
xor
adc
or
cmp
sbb
inc
sub
add
sbb
aas
repnz
cmp
pop
adc
sub
dec
pop
inc
imul
inc
add
bound
adc
pushl
cmc
mov
push
pop
cwtl
cwtl
je
mov
jge
push
jmp
or
push
adc
fsubrs
addr16
out
mov
cmpsl
sbb
cmp
mov
mov
adc
cmp
jns
fcomps
daa
mov
adc
insb
leave
pop
jns
out
imul
push
stos
js
mov
imul
push
dec
inc
nop
inc
popa
or
imul
arpl
xchg
pop
incb
jns
push
pop
je
gs
jg
cld
adc
push
pop
xchg
push
dec
push
jg
cld
and
outsl
inc
cmp
cmp
add
out
aad
fs
inc
popa
roll
je
ss
decl
imul
add
mov
ja
cmp
push
int
jg
or
sbb
and
sub
outsb
jl
push
fs
jno
outsl
mov
adc
mov
mov
mov
add
jle
ja
push
stc
subb
arpl
jns
sub
fcoml
xor
push
iret
cltd
and
jo
shll
jl
lcall
mov
dec
addr16
sbb
jae
adc
adc
pop
sbb
outsl
lcall
ja
cld
jbe
lcall
mov
cld
imul
ljmp
loopne
mov
jbe
xor
adc
and
mov
insl
sar
mov
lods
inc
inc
sbbl
mov
daa
jno
pop
mov
push
add
inc
pop
lods
aaa
dec
and
cmp
pop
xchg
adc
cmp
adc
xchg
popa
out
mov
cmpsb
push
dec
xchg
push
fsubr
pusha
xchg
mov
inc
mov
pushl
std
xchg
hlt
aam
jg
in
test
mov
fimull
stc
test
stc
lahf
mov
mov
mov
cmp
lcall
out
mov
mov
shll
test
out
call
mov
mov
add
packuswb
mov
leave
xchg
mov
xchg
subb
pushl
lods
scas
std
fisttpll
mov
mov
into
divb
mov
lods
ljmp
mov
lea
test
scas
mov
mov
xor
add
jmp
sbb
ljmp
jae
lds
decl
incl
mov
shrl
mov
lock
fcomip
and
mov
test
loopne
out
pushf
mov
lcall
test
mov
cld
ljmp
jg
lds
mov
inc
roll
push
jb
lock
mov
sahf
fdiv
mov
xchg
lcall
push
cmpsb
and
lahf
mov
xor
pop
mov
cmp
xchg
outsl
repnz
loopne
lret
cmpsb
popf
xchg
call
sti
push
mov
pushf
pushf
aaa
xchg
push
xbegin
call
sbb
xchg
sbb
imul
daa
mov
imul
push
mov
std
loopne
mov
cltd
test
adc
add
fstl
decl
lcall
mov
mov
out
fdivr
out
lcall
fbstp
loop
mov
push
repnz
add
out
jp
push
mov
mov
dec
aam
jg
lock
in
xchg
pop
call
xchg
icebp
stc
out
pushf
mov
testb
fsubl
jle
ljmp
dec
clc
out
dec
xchg
xchg
scas
push
outsb
decl
mov
clc
loop
lahf
mov
xorl
dec
mov
push
hlt
xlat
out
lret
in
sbb
addr16
and
jmp
xlat
pop
xor
xorl
push
addr16
aaa
sub
adcb
jg
call
cwtl
mov
fs
out
dec
clc
ret
xchg
fyl2xp1
repnz
inc
cli
in
mov
dec
outsl
dec
loop
cmpsb
mov
and
je
ret
decl
push
push
shlw
xor
mov
fisubs
loope
mov
cmp
lahf
out
jl
inc
lods
xor
jae
jecxz
stos
xchg
mov
mov
mov
hlt
pushf
stos
mov
lahf
add
inc
sub
popa
sar
mov
mov
faddl
sub
xchg
hlt
cmp
dec
scas
outsl
repz
test
cld
jecxz
cltd
mov
mov
stos
pop
mov
xchg
lcall
insb
iret
fidivs
ds
dec
push
lods
dec
cli
fistps
test
lcall
movsl
lea
incl
mov
or
stos
gs
pop
test
mov
test
dec
subl
sbb
mov
lret
loope
hlt
mov
ret
popf
xchg
mov
into
mov
and
push
shrb
sahf
add
pop
popf
inc
add
stos
in
xor
stos
mov
or
insl
jl
push
cli
sub
or
and
pushf
pop
push
push
mov
hlt
iret
in
mov
rcl
cmpsb
xchg
pushf
xchg
mov
mov
jg
cmp
cmp
push
jns
test
stos
gs
lret
mov
mov
movsb
xor
mov
iret
cli
xor
hlt
movsb
arpl
loop
dec
mov
xchg
cmp
int
lock
pop
movsb
push
scas
mov
adcl
adc
jg
je
mov
call
xchg
mov
lcall
ljmp
adc
mov
dec
push
pop
mov
xchg
adc
movsl
cld
out
clc
lret
xchg
mov
in
movsl
popf
lock
cmp
push
ret
lcall
add
cmp
inc
jns
xchg
or
scas
cmpsb
mov
xchg
xchg
inc
lea
mov
jle
mov
cltd
divb
inc
and
mov
push
sbb
outsb
stos
or
mov
mov
push
in
add
cld
jg
repnz
inc
push
jmp
andl
out
aad
stos
sbb
mov
xor
mov
ljmp
rclb
mov
es
xchg
shr
cmp
pop
or
es
addr16
repz
icebp
incl
mov
mov
insl
dec
xlat
xchg
popa
dec
cmp
in
pop
mov
mov
std
lcall
jl
in
test
stos
mov
inc
push
xchg
cmp
jl
aad
pushl
mov
add
xchg
or
in
mov
inc
popa
jmp
gs
push
mov
jecxz
sbb
test
aas
jg
decl
popf
sbb
das
daa
icebp
and
int3
and
lret
mov
clc
je
outsl
sbb
push
shlb
movsl
adc
in
ficoms
pop
inc
dec
jns
push
jp
xchg
cmpsb
call
shrb
push
mov
sar
xchg
cmpsb
add
cmp
mov
inc
inc
mov
adc
jg
and
out
cwtl
mov
in
cld
xchg
ljmp
push
cld
sti
mov
fstpt
icebp
mov
fcomip
call
xlat
fstl
loopne
pop
jbe
movsb
mov
arpl
add
ljmp
sahf
dec
loop
call
std
mov
stc
test
add
mov
mov
call
lods
mov
push
lock
rcrb
in
aam
inc
mov
mov
sub
hlt
push
push
jns
and
mov
shrl
decl
mov
sub
pcmpgtb
outsl
sbb
xor
mov
or
inc
flds
xchg
or
inc
lret
std
mov
mov
bound
cltd
stos
mov
jg
push
scas
daa
out
sbb
push
test
iret
out
push
dec
popa
push
push
std
fidivrl
addr16
sbb
int3
pop
jno
iret
sub
lods
sub
xor
pushl
add
inc
into
sbb
ss
je
add
adc
and
push
xchg
lahf
pusha
ljmp
jb
shlb
loope
cltd
or
add
jg
and
mov
xchg
or
repnz
cmc
lods
inc
out
pop
adcl
aaa
cmpsb
adc
in
sahf
and
mov
mov
cld
das
jno
iret
test
repnz
inc
jne
mov
adc
call
pop
mov
js
test
mov
mov
mov
cmpsl
xchg
xchg
push
stos
lds
sbbb
arpl
push
jg
ljmp
sbb
dec
xor
and
call
loopne
vpacksswb
gs
mov
push
addb
scas
iret
sbb
inc
es
pop
mov
jg
lcall
mov
push
add
sahf
stc
scas
inc
cli
mov
pop
sbb
mov
enter
dec
inc
addr16
daa
popa
cmp
and
das
cli
incl
add
cmp
jno
shrb
jg
sbb
orl
push
cmp
fisubrl
mov
outsb
cld
lcall
movsb
movzwl
lods
mov
pop
faddl
xchg
ret
sbb
add
mov
xchg
jno
mov
push
cld
mov
add
and
lds
mov
clc
fwait
pop
sbb
xchg
mov
es
mov
ljmp
push
mov
push
outsb
jbe
mov
test
mov
clc
mov
sub
or
pop
outsl
int
inc
sub
es
sbb
mov
int
ss
mov
mov
aaa
push
std
ljmp
fcompl
enter
arpl
fs
call
icebp
add
shll
inc
decl
repnz
mov
jmp
cli
and
stc
xchg
mov
mov
mov
pushf
orb
adc
in
pusha
add
decl
inc
in
xchg
inc
and
into
cmp
fwait
lock
dec
inc
cli
mov
mov
dec
decl
lock
fwait
xchg
test
lahf
out
insl
enter
in
jg
pushl
call
sti
cmp
loop
jb
pop
data16
ljmp
fdivr
lcall
inc
cmp
mov
test
xchg
ja
mov
inc
mov
pushl
push
mov
push
jne
mov
xchg
xor
cmp
inc
xchg
adc
clc
lods
cmp
push
mov
push
decl
push
fimull
push
mov
orb
mov
cli
cld
and
adc
adc
add
sbb
les
das
shlb
mov
mov
mov
test
lock
jg
popf
call
cmpsb
std
addr16
push
mov
mov
dec
test
decl
ret
clc
cmp
mov
insl
push
movsl
mov
push
stc
and
enter
mov
or
push
dec
xor
and
fcoms
xchg
repnz
decl
inc
inc
sub
xor
push
mov
fs
sbb
add
inc
lcall
lcall
rcrb
push
inc
pop
xor
and
jbe
and
or
sub
lcall
xchg
push
dec
push
clc
mov
lea
sbb
and
fstpt
jg
pop
mov
fwait
push
pop
inc
push
and
hlt
in
xchg
int
dec
fcomip
pop
mulb
fsubl
mov
ret
jbe
push
cmp
hlt
scas
jg
ljmp
adc
xchg
xor
jp
mov
jmp
aam
dec
nop
movb
and
sbb
js
fldl
mov
add
xor
jmp
jnp
cmpb
add
or
sbb
cltd
sti
ljmp
ljmp
pop
push
sub
imul
push
push
or
push
stos
jp
add
outsb
negl
jg
jmp
add
push
adcb
pusha
pop
jle
adc
mov
mov
pop
out
xchg
ljmp
out
and
call
das
mov
push
pop
adc
push
test
data16
mov
add
fwait
jns
outsl
mov
mov
in
cmpsb
arpl
in
sti
xor
jl
scas
insl
pop
sbbb
pop
cmpsb
lds
adc
adc
push
jne
jecxz
js
mov
mov
jg
fstps
xchg
mov
mov
shrl
lcall
xor
inc
cmpb
jnp
cmp
orl
out
mov
pop
add
xor
call
dec
sbb
cmp
mov
shll
popa
lret
mov
xor
push
mov
xor
ljmp
mov
dec
jae
lods
fwait
and
sahf
sar
decl
sub
int
jp
dec
es
sbb
add
insl
hlt
mov
stos
fistps
outsb
push
std
sub
dec
pop
sahf
or
and
add
decl
ss
pop
dec
divl
jne
add
lea
mov
jp
push
dec
sbb
push
hlt
mov
lods
sub
xor
stos
mov
inc
icebp
mov
scas
and
sub
mov
sub
fnstenv
lcall
mov
ljmp
add
arpl
sahf
pop
repnz
add
cmp
cmpsb
jg
or
sahf
cltd
mov
cwtl
adcb
cmpsl
aam
push
lock
call
or
imul
ss
push
adc
adc
dec
and
incl
jns
pop
jge
and
cli
add
iret
sub
dec
sbb
les
jg
push
es
mov
dec
add
jne
in
mov
ss
loopne
fcomip
ja
lods
movsl
sub
je
popa
xor
shlb
ljmp
and
into
or
push
or
lock
push
stos
lret
mov
imul
enter
push
sti
and
incl
xorl
pop
clc
inc
shlb
cwtl
lods
mov
pusha
orb
call
cmpl
inc
mov
incl
scas
clc
push
jns
pop
out
push
into
popa
push
nop
mov
mov
cmp
lea
or
insb
mov
fisttpl
cld
add
roll
push
bound
fnstcw
pop
add
and
sbbb
lods
cmp
xor
cmpsb
xor
adc
jp
jbe
incl
cld
incl
jle
jge
jl,pt
sub
jg
cs
cmp
lcall
test
or
xor
mov
sbbl
jns
and
inc
ljmp
cld
outsl
clc
mov
push
jbe
dec
xchg
mov
jb
ljmp
test
cmp
ljmp
icebp
mov
and
xchg
inc
mov
sub
insb
dec
rcll
jg
loopne
dec
push
push
aaa
repnz
out
test
cmc
mov
fwait
pushf
pop
jb
fisttps
mov
adc
or
mov
mov
jmp
inc
ret
cmp
iret
sub
push
test
mov
mov
and
das
aaa
leave
sub
loop
jmp
fbstp
aas
hlt
lods
pop
daa
xor
out
adc
xorb
inc
insl
fildl
call
movsb
mov
call
pop
pop
int3
sbb
sahf
xor
mov
mov
imul
xchg
mov
mov
jmp
sub
cmpsb
adcl
nop
imul
sbb
mov
mov
cmp
and
ljmp
jo
add
roll
inc
fistl
cmpsl
cmp
cmp
cli
xor
dec
clc
xor
repnz
cmp
push
xchg
lcall
and
and
call
mov
xchg
sub
stos
sbb
push
jmp
mov
push
sbb
mov
push
mov
or
add
jae
mov
test
sub
and
cmp
or
lods
adc
push
scas
out
stos
inc
and
es
adc
aam
push
push
repz
pop
sub
outsl
cli
call
daa
lods
dec
mov
or
clc
sbb
and
push
pushf
insl
and
and
nop
ret
roll
or
pop
ret
das
fsubl
cmp
add
push
std
jmp
add
lds
dec
xor
sbb
jae
imul
rorl
xchg
nop
inc
fisttps
jbe
jg
pop
jno
push
lods
ja
dec
fbstp
mov
jne
mov
lds
cs
cli
and
xchg
cld
call
ret
xchg
dec
inc
mov
int3
mov
test
into
ds
pushl
adc
aam
mov
insl
enter
adc
push
mov
das
es
cmp
inc
push
rcrb
and
jmp
aam
cli
mov
add
push
lea
jnp
shll
stos
mov
cli
dec
inc
test
aaa
loop
sub
sbb
inc
jne
lret
jmp
lea
sti
lret
cmp
ret
xor
push
lcall
icebp
fbld
lcall
pop
ljmp
jmp
add
shl
mov
adc
in
ds
lcall
jno
inc
jbe
shrb
scas
mov
les
lods
mov
lock
inc
in
sahf
stos
mov
rorl
insl
sarl
into
daa
mov
aas
push
xrelease
mov
mov
ds
mov
sbb
jne
and
pop
sub
xor
fwait
aam
xchg
inc
adc
call
dec
cmp
scas
test
outsb
xorl
filds
mov
mov
cmp
and
jg
mov
push
ss
in
pusha
testl
or
pop
mov
xchg
lock
xorb
jecxz
mov
aas
imul
call
lcall
call
xchg
repnz
push
sub
rolb
imul
mov
pushf
jne
ja
clc
xchg
mov
push
mov
mov
mov
fsubl
xchg
sub
popf
clc
jg
lret
nop
lahf
mov
loope
out
xor
adc
les
imul
shrl
fwait
pop
xor
mov
add
in
sbb
or
cmp
into
aas
lcall
pop
call
mov
xchg
and
xor
xchg
cmp
repz
mov
xor
hlt
xor
mov
adc
dec
popa
aas
lcall
adc
mov
adcb
and
stc
add
aaa
mov
fwait
mov
sbb
hlt
mov
jmp
mov
adc
and
call
add
leave
pop
mov
mov
push
cmp
lahf
or
xor
out
add
xchg
cld
ljmp
stc
sub
jo
adc
mov
jmp
daa
loopne
add
adc
fisubl
cld
out
test
mov
out
adc
repz
add
cmpsl
or
ss
hlt
pop
or
lahf
jle
cmp
aad
stos
hlt
cmp
pop
or
fwait
add
clc
pop
sahf
xchg
lods
mov
push
pop
pop
flds
lret
in
and
imul
shll
add
inc
cmp
inc
jl
ljmp
mov
push
mov
rolb
mov
rcr
xchg
mov
jns
mov
inc
leave
cmp
decb
pushl
test
cs
adc
iret
data16
clc
int
sar
or
lahf
jmp
stc
decl
mov
push
mov
pushf
mov
mov
ljmp
inc
add
out
add
xlat
push
xchg
aas
push
jmp
outsl
aaa
mov
pushf
mov
jg
dec
clc
pop
mov
cwtl
fimuls
insl
fcoms
loop
sbb
mov
outsb
push
iret
and
loope
xor
fcom
sbb
mov
int3
fcomip
outsl
clc
push
jmp
and
push
xchg
xor
fs
xor
jne
push
jmp
cmp
cmp
dec
lds
scas
aas
jg
incl
test
cmpsl
and
adc
adc
ja
movsl
loope
cld
out
mov
sbb
popa
out
xchg
xchg
xchg
bound
lods
xor
and
ja
cmp
ret
mov
add
sti
ds
in
jl
ret
push
loope
mov
push
clc
loop
sahf
jo
lret
ds
pushf
rolb
inc
push
lret
fbld
mov
jle
xor
in
and
mov
jb
aad
sahf
lcall
and
scas
and
mov
mov
outsb
enter
cmp
adc
dec
ret
jmp
lods
sub
ret
mov
push
push
add
ss
jnp
cmp
jae
xor
or
inc
sub
push
out
sbb
ja
ret
mov
or
aaa
enter
clc
xor
lret
in
popf
clc
incl
fsubs
jg
mov
repz
loopne
test
cmp
pusha
std
lret
leave
daa
inc
int3
test
inc
cmc
sahf
push
xlat
mov
xchg
cmpsl
adc
stos
push
es
imul
fbld
add
out
popf
xor
mov
and
mov
cmpsb
movl
mov
cmp
mov
fisubs
jno
fcomps
mov
and
loopne
sub
sub
adcl
sbb
inc
jae
or
adc
jo
cltd
hlt
test
rcrb
scas
clc
pop
shlb
mov
lcall
add
cmp
enter
in
popa
aad
dec
sub
add
inc
subb
filds
ljmp
cmpsb
mov
repz
push
iret
and
xchg
cs
mov
into
sbb
shrb
ret
daa
pop
in
mov
jnp
incl
adc
cli
das
nop
out
mov
mov
cld
call
cmp
leave
imul
lcall
mov
or
mov
out
jmp
mov
xchg
sub
ss
aam
xor
push
pop
js
jmp
add
outsl
mov
cmp
adc
pop
xchg
mov
mov
daa
les
decl
mov
fwait
sub
in
mov
cli
xor
xor
fisttpl
popf
xor
pop
sub
stc
mov
xor
cmp
scas
xchg
cmp
movsb
mov
mov
xchg
push
test
test
push
lcall
inc
ret
rcll
sub
mov
sub
pushl
fadds
inc
cli
mov
sbb
cmp
jno
lock
ret
fdivs
dec
dec
inc
aas
ret
mov
mov
cltd
fsubs
jg
inc
ds
ja
clc
cmp
roll
movsl
movsb
and
imul
jg
add
ja
xor
lods
sub
iret
insb
scas
mov
not
xchg
mov
mov
fcoms
xor
loopne
xor
scas
pop
adc
push
rcrl
les
das
das
fisubrs
mov
or
aas
movsl
sbb
es
mov
mov
xchg
jecxz
mov
jae
cld
mov
mov
pushl
sti
cmp
adc
aaa
popf
fisttpl
xor
mov
push
add
incl
pop
mov
in
out
adc
les
stos
sub
cmpsb
stos
leave
hlt
aas
decl
stos
dec
testb
je
jo
adc
pop
stos
int
fcomip
mov
inc
out
cld
jp
adc
xor
clc
js
sbb
jb
push
sti
lcall
iret
repz
insl
fmull
int
xchg
push
es
mov
loopne
cwtl
cmp
mov
dec
inc
roll
push
je
fwait
mov
setbe
repnz
cwtl
popf
sub
jns
scas
lcall
flds
or
inc
call
and
pop
repnz
add
scas
jbe
inc
loopne
push
incl
ss
test
cwtl
dec
push
pop
jbe
xor
push
mov
subb
movsb
pop
sarw
loope
hlt
sub
lret
or
sub
stc
or
decl
push
or
cld
xchg
xor
inc
jo
sarb
push
push
or
cld
cmp
int3
push
movsl
dec
fildl
lea
stos
clc
adc
mov
xchg
or
fstpl
test
movsl
jne
sub
fisttpl
dec
in
sbb
clc
push
mov
mov
mov
mov
and
cld
sti
lahf
and
add
cli
push
lods
sti
sbb
inc
jmp
fwait
xchg
jae
fisubl
or
and
push
cmp
jmp
and
out
arpl
sti
in
cmp
push
stc
push
fwait
jno
cmp
mov
imul
call
cltd
rcll
cli
es
jecxz
jno
mov
sbb
mov
fistps
adc
js
mov
or
stos
fwait
sbb
mov
xchg
cmp
pop
mov
and
dec
xor
cmp
repz
xchg
lods
testb
add
ds
mov
jg
cmpsb
sub
lods
test
cmp
add
inc
push
lods
push
int3
mov
pop
xor
scas
in
lock
jecxz
test
lods
loop
push
lret
and
jg
dec
or
pop
hlt
inc
lds
loope
jg
cwtl
jbe
dec
clc
push
test
out
dec
pop
int3
sbb
fwait
pop
call
add
push
sbbb
aaa
fimuls
push
pop
paddusw
insb
add
sbb
jmp
lds
mov
roll
stos
xchg
mov
pop
imul
decl
pop
mov
dec
cmp
jbe
jno
js
sub
sarl
js
incl
mov
test
hlt
std
iret
push
pushf
decl
mov
mov
sbb
sbb
add
shll
sub
xchg
adc
dec
in
ret
xor
jecxz
pusha
push
mov
sbb
ja
jg
xor
mov
ret
cmp
mov
xor
test
jbe
sahf
xchg
enter
or
ja
mov
outsb
cli
cwtl
outsl
sbb
sbb
cmp
lock
decb
movsl
lea
nop
cwtl
js
shlb
add
or
mov
mov
in
ljmp
loop
xor
mov
ffree
cs
test
jb
cwtl
mov
cwtl
pop
sbb
adc
lret
pop
lods
lods
xchg
lahf
xchg
mov
loopne
fcomip
out
dec
cmpsl
mov
sbb
mov
cmpsb
and
inc
xor
xchg
cmp
push
jae
pop
sbb
cld
xchg
fldenv
mov
dec
jmp
xorl
mov
and
test
sbb
or
mov
sbb
or
cmp
or
dec
movsl
cli
call
neg
sbb
mov
fwait
sub
jnp
mov
fbstp
xchg
sub
pop
icebp
jg
lcall
and
fwait
xor
loop
mov
in
dec
jmp
add
xor
and
stos
and
das
sbb
xchg
in
xchg
push
hlt
test
scas
mov
sbb
mov
sub
rorb
xchg
scas
dec
fiaddl
push
dec
in
mov
add
and
jo
lret
fcoms
add
push
clc
mov
leave
add
stc
mov
repnz
adc
jo
clc
daa
pushf
out
sbb
mov
sub
adc
sbb
popf
ret
test
cltd
xchg
ss
lods
mov
jmp
and
loope
pop
xchg
test
add
cld
sar
das
jbe
lret
xor
dec
and
xor
fmull
dec
daa
iret
and
mov
mov
xor
pop
xor
popl
add
loop
lcall
sub
xchg
pushf
cmc
xchg
and
or
daa
aad
push
sbb
out
and
hlt
ret
and
clc
pop
xchg
xchg
inc
or
mov
fdivrp
push
jno
cwtl
mov
xchg
inc
mov
clc
lahf
sbb
pop
decb
mov
daa
mov
stc
jle
inc
pop
pusha
push
adc
popf
xor
stos
sbb
cmp
fildl
push
adc
lcall
push
shl
and
dec
or
lock
jmp
jne
xor
mov
xor
dec
lahf
or
subb
sub
cmp
lret
cmp
sub
repnz
mov
add
mov
mov
mov
repnz
xchg
lcall
inc
push
add
subl
rol
sub
ret
loop
lcall
int
mov
cmp
out
in
sbb
mov
xchg
mov
imul
into
or
rorb
enter
test
sbb
jne
mov
mov
sar
push
aad
jns
xor
arpl
rorb
lahf
int
pop
pop
shll
out
inc
push
jne
add
push
cli
push
pop
jae
dec
stos
ds
cmpsl
mov
ljmp
out
push
int
pop
push
and
test
jecxz
add
xchg
shlb
pop
dec
ds
loop
jle
or
daa
lcall
cld
jno
and
decl
mov
movb
mov
xchg
movsl
xchg
and
mov
daa
cmpl
xchg
sbb
mov
mov
add
cmp
test
lcall
xchg
cmp
loopne,pt
lret
push
lret
loope
sbb
dec
clc
sub
mov
call
xor
sub
enter
pop
fcompl
xchg
jns
je
or
mov
adc
call
push
stos
mov
addr16
mov
sbb
xor
cmp
cmp
mov
mov
sub
mov
mov
out
xchg
fmuls
mov
ljmp
xchg
mov
xchg
dec
mov
jno
xchg
repz
dec
pop
adc
or
clc
es
lcall
sub
add
iret
cld
or
sbb
pop
sbb
sbb
test
decl
in
jmp
sbb
ljmp
mov
ret
mov
pop
mov
and
cmp
cmp
or
fmull
outsl
sahf
sahf
or
decb
add
cld
jmp
fwait
sbb
stos
cmp
pop
or
and
sbb
out
jno
es
adc
stc
sbb
icebp
or
dec
sub
mov
mov
das
rolb
test
movsl
mov
stos
fidivs
cltd
ret
xor
mov
nop
mov
inc
jmp
mov
or
stos
push
int3
cmpsb
sub
or
push
jl
mov
lods
mov
ret
aaa
loope
ss
ds
cli
ss
fisubl
jno
hlt
mov
mov
roll
mov
mov
das
cmp
push
int3
pop
and
push
in
lcall
jp
out
pop
icebp
filds
mov
in
into
arpl
adcb
out
xor
movsb
stos
jge
repnz
call
cld
mov
les
lods
out
mov
mov
push
dec
leave
xchg
jmp
ret
cmp
cmp
add
int
flds
jecxz
incl
push
jbe
data16
ljmp
incl
inc
sub
mov
lods
xchg
icebp
xchg
adc
into
mov
pop
add
sub
xor
mov
ss
scas
ret
inc
add
stc
cmpl
inc
sbb
adc
call
push
sub
cld
push
cli
jg
jmp
stos
das
test
ficomps
mov
nop
daa
xchg
fidivrs
mov
lock
mov
jmp
dec
pop
mov
cli
das
sar
call
lds
lock
sbb
xorb
sbb
fnstenv
ret
mov
mov
pushl
sbb
jge
outsb
lret
call
mov
loopne
pushf
lds
lcall
rolb
addr16
cmp
pop
jns
jmp
xor
imul
test
or
lds
jg
and
xor
mov
imul
or
movsl
inc
into
cmp
push
and
cli
incl
or
xor
jge
pop
xlat
in
inc
fstl
repz
mov
fistl
fucomp
data16
push
dec
cwtl
push
pop
jg
stc
mov
enter
leave
pop
lock
jne
mov
xchg
loopne
mov
jl
jp
ret
or
jge
shll
aas
decl
mov
test
ljmp
ficomps
iret
cmp
cmp
sbb
int
pop
sti
add
fsubrl
mov
decb
xchg
mov
incl
js
inc
xchg
adc
add
pusha
add
xchg
xor
lock
mov
fiadds
nop
mov
mov
fwait
or
mov
mov
lahf
ljmp
sbb
rorl
mov
leave
popf
or
imul
pop
movq
dec
jmp
out
lcall
mov
add
adc
dec
sub
nop
jecxz
mov
movsb
sbb
xor
xor
xchg
movsb
xchg
mov
jge
mov
mov
loop
xchg
jp
add
rcrb
decl
test
add
sub
aas
stos
nop
insb
push
repnz
into
ss
cmp
insl
in
mov
cmpsb
jo
sub
push
sar
decl
mov
xor
rolb
or
cld
in
dec
daa
rolb
loope
cli
and
enter
fs
dec
dec
stc
xchg
jmp
es
cli
jno
sbb
inc
push
jne
mov
add
das
orl
rcrl
shrl
cmp
pop
mov
sbb
test
pop
lahf
pushl
rcrb
movsb
ds
sub
rclb
shll
adc
mov
and
lahf
xchg
cld
xchg
inc
adc
test
jg
dec
fists
sarl
cli
jle
xor
aaa
xchg
xchg
cld
sub
movsb
stos
add
mov
incl
fcomip
cmpsb
int3
adc
push
or
clc
test
lahf
aas
pushl
enter
cmp
int3
and
das
mulb
pop
ret
dec
out
scas
test
jg
fs
cmpsb
xchg
or
in
orl
xor
test
dec
sub
aas
mov
movsb
cmp
or
pop
sar
jmp
or
and
xchg
mov
and
lret
pop
lock
incl
and
sbb
hlt
fdivl
or
cli
push
aaa
adc
add
int3
or
xor
xchg
cld
std
sub
shrl
add
stc
in
movsl
gs
sub
mov
lcall
xor
out
stos
lods
cmpsl
mov
imul
pop
aaa
jg
ljmp
fsubrl
sahf
fsubl
push
scas
xor
cmp
popf
mov
js
add
out
pushl
lods
in
sbbl
cmpb
cmpsb
inc
rorb
mov
les
iret
aas
mov
icebp
inc
sub
inc
xor
push
jg
xor
mov
jg
pop
in
loopne
mov
push
mov
imul
mov
pushl
cli
adc
enter
pop
push
stos
mov
or
mov
or
pop
fwait
int
pop
int3
pop
lock
loopne
lock
jge
add
xchg
push
cmp
bound
xor
sub
jnp
sbb
lret
fcomps
cmpsb
ljmp
dec
decb
lahf
push
xor
out
sbb
call
repnz
int3
add
mov
movsl
fdivs
decl
adc
cmpsb
add
cmpsb
neg
sbb
mov
push
call
cmpb
lcall
arpl
mov
xchg
dec
adc
mov
in
shr
dec
js
cs
pushl
jl
push
rcrl
xor
jb
es
leave
rolb
pop
cmpsb
push
lea
jae,pt
mov
pop
fnstcw
jle
xor
cmp
lret
lahf
or
lcall
subb
bound
mov
sahf
jnp
icebp
push
movsl
clc
or
or
cs
push
in
mov
pop
dec
dec
ljmp
cmp
push
shrb
jne
adc
mov
ljmp
mov
dec
enter
pop
rcrb
jg
add
mov
add
cmp
lahf
and
sar
out
mov
or
mov
mov
mov
mov
out
pop
fcomps
test
mov
or
mov
jge
ss
sar
stos
xor
test
sarb
xor
lock
sub
into
and
mov
add
inc
ljmp
pop
lcall
add
cmp
adc
and
push
cli
filds
lcall
sub
mov
mov
sub
jns
mov
ljmp
mov
mov
pusha
in
adc
aas
incl
fcoms
in
xchg
pop
jns
subl
out
mov
mov
enter
jg
pop
fstpt
ret
sbbb
push
jno
test
test
lahf
cmp
lods
cmp
or
rorb
fsubrl
rcr
cld
add
or
xchg
hlt
cwtl
lock
pusha
fldt
mov
outsb
mov
sahf
push
cmpsl
test
stc
pop
adc
pop
popf
pop
jecxz
out
sub
lock
ss
loope
incb
fisttpl
out
adc
push
shlb
es
popa
mov
in
and
lcall
pop
test
mov
jl
adc
call
adc
lcall
addl
in
push
mov
outsb
mov
mov
test
mov
mov
sub
jno
cmp
mov
movsl
decl
or
iret
mov
stos
cltd
sbb
mov
or
xor
or
int3
add
fcomip
add
mov
enter
out
mov
clc
clc
push
cmpsl
in
mov
fs
addr16
mov
in
mov
mov
pop
mov
cli
adc
call
call
mov
nop
adc
rcl
shrb
inc
lds
andb
stc
pop
jns
lods
jp
mov
int
mov
sub
loop
and
xchg
inc
jle
fnsave
mov
push
fstl
loope
rcrl
lds
test
dec
cmpsl
cmpl
mov
sub
add
sarl
fisttps
scas
sar
add
daa
push
mov
xchg
das
fwait
pop
inc
xlat
orb
out
add
je
cmp
jmp
sarl
jno
clc
cmpsb
inc
jae
xchg
test
insl
ljmp
cwtl
aas
mov
or
fisttpll
cli
sub
jle
imul
sbb
rclb
inc
icebp
outsl
shrb
jmp
int
data16
and
pop
insb
fisubrs
inc
les
inc
inc
adc
ds
jb
nop
fsubrs
mov
fcomip
cmp
xchg
and
cmp
pop
movsl
or
and
cmpsb
incl
les
cmpsl
scas
mov
int3
sbb
mov
add
mov
jns
xchg
call
pop
mov
or
push
cmpsl
jae
sub
int3
imul
ja
jle,pn
cmp
sar
cmp
xchg
jns
sbb
arpl
fcoml
loope
insl
dec
push
pop
mov
in
shrl
xchg
cs
in
push
cwtl
mov
lods
inc
mov
jecxz
sub
jne
mov
nop
mov
je
decl
nop
stos
iret
in
sub
loope
mov
sub
clc
pop
outsb
inc
xor
adc
fidivs
jle
push
mov
out
inc
and
cmp
lret
cs
ljmp
xor
jmp
push
sarl
sub
pop
loopne
incl
test
cmp
js
test
sbb
add
dec
rolb
call
jae
or
or
and
ljmp
cltd
cld
arpl
decb
sahf
out
cltd
mov
cmpsl
mov
incb
adc
test
lret
es
dec
mov
in
sarb
int
inc
aam
pop
lock
loopne
je
or
icebp
decl
mov
sub
lods
inc
mov
mov
test
add
jmp
lcall
nop
push
dec
adc
or
outsl
dec
jno
fdivl
addr16
adc
clc
mov
iret
or
inc
or
or
js
xor
mov
adc
push
jbe
push
call
cld
out
and
jo
roll
nop
clc
pop
mov
jecxz
lea
jmp
xor
cmp
aaa
mov
jae
test
cmp
jmp
or
pop
inc
in
subb
repnz
lods
push
inc
mov
into
popf
and
lea
leave
or
subb
decl
out
pop
gs
lds
lret
mov
aas
test
xorb
test
sub
dec
repnz
nop
mov
jecxz
mov
in
adc
decl
inc
std
scas
or
addr16
cmp
inc
inc
and
xor
lcall
jge
inc
out
mov
jnp
inc
leave
and
jns
mov
incl
stc
sub
repnz
or
and
jg
lock
lock
loop
jae
arpl
add
rcrb
cli
add
lahf
shrl
into
inc
sti
jle
cmp
enterw
xchg
sub
lcall
pusha
pop
jnp
sbb
fstps
clc
sub
jmp
pop
shll
adc
scas
rolb
pop
int
fimull
mov
push
subl
jg
pusha
or
enter
cmp
dec
hlt
mov
pop
push
loope
dec
push
jnp
xor
out
sbb
push
cli
push
scas
in
fnstcw
sar
popa
sbb
and
dec
in
rorb
mov
cltd
scas
cli
lcall
adc
clc
sbb
push
dec
sbb
xor
faddl
shll
scas
insl
lea
loopne
xchg
leave
xchg
ds
cmp
pop
test
or
into
jge
sbb
test
je
adc
dec
sub
adcl
ret
cmp
inc
decl
mov
stc
stos
lock
outsb
cmp
fldl
or
call
ds
mov
push
test
in
mov
lcall
add
mov
outsb
aas
inc
in
mov
or
jg
jbe
ret
xor
jecxz
mov
movsb
jo
dec
and
pop
xchg
test
inc
jne
xchg
mov
scas
ljmp
aas
scas
mov
xchg
pop
dec
cld
fbld
lock
out
jns
fwait
add
cltd
pop
call
dec
inc
dec
scas
add
xchg
mov
loopne
xor
push
mov
lcall
xchg
mov
mov
popa
xor
stos
pop
fcomip
jg
fmull
mov
pop
jne
jne
pop
push
pop
lcall
inc
popa
push
lds
push
add
call
fwait
jbe
mov
mov
fisubrl
mov
orl
test
mov
bound
decl
mov
xchg
lds
mov
test
xor
mov
or
cli
outsl
incl
xorb
push
addr16
cmpsb
jnp
cmpsb
sahf
loopne
lahf
sti
aas
test
and
insb
hlt
cltd
mov
mov
ljmp
mov
adc
stos
ds
and
dec
cmp
add
cmp
das
sarb
xor
cltd
cltd
shlb
sub
inc
mov
out
clc
std
push
xchg
repnz
test
fwait
xchg
lods
into
jne
xor
add
inc
add
and
adc
mov
mov
jp
sbb
sub
add
xor
adc
ljmp
cmp
loop
or
scas
jge
push
loop
cmp
sub
cli
xchg
test
mov
ljmp
fcomps
fdivrl
cmpsb
sub
add
pop
ljmp
xor
cld
and
or
sbb
call
xor
std
pop
xchg
mov
and
mov
add
jge
inc
dec
or
sbb
lcall
repnz
push
push
repnz
nop
inc
pop
insb
shrl
daa
jae
cmp
jp
std
and
stos
xchg
scas
mov
scas
xchg
test
out
or
xchg
bound
mov
fsts
and
cmp
cmp
sbb
cmp
es
fisttpll
test
in
cmpsl
cli
mov
stos
mov
push
mov
cltd
push
add
incl
cmp
int
adc
cmp
test
mov
fwait
cli
cld
jg
hlt
push
mov
sbb
inc
cmp
clc
mov
mov
push
call
inc
pop
xor
lds
inc
lcall
call
sbb
bnd
sub
mov
nop
test
pushl
scas
fsts
xchg
ret
mov
cmpsl
pop
in
dec
and
sbb
shll
loope
mov
repz
push
xchg
adc
lcallw
xchg
std
adc
gs
mov
xchg
repnz
dec
cld
loop
and
add
pop
cmp
adc
ds
mov
xchg
cwtl
rorl
xchg
stc
test
ret
mov
out
clc
lcall
sahf
lcall
fs
pop
mov
xchg
jle
icebp
lcall
cld
mov
loopne
mov
cmpb
lods
cmp
lock
jmp
shll
add
jecxz
rolb
jmp
xor
pushf
loope
xor
xchg
jb
inc
stos
idivl
out
out
mov
test
daa
mov
repnz
cmpsl
lcall
aam
fidivrs
jg
fbstp
xchg
scas
arpl
sahf
repnz
fs
xchg
test
push
in
lcall
cmpsb
sub
fisttpl
insb
lahf
push
mov
pop
inc
clc
outsb
jecxz
mov
dec
sbb
add
fwait
loope
jge
aad
fldcw
popa
enter
jl
fsts
push
loop
mov
mov
mov
lcall
int
push
mov
movsb
mov
nop
mov
clc
filds
adc
or
xchg
in
movsb
incl
loop
cli
ljmp
mov
test
andl
sbbb
popf
cli
decl
enter
nop
jne
pop
int3
cmpsb
mov
adcb
jmp
adc
mov
push
mov
ds
pushf
adc
adc
fwait
pop
push
add
adc
pop
lods
pop
mov
lcall
mov
sbb
and
ljmp
stos
add
enter
push
xchg
outsb
and
js
mov
mov
out
test
dec
outsl
dec
jp
cmpsb
jle
mov
and
test
aaa
jmp
xchg
int3
cmpl
fnstenv
ljmp
out
mov
clc
sub
add
inc
or
lock
and
and
mov
sar
shll
repnz
js
shll
aaa
or
jmp
stos
subb
movsb
lret
push
dec
incl
int
lods
xchg
js
push
int3
and
add
xor
lcall
pushl
add
loop
ds
jl
fbstp
mov
out
mov
xor
push
jns
bound
xor
lcall
push
jae
imul
jno
das
push
out
aas
jbe
jg
es
ljmp
popf
scas
imul
lods
or
jle
pop
push
push
cmp
outsl
jl
cmpb
in
movsb
scas
bound
jae
dec
mov
hlt
lods
cwtl
adc
gs
loop
sbb
pop
fdivrs
mov
xchg
hlt
xchg
daa
dec
cld
or
pushf
push
push
data16
inc
les
mov
fadd
and
dec
sub
xchg
mov
jno
inc
mov
xor
enter
enter
fistpll
add
lds
mov
mov
lahf
clc
out
mov
sar
push
addr16
ljmp
out
push
pushfw
push
and
cmp
cli
pop
cli
mov
aaa
imul
mov
fiadds
mov
jae
mov
inc
cmp
daa
pop
xchg
inc
in
cmp
xor
incw
sub
sbb
sub
or
test
inc
popa
out
push
ljmp
mov
add
sahf
dec
ss
pop
inc
lahf
ja
dec
leave
mov
adc
mov
xor
test
cltd
cltd
jb
push
fwait
and
sub
lcall
jl
bound
cmp
add
add
fcoms
xchg
inc
mov
mov
mov
inc
test
cli
mov
lret
add
sbb
das
data16
clc
adc
mov
xchg
repnz
push
sahf
cwtl
cmpsb
and
imul
xchg
les
mov
adc
popf
aaa
inc
and
arpl
cld
mov
pop
mov
or
ljmp
jecxz
pop
push
push
pop
dec
and
mov
gs
aas
adc
cmpsl
lds
lods
and
mov
add
cmp
aad
adc
lds
mov
mov
fcomip
ds
in
sbb
jno
es
mov
xor
mov
nop
repnz
cld
stos
call
test
int
stos
adc
mov
cmc
mov
push
add
fwait
aaa
push
addl
cmpsb
jb
popa
loop
mov
inc
jns
fistpl
mov
fwait
pusha
setae
dec
fmuls
mov
daa
inc
incl
ds
or
pop
mov
lea
out
mov
jmp
jb
fwait
adc
xor
mov
scas
ljmp
test
mov
cmpsb
iret
call
or
in
xor
push
ds
fmull
lods
negb
decl
jnp
mov
sbb
or
mov
movsb
jns
subl
push
iret
mov
sub
cli
or
std
mov
out
test
in
xchg
push
cmp
pop
cli
das
dec
xchg
sbb
xlat
xor
imulb
pop
mov
xchg
hlt
decl
pop
ficoml
movl
add
cli
inc
ljmp
push
xchg
rcll
dec
add
shrl
orb
out
rorl
mov
push
mov
mov
outsl
fsubrl
xor
movsl
clc
popa
sarl
imul
jle
mov
and
ljmp
call
test
inc
shll
es
lods
and
insb
lods
add
popf
fcomps
ja
dec
dec
jp
lods
cmp
lock
ljmp
cli
xor
jecxz
popf
js
andb
pop
mov
inc
fcomi
mov
push
dec
add
adc
pusha
or
sub
movsb
xchg
outsb
add
ja
mov
lock
lods
xor
xchg
cmp
xor
gs
xchg
xor
sbb
and
in
adc
cmp
mov
jg
loope
iret
sahf
sub
es
sub
or
jg
out
es
imul
xchg
mov
and
stc
and
xchg
sub
jmp
adc
jmp
in
mov
cmp
mov
push
popf
clc
and
ljmp
lret
and
lods
int3
pop
xchg
rorb
incl
mov
sbbb
pop
sti
sbb
loope
dec
cs
cmpsb
cs
jns
test
out
cmp
push
scas
mov
cmp
fisubs
xchg
sub
or
mov
int3
sbb
jbe
nop
inc
aas
push
inc
aaa
sub
sbb
cli
inc
jmp
cmpsb
repnz
aas
mov
push
pop
repz
loope
sub
pop
daa
fisubs
mov
and
jb
sub
inc
incl
and
pop
iret
or
adc
xor
sub
dec
inc
test
aaa
sub
push
mov
sub
add
insl
dec
pop
fldcw
inc
cmp
scas
movl
enter
pusha
cli
xor
sub
in
in
push
aas
dec
mov
cli
mov
fisttps
xchg
xor
ljmp
rcrb
adc
xchg
add
and
and
into
and
mov
popa
int
mov
add
adc
or
fmuls
fcoms
add
lds
cmpsb
lds
jg
cs
insb
push
dec
jne
mov
loopne
cld
sbb
add
add
mov
sub
int3
dec
dec
out
and
or
lahf
pushl
jns
add
jbe
mov
ds
pop
lcall
pop
jns
faddl
dec
movsb
sub
mov
fwait
hlt
and
repz
mov
sbb
mov
add
cli
jne
adc
decl
xchg
jne
mov
and
or
aas
mov
sub
rcrb
fldt
xchg
call
mov
incb
adc
stc
xor
lret
push
imul
fidivrs
stos
sub
aaa
shrl
jg
loope
push
push
and
push
fiadds
xor
sti
sbb
pushl
add
fsubrl
repnz
cli
es
adc
cmp
cmp
test
inc
jne
jno
sub
call
inc
pushl
xchg
and
cltd
je
cmp
mov
mov
push
jmp
stos
mov
imul
xchg
aas
shl
and
idivb
incl
mov
lcall
repnz
popf
sbb
or
incl
pop
lahf
das
repz
stos
inc
mov
cmp
mov
pop
mov
cmp
icebp
pop
int
pop
xchg
test
dec
notb
out
les
xchg
or
test
lods
loopne
pop
test
mov
sbb
cmpl
pushl
into
xor
mov
inc
mov
nop
lods
mov
movsl
lock
std
mov
mov
lcall
jg
jp
sbb
push
mov
rcr
cld
pop
mov
xchg
pop
stos
adc
pop
pop
call
mov
cmp
dec
leave
add
push
mov
xchg
cmp
hlt
lods
pop
std
das
sbb
ljmp
sub
jmp
fiadds
xchg
mov
lret
mov
test
scas
mov
jge
scas
adc
xor
clc
dec
out
xchg
int
test
push
mov
jno
and
addb
pop
jne
sub
loopne
mov
mov
sbb
loopne
mov
popf
test
jne
xchg
mov
mov
cld
add
add
loop
sub
test
call
inc
mov
pop
mov
or
sub
xor
icebp
or
and
outsl
cli
cs
adc
sub
adc
mov
pop
dec
aas
dec
call
rcrl
fistpll
adc
sbb
pop
xor
sbb
aas
int
pop
push
shrl
in
test
mov
pop
push
into
xor
mov
nop
sub
xor
ljmp
pop
mov
add
ljmp
call
dec
mov
test
incl
push
shlb
cli
cltd
jle
sbb
mov
jg
imulb
pop
adc
pop
mov
cwtl
xor
dec
es
nop
arpl
loope
lea
clc
les
xor
sub
inc
add
insl
int
scas
or
arpl
mov
cli
push
inc
cwtl
xchg
in
cmpsl
ret
clc
cs
pop
into
insl
sar
jg
adc
rorb
pop
xlat
test
mov
lea
mov
mov
sbb
sbb
push
pop
or
cmp
in
jbe
add
mov
jmp
aas
dec
enter
or
test
fadds
xchg
xchg
add
dec
inc
repz
ljmp
cmp
mov
push
dec
ret
and
cld
iret
jg
or
push
in
cmp
pop
jbe
out
push
jo
dec
ljmp
cmp
popf
push
add
incl
lea
push
cmpsb
ss
lods
lds
add
dec
fwait
cld
mov
adc
je
xor
out
mov
out
mov
js
mov
es
pushf
and
cmp
jecxz
int
sbb
es
and
dec
sbb
hlt
push
xchg
xchg
mov
lea
sbb
xchg
and
adc
into
xor
add
ljmp
sub
je
mov
mov
add
inc
cmpb
jae
push
jmp
jp
lret
loope
mov
shll
popf
aad
test
jns
mov
les
mov
test
cmpb
ljmp
or
pop
push
loope
popf
cwtl
sub
inc
dec
test
lea
loopne
jo
inc
sahf
sub
dec
jmp
mov
subb
decl
cmp
clc
das
xchg
mov
cs
sbb
adc
mov
aam
xor
mov
xchg
dec
retw
push
push
out
les
loopne
stos
push
cmpl
rorb
in
iret
js,pt
repnz
mov
out
mov
mov
outsl
cli
cmp
jg
mov
nop
arpl
in
popf
dec
sub
lahf
or
fstps
movsb
mov
clc
cmpsl
xchg
iret
daa
mov
push
cmp
mov
icebp
fistps
push
push
fildl
popf
and
pop
popf
xchg
dec
mov
push
mov
nop
inc
and
mov
stc
mov
adc
sahf
pop
mov
test
outsl
clc
ss
clc
outsb
and
push
xor
nop
loope
and
push
pop
fmuls
add
mov
add
lock
inc
cmpb
dec
sbb
mov
lahf
test
scas
jg
pop
insb
out
add
repnz
sbb
loope
stc
cmp
ljmp
movl
cld
or
lods
jl
out
mov
test
int3
hlt
mov
call
loope
sbb
pop
dec
jo
pop
test
incl
cmpsl
ds
mov
jns
in
inc
clc
xor
jb
out
mov
stos
clc
lea
or
pop
mov
cmp
ss
adc
sbb
cld
mov
sbb
mov
and
stc
adc
stos
jp
adc
popf
push
jge
dec
scas
inc
je
call
cli
lcall
cmp
cmp
sbb
clc
call
rcll
pop
es
lcall
sbb
dec
add
cmp
cld
pop
inc
jno
adc
sub
push
xchg
ljmp
cmpsb
jg
sub
sub
xor
hlt
in
test
sub
ljmp
das
fnstenv
popf
ja
je
nop
ficoms
mov
das
test
jge
int3
sbb
push
dec
dec
loop
mov
imul
test
cmpsb
stc
or
jne
mov
and
and
imul
mov
std
or
das
jbe
and
stos
add
mov
fcoml
xchg
in
pop
dec
adc
scas
js
xor
mov
mov
lcall
movsb
jge
pop
imul
mov
push
cli
xchg
js
mov
sub
and
lahf
aam
add
int
adc
lds
jmp
movsb
jmp
stos
clc
pop
mov
inc
insl
sbb
aaa
mov
out
cs
jb
add
loopne
adc
dec
loopne
push
dec
js
outsl
lds
bound
outsb
pop
inc
std
pop
dec
cltd
rorb
pop
jno
jnp
sbb
inc
or
loope
mov
jno
cmp
add
push
adc
mov
sbbb
daa
nop
out
sbb
add
dec
inc
daa
add
sub
lcall
jb
cmpsl
fsts
adc
pop
jne
jp
inc
adc
out
mov
sbb
das
jge
dec
jmp
fs
mov
ljmp
fldcw
out
stos
call
inc
fists
std
inc
jp
and
stos
and
jmp
jge
bound
scas
mov
cs
roll
bound
inc
xor
fmull
and
stc
push
sti
icebp
pop
xchg
cmp
scas
sti
xchg
add
inc
popa
pop
pop
icebp
adc
mov
or
in
mov
push
stc
int
aam
push
rcr
mov
test
mov
icebp
adc
jp
je
inc
jns
adc
inc
in
pop
inc
outsl
sub
mov
jl
aas
ljmp
subl
inc
jle
xlat
sub
fidivrl
std
lcall
scas
adc
push
jge
inc
push
gs
iret
hlt
pop
lods
xchg
mov
and
movsb
stc
in
push
fmulp
aaa
mov
pushf
leave
icebp
and
call
nop
cmpsl
mov
ficoml
or
hlt
clc
push
movsl
aaa
imul
scas
push
ds
xchg
cmp
pushf
mov
fbld
jmp
sub
in
pop
xchg
mov
mov
pop
cli
dec
jne
hlt
sub
movsl
dec
mov
sub
movsl
mov
and
outsl
mov
cmp
in
test
dec
mov
jnp
sarb
sub
hlt
xchg
imul
repz
scas
mov
das
sub
aaa
add
sbb
push
xor
ss
ljmp
xchg
mov
and
and
mov
movsb
add
lea
cmpsb
out
and
sub
jmp
mov
and
outsb
lcall
subb
cmp
mov
mov
stos
enter
mov
mov
jle
or
hlt
test
xchg
inc
cwtl
or
subl
lds
mov
inc
jg
mov
xchg
pop
cmp
sub
mov
clc
push
pop
mov
pop
mov
inc
jbe
xchg
gs
cmp
push
xchg
mov
test
or
nop
nop
sbb
les
jecxz
std
cmpsb
pop
pushf
sbb
stc
xor
cmp
jecxz
adc
clc
inc
xor
xor
jg
int
addr16
mov
pop
ljmp
loopne
movsb
into
fcomip
pushl
mov
rcrb
mov
xor
mov
ljmp
mov
mov
mov
xchg
or
nop
dec
inc
pop
push
mov
stos
in
aas
mov
mov
mov
repnz
test
adc
mov
das
push
and
je
call
stc
push
repnz
test
mov
push
lahf
dec
lods
cli
fdivrs
movsl
dec
xor
or
mov
les
xor
jmp
movsl
sub
mov
jge
xchg
push
jne
scas
inc
cld
jg
fstps
out
inc
add
ja
ret
iret
rcrl
daa
push
add
orl
mov
sbb
or
fidivrl
std
jo
jle
addl
lcall
je
jg
enter
cmpsl
add
stc
jmp
pop
sbb
add
aas
test
out
push
cmpsl
mov
mov
out
test
es
xchg
scas
mov
gs
das
loope
lock
idiv
lahf
push
mov
mov
pop
sbb
push
movsl
add
push
cwtl
cmp
mov
xchg
xor
pop
scas
pop
add
leave
or
clc
bound
mov
inc
xchg
pop
in
adc
push
scas
in
cld
movsb
adc
xlat
sub
ret
call
lcall
xchg
mov
test
adc
add
out
inc
mov
pusha
jecxz
adc
imul
pop
loop
add
insb
sarb
into
addps
xchg
xor
call
dec
mov
notb
shrb
mov
xor
shlb
movnti
pop
xchg
xchg
mov
int3
lahf
sub
filds
clc
incl
inc
dec
repz
pop
and
ljmp
mov
dec
jecxz
mov
jo
ljmp
clc
cmp
cmp
bound
or
xor
test
aaa
scas
dec
mov
shll
inc
and
repnz
pop
outsl
fimuls
in
xor
call
cmp
test
or
cwtl
pop
add
inc
dec
les
push
sbb
ja
add
lret
ficompl
xchg
cld
adc
aaa
pop
lods
call
test
sub
jecxz
out
or
jo
adc
lcall
pushf
out
inc
call
dec
fistl
mov
cli
push
scas
lock
inc
lock
test
xor
jmp
jae
lcall
ret
inc
fists
negb
xor
adc
repnz
pop
daa
in
imul
pop
inc
into
orb
jno
insb
lods
mov
fdivp
call
mov
add
lahf
xor
cmp
dec
cltd
shlb
test
mov
int
imul
cmp
pop
test
cmpsb
mov
sahf
xchg
jo
decl
cmpsb
jae
push
inc
clc
cs
dec
and
push
mov
outsl
jg
lcall
imul
mov
push
scas
cmpsl
rolb
mov
mov
jo
ficompl
adc
or
mov
ds
ds
fisubl
dec
insl
xor
adc
out
xchg
inc
push
add
aaa
pop
xor
xor
xor
ljmp
mov
or
lcall
lcall
and
cmp
and
push
inc
imul
popl
mov
cmp
and
cmp
sub
cmp
pop
push
cmp
cmp
mov
pop
pop
fs
and
in
or
jmp
jns
adc
push
xchg
inc
inc
pop
jns
pop
add
mov
jg
inc
aad
adc
add
add
sub
cmp
stc
inc
clc
xor
mov
in
imul
cmp
fisubs
out
je
push
jl
or
and
dec
ja
inc
pop
mov
xchg
jno
jno
push
bound
ret
or
push
loop
cld
lock
fs
movsl
inc
dec
aas
sarb
gs
push
dec
out
mov
mov
lcall
sbb
rorl
jmp
jae
jmp
and
sub
cmp
shll
ss
sahf
shrb
xchg
adc
push
add
std
das
mov
pop
outsb
mov
push
fidivrs
cmp
lods
decl
lcall
cltd
lock
adc
dec
aas
cld
inc
sbb
mov
adc
icebp
decl
pop
adc
iret
mov
mov
fbld
imul
call
push
fildl
mov
or
icebp
incl
enter
push
stos
fldcw
int
jg
mov
push
push
mov
or
daa
add
decl
cmpsb
jmp
pop
mov
jg
or
jle
cmp
xor
cmp
dec
fmuls
out
pop
cmp
test
mov
imulb
jno
in
mov
mov
aas
and
or
fdiv
fwait
dec
and
in
cmp
mov
call
loopne
shl
inc
aam
push
cld
xor
inc
in
pop
jnp
sbb
imul
mov
inc
rclb
xchg
clc
dec
bound
js
jns
mov
jo
xor
add
mov
push
loopne
scas
mov
jp
sbb
cmpsl
lcall
out
movsb
dec
sub
push
in
add
mov
sahf
push
incl
mov
scas
xor
test
mov
fwait
clc
ss
aam
sub
push
mov
gs
loop
lds
lods
popf
test
dec
lcall
and
arpl
xor
ljmp
adc
mov
call
dec
popf
inc
test
filds
jo
insb
or
mov
iret
cmpsb
mov
sub
dec
inc
in
popf
cltd
les
mov
adc
fwait
push
mov
sar
decb
aam
xor
mov
mov
sbb
incl
dec
roll
mov
xor
pop
inc
jg
cmp
and
ljmp
mov
mov
imul
and
int
jb
adc
scas
cwtl
inc
pop
and
movl
or
loopne
pop
repnz
in
pop
lods
add
ljmp
inc
popf
cld
movsb
stos
scas
rolb
icebp
out
pop
push
jo
dec
movsl
mov
pusha
dec
js
ljmp
mov
fdivl
aas
lret
push
lcall
pop
inc
lds
shlb
scas
repz
mov
sarb
icebp
sbb
dec
pop
inc
loop
xchg
stos
loope
mov
push
call
daa
jns
loopw
jnp
sub
jb
xchg
stos
mov
push
push
dec
mov
pop
ss
sub
push
in
dec
pop
loopne
jecxz
dec
dec
xor
fwait
fwait
mov
mov
popf
lods
mov
fsubl
mov
mov
call
jg
rcrl
cmp
jg
test
loopne
mov
ljmp
and
add
sub
popa
ljmp
addr16
pop
adc
ds
stos
testb
ljmp
xchg
inc
mov
fists
loop
incl
loope
inc
shrb
mov
scas
sub
sbbl
or
mov
arpl
mov
repnz
sub
mov
dec
xchg
and
loopne
mov
cmp
out
adc
cmpb
ljmp
jecxz
inc
aaa
stc
das
dec
sbb
es
and
in
mov
and
incl
jmp
ljmp
add
pop
jne
pop
adc
and
push
decl
pushl
adc
and
mov
inc
xor
sbb
push
push
and
loope
xchg
inc
push
pop
sti
xor
jmp
xor
sbb
in
mull
ja
stos
dec
and
sbb
xor
adc
push
pop
repnz
jmp
xchg
aam
jle
je
daa
mov
pop
subl
clc
aas
push
pop
aaa
inc
loop
mov
cmp
push
adcl
out
cmpsb
out
mov
movsl
mov
incb
cwtl
into
cmp
lds
js
arpl
sbb
inc
call
mov
jno
push
cmp
push
lcall
addr16
gs
cmp
popa
gs
mov
movsb
xor
xchg
dec
enter
std
aad
rolb
mov
pop
and
mov
push
mov
xor
dec
decl
loope
add
sub
sub
cwtl
loopne
lcall
shll
mov
cmpsl
and
pop
in
dec
jecxz
stos
xor
sbb
mov
enter
fbld
std
outsb
push
fcoms
fldenv
stos
mov
sub
add
mov
pop
or
iret
xorl
sbb
call
call
add
fistl
test
xor
mov
push
ficomps
dec
imul
jns
push
jp
fs
cmp
jbe
imulb
mov
mov
icebp
jg
sti
sub
xchg
addr16
xor
lods
mov
inc
mov
push
loopne
loopne
data16
inc
into
out
mov
cwtl
jle
icebp
push
adc
fdiv
das
fadd
mov
ljmp
add
adc
mov
xchg
rol
adc
mov
loopne
cld
jl
jmp
push
sbb
fnstcw
mov
mov
hlt
xor
lea
hlt
loope
add
shll
mov
ljmp
add
fiaddl
dec
pop
jg
jg
xor
clc
jnp
adc
inc
sub
das
mov
decl
arpl
les
xchg
xchg
lcall
int
jmp
mov
cmpsl
loopne
pop
test
sub
notb
or
mov
lret
cmp
fcoms
out
rcrl
xchg
into
sahf
adc
dec
imul
or
xchg
xchg
test
das
jns
dec
mov
cwtl
test
mov
inc
inc
adc
sbbl
ss
lret
mov
pop
push
sbb
inc
pop
pop
gs
lcall
xor
xor
hlt
inc
mov
sbb
and
adc
adc
insb
mov
mov
cmpsb
mov
test
dec
call
pop
cmpsl
scas
lcall
test
cld
aam
mov
ss
je
mov
add
xchg
jge
outsl
pop
into
call
mov
jmp
mov
aas
incb
adc
cmpsb
js
inc
fucomip
ljmp
jbe
xchg
xor
repnz
cmp
je
cld
and
xor
ljmp
aam
mov
fidivrl
mov
or
sbb
mov
out
cli
mov
jnp
add
push
fdivr
push
out
icebp
iret
pop
clc
in
xor
loopne
lea
aas
sub
std
stos
movsb
ljmp
lcall
push
mov
shufps
add
lcall
fbld
jp
call
incl
cld
out
pop
mov
push
test
scas
pop
scas
mov
fsubrs
test
xchg
cmpb
and
jg
or
dec
adc
xor
incl
mov
loope
jae
or
fs
stos
adc
inc
lret
lcall
imul
out
sbb
lds
call
push
push
loopne
push
test
mov
jp
add
mov
push
lret
loopne
test
ljmp
shlb
loopne
pusha
adc
ss
xor
cmp
lcall
std
dec
cmp
pop
or
xor
mov
mov
sbb
rcrl
insl
ds
pop
sub
cs
ds
lahf
fisubs
add
push
ss
stos
shlb
mov
dec
fsubr
push
js
adc
daa
call
jo
aaa
scas
mov
loope
push
pop
fxch
adcb
or
push
jg
repnz
cmp
cmp
fidivs
clc
cmp
notrack
aad
mov
into
movsl
inc
or
das
lret
sub
inc
outsb
mov
call
andb
and
adc
es
add
cmp
dec
add
ds
cli
cld
xchg
pop
stos
dec
pop
xchg
sub
data16
popf
ds
hlt
mov
mov
mov
pop
push
lcall
dec
jnp
imul
sti
or
aaa
fldenv
incl
jg
loopne
imul
or
sub
sub
scas
gs
decl
cmp
push
push
cmp
imul
std
add
mov
sbb
cmp
idivb
in
mov
mov
pop
dec
and
mov
jg
aam
or
data16
xor
aas
jmp
lods
ret
xchg
add
nop
or
in
add
and
cwtl
andps
mov
sbb
and
int3
mov
icebp
adc
and
adc
or
push
sar
jle
cli
and
clc
pop
outsb
sub
stos
add
lock
push
test
in
push
mov
mov
mov
clc
lahf
cs
sub
mov
insl
add
add
outsl
push
inc
cmpsl
jb
mov
mov
add
and
push
cltd
scas
pop
outsb
ja
xchg
xor
es
iret
xor
int
incl
lcall
les
sbb
cmp
pop
and
cld
xor
xchg
cmpsb
outsb
mov
mov
mov
cld
stc
hlt
jmp
aad
hlt
hlt
cmp
movsb
dec
xor
bound
sub
cmp
jmp
mov
inc
push
push
outsl
inc
adc
mov
sbb
inc
push
lods
pop
push
pop
xchg
sbb
xchg
out
add
shll
ljmp
push
or
xchg
movb
movsl
jns
pop
lcall
mov
lods
mov
sti
aaa
lods
mov
inc
ret
popf
xchg
sub
adc
jnp,pt
jo
xchg
mov
jns
in
mov
mov
dec
int
pop
insb
mov
insl
scas
xchg
xchg
mov
xchg
lods
xchg
movsb
mov
pop
mov
add
aad
movsb
jle
xor
lahf
add
jo
sti
out
lcall
mov
jo
in
fisttpl
fcmovu
lahf
add
adc
imul
rclb
and
xchg
pop
fimuls
addb
aas
jle
pop
mov
push
imul
lods
imul
and
test
push
decl
mov
xchg
jno
add
or
jbe
dec
loopne
sub
mov
ds
pushf
lods
mov
push
and
mov
xor
movsl
emms
mov
jg
and
sub
xor
push
adc
test
std
lcall
mov
mov
pop
dec
cli
cld
add
sub
inc
mov
and
inc
incl
lock
out
movsl
push
lock
nop
mov
addr16
xchg
call
add
loop,pn
call
push
inc
in
xchg
pop
and
mov
test
cld
push
shlb
pop
stc
pop
push
pop
fsubrl
jle
aas
mov
sbb
push
arpl
cli
ss
add
jbe
movsb
aaa
icebp
or
loope
sub
mov
mov
mov
cmp
jmp
idiv
push
call
mov
cwtl
in
ljmp
sub
pop
adc
push
xorl
popa
test
xchg
scas
xchg
inc
add
push
hlt
sbb
shlb
cwtl
outsb
rolb
loopne
cmp
imul
ret
call
int
movb
lds
mov
adc
push
cmp
sub
iret
sets
pushf
jg
sub
stc
cmp
out
mov
push
jmp
out
add
or
fcmove
pop
mov
mov
xchg
and
mov
xor
sbbb
arpl
dec
add
jp
mov
sbb
xchg
fwait
test
xchg
sbb
arpl
push
rorb
ret
lock
cli
out
into
adc
fadd
xor
fstl
fisttpll
hlt
mov
add
add
jg
imul
mov
and
pop
jns
push
std
mov
dec
mov
movsb
incb
pusha
lds
movsb
lds
jnp
xor
jmp
inc
loope
daa
push
scas
push
dec
mov
mov
dec
mov
sub
decl
and
add
xchg
cmp
sub
xchg
mov
insb
cmp
mov
jg
ret
sbb
movsl
adc
jp
lods
or
xchg
sub
fsubl
fwait
lds
jmp
ds
cmp
sbb
cs
xchg
or
dec
push
cld
sti
cld
out
lcall
rcrb
mov
add
ss
in
lcall
fisttps
sbb
push
cmp
sbb
mov
pop
mov
insl
jmp
dec
ss
das
mov
mov
push
mov
hlt
adc
adc
pop
xor
or
cmp
or
les
in
sub
cmpb
data16
or
jg
xchg
popf
test
mov
mov
jg
push
es
ljmp
adc
add
or
das
xor
fisttpl
int
js
outsb
adc
sub
fadds
hlt
mov
incl
ret
xor
add
rolb
or
cmpsl
dec
incb
sbb
xor
jbe
inc
push
enter
outsl
sbb
incl
stc
sbb
test
mov
xchg
shrb
inc
das
loopne
mov
pop
cmpsl
loopne
mov
clc
jl
dec
sub
mov
add
sarl
xchg
cmp
pusha
xor
repnz
ljmp
cmp
pop
lods
inc
push
fsubrs
push
dec
in
mov
inc
loop
incl
enter
mov
pop
mov
adc
test
aaa
jl
adc
jecxz
push
dec
xor
xchg
outsl
das
out
mov
add
mov
xchg
lret
ret
lcall
test
shll
adc
mov
test
filds
out
pop
shlb
shrb
ja
pushl
sbb
lods
inc
clc
cs
sub
lds
frstor
mov
and
mov
addb
dec
jb
inc
sbb
dec
orb
push
mov
dec
push
mov
into
loop
add
out
sahf
iret
daa
mov
gs
jo
cli
cmp
cmp
pop
push
mov
scas
or
sbb
mov
sub
loop
add
call
repz
xchg
xlat
daa
std
sub
and
test
aad
inc
ffree
push
xor
hlt
gs
and
jle
in
je
cmp
das
and
mov
push
test
outsl
rorb
aam
or
mov
cmp
sub
fs
lcall
xchg
and
mov
clc
xor
in
cmp
test
mov
decl
pop
push
int
jg
add
lds
ja
mov
in
pop
push
pop
in
push
xchg
inc
xor
data16
inc
out
jg
mov
iret
nop
xchg
mov
cli
sar
outsl
xchg
xchg
call
mov
test
ja
inc
pushl
cmp
mov
sar
incl
mov
or
cmp
sbb
push
dec
les
xchg
flds
cld
lcall
popa
stc
sbb
push
sub
lock
pop
clc
xor
pop
pop
xchg
push
dec
jmp
and
cmpsb
xor
hlt
push
pop
sti
xchg
cmp
call
pop
inc
dec
in
and
mov
jns
inc
negb
push
sub
jg
dec
sbb
xor
aas
cmc
mov
ds
push
fimuls
dec
add
maskmovq
ljmp
xchg
arpl
adc
pop
loope
push
and
cmp
push
push
mov
imul
aas
or
or
xor
fdivs
dec
adc
adc
ljmp
in
mov
jns
loop
mov
mov
gs
and
out
pop
ret
jge
jns
addr16
add
xchg
pop
add
add
add
sbb
mov
jbe
push
jae
lcall
push
out
daa
in
mov
popa
js
test
ja
push
mov
sahf
sub
xor
out
mov
hlt
sti
setno
sbb
iret
cmpsb
pop
jl
fucomip
push
lods
or
dec
call
fiadds
dec
shlb
xor
cmp
push
push
in
lea
clc
sub
jo
jg
jl
stos
dec
test
ja
daa
int
std
arpl
sub
jl
loopne
ficomps
jg
incl
out
adc
sub
push
in
test
push
ljmp
jg
push
mov
idiv
mov
aad
ds
mov
addr16
dec
mov
ss
mov
push
mov
aad
or
mov
iret
sub
push
add
pop
dec
add
movsl
sti
ds
lods
aad
outsl
dec
add
test
pop
pusha
out
sbb
test
inc
xor
cltd
lcall
hlt
jle
ficompl
in
mov
mov
cmp
out
scas
mov
js
mov
mov
adc
popa
push
dec
inc
add
cmp
push
cmp
daa
popa
or
add
mov
ds
hlt
pop
mov
jl
xchg
sahf
imul
jge
adc
in
pop
cld
es
lods
cmpl
ljmp
mov
push
xchg
dec
adc
or
repnz
shrl
and
decb
call
add
cltd
test
shlb
in
push
inc
fstpt
lds
dec
test
int3
or
push
inc
out
mov
in
xchg
mov
ds
add
or
xor
sub
cmp
rorb
add
mov
pop
dec
int3
pop
repnz
pop
fimuls
call
sub
aas
pop
cli
and
and
test
mov
fnstenv
inc
pop
out
clc
push
xchg
pop
sub
addb
fists
fbld
adc
es
jbe
dec
inc
mov
xor
xlat
sub
outsl
clc
pushl
out
ja
cli
mov
lret
add
pop
inc
out
int
jo
or
int3
mov
dec
dec
pop
out
push
sbb
pop
sbb
notl
pop
outsl
decl
gs
inc
outsl
sar
cmp
mov
gs
pop
clc
subb
adc
lret
cli
ja
clc
ljmp
pushl
mov
dec
inc
inc
rcll
sbb
daa
push
cli
cmp
sbb
xlat
add
xor
sti
aas
dec
add
hlt
sub
aas
inc
and
ljmp
enter
inc
push
jno
push
inc
lret
jb
in
ss
xor
inc
and
decl
icebp
push
jns
or
stc
sub
popf
cmpsb
jno
inc
cli
mov
xor
inc
push
mov
int3
pop
test
test
jmp
gs
and
add
rcrb
adc
adc
loope
ja
fidivs
aaa
jge
int3
jns
mov
cmpsb
dec
in
js
adc
jg
clc
daa
jl
or
sbb
pop
mov
repnz
rorl
ljmp
jp
std
adc
xor
rcll
or
pop
cmp
imul
mov
inc
loop
jg
xor
pop
pop
orl
mov
xchg
outsb
or
decb
aaa
mov
dec
mov
pop
stos
scas
cld
mov
sbb
std
inc
clc
das
ljmp
cli
xor
loop
push
pushl
or
stos
hlt
inc
inc
push
sarb
call
sub
adc
movq
sbb
sub
clc
cmp
xor
daa
rcr
push
push
add
incl
mov
loop
jle
call
or
std
aaa
test
sbb
pusha
sahf
xchg
mov
lea
loopne
lcall
mov
add
shlb
shll
inc
push
inc
ret
test
jmp
shr
cmpsb
hlt
pop
jecxz
dec
sbb
xchg
push
jo
fs
jne
ds
iret
sbb
sbb
cmp
mov
test
das
pushf
aaa
dec
lds
insl
and
add
int
inc
cli
jg
or
xor
out
jae
jno
test
sahf
or
mov
cli
lock
aas
mov
lret
lahf
fnstcw
cmpsl
fsubl
aas
es
stos
sbb
xchg
js
das
inc
into
sbb
icebp
xchg
dec
mov
cld
add
pop
insl
aam
push
and
mov
mov
mov
out
pop
sub
pop
rcll
lea
mov
pushl
dec
shrl
or
stc
jo
popa
in
add
mov
push
clc
and
push
or
pop
subb
mov
ss
addr16
cmp
test
insl
xchg
cmpsb
mov
loope
cmc
stos
inc
cli
setle
cmp
dec
outsb
pop
data16
push
mov
push
pop
adc
mov
xor
xchg
jnp
cmp
sub
icebp
push
mov
incl
lds
push
cmpsb
dec
cmp
push
cmpsb
cli
sbb
fdivl
push
ret
sti
push
cli
ds
shlb
cmp
push
add
fwait
sub
xor
and
cmp
into
pop
pop
xor
push
out
inc
mov
add
and
iret
shrb
fsubl
ret
shrl
mov
stos
add
push
inc
loop
mov
sti
push
adc
mov
stc
adc
xor
in
xchg
mov
incl
add
data16
imulb
xchg
popa
cmp
rolb
insl
dec
clc
pop
rcr
icebp
incl
cmp
jge
jno
mov
adc
ds
pop
iret
sub
lahf
cmp
and
call
adc
dec
aam
xor
inc
mov
fisubrl
insl
std
stc
xchg
imul
adc
lcall
call
out
mov
mov
call
jnp
int
ja
or
outsl
int3
mov
xchg
inc
div
inc
fcomip
cmp
mov
ss
or
clc
push
nop
hlt
mov
push
aam
mov
inc
jecxz
nop
clc
and
lcall
filds
in
cmp
push
lods
push
aas
lds
mov
cmp
gs
or
inc
push
aam
push
pop
and
and
lcall
jno
mov
sub
pop
int
mov
sub
cmp
sbb
scas
inc
clc
or
push
pusha
and
jbe
xchg
outsl
clc
jg
jbe
mov
repz
jl
xor
cli
mov
lods
sbb
decb
sub
xor
adc
jmp
mov
sbb
and
lcall
jo
ss
dec
shlb
mov
sub
testb
outsl
test
pop
mov
adc
add
push
loop
xchg
or
jno
and
or
mov
pop
cmp
xchg
mov
ljmp
test
fisubs
push
rclb
jg
sub
push
mov
or
cmp
add
add
and
push
add
pop
pop
mov
stc
or
jp
ljmp
jg
subb
pushl
push
out
cmp
loope
inc
pop
or
sbb
imul
xchg
push
dec
ds
lock
ljmp
repnz
inc
and
pop
icebp
ds
xor
ljmp
sub
ss
pop
push
lods
cmp
adc
lcall
jns
fdivrs
daa
out
je
out
pop
or
xchg
adc
cmpsb
sbb
fidivl
mov
cmp
ljmp
jae
push
pop
sub
popa
movsb
push
mov
loop
mov
jnp
ss
cli
cmp
out
push
jl
mov
mov
mov
push
ljmp
enter
and
lods
push
shrb
popf
or
mov
imul
push
lds
jnp
add
add
push
lds
inc
push
pop
leave
mov
cmp
jb
and
jl
inc
sbb
cmp
mov
clc
jg
mov
test
fdivrs
inc
jne
mov
aaa
push
push
inc
out
inc
fnstenv
outsb
or
fistpll
push
in
pop
mov
jge
in
and
pop
add
inc
cmp
clc
cmp
sbb
popf
xchg
push
jg
mov
mov
lock
daa
pop
loopne
outsb
pop
dec
ss
add
repnz
movb
or
cld
aas
aas
xor
sbb
ljmp
mov
arpl
dec
and
sub
mov
sahf
inc
scas
test
int3
ds
mov
add
xchg
jns
jb
and
push
push
aas
in
fadd
push
call
test
out
test
in
scas
repnz
add
ljmp
or
push
mov
push
dec
push
add
inc
ljmp
jmp
mov
in
jnp
cmp
out
adc
ret
js
jp
fimuls
add
xor
insb
adc
mov
rsqrtps
dec
cs
call
lahf
ret
cwtl
dec
out
xlat
mov
or
push
ljmp
dec
cld
push
scas
out
insl
and
push
imul
test
push
push
mov
xor
popf
jle
mov
shll
cli
daa
insl
inc
sbb
jb
jbe
inc
dec
cli
xor
mulb
push
cs
aas
data16
insb
inc
inc
shrl
mov
icebp
jmp
pop
addr16
add
mov
stc
scas
mov
lock
sbb
inc
out
mov
fldcw
add
daa
mov
mov
jecxz
ss
lods
mov
sbb
sub
popf
test
mov
cmpsb
imul
int3
pop
cmpl
cmp
or
mov
cmp
mov
clc
mov
in
or
lcall
imul
popa
jno
mov
lock
jp
pushf
mov
or
mov
scas
gs
jmp
cld
xchg
sahf
insb
lret
rcrl
les
mov
dec
hlt
fcmovnu
bound
mov
clc
jbe
sub
loopne
shll
add
in
call
lock
imul
inc
loop
aas
sti
pop
mov
outsb
lock
decl
jb
stos
ja
push
and
and
inc
repz
sbb
imul
cmp
mov
repz
push
cmpsb
popa
mov
pushl
stc
adc
rorb
cmp
sbb
arpl
sub
jns
mov
fisttpl
popf
in
ds
inc
push
jp
cmp
mov
in
in
jp
das
cmpsl
ret
shll
xchg
and
and
repnz
fimuls
cmp
mov
rolb
cmp
cmp
push
dec
push
pushl
int3
sbb
add
add
pushw
adc
sbbl
aam
inc
shl
ja
inc
jne
loope
jne
ret
push
aas
mov
imul
and
push
incl
lock
js
adc
imul
mov
add
dec
push
ret
push
push
imul
pop
stos
mov
dec
sbb
data16
lock
cli
das
push
pop
jns
cmp
filds
std
mov
incl
mov
mov
lds
fidivl
xchg
jo
cmpb
fdiv
pushf
cmpsb
shlb
in
cld
sahf
sbb
sub
mov
jb
setg
push
sbb
divb
lds
rolb
add
inc
sub
mov
inc
push
decl
pop
mov
sub
sub
mov
and
sbb
pushl
xchg
call
xor
movl
add
push
mov
lcall
mov
sub
rcrl
jg
lahf
jne
stos
pop
jmp
movsb
mov
dec
push
cli
push
mov
cwtl
decl
push
mov
subb
stos
lds
push
lods
sub
pop
pushl
lcall
inc
push
imul
mov
test
pop
insb
das
adc
loop
xchg
popf
mov
pop
jns
lahf
xchg
ja
addl
jnp
int3
loop
and
mov
insb
cmp
pop
cmpsb
dec
inc
sar
loop
addb
or
mov
push
pop
out
xor
aas
int3
or
jnp
dec
call
push
sub
sti
roll
jl
jg
push
dec
iret
pop
movsb
mov
push
inc
lods
xor
inc
movsl
cmp
cmp
sub
dec
fwait
orl
and
xor
push
test
jmp
inc
mov
push
xor
adc
and
add
cld
insb
add
fwait
je
mov
lret
lahf
mov
lods
lcall
mov
cmp
shrb
in
sub
add
decb
jle
je
adc
xchg
test
pop
mov
mov
outsl
jp
mov
decl
xchg
in
pop
inc
nop
call
or
push
adc
sbb
in
mov
inc
pop
mov
and
stos
or
dec
pop
clc
repz
stos
add
idivl
loop
mov
jge
dec
cmpl
pop
rcll
inc
cmc
jb
mov
push
nop
je
je
xchg
and
decb
or
or
ljmp
xchg
sbb
les
pushf
movsl
lea
jns
gs
ljmp
hlt
pop
add
add
xchg
add
push
iret
lock
jno
cmc
push
add
frstor
mov
lret
fsubrs
incl
sub
adc
negl
xchg
mov
loopne
clc
mov
cld
das
mov
scas
mov
cld
xor
sahf
rolb
add
xchg
cli
push
pusha
push
dec
cmpsb
rorl
mov
shll
fsubrl
shrb
jecxz
stos
movsb
push
push
or
mov
add
xchg
dec
add
inc
mov
mov
mov
stos
ret
clc
cltd
inc
orl
ret
out
jl
mov
or
clc
mov
cmc
push
pop
movsl
loop
test
iret
jb
out
inc
dec
sti
aas
lods
xor
insb
adc
mov
test
and
ljmp
push
test
adc
iret
push
push
cmp
add
jmp
lock
mov
or
and
imul
popf
mov
jecxz
cltd
rorl
test
test
pop
cltd
mov
adc
in
fs
fisubs
in
shll
cmp
push
leave
aas
dec
cmp
or
push
mov
les
test
add
or
cld
aaa
adc
and
loop
jp
sar
iret
mov
adc
mov
xchg
add
jmp
aas
int3
ss
xor
pop
mov
es
ljmp
lahf
testl
sub
cmp
pop
sbb
rcrl
incl
and
sub
add
sub
pop
adc
leave
popf
xchg
lock
push
sahf
push
jmp
arpl
cli
daa
fs
aam
loopne
mov
arpl
mov
xchg
dec
std
add
pusha
xor
pop
pop
sarb
insl
inc
dec
ret
and
test
loope
cmpsb
lods
dec
movsb
es
ret
jg
cltd
je
jmp
std
pop
ljmp
or
out
pop
mov
jno
sbb
fwait
cs
and
cmpsb
mov
xor
xor
psrad
lock
cmp
test
jb
xor
xchg
mov
lock
mov
ljmp
test
cmp
pop
dec
add
mov
mov
psubsw
xchg
stc
aas
mov
cmp
call
pop
je
sbb
inc
in
adc
and
decl
mov
xchg
fisttps
dec
int
lcall
ret
add
push
loopne
pop
pop
cwtl
adcl
fwait
sahf
aam
data16
jecxz
jg
push
icebp
mov
imul
xor
mov
popa
ljmp
pop
mov
mov
cmp
outsl
dec
loopne
cli
ja
add
out
cmp
cmp
add
movsb
push
or
jg
xchg
pop
pop
fistpll
int3
je
cs
inc
mov
js
int
aas
pop
ds
sub
or
jmp
shll
add
push
cwtl
out
adc
in
dec
cld
daa
loopne
push
arpl
sbb
cmpsb
adc
cld
sub
scas
fldt
adc
repz
cmp
inc
adc
data16
cmp
loopne
jnp
aaa
movsl
sub
and
mov
sbb
aas
gs
scas
bound
and
lds
cmpb
add
cmp
dec
lods
mov
loope
ja
mov
jns
pop
jno
cltd
addr16
inc
mov
sbb
jecxz
jae
insl
fdivrs
mov
push
sbb
outsb
lahf
fists
je
cli
mov
cmp
in
sbb
mov
mov
ret
sub
push
in
inc
pushf
ljmp
movsl
bound
sbb
pop
lds
mov
or
jecxz
sub
hlt
and
pop
imul
add
jmp
xor
frstor
xchg
pop
xchg
mov
fdivr
gs
call
pusha
jns
and
mov
daa
sbb
cwtl
test
jecxz
test
or
fisubs
sbb
incl
lock
jo,pt
or
push
sbb
sahf
pushf
mov
lock
lcall
int
or
cmp
sbb
cs
andb
mov
cmp
pop
icebp
out
shlb
mov
pop
cmp
sub
sar
jge
and
ret
cwtl
jp
jmp
fs
xchg
fsubrs
shrb
adc
aas
les
mov
ljmp
jne
arpl
jae
push
in
jo
and
adc
xchg
pushf
or
cld
adc
add
std
or
in
jb
pop
lods
in
popf
xor
mov
adc
int3
das
inc
ljmp
xor
cwtl
jo
push
call
test
aas
call
pop
cmp
faddl
dec
decb
xchg
jg
cmc
sbb
mov
addr16
int
jbe
fisttps
test
cld
mov
jno
mov
pusha
push
jno
js
pop
lock
mov
mov
inc
push
push
ds
mov
cltd
dec
sbb
sti
fldl
cmp
bound
inc
shrl
mov
or
push
popa
mov
gs
mov
xchg
pusha
fwait
fwait
outsl
and
fsubr
cmpsb
pushl
jae
push
iret
andl
leave
sub
or
sarl
and
stos
cmp
ffreep
jl
mov
rolb
aaa
fldt
int3
push
push
leave
cmc
jg
mov
xor
out
or
lret
fdivs
xchg
mov
sub
lock
xchg
mov
cmpsl
sbb
mov
sbb
mov
adcb
sbb
scas
adc
es
stos
sbb
movsb
jg
dec
int
inc
add
incl
sub
loope
gs
jg
cmpb
lock
and
imul
test
ljmp
out
lcall
andb
cmp
inc
mov
inc
mov
xchg
push
inc
mov
lds
sbb
loop
mov
pusha
jl
loopne
aaa
stos
cli
add
sub
mov
jmp
push
dec
add
outsl
and
xor
sbb
sbb
bound
popa
or
xchg
jg
loop
xchg
inc
ds
jp
cmp
fcmovnb
sub
out
dec
dec
inc
cmc
jo
cmp
ljmp
test
lcall
push
sub
xchg
jne
sub
jmp
push
push
pop
stc
adc
fbstp
shlb
arpl
lock
push
rorb
mov
wbinvd
fistl
xchg
fmull
mov
xchg
fmuls
mov
lret
std
add
push
mov
aaa
mov
adc
inc
leave
jmp
pushf
movl
or
xor
jp
ss
mov
lcall
lahf
ja
outsb
adc
jbe
jne
ss
into
jbe
les
icebp
aas
pop
push
push
sub
push
inc
decl
mov
xchg
xchg
add
dec
mov
or
jb
inc
pop
clc
call
push
xor
cwtl
sub
jbe
or
pop
push
jbe
jo
incl
mov
mov
test
pcmpgtw
sti
es
xchg
adc
mov
or
incl
cmp
push
pop
mov
popa
scas
mov
scas
clc
mov
dec
push
push
jns
insl
mov
mov
xchg
dec
shr
iret
sub
add
das
inc
lods
inc
enter
add
pop
cli
cmp
pop
decl
sbb
mov
and
ljmp
and
fcomps
jnp
pop
mov
mov
add
test
inc
add
outsl
movsb
sub
mov
call
je
inc
sub
lcall
pop
inc
sub
or
scas
cltd
daa
jp
pop
pop
in
xchg
adc
decl
dec
sub
jecxz
es
inc
jg
je
pushl
inc
incl
nop
add
pop
pop
mov
push
mov
sub
test
jg
jmp
ficoml
and
jno
adcb
cli
out
sbb
aaa
sbb
call
push
dec
arpl
repz
fwait
jg
mov
xchg
adc
stos
fwait
mov
aas
movsb
jl
insl
js
jp
pop
enter
mov
mov
mov
sbb
loop
test
aam
icebp
push
mov
js
fldenv
add
incb
and
decb
test
jp
mov
repz
pop
mov
xchg
pop
xchg
arpl
adc
ds
push
mulb
push
lods
pop
pusha
std
out
dec
inc
jne
or
or
mov
mov
out
jb
push
or
dec
ljmp
add
mov
xor
mov
xor
mov
ljmp
sub
call
leave
sub
adc
mov
popa
and
xor
mov
cmpsb
ret
mov
imull
dec
sahf
mov
inc
cld
hlt
jmp
inc
repnz
or
outsb
jg
insl
std
loop
lock
jne
aad
leave
jbe
xchg
pushl
aam
nop
jne
lret
mov
fdivs
movsl
int
scas
aad
cmp
sbb
outsl
incb
xchg
je
test
jne
movsb
call
inc
dec
movsb
cmpsl
cli
inc
push
lods
loop
push
dec
mov
and
inc
mov
pcmpeqd
mov
aam
addr16
aas
nop
fsubrs
cmpsb
icebp
scas
add
dec
lahf
inc
shll
add
pop
jnp
lret
cmp
cmp
mov
shlb
fiaddl
mov
test
pop
mov
inc
xor
add
les
test
ljmp
mov
adcb
mov
mov
outsb
sar
ja
add
xchg
mov
ja
scas
and
lds
add
mov
xchg
jnp
bound
jo
ja
cld
mov
dec
inc
pop
lcall
adc
xchg
dec
xlat
dec
sbb
sti
push
insb
sub
insb
pop
cs
decl
mov
xchg
sbb
lret
push
outsb
sahf
int
push
sub
rcrb
test
rorl
pushf
sbb
mov
push
ret
pop
adcl
mov
andl
mov
xchg
jl
inc
adc
int
cmp
test
cmp
mov
data16
push
loop
aaa
jmp
cs
fwait
push
inc
ljmp
mov
sbb
movsl
dec
pop
mov
jp
lcall
subl
mov
pop
dec
jmp
ja
loope
jno
scas
outsb
insl
mov
mov
fstl
pop
loopne
jge
cmp
mov
pop
fimuls
xchg
sub
mov
std
jmp
imul
xor
ss
mov
insb
fsubrl
sbb
push
outsb
orl
ja
mov
insb
push
sub
xchg
or
sub
stos
movsl
js
add
mov
and
dec
insl
mov
ja
decl
push
cmp
decb
add
scas
sub
sub
mov
mov
das
cmp
imul
fsubrl
lcall
test
add
sbb
mov
ss
das
cli
decl
sub
mov
jae
jno
sbb
add
jg
cmpsl
jge
jo
xor
pushf
inc
loope
inc
adc
mov
gs
lcall
aaa
loop
bound
or
dec
scas
or
aad
imul
mov
and
and
lcall
pop
mov
mov
lods
and
incl
xor
adcb
sahf
mov
mov
sub
mov
movsb
pop
sub
in
xacquire
ljmp
hlt
fidivrs
pop
inc
jle,pt
lods
push
scas
call
mov
xor
mov
jae
add
sbb
mov
mov
test
jns
adc
test
aaa
cld
xchg
sti
mov
cmpsb
ljmp
data16
mov
movsl
sbb
cmp
push
pushf
mov
lcall
push
pop
xor
outsb
dec
xor
mov
outsl
decl
data16
xchg
add
push
jo
data16
arpl
mov
daa
jne
xchg
add
jne
decl
push
or
aad
sbb
pop
cmpsb
ljmp
clc
outsl
faddl
decl
add
xor
pop
mov
cmpsb
pusha
int
pop
fcmove
dec
add
dec
das
stc
mov
dec
hlt
imul
fs
push
xchg
popa
mov
stos
xor
out
mov
lcall
mov
test
adcl
call
xchg
popf
xchg
mov
mov
ret
popf
xchg
and
testb
fisubrs
mov
enter
ljmp
lods
mov
xchg
lods
and
fidivrs
cld
pushf
mov
int
mov
mov
sub
shlb
mov
add
mov
int
lods
xchg
jmp
xlat
test
cmp
stos
inc
shrb
push
push
test
jg
lock
mov
hlt
xchg
test
xlat
stos
inc
jns
imul
push
xchg
std
rorb
pusha
outsb
test
js
mov
add
stos
xchg
hlt
mov
pop
aam
arpl
sub
rcll
cmp
icebp
lcall
ja
add
dec
mov
inc
pop
scas
pop
popa
sbb
pop
out
subb
pop
outsb
inc
xchg
stos
iret
aam
ljmp
cli
mov
jecxz
mov
bound
xor
addl
scas
mov
jbe
imul
adc
and
mov
add
xchg
loope
mov
xchg
popf
ljmp
aaa
hlt
stos
inc
pop
dec
sbb
addl
idivl
sar
aad
adc
push
daa
gs
xor
and
inc
jne
iret
xchg
sub
es
push
push
push
sub
mov
mov
bound
push
adcb
pushl
add
mov
xchg
inc
push
sub
pop
movsl
jle
push
mov
jne
and
mov
lcall
or
lods
js
mov
pusha
dec
mov
jne
test
ficoml
lcall
test
xchg
lds
insl
and
pop
mov
movsb
push
xor
arpl
das
rorb
rclb
arpl
loop
add
arpl
pushf
inc
fisubrl
popa
sbb
jns
cmp
mov
cld
addr16
mov
pop
pushf
sub
movsl
popa
imul
bound
sbb
hlt
xchg
loopne
xor
jno
pop
jl
mov
mov
pop
out
push
fs
aam
jge
enter
mov
out
outsb
cs
mov
adc
add
outsl
adc
std
jg
mov
or
push
ss
or
out
xchg
cmp
pushl
cmpsb
ss
dec
xchg
xchg
inc
test
sbb
add
outsb
xchg
inc
or
mov
add
sub
jo
jne
pop
add
xor
leave
mov
fmull
loope
mov
cmp
jno
fistps
outsl
and
dec
xor
je
lods
subl
aas
test
imul
daa
daa
ljmp
and
das
push
stc
push
pop
xchg
sbb
test
in
push
mov
testl
mov
into
insl
jb
ss
mov
jbe
inc
dec
pop
es
in
mov
xor
inc
inc
cli
sub
add
addb
jecxz
pusha
inc
inc
mov
dec
dec
xchg
mov
cmp
rorl
test
lcall
jg
jbe
test
mov
arpl
std
xchg
movsb
mov
mov
mov
jb
int
addr16
dec
int3
mov
or
mov
xchg
ret
mov
dec
inc
xchg
fldl
lods
in
mov
mov
cli
push
sbb
xor
adc
je
daa
dec
js
daa
inc
test
mov
cmp
add
mov
dec
pop
mov
dec
imul
inc
fsubs
push
adc
push
add
add
cmp
push
les
mov
mov
dec
jmp
aaa
jbe
cmc
decl
push
jbe
push
push
xchg
cmp
scas
xor
dec
inc
push
push
xchg
loopne
call
aaa
mov
sbb
inc
xchg
add
outsb
inc
jns
ja
std
daa
test
sub
pop
push
std
out
add
scas
xor
aaa
mov
or
ja
ja
sub
je
pop
push
xor
js
imul
arpl
push
jg
test
sub
inc
imul
pop
addr16
pop
or
inc
inc
mov
xor
lds
sbb
aad
jge
and
subb
js
mov
inc
sub
cmp
sbb
inc
incl
ret
mov
ljmp
adc
arpl
adc
clc
das
jae
icebp
jp
push
scas
hlt
sbb
jmp
cmpsb
push
das
xchg
push
in
cmp
sbb
dec
pop
jno
out
sub
mov
pop
mov
cmpsl
das
add
cmp
mov
insb
cmp
ds
push
aaa
and
incl
bound
dec
mov
and
or
sbb
arpl
pop
mov
test
cld
sub
das
rolb
mov
mov
sar
jg
mov
inc
mov
idivl
pop
cld
ljmp
jno
cmp
jle
xor
adc
pushf
mov
fcomip
ljmp
or
or
mov
ret
adc
movsl
icebp
mov
repz
mov
and
fisubrs
mov
push
mov
or
inc
sbbb
scas
loop
add
jmp
sub
cs
test
addl
loop
mov
push
jbe
cmp
add
mov
pop
sbb
and
adc
sub
and
sbb
pop
xor
pop
fdiv
loope
rclb
pop
xor
dec
loope
lods
lret
jl
cmp
cld
jg
ret
test
dec
jl
jl
mov
jg
pop
pop
cmp
clc
mov
xchg
iret
and
push
mov
jnp
out
sbb
int3
mov
imul
int3
sub
incl
lret
mov
test
addr16
inc
fsubl
stos
mov
into
das
push
mov
cs
decb
push
push
or
or
cmp
cld
fistpl
adc
mov
xchg
cmp
sub
push
push
dec
rcll
push
lock
ss
xchg
outsb
push
xchg
dec
loopne
movsb
call
inc
cli
decl
inc
mov
imul
push
xchg
or
hlt
adc
int3
cmpsl
fsubs
scas
mov
mov
mov
pop
xlat
add
aas
pushl
lds
lret
cmp
sub
mov
jns
lock
xor
mov
gs
inc
dec
or
jmp
mov
push
xchg
lock
daa
hlt
lcall
cmp
mov
mov
test
incl
and
mov
adc
mov
test
pop
xor
xchg
cmpsb
lret
fdivrs
cli
add
and
movsb
mov
xchg
insb
sbb
xor
addr16
popf
dec
or
mov
outsl
mov
sub
pop
and
inc
pushl
adc
outsl
mov
add
mov
jg
lock
cmp
loopne
or
iret
sub
mov
mov
arpl
jge
sbb
and
std
repnz
mov
insl
sti
xchg
inc
adc
pop
loopne
and
dec
sub
shlb
dec
popf
dec
dec
pop
pop
mov
dec
pushl
mov
inc
lock
jns
iret
push
cmp
push
jae
lods
pop
movsl
add
sub
xchg
loopne
dec
sahf
xor
cmpsl
fcoml
popa
icebp
dec
sti
arpl
sub
scas
or
jle
pop
and
daa
mov
mov
adc
loope
add
pushl
subb
fwait
jmp
inc
adc
sarb
inc
jmp
cmp
xor
xchg
sar
xchg
adc
lea
outsb
fdivrs
rcrb
jmp
jne
or
mov
jle
and
dec
leave
cmp
ficoms
mov
cld
ljmp
ss
outsb
dec
xor
add
cwtl
pop
push
outsb
adc
iret
inc
xor
filds
scas
mov
jg
cmpsl
sarl
mov
jbe
sub
ljmp
es
push
popa
push
sbb
sbb
pushf
in
jnp
fdivp
inc
jb
mov
bound
scas
cltd
dec
clc
out
nop
sub
loopne
mov
fcoml
data16
sub
and
cmc
mov
push
push
adc
bnd
or
fwait
add
ja
jae
jo
push
jo
pop
hlt
pop
mov
inc
mov
test
mov
cmp
jb
lret
call
ret
mov
jg
mov
ljmp
lcall
jge
and
mov
rcll
ret
outsl
loop
add
mov
ljmp
stos
popa
loopne
jb
mov
push
pop
lahf
aad
push
ret
or
xchg
jne
pop
push
push
jge
imul
popf
fisubl
lea
incl
popa
push
or
sbb
push
push
int
pop
hlt
xchg
and
fisttpl
add
jbe
sub
add
cmc
mov
mov
decl
dec
das
pusha
push
mov
gs
pop
dec
mov
mov
cmp
sbb
je
cld
or
xchg
pop
push
jae
inc
fidivrs
dec
loop
imul
sbb
outsb
nop
jp
aaa
mov
jg
lock
gs
mov
stos
mov
xchg
in
aam
jp
pop
inc
mov
mov
inc
mov
sarb
xor
push
jnp
mov
mov
sbb
cmp
outsl
rcrb
inc
ss
xlat
mov
jg
add
ss
outsl
stos
cmp
ljmp
clc
cmp
sbb
sahf
lcall
loopne
insb
loopne
and
out
mov
sub
call
decl
movsl
stos
mov
in
jb
sbb
mov
dec
idiv
mov
enter
scas
sbb
dec
popa
sarb
outsl
scas
aaa
cmc
push
lcall
cli
push
mov
dec
inc
test
dec
and
push
fprem
pushl
push
mov
pop
xchg
hlt
stos
sub
push
and
call
inc
or
cld
cmp
call
pop
out
sub
push
and
call
setle
xchg
add
cmpsl
adc
fiadds
mov
nop
jne
rcr
mov
addl
lret
pop
test
cwtl
fcoms
push
pop
adc
int3
out
decl
mov
mov
cld
sub
adc
mov
imul
cwtl
mov
iret
mov
dec
loope
mov
mov
addb
mov
pop
das
rcr
xchg
ficompl
xchg
push
inc
icebp
out
jp
or
sub
or
es
sub
fldenv
jb
decl
pushl
or
mov
pusha
cmp
mov
fsts
outsb
dec
mov
add
cli
call
inc
repnz
sbb
add
sub
divb
jns
sub
xchg
in
hlt
pop
push
in
je
sbb
lods
popa
das
sarb
loope
xchg
cwtl
ret
push
inc
dec
subb
les
aas
inc
int3
and
or
mov
mov
mov
mov
pop
fdivr
das
sub
mov
bound
inc
add
clc
dec
daa
sbb
lods
add
les
gs
inc
xor
inc
push
loopne
es
push
push
dec
jnp
dec
les
idivl
das
clc
jmp
or
xor
mov
out
mov
test
add
incl
adc
xchg
pop
jp
cmp
movsl
jne
inc
inc
xchg
loope
mov
cmp
clc
ljmp
dec
dec
pop
or
ret
es
arpl
clc
and
mov
out
leave
dec
sti
mov
adc
mov
push
into
adc
scas
pop
mov
sbb
into
xor
or
jg
insb
aam
push
dec
cmp
xchg
dec
out
xorl
and
mov
das
xor
shlb
shll
outsl
dec
push
testl
or
inc
xchg
or
push
mov
push
or
xchg
imul
cli
cli
mov
adc
xchg
addr16
sub
hlt
mov
aad
inc
cld
jg
and
cld
add
mov
dec
xor
inc
dec
jg
aaa
ljmp
repnz
push
mov
adc
pushl
popa
add
xchg
mov
cmp
xchg
push
xor
fsts
mov
jge
lods
jge
iret
jb,pn
push
cmp
xor
xchg
jmp
fmuls
push
movsl
lret
jbe
sub
call
pushl
cmpsb
shll
inc
push
adc
pop
mov
sub
mov
sub
cmp
inc
sti
xchg
loopne
xchg
lods
jbe
sbb
pushl
pop
inc
mov
popf
test
push
add
lock
jmp
mov
dec
mov
mov
push
movsb
aas
dec
inc
push
lret
xchg
ljmp
cwtl
ficoml
jl
xor
in
cmp
sbb
out
push
arpl
sub
das
out
sub
ljmp
scas
cmp
sub
mov
or
lcall
addr16
add
push
push
mov
es
adc
mov
ljmp
pop
and
lods
or
daa
mov
xchg
cltd
and
jg
icebp
cmpsb
xor
xchg
push
imul
adc
jg
cld
jg
inc
pushf
decb
arpl
xor
stos
or
aam
rorb
gs
sbb
pop
jbe
cmp
sbb
rcrl
inc
xchg
jle
mov
orb
ja
jne
jae
sub
lahf
cmp
xor
dec
cmp
sbb
mov
mov
das
hlt
faddl
mov
add
hlt
lock
jg
loopne
jb
jbe
push
stos
in
adc
xchg
arpl
lods
add
dec
les
insb
inc
stc
aam
loop
out
push
inc
push
jbe
pop
or
jns
adc
xchg
sbb
pop
pop
mov
xchg
and
and
clc
ljmp
lds
fmul
stos
cmp
hlt
pop
pop
ljmp
outsb
es
popf
mov
insb
xor
or
add
scas
cmp
scas
dec
mov
mov
mov
pop
pop
sarb
dec
adc
xor
decl
movsb
mov
popf
out
cs
stc
push
dec
outsl
sub
cmpsb
jbe
incl
add
add
data16
outsb
mov
pop
sahf
and
add
call
push
clc
sbb
ret
mov
sahf
pop
xchg
cmp
sbb
lods
insl
dec
add
xor
into
fbld
out
inc
es
push
jae
negb
adc
call
imul
roll
fidivrl
sub
pop
orl
xor
aas
arpl
aaa
ds
subl
jo
daa
inc
inc
fiaddl
fmuls
fcomip
pop
in
bound
shrl
jle
or
jle
imul
dec
inc
rcrl
stos
add
mov
jbe
popf
or
es
loopne
cli
push
jl
roll
lock
jns
ret
push
rcr
iret
sbb
inc
in
incl
enter
clc
xor
inc
jno
or
nop
cmp
rcrl
jmp
jno
ss
rorb
arpl
inc
lret
push
jae
icebp
dec
adc
push
fs
sbb
dec
dec
sbb
inc
xchg
inc
fidivrs
mov
ret
dec
add
fxch
mov
mov
mov
jle
mov
add
add
stos
ljmp
js
stos
pop
scas
incb
outsl
lcall
jp
push
push
inc
sub
clc
xorl
inc
xor
mov
clc
sub
dec
cs
mov
pop
popf
ds
mov
lea
pop
into
add
mov
ret
movsb
sub
cmpsl
sub
cli
fwait
push
adc
into
adc
add
fidivrl
fsubrs
lock
mul
xor
xor
and
mov
sbb
dec
dec
rorl
push
push
shlb
hlt
adc
cmp
loop
popa
cli
adc
loopne
nop
es
or
mov
mov
mov
inc
loop
dec
leave
xchg
int
mov
test
popf
pop
stc
je
add
stos
call
lcall
push
movb
jmp
lcall
fisubl
pop
int
pop
fidivs
jae
push
std
daa
mov
sahf
pop
jbe
data16
jmp
or
mov
scas
mov
hlt
andb
add
sbb
dec
xor
mov
decl
mov
popf
arpl
xchg
aas
dec
movsl
das
mov
push
cwtl
xchg
aaa
std
ljmp
add
add
daa
jne
and
xor
mov
sub
xor
lds
outsl
les
outsb
xchg
jmp
xchg
mov
xor
lret
pop
dec
enter
dec
dec
add
jg
test
data16
push
fs
pushl
xchg
hlt
loope
mov
xchg
mov
or
mov
int
mov
and
dec
inc
inc
add
loopne
jno
sub
adc
loop
les
lret
sbb
add
ja
push
or
pop
mov
dec
xor
mov
cld
mov
testb
fadds
mov
push
fs
cmp
gs
cmp
inc
scas
adc
add
add
adc
fs
lahf
orl
fs
jg
pop
inc
mov
push
xchg
sub
sub
mov
mov
fsubl
addl
stos
mov
jo
xchg
sub
repnz
sbb
mov
lock
imulb
cmp
jns
cld
addr16
nop
ja
dec
loopne
dec
lret
cmp
dec
lcall
cld
push
push
lcall
outsl
adc
pushf
jae
sub
lcall
cld
push
push
pop
cld
fistps
pop
pop
leave
adc
inc
mul
add
pushl
cmc
adc
inc
add
sahf
adc
and
fnstcw
inc
jne
and
sbb
mov
mov
lock
icebp
push
pop
push
sub
sbb
xor
cmp
jmp
sbb
fimuls
lock
sahf
es
sbb
lods
xor
incl
dec
and
xchg
out
scas
gs
insl
lods
and
pop
mov
incl
clc
ljmp
fwait
xchg
mov
mov
adc
dec
outsl
int
xor
push
add
jno
arpl
or
pusha
sbb
jnp
fs
outsl
sarl
xchg
push
push
mov
loopne
adc
shrb
push
rcrb
mov
mov
jmp
scas
dec
lock
arpl
xchg
insb
cmp
mov
fimuls
jne
enter
push
mov
jno
xchg
mov
ja
test
dec
mov
outsl
test
out
or
lock
pop
stos
lret
mov
xchg
adc
test
lea
imul
in
popa
add
repz
dec
adc
add
incl
popf
fwait
aas
inc
add
ds
std
lods
aaa
lcall
jl
leave
mov
fs
cmp
sbb
test
dec
inc
hlt
sub
lcall
and
jg
insb
jno
or
imul
jg
xor
sub
clc
adc
jo
pop
push
popl
push
jmp
lock
xlat
inc
adc
and
push
sarl
aas
push
mov
sub
into
fnstcw
fnstenv
cmpsl
call
jno
push
popf
dec
mov
pop
jecxz
adc
call
push
int
mov
pop
cmp
sub
outsb
data16
loope
outsl
clc
or
adc
dec
outsb
jbe
idiv
push
and
inc
sbb
lock
sub
xchg
push
call
or
xchg
or
lea
bound
fnstsw
dec
mov
jae
cltd
loop
xchg
stos
jmp
aas
fs
lcall
mov
fs
fisubrs
mov
es
insl
inc
je
mov
les
jg
inc
cmp
jg
lock
sahf
jns
sbb
cmp
mov
movsb
movsb
dec
push
pushl
jne
hlt
inc
addr16
sbb
rolb
arpl
cs
ret
pop
in
inc
push
mov
xchg
xor
roll
fdivrs
cmpsl
push
call
je
dec
pop
jae
mov
fwait
push
out
xor
sbb
data16
push
add
mov
push
mov
jno
out
cmpsl
sbb
mov
jno
mov
jmp
mov
test
mov
sub
addr16
push
push
add
addl
lods
or
push
add
jg
jo
jne
jno
or
sbb
icebp
xchg
or
mov
loopne
js
or
xor
repnz
fimuls
jle
sbbb
cmpl
je
cmpsb
imul
sti
adc
lret
jg
xor
test
mov
dec
sbb
xor
dec
sub
xchg
das
mov
popa
or
dec
clc
xor
jae
fisubs
pop
in
mov
fwait
lock
pushl
addl
sbb
sbb
pop
inc
hlt
mov
fwait
scas
mov
popa
jecxz
push
inc
sbb
icebp
or
out
add
mov
jle
mov
ljmp
add
les
scas
adcl
insl
fs
mov
add
aaa
sbb
mov
dec
adc
adc
add
ljmp
fcoms
inc
push
cmp
xchg
mov
cmp
out
jo
loop,pn
xchg
insb
out
es
jmp
ds
pop
xor
inc
cmc
test
dec
aaa
ja
jle
sahf
xor
ret
inc
nop
mov
call
call
scas
and
and
inc
xor
loopne
add
mov
mov
cmp
je
inc
push
popa
adc
xchg
fnstsw
add
pop
jno
test
cld
sbb
mov
fdivrp
fwait
movsl
dec
popl
push
mov
sub
ljmp
add
mov
popa
jg,pn
cmp
imul
movb
cmp
lcall
scas
inc
sub
mov
enter
mov
jmp
jg
stos
scas
push
dec
inc
or
cltd
jmp
pop
lds
jbe
jb
ljmp
push
adc
lea
into
imulb
jae
mov
lods
decl
icebp
imul
cmpsb
xchg
pop
mov
sti
bound
mov
clc
mov
adc
push
adc
pop
les
dec
or
pushl
clc
dec
int3
ja
inc
inc
add
repz
nop
clc
call
jno
xor
sbb
dec
iret
outsl
sub
std
push
jns
jno
cld
ljmp
xor
jmp
push
mov
add
pusha
adc
xchg
mov
ret
or
jle
scas
and
mov
cld
jmp
add
pusha
jl
arpl
imul
iret
push
add
push
sahf
dec
mov
or
aam
dec
or
mov
sbbb
imul
outsb
and
mov
sarb
sub
jp
dec
mov
sub
xchg
xor
decl
jb
insl
mov
xchg
stc
imul
or
lds
mov
mov
repnz
add
mov
clc
ljmp
push
insl
xchg
pop
std
inc
xor
inc
js
xchg
xchg
dec
mov
je
inc
das
xchg
mov
mov
inc
cmp
sbb
ja
adc
call
xchg
xchg
mov
test
dec
sbb
xor
ss
inc
push
mov
decl
mulb
push
lods
mov
and
test
xor
pop
cmpsb
push
push
ffree
ljmp
sub
lahf
test
call
cmp
mov
jne
movsl
lock
xor
pop
cmp
or
dec
inc
bound
jmp
nop
mov
cmp
mov
call
sbb
pushf
insl
dec
mov
test
aaa
xchg
nop
sub
inc
bound
out
push
xchg
loop
sbb
hlt
push
popl
call
sbb
test
pop
loopne
enter
push
jno
cmp
std
add
stos
jmp
pop
cmp
lcall
lds
les
outsl
mov
push
dec
adc
sub
sbb
cwtl
outsb
jns
xchg
hlt
sbb
pusha
sbb
sub
mov
push
xor
xchg
mov
dec
pusha
xor
or
lahf
fdivl
popf
mov
add
nop
mov
inc
js
rcr
pop
sbb
dec
mov
lcall
xor
add
sub
jb
fisubl
ljmp
pop
mov
insb
push
gs
add
test
adc
popl
mov
cmp
incl
pop
rorb
popa
mov
aaa
adc
sub
push
jne
add
call
xchg
popf
push
and
data16
cmp
cld
pop
xchg
push
xchg
das
jno
xchg
cs
pushf
inc
cmp
cs
std
fisubrs
lcall
fs
sub
movsb
mov
scas
cmp
pop
inc
cltd
test
lcall
mov
mov
mov
and
out
das
or
scas
ljmp
lock
sub
or
dec
inc
imul
sbb
call
jb
jno
popa
push
hlt
repz
movsl
push
mov
test
xor
add
ds
stos
jge
pushl
cmpsb
test
mov
adcb
cltd
jmp
incl
mov
imul
adc
mov
addr16
sar
or
or
fsubrs
adc
sub
loope
inc
les
sub
jno
mov
mov
xchg
insl
dec
sbb
pop
dec
int
mov
cmp
inc
push
cmp
xchg
cmp
inc
jbe
popa
sub
in
popa
loopne
mov
inc
in
push
and
jp
mov
ja
dec
mov
adc
push
inc
or
dec
mov
jg
mov
lret
or
lods
pop
pop
xor
call
sar
fiaddl
fs
xorl
call
popf
pop
notb
pop
dec
loope
sahf
sbb
ss
mov
xor
sbb
fildll
cmp
mov
stos
dec
push
xor
xchg
ret
popf
daa
jg
mov
jle
lea
inc
pop
insl
mov
mov
or
repnz
push
add
hlt
mov
push
push
es
ljmp
jle
add
gs
jg
out
das
xchg
mov
or
or
inc
jg
dec
lods
xchg
shll
xor
push
mov
fnstenv
into
lods
mov
es
shll
popa
mov
xchg
jbe
xor
cld
call
jbe
xor
mov
mov
mov
pop
sbb
mov
jmp
ja
scas
mov
dec
fwait
movsb
ja
fs
mov
cld
ud0
add
push
icebp
stos
and
int
rcl
inc
sbb
or
arpl
pop
icebp
lcall
daa
pop
les
push
pop
mov
mov
push
mov
nop
lods
lods
or
das
insl
or
hlt
mov
aam
push
jle
scas
js
push
rcll
mov
call
sub
popf
mov
int3
cmp
mov
jg
dec
in
inc
push
cmp
sbb
jle
jo
jb
mov
jl
nop
jnp
or
inc
dec
lea
mov
lods
cmp
cltd
insl
mov
mov
jle
mov
push
cmpsl
mov
xorl
xchg
test
fsubrs
mov
dec
sbb
add
jns
addl
mov
daa
loope
repnz
jge
das
lods
jae
ret
clc
lcall
scas
push
xor
pop
mov
fnstenv
mov
ljmp
into
pop
jne
add
pop
cwtl
sub
cmp
pushl
pop
sbb
pop
push
and
and
scas
lret
mov
lock
les
xchg
cmp
push
lret
inc
stc
call
sub
es
and
stc
jae
rcrb
push
es
adc
imul
movsl
mov
sbb
xor
push
sub
clc
jg
pusha
jbe
push
pop
fsts
stos
cmp
mov
out
js
ljmp
jmp
imul
inc
fadds
xor
push
outsl
and
call
popa
dec
test
ljmp
xor
adc
mov
insb
pop
repz
jg
push
mov
push
cmpsb
dec
repnz
pop
pop
inc
mov
mov
outsl
stc
or
enter
jg
xchg
gs
xchg
inc
jo
mov
loop
pushl
popa
test
cli
fisubl
fstp
shll
fstpt
sub
ret
adc
add
jb
dec
enter
sub
pop
push
jmp
add
movsb
jp
stos
imul
outsb
add
iret
jbe
push
dec
clc
cmp
jg
jg
dec
int3
and
push
roll
les
and
xchg
mov
pushl
cld
xor
gs
leave
xor
xchg
dec
andl
sahf
dec
add
adc
jne
push
inc
cmc
xor
daa
ja
loopne
bound
shll
push
xlat
sbb
das
dec
mov
decl
ljmp
xor
xchg
std
add
fdivrl
iret
and
dec
xor
cmpsl
in
testb
cli
scas
iret
das
notb
cmp
fldl
fisubrl
jl
popf
dec
lods
scas
dec
jecxz
pusha
adc
in
inc
imul
insb
pushl
addr16
inc
mov
mov
mov
inc
lds
daa
adc
cli
addb
jg
dec
jecxz
push
imul
sub
cli
je
push
leave
daa
fs
mov
js
aaa
popa
shrl
sar
sbb
fbstp
pop
xchg
cli
incl
loop
xchg
inc
ds
xchg
out
xchg
data16
imul
mov
rcr
orb
icebp
push
add
push
fadds
popa
fcomps
mov
and
mov
pushl
push
out
loope
push
loopne
cld
add
in
ljmp
roll
jae
aaa
jo
sub
inc
repnz
rcrl
add
pushf
or
lcall
cmc
clc
in
dec
rorb
jp
xchg
out
dec
adc
pushf
jne
ja,pt
scas
push
pushl
aad
mov
rcll
jecxz
pop
jmp
ljmp
mov
add
sub
and
int3
sub
rcll
call
sbb
mov
mov
in
fsub
push
cli
or
push
cmp
xor
pop
fisttps
dec
pop
in
cmp
test
push
std
clc
cs
add
xchg
push
loop
fistl
and
out
enter
flds
out
jno
psubusw
shll
out
int3
or
pusha
enter
lret
push
ret
imul
mov
jg
push
outsb
cwtl
insl
lods
cltd
push
out
jecxz
mov
icebp
decl
mov
adc
adc
sbb
stos
ret
int
jp
add
idivb
and
cmp
ss
shl
jb
jg
fmuls
inc
les
pop
cmp
andl
stc
adc
in
inc
ficoml
dec
clc
outsl
sahf
fisubs
js
sub
fimuls
addr16
jp
pop
dec
xchg
push
inc
sbb
imull
aas
xchg
testb
or
xchg
in
jmp
mov
adc
xor
js
push
fwait
stos
jo
sbbl
incl
sub
xchg
call
inc
mov
gs
aaa
aam
push
shll
cli
mov
popf
lea
pushl
jmp
arpl
shrl
mov
mov
ror
inc
sbb
mov
add
stos
popa
xchg
cli
mov
loop
adc
pop
sub
outsl
mov
cli
aas
orb
pop
sbb
gs
ljmp
daa
dec
cmp
jo
add
fnsave
imul
cs
sahf
or
mov
xchg
xor
cmp
imul
jle
cmc
jg
rclb
jb
xorl
sbb
inc
add
xchg
popa
or
xlat
inc
mov
sbb
js
add
mov
and
insb
or
call
clc
pop
inc
adc
lret
popf
and
sub
cmp
mov
scas
xor
insb
pop
pop
lret
cmpsb
add
test
lcall
aaa
jbe
mov
pop
adc
xor
mov
cmc
lea
movsb
xor
push
cmp
xor
sbbb
pop
lret
je
std
ljmp
push
ss
jns
std
test
jle
jno
xchg
filds
cmpsb
inc
lahf
push
push
test
and
and
add
cli
push
pop
inc
and
sbb
xchg
mov
sbb
jle
dec
inc
and
dec
add
std
scas
mov
push
imul
lcall
test
sbb
fildll
xchg
jle
das
dec
adc
bound
add
lcall
sbb
popf
outsb
mov
call
jg
lock
xchg
dec
insl
push
out
mov
inc
cmp
mov
xorl
ret
stos
stos
or
test
sub
das
mov
cmp
cli
mov
cmpsl
jge
xor
pop
jno
sub
mov
mov
and
clc
inc
pop
dec
sub
negl
lods
incl
arpl
sub
xor
cmp
dec
aas
es
jp
scas
jnp
cmp
inc
and
adc
mov
popa
jg
push
mov
fcoml
cmp
xor
daa
in
je
lds
mov
mov
mov
loop
dec
jp
les
inc
dec
inc
iret
pop
mov
call
jl
cltd
imul
cli
fs
cmp
enter
add
ret
push
std
mov
lahf
mov
xchg
popa
setbe
ja
jbe
es
or
decl
lret
lock
mov
js
mov
jg
lret
inc
add
cmp
pusha
mov
sahf
mov
adc
call
scas
fucomi
or
and
sub
lock
ljmp
fmuls
je
add
xor
jg
ja
cmp
lods
ds
cld
nop
xchg
mov
in
dec
push
lods
incl
bound
push
ss
add
shlb
ffreep
push
inc
mov
or
decl
mov
inc
adc
cmp
and
jl
orb
mov
xor
fmull
loop
mov
iret
es
xor
or
cli
incl
aam
push
and
mov
sbb
push
cld
mov
jb
or
into
push
jne
push
leave
pop
xchg
nop
shrb
jle
mov
lcall
cld
mov
push
adc
clc
xor
sub
ds
faddl
cld
pushl
and
jp,pt
and
push
pop
rcll
dec
add
ror
sub
fcmove
pop
popf
ljmp
shl
jmp
pushl
sub
lock
in
bound
adc
push
jo
fiadds
jp
scas
cld
jge
pusha
std
call
mov
adc
int
pop
pop
aaa
popa
int
call
fmuls
jg
cmc
jge
pop
xlat
je
clc
mov
jmp
jns
movsb
imul
and
lcall
pop
pop
ljmp
sbb
test
pop
pop
aaa
jbe
fdivs
pop
jg
test
movsb
mov
out
aam
push
jg
call
pop
cmp
mov
fwait
mov
outsb
imul
incl
orl
sbb
or
jmp
xchg
push
inc
and
icebp
arpl
sub
cmp
inc
xor
iret
add
je
je
mov
ja
inc
and
jg
add
gs
push
jno
repz
stos
dec
lret
jmp
arpl
add
push
adc
popa
fs
shll
push
repnz
in
dec
rorb
jbe
jg
ljmp
inc
lcall
data16
sbb
dec
cld
incl
dec
mov
inc
xor
pop
pop
sbb
mov
jecxz
int
cmpb
das
dec
sahf
cmp
cld
and
pushf
jmp
jns
pop
cmc
jg
dec
mov
push
sub
push
sbb
aaa
sbb
lcall
inc
push
int
add
jo
rolb
or
rorl
hlt
mov
lret
sbb
or
and
inc
daa
fdivr
lcall
xor
push
and
pop
addb
mov
pop
movsl
dec
push
stos
jns
or
jnp
push
push
mov
cmpsl
pop
cld
jo
mov
jge
mov
in
xlat
pop
adc
lcall
push
jle
pop
mov
unpckhps
pusha
inc
pop
shrb
ljmp
mov
dec
cmp
jle
xchg
cmp
xor
mov
mov
dec
cmp
dec
jbe
aaa
sub
jg
pop
mov
push
mov
ljmp
stos
insb
push
cmpsb
push
jno
or
cmpsl
loopne
sti
cmp
dec
lcall
jmp
push
dec
clc
daa
inc
bnd
loop
sbb
jp
ljmp
icebp
cmpsb
decl
js
sbb
adc
sbb
test
outsl
mov
xlat
mov
enter
jne
hlt
or
imull
js
push
push
lcall
jnp
sbb
xchg
inc
aas
push
fwait
push
nop
cmpb
push
addr16
mov
pop
pop
cmp
push
push
ljmp
ja
clc
mov
cld
les
dec
dec
sbb
in
mov
mov
push
repnz
jnp
push
cltd
std
loope
ret
jg
subl
mov
sub
in
jg
inc
hlt
int
pop
mov
mov
cli
push
inc
inc
lcall
cmp
cltd
fidivrs
cltd
push
mov
jbe
fisubl
push
incl
lock
jecxz
popa
out
and
inc
repnz
jmp
sub
out
out
jg
sbb
loope
add
movsl
mov
aad
std
jmp
sub
jnp
ss
int
decl
mov
xor
test
adc
stos
lcall
adc
mov
or
add
aas
jnp
fbstp
jg
sbbb
ljmp
lcall
lods
pusha
dec
push
push
in
dec
xor
or
repz
imul
data16
push
in
sub
insl
push
out
js
test
sbbb
movsl
dec
dec
outsb
je
add
lea
stos
ficompl
pop
dec
ljmp
js
lock
mov
adc
sbb
decb
lds
arpl
dec
sbbl
popfw
fwait
inc
pop
jecxz
jp
ja
lcall
push
dec
mov
cmpsl
mov
sub
popf
mov
popa
pop
adcl
ss
lock
inc
cmp
jge,pn
cmp
sbb
sub
and
mov
mov
or
lods
adc
aam
or
adc
mov
xchg
jl
iret
cmp
dec
xor
insl
fdivl
sbb
das
sar
into
sub
andnps
das
dec
ds
out
jo
add
ud0
pop
cld
inc
cli
ds
dec
ss
pop
repnz
insb
dec
shrb
mov
push
cli
mov
xor
jo
test
jmp
jbe
movsb
fcoml
loope
lcall
insb
pop
std
ss
adc
scas
mov
inc
imul
sar
adc
push
clc
mov
dec
in
ljmp
cld
cmp
popa
jle
inc
addb
daa
push
cld
inc
cmp
lahf
inc
repnz
roll
fmull
popf
ficompl
push
mov
add
jne
inc
jp
jl
cmp
clc
add
pop
ss
stc
sbb
jmp
sbb
out
neg
cs
insl
sbb
test
popa
sar
pop
out
movsb
stos
dec
and
xchg
pop
cmp
and
sub
pop
jbe
incl
mov
inc
cmc
cmc
mov
popf
cmpl
lcall
out
test
or
jo
jbe
adc
mov
cmpb
scas
jne
fwait
dec
mulb
hlt
pushl
fisttps
std
add
lock
xor
int
jns
and
ljmp
or
sub
inc
cmp
and
jmp
stc
ja,pt
add
das
dec
cli
cmp
cmp
loopne
dec
sbb
or
cld
jg
pushl
rcrl
insl
repnz
mov
sub
xchg
arpl
jo
aas
pop
dec
adc
enter
ljmp
idivb
jo
loopne
adc
mov
les
jge
xchg
int3
mov
das
sarl
adc
xor
shrb
xor
add
jmp
dec
jl
add
jo
popa
std
stos
stc
pusha
mov
push
xchg
int3
test
icebp
sbb
addr16
es
mov
gs
jnp
sbb
cmpsl
es
xchg
lcall
movsb
mov
mov
xor
mov
cmp
mov
idivb
arpl
lods
in
leave
add
push
lds
pop
repnz
data16
mov
popf
popa
mov
callw
sub
dec
mov
popf
jg
add
adc
std
mov
dec
and
or
aam
and
pusha
jbe
ds
lcall
xor
insl
lret
add
aas
inc
loopne
push
les
dec
imul
fbstp
cmp
incl
popa
and
mov
in
push
js
andb
pop
mov
xchg
test
insl
inc
lds
inc
mov
inc
inc
push
dec
xor
adc
shll
imul
out
outsl
jg
add
cld
out
lds
in
mov
mov
sbb
stos
fs
pushf
xor
and
adc
cld
scas
test
cmp
ret
push
test
scas
inc
xchg
cmp
fisttps
std
test
xchg
ret
test
lock
push
mov
movsb
push
mov
aas
pop
xorb
cld
jo
pusha
sub
xchg
inc
test
mov
sti
aam
push
push
sub
jecxz
push
ljmp
cmp
insl
cmp
jo
jmp
lea
add
jns
pop
insl
loop
repz
add
call
push
adc
adc
mov
pushl
jp
mov
les
mov
out
jmp
jns
cs
adc
pop
mov
dec
mov
cmpsl
mov
hlt
ret
sbb
dec
jl
jg
add
ss
cmp
pop
test
je
dec
jecxz
dec
int3
add
inc
leave
sub
pop
xchg
push
fdivrp
inc
outsb
cli
or
jnp
out
bound
jg
cmp
pushl
ret
sarl
push
ss
jo
xor
sbb
in
pop
dec
pop
sbb
xor
and
inc
ret
mov
or
cmp
push
jnp
clc
pop
insl
loop
dec
into
movsb
rol
mov
fdivs
mov
mov
or
call
test
das
jg
and
aas
xchg
fidivrs
aaa
adc
aad
mov
or
mov
xchg
jmp
jl
lret
xlat
mov
call
loopne
and
cmp
movsl
enter
imul
jbe
aaa
std
or
push
rorb
add
dec
jbe
mov
mov
or
lds
or
jbe
pop
pusha
jg
jg
test
and
and
cmpl
cmp
movsb
add
dec
push
roll
pop
pop
inc
xchg
sbb
mov
jmp
iret
bound
inc
mov
fldenv
mov
sar
aaa
lea
popf
int3
or
ljmp
xorb
cmp
and
stc
jecxz
or
mov
clc
nop
and
or
call
in
or
fsubrs
dec
pop
jae
inc
add
test
mov
or
lret
daa
pop
sti
push
dec
inc
xorb
lcall
jg
mov
out
pop
insl
inc
mov
imul
adc
xor
jle
jp
adc
incl
mov
dec
out
movsl
std
sbb
es
aas
inc
frstor
cld
decl
clc
pop
aam
jecxz
out
push
call
ret
fbstp
in
rcll
mov
xchg
mov
aaa
adc
decl
cltd
jmp
mov
push
cld
fists
mov
cwtl
jge
dec
lods
fsubrl
fisubrl
pop
cmp
xchg
push
mov
aas
inc
jl
mov
mov
scas
add
lcall
outsb
adc
mov
push
dec
xor
adc
cmp
cmp
jo
push
or
or
call
pop
es
cmp
inc
sub
ljmp
outsb
adcb
inc
sbb
jno
mov
jle
dec
and
mov
outsl
js
ljmp
lret
daa
dec
jecxz
les
sbb
pusha
push
lods
push
xchg
mov
add
xchg
ret
faddl
dec
push
adc
incl
xchg
jmp
imul
xchg
jbe
dec
add
push
push
add
pop
cmpsl
gs
test
mov
add
cld
mov
lods
add
jg
imul
and
mov
out
shll
or
xor
sub
movsb
xor
mov
das
dec
xor
cmp
mov
fidivs
lret
inc
fildl
fwait
mov
nop
push
inc
pop
inc
stos
mov
jmp
adc
jae
adc
add
xchg
and
nop
adc
fsubs
inc
enter
nop
test
add
outsl
mov
or
lods
or
sahf
dec
adcl
inc
jg
pop
inc
lods
scas
pop
jae
sub
decl
and
add
sbb
add
lea
sub
pop
push
sub
ss
clc
testl
push
loop
fs
gs
sahf
pop
dec
push
insl
repnz
dec
cmpb
mov
xchg
test
shll
std
or
jle
jmp
jns
in
out
pop
rorb
aaa
arpl
ds
int
cwtl
mov
out
lods
scas
xchg
decb
jno
sbb
dec
mov
add
push
pop
ja
xor
cmp
mov
pop
movsb
mov
jle
and
les
negl
les
push
push
xor
adc
in
call
cwtl
add
pop
jecxz
push
enter
outsb
inc
mov
aaa
imul
incl
lea
dec
mov
push
ss
lahf
cmpsb
ljmp
add
test
dec
jmp
mov
call
lds
jne
test
lock
sub
addr16
jmp
push
pop
jo
adc
and
jno
loope
jbe
mov
insl
add
call
cmp
addr16
mov
sbb
xor
cmp
and
jmp
push
mov
add
pop
das
push
and
lds
add
cmp
clc
aaa
stos
test
pop
jns
cld
fwait
mov
dec
sbb
call
mov
mov
xor
sbb
lock
inc
cmp
repz
jne
pop
push
sub
pop
cli
push
arpl
push
insb
mov
js
inc
les
adc
inc
dec
ficomps
imul
shll
jg
jae
pop
add
jle
fs
jb
push
inc
ljmp
cvtps2pd
sub
push
add
cld
jns
dec
jmp
lods
das
sub
insl
inc
clc
movsl
clc
lcall
test
inc
mov
xchg
daa
adc
ja
mov
shrl
loopne
ljmp
add
out
push
dec
mov
push
jge
ss
mov
adc
add
lods
dec
insb
cli
filds
scas
scas
lcall
sub
lcall
add
xchg
pop
mov
stos
cmp
sub
mov
incl
das
push
mov
test
inc
cld
add
scas
xor
xchg
inc
das
clc
fsubrl
pop
push
mov
pusha
jne
or
and
stos
loope
cwtl
xlat
add
mov
mov
int3
es
mov
mov
xor
mov
mov
xchg
test
inc
mov
jl
xchg
orl
dec
les
xor
icebp
andl
xchg
mov
sbb
pushl
nop
dec
test
insb
pop
push
jl
push
mov
mov
pop
mov
push
mov
fs
sbb
add
stos
jnp
push
sbb
or
ljmp
in
in
lods
cwtl
pop
popa
stos
les
je
aas
cmp
push
sub
mov
into
movsl
inc
fimull
test
xchg
inc
ret
iret
adc
gs
popa
mov
es
jg
dec
adc
lret
lahf
es
pop
aaa
jl
push
xor
jg
sbb
jmp
and
xor
dec
sub
loop
jg
icebp
mov
inc
push
int
std
jns
repz
ja
scas
fcmovb
cmpsl
fsubs
aaa
jle
test
inc
mov
cwtl
decl
mov
cltd
fldcw
mov
cmp
mov
pop
in
fcompl
xchg
mov
sar
jmp
cli
arpl
imul
inc
aaa
into
pusha
leave
lea
test
pop
xor
xchg
pusha
mov
mov
push
adc
inc
ljmp
repz
jp
popf
ffreep
lcall
movsb
iret
clc
cld
jg
out
pop
dec
imul
inc
sub
outsb
or
incl
cltd
inc
adc
enter
and
mov
lods
enter
popf
test
loop
jnp
jp
jg
cltd
fwait
mov
add
push
lcall
andl
mov
adc
adc
sub
add
mov
cli
bound
cli
cmp
inc
loop
inc
mov
and
retw
sub
call
clc
pop
repnz
cwtl
lds
mov
push
add
mov
and
add
mov
cld
lcall
mov
xchg
push
cmp
adc
sahf
xchg
cmpsl
cltd
lods
fildll
lods
cmp
and
mov
pop
psrad
test
xchg
adc
xchg
pop
cmpl
lahf
scas
mov
pop
and
mov
stos
gs
scas
sbb
cmp
mov
and
inc
mov
xchg
xor
stc
mov
mov
ja
cs
cli
arpl
negb
movsb
hlt
jne
ss
pop
test
jg
pushl
jbe
adc
mov
out
push
pop
mov
mov
mov
test
pushf
xchg
mov
dec
inc
cli
lcall
outsl
cli
and
mov
pop
jne
repnz
pushf
in
push
dec
fnsave
fisttpll
lcall
push
add
iret
jns
fidivrs
lret
sbb
aaa
add
cmp
add
in
into
cmp
lock
inc
movl
out
jb
push
jns
ljmp
lods
lahf
addr16
jae
jg
sbb
sbb
aaa
add
push
jge
jl
push
pushl
jmp
add
add
cmc
test
call
scas
inc
and
or
add
outsl
pop
cs
incl
outsb
add
popfw
lods
pushf
inc
inc
ds
mov
call
sbb
xor
xchg
jl
jg
daa
pop
push
lcall
aas
jns
dec
jb
push
ljmp
pop
add
lds
push
sbb
lds
sar
jmp
les
or
sub
mov
enter
push
mov
pop
xchg
icebp
or
jg
out
cmp
jp
and
add
add
sub
adc
sahf
sub
jae
push
mov
in
call
adc
push
scas
mov
cld
inc
xchg
xchg
rorl
push
cmp
cs
test
mov
aas
insl
sarb
mov
mov
inc
xlat
mov
xchg
inc
cltd
je
inc
fcoms
xchg
and
aas
jb
add
lds
ljmp
popa
jecxz
popa
mov
mov
cmpsb
jb
cmp
dec
in
lea
mov
dec
icebp
ljmp
jbe
cmp
add
std
cmpsb
cltd
daa
arpl
ljmp
cwtl
sub
shl
ja
add
mov
insl
mov
jnp
inc
fisttps
mov
pushl
and
popf
in
xchg
pop
mov
add
jbe
inc
push
mov
cs
jp
ljmp
mov
rcll
stc
xor
mov
xchg
sahf
mov
xor
and
mov
fisttps
add
xor
add
out
stos
inc
dec
popa
outsb
jp
cmc
push
das
push
sbb
xor
mov
movsb
jg
push
sub
cmpsb
mov
or
decl
fnsave
jge
push
pop
dec
int
xchg
movsb
jne
cmpsb
inc
lock
fwait
clc
add
popa
aam
jmp
jg
out
ss
and
push
push
or
jmp
stos
mov
inc
mov
gs
cmp
adc
cltd
dec
stos
jo
decl
pusha
out
adc
or
lret
lcall
fldcw
or
in
dec
je
jl
add
loope
dec
loop
xchg
adc
jle
add
data16
stos
xchg
dec
das
in
aas
and
scas
xchg
icebp
test
jl
pop
popa
idiv
mov
mov
jg
decl
iret
jge
or
dec
jne
mov
jl
sbb
orb
fsubrl
ja
addr16
out
mov
fsubl
inc
sub
jg
and
lcall
fwait
stos
ljmp
mov
mov
push
xchg
jnp
sub
test
out
add
fldcw
sti
scas
pushf
inc
push
imul
xchg
or
xorl
pushf
and
stos
lock
push
cmp
add
jl
pop
scas
out
lock
call
push
dec
repz
inc
int
push
jbe
mov
pop
mov
or
ret
jecxz
test
outsl
es
mov
mov
shrb
les
push
inc
aas
mov
push
in
inc
jl
cmp
inc
adc
shlb
je
xor
mov
js
mov
out
popf
mov
cmp
mov
aaa
mov
incl
jmp
sbb
push
mov
jae
mov
push
ss
imul
mov
stc
sub
call
or
and
pop
xchg
call
xchg
pop
sub
jbe
lods
frstor
push
jns
in
mov
lcall
pop
rcll
sub
xchg
dec
jb
scas
xchg
inc
add
mov
pop
cmp
sarb
mov
into
pop
mov
aas
incb
sbb
cmc
lods
imul
fs
fcos
jg
mov
pop
push
popl
cmp
push
in
push
pop
xorb
pushl
es
je
jg
jle
insl
dec
mov
sbb
sbb
insl
popl
jg
lock
jb
mov
mov
mov
mov
lcall
jg
cmp
lods
jbe
adc
mov
push
pop
sbb
cltd
dec
push
jo
decl
loopne
inc
adc
aas
mov
dec
test
pop
loopne
cmp
push
jg
mov
or
and
mov
ljmp
jle
dec
out
cltd
and
dec
mov
push
enter
das
jo
jae
outsb
jg
sub
mov
cmp
inc
push
faddl
jl
decl
and
sub
xor
ss
fcomip
add
das
popf
mulb
mov
or
sub
mov
xor
mov
pushf
sub
mov
hlt
cmp
mov
cltd
in
mov
andl
adc
jbe
sbb
jmp
sub
pop
or
out
mov
adc
push
cli
xor
stc
lahf
mov
or
adc
incl
adc
or
mov
cs
incl
imul
inc
jecxz
and
jge
les
shll
dec
ljmp
mov
imulb
mov
mov
pop
test
ret
add
push
scas
sub
ss
xchg
loope
cld
adc
sbb
int3
push
dec
leave
adc
pop
add
inc
adc
mov
inc
mov
mov
sbb
push
out
dec
sub
sahf
out
incl
cld
fwait
outsb
cmp
or
inc
fidivl
test
push
rorl
mov
daa
and
sub
inc
sub
fcmovu
push
jne
ret
lcall
scas
push
cmp
loop
popw
dec
sbb
out
cmp
sub
xchg
mov
jbe
pop
lods
les
jne
repz
pushf
mov
sub
pop
loop
and
ds
test
jnp
mov
sbb
mov
cmp
inc
pop
xchg
xchg
inc
pop
mov
mov
pop
sub
and
cmp
decl
rcrb
inc
ret
xchg
push
cwtl
jae
pop
icebp
jp
push
addb
rcrl
sahf
sbb
add
and
sbb
clc
xchg
mov
lcall
xchg
stc
aaa
mov
sub
cmpsb
mov
xchg
lds
sbb
and
mov
sub
cmp
xor
sub
or
cmp
xchg
and
jg
arpl
bound
in
addr16
fwait
mov
pop
push
cmp
mov
loope
mov
mov
add
pop
subl
rorl
xchg
xchg
pop
jbe
mov
add
ljmp
mov
inc
dec
pushf
ret
add
sub
lods
xor
ljmp
inc
push
jg
or
lret
das
loope
mov
jbe
scas
cmc
scas
decl
push
pop
sub
mov
sub
mov
mov
mov
je
xor
mov
cmp
out
ljmp
clc
in
sub
sbb
hlt
jae
xchg
mov
aas
push
incl
jne
add
sahf
std
xchg
rorb
sub
cmp
inc
jmp
into
mov
out
ljmp
pop
shrl
add
sub
mov
xor
pop
pop
xchg
cli
add
and
mov
imul
decl
sub
in
or
dec
cmpsb
aaa
dec
mov
popa
lods
xor
jg
mov
fs
mov
lods
and
mov
inc
popf
pop
inc
cwtl
ss
push
aam
decl
mov
imul
xor
push
test
mov
push
xor
shll
ljmp
dec
mov
arpl
push
push
pop
mov
mov
adc
imul
sbb
addr16
xchg
jmp
jg
mov
or
inc
out
cmp
hlt
mov
xchg
daa
xchg
cmpsb
adc
jg
dec
in
lea
inc
daa
xor
and
scas
test
mov
mov
fsubrs
mov
jae
or
subb
lcall
scas
mov
stos
sahf
mov
xorl
push
out
add
decl
jae
mov
test
data16
pop
imull
nop
movsb
adcb
mov
stos
fisttps
adc
xor
shl
pop
mov
dec
mov
lock
add
bound
jae
cs
ret
adc
pop
jg
lock
loope
adc
cmpsl
and
inc
add
popf
clc
nop
clc
stos
jecxz
jno
mov
xor
lret
std
push
adc
jno
cmp
pop
sbb
jle
pop
sbb
pusha
jl
lds
mov
test
xchg
fnstcw
or
int
arpl
sub
sbb
loopne
lods
mov
jge
add
repnz
mov
mov
test
outsb
mull
ljmp
sbbw
ljmp
fildll
popa
xor
mov
mov
clc
lea
flds
les
ds
daa
inc
add
pusha
enter
decl
sbbl
lea
loope
adc
add
mov
jg
jae
jae
jle
stos
sbb
int
jecxz
push
jl
out
sub
jge
pop
hlt
decl
adc
or
push
leave
mov
hlt
sbb
cmp
cld
mov
sub
sbb
sbb
inc
add
inc
jb
mov
push
pop
mov
stos
insb
loopne
scas
add
mov
loope
pusha
ss
sbb
ficoms
aaa
push
test
scas
std
sub
mov
je
nop
mov
repz
repnz
jbe
mov
xchg
pop
pop
push
inc
loopne
mov
pusha
or
push
bnd
ds
xchg
mov
add
mov
sbb
out
mov
lods
mov
arpl
mov
cltd
sbb
clc
incl
xchg
xchg
mov
popf
xor
or
sahf
inc
cld
call
inc
xor
enter
adc
mov
int3
pop
popa
shll
push
cmc
mov
pusha
in
movsl
aaa
jae
cmpsb
xchg
out
jg
add
and
pushl
pop
push
mov
dec
adc
xchg
sbb
pushl
test
mov
sbb
fisubs
idiv
or
dec
and
add
aaa
sarb
or
incl
packuswb
mov
imul
push
mov
mov
das
sbb
cmpb
pop
icebp
push
ret
fsubs
inc
cmp
repnz
ds
jg
imull
repnz
add
jge
pop
jb
pop
bound
and
fists
mov
outsb
and
push
sub
jmp
pop
aam
fnstcw
popa
and
sahf
js
xchg
movsl
and
xorb
mov
mov
ljmp
lcall
cmpsl
iret
repnz
sub
xor
sbb
jg
call
sbb
sbb
sahf
cmp
mov
outsl
inc
cmp
mov
pushl
scas
orl
xor
clc
inc
and
movsl
sbb
xor
inc
mov
mov
mov
les
pop
add
sub
xor
lcall
inc
xor
and
push
pop
push
jecxz
std
loop
clc
out
or
inc
pop
je
jb
ficomps
pop
mov
out
jmp
push
sub
cld
ja
int3
ret
fimull
imul
mov
dec
bound
push
dec
pop
daa
mov
mov
mov
xchg
pop
loope
mov
cmp
addr16
push
in
lea
aaa
outsb
push
add
incl
pop
jo
dec
add
xchg
xchg
iret
mov
adc
sbb
popa
dec
dec
and
jne
mov
cmpsb
inc
in
test
mov
sar
pop
and
imul
dec
std
pop
push
push
sbb
popf
loopne
les
or
fbld
int3
repnz
insl
loop
dec
xor
lcall
ds
fwait
loop
jp
jle
cld
mov
stos
adc
ljmp
cwtl
std
ljmp
jmp
add
loop
pop
inc
mov
sbb
gs
pop
sahf
imull
adc
mov
das
sbb
pop
cmc
scas
push
jle
pusha
cmp
test
xor
mov
sbb
lods
sub
repnz
lcallw
fsubs
pop
push
jns
add
xchg
jmp
mov
ljmp
lcall
iretw
ja
mov
ret
jbe
nop
cltd
test
jns
pop
lds
inc
dec
dec
add
sar
xor
sbb
or
pushl
jno
push
cmp
or
mov
int
ljmp
lock
lock
out
xchg
sbb
and
or
push
aas
jmp
and
or
loopne
dec
pop
pop
push
ljmp
sub
aas
ret
js
repnz
adc
fbld
sub
les
popa
dec
and
mov
push
adc
xchg
scas
clc
mov
xor
dec
ds
add
mov
mov
or
mov
mov
adc
xchg
xor
mov
cmp
cmp
push
lock
aaa
mov
sub
hlt
jg
cltd
jg
mov
stos
xor
int
ja
xchg
dec
movsl
pop
sub
dec
lret
pop
fsubrp
xchg
dec
push
sahf
push
std
mov
push
ja
pushl
rcll
inc
sbb
and
test
icebp
out
jp
es
mov
inc
xchg
movsb
nop
ljmp
mov
jne
out
test
sbb
cltd
cmp
scas
int3
xchg
adc
push
push
adc
jmp
cmp
inc
mov
jg
add
gs
out
pop
icebp
jg
cli
pusha
push
or
sbb
or
popf
sets
sub
inc
clc
and
pop
mov
push
or
lcall
adc
movsl
jge
push
or
insl
shll
lods
or
lea
incb
out
mov
ljmp
add
or
push
sbb
out
clc
scas
pop
decl
andl
mov
inc
and
fs
jne
scas
mov
pop
pusha
loop
xchg
pop
les
mov
mov
push
pop
add
jmp
jae
sbb
push
sbb
lock
hlt
mov
push
arpl
test
loopne
decl
repz
xorl
adc
repnz
jmp
jg
subb
lcall
and
fwait
add
sbb
adc
jge
push
mov
data16
adc
pop
hlt
ss
sti
repz
ss
pop
daa
xchg
bound
out
mov
push
and
mov
fmuls
add
mov
xor
stos
cmp
mov
jg
repnz
aam
sbb
xor
cld
or
mov
inc
or
std
jbe
lods
sbb
sahf
incl
jp
movsl
xchg
push
sbb
adc
mov
add
lahf
jmp
jnp
mov
pop
xchg
add
popf
inc
hlt
fmull
sub
sbb
sbb
loopne
lret
add
cld
xor
adc
or
mov
jge
pop
cld
int
lcall
sti
add
add
add
or
loopne
xor
sbb
pop
fildl
jns
fsts
push
fistpll
adc
inc
call
dec
clc
add
out
push
fdivrp
ds
lret
addr16
icebp
dec
mov
ds
rorb
loopne
or
mov
xlat
aam
in
sub
dec
outsb
xlat
repnz
outsl
inc
jmp
push
dec
jbe
in
jg
cmpsb
cmc
jne
sbb
add
adc
and
mov
loope
mov
fwait
fwait
push
add
pushf
fwait
out
hlt
jne
xchg
imul
lds
loopne
dec
cmp
jae,pt
ljmp
dec
xchg
push
repz
ljmp
or
cmpl
mov
lock
adc
jbe
sbb
adc
xor
pop
or
pop
ljmp
scas
xor
add
and
xchg
inc
ffree
vshufps
jmp
fisttps
loopne
in
cli
sbb
mov
mov
aam
sbb
out
ret
cmp
mov
pop
sbb
jge
pushf
or
fbld
push
loop
sbb
out
mov
lret
cmp
mov
and
fwait
xchg
mov
bound
dec
incl
js
fistpll
xchg
test
xor
mov
rorb
mov
xchg
xor
add
call
sbb
xchg
mov
push
arpl
add
inc
adc
jnp
popa
adc
incb
shrb
add
cld
addr16
stos
stc
cpuid
les
cmp
mov
aas
mov
ret
push
mov
dec
subl
xchg
cmp
sbb
loopne
ljmp
add
mov
hlt
sbb
mov
nop
xchg
mov
in
loop
lcall
into
loope
adc
sub
mov
jmp
or
out
mov
sub
xor
orl
scas
bound
xor
mov
ja
gs
testb
mov
pop
mov
inc
mov
cmp
and
jmp
push
and
jg
mov
mov
data16
xor
loop
mov
mov
sub
aad
jg
cmp
pop
inc
ss
loope
aaa
mov
lods
shrl
out
dec
test
mov
sahf
mov
xor
dec
sub
mov
inc
ss
ljmp
jne
cmp
inc
mov
enter
std
hlt
dec
lahf
fimuls
stos
loop
es
stos
mov
out
and
push
adc
test
f2xm1
cmp
jle
and
in
mov
xor
je
inc
add
test
adc
sbb
out
ret
and
jle
lock
cmp
add
push
cmc
xchg
inc
pop
sbb
ljmp
push
out
adc
daa
mov
xorb
jno
xor
das
xor
dec
ret
movsl
in
xor
call
or
xchg
cwtl
push
les
std
mov
ljmp
mov
jns
js
jae
in
adc
add
loope
mov
inc
das
shlb
fdivl
out
cmp
aaa
mov
sub
or
xor
loopne
dec
mov
and
add
add
cld
inc
int
push
mov
decl
adc
incb
cmp
and
lea
inc
fcoms
push
xor
xchg
das
ja
push
push
bound
les
insb
mov
mov
mov
mov
arpl
outsl
cmc
xor
hlt
fwait
cmp
aam
das
pop
lcall
push
cmp
adc
jmp
xchg
adc
cmpsb
mov
hlt
pushl
popf
jno
sub
sub
pop
push
jecxz
dec
ljmp
shll
push
jle
add
cmp
cld
and
cmp
dec
and
jno
ja
int
mov
les
iret
adc
xchg
adc
pop
shrl
xchg
loopne
inc
aad
in
mov
sahf
fidivs
in
push
cld
mov
rcrl
xor
pop
sub
add
lods
leave
sar
ret
in
push
jae
jbe
sbb
mov
pop
cmpb
test
je
jmp
movsb
call
ljmp
xor
fcmovne
ss
dec
xchg
pop
call
loopne
mov
sub
push
iret
ss
incl
or
inc
mov
mov
scas
inc
or
adc
mov
inc
ljmp
add
loope
pop
mov
push
mov
nop
add
lds
movsb
pop
imul
inc
jne
cmp
subl
add
inc
inc
aas
nop
mov
aad
ss
xor
add
call
leave
cmp
cmpsb
push
std
fiadds
clc
pop
mov
push
or
gs
push
sbb
pop
sbb
rolb
push
xor
ja
shlb
add
stos
aaa
dec
jle
dec
loope
push
mov
inc
rclb
lcall
test
in
inc
inc
int3
xchg
jmp
jge
pop
std
movsb
clc
scas
rcrl
jg
mov
xchg
repz
cmpsl
push
jno
jo
loopne
pop
ret
clc
push
cwtl
add
push
mov
and
jl
mov
pop
clc
lcall
mov
jnp
cmp
es
xchg
hlt
sbb
add
pop
icebp
pushf
outsb
clc
xchg
cmp
lea
push
xorl
adc
push
add
push
notl
and
cmp
adc
lds
mov
std
incl
stos
cmp
adc
mov
mov
xchg
ret
inc
andb
rcrl
sar
pop
js
sbbb
xchg
enter
pop
cmpsb
out
mov
enter
lock
rcrb
pop
pop
adc
ret
popa
mov
adcl
push
gs
or
sub
inc
mov
call
inc
stos
xchg
add
cmp
cmp
mov
mov
mov
loopne
jg
pushl
mov
or
xchg
xor
push
pop
inc
sub
mov
sbb
xchg
dec
add
rcll
xchg
lods
push
mov
push
inc
push
in
in
arpl
lcall
pop
aam
insb
add
inc
mov
sbb
jmp
mov
adc
call
jl
fcompl
sub
test
adc
imul
jb
fwait
nop
push
pop
scas
lret
shll
dec
bound
push
mov
push
dec
sub
pop
cmp
xchg
cli
pushl
out
fs
mov
gs
jno
mov
les
jle
mov
cmp
mov
mov
inc
pushf
ret
dec
data16
cs
ret
mov
and
or
push
mov
stos
inc
inc
cld
aaa
sbb
xchg
clc
push
lods
fisttpl
xchg
mov
popa
shrl
jecxz
outsl
movsb
xor
out
push
and
xor
fisubrl
outsb
mov
loope
jmp
fnstsw
call
je
sub
movsb
lcall
ja
add
pop
mov
add
psrld
movsl
fsubrs
mov
sbb
aas
decl
add
and
add
pop
sti
sbb
push
stos
stc
xchg
xchg
lcall
adc
arpl
test
adc
je
arpl
cld
loop
dec
mov
mov
lock
addl
scas
icebp
lods
inc
mov
adcl
enter
clc
cmp
mov
lcall
mov
add
sarb
stos
das
mov
sbb
lcall
xchg
xor
mov
add
and
decl
dec
hlt
in
shrb
cmp
popa
imul
decl
inc
jno
dec
cli
jp
dec
jae
jb
jbe
inc
dec
jne
ret
insb
add
das
xchg
push
pop
ss
push
fwait
xchg
stos
xchg
jp
sbb
dec
ljmp
mov
pop
insl
movsl
insb
inc
dec
fisttps
std
cltd
pusha
loopne
push
out
adc
mov
xor
int3
xchg
mov
or
pushf
adc
mov
mov
sbb
mov
dec
push
xchg
aas
inc
mov
sub
stos
test
push
outsb
scas
jb
mov
cwtl
test
mov
or
xchg
xor
sbb
jo
mov
push
mov
sahf
scas
and
pop
xchg
mov
dec
xchg
cmp
pop
mov
add
or
test
sbb
lret
push
sbbb
xchg
mov
outsl
mov
sbb
xchg
inc
das
fdivs
cld
ljmp
repz
jge
dec
add
mov
fidivs
outsl
jo
mov
dec
pop
inc
push
lcall
data16
adc
aas
sub
iret
push
daa
hlt
mov
clc
cmp
and
sbb
rcrl
hlt
decl
and
outsb
lods
xor
aaa
mov
push
add
hlt
loop,pn
xor
mov
push
enter
daa
mov
loopne
sbb
xor
lods
rorl
lods
jb
add
xchg
cmp
dec
cmp
pop
add
into
lcall
sub
mov
or
dec
mov
dec
pop
xchg
incl
and
xchg
mov
cmpsl
lcall
push
mov
cld
add
inc
cmp
out
mov
incl
imul
ret
pop
inc
out
or
push
ret
jno
in
fcmovu
sbb
incl
push
mov
les
adc
jg
push
scas
ret
jmp
shlb
cmp
mov
push
popf
adc
pushl
es
repz
mov
mov
mov
aam
ljmp
sbb
fwait
scas
in
inc
mov
add
inc
cwtl
hlt
cwtl
les
jo
out
sub
arpl
popf
ljmp
push
sbb
sub
cld
xor
fldcw
mov
imulb
lds
incl
rcll
mov
or
mov
inc
rcl
lods
popa
xchg
lret
sub
xchg
jg
xor
pop
ret
push
adc
mov
jns
xchg
decl
xchg
cmp
push
pop
dec
pop
push
sub
jmp
loopne
lods
scas
out
mov
adc
mov
test
jg
stos
fwait
xchg
push
mov
mov
dec
cld
pushf
aas
pusha
call
adc
cmp
outsb
sub
jg
loope
test
or
insb
add
call
mov
or
outsl
cltd
stc
xchg
add
mov
sbb
hlt
cmpsb
decl
adc
lods
outsl
es
sbb
loope
pushl
fwait
and
mov
adc
mov
scas
stos
xor
mov
das
notb
sub
inc
or
jmp
xor
loope
insl
push
sbb
lret
cli
mov
mov
push
test
push
sub
ljmp
mov
mov
cwtl
ret
pop
lock
and
jbe
dec
mov
enter
std
inc
ljmp
imul
addb
push
add
call
pushw
imul
dec
outsl
jbe
ljmp
push
mov
cmp
pop
inc
ljmp
inc
cmp
cmp
xor
popf
or
scas
addr16
mov
push
adc
mov
lcall
push
sbb
hlt
aad
jl
jae
cmp
dec
add
jmp
movb
and
into
xchg
daa
dec
adc
mov
dec
js
cmp
rorl
dec
pop
mov
cmp
and
jmp
inc
xor
clc
pushl
xchg
push
dec
and
mov
bound
scas
ljmp
mov
adc
add
gs
mov
push
jp
daa
add
adc
inc
loope
push
ljmp
movsl
sbb
test
push
ljmp
dec
cmp
jge
and
daa
cmp
dec
dec
xor
cmp
pop
lcall
mov
mov
andl
add
add
into
mov
insb
pop
adc
ljmp
shrb
mov
push
pop
inc
call
or
jg
in
mov
call
daa
push
fsubrl
mov
clc
push
mov
outsb
clc
jg
fwait
hlt
mov
lahf
mov
cwtl
popa
es
push
cmc
mov
imul
and
dec
scas
frstor
push
jns
in
mov
fwait
add
push
imul
mov
dec
repnz
push
jp
inc
jno
dec
cmp
jg
jle
xchg
test
arpl
lea
scas
mov
jnp
adc
pop
adcb
xchg
int3
sbb
enter
push
in
and
cmpsb
jg
loop
je
and
mov
ja
xchg
sub
jmp
lea
mov
xchg
aaa
jge
jg
outsb
into
mov
jno
xchg
pop
add
lcall
sub
pop
mov
mov
insl
jnp
stos
mov
stos
clc
cli
jmp
dec
repnz
inc
adcl
mov
out
mov
cld
mov
shlb
pop
inc
lock
adc
scas
dec
pop
lock
pushl
or
adc
outsl
imul
pushl
ss
xchg
jne
cmp
leave
or
push
pusha
cs
cli
jle
pushl
jne
push
push
movsl
sub
dec
fildll
or
jne
mov
jo
adc
rol
ja
adc
sbb
addr16
mov
dec
cmpsb
push
sbb
add
cmp
movsb
jle
inc
inc
xchg
lock
cld
fcompl
inc
fsts
cmp
adc
mov
test
dec
aam
inc
mov
ss
push
clc
inc
dec
mov
sub
outsl
shrl
das
ret
add
xor
sbb
or
test
cltd
jg
lds
xchg
nop
mov
into
test
lods
add
sbb
pusha
mov
ret
outsl
xor
outsl
lods
aaa
pusha
mov
push
cmc
cmpsb
cmp
scas
scas
ret
mov
popa
jg
mull
jbe
add
dec
popa
mov
cld
cwtl
pop
add
mov
cs
pop
or
pushf
jg
xchg
push
mov
icebp
mov
mov
std
xchg
movsl
rorl
push
pop
outsb
dec
sbb
mov
mov
fcompl
pop
ss
cmp
add
mov
add
jg
inc
add
and
out
and
mov
je
dec
rclb
les
pop
rolb
dec
les
pop
and
stos
ret
dec
decl
lock
dec
xor
repnz
mov
fcoms
sub
inc
adc
pop
jmp
dec
cmp
push
sub
jno
ds
add
call
add
jns
xor
stos
pop
enter
jmp
cltd
icebp
dec
jbe
decb
pop
enter
cltd
stc
data16
nop
jno
mov
out
xor
call
add
push
xchg
adc
or
adcl
das
add
outsb
cs
repnz
mov
add
je
xor
dec
in
mov
push
jge
gs
incl
sbb
loope
outsb
je
outsl
clc
incl
cmp
scas
jo
lahf
stc
js
in
cmp
sbb
jg
imul
jo
push
and
es
fmuls
ljmp
xor
gs
fs
scas
addr16
and
out
cmp
mov
jnp
js
cwtl
fnstenv
ljmp
mov
cmp
rcll
or
rcrb
subb
inc
iret
adc
push
cmc
push
inc
outsb
int3
xchg
or
gs
cmp
and
or
bnd
ja
mov
pushl
pop
aaa
push
push
lret
decl
pop
mov
jb
or
pop
sbb
sub
xchg
dec
adc
shrb
ljmp
jge
das
inc
repz
jge
cwtl
test
mov
cwtl
jo
lahf
push
out
ljmp
xchg
mov
sbb
xchg
adc
arpl
sbb
ljmp
pop
into
push
lds
xchg
inc
add
dec
push
xor
jg
daa
pop
cmc
inc
and
jg
stc
xchg
xor
lcall
cwtl
and
jl
push
cld
fildll
adc
mov
cmp
out
cmpsl
or
outsb
mov
dec
fbld
shrl
scas
jb
and
lahf
pop
jp
andl
or
dec
imul
sbb
ja
mov
filds
pushf
jbe
mov
jg
mov
and
dec
jo
adc
insl
add
or
adc
or
dec
loopne
clc
data16
fildll
push
pop
or
and
jle
sahf
clc
sti
or
sub
or
stos
xor
jb
adc
sar
incl
popf
fsubl
sti
sub
adc
and
sub
mov
fldcw
int
outsl
ja
mov
es
mov
mov
jne
push
xchg
mov
xchg
fs
jl
sub
cmp
loopne
mov
jo
xor
adc
lcall
and
icebp
jg
incl
bound
push
int
sbb
jne
addl
mov
scas
mov
jecxz
imul
and
mov
jne
lods
push
mov
jl
sbb
scas
or
mov
hlt
dec
sbb
push
incl
mov
xor
sub
jbe
push
lret
mov
retw
loopne
mov
bound
mov
fs
mov
inc
les
dec
jne
jnp
sub
imul
sbb
mov
stc
sub
jmp
test
mov
daa
adc
push
int
test
pop
mov
cmp
or
iret
add
adc
xchg
xor
decl
mov
in
add
mov
stos
inc
shlb
cwtl
rorb
test
vmaxsd
xchg
dec
jns
cmp
xchg
push
cmpb
cli
xchg
jl
adc
jo
xor
ljmp
inc
pop
cmp
and
sbb
std
push
adcl
cmp
aaa
arpl
xchg
inc
out
cmp
sub
mov
xchg
cmp
cltd
cmp
mov
scas
gs
mov
xor
scas
sbbb
sbb
lcall
pop
mov
das
mov
and
mov
mov
insb
aaa
inc
lcall
stos
mov
mov
and
jp
das
lahf
andb
xchg
add
jp
arpl
jbe
shlb
xor
push
inc
inc
cli
cmp
add
cmpsb
je
bound
sarl
mov
out
sahf
dec
jae
add
jle
add
arpl
xchg
das
jbe
mov
jg
xor
xchg
cmp
adc
orl
pop
sub
jae
fs
mov
enter
push
pop
icebp
fdivrl
out
mov
jae
mov
fbstp
stos
push
cmc
jg
mov
sbb
xor
pop
outsb
fmuls
xor
call
pop
mov
dec
ret
add
rcll
sub
jb
cli
jno
push
lods
pop
pushf
and
out
pusha
xchg
xchg
es
shrb
arpl
adc
mov
pop
jae
sub
addr16
or
mov
push
xchg
xchg
push
movsb
dec
jbe
das
sub
mov
les
adc
xor
sub
loope
jg
or
mov
pop
out
mov
filds
aas
lret
jnp
mov
fwait
test
and
cmp
call
clc
mov
hlt
mov
jae
cmc
xor
dec
sbb
jne
push
dec
add
outsb
mov
ja
test
mov
lcall
mov
mov
testb
jo
add
adc
mov
mov
fs
xor
in
addl
add
mov
pop
dec
jb
mov
dec
and
test
cmpsb
mov
pushf
call
imul
into
mov
sbb
in
nop
add
movsb
aas
arpl
push
pop
dec
jecxz
lods
mov
jmp
inc
cmp
ret
fisubrl
dec
shll
outsb
jns
data16
mov
test
jle
sub
mov
push
movsl
xor
mov
xor
jg
jmp
jg
mov
pop
aad
or
jb
cmp
inc
xchg
inc
adc
mov
inc
pop
stos
scas
pusha
inc
mov
test
es
mov
outsb
les
mov
xor
sbb
pushl
das
sahf
ss
add
add
data16
sahf
decl
mov
mov
push
inc
out
icebp
xchg
jns
std
mov
fcoms
add
out
mov
dec
mov
pushf
add
mov
jmp
imul
bextr
sbb
inc
mov
repz
hlt
ljmp
aam
mov
inc
pushf
and
rolb
and
ret
or
lcall
mov
dec
decl
xchg
xchg
imul
sub
mov
mov
jmp
movsl
add
sbb
jo
xchg
push
mov
lock
test
rorl
inc
ljmp
incl
xchg
out
lret
jno
mov
and
xor
jbe
incb
and
sub
pop
pop
dec
js
fldcw
int
hlt
aad
adc
stos
push
xchg
es
hlt
push
mov
leave
push
mov
sub
das
clc
ljmp
jl
dec
inc
xor
and
pop
clc
mov
std
push
add
pusha
xchg
sbb
jmp
jmp
xor
and
jg
mov
decb
push
sbb
sub
cmpsl
test
daa
sbb
pop
popa
xchg
cs
popa
jmp
add
and
push
xchg
out
mov
push
stc
in
incl
insb
lret
jl
pop
sub
push
lret
pop
adc
jae
jp
jbe
inc
cmc
pusha
push
push
in
ficomps
jge
or
jno
cmc
insl
xchg
arpl
inc
lock
xor
hlt
call
stc
jb
dec
or
out
les
inc
sub
dec
jl
dec
or
outsl
xchg
push
out
testl
rcr
lcall
gs
loopne
and
push
pop
icebp
aad
or
call
mov
imul
mov
push
fstpl
inc
mov
ret
insl
mov
push
cmpsb
mov
out
xor
push
in
in
pusha
sub
icebp
lret
lods
mov
push
rol
mov
mov
outsb
lock
push
mov
or
lods
in
pop
and
inc
pusha
fiadds
mov
dec
sub
push
bound
dec
xchg
jge
loope
cmpsb
rolb
cmp
xor
add
mov
aaa
or
xchg
lea
push
xor
jg
push
aam
push
add
xchg
js
dec
sbb
push
inc
xchg
xchg
in
hlt
or
scas
insb
inc
mov
aad
jno
lcall
fdivp
test
cltd
iret
xchg
cs
orl
stc
adc
incl
ds
inc
clc
mov
cltd
out
ret
or
adc
sub
xchg
push
arpl
cld
outsl
clc
cld
into
jns
call
inc
push
mov
sarb
cmp
jbe
push
dec
int
push
jno
cld
jge
lret
pusha
xor
cs
pop
and
shrb
jo
sub
in
addb
cmc
mov
ss
mov
pop
inc
mov
mov
fwait
fbstp
data16
addl
pop
gs
imull
lods
mov
xchg
ja
adc
mov
decl
or
jae
scas
daa
push
test
mov
mov
inc
pop
xchg
movhlps
rcrl
xchg
mov
sub
cltd
and
cli
incl
inc
xor
xchg
add
jnp
hlt
xchg
xchg
icebp
call
jo
dec
aas
push
in
mov
mov
daa
outsb
xor
mov
push
jne
mov
add
jecxz
mov
popf
stos
mov
es
sbb
pushf
ds
decl
or
xor
mov
lea
dec
jp
adc
icebp
sub
imul
cmp
lock
es
repnz
dec
xchg
inc
cmc
sti
add
mov
ljmp
incl
popa
sub
dec
lahf
in
lods
push
movsb
nop
jnp
jnp
lock
or
adc
pop
push
int
jge
or
jmp
mov
subb
je
push
or
nop
and
xchg
cld
push
lcall
std
in
imul
mov
push
movsl
nop
cmp
inc
cmp
mov
std
arpl
lcall
adc
mov
cmp
fs
test
xchg
insb
das
sub
lods
push
ret
jae
fwait
stc
mov
jbe
mov
jle
add
outsb
sbb
sahf
or
xchg
or
idivl
mov
test
in
loopne
bound
push
jecxz
add
or
repnz
fidivrs
pop
int3
lahf
push
inc
xor
mov
pop
dec
call
mov
fldt
xchg
dec
loop
jg
cmp
sbb
mov
dec
sub
cmp
push
js
sar
jmp
std
pop
sub
add
push
aam
push
hlt
xor
push
shll
adc
mov
mov
adc
cld
incl
xlat
enter
pop
mov
add
es
mov
pop
jle
xor
movsb
mov
cmpsb
fwait
subb
out
test
mov
push
or
push
mov
cmp
call
popf
sbb
repnz
xchg
lods
dec
fstps
xchg
dec
xor
mov
movsl
xchg
or
test
movl
xchg
pop
xchg
in
mov
mov
dec
int
xchg
adc
mov
jg
fisttps
addr16
fsubs
mov
xor
aaa
incl
ss
fidivrl
dec
adc
negb
xchg
mov
jns
xchg
adc
xchg
movsb
fsubs
fisttps
mov
pop
sarl
nop
xchg
iret
imul
jns
mov
add
lods
pop
mov
mov
xchg
jg
cmpsb
fisttps
mov
hlt
gs
sbb
mov
jle
push
clc
iret
out
dec
fdivl
imul
mov
pusha
jecxz
jmp
or
outsl
xchg
es
insb
mov
test
ja
mov
out
cmp
sbb
mov
adc
mov
loopne
jle
push
inc
in
lahf
clc
add
clc
sub
sahf
aam
lods
jmp
jg
push
inc
stos
insb
cld
cs
ret
pop
sub
cmp
adc
and
shrl
popf
sar
pushl
pushf
push
loop
xor
cmp
js
nop
cmp
jecxz
outsb
in
lcall
mov
lret
push
outsb
pop
add
dec
fisubrl
ss
mov
lods
ret
adc
decl
sahf
int3
and
mov
repnz
test
xor
add
push
mov
pop
addr16
incl
push
xchg
xchg
lcall
sub
shl
gs
sbb
incl
and
inc
ss
cmp
add
lods
stos
movsb
cld
lcall
or
add
dec
pop
push
fwait
jb
pushf
push
fbstp
sbb
scas
iret
xor
xchg
into
jmp
pop
cmp
sbb
addr16
mov
fsubrs
jp
imul
cmpb
movb
ja
mov
cmp
and
push
popf
insb
cmovbe
or
int
lea
nop
xchg
push
sub
jns
cmp
fstps
test
mov
jge
repz
or
xchg
cmp
sbb
popf
int3
xor
add
or
mov
jmp
dec
sbb
std
cmp
push
js
dec
fwait
sbb
ljmp
mov
aas
out
hlt
add
xchg
test
adc
call
sbb
mov
xor
ljmp
sahf
mov
aas
popf
jg
cmpsl
add
push
jne
and
ljmp
jnp
dec
adc
inc
add
aas
sbb
out
add
adc
nop
sahf
cld
scas
mov
int3
cmp
cld
popf
je
jno
push
adc
js
test
decl
inc
cmp
pop
fwait
jns
stos
xchg
adc
and
call
decl
incl
jmp
roll
arpl
xor
inc
incl
std
sbb
and
popa
or
mov
lock
push
xor
cmp
out
jnp
js
andb
jnp
cwtl
loop
pushl
jle
aam
pop
jae
jae
ret
push
dec
xor
jne
inc
addr16
cmp
data16
pop
ret
inc
cmp
stos
or
mov
or
jl
pop
adc
inc
or
inc
cmp
lea
xchg
outsl
mov
adc
rcr
movsl
lea
mov
pop
clc
stos
les
jg
and
mov
cmp
lods
mov
decl
into
xchg
adc
jae
add
xchg
int3
jg
add
inc
cmp
daa
lea
std
pop
push
push
cld
mov
xchg
movsl
leave
cmp
mov
inc
xchg
cli
or
mov
repnz
mov
push
add
mov
sar
incl
push
dec
push
inc
cmpl
movsl
movsl
nop
cmp
mov
test
ss
cs
add
inc
mov
je
or
enter
insl
lods
shrb
dec
mov
push
push
jl
js
add
mov
shlb
lock
fildll
push
outsb
stos
and
dec
lds
xchg
mov
or
sbb
mov
lds
imul
mov
pop
pcmpgtb
bound
mov
aas
pop
add
je
adcl
out
cltd
jne
inc
dec
enter
pop
adcb
push
insl
scas
icebp
mov
mov
sub
sbb
dec
push
mov
inc
pop
xchg
jg
mov
bound
sbb
jnp
dec
fwait
mov
clc
ljmp
or
cmpb
cmp
inc
jae
xchg
dec
daa
inc
inc
jle
cltd
xor
fcomi
subb
mov
int
sub
hlt
mov
nop
clc
out
movsb
sbb
xchg
xchg
cmpsl
mov
ljmp
or
loopne
mov
fidivrs
dec
cld
pushf
mov
mov
mov
xchg
mov
mov
cld
test
or
jecxz
push
loop
mov
mov
aam
mov
jns
loop
mov
scas
clc
scas
cli
and
rclb
mov
mov
or
hlt
int3
lods
scas
hlt
lods
add
dec
mov
cmpsl
xchg
mov
cli
std
bound
aaa
mov
mov
mov
loop
cli
stc
out
mov
xor
xorl
push
add
jp
lods
push
inc
mov
jbe
inc
fwait
jbe
xchg
dec
adc
xor
xchg
adc
and
xor
push
and
jae
je
jl
sbb
or
mov
adc
or
insl
and
insl
sar
pop
inc
mov
sti
add
cli
sbb
mov
out
and
and
clc
xor
aaa
test
pop
adc
mov
ud0
xchg
and
push
cmp
ds
daa
cs
xor
push
inc
xor
inc
es
xor
loopne
test
xchg
add
jmp
lcall
jmp
sti
adc
pushf
add
mov
jg
arpl
std
pop
fdivr
or
les
arpl
adc
dec
inc
cld
aam
push
clc
add
inc
lods
add
mov
outsl
int3
mov
inc
and
pop
dec
fldt
ljmp
stos
add
inc
inc
testb
inc
inc
xor
ljmp
imul
xor
sbb
mov
cmp
inc
mov
pop
sub
cmp
adc
lcall
lock
loope
pop
xor
sub
adc
cmp
mov
push
mov
mov
sub
xchg
dec
scas
mov
leave
xor
jl
jbe
test
xor
add
jmp
mov
gs
adc
add
daa
mov
pop
sbb
lret
scas
mov
enter
fisttps
cmp
cmc
out
out
or
fists
lods
adc
call
push
cltd
dec
out
test
xchg
and
push
push
xor
jo
sahf
mov
adc
cli
call
stos
xchg
aaa
jno
xor
xchg
test
mov
lcall
mov
push
pop
daa
push
jnp
xor
push
pop
and
push
xchg
push
shlb
mov
popa
hlt
inc
mov
rcrb
ljmp
ljmp
stc
add
shll
filds
push
dec
fs
mov
pop
inc
or
out
test
push
dec
pop
adc
adc
jl
jg
add
add
mov
ss
sub
add
mov
xchg
ljmp
call
icebp
add
mov
test
cld
adc
push
inc
daa
push
xchg
lock
cmp
push
mov
mov
push
inc
movsb
cld
push
cld
incl
xchg
aas
jne
cs
jns
cmp
subl
sub
daa
outsb
xchg
cmp
add
fwait
mov
cmp
push
dec
fldenv
inc
inc
out
jb
je
lcall
add
in
adc
aas
popa
mov
test
shll
incl
xor
clc
mov
pop
xchg
push
mov
ss
pushl
add
mov
add
call
xchg
inc
mov
mov
mov
call
in
pop
cmp
insl
daa
push
cmp
or
cltd
inc
fidivrs
push
cld
incl
dec
sbb
outsl
add
pop
nop
pushf
sbb
adc
dec
jge
mov
push
cmpsb
push
imul
jg
loope
pop
popa
mov
outsb
mov
jmp
push
xor
pop
insl
loope
adc
sub
sbb
push
sub
es
outsb
adc
jbe
push
cmovs
decl
push
xor
adc
das
jl
sub
or
or
or
push
cmp
inc
cmp
movaps
incl
and
dec
pop
sub
iret
ror
lret
ljmp
adc
add
clc
add
xchg
jle
xor
loopne
icebp
stos
clc
cs
mov
mov
fsubs
mov
jle
pause
js
mov
inc
mov
ljmp
iret
mov
gs
mov
call
mov
push
jle
pop
cmp
mov
sbb
xchg
popa
and
rcrl
jnp
fnsave
and
pop
mov
lods
jns
fidivs
xchg
push
lcall
movsb
push
rol
xor
lcall
jnp
scas
test
in
and
cmp
xor
jg
test
add
sbb
aaa
mov
xor
mov
push
jge
xor
pop
sti
pop
call
ds
test
dec
add
mov
enter
ret
adc
or
jecxz
das
mov
loop
rorl
repnz
lret
dec
pushf
jb
andb
or
or
pop
rcrb
lods
les
hlt
dec
lcall
iret
sub
mov
push
movsl
orb
cmpl
sti
inc
clc
call
pop
mov
inc
mov
jns
insb
scas
jo
xchg
or
inc
ret
sbb
inc
mov
and
addb
cmpsl
mov
orb
cmp
lcall
das
ja
pop
dec
ja
push
push
xchg
cs
fsts
dec
test
pop
add
call
add
mov
jg
cvtps2pd
insl
push
shrb
or
in
add
push
xor
ja
cmpsb
insl
outsb
mov
cmp
loopne
inc
inc
xchg
aas
sar
incl
inc
imul
sbb
repz
mov
push
adc
mov
ds
fldt
nop
inc
mov
jmp
fwait
sbbl
pop
cmp
cmc
xchg
lcall
data16
lret
jmp
mov
sub
sub
sub
cli
push
mov
xor
hlt
add
add
insb
cwtl
out
cmpsb
outsb
inc
aad
cmp
psrad
cs
adc
dec
inc
sub
lods
and
jg
and
fisttpl
data16
inc
mov
dec
mov
or
cmp
cmp
cli
xchg
cmp
loope
cld
ljmp
mov
inc
fimuls
fwait
push
dec
pop
mov
xchg
lcall
inc
mov
mov
stos
pop
movsb
sbb
aaa
fistpl
fdivr
incl
roll
cmp
das
jns
iret
push
jo
inc
sbb
in
mov
xor
and
lods
xor
in
movsb
mov
dec
mov
ret
movsb
jno
stos
mov
lds
mov
decl
mov
xchg
jle
mov
pop
lret
jge
and
mov
jg
sub
rcl
icebp
xchg
jno
insb
cli
mov
test
inc
incl
rolb
test
ret
xor
dec
call
xchg
enter
call
or
bound
sarb
lock
dec
lret
sub
outsb
test
nop
push
inc
xchg
push
pop
loopne
mov
test
inc
ja
push
orl
jge
push
push
xor
push
scas
push
in
mov
ljmp
clc
bound
add
and
mov
rclb
mov
std
insl
cli
loope
sub
int
push
scas
scas
outsl
call
inc
inc
in
mov
mov
and
or
dec
sahf
cmp
lods
mov
pop
pop
std
call
add
scas
es
test
fnstcw
mov
decl
lods
pop
sbb
ljmp
inc
push
js
jb
and
xor
cmp
sbb
push
ret
fcompl
inc
movl
scas
push
cltd
adc
adc
jg
fisubs
mov
les
pop
lea
repnz
scas
add
or
jg
sti
lods
cld
and
cmpsb
xchg
cld
ja
clc
test
xor
pop
jecxz
std
stos
decl
inc
push
in
stc
jge
push
jb
clc
xor
loop
jg
decl
and
push
lock
jnp
mov
test
dec
decl
jle
nop
dec
popa
push
dec
pop
xchg
sub
xchg
xor
jle
pop
dec
mov
xor
push
mov
scas
repz
pop
roll
cld
decl
or
out
xchg
movsb
mov
out
xor
decl
dec
fs
subl
out
jl
mov
movsl
mov
ljmp
cmpsl
mov
lods
inc
and
testl
sbb
sar
incl
jne
ret
mov
sbb
jmp
data16
call
push
xorb
jns
cwtl
ss
dec
add
outsl
daa
push
cmp
ljmp
aas
jge
setb
mov
pusha
movsl
sub
lock
dec
in
decl
sbb
sarl
scas
mov
mov
jns
pop
sbb
icebp
lcall
in
xchg
mov
stc
pop
scas
ja
in
jmp
add
xor
icebp
inc
cld
or
pushl
jle
mov
jns
pop
jno
in
js
imulb
das
cmp
dec
pop
filds
ljmp
mov
icebp
jg
xchg
lret
and
aaa
cld
ja
ret
sub
mov
mov
mov
or
jnp
jmp
cld
imul
ret
mov
mov
cmp
daa
inc
jmp
daa
jne
and
pop
pop
jno
outsb
call
and
xlat
mov
ja
fldl
add
fldl
mov
mov
imul
and
sti
into
pop
mov
ret
or
ret
clc
cmp
dec
cmc
rclb
loop
pushl
mov
test
insl
cmp
sub
sahf
das
pop
jg
je
mov
js
in
inc
dec
inc
cmpsl
pop
and
mov
add
out
sbb
push
inc
ret
inc
mov
add
fdivs
lea
popa
faddl
pop
je
pop
cmp
adc
test
cmp
xor
insl
stos
push
bound
jg
xchg
jge
lods
pop
cmc
scas
add
stos
jle
pop
dec
shll
pushf
xchg
xchg
in
push
xchg
test
push
call
notb
mov
lahf
cmp
fdivl
mov
mov
outsb
faddp
dec
scas
mov
add
test
ret
mov
dec
mov
pop
dec
cwtl
push
out
xor
xchg
push
xchg
jb
ret
loopne
jge
xchg
push
imul
push
mov
mov
mov
jno
mov
incl
cmp
inc
and
mov
jl
ret
sbb
sub
mov
std
enter
pushf
decl
lock
cs
push
jp
adc
lods
sbb
push
jns
or
sub
mov
mov
cmp
insl
jbe
lock
bound
sbb
sbb
mov
lods
xchg
sub
adc
cld
xchg
out
jb
testb
enter
mov
test
jns
filds
cmpsb
scas
dec
jecxz
cltd
mov
mov
call
lret
mov
data16
outsl
out
test
out
pop
jns
jg
add
fwait
sub
imul
mov
push
das
clc
jg
std
mov
lods
sub
fdivrl
mov
jbe
fs
add
sahf
dec
int
inc
mov
jp
mov
push
cmc
xor
mov
dec
insb
ficoml
mov
into
negb
xchg
mov
dec
fadd
push
xchg
incl
orl
xchg
outsl
sub
lods
std
incl
cmp
mov
push
adc
mov
in
and
sbb
ljmp
mov
push
inc
out
inc
xchg
std
and
outsb
daa
loope
mov
mov
xchg
das
lcall
jbe
stos
jns
aaa
outsl
xor
pop
scas
mov
sbb
jns
dec
in
and
rorb
bound
std
pop
mov
or
pop
and
imul
out
and
divb
dec
idivb
pop
push
inc
mov
loope
inc
loope
jg
aam
daa
scas
xchg
lcall
call
iret
test
into
xlat
or
add
in
cmp
jmp
ss
mov
pusha
sub
sub
mov
push
cli
cld
pusha
test
insb
or
lret
ja
sub
fdiv
rol
jbe
out
insb
shlb
xor
hlt
jg
aas
aas
hlt
mov
inc
cmp
int
pop
stos
push
push
call
jg
lods
ds
xlat
cmp
mulb
cli
jno
inc
insl
xchg
jo
xchg
out
ljmp
je
roll
call
push
mov
int
addr16
jae
xlat
adc
pusha
stos
mov
push
sti
dec
pop
rorb
andb
dec
sbb
arpl
or
mov
icebp
lahf
xchg
test
jbe
clc
pop
hlt
pop
je
lock
push
add
call
std
js
fadds
test
inc
aam
popf
xchg
xchg
dec
xchg
dec
cmp
decl
ljmp
out
pop
scas
inc
jnp
push
push
clc
addr16
in
dec
clc
push
ret
jmp
cmp
popa
lahf
sub
sbb
stc
xchg
clc
enter
push
cmp
cmp
mov
cmp
mov
xor
nop
nop
push
mov
xchg
cli
popa
lods
fildl
hlt
cld
jl
int
incl
adc
ret
lods
mov
add
jmp
mov
test
xchg
jno
data16
or
jl
cli
jp
clc
push
fcoms
mov
lods
test
lods
fs
lock
mov
mov
xchg
dec
lahf
sub
xchg
mov
lcall
daa
test
adc
dec
inc
sti
jge
cmpsb
dec
cmp
pusha
pop
xchg
mov
clc
jbe
addr16
pop
mov
jbe
xchg
sbb
icebp
imul
mov
loopne
xor
in
call
mov
jmp
mov
ljmp
loopne
das
pushf
xchg
insl
adc
xor
mov
ficoms
pop
adc
push
lea
fsubrs
ljmp
xor
addr16
icebp
xor
shrl
ret
pushl
fisttpl
scas
adc
gs
pop
lahf
mov
jecxz
jb
inc
stos
mov
xchg
pop
out
mov
orb
cld
call
mov
mov
xchg
pop
inc
notb
lea
sub
push
inc
mov
xchg
test
push
pushf
mov
jg
mov
inc
xor
nop
pop
push
sub
lea
loopne
addb
mov
dec
stos
cltd
testb
dec
mov
loope
mov
fiadds
mov
aaa
sbb
sub
mov
ljmp
addl
cs
lcall
cmpsl
mov
xchg
push
mov
mov
dec
jmp
xor
push
ficomps
mov
int
filds
incl
imul
imul
xor
aas
call
sti
pushf
cmp
insb
fcomip
sub
arpl
xor
xchg
outsb
mov
inc
fistpll
addr16
call
mov
mov
or
hlt
test
and
ds
das
stos
out
mov
push
es
jge
fstl
sti
cwtl
mov
mov
inc
loop
dec
pop
xchg
imul
loope
jne
in
inc
out
xor
or
incl
mov
lock
jo
lock
int
cli
pushl
dec
fcomps
in
mov
stos
idivl
outsl
cli
mov
sub
and
or
add
jmp
xor
cwtl
mov
dec
mov
sub
inc
push
mov
insl
ljmp
jg
push
movl
rcrl
jo
cmpsl
adc
sub
jmp
push
cmp
jge
in
cmp
dec
push
insl
pop
xchg
jb
lods
aaa
outsb
call
sub
prefetch
or
mov
xchg
xlat
or
outsb
repz
push
push
pushl
les
cs
popf
sub
push
push
in
sbb
enter
mov
cmp
sub
outsb
jbe
dec
mov
jne
push
fdivs
in
xchg
ljmp
sub
cmpsl
sbb
mov
rclb
dec
rcl
sub
cmp
cltd
leave
jp
test
out
jae
mov
es
pop
test
push
les
les
or
clc
sbbb
push
sbb
jo
sub
dec
cmc
dec
pop
pop
scas
mov
pop
push
dec
sbb
add
adc
sbb
daa
incl
mov
add
js
and
scas
outsl
bound
xchg
stos
mov
movsl
inc
xor
cmp
inc
out
cmp
hlt
bound
fwait
jnp
cmpsl
push
cmp
sbb
xor
xor
call
call
mov
jo
shrl
lods
inc
jg
sbb
leave
xor
lea
mov
aam
jp
mov
shlb
jg
add
stos
fs
inc
push
mov
pushw
push
adc
incl
pop
hlt
or
mov
mov
inc
push
stos
pop
loopne
mov
adc
add
xor
ljmp
cmp
pop
cli
mov
int3
sbb
adc
cwtl
stos
into
mov
push
cltd
inc
decl
sub
xor
imul
xor
cmp
push
aaa
dec
movsb
int3
mov
daa
and
jg
sub
xchg
stos
in
outsb
rolb
inc
adc
mov
in
push
cmp
test
pushf
je
sub
mov
fs
xchg
int3
mov
or
mulb
add
inc
stos
adc
ds
push
or
fsubl
bound
aaa
jno
imul
rorb
out
pop
cltd
icebp
aas
sub
divl
sbb
sbb
add
jge
mov
hlt
jp
negb
mov
mov
and
aad
movsb
ja
bound
mov
loope
jge
xchg
pushl
rorb
pop
test
jbe
mov
add
fld
xchg
mov
jne
ljmp
mov
mov
push
pusha
pushl
fdivrl
xchg
lds
cmp
mov
test
out
xchg
cs
jg
mov
sbb
xor
jge
xor
jnp
lock
xor
mov
cmp
lea
mov
mov
ss
inc
adc
sub
jns
bound
or
and
out
decl
sbb
add
stc
push
insl
sub
lds
imul
jmp
push
sbb
shrl
int
add
outsb
dec
mov
lcall
push
gs
scas
mov
add
aad
mov
test
icebp
loope
sub
es
pop
pop
mov
sbb
decl
shll
dec
mov
inc
mov
jno
es
popf
or
inc
inc
mov
int
xlat
mov
sbb
fidivs
push
inc
loop
sbb
out
mov
int3
jbe
inc
or
push
outsb
imulb
xchg
jbe
out
lods
rclb
push
mov
mov
mov
filds
sbb
sub
test
jmp
pop
xchg
or
in
jl
iret
arpl
cwtl
pushf
xchg
fists
addb
fildll
test
out
lea
mov
into
adc
and
leave
push
push
lcall
push
scas
xchg
mov
lcall
stc
mov
or
outsb
xchg
jnp
cmp
push
jno
inc
jge
jno
pop
pop
pop
imul
outsb
insl
pusha
lahf
sbb
push
adc
mov
xchg
mov
call
or
jg
add
inc
xor
sbb
dec
fcos
call
loopne
ljmp
data16
cwtl
pop
add
pushf
adc
int
pusha
and
push
les
repz
out
insl
pop
and
mov
inc
fildll
inc
xchg
or
sti
lea
cld
call
or
imul
pushl
cmp
adc
test
mov
jbe
pop
out
pop
push
imul
fstl
dec
repz
cmpsb
aas
mov
mov
inc
popf
jmp
jg
and
call
and
mov
dec
pop
push
xchg
sub
cs
mov
ja
enter
cld
std
push
xor
xchg
divb
rorb
aas
icebp
cmp
mov
mov
sbb
loope
mov
sbb
jecxz
fcmove
stos
xchg
mov
test
lahf
dec
or
scas
leave
popf
cld
test
shl
ljmp
mov
jle
nop
fwait
movsl
fwait
inc
ljmp
das
clc
and
pop
adc
mov
pop
ret
xor
dec
cli
jmp
outsl
clc
jg
inc
adc
test
mov
push
xchg
adc
jmp
adcl
scas
mov
xchg
pusha
lret
lcall
mov
cmpsl
addr16
inc
repz
insl
mov
decl
pop
in
mov
decl
jle
mov
adcb
push
push
andps
and
das
adc
out
jbe
xor
ja
jbe
inc
cmc
cmp
pop
dec
jbe
jb
mov
aaa
pop
insb
ljmp
xchg
mov
fdivp
fisttps
fcomip
test
cmc
daa
jl
add
pusha
aad
pushf
decl
lret
test
gs
lds
mov
and
fcomip
pop
imul
dec
cmpsb
imul
mov
cmpsb
jnp
cmc
int
cmp
xor
cmp
mov
imul
mov
mov
mov
jg
or
aam
addr16
inc
mov
pop
dec
add
inc
mov
lret
mov
insb
scas
stc
aad
mov
ret
mov
push
ds
mov
int
mov
jecxz
inc
cwtl
push
gs
inc
incl
in
mov
cmpsb
jp
sahf
cmp
popa
hlt
lahf
rcrb
jp
repz
pop
push
jp
mov
ret
frstor
popf
jp
orb
movsb
out
cmpsl
mov
js
jmp
ret
mov
jae
add
mov
mov
mov
cmp
subl
mov
pop
add
mov
mov
pushf
push
into
mov
ljmp
mov
insl
mov
mov
out
rolb
mov
jge
lcall
sahf
sbb
aas
push
cltd
scas
inc
in
nop
xchg
add
sbbb
out
mov
mov
loopne
scas
or
aaa
mov
out
mov
mov
test
push
pop
repnz
dec
fbstp
pop
in
movsb
push
sub
mov
add
int
mov
mov
js
jo
mov
add
cmp
iret
mov
popf
xor
adc
push
jo
mov
in
mov
test
outsl
adc
or
aad
or
pop
mov
dec
jns
rcl
inc
mov
push
inc
sar
xchg
fwait
pop
dec
insb
data16
outsb
fbld
mov
filds
rcll
imul
jge
sbb
out
xchg
ljmp
jns
fldcw
xchg
jno
imul
jo
das
push
pop
add
and
aam
cmpsb
test
mov
fdiv
popa
dec
inc
pcmpgtb
pushf
incl
jno
dec
popf
jle
outsb
jnp
data16
push
push
dec
jle
lock
jns
roll
or
cld
int3
mov
mov
mov
adc
ja
xor
nop
adc
lcall
xchg
mov
into
jmp
fmuls
clc
mov
push
fimull
out
enter
scas
dec
in
fistpll
fcmove
into
js
repz
cli
mov
sbb
push
push
jo
icebp
or
adc
mov
push
out
jp
push
gs
pop
fcompl
lcall
int3
hlt
mov
push
jl
adc
or
daa
cmp
lret
divb
outsl
jo
aam
fmuls
mov
js
fdiv
mov
dec
jecxz
mov
sahf
mov
mov
mov
hlt
jmp
pop
or
sub
loop
mov
or
test
push
mov
outsb
jbe
out
sahf
repnz
popf
push
dec
inc
lahf
jmp
cld
mov
push
or
leave
ljmp
out
lret
xchg
clc
imul
mov
repz
movsl
aam
hlt
push
jns
fwait
inc
jecxz
jmp
imul
lock
mov
mov
sub
out
clc
movq
pop
pop
jo
inc
std
rcll
mov
or
js
ret
ficomps
push
cmp
xchg
sbb
cmp
xchg
leave
xchg
hlt
mov
mov
mov
jl
cmpsb
mov
push
or
call
add
aas
aas
inc
stos
dec
cmc
push
mov
or
lret
dec
sar
xchg
call
hlt
arpl
jae
in
mov
arpl
push
cmp
outsl
clc
scas
and
push
fs
cli
in
xchg
xchg
lcall
xor
pop
mov
dec
or
xchg
mov
mov
fsts
jmp
mov
xchg
push
movsl
dec
jb
mov
jp
and
mov
add
call
sbb
repz
mov
sbb
call
jle
test
inc
addr16
lock
lock
stos
inc
xor
push
test
xchg
mov
hlt
outsl
add
xlat
hlt
imul
lret
xor
in
xchg
and
adcb
cmp
cmp
arpl
nop
adc
cmpl
push
in
mov
jb
fwait
pop
xorb
cmp
sahf
sbb
cs
cs
out
scas
and
hlt
ja
jns
aad
mov
out
mov
mov
scas
mov
push
pushl
lods
cmp
jb
mov
stc
sti
xchg
mov
lret
out
mov
sbb
jae
addl
mov
xchg
or
adc
push
lea
repnz
in
test
test
nop
rolb
push
clc
das
dec
stc
cmpsl
mov
cld
xchg
lret
pop
das
inc
push
fcomps
dec
jbe
pop
jmp
std
js
or
and
decb
ret
pusha
push
ljmpw
mov
xchg
filds
lret
sahf
aaa
je
mov
gs
ljmp
ret
lret
out
sub
ljmp
or
int
mov
mov
push
loope
pop
insb
adc
in
mov
mov
out
jo
movsl
jmp
jnp
xchg
add
shl
fildll
sub
cwtl
shr
mov
xchg
fiaddl
lcall
fstpt
xchg
scas
jg
mov
repz
mov
add
mov
call
insb
in
xchg
jecxz
into
nop
std
movsl
test
sar
mov
into
sbb
lods
jno
inc
push
jne
sbb
xchg
mov
sti
mov
push
shll
push
imul
inc
rorb
sar
adc
out
and
cltd
pop
jmp
xchg
xor
dec
ret
int3
shlb
cmp
inc
shl
lock
call
and
inc
push
push
adc
jbe
lods
stos
aaa
mov
pop
cmp
jne
add
loopne
jg
jg
push
push
imul
push
xchg
xchg
xchg
xchg
ds
inc
fsubp
rcrb
dec
icebp
sub
push
out
movsl
daa
pop
jmp
daa
jbe
fcompl
fnstenv
data16
lds
sub
jg
mov
mov
xchg
cld
out
mov
popa
into
add
stc
in
mov
mov
test
cmpsb
movsb
scas
mov
stos
lods
xchg
push
mov
jg
add
xchg
mov
xchg
dec
jno
inc
pop
les
push
pushl
mov
rorl
mov
pop
pop
jge
adc
add
loopne
pop
int
ljmp
ljmp
inc
imulb
ljmp
ja
xchg
push
addr16
ret
mulb
repz
ficoml
outsb
inc
jb
jno
loope
cwtl
mov
aas
push
sbbb
stos
repnz
gs
ret
fisubl
sahf
pushf
pop
in
std
mov
outsb
cmpsl
int
mov
mov
fwait
lods
mov
inc
fisttps
dec
fildll
fistps
sbb
loope
jbe
cltd
sar
add
mov
insl
call
fsubr
xchg
jg
lock
inc
aam
add
and
addr16
dec
int
out
ret
les
mov
addr16
cmc
iret
cmp
push
or
sti
lret
pop
mov
fstpl
mov
sar
mov
push
ret
lcall
data16
stos
lret
ret
ljmp
sbb
mov
ret
ljmp
ljmp
daa
and
ja
sub
mov
push
decb
mov
push
sarl
nop
mov
xor
hlt
mov
ret
sbb
pop
iret
mov
sub
pushl
mov
in
movsl
mov
add
aad
inc
push
jge
mov
inc
fistl
add
add
clc
call
insb
mov
jle
jo
push
cmpsl
mov
cmpsl
fs
pop
pop
pushf
lret
lods
jcxz
inc
ljmp
push
sub
loop
fcompl
cld
test
fbld
cmpsl
xchg
lret
mov
mov
pop
popf
pop
sahf
push
xchg
bound
inc
loop
call
lock
add
subb
mov
mov
mov
xor
sub
pop
lret
out
ret
push
fwait
popa
mov
jg
ljmp
or
add
mov
xor
iret
stos
out
loopne
jg
mov
push
iret
into
idivb
inc
out
ja
sbb
jecxz
aas
cmp
sub
das
andb
inc
outsl
leave
in
aaa
pop
mov
in
inc
shl
cmp
and
pop
ss
xchg
out
fcoms
xor
les
add
jmp
mov
mov
loop
sbb
ja
pop
inc
shll
out
mov
push
or
jecxz
cld
in
aaa
mov
jle
or
and
xor
ljmp
cmpsb
or
mov
mov
mov
cmc
or
dec
loope
test
sbb
fisubrs
mov
mov
xchg
inc
mov
fstpt
out
lret
test
mov
adc
mov
inc
or
aaa
pop
lods
aaa
mov
enter
nop
stc
aas
std
inc
es
repnz
hlt
adc
mov
iret
mov
nop
loop
pop
sub
ds
stc
mull
push
pop
cs
adc
pop
xor
jg
inc
mov
je
inc
sbb
outsl
mov
rorl
push
push
jo
mov
ficomps
jp
or
pushf
test
mov
pop
test
dec
subb
pop
mov
mov
imul
mov
mov
iret
mov
int
jmp
jl
dec
pushl
pusha
cltd
pop
testl
inc
or
push
xchg
add
inc
lock
inc
pop
adc
lea
imull
xchg
out
adc
add
orl
ret
dec
movl
cwtl
mov
mov
lret
outsl
outsl
jnp
push
outsb
cmp
mov
dec
and
lds
pop
adc
add
stos
push
adc
in
mov
mov
loopne
lea
lcall
mov
clc
xchg
add
jbe
jnp
push
and
and
imul
push
test
mov
push
mov
imul
inc
cmp
xchg
jp
pop
or
push
cmp
pop
sbb
lcall
cmp
pop
push
jg
imul
out
dec
pop
outsl
cs
jnp
dec
rol
pop
cld
add
lods
arpl
orb
push
dec
dec
mov
scas
jecxz
pop
pop
hlt
pop
inc
or
jmp
mov
mov
mov
mov
dec
iret
sub
or
lods
and
jge
lea
push
cli
loopne
lcall
pop
push
pop
shrl
adc
mov
inc
add
cwtl
mov
fwait
ret
dec
pop
data16
jmp
pop
dec
pusha
insl
and
mov
jmpw
jl
ret
cli
dec
pop
inc
jecxz
lret
sarb
fildll
sbb
repnz
movsl
repnz
fwait
dec
cld
decl
arpl
test
aas
repz
inc
adc
pusha
fistpll
adc
sahf
cmpl
pushf
incl
mov
mov
js
insb
adc
in
pop
or
int
test
out
add
roll
mov
lea
rcrl
mov
std
xor
push
cmp
or
jg
das
popa
jb
xor
dec
push
sbb
incl
mov
popa
sub
icebp
xor
xchg
pushl
test
fwait
push
lret
lea
jo
icebp
or
mov
and
stos
add
pop
insl
add
cmp
add
xor
adc
data16
out
mov
cmp
pop
lock
jo
rclb
push
arpl
call
mov
add
daa
pushf
out
ds
xor
pop
push
jns
jo
je
xor
xor
cmp
and
xor
inc
inc
sbbb
xchg
mov
call
lret
push
dec
test
add
mov
jbe
cmp
cmp
mov
xor
jg
lods
aas
dec
mov
adc
or
xchg
ss
cmpsb
lds
test
pop
mov
mov
ljmp
jno
pop
sti
mov
adc
mov
jbe
xor
push
sbb
jmp
mov
daa
jne
adc
sbb
push
push
mov
outsl
ss
add
jle
add
push
hlt
inc
add
cli
pop
fwait
pop
popf
mov
fisttpl
mov
fidivrl
ljmp
push
scas
push
sbb
sbb
or
cmp
jg
shlb
pushf
add
cmp
xor
mov
decb
das
clc
jmp
mov
push
push
out
lods
fbstp
fidivs
cwtl
mov
incl
aam
scas
or
fwait
dec
das
pop
inc
sub
les
add
cmc
sbb
sahf
push
push
dec
push
xchg
es
mov
cmp
add
xor
pop
cltd
pop
jo
cmp
or
dec
xchg
in
movsb
hlt
or
je
movsl
jae
mov
ljmp
and
jecxz
dec
jg
xor
or
jge
cmp
ja
ljmp
pop
cmp
mov
sar
and
lods
mov
outsb
sub
add
fcomps
popa
out
mov
mov
dec
es
pop
imul
dec
adc
pop
nop
test
inc
jg
or
call
push
test
sbb
cli
gs
push
dec
mov
insl
imul
insb
insb
bound
xor
jl
daa
cli
pushl
pop
xor
je
pop
into
rsqrtps
cwtl
or
mov
cmp
neg
pop
lret
clc
mov
je
movsl
into
push
nop
in
jmp
mov
jl
shlb
cmp
lods
push
sbb
ljmp
dec
pop
icebp
xchg
and
std
adc
aaa
jae
imul
out
pushl
sub
ja
xchg
inc
imul
add
mov
jno
test
out
sbbl
jl
inc
push
push
lods
push
mov
je
daa
ja
xor
cmp
xor
cmp
pushl
or
xchg
jle
mov
test
cs
mov
incl
inc
aam
cmp
push
loop
jbe
stos
jnp
stos
mov
mov
cli
lcall
inc
stc
and
dec
in
adc
subl
dec
adc
scas
enter
ja
lock
add
mov
jecxz
add
sub
xor
fsubl
mov
xlat
aaa
popf
push
adc
mov
cwtl
push
clc
sbb
dec
cwtl
jo
mov
loop
cwtl
nop
out
fdivl
test
push
inc
mov
js
into
add
decl
movsb
movb
lret
cmp
sbb
fwait
scas
out
out
jg
jle
inc
addl
scas
sbb
pushl
add
cmp
sub
je
mov
sahf
test
ja
jo
xor
pusha
lods
push
ret
jne
mov
arpl
out
xchg
decl
pop
fs
mov
roll
dec
insb
in
push
movsb
cs
imul
fdivrl
push
dec
pushf
scas
mov
out
xchg
push
fsubrs
push
push
cld
aaa
push
ja
mov
pusha
jo
add
push
ljmp
cli
test
dec
jnp
mov
mov
jbe
repnz
subl
mov
nop
jns
and
addr16
mov
pushl
mov
mov
add
rep
enter
mov
dec
mov
dec
imul
sbb
push
mov
fs
adc
popa
pop
insl
outsl
push
sbbl
clc
outsb
daa
dec
pusha
push
add
xchg
mov
xchg
popa
fcoms
fmuls
imul
push
das
das
mov
inc
test
mov
and
mov
cmp
pushl
mov
xchg
inc
mov
scas
mov
xchg
pop
movsl
cmpb
mov
outsb
pushl
sar
mov
mov
adc
gs
mov
mov
call
scas
mov
and
or
cmpsb
pop
lods
pop
pop
jbe
clc
mov
popa
or
pop
loope
push
xor
mulb
mov
clc
mov
imul
repz
movsl
sub
test
pushl
mov
sbb
ja,pn
adc
cltd
or
pushl
mov
push
dec
and
cmp
inc
aad
push
outsb
ret
xor
or
xor
rcl
xor
test
decl
cwtl
inc
repz
dec
pop
hlt
sub
imul
push
out
and
ss
xchg
xor
movsb
mov
cmpsb
dec
xor
lret
loop
pushl
add
imul
dec
pushl
pop
data16
xlat
xor
es
mov
mov
cmp
add
movsb
dec
popa
pop
mov
inc
cld
dec
cmp
je
or
mov
pop
push
jp
jg
ss
sbb
inc
lods
and
pop
mov
shlb
jno
call
sub
lods
es
cli
add
daa
xor
push
out
jge
and
mov
mov
es
call
sbb
pusha
mov
hlt
xor
inc
push
push
pop
xchg
les
xor
fs
add
and
das
jns
or
cmc
sub
jmp
or
mov
test
sub
jge
clc
sub
cmp
aas
mov
xor
sub
decl
arpl
cmp
lds
add
lcall
mov
add
cmpsl
sbb
incl
jo
scas
mov
test
loop
and
and
jbe
ss
pushl
pop
repnz
jl
arpl
call
jae
sbb
iret
pop
mov
jae
jno
push
push
sbb
ljmp
stos
in
arpl
xchg
fisttpl
dec
and
fisttpll
mov
add
jmp
mov
pop
mov
add
mov
lcall
dec
dec
decl
and
out
das
mov
inc
jae
pop
popf
int3
add
add
mov
stc
mov
movsl
xor
jno
addr16
aad
sbb
incl
mov
or
jg
push
les
cmp
fists
sahf
sbb
scas
dec
dec
inc
jge
fisubrl
push
sub
push
xchg
aas
xchg
out
das
test
adc
imul
push
out
sub
or
jecxz
cmpsl
cmp
scas
mov
pop
xchg
sti
or
xor
and
incl
xchg
cmp
aam
aas
dec
cltd
lds
or
and
pushf
sub
rolb
add
xchg
popf
pop
inc
jg
hlt
lcall
mov
and
and
aad
inc
jo
jns
fldl
test
xchg
testl
ret
js
mov
cmp
sbb
clc
stos
dec
add
and
sahf
sti
jbe
sub
icebp
jg
jmp
adc
and
jns
push
lahf
inc
add
je
jb
ljmp
fists
aas
jbe
movsl
mov
add
gs
leave
xor
call
push
push
mov
mov
adc
inc
mov
add
ss
fidivs
aaa
add
ja
daa
dec
stos
stc
in
cli
pushl
sbb
aas
mov
inc
cmp
mov
outsl
mov
mov
inc
jmp
into
push
or
sbb
sbb
mov
aas
lock
push
mov
cmp
cmp
xchg
cld
inc
mov
int3
in
jno
sub
adc
sub
fisubl
outsl
jg
fprem
call
pop
add
mov
dec
cld
pop
ds
std
pop
inc
jo
int3
repz
aas
mov
or
add
and
xchg
mov
aam
les
and
xor
cld
cli
daa
cmp
aaa
int3
xchg
dec
xchg
cld
not
cmp
je
jbe
xchg
adc
decl
adc
pop
scas
cmp
les
inc
push
adc
sbb
clc
sbb
push
mov
out
cmpsb
sub
aaa
sub
jae
or
adc
xor
jg
pop
cmpb
test
in
cltd
cli
lods
xor
loop
shrb
in
adc
push
adc
sub
aam
inc
pop
sub
mov
and
daa
and
fcomip
inc
sahf
xor
adc
mov
movsl
xor
test
xor
popf
push
test
pop
dec
js
xchg
mov
dec
movsl
dec
aaa
mov
test
sub
ret
lods
sub
pop
dec
cli
fistpl
sbb
insb
xor
and
and
jne
popf
and
sub
sbb
pusha
add
mov
push
add
push
push
daa
mov
movsb
add
or
out
and
lcall
popf
xchg
gs
xchg
cmp
stc
add
aas
sub
fistl
movb
xchg
es
cmp
loop
enter
in
adc
sub
xlat
and
cli
push
sbb
adc
add
xor
cmp
jl
xor
xor
cmp
daa
add
popf
jecxz
push
ficompl
aas
pmaxub
rorl
test
cld
ror
pushf
outsl
and
cmp
push
cmc
loop
mov
xor
jbe
inc
mov
stc
cmp
or
ret
ret
dec
adc
xchg
mov
pop
iret
jmp
fst
add
out
adc
movsl
mov
movsb
test
pop
scas
mov
jg
mov
loop
push
xor
or
mov
add
in
mov
cmp
cmp
js
sub
in
cmp
jmp
addb
xchg
adc
xchg
adc
push
add
lret
push
and
or
add
cmc
out
ret
mov
icebp
mov
mov
pop
sar
movsb
dec
dec
mov
js
notb
cwtl
inc
inc
and
jmp
pop
jne
or
adc
iret
xchg
mov
dec
sbb
xchg
sti
in
inc
jl
mov
xor
lods
ljmp
ja
gs
or
lcall
dec
and
imul
outsb
xor
ds
jg
mov
daa
fcompl
pop
and
cld
sub
call
mov
jns
sbb
inc
xor
cmp
jno
or
push
je
inc
add
xchg
mov
push
inc
cltd
jne
xchg
xchg
mov
mov
arpl
cmp
test
insb
stc
leave
hlt
adc
cmp
and
test
and
mov
add
mov
imul
add
jle
jne
idiv
out
clc
push
sbb
arpl
xor
push
add
stc
adc
xor
and
mov
enter
or
sub
xchg
pop
imul
ljmp
xlat
xor
push
es
loop
push
js
movsb
mov
xchg
decl
push
lods
iret
sub
cmp
lock
mov
push
lods
pop
dec
push
test
imul
jp
push
test
pop
es
push
loope
mov
int
push
cmp
dec
dec
icebp
stos
arpl
shrl
inc
ljmp
ljmp
out
mov
push
mov
ret
push
or
push
lds
mov
lods
dec
sahf
xchg
lret
fisttps
incl
push
fsts
data16
insb
sbb
pop
imul
push
les
dec
loopne
xchg
cld
adc
mov
xor
mov
loopne
shr
jnp
data16
aam
and
loopne
add
mov
jb
fmul
repnz
fisttps
cli
enter
aaa
test
ljmp
dec
dec
arpl
ljmp
pop
lea
jmp
jo
into
xor
es
ror
insl
in
enter
sar
pushl
xchg
xchg
enter
aaa
pop
leave
xchg
sbb
je
jp
mov
xchg
pop
or
push
jb
jle
insl
call
dec
and
xchg
fisttpl
push
pop
push
add
fwait
outsb
pop
addb
or
sub
jo
push
cs
jbe
fwait
mov
aad
sbb
imul
add
or
add
sub
pop
inc
jp
inc
mov
scas
fdivr
pop
repnz
cmp
push
loopne
ljmp
shll
cltd
addr16
incb
dec
movsb
lods
cli
cs
cmp
pop
outsb
adc
fs
pop
cmp
sar
call
js
je
arpl
dec
pop
inc
or
mov
push
xor
add
xchg
adc
test
call
cs
mov
mov
add
or
fs
push
call
jo
daa
pop
inc
ret
es
data16
adc
mov
mov
pop
adc
cwtl
dec
cmp
or
pushl
or
std
and
sbb
cmc
mov
mov
es
int3
sub
sbb
adc
pop
xchg
je
cli
cmp
jb
mov
sbb
shll
add
dec
lcall
mov
nop
shrb
js
in
mov
js
call
jns
cmp
mov
push
adc
jg
call
stos
sbb
bound
ljmp
fsubl
mov
add
jg
fsubs
daa
out
xchg
xor
movsb
inc
arpl
inc
mov
add
mov
incl
cld
cmp
lahf
popa
pop
inc
shll
push
inc
sbb
pop
rcll
ss
lret
xor
je
popa
mov
and
xor
cmp
jle
sbb
adcb
es
xchg
lret
daa
push
add
xchg
hlt
cmp
sub
adc
or
pop
mov
mov
pusha
mov
and
adc
ljmp
jb
js
sub
xchg
cmp
or
fidivl
sbb
xor
dec
decb
xchg
out
pop
cmp
xchg
leave
push
clc
incl
dec
xchg
cmp
stos
iret
mov
xorb
fwait
jl
cld
addl
mov
out
xchg
pop
pushf
and
cmpb
cmpsl
push
in
pop
int
arpl
sub
lret
int3
adc
dec
dec
xor
incl
dec
add
sub
dec
les
xchg
test
cmp
fisubl
adc
sbb
lret
jb
xor
mov
inc
jg
fiadds
insl
ljmp
push
fiadds
inc
mov
dec
clc
sub
mov
inc
imul
shrb
in
push
sub
fldt
nop
sbb
add
mov
ljmp
insb
sbb
adc
loope
hlt
test
scas
xchg
mov
lds
icebp
icebp
add
or
dec
xor
adc
neg
fwait
mov
in
or
inc
rcr
icebp
int3
bound
fists
cmc
aad
and
mov
sub
adc
pand
imul
xor
sub
adcl
adc
cli
imul
popa
movl
int3
jle
das
inc
sub
cs
cmp
fbld
es
and
outsl
testl
decl
cmpb
stos
out
xchg
lods
sub
outsb
push
adc
push
xchg
test
pushl
sbb
adc
push
xchg
mov
sub
fisubs
mov
decb
or
adc
mov
out
mov
xchg
inc
stc
xor
pop
sub
loopne
sub
push
dec
push
adc
insb
into
sub
pop
jg
lock
inc
push
dec
adc
push
imul
pop
shll
dec
imul
adc
out
movsl
cld
inc
bound
push
arpl
cltd
and
pushl
stos
and
stos
xor
bnd
jmp
push
pop
ljmp
aam
inc
incb
mov
mov
lcall
add
ds
insb
out
cmp
jb
and
dec
lds
push
sahf
test
ljmp
mov
mov
mov
push
xchg
and
scas
xor
push
push
cmp
dec
clc
jg
pop
xchg
adc
jne
mov
std
outsl
jle
sub
sub
test
das
add
or
ds
add
jmp
add
adc
inc
stos
cmp
mov
inc
add
cli
dec
es
cld
xchg
in
mov
in
mov
movl
mov
inc
add
and
ret
int3
add
idiv
mov
or
add
test
incl
push
add
lcall
push
call
add
movl
xchg
out
inc
adc
sub
push
sbb
and
and
test
in
clc
clc
punpckhwd
stc
push
inc
cld
inc
xor
js
pop
mov
rcrb
int
std
pusha
mov
xchg
pop
jns
xchg
push
call
movsbl
push
mov
sarb
cmp
mov
push
outsb
sbb
push
push
push
les
idivb
test
add
and
mov
push
sarl
ja
inc
not
sbb
out
rcrl
int3
mov
dec
jo
movzwl
mov
fstp
idivl
pop
imul
pop
enter
push
push
cmpsb
push
je
and
rol
lahf
cmpsb
adc
sub
inc
xor
add
push
aam
push
lds
jb
inc
outsb
inc
cmp
add
and
lahf
add
in
cmp
xchg
xchg
js
dec
imul
cmp
subb
je
lock
cmp
lahf
les
cmp
push
inc
add
movsb
cmp
mov
jmp
push
mov
jbe
pop
push
xor
repnz
cli
mov
std
add
xor
xor
and
push
push
cmovbe
test
fdivrl
addb
push
fimull
push
xchg
and
sbb
sti
xchg
loopne
or
add
stos
enter
sbb
xor
or
in
mov
mov
popf
xlat
movsb
adc
ja
js
mov
inc
loop
js
shlb
push
xchg
push
pop
dec
clc
mov
stos
inc
std
jno
lods
call
mov
sbb
adc
pop
pop
stos
push
or
mov
and
pop
push
fisttps
mov
push
in
ljmp
push
mov
in
mov
lcall
in
xchg
or
repz
movsb
movsb
add
subps
push
cmp
imul
enter
inc
dec
mov
push
mov
xor
imul
cmp
pop
adc
xchg
pop
daa
jg
mov
lea
jmp
mov
add
mov
sbb
cmp
outsb
mov
inc
fs
or
into
mov
mov
scas
popf
cltd
dec
scas
adc
mov
add
sbbb
rcrl
xor
sbb
add
mov
pop
sub
addr16
or
lock
inc
jmp
cmp
xchg
inc
clc
movb
xor
xchg
in
in
xor
incb
jmp
dec
inc
mov
add
cmp
lock
adc
add
int3
je
cmpsl
or
push
nop
cmpsl
or
shlb
and
ret
sarb
nop
clc
or
hlt
push
cltd
fistps
cmp
nop
inc
mov
addr16
jo
scas
and
sub
dec
clc
push
push
push
mov
rorl
push
mov
inc
add
sbb
and
jb
mov
clc
jge
sbb
pop
xchg
fidivs
or
xchg
cmpsl
ffreep
loopne
lahf
lea
xchg
scas
pushf
sbb
mov
fcmovnu
out
stos
and
test
sarl
xchg
test
pop
cmp
sbb
sbb
adc
inc
pop
pop
mov
add
jg
xchg
arpl
xchg
push
lock
inc
or
lea
jg
lea
imul
test
adc
and
aas
test
add
xor
pushf
lock
fs
adc
push
push
push
lcall
lds
lcall
jge
push
mov
leave
mov
in
and
adc
add
mov
subb
mov
mov
iret
int
je
mov
cmpsb
inc
mov
out
xchg
fwait
jl
mov
xchg
sbb
push
push
jecxz
lock
hlt
clc
sbb
orl
mov
cmp
arpl
push
jnp
lds
loopne
cltd
mov
pop
jmp
ja
mov
in
lods
or
pop
sbb
outsb
loope
fadds
mov
in
xor
mov
mov
pusha
mov
and
jmp
add
pop
jb
pop
xchg
inc
clc
cltd
jl
or
push
xchg
jl
hlt
mov
add
outsl
xchg
mov
xchg
fldl
daa
je
dec
std
push
cmpsb
push
xchg
cld
aas
pop
xchg
jge
inc
or
imul
push
loopne
xor
dec
sub
test
mov
inc
outsb
or
xchg
cmpl
cs
jbe
insl
jae
xchg
out
dec
fdivl
bound
test
je
movsb
rorl
sub
or
xchg
mov
dec
adc
or
xlat
stc
shlb
cwtl
ret
cmp
mov
jecxz
add
movsb
cmpl
in
pop
cs
xchg
xchg
add
and
icebp
gs
scas
icebp
ss
int
or
xchg
movsl
in
iret
inc
cltd
add
test
push
mov
mov
sahf
mov
add
xor
or
pop
add
pop
sub
fadd
pop
jle
adc
scas
inc
xlat
mov
push
jl
lret
sbb
imulb
sub
stc
push
int
adc
clc
scas
jmp
sbb
push
subb
out
loop
pop
inc
ds
dec
cmpsl
fcoms
add
mov
dec
adc
add
pop
xchg
push
adc
inc
or
or
push
push
movsb
adc
in
push
lahf
add
jge
fsubrl
inc
xchg
jno
test
jne
xor
cld
mov
repz
push
fdivs
push
cmp
vmovaps
add
push
pusha
shlb
loop
fldcw
test
push
loope
movsl
jno
int
adc
sbb
sbb
scas
push
inc
inc
push
mov
inc
or
nop
pop
filds
dec
add
inc
jl
dec
adc
mov
and
add
cmp
mov
xor
lock
and
pop
or
lods
sbb
jo
xor
jae
pop
std
pminsw
test
je
push
enter
xchg
lea
cmpsb
lods
sbb
scas
pop
pop
xor
mov
sub
fs
add
call
mov
movsb
fldl
push
and
lock
dec
push
clc
pusha
repz
mov
push
push
inc
push
cmpsl
push
mov
mov
mov
rolb
das
xchg
dec
xor
xchg
cmp
cmpsb
fstl
jnp
adc
sbb
testl
sbb
cmpb
sub
int3
in
push
pop
inc
ss
sub
jb
lods
ss
pushf
pop
push
fsub
fneni(8087
mov
loopne
aam
or
xor
cltd
pop
cwtl
pop
test
push
aaa
nop
mov
push
push
xchg
or
mov
mov
mov
adc
sub
push
cmc
sbb
xchg
je
mov
pusha
jge
in
test
imul
sbbl
ret
or
test
in
push
dec
pop
js
cmp
sub
mov
xlat
mov
das
mov
or
xchg
sbb
push
mov
rcrl
mov
int3
in
lods
es
enter
mov
mov
sub
shr
mov
adc
xor
xchg
dec
push
dec
adc
mov
push
enter
xchg
inc
push
movsb
push
test
in
mov
cmp
push
sub
test
and
test
lock
shlb
jp
popf
mov
mov
xchg
mov
enter
mov
xchg
adc
popf
inc
ficoml
adc
pushf
push
adcb
xchg
test
aad
test
push
jbe
push
test
add
stc
orb
push
push
mov
inc
and
mov
js
push
ljmp
add
sbb
jge
push
in
xchg
mov
test
add
cmc
js
jbe
sbb
div
fstpt
out
push
push
aad
add
push
arpl
xchg
ja
inc
sub
push
lods
roll
pop
and
or
aas
mov
or
or
mov
sub
xor
insl
pop
sbb
xchg
fldt
mov
mov
rolb
adc
lcall
jmp
sub
push
ja
inc
icebp
orb
adc
test
insb
scas
je
mov
lods
adc
lea
jp
xor
adc
adc
push
or
iret
inc
mov
cmp
popa
pushf
mov
test
mov
imul
pusha
xchg
dec
push
icebp
adc
inc
sub
je
push
lcall
test
or
xchg
push
dec
add
inc
jno
add
pop
sub
push
ds
repz
in
lock
sbb
neg
sbb
xchg
mov
fldenv
shr
lea
pop
push
fcomps
dec
cld
jne
imull
jmp
mov
jne
jne
gs
xor
rcrb
hlt
xchg
test
popf
mov
xchg
xlat
jmp
sbb
rorl
add
jbe
dec
cmpsl
jo
jo,pn
test
sub
push
and
lds
push
mov
pop
xchg
shll
jmp
mov
repz
xchg
sub
push
ss
inc
add
sbb
sarb
mov
shr
pop
or
push
loop
inc
pop
pop
pop
dec
add
sub
push
mov
icebp
inc
imul
push
xor
adc
repnz
inc
sub
sbb
sub
adc
and
popa
pop
test
ret
xor
adc
and
sbb
lea
xor
adc
ftst
call
xlat
jmp
adc
or
and
pusha
xchg
sti
sbb
test
adc
jns
pusha
rclb
dec
and
push
or
outsb
and
dec
mov
icebp
movsb
fwait
jns
scas
gs
cmpsl
aas
adc
in
mov
add
es
out
jle
xor
mov
xchg
in
rol
in
adc
add
jae
pop
inc
cmp
pop
mov
loopne
iret
orl
lds
or
cmc
pop
xchg
data16
adc
push
jb
and
and
mov
mov
add
xchg
mov
popl
dec
pop
mov
push
mov
mov
scas
shrl
call
adc
pusha
mov
mov
mov
add
insb
in
lds
cs
fcomi
jo
xchg
xchg
sub
add
xlat
fld1
or
jg
pop
lock
cmpsl
and
daa
or
mov
icebp
dec
inc
add
pop
push
xchg
xchg
pushf
mov
mov
gs
and
push
jo
fwait
lods
sub
pop
pop
in
inc
mov
testl
push
test
jne
jg
sub
jo
cltd
idivb
jmp
pop
xor
mov
lahf
mov
or
push
or
outsl
ds
inc
enter
js
add
add
popf
or
lods
add
cld
movzwl
cmp
dec
adc
jg
cmp
add
rolb
cmp
dec
dec
sti
fisttpl
lock
lea
movsb
clc
mov
dec
push
mov
push
push
shrl
adc
inc
repnz
inc
inc
in
pop
or
in
scas
fucomi
outsl
or
dec
push
cmp
jge
sub
sub
shlb
adc
push
and
cmc
outsb
sbb
or
in
jl
mov
jmp
shl
js
or
out
sbbb
mov
add
add
add
cmpsb
ror
orb
mov
lret
xor
call
in
cld
cltd
jno
scas
xor
push
or
dec
or
cmpl
pop
push
shl
scas
sbb
dec
loopne
roll
mov
cmp
ss
and
jb
in
jo
clc
cwtl
jmp
jae
inc
imul
or
push
les
les
fsubrl
idivb
pushf
mov
xchg
idivl
cmp
xchg
or
xor
mov
sub
or
push
xor
hlt
xchg
bound
mov
xorl
mov
test
push
es
gs
xchg
dec
fsubs
fcomps
cmp
and
mov
aam
xchg
inc
sub
rcl
dec
jo
sbb
or
jmp
popa
mov
push
aam
and
call
add
jle
mov
adc
add
int3
xor
shr
cmpw
cli
mov
add
xchg
cmp
jmp
cmpsl
push
mov
push
aas
imul
cmp
or
mov
or
insl
push
hlt
and
adc
into
in
std
push
and
adc
push
push
mov
push
sti
imul
loop
adc
add
shll
mov
add
jmp
cmpsl
loope
out
jbe
inc
add
aam
or
jmp
mul
xor
or
add
sub
adc
rorl
add
fsubs
inc
rep
mov
mov
mov
aad
movl
xor
push
lock
enter
push
jmp
cmp
cli
push
lods
ljmp
cmp
fimuls
call
jbe
scas
pop
addb
sub
cld
enter
cld
cltd
sub
gs
sub
hlt
in
add
out
xor
jno
in
mov
dec
sbb
and
push
cmp
sub
aam
jge
es
sub
inc
sbb
push
in
jne
movsl
filds
adc
cmpsb
or
pushl
dec
jecxz
cmp
jne
subb
test
sub
sub
dec
add
mov
mov
andl
push
call
int3
rcr
sbb
sbb
cmp
movsl
stos
xor
in
clc
outsb
loope
out
sbb
mov
pop
sub
sarb
outsb
lea
sub
mov
sub
pop
pushf
jmp
mov
imul
movsb
daa
inc
les
push
mov
or
add
sbb
fwait
lock
adc
hlt
or
nop
inc
cld
int3
shlb
add
xchg
mov
xchg
dec
pop
adc
lahf
mov
das
xor
mov
es
xchg
xchg
cwtl
mov
call
xchg
lret
cltd
mov
push
lcall
add
fsts
jne
fdivs
leave
cwtl
jo
cmpsl
je
or
in
add
inc
sbb
sbb
lock
adc
xchg
xchg
push
and
mov
aas
adc
js
sub
sbb
loop
je
push
dec
pop
mov
or
lret
rorb
or
or
inc
jnp,pn
xchg
in
loope
popa
xor
add
inc
xchg
dec
add
and
push
scas
ror
sub
inc
bound
jmp
ljmp
xchg
mov
or
push
inc
sub
incl
inc
mov
lea
push
loopne
fldpi
and
mov
dec
push
jne
mov
xor
mov
lea
flds
mov
stos
add
push
clc
adc
test
setnp
dec
cmp
mov
sahf
fidivrs
xchg
shlb
shlb
jbe
mov
in
mov
pusha
push
pop
cmp
push
mov
imul
ds
or
add
gs
mov
clc
inc
cmp
enter
lock
cmp
mov
adc
in
cmp
in
xor
add
xchg
mov
test
int3
ret
movsb
push
mov
shl
cmp
xorb
mov
fbld
mov
sub
pop
and
aaa
aas
cs
pop
mov
lea
and
dec
mov
and
stc
xchg
cld
or
mov
shlb
push
or
jmp
cmp
cmp
loop
roll
test
add
out
xchg
call
mov
and
repnz
or
push
jbe
mov
es
sbb
pusha
pop
and
popa
or
aam
or
addr16
leave
arpl
xor
pop
mov
add
stc
mov
add
test
pop
ret
lahf
push
inc
push
ret
negl
pop
test
lods
mov
inc
jecxz
push
movsb
ja
notb
pop
mov
add
jge
add
push
inc
sar
xor
push
mov
lea
jae
insb
push
test
mov
imul
add
pop
jbe
outsl
popf
scas
aas
sbb
inc
or
add
push
dec
cmpl
jb
sti
bound
inc
mov
das
pop
loop
nop
cmp
mov
mov
sub
cld
sbb
jl
and
popf
fcom
cmp
dec
sbb
cld
das
loope
movl
loopne
out
les
out
imul
or
adc
shrb
shr
pushf
in
data16
dec
or
push
out
mov
or
pop
push
jge
divl
aas
cmp
enter
cmp
dec
cmpl
dec
mov
add
scas
mov
sub
in
pop
pushf
mov
cmp
fs
mov
dec
sub
cmp
jbe
inc
repnz
fs
mov
dec
cmp
jae
push
mov
jecxz
mov
pop
aas
cmp
int
pop
rcll
pushf
rolb
inc
xor
lahf
mov
mov
sub
dec
shlb
lret
lock
test
les
negb
ret
mov
insb
out
faddp
mov
and
push
insb
sub
add
lcall
xchg
test
or
and
in
test
movsb
push
es
jne
notl
cmp
test
fwait
cmp
mov
daa
sbb
mov
mov
add
fldcw
orl
mov
mov
push
insl
adc
insb
or
cmp
inc
mov
ja
sub
pop
mov
arpl
mov
test
lods
in
or
mov
mov
mov
popa
adc
jge
ret
lock
or
or
dec
mov
sbb
mov
shll
mov
divb
xor
jae
mov
test
out
mov
mov
mov
cs
mov
or
in
jp
in
push
gs
sbb
rorl
or
ret
jecxz
ja
pop
xchg
es
in
add
in
in
scas
shll
in
mov
mov
or
dec
icebp
mov
insl
dec
sti
outsb
push
and
add
lock
std
icebp
imul
dec
mov
in
es
sti
fcomp
sbb
xor
in
pop
add
loope
xor
add
cmpsb
mov
add
sbb
sub
pop
ret
mov
shrb
and
rorl
mov
push
jo
lea
loopne
loopne
dec
shll
loopne
sub
cmp
jmp
or
je
cwtl
xchg
testl
cmp
shlb
push
sub
xchg
mov
aam
push
lock
pop
movsb
loopne
jmp
bound
jne
inc
add
push
call
add
movsl
jb
in
loopne
loopne
lock
out
or
rcrb
shl
int
fisttpl
icebp
add
enter
and
adc
push
js
xorb
lret
xor
sub
movl
jmp
xchg
xchg
enter
inc
stos
lret
outsb
les
pusha
jo
enter
jmp
imul
fisttpl
xchg
cmpsl
adc
rcl
gs
inc
sahf
iret
enter
xor
lret
mov
add
lahf
mov
addb
test
and
loopne
mov
dec
sub
push
addb
in
jl
je
jno
cmc
or
call
outsb
mov
or
cmp
xchg
pushf
enter
in
mov
sti
pop
div
sub
dec
sbb
jmp
fsubs
fmuls
or
out
mov
cli
in
fdivl
inc
fwait
dec
sub
mulb
test
insl
call
enter
les
cmp
dec
push
add
scas
mov
sbb
out
testb
pop
dec
adc
test
add
movb
shrl
stc
add
int3
jb
ror
cmp
sub
test
pushf
xor
lret
movsb
das
mov
mov
sbb
adcl
outsb
test
lret
pushf
test
mov
adc
add
les
cmpsb
in
add
mov
push
mov
adc
lcall
mov
rorl
ret
push
xchg
push
or
data16
lods
adc
sbb
sub
fcmovne
and
mov
cld
popa
add
sbb
xorl
cld
cld
hlt
or
loopne
cmc
add
push
pusha
ja
or
jmp
in
popa
popa
out
call
inc
imul
add
adc
inc
cmp
inc
mov
adc
clc
add
ja
or
jno
ret
push
lea
int3
xchg
loop
insb
adcb
enter
icebp
inc
push
ret
mov
add
jo
fcomip
arpl
movl
leave
test
movsb
mov
lahf
or
movsl
push
mov
fimull
xorb
mov
inc
in
movl
mov
pop
jl
out
inc
inc
cmp
or
test
subb
mov
cld
stos
pop
push
push
lcall
movsl
add
adc
or
jnp
push
imul
add
jl
push
clc
fnstcw
cmp
insl
dec
mov
pusha
adc
test
ja
and
or
popa
and
inc
fninit
mov
lahf
or
test
sbb
or
pushf
pop
push
adc
cmpsb
jb
sub
adc
cmp
rorb
fldl
fs
adc
js
js
int
jmp
jmp
push
data16
xor
xor
mov
je
sbb
cmpsb
call
data16
sarb
cmpsb
add
pushf
pop
fcompl
test
jp
pop
and
loopne
add
inc
inc
jns
pop
jg
push
push
inc
add
adc
test
ljmp
loopne
lahf
decb
add
mov
jb
ror
add
iret
and
movsb
sub
std
aam
cmp
and
leave
jns
sbb
scas
loopne
movsb
or
pusha
adc
mov
add
jmp
adc
and
std
xchg
mov
call
add
test
fisttpl
lods
imul
push
out
mov
sub
xchg
push
xor
std
mov
mov
in
call
or
adc
add
cmp
cmpsl
xor
fnstsw
ret
push
add
lods
imul
scas
adc
or
push
add
dec
push
rolb
or
mov
loope
pop
iret
in
or
cmp
ret
dec
push
adc
lea
in
enter
sti
cmp
mov
xchg
movsb
jp
xchg
jo
pop
je
lods
lea
adc
sub
lea
inc
lcall
fsubs
or
xchg
lods
jno
mov
leave
sub
mov
or
pusha
dec
adc
dec
movsl
cmp
lea
pop
scas
lods
adc
inc
lea
lds
popf
push
push
sub
and
add
pusha
push
ja
mov
mov
inc
cmp
sbb
add
mov
bound
cmp
lds
mov
rorl
cmp
add
add
push
dec
mov
hlt
lods
stos
in
insl
mov
lahf
and
inc
dec
cmp
mov
pop
cmp
sbbl
pusha
jmp
daa
filds
mov
cmc
mov
xchg
test
add
pop
rcrb
rorl
xor
sub
push
pop
pop
xchg
les
or
jmp
rclb
cmp
in
pushf
incb
jo
addr16
adc
cmp
int3
lds
insb
xlat
push
inc
jae
aas
dec
ja
movsb
and
gs
push
add
es
fildl
fsubs
push
adc
inc
mov
mov
xor
lahf
mov
les
adc
roll
rorl
add
or
dec
or
jo
enter
test
addb
xor
fdivr
lahf
fldenv
test
adc
sbb
xchg
xchg
mov
push
scas
mov
leave
aas
xor
jno
imul
mov
shll
inc
mov
dec
ret
shlb
shlb
push
and
and
je
idivl
pop
les
cli
into
je
fdivl
test
fxch
mov
shlb
lcall
sub
add
fwait
xchg
fsubrl
sbb
shrb
jl
or
jnp
push
inc
jl
add
or
bound
call
movsl
push
cmp
adc
mov
mov
xchg
test
and
push
push
xor
adc
sbb
and
out
fcoms
adcb
push
shll
push
jne
rol
push
movsb
push
jbe
inc
sbb
pop
push
xor
std
pop
test
adc
push
cmp
hlt
jnp
arpl
out
adc
cltd
cmpsb
xor
mov
fbstp
mov
cmp
xor
push
xorb
dec
je
push
pop
adc
pushf
sbb
insb
add
imulb
or
dec
pop
mov
adc
mov
adc
mov
in
mov
pop
jne
inc
cmp
call
xchg
adc
fcomp
pop
adc
jno
dec
mov
ja
or
push
outsl
and
cmp
push
add
mov
in
sbb
outsl
enter
mov
movsb
shll
pop
pushf
inc
push
xchg
movsb
jns
push
rolb
fsubs
sbbb
xchg
call
movsb
sub
push
pusha
pop
or
test
adc
imul
add
inc
adc
shll
test
fdiv
adc
repnz
pusha
sbb
add
adc
ret
push
loop
fildl
push
lea
shlb
out
jne
add
sub
mov
mov
sub
test
aas
mov
push
in
add
xchg
push
xchg
mov
ds
sbb
call
mov
adc
je
push
adc
xchg
or
mov
scas
in
push
lea
add
inc
dec
jmp
lds
push
xor
sub
mov
cmp
imul
movl
jnp
pusha
inc
pop
jmp
mov
adc
jo
add
std
sbb
orl
imul
es
mov
push
pop
arpl
dec
clc
lahf
sbb
clc
mov
mov
and
js
or
pop
cmp
sub
xor
push
es
aam
aad
xor
jns
pusha
push
movsl
push
push
clc
rolb
rcrl
test
insb
test
icebp
gs
push
repnz
xchg
sbb
push
loope
test
add
loop
les
xor
stos
mov
testb
sbb
out
popf
bound
mov
mov
jb
jecxz
test
or
inc
cmpl
loopne
xor
jge
pop
adc
push
daa
push
loope
shll
and
aaa
fcoms
xchg
xchg
scas
mov
sbb
popa
add
ds
push
into
out
dec
sbb
enter
lea
je
adc
adc
sti
dec
xchg
add
and
in
pop
sbb
jnp
sbb
cs
arpl
mov
int3
shrb
jmp
out
and
sbb
in
dec
pusha
jmp
iret
xlat
mov
pop
movl
dec
call
inc
sahf
enter
enter
pop
and
xchg
pop
sarb
dec
sub
mov
mov
fimuls
lock
dec
or
sar
add
jmp
mov
push
cmc
push
shrl
add
imul
mov
inc
pop
adc
test
jo
inc
xor
mov
mov
fs
sbb
pusha
push
mov
insb
cmp
sbb
aam
xchg
sub
adc
inc
xor
out
push
lret
sbbb
loopne
adc
and
xchg
stos
mov
sub
xchg
add
dec
ja
lret
shrl
rcll
outsl
mov
imul
jmp
cmp
inc
stc
dec
push
push
into
pop
js
clc
push
push
pop
repnz
dec
dec
add
pop
into
andps
adc
rcl
std
sub
shr
cmp
xchg
pop
xchg
mov
jne
shlb
cmp
insb
cs
pop
pop
das
into
xchg
stc
mov
xor
test
sbb
jo
pop
inc
pop
xchg
adc
xchg
push
lock
lret
rcll
adc
sub
dec
ds
fsubr
adc
mov
adc
mov
push
test
and
std
inc
sub
jecxz
mov
add
sub
je
adc
sub
mov
push
xor
lods
dec
jecxz
rcrl
test
mov
dec
sub
lds
inc
aad
add
push
jmp
dec
or
stos
lds
bound
pop
int
pushf
jb
add
push
sub
dec
sub
insb
insb
jne
loop
aas
pop
dec
pop
pop
inc
ss
insb
mov
xchg
div
cmpsl
sbb
cmpsb
shll
mov
mov
pop
sub
or
dec
pop
push
push
rol
mov
mov
out
sub
nop
insb
pop
inc
and
fisttpll
inc
lods
push
lea
out
fbstp
fs
mov
mov
roll
cmpb
out
pusha
sbbb
pop
dec
in
ret
sub
or
fcomps
shl
and
mov
cmc
testl
xlat
cltd
sbb
push
leave
test
xor
jmp
movsl
test
xchg
push
inc
js
push
pop
add
ljmp
or
rcl
cmp
enter
mov
cmp
inc
and
dec
mov
and
lods
adc
rol
xor
add
adc
mov
popa
inc
pop
pushf
aas
pop
mov
push
std
leave
push
push
lret
test
sbb
or
cmpsb
or
pop
cmp
fcoml
outsb
ret
inc
xor
xchg
mov
xchg
push
mov
inc
mov
mov
dec
shrb
shrl
and
movsl
jb
dec
int3
mov
xchg
xor
lret
jns
adc
stc
push
adc
aam
add
push
test
dec
sbb
adc
out
sbb
add
loopne
arpl
mov
mov
bound
mov
ret
mov
nop
int
sbb
add
mov
sarl
ljmp
lods
sbb
pop
jg
movsb
pmaxsw
add
cmp
push
or
xchg
mov
minps
sub
fwait
adc
or
enter
adc
dec
stos
test
imul
xlat
push
repz
push
add
adc
push
push
add
cmp
push
sub
and
test
add
test
movsb
adcl
xor
add
and
cwtl
sub
pusha
mov
ficoml
dec
mov
pusha
dec
cmpsb
movsb
cmp
mov
loopne
inc
sub
call
les
xor
sub
mov
in
cmp
rcl
dec
push
cs
test
lret
int3
ror
add
fwait
sbb
dec
xchg
add
int3
iret
call
push
mov
cmp
add
adc
jnp
loope
nop
lret
test
insl
jns
jb
jnp
addr16
std
sub
cmp
cmp
push
rcll
mov
mov
lods
jno
mov
cmp
data16
and
xchg
sub
lods
icebp
mov
dec
loopne
dec
adc
pushl
test
xor
lods
pop
rolb
jb
add
mov
cwtl
or
dec
jne
push
sbb
std
notl
aam
adc
nop
inc
fmul
mov
lods
sub
scas
add
cwtl
sub
inc
inc
mov
dec
sub
dec
movsl
add
push
cli
jo
or
iret
mov
mov
les
roll
mov
fdivrl
dec
or
and
test
test
fnsave
or
sbb
test
pop
test
int3
imull
xchg
pop
out
dec
outsl
sub
inc
inc
cmp
push
movsb
add
div
and
aaa
ret
test
mov
or
test
add
pop
mov
jp
xchg
xchg
lea
jnp
in
test
popf
ror
ror
pop
addl
cmpsl
cmp
cltd
fs
pushl
push
push
and
mov
adc
dec
inc
jae
push
push
adc
pop
enter
lock
push
push
jne
stos
inc
mov
add
jne
cmp
adcb
add
and
push
out
pop
sbb
notl
js
pushf
subb
pusha
and
xor
addb
int3
mov
scas
je
les
dec
push
push
movsl
jb
dec
fnstcw
movsl
jb
xchg
cli
cli
int3
testl
ror
sbb
xchg
jle
pop
fidivrs
push
xor
add
fnstcw
sbb
cmpb
sbb
cld
or
adc
shrb
cmc
loop
loope
inc
outsb
out
mov
sub
push
jle
inc
sub
and
inc
push
out
shld
mov
insb
add
push
mov
orl
inc
or
imul
cmp
adc
or
ja
mov
adc
scas
rcrb
dec
xor
push
insb
pop
xorl
add
inc
xor
pop
mov
push
dec
sahf
sbbw
faddl
add
pop
mov
adc
daa
sbb
je
or
or
sbb
repz
pop
mov
add
sbb
xchg
loopne
push
inc
pusha
testl
sub
sbb
or
in
mov
mov
pop
adc
es
call
popa
lea
inc
rorb
sub
jle
mov
dec
add
pop
je
cmp
pop
pop
icebp
test
sub
nop
clc
dec
jb
xor
mov
xchg
sbb
cs
mov
push
sub
adc
aaa
xor
test
gs
pop
or
sbb
mov
dec
roll
mov
xchg
out
mov
mov
or
adc
les
mov
add
pop
dec
mov
add
fisubs
aas
daa
lea
lea
je
push
push
mov
and
fwait
or
and
fwait
jne
movsb
ret
pop
push
lea
add
xor
jns
leave
inc
inc
inc
push
push
dec
push
and
lods
mov
mov
xor
jg
add
lods
add
xchg
xor
add
mov
aam
insb
adc
loope
lods
ret
add
and
jle
rcrb
loopne
inc
icebp
or
xchg
ret
scas
cmp
jb
adc
fadd
and
rclb
push
fdivl
jecxz
mov
cld
or
adc
ret
xchg
loopne
stos
lods
pop
out
sbb
out
lods
out
push
into
mov
mov
inc
in
sbb
or
arpl
fs
stos
mov
ret
fildl
mov
cs
jb
dec
repz
sub
fdivr
aam
lea
aam
in
aad
add
mov
out
mov
loopne
test
mov
and
mov
adc
xor
mov
ss
imul
je
pop
ret
adc
inc
lret
dec
mov
shrl
push
icebp
lret
mov
test
out
fdivrl
mov
addl
mov
mov
or
movl
popf
cmp
dec
add
shr
inc
or
push
xchg
lea
push
ljmp
xchg
cmc
add
jl
jnp
jne
mov
mov
fdiv
call
stos
clc
adc
out
add
cmpsl
std
jge
xor
mov
outsl
mov
adc
pop
adc
sahf
int3
mov
sbb
lods
aaa
inc
addr16
insl
or
push
imul
xchg
xchg
outsl
cmp
movzbl
and
pushf
or
out
fcmovne
add
xchg
push
inc
mov
lahf
pushf
mov
scas
and
out
aaa
sbb
push
adc
cmp
mov
dec
adc
sub
cmpl
out
loopne
fbstp
add
je
jmp
or
xorb
or
dec
or
subb
jnp
ljmp
add
movsb
lcall
fwait
xchg
inc
mov
loop
cmp
or
mov
adc
add
into
sbbb
or
les
movsb
mov
ja
cmpsl
inc
cmpsb
clc
jne
cwtl
hlt
pop
lea
stos
add
mov
and
flds
pop
out
or
sub
fsts
adc
mov
mov
cmp
push
add
add
js
mov
inc
or
mov
ljmp
dec
mov
stos
jnp
mov
inc
pop
add
or
fistpl
push
shl
mov
inc
xchg
fucom
xchg
repz
sbb
mov
fstps
jg
test
or
cmp
jbe
adc
push
inc
out
push
dec
xchg
stos
add
add
xchg
int3
pop
cmp
xchg
mov
adc
das
dec
data16
xor
mov
mov
dec
sub
adc
pop
add
mov
test
adc
push
cli
push
sub
adc
jae
out
jge
add
push
je
cwtl
fsubl
adc
lahf
movsb
mov
xchg
cmpsl
aad
out
jmp
xor
mov
push
insb
dec
jne
mov
int3
pop
addr16
or
cld
adc
arpl
mov
ds
pusha
je
data16
jbe
xor
dec
ffreep
jae
mov
in
add
rcll
mov
xor
jmp
push
inc
outsb
pop
ret
addr16
push
pusha
mov
xchg
xchg
jg
sub
outsl
outsl
jnp
fwait
out
leave
data16
mov
dec
das
xor
loopne
insb
cld
cmp
or
ljmp
pop
in
cmp
pop
fdivrl
mov
push
sub
sbb
ja
push
cmp
int3
push
loopne
cmpl
xchg
jl
fsubrl
inc
aam
adcl
add
addb
aas
cwtl
mov
xor
mov
mov
push
fsts
xor
pop
push
adc
fists
shrb
adc
mov
xchg
xchg
scas
in
call
add
les
add
stc
mov
mov
test
jo
or
xchg
push
adc
ljmp
or
bound
push
and
shlb
jo
or
je
enter
sbb
adc
js
rorb
add
pop
rolb
dec
dec
cmp
xchg
mov
rolb
pop
mov
pop
xor
pop
xor
pop
mov
and
inc
cmpsb
shll
stc
loopne
and
mov
sti
cld
add
sbb
pushf
or
add
or
fwait
mov
pop
add
or
fildll
loop
scas
add
lret
test
push
sbb
leave
int3
jl
xor
pop
and
loopne
roll
jmp
push
jl
add
imul
stos
push
adc
loop
cmpl
cmp
push
jns
xor
mov
push
nop
in
jns
mov
adc
or
ret
jns
or
ret
lods
lods
sbb
scas
movsb
int3
or
repnz
xchg
lret
int3
int3
sti
in
push
jp
xchg
cmp
inc
nop
test
cmp
pusha
fs
js
pop
mov
pop
and
sti
mov
adc
fsubs
ss
jbe
inc
xor
js
lods
mov
fwait
push
xchg
lea
inc
mov
rclb
popf
xchg
pop
sub
stos
mov
jge
sbb
aas
and
mov
enter
into
jnp
or
push
inc
ja
xor
mov
xchg
mov
popa
inc
pushf
jmp
inc
xor
jmp
rolb
sub
daa
mov
push
dec
xchg
mov
repz
push
inc
jns
mov
ds
or
sarl
int
xor
mov
jg
or
stos
jp
xchg
add
add
add
push
sub
ret
incb
or
adc
or
add
or
ret
fadds
adc
loope
cli
jbe
je
adc
cmpsl
push
ja
dec
fmuls
pushl
xor
mov
cmp
lods
pushf
cld
negb
incl
lcall
ret
adc
or
test
rorl
pause
mov
and
stc
jns
sbb
pop
adc
cmp
fs
or
jecxz
inc
pushf
mov
add
lea
add
addr16
repnz
and
loopne
popa
jmp
push
loopne
or
mov
mov
or
inc
lea
xchg
fimuls
cld
cwtl
fimull
neg
jnp
dec
lret
xor
and
cmp
add
dec
movsl
mov
push
jne
shlb
clc
xchg
cmpsb
pop
call
sbb
and
fdivr
pop
js
enter
cmp
jne
test
mov
cs
in
pop
fadds
divl
in
and
and
popf
or
pop
jg
fiaddl
add
xchg
lock
cmp
push
adc
pop
pop
in
lahf
dec
mov
and
add
jmp
call
inc
rsm
pusha
cli
add
sbb
movsl
aas
sub
jo
or
sub
cmpb
sub
fdivr
ja
or
pop
xor
ljmp
out
scas
cmp
push
repnz
xor
repz
mov
adc
xchg
je
je
ret
sub
lret
push
sbb
sub
and
sbb
xor
stc
add
mov
inc
lock
ret
scas
cmp
loope
adc
adc
and
mov
les
leave
lods
and
push
sahf
jbe
adc
inc
or
adc
cmpl
dec
pop
xchg
dec
ficompl
cmpsb
cltd
cmpsl
or
jl
add
cmp
push
sbb
mov
xor
stos
adc
and
inc
mov
inc
mov
pop
loopne,pn
push
and
push
jbe
pop
cs
clc
cmp
pop
leave
adc
loopne
shlb
scas
jmp
cs
dec
imul
dec
mov
mov
or
add
mov
xlat
xchg
out
das
adc
fstl
jmp
push
in
jbe
adc
adc
jne
fwait
insb
lcall
jmp
mov
inc
addl
pop
cmp
jne
dec
pushf
ss
jmp
adc
dec
sbb
or
cmp
aam
or
je
add
cmp
subb
mov
out
lock
popw
cwtl
jp
jmp
mov
adc
pusha
push
imul
int
clc
xchg
in
xorb
data16
adc
push
sbb
add
add
neg
or
jge
or
ret
icebp
sub
cmp
arpl
push
bound
stc
add
mov
les
xchg
into
adc
iret
adc
dec
out
pushf
arpl
pop
dec
fistpll
mov
or
jne
loope
adcb
or
je
mov
sub
jo
jns
pusha
push
rorb
sbb
fdivp
cli
adc
inc
das
or
test
mov
push
or
inc
sarb
push
or
sbb
mov
dec
mov
fstps
leave
push
mov
mov
fisttpll
or
jb
mov
cwtl
lahf
add
ja
adc
xchg
add
sbbb
shlb
movsb
les
aaa
fsubs
xor
adc
lret
in
test
push
movsb
test
and
icebp
sbb
test
idivb
sahf
xchg
cmp
lcall
out
push
dec
jbe
cwtl
ret
das
fwait
pushf
std
xchg
fdivrs
sahf
incb
pop
add
add
add
and
mov
add
and
popa
imul
aaa
sub
mov
and
or
call
clc
add
dec
cmp
std
inc
daa
nop
lods
into
sub
dec
clc
jmp
add
int
xor
or
lods
mov
fists
into
push
push
cmp
add
and
and
sub
rcr
push
sbb
inc
mov
lock
insl
clc
push
push
repz
xchg
push
stc
jbe
and
pop
mov
xchg
lea
push
fsubrl
clc
adc
shr
int3
lock
push
pushf
mov
cs
dec
je
shlb
movsb
add
mov
push
rclb
cmpb
adc
loope
cmp
loopne
pop
test
pop
push
int3
jg
adc
sar
add
sbb
push
sub
cmp
sahf
test
lock
lods
les
or
mov
sbb
hlt
mov
xchg
hlt
hlt
and
repz
push
fsts
std
or
pop
clc
aas
xchg
fsub
jmp
mov
es
js
mov
cltd
dec
xor
fs
inc
popl
pop
cwtl
orl
repnz
add
test
mull
ds
and
pushf
xchg
add
lods
daa
add
loope
xor
inc
inc
dec
pop
sbb
dec
and
jae
cmp
or
hlt
cmp
icebp
push
sub
xchg
push
or
inc
sahf
cmp
xchg
aaa
push
lock
xlat
xchg
inc
jle
hlt
push
push
popa
add
gs
stos
mov
sbb
jmp
aaa
sbb
jge
and
add
lock
push
rorb
xchg
xabort
clc
rclb
push
icebp
aad
adc
pop
and
push
push
addl
clc
ss
add
int
or
add
cmp
je
mov
push
cmp
fidivrl
cmp
clc
jne,pt
jae
rorl
sub
and
mov
bnd
pop
add
cwtl
shl
xchg
push
clc
xchg
int
add
add
adc
out
add
outsl
ficomps
push
and
jge
jo
and
adc
push
inc
mov
add
inc
outsl
sub
in
icebp
jbe
push
add
pop
loopne
add
call
movsl
push
int
xchg
cmpsb
stos
dec
or
sbb
testl
jmp
adc
test
mov
dec
rolb
mov
ficoml
xchg
mov
xchg
fisttps
scas
sbb
icebp
movlps
push
xchg
jb
pop
lea
adc
lahf
lods
ror
xchg
jne
pop
mov
mov
mov
xchg
mov
sub
inc
mov
jo
test
out
dec
mov
dec
push
xor
loopne
nop
sub
mov
or
cld
ljmp
sub
xchg
push
sbb
jb
add
mov
fs
cwtl
ss
imul
xchg
pusha
das
rclb
ja
or
dec
call
mov
dec
inc
cli
and
xchg
sbb
pushf
adc
push
mov
push
cmp
cld
scas
in
xlat
divb
in
pop
inc
or
adc
popa
mov
adc
hlt
cmp
mov
push
scas
mov
ret
js
gs
xchg
aam
and
lods
cmp
add
mov
jb
scas
movsb
std
push
ret
push
adc
rorl
inc
xor
jo
dec
jb
or
stos
mov
xchg
repnz
incl
adc
add
jp
xchg
adc
xor
sti
in
shl
pop
and
or
mov
jno
jnp
xor
or
xchg
add
jl
mov
mov
scas
push
sbb
aas
or
or
mov
adc
adc
test
fiadds
and
out
repz
imul
cs
popa
daa
fwait
push
inc
sub
cmp
clc
repz
mov
push
fisubl
lds
mov
cmp
ffreep
inc
add
outsb
fadds
push
push
or
inc
fldl
cld
pop
add
jl
xchg
ljmp
mov
xor
loope
clc
or
or
jge
aas
mov
adc
test
push
nop
add
ret
aas
jb
mov
adc
pop
out
xchg
add
push
loopne
cmp
mov
push
mov
jmp
lahf
lock
clc
or
and
mov
pop
jnp
out
je
enter
or
arpl
push
movsb
xlat
pushf
push
std
jecxz
cmpsl
mov
mov
in
dec
inc
pop
xchg
je
cld
mov
orb
and
adc
icebp
add
clc
into
push
inc
enter
push
mov
sub
ds
adc
sbb
stos
cld
pop
scas
test
mov
add
repz
movb
dec
testl
test
mov
xchg
push
ret
lea
push
jo
mov
pushf
mov
push
rcll
test
mov
or
test
add
add
insb
repz
inc
jae
jge
pop
stc
push
add
pusha
mov
pop
dec
sbb
lahf
adc
sbb
hlt
xor
push
les
mov
or
or
std
adc
andb
push
push
or
jne
adc
or
out
imul
hlt
push
push
pop
jle
mov
sarb
das
mov
addr16
fadd
push
out
sub
or
pop
mov
add
loopne
push
jmp
mov
add
pop
jg
xchg
inc
sub
lock
sub
and
add
es
jmp
loopne
jns
inc
add
push
xor
dec
clc
or
repnz
not
lea
and
sahf
pop
mov
cmp
pop
das
int
insb
and
adc
dec
ret
mov
test
movb
xor
ret
adc
mov
insl
int3
mov
jmp
dec
or
lea
adc
enter
and
mov
pop
aas
and
pusha
push
mov
fs
je
jno
pop
cmp
jge
and
lods
das
clc
push
cmp
lock
popf
pop
movsl
in
jge
mov
int
and
add
fisubl
cmp
push
cwtl
add
movsb
shlb
mov
in
push
inc
add
xchg
xor
jo
mov
xchg
sub
jnp
shlb
xlat
push
loopne
add
and
popf
mov
inc
jae
jne
mov
ret
push
cmp
subl
loopne
shll
cmp
pop
jne
fdivrs
push
mov
fwait
mov
mov
push
in
cmp
xchg
lods
fimuls
add
adc
lods
push
enter
cmp
push
push
push
adc
aad
repnz
movsb
add
adc
shrl
stos
cmc
push
dec
mov
rcr
and
and
adc
push
cmp
rorb
outsl
mov
mov
jmp
or
nop
repnz
or
pop
repnz
inc
jnp
fildl
sarb
adcb
pop
cmp
lea
push
pop
push
cmpb
xor
add
dec
lret
daa
ja
xchg
mov
loopne,pt
push
add
mov
stc
jmp
in
sub
pushf
adc
or
lret
and
jmp
andl
loopne
mov
add
ret
sbb
xor
jo
push
mov
aam
mov
or
jae
mov
mov
adc
ljmp
test
movsl
cmp
add
adc
shr
push
int3
xchg
and
dec
mov
cmpsb
xor
test
add
call
icebp
or
add
inc
mov
add
mov
pop
add
lcall
pop
xchg
add
je
rcrb
adc
lods
js
xor
loop
cmpsl
adc
in
mov
push
sbbb
cmp
dec
jge
mov
jo
insb
push
and
adc
jmp
sub
jne
ja
icebp
cmp
xlat
inc
test
leave
mov
js
neg
mov
ret
mov
mov
add
add
push
pop
out
fadd
imul
mov
add
in
arpl
xor
shlb
ret
shl
scas
adc
sub
aam
insb
xchg
push
mov
insl
mov
jmp
adc
rcr
jno
push
out
test
imul
dec
adc
daa
fimuls
mov
inc
rcll
fdivrs
fcoms
dec
fistpl
stc
xchg
jne
lahf
inc
lcall
mov
sbb
shl
inc
cmp
sub
sub
xchg
dec
lret
lods
ret
jmp
lea
and
pop
or
imul
rcll
add
mov
out
int3
imul
hlt
int3
xchg
or
mov
xor
loopne
int3
cmp
jnp
cmp
xor
mov
gs
dec
hlt
int3
xor
mov
fsubrs
shrl
cmp
pop
in
xchg
sar
jne
daa
dec
jne
sub
jl
jne
adc
jne
xchg
push
mov
pop
std
pop
dec
or
sub
lea
int3
inc
and
adc
jl
push
sub
mov
movsl
pop
mov
fsubr
push
ffreep
mov
jne
stc
jb
fdivl
jb
cmpsb
adc
add
insl
add
add
shrb
push
dec
test
bound
stos
mov
xchg
cmp
push
sub
call
mov
lea
fdivl
pop
aad
lcall
or
out
addl
hlt
test
arpl
shll
or
jecxz
lcall
sub
jo
inc
popa
xor
xorl
sub
sub
mov
mov
mov
arpl
pop
push
fadds
cmp
cmp
adc
dec
lret
cld
nop
out
je,pn
or
cmp
mov
aam
cmp
mov
adc
push
jmp
add
jmp
push
add
incl
sbb
mov
or
add
add
inc
or
mov
push
divl
in
mov
aad
and
loop
movb
je
adc
jmp
cmpsl
cs
inc
popa
test
daa
mov
movsb
ja
cmc
push
pop
cld
push
dec
cmc
movsb
popa
ds
je
xlat
mov
mov
sahf
in
inc
pop
add
rolb
pop
lea
fisubrs
rorb
add
xchg
sbb
push
adc
shll
mov
movsl
mov
loopne
movsl
mov
and
mov
movsl
add
push
and
adc
mov
xor
push
push
push
or
mov
pop
std
mov
push
push
aas
jg
xchg
cld
lods
cmp
insb
sub
push
push
sub
cs
push
fdivrs
je
inc
dec
mov
in
xor
adc
dec
leave
insb
ja
in
and
mov
jp
jnp
inc
jbe
in
push
nop
or
sub
and
mov
dec
cmp
xor
push
pop
jo
les
lods
std
dec
pop
lods
mov
sub
inc
leave
push
xchg
clc
addl
cmpsb
mov
clc
lea
dec
rcrl
or
xchg
cmp
in
pop
mov
mov
mov
sub
dec
in
mov
mov
pop
dec
cmp
jb
dec
xchg
lea
cs
aas
pop
lahf
insb
push
xchg
lcall
and
inc
mov
push
push
scas
mov
mov
test
mov
outsl
dec
rol
je
es
pushf
insb
mov
adc
pushf
sbb
idivb
and
sahf
sub
test
scas
mov
in
jbe
pop
ja
xchg
lcall
mov
fs
jp
les
adc
adc
push
popa
jp
cwtl
rorb
jns
andb
loope
and
js
jnp
mov
cmp
jns
inc
test
cmp
cmp
in
lret
aam
sub
pop
add
cmpsb
sub
or
sub
lock
mov
out
mov
jno,pt
dec
sub
test
mov
and
outsl
xor
cmp
fnsave
sub
and
nop
or
xor
pop
popa
dec
scas
or
pop
cmp
xchg
or
jmp
roll
ja
fs
test
out
and
cmp
inc
mov
add
mov
xor
sbb
ret
stos
xchg
add
mov
popa
inc
cmp
or
push
mov
cmpsb
cmp
push
or
shrl
data16
sar
cld
sbb
cmp
add
or
or
sbb
adc
push
adc
loopne
mov
sti
cld
shl
push
xor
jbe
test
jg
pop
pop
add
add
or
lock
ds
dec
clc
xchg
lock
mov
loopne
inc
push
pop
push
or
adc
pop
jo
std
push
in
lea
mov
cmp
mov
lcall
xchg
cmpb
mov
jle
adc
insb
adc
pop
mov
mov
mov
pop
hlt
shr
jb
cmpsb
cmp
sbb
mov
aad
out
lret
xorb
insb
lret
idivb
lret
fmull
jle
cld
popa
cld
cmp
scas
mov
push
mov
js
sti
clc
push
imul
mov
push
sub
rorb
push
jp
mov
xor
lahf
sarl
sbb
decb
pop
bound
xor
mov
decb
ljmp
in
adc
icebp
push
mov
inc
mov
or
push
clc
mov
daa
pop
adc
ret
sub
fnop
xor
rorb
mov
push
cmp
mov
or
pop
lea
jno
mov
scas
jge
inc
dec
dec
popf
or
sarb
adc
jne
jae
jmp
add
add
mov
and
sub
in
dec
xchg
and
push
mov
push
jne
sub
push
jmp
cmc
mov
es
xor
dec
test
lcall
cmp
addr16
les
push
jecxz
add
mov
lea
cld
push
jg
mov
adc
fadd
push
dec
pop
cld
je
rcl
sub
push
jno
and
lds
clc
mov
outsb
add
cmp
shr
nop
fs
jmp
arpl
and
push
cmp
xor
jg
push
pop
sbb
xor
push
pop
adc
inc
imul
add
pop
adc
rcr
dec
and
call
negl
hlt
and
hlt
jge
sub
sbb
push
jmp
je
pop
xor
scas
daa
and
dec
sbb
fldl
lea
loopne
jo
push
lcall
lret
cs
add
movsl
inc
addb
stc
push
cli
addr16
or
jns
xor
int3
scas
movsb
inc
push
or
jmp
jmp
push
adc
pop
push
xor
push
or
mov
xor
popa
mov
push
popa
jg
stos
testb
pop
sub
add
dec
or
push
addb
fidivrl
iret
xchg
mov
add
mov
add
cmp
rclb
imul
mov
pop
shl
add
jl
js
or
inc
xchg
leave
push
repnz
aam
stos
int3
mov
std
mov
mov
mov
sbb
jp
aam
lahf
xchg
push
jne
outsl
adcb
orl
popf
jb
push
or
imul
xor
or
gs
xor
or
add
mov
frstor
in
addb
and
fs
aas
mov
adc
or
sbb
repz
pop
cmpsl
or
fadd
dec
ljmp
adc
arpl
add
push
testl
pop
mov
or
ja
push
xor
scas
fsubl
and
sub
xor
in
inc
xor
dec
inc
les
push
cmp
fs
cmpl
xor
test
out
push
push
lea
jecxz
dec
ret
mov
or
jns
adc
std
mov
lsl
int3
lds
or
enter
imul
lds
push
pop
mov
insb
es
push
sahf
inc
push
lock
jecxz
push
call
lret
je
or
shl
in
or
dec
hlt
les
dec
or
and
xlat
add
ret
mov
or
and
dec
imul
inc
xchg
arpl
out
adc
mov
push
int
aas
dec
or
pop
movsl
mov
xchg
fiaddl
add
fstp
sarl
add
sub
rorb
xorl
cwtl
xor
out
mov
pop
pop
adc
adc
or
adcb
mov
push
pop
and
cltd
fsubrs
inc
or
push
es
stc
xchg
je
ret
jle
dec
out
sbb
aaa
mov
pushf
lds
ret
or
sarl
fstpl
cld
dec
and
shll
push
cmpsl
imul
sub
inc
icebp
sbb
xchg
or
arpl
cmp
inc
test
add
push
insb
adc
sub
addb
and
adc
sahf
jbe
sti
push
push
pop
push
jecxz
xchg
and
mov
pop
push
sub
setge
loopne
xchg
push
add
xchg
lret
in
or
mov
rolb
xorl
mov
idivl
or
inc
sub
or
jl
and
jo
or
jnp
pop
loop
or
jno
dec
dec
out
sub
xor
jle
cmp
sti
dec
in
mov
out
add
sbb
ja
movl
les
jl
sub
and
inc
or
inc
add
push
cmp
into
push
jbe
cmp
cmp
add
imul
andl
sbb
aas
ljmp
subl
lret
jo
pop
sub
cmp
mov
xchg
adc
or
jmp
and
lret
cmp
xor
jecxz
or
xchg
dec
fbstp
cld
adc
hlt
ds
xor
loopne
adc
ffree
cmp
push
clc
mov
mov
mov
stos
leave
mov
sub
mov
stc
hlt
sub
ja
sub
mov
xor
cmp
push
mov
cmp
mov
scas
sbb
cld
or
push
test
sbb
jbe
orb
aaa
aaa
adc
cmp
mov
push
push
mov
popa
fistps
cwtl
sub
adc
cmp
addl
lock
sbb
leave
les
inc
dec
mov
fsubrs
jecxz
sbbb
ja
loopne
xchg
or
int3
or
loop
test
mov
adc
wbinvd
push
fsubrl
repnz
sti
push
inc
inc
lcall
mov
lcall
xchg
cld
addl
xchg
mov
cmpsb
mov
mov
add
adc
fdivrs
imul
loope
js
adc
repnz
push
adc
cmp
fsubrl
rcll
adc
call
xor
rcr
pop
add
sti
clc
dec
cmp
out
jmp
add
mov
repz
fcompl
popf
rolb
mov
arpl
push
jne
fidivrl
test
push
enter
mov
je
test
out
les
in
cwtl
mov
sub
aad
or
enter
push
lea
push
jecxz
and
push
push
cwtl
and
out
test
rcl
aaa
mov
cmp
adc
hlt
pop
or
and
dec
add
mov
and
push
push
sub
cwtl
int
sub
hlt
lea
inc
adc
nop
out
and
roll
pop
sbb
movsl
add
iret
fadds
aas
daa
push
and
add
sbb
imulb
data16
mov
jns
stos
movsl
cltd
in
out
push
adc
sub
cmp
adc
push
rolb
pop
adc
mov
sbb
xlat
insl
pop
leave
fadd
sbb
mov
iret
lcall
in
lahf
xor
xchg
and
dec
and
call
shll
inc
loopne
and
xor
dec
jmp
xchg
push
push
xchg
loop
jmp
xchg
jg
sahf
mov
cmpsl
cwtl
dec
push
jg
mov
lret
mov
adc
adc
mov
bound
adc
pop
pop
xor
add
dec
orl
call
or
sub
inc
in
call
nop
inc
in
lods
or
fwait
dec
test
or
out
ja
add
xchg
dec
push
in
int
movl
pushf
add
loope
mov
adcl
push
mulb
xchg
jl
push
imul
inc
add
jl
dec
pop
sbbl
adc
xor
sbb
loopne
mov
push
movzwl
pop
push
iret
mov
not
push
add
xlat
dec
lods
xor
test
js
adc
mov
or
js
xchg
adc
lahf
jb
je
push
shll
jb
sub
sub
mov
jnp
sti
mov
push
cmp
divl
andb
js
mov
outsl
cmpb
sar
stos
adc
clc
sub
xor
push
push
adc
lock
mov
push
mov
push
jecxz
inc
in
adc
adc
mov
in
push
or
fstl
js
mov
cmp
lock
aad
xchg
mov
fbld
in
outsb
gs
and
les
loopne
add
lods
xchg
jns
fwait
jb
fsubrs
or
inc
mov
and
aam
sbb
mov
ss
sub
movsb
xchg
mov
in
cmpsb
or
or
add
add
insl
iret
enter
and
xchg
push
in
push
lods
lea
outsl
add
sub
or
add
pushf
adc
sub
outsl
imul
stos
xor
inc
addl
lret
jne
push
movhps
rclb
or
or
push
mov
mull
sub
ret
add
adc
ja
insb
iret
mov
insb
movsl
push
add
jne
in
lea
es
mov
ret
sarl
cmp
fsubs
out
push
rclb
push
and
insl
nop
and
xor
adc
add
popf
adc
sbb
xchg
push
add
add
push
daa
popf
lahf
test
dec
mov
call
jge
in
aas
test
stos
jno
cmp
mov
hlt
cmpsl
out
add
push
imul
push
cltd
mov
xchg
jl
add
js
pop
andl
mov
xor
lds
das
aam
jo
in
loop
cmp
adc
mov
adc
jae
cmpsl
sbb
push
pop
shrb
add
mov
aam
mov
mov
pop
ret
mov
call
imul
nop
shrl
mov
ljmp
mov
mov
test
jnp
push
mov
xchg
pop
inc
inc
xor
lods
orb
mov
movsl
cmp
rcr
and
lret
and
add
sbb
ja
gs
pushf
shl
and
mov
je
les
pop
or
and
jae
xchg
movsl
cmpxchg
jo
mov
addr16
jb
js
jge
sbb
add
cmp
mov
mov
mov
mov
mov
pop
sub
xor
adc
dec
stc
ficomps
sarb
mov
lods
js
lret
and
ja
pop
jl
sbb
and
dec
test
pop
loopne
cmp
test
test
std
pushf
jmp
jp
pop
add
hlt
loope
idivl
and
add
lret
dec
in
pop
es
imul
enter
scas
mov
inc
cltd
lock
repnz
cld
mov
sbb
adc
sarl
jae
xor
sbb
test
add
or
adc
pop
lock
lret
jge
push
addr16
lahf
pop
push
ja
mov
mov
push
data16
jmp
pop
dec
faddl
push
movsb
inc
mov
mov
push
dec
mov
adc
mov
out
mov
pop
xor
or
sahf
orb
cld
pushf
movsb
add
dec
mov
les
xchg
movsb
push
call
push
sbb
xchg
mov
adc
mov
jle
add
jge
mov
fcoms
sbb
jmp
add
add
sbb
js
add
rorb
cwtl
aam
fcomp
cmp
and
loopne
cmp
dec
mov
inc
sahf
inc
pushf
lods
adc
inc
imul
mov
jbe
jnp
mov
pop
cmp
ret
ret
pop
lcall
add
es
or
cmpl
sbb
loop
movsl
int
cs
out
rcl
mov
enter
xchg
cmp
dec
cmpl
inc
in
xchg
repz
add
in
jmp
jno
and
addb
or
subl
sub
xchg
test
call
push
add
cvtpi2ps
shll
movsb
enter
orps
or
sbb
sbb
mov
sub
jle
ret
stc
mov
pop
roll
add
add
mov
call
or
jns
mov
and
je
fnstenv
push
ret
jo
sbb
and
sbb
and
or
adc
cmp
aaa
and
mov
das
dec
add
ds
add
add
mov
push
je
mov
xchg
lahf
loope
cmp
xor
push
ret
push
add
xchg
add
loop
or
cmp
jbe
loopne
jl
lahf
push
and
jno
and
insl
jmp
and
aas
pop
push
adc
lods
addb
clc
gs
inc
imull
lea
push
push
sbb
arpl
loopne
dec
rorl
mov
clc
imul
push
idiv
dec
test
lcall
xchg
inc
int
add
inc
xchg
add
sub
lea
ds
cltd
shl
in
jmp
lret
cmp
sub
sbb
mov
lods
popa
das
add
sarb
pop
xor
sbb
push
mov
or
pushf
je
cmp
fst
xchg
insl
mov
mov
imul
fistpl
lods
jge
push
stos
push
outsb
divps
xchg
push
inc
sahf
repnz
dec
lea
loope
jle
std
aam
xchg
sub
sbb
aam
add
aaa
in
add
xor
push
sub
cmc
adc
lods
enter
mov
xor
dec
jo
inc
int3
dec
int
add
xchg
shlb
push
adc
inc
ret
imul
xor
sub
insb
mov
sbb
jne
dec
cmp
outsl
lods
xchg
dec
enter
add
sub
adc
das
subb
add
sbb
jae
dec
fdivrl
roll
jne
cli
or
mov
cs
dec
cmp
rolb
test
xchg
dec
push
inc
rol
mov
add
mov
stc
es
int
int
mov
icebp
sub
mov
sbb
sbb
out
jae
push
sbb
jne
dec
leave
sbbl
out
in
lret
call
js
jnp
int3
add
sub
clc
ret
xchg
outsl
add
push
pop
aas
sub
pop
jmp
cltd
or
lahf
or
add
push
fs
imul
in
enter
jge
loope
jmp
xchg
hlt
fnstcw
les
jnp
dec
les
cmp
inc
add
inc
lret
mov
mov
fisubrs
or
cld
push
push
outsl
imul
sub
scas
add
dec
and
in
ljmp
loopne
sub
and
dec
jo
sub
mov
orb
mov
lahf
inc
lahf
sub
dec
insl
movsl
fistl
mov
in
jne
push
adc
jge
inc
pop
sub
leave
adc
sti
add
lcall
adc
hlt
mov
sub
and
sbb
fildll
movsb
sub
and
mov
xor
push
adc
inc
and
dec
sar
cld
mov
inc
cs
sbb
push
pushl
lock
test
adc
cmp
lcall
rcrb
ret
loopne
xchg
or
mov
or
jnp
jl
pop
mov
add
mov
int3
inc
jg
subl
loop
fiaddl
mov
aad
pusha
push
repz
cmpsb
mov
push
cli
jl
push
jne
sub
dec
shl
pop
hlt
hlt
cmp
dec
mov
movsb
or
aas
jmp
movsl
rcrb
mov
jp
scas
inc
daa
cmp
jbe
jl
test
jcxz
call
add
cwtl
push
push
cmp
pusha
mov
inc
je
adc
or
in
jbe
faddl
and
fcoml
cltd
push
add
mov
fstpt
loop
inc
loopne
dec
jmp
pop
mov
push
or
lock
dec
call
loopne
inc
xor
pop
jg
mov
push
add
cmpb
push
xor
xor
mov
mov
adc
incb
stc
sub
lea
bound
fildl
test
mov
inc
dec
jne
test
pop
jne
dec
mov
les
mov
sub
mov
pop
mov
sbb
in
xor
lea
sbb
mov
push
mov
cmp
or
xor
push
push
loopne
std
lods
mov
jns
push
jmp
scas
mov
pushl
frstor
sbb
sbb
ds
movsb
xchg
add
into
es
out
popa
iret
jge
sbb
xor
push
pop
fs
lea
cmp
sbb
inc
jmp
push
xor
push
xor
cld
popf
sar
out
mov
into
add
pop
mov
dec
cli
cmp
leave
ret
or
jmp
and
mov
push
push
mov
jne
cmp
adc
int
enter
scas
xor
in
je
sub
mov
bound
sub
push
mov
add
mov
adc
aam
push
and
mov
mov
xlat
ficoml
adc
shlb
movsb
loopne
pop
push
jmp
or
dec
and
mov
lcall
into
aam
push
xchg
mov
std
or
mov
mov
cmp
jb
neg
pusha
cmpsl
pop
add
rorl
data16
fimull
mov
shl
rorl
jmp
mov
or
rcrb
aaa
mov
push
clc
sub
das
push
les
shlb
enter
clc
push
jb
dec
shrl
xchg
mov
add
add
bswap
push
push
cmc
push
faddl
pop
jl
mov
xchg
mov
mov
arpl
loopne
leave
sub
mov
xchg
pusha
movsl
sub
fs
arpl
ss
clc
inc
mov
add
or
test
inc
add
std
movsl
les
cmp
mov
iret
lock
loop
cld
push
rclb
cld
sub
mov
pop
out
sahf
roll
adc
and
lds
inc
mov
xor
sbb
leave
dec
inc
mov
outsb
jbe
jns
adc
mov
jbe
gs
push
addl
stc
jo
ss
pop
add
inc
xor
xchg
andl
fcompl
add
dec
and
sbb
mov
sbb
dec
add
and
pop
mov
pop
jne
push
push
mov
out
mull
adc
lock
inc
fistps
xor
shrb
or
aam
mov
pushl
inc
aam
pop
xchg
enter
punpcklwd
sub
rcr
cwtl
mov
mov
mov
inc
dec
lock
cmp
std
data16
dec
hlt
mov
movl
jmp
mov
sbb
mov
sbb
adc
add
lret
gs
cmp
add
call
out
or
cmp
xchg
das
mov
stc
push
jno
sbb
imul
cmp
jae
inc
les
mov
jmp
cmp
xlat
shll
movsb
dec
and
adc
loopne
xchg
add
cmp
jge
cmp
xor
jb
jno
jle
clc
jge
sub
xor
sbb
pop
or
add
repz
addl
jmp
push
dec
stc
lods
cwtl
inc
add
mov
cmp
imul
lock
repnz
inc
negl
add
loope
test
jg
dec
stc
in
jne
pop
dec
add
mov
sub
xchg
cmp
mov
or
jmp
xor
xor
pop
sbb
sbb
ljmp
mov
fadds
in
mov
mov
jecxz
push
mov
mov
pop
xchg
jb
dec
out
aad
push
in
sub
inc
xor
sbb
inc
xor
push
inc
testl
xor
lahf
clc
sub
cld
stos
enter
jnp
movsb
adc
or
jle
jle
je
in
je,pn
push
push
fldt
loop
imul
leave
xor
xor
xor
cmp
xor
lret
pop
idivl
seto
cmc
xor
push
pushf
push
adc
or
mov
js
xor
inc
jmp
or
add
mov
cli
mov
push
adc
pop
sub
push
pop
push
sub
sub
inc
sbb
push
sbb
jecxz
dec
push
xchg
dec
xchg
push
push
pop
mov
inc
mov
loopne
movsl
xor
cvtpi2ps
or
add
pop
shll
cltd
add
jne
add
add
pushf
inc
loopne
push
ja
out
outsl
nop
xchg
push
movl
aad
arpl
icebp
enter
add
fwait
fwait
pop
out
stc
les
fisttps
rorb
adc
sbb
pop
inc
jmp
push
sahf
or
jle
roll
roll
cmp
jbe
clc
setae
cmp
andb
in
mov
pop
and
and
dec
pop
pop
adc
loopne
mov
test
pop
xchg
cmp
fcoms
fidivs
nop
mov
mov
jb
loopne
mov
enter
lea
push
mov
jg
jmp
sbb
inc
push
push
mov
mov
mov
jl
mov
or
scas
adc
mov
push
dec
add
dec
push
pop
push
movl
outsl
inc
sub
add
sahf
out
push
ror
sarb
test
mov
mov
sahf
out
call
out
sahf
out
hlt
clc
clc
cld
fdivrs
add
lock
fnstcw
iret
imul
sub
mov
mov
inc
pop
xchg
mov
sti
and
outsb
or
push
lea
jl
cld
push
jo
sub
and
std
cld
out
mov
nop
add
fsts
pop
sbb
stc
sub
ficoms
lock
jl
sub
out
add
dec
inc
fcomps
add
jbe
mov
jecxz
insl
pop
add
ljmp
mov
or
push
push
pop
cmp
repz
insb
je
jns
out
ss
sbb
adc
jns
out
adc
or
and
jns
or
add
jo
jnp
inc
mov
int3
and
push
insb
push
add
pop
mov
adc
ja
cmp
and
fadds
lock
push
push
cmp
lret
gs
push
popf
cli
sbb
push
pop
mov
push
add
add
jmp
ds
cmp
adc
or
sarl
add
mov
push
popf
and
sub
scas
pop
pop
sub
push
jb
shr
stc
je
icebp
sub
fiadds
sub
mov
push
flds
add
push
pop
fistl
out
cmpsb
sbb
es
ljmp
inc
in
mov
lock
add
adc
xor
sbb
mov
add
addr16
addb
mov
adc
fstps
out
clc
push
movsb
sbb
push
cmp
test
inc
aam
add
inc
sub
clc
inc
push
inc
mov
lcall
andl
ss
js
pop
or
scas
jns
or
or
pushl
sbb
ds
nop
push
cmp
cs
movsb
push
push
in
adc
int3
dec
sub
cmpsl
cmp
js
mov
hlt
or
sub
sbb
push
cmp
add
inc
mov
or
call
loopne,pn
xchg
jae
pop
push
jp
inc
sbb
pop
sahf
dec
pop
scas
mov
int3
leave
stos
add
mov
decl
mov
mov
les
cmp
jne
inc
inc
inc
inc
jmp
and
ret
and
shrl
xchg
or
sbb
and
js
jmp
call
mov
inc
xchg
std
mov
add
out
xor
dec
je
loopne
sub
test
ret
ret
rep
adc
data16
rol
or
or
loop,pt
push
arpl
mov
or
mov
mov
cmp
clc
testl
dec
jo
pop
dec
sub
mov
mov
jnp
push
cmp
adc
aas
or
mov
testb
adc
sub
adc
pop
loop
add
inc
add
outsl
bound
pop
mov
dec
mov
cmp
pusha
ja
mov
xor
jge
int3
pop
add
and
jmp
jp
and
sub
push
inc
in
insb
fs
adcb
int3
add
jno
es
mov
mov
in
mov
add
cmpb
pusha
jo
mov
push
jecxz
sbb
and
mov
loope
pop
sub
push
adcl
dec
push
inc
cmpsb
fucom
pop
inc
push
hlt
clc
mov
in
repnz
inc
and
mov
hlt
xchg
push
fucomi
hlt
stos
loope
cmpsb
insl
rcrl
hlt
cld
cmp
jne
inc
adc
jb
push
add
add
jbe
sti
push
push
push
mov
cmp
inc
imul
add
xor
cmp
movq
jl
cmpb
cmp
jb
cmp
jl
jg
outsl
inc
xchg
jbe
add
int
and
pusha
repz
add
add
cld
mov
dec
leave
je
add
mov
jl
mov
incl
fcomps
out
push
sbb
push
mov
hlt
std
mov
add
test
xor
test
inc
pushf
jbe
push
xor
sbb
iret
mov
negb
jne
push
lock
imul
xor
fadd
inc
and
testl
je
popf
dec
mov
xor
xor
rcrl
ret
adc
sub
mov
jbe
in
ficompl
fsts
sub
frstor
push
and
jl
mov
or
les
adc
aaa
aaa
int3
fs
add
popa
add
sub
fisubl
inc
cmpsb
xchg
or
imul
sbb
sbb
sbb
aaa
push
sbb
sarb
scas
leave
jbe
push
das
push
pop
cltd
pop
idiv
add
mov
or
fcompl
lods
lods
dec
jg
jl
out
jo
cltd
stc
lea
dec
push
push
mov
mov
shrl
aam
decl
sub
lcall
test
loopne
cmp
mov
test
cwtl
stos
pop
jmp
adc
xchg
rcrb
lret
popf
jecxz
enter
int
loopne
mov
push
orb
push
adc
push
push
xchg
insb
cmp
push
jg
push
loopne
pop
cmp
xor
add
outsb
add
add
rcrb
loopne
jl
in
pop
dec
pop
sahf
jle
cmp
mov
push
push
cmp
divb
fs
rcl
mov
cld
mov
or
or
pop
jl
mov
sbb
lods
rcr
jne
mov
sbb
mov
decl
push
jbe
xor
cmp
cli
shrl
jne
jb
push
int
out
test
sbb
mov
and
aad
mov
mov
push
fsubs
push
pop
das
add
dec
xchg
lret
aaa
clc
inc
xor
js
push
inc
add
out
adc
adc
push
inc
inc
mov
push
sbb
push
lods
push
push
cmpsl
add
jl
cmp
push
pop
cmp
or
push
add
int3
or
xor
mov
jle
inc
dec
jecxz
mov
bound
fiaddl
add
hlt
shr
adc
pop
jno
push
and
je
daa
std
jmp
fistpll
or
ret
jmp
sarb
or
jmp
pop
pxor
jmp
lea
dec
movsl
sarb
inc
adc
and
inc
std
test
xchg
push
pusha
jo
mov
movsl
jl
test
std
dec
outsb
cmp
cli
sub
pusha
or
jne
cmp
roll
lea
mov
sub
fidivl
aad
into
sub
mov
cmpsb
inc
jmp
rep
ss
neg
enter
or
pop
movsl
lock
push
add
sub
or
jecxz
pop
mov
jo
add
sub
push
andl
xchg
repnz
ret
cltd
xchg
fcomps
in
adc
push
out
mov
dec
push
pushf
pop
aam
pusha
pop
adc
pushf
pop
sub
je
push
popf
fisubs
add
push
mov
sarl
pop
mull
add
loope
pop
data16
shr
mov
sbb
lods
mov
push
mov
pusha
jle
xlat
movl
add
jmp
fdivrp
aas
clc
xchg
dec
push
add
cli
xchg
lock
lea
cmpb
dec
mov
pushf
adc
cmp
cmp
dec
dec
and
push
add
or
outsl
jae
into
add
test
or
jmp
xor
stos
dec
dec
inc
loopne
jns
adc
sbb
jne
mov
jge
mov
pop
jno
mov
in
add
sbb
insb
insb
adc
mov
pop
adc
xor
jo
jg
mov
cmc
mov
pop
cmp
je
fisttpl
add
test
loopne
dec
or
mov
fs
insl
mov
xor
push
add
pushl
loope
mov
jmp
pop
lcall
jo
or
xchg
das
cmp
jae
inc
std
fldpi
xlat
sahf
dec
add
je
in
inc
sbb
xor
cmpl
xor
decl
cmp
je
push
and
loope
mov
and
inc
sbb
xor
inc
arpl
add
dec
dec
or
mov
nop
mov
stos
and
pop
pop
dec
sub
sbb
add
jle
pushl
inc
stc
jne
dec
mov
mov
mov
test
out
mov
insb
arpl
push
jl
sbbb
sub
xor
or
add
add
out
loopne
sub
or
or
jg
xor
add
lret
shrb
jle
push
push
arpl
pushf
adc
pop
jo
lea
fstpt
out
and
sahf
jno
push
clc
jno
mov
adc
sbb
cld
imul
fildll
or
pop
jg
jmp
nop
add
jns
sti
pop
inc
cmp
jl
pop
pop
mov
leave
lock
loop
lods
push
outsb
js
test
ficomps
fstl
stos
orl
add
rolb
and
lret
aad
pop
inc
je
in
int3
les
dec
adc
pushl
or
gs
loopne
pop
inc
fmul
mov
cs
mov
or
rcr
int
loope
fdivs
aaa
inc
mov
pop
sbb
push
lret
movsb
incl
jbe
dec
call
jmp
and
lods
sbb
dec
cmp
pop
dec
or
pop
adc
adc
inc
or
sbb
push
mov
pop
je
mov
jle
mov
jg
push
shlb
popf
in
fscale
adc
and
adc
rclb
add
xchg
inc
outsb
fmuls
sti
pop
mov
rcl
in
stc
push
mov
ds
cmpl
adc
cli
call
cmp
and
inc
clc
add
jne
mov
cmp
lods
aam
or
cmp
xor
cmp
rolb
adc
sarl
pop
data16
adc
cmpsl
mov
adc
mov
xor
and
mov
push
xor
xor
xor
pop
sub
test
inc
out
pushl
lret
cmp
repnz
and
flds
sahf
sub
adc
decb
add
jbe
mov
pop
jnp
lret
je
int
cltd
aam
push
push
cmpl
xchg
adc
jne
add
push
jmp
jnp
cmc
pushf
cmp
or
je
xchg
je
arpl
fs
mov
sbb
or
fs
cmp
sbb
aad
jge
mov
pop
or
and
push
xor
push
add
stc
xchg
ret
mov
xchg
loope
mov
addl
fmuls
and
pop
cmp
or
stc
jecxz
enter
dec
je
dec
jne
mov
xor
hlt
add
jno
inc
mov
push
or
sbb
arpl
loopne
cmp
cmpsl
cmpsb
push
fldl
xchg
data16
dec
in
fsubrl
and
popl
pushl
fists
add
icebp
enter
jno
cli
inc
cs
arpl
adc
jnp
push
or
sbb
xchg
or
popa
or
mov
or
pop
out
pop
fcmovu
cmpb
or
fists
inc
cmp
je
pop
cmc
and
and
push
out
shlb
adcl
inc
push
sbbl
sbb
mov
ljmp
inc
cmp
jae
push
cmp
jl
mov
inc
add
pop
and
scas
aam
lods
mov
addb
pop
mov
testb
jne
clc
push
mov
in
loopne
push
add
into
add
push
ljmp
jb
pop
pop
pop
pop
sub
aad
add
cmp
mov
push
pushf
in
dec
stos
sbb
pushl
enter
adc
mov
icebp
cmp
scas
xor
std
mov
xlat
dec
mov
adc
or
incl
sbb
cmc
add
insl
xor
or
jne
and
cmp
imull
xor
jne
jmp
fcmovnb
out
scas
in
rcll
mov
mov
adc
dec
dec
mov
ss
cld
icebp
scas
push
loopne
cmpb
jle
xchg
data16
clc
mov
dec
add
cs
xor
inc
add
sub
inc
xor
add
nop
pop
sahf
das
aam
cld
sbb
lret
and
pop
mov
push
jle
pop
and
push
jbe
push
dec
loopne
clc
dec
imul
xor
cmp
jae
mov
adcl
jo
jl
ljmp
subb
mov
imul
and
and
test
jne
push
test
sbb
jl
add
dec
jg
adc
orl
mov
lret
pop
hlt
dec
adc
jne
aad
xlat
insb
shl
or
rolb
pop
nop
cmpb
mov
push
decl
scas
addr16
and
negb
std
jb
or
or
jne
js
pop
adc
movsl
xlat
dec
xor
repnz
andb
push
push
dec
or
mov
xor
cmpl
mov
lret
push
mov
push
mov
adc
sahf
add
cmc
fstps
pop
arpl
imul
add
push
or
sbb
and
nop
adc
xlat
je
mov
cli
es
mov
and
cmp
jb
testb
and
cmc
xlat
xchg
insb
testb
int3
loopne
pop
clc
or
out
gs
movsb
mov
movb
and
cmp
jne
cmpl
sub
jb
or
daa
mov
push
or
addl
in
push
out
sbb
movsb
gs
push
call
call
and
lea
lcall
push
movsb
add
xor
mov
adc
mov
sbbl
jnp
push
pop
push
cmp
shlb
push
sbb
jg
in
daa
mov
mov
inc
in
mov
and
push
and
sbb
icebp
push
sbb
xchg
add
sub
cmc
cld
pushf
push
dec
mov
mov
movsl
mov
adc
in
pop
push
test
inc
mov
or
push
push
push
outsb
ja
nop
mov
sbb
push
loop
mov
lods
sbbl
jge
shrb
mov
pop
push
mov
xchg
incl
jle
cwtl
and
sbb
call
mov
popf
mov
push
cld
push
jo
xchg
inc
or
add
mov
scas
movsb
or
clc
je
in
cmp
pushf
test
or
sub
mov
fiadds
cld
jle
inc
shlb
sub
pop
shl
xlat
arpl
fnstsw
pand
mov
adc
adc
sbb
cmpl
ret
dec
push
push
sub
dec
jle
sahf
or
push
sub
xor
push
movsb
mov
dec
xor
cmp
cld
mov
decl
cmpsl
xor
push
fmull
clc
fistpll
icebp
push
sahf
jp
cmp
nop
inc
fdivrl
xor
popf
inc
and
dec
lret
mov
sub
sbbl
sbbl
icebp
andl
jle
test
sbb
movsb
jno
inc
in
push
dec
or
fistpll
insb
and
pop
pop
cmp
fistl
loopne
or
add
push
cmpsb
jne
sub
lds
jge
pop
adc
adc
mov
xor
mov
push
lret
enter
sbb
pusha
test
cmpl
int
leave
adcl
mov
and
daa
test
movl
dec
ja
mov
or
adcl
and
sti
jb
enter
out
mov
mov
je
or
fnstenv
push
jne
rcrl
gs
andb
dec
mov
xor
mov
push
inc
out
and
rcl
sti
adc
inc
js
push
lahf
mov
cltd
aas
dec
xor
jl
push
and
sbb
loopne
sbb
inc
scas
add
arpl
loopne
fwait
mov
mov
add
jb
jo
bound
pushf
fisubrl
push
fstpl
pop
jmp
or
mov
arpl
leave
mov
and
and
add
inc
jns
sub
push
add
sub
insb
jbe
pop
inc
pushf
aas
push
shrl
sub
repz
or
mov
testl
lods
je
pusha
mov
cld
xor
dec
jle
adc
mov
push
and
sub
mov
adc
dec
loopne
fadd
and
push
push
push
lock
inc
les
sub
jmp
in
sub
mov
mov
and
or
cmp
lea
mov
mov
pop
sbbl
dec
cmp
mov
pop
test
inc
mov
add
subl
jmp
insl
in
rolb
cld
insl
mov
jns
pop
int3
push
or
cld
mov
cmp
test
dec
push
mov
jle
jmp
adc
inc
add
imul
push
lods
push
fsubr
and
test
movsl
inc
mov
sbb
outsb
dec
fldl
push
jmp
sbb
push
testl
sub
icebp
jb
push
or
shll
jb
xor
call
pop
testl
mov
mov
aaa
sub
and
sub
loopne
in
push
or
test
test
clc
pop
mov
pop
pop
mov
xor
inc
jg
xchg
adcl
mov
sub
bound
xor
adc
xor
cld
aas
hlt
sub
adc
ret
adc
test
adc
add
jg
popa
push
clc
cmp
jb
cmp
jb
mov
push
ficoms
mov
xor
jb
mov
mov
lock
jae
inc
add
outsb
pop
inc
add
jbe
test
call
fiaddl
loopne
xchg
popa
dec
pop
add
ret
dec
or
xchg
xor
jge
mov
idivl
sti
mov
adc
xchg
inc
mull
cmp
sub
int3
loopne
cmp
push
imulb
xlat
push
mov
loope
and
lret
stos
mov
cmpsb
test
add
cmp
jge
clc
or
lea
jl
sub
dec
add
push
cmpsb
jns
jmp
push
inc
out
mov
adc
inc
mov
mov
lret
clc
or
adc
repnz
cmp
sbb
mov
sbbb
cli
inc
cmp
jle
push
adc
push
rcrb
adc
sub
or
shrl
es
rclb
cmp
mov
scas
cmpsl
lret
add
inc
mov
push
les
je
testb
cmp
in
push
and
outsb
daa
pop
ret
mov
cmpb
std
jmp
out
inc
mov
jnp
mov
sbb
leave
mov
push
inc
std
jg
mov
jle
int3
std
sbb
cmp
je
dec
sub
cmp
clc
inc
int3
sub
jg
call
imull
dec
movsb
cli
cmp
pop
add
ss
sub
sub
sub
jne
scas
sub
scas
mov
push
adc
pop
lock
les
jo,pt
mov
decl
xor
or
sbb
or
mov
or
push
inc
push
ret
push
dec
xchg
das
mov
adc
mov
cmp
or
ljmp
or
mov
jbe
adc
cmp
push
jnp
cmp
ret
js
cmp
rolb
mov
xor
ret
test
pop
cmp
cmp
fucomi
cmp
and
inc
cmp
add
add
sub
add
push
divb
js
nop
sbb
shl
je
pop
movsl
into
ret
xchg
push
out
push
imul
xor
call
jmp
dec
mov
mov
adc
fidivl
adc
push
outsl
nop
jl
outsl
push
push
dec
adc
push
and
mov
dec
push
pop
outsl
inc
or
cmpsl
sbb
jl
pusha
jle
or
cmp
outsl
ja
jo
mov
aad
mov
sbb
arpl
push
or
mov
ret
cmp
dec
stos
shlb
sub
and
or
dec
mov
or
jne
test
push
xor
add
jg,pt
fcomps
call
icebp
push
push
xchg
aam
push
test
adc
shl
push
in
add
sub
lock
in
lock
rep
insb
push
cmp
jne
or
adc
sbb
xor
sti
aad
mov
push
push
ret
jo
push
pop
jmp
insl
and
sbb
movsl
mov
test
faddp
hlt
shll
stos
adc
and
inc
push
icebp
push
les
cs
out
pop
xlat
or
pop
loope
jecxz
pop
pop
xchg
pop
xchg
ret
idivb
sub
scas
push
push
clc
les
outsl
xor
mov
in
cmp
sbb
mov
add
mov
scas
cmp
call
add
dec
cli
add
dec
sti
ret
movsl
lahf
mov
and
rorl
cmpsb
mov
sub
lods
lods
mov
loopne
fcoml
lods
lods
mov
mov
clc
or
mov
les
idivl
lock
lea
shll
enter
dec
cld
jl
mov
pop
add
rol
push
ljmp
add
test
fcoms
nop
xchg
push
je
xchg
dec
mov
test
add
pop
mov
push
cmpsl
xor
sbb
xchg
dec
pop
dec
into
popa
aas
dec
sbb
jge
pop
jmp
jge
sbb
jns
mov
call
xor
imul
in
push
adc
push
pop
out
inc
ss
inc
dec
inc
pop
aas
mov
outsb
jle
and
lods
xchg
and
imul
ss
mov
ret
cmpb
pop
add
inc
jnp
idivl
inc
adc
push
cwtl
sub
or
jno
push
push
js
outsb
aam
mov
xchg
loop
pop
xchg
out
jns
out
push
loopne
ror
rclb
out
pop
iret
imul
push
sub
mov
out
in
push
sub
sub
mov
mov
fadds
add
jns
jb
pop
mov
out
mov
mov
or
push
fs
jns
out
je
test
aaa
pop
inc
mov
adc
enter
daa
ret
add
lcall
or
ja
adc
adc
scas
outsl
hlt
stos
adc
sbb
fimull
cmp
inc
mov
jne
jo
sub
jmp
mov
sarb
xorl
mov
ja
xor
push
loope
loopne
sbb
cmp
adc
clc
cmp
ja
cmp
jo
inc
aam
popa
push
push
or
and
jne
ds
rolb
mov
sbb
add
pusha
mov
lret
das
aad
inc
sub
sub
rorb
cmp
ljmp
and
add
je
jl
test
pop
jmp
push
dec
daa
or
or
xor
pop
out
sbb
je
mov
shl
sub
test
add
outsb
pop
or
jle
rolb
std
push
std
inc
jb
add
add
jb
test
in
adc
cwtl
mov
xor
in
out
sbb
inc
dec
sub
ret
adc
push
cld
sbb
adc
cmpsl
in
or
mov
add
fcoml
push
cmp
sub
sti
mov
ret
inc
add
fs
pop
mov
cmp
ds
jae
mov
push
mov
cmp
jb
cld
orb
lea
sub
or
ja
sar
push
lea
sub
jbe
jno
rcrl
mov
add
xor
inc
out
xchg
pop
pusha
dec
pop
xchg
or
pop
add
and
mov
sbbl
add
ret
andl
xor
rcr
call
or
pop
pop
adc
sub
loope
add
repnz
pop
repnz
jno
sub
sub
push
pop
add
xchg
fldl
lahf
or
je
xchg
cmp
stos
test
scas
ds
adc
mov
shrb
sub
push
mov
mov
lods
xor
xchg
popf
imul
pop
adc
clc
add
and
les
mov
test
pushf
testb
add
xor
and
cmc
insl
aaa
shl
push
call
dec
sbb
mov
xchg
jge
sub
xchg
jne
lahf
pop
pop
mov
mov
or
pop
stos
jl
mov
clc
js
or
or
adc
std
into
adc
adc
jno
pop
cmp
jne
mov
add
pop
fcmovnu
pop
in
sub
pop
cmp
ja
insl
mov
or
ja
adc
addb
add
cmp
jae
insb
or
sahf
fwait
loopne
jb
push
clc
jbe
add
pop
or
int
scas
dec
dec
test
jne
sbb
pop
test
pop
add
cs
jl
mov
adc
sbbl
test
jne
test
cmp
inc
push
push
ja
addb
call
es
cmpsb
add
fisubs
push
and
mov
test
mov
arpl
and
pop
mov
xor
push
cmp
push
sub
pop
dec
ret
adc
mov
cmpb
jmp
pop
insb
popa
pop
and
sub
mov
add
pop
or
daa
mov
add
mov
adc
or
fcomps
add
incl
arpl
push
mov
aas
sub
mov
add
or
loope
or
lea
stos
add
cmp
adc
sub
mov
mov
adc
jne
lea
daa
or
fwait
popa
xor
mov
add
push
adc
fsubl
leave
mov
jmp
add
jle
scas
inc
div
mov
and
xor
mov
popf
out
and
add
pop
add
enter
lea
test
add
pop
orl
or
cld
js
jo
ficoml
push
movsl
xor
data16
push
cs
push
push
loope
cmp
xchg
inc
inc
push
add
cld
cmp
dec
and
mov
test
mov
dec
push
sbb
lods
jmp
and
je
or
cmpsl
push
and
outsb
lock
or
test
add
mov
test
xor
fucomp
leave
sub
mov
cmp
movsb
aas
lods
test
sti
rorb
push
roll
sarb
and
and
push
shlb
inc
jmp
push
inc
cmp
jb
push
pop
sbb
outsl
push
mov
sbb
cmpl
ja
add
popa
rorb
popa
sub
or
popf
ss
sbb
pop
cs
cltd
push
mov
mov
insb
push
adc
mov
push
adc
and
fstl
push
cmp
lock
mov
sar
jne
movl
cmp
nop
jmp
inc
std
jne
xor
xchg
sbb
fldt
out
xor
jno
cmp
les
fwait
cs
in
loope
dec
sub
sub
clc
sub
imul
mov
cmp
or
push
mov
and
mov
mov
mov
std
dec
call
lock
out
shr
push
sub
std
fs
push
jmp
fs
cmp
cltd
pop
xchg
push
out
push
and
cwtl
les
xor
push
jge
push
inc
rolb
jnp
jae
cmp
jbe
iret
je
std
das
push
jne
mov
test
jae
imul
dec
inc
pop
leave
inc
push
xchg
rorb
lock
loop
aaa
jmp
push
into
sub
aas
movsl
pop
ds
jmp
inc
sbb
or
add
jg
add
clc
jbe
ljmp
les
add
pop
jg
inc
loopne
xorb
xor
inc
rcrb
push
mov
fsubrp
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
and
je
xorl
sbb
add
shll
pop
das
loope
jle
xor
ret
push
mov
inc
dec
jne
fisubl
ret
movsb
mov
cltd
add
mov
inc
sbb
xor
inc
jmp
jmp
push
call
lds
mov
faddp
cmp
loop
inc
movsl
or
and
dec
add
or
sub
sahf
mov
sti
rep
andl
pop
jno
cmp
loopne
cmp
or
adc
jecxz
cltd
inc
push
mov
int3
cmp
sub
ljmp
xor
std
and
inc
mov
push
or
pusha
push
clc
add
loopne
jecxz
or
xor
inc
jmp
xor
dec
sbb
movsb
sti
sbb
mov
pop
xor
add
lret
bound
ret
fcomps
arpl
pop
sbb
jno
push
pop
ja
es
mov
lock
jmp
push
and
loopne
sub
push
jecxz
and
shll
outsb
ds
adc
and
int3
pop
movl
mov
mov
outsl
cmp
cmp
mov
pop
cmp
jne
sbb
pop
adc
mov
ds
adc
inc
mov
movsb
jb
into
sbb
data16
mov
inc
inc
sbb
sub
jne
and
lret
sub
and
rcrb
cwtl
rolb
mov
bound
push
cwtl
mov
jne
addr16
pushl
out
repz
cwtl
sarb
es
push
cmpl
sbb
adc
pop
cmp
add
sub
push
decl
jne
sbb
out
xor
popa
rclb
movsb
mov
mov
inc
rorb
enter
add
cmpl
insb
xor
push
pop
ret
jo
aam
movsl
sub
or
inc
add
or
incl
xor
cmp
je
push
mov
push
ret
sub
sbb
adc
lock
pop
in
pop
cmp
lea
jbe
outsb
inc
and
ret
cmp
jle
sbb
jo
loope
clc
and
or
inc
insb
mov
rorb
sub
jmp
sub
data16
adc
jge
adc
into
and
xchg
inc
mov
imul
xor
leave
nop
sbb
mov
cmp
int
mov
add
cmpsb
imul
lock
cltd
aaa
mov
inc
inc
jecxz
and
lds
fdivl
or
cmp
imul
push
sbb
dec
loope
cmp
mov
push
dec
imul
repz
cmp
je
mov
xor
xchg
and
xchg
loop
xor
aas
push
jl
lret
mov
pop
mov
imul
dec
xor
push
aas
add
xor
out
das
cmp
repz
js
lret
pop
jnp
or
std
loop
sarb
cmp
fxch
fnstcw
add
sub
sbb
adc
cmp
fsubr
push
and
testl
push
push
mov
data16
mov
xlat
data16
sti
cmp
jne
mov
mov
jmp
adc
outsl
jo
pop
aaa
test
enter
pop
les
imul
mov
int
xor
mov
or
fsubrl
fdivr
xorl
jne
orl
nop
flds
xor
cmpb
jle
sub
lds
pop
pop
imul
mov
and
or
jl
cmp
jg
test
hlt
adc
out
xor
les
icebp
adc
xor
jne
imul
in
pop
inc
jo
jge
aas
sbb
dec
enter
enter
mov
popa
ss
sub
pushl
pop
adc
dec
sub
jne
enter
xor
fsubrl
add
adc
mov
incb
jecxz
std
and
or
inc
adc
cmpsb
hlt
or
push
cltd
pop
idiv
push
negb
insb
pop
cmp
mov
loopne
push
mov
arpl
sbb
fistps
mov
xlat
xchg
xor
ret
cltd
imull
sub
mov
lea
cltd
es
mov
jp
imul
lea
in
fs
dec
js
ja
cli
pop
sub
add
sbb
lea
jmp
add
lods
dec
adc
add
or
pop
sbb
jo
xor
or
cmp
jle
sub
jmp
icebp
xchg
out
shll
sbb
mov
pop
adc
jne
imul
dec
and
and
leave
call
pusha
adc
add
xor
push
jmp
mov
loopne,pn
filds
or
out
jbe
mov
add
jg
ltr
decl
sbb
sub
push
lock
incl
fnstenv
in
push
lock
hlt
aam
jae
inc
jg
add
cli
pop
add
mov
add
in
push
in
xor
inc
add
adc
push
lock
jbe
xor
add
imull
adc
adc
adc
cmp
jne
and
xor
cmp
xchg
pop
push
push
push
push
or
stc
ss
xor
ret
or
enter
mov
push
shll
lahf
pop
mov
mov
push
sbb
ss
jnp
pushf
jmp
cmp
sahf
pop
push
jg
je
mov
or
jge
push
pop
mov
xor
add
aas
push
pop
push
push
jnp
sbb
loop
push
das
popa
xchg
mov
xlat
mov
data16
mov
cmp
jl
cmp
jg
push
jle
jge
int
xor
mov
push
popf
pusha
mov
push
jle
imul
push
pop
inc
add
pop
jmp
inc
xor
add
adc
sbb
pushf
or
mov
orb
sbb
sub
icebp
sbb
adc
sbb
sbb
xor
sub
pop
push
js
pop
xchg
mov
mov
fsubl
pop
es
push
sub
xor
and
add
orl
test
jmp
inc
je
or
pushf
test
inc
pop
shlb
push
jl
inc
push
dec
or
bnd
xor
outsl
aas
pop
or
xor
es
xchg
ja
push
push
push
xor
add
push
lock
add
lea
stos
jge
jns
sub
test
push
adc
rolb
sbb
fwait
test
add
lea
push
lea
lods
sub
cmp
sbb
push
mov
adcb
and
xchg
inc
adc
subl
add
push
sbb
jb
mov
loop
adc
mov
inc
mov
repz
idiv
and
mov
sub
outsl
jmp
ss
pop
leave
mov
or
sub
dec
push
jb
add
rolb
stc
ret
cltd
sub
and
scas
int3
outsl
imul
mov
pop
pop
sub
adc
inc
add
or
ss
sbb
jl
dec
adc
add
test
mov
push
xor
flds
or
pop
cltd
cld
in
test
push
push
sbb
push
mov
call
push
scas
push
inc
fldcw
sbb
mov
pop
cmp
add
cmpsl
mov
test
sbb
cmp
or
pop
or
jno
dec
jae
or
mov
or
jge
push
push
push
and
mov
add
or
jge
inc
repnz
fnstcw
fiaddl
sbb
sbb
cmp
sbb
jne
sub
pop
and
sbb
icebp
ja
pop
xor
push
shr
inc
push
xor
cld
out
dec
push
daa
shr
rcr
shr
rcr
or
lods
ds
in
sbb
lock
xor
cmp
es
std
ja
jb
cmp
add
out
dec
pop
push
loopne
fiaddl
sbb
loopne
ret
ret
push
bound
out
and
mov
cmp
adc
sbb
jl
in
loopne
pop
push
or
ret
jns
jmp
inc
xor
or
cmp
mov
or
adc
out
or
sub
adc
push
or
shll
adc
sbbl
sub
mov
ret
cmpl
mov
mov
push
mov
rcll
xchg
or
pop
bnd
or
rcr
ror
repz
enter
adc
fidivl
pop
dec
mov
iret
sub
xchg
shlb
and
sub
mov
add
lahf
inc
dec
push
das
xchg
mov
sub
inc
jmp
fmul
cmc
pusha
xchg
lock
jmp
movsl
inc
aas
aam
neg
pop
mov
sub
idiv
rorb
mov
adc
leave
fs
push
popf
cmp
push
jne
pop
pushl
imul
cmpsb
inc
js
push
lock
push
jl
addb
mov
jb
cmc
pop
mov
clc
into
push
test
inc
sbb
call
in
mov
adc
in
sub
sbb
pop
clc
sub
add
stc
push
pop
add
or
cmp
loopne
aam
inc
push
clc
movsl
int
sub
and
mov
bound
inc
pop
or
scas
or
jb
add
sbb
fmull
sbb
xor
pop
cmp
inc
cmp
dec
dec
imul
sbb
adc
adc
test
push
cli
add
in
sub
fsubrl
in
sub
std
incb
jb
mov
je
sbb
ss
push
jp
mov
call
test
xor
inc
loopne
cltd
je
cmpsb
cmpsb
fcompl
ret
mov
aas
stc
lock
push
rcrb
and
and
push
adc
inc
sub
ss
mov
movsl
in
inc
arpl
test
xchg
or
push
test
add
cwtl
sub
pop
fcoms
add
subl
jbe
xchg
and
outsb
dec
pop
pop
int3
cmp
jl
gs
insb
sbb
inc
push
cmc
push
enter
mov
mov
neg
movsl
adc
jb
sbb
out
pop
jb
or
xorl
pop
inc
mov
jo
add
jae
mov
test
lock
sti
cld
scas
cmp
adc
push
mov
pusha
push
cmp
or
mov
shll
add
insb
or
push
cli
cs
arpl
testb
jbe
sbb
sti
lods
fs
push
mov
sub
push
pop
adc
mov
bound
or
xchg
insb
lock
push
push
imul
mov
mov
stos
dec
inc
push
mov
inc
and
mov
incl
in
mov
and
sti
in
pop
and
pop
add
lea
push
test
push
adc
add
rcrb
push
lahf
pop
addl
jne
push
or
test
das
arpl
daa
orl
jecxz
jp
push
cmp
mov
imul
xchg
call
out
imul
ret
jae
sub
mov
push
add
sahf
popf
xor
pop
mov
or
mov
test
sub
insb
and
cli
mov
pusha
dec
fmuls
adcb
adc
pusha
test
or
jg
cmp
cmp
jge
imul
mov
andl
clc
ret
cmp
mov
aad
nop
lods
or
pop
add
sbbl
fdivrs
cmp
inc
scas
ds
lea
mov
popl
push
js
pop
mov
fs
pusha
mov
mov
jmp
leave
push
sbb
push
pusha
lock
test
adcb
inc
sub
xor
test
js
ja
fildl
cmp
mov
and
and
xor
xchg
rolb
push
aam
mov
jo
add
jmp
push
push
push
xorl
mov
enter
add
mov
or
popf
sub
loopne
sbb
data16
loop
les
adc
jmp
add
push
inc
push
jmp
ja
and
cmp
adcl
adc
call
je
cwtl
cmp
into
push
pop
push
pop
sbb
cld
adc
cmpsb
iret
add
add
mov
mov
adc
dec
add
daa
mov
fld
jo
pop
dec
ret
dec
decl
popf
add
adc
push
push
out
pusha
mov
out
add
add
xor
add
jo
aad
popa
push
aam
mov
sub
and
incl
cld
or
fdivl
mov
sahf
ret
push
inc
mov
adc
push
mov
mov
rcr
outsb
mov
sti
and
or
xchg
add
inc
cmpsl
push
xchg
jnp
imul
sub
cmp
ss
jmp
xor
pop
add
shlb
add
clc
lods
dec
inc
mov
je
pop
sub
add
sarb
sbb
and
mov
xchg
jmp
pop
sti
stc
add
sbb
icebp
xchg
xchg
roll
je
and
or
cmp
and
add
mov
push
mov
mov
add
xor
sbb
test
pop
add
cpuid
jmp
adc
jbe
pop
push
andl
xchg
pop
add
lods
push
mov
out
insb
push
mov
mov
jmp
mov
sbb
add
movsb
repnz
rcll
jge
fiadds
stos
cmp
loopne
shrl
inc
dec
shl
lea
cmp
jb
add
mov
loope
testl
push
orl
inc
and
pop
add
mov
xorb
add
pop
cmp
jne
mov
subl
and
and
inc
xlat
mov
js
add
xor
add
and
test
add
gs
cmp
je
inc
inc
or
add
jne
repnz
add
push
sar
inc
push
push
adc
js
lret
jb
sub
gs
loopne
xchg
cmp
ss
sbb
inc
shlb
inc
xor
pusha
cmp
pop
ret
jmp
sbb
test
addb
mov
inc
adc
in
out
popa
or
sti
or
sub
out
int
add
push
pop
inc
xchg
ficomps
xor
xor
adc
mov
dec
pushf
inc
cmp
mov
push
dec
pop
push
dec
clc
or
mov
call
mov
out
data16
or
or
push
and
imul
inc
mov
insl
mov
js
into
mov
addr16
shlb
push
sbb
int3
mov
sar
test
add
push
sbb
sbb
or
rcrb
and
mov
rorl
pusha
pop
subb
andb
add
cmp
frstor
loope
jb
mov
cmp
mov
adc
sub
call
fimull
je
mov
fmull
push
push
or
add
shl
repnz
add
jmp
pop
shl
add
pusha
dec
dec
add
and
push
cld
outsb
pop
xchg
std
ror
inc
or
inc
adcl
mov
xchg
je
xorl
adc
or
in
push
orb
jmp
xchg
addl
dec
dec
mov
push
roll
adc
aas
push
aaa
xor
ds
mov
add
jmp
adcl
lret
or
je
and
dec
movl
jl
icebp
adc
loope
pop
notb
sbb
test
mov
or
jae
mov
pop
loope
sub
and
lret
dec
mov
cmp
or
adc
shl
outsl
push
dec
mov
inc
mov
sahf
mov
hlt
add
push
enter
sub
pop
cld
add
cmpsb
jge
mov
jmp
jge
sub
and
pop
aas
sbb
and
and
sub
test
gs
or
cmp
pop
shrl
sub
testb
adcb
and
pop
push
push
pop
sbb
aaa
xchg
fwait
push
cld
dec
xchg
mov
xchg
pusha
add
mov
jp
iret
mov
jg
mov
hlt
xchg
mov
js
xchg
lret
add
push
add
or
sub
jo
leave
into
arpl
nop
cmp
adc
pop
lahf
dec
push
sbb
ror
dec
inc
and
sbb
adc
stos
mov
es
testl
fsubrs
or
dec
or
lock
mov
push
or
mov
lods
lret
test
mov
inc
shrl
aas
push
push
mov
mov
add
or
shlb
push
cmp
imul
sbb
cmp
cmp
pop
dec
lock
dec
xor
pop
add
mov
test
sti
loop
adcb
or
mov
not
push
insb
in
and
rcrl
sbb
nop
outsb
mov
std
pop
pop
pop
sbb
jl
mov
stc
or
add
mov
pushf
popl
xchg
pshufw
push
mov
pop
sbb
add
ss
jbe
cmp
mov
rolb
bound
arpl
ficompl
mov
imul
shrl
push
pushf
push
xchg
mov
push
xchg
add
or
fldt
sub
add
mov
xlat
sbb
add
out
ret
insl
jmp
inc
jb
lcall
mov
clc
dec
xlat
lods
fidivrl
cmc
pushf
popa
shlb
cmc
cwtl
adc
jbe
pushl
out
sbb
or
adcl
hlt
and
sarb
and
shrl
sub
xchg
negb
mov
push
mov
adc
jl
ja
push
call
scas
sbb
pop
push
cmp
int3
pop
dec
jge
pop
testl
mov
out
add
cmp
inc
pop
aam
movsl
push
popa
sub
int
mov
cmp
in
sbb
cwtl
mov
fs
cmp
mov
sbb
sbb
pop
xchg
inc
jmp
push
pop
mov
jne
sbb
sub
pop
push
imul
in
mov
jmp
addl
roll
in
mov
mov
or
mov
mov
add
das
adc
ss
add
arpl
add
and
aam
xchg
fidivs
push
mov
adc
sbb
cmp
lret
add
add
sbb
mov
int3
jo
xchg
ret
push
jp
and
imul
nop
sub
je
jns
inc
jb
adc
dec
aaa
mov
lcall
push
dec
jge
pop
cmp
aaa
inc
inc
mov
mov
adc
inc
cmpsb
add
lret
sbb
add
add
adc
mov
call
aaa
inc
cld
push
sti
fmuls
cmp
nop
lods
stc
cmp
adc
mov
push
test
inc
test
pop
cmp
pop
stos
adc
add
lret
movsl
aas
aad
cmp
shrl
cltd
add
cmpsl
mov
mov
sbb
outsl
clc
inc
add
or
push
dec
or
lret
cli
sbb
ljmp
or
fld
jb
inc
add
cmp
jb
aad
gs
lahf
xor
cs
int
hlt
add
xchg
inc
pop
xlat
sbb
cs
popa
stos
movsb
sarl
mov
shr
not
movsb
push
bound
ljmp
mov
adc
push
lahf
imul
shlb
adc
push
push
push
push
push
push
adc
push
cli
sbb
pop
sub
sbb
call
xchg
cli
mov
push
dec
push
pop
mov
or
dec
jmp
inc
movsl
aas
in
pop
gs
mov
popl
divl
ds
jmp
sbb
jo
int
add
jo
push
and
pop
stc
lcall
sbb
push
out
push
sbb
push
mov
adcb
jmp
mov
mov
add
jp
sahf
mov
out
mov
rcrb
xlat
cs
push
dec
insl
fiaddl
push
and
and
push
or
mov
loopne
insb
xor
jmp
lret
or
adc
mov
mov
ss
mov
lock
or
adc
mov
lcall
scas
and
sub
cld
shr
mov
imul
mov
inc
and
push
dec
or
shrl
cmp
adc
push
cld
push
icebp
pushl
or
ret
je
cli
add
sub
push
fildll
fnstsw
cmp
jne
xchg
pop
mov
je
shr
lea
ljmp
mov
mov
dec
cmp
pop
dec
loopne
pushf
mov
cmp
sub
rclb
dec
imul
ljmp
mov
cmpsb
decb
push
or
add
add
clc
and
into
in
cmpsb
setae
inc
and
sti
add
mov
incb
fidivs
mov
mov
imul
xor
and
cmp
je
inc
jno
mov
cmp
shr
testl
jne
sub
cmp
jle
jmp
lea
das
mov
xor
xor
pop
dec
pusha
dec
pop
pop
lret
dec
xor
and
iret
ret
les
fidivs
sti
push
pop
pop
lock
mov
push
pusha
fidivs
or
adc
jo
popa
pusha
mov
mov
inc
mov
mov
lock
push
push
or
or
mov
dec
or
jmp
dec
adc
iret
push
lods
dec
push
mov
movb
push
orl
int
lock
imul
dec
loopne
call
lods
ffreep
loope
add
pop
enterw
adc
aas
mov
imul
gs
push
or
cld
in
popa
frstor
dec
inc
adc
inc
push
mov
add
and
jbe
gs
out
and
in
pop
int
mov
mov
adc
push
ljmp
push
add
iret
ret
push
loopne
mov
insl
or
mov
sub
pushf
push
mov
daa
mov
shrb
rol
call
push
outsl
push
add
mov
or
out
push
sarl
add
xchg
cmp
negb
les
sbb
ret
imul
push
mov
mov
and
adc
repnz
sbb
pushf
jmp
orl
mov
orb
mov
and
xchg
push
mov
add
loope
je
movb
inc
dec
stc
ljmp
rorb
incb
pop
mov
add
inc
dec
jne
repz
push
inc
cmp
adc
add
sub
jns
cli
xchg
ret
push
call
jge
sbb
cmp
ja
sub
shr
pop
jecxz
add
clc
incl
nop
cld
ja
loope
or
adc
out
inc
inc
cld
lock
jno
fldl
iret
dec
jne
mov
cmp
dec
loopne
add
adc
jmp
sub
fs
inc
popf
mov
fistps
inc
inc
mov
lock
push
mov
jne
or
and
ljmp
adc
or
adc
pop
clc
or
jne
xlat
sub
pop
push
pusha
and
shr
jb
cld
cmp
dec
cmp
stos
mov
add
and
jbe
mov
test
outsb
mov
mov
fstps
cmp
stos
lret
cmpb
mov
add
andl
and
inc
stc
sbb
clc
and
nop
es
test
in
add
cmp
nop
push
inc
jae
dec
or
push
jns
push
into
add
mov
stos
movsl
adc
cmpsb
incl
cmp
xor
fstpl
adc
imul
jg
mov
jle
mov
in
lcall
movsb
shlb
iret
fisubs
jo
js
and
and
out
loopne
mov
sub
push
test
push
xor
adc
stos
insb
xor
popw
and
clc
jl
mov
inc
or
jnp
xchg
sub
pop
xor
push
dec
cmpl
dec
jp
movsb
cmp
ret
sbb
punpcklwd
xor
cmp
fdivrs
mov
fistps
sub
orl
cmp
ja
ja
sbb
ficoms
add
mov
jo
mov
loope
lea
mov
jo
xorb
mov
lods
push
cmp
in
jb
lods
decb
into
mov
dec
cmp
rdmsr
cmp
xchg
arpl
mov
sbb
jb
push
adcb
push
mov
lods
pop
and
lock
push
dec
push
push
push
jecxz
scas
push
inc
into
call
out
adc
jmp
push
mov
aam
push
imulb
lock
fldcw
push
nop
cmp
sub
insl
and
or
cmp
jb
push
jne
mov
dec
inc
cld
fnstenv
jmp
sub
mov
xor
aaa
arpl
push
out
adc
xor
ret
out
loope
pop
scas
push
sub
pop
lcall
lods
cmp
je
scas
inc
mov
mov
cli
loope
inc
adc
and
pop
iret
mov
xor
jo
jno
mov
or
push
add
dec
mov
out
repz
mov
and
jne
mov
push
pop
or
leave
inc
test
inc
push
pushf
mov
les
sub
icebp
sbb
and
push
test
sbb
sbb
cmp
ss
push
jg
loopne
dec
cmp
into
in
and
mov
decb
jne
dec
das
cmp
repnz
jmp
jp
xor
int3
dec
mov
ja
dec
bound
dec
push
and
push
clc
into
xor
dec
shll
xor
cmp
inc
mov
or
ror
dec
je
xor
sub
mov
mov
and
cmc
subb
cmp
or
mov
or
or
mov
in
mov
or
cmp
lret
sub
adc
into
ljmp
and
mov
hlt
mov
lea
sub
cmp
into
pop
add
and
or
fcmovnbe
inc
add
es
inc
sbb
push
lcall
cmp
adc
add
push
inc
push
ret
insb
jge
push
push
push
xor
sbb
in
daa
dec
loopne
mov
loopne
leave
add
or
pop
push
or
or
jo
dec
ret
adc
rclb
dec
and
imul
sti
test
pop
mov
cmp
fcomps
sbb
sub
sbb
push
shll
adcl
push
pop
adcb
dec
jnp
js
sub
pop
lock
cmp
loope
or
pop
leave
mov
insl
inc
pop
mov
sub
or
xor
das
sti
add
gs
and
ss
dec
mov
ret
outsl
sub
xchg
sbb
adc
sbb
cmc
shlb
mov
xchg
xchg
push
sub
lret
mov
inc
adc
pop
sbb
inc
lods
loopne
sub
and
mov
sbb
lcall
jmp
ljmp
jne
push
mov
add
cmc
cltd
adc
stos
or
adc
add
pop
dec
inc
bound
lcall
nop
es
mov
adc
sbb
loopne
dec
les
xlat
punpckhdq
inc
cmp
inc
cmp
push
push
inc
cmp
adc
or
cmp
or
outsb
stos
mov
adc
fistl
or
mov
rorl
fxch
pop
jns
or
sub
fst
jo
inc
dec
jmp
adc
adc
pusha
pop
mov
mov
cmp
push
xor
call
aaa
or
mov
sbb
pusha
shll
inc
pop
mov
adc
dec
cmp
pop
inc
cmp
jne
or
test
out
dec
fsubr
into
mov
jge
inc
out
pop
je
xlat
jne
lods
mov
fadds
int3
add
je
xchg
push
rolb
out
jecxz
xor
pop
or
push
sbb
pop
add
or
and
cmpsl
cmp
inc
push
push
pop
div
loopne
test
mov
aas
or
fsubs
cld
clc
jbe
mov
cmpsb
sbb
test
cmp
push
cmp
add
jmp
add
hlt
hlt
mov
dec
mov
xor
xlat
shlb
cmp
pop
cltd
and
outsl
inc
loopne
mov
inc
adc
insl
div
inc
or
je
xchg
sbb
add
add
cmpsl
xchg
dec
arpl
jle
in
test
or
in
add
push
push
sbb
sbb
loope
adc
and
push
or
jne
or
push
sub
shll
ja
fistpl
sbb
adc
mov
cmp
or
inc
push
or
xor
loope
in
fdivr
outsb
cmp
hlt
sbbb
fstpt
lds
inc
adc
outsl
push
aad
addl
mov
sub
push
gs
in
daa
mov
mov
ja
mov
sub
cmp
je
movl
or
call
fcoms
outsl
mov
push
mov
hlt
jecxz
jmp
decl
jnp
lahf
ds
inc
and
fcompl
jl
sub
push
ficomps
mulb
jl
mov
xor
xchg
push
rol
ret
pop
xchg
adc
es
clc
xor
inc
or
cmp
daa
lea
psrld
cmp
inc
pop
adc
add
ljmp
addr16
cmpsl
push
cmc
push
push
shll
mov
stc
int3
cmp
aam
push
jb
stos
push
xlat
push
int3
jl
dec
mull
sub
stos
jg
add
add
add
leave
in
sbb
sbb
push
xor
movsl
adc
stos
add
cmp
ja
pop
dec
test
aas
push
into
or
push
in
push
sub
lods
jnp
lcall
fstl
lret
jmp
sbb
pop
sbb
jle
sub
sbb
and
xor
test
les
add
push
dec
js
cmp
push
and
sub
cmc
cmp
push
in
add
sbb
and
aaa
mov
out
sbb
shll
push
test
mov
push
or
outsb
mov
xchg
adc
ss
dec
dec
dec
sub
xor
dec
dec
dec
sbb
cmp
jbe
mov
cmovs
in
in
push
push
pop
cmp
cmp
push
insb
jo
js
imul
adc
mov
xchg
cwtl
xchg
dec
xor
pushf
mov
jno
mov
add
xor
shlb
add
test
insl
mov
je
mov
push
and
data16
mov
nop
adc
orb
sbb
cltd
nop
pushf
and
imul
xchg
push
out
ret
adc
add
pusha
addr16
ret
mov
xor
sarb
sbb
dec
jne
add
das
cs
mov
mov
jle
arpl
in
mov
ljmp
xorl
or
ret
add
jmp
mov
pop
dec
popf
inc
jp,pn
push
xor
fwait
mov
dec
leave
inc
sbb
insl
aaa
inc
pop
xor
push
fcoml
push
mov
jmp
xlat
mov
rorl
ss
mov
aam
mov
ds
test
jmp
sbb
xlat
mov
jns
rcr
cld
lea
push
push
mov
pop
jo
fsubs
cmp
cwtl
or
cli
mov
icebp
or
lea
repz
pop
adc
popa
cmp
mov
add
sbb
lods
or
fdivp
jnp
popf
test
mov
je
popa
dec
mov
in
and
inc
movsl
push
jbe
adc
aaa
push
cmpb
jne
xchg
dec
push
sub
lock
rcll
lea
jmp
js
cltd
scas
lea
fwait
cli
enter
pop
fdivr
sub
out
fadds
imul
frstor
fmuls
mov
or
add
loop
aaa
jo
testb
rclb
lock
out
dec
or
add
xorb
xor
cmp
ret
mov
sub
arpl
jno
repz
jg
je
mov
add
shll
fs
lret
mov
adcb
es
popw
jmp
pushl
mov
mov
dec
mov
pop
xchg
sub
je
or
je
dec
je
dec
adc
aaa
mov
cmp
pop
push
mov
push
pushf
jb
mov
imul
push
xchg
xor
addb
insb
add
and
in
roll
rol
sbb
scas
inc
add
adc
mov
aam
fidivs
jne
sbb
inc
orb
mov
into
jne
fcoml
inc
cs
jge
or
adc
or
adc
jmp
dec
bound
test
insl
lock
sbb
push
ret
dec
adcl
pop
add
addb
mov
inc
aaa
xor
sub
adc
cmp
push
ficomps
js
sbb
cmp
mov
sbb
jmp
lcall
pop
or
sahf
pop
pop
lds
test
sbb
insl
cmp
add
and
adc
jl
dec
add
dec
jns
sub
push
adc
push
jmp
pusha
das
mov
lea
sub
mov
pop
mov
fisubs
inc
push
jnp
fstl
cmp
adc
push
and
push
daa
mov
aam
lret
into
mov
or
in
mov
push
fiaddl
push
sub
testb
sub
dec
cmpsb
and
sbb
jmp
mov
fldenv
ds
adc
test
adc
lea
cld
aas
bnd
movsl
adc
das
adc
inc
xchg
inc
sub
pop
dec
into
push
mov
sarb
jle
or
adc
out
adc
mov
adc
push
add
push
loop
das
sarl
cmc
out
lods
adc
pop
sbb
sbb
aas
inc
mov
jle
and
xor
push
sbb
sub
add
and
xchg
std
fldenv
xor
jbe
push
pop
sub
mov
les
in
nop
ss
mov
out
jno
adc
icebp
mov
sbb
into
or
int
insb
cld
ja
orl
dec
out
cmp
mov
jnp
mov
jno
mov
xor
xchg
or
and
push
cli
mov
xor
mov
dec
cmp
out
xor
es
cli
adc
mov
addr16
cwtl
and
jl
or
int3
icebp
dec
push
xor
aad
sti
mov
jae
mov
adc
or
and
push
jmp
mov
mov
popl
rclb
cli
rcrb
in
add
and
push
scas
xor
sti
inc
daa
mov
dec
jo
int3
sar
mov
ret
lahf
add
push
pop
xor
xchg
dec
es
hlt
pop
int3
add
and
outsb
insl
adcb
cltd
adc
add
jne
loope
insb
sbb
nop
add
mov
cmp
push
jb
add
mov
xadd
pop
sarb
push
jae
sub
cmp
jmp
ja
dec
je
push
adc
shr
adc
repnz
cmp
sbb
dec
mov
add
in
faddl
scas
lds
sub
adc
sub
lret
jbe
mov
ds
or
push
and
sub
mov
mov
mov
sar
je
cmp
jae
sub
add
fcomip
inc
clc
xchg
xor
dec
cmp
test
push
nop
sub
push
mov
inc
cli
and
push
add
sbb
xchg
sub
or
dec
fwait
xor
mov
rol
fidivs
dec
adc
in
and
push
sbb
imul
jo
add
cs
push
pop
mov
inc
or
pop
add
add
pop
add
inc
out
pop
xchg
dec
dec
inc
pop
and
inc
call
and
test
hlt
mov
inc
dec
jle
cmp
sub
inc
ss
je
or
je
sahf
or
fs
or
ret
nop
fwait
cmc
add
cli
daa
xchg
in
sbb
fmuls
or
into
in
push
push
popf
jbe
xlat
rcrl
int3
sbb
ja
out
adc
add
cmpsb
jmp
ficompl
cmp
inc
add
je
push
das
pusha
add
push
aad
rcrb
inc
push
dec
and
enter
or
push
ja
inc
fadds
push
jmp
lea
test
and
or
enter
jmp
outsb
rcrl
or
out
push
add
cwtl
xchg
pop
xchg
add
cmp
jno
pop
sbb
outsb
movsl
test
out
pop
adc
pop
sub
pop
mov
cs
mov
cwtl
jg
ja
int3
je
add
lret
mov
push
add
push
xor
adc
sbb
je
imul
dec
mov
lock
lods
and
push
lods
lret
pop
cmpl
or
js
int
lock
lods
jg
adc
in
and
xchg
jb
pushf
jo
jno
mov
shrb
or
addr16
cmp
daa
add
jp
cmp
jg
fmull
push
mov
cmpsb
jle
cmpl
jl
jle
sbb
fldl
ljmp
jle
pop
insl
inc
out
xchg
aas
xor
loopne
sub
incl
sbb
cmp
pop
fstpl
add
pop
fisttps
dec
ret
test
and
push
cmp
sub
adc
xor
pop
cmp
je
cmp
mov
adc
or
adc
int
inc
dec
add
add
lds
push
cltd
pop
xor
mov
dec
test
sahf
movsbl
sub
jmp
test
jnp
mov
sub
cmp
cs
repnz
add
cmp
jae
enter
insl
jb
movsb
cmp
jbe
pop
and
and
aaa
or
adc
fldcw
add
add
adc
pushl
mov
sbb
xchg
push
sbb
xor
add
dec
imul
xlat
jne
cwtl
into
insl
jnp
mov
or
fdivrs
adc
push
cmp
jns
aas
les
dec
xchg
hlt
mov
sbb
aam
and
into
sub
pop
movb
add
mov
ljmp
and
shrb
or
jp
iret
lods
movsb
adc
es
xchg
jo
sub
es
sbb
popf
push
push
fimull
push
push
cwtl
mov
add
xor
mov
dec
cmp
mov
movsb
jb
dec
orl
jge
je
adc
push
in
push
pop
leave
jne
shll
jo
cld
fdiv
inc
jmp
push
xlat
add
push
iret
or
add
sbb
pop
add
imul
xchg
push
gs
or
mov
in
and
add
dec
fldl
loopne
call
or
mov
dec
fmull
or
gs
jg
mov
push
adc
mov
movb
je
aaa
int
lcall
add
inc
inc
jo
xor
add
push
push
pop
or
rcrb
or
push
pop
pushf
outsl
pop
pop
mov
insb
add
stc
cli
or
add
lock
cli
ror
fists
or
je
xchg
scas
das
cmc
stos
ds
mov
mov
into
es
push
push
subl
xchg
les
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
cltd
xchg
rolb
adc
or
mov
neg
mov
into
leave
jl
inc
sbb
out
adc
or
hlt
or
push
ret
xorb
imul
popa
dec
stc
cmc
push
and
in
int
aad
push
add
test
inc
gs
sbb
or
repnz
std
push
push
pop
dec
cmpb
pop
sub
cmp
dec
and
outsb
inc
adcl
ljmp
pop
out
pop
mov
xor
cmp
jle
cmpl
fsubl
xorl
nop
jge
ss
adc
push
jle
dec
scas
dec
filds
sbb
xlat
jle
add
scas
sbb
and
adc
adc
data16
xchg
push
jl
mov
out
stc
stc
add
push
icebp
or
enter
mov
dec
push
hlt
dec
sbb
jb
pop
test
jne
rol
ficomps
dec
insl
add
js
sbb
jmp
cmc
sbb
xor
mov
outsl
inc
add
ds
je
mov
ret
call
test
je
mov
cmp
jb
cmp
jbe
inc
inc
mov
jmp
pop
out
or
mov
xchg
popa
imul
nop
mov
sbb
jbe
or
loope
into
adc
inc
sbbl
push
push
or
dec
aam
and
in
call
inc
mov
inc
rorb
pushf
sysret
repz
dec
push
daa
push
mov
pop
test
add
loopne
imul
test
push
pshufw
mov
ljmp
je
in
cmpl
imul
aad
das
and
in
je
test
push
xor
frstor
push
push
mov
aam
or
pushf
loopne
fadd
xchg
xchg
push
loopne
pop
mov
insl
jle
fnstsw
test
xchg
inc
sbb
mulb
lret
test
mov
adc
movsb
hlt
sbb
repnz
dec
jnp
fisttpl
inc
sbb
jne
stos
dec
clc
jmp
adc
mov
les
mov
cmp
add
inc
add
xchg
mov
and
loopne
shlb
jle
stos
mov
adc
push
test
fsubl
dec
test
hlt
sub
inc
adc
push
push
push
jbe
aas
jo
mov
sub
sti
aam
push
ret
test
imul
sbb
xlat
aaa
dec
jmp
add
mov
adc
push
fsts
arpl
insb
pop
pushf
pop
mov
push
dec
xor
mov
push
sahf
and
or
shlb
cld
add
dec
imul
push
jmp
xor
sub
or
sub
adc
inc
mov
rcrb
xchg
push
add
mov
fisubl
sbb
mov
in
push
inc
pop
pusha
inc
imul
clc
mov
test
add
xor
and
pusha
jns
cmp
dec
sbb
dec
shll
incb
and
test
sbb
and
sbb
xor
adc
call
mov
cs
cmpb
ss
pop
jl
jno
cmp
dec
lea
ss
xor
daa
inc
int3
ffree
popf
sbb
test
test
mov
fwait
mov
dec
mov
mov
lret
fsubs
out
stos
loopne
xchg
hlt
loopne
jmp
dec
loop
jge
frstor
xchg
lea
sbb
loope
push
sub
js
pop
movsl
mov
and
pop
add
les
cwtl
mov
pop
leave
inc
js
adc
pop
inc
rcll
pop
int3
clc
fcompl
adc
inc
cli
out
and
sub
add
mov
inc
jb
mov
and
and
lcall
xor
sti
push
ret
push
and
push
add
cmpsb
in
sub
sub
subl
xchg
mov
pusha
mov
ja
outsl
and
push
popa
sbbl
frstor
lret
xor
inc
in
mov
mov
js
hlt
cmp
cmp
jg
sbb
lcall
shl
inc
xor
mov
cmp
je
paddw
loope
or
or
or
sbb
and
cmp
or
data16
push
aas
push
fs
push
pop
sbbl
mov
ret
sub
jmp
adc
lea
pop
ret
in
or
ret
mov
cs
scas
push
iret
xchg
es
iret
jge
stos
lods
push
sub
jecxz
push
sbb
adc
dec
lock
push
xor
lret
mov
or
ds
iret
xor
jo
and
push
sbb
or
hlt
inc
pop
dec
out
jne
lods
dec
add
sub
inc
cld
ret
jg
ss
cmp
je
mov
mov
and
mov
aam
xchg
pop
addr16
outsb
or
xchg
scas
enter
or
dec
push
mov
jb
fsubr
add
xlat
add
sbbb
fcoms
fsubs
into
mov
out
mov
xor
movl
mov
fstl
mov
out
lret
int3
push
push
mov
ret
imul
pop
sub
xor
ds
lea
sti
xchg
adc
sbb
ja
or
movsb
sub
movsb
movsb
dec
cmp
or
push
add
loopne
push
mov
jle
fdivl
mov
add
adc
mov
lods
inc
sub
xorl
sbb
or
ja
movb
repnz
mov
enter
mov
push
movsb
dec
add
dec
push
shl
add
repz
jmp
mov
cld
pop
push
push
lahf
mov
mov
mov
mov
jg
adc
lods
mov
push
adc
test
fs
dec
in
sbb
mov
jae
fadds
inc
lods
hlt
int
lahf
cmpl
movl
pop
aas
adc
mov
add
or
add
jg
outsb
mov
push
push
sbb
push
bound
and
ljmp
arpl
imul
outsl
inc
popa
dec
js
imul
pop
inc
dec
inc
inc
push
push
jns
ljmp
pop
imul
addr16
dec
jae
push
jno
jbe
gs
jo
pop
push
inc
popa
gs
stc
call
imul
gs
dec
js
inc
je
dec
inc
push
dec
popa
outsb
inc
push
inc
push
jno
lcall
jns
push
jp
dec
jae
pop
jb
push
dec
jne
outsl
je
mov
sti
fildll
dec
inc
addr16
dec
popa
push
pop
inc
lock
push
inc
outsb
add
dec
inc
ljmp
jno
jae
inc
dec
inc
jno
push
jo
dec
inc
dec
inc
push
bound
addr16
jae
jno
fs
gs
sti
fildl
cs
outsb
ja
push
je
scas
jo
popa
jno
insb
gs
dec
ljmp
clc
push
dec
outsl
dec
imul
outsl
pop
dec
je
inc
push
jne
ja
jne
inc
push
add
push
je
push
outsb
cmp
push
dec
inc
jbe
insl
in
or
inc
push
pop
push
pop
inc
imul
arpl
push
std
fists
push
jns
outsb
jbe
imul
insl
dec
push
push
insl
jbe
jne
jno
jns
push
dec
inc
mov
push
addr16
jb
jno
sbb
fs
bound
pop
jl
inc
ja
dec
push
push
jbe
lret
inc
push
arpl
gs
bound
lcall
mov
dec
imul
push
or
outsl
inc
push
push
jo
decb
in
jo
push
push
inc
dec
pop
js
push
fs
imul
aaa
sbb
push
jb
push
dec
je
je
dec
push
jl
add
jp
push
lcall
or
push
push
dec
jns
push
addr16
imul
pop
jbe
push
inc
xchg
add
push
push
dec
data16
ja
pop
fdivr
xchg
outsl
dec
insb
push
pop
dec
jns
inc
inc
cmpb
insb
mov
incl
push
ja
inc
inc
dec
inc
insb
jne
inc
sub
pop
dec
testb
lahf
add
sub
or
out
or
ss
jns
xor
xor
inc
push
pop
sti
imull
je
push
dec
gs
add
or
das
inc
push
pop
inc
loopne
insl
rorl
imul
jno
mov
mov
jne
jb
inc
pop
and
xchg
daa
and
cmp
fildll
inc
inc
push
ja
adc
movsb
jae
dec
outsb
outsb
gs
sub
and
mov
fildl
inc
ds
xchg
mov
fcmovnu
pop
aaa
daa
pop
mov
mov
cmpsl
das
data16
and
outsl
inc
imul
xchg
push
daa
ja
adc
mov
aas
xchg
aad
mov
push
jb
cmp
gs
sub
inc
ret
fistpll
dec
push
rolb
ja
bound
lcall
mov
fstpl
outsb
je
insb
insb
cs
jo
mov
outsb
insl
popa
jo
imul
bound
dec
mov
mov
add
popa
aaa
aaa
mov
inc
js
dec
gs
xor
pop
dec
imul
ljmpw
rorb
add
add
jmp
outsb
scas
ret
pop
jmp
call
pop
dec
fsub
jb
dec
or
call
dec
inc
pop
jnp
inc
inc
cmp
xor
sub
cmp
sub
cmp
aaa
aaa
sub
xor
inc
aaa
inc
push
or
add
push
jb
insb
jo
or
add
or
outsb
lds
inc
mov
cld
mov
daa
test
inc
adc
outsl
ja
and
push
shlb
adc
dec
or
jg
mov
outsl
fs
outsl
aas
aad
test
je
dec
and
push
repnz
dec
xor
inc
dec
push
icebp
mov
add
inc
insb
jae
add
pop
roll
je
cmp
pop
inc
cmpsb
adc
mov
xchg
mov
mov
imul
movups
adc
adc
call
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
pushl
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
mov
push
mov
pop
pop
insl
clc
pop
cld
pop
pop
pusha
popa
bound
addr16
imul
jno
or
aas
hlt
jne
ja
jns
jnp
jge
jg
jno
faddl
and
repnz
jb
sub
dec
add
sbbl
jb
addl
pop
addb
push
sbb
insl
sub
push
mov
sub
add
fcoms
and
add
ja
push
mov
mov
imul
mov
mov
pop
rcl
inc
pop
inc
out
and
add
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lcall
movsb
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
fdivrp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
adc
aad
jmp
loope
add
inc
and
stos
call
push
popa
and
mov
add
ljmp
dec
outsl
outsb
push
jne
push
gs
push
push
popa
outsl
mov
lcall
popa
outsb
inc
bound
jb
jo
or
dec
add
inc
jne
mov
push
gs
arpl
jbe
xchg
jb
js
adcl
je
xchg
gs
insl
add
je
js
xor
jb
add
sahf
insb
adc
jne
je
insl
and
jb
pop
not
inc
or
push
push
and
repnz
dec
dec
inc
add
inc
and
push
ss
icebp
outsl
mov
outsb
and
jo
imul
and
into
sub
je
gs
jo
and
insb
insb
popa
pop
mov
es
push
bound
cwtl
adc
mov
cmpsb
push
iret
fmul
insb
jns
or
xorb
outsb
je
arpl
int3
mov
mov
sbb
xor
jl
fcmovb
and
insl
push
xchg
or
pop
aas
xor
pop
rcrl
rolb
in
adc
stos
out
insl
bound
in
mov
jne
xchg
and
jbe
dec
mov
sbb
ja
add
pop
es
gs
bound
and
je
sub
flds
and
push
ds
mov
mov
xchg
ret
and
mov
adc
pop
daa
sub
push
shrl
das
arpl
cmp
mov
cwtl
rolb
mov
push
data16
add
inc
xchg
movsl
cmp
call
xor
push
pusha
int
int3
or
push
sbb
pop
data16
popa
pop
enter
xor
jo
and
gs
push
fistps
adc
int
push
or
xor
scas
shll
hlt
popa
xor
and
sahf
dec
mov
sbbb
and
outsl
outsl
adcl
xor
push
jno
jbe
inc
xchg
push
dec
notl
xor
push
gs
mov
mov
adc
cmp
outsl
jo
xlat
in
adc
outsl
push
or
arpl
in
cmp
xor
inc
aaa
insl
in
in
arpl
adc
imul
bound
das
imul
pop
or
jle
bound
rclb
leave
push
insl
imul
cmp
adcl
in
fadd
inc
enter
push
and
push
cmp
pop
mov
sub
push
jae
xor
mov
fsubl
out
add
or
or
mov
push
sub
add
bswap
inc
sub
pop
dec
jmp
dec
or
add
cmp
addr16
xchg
fisubrs
jne
ds
arpl
pop
fsubl
dec
and
dec
cmp
add
mov
pop
sbb
add
lea
xchg
dec
cmp
mov
and
push
scas
cmp
push
or
jbe
dec
bound
in
or
mov
push
daa
inc
ss
add
mov
imul
fildl
inc
inc
xor
imul
loopne
in
inc
mov
cmp
or
mov
mov
cs
push
push
andl
xor
mov
mov
pop
mov
imul
bound
jbe
push
push
lahf
stos
shl
jns
and
xor
popl
cmp
pusha
gs
stos
loopne
and
inc
inc
pop
es
push
mov
dec
lahf
lock
out
pop
inc
xchg
pop
pop
pop
push
lods
jbe
push
push
jae
cmp
push
adc
scas
cmp
call
out
jae
addr16
subl
jo
sub
mov
inc
xchg
fcomp
and
mov
notl
push
dec
testl
dec
je
outsb
mov
ret
lods
pusha
cmp
fildll
sarb
jg
mov
xor
bound
mov
sbb
outsl
sbb
jae
inc
in
lret
xor
add
adc
lds
sub
inc
aad
push
or
cmc
fcomps
das
je
outsl
xchg
daa
negb
ret
daa
popw
pop
cmp
sahf
jl
cmp
cmp
push
das
push
fst
cmp
inc
jl
push
mov
push
jle
sub
sub
push
iret
ror
cmp
jle
add
out
lret
pushw
sub
sub
push
jnp
push
mov
lea
push
cmp
sbb
dec
pop
pop
xchg
stos
push
test
addr16
push
jb
and
das
jo
ss
fidivrl
push
cld
sbb
adc
push
xor
ss
jae
inc
jo
sub
in
jbe
push
out
sub
pop
sarb
cmp
and
stc
sahf
out
adc
clc
mov
jns
mov
mov
iret
jnp
call
loopne
cmp
repz
rol
sarb
mov
test
repz
movsb
mov
cmp
repz
mov
repz
jo
push
fs
pop
pop
push
push
cmp
repz
dec
cmp
sub
iret
repz
clc
mov
sahf
out
test
iret
repz
add
mov
cmp
repz
pusha
push
sub
jns
iret
repz
in
mov
sahf
out
push
sub
mov
jns
cwtl
insb
push
mov
or
dec
dec
cmp
cmp
add
dec
mov
adc
add
das
das
adc
adcl
inc
test
cmp
mov
and
adc
mov
sub
jne
or
xchg
in
xchg
outsb
gs
xor
mov
push
push
push
filds
pushf
jae
scas
cmpsl
xchg
popl
outsb
jns
jg
addr16
popa
movsb
addr16
sbb
adc
ss
daa
push
clc
sbb
cmp
and
xchg
pop
pop
movsb
cmp
dec
inc
aas
add
pop
push
rcl
jmp
mov
push
cmp
push
cmpsb
xor
inc
jb
dec
fildl
ss
inc
arpl
xchg
outsl
aad
sub
daa
pop
lea
mov
ss
push
inc
push
xor
cs
mov
dec
lds
popa
cwtl
push
xor
push
stos
adc
pushf
in
add
xor
adc
jle
mov
and
add
dec
xchg
in
push
inc
add
pop
in
hlt
add
xor
dec
and
add
neg
push
push
push
insb
das
inc
mov
out
cmovo
mov
and
mov
pop
cwtl
lahf
das
les
int3
ds
mov
movntq
out
inc
lock
ja
adc
mov
push
sub
mov
mov
pop
inc
mov
pop
dec
jae
xchg
push
fs
insb
cltd
inc
pop
bnd
fs
cmp
test
add
push
enter
test
enter
clc
or
pop
enter
xchg
clc
insb
mov
pop
stc
into
mov
lock
mov
bound
pusha
cmp
repz
nop
mov
out
loop
fwait
sub
outsb
and
jbe
inc
lcall
adcl
ja
mov
adc
scas
mov
mov
fidivs
aas
cmpsl
stc
xor
push
jg
cs
mov
fstps
adc
out
add
push
or
aaa
iret
jo
cmp
bnd
cmpsb
aas
roll
jb
mov
les
and
iret
inc
dec
lcall
repnz
enter
outsl
or
and
pusha
push
pop
in
sbb
mov
enter
sub
xor
stos
lea
mov
push
push
aaa
shl
xchg
or
pop
movsb
mov
cmpsb
inc
push
lahf
popf
or
dec
or
push
dec
mov
and
dec
push
jbe
jge
cltd
push
rcrb
xlat
or
or
adc
orb
push
and
aam
shll
leave
es
sbb
pop
mov
adc
push
fs
loopne
adc
xchg
mov
inc
mov
sarl
and
cmp
addr16
mov
outsb
mov
xchg
aad
scas
out
jnp
sbb
sbb
cmp
rcrb
sbb
push
and
pop
mov
adc
pop
jb
push
jle
pop
inc
cmp
dec
inc
and
adc
mov
mov
leave
or
cmp
inc
adc
aas
daa
xchg
pop
mov
jns
mov
and
mov
inc
repnz
cltd
mov
push
pop
jne
loopne
pop
aas
imul
popa
inc
es
push
outsb
aas
shlb
out
jge
jle
ds
jle
daa
fimull
xorl
mov
sbb
std
pop
xchg
inc
pop
in
int
add
es
jge
into
out
je
sub
cltd
aaa
push
mov
out
pop
jo
or
pop
leave
xchg
adc
ret
pushf
into
pop
mov
add
incl
inc
sub
push
addr16
inc
push
jp
inc
dec
dec
jae
gs
dec
push
inc
insl
insl
insb
gs
fs
push
push
push
insl
inc
push
jb
jp
idiv
call
imul
jne
inc
gs
push
insb
inc
dec
outsl
push
push
dec
dec
pop
js
jno
mov
inc
inc
jns
push
push
jae
push
add
jns
push
mov
push
push
inc
fs
dec
push
dec
pop
bound
inc
jne
je
jae
insl
inc
push
imul
mov
dec
inc
push
inc
push
inc
push
dec
dec
bound
gs
inc
inc
inc
outsb
pop
cld
or
dec
jb
inc
imul
jns
dec
outsl
inc
insl
jne
push
jp
jne
imul
add
and
push
xor
out
lock
addr16
jle
mov
jg
xchg
and
jbe
lds
pusha
sarl
lcall
add
and
aaa
pop
cmp
cmp
inc
and
data16
aas
stc
pushl
cmp
jns
and
and
inc
popa
jge
adc
mov
je
fists
pushl
add
xchg
dec
int3
stc
mov
jns
mov
and
neg
stc
aaa
sbb
ljmp
xor
ds
insb
addr16
outsl
jb
push
jns
xor
out
gs
dec
enter
jge
pop
insl
xor
cmpsb
stc
push
push
add
inc
je
dec
loopne
xchg
mov
dec
in
add
adc
xor
int
cmp
inc
es
push
cld
inc
adc
mov
imul
or
cmpsb
inc
sbb
incl
and
adc
outsl
cmpsb
mov
fisttps
inc
addr16
dec
je
inc
jae
pusha
and
jae
add
add
xor
adc
or
cmp
sbb
inc
sub
add
sbb
aas
repnz
cmp
pop
adc
sub
dec
pop
inc
imul
inc
add
bound
adc
pushl
cmc
mov
push
pop
cwtl
cwtl
je
mov
jge
push
jmp
or
push
adc
fsubrs
addr16
out
mov
cmpsl
sbb
cmp
mov
mov
adc
cmp
jns
fcomps
daa
mov
adc
insb
leave
pop
jns
out
imul
push
stos
js
mov
imul
push
dec
inc
nop
inc
popa
or
imul
arpl
xchg
pop
incb
jns
push
pop
je
gs
jg
cld
adc
push
pop
xchg
push
dec
push
jg
cld
and
outsl
inc
cmp
cmp
add
out
aad
fs
inc
popa
roll
je
ss
decl
imul
add
mov
ja
cmp
push
int
jg
or
sbb
and
sub
outsb
jl
push
fs
jno
outsl
mov
adc
mov
mov
mov
add
jle
ja
push
stc
subb
arpl
jns
sub
fcoml
xor
push
iret
cltd
and
jo
shll
jl
lcall
mov
dec
addr16
sbb
jae
adc
adc
pop
sbb
outsl
lcall
ja
cld
jbe
lcall
mov
cld
imul
ljmp
loopne
mov
jbe
xor
adc
and
mov
insl
sar
mov
lods
inc
inc
sbbl
mov
daa
jno
pop
mov
push
add
inc
pop
lods
aaa
dec
and
cmp
pop
xchg
adc
cmp
adc
xchg
popa
out
mov
cmpsb
push
dec
xchg
push
fsubr
pusha
xchg
mov
inc
mov
pushl
std
xchg
hlt
aam
jg
in
test
mov
fimull
stc
test
stc
lahf
mov
mov
mov
cmp
lcall
out
mov
mov
shll
test
out
call
mov
mov
add
packuswb
mov
leave
xchg
mov
xchg
subb
pushl
lods
scas
std
fisttpll
mov
mov
into
divb
mov
lods
ljmp
mov
lea
test
scas
mov
mov
xor
add
jmp
sbb
ljmp
jae
lds
decl
incl
mov
shrl
mov
lock
fcomip
and
mov
test
loopne
out
pushf
mov
lcall
test
mov
cld
ljmp
jg
lds
mov
inc
roll
push
jb
lock
mov
sahf
fdiv
mov
xchg
lcall
push
cmpsb
and
lahf
mov
xor
pop
mov
cmp
xchg
outsl
repnz
loopne
lret
cmpsb
popf
xchg
call
sti
push
mov
pushf
pushf
aaa
xchg
push
xbegin
call
sbb
xchg
sbb
imul
daa
mov
imul
push
mov
std
loopne
mov
cltd
test
adc
add
fstl
decl
lcall
mov
mov
out
fdivr
out
lcall
fbstp
loop
mov
push
repnz
add
out
jp
push
mov
mov
dec
aam
jg
lock
in
xchg
pop
call
xchg
icebp
stc
out
pushf
mov
testb
fsubl
jle
ljmp
dec
clc
out
dec
xchg
xchg
scas
push
outsb
decl
mov
clc
loop
lahf
mov
xorl
dec
mov
push
hlt
xlat
out
lret
in
sbb
addr16
and
jmp
xlat
pop
xor
xorl
push
addr16
aaa
sub
adcb
jg
call
cwtl
mov
fs
out
dec
clc
ret
xchg
fyl2xp1
repnz
inc
cli
in
mov
dec
outsl
dec
loop
cmpsb
mov
and
je
ret
decl
push
push
shlw
xor
mov
fisubs
loope
mov
cmp
lahf
out
jl
inc
lods
xor
jae
jecxz
stos
xchg
mov
mov
mov
hlt
pushf
stos
mov
lahf
add
inc
sub
popa
sar
mov
mov
faddl
sub
xchg
hlt
cmp
dec
scas
outsl
repz
test
cld
jecxz
cltd
mov
mov
stos
pop
mov
xchg
lcall
insb
iret
fidivs
ds
dec
push
lods
dec
cli
fistps
test
lcall
movsl
lea
incl
mov
or
stos
gs
pop
test
mov
test
dec
subl
sbb
mov
lret
loope
hlt
mov
ret
popf
xchg
mov
into
mov
and
push
shrb
sahf
add
pop
popf
inc
add
stos
in
xor
stos
mov
or
insl
jl
push
cli
sub
or
and
pushf
pop
push
push
mov
hlt
iret
in
mov
rcl
cmpsb
xchg
pushf
xchg
mov
mov
jg
cmp
cmp
push
jns
test
stos
gs
lret
mov
mov
movsb
xor
mov
iret
cli
xor
hlt
movsb
arpl
loop
dec
mov
xchg
cmp
int
lock
pop
movsb
push
scas
mov
adcl
adc
jg
je
mov
call
xchg
mov
lcall
ljmp
adc
mov
dec
push
pop
mov
xchg
adc
movsl
cld
out
clc
lret
xchg
mov
in
movsl
popf
lock
cmp
push
ret
lcall
add
cmp
inc
jns
xchg
or
scas
cmpsb
mov
xchg
xchg
inc
lea
mov
jle
mov
cltd
divb
inc
and
mov
push
sbb
outsb
stos
or
mov
mov
push
in
add
cld
jg
repnz
inc
push
jmp
andl
out
aad
stos
sbb
mov
xor
mov
ljmp
rclb
mov
es
xchg
shr
cmp
pop
or
es
addr16
repz
icebp
incl
mov
mov
insl
dec
xlat
xchg
popa
dec
cmp
in
pop
mov
mov
std
lcall
jl
in
test
stos
mov
inc
push
xchg
cmp
jl
aad
pushl
mov
add
xchg
or
in
mov
inc
popa
jmp
gs
push
mov
jecxz
sbb
test
aas
jg
decl
popf
sbb
das
daa
icebp
and
int3
and
lret
mov
clc
je
outsl
sbb
push
shlb
movsl
adc
in
ficoms
pop
inc
dec
jns
push
jp
xchg
cmpsb
call
shrb
push
mov
sar
xchg
cmpsb
add
cmp
mov
inc
inc
mov
adc
jg
and
out
cwtl
mov
in
cld
xchg
ljmp
push
cld
sti
mov
fstpt
icebp
mov
fcomip
call
xlat
fstl
loopne
pop
jbe
movsb
mov
arpl
add
ljmp
sahf
dec
loop
call
std
mov
stc
test
add
mov
mov
call
lods
mov
push
lock
rcrb
in
aam
inc
mov
mov
sub
hlt
push
push
jns
and
mov
shrl
decl
mov
sub
pcmpgtb
outsl
sbb
xor
mov
or
inc
flds
xchg
or
inc
lret
std
mov
mov
bound
cltd
stos
mov
jg
push
scas
daa
out
sbb
push
test
iret
out
push
dec
popa
push
push
std
fidivrl
addr16
sbb
int3
pop
jno
iret
sub
lods
sub
xor
pushl
add
inc
into
sbb
ss
je
add
adc
and
push
xchg
lahf
pusha
ljmp
jb
shlb
loope
cltd
or
add
jg
and
mov
xchg
or
repnz
cmc
lods
inc
out
pop
adcl
aaa
cmpsb
adc
in
sahf
and
mov
mov
cld
das
jno
iret
test
repnz
inc
jne
mov
adc
call
pop
mov
js
test
mov
mov
mov
cmpsl
xchg
xchg
push
stos
lds
sbbb
arpl
push
jg
ljmp
sbb
dec
xor
and
call
loopne
vpacksswb
gs
mov
push
addb
scas
iret
sbb
inc
es
pop
mov
jg
lcall
mov
push
add
sahf
stc
scas
inc
cli
mov
pop
sbb
mov
enter
dec
inc
addr16
daa
popa
cmp
and
das
cli
incl
add
cmp
jno
shrb
jg
sbb
orl
push
cmp
fisubrl
mov
outsb
cld
lcall
movsb
movzwl
lods
mov
pop
faddl
xchg
ret
sbb
add
mov
xchg
jno
mov
push
cld
mov
add
and
lds
mov
clc
fwait
pop
sbb
xchg
mov
es
mov
ljmp
push
mov
push
outsb
jbe
mov
test
mov
clc
mov
sub
or
pop
outsl
int
inc
sub
es
sbb
mov
int
ss
mov
mov
aaa
push
std
ljmp
fcompl
enter
arpl
fs
call
icebp
add
shll
inc
decl
repnz
mov
jmp
cli
and
stc
xchg
mov
mov
mov
pushf
orb
adc
in
pusha
add
decl
inc
in
xchg
inc
and
into
cmp
fwait
lock
dec
inc
cli
mov
mov
dec
decl
lock
fwait
xchg
test
lahf
out
insl
enter
in
jg
pushl
call
sti
cmp
loop
jb
pop
data16
ljmp
fdivr
lcall
inc
cmp
mov
test
xchg
ja
mov
inc
mov
pushl
push
mov
push
jne
mov
xchg
xor
cmp
inc
xchg
adc
clc
lods
cmp
push
mov
push
decl
push
fimull
push
mov
orb
mov
cli
cld
and
adc
adc
add
sbb
les
das
shlb
mov
mov
mov
test
lock
jg
popf
call
cmpsb
std
addr16
push
mov
mov
dec
test
decl
ret
clc
cmp
mov
insl
push
movsl
mov
push
stc
and
enter
mov
or
push
dec
xor
and
fcoms
xchg
repnz
decl
inc
inc
sub
xor
push
mov
fs
sbb
add
inc
lcall
lcall
rcrb
push
inc
pop
xor
and
jbe
and
or
sub
lcall
xchg
push
dec
push
clc
mov
lea
sbb
and
fstpt
jg
pop
mov
fwait
push
pop
inc
push
and
hlt
in
xchg
int
dec
fcomip
pop
mulb
fsubl
mov
ret
jbe
push
cmp
hlt
scas
jg
ljmp
adc
xchg
xor
jp
mov
jmp
aam
dec
nop
movb
and
sbb
js
fldl
mov
add
xor
jmp
jnp
cmpb
add
or
sbb
cltd
sti
ljmp
ljmp
pop
push
sub
imul
push
push
or
push
stos
jp
add
outsb
negl
jg
jmp
add
push
adcb
pusha
pop
jle
adc
mov
mov
pop
out
xchg
ljmp
out
and
call
das
mov
push
pop
adc
push
test
data16
mov
add
fwait
jns
outsl
mov
mov
in
cmpsb
arpl
in
sti
xor
jl
scas
insl
pop
sbbb
pop
cmpsb
lds
adc
adc
push
jne
jecxz
js
mov
mov
jg
fstps
xchg
mov
mov
shrl
lcall
xor
inc
cmpb
jnp
cmp
orl
out
mov
pop
add
xor
call
dec
sbb
cmp
mov
shll
popa
lret
mov
xor
push
mov
xor
ljmp
mov
dec
jae
lods
fwait
and
sahf
sar
decl
sub
int
jp
dec
es
sbb
add
insl
hlt
mov
stos
fistps
outsb
push
std
sub
dec
pop
sahf
or
and
add
decl
ss
pop
dec
divl
jne
add
lea
mov
jp
push
dec
sbb
push
hlt
mov
lods
sub
xor
stos
mov
inc
icebp
mov
scas
and
sub
mov
sub
fnstenv
lcall
mov
ljmp
add
arpl
sahf
pop
repnz
add
cmp
cmpsb
jg
or
sahf
cltd
mov
cwtl
adcb
cmpsl
aam
push
lock
call
or
imul
ss
push
adc
adc
dec
and
incl
jns
pop
jge
and
cli
add
iret
sub
dec
sbb
les
jg
push
es
mov
dec
add
jne
in
mov
ss
loopne
fcomip
ja
lods
movsl
sub
je
popa
xor
shlb
ljmp
and
into
or
push
or
lock
push
stos
lret
mov
imul
enter
push
sti
and
incl
xorl
pop
clc
inc
shlb
cwtl
lods
mov
pusha
orb
call
cmpl
inc
mov
incl
scas
clc
push
jns
pop
out
push
into
popa
push
nop
mov
mov
cmp
lea
or
insb
mov
fisttpl
cld
add
roll
push
bound
fnstcw
pop
add
and
sbbb
lods
cmp
xor
cmpsb
xor
adc
jp
jbe
incl
cld
incl
jle
jge
jl,pt
sub
jg
cs
cmp
lcall
test
or
xor
mov
sbbl
jns
and
inc
ljmp
cld
outsl
clc
mov
push
jbe
dec
xchg
mov
jb
ljmp
test
cmp
ljmp
icebp
mov
and
xchg
inc
mov
sub
insb
dec
rcll
jg
loopne
dec
push
push
aaa
repnz
out
test
cmc
mov
fwait
pushf
pop
jb
fisttps
mov
adc
or
mov
mov
jmp
inc
ret
cmp
iret
sub
push
test
mov
mov
and
das
aaa
leave
sub
loop
jmp
fbstp
aas
hlt
lods
pop
daa
xor
out
adc
xorb
inc
insl
fildl
call
movsb
mov
call
pop
pop
int3
sbb
sahf
xor
mov
mov
imul
xchg
mov
mov
jmp
sub
cmpsb
adcl
nop
imul
sbb
mov
mov
cmp
and
ljmp
jo
add
roll
inc
fistl
cmpsl
cmp
cmp
cli
xor
dec
clc
xor
repnz
cmp
push
xchg
lcall
and
and
call
mov
xchg
sub
stos
sbb
push
jmp
mov
push
sbb
mov
push
mov
or
add
jae
mov
test
sub
and
cmp
or
lods
adc
push
scas
out
stos
inc
and
es
adc
aam
push
push
repz
pop
sub
outsl
cli
call
daa
lods
dec
mov
or
clc
sbb
and
push
pushf
insl
and
and
nop
ret
roll
or
pop
ret
das
fsubl
cmp
add
push
std
jmp
add
lds
dec
xor
sbb
jae
imul
rorl
xchg
nop
inc
fisttps
jbe
jg
pop
jno
push
lods
ja
dec
fbstp
mov
jne
mov
lds
cs
cli
and
xchg
cld
call
ret
xchg
dec
inc
mov
int3
mov
test
into
ds
pushl
adc
aam
mov
insl
enter
adc
push
mov
das
es
cmp
inc
push
rcrb
and
jmp
aam
cli
mov
add
push
lea
jnp
shll
stos
mov
cli
dec
inc
test
aaa
loop
sub
sbb
inc
jne
lret
jmp
lea
sti
lret
cmp
ret
xor
push
lcall
icebp
fbld
lcall
pop
ljmp
jmp
add
shl
mov
adc
in
ds
lcall
jno
inc
jbe
shrb
scas
mov
les
lods
mov
lock
inc
in
sahf
stos
mov
rorl
insl
sarl
into
daa
mov
aas
push
xrelease
mov
mov
ds
mov
sbb
jne
and
pop
sub
xor
fwait
aam
xchg
inc
adc
call
dec
cmp
scas
test
outsb
xorl
filds
mov
mov
cmp
and
jg
mov
push
ss
in
pusha
testl
or
pop
mov
xchg
lock
xorb
jecxz
mov
aas
imul
call
lcall
call
xchg
repnz
push
sub
rolb
imul
mov
pushf
jne
ja
clc
xchg
mov
push
mov
mov
mov
fsubl
xchg
sub
popf
clc
jg
lret
nop
lahf
mov
loope
out
xor
adc
les
imul
shrl
fwait
pop
xor
mov
add
in
sbb
or
cmp
into
aas
lcall
pop
call
mov
xchg
and
xor
xchg
cmp
repz
mov
xor
hlt
xor
mov
adc
dec
popa
aas
lcall
adc
mov
adcb
and
stc
add
aaa
mov
fwait
mov
sbb
hlt
mov
jmp
mov
adc
and
call
add
leave
pop
mov
mov
push
cmp
lahf
or
xor
out
add
xchg
cld
ljmp
stc
sub
jo
adc
mov
jmp
daa
loopne
add
adc
fisubl
cld
out
test
mov
out
adc
repz
add
cmpsl
or
ss
hlt
pop
or
lahf
jle
cmp
aad
stos
hlt
cmp
pop
or
fwait
add
clc
pop
sahf
xchg
lods
mov
push
pop
pop
flds
lret
in
and
imul
shll
add
inc
cmp
inc
jl
ljmp
mov
push
mov
rolb
mov
rcr
xchg
mov
jns
mov
inc
leave
cmp
decb
pushl
test
cs
adc
iret
data16
clc
int
sar
or
lahf
jmp
stc
decl
mov
push
mov
pushf
mov
mov
ljmp
inc
add
out
add
xlat
push
xchg
aas
push
jmp
outsl
aaa
mov
pushf
mov
jg
dec
clc
pop
mov
cwtl
fimuls
insl
fcoms
loop
sbb
mov
outsb
push
iret
and
loope
xor
fcom
sbb
mov
int3
fcomip
outsl
clc
push
jmp
and
push
xchg
xor
fs
xor
jne
push
jmp
cmp
cmp
dec
lds
scas
aas
jg
incl
test
cmpsl
and
adc
adc
ja
movsl
loope
cld
out
mov
sbb
popa
out
xchg
xchg
xchg
bound
lods
xor
and
ja
cmp
ret
mov
add
sti
ds
in
jl
ret
push
loope
mov
push
clc
loop
sahf
jo
lret
ds
pushf
rolb
inc
push
lret
fbld
mov
jle
xor
in
and
mov
jb
aad
sahf
lcall
and
scas
and
mov
mov
outsb
enter
cmp
adc
dec
ret
jmp
lods
sub
ret
mov
push
push
add
ss
jnp
cmp
jae
xor
or
inc
sub
push
out
sbb
ja
ret
mov
or
aaa
enter
clc
xor
lret
in
popf
clc
incl
fsubs
jg
mov
repz
loopne
test
cmp
pusha
std
lret
leave
daa
inc
int3
test
inc
cmc
sahf
push
xlat
mov
xchg
cmpsl
adc
stos
push
es
imul
fbld
add
out
popf
xor
mov
and
mov
cmpsb
movl
mov
cmp
mov
fisubs
jno
fcomps
mov
and
loopne
sub
sub
adcl
sbb
inc
jae
or
adc
jo
cltd
hlt
test
rcrb
scas
clc
pop
shlb
mov
lcall
add
cmp
enter
in
popa
aad
dec
sub
add
inc
subb
filds
ljmp
cmpsb
mov
repz
push
iret
and
xchg
cs
mov
into
sbb
shrb
ret
daa
pop
in
mov
jnp
incl
adc
cli
das
nop
out
mov
mov
cld
call
cmp
leave
imul
lcall
mov
or
mov
out
jmp
mov
xchg
sub
ss
aam
xor
push
pop
js
jmp
add
outsl
mov
cmp
adc
pop
xchg
mov
mov
daa
les
decl
mov
fwait
sub
in
mov
cli
xor
xor
fisttpl
popf
xor
pop
sub
stc
mov
xor
cmp
scas
xchg
cmp
movsb
mov
mov
xchg
push
test
test
push
lcall
inc
ret
rcll
sub
mov
sub
pushl
fadds
inc
cli
mov
sbb
cmp
jno
lock
ret
fdivs
dec
dec
inc
aas
ret
mov
mov
cltd
fsubs
jg
inc
ds
ja
clc
cmp
roll
movsl
movsb
and
imul
jg
add
ja
xor
lods
sub
iret
insb
scas
mov
not
xchg
mov
mov
fcoms
xor
loopne
xor
scas
pop
adc
push
rcrl
les
das
das
fisubrs
mov
or
aas
movsl
sbb
es
mov
mov
xchg
jecxz
mov
jae
cld
mov
mov
pushl
sti
cmp
adc
aaa
popf
fisttpl
xor
mov
push
add
incl
pop
mov
in
out
adc
les
stos
sub
cmpsb
stos
leave
hlt
aas
decl
stos
dec
testb
je
jo
adc
pop
stos
int
fcomip
mov
inc
out
cld
jp
adc
xor
clc
js
sbb
jb
push
sti
lcall
iret
repz
insl
fmull
int
xchg
push
es
mov
loopne
cwtl
cmp
mov
dec
inc
roll
push
je
fwait
mov
setbe
repnz
cwtl
popf
sub
jns
scas
lcall
flds
or
inc
call
and
pop
repnz
add
scas
jbe
inc
loopne
push
incl
ss
test
cwtl
dec
push
pop
jbe
xor
push
mov
subb
movsb
pop
sarw
loope
hlt
sub
lret
or
sub
stc
or
decl
push
or
cld
xchg
xor
inc
jo
sarb
push
push
or
cld
cmp
int3
push
movsl
dec
fildl
lea
stos
clc
adc
mov
xchg
or
fstpl
test
movsl
jne
sub
fisttpl
dec
in
sbb
clc
push
mov
mov
mov
mov
and
cld
sti
lahf
and
add
cli
push
lods
sti
sbb
inc
jmp
fwait
xchg
jae
fisubl
or
and
push
cmp
jmp
and
out
arpl
sti
in
cmp
push
stc
push
fwait
jno
cmp
mov
imul
call
cltd
rcll
cli
es
jecxz
jno
mov
sbb
mov
fistps
adc
js
mov
or
stos
fwait
sbb
mov
xchg
cmp
pop
mov
and
dec
xor
cmp
repz
xchg
lods
testb
add
ds
mov
jg
cmpsb
sub
lods
test
cmp
add
inc
push
lods
push
int3
mov
pop
xor
scas
in
lock
jecxz
test
lods
loop
push
lret
and
jg
dec
or
pop
hlt
inc
lds
loope
jg
cwtl
jbe
dec
clc
push
test
out
dec
pop
int3
sbb
fwait
pop
call
add
push
sbbb
aaa
fimuls
push
pop
paddusw
insb
add
sbb
jmp
lds
mov
roll
stos
xchg
mov
pop
imul
decl
pop
mov
dec
cmp
jbe
jno
js
sub
sarl
js
incl
mov
test
hlt
std
iret
push
pushf
decl
mov
mov
sbb
sbb
add
shll
sub
xchg
adc
dec
in
ret
xor
jecxz
pusha
push
mov
sbb
ja
jg
xor
mov
ret
cmp
mov
xor
test
jbe
sahf
xchg
enter
or
ja
mov
outsb
cli
cwtl
outsl
sbb
sbb
cmp
lock
decb
movsl
lea
nop
cwtl
js
shlb
add
or
mov
mov
in
ljmp
loop
xor
mov
ffree
cs
test
jb
cwtl
mov
cwtl
pop
sbb
adc
lret
pop
lods
lods
xchg
lahf
xchg
mov
loopne
fcomip
out
dec
cmpsl
mov
sbb
mov
cmpsb
and
inc
xor
xchg
cmp
push
jae
pop
sbb
cld
xchg
fldenv
mov
dec
jmp
xorl
mov
and
test
sbb
or
mov
sbb
or
cmp
or
dec
movsl
cli
call
neg
sbb
mov
fwait
sub
jnp
mov
fbstp
xchg
sub
pop
icebp
jg
lcall
and
fwait
xor
loop
mov
in
dec
jmp
add
xor
and
stos
and
das
sbb
xchg
in
xchg
push
hlt
test
scas
mov
sbb
mov
sub
rorb
xchg
scas
dec
fiaddl
push
dec
in
mov
add
and
jo
lret
fcoms
add
push
clc
mov
leave
add
stc
mov
repnz
adc
jo
clc
daa
pushf
out
sbb
mov
sub
adc
sbb
popf
ret
test
cltd
xchg
ss
lods
mov
jmp
and
loope
pop
xchg
test
add
cld
sar
das
jbe
lret
xor
dec
and
xor
fmull
dec
daa
iret
and
mov
mov
xor
pop
xor
popl
add
loop
lcall
sub
xchg
pushf
cmc
xchg
and
or
daa
aad
push
sbb
out
and
hlt
ret
and
clc
pop
xchg
xchg
inc
or
mov
fdivrp
push
jno
cwtl
mov
xchg
inc
mov
clc
lahf
sbb
pop
decb
mov
daa
mov
stc
jle
inc
pop
pusha
push
adc
popf
xor
stos
sbb
cmp
fildl
push
adc
lcall
push
shl
and
dec
or
lock
jmp
jne
xor
mov
xor
dec
lahf
or
subb
sub
cmp
lret
cmp
sub
repnz
mov
add
mov
mov
mov
repnz
xchg
lcall
inc
push
add
subl
rol
sub
ret
loop
lcall
int
mov
cmp
out
in
sbb
mov
xchg
mov
imul
into
or
rorb
enter
test
sbb
jne
mov
mov
sar
push
aad
jns
xor
arpl
rorb
lahf
int
pop
pop
shll
out
inc
push
jne
add
push
cli
push
pop
jae
dec
stos
ds
cmpsl
mov
ljmp
out
push
int
pop
push
and
test
jecxz
add
xchg
shlb
pop
dec
ds
loop
jle
or
daa
lcall
cld
jno
and
decl
mov
movb
mov
xchg
movsl
xchg
and
mov
daa
cmpl
xchg
sbb
mov
mov
add
cmp
test
lcall
xchg
cmp
loopne,pt
lret
push
lret
loope
sbb
dec
clc
sub
mov
call
xor
sub
enter
pop
fcompl
xchg
jns
je
or
mov
adc
call
push
stos
mov
addr16
mov
sbb
xor
cmp
cmp
mov
mov
sub
mov
mov
out
xchg
fmuls
mov
ljmp
xchg
mov
xchg
dec
mov
jno
xchg
repz
dec
pop
adc
or
clc
es
lcall
sub
add
iret
cld
or
sbb
pop
sbb
sbb
test
decl
in
jmp
sbb
ljmp
mov
ret
mov
pop
mov
and
cmp
cmp
or
fmull
outsl
sahf
sahf
or
decb
add
cld
jmp
fwait
sbb
stos
cmp
pop
or
and
sbb
out
jno
es
adc
stc
sbb
icebp
or
dec
sub
mov
mov
das
rolb
test
movsl
mov
stos
fidivs
cltd
ret
xor
mov
nop
mov
inc
jmp
mov
or
stos
push
int3
cmpsb
sub
or
push
jl
mov
lods
mov
ret
aaa
loope
ss
ds
cli
ss
fisubl
jno
hlt
mov
mov
roll
mov
mov
das
cmp
push
int3
pop
and
push
in
lcall
jp
out
pop
icebp
filds
mov
in
into
arpl
adcb
out
xor
movsb
stos
jge
repnz
call
cld
mov
les
lods
out
mov
mov
push
dec
leave
xchg
jmp
ret
cmp
cmp
add
int
flds
jecxz
incl
push
jbe
data16
ljmp
incl
inc
sub
mov
lods
xchg
icebp
xchg
adc
into
mov
pop
add
sub
xor
mov
ss
scas
ret
inc
add
stc
cmpl
inc
sbb
adc
call
push
sub
cld
push
cli
jg
jmp
stos
das
test
ficomps
mov
nop
daa
xchg
fidivrs
mov
lock
mov
jmp
dec
pop
mov
cli
das
sar
call
lds
lock
sbb
xorb
sbb
fnstenv
ret
mov
mov
pushl
sbb
jge
outsb
lret
call
mov
loopne
pushf
lds
lcall
rolb
addr16
cmp
pop
jns
jmp
xor
imul
test
or
lds
jg
and
xor
mov
imul
or
movsl
inc
into
cmp
push
and
cli
incl
or
xor
jge
pop
xlat
in
inc
fstl
repz
mov
fistl
fucomp
data16
push
dec
cwtl
push
pop
jg
stc
mov
enter
leave
pop
lock
jne
mov
xchg
loopne
mov
jl
jp
ret
or
jge
shll
aas
decl
mov
test
ljmp
ficomps
iret
cmp
cmp
sbb
int
pop
sti
add
fsubrl
mov
decb
xchg
mov
incl
js
inc
xchg
adc
add
pusha
add
xchg
xor
lock
mov
fiadds
nop
mov
mov
fwait
or
mov
mov
lahf
ljmp
sbb
rorl
mov
leave
popf
or
imul
pop
movq
dec
jmp
out
lcall
mov
add
adc
dec
sub
nop
jecxz
mov
movsb
sbb
xor
xor
xchg
movsb
xchg
mov
jge
mov
mov
loop
xchg
jp
add
rcrb
decl
test
add
sub
aas
stos
nop
insb
push
repnz
into
ss
cmp
insl
in
mov
cmpsb
jo
sub
push
sar
decl
mov
xor
rolb
or
cld
in
dec
daa
rolb
loope
cli
and
enter
fs
dec
dec
stc
xchg
jmp
es
cli
jno
sbb
inc
push
jne
mov
add
das
orl
rcrl
shrl
cmp
pop
mov
sbb
test
pop
lahf
pushl
rcrb
movsb
ds
sub
rclb
shll
adc
mov
and
lahf
xchg
cld
xchg
inc
adc
test
jg
dec
fists
sarl
cli
jle
xor
aaa
xchg
xchg
cld
sub
movsb
stos
add
mov
incl
fcomip
cmpsb
int3
adc
push
or
clc
test
lahf
aas
pushl
enter
cmp
int3
and
das
mulb
pop
ret
dec
out
scas
test
jg
fs
cmpsb
xchg
or
in
orl
xor
test
dec
sub
aas
mov
movsb
cmp
or
pop
sar
jmp
or
and
xchg
mov
and
lret
pop
lock
incl
and
sbb
hlt
fdivl
or
cli
push
aaa
adc
add
int3
or
xor
xchg
cld
std
sub
shrl
add
stc
in
movsl
gs
sub
mov
lcall
xor
out
stos
lods
cmpsl
mov
imul
pop
aaa
jg
ljmp
fsubrl
sahf
fsubl
push
scas
xor
cmp
popf
mov
js
add
out
pushl
lods
in
sbbl
cmpb
cmpsb
inc
rorb
mov
les
iret
aas
mov
icebp
inc
sub
inc
xor
push
jg
xor
mov
jg
pop
in
loopne
mov
push
mov
imul
mov
pushl
cli
adc
enter
pop
push
stos
mov
or
mov
or
pop
fwait
int
pop
int3
pop
lock
loopne
lock
jge
add
xchg
push
cmp
bound
xor
sub
jnp
sbb
lret
fcomps
cmpsb
ljmp
dec
decb
lahf
push
xor
out
sbb
call
repnz
int3
add
mov
movsl
fdivs
decl
adc
cmpsb
add
cmpsb
neg
sbb
mov
push
call
cmpb
lcall
arpl
mov
xchg
dec
adc
mov
in
shr
dec
js
cs
pushl
jl
push
rcrl
xor
jb
es
leave
rolb
pop
cmpsb
push
lea
jae,pt
mov
pop
fnstcw
jle
xor
cmp
lret
lahf
or
lcall
subb
bound
mov
sahf
jnp
icebp
push
movsl
clc
or
or
cs
push
in
mov
pop
dec
dec
ljmp
cmp
push
shrb
jne
adc
mov
ljmp
mov
dec
enter
pop
rcrb
jg
add
mov
add
cmp
lahf
and
sar
out
mov
or
mov
mov
mov
mov
out
pop
fcomps
test
mov
or
mov
jge
ss
sar
stos
xor
test
sarb
xor
lock
sub
into
and
mov
add
inc
ljmp
pop
lcall
add
cmp
adc
and
push
cli
filds
lcall
sub
mov
mov
sub
jns
mov
ljmp
mov
mov
pusha
in
adc
aas
incl
fcoms
in
xchg
pop
jns
subl
out
mov
mov
enter
jg
pop
fstpt
ret
sbbb
push
jno
test
test
lahf
cmp
lods
cmp
or
rorb
fsubrl
rcr
cld
add
or
xchg
hlt
cwtl
lock
pusha
fldt
mov
outsb
mov
sahf
push
cmpsl
test
stc
pop
adc
pop
popf
pop
jecxz
out
sub
lock
ss
loope
incb
fisttpl
out
adc
push
shlb
es
popa
mov
in
and
lcall
pop
test
mov
jl
adc
call
adc
lcall
addl
in
push
mov
outsb
mov
mov
test
mov
mov
sub
jno
cmp
mov
movsl
decl
or
iret
mov
stos
cltd
sbb
mov
or
xor
or
int3
add
fcomip
add
mov
enter
out
mov
clc
clc
push
cmpsl
in
mov
fs
addr16
mov
in
mov
mov
pop
mov
cli
adc
call
call
mov
nop
adc
rcl
shrb
inc
lds
andb
stc
pop
jns
lods
jp
mov
int
mov
sub
loop
and
xchg
inc
jle
fnsave
mov
push
fstl
loope
rcrl
lds
test
dec
cmpsl
cmpl
mov
sub
add
sarl
fisttps
scas
sar
add
daa
push
mov
xchg
das
fwait
pop
inc
xlat
orb
out
add
je
cmp
jmp
sarl
jno
clc
cmpsb
inc
jae
xchg
test
insl
ljmp
cwtl
aas
mov
or
fisttpll
cli
sub
jle
imul
sbb
rclb
inc
icebp
outsl
shrb
jmp
int
data16
and
pop
insb
fisubrs
inc
les
inc
inc
adc
ds
jb
nop
fsubrs
mov
fcomip
cmp
xchg
and
cmp
pop
movsl
or
and
cmpsb
incl
les
cmpsl
scas
mov
int3
sbb
mov
add
mov
jns
xchg
call
pop
mov
or
push
cmpsl
jae
sub
int3
imul
ja
jle,pn
cmp
sar
cmp
xchg
jns
sbb
arpl
fcoml
loope
insl
dec
push
pop
mov
in
shrl
xchg
cs
in
push
cwtl
mov
lods
inc
mov
jecxz
sub
jne
mov
nop
mov
je
decl
nop
stos
iret
in
sub
loope
mov
sub
clc
pop
outsb
inc
xor
adc
fidivs
jle
push
mov
out
inc
and
cmp
lret
cs
ljmp
xor
jmp
push
sarl
sub
pop
loopne
incl
test
cmp
js
test
sbb
add
dec
rolb
call
jae
or
or
and
ljmp
cltd
cld
arpl
decb
sahf
out
cltd
mov
cmpsl
mov
incb
adc
test
lret
es
dec
mov
in
sarb
int
inc
aam
pop
lock
loopne
je
or
icebp
decl
mov
sub
lods
inc
mov
mov
test
add
jmp
lcall
nop
push
dec
adc
or
outsl
dec
jno
fdivl
addr16
adc
clc
mov
iret
or
inc
or
or
js
xor
mov
adc
push
jbe
push
call
cld
out
and
jo
roll
nop
clc
pop
mov
jecxz
lea
jmp
xor
cmp
aaa
mov
jae
test
cmp
jmp
or
pop
inc
in
subb
repnz
lods
push
inc
mov
into
popf
and
lea
leave
or
subb
decl
out
pop
gs
lds
lret
mov
aas
test
xorb
test
sub
dec
repnz
nop
mov
jecxz
mov
in
adc
decl
inc
std
scas
or
addr16
cmp
inc
inc
and
xor
lcall
jge
inc
out
mov
jnp
inc
leave
and
jns
mov
incl
stc
sub
repnz
or
and
jg
lock
lock
loop
jae
arpl
add
rcrb
cli
add
lahf
shrl
into
inc
sti
jle
cmp
enterw
xchg
sub
lcall
pusha
pop
jnp
sbb
fstps
clc
sub
jmp
pop
shll
adc
scas
rolb
pop
int
fimull
mov
push
subl
jg
pusha
or
enter
cmp
dec
hlt
mov
pop
push
loope
dec
push
jnp
xor
out
sbb
push
cli
push
scas
in
fnstcw
sar
popa
sbb
and
dec
in
rorb
mov
cltd
scas
cli
lcall
adc
clc
sbb
push
dec
sbb
xor
faddl
shll
scas
insl
lea
loopne
xchg
leave
xchg
ds
cmp
pop
test
or
into
jge
sbb
test
je
adc
dec
sub
adcl
ret
cmp
inc
decl
mov
stc
stos
lock
outsb
cmp
fldl
or
call
ds
mov
push
test
in
mov
lcall
add
mov
outsb
aas
inc
in
mov
or
jg
jbe
ret
xor
jecxz
mov
movsb
jo
dec
and
pop
xchg
test
inc
jne
xchg
mov
scas
ljmp
aas
scas
mov
xchg
pop
dec
cld
fbld
lock
out
jns
fwait
add
cltd
pop
call
dec
inc
dec
scas
add
xchg
mov
loopne
xor
push
mov
lcall
xchg
mov
mov
popa
xor
stos
pop
fcomip
jg
fmull
mov
pop
jne
jne
pop
push
pop
lcall
inc
popa
push
lds
push
add
call
fwait
jbe
mov
mov
fisubrl
mov
orl
test
mov
bound
decl
mov
xchg
lds
mov
test
xor
mov
or
cli
outsl
incl
xorb
push
addr16
cmpsb
jnp
cmpsb
sahf
loopne
lahf
sti
aas
test
and
insb
hlt
cltd
mov
mov
ljmp
mov
adc
stos
ds
and
dec
cmp
add
cmp
das
sarb
xor
cltd
cltd
shlb
sub
inc
mov
out
clc
std
push
xchg
repnz
test
fwait
xchg
lods
into
jne
xor
add
inc
add
and
adc
mov
mov
jp
sbb
sub
add
xor
adc
ljmp
cmp
loop
or
scas
jge
push
loop
cmp
sub
cli
xchg
test
mov
ljmp
fcomps
fdivrl
cmpsb
sub
add
pop
ljmp
xor
cld
and
or
sbb
call
xor
std
pop
xchg
mov
and
mov
add
jge
inc
dec
or
sbb
lcall
repnz
push
push
repnz
nop
inc
pop
insb
shrl
daa
jae
cmp
jp
std
and
stos
xchg
scas
mov
scas
xchg
test
out
or
xchg
bound
mov
fsts
and
cmp
cmp
sbb
cmp
es
fisttpll
test
in
cmpsl
cli
mov
stos
mov
push
mov
cltd
push
add
incl
cmp
int
adc
cmp
test
mov
fwait
cli
cld
jg
hlt
push
mov
sbb
inc
cmp
clc
mov
mov
push
call
inc
pop
xor
lds
inc
lcall
call
sbb
bnd
sub
mov
nop
test
pushl
scas
fsts
xchg
ret
mov
cmpsl
pop
in
dec
and
sbb
shll
loope
mov
repz
push
xchg
adc
lcallw
xchg
std
adc
gs
mov
xchg
repnz
dec
cld
loop
and
add
pop
cmp
adc
ds
mov
xchg
cwtl
rorl
xchg
stc
test
ret
mov
out
clc
lcall
sahf
lcall
fs
pop
mov
xchg
jle
icebp
lcall
cld
mov
loopne
mov
cmpb
lods
cmp
lock
jmp
shll
add
jecxz
rolb
jmp
xor
pushf
loope
xor
xchg
jb
inc
stos
idivl
out
out
mov
test
daa
mov
repnz
cmpsl
lcall
aam
fidivrs
jg
fbstp
xchg
scas
arpl
sahf
repnz
fs
xchg
test
push
in
lcall
cmpsb
sub
fisttpl
insb
lahf
push
mov
pop
inc
clc
outsb
jecxz
mov
dec
sbb
add
fwait
loope
jge
aad
fldcw
popa
enter
jl
fsts
push
loop
mov
mov
mov
lcall
int
push
mov
movsb
mov
nop
mov
clc
filds
adc
or
xchg
in
movsb
incl
loop
cli
ljmp
mov
test
andl
sbbb
popf
cli
decl
enter
nop
jne
pop
int3
cmpsb
mov
adcb
jmp
adc
mov
push
mov
ds
pushf
adc
adc
fwait
pop
push
add
adc
pop
lods
pop
mov
lcall
mov
sbb
and
ljmp
stos
add
enter
push
xchg
outsb
and
js
mov
mov
out
test
dec
outsl
dec
jp
cmpsb
jle
mov
and
test
aaa
jmp
xchg
int3
cmpl
fnstenv
ljmp
out
mov
clc
sub
add
inc
or
lock
and
and
mov
sar
shll
repnz
js
shll
aaa
or
jmp
stos
subb
movsb
lret
push
dec
incl
int
lods
xchg
js
push
int3
and
add
xor
lcall
pushl
add
loop
ds
jl
fbstp
mov
out
mov
xor
push
jns
bound
xor
lcall
push
jae
imul
jno
das
push
out
aas
jbe
jg
es
ljmp
popf
scas
imul
lods
or
jle
pop
push
push
cmp
outsl
jl
cmpb
in
movsb
scas
bound
jae
dec
mov
hlt
lods
cwtl
adc
gs
loop
sbb
pop
fdivrs
mov
xchg
hlt
xchg
daa
dec
cld
or
pushf
push
push
data16
inc
les
mov
fadd
and
dec
sub
xchg
mov
jno
inc
mov
xor
enter
enter
fistpll
add
lds
mov
mov
lahf
clc
out
mov
sar
push
addr16
ljmp
out
push
pushfw
push
and
cmp
cli
pop
cli
mov
aaa
imul
mov
fiadds
mov
jae
mov
inc
cmp
daa
pop
xchg
inc
in
cmp
xor
incw
sub
sbb
sub
or
test
inc
popa
out
push
ljmp
mov
add
sahf
dec
ss
pop
inc
lahf
ja
dec
leave
mov
adc
mov
xor
test
cltd
cltd
jb
push
fwait
and
sub
lcall
jl
bound
cmp
add
add
fcoms
xchg
inc
mov
mov
mov
inc
test
cli
mov
lret
add
sbb
das
data16
clc
adc
mov
xchg
repnz
push
sahf
cwtl
cmpsb
and
imul
xchg
les
mov
adc
popf
aaa
inc
and
arpl
cld
mov
pop
mov
or
ljmp
jecxz
pop
push
push
pop
dec
and
mov
gs
aas
adc
cmpsl
lds
lods
and
mov
add
cmp
aad
adc
lds
mov
mov
fcomip
ds
in
sbb
jno
es
mov
xor
mov
nop
repnz
cld
stos
call
test
int
stos
adc
mov
cmc
mov
push
add
fwait
aaa
push
addl
cmpsb
jb
popa
loop
mov
inc
jns
fistpl
mov
fwait
pusha
setae
dec
fmuls
mov
daa
inc
incl
ds
or
pop
mov
lea
out
mov
jmp
jb
fwait
adc
xor
mov
scas
ljmp
test
mov
cmpsb
iret
call
or
in
xor
push
ds
fmull
lods
negb
decl
jnp
mov
sbb
or
mov
movsb
jns
subl
push
iret
mov
sub
cli
or
std
mov
out
test
in
xchg
push
cmp
pop
cli
das
dec
xchg
sbb
xlat
xor
imulb
pop
mov
xchg
hlt
decl
pop
ficoml
movl
add
cli
inc
ljmp
push
xchg
rcll
dec
add
shrl
orb
out
rorl
mov
push
mov
mov
outsl
fsubrl
xor
movsl
clc
popa
sarl
imul
jle
mov
and
ljmp
call
test
inc
shll
es
lods
and
insb
lods
add
popf
fcomps
ja
dec
dec
jp
lods
cmp
lock
ljmp
cli
xor
jecxz
popf
js
andb
pop
mov
inc
fcomi
mov
push
dec
add
adc
pusha
or
sub
movsb
xchg
outsb
add
ja
mov
lock
lods
xor
xchg
cmp
xor
gs
xchg
xor
sbb
and
in
adc
cmp
mov
jg
loope
iret
sahf
sub
es
sub
or
jg
out
es
imul
xchg
mov
and
stc
and
xchg
sub
jmp
adc
jmp
in
mov
cmp
mov
push
popf
clc
and
ljmp
lret
and
lods
int3
pop
xchg
rorb
incl
mov
sbbb
pop
sti
sbb
loope
dec
cs
cmpsb
cs
jns
test
out
cmp
push
scas
mov
cmp
fisubs
xchg
sub
or
mov
int3
sbb
jbe
nop
inc
aas
push
inc
aaa
sub
sbb
cli
inc
jmp
cmpsb
repnz
aas
mov
push
pop
repz
loope
sub
pop
daa
fisubs
mov
and
jb
sub
inc
incl
and
pop
iret
or
adc
xor
sub
dec
inc
test
aaa
sub
push
mov
sub
add
insl
dec
pop
fldcw
inc
cmp
scas
movl
enter
pusha
cli
xor
sub
in
in
push
aas
dec
mov
cli
mov
fisttps
xchg
xor
ljmp
rcrb
adc
xchg
add
and
and
into
and
mov
popa
int
mov
add
adc
or
fmuls
fcoms
add
lds
cmpsb
lds
jg
cs
insb
push
dec
jne
mov
loopne
cld
sbb
add
add
mov
sub
int3
dec
dec
out
and
or
lahf
pushl
jns
add
jbe
mov
ds
pop
lcall
pop
jns
faddl
dec
movsb
sub
mov
fwait
hlt
and
repz
mov
sbb
mov
add
cli
jne
adc
decl
xchg
jne
mov
and
or
aas
mov
sub
rcrb
fldt
xchg
call
mov
incb
adc
stc
xor
lret
push
imul
fidivrs
stos
sub
aaa
shrl
jg
loope
push
push
and
push
fiadds
xor
sti
sbb
pushl
add
fsubrl
repnz
cli
es
adc
cmp
cmp
test
inc
jne
jno
sub
call
inc
pushl
xchg
and
cltd
je
cmp
mov
mov
push
jmp
stos
mov
imul
xchg
aas
shl
and
idivb
incl
mov
lcall
repnz
popf
sbb
or
incl
pop
lahf
das
repz
stos
inc
mov
cmp
mov
pop
mov
cmp
icebp
pop
int
pop
xchg
test
dec
notb
out
les
xchg
or
test
lods
loopne
pop
test
mov
sbb
cmpl
pushl
into
xor
mov
inc
mov
nop
lods
mov
movsl
lock
std
mov
mov
lcall
jg
jp
sbb
push
mov
rcr
cld
pop
mov
xchg
pop
stos
adc
pop
pop
call
mov
cmp
dec
leave
add
push
mov
xchg
cmp
hlt
lods
pop
std
das
sbb
ljmp
sub
jmp
fiadds
xchg
mov
lret
mov
test
scas
mov
jge
scas
adc
xor
clc
dec
out
xchg
int
test
push
mov
jno
and
addb
pop
jne
sub
loopne
mov
mov
sbb
loopne
mov
popf
test
jne
xchg
mov
mov
cld
add
add
loop
sub
test
call
inc
mov
pop
mov
or
sub
xor
icebp
or
and
outsl
cli
cs
adc
sub
adc
mov
pop
dec
aas
dec
call
rcrl
fistpll
adc
sbb
pop
xor
sbb
aas
int
pop
push
shrl
in
test
mov
pop
push
into
xor
mov
nop
sub
xor
ljmp
pop
mov
add
ljmp
call
dec
mov
test
incl
push
shlb
cli
cltd
jle
sbb
mov
jg
imulb
pop
adc
pop
mov
cwtl
xor
dec
es
nop
arpl
loope
lea
clc
les
xor
sub
inc
add
insl
int
scas
or
arpl
mov
cli
push
inc
cwtl
xchg
in
cmpsl
ret
clc
cs
pop
into
insl
sar
jg
adc
rorb
pop
xlat
test
mov
lea
mov
mov
sbb
sbb
push
pop
or
cmp
in
jbe
add
mov
jmp
aas
dec
enter
or
test
fadds
xchg
xchg
add
dec
inc
repz
ljmp
cmp
mov
push
dec
ret
and
cld
iret
jg
or
push
in
cmp
pop
jbe
out
push
jo
dec
ljmp
cmp
popf
push
add
incl
lea
push
cmpsb
ss
lods
lds
add
dec
fwait
cld
mov
adc
je
xor
out
mov
out
mov
js
mov
es
pushf
and
cmp
jecxz
int
sbb
es
and
dec
sbb
hlt
push
xchg
xchg
mov
lea
sbb
xchg
and
adc
into
xor
add
ljmp
sub
je
mov
mov
add
inc
cmpb
jae
push
jmp
jp
lret
loope
mov
shll
popf
aad
test
jns
mov
les
mov
test
cmpb
ljmp
or
pop
push
loope
popf
cwtl
sub
inc
dec
test
lea
loopne
jo
inc
sahf
sub
dec
jmp
mov
subb
decl
cmp
clc
das
xchg
mov
cs
sbb
adc
mov
aam
xor
mov
xchg
dec
retw
push
push
out
les
loopne
stos
push
cmpl
rorb
in
iret
js,pt
repnz
mov
out
mov
mov
outsl
cli
cmp
jg
mov
nop
arpl
in
popf
dec
sub
lahf
or
fstps
movsb
mov
clc
cmpsl
xchg
iret
daa
mov
push
cmp
mov
icebp
fistps
push
push
fildl
popf
and
pop
popf
xchg
dec
mov
push
mov
nop
inc
and
mov
stc
mov
adc
sahf
pop
mov
test
outsl
clc
ss
clc
outsb
and
push
xor
nop
loope
and
push
pop
fmuls
add
mov
add
lock
inc
cmpb
dec
sbb
mov
lahf
test
scas
jg
pop
insb
out
add
repnz
sbb
loope
stc
cmp
ljmp
movl
cld
or
lods
jl
out
mov
test
int3
hlt
mov
call
loope
sbb
pop
dec
jo
pop
test
incl
cmpsl
ds
mov
jns
in
inc
clc
xor
jb
out
mov
stos
clc
lea
or
pop
mov
cmp
ss
adc
sbb
cld
mov
sbb
mov
and
stc
adc
stos
jp
adc
popf
push
jge
dec
scas
inc
je
call
cli
lcall
cmp
cmp
sbb
clc
call
rcll
pop
es
lcall
sbb
dec
add
cmp
cld
pop
inc
jno
adc
sub
push
xchg
ljmp
cmpsb
jg
sub
sub
xor
hlt
in
test
sub
ljmp
das
fnstenv
popf
ja
je
nop
ficoms
mov
das
test
jge
int3
sbb
push
dec
dec
loop
mov
imul
test
cmpsb
stc
or
jne
mov
and
and
imul
mov
std
or
das
jbe
and
stos
add
mov
fcoml
xchg
in
pop
dec
adc
scas
js
xor
mov
mov
lcall
movsb
jge
pop
imul
mov
push
cli
xchg
js
mov
sub
and
lahf
aam
add
int
adc
lds
jmp
movsb
jmp
stos
clc
pop
mov
inc
insl
sbb
aaa
mov
out
cs
jb
add
loopne
adc
dec
loopne
push
dec
js
outsl
lds
bound
outsb
pop
inc
std
pop
dec
cltd
rorb
pop
jno
jnp
sbb
inc
or
loope
mov
jno
cmp
add
push
adc
mov
sbbb
daa
nop
out
sbb
add
dec
inc
daa
add
sub
lcall
jb
cmpsl
fsts
adc
pop
jne
jp
inc
adc
out
mov
sbb
das
jge
dec
jmp
fs
mov
ljmp
fldcw
out
stos
call
inc
fists
std
inc
jp
and
stos
and
jmp
jge
bound
scas
mov
cs
roll
bound
inc
xor
fmull
and
stc
push
sti
icebp
pop
xchg
cmp
scas
sti
xchg
add
inc
popa
pop
pop
icebp
adc
mov
or
in
mov
push
stc
int
aam
push
rcr
mov
test
mov
icebp
adc
jp
je
inc
jns
adc
inc
in
pop
inc
outsl
sub
mov
jl
aas
ljmp
subl
inc
jle
xlat
sub
fidivrl
std
lcall
scas
adc
push
jge
inc
push
gs
iret
hlt
pop
lods
xchg
mov
and
movsb
stc
in
push
fmulp
aaa
mov
pushf
leave
icebp
and
call
nop
cmpsl
mov
ficoml
or
hlt
clc
push
movsl
aaa
imul
scas
push
ds
xchg
cmp
pushf
mov
fbld
jmp
sub
in
pop
xchg
mov
mov
pop
cli
dec
jne
hlt
sub
movsl
dec
mov
sub
movsl
mov
and
outsl
mov
cmp
in
test
dec
mov
jnp
sarb
sub
hlt
xchg
imul
repz
scas
mov
das
sub
aaa
add
sbb
push
xor
ss
ljmp
xchg
mov
and
and
mov
movsb
add
lea
cmpsb
out
and
sub
jmp
mov
and
outsb
lcall
subb
cmp
mov
mov
stos
enter
mov
mov
jle
or
hlt
test
xchg
inc
cwtl
or
subl
lds
mov
inc
jg
mov
xchg
pop
cmp
sub
mov
clc
push
pop
mov
pop
mov
inc
jbe
xchg
gs
cmp
push
xchg
mov
test
or
nop
nop
sbb
les
jecxz
std
cmpsb
pop
pushf
sbb
stc
xor
cmp
jecxz
adc
clc
inc
xor
xor
jg
int
addr16
mov
pop
ljmp
loopne
movsb
into
fcomip
pushl
mov
rcrb
mov
xor
mov
ljmp
mov
mov
mov
xchg
or
nop
dec
inc
pop
push
mov
stos
in
aas
mov
mov
mov
repnz
test
adc
mov
das
push
and
je
call
stc
push
repnz
test
mov
push
lahf
dec
lods
cli
fdivrs
movsl
dec
xor
or
mov
les
xor
jmp
movsl
sub
mov
jge
xchg
push
jne
scas
inc
cld
jg
fstps
out
inc
add
ja
ret
iret
rcrl
daa
push
add
orl
mov
sbb
or
fidivrl
std
jo
jle
addl
lcall
je
jg
enter
cmpsl
add
stc
jmp
pop
sbb
add
aas
test
out
push
cmpsl
mov
mov
out
test
es
xchg
scas
mov
gs
das
loope
lock
idiv
lahf
push
mov
mov
pop
sbb
push
movsl
add
push
cwtl
cmp
mov
xchg
xor
pop
scas
pop
add
leave
or
clc
bound
mov
inc
xchg
pop
in
adc
push
scas
in
cld
movsb
adc
xlat
sub
ret
call
lcall
xchg
mov
test
adc
add
out
inc
mov
pusha
jecxz
adc
imul
pop
loop
add
insb
sarb
into
addps
xchg
xor
call
dec
mov
notb
shrb
mov
xor
shlb
movnti
pop
xchg
xchg
mov
int3
lahf
sub
filds
clc
incl
inc
dec
repz
pop
and
ljmp
mov
dec
jecxz
mov
jo
ljmp
clc
cmp
cmp
bound
or
xor
test
aaa
scas
dec
mov
shll
inc
and
repnz
pop
outsl
fimuls
in
xor
call
cmp
test
or
cwtl
pop
add
inc
dec
les
push
sbb
ja
add
lret
ficompl
xchg
cld
adc
aaa
pop
lods
call
test
sub
jecxz
out
or
jo
adc
lcall
pushf
out
inc
call
dec
fistl
mov
cli
push
scas
lock
inc
lock
test
xor
jmp
jae
lcall
ret
inc
fists
negb
xor
adc
repnz
pop
daa
in
imul
pop
inc
into
orb
jno
insb
lods
mov
fdivp
call
mov
add
lahf
xor
cmp
dec
cltd
shlb
test
mov
int
imul
cmp
pop
test
cmpsb
mov
sahf
xchg
jo
decl
cmpsb
jae
push
inc
clc
cs
dec
and
push
mov
outsl
jg
lcall
imul
mov
push
scas
cmpsl
rolb
mov
mov
jo
ficompl
adc
or
mov
ds
ds
fisubl
dec
insl
xor
adc
out
xchg
inc
push
add
aaa
pop
xor
xor
xor
ljmp
mov
or
lcall
lcall
and
cmp
and
push
inc
imul
popl
mov
cmp
and
cmp
sub
cmp
pop
push
cmp
cmp
mov
pop
pop
fs
and
in
or
jmp
jns
adc
push
xchg
inc
inc
pop
jns
pop
add
mov
jg
inc
aad
adc
add
add
sub
cmp
stc
inc
clc
xor
mov
in
imul
cmp
fisubs
out
je
push
jl
or
and
dec
ja
inc
pop
mov
xchg
jno
jno
push
bound
ret
or
push
loop
cld
lock
fs
movsl
inc
dec
aas
sarb
gs
push
dec
out
mov
mov
lcall
sbb
rorl
jmp
jae
jmp
and
sub
cmp
shll
ss
sahf
shrb
xchg
adc
push
add
std
das
mov
pop
outsb
mov
push
fidivrs
cmp
lods
decl
lcall
cltd
lock
adc
dec
aas
cld
inc
sbb
mov
adc
icebp
decl
pop
adc
iret
mov
mov
fbld
imul
call
push
fildl
mov
or
icebp
incl
enter
push
stos
fldcw
int
jg
mov
push
push
mov
or
daa
add
decl
cmpsb
jmp
pop
mov
jg
or
jle
cmp
xor
cmp
dec
fmuls
out
pop
cmp
test
mov
imulb
jno
in
mov
mov
aas
and
or
fdiv
fwait
dec
and
in
cmp
mov
call
loopne
shl
inc
aam
push
cld
xor
inc
in
pop
jnp
sbb
imul
mov
inc
rclb
xchg
clc
dec
bound
js
jns
mov
jo
xor
add
mov
push
loopne
scas
mov
jp
sbb
cmpsl
lcall
out
movsb
dec
sub
push
in
add
mov
sahf
push
incl
mov
scas
xor
test
mov
fwait
clc
ss
aam
sub
push
mov
gs
loop
lds
lods
popf
test
dec
lcall
and
arpl
xor
ljmp
adc
mov
call
dec
popf
inc
test
filds
jo
insb
or
mov
iret
cmpsb
mov
sub
dec
inc
in
popf
cltd
les
mov
adc
fwait
push
mov
sar
decb
aam
xor
mov
mov
sbb
incl
dec
roll
mov
xor
pop
inc
jg
cmp
and
ljmp
mov
mov
imul
and
int
jb
adc
scas
cwtl
inc
pop
and
movl
or
loopne
pop
repnz
in
pop
lods
add
ljmp
inc
popf
cld
movsb
stos
scas
rolb
icebp
out
pop
push
jo
dec
movsl
mov
pusha
dec
js
ljmp
mov
fdivl
aas
lret
push
lcall
pop
inc
lds
shlb
scas
repz
mov
sarb
icebp
sbb
dec
pop
inc
loop
xchg
stos
loope
mov
push
call
daa
jns
loopw
jnp
sub
jb
xchg
stos
mov
push
push
dec
mov
pop
ss
sub
push
in
dec
pop
loopne
jecxz
dec
dec
xor
fwait
fwait
mov
mov
popf
lods
mov
fsubl
mov
mov
call
jg
rcrl
cmp
jg
test
loopne
mov
ljmp
and
add
sub
popa
ljmp
addr16
pop
adc
ds
stos
testb
ljmp
xchg
inc
mov
fists
loop
incl
loope
inc
shrb
mov
scas
sub
sbbl
or
mov
arpl
mov
repnz
sub
mov
dec
xchg
and
loopne
mov
cmp
out
adc
cmpb
ljmp
jecxz
inc
aaa
stc
das
dec
sbb
es
and
in
mov
and
incl
jmp
ljmp
add
pop
jne
pop
adc
and
push
decl
pushl
adc
and
mov
inc
xor
sbb
push
push
and
loope
xchg
inc
push
pop
sti
xor
jmp
xor
sbb
in
mull
ja
stos
dec
and
sbb
xor
adc
push
pop
repnz
jmp
xchg
aam
jle
je
daa
mov
pop
subl
clc
aas
push
pop
aaa
inc
loop
mov
cmp
push
adcl
out
cmpsb
out
mov
movsl
mov
incb
cwtl
into
cmp
lds
js
arpl
sbb
inc
call
mov
jno
push
cmp
push
lcall
addr16
gs
cmp
popa
gs
mov
movsb
xor
xchg
dec
enter
std
aad
rolb
mov
pop
and
mov
push
mov
xor
dec
decl
loope
add
sub
sub
cwtl
loopne
lcall
shll
mov
cmpsl
and
pop
in
dec
jecxz
stos
xor
sbb
mov
enter
fbld
std
outsb
push
fcoms
fldenv
stos
mov
sub
add
mov
pop
or
iret
xorl
sbb
call
call
add
fistl
test
xor
mov
push
ficomps
dec
imul
jns
push
jp
fs
cmp
jbe
imulb
mov
mov
icebp
jg
sti
sub
xchg
addr16
xor
lods
mov
inc
mov
push
loopne
loopne
data16
inc
into
out
mov
cwtl
jle
icebp
push
adc
fdiv
das
fadd
mov
ljmp
add
adc
mov
xchg
rol
adc
mov
loopne
cld
jl
jmp
push
sbb
fnstcw
mov
mov
hlt
xor
lea
hlt
loope
add
shll
mov
ljmp
add
fiaddl
dec
pop
jg
jg
xor
clc
jnp
adc
inc
sub
das
mov
decl
arpl
les
xchg
xchg
lcall
int
jmp
mov
cmpsl
loopne
pop
test
sub
notb
or
mov
lret
cmp
fcoms
out
rcrl
xchg
into
sahf
adc
dec
imul
or
xchg
xchg
test
das
jns
dec
mov
cwtl
test
mov
inc
inc
adc
sbbl
ss
lret
mov
pop
push
sbb
inc
pop
pop
gs
lcall
xor
xor
hlt
inc
mov
sbb
and
adc
adc
insb
mov
mov
cmpsb
mov
test
dec
call
pop
cmpsl
scas
lcall
test
cld
aam
mov
ss
je
mov
add
xchg
jge
outsl
pop
into
call
mov
jmp
mov
aas
incb
adc
cmpsb
js
inc
fucomip
ljmp
jbe
xchg
xor
repnz
cmp
je
cld
and
xor
ljmp
aam
mov
fidivrl
mov
or
sbb
mov
out
cli
mov
jnp
add
push
fdivr
push
out
icebp
iret
pop
clc
in
xor
loopne
lea
aas
sub
std
stos
movsb
ljmp
lcall
push
mov
shufps
add
lcall
fbld
jp
call
incl
cld
out
pop
mov
push
test
scas
pop
scas
mov
fsubrs
test
xchg
cmpb
and
jg
or
dec
adc
xor
incl
mov
loope
jae
or
fs
stos
adc
inc
lret
lcall
imul
out
sbb
lds
call
push
push
loopne
push
test
mov
jp
add
mov
push
lret
loopne
test
ljmp
shlb
loopne
pusha
adc
ss
xor
cmp
lcall
std
dec
cmp
pop
or
xor
mov
mov
sbb
rcrl
insl
ds
pop
sub
cs
ds
lahf
fisubs
add
push
ss
stos
shlb
mov
dec
fsubr
push
js
adc
daa
call
jo
aaa
scas
mov
loope
push
pop
fxch
adcb
or
push
jg
repnz
cmp
cmp
fidivs
clc
cmp
notrack
aad
mov
into
movsl
inc
or
das
lret
sub
inc
outsb
mov
call
andb
and
adc
es
add
cmp
dec
add
ds
cli
cld
xchg
pop
stos
dec
pop
xchg
sub
data16
popf
ds
hlt
mov
mov
mov
pop
push
lcall
dec
jnp
imul
sti
or
aaa
fldenv
incl
jg
loopne
imul
or
sub
sub
scas
gs
decl
cmp
push
push
cmp
imul
std
add
mov
sbb
cmp
idivb
in
mov
mov
pop
dec
and
mov
jg
aam
or
data16
xor
aas
jmp
lods
ret
xchg
add
nop
or
in
add
and
cwtl
andps
mov
sbb
and
int3
mov
icebp
adc
and
adc
or
push
sar
jle
cli
and
clc
pop
outsb
sub
stos
add
lock
push
test
in
push
mov
mov
mov
clc
lahf
cs
sub
mov
insl
add
add
outsl
push
inc
cmpsl
jb
mov
mov
add
and
push
cltd
scas
pop
outsb
ja
xchg
xor
es
iret
xor
int
incl
lcall
les
sbb
cmp
pop
and
cld
xor
xchg
cmpsb
outsb
mov
mov
mov
cld
stc
hlt
jmp
aad
hlt
hlt
cmp
movsb
dec
xor
bound
sub
cmp
jmp
mov
inc
push
push
outsl
inc
adc
mov
sbb
inc
push
lods
pop
push
pop
xchg
sbb
xchg
out
add
shll
ljmp
push
or
xchg
movb
movsl
jns
pop
lcall
mov
lods
mov
sti
aaa
lods
mov
inc
ret
popf
xchg
sub
adc
jnp,pt
jo
xchg
mov
jns
in
mov
mov
dec
int
pop
insb
mov
insl
scas
xchg
xchg
mov
xchg
lods
xchg
movsb
mov
pop
mov
add
aad
movsb
jle
xor
lahf
add
jo
sti
out
lcall
mov
jo
in
fisttpl
fcmovu
lahf
add
adc
imul
rclb
and
xchg
pop
fimuls
addb
aas
jle
pop
mov
push
imul
lods
imul
and
test
push
decl
mov
xchg
jno
add
or
jbe
dec
loopne
sub
mov
ds
pushf
lods
mov
push
and
mov
xor
movsl
emms
mov
jg
and
sub
xor
push
adc
test
std
lcall
mov
mov
pop
dec
cli
cld
add
sub
inc
mov
and
inc
incl
lock
out
movsl
push
lock
nop
mov
addr16
xchg
call
add
loop,pn
call
push
inc
in
xchg
pop
and
mov
test
cld
push
shlb
pop
stc
pop
push
pop
fsubrl
jle
aas
mov
sbb
push
arpl
cli
ss
add
jbe
movsb
aaa
icebp
or
loope
sub
mov
mov
mov
cmp
jmp
idiv
push
call
mov
cwtl
in
ljmp
sub
pop
adc
push
xorl
popa
test
xchg
scas
xchg
inc
add
push
hlt
sbb
shlb
cwtl
outsb
rolb
loopne
cmp
imul
ret
call
int
movb
lds
mov
adc
push
cmp
sub
iret
sets
pushf
jg
sub
stc
cmp
out
mov
push
jmp
out
add
or
fcmove
pop
mov
mov
xchg
and
mov
xor
sbbb
arpl
dec
add
jp
mov
sbb
xchg
fwait
test
xchg
sbb
arpl
push
rorb
ret
lock
cli
out
into
adc
fadd
xor
fstl
fisttpll
hlt
mov
add
add
jg
imul
mov
and
pop
jns
push
std
mov
dec
mov
movsb
incb
pusha
lds
movsb
lds
jnp
xor
jmp
inc
loope
daa
push
scas
push
dec
mov
mov
dec
mov
sub
decl
and
add
xchg
cmp
sub
xchg
mov
insb
cmp
mov
jg
ret
sbb
movsl
adc
jp
lods
or
xchg
sub
fsubl
fwait
lds
jmp
ds
cmp
sbb
cs
xchg
or
dec
push
cld
sti
cld
out
lcall
rcrb
mov
add
ss
in
lcall
fisttps
sbb
push
cmp
sbb
mov
pop
mov
insl
jmp
dec
ss
das
mov
mov
push
mov
hlt
adc
adc
pop
xor
or
cmp
or
les
in
sub
cmpb
data16
or
jg
xchg
popf
test
mov
mov
jg
push
es
ljmp
adc
add
or
das
xor
fisttpl
int
js
outsb
adc
sub
fadds
hlt
mov
incl
ret
xor
add
rolb
or
cmpsl
dec
incb
sbb
xor
jbe
inc
push
enter
outsl
sbb
incl
stc
sbb
test
mov
xchg
shrb
inc
das
loopne
mov
pop
cmpsl
loopne
mov
clc
jl
dec
sub
mov
add
sarl
xchg
cmp
pusha
xor
repnz
ljmp
cmp
pop
lods
inc
push
fsubrs
push
dec
in
mov
inc
loop
incl
enter
mov
pop
mov
adc
test
aaa
jl
adc
jecxz
push
dec
xor
xchg
outsl
das
out
mov
add
mov
xchg
lret
ret
lcall
test
shll
adc
mov
test
filds
out
pop
shlb
shrb
ja
pushl
sbb
lods
inc
clc
cs
sub
lds
frstor
mov
and
mov
addb
dec
jb
inc
sbb
dec
orb
push
mov
dec
push
mov
into
loop
add
out
sahf
iret
daa
mov
gs
jo
cli
cmp
cmp
pop
push
mov
scas
or
sbb
mov
sub
loop
add
call
repz
xchg
xlat
daa
std
sub
and
test
aad
inc
ffree
push
xor
hlt
gs
and
jle
in
je
cmp
das
and
mov
push
test
outsl
rorb
aam
or
mov
cmp
sub
fs
lcall
xchg
and
mov
clc
xor
in
cmp
test
mov
decl
pop
push
int
jg
add
lds
ja
mov
in
pop
push
pop
in
push
xchg
inc
xor
data16
inc
out
jg
mov
iret
nop
xchg
mov
cli
sar
outsl
xchg
xchg
call
mov
test
ja
inc
pushl
cmp
mov
sar
incl
mov
or
cmp
sbb
push
dec
les
xchg
flds
cld
lcall
popa
stc
sbb
push
sub
lock
pop
clc
xor
pop
pop
xchg
push
dec
jmp
and
cmpsb
xor
hlt
push
pop
sti
xchg
cmp
call
pop
inc
dec
in
and
mov
jns
inc
negb
push
sub
jg
dec
sbb
xor
aas
cmc
mov
ds
push
fimuls
dec
add
maskmovq
ljmp
xchg
arpl
adc
pop
loope
push
and
cmp
push
push
mov
imul
aas
or
or
xor
fdivs
dec
adc
adc
ljmp
in
mov
jns
loop
mov
mov
gs
and
out
pop
ret
jge
jns
addr16
add
xchg
pop
add
add
add
sbb
mov
jbe
push
jae
lcall
push
out
daa
in
mov
popa
js
test
ja
push
mov
sahf
sub
xor
out
mov
hlt
sti
setno
sbb
iret
cmpsb
pop
jl
fucomip
push
lods
or
dec
call
fiadds
dec
shlb
xor
cmp
push
push
in
lea
clc
sub
jo
jg
jl
stos
dec
test
ja
daa
int
std
arpl
sub
jl
loopne
ficomps
jg
incl
out
adc
sub
push
in
test
push
ljmp
jg
push
mov
idiv
mov
aad
ds
mov
addr16
dec
mov
ss
mov
push
mov
aad
or
mov
iret
sub
push
add
pop
dec
add
movsl
sti
ds
lods
aad
outsl
dec
add
test
pop
pusha
out
sbb
test
inc
xor
cltd
lcall
hlt
jle
ficompl
in
mov
mov
cmp
out
scas
mov
js
mov
mov
adc
popa
push
dec
inc
add
cmp
push
cmp
daa
popa
or
add
mov
ds
hlt
pop
mov
jl
xchg
sahf
imul
jge
adc
in
pop
cld
es
lods
cmpl
ljmp
mov
push
xchg
dec
adc
or
repnz
shrl
and
decb
call
add
cltd
test
shlb
in
push
inc
fstpt
lds
dec
test
int3
or
push
inc
out
mov
in
xchg
mov
ds
add
or
xor
sub
cmp
rorb
add
mov
pop
dec
int3
pop
repnz
pop
fimuls
call
sub
aas
pop
cli
and
and
test
mov
fnstenv
inc
pop
out
clc
push
xchg
pop
sub
addb
fists
fbld
adc
es
jbe
dec
inc
mov
xor
xlat
sub
outsl
clc
pushl
out
ja
cli
mov
lret
add
pop
inc
out
int
jo
or
int3
mov
dec
dec
pop
out
push
sbb
pop
sbb
notl
pop
outsl
decl
gs
inc
outsl
sar
cmp
mov
gs
pop
clc
subb
adc
lret
cli
ja
clc
ljmp
pushl
mov
dec
inc
inc
rcll
sbb
daa
push
cli
cmp
sbb
xlat
add
xor
sti
aas
dec
add
hlt
sub
aas
inc
and
ljmp
enter
inc
push
jno
push
inc
lret
jb
in
ss
xor
inc
and
decl
icebp
push
jns
or
stc
sub
popf
cmpsb
jno
inc
cli
mov
xor
inc
push
mov
int3
pop
test
test
jmp
gs
and
add
rcrb
adc
adc
loope
ja
fidivs
aaa
jge
int3
jns
mov
cmpsb
dec
in
js
adc
jg
clc
daa
jl
or
sbb
pop
mov
repnz
rorl
ljmp
jp
std
adc
xor
rcll
or
pop
cmp
imul
mov
inc
loop
jg
xor
pop
pop
orl
mov
xchg
outsb
or
decb
aaa
mov
dec
mov
pop
stos
scas
cld
mov
sbb
std
inc
clc
das
ljmp
cli
xor
loop
push
pushl
or
stos
hlt
inc
inc
push
sarb
call
sub
adc
movq
sbb
sub
clc
cmp
xor
daa
rcr
push
push
add
incl
mov
loop
jle
call
or
std
aaa
test
sbb
pusha
sahf
xchg
mov
lea
loopne
lcall
mov
add
shlb
shll
inc
push
inc
ret
test
jmp
shr
cmpsb
hlt
pop
jecxz
dec
sbb
xchg
push
jo
fs
jne
ds
iret
sbb
sbb
cmp
mov
test
das
pushf
aaa
dec
lds
insl
and
add
int
inc
cli
jg
or
xor
out
jae
jno
test
sahf
or
mov
cli
lock
aas
mov
lret
lahf
fnstcw
cmpsl
fsubl
aas
es
stos
sbb
xchg
js
das
inc
into
sbb
icebp
xchg
dec
mov
cld
add
pop
insl
aam
push
and
mov
mov
mov
out
pop
sub
pop
rcll
lea
mov
pushl
dec
shrl
or
stc
jo
popa
in
add
mov
push
clc
and
push
or
pop
subb
mov
ss
addr16
cmp
test
insl
xchg
cmpsb
mov
loope
cmc
stos
inc
cli
setle
cmp
dec
outsb
pop
data16
push
mov
push
pop
adc
mov
xor
xchg
jnp
cmp
sub
icebp
push
mov
incl
lds
push
cmpsb
dec
cmp
push
cmpsb
cli
sbb
fdivl
push
ret
sti
push
cli
ds
shlb
cmp
push
add
fwait
sub
xor
and
cmp
into
pop
pop
xor
push
out
inc
mov
add
and
iret
shrb
fsubl
ret
shrl
mov
stos
add
push
inc
loop
mov
sti
push
adc
mov
stc
adc
xor
in
xchg
mov
incl
add
data16
imulb
xchg
popa
cmp
rolb
insl
dec
clc
pop
rcr
icebp
incl
cmp
jge
jno
mov
adc
ds
pop
iret
sub
lahf
cmp
and
call
adc
dec
aam
xor
inc
mov
fisubrl
insl
std
stc
xchg
imul
adc
lcall
call
out
mov
mov
call
jnp
int
ja
or
outsl
int3
mov
xchg
inc
div
inc
fcomip
cmp
mov
ss
or
clc
push
nop
hlt
mov
push
aam
mov
inc
jecxz
nop
clc
and
lcall
filds
in
cmp
push
lods
push
aas
lds
mov
cmp
gs
or
inc
push
aam
push
pop
and
and
lcall
jno
mov
sub
pop
int
mov
sub
cmp
sbb
scas
inc
clc
or
push
pusha
and
jbe
xchg
outsl
clc
jg
jbe
mov
repz
jl
xor
cli
mov
lods
sbb
decb
sub
xor
adc
jmp
mov
sbb
and
lcall
jo
ss
dec
shlb
mov
sub
testb
outsl
test
pop
mov
adc
add
push
loop
xchg
or
jno
and
or
mov
pop
cmp
xchg
mov
ljmp
test
fisubs
push
rclb
jg
sub
push
mov
or
cmp
add
add
and
push
add
pop
pop
mov
stc
or
jp
ljmp
jg
subb
pushl
push
out
cmp
loope
inc
pop
or
sbb
imul
xchg
push
dec
ds
lock
ljmp
repnz
inc
and
pop
icebp
ds
xor
ljmp
sub
ss
pop
push
lods
cmp
adc
lcall
jns
fdivrs
daa
out
je
out
pop
or
xchg
adc
cmpsb
sbb
fidivl
mov
cmp
ljmp
jae
push
pop
sub
popa
movsb
push
mov
loop
mov
jnp
ss
cli
cmp
out
push
jl
mov
mov
mov
push
ljmp
enter
and
lods
push
shrb
popf
or
mov
imul
push
lds
jnp
add
add
push
lds
inc
push
pop
leave
mov
cmp
jb
and
jl
inc
sbb
cmp
mov
clc
jg
mov
test
fdivrs
inc
jne
mov
aaa
push
push
inc
out
inc
fnstenv
outsb
or
fistpll
push
in
pop
mov
jge
in
and
pop
add
inc
cmp
clc
cmp
sbb
popf
xchg
push
jg
mov
mov
lock
daa
pop
loopne
outsb
pop
dec
ss
add
repnz
movb
or
cld
aas
aas
xor
sbb
ljmp
mov
arpl
dec
and
sub
mov
sahf
inc
scas
test
int3
ds
mov
add
xchg
jns
jb
and
push
push
aas
in
fadd
push
call
test
out
test
in
scas
repnz
add
ljmp
or
push
mov
push
dec
push
add
inc
ljmp
jmp
mov
in
jnp
cmp
out
adc
ret
js
jp
fimuls
add
xor
insb
adc
mov
rsqrtps
dec
cs
call
lahf
ret
cwtl
dec
out
xlat
mov
or
push
ljmp
dec
cld
push
scas
out
insl
and
push
imul
test
push
push
mov
xor
popf
jle
mov
shll
cli
daa
insl
inc
sbb
jb
jbe
inc
dec
cli
xor
mulb
push
cs
aas
data16
insb
inc
inc
shrl
mov
icebp
jmp
pop
addr16
add
mov
stc
scas
mov
lock
sbb
inc
out
mov
fldcw
add
daa
mov
mov
jecxz
ss
lods
mov
sbb
sub
popf
test
mov
cmpsb
imul
int3
pop
cmpl
cmp
or
mov
cmp
mov
clc
mov
in
or
lcall
imul
popa
jno
mov
lock
jp
pushf
mov
or
mov
scas
gs
jmp
cld
xchg
sahf
insb
lret
rcrl
les
mov
dec
hlt
fcmovnu
bound
mov
clc
jbe
sub
loopne
shll
add
in
call
lock
imul
inc
loop
aas
sti
pop
mov
outsb
lock
decl
jb
stos
ja
push
and
and
inc
repz
sbb
imul
cmp
mov
repz
push
cmpsb
popa
mov
pushl
stc
adc
rorb
cmp
sbb
arpl
sub
jns
mov
fisttpl
popf
in
ds
inc
push
jp
cmp
mov
in
in
jp
das
cmpsl
ret
shll
xchg
and
and
repnz
fimuls
cmp
mov
rolb
cmp
cmp
push
dec
push
pushl
int3
sbb
add
add
pushw
adc
sbbl
aam
inc
shl
ja
inc
jne
loope
jne
ret
push
aas
mov
imul
and
push
incl
lock
js
adc
imul
mov
add
dec
push
ret
push
push
imul
pop
stos
mov
dec
sbb
data16
lock
cli
das
push
pop
jns
cmp
filds
std
mov
incl
mov
mov
lds
fidivl
xchg
jo
cmpb
fdiv
pushf
cmpsb
shlb
in
cld
sahf
sbb
sub
mov
jb
setg
push
sbb
divb
lds
rolb
add
inc
sub
mov
inc
push
decl
pop
mov
sub
sub
mov
and
sbb
pushl
xchg
call
xor
movl
add
push
mov
lcall
mov
sub
rcrl
jg
lahf
jne
stos
pop
jmp
movsb
mov
dec
push
cli
push
mov
cwtl
decl
push
mov
subb
stos
lds
push
lods
sub
pop
pushl
lcall
inc
push
imul
mov
test
pop
insb
das
adc
loop
xchg
popf
mov
pop
jns
lahf
xchg
ja
addl
jnp
int3
loop
and
mov
insb
cmp
pop
cmpsb
dec
inc
sar
loop
addb
or
mov
push
pop
out
xor
aas
int3
or
jnp
dec
call
push
sub
sti
roll
jl
jg
push
dec
iret
pop
movsb
mov
push
inc
lods
xor
inc
movsl
cmp
cmp
sub
dec
fwait
orl
and
xor
push
test
jmp
inc
mov
push
xor
adc
and
add
cld
insb
add
fwait
je
mov
lret
lahf
mov
lods
lcall
mov
cmp
shrb
in
sub
add
decb
jle
je
adc
xchg
test
pop
mov
mov
outsl
jp
mov
decl
xchg
in
pop
inc
nop
call
or
push
adc
sbb
in
mov
inc
pop
mov
and
stos
or
dec
pop
clc
repz
stos
add
idivl
loop
mov
jge
dec
cmpl
pop
rcll
inc
cmc
jb
mov
push
nop
je
je
xchg
and
decb
or
or
ljmp
xchg
sbb
les
pushf
movsl
lea
jns
gs
ljmp
hlt
pop
add
add
xchg
add
push
iret
lock
jno
cmc
push
add
frstor
mov
lret
fsubrs
incl
sub
adc
negl
xchg
mov
loopne
clc
mov
cld
das
mov
scas
mov
cld
xor
sahf
rolb
add
xchg
cli
push
pusha
push
dec
cmpsb
rorl
mov
shll
fsubrl
shrb
jecxz
stos
movsb
push
push
or
mov
add
xchg
dec
add
inc
mov
mov
mov
stos
ret
clc
cltd
inc
orl
ret
out
jl
mov
or
clc
mov
cmc
push
pop
movsl
loop
test
iret
jb
out
inc
dec
sti
aas
lods
xor
insb
adc
mov
test
and
ljmp
push
test
adc
iret
push
push
cmp
add
jmp
lock
mov
or
and
imul
popf
mov
jecxz
cltd
rorl
test
test
pop
cltd
mov
adc
in
fs
fisubs
in
shll
cmp
push
leave
aas
dec
cmp
or
push
mov
les
test
add
or
cld
aaa
adc
and
loop
jp
sar
iret
mov
adc
mov
xchg
add
jmp
aas
int3
ss
xor
pop
mov
es
ljmp
lahf
testl
sub
cmp
pop
sbb
rcrl
incl
and
sub
add
sub
pop
adc
leave
popf
xchg
lock
push
sahf
push
jmp
arpl
cli
daa
fs
aam
loopne
mov
arpl
mov
xchg
dec
std
add
pusha
xor
pop
pop
sarb
insl
inc
dec
ret
and
test
loope
cmpsb
lods
dec
movsb
es
ret
jg
cltd
je
jmp
std
pop
ljmp
or
out
pop
mov
jno
sbb
fwait
cs
and
cmpsb
mov
xor
xor
psrad
lock
cmp
test
jb
xor
xchg
mov
lock
mov
ljmp
test
cmp
pop
dec
add
mov
mov
psubsw
xchg
stc
aas
mov
cmp
call
pop
je
sbb
inc
in
adc
and
decl
mov
xchg
fisttps
dec
int
lcall
ret
add
push
loopne
pop
pop
cwtl
adcl
fwait
sahf
aam
data16
jecxz
jg
push
icebp
mov
imul
xor
mov
popa
ljmp
pop
mov
mov
cmp
outsl
dec
loopne
cli
ja
add
out
cmp
cmp
add
movsb
push
or
jg
xchg
pop
pop
fistpll
int3
je
cs
inc
mov
js
int
aas
pop
ds
sub
or
jmp
shll
add
push
cwtl
out
adc
in
dec
cld
daa
loopne
push
arpl
sbb
cmpsb
adc
cld
sub
scas
fldt
adc
repz
cmp
inc
adc
data16
cmp
loopne
jnp
aaa
movsl
sub
and
mov
sbb
aas
gs
scas
bound
and
lds
cmpb
add
cmp
dec
lods
mov
loope
ja
mov
jns
pop
jno
cltd
addr16
inc
mov
sbb
jecxz
jae
insl
fdivrs
mov
push
sbb
outsb
lahf
fists
je
cli
mov
cmp
in
sbb
mov
mov
ret
sub
push
in
inc
pushf
ljmp
movsl
bound
sbb
pop
lds
mov
or
jecxz
sub
hlt
and
pop
imul
add
jmp
xor
frstor
xchg
pop
xchg
mov
fdivr
gs
call
pusha
jns
and
mov
daa
sbb
cwtl
test
jecxz
test
or
fisubs
sbb
incl
lock
jo,pt
or
push
sbb
sahf
pushf
mov
lock
lcall
int
or
cmp
sbb
cs
andb
mov
cmp
pop
icebp
out
shlb
mov
pop
cmp
sub
sar
jge
and
ret
cwtl
jp
jmp
fs
xchg
fsubrs
shrb
adc
aas
les
mov
ljmp
jne
arpl
jae
push
in
jo
and
adc
xchg
pushf
or
cld
adc
add
std
or
in
jb
pop
lods
in
popf
xor
mov
adc
int3
das
inc
ljmp
xor
cwtl
jo
push
call
test
aas
call
pop
cmp
faddl
dec
decb
xchg
jg
cmc
sbb
mov
addr16
int
jbe
fisttps
test
cld
mov
jno
mov
pusha
push
jno
js
pop
lock
mov
mov
inc
push
push
ds
mov
cltd
dec
sbb
sti
fldl
cmp
bound
inc
shrl
mov
or
push
popa
mov
gs
mov
xchg
pusha
fwait
fwait
outsl
and
fsubr
cmpsb
pushl
jae
push
iret
andl
leave
sub
or
sarl
and
stos
cmp
ffreep
jl
mov
rolb
aaa
fldt
int3
push
push
leave
cmc
jg
mov
xor
out
or
lret
fdivs
xchg
mov
sub
lock
xchg
mov
cmpsl
sbb
mov
sbb
mov
adcb
sbb
scas
adc
es
stos
sbb
movsb
jg
dec
int
inc
add
incl
sub
loope
gs
jg
cmpb
lock
and
imul
test
ljmp
out
lcall
andb
cmp
inc
mov
inc
mov
xchg
push
inc
mov
lds
sbb
loop
mov
pusha
jl
loopne
aaa
stos
cli
add
sub
mov
jmp
push
dec
add
outsl
and
xor
sbb
sbb
bound
popa
or
xchg
jg
loop
xchg
inc
ds
jp
cmp
fcmovnb
sub
out
dec
dec
inc
cmc
jo
cmp
ljmp
test
lcall
push
sub
xchg
jne
sub
jmp
push
push
pop
stc
adc
fbstp
shlb
arpl
lock
push
rorb
mov
wbinvd
fistl
xchg
fmull
mov
xchg
fmuls
mov
lret
std
add
push
mov
aaa
mov
adc
inc
leave
jmp
pushf
movl
or
xor
jp
ss
mov
lcall
lahf
ja
outsb
adc
jbe
jne
ss
into
jbe
les
icebp
aas
pop
push
push
sub
push
inc
decl
mov
xchg
xchg
add
dec
mov
or
jb
inc
pop
clc
call
push
xor
cwtl
sub
jbe
or
pop
push
jbe
jo
incl
mov
mov
test
pcmpgtw
sti
es
xchg
adc
mov
or
incl
cmp
push
pop
mov
popa
scas
mov
scas
clc
mov
dec
push
push
jns
insl
mov
mov
xchg
dec
shr
iret
sub
add
das
inc
lods
inc
enter
add
pop
cli
cmp
pop
decl
sbb
mov
and
ljmp
and
fcomps
jnp
pop
mov
mov
add
test
inc
add
outsl
movsb
sub
mov
call
je
inc
sub
lcall
pop
inc
sub
or
scas
cltd
daa
jp
pop
pop
in
xchg
adc
decl
dec
sub
jecxz
es
inc
jg
je
pushl
inc
incl
nop
add
pop
pop
mov
push
mov
sub
test
jg
jmp
ficoml
and
jno
adcb
cli
out
sbb
aaa
sbb
call
push
dec
arpl
repz
fwait
jg
mov
xchg
adc
stos
fwait
mov
aas
movsb
jl
insl
js
jp
pop
enter
mov
mov
mov
sbb
loop
test
aam
icebp
push
mov
js
fldenv
add
incb
and
decb
test
jp
mov
repz
pop
mov
xchg
pop
xchg
arpl
adc
ds
push
mulb
push
lods
pop
pusha
std
out
dec
inc
jne
or
or
mov
mov
out
jb
push
or
dec
ljmp
add
mov
xor
mov
xor
mov
ljmp
sub
call
leave
sub
adc
mov
popa
and
xor
mov
cmpsb
ret
mov
imull
dec
sahf
mov
inc
cld
hlt
jmp
inc
repnz
or
outsb
jg
insl
std
loop
lock
jne
aad
leave
jbe
xchg
pushl
aam
nop
jne
lret
mov
fdivs
movsl
int
scas
aad
cmp
sbb
outsl
incb
xchg
je
test
jne
movsb
call
inc
dec
movsb
cmpsl
cli
inc
push
lods
loop
push
dec
mov
and
inc
mov
pcmpeqd
mov
aam
addr16
aas
nop
fsubrs
cmpsb
icebp
scas
add
dec
lahf
inc
shll
add
pop
jnp
lret
cmp
cmp
mov
shlb
fiaddl
mov
test
pop
mov
inc
xor
add
les
test
ljmp
mov
adcb
mov
mov
outsb
sar
ja
add
xchg
mov
ja
scas
and
lds
add
mov
xchg
jnp
bound
jo
ja
cld
mov
dec
inc
pop
lcall
adc
xchg
dec
xlat
dec
sbb
sti
push
insb
sub
insb
pop
cs
decl
mov
xchg
sbb
lret
push
outsb
sahf
int
push
sub
rcrb
test
rorl
pushf
sbb
mov
push
ret
pop
adcl
mov
andl
mov
xchg
jl
inc
adc
int
cmp
test
cmp
mov
data16
push
loop
aaa
jmp
cs
fwait
push
inc
ljmp
mov
sbb
movsl
dec
pop
mov
jp
lcall
subl
mov
pop
dec
jmp
ja
loope
jno
scas
outsb
insl
mov
mov
fstl
pop
loopne
jge
cmp
mov
pop
fimuls
xchg
sub
mov
std
jmp
imul
xor
ss
mov
insb
fsubrl
sbb
push
outsb
orl
ja
mov
insb
push
sub
xchg
or
sub
stos
movsl
js
add
mov
and
dec
insl
mov
ja
decl
push
cmp
decb
add
scas
sub
sub
mov
mov
das
cmp
imul
fsubrl
lcall
test
add
sbb
mov
ss
das
cli
decl
sub
mov
jae
jno
sbb
add
jg
cmpsl
jge
jo
xor
pushf
inc
loope
inc
adc
mov
gs
lcall
aaa
loop
bound
or
dec
scas
or
aad
imul
mov
and
and
lcall
pop
mov
mov
lods
and
incl
xor
adcb
sahf
mov
mov
sub
mov
movsb
pop
sub
in
xacquire
ljmp
hlt
fidivrs
pop
inc
jle,pt
lods
push
scas
call
mov
xor
mov
jae
add
sbb
mov
mov
test
jns
adc
test
aaa
cld
xchg
sti
mov
cmpsb
ljmp
data16
mov
movsl
sbb
cmp
push
pushf
mov
lcall
push
pop
xor
outsb
dec
xor
mov
outsl
decl
data16
xchg
add
push
jo
data16
arpl
mov
daa
jne
xchg
add
jne
decl
push
or
aad
sbb
pop
cmpsb
ljmp
clc
outsl
faddl
decl
add
xor
pop
mov
cmpsb
pusha
int
pop
fcmove
dec
add
dec
das
stc
mov
dec
hlt
imul
fs
push
xchg
popa
mov
stos
xor
out
mov
lcall
mov
test
adcl
call
xchg
popf
xchg
mov
mov
ret
popf
xchg
and
testb
fisubrs
mov
enter
ljmp
lods
mov
xchg
lods
and
fidivrs
cld
pushf
mov
int
mov
mov
sub
shlb
mov
add
mov
int
lods
xchg
jmp
xlat
test
cmp
stos
inc
shrb
push
push
test
jg
lock
mov
hlt
xchg
test
xlat
stos
inc
jns
imul
push
xchg
std
rorb
pusha
outsb
test
js
mov
add
stos
xchg
hlt
mov
pop
aam
arpl
sub
rcll
cmp
icebp
lcall
ja
add
dec
mov
inc
pop
scas
pop
popa
sbb
pop
out
subb
pop
outsb
inc
xchg
stos
iret
aam
ljmp
cli
mov
jecxz
mov
bound
xor
addl
scas
mov
jbe
imul
adc
and
mov
add
xchg
loope
mov
xchg
popf
ljmp
aaa
hlt
stos
inc
pop
dec
sbb
addl
idivl
sar
aad
adc
push
daa
gs
xor
and
inc
jne
iret
xchg
sub
es
push
push
push
sub
mov
mov
bound
push
adcb
pushl
add
mov
xchg
inc
push
sub
pop
movsl
jle
push
mov
jne
and
mov
lcall
or
lods
js
mov
pusha
dec
mov
jne
test
ficoml
lcall
test
xchg
lds
insl
and
pop
mov
movsb
push
xor
arpl
das
rorb
rclb
arpl
loop
add
arpl
pushf
inc
fisubrl
popa
sbb
jns
cmp
mov
cld
addr16
mov
pop
pushf
sub
movsl
popa
imul
bound
sbb
hlt
xchg
loopne
xor
jno
pop
jl
mov
mov
pop
out
push
fs
aam
jge
enter
mov
out
outsb
cs
mov
adc
add
outsl
adc
std
jg
mov
or
push
ss
or
out
xchg
cmp
pushl
cmpsb
ss
dec
xchg
xchg
inc
test
sbb
add
outsb
xchg
inc
or
mov
add
sub
jo
jne
pop
add
xor
leave
mov
fmull
loope
mov
cmp
jno
fistps
outsl
and
dec
xor
je
lods
subl
aas
test
imul
daa
daa
ljmp
and
das
push
stc
push
pop
xchg
sbb
test
in
push
mov
testl
mov
into
insl
jb
ss
mov
jbe
inc
dec
pop
es
in
mov
xor
inc
inc
cli
sub
add
addb
jecxz
pusha
inc
inc
mov
dec
dec
xchg
mov
cmp
rorl
test
lcall
jg
jbe
test
mov
arpl
std
xchg
movsb
mov
mov
mov
jb
int
addr16
dec
int3
mov
or
mov
xchg
ret
mov
dec
inc
xchg
fldl
lods
in
mov
mov
cli
push
sbb
xor
adc
je
daa
dec
js
daa
inc
test
mov
cmp
add
mov
dec
pop
mov
dec
imul
inc
fsubs
push
adc
push
add
add
cmp
push
les
mov
mov
dec
jmp
aaa
jbe
cmc
decl
push
jbe
push
push
xchg
cmp
scas
xor
dec
inc
push
push
xchg
loopne
call
aaa
mov
sbb
inc
xchg
add
outsb
inc
jns
ja
std
daa
test
sub
pop
push
std
out
add
scas
xor
aaa
mov
or
ja
ja
sub
je
pop
push
xor
js
imul
arpl
push
jg
test
sub
inc
imul
pop
addr16
pop
or
inc
inc
mov
xor
lds
sbb
aad
jge
and
subb
js
mov
inc
sub
cmp
sbb
inc
incl
ret
mov
ljmp
adc
arpl
adc
clc
das
jae
icebp
jp
push
scas
hlt
sbb
jmp
cmpsb
push
das
xchg
push
in
cmp
sbb
dec
pop
jno
out
sub
mov
pop
mov
cmpsl
das
add
cmp
mov
insb
cmp
ds
push
aaa
and
incl
bound
dec
mov
and
or
sbb
arpl
pop
mov
test
cld
sub
das
rolb
mov
mov
sar
jg
mov
inc
mov
idivl
pop
cld
ljmp
jno
cmp
jle
xor
adc
pushf
mov
fcomip
ljmp
or
or
mov
ret
adc
movsl
icebp
mov
repz
mov
and
fisubrs
mov
push
mov
or
inc
sbbb
scas
loop
add
jmp
sub
cs
test
addl
loop
mov
push
jbe
cmp
add
mov
pop
sbb
and
adc
sub
and
sbb
pop
xor
pop
fdiv
loope
rclb
pop
xor
dec
loope
lods
lret
jl
cmp
cld
jg
ret
test
dec
jl
jl
mov
jg
pop
pop
cmp
clc
mov
xchg
iret
and
push
mov
jnp
out
sbb
int3
mov
imul
int3
sub
incl
lret
mov
test
addr16
inc
fsubl
stos
mov
into
das
push
mov
cs
decb
push
push
or
or
cmp
cld
fistpl
adc
mov
xchg
cmp
sub
push
push
dec
rcll
push
lock
ss
xchg
outsb
push
xchg
dec
loopne
movsb
call
inc
cli
decl
inc
mov
imul
push
xchg
or
hlt
adc
int3
cmpsl
fsubs
scas
mov
mov
mov
pop
xlat
add
aas
pushl
lds
lret
cmp
sub
mov
jns
lock
xor
mov
gs
inc
dec
or
jmp
mov
push
xchg
lock
daa
hlt
lcall
cmp
mov
mov
test
incl
and
mov
adc
mov
test
pop
xor
xchg
cmpsb
lret
fdivrs
cli
add
and
movsb
mov
xchg
insb
sbb
xor
addr16
popf
dec
or
mov
outsl
mov
sub
pop
and
inc
pushl
adc
outsl
mov
add
mov
jg
lock
cmp
loopne
or
iret
sub
mov
mov
arpl
jge
sbb
and
std
repnz
mov
insl
sti
xchg
inc
adc
pop
loopne
and
dec
sub
shlb
dec
popf
dec
dec
pop
pop
mov
dec
pushl
mov
inc
lock
jns
iret
push
cmp
push
jae
lods
pop
movsl
add
sub
xchg
loopne
dec
sahf
xor
cmpsl
fcoml
popa
icebp
dec
sti
arpl
sub
scas
or
jle
pop
and
daa
mov
mov
adc
loope
add
pushl
subb
fwait
jmp
inc
adc
sarb
inc
jmp
cmp
xor
xchg
sar
xchg
adc
lea
outsb
fdivrs
rcrb
jmp
jne
or
mov
jle
and
dec
leave
cmp
ficoms
mov
cld
ljmp
ss
outsb
dec
xor
add
cwtl
pop
push
outsb
adc
iret
inc
xor
filds
scas
mov
jg
cmpsl
sarl
mov
jbe
sub
ljmp
es
push
popa
push
sbb
sbb
pushf
in
jnp
fdivp
inc
jb
mov
bound
scas
cltd
dec
clc
out
nop
sub
loopne
mov
fcoml
data16
sub
and
cmc
mov
push
push
adc
bnd
or
fwait
add
ja
jae
jo
push
jo
pop
hlt
pop
mov
inc
mov
test
mov
cmp
jb
lret
call
ret
mov
jg
mov
ljmp
lcall
jge
and
mov
rcll
ret
outsl
loop
add
mov
ljmp
stos
popa
loopne
jb
mov
push
pop
lahf
aad
push
ret
or
xchg
jne
pop
push
push
jge
imul
popf
fisubl
lea
incl
popa
push
or
sbb
push
push
int
pop
hlt
xchg
and
fisttpl
add
jbe
sub
add
cmc
mov
mov
decl
dec
das
pusha
push
mov
gs
pop
dec
mov
mov
cmp
sbb
je
cld
or
xchg
pop
push
jae
inc
fidivrs
dec
loop
imul
sbb
outsb
nop
jp
aaa
mov
jg
lock
gs
mov
stos
mov
xchg
in
aam
jp
pop
inc
mov
mov
inc
mov
sarb
xor
push
jnp
mov
mov
sbb
cmp
outsl
rcrb
inc
ss
xlat
mov
jg
add
ss
outsl
stos
cmp
ljmp
clc
cmp
sbb
sahf
lcall
loopne
insb
loopne
and
out
mov
sub
call
decl
movsl
stos
mov
in
jb
sbb
mov
dec
idiv
mov
enter
scas
sbb
dec
popa
sarb
outsl
scas
aaa
cmc
push
lcall
cli
push
mov
dec
inc
test
dec
and
push
fprem
pushl
push
mov
pop
xchg
hlt
stos
sub
push
and
call
inc
or
cld
cmp
call
pop
out
sub
push
and
call
setle
xchg
add
cmpsl
adc
fiadds
mov
nop
jne
rcr
mov
addl
lret
pop
test
cwtl
fcoms
push
pop
adc
int3
out
decl
mov
mov
cld
sub
adc
mov
imul
cwtl
mov
iret
mov
dec
loope
mov
mov
addb
mov
pop
das
rcr
xchg
ficompl
xchg
push
inc
icebp
out
jp
or
sub
or
es
sub
fldenv
jb
decl
pushl
or
mov
pusha
cmp
mov
fsts
outsb
dec
mov
add
cli
call
inc
repnz
sbb
add
sub
divb
jns
sub
xchg
in
hlt
pop
push
in
je
sbb
lods
popa
das
sarb
loope
xchg
cwtl
ret
push
inc
dec
subb
les
aas
inc
int3
and
or
mov
mov
mov
mov
pop
fdivr
das
sub
mov
bound
inc
add
clc
dec
daa
sbb
lods
add
les
gs
inc
xor
inc
push
loopne
es
push
push
dec
jnp
dec
les
idivl
das
clc
jmp
or
xor
mov
out
mov
test
add
incl
adc
xchg
pop
jp
cmp
movsl
jne
inc
inc
xchg
loope
mov
cmp
clc
ljmp
dec
dec
pop
or
ret
es
arpl
clc
and
mov
out
leave
dec
sti
mov
adc
mov
push
into
adc
scas
pop
mov
sbb
into
xor
or
jg
insb
aam
push
dec
cmp
xchg
dec
out
xorl
and
mov
das
xor
shlb
shll
outsl
dec
push
testl
or
inc
xchg
or
push
mov
push
or
xchg
imul
cli
cli
mov
adc
xchg
addr16
sub
hlt
mov
aad
inc
cld
jg
and
cld
add
mov
dec
xor
inc
dec
jg
aaa
ljmp
repnz
push
mov
adc
pushl
popa
add
xchg
mov
cmp
xchg
push
xor
fsts
mov
jge
lods
jge
iret
jb,pn
push
cmp
xor
xchg
jmp
fmuls
push
movsl
lret
jbe
sub
call
pushl
cmpsb
shll
inc
push
adc
pop
mov
sub
mov
sub
cmp
inc
sti
xchg
loopne
xchg
lods
jbe
sbb
pushl
pop
inc
mov
popf
test
push
add
lock
jmp
mov
dec
mov
mov
push
movsb
aas
dec
inc
push
lret
xchg
ljmp
cwtl
ficoml
jl
xor
in
cmp
sbb
out
push
arpl
sub
das
out
sub
ljmp
scas
cmp
sub
mov
or
lcall
addr16
add
push
push
mov
es
adc
mov
ljmp
pop
and
lods
or
daa
mov
xchg
cltd
and
jg
icebp
cmpsb
xor
xchg
push
imul
adc
jg
cld
jg
inc
pushf
decb
arpl
xor
stos
or
aam
rorb
gs
sbb
pop
jbe
cmp
sbb
rcrl
inc
xchg
jle
mov
orb
ja
jne
jae
sub
lahf
cmp
xor
dec
cmp
sbb
mov
mov
das
hlt
faddl
mov
add
hlt
lock
jg
loopne
jb
jbe
push
stos
in
adc
xchg
arpl
lods
add
dec
les
insb
inc
stc
aam
loop
out
push
inc
push
jbe
pop
or
jns
adc
xchg
sbb
pop
pop
mov
xchg
and
and
clc
ljmp
lds
fmul
stos
cmp
hlt
pop
pop
ljmp
outsb
es
popf
mov
insb
xor
or
add
scas
cmp
scas
dec
mov
mov
mov
pop
pop
sarb
dec
adc
xor
decl
movsb
mov
popf
out
cs
stc
push
dec
outsl
sub
cmpsb
jbe
incl
add
add
data16
outsb
mov
pop
sahf
and
add
call
push
clc
sbb
ret
mov
sahf
pop
xchg
cmp
sbb
lods
insl
dec
add
xor
into
fbld
out
inc
es
push
jae
negb
adc
call
imul
roll
fidivrl
sub
pop
orl
xor
aas
arpl
aaa
ds
subl
jo
daa
inc
inc
fiaddl
fmuls
fcomip
pop
in
bound
shrl
jle
or
jle
imul
dec
inc
rcrl
stos
add
mov
jbe
popf
or
es
loopne
cli
push
jl
roll
lock
jns
ret
push
rcr
iret
sbb
inc
in
incl
enter
clc
xor
inc
jno
or
nop
cmp
rcrl
jmp
jno
ss
rorb
arpl
inc
lret
push
jae
icebp
dec
adc
push
fs
sbb
dec
dec
sbb
inc
xchg
inc
fidivrs
mov
ret
dec
add
fxch
mov
mov
mov
jle
mov
add
add
stos
ljmp
js
stos
pop
scas
incb
outsl
lcall
jp
push
push
inc
sub
clc
xorl
inc
xor
mov
clc
sub
dec
cs
mov
pop
popf
ds
mov
lea
pop
into
add
mov
ret
movsb
sub
cmpsl
sub
cli
fwait
push
adc
into
adc
add
fidivrl
fsubrs
lock
mul
xor
xor
and
mov
sbb
dec
dec
rorl
push
push
shlb
hlt
adc
cmp
loop
popa
cli
adc
loopne
nop
es
or
mov
mov
mov
inc
loop
dec
leave
xchg
int
mov
test
popf
pop
stc
je
add
stos
call
lcall
push
movb
jmp
lcall
fisubl
pop
int
pop
fidivs
jae
push
std
daa
mov
sahf
pop
jbe
data16
jmp
or
mov
scas
mov
hlt
andb
add
sbb
dec
xor
mov
decl
mov
popf
arpl
xchg
aas
dec
movsl
das
mov
push
cwtl
xchg
aaa
std
ljmp
add
add
daa
jne
and
xor
mov
sub
xor
lds
outsl
les
outsb
xchg
jmp
xchg
mov
xor
lret
pop
dec
enter
dec
dec
add
jg
test
data16
push
fs
pushl
xchg
hlt
loope
mov
xchg
mov
or
mov
int
mov
and
dec
inc
inc
add
loopne
jno
sub
adc
loop
les
lret
sbb
add
ja
push
or
pop
mov
dec
xor
mov
cld
mov
testb
fadds
mov
push
fs
cmp
gs
cmp
inc
scas
adc
add
add
adc
fs
lahf
orl
fs
jg
pop
inc
mov
push
xchg
sub
sub
mov
mov
fsubl
addl
stos
mov
jo
xchg
sub
repnz
sbb
mov
lock
imulb
cmp
jns
cld
addr16
nop
ja
dec
loopne
dec
lret
cmp
dec
lcall
cld
push
push
lcall
outsl
adc
pushf
jae
sub
lcall
cld
push
push
pop
cld
fistps
pop
pop
leave
adc
inc
mul
add
pushl
cmc
adc
inc
add
sahf
adc
and
fnstcw
inc
jne
and
sbb
mov
mov
lock
icebp
push
pop
push
sub
sbb
xor
cmp
jmp
sbb
fimuls
lock
sahf
es
sbb
lods
xor
incl
dec
and
xchg
out
scas
gs
insl
lods
and
pop
mov
incl
clc
ljmp
fwait
xchg
mov
mov
adc
dec
outsl
int
xor
push
add
jno
arpl
or
pusha
sbb
jnp
fs
outsl
sarl
xchg
push
push
mov
loopne
adc
shrb
push
rcrb
mov
mov
jmp
scas
dec
lock
arpl
xchg
insb
cmp
mov
fimuls
jne
enter
push
mov
jno
xchg
mov
ja
test
dec
mov
outsl
test
out
or
lock
pop
stos
lret
mov
xchg
adc
test
lea
imul
in
popa
add
repz
dec
adc
add
incl
popf
fwait
aas
inc
add
ds
std
lods
aaa
lcall
jl
leave
mov
fs
cmp
sbb
test
dec
inc
hlt
sub
lcall
and
jg
insb
jno
or
imul
jg
xor
sub
clc
adc
jo
pop
push
popl
push
jmp
lock
xlat
inc
adc
and
push
sarl
aas
push
mov
sub
into
fnstcw
fnstenv
cmpsl
call
jno
push
popf
dec
mov
pop
jecxz
adc
call
push
int
mov
pop
cmp
sub
outsb
data16
loope
outsl
clc
or
adc
dec
outsb
jbe
idiv
push
and
inc
sbb
lock
sub
xchg
push
call
or
xchg
or
lea
bound
fnstsw
dec
mov
jae
cltd
loop
xchg
stos
jmp
aas
fs
lcall
mov
fs
fisubrs
mov
es
insl
inc
je
mov
les
jg
inc
cmp
jg
lock
sahf
jns
sbb
cmp
mov
movsb
movsb
dec
push
pushl
jne
hlt
inc
addr16
sbb
rolb
arpl
cs
ret
pop
in
inc
push
mov
xchg
xor
roll
fdivrs
cmpsl
push
call
je
dec
pop
jae
mov
fwait
push
out
xor
sbb
data16
push
add
mov
push
mov
jno
out
cmpsl
sbb
mov
jno
mov
jmp
mov
test
mov
sub
addr16
push
push
add
addl
lods
or
push
add
jg
jo
jne
jno
or
sbb
icebp
xchg
or
mov
loopne
js
or
xor
repnz
fimuls
jle
sbbb
cmpl
je
cmpsb
imul
sti
adc
lret
jg
xor
test
mov
dec
sbb
xor
dec
sub
xchg
das
mov
popa
or
dec
clc
xor
jae
fisubs
pop
in
mov
fwait
lock
pushl
addl
sbb
sbb
pop
inc
hlt
mov
fwait
scas
mov
popa
jecxz
push
inc
sbb
icebp
or
out
add
mov
jle
mov
ljmp
add
les
scas
adcl
insl
fs
mov
add
aaa
sbb
mov
dec
adc
adc
add
ljmp
fcoms
inc
push
cmp
xchg
mov
cmp
out
jo
loop,pn
xchg
insb
out
es
jmp
ds
pop
xor
inc
cmc
test
dec
aaa
ja
jle
sahf
xor
ret
inc
nop
mov
call
call
scas
and
and
inc
xor
loopne
add
mov
mov
cmp
je
inc
push
popa
adc
xchg
fnstsw
add
pop
jno
test
cld
sbb
mov
fdivrp
fwait
movsl
dec
popl
push
mov
sub
ljmp
add
mov
popa
jg,pn
cmp
imul
movb
cmp
lcall
scas
inc
sub
mov
enter
mov
jmp
jg
stos
scas
push
dec
inc
or
cltd
jmp
pop
lds
jbe
jb
ljmp
push
adc
lea
into
imulb
jae
mov
lods
decl
icebp
imul
cmpsb
xchg
pop
mov
sti
bound
mov
clc
mov
adc
push
adc
pop
les
dec
or
pushl
clc
dec
int3
ja
inc
inc
add
repz
nop
clc
call
jno
xor
sbb
dec
iret
outsl
sub
std
push
jns
jno
cld
ljmp
xor
jmp
push
mov
add
pusha
adc
xchg
mov
ret
or
jle
scas
and
mov
cld
jmp
add
pusha
jl
arpl
imul
iret
push
add
push
sahf
dec
mov
or
aam
dec
or
mov
sbbb
imul
outsb
and
mov
sarb
sub
jp
dec
mov
sub
xchg
xor
decl
jb
insl
mov
xchg
stc
imul
or
lds
mov
mov
repnz
add
mov
clc
ljmp
push
insl
xchg
pop
std
inc
xor
inc
js
xchg
xchg
dec
mov
je
inc
das
xchg
mov
mov
inc
cmp
sbb
ja
adc
call
xchg
xchg
mov
test
dec
sbb
xor
ss
inc
push
mov
decl
mulb
push
lods
mov
and
test
xor
pop
cmpsb
push
push
ffree
ljmp
sub
lahf
test
call
cmp
mov
jne
movsl
lock
xor
pop
cmp
or
dec
inc
bound
jmp
nop
mov
cmp
mov
call
sbb
pushf
insl
dec
mov
test
aaa
xchg
nop
sub
inc
bound
out
push
xchg
loop
sbb
hlt
push
popl
call
sbb
test
pop
loopne
enter
push
jno
cmp
std
add
stos
jmp
pop
cmp
lcall
lds
les
outsl
mov
push
dec
adc
sub
sbb
cwtl
outsb
jns
xchg
hlt
sbb
pusha
sbb
sub
mov
push
xor
xchg
mov
dec
pusha
xor
or
lahf
fdivl
popf
mov
add
nop
mov
inc
js
rcr
pop
sbb
dec
mov
lcall
xor
add
sub
jb
fisubl
ljmp
pop
mov
insb
push
gs
add
test
adc
popl
mov
cmp
incl
pop
rorb
popa
mov
aaa
adc
sub
push
jne
add
call
xchg
popf
push
and
data16
cmp
cld
pop
xchg
push
xchg
das
jno
xchg
cs
pushf
inc
cmp
cs
std
fisubrs
lcall
fs
sub
movsb
mov
scas
cmp
pop
inc
cltd
test
lcall
mov
mov
mov
and
out
das
or
scas
ljmp
lock
sub
or
dec
inc
imul
sbb
call
jb
jno
popa
push
hlt
repz
movsl
push
mov
test
xor
add
ds
stos
jge
pushl
cmpsb
test
mov
adcb
cltd
jmp
incl
mov
imul
adc
mov
addr16
sar
or
or
fsubrs
adc
sub
loope
inc
les
sub
jno
mov
mov
xchg
insl
dec
sbb
pop
dec
int
mov
cmp
inc
push
cmp
xchg
cmp
inc
jbe
popa
sub
in
popa
loopne
mov
inc
in
push
and
jp
mov
ja
dec
mov
adc
push
inc
or
dec
mov
jg
mov
lret
or
lods
pop
pop
xor
call
sar
fiaddl
fs
xorl
call
popf
pop
notb
pop
dec
loope
sahf
sbb
ss
mov
xor
sbb
fildll
cmp
mov
stos
dec
push
xor
xchg
ret
popf
daa
jg
mov
jle
lea
inc
pop
insl
mov
mov
or
repnz
push
add
hlt
mov
push
push
es
ljmp
jle
add
gs
jg
out
das
xchg
mov
or
or
inc
jg
dec
lods
xchg
shll
xor
push
mov
fnstenv
into
lods
mov
es
shll
popa
mov
xchg
jbe
xor
cld
call
jbe
xor
mov
mov
mov
pop
sbb
mov
jmp
ja
scas
mov
dec
fwait
movsb
ja
fs
mov
cld
ud0
add
push
icebp
stos
and
int
rcl
inc
sbb
or
arpl
pop
icebp
lcall
daa
pop
les
push
pop
mov
mov
push
mov
nop
lods
lods
or
das
insl
or
hlt
mov
aam
push
jle
scas
js
push
rcll
mov
call
sub
popf
mov
int3
cmp
mov
jg
dec
in
inc
push
cmp
sbb
jle
jo
jb
mov
jl
nop
jnp
or
inc
dec
lea
mov
lods
cmp
cltd
insl
mov
mov
jle
mov
push
cmpsl
mov
xorl
xchg
test
fsubrs
mov
dec
sbb
add
jns
addl
mov
daa
loope
repnz
jge
das
lods
jae
ret
clc
lcall
scas
push
xor
pop
mov
fnstenv
mov
ljmp
into
pop
jne
add
pop
cwtl
sub
cmp
pushl
pop
sbb
pop
push
and
and
scas
lret
mov
lock
les
xchg
cmp
push
lret
inc
stc
call
sub
es
and
stc
jae
rcrb
push
es
adc
imul
movsl
mov
sbb
xor
push
sub
clc
jg
pusha
jbe
push
pop
fsts
stos
cmp
mov
out
js
ljmp
jmp
imul
inc
fadds
xor
push
outsl
and
call
popa
dec
test
ljmp
xor
adc
mov
insb
pop
repz
jg
push
mov
push
cmpsb
dec
repnz
pop
pop
inc
mov
mov
outsl
stc
or
enter
jg
xchg
gs
xchg
inc
jo
mov
loop
pushl
popa
test
cli
fisubl
fstp
shll
fstpt
sub
ret
adc
add
jb
dec
enter
sub
pop
push
jmp
add
movsb
jp
stos
imul
outsb
add
iret
jbe
push
dec
clc
cmp
jg
jg
dec
int3
and
push
roll
les
and
xchg
mov
pushl
cld
xor
gs
leave
xor
xchg
dec
andl
sahf
dec
add
adc
jne
push
inc
cmc
xor
daa
ja
loopne
bound
shll
push
xlat
sbb
das
dec
mov
decl
ljmp
xor
xchg
std
add
fdivrl
iret
and
dec
xor
cmpsl
in
testb
cli
scas
iret
das
notb
cmp
fldl
fisubrl
jl
popf
dec
lods
scas
dec
jecxz
pusha
adc
in
inc
imul
insb
pushl
addr16
inc
mov
mov
mov
inc
lds
daa
adc
cli
addb
jg
dec
jecxz
push
imul
sub
cli
je
push
leave
daa
fs
mov
js
aaa
popa
shrl
sar
sbb
fbstp
pop
xchg
cli
incl
loop
xchg
inc
ds
xchg
out
xchg
data16
imul
mov
rcr
orb
icebp
push
add
push
fadds
popa
fcomps
mov
and
mov
pushl
push
out
loope
push
loopne
cld
add
in
ljmp
roll
jae
aaa
jo
sub
inc
repnz
rcrl
add
pushf
or
lcall
cmc
clc
in
dec
rorb
jp
xchg
out
dec
adc
pushf
jne
ja,pt
scas
push
pushl
aad
mov
rcll
jecxz
pop
jmp
ljmp
mov
add
sub
and
int3
sub
rcll
call
sbb
mov
mov
in
fsub
push
cli
or
push
cmp
xor
pop
fisttps
dec
pop
in
cmp
test
push
std
clc
cs
add
xchg
push
loop
fistl
and
out
enter
flds
out
jno
psubusw
shll
out
int3
or
pusha
enter
lret
push
ret
imul
mov
jg
push
outsb
cwtl
insl
lods
cltd
push
out
jecxz
mov
icebp
decl
mov
adc
adc
sbb
stos
ret
int
jp
add
idivb
and
cmp
ss
shl
jb
jg
fmuls
inc
les
pop
cmp
andl
stc
adc
in
inc
ficoml
dec
clc
outsl
sahf
fisubs
js
sub
fimuls
addr16
jp
pop
dec
xchg
push
inc
sbb
imull
aas
xchg
testb
or
xchg
in
jmp
mov
adc
xor
js
push
fwait
stos
jo
sbbl
incl
sub
xchg
call
inc
mov
gs
aaa
aam
push
shll
cli
mov
popf
lea
pushl
jmp
arpl
shrl
mov
mov
ror
inc
sbb
mov
add
stos
popa
xchg
cli
mov
loop
adc
pop
sub
outsl
mov
cli
aas
orb
pop
sbb
gs
ljmp
daa
dec
cmp
jo
add
fnsave
imul
cs
sahf
or
mov
xchg
xor
cmp
imul
jle
cmc
jg
rclb
jb
xorl
sbb
inc
add
xchg
popa
or
xlat
inc
mov
sbb
js
add
mov
and
insb
or
call
clc
pop
inc
adc
lret
popf
and
sub
cmp
mov
scas
xor
insb
pop
pop
lret
cmpsb
add
test
lcall
aaa
jbe
mov
pop
adc
xor
mov
cmc
lea
movsb
xor
push
cmp
xor
sbbb
pop
lret
je
std
ljmp
push
ss
jns
std
test
jle
jno
xchg
filds
cmpsb
inc
lahf
push
push
test
and
and
add
cli
push
pop
inc
and
sbb
xchg
mov
sbb
jle
dec
inc
and
dec
add
std
scas
mov
push
imul
lcall
test
sbb
fildll
xchg
jle
das
dec
adc
bound
add
lcall
sbb
popf
outsb
mov
call
jg
lock
xchg
dec
insl
push
out
mov
inc
cmp
mov
xorl
ret
stos
stos
or
test
sub
das
mov
cmp
cli
mov
cmpsl
jge
xor
pop
jno
sub
mov
mov
and
clc
inc
pop
dec
sub
negl
lods
incl
arpl
sub
xor
cmp
dec
aas
es
jp
scas
jnp
cmp
inc
and
adc
mov
popa
jg
push
mov
fcoml
cmp
xor
daa
in
je
lds
mov
mov
mov
loop
dec
jp
les
inc
dec
inc
iret
pop
mov
call
jl
cltd
imul
cli
fs
cmp
enter
add
ret
push
std
mov
lahf
mov
xchg
popa
setbe
ja
jbe
es
or
decl
lret
lock
mov
js
mov
jg
lret
inc
add
cmp
pusha
mov
sahf
mov
adc
call
scas
fucomi
or
and
sub
lock
ljmp
fmuls
je
add
xor
jg
ja
cmp
lods
ds
cld
nop
xchg
mov
in
dec
push
lods
incl
bound
push
ss
add
shlb
ffreep
push
inc
mov
or
decl
mov
inc
adc
cmp
and
jl
orb
mov
xor
fmull
loop
mov
iret
es
xor
or
cli
incl
aam
push
and
mov
sbb
push
cld
mov
jb
or
into
push
jne
push
leave
pop
xchg
nop
shrb
jle
mov
lcall
cld
mov
push
adc
clc
xor
sub
ds
faddl
cld
pushl
and
jp,pt
and
push
pop
rcll
dec
add
ror
sub
fcmove
pop
popf
ljmp
shl
jmp
pushl
sub
lock
in
bound
adc
push
jo
fiadds
jp
scas
cld
jge
pusha
std
call
mov
adc
int
pop
pop
aaa
popa
int
call
fmuls
jg
cmc
jge
pop
xlat
je
clc
mov
jmp
jns
movsb
imul
and
lcall
pop
pop
ljmp
sbb
test
pop
pop
aaa
jbe
fdivs
pop
jg
test
movsb
mov
out
aam
push
jg
call
pop
cmp
mov
fwait
mov
outsb
imul
incl
orl
sbb
or
jmp
xchg
push
inc
and
icebp
arpl
sub
cmp
inc
xor
iret
add
je
je
mov
ja
inc
and
jg
add
gs
push
jno
repz
stos
dec
lret
jmp
arpl
add
push
adc
popa
fs
shll
push
repnz
in
dec
rorb
jbe
jg
ljmp
inc
lcall
data16
sbb
dec
cld
incl
dec
mov
inc
xor
pop
pop
sbb
mov
jecxz
int
cmpb
das
dec
sahf
cmp
cld
and
pushf
jmp
jns
pop
cmc
jg
dec
mov
push
sub
push
sbb
aaa
sbb
lcall
inc
push
int
add
jo
rolb
or
rorl
hlt
mov
lret
sbb
or
and
inc
daa
fdivr
lcall
xor
push
and
pop
addb
mov
pop
movsl
dec
push
stos
jns
or
jnp
push
push
mov
cmpsl
pop
cld
jo
mov
jge
mov
in
xlat
pop
adc
lcall
push
jle
pop
mov
unpckhps
pusha
inc
pop
shrb
ljmp
mov
dec
cmp
jle
xchg
cmp
xor
mov
mov
dec
cmp
dec
jbe
aaa
sub
jg
pop
mov
push
mov
ljmp
stos
insb
push
cmpsb
push
jno
or
cmpsl
loopne
sti
cmp
dec
lcall
jmp
push
dec
clc
daa
inc
bnd
loop
sbb
jp
ljmp
icebp
cmpsb
decl
js
sbb
adc
sbb
test
outsl
mov
xlat
mov
enter
jne
hlt
or
imull
js
push
push
lcall
jnp
sbb
xchg
inc
aas
push
fwait
push
nop
cmpb
push
addr16
mov
pop
pop
cmp
push
push
ljmp
ja
clc
mov
cld
les
dec
dec
sbb
in
mov
mov
push
repnz
jnp
push
cltd
std
loope
ret
jg
subl
mov
sub
in
jg
inc
hlt
int
pop
mov
mov
cli
push
inc
inc
lcall
cmp
cltd
fidivrs
cltd
push
mov
jbe
fisubl
push
incl
lock
jecxz
popa
out
and
inc
repnz
jmp
sub
out
out
jg
sbb
loope
add
movsl
mov
aad
std
jmp
sub
jnp
ss
int
decl
mov
xor
test
adc
stos
lcall
adc
mov
or
add
aas
jnp
fbstp
jg
sbbb
ljmp
lcall
lods
pusha
dec
push
push
in
dec
xor
or
repz
imul
data16
push
in
sub
insl
push
out
js
test
sbbb
movsl
dec
dec
outsb
je
add
lea
stos
ficompl
pop
dec
ljmp
js
lock
mov
adc
sbb
decb
lds
arpl
dec
sbbl
popfw
fwait
inc
pop
jecxz
jp
ja
lcall
push
dec
mov
cmpsl
mov
sub
popf
mov
popa
pop
adcl
ss
lock
inc
cmp
jge,pn
cmp
sbb
sub
and
mov
mov
or
lods
adc
aam
or
adc
mov
xchg
jl
iret
cmp
dec
xor
insl
fdivl
sbb
das
sar
into
sub
andnps
das
dec
ds
out
jo
add
ud0
pop
cld
inc
cli
ds
dec
ss
pop
repnz
insb
dec
shrb
mov
push
cli
mov
xor
jo
test
jmp
jbe
movsb
fcoml
loope
lcall
insb
pop
std
ss
adc
scas
mov
inc
imul
sar
adc
push
clc
mov
dec
in
ljmp
cld
cmp
popa
jle
inc
addb
daa
push
cld
inc
cmp
lahf
inc
repnz
roll
fmull
popf
ficompl
push
mov
add
jne
inc
jp
jl
cmp
clc
add
pop
ss
stc
sbb
jmp
sbb
out
neg
cs
insl
sbb
test
popa
sar
pop
out
movsb
stos
dec
and
xchg
pop
cmp
and
sub
pop
jbe
incl
mov
inc
cmc
cmc
mov
popf
cmpl
lcall
out
test
or
jo
jbe
adc
mov
cmpb
scas
jne
fwait
dec
mulb
hlt
pushl
fisttps
std
add
lock
xor
int
jns
and
ljmp
or
sub
inc
cmp
and
jmp
stc
ja,pt
add
das
dec
cli
cmp
cmp
loopne
dec
sbb
or
cld
jg
pushl
rcrl
insl
repnz
mov
sub
xchg
arpl
jo
aas
pop
dec
adc
enter
ljmp
idivb
jo
loopne
adc
mov
les
jge
xchg
int3
mov
das
sarl
adc
xor
shrb
xor
add
jmp
dec
jl
add
jo
popa
std
stos
stc
pusha
mov
push
xchg
int3
test
icebp
sbb
addr16
es
mov
gs
jnp
sbb
cmpsl
es
xchg
lcall
movsb
mov
mov
xor
mov
cmp
mov
idivb
arpl
lods
in
leave
add
push
lds
pop
repnz
data16
mov
popf
popa
mov
callw
sub
dec
mov
popf
jg
add
adc
std
mov
dec
and
or
aam
and
pusha
jbe
ds
lcall
xor
insl
lret
add
aas
inc
loopne
push
les
dec
imul
fbstp
cmp
incl
popa
and
mov
in
push
js
andb
pop
mov
xchg
test
insl
inc
lds
inc
mov
inc
inc
push
dec
xor
adc
shll
imul
out
outsl
jg
add
cld
out
lds
in
mov
mov
sbb
stos
fs
pushf
xor
and
adc
cld
scas
test
cmp
ret
push
test
scas
inc
xchg
cmp
fisttps
std
test
xchg
ret
test
lock
push
mov
movsb
push
mov
aas
pop
xorb
cld
jo
pusha
sub
xchg
inc
test
mov
sti
aam
push
push
sub
jecxz
push
ljmp
cmp
insl
cmp
jo
jmp
lea
add
jns
pop
insl
loop
repz
add
call
push
adc
adc
mov
pushl
jp
mov
les
mov
out
jmp
jns
cs
adc
pop
mov
dec
mov
cmpsl
mov
hlt
ret
sbb
dec
jl
jg
add
ss
cmp
pop
test
je
dec
jecxz
dec
int3
add
inc
leave
sub
pop
xchg
push
fdivrp
inc
outsb
cli
or
jnp
out
bound
jg
cmp
pushl
ret
sarl
push
ss
jo
xor
sbb
in
pop
dec
pop
sbb
xor
and
inc
ret
mov
or
cmp
push
jnp
clc
pop
insl
loop
dec
into
movsb
rol
mov
fdivs
mov
mov
or
call
test
das
jg
and
aas
xchg
fidivrs
aaa
adc
aad
mov
or
mov
xchg
jmp
jl
lret
xlat
mov
call
loopne
and
cmp
movsl
enter
imul
jbe
aaa
std
or
push
rorb
add
dec
jbe
mov
mov
or
lds
or
jbe
pop
pusha
jg
jg
test
and
and
cmpl
cmp
movsb
add
dec
push
roll
pop
pop
inc
xchg
sbb
mov
jmp
iret
bound
inc
mov
fldenv
mov
sar
aaa
lea
popf
int3
or
ljmp
xorb
cmp
and
stc
jecxz
or
mov
clc
nop
and
or
call
in
or
fsubrs
dec
pop
jae
inc
add
test
mov
or
lret
daa
pop
sti
push
dec
inc
xorb
lcall
jg
mov
out
pop
insl
inc
mov
imul
adc
xor
jle
jp
adc
incl
mov
dec
out
movsl
std
sbb
es
aas
inc
frstor
cld
decl
clc
pop
aam
jecxz
out
push
call
ret
fbstp
in
rcll
mov
xchg
mov
aaa
adc
decl
cltd
jmp
mov
push
cld
fists
mov
cwtl
jge
dec
lods
fsubrl
fisubrl
pop
cmp
xchg
push
mov
aas
inc
jl
mov
mov
scas
add
lcall
outsb
adc
mov
push
dec
xor
adc
cmp
cmp
jo
push
or
or
call
pop
es
cmp
inc
sub
ljmp
outsb
adcb
inc
sbb
jno
mov
jle
dec
and
mov
outsl
js
ljmp
lret
daa
dec
jecxz
les
sbb
pusha
push
lods
push
xchg
mov
add
xchg
ret
faddl
dec
push
adc
incl
xchg
jmp
imul
xchg
jbe
dec
add
push
push
add
pop
cmpsl
gs
test
mov
add
cld
mov
lods
add
jg
imul
and
mov
out
shll
or
xor
sub
movsb
xor
mov
das
dec
xor
cmp
mov
fidivs
lret
inc
fildl
fwait
mov
nop
push
inc
pop
inc
stos
mov
jmp
adc
jae
adc
add
xchg
and
nop
adc
fsubs
inc
enter
nop
test
add
outsl
mov
or
lods
or
sahf
dec
adcl
inc
jg
pop
inc
lods
scas
pop
jae
sub
decl
and
add
sbb
add
lea
sub
pop
push
sub
ss
clc
testl
push
loop
fs
gs
sahf
pop
dec
push
insl
repnz
dec
cmpb
mov
xchg
test
shll
std
or
jle
jmp
jns
in
out
pop
rorb
aaa
arpl
ds
int
cwtl
mov
out
lods
scas
xchg
decb
jno
sbb
dec
mov
add
push
pop
ja
xor
cmp
mov
pop
movsb
mov
jle
and
les
negl
les
push
push
xor
adc
in
call
cwtl
add
pop
jecxz
push
enter
outsb
inc
mov
aaa
imul
incl
lea
dec
mov
push
ss
lahf
cmpsb
ljmp
add
test
dec
jmp
mov
call
lds
jne
test
lock
sub
addr16
jmp
push
pop
jo
adc
and
jno
loope
jbe
mov
insl
add
call
cmp
addr16
mov
sbb
xor
cmp
and
jmp
push
mov
add
pop
das
push
and
lds
add
cmp
clc
aaa
stos
test
pop
jns
cld
fwait
mov
dec
sbb
call
mov
mov
xor
sbb
lock
inc
cmp
repz
jne
pop
push
sub
pop
cli
push
arpl
push
insb
mov
js
inc
les
adc
inc
dec
ficomps
imul
shll
jg
jae
pop
add
jle
fs
jb
push
inc
ljmp
cvtps2pd
sub
push
add
cld
jns
dec
jmp
lods
das
sub
insl
inc
clc
movsl
clc
lcall
test
inc
mov
xchg
daa
adc
ja
mov
shrl
loopne
ljmp
add
out
push
dec
mov
push
jge
ss
mov
adc
add
lods
dec
insb
cli
filds
scas
scas
lcall
sub
lcall
add
xchg
pop
mov
stos
cmp
sub
mov
incl
das
push
mov
test
inc
cld
add
scas
xor
xchg
inc
das
clc
fsubrl
pop
push
mov
pusha
jne
or
and
stos
loope
cwtl
xlat
add
mov
mov
int3
es
mov
mov
xor
mov
mov
xchg
test
inc
mov
jl
xchg
orl
dec
les
xor
icebp
andl
xchg
mov
sbb
pushl
nop
dec
test
insb
pop
push
jl
push
mov
mov
pop
mov
push
mov
fs
sbb
add
stos
jnp
push
sbb
or
ljmp
in
in
lods
cwtl
pop
popa
stos
les
je
aas
cmp
push
sub
mov
into
movsl
inc
fimull
test
xchg
inc
ret
iret
adc
gs
popa
mov
es
jg
dec
adc
lret
lahf
es
pop
aaa
jl
push
xor
jg
sbb
jmp
and
xor
dec
sub
loop
jg
icebp
mov
inc
push
int
std
jns
repz
ja
scas
fcmovb
cmpsl
fsubs
aaa
jle
test
inc
mov
cwtl
decl
mov
cltd
fldcw
mov
cmp
mov
pop
in
fcompl
xchg
mov
sar
jmp
cli
arpl
imul
inc
aaa
into
pusha
leave
lea
test
pop
xor
xchg
pusha
mov
mov
push
adc
inc
ljmp
repz
jp
popf
ffreep
lcall
movsb
iret
clc
cld
jg
out
pop
dec
imul
inc
sub
outsb
or
incl
cltd
inc
adc
enter
and
mov
lods
enter
popf
test
loop
jnp
jp
jg
cltd
fwait
mov
add
push
lcall
andl
mov
adc
adc
sub
add
mov
cli
bound
cli
cmp
inc
loop
inc
mov
and
retw
sub
call
clc
pop
repnz
cwtl
lds
mov
push
add
mov
and
add
mov
cld
lcall
mov
xchg
push
cmp
adc
sahf
xchg
cmpsl
cltd
lods
fildll
lods
cmp
and
mov
pop
psrad
test
xchg
adc
xchg
pop
cmpl
lahf
scas
mov
pop
and
mov
stos
gs
scas
sbb
cmp
mov
and
inc
mov
xchg
xor
stc
mov
mov
ja
cs
cli
arpl
negb
movsb
hlt
jne
ss
pop
test
jg
pushl
jbe
adc
mov
out
push
pop
mov
mov
mov
test
pushf
xchg
mov
dec
inc
cli
lcall
outsl
cli
and
mov
pop
jne
repnz
pushf
in
push
dec
fnsave
fisttpll
lcall
push
add
iret
jns
fidivrs
lret
sbb
aaa
add
cmp
add
in
into
cmp
lock
inc
movl
out
jb
push
jns
ljmp
lods
lahf
addr16
jae
jg
sbb
sbb
aaa
add
push
jge
jl
push
pushl
jmp
add
add
cmc
test
call
scas
inc
and
or
add
outsl
pop
cs
incl
outsb
add
popfw
lods
pushf
inc
inc
ds
mov
call
sbb
xor
xchg
jl
jg
daa
pop
push
lcall
aas
jns
dec
jb
push
ljmp
pop
add
lds
push
sbb
lds
sar
jmp
les
or
sub
mov
enter
push
mov
pop
xchg
icebp
or
jg
out
cmp
jp
and
add
add
sub
adc
sahf
sub
jae
push
mov
in
call
adc
push
scas
mov
cld
inc
xchg
xchg
rorl
push
cmp
cs
test
mov
aas
insl
sarb
mov
mov
inc
xlat
mov
xchg
inc
cltd
je
inc
fcoms
xchg
and
aas
jb
add
lds
ljmp
popa
jecxz
popa
mov
mov
cmpsb
jb
cmp
dec
in
lea
mov
dec
icebp
ljmp
jbe
cmp
add
std
cmpsb
cltd
daa
arpl
ljmp
cwtl
sub
shl
ja
add
mov
insl
mov
jnp
inc
fisttps
mov
pushl
and
popf
in
xchg
pop
mov
add
jbe
inc
push
mov
cs
jp
ljmp
mov
rcll
stc
xor
mov
xchg
sahf
mov
xor
and
mov
fisttps
add
xor
add
out
stos
inc
dec
popa
outsb
jp
cmc
push
das
push
sbb
xor
mov
movsb
jg
push
sub
cmpsb
mov
or
decl
fnsave
jge
push
pop
dec
int
xchg
movsb
jne
cmpsb
inc
lock
fwait
clc
add
popa
aam
jmp
jg
out
ss
and
push
push
or
jmp
stos
mov
inc
mov
gs
cmp
adc
cltd
dec
stos
jo
decl
pusha
out
adc
or
lret
lcall
fldcw
or
in
dec
je
jl
add
loope
dec
loop
xchg
adc
jle
add
data16
stos
xchg
dec
das
in
aas
and
scas
xchg
icebp
test
jl
pop
popa
idiv
mov
mov
jg
decl
iret
jge
or
dec
jne
mov
jl
sbb
orb
fsubrl
ja
addr16
out
mov
fsubl
inc
sub
jg
and
lcall
fwait
stos
ljmp
mov
mov
push
xchg
jnp
sub
test
out
add
fldcw
sti
scas
pushf
inc
push
imul
xchg
or
xorl
pushf
and
stos
lock
push
cmp
add
jl
pop
scas
out
lock
call
push
dec
repz
inc
int
push
jbe
mov
pop
mov
or
ret
jecxz
test
outsl
es
mov
mov
shrb
les
push
inc
aas
mov
push
in
inc
jl
cmp
inc
adc
shlb
je
xor
mov
js
mov
out
popf
mov
cmp
mov
aaa
mov
incl
jmp
sbb
push
mov
jae
mov
push
ss
imul
mov
stc
sub
call
or
and
pop
xchg
call
xchg
pop
sub
jbe
lods
frstor
push
jns
in
mov
lcall
pop
rcll
sub
xchg
dec
jb
scas
xchg
inc
add
mov
pop
cmp
sarb
mov
into
pop
mov
aas
incb
sbb
cmc
lods
imul
fs
fcos
jg
mov
pop
push
popl
cmp
push
in
push
pop
xorb
pushl
es
je
jg
jle
insl
dec
mov
sbb
sbb
insl
popl
jg
lock
jb
mov
mov
mov
mov
lcall
jg
cmp
lods
jbe
adc
mov
push
pop
sbb
cltd
dec
push
jo
decl
loopne
inc
adc
aas
mov
dec
test
pop
loopne
cmp
push
jg
mov
or
and
mov
ljmp
jle
dec
out
cltd
and
dec
mov
push
enter
das
jo
jae
outsb
jg
sub
mov
cmp
inc
push
faddl
jl
decl
and
sub
xor
ss
fcomip
add
das
popf
mulb
mov
or
sub
mov
xor
mov
pushf
sub
mov
hlt
cmp
mov
cltd
in
mov
andl
adc
jbe
sbb
jmp
sub
pop
or
out
mov
adc
push
cli
xor
stc
lahf
mov
or
adc
incl
adc
or
mov
cs
incl
imul
inc
jecxz
and
jge
les
shll
dec
ljmp
mov
imulb
mov
mov
pop
test
ret
add
push
scas
sub
ss
xchg
loope
cld
adc
sbb
int3
push
dec
leave
adc
pop
add
inc
adc
mov
inc
mov
mov
sbb
push
out
dec
sub
sahf
out
incl
cld
fwait
outsb
cmp
or
inc
fidivl
test
push
rorl
mov
daa
and
sub
inc
sub
fcmovu
push
jne
ret
lcall
scas
push
cmp
loop
popw
dec
sbb
out
cmp
sub
xchg
mov
jbe
pop
lods
les
jne
repz
pushf
mov
sub
pop
loop
and
ds
test
jnp
mov
sbb
mov
cmp
inc
pop
xchg
xchg
inc
pop
mov
mov
pop
sub
and
cmp
decl
rcrb
inc
ret
xchg
push
cwtl
jae
pop
icebp
jp
push
addb
rcrl
sahf
sbb
add
and
sbb
clc
xchg
mov
lcall
xchg
stc
aaa
mov
sub
cmpsb
mov
xchg
lds
sbb
and
mov
sub
cmp
xor
sub
or
cmp
xchg
and
jg
arpl
bound
in
addr16
fwait
mov
pop
push
cmp
mov
loope
mov
mov
add
pop
subl
rorl
xchg
xchg
pop
jbe
mov
add
ljmp
mov
inc
dec
pushf
ret
add
sub
lods
xor
ljmp
inc
push
jg
or
lret
das
loope
mov
jbe
scas
cmc
scas
decl
push
pop
sub
mov
sub
mov
mov
mov
je
xor
mov
cmp
out
ljmp
clc
in
sub
sbb
hlt
jae
xchg
mov
aas
push
incl
jne
add
sahf
std
xchg
rorb
sub
cmp
inc
jmp
into
mov
out
ljmp
pop
shrl
add
sub
mov
xor
pop
pop
xchg
cli
add
and
mov
imul
decl
sub
in
or
dec
cmpsb
aaa
dec
mov
popa
lods
xor
jg
mov
fs
mov
lods
and
mov
inc
popf
pop
inc
cwtl
ss
push
aam
decl
mov
imul
xor
push
test
mov
push
xor
shll
ljmp
dec
mov
arpl
push
push
pop
mov
mov
adc
imul
sbb
addr16
xchg
jmp
jg
mov
or
inc
out
cmp
hlt
mov
xchg
daa
xchg
cmpsb
adc
jg
dec
in
lea
inc
daa
xor
and
scas
test
mov
mov
fsubrs
mov
jae
or
subb
lcall
scas
mov
stos
sahf
mov
xorl
push
out
add
decl
jae
mov
test
data16
pop
imull
nop
movsb
adcb
mov
stos
fisttps
adc
xor
shl
pop
mov
dec
mov
lock
add
bound
jae
cs
ret
adc
pop
jg
lock
loope
adc
cmpsl
and
inc
add
popf
clc
nop
clc
stos
jecxz
jno
mov
xor
lret
std
push
adc
jno
cmp
pop
sbb
jle
pop
sbb
pusha
jl
lds
mov
test
xchg
fnstcw
or
int
arpl
sub
sbb
loopne
lods
mov
jge
add
repnz
mov
mov
test
outsb
mull
ljmp
sbbw
ljmp
fildll
popa
xor
mov
mov
clc
lea
flds
les
ds
daa
inc
add
pusha
enter
decl
sbbl
lea
loope
adc
add
mov
jg
jae
jae
jle
stos
sbb
int
jecxz
push
jl
out
sub
jge
pop
hlt
decl
adc
or
push
leave
mov
hlt
sbb
cmp
cld
mov
sub
sbb
sbb
inc
add
inc
jb
mov
push
pop
mov
stos
insb
loopne
scas
add
mov
loope
pusha
ss
sbb
ficoms
aaa
push
test
scas
std
sub
mov
je
nop
mov
repz
repnz
jbe
mov
xchg
pop
pop
push
inc
loopne
mov
pusha
or
push
bnd
ds
xchg
mov
add
mov
sbb
out
mov
lods
mov
arpl
mov
cltd
sbb
clc
incl
xchg
xchg
mov
popf
xor
or
sahf
inc
cld
call
inc
xor
enter
adc
mov
int3
pop
popa
shll
push
cmc
mov
pusha
in
movsl
aaa
jae
cmpsb
xchg
out
jg
add
and
pushl
pop
push
mov
dec
adc
xchg
sbb
pushl
test
mov
sbb
fisubs
idiv
or
dec
and
add
aaa
sarb
or
incl
packuswb
mov
imul
push
mov
mov
das
sbb
cmpb
pop
icebp
push
ret
fsubs
inc
cmp
repnz
ds
jg
imull
repnz
add
jge
pop
jb
pop
bound
and
fists
mov
outsb
and
push
sub
jmp
pop
aam
fnstcw
popa
and
sahf
js
xchg
movsl
and
xorb
mov
mov
ljmp
lcall
cmpsl
iret
repnz
sub
xor
sbb
jg
call
sbb
sbb
sahf
cmp
mov
outsl
inc
cmp
mov
pushl
scas
orl
xor
clc
inc
and
movsl
sbb
xor
inc
mov
mov
mov
les
pop
add
sub
xor
lcall
inc
xor
and
push
pop
push
jecxz
std
loop
clc
out
or
inc
pop
je
jb
ficomps
pop
mov
out
jmp
push
sub
cld
ja
int3
ret
fimull
imul
mov
dec
bound
push
dec
pop
daa
mov
mov
mov
xchg
pop
loope
mov
cmp
addr16
push
in
lea
aaa
outsb
push
add
incl
pop
jo
dec
add
xchg
xchg
iret
mov
adc
sbb
popa
dec
dec
and
jne
mov
cmpsb
inc
in
test
mov
sar
pop
and
imul
dec
std
pop
push
push
sbb
popf
loopne
les
or
fbld
int3
repnz
insl
loop
dec
xor
lcall
ds
fwait
loop
jp
jle
cld
mov
stos
adc
ljmp
cwtl
std
ljmp
jmp
add
loop
pop
inc
mov
sbb
gs
pop
sahf
imull
adc
mov
das
sbb
pop
cmc
scas
push
jle
pusha
cmp
test
xor
mov
sbb
lods
sub
repnz
lcallw
fsubs
pop
push
jns
add
xchg
jmp
mov
ljmp
lcall
iretw
ja
mov
ret
jbe
nop
cltd
test
jns
pop
lds
inc
dec
dec
add
sar
xor
sbb
or
pushl
jno
push
cmp
or
mov
int
ljmp
lock
lock
out
xchg
sbb
and
or
push
aas
jmp
and
or
loopne
dec
pop
pop
push
ljmp
sub
aas
ret
js
repnz
adc
fbld
sub
les
popa
dec
and
mov
push
adc
xchg
scas
clc
mov
xor
dec
ds
add
mov
mov
or
mov
mov
adc
xchg
xor
mov
cmp
cmp
push
lock
aaa
mov
sub
hlt
jg
cltd
jg
mov
stos
xor
int
ja
xchg
dec
movsl
pop
sub
dec
lret
pop
fsubrp
xchg
dec
push
sahf
push
std
mov
push
ja
pushl
rcll
inc
sbb
and
test
icebp
out
jp
es
mov
inc
xchg
movsb
nop
ljmp
mov
jne
out
test
sbb
cltd
cmp
scas
int3
xchg
adc
push
push
adc
jmp
cmp
inc
mov
jg
add
gs
out
pop
icebp
jg
cli
pusha
push
or
sbb
or
popf
sets
sub
inc
clc
and
pop
mov
push
or
lcall
adc
movsl
jge
push
or
insl
shll
lods
or
lea
incb
out
mov
ljmp
add
or
push
sbb
out
clc
scas
pop
decl
andl
mov
inc
and
fs
jne
scas
mov
pop
pusha
loop
xchg
pop
les
mov
mov
push
pop
add
jmp
jae
sbb
push
sbb
lock
hlt
mov
push
arpl
test
loopne
decl
repz
xorl
adc
repnz
jmp
jg
subb
lcall
and
fwait
add
sbb
adc
jge
push
mov
data16
adc
pop
hlt
ss
sti
repz
ss
pop
daa
xchg
bound
out
mov
push
and
mov
fmuls
add
mov
xor
stos
cmp
mov
jg
repnz
aam
sbb
xor
cld
or
mov
inc
or
std
jbe
lods
sbb
sahf
incl
jp
movsl
xchg
push
sbb
adc
mov
add
lahf
jmp
jnp
mov
pop
xchg
add
popf
inc
hlt
fmull
sub
sbb
sbb
loopne
lret
add
cld
xor
adc
or
mov
jge
pop
cld
int
lcall
sti
add
add
add
or
loopne
xor
sbb
pop
fildl
jns
fsts
push
fistpll
adc
inc
call
dec
clc
add
out
push
fdivrp
ds
lret
addr16
icebp
dec
mov
ds
rorb
loopne
or
mov
xlat
aam
in
sub
dec
outsb
xlat
repnz
outsl
inc
jmp
push
dec
jbe
in
jg
cmpsb
cmc
jne
sbb
add
adc
and
mov
loope
mov
fwait
fwait
push
add
pushf
fwait
out
hlt
jne
xchg
imul
lds
loopne
dec
cmp
jae,pt
ljmp
dec
xchg
push
repz
ljmp
or
cmpl
mov
lock
adc
jbe
sbb
adc
xor
pop
or
pop
ljmp
scas
xor
add
and
xchg
inc
ffree
vshufps
jmp
fisttps
loopne
in
cli
sbb
mov
mov
aam
sbb
out
ret
cmp
mov
pop
sbb
jge
pushf
or
fbld
push
loop
sbb
out
mov
lret
cmp
mov
and
fwait
xchg
mov
bound
dec
incl
js
fistpll
xchg
test
xor
mov
rorb
mov
xchg
xor
add
call
sbb
xchg
mov
push
arpl
add
inc
adc
jnp
popa
adc
incb
shrb
add
cld
addr16
stos
stc
cpuid
les
cmp
mov
aas
mov
ret
push
mov
dec
subl
xchg
cmp
sbb
loopne
ljmp
add
mov
hlt
sbb
mov
nop
xchg
mov
in
loop
lcall
into
loope
adc
sub
mov
jmp
or
out
mov
sub
xor
orl
scas
bound
xor
mov
ja
gs
testb
mov
pop
mov
inc
mov
cmp
and
jmp
push
and
jg
mov
mov
data16
xor
loop
mov
mov
sub
aad
jg
cmp
pop
inc
ss
loope
aaa
mov
lods
shrl
out
dec
test
mov
sahf
mov
xor
dec
sub
mov
inc
ss
ljmp
jne
cmp
inc
mov
enter
std
hlt
dec
lahf
fimuls
stos
loop
es
stos
mov
out
and
push
adc
test
f2xm1
cmp
jle
and
in
mov
xor
je
inc
add
test
adc
sbb
out
ret
and
jle
lock
cmp
add
push
cmc
xchg
inc
pop
sbb
ljmp
push
out
adc
daa
mov
xorb
jno
xor
das
xor
dec
ret
movsl
in
xor
call
or
xchg
cwtl
push
les
std
mov
ljmp
mov
jns
js
jae
in
adc
add
loope
mov
inc
das
shlb
fdivl
out
cmp
aaa
mov
sub
or
xor
loopne
dec
mov
and
add
add
cld
inc
int
push
mov
decl
adc
incb
cmp
and
lea
inc
fcoms
push
xor
xchg
das
ja
push
push
bound
les
insb
mov
mov
mov
mov
arpl
outsl
cmc
xor
hlt
fwait
cmp
aam
das
pop
lcall
push
cmp
adc
jmp
xchg
adc
cmpsb
mov
hlt
pushl
popf
jno
sub
sub
pop
push
jecxz
dec
ljmp
shll
push
jle
add
cmp
cld
and
cmp
dec
and
jno
ja
int
mov
les
iret
adc
xchg
adc
pop
shrl
xchg
loopne
inc
aad
in
mov
sahf
fidivs
in
push
cld
mov
rcrl
xor
pop
sub
add
lods
leave
sar
ret
in
push
jae
jbe
sbb
mov
pop
cmpb
test
je
jmp
movsb
call
ljmp
xor
fcmovne
ss
dec
xchg
pop
call
loopne
mov
sub
push
iret
ss
incl
or
inc
mov
mov
scas
inc
or
adc
mov
inc
ljmp
add
loope
pop
mov
push
mov
nop
add
lds
movsb
pop
imul
inc
jne
cmp
subl
add
inc
inc
aas
nop
mov
aad
ss
xor
add
call
leave
cmp
cmpsb
push
std
fiadds
clc
pop
mov
push
or
gs
push
sbb
pop
sbb
rolb
push
xor
ja
shlb
add
stos
aaa
dec
jle
dec
loope
push
mov
inc
rclb
lcall
test
in
inc
inc
int3
xchg
jmp
jge
pop
std
movsb
clc
scas
rcrl
jg
mov
xchg
repz
cmpsl
push
jno
jo
loopne
pop
ret
clc
push
cwtl
add
push
mov
and
jl
mov
pop
clc
lcall
mov
jnp
cmp
es
xchg
hlt
sbb
add
pop
icebp
pushf
outsb
clc
xchg
cmp
lea
push
xorl
adc
push
add
push
notl
and
cmp
adc
lds
mov
std
incl
stos
cmp
adc
mov
mov
xchg
ret
inc
andb
rcrl
sar
pop
js
sbbb
xchg
enter
pop
cmpsb
out
mov
enter
lock
rcrb
pop
pop
adc
ret
popa
mov
adcl
push
gs
or
sub
inc
mov
call
inc
stos
xchg
add
cmp
cmp
mov
mov
mov
loopne
jg
pushl
mov
or
xchg
xor
push
pop
inc
sub
mov
sbb
xchg
dec
add
rcll
xchg
lods
push
mov
push
inc
push
in
in
arpl
lcall
pop
aam
insb
add
inc
mov
sbb
jmp
mov
adc
call
jl
fcompl
sub
test
adc
imul
jb
fwait
nop
push
pop
scas
lret
shll
dec
bound
push
mov
push
dec
sub
pop
cmp
xchg
cli
pushl
out
fs
mov
gs
jno
mov
les
jle
mov
cmp
mov
mov
inc
pushf
ret
dec
data16
cs
ret
mov
and
or
push
mov
stos
inc
inc
cld
aaa
sbb
xchg
clc
push
lods
fisttpl
xchg
mov
popa
shrl
jecxz
outsl
movsb
xor
out
push
and
xor
fisubrl
outsb
mov
loope
jmp
fnstsw
call
je
sub
movsb
lcall
ja
add
pop
mov
add
psrld
movsl
fsubrs
mov
sbb
aas
decl
add
and
add
pop
sti
sbb
push
stos
stc
xchg
xchg
lcall
adc
arpl
test
adc
je
arpl
cld
loop
dec
mov
mov
lock
addl
scas
icebp
lods
inc
mov
adcl
enter
clc
cmp
mov
lcall
mov
add
sarb
stos
das
mov
sbb
lcall
xchg
xor
mov
add
and
decl
dec
hlt
in
shrb
cmp
popa
imul
decl
inc
jno
dec
cli
jp
dec
jae
jb
jbe
inc
dec
jne
ret
insb
add
das
xchg
push
pop
ss
push
fwait
xchg
stos
xchg
jp
sbb
dec
ljmp
mov
pop
insl
movsl
insb
inc
dec
fisttps
std
cltd
pusha
loopne
push
out
adc
mov
xor
int3
xchg
mov
or
pushf
adc
mov
mov
sbb
mov
dec
push
xchg
aas
inc
mov
sub
stos
test
push
outsb
scas
jb
mov
cwtl
test
mov
or
xchg
xor
sbb
jo
mov
push
mov
sahf
scas
and
pop
xchg
mov
dec
xchg
cmp
pop
mov
add
or
test
sbb
lret
push
sbbb
xchg
mov
outsl
mov
sbb
xchg
inc
das
fdivs
cld
ljmp
repz
jge
dec
add
mov
fidivs
outsl
jo
mov
dec
pop
inc
push
lcall
data16
adc
aas
sub
iret
push
daa
hlt
mov
clc
cmp
and
sbb
rcrl
hlt
decl
and
outsb
lods
xor
aaa
mov
push
add
hlt
loop,pn
xor
mov
push
enter
daa
mov
loopne
sbb
xor
lods
rorl
lods
jb
add
xchg
cmp
dec
cmp
pop
add
into
lcall
sub
mov
or
dec
mov
dec
pop
xchg
incl
and
xchg
mov
cmpsl
lcall
push
mov
cld
add
inc
cmp
out
mov
incl
imul
ret
pop
inc
out
or
push
ret
jno
in
fcmovu
sbb
incl
push
mov
les
adc
jg
push
scas
ret
jmp
shlb
cmp
mov
push
popf
adc
pushl
es
repz
mov
mov
mov
aam
ljmp
sbb
fwait
scas
in
inc
mov
add
inc
cwtl
hlt
cwtl
les
jo
out
sub
arpl
popf
ljmp
push
sbb
sub
cld
xor
fldcw
mov
imulb
lds
incl
rcll
mov
or
mov
inc
rcl
lods
popa
xchg
lret
sub
xchg
jg
xor
pop
ret
push
adc
mov
jns
xchg
decl
xchg
cmp
push
pop
dec
pop
push
sub
jmp
loopne
lods
scas
out
mov
adc
mov
test
jg
stos
fwait
xchg
push
mov
mov
dec
cld
pushf
aas
pusha
call
adc
cmp
outsb
sub
jg
loope
test
or
insb
add
call
mov
or
outsl
cltd
stc
xchg
add
mov
sbb
hlt
cmpsb
decl
adc
lods
outsl
es
sbb
loope
pushl
fwait
and
mov
adc
mov
scas
stos
xor
mov
das
notb
sub
inc
or
jmp
xor
loope
insl
push
sbb
lret
cli
mov
mov
push
test
push
sub
ljmp
mov
mov
cwtl
ret
pop
lock
and
jbe
dec
mov
enter
std
inc
ljmp
imul
addb
push
add
call
pushw
imul
dec
outsl
jbe
ljmp
push
mov
cmp
pop
inc
ljmp
inc
cmp
cmp
xor
popf
or
scas
addr16
mov
push
adc
mov
lcall
push
sbb
hlt
aad
jl
jae
cmp
dec
add
jmp
movb
and
into
xchg
daa
dec
adc
mov
dec
js
cmp
rorl
dec
pop
mov
cmp
and
jmp
inc
xor
clc
pushl
xchg
push
dec
and
mov
bound
scas
ljmp
mov
adc
add
gs
mov
push
jp
daa
add
adc
inc
loope
push
ljmp
movsl
sbb
test
push
ljmp
dec
cmp
jge
and
daa
cmp
dec
dec
xor
cmp
pop
lcall
mov
mov
andl
add
add
into
mov
insb
pop
adc
ljmp
shrb
mov
push
pop
inc
call
or
jg
in
mov
call
daa
push
fsubrl
mov
clc
push
mov
outsb
clc
jg
fwait
hlt
mov
lahf
mov
cwtl
popa
es
push
cmc
mov
imul
and
dec
scas
frstor
push
jns
in
mov
fwait
add
push
imul
mov
dec
repnz
push
jp
inc
jno
dec
cmp
jg
jle
xchg
test
arpl
lea
scas
mov
jnp
adc
pop
adcb
xchg
int3
sbb
enter
push
in
and
cmpsb
jg
loop
je
and
mov
ja
xchg
sub
jmp
lea
mov
xchg
aaa
jge
jg
outsb
into
mov
jno
xchg
pop
add
lcall
sub
pop
mov
mov
insl
jnp
stos
mov
stos
clc
cli
jmp
dec
repnz
inc
adcl
mov
out
mov
cld
mov
shlb
pop
inc
lock
adc
scas
dec
pop
lock
pushl
or
adc
outsl
imul
pushl
ss
xchg
jne
cmp
leave
or
push
pusha
cs
cli
jle
pushl
jne
push
push
movsl
sub
dec
fildll
or
jne
mov
jo
adc
rol
ja
adc
sbb
addr16
mov
dec
cmpsb
push
sbb
add
cmp
movsb
jle
inc
inc
xchg
lock
cld
fcompl
inc
fsts
cmp
adc
mov
test
dec
aam
inc
mov
ss
push
clc
inc
dec
mov
sub
outsl
shrl
das
ret
add
xor
sbb
or
test
cltd
jg
lds
xchg
nop
mov
into
test
lods
add
sbb
pusha
mov
ret
outsl
xor
outsl
lods
aaa
pusha
mov
push
cmc
cmpsb
cmp
scas
scas
ret
mov
popa
jg
mull
jbe
add
dec
popa
mov
cld
cwtl
pop
add
mov
cs
pop
or
pushf
jg
xchg
push
mov
icebp
mov
mov
std
xchg
movsl
rorl
push
pop
outsb
dec
sbb
mov
mov
fcompl
pop
ss
cmp
add
mov
add
jg
inc
add
and
out
and
mov
je
dec
rclb
les
pop
rolb
dec
les
pop
and
stos
ret
dec
decl
lock
dec
xor
repnz
mov
fcoms
sub
inc
adc
pop
jmp
dec
cmp
push
sub
jno
ds
add
call
add
jns
xor
stos
pop
enter
jmp
cltd
icebp
dec
jbe
decb
pop
enter
cltd
stc
data16
nop
jno
mov
out
xor
call
add
push
xchg
adc
or
adcl
das
add
outsb
cs
repnz
mov
add
je
xor
dec
in
mov
push
jge
gs
incl
sbb
loope
outsb
je
outsl
clc
incl
cmp
scas
jo
lahf
stc
js
in
cmp
sbb
jg
imul
jo
push
and
es
fmuls
ljmp
xor
gs
fs
scas
addr16
and
out
cmp
mov
jnp
js
cwtl
fnstenv
ljmp
mov
cmp
rcll
or
rcrb
subb
inc
iret
adc
push
cmc
push
inc
outsb
int3
xchg
or
gs
cmp
and
or
bnd
ja
mov
pushl
pop
aaa
push
push
lret
decl
pop
mov
jb
or
pop
sbb
sub
xchg
dec
adc
shrb
ljmp
jge
das
inc
repz
jge
cwtl
test
mov
cwtl
jo
lahf
push
out
ljmp
xchg
mov
sbb
xchg
adc
arpl
sbb
ljmp
pop
into
push
lds
xchg
inc
add
dec
push
xor
jg
daa
pop
cmc
inc
and
jg
stc
xchg
xor
lcall
cwtl
and
jl
push
cld
fildll
adc
mov
cmp
out
cmpsl
or
outsb
mov
dec
fbld
shrl
scas
jb
and
lahf
pop
jp
andl
or
dec
imul
sbb
ja
mov
filds
pushf
jbe
mov
jg
mov
and
dec
jo
adc
insl
add
or
adc
or
dec
loopne
clc
data16
fildll
push
pop
or
and
jle
sahf
clc
sti
or
sub
or
stos
xor
jb
adc
sar
incl
popf
fsubl
sti
sub
adc
and
sub
mov
fldcw
int
outsl
ja
mov
es
mov
mov
jne
push
xchg
mov
xchg
fs
jl
sub
cmp
loopne
mov
jo
xor
adc
lcall
and
icebp
jg
incl
bound
push
int
sbb
jne
addl
mov
scas
mov
jecxz
imul
and
mov
jne
lods
push
mov
jl
sbb
scas
or
mov
hlt
dec
sbb
push
incl
mov
xor
sub
jbe
push
lret
mov
retw
loopne
mov
bound
mov
fs
mov
inc
les
dec
jne
jnp
sub
imul
sbb
mov
stc
sub
jmp
test
mov
daa
adc
push
int
test
pop
mov
cmp
or
iret
add
adc
xchg
xor
decl
mov
in
add
mov
stos
inc
shlb
cwtl
rorb
test
vmaxsd
xchg
dec
jns
cmp
xchg
push
cmpb
cli
xchg
jl
adc
jo
xor
ljmp
inc
pop
cmp
and
sbb
std
push
adcl
cmp
aaa
arpl
xchg
inc
out
cmp
sub
mov
xchg
cmp
cltd
cmp
mov
scas
gs
mov
xor
scas
sbbb
sbb
lcall
pop
mov
das
mov
and
mov
mov
insb
aaa
inc
lcall
stos
mov
mov
and
jp
das
lahf
andb
xchg
add
jp
arpl
jbe
shlb
xor
push
inc
inc
cli
cmp
add
cmpsb
je
bound
sarl
mov
out
sahf
dec
jae
add
jle
add
arpl
xchg
das
jbe
mov
jg
xor
xchg
cmp
adc
orl
pop
sub
jae
fs
mov
enter
push
pop
icebp
fdivrl
out
mov
jae
mov
fbstp
stos
push
cmc
jg
mov
sbb
xor
pop
outsb
fmuls
xor
call
pop
mov
dec
ret
add
rcll
sub
jb
cli
jno
push
lods
pop
pushf
and
out
pusha
xchg
xchg
es
shrb
arpl
adc
mov
pop
jae
sub
addr16
or
mov
push
xchg
xchg
push
movsb
dec
jbe
das
sub
mov
les
adc
xor
sub
loope
jg
or
mov
pop
out
mov
filds
aas
lret
jnp
mov
fwait
test
and
cmp
call
clc
mov
hlt
mov
jae
cmc
xor
dec
sbb
jne
push
dec
add
outsb
mov
ja
test
mov
lcall
mov
mov
testb
jo
add
adc
mov
mov
fs
xor
in
addl
add
mov
pop
dec
jb
mov
dec
and
test
cmpsb
mov
pushf
call
imul
into
mov
sbb
in
nop
add
movsb
aas
arpl
push
pop
dec
jecxz
lods
mov
jmp
inc
cmp
ret
fisubrl
dec
shll
outsb
jns
data16
mov
test
jle
sub
mov
push
movsl
xor
mov
xor
jg
jmp
jg
mov
pop
aad
or
jb
cmp
inc
xchg
inc
adc
mov
inc
pop
stos
scas
pusha
inc
mov
test
es
mov
outsb
les
mov
xor
sbb
pushl
das
sahf
ss
add
add
data16
sahf
decl
mov
mov
push
inc
out
icebp
xchg
jns
std
mov
fcoms
add
out
mov
dec
mov
pushf
add
mov
jmp
imul
bextr
sbb
inc
mov
repz
hlt
ljmp
aam
mov
inc
pushf
and
rolb
and
ret
or
lcall
mov
dec
decl
xchg
xchg
imul
sub
mov
mov
jmp
movsl
add
sbb
jo
xchg
push
mov
lock
test
rorl
inc
ljmp
incl
xchg
out
lret
jno
mov
and
xor
jbe
incb
and
sub
pop
pop
dec
js
fldcw
int
hlt
aad
adc
stos
push
xchg
es
hlt
push
mov
leave
push
mov
sub
das
clc
ljmp
jl
dec
inc
xor
and
pop
clc
mov
std
push
add
pusha
xchg
sbb
jmp
jmp
xor
and
jg
mov
decb
push
sbb
sub
cmpsl
test
daa
sbb
pop
popa
xchg
cs
popa
jmp
add
and
push
xchg
out
mov
push
stc
in
incl
insb
lret
jl
pop
sub
push
lret
pop
adc
jae
jp
jbe
inc
cmc
pusha
push
push
in
ficomps
jge
or
jno
cmc
insl
xchg
arpl
inc
lock
xor
hlt
call
stc
jb
dec
or
out
les
inc
sub
dec
jl
dec
or
outsl
xchg
push
out
testl
rcr
lcall
gs
loopne
and
push
pop
icebp
aad
or
call
mov
imul
mov
push
fstpl
inc
mov
ret
insl
mov
push
cmpsb
mov
out
xor
push
in
in
pusha
sub
icebp
lret
lods
mov
push
rol
mov
mov
outsb
lock
push
mov
or
lods
in
pop
and
inc
pusha
fiadds
mov
dec
sub
push
bound
dec
xchg
jge
loope
cmpsb
rolb
cmp
xor
add
mov
aaa
or
xchg
lea
push
xor
jg
push
aam
push
add
xchg
js
dec
sbb
push
inc
xchg
xchg
in
hlt
or
scas
insb
inc
mov
aad
jno
lcall
fdivp
test
cltd
iret
xchg
cs
orl
stc
adc
incl
ds
inc
clc
mov
cltd
out
ret
or
adc
sub
xchg
push
arpl
cld
outsl
clc
cld
into
jns
call
inc
push
mov
sarb
cmp
jbe
push
dec
int
push
jno
cld
jge
lret
pusha
xor
cs
pop
and
shrb
jo
sub
in
addb
cmc
mov
ss
mov
pop
inc
mov
mov
fwait
fbstp
data16
addl
pop
gs
imull
lods
mov
xchg
ja
adc
mov
decl
or
jae
scas
daa
push
test
mov
mov
inc
pop
xchg
movhlps
rcrl
xchg
mov
sub
cltd
and
cli
incl
inc
xor
xchg
add
jnp
hlt
xchg
xchg
icebp
call
jo
dec
aas
push
in
mov
mov
daa
outsb
xor
mov
push
jne
mov
add
jecxz
mov
popf
stos
mov
es
sbb
pushf
ds
decl
or
xor
mov
lea
dec
jp
adc
icebp
sub
imul
cmp
lock
es
repnz
dec
xchg
inc
cmc
sti
add
mov
ljmp
incl
popa
sub
dec
lahf
in
lods
push
movsb
nop
jnp
jnp
lock
or
adc
pop
push
int
jge
or
jmp
mov
subb
je
push
or
nop
and
xchg
cld
push
lcall
std
in
imul
mov
push
movsl
nop
cmp
inc
cmp
mov
std
arpl
lcall
adc
mov
cmp
fs
test
xchg
insb
das
sub
lods
push
ret
jae
fwait
stc
mov
jbe
mov
jle
add
outsb
sbb
sahf
or
xchg
or
idivl
mov
test
in
loopne
bound
push
jecxz
add
or
repnz
fidivrs
pop
int3
lahf
push
inc
xor
mov
pop
dec
call
mov
fldt
xchg
dec
loop
jg
cmp
sbb
mov
dec
sub
cmp
push
js
sar
jmp
std
pop
sub
add
push
aam
push
hlt
xor
push
shll
adc
mov
mov
adc
cld
incl
xlat
enter
pop
mov
add
es
mov
pop
jle
xor
movsb
mov
cmpsb
fwait
subb
out
test
mov
push
or
push
mov
cmp
call
popf
sbb
repnz
xchg
lods
dec
fstps
xchg
dec
xor
mov
movsl
xchg
or
test
movl
xchg
pop
xchg
in
mov
mov
dec
int
xchg
adc
mov
jg
fisttps
addr16
fsubs
mov
xor
aaa
incl
ss
fidivrl
dec
adc
negb
xchg
mov
jns
xchg
adc
xchg
movsb
fsubs
fisttps
mov
pop
sarl
nop
xchg
iret
imul
jns
mov
add
lods
pop
mov
mov
xchg
jg
cmpsb
fisttps
mov
hlt
gs
sbb
mov
jle
push
clc
iret
out
dec
fdivl
imul
mov
pusha
jecxz
jmp
or
outsl
xchg
es
insb
mov
test
ja
mov
out
cmp
sbb
mov
adc
mov
loopne
jle
push
inc
in
lahf
clc
add
clc
sub
sahf
aam
lods
jmp
jg
push
inc
stos
insb
cld
cs
ret
pop
sub
cmp
adc
and
shrl
popf
sar
pushl
pushf
push
loop
xor
cmp
js
nop
cmp
jecxz
outsb
in
lcall
mov
lret
push
outsb
pop
add
dec
fisubrl
ss
mov
lods
ret
adc
decl
sahf
int3
and
mov
repnz
test
xor
add
push
mov
pop
addr16
incl
push
xchg
xchg
lcall
sub
shl
gs
sbb
incl
and
inc
ss
cmp
add
lods
stos
movsb
cld
lcall
or
add
dec
pop
push
fwait
jb
pushf
push
fbstp
sbb
scas
iret
xor
xchg
into
jmp
pop
cmp
sbb
addr16
mov
fsubrs
jp
imul
cmpb
movb
ja
mov
cmp
and
push
popf
insb
cmovbe
or
int
lea
nop
xchg
push
sub
jns
cmp
fstps
test
mov
jge
repz
or
xchg
cmp
sbb
popf
int3
xor
add
or
mov
jmp
dec
sbb
std
cmp
push
js
dec
fwait
sbb
ljmp
mov
aas
out
hlt
add
xchg
test
adc
call
sbb
mov
xor
ljmp
sahf
mov
aas
popf
jg
cmpsl
add
push
jne
and
ljmp
jnp
dec
adc
inc
add
aas
sbb
out
add
adc
nop
sahf
cld
scas
mov
int3
cmp
cld
popf
je
jno
push
adc
js
test
decl
inc
cmp
pop
fwait
jns
stos
xchg
adc
and
call
decl
incl
jmp
roll
arpl
xor
inc
incl
std
sbb
and
popa
or
mov
lock
push
xor
cmp
out
jnp
js
andb
jnp
cwtl
loop
pushl
jle
aam
pop
jae
jae
ret
push
dec
xor
jne
inc
addr16
cmp
data16
pop
ret
inc
cmp
stos
or
mov
or
jl
pop
adc
inc
or
inc
cmp
lea
xchg
outsl
mov
adc
rcr
movsl
lea
mov
pop
clc
stos
les
jg
and
mov
cmp
lods
mov
decl
into
xchg
adc
jae
add
xchg
int3
jg
add
inc
cmp
daa
lea
std
pop
push
push
cld
mov
xchg
movsl
leave
cmp
mov
inc
xchg
cli
or
mov
repnz
mov
push
add
mov
sar
incl
push
dec
push
inc
cmpl
movsl
movsl
nop
cmp
mov
test
ss
cs
add
inc
mov
je
or
enter
insl
lods
shrb
dec
mov
push
push
jl
js
add
mov
shlb
lock
fildll
push
outsb
stos
and
dec
lds
xchg
mov
or
sbb
mov
lds
imul
mov
pop
pcmpgtb
bound
mov
aas
pop
add
je
adcl
out
cltd
jne
inc
dec
enter
pop
adcb
push
insl
scas
icebp
mov
mov
sub
sbb
dec
push
mov
inc
pop
xchg
jg
mov
bound
sbb
jnp
dec
fwait
mov
clc
ljmp
or
cmpb
cmp
inc
jae
xchg
dec
daa
inc
inc
jle
cltd
xor
fcomi
subb
mov
int
sub
hlt
mov
nop
clc
out
movsb
sbb
xchg
xchg
cmpsl
mov
ljmp
or
loopne
mov
fidivrs
dec
cld
pushf
mov
mov
mov
xchg
mov
mov
cld
test
or
jecxz
push
loop
mov
mov
aam
mov
jns
loop
mov
scas
clc
scas
cli
and
rclb
mov
mov
or
hlt
int3
lods
scas
hlt
lods
add
dec
mov
cmpsl
xchg
mov
cli
std
bound
aaa
mov
mov
mov
loop
cli
stc
out
mov
xor
xorl
push
add
jp
lods
push
inc
mov
jbe
inc
fwait
jbe
xchg
dec
adc
xor
xchg
adc
and
xor
push
and
jae
je
jl
sbb
or
mov
adc
or
insl
and
insl
sar
pop
inc
mov
sti
add
cli
sbb
mov
out
and
and
clc
xor
aaa
test
pop
adc
mov
ud0
xchg
and
push
cmp
ds
daa
cs
xor
push
inc
xor
inc
es
xor
loopne
test
xchg
add
jmp
lcall
jmp
sti
adc
pushf
add
mov
jg
arpl
std
pop
fdivr
or
les
arpl
adc
dec
inc
cld
aam
push
clc
add
inc
lods
add
mov
outsl
int3
mov
inc
and
pop
dec
fldt
ljmp
stos
add
inc
inc
testb
inc
inc
xor
ljmp
imul
xor
sbb
mov
cmp
inc
mov
pop
sub
cmp
adc
lcall
lock
loope
pop
xor
sub
adc
cmp
mov
push
mov
mov
sub
xchg
dec
scas
mov
leave
xor
jl
jbe
test
xor
add
jmp
mov
gs
adc
add
daa
mov
pop
sbb
lret
scas
mov
enter
fisttps
cmp
cmc
out
out
or
fists
lods
adc
call
push
cltd
dec
out
test
xchg
and
push
push
xor
jo
sahf
mov
adc
cli
call
stos
xchg
aaa
jno
xor
xchg
test
mov
lcall
mov
push
pop
daa
push
jnp
xor
push
pop
and
push
xchg
push
shlb
mov
popa
hlt
inc
mov
rcrb
ljmp
ljmp
stc
add
shll
filds
push
dec
fs
mov
pop
inc
or
out
test
push
dec
pop
adc
adc
jl
jg
add
add
mov
ss
sub
add
mov
xchg
ljmp
call
icebp
add
mov
test
cld
adc
push
inc
daa
push
xchg
lock
cmp
push
mov
mov
push
inc
movsb
cld
push
cld
incl
xchg
aas
jne
cs
jns
cmp
subl
sub
daa
outsb
xchg
cmp
add
fwait
mov
cmp
push
dec
fldenv
inc
inc
out
jb
je
lcall
add
in
adc
aas
popa
mov
test
shll
incl
xor
clc
mov
pop
xchg
push
mov
ss
pushl
add
mov
add
call
xchg
inc
mov
mov
mov
call
in
pop
cmp
insl
daa
push
cmp
or
cltd
inc
fidivrs
push
cld
incl
dec
sbb
outsl
add
pop
nop
pushf
sbb
adc
dec
jge
mov
push
cmpsb
push
imul
jg
loope
pop
popa
mov
outsb
mov
jmp
push
xor
pop
insl
loope
adc
sub
sbb
push
sub
es
outsb
adc
jbe
push
cmovs
decl
push
xor
adc
das
jl
sub
or
or
or
push
cmp
inc
cmp
movaps
incl
and
dec
pop
sub
iret
ror
lret
ljmp
adc
add
clc
add
xchg
jle
xor
loopne
icebp
stos
clc
cs
mov
mov
fsubs
mov
jle
pause
js
mov
inc
mov
ljmp
iret
mov
gs
mov
call
mov
push
jle
pop
cmp
mov
sbb
xchg
popa
and
rcrl
jnp
fnsave
and
pop
mov
lods
jns
fidivs
xchg
push
lcall
movsb
push
rol
xor
lcall
jnp
scas
test
in
and
cmp
xor
jg
test
add
sbb
aaa
mov
xor
mov
push
jge
xor
pop
sti
pop
call
ds
test
dec
add
mov
enter
ret
adc
or
jecxz
das
mov
loop
rorl
repnz
lret
dec
pushf
jb
andb
or
or
pop
rcrb
lods
les
hlt
dec
lcall
iret
sub
mov
push
movsl
orb
cmpl
sti
inc
clc
call
pop
mov
inc
mov
jns
insb
scas
jo
xchg
or
inc
ret
sbb
inc
mov
and
addb
cmpsl
mov
orb
cmp
lcall
das
ja
pop
dec
ja
push
push
xchg
cs
fsts
dec
test
pop
add
call
add
mov
jg
cvtps2pd
insl
push
shrb
or
in
add
push
xor
ja
cmpsb
insl
outsb
mov
cmp
loopne
inc
inc
xchg
aas
sar
incl
inc
imul
sbb
repz
mov
push
adc
mov
ds
fldt
nop
inc
mov
jmp
fwait
sbbl
pop
cmp
cmc
xchg
lcall
data16
lret
jmp
mov
sub
sub
sub
cli
push
mov
xor
hlt
add
add
insb
cwtl
out
cmpsb
outsb
inc
aad
cmp
psrad
cs
adc
dec
inc
sub
lods
and
jg
and
fisttpl
data16
inc
mov
dec
mov
or
cmp
cmp
cli
xchg
cmp
loope
cld
ljmp
mov
inc
fimuls
fwait
push
dec
pop
mov
xchg
lcall
inc
mov
mov
stos
pop
movsb
sbb
aaa
fistpl
fdivr
incl
roll
cmp
das
jns
iret
push
jo
inc
sbb
in
mov
xor
and
lods
xor
in
movsb
mov
dec
mov
ret
movsb
jno
stos
mov
lds
mov
decl
mov
xchg
jle
mov
pop
lret
jge
and
mov
jg
sub
rcl
icebp
xchg
jno
insb
cli
mov
test
inc
incl
rolb
test
ret
xor
dec
call
xchg
enter
call
or
bound
sarb
lock
dec
lret
sub
outsb
test
nop
push
inc
xchg
push
pop
loopne
mov
test
inc
ja
push
orl
jge
push
push
xor
push
scas
push
in
mov
ljmp
clc
bound
add
and
mov
rclb
mov
std
insl
cli
loope
sub
int
push
scas
scas
outsl
call
inc
inc
in
mov
mov
and
or
dec
sahf
cmp
lods
mov
pop
pop
std
call
add
scas
es
test
fnstcw
mov
decl
lods
pop
sbb
ljmp
inc
push
js
jb
and
xor
cmp
sbb
push
ret
fcompl
inc
movl
scas
push
cltd
adc
adc
jg
fisubs
mov
les
pop
lea
repnz
scas
add
or
jg
sti
lods
cld
and
cmpsb
xchg
cld
ja
clc
test
xor
pop
jecxz
std
stos
decl
inc
push
in
stc
jge
push
jb
clc
xor
loop
jg
decl
and
push
lock
jnp
mov
test
dec
decl
jle
nop
dec
popa
push
dec
pop
xchg
sub
xchg
xor
jle
pop
dec
mov
xor
push
mov
scas
repz
pop
roll
cld
decl
or
out
xchg
movsb
mov
out
xor
decl
dec
fs
subl
out
jl
mov
movsl
mov
ljmp
cmpsl
mov
lods
inc
and
testl
sbb
sar
incl
jne
ret
mov
sbb
jmp
data16
call
push
xorb
jns
cwtl
ss
dec
add
outsl
daa
push
cmp
ljmp
aas
jge
setb
mov
pusha
movsl
sub
lock
dec
in
decl
sbb
sarl
scas
mov
mov
jns
pop
sbb
icebp
lcall
in
xchg
mov
stc
pop
scas
ja
in
jmp
add
xor
icebp
inc
cld
or
pushl
jle
mov
jns
pop
jno
in
js
imulb
das
cmp
dec
pop
filds
ljmp
mov
icebp
jg
xchg
lret
and
aaa
cld
ja
ret
sub
mov
mov
mov
or
jnp
jmp
cld
imul
ret
mov
mov
cmp
daa
inc
jmp
daa
jne
and
pop
pop
jno
outsb
call
and
xlat
mov
ja
fldl
add
fldl
mov
mov
imul
and
sti
into
pop
mov
ret
or
ret
clc
cmp
dec
cmc
rclb
loop
pushl
mov
test
insl
cmp
sub
sahf
das
pop
jg
je
mov
js
in
inc
dec
inc
cmpsl
pop
and
mov
add
out
sbb
push
inc
ret
inc
mov
add
fdivs
lea
popa
faddl
pop
je
pop
cmp
adc
test
cmp
xor
insl
stos
push
bound
jg
xchg
jge
lods
pop
cmc
scas
add
stos
jle
pop
dec
shll
pushf
xchg
xchg
in
push
xchg
test
push
call
notb
mov
lahf
cmp
fdivl
mov
mov
outsb
faddp
dec
scas
mov
add
test
ret
mov
dec
mov
pop
dec
cwtl
push
out
xor
xchg
push
xchg
jb
ret
loopne
jge
xchg
push
imul
push
mov
mov
mov
jno
mov
incl
cmp
inc
and
mov
jl
ret
sbb
sub
mov
std
enter
pushf
decl
lock
cs
push
jp
adc
lods
sbb
push
jns
or
sub
mov
mov
cmp
insl
jbe
lock
bound
sbb
sbb
mov
lods
xchg
sub
adc
cld
xchg
out
jb
testb
enter
mov
test
jns
filds
cmpsb
scas
dec
jecxz
cltd
mov
mov
call
lret
mov
data16
outsl
out
test
out
pop
jns
jg
add
fwait
sub
imul
mov
push
das
clc
jg
std
mov
lods
sub
fdivrl
mov
jbe
fs
add
sahf
dec
int
inc
mov
jp
mov
push
cmc
xor
mov
dec
insb
ficoml
mov
into
negb
xchg
mov
dec
fadd
push
xchg
incl
orl
xchg
outsl
sub
lods
std
incl
cmp
mov
push
adc
mov
in
and
sbb
ljmp
mov
push
inc
out
inc
xchg
std
and
outsb
daa
loope
mov
mov
xchg
das
lcall
jbe
stos
jns
aaa
outsl
xor
pop
scas
mov
sbb
jns
dec
in
and
rorb
bound
std
pop
mov
or
pop
and
imul
out
and
divb
dec
idivb
pop
push
inc
mov
loope
inc
loope
jg
aam
daa
scas
xchg
lcall
call
iret
test
into
xlat
or
add
in
cmp
jmp
ss
mov
pusha
sub
sub
mov
push
cli
cld
pusha
test
insb
or
lret
ja
sub
fdiv
rol
jbe
out
insb
shlb
xor
hlt
jg
aas
aas
hlt
mov
inc
cmp
int
pop
stos
push
push
call
jg
lods
ds
xlat
cmp
mulb
cli
jno
inc
insl
xchg
jo
xchg
out
ljmp
je
roll
call
push
mov
int
addr16
jae
xlat
adc
pusha
stos
mov
push
sti
dec
pop
rorb
andb
dec
sbb
arpl
or
mov
icebp
lahf
xchg
test
jbe
clc
pop
hlt
pop
je
lock
push
add
call
std
js
fadds
test
inc
aam
popf
xchg
xchg
dec
xchg
dec
cmp
decl
ljmp
out
pop
scas
inc
jnp
push
push
clc
addr16
in
dec
clc
push
ret
jmp
cmp
popa
lahf
sub
sbb
stc
xchg
clc
enter
push
cmp
cmp
mov
cmp
mov
xor
nop
nop
push
mov
xchg
cli
popa
lods
fildl
hlt
cld
jl
int
incl
adc
ret
lods
mov
add
jmp
mov
test
xchg
jno
data16
or
jl
cli
jp
clc
push
fcoms
mov
lods
test
lods
fs
lock
mov
mov
xchg
dec
lahf
sub
xchg
mov
lcall
daa
test
adc
dec
inc
sti
jge
cmpsb
dec
cmp
pusha
pop
xchg
mov
clc
jbe
addr16
pop
mov
jbe
xchg
sbb
icebp
imul
mov
loopne
xor
in
call
mov
jmp
mov
ljmp
loopne
das
pushf
xchg
insl
adc
xor
mov
ficoms
pop
adc
push
lea
fsubrs
ljmp
xor
addr16
icebp
xor
shrl
ret
pushl
fisttpl
scas
adc
gs
pop
lahf
mov
jecxz
jb
inc
stos
mov
xchg
pop
out
mov
orb
cld
call
mov
mov
xchg
pop
inc
notb
lea
sub
push
inc
mov
xchg
test
push
pushf
mov
jg
mov
inc
xor
nop
pop
push
sub
lea
loopne
addb
mov
dec
stos
cltd
testb
dec
mov
loope
mov
fiadds
mov
aaa
sbb
sub
mov
ljmp
addl
cs
lcall
cmpsl
mov
xchg
push
mov
mov
dec
jmp
xor
push
ficomps
mov
int
filds
incl
imul
imul
xor
aas
call
sti
pushf
cmp
insb
fcomip
sub
arpl
xor
xchg
outsb
mov
inc
fistpll
addr16
call
mov
mov
or
hlt
test
and
ds
das
stos
out
mov
push
es
jge
fstl
sti
cwtl
mov
mov
inc
loop
dec
pop
xchg
imul
loope
jne
in
inc
out
xor
or
incl
mov
lock
jo
lock
int
cli
pushl
dec
fcomps
in
mov
stos
idivl
outsl
cli
mov
sub
and
or
add
jmp
xor
cwtl
mov
dec
mov
sub
inc
push
mov
insl
ljmp
jg
push
movl
rcrl
jo
cmpsl
adc
sub
jmp
push
cmp
jge
in
cmp
dec
push
insl
pop
xchg
jb
lods
aaa
outsb
call
sub
prefetch
or
mov
xchg
xlat
or
outsb
repz
push
push
pushl
les
cs
popf
sub
push
push
in
sbb
enter
mov
cmp
sub
outsb
jbe
dec
mov
jne
push
fdivs
in
xchg
ljmp
sub
cmpsl
sbb
mov
rclb
dec
rcl
sub
cmp
cltd
leave
jp
test
out
jae
mov
es
pop
test
push
les
les
or
clc
sbbb
push
sbb
jo
sub
dec
cmc
dec
pop
pop
scas
mov
pop
push
dec
sbb
add
adc
sbb
daa
incl
mov
add
js
and
scas
outsl
bound
xchg
stos
mov
movsl
inc
xor
cmp
inc
out
cmp
hlt
bound
fwait
jnp
cmpsl
push
cmp
sbb
xor
xor
call
call
mov
jo
shrl
lods
inc
jg
sbb
leave
xor
lea
mov
aam
jp
mov
shlb
jg
add
stos
fs
inc
push
mov
pushw
push
adc
incl
pop
hlt
or
mov
mov
inc
push
stos
pop
loopne
mov
adc
add
xor
ljmp
cmp
pop
cli
mov
int3
sbb
adc
cwtl
stos
into
mov
push
cltd
inc
decl
sub
xor
imul
xor
cmp
push
aaa
dec
movsb
int3
mov
daa
and
jg
sub
xchg
stos
in
outsb
rolb
inc
adc
mov
in
push
cmp
test
pushf
je
sub
mov
fs
xchg
int3
mov
or
mulb
add
inc
stos
adc
ds
push
or
fsubl
bound
aaa
jno
imul
rorb
out
pop
cltd
icebp
aas
sub
divl
sbb
sbb
add
jge
mov
hlt
jp
negb
mov
mov
and
aad
movsb
ja
bound
mov
loope
jge
xchg
pushl
rorb
pop
test
jbe
mov
add
fld
xchg
mov
jne
ljmp
mov
mov
push
pusha
pushl
fdivrl
xchg
lds
cmp
mov
test
out
xchg
cs
jg
mov
sbb
xor
jge
xor
jnp
lock
xor
mov
cmp
lea
mov
mov
ss
inc
adc
sub
jns
bound
or
and
out
decl
sbb
add
stc
push
insl
sub
lds
imul
jmp
push
sbb
shrl
int
add
outsb
dec
mov
lcall
push
gs
scas
mov
add
aad
mov
test
icebp
loope
sub
es
pop
pop
mov
sbb
decl
shll
dec
mov
inc
mov
jno
es
popf
or
inc
inc
mov
int
xlat
mov
sbb
fidivs
push
inc
loop
sbb
out
mov
int3
jbe
inc
or
push
outsb
imulb
xchg
jbe
out
lods
rclb
push
mov
mov
mov
filds
sbb
sub
test
jmp
pop
xchg
or
in
jl
iret
arpl
cwtl
pushf
xchg
fists
addb
fildll
test
out
lea
mov
into
adc
and
leave
push
push
lcall
push
scas
xchg
mov
lcall
stc
mov
or
outsb
xchg
jnp
cmp
push
jno
inc
jge
jno
pop
pop
pop
imul
outsb
insl
pusha
lahf
sbb
push
adc
mov
xchg
mov
call
or
jg
add
inc
xor
sbb
dec
fcos
call
loopne
ljmp
data16
cwtl
pop
add
pushf
adc
int
pusha
and
push
les
repz
out
insl
pop
and
mov
inc
fildll
inc
xchg
or
sti
lea
cld
call
or
imul
pushl
cmp
adc
test
mov
jbe
pop
out
pop
push
imul
fstl
dec
repz
cmpsb
aas
mov
mov
inc
popf
jmp
jg
and
call
and
mov
dec
pop
push
xchg
sub
cs
mov
ja
enter
cld
std
push
xor
xchg
divb
rorb
aas
icebp
cmp
mov
mov
sbb
loope
mov
sbb
jecxz
fcmove
stos
xchg
mov
test
lahf
dec
or
scas
leave
popf
cld
test
shl
ljmp
mov
jle
nop
fwait
movsl
fwait
inc
ljmp
das
clc
and
pop
adc
mov
pop
ret
xor
dec
cli
jmp
outsl
clc
jg
inc
adc
test
mov
push
xchg
adc
jmp
adcl
scas
mov
xchg
pusha
lret
lcall
mov
cmpsl
addr16
inc
repz
insl
mov
decl
pop
in
mov
decl
jle
mov
adcb
push
push
andps
and
das
adc
out
jbe
xor
ja
jbe
inc
cmc
cmp
pop
dec
jbe
jb
mov
aaa
pop
insb
ljmp
xchg
mov
fdivp
fisttps
fcomip
test
cmc
daa
jl
add
pusha
aad
pushf
decl
lret
test
gs
lds
mov
and
fcomip
pop
imul
dec
cmpsb
imul
mov
cmpsb
jnp
cmc
int
cmp
xor
cmp
mov
imul
mov
mov
mov
jg
or
aam
addr16
inc
mov
pop
dec
add
inc
mov
lret
mov
insb
scas
stc
aad
mov
ret
mov
push
ds
mov
int
mov
jecxz
inc
cwtl
push
gs
inc
incl
in
mov
cmpsb
jp
sahf
cmp
popa
hlt
lahf
rcrb
jp
repz
pop
push
jp
mov
ret
frstor
popf
jp
orb
movsb
out
cmpsl
mov
js
jmp
ret
mov
jae
add
mov
mov
mov
cmp
subl
mov
pop
add
mov
mov
pushf
push
into
mov
ljmp
mov
insl
mov
mov
out
rolb
mov
jge
lcall
sahf
sbb
aas
push
cltd
scas
inc
in
nop
xchg
add
sbbb
out
mov
mov
loopne
scas
or
aaa
mov
out
mov
mov
test
push
pop
repnz
dec
fbstp
pop
in
movsb
push
sub
mov
add
int
mov
mov
js
jo
mov
add
cmp
iret
mov
popf
xor
adc
push
jo
mov
in
mov
test
outsl
adc
or
aad
or
pop
mov
dec
jns
rcl
inc
mov
push
inc
sar
xchg
fwait
pop
dec
insb
data16
outsb
fbld
mov
filds
rcll
imul
jge
sbb
out
xchg
ljmp
jns
fldcw
xchg
jno
imul
jo
das
push
pop
add
and
aam
cmpsb
test
mov
fdiv
popa
dec
inc
pcmpgtb
pushf
incl
jno
dec
popf
jle
outsb
jnp
data16
push
push
dec
jle
lock
jns
roll
or
cld
int3
mov
mov
mov
adc
ja
xor
nop
adc
lcall
xchg
mov
into
jmp
fmuls
clc
mov
push
fimull
out
enter
scas
dec
in
fistpll
fcmove
into
js
repz
cli
mov
sbb
push
push
jo
icebp
or
adc
mov
push
out
jp
push
gs
pop
fcompl
lcall
int3
hlt
mov
push
jl
adc
or
daa
cmp
lret
divb
outsl
jo
aam
fmuls
mov
js
fdiv
mov
dec
jecxz
mov
sahf
mov
mov
mov
hlt
jmp
pop
or
sub
loop
mov
or
test
push
mov
outsb
jbe
out
sahf
repnz
popf
push
dec
inc
lahf
jmp
cld
mov
push
or
leave
ljmp
out
lret
xchg
clc
imul
mov
repz
movsl
aam
hlt
push
jns
fwait
inc
jecxz
jmp
imul
lock
mov
mov
sub
out
clc
movq
pop
pop
jo
inc
std
rcll
mov
or
js
ret
ficomps
push
cmp
xchg
sbb
cmp
xchg
leave
xchg
hlt
mov
mov
mov
jl
cmpsb
mov
push
or
call
add
aas
aas
inc
stos
dec
cmc
push
mov
or
lret
dec
sar
xchg
call
hlt
arpl
jae
in
mov
arpl
push
cmp
outsl
clc
scas
and
push
fs
cli
in
xchg
xchg
lcall
xor
pop
mov
dec
or
xchg
mov
mov
fsts
jmp
mov
xchg
push
movsl
dec
jb
mov
jp
and
mov
add
call
sbb
repz
mov
sbb
call
jle
test
inc
addr16
lock
lock
stos
inc
xor
push
test
xchg
mov
hlt
outsl
add
xlat
hlt
imul
lret
xor
in
xchg
and
adcb
cmp
cmp
arpl
nop
adc
cmpl
push
in
mov
jb
fwait
pop
xorb
cmp
sahf
sbb
cs
cs
out
scas
and
hlt
ja
jns
aad
mov
out
mov
mov
scas
mov
push
pushl
lods
cmp
jb
mov
stc
sti
xchg
mov
lret
out
mov
sbb
jae
addl
mov
xchg
or
adc
push
lea
repnz
in
test
test
nop
rolb
push
clc
das
dec
stc
cmpsl
mov
cld
xchg
lret
pop
das
inc
push
fcomps
dec
jbe
pop
jmp
std
js
or
and
decb
ret
pusha
push
ljmpw
mov
xchg
filds
lret
sahf
aaa
je
mov
gs
ljmp
ret
lret
out
sub
ljmp
or
int
mov
mov
push
loope
pop
insb
adc
in
mov
mov
out
jo
movsl
jmp
jnp
xchg
add
shl
fildll
sub
cwtl
shr
mov
xchg
fiaddl
lcall
fstpt
xchg
scas
jg
mov
repz
mov
add
mov
call
insb
in
xchg
jecxz
into
nop
std
movsl
test
sar
mov
into
sbb
lods
jno
inc
push
jne
sbb
xchg
mov
sti
mov
push
shll
push
imul
inc
rorb
sar
adc
out
and
cltd
pop
jmp
xchg
xor
dec
ret
int3
shlb
cmp
inc
shl
lock
call
and
inc
push
push
adc
jbe
lods
stos
aaa
mov
pop
cmp
jne
add
loopne
jg
jg
push
push
imul
push
xchg
xchg
xchg
xchg
ds
inc
fsubp
rcrb
dec
icebp
sub
push
out
movsl
daa
pop
jmp
daa
jbe
fcompl
fnstenv
data16
lds
sub
jg
mov
mov
xchg
cld
out
mov
popa
into
add
stc
in
mov
mov
test
cmpsb
movsb
scas
mov
stos
lods
xchg
push
mov
jg
add
xchg
mov
xchg
dec
jno
inc
pop
les
push
pushl
mov
rorl
mov
pop
pop
jge
adc
add
loopne
pop
int
ljmp
ljmp
inc
imulb
ljmp
ja
xchg
push
addr16
ret
mulb
repz
ficoml
outsb
inc
jb
jno
loope
cwtl
mov
aas
push
sbbb
stos
repnz
gs
ret
fisubl
sahf
pushf
pop
in
std
mov
outsb
cmpsl
int
mov
mov
fwait
lods
mov
inc
fisttps
dec
fildll
fistps
sbb
loope
jbe
cltd
sar
add
mov
insl
call
fsubr
xchg
jg
lock
inc
aam
add
and
addr16
dec
int
out
ret
les
mov
addr16
cmc
iret
cmp
push
or
sti
lret
pop
mov
fstpl
mov
sar
mov
push
ret
lcall
data16
stos
lret
ret
ljmp
sbb
mov
ret
ljmp
ljmp
daa
and
ja
sub
mov
push
decb
mov
push
sarl
nop
mov
xor
hlt
mov
ret
sbb
pop
iret
mov
sub
pushl
mov
in
movsl
mov
add
aad
inc
push
jge
mov
inc
fistl
add
add
clc
call
insb
mov
jle
jo
push
cmpsl
mov
cmpsl
fs
pop
pop
pushf
lret
lods
jcxz
inc
ljmp
push
sub
loop
fcompl
cld
test
fbld
cmpsl
xchg
lret
mov
mov
pop
popf
pop
sahf
push
xchg
bound
inc
loop
call
lock
add
subb
mov
mov
mov
xor
sub
pop
lret
out
ret
push
fwait
popa
mov
jg
ljmp
or
add
mov
xor
iret
stos
out
loopne
jg
mov
push
iret
into
idivb
inc
out
ja
sbb
jecxz
aas
cmp
sub
das
andb
inc
outsl
leave
in
aaa
pop
mov
in
inc
shl
cmp
and
pop
ss
xchg
out
fcoms
xor
les
add
jmp
mov
mov
loop
sbb
ja
pop
inc
shll
out
mov
push
or
jecxz
cld
in
aaa
mov
jle
or
and
xor
ljmp
cmpsb
or
mov
mov
mov
cmc
or
dec
loope
test
sbb
fisubrs
mov
mov
xchg
inc
mov
fstpt
out
lret
test
mov
adc
mov
inc
or
aaa
pop
lods
aaa
mov
enter
nop
stc
aas
std
inc
es
repnz
hlt
adc
mov
iret
mov
nop
loop
pop
sub
ds
stc
mull
push
pop
cs
adc
pop
xor
jg
inc
mov
je
inc
sbb
outsl
mov
rorl
push
push
jo
mov
ficomps
jp
or
pushf
test
mov
pop
test
dec
subb
pop
mov
mov
imul
mov
mov
iret
mov
int
jmp
jl
dec
pushl
pusha
cltd
pop
testl
inc
or
push
xchg
add
inc
lock
inc
pop
adc
lea
imull
xchg
out
adc
add
orl
ret
dec
movl
cwtl
mov
mov
lret
outsl
outsl
jnp
push
outsb
cmp
mov
dec
and
lds
pop
adc
add
stos
push
adc
in
mov
mov
loopne
lea
lcall
mov
clc
xchg
add
jbe
jnp
push
and
and
imul
push
test
mov
push
mov
imul
inc
cmp
xchg
jp
pop
or
push
cmp
pop
sbb
lcall
cmp
pop
push
jg
imul
out
dec
pop
outsl
cs
jnp
dec
rol
pop
cld
add
lods
arpl
orb
push
dec
dec
mov
scas
jecxz
pop
pop
hlt
pop
inc
or
jmp
mov
mov
mov
mov
dec
iret
sub
or
lods
and
jge
lea
push
cli
loopne
lcall
pop
push
pop
shrl
adc
mov
inc
add
cwtl
mov
fwait
ret
dec
pop
data16
jmp
pop
dec
pusha
insl
and
mov
jmpw
jl
ret
cli
dec
pop
inc
jecxz
lret
sarb
fildll
sbb
repnz
movsl
repnz
fwait
dec
cld
decl
arpl
test
aas
repz
inc
adc
pusha
fistpll
adc
sahf
cmpl
pushf
incl
mov
mov
js
insb
adc
in
pop
or
int
test
out
add
roll
mov
lea
rcrl
mov
std
xor
push
cmp
or
jg
das
popa
jb
xor
dec
push
sbb
incl
mov
popa
sub
icebp
xor
xchg
pushl
test
fwait
push
lret
lea
jo
icebp
or
mov
and
stos
add
pop
insl
add
cmp
add
xor
adc
data16
out
mov
cmp
pop
lock
jo
rclb
push
arpl
call
mov
add
daa
pushf
out
ds
xor
pop
push
jns
jo
je
xor
xor
cmp
and
xor
inc
inc
sbbb
xchg
mov
call
lret
push
dec
test
add
mov
jbe
cmp
cmp
mov
xor
jg
lods
aas
dec
mov
adc
or
xchg
ss
cmpsb
lds
test
pop
mov
mov
ljmp
jno
pop
sti
mov
adc
mov
jbe
xor
push
sbb
jmp
mov
daa
jne
adc
sbb
push
push
mov
outsl
ss
add
jle
add
push
hlt
inc
add
cli
pop
fwait
pop
popf
mov
fisttpl
mov
fidivrl
ljmp
push
scas
push
sbb
sbb
or
cmp
jg
shlb
pushf
add
cmp
xor
mov
decb
das
clc
jmp
mov
push
push
out
lods
fbstp
fidivs
cwtl
mov
incl
aam
scas
or
fwait
dec
das
pop
inc
sub
les
add
cmc
sbb
sahf
push
push
dec
push
xchg
es
mov
cmp
add
xor
pop
cltd
pop
jo
cmp
or
dec
xchg
in
movsb
hlt
or
je
movsl
jae
mov
ljmp
and
jecxz
dec
jg
xor
or
jge
cmp
ja
ljmp
pop
cmp
mov
sar
and
lods
mov
outsb
sub
add
fcomps
popa
out
mov
mov
dec
es
pop
imul
dec
adc
pop
nop
test
inc
jg
or
call
push
test
sbb
cli
gs
push
dec
mov
insl
imul
insb
insb
bound
xor
jl
daa
cli
pushl
pop
xor
je
pop
into
rsqrtps
cwtl
or
mov
cmp
neg
pop
lret
clc
mov
je
movsl
into
push
nop
in
jmp
mov
jl
shlb
cmp
lods
push
sbb
ljmp
dec
pop
icebp
xchg
and
std
adc
aaa
jae
imul
out
pushl
sub
ja
xchg
inc
imul
add
mov
jno
test
out
sbbl
jl
inc
push
push
lods
push
mov
je
daa
ja
xor
cmp
xor
cmp
pushl
or
xchg
jle
mov
test
cs
mov
incl
inc
aam
cmp
push
loop
jbe
stos
jnp
stos
mov
mov
cli
lcall
inc
stc
and
dec
in
adc
subl
dec
adc
scas
enter
ja
lock
add
mov
jecxz
add
sub
xor
fsubl
mov
xlat
aaa
popf
push
adc
mov
cwtl
push
clc
sbb
dec
cwtl
jo
mov
loop
cwtl
nop
out
fdivl
test
push
inc
mov
js
into
add
decl
movsb
movb
lret
cmp
sbb
fwait
scas
out
out
jg
jle
inc
addl
scas
sbb
pushl
add
cmp
sub
je
mov
sahf
test
ja
jo
xor
pusha
lods
push
ret
jne
mov
arpl
out
xchg
decl
pop
fs
mov
roll
dec
insb
in
push
movsb
cs
imul
fdivrl
push
dec
pushf
scas
mov
out
xchg
push
fsubrs
push
push
cld
aaa
push
ja
mov
pusha
jo
add
push
ljmp
cli
test
dec
jnp
mov
mov
jbe
repnz
subl
mov
nop
jns
and
addr16
mov
pushl
mov
mov
add
rep
enter
mov
dec
mov
dec
imul
sbb
push
mov
fs
adc
popa
pop
insl
outsl
push
sbbl
clc
outsb
daa
dec
pusha
push
add
xchg
mov
xchg
popa
fcoms
fmuls
imul
push
das
das
mov
inc
test
mov
and
mov
cmp
pushl
mov
xchg
inc
mov
scas
mov
xchg
pop
movsl
cmpb
mov
outsb
pushl
sar
mov
mov
adc
gs
mov
mov
call
scas
mov
and
or
cmpsb
pop
lods
pop
pop
jbe
clc
mov
popa
or
pop
loope
push
xor
mulb
mov
clc
mov
imul
repz
movsl
sub
test
pushl
mov
sbb
ja,pn
adc
cltd
or
pushl
mov
push
dec
and
cmp
inc
aad
push
outsb
ret
xor
or
xor
rcl
xor
test
decl
cwtl
inc
repz
dec
pop
hlt
sub
imul
push
out
and
ss
xchg
xor
movsb
mov
cmpsb
dec
xor
lret
loop
pushl
add
imul
dec
pushl
pop
data16
xlat
xor
es
mov
mov
cmp
add
movsb
dec
popa
pop
mov
inc
cld
dec
cmp
je
or
mov
pop
push
jp
jg
ss
sbb
inc
lods
and
pop
mov
shlb
jno
call
sub
lods
es
cli
add
daa
xor
push
out
jge
and
mov
mov
es
call
sbb
pusha
mov
hlt
xor
inc
push
push
pop
xchg
les
xor
fs
add
and
das
jns
or
cmc
sub
jmp
or
mov
test
sub
jge
clc
sub
cmp
aas
mov
xor
sub
decl
arpl
cmp
lds
add
lcall
mov
add
cmpsl
sbb
incl
jo
scas
mov
test
loop
and
and
jbe
ss
pushl
pop
repnz
jl
arpl
call
jae
sbb
iret
pop
mov
jae
jno
push
push
sbb
ljmp
stos
in
arpl
xchg
fisttpl
dec
and
fisttpll
mov
add
jmp
mov
pop
mov
add
mov
lcall
dec
dec
decl
and
out
das
mov
inc
jae
pop
popf
int3
add
add
mov
stc
mov
movsl
xor
jno
addr16
aad
sbb
incl
mov
or
jg
push
les
cmp
fists
sahf
sbb
scas
dec
dec
inc
jge
fisubrl
push
sub
push
xchg
aas
xchg
out
das
test
adc
imul
push
out
sub
or
jecxz
cmpsl
cmp
scas
mov
pop
xchg
sti
or
xor
and
incl
xchg
cmp
aam
aas
dec
cltd
lds
or
and
pushf
sub
rolb
add
xchg
popf
pop
inc
jg
hlt
lcall
mov
and
and
aad
inc
jo
jns
fldl
test
xchg
testl
ret
js
mov
cmp
sbb
clc
stos
dec
add
and
sahf
sti
jbe
sub
icebp
jg
jmp
adc
and
jns
push
lahf
inc
add
je
jb
ljmp
fists
aas
jbe
movsl
mov
add
gs
leave
xor
call
push
push
mov
mov
adc
inc
mov
add
ss
fidivs
aaa
add
ja
daa
dec
stos
stc
in
cli
pushl
sbb
aas
mov
inc
cmp
mov
outsl
mov
mov
inc
jmp
into
push
or
sbb
sbb
mov
aas
lock
push
mov
cmp
cmp
xchg
cld
inc
mov
int3
in
jno
sub
adc
sub
fisubl
outsl
jg
fprem
call
pop
add
mov
dec
cld
pop
ds
std
pop
inc
jo
int3
repz
aas
mov
or
add
and
xchg
mov
aam
les
and
xor
cld
cli
daa
cmp
aaa
int3
xchg
dec
xchg
cld
not
cmp
je
jbe
xchg
adc
decl
adc
pop
scas
cmp
les
inc
push
adc
sbb
clc
sbb
push
mov
out
cmpsb
sub
aaa
sub
jae
or
adc
xor
jg
pop
cmpb
test
in
cltd
cli
lods
xor
loop
shrb
in
adc
push
adc
sub
aam
inc
pop
sub
mov
and
daa
and
fcomip
inc
sahf
xor
adc
mov
movsl
xor
test
xor
popf
push
test
pop
dec
js
xchg
mov
dec
movsl
dec
aaa
mov
test
sub
ret
lods
sub
pop
dec
cli
fistpl
sbb
insb
xor
and
and
jne
popf
and
sub
sbb
pusha
add
mov
push
add
push
push
daa
mov
movsb
add
or
out
and
lcall
popf
xchg
gs
xchg
cmp
stc
add
aas
sub
fistl
movb
xchg
es
cmp
loop
enter
in
adc
sub
xlat
and
cli
push
sbb
adc
add
xor
cmp
jl
xor
xor
cmp
daa
add
popf
jecxz
push
ficompl
aas
pmaxub
rorl
test
cld
ror
pushf
outsl
and
cmp
push
cmc
loop
mov
xor
jbe
inc
mov
stc
cmp
or
ret
ret
dec
adc
xchg
mov
pop
iret
jmp
fst
add
out
adc
movsl
mov
movsb
test
pop
scas
mov
jg
mov
loop
push
xor
or
mov
add
in
mov
cmp
cmp
js
sub
in
cmp
jmp
addb
xchg
adc
xchg
adc
push
add
lret
push
and
or
add
cmc
out
ret
mov
icebp
mov
mov
pop
sar
movsb
dec
dec
mov
js
notb
cwtl
inc
inc
and
jmp
pop
jne
or
adc
iret
xchg
mov
dec
sbb
xchg
sti
in
inc
jl
mov
xor
lods
ljmp
ja
gs
or
lcall
dec
and
imul
outsb
xor
ds
jg
mov
daa
fcompl
pop
and
cld
sub
call
mov
jns
sbb
inc
xor
cmp
jno
or
push
je
inc
add
xchg
mov
push
inc
cltd
jne
xchg
xchg
mov
mov
arpl
cmp
test
insb
stc
leave
hlt
adc
cmp
and
test
and
mov
add
mov
imul
add
jle
jne
idiv
out
clc
push
sbb
arpl
xor
push
add
stc
adc
xor
and
mov
enter
or
sub
xchg
pop
imul
ljmp
xlat
xor
push
es
loop
push
js
movsb
mov
xchg
decl
push
lods
iret
sub
cmp
lock
mov
push
lods
pop
dec
push
test
imul
jp
push
test
pop
es
push
loope
mov
int
push
cmp
dec
dec
icebp
stos
arpl
shrl
inc
ljmp
ljmp
out
mov
push
mov
ret
push
or
push
lds
mov
lods
dec
sahf
xchg
lret
fisttps
incl
push
fsts
data16
insb
sbb
pop
imul
push
les
dec
loopne
xchg
cld
adc
mov
xor
mov
loopne
shr
jnp
data16
aam
and
loopne
add
mov
jb
fmul
repnz
fisttps
cli
enter
aaa
test
ljmp
dec
dec
arpl
ljmp
pop
lea
jmp
jo
into
xor
es
ror
insl
in
enter
sar
pushl
xchg
xchg
enter
aaa
pop
leave
xchg
sbb
je
jp
mov
xchg
pop
or
push
jb
jle
insl
call
dec
and
xchg
fisttpl
push
pop
push
add
fwait
outsb
pop
addb
or
sub
jo
push
cs
jbe
fwait
mov
aad
sbb
imul
add
or
add
sub
pop
inc
jp
inc
mov
scas
fdivr
pop
repnz
cmp
push
loopne
ljmp
shll
cltd
addr16
incb
dec
movsb
lods
cli
cs
cmp
pop
outsb
adc
fs
pop
cmp
sar
call
js
je
arpl
dec
pop
inc
or
mov
push
xor
add
xchg
adc
test
call
cs
mov
mov
add
or
fs
push
call
jo
daa
pop
inc
ret
es
data16
adc
mov
mov
pop
adc
cwtl
dec
cmp
or
pushl
or
std
and
sbb
cmc
mov
mov
es
int3
sub
sbb
adc
pop
xchg
je
cli
cmp
jb
mov
sbb
shll
add
dec
lcall
mov
nop
shrb
js
in
mov
js
call
jns
cmp
mov
push
adc
jg
call
stos
sbb
bound
ljmp
fsubl
mov
add
jg
fsubs
daa
out
xchg
xor
movsb
inc
arpl
inc
mov
add
mov
incl
cld
cmp
lahf
popa
pop
inc
shll
push
inc
sbb
pop
rcll
ss
lret
xor
je
popa
mov
and
xor
cmp
jle
sbb
adcb
es
xchg
lret
daa
push
add
xchg
hlt
cmp
sub
adc
or
pop
mov
mov
pusha
mov
and
adc
ljmp
jb
js
sub
xchg
cmp
or
fidivl
sbb
xor
dec
decb
xchg
out
pop
cmp
xchg
leave
push
clc
incl
dec
xchg
cmp
stos
iret
mov
xorb
fwait
jl
cld
addl
mov
out
xchg
pop
pushf
and
cmpb
cmpsl
push
in
pop
int
arpl
sub
lret
int3
adc
dec
dec
xor
incl
dec
add
sub
dec
les
xchg
test
cmp
fisubl
adc
sbb
lret
jb
xor
mov
inc
jg
fiadds
insl
ljmp
push
fiadds
inc
mov
dec
clc
sub
mov
inc
imul
shrb
in
push
sub
fldt
nop
sbb
add
mov
ljmp
insb
sbb
adc
loope
hlt
test
scas
xchg
mov
lds
icebp
icebp
add
or
dec
xor
adc
neg
fwait
mov
in
or
inc
rcr
icebp
int3
bound
fists
cmc
aad
and
mov
sub
adc
pand
imul
xor
sub
adcl
adc
cli
imul
popa
movl
int3
jle
das
inc
sub
cs
cmp
fbld
es
and
outsl
testl
decl
cmpb
stos
out
xchg
lods
sub
outsb
push
adc
push
xchg
test
pushl
sbb
adc
push
xchg
mov
sub
fisubs
mov
decb
or
adc
mov
out
mov
xchg
inc
stc
xor
pop
sub
loopne
sub
push
dec
push
adc
insb
into
sub
pop
jg
lock
inc
push
dec
adc
push
imul
pop
shll
dec
imul
adc
out
movsl
cld
inc
bound
push
arpl
cltd
and
pushl
stos
and
stos
xor
bnd
jmp
push
pop
ljmp
aam
inc
incb
mov
mov
lcall
add
ds
insb
out
cmp
jb
and
dec
lds
push
sahf
test
ljmp
mov
mov
mov
push
xchg
and
scas
xor
push
push
cmp
dec
clc
jg
pop
xchg
adc
jne
mov
std
outsl
jle
sub
sub
test
das
add
or
ds
add
jmp
add
adc
inc
stos
cmp
mov
inc
add
cli
dec
es
cld
xchg
dec
ljmp
push
ja
cld
mov
sti
adc
aas
bound
addr16
jnp
cmpsb
hlt
mov
scas
js
xor
adc
xchg
cld
cwtl
out
fwait
outsl
call
nop
jg
lret
dec
cmp
push
add
sub
leave
mov
sbb
push
pop
jmp
mov
mov
stos
push
add
cs
mov
add
mov
cmpsb
mov
mov
and
dec
mov
ror
sub
ja
loope
add
ljmp
fwait
and
es
ss
fistpl
shrl
xchg
xchg
out
ss
jecxz
pop
xor
loope
pop
cltd
fs
lcall
xor
mov
es
es
add
enter
add
sbb
inc
mov
ffree
aam
push
arpl
push
xor
sub
xor
pushf
cmp
call
jbe
pop
lea
dec
mov
fmulp
lods
addb
sahf
popa
mov
inc
push
setl
mov
pop
pop
mov
scas
popw
data16
nop
cmp
daa
cwtl
mov
mov
xchg
xor
mov
mov
ja
xchg
out
idivb
hlt
js
ror
clts
xor
loop
not
enter
stos
cmp
adcb
cmpsb
enter
lods
and
movsb
pushl
stos
pop
int
mov
pushf
xchg
xor
xchg
xchg
clc
push
mov
xor
add
lahf
stos
and
and
ja
add
test
jge
mov
loopne
enter
jle
xchg
cmp
mov
mov
cld
icebp
andb
and
fwait
push
xlat
mov
xchg
es
ljmp
add
xor
neg
inc
ret
dec
arpl
movsb
and
mov
sbb
and
sub
push
sbb
incl
sbb
sub
rclb
sub
xor
lcall
adc
fisttps
jno
dec
jns
push
push
lods
dec
repz
data16
lcall
cmc
nop
cmp
scas
pop
jecxz
scas
mov
xchg
mov
mov
test
and
stos
and
clc
jg
enter
lds
inc
push
mov
js
stos
xor
push
les
push
adc
es
stc
das
jecxz
jg
fcompl
mov
jge
and
outsb
mov
outsb
mov
fisttps
dec
mov
lret
xor
jmp
sbb
data16
out
add
jae,pt
incl
sbb
fimull
out
add
sbb
fcomip
xchg
das
push
mov
push
jg
pop
or
pop
xchg
aaa
pop
das
test
ds
cmp
in
sub
lcall
mov
jae
ss
sbb
sahf
and
mov
movsb
lods
push
push
pusha
sbb
dec
cmpsl
stos
in
inc
jp
add
ja
ljmp
out
sbb
js
dec
or
pop
xchg
push
jae
cmp
icebp
jno
push
jl
ljmp
mov
jle
insl
es
out
jg
ds
pop
push
mov
sub
decl
jbe
pop
stos
scas
test
loop
scas
or
dec
int
mov
sqrtps
xor
data16
push
sbb
mov
aaa
add
xchg
loopne
xchg
test
xchg
scas
clc
das
es
decl
xchg
add
cltd
bound
ret
mov
incl
pop
aam
pop
lock
scas
popa
aaa
outsl
sub
push
jnp,pt
sub
pop
mov
dec
cli
mov
loopne
sbb
xor
push
cmpsb
jns
jmp
mov
xor
xchg
add
out
adc
jg
push
adc
mov
cmp
push
int
jp
mov
nop
sti
push
sub
sbb
jg
mov
mov
pop
mov
mov
mov
gs
jmp
adc
je
adc
pop
mov
mov
mov
xlat
daa
lea
add
mov
mov
lcall
jmp
scas
hlt
adc
or
add
pop
push
lcall
iret
mov
mov
and
and
pop
push
imul
test
or
rorb
call
xchg
push
lods
cld
mov
inc
cli
mov
add
push
imul
test
mov
lcall
jb
add
cltd
mov
jmp
cli
or
loop
fsts
push
pop
xchg
pop
or
fiaddl
add
test
ljmp
cld
mov
repnz
movl
sub
fs
in
cmp
fildll
and
aaa
mov
jmp
lods
lret
lcall
in
xchg
sub
lds
ja
fwait
push
xchg
mov
pop
jg
test
ficoms
mov
stos
es
insl
cld
pushl
push
push
xor
mov
aaa
fldl
mov
add
dec
jecxz
push
jge
lods
push
or
jmp
cli
dec
das
inc
fstpt
jbe
movd
add
mov
mov
sar
xor
mov
test
je
cli
setns
sub
sub
sub
adc
jl
jbe
dec
xchg
or
jno
dec
ja
lock
push
mov
jmp
call
loope
sahf
mov
push
sub
popf
aam
jo
outsl
ljmp
jle
and
inc
sbb
sbb
xchg
cld
cmp
dec
cmp
dec
xor
das
pop
dec
mov
das
mov
xor
sbbl
mov
jbe
imul
mov
pop
dec
std
pop
cltd
lods
cmpsb
mov
aaa
and
cmc
test
inc
das
and
aas
stos
dec
dec
mov
mov
rcrb
xchg
decl
inc
inc
jne
adc
pop
mov
incl
dec
jae
push
hlt
mov
in
hlt
inc
adc
pushl
sub
and
xor
adc
mov
cwtl
lcall
or
mov
out
and
pop
bound
and
test
adc
out
jb
dec
int3
or
mov
jbe
call
repnz
inc
test
xor
sbb
aas
mov
xor
pop
sbb
mov
pop
xchg
pop
and
pushl
cmp
pop
add
inc
xor
adc
mov
add
adc
cltd
fisubrl
lods
xlat
mov
pop
in
jo
aaa
jns
adc
add
mov
imul
add
cmp
daa
repnz
mov
push
sbb
dec
push
adc
insb
sub
jmp
es
and
aas
inc
jno
inc
mov
clc
jg
or
pop
shll
pop
xor
std
add
adc
jnp
clc
call
lock
jo
or
dec
sbb
mov
mov
outsl
ljmp
push
inc
and
inc
jp
push
shrb
sbb
sub
and
push
into
cmp
cmc
imul
loope
xchg
adc
mov
pop
call
pop
sbb
outsl
lret
add
sbb
insb
mov
ret
cwtl
mov
add
cli
jnp
out
mov
sub
xor
sbb
mov
add
mov
scas
inc
jmp
repnz
mov
fists
mov
or
or
and
push
pusha
cmpsl
xchg
pop
mov
inc
arpl
flds
scas
jo
add
std
mov
push
lea
cld
xor
and
ss
push
ja
xor
dec
mov
dec
testb
push
adc
push
add
xor
call
das
into
xchg
sbb
and
movsb
mov
lcall
dec
repnz
pop
loop
dec
repnz
mov
lea
decl
cmp
test
xorb
jnp
and
mov
jg
xchg
sbb
mov
mov
rolb
push
ljmp
xchg
mov
adc
sub
clc
xor
pusha
jg
movsl
ljmp
jb
mov
enter
xchg
add
test
or
mov
inc
xchg
push
leave
adc
enter
incl
jbe
xchg
sarw
insb
in
xor
aam
pushl
mov
mov
test
lods
pop
mov
mov
or
test
test
cmp
dec
inc
in
dec
mov
mov
dec
mov
pop
push
add
push
int3
and
sbb
xchg
shlb
jmp
add
lcall
testb
clc
jecxz
add
loopne
xchg
mov
icebp
jb
or
ret
pop
jae
jno
dec
icebp
xchg
xor
dec
ja
mov
sub
push
xchg
int3
xchg
mov
add
adc
pop
inc
cmp
sbb
loope
push
arpl
inc
push
dec
icebp
jecxz
add
pop
ja
jle
mov
xchg
push
xchg
push
jl
gs
pop
aam
pop
xor
ljmp
adc
clc
xchg
imul
ljmp
xor
dec
scas
sti
lods
push
cmpsl
ds
inc
loop
jg
cmp
jne
cwtl
and
pop
push
add
or
mov
cmp
cmp
mov
inc
mov
pop
shll
bound
das
inc
pop
arpl
xchg
jge
mov
add
icebp
adc
outsl
jle
push
xorb
out
xchg
jp
jp
in
test
lret
mov
mov
call
fwait
shl
scas
mov
jno
aam
dec
into
incl
add
mov
push
out
adc
and
das
ja
xchg
jnp
repz
sbb
lcall
movsb
int3
test
mov
nop
push
ss
cmp
cld
jle
fldt
dec
adc
jmp
push
or
or
lods
aas
cmp
addr16
mov
push
jge
push
cmp
arpl
dec
sub
xor
xchg
mov
push
pop
lea
cmp
and
xchg
xchg
pop
test
sub
popa
addr16
mov
stos
pop
data16
aam
jg
hlt
decl
jns
xchg
xor
push
pusha
and
inc
into
cwtl
add
add
dec
int
inc
jg
mov
test
mov
lcall
adc
adc
xchg
iret
mov
movsb
jg
jno
retw
dec
mov
fisubl
testb
sbb
aam
mov
jb
pop
enter
jne
sbb
insl
cmp
jmp
jnp
das
dec
fsubs
ret
push
insl
lahf
push
push
inc
stos
testb
dec
fstpt
out
adc
or
addr16
lds
push
or
add
mov
jmp
outsl
cli
jmp
cld
xchg
hlt
pushf
arpl
adc
pusha
lcall
popa
inc
in
pop
jnp
mov
dec
lcall
jmp
ljmp
jecxz
jl
jne
outsb
dec
add
push
adc
lock
dec
jl
cs
data16
test
repz
dec
xor
bound
sub
jo
push
pushl
sbb
or
and
rclb
dec
sbbb
dec
mov
mov
fldt
in
movsb
lock
dec
clc
cltd
dec
in
jnp
adc
pop
out
or
pop
pop
pushf
fstpl
and
xchg
in
cmpsl
enter
leave
je
imul
sbb
xchg
jg
aas
inc
popa
mov
mov
cmp
fadd
andb
push
dec
popa
popa
cmc
and
sub
cld
pushl
mov
dec
push
mov
xchg
jmp
popa
mov
inc
fwait
decl
ja
and
pop
cmp
pop
out
xor
fimuls
dec
popa
decl
roll
push
clc
add
dec
hlt
sbb
push
inc
hlt
aas
dec
pop
aam
inc
decl
inc
inc
test
cmpsl
push
test
xlat
subb
pushl
ja
sbb
out
pop
pop
addr16
cmp
mov
add
mov
mov
cmpl
sbb
jbe
pop
shlb
js
in
bound
cmpb
add
ljmp
loope
andb
fbstp
xchg
cld
sbb
xor
loope
pop
xchg
outsl
jg
inc
bound
loop
arpl
addr16
call
mov
outsb
and
mov
enter
push
mov
jne
rcrl
loopne
pop
sti
add
movl
js
xchg
aaa
gs
adc
outsb
cli
cmpsl
or
icebp
mov
adc
arpl
add
inc
hlt
or
popf
aaa
inc
jb
hlt
adc
mov
lcall
ret
xchg
sahf
subl
mov
push
out
pop
dec
xchg
cmp
dec
shll
pop
dec
mov
in
movsl
dec
aad
ficomps
jne
iret
xchg
mov
out
insb
jae
jae
lock
in
decl
popa
jnp
ss
je
out
inc
clc
cmp
push
out
mov
pop
cmp
clc
decl
add
pop
shrb
arpl
jg
mov
lods
les
cld
orl
enter
out
fs
sub
push
adc
mov
mov
ret
inc
cld
int
adc
cld
orb
call
push
or
rcrl
jp
xor
mov
jnp
mov
orb
rol
ljmp
xchg
jle
loopne
pushl
adc
shll
movsb
add
mov
mov
decl
mov
movsb
pop
cld
xor
inc
pop
data16
into
adc
cmpsl
cmp
inc
std
mov
cld
cmpsb
into
sub
cmpsb
add
or
adc
rcrl
push
lahf
sbbb
movsb
inc
lods
into
push
iret
inc
add
pop
xchg
cli
sbbb
pop
add
jmp
cmp
and
push
jp
ss
push
popf
loop
inc
nop
aam
je
jecxz
ret
mov
mov
jp
ss
repz
xorl
jo
cmpsb
lock
cli
cmpsb
jg
mov
ret
cltd
int
dec
idivb
rcrb
pop
orb
pop
mov
popa
push
mov
xchg
scas
and
mov
sarl
scas
int3
inc
iret
pop
pop
clc
incl
outsl
jl
and
inc
and
push
push
dec
pop
ljmp
das
push
orb
jle
push
sbb
inc
sub
into
xor
jnp
scas
rcrl
insl
test
test
sbbl
pop
out
aas
fwait
mov
mov
jge
mov
jl
pushf
ret
xchg
sti
incl
cmp
push
insb
out
in
mov
inc
dec
xchg
jmp
push
testb
std
jg
loop
cmp
outsb
loope
push
pop
subl
es
call
call
mov
outsl
mov
addr16
push
mov
mov
loope
out
add
mov
inc
test
jae
sbb
nop
movsl
mov
push
adc
xlat
mov
inc
mov
pushl
mov
adc
into
xor
add
mov
movb
imul
push
in
fisubs
jbe
out
mov
xchg
jmp
std
jg
and
aam
sbbb
jo
mov
xchg
sarl
xchg
call
aaa
hlt
or
dec
fldcw
stos
jnp
push
mov
test
push
imul
xchg
ret
dec
loopne
lods
arpl
rcrb
or
cmp
daa
jg
decl
mov
and
ja
icebp
movsb
jbe
lods
je
mov
xchg
mov
rcl
inc
insb
pop
nop
ja
pop
stos
pop
mov
clc
fistps
ja
hlt
xchg
pop
ljmp
cltd
iret
mov
pushl
pop
out
cmpsb
popa
icebp
or
dec
cwtl
out
xchg
pop
shlb
std
fwait
loopne
aas
xor
notl
xchg
cmp
xchg
jns,pt
xchg
cs
arpl
mov
sbb
test
mov
xchg
push
jmp
cmp
mov
lds
mov
lahf
and
mov
mov
fdivrp
mov
sarb
or
pop
mov
hlt
xchg
les
arpl
mov
popf
xchg
inc
shll
mov
xchg
xor
cwtl
js
nop
stc
ss
cltd
sti
xor
jle
adc
pop
mov
data16
mov
mov
push
pop
push
pop
fcoms
xchg
hlt
incl
push
movsb
mulb
ljmp
cli
daa
mov
dec
fcompl
cltd
dec
cwtl
add
les
mov
clc
imul
xor
add
pushf
scas
pop
add
mov
pop
roll
cli
adc
ss
lock
mov
sbb
popw
out
mov
mov
inc
bound
or
repz
imul
pushf
test
js
sbb
mov
or
mov
aaa
pop
xchg
out
mov
jp
mov
lcall
mov
and
cli
pop
dec
lds
xchg
hlt
pushf
inc
cmpsl
adc
xchg
int3
test
test
pushl
clc
popf
icebp
mov
lock
in
js
sti
adc
ret
jg
repz
stc
push
mov
jo
xchg
call
adc
jmp
dec
xlat
sub
movl
cmp
pop
pop
fwait
in
xchg
inc
lds
mov
lock
sub
mov
lods
sbb
lock
pop
clc
pop
mov
sbb
cmpsb
rclb
lcall
mulb
loopne
jmp
xor
out
mov
aas
jl
add
mov
mov
and
in
std
mov
decl
inc
test
cli
add
dec
mov
int
aas
std
cmp
fmull
repnz
mov
pushf
pop
sti
stos
pop
mov
and
xchg
xchg
xchg
mov
fwait
pop
mov
xchg
mov
or
in
adc
and
mov
idivl
lea
sbb
dec
inc
mov
jbe
stos
jecxz
je
call
add
inc
xchg
jbe
or
out
mov
push
dec
mov
lods
mov
jg
mov
lods
dec
insl
fmull
cwtl
dec
lds
mov
jmp
hlt
xchg
pop
icebp
mov
push
jge
fisubs
hlt
stos
sbb
mov
movsl
cmp
ljmp
inc
cmpsl
sbb
out
xchg
pop
mov
arpl
push
out
ret
cmp
nop
fdivrs
xor
xchg
sarl
xchg
lcall
jmp
inc
fbstp
mov
xor
mov
hlt
and
jmp
jmp
mov
pop
scas
pop
xchg
add
mov
sbb
cli
xchg
call
andl
mov
xchg
fs
cmp
insl
mov
ret
loopne
jmp
dec
inc
xchg
lcall
lcall
or
ss
in
jne
and
stos
jmp
push
lcall
in
xlat
mov
hlt
pop
lea
xchg
jbe
cmp
jo
notb
das
shlb
sbb
in
jle
add
mov
fsts
decl
insb
pusha
xchg
jmp
dec
ljmp
xor
mov
lods
scas
jg
aas
test
icebp
push
mov
adc
xor
int3
adc
ja
fadds
out
imul
stos
xchg
sbb
pop
mov
xchg
inc
in
pop
xchg
stc
lahf
inc
mov
cli
sub
cld
cld
lea
lock
cmpsl
jl
cs
inc
xchg
test
push
lcall
ss
sahf
push
repnz
mov
pop
fsubs
mov
pop
loopne
repz
mov
aaa
arpl
xchg
mov
inc
pop
mov
mov
pop
jp
lcall
push
inc
xchg
pushf
lods
pop
pop
mov
mov
std
xor
decl
mov
add
cmc
cmpb
lods
lock
adc
pop
fs
mov
les
push
jmp
mov
and
loope
jle
mov
imull
mov
mov
jl
jg
ljmp
xchg
and
sbb
ficoms
pop
xchg
inc
fdivs
xchg
xchg
dec
fisttps
sbb
mov
loopne
mov
call
mov
cmp
stos
cmc
lcall
add
or
xlat
andl
stos
cmpsl
cmp
mov
mov
lcall
mov
movl
cmpsb
jle
jne
mov
dec
xchg
icebp
fcomip
xchg
movsl
cmp
sbb
jle
es
push
xchg
lock
fdivrs
xchg
out
push
mov
mov
pushf
pop
decl
push
iret
or
hlt
es
mov
mov
jmp
sarl
mov
aam
mov
jmp
dec
push
test
roll
xchg
jo
imull
icebp
dec
cld
call
fwait
loopne
jnp
lcall
jnp
sbb
jo
les
popa
movsl
jmp
jg
les
jo
lcall
pop
jp
outsl
incl
test
add
fsubrs
mov
push
test
inc
sbb
cmc
mov
fdivl
les
cmp
std
out
mov
bound
sahf
jp
mov
cs
shll
ret
dec
addb
push
mov
sbb
loop
iret
lods
inc
cld
aad
jle
or
ret
es
add
jmp
xlat
test
jecxz
jnp
ljmp
xchg
movsl
xchg
sbb
cmp
pop
nop
hlt
xchg
js
mov
push
dec
fistps
cwtl
jns
or
icebp
stc
mov
sbb
dec
test
movsl
sahf
insl
mov
outsl
les
mov
jno
pushf
cmpsb
dec
sti
pminsw
aas
shlb
inc
xchg
inc
inc
dec
sub
pop
shlb
std
ljmp
xor
test
lods
mov
adc
das
data16
mov
inc
sti
sbb
xchg
cwtl
fstl
fnstenv
ljmp
mov
lock
test
aaa
pop
inc
mov
test
mov
daa
jge
enter
ret
mov
lahf
out
mov
xor
popa
mov
cld
stc
adc
clc
cmp
scas
mov
dec
mov
inc
inc
mov
test
pop
inc
shlb
mov
jmp
dec
decl
pop
ret
outsb
sbb
cwtl
inc
pop
push
dec
mov
fs
xor
cli
and
in
mov
ljmp
jns
std
push
mov
add
cwtl
in
xchg
gs
and
gs
xor
xchg
mov
pushl
jns
cmp
addr16
inc
ljmp
mov
insl
mov
out
cli
mov
push
sbb
push
mov
mov
sarb
addb
imul
out
pushf
call
test
ljmp
jg,pt
stos
pop
cmc
xor
pop
test
xchg
aas
cld
call
mov
movl
daa
subb
dec
stos
and
out
call
ljmp
push
mov
xchg
sar
orl
xchg
pop
cli
pop
mov
adc
mov
int3
test
sub
call
test
std
pushf
mov
stos
inc
cmc
and
jno
ret
cmc
mov
pop
popa
ljmp
mov
xchg
cmpl
sbb
fcompl
addr16
out
pushl
xchg
or
mov
mov
orl
pushf
pop
in
andl
scas
xlat
sub
push
lock
pushl
add
outsl
cltd
add
test
sbbb
lret
mov
mov
lock
xchg
mov
cmp
cmpsl
pop
outsb
xlat
mov
out
pop
mov
stos
test
jne
xlat
cmpsl
jbe
mov
pushf
ja
jmp
mov
sub
subl
push
inc
mov
xchg
cmpsl
jmp
mov
mov
loop
inc
jg
adc
popa
xchg
mov
dec
popf
repnz
jecxz
call
xacquire
scas
jge
pop
mov
jo
mov
jae
icebp
inc
shlb
xchg
std
pop
cltd
inc
mov
popa
inc
mov
mov
inc
mov
mov
xor
xor
jge
movsl
daa
adc
add
pop
test
scas
inc
lret
mov
idivb
pushf
shll
rorl
mov
add
mov
jae
mov
movsb
pop
icebp
mov
adc
lds
mov
ljmp
xor
mov
pushf
jbe
xchg
and
fcompl
mov
xchg
mov
out
popl
adc
shll
test
popf
lods
arpl
out
popf
inc
int
add
push
test
std
ljmp
mov
cmp
mov
icebp
and
jle
in
jle
repnz
shll
loopne
mov
mov
xchg
lret
ret
sahf
outsb
mov
jmp
or
push
lods
lret
in
xor
mov
jecxz
mov
cmp
fwait
pop
shll
jle
mov
shlb
icebp
sahf
lods
push
hlt
sbb
mov
mov
and
jmp
test
aad
pop
lret
mov
cltd
and
loopne
xchg
decl
nop
push
and
cmpsl
mov
mov
mov
ljmp
or
lret
scas
daa
xchg
inc
and
xor
mov
jecxz
test
mov
inc
jge
cld
decl
push
push
repnz
push
xchg
rcrl
cwtl
xchg
sub
cmpsb
inc
or
jmp
test
cmp
ficompl
xchg
dec
ficomps
addr16
call
inc
inc
mov
test
shlb
xchg
dec
out
sbb
push
pushf
inc
mov
mov
jg
pushl
pop
adc
or
dec
ret
hlt
add
jb
testb
pushl
repnz
in
cwtl
pop
jecxz
mov
loopne
xchg
pop
popf
add
stos
clc
mov
xor
ret
push
ret
lods
mov
inc
lock
incl
int3
mov
int3
xchg
std
add
mov
gs
mov
lods
jle
adc
push
outsl
clc
pushl
js
sbb
xor
pop
stc
mov
and
loope
pop
jge
leave
cmp
ja
cltd
inc
in
mov
lods
push
or
mov
push
and
mov
mov
scas
mov
jns
xchg
jg
enter
sbb
xor
mov
mov
in
mov
movb
incl
repz
push
cmp
sbb
pop
enter
mov
jae
cmpb
mov
iret
movsl
jnp
mov
scas
mov
clc
stc
aaa
cmpsl
insl
fcompl
xchg
push
mov
xchg
dec
fnstenv
lret
pusha
xchg
cmc
cld
xchg
xchg
outsb
sbb
int
pop
push
movsb
ja
mov
scas
inc
mov
and
cmpsl
repnz
mov
lods
clc
mov
sahf
stos
inc
lock
mov
fisttpl
mov
push
pop
pop
mov
adcl
cmc
cmp
call
call
lods
xchg
push
movsb
shlb
movsb
iret
subl
sub
mov
test
cld
inc
sahf
inc
rcrl
ss
inc
into
cmp
jo
cmp
incl
cmpsl
loop
cltd
inc
inc
mov
popf
push
test
daa
adcl
add
decl
push
out
outsb
shll
outsl
jge
out
addr16
xchg
sub
mov
pop
leave
gs
mov
lods
dec
faddl
push
fists
test
insb
pop
fcmovbe
mov
mov
roll
nop
lahf
ljmp
incl
mov
dec
mov
adc
iret
dec
lahf
xchg
jle
add
je
cmp
pop
arpl
xchg
movsl
popa
repnz
mov
cwtl
add
inc
jecxz
push
outsl
xchg
bound
lock
push
lock
lcall
and
insl
xchg
and
movsb
into
mov
adc
loop
sarl
decl
pop
xchg
jbe
adc
inc
pop
movsb
rcrb
sbb
out
jg
push
pop
mov
mov
pop
xchg
and
mov
sbb
and
pushl
enter
popa
cmpsl
cld
mov
xchg
or
mov
stos
lea
lret
mov
mov
rcrl
add
fnstcw
insl
popa
cmc
push
push
addr16
mov
push
test
or
dec
mov
insb
fistps
ljmp
das
push
test
inc
jle
cltd
dec
lock
pop
push
mov
xchg
shrl
jmp
mov
xor
adc
mov
inc
inc
or
inc
fcoms
enter
mov
shlb
outsl
push
inc
adc
ja
xchg
ljmp
movsl
loopne
inc
loop
pusha
pushf
out
cmpsl
lock
push
cmpsb
inc
jl
xor
mov
pusha
push
push
adcl
stos
lret
xor
mov
imul
imul
adc
cwtl
xor
mov
cld
xchg
sbb
ret
mov
repz
pop
jge
add
jbe
push
push
mov
stos
cmp
mov
in
sbb
xchg
loopne
int
sub
inc
lock
push
filds
pop
iret
add
sub
ss
imul
outsb
loope
sahf
jg
test
js
mov
push
push
mov
shll
dec
out
pushl
or
adc
js
or
dec
jno
add
cmp
jno
and
jae
das
cmp
mov
push
cmp
push
les
dec
cmp
pop
xchg
and
dec
test
je,pn
sub
cmp
das
cli
jmp
push
sbb
pop
push
mov
das
push
cmpl
in
add
test
jmp
xor
add
push
push
add
push
pop
cmp
addr16
xor
adc
or
call
xchg
cmp
inc
stc
bound
insb
push
popf
decl
mov
dec
or
dec
lods
adc
mov
add
fnsave
daa
dec
xorl
cmp
stos
jnp
test
fistpll
xor
bound
cmp
mov
pop
stos
xor
xchg
add
dec
sbb
leave
dec
inc
push
imul
lcall
xor
call
dec
dec
mov
movsb
lock
mov
lcall
xabort
scas
dec
pushl
pop
adc
rep
loopne
dec
ljmp
adc
scas
jle
dec
pop
and
cmpsl
stos
cld
jg
clc
cmp
push
mov
adc
ljmp
ret
jbe
lcall
loope
shrl
jno
movsb
ss
test
pop
xchg
clc
jg
pop
mov
cltd
stos
jb
test
and
adc
xchg
jns
lea
xchg
inc
ljmp
push
js
adc
xchg
enter
cmpsb
lds
push
pusha
mov
scas
add
loope
aaa
xor
xchg
cmp
add
fwait
inc
addb
push
xchg
and
bts
out
cli
lcall
mov
lcall
loop
pop
rorl
gs
sbb
inc
jl
call
xor
adc
stos
js
push
push
or
push
xchg
movsl
add
dec
sbb
enter
pushf
pop
jns
mov
and
test
sub
testb
or
cmc
jg
pop
xchg
add
sbb
and
push
ss
in
xchg
push
iret
nop
dec
pushl
cli
cmp
mov
adc
lods
out
movsb
cmp
sbb
or
pushf
adc
push
mov
inc
xchg
sahf
mov
das
xor
cmc
or
sub
into
sub
fwait
ja,pt
sbb
mov
or
mov
jno
cmp
ss
pop
mov
pop
mov
cmp
jno
jno
flds
or
pushl
cli
adc
push
lahf
pop
and
or
sbb
mov
sbb
push
sub
loop
xchg
mov
xlat
scas
fwait
sub
fdivp
mov
idiv
jg
cmp
add
ret
test
push
jb
mov
lcall
pushl
lret
add
es
add
out
and
stos
mov
clc
cmp
dec
fsts
mov
adc
mov
cmp
stos
insb
imul
daa
mov
je
das
es
push
mov
mov
decl
data16
jp
push
xor
ljmp
sbb
jb
jp
xor
mov
stos
sbb
xchg
lods
ljmp
mov
loop
rolb
lcall
pop
sahf
jle
sbb
aaa
pop
and
sub
es
add
pop
adc
rcll
jl
mov
decl
dec
jp
mov
popa
pop
lea
insl
aam
jbe
lret
add
call
mov
sahf
xchg
loop
inc
mov
dec
cs
xlat
push
jns
push
out
and
push
loop
inc
xor
test
cmp
jg
imul
add
pop
or
pop
movl
pop
xchg
aas
lea
nop
dec
insb
call
or
cmpsb
xor
xchg
test
incl
inc
mov
sub
test
push
pop
and
in
sub
enter
push
jg
mov
pop
or
and
push
sub
adc
xchg
call
std
cmp
test
jno,pn
or
lods
sub
mov
mov
xchg
cwtl
cltd
add
add
mov
rclb
dec
and
dec
mov
into
mov
mov
mov
sub
add
mov
add
mov
push
outsb
nop
xchg
stos
jbe
in
pop
mov
sub
push
adc
lods
push
jp
sahf
sar
js
imul
ljmp
test
clc
jp
adc
scas
js
aaa
dec
or
adc
outsb
or
xchg
hlt
incl
lcall
stos
push
popa
test
inc
in
mov
jg
push
xchg
sbb
push
movsb
push
xchg
mov
push
lcall
out
lcall
mov
mov
flds
xchg
out
pusha
rorl
test
aaa
das
int
into
pop
test
cli
pop
and
pop
sti
jle
pop
or
call
sahf
mov
pop
jae
or
push
and
ds
lods
cmp
call
push
std
es
outsb
xor
mov
mov
dec
pop
sub
inc
clc
movsl
mov
bound
pop
ljmp
sub
dec
clc
push
pop
ficoms
xchg
ljmp
dec
mov
lret
mov
sbb
mov
add
mov
mov
cmp
out
aaa
call
adc
mov
test
leave
sub
decl
or
sbb
inc
cmp
repz
shll
fists
outsb
je
loopne
mov
add
call
mov
ds
movb
aam
stos
popa
fsubrl
pop
in
test
sbb
mov
incl
or
xor
or
add
dec
xor
lcall
sbb
mov
xor
std
adc
jbe
shl
push
push
xor
push
nop
xor
repnz
xchg
jle
test
int3
hlt
add
lcall
or
xchg
sbb
cmpsl
push
negl
sub
dec
sub
add
ret
add
jle
add
xchg
aam
icebp
ljmp
jo
int
outsl
jg
sub
push
push
adc
out
xor
das
lret
sub
test
push
mov
pop
leave
and
or
add
or
jmp
xor
jp
and
cmp
xlat
xchg
jge
mov
outsb
pushl
test
outsb
cmpsb
lods
inc
mov
dec
cli
das
mov
inc
clc
dec
das
subl
jo
lods
clc
imul
rol
ljmp
and
js
xchg
adc
pop
cltd
cmpsb
inc
scas
xchg
sbb
popa
pushf
sti
in
jp
mov
mov
mov
mov
push
dec
movsb
movsl
arpl
lock
loopne
mov
pop
add
mov
enter
inc
inc
roll
mov
pop
adc
std
jmp
in
and
push
cmp
outsl
and
push
ret
loop
sbb
xchg
pop
dec
mov
push
les
lea
pop
out
dec
push
data16
xchg
mov
push
inc
addr16
mov
sub
jno
mov
decl
imul
mov
adc
pop
xchg
aaa
inc
pop
lds
inc
adc
mov
jecxz
and
jb,pt
pop
mov
jns
out
mov
mov
xchg
mov
cmp
or
in
aaa
push
cmp
xchg
and
call
scas
xchg
das
jmp
fcoms
addr16
dec
xchg
jge
sbb
add
mov
sbb
push
xor
mov
and
push
cs
mov
test
movsb
ljmp
nop
je
mov
mov
push
lea
ljmp
lods
mov
xchg
inc
cmp
push
fs
dec
pop
mov
jmp
cmpsl
pop
iret
and
push
mov
pop
pop
fwait
sbb
jg
scas
and
stos
lret
in
jno
sub
outsl
incl
decl
or
and
cltd
ss
lcall
data16
inc
test
cmp
loop
je
jg
cmp
xchg
mov
test
pusha
mov
cmp
ljmp
repnz
or
and
pop
mov
push
icebp
lcall
cmp
cmc
inc
or
push
fmuls
dec
std
pop
fucomi
add
das
negb
cltd
pop
test
lahf
adc
mov
insl
neg
push
int3
mov
xchg
sti
adcb
jg
lods
cwtl
adc
jecxz
pushl
pop
loopne
mov
cmp
add
loopne
jg
or
lds
xchg
loope
sub
decl
push
and
xchg
imul
sub
xchg
shrb
icebp
es
aas
pop
cli
test
jne
jbe
adc
jb
lret
ljmp
and
stos
icebp
mov
call
out
loopne
add
lcall
lret
pop
mov
cmp
push
loope
dec
imul
pop
pop
inc
sub
mov
xchg
movsl
or
pop
jae
push
pop
mov
mov
jns
nop
cmp
push
test
jp
jge
xchg
jns
mov
dec
ss
xchg
mov
jo
adc
psraw
pop
pop
push
outsl
jp
lcall
inc
daa
js
es
lods
scas
out
add
pop
xchg
sbb
push
das
jne
fsubl
rolb
push
xor
popf
lcall
loopne
pop
mov
jbe
jg
inc
je
ja
sub
jnp
push
fisubrs
dec
loopne
incl
inc
fistpll
mov
push
pop
lcall
jp
test
jbe
ljmp
xchg
dec
adc
add
and
ret
cli
ret
jg
enter
stos
inc
mov
cwtl
mov
scas
dec
xor
sub
dec
jo
rclb
dec
mov
add
mov
aaa
push
orl
dec
test
orl
mov
mov
mov
aaa
xor
mov
lret
pop
push
mov
mov
adc
add
lods
cmp
xchg
xlat
incb
addb
mov
jg
mov
cmp
das
jp
add
cli
and
loope,pn
addb
pop
pop
mul
push
or
sbb
jle
gs
rcr
jo
jo
lret
out
clc
push
mov
daa
scas
cmp
jg
pop
inc
cwtl
xchg
lcall
sbb
mov
negl
xor
push
insb
popa
pop
dec
and
jo
scas
and
pop
sbb
lahf
dec
mov
xchg
outsl
push
lods
and
es
xchg
ljmp
decl
pop
out
cmp
jno
pop
sub
xchg
aaa
test
incl
inc
mov
adc
push
mov
sbb
xchg
push
mov
mov
decl
add
xchg
cmp
mov
mov
ja
adc
mov
in
ret
decl
mov
sub
insl
enter
inc
lret
push
ja
popa
icebp
dec
sti
and
js
dec
loope
gs
addr16
in
or
push
or
shrb
andb
negb
pusha
inc
cmp
addr16
cs
call
pop
fcoms
dec
decl
dec
les
bound
dec
mov
push
pop
cmp
decl
js
cmpsb
iret
or
dec
nop
and
clc
or
das
mov
mov
movsb
pop
pop
inc
mov
jmp
sbb
lahf
bound
ficomps
jl
mov
mov
addr16
mov
sar
loop
cmp
inc
lea
test
push
and
adc
scas
sbb
xchg
xor
scas
pop
insl
shlb
mov
pop
popa
movsl
xor
xchg
scas
incl
xchg
or
cmpb
lods
out
mov
scas
sbb
pop
dec
xchg
inc
push
clc
mov
mov
mov
sub
mov
mov
xchg
loop
mov
aam
dec
xchg
push
sub
mov
mov
test
jnp
sub
orb
aaa
push
push
inc
test
cli
call
cmp
insb
sbb
mov
or
lods
ljmp
push
repnz
push
dec
mov
lea
adcb
addr16
push
mov
dec
ficoms
nop
xor
cli
xor
es
xchg
cmp
push
xchg
pop
push
mov
pushl
dec
rclb
xor
daa
mov
and
scas
mov
sarl
decl
subb
das
pop
push
pop
add
push
or
push
dec
clc
js
sbb
data16
xchg
and
cmp
and
cld
pop
andb
add
rcll
mov
sub
mov
in
mov
xor
sahf
add
and
call
ljmp
push
sbb
push
fcoms
cmp
sbb
mov
testb
pop
je
jecxz
or
inc
xorb
add
pop
or
mov
xor
movsb
pop
rclb
pop
test
loop
push
loopne,pn
ret
inc
dec
mov
inc
push
add
lahf
in
dec
lcall
loop
xor
xor
pop
lods
pop
mov
test
js
test
jmp
fwait
dec
mov
push
imul
add
pop
daa
cltd
test
add
call
inc
pop
add
insb
fisubs
pop
mov
arpl
or
push
data16
es
sub
ja
decl
and
decb
push
push
lods
xor
jae
cmp
lods
nop
mov
mov
es
fwait
cltd
sub
aaa
or
mov
stos
es
xchg
add
int3
sub
cmpb
cmp
xor
dec
xor
imull
adc
ja
jbe
in
push
pop
inc
call
das
mov
mov
dec
out
mov
sub
dec
adc
popf
dec
xchg
xchg
and
xor
lods
jbe
fimull
inc
add
push
and
sbb
mov
inc
push
sti
jg
mov
xchg
scas
pop
sbb
pop
cld
pushl
pop
dec
rorl
adc
xor
fsts
mov
sub
std
aaa
stos
mov
and
push
out
xor
pop
jp
adcl
xchg
lcall
out
movsl
test
cmp
sahf
pop
xorl
lea
or
call
stos
sbb
fisubs
add
add
test
mov
xchg
push
mov
inc
mov
adc
xchg
dec
add
lcall
mov
xor
dec
cwtl
jbe
jne
jae
inc
in
addl
decl
nop
daa
js
or
xchg
cmp
lds
test
mov
out
jmp
sub
mov
je
imul
xor
mov
imul
xchg
mov
add
fcompl
lcall
cmp
test
cld
mulb
xor
stos
dec
pop
sar
xor
sbb
add
lea
jno
pop
sbb
inc
std
mov
out
xchg
aas
push
pop
pop
dec
or
es
movsb
test
mov
addr16
xchg
sahf
andb
push
adcb
xchg
inc
insl
and
dec
fs
adcl
mov
mov
test
pop
push
clc
sbb
lods
cmp
cwtl
push
orl
bound
xchg
out
mov
cwtl
mov
clc
inc
or
imul
jg
mov
in
out
cmp
xchg
push
pop
cmpsl
adc
pop
inc
xchg
int3
adc
mov
mov
arpl
mov
pop
ds
add
mov
outsb
jge,pn
scas
call
subb
xorl
jbe
xor
jne
and
mov
mov
outsl
xlat
aad
int
sub
data16
test
mov
push
outsb
push
inc
imul
loopne
mov
pushl
cs
xor
pop
fs
popl
sbb
cmp
sahf
gs
movsb
xchg
sub
dec
leave
jo
fidivrs
call
or
bound
add
dec
cli
test
mov
test
jg
or
lock
test
mov
mov
mov
push
pusha
jp
adcb
js
loop
add
adc
stos
and
mov
mov
hlt
in
sub
mov
jb
sarb
sub
dec
xchg
fldl
hlt
add
aaa
inc
push
sbb
sahf
outsl
dec
les
xchg
popa
sahf
xchg
addl
dec
sbb
xor
pop
sahf
add
inc
in
test
rolb
push
pop
repnz
cli
lcall
and
inc
and
inc
adcl
hlt
sbb
pop
cmp
js
jns
xor
mov
jmp
ds
int3
test
mov
cwtl
and
ja
jge
pushf
sbb
movsb
mov
mulb
ljmp
xlat
sub
clc
sub
add
jno
cmp
mov
stos
jle
or
cmp
jg
mov
jb
shll
test
cli
lods
jno
mov
cld
jle
repz
imul
jge
dec
jl
jb
clc
test
jns
mov
pop
mov
push
jl
jae
popa
lcall
or
jl
push
xor
xor
aad
jns
leave
push
and
stc
mov
lea
jmp
cwtl
sub
dec
lret
sub
hlt
dec
bound
jmp
jle
push
jne
xor
xor
mov
add
flds
outsb
pop
sbb
incl
dec
adc
or
and
add
mov
decl
das
ja
lods
popa
lret
jo
jp
push
sub
cmp
cmp
sbb
ret
cmp
adc
cmpsl
pop
insb
xchg
push
push
lock
hlt
adc
add
in
pop
pusha
xchg
hlt
outsl
cli
lahf
or
lea
pop
aas
insb
mov
shrl
daa
call
jg
add
or
inc
push
push
xor
push
add
pop
out
dec
xchg
adc
mov
sbb
mov
cmp
push
inc
enter
imul
jle
popa
icebp
push
bswap
jp
cs
adc
sub
mov
arpl
sub
xchg
test
stos
inc
rclb
sub
pushl
clc
int3
lret
fsubrs
shll
or
or
mov
in
mov
aaa
and
dec
mov
movsl
addr16
ffree
call
imulb
inc
or
vpunpckhbw
push
or
sbb
icebp
pop
and
add
repnz
cld
movl
and
mov
imul
hlt
and
mov
popf
adc
lock
cltd
dec
mov
lods
pop
add
add
lcall
sbb
mov
inc
scas
pusha
mov
ss
pop
div
sbbl
sbb
xor
into
jne
xor
cmp
cmpb
mov
push
jecxz
jae
pop
outsb
lods
mov
mov
adcl
fxch
dec
ljmp
jae
adc
out
imul
mov
or
mov
mov
sub
lock
ss
ds
dec
xor
jg
jg
sbb
movsl
test
dec
sarl
jns
gs
inc
je
xor
dec
mov
inc
loop
dec
add
lcall
jbe
les
fisubrl
adc
pop
ljmp
push
iret
mov
cwtl
push
mov
dec
out
punpcklwd
inc
xchg
fsubrs
push
int
dec
add
lea
or
js
or
cmpsl
data16
push
cmp
incb
jmp
testl
dec
and
inc
outsb
ja,pn
xor
jae
pop
sub
ljmp
and
and
mov
push
and
pop
jne
add
sub
pushl
jecxz
push
scas
insb
sti
and
loopne
xchg
incb
arpl
xor
push
out
or
mov
outsl
push
hlt
sub
push
jns
or
push
jmp
xor
sbb
or
fwait
sub
stos
cmpsb
test
mov
pop
push
cmp
dec
aas
lods
pop
jecxz
sbb
dec
insb
adc
jb
test
ljmp
mov
mov
or
pop
push
adc
mov
lcall
pushf
in
test
pop
add
and
cmp
inc
xchg
sbb
dec
outsl
add
cmp
jecxz
lcall
pushf
loopne
ljmp
jne
pop
xor
inc
cmp
xor
decl
pop
xor
or
push
mov
int
fcmove
cmp
lds
cmp
add
push
push
pop
dec
mov
cmpb
cwtl
mov
es
mov
dec
mov
adc
adc
pop
jno
ljmp
cmpsl
icebp
sub
inc
icebp
push
mov
or
rcl
inc
mov
or
mov
bound
mov
pop
iret
movsb
test
and
adc
lods
xchg
lods
sbb
subl
sub
popf
jnp
das
test
aad
pop
popa
adc
movsl
mov
push
clc
jg
adc
dec
xchg
push
lea
shlb
push
addr16
adc
sbb
and
outsb
movsl
fbstp
mov
sub
sub
and
out
daa
scas
fs
cmc
aas
jb
pop
or
rorb
dec
ds
iret
sbb
addr16
scas
push
and
sahf
hlt
pop
insb
jmp
stc
push
inc
aaa
fs
pop
sahf
cmp
es
addr16
pop
push
dec
int
mov
push
in
mov
fdivl
xchg
fdivr
mov
lods
jne
outsl
add
add
or
incl
addr16
xor
adc
les
sub
sub
rorl
push
dec
push
push
push
dec
into
push
pusha
fidivl
aas
mov
std
jle
push
xor
pop
xchg
adc
cld
ret
outsl
cmpb
outsl
xorl
dec
jmp
pushl
cmc
mov
inc
dec
sbb
outsb
inc
sub
data16
lahf
jg
lods
push
int
scas
pop
movsb
mov
mov
ja
inc
in
jb
iret
lods
aam
pop
call
lods
jp
mov
leave
xchg
scas
xor
adcb
stc
xchg
push
inc
icebp
scas
push
sti
mov
js
cmp
jle
and
js
adc
sbb
decl
stc
xor
aas
dec
out
add
les
dec
lret
dec
adc
jmp
sbb
fisttps
jbe
xor
out
das
xchg
push
xor
ror
loopne
fldt
pop
das
mov
call
js
jno
xchg
push
shll
inc
cld
filds
inc
push
mov
mov
pop
dec
test
jg
test
cmp
stos
popf
addl
jae
cmp
dec
std
pop
lock
mov
jmp
andl
adc
pop
dec
inc
hlt
and
gs
test
lods
dec
xor
decl
rorb
stos
push
and
sub
loop
ds
test
insb
mov
pop
mov
addb
int3
pushf
add
jo
insl
mov
incl
push
or
push
push
inc
sub
je
movsl
ljmp
mov
dec
push
ja
lods
xacquire
test
call
push
and
xchg
ss
loopne
inc
lds
jge
std
lcall
dec
inc
inc
push
es
sub
std
outsl
aas
and
fwait
add
pop
mov
jle
add
xchg
inc
lcall
adc
xor
test
push
push
jl
dec
lret
jmp
nop
jno
or
lcall
aas
cmpl
dec
mov
dec
push
sbb
into
cmp
add
add
dec
xor
inc
sbb
jmp
or
push
mov
lcall
adc
pushl
dec
iret
cmp
push
adc
add
call
mov
imul
mov
test
push
dec
out
test
mov
pop
xor
iret
daa
pop
inc
ret
push
mov
or
hlt
popf
adc
mov
inc
add
jmp
add
iret
and
iret
mov
das
pop
inc
sahf
pop
mov
out
xchg
das
dec
sub
lcall
inc
enter
rolb
je
mov
rcrb
xor
adc
cmp
or
loope
int
iret
jns
inc
adc
rep
repnz
stos
jl
orl
jno
pop
jmp
cmp
mov
xrelease
pop
imul
jnp
and
in
jge
hlt
out
cmp
push
mov
xor
jmp
xor
lcall
jnp
loope
jp
fwait
mov
mov
sub
inc
mov
xchg
mov
repnz
jns
pop
inc
stc
sub
in
lods
daa
out
insl
cmpsb
sar
fbstp
movsb
jp
sahf
jecxz
jns
inc
dec
xor
test
xchg
stos
push
js
push
movl
into
aas
xchg
clc
jne
pop
inc
iret
add
push
mov
popa
mov
mov
ss
sbb
jle
mov
lods
sbb
enter
jno
jo
and
ret
das
jle
push
or
xor
jge
test
aam
or
sub
dec
inc
fnsave
push
stos
mov
inc
arpl
arpl
mov
stos
stc
das
cltd
cld
repnz
xchg
pop
fisubs
sbb
or
decl
cmp
js
mov
int
mov
arpl
lcall
xchg
aas
inc
sbb
mov
sub
cmp
jnp
leave
movsb
cwtl
filds
lods
xchg
push
pop
adc
movsl
cmpsl
xchg
ljmp
icebp
jge
lods
imul
mov
pop
cmp
mov
lock
push
lock
inc
mov
call
or
mov
repnz
fnstcw
roll
int3
mov
clc
lcall
stos
mov
or
out
jo
mov
lds
mov
xchg
jg
incl
enter
sub
ljmp
inc
pop
push
call
cmp
xchg
sub
out
jg
fmul
mov
mov
lcall
adc
mov
aad
ja
jno
cmc
mov
xor
jbe
inc
jg
or
mov
push
in
mov
mov
call
incl
mov
movsb
cmp
cltd
fcompl
imul
pop
imul
jge
outsl
xchg
mov
ss
outsb
adc
ja
cmp
sbb
int
lds
push
mov
xchg
sub
mov
mov
into
imul
push
pop
fwait
in
mov
xorl
rorb
cmp
aaa
shlb
nop
loope
jmp
push
add
lods
rol
mov
bound
lock
jbe
dec
fstpl
mov
in
xchg
lret
pop
aaa
dec
mov
lods
test
push
pop
dec
add
xchg
test
pop
addr16
xor
cmpsl
rorl
dec
pushf
int
mov
std
pop
sub
lret
and
ss
decl
xor
bound
xchg
mov
andb
decl
sub
inc
adc
fldt
shrb
pushf
add
ljmp
xchg
sub
sbb
fs
push
add
and
mov
popa
vcmpps
ret
shl
or
xchg
loopne
fucomp
lcall
cmp
call
pop
jae
call
sub
jne
mov
bound
mov
mov
pushl
stos
cmpb
imulb
outsb
mov
xchg
xchg
jns
adc
call
or
lret
and
data16
sub
push
mov
inc
push
pop
lret
test
sti
mov
jne
mov
jle
pop
mov
popa
inc
xor
jb
lcall
push
adc
inc
bound
jns
sub
ljmp
dec
mov
inc
hlt
test
or
repz
jo
sub
add
popf
loope
mov
push
mov
cli
filds
lea
mov
mov
movsb
dec
ljmp
xchg
scas
mov
adc
ret
es
js
lahf
das
cli
jg
mov
add
jne
sub
aas
insb
mov
popl
cmpsb
sbb
test
jno
je
ds
cmpl
and
cwtl
insb
or
imul
out
stos
or
dec
aaa
pop
pushf
add
cmpb
outsb
stos
lock
jmp
dec
scas
iret
gs
push
jno
or
jle
inc
ret
ss
ljmp
addb
mov
sub
cli
popa
adc
mov
inc
dec
jge
jg
out
sbb
out
dec
mov
jmp
cmpsb
jecxz
inc
xor
inc
cmc
push
int
xchg
cli
jg
mov
lcall
jb
lock
repz
pop
lea
dec
xor
mov
scas
mov
iret
mov
out
inc
push
mov
cmp
adc
repz
js
pop
into
and
or
int3
bound
dec
or
add
stos
sbb
out
pop
and
xchg
jb
xor
dec
pop
inc
andb
decb
xchg
and
cld
out
clc
pop
iret
movsl
test
adc
scas
add
pop
inc
mov
cmp
push
pop
mov
jg
xchg
cmpl
and
mov
pop
cli
or
mov
mov
decl
out
add
addr16
imul
gs
sbb
mov
lea
mov
pushf
add
fildll
push
push
xchg
xor
dec
push
push
inc
cmp
push
inc
lods
pop
xlat
cwtl
or
mov
ds
pop
out
pop
push
imul
jae
fwait
inc
add
adc
add
mov
xchg
sbb
push
fs
mov
lret
dec
inc
flds
xor
push
mov
jle
popa
and
adc
mov
inc
mov
push
jb
push
paddq
ss
repnz
clc
jnp
push
inc
pop
dec
pop
mov
pop
xchg
cmpsl
loope
clc
lods
arpl
faddl
adc
arpl
dec
pop
add
outsl
adc
fnsave
mov
jne
movsl
out
in
popa
rolb
incl
shl
pop
jb
sarl
ja
adc
insb
out
mov
xchg
call
insl
cmp
mov
cltd
incb
sahf
inc
popf
cli
movsb
lcall
inc
xor
mov
loopne
jge
lcall
push
mov
xchg
cli
xchg
sbb
out
mov
xchg
jle
inc
in
shll
call
notb
dec
movsl
cmp
and
pusha
ret
mov
pusha
fwait
xorb
int
rcrb
mov
jbe
leave
mov
jmp
insb
cmp
movsb
sub
mov
mov
jmp
adcb
pop
icebp
mov
add
or
xor
sbb
dec
sub
mov
mov
mov
jg
loopne
ja
jbe
jno
xorb
push
int3
or
and
lea
addr16
mov
sbb
inc
dec
fidivrs
push
xchg
sbb
xor
jnp
jo
push
cmp
jp
cmp
mov
xchg
jp
add
nop
lcall
push
inc
popf
adc
inc
cli
mov
sub
test
mov
and
inc
push
push
push
fisttpll
repnz
push
mov
fnstcw
pop
outsb
or
xchg
xlat
lods
pop
cld
aas
sar
mov
mov
mov
or
push
call
push
cmp
sbb
aam
cwtl
popf
xchg
movsb
movsl
mov
xor
sbb
js
mov
and
xor
cld
ljmp
outsb
mov
cmp
fdivrl
fwait
add
pusha
push
mov
mov
loopne
inc
fcompl
xor
inc
xchg
stos
jno
sbb
sub
or
shlb
adc
or
leave
andl
inc
decl
sbb
push
push
xor
dec
aaa
jnp
jns
loope
xchg
outsl
xor
fbld
icebp
fldlg2
sbb
or
pop
cmc
shrl
xchg
mov
push
inc
rclb
in
cltd
movsb
aaa
enter
adc
jae
mov
mov
mov
push
fprem
aad
dec
aas
mov
xchg
clc
or
int3
test
mov
cli
popf
jo
decb
ljmp
mov
in
sarl
movsl
lahf
ljmp
imul
xor
sub
pushl
cmp
mov
rcrb
adc
mov
adc
call
lret
dec
jnp
imul
push
push
and
gs
stos
xor
loop
cmc
add
mov
sub
xor
loopne
mov
inc
mov
mov
test
cmc
ljmp
sbb
call
cmp
dec
lds
pop
push
cli
fcmove
xchg
mov
mov
xchg
cmp
lcall
jae
call
xchg
add
aaa
mov
cmp
cwtl
out
test
stos
sahf
sub
cmp
jb
or
call
xchg
adc
mov
lcall
jp
lds
out
lahf
inc
cli
sbb
sbb
mov
mov
or
or
cwtl
movsl
call
jmp
daa
test
test
call
pop
adc
jg
adc
jle
sbb
lret
fimull
push
push
mov
je
add
jecxz
cmp
xchg
fsubr
push
out
add
adc
lods
push
sub
pop
jg
jmp
fcmovnu
adc
pop
fisttpll
ljmp
ret
decl
lock
jecxz
repnz
fsub
pop
shr
pop
lock
loop
movb
add
std
decl
push
jg
xchg
push
pop
add
and
mov
or
ja
cwtl
sub
ljmp
ds
inc
jp
es
inc
inc
sbb
xor
cwtl
xchg
movsl
stc
pop
in
push
cwtl
pop
jle
pop
imul
push
aam
shlb
out
adc
jle
cmp
js
dec
add
add
ret
decl
jbe
arpl
add
add
in
mov
incl
or
pop
outsb
fstps
jb
mov
es
ds
or
push
flds
lods
lret
jns
inc
aaa
and
add
pop
int3
test
jne
add
mov
je
pop
lret
repz
add
pop
fiadds
inc
push
push
ja
decl
pop
outsl
jle
push
jnp
add
imul
sbb
pusha
pop
out
sbb
lret
inc
pop
mov
jg
pushf
inc
mov
pushf
movzbl
mov
jg
mov
mov
dec
out
mov
dec
shll
cld
popa
jmp
int3
jl,pt
inc
pop
pop
and
test
dec
test
incl
in
add
lahf
inc
push
inc
cld
sbb
cli
push
dec
xor
or
jmp
pop
mov
ret
outsb
stos
lds
lcall
or
adc
fucomip
test
jge,pn
inc
int
out
cmp
bound
jl
pop
negb
sbb
and
filds
repz
push
lret
in
ds
dec
xchg
dec
cs
loop
pop
jne
mov
jne
sub
dec
xor
xor
inc
test
pop
and
insb
pop
pop
sbb
cmpsl
mov
sbb
jo
jl
sbb
cmp
dec
loop
dec
scas
stc
stos
mov
ficoms
mov
nop
les
pop
xor
dec
test
cmp
into
xchg
stos
pop
daa
jo
inc
and
int3
scas
push
insl
out
jae
cmp
adc
lds
lods
add
sbb
aaa
sbb
push
cmp
dec
ljmp
pop
mov
mov
inc
js
cs
ds
sahf
dec
cmc
push
adc
pushl
es
lock
mov
std
or
ds
sub
add
iret
mov
call
dec
mov
dec
add
rsqrtps
repz
sub
decb
and
adc
mov
mov
jb
and
mov
push
icebp
out
mov
and
jnp
cmp
pop
inc
int
fidivrl
jmp
jb
das
dec
jmp
es
das
mov
push
or
mov
inc
int
aaa
cwtl
incl
leave
push
add
or
orb
fsts
jmp
sub
inc
inc
cmp
cmp
sub
aaa
cld
pop
loop
push
sbb
lret
insb
mov
and
xor
roll
roll
mov
xor
cli
push
or
popa
push
pop
repz
decl
shlb
inc
enter
ja
mov
nop
adc
dec
mov
in
andb
dec
pop
mov
hlt
lods
punpcklwd
pusha
and
mov
cmp
dec
adc
imul
call
dec
loop
in
pushf
int
out
adc
jp
test
leave
mov
fidivrs
ja
mov
jns
stos
decl
push
or
cmpsl
fcoml
into
cld
push
out
rol
mov
ret
cmc
or
dec
rorb
jle
lds
xor
jg
push
and
or
cmp
dec
mov
lds
mov
call
cwtl
sub
in
inc
jo
add
push
mov
inc
dec
push
xor
mov
ljmp
add
insb
inc
adc
dec
aad
arpl
in
push
jno
adc
add
push
mov
mov
push
or
lods
adc
nop
cmp
cwtl
xor
mov
test
sbbb
add
mov
mov
xor
pop
dec
das
add
inc
pop
pop
cmp
ss
lahf
clc
push
lods
fcoms
test
mov
stc
pop
lea
and
lds
fcomip
jmp
insb
mov
cs
filds
pop
mov
adc
fnsave
jg
aad
add
in
lcall
xlat
pop
in
popa
imul
inc
inc
push
mov
sub
cmp
pop
fdivs
add
inc
loop
scas
or
sarb
xor
ja
and
push
xchg
cmp
negb
in
outsl
push
ret
adc
mov
in
iret
or
push
or
mov
sub
mov
je
cmp
in
jmp
loop
cmpsb
xchg
push
lods
mov
xchg
pop
xorl
sbbl
repz
std
mov
mov
cmc
incl
cmpb
mov
mov
les
ljmp
aam
lea
repz
rorl
mov
add
cltd
andw
icebp
mov
xchg
or
add
int
xchg
movsb
jb
fcompl
inc
pop
rep
inc
icebp
inc
icebp
sbb
cwtl
sub
xchg
and
add
jb
sar
jmp
inc
jo
es
hlt
cmp
mov
jle
adc
mov
push
xor
inc
sub
lcall
sub
adc
test
pop
cltd
pop
test
lahf
sarl
decl
dec
fwait
and
mov
sub
jecxz
xchg
dec
mov
testb
cmc
xchg
jns
xchg
or
es
adc
ljmp
repnz
sub
cmp
lods
jg
mov
negl
sbb
call
les
imul
xor
repz
cwtl
add
xor
pushf
dec
push
sar
ret
clc
jg
das
test
orb
push
xor
xor
dec
jmp
mov
popf
daa
in
jnp
imul
movsb
mov
pop
or
icebp
pop
or
add
inc
pop
ficompl
dec
in
cld
fidivl
dec
lock
incl
push
mov
xor
adc
xor
dec
mov
and
sbb
push
pushl
rdmsr
sub
add
sub
adc
daa
or
jno
adc
mov
dec
insl
call
add
testl
xor
and
sub
pop
jmp
jnp
das
movsl
lret
in
pavgw
add
mov
dec
call
adc
jmp
xchg
sbb
jne
sbb
mov
xor
incl
adc
adcl
cmp
fwait
mov
scas
ja
clc
decl
mov
mov
add
dec
xchg
ret
add
aas
movb
test
sub
int3
push
mov
push
xchg
xor
mov
add
mov
add
pop
lods
imul
lods
mov
loope
pop
cmp
mov
add
popl
push
jl
nop
popa
subl
cld
jle
inc
lret
movsl
sbb
mov
inc
mov
sbb
push
hlt
mov
or
leave
mov
sarb
das
sub
aas
lods
cmp
fwait
movsl
ljmp
aas
push
in
xchg
xchg
mov
dec
int3
mov
mov
call
xchg
pop
js
mov
cmp
jg
sbb
lahf
into
jle
popf
mov
mov
popa
xor
sbb
mov
cmpsb
pushf
mov
insl
mov
insb
pop
cmpsb
push
push
lock
aas
daa
mov
cmp
push
add
lds
stos
inc
pop
mov
call
mov
inc
insl
dec
lods
stos
add
incb
mov
lods
cmp
popf
dec
stos
incl
loopne
or
mov
pop
mov
pop
dec
sti
mov
sahf
jp
sahf
incl
shll
pop
mov
lds
or
or
cli
add
enter
ljmp
in
jne
imul
adc
mov
sub
lret
stos
insb
into
in
lock
mov
fbld
out
shll
mov
push
je
mov
fists
xchg
outsb
jp
icebp
jecxz
fsubrl
into
ret
inc
leave
mov
pop
incb
decl
xchg
or
sbb
pusha
icebp
cmp
fbld
loopne
out
loop
in
mov
cmp
mov
mov
lock
jg
dec
xchg
jo
push
pop
push
mov
ja
mov
jmp
imul
mov
shll
sub
cli
dec
jmp
adc
add
adc
aaa
mov
mov
sbb
mov
popa
lcall
mov
pop
sub
cmp
insl
push
aaa
xchg
push
addr16
cmpsl
mov
pusha
inc
and
sub
jg
jbe
and
xor
xchg
and
pop
inc
sbb
shll
lret
adc
mov
cs
dec
lods
add
ds
jp
out
jg
call
call
xor
mov
inc
cli
sub
clc
xor
loop
xlat
jg
push
mov
dec
faddl
das
int3
gs
addl
dec
cmpsb
sub
push
incl
int
cli
sbb
or
and
js
jmp
movsl
aas
fst
xor
test
enter
or
xchg
fidivrl
scas
inc
sar
sbb
lea
inc
outsb
mov
das
mov
mov
cmpsl
fstpt
int3
xchg
mov
ss
fisubl
mov
lcall
adc
popf
stos
data16
add
xchg
sbb
pop
loopne
xchg
sub
mov
add
movsb
mov
dec
xor
nop
and
mov
mov
or
jp
addb
es
pop
stc
inc
adc
inc
adc
cwtl
imul
fwait
cmpsb
je
test
sub
pop
cld
or
incl
ret
or
cmc
push
shrl
sarl
inc
add
out
nop
lds
out
jne
inc
popa
cmp
mov
jb
push
dec
test
std
ljmp
push
fisttpl
jb
mov
add
xor
cmpsb
adc
pop
les
test
sbb
pop
gs
sub
dec
test
cld
incl
dec
jg
pop
mov
das
leave
clc
xor
mov
jmp
mov
sbb
jmp
movsl
or
test
cld
add
in
sbb
mov
push
pushl
push
outsb
push
mov
xor
rol
sbb
jmp
mov
jb
bound
ja
shrl
pushf
or
jmp
pop
xchg
inc
add
imul
cmp
adc
repnz
mov
loope
ja
ljmp
xor
dec
inc
mov
call
rcrl
in
call
cmpsb
inc
add
pop
xlat
mov
ficoms
pushf
scas
and
cmp
add
xlat
jbe
xchg
push
addr16
inc
dec
icebp
cwtl
sub
sub
mov
jns
add
add
cmp
movsl
adc
cli
daa
les
ret
call
mov
jp
fidivs
jo
bound
push
push
mov
insl
jae
mov
inc
inc
sub
test
outsl
js
jmp
cmp
mov
mov
sbb
shl
and
aaa
out
int3
mov
mov
cmp
loop
cltd
repnz
cld
incl
pop
fisubl
roll
cld
shrl
leave
jb
jg
cmp
mov
mov
int3
inc
mov
sbb
mov
push
jb
in
lret
push
xor
fwait
sbb
ret
push
sub
xor
lods
xor
stos
ja
ljmp
mov
or
sahf
dec
xchg
dec
outsl
das
in
xchg
xor
lds
mov
mov
or
push
cmpsb
xchg
lcall
lcall
inc
dec
inc
xchg
in
pushf
xchg
fwait
or
lods
cmp
imulb
incb
xlat
dec
dec
ret
movsb
cmpsl
sub
mov
sub
repz
leave
or
sbb
and
lahf
xchg
xchg
jo
mov
cmp
dec
mov
inc
or
out
test
xchg
push
ret
or
adc
cwtl
movsl
outsl
xor
fsts
cmp
and
outsl
js
and
xchg
lret
jnp
icebp
lcall
out
ja,pt
outsl
clc
xchg
outsb
shrb
xchg
add
cmc
or
xchg
ljmp
push
sbb
cltd
sbb
arpl
mov
mov
dec
hlt
or
jmp
inc
or
and
pusha
lea
add
add
bswap
mov
xor
rorl
jmp
mov
xor
outsl
and
daa
dec
xor
fsubrs
or
xchg
jmp
xchg
pop
clc
pop
xchg
ljmp
popf
mov
add
ja
dec
and
inc
push
cmc
mov
cli
adc
and
in
int
loopne
cmp
fisubrs
dec
in
enter
jg
xchg
sbb
inc
lcall
inc
xor
lods
fcomip
pushl
push
js
sti
mov
mov
cmp
xor
inc
movsl
xor
xchg
or
xchg
pop
cmp
jb
sbb
test
inc
jo
and
pop
mov
lret
fdivp
push
pop
in
sbb
lahf
imul
mov
pop
xchg
mov
ds
loope
lods
cmp
mov
call
aas
inc
add
clc
mov
subb
xchg
clc
or
lcall
and
cmpsb
loop
xor
sbb
ficompl
mov
push
lock
dec
sti
call
js
and
clc
xor
fisubrs
sahf
and
pushl
es
xchg
fwait
insb
jmp
cli
push
mov
imul
cmpsb
cli
mov
inc
arpl
ljmp
pop
in
lods
mov
cld
add
inc
imul
pop
frstor
incl
clc
push
inc
subl
dec
jne
or
lcall
sub
sub
out
push
les
add
mov
cmp
sahf
jmp
lret
les
mov
add
cld
cs
scas
nop
pusha
push
mov
mov
std
fs
sahf
add
ljmp
pop
divb
aaa
fdiv
cmpsl
and
jno
dec
aaa
gs
lea
add
inc
inc
cmp
adcl
out
push
imull
mov
xchg
gs
lahf
outsl
inc
cld
cltd
les
insl
lods
aad
sub
xorb
jg
scas
cmp
xchg
jl
test
pop
push
cltd
jg
incl
flds
aas
mov
call
inc
push
or
loopne
mov
cmpsb
ljmp
sbb
push
pusha
mov
dec
inc
cmpsb
leave
mov
mov
inc
add
pop
add
decl
jb
fwait
push
adcb
rolb
mov
out
lods
dec
mov
ljmp
sub
negl
fstpt
jbe
lcall
call
or
pop
insb
mov
pop
pop
arpl
jl
adc
jle
pushf
outsl
je
fldl
pop
pop
fnstenv
push
mov
jbe
pop
loopne
aas
jae
mov
jnp
xchg
adc
cmp
push
ljmp
sbb
pop
cmp
loope
and
ljmp
xchg
lock
imull
mov
dec
pop
jp
test
xchg
dec
pop
fs
mov
movsb
xchg
xorl
gs
lock
cmpb
dec
push
insb
mov
dec
dec
cmpb
gs
mov
jno
push
inc
jge,pn
mov
jle
xchg
hlt
lcall
pusha
outsb
pop
adc
cmpsl
jns
outsl
xor
adc
push
push
in
inc
push
dec
fmuls
sbb
xor
xchg
inc
add
xchg
jg
sub
into
jb
push
ss
cmp
int3
decl
addr16
inc
jae
xor
mov
stos
add
in
cwtl
das
mov
or
jo
outsl
cmovs
imul
mov
xchg
mov
hlt
mov
addb
push
mov
loopne
push
jle
adc
decl
ficoml
inc
imul
ss
pop
ja
ljmp
jne
jl
push
jno
outsb
add
mov
addr16
dec
cmc
or
fldl
test
popf
dec
inc
ja
dec
xor
push
ja
out
adc
inc
stc
mov
mov
int3
mov
push
jns
lods
inc
fildll
push
inc
repnz
imul
push
insl
fdivrl
std
scas
xchg
xchg
push
mov
cld
sub
lcall
inc
insb
nop
data16
loopne
mov
icebp
add
jnp
mov
mov
mov
add
cli
sub
lock
nop
mov
push
test
cmp
movsl
jo
mov
lods
decl
lods
push
mov
jp
test
push
lds
inc
jge
dec
das
inc
cmpsl
inc
jne
add
jb
inc
inc
jmp
call
push
jae
ss
stos
dec
in
insb
ja
mov
dec
rcrb
push
gs
int
decl
adc
dec
dec
das
inc
clc
mov
lahf
push
lcall
xorb
inc
cld
rcrl
loopne
mov
mov
pop
decl
imul
jb
or
call
mov
dec
call
scas
andps
sbb
insl
dec
sbb
mov
js
cmp
mov
js
loope
inc
jno
and
mov
js
push
repnz
jg
pop
cmp
xchg
push
jp
clc
mov
imul
decl
and
push
inc
sarl
and
mov
data16
cli
mov
mov
mov
cmpsl
addr16
jg
cmp
ss
cli
xchg
sub
or
mov
adc
loopne
xor
inc
int
lret
ja
cmp
loope
jl
mov
mov
xchg
dec
push
dec
sbb
testb
mov
dec
cmpsb
push
ja
mov
dec
pop
jmp
mov
jno
imul
mov
loop
jmp
cmp
mov
mov
ja
inc
cmp
mov
push
data16
mov
mov
cwtl
cltd
dec
cld
and
hlt
mov
jmp
mov
push
shrl
push
out
cli
jg
es
mov
dec
cmpsl
pop
jns
inc
loope
sub
push
addr16
sarl
mov
call
inc
out
mov
int3
sahf
push
outsl
aas
cld
ljmp
popa
jp
pop
mov
cmpsl
add
pop
jmp
js
scas
push
mov
outsb
ljmp
mov
xor
insb
dec
test
mov
scas
sub
loopne
add
adc
mov
dec
jo
popa
jg
lods
jmp
adc
or
out
adc
out
jl
cmp
push
shrl
add
jb
test
hlt
add
sub
stos
jg
jns
mov
ljmp
xor
imul
andb
xchg
mov
push
dec
adc
fimuls
mov
out
jae
lods
ja
jb
fs
imul
adc
add
mov
xor
inc
cmpb
mov
dec
cs
and
add
shlb
push
mov
push
sub
stc
sahf
es
mov
cmpsb
and
dec
pushf
mov
pop
test
pop
faddl
lea
and
push
cli
push
int3
fsts
xchg
lret
pushf
in
jo
mov
jl
pop
cld
lcall
cmp
inc
xchg
mov
dec
and
jl,pn
iret
push
jecxz
cmpsl
cmp
scas
cli
cld
incb
jle
test
xor
cmp
jg
push
adc
xor
mov
mov
sbb
push
fists
cmp
repnz
and
jmp
push
daa
inc
add
adc
mov
xchg
sub
es
imul
ret
lret
enter
mov
push
sbb
pop
xchg
nop
fists
ljmp
xor
mov
outsl
jle
loop
push
inc
scas
pop
mov
pop
xchg
nop
imul
xchg
je
iret
insb
jecxz
xchg
jp
or
dec
arpl
inc
fwait
sub
inc
sbb
jle
xchg
pushl
sub
xchg
push
cmp
jnp
iret
imul
dec
dec
inc
sar
scas
jg
mov
or
ret
les
je
sub
mov
into
add
mov
loop
mov
lret
mov
aaa
popa
adc
jbe
push
adc
add
add
mov
jge
lcall
mov
sub
or
hlt
and
mov
fbld
jmp
fdivl
lahf
jg
pop
or
ss
scas
inc
rolb
mov
mov
push
and
cwtl
hlt
sub
fdivl
jns
inc
orb
stos
jge
jg
and
mov
dec
in
mov
lcall
sub
xchg
pop
es
push
inc
xor
insl
jl
cs
push
mov
xchg
in
imul
and
rorl
mov
adc
insb
cmp
inc
stos
shlb
lods
adc
add
or
and
ds
icebp
add
fwait
ja
aaa
inc
xor
sub
outsl
clc
incl
mov
dec
jno
add
outsb
stos
adc
rcrl
dec
adc
in
cmp
cmpsb
or
xorl
pop
mov
adc
pop
pusha
pop
add
xchg
loopne
jo
lea
ljmp
js
je
sbb
xchg
push
das
xor
sub
int
pushf
addb
std
sbbl
sub
decl
jnp
dec
pop
inc
lods
pop
push
cwtl
test
dec
lods
mov
xor
loopne
popa
adc
cmp
iret
shrd
adcb
sbb
cmc
add
decl
cmp
mov
or
insb
adc
nop
ds
dec
lock
mov
nop
jo
push
mov
xor
jp
mov
ss
adc
mov
xor
jg
lock
ret
jb
dec
cmp
push
or
sbb
push
or
call
movsl
pop
dec
ljmp
inc
dec
sub
lea
call
test
dec
sub
add
jne
les
and
sbb
aaa
mov
mov
fcomps
fsts
push
pusha
stos
negb
fsubs
or
incl
insb
lcall
xchg
jbe
lcall
icebp
call
lods
pop
clc
xor
scas
cltd
or
push
scas
mov
stos
xchg
and
fcomps
cwtl
jno
mov
and
lahf
addr16
call
pushf
loopne
incl
fisubrs
cmpsb
fsubrl
into
xor
inc
mov
cs
xor
rclb
jg
test
pop
andb
sbb
cmpsb
xchg
pop
incl
push
ljmp
popl
push
insl
test
rclb
std
pushl
push
dec
mov
mov
cmp
scas
clc
ja
sub
aas
xor
popl
hlt
cmp
bound
mov
fwait
out
cmpsb
repnz
sbb
add
pop
push
or
js
lods
sub
inc
mov
inc
ret
mov
mov
cwtl
mov
adc
stos
aaa
dec
push
test
dec
nop
bound
add
jns
and
adc
jmp
daa
mov
test
int
inc
cmp
xchg
xchg
pushf
add
mov
fadds
sub
add
adc
scas
xchg
lock
and
shr
incl
or
pop
movsb
andb
pop
fldenv
nop
push
pusha
call
jl
sbb
test
clc
mov
inc
stos
and
jno
pop
dec
test
adc
nop
and
int
xchg
pop
nop
add
jle
jmp
xchg
imul
mov
xchg
mov
cld
decl
xchg
stc
jae
and
repnz
xchg
aaa
cmp
ds
clc
push
or
repnz
aad
jns
push
out
jp
pop
sub
inc
pop
ja
pop
jge
ljmp
pop
mov
cmpb
shlb
mov
fbstp
dec
rorl
xchg
lcall
icebp
das
and
jbe
stc
ss
jno
jb
sti
dec
imul
inc
add
xor
mov
dec
pop
xor
adc
dec
fisttpl
fs
data16
fs
lods
and
int
xor
inc
add
stc
aaa
test
pushl
xor
dec
add
jne
icebp
enter
push
jecxz
jge
and
add
hlt
pushl
shrl
jecxz
inc
adc
jg
or
xchg
stos
decb
sbb
stos
lahf
jg
mov
jns
cmp
cmp
cli
add
jns
jne
sbb
ja
add
cli
mov
mov
popf
sub
pop
loopne
mov
jae
lcall
cmp
hlt
jp
push
lods
stos
jbe
out
js
mov
and
xchg
popa
clc
push
js
daa
pushf
aas
js
xor
stos
ljmp
imul
push
pop
cmp
ja
sbb
mov
jbe
xchg
cmp
jmp
jp
outsl
jmp
xor
cmpb
dec
aam
nop
sub
mov
jg
cmp
jg
mov
cmpsb
mov
test
adc
add
mov
dec
mov
mov
int3
stos
inc
popf
add
ljmp
cld
push
mov
dec
pop
jbe
mov
mov
leave
adc
dec
cs
repnz
test
daa
daa
adc
sub
dec
rclb
push
scas
scas
sub
inc
data16
fcomip
incl
js
je
lret
dec
dec
hlt
and
jno
mov
mov
jno
add
add
test
xlat
push
dec
xor
notb
push
and
mov
fbld
add
lds
push
mov
adc
add
pop
scas
shrb
lcall
incl
mov
adc
adc
cmp
mov
mov
push
shrb
nop
lods
inc
cmp
pop
mov
mov
inc
pusha
std
das
pop
dec
popf
push
jae
test
xchg
stos
cltd
sub
cmp
stc
scas
or
cs
push
dec
adc
push
inc
mov
gs
lods
fimull
mov
jno
mov
mov
pop
pop
cltd
scas
push
jno
inc
mov
sbb
nop
mov
jl
push
mov
add
daa
aas
pop
jmp
mov
pop
mov
mov
and
mov
decl
mov
mov
xchg
jo
rorb
add
mov
and
insl
xlat
xchg
lods
add
jge
fwait
lea
push
js
xchg
mov
lahf
or
dec
loop
lahf
std
xchg
jbe
sub
xor
cmp
cld
outsl
or
add
add
cmp
xor
call
test
int
xchg
test
rcll
sub
jb
cmp
je
mov
clc
outsb
pop
iret
cmp
js
out
jno
lahf
add
push
lds
push
outsb
popa
inc
cmp
ss
pop
lea
sar
hlt
cmp
mov
jno
test
lcall
adc
xchg
pop
xchg
sbb
cwtl
imul
scas
mov
mov
xchg
pop
dec
or
or
dec
mov
aam
gs
xchg
scas
movsl
mov
xchg
mov
adc
dec
mov
es
xorl
sbb
lds
sbb
sub
popa
and
cld
add
fimuls
jne
gs
add
outsl
mov
inc
not
neg
lahf
scas
mov
incl
adc
mov
movsb
jbe
mov
xchg
out
repnz
fwait
push
scas
incl
xchg
subl
outsb
mov
dec
jge
pop
lock
or
xchg
jle
lods
aas
inc
ja
adc
mov
stos
sub
xchg
rcrl
pushl
mov
js
pushf
xor
xor
dec
xchg
sub
and
mulb
and
dec
enter
call
jns
js
imul
or
pop
icebp
lcall
xchg
subb
and
adc
repnz
add
xorb
imul
subl
dec
inc
dec
out
sub
dec
rcll
push
ret
sub
jg
and
mov
push
popf
jno
lret
push
flds
push
iret
ljmp
fsubs
xchg
add
mov
iret
cmp
mov
cmp
cmp
decl
imul
mov
fcomip
or
inc
into
repnz
addr16
mov
inc
cmpsl
mov
clc
arpl
decl
mov
jbe
imul
scas
mov
inc
out
and
call
lds
pushf
lods
xchg
or
data16
add
fcompl
inc
test
cmp
je
arpl
push
sarl
cwtl
push
loopne
mov
lcall
xorl
inc
add
push
incl
xchg
push
mov
sbb
xchg
push
pop
adc
outsb
decl
psllw
mov
mov
flds
push
dec
jae
inc
mov
push
scas
and
mov
cltd
aam
jecxz
in
iret
push
scas
dec
xchg
cs
sbb
lods
inc
cli
ss
rcrl
inc
scas
into
dec
mov
inc
sar
push
adc
pop
xchg
add
mov
xor
sub
inc
sub
push
pop
mov
jo
mov
jle
and
mov
loop
dec
subb
outsl
scas
sbb
test
cmp
dec
loope
mov
push
insl
cmpsl
and
add
pop
pop
jmp
fbld
decl
int
adc
xor
xor
loope
push
adc
jmp
aad
cmp
fst
call
add
in
leave
in
aas
jle
insl
or
mov
push
push
jbe
jle
inc
movsb
xchg
lods
test
add
mov
pop
hlt
sbb
pop
add
mov
clc
cmp
mov
and
je
mov
cs
test
inc
cmpsb
push
cld
mov
hlt
fcoml
iret
call
mov
dec
sbb
inc
xlat
mov
cmc
push
aaa
add
xchg
test
sub
lcall
mov
jae
ljmp
and
and
mov
aaa
dec
mov
scas
add
jg
repz
mov
jp
dec
xchg
sub
push
sar
jg
es
push
adc
pop
push
mov
adc
stos
mov
push
pop
xor
cwtl
roll
stos
mov
fiadds
xlat
into
cmp
test
xchg
dec
xchg
das
mov
cld
jl
cmp
mov
daa
in
add
decl
inc
cmp
dec
jo
push
inc
xchg
push
bound
lcall
xchg
mov
test
mov
push
mov
stos
xchg
addr16
mov
cmp
mov
xchg
pop
ret
dec
int
pop
ror
sbb
sbb
lock
xor
add
repnz
sub
mov
push
subl
pop
flds
or
stos
aas
xor
shl
mov
push
roll
jmp
loopne
push
jle
int3
stos
fwait
in
repnz
movsb
jno
call
pop
pop
jbe
js
xchg
dec
dec
mov
or
fldl
adc
nop
xchg
fmuls
mov
xchg
adc
mov
test
jg
lea
stos
roll
je
push
lods
lret
movsl
inc
repnz
adc
jmp
adc
jno
push
out
add
addr16
mov
adc
test
inc
mov
pop
fmull
add
popf
add
mov
inc
shrl
and
xchg
aas
subl
enter
pop
pushl
movsb
sbb
xor
leave
sub
lock
mov
lods
sbb
shrl
xor
movsl
mov
push
roll
loope
cmpsl
cmpsl
fidivs
pusha
into
and
test
lods
scas
cmp
int3
popf
cmpsb
enter
add
xchg
pusha
bound
ja
or
mov
cwtl
cmovae
jae
push
dec
cmpsb
arpl
loop
mov
call
insb
shll
mov
mov
xchg
aad
xchg
popa
inc
pop
pop
xor
sub
mov
rorb
std
jne
mov
decl
mov
xorb
test
xchg
inc
mov
add
push
push
mov
enter
test
sub
scas
cmpsl
ret
and
push
xor
pushl
mov
mov
xor
adcl
adc
lea
or
xchg
mov
cmovne
aaa
pusha
mov
lods
sbb
mov
rclb
mov
ss
cmp
adc
lcall
scas
inc
test
fcomip
mov
imul
xor
and
test
ds
jns
add
xor
lea
lock
cmp
mov
xchg
mov
cltd
mov
sub
cmp
sbb
pushf
cmp
or
cltd
pop
sbb
ja
jg
orl
xor
cmp
imul
xchg
adcb
addr16
xchg
lcall
mov
mov
insb
loopne
imul
adc
or
dec
lock
and
jg
lock
jecxz
pop
xor
loopne
mov
mov
loop
dec
mov
pushl
lock
loop
cmpsb
leave
test
mov
lcall
and
lods
adc
cmpsl
adc
fwait
mov
jmp
cwtl
mov
mov
sbb
mov
outsl
test
and
mov
lret
ljmp
test
sti
mov
cmp
outsb
insb
mov
xor
sbb
popa
mov
mov
add
mov
decl
aas
inc
mov
xlat
xchg
sbb
push
or
mov
xor
mov
popf
cmp
and
fnstcw
imul
std
inc
lock
ljmp
and
mov
iret
pop
sbb
push
push
and
pushf
pop
in
xor
mov
das
sbb
jb
mov
in
push
cli
decl
cs
and
stos
daa
jno
push
mov
push
pushl
std
out
call
inc
add
push
lock
jo
jno
sahf
xchg
inc
pop
jns
loop
pop
cmp
cmp
or
outsl
data16
sbb
jo
push
xor
xchg
das
rclb
cmpb
inc
fsubl
jge
add
sti
dec
mov
decl
dec
les
arpl
cmp
movsl
push
scas
fwait
es
test
in
cmp
xchg
loopne
sbb
cmpsl
mov
lods
jmp
xchg
sbb
dec
hlt
add
pop
inc
arpl
dec
push
inc
mov
cmpsl
add
les
mov
mov
loopne
enter
dec
ret
mov
mov
xlat
push
dec
imul
xor
add
mov
movsl
in
mov
cli
call
lock
imul
int
lret
push
sar
add
jmp
pop
sub
mov
xor
push
pop
pop
pop
mov
jl
in
adc
cwtl
aam
aaa
add
pushf
cld
jg
mov
add
cmp
lret
pshufw
add
mov
test
push
js
jo
enter
xor
xor
out
cmp
inc
rorb
cmp
mov
pusha
loop
ljmp
or
mov
mov
cmpsb
subb
push
dec
adc
adc
push
add
xorl
shlb
enter
mov
incl
sub
sub
ljmp
test
je
ja
rclb
mov
movsb
fnsave
pop
cmp
mov
inc
cmp
lcall
mov
and
jb
cmp
xchg
loop
push
xchg
filds
xor
mov
and
orb
imul
ljmp
xor
pop
test
mov
mov
and
mov
ret
sbb
jns
jb
cmpsb
push
mov
sarb
jae
mov
mov
clc
pop
push
adcb
mov
push
insl
ret
mov
movsl
xorl
fwait
cmpsl
aas
xchg
cwtl
filds
xor
mov
dec
call
and
pop
data16
add
mov
add
mov
xlat
cli
xor
or
das
cs
insl
in
add
jmp
cmp
pop
sbb
lret
sbb
mov
jg
add
aas
lret
daa
outsl
scas
ss
mov
sbb
ljmp
xor
addl
ret
add
lret
adcb
mov
cmpsl
mov
rorl
jmp
pop
xor
add
lods
push
xor
jo
push
call
jp
in
mov
jo
mov
testb
ja,pn
test
popf
or
inc
mov
mov
fdivrl
jae
xlat
or
pop
adc
mov
loopne
jb
pop
rcr
adc
push
and
subb
fadd
pushl
out
mov
call
pop
and
jecxz
ss
dec
and
mov
cli
jmp
inc
into
mov
mov
xor
pop
fwait
dec
dec
decl
mov
sahf
add
fwait
and
adc
sbb
lea
fldcw
data16
inc
add
inc
jecxz
adc
mov
adc
enter
call
jmp
xchg
push
jmp
xchg
mov
jbe
sub
mov
rorb
jg
inc
jno
or
rorb
loope
call
inc
xor
mov
cmovae
sbb
adc
clc
sbb
pusha
fdivrl
push
rcll
push
jmp
lea
aaa
sub
fadd
jg
call
jae
sbb
xor
fdivs
mov
xor
ficoms
adc
adc
pop
jo
rcrb
adc
fwait
add
cmp
movsl
jo
add
popf
mov
xchg
jae,pn
cld
jmp
test
incl
bound
push
xor
shll
adc
fdivrl
dec
inc
dec
mov
scas
sahf
adc
xor
test
jns
jl
xchg
scas
adc
loope
movsb
jl
sbb
jmp
mov
jge
sbbb
jecxz
and
aam
decl
mov
arpl
or
mov
lds
ss
or
ds
les
push
push
push
in
jb
adcl
filds
sbb
jae
inc
cmpsb
and
xchg
and
mov
dec
nop
cmp
imul
push
or
push
push
cmc
mov
pop
clc
push
test
sub
aad
decl
inc
push
mov
sub
roll
dec
in
dec
fistl
ret
js
sub
and
dec
xchg
nop
pop
repz
fldcw
popf
ss
xor
jnp
sub
adc
pop
data16
shll
inc
inc
and
das
mov
or
clc
pop
dec
cmp
jmp
or
inc
enter
xchg
pop
shrb
lods
addr16
mov
pop
mov
push
fnstcw
test
aaa
push
sbb
aaa
mov
test
and
iret
push
or
mov
xor
jb
jae
ret
sub
jbe
imul
call
xor
pop
rcll
inc
adcb
mov
out
xchg
decl
inc
dec
test
test
ljmp
or
ja
mov
cmp
cmp
cltd
add
jmp
notb
xlat
clc
push
lods
stos
push
xor
push
int
nop
pop
xor
adc
ret
jge
test
ficomps
out
shll
repnz
push
mov
push
jns
test
and
inc
rclb
dec
imul
mov
out
mov
jg
aas
jg
imul
jnp
xchg
repnz
insl
enter
popl
xchg
push
stos
pop
mov
mov
cli
push
and
jne
and
rcrl
xchg
mov
xor
pop
movsb
je
push
das
mov
fs
cmpsl
je
lea
inc
out
mov
lcall
popa
stc
sub
or
xor
adc
fildll
arpl
add
push
test
add
mov
roll
jo
call
lahf
or
add
loopne
jbe
xchg
test
push
inc
clc
jg
in
xchg
jns
cld
and
subb
addb
mov
jle
sbb
and
fstp
aas
or
rclb
xor
lcall
xchg
jbe
inc
out
in
arpl
jns
xchg
or
jbe
jo
xchg
dec
xor
mov
lret
add
and
add
icebp
mov
inc
inc
mov
cld
sahf
add
ret
gs
xchg
cltd
lds
sub
test
shrb
icebp
lcall
and
mov
pop
stos
jnp
test
scas
add
mov
add
loope
inc
pop
push
imul
sub
mov
pop
clc
push
xchg
add
add
mov
fbld
enter
mov
mov
lods
jge
lods
push
jno
in
mov
sbb
sub
hlt
outsl
mov
mov
lds
jb
inc
cmp
in
mov
andb
aam
cmpsl
lahf
lcall
ret
std
stos
mov
lods
mov
loope
sbb
ljmp
loope
xchg
mov
xchg
in
inc
lea
pushf
xlat
cmp
mov
push
movsb
fnstcw
je
nop
sub
mov
pop
rcrl
lea
lods
scas
cltd
and
lret
xchg
mov
cmp
int
jg
mov
rolb
mov
cwtl
add
xchg
loope
hlt
push
adc
pop
popf
mov
int
imul
mov
cld
iret
push
adc
cwtl
lods
fimuls
or
stos
mov
sti
dec
push
mov
fcoml
out
in
cld
orb
mov
cmp
cmp
mov
loopne
clc
test
pop
lea
bound
xor
leave
add
test
ljmp
jo
add
pop
mov
xchg
clc
jmp
mov
ss
xchg
jbe
in
imul
fdivrl
lods
das
cli
mov
fldt
push
cmpsb
xchg
mov
mov
fbstp
mov
jecxz
or
add
xchg
mov
movsb
loopne
push
ljmp
mov
and
adc
mov
fisttps
icebp
mov
cwtl
mov
aas
xor
mov
icebp
fwait
adcl
inc
nop
push
xchg
ret
pop
int3
or
adc
mov
fnstenv
cltd
sub
mov
pop
aas
dec
aas
xor
hlt
sbb
mov
sbb
lods
data16
ljmp
and
test
rolb
fsubrl
mov
clc
sub
nop
stos
ljmp
sti
outsl
pop
mov
int
subb
call
xchg
cli
xchg
pop
xchg
mov
mov
mov
out
outsb
incl
scas
mov
call
lods
cwtl
cltd
lea
filds
orl
add
test
fldcw
mov
cltd
add
ja
hlt
in
lcall
mov
sti
lods
mov
lcall
jecxz
add
lods
aam
mov
mov
dec
inc
pop
mov
push
lods
or
cmpsl
cwtl
mov
aam
scas
nop
mov
fcomip
xchg
jno
cmp
decl
mov
mov
mov
pop
dec
ljmp
mov
xchg
mov
mov
dec
mov
aaa
pop
jp
pop
lret
out
aas
mov
mov
decl
aas
xchg
xchg
stos
jge
sbb
sbb
jmp
jne
aaa
dec
rcrl
add
fwait
mov
lods
add
push
fimull
sti
andb
ret
mov
mov
mov
scas
stos
divb
mov
cli
xor
les
push
add
cld
mov
xchg
sti
les
mov
and
repnz
mov
aas
adcb
jo
int3
add
incl
lods
or
add
adc
sbb
loopne
fsubrl
mov
daa
lods
xchg
cld
add
testl
jmp
je
pushf
xchg
sbb
addb
mov
cmp
lods
fsts
dec
push
out
mov
inc
outsb
rolb
fbld
or
xchg
or
test
sbb
mov
xor
lods
les
hlt
out
out
adcl
fstl
xchg
push
cmp
popf
jl,pt
xchg
inc
add
pushl
mov
jno
in
xchg
mov
aas
or
cmp
inc
lcall
add
loopne
xlat
pop
ret
fisttpll
xchg
pop
mov
mov
arpl
mov
cmp
lahf
lcall
rolb
mov
test
test
call
outsb
pop
lea
jo
jo
mov
fcoms
fwait
hlt
mov
dec
and
sub
xchg
mov
jg
cmp
lods
scas
enter
dec
scas
inc
mov
add
jecxz
popf
mov
enter
jg
jno
cltd
mov
xor
mov
ds
jmp
pop
push
mov
inc
in
push
stos
call
roll
es
and
out
sub
icebp
inc
fs
hlt
cmc
repnz
nop
rcr
int3
pushf
sbb
sar
out
jbe
ss
add
cmc
cmpsl
mov
inc
adc
adc
clc
fists
hlt
es
leave
rorl
test
jmp
mov
test
mov
call
sub
movsl
jns
mov
add
jbe
jb
movsb
popf
mov
jmp
ljmp
mov
mov
test
mov
lock
lods
mov
lds
out
jp
hlt
subl
popf
add
pop
add
cs
add
inc
jmp
cltd
sahf
mov
mov
xor
sub
clc
mov
cld
xor
mov
adc
mov
cmp
cwtl
dec
mov
imul
ds
lcall
leave
sub
xor
cmpl
insl
lahf
cmp
mov
inc
mov
es
and
push
cmp
fildll
mov
frstpm(287
inc
cmovbe
jecxz
addb
hlt
cmp
lcall
dec
outsl
jg
sbb
lret
pusha
test
and
ljmp
mov
mov
sub
dec
stc
cs
leave
sbb
ljmp
fisubrs
jae
imul
mov
aaa
jle
loopne
dec
call
cmp
movsl
mov
filds
mov
or
decl
out
nop
lods
iret
cmp
jb
fstl
lea
ficoms
jl
add
mov
lahf
mov
sti
jnp
xor
jmp
rcr
and
mulb
mov
mov
pop
shrl
xchg
cmc
dec
push
add
or
scas
xchg
and
incb
mov
jg
or
bound
je
dec
nop
mov
ljmp
dec
mov
sub
enter
push
cmpsb
mov
xor
pop
xchg
incl
shlb
js
arpl
int3
lret
or
rolb
adc
fldcw
and
aaa
push
push
icebp
jg
lods
andb
fnstsw
jno
imul
push
js
ds
mov
lcall
cld
fcomip
lock
cs
push
clc
xchg
shll
addr16
xchg
xchg
mov
adc
sub
jg
sub
adc
jne
push
clc
push
dec
inc
roll
dec
gs
iret
push
jae
lock
addr16
xchg
cs
mov
push
mov
data16
inc
or
pop
or
dec
push
dec
xor
decl
es
dec
jns
inc
insl
pop
jno
inc
int3
mov
leave
jo
inc
out
arpl
cltd
push
notb
dec
inc
jbe
push
outsl
pop
jae
inc
ljmp
outsl
popa
push
pop
inc
imul
jno
jno
jns
inc
imul
imul
popa
std
dec
in
push
outsl
jbe
fsubl
fistpl
sbb
popa
push
loopne
arpl
insb
imul
std
incl
inc
inc
push
fstpt
outsb
fistpl
inc
fmuls
xchg
je
jmp
adc
out
imul
inc
popa
jae
dec
push
jp
js
decl
imul
dec
dec
js
dec
jbe
aaa
dec
push
dec
icebp
inc
push
out
jae
into
popa
inc
jae
push
jns
pusha
insb
push
xchg
jp
inc
dec
pop
pop
push
push
dec
pop
jp
je
jo
push
add
push
adc
ljmp
pop
sub
inc
push
dec
insb
push
loopne
dec
inc
fisubl
jno
jp
inc
fwait
dec
jae
mov
cmp
jns
jnp
outsb
dec
addr16
ja
incl
pop
push
dec
jae
jo
pop
ljmp
incl
decl
clc
sbb
lds
push
jbe
xor
leave
adc
out
inc
incb
decl
pop
push
insl
ja
xor
sti
ss
fs
das
xor
sbb
push
or
ja
push
sub
pushl
rolb
cmp
or
outsb
push
push
sbb
adc
incl
or
pop
and
add
push
cs
jg
ljmp
sbb
cmp
add
inc
pop
cmp
add
dec
dec
sub
or
dec
pushw
pop
sub
add
mov
adc
push
repz
ja
sbb
or
add
imul
sbb
ds
sub
adc
sub
and
jns
jne
clc
aaa
incl
movups
sbb
pusha
or
adc
push
adc
push
ljmp
push
mov
add
inc
jno
ss
and
inc
push
jnp
sbb
add
dec
adc
jno
dec
cmp
cmpb
pushl
adc
and
add
push
aaa
adc
push
fs
sub
push
adc
pop
and
cs
or
sbb
sub
sbb
sbb
push
fildll
call
jl
and
test
sub
sub
or
add
icebp
jmp
xor
xor
sub
adc
jns
sbb
ljmp
xor
add
xor
adc
incl
lcall
lods
xor
push
or
mov
xor
push
push
sbb
adc
xor
sub
adc
sbb
mov
pop
pop
sbb
or
xchg
subb
mov
add
add
push
push
aaa
or
add
or
inc
jns
int3
and
jbe
ljmp
mov
loopne
or
data16
mov
jl
jne
lods
sub
loopne
cmp
lea
clc
decl
cmp
fs
daa
add
incl
adc
es
dec
and
push
and
outsl
jns
and
push
cmp
and
insb
cld
call
pop
push
add
add
mov
das
clc
lcall
and
ss
daa
sub
sub
pop
sub
js,pn
jl
clc
incl
push
cmp
sub
cmp
jbe,pn
sub
inc
add
sub
pop
inc
jge
push
and
and
lea
and
icebp
outsl
or
dec
and
add
out
call
pop
cs
fdivs
add
sub
dec
fwait
cmp
imull
sub
das
sbb
movsb
cmpsl
push
scas
daa
push
jo
cmpsb
es
adc
insb
stos
cwtl
sub
decl
push
xor
inc
or
xor
sub
pop
ret
insl
dec
add
add
or
jb
xor
or
pop
or
or
or
mov
inc
adc
xor
jl
add
decl
jae
icebp
cmp
pusha
pop
xchg
dec
inc
and
and
mov
adc
mov
aaa
popa
adc
sub
fmul
adc
arpl
lahf
aaa
pop
stc
push
jns
ret
adc
add
and
daa
push
sub
lcall
dec
push
pop
xlat
jb
call
sub
cmp
adc
sbb
aam
sub
sbb
jg
xchg
cmp
shll
inc
out
faddl
and
cmp
add
punpckhbw
pop
xor
pushl
hlt
push
lea
inc
cmc
xor
daa
push
bound
imul
pushl
jb
mov
or
clc
cmp
add
dec
add
sbb
fsubrl
add
cmp
lock
out
movsb
sbb
push
xor
and
pop
inc
insl
and
mov
je
jns
fwait
lcall
ss
pop
cmp
ds
add
push
hlt
mov
jno
add
aaa
daa
xor
xor
fbld
cld
inc
xor
sub
xor
push
sbbb
jp
or
jo
or
aaa
or
add
arpl
ds
sbbl
inc
push
ja
addr16
jo
push
rclb
adc
insb
inc
jmp
inc
es
push
push
jge
adc
push
push
cmp
imul
inc
popa
test
ret
bound
aaa
imul
xor
mov
jno
mov
hlt
jg
pusha
sbbl
adc
js
lock
xor
lcall
sub
mov
cmp
shrb
push
adc
add
movsb
lock
add
add
and
xchg
adc
sub
outsb
lcall
push
add
add
adc
cs
inc
pop
sub
add
sub
xor
adc
fcomip
or
sbb
int3
sbb
sub
pusha
add
cld
and
sbb
xor
xor
lcall
sbbl
jo
popl
jno
inc
xor
jnp
inc
xchg
ljmp
push
push
xchg
cs
sub
adc
in
mov
xor
dec
sbb
mov
mov
jne
pop
jae
ss
pop
jo
inc
push
jge
ljmp
jge
jns
dec
pop
jbe
popa
inc
inc
inc
js
jno
sbb
push
pop
push
pusha
dec
insl
pop
std
add
inc
dec
inc
pop
jbe
add
push
inc
pop
je
push
dec
and
outsl
sbb
dec
pop
sub
xor
or
inc
cmp
fbstp
add
aas
adc
decl
sub
add
sbb
push
sub
or
sub
sub
cmp
or
xor
pop
adc
test
sbb
xor
jns
ja
fisubrl
shlb
cwtl
jbe
push
cmp
inc
add
mov
jg
sub
or
cmp
jle
inc
push
jno
imul
jg
jns
push
push
inc
and
cmp
pop
push
sbb
aaa
loopne
and
sub
push
hlt
add
sbb
decl
lcall
ss
ss
push
push
cmp
xor
and
xor
and
mov
add
das
sub
lods
push
and
sbb
pop
outsl
inc
and
pop
inc
dec
scas
push
or
sbb
adc
adc
or
and
push
cmp
sub
sub
dec
cmp
mov
jmp
add
push
push
sbb
xor
add
jne
pop
mov
pop
daa
sub
imul
cmp
adc
or
cmp
ss
sbb
or
adc
sbb
push
cld
das
movsb
add
or
add
sub
es
adc
adc
cmp
push
decl
cmp
ja
or
or
push
add
push
or
es
das
sub
or
pop
test
ljmp
sbb
je
repnz
inc
jnp
loop
sub
dec
adc
inc
aas
cmp
or
push
sbb
dec
sub
or
push
or
sub
fldt
and
add
adc
or
add
sbb
cmp
clc
or
xor
je
sbb
fbstp
cmp
jae
and
cmp
and
imul
scas
jmp
dec
or
push
push
sbb
data16
jo
and
cs
push
jg
mov
sbb
sub
daa
jae
push
sub
sbb
jne
sbb
ljmp
xchg
enter
outsb
cmp
or
xor
push
push
and
lock
jmp
push
or
sbb
or
and
inc
jp
xor
daa
inc
imul
and
sbb
push
mov
and
add
pop
add
sbb
sub
push
cmp
push
push
add
push
cmp
pop
inc
jg
pop
icebp
pushl
dec
dec
fs
jge
dec
and
cmp
cmp
sbb
or
sbb
sub
cmpb
sub
xor
and
lcall
sbb
add
cmp
lret
jno
lcall
inc
inc
push
and
or
push
pop
and
fistps
jb
or
arpl
adc
push
sbb
sbb
push
or
pop
dec
pop
mov
mov
jo
and
adc
xor
pop
sbb
xor
or
jae
sub
adcb
push
and
jno
inc
jne
dec
jnp
jo
fcomip
aaa
pop
bound
sub
add
push
aaa
sbb
sbb
dec
jno
mov
rcll
mov
inc
mov
mov
cmovl
cmp
or
sub
cmp
aas
es
insb
jg
cmp
pop
sub
es
lcall
sub
push
or
sbb
add
add
add
pop
cmc
and
cmp
pop
mov
inc
dec
pop
pop
inc
push
out
jb
mov
pop
pop
and
sub
add
pop
dec
xor
dec
and
or
xor
adc
jl
push
lcall
in
add
inc
xor
and
xor
adc
test
or
sub
inc
jg,pt
pusha
rolb
jb
add
sub
xchg
or
xor
or
pop
adc
pop
loope
cmp
or
cmp
insb
pop
ljmp
insb
or
dec
inc
jae
nop
inc
jg
gs
push
pop
ss
push
xor
push
and
sub
pop
sbb
add
jle
jg
daa
loopne
push
inc
imul
popa
daa
sbb
sub
add
int
icebp
adc
sub
cld
pop
sarb
cmp
dec
pop
pop
push
push
adc
xor
cld
scas
clc
xor
sbbb
sbb
and
das
mov
fimuls
js
loopne
inc
push
inc
pop
je
lock
out
clc
imul
cmp
adc
push
push
cmp
sub
adc
aad
pop
pop
or
das
es
and
cmp
jg
push
cmp
sbb
and
jecxz
cmp
cmp
sub
adc
xor
out
loopne
inc
and
add
jg
icebp
push
push
ss
pop
or
pop
outsb
sbb
push
or
push
dec
sbb
aaa
sbb
sub
and
cmpsb
filds
push
pop
cs
es
mov
sub
andb
ss
cmp
adc
fcomip
pop
mov
xor
sbb
fs
and
push
pop
and
adc
sub
mov
jmp
jg
pop
push
jae
sbb
data16
xor
es
pop
jbe
add
pop
push
adc
inc
outsl
sbb
mov
ficompl
add
cmp
mov
xor
push
push
and
add
xchg
cmp
xor
and
add
inc
pop
cmp
dec
jp
outsb
pusha
pop
jp
pop
pop
or
mov
sub
call
cmp
addr16
je
into
adc
adc
jl
mov
push
xor
pop
mov
inc
and
xor
popa
arpl
pop
lock
adc
aas
xor
add
and
fildll
mov
dec
jns
dec
push
cmp
mov
xor
sub
cmp
adc
pop
or
lcall
outsl
and
pop
and
push
sbb
pop
dec
cmp
inc
pop
stc
cmp
add
inc
mov
outsl
je
xchg
pop
stc
xchg
jge
push
pop
subb
push
test
xchg
pop
stc
std
jo
mov
inc
push
mov
orl
bound
js
dec
push
mov
inc
outsl
cwtl
je
call
inc
test
adc
adc
cmp
pop
scas
outsb
or
push
cs
cmp
or
sbb
pop
popa
fcomps
sbb
dec
xor
adc
sar
pop
push
adc
add
xchg
pop
push
loopne
cmp
sub
jmp
bound
or
aaa
insb
xor
popa
dec
pop
sub
sbb
sub
xor
or
push
dec
dec
push
push
daa
sbb
adc
xor
and
outsl
mov
sub
and
or
add
mov
xor
inc
or
xor
push
push
jno
pop
sbb
ljmp
sbb
adc
push
push
cmp
push
and
jl
das
adc
push
xor
das
sbb
mov
jae
pop
sub
or
es
push
lock
addr16
aaa
nop
push
and
out
mov
add
inc
pushf
sbb
add
std
sbb
sub
daa
insb
rorb
sub
and
lcall
aaa
std
jg
cmp
adc
cmp
jb
and
sbb
orb
outsb
dec
or
cmp
loopne
cmp
int3
xor
dec
adc
sub
push
or
or
cmp
xor
sbb
push
adc
insb
jp
sub
sub
inc
and
mov
das
cmp
sub
xor
insb
sbb
cmp
sub
adc
inc
aaa
jbe
and
add
sbb
addb
or
jo
cs
and
pop
sbb
pop
sbb
xor
add
aaa
and
add
aas
adc
jg
dec
and
or
insb
add
or
sub
andl
or
jo
add
cmp
push
je
outsl
pop
sahf
es
push
adc
arpl
dec
adc
push
clc
mov
cmp
xor
je
add
add
pushl
push
xor
adc
push
movsb
sub
dec
or
xor
scas
clc
mov
pop
adc
add
sbb
adc
adc
cmp
data16
call
dec
es
xchg
jl
sub
andnps
dec
pop
xor
lods
add
add
or
or
sbb
fcomip
subb
and
test
unpcklps
sbb
das
xor
add
cmp
add
xor
movsb
cli
push
cmp
or
and
inc
xor
or
aaa
and
xchg
ds
je
pop
push
and
add
jo
jo
add
loope
pop
add
and
add
push
or
cmp
push
ss
and
mov
add
daa
push
xor
sbb
push
inc
push
pop
xor
pop
cmp
test
sbb
or
and
loop
xor
sbb
pop
and
sbb
popf
pop
cmp
dec
add
adc
adc
cmp
mov
cmp
add
add
push
pop
xor
and
add
jae
sysret
push
je
lods
pushf
adc
add
pop
hlt
sub
jne
cmp
pop
cmp
sub
xor
adc
and
adc
push
jns
add
adc
jae
sbb
and
popa
loopne
xor
and
or
sbb
sub
insl
mov
xor
or
add
add
xor
lods
outsl
xor
mov
jbe
negb
jg
adc
push
adc
adc
dec
sub
adc
adc
add
outsl
xor
jo
sbb
add
or
aam
into
xor
aas
or
cmp
push
add
inc
test
add
push
xchg
and
loopne
movsb
clc
xchg
add
sbb
ss
pop
adc
sti
jg
add
inc
sbb
pop
inc
dec
adc
add
push
mov
aas
das
xchg
lock
pusha
jne
adc
data16
cmp
dec
adc
sub
push
and
outsb
cmp
inc
das
xor
addb
fwait
int
incb
xor
dec
sub
data16
push
push
fs
out
ljmp
push
ja
arpl
pop
jns
pop
pusha
dec
jnp
push
lcall
sub
in
je
outsb
xor
dec
test
xor
dec
addr16
imul
or
pop
dec
push
dec
push
ja
xor
mov
dec
jb
popa
std
dec
addl
ja
inc
inc
dec
pop
test
inc
js
pop
sbb
mov
mov
dec
outsb
imul
jae
addr16
test
stos
aaa
push
arpl
in
xor
es
enter
lods
and
es
add
clc
inc
call
insb
push
sbb
xor
and
jno
sub
sbb
push
dec
jns
aaa
dec
mov
adc
das
and
xchg
inc
or
das
adc
push
adc
int
xor
add
sub
xor
sub
sbb
adc
adc
sub
comiss
sub
sub
push
cmp
push
lret
aaa
pop
inc
fs
xchg
mov
and
mov
sub
mov
mov
decl
movsb
add
scas
xchg
xor
daa
push
setge
push
xor
call
std
xchg
inc
and
insl
add
sub
cmpsb
sbb
sub
cmp
cmpsb
add
push
movsl
push
imul
jge
adc
cltd
xor
mov
add
mov
es
or
sub
fwait
and
sahf
pop
inc
pop
xchg
push
incl
jae
cwtl
sub
lahf
xor
mov
add
mov
inc
mov
cli
pushl
sub
mov
add
mov
fwait
pushl
cld
mov
inc
sahf
xchg
sub
movsb
sub
mov
jns
mov
xor
fwait
xor
jg
push
mov
xor
xchg
cmp
and
xor
push
dec
dec
cmp
outsb
inc
xchg
xor
mov
sub
mov
add
xorl
inc
pop
mov
dec
push
mov
mov
pop
jno
subl
cltd
cmpb
test
xor
mov
dec
rcrl
lock
or
imul
lcall
push
int
fisttps
push
mov
cmp
or
movsb
xor
test
and
call
clc
stc
cmc
ret
add
shr
lock
dec
push
adc
sub
iret
lock
outsl
adc
into
adc
int3
push
pop
pop
and
inc
dec
dec
pop
pop
sbb
int
rcrb
jmp
data16
rcr
stc
int3
or
das
sbb
inc
arpl
add
cmc
sub
add
test
ret
push
sbb
aas
aad
or
inc
inc
jl
stos
jle
dec
dec
inc
js
cli
addr16
dec
xchg
jl
pop
popa
jg
mov
lret
arpl
pop
jo
push
inc
lock
jbe
adc
outsb
adc
gs
pop
insb
arpl
ljmp
es
popa
dec
inc
jb
and
jbe
inc
fs
mov
js
inc
bound
dec
arpl
jb
push
loopne
lcall
outsl
fs
std
jns
dec
ret
dec
in
fldl
inc
in
push
ret
dec
std
push
push
in
push
adc
inc
or
jp
popa
jo
dec
ret
push
icebp
push
into
or
inc
into
inc
push
bound
data16
push
jo
lods
jne
fcomip
inc
jno
push
fs
push
jne
push
cmpsb
jbe
cmp
mov
pop
outsb
dec
jns
pop
pop
jns
lcall
jg
pop
je
inc
shlb
ja
jne
inc
shlb
subb
dec
testb
push
dec
inc
jbe
mov
pop
jl
pop
jnp
dec
imul
inc
imul
pop
ja
cmp
mov
or
add
mov
outsb
inc
push
sbb
scas
mov
inc
dec
int3
push
jp
fnstsw
clc
incl
js
inc
pop
arpl
push
jne
imul
ja
push
inc
mov
insl
insl
push
jno
push
mov
ja
stos
movsb
pop
andb
insl
inc
insb
jno
pushf
push
popa
out
fs
js
mov
push
xchg
andl
dec
push
clc
ljmp
rorb
popa
shll
jbe
gs
jo
pop
aam
in
je
inc
pop
and
pushf
js
push
dec
stc
mov
ljmp
jne
dec
ret
push
int
out
inc
push
inc
imul
sub
sar
std
js
insb
imul
jb
pop
jae
push
dec
je
outsb
fcomip
out
jo
push
dec
inc
inc
dec
jno
inc
jg
js
push
dec
sti
push
outsl
roll
in
outsl
push
dec
les
inc
jae
add
jo
push
jb
cmp
push
jb
mov
inc
inc
outsb
jbe
push
jbe
push
pusha
fs
sub
popa
cs
gs
jne
pop
pop
test
repnz
outsb
lret
insl
jg
je
inc
jo
push
ja
jne
mov
jae
outsb
imul
clc
mov
push
pop
pop
je
push
imul
cmp
ficoms
bound
ja
mov
outsb
jge
push
jge
pop
jne
jg
push
and
and
cmpsb
xor
add
push
jg
outsl
sub
push
inc
jns
mov
pop
xorb
dec
push
push
dec
pop
and
push
jo
push
inc
inc
incl
adc
push
push
cmpsb
fs
ret
add
insl
inc
fs
dec
jl
pusha
outsl
push
inc
jb
fists
insb
push
fs
inc
dec
jb
pop
jo
dec
ja
insl
jne
stos
pop
push
and
gs
dec
pusha
push
pop
inc
outsb
inc
imul
sub
clc
jle
inc
je
push
imul
add
inc
inc
pop
mov
loopne
int3
loop
hlt
stc
out
fucomp
iret
leave
loope
inc
sar
aam
jecxz
int3
cld
jmp
ljmp
ljmp
mul
xlat
fdiv
fsubrp
inc
loop
out
into
int
leave
lret
out
cmpsb
xchg
mov
xchg
nop
test
mov
mov
test
nop
mov
scas
xchg
xchg
adcb
sahf
mov
icebp
lcall
sbbl
nop
jns
push
pop
jb
outsl
inc
fcomip
rcl
or
jnp
pop
dec
jle
pop
jnp
push
std
or
pop
push
pop
pop
inc
pop
insl
dec
fs
bound
push
popa
inc
lcall
mov
inc
inc
pop
push
jnp
dec
bound
pop
and
ljmp
xor
pop
or
add
sub
push
add
add
cmp
push
cmp
sbb
sub
sub
jmp
adc
push
sbb
or
pop
aas
or
add
sub
sbb
cmp
or
push
cmp
jmp
xlat
into
in
ffreep
out
loop
lret
neg
aam
rcl
sti
repnz
jmp
in
fcom
jecxz
call
icebp
repz
jmp
leave
in
in
ret
loop
rcl
shl
dec
jmp
in
mov
add
movsl
mov
mov
mov
sbbl
cwtl
std
ljmp
xchg
test
xchg
xchg
popf
nop
nop
cmpsb
mov
mov
mov
mov
inc
xorl
call
ret
in
cli
out
cli
in
in
stc
out
pushl
cmp
sar
into
cmpsb
call
iret
aad
rol
call
inc
rcl
cld
loop
fldpi
fdivr
idiv
xlat
fcomi
aad
mov
incl
cltd
mov
movsl
mov
mov
adcl
test
test
call
lea
xchg
mov
xchg
mov
xchg
mov
lods
mov
outsl
inc
push
cld
sbb
jle
dec
js
push
jge
jl
insb
push
jge
stc
call
jns
outsb
jo
push
push
push
dec
push
addr16
dec
jle
dec
clc
call
mov
addr16
dec
imul
js
jne
sub
pop
xor
ss
ljmp
adc
sbb
push
add
push
adc
xor
sub
mov
ljmp
das
cmp
cmp
pop
xor
pop
sub
push
sbb
aas
cmp
and
aas
pusha
lcall
lcall
add
adc
pop
aaa
and
stc
neg
fmul
repnz
fcos
cld
sti
hlt
sti
stc
sar
or
roll
ret
repz
rcr
ljmp
ret
ja
loop
jecxz
enter
fcmovne
fdivp
sbb
ffree
int3
ror
sub
out
call
mov
mov
test
mov
stos
or
mov
pushf
mov
lahf
nop
lods
mov
subb
mov
mov
mov
rol
jg
mov
jbe
sbb
dec
or
dec
add
mov
push
cmp
sub
dec
pop
inc
xor
sbb
jmp
lods
decl
and
cmp
jp
or
jno
cmp
scas
cmp
sbb
prefetch
or
adc
and
lcall
sub
push
sub
daa
cmp
or
cmp
cmp
and
and
jne
or
push
cmp
outsl
mov
adc
xor
add
sbb
and
add
clc
push
xor
pop
pop
push
add
adc
push
add
dec
inc
std
call
ss
add
pop
sbb
sub
cmp
dec
outsl
sub
mov
sub
add
push
sbb
and
loop
or
and
push
cmp
adc
add
adc
and
arpl
adc
sbb
xor
cmp
push
or
xor
adc
incl
inc
ljmp
cmp
push
sub
inc
mov
add
add
js
cmp
cmp
pop
xor
adc
and
sbb
fildll
inc
ds
and
xor
and
cmp
add
or
sub
pop
inc
cmpb
sbb
test
and
insb
inc
add
and
push
push
push
adc
push
sub
sbb
sub
js
sbb
xor
adc
decl
and
int3
adc
cmp
xor
xor
push
xor
mov
and
or
add
es
daa
cmp
std
decl
and
jae
add
cmp
daa
int3
pop
xor
or
adc
aaa
insb
cmp
pop
cmp
or
es
sbb
pop
cmp
adc
pop
insb
jmp
pop
cmp
push
xor
es
xor
and
decl
sub
jne
ds
sbb
fwait
inc
clc
adc
adc
and
add
inc
adc
sub
sub
cmp
pop
dec
add
adc
or
aaa
sbb
push
pop
cld
outsl
out
cmp
push
sub
add
sub
push
push
movaps
cmp
pop
xor
das
adc
xor
adc
push
sarb
decb
or
add
je
jo
sub
push
sbb
das
push
or
mov
sbb
mov
xor
das
add
pop
sbb
das
or
idiv
add
push
xor
sbb
sub
adc
and
loopne
or
xor
das
adc
pusha
adc
aaa
ret
push
xor
sbb
dec
push
out
and
adc
xor
xor
pop
cmpb
daa
outsl
and
xor
sbb
addr16
and
sbb
pop
std
or
cmp
das
push
pop
adc
sbb
or
aas
mov
jg
pop
adc
jne
add
xor
scas
std
ljmp
sbb
add
xor
das
cmp
pop
or
add
jg
pop
nop
or
cmp
pop
add
jno
pop
or
sbb
add
push
cmp
insb
rcr
or
sub
sub
jbe
mov
cmp
xor
imul
inc
and
dec
or
std
push
and
xor
sub
cmp
cmovne
popf
insl
dec
dec
adc
and
dec
dec
shlb
push
shlb
and
outsl
cmpsb
and
mov
ds
sbb
sub
call
push
or
cmp
sub
add
leave
add
sub
push
sbb
or
or
sbb
rclb
and
adc
adc
sub
es
xor
ss
mov
mov
das
sbb
sub
push
xor
fidivs
jo
cmp
es
loope
mov
add
sub
and
inc
adc
dec
out
adc
push
adc
add
dec
push
cmp
jo
adc
cmp
pop
cmp
sub
shl
adc
adc
adc
cmp
shll
or
push
and
inc
or
stos
sub
jne
and
push
and
pop
cmp
lock
es
adc
ret
mov
aaa
add
lcall
imul
push
or
and
or
jecxz
pushl
cmp
sub
add
cli
cmp
fisubs
add
jbe
and
sbb
cmp
push
fs
or
push
daa
add
jmp
or
push
inc
dec
sub
add
adc
sub
push
cmovns
add
xor
add
push
ret
bound
cmp
cld
mov
cmpsb
sub
or
sub
sbb
xchg
mov
aas
xor
lock
push
sbb
mov
aaa
cmp
dec
shl
xchg
xor
vandnps
sub
or
and
xor
jle
cmp
and
add
mov
ret
push
cmp
sbb
pushl
inc
pop
push
or
and
pop
or
mov
sbb
xor
pop
push
add
jne
das
aaa
or
psraw
adc
jg
sub
das
add
add
or
or
or
cmp
data16
mov
or
adc
push
idivb
sbb
cmp
jne
aam
adc
or
push
sbb
and
adc
dec
add
or
push
or
and
daa
mov
inc
and
jne
sub
pop
pushl
or
push
xor
aas
sbb
adc
add
ljmp
or
daa
adc
imulb
mov
daa
ja
dec
cmp
sub
es
add
jo
jb
or
inc
push
insb
fidivl
add
dec
pop
pop
or
or
push
daa
add
ss
lods
xchg
xor
or
movsl
mov
jo
add
dec
xchg
push
sub
add
jae
xchg
xor
jg
inc
fnsave
adc
daa
jo
cmp
jno
and
adc
add
rorl
push
push
xor
mov
dec
aaa
pop
adc
or
jg
push
mov
push
adc
and
aas
dec
pop
mov
jns
or
loop
fistps
adc
sub
mov
sub
push
mov
jbe
mov
inc
decl
movsl
aaa
mov
push
dec
pop
cmp
push
and
cmp
call
orl
cs
dec
add
ljmp
scas
fldcw
pop
jb
xchg
cmp
add
adcl
xor
cs
xchg
xor
or
push
push
sub
sbb
test
gs
insb
outsl
and
roll
xchg
mov
adc
incl
and
pop
and
sub
mov
ss
add
sbbb
sub
pcmpeqw
stos
inc
mov
dec
xchg
xchg
cmpsl
sub
clc
push
sub
data16
adc
jo
ljmp
nop
adc
pop
sbb
bound
sub
mov
jae
add
aaa
fcomp
cs
sub
push
xor
inc
mov
dec
dec
fcomip
ljmp
add
movsl
cs
or
adc
mov
aam
mov
adc
clc
or
outsb
test
jbe
mov
pop
push
add
mov
jmp
push
or
in
mov
jno
and
jns
movsb
sub
sbb
mov
jbe
and
call
xor
sub
push
and
sub
dec
xor
mov
inc
cmpsb
and
cmp
push
sbbl
add
push
push
cltd
mov
inc
xchg
and
and
lcall
loop
and
push
add
cmpl
call
or
js
pushf
xor
dec
mov
add
sub
jno
mov
mov
jns
mov
push
and
lods
and
das
add
pop
sub
cltd
es
add
mov
mov
push
fwait
das
push
or
pop
inc
call
sub
xor
incl
push
dec
cs
push
push
and
push
and
sbb
in
sbb
inc
sbb
aaa
ja
scas
sub
push
ljmp
clc
jmp
or
or
pop
test
outsl
adc
push
dec
xor
and
daa
lock
adc
push
xchg
xchg
sub
push
sbb
lcall
mov
scas
aas
sbb
jbe
jbe
inc
outsb
jne
imul
dec
arpl
push
jge
inc
inc
add
add
or
xor
cwtl
dec
jmp
cmp
push
jnp
aas
add
and
and
aaa
and
jg
push
pop
out
pop
adc
pop
xor
adc
adc
jmp
adc
adc
and
cmp
adc
and
jg
ljmp
add
add
pop
aaa
xor
xor
xor
xor
adc
mov
pop
sbb
add
or
adc
jg
call
cld
cmp
arpl
and
sub
popa
ds
sbb
xor
and
or
pushl
adc
adc
jo
sbb
or
or
cmp
and
sub
adc
inc
or
sbb
add
adc
les
xor
and
add
or
add
incl
xor
push
sub
daa
ja
and
mov
adc
lods
mov
je
lret
mov
xor
push
test
insb
loopne
fcmovbe
and
out
inc
sbb
and
cmp
push
and
sbb
and
push
add
cmp
sbb
or
and
and
mov
add
or
mov
push
pop
or
and
rcrl
inc
sub
dec
xor
movsb
xor
lret
fbstp
adc
xchg
adc
cs
adc
add
into
inc
out
pop
pop
xor
add
popa
xor
outsl
push
mov
test
movsb
xchg
dec
push
stc
xchg
sarb
mov
aaa
push
dec
add
lods
sub
dec
cmpl
xor
xor
jecxz
jnp
inc
ja
fwait
arpl
inc
nop
push
add
decb
outsl
inc
pushf
push
inc
inc
cmp
xchg
or
add
add
and
dec
mov
push
inc
mov
xor
int
out
xor
xchg
add
mov
rolb
jecxz
ss
das
sbb
rcrb
dec
jns
enter
add
and
incl
or
scas
cwtl
adc
aad
and
mov
adc
stc
lret
cmpsl
push
sub
adc
call
pop
in
addb
jns
push
mov
jbe
das
shrb
push
outsb
and
dec
loopne
sub
inc
in
pop
ret
imul
je
shl
push
in
mov
sbb
js
andl
pusha
int
add
mov
cmpl
js
cld
das
xor
js
test
mov
inc
and
mov
jmp
es
inc
ss
movsb
sbb
dec
stos
in
pop
adc
add
mov
xor
test
dec
data16
out
sub
aaa
and
adc
fwait
xchg
inc
bound
cltd
mov
push
cmp
imul
aaa
adc
inc
adc
aaa
int
gs
sub
pushf
sbb
imul
xor
push
xchg
imul
and
icebp
jle
js
movsl
add
xchg
sub
mov
es
cmpsb
pop
inc
cmc
out
push
sbb
cmpsl
roll
cmc
sub
mov
inc
mov
es
add
inc
outsb
mov
mov
and
fwait
jb
xchg
outsb
jmp
add
lea
inc
jnp
aaa
dec
pop
subb
enter
scas
push
inc
outsl
mov
dec
xor
and
inc
mov
mov
pop
sti
lahf
hlt
jno
or
imul
adc
mov
sbb
and
xchg
xchg
sub
mov
push
inc
push
aaa
xchg
jb
nop
fwait
add
sub
cmpb
out
cltd
cs
in
movsb
cmp
xchg
or
incl
adc
sbb
lea
push
inc
mov
lahf
push
lret
orb
jae
sahf
sbb
xchg
sub
loop
xor
stc
lret
jmp
xor
out
adc
mov
pop
in
test
cltd
arpl
jae
stos
or
out
inc
adc
fisttpll
add
sub
cmpsb
or
mov
cmpb
push
repnz
inc
scas
cld
sbbb
fsubrs
mov
sbb
int
loope
or
bound
or
add
push
dec
add
stos
adc
inc
mov
jno
sahf
sub
gs
mov
mov
or
adc
insl
push
adcb
push
aas
xorl
dec
repnz
adc
pop
push
sub
pop
movsb
push
insl
movsb
xchg
clc
xor
aas
and
jg
adc
jbe
jae
mov
add
call
test
cmpsb
adc
loope
or
push
scas
jl
adcb
sbb
mov
push
xchg
data16
add
xchg
stos
sub
sarb
repz
sub
ds
and
mov
lock
das
lods
test
inc
test
loopne
sarl
inc
push
test
jmp
outsb
incl
inc
push
lods
xor
mov
cmp
inc
mov
or
and
or
enter
dec
sahf
add
scas
cltd
dec
inc
movb
test
add
dec
pop
js
push
cmp
xchg
cs
and
xor
cld
int
xchg
loop
mov
addb
inc
nop
jg
xor
repz
push
sbb
dec
imul
faddl
xchg
out
push
scas
sti
je
pop
inc
call
addr16
sbb
in
inc
leave
clc
int
hlt
cmp
mov
jmp
or
fcomps
cmp
insl
inc
jecxz
jbe
iret
fadds
mov
pushl
push
imul
insl
jne
push
insl
pop
in
call
insb
rol
js
loopne
ja
dec
inc
inc
fisubs
and
inc
popa
and
push
ret
ret
lcall
loop
inc
jb
js
negl
xor
inc
jae
cli
push
in
std
jb
fcomip
mov
inc
jo
jmp
mov
sub
shll
aam
dec
int3
fldl
clc
inc
popf
adc
inc
pop
push
mov
mov
add
aaa
pop
push
and
add
inc
ds
in
sbb
jle
fildll
mov
push
and
out
hlt
ljmp
cs
popa
ljmp
ss
cmp
jge
push
call
adc
lods
add
inc
dec
cltd
fdivrl
ljmp
mov
loopne
adc
inc
orb
int3
out
pop
inc
pop
lds
jnp
adc
pop
loopne
xor
cltd
imul
inc
pusha
out
and
pop
inc
outsb
decb
arpl
ficomps
add
repz
nop
and
mov
xchg
xchg
outsl
jle
in
push
pop
push
fistps
sti
test
outsl
xor
xchg
fwait
inc
cmpsb
mov
jae
hlt
push
and
ret
dec
ljmp
xor
xchg
call
or
ja
push
push
add
ss
movsb
lock
ret
out
pop
xchg
fwait
dec
jmp
ljmp
jg
cmpsl
jg
xor
dec
popa
hlt
fidivs
int
das
inc
push
inc
arpl
clc
jmp
dec
lock
sbb
push
dec
xchg
adc
mov
xor
jl
and
xchg
ret
inc
mov
lock
push
insb
push
xor
dec
cltd
adc
xchg
into
jae
xor
cld
nop
faddl
fstl
jp
push
imul
shl
test
enter
jo
je
int
lock
push
incb
inc
cs
lret
lcall
cmp
adc
mov
mov
aaa
ljmp
add
iret
sbb
inc
aad
push
aas
inc
sbb
inc
out
sub
ret
cmpsl
das
decl
xchg
or
mov
in
adc
mov
test
fistpll
pop
cltd
arpl
mov
adc
mov
mov
int3
inc
dec
outsl
push
adc
push
or
mov
dec
or
loop
pusha
xchg
cmp
and
test
pop
pusha
xchg
repnz
inc
xchg
insl
push
loope
mov
mov
mov
dec
repz
ljmp
test
mov
lahf
out
int
outsb
dec
inc
push
jo
scas
pop
push
clc
shll
jns
xchg
movsl
lret
jl
inc
jb
fisubrs
inc
cld
pop
insb
push
cmpsb
add
nop
fcompl
sub
repz
mov
nop
sbb
sub
or
pop
clc
and
imul
inc
inc
shlb
xchg
pop
lcall
or
ret
mov
aaa
push
pop
loopne
dec
jae
in
loope
insb
popa
push
mov
mov
mov
xlat
bswap
int
repz
imul
xor
insb
negb
dec
xchg
and
pop
dec
inc
mov
jb
rcr
rcl
sub
dec
push
cmc
sbb
sub
mov
scas
incb
inc
mov
or
mov
mov
scas
imul
ret
adc
call
nop
std
push
push
ss
mov
inc
jne
in
je
cmpsl
adc
movsb
lcall
add
mov
jp
xlat
imul
or
mov
loope
insb
incb
fwait
inc
ret
lret
xlat
cmp
jns
mov
jg
jp
adc
addr16
and
jne
push
sti
iret
adc
xlat
xchg
dec
mov
push
scas
and
cltd
inc
jno
mov
add
lahf
notl
cltd
inc
xchg
pop
popa
push
push
scas
sub
pop
lock
int
add
jns
push
and
xchg
pop
sub
jb
lock
pushf
push
sub
push
idivb
ss
cld
adc
fbstp
ljmp
and
jbe
lahf
jmp
dec
push
roll
inc
cmp
push
cli
add
das
push
cmpsb
jo
push
pop
mov
test
push
je
add
test
out
cmpl
inc
stc
jns
add
inc
jb
mov
jl
fildl
stc
pop
rorl
push
movsb
mov
push
inc
lahf
xorl
ds
xchg
in
inc
ss
mov
out
loope
sti
adc
fcmovb
cmp
mov
or
xchg
rcr
push
loopne
and
xchg
and
push
loope
dec
js
fsubrl
out
dec
ret
std
xor
popf
cmpsb
mov
add
pop
ret
pop
gs
or
aaa
shrl
pop
mov
ljmp
repz
ret
loopne
ja
mov
push
fisubrs
stc
add
scas
daa
repnz
rcll
mov
ss
or
inc
jmp
outsl
insb
jl
pop
outsb
sub
mov
inc
mov
fimull
scas
enter
outsl
out
inc
sub
mov
or
inc
int3
xchg
cwtl
dec
loope
sti
push
inc
jg,pn
cmpsb
hlt
add
scas
sbb
pusha
mulb
xor
test
push
je
jo
mov
orb
sbb
mov
add
lods
push
dec
sahf
push
xchg
jae
rorb
or
cmc
rcrb
or
mov
pop
fsts
je
inc
out
and
hlt
and
ja
push
cmc
mov
sbb
aaa
jns
out
add
stc
and
mov
mov
mov
sub
icebp
lock
xor
bound
jg
out
push
lods
xchg
mov
mov
in
dec
jmp
fimull
push
or
test
pop
sbb
push
jmp
add
jb
jbe
mov
pop
jb
bnd
stc
jecxz
mov
jo
mov
dec
dec
lea
pushf
loopne
shlb
push
dec
or
mov
sbb
fsubrs
push
or
mov
xor
rcll
push
ret
inc
xchg
aam
jl
mov
scas
mov
fcomip
lods
xor
adc
or
jp
jg
lea
jne
mov
inc
in
and
mov
inc
push
test
add
inc
mov
stc
aas
mov
fsubrl
mov
sarb
push
mov
inc
mov
test
jl
mov
scas
push
inc
popa
in
xor
push
dec
xchg
repnz
mov
xchg
dec
into
test
lds
dec
loopne
out
and
mov
jp
cmp
cwtl
mov
cmpsb
mov
fsubrl
lods
popa
cltd
out
sub
cmp
inc
jo
push
repz
cmpsl
fwait
inc
lods
xchg
adc
jb
cmc
test
mov
mov
mov
mov
test
iret
lahf
mov
into
xor
stos
mov
mov
movsb
cld
add
dec
dec
cwtl
sti
lods
sbb
daa
repz
cmc
dec
push
int
cmp
nop
xor
fdiv
or
loop
mov
leave
add
test
orl
sbb
xchg
arpl
push
mov
xchg
mov
dec
leave
test
jno
pop
cmpsl
fld
push
fstps
inc
neg
xorl
cmc
add
inc
fldl
lods
mov
inc
push
cwtl
xchg
mov
xchg
sub
add
inc
popf
addr16
scas
inc
popa
popa
push
test
int
fsts
lcall
or
cmp
pop
pop
mov
or
mov
push
lea
cmp
xchg
xchg
je
add
jl
aaa
push
push
jo
inc
xchg
loopne
xchg
add
mov
mov
mov
dec
pop
cmpsl
cwtl
loope
xchg
aaa
inc
pushf
xchg
mov
xchg
inc
xor
mov
mov
sub
inc
jo
and
or
push
xchg
mov
stos
jp
and
sarb
push
mov
sub
cwtl
cli
xor
mov
enter
xor
xor
inc
mov
xchg
sbb
lcall
push
mov
enter
mov
and
add
shrl
sub
push
mov
sub
mov
lahf
out
in
push
scas
xchg
jne
xchg
mov
addr16
js
inc
inc
shl
mov
dec
aam
cmpsb
test
mov
jge
pop
push
popf
shr
sub
repnz
inc
dec
je
outsl
push
ret
add
pop
repz
xchg
movsb
aaa
jmp
dec
cmp
dec
cli
pop
insb
dec
inc
loop
sbb
ret
imul
inc
cmpsl
add
insl
push
pop
arpl
data16
addl
cwtl
sbb
mov
dec
push
mov
rclb
in
aam
jae
ja
popa
mov
mov
into
push
gs
sub
aaa
pop
add
je
repnz
sub
je
dec
loopne
sub
pop
scas
rolb
pop
inc
cwtl
dec
sub
jmp
testl
xor
add
or
fsubl
sbb
or
inc
adc
lret
pushl
addr16
mov
pushf
movsl
rcr
pop
ljmp
aaa
loop
dec
dec
mov
pop
js
pop
incb
imul
int
xchg
ret
push
popa
ret
jg
xor
adc
jae
dec
jge
and
scas
ds
addr16
mov
push
shl
and
insl
or
imul
push
mov
xchg
mov
imul
mov
jg
imul
xchg
cld
pop
xor
inc
repnz
pop
imul
call
imul
jne
popa
inc
jo
pop
push
inc
outsl
pusha
dec
jge
lcall
movsb
jp
popa
dec
xor
inc
dec
adc
inc
je
dec
inc
push
fs
ljmp
shll
int
pusha
jns
push
jo
mov
push
outsl
push
inc
jae
push
inc
jnp
push
dec
arpl
inc
insl
inc
or
dec
add
outsb
loope
incb
push
inc
leave
jbe
orb
popf
ud0
dec
inc
mov
inc
je,pt
jmp
dec
inc
inc
jno
push
insb
ja
push
jbe
fbld
jno
data16
bound
jl
push
dec
insl
push
fs
pop
mov
loopne
push
je
dec
push
xor
jne
dec
push
data16
push
or
call
pop
imul
jle
push
std
push
jnp
jecxz
dec
imul
and
pushf
jns
ja
in
jge
jns
addr16
decl
inc
jne
push
push
and
jne
js
jns
pop
dec
inc
or
or
adc
repz
mov
out
jp
inc
jp
clc
dec
arpl
pop
push
pop
mov
jo
outsl
jl
xor
jae
jbe
hlt
push
scas
mov
and
adc
push
js
inc
daa
and
daa
sbb
aaa
add
cmp
ds
and
dec
sbb
out
cmpsb
xor
ss
es
ss
xor
hlt
cmp
popf
ret
cmp
cmp
dec
daa
pop
sbb
lar
jno
jno
and
cld
add
xor
xor
mov
daa
cmp
add
and
ljmp
push
adc
pop
push
and
sbb
or
das
or
int
sbb
adc
sub
cmp
and
jae
or
outsb
and
ljmp
cmp
add
sub
dec
or
movups
syscall
pushl
cs
and
or
sub
pop
sbb
xor
add
outsl
in
push
or
or
adc
or
or
stos
and
and
pop
cmpb
jne
cmp
sbb
aaa
std
out
mov
and
sub
adc
push
jbe
push
or
add
decl
or
xor
ss
and
add
das
or
and
sbb
mov
xchg
cmp
inc
out
mov
or
or
jg
incb
adc
add
add
adc
sub
cs
sub
push
cmp
and
inc
sub
sbb
xor
or
xor
sbb
adc
ss
clc
adc
lods
sbb
sub
sub
hlt
mov
xor
add
pop
xor
or
sarb
xor
sbb
jg
cmp
push
pop
ss
cmp
arpl
sbb
sub
pushl
sbb
add
or
sbb
cmp
cmp
or
adc
mov
push
sbb
xor
add
jmp
xor
call
add
aas
sbb
sbb
or
xor
ja
and
xor
sbb
lcall
cmp
sbb
push
cmp
gs
adc
and
add
dec
xlat
popa
adc
sub
out
xor
ds
and
add
or
adc
push
fsubrs
incb
iret
ja
or
xor
sub
int3
sub
xor
cmp
or
push
or
sub
and
add
mov
inc
and
fcomip
bound
sbb
adc
push
sub
adc
or
push
and
cmp
mov
xor
xor
and
xor
inc
add
sar
fwait
sbb
sbb
sub
push
jne
pop
adc
push
adc
ljmp
sbb
addr16
ja
pop
dec
sub
adc
pop
or
es
push
xor
adc
or
xchg
pop
or
cmp
or
adc
and
and
jo
jbe
sub
add
adc
push
adc
cmp
adc
bound
in
dec
sysret
adc
lea
enter
pop
add
imul
dec
inc
sar
and
add
pop
add
xor
add
push
stos
test
in
or
bound
add
and
sbb
and
and
or
add
xor
pop
orb
adc
cmp
push
cld
pop
sub
sub
sbb
add
in
inc
mov
scas
adc
xor
add
or
cmp
imul
pop
icebp
jmp
sub
sbb
dec
push
push
sbb
pmaxsw
scas
js
mov
cmp
jp
dec
xor
xor
int
cli
andb
sbb
push
add
cmp
add
daa
sbb
jb
jo
push
push
or
fbstp
push
jo
dec
add
daa
adc
sbb
and
inc
add
add
add
aaa
or
jg
and
ds
push
sub
pusha
sbb
sub
adc
cmc
add
cmp
iret
popa
add
das
ss
loop
or
add
sbb
es
mov
fmuls
add
sub
fcomip
adc
add
push
sbb
sub
mov
inc
push
aaa
or
push
sub
xor
lock
push
daa
add
dec
jno
js
xor
add
mov
insb
sub
xor
outsl
inc
or
aas
push
pop
pop
cmp
sub
mov
daa
daa
cmp
sbb
inc
xor
ds
or
pop
add
aaa
sub
add
pop
adc
pop
mov
ds
shll
xor
dec
and
std
add
js
inc
cmp
add
push
adc
dec
imul
adc
fistl
testb
pop
add
dec
jae
pop
aas
sbb
cmp
adc
sbb
es
and
jg
add
or
adc
loopne
mov
out
cli
adc
jae
add
cmp
push
xor
adc
das
fmuls
or
mov
pop
push
xor
and
aaa
mov
sub
ja
mov
cs
and
jg
ret
repnz
push
scas
insl
add
mov
cmc
jg
sub
push
mov
sub
adc
xor
ss
push
in
dec
ds
out
pop
hlt
xor
and
push
xor
push
push
ss
aaa
sbb
mov
jbe
or
pop
cmp
push
cmp
sbb
mov
add
cwtl
cmp
bound
mov
cmp
jl
mov
orb
sub
mov
cmp
dec
add
aas
or
cmp
inc
and
sub
cmp
sbb
and
inc
aad
sub
outsl
xchg
gs
or
sub
sub
and
aas
sub
jmp
inc
sbb
aas
xor
pop
jne
ds
adc
pusha
pop
outsl
pusha
out
cmp
push
aaa
xchg
adc
aaa
xor
ds
sbb
je
sub
jg
jne
jnp
or
test
loope
sub
test
es
inc
sub
push
repnz
cmp
pop
sbb
mov
ljmp
push
xlat
jp
xor
xor
adc
sbb
sub
sbb
call
add
pop
inc
pop
add
inc
dec
and
enter
add
adc
push
decb
call
push
or
adc
add
daa
or
and
pop
mov
or
inc
xchg
jnp
and
dec
pusha
add
or
out
and
or
dec
rorb
addr16
je
pop
les
and
sub
xor
std
aas
inc
mov
jge
das
and
xor
xchg
pushf
push
push
add
sub
jle
ss
jns
adc
add
or
sub
cmp
mov
cmp
mov
sar
add
pop
dec
pop
cmp
add
xor
mov
xor
push
push
and
jmp
sahf
and
adc
sub
or
sub
aaa
adc
and
adc
adcb
ljmp
adc
cmp
pop
or
adc
jl
test
lcall
cmp
adc
adc
sbb
adc
adc
fwait
xor
inc
sub
xor
and
push
add
adc
add
cmp
add
inc
mov
push
ret
addr16
push
jno
adc
sub
sub
pop
pop
mov
pop
sub
push
inc
daa
adc
sub
pop
add
add
add
add
or
incl
adc
and
add
test
add
add
dec
pop
or
ja
sub
adc
stos
or
or
sub
cmp
sub
data16
das
sbb
in
movsb
mov
es
push
xchg
push
mov
and
add
adc
or
xor
mov
loope
push
cs
push
push
sub
pop
xorb
fidivrs
pop
xchg
daa
or
adc
pop
nop
xor
jle
test
push
inc
push
ljmp
mov
add
shlb
pop
or
push
pushf
lret
jmp
jae
adc
or
pop
xor
adc
or
cmp
xor
and
jg
pusha
xchg
inc
inc
pop
outsb
push
adc
adc
sbb
xor
pop
jge
and
jno
fdivs
and
cmp
or
dec
mov
adc
aaa
sub
lcall
inc
or
pop
inc
aaa
dec
cmp
dec
pop
je,pt
inc
jp
es
push
sub
add
adc
push
push
mov
push
sub
js
and
pop
mov
push
pop
mov
pop
dec
ss
jg
mov
xchg
pop
daa
cmp
or
arpl
vmwrite
fsubl
ds
addr16
push
pusha
mov
lcall
xchg
les
jbe
cmpsb
pop
jmp
dec
and
jl
imul
add
pushl
push
sub
cmp
sub
push
and
xchg
sub
jp
and
incl
test
adc
sub
adc
inc
pop
xor
pusha
aam
sub
sub
ds
sbb
push
call
or
int3
cmp
scas
xlat
cwtl
cmpsb
dec
xor
push
imul
or
rcll
inc
jnp
fs
add
xor
inc
ret
out
aam
dec
inc
sub
push
pop
inc
xor
push
mov
jp
cmpsb
imul
jb
add
dec
bound
inc
xor
push
mov
push
dec
cmp
shll
cmp
xchg
lcall
jns
sub
mov
cmpsb
inc
int
push
or
xor
pusha
pop
lock
sbb
cmpsb
inc
dec
sbb
push
push
imul
mov
push
xchg
lcall
pop
vmovaps
shll
adc
jo
push
cld
pop
push
insb
ss
iret
inc
in
pop
insb
notb
jo
data16
int3
gs
lret
dec
inc
popa
in
insb
ss
inc
pusha
jbe
pop
jnp
andb
data16
dec
inc
jne
fs
cmpsb
imul
dec
data16
xor
sub
adc
scas
push
jns
pushf
dec
sub
pop
inc
xchg
cltd
orb
addr16
lahf
or
mov
adc
add
mov
add
mov
fbstp
lahf
outsb
or
jnp
jo
add
jg
cmpsl
dec
dec
loop
or
pop
xor
add
mov
outsb
mov
and
bswap
jnp
lds
jno
jmp
add
testl
data16
ljmp
xor
cmc
call
mov
add
mov
push
jne
jns
pop
aam
imul
inc
cmpsb
scas
sub
iret
jg
int
mov
bound
repz
cld
mov
push
test
inc
arpl
popf
adc
inc
push
mov
enter
repz
aaa
cmp
push
aam
adc
ja
xchg
vmwrite
cmp
cld
popa
mov
mov
add
jb
add
rolb
mov
push
nop
add
mov
stc
int
je
mov
outsb
push
jbe
mov
aaa
stos
sub
push
int3
outsb
mov
inc
adc
xor
xchg
push
je
movsl
lock
pop
push
testb
popa
sarl
jae
inc
mov
jge
dec
and
mov
inc
pop
jg
jns
dec
pop
cmp
add
fs
mov
jb
dec
imul
imul
pop
push
gs
push
rclb
imul
aas
mov
xor
sub
xor
add
or
push
cmp
push
xor
xor
and
pop
or
and
ljmp
sub
and
xor
or
add
pop
and
pusha
push
pop
push
ja
pop
jno
push
nop
jecxz
jg
js
push
pop
imul
push
jl
mov
mov
movsb
outsl
bound
ja
push
insb
bnd
in
inc
popa
data16
mov
das
call
les
or
in
decl
adc
push
add
cmp
add
xor
pop
push
sub
adc
lar
adc
mov
sbb
or
or
sbb
sbb
mov
cs
fcomp
adc
inc
incl
iret
insl
das
dec
push
push
imul
sti
add
outsl
xlat
mov
cltd
fxch
push
int3
fldenv
incb
inc
pop
es
mov
mov
daa
nop
ja
mov
repnz
imul
cmp
lahf
in
pushf
out
icebp
pop
jne
in
enter
enter
xor
lock
add
dec
out
mov
inc
jo
lods
or
mov
dec
hlt
inc
pop
hlt
mov
dec
cli
pop
cs
xchg
xchg
inc
sbb
push
xor
nop
out
xchg
inc
inc
dec
movsb
fcoms
cmpsb
inc
and
orb
jnp
jg
test
cmc
xchg
or
outsl
scas
mov
or
decl
xchg
dec
lcall
inc
mov
cmp
mov
push
jno
test
jmp
scas
xor
popf
and
xchg
push
push
in
pshufw
sub
xchg
cmp
sub
mov
adc
scas
xor
cltd
xor
cmpsl
cmp
ljmp
mov
pushw
movsb
add
mov
or
inc
xor
adc
pop
lea
mov
cmp
cmp
mov
inc
push
xchg
pop
insb
jle
jg
icebp
xor
scas
ds
adc
lea
inc
mov
xchg
es
and
clc
call
mov
xchg
int
xorl
pop
inc
dec
push
pop
shlb
push
jae
scas
stos
xchg
jl
pop
inc
repz
or
sahf
lcall
hlt
sub
mulb
inc
movsb
mov
sub
aas
sub
clc
pop
sub
and
xchg
loope
aaa
mov
jg
xchg
call
push
xor
lock
bound
loope
aas
and
push
push
pop
xchg
jp
cmp
in
inc
adc
sub
add
pushl
jg
enter
jo
testb
cmp
push
popa
mov
call
cmp
jb
or
in
add
xchg
hlt
or
out
out
sbb
sar
ljmp
out
vmovapd
dec
xchg
aad
mov
js
mov
cli
and
aaa
enter
fucom
decl
push
jo
in
ds
pop
or
mov
mov
adc
xchg
mov
cmc
idiv
mov
and
add
mov
test
cmpsl
nop
lods
cltd
mov
loopne
sub
ljmp
call
dec
scas
ret
daa
or
rol
aas
setp
or
xchg
in
aad
push
jo
ret
out
cmpsb
sub
xchg
sub
sbb
arpl
and
mov
enter
push
cmp
decl
mov
sbb
dec
or
mov
mov
ds
pop
and
mov
arpl
adc
and
out
sbb
mov
pushl
aas
pop
mov
jnp
jbe
mov
outsl
adc
push
add
call
or
push
in
pop
lock
mov
enter
xchg
pushl
jle
lods
jecxz
push
inc
push
adc
shll
arpl
mov
jmp
in
mov
adc
imul
push
lahf
mov
fistpl
sub
sub
sbb
mov
loop
cmp
mov
bnd
out
clc
ljmp
roll
push
rcrl
adc
xchg
daa
xor
push
pushl
and
xchg
int
imulb
addr16
test
jnp
lock
int
push
orb
cltd
stc
sub
mull
dec
xchg
lret
pop
or
jg
jmp
pusha
add
jb
cld
cmp
or
in
mov
pop
repnz
aad
inc
pop
hlt
mov
inc
pop
shrl
adc
jae
jg
popf
outsb
pop
pop
push
ficompl
sub
cli
jae,pn
mov
subl
mov
adc
xlat
pop
jmp
lds
es
sbb
cld
in
outsl
notl
fs
cmpsb
addr16
int3
mov
das
jbe
je
jne
jno
movsb
push
int3
outsl
js
out
out
sahf
out
pop
sbb
hlt
repz
jl
lods
stos
push
jb
cmp
mov
mov
gs
dec
xor
shl
xchg
pushf
jp
add
insb
ss
inc
das
js
outsl
test
dec
jg
xchg
or
push
cmp
sub
or
adc
ja
stc
aaa
sbb
add
pop
xorb
dec
insl
dec
adc
sbb
and
repz
pop
sbb
or
xor
add
mov
add
lcall
adc
pop
add
ds
or
pop
cmp
xor
das
cmp
lcall
imul
pop
dec
aaa
pop
cvtpi2ps
cs
jmp
add
cmc
push
rcrb
imul
mov
int
jl
sbb
push
ds
dec
adc
dec
fdivl
jbe
jg
cmc
jg
insb
adc
ja
inc
or
push
sub
sub
pop
std
pushl
xor
aas
or
js
cmp
and
or
sub
add
push
or
cwtl
clc
xor
adc
jb
aas
sbb
xor
imul
dec
pop
sbb
sbb
jmp
inc
repz
lock
stc
jno
push
loopne
mov
pop
out
push
bound
inc
imul
mov
pop
jmp
sbbl
test
inc
xchg
dec
mov
or
pop
push
outsl
lds
or
clc
inc
dec
test
lcall
jns
ljmp
daa
push
xor
jne
ljmp
cli
jl
pop
std
jg
push
les
mov
mov
cwtl
jl
jle
inc
sahf
push
test
jmp
jle
out
addr16
inc
push
iret
jle
dec
pop
outsb
push
cs
aas
imul
jg
xchg
fistl
jp
dec
insb
inc
xor
push
ljmp
jo
and
pop
mov
push
pop
adc
push
jg
jmp
mov
jne
inc
xchg
insl
xor
inc
mov
push
cmovle
inc
outsb
jge
pop
ljmp
and
push
nop
jnp
cmp
pop
jp
pushl
pop
rolb
pop
jg
jp
push
dec
add
scas
jne
insb
xor
pop
push
dec
outsb
dec
aad
cmp
mov
push
inc
jle
dec
bound
pop
push
insb
pop
arpl
pop
xchg
pop
xchg
jbe
inc
inc
pop
pop
jp
pusha
lods
xchg
add
xchg
push
push
push
es
jp
push
push
sub
cli
jg
je
dec
cmp
push
jno
push
inc
jno
or
int
call
clc
jo
pop
stos
arpl
push
mov
push
stos
inc
bound
dec
sbb
jns
dec
cmp
mov
incl
push
ret
pop
jmp
aam
inc
arpl
pop
cld
mov
push
addl
fistpll
or
jb
push
leave
jns
pusha
xchg
dec
inc
inc
inc
ljmp
add
jns
push
mov
pop
pop
scas
jg
fs
jns
dec
and
decl
jle
arpl
inc
fsts
push
push
pop
imul
dec
ljmp
jl
jmp
inc
out
arpl
mov
in
jp
arpl
pop
loopne
jbe
fs
sbb
inc
cmpb
push
fsubs
jo
call
cld
pushl
leave
jnp
jo
pusha
lods
inc
jle
dec
fiadds
addr16
inc
pusha
addr16
push
jns
incl
inc
push
dec
pop
sub
sbb
pop
jns
jl
push
adc
dec
adc
or
inc
es
inc
or
lcall
in
inc
shll
pushf
inc
mov
pop
pop
xorb
jns
inc
add
cmp
inc
notb
cmp
repnz
mov
push
cmp
dec
aaa
dec
or
xor
std
push
xor
aad
dec
movsb
mov
call
je
jae
jp
jnp
push
arpl
jno
pushl
jg
pop
add
push
shll
gs
dec
xchg
outsl
jae
jo
sti
push
cld
sub
jnp
dec
push
outsl
dec
dec
mov
jnp
dec
aas
push
jg
outsl
fcoms
jbe
pop
repnz
mov
jnp
push
sub
jne
push
fisubrl
push
mov
call
dec
lret
inc
mov
dec
push
js
dec
sub
push
emms
adc
inc
or
jge
outsb
lret
fsubp
push
cli
jl
inc
out
push
movsl
push
mov
dec
cmp
xchg
jge
js
outsl
pop
dec
push
jae
imul
pop
pop
dec
fcomip
incl
dec
add
pop
sarb
outsl
test
mov
pop
push
dec
dec
das
push
or
cmp
push
mov
cmp
and
jb
push
incb
loop
jbe
mov
jg
jns
jbe
mov
ljmp
clc
pop
dec
dec
push
push
daa
inc
sub
dec
hlt
jo
push
xlat
pop
fldl
pop
fdivr
jmp
fiaddl
jb
jge
inc
addr16
pop
add
push
in
pop
fimull
jge
inc
hlt
pop
pushf
ja
and
dec
pop
jle
je
sub
jl
insl
vmwrite
add
lock
call
incl
jg
push
add
push
enter
fistl
inc
mov
xorb
insb
jge
fs
dec
jbe
xor
cmp
jl
push
jns,pn
pop
les
jg
gs
lcall
mov
mov
mov
push
push
imul
dec
pop
adc
jmp
insb
sbb
push
pop
jns
inc
jbe
pop
ret
ja
imul
imul
mov
mov
xchg
jg
dec
jg
pusha
pop
dec
outsb
imul
cld
jns
or
in
out
pushl
jl
insb
jno
fs
icebp
loopne
arpl
push
pusha
insl
push
js
cmp
call
push
or
jge
jg
jge
push
xor
jo
insb
loope
out
in
stos
inc
jp
ljmp
cli
push
je
push
jle
addr16
pop
jno
jp
adc
add
stc
outsl
loope
fstps
es
stos
pop
gs
fs
push
movsb
fstpt
jb
inc
out
dec
xchg
pop
mov
mov
inc
orb
mov
lcall
dec
pusha
jbe
dec
jae
jne
je
dec
pop
jg
jno
push
fwait
push
inc
lock
pop
pop
xor
ja
pushl
aam
mov
inc
push
popa
dec
inc
ss
pcmpeqw
add
push
xchg
push
je
aad
imul
insb
push
adc
lret
jp
push
cmc
jnp
jne
push
mov
dec
imul
xor
lcall
imul
mov
push
adc
dec
add
inc
push
add
js
push
mov
dec
mov
inc
xchg
je
pop
add
inc
popf
jne
ja
addr16
inc
stos
jp
jns
popa
sub
call
push
inc
jg
jo
imul
and
jbe
ljmp
dec
dec
lcall
pusha
jp
or
push
ss
jbe
dec
cmp
jne
outsl
imull
dec
mov
ljmp
imul
or
add
cwtl
jl
jno
push
ret
jecxz
mov
mov
dec
stos
jle
inc
push
jns
pop
adc
dec
decl
mov
insb
cmp
cmp
push
in
pop
aam
xlat
inc
cmpsb
incl
cmpsb
jae
jl
xchg
dec
cli
imul
inc
cli
fildll
imul
aad
idivb
ret
jmp
inc
push
inc
push
addr16
push
add
inc
add
cli
incl
mov
push
push
sub
pusha
sbb
inc
hlt
js
push
gs
pop
sub
ret
pop
or
call
jo
pop
inc
stc
outsl
cli
aaa
fcoml
scas
pop
mov
push
push
push
dec
push
dec
push
sbb
test
lock
arpl
inc
or
dec
mov
jnp
leave
push
outsb
jo
je
dec
or
sbb
decl
jge
pop
adc
jg
inc
cmc
data16
je
jno
push
movsl
jle
jne
addl
inc
inc
fs
gs
push
cmp
push
leave
pop
idivl
pushl
jne
jo
pop
dec
pusha
inc
inc
outsb
jle
bound
sbb
dec
test
pushl
std
xor
dec
xchg
imul
xchg
dec
mov
jle
bound
push
jo
xor
call
addr16
push
push
lds
icebp
inc
mov
orb
jbe
mov
dec
sub
hlt
lcall
jae
outsl
dec
mov
dec
popf
inc
test
jge
jnp
jb
push
jne
lock
orb
pop
sbb
push
lods
jle
pop
arpl
clc
outsl
clc
out
pop
bnd
jbe
dec
jbe
pusha
out
mov
in
incl
test
push
xchg
push
ljmp
push
imul
lcall
push
push
or
push
cmc
push
fwait
push
pop
dec
outsb
pop
or
stc
push
pop
push
dec
out
jl
adc
pop
cs
fs
pop
inc
out
shll
gs
incl
imul
dec
popa
jne
bound
inc
ja,pt
pop
fldl
inc
mov
ja
jb
popa
inc
inc
addr16
jge
gs
mov
test
push
cld
jo
imul
jbe
dec
push
inc
dec
es
sbb
mov
jo
push
sub
sbb
jg
ret
pop
dec
sti
data16
loop
pushl
call
inc
inc
in
pusha
jge
or
jb
popa
jno,pn
jb
push
pop
inc
fnstsw
fistpll
orl
pop
inc
jl
aaa
pop
hlt
cmp
arpl
pop
xchg
mov
dec
pop
pusha
ss
mov
dec
sahf
jp
inc
pop
dec
jb
adc
push
aam
aam
lods
push
test
popa
outsl
decl
mov
clc
jl
imul
adc
pop
jno
outsb
jno
pop
lahf
hlt
decl
dec
outsl
pop
lock
andb
aad
xchg
je
adc
outsb
sub
repz
jg
pop
xchg
inc
mov
mov
or
jb
jo
inc
mov
leave
mov
jno
pop
dec
dec
jns
push
dec
outsl
push
push
jnp
inc
js
push
gs
cld
mov
test
imul
xor
push
add
push
push
ss
dec
pop
dec
xchg
call
mov
add
aaa
jp
jg
pop
clc
jo
jnp
imul
scas
lcall
dec
push
push
fsubrl
pop
fistpl
dec
out
pop
fsts
pop
mov
cld
pushl
pop
xor
inc
lock
fimuls
jp
dec
dec
loop
fstpt
mov
insl
jl
mov
pop
or
gs
dec
ficoms
push
rcll
adcb
push
lods
ljmp
mov
adc
jns
jo
mov
inc
mov
popa
aam
cmc
inc
xor
push
dec
push
stos
jae
jne
jl
call
mov
je
jnp
cmpsb
jns
push
bound
jae
addr16
pop
mov
jb
jno
dec
ljmp
roll
bound
dec
push
mov
and
pop
cmpsb
outsl
pop
push
push
ja
pop
lds
loop
ljmp
sub
js
jbe
push
out
in
push
lret
dec
scas
push
movsl
dec
mov
popl
shlb
lock
push
or
sbb
inc
data16
clc
fistpll
push
push
jns
sbb
jns
or
sub
add
pop
ds
or
ja
testw
jns
ljmp
pop
dec
mov
in
inc
pop
in
pop
xor
imul
add
pop
rorb
idiv
push
js
mov
mov
outsb
stos
pop
jle
adc
inc
sub
inc
arpl
jmp
sbb
jne
addr16
pop
in
dec
bound
jg
pop
jecxz
aaa
out
mov
pop
adc
pop
popf
data16
bound
inc
or
mov
pop
dec
inc
pop
lods
bound
cs
dec
or
inc
xor
push
inc
mov
loop
incl
pop
filds
stos
jno
pusha
popf
je
jl
imul
idivl
push
sub
cmp
jbe
pop
shll
pop
lock
cmpsl
dec
insl
jp
shll
jl
pop
fs
push
mov
push
jp
push
push
loop
int3
inc
into
or
call
bound
jno
inc
push
inc
pop
jbe
imul
pop
gs
xor
jnp
push
incb
fs
inc
lcall
jne
inc
jg
sub
pusha
int3
jno
jne
pusha
cmpb
jmp
pop
dec
jo
jg
pop
out
jno
inc
out
xchg
jge
inc
pop
gs
ja
jb
adc
mov
jbe
adc
fs
gs
mov
sbb
adc
or
pop
cld
push
js
jne
je
fdivs
pop
popf
arpl
jge
dec
add
ljmp
sub
pop
jp
pop
cltd
dec
mov
push
sub
jb
outsl
jg
incl
dec
fs
sbb
lea
push
pop
push
dec
sbb
lods
decl
mov
add
dec
popf
jb
loope
jbe
js
lcall
dec
dec
xor
jb
je
jge
jl
push
pop
enter
or
mov
jb
je
pusha
arpl
pop
punpckhdq
ljmp
sbb
int
in
call
pushl
out
inc
nop
inc
popa
insl
push
pop
sbb
push
and
je
dec
adc
pop
int
ficoml
jl
jge
pop
shll
pop
roll
pop
inc
inc
ljmp
inc
sbb
decl
imul
pop
inc
aas
dec
icebp
arpl
jne
data16
push
clc
incl
je
dec
pushl
pusha
lock
repz
out
cli
add
inc
mov
mov
test
jl
jl
xchg
sub
jmp
inc
xchg
push
lret
imul
cld
incl
dec
inc
pop
inc
push
inc
pop
pop
pop
insb
jb
or
or
jp
inc
adc
jns
arpl
fcomip
ja
adc
dec
sbb
mov
popa
out
jge
jb
pusha
lcall
jg
pop
mov
pop
push
pop
inc
bound
dec
cmp
push
sub
inc
and
jg
lcall
addr16
pop
push
jb
pop
mov
jbe
jno
jns
jne
inc
jns
and
pop
pop
push
jae
inc
inc
pusha
pop
pop
push
js
pop
pop
jb
jg
ficoms
jo
je
pop
movsb
inc
mov
push
movsb
jle
push
push
rol
scas
mov
insl
pop
hlt
lcall
push
jo
dec
data16
outsb
inc
inc
jle
push
imul
mov
das
push
or
ja
jne
inc
and
jae
outsb
mov
pop
or
cmp
jge
push
and
int3
inc
negl
pushl
dec
sarb
int
std
addr16
jbe
jb
addr16
leave
addr16
jmp
leave
jg
pop
scas
jno
ret
incl
xchg
jge
inc
mov
scas
jbe
jae
push
xchg
xchg
inc
cwtl
add
clc
outsl
dec
inc
inc
pop
bound
addr16
les
inc
loopne
add
push
sub
jnp
jns
or
jbe
push
sub
sbb
pop
jb
hlt
xchg
js
adc
stos
inc
push
pop
pop
pop
pop
pop
inc
cld
call
jp
inc
jnp
push
outsb
cmp
pop
sbb
pop
adc
scas
clc
lcall
dec
in
repz
repnz
lcall
arpl
and
jns
cmc
scas
das
clc
gs
stos
inc
loop
dec
andb
jno
js
mov
push
jg
jae
jge
pop
and
add
jae
addr16
jmp
dec
xor
insl
loope
loop
jmp
ljmp
bound
jbe
inc
mov
xchg
icebp
call
pop
jb
pusha
push
push
pop
push
dec
pop
jne
pop
pushl
sbb
pop
sbb
sbb
pop
aas
inc
ficoml
std
pop
mulb
inc
shlb
pop
cmc
out
cli
inc
stos
insl
mov
mov
lahf
dec
cltd
addr16
bound
dec
cld
jmp
push
es
daa
jg
inc
fstpt
aam
sarl
push
icebp
dec
mov
jnp
imul
pop
xor
jg
push
pop
ja
imul
pop
and
push
js
dec
insb
ret
mov
scas
push
test
insb
mov
jae
je
dec
push
clc
ja
insl
add
dec
cmp
sub
imul
outsl
cli
jae
jl
outsb
out
jl
jno
push
sahf
inc
mov
lcall
jle
inc
insb
fs
push
pop
dec
js
xor
and
pushl
jl
push
push
out
jno
pop
leave
push
lds
jne
dec
lods
push
mov
dec
dec
cmp
ja
popa
push
bound
cmp
je
adc
jp
insl
add
push
enter
decl
dec
int3
jbe
pop
cwtl
out
dec
xchg
jmp
pop
mov
jle
pop
jl
outsl
sub
dec
aaa
ja
pop
sbb
push
mov
outsl
in
pop
lret
jl
dec
movsl
dec
mov
fwait
mov
push
push
inc
addr16
adc
bound
add
jge
inc
shlb
pop
rcl
pushl
insl
lds
aam
mov
movsb
push
mov
popf
jne
push
sahf
jnp
dec
outsl
pop
std
pushl
jae
mov
or
pop
push
ja
jl
insb
cmc
dec
in
outsb
cmc
jle
dec
ljmp
sub
inc
push
test
inc
push
leave
pop
lods
push
nop
jle
jl
mov
pushl
push
dec
je
imul
inc
push
inc
inc
jo
push
adc
ljmp
incb
arpl
cmp
inc
out
mov
inc
mov
pop
add
pushl
movsb
push
inc
add
dec
std
jbe
inc
dec
lret
fdivrp
fcomip
roll
jg
arpl
push
inc
inc
inc
inc
dec
xor
pop
ja
jle
jg
pop
in
push
repz
ret
jne
jnp
pop
mov
push
mov
push
inc
push
dec
ljmp
insb
pop
jo
jae
dec
and
pusha
flds
arpl
ja
inc
jno
jae
pop
push
fbstp
push
pop
push
jnp
push
rcrb
push
test
pop
lods
ja
jns
decl
pop
pop
inc
cmp
inc
cmp
loope
ret
inc
mov
decl
pop
data16
inc
sub
dec
adc
bound
outsb
negb
pop
mov
bound
rorl
jb
imul
call
rclb
sbb
jnp
imul
lock
jg
pushl
outsl
ficoms
pop
mov
jne
add
push
push
pop
js
dec
loop
pop
cld
out
dec
loope
stc
dec
lret
popa
subb
push
mov
je
dec
cld
fs
ljmp
insl
das
push
dec
mov
mov
imul
xor
jge
jo
cmp
and
inc
in
jle
jno
pop
dec
lcall
jg
inc
dec
add
xor
ljmp
imul
sub
jnp
push
push
ljmp
mov
inc
dec
mov
push
imul
cs
rolb
xorb
mov
js
outsl
inc
jb
jns
push
rorb
je
pop
mov
xchg
das
loopne
decl
pop
or
data16
mov
jmp
popa
dec
cmp
pop
imul
bound
loop
ret
inc
leave
inc
push
dec
cli
jg
push
dec
lea
pop
jne
push
dec
mov
push
adc
inc
sbb
jb
dec
stos
jg
mov
std
jae
ja
bound
inc
jbe
jns
test
loopne
pop
cs
pusha
jno
cli
add
xlat
cld
in
pusha
outsl
jb
and
js
jae
fisubs
pusha
xchg
std
jg
xchg
dec
popa
inc
inc
add
push
lods
inc
ja
jne
fs
js
popa
jg
mov
xor
or
pop
imul
adc
ljmp
incl
jb
push
add
fs
adc
inc
daa
popa
sbb
pop
ss
sbb
popf
insb
mov
dec
inc
es
fidivs
inc
xor
lcall
pusha
sbb
inc
adc
inc
fiadds
inc
lret
dec
aam
cli
jne
lods
jp
jnp
clc
call
lea
pop
xchg
jge
pop
push
jnp
jle
push
inc
pusha
push
jae
sub
jp
inc
or
sbb
negb
jae
mov
push
xor
push
pop
sbb
push
and
jne
dec
sbb
pop
xor
jb
jl
pop
lret
int
loop
filds
push
pop
xchg
lret
jecxz
dec
jae
inc
fldt
pop
xchg
jl
inc
cmpsl
inc
cwtl
xor
into
imul
jne
bound
mov
in
les
inc
mov
addb
and
push
add
pop
inc
stos
xchg
inc
test
and
sbb
shlb
sbb
cmpsb
fisubs
mov
jg
push
push
inc
jge
repz
js
arpl
pushf
imul
push
es
cmp
xor
ljmp
daa
sbb
add
sub
sbb
push
cmp
push
es
and
pop
incl
xorb
sub
std
sbb
jecxz
cmp
mov
add
decl
adc
push
repnz
sbb
rclb
imul
xor
cmp
push
cmp
rcll
test
stc
testl
mov
lds
ds
fistpll
or
lock
pop
in
pop
or
data16
cmp
or
push
ret
or
and
aad
xchg
xchg
aas
inc
dec
pop
add
out
ja
push
dec
dec
inc
je
push
inc
jmp
inc
je
fwait
aaa
fwait
inc
mov
add
push
inc
jb
addr16
pop
stc
dec
jo
insl
inc
pop
inc
jne
add
popa
jns
jbe
dec
jl
dec
jg,pn
inc
inc
fs
adc
imul
xchg
mov
das
pop
daa
add
push
jno
sub
push
dec
les
outsl
or
cmp
cmp
aas
push
push
cmp
arpl
popa
cmovb
push
repnz
push
ja
add
xchg
lcall
or
and
sub
add
mov
lock
out
push
xor
adc
test
add
repz
loope
call
mov
lds
mov
mov
lock
popa
dec
add
mov
insl
cmpsb
pop
pcmpgtb
add
dec
lret
rclb
repnz
out
pushf
out
stc
clc
incl
leave
out
mov
shlb
in
and
push
loop
stos
xchg
adc
stos
into
idivb
shr
in
loope
add
ds
sbb
add
jl
inc
repz
add
xor
mov
popa
dec
fdiv
or
mov
push
sub
loope
ss
pushl
xchg
inc
ss
and
scas
imul
into
jmp
xchg
jmp
add
inc
adc
jmp
imul
sub
into
adc
mov
pop
sub
jbe
inc
repz
out
cmp
pushl
test
xchg
clc
and
fucom
jmp
mov
into
and
mov
pop
clc
xchg
rolb
out
jnp
lret
aas
lods
rcrb
leave
shll
xchg
idiv
mov
xchg
fdivr
xchg
pop
jne
std
xchg
fldl
sub
iret
lret
adc
leave
pop
adc
insl
add
or
cwtl
sub
adc
add
data16
sbb
lods
cmp
add
push
jge
test
or
xor
sub
xor
sub
and
push
sub
das
xor
ljmp
imul
and
mov
pop
push
jge
push
or
gs
dec
xlat
xor
sar
stos
jo
push
outsl
cmp
dec
push
ljmp
or
cmp
fadds
inc
add
shll
push
incl
js
adc
jnp
hlt
imul
and
jmp
arpl
sbb
and
jl
jno
mov
adc
sub
push
pop
roll
push
dec
pop
jecxz
pop
push
inc
push
push
inc
add
insl
dec
not
cmp
fdivrl
add
xchg
fs
loope
add
xor
dec
sarb
or
incl
aaa
fidivrl
lods
lahf
mov
jge
repz
scas
incl
inc
incb
cmp
mov
pusha
push
decw
push
pop
dec
or
adc
pusha
arpl
pop
lret
adc
jb
ud0
mov
cmpsb
into
cmp
es
mov
inc
pop
sbb
js
dec
adc
incl
fcmovu
enter
fnstsw
mov
loopne
call
sbb
pop
outsb
jp
sub
adc
std
sahf
gs
mov
clc
jg
or
xchg
adc
push
rcrl
push
loope
push
shrl
enter
xchg
and
push
aas
outsl
pop
inc
jae
xor
lcall
aam
adc
mov
popa
sbb
andb
mov
test
leave
das
jb
mov
sbb
popf
push
inc
dec
sbb
outsl
add
pop
and
mov
test
icebp
mov
into
mov
mov
call
inc
mov
scas
shll
bound
addl
sbb
nop
mov
adc
test
mov
jb
aas
mov
lods
rcr
fsubr
fdivl
rcl
inc
or
ss
jg
mov
sub
jmp
jae
push
inc
incl
clc
imul
fsincos
adc
call
mov
popa
push
jle
gs
in
std
or
xor
push
pop
mov
loop
push
push
jmp
or
jg
lret
dec
mov
sahf
xchg
jmp
mov
mov
add
movsb
les
jge
pop
push
dec
sti
cs
push
and
dec
mov
arpl
decl
xchg
imul
into
add
js
in
xor
xchg
leave
int3
fnstcw
and
daa
mov
ret
das
sub
sbb
jp
jbe
adc
xor
push
jb
out
mov
ficoml
inc
inc
sbb
ret
pop
sbb
bound
jp
aam
cmp
imul
mov
sbb
das
ja
dec
ss
ss
sbb
fwait
out
call
jno
and
fadds
mov
jns
jmp
cltd
addr16
jns
pop
jmp
pop
inc
es
jp
and
cmp
cmp
pop
inc
je
clc
inc
dec
sub
loop
xor
rorb
sbb
sbb
clc
sbb
ljmp
int
stc
sub
hlt
in
jmp
out
push
psubsw
scas
ret
adc
and
mov
clc
roll
int3
cld
es
arpl
and
ljmp
jg
setbe
sbb
flds
out
jb
sbb
pop
int3
test
decl
adc
in
dec
jp
add
xlat
jo
sbb
add
pop
std
jmp
lret
sbb
inc
dec
shl
idivb
inc
fisttpl
and
xchg
add
ljmp
or
jg
dec
into
ficomps
les
cmp
mov
jmp
jl
xchg
into
lret
cmp
mov
cmp
add
mov
xchg
push
jl
jnp
incl
stos
sub
nop
push
mov
xchg
xchg
jecxz
adcb
jns
decl
roll
cwtl
fistl
sub
jbe
xor
mov
mov
inc
add
sbb
call
sub
stc
add
lds
movsl
imul
cmp
push
std
or
neg
pusha
lds
dec
pop
xchg
xchg
cli
repnz
cmp
sub
adc
adc
inc
xorb
inc
sbb
or
cltd
jg
ficomps
insl
sub
lock
or
and
pop
aaa
out
or
ffree
cmp
xor
scas
cld
pop
stc
testl
xchg
xchg
fdivs
jns
xor
js
call
sub
inc
ss
or
lret
add
aas
imull
xlat
mov
bound
mov
sbb
fiadds
cmp
test
sub
int
int
mov
addr16
incl
pop
das
imul
add
js
sub
xor
fnstsw
icebp
push
sahf
std
aad
icebp
cmp
or
iret
fildl
or
inc
or
xor
in
fcomip
push
cmp
mov
imul
cli
pop
rcrb
and
mov
call
mov
mov
xchg
and
add
xor
ljmp
sub
adc
scas
dec
add
shll
push
fwait
mov
jle
call
pop
cld
and
add
xor
mov
add
jae
inc
adc
jno
cmp
dec
incl
aam
repz
das
cvtpi2ps
mov
sti
adc
call
pop
xor
ja
adc
les
nop
dec
std
mov
jb
sbb
or
sub
push
decl
das
je,pt
addr16
inc
push
aaa
in
iret
cmp
xor
fwait
mov
clc
inc
mov
mov
sbb
lds
movsb
shll
and
sbb
incl
test
pop
mov
negb
out
jle
mov
adc
push
dec
mov
stc
and
imul
cld
adc
push
orb
or
pushl
std
jbe
inc
push
jge
dec
arpl
pop
divl
out
and
incl
inc
dec
cli
into
and
inc
and
add
imul
movsl
fwait
mov
xchg
dec
adc
dec
mulb
adc
mov
and
pop
adc
jmp
inc
imul
in
pushl
jl
lret
fiaddl
xchg
jp
js
gs
out
push
push
into
xlat
cs
jne
iret
pop
jmp
call
in
imul
leave
iret
adc
push
add
sbb
jg
mov
das
enter
sub
fistl
sbb
outsl
fdiv
pushl
xor
mov
mov
movsb
jle
mov
incl
int
pop
lods
pop
icebp
daa
or
mov
outsl
icebp
add
and
scas
lock
stc
iret
push
lret
xchg
jns
ffreep
push
adc
or
sbb
pop
xor
dec
pop
fistps
les
jp
out
das
outsb
push
cmpsb
jo
inc
ss
aas
adc
orb
repnz
sbb
cmp
mov
jbe
pop
cmp
add
jmp
divb
push
dec
mov
je
sbb
in
mov
sbb
jb
and
xor
aad
and
push
or
shrb
or
jle
shr
cmp
incl
jl
repz
loope
das
clc
mov
xor
add
jne
shlb
pushl
lret
dec
fwait
inc
insl
pop
inc
cmp
lock
xor
outsl
js
call
mov
lcall
and
roll
cmp
ret
adc
mov
call
leave
fisubl
cmp
sub
rorb
jmp
inc
inc
xor
add
movsl
mov
clc
jb
decl
aaa
repz
cmp
shll
into
pop
pop
jg
ret
iret
movsb
bound
scas
dec
adc
jmp
pop
push
sbb
or
out
jo
pusha
mov
lds
ss
push
mov
ljmp
jg
inc
adc
push
push
or
adc
mov
popa
pop
pop
std
push
insb
gs
test
push
leave
adc
outsb
jo
and
jge
ljmp
xchg
jne
in
and
push
mov
jge
pop
cmp
cmp
mov
jl
adc
out
cmp
jae
mov
jo
push
fucomip
pop
loopne
gs
lcall
jo
dec
or
aad
pop
insl
jp
sarb
inc
das
js
notb
inc
push
push
pushf
out
fidivs
jg
gs
pop
lcall
xor
cld
lea
int
and
aam
es
push
fucomip
call
jg
fxch
sub
out
jne
inc
and
xor
nop
cmp
xchg
in
jle
push
or
jb
add
fwait
stos
sti
jb
pop
das
fs
call
push
and
adc
loop
ds
clc
inc
scas
outsl
or
jp
enter
jno
xor
leave
out
jmp
int3
leave
jb
insb
fcmovu
adc
push
jo
les
mov
sub
lock
adc
pushl
inc
jl
in
aaa
int
push
push
iret
mov
pop
repz
inc
outsb
or
insb
mov
push
out
les
les
xor
push
jae
jle
sub
out
call
sahf
mov
dec
adc
mov
pushw
cmpsl
pop
loopne
xchg
loope
fsubs
dec
test
sti
pop
add
dec
popa
sub
cli
sub
push
les
xchg
cmp
xchg
pop
aaa
adc
outsl
les
lcall
loopne
repz
mov
out
test
rorb
out
cld
ljmp
rolb
idiv
and
out
sahf
es
dec
sbb
aad
push
mov
jns
test
jnp
out
sub
iret
icebp
sub
scas
fcomip
pushl
imul
fs
icebp
incl
dec
dec
push
cmc
in
jmp
cmpsb
cld
adc
ficoms
sbb
ds
mov
cmc
lret
add
push
jp,pt
rcl
jg
fbld
jae
add
add
fcomps
jg
lea
jno
or
jg
out
inc
notb
mov
add
mov
das
imul
hlt
in
aam
mov
push
ss
sub
repz
es
jp
add
sti
dec
sbb
pop
cmc
movsb
shrb
mov
mov
ds
insl
fwait
in
leave
dec
push
divb
cli
mov
inc
addr16
gs
add
pop
mov
mulb
ljmp
addl
cmp
test
sub
fistpll
bswap
adc
repz
push
add
ss
inc
push
addr16
cmp
mov
into
jb
dec
pop
pop
adc
aam
ds
push
pop
jge
insl
addr16
jl
jnp
hlt
xor
mov
das
dec
data16
inc
ror
adc
jle
cmp
aas
cmp
mov
inc
add
sahf
push
xor
ss
ja
sub
aaa
adc
pop
jl
fmul
insb
push
fcmovnbe
and
cmp
fcompp
hlt
cld
decl
lock
adc
xor
cld
in
sbb
fidivrs
pop
cmc
add
into
std
aam
add
mov
leave
mov
fdivrl
push
std
cmc
stos
add
jmp
popf
adc
in
mov
adc
sar
xor
clc
jl
push
jmp
mov
cld
lcall
or
mov
rorb
jp
cmp
ret
add
sbb
addb
test
mov
mov
mov
in
incl
jecxz
incl
daa
lcall
hlt
ljmp
dec
xor
stos
adc
xchg
jp
jne
lahf
inc
mov
popl
jnp
cmpb
push
cld
ljmp
mov
fnstenv
adc
mov
add
jg
mov
adc
or
add
jp
pop
ss
add
adcb
jp
rcll
fisubs
stos
sbb
sub
lds
xchg
lcall
jmp
std
filds
lret
xor
and
xor
pop
xchg
enter
sub
jg
or
mov
adc
push
rol
and
mov
xor
loopne
mov
mov
lods
ja
pop
sbb
mov
cld
jg
mov
push
xchg
flds
enter
and
cld
pushl
or
jo
add
addr16
adc
pop
cmpsb
imul
fistps
adc
out
jge
jbe
pop
xor
test
sbb
loop
xchg
sbb
xchg
xlat
add
out
test
scas
decb
scas
leave
rol
cld
inc
adc
or
push
incl
pop
push
inc
push
mul
xor
div
sbb
mov
sub
jg
push
jno
inc
jnp
xlat
fildll
xor
out
aad
adc
pop
push
inc
inc
sbb
idiv
out
push
xchg
nop
xchg
leave
pop
fisttpl
in
loope
or
mov
decb
imul
xor
mov
push
or
shlb
rep
sbb
clc
call
and
mov
addr16
adc
decl
sbb
xor
and
into
sti
inc
or
lahf
inc
iret
push
divl
or
ljmp
or
inc
movlps
xor
push
mov
std
ret
ret
jl
lret
outsl
cmp
movsb
out
stc
in
jno
data16
dec
pop
cmp
adc
mov
call
fiaddl
test
aam
jmp
or
fld
out
pop
and
out
cmp
call
cmp
cmp
mov
pop
sahf
jge
jae
pop
jo
insl
or
cld
jmp
shl
cmp
rol
xlat
sbb
jmp
clc
testl
fimuls
lcall
push
adc
dec
adc
push
mov
fisttps
into
cs
clc
add
jg
jle
iret
fnsave
clc
or
dec
out
ss
cmp
sarb
decl
leave
mov
lock
lret
add
outsl
xor
sub
or
insl
call
cmp
out
test
cld
pushf
pop
std
call
sbb
pop
icebp
fdivp
rcl
and
xchg
js
add
repz
fistl
loopne
ja
hlt
push
popf
hlt
into
in
shrl
inc
daa
push
pusha
mov
jno
mov
fsubrs
movsl
xchg
popf
rol
hlt
aaa
stc
mov
fisttps
fdivs
dec
sub
fcomps
or
and
sbb
adc
aad
stc
movsb
adc
decb
decl
outsb
ret
add
in
jmp
add
int3
adc
sbb
lcall
jg
xchg
sub
clc
js
adc
cmp
insb
fs
scas
push
int
lret
or
icebp
loop
es
jmp
or
fs
mov
test
sbb
rol
push
cltd
jmp
xor
pushl
push
xchg
roll
xor
cmp
dec
notb
inc
xchg
shrd
dec
and
cmp
sub
aaa
shrl
cli
jb
add
testl
sbb
and
fisubs
fucom
les
and
mov
enter
cmp
fstl
xchg
add
pop
push
imul
cld
call
ficoms
je
shl
js
repnz
sbb
inc
pop
je
adc
mov
movsb
popa
sbb
aad
and
jae
add
cltd
pop
and
mov
lods
addr16
test
ljmp
pop
xchg
out
std
sbb
dec
aad
push
out
ds
push
popf
dec
or
fnsave
sub
inc
sub
rcll
fwait
or
movsl
push
inc
sub
bound
cmp
incl
stc
dec
jnp,pn
fcom
sbb
pushf
and
loope
pusha
cmp
rclb
xchg
or
jmp
fadds
repnz
pop
xchg
fistl
fs
out
arpl
add
pop
sub
inc
jne
mov
popa
pop
lods
fs
inc
jmp
jg
and
push
jl
mov
or
mov
outsb
pop
push
dec
dec
loop
cmp
xchg
decl
pop
imul
mov
lret
das
loope
rcr
adc
fdiv
ljmp
out
hlt
and
adc
icebp
sahf
add
cmc
js
add
pop
aas
in
mov
jg
les
or
push
mov
mov
jmp
imul
pslld
ds
fnstenv
adcl
dec
cmp
mov
jg
pop
sub
cld
mov
sub
int3
sbb
out
mov
fcomip
mov
int
and
mov
jb
les
jmp
repz
push
sub
cwtl
shlb
cs
push
pop
ds
jg
mov
sti
pusha
roll
sbb
mov
mov
cmp
imul
lods
xchg
sbb
xchg
jmp
mov
incb
cld
mov
sub
sbb
shll
xor
lcall
shr
mov
cmp
mov
sub
dec
mov
mov
pop
incl
mov
xor
aad
mov
imul
pop
sar
lods
icebp
jmp
lea
dec
push
std
sbb
rorl
call
mov
outsb
push
pop
scas
pop
leave
add
daa
dec
mov
jmp
cmp
xchg
adc
dec
int3
and
pop
xlat
adc
int3
pop
in
mov
ljmp
adc
ret
movsl
arpl
jl
pop
adc
cmc
cs
push
ljmp
mov
out
fbld
xor
inc
out
inc
fstps
es
ljmp
xlat
mov
cmp
and
sbb
enter
jb
adc
push
clc
cmp
or
js
push
jl
loope
xor
cmp
mov
dec
pop
mov
shlb
ret
fdivrp
out
and
inc
cmp
cmp
test
jb
nop
call
jle
add
or
dec
jb
adc
ret
inc
movsb
ret
or
in
xchg
inc
add
das
fcmovu
jb
or
mov
scas
mov
sar
decl
in
dec
inc
mov
inc
and
lcall
and
jg
out
xor
sar
mov
push
js
stos
fistpl
lock
mov
xchg
fpatan
mov
pop
sti
cmp
out
decl
and
stos
out
dec
jnp
clc
xor
pop
aaa
clc
mov
and
mov
sarl
call
pop
aaa
insl
jb
or
ret
jge
or
pop
pop
pop
scas
inc
add
sub
jmp
adc
movsl
rcl
gs
sahf
jb
add
cmp
js
gs
sbb
fwait
mov
loope
fbld
mov
pop
mov
jmp
xor
xor
inc
imulb
ljmp
jge
dec
jno
or
adc
push
faddp
cmp
xor
jmp
lret
adc
and
add
sbb
jmp
icebp
jl
rcll
jge
jle
rcr
daa
jmp
cmp
xor
std
cmp
sarb
xchg
dec
orps
jno
inc
lret
ljmp
mov
push
aaa
repnz
in
add
xor
hlt
les
into
push
fistpll
aas
and
out
repz
cs
push
stos
push
rcrl
add
sbb
sarl
xor
int
imul
rorb
fcomps
inc
cmp
lock
cmp
sarl
hlt
sbb
out
add
push
xor
jp
int
add
pushf
into
idivl
cmp
int3
add
adc
rolb
jl
push
mov
les
jmp
sbb
fsincos
pop
mov
mov
repz
fs
ss
pop
sub
inc
xor
lods
les
push
push
fstpl
sbb
shll
xchg
outsb
lahf
inc
fs
jg
insl
add
out
sub
pmaxub
aas
aaa
cmpsb
decl
xchg
int
jl
nop
icebp
sub
cmp
ss
shrl
aas
sar
in
clc
fdivs
mov
popf
sbb
inc
dec
jl
pop
subl
rclb
int3
stos
lods
or
pop
push
mov
sub
incl
xchg
jbe
mov
sub
inc
pusha
fwait
in
ss
pop
xor
pop
xorb
repnz
sahf
inc
mov
jb
xor
loop
decl
sarb
repz
add
mov
jp
ret
aas
int
adc
ljmp
lret
mov
int3
incl
sub
pop
mov
mov
cltd
sub
out
rcrb
jno
push
push
out
adc
adc
xlat
and
inc
gs
xor
mov
xchg
loopne
loope
push
inc
ss
adc
rcrb
sbb
fadd
andl
mov
loope
xchg
das
lock
push
pop
cmp
cld
das
les
add
mov
add
mov
es
dec
loopne
mov
ret
xorb
push
rcr
adc
xchg
add
cs
aaa
inc
and
insl
xlat
pop
xor
clc
fidivrl
fwait
ficomps
test
jge
jecxz
aas
cmp
daa
xor
sbb
pushl
into
adc
adc
ljmp
sbb
cs
mov
orl
cmp
jmp
pop
and
add
insb
xchg
popf
mov
lock
pushl
in
inc
xadd
cmp
xor
arpl
mov
int
push
fstps
cltd
iret
dec
adc
adc
cmp
jg
mov
insl
clc
xor
dec
shll
mov
jnp
out
cmp
loopne
mov
and
cmc
das
pop
sub
stc
adc
jle,pt
sbb
xor
sarl
rcrb
push
sbb
mov
sub
add
jmp
sub
loope
sub
es
negb
ret
cli
push
mov
cmc
rcrb
bsf
jmp
push
add
sarl
push
adc
fadd
in
pop
xor
dec
ljmp
sbb
adc
scas
ret
loop
xor
sub
adc
mov
mov
insb
adc
push
and
test
aas
loope
scas
inc
mov
shrb
mov
xchg
lcall
lcall
or
and
es
jae
push
mulb
or
pop
test
call
jl
cmp
xor
sbb
and
sub
mov
cmc
leave
or
mov
mov
pushf
dec
and
mov
adc
jge
ficomps
inc
insl
dec
push
lahf
xchg
mov
dec
insl
dec
orb
mov
imulb
js
push
divl
jg
fadds
or
cmpsb
or
shlb
mov
mov
push
inc
inc
and
int
add
xchg
lods
mov
rcr
shrb
sti
or
incl
aaa
adc
ds
and
adc
or
pop
cmp
xor
pop
sub
fpatan
or
movsl
fdivrs
aaa
xorb
loopne
ret
jmp
lret
xchg
scas
xchg
adc
push
mov
stc
mov
loope
lock
fwait
adc
aas
mov
xor
gs
decl
mov
push
jl
je
jb
push
das
decb
mov
xchg
mov
fdiv
xor
lret
or
dec
xor
test
addb
lahf
pop
adc
inc
mov
pop
add
xchg
rcll
push
sahf
lds
mov
or
jg
ljmp
push
pop
xlat
pusha
xor
sti
aam
jmp
xchg
ds
adc
aaa
stos
jecxz
std
fld
sbb
in
mov
mov
pushl
dec
sub
push
pop
inc
sbb
gs
decl
mov
add
xor
call
cld
jmp
inc
xchg
cli
add
push
outsb
mov
add
inc
pop
pop
lcall
or
mov
imul
gs
adc
test
es
jae
popa
jae
es
jg
fnstenv
mov
mov
inc
push
push
fsubrs
out
inc
pop
outsl
pop
dec
outsb
dec
insl
data16
das
sub
leave
dec
pop
sbb
ljmp
insl
idiv
xchg
addr16
mov
push
inc
pop
jns
pushf
in
je
popa
mov
mov
bound
jp
lods
push
lret
jo
pop
ljmp
or
cmp
inc
popf
push
push
repz
loope
dec
inc
or
imul
lahf
out
and
pusha
dec
mov
add
xor
lock
lods
negb
call
data16
enter
clc
clc
or
nop
je
pusha
sbb
lock
add
ja
es
mov
decl
pop
lret
xor
roll
adc
jl
ljmp
lret
stos
notb
cmp
and
cmpsl
mov
decl
dec
jo
test
rcrb
in
test
hlt
xor
xor
push
aaa
push
jno
xchg
push
iret
repnz
jle
push
dec
bound
push
nop
dec
push
insl
push
xchg
dec
adc
loope
ljmp
jns
dec
pop
fs
in
fnstcw
mov
scas
sbb
mov
faddl
inc
cmp
ja
aad
push
push
and
imul
sbbb
mov
pushf
inc
mov
cs
push
jp
sbb
in
jecxz
and
movsl
fisttpll
or
stc
xor
cltd
enter
ffree
pop
mov
mov
stos
incl
fisubl
lods
sbb
insb
push
mulb
jg
test
icebp
xchg
rcrl
daa
jg
repnz
mov
dec
cld
dec
inc
push
mov
dec
xchg
iret
outsl
imul
push
inc
dec
cmpsb
adc
aad
pusha
aas
rorl
jbe
jb
std
test
out
add
daa
or
adc
int
dec
dec
hlt
jnp
pop
pop
sti
cmp
push
in
sub
stos
test
insb
cld
decl
jbe
pusha
sub
cmc
repnz
add
pop
pop
int
and
stos
cmc
inc
xchg
cmp
inc
iret
cmp
or
daa
jmp
xchg
lods
stos
sbb
lock
jmp
inc
cmp
inc
insl
xor
or
dec
xor
mov
jmp
pop
sbb
pop
outsl
pusha
jbe
pop
sub
xchg
int3
aas
push
push
in
call
inc
pushl
lds
pop
idivb
insb
pop
mov
push
inc
pop
icebp
add
gs
pop
icebp
stos
out
xchg
cmc
lahf
pop
adc
inc
push
mov
mov
jo
pop
dec
inc
xchg
lret
out
int3
jmp
decl
inc
dec
out
dec
fs
jle
mov
lods
out
push
add
insb
in
test
out
notl
push
lcall
ljmp
rcrl
pop
subl
aaa
std
iret
outsl
push
jge
jge
gs
pop
pop
push
lds
je
inc
add
repz
jge
js
jmp
add
cli
aam
imul
fiadds
xor
ljmp
cli
ret
pop
fcoml
dec
jnp
lods
mov
clc
incl
inc
outsl
and
imul
fmuls
push
jne
jb
es
ret
jecxz
push
add
aaa
mov
iret
push
lahf
mov
fwait
sub
ljmp
lret
jo
mov
rorb
jb
enter
mov
inc
add
jmp
add
jge
ljmp
incb
pusha
sub
in
pop
ljmp
add
pop
and
push
add
ljmp
mov
rol
pop
aaa
cmpsl
stc
iret
ret
sarb
push
paddusw
and
cs
les
sbb
sar
decl
out
mov
pop
pop
inc
sbb
pop
fimuls
loop
add
pop
repz
mov
pop
adc
dec
pushw
add
jmp
and
iret
mov
jl
sbb
call
aas
ds
in
cmp
pop
jge
shl
sbb
cmp
mov
test
fdivs
out
and
inc
cltd
sub
gs
pop
hlt
inc
pushl
stc
cmp
loop
add
ljmp
add
and
movsb
mov
stc
inc
es
xor
pusha
pop
xchg
ret
jmp
out
imul
push
rcl
fldl
sahf
push
mulb
add
pop
cmc
cld
out
pop
sbb
rcrb
sti
push
cmc
add
adc
iret
das
in
in
adc
test
jno
lea
jl
mov
pop
scas
mov
rcrb
int3
ds
fistps
mov
sbbb
ljmp
in
and
inc
negl
ret
ja
scas
pushf
push
pop
inc
repz
aaa
lcall
outsb
push
adc
push
sahf
mov
or
add
mov
lret
rol
iret
sub
sbb
xor
nop
daa
std
dec
and
aas
sar
add
fidivrs
testl
out
lea
pop
test
insl
sub
pop
stos
loopne
xchg
push
xchg
out
jbe
push
mov
add
testb
incl
xchg
iret
iret
and
ss
dec
out
pop
icebp
aaa
push
call
das
es
mov
fildll
and
or
xchg
pushl
adc
aaa
out
andb
mov
orb
pop
cmp
adc
xchg
mov
scas
mov
arpl
mov
push
and
loope,pn
rcll
adc
ljmp
pop
and
lahf
lock
out
ljmp
mov
stos
mov
sahf
pop
ret
cli
dec
add
popf
imul
pop
mov
dec
ret
es
xor
xchg
notl
mov
and
mov
xor
and
es
jg
ja
mov
std
movb
mov
pop
add
js
pop
incl
cmpsl
push
mov
es
sub
loop
cmp
or
jecxz
scas
xchg
pop
aaa
push
xchg
xor
sub
push
xchg
loope
add
mov
ljmp
xor
bswap
mov
push
rep
adc
loop
jmp
insb
lock
and
in
add
lods
jle
sarb
add
push
mov
cmp
xor
push
add
lret
and
ljmp
mov
push
mov
dec
ljmp
xor
xor
test
test
fildl
decl
jg
lock
xor
mov
testl
lds
out
sub
add
enter
out
cmp
incl
mov
clc
or
dec
sarl
lods
jae
adc
pop
decl
testb
mov
sbb
adc
lcall
lds
enter
rclb
cmp
ljmp
adc
and
pusha
jmp
cmp
xchg
xor
decl
push
mov
mov
in
inc
loopne
pop
fildl
into
sti
xchg
sub
mov
push
pop
fwait
xor
das
dec
cmpsw
into
cmp
rcrb
or
es
xchg
pushl
fsub
jmp
sub
arpl
jo
ss
fisttps
cld
sub
push
rorl
daa
and
lret
icebp
fidivs
jae
mov
or
push
into
fidivs
add
cwtl
sar
mov
pop
sub
lret
shl
stc
jmp
push
sarb
addr16
hlt
repz
sub
popa
rcl
mov
aad
inc
and
lds
jg
mov
sbb
jmp
leave
leave
inc
popa
fistl
add
in
pop
out
adc
iret
gs
jnp
and
mov
sbb
pop
jl
fadds
xor
sti
or
cs
lock
aam
and
repnz
decl
xchg
das
dec
pop
ret
dec
adc
and
mov
ljmp
pop
pop
xlat
adc
sub
lahf
jle
or
adc
mov
cmc
xchg
pop
add
outsl
and
cmp
popf
jae
or
adc
das
fst
movsl
pop
push
sbb
xor
add
pop
sbb
lcall
dec
xor
cli
call
cmpsb
xor
and
pop
stc
mov
xchg
push
jae
in
testb
gs
push
clc
jae
lods
jnp
push
jb
xchg
insl
dec
fldl
sbb
lcall
xor
mov
inc
push
stos
mov
cmpsb
mov
xor
shll
push
loop
push
mov
popa
adc
push
out
mov
dec
rolb
cs
out
xchg
cli
xor
and
sti
mov
rclb
xchg
or
dec
in
dec
push
dec
stc
xlat
jns
sbb
push
push
notl
js
sbb
adc
or
mov
ljmp
push
xor
aaa
xchg
jnp
dec
adc
sbb
ficomps
jo
stos
hlt
mov
cs
cs
xor
mov
mov
pushl
pop
cld
mov
sbb
int
adc
das
lahf
std
loopne
sar
jno
insl
sbb
sahf
jecxz
in
pop
cld
filds
mov
jp
push
lods
test
pop
jns
sub
push
movsl
out
shlb
ret
mov
add
fstps
or
xchg
pop
dec
add
pop
enter
cltd
movsl
mov
test
dec
call
loop
xor
mov
dec
and
filds
addl
dec
xor
out
and
pop
fisttpl
pop
in
adc
js
inc
cs
mov
clc
sbbb
adc
adc
or
test
cld
sbb
icebp
xor
ja
add
add
imul
xlat
adc
jecxz
mov
pushl
mov
sbb
aad
jb
movb
push
sbb
inc
sti
stos
add
es
cmc
sbb
adc
cld
lcall
aam
aam
xchg
int
or
cmpsl
or
inc
loopne
inc
jle
daa
add
out
daa
shl
inc
adc
icebp
mov
ror
or
lock
loope
or
add
lock
pop
outsb
les
popf
jbe
fucomp
outsl
arpl
icebp
fisttpl
push
insb
movsl
xor
push
mov
out
ja
movsw
lret
rorl
jle
ds
inc
das
dec
jl
test
repnz
xor
sarl
push
or
lock
xor
push
sub
xchg
jmp
xor
add
push
cli
jg
pop
sahf
cs
iret
addb
mov
std
aas
jecxz
test
out
pop
push
jge
or
ret
sbb
dec
dec
push
call
test
mov
sub
mov
and
out
jl
cmp
addr16
xor
cli
push
xor
jp
inc
lock
ds
lds
add
push
aaa
xchg
divb
dec
jns
into
loope
sarl
mov
dec
es
dec
pop
call
dec
or
loopne
jmp
jo
adc
jno
les
cmp
pop
cld
xchg
cli
pop
je
sbb
push
mov
inc
hlt
adc
call
or
inc
aas
orb
cmc
loopne
lods
scas
mov
data16
sbb
cmpl
jo
jp
test
jmp
setbe
daa
push
pushl
mov
cmp
js
clc
sti
cmp
ljmp
dec
and
mov
add
inc
add
pop
sbb
push
dec
xor
aas
push
mov
mov
pop
add
xor
add
fisubrs
leave
add
cs
movsb
ja
clc
xor
xor
lods
int3
mov
mov
movsb
call
call
sbb
ss
xbegin
loopne
jns
cld
movb
lahf
scas
mov
adc
dec
jg
cmp
adc
push
or
add
xchg
or
incl
cmovl
sub
pop
sub
cld
pop
das
std
lret
out
movl
loopne
ljmp
xor
or
js
push
pop
push
mov
out
cld
dec
sub
ss
in
fstl
das
insb
cmp
cmp
call
imulb
ja
ja
dec
xor
ret
mov
mov
das
inc
adc
lock
sarl
nop
das
jo
jns
push
insb
test
lock
inc
or
fcoml
fisttps
jl
aam
and
xchg
cmpsb
and
inc
sbbb
add
pop
insl
push
out
enter
iret
int3
gs
dec
call
push
pop
pop
popa
fiadds
xor
add
or
and
xor
add
jle
outsb
fidivs
mov
or
lds
adc
pop
mov
idiv
adc
add
mov
mov
lock
lcall
sub
add
rep
mov
xchg
xchg
ror
stos
fs
inc
or
std
adc
fs
enter
or
add
or
ret
xchg
scas
incb
fistps
aad
push
or
icebp
xorb
movb
decl
clc
mov
int
inc
pop
addr16
jae
sbb
jg
decl
xor
xchg
jns
ret
xchg
add
inc
pop
cmp
add
int3
jle
pop
lods
xor
in
jbe
pusha
sub
les
pop
jg
enter
iret
rorb
shll
call
pop
pop
into
jge
mov
push
xor
popf
lods
into
movsl
sahf
pop
adc
cmp
push
or
gs
test
decl
xchg
dec
push
fldlg2
mov
out
fidivs
sub
decl
test
push
mov
xchg
iret
pop
mov
pop
or
lds
or
test
add
jbe
jo
jg
pop
or
mov
pop
sbb
jbe
jg
cld
fildll
je
das
xor
call
lods
shrb
jle
std
push
adc
pusha
rdmsr
scas
sti
adc
ja
jg
dec
pop
cmpsb
mov
loop
das
and
xor
adc
scas
clc
int
pop
int
ret
pop
repz
add
sub
inc
ficomps
out
in
adc
and
jp
aam
xor
data16
lret
adc
hlt
pop
xchg
adc
imul
mov
ds
push
mov
xchg
cmc
data16
not
ljmp
push
pop
jle
jnp
adc
push
loopne
dec
push
adc
cmp
cmp
test
in
repnz
iret
sub
loop
sub
dec
cmpsb
jns
data16
xor
sahf
cmp
pop
mov
jmp
test
les
mov
pop
insb
divb
jns
xor
pop
push
ja
insl
ljmp
insb
mov
inc
pushf
dec
ss
fdivr
or
or
inc
dec
or
sar
xchg
and
in
mov
mov
lret
fdivrp
mov
inc
sub
and
sbb
adc
shl
incl
and
jne
add
xor
push
xchg
into
jmp
enter
aaa
push
push
enter
pushl
js
jl
pusha
inc
insl
push
jne
leave
sbb
ljmp
sub
xor
jp
aad
incl
jne
jg
je
jo
jl
fcmovu
clc
fistl
xor
leave
dec
mov
pop
adc
icebp
mov
lods
outsb
cs
divb
int
xchg
lret
push
mov
push
in
xor
pop
in
ss
rorb
scas
add
sub
pop
jle
std
fucomp
idivl
lock
loope
add
in
fs
sbb
clc
mov
lcall
sub
stos
repnz
test
push
in
xchg
lds
outsb
shl
adcl
call
jl
fists
jnp
stc
and
sbb
xchg
dec
in
push
cld
hlt
leave
les
pushl
rcrb
test
fisubrl
shl
push
in
push
insb
dec
call
hlt
decl
scas
cli
cld
insl
add
call
dec
lret
cld
adc
xchg
pop
clc
in
ret
shll
pushl
push
cli
push
lock
outsl
outsl
arpl
xchg
rclb
push
mov
rcrl
push
inc
jl
pop
pushf
loop
push
inc
dec
clc
pop
xchg
mov
jbe
xchg
jge
push
loop
test
mov
out
sub
ror
cmc
sbb
lret
int3
das
test
jg
in
nop
sbb
sbb
faddl
and
js
or
xor
jl
test
pop
js
jmp
jbe
and
in
ljmp
or
loop
je
and
addr16
outsl
lret
mov
push
loope
sahf
cmp
jg
outsb
cmp
jg
push
pop
rcrl
xchg
add
cli
popf
adc
mov
decl
mov
imul
js
outsb
inc
jo
das
sub
ret
test
mov
pop
inc
jo
lock
daa
cli
dec
dec
imul
pop
mov
dec
es
das
adc
cld
dec
jns
nop
ret
inc
out
pop
or
popa
xchg
add
int
sbb
stos
test
xlat
daa
and
jmp
mov
push
adc
xor
jge
push
scas
xchg
decb
mov
scas
hlt
sti
jg
inc
inc
fistpll
push
incl
mov
mov
repz
rcrb
cmpsb
loopne
ljmp
push
sqrtps
jb
out
mov
sarl
aaa
push
sub
aaa
mov
xchg
ljmp
fidivl
bound
dec
jo
sbb
xor
inc
std
xor
cmp
xchg
adc
pop
xor
int
ljmp
sub
sub
push
aam
bound
out
inc
dec
pusha
dec
out
rcrb
pushl
insl
xor
add
xor
mov
mov
pop
push
add
subb
adc
hlt
mov
arpl
adc
into
insl
ljmp
add
cmp
js
bound
pop
je
push
push
jns
ss
pushl
jle
cmp
jnp
sbb
adc
adc
and
arpl
pop
and
rcrl
jle
add
pop
cmp
xor
and
faddl
aad
das
cs
fwait
mov
and
mov
icebp
dec
ja
push
xchg
roll
push
push
push
test
jg
inc
fs
insb
out
mov
jns
xor
orl
mov
push
popa
insl
insb
enter
je
lock
lcall
jb
and
pop
pop
push
pop
roll
mov
ret
jo
xchg
cmc
xchg
adc
push
push
into
jl
xor
popl
je
inc
cs
or
int
and
enter
push
adc
fisttpl
out
xchg
jp
loope
ss
push
push
mov
outsl
ret
push
inc
outsb
orl
jl
mov
mov
out
iret
bound
inc
bound
xchg
rolb
aaa
or
mov
pusha
pushf
and
movsb
in
inc
decl
pop
xchg
xchg
ja
ficomps
mov
aas
adc
out
outsl
icebp
mov
add
shrb
into
mov
cld
in
jnp
int
loope
sbb
das
inc
rclb
xchg
sub
outsl
dec
dec
loop
xchg
pop
das
adc
in
repz
ljmp
daa
sbb
jecxz
insl
pop
mov
clc
push
xchg
into
ss
decl
enter
movsl
out
push
mov
nop
mov
shll
mov
mov
sub
fidivrl
lock
insb
repnz
fildll
loop
out
icebp
add
in
sub
xor
ffreep
fiadds
ret
jae
inc
jg
je
loop
mov
es
jb
dec
push
lock
mov
ss
fdivr
out
les
mov
cli
sub
jle
xlat
jg
mov
mov
jae
jle
mov
cmp
aas
into
or
rorl
mov
arpl
mov
adc
jp
push
addr16
jns
xor
cvtpi2ps
cmp
jmp
adc
sbb
ficompl
push
lock
pop
sbb
mov
xor
jg
mov
cmpsb
jg
sahf
inc
add
mov
push
loop
testb
mov
mov
ret
push
gs
cli
cmc
cmp
adc
inc
das
fimuls
ficompl
mov
xchg
mov
dec
inc
xor
dec
inc
and
shlb
mov
add
sbb
pop
pop
loopne
out
inc
imul
out
jg
sbb
into
insb
inc
or
cmp
pop
sahf
and
jmp
cmpb
pop
adc
mov
push
xor
insl
dec
add
insl
adc
jne
jg
rcrb
rcrb
stc
shl
jnp
cltd
fcmovu
jmp
push
testb
jecxz
pop
cld
insl
cmpsw
lock
or
imul
pop
xorb
cld
mov
popa
push
test
in
leave
lahf
push
idiv
inc
lcall
scas
dec
das
rorl
lock
rcr
push
dec
push
pop
std
xor
pop
add
sbb
aas
clc
xchg
fadd
pop
cld
in
xchg
stc
icebp
fidivl
leave
and
mov
loop
insl
int
mov
add
mov
movsb
leave
push
pushl
jg
dec
lds
fdivr
stc
je
lret
lret
push
push
sub
xchg
jge
repz
mov
lret
mulb
pop
add
movl
pop
insl
jo
xor
icebp
sub
mov
out
fsts
sbbl
adc
adc
add
sbb
insb
pop
fadds
mov
sar
xor
add
cli
fdivp
xor
cwtl
ss
mov
outsl
jecxz
cltd
add
push
or
fdivrp
push
imul
insb
filds
aaa
adc
fwait
jne
sar
loopne
out
pop
and
xchg
ja
ja
cmp
mov
push
pop
pop
or
addr16
mov
cli
lcall
pop
or
scas
mov
xchg
dec
mov
stos
lock
sbb
out
insl
in
outsb
movsb
bound
inc
clc
iret
push
fiadds
mov
lret
unpckhps
outsl
into
incb
out
clc
jp
mov
pusha
repnz
repz
loope
pop
aam
movsb
aad
fdivs
enter
jg
incl
pop
dec
cli
mov
jbe
mov
mov
mov
hlt
aas
fcoms
jecxz
sub
sbb
mov
je
jo
cwtl
xchg
ret
hlt
mov
cwtl
std
mull
sti
gs
or
xchg
and
ss
add
movd
cmp
sub
mov
mov
fdivrs
sbb
gs
retw
inc
ror
and
iret
cli
dec
jae
jmp
and
ret
leave
jo
push
loope
jg
mov
shlb
clc
outsl
xor
fists
sub
lcall
pop
cld
xchg
mov
test
das
pop
dec
adc
out
fldenv
mov
adc
or
dec
lret
aad
mov
lods
sub
fcmovnb
fdivs
mov
adc
ds
lret
mov
dec
clc
pop
call
faddp
dec
int
stos
aad
mov
mov
fdivl
roll
or
rorb
jbe
sub
out
fsub
pop
mov
xchg
aas
cld
mov
addr16
out
inc
dec
ret
sbb
inc
pop
cs
out
incl
pop
cmp
lds
jae
lds
xlat
fnstcw
xor
call
loopne
test
cmpsb
pop
sti
push
adc
into
out
or
popf
jecxz
and
mov
decl
into
repz
and
sarb
clc
mov
push
int
fcoms
mov
pop
xor
stc
mov
clc
and
pop
jmp
rcl
pusha
testb
faddl
loope
lods
fnstcw
or
sub
lcall
call
dec
fidivl
loopne
cld
fidivl
test
adc
and
aam
push
mov
lock
fucomip
jmp
hlt
lahf
comiss
std
je
fdivrl
hlt
lret
ror
adc
stos
mov
cld
incl
out
out
out
in
mov
int
fldt
sub
inc
and
push
out
and
mov
cld
call
adc
inc
int
push
mov
movsl
call
aas
sbb
add
int
push
pop
mov
and
lret
lds
aam
xlat
shr
or
add
mov
cmpsl
pushf
push
fsts
stc
aaa
add
into
ljmp
ret
mov
cmp
push
testb
out
adc
ljmp
ds
xchg
leave
fidivl
pushl
or
shll
in
xor
sub
lock
ljmp
ljmp
add
dec
shlb
mov
jmp
sbb
movsb
clc
xchg
out
cmp
ljmp
icebp
ljmp
xchg
shrb
mov
into
or
jmp
sub
and
lret
sbb
movsl
ret
xor
fdivrp
call
xchg
outsl
push
aad
xchg
clc
cmp
faddp
das
scas
dec
call
lret
mov
jnp
subl
in
pop
incl
pop
add
fistl
enter
in
mov
lods
or
fcom
xchg
pop
inc
iret
adc
loope
jae
cmp
shll
enter
mov
std
shr
mov
mov
out
push
stc
ret
sub
icebp
jo
mov
hlt
incl
jmp
xor
adcb
sbb
das
xor
dec
push
and
and
ljmp
mov
jl
add
repz
pop
jg
in
cli
pop
pop
in
shll
pop
sub
out
mov
inc
jmp
out
movsb
push
jl
adc
ljmp
jmp
inc
add
fnsave
fbstp
shlb
bound
adc
jmp
enter
lret
ja
adc
mov
flds
sbb
jb
clc
or
mov
ret
ljmp
repz
jns
jg
insl
fsubrs
ret
movsl
adc
int3
push
xchg
es
jl
xor
jp
stos
push
decl
xchg
stc
xchg
addr16
loop
outsb
pushl
imul
loopne
hlt
loopne
jge
repz
lcall
push
push
push
in
mov
frstor
inc
mov
pop
cld
mov
dec
outsb
fucomp
jns
xor
rcrb
inc
jge
pop
insb
fdivrp
xchg
jno
lds
bound
cs
repnz
xchg
into
add
jno
inc
push
dec
das
dec
dec
jg
add
ficoms
ss
xor
aam
mov
stos
loop
arpl
clc
aaa
mov
loopne
fnsave
mov
lret
movsb
divb
out
lcall
loopne
cmc
push
mov
push
lcall
jb
ficomps
lcall
leave
jmp
push
into
xchg
popa
fdiv
push
shrl
jne
pop
out
inc
icebp
repnz
jg
out
nop
in
scas
lock
bound
repz
xchg
clc
test
push
scas
fimull
rcrl
in
add
rorl
xchg
sbb
pop
xchg
call
adc
test
incl
jge
dec
int3
into
pop
loope
jecxz
addr16
into
lahf
in
inc
inc
repnz
je
int
add
stc
inc
xchg
dec
ss
fistps
jmp
shl
and
sub
jb
les
xchg
movsb
es
pinsrw
mov
lcall
adc
mov
icebp
pop
xor
mov
inc
dec
fmul
jae
or
push
sti
jbe
jge
fistpl
push
fisttps
adcl
lcall
push
roll
cmp
fdivs
fimull
in
popa
mov
pop
xor
mov
stos
in
mov
or
mov
cmp
xchg
jl
jne
in
imul
pop
jmp
iret
cmc
mov
dec
jo
loope
cmp
call
xchg
gs
shrb
jecxz
bound
add
jb
dec
fisttpl
push
mov
dec
int3
aad
test
call
xchg
in
or
insb
xchg
dec
fsubl
cli
lds
rorb
std
inc
jbe
fildll
movl
add
jg
or
dec
shl
inc
hlt
pop
rcll
inc
out
movsb
jge
rcrl
adc
push
cltd
and
xor
inc
ja
lcall
fcmovu
rcll
xorb
inc
add
mov
or
incl
in
lret
repz
mov
shlb
sti
int3
adc
hlt
cmp
push
into
call
add
out
push
xchg
aam
aaa
loope
add
movsb
shll
loope
push
lahf
mov
decl
and
xchg
mov
or
mov
fistl
xor
ljmp
pop
imulb
add
adc
aad
cmp
push
stc
xor
iret
aaa
or
push
sahf
aam
sub
mov
imul
call
xor
in
jg
fmuls
xor
xchg
adc
cmpsl
mov
pop
xor
mov
test
jg
add
push
inc
mov
fdiv
lret
or
in
jb
rcrb
clc
test
incl
aas
loop
jge
dec
das
iret
fsubrl
out
sbb
pop
shll
cld
shrb
jecxz
sub
cmp
ljmp
xchg
in
adc
clc
fstpl
xchg
out
jecxz
cmp
jg
mov
adc
leave
dec
adc
mov
or
fcomip
iret
cmp
scas
sub
sahf
xor
popa
pop
lret
and
test
ljmp
lret
push
inc
pop
loopne
cli
sbb
ds
cltd
insl
ljmp
xor
jmp
mov
popa
pop
xor
sti
das
ret
sbb
mov
add
outsl
jnp
ss
orb
fsubrl
mov
call
mov
dec
xchg
sub
jb
xchg
jge
or
sbb
or
int
or
stos
or
test
lcall
sub
es
mov
dec
and
and
scas
clc
xchg
push
mov
mov
add
ret
inc
in
add
jg
sarl
hlt
sub
fsubrp
xchg
hlt
add
mov
jecxz
pop
out
mov
cld
add
repz
sbb
add
mov
pop
call
push
jle
jno
mov
daa
or
dec
cli
lcall
push
or
push
sti
imul
pop
test
add
mov
jbe
nop
sub
mov
add
es
mov
mov
inc
cmp
dec
cli
push
sbb
hlt
ljmp
outsb
xlat
sbb
roll
int
in
mov
cs
incb
jmp
js
mov
mov
sti
insb
in
stos
pushl
fdivrs
nop
insl
nop
cmpsl
xor
pop
mov
inc
in
add
leave
dec
or
xlat
movsl
fwait
dec
outsl
mov
fisubs
xchg
xor
hlt
movsb
dec
pop
int3
xor
enter
incl
shr
jp
mov
fidivs
sub
and
enter
jle
out
call
lcall
insl
mov
in
outsl
fsubrs
and
and
movlps
jno
leave
clc
mov
imul
sbb
mov
nop
sub
mov
mov
jbe
inc
and
lret
jecxz
xchg
rorl
aaa
dec
dec
lods
push
mov
xor
in
andb
ret
mov
mov
jmp
jns
clc
xchg
shlb
or
push
xchg
popa
inc
xchg
inc
xor
je
hlt
mov
push
mov
cmp
push
stc
jle
loopne
clc
fwait
mov
dec
adc
lret
xor
cmpsl
push
decl
shrl
sub
stos
dec
lock
xchg
fnsave
in
sarl
out
ljmp
jno
imul
loope
and
fidivl
push
cmp
stos
jmp
push
insb
mov
cs
mov
test
mov
test
movsb
push
std
decl
jmp
ret
adc
leave
and
fmull
xor
out
cmp
mov
add
jmp
jne
mov
mov
mov
sub
fdivrl
push
inc
sar
mov
dec
movsl
ljmp
dec
lods
pop
xchg
mov
xor
lds
fs
cs
mov
push
outsb
arpl
mov
adc
jg
rcll
stc
mov
testl
xor
mov
pushl
fdiv
and
sub
pop
in
sub
xchg
cli
shrb
hlt
filds
in
cmp
inc
mov
fsubs
decb
ss
push
divb
daa
aaa
or
dec
dec
xchg
fidivs
adc
leave
push
fs
adc
mov
jnp
sub
dec
mov
incl
gs
in
rcr
cmp
sub
lods
jg
pop
mov
hlt
mov
xor
fildll
add
iret
repnz
mov
push
call
out
pop
and
mov
ss
iret
xchg
push
cmpsl
fiaddl
mov
sbb
int
xor
bound
dec
jae
xchg
je
inc
push
ret
orl
outsl
mov
idivb
cs
loop
jmp
xchg
decl
jl
loop
mov
mov
xchg
cmp
popa
fsts
adc
fstpl
mov
jmp
cli
rcrb
lds
imul
incl
out
xlat
xor
xor
mov
mov
cmp
and
dec
scas
out
stos
jg
test
out
call
divl
sub
adc
or
jle
sti
xor
xchg
push
roll
fdiv
or
sbb
aaa
fwait
jo
jbe
or
icebp
jg
push
cwtl
out
push
test
loopne
push
inc
enter
inc
leave
and
call
and
sub
mov
mov
adc
push
or
add
pop
in
xchg
outsl
push
sbb
negl
pushl
js
mov
mov
stc
je
enter
inc
xor
rcrl
mov
fldcw
incl
pushf
std
popl
mov
and
stos
dec
addr16
push
add
cli
imul
xchg
movsl
inc
sbb
test
lock
idiv
mov
inc
push
xchg
xchg
pop
cmp
pop
repnz
stos
fstps
adc
int3
pop
pop
iret
sub
cmpsl
cwtl
push
das
push
repnz
movsl
enter
push
cmc
enter
mov
and
push
ret
add
cld
data16
imul
sbb
icebp
jmp
call
mov
mov
nop
adc
into
pop
dec
lds
pop
fwait
imul
jmp
sti
lods
lret
lock
enter
xchg
pop
xchg
jg
and
adc
push
push
std
push
mov
fldenv
and
out
push
or
stc
int
cs
in
iret
outsl
and
decb
jmp
sti
mov
decl
and
xor
decl
xchg
jmp
and
les
leave
das
jne
jp
pop
lret
std
ljmp
lret
lret
mov
sub
mov
xchg
sub
push
enter
pushf
jg
movsb
subl
imul
sti
push
xchg
dec
push
outsl
sahf
inc
jbe
stc
movsl
jmp
inc
aad
test
sbb
jb
fbld
pop
dec
pop
lods
scas
popa
int3
mov
lcall
xchg
jg
xor
arpl
xor
stos
push
stos
in
adc
aam
shrl
add
or
shll
and
in
iret
std
dec
or
add
jp
lretw
test
mov
in
outsb
push
dec
mov
es
push
ljmp
flds
push
lahf
aad
adc
imul
jmp
adc
nop
repz
xor
sti
pop
mov
inc
jle
mov
ss
in
icebp
fwait
int
aad
and
mov
and
dec
lods
out
in
mov
cmp
or
mov
test
sub
idivb
jbe
fldz
cwtl
pop
jne
fs
sahf
lret
sbb
add
notb
jb
je
sbb
data16
in
pop
nop
lock
pop
lcall
pop
ljmp
add
add
mov
or
mov
jmp
mov
inc
inc
jmp
seta
nop
and
mov
or
dec
es
pop
outsb
xor
enter
pop
jp
lea
fdivp
xor
xor
fbstp
pushf
jbe
ret
mov
or
or
push
pop
adc
jecxz
and
dec
inc
hlt
add
incb
popa
mov
nop
rcrb
stos
idivb
into
arpl
mov
add
enter
cmc
pop
hlt
clc
pop
cmp
cmpsb
repz
je
call
jle
pop
enter
in
xor
mov
fmuls
pop
pushf
adc
mov
repz
add
fldt
mov
jl
rcll
mov
push
add
mov
add
jg
push
cmpl
and
popa
fisttpl
mov
push
lahf
jmp
add
jbe
mov
les
xchg
sbb
ljmp
ljmp
imul
add
movsl
daa
ret
popf
push
ret
out
jno
mov
and
sbb
es
bound
sbb
in
jae
push
std
jmp
cmp
pushf
pop
test
push
push
fxch
lcall
loopne
cld
fistps
out
stos
aam
lret
cld
into
and
cmpl
into
ljmp
outsb
enter
mov
mov
das
hlt
outsl
jnp
push
cmp
lcall
ljmp
mov
mulb
repz
add
icebp
pop
clc
mov
xor
jae
mov
add
sbb
xchg
bound
pop
and
les
jmp
stc
cmp
mov
or
int
popf
lock
pop
add
roll
mov
adc
test
aaa
and
prefetch
ss
jns
add
into
gs
jbe
xchg
adc
and
xor
mov
fdivrs
loop
mov
cld
mov
push
and
xchg
mov
cmp
push
xchg
push
dec
mov
dec
fdivrp
popf
in
cs
int3
fcoml
cld
jmp
mov
orb
arpl
mov
add
test
repnz
scas
fdivrs
mov
xchg
pop
xchg
ficompl
sub
in
stc
mov
add
cwtl
pop
fcompl
in
nop
cli
xlat
clc
dec
dec
sub
aad
xchg
aam
add
outsb
xchg
out
jg
movsb
fsubl
test
hlt
aaa
in
jecxz
mov
sbb
outsl
mov
or
out
adc
sbb
stc
sar
push
iret
inc
jmp
jae
push
outsl
mov
pushl
push
jl
hlt
lret
in
pop
stc
mov
lods
adc
xor
xchg
pop
jecxz
push
popf
out
cltd
mov
jp
add
test
sub
insl
cmpsb
jns
loopne
leave
movsb
sarl
and
clc
and
test
insl
sbb
push
stc
xor
ret
stc
jnp
out
mov
lahf
pop
hlt
add
mov
adc
mov
enter
fstp
mov
pushl
aaa
lds
into
pushf
xchg
loop
xor
out
inc
jle
ljmp
test
sub
stos
insb
mov
xchg
jbe
lcall
xchg
rcll
call
sbb
push
lret
mov
sub
mov
dec
loopne
and
fs
inc
push
adc
rcrb
pop
push
out
mov
xchg
dec
push
mov
fcompl
mulb
xor
pushf
in
mov
pop
cmp
call
stos
jno
shrl
cli
push
cmc
incl
gs
data16
cmp
and
jl
push
sub
jns
sar
lods
add
xchg
push
inc
fidivl
jecxz
outsb
jle
stos
cld
out
stc
out
mov
mov
jecxz
dec
sub
xor
jo
fistps
mov
mov
cmp
push
int
repnz
repz
xchg
mov
lods
and
add
icebp
aaa
add
or
mov
lock
xchg
pushl
cld
ja
xchg
ret
rcl
pop
ficoms
pop
clc
mov
mov
sub
xlat
loopne
inc
dec
popa
ljmp
and
and
inc
jne
sbb
into
inc
inc
mov
adc
mov
sti
aam
dec
pop
ficoms
mov
xlat
and
cmpsb
ret
lods
jmp
insb
mov
push
adc
jmp
push
std
test
mov
std
and
push
pusha
aad
mov
xchg
ss
jo
dec
rcr
pop
arpl
iret
jo
adc
or
stos
jg
cmpsb
inc
fistpll
out
cli
push
ja
lock
xor
out
fdivr
ja
dec
insb
out
cmp
ljmp
sbb
jg
mov
shrb
loopne
into
mov
in
loop
ljmp
jge
loop
test
mov
loopne
mov
inc
add
mov
ljmp
dec
aam
sub
jno
mov
sub
clc
mov
stc
pushw
fisttps
mov
sarb
inc
fsubrs
lahf
loopne
enter
pushl
fsubr
push
sub
ret
addl
sub
mov
jecxz
ds
pop
dec
aam
stc
jo
aas
test
lock
js
jns
rcrl
fistpll
xor
mov
sbb
push
cmpb
dec
std
iret
push
sbb
addr16
jle
ljmp
add
xor
jmp
sbb
pop
lret
out
sbb
xchg
fcompl
clc
sub
out
dec
mov
inc
fisttps
ljmp
adc
arpl
sbb
andl
mov
lds
fcomi
es
push
call
nop
roll
int3
aad
movzbl
hlt
ds
mov
ret
xchg
arpl
leave
or
sbb
pushl
sbb
imul
mov
lret
xchg
roll
xlat
cmp
mov
dec
mov
aam
sub
pop
je
ljmp
fs
out
or
lret
insl
loope
ficoms
out
pop
cltd
xchg
jg
mov
inc
dec
int
ss
jge
lock
jmp
xor
jg
xchg
repz
sbb
fidivl
mov
cmp
jmp
in
ficoms
mov
sub
decl
mov
cmp
fildl
cmc
sub
cwtl
inc
movsb
mov
outsl
mov
dec
neg
incb
sub
repz
jb
daa
cmp
xchg
das
or
pop
push
aam
int
mov
pushl
pop
std
mov
or
xchg
dec
sub
sub
iret
pop
aas
xchg
and
cmc
dec
sti
or
jge
scas
std
mov
rcl
inc
cli
adc
stos
fs
repz
movsl
pop
divb
stc
jecxz
ljmp
or
add
push
imul
ljmp
decl
shrb
jecxz
add
fldcw
fnsave
out
insb
sub
xor
pop
or
into
push
mov
lods
cmp
cli
and
mov
je
adc
adc
jmp
inc
mov
mov
push
enter
ds
ds
repz
inc
aas
aam
fnsave
hlt
mov
aas
xor
jb
ljmp
xor
jmp
mov
shll
sub
dec
or
shl
xchg
clc
aas
add
push
lcall
nop
dec
or
add
push
ljmp
xchg
mov
or
out
inc
ror
cmp
dec
clc
mov
cmp
jp
sub
mov
sub
shll
push
rorl
mov
pop
enter
and
enter
dec
hlt
mov
loop
xor
lods
imul
fcoml
shl
push
das
cs
out
scas
aad
sbb
fistps
or
mov
movsb
sub
loope
outsl
imul
or
rcll
incl
mov
out
aas
pop
lock
dec
jge
mov
sub
fmull
nop
inc
out
xchg
push
wbinvd
lds
adc
les
decl
xor
sub
stc
jnp
frstor
inc
inc
xlat
lret
mov
xor
mov
and
stc
pop
aam
dec
adc
sbb
sub
rorl
jmp
cmpsl
lret
out
inc
adc
repnz
insb
and
push
push
aad
int3
mov
jb
xor
pop
pop
jbe
out
cli
fildll
lcall
int
cmp
dec
lcall
cld
lds
lock
int
pop
adc
adcb
jmp
dec
mov
cmp
pop
into
and
stc
leave
pop
ror
cmp
pop
icebp
inc
cld
or
cmp
rclb
push
lods
sub
pushf
jb
and
ficoml
sub
loopne
fdivrl
adc
adc
aaa
mov
mov
fisubrs
outsb
jbe
not
mov
and
add
pop
out
push
lods
aas
mov
leave
mov
inc
sbb
out
pop
in
out
inc
ret
xchg
mov
lods
and
jmp
or
mov
mov
std
or
sti
das
dec
adc
mov
mov
adc
jo
std
fdiv
ljmp
das
stos
ljmp
pop
subl
sub
notb
cs
jg
cld
out
cmc
je
and
stos
insl
ret
mov
mov
mov
adc
clc
pushl
and
out
xor
cli
push
cmp
or
test
xor
and
mov
shll
and
and
fbstp
cmp
sbb
cltd
call
mov
and
and
insb
dec
repz
movsl
xchg
add
cmp
add
popa
ror
pop
lcall
xor
inc
fsubrl
or
mov
sub
xchg
fidivrs
and
mov
push
iret
lcall
mov
fistps
inc
fbstp
mov
and
pushf
dec
adc
add
cli
aam
jb
and
pop
ss
jae
dec
jmp
jp
xchg
push
imul
adc
test
outsb
or
incl
enter
out
push
add
test
int3
lock
mov
xchg
sbb
clc
lcall
xlat
xor
and
enter
ss
push
lock
mov
xor
pop
push
or
sbb
mov
outsl
jle
clc
mov
daa
fstl
ljmp
mov
sub
lcall
out
add
stc
insl
repz
sub
in
adc
stos
pusha
lds
out
cld
mov
lret
pop
retw
mov
in
jmp
ljmp
mull
and
cld
lds
in
or
xchg
xor
scas
popa
adc
and
notl
mov
push
jmp
orl
inc
leave
std
call
push
dec
dec
fisttps
cld
inc
aad
push
mov
rolb
inc
adc
imulb
out
mov
sbb
jp
shlb
inc
jnp
ds
into
ss
call
add
repz
pushf
fistpl
cmp
inc
aad
sub
and
mov
mov
insb
sbb
sub
push
ljmp
fwait
icebp
fisubrl
mov
aam
pop
xchg
cwtl
add
aad
ds
inc
push
in
je
fcmovne
in
lods
fldcw
pop
stos
or
mov
push
push
inc
or
inc
xor
shr
lret
in
inc
call
lahf
cmp
and
push
fbstp
scas
push
into
daa
jmp
push
jp
lret
test
int
mov
sbb
outsl
pop
jecxz
pop
call
inc
out
cld
jge
fsubrs
mov
testb
ljmp
loop
call
jmp
jmp
aas
mov
jae
int3
sbb
mov
and
jge
sbb
adc
jecxz
roll
or
outsl
mov
std
mov
dec
cmp
or
jp
sbb
mov
in
sub
or
push
decl
int3
xor
sub
fstl
xor
fisubs
mov
adc
data16
cmc
inc
sub
out
rcrl
decl
test
sub
dec
push
dec
and
mov
clc
xor
pcmpgtb
push
scas
je
mov
lds
jmp
push
and
xor
xlat
dec
idivl
out
stos
cmpsb
cs
push
jg
fcomip
sub
sti
sar
out
fldl
adc
mov
aas
xchg
test
int
add
ficoms
sub
cld
jl
and
int
push
push
cmc
decl
rorl
scas
in
add
and
mov
pushf
jg
sub
fistl
ss
xor
pop
push
pop
lea
out
sub
out
jb,pn
sarb
stc
jle
and
je
cwtl
imul
and
decb
jo
mov
sbb
fisttps
fstpt
sbb
out
or
jmp
lock
xor
dec
pop
rcrl
test
sub
pushl
xchg
aad
xor
cmp
fs
dec
ret
jo
push
push
jl
lock
pop
cld
push
cs
or
mov
jg
rclb
mov
jl
adc
dec
loope
ret
das
adc
add
in
push
testb
mov
cli
and
stos
dec
sub
cld
push
dec
imul
filds
fdivl
shrl
call
call
sub
jle
mov
lock
int
jno
stc
fsubs
repz
sbb
int3
pop
adc
sub
lcall
test
stos
or
inc
lret
ficompl
mov
mov
xor
daa
rcrb
lea
xor
pushl
std
outsb
fists
push
and
add
push
loopne
jns
lds
inc
mov
das
mov
cli
mov
ss
leave
fwait
inc
xchg
out
in
pop
repz
dec
loopne
sub
pop
mov
mov
movsl
pop
shrb
ljmp
cs
dec
cs
fldenv
xor
sti
in
push
and
ret
mov
jnp
pop
add
mov
or
int
mov
sbb
clc
gs
fsubrl
icebp
dec
pop
jg
in
mov
add
cli
lea
fimuls
lret
call
xchg
add
jmp
lret
pop
stc
add
fistpll
cmp
loop
and
cmp
out
push
add
out
mov
jp
mov
xor
xchg
adc
orb
sub
paddb
ret
cmpsl
mov
adc
lcall
rcll
xchg
in
push
int3
ror
neg
xchg
sub
sbb
stos
inc
push
push
xchg
sub
xchg
ss
dec
or
ljmp
das
ss
mov
pop
out
xor
int3
jnp
imul
lock
xor
dec
mov
pop
jecxz
aaa
mov
adc
inc
aam
repnz
mov
scas
out
and
ljmp
lcall
cmp
jbe
repz
dec
les
repz
mov
aaa
rclb
shrl
xchg
cmp
dec
lret
js
in
out
mov
sbb
ja
ljmp
lock
js
push
out
scas
loopne
mov
xor
lock
fadd
in
sbb
jnp
xchg
negl
inc
jle
icebp
sub
je
xor
rcr
bound
lock
sbb
mov
cmpsl
shlb
jge
subb
fiaddl
in
hlt
lret
lcall
dec
dec
lock
jb
mov
outsl
scas
clc
sti
shlb
fistps
rclb
lods
or
dec
scas
mov
inc
fsub
add
aaa
and
loopne
or
int
or
add
iret
pushf
aaa
push
cld
pop
add
mov
out
insb
out
ljmp
push
xchg
pop
jecxz
bnd
mov
cmp
fisttpll
cld
add
push
leave
cmp
dec
sub
xor
aad
jmp
or
icebp
in
xor
xchg
cmp
lret
call
cld
mov
push
push
test
add
mov
lock
sub
call
scas
xor
jl
fisttpl
push
mov
loopne
ljmp
mov
fsubr
inc
jecxz
sub
enter
add
jg
dec
insl
loope
push
jb
cltd
fsts
jg
push
rcrl
fistps
cmp
ljmp
sub
mov
mov
push
xor
fisttpl
jg
xchg
decl
loop
sub
and
clc
into
and
pop
into
incb
mov
and
stos
and
in
enter
fmull
mov
or
out
sar
xlat
fildll
fs
xor
cmc
dec
mov
adc
xlat
xchg
push
xlat
fimuls
scas
mov
mov
into
test
mov
addr16
jno
pop
sarl
mov
lcall
test
and
test
cli
fistps
int
loopne
ljmp
in
xor
sub
nop
mov
mov
ja
sbb
outsl
and
fldenv
icebp
aas
repnz
lret
out
jp
lret
ja
add
xchg
jecxz
ret
les
pop
mov
incl
xchg
aam
cmp
ret
std
clc
ja
ss
or
repnz
adc
rolb
cmpsl
stc
xor
clc
enter
pop
ljmp
mov
adcl
std
imul
fbstp
jno
clc
push
jbe
push
dec
cld
xchg
shrl
lret
jg
xchg
fcoml
loope
fisubrs
out
int
sahf
cld
pushf
int
push
rol
mov
cmpsb
mov
loop
lods
dec
push
scas
fadds
ljmp
sub
ljmp
rol
into
mov
imul
mov
adc
or
mov
out
decl
incb
aad
bswap
mov
mov
ljmp
in
xchg
hlt
xchg
decl
in
mov
push
sub
int
add
jae
adc
adc
jnp
jmp
js
mov
jge
dec
push
cs
mov
scas
xor
rol
mov
shrb
xor
jg
lcall
mov
or
or
xlat
sbb
aam
notb
in
adc
shrl
ja
dec
lret
push
mov
push
int
int
mov
dec
cld
pushl
sub
call
xor
add
rcl
and
ds
aaa
icebp
inc
fcmovne
int
call
and
arpl
cli
and
loop
das
xchg
adc
mov
cmpsb
scas
repz
test
sub
aad
add
dec
out
daa
jmp
mov
inc
lahf
sub
ljmp
cwtl
jo
jb
aaa
lcall
lret
xor
dec
xchg
xor
sbb
add
lds
cwtl
jne
jae
push
dec
insb
js
mov
aam
fbstp
incl
adc
mov
sbb
dec
mov
add
mov
mov
das
sub
sbb
je
sbb
xor
cld
scas
adc
cmpsb
daa
sub
popf
je
cmpsl
fwait
push
cmp
dec
leave
into
fcoms
stos
cwtl
mov
mov
or
sahf
mov
jnp
pop
mov
faddl
jb
sbb
ljmp
add
push
iret
mov
pusha
mov
cli
lcall
fisubrs
dec
repnz
add
jle
shrb
push
add
mov
push
mov
test
jnp
jg
pop
scas
xchg
aam
mov
cli
loope
lret
xor
jg
pop
cld
fwait
cmp
xor
add
mov
insb
sub
dec
call
mov
dec
dec
je
xchg
xor
icebp
push
leave
pop
xor
sti
adc
adc
sub
addr16
arpl
jge
jbe
pop
pop
inc
call
mov
mov
ret
imul
rcr
popa
es
cli
fyl2xp1
lcall
push
push
push
aaa
in
sbb
call
jmp
stos
sub
push
push
ffreep
mov
sar
xchg
into
push
lret
call
inc
cs
mov
adc
xor
lcall
lret
xchg
push
push
jle
inc
lods
cld
out
std
xlat
lock
adc
add
aaa
out
xchg
add
cmp
cmp
repnz
into
rclb
lods
data16
iret
das
repz
fnstcw
xchg
xchg
or
decl
rorb
dec
mul
pop
cmp
xor
or
ret
sbb
rol
ljmp
call
rclb
xchg
mov
or
and
mov
dec
add
clc
lret
mov
xlat
dec
and
loop
fs
xlat
sti
add
loope
shl
lcall
clc
lcall
fnstcw
in
dec
rolb
push
int3
mov
cmp
mov
adc
ljmp
cmp
cmc
jg
sub
pushf
cmp
push
mov
jne
loop
add
sbb
pop
push
les
icebp
xchg
xchg
pop
jbe
inc
mov
iret
iret
ret
xlat
xchg
xor
push
nop
hlt
clc
dec
or
and
call
ljmp
sbb
roll
pop
sbb
div
call
cld
incl
adc
or
inc
dec
idiv
insb
and
sbb
cmp
and
xchg
stos
cmp
or
ficoml
jg
mov
mov
push
mov
data16
sbb
sahf
pusha
push
sbb
rep
je
test
mov
jg
aam
mov
int
enter
gs
adc
pushf
jmp
scas
mov
bound
mov
icebp
cmp
push
jmp
push
imul
push
movl
decl
jmp
enter
jge
out
lds
std
fidivl
jg
ljmp
mov
push
xchg
xor
mov
xor
aam
xor
fldenv
lods
adc
enter
pop
sub
adc
and
sbb
dec
dec
dec
pop
shufps
mov
or
xor
cld
push
pop
xor
cmp
aam
scas
xchg
jbe
andb
inc
rcrb
outsl
mov
adc
pushl
cmc
and
dec
lret
pop
hlt
ret
jo
sbb
cmc
jmp
add
or
into
enter
hlt
jmp
add
stos
fisttpl
mov
idiv
ljmp
addb
sbb
mov
imul
pusha
les
in
outsl
popa
enter
rorl
call
xor
mov
jbe
push
or
aam
aaa
subb
mov
mov
pusha
mov
mov
sbb
loope
adc
icebp
repnz
pusha
jmp
cmp
push
adc
mov
packsswb
push
rcll
insb
clc
and
movsb
sub
addr16
in
lret
push
call
lcall
ljmp
stc
jmp
cmc
in
mov
enter
xchg
pop
sahf
push
out
ss
cs
clc
mov
xchg
rol
push
sub
add
or
movsl
in
adc
ret
mov
aaa
or
xor
dec
not
fnstcw
das
clc
int
test
fsubl
ljmp
faddl
test
xor
pushl
std
aas
push
jb
int3
sbb
xlat
ljmp
pushf
out
dec
mov
dec
lcall
cmpsb
add
loop
add
int
and
out
enter
push
fisubrs
cmpsl
in
mov
push
xchg
xor
call
ja
ret
shlb
and
in
stc
jecxz
jg
cs
jne
shll
int3
shlb
decl
mov
les
add
rol
and
inc
push
loope
imul
cmp
mov
and
mov
push
adc
jno
jne
fadd
push
ss
jg
xor
push
mov
shl
div
pop
and
mul
jge
rcrl
cld
mov
adc
fst
clc
notb
fstps
dec
lock
lret
lock
clc
jecxz
outsl
pop
xchg
cmc
pop
cmpsb
jae
fwait
push
sar
fildl
jb
pop
push
std
cs
mov
out
push
push
ljmp
lret
rorl
add
hlt
daa
ljmp
aaa
and
imul
dec
jbe
imul
dec
xor
icebp
enter
cmp
pop
roll
hlt
decl
push
pushf
cwtl
mov
push
jnp
dec
daa
test
mov
call
int
shl
jg
push
xor
mov
lods
mov
idiv
divb
incl
in
cmp
outsl
adc
leave
and
les
loopne
add
adc
pop
add
outsb
insl
xchg
lds
push
dec
dec
jnp
cmp
xlat
hlt
xchg
out
notl
adc
jbe
into
jmp
lcall
mov
or
clc
and
dec
ljmp
mov
call
aaa
cld
xchg
and
icebp
fcomi
dec
shll
push
inc
in
pop
fbld
xor
aad
test
mov
stos
add
out
ret
lcall
or
pop
aaa
cmp
xor
mov
push
push
jge
insb
insl
pushl
stc
fxam
lods
jle
shrl
cmp
cmp
sub
hlt
into
arpl
dec
pop
cltd
ja,pn
out
dec
sub
sbb
das
dec
sub
push
add
fldt
ret
mov
std
arpl
pushf
mov
push
xchg
or
push
sub
add
adc
sti
bound
adc
sub
das
add
push
ljmp
lahf
int3
lods
pop
push
enter
out
xor
cs
and
cli
filds
inc
push
xchg
cmp
enter
aaa
test
push
pop
mov
nop
mov
mov
repnz
shlb
fidivl
fidivs
sub
pop
out
ljmp
mov
into
xchg
sbbb
pop
vmovntps
pusha
test
cmp
out
pop
mov
mov
out
les
xor
lcall
adc
test
sbb
mov
xchg
cmpsl
das
xor
xchg
sbb
dec
ss
cmp
lcall
and
es
out
mov
push
insl
repz
jg
loop
js
cmc
fistl
add
inc
pop
lret
push
pop
icebp
jae
push
sbb
into
fwait
loope
push
mov
push
aaa
movsb
dec
pushf
push
xor
mov
mov
fcomp
clc
decl
lods
in
in
xor
pusha
xrelease
mov
cli
mov
cmp
in
jecxz
mov
jle
sbb
jg
mov
hlt
dec
shll
lahf
fsincos
and
add
decl
clc
sti
popw
test
iret
pop
test
out
in
adc
int
dec
fildl
incl
xchg
mov
outsl
in
shrl
jp
lcall
push
fs
lret
jb
inc
pop
mov
shll
cmp
dec
xor
lret
adc
int
scas
cmp
scas
test
mov
incl
xchg
leave
sti
into
dec
rcrb
push
enter
fidivl
jae
ja
and
mov
sbb
push
adc
push
fistps
call
push
dec
movsl
jbe
or
ja
mov
lcall
push
lret
aad
mov
xchg
jmp
and
pop
sub
or
pushf
out
out
inc
movsl
test
inc
adc
neg
icebp
and
and
inc
inc
stc
and
or
sbb
decl
mov
jl
xchg
push
das
push
in
dec
sub
pop
sbb
rorb
push
decl
adc
ljmp
insl
pop
and
jo
fcmove
sub
ljmp
lds
test
xchg
add
pop
out
pushf
mov
pusha
xchg
std
push
imul
dec
sbb
es
sbb
int
mov
or
sub
call
adc
outsb
cs
sub
inc
aam
fnsave
push
fdivs
movsl
jg
mov
mov
icebp
dec
pushf
mov
add
lret
sti
pop
incb
xor
or
xor
pop
ja
mull
xchg
icebp
decl
xchg
mov
ret
cmc
sbb
inc
mov
dec
loop
mov
aad
sbb
lods
sub
pop
into
test
cmp
fwait
sub
jmp
hlt
adc
xor
sub
out
cs
clc
xor
cmp
mov
test
inc
int
stc
lretw
out
mov
outsb
ds
imul
rcrl
int
sub
sub
and
inc
jecxz
sti
mov
aaa
mov
cli
shlb
into
push
popf
xlat
cmc
roll
mov
ffreep
jb
xchg
outsl
inc
mov
in
dec
aam
xchg
scas
mov
or
mov
cld
push
jo
sub
mov
das
mov
lds
add
mov
out
jg
pushf
popa
mov
mov
mov
mov
jg
xchg
ret
lret
xchg
adc
pusha
dec
lret
mov
lea
sbb
test
popf
int3
into
fcompl
movsl
cli
filds
sub
repz
mov
cmp
cmp
js
and
inc
add
imul
loopne
in
jecxz
ljmp
mov
cld
jp
out
pop
sub
es
inc
fneni(8087
popa
xorb
mov
enter
std
mov
fidivrs
adc
adc
xchg
cli
sarb
push
stos
or
arpl
mov
adc
icebp
fbld
mov
enter
pop
xchg
sti
call
add
dec
popa
ja
cli
pop
cs
inc
clc
fildl
ljmp
mov
mov
repz
jno
fistpll
ljmp
adc
mov
or
push
or
mov
pushf
fsts
mov
lds
dec
adc
inc
mov
add
insl
test
lret
jg
xorb
xchg
shl
shr
int
pop
outsl
out
loop
push
aam
fmuls
push
rcll
in
jmp
ficompl
xorl
xor
mov
sar
jae
test
pop
imul
leave
je
pop
arpl
aam
imulb
test
nop
adc
lret
sbb
enter
jmp
and
insb
cmp
and
out
mov
fsubl
pop
pop
mov
shr
ss
fcmovb
push
fdivp
pop
mov
fisttpl
or
jg
aam
push
jo
clc
mov
popf
pop
stos
mov
mov
rorb
push
push
push
lds
cmp
call
ljmp
lods
sub
or
mov
repnz
push
lret
mov
bound
mov
cmp
in
outsl
aas
fnstsw
mov
aad
getsec
lcall
rol
xchg
jl
push
and
in
jae
fadds
enter
stc
jo
cwtl
loop
xchg
insl
add
call
in
pusha
mov
fucomi
int
add
in
jmp
int3
stos
pushl
sub
inc
and
lcall
lods
gs
out
lock
mov
outsl
sub
dec
test
pop
sbb
rcl
int
pusha
xchg
popf
outsl
dec
imul
jae
outsl
lcall
xor
xchg
and
cmp
push
push
jg
fwait
cmp
fwait
cld
lods
test
out
ss
flds
int
sub
pop
clc
decl
jb
sub
out
jb
gs
imul
out
mov
lods
lret
enter
call
ds
or
fsubrl
push
sti
push
fcompl
jle
sti
addb
jb
xchg
and
pushl
push
call
dec
nop
fsubr
in
rorb
lcall
in
mov
mov
repnz
mov
push
std
popf
stos
xchg
add
cmp
clc
stos
mov
xchg
add
dec
add
ss
testl
or
push
mov
xor
jge
jle
sbb
push
pop
dec
jg
jno
lret
jb
mulb
and
mov
ja
in
fisttpll
push
inc
cmp
adcl
std
fcmovnb
call
out
ljmp
xchg
fwait
pop
int3
mov
test
push
or
jmp
mov
mov
sbb
mov
stos
add
out
daa
cmp
add
inc
call
and
icebp
jmp
ret
lahf
adc
jns
jg
idivb
or
pop
imul
push
aaa
jno
std
xchg
jae
lcall
and
cs
ficoms
stos
adc
das
push
sahf
in
loope
and
fdiv
das
cmpsb
sbb
clc
pcmpgtd
incl
out
sbb
jns
xchg
inc
cli
aad
insb
mov
and
adc
addr16
or
pop
mov
or
add
inc
mov
scas
cli
mov
call
cs
jle
sbb
outsl
add
in
icebp
xor
mov
sbb
and
ffree
push
or
cmpsb
fimull
mov
xchg
mov
clc
fisttps
and
cmpsb
add
leave
push
dec
xlat
cmp
imul
dec
fsts
cmp
leave
test
inc
fiaddl
lods
test
inc
jmp
daa
scas
bound
lock
out
push
jge
out
shll
js
mov
and
lods
loope
out
cmpsb
jg
add
enter
rolb
movsl
shrl
xchg
ds
ljmp
shrb
push
stos
lods
mov
jecxz
and
lods
lea
fst
xor
ds
lcall
sub
out
arpl
pop
dec
push
xor
mov
mov
push
movsl
popf
sar
fsub
xor
call
inc
call
mov
int3
cmpsb
push
adc
add
xchg
push
inc
cli
pop
xor
ljmp
ds
pop
sbb
add
leave
adc
aad
fwait
push
push
or
jle
jmp
push
int
ss
mov
pusha
jp
pusha
jne
ds
push
fildll
xlat
out
hlt
mov
mov
adc
std
fcom
fnstenv
add
lret
outsb
mov
push
into
cmp
add
push
in
inc
sbb
inc
enter
mov
out
nop
stc
xchg
jae
out
pop
sar
mov
call
pushf
icebp
frstor
cli
gs
dec
xor
push
insb
mov
push
ljmp
xlat
in
lcall
and
lret
pop
sbbl
bound
jnp
sti
fdivp
fldcw
repz
mov
add
pop
call
loop
xor
je
add
pop
and
or
lds
nop
scas
push
mov
testl
fisubrl
decl
je
icebp
add
test
daa
cmpsb
imul
push
sbb
outsl
notb
jbe
nop
jb
cmc
mulb
cmp
mov
cld
ja
adc
xor
outsb
xlat
pushf
jg
cmp
mov
shrb
sbb
ljmp
sub
jbe
loope
push
ljmp
cmp
mov
mov
in
sbb
push
adc
mov
dec
call
xlat
das
or
loop
cmpsl
add
adc
fcompl
scas
add
pop
push
out
xchg
ljmp
cmc
ljmp
xchg
int
xor
repnz
sahf
adc
and
lock
and
jp
jg
data16
add
test
push
pop
jne
out
scas
xor
lds
popf
push
xor
cli
aaa
lods
mov
pop
add
fstpt
xchg
dec
arpl
jg
cli
xchg
lcall
call
iret
test
lods
adc
mov
jecxz
rolb
lahf
mov
fmulp
xor
and
inc
jmp
sub
adc
jno
out
cltd
ja
in
cmp
lock
adcl
cs
test
loopne
adc
inc
scas
mov
sub
cmpsb
mov
fldenv
and
pop
adc
ds
push
stos
cmpsb
mov
sbb
out
in
imul
ss
dec
out
pop
mul
add
xor
cli
aas
rcll
sarb
in
or
popf
fdivs
repz
sbb
call
push
movsl
sbb
out
sti
add
push
cli
outsl
cmpsb
cmp
jbe
push
xlat
pusha
push
clc
ja
push
repnz
dec
idivb
add
add
roll
ljmp
incl
repz
sarb
insb
enter
ljmp
inc
fsub
mov
sub
dec
loop
in
dec
fildl
dec
mov
gs
xchg
jo
dec
xchg
push
in
nop
sbb
dec
fisubrs
sbb
ja
fcompl
addr16
lret
sbb
adc
xor
adc
mov
xor
lods
mov
aam
imul
cmp
xor
fildl
or
filds
fucomip
inc
aad
lds
cmpsb
pushw
xor
xor
mov
repnz
repz
sub
out
sti
cltd
das
cld
lock
xchg
mov
icebp
xor
js
mov
cld
xor
xchg
scas
loopne
sti
adc
adc
sbb
lods
cmpsb
mov
decl
xchg
mov
add
leave
enter
les
jg
aas
cmp
cmp
push
lret
je
es
popa
lds
imul
pop
cmp
enter
xchg
xor
idivb
out
fmul
outsb
shl
add
cli
decl
mov
rcrl
shl
jmp
rcrb
inc
push
pop
push
push
mov
and
pop
sti
sbb
adc
push
jne
mov
das
mov
jge
daa
cwtl
push
ret
and
std
ds
adcb
cmp
outsl
jg
xchg
cmp
or
jecxz
jecxz
sub
sub
adc
mov
and
dec
cs
mov
std
repz
das
enter
lock
aam
pop
xor
ror
cwtl
xor
sub
daa
add
dec
aad
xor
xchg
fbstp
pushf
sub
leave
fldt
scas
cwtl
cmp
loop
ljmp
clc
outsl
mov
jne
daa
dec
lret
xchg
push
mov
or
incl
mov
daa
push
divl
into
sarb
push
mov
std
mov
jb
add
pop
xchg
push
mov
pop
repnz
inc
push
cs
dec
fiadds
pop
pop
inc
imul
pushf
idiv
jmp
call
mov
jae
cmp
ljmp
adc
iret
dec
enter
dec
in
xor
loope
arpl
cld
lcall
fldln2
xchg
es
std
dec
and
scas
lcall
jmp
pop
cmp
jge
inc
movsl
add
lock
stos
add
clc
aaa
pop
scas
add
lret
fsubrs
and
jmp
add
adc
mov
fbstp
out
fdivl
inc
and
cmp
std
scas
pushf
add
loopne
or
shlb
das
adc
int
mov
aaa
and
cs
xor
test
sahf
push
jg
rcrl
fcom
pop
sub
daa
jle
sahf
xor
out
and
jmp
cs
ret
xlat
dec
ljmp
mov
stos
mov
leave
adc
aam
add
call
sbb
mov
jnp
repz
hlt
mov
fidivs
cmp
push
mov
adc
mov
loope
add
es
out
and
lret
into
inc
mov
jle
mov
xor
adc
xchg
and
or
decl
cs
push
dec
movsb
jecxz
jl
into
mov
jle
cmc
mov
sar
outsl
push
pop
sbb
xor
fstpt
nop
es
into
sbb
into
dec
dec
jnp
iret
fldl
pop
and
adc
push
movb
jo
mov
pop
div
inc
jg
xlat
rorb
outsb
jge
fcoms
fadds
mov
js
loop
imul
mov
mov
add
cmc
aam
ret
sbb
test
push
pop
ljmp
cmp
int3
xchg
sbb
clc
mov
inc
and
cmp
lahf
test
jmp
mov
cld
sar
dec
out
filds
loopne
xchg
lods
xchg
ret
adc
dec
ffreep
daa
add
cld
ljmp
cmp
gs
add
jae
fwait
loopne
jle
das
clc
pop
scas
jnp
xlat
data16
notl
pop
adc
imull
mov
inc
iret
repnz
jbe
add
jae
cltd
bound
pushl
fmuls
inc
push
fcomps
in
nop
dec
stc
filds
and
cld
cmpsl
mov
adc
lock
xchg
cli
ljmp
cmpsl
aam
dec
fcomps
jmp
int
rcr
add
fs
int
push
outsl
movsb
sub
sub
jg
jle
loope
pop
xchg
jbe
icebp
dec
in
shrl
int
adc
and
lahf
pushf
xor
int
lds
xchg
aas
sbb
xchg
iret
jns
fmulp
push
mov
xlat
pop
fcmovnb
stos
pop
into
inc
decl
out
push
out
call
xchg
adc
xchg
scas
shrl
mov
mov
inc
out
daa
mov
std
popa
xchg
cmpsb
pop
pop
out
clc
call
pop
pusha
jb
filds
shr
xor
dec
leave
repnz
add
scas
push
mov
out
mov
lock
incl
mov
ljmp
mov
repz
sub
loope
mov
lea
push
xchg
lock
add
pop
aas
mov
je
xchg
cmc
mov
scas
sti
ret
std
shlb
jns
ss
out
rol
stc
or
inc
cld
add
push
mov
clc
jg
push
jle
stos
dec
or
loope
test
fdivrs
mov
test
or
out
nop
mov
stos
push
clc
jle
in
jnp
sub
add
jne
nop
jp
xlat
out
aaa
inc
pop
std
test
loop
fdivs
sarb
loopne
shll
fbstp
cld
call
jo
mov
in
stos
out
xchg
pop
into
add
jg
std
jg
cmpsb
mov
dec
scas
mov
sub
push
daa
push
push
aas
jecxz
mov
mov
out
loopne
add
repz
push
add
jmp
shrl
testb
js
ja
mov
mov
call
outsb
out
adc
sbb
add
call
mov
out
sbb
data16
outsl
or
pop
inc
ficomps
pop
pslld
push
jg
mov
jmp
insl
in
dec
aaa
nop
icebp
jmp
and
xchg
clc
test
sbb
push
mov
sti
gs
or
xchg
test
jno
add
pop
rorl
push
cltd
sahf
data16
sar
shrb
fistl
xchg
inc
sub
fisubl
aas
stos
test
shll
cltd
push
fld
outsb
sub
fwait
jae
cmpsb
cs
mov
cli
add
adc
xchg
loopne
jg
ds
and
cmc
xor
lods
ljmp
pop
sbb
jb
das
cmp
xchg
fisubs
shl
hlt
jle
add
mov
out
fcomp
jo
rorl
subl
cmp
jle
in
adc
pop
loopne
mov
and
inc
fldt
cmpsb
inc
ss
inc
and
jg
ss
xor
add
adc
loopne
repnz
mov
dec
push
test
in
or
or
lds
adc
inc
or
outsl
jge
cld
mov
or
add
sahf
pop
mov
push
cld
lahf
je
jbe
inc
push
fildll
popa
rcl
and
mov
mov
jl
mov
in
filds
inc
inc
xchg
mov
cld
ljmp
sti
mov
dec
gs
gs
cli
pop
push
cmp
pusha
dec
push
imul
stos
mov
and
push
outsl
pop
jge
pusha
adc
sbb
je
xor
push
sar
cmpsb
sub
fbld
dec
inc
jo
push
xor
int3
into
movsl
arpl
mov
dec
adc
out
sub
ss
ja
mov
aaa
push
data16
addr16
cs
or
imul
xchg
push
lds
sar
fs
pop
mov
pop
dec
bound
call
je
stos
ror
xor
mov
lret
adc
mov
incl
fcomp
aaa
cmovb
lret
and
xchg
jbe
lret
dec
loopw
pop
push
sub
enter
lods
shrl
ljmp
mov
in
in
mov
pusha
js
out
lahf
mov
and
sbb
push
push
fdivr
lret
les
shlb
mulb
and
data16
and
pop
add
imul
push
xchg
shll
cmp
ucomiss
out
cld
pop
mov
inc
adc
daa
outsb
ret
std
orl
inc
sub
jmp
mov
leave
ret
dec
arpl
inc
mov
cld
push
por
dec
jns
imulb
repnz
push
inc
jb
push
mov
test
testl
insb
jne
decl
shll
mov
dec
dec
outsb
insb
jle
cs
loope
xchg
pop
arpl
ljmp
dec
mov
imull
fidivrs
or
and
xchg
push
mov
dec
repnz
fs
lcall
out
int3
xchg
ret
orb
fnstsw
adc
dec
jne
lods
mov
repz
andps
mov
pop
jno
ljmp
js
rcrb
pop
fstl
iret
iret
adc
mov
xchg
xchg
dec
rcrb
lock
ja
leave
cmp
sar
scas
lahf
sub
js
lods
adc
adc
dec
les
loopne
add
pop
mov
loop
pop
dec
cld
in
loopne
inc
push
xchg
lods
jle
outsl
push
hlt
gs
inc
jmp
push
xchg
int
mov
sbb
fistl
psraw
inc
mov
into
fisubrs
std
ficoms
ljmp
outsb
ljmp
xchg
outsb
outsb
fwait
cli
mov
int
jmp
es
std
add
jle
dec
into
rcrl
xlat
fnsave
cli
in
fisttpl
in
leave
stc
popa
lods
sahf
pop
sub
icebp
lcall
ret
sbb
in
push
rolb
hlt
mov
ficompl
push
aad
ret
shll
pop
icebp
call
into
cmp
pop
jno
arpl
push
cs
fistl
int
dec
add
sub
add
jmp
aam
pop
out
xor
push
es
mov
fcmovb
daa
jmp
gs
ljmp
roll
fcomps
jbe
mov
lret
add
cmp
aad
in
xchg
inc
iret
rorl
push
ljmp
mov
test
add
out
in
pushl
loopne
lds
test
loopne
iret
out
mov
cld
mov
fucomi
fcmovu
pusha
std
or
cltd
ret
adc
fsubrl
jo
aas
test
xor
push
mov
mov
call
fcmove
ds
adc
aad
movsb
xchg
ret
xchg
pushl
inc
outsb
scas
repnz
hlt
add
fmuls
lret
cld
sbb
pop
lock
imul
ljmp
pop
cmp
and
mov
xor
sbbb
add
push
jo
xchg
jge
xchg
ret
adc
mov
ffree
add
into
arpl
and
jne
loope
cmc
dec
inc
into
gs
fildll
repnz
clc
shlb
sarb
mov
ja
jge
inc
shrb
scas
dec
jmp
mov
mov
fdivr
paddq
push
jb
xchg
iret
std
sbb
leave
cmpsb
int3
movsb
aad
sub
fsubr
dec
lcall
ret
shll
pop
mov
aam
pop
dec
icebp
push
jg
call
sub
addl
mov
dec
dec
fmul
loope
ret
jmp
clc
jg
retw
incb
je
pushf
mov
loop
incl
jg
mov
fsubrs
add
repz
xor
ffreep
std
popf
cli
ljmp
xchg
pushl
cmpsb
cmp
loope
fstpt
sub
inc
ds
pop
cmp
cmovle
cwtl
notb
test
call
mov
clc
or
lods
ret
cld
mov
xchg
mov
xor
int
add
imul
add
dec
mov
fiadds
add
out
push
repnz
movsl
cld
mov
out
stos
lret
clc
ljmp
addr16
mov
and
mov
cmc
cmp
mov
shll
inc
mov
loope
fildll
fcmove
inc
repnz
xchg
aas
ljmp
cli
add
inc
jmp
jecxz
aad
lret
mov
cld
arpl
jmp
mov
jmp
lret
loop
push
lahf
or
orb
sub
rcr
jo
dec
mov
out
fisubl
test
out
pop
or
push
pop
xchg
rorb
pushf
push
xchg
push
aas
std
adc
testb
lods
negb
xor
lds
ret
hlt
cmp
ljmp
mov
leave
jg
mov
loope
bound
leave
mov
jo
daa
xchg
test
push
sahf
cmp
fisubrl
ljmp
ss
pop
out
xchg
in
xchg
imul
into
xchg
leave
shll
sbb
pushl
lock
enter
xchg
lret
clc
lret
je
mov
lcall
ss
xor
add
rcrb
add
cli
jnp
xchg
lret
jns
test
dec
icebp
cli
js
test
mov
dec
and
mov
jo
ret
mov
dec
cs
loopne
fldl
lret
mov
and
decl
outsb
lret
aad
dec
and
push
fistpll
sbb
push
pop
pop
jle
xchg
xor
sbb
jge
incb
cld
ljmp
xrelease
js
nop
fmulp
mov
jmp
dec
push
rcrb
fildl
add
jl
pop
repz
out
mov
pop
xchg
dec
insl
push
pop
loope
scas
dec
jp
and
or
roll
and
or
into
mov
out
neg
mov
jmp
mov
mov
stos
lods
movsl
xchg
push
pop
pushf
je
das
xchg
lock
inc
jno
aaa
data16
or
add
int
sub
rorl
lods
out
xchg
sti
mov
inc
xchg
push
mov
sahf
out
arpl
lods
enter
push
lock
popf
xchg
inc
push
bound
mov
enter
sarl
hlt
push
js
add
xor
out
add
pop
movsl
jno
cs
sahf
addr16
xor
incl
fildl
sbb
mov
shrb
and
fisubs
cld
cmp
pop
xor
pop
pushf
out
loop
loop
jecxz
sahf
enter
push
dec
xor
jg
test
imul
adc
and
mov
subl
add
and
jmp
inc
and
fmulp
dec
lods
xchg
mov
cld
clc
sub
decl
adc
sub
test
js
es
dec
dec
faddl
ss
aaa
mov
jno
rclb
jg
cld
dec
push
shrl
arpl
ret
loope
xchg
daa
icebp
pushl
fnstsw
lahf
push
fcoml
sti
sti
sub
jb
push
enter
jl
ss
add
clc
mov
mov
pop
inc
mov
dec
clc
jns
or
xchg
ljmp
loopne
push
loope
mov
idiv
out
sub
push
pop
mov
dec
adc
mov
cmp
mov
incl
cld
push
cs
mov
repnz
int
dec
cmp
je
addr16
imul
aas
lret
push
pop
push
pop
push
std
lcall
cmp
add
add
mov
sar
fstpt
je
in
push
daa
adc
dec
xchg
mov
sti
add
test
sub
lcall
jge
lock
and
popf
jbe
push
pop
cmpsb
cmp
cmp
pop
push
aad
jg
divl
or
xor
mov
mov
incl
rcr
adc
std
lds
test
stc
cmpsb
je
cmp
out
mov
loop
sarb
mov
bnd
test
fnstenv
mov
test
mov
jb
mov
jmp
pop
add
or
sbb
ds
push
dec
call
aad
nop
clc
jg
repnz
into
jne
movsb
fadds
mov
pop
push
fisttps
incl
mov
out
in
lock
inc
jo
mov
or
push
leave
mov
pop
ret
or
sahf
mov
jg
mov
inc
adc
sbb
jae
into
xchg
addb
jle
or
in
outsb
sti
cmp
sar
push
mov
clc
jno
outsb
in
ss
jo
pushl
xchg
icebp
fwait
adc
pusha
pop
pop
out
sahf
cmp
jg
jge
cmp
mov
sahf
xor
aaa
cld
sbbb
mov
inc
clc
pop
int3
in
cmpsl
ds
fadds
xlat
fwait
cmpsl
jecxz
jno
xor
repnz
mov
clc
dec
dec
cmpsl
xchg
popa
and
outsl
popa
ss
sbb
sbb
fnstcw
sub
test
popl
jle
scas
call
cwtl
cli
pop
or
outsl
mov
push
leave
pop
adc
jbe
mov
aas
shrb
fimull
sahf
scas
push
cli
xor
scas
push
mov
add
dec
inc
push
cwtl
cmc
outsb
std
mov
xor
pusha
dec
lret
lahf
int3
ficoms
out
mov
xor
hlt
adc
lock
dec
out
repz
dec
dec
dec
cmc
add
dec
popf
cs
fcoms
mov
clc
icebp
es
rcrb
push
loop
je
jo
sub
test
in
mov
mov
adc
iret
jmp
add
idiv
out
pop
sbb
jmp
cwtl
xorb
repnz
xor
out
pushf
out
cs
xor
mov
cbtw
imul
adc
imul
xchg
inc
fdivr
inc
pop
stc
jmp
push
ret
pusha
iret
inc
add
test
clc
incl
das
cs
dec
add
jb
lret
mov
std
mov
gs
inc
aam
andl
add
ds
out
cltd
rorb
push
loop
push
enter
xor
pop
mov
fsub
lock
mov
cs
mov
into
je
insl
bsf
mov
fcoms
mov
mov
imul
mov
inc
cmp
rorl
in
mov
push
jno
jo
into
test
shll
xchg
lret
push
cmpb
jbe
leave
mov
jg
orb
xchg
out
cmp
jmp
cld
fcomip
lahf
ret
lcall
sti
and
filds
clc
cmp
test
push
xchg
jl
out
xor
lret
push
into
cmpsl
test
jg
lock
and
adc
int
aam
inc
and
in
mov
and
jbe
sub
cmp
es
lahf
repz
add
adc
dec
mov
leave
into
dec
test
call
ds
ret
cs
jge
out
out
movswl
dec
call
adc
jno
add
cmpsb
daa
jno
das
ss
and
sub
fdivr
jo
sarl
adc
jl
movsl
call
push
xchg
pop
clc
loopne
mov
stc
push
adc
mov
dec
insb
call
ljmp
xchg
out
out
jecxz
stos
ret
popf
cmp
roll
scas
mov
mov
outsl
xchg
mov
add
push
and
ja
xchg
outsb
push
ret
decl
adc
xchg
cmpsb
pop
sbbb
out
in
lahf
sub
decl
imul
xchg
loope
lods
int
lret
dec
out
movsl
mul
cwtl
add
je
pop
ret
mov
sbb
pop
adc
and
mov
pop
mov
out
std
repnz
ficoml
cmp
mov
jae
jle
iret
ret
roll
lock
hlt
inc
xor
cmp
dec
adc
iret
lock
inc
aas
pop
clc
fdivr
xchg
mov
arpl
ret
or
mov
lock
cmp
and
lahf
vpaddd
add
shr
pop
repz
mov
daa
rol
movsl
jg
pop
loop
adc
mov
push
mov
xchg
scas
cli
add
scas
mov
std
jmp
les
out
clc
dec
cwtl
sbb
and
enter
xor
add
lret
dec
fucomp
sti
stc
sbb
cwtl
pop
arpl
test
push
cmc
sbb
xor
and
stos
std
inc
jno
incl
iret
std
dec
xchg
adc
fisubs
jae
cld
ljmp
hlt
cs
pop
push
jmp
mov
xchg
cmp
arpl
cmp
jg
xchg
loope
adc
in
pop
cmp
pop
rcl
das
dec
cmp
cs
fsubrl
cmp
and
out
ja
cmp
push
push
ja
shll
out
xchg
push
jns
fsubrl
add
int3
hlt
mov
mov
aas
jmp
test
xchg
xchg
movsl
in
repz
and
or
jmp
notb
leave
icebp
lock
xchg
dec
aas
repz
add
mov
dec
sbb
call
jo
adc
stc
mov
stc
test
sub
loopne
push
sbb
repz
and
xchg
stos
mov
stc
cmp
scas
mov
inc
rorb
jb
insb
and
or
jmp
out
mov
push
sub
imul
mov
jae
xor
sbb
xor
aaa
das
in
xchg
insb
push
insb
insb
shrb
push
inc
gs
pop
or
stos
inc
fcomi
xor
xor
inc
ja
xchg
sbb
xchg
push
sbb
repz
decl
rol
xor
pop
inc
into
inc
or
movsl
out
ret
jno
mov
aaa
adc
jne
cmpsb
or
test
int3
aad
cli
daa
sbb
clc
lock
ljmp
imul
dec
or
pop
jmp
add
mov
mov
daa
stc
incl
jmp
aad
xchg
cltd
fcoms
mov
in
mov
jno
hlt
adc
testb
faddl
mov
pushf
int
ja
mov
push
in
stos
call
roll
dec
fbstp
scas
fldl
decb
adc
xorb
sbb
shrl
scas
pop
pusha
pop
or
xor
int3
pop
mov
pop
add
fisttps
mov
shrl
push
ljmp
push
adc
push
call
rol
push
add
jne
push
and
jo
xchg
test
popa
aad
out
sahf
mov
lds
insb
movsb
icebp
jne
jle
xchg
lea
mov
jno
sbb
add
mov
cmp
int3
dec
leave
ss
xchg
dec
xchg
adc
lds
and
cld
pop
jp
adc
add
faddl
mov
sbb
in
ljmp
add
cmpsb
subb
sub
cmp
dec
out
mov
std
loopne
or
movaps
imul
push
ljmp
stos
jmp
fadd
enter
lock
push
lret
add
sub
scas
in
mov
jmp
into
push
xor
ret
lcall
filds
fisubs
scas
lret
lds
movsb
add
lods
mov
push
jle
data16
fnstsw
movb
into
mov
insl
or
or
adc
inc
push
xlat
dec
pusha
sub
cli
push
pop
mov
int3
call
pop
lcall
dec
push
ds
fdivrp
cmp
cli
sbb
fcoml
ljmp
adc
daa
idiv
add
add
dec
or
and
das
sahf
push
push
push
les
mov
out
dec
cli
incl
add
icebp
addr16
lret
in
cmp
jmp
faddl
mov
and
js
bound
inc
scas
push
jmp
leave
es
jns
cltd
and
dec
push
movb
das
clc
sti
test
outsl
jmp
add
icebp
push
fnstsw
cld
push
cmp
bound
fsubp
mov
jne
sarb
mov
sub
sub
les
and
push
lock
cmp
mov
outsl
rcl
ja
xchg
mov
and
pop
loope
stc
cs
push
sbb
jg
outsb
ds
pop
lods
negb
ss
pop
sub
mov
add
adcb
jb
pushf
pop
nop
jae
pop
cmp
test
lcall
jle
stc
cli
in
clc
push
faddp
mov
loop
div
outsl
cli
push
cmc
scas
jb
pop
or
push
clc
and
enter
es
cld
dec
leave
ret
inc
add
mov
cli
stos
ss
aad
pop
jae
push
enter
jg
into
inc
fisttpll
inc
jmp
add
enter
and
lock
std
lcall
je
les
adc
clc
xchg
mov
mov
or
push
xchg
inc
cld
push
lds
cld
sbb
stos
leave
xchg
ljmp
adc
movb
pop
dec
fcmovbe
jecxz
out
out
cmp
in
shll
sar
jmp
in
out
and
and
inc
scas
inc
mov
clc
test
xchg
mov
fisubrs
popf
not
fildl
fwait
ja
out
in
pop
stos
sub
jmp
cld
add
ljmp
incl
inc
lock
test
in
jmp
push
in
sbb
cltd
nop
jb
das
dec
cmp
xchg
dec
sbb
cld
jge
push
mov
std
jle
or
push
lahf
mov
divb
inc
cmc
and
fdivrp
add
cmp
mov
adcb
aaa
std
movsl
lock
and
je
mov
pop
scas
cmp
or
lahf
dec
ficoms
pop
mov
outsl
push
jae
xor
es
lods
les
or
insb
and
inc
push
neg
mov
and
dec
inc
lret
jge
ss
add
mov
lahf
ss
jo
cmpsb
out
add
je
cmp
es
xchg
lcall
add
mov
repz
xchg
cmpsb
xchg
outsl
ss
push
sub
fcoms
push
out
or
sub
xor
flds
mov
sbb
xlat
aaa
sub
mov
sub
jecxz
hlt
cli
iret
push
pusha
ds
xchg
xor
mov
sub
and
stos
test
adc
stos
mov
aad
in
out
xchg
cs
pop
jg
cmpb
mov
sbb
aaa
pop
stos
fsts
dec
decl
sub
test
xchg
xchg
pushl
jecxz
push
hlt
dec
inc
adc
pushf
dec
mov
sub
pusha
jmp
push
hlt
cli
push
sbb
jae
jecxz
out
mov
jecxz
fnstenv
int
sub
test
dec
scas
cmpsl
fdivrl
jge
movb
mov
lds
mov
mov
xchg
xor
sbb
dec
test
lea
mov
adc
sub
cwtl
cmc
jecxz
mov
fidivs
fiaddl
sub
int
movsb
shl
es
dec
shrl
pop
xor
clc
xchg
pop
enter
add
add
fdivl
add
imul
out
hlt
xor
roll
in
pusha
pop
mov
incl
mov
lods
std
ljmp
xchg
cli
ja
shlb
jo
jp
jle
fimuls
cmp
lock
into
pushf
xlat
dec
xchg
out
leave
mov
jp
test
lea
int3
shlb
xor
lret
or
mov
repz
pop
add
lret
mov
xchg
mov
dec
rcll
xor
fmull
inc
push
inc
hlt
mov
out
sarb
xor
sub
jg
lock
int
stos
call
icebp
pop
xchg
sbb
enter
mov
pop
dec
jmp
outsb
pop
cmp
out
cmpsb
mov
push
xor
into
xchg
outsb
fsubr
xchg
std
add
ljmp
fnstenv
inc
add
cld
and
fimull
jmp
mov
cmp
mov
out
jo
sbb
mov
dec
add
push
xchg
repz
rcr
ret
mov
les
sti
rcl
stos
mov
and
add
jo
lods
fidivl
push
mov
ret
dec
leave
or
std
and
adc
adc
mov
rolb
lcall
out
pushf
divl
testl
rcrb
jg
jns
shll
ficompl
cmp
das
cs
lock
outsl
pop
jp
xchg
sbb
jl
dec
outsl
xchg
divb
dec
in
ljmp
and
clc
xor
mov
jg
push
negb
xor
arpl
fwait
mov
jne
mov
jbe
inc
insb
adc
shll
mov
cmpsb
ss
rorb
or
ljmp
pop
cld
mov
inc
pop
dec
testb
rorb
cmp
roll
jbe
push
clc
decl
or
lret
out
lret
adc
xchg
xorl
rorb
pop
enter
mov
or
arpl
std
iret
test
xor
pop
xchg
lock
jmp
push
dec
push
cwtl
imul
or
mov
scas
int
ficoms
cli
and
push
pop
ficomps
in
fiadds
loop
xor
mov
shrb
xchg
dec
repnz
repz
xor
jmp
xor
dec
fcmove
xchg
in
jmp
call
sar
in
mov
roll
enter
fisttps
cld
mov
loopne
dec
sahf
sbb
jno
inc
ljmp
push
mov
sahf
fldenv
call
ficompl
push
dec
sbb
push
scas
mov
push
dec
jae
lock
sub
mov
or
push
les
out
rcrb
shrl
xchg
hlt
jb
stc
jg
mov
fwait
and
xchg
mov
xor
mov
add
enter
filds
dec
pop
clc
fcoml
push
push
or
dec
aas
rolb
andl
add
movsb
daa
inc
scas
pop
std
out
and
push
in
rcrl
dec
aaa
jo
xchg
mov
add
out
xchg
pop
ret
fbld
and
aaa
outsb
insb
fisttps
incl
jmp
cmp
add
or
push
cli
out
pop
cld
jnp
incl
lods
mov
dec
inc
cs
insb
insb
mov
and
xor
fiadds
loopne
outsl
add
cmp
test
stos
or
ds
push
push
loope
int
scas
push
loop
mov
fs
xchg
and
jb
call
dec
fcomi
test
and
inc
aad
cli
loope
leave
addr16
mov
arpl
fsts
dec
push
imul
sub
sahf
mov
ds
push
rorb
sbb
pushf
mov
cmp
rorl
rcl
and
pop
loope
add
bnd
nop
movsl
out
dec
je
ja
jmp
inc
mov
in
dec
xchg
clc
dec
aad
ja
scas
add
lret
sub
mul
int
arpl
data16
push
outsl
ss
ds
lcall
sub
outsl
outsl
fucomp
xchg
sub
cmp
push
test
cli
iret
nopl
jb,pn
jg
add
lret
mov
jb
push
mov
fildll
push
icebp
push
out
rol
jnp
test
fistpll
jp
repnz
jae
es
dec
xchg
dec
sbbb
dec
in
lods
clc
lcall
xchg
push
xor
cmp
jns
iret
mov
sub
jecxz
pop
mov
test
dec
out
test
clc
mov
jbe
or
insb
ficomps
jnp
nop
and
fwait
jmp
andl
loope
sub
mov
dec
push
lock
xchg
dec
pop
sub
enter
mov
aaa
sbb
out
inc
in
sti
stos
mov
or
cmc
dec
jmp
inc
ror
cmc
loopne
ss
lods
and
jb
sub
push
fildll
es
movsl
jge
ss
add
jl
jl
iret
dec
loopne
push
inc
jnp
in
pusha
movsb
mov
sub
decl
outsb
ficomps
jb
sbb
arpl
incl
dec
repnz
jnp
mov
lcall
leave
cmp
mov
fists
fldl
adc
fcoms
hlt
cmc
sub
lods
stos
outsl
jae
sbb
sahf
push
mov
int3
addr16
jae
jg
xor
fbld
mov
cbtw
pop
lahf
push
jge
cmp
rclb
cmp
pop
mov
push
popa
cmp
xor
add
xor
imul
pop
inc
repz
aas
adc
ljmp
xor
imull
mov
sar
pop
mov
into
push
adc
int
and
clc
repz
into
pop
push
mov
test
jno
stc
subl
or
dec
call
loop
sub
mov
pop
push
fbstp
sbb
sbb
pop
inc
push
cld
jge
out
adc
imul
loop
pop
dec
xchg
bound
pop
repz
mov
aaa
pop
dec
pop
push
aaa
loope
cmp
jg
icebp
jge
jb
sahf
jl
cmp
push
sub
pop
ja
clc
sub
xor
push
sub
cmpsl
call
jmp
inc
mov
pop
outsl
mov
mov
insb
fidivl
movsb
lock
jmp
mov
gs
ljmp
outsb
push
jg
subl
jg
adc
mov
jmp
int
scas
ss
add
inc
mov
es
aam
std
fwait
inc
jge
sbb
inc
pushl
cld
lods
loope
scas
push
and
jns
les
push
cmp
icebp
push
stos
push
push
out
ret
push
addr16
adc
add
arpl
cwtl
push
jae
cld
sbbb
dec
loopne
movl
inc
jg
ljmp
push
pop
push
ljmp
pusha
les
mov
fildll
add
fsubs
add
adc
push
mov
xorl
jge
add
push
or
cmpsl
mov
rorl
pop
xor
dec
jnp
jae
inc
jmp
cld
outsl
stc
add
sti
xor
sub
sbb
movsl
xor
rclb
aam
xor
push
cltd
jle
stos
or
stos
lods
js
es
out
push
arpl
mov
lds
cltd
or
aaa
les
pop
and
out
xchg
adc
aad
ret
and
lock
lods
mov
pop
vunpckhps
out
loope
cld
in
inc
gs
adc
arpl
rorb
in
mov
scas
add
and
jns
jle
cmpsb
fstl
outsb
pop
adc
adc
arpl
xchg
sbb
add
cmp
jno
ljmp
rcrb
mov
dec
lock
call
data16
sub
lcall
xchg
fs
out
dec
pop
mov
jp
pop
jge
mov
mov
cmpsb
fnstsw
mov
dec
pop
mov
inc
ficomps
pushf
std
push
lock
imul
fwait
inc
imul
mov
testb
lahf
aad
fs
push
add
data16
dec
mov
test
aaa
ret
mov
sub
push
adc
pop
mov
cld
push
test
inc
sub
loopne
cs
cwtl
sub
cmp
mov
adc
loop
insb
out
adc
movsl
push
popa
mov
clc
out
sub
sbb
or
inc
insb
xchg
aaa
mov
mov
ljmp
scas
mov
rcll
inc
sbb
pushf
in
lret
dec
push
rclb
mov
loopne
test
adc
fdivl
mov
arpl
pop
stos
mov
add
push
jg
lock
popf
movb
fistl
movsl
pop
rcll
inc
pushl
push
test
lcall
inc
ja
mov
mov
sti
int3
mov
and
mov
pop
mov
adc
lahf
mov
out
dec
frstor
ret
mov
pop
add
lcall
aam
scas
xchg
cli
mov
lcallw
rcl
aaa
pop
xchg
dec
inc
stos
lock
imul
pop
xchg
sub
aaa
mov
mov
mov
pushf
fidivl
inc
jmp
push
add
imul
sbbl
mov
nop
add
out
or
inc
jnp
stos
mov
pop
lock
ljmp
clc
in
in
or
ret
cmpsl
into
mov
fsubrl
mov
aad
shlb
dec
jl
pushf
clc
push
mov
inc
mov
jnp
push
clc
aad
ja
movsl
add
rol
jmp
imul
call
xchg
hlt
ds
xor
pop
sarb
lods
lret
push
push
and
aad
lds
mov
icebp
ljmp
push
data16
sub
rolb
add
sub
pop
jns
add
jmp
shr
aam
fmuls
std
jo
sahf
fsubs
aam
jg
cmc
lret
mov
in
shl
cwtl
loopne
dec
add
call
daa
adc
repz
stos
ljmp
jne
mov
ss
ljmp
push
push
add
stos
rcl
les
call
hlt
das
pop
dec
inc
in
loop
stc
inc
mov
xor
cmp
jne
mov
pop
add
sub
dec
negb
push
dec
mov
leave
lahf
jmp
lcall
and
fistpll
js
in
sub
fdivrs
adc
dec
int
xchg
lret
cmp
inc
and
lret
outsb
into
lds
sub
sub
xchg
jae
jmp
pop
jp,pn
shl
lock
call
in
push
std
test
sbb
shll
out
cmp
and
into
xchg
insb
stos
adc
in
mov
add
test
mov
sbb
lcall
dec
lret
in
test
mov
shl
xchg
decl
call
sti
push
cwtl
mov
sar
xchg
push
sbb
aad
lock
push
lock
add
ret
pop
shll
ret
lret
add
loopne
shl
adc
out
and
cmpsb
mov
mov
out
jle
mov
mov
cmp
cld
pop
shrl
cli
icebp
incl
mov
inc
clc
insb
data16
jmp
sbb
sti
iret
push
roll
add
mov
call
jg
push
sti
adc
clc
xchg
push
push
xor
lock
fmuls
jg
aam
je
lock
out
dec
and
mov
daa
loopne
add
pop
push
in
mov
inc
sbb
add
fnstcw
cmp
es
push
into
and
or
pop
xor
jno
icebp
dec
clc
int3
and
inc
mov
add
dec
and
push
outsb
xlat
rclb
movb
push
xchg
or
dec
jg
outsl
or
ljmp
aad
dec
jae
push
jae
cltd
out
jbe
and
dec
int
mov
xchg
push
popf
mov
in
imul
mov
arpl
mov
cmp
in
push
fs
adc
out
cwtl
pop
sti
dec
icebp
xor
mov
sub
mov
test
sbb
rorb
jmp
sbb
add
clc
sti
lret
jb
es
sti
ja
xchg
inc
dec
clc
or
add
lret
pop
mov
dec
mov
sub
cmc
push
jl
sbb
ffreep
dec
int
and
xor
push
lret
imul
push
fidivrs
inc
mov
les
fwait
lcall
jecxz
or
mov
out
pop
rorb
cmpsb
addl
es
loop
test
loope
fcomps
cli
insl
out
xor
testb
xchg
xchg
es
xchg
in
mov
gs
push
lods
inc
push
push
pop
jne
clc
and
inc
push
je
or
clc
ljmp
jge
push
out
sub
mov
repz
cmp
or
outsb
pop
mov
pusha
jge
inc
int
adcb
movb
pop
rcl
insl
arpl
popa
jle
xchg
dec
rolb
loopne
dec
dec
mov
fsubs
sahf
dec
pop
mov
mov
outsb
fldl
push
negb
pop
sub
aaa
pop
jle
std
mov
push
into
pop
fdivr
sub
add
push
sahf
cmp
ds
out
and
and
jle
test
subb
jg
lock
inc
push
cmp
pop
idivb
mov
inc
cmp
dec
lret
push
int
test
add
sar
mov
imul
add
fists
ds
filds
std
cmp
jge
ljmp
dec
lock
inc
outsl
xor
pushf
loopne
sbb
mov
lods
and
dec
jl
xor
popf
push
adc
adc
ja
xchg
das
sarb
cmpsl
mov
pop
jno
mov
inc
rcr
add
leave
pop
and
jmp
mov
sub
pop
int3
shr
int3
aaa
mov
push
fdivrs
daa
pop
notb
les
mov
out
stc
fildl
adc
lock
push
adc
dec
push
daa
sahf
push
adc
rclb
push
pop
aaa
mov
jge
push
jno
lret
in
movsb
lcall
or
loop
ja
inc
lods
lret
xchg
pop
dec
sub
js
push
pop
shlb
xor
mov
sub
outsb
or
jmp
jg
push
xor
cmc
int
xchg
data16
dec
or
push
fstpl
cmp
push
fists
pop
pop
lock
je
jle
ljmp
divl
ficompl
es
jg
push
call
dec
fidivrs
sub
jp
pop
subl
adc
jle
adc
mov
push
loop
sbb
in
out
test
jg
cld
ljmp
dec
ljmp
movb
movb
out
sarl
cmp
punpckldq
lahf
fwait
xchg
lcall
neg
mov
rol
add
gs
dec
mov
sahf
ror
jne
sahf
sub
into
rcrb
pop
xchg
test
add
add
mov
push
or
decl
pop
loopne
mov
idiv
sbb
imull
jbe
fwait
jmp
inc
paddsb
repnz
stos
cs
cli
fsubl
imulb
add
mov
fmull
adc
icebp
jmp
rolb
sbb
lods
call
andb
mov
inc
add
mov
lock
xor
xchg
outsl
add
pop
into
mov
fistl
push
push
xor
sbb
xchg
stos
into
mov
ret
cmp
xchg
enter
aas
inc
movsb
adc
sti
in
inc
rclb
xchg
lock
andb
or
and
mov
adc
jns
mov
fwait
aam
fsubs
das
xchg
ljmp
call
loope
int
arpl
shl
movsl
fsin
mov
out
loopne
mov
outsb
or
or
in
sbb
push
sbb
mov
inc
icebp
push
out
push
sar
dec
loop
dec
bnd
fsubrl
out
out
clc
clc
call
jmp
push
fiadds
mov
dec
push
mov
loope
adc
incb
lret
dec
mov
mov
loope
das
es
push
lret
jbe
xorb
notb
adc
dec
jl
cli
or
push
sbb
setbe
mov
rcrl
xchg
xchg
cli
pushl
pop
sbb
adc
test
test
jbe
ret
roll
and
pop
jle
fdivs
lahf
jecxz
sub
jg
ljmp
scas
add
sti
aas
lock
outsl
jp
filds
and
pop
into
xchg
repnz
xchg
mov
inc
add
lret
cmp
add
push
scas
es
pop
cs
in
adc
push
data16
inc
sub
xor
push
int
test
or
ljmp
fbld
pusha
ret
cmp
lods
dec
push
push
dec
pop
xlat
pop
lock
xor
pop
dec
jns
push
mov
mov
mov
push
inc
mov
jno
mov
push
or
das
xor
jae
test
xchg
insb
push
hlt
push
imull
std
inc
std
mov
dec
jbe
imul
sbb
ss
pop
loopne
into
jl
sahf
jmp
cmp
into
fstpt
jno
or
ss
jmp
jmp
gs
pop
push
add
mov
and
cmp
jmp
sbb
or
jg
mov
enter
xchg
sub
or
movsl
push
std
mov
mov
push
inc
pop
jns
iret
sbbl
lea
mov
loop
outsb
mov
sub
adc
pop
sbb
add
push
std
inc
lods
out
sbbl
cld
push
add
dec
lock
popf
xor
lahf
and
dec
cmpsb
mov
jae
dec
sbb
dec
xchg
lcall
hlt
scas
popf
push
xor
adc
je
dec
outsb
sub
mov
and
or
dec
push
cmp
incl
xor
aas
pop
fbld
scas
lods
lret
test
mov
stos
shlb
mov
lret
decl
pop
mov
in
test
inc
mov
shlb
jecxz
jbe
jo
sahf
popa
out
aas
mov
add
jp
mov
lock
mov
push
lock
cli
adc
rorl
xchg
or
lret
es
in
loop
add
mov
add
xchg
fadds
mov
adc
pop
and
call
xor
push
test
cmp
push
xchg
push
inc
mov
jecxz
ja
aas
cwtl
aas
xchg
jae
cli
jbe
ficoms
push
das
pushf
fisttps
push
xor
out
jl
add
add
mov
or
decl
or
rcrl
call
inc
xor
test
test
sarl
lcall
fiadds
shl
mov
push
mov
push
popf
pushl
loop
loop
jg
mov
inc
inc
aam
sbb
daa
push
xor
cmpsl
add
jo
icebp
push
mov
stos
test
cmpsb
iret
add
sti
and
arpl
ljmp
sbb
xchg
adc
pop
dec
data16
ucomiss
cmp
aas
sbb
mov
inc
jmp
loope
push
fldt
mov
inc
scas
inc
scas
mov
ret
addr16
push
pop
push
cli
xchg
test
out
xchg
xchg
jo
add
incl
fimuls
int
pop
pop
aaa
mov
cmp
add
xchg
icebp
rclb
lea
or
mov
aad
sahf
xchg
mov
inc
fcomip
adc
jg
call
jae
add
call
ja
xchg
sbb
xor
fstp
shrb
enter
dec
gs
jbe
into
sbb
adc
iret
aas
add
cmp
lds
adc
push
adcb
lock
aam
mov
mov
aas
mov
sti
inc
jo
jle
inc
or
repz
test
repz
jmp
int
fisubrs
out
out
adc
iret
fiaddl
fcomip
jnp
cs
ljmp
les
push
pusha
fstpt
xor
sti
sub
xchg
in
les
and
insl
shrb
lahf
ret
lcall
add
or
sti
add
push
xor
pop
gs
fmull
mov
inc
push
cmpsl
sti
idiv
pop
adcl
es
rol
xor
pop
das
sbb
decl
lret
data16
jg
out
repnz
adc
push
pop
out
addr16
sar
in
bound
xchg
lock
pop
pop
es
sar
flds
das
data16
adc
test
clc
pop
pop
call
aad
jle
jp
clc
iret
mov
ret
aam
adc
cmp
adc
push
and
push
in
iret
insl
call
cmp
add
test
nop
mov
out
aas
push
adc
add
or
adc
jbe
or
outsl
fstpt
int3
adc
fdiv
lcall
xchg
into
and
mov
jnp
std
js
daa
mov
jl
pushf
not
sahf
jecxz
inc
insl
data16
add
adc
xchg
cmp
pop
insb
adc
or
jmp
loop
int
jns
and
popa
ror
push
aas
mov
in
fadd
cs
icebp
xchg
and
jg
rcl
cs
std
gs
sarb
jo
lcall
clc
mov
adc
adc
push
dec
add
shrb
out
sbb
fstpl
and
scas
das
sbb
iret
xchg
cmp
push
rcrb
xor
stc
cmpsl
stc
jge
clc
xchg
xchg
shr
lock
pop
mov
and
xchg
in
fisttpl
xor
clc
jae
loopne
fsubr
push
js
cmp
adc
sub
std
xor
pop
lret
dec
outsl
ds
and
aad
out
sub
inc
adc
or
push
jb
and
arpl
fisttps
addr16
mov
in
fcmovnu
xchg
ljmp
inc
div
pop
jge
lock
lret
roll
jle
loope
rcrl
roll
inc
inc
adc
cmp
inc
jg
lods
adc
jmp
gs
push
insb
int
inc
cltd
clc
lcall
out
dec
shlb
adc
shll
or
jg
jmp
mov
xlat
lret
inc
lock
rcll
fcomps
or
incb
lock
lock
fucom
lret
mov
cmp
in
insl
dec
shlb
sbb
inc
imul
sahf
js
cld
push
adc
mov
pop
cs
jae
mov
lahf
xchg
icebp
xchg
fsubrs
mov
sarb
stc
lds
xor
jl
jns
lcall
cmp
jno
or
push
in
jno
jo
shl
sbb
decl
mov
cld
test
call
addl
and
sbb
mov
adc
stos
jge
dec
or
std
jmp
xchg
int3
inc
cmc
imul
outsl
pop
out
in
in
pop
in
jl
mov
xor
in
xor
inc
test
or
ljmp
push
inc
push
fdivrl
push
imul
test
arpl
mov
inc
loop
pop
push
stc
jns
enter
sahf
scas
js
cs
dec
pop
subb
push
pop
ss
xchg
imulb
out
aaa
scas
int3
and
stos
repz
outsl
jg
inc
mov
cs
movb
aam
adc
ss
stos
addb
adc
sbb
out
xor
lock
imul
scas
cmpsb
or
test
icebp
inc
mov
mov
ja
clc
mov
pusha
jns
addr16
jmp
inc
out
fmull
pushl
ja
iret
outsl
stos
adc
or
push
mov
jne
push
fisubl
xchg
aam
test
out
sub
sub
push
in
shrl
ljmp
sar
mov
fsubl
aas
out
add
lret
cmp
inc
jecxz
loop
lret
ss
mov
inc
jg
shlb
aas
cld
roll
sahf
lret
push
divb
enter
aam
loopne
jg
sub
stc
sahf
jnp
out
cmpsb
ja
leave
scas
xchg
lret
out
sub
inc
nop
inc
int
cmc
xlat
or
insb
fsubrp
sti
ja
aad
pushl
lcall
ja
jmp
push
xor
adc
xor
movsl
testb
in
int
and
incl
push
pop
loopne
orl
adc
dec
jp
push
add
sbb
es
inc
into
clc
jno
ljmp
aam
movsl
xchg
cli
lock
xor
fnsave
jbe
int
call
insb
sub
repnz
rclb
in
fiadds
xchg
adc
and
jmp
dec
hlt
sbb
test
xor
lret
outsl
sahf
xlat
pushl
std
or
jg
pop
iret
loopne
cld
icebp
and
in
sarl
adc
call
cs
or
aaa
push
ret
aam
add
push
insb
adc
sti
ljmp
jno
cmp
lea
cld
aad
sbb
mov
rolb
push
adc
out
add
test
out
scas
xor
pop
mov
dec
inc
adc
out
jno
imul
mov
ffreep
rcrl
add
mov
data16
imul
xor
jg
ss
xchg
pop
shrb
leave
inc
cli
add
std
push
fs
loop
inc
in
nop
verw
xchg
push
xchg
stc
les
and
sarl
jle
aaa
sbb
pushl
out
frstor
pop
insb
clc
mov
dec
roll
repz
push
mov
std
jmp
cmpsb
notl
lcall
outsb
lds
lret
clc
arpl
pop
and
dec
loop
adcb
pop
test
lret
push
insl
ret
sbb
cmp
mov
adc
or
lret
add
call
mov
in
add
fisttpll
jg
subl
jb
outsb
jle
mov
cld
aad
movl
cltd
mov
sub
sbb
lock
push
movb
fcmovnb
xchg
inc
cmp
loopne
ljmp
push
mov
xchg
sbb
cmpsb
cmc
aad
add
out
je
les
iret
and
incl
mov
nop
jae
cmp
dec
imul
fdivrl
int
add
push
out
jg
or
mov
leave
and
into
clc
inc
xor
dec
fildll
cmp
iret
scas
inc
shl
mov
pushf
dec
out
mov
cli
mov
sbbb
pop
xchg
xchg
cs
sbb
mov
dec
and
add
dec
mov
fisttpll
mov
decl
lods
sbb
data16
xor
xor
jle
sbb
sub
ljmp
cmp
lods
xchg
iret
lcall
ds
clc
add
adc
push
mov
mov
cmc
mov
idivb
cmp
data16
xlat
push
push
jo
lods
clc
incl
ret
clc
mov
fs
inc
call
test
and
idiv
sbb
clc
movsb
repz
jle
ds
jmp
aas
out
imul
ja
js
sbb
insb
xor
jb
mov
xor
lahf
add
pushl
je
aaa
clc
jmp
mov
sub
sbb
xchg
ja
repnz
jo
jae
cmp
or
enter
gs
jno
loope
mov
sbb
aaa
or
cmp
jmp
pop
ja
xchg
imul
jp
dec
push
out
ficomps
fdivrp
jg
push
repnz
push
add
cmp
repnz
dec
cld
dec
into
jmp
imul
fdivr
add
aam
int
repnz
push
sub
cld
leave
jmp
mov
jp
pusha
mov
lcall
stos
jl
mov
fbstp
or
cmpsb
jno
arpl
pop
and
mov
call
xchg
push
jbe
jmp
jb
pop
adc
adc
fcoms
pop
adc
in
push
jmp
sub
fistpl
dec
aam
sub
mov
das
pop
fadd
and
std
scas
jle
out
les
push
cmp
lock
fstl
mov
jecxz
stos
test
or
xchg
pop
ljmp
outsb
xchg
notb
push
icebp
and
aad
scas
xchg
lock
fidivrl
and
fs
jno
ja
int
mov
test
dec
jmp
inc
inc
push
push
xchg
mov
je
adc
rcrb
xchg
lret
sbbb
scas
dec
jle
mov
jg
loop
mov
out
es
push
adc
pop
ljmp
xorl
shll
mov
sub
and
loope
pop
pop
jge
in
popa
hlt
fstl
mov
xor
shr
and
or
ficomps
jbe
mov
xchg
pop
jbe
inc
imul
int3
loopne
inc
loope
jbe
push
jle
add
sahf
call
popa
loop
xchg
ds
fisubrs
je
push
outsb
insb
inc
repz
push
adc
pop
mov
bound
inc
ds
and
jg
jecxz
add
mov
call
out
inc
xor
xchg
enter
xchg
xchg
mov
add
xorb
incl
pop
inc
rclb
or
aas
mov
push
ror
cmp
aaa
xchg
sbb
add
jle
ss
les
mov
pop
call
jae
scas
sbb
add
call
outsb
push
cmp
int
dec
incl
cmpsb
xchg
cmp
fnstcw
pop
xor
incl
decl
lea
pop
test
ljmp
mov
xchg
shll
in
lods
call
mov
xor
jmp
jle
add
notl
loopne
lock
jns
mov
xchg
stos
outsb
lock
cld
mov
pop
iret
and
stos
loope
cs
iret
nop
mov
cmp
add
addl
jg
cli
xor
sbb
loope
incl
pop
or
mov
push
push
mov
enter
jns
iret
xchg
ret
sbb
mov
push
mov
insl
sbb
cli
push
out
ds
dec
in
lock
shr
cmp
mov
ss
test
jb
ljmp
ds
cmp
xchg
inc
ljmp
dec
loope
out
outsl
out
imul
ret
inc
dec
adc
dec
loop
out
sub
outsl
mov
xchg
inc
fldcw
movsb
clc
pop
aad
cli
push
mov
lcall
leave
cmp
mov
inc
jb
gs
and
sarl
fistpl
movb
movsb
inc
mov
outsb
inc
icebp
dec
loop
fs
jle
sub
movl
mov
push
test
daa
gs
xchg
pop
jge
pop
lock
fcomps
fnstsw
push
or
scas
call
xor
pusha
scas
and
nop
fcompl
xor
jl
xchg
and
insl
xor
rclb
cmpsb
xor
int3
add
mov
decl
jmp
xor
cmovle
inc
inc
cmp
pop
fisttpll
out
push
cld
data16
and
cmc
xor
or
imulb
sarb
nop
test
mov
xchg
clc
loopne
pusha
adc
lret
insb
loopne
pop
jae
jg
add
mov
outsb
jnp
xchg
movsl
mov
sti
ljmp
int
sub
les
lock
repnz
repnz
enter
or
mov
adc
sub
pop
jge
hlt
sar
inc
scas
pop
inc
mov
pop
je
sbb
sbb
cmc
lods
mov
sti
xlat
lcall
lea
cmc
xor
jecxz
mov
cwtl
push
and
enter
pop
pop
js
xor
cld
sub
bound
add
out
repnz
mov
fisttpl
xchg
gs
fldt
jo
and
int3
add
inc
pop
jle
fsub
loopne
cmp
dec
push
orb
xorb
push
mov
call
lahf
js
fsubp
sub
movsl
repnz
xchg
pop
mov
adcb
push
jl
dec
pop
lea
push
cmp
add
xchg
jo
loopne
iret
xchg
imul
and
hlt
rorb
jg
pop
sbb
mov
inc
mov
push
add
je
xchg
mov
stos
lods
inc
pop
addr16
and
into
sahf
adc
pushl
mov
push
cld
rdpmc
adc
bound
je
std
sub
add
call
inc
jns
imull
addb
mov
and
pop
xor
push
shlb
dec
incl
enter
xchg
push
mov
stc
jg
inc
testl
push
push
out
push
pop
jp
adc
xor
ljmp
jg
gs
into
mov
decl
adc
jae
inc
xor
ficoms
cld
ret
mov
gs
shrb
and
jmp
cmpsb
pop
pop
sti
and
mov
loope
insb
gs
mov
add
adc
mov
fadds
xchg
xchg
stos
icebp
dec
arpl
shlb
dec
adc
mov
pop
or
xchg
bound
clc
or
jp
in
cmp
or
repz
jge
inc
cld
adc
scas
xchg
test
pop
mov
in
out
mov
dec
pop
icebp
scas
mov
leave
stc
out
imul
clc
fbld
repz
push
xchg
xchg
sbb
sub
hlt
mov
cli
in
inc
cs
iret
out
test
xor
xchg
cmp
hlt
cmp
cmpsl
fisttps
jae
xchg
bnd
push
repz
insl
fsubrl
ljmp
mov
mov
pop
inc
push
enter
mov
inc
je
cmp
test
inc
test
jo
in
xor
mov
dec
jg
hlt
cs
insl
loop
jl
call
add
pop
test
pop
subb
jp
inc
sbb
roll
pop
mov
and
jl
test
out
inc
cmpsl
rclb
mov
fwait
adc
jns
add
ret
das
cmp
nop
fsubrs
mov
xchg
fistpll
sbb
testb
xor
lret
cld
pushl
out
shll
nop
ror
leave
outsl
test
decl
and
cmp
jp
add
stc
fdivrl
inc
mov
aam
sar
adc
xor
inc
data16
mov
cs
test
out
add
jl
sub
loopne
mov
mov
out
popa
jb
scas
mov
dec
bound
loop
pushl
rolb
shlb
mov
leave
jo
jo
xor
sub
dec
fidivs
pop
inc
pop
faddl
cli
scas
mov
or
lock
dec
sahf
mov
iret
and
mov
movsl
stc
lret
mov
mov
sar
cmp
lock
iret
shrb
inc
jae
sbb
loop
jle
nop
lock
push
and
std
data16
add
cs
mov
push
js
scas
les
cmpsb
sar
and
or
xchg
cmpsl
pusha
push
ds
mov
aas
adc
jo
adc
imul
push
test
jp
jle
lds
xchg
or
jno
pop
sub
inc
mov
mov
xor
repz
mov
sbb
mov
pop
ds
sub
inc
sub
xchg
mov
adcb
clc
insl
cmp
jno
jecxz
sbb
mov
cmp
inc
decl
aas
jno
lods
mov
push
inc
push
in
decl
scas
test
jg
lock
dec
pop
ljmp
dec
dec
push
js
repz
sarl
xchg
or
into
std
adc
push
pop
jle
pop
mov
subb
mov
dec
into
imul
jmp
data16
jmp
pop
fwait
jo
imul
jbe
mov
aam
or
negb
cmpsb
push
push
jns
jge
mov
inc
pop
daa
dec
movb
scas
inc
aaa
adc
xor
cmp
lods
xchg
and
std
sbb
xchg
out
pop
pop
jge
rcl
push
test
adc
push
into
dec
daa
mov
mov
popf
xlat
stos
loop
cmc
bound
insl
jp
sti
sub
clc
push
pop
pushl
std
mov
jo
es
decb
pop
ss
inc
cmp
fstl
fadds
loop
sub
push
rclb
sahf
xchg
out
daa
mov
arpl
and
incl
rorl
int
jge
or
mov
and
add
dec
mov
adc
jb
out
add
into
fdivr
mov
nop
push
aam
into
mov
incl
pop
push
gs
mulb
shlb
add
inc
lcallw
mov
outsl
popf
rclb
cli
adc
test
mov
lret
int
mov
sub
outsb
jle
push
pxor
clc
testb
inc
ljmp
xorb
add
stc
cmc
push
je
ljmp
adc
into
fisttps
std
lock
outsl
in
mov
into
pop
push
fcoms
decb
fsubrl
cltd
vdivss
lock
jle
loopne
int
add
dec
sarb
mov
enter
pop
je
scas
dec
jg
xchg
add
and
ss
dec
fildll
push
xchg
sbb
push
jb
or
shll
js
xchg
out
stos
mov
clc
add
jecxz
inc
cld
fsts
aas
fadd
andl
out
shlb
pop
ja
fcmove
add
aad
lcall
pop
and
pop
or
cmp
jb
push
mov
push
cmpsb
ja
decb
lahf
sarb
in
repnz
and
clc
mov
aaa
ficoml
adc
roll
xorb
xchg
test
push
inc
jbe
add
mov
lods
hlt
jbe
xor
shrb
push
mov
sbb
jg
adc
pop
lds
jae
and
adc
or
jecxz
fucomi
cmpl
out
movb
mov
imul
in
scas
into
cmp
loopne
aam
loopne
pop
add
xchg
imul
add
jl
jbe
mov
push
rorl
fistps
std
sub
mov
out
adc
aam
lods
rcr
in
mov
add
adc
out
mov
mov
mov
ljmp
mov
es
cs
pusha
pop
sbb
cld
es
clc
fdivp
push
imul
inc
mov
mov
mov
es
mov
aas
cli
push
cwtl
clc
push
jl
sub
outsb
sub
push
mov
add
test
scas
adc
pop
imul
loope
xor
push
mov
add
imul
jmp
mov
inc
sbb
call
lds
nop
lret
and
movsl
pushf
dec
push
icebp
outsl
jp
mov
push
test
stos
scas
inc
and
cwtl
and
ljmp
and
leave
dec
cli
fistl
pusha
in
pop
cld
inc
jecxz
cmpsb
insl
or
push
movsl
sti
cmp
mov
mov
orb
inc
mov
fstl
mov
jg
jne
lret
pop
sbb
out
jecxz
lcall
leave
jmp
stos
cmp
dec
arpl
aaa
push
pop
push
fisubrs
mov
sub
jg
in
fucomi
mov
inc
inc
xchg
out
shll
imul
fs
mov
mov
and
shll
or
scas
aaa
clc
xlat
add
mov
push
cmp
jne
jmp
enter
ljmp
iret
lahf
in
scas
out
jns
push
xor
lret
aad
jge
dec
les
ja
ljmp
inc
and
outsb
mov
rorl
dec
es
ficoms
dec
xchg
cli
pushf
ficoms
ljmp
into
arpl
and
mov
jecxz
xor
fcomip
ljmp
add
in
js
pusha
push
bound
das
lret
fnstsw
insb
mov
arpl
mov
mov
ss
pushl
jl
mov
dec
jae
rcrb
dec
jae
mov
mov
divb
fcmovnb
or
ret
sub
sub
jns
jae
daa
mov
lea
cld
pop
adc
dec
dec
adc
imul
sub
shrb
decl
xchg
fcmove
scas
out
push
popa
jg
sbb
sub
or
icebp
mov
pop
jnp
ljmp
mov
call
cmpsb
mov
push
test
push
rcrb
xchg
aaa
mov
xor
int
insl
insb
int
xchg
outsb
movsb
jno
lock
shlb
lcall
xchg
fidivrs
dec
jmp
repnz
stc
push
outsl
or
jg
divb
mov
in
sub
dec
adc
push
jl
out
sbb
xchg
xchg
jle
fidivrs
icebp
mov
jo
mov
es
inc
and
stos
testb
roll
cli
inc
cmp
mov
movq
aas
push
and
xchg
icebp
outsb
xlat
mov
rorl
adc
inc
sti
andb
rcrb
inc
imul
nop
xor
cmpl
sub
gs
push
mov
inc
int
lock
jl
or
cmp
es
mov
dec
cmp
xor
lret
decl
mov
les
in
pop
jb
sbb
push
in
fdiv
jno
test
dec
insl
jmp
test
mov
cwtl
ret
out
mov
rorl
ljmp
es
iret
mov
decl
test
js
xor
rorb
std
mov
mov
pop
push
psrlw
push
out
xchg
add
mov
or
fcoml
add
incl
dec
pushf
data16
fldt
int
rcl
dec
popl
cmp
gs
and
inc
popf
inc
fldt
jmp
mov
test
jns
lock
js
jno
rolb
dec
in
scas
in
sar
pushl
xchg
scas
jmp
hlt
mov
idivb
call
rcr
loope
lret
mov
mov
pop
inc
jle
cld
sbb
cmc
adc
repnz
iret
es
cltd
in
or
xlat
or
jg
fistps
repnz
repnz
push
push
cld
xchg
cli
cmp
test
mov
test
push
push
into
in
jle
xchg
lahf
add
nop
pop
ja
ret
pop
push
jecxz
std
add
popa
les
dec
insl
mov
or
push
daa
bound
dec
punpckldq
xchg
fbld
sbb
aas
inc
pop
ret
frstor
sub
mulps
push
pop
leave
mov
cmpsl
sub
cmp
push
daa
jb
iret
fiadds
fiadds
mov
lret
jmp
fstl
out
inc
push
testb
mov
and
cmp
jo
mov
cbtw
push
ret
outsb
jg
iret
cmp
jo
jle
loop
adc
shlb
or
xor
cmp
in
push
xchg
mov
mov
or
mov
jle
push
dec
dec
mov
jo
adc
es
enter
jno
cmp
fmull
ds
inc
fisubrs
ficomps
in
popa
pop
cmc
inc
ffree
jbe
lds
sahf
clc
dec
int
and
jns
ror
sub
add
repnz
dec
out
jne
ds
outsb
decb
ds
sbb
mov
loop
bound
dec
cmp
push
dec
pop
stos
imul
xchg
lret
scas
sub
cwtl
inc
into
pop
int3
fs
pop
mov
into
out
fidivrs
fisttps
test
adc
pop
mov
sub
push
and
adc
fadds
mov
mov
mov
imul
ja
out
in
sbb
in
punpcklwd
movl
ss
gs
push
pop
pop
into
loop
lods
outsl
pop
jp
jo
push
outsl
and
pandn
inc
fs
push
pop
inc
repz
cld
lahf
cli
into
adc
jg
inc
jecxz
test
int
subb
xor
jmp
stc
stos
fbld
xchg
pop
inc
outsb
jmp
mov
div
or
ds
mov
int
push
sbb
cmpsb
decl
sahf
push
push
sbb
out
add
mov
test
ss
or
sbb
cmp
pop
dec
push
xchg
ds
out
loopne
dec
es
movsl
roll
inc
shll
fimuls
addr16
stos
movsb
sub
mov
mov
sbb
mov
xchg
jb
cmpsb
cmp
jae
cmpsb
add
cli
cmp
std
mov
das
imulb
dec
cmpsl
dec
adc
sub
jg
fnsetpm(287
mov
sbb
fstl
test
inc
mov
jae
ret
pop
push
cmpsl
js
dec
clc
pop
adc
clc
adc
popf
mov
std
mov
in
insl
into
sarl
add
rorl
xchg
imul
inc
cld
pop
mov
jne
cltd
xchg
cmpsl
jle
add
push
aad
inc
mov
sbb
cmp
mov
fiadds
add
xlat
and
loopne
icebp
decb
sbb
fs
or
push
sbb
fimuls
xchg
cli
pop
data16
or
inc
and
mov
aas
mov
clc
cmp
and
std
lret
aaa
scas
movsl
mov
push
test
jg
and
xor
mov
add
sub
pop
mov
into
add
rcll
das
rcrb
dec
inc
fsts
mov
sti
jle
mov
pop
clc
negb
dec
add
mov
mov
pop
or
add
fsubrs
frstor
sbb
in
stc
cmp
adc
outsl
es
je
lret
out
or
jns
leave
dec
adc
pop
jo
mov
push
xchg
jg
clc
outsl
inc
daa
in
inc
ds
push
cmp
or
dec
lcall
fwait
cltd
push
scas
mov
xlat
pop
pop
loopne
ss
and
adc
dec
mov
outsl
xchg
pop
faddl
cs
xchg
fisubl
ret
dec
cltd
inc
data16
push
xchg
sbb
push
add
fs
add
fbstp
call
pop
add
pop
pop
out
loopne
jae
adc
inc
negb
sahf
dec
add
sbb
inc
scas
inc
inc
push
cmc
xor
mov
nop
push
out
and
out
daa
xchg
push
mov
jb
out
les
mov
cmp
aas
ss
fsubr
and
push
xchg
sbb
fisubs
mov
pop
in
mov
orb
enter
and
cmpsb
rorb
jl
adc
ss
xchg
test
outsl
cs
mov
cmpb
pop
rcll
inc
lret
mov
add
jl
dec
xchg
or
test
xchg
dec
or
or
mov
cmc
sub
sti
repnz
mov
pop
gs
sbb
scas
mov
shl
data16
mov
loope
mov
mov
icebp
dec
push
xor
loop
add
inc
stc
push
je
fs
pop
addr16
loope
std
mov
hlt
clc
inc
leave
ss
add
mov
jg
push
out
lret
sub
ljmp
aaa
lcall
or
icebp
pop
inc
adc
add
inc
test
loopne
mov
fisubrl
scas
ss
sbbl
in
test
test
mov
sbb
mov
pop
or
repnz
repnz
and
nop
adc
jl
jns
ret
fdivrl
or
and
push
rcl
cmpsb
and
std
sub
ljmp
cmpsl
push
mov
int
pop
imul
add
pop
test
bound
movl
prefetch
push
adc
cmpsl
ljmp
ret
mov
lahf
test
aam
xor
dec
ljmp
pop
push
push
sahf
jmp
fsincos
and
out
ror
inc
outsb
clc
push
loop
cs
lahf
inc
pop
out
ret
je
outsl
sbb
sbb
inc
insb
jg
cld
sbb
shld
sbb
icebp
ljmp
out
shl
lret
rclb
adc
pop
jae
add
mov
xor
mov
sub
jae
sub
into
out
dec
jb
bnd
inc
fcomps
pop
mov
fisttpll
sbb
pop
mov
aaa
not
sbb
adc
fbld
or
pop
sub
loop
hlt
loope
mov
cs
imul
xadd
loopne
clc
int
cs
negb
dec
push
sbb
loope
hlt
negb
pushl
mov
dec
mov
adc
icebp
and
in
adc
adc
stos
push
loop
int
cli
enter
cltd
pop
jae,pn
popa
aas
fwait
push
rorb
arpl
cmp
incb
pop
dec
rolb
pop
pop
and
in
notb
push
cmp
test
in
sub
inc
xchg
xchg
push
jle
pop
icebp
push
fbld
push
xchg
dec
iret
push
popa
std
jg
outsb
mov
clc
in
aaa
dec
call
inc
pop
xorb
pop
xor
sbb
lret
xchg
ficomps
fcmovnbe
xchg
ret
lret
xchg
into
hlt
data16
ljmp
jg
and
mov
pop
dec
jbe
push
sarb
cs
sarl
mov
outsl
jnp
pop
xchg
mov
sbb
in
xchg
lock
call
aam
nop
aam
dec
push
jge
out
xchg
sbbb
pushl
fidivs
insb
inc
mov
dec
jae
xchg
mov
subb
enter
inc
loopne
es
xor
xchg
fs
push
js
lea
inc
es
lods
into
or
faddp
aam
pop
push
pminub
shll
push
mov
fs
push
push
into
jnp
cmp
lock
xor
dec
pop
or
std
pop
jge
adc
ljmp
popf
jmp
adc
pusha
mov
push
push
or
cli
sbb
mov
inc
jge
neg
loopne
adc
mov
daa
cmp
lods
movsl
pop
sbb
decl
inc
out
fcomip
xor
mov
repz
and
idiv
incl
clc
xlat
repz
adc
inc
stc
lret
sbb
inc
dec
or
int3
ss
out
iret
lret
outsb
cli
sbb
or
cmc
jb
pop
clc
stos
mulb
clc
jns
enter
popw
add
loopne
mov
mov
mov
data16
adc
jecxz
sub
sub
adc
xchg
mov
clc
jo
lods
mov
pop
mov
jp
call
push
sbb
sbb
lcall
es
test
sub
mov
sti
loope
test
pop
call
dec
push
mov
test
rclb
xchg
movb
mov
cmc
dec
mov
icebp
pop
and
out
xchg
pop
cs
pushl
xbegin
mov
push
cmp
hlt
scas
mulb
jne
into
pop
outsl
sbb
mov
mov
pop
fisubs
push
xchg
dec
mov
cmp
mov
into
rolb
xor
adc
ror
shl
add
icebp
sbb
ljmp
fadd
mov
leave
cmp
mov
or
pop
mov
jns
add
fmulp
ret
xor
in
push
or
psrad
cmp
mov
adc
push
push
pop
jno
pop
mov
inc
or
jg
mov
push
shl
xchg
inc
repz
inc
push
leave
stc
in
lods
inc
add
adc
xlat
xor
xchg
cli
push
jg
loopne
jbe
sti
push
cli
mov
pushf
dec
cld
mov
inc
push
adc
dec
imul
push
aas
pop
gs
imul
ss
jl
or
data16
push
mov
repz
pop
pop
push
mov
pop
cli
mov
mov
sti
out
test
xchg
stos
lahf
adc
dec
mov
outsl
pushf
mov
aaa
jmp
es
cmp
sub
push
cmp
pusha
and
dec
clc
into
iret
mov
pop
add
scas
pop
pop
test
movd
leave
and
inc
dec
test
sub
lock
push
add
bound
mov
cli
leave
repnz
mov
fisttps
and
ljmp
jge
jg
loopne
sub
test
jg
test
pushf
add
push
loopne
jge
sahf
xchg
jne
push
aad
jg
outsb
fnsave
add
cli
mov
xorb
notb
push
and
mov
fistps
xor
and
popa
jb
ret
loope
adcb
ret
pop
add
inc
popf
jp
mov
mov
pop
sub
icebp
fsubl
and
push
mov
lret
add
push
xor
jl
imulb
pusha
movsb
in
lahf
decl
push
in
aaa
xchg
push
push
dec
arpl
test
lods
mov
sbb
pusha
daa
xchg
jge
jg
xchg
inc
inc
inc
push
lock
cmpsl
lret
mov
xchg
les
xchg
movsb
jbe
cmpsb
add
daa
in
mov
push
inc
pop
jg
cli
fldl
ficoms
test
loopne
cld
outsb
dec
nop
out
arpl
fdivrs
leave
cmpsl
scas
xchg
sbb
push
loop
addr16
adc
jecxz
lahf
or
xchg
sahf
mov
fwait
outsl
jmp
jne,pt
add
jnp
pop
cld
ret
arpl
sub
das
lods
sar
loope
int3
rclb
mov
push
push
jg
js
sub
push
and
das
cmpsb
sub
dec
xchg
movsb
xor
gs
incb
dec
push
inc
mov
dec
push
xor
and
inc
cs
les
add
inc
xchg
inc
stos
mov
or
adc
aad
cltd
push
mov
stos
fisubs
inc
inc
incl
jg
cwtl
jg
out
pop
int3
xchg
or
fbld
xor
adc
push
dec
ret
adcb
stc
xor
sub
je
mov
or
xchg
adc
xchg
xor
daa
jp
or
mov
dec
test
incb
out
xor
icebp
jg
mov
xlat
repnz
dec
push
or
pop
jl
out
shlb
cs
lods
mov
pop
stos
movsl
mov
mulb
mov
pop
add
mov
pop
sub
pop
stos
or
inc
fs
pop
fmul
shll
mov
xor
sub
adc
mov
dec
xchg
stos
adc
jg
or
xchg
mov
push
inc
dec
clc
leave
fmull
das
les
testb
shll
jmp
hlt
jmp
pop
pop
pop
pop
jle
lock
lret
mov
scas
lock
or
enter
adc
les
adc
mov
mov
adc
jge
into
clc
xor
push
xchg
or
push
ljmp
stc
aam
into
fcoml
add
mov
adc
call
or
or
fildl
jecxz
call
dec
fdivs
or
call
xor
mov
iret
mov
pop
sbb
div
or
into
mov
or
adc
cs
mov
scas
add
dec
dec
cmp
cwtl
out
jne
or
loopne
pusha
push
xchg
icebp
in
les
jle
lock
and
scas
mov
int3
fs
fwait
outsb
leave
push
xor
adc
pop
shl
xchg
push
fcomi
repz
push
or
pop
daa
dec
push
xchg
lcall
jle
dec
lds
push
jmp
jb
dec
fcomi
sbb
add
pusha
add
jne
jle
or
dec
fs
ror
dec
incl
dec
mov
dec
dec
lret
fldcw
push
and
mov
lret
jno
push
push
jbe
ljmp
xchg
inc
fmulp
xchg
pushf
mov
jecxz
jge
int3
inc
fcomp
psraw
jecxz
pop
push
mov
pop
lods
mov
pop
fsubl
out
dec
push
mov
insb
leave
jmp
mov
test
jle
mov
push
push
into
lods
push
outsb
dec
push
pop
in
mov
jle
fs
inc
nop
ljmp
pop
pop
pop
into
inc
jno
mov
repnz
xchg
push
pop
movb
sbb
cmp
outsb
dec
cld
pop
lcall
hlt
aaa
cmc
xor
lods
jg
mov
jbe
mov
push
je
or
inc
mov
mov
sti
rorb
pop
sbb
pop
dec
scas
add
jbe
sub
shr
ficomps
in
push
shrb
pop
add
inc
jne
stos
lcall
sub
adc
fsubrl
in
outsl
push
jmp
test
xlat
cmpsb
cmc
enter
scas
mov
push
neg
jns
xchg
imul
push
pop
mov
cmpsb
jo
fmul
sub
mov
lahf
cmp
jg
dec
jl
ljmp
sub
rcr
in
mov
mov
pusha
mov
push
push
cmc
ja
clc
lds
dec
out
sbb
push
xorb
into
add
inc
jo
ljmp
xchg
jbe
enter
xchg
decl
stos
push
dec
je
jae
popa
sub
int
add
rorl
leave
push
cvtps2pi
push
icebp
pop
mov
fucomip
sub
mov
push
jmp
in
outsb
ror
es
push
mov
push
xchg
adcb
dec
std
dec
sbb
cmpsb
mov
adc
mov
test
xchg
outsl
jmp
push
add
xor
pop
jnp
in
rcll
sub
test
dec
xchg
xchg
icebp
fildll
test
dec
jno
bound
cmp
std
inc
rol
push
push
decb
pushl
jnp
fsubrs
mov
adc
out
push
mov
xchg
mov
xlat
push
sbb
fmul
or
mov
rclb
sbb
mov
xor
mov
xor
loopne
ret
jb
addb
enter
mov
and
repz
loopne
fistpll
and
mov
repz
les
rorb
call
std
jmp
add
pop
ja
xor
fisubrl
add
fdivs
fadd
mov
add
inc
add
xchg
je
push
add
mov
sar
in
sub
icebp
pop
stc
shl
adc
jp
stos
ret
rorb
das
cmpsb
dec
orl
add
ss
cmp
add
or
or
xor
mov
jns
mov
out
dec
out
fmul
xor
es
add
xchg
das
mov
icebp
mov
inc
and
scas
mov
xor
lcall
mov
mov
ljmp
and
jno
pop
test
test
push
popa
hlt
icebp
out
dec
aas
jbe
stos
inc
adc
pop
xor
push
popa
fldpi
fldl
imul
lret
cmpsb
push
push
or
call
cmpsb
fdivl
daa
jbe
bound
mov
jno
xorl
adc
movsl
mov
inc
sub
addr16
repz
sbb
sub
fmuls
call
jle
xchg
test
jge
test
sbb
inc
mov
int3
mov
cld
mov
mov
dec
adc
dec
dec
outsl
aad
dec
cmp
pop
aam
and
out
mov
rcrb
movsl
xlat
or
into
mov
daa
inc
or
call
loopne
mov
or
cmp
mov
ret
lock
loop
or
inc
imul
add
mov
nop
sub
adc
out
test
cmp
dec
aas
push
outsl
imull
push
pop
and
jmp
aad
xor
out
jbe
sbb
jmp
cltd
pop
loope
push
ja
push
out
pop
mov
in
jg
into
adc
cmpsb
pop
adc
gs
data16
cmp
push
cmpsl
cmp
pop
push
into
clc
packssdw
and
decl
fnstcw
call
mov
and
adc
insb
cld
out
jbe
fbstp
pop
adc
idivb
or
imul
adc
pop
pop
jbe
cmp
add
lods
add
pop
inc
jmp
outsb
lock
add
stos
push
xchg
cli
xchg
out
sarl
push
sahf
add
lds
push
cld
out
movb
mov
fnstsw
aaa
fcoms
ret
out
jg
add
fsts
and
inc
push
inc
cld
push
int3
pop
test
push
test
clc
jmp
xor
jle
jmp
jmp
mov
clc
call
cmpsb
pushf
cmp
rol
insl
not
lret
int3
mov
mov
add
mov
inc
jg
ret
shrl
testl
dec
call
fistpll
ljmp
fstpt
adc
xor
fcomp
or
aaa
xchg
inc
jecxz
leave
xor
nop
lds
pop
jo
add
xchg
xchg
test
test
mov
nop
or
clc
push
jne
ljmp
loopne
inc
inc
outsb
mov
lods
out
jp
test
or
aas
fs
pop
loopne
test
mov
cmpsb
add
jg
pusha
popl
rclb
sbb
mov
insb
cltd
incl
pop
mov
jne
ja
push
xor
add
adc
xchg
inc
inc
jecxz
mov
push
pop
mov
ljmp
or
jl
push
push
xchg
call
fcomi
lea
jp
jae
sub
pop
out
fistpll
lcall
mov
dec
jl
inc
xor
insb
in
dec
push
add
ja
shrl
clc
mov
jno
lock
jnp
cwtl
outsb
movb
and
jg
adc
xor
outsl
jb
xchg
add
es
push
ret
mov
addr16
lock
pop
je
pop
mov
outsb
pop
sbb
sub
adc
push
scas
and
clc
mov
leave
xchg
stc
mov
pop
adc
mov
adcl
roll
dec
insb
mov
dec
ljmp
adc
jne
iret
icebp
cli
cld
ja
fcoms
les
cmpsl
xchg
lret
decl
push
cmc
cli
jae
test
or
loopne
in
mov
data16
clc
inc
lods
push
daa
xor
add
adc
cs
jg
ficoml
arpl
test
stos
lock
push
mov
xchg
cli
enter
jmp
add
sub
imull
jo
aas
or
and
in
stc
mov
mov
add
gs
cmp
mov
int
adc
or
and
ss
fcoml
shll
sbb
divb
push
inc
mov
or
mov
lret
xchg
fildl
push
scas
daa
push
sbb
jmp
repnz
cmpsb
add
or
arpl
pop
clc
incl
cmpsb
jno
lds
xlat
rcrl
loope
lret
mulb
mov
lahf
push
std
lret
adc
jmp
inc
adcl
and
sub
inc
sbb
inc
fwait
std
pop
ljmp
jmp
xchg
xchg
jmp
pop
call
mov
cs
sahf
push
outsl
mov
mov
inc
jecxz
incl
in
inc
jbe
stc
sbb
pop
adc
fdecstp
jmp
filds
push
jecxz
fbstp
add
cmp
mov
lock
push
pop
xor
push
jbe
sbb
mov
mov
sub
ja
leave
stc
adc
or
in
in
and
push
push
or
pop
pop
pop
xchg
out
pusha
popa
in
es
pop
and
mov
jns
ds
pop
mov
pop
push
jle
cli
mov
add
sub
out
cmc
add
pop
mov
dec
and
call
movsb
jbe
dec
cs
adc
imul
push
loopne
lods
jb
mov
lret
sub
insl
call
sub
into
fisubrs
push
mov
aas
enter
fcmovnbe
rcrb
or
into
sti
fistl
cmpsl
jmp
inc
or
ss
jg
dec
push
fnstsw
das
repnz
mov
push
ret
sbb
push
or
cmc
sub
clc
mov
imul
jmp
or
cmp
call
les
outsl
xchg
push
cs
ficomps
pop
push
jmp
push
call
inc
sbb
inc
dec
cld
push
loope
call
mov
dec
xchg
not
lods
ja
pop
das
loopne
lcall
dec
cmp
add
call
cmp
xchg
xor
xor
test
mov
in
push
xor
adc
ljmp
cmpsb
loopne
or
outsl
inc
xor
lock
ljmp
add
test
scas
adc
and
rcrb
mov
js
or
sahf
jae
cmpsl
cli
mov
shlb
mov
in
les
pop
mov
call
stc
scas
icebp
incl
jmp
xor
sub
dec
inc
jle
push
pop
std
incl
dec
pop
adc
sub
push
add
arpl
out
inc
mov
sbb
inc
aaa
adc
cld
insl
xor
mov
jg
mov
lock
sar
idiv
xor
inc
pop
mov
nop
int
cmp
xor
fisubs
pop
addb
push
jbe
insl
dec
xchg
jmp
cmp
jecxz
sarb
xchg
or
dec
mov
or
call
pop
or
xlat
push
dec
lds
cs
ljmp
adc
out
xor
insl
es
xor
dec
jmp
pavgw
add
lds
cmpsb
lret
lahf
sub
out
adc
pop
sbb
push
cs
ja
xor
repnz
cmpsl
xor
ret
movb
filds
pusha
xor
cld
mov
in
pshufw
movsb
aaa
inc
movb
add
sbb
mov
sbb
xor
das
push
xor
mov
clc
roll
mov
lock
mov
xor
repnz
js
sub
push
jg
lcall
popa
add
push
xchg
pop
xchg
es
jg
xor
clc
jg
mov
mov
data16
repz
mov
pop
mov
lock
jle
and
adc
das
clc
add
gs
outsb
pop
nop
xor
and
pop
jne
cwtl
add
mov
std
push
aas
fs
neg
xor
pop
es
push
scas
pop
push
popf
es
cli
push
dec
sahf
leave
roll
mov
data16
xchg
lahf
cmpsb
sbb
add
mov
bnd
enter
dec
or
pushf
mov
mov
cli
xor
xchg
inc
fildll
scas
cmpsb
data16
sub
xchg
loop
les
scas
xor
fistps
in
xor
imul
jne
mov
and
ret
or
sbb
std
sub
jno
into
pop
loopne
cmp
xor
cld
sbb
lds
clc
icebp
and
jo
xchg
xchg
es
orb
fld
sbb
adc
rcr
dec
loopne
es
sti
repz
xchg
aaa
mov
mov
add
inc
push
in
xor
and
jae
repz
int
filds
sub
jae
stc
dec
jns
jp
jmp
movb
ja
jg
add
pop
dec
sti
sbb
incb
lea
xchg
xchg
dec
push
je
fiaddl
icebp
out
idivl
mov
sub
mov
mov
in
call
std
fnsave
pop
fdivrp
mov
push
xchg
and
mov
lcall
cltd
rorl
nop
movl
cmpsl
lock
xchg
lahf
in
iret
inc
iret
dec
sarl
jnp
mov
hlt
mov
xchg
push
push
orb
push
jl
jmp
aam
adc
jg
mov
xlat
cs
sub
jbe
pop
push
int
shrb
pop
inc
outsb
fmuls
push
ud0
aas
adc
jo
fmulp
out
and
call
in
ret
cld
pop
add
jg
push
into
jmp
mov
pop
add
inc
push
ret
mov
cmp
sub
in
leave
jmp
cs
mov
sti
loop
adc
cmc
xchg
out
and
and
pop
fs
and
das
js
lock
rcll
mov
loop
test
fisubrs
inc
jnp
lock
xchg
shll
stos
mov
adc
testl
dec
lock
icebp
cmp
push
ffreep
mov
sub
std
cmp
sbb
inc
scas
in
mov
in
or
iret
sub
and
push
lock
lds
cld
and
popf
sub
jmp
enter
xor
adc
repz
or
rcrl
push
ds
das
jmp
cmp
pop
mov
shrb
out
out
xor
push
cmc
or
sub
out
sub
xor
aas
add
jbe
xor
sbb
mov
sbb
js
rcrb
out
sbb
push
ss
imul
jle
cmpsb
xchg
jg
jle
pop
std
enter
cld
mov
pop
push
push
inc
lock
mov
and
into
adc
or
add
loopne
movb
mov
ret
sti
jbe
call
pop
dec
cli
jmp
fildl
roll
fwait
or
rolw
lret
dec
add
cli
adc
add
int
incl
das
mov
mov
jns
movb
mov
sbb
call
mov
out
jecxz
jp
add
sbb
into
add
adc
add
cmp
xor
negl
rcrl
pop
leave
and
inc
loope
ficomps
mov
mov
sti
add
add
and
js
pop
add
fdivl
int
cmpsb
ficoml
in
icebp
push
dec
push
leave
and
or
cld
add
daa
cs
shl
sarb
adc
lret
sbb
cmp
fstpl
into
aam
sbb
pushl
jmp
mov
sarb
mov
repz
fisubl
aam
xchg
jbe
push
in
jl
data16
enter
and
pop
div
and
gs
ss
jge
fdivp
out
pop
push
sbb
leave
add
push
repnz
jge
cs
test
outsl
icebp
sbb
pop
popa
xchg
mov
shl
dec
mov
rcll
pop
pusha
mov
stc
jecxz
scas
rolb
scas
mov
stos
jns
sbb
mov
xchg
inc
popa
lret
fsubrl
pop
inc
mov
orb
ds
pop
insb
and
hlt
add
push
mov
mov
decl
test
andb
in
pusha
ljmp
enter
sahf
mov
add
sub
rorb
fwait
cmpsb
add
pop
stos
jle
scas
fistpll
imulb
inc
loope
lea
fmulp
je
ret
out
sub
popf
hlt
mov
sbb
insl
and
loopne
adc
shll
push
xor
add
push
sarb
lcall
loopne
push
in
sti
loop
jmp
jge
lds
out
xor
clc
movsb
pop
push
outsb
jo
mov
mov
push
add
loopne
ds
cld
push
js
push
outsl
or
lock
icebp
pop
scas
add
inc
xor
jne
ficoml
jge
inc
cmp
enter
incl
fisubrs
cmc
popf
test
mov
xlat
movsl
rcrl
push
scas
ss
mov
std
decl
es
test
repnz
popa
add
incl
incl
mov
mov
pop
pop
out
inc
pop
ljmp
clc
add
mul
ss
add
sub
cs
ss
pop
lock
outsb
push
les
dec
ret
jecxz
mov
add
sahf
mov
mov
in
js
lret
into
push
mov
sub
sbb
add
mov
inc
out
cli
es
sub
mov
ret
sar
aam
lods
xor
fistps
nopl
in
out
inc
inc
leave
mov
fldenv
pop
pop
test
inc
repnz
idiv
in
movsl
addr16
add
lock
mov
clc
xchg
push
jb
lock
outsb
or
add
mov
cmp
es
gs
in
popa
ret
js
lock
xchg
cli
sbbl
xchg
dec
mov
push
outsb
mov
les
pusha
popa
pushf
popf
subb
clc
mov
pop
aaa
sub
ja
insb
push
nop
repnz
outsl
test
jno
mov
inc
testl
mov
std
pop
xchg
in
mov
push
mov
adc
jae
ja
xor
sar
pop
mov
out
icebp
rol
icebp
roll
xor
cltd
xor
into
mov
mov
pop
pop
sbb
int
jbe
jecxz
dec
jp
mov
push
dec
push
jle
pop
mul
out
addb
imul
xchg
mov
push
pop
leave
dec
call
sbb
inc
sahf
shll
and
pop
leave
fcom
and
xchg
jg
dec
inc
shr
dec
test
jnp
out
sarb
and
imul
dec
rol
sub
mov
push
sub
jbe
push
stos
test
jle
outsb
sub
nop
incl
into
mov
jle
sub
sbb
sahf
mov
into
add
call
and
les
sbb
xor
das
and
fnsave
pop
cmp
lret
ds
sub
pop
add
jg
out
push
and
jge
roll
outsb
inc
daa
or
add
es
dec
shr
sub
fsubrp
pop
mov
dec
push
iret
ja
incl
lret
into
mov
add
and
add
mov
lret
filds
int3
outsb
sarl
mov
xor
mov
xchg
dec
cli
test
push
mov
es
mov
dec
loopne
sub
outsb
dec
or
sti
out
mov
sub
sti
jnp
xor
dec
or
lock
in
mov
jae
add
pushl
jle
add
lock
int3
js
jno
jg
pop
jo
dec
movb
fstps
aaa
dec
jo
negl
cld
fisttps
test
and
test
out
es
pop
scas
mov
add
std
imul
icebp
fnstsw
lret
xchg
sarb
ja
jo
rcrl
imul
mov
movl
mov
dec
into
in
cmpsl
pop
mov
insb
push
ret
jle
push
xchg
jo
push
cmpb
rclb
xchg
in
push
test
xchg
outsl
adc
jno
outsl
xor
popa
arpl
jg
mov
or
addr16
ret
mov
pop
sub
fldl
pop
mov
pushw
xor
repnz
pop
cs
aad
sbb
cmpsl
push
xor
add
lret
sbb
test
outsl
lretw
dec
rorb
nop
jmp
cmp
pop
cmpl
insb
int
inc
add
outsl
and
stos
mov
outsb
pop
mov
gs
pushf
bnd
push
call
inc
pop
into
push
push
aam
in
dec
into
insl
sub
fistpll
shrb
out
pushf
or
sub
cld
fdivrs
jno
push
inc
and
cld
ja
pop
jle
pop
mov
movsb
mov
add
in
add
jmp
adc
push
out
push
xchg
jl
push
repz
test
jno
sarb
sub
push
sub
adc
adc
add
and
jg
add
and
lcall
ljmp
cli
outsl
rorb
outsl
pusha
ss
mov
cs
outsl
pop
add
bound
popf
or
nop
push
out
aam
ficomps
or
lahf
out
jmp
dec
imul
push
jo
test
leave
pop
jo
adcb
movsl
arpl
rorb
push
loopne
mov
sub
cmp
repnz
mov
sarb
inc
clc
repnz
mov
rcr
inc
repz
inc
mov
bound
xchg
cld
dec
cld
or
shlb
aas
push
sub
pushf
stos
gs
jmp
push
dec
jmp
in
dec
repnz
add
test
pop
cmc
jecxz
mov
fs
scas
sbb
maxps
jbe
fsubrs
dec
clc
fwait
aas
adc
dec
int
test
inc
xchg
jle
jmp
fildll
xor
jnp
inc
inc
aas
call
clc
xchg
mull
xrelease
pushl
push
sahf
jnp
int
pop
pop
push
aas
mov
out
push
cmp
rclb
xchg
mov
push
scas
push
jl
or
dec
mov
push
outsb
cltd
dec
cmp
roll
push
pop
je
jb
mulb
fistl
pop
test
jbe
out
fidivl
aaa
sbb
pop
sahf
jno
jae
push
dec
ficompl
sbb
lock
fldcw
shl
das
push
sbb
clc
dec
lret
xchg
notrack
cs
insb
fisubrl
cwtl
dec
mov
aaa
adc
je
fadd
dec
lods
mov
ljmp
lret
push
div
hlt
dec
sbb
jmp
and
imull
xchg
pusha
cmp
inc
hlt
xchg
outsb
mull
dec
gs
outsb
add
pusha
mov
leave
aad
or
or
cmpsl
and
dec
insb
idivl
aam
dec
idiv
ljmp
andl
idiv
sbbl
pop
ret
pop
xchg
xchg
sbb
clc
shr
repnz
pop
lock
dec
ljmp
jg
pop
jle
xchg
xchg
rorl
push
out
divb
adc
out
bound
lock
inc
push
push
daa
loope
loop
jmp
or
ljmp
cmpsb
movsl
jecxz
lock
mov
sbb
pop
rclb
lret
repz
sub
out
or
call
ret
xor
add
fisubs
mov
add
mov
dec
rcrb
inc
xor
repnz
mov
arpl
sarl
pushl
pop
inc
out
lret
add
jns
pop
aad
jecxz
jmp
fsub
sbb
enter
adc
daa
hlt
insb
add
test
ja
adc
fwait
hlt
int3
xchg
pop
int
xor
mov
sbb
leave
into
repz
rol
icebp
sub
das
mov
pop
push
roll
pushl
cmpsb
cli
clc
xor
mov
sarl
shrb
push
ljmp
nop
pop
mov
lds
jmp
hlt
push
sbb
cs
adc
mov
addr16
cmp
cmpsb
jb
ficomps
out
add
inc
fsubr
jbe
flds
and
adc
sbb
push
lock
enter
inc
rorl
das
cs
into
jle
pop
stos
sub
sub
mov
aam
and
pop
ja
pop
mov
push
stos
mov
incl
mov
insb
rcr
bound
adc
aaa
and
call
push
into
pop
mov
test
mov
push
into
fdivs
sti
in
jg
test
jle
push
icebp
add
xchg
mov
js
fucomi
int3
add
sbb
push
hlt
push
sar
push
lds
dec
cltd
movsb
test
sbb
adc
cmp
or
addr16
es
rcr
mov
mov
push
or
fwait
lock
out
inc
xor
test
mov
loope
dec
cld
out
or
sbb
push
mov
into
in
das
mov
aas
mov
negb
jl
test
add
scas
sub
imul
xchg
ret
clc
pop
lcall
lock
xchg
out
lods
cmp
dec
icebp
pop
mov
pop
pop
and
stos
and
jmp
sti
gs
out
mov
invd
pop
push
cli
std
jecxz
sti
xchg
adc
lock
pop
cld
push
es
push
mov
clc
mov
dec
dec
sub
lret
pop
mov
push
incl
cli
in
repz
or
xchg
add
lret
xlat
rorl
jo
aam
idiv
out
js
std
es
mov
and
test
mov
dec
inc
dec
xchg
inc
fldl
fs
jnp
in
sbb
mov
shrl
mov
dec
ss
mov
lcall
ss
and
sbb
jge
xor
fiaddl
jmp
sbb
out
sti
lds
and
call
or
movl
and
and
and
call
mov
pushf
out
divb
loope
icebp
aam
mov
adc
adc
dec
pop
lock
outsb
lds
or
add
jle
fwait
and
stc
insl
jmp
mov
roll
mov
pop
and
push
gs
decl
lock
out
xchg
pop
cmp
mulb
dec
into
mov
outsb
cmp
add
sub
aas
or
mov
push
add
fisubrs
into
notb
jge
dec
jmp
in
pusha
cmp
fildll
pop
mov
pushl
ret
and
cld
sbb
cmp
push
test
jno
jmp
and
xchg
test
jbe
insl
aad
or
pop
mov
call
xchg
mov
stos
mov
enter
movsl
in
aad
fnstenv
call
inc
jbe
ret
jo
pop
cmpsb
mov
out
and
cmpsb
and
into
or
cmc
adc
push
xchg
sub
inc
cmc
ja
outsb
jle
test
testb
add
aaa
jo
int
pop
js
sar
cmp
push
stos
inc
cmpsl
roll
repz
movsl
movsb
fs
nop
mov
sub
xchg
repnz
iret
loope
scas
mov
and
pop
loopne
mov
mov
aam
mov
inc
mov
pop
adc
sbb
stos
in
loope
stc
mov
rcrb
in
stc
shl
push
push
push
cmc
lcall
ljmp
es
pusha
popf
adc
or
jg
sbb
ss
xor
cmp
pop
hlt
ljmp
fucomip
xchg
lret
xor
insl
mov
dec
mov
lahf
jp
xor
xor
jb
je
lret
jns
or
test
data16
hlt
xchg
xlat
mov
ss
cmpsb
test
lock
jmp
lret
lock
sbb
xchg
adc
or
xchg
test
inc
js
dec
outsl
test
fs
jo
xchg
cmp
scas
repz
shll
push
out
mov
xchg
aam
cmpsb
popf
dec
pop
mov
and
jo
mov
xorl
adc
pop
movsl
cmp
add
pop
jl
mov
xlat
mov
lea
add
pop
xor
inc
xchg
into
and
outsl
andb
movsb
imul
and
dec
inc
or
push
test
dec
push
xchg
adc
cmp
fidivl
xchg
fcmovnu
sub
sub
sub
xor
lsl
andl
or
jmp
popf
mov
mov
cld
jno
clc
add
and
ds
cmc
add
data16
mov
mov
lea
push
pusha
shll
rorl
popf
les
popa
insl
and
jbe
imul
inc
cld
add
lahf
inc
jecxz
loop
mov
or
call
dec
cmp
inc
outsb
and
adc
and
lds
pusha
pop
mov
out
xor
xchg
mov
add
sub
pop
push
jne
leave
inc
ja
push
or
mov
imul
stc
cmpsb
jb
inc
in
mov
sahf
lret
idivl
xor
mov
data16
or
xor
fdivl
imul
aas
and
negb
sub
test
fcmovbe
jecxz
vcmpss
inc
mulb
clc
pop
push
lea
std
cld
sub
adc
xchg
ret
loopne
dec
dec
push
jno
loop
pushf
mov
cmp
inc
out
adc
shlb
mov
push
call
dec
pop
inc
mov
icebp
jbe
stc
and
outsl
jbe
out
mov
sbb
nop
fnsave
scas
jno
fwait
sub
mov
add
mov
in
add
bound
dec
sbb
stos
cmp
loopne
cmc
pop
cltd
inc
stc
clc
adc
shll
adc
stc
clts
pop
sbb
inc
divl
notb
out
mov
and
imulb
mov
push
in
xchg
fisubl
adc
cld
push
hlt
and
pushl
push
push
fcom
push
jns
cld
call
jnp
mov
notb
dec
xor
daa
dec
or
mov
fcmovne
cmpsb
xor
hlt
aad
mov
call
in
dec
fisubs
push
xchg
fs
aas
mov
cmp
fldl2e
inc
jecxz
sbb
dec
cmp
aaa
popf
sar
push
repz
pushf
cmp
adc
out
enter
xchg
bound
std
sbb
jle
mov
adcb
mov
into
loopne
test
and
jmp
nop
mov
jge
sbbb
sub
jle
jg
inc
mov
ret
fcoml
rolb
fs
jmp
into
pop
cmc
mov
scas
or
mov
std
stos
add
mov
sub
into
sub
or
inc
shlb
clc
fcomip
push
jmp
mov
pop
mov
fucomp
iret
cld
xor
leave
clc
pop
xchg
xlat
adc
dec
jb
push
sub
fisttps
incl
seta
cs
adc
fwait
add
sbbl
mov
push
call
jns
int3
mov
stos
jbe,pn
aaa
add
imul
xchg
mov
push
xchg
data16
scas
adc
jno
call
sub
jae
ljmp
and
loop
shr
repnz
jg
addr16
scas
pushl
add
std
or
add
xchg
inc
dec
rcll
mov
outsb
xor
sbbb
incb
xchg
call
mov
push
call
mov
lock
xor
insb
adc
pop
loopne
sti
int3
call
sarb
test
in
cmpsl
les
ja
clc
das
jle
repz
dec
in
jge
add
or
negb
out
sub
lock
rorl
mov
jns
jo
out
pop
add
jge
in
inc
push
fistps
cli
dec
pushw
jge
ret
pcmpgtb
sarb
add
or
cltd
rcrb
adc
pop
into
xor
push
notl
xchg
lock
push
fdivl
pop
mov
xchg
and
data16
std
xchg
lock
bnd
adc
fisttps
clc
push
sbb
mov
outsl
add
dec
cmp
add
pop
loopne
cmp
pop
xlat
ret
cmp
fisttpl
in
jg
test
mov
mov
jp
jge
jno
jecxz
sbb
ljmp
jo
push
pusha
cld
jl
jl
fidivrs
and
and
jbe
sbb
mov
mov
pop
add
test
sub
push
push
lret
rorb
divb
leave
inc
mov
arpl
into
outsb
call
push
std
sar
bound
jg
fwait
test
push
and
mov
inc
cwtl
cld
adc
lahf
rcl
lods
aaa
xchg
iret
test
icebp
mov
and
loopne
fistpl
mov
and
push
lock
jbe
jl
sar
and
or
into
ds
cmc
sbb
scas
ss
ljmp
push
insb
std
scas
loopne
mov
loopne
pop
mov
xchg
ja
shlb
ss
mov
and
xor
scas
push
call
popa
test
push
out
inc
clc
mov
mov
jae
cld
scas
inc
pop
push
pop
bound
cmp
push
dec
xlat
out
jae
add
incl
xor
shrl
xchg
cmpl
or
loopne
or
movsl
js
inc
and
push
push
ljmp
incl
mov
sbb
add
sub
mov
push
jbe,pt
cmp
js
dec
adc
mov
and
ss
ret
into
rorl
pop
es
call
add
mul
or
push
sarl
jbe
sar
inc
fimuls
push
fidivl
into
popa
call
outsb
ficoms
cmp
jo
mov
push
ret
sub
scas
push
push
in
in
pop
or
ss
add
fistps
sbb
dec
xor
sahf
inc
lock
dec
data16
adc
jae
inc
dec
inc
and
inc
fimull
dec
cld
inc
xchg
fnstcw
push
js
ja
ljmp
mov
aad
and
jo
rclb
decl
stos
dec
int3
jne
addl
sbb
pop
es
clc
sti
cmp
pushf
jecxz
mov
adc
popf
outsl
fisubs
fnstcw
enter
cmp
outsl
push
sbb
push
stc
orb
pop
and
shl
dec
les
push
lea
into
negb
clc
pushl
cltd
add
pop
fmuls
int3
push
xor
cmp
dec
inc
push
xchg
push
pusha
jb
sub
cld
mov
enter
add
ja
les
loop
push
mov
scas
mov
lock
enter
lods
mov
add
call
out
cmp
daa
mov
mov
ss
mov
sarb
std
adc
daa
xchg
adc
jmp
lods
aad
imul
push
xor
add
inc
sub
rcll
or
sahf
je
jmp
daa
and
ss
imul
inc
and
fisttps
es
fwait
mulb
xor
iret
jge
mov
and
imul
push
addb
fisubl
aas
mov
testl
add
xchg
inc
adc
imul
std
push
add
lret
dec
add
leave
push
adc
sahf
jbe
pushl
or
pop
scas
and
cs
je
mov
sbb
jbe
mov
jmp
incl
incl
lods
push
cmp
addl
pop
sub
xor
sar
cli
int
and
mov
rolb
jb
push
stos
int
pushl
xlat
loopne
ja
xor
test
cs
dec
jle
imul
cltd
rorb
sbb
pop
mov
into
iret
sub
pop
fists
popf
dec
mov
decl
jecxz
rolb
jae
enter
ds
es
sub
ljmp
rcrb
mov
jmp
ljmp
adc
int
fadd
lahf
xor
add
adc
call
mov
or
fimuls
repnz
adc
inc
frstor
jg
std
cmp
xlat
mov
lds
mov
decl
dec
inc
cmp
sarl
adc
dec
cmp
std
jmp
push
pop
inc
out
lcall
jbe
lret
cmp
out
lcall
scas
inc
mov
jb
inc
xor
insl
es
sbb
jmp
lcall
add
clc
pop
daa
xchg
jne
loopne
hlt
jg
movsl
jae
in
les
rcl
add
ret
aaa
pop
add
fsubrl
xchg
jo
jnp
mov
mov
out
or
fbld
loope
push
test
loope
push
xchg
ss
mov
jmp
in
hlt
sbb
push
loop
or
call
xor
ret
jg
mov
sbb
sbb
push
or
test
clc
jb
add
fisttps
aas
cmp
ja
mov
repz
inc
add
sbb
das
insb
sub
fmull
lret
dec
adc
mov
mov
cltd
pop
adc
fistps
repz
aaa
insb
fisttps
lea
ljmp
cld
adc
out
lcall
lods
sub
sub
jmp
jmp
std
stc
mov
push
push
ss
repnz
and
push
call
inc
sub
cmp
subb
and
jl
loope
jg
cmp
mov
mov
ja
sub
mov
fidivrs
mov
jg
lock
imul
xchg
adcb
adc
enter
call
add
insb
or
mov
ret
stos
sub
and
jg
adc
add
mov
test
add
aas
lret
in
inc
jg
pusha
aad
imulb
pop
mov
add
mov
fcos
inc
imul
xor
mov
xor
insb
icebp
scas
add
jns
imul
add
into
rclb
pusha
inc
pop
loopne
adc
add
sbb
add
std
fisubrs
mov
sbb
aam
outsb
aaa
or
mov
scas
xchg
call
xor
lock
std
xchg
repnz
hlt
aaa
repz
mov
jbe
cmpsb
cmpb
leave
mov
aad
pop
push
filds
mov
cmp
pop
pusha
xchg
and
sahf
ss
push
jbe
rcrl
xorl
inc
push
cs
jns
inc
xor
int
and
adc
ljmp
movsl
cwtl
inc
push
inc
fwait
cmp
push
loope
jg
jg
cmpsb
cld
daa
idiv
cli
sub
popl
jo
xor
loopne
iret
arpl
les
adc
add
jo
adc
scas
lret
pop
nop
ljmp
lock
decb
sbb
loopne
pop
and
push
xor
call
push
loop
dec
push
jle
pop
pop
and
and
rcl
icebp
std
push
push
rcl
xchg
pop
xor
in
incl
or
xor
loopne
or
add
outsl
cmp
int3
push
das
lahf
aaa
or
sahf
inc
sub
in
inc
add
add
inc
loope
notl
movsl
push
scas
shlb
pop
push
sahf
arpl
stc
jmp
and
std
out
push
leave
or
cmpsb
repz
pushf
mov
mov
hlt
jmp
xor
jae
lock
popa
sbb
inc
add
vmaxss
push
xchg
fst
fs
cmp
push
loop
or
jb
mov
into
push
fcoml
sub
adc
inc
sbb
push
sub
scas
xorl
outsl
cmpsb
lock
mov
int
sbb
cmp
lcall
and
jecxz
hlt
into
and
add
jne
mov
fdivl
call
and
jle
in
clc
aaa
pop
mov
mov
pop
mov
adc
fwait
leave
icebp
fwait
push
mov
insb
add
mov
arpl
rcrl
incl
in
pop
and
add
imul
loop
adc
ja
fists
inc
and
es
and
insb
adc
call
and
out
xchg
in
adc
mov
xchg
cmp
lret
sbb
jmp
pushw
aad
enter
in
add
cmp
pop
outsb
adc
pop
loope
icebp
decl
push
popa
add
and
jle
repz
mov
sahf
jno
lret
mov
mov
sti
jl
mov
xchg
push
jbe
sahf
stc
fsubrl
and
icebp
push
push
xchg
popf
outsl
xor
jle
cmpsl
xor
mov
push
dec
cli
ljmp
xchg
pop
enter
out
add
fidivs
push
insl
rcrl
gs
sti
icebp
bound
and
insl
test
xor
push
cmp
inc
push
sahf
pop
cmp
dec
mov
aam
insl
xchg
rcr
xchg
rol
decl
mov
dec
xchg
mov
inc
cmp
les
inc
mov
cmp
push
dec
mov
int
sbb
lods
push
add
xchg
or
pop
jo,pn
cmp
out
shrb
mov
iret
movsb
cmp
jge
pop
popa
out
iret
push
jg
call
rcll
cmp
shll
fisttps
push
add
lret
int
adc
sbb
inc
jmp
cmpl
dec
xor
fisttpl
cwtl
inc
test
addr16
data16
xchg
rol
test
mov
cs
inc
mov
call
xor
nop
dec
clc
stc
and
sahf
gs
jge
inc
xchg
icebp
aaa
subl
cld
mov
add
adc
pop
sbb
push
jle
fbld
dec
sub
xchg
xlat
rorl
mov
testb
xchg
lods
popw
cmp
lcall
add
jmp
sbb
push
mov
pop
mulb
lcall
mov
sub
or
scas
mov
aas
aaa
xor
jp
adc
cmpsb
or
mov
mov
mov
sub
mov
mov
enter
xor
insb
sub
push
roll
js
pop
pop
nop
inc
xor
or
decl
lea
add
aam
loop
sar
push
push
add
inc
push
and
imul
rcl
ja
pop
sub
lods
or
mov
xchg
xchg
mov
or
or
lret
incl
or
sub
jg
cwtl
dec
xchg
enter
and
pushf
pop
or
sti
adc
cli
sub
es
insl
daa
mov
push
aad
or
jmp
jle
xor
rorl
cmc
sub
push
add
lock
and
xchg
lret
sub
mov
ljmp
or
lcall
mov
and
adc
cld
mov
jmp
ja
mov
icebp
je
dec
sahf
push
push
out
clc
pop
dec
sub
pop
cltd
or
dec
push
inc
pop
mov
add
mov
loope
push
cmp
cmc
xor
and
mov
sets
rcll
push
push
pop
repz
es
dec
cld
sbb
xlat
mov
sbb
aas
xchg
push
jle
mov
mov
pop
jg
cmp
sub
loope
xor
mov
push
enter
add
lahf
dec
cmp
loopne
inc
mov
movsb
adc
and
iret
jb
int3
jg
mov
and
pop
negb
std
out
xor
sub
jge
test
repz
add
push
out
jo
icebp
out
out
xlat
sub
push
sbb
into
sub
sbb
movsb
mov
xchg
mov
cmp
ficoms
adc
sub
ds
test
lock
icebp
jg
push
adc
enter
sub
hlt
push
add
inc
or
jb
cli
pop
outsl
decl
nop
push
scas
sub
adc
into
cmp
mov
add
inc
mov
and
hlt
call
fstps
xchg
push
mov
jg
push
popa
repnz
and
adc
pop
push
sbb
test
ljmp
adc
sar
div
adc
call
add
mov
or
or
ret
pop
pushl
mov
xchg
lods
out
rclb
lods
jb,pt
aad
aas
push
cld
or
xor
negl
xchg
icebp
mov
inc
movl
cltd
cli
data16
or
or
ja
adc
mull
in
and
clc
jmp
shlb
enter
in
sub
mov
sar
inc
std
popa
outsl
lret
ret
mov
fidivl
lret
push
orb
loope
lcall
andb
and
dec
gs
daa
rcll
inc
jle
nop
stc
mov
loopne
sbb
and
mov
xor
out
fwait
sub
push
adc
clc
jns
ds
push
in
fisttpl
mov
pop
xor
add
sub
test
lock
lcall
xchg
leave
ljmp
arpl
push
lret
xor
fildl
out
call
das
add
lods
lds
mov
loopne
pop
jle
enter
test
fcom
outsl
loopne
mov
loop,pn
adc
ljmp
mov
daa
or
mov
ss
mov
leave
sub
push
clc
dec
daa
xor
aaa
call
into
pop
sub
jno
int3
fcompl
push
xor
divps
xchg
push
adc
incl
sbb
and
sub
fdivl
adc
pop
out
or
or
aas
call
add
rcr
iret
dec
stc
lret
enter
cli
aas
pop
int
aas
cs
lds
xorl
and
jp
inc
std
cltd
lods
mov
int3
and
sub
push
xchg
pop
xchg
jno
jle
sti
mov
rcr
jecxz
adc
cmp
test
ljmp
ja
mov
sub
xlat
jge
sub
das
or
lods
mov
cld
out
es
jle
and
add
leave
aad
pop
sbb
mov
mov
imul
and
fildll
ds
mov
addr16
cmp
cld
lock
pushf
mov
add
xchg
sbbb
daa
insl
loop
jg
ljmp
fwait
cmp
scas
insl
aas
ds
sbb
std
jmp
pop
adc
rol
sbb
cmp
dec
pop
in
icebp
pop
sub
add
inc
push
outsl
leave
inc
ret
lds
shrb
and
add
int
sbb
add
insb
xchg
aas
xor
ljmp
out
dec
sbb
icebp
push
aas
push
jo
aam
jge
test
or
sti
addr16
xchg
pushf
mov
sbb
cmp
adc
sbb
sbb
jmp
add
sahf
jo
aam
cmc
jbe
fistpll
xchg
orl
into
pop
cmp
shl
out
aaa
daa
or
inc
or
loope
call
movsb
push
out
jg
and
int3
sub
and
jmp
mov
push
rcll
pushl
or
sub
inc
rcr
dec
or
in
idivl
mov
adcb
stc
adc
adc
lcall
cmp
and
push
or
shll
jg
mov
xor
aaa
shl
xlat
shlb
incl
lret
ss
jg
icebp
aas
inc
sub
stos
mov
dec
mov
ss
or
mov
hlt
out
xor
pop
out
add
adc
shll
fidivrs
xchg
add
insl
addl
out
xlat
sub
std
xor
pop
adc
js
fadds
pop
push
jg
jle
or
ljmp
out
adc
nop
jns
lds
psubsw
pusha
dec
dec
or
ret
cwtl
mov
inc
loopne
aas
fs
jmp
add
std
or
and
lds
stc
loope
jecxz
ljmp
sbb
add
popa
cmp
popa
mov
das
aam
decl
push
and
aad
add
xlat
jns
jbe
dec
es
mov
aas
fmul
sub
sub
fsts
cltd
jbe
aam
out
jbe
xchg
ljmp
push
test
mov
pushl
mov
sub
scas
jl
xor
mov
ljmp
or
pop
xor
push
in
pop
and
aam
ja,pt
cmp
cli
iret
sub
fwait
jmp
pop
sbb
inc
mov
mov
cld
fdiv
and
adc
pop
cmp
push
mov
push
addb
adc
addr16
test
aam
cmp
loope
pop
sbb
loopne
lds
cs
scas
push
lock
imul
xor
mov
add
jo
mov
ljmp
cmp
jno
mov
int3
pop
pop
dec
pop
jge
movsb
dec
pop
shr
hlt
inc
xor
fimuls
cmp
imul
rcrl
std
mov
xor
lret
es
call
and
sbb
stos
cld
testl
aas
mov
clc
out
jo
jl
popf
push
add
cmp
loope
int3
and
aad
pop
and
push
divl
mulb
pop
mov
clc
out
sub
jg
xor
push
cmp
adc
jmp
lcall
int
mov
sahf
imul
sar
jmp
outsb
ljmp
fsubrs
cmp
testb
xor
add
and
pop
daa
ds
incl
into
fstl
test
scas
sub
jno
test
decb
inc
mov
cld
adc
sbb
sbb
xchg
mov
adc
mov
sbb
ljmp
adc
xchg
jbe
cmc
arpl
jne
mov
and
mov
insb
ficoms
orb
imulb
or
pushl
std
add
mov
adc
js
mov
imulb
lcall
mov
out
loope
add
ljmp
sub
xchg
ret
push
ret
jp
movsl
arpl
push
in
and
es
jns
test
ljmp
decb
mov
push
arpl
fildl
arpl
push
push
pop
call
push
fsubrs
out
or
sti
lea
andl
nop
rcll
lcall
movswl
adc
mov
fsubrs
adc
inc
jl
sbb
push
jnp
push
pusha
dec
movsl
pop
stos
dec
enter
lods
loopne
and
loop
divb
or
xchg
adc
sub
loop
cmp
push
jg
jle
insl
sub
shlb
and
mov
xchg
push
movl
dec
movsb
aaa
sub
add
or
sbb
mov
xchg
cmp
int3
cmp
les
mov
in
jne
inc
cmp
mov
sub
and
decl
icebp
pop
push
mov
jno
push
jg
push
adc
enter
dec
sbb
adc
je
mov
fwait
int
in
xor
fcomip
inc
aas
imul
outsb
out
iret
pop
sub
aam
xor
jg
call
jbe
inc
aas
mov
add
ds
xor
add
pop
lods
jg
imul
je
loope
test
test
outsl
test
pop
pop
push
add
or
lea
pop
inc
incl
ds
push
pop
sbb
add
cmp
lock
loope
xor
mov
push
mov
inc
push
jns
add
and
sub
imul
push
pop
repnz
addr16
lret
das
xchg
sub
mov
add
insl
or
mov
cmc
or
leave
sub
xor
loopne
clc
and
in
xchg
pop
loopne
mov
std
scas
mov
sub
outsb
push
push
jp
sub
fildll
imul
push
jle
mov
pop
cmc
or
ror
sbb
ljmp
and
call
or
push
shll
addr16
sub
nop
test
out
ret
fiaddl
cmp
sbb
incl
xchg
xor
int
cmp
and
repz
loopne
mov
xchg
xchg
dec
out
mov
les
pushf
sub
pop
popa
jg
mov
push
lods
addr16
jmp
or
shll
and
xchg
lock
clc
int
jg
dec
sbb
out
sbb
movl
xchg
jbe
mov
adc
adc
test
mov
jle
js
push
sub
sbb
inc
push
loopne
dec
notb
mov
jge
jmp
sub
in
dec
pop
sub
pop
das
and
cld
xchg
cld
sbb
sti
mov
adc
outsl
jmp
int
xor
es
sarb
and
push
out
cld
fwait
mov
and
dec
les
popa
insb
stos
sbb
sub
fldt
shl
incl
lea
ret
xchg
cwtl
aas
jbe
addb
xorl
lret
push
loopne
pop
xor
jo
dec
xor
in
cwtl
mov
add
fnstenv
sbb
push
mov
and
mov
pop
sbbb
out
cmc
in
scas
add
imul
in
push
in
cwtl
adc
adc
and
cld
pushl
mov
scas
std
stos
and
lcall
cmp
push
int3
jbe
and
dec
inc
sub
aaa
test
add
mov
mov
and
mov
mov
xor
sti
lret
push
jle
rolb
into
add
call
add
cld
sbb
imulb
call
shll
lea
pop
lock
jnp
jne
pop
orb
push
shll
mov
sti
push
xchg
testb
fs
call
std
lcall
popl
rcrb
sarl
mov
sbb
scas
xor
stos
rol
les
push
movb
cmpsb
and
and
ljmp
bound
sub
aam
mov
das
fiadds
xor
mov
dec
push
je
jp
cmp
cmp
nop
cs
push
jmp
aaa
fldl
cs
fiaddl
mov
xor
and
aaa
xchg
iret
xor
out
or
stos
in
fmulp
ds
rcrb
test
daa
push
xor
pop
adc
jmp
fiadds
fnstcw
push
cli
call
lea
sarl
mov
xchg
movsb
jg
add
jge,pn
callw
cmpsl
pop
lock
mov
pop
pusha
push
lds
out
daa
fwait
pop
neg
jl
std
call
in
jae
mov
loope
jecxz
dec
rclb
cmp
mov
or
sbb
ss
das
mov
std
cmp
dec
in
sbb
sbb
sub
sbb
add
inc
mov
adc
iret
cmc
or
add
inc
inc
out
clc
adc
pusha
loopne
mov
add
nop
incb
out
fistps
mov
shll
or
xor
sub
cld
loopne
frstor
or
or
loope
aas
insb
dec
xchg
les
lcall
incl
call
mov
dec
push
out
adc
cmpsb
rcrl
lahf
call
inc
pushl
out
push
or
xor
sub
jle
sbbl
dec
sub
inc
ret
ds
push
xor
mov
leave
jecxz
sti
int3
mov
adc
push
xchg
xchg
xor
sbb
push
into
add
push
xchg
mov
clc
push
add
aad
sbb
cmp
adc
inc
cmp
sahf
mov
andl
cwtl
add
pusha
jmp
aas
addb
jge
or
pop
push
ficompl
cltd
mov
xchg
jg
call
xor
and
call
push
lds
clc
ljmp
lret
flds
adc
inc
pop
cmp
iret
jbe
lahf
or
mov
push
add
xor
push
cmpsl
push
mull
movsb
dec
jg
or
incl
and
and
or
pop
dec
ss
push
jl
and
mov
sahf
in
and
test
mov
mov
mov
sbb
cmp
sbb
shr
sub
add
mov
out
adc
cmp
xchg
xor
sub
adc
mov
cmc
and
or
pop
decl
inc
and
xchg
jecxz
inc
and
push
or
adcl
sub
inc
test
arpl
div
out
push
push
sbb
out
repz
mov
stos
dec
mov
sub
xchg
daa
dec
cmp
stos
cmp
in
push
mov
cmp
sbb
or
xchg
or
data16
jp
ljmp
and
xor
xchg
push
mov
les
ja
inc
insl
shll
sbb
or
mov
jg
outsb
adc
scas
andb
adc
test
sbb
out
sbb
sbb
cld
jecxz
dec
and
or
and
loopne
ficoms
xchg
das
inc
outsb
xor
push
sbb
sbb
jmp
stos
cmp
cmp
movsb
ret
mov
or
and
aas
sub
mov
push
hlt
std
enter
mov
cmp
xor
fidivl
lock
push
shlb
mov
push
sub
cld
ljmp
cmp
idiv
loopne
lods
sub
add
and
sti
add
xor
das
xor
filds
insb
adc
sub
lock
push
cmp
push
bnd
pop
lcall
push
aas
xor
pop
sbb
shlb
mov
lods
stos
sub
or
adc
movsl
adc
lds
sti
movsb
cld
mov
adc
xor
loop
loope
adc
lahf
icebp
add
cld
loop
mov
movsb
mov
lds
xlat
cmp
jecxz
clc
cs
add
mov
cmp
cmp
stos
lcall
int
xlat
in
es
sub
test
divps
ljmp
xchg
aad
and
sub
pushf
jg
sbb
fst
sar
out
out
mov
outsl
mov
xchg
daa
inc
add
mov
popf
xor
inc
lahf
pop
jmp
call
repz
dec
and
jle
fsubp
sbb
adc
and
shl
and
cmp
call
sahf
loopne
ss
sbb
das
push
loope
test
movsb
mov
aaa
sbb
xchg
push
fwait
jnp
js
mov
aas
adc
pop
xchg
xor
fisttpl
inc
lret
inc
js
add
mov
push
dec
mov
lcall
sub
inc
mov
outsb
movsb
sub
sbb
cld
ja
or
ret
data16
mov
mov
fsubrl
int3
add
jle
ret
xchg
jl
aad
inc
mov
jle
mov
add
outsl
cli
ljmp
push
cmpb
pop
adc
jecxz
gs
xchg
jbe
ss
scas
inc
jg
icebp
lcall
sbb
test
sahf
sub
pop
fldcw
and
lcall
jge
popf
int3
fiadds
jl
mov
imul
ljmp
inc
mov
sti
pop
mov
inc
scas
fdivr
outsl
cmp
aam
pop
mov
out
into
cmovle
mov
out
sahf
cltd
adcl
aaa
push
data16
es
stos
mov
ds
test
lret
lods
lods
lods
lods
or
push
fnsave
lods
lods
lods
inc
shlb
cmc
or
test
dec
aad
lret
pop
pop
pop
or
imul
jno
xchg
lret
lret
in
pop
pop
repz
push
mov
imul
push
outsb
bound
dec
outsl
mov
push
push
icebp
lahf
fidivrl
nop
rorb
xor
pop
test
jl
push
clc
cmpsb
int
or
or
push
in
lods
push
jno
push
xchg
andl
outsl
les
jg
rcrb
int
mov
sbbb
es
or
push
inc
ret
xchg
pop
inc
jp
push
sbb
mov
cs
shll
xor
adc
mov
push
fistpll
or
ret
mov
in
sbb
ljmp
mov
adc
mov
mov
ret
lahf
imull
pop
mov
lahf
push
add
out
clc
or
sub
mov
aaa
ss
fistpll
adc
inc
roll
adc
cmp
jo
das
adc
sahf
push
or
sub
fmuls
mov
fsubl
pop
cmp
pop
loopne
mov
xor
pop
adc
mov
popa
in
adcl
or
push
lock
inc
cmp
add
cli
aad
aaa
in
cmp
cld
adc
mov
push
icebp
divl
push
mov
loopne
loope
pop
pop
mov
sub
cmp
decl
and
jbe
filds
inc
sbb
sarb
repz
xor
fldl
push
inc
inc
ds
sbb
pop
dec
jns
leave
add
loopne
mov
push
sub
pop
lret
pushl
mov
mov
aas
int3
notb
sarl
shlb
std
ljmp
fcmovb
push
call
xor
push
sub
mov
cs
clc
jp
into
test
inc
cld
mov
je
dec
arpl
jg
sahf
and
enter
jp
in
pop
js
faddp
jecxz
das
dec
push
aaa
std
incl
xor
lcall
xor
lods
sar
cmp
mov
lret
arpl
jle
test
ds
mov
or
lret
jp
shll
cmp
pop
arpl
cld
jecxz
loop
jg
jb
cmp
aaa
push
lea
shl
sbb
mov
mov
push
test
daa
or
jns
int3
das
sub
lock
push
sub
cmp
jae
xchg
cli
cmp
loopne
cwtl
testl
dec
addr16
pop
adc
pop
fwait
sar
jg
out
push
in
cmp
sub
out
add
inc
inc
push
loopne
and
fdivr
pushl
imull
sub
adc
cmp
pop
lods
out
dec
jg
add
adc
xchg
cld
push
push
push
fsub
pop
jmp
mov
sbb
scas
cmp
pop
pop
clc
add
xchg
or
cltd
stos
add
mov
ja
and
movsl
ret
push
inc
mov
roll
lds
mov
subl
pop
addb
xchg
pop
ss
aad
aad
into
and
and
or
add
push
adc
and
push
inc
jg
clc
xor
dec
adc
popa
std
jns
mov
cmp
shlb
jg
lock
xor
mov
mov
jns
psrlw
add
dec
xchg
repz
mov
sub
in
xor
mov
xlat
popf
in
inc
add
inc
ret
xchg
out
outsb
xchg
dec
mov
pushl
dec
mov
inc
test
ret
sbb
sbb
sbbb
sub
inc
cmp
insb
loope
das
mov
fldt
inc
lcall
jg
fidivs
rol
sub
add
dec
inc
lcall
out
call
clc
ret
or
js
das
into
xchg
dec
stc
fisubrs
in
jp
aam
std
aas
in
add
cmp
pmullw
cmp
xlat
int3
int
pop
dec
sahf
dec
lret
decl
lock
idiv
pushf
sbb
sub
adc
push
sub
dec
into
pop
int
lahf
loop
adc
fdivr
stos
push
mov
sbb
and
lret
dec
dec
ljmp
sub
out
sbb
jmp
es
arpl
jo
lret
xor
sahf
xor
push
xchg
dec
sub
pop
adc
dec
pushf
dec
lret
ret
adc
and
aam
add
repz
lods
sahf
aam
divb
cmc
push
mov
hlt
jg
jo
int
adc
filds
aas
pop
adc
cli
push
or
push
shl
addl
insb
lret
jbe
sub
cmc
cs
add
addb
xchg
add
es
ror
jbe
frstor
pushf
sar
lahf
cmp
stos
out
lcall
ror
in
sub
data16
push
pop
sbb
ljmp
jmp
push
ret
fimull
lahf
ljmp
dec
outsl
rorl
shrl
ss
das
push
mov
ljmp
pop
push
iret
mov
fistps
cmpsb
pop
clc
in
ret
xchg
inc
outsl
inc
ret
cli
mov
pop
inc
loop
push
out
out
sub
sub
lret
pushf
pop
hlt
enter
pop
outsb
push
movsb
stc
mov
xor
das
mov
dec
ret
dec
cmpsl
jno
push
add
mov
sbb
mov
adc
jg
lock
aas
out
pop
inc
dec
clc
push
out
stc
out
mov
shl
incl
out
mov
hlt
into
sbbl
mov
out
xor
mov
push
xlat
aaa
push
hlt
dec
ffreep
jbe
sbb
sub
es
cmp
scas
hlt
mov
cmc
xor
mov
fldt
cmpsb
enter
int
push
push
xchg
ljmp
movsb
pop
sbb
xor
daa
sbb
es
incl
test
movsl
cmpsb
in
and
xchg
cmpsl
push
sub
adc
and
inc
shlb
and
call
ficomps
idiv
pop
out
xor
pushf
icebp
lds
loope
sbb
ljmp
fsts
inc
in
sar
dec
popl
mov
gs
loope
loopne
insb
lahf
jno
fiadds
or
push
incb
pushf
adc
aaa
movsb
xchg
outsl
cli
frstor
mov
test
cld
and
jl
call
rcrb
or
test
ret
cs
aad
popa
mov
lock
shr
or
inc
movsb
add
in
xor
pop
push
pop
in
loop
sbb
iret
xchg
movb
hlt
daa
inc
aam
sar
xchg
adc
test
sti
adc
loope
mov
je
outsb
push
subb
leave
pop
cs
add
ljmp
imul
xchg
shlb
repnz
fisttpl
pop
add
cmp
mov
lahf
or
inc
shll
std
lock
ljmp
pop
lret
in
in
xor
outsb
mov
push
call
shrl
negl
mov
icebp
aas
add
mov
repz
int
ret
es
fwait
lock
adc
test
push
dec
scas
cli
mov
mov
outsb
sub
fistps
cmp
inc
xor
loope
lret
call
loopne
out
adc
dec
dec
mov
filds
mov
jl
aad
ja
mov
jp
insl
out
xchg
mov
in
movl
sub
clc
sbb
scas
push
stos
fucomip
out
inc
dec
in
pop
dec
mov
neg
ret
or
jge
sub
xchg
and
aaa
mov
and
and
int3
popa
xorl
adc
mov
enter
jbe
xchg
mov
sbb
rorl
jae
xlat
dec
in
imulb
mov
fnstenv
mov
mov
pop
ljmp
jne
pusha
mov
mulb
clc
mov
dec
shrl
rorl
jns
xchg
in
and
inc
adc
dec
loope
filds
xor
mov
cmp
jne
cmp
pop
jne
shlb
jo
lahf
lock
cli
rcrb
adc
and
test
dec
dec
in
icebp
repnz
xchg
adc
test
rcl
data16
fldl2e
sar
jle
cmp
and
jg
shll
mov
jecxz
and
iret
cmp
push
sbb
decl
add
sub
int
and
cmp
sub
xor
leave
pop
bound
mov
xchg
lret
or
pushf
int3
push
cmp
sub
push
lcall
aaa
push
pop
xchg
adc
aaa
jns
push
loopne
movsl
cmp
in
mov
das
nopl
icebp
int
hlt
adc
cmp
rorl
lcall
lods
cld
decl
xor
add
aad
lret
and
addr16
push
out
mov
pop
xchg
cmp
mov
int
outsb
adc
jecxz
mul
cld
xchg
fistps
cmpl
in
xor
mov
sub
sub
pop
sbb
cld
mov
out
mov
sub
mov
mov
push
enter
into
dec
popa
jne
push
int3
add
iret
ret
jnp
and
push
and
jp
loop
aad
fadds
sbb
push
mov
jg
cld
push
jne
cmp
mov
sbb
pop
pop
inc
jno
add
jecxz
in
xor
xchg
add
mov
sub
adc
and
jecxz
add
and
add
xchg
lods
pop
test
xchg
clc
decl
adc
cmp
call
add
xor
les
data16
cmp
push
sub
mov
int
sbb
mov
outsb
mov
sub
int
sub
call
dec
jnp
call
fdiv
inc
xor
inc
xor
icebp
out
jge
mov
xchg
mov
add
jg
sbb
push
mov
sbb
xchg
push
push
add
add
xor
and
jns
in
test
sub
fldl
out
fwait
inc
adc
inc
rcl
scas
push
pop
lcall
fnstcw
sub
and
bound
pop
cmc
stc
movsl
popa
gs
jmp
and
lds
xchg
jge
call
cmpsb
insb
and
and
add
adc
inc
hlt
int
xchg
push
lock
jnp
mov
xchg
test
mov
int3
jecxz
icebp
pusha
sbb
mov
cld
mov
lcall
push
pop
cs
std
push
sbb
into
rcrb
out
dec
cli
mov
insb
inc
rclb
ret
es
decl
lods
and
fninit
std
dec
pop
in
dec
sti
jnp
shr
pop
push
inc
pop
sub
fs
xor
pop
out
jp
js
int3
hlt
in
add
mov
jg
cmp
ss
into
mov
inc
adc
cwtl
add
lods
in
and
ja
xorb
outsl
lock
dec
es
dec
adc
jg
ficomps
aad
loopne
pop
std
pop
jge
out
std
mov
rcrb
notb
mov
xchg
push
mov
mov
pop
decl
stos
mov
shll
cmp
add
push
repnz
mov
out
fs
and
mov
es
ss
test
adc
jecxz
add
pop
rcrl
xchg
mov
adc
clc
xor
ficoms
sub
test
jg
inc
jmp
and
fwait
ljmp
outsl
cli
push
push
rorb
mov
icebp
push
sarl
and
xor
adc
sbb
std
and
mov
jns
jmp
adc
enter
sti
or
adc
add
add
sbbb
inc
es
adc
xlat
mov
cmp
fwait
xor
pop
add
icebp
rcrl
mov
clc
sbb
or
add
pop
fs
cli
push
cld
pop
cmpsb
mov
fidivrl
sbb
pop
push
push
cmp
outsl
cmp
negb
leave
adc
or
fcomi
and
and
sbb
cmpsl
insb
mov
icebp
adc
pop
lea
xchg
cs
sub
push
js
lock
out
cwtl
jge
jbe
jmp
dec
inc
push
jecxz
sbb
xchg
jmp
fucomi
dec
lret
pop
out
fisttps
rcrl
xchg
or
jg
outsb
inc
jg
insb
sbb
out
lock
pop
loopne
out
inc
es
je
pop
xor
xorb
lcall
push
repz
cli
cmp
in
and
adc
stc
std
icebp
dec
inc
loop
sbb
iret
jg
pop
lret
repz
ljmp
fstps
mov
xchg
and
loope
pop
jmp
sbb
outsb
movsb
das
or
sub
jecxz
jmp
lret
pusha
jne
insb
push
jns
je
mov
imul
mov
incl
lods
cmp
popf
mov
rcrl
jnp
push
pop
cmc
das
xchg
mov
out
imul
loop
rolb
add
gs
ljmp
pop
aaa
pop
cwtl
xchg
push
mov
xchg
sbb
les
and
xor
mov
clc
lds
xlat
push
jmp
lock
or
dec
xchg
sub
loopne
lock
lret
daa
add
push
repnz
inc
loop
xchg
shl
roll
xor
shll
push
push
jp
incl
clc
inc
sti
fdivr
testl
xchg
xchg
push
mov
mov
adc
stos
xchg
jl
ljmp
inc
pop
lock
je
test
inc
xchg
test
aad
mov
jno
jbe
fcmovnu
call
jl
mov
inc
push
mov
les
xchg
cmp
pushl
push
jp
xor
out
jg
pop
jne
ret
jecxz
dec
add
jae
mov
push
out
sub
outsb
sbb
mov
jns
ljmp
cld
ljmp
filds
dec
add
pop
inc
mov
cmp
jg
dec
mov
fxch
jecxz
leave
xor
jg
or
arpl
decl
mov
dec
sub
stc
add
sbb
inc
daa
cs
mov
mov
ljmp
std
push
ljmp
lahf
lret
addr16
mov
jle
iret
ret
mov
js
jge
jg
test
faddl
inc
in
fcoms
loop
lock
sub
mov
fistpll
icebp
and
fsubs
sub
jge
shll
mov
cmp
out
jg
stc
fucomi
add
icebp
outsl
mov
out
inc
js
lods
fdivl
pop
mov
xchg
or
inc
pop
test
jnp
adc
int3
in
fldenv
fidivs
rol
inc
sbb
lcall
sub
sarl
imul
shrl
or
cmp
mov
cmp
dec
adc
inc
stos
out
decb
jp
cmc
pushl
es
sbb
jb
dec
mov
adc
loope
mov
pop
xor
and
imul
notl
cmp
ret
xor
jns
dec
lret
add
cmp
enter
ja
pop
mov
adc
sbb
add
ss
sbb
insb
leave
lcall
add
xor
bnd
and
pop
into
cmpsl
jg
in
pop
sub
xchg
rcll
incl
js
xor
inc
jle
fcmovb
mov
popf
mov
fadd
arpl
lock
push
cmp
repz
in
inc
movsl
out
shl
cmp
pop
or
xchg
pop
pop
stos
pushf
jb
cmc
add
and
fstl
mov
push
sbb
dec
xchg
ret
repz
ljmp
jecxz
pop
xor
daa
fcmove
cmp
cs
cwtl
and
addr16
cmpsl
rep
push
stc
jmp
xchg
pop
mov
shrb
sub
xchg
xor
movsl
adc
ja
nop
pop
into
test
add
aam
lock
mov
fadd
inc
xor
xor
xor
ja
sbb
or
outsl
popa
ffreep
and
cmp
jmp
inc
pop
aam
into
pop
xor
xchg
out
clc
jmp
xchg
stos
movsl
lods
fiadds
jno
dec
rcrl
xchg
rorl
orl
xchg
ret
jnp
fbld
dec
out
inc
test
push
pop
ljmp
or
xchg
out
or
cmpsb
adc
jg
jbe
sub
dec
sub
or
cmp
in
pop
ret
clc
and
push
or
in
js
add
xchg
loopne
fbstp
pop
xchg
jle
dec
lds
push
outsl
mov
adc
pop
sahf
lret
jp
cmp
push
pop
push
cmp
enter
sahf
jl
push
test
stc
sar
decl
mov
jmp
lock
xor
in
pop
jnp
push
lds
xor
and
mov
mov
in
pop
fcomp
sar
push
pop
jmp
dec
pop
xchg
pop
and
push
cmp
shll
xor
loop
pop
dec
add
jmp
test
lock
inc
and
ror
or
and
pop
inc
lods
ss
push
sar
xlat
mov
in
in
dec
mov
insl
lds
add
aaa
adc
ret
push
xchg
lods
shlb
into
xlat
mov
rcrl
inc
jnp
fstpt
test
test
call
lds
cs
mov
xchg
fldt
lcall
imul
test
insl
in
cmp
es
fildll
lret
mov
add
jp
lcall
pop
add
xor
push
aam
imul
jb
push
mov
in
ror
jge
xchg
or
sbb
ret
or
or
imul
ja
lock
mov
pop
loop
fsubl
lret
clc
scas
ret
mov
fucomip
out
out
dec
mov
xlat
or
inc
jg
mov
nop
dec
mov
das
decl
lods
in
mov
sti
roll
sub
stos
mov
mov
cld
dec
pusha
jmp
inc
lret
aad
adc
push
cmp
scas
jl
arpl
dec
pop
jmp
dec
fildll
bound
adc
pushf
pop
enter
pop
lods
xchg
clc
inc
loopne
lret
shlb
fisttps
mov
and
jnp
aaa
and
cmp
pop
xchg
loopne
loopne
sar
iret
mov
subb
jge
jne
lcall
mov
xchg
ret
dec
jg
movsl
xchg
roll
xchg
fildll
pop
pop
cmp
insb
mov
mov
adc
int3
pushf
pop
scas
cmp
test
xchg
fwait
and
in
dec
and
dec
cmp
lds
mov
xchg
lret
je
mov
movsl
call
insb
xchg
es
std
aas
push
vshufps
push
cwtl
ret
inc
hlt
add
add
sub
and
es
rcrl
cltd
mov
call
ret
pop
and
out
out
enter
ss
or
neg
inc
pushl
fnsave
xchg
inc
mov
scas
mov
pop
lret
jg
call
popa
insb
fucomp
addl
pop
cmp
jnp
cli
es
sub
xlat
jle
incb
ljmp
in
inc
lahf
xor
stc
lret
sub
push
push
cmpsb
push
clc
popa
inc
nop
adc
add
cld
push
cld
out
imul
xor
les
stos
cmp
or
cmp
mov
cmp
aad
mov
pop
sbb
mov
cmc
xor
jge
inc
std
call
mov
or
xor
jno
pusha
dec
stos
data16
stc
test
cmp
sarl
and
and
cmpsl
push
push
stos
xchg
vdivpd
cmpsl
ds
scas
aam
out
sbb
das
xor
aam
inc
jo
loopne
and
or
xor
comiss
xor
shl
fisubs
loope
mov
cmpsb
adc
cld
aad
jl
ret
rcr
ds
dec
out
xchg
xor
dec
je
sar
push
sarb
cmpl
cmp
pop
mov
call
cmc
ja
loop
jle
pushf
lret
popf
push
cli
mov
or
or
outsb
imul
les
pushf
outsb
lock
scas
inc
and
imul
xor
cmpsl
ret
test
fcmovne
pushl
pop
lods
aaa
inc
fnsave
dec
or
clc
sti
jl
mov
push
dec
clc
push
lods
fsubrl
jp
incl
jg
xchg
lea
out
xchg
mov
inc
mov
dec
sar
repz
push
fisubs
cmp
data16
cmp
ja
mov
mov
xchg
xor
ss
and
jg
icebp
clc
and
pop
xchg
jb
and
out
pop
add
mov
add
iret
adc
push
clc
lods
inc
jne
repz
mov
pop
stos
xchg
xor
jo
add
sub
inc
int3
adc
jo
js
pop
mov
fcoml
add
fstpt
sub
mov
jp
cld
mov
jl
adc
push
jp
add
repnz
jg
mov
fistpl
cmp
stc
mov
push
push
xor
mov
pop
sbb
push
sbbl
and
pop
repnz
aam
test
jbe
mov
pop
bound
mov
lret
jg
scas
mov
mov
dec
test
jbe
sti
inc
ja
xor
adc
fiaddl
shrb
mov
mov
sbb
lcall
mov
mov
pop
sub
jmp
cmpsl
aad
pop
mov
push
cmc
test
sbb
es
decl
call
sub
sbb
inc
call
test
add
test
movb
out
push
imul
xchg
jo
mov
mov
test
fbld
fistl
loopne
push
dec
test
std
mov
mov
scas
aam
ja
clc
mov
int
fstp
popa
rclb
scas
push
cs
ljmp
dec
mov
add
lret
cli
scas
fisubrs
push
jmp
cli
repz
inc
mov
imul
push
rolb
int
into
popa
sub
roll
xchg
mov
cld
or
mov
jp
add
loopne
movsb
ds
orb
jg
int3
sbb
data16
ljmp
imul
dec
push
fistpl
push
inc
and
cwtl
gs
fists
cmpsb
push
repz
mov
push
fwait
inc
lcall
lcall
lcall
inc
fsubrs
dec
xchg
gs
cld
insb
or
jl
or
push
mov
test
push
adc
repnz
xchg
xchg
rcr
fnsetpm(287
inc
pop
inc
loop
in
call
inc
jge
incb
add
cmp
or
repz
pop
notl
xchg
and
pop
adc
incl
rcl
lcall
ljmp
dec
cltd
push
out
out
push
push
psllq
or
push
inc
pop
dec
and
decl
xor
fxch
push
loopne
jge
dec
or
lahf
push
into
sti
mov
jb
mov
xorb
jl
push
mov
sbb
mov
pop
pop
or
stc
mov
sbb
scas
pop
sbb
cmp
mov
xchg
mov
dec
lcall
enter
cld
mov
les
pushf
mov
out
or
fsts
or
or
add
les
loope
mov
out
adc
jg
adc
data16
add
jne
lds
xchg
icebp
xor
dec
mov
jmp
xor
scas
pop
push
add
lock
adc
fcomps
loop
xchg
outsb
add
jl
xor
ds
pop
ja
and
push
mov
and
scas
clc
and
mov
jae
mov
add
sub
daa
or
inc
ss
sub
int
push
jmp
pop
adc
or
in
ror
lds
sub
dec
fsubl
sahf
iretw
aas
adc
test
pushf
xchg
jmp
int3
rcll
fdivrs
add
bound
cmp
jo
call
xlat
ljmp
ja
ljmp
push
pop
and
xor
arpl
shl
arpl
xor
not
push
ljmp
lcall
and
or
loope
leave
or
loope
mov
xchg
push
mov
repz
ljmp
jmp
inc
sar
popa
mov
jg
lret
lahf
in
cwtl
stos
xchg
bound
call
out
mov
scas
lret
sti
pop
repz
loop
pushl
pop
scas
and
mov
aad
ret
inc
xorb
ret
lcall
out
mov
leave
add
xlat
fsub
add
nop
add
cmp
xorb
imul
ljmp
ret
dec
icebp
rcl
aad
xor
inc
mov
sub
lret
jmp
pop
push
pop
fdiv
or
xchg
imul
in
fnstcw
gs
xor
xchg
pop
je
rcrb
and
cs
cmp
insb
add
leave
sbb
aaa
lret
and
xor
dec
mov
pop
sbbl
loopne
mov
es
cltd
lods
ds
sar
fisttps
out
loope
adc
cld
cmpsb
ss
jg
dec
push
inc
pop
das
scas
or
xor
dec
movsb
test
fisttps
es
dec
cwtl
lcall
scas
mov
int3
or
add
rcll
xchg
mov
xchg
lods
cs
lcall
das
pop
mov
adc
filds
es
dec
loop
in
jbe
jle
mov
ret
xor
sub
out
mov
xchg
popf
adc
jmp
lcall
pop
jb
rol
rcll
and
xchg
or
jo
mov
and
mov
inc
push
addr16
addb
jl
jns
sbb
mov
adcl
inc
pop
and
jbe
mov
fwait
lock
movsb
push
add
push
push
inc
cld
pop
mov
lock
mov
lods
jge
cmpsb
mov
ja
pushl
push
cmp
fwait
les
clc
cmp
sub
outsb
jno
mov
and
sarl
repnz
pop
cmp
mov
inc
dec
xor
ss
add
vmovaps
jmp
fmuls
xchg
pop
cltd
inc
jg
pop
in
jmp
push
cmpsb
add
pop
sub
fldl2e
gs
or
add
test
das
pusha
dec
mov
inc
out
sti
icebp
das
jbe
mov
push
jbe
enter
adc
adc
and
mov
jo
fmuls
pop
jno
lret
imul
or
inc
jae
jg
xchg
icebp
add
xchg
les
inc
out
push
ret
rclb
mov
daa
lahf
dec
outsl
imul
das
push
and
fwait
in
fcom
daa
test
insl
jg
test
shrb
sbb
fildll
fisubrs
pushl
xchg
aam
or
or
cld
repz
out
adc
test
jmp
int3
add
dec
roll
stc
jl
aad
pop
sub
addr16
dec
jb
mov
jns
sub
pushl
pop
cmp
dec
jmp
jg
mov
clc
dec
leave
icebp
inc
push
add
pushf
aam
add
or
pop
dec
loop
out
iret
push
adc
cmp
jg
mov
fiadds
outsb
ret
loope
in
in
lahf
cmp
nop
xchg
push
sar
call
scas
ds
test
adcl
and
cmp
cltd
lock
jg
dec
std
adc
mov
sbb
out
mov
pop
dec
mov
add
test
push
lret
jg
pop
mov
ds
es
dec
sarb
sar
dec
and
jo
mov
and
mov
mov
decl
add
or
addb
int3
xor
call
sbb
cld
mov
add
movsb
jmp
cmp
enter
add
aas
clc
fildll
call
sbb
and
shll
dec
pop
insb
in
mov
add
mov
icebp
adc
add
push
lahf
pop
mov
pop
sti
sub
loop
shr
outsl
xchg
push
dec
lret
mov
notl
cli
or
sub
and
dec
sub
dec
sti
xor
jmp
aam
into
cmp
lret
sbb
fiaddl
fstpt
fwait
adc
mov
cs
fwait
sub
fldcw
jae
mov
sbb
sub
jo
and
lcall
adc
sbb
jb
filds
div
outsb
shll
push
lcall
and
add
push
add
lcall
mov
dec
and
jp
and
mov
es
inc
in
sub
fldcw
andl
ret
push
movsb
mov
cld
adc
outsb
sub
nop
add
scas
cmp
incl
movsb
jg
dec
in
roll
push
test
cli
or
sbb
push
lds
xor
sahf
cmpsl
mov
inc
movsb
jg
sub
les
fs
jg
push
push
push
out
idivb
incl
call
inc
rolb
pushf
pop
cmp
lret
loopne
mov
fisubrl
jg
sub
mov
mov
sarb
decl
push
push
fs
xor
jg
jo
mov
js
jnp
pop
dec
and
addb
into
das
rcrl
and
add
bound
cld
stos
icebp
xor
add
xchg
jbe
clc
clc
or
sahf
dec
cmp
fists
xchg
inc
fdivrl
mov
xchg
push
std
xchg
add
mulb
or
aam
call
incb
xor
std
js
xor
sbb
xchg
mov
in
cmpsl
stos
std
or
mov
repnz
mov
outsb
bound
imul
icebp
decl
imul
out
push
add
in
cmp
cmc
dec
jecxz
lahf
mov
add
lret
pop
xor
clc
pop
sub
inc
arpl
pop
stos
sbb
mov
out
clc
pushl
pop
notl
loope
xadd
xor
inc
addl
mov
xor
faddp
xor
and
es
pop
mov
dec
out
mov
clc
add
fnsave
dec
vandps
neg
pop
add
lock
adc
mov
cmp
test
enter
inc
mulb
aaa
add
adc
arpl
jno
jecxz
les
sbb
int
pop
mov
fwait
xlat
data16
or
or
incl
add
xchg
fists
lfs
push
add
shl
inc
das
aas
fstpt
jae
cld
aas
fcomip
icebp
in
add
and
xchg
adc
mov
jmp
cld
arpl
push
int3
lea
fbld
and
jg
call
shrb
mov
ret
repnz
or
cli
les
push
fdivrp
xchg
ja
lcall
test
in
repz
sub
stc
push
xchg
std
dec
aad
push
and
xor
ljmp
clc
incl
fidivl
adc
push
sub
scas
push
sub
sar
mov
push
adc
test
lahf
hlt
sub
mov
test
inc
rcll
or
and
decl
lock
jae
hlt
and
or
pop
bound
cld
mov
sub
push
pushl
add
adc
imulb
push
lcall
and
mov
decl
adc
movsb
add
sub
and
add
test
imul
sbb
aaa
sbb
jae
std
pop
lcall
mov
push
out
jmp
sbb
sbb
or
mov
sbb
mov
push
and
sarb
fimuls
dec
sbb
jbe
out
jg
adc
or
push
incl
ss
sbb
clc
in
xchg
dec
pushf
aam
and
decb
sub
adc
lock
popf
repz
jnp
frstor
fcmovbe
cmp
dec
cmp
gs
pop
cmp
repnz
out
mov
inc
out
pusha
pusha
and
clc
mov
jbe
mov
repnz
mov
push
outsl
fisubs
or
test
inc
cmpsb
adc
sbb
outsl
and
or
into
iret
add
add
scas
test
repz
ds
inc
push
stos
jl
leave
mov
scas
sub
decl
dec
loop
or
lcall
lock
sub
scas
int3
lock
je
xchg
adcl
mov
pop
stc
neg
pop
loopne
call
adc
mov
scas
fadd
repnz
mov
dec
lret
jo
test
sub
roll
sbb
mov
popfw
gs
or
mov
and
cmp
repnz
xor
cltd
adc
inc
ljmp
mov
jae
cmp
lret
fmulp
jmp
lock
call
xor
pop
in
and
mov
pop
xor
fistps
sbb
mov
xchg
pop
xor
xor
imul
ljmp
pop
lea
mov
mov
stos
push
and
rorb
mov
sbb
dec
cld
aas
movsb
add
pop
add
and
cmp
cmp
fdivs
sbb
sbb
xor
push
sar
mov
adc
idiv
mov
dec
push
pop
lahf
push
sbb
or
rol
push
ja
std
je
jns
icebp
ja
mov
mov
mov
in
es
dec
push
ljmp
fwait
mov
jl
aam
cld
fst
mov
mov
out
ret
ljmp
icebp
sbb
xchg
xor
push
test
data16
fldcw
xor
repnz
adc
dec
xor
loope
jl
add
cmp
cli
sahf
outsb
lcall
pop
and
jnp
repz
test
mov
jne
scas
divl
lea
and
jnp
push
sahf
cmp
ret
adc
add
or
das
pop
out
pop
iret
xlat
push
cmp
out
push
out
fadds
pop
dec
decb
xor
mov
test
cmp
shrl
inc
clc
dec
movsl
and
stc
and
jb
cmpsb
mov
cmp
or
inc
xchg
mov
xchg
rcr
pop
fdivl
mov
bnd
pop
andb
mov
call
mov
hlt
inc
int3
jmp
pop
and
push
jle
sub
dec
inc
sbb
pusha
inc
in
jle
fs
push
inc
ljmp
imul
daa
jb
mov
nop
mov
cmovns
out
bound
push
addl
pop
pop
icebp
jecxz
mov
sub
lret
jl
add
clc
mov
pop
cmp
nop
adc
insb
data16
filds
ljmp
sarb
fwait
icebp
push
rcll
mov
jbe
pop
mov
add
fisubrl
loope
add
mov
cmpl
das
ret
adc
jo
insb
fdivl
cld
call
lret
ljmp
imul
lock
mov
fwait
add
adc
jecxz
adc
scas
add
dec
xor
cmp
loopne
or
and
mov
sbb
aam
sbb
and
enter
xchg
pop
out
aam
add
push
test
inc
std
mov
out
and
mov
negb
jmp
mov
inc
hlt
iret
pop
movsb
ss
jg
mov
movsb
ret
std
test
jb
xlat
sbb
adc
lahf
mov
int3
call
ja
pop
adc
cmp
imulb
pop
fbld
leave
in
sti
mov
cld
adc
movsb
rep
xorb
int3
ret
pop
orb
cs
pop
xchg
pop
movsbl
sub
call
ds
rorl
fimuls
std
add
sub
mov
mov
test
sbb
and
out
and
cmp
es
shlb
mov
xor
rorb
jno
lds
ss
pop
push
push
mov
and
cld
dec
add
pushw
mov
add
das
adc
scas
out
inc
or
insb
cmp
push
push
and
pop
ds
fwait
dec
cld
shll
sub
sbb
or
xchg
sbb
adc
add
sbb
sahf
xor
lcall
out
jmp
lret
icebp
and
jecxz
push
movl
pop
cmp
jmp
inc
jle,pt
sub
and
or
xor
icebp
xor
inc
xor
mov
scas
ret
add
inc
sbb
or
sub
pop
xor
push
stos
dec
cmp
aaa
lods
loop
sub
mov
rclb
add
scas
mov
outsl
push
sahf
and
cmp
cmp
inc
jg
inc
loopne
mov
je
pop
das
es
mov
inc
hlt
adc
mov
mov
pushl
cmpsb
pop
mov
scas
mov
lret
shrb
pop
push
jno
into
mov
push
add
ljmp
adc
pushf
sbb
adc
call
or
les
inc
ret
pop
and
cmp
push
lea
push
adc
xchg
cld
call
add
rorl
pop
mov
lods
inc
pop
cmp
scas
fsubrl
pushl
mov
mov
cmpsb
xchg
or
stc
ds
jae
scas
mov
insb
adc
ds
mov
or
adc
fsubs
lahf
lods
push
sub
and
mov
ljmp
in
cmc
mov
test
sbb
cmp
add
in
and
jno
xlat
clc
xor
cs
repz
lcall
lods
push
mov
push
add
cmpsl
out
push
xchg
fcomip
outsl
loopne
pop
pop
mov
in
sub
ss
jbe
inc
sti
mov
ljmp
add
iret
xchg
out
xchg
mov
hlt
lea
cmp
fbstp
js
cld
mov
xor
dec
push
lret
incl
mov
out
loop
cmp
sbb
repz
push
incl
insl
repnz
jmp
jbe
mov
push
add
push
mov
push
xchg
pop
mov
les
lds
out
roll
push
cmp
fcomps
fdivs
insl
rcrl
inc
push
movsl
dec
les
lds
stos
es
lds
loope
xchg
loop
xchg
shlb
pop
insb
outsb
fucomi
or
movb
pop
mov
cmp
xchg
sub
ljmp
mov
or
dec
push
fists
in
dec
std
push
repnz
xchg
xor
xchg
lock
sar
and
and
mov
dec
lret
cmp
out
sub
leave
dec
lods
inc
xchg
aam
addl
imul
add
out
xlat
or
jg
push
in
lret
mov
sbb
inc
mov
lret
dec
push
pop
movsb
jg
lock
dec
fildl
jnp
pop
jmp
mov
inc
dec
mulb
jg
cmc
inc
mov
inc
jns
call
push
pop
mov
push
add
into
pop
mov
adc
pop
jecxz
call
subl
jg
lds
jl
daa
inc
dec
fisttpl
fiaddl
sbb
ja
shr
inc
out
sub
cmp
xchg
inc
adc
cli
push
int
push
repz
aad
call
out
out
cmp
scas
dec
push
cmp
ret
out
jae
sahf
xor
int3
cmp
jmp
clc
fildll
sub
xchg
ljmp
sahf
mov
movsb
cmp
jbe
jg
loope
mov
out
ljmp
jo
jmp
xchg
mov
xchg
jne
lahf
and
lcall
or
stos
ja
rcrl
mov
cmp
mov
nop
shll
dec
cmc
fdivrp
lods
jmp
call
xchg
sub
cli
lahf
push
imulb
jns
cld
fidivrs
dec
rclb
push
mov
int
cmc
incl
pop
ds
test
rorl
and
scas
xor
sbb
mov
push
rcl
add
xlat
mov
jl
pop
insb
cli
mull
xor
sbb
mov
mov
push
mov
inc
xchg
mov
push
mov
popa
hlt
iret
imul
adc
lahf
dec
out
cmp
aad
ja
or
xchg
fimuls
xchg
in
repz
inc
inc
jno
inc
nop
cmc
stos
and
sbb
add
xchg
and
int
in
xchg
xchg
xor
fsubl
mov
addr16
xchg
cs
xchg
icebp
cmpsl
push
jne
inc
adcl
push
lods
cmp
dec
std
pop
into
mov
mov
stos
sbb
inc
div
aaa
sbb
sbb
dec
les
push
push
repnz
pop
add
jle
cmp
cmpsl
ja
adc
test
push
sbb
xchg
xchg
call
ljmp
adc
cmc
mov
pushf
and
cmpsb
inc
movl
and
jbe
out
inc
fdivl
lret
and
dec
icebp
cli
jae
or
push
repnz
xor
ljmp
out
fsubr
mov
pop
or
out
cmp
adc
sub
clc
add
or
inc
ficomps
fs
push
loope
mov
inc
movl
rorl
add
loop
and
xor
mov
sti
adc
mov
push
loopne
push
jle
cs
inc
jmp
lret
imul
push
pushl
mov
enter
mov
aam
roll
test
orb
movsl
stos
jbe
mov
hlt
lods
pop
icebp
cmp
lock
outsb
pushf
and
sub
outsl
add
mov
int3
sub
xchg
mov
mov
dec
iret
out
xor
out
sahf
cmp
mov
push
in
decl
inc
jl
sti
nop
nop
pusha
inc
insl
ljmp
cmp
cs
cltd
bound
adc
xchg
cmp
ljmp
lahf
in
add
outsl
mov
sar
pop
or
cmp
clc
sub
cmp
imul
out
adc
xchg
or
loope
cltd
mov
mov
sub
mov
jle
pop
inc
jmp
sbbl
jle
cli
in
sub
mov
out
push
sub
outsb
cmp
and
ljmp
adc
bswap
cli
xor
mov
mov
mov
scas
xchg
int3
stc
scas
stos
pop
cmp
in
pop
mov
clc
and
cmp
and
pushl
or
push
adc
pop
add
ds
sahf
sti
cmc
and
in
lea
sbb
sbb
add
or
jg
aad
cmp
push
mov
pop
mov
sti
hlt
cs
iret
fildl
push
add
add
imul
xchg
mov
inc
push
jecxz
mov
pop
jg
data16
mul
inc
sbb
and
pushw
cmp
loope
ret
ss
ljmp
xchg
mov
out
push
fldenv
call
out
repz
mov
or
dec
test
gs
add
idiv
jmp
add
xor
ds
sbb
xchg
ja
inc
out
imul
lcall
fstpt
outsl
rorb
inc
sub
sbb
addr16
in
add
outsb
jmp
sti
lea
or
jmp
andb
icebp
in
inc
fistpll
jne
scas
adc
outsb
jg
lock
xchg
xlat
add
iret
neg
rcr
scas
jo
jmp
push
aam
cli
xor
in
dec
daa
aas
repnz
loop
enter
out
stos
out
data16
ret
movsl
out
push
xchg
rcr
sahf
test
dec
mov
and
sbb
shr
je
testl
test
sub
push
add
or
xchg
pop
add
ja
das
xor
pusha
fsub
xor
cltd
clc
jecxz
and
das
jmp
cli
mov
pop
and
icebp
mov
jge
inc
in
push
dec
fbld
sub
mov
loope
push
cmp
xchg
mov
cmp
or
jg
sbb
les
mov
fcomps
outsb
call
aad
aam
vpmaxsw
jbe
sahf
mov
add
out
push
gs
cmp
movsl
lcall
push
or
adc
mov
cs
push
jge
inc
pushl
loope
push
in
jbe
das
lcall
inc
test
inc
inc
xchg
out
stc
ss
bound
push
sub
decl
es
popf
xchg
andl
stos
dec
sub
sub
pop
or
add
pop
sbb
es
fsubrs
aad
mov
clc
scas
test
call
ljmp
push
mov
clc
fsubs
xlat
ja
pop
mov
adc
ljmp
lahf
and
in
add
add
adc
decl
jle
imul
jl
pop
out
ljmp
jl
mov
mov
pusha
test
or
pop
loopne
xor
std
or
mov
lods
push
pop
jnp
mov
sbb
bound
push
jo
push
or
xchg
push
and
dec
push
inc
stos
pop
dec
add
sub
mov
lea
push
addl
out
jge
lcall
shll
adc
mov
add
cmp
mov
call
pop
movsl
fistl
out
pop
loopne
mov
mov
mov
loope
js
dec
loope
imull
or
and
pushf
cltd
lcall
cbtw
out
outsb
in
testl
fimull
pop
insl
cld
jg
jnp
cli
fldcw
shr
xchg
scas
pusha
and
sar
cli
jb
les
scas
mov
lea
arpl
orb
adc
push
mov
ss
or
es
cmpsl
xchg
push
nop
aaa
sbb
xor
mov
mov
push
push
pop
jmp
daa
sub
incl
cld
popa
jle
push
xor
sbb
dec
fsubrl
jle
cld
incl
cmp
xor
push
cld
mov
cmp
loopne
cmp
xor
sbb
mov
out
cmp
test
decl
lock
jbe
mov
scas
sbb
jecxz
imul
jo
les
jg
sbb
push
dec
push
inc
loopne
call
pushf
or
stos
pop
setle
iret
fistpll
mov
mov
xchg
imul
call
stos
mov
out
xchg
xor
xor
psadbw
iret
adc
pop
add
ficompl
xor
test
ja
subl
sub
test
adc
outsb
hlt
pop
outsb
add
into
jb
cmp
aas
out
fs
decl
test
ret
mov
fisttps
lock
hlt
mov
dec
adc
lods
fcomps
cmpsb
xor
pop
loop
xor
sub
outsb
dec
xchg
mov
or
dec
jl
adc
xor
ja
loopne
clc
sti
or
pushf
test
gs
xchg
neg
inc
adc
incl
add
mov
pop
ret
add
pop
aaa
rcrl
xor
lret
pop
and
cli
sub
mov
call
pop
adc
pop
cmpsl
or
mov
push
mov
shll
out
outsl
push
cmp
in
and
sbb
sbb
notb
mov
mov
mov
int3
mov
sub
pop
lcall
xchg
inc
and
and
and
dec
mov
mov
fbstp
adc
incl
sub
push
xor
ficoms
or
and
rcrb
sub
iret
ljmp
rorb
ljmp
and
xchg
mov
nop
sub
call
mov
int
add
clc
xchg
adc
repnz
push
or
cmp
insl
nop
add
std
xor
jge
test
cmp
imulb
inc
loope
and
push
inc
cld
push
sbb
in
fidivrl
sahf
ret
push
sar
mov
sbb
sbb
push
lds
fsubrl
sub
adc
mov
cli
and
mov
dec
lock
iret
pop
nopl
push
dec
jmp
sub
xor
dec
cmp
int3
or
pushl
cmp
shll
into
pop
xor
hlt
mov
add
fimuls
cmp
scas
movsl
pop
jmp
push
call
dec
mov
pop
mov
nop
xchg
mov
or
mov
cmpsl
int
and
xor
aaa
pop
cli
jae
push
repz
xor
push
enter
ret
xor
mov
add
inc
ss
subl
je
jmp
es
xchg
xor
out
arpl
call
adc
test
arpl
stc
or
das
imul
hlt
and
sub
shrl
mov
jecxz
cmp
aam
es
add
call
xor
sbb
movsb
add
jo
sar
mov
adc
and
pop
mov
aaa
xor
sub
mov
test
repz
fbstp
dec
scas
inc
pop
xchg
add
fucomip
rclb
mov
adc
int
ret
jp
and
or
nop
sbb
pop
jle
addb
mov
sub
sub
imul
cmp
loopne
movsb
cltd
sti
sahf
sahf
incl
add
cmpsb
ror
adc
or
adc
pop
in
mov
ja
lods
lock
pop
aad
insl
aaa
aad
out
jb
rorl
or
fbld
loope
jno
adc
lods
out
scas
clc
cmp
or
jns
fsubrs
pop
push
mov
add
mov
lock
ljmp
outsb
rorl
cmp
clc
jbe
lods
xchg
adcb
cmc
inc
sub
fidivs
movsb
add
push
sbb
add
or
jle
adc
int
cs
fildl
xchg
cmp
xchg
push
pop
mov
movsl
incl
sbb
shlb
dec
in
xor
cli
into
add
clc
cmp
pop
adc
mov
mov
ret
out
cld
adc
cld
push
jno
in
or
scas
hlt
out
fsubrs
push
je
bnd
inc
dec
js
std
call
cmpsb
lods
fidivrs
mov
pop
sbb
inc
ss
subl
es
sbb
in
mov
jmp
shll
in
adc
jl
adc
add
popf
pop
lock
rcrl
in
mov
stc
sbb
clc
jnp
ss
insb
mov
mov
ljmp
inc
adc
dec
loope
adc
mov
rclb
cmp
push
jg
push
adc
ss
fwait
jle
pop
add
push
dec
into
sub
xchg
jp
push
xchg
shl
add
jmp
jmp
out
mov
jns
or
fwait
js
mov
aas
and
mov
ja
xchg
iret
sbb
sub
mov
pop
push
mov
into
mov
sub
stos
mov
leave
aaa
icebp
push
mov
push
fstpl
lret
jg
out
movsl
push
aas
cwtl
repz
out
or
jmp
ss
int3
je
xor
cld
mov
cs
decl
sbb
insl
faddp
adc
jno
lahf
mov
xor
or
lcall
mov
xor
ja
fucomp
add
jl
sub
lcall
jl
and
push
daa
push
test
inc
sub
mov
loop
jmp
data16
cmp
sub
jo
pop
mul
pcmpeqw
cmc
sub
cbtw
popf
test
lret
test
inc
push
and
jg
push
lret
das
add
jbe
mov
dec
orl
xchg
and
mov
ss
lret
and
jl
pop
add
jnp
dec
xor
pop
clc
lds
icebp
push
pop
mov
pop
test
jne
or
repz
aaa
sbb
lods
jge
add
mov
leave
cld
jg
decl
mov
pop
sbb
and
repz
mov
jge
aad
dec
arpl
lods
add
hlt
fcomip
outsb
pop
daa
fnstenv
mov
fisttpll
pop
add
push
out
mov
mov
or
bound
out
mov
cmp
sbb
adc
icebp
pop
loop
fnsave
imul
lea
inc
es
cs
sbb
cmp
iret
fldl
pop
es
call
cli
cmp
xchg
xchg
inc
movsl
mov
xchg
inc
jecxz
mov
cld
mov
shrl
daa
cmp
cvttps2pi
sub
jno
in
in
lret
incl
or
or
loop
arpl
ss
out
test
cmc
repnz
ja
cli
push
leave
pop
movl
mov
adc
sbb
cmp
mov
int
ficoml
imul
int3
into
adc
push
int3
int3
xchg
stc
xchg
dec
mov
jg
dec
out
out
push
inc
in
shl
das
mov
lods
push
cli
pop
pop
faddp
lods
das
add
clc
pop
jecxz
jae
loop
xchg
lds
or
sub
fisubs
add
or
jae
aad
or
pop
pop
push
cmp
enter
mov
lock
std
jnp
daa
shl
xor
adc
mov
xchg
mov
sbb
cli
jbe
test
xor
call
clc
mov
pop
cmp
lods
or
pushf
out
adc
or
jmp
cld
mov
mov
push
scas
loop
adc
arpl
xor
ljmp
and
lret
mov
pop
pop
jmp
or
sub
filds
push
mov
test
jg
in
xor
xor
inc
shl
jl
mov
dec
fistl
jnp
xor
push
cwtl
daa
mov
shrl
mov
sub
jmp
fnstsw
pop
adc
fidivrl
ret
outsb
mov
pop
mov
pushl
sub
push
mov
and
lock
scas
mov
push
or
icebp
lods
repnz
dec
cmp
hlt
jle
jb
notb
enter
xchg
or
stos
pop
pop
or
popa
and
pop
lock
push
imul
adc
add
pop
mov
out
clc
sub
rorl
arpl
mov
decl
data16
in
call
cmp
jecxz
add
lret
test
into
ret
sub
repnz
push
lds
fistps
stos
jne
cmp
xchg
bound
outsb
mov
fwait
dec
out
mov
or
aad
jg
ds
ror
pop
arpl
insl
movb
test
mov
sbb
in
in
call
hlt
pushl
push
inc
fstpt
and
ja
push
pop
pushf
aas
adc
addr16
nop
lret
jns
mov
or
mov
jb
mov
cmp
push
cmp
scas
or
adc
sbb
fidivrs
sbb
fdivr
push
dec
jl
cli
and
add
lcall
cmc
loopne
loopne
mov
cmpsb
add
sbbl
nop
clc
add
movb
ds
es
stos
inc
enter
fnstenv
lods
cmp
call
mov
push
incl
mov
lds
pushl
adc
shlb
xor
lret
or
daa
and
sbbb
add
lret
loop
idivb
inc
sbb
xor
xor
int
xchg
push
and
add
and
movsl
sub
push
mov
fdivrl
push
into
dec
jns
and
bnd
sti
inc
push
idivl
lcall
inc
add
lods
sar
pusha
xor
repz
cli
pop
sub
or
mov
cmp
push
ljmpw
in
aas
jmp
imul
mov
push
movl
mov
mov
inc
dec
sti
loop
jg
out
mov
pop
lods
pop
gs
dec
jbe
sbb
loope
sub
jmp
xchg
jmp
and
shlb
jae
pop
gs
das
cs
stos
movsl
call
sbb
clc
pop
test
in
or
cwtl
dec
mov
jns
cli
fcoml
sbb
mov
push
lahf
mov
jno
nop
or
in
rclb
shrl
cmp
pop
leave
jle
ret
add
and
cld
or
adc
adc
sub
and
xchg
imul
jg
mov
xor
or
cmp
adc
call
fldenv
and
out
adc
add
popa
ret
js
dec
mov
dec
rorl
push
std
sub
fidivs
ljmp
jb
add
push
mov
decl
mov
pop
sbb
mov
sub
out
cmp
scas
decb
test
or
lret
js
push
push
stc
into
or
mov
enter
sbb
clc
cmpsb
xor
cmp
sar
mov
movsl
jno
out
xlat
divl
lea
and
scas
mov
lea
cmp
dec
rolb
mov
rclb
mov
nop
pushf
fistpl
data16
ljmp
stc
out
outsb
ret
pop
int
lock
mov
gs
lret
cld
pop
loopne
fucom
push
mov
negb
adc
call
and
jecxz
fldz
push
in
sbb
xor
and
sub
pop
and
add
and
clc
aaa
loope
jp
dec
lret
dec
jae
jg
decl
adcb
jbe
jns
je
xor
pushf
push
sbb
rcr
js
sbb
decb
pop
cmc
xor
xor
mov
sbb
insl
add
and
push
and
or
das
cmp
dec
pop
sar
outsl
mov
mov
into
inc
mov
mov
xor
das
je
ret
je
mov
cwtl
push
xor
call
shlb
mov
xchg
xlat
add
add
adc
lds
mov
leave
cmp
mov
mov
lea
xor
shrb
addb
push
or
xor
neg
add
adc
test
enter
push
mov
enter
test
scas
pop
loop
jmp
decb
out
sbb
cmp
jmp
jmp
lret
hlt
jge
inc
adc
clc
sbb
push
shr
lock
aaa
cmpsb
repnz
shll
xor
jmp
jecxz
push
lock
out
in
in
push
push
cmp
push
dec
mov
movsb
incl
in
cmp
mov
sub
call
lock
movsl
dec
mov
fs
into
enter
push
lcall
addr16
push
and
push
call
ja
xor
movsl
sahf
or
rol
les
imulb
push
lock
and
xchg
loope
addr16
fs
test
jmp
stc
movsb
sub
sub
sbb
lock
fisubs
daa
push
sbb
xor
call
or
push
popa
adc
push
fiaddl
mov
xchg
xchg
mov
mov
mov
scas
mov
mov
mov
cli
das
xchg
inc
cltd
jp
fisttps
jl
pop
or
imul
addr16
push
call
lock
movsb
pop
mov
int3
dec
cmc
mov
mov
or
mov
xor
cmpsb
lods
sub
xlat
movups
mov
std
xchg
xchg
lret
push
es
jg
push
into
pop
ss
dec
jmp
cs
loop
mov
jbe
clc
loopne
orl
pop
call
adc
or
mov
mov
xor
xchg
fisubrl
lcall
mov
ja
xor
push
ss
fcom
clc
stc
aas
and
test
out
mov
clc
aad
out
push
mov
cld
inc
dec
mov
mov
pop
mov
push
xchg
fbld
int
pop
jg
and
in
xchg
pop
adc
jmp
bnd
loop
push
outsl
fiadds
inc
push
shll
shl
mov
xchg
test
std
mov
dec
enter
or
xchg
add
cs
mov
aad
sbb
xor
adc
orps
std
jg
out
inc
dec
stos
pop
dec
sub
pop
adc
jg
lret
inc
pop
arpl
xchg
pop
fcos
outsb
push
fsubrs
xor
mov
mov
add
dec
inc
stos
vcvtsi2ssl
cs
fidivrs
call
ss
cmp
add
cltd
xchg
pop
mov
jno
sbb
cwtl
pop
xchg
pop
fcoml
sub
or
dec
pop
push
jbe
into
out
repz
ja
into
and
jo
jne
lea
jo
lods
xchg
in
sub
jle
jb
sar
fwait
out
leave
out
push
sbb
std
push
insl
insl
add
test
push
clc
xor
in
jle
lret
mov
es
mov
mov
mov
les
mov
xor
stos
mov
jg
cs
jns
inc
adc
repz
decb
dec
stc
and
cmpsb
xchg
aad
cmpsl
stc
fcomi
fmull
or
shr
cmp
shll
fisttps
loopne
jae
pop
rcl
cmp
mov
mulb
pop
call
in
push
push
shl
ret
sbb
enter
mov
lahf
mov
nop
jl
adc
lods
xchg
imull
pushl
lcall
sub
js
sub
pop
mov
incl
in
mov
sahf
sbb
stos
sub
cmp
fidivrs
adcb
mov
mov
cli
inc
ljmp
xchg
sub
std
fistps
mov
jmp
lock
dec
imul
xchg
inc
rcrb
jae
dec
ret
adc
loop
inc
mov
sti
inc
xchg
pop
sarl
push
add
pusha
fwait
or
adc
adc
or
dec
jmp
pop
popa
scas
iret
and
fisubrl
lods
sahf
fsub
lock
test
lret
iret
das
push
sbb
xchg
mov
cmp
sbb
lcall
icebp
xchg
inc
pop
pop
in
push
mov
stos
popf
lds
popa
jg
call
xorl
push
cs
test
fisubrs
jg
xchg
push
imul
gs
ficomps
adc
pop
push
dec
push
outsb
into
adc
loopne
cmp
pop
xor
and
push
cs
inc
les
jo
inc
sahf
xchg
add
or
pop
lret
jae
and
sbb
and
cmp
cmp
repz
cs
adc
into
inc
das
ds
jmp
push
aaa
rol
ljmp
pop
pop
test
ret
push
ja
and
loopne
push
ret
push
lods
pop
inc
out
cmp
add
and
jge
sub
aam
xor
cmp
or
cmpsb
outsb
rcrb
ljmp
sbb
fnstcw
lea
out
hlt
cmp
ljmp
fwait
push
leave
add
repz
out
lods
sub
fldl
nop
mov
stc
pop
icebp
add
sarl
push
subl
stos
push
pop
adc
mov
ds
mov
and
insl
shlb
sahf
shll
add
fisubrs
ljmp
loopne
fmull
mov
jns
movsl
adc
test
repnz
add
lods
jge
mov
mov
outsb
bound
inc
repnz
loop
mov
cs
xchg
jo
fisttpl
sarl
jmp
ret
push
mov
in
test
and
into
std
fdivs
and
or
es
sub
lock
mov
popl
cmp
adc
lds
ret
outsl
fsubp
sbb
mov
inc
lock
adc
adcb
frstor
pop
imul
das
mov
loope
push
imul
hlt
mov
lret
xchg
sub
pop
mov
mov
int
in
enter
mov
shll
arpl
push
lsl
filds
fisubl
xlat
clc
icebp
int
cli
cli
fists
jge
xchg
filds
lahf
cmpsb
aaa
enter
pop
loop
mov
ss
ja
push
mov
ljmp
add
push
adc
call
xchg
mov
mov
test
pop
mov
or
mov
mov
les
mov
leave
fcoml
fbstp
pop
pushf
sar
fnstenv
mov
cli
jg
cmp
sub
sahf
cli
imul
inc
notl
mov
leave
decb
aas
pop
mov
test
movsb
les
or
pop
adc
jg
movl
pop
nop
out
push
fs
test
lretw
inc
sub
sbb
dec
mov
or
push
push
mov
cli
mov
cmpsl
subl
inc
imul
push
adc
repnz
mov
testb
sbb
sbb
rclb
xor
lods
sub
mov
ficoms
pop
jl
stos
mov
faddl
es
into
add
sbb
pushl
into
push
shl
and
into
aam
das
mov
ret
inc
ret
xorb
repz
sbb
mov
sbb
and
xchg
lods
aaa
aam
xchg
cs
cmp
adc
mov
jp
es
test
dec
lret
sbb
mov
inc
call
in
pop
cld
aas
std
jg
and
std
bndldx
push
jns
inc
pop
lods
test
push
mov
lods
xchg
sub
mov
pop
cs
pop
mov
cltd
iret
push
cmpsl
sub
push
push
sub
out
push
lds
ljmp
push
fldl
aad
sbb
fwait
rcrl
out
dec
add
arpl
pop
push
dec
jmp
add
inc
add
sub
das
push
loope
adc
dec
loop
out
push
fs
std
jns
add
cmpsb
jle
inc
pop
pop
mov
sub
ret
testb
test
mov
pushl
pop
push
xchg
pop
and
pop
mov
pop
cld
divl
mov
adc
decl
or
adc
mov
push
fisubs
mov
out
loope
xlat
sub
fwait
cld
fsubp
inc
mov
lods
ja
dec
mov
add
adc
aad
in
cmpsb
cmp
mov
int
mov
mov
ja
out
out
notb
scas
add
fldcw
and
sub
mov
sarb
fnstcw
mov
and
outsb
imul
jecxz
clc
jge
gs
sbb
sbb
outsb
jle
inc
adc
pop
jns
cli
jnp
into
mov
out
outsb
stos
test
ss
notb
insb
std
movl
int3
pop
out
mov
sub
adc
cmp
aaa
rolb
out
rcrb
add
cli
sbb
cli
fs
ljmp
inc
mov
mov
loope
dec
push
lock
ficoml
dec
mov
or
in
scas
jg
scas
mulb
out
and
adc
in
in
pop
sub
lret
insl
pop
pop
andb
subl
add
sbb
insb
scas
imul
lcall
aas
loopne
cmp
arpl
add
fxam
add
adc
mov
rolb
leave
inc
jmp
mov
sub
stos
sahf
lahf
lahf
aaa
inc
pop
ja
push
in
les
jle
cmp
cmp
out
fmull
xor
jbe
rclb
arpl
shrw
xor
shl
int3
cli
into
daa
cmpl
sar
icebp
out
pushf
mov
std
outsl
cld
sbb
cld
jno
inc
sbb
es
out
ljmp
stos
pop
xor
call
notb
xchg
cmp
cltd
je
cmp
dec
jmp
or
pusha
js
xchg
mov
mov
clc
or
or
xor
sub
clc
data16
loopne
aas
xchg
jnp
pop
jo
push
addl
jp
fcoms
cmp
loope
loop
movsl
add
mov
xor
add
aam
orb
and
fwait
lods
mov
dec
xlat
jnp
pop
rcrb
add
jg
lods
mov
pop
aam
filds
call
scas
or
hlt
sub
xor
inc
mov
pop
jb
jmp
jecxz
orb
pop
pop
cmp
sar
orl
es
leave
in
adc
sbb
mov
adc
xchg
pop
pop
outsb
iret
jo
lods
incl
aas
dec
or
sub
cld
mov
jmp
or
and
xchg
shlb
das
and
jmp
shlb
sbb
mov
repnz
add
shl
clc
push
and
add
sub
hlt
xchg
mov
cs
sub
cmp
es
lods
xchg
pop
loopne
xchg
push
mov
ret
inc
cli
and
cmc
bound
sbb
add
decl
push
jp
push
es
xor
jmp
push
pop
sti
pop
scas
push
xor
idiv
sbb
mov
add
jg
lods
cmpsb
scas
int3
inc
ja
and
xchg
add
add
sbb
sti
fadd
es
pop
sbb
jo
sti
mov
pop
dec
faddp
rol
movsl
sub
scas
andb
push
mov
mov
xor
int
pop
lods
fwait
xchg
inc
addl
or
or
jno
jo
xchg
int
or
ja,pn
push
lock
loope
test
xor
aaa
xchg
xor
cmp
scas
aad
jns
aad
faddl
sub
sti
hlt
ret
mov
in
loop
cs
jg
pop
add
mov
pop
in
lds
or
dec
ljmp
nop
out
cwtl
dec
out
xchg
add
jecxz
divb
sub
pusha
jmp
mov
pop
cmp
jecxz
jmp
cs
scas
push
pop
mov
mov
out
loopne
idivb
mov
sbb
lock
lods
movsl
mov
lcall
data16
loopne
shr
inc
popf
jecxz
cmp
test
fwait
dec
inc
jno
jl
mov
loopne
and
out
mov
out
pop
inc
sub
sub
ret
dec
aad
jl
fildll
sub
push
int
rol
stos
ss
sbb
sti
push
push
mov
enter
add
mull
dec
std
dec
mov
in
sub
mov
das
and
sub
push
rcl
pushl
cs
and
sarl
stc
icebp
and
mov
xor
inc
enter
mov
cld
or
es
fsubr
ret
xchg
les
stc
test
jg
cmpsb
xor
sbb
movsl
xor
push
rcll
mov
decl
pushf
clc
dec
or
filds
lods
andl
cmp
mov
int
ret
dec
sarl
and
sub
push
movsl
add
test
gs
adc
stc
sub
and
insl
jo
test
cmp
mov
push
inc
mov
vdivsd
inc
push
dec
clc
or
insb
fs
xchg
push
cs
es
jbe
pop
inc
call
inc
add
testb
adc
cmpsl
mov
scas
mov
pop
mov
sbb
ja
int
scas
aas
dec
xor
mov
cltd
inc
pop
test
pop
adc
jge
clc
addb
lock
sti
fcompl
pop
add
mov
push
ja
enter
add
incb
pop
loope
mov
iret
imul
add
cli
adc
leave
jmp
les
sbb
loope
xchg
inc
cmp
pushl
push
cltd
fwait
addr16
add
xchg
mov
push
or
or
jecxz
mov
in
jle
loopne
leave
push
jbe
mov
cmp
jecxz
movsl
push
fadds
cmpsb
ret
nop
mov
inc
push
lret
std
dec
mov
lea
lcall
mov
stos
xchg
test
insl
test
push
inc
ljmp
js
jecxz
sbb
xchg
and
enter
and
repz
and
inc
test
cmp
cs
pop
xorl
ds
and
loope
repz
outsl
xchg
add
add
and
incl
xchg
pop
aas
push
bound
mov
ret
mulb
das
add
jg
scas
mov
xchg
gs
jmp
inc
add
dec
add
and
push
test
ret
adc
mov
mov
sub
cs
pusha
adc
cltd
stos
pop
mov
fnstenv
aas
rcll
add
repz
stc
or
sub
aad
and
dec
inc
push
xor
add
xor
sbb
aaa
adc
data16
add
adc
and
out
or
mov
scas
mov
test
clc
pop
hlt
mov
push
outsl
adc
test
int
fcoms
icebp
add
mov
inc
jl
negl
cmp
gs
jle
mov
fcoms
ss
scas
fldl
in
xchg
clc
jmp
xor
push
fimuls
rclb
xor
rorl
jo
adc
push
add
pop
popf
dec
mov
jecxz
ljmp
pop
xchg
mov
and
push
arpl
ret
in
fdiv
cmp
pop
ret
out
das
jecxz
bound
mov
mov
bound
enter
rolb
sahf
xorb
mov
jmp
lcall
imul
js
adc
cmp
test
mov
mov
xchg
cmpsl
mov
gs
mov
scas
js
gs
bound
add
pop
adc
outsl
mov
out
das
push
mov
mov
add
mov
push
xchg
pop
sub
lcall
leave
push
xor
data16
cs
push
xchg
int
adc
jo
dec
xchg
les
lods
aas
or
lret
dec
rol
loopne
xchg
jle
cmp
fs
ljmp
scas
into
mov
xor
push
fimull
xor
inc
test
adc
jns
rcll
and
arpl
neg
hlt
and
cmp
iret
in
xchg
dec
das
sahf
fdivrl
pop
mov
lret
call
or
add
les
in
add
and
into
and
fisttps
pop
sbb
jge
mov
push
testb
mov
push
icebp
iret
inc
mov
jmp
cmp
test
mov
das
int3
es
iret
xor
dec
jge
arpl
push
xchg
shl
and
lret
fcoml
lock
repz
sbb
add
xorl
add
jecxz
add
pop
sub
sbb
push
dec
inc
sub
mov
imull
pop
xor
or
je
mov
sub
insl
std
mov
cmp
das
xor
push
je
or
out
fcomip
sub
ds
inc
sub
and
adc
lcall
cli
ret
adc
je
sub
and
mov
add
sub
pop
xor
aas
push
jb
out
pop
loop
jmp
sbb
pop
dec
rolw
jg
mov
xor
fwait
vpmacssdqh
pop
ud0
pop
insb
jns
and
iret
adc
and
pop
and
aaa
outsb
in
cmp
adc
popf
xchg
mov
xor
pusha
lret
push
or
pop
ljmp
jmp
ret
sbb
sub
mov
popf
adc
int3
outsb
test
mov
outsl
xor
ljmp
jecxz
sub
cmp
mov
cmp
movl
rorl
movsb
test
sbb
xor
xchg
rclb
pop
daa
or
mov
movsb
add
scas
dec
and
dec
rorl
call
inc
sub
scas
cmp
mov
xchg
cli
mov
in
and
push
xchg
sahf
rolb
out
cmpsb
mov
add
xchg
rolb
pop
sbb
mov
ljmp
or
scas
or
jg
cmpsl
fnstenv
lods
mov
int
clc
push
adc
cmpsl
cwtl
div
and
pop
cmpsb
inc
ja
clc
pushl
sti
lahf
xchg
in
daa
mov
or
cmpsb
arpl
fdiv
xlat
aas
and
fwait
cli
es
std
mov
int
call
fcoml
sbb
lcall
and
mov
or
mov
fildll
int3
xor
pop
pop
sahf
cs
in
mov
das
add
push
sbb
mov
mov
lods
shll
or
jg
ljmp
mov
mov
fldl
arpl
mov
push
ret
adc
push
decl
pop
xlat
mov
mov
push
icebp
xlat
or
mov
aad
hlt
lcall
add
add
andl
or
dec
xchg
in
ljmp
sbb
incl
pushf
xchg
sbb
cmp
xchg
mov
xchg
pop
and
leave
ljmp
mov
dec
cwtl
inc
arpl
xchg
lahf
jecxz
adc
test
pop
sub
cmp
add
cmc
or
mov
lcall
lock
stos
mov
scas
inc
push
sarl
jae
pop
mov
ret
mov
call
pop
test
or
mov
int
push
jl
add
mov
xchg
test
add
adc
test
and
mov
and
lcall
push
call
xchg
int
adc
and
fcom
cmp
lcall
inc
inc
mov
data16
es
cmpsl
int3
push
mov
xchg
sub
imul
inc
dec
inc
scas
mov
add
and
mov
mov
pop
jae
ud2
arpl
add
hlt
mov
hlt
jg
push
ret
push
adc
out
hlt
out
pop
pop
ds
rorl
and
pop
inc
out
mov
xchg
mov
add
int3
lret
shl
xchg
mov
adc
punpckhdq
or
ss
push
sub
fisttps
outsl
into
push
std
popf
lds
fisubl
sar
pop
fdivr
cmc
push
imul
push
scas
cmp
cltd
hlt
out
add
xor
call
lret
or
xor
cld
jg
out
add
orb
js
lahf
cmp
pop
nop
ljmp
adc
adc
xor
xchg
fcompl
dec
mov
xor
cli
xor
cmc
ss
icebp
leave
inc
adc
sahf
jge
or
sbb
cs
jmp
je
ja
int3
push
clc
pop
sbb
xchg
data16
push
cmp
mov
mov
cli
mov
cmp
cmp
and
push
or
sarb
test
aaa
xchg
ret
push
mov
jg
xchg
jg
push
pop
faddl
jle
enter
mov
mov
inc
jg
mov
pop
js
mov
je
mov
popa
inc
mov
outsl
insb
stos
arpl
rorl
pop
clc
jp
jg
clc
loop
pop
scas
jg
imul
out
or
ss
sub
xchg
gs
and
mov
adc
mov
arpl
leave
outsl
into
sti
mov
out
jl
icebp
or
jnp
ss
mov
and
mov
mov
jg
out
push
sahf
push
lods
mov
inc
mov
add
push
cld
sbb
filds
adc
inc
mov
shlb
or
into
ss
cs
in
and
test
xchg
pop
sbb
loop
frstor
or
add
and
cmpl
ljmp
jl
sbb
outsb
repnz
aaa
sbb
aam
inc
jbe
dec
int
jnp
popl
pop
cmp
sub
cmpsb
test
pop
cld
pop
adc
sbb
in
nop
loop
xchg
mov
or
add
or
cmp
inc
xorb
fisttpl
lcall
divl
mov
lds
movsl
push
mov
lock
std
or
divl
pop
rcll
adc
add
cmp
push
ret
jg
les
xor
int3
jnp
push
frstor
and
sub
movsb
lds
call
lcall
mov
cltd
test
les
sub
dec
xchg
test
fisttpll
outsb
hlt
into
lret
add
filds
mov
push
or
ret
mov
or
add
lods
xchg
xor
jg
xor
lret
sbb
sub
ss
aas
sub
pop
repz
push
cmp
sub
clc
pop
or
dec
mov
cmp
ret
loop
push
iret
pop
or
dec
jbe
cmp
jmp
out
jg
or
mov
in
shr
cmp
or
sub
pop
push
adc
mov
jb
cmc
pushf
das
sbb
cli
lcall
je
sub
push
adc
and
inc
clc
add
iret
sbb
xchg
call
hlt
shlb
ret
js
cmc
jb
addr16
jmp
push
add
or
adcl
jmp
dec
int
or
pop
jge
push
outsb
cli
push
lret
adc
xchg
les
es
sbb
call
nop
xchg
or
popa
lock
jmp
bnd
in
xchg
pusha
pop
pop
fisubl
fwait
mov
push
and
push
aam
lock
sar
ljmp
or
inc
call
cmp
pop
adc
xor
add
call
daa
ret
ret
add
rcrl
push
jg
incl
sub
push
sub
pop
inc
icebp
and
ss
data16
test
jmp
ja
add
dec
xchg
pusha
int3
das
iret
call
decl
nop
pop
outsl
push
dec
add
push
bound
repz
stos
and
ljmp
add
adc
pop
repnz
jb
aam
into
adc
dec
sbb
and
test
jle
adc
jge
jle
add
stos
mov
sbb
push
dec
adc
inc
mov
xchg
mov
movsb
stos
lock
jl,pn
jmp
sti
lock
cmp
fisttpl
rcrl
leave
in
in
dec
outsl
out
shl
xor
jmp
outsl
push
lock
add
mov
adc
cmp
xchg
jle
jmp
xor
jge
outsl
adc
bound
pop
es
and
ljmp
enter
and
insb
cmp
sub
sahf
ss
dec
dec
xchg
push
ljmp
out
or
add
imul
repnz
xor
or
shlb
ss
cmp
dec
dec
mov
clc
jno
icebp
incl
in
fsubrs
outsl
adc
jg
cmp
test
push
stos
push
out
aaa
cmp
sahf
mov
adc
sahf
out
pop
mov
cmpsb
ret
mov
mov
jmp
pop
push
lock
enter
inc
enter
xor
push
fbstp
mov
test
add
scas
sarb
adc
mov
xchg
shlb
mov
xchg
cmp
add
inc
out
ret
notb
out
push
push
aaa
mov
jecxz
les
lcall
shl
or
add
push
fucompp
sbb
fucomip
shld
xor
les
or
stc
mov
adc
mov
cld
mov
cmp
in
hlt
sti
sub
test
test
shl
sub
scas
movsb
push
xor
fimuls
xor
cmp
push
mov
das
test
cmp
lods
cs
push
xchg
pop
sub
mov
call
mov
ja
das
into
mov
add
jmp
cld
pop
xchg
aam
xor
mov
sub
adc
gs
out
mov
fcmovu
inc
cmp
in
testb
ret
adc
repnz
pop
iret
adc
xor
add
mov
xchg
cli
cmc
jg
jg
imul
add
mov
cmp
lcall
scas
lods
aas
xlat
lret
jmp
ds
cmc
mov
pop
jecxz
mov
icebp
gs
adc
incl
pop
pop
push
sub
mov
cmp
jmp
cli
ffreep
jp
out
aaa
stos
shll
stos
pushf
shl
and
push
sub
mov
pusha
xchg
pop
fs
xor
fists
jp
hlt
dec
inc
in
mov
lods
dec
sub
xor
aam
push
dec
mov
pushf
out
test
pop
popa
das
data16
clc
call
fidivrs
lcall
aam
cmp
sub
pushl
xchg
addr16
je
add
stc
add
push
lahf
mov
sbb
pop
das
pop
in
or
or
daa
sbb
mov
or
shll
or
es
in
es
bound
ja
inc
jnp
inc
mov
jnp
stc
or
push
pop
jg
cs
ljmp
out
mov
ss
or
mov
test
cmpsb
push
push
mov
gs
sbb
lret
xor
xor
cmc
or
mov
and
shrb
adc
ljmp
push
xor
xor
into
aam
and
pop
insb
adcb
mov
into
popf
mov
cmp
sti
jns
cmp
add
mov
mov
aaa
pop
fld
rolb
jecxz
mov
ljmp
ret
inc
and
fsubl
fdivrl
shlb
lock
testb
shl
gs
sub
repz
cmp
cmp
jbe
dec
sbb
ja
cmp
or
pop
xchg
frstpm(287
test
xchg
mov
incb
add
cmpsl
imul
mov
shll
dec
inc
add
ljmp
or
mov
jne
cltd
jo
sbb
jmp
pop
imul
dec
adc
addr16
xor
pop
jp
lret
les
push
or
dec
fstpt
into
jge
cmc
outsl
jg
repnz
sti
loope
dec
dec
pop
ds
xchg
hlt
decb
clc
stos
inc
hlt
xchg
mov
jg
outsb
xchg
fmul
cmp
lcall
nop
adc
into
mov
ret
daa
mov
xchg
xor
stc
jno
adc
jmp
xchg
add
mov
loope
dec
xchg
cs
dec
scas
scas
mov
mov
mov
add
dec
cli
lods
lahf
ljmp
or
mov
jg
inc
das
cmc
adc
cmp
out
sub
lahf
and
out
incl
loopne
fcmovnb
lds
ljmp
sub
pop
fbstp
das
clc
mov
xor
add
jp
xchg
mov
sbb
inc
jb
cmp
ljmp
daa
pop
sbb
dec
cmp
jp
pushl
lods
xchg
ret
ret
push
inc
cmp
lret
scas
pop
jo
notb
test
outsl
mov
out
sar
push
xchg
dec
mov
cs
mov
mov
outsb
xchg
nop
inc
es
out
push
int
hlt
xor
adc
jg
pop
xchg
jbe
jbe
shr
data16
mov
addb
mov
test
xchg
mov
test
add
jbe
sub
xor
and
and
add
mov
sub
ljmp
cwtl
mov
hlt
jnp
insb
cmp
inc
mov
or
pop
adc
sar
mov
in
orb
inc
mov
rol
fwait
lock
lds
ja
sti
enter
pop
hlt
xchg
fsubrs
enter
mov
or
sbb
jmp
adc
push
fistpl
jg
sub
mov
cmpsl
in
call
mov
xchg
inc
out
jne
lock
mov
ret
sub
lret
add
mov
adc
jns
xor
lret
inc
mov
dec
and
dec
mov
cmp
xchg
aad
xlat
mov
sub
sbb
sub
mov
adc
cmp
or
mov
ljmp
sbb
inc
push
out
repz
icebp
cmp
pop
mov
bound
jae
hlt
adc
addr16
inc
cmp
inc
sub
int3
loope
dec
jg
subb
test
lret
incl
imul
xchg
pop
cmc
inc
std
call
outsl
lock
mov
into
punpckhbw
jecxz
xchg
in
push
sbb
push
repz
test
adc
ljmp
cmp
rorb
insb
loopne
push
filds
pcmpeqb
xor
pop
xlat
into
dec
push
or
fcompl
jns
sbb
shll
pop
popa
aaa
dec
std
pop
repz
gs
fsubs
dec
pop
dec
cmp
movsb
outsl
cmp
loop
roll
mov
imul
std
or
cmp
pusha
loope
cwtl
repz
fisubrs
push
cmp
sub
push
cltd
test
mov
decl
cmp
lret
mov
mov
mov
mulb
xor
or
jge
std
jg
ja
mov
leave
js
cmp
fildll
cs
insl
into
mull
fidivl
ljmp
sub
leave
addr16
ficoms
scas
inc
dec
movsb
pop
bound
pop
and
push
std
ja
adc
fidivs
xlat
out
ljmp
pop
jns
ror
mov
lahf
jl
repz
inc
sbb
and
and
lcall
decb
rorl
lcall
rclb
cltd
fldcw
or
sti
or
push
lds
pop
in
dec
inc
loope
pop
push
xchg
add
mov
sub
lcall
xor
std
adc
aam
push
repz
lcall
add
adc
aaa
mov
loopne
clc
add
rolb
sbb
fldt
pop
adc
xlat
pop
ljmp
dec
mov
ret
inc
push
fstpt
dec
pop
std
cmp
jmp
mov
nop
add
sbb
cmp
mov
fwait
sub
or
pop
out
pop
cmc
inc
outsb
pop
aas
int3
ret
xor
add
lock
decl
adc
shlb
outsb
je
sbb
gs
lcall
es
cmpsb
mov
outsl
jmp
sub
data16
sti
into
insl
and
and
push
cs
inc
movsb
push
jg
add
jbe
mov
mov
pop
pushl
adc
cmp
xchg
jmp
lods
stos
mov
xchg
add
mov
push
lock
mov
ljmp
out
mov
fisubrs
sub
sub
mov
in
and
and
imulb
mov
outsl
dec
ret
ja
mov
add
adc
in
mov
lods
or
aad
dec
xorb
mov
popa
mov
and
clc
pop
ret
bound
pushl
and
repnz
dec
sub
fstpt
add
bound
cmp
cwtl
movsb
pop
add
or
dec
cmp
lcall
mov
mov
addl
scas
xchg
outsb
out
and
sub
test
push
sti
mov
adc
cmpsb
adc
es
es
stos
mov
mov
mov
jge
push
sub
rcrb
and
mov
shr
nopl
mov
jp
daa
scas
inc
jge
sub
jnp
lods
add
pop
jmp
js
xchg
pop
xchg
jo
out
inc
imul
sub
fmull
mov
sbb
mov
std
inc
pop
cmpb
lods
jecxz
xchg
popf
movsl
mov
sar
inc
int
xor
mov
inc
and
ret
incl
cmp
fsubl
iret
pop
pushf
xchg
or
and
aam
ja
push
pop
or
ja
inc
jae
add
call
dec
call
mov
jg
sbb
xchg
mov
mov
push
add
aad
std
mov
jg
test
jge
xor
sar
out
out
sub
cltd
sub
pop
sahf
xchg
fistpl
pop
dec
sub
inc
dec
lret
aaa
pop
les
cmpsb
dec
cmp
mov
call
fldcw
shrb
insl
mov
cmpb
xchg
test
or
xchg
pushl
cld
and
mov
rcr
mov
lret
dec
add
push
sbb
sbb
cli
inc
lods
icebp
or
in
out
aad
pushl
es
loope
push
stos
jmp
mov
mov
das
clc
jg
fisubrl
xor
add
shrb
lock
ficoml
pop
cld
cwtl
or
clc
stc
out
jp
push
lock
or
imul
nop
out
scas
test
pop
push
out
jb
imul
fwait
xor
inc
cs
mul
and
mov
mov
je
dec
mov
push
movb
pop
sbb
rclb
leave
test
mov
dec
int3
adc
xchg
cld
fimuls
jb
int
rcl
xchg
out
inc
std
loop
adc
aas
push
lcall
dec
jle
pushl
adcl
inc
sub
scas
cmp
xor
or
stos
imul
pop
fdivr
decl
out
adc
cltd
ret
mov
scas
icebp
outsb
mov
ds
add
int
dec
loop
ljmp
add
ds
lds
mov
imul
popf
pop
dec
jle
out
mov
cmp
daa
sti
ljmp
nop
add
or
adc
add
cmp
pop
ja
inc
jecxz
insl
orb
push
mov
insl
or
mov
sbb
decl
data16
and
rcr
ds
push
getsec
imul
cmp
pop
mov
es
mov
sbb
mov
outsl
xor
aam
xor
int
mov
ds
cld
lcall
ds
jns
xor
cmp
scas
test
jo
cmp
push
mov
or
push
and
or
ljmp
or
aas
clc
sbb
add
sbb
pop
mov
movsb
sub
incl
adc
adc
and
cli
decl
fwait
aaa
movnti
mov
stos
hlt
mov
xor
push
or
or
enter
inc
push
insb
cmp
std
decb
mov
inc
cmp
mov
mov
add
inc
ret
rclb
xchg
aaa
add
rorb
or
jne
movsl
loopne
lcall
lret
lret
shl
sbb
adc
mov
mov
cli
xor
shl
ljmp
fadds
xchg
pop
adc
mov
pushf
mov
mov
push
imul
popl
inc
jg
dec
adc
fisttps
add
inc
nop
rcr
pop
clc
and
movb
dec
into
or
mov
out
test
sbb
or
push
clc
dec
js
in
fists
in
cli
mov
jmp
in
mov
mov
jmp
imulb
aam
mulb
pop
or
xchg
out
enter
nop
insl
gs
fdiv
in
mov
xchg
add
in
lret
mov
sbb
filds
push
or
test
inc
fisubs
sbb
xchg
divl
hlt
pop
and
pushl
mov
out
add
jle
roll
jno
sub
incl
ljmp
es
aad
pop
and
adc
in
jo
test
add
xorl
imul
das
xor
dec
xlat
daa
push
outsb
xor
jecxz
add
push
mov
and
mov
sub
and
dec
and
pusha
dec
mov
add
fcmovnb
pop
sahf
xchg
sub
aaa
adc
adc
pop
push
xchg
pushf
lcall
and
cmp
mov
sub
orl
std
testb
inc
dec
pop
add
ds
imul
stos
mov
scas
mov
pop
pusha
je
sub
adc
call
int
sub
push
clc
rorl
lret
push
mov
mov
lock
or
cs
and
pop
sahf
sbb
inc
add
mov
pop
loopne
xor
mov
out
sahf
push
mov
inc
cmp
jmp
inc
ficompl
dec
or
lret
mov
or
xchg
add
mov
mov
fisttpl
xchg
lds
jne
ds
nop
mov
sbb
mov
xchg
fistps
push
hlt
mov
mov
imul
fidivrl
pop
mov
xlat
or
stos
xor
push
ljmp
mov
pop
sub
pop
sbb
scas
clc
push
cmp
xor
sub
pop
add
push
imul
rcrl
sbb
or
lods
test
popa
push
cmp
xchg
jg
mov
inc
movsb
push
es
fldcw
jecxz
in
jge
and
dec
dec
test
cmc
pop
inc
inc
ds
pushl
call
ljmp
arpl
xor
jbe
cmp
test
dec
jmp
movsl
cmp
cmp
sti
test
mov
lret
daa
fstpt
ljmp
add
movsl
shrb
inc
add
mov
push
add
clc
push
or
daa
gs
mov
enter
pushf
test
cmp
or
jb
fs
adcl
icebp
xor
xor
sub
or
scas
dec
pushf
cmpb
mov
mov
daa
mov
icebp
cmp
sahf
ror
push
adc
xchg
cmpsl
stos
test
xlat
xchg
pop
mov
outsb
cmpsb
pushl
or
xchg
cmpsb
hlt
pushf
sti
push
rorb
inc
ret
clc
push
jmp
adc
addr16
decl
in
mov
push
pop
and
jne
push
imul
cmp
adc
punpckhdq
push
xor
iret
ret
fnstsw
cmp
outsl
call
int3
mov
sub
inc
ss
subb
jnp
inc
sub
mov
and
cmp
aas
lds
arpl
sbb
mov
jbe
mov
out
add
mov
call
push
sbbb
rclb
insl
dec
adc
arpl
dec
call
ljmp
adc
sbb
out
lret
mov
sti
push
std
add
nop
ljmp
lea
movl
pop
lret
es
sub
mov
mov
sub
jmp
add
dec
jp
das
and
subb
pop
clc
gs
xor
stc
add
push
fwait
bnd
adc
inc
pop
xor
call
and
jo
pop
sti
imul
cmpsb
bound
testb
arpl
jg
sub
add
xchg
sarb
and
dec
add
sub
lods
insb
cltd
ret
ds
rcpps
mov
push
insb
les
adc
aam
pop
aam
data16
fiaddl
push
fwait
xor
dec
lock
mov
jbe
or
ljmp
out
xor
inc
pusha
pop
push
and
and
adc
push
test
jmp
sub
add
cmp
jns
pop
ret
jg
aam
adc
and
xchg
aad
idivl
popa
mov
xchg
pop
jmp
out
in
rcrb
and
cli
mov
into
mov
add
ret
jmp
sbb
sbb
adc
mov
in
jmp
js
inc
cwtl
cmp
or
loop
jle
mov
adc
push
add
sub
imul
sbb
lods
jne
sub
pop
pushl
jb
out
je
roll
sbb
mov
aad
lcall
pop
ret
icebp
inc
pop
sbb
pop
mov
int
stos
cmp
fiadds
xor
hlt
scas
jmp
inc
mov
jmp
add
mov
arpl
cmp
mov
mov
push
jl
rcrb
or
fisubs
or
mov
sub
ja
clc
pop
insb
call
test
and
dec
clc
dec
repnz
aas
mov
pop
pushl
into
jne
and
je
fsubrl
ficomps
mov
dec
inc
jbe
rcrl
add
adc
loopne
pop
scas
inc
ja
jne
adc
std
call
pop
stos
or
je
push
push
mov
push
addl
lea
fxch
push
mov
and
outsl
dec
push
cli
xchg
cmp
mov
sti
jmp
ja
rcl
loop
add
xchg
xor
std
lds
enter
loope
loop
lcall
and
movsl
hlt
out
addr16
loop
rorb
cmp
pushl
xchg
lret
jbe
mov
leave
or
push
ljmp
jmp
push
ja
push
out
cmp
fucom
fcoms
jecxz
std
lods
repnz
fxch
fildll
int3
repz
lcall
and
sti
lds
pop
lods
das
shrl
xor
pusha
inc
mov
pop
fcomps
inc
cmc
xchg
pushl
stc
fdiv
push
xchg
out
ror
sti
sahf
add
and
inc
xchg
out
mov
mov
mov
xchg
cli
add
dec
in
inc
jmp
mov
fcompl
call
lea
or
mov
adc
bound
xchg
sub
jle
jo
incl
out
mov
bound
sub
inc
aad
fisttps
push
addb
rcl
insb
inc
mov
les
cmp
out
gs
add
aas
add
ds
dec
aaa
sbb
or
pop
ds
in
sub
adc
cwtl
push
cld
pushl
sbb
pop
push
gs
adc
jne
jg
addl
dec
sbb
mov
stc
jle
push
in
stc
cmove
pop
or
insl
dec
sub
lcall
jne
inc
mov
ljmp
fnsave
call
ja
aaa
push
add
push
or
adc
insb
outsb
push
xor
xchg
xor
icebp
or
or
lea
push
movsb
call
test
ss
aam
out
cmp
repz
pop
xchg
stos
jbe
xchg
stc
hlt
rcl
out
nop
dec
shrl
or
pop
xchg
mov
cmp
paddusb
lret
pop
mov
dec
mov
mov
jmp
out
xchg
bnd
ss
and
cmp
pop
decl
push
pop
xor
jge
cmp
cmp
cmp
aas
dec
and
daa
js
dec
jne
nop
frstor
pop
mov
lds
les
sbb
pushf
cmp
outsw
js
mov
lods
xchg
int
push
add
int3
mov
jnp
das
data16
pop
outsb
push
xchg
roll
loop
xor
pop
pop
int
pushf
shll
jg
or
inc
scas
jnp
movl
sbb
in
btsl
pop
insl
sub
dec
add
push
test
loopne
daa
outsl
pusha
lock
pop
mov
mov
imul
or
jnp
inc
pop
fimuls
std
mov
mov
stc
push
mov
ljmp
out
mov
iret
popa
and
and
add
loope
ret
sbb
mov
pop
push
xor
ja
fisttps
jno,pn
test
pop
xchg
aam
inc
jb
int
out
popa
cmpl
and
and
loopne
xchg
negb
imul
ss
jg
add
or
insl
xor
js
xchg
dec
popf
je
imul
int
pop
dec
loope
jmp
lcall
dec
pop
imul
loopne
pop
gs
pop
std
push
fwait
sub
incl
adc
push
xchg
xor
jno
cmp
adc
pop
lods
push
or
in
call
mov
inc
test
dec
rolb
movsb
xorl
add
jp
jb,pn
clc
scas
xor
dec
and
lcall
or
hlt
aaa
add
call
mov
add
mov
jno
mov
adc
push
jg
mov
mul
leave
and
clc
lock
jmp
push
and
ffree
and
mov
xchg
adc
adc
movsb
or
lcall
rorb
jmp
sub
repz
push
decl
adc
sbb
adc
pop
test
cmp
add
call
mov
scas
xchg
divb
ret
cs
cmpb
out
test
sbb
decb
mov
sbb
cwtl
cmp
std
call
out
dec
cmp
ja
ds
shll
test
xchg
mov
cmpsb
mov
push
test
add
es
dec
in
or
lcall
in
sbb
clc
dec
push
push
jmp
mov
ja
lock
loopne
ret
xor
lret
in
jg
push
adc
pusha
xchg
pushf
mov
inc
mov
lds
bound
mov
decl
ljmp
inc
sbbb
lods
or
cmp
adcb
cmc
mov
xchg
imul
int
jecxz
xor
push
sarb
decl
xchg
in
xchg
sahf
mov
push
fisttpll
dec
mov
sub
push
ljmp
loopne
adcl
cmpsl
mov
fwait
or
gs
jp
push
scas
push
and
add
out
insl
dec
inc
pop
dec
das
xorb
push
xor
mov
adc
incl
sub
xchg
pop
mov
in
fsubs
out
call
inc
mov
fs
jb
adc
push
pop
movsl
sbb
cmp
cmp
jg
or
mov
addr16
dec
test
shlb
out
pop
sub
clc
add
dec
xchg
inc
out
mov
sbb
rorb
mov
loopne
jno
lock
sbb
aam
cli
clc
movsl
xchg
mov
xlat
jp
xchg
push
dec
pop
clc
out
add
push
leave
sbb
arpl
out
adc
das
cli
ljmp
cs
lret
or
out
and
pop
xlat
lahf
jecxz
outsb
push
sbb
aaa
jbe
inc
cmp
call
ljmp
sbb
pop
dec
xchg
adc
outsl
lods
stos
push
sarb
decl
xchg
mov
mov
lods
xchg
sar
add
icebp
pushl
notl
fcoms
scas
out
add
imul
nop
scas
outsb
mov
xor
repz
xchg
pop
adc
icebp
nop
cmp
xchg
jnp
lret
dec
mov
std
jecxz
mov
jo
out
mov
xchg
dec
push
imul
dec
aad
js
push
pop
and
pop
test
xchg
mov
pusha
jmp
inc
mov
decl
jmp
jo
inc
push
push
dec
mov
rcrb
sbb
repnz
loop
out
jg
std
in
jge
jnp
popa
shrl
cmpsl
and
sarl
iret
pop
notb
jnp
ljmp
in
adc
insl
push
cmp
lds
insb
mov
add
rolb
push
roll
clc
and
push
jge
outsl
repnz
and
cmc
popf
xlat
aas
int3
push
mov
xor
clc
pushl
mov
divl
jg
cmpsl
adc
push
shlb
sti
xchg
ljmp
jmp
data16
outsl
leave
mov
sub
jmp
push
inc
leave
push
stos
mov
add
std
add
fadd
mov
xchg
scas
push
lods
jo
int
repz
and
out
loopne
add
loop
inc
nop
in
inc
loope
pop
cs
xor
pop
push
dec
push
lret
clc
fistpll
repnz
imul
pushf
mov
incl
int
sub
cmc
in
bound
jbe
xor
hlt
cwtl
aam
icebp
inc
in
rolb
hlt
aaa
int
mov
je
in
sub
lock
rcll
cmpsb
cmp
mov
and
jp
xor
add
adc
jl
push
cmp
pop
sub
dec
mov
std
adc
mov
cmp
inc
ja
sub
jmp
jae
dec
imul
inc
mov
pop
dec
notrack
add
scas
fcmove
sbb
mov
cli
clc
inc
addb
aaa
or
xchg
std
inc
fisttpll
inc
out
xchg
mov
hlt
cld
push
std
int
mov
rcrl
pop
or
test
popf
mov
test
sahf
adc
mov
fbld
mov
xchg
or
es
iret
mov
jb
mov
fistpl
lcall
das
lret
fidivl
icebp
in
push
cmp
mov
jno
ss
outsl
xor
stos
mov
dec
out
in
into
jmp
loopne
call
scas
enter
fidivs
xor
push
ret
jo
icebp
arpl
pop
mov
mov
adc
xchg
adc
lock
aaa
pop
sub
pushl
push
in
iret
ret
pop
mov
xor
mov
or
aaa
movsl
push
ss
rorb
loopne
or
cmc
fmul
out
or
mov
sti
mov
data16
mov
add
push
or
insb
dec
repnz
jg
jns
pop
les
fs
daa
leave
cmp
and
xor
lock
mov
jmp
jbe
pushf
adc
xor
stos
mov
sub
sbb
fcomip
mov
mov
hlt
sti
push
iret
into
movsb
mov
fbstp
test
and
call
cmp
cmc
pop
imul
adc
jge
jmp
mov
pop
icebp
lea
mov
int3
out
movsb
and
lret
test
pop
sub
jecxz
cs
mov
lahf
fcmovu
xchg
mov
fdivl
mov
mull
fbld
inc
mov
fiaddl
test
stos
lods
mov
dec
or
insb
rcrb
outsb
sbb
ljmp
dec
daa
add
jg
inc
fnstsw
push
cmc
scas
popa
loop
dec
mul
mov
dec
hlt
lods
fnsave
int3
xor
fimull
aaa
dec
clc
lcall
dec
inc
fisttps
pop
push
mov
or
push
pop
xchg
pop
add
outsl
ret
push
lds
jo
or
mov
push
or
pushf
fwait
inc
inc
dec
cmp
fadds
dec
sti
mov
add
and
mov
test
mov
pop
add
incl
addr16
adc
aas
mov
lea
add
sbb
or
mov
xchg
icebp
in
imul
push
cmp
pop
jge
das
lock
mov
push
outsb
sbb
pop
dec
jg
outsb
int3
push
lret
lock
jle
std
lods
into
lods
scas
sti
cmp
jp
sub
test
dec
jecxz
loopne
ljmp
and
sub
addr16
int3
into
pusha
mov
sbb
pop
sub
in
js
lea
dec
push
pushf
jae
sub
cmp
and
fcmove
push
push
popa
ds
push
movsb
pusha
outsl
push
hlt
cmp
adc
mov
data16
aas
or
cmp
lock
addb
jno
mov
outsb
sub
jle
adcb
inc
pop
jns
or
js
add
loopne
ss
in
sbb
incb
cmpsb
sahf
addl
or
mov
jmp
push
movsl
push
scas
dec
std
cmp
jb
loope
xchg
shlb
clc
mov
sahf
xor
xchg
data16
mov
or
cld
pushl
sahf
inc
das
add
lods
clc
adc
mov
stos
add
int
mov
adc
pop
loope,pt
dec
into
test
loop
jmp
in
pop
sbb
xor
mov
lcall
lock
mov
cld
ljmp
xchg
dec
enter
ret
lods
sub
push
sub
mov
call
imul
imul
inc
rorb
dec
imul
fldenv
pushf
dec
sbb
loopne
das
aaa
dec
mov
mov
fildll
outsb
movsl
je
pop
cs
pop
xor
and
add
lcall
lahf
out
mov
shrl
ret
mov
fldenv
push
mov
rorb
es
cmp
pop
rcll
mov
sub
jmp
fldenv
cmp
mov
sti
ljmp
pop
mov
cmc
sub
inc
or
and
cs
adcl
movsl
cmp
jl
cmp
push
xor
mov
or
adc
mov
call
ss
std
dec
sahf
jp
xlat
push
jmp
adcl
aad
push
ljmp
xchg
add
rcll
lds
inc
and
insl
cmp
lcall
lock
pop
imul
add
and
dec
mov
sub
lock
xchg
xchg
xor
and
decl
pushf
jg
cmp
pop
mov
stos
hlt
inc
bound
loope
icebp
call
push
imul
cmp
mov
jg
into
add
or
movsl
and
inc
test
and
flds
xchg
mov
or
in
scas
mov
out
rcl
sti
mov
and
clc
pushl
cmp
sub
lods
push
mov
xor
sar
aaa
mov
fwait
xchg
aas
adc
sbb
sub
cld
in
cmp
outsb
sbb
xchg
das
pop
subl
adc
nop
push
js
mov
and
data16
jmp
mov
arpl
mov
es
cmp
lds
hlt
cmpsb
pop
lcall
mov
movl
not
lret
sbb
xor
cmp
adc
inc
int
incl
jecxz
cmp
add
dec
stc
add
fildl
inc
sbbl
xchg
xchg
out
decl
mov
xchg
jle
mov
hlt
imul
fstpl
cmp
sbbb
cwtl
push
mov
mov
pop
in
cmp
or
lret
out
stos
mov
xor
push
aad
shll
xchg
sub
mov
lahf
in
std
pop
xchg
clc
xchg
sahf
bound
in
push
push
pop
pop
ss
sub
dec
mov
sahf
push
enter
pop
repz
cmpsb
ljmp
push
xor
dec
or
inc
int3
sti
outsl
adc
inc
or
jg
pop
outsl
notb
movsl
jmp
xchg
pop
ds
pop
jns
decl
sbb
lret
cli
fistl
add
rcl
push
lret
stos
shll
mov
lret
in
jecxz
jl
add
or
imul
inc
push
jns
fwait
inc
cld
gs
mov
adc
add
xchg
pop
mov
out
push
lock
dec
test
push
dec
push
cli
data16
push
sar
cld
xor
sub
mov
fwait
jns
fsubs
call
push
ss
pop
jnp
jo
pop
jle
inc
pusha
pusha
rcr
decl
mov
adc
out
cmpsb
pop
dec
test
mov
das
or
and
add
dec
or
dec
ja
loopne
enter
arpl
enter
sub
data16
and
clc
bswap
sbb
ja
gs
stos
jle
test
adc
fsubl
iret
jmp
pop
cld
in
adc
negl
call
in
into
ss
shl
adc
ret
or
aas
std
orb
and
mul
and
in
cmp
pop
enter
shrb
dec
loop
jle
arpl
lcall
fimuls
mov
jo
inc
cmp
je
icebp
aam
test
mov
pop
loop
call
jb
xchg
push
popf
mov
xchg
pop
std
mov
dec
xchg
xchg
bound
into
sarl
call
xlat
lock
sub
rcll
int3
xor
hlt
outsb
pop
in
in
pop
or
cmp
add
jg
sbb
in
xor
and
adc
es
pop
and
insb
and
fisttpl
push
jg
inc
inc
es
jg
ret
add
add
stc
cmpsb
xchg
xor
push
in
jmp
dec
xor
into
push
mov
inc
loope
call
pop
sbb
mov
in
adc
xchg
mov
cmp
lcall
cmpsb
rcl
cwtl
pop
add
scas
dec
mov
test
scas
pop
inc
and
test
into
mov
jae
pop
stos
jo
scas
sub
pusha
jl
aaa
mov
mov
lcall
nop
call
fmuls
xchg
leave
push
shl
shlb
mov
pop
xchg
pop
jae
and
xchg
add
scas
cmp
add
push
ds
and
inc
xchg
outsl
xchg
mov
loope
pusha
cld
jbe
jle
cmp
imul
jbe
or
inc
test
mov
jae
loopne
bound
stos
test
or
fmuls
push
ss
push
sub
xor
jg
pop
out
incb
sbb
iret
xor
sub
xor
mov
cmp
lcall
data16
faddp
pop
pop
sti
or
enter
bound
cmp
sub
testb
lret
call
xor
push
mov
sbb
stc
mov
cwtl
add
cmp
mov
out
xchg
fwait
and
sub
es
test
test
orb
ja
mov
ja
mov
add
sarb
test
ljmp
rorl
frstor
xor
inc
and
fbstp
fcmovb
push
add
dec
in
jmp
mov
idivl
lret
add
pop
sub
ds
mov
popfw
fsubrs
or
in
out
add
jge
scas
movsb
icebp
add
ss
add
jp
add
mov
clc
repnz
cs
std
jg
xchg
xchg
inc
shrd
cmpsl
adc
cltd
adc
cld
mov
add
into
push
or
out
mov
outsb
lds
lcall
push
enter
cmp
adc
cmp
outsl
aad
push
mov
ja
out
or
adc
pop
mov
cs
ja
xchg
fwait
add
jns
xchg
pushf
enter
fwait
add
lcall
incb
stos
inc
inc
iret
adc
insl
loope
notb
outsb
jnp
cld
int
js
hlt
call
imul
mov
orps
fst
shll
or
mov
or
sub
or
sbb
bnd
sbb
ljmp
mov
sbb
out
repnz
jmp
rolb
adc
xchg
iret
mov
cli
adc
out
sbb
movsl
jnp
call
adcb
push
pop
and
inc
sbb
lds
bound
mov
adc
mov
lcall
lcall
fisubrs
in
inc
ret
dec
popf
out
dec
insb
push
dec
movsb
loopne
fwait
pushl
and
mov
cli
sbbb
pop
cmp
arpl
das
adc
dec
xchg
ffree
xor
aaa
mov
data16
sbb
xor
repnz
daa
lock
dec
mov
inc
cmpsl
in
xchg
call
imul
das
fisubs
lods
jns
adc
xchg
call
push
std
ret
or
in
aad
mov
sbb
inc
loop
lret
and
shr
mov
clc
call
dec
push
fstpt
inc
fistps
xor
icebp
call
push
or
add
mov
sbb
daa
cwtl
push
push
xchg
pop
test
push
add
repz
or
adc
xchg
fcmovnb
cmp
sub
shlb
shl
lcall
ss
xor
pusha
addb
pop
inc
pop
mov
lock
sti
add
sarl
inc
mov
or
test
mov
xchg
push
xor
pop
xchg
dec
adc
dec
sub
add
int
jg
jg
adc
and
daa
jnp
add
mov
jg
mull
in
mov
int
push
aas
test
add
xorb
addr16
mov
shlb
stc
test
or
inc
pop
mov
mov
je
jle
xchg
xchg
add
xor
test
call
mov
test
fstp
push
inc
ljmp
sahf
jecxz
ja
fs
cmpsl
and
lahf
inc
cs
popa
fld
ret
mov
cmpsl
out
ret
icebp
push
jecxz
xchg
scas
pusha
adc
std
xchg
inc
cld
mov
xchg
lahf
aam
add
push
cmp
rorb
repz
cli
jmp
ljmp
lcall
rcl
xchg
pushl
cltd
jp
roll
repz
cmc
fcmovnbe
xchg
jmp
sub
fsubr
push
jne
ds
cld
ja
es
repz
es
mov
mov
cs
jno
cmp
mov
xor
push
mov
nop
jmp
decl
jecxz
out
stos
cmp
and
movd
stos
ret
lahf
ret
pop
or
xchg
add
adc
popa
mov
add
in
gs
mov
sbb
call
outsl
fimull
xchg
fisubrs
xchg
push
dec
ss
cmp
mov
dec
out
and
xor
cmp
adc
hlt
sbb
and
sti
xor
push
cmp
cmp
popf
daa
jl
add
pop
addr16
or
incl
mov
and
aas
and
les
pop
push
mov
pusha
into
int
jmp
cltd
cmpsb
jp
adc
jns
sbb
or
das
fcoms
push
insb
ss
pop
lock
or
dec
dec
lods
xchg
jb
sub
jae
cmp
movsb
loop
ja
xchg
lret
movsb
setno
fwait
lds
xor
cmc
filds
push
add
mov
in
xor
mov
adc
daa
das
lcall
bound
lods
mov
and
inc
or
loop
mov
call
dec
xchg
aas
and
negb
cmp
xor
push
and
les
idivb
xchg
adc
add
fcmove
das
and
decl
lods
lods
stos
xchg
int
repz
dec
aas
or
or
clc
jnp
push
rolb
pop
or
inc
test
xchg
into
bound
cmp
xor
out
outsb
cmp
shlb
jb
mov
push
pop
cmp
adc
inc
sbb
pop
decl
inc
cmp
daa
pop
outsl
xor
das
nop
inc
insl
outsb
std
mov
hlt
jg
and
add
ljmp
enter
sub
jg
lahf
jo
rol
or
mov
jge
sbb
jl
mov
mov
ds
mov
std
stos
dec
int
lcall
dec
dec
mov
cmp
and
insl
fwait
sbb
fwait
incb
lret
mov
pop
lods
adc
les
xchg
enter
incl
loopne
or
add
ja
orb
add
jmp
fimuls
rclb
dec
cli
incl
sub
adc
cld
inc
out
repz
add
pop
mov
adc
inc
js
xorl
in
mov
aas
jae
rcrl
ret
cli
sub
inc
or
or
fistps
pop
push
sub
jl
push
out
in
int
add
out
push
jmp
dec
sbb
xchg
cld
sbb
fistps
clc
xor
push
mov
test
popf
rcl
fwait
jae
or
push
jecxz
mov
pop
jne
gs
into
test
cld
xchg
out
xchg
enter
cli
out
loop
hlt
lcall
idivb
or
shl
dec
push
push
mov
pop
je
lret
pop
sub
insb
cli
push
popa
addr16
mov
outsb
shll
push
jmp
xlat
jae
lock
and
add
insl
jle
adc
pop
loopne
ja
mov
cmp
aas
and
push
imul
call
push
adc
jmp
mov
dec
sub
mov
jae
mov
sub
decl
fsubrp
ror
mov
mov
xchg
pop
lret
lret
insl
fidivs
mov
test
add
jg
loop
std
pop
xor
les
call
cs
inc
and
sbb
shrb
test
adc
add
clc
fbld
mov
imul
les
nop
dec
add
cs
or
add
bound
mov
dec
cmp
dec
mov
add
mov
ret
pop
push
inc
iret
test
jmp
pushf
fdivr
loope
and
scas
mov
hlt
sub
imul
dec
call
js
mov
incb
add
clc
mov
lcall
cli
and
std
jecxz
scas
sbb
lret
mov
in
pop
push
xchg
xchg
fiaddl
ljmp
in
outsl
test
dec
add
aad
pop
hlt
xor
mov
sti
repz
fisttpl
xor
jl
lea
xor
sbb
ja
ljmp
push
hlt
test
adc
push
mov
shll
add
fstpl
jb
cmp
inc
add
mov
pop
xor
ds
xor
addl
adc
dec
jne
push
push
mov
aas
xor
pop
dec
decl
push
push
fmull
loopne
cld
call
push
and
or
sub
imul
adc
std
inc
rol
call
mov
pop
dec
mov
cmc
pusha
iret
insb
testb
das
shlb
mov
pushl
test
lret
push
add
adc
in
push
add
adc
push
or
gs
dec
cli
xor
outsl
cli
dec
push
nop
pop
add
add
or
mov
and
jnp
adc
jl
jmp
loop
mov
stc
xchg
cmp
cmp
outsb
mov
fldl
sub
pop
mov
push
mov
repz
cmp
jbe
jns
xchg
or
or
bound
mov
mov
iret
sbb
or
enter
inc
cmp
scas
ljmp
iret
push
add
ja
aad
ss
out
jae
gs
dec
cld
mov
dec
out
fcmovu
mov
dec
jae
xor
cmp
fwait
cld
ds
scas
cmp
xor
lods
ljmp
stc
xchg
in
int
xchg
mov
pop
adc
ja
lcall
movsb
jl
vmread
imul
dec
add
loop
fwait
loope
add
mov
cld
cmp
xchg
pushf
sbb
cli
or
outsl
push
mov
hlt
decl
cwtl
rorb
xchg
mov
mov
jg
imul
incl
or
cs
nop
jne
ja
sub
adc
call
mov
and
scas
mov
and
int3
sbb
mov
lods
xchg
mov
add
addl
inc
jno
sbb
insb
inc
add
call
addr16
mov
nop
jae
xchg
insl
or
mov
push
and
cmp
push
out
sbb
stos
add
jge
jmp
dec
and
pop
sbb
imul
and
or
cmp
cmp
sub
jmp
sar
or
and
cs
addr16
fidivl
pop
movsl
mov
mov
into
dec
mov
out
test
scas
lods
xchg
in
pop
clc
repz
outsb
adc
into
jg
lock
xchg
in
add
push
mov
jmp
outsl
and
lahf
push
and
mov
in
xor
aas
adc
jp
ss
or
inc
sarb
inc
mov
sub
jmp
push
in
or
jb
add
inc
ss
call
pop
fidivrs
fs
and
iret
ja
test
stos
add
xor
jb
scas
sbb
scas
jl
cmpsb
xchg
jo
rcrb
push
scas
xor
scas
cs
imul
inc
out
pop
cltd
mov
sub
neg
xchg
rclb
inc
clc
or
and
out
adc
jge
cmpsb
cli
cltd
addr16
pop
cmp
aas
std
les
call
ss
jbe
mov
shrb
js
mov
jns
mov
xor
out
test
scas
jbe
mov
insb
out
lds
divb
int3
or
mov
inc
clc
pop
xor
dec
push
sahf
xor
mov
mov
test
mov
fsubrs
orl
inc
lret
incb
sub
ret
mov
movsb
sti
jecxz
inc
mov
nop
fcoml
test
xor
jl
jbe
cld
inc
fwait
mov
ljmp
add
ljmp
imulb
adc
loop
push
mov
es
pop
xor
ret
xchg
xor
push
cli
adc
rol
hlt
or
add
outsl
and
mov
shr
add
xchg
mov
dec
ljmp
testl
cmp
push
rcll
jne
shlb
jg
jl
lds
lods
mov
mov
push
mov
lock
orl
jns
mov
dec
jno
loope
dec
or
inc
cmp
mov
in
jg
clc
out
and
gs
insl
orb
test
sbb
fistl
into
inc
lret
ret
incl
or
xchg
fmulp
inc
ret
cmp
lcall
pusha
jmp
xchg
sti
jge
xchg
pop
out
negb
popf
rclb
mov
inc
fidivrs
imul
cld
inc
popa
in
iret
pop
jns
inc
into
in
movsb
clc
sub
mov
adc
ja
mov
lret
dec
aad
test
dec
or
or
dec
cli
ljmp
cld
jle
out
mov
in
sub
inc
std
popa
es
sti
push
imul
call
outsb
sbb
in
pcmpeqw
dec
addr16
call
or
add
and
mov
addr16
jmp
daa
test
cmc
decl
dec
cmp
ret
es
insb
in
or
loopne
out
xchg
nop
imul
pop
mov
test
sbb
adc
sub
test
jmp
sub
add
pop
fisubs
push
jle
das
jo
pop
xor
ficomps
dec
sbb
cltd
into
xchg
cwtl
shll
outsb
adc
ljmp
push
daa
adc
cltd
cwtl
xchg
aas
mov
movsb
out
jge
mov
pusha
add
mov
test
cmp
scas
mov
sarb
push
mov
cmp
mov
xchg
adc
fsubrs
dec
xchg
xlat
mov
adc
std
outsl
cmp
hlt
fsqrt
ljmp
daa
and
ljmp
scas
add
test
ja
popf
add
mov
scas
cld
jns
aaa
pop
adc
ljmp
shr
out
call
fbstp
or
inc
xchg
sub
roll
add
scas
push
aaa
inc
jecxz
xlat
cmp
jmp
enter
push
mov
sub
add
jg
jmp
pop
sbb
mov
mov
dec
or
push
cmpb
pop
mov
pusha
and
in
and
lock
jge
loop
incl
jmp
mov
pushf
jae
clc
add
add
jmp
out
popf
pusha
mov
push
dec
jae
sbb
xor
inc
ret
rorl
jp
lcall
xchg
lods
pop
push
nop
cli
push
push
adc
movsl
icebp
call
ficomps
xchg
sub
and
out
mov
cltd
or
or
sbb
enter
and
lcall
fisttpl
imul
dec
sar
filds
xchg
mov
test
or
inc
nop
pusha
xchg
mov
sar
inc
pushf
testb
jne
add
inc
mov
dec
adc
jecxz
pop
int
das
int
mov
decl
fldt
icebp
add
cmp
cmpsb
or
icebp
fbld
cmc
into
mov
cmp
pop
mov
xorb
inc
cmpsb
jg
incl
mov
rcr
push
test
das
pusha
inc
adc
icebp
rcr
push
jl
add
push
jmp
loop
lahf
and
shlb
mov
xor
and
jg
std
inc
inc
mov
inc
xlat
add
dec
enter
mov
es
cmpsl
notb
jl
or
push
in
adc
jg
test
idivb
xlat
loopne
pop
test
add
add
pop
cmc
push
shlb
pop
mov
push
push
movsl
lea
in
loope
jl
xchg
es
jge
or
jmp
inc
call
jne
adc
fildll
pusha
adc
xchg
cli
push
clc
ss
call
out
lock
sbb
into
sbb
jb
js
or
call
jmp
mov
sub
mov
adc
pop
lock
mov
lret
xchg
pop
dec
jmp
shlb
stos
pusha
sbb
mov
xor
incl
sub
scas
cmp
arpl
inc
inc
add
mov
xor
add
add
rcrl
lret
aad
into
pop
and
cld
stos
int
aaa
xchg
shrb
inc
pop
or
mov
mov
aam
pop
mov
jg
clc
add
jge
add
xor
scas
ja
cmpsb
repz
mov
push
add
sub
in
add
sbb
out
ljmp
icebp
jo
push
aas
inc
aad
hlt
dec
loopne
xchg
repnz
add
cpuid
pop
rorb
iret
add
insl
jg
lds
sub
shlb
push
dec
pop
ja
xor
cld
lcall
loope
fstpt
fisttpl
jmp
outsl
adc
jb
movsl
xchg
lock
clc
mov
cld
clc
jge
cld
int
push
fldpi
cmp
ror
arpl
int
jne
fiadds
call
push
cmc
call
aam
rcl
subl
lock
call
ljmp
leave
push
xchg
aas
in
out
in
daa
dec
sub
or
shlb
lcall
add
mov
push
fdivs
sub
lahf
mov
and
mov
jle
out
nop
mov
fldl
loope
pop
push
decl
lcall
jl
fld
jecxz
push
sbb
jecxz
mov
push
mov
dec
lret
rol
addr16
sbb
and
notl
mov
fcmovnbe
sarl
imul
pop
aas
insl
jge
adc
std
mov
ja
cli
decl
pop
mov
lret
aam
insl
std
incl
ljmp
lret
insl
mov
push
fldl
insl
cld
mov
ds
ret
test
jle
shlb
lods
jg
jne
mov
push
add
sbb
ret
xor
lcall
test
push
jg
push
arpl
filds
sub
es
sub
sahf
jb
mov
adc
hlt
bound
xchg
push
sbb
inc
fistpl
xchg
std
jp
pop
ljmp
adc
sub
jp
inc
iret
inc
jbe
dec
xchg
jg
ror
push
call
popa
test
fnsave
push
sbb
cld
xchg
jmp
out
imul
pop
loop
pushf
repnz
std
scas
fdivp
pop
mov
mov
in
outsl
sahf
push
loope
mov
dec
in
incl
pop
xor
jge
cli
into
loope
sti
fdivl
incb
mov
push
es
pop
std
jmp
cli
lock
shrl
addl
mov
push
mov
aaa
cltd
aam
push
or
call
je
inc
mov
cmp
leave
es
out
pop
stc
imul
mov
pop
mov
rep
mov
loop
add
lcall
mov
xor
add
icebp
in
xor
push
loop
inc
and
sub
jecxz
cli
xor
icebp
pop
xchg
test
call
loopne
or
xor
mov
xchg
popa
adc
sub
call
and
cs
mov
pushf
inc
daa
xor
scas
cmp
out
xchg
mov
movsl
ja
pushl
test
mov
fidivs
mov
and
pushf
mov
ljmp
sar
in
test
movsl
lods
mov
mov
in
cwtl
mov
xchg
xchg
mov
decl
jecxz
sbb
hlt
lds
pop
fildl
sub
pop
ljmp
shr
fcomps
mov
inc
js
fbld
out
scas
sahf
xchg
rcrb
cmp
lahf
ljmp
incb
gs
cs
fsubs
cli
call
push
sbb
int
push
xchg
fs
imul
call
pop
inc
shlb
ret
int
out
test
fcmovu
push
xor
jg
add
pop
sti
push
cmpsb
pop
adcb
lods
aas
push
cli
pushl
clc
mov
pop
subb
outsb
mov
and
sar
fbstp
int
ds
call
jo
cs
cmp
lods
xlat
mov
cmp
sbb
ljmp
push
notl
test
mov
pop
xlat
ja
hlt
rcrl
and
mov
cmpsb
lds
rorl
mov
xor
cwtl
decb
int3
and
sbb
sti
incl
sbb
test
adc
out
aaa
lcall
shrb
lods
pop
sbb
repnz
sar
cld
ss
lahf
push
push
and
scas
dec
xor
out
stos
xchg
cmp
mov
ljmp
mov
cmp
lret
neg
dec
je
jg
shrb
mov
ljmp
and
inc
dec
aas
clc
subb
icebp
movsb
ljmp
fmull
lock
pusha
incb
adc
cmp
cmp
push
inc
push
xor
orb
outsb
cs
lock
lds
insb
ja
incl
fwait
add
push
dec
into
imul
movl
sub
jecxz
ret
cmpsb
lock
dec
fnsave
or
cmp
dec
rcl
aaa
stos
push
mov
out
jle
pop
push
sub
es
ret
ljmp
daa
and
enter
mov
cmpsb
xchg
movsb
add
jne
pop
dec
fisubl
cs
paddsb
inc
mov
mov
std
cs
notl
jecxz
push
push
call
pop
cld
jg
cld
shll
push
or
adcb
aaa
or
aaa
mov
pop
insl
loopne
sbb
mov
pop
fs
aam
push
sbbb
pop
fbld
push
aam
out
inc
mov
mov
mov
sub
inc
push
mulb
hlt
xor
add
scas
or
push
pop
lret
test
nop
jge
daa
aam
das
rcr
jmp
jg
push
sbb
inc
fs
push
mov
imul
inc
clc
daa
adc
mov
orl
xchg
imulb
fwait
cmc
fwait
cwtd
stos
push
mov
jmp
pushw
inc
jnp
stos
icebp
cmpb
pop
movsl
cmp
mov
push
cli
stos
out
pop
leave
cmp
out
outsb
mov
jg
jg
je
rclb
mov
sbb
inc
sbb
test
mov
pop
addb
xlat
mov
push
imul
push
rorl
loopne
popa
lahf
xchg
mov
or
out
sti
add
or
jbe
add
mov
out
xor
loop
adc
int3
orl
cmp
scas
jo
es
es
lods
push
adc
pushf
jmp
jg
mov
andl
lret
cmp
pop
sub
inc
pop
add
push
outsb
xlat
inc
into
mov
aam
push
testl
xchg
sar
fbld
ds
repnz
mov
push
xchg
mov
popf
push
push
std
pop
sbb
test
enter
mov
push
mov
fadds
sbb
pop
and
sbb
hlt
add
daa
mov
movsl
movsl
cmpsl
or
mov
xchg
pop
push
mov
popl
insl
sbb
notl
mov
mov
xlat
xchg
and
xor
mov
in
in
xor
or
mov
xchg
ficomps
psubb
cmc
incl
into
mov
lret
cltd
add
add
shl
out
mov
sbb
pop
adc
and
cmp
add
lea
mov
in
out
outsb
lds
jnp
test
push
das
fnstcw
shrb
movsl
sbb
andb
rclb
repnz
mov
shll
mov
mov
and
push
jg
and
call
lods
inc
pop
out
pushl
stos
dec
rcll
xchg
insl
dec
sub
xchg
push
stc
mov
fs
loop
cmp
dec
or
subb
jl
mov
std
daa
stos
ret
mov
cmpsb
push
lret
lods
lahf
dec
insb
int3
subb
scas
stc
mov
xchg
and
arpl
push
adc
add
outsl
dec
xor
jns
lods
lods
cwtl
jg
insb
cld
push
inc
mov
sub
or
push
idivl
fldl
call
and
scas
mov
stc
out
mov
cmp
adc
sub
cmp
pop
and
ds
rcrl
lods
sub
das
cli
test
cmp
imul
sub
int
movsb
or
jmp
dec
popa
popa
in
adc
inc
xchg
sbb
hlt
jle
frstor
dec
decl
jbe
dec
xchg
xchg
jle
lea
std
push
push
push
das
and
add
inc
int3
xchg
add
ja
cld
jg
sbbl
int3
xlat
jo
and
call
add
fcmovnbe
adc
mov
loopne
cmp
dec
fsubrp
dec
repz
sarl
sahf
add
xor
push
sub
pop
mov
push
cmp
enter
xrelease
pop
push
adcb
shl
xor
scas
or
aaa
or
cmp
cmp
lds
add
and
push
add
cmc
mov
add
test
in
lock
jnp
jg
mov
mov
outsl
jae
iret
out
aam
push
test
pop
inc
xchg
pop
pop
cwtl
sar
cli
pop
xorl
popa
add
testb
lods
fs
bound
ret
and
cmp
inc
rolb
lahf
cwtl
scas
sbb
pushl
cwtl
mov
leave
push
ret
scas
test
jg
jl
repnz
fistps
cmp
lods
ljmp
push
dec
insl
sub
call
pop
insb
popf
cmc
lcall
pop
jmp
dec
jl
jae
outsb
mov
push
sarb
inc
or
mov
incb
mov
pop
cwtl
outsl
xchg
push
stos
shl
mov
shrb
iret
dec
clc
lahf
rclb
push
add
aaa
scas
popf
das
xchg
push
ds
sub
mov
mov
call
mov
cli
xchg
and
xchg
push
inc
jmp
inc
out
pop
jb
jge
fstpt
out
and
cld
dec
pop
daa
and
out
cltd
pop
xchg
push
dec
shll
or
dec
add
test
pop
cmp
cmp
ja
cmp
into
or
mov
scas
test
cmp
adc
and
mov
sti
mov
fs
cmp
jecxz
scas
pushf
lock
and
call
sar
xchg
mov
enter
xor
jbe
fcomip
adc
test
add
xor
das
test
aas
push
in
lret
dec
popf
sub
jg
add
fisubrl
outsb
push
cmp
xchg
and
fcomip
loope
pop
test
dec
bound
inc
das
inc
ss
or
inc
rcrl
daa
and
push
cwtl
or
out
test
cwtl
cmc
add
in
out
out
cli
mov
push
mov
test
xchg
push
scas
add
mov
fs
jg
cmpsb
lock
cmpsb
int
cmc
ljmp
push
test
pop
in
push
sub
push
or
movsl
fisttps
and
rol
fisubs
pop
sub
fidivrl
out
inc
pop
push
or
cmp
sbb
push
xchg
pop
pop
or
sbb
ds
mov
cmp
or
incl
call
ja
jnp
sub
cmpsb
ljmp
shl
je
xchg
adc
add
adc
add
gs
ljmp
add
fstps
sti
fildll
cwtl
rcrl
inc
movsl
push
and
cmp
and
xchg
add
bound
push
sbb
out
fs
add
xor
inc
test
mov
and
jg
add
jmp
jle
push
ret
sbb
sahf
hlt
imull
into
in
fcmovne
std
xchg
push
xor
add
pop
adc
sti
sub
aaa
mov
mov
push
mov
lret
lcall
dec
jbe
in
push
outsb
or
mov
lcall
cld
mov
jno
pop
rcll
pop
sub
add
addr16
jg
mov
je
xchg
or
jno
jg
cmp
cmpb
xchg
divps
test
out
mov
add
test
xor
mov
les
scas
insl
adc
mov
pop
repnz
add
mov
scas
sub
adc
xor
ljmp
shl
jmp
out
mov
aas
mov
mov
ljmp
stos
lret
dec
dec
sub
std
test
lcall
cli
clc
pop
fbstp
hlt
out
fisubrl
sbb
mov
jg
sub
push
cld
hlt
shlb
lret
inc
push
data16
ss
sub
into
into
cmpsl
ret
sub
cltd
sahf
xor
and
ds
sbb
ljmp
jo
add
aad
inc
idivb
jge
jbe
ds
dec
fimuls
jle
notl
std
loopne
decl
sbb
pop
in
jae
push
add
in
out
mov
inc
jmp
fiadds
xrelease
sbb
loope
xorb
jne
adc
mov
and
inc
enter
xchg
adc
jle
push
les
scas
push
shll
and
sbb
and
adc
mov
cmp
sar
decl
xor
cltd
adc
mov
xor
jg
shl
sbb
xor
push
sbb
lret
in
adc
mov
push
jg
pushf
pop
jg
frstor
test
lcall
xchg
mov
andl
jns
add
data16
outsb
push
clc
mov
adc
jg
adcl
push
pop
push
call
push
xchg
insb
push
sbb
ljmp
mov
xor
add
leave
test
call
lea
loope
pop
je
test
sbb
mov
xor
aam
fbstp
decb
xchg
cwtl
xlat
sti
dec
lea
and
xor
das
cli
int3
xchg
push
mov
push
cmp
out
out
sbb
sbb
pop
or
dec
xchg
testl
icebp
add
dec
cmp
jg
je
inc
dec
sbb
push
jne
pop
adc
stos
push
pop
and
sub
sub
add
mov
push
repz
iret
adc
push
decl
or
into
sbb
cwtl
push
fstp
pusha
ljmp
mov
stc
sbb
insl
pop
enter
sbb
jg
xchg
push
mov
xchg
int
pop
inc
or
pop
inc
hlt
mov
push
sbb
sti
in
pop
push
js
sbb
mov
add
fcomip
pop
cmpsb
pop
fwait
inc
sbb
or
cmc
jbe
test
and
or
es
and
jmp
adc
arpl
and
adc
dec
mov
sub
imul
push
jmp
movsl
sub
inc
hlt
outsl
or
call
mov
push
mov
stos
lods
stos
jecxz
addr16
mov
xor
mov
popa
and
mov
out
mov
xlat
sbb
fildll
cld
jmp
sahf
imul
stos
mov
fwait
out
adc
or
call
add
sbb
and
xchg
ret
sahf
cmp
sbb
loopne
jge
push
scas
cli
push
sub
arpl
test
xor
daa
mov
mov
out
daa
sbb
jo
add
cmpsb
cli
out
adc
mov
negl
add
dec
lret
xor
dec
inc
inc
cmp
int3
sar
decl
cmp
repz
jecxz
inc
je
cmp
sub
mov
jnp
dec
iretw
clc
lcall
pop
mov
jg
arpl
jmp
stos
testb
cmp
mov
lret
or
jmp
les
pop
andb
fmull
call
fsubrs
xor
das
xor
mov
jae
lea
cs
inc
sbb
pop
mov
cmpsl
in
test
mov
pop
dec
int3
jge
mov
loopne
add
mov
cmpsb
pop
in
movsl
pop
orb
repz
loopne
and
mov
clc
in
adc
xchg
pop
pop
push
bound
xchg
call
jmp
xor
xchg
push
mov
pushf
orb
mov
lahf
jns
pushl
shlb
fisttps
scas
loopne
adc
xor
mov
incl
pop
jo
xor
cmp
clc
dec
daa
mov
jp
adcl
jp
mov
clc
int
lock
pop
fidivrl
add
inc
dec
mov
xor
js
clc
pushf
xchg
sub
or
mov
outsb
xchg
xor
pop
ret
into
pop
pusha
pushl
data16
pop
pop
xchg
mov
push
pop
loopne
or
lea
jle
test
push
insb
ja
mov
inc
push
hlt
adc
mov
pop
pop
fsubl
push
add
or
jnp
fnstsw
test
aas
icebp
jae
mov
push
jmp
dec
push
outsl
push
jmp
dec
into
pushf
cmp
and
cmp
outsb
dec
ljmp
lret
lahf
xchg
pushaw
arpl
leave
scas
mov
sahf
push
inc
das
pop
add
mov
pop
mov
icebp
add
ds
rcrl
jmp
jg
inc
pop
data16
test
lret
or
pusha
jge
sub
push
or
or
insb
pop
xchg
pusha
and
dec
add
adc
or
clc
fwait
xor
pushf
jne
aad
xor
mov
xchg
jmp
jae
test
adc
dec
push
in
mov
add
movsl
add
jge
lods
jg
jne
mov
dec
gs
jbe
xchg
mov
es
fwait
add
xor
mov
mov
dec
inc
jecxz
or
mov
xor
mov
fmull
fildll
xor
scas
lea
fadd
int
mov
outsl
mov
clc
add
push
push
mov
dec
pop
pop
pop
add
inc
aam
add
mov
pop
popl
pop
lgs
xchg
test
jl
cmp
push
cmp
add
in
outsb
leave
xor
push
js
jmp
push
ss
push
faddp
add
xlat
test
mov
or
xor
subb
pop
filds
dec
icebp
call
fisubs
sub
xor
push
dec
stos
inc
sar
push
pop
scas
push
popa
push
or
dec
test
sbb
aad
sub
lahf
mov
and
inc
add
lahf
or
pop
push
push
ss
adc
sub
nop
pop
ss
pop
rclb
add
add
inc
inc
cld
adc
xchg
xchg
leave
dec
call
or
cmp
adc
add
movsb
fiadds
es
fsave
add
xchg
xchg
pop
dec
daa
pop
and
clc
push
cmp
pop
ret
outsl
adc
sub
fadds
inc
mov
dec
call
pop
out
mov
inc
out
mov
mov
sub
aaa
es
insb
leave
mov
dec
and
dec
inc
mov
jg
lock
js
pop
inc
sbb
push
outsl
imulb
incl
adc
fisubl
daa
xor
aad
and
add
xchg
add
je
dec
aam
cmpsl
scas
test
insl
cmpsb
jle
js
movsl
and
push
scas
jg
pop
out
dec
shr
test
pop
mov
lcall
das
es
dec
fld
push
insb
mov
jl
shlb
cli
push
insl
out
xorl
inc
shrl
adc
push
dec
out
xchg
xchg
mov
movsl
and
addr16
lea
jne
sub
jb
sbb
cmpsb
fwait
or
int
and
jns
xor
and
cli
in
sbb
stos
loopne
outsl
ss
scas
subb
les
sub
test
fcomip
sub
xorl
adc
mov
ss
inc
call
pop
das
popa
cmp
inc
aas
xor
roll
sbb
inc
out
jl
cmp
dec
pop
add
dec
stos
scas
scas
xor
into
fwait
shr
orb
mov
arpl
movsl
imul
and
mov
bound
mov
pop
mov
enter
sub
jne
loop
out
out
lret
addl
cmp
and
aaa
ds
stc
or
or
push
rol
data16
mov
xchg
xor
or
add
or
push
mov
jecxz
lea
and
jmp
jle
and
jno
sub
out
je
xor
push
cs
jecxz
lret
pop
mov
loopne
stc
outsb
xor
scas
xchg
in
add
enter
outsl
ret
movsb
cmp
bound
fisubs
loop
decl
mov
mov
sahf
stos
pop
cld
mov
cli
cld
cmp
incl
loope
inc
inc
and
imul
mov
stos
push
pop
mov
popf
out
xchg
jl
out
test
ret
dec
in
adcb
add
clc
mov
mov
enter
xor
xchg
mov
xchg
decl
fs
test
outsl
or
fdivrl
out
shl
lcall
or
test
sbb
cmp
ja
ljmp
icebp
ss
fbstp
sbb
aam
mov
dec
nop
gs
js
mov
add
pop
ds
cli
fists
cs
push
push
int3
fldcw
push
add
dec
sar
decl
fs
dec
aaa
adc
pop
dec
inc
lods
call
pusha
xor
fs
hlt
rcrl
and
add
inc
sub
adc
pushl
std
or
pop
daa
adc
js
dec
lea
add
inc
dec
mov
aas
sub
ljmp
test
adc
or
or
cld
cmpsl
push
pop
lcall
sbb
mov
int3
push
jg
frstor
jbe
jns
mov
roll
cld
dec
mov
fstpl
xor
shr
loop
add
orb
jmp
sbb
xchg
mov
ljmp
cmp
les
into
sub
stos
cmpsl
jo
adc
stos
imul
jecxz
in
jg
call
loop
aas
aad
jl
sub
mulb
out
js
sub
jmp
or
rorb
dec
lret
iret
push
js
mov
scas
cld
decl
mov
loop
inc
rcll
imul
test
scas
jge
sub
decl
loop
inc
out
test
mov
ljmp
lcall
sub
xchg
sub
stos
jmp
fwait
sub
int
sbb
fidivrl
insb
popa
jl
data16
adc
dec
sub
movsl
or
out
sti
xor
arpl
popa
xchg
mov
out
incl
pop
dec
or
es
call
xor
mov
cld
mov
push
adc
push
in
imul
push
cltd
jg
xchg
add
imul
xchg
aam
sarb
adc
xor
jp
add
jmp
jnp
mov
pop
insl
add
mov
insb
lahf
incl
jns
mov
mov
mov
rorb
out
arpl
in
pop
sub
xchg
lret
or
ljmp
ljmp
imul
notb
cmp
loope
mov
and
xchg
pop
adc
je
xorl
lcall
out
je
dec
mov
jbe
jbe
ljmp
icebp
test
xor
stos
sti
dec
ljmp
es
inc
rcrb
dec
sti
mov
leave
pop
out
sbb
rorl
jg
vprotw
cld
popa
in
jbe
push
fldcw
mov
dec
jg
ret
sub
mov
xor
or
pop
cs
cmp
cld
mov
cs
pop
add
sbbl
aas
jmp
and
test
call
ret
sbb
xor
lahf
jae
cwtl
sahf
mov
pop
fists
cmpb
add
adc
xchg
mov
ja
popf
data16
jg
hlt
test
nop
mov
jl
adc
stc
out
cld
sub
lcall
mov
pop
dec
cmp
nop
out
pushf
fwait
pop
pop
icebp
fndisi(8087
popa
mov
pop
data16
das
pop
aaa
mov
mov
cs
bound
outsl
pop
xlat
movsb
fmul
jae
mov
fs
xchg
stc
ljmp
cmp
pop
and
icebp
push
xchg
movsl
mov
sbbl
xor
stc
fidivrl
loope
fadds
mov
scas
pop
fwait
decl
sub
mov
iret
fistpll
ret
call
xchg
jns
je
aas
call
push
push
icebp
ret
inc
stc
gs
outsb
cwtl
push
pop
ret
or
push
mov
inc
jae
mov
je
lods
out
push
das
test
outsb
test
rol
sbb
sub
pop
lock
pop
decl
incl
xchg
into
jne
inc
cmp
pop
mov
js
dec
mov
out
cmp
jecxz
pop
lock
jmp
inc
je
out
out
push
sbb
xchg
mov
and
mov
cmp
lcall
and
mov
hlt
out
sbb
push
sahf
mov
mov
fs
xor
lods
mov
jp
out
pushl
loope
negb
sbb
bound
je
push
fsubrl
fstl
mov
fstpt
les
push
push
pushf
in
arpl
out
les
xchg
mov
pop
icebp
pushl
imul
jge
stc
mov
add
mov
pop
imul
incb
mov
inc
roll
incl
push
jo
in
aam
movsl
test
or
in
bound
jle
or
add
test
ret
jbe
jo
add
mov
xor
or
adc
out
jne
cltd
loope
arpl
test
cmp
clc
ljmp
mov
aas
cmpsb
adc
arpl
inc
push
mov
adc
pop
sbb
pop
or
out
shll
jmp
inc
into
jo
sbb
lcall
outsb
je
jae
js
cmp
das
dec
push
jne
nop
int3
and
dec
pop
pop
cld
pop
xor
adc
adc
ljmp
gs
jg
pop
enter
je
jmp
inc
test
das
repz
xchg
mov
ret
psrlw
imul
inc
inc
ljmp
insb
xchg
and
sub
push
std
lcall
ljmp
addr16
mov
incl
gs
sub
inc
nop
adc
and
aas
mov
xlat
or
std
adc
sbb
add
ljmp
pop
and
test
jns
mov
mov
xchg
xchg
out
addb
bound
mov
sbb
mov
test
mov
jmp
ljmp
ljmp
push
mov
xchg
imulb
or
pushf
sbb
insw
push
sub
repz
movsb
les
jns
scas
fcmovu
fidivl
jmp
loope
loop
ljmp
adc
loopne
testl
repz
sahf
lock
fcoms
inc
jno
dec
lcall
mov
inc
pushf
in
sub
pushw
or
pop
add
lcall
xchg
int3
mov
inc
mov
add
pop
push
cld
stc
dec
gs
out
mov
mov
pop
mov
mov
sbb
imul
paddd
sahf
mov
icebp
push
out
pop
xchg
out
lods
lock
ret
push
repz
cs
repz
ljmp
sbb
bound
das
mov
pop
and
popa
dec
fs
in
dec
incl
push
arpl
fstpl
arpl
arpl
in
jbe
jle
push
inc
push
lahf
pop
outsb
arpl
arpl
out
sub
adc
hlt
scas
mov
xchg
shll
out
pop
pop
lods
and
sbb
pop
xchg
push
nop
pusha
or
jge
cmp
jmp
incl
cmp
dec
jne
lods
inc
xchg
pop
frndint
pop
pop
jl
xchg
insl
scas
pusha
adc
and
add
or
add
fs
add
adc
cli
dec
xor
cmp
xchg
das
insl
mov
std
sbb
rcll
test
ret
add
jne
out
test
sub
xchg
ljmp
jge
pusha
imul
mov
push
popa
and
mov
ljmp
mov
pop
cmpsb
jnp
bound
mov
inc
mov
xor
insb
cld
incl
jnp
dec
push
or
xchg
movsb
inc
sahf
mov
int3
xor
fsubl
or
push
jb
decl
fisttpl
adc
scas
test
lods
pop
rolb
lcall
loop
xchg
imul
lea
mov
cltd
push
mov
aaa
gs
movsb
fs
mov
add
fstl
sbb
sub
jbe
js
cs
pusha
pushf
inc
inc
mov
add
stos
push
mov
xchg
jmp
inc
push
xor
mov
jg
jno
out
sahf
add
les
jo
xchg
repz
jp
xchg
xchg
pop
dec
sbb
mov
addl
xchg
mov
stc
push
std
stc
xor
aas
in
call
out
inc
push
pop
or
inc
imul
xchg
test
pop
mov
inc
lods
jns
jmp
sbb
sub
or
adcb
fcomip
jmp
iret
xchg
sub
mov
lods
push
xchg
dec
sub
mov
push
ljmp
in
inc
add
add
mul
popl
push
scas
lock
mov
add
ja
jmp
lahf
push
movsb
std
pushl
xchg
ficoms
clc
xlat
mov
cmpsb
cmpsl
jo
ss
push
sbb
ja
pandn
pushl
lret
push
xchg
add
test
idiv
mov
pushl
pop
mov
fistpl
in
fisubrs
mov
push
sbb
cmp
out
cmp
loope
stos
add
jge
jb
ljmp
ja
pop
and
mov
jp
rcrb
pop
call
les
push
jp
fists
pop
xchg
fcmovnb
sbb
push
imul
adc
je
aam
lcall
lods
mov
jecxz
xor
insl
mov
xchg
decl
xchg
enter
clc
pop
out
fidivl
mov
and
jg
incl
dec
and
push
movsl
pop
jnp
sbb
add
aaa
and
jg
mov
mov
lahf
fs
pop
inc
daa
imul
out
jl
cli
cmp
fcomps
or
push
mov
lock
mov
and
je
pop
pop
incl
cmc
iret
dec
mov
sbb
mov
adc
lcall
inc
cmp
dec
jmp
pop
scas
sbb
xchg
imul
stos
xchg
sar
xchg
mov
pop
pop
es
cmp
pop
test
and
mov
sub
testb
push
and
rorb
add
mov
std
xchg
das
es
cmp
mov
sub
pop
dec
add
jbe
xchg
call
bnd
daa
imul
inc
cmp
inc
inc
insl
dec
jmp
aam
inc
stc
shrl
adc
jmp
cmpsb
mov
das
lahf
sbb
rcr
imul
icebp
xlat
rcrb
add
jg
mov
adcb
bswap
jo
sbb
adcb
mov
in
lret
add
mov
mov
pushf
xchg
lahf
sub
mov
xchg
xchg
es
and
cli
xchg
decl
xchg
stos
and
add
push
sub
mov
mov
pop
scas
div
xor
sti
mov
mov
outsl
and
xchg
adc
cs
jo
mov
mov
mov
jno
push
movsb
push
jle
sbb
dec
push
or
mov
insb
pushl
das
shlb
cmp
push
mov
sub
inc
pop
data16
lahf
imul
repnz
lcall
sbb
pusha
js,pn
jl
test
fadd
dec
iret
and
adc
pop
lret
ljmp
idiv
pop
push
push
insl
mov
cmc
xchg
fsts
cmc
decl
inc
sbb
and
push
lret
jle
lret
lods
movsb
mov
repz
arpl
mov
insl
mov
and
iret
call
dec
cmc
stos
and
xchg
fnstcw
or
sahf
jl
pushl
dec
out
xlat
sbb
mov
mov
das
push
mov
idiv
dec
clc
pushl
cmp
rclb
popa
push
ja
outsl
insb
lods
arpl
test
sbb
pop
mov
pop
inc
mov
add
insb
push
mov
pop
outsb
jg
rol
aad
cmp
and
push
ror
in
clc
lcall
push
and
cmpsl
daa
push
push
jge
mov
pop
ret
and
movb
or
call
jne
jno
pop
mov
dec
and
jl
mov
sbb
push
or
pop
popf
rorl
mov
pop
addr16
jl
adc
mov
jae
call
jp
lahf
arpl
stos
ds
jg
mov
loop
cmp
ds
jno
ja
leave
aam
ds
push
xchg
jns
jmp
push
add
pop
das
test
lret
xlat
sub
push
mov
pushf
and
fistps
lock
mov
inc
pop
mov
pop
mov
outsb
ss
cmp
inc
push
mov
aaa
sbb
sbb
call
testb
out
push
mov
outsb
cmp
je
jg
jle
sahf
add
mov
rorb
pushf
jb
push
xor
jle
incl
pop
cmpsb
pop
cwtl
in
jge
xchg
or
mov
jno
mov
jp
std
repz
call
jle
loope
mov
stos
push
imul
pop
push
lahf
pop
dec
adc
sbb
mov
ficomps
sbb
mov
cwtl
sti
inc
mov
or
xchg
mov
and
pop
sarl
dec
ja
movb
stc
cmp
and
out
inc
push
add
iret
aad
pop
pop
jecxz
mov
sahf
js
inc
mov
inc
pop
pop
mov
add
fbstp
jge
mov
push
sbb
decl
lock
mov
test
out
jmp
fs
call
cld
mov
fmuls
jecxz
sbb
jo
out
bound
jae
lret
mov
mov
cwtl
movb
sub
dec
adc
bound
inc
sarb
loope
jg
les
jge
popa
xchg
fs
sbbb
mov
mov
sub
xor
xor
lcall
in
push
lahf
jns
minps
jno
mov
add
or
or
call
dec
add
stos
ret
sub
push
out
insl
mov
inc
insb
inc
lret
pop
jbe
mov
push
test
call
mov
and
sub
inc
pop
aad
sbb
fstl
lock
clc
cs
mov
nop
jle
ljmp
fs
stc
xchg
adc
shl
pop
push
and
push
jno
pop
lock
jnp
xchg
mov
mov
loope
outsb
cmpsb
mov
das
clc
incl
add
loop
in
xchg
ficompl
mov
jle
fnstcw
mov
or
jo
aaa
daa
ficomps
mov
xorb
test
fwait
push
xchg
fwait
cmp
sbb
adc
cmp
sub
add
mov
xor
mov
or
and
jge
or
ljmp
pop
add
or
xor
das
insl
xor
popa
pop
fbld
sub
push
sbb
cmp
adc
xor
and
sub
sbb
adc
std
and
pushl
push
push
dec
es
push
sbb
test
sub
dec
adc
sub
mov
and
xor
fistps
xchg
aaa
xor
das
cmp
ret
mov
cmp
cmp
and
cmp
insl
outsl
pushl
xchg
push
jb
push
aaa
push
aaa
pop
xor
aaa
dec
jg
call
fs
pop
pop
dec
push
push
push
dec
cmp
pusha
or
insl
cmp
push
push
inc
mov
imulb
inc
sbb
dec
and
outsl
xor
add
aas
lcall
or
adc
xor
pushf
push
out
xchg
addl
pushl
notb
xchg
xor
xchg
adc
aam
xor
mov
lahf
daa
addb
push
das
jno
push
mov
pop
lcall
out
aaa
or
and
add
adc
femms
adc
lcall
ljmp
adc
or
dec
sbb
outsb
aaa
push
pop
cmp
push
daa
pop
push
jbe
jno
jp
movsl
sub
adc
clts
add
sbb
cs
or
cmp
adc
sbb
adc
js
mov
xor
inc
xor
jg
pop
and
and
imul
inc
add
dec
and
mov
or
and
push
fs
bound
gs
inc
push
pop
ficomps
adc
cmp
pop
jb
inc
add
dec
sub
adc
add
lcall
xor
add
adc
aaa
lahf
aaa
xchg
xor
xchg
aaa
adcb
adc
cmpsb
xchg
jle
jo
pop
add
icebp
sbb
dec
and
shl
and
ja
hlt
aam
adc
xor
andl
xor
and
xchg
cmpsb
pop
and
sub
pop
mov
xor
xor
cmp
aaa
cwtl
dec
incl
or
and
xor
push
das
incl
loopne
pop
sbb
pop
add
inc
daa
decb
call
push
inc
aas
pop
push
push
sbb
adc
daa
dec
sbb
push
aaa
dec
cmp
pop
icebp
mov
jne
insl
xor
add
inc
add
dec
pop
inc
sub
jge
push
pop
jbe
xor
lcall
mov
sbb
xchg
into
cmp
pusha
mov
cld
cmp
pop
aaa
or
call
mov
imul
pop
cmp
pop
insl
fstpl
dec
dec
icebp
inc
jecxz
cli
mov
das
inc
out
fiadds
push
lcall
enter
fldcw
pop
xor
add
das
add
hlt
iret
mov
arpl
pop
jle
dec
jmp
cmp
bound
jmp
sbb
movsl
pop
rcrb
lods
hlt
out
scas
inc
jne
jmp
mov
neg
cld
xchg
sub
js
outsl
push
lock
out
and
mov
mov
add
xchg
pmaddwd
adc
jmp
xlat
mov
xchg
cmp
jmp
xchg
test
pop
clc
ret
out
push
daa
flds
jnp
xchg
out
cmp
add
push
inc
pushf
sub
ja
inc
cmp
pushl
ret
lret
mov
adc
fwait
push
lret
adc
sbb
pop
fsubr
cwtl
ret
xchg
cmp
stc
or
cmp
mov
sbb
mov
push
mov
xor
aam
gs
jne
push
lods
jmp
push
hlt
push
mov
pop
scas
test
xor
xlat
dec
xchg
fmul
pop
insb
adc
sub
mov
es
mov
inc
imul
jg
inc
adc
xchg
inc
push
sbb
mov
pop
jge
dec
jle
scas
pop
pop
mov
lock
and
pusha
bound
jb
sbb
xchg
dec
cli
ljmp
push
add
mov
insl
enter
fwait
cltd
mov
pop
nop
pop
add
xor
imul
popf
fadd
cmc
pushf
in
ja
pop
mov
psllw
aaa
ret
repz
repnz
jae
fisttps
or
cltd
mov
inc
mov
inc
shll
mov
mov
jg
imul
cltd
cli
mov
stos
outsb
mov
ja
cmp
push
pushl
sub
sbb
xchg
push
lret
pop
jae
inc
dec
aas
push
mov
or
fidivrl
xchg
pusha
fwait
lcall
out
mov
fldenv
mov
pop
fildll
push
adc
pushl
dec
aaa
adc
fcompl
or
mov
pop
pop
dec
xorl
lret
sub
inc
mov
loopne
in
ret
jmp
push
sahf
cmpsl
into
dec
pop
gs
fldl
dec
mov
cmc
mov
cmpsb
lret
call
mov
into
shlb
loopne
out
dec
add
std
movd
mov
pop
jbe
ljmp
xchg
ljmp
inc
mov
loope
fcomip
jnp
fsubr
cmpsl
repz
loop
cmp
adc
call
cld
pop
and
or
adc
clc
cmpsb
dec
push
pop
sub
cmp
inc
mov
jle,pn
stos
popa
shrl
xchg
pushl
ds
fmull
sub
pusha
add
jmp
adc
ds
sbb
xor
hlt
imul
jge
jmp
sub
and
cmc
imul
add
push
adc
aam
sub
pop
cmp
adcb
incb
stc
pusha
add
pusha
mov
jb
or
sbb
jmp
sub
sub
mov
call
gs
sub
dec
xchg
push
dec
and
jmp
mov
insl
aaa
das
or
inc
cmpsb
add
add
xchg
es
jne
pop
stos
iret
lcall
int
pop
insb
pop
repz
sbb
cmc
xor
in
lock
dec
aaa
lcall
cmp
and
add
repz
xchg
ret
dec
stos
frstor
sub
dec
ds
cs
dec
repz
inc
mov
out
adc
pop
add
movsb
add
push
jg
or
outsl
clc
xchg
mov
xor
into
jae
orl
ficomps
repz
js
jne
shrl
pop
in
aaa
lahf
iret
xchg
cmpsb
inc
jb
aaa
add
mov
xor
ds
ds
das
shlb
and
test
dec
push
jl
adc
mov
movsb
dec
scas
add
mov
int
sbb
clc
roll
mov
cmp
push
jl
and
sbb
inc
xor
repnz
sbb
pop
daa
sbb
pop
outsl
mov
dec
daa
clc
sbb
add
sub
lock
xor
cmp
icebp
cmp
pop
enter
rclb
sbb
int
jns
add
dec
shll
hlt
imul
popf
mov
mov
and
fdivrs
mov
push
inc
lock
mov
mov
stc
dec
xchg
cmp
push
push
push
inc
inc
pop
push
lahf
out
push
xor
out
push
std
loopne
stc
pop
insl
cmp
adc
xchg
bound
jb
add
cmp
dec
xor
push
mov
aam
mov
clc
int
cmc
and
icebp
gs
out
loop
sub
lcall
incl
dec
xor
aas
and
inc
xchg
jg
dec
push
push
adc
pop
mov
pushl
pushf
loopne
xor
into
push
dec
pop
inc
or
lock
pop
rorb
ftst
xchg
mov
dec
sub
push
adc
mov
into
lds
jge
adc
dec
insb
sbb
add
aas
jle
fwait
jl
push
outsl
sub
pop
inc
ss
and
jo
fldt
repz
xchg
xchg
bound
mov
repz
xchg
mov
mov
sub
xchg
jne
lock
int
out
enter
pop
test
mov
test
imul
add
lods
inc
and
xchg
lret
mov
xor
mov
outsl
lods
xchg
push
xor
mov
adc
push
sub
mov
sub
das
and
sbb
aad
setnp
sarw
rorb
sub
fldcw
iret
push
rcrl
std
iret
int3
ss
int
mov
push
lock
mov
lds
lret
imul
push
and
jle
fwait
int
and
scas
lods
pushf
sbb
fldcw
notb
fwait
int
andb
sub
lahf
data16
in
cmpsb
fmuls
lret
mov
insb
ss
sub
outsb
ss
int
into
dec
push
imul
punpckldq
mov
insb
aam
outsb
insb
ret
inc
ds
insb
ss
int
dec
cmp
aas
pop
inc
jge
addr16
mov
lods
inc
fstpl
lahf
inc
add
insb
ss
push
adc
sbb
xor
data16
add
int3
or
add
xchg
sbb
scas
xor
mulb
cmp
mov
and
xchg
adc
pusha
movsb
outsl
int
fwait
int
dec
imul
enter
rcrl
call
jb
adcl
xchg
and
cs
aas
push
mov
shll
add
pop
mov
pop
rsqrtps
cld
xchg
hlt
pushl
pusha
loop
loop
xlat
pop
push
loop
inc
xchg
gs
frstor
ds
dec
hlt
jmp
pop
add
stc
jns
int3
mov
xor
add
inc
pusha
or
adc
lcall
out
out
or
arpl
hlt
sbb
lret
jnp
movsl
pop
movsl
pop
gs
mov
es
mov
ss
xchg
add
jmp
std
lcall
sbb
in
inc
jp
inc
inc
clc
adc
shl
sbb
jg
add
cmpsb
dec
inc
jle
in
mov
jbe
push
pushl
popa
push
lret
inc
jl
pop
xor
sub
daa
adc
popf
jnp
inc
mull
test
clc
push
cld
and
mov
or
lods
pop
sbb
inc
jnp
pop
ljmp
scas
cmpsl
daa
cld
filds
fsubs
idivb
mov
add
sub
gs
inc
add
inc
mov
out
or
push
aad
daa
sub
cmc
lcall
adc
push
arpl
in
inc
ret
and
pop
push
nop
ret
lcall
pushf
push
cmp
decl
jecxz
mov
xchg
inc
hlt
stc
movsl
push
mov
sbb
data16
lods
inc
add
repnz
loope
gs
iret
add
lods
cmp
inc
mov
stos
push
cs
pop
cmc
mov
je
dec
push
leave
into
divb
jmp
decl
aas
add
stc
fstpl
and
addr16
fs
outsl
pop
jbe
out
cld
mov
xchg
and
icebp
add
dec
mov
mov
sub
add
jge
xchg
inc
xlat
jge
insl
in
xchg
cld
pop
cmp
adc
xchg
sahf
cmp
mov
pop
xchg
fs
fnstsw
lret
xchg
push
push
imul
arpl
aam
cmpsb
or
inc
mov
cmp
icebp
cmpsb
call
loop
lret
or
or
sbb
or
ljmp
addb
sbb
int3
jb,pt
jle
jae
pop
mov
mov
fdivl
test
rcrl
test
jmp
inc
xchg
fiadds
adc
fst
adc
push
sub
or
jg
sub
les
xchg
jo
pop
xor
mov
ljmp
sbb
jg
adc
mov
add
pop
jg
inc
les
inc
mov
cmp
jbe
sub
pop
inc
loope
add
pop
or
incl
xlat
or
gs
test
or
jns
pop
insl
or
and
gs
sub
add
jge
jb
int
pop
dec
sub
shl
push
in
cmp
inc
xor
and
loop
jmp
pusha
scas
jl
xchg
push
hlt
xchg
inc
ljmp
sbb
pop
add
jp
loopne
or
adc
shll
inc
idiv
call
iret
mov
jmp
adc
sbb
xlat
lahf
addr16
aas
mov
movl
dec
adc
push
cmp
lds
adc
jg
fcmovnb
pop
mov
popf
addr16
loope
test
jge
add
xor
add
ss
cmp
loop
mov
pop
adc
imul
mov
pop
sbb
lea
pop
orb
cld
dec
xchg
aaa
in
push
mov
lcall
inc
sbb
dec
data16
fnstcw
sub
popa
mov
pop
cli
movsl
jle
ja
pop
stos
and
iret
add
jg
push
pop
xor
inc
mov
or
clc
mov
andl
inc
mov
clc
gs
jg
filds
mov
or
inc
xchg
scas
into
mov
mov
mulb
inc
aaa
aas
cmp
add
add
fnstenv
pushl
lds
mov
aad
dec
pop
dec
add
adc
push
cmp
add
dec
sarb
repz
jle
fsubl
lret
cmp
pop
push
test
stos
dec
and
gs
jg
sbb
or
jg
cmp
pop
iret
push
addb
inc
stc
movsb
repnz
hlt
ja
fadds
das
ljmp
sub
adc
or
and
xor
mov
sti
jmp
ficoml
fmuls
add
mov
push
inc
ljmp
fistps
stos
shrb
inc
push
xor
fistpl
pop
dec
cmp
out
clc
jg
or
cmpsb
pop
sarl
lcall
mov
mov
data16
and
push
add
lods
idivb
push
stos
cmp
incl
or
push
adc
nop
outsl
pop
icebp
pop
repnz
xchg
aas
inc
test
decl
or
lcall
inc
idivl
sub
rcrb
sbb
pop
stos
insl
xchg
adc
ds
dec
lock
pop
xchg
inc
mov
mov
lcall
pop
jl
pop
cmp
cmp
shll
dec
sbb
iret
and
cmp
cmc
jg
insl
and
out
pop
insl
lds
push
pop
jle
pop
xchg
enter
cmp
cmc
cld
mov
sahf
shrb
add
add
in
pop
arpl
push
jmp
ljmp
jp
ret
mov
pop
ja
enter
pop
lods
dec
xchg
mov
jg
dec
and
arpl
mov
pop
stc
testb
bound
pushl
nop
push
add
imul
fcomip
jbe
inc
lods
adc
aaa
or
sub
bound
inc
in
mov
xor
ljmp
fs
xchg
mov
cli
roll
xchg
sbb
cmp
inc
mov
fwait
out
lea
jmp
les
stos
aad
call
repnz
ljmp
loopne
adc
jb
ret
xchg
stos
pop
jns
sbb
add
jns
outsb
mov
adc
imul
incl
xchg
pop
popf
in
mov
and
push
sub
xor
add
sar
push
outsb
outsl
stos
jle
aas
xor
push
inc
and
je
pop
jle
dec
push
dec
mov
fcomip
jmp
es
sbb
je
sub
daa
pushf
cwtl
fldln2
cmpsb
in
xor
or
xor
adc
cmp
incl
inc
stos
fs
jge
sbb
adc
pop
les
jecxz
xor
mov
adc
out
mov
jne
jns
mov
xor
cld
pop
es
and
sbb
and
adc
mov
test
nop
cs
push
mov
jns
cmp
add
incl
bound
sub
or
imul
push
cld
fstps
mov
inc
xchg
pop
ret
add
out
push
sbb
mov
jmp
pop
mov
push
loop
adc
sbb
outsb
jb
pop
pop
les
out
push
fmull
fisttpll
cmpsb
int3
cmp
loopne
jg
scas
stos
rcll
stc
xor
or
arpl
outsb
std
and
js
jo
loope
sub
pop
hlt
add
push
imul
cmp
sbb
inc
ljmp
and
push
dec
push
lods
gs
pop
or
test
rcrl
push
add
fs
fs
test
adc
add
jmp
xor
pop
gs
js
pop
pop
jo
cmc
or
and
jmp
je
pop
jle
pop
push
pop
fwait
jbe
push
jecxz
add
sbb
add
fadds
inc
dec
pop
jo
pop
hlt
decl
jge
imul
and
in
sbb
push
decl
push
enter
mov
and
lea
jge
cmpsb
sbb
mov
or
ljmp
push
cld
mov
sbb
xor
jle
daa
js
cmp
jne
ret
pop
and
popa
aaa
decb
cmp
sar
push
xchg
pop
sub
cmp
fnsave
outsl
cmp
fiadds
push
popa
dec
mov
push
jg
divl
movl
mov
ja
rclb
mov
lds
test
add
and
lcall
jg
inc
xchg
imul
adc
cmp
push
adc
outsl
mov
jae
pusha
xor
sarl
aaa
and
push
mov
sub
and
inc
test
xor
mov
add
or
lcall
call
add
cld
push
les
mov
jo
fucomip
lcall
aad
subl
call
pop
xchg
addr16
jne
loopne
mov
jae
mov
outsl
ret
cs
xchg
dec
arpl
in
sub
and
loop
xor
ljmp
inc
movb
lret
sar
jg
shr
daa
and
jecxz
pop
gs
test
mov
inc
pusha
jnp
data16
inc
cmc
lret
pop
scas
jb
cli
incl
mov
xor
cli
cmp
sbb
xor
mov
cmp
jbe
mov
ret
jae
cmp
and
push
cld
lcall
push
jle
mov
ljmp
clc
add
xchg
pop
mov
xchg
inc
pop
push
aam
push
rorb
mov
popa
sbb
into
add
inc
xorl
lds
data16
push
and
in
pop
les
popf
rclb
ret
out
fldl
add
push
and
or
jae
sub
out
ret
ret
pop
shlb
cmpsl
pushf
push
fiaddl
pop
repz
xchg
lcall
cmp
and
loope
fcmovu
cmp
push
or
incl
mov
aaa
jnp
je
jo
push
es
adc
incl
xchg
add
xor
rolb
jmp
dec
cwtl
adc
jno
sbb
and
sbb
mov
clc
pop
dec
das
xchg
sbb
popf
fstpt
mov
lcall
sbb
test
hlt
jg
test
insl
imulb
mov
add
jl
fnstenv
idiv
jg
rcrl
cmpsb
fbld
inc
dec
sub
fdivrl
jmp
test
cmp
icebp
dec
rclb
xchg
hlt
stc
jmp
jnp
ljmp
loop
pop
pusha
ljmp
lds
and
fistpl
push
inc
sbb
gs
mov
cwtl
imul
decl
jbe
inc
loope
mov
jbe
adc
not
xchg
repz
aas
es
into
cmc
and
push
xor
inc
mov
jle
dec
mov
popa
mov
cmp
jbe
std
lcall
in
or
sarb
mov
sub
push
js
mov
push
loop
pop
dec
pop
psadbw
pop
mov
or
pop
sti
in
sub
push
dec
push
dec
xor
mov
sbb
pop
or
ja
push
jmp
lahf
push
cs
das
mov
sbb
mov
push
cli
jg
cmp
movb
fisttps
out
cmp
sub
cmp
pushl
leave
pop
sti
repnz
gs
jg
lret
inc
push
inc
hlt
pop
hlt
push
out
xor
into
aad
pop
sub
loopne
mov
lret
mov
jge
push
push
xlat
sti
mov
xor
es
jg
incb
stos
and
inc
ljmp
sarl
andl
in
push
add
push
ja
sbb
sbb
push
pop
aam
xchg
add
fbld
aaa
push
push
js
or
push
dec
out
aas
dec
sub
mov
and
push
cmc
outsl
cli
call
ret
out
xor
cmp
mov
sub
or
or
das
push
cwtl
mov
jns
dec
iret
nop
cs
cmc
xchg
incl
xor
jg
ret
icebp
in
mov
xor
mov
incl
fsubs
jae
ficompl
push
push
ds
add
fs
js
jecxz
fst
jbe
adc
sahf
mov
mov
sbb
imul
mov
mov
jg
sbbb
jno
inc
sub
in
int3
pop
cmp
mov
fld
call
or
sub
push
daa
out
fimull
cld
add
fadd
dec
mov
in
xchg
jmp
pushl
and
aad
bound
vhsubps
ficompl
out
aas
lahf
jmp
mov
hlt
sub
fwait
out
sti
int3
lret
inc
sub
push
ljmp
lock
dec
out
movsb
arpl
sub
pop
bound
call
jmp
cld
push
mov
mov
rcr
divps
cmp
xchg
cmp
out
stc
push
inc
jge
loop
cmp
jg
xchg
out
inc
sub
or
loopw
jne
jo
mov
fmul
lahf
arpl
sub
push
in
dec
mov
xchg
xchg
shll
pushl
daa
and
push
sti
sub
sbb
add
pop
cmp
outsb
sbb
int
imul
loop
mov
fnstsw
pop
jge
out
add
lcall
adc
sub
loope
adc
shr
imul
and
je
pop
dec
cmp
into
jne
mov
fdivrs
sahf
jnp
js
cmpsl
push
push
ljmp
push
jg
ret
inc
mov
fwait
push
sub
xchg
repz
decl
arpl
mov
jp
mov
xor
push
inc
pusha
fs
jle
cli
sbb
stos
rcl
incl
pop
into
call
push
insb
mov
je
dec
fcoml
mov
es
lds
xor
lcall
inc
imul
repnz
popa
lea
jne
push
mov
push
inc
jmp
pcmpeqd
push
scas
ffreep
call
sub
pop
gs
jne
dec
ljmp
pop
sub
inc
pusha
dec
jmp
aad
mov
out
aaa
add
mov
pop
pop
ss
je
andl
jg
std
clc
cmp
shll
pop
xor
je
pop
iret
mov
out
sub
aad
and
fs
mov
push
cs
ret
data16
adc
fistpll
lods
fs
iret
lret
sub
and
mov
aaa
sbb
arpl
and
adc
ljmp
sbb
fwait
sbb
arpl
add
pop
fbld
popa
arpl
push
inc
dec
sbb
sbb
incb
iret
fs
bound
or
cld
add
stc
pop
fsubrs
jbe
fcmovnu
daa
sahf
filds
lahf
ljmp
push
inc
adc
add
sar
jns
test
inc
enter
adc
push
scas
mov
jg
pushl
fsubl
loop
cld
out
pop
arpl
adc
clc
lret
adc
pop
cmp
and
call
test
pop
cwtl
es
js
adc
xor
cmp
jb
pop
data16
lcall
pop
movsl
jmp
jg
sahf
mov
sar
loope
fildll
pop
add
gs
jg
das
xchg
ret
adcb
push
testb
mov
cmp
pop
and
outsb
arpl
xchg
in
addr16
pop
ss
add
inc
inc
xor
insb
stc
emms
push
fwait
pop
pusha
fidivs
cmp
imul
decl
xchg
xor
jns
pop
push
fucomi
std
jge
inc
inc
outsb
jb
out
cmc
pop
jmp
sbb
inc
lods
lock
cmpsb
xchg
sub
mov
leave
int
imulb
jge
cmpsb
bound
xchg
inc
movsb
mov
ret
and
sbb
ss
mov
add
cmpsb
lcall
out
jle
pop
jmp
pop
lcall
inc
cmp
add
mov
dec
inc
stos
movsl
or
std
call
pop
hlt
stc
xor
mov
or
mov
sub
scas
jecxz,pn
jnp
jg
sub
sbb
leave
pushf
call
pop
inc
jecxz
clc
fbstp
iret
inc
aas
push
ret
push
xchg
and
cmp
sahf
jno
mov
data16
sbbb
movsl
in
inc
popa
loope
inc
sbb
pop
pop
dec
std
lock
ss
add
lcall
and
dec
mov
lahf
dec
push
fmuls
lret
fstp
popf
sub
lret
movb
call
jne
in
lcall
dec
stos
add
out
pop
jmp
push
cmp
cmp
aam
sar
mov
adc
mov
loope
lock
mov
sbb
inc
rolb
pushl
mov
out
pop
sub
mov
push
inc
or
jne
stos
mov
nop
mov
add
loope
das
clc
dec
xor
jge
push
mov
mov
inc
inc
jp
mov
call
adc
subb
je
or
loopne,pn
xor
inc
fnstenv
mov
stos
cmp
int3
jbe
je
shrb
inc
mov
nop
mov
jne
add
sbb
adc
aas
std
jle
sbb
jae
xchg
imul
adc
aam
clc
pushl
sahf
inc
pop
mov
psubusb
adc
hlt
pop
push
out
dec
cmp
lods
inc
mov
jbe
es
fcoml
lahf
aaa
test
or
mov
lcall
push
inc
fidivl
stc
outsb
subb
cmp
pop
movsb
in
lods
ret
or
mov
xchg
inc
cld
add
repz
pushl
std
jmp
sub
xchg
adc
stos
ds
mov
pop
es
cwtl
fisubrs
pop
incl
fdivrl
fs
loopne
lods
xor
into
lcall
mov
inc
jecxz
into
cmp
rol
jnp
addr16
cmc
icebp
dec
add
fcomip
jg
addr16
jae
lcall
stc
or
jbe
or
pop
fwait
xchg
loope
add
pop
cld
jmp
sbb
xchg
jbe
mov
xchg
outsl
or
fistps
mov
dec
inc
xor
xor
fst
call
xlat
mov
popa
jp
pushl
cmpsl
push
es
adc
subps
outsl
lahf
test
sbb
pushl
std
addr16
fs
movsb
inc
pop
int
push
push
test
cld
cmp
sbb
jns
loopne
loope
add
push
aaa
cli
aas
add
xor
icebp
scas
orb
cmp
ljmp
mov
push
data16
imul
iret
sub
sub
xchg
and
and
out
cld
or
bound
fwait
dec
cld
cmp
bound
mov
rcll
leave
fwait
or
es
iret
ret
cmpsb
ss
pop
in
jns
dec
int3
xchg
test
daa
cmpsb
lcall
imul
dec
fldcw
and
decl
rorb
sbb
arpl
sub
jb
jae
fcoml
inc
adc
push
push
or
incl
xor
xor
loop
popa
jl
inc
sub
cmp
aas
inc
add
add
and
pop
xor
and
and
pop
mov
das
jle
inc
inc
jl
jb
jne
add
add
push
std
mov
sub
insb
xchg
pop
xor
test
or
push
sbb
jg
jecxz
cmp
inc
push
jge
mov
daa
push
add
incl
dec
insl
fcmovnu
shl
and
call
pop
pop
xor
lds
in
sub
cli
hlt
dec
mov
and
add
mov
ss
push
pop
cli
das
ret
bound
pop
aad
cld
call
mov
fs
pop
nop
sbb
jbe
pop
xchg
pushl
pop
pop
mov
add
jmp
lahf
and
inc
repnz
cvtdq2ps
ja
aas
arpl
mov
test
mov
dec
dec
push
sbb
jg
arpl
or
lahf
rcll
insl
arpl
push
mov
aam
daa
and
adc
out
clc
and
fwait
adc
mov
pushl
inc
shlb
movsb
mov
xchg
sbb
jecxz
or
or
sbb
cmp
out
push
jecxz
dec
syscall
add
shrb
aas
inc
lea
push
push
lahf
xor
lea
gs
es
mov
inc
les
test
xor
sub
jae
pop
dec
jmp
nop
cld
incl
pop
loope
cmp
sti
ret
or
div
sbb
sar
ljmp
jo
loope
cmpl
js
stos
es
xchg
test
jnp
enter
push
dec
jp
jmp
rcrl
stos
inc
pop
cmpsb
jae
data16
pop
xor
mov
mov
jmp
dec
xchg
fisubrl
dec
jecxz
push
xchg
mov
into
push
jns
mov
aaa
add
js
jg
dec
repz
push
les
stos
inc
pop
push
in
arpl
test
ds
test
xor
movsb
push
flds
fs
pop
pusha
pop
push
subb
incl
idivl
pusha
pop
push
inc
repz
fistps
andb
jne
adc
push
sysenter
inc
jnp
lcall
xchg
int
test
push
xbegin
jnp
out
dec
pop
fdivrs
incl
and
mov
and
dec
gs
cltd
jb
add
int3
jb
xchg
aas
fildll
into
fwait
xor
addl
aad
mov
insb
pop
aas
mov
cmpsb
dec
into
aad
jg
lahf
pop
enter
jp
sub
add
mov
dec
sub
dec
in
mov
divb
stos
dec
out
lods
push
in
movsl
mov
dec
ret
call
call
pop
mov
enter
dec
das
test
nop
mov
test
xor
and
dec
xor
int
orl
daa
jp
cld
repz
test
sbb
jecxz
jecxz
push
push
out
pop
cld
repz
aas
sbb
xor
pop
lret
or
pop
mov
dec
pop
enter
jb
add
ss
cld
add
out
aad
icebp
sub
sub
repz
xor
and
arpl
or
frndint
repz
adc
fistpl
divb
js
sbb
xor
add
fs
cmp
hlt
xchg
int
out
and
dec
ss
fwait
cmp
cmp
pushf
insb
adc
push
cmp
jae
or
out
lcall
push
int
xor
out
ret
adc
leave
dec
insl
dec
leave
dec
pop
add
addr16
push
dec
daa
fildll
mov
push
push
mov
enter
popa
inc
pop
ffree
mov
push
sub
sahf
jmp
fsts
xchg
and
pop
and
xchg
cmp
add
mov
mov
mov
pop
cwtl
clc
xchg
andl
pop
cmp
test
xor
cmpsb
sbb
add
and
xchg
loop
mov
mov
mov
outsl
inc
iret
out
ss
pop
ret
fnstcw
and
es
fidivs
jbe
int
jns
flds
iret
inc
repz
pop
iret
repz
jl
dec
addb
xor
out
ss
icebp
jl
in
dec
mov
adc
jne
addr16
and
cmp
cmp
int
insb
sahf
popa
push
or
pop
std
mov
cmp
pushf
cmp
pop
xchg
shlb
repnz
repz
inc
mov
iret
jae
gs
xchg
iret
repz
inc
or
ret
adc
xor
pslld
dec
js
shll
jne
leave
dec
jle
imul
push
pop
dec
mov
pop
lcall
sarb
dec
mov
lret
dec
divb
mov
mov
stos
xor
xchg
jmp
icebp
mov
xchg
lods
enter
mov
mov
cmp
push
test
inc
jbe
jg
scas
inc
scas
xchg
inc
mov
jl
out
sub
pushf
nop
cmp
cmp
cs
pop
lods
jg
sti
sbb
mov
stos
push
rcrl
adc
hlt
or
gs
fucomi
push
pop
push
sub
clc
mov
dec
arpl
mov
inc
insb
arpl
cwtl
adc
pushl
std
jmp
sub
aas
sarl
dec
xchg
sub
imul
pop
sbbl
aas
jmp
jecxz
jle
pushf
jg
pushf
xor
jo
std
ljmp
xor
lock
push
add
aad
jnp
pop
addb
lods
mov
mov
stc
sbb
mov
jmp
imulb
notb
cmp
icebp
pop
mov
add
insl
cmp
jbe
decl
lcall
into
cwtl
xchg
repnz
sub
cltd
or
xchg
jle
test
ljmp
pop
cli
mov
and
push
mov
push
dec
mov
dec
cmc
sub
jp
sbb
fwait
cld
enter
cmp
fnstsw
dec
cli
pushl
mov
in
add
mov
mov
mov
ficoml
repz
pop
mov
xchg
incl
mov
cmc
sbb
jb
je
jo
xchg
dec
push
sahf
push
cld
jns
fildll
call
pop
hlt
out
orl
mov
pop
ds
mov
out
hlt
decl
or
or
lods
add
fadd
lcall
and
decb
cwtl
lea
push
cmc
adc
cs
ljmp
repz
testb
leave
xchg
pop
cmp
sbb
test
fcmovu
pushl
gs
das
imul
mov
movb
sbb
push
sbb
rorl
cmp
sahf
test
enter
repz
orl
pop
call
out
ret
hlt
jge
add
mov
inc
push
lock
gs
mov
jp
hlt
insl
inc
adc
ja
add
xchg
push
rclb
aad
mov
imul
jno
push
scas
shll
aas
scas
es
dec
enter
mov
pop
inc
call
insl
inc
jle
jo
mov
aam
in
push
pop
arpl
or
jnp
lahf
xchg
pop
dec
pop
aam
aas
fsubs
sub
dec
xchg
mov
dec
push
dec
shrb
sar
repnz
push
push
fwait
mov
adc
sub
idivb
mov
mov
inc
xor
dec
imul
enter
lea
aam
inc
and
xchg
inc
sbb
add
aaa
scas
cmpsl
inc
jge
lea
jae
jg
incl
adc
imul
or
or
lret
jg
sub
ss
pop
es
xor
outsl
icebp
pushl
add
sbb
das
cmp
sbb
sub
xor
ljmp
adc
adc
and
cmp
sbb
je
jmp
xor
xor
or
sub
cmp
inc
push
mov
sub
and
xor
pop
stc
xor
adc
or
pop
xor
repz
cmp
clts
and
cmp
add
ss
sbb
xor
and
jg
das
femms
cs
ss
sbb
xor
das
pop
data16
jo
push
and
push
mov
adc
sbb
adc
sub
aas
add
add
cmp
xor
fbld
push
adc
jl
add
aaa
xor
and
and
mov
add
sbb
or
push
sbb
sbb
inc
dec
insl
xor
sub
dec
add
push
and
mov
mov
pop
sub
mov
add
and
inc
push
inc
iret
enter
inc
jnp
add
ljmp
ret
decl
mov
in
dec
stos
mov
inc
or
cli
dec
jg
cmpb
jl
ret
xor
fs
mov
or
adc
decl
add
dec
xchg
jns
cmp
bts
inc
std
sub
xchg
lea
bound
loope
popa
mov
mov
pop
xorl
cmp
inc
sub
int
ret
movsb
arpl
dec
fwait
mov
jg
push
xchg
dec
addb
mov
mov
cmp
xor
loope
mov
sub
test
jb
jmp
add
ljmp
cmovae
push
bound
mov
sbb
adc
pop
cld
mov
leave
test
mov
outsl
jg
ljmp
jmp
stc
test
mov
push
outsb
xchg
xor
in
cli
pushl
movsl
push
aad
mov
xchg
clc
mov
push
lcall
mov
mov
sbb
enter
je
lcall
pop
jb
dec
loope
push
imul
sub
pop
aam
jno
nop
ljmp
sub
push
fcmovnb
jbe
les
movsb
negb
jnp
dec
daa
fidivrl
cmpb
imul
pop
inc
inc
and
push
mov
js
mov
inc
arpl
pop
inc
mov
clc
mov
pop
push
and
jae
inc
jl
cmc
fs
sbb
ljmp
fucomp
inc
push
ja
dec
push
aad
jnp
adc
outsl
in
in
push
out
jmp
or
jge
jo
dec
popf
inc
pop
fsubr
fs
or
jbe
ja
data16
sbb
decl
fnsave
push
in
cmp
push
jns
jg
inc
push
push
pop
jae
dec
outsl
es
jg
lcall
push
pop
jae
or
jge
dec
out
stc
push
out
fs
pop
filds
jp
out
cli
add
insl
out
pop
dec
jb
sbb
push
add
pop
xor
mov
jge
adc
inc
cmp
ljmp
xor
jae
dec
leave
or
sbb
imul
incl
insl
add
inc
popa
sub
out
dec
xor
push
push
or
cmp
out
fcmovnb
push
push
pop
jp
in
dec
jg
loope
adc
push
decb
mov
pop
push
sub
or
outsb
dec
popa
sub
outsl
xchg
cmp
jecxz
adc
dec
inc
sub
hlt
adc
out
movsb
jnp
ret
das
jno
inc
and
jmp
xor
lea
adc
loopne
push
mov
add
dec
aas
loope
xor
jmp
push
loop
bound
daa
int3
ja
outsb
and
sub
clc
push
push
sub
xor
call
int
sbb
ljmp
arpl
add
cmp
jns
es
xor
sub
fstl
clc
jg
mov
adc
div
inc
loopne
xchg
ret
aam
xor
jle
sub
jmp
inc
in
das
pusha
shll
shlb
out
inc
negl
sarb
jnp
jae
insl
inc
jecxz
push
aad
inc
fdivl
jp
push
mov
cmc
dec
scas
mov
rcl
mov
cmp
fmull
call
dec
push
call
jae
push
jno
bound
std
gs
xor
xchg
jnp
pop
gs
pop
cli
lcall
sti
roll
lahf
daa
enter
ret
ljmp
jl
les
fildl
push
call
loop
dec
into
push
int3
mov
call
out
loop
adc
mov
pop
and
jmp
push
daa
sub
pop
ret
xor
inc
clc
dec
jno
flds
inc
jne
xor
rolb
vandps
pop
mov
and
or
sub
les
xor
cmp
adc
dec
xor
cli
and
mov
popa
push
xorl
lea
mov
insb
xchg
dec
mov
adc
lcall
jo
ja
dec
cmp
push
cmp
push
jae
lock
jae
or
dec
clc
dec
xor
xchg
xor
sub
inc
adc
cmp
gs
cmc
scas
mov
andb
inc
cmpsl
fs
out
loopne
icebp
adc
inc
loopne
fsubrp
sub
dec
lock
and
and
daa
sub
fdiv
pop
in
adc
shll
into
das
sar
repz
pop
mov
add
add
shlb
pop
jo
inc
nop
mov
jb
xor
jmp
std
nop
aaa
inc
mov
inc
mov
mov
fwait
sbb
inc
xchg
movsb
pop
mov
mov
popf
xor
inc
decl
ret
jo
jp
xor
aas
jg
mov
jae
push
cmp
or
mov
notl
lret
dec
xchg
cmp
mov
test
adc
test
daa
xor
data16
push
mov
int
rcll
xor
or
pop
mov
adc
pusha
sub
ds
loope
pop
sub
or
lock
incb
sbb
xchg
and
rcl
enter
sbb
decl
pop
inc
cmp
or
repz
mov
incl
mov
lea
lods
fadd
das
gs
push
add
mov
cld
jb
into
jae
adc
decl
cli
fbstp
mov
pop
push
aas
adc
ss
fyl2x
xor
push
cltd
add
outsl
push
rclb
xlat
adc
pusha
mov
or
jge
inc
icebp
sar
call
and
dec
je
repnz
bound
clc
sbb
cmp
xchg
jmp
dec
neg
push
jl
xor
push
pusha
incb
adc
jp
dec
add
jmp
das
pop
push
bound
sbb
mov
add
jl
insb
jp
fwait
js
push
jne
ljmp
subl
jae
inc
shlb
rep
and
inc
xorl
pop
push
dec
pop
arpl
gs
mov
inc
imul
jl
ds
fs
aas
into
and
ljmp
clc
call
push
inc
push
jge
loopne,pn
adc
xor
and
or
pusha
loope
pop
push
cli
mov
xchg
jl
int3
cli
sahf
fcoml
outsb
or
pop
jne
data16
outsb
adc
inc
mov
push
mov
sbb
adc
cwtl
test
xchg
push
jno
stc
or
inc
fsubs
dec
insl
bound
adc
pop
insl
dec
stos
leave
cmc
jp
ficompl
and
mov
adc
arpl
es
cwtl
sub
dec
ffreep
sbb
push
psllw
ror
popf
push
mov
addr16
call
push
lock
inc
xchg
test
xchg
and
inc
fisubl
ja
aaa
sub
js
lret
add
jae
into
and
dec
jae
inc
mov
cmp
test
rcr
bnd
mov
mov
in
and
insl
rcrl
dec
and
call
outsb
out
push
inc
cmp
clc
mov
cmp
out
rcll
iret
loop
popf
add
cmp
pushl
push
push
ss
cmpsb
cli
outsl
out
mov
repnz
jo
mov
dec
add
movsl
add
cmp
ljmp
test
adc
jp
jle
aaa
clc
push
jl
pop
dec
shl
pop
lea
pop
outsl
mov
dec
xchg
cmc
mov
push
push
mov
cmc
sahf
push
incl
int3
cmpsl
pop
push
aam
jp
dec
push
imulb
cmp
push
hlt
pop
hlt
int3
hlt
push
clc
lcall
add
aam
sbbb
adc
xchg
sub
xchg
test
bound
test
push
outsl
jbe
jl
je
sbb
clc
out
cmp
out
inc
add
orb
mov
adcb
je
inc
cmpsl
mov
ljmp
inc
sbb
push
sahf
mov
test
decl
xor
cld
lahf
stc
insl
outsb
fstps
idivb
sub
cld
push
dec
jbe
hlt
fdivr
js
sahf
fldt
and
fsubrl
mov
or
aas
push
inc
stos
adc
sbb
cmp
mov
test
aam
mov
in
or
int3
and
pushl
rorb
or
test
das
js
ret
xor
mov
fwait
xor
inc
add
js
ljmp
sbb
cwtl
add
mov
stc
jg
mov
dec
or
call
adc
shl
mov
and
or
adc
dec
js
adc
enter
push
inc
dec
cltd
and
sub
jl
mov
add
xor
inc
and
inc
sbb
lret
push
adc
ljmp
or
or
jae
leave
repz
push
scas
adc
cmp
xor
jp
jmp
dec
stos
and
out
pop
imul
ss
mov
call
push
mov
lahf
pop
shlb
push
xor
jle
jbe
jmp
movsb
push
das
rcl
rorl
aam
adc
mov
adc
fucomp
add
call
or
movsb
xchg
inc
or
lock
push
pop
hlt
lcall
cmpb
out
sub
arpl
dec
arpl
sarl
daa
jmp
cmp
and
ss
jns
push
add
mov
ret
movsb
mov
lcall
lods
shrb
pop
mov
mov
lcall
ds
dec
jl
inc
mov
xchg
sbb
fildll
mov
inc
clc
push
xor
jle
into
add
mov
cli
ljmp
je
and
jle
push
lea
cmp
jle
xchg
push
in
mov
push
xor
out
sar
ljmp
pop
dec
cs
xlat
movsb
enter
lods
sbbl
sub
aam
mov
mov
out
les
cmpsb
mov
and
sbb
call
pushf
es
ss
jnp
add
cmc
sbbb
rcrl
repnz
push
outsl
out
xchg
mov
stos
test
sbb
adc
dec
fidivrl
mov
jmp
cmpsb
mov
stos
jle
jns
mov
add
mov
add
sub
lods
std
out
pop
hlt
adc
loopne
test
adc
dec
cmp
mov
and
push
mov
xor
pop
xor
ljmp
mov
jb
jo
mov
push
jae
dec
jp
sub
jge
data16
add
dec
jmp
add
xchg
scas
xchg
es
mov
daa
inc
rorb
subb
jnp
pusha
sbb
lcall
mov
push
out
dec
aas
push
sub
push
fistpll
data16
es
mov
mov
gs
std
in
jno
or
jmp
adc
add
aaa
cwtl
ss
pop
dec
and
pushf
test
daa
mov
inc
add
cld
outsl
xor
inc
insb
jno
jns
and
mov
sub
push
scas
cmp
add
mov
sub
jae
dec
shrl
or
jnp
data16
mov
add
jmp
andb
or
lcall
fucom
stos
cmp
pop
push
or
cmp
movsl
insb
or
js
data16
sbb
cmp
das
cmp
and
adc
mov
rclb
pop
xor
call
mov
dec
rcr
sbb
adc
movsl
jg
or
cli
jnp
push
rorb
testl
aam
jns
push
jnp
fmull
xor
into
cs
lock
in
push
mov
adc
sub
and
loope
jmp
test
rcll
cld
jp
push
push
mov
mov
mov
aaa
push
pop
subb
call
pop
inc
nop
andl
aam
ljmp
ss
push
jne
insb
out
jl
jno
xchg
adc
fs
popf
cld
js
int3
decl
mov
mov
dec
cld
inc
xor
call
mov
jl
lods
mov
sahf
cmpl
push
imul
jmp
lds
mov
push
mov
roll
jecxz
gs
loop
mov
jp
bound
cmc
insl
inc
lret
mov
pop
test
out
inc
push
pusha
enter
pushl
push
fstl
je
push
addr16
ret
es
inc
xchg
xor
and
xor
adc
mov
and
aas
sub
add
outsb
inc
cli
and
fwait
mov
dec
imul
shlb
imul
mov
add
xor
sahf
add
jecxz
pop
push
dec
movsb
in
imul
push
data16
pushl
movsb
in
in
inc
dec
mov
or
ja
loop
jns
cmp
xor
int3
mov
incl
subb
rcrl
aad
lcall
cmpsb
fmulp
dec
fs
jmp
sbb
cli
inc
push
and
jg
jb
mov
sub
mov
pop
sbb
pop
jb
sub
push
xor
clc
negb
xor
daa
adc
cli
sbb
pop
sub
push
push
jmp
cmpsb
inc
add
loopne
loopne
add
pop
aas
inc
push
push
pop
jmp
jae
xor
or
fistpll
adc
aas
clts
dec
sbb
or
sbb
or
das
sbb
or
bound
push
add
push
and
inc
pop
or
pop
add
dec
and
dec
js
or
add
dec
push
cs
mov
adc
and
pop
dec
add
sbb
and
cld
jp
add
inc
loopne
das
xor
ss
cmovns
jg
icebp
arpl
push
rorb
or
jae
push
cmp
pop
je
sbb
es
sub
hlt
jg
or
ss
jg
aas
push
sbb
aaa
sbb
or
sub
cmp
push
xor
sbb
call
pop
and
sub
add
sub
push
add
inc
jne
adc
cmp
lock
and
or
sbb
ret
and
add
lock
sbb
add
push
push
or
das
lcall
add
add
xor
sbb
pop
pop
xor
das
or
fbld
lods
xor
pop
or
jo
adc
sub
dec
clc
add
adc
add
cmp
adc
adc
adc
add
unpcklps
nop
movsb
push
mov
outsb
jbe
and
xor
sbb
hlt
ret
scas
clc
and
aas
sbb
mov
and
and
aad
adc
push
lods
mov
sub
jbe
sahf
or
add
push
push
and
cmp
push
adc
pop
and
add
sub
les
cmp
fldt
push
ds
into
xor
aam
or
push
push
pop
and
pop
pop
stos
or
and
and
push
or
mov
lret
sbb
lahf
call
loopne
jb
dec
js
bound
sahf
push
push
jbe
imul
inc
pop
clc
out
cli
incl
arpl
addr16
jo
dec
inc
push
inc
pop
push
inc
push
dec
pop
ja
dec
dec
jmp
inc
je
inc
push
dec
push
dec
jp
jne
pop
dec
arpl
shlb
xchg
imul
jne
push
das
shlb
inc
outsl
push
push
pop
test
dec
js
jp
dec
insl
inc
stos
lcall
popa
arpl
push
dec
bound
inc
push
gs
imul
dec
inc
fs
mov
dec
jl
jns
inc
dec
push
push
jb
jo
inc
push
mov
push
pop
jp
pop
push
dec
gs
in
inc
inc
orb
add
es
je
lcall
inc
push
addr16
push
jo
jmp
pop
add
popa
inc
bound
jae
inc
pop
je
pop
sub
push
dec
insl
imul
jbe
pushf
inc
jns
dec
push
or
inc
mov
sbb
inc
orb
int
lock
inc
gs
inc
push
bound
mov
push
pop
arpl
jno
andb
test
jp
add
dec
sbb
jo
popa
add
pop
xchg
out
add
add
jns
adc
or
adc
jns
out
sbb
push
pop
and
jns
out
and
sub
sahf
out
sahf
cs
xor
xor
jns
out
ds
pop
inc
inc
out
jns
out
push
push
push
sub
dec
add
bound
repz
cli
mov
mov
iret
repz
movsb
test
lods
repz
repz
mov
cmp
enter
fdivrs
repz
loopne
in
call
hlt
lock
add
inc
jo
out
or
das
dec
add
jb
dec
lock
pop
imul
inc
pusha
adc
inc
popl
push
push
arpl
das
popl
aaa
movl
jl
push
gs
push
and
mull
add
clc
push
or
add
lcall
or
xor
and
sti
add
mov
push
or
lds
fdivrp
sbb
jae
push
data16
loopne
loopne
ja
jb
add
arpl
jb
inc
in
jae
pop
jecxz
insb
xor
out
mov
jo
insl
push
outsb
cmpsl
aaa
in
mov
imul
aaa
jge
push
ficoms
imul
insb
in
mov
push
bound
das
push
gs
pop
ja
push
push
mov
mov
scas
shll
mov
aas
sbb
jnp
push
mov
data16
addr16
insb
mov
mov
inc
jg
mov
je
jns
sbb
inc
mov
inc
inc
insl
insb
add
push
cmpl
push
push
jp
add
fidivs
ret
jb
push
arpl
addr16
in
dec
jo
je
push
jae
ret
loopne
out
push
sub
mov
cmpsl
js
adc
xchg
inc
pop
arpl
mov
jae
dec
push
popa
xchg
jnp
pop
ret
daa
push
adc
adc
pushf
out
ret
dec
ja
rcll
mov
pcmpeqb
insl
aaa
sub
pop
das
push
xlat
pop
in
sub
imul
arpl
pop
dec
inc
inc
inc
scas
dec
push
arpl
call
mov
sti
outsl
ss
pop
xor
leave
leave
xor
out
scas
sub
and
mov
add
jb
or
push
and
mov
dec
push
ficoms
es
or
jb
mov
ja
addr16
push
push
add
push
mov
fwait
push
push
push
inc
arpl
push
por
test
pop
pop
sub
arpl
jbe
pop
add
pop
inc
jnp
mov
rclb
jmp
push
sub
push
fildl
out
inc
jo
aaa
add
add
dec
add
shlb
adc
in
out
xchg
dec
sbb
imul
sarb
dec
mov
mov
adc
push
incl
shll
les
add
push
repz
mov
add
add
iret
push
or
or
fstl
aaa
or
outsb
imul
daa
ss
jbe
inc
das
and
in
in
push
addr16
das
push
xorps
mov
imull
push
and
dec
sahf
out
sbb
push
pop
sbbb
cmpb
test
cmp
pop
xchg
sub
jbe
fbld
insl
pop
fidivs
pop
sbb
cmp
mov
adc
es
push
add
popa
dec
and
push
test
adc
mov
pop
mov
cwtl
sbb
mov
lods
pusha
cmpb
cmpsb
fisttps
mov
and
jle
test
shll
ljmp
cmovo
mov
mov
or
mov
sbb
in
call
adc
add
mov
xor
fcomps
xchg
in
fsubp
stc
jb
jle
scas
in
mov
into
mov
add
push
andb
adc
sbb
and
pushf
loopne
pop
jo
aas
sbb
cmp
mov
pop
xorb
icebp
daa
add
std
sub
inc
clc
pop
data16
or
lahf
add
mov
sahf
push
mov
or
enter
cmp
adc
iret
repz
sbb
in
sbb
out
mov
out
sahf
out
and
add
out
cmp
mov
jo
iret
repz
and
mov
sarb
cmp
cmp
pushf
incl
add
or
sbb
stos
lock
daa
and
sub
das
mov
in
insb
aas
pop
aas
addl
addr16
inc
push
or
repz
out
add
ret
iret
repz
in
int3
les
cmp
lods
test
pop
mov
pushf
cwtl
xchg
nop
mov
xorb
iret
repz
inc
cmp
cmp
repz
or
shll
add
xchg
fistl
jl
jb
jg
push
xchg
fistps
cmp
pop
xchg
push
mov
ds
repz
adc
xor
add
cmp
shll
push
pop
ja
mov
shl
dec
das
push
dec
arpl
repnz
fisttps
jno
insb
outsl
imul
test
incl
dec
in
addr16
inc
aas
outsl
jne
pop
outsl
pop
jb
add
sub
gs
pop
mov
add
sub
mov
scas
stc
inc
push
add
dec
inc
add
cmp
jmp
push
lahf
daa
sbb
aad
lcall
aaa
test
xchg
add
into
sahf
mov
adc
add
and
add
or
add
std
add
jns
push
mov
cmp
cwtl
pop
jg
mov
in
divb
addb
pop
popa
subb
pusha
pop
mov
add
or
jle
jbe
insl
ret
ret
jle
pop
out
aas
in
cs
add
andl
or
push
subl
or
push
add
sbbl
fmulp
fldl
push
out
pop
out
insl
sub
pop
sahf
lods
loopne
sbbl
outsb
adc
xor
add
data16
orb
in
clc
clc
add
push
int3
jmp
push
rolb
lret
dec
leave
addb
loopne
in
in
clc
cld
jle
sbb
incl
xchg
dec
mov
iret
adc
addb
push
add
imul
xchg
add
jo
pop
push
pop
aas
fmuls
xlat
pop
jle
jg
cmp
movsl
mov
push
push
xchg
xor
mov
push
inc
jle
loopne
sahf
lods
mov
xor
xchg
shl
out
add
mov
add
jne
sbb
mov
outsl
add
push
jno
xor
add
jno
sub
pop
push
loopne
push
pop
or
in
das
pushl
das
push
push
mov
pop
insb
and
insb
jg
ja
scas
mov
fiaddl
das
cmp
out
xchg
pop
imul
pusha
pop
subb
aas
movsl
icebp
insb
mov
pop
outsl
add
pop
nop
xchg
repnz
andl
faddp
das
pop
mov
mov
das
add
mov
mov
pop
rorl
gs
mov
rcrl
shr
notb
sarl
pop
sarl
jns
mov
das
rorl
pop
add
shlb
insb
sbb
shl
rol
aad
das
roll
or
fcoml
shrl
das
dec
add
sbb
or
rorl
mov
das
sarl
data16
out
ss
fsubrs
or
add
jmp
mulb
mov
jo
lds
shll
js
sldt
mov
rorl
mov
sarb
clc
or
nop
or
xchg
incl
mov
dec
sahf
or
add
aas
xor
adc
dec
insb
imul
out
or
fsubrl
lret
add
or
or
adc
data16
add
add
and
sub
int
ss
push
add
inc
add
jle
sti
add
push
push
xchg
add
es
int3
add
out
adc
aam
and
test
jns
in
xor
sbb
iret
rcrl
xor
inc
push
xor
repz
cmp
xor
insl
jns
cltd
int3
xchg
incl
xor
sbb
repz
int3
sub
mov
int3
aad
pushw
cltd
daa
lcall
push
xor
xor
jns
out
xor
xor
xor
jns
out
xor
xor
sahf
out
sahf
xor
xor
xor
pop
addr16
xor
xchg
es
xor
loopne
xor
faddl
push
data16
repz
data16
iret
repz
out
sub
out
out
xor
xor
int3
int3
mov
jo
incl
data16
or
test
add
mov
xor
popw
call
data16
fstps
xor
cltd
ja
sahf
out
cltd
cltd
sbb
mov
xor
pop
jno
jns
das
lcall
jo
adc
add
cmp
xor
push
mov
out
or
data16
cs
mov
push
int3
int3
jns
pop
out
add
int3
mov
out
sahf
out
int3
int3
inc
repnz
call
int3
int3
sbb
cmp
lcall
dec
ficomps
int3
mov
xor
popf
out
cwtd
int3
cs
popf
out
sahf
int3
int3
int3
int3
int3
xchg
mov
fsin
or
incl
in
fistpll
push
and
movsl
add
add
insb
ss
ja
xchg
xchg
add
add
add
add
add
add
add
loop
gs
data16
jbe
mov
jno
add
xchg
mov
cmp
rcr
in
pusha
cmp
icebp
lock
popf
fwait
sub
add
stos
aas
add
idivb
push
add
pop
icebp
jg
mov
mov
fidivrl
aas
lods
insl
fistpl
loope
mov
mov
outsl
pop
fisubrl
aas
mov
ret
fdivp
stc
mov
jg
or
sarl
aas
pop
ss
mov
jae
cmp
ret
mov
xor
jae
inc
sarl
jbe
lock
mov
call
sbb
or
push
mov
pusha
cmp
mov
add
xor
or
or
mov
ds
lcall
loope
ja
in
mov
add
addl
aas
loop
add
repnz
data16
roll
xor
rcll
sarl
imul
inc
hlt
test
test
jg
xorl
fsubs
xor
pop
inc
or
mov
cmpl
lds
repz
loop
aas
inc
sub
orb
add
inc
fnstsw
leave
push
add
mov
imul
add
xorl
orb
cmp
loop
add
dec
bound
enter
push
adc
scas
inc
mov
mov
es
sub
bnd
or
pop
hlt
nop
add
orb
in
jg
fiaddl
icebp
add
pop
pusha
sub
pop
push
mov
add
sbb
mov
mov
dec
jns
xchg
or
sahf
and
jnp
pop
loope
aas
mov
out
sbb
cmpl
pop
shrl
sahf
adc
push
fs
or
add
or
inc
out
mov
fs
xchg
rcr
mov
inc
dec
dec
mov
xchg
xor
roll
cmp
call
aam
int
popf
push
bound
pop
fnstsw
mov
add
adc
pop
popl
or
frstor
lds
insl
mov
loopne
nop
and
pushf
mov
push
call
mov
cmpl
mov
and
lods
lea
pop
push
xchg
imul
add
das
jecxz
imul
leave
or
sarl
sbb
or
sub
and
mov
fidivrs
test
icebp
cmp
into
int
daa
shl
pusha
out
mov
dec
rorw
cmpb
insl
jp
pop
outsb
lods
rcll
pusha
repnz
and
inc
jo
and
sbb
ret
add
fcmovu
fstpl
rcrl
sarb
and
and
push
scas
jl
imul
fcmovnu
subb
mov
add
out
icebp
add
repz
in
ret
cmp
shll
mov
adc
xchg
sbb
xor
and
and
inc
mov
mov
and
rcrl
fsts
lods
xor
mov
pop
pusha
or
pop
repz
insl
push
jp
loop
imul
add
popf
fcmovnb
pop
mov
jae
into
sbb
push
bound
cmp
nop
pop
lds
fldl
pop
roll
push
jo
int3
loop
sbbl
pop
mov
pop
pop
sbbb
push
cmp
outsl
in
mov
or
add
add
leave
lahf
movsb
and
mov
dec
add
add
lcall
pop
pop
outsb
push
push
int3
cltd
mov
cmpsb
add
and
fs
aas
push
mov
out
imul
aas
mov
add
ds
adc
inc
cmp
inc
pop
mov
outsb
mov
repnz
clc
fisttpll
mov
mov
loop
test
push
cmc
mov
pop
pop
mov
dec
xchg
das
and
jae
cmp
jns
add
mov
out
popaw
adc
inc
push
imul
add
cmc
jbe
or
in
aas
in
push
pop
cwtl
dec
in
nop
lock
add
mov
and
cmp
add
ds
cmp
sub
or
xor
push
fiaddl
ss
add
dec
mov
sbb
xor
sbb
sub
add
mov
or
ja
inc
dec
ja
pusha
fidivs
sub
aaa
or
ja
add
add
add
add
xor
jmp
mov
fdivrs
push
fnstenv
dec
and
and
popl
and
push
mov
push
push
insb
push
and
jb
test
xchg
sbb
inc
pusha
pusha
sarl
push
je
mov
sbb
outsl
pop
xchg
addb
out
pusha
scas
jne,pn
je
pop
aaa
add
es
lahf
push
bnd
inc
pop
jnp
into
add
push
xchg
cmp
inc
cs
pop
sub
add
fs
mov
inc
and
fcmovb
adc
xor
sub
aam
xchg
subl
dec
push
sub
mov
mov
fnstenv
lods
lods
js
mov
insb
pop
xor
pop
sbb
add
imul
das
inc
add
xor
and
fidivl
popa
sub
rol
loopne
push
daa
cmpsb
lods
loop
mov
xchg
and
add
ret
out
adc
pop
fwait
add
mov
sub
pop
bound
imul
adc
push
popf
outsb
in
adc
xor
neg
jb
sub
jb
or
sbb
sub
mov
adc
jecxz
adc
rolb
sahf
push
lock
out
push
inc
xchg
pop
sysret
pop
daa
push
add
es
pop
xchg
das
mov
cmove
and
loop
fwait
or
mov
stos
cs
loope
push
mov
sbb
jne
jae
xor
jecxz
jnp
push
arpl
jb
cs
in
fst
inc
mov
jae
cmp
insl
dec
or
out
fisubs
fildll
mov
andb
sarl
aaa
or
lahf
outsb
repz
jo
cs
jb
outsb
adc
arpl
jbe
pop
sbb
imul
sub
mov
imul
pop
shrl
push
sbb
sbb
push
adc
mov
sbb
scas
ss
push
push
jle
iret
jnp
push
mov
inc
jle
testb
jo
in
push
push
ja
xlat
pop
aaa
sub
fcmovne
and
add
mov
xor
lret
shll
mov
xor
bound
or
or
pcmpeqw
cmpsb
jns
mov
sub
lock
shrl
xchg
push
inc
js
adc
lret
mov
repnz
jae
adc
outsb
push
faddl
push
scas
fs
add
adc
loopne
arpl
ja
mul
loopne
jmp
je
ret
sti
push
mov
aas
sti
fldt
mov
js
pop
fs
adc
push
xlat
outsb
stos
fdivrp
rclb
mov
aad
scas
sub
mov
xchg
and
inc
add
test
xchg
pop
je
scas
dec
jae
imul
je
jmp
ret
jae
out
jnp
in
outsb
ret
jge
jno
dec
jle
arpl
ret
push
ds
sub
jg
popa
push
xor
mov
outsl
rorl
jbe
stos
stos
ja
pop
mov
ret
mov
ret
arpl
rcrl
andl
adc
outsl
repz
ss
xchg
jb
jmp
inc
mull
mov
je
inc
stos
daa
into
mov
lock
sbbl
ret
fistl
mov
cmp
out
pop
sub
pop
scas
or
movsb
sbb
sbb
ja
xchg
push
orb
xor
insl
add
dec
lds
repnz
sti
mov
jo
pop
or
idivl
ja
jne
xlat
jb
push
outsl
and
lahf
add
pop
gs
adc
mov
ds
fists
add
insb
lds
por
sbb
push
inc
jg
sub
sbb
xchg
pop
lret
inc
out
fsubs
jo
loope
pop
xchg
jo
js
pop
and
push
inc
inc
stos
shlb
stos
popa
jae
pop
pop
add
imul
xorl
mov
loope
mov
mov
adcb
insl
push
sbb
xchg
testl
shrb
insb
xchg
sub
add
jns,pn
inc
mov
sbb
stos
pusha
pop
ljmp
roll
pusha
rorb
or
jbe
fs
fsubl
test
xor
lds
insl
lret
push
mov
rcr
ror
iret
xchg
popf
fsubrs
sti
insl
repz
jg
inc
js
data16
mov
sbbl
add
test
and
xchg
sbb
pop
xchg
das
jae
and
cli
or
rolb
js
lahf
cmp
xlat
or
js
ja
mov
outsl
sub
ret
in
fstl
pop
xor
push
fistps
mov
push
aaa
out
and
mov
fiaddl
xchg
mov
mov
stos
mov
jne
cmp
or
mov
arpl
insl
andl
shrb
push
push
rolb
jp
sbb
test
ret
inc
data16
cmp
scas
lahf
insl
ja
outsl
push
clc
sub
pop
bound
push
mov
clc
add
rcr
adcl
and
or
dec
sub
imul
fidivrs
push
ret
push
insl
fisubl
pushaw
adc
pop
lsl
mov
imul
inc
rcpps
jo
rclb
or
pop
mov
mov
insl
inc
pop
jae
jg
ljmp
or
push
in
test
sti
jnp
aas
jmp
inc
pop
fildl
insl
cmpsl
bound
ss
fwait
insb
and
lcall
inc
aas
pop
sbb
push
and
out
and
gs
and
mov
xor
sub
adc
cmp
adc
sbb
loope
jb
add
inc
daa
ficoml
pop
xchg
adc
bound
inc
ret
mov
dec
push
inc
push
add
sarb
outsl
mov
orb
dec
mov
jle
mov
ss
imul
mov
ds
je
push
jmp
mov
ficompl
in
inc
in
das
inc
adc
inc
es
imul
and
iret
outsl
dec
imul
push
movsb
cmc
pop
cmp
mov
mov
dec
inc
imul
inc
dec
adc
push
push
xor
das
jmp
sub
les
int3
mov
fildll
arpl
xor
xor
int3
and
mov
push
and
pushf
push
pop
movl
push
mov
insb
inc
pop
shld
rcr
mov
push
sub
incl
imul
pop
dec
jae
inc
add
mov
adc
adc
out
adc
test
imul
push
ds
stos
movsb
imul
gs
fmull
mov
add
jge
xchg
push
and
jne
push
mov
test
push
faddl
pop
xor
push
sbb
dec
gs
adc
lds
jne
jle
add
insb
fs
pop
jbe
sbb
es
jne
scas
fdivs
sarl
add
fistpl
dec
pop
push
jne
jns
push
xor
outsb
inc
sub
mov
mov
scas
xor
js
mov
cmpsl
bndldx
scas
push
jae
fsubrs
fadds
xor
mov
sbb
sti
ret
dec
cmp
fs
fs
loope
rcll
mov
pop
mov
cmc
mov
jne
enter
lea
jb
inc
dec
inc
dec
jge
js
cmp
and
subl
lock
add
cmc
fs
jnp
lods
cmpsb
xorl
xor
iret
xchg
adc
inc
addr16
add
mov
xchg
sub
push
and
dec
test
outsl
orl
xor
sbb
loope
movsl
call
insl
ds
pop
push
or
push
fsubrl
inc
jae
cmp
push
push
je
ja
fs
push
lds
ret
mov
dec
push
jns
push
xor
lret
std
shrb
fwait
lock
inc
inc
fs
repz
orl
in
jbe
nop
cmpsb
push
pop
inc
data16
shrl
xchg
push
mov
mov
dec
jo
add
sub
cli
sub
imul
rcll
sub
cwtl
loopne
int
fnsave
push
or
loop
out
pushf
js
cmc
outsb
fisttpl
cltd
getsec
jne
push
mov
popa
pusha
imul
pop
rcr
sbb
cli
push
mov
sub
and
insb
jb
fwait
es
sub
xchg
imul
roll
cmpsb
push
fs
loope
loope
and
dec
nop
mov
sbb
das
push
sub
inc
je
insl
inc
inc
mov
adc
or
pop
xchg
push
inc
mov
xlat
mov
dec
gs
inc
jae
push
test
fmuls
outsb
out
and
dec
push
and
lods
std
cmpb
arpl
aaa
lods
cmp
sub
inc
and
das
je
ss
and
icebp
int
mov
add
push
cmp
mov
push
push
sbb
insb
sub
dec
jo
pop
adc
inc
stos
sbb
lods
mov
push
arpl
jle
inc
adc
out
dec
lods
cltd
adc
in
daa
or
orb
lahf
inc
adc
popf
or
fsubrl
jno
xor
and
imul
fimuls
inc
push
and
mov
inc
fidivrl
jo
and
imul
inc
sbb
jmp
imul
lds
jo
cwtl
movsl
dec
inc
inc
push
add
insl
jnp
gs
push
mov
sub
fs
push
xchg
outsb
push
adc
daa
mov
mov
and
in
arpl
jae
andl
pusha
shll
xchg
add
addr16
pop
add
arpl
repz
xchg
jno
push
cmp
jl
sub
imul
or
out
insl
mov
mov
cmp
out
xchg
jnp
sbb
outsb
out
mov
and
ja
dec
cmp
subl
sbb
scas
mov
inc
jae
test
inc
pusha
pop
push
jno
ret
push
js
cmpsl
pop
inc
movsl
insb
imul
es
sbb
or
imul
iret
negb
imul
cmc
inc
sar
push
cmp
or
arpl
mov
inc
cmp
jg
xlat
push
pop
arpl
imul
lods
pop
jae
pop
jne
imul
add
push
shrb
pop
das
inc
and
or
jae
jecxz
popf
or
dec
rol
push
cmp
ja
jo
adc
sbb
jns
or
popa
popa
insl
addl
jbe
imul
fdivr
popf
insl
repz
xchg
loopne
shlb
and
push
push
js
jmp
sub
jo,pn
ss
push
arpl
dec
in
loope
pop
mov
dec
arpl
sbbl
fisubrl
test
dec
jns
or
inc
arpl
loop
sbb
cmp
pop
std
dec
popa
jns
jecxz
sub
xchg
pop
xor
jne
xor
notl
add
mov
popa
lcall
jge
cmp
rclb
or
rcll
and
es
cmpsb
insl
inc
inc
fsubrs
jbe
sahf
gs
push
outsl
aaa
cmp
adc
and
ret
add
outsb
jbe
nop
imul
mov
testl
push
lock
adc
and
adc
and
cmpsl
out
mov
inc
push
cmp
shll
shlb
cmp
loopne
adc
stos
xchg
inc
nop
jg
lahf
jg
mov
fdivl
xchg
lret
inc
cmp
or
or
mov
push
sub
outsb
pop
jmp
in
add
addb
add
scas
fisttps
mov
add
or
and
js
std
cmp
or
lret
mov
xor
pop
inc
jbe
fists
fnstenv
adcb
in
imul
add
into
sahf
mov
and
inc
pop
mov
pop
fwait
ret
mov
dec
clc
add
loopne
sub
sbb
push
mov
xor
ret
mov
popa
push
inc
testl
add
inc
cs
sbb
mov
jbe
sarb
mov
arpl
dec
push
loope
testb
es
sarl
filds
add
add
inc
incl
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
push
inc
add
inc
add
