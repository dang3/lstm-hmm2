call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
or
jno
popa
push
push
push
dec
adc
stos
shl
movsb
shll
inc
je
inc
popa
push
adc
xor
add
insb
fnsetpm(287
shl
les
aam
enter
test
je
inc
jns
or
xor
add
adc
in
xlat
popf
mov
mov
lock
jecxz
ljmp
cmp
add
xor
fcomps
cmp
jge
mov
aaa
int3
cld
jno
jno
and
mov
or
push
sbb
in
mov
movsb
jge
test
cmp
mov
mov
idivl
inc
shll
push
test
les
and
xchg
insb
ljmp
outsb
and
in
test
xor
movsb
rorb
mov
mov
mov
flds
sarl
sbb
mov
cmp
xorb
inc
stc
ds
in
adc
and
or
cmc
cmpsl
push
cmp
rcll
out
test
je
inc
jbe
add
xor
add
adc
in
hlt
jmp
movsb
cltd
mov
test
xor
jne
insb
pop
xor
inc
movsl
popf
shl
mov
in
aam
ficoml
inc
adc
arpl
outsl
js
insl
fs
scas
rorl
lret
rcl
sti
cmp
jae
adc
popa
xor
add
add
adc
in
hlt
icebp
movsb
xorl
inc
popa
push
adc
xor
add
adc
in
hlt
icebp
movsb
xorl
test
sub
push
decl
mov
jp
ss
stos
sub
insl
insl
jno
les
jl
pop
adc
rolb
sbb
fldl
icebp
mov
mov
shrl
or
and
adc
mov
push
sbb
bound
pop
sbb
or
mov
gs
imul
sub
jl
fnstenv
mov
and
cmpsl
std
shlb
subl
dec
xchg
or
add
mov
pop
push
mov
dec
xorb
in
inc
pop
push
jnp
xchg
int
mov
adc
jo
sub
push
and
inc
sbb
xor
outsl
inc
xlat
ljmp
pop
add
das
sbb
dec
lret
xchg
sbb
hlt
das
sbb
cmpsl
aam
stos
repnz
imul
push
lock
imul
push
pop
jo
decl
clc
daa
mov
or
pop
subb
xor
fisubrl
jl
cmp
inc
lock
out
movsl
and
out
xor
mov
test
xchg
les
or
subb
aad
ds
xchg
mov
sub
cld
pop
nop
add
les
jns
xlat
mov
and
add
lcall
xchg
ds
nop
mov
int3
mov
dec
mov
sbb
pop
adc
repnz
bound
stc
arpl
addb
jle
lea
xor
sub
rcl
cmp
xor
mov
aaa
cmp
mov
or
ret
inc
or
ret
jl
jo
lret
dec
push
jecxz
in
lds
mov
or
pusha
repz
rclb
xchg
mov
aas
push
jo
xor
lea
inc
lock
mov
jg
adc
mov
in
mov
je
pusha
xor
lock
imul
outsb
sahf
nop
add
jle
mov
mov
cmpsb
adc
dec
jns
mov
fsubl
push
cmc
jmp
push
bound
fld
mov
dec
cltd
aam
sub
cmc
push
mov
mov
push
sub
cmp
sbb
dec
hlt
pop
mov
mov
orb
ret
cltd
enter
jns
xchg
fsubrl
and
cmpsl
push
frstor
jecxz
mov
push
sub
aam
popf
jl
and
dec
xor
cmpsb
loop
or
push
xchg
ljmp
add
stc
mov
pop
iret
dec
sub
outsb
cmpb
pop
bound
inc
test
add
push
jg
and
xchg
mov
imul
pop
sbb
call
mov
jmp
add
stc
sbb
cmp
sti
mov
adc
test
adc
mov
in
adc
icebp
push
push
push
call
sub
jge
sub
pop
mov
jecxz
xchg
decl
fsubl
scas
xor
sub
jb
outsl
fildll
in
adc
push
popf
ret
fdivr
mov
out
fsubrs
mov
sub
lahf
push
sub
jo
shrb
xor
xchg
bound
inc
xchg
int3
pop
in
ds
mov
out
movsl
jae
jle
dec
push
mov
data16
mov
out
ret
or
fisttpll
mull
inc
ja
popf
add
xor
mov
cmpl
jne
inc
cltd
xchg
mov
aaa
cld
and
add
pop
push
fwait
jmp
inc
ret
test
xor
lret
scas
lock
inc
lods
js
xchg
fnstcw
push
and
jge
push
lea
jge
imul
les
sub
pop
insb
ja
ja
jo
mov
lcall
pop
ficoms
xchg
imul
mov
ja
sbb
andb
xor
mov
pusha
outsb
sbb
dec
add
inc
sub
mov
fs
lret
adc
jbe
lcall
lds
and
sbb
pop
insl
push
push
xchg
cmp
enter
je
xchg
jbe
test
popa
sbb
inc
clc
les
xchg
jmp
and
push
enter
push
in
add
shr
mov
or
in
pop
out
inc
mov
inc
lock
mov
push
pop
imul
popa
ljmp
push
sbb
scas
mov
outsl
or
mov
mov
mov
jno,pn
add
cmp
stc
roll
pusha
add
xchg
mov
loop
notb
mov
lahf
ret
push
arpl
sub
cmp
jb
das
jae
test
xchg
sub
mov
jbe
xchg
pop
sbbl
xor
fst
cmp
add
mov
lret
in
pop
dec
push
lahf
jmp
jp
fucomip
cmp
pop
or
xchg
mov
je
ret
mov
add
mov
mov
shlb
addb
sar
mov
out
mov
adc
xor
sub
jb
mov
xchg
mov
sbb
pop
add
sub
push
dec
insb
loop
je
pushf
scas
or
inc
dec
ret
or
out
in
or
mov
add
mov
outsb
mov
test
adc
mov
xor
ret
mov
mov
push
xchg
sbb
int
ficompl
cmc
dec
bound
sbb
push
cltd
stos
dec
xor
push
out
pop
aad
xchg
daa
pop
add
mov
imul
aaa
jle
dec
push
cld
stc
add
out
cmp
add
imul
adc
jb
enter
mov
or
jmp
jl
bnd
xchg
sbb
mov
jnp
sarl
in
pop
xchg
xchg
std
mov
outsb
sbbl
cli
test
mov
pop
mov
aad
ds
shll
rorb
xor
cmp
add
mov
test
add
daa
xchg
fistpll
fimuls
int
hlt
sbb
mov
aad
mov
bound
and
or
jb
adc
dec
in
addr16
mov
fidivrs
adc
pop
test
scas
xchg
adc
push
fidivrs
sar
imul
dec
sub
inc
mov
rolb
jecxz
lods
mov
repnz
enter
or
int
popf
in
sahf
das
dec
add
xchg
pop
xchg
sub
stos
xlat
ret
xor
jmp
jg
lea
mov
rcrl
ret
pop
daa
out
xor
jnp
mov
and
mov
imul
in
sub
es
cmp
fists
sbb
insl
pop
sub
bound
sbb
lcall
fs
sub
xor
mov
test
loope
imul
mov
mov
shrb
sub
jp
push
mov
fdivs
cmp
push
lahf
push
je
jne
sub
popf
jb
push
insl
dec
mov
fstps
imul
dec
lods
popf
cmp
add
incb
xchg
xchg
lds
jle
mov
fwait
add
stos
loope
test
sbb
pop
jl
mov
shrl
adc
or
scas
jg
jo
xor
repz
mov
cmp
aam
xor
pop
cmp
inc
jb
je
mov
jae
dec
xchg
mov
push
fsub
ja
dec
add
pop
daa
push
sbb
out
cmp
cmp
xor
sahf
lods
out
sbb
sbb
adc
call
fiadds
inc
shrl
cld
out
fisubrs
stos
shll
jge
jo
lods
enter
fimull
xchg
inc
ds
push
mov
mov
mov
les
gs
mov
ss
scas
enter
or
movsb
mov
int3
xchg
jo
mov
pop
add
mov
int
pop
test
adc
imul
push
les
or
popf
mov
pushfw
pop
popf
lock
xor
insb
or
adc
jno
in
jecxz
add
sbb
inc
cmp
jb
imul
fldt
adc
out
je
mov
lock
cltd
inc
dec
mov
negl
and
popl
int
xchg
mov
ja
mov
sub
or
xchg
mov
push
out
mov
fcom
aad
and
bound
sbb
scas
xor
in
ja
mov
hlt
test
jo
xchg
adc
push
lods
jp
enter
push
movsl
mov
lock
mov
push
and
mov
and
xlat
inc
add
or
sub
or
and
pop
sub
popf
jb
jo
insb
adc
hlt
mov
or
add
xlat
sub
scas
iret
dec
jmp
mov
cmp
cmp
aad
pop
stc
inc
in
push
pop
fcomps
inc
mov
test
outsb
xchg
imul
push
mov
push
ja
or
es
cmpsl
xor
shrb
fsubrl
inc
inc
inc
cmp
sbb
gs
fidivl
xor
ror
cmp
push
and
mov
sbb
sbb
xorb
in
sub
pop
inc
jl
sbb
inc
mov
fidivs
jge
jne
rcl
mov
adc
hlt
in
jl
mov
popa
ss
lock
add
pop
cmpsl
test
out
xor
iret
xchg
bound
xchg
imul
inc
out
push
or
fcompl
push
jo
jp
pop
sbb
rcll
ret
inc
jns
ss
lea
add
push
adc
or
hlt
pop
dec
and
les
push
push
dec
jne
push
imul
int3
push
or
imul
sti
je
add
inc
mov
mov
ss
in
int3
push
shr
imul
dec
add
jno
mov
push
rcrl
das
cmpsb
jg
add
fidivs
iret
lahf
mov
leave
jbe,pn
ffreep
lea
jl
roll
inc
ss
adc
pop
loope
addr16
rcl
out
adc
rcl
push
mov
enter
ljmp
pop
jle
xor
cmpsl
jbe
in
orl
or
loop
dec
stc
jno
add
dec
daa
mov
imul
and
sub
push
or
scas
add
xchg
cld
test
ds
arpl
pop
pop
dec
dec
rcrl
xchg
inc
test
adc
mov
sbb
xchg
pusha
xor
js
pavgw
add
pop
pop
mov
inc
xor
mov
push
loopne
mov
and
inc
pusha
push
lock
ret
ds
mov
js
fcompl
jno
mov
test
jb
insl
push
loop
insl
cmc
xchg
mov
mov
rcll
dec
adc
push
mov
sbb
dec
xchg
lods
cmp
mov
xor
mov
cmp
xchg
jg
xor
arpl
push
xchg
pop
mov
adc
jge
pop
pop
sahf
push
pop
mov
in
lods
adc
mov
test
pushl
cmp
sbb
addr16
cld
cmp
sbb
hlt
in
push
aas
adc
sarl
movsb
cmpsb
ss
dec
pop
sbb
hlt
and
push
out
push
mov
cmp
push
inc
outsb
icebp
movsl
sub
aad
stc
jp
push
into
push
ja
roll
push
scas
push
cltd
xchg
dec
jno
xchg
sti
push
sub
sub
fsubs
into
aad
push
outsl
push
add
jmp
das
sub
in
xchg
pop
xchg
addl
sub
mov
ret
aas
inc
popa
adc
ret
in
rol
shl
popa
mov
cmp
or
imul
pop
rcr
sub
mov
fs
mov
testb
je
push
push
aaa
xchg
mov
and
int3
xor
out
rcrl
sbb
shrl
out
push
add
nop
mov
js
adc
pushf
ds
xor
clc
mov
jl
jbe
push
cmpl
dec
jecxz
mov
pop
adc
cmp
xlat
adc
jb
xor
lret
in
adc
stos
icebp
ret
ljmp
dec
cld
adc
test
xor
jecxz
lret
add
mov
adc
jge
mov
cmp
pop
mov
cmc
xor
lods
gs
lods
shrl
fistpl
lock
fneni(8087
xor
inc
push
leave
and
test
and
pop
sbb
xchg
fs
adc
sub
cmc
nop
push
xor
add
inc
mov
fimull
repz
pop
xchg
lods
ja
leave
mov
xor
ja
fwait
popl
push
aad
pop
test
stc
sahf
xchg
push
scas
cmp
push
xchg
sub
pop
in
popa
jb
mov
push
inc
cmp
jmp
or
loop
mov
and
jnp
add
aas
xor
cmp
or
lock
adc
mov
push
in
outsl
movsb
or
pop
addr16
les
sub
push
dec
outsb
int3
xlat
push
add
lcall
mov
cmc
or
or
imul
push
cmp
sub
dec
fnsave
sub
lock
ljmp
outsl
fiadds
jmp
sub
sbb
lods
cwtl
adc
bound
test
adc
xor
xor
iret
int
test
test
jae
cld
mov
pop
jne
adc
into
fdivrl
push
mov
out
scas
out
jbe
iret
aam
xchg
test
fnstsw
das
mov
add
cmpsl
xchg
inc
icebp
cwtl
cmp
inc
fsubs
sti
gs
es
mov
mov
push
xchg
xchg
lea
aaa
ror
fsubs
inc
mov
sbb
sbb
push
xlat
ror
adc
dec
test
cli
lahf
in
mov
test
adc
es
push
inc
mov
push
stc
add
in
scas
bound
xor
or
rclb
push
sub
jae
imul
mov
data16
mov
lret
pusha
and
pop
je
push
push
icebp
iret
push
adc
sbb
pop
mov
outsl
lahf
inc
mov
adc
sub
repz
xchg
mov
sub
dec
dec
loopne
sub
aas
repz
xchg
dec
sub
addr16
arpl
imul
arpl
sahf
push
adc
lcall
mov
jae
dec
call
cmpsb
sub
imul
xor
mov
inc
xor
rorb
jno
push
adc
xchg
in
xchg
or
imul
loop
in
adc
push
clc
int
aam
filds
ftst
cmp
lods
ret
lea
lret
mov
rolb
dec
pusha
test
repnz
xchg
divl
pusha
jb
inc
js
sub
sahf
es
scas
test
dec
push
fs
mov
sub
icebp
jp
adc
mov
clc
mov
out
sarl
lea
mov
or
cmp
fcmovu
cmp
mov
test
lcall
je
mov
jns
and
mov
xor
in
es
push
xor
adc
ret
push
jg
sarl
ljmp
jo
addr16
adc
xor
popa
pop
daa
sahf
xor
push
mov
ret
mov
or
pop
enter
idivl
pushf
adcb
cmp
cs
mov
fs
push
cmc
or
shrl
adc
mov
test
add
mov
sbb
adc
test
fcompl
push
jae
jmp
sahf
inc
divl
cmp
cmpsl
push
movsl
xchg
lds
inc
mov
aaa
cmp
roll
pushf
lret
mov
pop
mov
mov
cwtl
dec
adc
sub
enter
fwait
in
fsubl
lods
mov
adc
test
xchg
pushf
cmp
enter
push
mov
jge
sub
test
mov
mov
lea
and
leave
or
sti
inc
or
in
xchg
cltd
mov
pop
xchg
lea
sbb
xchg
rcrb
ds
push
ret
pop
outsb
stos
mov
scas
or
bound
fwait
aad
dec
movsl
shrb
repz
xchg
sub
dec
sub
scas
je
cmpsb
mov
dec
data16
out
inc
insl
inc
jg
sbb
outsl
in
das
mulb
push
xchg
or
in
and
subl
loopne
shll
pop
jbe
pusha
out
xchg
push
jae
aas
xchg
push
cld
iret
cmp
mov
fisubrl
lcall
enter
fidivl
xchg
mov
xchg
out
ret
push
iret
decb
pop
mov
insl
xor
outsl
enter
mov
mov
mov
and
jmp
mov
addb
inc
adc
stos
inc
fs
add
pop
aas
lock
lock
sbb
dec
inc
es
adc
or
data16
bound
sti
movsb
divl
jae
lea
mov
inc
loopne
mov
scas
jbe
mov
call
fidivrl
faddl
xchg
mov
mov
xor
pop
dec
loope
add
sbb
divl
xor
jb
ret
xor
or
dec
xor
ret
xorl
push
lods
inc
xor
movsl
fsts
sbb
pop
cs
fldcw
and
ds
out
test
cltd
imul
inc
mov
dec
imul
ror
adc
or
mov
xchg
test
shll
jae
push
dec
mov
xchg
hlt
sub
rol
inc
push
movsl
push
cmp
pop
inc
dec
pop
dec
addl
insl
testl
mov
push
pop
xchg
ljmp
sti
les
sbb
popa
xor
pop
loop
lock
and
pop
inc
ss
cmpsl
mov
jo
pushf
enter
out
sub
fcompl
sub
repnz
push
lret
fsubrs
arpl
cli
lcall
push
stos
into
sub
jg
in
aam
int
or
repnz
out
push
or
out
jno
fstp
xchg
mov
push
cld
mov
out
push
jnp
xchg
mov
add
iret
inc
mov
scas
mov
addr16
testb
lea
jg
xchg
jne
loopne
jns
dec
dec
js
lds
sti
daa
mov
fcomps
add
stc
popf
out
aas
dec
jp
mov
jl
pop
xchg
cwtl
lds
xor
push
das
sbb
outsb
lahf
rclb
sti
xor
xor
jp
pop
jne
call
lock
add
pop
cmp
push
sahf
shlb
cmp
sbb
cwtl
or
and
sarl
jno
incb
mov
ret
pop
push
mov
xchg
pop
loopne
pop
cmp
mov
negl
push
sub
loope
aaa
out
out
jae
aad
add
jno
lcall
adc
cmpsb
or
pop
jecxz
aas
xchg
scas
push
sbb
outsb
push
mov
dec
inc
sbb
pop
jbe
and
xchg
stos
sbb
ja
add
jnp
daa
in
pop
mov
sub
mov
fcmovnu
push
in
in
nop
fcmovne
dec
cltd
mov
mov
sbb
daa
aas
addr16
mov
orb
add
movsl
scas
adc
in
xor
pop
mov
test
in
daa
push
push
scas
lock
pushf
xlat
enter
in
jl
mov
mov
mov
in
jne
leave
push
ds
shll
aad
into
loopne
cmc
aas
push
adc
cmp
sti
rorb
and
mov
fcmovnu
mov
andb
and
mov
mov
fbld
xorb
shll
fcoms
loope
sbb
stc
sub
jae
scas
arpl
shll
mov
loop
cmpsl
shll
ljmp
fcmovbe
ret
xor
cmc
fiaddl
lahf
jno
in
xor
insb
clc
pop
jp
sbb
jl
loope
jb
dec
cmc
fistpll
xchg
mov
fadds
imul
int3
inc
dec
push
inc
sahf
out
sub
mov
bound
pop
outsl
pop
jg
push
and
push
pop
mov
mov
mov
pop
popf
mov
insb
je
scas
cmp
hlt
inc
popa
leave
dec
movsl
outsl
call
mov
inc
repnz
adc
push
fsubr
push
sbb
pop
dec
dec
dec
xchg
out
adc
cmpsl
pop
rol
jns
outsb
cmpsl
mov
fisttpl
aaa
mov
stos
jg
jl
cmp
cld
lods
sbb
popa
push
adc
xor
add
adc
in
hlt
icebp
movsb
xorl
inc
popa
push
adc
xor
add
adc
in
hlt
icebp
movsb
xorl
inc
popa
push
adc
xor
add
adc
in
hlt
cmc
movsb
test
fs
inc
inc
popa
push
adc
xor
add
adc
in
pop
pop
sub
dec
dec
jnp
imul
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
or
mov
mov
das
in
add
sbb
or
cmp
sti
dec
stos
insb
fldt
cmp
fdivrl
imul
in
dec
sbb
or
pop
fwait
sub
pop
sti
dec
jmp
fldt
cmp
fdivrl
imul
in
dec
sbb
or
pop
jmp
mov
test
add
in
cmp
push
mov
fildll
xor
fdivs
sub
add
xor
imul
in
hlt
fldl
cltd
inc
imul
mov
pusha
je
xchg
aaa
sbb
std
mov
int
fsubrs
loopne
pop
cltd
lret
pop
push
push
rorl
sti
mov
jmp
lret
mov
pushf
sbb
fdivrl
jnp
mov
sbb
lret
les
pop
mov
popa
cmpsb
jae
out
int
divb
les
jns
insb
addr16
rdpmc
and
stc
ficoml
shll
sbb
jle
mov
push
jecxz
fidivrl
sub
pop
jge
insl
lret
ret
cmp
fdivrl
imul
in
dec
sbb
or
cmp
sub
pop
sti
dec
jmp
fldt
push
enter
loop
lahf
adc
sub
xlat
mov
in
xchg
add
ret
jp
popa
enter
mov
xor
dec
dec
popa
movl
test
jae
ljmp
jg
pop
int3
imul
in
dec
sbb
or
cmp
sub
pop
sti
dec
jmp
fldt
cmp
fdivrl
imul
in
dec
sbb
or
cmp
sub
pop
sti
dec
jmp
fldt
cmp
fisubrl
or
xor
mov
aad
mov
or
mov
es
sbb
mov
pop
stc
loop
or
stos
push
mov
pop
xchg
std
ss
jo
pop
push
and
repz
dec
or
dec
adc
inc
mov
arpl
dec
mov
mov
mov
push
mov
fs
adc
jge
jbe
jno
mov
scas
mov
xchg
and
fadds
inc
nop
mov
fistl
hlt
sub
push
mov
xor
mov
push
mov
pop
sub
cmp
test
aad
push
dec
test
push
and
mov
adc
dec
mov
fildl
fmuls
aad
and
xor
dec
add
stc
xchg
mov
jae
cmpsb
in
push
and
pop
sbb
mov
notrack
xchg
push
xchg
inc
stc
inc
inc
sarl
lcall
gs
adc
mov
add
sti
cld
mov
lcall
sub
fiaddl
push
loopne
sub
mov
int
mov
in
dec
push
sti
jmp
inc
and
lods
pop
leave
inc
std
xchg
clc
add
cmp
insb
test
mov
stc
push
pop
aam
sub
les
lahf
push
jno
sub
dec
fcmove
dec
mov
out
or
negl
es
aam
push
rcl
cmpsb
or
add
add
vsubsd
fwait
bnd
in
aaa
rol
cmp
ja
inc
cmc
addr16
sarl
sub
cmp
arpl
addr16
lea
sbb
push
mov
insb
xchg
xchg
mov
push
xchg
mov
jg
sub
pop
sbb
addr16
mov
out
lods
mov
or
loop
pop
sub
das
mov
dec
loope
pop
addr16
jmp
pusha
mov
mov
mov
cli
fwait
inc
loopne
mov
nop
xchg
aaa
push
sbb
mov
js
outsb
jns
lds
add
mov
mov
adc
push
xor
cwtl
xchg
inc
inc
imul
inc
mov
clc
jmp
out
cmp
addl
xlat
insl
ret
dec
or
jnp
ds
push
adc
in
imul
add
sub
sub
hlt
sahf
lahf
insb
xor
ror
push
scas
jmp
sbb
cltd
out
adc
pop
mov
xlat
pop
jp
mov
add
pop
pop
sbb
pushl
inc
push
fidivrs
cli
test
popa
dec
and
fs
inc
fsts
xchg
sub
adc
ljmp
sti
aam
pop
insl
lds
repz
idivb
inc
aad
andb
jp
sbb
inc
push
call
rcl
cmpsb
ss
roll
int3
pop
je
xchg
sahf
push
dec
shlb
xchg
sub
jecxz
movsb
addr16
fucomp
fstpt
scas
rcr
jae
sar
mov
push
jbe
out
dec
dec
imul
or
mov
push
dec
test
outsl
xor
mov
adc
ficompl
cmp
xchg
in
call
pop
add
mov
add
sub
inc
xorb
daa
mov
shr
mov
push
ret
jne
xor
imul
mov
out
sahf
mov
sub
mov
push
jmp
mov
sbb
out
sti
out
and
mov
out
ficomps
pop
popf
aaa
push
inc
mov
jmp
sbb
dec
dec
test
cmp
add
cmp
add
pop
sub
ficoms
inc
std
add
mov
dec
roll
ja
out
mov
xchg
lods
add
push
inc
xchg
jae
xor
fcoml
cwtl
xor
push
cltd
xchg
mov
lret
or
je
dec
ret
sub
xchg
sbb
stos
ret
int3
mov
stc
rolb
mov
push
sbb
jnp
loopne
or
arpl
in
out
pop
hlt
push
adc
xor
sub
jg
pop
lds
int3
or
pop
sbb
mov
push
mov
cmpsl
lods
shr
aas
jne
mov
mov
jg
enter
icebp
cmp
and
stos
fisubl
inc
addr16
xchg
push
add
dec
pandn
jae
shrl
inc
xor
or
add
insl
ja
in
lret
inc
jmp
test
mov
imul
shll
push
ret
int3
movsl
xlat
sbb
and
outsl
mov
fsubs
add
cmpsl
mul
ljmp
fidivs
push
xchg
and
dec
sub
dec
test
icebp
fcomps
scas
in
test
inc
cmpsw
mov
ss
mov
outsb
sbb
xchg
lret
fwait
adc
icebp
addl
jno
in
pop
or
xchg
mov
pusha
or
push
lods
popa
push
fiadds
iret
popa
popa
push
inc
mov
cli
dec
insl
and
mov
lds
fwait
rcrb
mov
inc
fmuls
aaa
pop
arpl
sahf
mov
push
xor
test
cltd
fprem1
jns
jmp
adc
imul
aaa
bound
testl
out
leave
in
out
repz
gs
sub
or
loop
iret
out
pop
nop
in
cmp
mov
jae
mov
lock
aad
sti
sub
insb
sub
pop
jae
sahf
loopne
cmp
dec
enter
lds
bound
inc
inc
cmp
mov
or
adc
sub
test
rcr
sahf
rcrl
jg
int3
adc
or
jmp
jmp
jl
out
sub
pop
pop
arpl
cmp
sub
xorb
cli
mov
daa
mov
lahf
fcmovnbe
jmp
fildll
adc
sahf
insl
ss
test
mov
xchg
mov
jge
lret
xor
mov
fstl
std
les
ja
pop
fistpl
push
inc
fbstp
in
int
repz
pop
cmp
test
cli
enter
xlat
push
push
mov
mov
add
xor
sbb
test
test
das
es
es
repz
sarl
cmp
pop
cmp
push
mov
out
movhps
cwtl
pop
push
or
cmpsb
lret
jne
jb
cmp
out
shl
and
add
lods
test
jnp
cmp
xchg
pop
jge
and
push
fs
ret
aam
mov
sbb
insl
stc
add
sbb
cmp
or
hlt
adcb
out
push
fnstenv
mov
or
test
xor
xchg
int
or
adc
push
stos
fcmovne
mov
gs
loope
xchg
jbe
and
iret
xor
lods
push
xor
aas
adc
xchg
shll
mov
loopne
lea
cmpsl
xor
sbb
xchg
test
pop
push
push
rolb
cmp
ret
in
add
test
in
mov
nop
sbb
outsl
rcrb
push
adc
aas
lock
in
add
push
jg
add
cs
dec
jbe
and
repnz
xchg
pop
jg
insb
xor
push
loop
pop
into
cmp
jecxz
subb
insb
mov
and
fisttpl
icebp
xchg
repz
inc
ja
popf
hlt
pop
lods
mov
mov
shl
nop
ret
jns
xor
in
subl
push
adc
inc
aam
adc
lock
mov
jmp
add
sub
sub
sub
mov
mov
data16
or
cmpsb
inc
int
stos
lods
dec
repnz
leave
lock
push
mov
stos
mov
lea
leave
into
push
popf
leave
into
adc
nop
dec
popa
jns
mov
mov
icebp
aad
pop
mov
stc
mov
mov
ror
rclb
mov
lret
and
scas
jmp
repnz
sub
push
pop
sar
fcomps
mov
jl
ficompl
or
cmp
movsb
scas
test
pushf
inc
cs
dec
xchg
adc
xchg
adc
jbe
loopne
mov
dec
icebp
mov
lcall
push
pop
push
roll
jbe
loopne
lods
ret
hlt
iret
mov
jbe
mov
sti
popa
ss
int3
cmp
fidivs
daa
clc
mov
push
pop
or
sub
push
push
jge
testl
mov
iret
dec
mov
cmp
pusha
repnz
mov
and
imul
lea
aaa
fisubl
add
cli
inc
fmull
call
or
test
mov
sub
gs
sbb
ret
add
xchg
jle
int
dec
sbb
sub
pop
jne
ret
imul
mov
cmpb
orb
or
jmp
dec
nop
mov
cmpsb
inc
andl
sbb
repz
out
or
adc
nop
out
adc
or
or
push
mov
lds
push
xor
jle
int
inc
jbe
dec
movsw
aaa
les
test
mov
ss
xchg
cld
xor
mov
fnstcw
add
sbb
mov
ss
and
jp
jo
sub
out
into
xchg
sbb
mov
cmp
jp
enter
les
jl
or
and
and
xchg
mov
pusha
pushf
mov
adc
pop
imul
jg
ret
add
jge
aas
nop
rcrl
int3
or
rcr
jecxz
call
push
jns
or
repz
sarl
in
enter
sbbb
pop
mov
idivl
or
lods
mov
mov
jl
inc
aam
push
inc
sbb
pop
shl
fcomp
mov
mov
mov
into
into
dec
mov
sub
jle
mov
fdivrl
ja
xchg
sbb
mov
or
adc
repz
cmp
roll
ret
jb
enter
mov
jno
add
add
enter
mov
test
mov
adc
add
insb
jnp
mov
mov
sahf
jmp
stos
push
cld
pop
inc
ljmp
xlat
mov
add
pop
or
push
fcmovne
cltd
mov
adc
xor
nopl
pop
push
mov
outsb
push
dec
cmpb
lea
cmp
xchg
out
arpl
in
shlb
cmpsl
fs
cmp
inc
and
insl
or
orl
cmp
inc
out
sub
cmc
jp
cltd
jno
lock
pop
flds
fstl
das
sahf
jo
rcr
add
add
sbb
jae
ss
adc
repz
xor
lock
pop
cmp
sarl
sbb
or
pop
and
xchg
inc
js
pushl
sbb
sub
pop
call
das
pop
shl
add
sub
push
cmp
push
inc
xor
xor
mov
call
mov
lahf
lcall
xlat
jb
rcl
and
movsl
insl
add
xchg
mov
mov
ja
lcall
out
mov
mov
cwtl
xor
cmp
jne
add
adc
cmp
adc
inc
xor
fdivrp
movsl
adc
pusha
xchg
cmpsb
mov
xor
repz
repnz
cmp
sar
data16
dec
filds
add
jge
ss
aad
adc
mov
lock
and
add
add
repnz
loop
mov
jmp
adc
out
ret
pop
and
imul
repnz
scas
fwait
sbb
ss
lds
jmp
and
fcmovbe
xor
add
xor
jmp
scas
testl
xchg
dec
sbb
aam
pop
pop
out
xchg
mov
shll
out
push
insb
sub
ds
push
inc
mov
inc
mov
xor
insb
xchg
fs
and
sub
pmovmskb
or
xor
inc
pop
aad
addr16
and
inc
and
dec
movsl
rcll
iret
pop
dec
xor
xchg
adc
jmp
mov
xor
fwait
jmp
xchg
shrl
jge
inc
cs
lcall
sbb
lret
inc
cmpsb
add
adc
xor
fsubl
lret
fld
call
mov
jno
outsb
fimuls
lret
shr
into
mov
inc
dec
cmp
mov
imulb
mov
inc
mov
into
push
cmp
imul
fldcw
or
add
test
stos
insl
test
adc
mov
fdivr
cld
xchg
mov
mov
cmp
mov
testl
mov
inc
adc
gs
jp
icebp
lock
or
fcmovne
inc
mov
subb
sub
test
cmp
xor
loope
cltd
stc
test
or
loopne
enter
or
shrl
popw
sub
int
add
push
lea
nop
int
stos
adc
cmpsl
ja
pop
cmp
mov
lock
repnz
and
or
or
xlat
lock
mov
insl
jns
jmp
call
je
inc
int
fdivl
xor
imul
or
dec
rorb
jg
mov
stos
jecxz
mov
ljmp
jno
popf
add
cmp
or
aad
loopne
push
xor
xor
mov
rclb
mov
cmp
pop
add
aaa
jecxz
mov
or
dec
aad
jae
sub
fcmovnbe
jne
ja
addb
pop
xor
mov
lret
or
add
mov
mov
add
loop
push
pop
xchg
jmp
mov
rcrb
int
dec
jnp
cmp
mov
sub
and
or
mov
sarl
iret
mov
inc
sub
inc
mov
loop
leave
xor
out
bound
aam
das
push
loop
outsl
adc
pop
mov
sbb
pop
addb
and
push
rcll
out
sahf
push
lret
xchg
xor
lret
out
pop
ret
pop
fcompl
lds
mov
and
nop
lods
mov
xor
lret
fs
sbb
sub
dec
push
or
adcl
addl
push
insb
inc
and
mov
mov
rcrl
stos
cmp
inc
jp
repz
shrl
inc
adc
pop
xchg
dec
shl
inc
mov
subl
mov
lcall
or
xor
mov
xchg
mov
jmp
jmp
out
cwtl
arpl
out
pushf
pop
out
mov
jg
pop
jb
loop
inc
and
je
jns
push
cli
lds
in
jo
jns
daa
lcall
mov
push
test
lret
mov
test
dec
nop
mov
xor
mov
inc
fcomps
test
imul
int
xchg
dec
sub
xchg
lock
jl
mov
mov
ret
lret
popf
jmp
xor
mov
testb
mov
cmpsl
and
or
test
mov
cmp
push
mov
pop
push
addr16
pushf
xor
cmp
cltd
ret
jno
add
ja
mov
push
in
hlt
pushf
data16
mov
xor
xlat
in
out
dec
sbbb
stos
out
arpl
in
mov
in
test
lcall
out
push
jns
mov
push
loop
sbb
push
jbe
dec
adc
roll
jg
adc
filds
js
sbb
mov
adc
dec
mov
mov
adcl
and
sbb
push
imul
faddl
xor
pop
fldl
int3
jmp
das
sub
stos
inc
push
adc
shlb
scas
js
dec
mov
or
popf
test
out
jnp
xor
stos
stos
jne
cmp
push
addl
out
pop
lods
xchg
fildll
test
adc
lahf
fists
call
sbbb
jg
sbb
fisubrs
xlat
aam
jp
push
into
imul
mov
sbb
add
cmc
mov
in
mov
subb
addr16
sub
outsb
or
mov
xchg
test
inc
nop
xchg
lds
dec
mov
pop
jno
cmp
and
enter
stos
fwait
inc
fwait
inc
pop
push
les
pop
cmp
mov
imul
movsl
sbb
add
sbb
adc
movsl
movsl
je,pt
stos
mov
push
xlat
push
mov
rcl
iret
lcall
aas
sbb
in
ja
cli
jecxz
pushf
addr16
sbb
call
lea
in
in
lods
lret
dec
adc
pop
inc
sub
jb
and
jge
std
jno
inc
aaa
xor
cmp
push
daa
push
pop
pusha
or
sub
insl
out
loopne
mov
sbb
lret
js
dec
push
jae
arpl
insl
cmp
cmp
jns
mov
jg
or
pop
sbb
jo
loope
mov
out
xor
jo
lret
sub
xchg
pop
ja
xchg
shrb
jae
loopew
sbb
repz
mov
push
add
pop
xchg
inc
or
ja
sub
pop
push
xchg
mov
cwtl
mov
stos
adc
xor
xchg
fisubrl
push
bnd
sub
out
stos
ret
mov
movsb
add
mov
jl
push
inc
pushl
inc
jecxz
movsl
ret
pop
pop
lahf
mov
inc
and
repz
mov
aaa
shll
insl
notrack
push
cmp
sahf
imul
and
mov
pop
jno
inc
cli
cmp
lods
dec
aam
dec
popa
jmp
out
ret
push
sbb
add
or
fwait
adc
push
aam
lods
test
push
and
jbe
repz
jp
pop
in
div
sbb
jo
cwtl
movsl
mov
pop
xor
or
cmp
ja
ud2
lret
inc
fiadds
jmp
push
cmpsb
and
pop
push
jle
mov
jb
mov
pop
sbb
mov
loopne
lret
mov
add
push
push
push
shl
inc
clc
cltd
fidivl
sub
xchg
dec
into
cmp
cmp
imul
aad
adcb
jo
dec
inc
pop
jmp
add
xchg
push
int3
fwait
jae
and
add
and
sarb
fstps
lret
ror
lcall
lcall
inc
and
test
push
cwtl
std
sub
dec
loope
push
and
and
cltd
push
mov
adc
push
shll
xchg
lahf
xlat
inc
int3
sbb
ja
push
sub
insl
inc
inc
sub
add
les
jp
ja
hlt
dec
jo
mov
inc
mov
dec
add
add
mov
xor
pop
jp
sbb
daa
push
xorb
mov
dec
cmp
jmp
mov
pop
and
out
lods
mov
mov
sbb
je
xchg
inc
es
mov
or
mov
icebp
or
push
mov
lods
lahf
push
cmp
lahf
rcl
leave
incb
ljmp
inc
pop
push
add
loop
sbb
ss
stos
pop
loopne
nop
and
sub
js
addl
outsb
aad
iret
dec
int3
scas
lret
mov
aad
jl
cmp
jno
xchg
mov
aad
push
jne
arpl
in
scas
fdivl
lret
mov
fbstp
push
addr16
mov
jns
pop
lea
dec
mov
inc
dec
xchg
out
les
call
lret
lods
jg
out
addr16
test
sub
and
rclb
sbb
xor
sti
cmc
mov
loop
rcll
int
mov
sub
movsb
loope
fistpl
cmpl
push
jp
addr16
leave
push
xor
jnp
pop
or
shll
in
mov
sub
fcoms
in
negb
gs
cmc
mov
stos
cmpsl
adc
lret
fstps
data16
and
fldt
or
add
dec
adc
push
sbb
in
mov
mov
movsb
jecxz
mov
pop
push
cld
xchg
int3
mov
xlat
adc
inc
ds
rcrb
mov
dec
scas
pop
enter
ja
mov
dec
jp
inc
dec
in
inc
push
sub
jns
push
imul
inc
pop
sbb
lret
and
out
and
mov
fisttpll
inc
and
sbb
sbb
cld
pop
in
dec
sbb
or
cmp
sub
pop
sti
dec
jmp
fldt
cmp
fdivrl
imul
in
dec
sbb
or
cmp
sub
pop
sti
dec
jmp
fldt
aas
mov
mov
jnp
imul
in
dec
sbb
or
cmp
sub
pop
cli
dec
jmp
fldt
popf
cmp
paddusb
jmp
fucomi
mov
inc
or
xchg
fwait
sub
sub
adc
and
xor
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
fisttps
pop
mov
mov
jb
or
add
xor
and
push
lea
jb
bound
mov
mov
sbb
inc
int
mov
push
lea
popf
jb
bound
xor
fs
or
sbb
push
mov
jb
push
repnz
dec
mov
sub
lret
div
loope
and
aad
mov
pop
push
aaa
movsl
push
jg
sbb
fisttpll
mov
jge
and
leave
jo
clc
shll
std
out
in
ret
dec
mov
and
pop
xorb
push
xor
and
sub
iret
pop
adcl
fmulp
mov
cmp
ret
push
mov
adc
lods
inc
bound
popf
xor
lods
jg
dec
call
inc
or
xor
int
and
and
xor
fildl
test
cmp
ljmp
cld
xlat
cwtl
inc
pop
aaa
mov
sbbb
into
jge
or
pop
cmp
ljmp
popf
jb
push
aam
and
pop
testb
mov
arpl
test
cmp
sub
push
scas
and
pop
cmc
insl
imul
sahf
pop
xchg
cmp
push
mov
and
daa
testb
and
loopne
mov
ret
sbb
sub
add
xor
and
push
lea
jb
bound
mov
mov
sbb
adc
add
xor
and
push
lea
jb
bound
sbb
std
cmp
push
xchg
push
das
mov
adc
jle
cwtl
sbb
and
loopne
mov
dec
je
ja
ret
stc
in
imul
leave
imul
rolb
in
and
gs
mov
je
pop
out
inc
in
movsl
lahf
inc
cwtl
or
mov
mov
paddq
adc
shlb
mov
pop
sarb
lahf
ds
sbb
push
dec
bound
mov
cmp
mov
dec
xor
cs
xlat
into
xchg
jb
cltd
inc
sub
sbb
cmp
cmp
ret
xchg
fs
adc
jbe
cmc
mov
rcl
mov
mov
lcall
gs
mov
sub
pushl
xchg
pop
daa
les
mov
xchg
sub
jb
aas
push
dec
rcrb
adc
daa
add
jo
mov
jo
pop
dec
mov
pop
mov
jne
mov
mov
lahf
and
mov
insl
out
sbb
outsl
scas
mov
xchg
cld
jae
lds
loopne
push
outsl
mov
push
push
xor
adc
mov
sbb
cltd
rclb
clc
insl
cmc
iret
mov
sahf
imul
out
insb
cmp
outsb
jecxz
pusha
les
lock
sbb
negl
cmpsl
xor
iret
nopl
cmpsl
or
cmp
pushf
dec
clc
insl
mov
mov
mov
mov
in
mov
push
mov
mov
adc
lcall
jp
add
add
out
add
mov
andb
mov
xor
in
and
addl
mov
xor
xchg
xor
dec
call
sub
cmc
cmp
or
inc
clc
push
and
mov
int
pop
pop
rorl
mov
xchg
inc
repnz
loope
sbb
adc
shl
pop
scas
decl
mov
pop
inc
inc
jmp
inc
insl
faddl
fwait
xchg
jecxz
dec
sbb
sub
adc
stos
mov
repz
loopne
std
mov
insl
xchg
add
xor
pop
add
addr16
cli
aas
sub
xor
sbb
je
inc
mov
es
popf
add
dec
xchg
ds
inc
in
jns
mov
push
loope
mov
adc
pop
repz
ds
in
cld
or
test
fs
inc
insl
sar
fists
push
repz
ret
cmp
sub
sbb
loop
leave
inc
arpl
pop
sbb
mov
xchg
mov
lret
jg
pop
add
push
push
xor
xor
outsl
loope
or
dec
pop
ficoms
push
mov
lods
adcb
and
std
xlat
sbb
mov
out
inc
mov
test
jno
imul
repz
sub
push
call
inc
mov
cmpl
push
enter
inc
pop
call
push
imul
filds
bound
pop
test
mov
cwtl
iret
cmpb
adc
imul
daa
mov
mov
rclb
inc
fadd
insb
jnp
cmpb
outsl
jp
jp
or
addl
leave
sub
sbb
repz
dec
mov
das
fistl
pop
and
sar
je
xchg
pusha
adc
mov
ljmp
leave
aad
cld
inc
xor
add
jmp
adc
movsl
pop
add
cmp
imull
sub
add
loop
and
push
into
adc
xchg
push
lret
adc
sbb
mov
fistps
sub
shl
xlat
pushf
das
negl
rclb
fldl
jae
jecxz
cmp
insb
xor
lahf
sbb
lret
inc
pop
ljmp
js
adc
xlat
dec
loopne
int3
fidivrs
insb
inc
push
pop
xor
in
stc
add
arpl
arpl
sahf
ds
sahf
xchg
in
adc
test
outsl
pop
jo
hlt
enter
xor
fiaddl
dec
ss
sbb
inc
push
xor
addb
xchg
jns
jb
lret
mov
gs
das
idivb
xor
mov
push
nop
scas
mov
or
jnp
sub
push
push
sub
inc
mov
out
popf
repnz
or
xor
sahf
ljmp
jmp
mov
add
bound
push
hlt
add
in
fnstenv
sub
mov
aad
jecxz
fcmovnu
stos
pop
mov
mov
or
lcall
xor
or
loope
lahf
inc
add
mov
pop
jns
xor
aas
std
adc
ret
out
or
pop
call
out
movsl
nop
mov
push
test
xchg
rorb
and
hlt
cmc
divl
mov
dec
pop
ret
dec
lret
test
xor
frstor
addr16
clc
int3
pop
jecxz
in
xor
pop
ljmp
xchg
aaa
lods
lret
outsb
int3
test
push
popf
cs
xlat
clc
add
jmp
mov
test
xorl
fsubrp
dec
fnstcw
stos
cmp
jl
mov
push
or
ret
notl
out
push
ljmp
mov
xchg
xchg
iret
aad
cmpsl
mov
adc
inc
pop
mov
add
enter
push
aam
pop
cltd
mov
insl
cmp
sahf
jle
and
jle
lods
pusha
pop
xor
out
mov
add
push
jbe
adc
inc
scas
adc
test
test
pop
xchg
push
mov
icebp
stos
filds
out
cs
push
add
repz
ret
ficoms
mov
mov
ja
cmp
push
push
in
mov
js
jl
aas
out
mov
data16
je
int3
cmpb
inc
xor
dec
mov
pop
push
mov
rcl
push
pop
mov
sbb
mov
jno
xchg
mov
jp
inc
scas
in
pusha
test
add
arpl
pop
jmp
stc
pop
test
popa
mov
and
cmp
pop
sub
outsl
mov
add
sbbl
insl
pushf
orb
cltd
inc
mov
loopne
push
jb
aam
rclb
das
xchg
out
push
jle
aam
bound
shrl
aam
mov
stc
sti
pop
inc
xchg
lods
std
or
mov
stos
jp
mov
cmp
data16
dec
lret
scas
mov
clc
cltd
test
lds
shrl
sbb
and
ljmp
add
leave
jne
pop
aam
sub
jmp
sbb
sub
mov
push
filds
sbb
in
dec
out
stos
lods
sub
xor
inc
xor
loopne
xchg
dec
cltd
and
mov
xor
xor
and
push
mov
repnz
and
lret
add
cmp
scas
popa
mov
mov
push
ret
cmpsl
cmp
outsl
hlt
mov
lahf
pop
jne
push
mov
sbb
jns
jecxz
popa
mov
mov
mov
aam
cmp
aad
rcrb
in
dec
push
fistl
dec
sub
pop
stc
adc
imul
les
fwait
je
push
rorl
data16
push
dec
cmp
stos
lret
pop
and
decb
fisttpl
xor
mov
pop
push
mov
stos
and
lea
js
cltd
loope
pop
test
mov
xchg
lahf
aas
imul
or
cmp
jmp
dec
in
in
xor
lret
jno
cmp
aaa
pop
xchg
push
jno
pop
sti
gs
push
cmc
sarl
pop
sub
pop
test
dec
inc
jle
mov
jmp
dec
shlb
sub
cmp
xlat
in
sbb
inc
pop
jns
std
and
dec
adc
icebp
lea
cmpsl
imul
ljmp
je
lret
fisubrs
popf
orl
mov
es
arpl
daa
out
je
inc
or
enter
imul
bound
movsb
ds
inc
xchg
aas
cmp
lods
dec
fwait
leave
add
dec
scas
and
pop
std
adc
mov
add
push
test
xor
jnp
pop
mov
pop
mov
xchg
xchg
mov
imul
pause
loop
lcall
cmp
add
pop
lcall
cwtl
inc
add
cmc
daa
es
es
mov
aaa
cld
cltd
lret
aas
test
pusha
into
testl
lea
test
pop
pinsrw
shufps
mov
inc
jp
sti
xchg
push
adc
push
and
jmp
mov
in
sahf
fisubrs
add
les
fmuls
and
frstor
dec
sub
out
adc
sub
sbb
flds
mov
jns
negb
ss
xor
xor
sub
and
adc
xor
jnp,pn
hlt
or
or
cmp
sbb
add
push
mov
lcall
or
jp
cmp
sub
shll
pusha
sar
ret
lds
imul
add
mov
dec
jb
lahf
mov
push
add
xchg
mov
std
call
and
adc
imul
repz
mov
loop
dec
or
adc
fcoml
jbe
add
repnz
lcall
jp
xchg
pop
stc
xlat
bound
call
xchg
mov
mov
xchg
fimull
dec
fcmovne
push
pop
mov
pop
addl
leave
enter
in
xchg
arpl
negl
das
cwtl
mov
mov
stc
int3
push
mov
or
fdivr
cltd
dec
dec
push
mov
into
add
dec
xchg
stos
andl
cltd
push
mov
push
sbb
xlat
addr16
xchg
adcb
mov
cmp
adcl
push
out
lahf
and
pop
adc
push
mov
pushf
fsubr
mov
aam
dec
jnp
mov
scas
nop
mov
cmovno
hlt
loop
mov
jle
xchg
sbb
mov
xor
hlt
cmp
xchg
fstpt
call
inc
jbe
dec
and
jnp
add
sbb
dec
xor
sbb
pop
ds
fs
in
xlat
pop
out
cld
inc
cmp
mov
cmpsb
adc
popf
test
adc
cmpb
lcall
xchg
ljmp
inc
in
sbb
sub
inc
daa
ss
test
cmp
imul
jb
fs
xor
cmpsl
mov
notl
sub
aam
stc
xchg
in
adc
mov
push
leave
xchg
mov
sbb
arpl
xchg
cld
insb
cltd
daa
and
sub
xor
mov
dec
push
pusha
xor
pop
nop
lret
sbb
outsb
add
and
lcall
push
and
mov
adc
scas
push
and
outsb
addb
fisttpll
adc
jle
and
sub
jns
rorb
jbe
lds
mov
stos
jp
jne
fcomi
loopne
mov
out
xlat
adc
popf
cwtl
dec
leave
cwtl
xchg
out
pop
push
push
imul
or
push
js
jo
lahf
sbb
cmp
add
imul
pop
lods
subb
incl
imul
lret
xchg
push
cmc
std
push
add
mov
js
lcall
sarl
or
das
pop
xchg
sbb
or
bnd
jne
dec
or
mov
sbb
xchg
ret
jecxz
pop
fiaddl
sbb
idivb
add
repz
push
xchg
adc
dec
lcall
fs
or
mov
jb
jge
sbb
mov
into
aas
cld
xor
dec
push
fsubrl
test
aaa
mov
jge
push
add
mov
out
adc
es
jl
dec
sbb
outsb
jl
add
cmc
xchg
cltd
out
test
add
sub
jmp
dec
sbb
adc
loope
jmp
add
mov
shlb
lcall
mov
ficoml
xchg
cltd
inc
jmp
lret
scas
xor
jecxz
sbb
outsl
xchg
xchg
sbb
xchg
pop
and
fneni(8087
lret
fst
out
movsb
lock
test
add
or
sbb
fsubl
mov
add
pop
xchg
js
das
sub
es
jp
repnz
inc
sbb
xor
sbb
add
mov
mov
xor
test
adc
hlt
les
lret
in
inc
jmp
addr16
and
add
fnstenv
xchg
ja
cmc
push
dec
and
pop
inc
push
popf
gs
insb
sub
push
loopne
mov
std
out
shll
jo
lock
test
mov
and
pop
divl
jl
cmp
subb
ss
rorl
pop
jo
in
mov
jb
je
push
fisubrl
push
xor
cmpsb
shrl
ljmp
dec
push
sarl
repz
sub
addb
add
push
mov
int
jno
cwtl
aaa
out
sub
rcll
rcr
push
push
aam
push
adc
push
cmp
lds
xor
aad
mov
aad
or
test
push
xor
in
xchg
mov
lods
mov
imul
aaa
adc
gs
push
stc
dec
jg
rorb
sti
outsb
test
cli
pop
cmp
or
push
pushf
in
cld
jbe
clc
mov
cmp
movsl
inc
jp
or
andl
scas
pop
or
out
jns
mov
sub
mov
cmp
in
or
jecxz
push
xchg
sbbb
and
add
jbe
loop
adc
inc
mov
and
rcll
push
xor
mov
sub
push
fisubs
pop
in
add
or
cmovle
jbe
or
cmpsl
lahf
je
mov
mov
adc
adc
inc
adc
dec
ret
cmc
out
pop
jmp
dec
jne
sbb
jae
sub
daa
push
cmpsb
xchg
ret
adc
sbb
mov
ret
das
push
xor
xlat
mov
loopne
mov
jg
lret
lock
or
aas
daa
insb
outsl
fcoms
ret
xor
cmpsb
aad
fbstp
imul
push
into
push
add
pop
or
pop
scas
inc
sub
dec
xor
dec
in
cmpsl
pop
pop
lcall
pop
cmp
iret
insb
xchg
orb
roll
pop
xchg
jp
lock
inc
dec
ret
cwtl
mov
jge
dec
popl
out
add
push
lods
andl
subl
pusha
ret
lcall
adc
cmp
cltd
jmp
or
aas
and
dec
aaa
cmp
xor
fdivs
aam
scas
push
jo
jmp
mov
or
push
mov
out
test
sub
in
ficoml
push
loop
mov
push
cmc
cmpl
fsubl
roll
pop
push
mov
jecxz
cmp
clc
xchg
je
pop
icebp
xor
es
jae
mulb
das
insl
loopne
clc
rclb
aas
jmp
sbb
mov
loop
into
lock
lds
lahf
imul
cmp
xchg
sub
outsb
add
aaa
fistpll
pop
pop
or
fs
sbb
ja
cmpsb
cwtl
inc
mov
cld
cmp
sub
or
mov
in
loopne
les
push
sbb
out
add
xchg
push
rorb
inc
incl
and
clc
lret
ret
jo
inc
pop
lds
cmpsl
pop
jg
and
mov
subl
leave
mov
inc
das
mov
ror
out
in
jecxz
pop
nop
xchg
orl
out
and
imul
jns
dec
pop
push
push
cmp
mov
pop
js
mov
dec
pop
addl
lods
insb
incl
lret
inc
mov
scas
xor
inc
rcrb
mov
mov
push
push
inc
test
sbb
sbb
mov
xchg
inc
pop
add
repz
bound
test
aad
imulb
mov
sub
cmp
cmpsl
repnz
xchg
cmp
lods
jl
and
xor
add
movsl
pusha
mov
fwait
cltd
out
lock
and
mov
push
push
in
test
pop
xlat
xchg
fcomps
inc
cltd
xlat
mov
push
fmuls
pop
mov
xchg
adc
mov
xor
addl
cmovle
into
rolb
inc
or
inc
jbe
pushf
iret
push
xor
mov
adc
push
outsb
lret
shlb
add
ret
xor
pushf
repnz
int
mov
mov
mov
xchg
xorb
cld
and
push
jge
mov
push
inc
push
push
cmp
jmp
lods
insb
out
aam
fadds
sub
jl
dec
dec
xchg
shrb
out
add
and
push
pop
notb
mov
push
mov
pop
dec
mov
cs
out
ret
inc
dec
push
test
lcall
into
or
iret
cmp
push
mov
push
add
iret
lcall
dec
cwtl
mov
scas
inc
xchg
sub
cwtl
shll
negb
cmp
xchg
addb
xchg
faddl
sbb
push
cs
imul
fldt
dec
add
xchg
pop
adcb
enter
data16
sarb
xchg
les
sti
push
movsb
mov
mov
cltd
mov
xor
jne
xor
mov
jge
or
lods
adc
pop
imul
push
mov
jg
shll
mov
loop
cmp
add
lods
sub
movzwl
fcomi
or
and
pop
shll
mov
xor
xor
dec
stc
push
mov
fwait
test
ret
mov
jae
scas
int
or
ret
fucomp
sbb
push
bound
sbb
cmp
sub
dec
pop
int
cmc
xlat
aam
scas
repz
mov
stos
add
jbe
jae
push
push
dec
xchg
push
ja
lcall
xchg
mov
lds
fildll
adcb
add
int
out
push
cmc
mov
mov
int3
mov
loop
adc
ret
add
enter
inc
adc
pop
aad
cmpsb
out
mov
fidivs
loopne
movsb
jge
mov
cmp
shlb
icebp
push
cmc
xchg
jo
arpl
inc
enter
fucom
dec
ja
mov
push
lahf
or
pop
popf
xchg
inc
stc
pushf
xor
xor
or
pop
mov
aad
test
sbb
insb
pop
cli
lock
xor
loopne
push
ficoml
scas
aaa
add
bound
inc
mov
push
jb
add
xor
xor
xor
mov
dec
in
outsb
inc
lock
jle
in
ss
in
test
adcl
mov
mov
lock
mov
jp
ficompl
sub
adc
jno
push
adc
dec
test
addr16
adc
gs
sub
mov
cmp
add
js
pop
adc
mov
call
xor
sub
sbb
pop
jns
add
outsl
xor
add
dec
sbb
addr16
xchg
jne
mov
jmp
int3
adc
cmp
cld
mov
pop
or
add
push
in
xchg
inc
mov
repz
inc
push
push
data16
dec
andl
insb
dec
int3
fcomps
sbb
fdivl
jge
mov
cli
inc
push
and
or
ja
inc
or
rol
inc
jno
push
dec
inc
cltd
push
mov
or
in
push
es
sbb
gs
inc
jne
addb
dec
repnz
addr16
pop
cltd
lods
sarb
and
addr16
pusha
push
or
jmp
neg
pop
cmp
dec
add
jb
pushf
into
cs
hlt
inc
out
xchg
rcrl
lcall
dec
sbb
icebp
jno,pt
push
ret
adc
jge
dec
movsb
daa
or
lods
scas
fstl
cltd
iret
dec
hlt
call
adc
int3
or
cmp
aam
cmp
orb
lea
int3
cmpsl
jg
mov
test
cli
adc
call
lret
dec
inc
int
sti
les
mov
xor
mov
mov
in
pop
out
push
ret
ret
add
add
xchg
in
in
xor
jno
push
or
cmp
jp
sbb
inc
arpl
mov
mov
dec
sub
test
mov
fdivl
sbb
push
cmp
js
adc
sahf
cmp
jl
scas
pop
popa
add
push
mov
data16
sti
xor
flds
enter
lea
lock
xor
push
or
jo
es
adc
push
xor
mov
shll
add
test
mov
xchg
push
repz
adc
shll
inc
cpuid
aas
loop
pushf
pop
out
xchg
dec
ss
iret
sahf
gs
and
popf
popf
fldt
nop
test
mov
mov
stos
cmp
mov
in
add
or
adc
pushf
mov
popf
cmp
fsts
les
jge
or
loop
adc
add
xor
and
push
lea
jb
bound
mov
mov
sbb
adc
add
xor
and
push
lea
jb
bound
mov
or
jecxz
push
dec
add
cmp
es
push
lea
jbe
push
mov
cmp
jge
or
bound
cwtl
in
and
lea
inc
mov
sbb
dec
lods
aaa
les
pop
sub
jns
imul
mov
sbb
imul
mov
or
pop
mov
sbb
imul
mov
insb
out
mov
and
cltd
dec
loopne
test
xchg
pop
inc
dec
icebp
cmp
push
adc
push
ret
loop
mov
push
or
data16
test
imul
ret
test
negb
popa
sbb
repz
ror
xor
cmpsl
adc
cmp
or
loop
ficoml
mov
or
pop
xchg
js
imul
pop
testb
imul
ljmp
add
repnz
xchg
inc
and
stos
jmp
sub
cmpsl
jbe
shlb
sarb
lods
jmp
call
dec
ss
test
or
jns
imul
mov
or
pop
fdivrl
lret
pop
iret
dec
pushf
xchg
dec
leave
dec
mov
lret
decl
cmp
push
enter
mov
addr16
fmull
decb
fisttpl
mov
test
jno
dec
jmp
dec
cmp
or
pop
mov
sbb
imul
mov
or
pop
mov
jbe
into
sub
lods
mov
fs
push
lcall
fldenv
les
in
das
xor
mov
outsl
in
adc
push
hlt
ffreep
or
sbb
push
dec
mov
fwait
sbb
mov
es
adc
js
push
pop
mov
cmpsl
jns
cwtl
or
cli
mov
jp
popf
test
cmp
mov
jno
mov
push
or
sbb
and
popa
bound
out
dec
outsb
xlat
loopne
scas
sbb
ja
pop
pop
add
cld
adc
aam
cs
xor
cmpsb
lods
adc
scas
push
jae
lahf
or
cld
shlb
repz
cmp
jmp
jb
xor
jo
xchg
stc
repnz
aas
in
lea
fwait
loopne
data16
xorb
rol
xchg
inc
jae
mov
int3
lock
shlb
mov
fdivs
sbb
inc
push
cli
lahf
test
outsb
mov
outsb
mov
push
fcoms
imul
adc
sbb
in
je
in
clc
ljmp
dec
int
dec
cmp
cli
ret
lods
mov
in
cs
insb
jge
xor
ret
inc
push
or
scas
cmpsb
test
pop
mov
faddl
push
sub
shlb
pop
xchg
das
xor
sub
jnp
xchg
shl
aam
adc
mov
mov
mov
sahf
or
jl
push
aad
aam
cli
mov
lahf
loop
inc
inc
push
je
inc
daa
xchg
jb
cmp
imul
push
je
dec
lret
cmp
in
inc
inc
mov
inc
adc
dec
xlat
jae
ja
add
jecxz
mov
dec
sub
addr16
outsl
ficoms
and
pop
aam
adc
or
data16
or
enter
outsb
dec
loop
pop
ret
iret
add
addl
mov
in
jecxz
es
or
shrb
in
pop
cmp
pop
cwtl
pop
adc
pop
lahf
cmp
ret
xorb
loopne
mov
xor
dec
out
xlat
outsb
adc
bound
mov
dec
jbe
jp
rol
call
jecxz
into
scas
fistpll
js
mov
scas
into
iret
jmp
push
out
cs
cmp
lods
jnp
xor
mov
mov
mov
mov
cmp
pop
loop
std
xchg
rorl
dec
xchg
mov
xchg
or
sub
stc
dec
fs
pop
in
cld
inc
cmp
xor
out
and
xlat
push
imul
and
mov
cli
mov
add
mov
or
cmc
jg
rcll
popa
cmp
ljmp
mov
gs
adc
in
dec
jecxz
sbb
mov
shl
shll
stc
sti
shlb
test
add
xlat
xchg
sub
or
mov
or
pop
scas
jmp
add
mov
lods
sbbl
mov
push
and
popl
ror
jb
lret
popw
jo
mov
mov
repz
subb
adc
js
push
dec
pushf
pop
ret
sbb
add
dec
lret
pop
aad
mov
sti
xor
ja
stc
xor
es
jmp
adc
icebp
sbb
in
out
cltd
push
inc
mov
ljmp
test
push
lea
fidivs
mov
shl
xchg
or
das
cmp
pop
mov
adc
xchg
bound
into
adc
in
add
mov
fmull
dec
in
sbb
mov
xchg
imul
pusha
lods
push
push
aas
mov
aaa
cs
sbb
js
frstor
mov
sarl
lods
mov
stos
repnz
insb
fstl
das
icebp
stos
mov
lcall
sub
stos
lret
mov
int
insb
and
dec
rcrl
cwtl
mov
out
xor
aas
adcb
jns
push
mov
lcall
das
jp
in
inc
shll
cltd
sub
fcmove
pop
mov
push
xchg
jno
in
jbe
incl
aaa
add
mov
push
arpl
mov
sub
fiaddl
mov
cltd
subl
movsl
paddsb
outsb
push
mov
ret
leave
scas
aas
xchg
out
dec
int
out
aam
and
add
mov
sub
add
into
fiaddl
es
dec
loop
sbb
cmpsl
jecxz
addb
dec
mov
and
lods
mov
or
loope
adc
fistl
ficoms
scas
int
sbb
sub
add
test
cmp
bound
lahf
mov
dec
bound
xchg
and
cli
and
xchg
xor
jno
dec
xchg
and
repnz
jge
jp
cmp
fisttpl
ret
or
out
fwait
test
mov
inc
dec
aad
lcall
inc
mov
push
orb
cmp
cmp
out
inc
or
pop
shll
or
mov
repz
or
push
lds
or
stc
pmaxub
in
aam
mov
sahf
test
negl
ret
xor
xorl
jmp
das
je
aaa
jb
je
inc
xchg
repz
imul
fidivs
cld
inc
jae
dec
add
mov
das
sub
loope
xor
cmp
inc
int3
outsb
sbb
mov
inc
rcl
out
mov
adc
ret
cltd
stc
addl
mov
fisubrs
or
push
movsb
popa
das
and
and
dec
jns
out
push
lods
loop
dec
in
fwait
and
ret
lret
push
lock
aad
sbb
inc
or
cmpsb
dec
aas
jno
fld
inc
xchg
aad
jl
lret
outsb
out
adcl
cmp
leave
jle
or
sbbb
shl
sub
out
std
imul
mov
test
pop
and
dec
jl
vmread
cmpsl
push
pop
add
and
push
mov
ss
rcl
pop
pop
and
ljmp
add
push
lret
dec
nop
test
call
cmp
fistpll
inc
pop
rcrb
ret
loop
cmpsl
sbb
lods
out
scas
xchg
into
aad
mov
cmpsb
xchg
subb
add
add
add
test
mov
push
test
xor
add
adc
ja
das
sti
imul
mov
and
lods
push
aam
inc
cld
lods
mov
lahf
mov
lods
mov
jmp
mov
lcall
cmpsl
orl
push
sarb
jns
add
pop
mov
xchg
scas
xchg
out
add
cmc
sti
arpl
lret
scas
shlb
cltd
push
insb
mov
add
cld
ljmp
pop
add
in
xchg
into
inc
cmp
xchg
enter
sub
stos
jno
insb
inc
shr
insb
cmp
sbb
fidivs
fwait
mov
fxch
push
loop
psadbw
jmp
xchg
jp
notb
mov
pushf
fnsave
sub
lahf
or
cmp
xchg
push
shrl
dec
push
dec
or
xchg
and
jo
mov
push
or
adc
mov
insl
dec
mov
pop
sbbl
pushf
push
mov
movsb
incl
test
data16
ljmp
icebp
or
xor
sarl
mov
push
sub
push
call
sbb
cmc
repz
push
lret
mov
popf
shlb
pop
cmp
or
xchg
lods
xchg
xor
mov
push
dec
bound
daa
xchg
or
xchg
scas
mov
popf
inc
test
in
or
fwait
pop
sbb
dec
aad
inc
mov
ljmp
mov
leave
xor
jb
inc
fiadds
testb
vpmacssdqh
pop
add
mov
ss
xor
pop
mov
mov
test
push
lds
jecxz
stc
insb
enter
shll
rorl
push
cmc
data16
cltd
xchg
lock
aad
lock
xchg
or
popf
in
stos
pop
aam
scas
das
mulb
xchg
push
adc
inc
jl
pop
add
aam
sbb
shll
loope
ss
or
repz
fwait
jp
xchg
push
cmp
jae
and
pop
pop
fmull
ja
icebp
inc
push
or
ljmp
sub
xchg
cmpsb
fwait
mov
jge
movsl
rorl
repz
lret
push
ss
jno
nop
aam
cli
sub
lret
sarw
test
lds
imul
pop
cld
jmp
lcall
mov
pop
pop
cwtl
test
imul
lea
mov
sbb
fdivrs
xchg
sbb
xlat
sbb
negb
xor
dec
mov
mov
jg
shl
mov
insb
adc
mov
arpl
aam
aam
sahf
sub
cmc
adc
lds
mov
xchg
aas
jge
mov
sub
mov
call
lcall
std
xchg
lret
test
call
lcall
sbb
or
adc
sbb
adc
pushf
stos
inc
scas
mov
sub
adc
mov
fists
dec
cmp
fimuls
fnop
in
sahf
jmp
andb
addr16
mov
xor
or
repnz
aad
cmc
pop
div
inc
sub
mov
mov
fs
or
fwait
in
or
pop
in
pop
pusha
and
test
js
test
out
or
or
int
add
sub
mov
add
jae
add
mov
inc
inc
jge
xor
inc
stc
jecxz
jne
insl
lock
pop
jle
cwtl
sub
call
inc
dec
pop
icebp
mov
push
adc
jno
bound
xchg
pusha
lret
pop
jle
cwtl
jl
stos
and
pop
psllq
adc
cmp
jno
and
ds
add
dec
ljmp
pop
jge
out
data16
rorl
inc
xchg
sarb
and
pop
fdivrl
or
sti
lcall
call
cld
or
int3
loope
shrb
lret
scas
push
lea
mov
jns
call
fwait
ds
lea
xor
add
out
mov
sbb
ja
sar
dec
movsl
dec
xor
sub
mov
pop
dec
sti
dec
mov
icebp
lret
mov
xor
das
xchg
daa
and
mov
pop
std
stos
xchg
jbe
sub
fstps
imull
adc
fldl2t
pop
mov
inc
or
sti
adc
incb
enter
jns
call
pop
xchg
adc
mov
or
mov
push
jbe
dec
adc
loopne
push
push
or
push
cwtl
ror
notl
jmp
cs
adc
cld
pop
inc
inc
test
xor
clc
and
push
ret
cltd
popa
xchg
sbb
cmp
into
ret
lods
inc
sbb
mov
movsl
mov
inc
test
cmc
icebp
xlat
xchg
in
and
js
scas
xor
pop
sub
mov
lcall
pop
outsl
add
sbb
xor
xor
stc
lods
test
cmp
cwtl
jne
xchg
adc
dec
daa
aam
jg
inc
push
mov
call
adc
out
and
filds
aaa
push
into
ret
insb
addl
and
punpckhdq
stos
dec
cmp
cmp
inc
or
or
fisttpll
in
int3
inc
jl
pop
inc
sub
movsl
popa
add
repnz
repnz
rorl
lds
lock
rcrl
fsubrs
xchg
xchg
cltd
add
mov
nop
add
push
stos
mov
jo
sbb
test
sub
and
lret
xchg
xorl
push
jne
jp
in
adc
dec
mov
fildl
cmp
lods
fadd
mov
sub
addr16
inc
xchg
pop
mov
and
fcompp
jle
sub
adc
or
xor
hlt
in
stos
addl
inc
lahf
ret
xor
adc
xor
addb
pushf
out
mov
pop
mov
test
call
loopne,pt
dec
push
pop
or
sbb
push
mov
pushf
sbb
xor
test
mov
out
or
pop
mov
mov
in
in
dec
pop
stos
push
push
lea
sbb
adc
pusha
repnz
jno
pop
ret
sbb
cmp
mov
jg
mov
and
xchg
cmp
fidivrl
out
out
and
sub
ficompl
dec
and
xor
insl
sti
xor
mov
aaa
sub
dec
in
dec
ret
mov
in
mov
dec
hlt
cltd
sub
inc
aaa
addr16
mov
pop
sbb
mov
add
js
lret
sbb
sti
add
cli
lret
mov
into
stc
das
insb
arpl
in
repz
or
jl
sbb
cld
sbb
adc
cmpl
aad
dec
shlb
outsb
scas
sbb
sub
adc
add
js
rol
fmul
jno
dec
jg
ds
icebp
addr16
mov
rorl
leave
call
mov
dec
push
jb
jns
test
jae
and
pop
cmp
lods
rolb
jbe
mov
cmc
jmp
ss
dec
mov
in
scas
dec
addr16
dec
xchg
into
scas
out
sbb
dec
jp
jne
dec
rol
xor
enter
in
dec
lcall
jbe
pop
push
loopne
aam
in
jbe
add
repnz
add
and
int3
push
cld
mov
fimuls
ss
or
ds
outsb
cli
je
pop
mov
test
inc
into
fs
mov
out
sub
jnp
pop
xchg
push
repnz
adc
fwait
jo
leave
push
aas
test
cmp
ret
dec
and
sbb
cmp
test
xlat
sub
add
xor
mov
lds
loope
pusha
add
xchg
stos
ret
mov
sub
and
out
sbb
or
sub
cltd
stos
cmp
jno
ja
cltd
add
and
lods
lds
stos
adc
and
jl
insl
inc
add
jo
cmp
mov
pop
xlat
push
push
rolb
push
add
movsl
cmp
test
mov
add
mov
mov
sbb
lret
bound
inc
cmp
and
test
ljmp
jae
testb
jge
xor
icebp
xlat
jne
fdivrl
leave
stos
lret
in
xor
lods
sbb
cld
push
dec
jmp
es
out
cmpsl
pop
out
loop
aas
mov
and
mov
pop
pop
adc
mov
inc
lods
jnp
call
add
lahf
xchg
nop
mov
jb
add
and
repz
in
ss
mov
lcall
add
or
aas
idiv
push
add
mov
cmpsl
inc
push
adc
out
stc
mov
push
or
out
ret
adc
hlt
cmp
jbe
imul
sti
mov
ljmp
mov
fnstenv
inc
in
xchg
stc
dec
push
negb
cmp
mov
outsb
mov
roll
sbb
je
or
fnstcw
lds
cmp
pop
fcomp
or
subl
cld
jns
push
insl
cmpsb
sub
call
mov
insl
cmp
dec
ljmp
outsb
sbb
sub
sbb
clc
js
add
xchg
js
mov
jmp
inc
jno
mov
test
inc
sbbb
es
push
pop
pop
popf
test
repnz
xor
repnz
mov
or
push
lahf
jmp
aaa
ja
mov
inc
out
push
hlt
pushf
and
out
pop
scas
divb
outsl
xor
mov
mov
in
ret
aad
fldl
leave
push
or
and
cwtl
shlb
loope
adc
test
sub
andl
push
pusha
out
fwait
push
mov
push
mov
push
popa
fnstenv
lods
adc
addr16
xchg
flds
pop
ljmp
nop
out
mov
ljmp
and
bound
adc
aaa
push
inc
leave
lods
fbld
xchg
and
and
cmp
xchg
scas
adc
jnp
lcall
push
adc
dec
cmp
cwtl
loopne
inc
cld
je
inc
push
out
sub
or
sarb
inc
adc
jne
dec
mov
shl
push
cs
or
or
cmp
cmp
cmp
mov
lret
jne
push
dec
xchg
pushf
sub
lret
jae
out
sbb
movsb
mov
call
ds
bound
sbb
jecxz
push
in
out
mov
xor
sti
fucomi
loope
mov
imul
rclb
cld
jmp
pop
sbb
movsb
roll
xchg
pop
mov
dec
sbb
jp
pusha
jge
sbb
testl
adc
mov
rolb
nop
xorl
xchg
jmp
data16
pop
dec
and
mov
sahf
cmpsb
out
je
arpl
lea
sub
pop
enter
adc
dec
xchg
jb
and
popa
dec
xlat
cld
jmp
pushf
inc
xchg
roll
aas
mov
or
sbb
sti
mov
aaa
sete
outsb
jbe
inc
mov
shrl
in
adc
jne
sbb
mov
jge
mov
imul
mov
mov
adc
das
push
adcb
test
mov
mov
adc
lods
push
xchg
sbb
mov
xchg
or
aaa
jle
dec
lret
cmp
arpl
mov
push
push
mov
out
sub
jo
faddl
out
aaa
push
pop
cs
mov
cmpsl
mov
xchg
cmp
lcall
pop
mov
popa
xor
dec
pop
pop
gs
xlat
dec
clc
repnz
fdivl
clc
rclb
jp
mov
or
enter
inc
add
mov
sahf
sbb
sub
xor
add
cmp
adc
cmp
cmp
jne
push
lock
pop
in
jae
in
jae
push
cmc
cmpsl
sahf
cmp
dec
and
rcll
imull
mov
in
mov
jns
rclb
mov
out
dec
pop
fldenv
xor
cmpsb
pop
cmp
pop
jmp
jecxz
pusha
dec
cmpsb
dec
sub
fiaddl
stc
mov
mov
inc
inc
cmp
in
xor
add
data16
add
xlat
ror
jo
scas
push
cmp
mov
scas
add
out
stos
jb
add
xor
hlt
sbb
fiadds
aaa
mov
enter
jne
jle
mov
mov
sub
mov
mull
subl
sbb
stc
mov
incb
mov
ja
mov
sbb
push
lcall
in
repnz
call
andl
arpl
mov
cmp
clc
jg
enter
mov
cmpsb
jne
and
std
sti
xor
popa
stos
ss
call
imulb
cmp
adc
and
mov
jno
jnp
add
add
pop
sbbb
dec
rcll
leave
ljmp
aas
js
out
adc
lret
sti
adc
push
cmp
inc
xor
cmp
daa
cmc
sbb
xchg
rcrl
pop
ficoms
mov
xor
popf
or
movsl
out
xchg
outsl
jb
mov
xor
mov
adc
adc
mov
imul
push
cltd
stc
or
pusha
stos
sbb
rcll
andb
push
scas
icebp
cwtl
mov
cmp
jecxz
dec
cmpsb
icebp
jno
sub
adc
add
jo
insb
jne
sbb
or
xor
inc
add
push
inc
sub
aad
xchg
fdivrp
add
mov
cli
insl
inc
nop
sub
jp
pop
test
pop
dec
std
fdivs
popa
sub
jg
xchg
test
sbb
dec
add
add
loop
jg
sub
hlt
out
cmp
pop
xor
push
sub
test
sahf
adc
add
xchg
in
adc
xlat
iret
arpl
leave
or
out
pop
aas
mov
and
sbbl
jg
jo
shlb
xor
dec
adc
sbb
mov
and
inc
mov
and
mov
data16
bound
ds
int
aam
addr16
ds
dec
and
mov
inc
sub
dec
mov
jp
int
add
stos
adc
repz
push
or
xchg
inc
sbb
es
test
icebp
lods
cmp
stos
pop
loopne
adc
jle
scas
cwtl
push
dec
lea
scas
data16
lods
and
pop
or
inc
push
cmpsb
cltd
inc
push
xor
pop
sarb
sub
inc
cmp
bound
mov
rclb
cmc
add
outsb
adc
jnp
hlt
xor
inc
push
icebp
cld
out
into
inc
cmp
subl
pop
test
in
ds
sub
and
imulb
rclb
in
mov
add
and
inc
add
les
cmpsb
sbb
imul
mov
or
pop
mov
sbb
imul
mov
or
pop
mov
sbb
imul
mov
or
pop
mov
sbb
imul
add
jno
push
mov
inc
dec
adc
outsb
jno
and
add
shr
icebp
sahf
test
mov
inc
dec
push
jle
outsb
jno
add
adc
and
pop
faddp
into
sar
jmp
mov
pop
out
xchg
jle
outsb
pop
push
xor
pop
sub
add
shr
xchg
sub
sahf
shl
test
add
add
push
test
xor
dec
add
ja
das
sbb
pop
lret
popf
out
pop
stos
cli
push
inc
lds
loope
push
lcall
dec
sub
popa
xchg
into
jmp
sub
jns
sbb
mov
jo
faddp
lcall
jb
insl
jbe
inc
dec
push
adc
outsb
jno
adc
cs
add
test
popa
xchg
into
sbb
pop
fwait
int
xchg
scas
lods
sahf
pushf
xchg
mov
push
adc
loop
xchg
xchg
add
jmp
test
repnz
cmp
mov
in
fmull
loop
push
xor
aaa
fwait
into
jmp
fistl
adc
push
adc
and
mov
jecxz
int
mov
scas
sbbl
cmp
pop
or
jl
pop
push
sub
fiadds
xchg
xchg
lahf
mov
fst
call
pop
sbb
add
inc
dec
jl
mov
mov
rcrl
fcmovnb
cmp
dec
mov
or
push
adc
and
xor
ror
loope
icebp
sahf
orl
push
jle
outsb
jno
add
adc
and
xor
ror
loope
icebp
sahf
orl
pop
jecxz
inc
lahf
loopne
or
aad
test
jo
sbb
sub
movsl
pop
push
cmp
mov
repnz
inc
push
enter
jl
cmpsb
adc
test
out
js
dec
aad
inc
enter
jmp
mov
faddl
add
fcoms
sub
lret
repz
xor
repnz
les
and
cmp
mov
scas
shll
int3
ds
dec
mov
insl
jmp
sti
test
inc
nop
pusha
test
enter
outsl
in
dec
sbb
jne
mov
popa
ficompl
mov
adc
jmp
jns
mov
arpl
movsl
fs
test
inc
cmp
dec
nop
ja
mov
cs
mov
sbb
nop
mov
jp
and
insb
test
lahf
push
mov
mov
idivb
push
test
jbe
cs
xor
clc
cmp
stos
gs
sbb
pop
lea
stos
sub
push
jl
jl
or
inc
lret
jne
out
or
sub
lahf
mov
js
and
bound
outsl
lea
iret
push
jb
mov
rorl
imul
cld
sub
jmp
push
xchg
or
xor
rep
lcall
push
mov
push
cmp
sub
cmp
mov
push
stos
leave
fmul
dec
inc
ret
in
mov
clc
lds
push
lods
cltd
mov
add
inc
pusha
inc
movb
push
stos
je
insb
sub
dec
ja
add
jmp
movsb
mov
adc
sar
and
add
dec
jb
popl
fdivrs
mov
inc
xor
and
add
enter
sub
fstps
inc
xchg
lcall
xor
jg
stos
pop
push
inc
mov
sbb
pop
repnz
sub
stc
int
inc
push
lods
push
mov
notb
push
xor
jmp
mov
mov
or
ja
fwait
insl
rorb
repz
faddp
pop
pop
mov
sbb
push
mov
pop
mov
dec
aam
aam
mov
xchg
scas
out
insl
xchg
je
rcr
fstp
cmpsl
push
loope
jle
popf
cld
sbb
mov
aad
xchg
jae
add
jge
lahf
popa
clc
insl
cmp
lods
dec
jae
nop
jl
mov
repnz
femms
sbb
enter
ja
push
or
dec
lret
inc
dec
outsb
cltd
data16
sbb
insb
sti
fs
stos
lds
cmp
pop
or
or
push
out
push
xor
mov
lret
mov
jno
int
popa
daa
lds
sub
les
in
add
rcl
add
xchg
push
jg
inc
sub
sub
xor
outsb
das
lods
movsl
cmp
and
repz
pop
cmovno
jecxz
js
shrb
add
outsl
push
dec
pop
mov
xor
shll
mov
mov
ret
mov
jno
mov
lahf
cmp
repnz
gs
arpl
dec
inc
sub
add
cmc
fimuls
or
data16
push
out
sub
push
lret
pop
mov
push
adc
jmp
mov
xchg
add
xchg
sbb
cld
popf
push
add
sbb
into
xchg
push
mov
or
lds
in
pop
dec
lcall
dec
sub
push
or
shrb
dec
into
mov
pop
jmp
insb
popa
xchg
xor
loop
repz
xor
cmp
sahf
sub
add
dec
cmp
jbe
or
or
adc
inc
out
sub
push
jnp
pop
add
jmp
test
add
xor
lods
push
cwtl
mov
nop
pop
push
mov
addr16
sahf
mov
push
stc
loope
push
jns
mov
mov
inc
das
xor
popa
fsubrl
xchg
hlt
pop
out
jbe
loop
shrl
pop
jbe
xor
mov
jle
in
andl
sbb
movsl
pop
dec
push
mov
mov
dec
mov
push
inc
push
cmp
scas
fwait
mov
or
jecxz
push
fnstsw
dec
xchg
fwait
negl
xchg
mov
insb
xor
and
xchg
and
in
dec
xchg
lds
xchg
stos
sbb
insb
out
in
mov
fiadds
pop
jg
outsb
enter
mov
int
popf
mov
stos
push
pusha
dec
adcb
jge
pop
adc
sti
add
orb
or
out
xchg
mov
fdivp
mov
pop
int
ret
push
mov
dec
mov
andl
out
outsl
scas
mov
dec
insb
out
adc
xchg
xor
pushf
mov
sbb
stos
daa
mov
lahf
jo
lods
jns
dec
jno
int
es
aaa
inc
mov
jb
adc
pop
xor
pop
insb
xor
mov
xor
mov
idivl
test
cmp
add
sub
std
retw
or
sbb
jb
fs
mov
and
cmpsb
scas
int3
push
push
mov
sti
popf
mov
dec
dec
je
jmp
add
xor
jmp
mov
adc
imul
inc
push
xlat
mov
fcmove
add
sbb
pushl
adc
seta
push
cs
xchg
pop
popa
cwtl
push
mov
stos
cmpsb
inc
mov
jmp
lods
ret
lret
je
out
adc
inc
test
stc
ret
fstpl
sub
jne
clc
stos
inc
pusha
pop
inc
movsl
leave
cmpsl
ds
hlt
xor
popa
xchg
dec
bound
mov
pop
pop
push
sub
loop
mov
out
cmpsb
sti
pop
outsb
add
fcomp
dec
fstps
nop
mov
leave
mov
push
add
scas
daa
sbb
rcr
adc
dec
test
ret
dec
out
mov
mov
push
call
pushl
mov
cmp
jg
inc
aam
mov
jp
cmpb
jl
repz
cmpsb
xlat
lea
ja
pop
fistpll
ret
test
leave
inc
pop
xchg
or
les
inc
pop
lret
aas
sub
mov
sub
jne
int3
jo
xchg
ret
jb
pop
pop
jb
xor
lods
mov
adc
lret
mov
jno
stc
mov
sti
movsl
mov
xchg
popf
pop
addr16
xor
movsl
icebp
dec
jl
ficoml
std
fwait
insb
xchg
mov
ret
jmp
fadd
ss
into
inc
lcall
in
or
cmp
stc
sub
add
fdivrs
xchg
movb
stos
xchg
mov
dec
lcall
adc
mov
cmp
cmpsb
notl
push
fwait
clc
insw
xor
adc
lret
insb
jmp
repz
lret
jae
cmp
add
jp
enter
subl
push
mov
int3
ffree
mov
rcrl
std
pmaddwd
shll
test
das
movsb
push
and
addr16
mov
popa
int3
call
xchg
jno
mov
adc
inc
loope
jecxz
stos
loop
xchg
push
and
notb
mov
outsb
test
lcall
movsb
es
push
mov
sub
jecxz
mov
out
cmp
adc
stos
mov
dec
sub
xchg
sti
adc
shll
std
adc
ss
sub
jne
mov
dec
push
cmpsl
rorb
andl
mov
push
mov
mov
movsl
pop
mov
xor
scas
or
popl
cmp
in
pop
testb
adc
mov
sbb
mov
aad
mov
jge
pop
mov
or
cmp
push
mov
pop
xchg
mov
repnz
dec
inc
movsl
cmp
test
repnz
or
int
cvtps2pi
repnz
sub
lock
popa
and
loopne
repz
adc
and
jmp
mov
push
shrl
stos
es
popa
fisttpl
sbb
sbb
imul
cmp
into
or
fwait
mov
adc
sarl
push
into
pop
pusha
mov
fcoml
fdecstp
jne
add
lahf
in
xchg
mov
cmpsl
je
dec
insl
fsubr
sub
ds
mov
pop
aas
rcr
or
mov
sbb
dec
in
insb
clc
jbe
push
mov
cmpsb
cmp
aam
popf
push
cltd
lods
pop
sbbb
mov
ja
lods
pop
lods
dec
inc
xor
jb
clc
jle
aam
push
popf
mov
push
iret
jb
repnz
fs
lock
cli
nop
pop
movl
lods
sub
mov
inc
stos
outsb
cmpsl
push
xor
mov
cmp
in
test
call
movsb
xor
sarb
popa
push
pop
sbb
mov
cmp
jle
and
mov
data16
inc
je
stos
sbb
mov
dec
in
inc
jne
sbb
scas
imul
xor
xor
xorb
xor
in
repnz
inc
pushw
mov
or
leave
jmp
inc
or
jne
pop
imull
mov
xlat
adc
or
mov
out
xor
rorb
div
push
push
push
dec
mov
es
pop
sbb
icebp
sub
movsb
push
xchg
jns
scas
xchg
adc
dec
aad
hlt
repnz
and
mov
in
fmul
iret
aas
adc
push
inc
xchg
sub
cmp
push
pop
mov
sbb
out
cwtl
out
in
inc
dec
mov
dec
and
push
movsl
push
inc
daa
rorl
mov
cmp
ret
in
cli
xchg
sbb
loop
orb
sub
in
loopne
nop
fadds
xor
adc
xchg
insb
lcall
cmp
data16
shll
outsl
and
cmpb
data16
or
in
add
and
fadd
cmp
add
js
inc
pop
pop
push
loope
fdivs
je
aas
scas
and
inc
mov
inc
mov
sub
adc
inc
andb
ja
adc
nop
icebp
insl
or
call
fbld
add
sub
inc
push
or
js
loop
mov
pop
clc
fstps
movsl
push
stos
mov
push
sbb
lahf
push
mov
das
cmp
std
rcl
adc
jb
inc
mov
call
leave
fisttps
xor
sbb
cmp
jmp
push
mov
sub
cmc
jg
sarl
outsl
pop
ja
xor
cmpl
and
push
aaa
aam
sub
jp
popf
or
mov
popf
in
repnz
shll
insl
aas
inc
out
test
adc
xchg
ss
cwtl
icebp
lret
jo
push
cli
and
mov
xor
outsl
dec
sarl
xor
shld
xchg
push
leave
pop
aas
xchg
sub
scas
mov
mov
cltd
ret
mov
sbb
jae
jp
incl
adc
leave
sbb
push
mov
out
sbb
out
inc
push
fcoml
and
mov
pop
and
scas
in
xchg
mov
push
mov
pop
mov
xor
test
cltd
push
shlb
or
sbb
lret
repnz
dec
or
inc
xchg
jbe
fistps
hlt
int3
movsl
xchg
scas
push
push
push
push
inc
add
mov
data16
push
enter
sub
adc
cmp
mov
loope
cli
outsl
adc
jl
loope
cmpsb
subl
dec
lret
fcmovnbe
fistpll
int3
out
jecxz
sub
sbb
shr
lods
repnz
test
call
imul
pop
sub
dec
xchg
mov
jp
dec
or
push
shlb
ror
jns
pop
add
cltd
and
scas
inc
pop
in
or
mov
dec
mov
mov
pop
outsl
dec
cmp
les
leave
xor
sub
loop
and
repnz
mov
sbb
outsl
adc
jle
dec
sbb
les
nop
push
pop
jnp
int
push
push
mov
cld
xchg
out
mov
mov
fcoms
fmull
fbld
jle
in
js
jbe
sub
mov
mov
add
jbe
sarb
lods
jnp
aam
in
pusha
push
inc
xchg
pop
mov
es
jecxz
mov
add
mov
inc
mov
pop
push
pop
pusha
fisubl
xchg
dec
ss
or
mov
loop
add
jge
clc
scas
popf
aad
imul
cmp
ret
out
outsb
lea
jmp
lods
arpl
lea
adc
jecxz
push
add
std
inc
push
push
mov
or
pop
dec
js
mov
push
xchg
enter
xchg
ret
jbe
mov
fwait
mov
mov
and
and
mov
int3
sar
or
add
pop
pop
mov
sbb
mov
xchg
jo
adc
cmp
adc
jl
pop
out
ds
mov
arpl
icebp
insb
or
and
xchg
in
mov
dec
inc
push
jp
sysret
sub
pop
mov
push
mov
pushfw
nop
test
mov
adc
es
aam
sbb
addr16
pop
js
imul
sahf
xchg
je
inc
fstps
pop
mov
outsl
shll
dec
notb
fldl
loop
out
ljmp
mov
mov
sbbl
insb
fs
sbbb
jge
add
ss
and
and
jns
test
or
or
jecxz
ja
dec
jne
ss
outsl
fs
sbb
adc
js
and
je
lcall
adc
out
movsw
fcmovnb
xlat
rclb
dec
mov
inc
ret
movsl
imul
sub
fldcw
or
push
bound
shll
jo
pop
imul
add
aam
xor
outsb
repnz
cmc
test
movsb
leave
into
fwait
ror
inc
pop
sub
std
mov
dec
add
es
call
stc
dec
adc
dec
popf
or
cmp
jnp
dec
mov
shlb
int
imul
pop
and
das
lods
test
cmp
cltd
cmp
call
out
es
shrb
add
pushf
xchg
jae
mov
nop
jmp
ret
push
mov
lds
aam
sub
cmp
add
and
stos
icebp
in
jbe
shrl
test
push
mov
sub
sbb
pop
ficoml
mov
and
and
cmp
jmp
fs
sub
out
imull
pop
push
loope
in
movsb
rol
xor
add
out
adc
inc
mov
test
pop
xchg
dec
mov
ret
test
ss
xor
push
out
arpl
cld
addr16
popf
xchg
loop
mov
adc
fisttps
mov
xchg
cmc
xchg
test
js
cmc
sti
sub
icebp
out
cmpsl
and
mov
into
gs
xchg
sub
sbb
loopne
imul
xchg
inc
fidivs
das
push
jp,pn
loope
aam
and
mov
push
sbb
fs
stc
int
insb
cmp
aam
fisttps
test
js
pop
push
mov
push
inc
xorl
sub
or
mov
push
inc
mov
push
mov
xchg
pop
and
cmp
push
lods
jl
fs
enter
xlat
pop
hlt
movsb
ret
mov
lret
aaa
test
mov
mov
aas
gs
or
add
pop
icebp
aad
cmp
xchg
icebp
arpl
pop
mov
or
arpl
mov
stos
inc
cmpsl
dec
stos
loopne
xchg
loope
mov
jne
lock
cmp
inc
xchg
xchg
dec
movsl
cmpsl
mov
fcoms
lea
mov
ror
flds
imul
arpl
aam
sub
mov
sub
lock
fidivrs
imul
pop
push
daa
pop
push
add
xchg
fsubs
push
jmp
cmp
push
xor
mov
outsb
aaa
imul
call
jno
cwtl
lcall
fstps
enter
loop
push
adc
jg
lret
xchg
mulb
jle
loopne
sbb
cmpsl
andb
xor
jae
insl
cmpsl
add
mov
cmpl
cltd
jge
jle
cmp
jl
cmc
push
js
xlat
mov
fs
or
pop
aaa
dec
notb
inc
mov
add
push
je
xchg
fsts
hlt
icebp
test
adc
mov
je
xor
add
and
lds
dec
sub
mov
rcrl
shll
insb
xor
ljmp
sarb
add
les
mov
sub
sub
jle
add
xchg
inc
and
mov
mov
test
decl
rcll
pushf
pop
jg
or
dec
push
movsl
cmp
jecxz
in
cltd
and
jae
push
jo
push
mov
mov
cmp
pop
lock
out
mov
ret
cmp
mov
jo
add
push
jae
add
roll
shr
jmp
jmp
mov
pop
mov
add
and
ljmp
pop
inc
frstor
icebp
xlat
fdivl
shrb
lods
pop
jb
in
loop
rcll
xchg
xchg
sbb
push
out
out
movsb
jbe
into
add
into
mov
mov
pop
jb
lods
stc
cmp
popa
outsb
insb
pop
nop
xchg
cmp
xor
insl
sbb
addr16
out
add
les
sub
push
sarl
test
mov
jle
cs
je
sbbl
jle
loope
mov
in
push
or
mov
das
adc
fidivs
cmp
fnstenv
push
int
pop
loope
adc
mov
push
lret
jno
pop
xchg
popa
out
push
lret
and
and
clc
cmpsb
movb
lods
jle
pop
movl
mov
pusha
dec
sbb
pop
inc
lcall
leave
push
out
or
push
mov
loopne
add
xchg
adc
sbb
mov
xchg
ficoml
shlb
rclb
mov
push
ret
xchg
push
pop
add
je
aaa
dec
loopne
mov
mov
test
loope
fistl
jae
shlb
popa
push
pop
xchg
add
cmp
pusha
pusha
push
cmp
adc
push
dec
add
sbb
mov
mov
pop
popf
xor
in
adc
xor
xchg
ljmp
mov
icebp
imul
fcmovnu
or
les
ss
lods
jge
push
xchg
subb
out
aad
xchg
mov
and
mov
iret
les
aad
sub
repz
negl
sub
xchg
aad
adc
mov
fbstp
out
outsb
je
cmp
sub
imul
add
mov
rol
les
lret
or
mov
pop
jnp
mov
and
scas
xchg
sti
sbb
xor
or
adc
popa
or
xor
test
sbb
insl
mov
int
push
rorl
mov
fdecstp
movsb
outsb
push
xchg
ss
push
loop
adcl
adc
jnp
add
mov
or
sbb
outsl
out
loopw
loope
inc
cmc
fcoms
subb
out
repnz
cmpsb
jp
jmp
jbe
loope
push
dec
adc
adc
lock
mov
and
movsl
jae
and
push
mov
cmp
das
fistpl
sbb
jo
std
mov
mov
add
mov
mov
aad
xchg
shll
xor
popf
xchg
aad
loope
movsb
ljmp
fistpl
mov
xchg
sub
paddsw
in
rcll
aas
xor
pushf
sbb
jecxz
lods
push
push
loop
in
divl
sti
cmc
cmp
data16
dec
movsl
cli
ret
fwait
mov
mov
bound
test
scas
popf
mov
aaa
mov
sub
lret
and
ljmp
popf
inc
push
sub
push
push
daa
js
pop
repnz
cld
loop
inc
dec
sub
and
mov
xchg
ss
pop
mov
lods
shrb
inc
jae
js
push
movsl
stc
ja
push
dec
shll
mov
pop
or
or
fiaddl
and
xchg
sbb
mov
or
jge
cmp
and
xor
gs
mov
jecxz
das
xor
xchg
and
xchg
mov
sbb
pop
cltd
xor
ret
lcall
fnsave
inc
fisttpll
push
adcl
pop
cwtl
inc
pushf
aad
push
test
arpl
mov
fs
or
dec
imul
dec
cmp
cmp
std
mov
push
xor
push
xor
repz
jg
outsb
jno
add
adc
and
xor
ror
loope
icebp
sahf
orl
push
jle
outsb
jno
add
adc
and
xor
ror
loope
icebp
sahf
orl
pop
jns
jne
add
jp
and
into
aad
loope
clc
sahf
test
push
pop
movsl
dec
mov
test
push
add
adc
mov
into
jnp
loope
xchg
stc
jmp
inc
pusha
push
popa
mov
arpl
lea
xor
loope
icebp
das
sbbl
outsl
and
mov
adc
pushl
fwait
rcrl
das
cmpb
das
shll
dec
mov
or
test
repz
adc
mull
pusha
xchg
pop
ljmp
outsl
das
lahf
sbb
cli
add
jecxz
aaa
xchg
mov
std
jl
les
mov
lods
adc
sahf
loope
hlt
adc
ficoms
lods
aaa
cmp
aas
jle
int
mov
sahf
adc
adc
addr16
pop
add
rorl
xchg
jg
dec
imul
popf
pop
fists
cmpsl
fiadds
adc
loopne
pop
or
sarl
xchg
mov
xchg
mov
mov
in
in
sub
sti
cltd
mov
dec
push
pop
loope
mov
les
dec
pop
outsb
mov
xor
xchg
cwtl
clc
dec
fidivrs
aad
push
pop
ret
jg
jmp
lahf
pop
jg
cmp
in
imul
pop
cltd
dec
leave
xchg
das
shll
fwait
mov
jg
add
int
adc
stos
jg
push
xchg
xor
test
inc
repz
cmp
ds
or
xor
adc
adc
aam
andl
mov
paddd
enter
sub
out
and
push
mov
xor
rcrl
psraw
icebp
das
sbbl
outsl
inc
lahf
push
popa
mov
adc
and
xor
rcrl
psraw
icebp
das
sbbl
outsl
inc
lahf
negl
sbb
or
stc
in
dec
mov
and
pop
fiaddl
js
pop
bound
sub
sub
jbe
mov
add
push
fwait
push
int
cmp
inc
lea
adc
ss
sub
out
push
and
faddl
pop
outsb
mov
subb
jl
mov
cmp
mov
push
js
movsb
push
lcall
test
fwait
cmpsl
sahf
add
out
mov
inc
addb
lock
hlt
jmp
mov
movsl
fsubrp
adc
sahf
call
mov
lods
mov
sahf
xchg
das
pusha
adc
mov
stos
orb
adc
scas
adc
or
inc
mov
xlat
fdivl
ljmp
ja
testb
cmpsl
jbe
enter
jle
stc
push
dec
adc
jle
xchg
stos
dec
out
push
xor
adcl
or
js
dec
enter
std
xor
jle
xorb
pop
cmp
xor
aad
test
push
cmpsb
cmp
loopne
rcrl
shll
orb
lcall
adc
outsl
and
lds
fwait
pusha
cld
scas
and
cmpsl
inc
addl
subl
lret
pop
ja
sub
sahf
imul
call
sub
xchg
add
push
subb
cmp
test
jecxz
sti
lds
cltd
ja
stos
test
jo
decl
bt
sub
jb
adc
jnp
sbb
pop
lcall
sahf
test
adc
push
jge
mov
sub
in
push
cmp
sti
xchg
icebp
fwait
sarb
xchg
xor
sbb
xchg
xchg
push
sbb
sarb
cmc
add
xchg
or
lods
daa
jge
icebp
fstcw
jmp
js
outsb
inc
movsl
cwtl
rcrb
push
aam
subb
xchg
sbbl
mov
les
cwtl
mov
pusha
dec
movsl
rcl
iret
lods
mov
xchg
lret
call
andl
scas
arpl
dec
lcall
das
mov
mov
fcmovnbe
fadds
iret
sbb
and
cli
test
ret
cmpsl
and
sub
aad
mov
call
pop
fwait
stos
out
notl
adc
lret
ss
mov
mov
int3
sub
ret
inc
jbe
xlat
sub
sub
adc
sub
and
inc
das
into
xor
daa
in
lret
jb
outsl
xor
je
in
xchg
lea
test
cmp
das
jecxz
push
mov
js
xchg
add
add
xor
dec
stos
in
mov
xchg
out
fnsave
and
dec
xor
mov
jge
jns
shl
cli
fs
jp
pop
and
or
xlat
add
adc
stc
fyl2x
pop
sarb
stos
out
add
std
xor
fisttpll
loop
mov
icebp
sub
call
inc
addr16
inc
daa
aaa
inc
movsb
mov
push
in
inc
mov
repnz
and
call
mov
popf
in
mov
sub
sub
mov
push
dec
stc
in
xchg
shll
cmp
jae
cmp
dec
arpl
call
out
sarb
adc
sbb
sahf
xchg
sub
mov
xchg
sub
xchg
in
mov
int
xchg
outsb
mov
aas
test
pop
push
dec
sub
sahf
lock
pop
sub
popf
and
adc
ds
sbb
popa
push
xor
xchg
cltd
ja
dec
mov
mov
sub
cmp
int3
dec
cmpsl
push
cmp
sbb
aad
pop
les
push
inc
xchg
adc
ds
testb
and
mov
das
xor
push
pushf
call
mov
stc
jecxz
cld
lods
leave
fsub
dec
out
aas
mov
push
jb
adc
int
repnz
sub
add
dec
fisttpll
into
scas
insb
rorl
jae
add
and
mov
iret
int
flds
cs
ret
mov
ret
gs
nop
clc
dec
bnd
dec
rcl
push
daa
dec
adc
cmp
dec
out
sbb
mov
sub
dec
push
and
jns
pop
xor
mov
jecxz
enter
xchg
mov
add
bound
cwtl
dec
mov
xchg
lret
out
mov
outsl
subl
xor
rcl
or
push
sbb
mov
push
adc
loop
nop
loopne
mov
and
shl
dec
sub
cmp
sbb
push
aad
testb
inc
daa
mov
sahf
sarl
lret
jl
jmp
dec
addr16
jmp
arpl
adc
push
mov
adc
gs
jecxz
mov
ds
add
mov
jb
push
mov
hlt
rolb
xchg
mov
ret
lock
aam
imul
inc
push
jl
and
mov
call
fwait
popf
sbb
fidivrl
mov
sbb
xor
subb
or
lahf
mov
jge
and
xor
fdivrs
add
std
xor
aaa
jnp
cmp
neg
das
loopne
cmp
pop
outsl
cmp
jl
sbb
outsb
push
cmp
xchg
inc
push
inc
movsl
sub
pop
push
pop
dec
cli
mov
jmp
testb
out
and
lcall
scas
sbb
push
mov
push
jecxz
in
ja
jl
ljmp
add
movsl
mov
js
mov
xor
cwtl
gs
push
into
cmp
dec
mov
repz
lods
adc
sbb
dec
imul
cli
push
into
xlat
cmp
repz
pop
push
jge
out
push
lret
shrb
out
fimull
mov
loop
jge
pop
insl
lret
pop
aas
maskmovq
mull
div
dec
adc
adc
jmp
lods
nop
sub
mov
insl
jno
mov
lahf
in
add
inc
ret
push
ss
push
add
loop
mov
mov
aam
add
xchg
sbb
sbb
jecxz
xor
lds
inc
mov
or
adc
add
dec
lret
cmpsb
xor
mov
in
fimull
cld
sub
pop
outsb
loopne
add
sub
bnd
orl
into
je
inc
lock
mov
aaa
add
fnstenv
sahf
jle
cwtl
int3
mov
in
fmulp
cli
inc
aaa
or
jbe
jo
cmc
lods
or
push
pop
xchg
mov
and
mov
lods
mov
into
int3
cs
lods
mov
sarl
mov
xchg
cmpsl
mov
or
jnp
xor
cwtl
icebp
aaa
cltd
mov
outsl
mov
sbb
xor
in
ja
jg
sbbb
xchg
gs
ss
aaa
stos
addr16
not
or
push
stos
dec
iret
jmp
out
mov
mov
mov
repz
xor
out
ja
pop
sbb
lret
das
jle
das
jbe
xchg
xchg
mov
or
aas
dec
inc
push
adc
imul
aaa
lret
daa
inc
popa
push
xchg
xor
mov
mov
fwait
mov
jmp
fwait
mov
jmp
sbb
mov
cs
mov
cld
pop
sub
adc
pop
jb
jecxz
test
dec
xchg
push
lahf
mov
cmp
mov
loop
rorl
push
jmp
testl
aam
xchg
cmc
xchg
outsb
dec
or
add
int3
fs
fdivl
mov
xchg
mov
adc
cmpb
popf
stc
mov
mov
icebp
add
mov
sbb
fsubp
sub
testl
pop
mov
mov
aaa
call
mull
push
cmpsb
stc
push
fldenv
daa
sbb
add
sbb
insl
mov
and
loopne
mov
push
jae
movsb
ret
push
aad
or
pop
es
mov
ret
cmpsl
add
call
pop
push
pop
jg
imul
and
or
les
mov
mov
stos
addr16
ret
lahf
inc
jno
push
inc
repz
pop
movb
fcomp
es
xor
xor
loop
shrb
ret
dec
je
test
mov
fsubl
jmp
mov
ja
pop
in
mov
sub
aas
test
dec
or
je
pop
or
push
mov
jmp
push
addr16
mov
fs
jg
loope
stc
mov
push
cmp
adc
in
xchg
fisubrs
les
xor
pop
push
fs
jne
mov
sub
stc
iret
cs
xrstor
push
flds
fwait
and
sub
mov
jnp
push
int
pop
adc
rcrl
testl
test
mov
inc
push
xor
loopne
xchg
pop
mov
hlt
dec
and
inc
bnd
and
sbb
jp
in
int
ds
sub
jbe
pop
pop
icebp
call
pop
lds
cmp
mov
inc
mov
xor
mov
mov
push
add
push
sub
test
push
int3
rcll
gs
dec
xchg
jnp
leave
aad
pop
fwait
scas
xchg
sub
add
pop
mov
popfw
dec
adc
lcall
cmp
jne
iret
xchg
dec
fucom
push
ds
ljmp
jle
loope
das
and
cmp
push
sub
xor
mov
idivl
idivb
push
js
lods
loope
inc
adc
loopne
jb
data16
les
enter
lret
popa
test
pop
fsubr
adc
add
jl
fists
lret
xchg
push
pop
bound
nop
int
add
popf
mov
push
sbb
outsl
sbb
movsl
cwtl
mov
lahf
and
sbb
mov
pop
mov
inc
iret
dec
jo
out
callw
imul
ljmp
ret
test
sbb
inc
lcall
pop
out
add
sqrtps
jbe
sub
dec
aaa
movsb
mov
repz
std
mov
push
mov
adc
cltd
ds
and
scas
pop
add
fcmovbe
rcrb
frstor
mov
cmpsb
pop
or
lcall
lret
dec
push
jb
ffreep
out
call
aad
jno
xchg
inc
lea
les
stos
inc
adc
fisttpll
mov
stos
lcall
fcomi
call
mov
out
ljmp
out
and
inc
out
dec
ja
scas
cmp
pop
shr
aaa
je
movsb
repz
fldcw
bound
gs
dec
adc
ffree
daa
mov
mov
call
ficomps
bound
test
loop
es
repz
ret
sbb
inc
nop
add
pop
mov
ret
scas
cli
arpl
dec
lods
clc
lds
leave
into
push
jp
push
cmpsl
lahf
test
pop
test
lahf
add
cmp
arpl
fmul
arpl
pop
jns
jbe
xchg
test
jecxz
jg
gs
inc
or
lea
das
cmp
sarl
pop
ss
add
mov
xor
js
fdivr
ds
fistl
fstps
sbb
insb
cmp
test
test
lcall
clc
mov
push
cmp
sub
add
push
and
int
sbb
or
ret
fwait
andl
pop
inc
push
push
scas
inc
fsub
mov
stc
data16
xchg
pop
call
sbb
mov
in
cmp
xchg
dec
arpl
out
sbb
push
mov
dec
imul
xchg
movsl
outsl
fidivrl
shlb
push
movsb
mov
insb
lea
popa
dec
xor
js,pn
dec
jnp
mov
cmp
sub
aad
test
or
push
push
leave
sarl
nop
sti
lret
sub
and
cltd
mov
gs
fists
insl
and
in
or
inc
xchg
inc
jnp
ljmp
mov
cmc
mov
ss
mov
push
data16
mov
nop
sarb
js
xchg
add
popf
sti
cld
mov
dec
fisubl
cmp
pop
push
sub
roll
adc
dec
mov
ss
iret
xchg
xchg
call
pop
mov
pop
jae
sub
pushf
stc
jae
sub
sub
dec
dec
dec
jns
mov
sti
mov
cmp
xchg
ja
in
and
push
aad
mov
mov
add
push
mov
mov
add
arpl
aaa
sahf
xchg
call
pop
inc
data16
incl
sub
test
mov
mov
mov
call
pop
and
cmp
mov
movsl
mov
mov
loop
bound
dec
cmp
ja
je
and
jge
mov
adc
aas
ds
movsw
adc
push
mov
cmp
inc
mov
fstl
insl
add
dec
mov
mov
scas
shlb
xlat
add
jp
imul
mov
int3
cmpl
or
rorl
data16
mov
daa
call
xchg
sbb
outsb
mov
xchg
adc
insb
pusha
pop
imul
adc
mov
fisubrs
sbb
sar
xor
imulb
movsb
sti
sbb
jecxz
pop
mov
mov
cld
imul
xchg
cmpsb
or
inc
jnp
into
sbb
jge
rorl
lcall
pop
or
mov
cmp
mov
sbb
xor
or
out
mov
and
or
stos
pop
xlat
imulb
lds
or
popa
je
clc
jmp
shl
scas
and
lods
adc
push
sub
cmc
in
into
push
dec
shr
ljmp
jl
repnz
push
inc
sub
push
fstps
addr16
or
loop
and
and
outsb
xchg
cs
push
jae
subl
cmp
dec
push
mov
fcoms
xor
pop
xchg
sbb
lock
mov
and
fwait
data16
push
push
imul
dec
enter
sub
call
scas
adc
pop
inc
sbb
test
push
cmp
inc
xorb
mov
jp
test
pop
push
pop
push
inc
push
sub
adc
push
out
inc
push
ss
cmpsl
fmull
mov
stos
inc
scas
sbb
mov
cmpsl
gs
cli
pop
add
or
push
movsb
jecxz
cwtl
jge
cmp
push
or
dec
cld
xor
hlt
lret
dec
fsub
cmp
int
and
xchg
cmp
mov
add
mov
hlt
ficomps
or
fldcw
negl
sub
pop
mov
adc
cli
jnp
testb
cli
shll
xchg
cs
mov
and
xor
inc
scas
jmp
jnp
gs
push
ja
pop
xchg
push
or
xor
sysret
stos
pop
jno
cld
mov
lods
lcall
xor
add
mov
push
aam
sbb
js
inc
setae
pushf
iret
pop
pop
pop
icebp
xor
mov
pop
xlat
mov
pop
pshufw
add
mov
pop
mov
cs
imul
sub
rolb
mov
pop
sti
mov
enter
ret
dec
mov
sbb
mov
and
jge
inc
enter
cmpsb
jnp
adc
mov
add
cmp
cmc
cmp
xchg
fstl
stos
popf
push
mov
pushf
into
dec
xchg
fiaddl
mov
fsts
xchg
sub
and
mulb
push
mov
dec
jp
ror
movsl
popf
adc
dec
cmp
je
jle
popa
iret
sbb
clc
lahf
xchg
sub
mov
cmpsl
cltd
dec
dec
mov
mov
ljmp
hlt
or
out
xchg
xor
into
rorl
out
data16
jbe
adc
mov
sub
adc
and
lahf
lock
mov
js
je
or
pop
and
fldt
and
test
std
in
test
cmp
pop
stos
xor
xchg
adc
mov
pop
mov
mov
aaa
push
fisubs
xor
pop
push
jg
jns
stos
and
sub
sbb
lcall
roll
test
cs
cld
xor
sbb
xchg
dec
and
pop
mov
fstpl
and
std
sub
lds
xchg
xchg
push
test
je
iret
int3
cld
fstpl
sbb
or
jg,pt
mov
inc
test
cwtl
cli
jb
lds
and
sbb
push
xor
sbb
addr16
in
ret
push
inc
dec
arpl
cmp
xor
mov
dec
fcompl
inc
push
insb
push
add
lods
pop
mov
imul
push
sbb
bound
cmp
cmpsb
mov
imul
mov
inc
cmc
cs
into
and
in
mov
test
shlb
sbb
imul
jp
mov
sbb
in
shll
sbb
push
lret
ja
clc
fldln2
cli
sub
pop
cmp
decb
sbb
aaa
pop
cld
mov
xor
mov
dec
cmp
lock
outsl
movsb
sub
dec
inc
loopne
and
icebp
pop
filds
cmpsl
repz
dec
mov
mov
lods
xor
cmp
addl
xchg
push
sub
lods
xchg
mov
or
cmpb
push
out
insb
enter
cmp
cmpsb
add
insb
sbb
pop
faddl
js
in
pushf
lcall
mov
fstpt
clc
fwait
cmp
nop
icebp
mov
mov
mov
ficomps
insl
cmp
inc
addl
loopne
inc
xor
and
push
jb
shr
cwtl
add
fcmovb
leave
adc
jp
mov
notl
mov
or
push
mov
popa
in
mov
and
xchg
stos
adc
push
lods
xchg
sbb
scas
clc
jmp
adc
fcomip
mov
pop
push
mov
daa
cmp
rol
arpl
mov
popa
jmp
ret
or
call
lea
mov
lcall
and
test
popa
mov
mov
cmpl
cmpsb
repnz
xor
adc
or
sub
icebp
ss
clc
outsl
mov
rcll
mov
mov
sbb
or
mov
pop
cmp
sub
or
jmp
push
test
aas
mov
popf
lahf
add
dec
fisttpll
ret
arpl
faddl
add
test
loop
dec
sbb
cmpsl
test
sbb
jns
push
xor
push
repnz
insb
icebp
ljmp
sahf
xlat
jae
mov
ja
add
cs
push
xor
fwait
rorl
mov
icebp
ja
cli
mov
dec
cwtl
stc
aad
imul
xlat
stos
cltd
push
dec
jne
dec
das
loope
movsl
mov
push
imul
jecxz
add
push
add
lock
jp
jle
ss
sub
xchg
sahf
scas
jne
push
cwtl
mov
bound
loope
movsb
xchg
mov
sub
add
push
pop
adc
xchg
jo
cs
cmp
add
shl
out
dec
movsl
fcmovne
lods
xor
test
daa
push
imul
lcall
cmp
aad
adc
add
daa
aam
pop
addl
and
pop
int3
bound
cmp
pop
mov
stos
aad
imul
imul
shlb
push
stos
cmp
xor
dec
aad
add
js
or
pop
shlb
loope
add
arpl
xchg
rcrb
in
push
in
gs
test
sbb
mov
sbb
mov
xchg
out
addr16
pop
xchg
movsl
fwait
adc
cmp
sbb
jno
lock
out
test
lods
daa
lcall
inc
dec
jp
pop
int3
insb
fadd
add
std
dec
bound
mov
outsb
inc
cmp
movsl
loopne
push
pop
fdivl
jle
lcall
pop
cmp
pop
aad
sub
stc
fabs
in
adc
std
lods
shr
pop
out
lret
mov
repnz
test
movsl
pop
push
cs
test
pusha
movups
pop
xor
mov
sbb
jb
insl
jbe
and
icebp
adc
jg
adc
inc
pop
xchg
pop
loope
mov
outsl
add
push
xor
sub
lock
test
stos
idivl
mov
stc
in
shlb
shr
jns
mov
cwtl
jmp
inc
mov
sub
adc
movl
cmp
mov
es
loope
xchg
dec
sub
lock
stos
pop
inc
shlb
push
pop
or
inc
jnp
aad
lret
sbb
ljmp
gs
or
ret
pop
daa
inc
mov
cltd
lods
inc
pop
arpl
and
sbb
mov
mov
and
inc
cmp
jge
lods
gs
add
and
mov
fdivs
shll
add
adc
and
xor
rcrl
psraw
icebp
das
sbbl
outsl
inc
lahf
push
popa
mov
adc
and
xor
rcrl
psraw
icebp
das
sbbl
outsl
inc
lahf
popa
movl
fists
addr16
icebp
out
rol
movups
icebp
das
sbbl
outsl
push
lahf
or
scas
add
add
and
out
shl
movsl
dec
aas
icebp
pop
not
sbb
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sbb
or
cmp
sub
push
inc
cmp
sbb
cmpsb
mov
fsub
enter
call
cmp
sub
pop
dec
jbe
inc
push
mov
cmpsb
test
fadds
call
cmp
sub
pop
jg
outsb
js
push
mov
xrelease
mov
xchg
push
or
jb
popf
sbb
xchg
xchg
pop
sub
sti
rclb
lret
test
xchg
jnp
ja
mov
mov
sahf
fisubrs
cmpsb
pop
xor
arpl
mov
loopne
xorl
xor
add
and
jbe
cmp
adc
inc
negb
jbe
ss
push
test
mov
push
add
xor
mov
or
dec
ljmp
stc
adc
jecxz
inc
mov
imul
ret
and
sbb
std
sub
sub
jg
enter
mov
enter
inc
xchg
in
xchg
mov
cmp
add
or
cmp
sub
dec
jbe
pop
push
scas
mov
dec
loope
call
ss
pop
dec
pop
xor
add
sbb
iret
mov
fcmovnbe
stc
mov
mov
ss
adc
push
xlat
stc
repnz
aad
xchg
pushf
cltd
mov
insb
push
push
sub
or
js
push
mov
xchg
idiv
call
cmp
sub
pop
dec
jbe
inc
push
mov
xchg
idiv
call
mov
daa
or
sbbb
sar
mov
sub
lcall
jno
mov
mov
xchg
icebp
daa
scas
xchg
mov
push
dec
dec
lods
jno
shll
faddl
lahf
daa
pop
arpl
jmp
add
pop
add
jg
and
xor
pusha
push
adc
push
lret
and
lods
outsb
popf
shlb
rclb
and
es
push
arpl
imul
xor
xchg
aas
loop
cltd
ds
push
inc
ret
shlb
stc
xchg
xor
gs
insb
cld
adc
and
clc
imul
xchg
jmp
xor
or
ret
cwtl
stc
fdivrl
push
xchg
pushf
in
adc
sbb
rcl
jmp
jecxz
popa
test
rcll
and
mov
adc
shll
ret
mov
jecxz
sub
mov
inc
mov
or
pop
and
popf
lret
mov
mov
in
sbb
jns
adc
out
add
xchg
dec
adc
faddp
or
leave
add
add
inc
add
into
xor
push
imul
add
cmp
mov
lcall
cmpsb
enter
xor
dec
inc
fisubs
jg
sarb
outsl
inc
fs
or
mov
pop
bound
and
popf
jbe
aas
inc
outsb
xor
add
out
adc
add
inc
mov
jg
lods
inc
push
out
loop
iret
rcrb
mov
pusha
or
or
cmpsl
cmp
add
ljmp
je
push
in
loop
dec
rorl
inc
pop
mov
pop
cmp
fcmovbe
test
pop
imul
inc
arpl
sbb
and
out
inc
mov
int
out
push
fisttps
fdivrl
mov
mov
inc
mov
push
aam
mov
xor
mov
iret
add
jge
shrl
and
es
inc
xchg
imul
aaa
clc
xor
pop
dec
sbb
dec
popa
push
sbb
and
adc
cwtl
lret
pop
xor
shlb
imul
jbe
loopne
pop
std
inc
adc
mov
std
insb
push
fdivrl
add
mov
out
fwait
xchg
lods
icebp
pop
popa
mov
xor
push
dec
aas
xor
and
stos
xchg
push
daa
or
dec
jbe
jns
add
in
scas
and
inc
xor
xor
out
sbb
mov
mov
cmpsb
repnz
pop
or
pop
loopne
lock
ret
xor
fsubl
push
cli
out
mov
outsl
lods
xor
sub
int3
jbe
xor
sbb
sbb
lds
inc
xchg
xchg
fnsave
outsb
mov
pop
xor
or
mov
ja
stc
imul
jae
shrl
sahf
data16
inc
fimull
jl
stos
out
mov
movsb
test
dec
inc
dec
fs
xor
insl
lock
xlat
lcall
cli
mov
or
rorl
cltd
les
addr16
addl
rclb
xchg
cmpsl
fildl
arpl
inc
into
pop
nop
cmpb
stos
mov
jne
xor
sahf
lahf
sbb
mov
dec
xchg
push
fidivrl
fbstp
pop
cmp
xlat
les
gs
xchg
addps
jge
push
mov
cmc
mov
sbb
inc
clc
arpl
xor
pushf
icebp
je
lods
pushf
pop
mov
push
pushf
jle
bound
std
pop
pop
jge
or
xchg
and
mov
pop
inc
mov
movsb
push
cmp
popf
out
lock
cmp
xor
data16
cli
inc
sub
and
pusha
aaa
ret
in
jno
lods
xchg
fs
push
pop
sbb
negl
inc
mov
sarb
fwait
xor
mov
or
inc
jns
mov
pop
in
dec
mov
and
cmpsl
dec
mov
push
into
fs
adcb
lret
addr16
test
stos
xlat
xchg
imul
sahf
xchg
lds
loop
pusha
lahf
arpl
lret
call
push
hlt
loop
adc
pop
jg
xchg
shr
mov
push
pusha
pop
adc
pop
test
fisttpll
push
les
pusha
or
pop
jne
pop
push
xor
mov
pushf
mov
cmp
andnps
and
scas
stos
sbbb
xor
fcoms
jl
rorb
fwait
ret
aaa
ret
fstpl
mov
test
mov
mov
dec
nop
out
push
push
mov
je
cmp
loop
mov
jg
adc
xor
and
jo
mov
popf
xchg
add
out
xchg
dec
flds
fiaddl
pop
jns
inc
mov
sti
test
or
inc
cmp
jl
lret
repz
mov
xlat
cmp
scas
repnz
pop
test
dec
call
xchg
sub
pop
testl
lock
inc
repnz
popa
inc
mov
xchg
int
fstps
jae
mov
inc
sbb
pushf
jl
into
adc
rorl
sti
movsb
sbb
leave
cmp
or
pop
cli
mov
aad
mov
push
and
sbb
mov
insb
xchg
in
xchg
lahf
or
fidivrl
mov
cmpsl
xor
jg
hlt
xchg
jnp
ss
popf
mov
es
test
mov
shrl
cmp
cmp
test
das
mov
sub
add
mov
xchg
mov
jne
fwait
dec
aaa
cmp
insl
popa
cmpsl
incl
mov
push
movsb
add
mov
xchg
cmpsl
stos
xlat
aaa
cltd
jne
stos
sub
push
lahf
jmp
mov
fnstenv
add
jg
mov
adc
jge
out
lds
outsl
filds
cmp
xchg
sub
push
or
stos
pushf
lahf
xor
adc
xor
sbb
mov
dec
mov
cmc
xor
or
jne
inc
cmc
pop
or
shrl
out
dec
jg
cmpsl
pop
and
rcrl
movsl
in
xchg
jp
xor
push
dec
xchg
push
int
add
add
clc
icebp
inc
pop
inc
sti
dec
mov
fs
insb
movsb
icebp
ds
data16
call
mov
prefetch
cltd
sub
scas
add
adc
mov
scas
test
test
mov
loop
or
and
pop
mov
dec
mov
pop
ljmp
mov
jge
add
dec
movsl
and
mov
adc
es
cmp
xchg
inc
cmc
mov
ljmp
lret
imul
inc
rol
or
fstpl
ret
addr16
cmpsb
add
dec
pusha
pop
out
inc
sarb
xor
add
fstl
push
cmp
xor
jne
lcall
mov
outsl
sbb
loop
jmp
add
jl
fisubs
in
mov
lock
cmp
lds
push
out
mulb
jl
test
scas
inc
movsb
nop
sub
jecxz
lahf
rorl
sbb
jne
xchg
fisubs
add
jmp
rol
fbld
adc
loop
call
dec
sbb
pop
dec
fcmovnu
je
xchg
dec
gs
push
jnp
das
stos
aas
xchg
aas
xor
pop
cltd
mov
fistl
les
subb
dec
test
imul
adc
adc
fwait
ret
cwtl
dec
dec
push
xor
add
sti
daa
inc
fdivrs
mov
int
call
dec
fiaddl
sbb
rolb
mov
popf
pop
test
test
int
inc
adc
shlb
scas
out
outsl
aas
xchg
shrl
cmp
aam
cltd
xchg
lods
hlt
test
loope
xchg
aad
es
pop
cli
mov
repnz
or
shll
adc
in
pop
mov
jge
cmpsb
jge
jo
hlt
adc
lods
ret
in
lods
daa
fmull
push
sahf
ds
push
arpl
mov
mov
dec
pop
gs
mov
cli
mov
adc
gs
ret
jo
or
fimuls
jge
xchg
pop
sub
repz
cmpsl
bound
lock
cltd
jae
lods
shrb
sub
nop
lahf
popf
test
scas
ds
out
mov
out
dec
enter
push
sub
sbb
adc
cmp
test
negl
jnp
orb
xor
mov
push
lods
cmp
xchg
sahf
adc
mov
inc
cmp
movsb
jmp
mov
ret
push
sub
mov
sub
push
ljmp
push
pop
and
mov
out
xchg
sub
mov
imul
test
inc
dec
inc
gs
jo
cmp
xchg
jp
mov
inc
push
xchg
pop
enter
mov
inc
in
lods
jbe
hlt
lods
rcll
or
aad
int3
ja
fs
mov
jnp
xor
into
push
or
push
cld
jmp
sbb
rcrl
xchg
cmp
pop
lock
push
jmp
lods
lcall
and
in
mov
fnstsw
into
mov
gs
mov
and
or
fs
pop
mov
push
hlt
ret
dec
mov
add
xchg
and
das
sub
scas
pop
inc
jo
scas
dec
mov
inc
cwtl
testl
jae
pop
clc
cmp
lret
xchg
ljmp
add
mull
sbb
repz
or
test
adc
enter
xchg
test
test
xor
cmp
repz
ss
inc
push
pop
in
mov
push
mov
jecxz
dec
xor
ja
scas
xchg
inc
inc
aam
jle
clc
dec
in
xor
fucom
or
mov
popf
jne
xor
stos
mov
mov
and
sbb
inc
arpl
xor
xchg
or
cwtl
pop
fdivrl
mov
outsb
xchg
dec
and
lods
test
scas
test
in
lea
fistl
hlt
xchg
mov
fwait
ljmp
add
inc
sbb
scas
outsl
repnz
gs
scas
or
or
jecxz
xchg
xchg
mov
sub
into
push
in
xor
mov
inc
cmp
jae
in
mov
out
dec
or
fstpl
push
outsl
mov
cbtw
pop
and
mov
flds
movsb
inc
data16
data16
mov
into
test
mov
dec
ljmp
out
out
xor
iret
fmull
inc
mov
pop
insl
jne
adc
jo
cmp
cmp
cli
ficompl
negb
stos
jecxz
fiaddl
xchg
and
lahf
shr
adc
cmp
adc
add
sub
sub
mov
test
inc
orl
js
sub
add
mov
js
sbb
dec
fstpl
arpl
lods
out
sub
cltd
out
and
xchg
adc
mov
xchg
inc
lcall
xor
fisubl
dec
sub
ja
jle
mov
mov
xor
test
icebp
int
pop
mov
rcrl
iret
add
pop
sti
out
and
inc
and
adc
leave
mov
cmp
movsl
stc
fwait
sub
push
lock
sbb
inc
xchg
out
cmp
pop
xchg
pop
xor
std
add
cmp
sub
push
outsl
mov
xor
pop
xor
cmc
bt
push
repnz
cmpsb
sbb
mov
mov
xorl
fs
cmp
mov
fstpt
mov
sbb
test
add
xor
das
imul
push
shll
leave
cmp
mov
lea
insl
mov
jno
js
mov
inc
mov
test
loop
mov
outsl
pop
scas
sbb
push
push
pop
fwait
sub
mov
jmp
fsubl
cmp
lods
dec
repnz
stos
fnstsw
bound
aam
xchg
cmp
pop
jno
xor
ds
pop
cmc
loopne
adc
sbb
mov
jae
mov
or
cs
dec
jg
lcall
and
sub
sbb
dec
decl
ds
mov
xor
fisubrl
jle
je
adc
and
xchg
lock
mov
push
jg
pop
imul
mul
jne
mov
jmp
repnz
push
sbb
fldt
pushf
arpl
stos
insb
push
sti
add
xchg
pop
xlat
sbb
icebp
imul
dec
int3
dec
mov
cld
adc
loopne
and
mov
rorb
call
adc
rorl
in
xchg
or
push
mov
in
pop
and
aam
int
addb
orb
sbb
inc
mov
fidivs
pop
mov
lahf
xchg
sbb
dec
pop
cmc
mov
xchg
sub
scas
test
dec
test
cmp
jb
mov
leave
insb
add
pop
icebp
frstor
in
push
fsubr
dec
inc
shlb
cmp
ror
stos
outsb
xchg
outsb
test
arpl
sbb
push
cmpsl
fwait
mov
fisttpll
mov
nop
jae,pn
add
mov
push
stc
push
jnp
rolb
int
pushf
popa
sub
fisubs
insl
cmp
xor
jbe
push
xorl
arpl
add
push
int
aad
inc
sahf
sahf
adc
xchg
rcrb
push
mov
pop
shrl
xor
out
mov
fdivrp
mov
lea
jecxz
add
popl
inc
outsb
mov
jecxz
sarl
dec
popa
or
mov
xor
mov
imul
dec
jb
imul
mov
push
pop
xlat
dec
dec
mov
sbb
outsb
mov
push
xchg
into
mov
lds
fdivs
xor
push
inc
or
mov
icebp
mov
jl
push
sub
mov
cmp
stc
sbb
xchg
adc
test
fwait
add
sbb
bound
fimull
arpl
mov
pop
xor
cmp
arpl
cltd
pop
pop
mov
mov
nop
and
mov
cmp
gs
lock
xchg
inc
mov
decl
in
dec
lret
cmc
ficoml
fisubl
nop
adc
jecxz
cmp
fcoms
mov
sahf
es
cld
push
jns
mov
insb
mov
mov
shll
sbb
adc
xchg
push
pop
pop
in
popf
jp
scas
sbb
sbb
sub
jmp
pop
cmc
push
pop
fs
aas
mov
fcomp
test
dec
push
inc
mov
loopne
push
pop
repz
imul
in
jbe
scas
push
pop
stc
sub
inc
sub
cmpsl
cli
pop
jecxz
ja
pop
fbstp
xor
cli
mov
push
mov
fdivs
sbb
add
xchg
dec
mov
mov
adc
mov
or
pop
lcall
enter
mov
inc
dec
movsb
test
or
push
jl
xor
mov
fsubrs
push
gs
loope
icebp
inc
in
cli
and
daa
cmpsl
test
inc
aaa
ds
inc
fists
cwtl
fisttps
jo
mov
nop
push
icebp
cli
lea
sbb
cmp
push
add
cmp
xor
clc
push
lea
les
cmp
lods
cmp
repnz
pop
mov
add
lsl
nop
lods
out
mov
mov
jae
std
imul
call
fildl
ret
sbb
shll
stc
addb
mov
add
je
jne
fdivr
mov
ds
xchg
jae
jg
jnp
jo
and
ja
sbb
push
pop
mov
sbb
inc
jmp
mov
sub
mov
sbb
adc
les
cmpsl
mov
in
xchg
dec
loope
push
jp
fbstp
cli
adc
out
loope
jno
push
aad
mov
adc
add
ret
mov
ds
mov
push
int
cli
mov
sbb
test
out
fstpt
mov
dec
insb
mov
or
mov
mov
add
movsl
shll
lea
push
jmp
enter
xchg
mov
filds
js
inc
push
inc
test
pushf
push
add
xor
adc
pop
jge
and
scas
pop
stos
inc
and
int
and
or
shll
push
enter
outsl
pop
mov
jne
dec
adc
int
das
pop
fisubrs
mov
mov
nop
push
inc
jns
cs
xchg
jo
es
les
xor
pop
adc
and
jecxz
addr16
push
data16
repz
jne
jo
stc
ficompl
ret
stos
ja
mov
mov
add
pop
xor
xorl
or
inc
jae
pop
add
leave
mov
sbb
les
sub
in
pop
inc
push
push
xor
jne
cmp
or
aaa
sahf
mov
shrb
cmp
lret
inc
ljmp
xor
stos
sub
jge
popf
or
les
xchg
push
mov
adc
sbb
imul
adc
jnp
movsb
sub
inc
pop
xor
mov
sbb
add
daa
cmpsl
aaa
repnz
loope
loop
cltd
jge
or
dec
or
dec
push
push
divl
push
frstor
mov
push
repnz
ret
les
dec
jmp
pop
inc
ficoms
les
iret
fimuls
popf
sub
cmc
out
mov
int
mov
ret
cmp
or
inc
push
or
pop
pop
push
aaa
inc
mov
icebp
loope
sbbl
gs
lcall
dec
fldenv
jl
fs
das
or
sarb
les
sub
pop
jne
adc
hlt
pop
repnz
lcall
fsubs
push
adc
xchg
mov
test
jns
sub
cli
lahf
or
pop
jae
fucomp
mov
jae
sub
sbb
sti
push
add
jae
push
subb
test
fwait
sub
out
out
cmp
std
mov
xor
inc
xor
test
dec
stc
mov
ror
mov
cld
sub
push
es
mov
push
inc
push
or
scas
ljmp
pop
lret
andl
in
dec
stos
add
add
orl
jne
pop
inc
movsb
test
add
out
sti
ljmp
add
inc
fwait
cs
stos
aas
xor
psubsb
je
mov
xchg
and
cmp
mov
les
xor
ret
loopne
jp
jnp
push
pop
pop
push
nop
mov
xchg
pop
xor
dec
push
inc
fimull
sahf
pop
bound
inc
aad
push
inc
imulb
adc
push
dec
gs
dec
imul
sub
sarl
call
mov
daa
jp
or
dec
sbb
out
push
mov
dec
pop
lock
jg
cld
imul
out
pop
push
in
roll
aas
jne
cmpsb
inc
nop
xorb
psraw
test
mov
icebp
sub
sbb
mov
xchg
ret
sahf
cwtl
scas
mov
idiv
je
pushf
daa
xor
loop
ljmp
mov
mov
mov
fisttpll
pop
jge
xor
repnz
rol
int
mov
lahf
not
or
or
mov
rclb
inc
clc
mov
jge
out
mov
arpl
xor
dec
push
lock
addr16
or
sbb
clc
jge
sbb
std
pusha
pop
xlat
inc
mov
xor
mov
sbb
cld
jl
pop
sub
xor
lods
shlb
jae
mov
scas
mov
and
push
fs
pop
cwtl
add
fmull
push
fcoms
shrl
out
pop
pop
push
sub
xlat
xor
pop
pushf
push
pop
pop
scas
into
push
mov
and
xor
jmp
sub
or
jnp
dec
mov
outsl
lret
xlat
sbb
push
inc
mov
mov
lret
dec
mov
xchg
mov
mov
xor
sbb
pushf
lahf
inc
xorb
xchg
sub
xor
ja
mov
push
cmp
je
mov
fisttpl
mov
mov
sub
add
push
add
fidivs
cmp
jmp
push
xor
int
cwtl
outsl
and
jbe
add
jne
fstp
aas
lcall
xchg
jne
fisttps
mov
push
insb
sub
xlat
rdmsr
push
out
cmpsl
mov
mov
sbb
es
aas
ds
in
inc
cmpsb
sbb
or
or
adc
push
or
dec
hlt
jp
dec
adc
fbstp
cmpsl
add
mov
out
mov
lret
clc
ss
push
dec
sub
xor
sti
clc
inc
insb
and
mov
push
mov
jb
lods
ss
jmp
dec
jbe
inc
push
mov
xchg
idiv
call
cmp
sub
pop
dec
jbe
inc
push
mov
xchg
idiv
call
cmp
sub
pop
dec
jbe
inc
push
mov
xchg
idiv
call
cmp
sub
pop
dec
jbe
inc
push
sbb
xchg
or
cmp
sub
or
sbb
sub
cmp
icebp
loopne
int
mov
cwtl
jg
outsl
test
das
jmp
iret
sbb
sub
cmp
imul
mov
aas
jmp
add
xor
and
jno
arpl
insb
mov
pop
xchg
arpl
mov
pop
int3
orl
aam
lods
aaa
mov
out
push
sbbb
xchg
xchg
push
imul
jbe
addr16
inc
dec
test
rolb
and
test
jb
pop
outsl
and
mov
inc
pop
insb
repz
aas
jmp
ss
lret
push
dec
mov
sbb
dec
addr16
push
nop
xor
cmc
subps
inc
out
cmovge
xchg
sub
popa
pop
adc
mov
push
lahf
add
lret
bswap
sarb
insl
mov
ret
cld
dec
push
ret
push
aas
inc
pop
loope
cmp
jmp
call
push
or
xor
cmp
imul
mov
and
or
pop
in
dec
jmp
sbb
out
cltd
or
or
pop
lods
push
dec
xchg
mov
scas
jo
pop
lahf
push
repz
pop
mov
std
sub
jg
cs
dec
mov
mov
dec
xchg
pop
mov
mov
jg
outsl
mov
aas
jmp
iret
sbb
sub
cmp
imul
mov
aas
jmp
loopne
inc
scas
pushf
cmp
ret
mov
adc
gs
mov
out
in
pop
sbb
inc
cmpsl
movsl
lods
xor
dec
aaa
sbb
pop
pusha
movsb
jg
xchg
outsb
jg
sub
popa
and
add
push
mov
in
sub
and
sbb
test
xchg
js
mulb
jns
mov
and
cltd
push
stos
cltd
mov
xor
or
movsl
loopne
xchg
cmp
pusha
call
cmpsl
into
sti
in
imul
out
fs
add
das
xchg
enter
sahf
je
shll
push
fwait
sahf
dec
in
shll
cmp
sbb
or
cmp
mov
fnsave
push
or
dec
notl
mull
pop
ret
mov
adc
scas
movsb
pop
adc
aaa
add
fiadds
mov
addb
inc
hlt
inc
lea
sub
imul
mov
repz
mov
imul
mov
imulb
cmp
jmp
jb
rcrb
push
sbb
testb
cmpsb
sub
inc
repnz
repz
sub
enter
insl
in
jne
addr16
mov
jb
xor
add
sbb
fs
test
sub
stos
add
inc
loope
fcomps
sub
push
push
xchg
aaa
add
xor
jmp
mov
add
and
dec
test
xchg
insb
mov
push
xlat
xor
ja
lret
mov
dec
sub
incb
aad
cmpb
loop
mov
rorl
xchg
and
push
loop
mov
jge
push
sub
jl
fs
and
push
pop
cmp
insb
and
sbb
nop
lock
in
mov
lods
lock
ss
outsb
pop
cmp
insl
sar
test
cmp
inc
fnstsw
inc
push
pop
shll
stos
fstl
fidivrs
out
xlat
xlat
or
or
shr
xchg
in
mov
movsb
xor
test
ficoms
fwait
lcall
enter
sub
pop
test
dec
mov
jecxz
sub
sbb
pushf
js
mov
dec
dec
sub
push
pop
pop
push
jbe
rcll
adc
xor
cmp
mulb
adc
push
shl
push
inc
aam
cli
scas
icebp
fs
repz
push
push
adc
in
rcrb
shrl
test
or
cltd
cld
lods
and
out
aaa
jae
cmp
into
imul
enter
and
iret
mov
sbb
push
test
dec
lret
jmp
and
data16
mov
dec
lahf
outsb
inc
pop
mov
push
ja
shlb
cmp
and
cmpsl
out
push
sub
sbb
jbe
mov
jno
jb
push
mov
int3
ja
aad
mov
sbb
test
and
dec
sub
sbb
aad
jge
dec
test
gs
lahf
jg
testl
test
mov
jmp
mov
adc
inc
dec
inc
cmp
repz
and
cmp
dec
mov
outsl
es
je
ds
add
jo
pop
and
movsl
dec
fdivp
pop
and
pop
pop
mov
testb
or
cmpsl
adc
test
scas
fistpl
out
and
push
lds
sbb
ds
lret
sbb
inc
sbb
pop
push
jno
push
sub
dec
aaa
adc
sbbb
in
popl
push
xchg
fstp
inc
js
inc
data16
add
and
or
adc
pop
movsb
cmp
test
mov
fwait
cmpsb
xor
popf
adc
incl
inc
mov
cmpb
lods
sbb
inc
adc
sbbl
ljmp
aas
lahf
not
adc
add
lods
jge
out
adc
out
clc
xchg
cs
push
fs
lret
dec
imul
cwtl
test
and
jecxz
int3
sub
xchg
mov
pop
pop
in
pushf
pop
imul
dec
xor
shll
cmpl
lcall
movsb
lea
sbb
push
je
xor
fnstenv
mov
dec
enter
xor
pushf
xchg
jp
add
jne
jg
push
lods
in
push
mov
popl
scas
mov
cmp
jb
aam
mov
hlt
add
pop
xchg
ljmp
xor
in
fadds
shlb
cmc
pop
fidivrl
lea
jns
aas
fs
adc
sarb
or
mov
push
popf
out
sub
fld
popa
and
cmp
jl
inc
orb
stos
shl
jbe
hlt
sub
addb
xor
sbb
stc
daa
cmp
push
inc
lock
xor
rorb
add
and
test
mov
push
das
movsb
imul
pusha
jbe
mov
xchg
int
int3
mov
les
push
scas
jmp
cmp
insl
and
lds
pushf
jmp
bound
pusha
addr16
movsb
jmp
in
cmc
jmp
push
push
ds
jl
sbb
stos
nop
imul
adc
xor
jnp
or
pop
hlt
jge
inc
mov
cmp
arpl
inc
jl
fs
punpcklbw
dec
jl
cmp
cmp
inc
in
push
adcb
or
cmp
lret
inc
shrl
sarl
xor
or
xchg
inc
jne
sahf
loopne
mov
and
pop
sbb
dec
xor
outsb
fistps
scas
mov
mov
enter
mov
sbb
sbb
push
fpatan
sbb
sub
fwait
adc
arpl
pop
xlat
mov
sbb
popf
xor
adc
pushf
rolb
mov
sub
dec
ja
push
clc
xchg
inc
jne
rorl
push
push
rcrb
rcrl
dec
push
gs
mov
xchg
inc
jnp
sbb
or
pop
add
les
cltd
popa
sub
pushf
and
dec
dec
adc
fadd
fisubs
fistpll
mov
jmp
js
sub
hlt
pop
jle
cmp
in
test
rcrb
inc
pop
cmp
or
jmp
push
add
cmp
push
cld
xor
inc
adc
mov
into
mov
lret
ja
out
dec
shrl
push
pusha
fidivs
fs
loope
mov
pop
dec
jmp
xor
idivb
ret
jo
sub
add
shll
pop
outsl
push
adc
xor
sahf
lds
and
push
icebp
ret
xchg
std
cmp
jl
xchg
ret
icebp
pusha
pop
repnz
iret
cli
pop
shll
adc
int
das
pop
push
jecxz
outsl
fucomip
repnz
rcrb
jmp
aad
cmp
stos
std
mov
jmp
lea
mov
ds
cmp
jb
ret
pop
hlt
cmc
sbb
fidivs
lret
mov
cmp
and
fisttpll
xor
adc
hlt
stos
cmp
push
cmp
xchg
push
mov
pop
ret
sub
ss
sub
jmp
and
mov
sub
xor
bound
mov
mov
outsb
jl
sarb
mov
insl
jno
data16
in
push
and
nop
jmp
jle
inc
mov
mov
insb
dec
movsb
addr16
add
fwait
lods
jmp
add
iret
sbb
mov
in
pop
loope
dec
add
jo
lods
jmp
xor
nop
fidivs
fadd
pop
mov
mov
sbb
mov
in
icebp
add
inc
lea
xchg
fistps
cmp
test
inc
sub
xor
mov
inc
in
addr16
and
push
int3
mov
add
repnz
push
sahf
push
cmc
push
or
shrb
dec
shlb
cmpsb
push
in
lcall
jo
fwait
sbb
ficompl
cmp
or
jne
popf
pop
xor
pop
jb
xor
sti
xchg
or
mov
jmp
inc
arpl
ficomps
jae
pop
cwtl
sbb
dec
subl
cld
into
jmp
inc
jbe
xchg
in
imul
aam
outsb
nop
scas
mov
insb
fst
leave
sub
decl
xlat
xlat
mov
sarl
fidivl
ret
mov
nop
data16
clc
fsubl
dec
adc
xor
pop
mov
xchg
pop
jns
mull
setno
test
lret
adc
mov
cld
xchg
fisubrl
push
sbb
or
paddb
into
inc
rorl
loope
ds
mov
scas
jno
outsb
adc
clc
call
iret
xchg
adc
adcl
inc
sbb
aas
clc
mov
repz
xchg
into
icebp
or
ffreep
popf
faddl
incl
push
mov
mov
roll
es
lahf
or
js
shrl
negl
lods
mov
movsl
jl
outsl
xor
das
push
lods
rclb
sbb
mov
into
jbe
aam
jle
push
adc
out
adc
jnp
pusha
into
or
cmp
jle
xor
jb
jns
cmp
mov
xchg
xchg
mov
stos
inc
mov
mov
cs
dec
pop
mov
push
adc
shrw
add
fwait
push
jge
fs
pop
sub
mov
rorb
jo
int
pop
fldcw
or
roll
dec
push
sub
jmp
cltd
ss
mov
popa
jae
push
push
roll
je
jae
xlat
and
fs
push
mov
into
mov
xchg
jo
mov
and
cmp
fildl
ud0
mov
pop
imul
movsb
hlt
sub
mov
lods
das
push
outsl
mov
push
inc
mov
test
jne
cmc
xchg
lea
cmp
stos
cmp
pusha
or
in
popf
mov
push
stos
push
add
les
push
and
je
push
jmp
cmp
mov
jne
outsl
xchg
and
jmp
xchg
lahf
push
mov
dec
popa
jno
sbb
pop
push
xor
insb
mov
sbb
mov
bnd
and
sbb
adc
sarl
inc
scas
adc
inc
push
or
lods
outsl
hlt
mov
addl
bound
dec
mov
mov
cmp
xchg
fwait
cmp
push
repnz
dec
xor
lcall
rcl
or
mov
jecxz
movsl
add
insl
sbb
shll
jne
popf
jg
mov
out
dec
inc
push
sbb
and
or
arpl
loopne
mov
cwtl
imul
rcl
in
pushf
dec
sbbl
ljmp
pop
mov
filds
jns
push
leave
stos
adc
sbb
cmp
es
gs
sahf
imul
pop
rorl
repnz
addl
mov
movsl
or
ljmp
add
adc
idivb
lret
inc
daa
cld
inc
mul
das
pop
inc
sub
xchg
lods
push
jl
fcoms
stos
repnz
and
jecxz
pushf
push
std
test
test
mov
in
lock
xchg
ret
outsl
ror
inc
hlt
rclb
inc
jno
sub
pop
iret
xchg
cmp
into
push
xor
sub
jbe
cli
adc
inc
lahf
sbb
loope
cmpsl
inc
fmull
incb
xor
mov
imul
or
push
jbe
add
test
dec
or
push
aam
ljmp
or
sahf
lods
xlat
xor
or
jmp
or
cmp
and
arpl
dec
cmp
mov
std
mov
xchg
push
outsl
and
xchg
popa
imul
add
jo
xor
loope
dec
add
testb
push
jp
pushf
cltd
sahf
shr
cli
daa
mov
cld
inc
adc
jno
or
push
fisttps
arpl
icebp
dec
roll
call
lock
inc
mov
xor
pop
pop
int
int
xchg
xor
mov
inc
or
cli
pop
decb
push
andb
andb
jbe
pop
inc
jb
shll
push
mov
push
pop
bound
outsb
repz
fistpll
xor
dec
shl
enter
and
pop
stos
gs
movb
cmp
rcrl
dec
cli
mov
inc
lahf
imul
pusha
aam
bound
mov
std
push
adc
push
outsb
jbe
dec
jp
mov
mov
mov
call
arpl
cltd
jns
mov
and
cmp
or
fsubrl
cmp
push
mov
iret
mov
adc
inc
mov
mov
mov
mov
sbb
mov
jp
sub
rcl
add
loop
and
fwait
cmp
xor
xchg
outsl
fcompl
rol
dec
push
add
lret
push
repnz
mov
cwtl
mov
repnz
aad
sub
push
in
lcall
mov
jmp
push
jno
jno
dec
sub
out
in
std
pop
mov
cmp
hlt
stos
cmp
pop
jecxz
fidivrs
sub
mov
out
ds
xor
add
pop
cmp
mov
gs
pop
pop
test
jl
mov
pop
dec
repz
xlat
dec
mov
rcll
xor
mov
lret
pop
jnp
fnsave
sbb
cmp
xor
in
sbb
aaa
jno
jb
or
repnz
test
mov
jecxz
push
sbb
cmp
pop
jae
xchg
xor
out
pusha
in
mov
lcall
sub
push
inc
push
jno
fdivs
sbb
clc
mov
enter
fnsave
push
mov
inc
js
mov
or
jne
cpuid
adc
push
gs
test
push
stos
out
mov
in
push
mov
inc
cmp
push
popf
jmp
out
int
add
mov
pop
das
shl
test
xchg
mov
and
ret
xlat
dec
sub
popf
jae
jge
pop
xor
das
adc
dec
shlb
sub
arpl
mov
cmp
sbb
iret
mov
lret
sub
mov
pusha
mov
lret
stos
cmp
test
addb
sbb
daa
cmpsl
imul
sbb
mov
data16
sbb
adc
and
push
xchg
shl
mov
shrl
shll
cld
cmc
int
test
mov
cwtl
or
or
dec
sbb
jno
dec
pushf
mov
ret
stos
scas
jl
sbbb
pushf
test
jno
and
stc
loop
and
mov
cld
mov
cld
cltd
sbb
sbb
cld
in
mull
lods
in
pushf
cmp
pop
jmp
fwait
insl
bound
pop
dec
adc
jno
jge
or
dec
xchg
and
in
xor
mov
jb,pt
enter
divl
and
and
xchg
out
xlat
insb
cmpsl
inc
data16
mov
mov
mov
sub
adc
inc
pop
sbb
or
xchg
xchg
dec
inc
fsubl
lahf
mov
fbstp
jns
loopne
cmp
inc
loop
xchg
mov
or
iret
inc
push
inc
push
rolb
loopne
jnp
xchg
insb
jo
nop
stos
dec
xchg
aam
ds
jb
fisttps
push
jmp
scas
stos
sub
outsb
mov
ds
push
or
lea
or
xor
pop
add
jg
addb
mov
push
mov
std
repz
sbb
xchg
mov
insl
pop
and
and
push
xchg
sbb
xorl
dec
jno
lock
xchg
shll
lods
mov
popf
add
icebp
mov
insl
lret
pop
or
inc
int3
mulb
xorb
jnp
int
fnstsw
scas
lcall
push
mov
mov
xchg
mov
stos
sbb
push
outsl
cwtl
inc
lds
sbb
incl
hlt
xor
test
shrl
stos
nop
ret
add
cmp
aam
sbb
iret
bound
mov
pop
out
xchg
mov
xchg
sbb
sbb
stos
repnz
mov
xchg
ret
sbb
push
inc
sbb
jo
lahf
and
cmc
lea
dec
sbb
std
dec
xchg
leave
in
test
stos
mov
cltd
mov
cmp
jae
adc
sbb
aad
pop
pop
xchg
mov
xor
push
sub
add
mov
insl
sub
adcb
mov
dec
xchg
mov
push
movsl
mov
sbb
pop
insb
lret
push
daa
mov
rcrl
add
push
movsb
in
dec
lahf
cmp
lret
mov
mov
xor
xchg
xchg
lods
fsin
adc
xor
je
mov
movsb
cmc
lods
dec
xor
sub
inc
nop
call
push
out
and
sti
mov
pinsrw
addr16
adc
subl
pop
andb
lods
into
ret
ss
mov
stos
repz
adc
and
ret
test
pop
enter
ret
pop
sbb
inc
call
mov
call
pop
mov
enter
mov
mov
testl
xorl
sbb
mov
pushf
mov
add
xchg
pop
push
pushf
dec
ss
push
movsl
mov
fisttpl
insb
iret
mov
add
sub
aas
or
aam
or
inc
shl
mov
gs
xchg
xor
jmp
out
cmpsb
adc
mov
jne
inc
pop
cmp
test
pop
sbb
jmp
inc
or
mov
out
sub
cmp
js
pop
or
and
test
and
rclb
fists
mov
cmpsl
push
mov
nop
mov
fwait
dec
sbb
push
push
loope
movsb
xor
orb
sbb
xor
jns
jnp
sub
fadd
sub
sub
aad
inc
sub
and
fildll
mov
mov
mov
sub
in
aam
add
insl
jmp
loopne
into
push
push
dec
scas
sbb
mov
rcr
cmp
push
out
fdivs
loope
roll
cmp
add
mov
sub
mov
jno
test
daa
xchg
push
pop
inc
lret
push
mov
idivl
shll
mov
leave
jg
dec
outsb
xor
mov
inc
fdiv
sbb
les
movsl
xchg
mov
cld
addl
dec
nop
ret
iret
mov
sbb
inc
or
pop
add
pop
xor
cmpsl
popf
enter
adc
iret
stos
cmp
aas
in
pop
pushf
ret
dec
es
mov
imull
dec
and
pop
insb
push
jg
xchg
movsb
ret
sar
cmp
das
cld
nop
nop
je
into
or
dec
rorl
or
or
clc
hlt
shl
and
lods
aaa
mov
push
lret
mov
jecxz
mov
dec
xor
fs
xor
shrb
mov
pop
adc
cmpsb
lods
pushf
push
loopne
mov
loopne
ja
inc
xchg
pop
xchg
mov
push
addr16
mov
xchg
xchg
pusha
jmp
hlt
es
insl
jg
mov
movsl
fistps
in
stos
and
mov
jns
dec
inc
add
insb
add
pop
add
in
pop
clc
xor
in
inc
inc
dec
aam
mov
xchg
outsl
push
and
mov
inc
out
and
inc
rclb
mov
mov
jmp
pushf
push
bound
scas
mov
shlb
jle
adc
aam
adc
mov
xor
inc
inc
cmp
popf
mov
test
into
das
inc
mov
cwtl
pop
cmp
xchg
test
insl
and
push
pop
in
shlb
outsl
shrl
jbe
pop
dec
inc
push
cltd
popf
adc
cmp
cld
nop
lods
sbb
cli
lods
pop
and
idivl
jae
push
cmp
ds
rcl
insb
fwait
mov
adc
in
sub
loopne
dec
loopne
cmpsb
xchg
add
shrb
mov
mov
mov
mov
enter
mov
insb
cmc
incl
xchg
add
or
mov
jbe
shr
clc
andb
pushfw
pushf
fnstenv
adc
xlat
dec
stc
pop
nop
inc
movsb
mov
sbb
inc
xchg
jecxz
test
mov
stos
lock
cs
ja
negl
mov
cmp
sbb
and
test
mov
inc
pop
popf
lret
nop
mov
pop
add
xor
jecxz
fwait
outsb
add
in
icebp
jne
movsb
pop
jl
lahf
or
test
and
cmpsb
ret
fmulp
add
dec
nop
cmc
subb
leave
cld
mov
adc
into
fs
outsl
sub
pop
lock
dec
push
out
jge
aam
add
or
cld
pop
sbb
xchg
xchg
inc
bound
iret
insl
in
cmp
lret
test
repz
xchg
ret
sub
mov
ret
lock
cmpsl
xchg
outsb
or
xchg
int
cmc
sub
cmp
imul
mov
aas
jmp
iret
sbb
sub
cmp
imul
mov
aas
jmp
iret
sbb
sub
cmp
imul
mov
aas
in
sub
sbb
popf
dec
pop
aas
imul
xor
test
xchg
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
push
sahf
sbb
mov
outsl
xchg
sub
pop
push
or
push
pop
add
pop
add
add
ret
add
xchg
add
add
add
scas
add
add
test
or
cmp
mov
add
add
pop
add
in
add
add
add
add
add
add
add
add
jle
or
jb
mov
and
add
add
js
add
mov
sbb
rolb
sub
add
add
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
inc
add
add
test
mov
ja
arpl
stc
add
add
add
add
add
add
add
add
add
add
rolb
adc
adc
push
add
add
add
add
add
into
add
add
add
add
int3
add
add
add
mov
add
inc
add
add
add
stc
add
add
add
jmp
add
add
push
add
add
add
xor
outsl
add
test
push
add
add
add
add
pop
add
add
insb
add
add
jmp
add
add
add
add
inc
add
add
add
add
add
rolb
lods
add
mov
and
add
adc
add
add
mov
add
lcall
add
fiaddl
xor
mov
sub
outsl
add
add
in
add
add
inc
add
add
add
add
add
add
test
add
jnp
or
mov
add
ret
add
add
add
xor
out
add
add
add
add
add
add
add
push
add
sahf
or
add
xchg
add
add
add
add
add
add
in
add
addr16
add
add
add
xor
add
jmp
add
nop
add
add
adc
pop
add
add
add
pop
add
push
add
add
add
add
inc
add
add
add
add
add
add
add
xor
pop
add
dec
add
add
add
inc
add
pop
add
add
fildl
add
add
add
add
add
add
add
add
add
bound
dec
add
out
add
jmp
add
add
add
add
cmp
add
add
add
add
add
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
xchg
add
add
add
lcall
add
add
add
add
push
add
inc
add
add
add
add
add
add
in
add
add
inc
add
add
add
push
add
add
cmp
imul
add
arpl
movsb
add
pushf
add
add
add
add
add
enter
and
add
add
add
add
add
fidivl
lods
mov
outsl
out
stos
es
xchg
push
xor
loopne
sub
jae
dec
cmpsl
aam
jae
mov
call
outsb
jg
jno
mov
sbb
sbb
cmpb
out
or
out
stc
push
push
sarb
mov
clc
rolb
fcompl
cwtl
lret
aam
enter
dec
jg
scas
sub
mov
jb
rolb
mov
test
scas
leave
jge
jns
inc
pop
fnstsw
xor
mov
jbe
mov
jg
jp
push
xor
fisubs
and
out
leave
adc
dec
orl
pusha
sahf
imul
jns
xor
mov
into
pop
push
lods
jo
andl
nop
aam
pop
iret
sarl
movsl
pop
jecxz
cltd
push
movsb
mov
bound
push
mov
adc
and
pop
mov
shll
sub
fwait
and
mov
lods
sbb
outsl
dec
hlt
push
pop
lock
mov
or
mov
jle
scas
int
mov
pop
insl
mov
jmp
inc
enter
jl
adc
or
fwait
enter
fisttpl
jnp
ret
and
jo
lcall
and
jp,pt
and
rcrb
inc
mov
cmp
repnz
ret
or
sbb
inc
mov
jo
mov
sub
cmp
and
jl
xchg
das
dec
add
int
adc
pop
js
jl
sub
movsb
rcr
jbe
rcrl
insb
dec
pushf
test
cmpb
cmpl
add
shr
mov
jg
xchg
stc
mov
push
and
scas
xchg
hlt
mov
es
es
mov
jne
int3
iret
jns
fsts
sub
cmp
arpl
fwait
scas
fldcw
test
rorb
add
mov
jg
jle
sub
movl
mov
sub
leave
and
adc
cmp
inc
xchg
jb
test
imul
mov
xchg
jno
std
imul
mov
jl
add
in
stos
test
ror
repnz
bound
inc
aas
inc
imul
pushf
jecxz
leave
jmp
int3
out
fidivrl
or
mov
mov
push
ja
mov
in
or
sbb
sbb
shlb
inc
fiaddl
lret
out
dec
cmc
std
add
lods
hlt
jle
fucomip
movsl
xchg
pop
mov
pushl
hlt
sub
jmp
xchg
xchg
sub
push
and
mov
mov
fwait
mov
xor
lds
mov
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
