call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
test
into
out
out
movb
roll
inc
dec
push
push
ss
test
leave
test
into
out
sahf
mov
mov
xchg
scas
repnz
jp
data16
inc
push
inc
ds
cs
out
xlat
jmp
into
neg
xchg
mov
inc
adc
sbb
xor
push
dec
fs
imul
jle
lea
imul
into
repnz
ss
inc
insb
xchg
pop
jno
dec
imul
addl
pop
js
out
push
push
lea
cmp
mov
pop
jbe
data16
mov
xchg
push
jmp
sbb
sub
mov
loop
add
es
jle
xor
fwait
or
jle
push
jae,pt
sbb
jbe
shrl
mov
pushl
cmpl
into
xchg
mov
arpl
add
mov
test
push
ficoms
add
loope
idiv
iret
stc
mov
mov
inc
jbe
jle
dec
ja
push
cs
ds
pop
lods
imulb
mov
mov
sbb
or
add
jb
push
pop
jns
push
lahf
into
fwait
movsl
in
test
shl
jmp
pop
add
cmp
sbb
jge
dec
jno
jb
idiv
out
mov
and
mov
pop
jbe
data16
outsb
inc
push
ss
es
cs
fdivp
into
out
out
sahf
mov
cmpsb
mov
jbe
data16
outsb
inc
push
ss
es
cs
fdivp
or
les
pop
negb
orb
mov
pop
orl
out
and
sbb
fisttpl
add
cmc
inc
inc
shl
inc
leave
push
insb
fists
mov
inc
ss
outsl
inc
dec
fwait
aaa
cltd
push
xchg
and
outsl
popa
fwait
pop
out
addr16
std
dec
dec
out
mov
adc
test
cmp
sbb
nop
xchg
mov
adc
pushf
lods
insl
mov
insb
mov
int3
movsl
sarb
sbb
aas
mov
add
pop
mov
loope
push
jo
in
fucom
cs
push
stos
insb
sbb
xchg
scas
jo
divl
dec
mov
adc
dec
push
xor
jecxz
fstps
leave
inc
faddp
je
insl
es
pop
fdivrl
sbb
pop
mov
add
sti
popf
je
inc
testb
push
stc
jge
fistpll
xor
xlat
xorl
aaa
add
mov
andl
lret
push
adc
xchg
aam
inc
fcmovb
inc
cs
out
movsl
sub
xor
enter
add
int3
divl
xchg
loopne
sub
adc
jo
adc
inc
hlt
sbb
js
mov
jecxz
mov
dec
and
ret
loop
cld
cmc
insl
test
ret
adc
das
or
mov
pop
mov
mov
fcompl
cld
dec
inc
lcall
sbb
adc
outsl
loope
iret
test
repz
in
sbb
lcall
add
push
mov
fdivs
js
or
xchg
test
mov
insb
imul
or
pop
popa
ljmp
push
inc
repz
popf
adc
sbb
mov
ljmp
sbb
repnz
cmp
adc
fsubrs
cmp
push
lret
lods
pop
in
ret
mov
out
pop
lcall
pop
xor
leave
in
inc
and
adc
cli
or
pusha
sub
les
bound
adc
lret
cmp
or
fwait
jl
fcmove
js
lods
imul
mov
sub
aad
push
jnp
pushf
pop
out
imul
out
scas
pop
imul
push
shlb
mov
push
mov
xor
and
and
dec
lret
jle
fcmovu
adc
inc
mov
cwtl
popf
lcall
testb
push
outsl
sti
mov
xchg
adc
inc
dec
arpl
mov
mov
mov
clc
jg
sbbb
add
adc
sbb
add
xor
enter
mov
sub
into
xchg
inc
loop
mov
dec
xchg
loope
dec
add
rclb
call
int3
mov
jo
cmc
stos
and
mov
push
std
xor
fdivp
ljmp
in
fidivs
aad
xor
cs
inc
scas
pop
iret
add
inc
cs
sbb
iret
push
insl
fdivs
aad
nop
inc
fbld
mov
rorl
lahf
xchg
push
in
in
imul
out
mov
push
shlb
popa
insb
lret
hlt
ficomps
inc
rorb
shlb
clc
xor
and
movntps
sti
xor
gs
inc
lds
js
mov
or
dec
aad
stos
push
and
sti
sub
sbb
mov
int3
mov
ds
stos
das
xlat
cmp
in
inc
aam
jnp,pn
fcmovbe
cmp
addr16
lods
fdivrp
mov
mov
cs
push
push
mov
xorb
mov
or
imul
cmp
es
ficompl
mov
push
mov
fimull
fbstp
mov
lds
lcall
mov
aad
out
add
cmp
cmp
xchg
icebp
pop
fidivrl
cli
mov
add
cld
ret
jl
xchg
push
pop
xchg
push
push
in
pop
push
mov
sbb
mov
mov
and
add
andl
jnp
jbe
mov
sub
add
sahf
pop
outsb
mov
bound
push
andl
call
jns
jae
ss
testl
sub
push
mov
addr16
push
sar
jns
add
test
add
mov
cmp
dec
fsubl
or
add
xchg
aad
adc
lcall
push
xchg
or
xor
adc
out
adc
into
add
fcompl
xchg
sarl
xchg
jecxz
or
movsl
fwait
iret
adc
push
push
test
arpl
rclb
and
mov
sub
push
and
fs
scas
je
idiv
pushf
jmp
test
sbb
adc
mov
fsubr
leave
sbb
in
cwtl
nop
nop
cli
cmp
sbb
lcall
inc
clc
shl
sbb
push
inc
xchg
mov
add
clc
add
shll
aaa
push
fstpt
xor
cmp
lods
pop
pop
cmpsl
inc
cwtl
int3
xor
stc
rorb
dec
inc
inc
in
mov
pop
inc
ret
dec
sub
loop
out
add
cli
mov
mov
rolb
mov
fsubs
imul
push
call
cmp
cmp
inc
xlat
mov
ret
nop
xchg
push
or
xor
orb
fcmovb
adc
jns
inc
inc
pop
dec
or
mov
push
mov
inc
xchg
lcall
sbb
add
and
push
mov
jne
scas
test
in
xor
addr16
mov
shl
sub
in
pushw
in
add
mov
sbb
sbb
inc
ja
inc
sub
dec
pop
dec
int
mov
ret
or
ficoml
int3
xchg
and
sahf
jnp
inc
xchg
inc
test
jb
movsl
add
inc
xor
jne
adc
cmc
nop
fldcw
gs
sub
js
xlat
aaa
xchg
xchg
xor
cltd
add
xor
int
sub
clc
add
sub
lcall
in
mov
das
mov
mov
inc
jno
xor
mov
dec
cli
mov
std
lret
adc
das
sub
xchg
fsubrl
adc
scas
inc
add
xlat
or
repz
mov
fidivs
int3
xchg
mov
pop
dec
push
push
dec
in
fisubrs
enter
or
int
addl
in
mov
jae
pop
sti
or
pop
dec
mov
sub
test
lcall
arpl
popf
rcr
mov
call
xchg
xor
jl
jecxz
ret
lahf
idiv
add
jg
out
fstpt
lods
dec
jge
xchg
xor
mov
inc
xlat
clc
rcrb
cltd
enter
mov
or
scas
sub
adc
sub
sub
fistpll
ficoml
shll
mov
cmp
andb
ljmp
lods
jl
push
sahf
pop
mov
add
out
sbb
ja
and
repz
loopne
cmpsb
or
out
flds
xor
jb
into
xchg
movsl
into
push
push
xor
mov
or
sbb
mov
pusha
xchg
pop
mov
jns
movsb
notl
cmp
pop
lock
aad
or
jnp
int3
mov
lret
repnz
or
frstor
cmp
cli
adc
or
loop
aas
insb
ret
aaa
and
jle
lret
addr16
xor
ss
add
push
ss
push
xchg
mov
icebp
mov
les
sub
inc
sub
mov
mov
mov
xor
das
sbb
out
adcl
std
mov
fs
mov
xlat
bound
dec
or
mov
sbbl
std
in
jg
dec
sub
pop
mov
imul
test
insl
xor
dec
mov
dec
xchg
mov
neg
dec
or
shrl
and
push
xchg
std
fimull
jmp
lret
dec
push
cmpsl
sti
adc
dec
push
aad
test
addr16
pop
sbb
shll
iret
jle
xlat
jae
out
test
insl
jns
mov
sahf
and
jns
mov
pop
add
js
js
pop
sti
lcall
call
sub
push
inc
mov
sbb
imul
ss
call
add
cwtl
stc
push
popf
imul
outsb
inc
test
out
scas
shlb
or
test
pushf
in
repz
test
add
inc
and
mov
adc
jge
xchg
shll
fadds
daa
lret
adc
sub
add
xor
add
mov
jg
push
pop
push
adc
lock
jbe
dec
icebp
movsb
popf
inc
outsl
push
add
sbb
mov
fwait
fwait
mov
faddl
in
rcrl
push
cwtl
adc
popa
mov
nop
inc
mov
in
mov
inc
and
stos
lods
or
out
gs
dec
sub
pop
xlat
sub
cmp
rorb
repz
imul
add
xchg
ljmp
add
pop
dec
pop
mov
pop
decl
arpl
mov
insl
flds
mov
add
lds
cmc
adc
inc
icebp
push
daa
cmp
and
pop
mov
jno,pn
or
xlat
pop
movl
or
xlat
push
jne
cmpsl
jl
mov
or
mov
shrb
in
jae
cmp
out
out
add
push
sarl
das
cmpsb
mov
sbb
add
out
adc
lds
sub
pusha
push
mov
lahf
pop
sub
sub
or
mov
jl
iret
out
cmpsl
jecxz
sbb
hlt
adc
mov
jbe
push
cmp
push
out
cs
inc
movsb
mov
outsb
ret
sbb
mov
sub
mov
vandnps
cmpsb
sbb
xchg
cmc
loope
lea
sub
fs
adc
jb
insb
jg
sub
inc
addl
test
mov
mov
pop
mov
jae
jg
jae
pop
jo
repz
xor
jle
mov
setb
jnp
es
aaa
mov
out
sub
aad
cwtl
pop
push
pop
xor
jne
mov
lods
lahf
repz
shlb
pop
dec
flds
into
icebp
loop
adc
inc
cmp
dec
in
js
scas
jns
subb
push
stos
jmp
or
subl
repz
mov
loop
gs
dec
dec
adc
test
inc
xchg
mov
sbb
add
jp
inc
fld
bound
cmp
lock
mov
sbb
inc
repnz
mov
mov
hlt
in
sbb
push
ljmp
test
sti
cmp
or
ficompl
in
aad
mov
mov
adc
pushf
ret
pop
mov
mov
or
push
out
scas
rol
in
push
int
mov
jl
cmp
jmp
call
mov
xor
push
mov
mov
xchg
int
iret
xor
sahf
push
or
push
xor
dec
int
clc
js
fsubrp
push
mov
movsb
jo
aad
subb
xor
testl
call
js
adc
out
add
jae
jbe
mov
inc
das
push
or
xlat
pop
push
dec
or
aam
leave
mov
sbb
sbb
fldenv
ret
ret
repnz
pop
xchg
mov
sbb
cmp
and
inc
scas
loope
std
pop
cmpsb
adc
repnz
rorb
lock
push
pusha
fisubs
inc
jge
cs
jbe
leave
jb
movsl
outsb
int
mov
xchg
dec
ljmp
fsub
mov
shl
push
je
pop
loope
pop
push
enter
adc
jmp
sub
pushf
sub
in
js
and
decl
mov
sbb
test
push
loopne
xchg
push
pop
push
scas
insb
iret
lods
leave
add
js
icebp
outsl
test
push
and
call
mov
adc
fwait
aaa
fdivrs
or
insl
das
dec
adc
int
sub
mov
outsb
lea
xchg
add
add
out
xor
mov
lock
out
pop
int3
mov
mov
push
jns
push
or
les
pop
pop
pushf
inc
xchg
inc
test
loopne
pop
push
mov
lods
mov
lret
and
inc
sbb
cmp
hlt
addl
mov
or
cmp
cli
jmp
or
xor
push
push
adc
popa
mov
dec
xchg
ret
fwait
xor
cmp
inc
sbb
cmp
mov
ret
mov
mov
add
das
out
ss
add
movsb
mov
cmp
adc
jae
push
in
loop
sahf
test
sbb
loop
ret
push
push
sbb
jbe
and
pop
sbb
add
mov
std
sub
jle
sti
jb
fcoms
vmovaps
test
mov
inc
sbb
inc
inc
pop
sbb
push
imul
outsl
dec
pop
push
fwait
popa
inc
xchg
sbb
pop
dec
sbb
adc
jae
jae
mov
lcall
popf
in
lahf
shl
inc
mov
add
iret
negb
or
pop
repnz
jl
test
jmp
xor
sti
push
add
mov
mov
ss
pop
or
xor
cmpsb
insl
xchg
and
mov
lcall
and
dec
rcl
pop
sar
xchg
outsb
or
clc
fs
push
call
aaa
int
inc
cmp
dec
test
aas
push
ljmp
push
push
scas
xor
xchg
inc
test
lahf
add
stc
mov
scas
push
jg
adc
andb
jnp
jle
movsb
jl
dec
lahf
add
jge
cmp
inc
mov
jne
and
jp
jb
les
add
mov
inc
sbb
push
fcmovne
push
xor
es
add
stos
pusha
adc
and
fildll
insb
dec
add
rclb
cwtl
sti
sbb
mov
test
jo
jmp
mov
ss
sbb
out
mov
loopne
push
mov
jle
fnstsw
enter
pop
pop
or
jp
xor
pushf
into
sbb
cmp
pop
mov
mov
mov
aaa
push
jge
add
or
shr
dec
xchg
mov
xchg
aad
iret
xchg
xchg
push
fstpl
stos
inc
pusha
mov
shrb
fisttpl
or
xor
out
movsb
push
mov
inc
adc
adcl
int
and
ret
pop
outsw
lret
loop
mov
sbb
or
push
out
adc
or
rcll
dec
loope
xchg
jns
push
scas
iret
aam
jno
mov
lea
addb
mov
pop
xchg
imul
pop
leave
fldcw
fnstcw
cmp
jmp
fwait
push
jne
inc
push
mov
pop
push
loope
mov
jge
repnz
xchg
and
inc
clc
or
mov
mov
pop
lahf
pop
mov
and
mov
hlt
cmp
fstps
movsb
sahf
pop
xor
sub
and
push
mov
inc
push
jge
fildl
mov
pop
shll
ficomps
outsl
enter
pop
cld
lea
gs
xchg
mov
ljmp
subl
adc
out
in
inc
cwtl
inc
and
int3
inc
cmp
pop
add
jae
int3
js
aas
sub
adc
mov
bnd
std
push
xchg
insl
add
jmp
add
out
push
pop
fists
out
orl
cmp
add
mov
push
iret
in
popl
add
cmp
sbb
push
pushf
pop
jg
shrb
cmpsl
or
pop
dec
cli
cld
dec
and
add
addr16
mov
scas
gs
xchg
icebp
adc
inc
iret
add
adc
jno
scas
fsubs
xchg
jl
mov
jb
or
cmpl
outsb
clc
pop
dec
xor
out
xchg
je
rcll
mov
jmp
aaa
inc
push
lahf
jnp
loop
leave
jle
aaa
push
sahf
add
mov
aas
add
orb
sbb
out
mov
flds
cld
mov
fwait
mov
mov
ja
out
push
pop
mov
inc
outsb
lcall
sbb
mov
cltd
popf
mov
mov
dec
fs
jnp
imul
xlat
out
inc
aaa
pushf
jp
lcall
into
leave
test
xchg
mov
dec
mov
in
inc
fs
fwait
mov
jnp
push
mov
mov
leave
mov
int
je
adc
xchg
or
inc
lret
subb
adc
test
les
or
dec
mov
sbb
adc
or
movsl
shrb
push
and
fistpl
test
sbb
pusha
nop
mov
xchg
fbld
in
sbb
push
push
add
loopne
push
mov
aad
add
jg
inc
cmpsl
movsb
clc
add
adc
xchg
adc
push
dec
cmp
cmpsb
jg
jns
icebp
mov
loop
dec
and
and
pushf
imul
pop
out
or
leave
dec
cmc
jecxz
and
cmovl
cmp
add
cmp
je
xchg
mov
mov
ljmp
jno
dec
mov
sub
dec
dec
rolb
ljmp
mov
xchg
rcrl
int3
cld
rcrb
xor
fwait
mov
pop
xor
cwtl
pop
aas
lods
movsb
pop
in
dec
or
push
xchg
insb
cmp
jnp
call
test
xor
test
push
sub
aaa
dec
lock
aad
in
cld
cmp
movsl
aas
hlt
shlb
sub
mov
rcll
fimuls
out
lret
mov
lods
mov
stos
ss
push
stos
jnp
sub
pop
and
and
and
pop
jb
inc
push
sub
iret
inc
add
push
lods
outsl
jbe
bswap
mov
test
mov
xor
pop
inc
lock
aaa
icebp
add
inc
jmp
or
lock
xchg
push
inc
sub
xchg
add
mov
push
roll
xchg
add
ds
rcr
xchg
mov
cmpsl
xchg
int
addr16
ret
ljmp
pop
pop
mov
and
cmpsb
imul
xor
mov
mov
shrb
test
sub
mov
fnstenv
pop
xor
and
int
lds
push
jb
xor
stos
cld
sub
mov
jae
and
mov
lahf
cmpsb
in
imull
jg
scas
rol
mov
out
int3
iret
inc
loop
cmpps
push
fnstcw
pop
push
les
ja
insl
fmul
lock
push
jg
inc
bound
jbe
mov
mov
clc
push
pop
testb
frstor
xchg
inc
sub
in
repz
cld
pusha
lods
adc
scas
pop
jle
jnp
inc
xchg
das
or
adc
mov
fstpt
mov
pop
xor
repz
push
mov
testl
ret
insl
js
mov
loop
pushf
xor
lahf
scas
add
and
cs
sbbb
dec
dec
fldenv
shl
cld
push
mov
fld
cmpb
sub
data16
mov
test
jno
outsb
xchg
loopne
xchg
adc
mov
test
mov
inc
into
xlat
jg
cmp
inc
pushf
pop
pusha
mov
repnz
adc
adc
pop
pop
cmp
test
xorb
push
inc
stos
mov
push
jo
into
sbb
dec
dec
cwtl
xor
inc
push
xchg
pop
bound
rolb
jl
in
out
ficoml
sbb
cli
fcom
adc
adc
pusha
repz
into
mov
fisubrl
mov
adc
rolb
icebp
mov
scas
ljmp
xlat
test
shll
inc
int3
add
or
daa
aaa
inc
and
arpl
jnp
pop
cmc
inc
je
mov
cld
adc
mov
xor
pop
test
dec
scas
jne
jle
sub
or
mov
mov
xchg
jg
repnz
in
jb
rorb
cwtl
cmp
outsb
xor
js
sub
xchg
inc
aam
adc
lods
rorb
mov
jb
add
jg
setbe
xchg
add
mov
test
mov
fbstp
inc
xchg
push
mov
cwtl
outsl
ja
adcl
pop
outsl
push
je
pop
jecxz
cli
scas
rcl
in
sub
push
xor
pop
inc
jmp
mov
mov
mov
outsb
mov
pop
jmp
pop
loop
pop
into
dec
and
fwait
stos
xchg
and
sbb
adc
movsl
notl
pushf
fmulp
jg
cld
jnp
and
out
sahf
mov
cmpsb
mov
jbe
data16
outsb
inc
push
ss
es
cs
fdivp
into
out
out
sahf
mov
cmpsb
mov
jbe
data16
outsb
inc
push
ss
es
cs
fdivp
into
out
out
sahf
mov
cmpsb
mov
jbe
data16
outsb
inc
push
or
adc
add
repnz
loop
shr
sahf
mov
cmpsb
ds
cs
mov
push
outsb
xor
xchg
imul
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cmp
sub
sbb
or
jbe
sbb
mov
jne
gs
adc
add
and
sub
sbb
or
js
push
sarb
mov
jo
add
cmp
sub
sbb
or
js
push
movsl
mov
adc
pop
xchg
push
cmpsb
push
jno
sub
cmp
push
mov
push
fldt
jae
clc
jo
lret
mov
xchg
aad
lahf
test
test
or
mov
mov
pop
add
ss
lds
and
fdivrs
and
push
ret
jae
lcall
or
jge
sub
outsb
loopne
mov
xchg
js
cmpsb
mov
mov
loopne
add
lret
adc
xor
ret
push
arpl
in
movsl
test
push
push
mov
ljmp
mov
rcrl
call
push
cmpsl
aas
ret
sub
push
ret
add
lcall
mov
lds
cmc
or
js
push
movsl
mov
jne
gs
adc
enter
inc
mov
adc
and
cmp
and
in
popf
popa
addl
mov
insl
xchg
add
pop
loop
mov
xor
aaa
popf
jo
xchg
stos
push
enter
dec
xchg
jno
or
pop
mov
movsl
mov
jne
gs
adc
enter
sub
sbb
or
js
push
movsl
mov
jne
gs
adc
enter
in
mov
pusha
les
loope
push
inc
roll
pop
or
fidivl
sbb
subb
nop
xchg
fwait
pop
jns
ss
cwtl
test
movsb
ss
push
jne
mov
cld
mov
xchg
daa
push
sbb
fldenv
stos
ljmp
daa
add
add
jmp
lret
mov
jns
mov
fwait
pop
dec
mov
pop
aad
adc
jmp
dec
push
and
push
std
pop
rorb
inc
xchg
sbb
pop
imul
ret
testl
dec
mov
pusha
cld
push
mov
aam
cltd
cmpsl
int3
jmp
pop
mov
push
cmpb
inc
push
push
sahf
je
out
pop
sahf
xchg
adc
mov
aad
ljmp
xor
test
mov
add
jp
inc
insl
leave
iret
dec
and
inc
mov
cmp
mov
fcmovbe
dec
bound
cwtl
in
and
into
sbb
sbb
jnp
dec
mov
inc
outsb
xchg
mov
mov
and
dec
inc
add
inc
les
adc
jbe
mov
test
add
test
add
mov
push
cmp
lods
arpl
or
xor
or
sub
mov
cmp
pop
iret
ja
mov
inc
xchg
push
dec
adcl
das
xor
pushf
or
xor
pop
enter
inc
jecxz
pop
sub
pop
scas
cmpsl
iret
cmp
push
iret
int3
sarl
aas
push
ja
sar
cmp
pop
or
les
insb
jbe
mov
lods
xchg
pop
jnp
aam
fwait
sub
inc
out
pop
daa
int
mov
loope
inc
stos
mov
lret
fs
push
sbb
or
adc
xchg
std
orl
je
cltd
xor
into
les
js
sub
or
lea
sub
xor
lret
repnz
lods
sub
bound
andb
xchg
mov
mov
sbbb
sub
out
ljmp
sbb
out
loope
stos
lds
cmp
sub
stos
mov
dec
loop
ljmp
mov
mov
mov
call
xchg
hlt
dec
mov
and
in
in
jecxz
jecxz
ds
pop
loope
sbb
xchg
sti
rorl
sub
pop
ljmp
sub
les
jp
lods
scas
lods
test
ficoml
xchg
sbb
insl
andl
jbe
dec
daa
pusha
cmp
icebp
cmpsb
pushf
adc
clc
ljmp
imul
pop
sbb
popa
popf
pop
std
bound
es
fwait
lds
xor
mov
xor
xor
jp
iret
add
adc
shlb
ss
ret
mov
push
or
mov
into
sub
mov
cltd
sti
mov
adcl
add
mov
cmp
daa
push
sbb
adc
sbb
cmp
jns
or
fldl
add
and
out
mov
adc
es
jge
mov
dec
mov
shrl
jmp
dec
ret
mov
xchg
lahf
xorl
push
jle
mov
xchg
cmp
dec
mov
sbb
fdivl
fwait
sti
arpl
xchg
dec
inc
sarl
cmp
hlt
test
iret
insl
dec
push
dec
dec
or
call
jno
cltd
es
test
push
les
into
dec
movsb
sahf
mov
mov
inc
push
addl
lock
push
popf
add
inc
aad
lds
inc
fwait
push
jo
dec
enter
test
pop
mov
test
dec
cmp
adc
scas
cmc
enter
sti
inc
sbb
ret
mov
pop
fidivrs
inc
test
cld
sbb
sub
mov
test
mov
mov
in
imul
lcall
clc
push
negb
push
sub
mov
inc
jns,pt
int
aam
mov
xor
sbb
jmp
aaa
lretw
data16
loopne
xchg
addr16
daa
into
jae
cmp
enter
inc
push
daa
xor
add
inc
mov
inc
mov
imul
add
dec
mov
ljmp
and
arpl
mov
xchg
inc
cli
adcb
push
leave
push
xchg
sbb
pop
std
insb
sub
fsubl
and
jmp
push
pushl
lock
and
pop
lods
add
pop
pop
ljmp
int
mov
mov
packuswb
dec
sti
adc
divl
add
popa
sbb
cmp
inc
aad
out
pop
jnp
dec
fmuls
lods
adcb
cmp
push
sbbb
dec
xchg
mov
mov
test
jge
iret
mov
stos
mov
test
rorb
xor
mov
in
stos
mov
jo
mov
js
std
mov
decb
ret
pop
mov
in
and
dec
inc
loop
cmp
orb
ret
pop
mov
mov
outsb
outsl
lods
mov
xchg
mov
xor
hlt
aam
push
mov
sarb
jno
fwait
jne
cmc
mov
pop
test
out
aaa
rolb
add
mov
out
sbb
in
cli
push
stos
adc
mov
shll
nop/reserved
sub
mov
aas
popl
fcomps
movsl
and
lcall
js
mov
dec
or
mov
shr
mov
aaa
daa
sub
jns
test
mov
mov
loopne
cs
aas
xchg
push
jae
mov
into
xor
lock
lahf
inc
mov
ljmp
inc
mov
cli
push
jp
ljmp
test
nop
in
push
jbe
mov
xchg
sub
outsb
mov
mov
inc
icebp
bound
mov
mov
mov
jne
cmp
inc
negb
cmp
mov
shrl
dec
jp
cli
call
jae
arpl
aad
fwait
pushf
and
jg
mov
fimull
and
std
cltd
and
pop
jbe
inc
adc
lods
in
wbinvd
push
and
inc
lods
xor
ret
push
mov
mov
push
mov
sub
scas
cmp
int3
fs
inc
sub
push
in
push
adc
loopne
outsb
pop
fyl2x
clc
outsb
inc
pop
iret
mov
sahf
cmp
out
das
or
sub
outsb
jp
xor
and
mov
out
lods
xor
outsb
dec
sub
jno
dec
push
sbb
xchg
mov
cs
push
aad
leave
xorb
movsl
sub
cli
loopne
mov
mov
fbstp
cmp
lcall
xor
lahf
int3
mov
adc
jno
imul
lahf
adc
mov
call
pop
jg
push
inc
mov
sub
cltd
subl
adc
mov
sahf
pop
test
mov
js
push
out
xadd
stos
ljmp
mov
out
into
lea
sbb
cmc
outsb
sti
decb
ja
sub
push
sub
jae
xlat
push
pop
jle
fstl
and
sbb
pop
scas
push
cmp
popa
xchg
sub
and
jecxz
flds
cs
adc
fwait
inc
and
ljmp
adc
and
mov
mov
sahf
aaa
addr16
shl
mov
pop
pop
shlb
data16
aas
aaa
repnz
aam
fildl
jbe
pop
ret
in
jnp
ret
cmp
jmp
sub
cmp
lds
lods
das
rcr
inc
call
mov
outsb
add
sbb
mov
cmpb
cmp
aam
sub
adc
push
daa
addr16
push
lcall
rcrb
jp
or
insl
xlat
fnstcw
mov
inc
pop
mov
cltd
sub
icebp
xchg
in
xchg
sub
push
push
sub
adc
outsb
rcl
pop
mov
xor
inc
inc
sub
scas
xor
jb
cwtl
pop
cli
jno
push
dec
in
pusha
mov
gs
int
dec
outsb
push
jp
jle
xor
imul
test
mov
rolb
dec
fucom
or
or
cmp
movb
pop
push
xor
lock
jl
aam
pop
pop
pcmpeqd
aaa
push
inc
dec
and
mov
pop
mov
jne
out
js
mov
add
divl
mov
and
mov
xor
scas
sbb
add
dec
cwtl
ret
stc
sarl
mov
cmp
mov
jnp
push
push
adc
mov
lods
cmp
cltd
xchg
mov
pop
sahf
mov
sbb
pusha
aaa
insb
mov
imul
mov
sbb
loopne
cmpsl
or
inc
movsl
mov
mov
pop
bound
out
andb
andl
dec
insb
dec
push
sbb
fdivrs
inc
test
je
jb
cmpsb
and
cmp
mov
test
pop
push
cld
andb
dec
xor
mov
stos
sahf
ja
jg
in
lods
call
sar
adc
dec
je
pop
stc
test
add
nop
idivb
lds
stos
dec
test
jae
leave
or
and
pop
icebp
push
push
mov
push
or
pop
mov
xchg
addb
push
xor
imul
dec
push
push
mov
repz
xchg
aaa
lret
hlt
fadds
mov
push
adcb
dec
push
mov
sbb
adc
in
loop
cmpl
xchg
mov
cmp
jne
movsl
dec
mov
lods
sub
jb
pop
lret
sbbl
xchg
add
leave
pop
int3
sub
pop
or
aaa
add
sti
add
into
ljmp
cmp
xor
dec
daa
orb
jb
mov
dec
jno
pushf
jl
inc
add
fcmovnu
std
test
loope
jns
out
in
out
xchg
movl
inc
and
fdivrs
jecxz
cltd
dec
imulb
cmp
add
dec
push
xor
pop
ret
mov
mov
adc
push
int
mov
adcl
xor
arpl
pop
push
loope
and
int
scas
sbb
subl
movsl
pop
stos
push
inc
mov
mov
mov
mov
loop
lds
push
inc
mov
push
adc
inc
xchg
out
outsl
lock
into
sbb
jl
and
jecxz
add
leave
in
std
mov
xor
and
push
call
enter
lods
in
das
mov
push
test
imul
jle
cmp
loop
adc
cmp
jle
out
fistpll
and
dec
mov
sub
pop
sbb
aam
dec
sub
xchg
adcl
das
divb
inc
and
adcl
sbb
and
jg
xchg
dec
addl
xchg
or
shll
jge
icebp
mov
mov
mov
int3
mov
jl
jge
mov
inc
nop
dec
cmp
nop
adc
pop
flds
iret
leave
or
cld
popf
fcomi
mov
ja
addl
push
inc
mov
xchg
mov
sub
lret
jne
jecxz
aaa
jo
pop
leave
rcrb
mov
popa
lret
cld
fdivrs
test
pop
call
loop
aaa
and
xchg
cmp
push
mov
insb
test
ret
mov
sbb
leave
push
sbb
inc
jg
xor
jp
pushf
rcr
stc
push
lahf
subb
and
por
mov
shll
loop
push
add
or
inc
rcrl
dec
das
mov
mov
idivb
sbb
mov
mov
aam
stos
aam
clc
das
sub
popf
add
jg
adc
or
or
leave
mov
or
and
sbb
popf
and
inc
aam
mov
xor
lock
mov
sbb
je
xor
pop
or
pop
push
data16
push
leave
add
imul
sub
subb
insb
mov
fsubs
outsl
push
jmp
pop
test
jmp
pop
imul
andb
into
push
push
fildl
fcompl
mov
and
filds
push
pop
imul
adc
adc
sarb
repnz
xchg
mov
into
push
int
adc
lds
add
sbb
imul
dec
dec
xor
loope
jg
xchg
clc
xor
jne
ja
mov
cmp
or
je
test
pop
insb
insl
repnz
popa
in
jns
and
pop
jg
jge,pn
push
rcr
jb
orb
clc
jno
xchg
mov
mov
sti
lds
cs
jecxz
mov
xor
push
nop
add
in
mov
push
adc
out
popa
add
cmp
shr
xchg
std
enter
pushf
sti
call
cmpsl
mov
sbb
xor
pop
imul
mov
mov
mov
addr16
aam
in
lret
sti
sub
pop
outsl
sahf
setbe
and
addr16
add
stos
fisttpll
mov
into
hlt
adc
add
in
shrl
sub
and
sub
xor
mov
xchg
xchg
sbb
loopne
adc
xor
fwait
aad
sbb
pusha
push
ja
cs
sbb
jb
retw
xchg
insb
dec
mov
loop
cli
cmc
test
bnd
bound
xchg
inc
ret
mov
lahf
push
lahf
push
pop
pop
jno
sub
jne
inc
hlt
and
xor
in
sub
cli
add
mov
out
sar
fadds
xchg
dec
sbb
lds
jmp
mov
or
dec
fisubs
add
push
sub
add
xor
pop
jnp
xor
xor
and
popf
or
fs
icebp
lret
stc
mov
shlb
in
or
nop
outsb
or
arpl
cmc
das
aad
sub
out
in
mov
cld
adc
repnz
xor
in
adc
lahf
add
and
out
popa
outsl
in
stc
or
decl
jge
dec
inc
stos
iret
cmpb
iret
push
jns
nop
test
loopne
repz
or
dec
lods
push
testl
xchg
dec
leave
mov
imul
lock
es
movsl
fwait
xor
ja
aam
sbb
and
jne
repnz
pushf
and
icebp
push
xchg
movsb
popl
mov
lock
push
stc
loopne
adc
maxps
shrl
scas
fidivrl
in
shlb
sub
mov
mov
xchg
std
das
push
cwtl
arpl
adc
mov
imul
push
lock
mov
cmp
pop
xchg
je
xchg
sbb
mov
add
pop
xor
iret
add
mov
pusha
pop
imul
ret
push
push
in
add
out
inc
sub
xor
icebp
push
call
movsb
inc
clc
fstpt
into
in
jb
jecxz
cli
repz
pop
push
stos
mov
xchg
dec
mov
aam
int3
daa
sbb
sahf
fwait
setl
inc
mov
lret
jns
cmc
clc
shll
push
rcll
inc
lods
in
jae
push
sbb
and
out
xchg
mov
xchg
or
dec
adc
nop
popa
scas
mov
into
mov
cwtl
outsb
stos
cmp
pop
les
mov
jmp
sub
xchg
aaa
test
mov
aad
pushf
filds
or
in
jb
rol
adc
jg
and
out
lahf
pop
in
lds
push
lcall
cmp
shlb
les
adc
xchg
pop
loop
lcall
loope
in
push
xchg
xor
rclb
mov
mov
cld
cmp
or
push
cmp
je
add
les
xor
jns
pop
data16
jecxz
rclb
rorb
loope
push
mov
inc
jne
iret
mov
pop
pushf
push
mov
cld
mov
repnz
lret
test
into
jle
pop
jo
out
or
mov
arpl
rcrl
cmp
int
mov
jl
sbb
loope
mov
les
pop
mov
pop
movsl
mov
dec
mov
pop
ds
cmpsb
push
pop
sub
xchg
in
subl
cmp
std
loopne
push
inc
out
add
mov
cli
or
jp
fsubr
add
xor
mov
fisubs
lds
fs
int
xchg
inc
cmc
cld
in
jg
sub
xchg
dec
xchg
into
fs
jge
or
aaa
cld
pop
shll
shlb
lcall
imull
cmp
sahf
rcll
dec
xor
cmp
push
and
sbb
decb
xor
add
push
mov
sub
add
jge
lds
sarl
cmp
seto
inc
hlt
movsl
mov
fsub
and
xlat
repnz
loope
adc
insl
imul
xor
jecxz
inc
out
add
js
adc
aam
sarl
or
sar
mul
imul
sbb
loope
jae
jl
lcall
mov
nop
popf
mov
add
jb
cmp
sub
dec
xchg
cld
mov
cltd
out
inc
mov
mov
and
xor
testb
cmovbe
insl
out
jp
cmp
push
fcmovnbe
dec
push
push
sub
pop
cs
andl
movsb
dec
lret
xchg
data16
shll
jnp
hlt
cmpsb
ds
jne
push
fisttps
sbb
dec
inc
and
jne
add
dec
jbe
test
repnz
push
or
addr16
pop
rolb
mov
fldenv
mov
adc
mov
xor
mov
jns
lret
in
mov
cltd
or
push
rol
and
pop
rclb
testb
push
outsb
adc
inc
push
add
pop
arpl
mov
pop
fldt
test
pop
addb
inc
push
xor
jne
in
sbb
add
nop
push
sahf
fwait
imul
add
dec
stos
dec
in
insb
xor
pop
test
mov
jl
jg
jbe
fdivrs
mov
cmp
outsl
ss
sbb
xchg
adc
xor
jno
dec
icebp
fisttpl
mov
jecxz
push
jp
jecxz
dec
or
mov
cmp
mov
push
scas
inc
mov
push
fisubl
adc
push
mov
enter
push
pop
cmp
negb
lods
imul
sbb
mov
jle
les
push
mov
std
bound
cmp
fdiv
xor
jo
imul
pop
call
cld
mov
sub
add
popf
fdivr
or
mov
push
hlt
add
add
mov
mov
mov
mov
jle
or
aad
lods
addr16
xor
and
jle
inc
sub
cwtl
ss
mov
insb
loope
fbstp
sbbb
faddl
mov
gs
fimuls
inc
inc
xlat
inc
leave
scas
inc
rol
repz
repz
aad
cltd
test
push
dec
pop
cmpsb
push
pop
fldl
sub
sbb
lcall
push
or
incb
xor
xchg
xchg
shrb
fidivl
push
aaa
sub
push
xchg
mov
xor
mov
cmp
ret
insb
mov
rorb
out
jp
sub
cmp
push
xor
fildll
in
cmp
cmp
fstpl
fnstsw
hlt
std
loope
js
cli
inc
sarl
enter
mov
repz
sub
inc
hlt
sbb
ret
stos
arpl
mov
jb
iret
popa
fisubl
mov
sbb
push
iret
xchg
pop
out
test
jbe
sbb
mov
test
dec
cmc
idivl
jl
pop
xchg
rep
in
dec
gs
xchg
inc
pop
outsl
in
imul
loop
sub
mov
pop
add
pop
push
lea
and
clc
inc
lea
fisubs
push
add
sub
out
out
fld
mov
inc
aas
sbb
mov
push
jb
rcl
push
out
sub
les
idivb
push
iret
ss
sahf
xor
lcall
sbb
dec
add
addr16
mov
pop
std
sahf
mov
popa
loopne
loope
jp
fbstp
outsl
inc
pusha
dec
ljmp
inc
cmp
shll
ret
mov
mov
hlt
push
movsl
cmp
out
inc
pop
setns
pop
imul
sub
sbb
lcall
pop
lcall
fldl
cs
mov
xor
roll
sbb
adc
lret
push
dec
mov
leave
sub
cltd
mov
push
push
pop
dec
aaa
pop
cltd
insb
sahf
inc
dec
loope
data16
bound
xchg
sub
imul
push
push
or
cmp
jns
fsubs
xchg
lds
mov
lea
out
jb
adc
sahf
das
es
in
dec
and
jne
lret
sub
outsb
insl
or
sbb
rcrb
in
xchg
push
movsl
mov
jne
gs
adc
enter
sub
sbb
or
js
push
movsl
mov
jne
gs
adc
enter
sub
sbb
or
js
push
movsl
mov
jne
gs
adc
enter
sub
sbb
or
js
push
gs
jne
adc
lret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sub
mov
ret
faddp
lods
fcompl
and
pop
inc
sub
bound
into
int
ffree
lods
sarb
add
jge
dec
xor
inc
push
cmp
cmp
pusha
std
xor
push
fsubrl
repnz
insw
xor
aas
push
cmp
jns
push
arpl
outsb
in
sahf
fidivs
sarb
inc
mov
or
mov
sub
outsb
mov
aaa
pop
in
lods
push
cmp
jg
hlt
sbb
cmpsl
pop
into
cmp
or
xlat
lock
cmpsl
movsb
fisttpl
movsl
xchg
cmp
push
cmp
lock
adc
or
stos
mov
pop
test
flds
pop
mov
out
arpl
xchg
adc
mov
pop
jb
jge
lahf
lods
sbbb
xor
out
mov
and
push
cmp
jge
pshufw
cmp
test
fdivs
jl
cs
mov
dec
iret
sub
jno
fldln2
std
mov
lods
stos
mov
les
jge
dec
add
sub
jb
jmp
loopne
int
lret
repnz
add
jl
sub
xor
pop
or
iret
mov
cwtl
shrb
mov
pop
in
stc
gs
add
push
dec
cmp
inc
cmp
jb
test
loope
xchg
adc
loop
repnz
add
jge
dec
xor
sub
jb
sub
std
mov
lods
sarb
add
jge
dec
xor
sub
jb
sub
xchg
pusha
and
or
add
imul
fcomip
mov
mov
into
xchg
jbe
xlat
lock
mov
add
popw
or
fadds
or
xchg
imul
addr16
push
cmp
loop
lcall
cmp
fs
daa
movsl
ljmp
lods
mov
aam
mov
dec
mov
mov
mov
mov
aas
adc
stc
pop
aas
and
adc
jae
pop
mov
icebp
push
jb
movsl
xor
out
mov
out
add
sbb
dec
sbb
mov
push
into
lcall
movsl
inc
sbbl
inc
and
xchg
das
rol
pusha
test
rclb
test
mov
push
fisttps
lock
adc
xchg
out
xor
sbb
insl
add
cmpsl
mov
and
mov
xchg
mov
push
dec
mov
xchg
jb
mov
outsb
push
ret
sarl
pop
add
scas
aaa
push
aad
mov
xor
jmp
xchg
pushf
aam
fisttps
push
cmpsl
stos
adc
ficoml
jo
addr16
aaa
stc
adc
pop
stc
cmp
mov
push
xor
jo
addr16
xor
ljmp
imul
jl
xchg
push
adc
pop
insb
ja
inc
inc
aad
imul
data16
cmp
dec
repnz
dec
xor
push
mov
mov
enter
pushf
inc
nop
xlat
pop
add
movsb
dec
in
xchg
ja
daa
dec
xchg
dec
aas
mov
rcrl
mov
int3
jmp
sbb
mov
scas
insb
test
xchg
cmpsl
mov
mov
sub
lret
xchg
imul
mov
push
push
cld
inc
xchg
mov
inc
inc
int3
and
fwait
loope
jbe
into
pop
ds
loopne
sbb
in
add
xor
iret
dec
jb
and
xor
adcl
inc
pop
push
rcrb
mov
jo
sub
test
int
lahf
xchg
outsl
sbbl
cmpsb
mov
pop
jg
pusha
jge
mov
addr16
adc
mov
push
xor
mov
dec
mov
mov
in
and
cltd
push
jg
aaa
mov
test
jmp
jnp
pusha
outsb
std
addr16
aam
sbb
inc
pop
insb
je
incb
push
ja
jecxz
or
push
clc
lcall
out
sub
dec
and
sub
out
mov
xchg
xchg
mov
push
jecxz
mov
stos
insb
lret
mov
dec
add
adc
negl
outsl
pop
lret
inc
pop
inc
cmpsb
loope
mov
add
sbb
stos
sub
push
adc
stos
dec
push
or
pop
cmp
pop
mov
jns
addb
pop
dec
insl
pushl
jo
leave
xor
lret
push
push
add
push
sbb
push
push
adc
dec
or
rcrb
mov
js
call
adc
cmc
sbb
mov
push
sti
pop
es
fisttpl
aas
out
out
sahf
jl
rdpmc
push
push
call
sbb
sub
ss
fstpl
repz
cmp
call
ret
mov
push
push
jecxz
mov
pop
lods
enter
insb
shr
mov
les
inc
mov
jmp
test
inc
js
or
jo
scas
mov
popf
and
mov
cmp
fwait
push
ja
std
dec
jo
xchg
push
mov
and
addl
push
sub
int
or
jae
mov
sbb
mov
lea
aad
mov
in
ja
enter
add
dec
shrb
clc
xchg
cmp
jmp
adc
adc
jb
cmp
mov
sarb
dec
pop
aad
loop
xor
mov
mov
push
out
pushf
adc
dec
fmuls
jp
mov
or
daa
mov
pop
mov
pop
dec
daa
mov
test
int
cli
sbb
xchg
mov
lods
stc
dec
lods
inc
jb
fwait
pop
adc
stos
cmpsl
sub
inc
jno
push
xchg
pop
rol
popa
sbb
add
cmpsb
dec
cmp
clc
cmp
pop
mov
call
das
jne
cld
cmpsl
xor
mov
pop
inc
push
popf
arpl
stos
or
or
dec
xor
cmp
add
inc
push
sbb
xor
add
push
mov
jmp
add
jbe
push
jmp
sub
sub
aad
test
and
loope
mov
les
xbegin
out
jb
in
sub
adc
mov
cmp
mov
icebp
roll
inc
jbe
cmc
insl
sbb
test
lea
push
iret
sbb
push
sub
adc
out
roll
orl
xor
adc
nop
push
sub
adc
iret
and
or
and
jp
cmp
inc
outsl
sbb
lret
mov
xchg
lods
stos
sbb
test
sbb
mov
sbb
out
xchg
jo
aad
inc
ss
cld
pop
jmp
pop
adc
outsl
in
leave
dec
mov
xor
sahf
lods
popa
pop
adc
insl
adc
fnstcw
subl
loope
inc
aad
ja
sub
dec
pusha
adc
mov
addr16
dec
pop
adc
or
imul
mov
xchg
cmp
scas
inc
in
cli
mov
nop
add
stc
push
call
frstor
repz
inc
jmp
add
xor
or
ja
push
pop
pop
adc
sub
and
stos
adcb
xchg
or
jns
push
sub
aam
test
lahf
outsl
and
dec
push
in
out
lret
sbb
lcall
pop
xchg
push
add
pop
dec
test
jecxz
pushf
lods
inc
or
iret
fbld
xchg
push
js
cltd
movhps
sbb
or
cmc
cmpsl
mov
xchg
popa
lock
mov
js
in
dec
das
or
dec
dec
sub
mov
scas
add
dec
dec
hlt
mov
lds
xchg
idivb
call
es
jl
jo
jp
aad
ret
cmp
mov
mov
lds
jle
adc
repz
add
cli
or
jmp
push
push
out
mov
es
add
or
test
push
out
mov
jo
fisubrs
shll
adc
mov
jns
sbb
inc
popa
jno
sub
and
leave
rolb
push
add
cmp
in
sbb
addl
stos
call
cmp
int3
and
cmp
outsb
pop
cmp
pop
in
cmp
jp,pn
gs
lcall
jl
repnz
loopne
inc
cmpsb
vmovaps
mov
lock
insl
inc
jge
addl
icebp
in
mov
jecxz
fwait
or
add
enter
xor
hlt
xor
mov
pusha
jnp
push
out
es
xor
mov
dec
mov
jle
shll
std
lods
mov
fwait
mov
icebp
mov
pop
mov
push
adc
dec
cwtl
scas
cmpsb
leave
out
lret
sub
pop
cld
in
sbb
dec
push
clc
andl
popf
sbb
pusha
fcmovb
loopne
call
fldcw
xchg
out
xor
sbb
cli
gs
xchg
mov
add
adc
int3
fnstenv
mov
sahf
cwtl
push
jle
cmp
cmp
rclb
mov
mov
cmp
xor
xor
xor
pop
inc
inc
mov
lods
push
ss
sbb
aam
pop
repz
xor
pop
daa
cmp
xchg
xchg
jae
out
aad
or
and
mov
sub
arpl
adc
fadd
mov
sub
xor
cmpl
mov
scas
fwait
inc
sub
pop
jle
mov
subb
dec
mov
into
fwait
xchg
mov
dec
jnp
sub
jle
je
add
test
jge
adc
xchg
enter
inc
or
push
mov
pop
ret
and
mov
call
les
loopne
mov
cmp
push
loopne
pusha
and
imul
fwait
pushf
jo
or
cld
mov
cli
out
jl
jl
shr
sbb
sarl
rorb
jmp
inc
sbb
dec
mov
or
jecxz
int
ja
adc
mov
in
idivl
mov
xor
stos
icebp
mov
adc
jle
xchg
mov
jmp
lods
adc
jne,pn
mov
xchg
push
add
fucomi
pop
mov
push
test
enter
enter
pop
inc
divb
stos
cmp
add
mov
push
mov
test
pop
in
cmp
loop
test
in
or
jo
xchg
jmp
adc
loopne
popf
out
scas
xchg
cs
in
dec
xor
lret
ret
push
cmpsb
and
clc
jo
push
sub
lahf
hlt
call
mov
xor
popf
mov
pop
les
inc
cmp
sti
adc
dec
mov
cmp
xor
insb
scas
sbb
cltd
xor
ficompl
aam
adc
ficompl
push
cmpsl
lret
fwait
or
sbb
aas
cmp
or
or
or
rcll
imul
lret
adc
stos
jb
pop
or
cmp
outsl
in
xchg
add
movsl
jl
daa
loop
aas
lcall
mov
sbb
jmp
sbb
cmc
insb
xchg
lret
lods
adc
push
adc
inc
push
xor
in
cld
stos
sub
push
inc
lcall
pop
sbb
jno
fidivs
mov
cmp
mov
fldcw
xor
adc
lcall
sub
jb
jo
stos
cmp
les
test
in
jb
and
mov
popf
or
rcrb
fidivrl
repz
lea
mov
dec
pop
cmp
or
xor
fcompl
cmc
xor
mov
outsl
xor
adc
xchg
imul
outsb
mov
loop
mov
mov
daa
and
xor
mov
fstl
outsl
les
xor
out
das
push
xlat
add
es
sbbb
addr16
lea
cld
fildll
roll
out
std
push
pop
mov
ja
fs
add
cmp
outsb
clc
cmpsl
xchg
mov
lret
jecxz
mov
not
pop
xchg
adc
andb
out
dec
jmp
sbb
roll
push
lea
and
leave
scas
jle
pop
imulb
push
lahf
pop
icebp
or
pop
out
in
pusha
jne
js
inc
mov
mov
in
push
int
pop
dec
fldl
mov
call
in
dec
insl
sbb
mov
inc
faddl
adc
sub
add
mov
pop
sub
mov
repz
fistpll
add
jae
lock
cmp
in
jmp
push
dec
nop
push
push
sarb
dec
and
ljmp
hlt
enter
push
push
ja
pop
push
stc
jbe
addr16
int3
push
cwtl
sahf
call
in
fsubrs
jns
into
cmp
sub
add
js
lock
sbb
jmp
jns
pop
or
push
out
fwait
stc
jmp
add
paddsw
sub
lds
aas
or
lret
pop
mov
push
adc
sahf
cld
loope
mov
mov
or
lods
add
jbe
test
fcomps
fdivl
inc
mov
sub
stos
pop
or
shrl
mov
cmp
and
mov
insl
and
xchg
in
iret
jg
push
in
jb
adc
xchg
outsl
nop
outsl
jno
inc
sti
mov
push
mov
divl
sbb
aas
push
dec
or
sub
sbb
or
jge
popa
je
mov
pusha
dec
or
daa
sahf
stos
cmpsl
clc
test
adc
push
test
xchg
inc
and
mov
stos
push
sub
push
jmp
lahf
dec
mov
loop
jl
or
jns
in
and
and
xchg
or
movsb
mov
and
sbb
movsb
dec
pop
jns
shlb
pop
adc
pop
jo
inc
mov
in
mov
jl
ret
xor
movsb
push
leave
pop
or
push
in
mov
repz
mov
add
imul
ret
popf
jb
js
or
add
dec
cmc
insb
bound
mov
cs
sahf
sbb
pop
sbb
and
push
inc
mov
sub
mov
lock
outsl
je
ret
add
dec
mov
jge
fimull
sub
fsubp
mov
fists
call
and
cmp
div
iret
inc
mov
jmp
adc
sbb
cmp
lret
lds
lret
inc
in
xchg
rcr
jns
sub
xchg
mov
scas
lods
into
push
in
in
out
shr
sbb
sarb
pop
mov
aad
test
jae
sub
lcall
dec
dec
xchg
jne
lahf
adc
into
push
pop
scas
jo
jg
dec
lock
mov
cmp
jmp
dec
inc
fucomip
sub
jnp
outsl
mov
or
loope
das
shlb
ljmp
jb
sub
adc
rorb
mov
jb
sbb
out
loope
or
push
fildl
push
addr16
jecxz
jle
or
insl
mov
mov
dec
jecxz
mov
aaa
arpl
out
sbb
xor
or
adcl
sub
sbb
mov
addl
adc
cmp
hlt
jb
pop
inc
pop
mov
outsb
int3
ljmp
xchg
test
mov
push
pop
arpl
cmp
popa
push
scas
fisttps
jle
icebp
popa
repz
or
mov
outsl
stos
out
out
outsl
enter
mov
jmp
sbb
shll
xlat
dec
lea
inc
push
std
lcall
mov
repnz
cmc
ror
inc
out
dec
std
sahf
fbstp
sar
inc
cmp
xor
sub
xchg
stc
mov
mov
sbb
lcall
lret
and
and
lret
sar
fldt
in
pop
test
test
sbbl
pop
push
mov
in
in
fwait
out
mov
scas
stos
pop
pop
vmaxsd
xchg
repnz
push
adc
cmp
ds
insb
pop
es
mov
movsl
cmpsl
out
ret
loope
sub
add
fiaddl
hlt
cltd
sub
sbb
je
pusha
outsb
iret
xchg
or
mov
repz
pop
int3
hlt
push
jns
mov
mov
cmp
xchg
sub
xchg
jmp
and
mov
pushf
pop
or
loopne
push
jle
sti
mov
fsubp
and
sti
mov
sbb
add
sbb
or
lret
mov
xor
cs
cmpsl
rol
in
das
add
stos
ljmp
test
test
popa
sti
cmpb
sbb
cmpsl
cmp
lock
loopne
scas
mov
mov
cmp
mov
and
cltd
sbb
and
ret
fsubs
hlt
xchg
sbb
sub
outsb
iret
push
in
push
mov
sahf
mov
jge
sarb
mov
mov
scas
out
pop
fidivl
jo
nop
pop
es
cmp
add
push
adc
outsl
dec
cmp
mov
mov
push
cs
and
imul
add
sarb
test
arpl
enter
jmp
mov
aas
push
jg
inc
movsb
jp
in
sub
adc
inc
jb
std
aad
jbe
cmp
mov
daa
test
cmp
mov
inc
push
or
xchg
mov
fistpl
add
cld
xor
xchg
pusha
lahf
fisubl
data16
insb
pop
cmp
shl
pushf
sti
aaa
sti
mov
jge
popa
jg
nop
out
ficomps
cld
stos
mov
cli
pop
arpl
xchg
leave
mov
shlb
sti
sub
push
icebp
xor
push
adc
xor
inc
push
push
push
pop
pop
int3
sti
inc
inc
cs
xchg
fimuls
adc
cmc
js
dec
push
and
xor
mov
xchg
iret
pop
push
inc
arpl
mov
pusha
outsb
mov
pop
mov
adc
std
out
scas
fsts
loope
xchg
bound
inc
cmp
and
mov
mov
push
pop
mulb
testb
out
enter
test
ret
icebp
call
es
fisttpll
out
push
add
cmp
mov
inc
sub
aam
and
mov
jne
fimuls
loope
mov
into
in
test
or
stos
rolb
mov
sub
das
dec
push
mov
inc
xor
inc
cld
jmp
mov
shl
push
xor
and
cmpsl
mov
std
je
pusha
in
lcall
mov
rcll
pushf
jno
test
aad
repz
push
jb
cwtl
enter
push
stos
sub
hlt
cltd
xor
es
icebp
push
addr16
daa
stos
popa
mov
mov
out
fidivrs
lods
orl
fcmove
pop
jp
add
cmp
jmp
sbb
dec
sub
mov
jg
std
mov
fadds
arpl
fsubl
sub
jle
movsb
cmpsb
sbbl
mov
testb
xchg
mov
cs
jo
ss
stos
and
adcb
jecxz
ret
sbb
out
clc
jb
jmp
mov
fcmovnb
lahf
push
test
xor
ja
shl
mov
add
cs
push
in
or
mov
xor
mov
inc
andb
divb
push
adc
mov
add
lret
lret
dec
sbb
lret
nop
sub
fcmovb
ds
pusha
push
ss
repz
call
jns
bound
out
lods
aam
push
cs
push
aad
inc
xor
mov
out
push
jb
mov
sbb
pushf
push
out
in
mov
push
pop
mov
lock
adc
jbe
push
dec
cmp
lds
pop
pop
test
out
int3
loope
outsb
lods
xor
imul
stos
jmp
ficomps
ja
pop
arpl
nop
inc
pcmpeqb
mov
in
fimuls
sti
mov
push
in
in
cmp
ja
rcll
jecxz
jns
ja
or
js
lcall
adc
les
int3
int
rcrl
adc
adc
es
out
lock
out
sbb
xchg
aaa
imul
lds
pop
addr16
pop
int
xchg
sbb
stos
ljmp
repz
xor
mov
mov
cmp
jbe
dec
mov
stos
xchg
pusha
in
mov
lea
sbb
jae
xchg
jp
or
inc
enter
cld
jns
jno
xor
out
jns
jp
xchg
add
push
mov
daa
outsb
dec
xorb
lret
iret
mov
push
clc
repnz
xlat
xchg
outsb
sub
jge
push
jg
insb
shll
lcall
fsubr
shll
jo
rorb
dec
repz
out
inc
lcall
cmp
fildll
xor
cmp
roll
push
cmp
popf
dec
scas
sub
jae
idiv
mov
imul
movsl
push
cwtl
adc
jg
mov
jmp
and
mov
and
add
ret
xchg
add
cmpb
cmpsb
push
xchg
sub
dec
sbbb
pop
cmp
push
lock
push
aas
mov
incb
ret
xor
je
push
cmc
aas
rcll
es
mov
shlb
xor
mov
push
fnstenv
xchg
adc
push
div
push
loopne
xchg
mov
or
aas
or
fildl
mov
je
sub
mov
notb
adc
cmp
testl
cmp
daa
mov
sub
xor
and
mov
out
hlt
or
stc
add
push
add
aad
add
mov
pop
xchg
xor
push
fxch
or
jge
push
int3
lret
in
xchg
xchg
jae
cmpsl
addl
sub
js
popf
lock
pop
sub
ja
ret
fs
iret
daa
dec
in
fldl
adc
push
jmp
lock
add
jnp
rcrl
jb
into
negb
cmp
stos
pop
dec
out
fimuls
adc
in
dec
or
or
std
in
mov
ret
mov
add
jge
dec
xor
sub
jb
sub
std
mov
lods
sarb
add
jge
dec
xor
sub
jb
sub
std
ret
fstl
sarb
add
jge
dec
xor
sub
lcall
int
ffree
lods
ret
lea
add
xlat
mov
sub
repnz
loop
add
or
sbb
gs
sbb
cmp
push
mov
dec
pushf
dec
in
ds
cs
push
fmull
sub
cmp
or
sbb
insb
mov
pop
mov
pushf
dec
in
pop
std
dec
push
fmull
sub
cmp
or
sbb
insb
cmpsl
jl
dec
xchg
popf
lahf
push
cld
sub
dec
in
jg
inc
pop
pop
xchg
jne
arpl
ja
add
dec
fs
xchg
in
pop
fwait
sbb
ja
and
fwait
push
shlb
xor
push
mov
mov
adc
xor
mov
push
lea
add
adcw
scas
scas
xchg
add
sti
test
lret
in
ja,pn
dec
loopne
push
sub
sbb
iret
ficomps
incb
subl
pop
jno
xor
mov
xchg
push
fs
mov
cs
sahf
pop
push
mov
xlat
lods
repz
add
pop
dec
mov
push
fdiv
adc
les
ss
add
call
jg
jp
dec
negb
insl
scas
pop
or
ficomps
out
cmp
or
sbb
insb
mov
pop
xchg
lods
mov
inc
pushf
push
in
es
cmp
push
fsubrl
fwait
pop
out
dec
fistps
or
adc
and
fsub
fcoml
fsts
decl
fldenv
push
mov
arpl
dec
out
outsl
scas
pop
lret
or
aaa
pushf
or
sbb
fiadds
fisttpl
icebp
sub
movsl
jb
imul
mov
jns
sub
jl
dec
sahf
pop
mov
pushf
dec
in
ds
cs
push
fmull
sub
cmp
or
sbb
insb
mov
pop
mov
pushf
dec
in
ds
cs
push
fmull
sub
pop
imul
and
popw
call
icebp
inc
lds
lock
or
push
xchg
pop
mov
fcoms
cld
shrl
lods
pop
scas
jo
cld
repnz
sahf
ret
adc
sbb
cwtl
xchg
aad
fistpll
jmp
jae
push
push
mov
ficoml
mov
and
insb
sub
ret
sbbb
dec
iret
aad
gs
jp
outsl
mov
mov
inc
stos
mov
sub
jbe
insb
pop
out
xchg
push
arpl
sbbb
je
lret
jne
sbb
out
fwait
sbb
ja
jle
sub
fdivp
jb
mov
pop
movsl
dec
push
and
fists
sub
and
lds
push
mov
popf
test
cmpsb
mov
dec
sbb
inc
mov
leave
sbb
inc
or
sub
insl
or
sbb
cmpsb
xor
ds
mov
xor
notb
faddl
testl
lock
cmp
add
repnz
stc
out
lahf
sbb
leave
cmp
push
inc
pop
imul
mov
inc
xor
sbb
enter
fdivrl
arpl
dec
xchg
bound
or
mov
mov
mov
xchg
scas
inc
sub
nop
out
push
hlt
and
repnz
inc
sub
xor
incb
cli
sub
jl
das
cmp
loope
push
outsb
push
jecxz
push
stos
mov
xor
inc
xor
js
mov
fldt
mov
push
movsb
cli
adc
cmpsb
jecxz
inc
lret
pusha
jmp
push
xor
out
testb
sub
push
jle
inc
test
sbb
lods
jg
pop
xchg
stos
jp
loop
movsl
icebp
mulb
push
lods
test
shll
sub
das
dec
cmp
std
movsb
scas
leave
jle
inc
pop
dec
adc
lret
jge
inc
jnp
mov
cmpsb
mov
mov
leave
leave
mov
xor
stos
cmpsl
sub
imul
daa
mov
stc
movsb
lret
push
lods
pop
and
cmp
lods
rclb
ret
add
outsb
fldenv
jbe
inc
pop
je
mov
cltd
fwait
push
or
sub
mov
sbb
in
bound
push
inc
fldl
inc
dec
lret
and
or
xchg
ficoms
inc
repnz
fdivrl
int
fadds
add
mov
sti
add
es
out
mov
clc
dec
mov
aaa
ds
and
fstl
js
rcll
xchg
pop
sahf
cmp
pop
mov
jo
fldt
in
lret
mov
scas
ljmp
sbb
cld
add
mov
sbb
add
imul
or
add
xchg
and
dec
out
sbb
mov
cli
mov
mov
lds
or
ss
jno
ljmp
outsb
test
inc
cmpsl
sbb
test
int
mov
insl
adc
jbe
sub
xlat
xchg
jge
jne
sub
cmp
mov
adc
xor
shll
rcll
in
sub
adc
jae
jmp
and
imul
cmp
mov
pop
cmp
jb
mov
in
ljmp
scas
mov
clc
call
call
sub
outsl
push
cmpsl
or
addr16
pop
add
push
es
shrl
out
jmp
fisubrs
fistps
dec
jne,pt
push
aam
popa
lret
sbb
or
jl
xor
sbb
movsb
repz
sbb
xchg
adc
mov
sub
push
out
xor
das
lock
pop
pusha
sbb
out
push
and
xchg
rcll
idivb
hlt
mov
add
js
cmp
xchg
jp,pt
mov
in
mov
aaa
mov
mov
scas
shll
popf
xor
jae
add
imul
fsub
inc
insb
daa
daa
add
scas
hlt
cmp
push
gs
pop
notb
mov
cld
xchg
sub
mov
cld
mov
push
test
stos
pusha
sub
push
or
dec
push
mov
sti
xor
inc
pop
jbe
jge
jmp
mov
mov
add
sbb
sbb
mul
xorb
add
cmpsl
test
daa
dec
repnz
xor
mov
mov
pusha
sbb
mov
pop
jbe
and
roll
cwtl
sbbb
lods
fstpt
scas
fs
adc
aad
cltd
xchg
push
stc
int3
sarl
mov
push
cltd
jo
adc
xchg
out
xchg
sbb
mov
out
jno
cwtl
xor
jno
pushf
insl
and
sub
jns
fbld
dec
and
xor
or
pop
cli
mov
sarl
sbb
sub
dec
jmp
sarb
mov
popf
movsb
shrl
fistps
sub
stos
test
filds
addb
xorl
test
cwtl
sbb
or
add
pop
rolb
aas
repz
mov
ljmp
jns
push
mulb
sub
adc
pop
and
out
and
and
jae
pop
sbb
dec
mov
mov
jno
mov
and
xor
or
lret
cmpsb
rcl
roll
fstl
mov
arpl
xor
leave
test
jne
and
push
push
test
push
dec
jmp
mov
std
cmp
xor
xor
aas
adc
sbb
and
roll
mov
sbb
ret
mov
jb
insb
push
cmpb
enter
adc
outsl
fs
repnz
fisubrl
inc
sub
cmc
push
dec
sub
mov
sbb
push
mov
mov
add
jge
test
or
mov
arpl
mov
cmpsl
addl
test
lods
int3
lret
lods
ret
fsubs
push
int3
cltd
pop
and
push
push
pop
push
rclb
inc
add
mov
int3
in
mov
fstl
test
arpl
jmp
in
outsb
dec
pop
and
fimuls
mov
mov
cmp
gs
pushf
mov
or
loop
mov
pop
push
sarl
iret
mov
repz
push
add
mov
out
pop
pop
jno
mov
cmp
std
fucomi
xchg
jle
inc
dec
jns
call
aaa
sbb
mov
fwait
jb
cmp
sarb
lcall
mov
and
sbb
int3
sub
push
test
fwait
and
push
cmp
in
xchg
lods
ret
test
cmpsb
fwait
mov
movsl
dec
add
lahf
xchg
push
loop
outsw
xorb
jae
cmp
bnd
loope
call
push
lret
cmp
push
dec
arpl
aaa
cmpb
mov
cmpsl
sahf
add
scas
enter
lahf
mov
outsb
cmp
dec
gs
in
cs
cs
pop
testl
push
xor
stc
test
xor
pop
test
push
or
hlt
popa
cmp
cmpsl
mov
in
call
inc
mov
xor
mov
adc
cmp
aaa
aas
inc
aaa
mov
adc
pop
mov
fcoms
js
xchg
cltd
add
xchg
fnstcw
mov
shrl
data16
adc
xchg
xlat
cmp
stos
aam
insl
pop
leave
mov
negl
je
int
mov
shl
xlat
mov
mov
lock
add
pop
pop
jle
or
fsubrs
scas
fldl
mov
pop
or
rorl
lahf
fadd
xchg
adcl
mov
je
pop
iret
popl
ds
shr
stos
lods
or
test
pop
sbbb
mov
sbb
icebp
jl
and
test
sarl
int
flds
test
or
mov
mov
hlt
rol
int3
mov
pop
pop
jmp
add
dec
xor
inc
inc
test
add
out
mov
push
mov
add
aam
or
popf
add
fbstp
es
sub
mov
sbb
mov
xor
cwtl
call
sub
push
mov
mov
test
lahf
lcall
push
fs
inc
ljmp
inc
mov
sbb
or
out
inc
and
xlat
popa
test
jne
loope
stos
mov
xchg
mov
inc
add
sbb
cmp
push
dec
into
insl
loopne
mov
dec
and
xchg
mov
or
imul
sub
add
adc
lahf
dec
daa
or
pop
xchg
inc
push
sbb
xor
les
sbb
and
lock
clc
fucomp
cltd
fadds
das
jno
cmpb
or
iret
into
hlt
xor
pusha
xchg
mov
sbb
xor
cmp
inc
lcall
and
adc
test
dec
insb
sub
cli
in
out
sbb
insb
dec
and
sub
jp
sti
es
cmp
dec
outsl
scas
push
pop
test
data16
push
mov
test
incl
scas
mov
ret
shll
sbb
lret
shl
jnp
ret
test
sbb
pop
outsb
aas
pop
mov
push
repnz
andb
ror
mov
push
mov
and
push
imul
or
cmp
jp
test
pushf
lahf
mov
test
xor
cmp
mov
jns
push
sub
sub
into
jle
mov
xchg
push
popf
pushw
imul
sarl
in
ds
sahf
pusha
cmpsb
out
add
jmp
ret
cmp
add
xor
test
lret
mov
adc
mov
or
mov
clc
xchg
ficompl
loopne
mov
fstpt
push
sbb
rorl
push
pop
cmp
dec
adc
stc
clc
pop
mov
clc
and
mov
inc
xor
mov
xlat
push
mov
add
dec
ficompl
xchg
jno
dec
out
lods
das
mov
xor
hlt
ss
pusha
jmp
push
sar
add
xchg
mov
sub
call
in
inc
sub
dec
push
mov
adc
inc
pushf
xchg
movsl
jcxz
push
outsl
inc
jne
pusha
and
sbb
inc
lock
mov
pushf
insb
jl
mov
sahf
xchg
clc
daa
iret
sti
xchg
jnp
mov
xor
fildl
xor
imul
cmp
loop
fldl
xchg
lcall
mov
test
push
stos
adc
mov
sub
add
pop
and
fdiv
fs
jmp
or
mov
cmpsb
ds
hlt
cmpsb
les
and
test
in
or
jae
mov
std
scas
mov
inc
xchg
ret
inc
fnsave
into
lea
push
cmp
icebp
pop
sub
mov
sbb
push
xor
andb
push
cmp
testl
popa
xchg
outsl
jb
mov
aas
loopne
lcall
and
sbb
xchg
xchg
jnp
sets
movsb
dec
popa
xor
mov
sub
sti
js
and
out
loop
sbb
jecxz
xchg
sub
jg
add
leave
popa
dec
mov
fadd
mov
ret
sub
mov
fiadds
or
jl
sbb
jp
jnp
loope
je
mov
mov
neg
nop
dec
sbb
and
add
repnz
pop
push
das
fmull
or
mov
pop
adc
push
adc
outsb
pop
mov
std
xchg
in
mov
fcomip
in
fs
int3
inc
xor
lods
adc
je
jae
je
xchg
fnstenv
or
xor
sub
xlat
push
push
cmpsl
enter
mov
sbb
xchg
cmp
loopne
cmp
xlat
jge
inc
mov
test
decb
jle
mov
cmp
xchg
mov
jbe,pt
xchg
lods
cwtl
into
sbb
rclb
hlt
inc
cmpxchg
add
loopne
int
mov
sbb
fwait
adc
out
fstl
xor
aam
pusha
cmpsb
out
xchg
lcall
sahf
or
push
lahf
mov
xor
xor
cltd
mov
cmpsl
jg
inc
inc
sub
repz
mov
fcoms
test
and
jb
movsl
mov
jnp
add
fcomp
and
subl
sbb
jno
mov
je
xor
std
mulb
movsl
lahf
loopne
nop
jmp
aam
cld
and
aaa
or
into
pop
sub
fsubl
and
mov
add
and
iret
push
and
push
mov
jge
xor
cltd
test
push
lea
mov
fwait
add
fcomi
push
adc
sarb
rorb
sbb
mov
push
test
cmp
jo
jns
jmp
mov
xchg
inc
pop
push
inc
mov
jle
jmp
pop
aas
inc
roll
cs
inc
cmc
js
cmc
xlat
push
cs
xor
xlat
adc
movsb
and
pop
dec
data16
test
or
loope
sub
cmpb
test
popa
iret
fwait
insl
xor
insl
mov
mov
ret
add
ds
dec
or
or
mov
lock
vshufps
inc
or
lock
pop
or
mov
and
aad
loop
data16
xor
jne
mov
roll
inc
xchg
jnp
or
xchg
jne
pop
xchg
stos
in
mov
pop
push
lods
adc
inc
cs
jns
stos
adc
sbb
pop
aaa
inc
jb
pop
mov
mov
cmpsb
ficoms
adc
subl
mov
add
inc
cmp
push
adcb
lret
or
arpl
adc
aad
ret
xchg
or
stos
push
xor
sti
push
leave
ss
lds
outsb
outsl
mov
jmp
mov
or
and
rcrl
imull
push
and
insl
add
rolb
das
es
xchg
jno
pop
daa
xchg
cwtl
ds
sub
int
aaa
mov
pop
dec
aam
cld
cmp
pop
fcoms
and
lods
jno
xchg
dec
mov
ficompl
aaa
lods
cmp
xchg
setbe
jbe
jg
sbb
jp
fdivrl
bound
xchg
or
loop
insl
add
shrl
dec
popa
mov
mov
iret
push
mov
das
fsubrp
test
sbb
or
iret
ficoms
mov
mov
das
push
lock
jae
test
imul
test
mov
cmc
xchg
dec
ds
xchg
lods
and
inc
mov
dec
lods
aaa
xchg
sbb
add
ljmp
dec
bound
icebp
xchg
mov
cs
xsha256
cmpsb
adc
pop
aad
mov
adc
and
mov
mov
stos
rorb
mov
inc
inc
lds
ret
gs
xchg
addb
pop
imul
xor
sub
dec
jno
fwait
jbe
cmp
cli
jnp
push
arpl
pop
ret
pop
lea
mov
mov
dec
sbb
sbb
jle
xorl
mov
pop
jno
cmp
mov
push
mov
icebp
imul
inc
dec
mov
pop
lods
mov
jb
fwait
mov
andb
mov
rcrl
sahf
faddl
cmp
jle
add
mov
pusha
iret
sbb
pop
sahf
lcall
sbb
sub
inc
sahf
xor
rorl
fucomp
pushf
lahf
cmpsb
les
inc
in
sub
and
sub
inc
xchg
mov
xchg
push
imul
pushf
rcr
pop
mov
mov
dec
roll
pop
ret
add
cmp
push
cmp
lret
pusha
lods
jo
mov
adc
or
inc
sbb
out
je
adc
lods
shrl
jno
imul
lret
arpl
fimull
sbb
mov
and
loopne
push
insb
cmpsl
aad
in
rorl
jno
jne
cs
outsl
ds
jns
js
mov
inc
mov
or
popa
cmp
pop
xchg
adc
jo
fisttpll
leave
add
jno
insb
jbe
clc
push
cmp
imul
in
xlat
inc
idivb
cmp
out
pop
in
pop
mov
les
fwait
mov
xor
and
cmp
push
jae
cmp
shrb
outsl
xchg
mov
push
jb
call
pop
push
jns
dec
inc
fwait
sub
xchg
mov
fcmovnb
jno
test
cli
call
inc
pop
xor
xchg
lret
sub
jno
out
cwtl
dec
shlb
enter
scas
mov
and
arpl
loopne
jb
push
xchg
mov
push
dec
jb
aas
fisttpl
mov
incl
mov
ja
xchg
mov
out
jecxz
and
in
in
sbbb
loope
ret
push
inc
addb
and
lret
aas
dec
stos
jne
ficomps
test
std
inc
jae
jg
inc
das
dec
rcl
push
in
fistps
rorl
sub
lret
pop
cli
arpl
adc
lds
add
sub
vpsrad
icebp
sbb
xchg
and
xor
pushf
pop
mov
push
das
jb
leave
imul
sub
adc
fs
cmp
fwait
inc
xchg
sub
test
shrl
cmc
pusha
ret
stc
mov
mov
rorb
dec
xor
or
jno
cmpsb
mov
lds
imul
out
push
mov
adc
iret
in
das
mov
dec
jp
leave
adc
fisttpl
sbb
cmp
js
fisubl
or
xlat
dec
mov
addr16
push
push
sub
add
cs
sub
jbe
and
mov
iret
mull
sahf
fsubr
subl
sub
jnp
dec
sub
xchg
ja
jl
and
int
lcall
repz
jb
mov
ds
sbb
imulb
sub
dec
sbb
pop
mov
in
dec
cmp
lret
inc
fcomi
mov
movsl
or
fcmovbe
negl
cmpsb
mov
push
cmp
sbb
mov
xchg
sub
sbb
mov
call
push
xorl
pop
inc
or
xor
nop
dec
fsts
test
mov
pop
rcr
loopne
jge
adc
pop
dec
fwait
popa
loop
xchg
daa
mov
gs
pusha
pop
aam
and
orl
sahf
clc
mov
pop
adc
jne
mov
jae
xchg
push
xchg
out
cmp
in
ret
mov
hlt
mov
jns
repz
mov
inc
xor
hlt
lret
push
dec
imul
outsl
xchg
or
pop
call
adc
adc
mov
shll
lds
xor
and
jp
xchg
adc
push
push
xor
mov
sti
and
fldt
and
into
mov
xor
push
lods
shlw
mov
je
mull
mov
mov
lods
push
jb
mov
std
xchg
xor
pop
inc
imul
rorl
mov
addr16
lock
xlat
add
mov
mov
in
and
sbb
popf
stos
mov
clc
lods
and
dec
fiaddl
jb
push
xchg
cmc
out
cld
nop
loop
popf
inc
outsb
loopne
add
xchg
cli
jp
scas
push
cmp
cmp
cmp
outsb
inc
adc
in
daa
fistpl
rcll
xchg
or
cmp
cld
mov
cmc
jne
or
cs
push
mov
mul
sbb
pop
or
in
test
stc
xchg
sti
cmp
loope
js
icebp
fdiv
mov
and
dec
shll
inc
dec
or
andb
lock
scas
insl
mov
das
sub
sbb
or
pxor
outsl
pusha
inc
sahf
inc
adc
jno
and
loop
out
int
pop
divb
jbe
jecxz
popa
xchg
std
cmp
and
sbbl
push
out
out
out
sub
xchg
pop
packssdw
adc
cld
xchg
pushf
jne
loopne
mov
outsl
sub
rorb
sub
arpl
mov
popa
dec
dec
adc
ret
loope
stos
loopne
mov
push
in
mov
and
mov
pop
mov
lahf
ljmp
out
sbb
inc
hlt
pusha
jb
ja
scas
fisubrs
and
shl
dec
xor
outsb
insl
jmp
cwtl
stc
mov
rorb
icebp
andb
out
leave
mov
aaa
add
xchg
xchg
inc
xchg
mov
adc
mov
outsb
dec
cmp
test
scas
aas
daa
mov
test
ret
push
cli
inc
sub
xlat
jl
jae
or
dec
int
and
mov
xor
sbb
insb
mov
pop
mov
pushf
dec
in
ds
cs
push
fmull
sub
cmp
or
sbb
insb
mov
pop
mov
pushf
dec
in
ds
cs
push
fmull
sub
cmp
or
sbb
insb
mov
pop
mov
pop
popf
dec
in
ds
cs
fmull
sub
cmp
or
sbb
insb
mov
fmull
es
pushf
cmp
loope
icebp
ja
xchg
adc
and
mov
popl
xor
es
jb
subb
inc
ljmp
add
adc
and
xor
push
pop
bound
ljmp
mov
lods
mov
fisubl
stos
adc
and
mov
icebp
cld
std
jmp
ficoml
mov
jl
push
jge
icebp
jne
fstps
dec
stos
mov
add
and
scas
pop
lahf
cmpsl
sti
lods
mov
and
mov
inc
xchg
scas
jno
into
xor
cmpsl
push
ret
popa
mov
pop
jecxz
jg
add
pop
sbb
mov
adc
push
les
cli
andnps
gs
je
add
and
add
pop
mov
xchg
cmp
dec
lea
xchg
jne
ja
call
mov
in
lret
jmpw
push
jb
sar
andb
mov
xchg
ljmp
ret
in
scas
or
add
mov
inc
adcb
pop
mov
lahf
loop
jbe
add
loop
cmpsb
data16
cs
pop
mov
cmp
xchg
cli
lcall
pushf
dec
push
pop
adc
fs
ss
cmp
fcmovnb
jmp
lret
fistl
mov
mov
pop
adc
cmp
and
inc
out
mov
mov
push
dec
push
aas
es
pop
bound
mov
mov
ljmp
add
adc
and
xor
push
pop
bound
mov
mov
ljmp
add
lds
fildl
cmp
inc
sbb
mov
mov
jns
dec
dec
aam
out
call
std
test
pop
mov
cmpsl
dec
rorb
fs
cltd
lock
xchg
cwtl
data16
inc
insl
push
fisubs
call
push
pop
mov
xchg
sbb
lahf
dec
js
cwtl
cmp
mov
ret
enter
out
pusha
fists
jbe
pop
mov
stos
call
ds
mov
mov
add
and
std
jne
loopne
roll
push
outsl
pushf
push
xchg
mov
pusha
ss
mov
ja
pop
popa
loop
push
sahf
fcomip
out
jge
adc
jne
in
and
xor
inc
push
dec
movsl
loop
int3
inc
mov
mov
add
std
stos
dec
inc
pop
stos
lcall
inc
xchg
out
pushf
jno
xchg
mov
popf
adc
aad
push
sub
add
mov
mov
mov
inc
jno
rol
aaa
jno
or
out
xchg
or
push
lea
setb
mov
fsubs
jmp
sub
cmp
dec
rcrb
stc
mov
adcb
ret
aad
test
dec
movb
xchg
mov
fyl2xp1
repz
dec
xchg
adc
lods
inc
stos
fiaddl
repnz
inc
or
dec
cmp
std
out
pushf
imul
dec
loop
jmp
repnz
jne
addr16
ret
pop
imul
and
ror
ljmp
pushf
xchg
fimull
js
cmovnp
pop
das
inc
sub
sbb
lahf
jne
repnz
mov
jle
test
test
aam
movsl
and
xrelease
out
scas
jbe
pushf
clc
lret
inc
sub
or
xor
fwait
and
dec
nop
popf
sar
fcom
mov
jns
into
pop
mov
push
push
es
sub
loopne
andl
add
mov
insl
lea
or
or
or
inc
push
leave
mov
sub
push
pop
je
push
adc
cmpsl
leave
sti
mov
mov
aam
cmp
ret
or
out
push
in
rolb
mov
mov
push
sbb
sbb
dec
mov
mov
cltd
cmp
test
mov
out
pop
cmpsb
mov
add
scas
inc
popf
test
arpl
sbb
arpl
cmp
mov
xchg
sub
pop
inc
cwtl
pop
std
dec
push
pop
divl
xchg
xor
add
sbb
es
push
add
lods
mov
cmp
movsl
xchg
insb
lret
sbbl
pusha
out
sbb
addl
ds
gs
lret
inc
jnp
mov
xchg
xchg
dec
add
and
cmp
aas
cmp
int3
pop
leave
mov
data16
lods
and
nop
movsb
int
jle
mov
sbb
ja
inc
jecxz
and
fimuls
int3
mov
repnz
outsl
inc
mov
leave
pop
repnz
mov
mov
insb
mov
lods
ret
data16
xor
into
push
insb
stos
out
int3
mov
fisubrs
or
dec
dec
movsl
push
xchg
add
inc
out
xor
inc
popa
jge
push
inc
or
cmpsl
push
pop
hlt
movsb
out
or
xor
push
cmp
inc
inc
bound
and
and
xor
sub
mov
testl
orb
les
fadd
sbb
clc
jle
push
lock
dec
and
aaa
loope
lcall
out
in
out
sbb
sub
mov
cmp
pop
iret
cld
mov
push
inc
popa
dec
push
xchg
js
cmp
dec
mov
shll
movsb
jo
or
adc
pop
jecxz
mov
icebp
imul
jno
xchg
push
inc
lret
xor
push
pop
mov
arpl
adc
or
add
mov
negb
sbb
xchg
test
sarl
mov
push
pop
xor
push
xchg
mov
mov
cwtl
ss
jae
jg
faddl
mov
outsb
mov
xchg
dec
xor
aaa
lods
xchg
mov
int
shlb
das
jle
das
jmp
sub
icebp
inc
int3
xor
daa
dec
push
lock
lods
jno
into
push
xchg
test
ret
push
mov
mov
mov
imul
sub
xchg
scas
mov
popf
jbe
xchg
loope
scas
stc
sbb
adc
mov
mov
xor
lods
out
mov
dec
push
nop
jo
push
mov
inc
mov
add
and
mov
push
sbb
sahf
sarl
test
loopne
inc
cmp
cltd
jbe
push
mov
and
dec
test
gs
in
sahf
lcall
sub
and
jne
dec
js
xor
sbb
fnsave
push
decl
sub
insl
jmp
cmp
mov
sub
sub
inc
mov
aaa
xchg
mov
adc
fsubl
sti
ret
lret
sbb
xchg
and
pop
sub
mov
ficompl
xor
aas
xlat
addr16
call
inc
xor
imul
xchg
hlt
dec
sbb
rcrl
xlat
xor
mov
or
cmc
inc
add
outsl
push
mov
lods
pop
addb
pop
out
ficompl
pop
xor
jmp
mov
cltd
rolb
imul
stc
mov
cmpb
incl
iret
xchg
jecxz
jne
jo
lods
in
fdiv
and
call
in
push
xor
in
hlt
mov
loope
jge
mov
in
mov
dec
cmp
daa
out
lea
jns
xchg
ja
mov
dec
xchg
sbb
leave
dec
mov
nop
and
or
push
adc
and
adc
push
in
pusha
pop
sbb
sti
sbb
sub
xchg
mov
sub
ret
pop
popa
daa
lods
je
test
push
scas
into
popf
push
mov
aaa
xchg
push
stc
imul
pop
mov
jmp
fcomp
jecxz
es
scas
and
movsl
push
fildll
std
imull
test
or
xor
jmp
inc
mov
pop
imul
movsb
jnp
fs
jp
add
push
inc
and
cmpl
adcl
push
orl
push
pop
addr16
or
sub
sbb
lock
pop
pop
mov
pop
jno
push
fsin
outsb
mov
ds
cltd
sbb
scas
add
aaa
hlt
loop
inc
pop
cmp
jbe
data16
fidivrs
adc
fnstenv
popa
jecxz
enter
mov
ljmp
sti
cmp
xchg
in
inc
xor
and
xchg
imul
in
jg
outsb
pop
insl
dec
out
xor
cmpsb
test
add
and
inc
dec
push
call
out
ret
lock
stc
push
xor
and
xchg
and
inc
stos
dec
dec
sub
pop
pop
push
mov
popa
aas
sti
mov
andl
mov
or
mov
call
push
adcl
pop
inc
fildl
popa
sbb
xor
or
gs
push
das
mov
lcall
cmpsb
add
xchg
add
loop
sbb
in
std
in
dec
out
mov
add
cmp
mov
push
dec
std
scas
shl
arpl
std
sub
into
test
scas
bound
mov
jp
and
mov
imul
repnz
lret
ljmp
out
adc
push
loopne
insl
and
xchg
pop
das
repnz
mov
sbb
dec
das
fisttpll
xchg
out
shrl
fsubp
stos
repnz
not
jnp
jmp
mov
cmpb
cmp
cmp
movsl
and
test
mov
jns
pusha
adc
lods
sti
or
scas
cmc
lcall
aam
jne
fs
mov
lahf
stos
dec
xlat
or
add
push
insb
sbb
ljmp
imul
cmc
and
shlb
or
pop
xlat
dec
lods
stos
int3
inc
and
sbb
lods
cmp
pushf
mov
pop
adc
lea
outsl
inc
xchg
and
je
addr16
std
pop
add
mov
std
push
out
arpl
pop
pop
pop
mov
pop
mov
xchg
sahf
mov
cmpsb
jmp
pop
mov
xchg
jb
add
movsb
insb
pop
dec
pop
xor
push
jbe
pop
dec
mov
sbb
ljmp
sub
mov
aad
or
adc
jno
jmp
rorb
popa
or
mov
sahf
in
sti
data16
and
clc
push
pop
data16
cmp
fucomp
repz
mulb
and
sbb
and
jg
lea
mov
out
mov
iret
stc
jae
fnstenv
cld
imul
sub
inc
cmpsl
jge
sub
dec
mov
inc
in
mov
cwtl
push
addr16
test
cmp
xchg
lods
hlt
push
jle
mov
mov
outsl
fstl
fs
aaa
cli
mov
insl
or
into
ret
ljmp
mov
fdivr
adc
jecxz
and
mov
aaa
sub
mov
pop
nop
ja
push
push
pop
xchg
in
push
clc
jl
mov
jecxz
xor
in
js
inc
fcoml
pop
cmova
std
ja
outsl
pusha
mov
std
cmpsb
sarl
cmpsb
dec
xor
popa
adc
icebp
mov
js
jb
pop
lock
mov
arpl
cmp
fsubl
rorl
push
or
out
jno
mov
jl
push
jne
mov
popf
imul
ljmp
ja
out
cwtl
adc
pop
dec
dec
cmp
addr16
and
and
xchg
adcl
dec
sbb
mov
and
jae
sarl
push
ss
jmp
push
sbbb
xchg
mov
dec
jp
in
sti
mov
sahf
xor
jno
daa
or
lahf
cmp
xchg
sbb
xchg
dec
mov
fistl
mov
into
adc
imul
addr16
inc
clc
sub
arpl
ljmp
fsubrl
dec
add
shll
sahf
daa
dec
add
mov
or
mov
fistl
inc
adc
adc
test
incb
aas
stos
pop
mov
mov
jo
pusha
in
cs
and
cmp
loop
in
subb
iret
lock
jnp
les
mov
pop
sbb
ret
aaa
cmp
dec
pop
in
fsubr
das
lds
cmp
sarb
sub
test
cld
cmp
sti
sbb
ljmp
popa
mov
hlt
fisubrs
mov
jns
fs
ret
fimuls
cmp
insl
xchg
push
and
cmp
sbb
aam
int3
rorb
test
cmp
incl
imul
lahf
mov
cmp
pop
dec
shll
jno
jb,pn
add
lahf
and
into
lock
or
xchg
mov
push
loopne
mov
into
inc
js
jae
imul
aad
lret
cmp
je
movsb
push
popf
jmp
and
xor
loop
ljmp
stc
scas
repnz
aad
pop
and
orb
scas
jp
mov
mov
xchg
mov
sbb
nop
jp
dec
push
leave
ss
inc
jb
mov
add
scas
setl
sahf
jp
movsl
ja
call
cwtl
mov
inc
cmpsl
mov
aad
nop
roll
sbb
inc
xchg
push
adc
aaa
mov
cmp
adc
jle
fiaddl
xchg
push
push
xor
shrb
jecxz
movsb
das
pusha
iret
cli
mov
cmp
pop
rorb
push
movl
lcall
pop
xchg
bnd
pop
adc
xchg
ret
inc
fiaddl
enter
aad
add
or
lret
rcll
rcrl
mov
stos
jno
test
adc
xchg
iret
cld
mov
outsb
lods
imul
popa
xchg
and
pop
dec
push
jae
fs
jnp
rcrl
std
cmp
push
sub
add
dec
fstl
arpl
out
push
std
jge
adc
cmpsl
decl
out
ss
inc
fistl
adc
lds
jl
add
push
cmp
test
jno
mov
push
ret
addr16
call
fistpll
iret
ss
mov
mov
xchg
mov
out
rclb
rcrl
sub
or
mov
test
pop
movsl
cmp
push
jae
movsl
sub
scas
dec
xchg
cmpsl
sub
addr16
sahf
adc
jae
add
unpckhps
fs
mov
add
sbb
fidivrl
daa
fiaddl
or
fmulp
lcall
hlt
js
cmp
enter
bnd
ret
les
xor
jnp
std
dec
popf
pop
aaa
loopne
add
pop
fcomip
ss
jno
push
outsb
mov
mov
mov
jmp
js
les
push
jge
sbbl
push
push
adc
push
fcmovnu
mov
dec
pop
icebp
ffreep
mov
mov
inc
jecxz
mov
mov
push
mov
movsl
notb
imul
adc
cmp
xchg
jns
mov
pop
xchg
repz
xor
push
imul
xor
jne
mov
mov
inc
mov
pop
repnz
cmp
notl
xor
mov
and
add
sbb
lods
mov
insb
add
pop
sbb
fmuls
iret
dec
adc
idivb
lret
gs
notb
push
fldcw
inc
and
mov
cwtl
enter
clc
pusha
adc
pop
pop
int3
jae
cli
andl
adc
icebp
push
inc
xlat
xor
xor
jns
movsb
mov
repnz
lods
subb
cmc
cmc
adc
aad
js
fdivrl
ljmp
lods
mov
jo
in
xor
int
ss
cmpsb
mov
xchg
insl
or
jno
pop
mov
and
jle
test
inc
insl
sbb
xchg
cmpsl
test
mov
loopne
pop
push
xchg
cmp
adc
xchg
xchg
push
or
jbe
dec
mov
push
cs
cmpsl
mov
mov
sub
add
cmpsb
xchg
std
lods
sub
push
push
jo
push
orb
ret
fsubl
push
xor
std
dec
mov
outsb
testl
cwtl
cmp
clc
shll
push
lods
test
jne
daa
insl
pavgb
mov
jecxz
cmpsl
fdivr
inc
cmp
mov
sub
imul
cmp
jge
inc
mov
jp
jp
mov
jl
inc
sbb
mov
not
push
xchg
loope
jg
push
imul
je
fidivrl
jns
pop
cmp
xor
mov
jo
mov
and
sub
add
push
ljmp
sub
lds
orl
faddl
movsl
arpl
mov
push
inc
dec
mov
test
out
and
int3
lock
stc
add
iret
mov
xchg
lock
test
push
stos
dec
push
aad
lods
mov
stmxcsr
shrb
add
rorl
inc
and
nop
add
lds
sub
shll
adc
fsubr
add
mov
push
imul
xchg
jns
pop
xchg
mov
rcrl
cmc
inc
gs
push
int
out
and
xchg
fwait
int3
fcomps
and
negl
inc
adc
xchg
or
xchg
imul
and
stc
dec
testl
sub
out
mov
mov
mov
mov
xchg
outsb
xorl
pop
xor
push
mov
pop
out
ds
loop
adc
push
out
loope
xor
mov
mov
mov
fisttps
loop
sbb
imul
mov
adc
mov
loopne
notl
std
fst
es
mov
fsubrl
adc
add
adc
aas
sub
lods
cltd
cld
add
push
sub
sub
mov
mov
fsts
test
add
mov
mov
xchg
jg
int
xor
lret
dec
popa
jmp
jmp
pop
ljmp
daa
dec
hlt
fimull
call
mov
or
or
and
mov
cmc
sbb
push
xor
iret
fisubl
hlt
jne
xor
icebp
jo
insl
mov
cld
mov
pop
mov
es
in
xor
mov
sbb
pusha
jmp
inc
mull
inc
scas
adc
mov
pop
dec
dec
fistpll
jns
dec
pushf
cmp
dec
jae
scas
jns
or
cwtl
push
cwtl
loope
mov
sbb
mov
add
lret
sub
dec
iret
jge
ljmp
pop
mov
loop
cmp
lock
in
ja
push
jmp
pusha
xorl
dec
dec
clc
mov
jnp
xor
lods
shlb
loopne
adc
jecxz
sub
pop
js
ret
cwtl
aad
lods
mov
orl
iret
pushf
fwait
mov
jo
push
mov
sbb
jbe
fldenv
pop
push
cli
or
rcll
xchg
fs
push
add
popa
mov
push
push
mov
jmp
int
xor
out
add
negw
mov
inc
push
scas
lods
mov
test
jb
lcall
movsb
test
pusha
scas
xchg
leave
xchg
inc
retw
loope
shrb
xorb
leave
fidivl
sar
cmp
jge
scas
mov
inc
les
out
mov
movsl
call
lock
jecxz
shrb
xchg
jecxz
aas
pusha
pop
inc
xchg
lret
movsl
dec
mov
sub
daa
stos
push
pop
dec
rorb
test
add
lods
int3
mov
loop
adc
out
cmp
jnp
cmp
iret
xchg
into
sub
insb
lods
xor
push
out
addr16
loope
fcoms
mov
es
mov
pop
cwtl
int
pop
add
pshufw
inc
dec
sub
jns
arpl
xchg
pop
mov
fstpl
out
loopne
fnstenv
push
test
xchg
loope
testl
cwtl
fildll
hlt
adc
test
cmpsb
add
pushf
mov
sahf
je
fwait
mov
mov
loop
das
leave
push
fwait
push
cmpsb
popf
nop
push
out
push
jmp
mov
sub
iret
insl
ret
aad
loopne
mov
insl
icebp
pop
test
lret
mov
rorl
out
or
out
xor
mov
stos
xchg
xorl
mov
test
xlat
clc
xchg
pop
imul
aam
xor
mov
ret
leave
lods
mov
and
dec
fadds
fcmovnbe
add
test
mov
js
aaa
in
and
cmc
xor
dec
addl
and
jmp
sub
iret
jle
lods
adc
or
lahf
or
dec
pop
xchg
add
aas
xlat
mov
jg
scas
rcl
imul
test
inc
cmp
lds
sub
test
cmp
cwtl
jns
or
clc
mov
lahf
les
adc
out
jne
push
mov
test
clc
pop
clc
xor
add
dec
pop
jb
and
arpl
jno
roll
jmp
mov
jmp
jmp
sub
icebp
xchg
scas
sahf
mov
jecxz
and
shrl
imull
jo
xchg
int3
imul
imull
sub
push
popf
push
fisttpl
sbb
or
enter
lods
arpl
arpl
dec
jl
jo
jmp
sub
lcall
les
les
out
ret
sub
cmc
cli
dec
and
std
lahf
jg
cmpsb
fs
dec
loop
out
sarb
enter
mov
mov
inc
sub
or
mov
xor
lret
clc
js
xor
sub
scas
mov
mov
fists
mov
xchg
adcb
gs
lods
pop
leave
cmc
jg
dec
ss
pop
inc
sbb
mov
mov
lods
ss
je
push
ja
insl
cltd
cli
sub
mov
mov
cmp
sbbb
xchg
int
sbb
test
jne
jp
mov
cmp
push
in
sub
and
scas
imul
inc
sub
scas
cmp
mov
fsubs
cld
sbb
int
add
ljmp
pusha
jge
mov
mov
scas
fldt
jmp
sub
xor
dec
bnd
lods
insb
enter
push
or
push
push
xchg
decl
mov
lods
push
or
iret
js
cmp
xchg
ja
fwait
sub
arpl
sub
cs
lds
push
stos
xor
enter
jns
pushl
and
sbb
adc
pop
fnsave
dec
push
xor
push
pop
bound
mov
mov
ljmp
add
adc
and
xor
push
pop
bound
mov
mov
ljmp
add
pop
or
xor
outsb
cli
pop
bound
mov
mov
repz
ret
and
push
adc
inc
jp
pop
loop
jb
jge
cmp
mov
bound
pusha
leave
jo
inc
jmp
inc
imull
sbb
shrb
mov
sub
flds
push
stc
and
adc
shrb
pusha
or
cmp
jo
inc
jmp
xor
loopne
roll
mov
dec
cmp
leave
adc
inc
lea
or
aas
or
imul
rcl
xchg
lock
sti
cltd
sbb
scas
push
fbstp
data16
movsl
in
mov
hlt
jne
aas
imul
xchg
xlat
sub
cmova
and
adc
mov
lock
sub
nop
cmp
jo
sub
push
in
pop
mov
jmp
ds
mov
dec
add
movsl
sbb
aas
scas
add
mov
adcw
or
pop
inc
xchg
lods
dec
repz
sub
and
inc
ret
bound
cmp
mov
dec
aas
insl
clc
jns
idivb
cmp
push
stc
and
adc
shrb
mov
sub
or
scas
cmp
fs
adc
loopne
xchg
xor
pop
test
mov
stos
pop
add
jmp
jne
js
inc
mov
ret
adc
in
pop
in
add
popf
cmp
insb
in
cltd
add
lock
shrb
mov
sub
flds
push
stc
and
adc
shrb
mov
sub
int3
fstpl
jg
fimuls
jmp
out
xchg
push
rcrl
daa
rorl
fwait
notl
in
push
push
mov
sahf
stos
sbbl
add
sub
dec
pop
sbb
fs
loop
lds
add
push
dec
mov
jo
adcl
mov
sub
and
test
and
hlt
imull
and
pop
data16
pop
addb
int3
sbb
inc
dec
pop
outsb
mov
inc
loopne
pop
cwtl
cmp
inc
ret
xchg
lods
add
inc
jle
shll
xor
lods
jnp
push
jle
push
jg
mov
adc
push
adc
dec
cmpb
fsubrl
gs
jge
cmp
shll
xchg
popa
pop
test
xor
mov
xchg
xor
mov
aad
repz
pop
into
movsb
dec
mov
in
out
scas
sbbl
rclb
adc
cmp
out
outsb
pusha
mov
imul
test
and
fdivr
in
add
jns
mov
test
cmpsb
xor
push
sbb
jo
addr16
nop
or
xchg
div
mov
pop
aad
xchg
pushf
sub
jmp
js
cld
and
and
add
adc
shll
rol
jl
inc
cmc
dec
push
add
addr16
outsb
or
daa
push
and
jb
and
stc
rclb
pop
pop
jb
outsb
xlat
add
cltd
dec
test
popa
sbb
and
cmp
or
fsts
inc
inc
cmp
cmp
bnd
adcb
mov
sti
in
int3
inc
jp
js
lret
push
push
inc
cmp
lret
cmp
mov
insl
mov
push
sub
xlat
fstpl
xor
movsl
sbb
adc
xorb
imul
sub
add
cmpb
popf
inc
jecxz
int3
xchg
je
std
mov
das
loope
arpl
lahf
ret
adc
mov
loopne
ret
pop
add
pusha
out
aam
cs
push
sbb
inc
int3
mov
aas
adc
sub
test
ficoml
xor
pop
sbb
cmp
sbb
repnz
aaa
inc
divb
hlt
adc
jp
outsl
test
str
inc
call
cmp
pop
mov
adc
int
xor
pusha
data16
xor
clc
cmp
jnp
add
sub
test
mov
ret
or
xchg
push
mov
aam
adc
adc
inc
fisttpl
inc
sub
int
pop
mov
in
call
lahf
dec
xor
loope
push
stos
push
cmpsl
les
lcall
sahf
dec
jg
add
fcomip
sbb
popa
outsl
adc
add
jo
inc
ret
mov
shrb
cmp
pop
cmp
dec
adc
jmp
jp
mov
mov
inc
iret
mov
pop
mov
jns
fbld
inc
jae
cmp
test
and
and
scas
cld
fildl
xchg
addl
jb
arpl
inc
adc
test
in
stos
test
fsubs
jmp
add
loopw
jns
add
jmp
dec
inc
mov
popf
pop
jne
scas
pop
clc
lea
dec
lds
mov
mov
icebp
lcall
sahf
push
and
cs
adc
and
sbb
je
jg
dec
pop
jo
push
into
cmp
pop
mov
orl
and
pop
arpl
call
xchg
and
cmc
inc
xchg
ja
xchg
mov
fdiv
sbb
xor
mov
or
xchg
cmp
pushf
mov
lods
out
fdivr
inc
dec
inc
and
or
jns
mov
sbb
loope
push
xlat
adc
mov
xlat
lret
int3
mov
fisubl
loope
bnd
sub
xchg
fisttps
pop
rol
pop
add
xchg
rcrb
sbb
dec
jge
out
cmpsl
sub
pop
lret
js
jae
sbb
mov
pop
gs
cmp
ret
int
or
lds
sbb
mov
int3
cmpsl
jae
mov
rolb
xchg
pop
ja
int
jnp
and
sub
loop
or
aas
push
repz
cmc
pop
push
inc
popa
fcmovnu
insl
adc
outsb
enter
icebp
mov
xchg
adc
push
scas
sti
test
and
xchg
stos
mov
inc
dec
jp
mov
orl
push
out
mov
xor
cmc
add
or
lock
xor
sub
pop
add
or
jg
mov
loopne
adc
or
ficoms
xor
mov
jae
fsubs
mov
js
push
icebp
or
rcrl
xchg
adc
mov
xor
mov
divl
add
pop
and
pop
or
xchg
jmp
jo
loop
push
jg
ficoms
setne
adc
pushf
dec
xchg
ja
in
test
xor
and
sub
shl
popa
mov
inc
aas
jl
push
loop
cmc
push
repnz
xchg
jnp
xchg
test
cmp
fdivrl
xchg
jns
fwait
xchg
or
and
sbb
imul
xchg
imul
cmovg
push
jns
mov
and
sub
imull
and
lock
jno
jp
inc
data16
sub
pop
sub
mov
mov
push
imul
scas
lcall
into
mov
imul
add
cmc
and
cmp
test
and
cmc
clc
and
pop
sbb
das
leave
sbb
cmpsl
inc
fmull
dec
mov
inc
mov
fiaddl
sbb
push
jne
out
insl
icebp
mov
push
sbb
dec
out
add
xchg
and
lock
fnstcw
mov
lret
pop
mov
aad
test
shr
inc
repz
inc
jno
ljmp
jge
or
push
pushf
subb
push
dec
jg
cli
adc
cld
rolb
popa
test
sub
fsubrl
and
xor
xor
out
inc
fdivrs
scas
mov
pop
repnz
sbb
mov
js
xlat
les
fldl
mov
push
mov
cmc
cld
mov
mov
mov
jo
jg
lret
je
xchg
lcall
sbb
je
dec
lret
add
add
jg
dec
sbb
add
mov
insl
into
dec
sub
adc
arpl
add
xchg
jbe
nopl
xchg
adc
ljmp
sbb
ljmp
xor
mov
shrl
cmpsb
movsb
xorl
mov
aas
lretw
add
hlt
xor
push
sub
mov
mov
out
push
and
mov
xchg
scas
not
cld
sbbl
inc
popa
cmp
fnstenv
cmp
mov
xchg
sub
das
stc
push
push
push
mov
lret
cmp
fs
pop
fldl
ret
shll
cmp
jge
jo
stc
rcrl
test
dec
push
fisubrl
sbb
shlb
cmp
or
push
incb
popa
dec
dec
stos
xor
inc
mov
inc
mov
pop
sub
pop
loop
adc
imul
jne
clc
insl
mov
adc
jmp
mov
fisttpll
and
aad
test
sti
mov
dec
pop
xor
ficoml
fcom
in
in
jnp
jns
and
ss
pop
or
push
scas
std
cmp
sub
mov
fucomp
sbb
mov
test
push
cmc
jb
repz
add
and
cmpsl
adc
pop
out
fsubrl
lods
ss
cwtl
jae
mov
sbb
iret
fidivrl
push
xor
fbstp
sub
pop
xchg
push
or
xor
jmp
lock
or
mov
je
sbb
scas
lret
mov
loopne
leave
cli
cmpsl
or
adc
jp
fldt
icebp
xor
xchg
jnp
or
jne
mov
push
out
mov
stos
in
mov
movsb
sbb
push
lret
mov
js
aam
mov
jbe
sbb
dec
test
orb
or
cld
inc
test
jae
leave
test
insb
xor
loope
add
jns
add
popa
xchg
movsl
idiv
dec
push
out
dec
dec
or
xor
add
xchg
fwait
iret
dec
repnz
push
fs
ret
and
dec
push
sbb
push
fldenv
aas
insb
aas
lahf
adc
lods
int
xchg
mov
out
pushf
icebp
cmp
into
testl
add
loopne
icebp
in
pop
or
mov
sbb
data16
dec
cmp
cltd
lea
inc
pusha
call
aam
mov
rcrl
sti
nop
xor
stos
push
cmp
jae
and
mov
das
cmp
mov
jne
mov
std
jae
popf
fs
enter
cmp
or
mov
gs
add
mov
cmp
sub
sti
jg
rclb
pusha
nop
and
mov
lcall
mov
add
data16
xor
lods
test
mov
mov
push
repnz
leave
xor
mov
inc
aam
fstpl
subl
mov
xchg
mov
lahf
daa
js
jnp
stos
pop
cmp
or
xchg
orb
xor
cmp
in
rcrl
pop
addr16
and
filds
pusha
outsl
das
adc
lcall
xchg
mov
push
lds
frstor
ja
push
xadd
pushw
shll
adc
mov
rcrb
xchg
xchg
and
and
fs
popa
int3
cld
addr16
in
jge
xchg
sti
push
mov
imul
sub
jo
pop
shl
xor
push
sbb
mov
ja
add
jne
cmp
pop
ljmp
ss
int
bound
push
ds
bound
ds
mov
xchg
movsb
inc
ret
jecxz
pop
fidivrl
mov
int
add
ret
adcl
cmp
mov
xor
cld
and
lcall
adc
and
sub
imul
shlb
fs
sub
shl
cmpsb
push
mov
jmp
dec
sahf
mov
popa
sub
adc
mov
sbb
cs
pop
lock
out
negl
in
aas
test
adc
or
and
or
mov
or
or
ficomps
sub
mov
int3
lahf
movsl
lods
clc
call
jge
das
xchg
xor
sub
negl
scas
fisttps
sub
push
lcall
call
mov
cmpsl
insl
lahf
inc
sbb
in
fs
movsb
xor
aad
dec
in
hlt
mov
inc
aas
mov
ljmp
pop
dec
testl
xlat
sbb
add
push
ja
sbb
push
push
and
pusha
repnz
outsb
jns
mov
adc
mov
dec
lock
aas
add
xlat
outsb
inc
popf
push
lods
xor
adc
and
stc
cltd
call
dec
movsl
popa
imul
xor
mov
sub
add
js
das
jecxz
je
xor
pop
jmp
pop
fsubrs
insl
add
and
addr16
mov
pop
sub
mov
mov
adc
mov
and
mov
les
enter
or
ljmp
icebp
insl
or
mov
mov
or
sub
push
cmp
repz
cld
mov
adc
pop
mov
cmp
dec
in
gs
fstpt
in
ficompl
loope
or
jns
jo
xor
inc
jge
cmp
mov
jecxz
mov
iret
fistl
pushf
pop
scas
mov
leave
adc
cld
jl
mov
call
push
dec
cmp
fcmovne
orl
cmc
xchg
mov
cmp
jle
jecxz
repz
test
outsl
cmpsb
adc
loopne
cltd
mov
imul
xchg
test
push
int
movsl
lahf
ret
mov
or
leave
stos
es
rolb
test
mov
sti
pop
loopne
jle
roll
sbb
xor
xor
movsl
mov
imul
mov
jge
sub
lds
xlat
mov
push
inc
repz
nop
les
sti
mov
lret
jns
fdivl
push
sub
loop
cli
mov
push
cmp
scas
cmp
dec
xlat
jecxz
pop
push
inc
stc
mov
cmp
jae
les
push
les
mov
push
ret
adcb
and
cmp
jno
mov
insl
fisubl
xchg
mov
cmpsl
in
xchg
pop
test
xchg
mov
into
xlat
mov
mov
in
test
clc
movsl
arpl
les
sub
aas
cmpsb
movsb
xchg
mov
mov
fnsave
data16
jb
jno
mov
and
movsb
ds
andb
and
fstp
adc
sub
push
orb
xor
pop
imul
jge
or
xor
sub
popw
lods
cld
mov
jl
and
adc
jmp
push
xchg
inc
outsb
loope
xchg
pop
inc
stos
pusha
xchg
or
adc
or
int3
xchg
jmp
out
int3
push
int
pop
dec
dec
mov
push
and
jne
or
das
adc
cmp
shll
mov
xor
and
dec
jp
push
adc
imul
leave
xor
push
aaa
add
pop
cwtl
test
push
arpl
addr16
cmp
xchg
repnz
mov
adc
and
or
pop
mov
cmp
aas
mov
in
cmpsl
add
loopne
jbe
fidivs
div
sbb
test
add
mov
push
push
dec
jno
lds
pop
pop
sub
test
cli
mov
mov
test
scas
jnp
inc
ss
addl
sub
xchg
xor
adc
xchg
aam
push
pop
clc
cmpsl
jp
icebp
in
fdivrl
jo
scas
pop
sbb
inc
arpl
cmp
xchg
imul
ljmp
mov
push
and
cmp
xchg
dec
mov
shrl
fs
xchg
inc
dec
xchg
fnstsw
mov
cmp
and
adc
mov
jns
adc
ret
loopne
sahf
push
ja
andl
lods
stos
out
in
push
xchg
dec
gs
loop
mov
mov
cmp
popa
daa
fisubrl
mov
jp
mov
pop
mov
cmpsl
mov
mov
das
imul
adc
mov
rorb
push
mov
ss
ljmp
push
pop
mov
xchg
and
ja
aas
mov
push
fists
pusha
jbe
out
shll
rorl
dec
lret
pop
xchg
lods
scas
daa
jnp
pop
insb
dec
in
dec
shrb
clc
or
adc
out
push
fdecstp
push
repnz
jg
or
shl
adc
sti
dec
pop
mov
xchg
mov
roll
lcall
daa
aas
enter
pop
xor
pop
pop
jecxz
cmp
mov
mov
sub
add
lea
sahf
int3
inc
ret
in
decl
in
imul
inc
mov
pop
popa
mov
push
jle
dec
shlb
lock
push
dec
push
inc
jl
push
sub
hlt
stc
ret
in
xorb
test
jle
pop
xchg
std
mov
inc
dec
push
push
sbb
subl
mov
or
outsb
pop
in
adc
repnz
push
ja
iret
iret
mov
dec
mov
pop
xchg
lret
xlat
rcr
les
out
inc
cmp
aad
fsubs
xchg
test
leave
rolb
bound
dec
insl
xor
call
pop
scas
out
movsl
ss
mov
jne
mov
xchg
mov
or
fadd
outsb
or
jne
add
out
rorb
ja
mov
pop
testb
clc
aad
js
push
dec
mov
xchg
aam
loopne
xor
mov
xchg
pop
jae
cmp
xchg
es
or
cs
xor
jle
je
testb
arpl
aas
insl
push
movsb
iret
loope
dec
cwtl
ljmp
cmpsl
mov
ljmp
test
insl
mov
dec
les
sub
pop
sbb
popa
mov
pushf
push
shlb
loopne
mov
ret
inc
mov
into
cmp
push
jb
xchg
mov
pusha
loopne
dec
sbb
sti
shr
outsl
mov
out
mov
mov
cmp
loope
or
int3
flds
jno
jle
addl
lds
mov
adc
movsl
pop
cmp
std
fidivrl
adc
mov
pop
push
jno
mov
lods
xchg
out
push
inc
jns
aam
pop
sub
roll
mov
mov
mov
and
movsb
xor
imul
mov
and
enter
push
lods
and
and
push
aam
mov
jg
pop
mov
ret
movsl
test
ljmp
adc
push
push
dec
dec
and
out
shrl
rorb
xchg
cmpsl
lds
fwait
jl
sbb
push
xor
int
lcall
imul
jnp
data16
mov
cmp
cmp
das
pop
fldenv
movsl
testl
icebp
mov
dec
enter
je
add
xchg
or
xchg
and
fstl
pop
mov
fwait
aam
mov
imul
dec
repz
pop
int
scas
gs
jecxz,pn
mov
mov
adc
les
inc
push
notb
js
pop
xorb
pop
pop
inc
pop
scas
cmpl
cmp
lahf
sbb
ljmp
clc
mov
inc
lret
out
jns
ss
test
test
pusha
in
xor
inc
cli
subb
mov
mov
pop
cld
inc
cmp
mov
push
fnstsw
mov
testb
xchg
in
fisttps
cmpsl
rcr
adc
xor
or
into
out
inc
xlat
rcll
mov
or
jno
xchg
inc
shr
inc
push
xor
stos
setb
or
mov
test
out
mov
xchg
jle
add
jne
addr16
pop
test
out
xchg
mov
rdpmc
dec
jmp
cmpsl
or
cmpsl
test
and
dec
mov
call
lret
xchg
xor
inc
int
dec
outsl
add
push
mov
mov
or
sub
enter
notb
rorb
sbb
bound
sub
cmp
cmpsl
cs
pop
lock
add
enter
push
hlt
ss
xchg
pop
or
dec
pop
icebp
dec
or
pop
js
mov
lret
in
mov
test
adc
push
and
lods
push
or
mov
mov
jp
dec
push
iret
cmp
mov
ds
inc
cwtl
es
jnp
cs
pushf
fwait
rclb
daa
pusha
mov
and
andl
mov
divb
dec
in
icebp
cmpsb
mov
repz
arpl
inc
adc
fsubl
enter
pop
lds
or
add
jge
push
das
push
xchg
jge
lds
test
mov
xor
inc
out
jbe
std
shll
scas
stos
mov
xchg
xchg
xchg
testl
cmp
jl
div
addl
jle
ljmp
ja
inc
bound
pop
adc
fs
xor
es
popf
dec
lea
mov
and
jnp
or
push
fwait
adc
add
push
stos
pop
lods
jns
enter
test
ret
mov
into
fbld
cmpsb
dec
or
dec
pop
in
push
jg
or
xor
xchg
fdivrs
cmp
xor
mov
push
lahf
ror
leave
mov
xchg
inc
stos
adc
pop
out
mov
inc
out
pop
pushf
push
call
dec
fwait
cwtl
sbb
iret
pop
xor
mov
rcr
nop
inc
jne
mov
ja
lods
rclb
andl
cmp
and
jecxz
out
pop
ficoml
dec
and
push
mov
cmc
cmp
or
pop
ror
loope
ds
xchg
lock
pop
mov
call
rolb
fcmovne
dec
fwait
or
test
jns
dec
push
fcmovne
mov
or
outsl
test
or
jns
pop
xchg
add
inc
and
sbb
lret
mov
mov
push
push
or
or
std
mov
xchg
mov
imul
push
insb
inc
int
int3
mov
push
push
cli
sbb
insb
mov
or
cmp
mov
call
xor
loopne
lock
shrb
mov
sub
flds
push
stc
and
adc
shrb
mov
sub
fld
jmp
xor
loopne
lock
shrb
mov
sub
flds
push
std
and
adc
mov
repz
rorb
rolb
loopne
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
shll
loope
and
loope
rcll
inc
xor
popa
adc
popa
add
and
push
shll
loope
xchg
loope
icebp
mov
mov
push
jno
outsl
adc
popa
xor
add
push
enter
jmp
loope
icebp
test
mov
cs
adc
push
insl
xor
mov
out
xchg
rol
adcl
xlat
mov
cmp
dec
adc
mov
pop
outsb
mov
xor
aam
push
pushf
inc
adc
popf
xor
fiadds
cs
cmp
std
push
insb
add
cmp
dec
shr
adc
mov
mov
shll
cmp
xchg
outsb
loopne
icebp
dec
dec
mov
pop
inc
sahf
inc
out
or
mov
inc
dec
dec
jl
add
loopne
in
aam
push
push
fldl
shr
jno
into
mov
and
out
push
inc
mov
xor
adc
adc
mov
push
and
mov
loope
xchg
xchg
icebp
mov
mov
xor
js
or
jno
inc
and
mov
call
out
cld
mov
inc
add
push
adc
add
dec
adc
adcl
rcll
pop
and
jno
and
add
inc
and
add
mov
fabs
xor
push
and
jno
popa
adc
popa
add
inc
and
mov
loope
xchg
loope
icebp
mov
mov
xor
popa
adc
popa
add
inc
and
mov
xchg
std
sub
fs
jo
add
cwtl
jl
ljmp
js
stos
out
mov
testl
fdivs
scas
cmp
add
loop
pop
jg
dec
ds
dec
jbe
lahf
jae
pop
inc
mov
jg
test
fsubrl
testb
mov
cmp
pop
imul
sbb
out
or
loop
mov
in
sub
jmp
push
test
pop
mov
mov
mov
rcll
clc
cli
jno
xor
cmp
cmpsl
pop
loop
and
xchg
or
dec
daa
cmp
int
ljmp
dec
xor
in
xor
jle
loop
in
pusha
testl
sub
das
les
insl
arpl
subb
xor
ret
mov
jns
cld
mov
sub
adc
nop
cltd
sti
mov
pop
iret
mov
std
add
les
lods
jmp
mov
and
mov
rcll
aas
idivl
sbb
stos
or
cmp
and
mov
fists
cmpsb
sti
std
pcmpeqw
xorb
lods
pop
mov
adc
rorb
jl
mov
dec
popf
mov
inc
adc
push
xor
insl
cmpsl
mov
dec
lcall
lret
mov
pop
and
mov
inc
mov
mov
cmp
arpl
jns
cmp
int
stos
insl
cmp
xchg
aad
or
ss
insl
sub
daa
sub
fcomps
push
add
mov
lahf
jae
sarb
sub
pop
push
sbbb
adc
or
ret
sbbb
fs
das
jnp
test
call
adc
jp
adc
repnz
mov
and
sub
mov
lods
leave
sub
dec
push
push
fildll
sbb
sub
push
mov
dec
inc
sarb
repz
add
stc
cmp
or
mov
jp
mov
ret
mov
leave
cli
and
mov
popf
or
mov
sub
jns
sahf
jne
mov
dec
dec
imul
add
int3
mov
clc
outsl
xor
dec
loop
mov
pushf
insl
ljmp
js
or
in
mov
push
mov
mov
push
pop
jae
int3
sahf
fdivl
subl
dec
fistpl
imul
or
add
xlat
mov
pop
lret
filds
or
or
rorl
sbb
mov
fwait
ljmp
rolb
in
push
out
iret
js
xchg
test
adc
jmp
adc
push
jmp
popf
cmp
xchg
adc
inc
repz
mov
mov
bound
or
shll
shrb
insb
ss
pop
fsubr
dec
pop
mov
enter
lcall
adc
cmc
inc
xorl
fucomi
xchg
subb
jo
nop
xor
pop
push
mov
pop
mov
fstl
into
cmp
and
stos
shlb
mov
inc
xchg
pop
in
mov
incb
jge
test
push
jno
push
add
and
cvtpi2ps
cwtd
and
imul
sub
icebp
ret
repz
cld
xor
add
fsubs
in
pop
sub
mulb
stos
sarl
fldl
loopne
mov
in
jg
push
lahf
mov
add
dec
sub
jg
sti
adc
push
xor
insl
stc
xchg
xchg
rorb
push
mov
cmp
mov
lcall
adc
stos
cli
xchg
ljmp
lret
movsl
into
pop
mov
lcall
aas
add
jmp
mov
test
jmp
ja
fwait
imul
arpl
add
sbb
jmp
invd
fcmovb
pop
mov
into
int
sub
movsl
addr16
and
inc
mull
pop
ja
pop
sub
sbb
les
jge
repz
nop
popf
shlb
lahf
jns
test
insl
adc
cmpsl
lcall
outsl
idiv
repz
mov
xchg
pusha
cmp
andl
xchg
je
pop
test
mov
xchg
push
in
sti
gs
int
lret
rolb
cltd
inc
mov
mov
jbe
enter
add
cmc
aam
inc
xchg
lea
pop
div
arpl
add
pop
loopne
inc
iret
enter
daa
ret
adc
push
cmp
scas
sahf
das
out
mov
movsb
push
popa
arpl
int3
xor
repnz
je
xor
ret
cmp
adc
pop
inc
jmp
out
fwait
jno
push
test
sbb
mov
mov
push
xchg
mov
pop
push
mov
fsubs
das
mov
push
mov
das
push
mov
mov
xor
and
xchg
or
inc
dec
sbb
leave
cmpsb
scas
mov
sbb
lcall
test
dec
test
jmp
mov
push
adc
jnp
loop
leave
faddl
shrb
adc
ret
xlat
outsl
add
iret
aad
push
rorl
idivb
inc
cmp
xor
lock
fbstp
cmp
mov
cmp
test
or
mov
push
or
sub
out
jae
popf
pop
xchg
ret
pop
out
add
aam
xchg
add
cmp
mov
arpl
loopne
xchg
addb
leave
call
adc
dec
data16
xor
outsl
xor
pop
jns
sbb
xlat
dec
fists
sub
jne
cmp
jg,pt
dec
lret
or
jae
mov
and
ss
cltd
cmp
pop
jge
clc
or
push
test
imull
js
sahf
shl
push
sbb
mov
pop
push
sub
pop
adc
cmpsb
and
outsl
inc
xchg
xor
fidivs
mov
or
gs
push
jnp
dec
xor
push
add
adc
pop
mov
int
jb
sti
insb
dec
lret
aad
aaa
fmul
mov
add
add
jp
cmc
xor
sahf
cmp
shlb
sti
xchg
ja
sub
dec
xchg
rolb
test
fwait
mov
bound
out
pop
adc
pop
xor
jecxz
xchg
dec
cmp
mov
rcr
sub
xor
inc
cmp
fdivs
add
mov
push
sbb
sub
leave
loopne
and
iret
mov
inc
stos
outsb
sub
sub
and
out
bound
push
push
push
out
test
xchg
cs
inc
loopne
sbb
hlt
mov
std
test
or
cld
sub
sbb
lret
in
or
xor
cs
sub
hlt
or
add
push
sar
adc
mov
jo
mov
xor
pop
add
enter
jbe
fwait
jbe
adc
aas
addr16
adc
jge
lea
clc
ljmp
xor
enter
push
movsl
fbstp
dec
mov
pop
rcrb
add
js
lret
loope
cli
xor
pop
das
int3
xchg
pop
mov
mov
cmc
es
data16
popa
cmpsb
stos
xor
inc
push
dec
popa
mov
sub
push
mov
push
imull
and
dec
mov
push
pop
icebp
cmpsl
shll
inc
or
and
lea
add
popf
mov
mov
pop
int3
xchg
int
pop
mov
pop
scas
push
sbb
jo
xlat
xor
lret
jmp
clc
and
insb
ret
jge
cs
fcompl
ret
jmp
dec
shl
mov
call
outsl
out
mov
test
sbb
pop
add
sub
test
sbb
js
mov
leave
les
cmp
rorb
push
popa
sub
mov
push
or
mov
popf
repz
lock
sub
add
push
ds
aam
jne
rclb
scas
leave
or
cld
fsubrl
in
shlb
clc
or
loop
push
pop
fs
or
sbb
jae
jecxz
popf
xchg
test
push
mov
daa
fcmovbe
hlt
push
repnz
and
mov
ds
dec
mov
arpl
push
adc
ret
call
scas
mov
adc
or
std
mov
pop
decb
cltd
mov
xchg
adc
stc
shlb
jle
pop
mov
shr
mov
jmp
scas
pop
jb
cld
add
daa
cmpl
dec
push
mov
mov
and
mov
adc
xor
lret
mov
mov
leave
daa
add
mov
jle
sbb
aas
loopne
iret
bound
mov
insl
xor
cld
jge
xchg
ss
pop
push
rol
add
mov
pop
fistl
jno
pushf
pop
lock
cli
sahf
out
pusha
xchg
into
dec
or
jmp
popf
outsl
movsl
sarl
cmp
sub
insl
fdivrs
sbb
out
xor
push
into
mov
mov
subl
mov
sti
add
nop
jns
in
adc
daa
ficoml
push
push
mov
pop
stos
shll
push
dec
out
clc
pop
push
pop
sar
outsl
xchg
and
push
or
mov
jo
flds
movsl
mov
addr16
mov
jns
ja
xlat
call
repz
pop
jbe
ret
into
lock
lods
in
popf
rol
mov
fiaddl
scas
int3
pushf
movsb
push
movsb
cmp
mov
mov
mov
push
xchg
dec
add
push
add
or
pop
ret
addr16
scas
and
in
pop
jecxz
aam
dec
dec
les
sbb
xchg
inc
in
fsts
xchg
push
clc
xchg
or
and
xor
adc
call
movsl
or
sbb
add
cmp
dec
sub
jg
jp
and
in
add
iret
cmp
cltd
movsb
push
or
mov
jb
inc
mov
fildl
stc
adc
outsb
mov
mov
inc
ret
xor
je
test
call
lea
cmpsl
pop
dec
inc
stc
fcmovu
mov
xchg
movl
lcall
insl
outsl
xchg
push
gs
xor
lcall
or
test
cmp
dec
mov
push
mov
mov
add
mov
fiadds
cmp
pop
js
jo
repnz
lahf
dec
cmp
pushf
jge
hlt
add
mov
sub
arpl
insl
dec
into
mov
std
and
dec
dec
mov
mov
in
sti
push
mov
or
stos
scas
xchg
dec
mov
addr16
fmull
xchg
int
and
fwait
jle
in
decb
pop
xor
push
shll
fcmove
bts
dec
jmp
jmp
lods
fnstenv
add
nop
xor
inc
nop
jne
cmp
int
lahf
arpl
or
cmp
jle
dec
jno
cmc
outsb
loop
test
sarb
cld
stc
xchg
xor
push
or
icebp
ss
aad
clc
addl
out
mov
sbb
sub
jbe
and
push
fnsave
sub
dec
jmp
mov
pop
and
dec
push
rcll
xlat
push
es
push
push
and
mov
pop
xlat
call
and
push
out
icebp
add
clc
or
das
rcrb
xchg
jo
fisubl
in
pop
fcomip
sub
imul
mov
mov
and
ljmp
lcall
cmp
dec
dec
or
push
push
xchg
and
es
insl
arpl
push
jmp
pop
mov
imul
adc
fmul
insb
mov
into
fcom
jne
xchg
and
mov
out
jbe
and
pushf
nop
push
lret
xchg
mov
push
and
test
ljmp
loopne
fisubrl
xor
jno
add
dec
push
in
xchg
xchg
mov
retw
aaa
cmpsl
sub
xchg
jb
fwait
dec
dec
aas
mov
test
adcl
jae
pusha
aam
jp
push
dec
stos
jo
out
cmpsb
lods
add
test
add
inc
inc
mov
mov
xchg
sub
dec
add
mov
mov
sub
sub
mov
in
jo
leave
fwait
test
jno
sbb
popa
cmp
cmc
icebp
cvtps2pi
leave
cmp
xor
mov
or
mov
movsl
inc
pop
jmp
and
pop
cmp
xor
gs
jmp
lds
push
test
loop
push
fisubs
or
fadd
mov
popa
lcall
xchg
mov
sbb
jle
cltd
out
dec
sbbb
rcll
mov
sub
cmp
ret
mov
ljmp
jle
movsl
dec
pop
push
cmp
push
enter
inc
es
test
out
hlt
sbb
scas
add
insl
add
dec
out
es
je
stc
loopne
push
and
inc
adc
lcall
mov
or
jmp
movb
cltd
vmovups
inc
aam
cltd
and
iret
outsl
and
out
xchg
mov
rcrb
jb
fs
cs
fadds
push
sub
xchg
cltd
adc
mov
aas
mov
add
adc
mov
mov
and
jl
inc
mov
addr16
adc
repnz
xchg
cmp
insb
inc
iret
out
xchg
jle
stc
push
dec
jecxz
ds
xor
stos
xchg
scas
jmp
mov
cltd
es
add
sbb
ds
in
or
lret
clc
dec
jo
fnsave
sbb
pop
hlt
sahf
gs
mov
int3
clc
lock
jb
jne
adc
pop
add
or
cmp
test
adc
stos
fildl
jmp
lds
push
mov
pop
mov
hlt
test
mov
lret
xchg
test
mov
cmp
xor
inc
cmpsb
fistpll
fiaddl
dec
jecxz
pop
orb
sbb
and
mov
cs
mov
jmp
sti
aam
lods
scas
shrl
xchg
mov
xor
ret
xchg
rorb
cli
in
loop
stos
sbb
cld
or
xchg
push
xchg
sbb
mov
imull
sub
xor
pusha
mov
sbb
leave
call
pop
roll
mov
data16
outsb
std
mov
addr16
dec
arpl
dec
jg
cmp
mov
and
sbb
jnp
dec
sub
mov
adc
lock
int3
pop
mov
movsb
sub
and
in
test
push
call
fldl
imul
rcl
fsubs
arpl
insb
mov
rcrb
mov
in
mov
jo
les
xor
add
and
pusha
repnz
std
bswap
dec
out
test
push
adc
inc
ja
fistl
rol
xchg
add
shlb
popa
cmp
jg
push
jecxz
arpl
inc
or
pop
lods
xor
imul
into
js
jl
sub
push
fcomp
popa
cmp
enter
jb
add
cmp
inc
enter
push
pop
lds
arpl
mov
js
cld
out
std
test
push
adc
lcall
ror
inc
pop
pop
and
mov
jne
push
jns
lahf
leave
sbb
ret
lcall
lods
aas
scas
insb
cli
clc
jl
add
add
pushf
sub
sbb
and
scas
pop
fbstp
ret
dec
daa
shl
loopne
mov
cmp
xor
pop
mov
sbbl
sub
sti
or
test
adc
daa
sub
sahf
cmp
imul
or
inc
sub
lods
shll
pop
push
ret
jecxz
pop
jp
mov
mov
sub
js
lcall
pop
dec
jp
and
dec
cmp
scas
mov
mov
add
adc
mov
mov
xchg
roll
mov
fstpt
sbb
cmp
icebp
cmp
fnstenv
add
mov
jb
andl
jno
dec
lea
inc
xor
mov
or
into
inc
rcl
cs
pop
popf
aas
aaa
push
mov
lods
imul
scas
sub
inc
int3
rorb
push
rorl
fstps
mov
jmp
cs
outsl
or
clc
xchg
mov
ss
cmp
push
xchg
cld
icebp
push
jae
dec
data16
dec
or
bound
xor
out
mov
lret
movsl
cmp
daa
xchg
mov
mov
xchg
xor
jge
dec
lock
sub
xchg
push
repz
cli
sub
fs
cli
pop
inc
mov
mov
psllq
pop
pop
into
imul
mov
test
fiaddl
inc
xlat
repnz
popa
comiss
add
pop
inc
dec
cli
inc
jg
insb
pop
or
in
mov
ret
outsl
xchg
aaa
aad
mov
loope
scas
sub
sbb
cmp
repnz
inc
sbb
repz
xchg
inc
lahf
dec
push
jg
sbb
movsb
push
push
push
rorb
test
repnz
mov
fisttpll
dec
js
add
out
cltd
push
sub
stos
fildll
lret
jmp
dec
pop
inc
and
cwtl
stos
call
ficoms
in
arpl
sbb
xchg
test
sbb
mov
jo
cmc
jg
push
jp
mov
sbb
xchg
or
in
and
negb
or
pop
negl
icebp
and
jle
aas
fists
push
adc
insl
xchg
xor
test
adc
hlt
cmp
flds
rcl
aas
xchg
cmovp
gs
jns
iret
sbb
mov
out
sbb
ret
sbb
test
and
sbb
subl
lock
lds
sbb
mov
repz
sbb
sub
je
movsl
popf
lock
jmp
loop
add
or
xchg
popa
addr16
repz
push
push
push
orl
scas
cmpsb
cmp
jecxz
repnz
addr16
ret
mov
mov
outsl
mov
jmp
test
pop
adc
jbe
jno
jae
add
cwtl
and
jo
inc
into
pop
mov
imul
mov
cld
mov
jnp
xchg
mov
push
out
insb
pop
xchg
dec
mov
icebp
mov
insb
push
add
insl
in
negl
out
outsb
ret
adc
test
jmp
leave
leave
mov
mov
out
jb
les
inc
hlt
pop
pop
mov
push
out
and
cmp
in
int
jp
loope
pop
and
subl
or
pop
xor
shr
jbe
dec
and
adcb
lea
cmpsl
or
sahf
inc
scas
sub
dec
mov
or
xor
bound
jne
ds
lea
xor
and
push
mov
sahf
lods
fdiv
enter
dec
pop
mov
or
jecxz
cli
push
popa
imul
mov
jle
or
jmp
mov
dec
xor
repnz
jnp
lret
stc
in
xor
push
mov
mov
les
lea
push
pop
shrb
out
mov
inc
shlb
outsl
sub
jge
fistpl
mov
popf
add
mov
inc
hlt
mov
movsl
aad
and
sbbb
inc
lcall
outsb
xchg
aam
out
inc
ret
mov
jno
inc
mov
jb
outsb
push
emms
rol
add
loopne
int3
lods
into
xchg
cmp
movb
sub
jge
fldt
dec
cwtl
xorb
jmp
nop
add
push
and
xchg
jge
jp
popa
sarb
mov
xchg
lods
fisubrl
mov
mov
mov
mov
xor
ds
cli
ret
fcoms
mov
pusha
jne
xchg
test
repnz
bound
inc
lock
clc
test
pop
clc
mov
scas
pop
inc
lock
and
push
ss
add
jbe
or
popa
pop
out
movntps
pop
fstpt
rcll
sbb
pop
jb
or
add
insb
movsb
mov
mov
cmp
xor
mov
sub
popl
mov
mov
sub
sub
push
loop
clc
adc
pusha
insb
adc
push
daa
xor
and
and
iret
mov
jae
lods
sub
push
xchg
and
sbb
adc
xchg
xchg
loope
icebp
mov
mov
xor
popa
adc
popa
add
inc
and
mov
loope
xchg
loope
icebp
mov
mov
xor
popa
adc
popa
add
inc
and
mov
loope
xchg
loope
jno
shll
jno
popa
adc
popa
add
inc
and
mov
loope
xchg
loope
icebp
xor
and
scas
and
data16
into
mov
shll
loope
sub
adc
popa
lds
gs
mov
adc
add
shll
shll
shll
add
adc
inc
mov
mov
mov
adc
add
xor
and
roll
loope
xchg
push
cmpl
push
mov
add
jb
push
mov
shll
mov
sbb
mov
xchg
nop
shrb
inc
dec
jle
xor
cmp
lcall
mov
cli
cmp
mov
shr
scas
cmp
pushf
push
dec
shrb
and
lea
mov
mov
or
adc
scas
adc
or
push
and
xor
add
lods
inc
push
andl
nop
icebp
hlt
push
jl
sub
mov
push
mov
andb
and
popa
inc
mov
mov
ficomps
ror
je
shll
orb
push
scas
repnz
loope
push
in
sti
mov
mov
sub
rcll
jne
adc
inc
mov
sbb
popa
lods
adc
add
xor
and
movsl
and
jge
in
divb
push
cmp
repz
add
sahf
pop
mov
mov
test
jge
xor
and
shrb
roll
pop
scas
jb
popa
movsb
mov
xchg
insl
sarl
xorl
mov
popa
xchg
adc
add
xor
and
shll
shll
add
adc
inc
mov
mov
andl
xor
and
shll
les
jl
jmp
push
mov
call
sbb
repnz
das
cltd
test
lcall
je
iret
inc
sbb
aaa
leave
pop
out
add
dec
subb
movsb
int
xchg
pop
pusha
adc
jae
inc
xor
push
adc
push
inc
pushf
out
dec
mov
inc
fcomp
jecxz
orl
popa
negb
cmp
xor
or
rcl
xchg
jp
cld
or
cltd
cli
xlat
test
lock
xchg
lods
jecxz
xor
dec
xor
jb
cmpsb
ds
lahf
inc
or
cli
xor
leave
xor
xchg
mul
xlat
xchg
idivb
repnz
sar
push
xchg
adc
insl
or
nop
push
inc
icebp
xchg
inc
xor
lcall
add
add
mov
jecxz
inc
mov
or
mov
lcall
mov
mov
pop
nop
add
mov
add
scas
cmp
push
mov
nop
call
pushf
jbe
popa
adc
ljmp
mov
jnp
cli
test
xchg
repnz
aam
int3
stos
jge
or
fimuls
push
adc
mov
jmp
out
adc
push
adc
push
es
cmp
jno
pop
insb
xor
mov
enter
mov
sahf
jne
pusha
sub
scas
je
mov
xchg
std
fbstp
xchg
pop
test
mov
inc
mov
in
aas
test
jns
aad
sub
mov
adc
cmpsb
ffreep
push
or
mov
in
jo
mov
mov
bnd
dec
xchg
rcl
mov
les
mov
and
adc
aad
aas
stc
outsl
out
stos
addl
addr16
cmpsb
outsl
sbb
call
mov
fmul
aam
mov
bound
lods
mov
push
sub
addl
enter
or
pop
pop
fiaddl
test
jg
xor
aam
push
imul
mov
mov
xchg
pop
scas
and
movsb
aam
das
push
ss
push
pop
push
out
xchg
adc
stos
adcb
loope
loop
call
or
mov
call
decl
pop
add
pop
test
or
imul
ret
fldcw
jae
xchg
clc
xchg
inc
mov
ja
push
add
mov
pop
fiadds
test
sub
xor
rcrb
jo
out
rorb
mov
cli
inc
sbbl
out
xor
lods
sbb
and
dec
and
std
jge
iret
cmp
in
jne
pop
stc
stc
mov
mov
les
int
push
imul
lods
xor
dec
cltd
inc
jmp
jno
shrl
sbb
int3
jp
hlt
rcl
shll
imul
push
sbb
jle
mov
popa
rorb
mov
mov
xchg
dec
xchg
pop
push
stc
shll
push
scas
jle
fidivrl
imul
xchg
popa
jl
jns
outsl
push
sbb
neg
into
movsb
shl
mov
jecxz
xor
aam
push
aam
xchg
sub
ret
sti
hlt
mov
pop
sub
stos
mov
dec
pop
push
fs
cs
lds
add
mov
add
mov
push
sbb
adc
lahf
or
and
gs
pop
push
dec
sbb
rcrb
xchg
mov
in
pop
imull
scas
pop
mov
cmp
pop
movsb
loope
les
cmpsb
add
inc
pop
lods
mov
xchg
mov
insl
adc
pop
cmpsl
jns
test
outsl
push
mov
sub
ret
pop
lcall
movsl
pop
mov
mov
mov
push
ds
adcl
test
mov
int
dec
pop
jo
out
nop
inc
mov
flds
xlat
ficoms
or
mov
and
repnz
rorl
mov
cld
add
in
sub
cmc
and
pushf
fsubrl
jecxz
sub
and
cli
inc
jg
pop
insb
mov
sbb
and
ss
mov
out
out
ss
adc
insl
xor
dec
jb
sbb
js
sub
test
test
lock
mov
add
mov
or
aaa
ja
add
cs
int3
imul
cmpsb
mov
scas
sbb
adc
gs
stos
dec
dec
rorl
orb
neg
pop
mov
cmpsl
xor
or
loop
push
inc
lods
and
lods
xchg
sub
ror
out
jno
movsl
or
jecxz
mov
das
dec
pop
cmpsb
jbe
push
repnz
dec
das
int
lods
cmpl
push
iret
daa
lds
xor
cmpl
push
lock
fisubrs
adc
push
repz
mov
mov
inc
mov
mov
xchg
pop
insb
in
mov
ja
jns
mov
imul
push
dec
std
jb
push
mov
mov
fstl
stos
or
inc
adc
shrl
or
lods
push
mov
loope
fnstcw
cmp
in
sbb
dec
ss
cmp
sbb
jle
mov
in
test
jno,pt
jne
jns
push
lret
sbb
sti
inc
mov
cmp
mov
fnstcw
xchg
std
inc
fwait
mov
pop
loop
dec
fdiv
or
ficompl
sub
cmp
jge
or
bound
push
sbb
pop
sbb
icebp
sbb
push
test
test
das
xor
xchg
sbb
dec
lods
sub
sbb
push
fldt
sbbl
test
pop
inc
mov
mov
lods
xchg
ret
test
mov
adc
adcb
stos
out
das
in
or
mov
test
mov
jp
inc
push
int3
js
sbb
inc
xorl
push
pop
sub
lock
sub
lock
jns
cmp
mov
xchg
cmp
test
jmp
ret
xor
or
add
stos
mov
pusha
iret
imul
adc
outsl
in
movsb
lcall
scas
je
test
cli
sbb
add
loope
sub
out
cmp
jbe
adc
in
jno
and
mov
dec
xor
insb
mov
ds
cmp
pushf
mov
arpl
pop
rcll
lds
frstor
sbb
sbb
mov
xchg
mov
sbb
xchg
inc
and
and
jnp
and
cmc
mov
and
filds
lds
lret
jns
call
add
push
xchg
push
add
push
negl
jae,pn
imul
addb
sub
pop
fistps
outsb
jae
pop
xor
jae
mov
int
pop
dec
mov
outsl
mov
arpl
fcompl
sbb
mov
mov
fucom
scas
loopne
push
leave
loopne
fdivl
shl
jae
inc
sub
sub
sub
mov
push
inc
cmpsb
aam
leave
ja
or
je
pop
enter
inc
push
fidivrs
mov
enter
mov
fnstenv
xchg
and
jnp
dec
cmc
cmpsb
rorl
mov
rclb
mov
push
idiv
push
and
sub
lahf
lea
sbb
loope
cmpsb
mov
push
or
orl
daa
fwait
aaa
mov
or
and
js
movsl
ljmp
and
std
notb
sbb
ret
int
pop
mov
dec
mov
mov
mov
jbe
cmp
push
pushl
mov
jecxz
and
clc
and
mov
mov
mov
out
std
pop
pop
ss
lret
ds
lahf
addr16
cmp
sti
aaa
repz
dec
ja
ret
inc
into
dec
and
dec
dec
lds
ds
inc
dec
sbb
stos
mov
jne
jmp
mov
xor
add
outsb
pop
ss
dec
jnp
repnz
or
sub
fcomps
sub
cmp
inc
mov
jae
subb
or
push
jg
lds
out
inc
or
add
xor
mov
xchg
loope
into
or
in
xchg
mov
xchg
push
adcl
leave
jp
out
adc
sbb
cwtl
dec
lret
inc
subl
push
scas
lret
xchg
or
cmp
nop
addr16
bound
sub
fnsave
je
lret
rol
or
push
ljmp
jmp
jg
mov
inc
out
jb
xor
jmp
mov
rcrl
int
mov
clc
inc
adc
mov
je
adc
pop
pop
scas
xchg
jb
movsl
mov
push
bound
push
push
jno
push
jns
jge
pop
hlt
ret
flds
pop
add
in
cli
outsl
pop
bound
outsb
orb
mov
movsl
or
xchg
cmpsl
loope
stc
subl
iret
dec
sbb
adc
mov
mov
pop
scas
lea
loopne
cld
pop
enter
xor
imul
stc
inc
xlat
lcall
pop
dec
add
push
xchg
inc
roll
aam
mov
inc
xchg
jecxz
push
fbld
xchg
jmp
sub
mov
sbb
mov
ficoml
sub
faddl
and
pop
outsl
xlat
aas
cltd
mov
int3
or
loopne
push
lcall
lds
cmp
push
imul
sbb
xchg
push
pushf
cmp
mov
push
and
dec
push
sbb
lds
mov
adc
sub
into
subl
movsl
cs
cmp
mov
shl
mov
stc
test
cs
test
mov
notb
jmp
or
push
shl
push
and
out
enter
cmp
loop
pop
fidivs
dec
adc
out
lods
testb
pop
adcl
pop
adc
mov
adc
enter
ret
pop
ror
xchg
inc
iret
movsb
inc
pop
ljmp
stc
mov
test
icebp
sbb
inc
cmc
xor
aas
and
repnz
inc
leave
shll
adc
sbb
loope
aam
mov
test
cmp
sbb
outsb
push
out
xchg
push
inc
xor
sbb
jle
scas
jno
add
jge
fimull
mov
test
pushf
hlt
mov
loopne
add
jbe
stos
scas
les
imul
jb
xchg
test
jns
aas
clc
nop
out
or
mov
xchg
xchg
je
mov
insb
push
inc
jb
sbb
insl
mov
rorb
enter
xorb
outsl
xchg
dec
fbstp
fsubrp
stos
enter
rcr
int3
jp
mov
mov
pop
mov
pop
push
add
out
test
lahf
in
pusha
insl
in
pop
xlat
add
or
lret
jno
dec
pop
sbb
sbb
imul
pop
add
fists
inc
dec
push
popf
lods
fisttps
ja
fwait
repz
gs
xlat
lods
adc
or
movsl
imull
inc
out
jmp
push
inc
xchg
mov
gs
xor
in
push
int3
mov
dec
xchg
pop
and
imul
ljmp
out
outsb
xchg
aam
or
pop
pop
lcall
push
xchg
decl
cwtl
cwtl
pop
sub
xchg
inc
test
xor
mov
ss
cmpsb
shrb
cmp
cmp
pop
or
lods
repnz
cmp
cmpsl
shrb
xchg
lret
cld
ret
addr16
fnstenv
adc
loopne
xor
in
xchg
sub
pop
xlat
push
je
fwait
insb
repz
push
in
loop
dec
dec
or
into
loope
outsb
sahf
cmp
sbb
ror
sbb
mov
xor
pusha
xor
sbb
pop
in
cwtl
clc
xor
inc
sub
pop
test
push
lahf
iret
andb
add
movsl
addr16
inc
stc
mov
or
cmpb
popf
mov
or
divl
in
dec
mov
jb
test
jbe
in
push
dec
test
fbld
mov
xchg
fs
mov
push
mov
xchg
mov
inc
outsb
lret
shll
dec
sub
inc
or
popf
sahf
dec
pop
cli
jecxz
pop
shrl
and
mov
lods
lcall
jbe
xor
jmp
adc
out
scas
es
addr16
dec
pop
out
jno
adc
mov
mov
adc
mov
mov
fldenvs
cmc
stos
xchg
mov
loop
cli
push
adc
paddusw
and
mov
sub
in
stos
in
jns
sub
push
jle
movsb
fldl
adc
inc
dec
fs
mov
enter
xor
in
cmp
stos
call
jmp
mov
jle
pop
lock
test
std
icebp
leave
xor
dec
div
jmp
pop
jne
pushf
pop
add
and
sbb
pop
std
or
lret
notl
popf
ficoml
dec
inc
pop
mov
or
out
or
jmp
test
hlt
and
testb
xchg
bound
sub
xor
sub
daa
aad
es
sub
cmp
outsb
mov
ret
call
add
sarl
or
sbb
mov
inc
and
je
std
mov
out
data16
aad
jge
lock
pop
fcoml
mov
cmp
cmpsb
into
ja
sbb
ljmp
ds
cmpsb
push
stc
arpl
xlat
outsl
sahf
inc
xchg
dec
cmpsb
xchg
xchg
mov
pop
dec
cwtl
cmp
outsb
push
je
sub
imul
xor
rolb
inc
pop
sub
dec
hlt
mov
addr16
sub
sbb
pop
fisttpll
ret
test
pop
mov
mov
scas
mov
jb
sbb
cmpsl
mov
rep
adc
mov
mov
shll
sarb
or
aas
shr
push
sub
mov
lds
push
mov
jmp
imul
les
in
pop
lahf
pop
push
into
icebp
fsubs
jmp
jnp
and
jecxz
in
or
sub
mov
xchg
dec
adc
icebp
push
jno
scas
nop
cmp
ja
fmull
sub
jle
aaa
push
mov
mov
xchg
push
dec
push
cli
call
rorl
cltd
push
sub
rcll
or
lcall
aad
mov
insb
and
cs
xor
scas
ficoms
lods
scas
pushf
mov
push
xchg
mov
xchg
data16
and
jns
out
das
imul
push
pop
ror
mov
mov
iret
rcr
mov
insl
test
add
and
orb
leave
xchg
popf
aaa
add
movsl
push
mov
cld
pop
lods
es
in
aad
ja
push
pop
leave
inc
cmp
shll
xchg
sub
cmp
cmc
jecxz
dec
fidivs
into
cmpb
test
in
and
push
or
adc
sub
inc
pop
ds
es
add
mov
lods
ffree
ret
hlt
or
inc
iret
test
dec
pusha
push
loopne
aam
cltd
imul
shrl
aam
xchg
jno
xor
xorl
ss
movsb
pop
jp
xchg
pop
loope
mul
xchg
inc
xchg
addr16
pop
mov
fmuls
sub
pop
jp
fisttps
lret
clc
pushf
jne
push
add
orb
lcall
fs
popf
jle
cmp
add
mov
pop
push
testb
add
test
mov
lds
pop
or
fidivrs
roll
clc
repz
push
lret
inc
loopne
test
adc
dec
out
sub
cmp
mov
out
bound
cmp
test
cli
cwtl
es
js
and
jp
lahf
into
cmp
lcall
and
add
icebp
inc
pop
pop
mov
push
sbb
pusha
and
xchg
cltd
fidivs
push
std
aad
xor
mov
aam
out
dec
inc
mov
jl
popa
ret
dec
xchg
sub
sbb
mov
jge
or
into
sub
out
fidivrl
xor
insb
into
push
jno
ret
pop
or
mov
jmp
jns
fwait
jle
insl
xor
add
jno
arpl
inc
sbb
test
stc
and
adc
pop
cmpsb
xor
jmp
cmp
mov
bound
dec
aam
mov
cmpsb
push
cltd
push
xor
and
and
ret
in
xor
test
cmp
inc
orl
lock
add
pop
cld
or
shlb
xor
cmpsb
xchg
jp
xchg
std
inc
cli
out
dec
out
cmc
xchg
xor
gs
rolb
stos
xchg
pop
loop
sbb
dec
shll
xlat
xor
insb
push
jns
jmp
lea
leave
mov
jnp
ds
lret
js
adc
jl
out
mov
int
push
popw
inc
xchg
xchg
inc
mov
push
shrb
cmpsb
mov
xor
cmp
add
mov
leave
push
pop
cli
fsubrl
inc
jnp
xor
cwtd
jl
scas
aam
mov
dec
jmp
xor
sub
mov
push
xchg
push
data16
sub
push
xor
jb
mov
ds
xchg
jnp
adc
addr16
pop
orb
pushf
cmp
fstpl
repnz
test
pop
mov
add
test
in
and
adc
mov
das
xor
mov
dec
push
push
push
pushf
or
mov
sub
into
adc
fcmovu
lret
mov
sbb
clc
sub
inc
cltd
pop
cmp
or
iret
loope
cmpsb
pop
add
fisubs
hlt
push
stc
dec
jmp
mov
mov
jne
pop
mov
sti
outsl
loope
arpl
pop
cmpsb
idivb
mov
inc
sbb
mov
aam
mov
xchg
popf
jno
xchg
xchg
cmovae
inc
in
cs
es
jle
sbb
fdivrs
mov
mov
mov
mov
sub
in
mov
cmc
sub
mov
jg
cmp
popf
mov
and
xchg
ja
shl
and
xor
xchg
xor
and
sbb
insb
pushf
arpl
movl
push
push
mov
addr16
xchg
lret
movsl
mov
jb
push
jl
out
rcll
aad
mov
inc
icebp
push
iret
pop
mov
loopne
mov
js
lret
inc
inc
cmc
leave
test
popf
lret
xchg
jns
sahf
sub
loope
cmpsb
push
jne
in
sbb
or
je
js
jl
inc
pop
test
sarl
lods
xchg
jbe
imull
repnz
dec
pusha
pop
imul
sbb
rcrb
jo
jns
xlat
stos
xlat
adc
and
or
fld
test
fdiv
fsubs
ja
cltd
bound
iret
xchg
cld
jno
or
inc
sahf
sbbl
pop
cmp
aas
das
popf
cmp
rorb
mov
out
push
xorl
and
jnp
sub
add
enter
sub
sub
jne
push
sub
fcmovu
shll
xchg
xor
jb
cli
xchg
mov
pusha
jo
xchg
xchg
jle
adc
pop
pop
pop
mov
jmp
xchg
ret
lea
xchg
sbb
sbb
pop
and
cmp
mov
sbbb
xchg
jb
out
sub
inc
mov
fisubrs
in
cmp
popa
push
outsb
fnsave
xor
mov
in
push
xchg
push
inc
lods
mov
inc
shll
add
cmp
setle
cmpsl
mov
push
sbb
mov
adc
pop
je
pop
cmp
xchg
stos
stos
lods
fsubs
push
jae
sbb
sbb
jbe
sbb
ja
sbbb
pop
and
arpl
cli
inc
jo
cld
push
das
xor
jne
xor
jno
cmovge
pop
div
shll
out
push
bound
xchg
adc
jp
jbe
xchg
cwtl
xchg
lcall
scas
mov
mov
fwait
jg
cmp
add
lds
sbb
sarb
sti
rolb
addr16
shll
scas
ds
loopne
cmp
push
jmp
mov
and
xlat
nop
adc
out
mov
xlat
sbb
dec
lods
hlt
cmp
sub
pop
std
aad
jne
in
xorb
push
das
stos
add
push
sbb
or
hlt
adc
push
rol
fbstp
jg
cld
xchg
dec
pop
inc
mov
fisttpl
and
sbb
lret
mov
ret
xor
sti
xchg
fistpl
fsubrs
pop
push
andb
xor
subb
arpl
hlt
call
cmp
testb
push
pop
or
mov
test
cmp
aaa
mov
pop
ja
adc
cmp
push
jnp
mov
cld
jg
sbb
inc
xchg
mov
int3
les
mov
loope
xchg
popa
xorl
mov
popa
xchg
adc
add
xor
and
shll
shll
add
adc
inc
mov
mov
andl
xor
and
shll
loope
xchg
popa
sbbl
push
mov
popa
cwtl
adc
add
xor
and
lock
push
xchg
popa
xorl
pop
inc
sbb
andl
into
mov
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmp
sarl
xchg
sub
push
repz
scas
add
pop
add
or
add
add
add
and
jecxz
fiaddl
lcall
add
add
add
add
add
add
imul
add
add
add
add
or
mov
test
inc
add
add
add
add
add
add
add
lock
add
add
add
add
and
mov
add
add
add
add
cmp
out
add
add
add
add
add
mov
jmp
cmp
pusha
add
add
cmpsb
add
add
add
add
add
pusha
add
add
add
mov
or
dec
add
add
add
push
adc
cmp
dec
add
mov
add
add
roll
into
add
add
mov
lock
add
or
add
add
add
mov
or
addl
arpl
cmp
aam
mov
add
add
add
inc
add
add
add
add
add
add
pusha
add
add
add
mov
jo
or
add
add
mov
faddl
mov
mov
inc
add
add
add
add
jle
loopne
dec
add
add
add
add
add
add
add
lret
add
add
add
ljmp
add
add
add
add
jbe
add
add
xchg
add
gs
add
add
sbb
ljmp
add
add
sbb
add
sti
add
add
add
lret
add
cmpsb
add
inc
add
add
add
imul
daa
add
popl
add
jo
or
add
add
add
mov
js
mov
add
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
mov
or
pop
add
add
add
add
xlat
add
add
add
add
add
jo
or
add
add
add
add
add
add
fiaddl
adc
inc
add
add
add
add
add
pop
add
add
inc
add
add
roll
mov
sub
lret
add
add
add
add
add
inc
add
push
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addl
je
test
enter
mov
lea
mov
add
mov
add
add
add
add
add
add
inc
add
add
add
add
add
add
aas
add
add
mov
add
add
add
gs
add
sub
or
add
add
mov
flds
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
faddl
faddl
pop
add
add
add
add
cmp
and
aaa
decb
sbb
xor
in
inc
arpl
fdivs
xchg
sbb
hlt
mov
xchg
or
mov
notl
jecxz
jns
neg
and
inc
adc
insb
xor
aas
rorb
push
xchg
aas
pop
les
inc
fucomi
inc
mov
mov
es
adc
cmp
lcall
dec
ret
inc
cmp
int3
fnop
push
or
xchg
mov
sub
xchg
test
mov
test
sbb
sarb
and
sub
fldl
rcrb
and
into
mov
mov
andb
ret
lret
mov
lret
dec
jae
and
add
or
stc
scas
dec
xor
mov
xlat
call
ljmp
mov
repz
sahf
cs
fldenv
repnz
popf
mov
in
mov
jl
and
pop
sbb
pop
mov
loop
cmpsl
xchg
stos
std
pop
cltd
mov
xchg
mov
sbb
sbb
dec
dec
test
mov
sahf
sbb
test
mov
shrl
rolb
sarb
sar
lea
popf
push
enter
push
jecxz
dec
mov
xchg
rclb
mov
pop
cli
loopne
pop
and
pop
stc
roll
or
pop
test
pop
stos
sub
std
sub
mov
mov
int
adc
addr16
and
aas
aam
decb
not
aas
push
mov
jb
adc
bound
cmp
sub
rcll
mov
and
pop
mov
in
push
ja
filds
dec
cs
shlb
mov
adc
incl
filds
imul
sbb
sub
rolb
adc
xor
xchg
xor
shrl
xor
pushf
dec
and
test
mov
in
add
loopne
push
mov
jno
inc
add
push
dec
sbb
xchg
icebp
or
test
test
test
jno
xchg
loopne
leave
stc
cltd
loop
add
test
pop
and
sahf
icebp
loop
dec
xorb
test
mov
scas
or
mov
ljmp
imul
xchg
cmc
ljmp
cmp
jb
mov
test
xor
dec
cmp
cli
inc
adc
mov
xlat
sub
arpl
pop
jp
ret
adc
jae
aad
push
pop
mov
jo
test
inc
mov
mov
inc
bound
dec
push
mov
movsl
push
push
jb
imul
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
