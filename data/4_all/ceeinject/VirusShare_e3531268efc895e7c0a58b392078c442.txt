call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
aas
je
fs
push
push
inc
cmp
jp
mov
aam
les
test
fs
push
inc
and
adc
popa
out
hlt
cmc
in
aad
les
xchg
xchg
test
fs
push
dec
inc
cmp
sub
sbb
hlt
inc
test
repnz
clc
div
cld
repz
pop
cmp
sub
pop
in
add
ja
sbb
cmp
lea
inc
gs
je
ds
leave
loop
lret
pushf
fmull
cmp
fcom
sbb
aad
fs
or
xchg
subl
ljmp
or
xchg
shrb
cmp
lock
das
sbb
mov
gs
inc
ficoms
add
adc
sbb
adc
inc
vhaddpd
stos
and
mov
add
icebp
shrb
aad
movntq
test
fmuls
mov
lea
hlt
or
cmp
movsl
hlt
gs
xchg
jnp
je
fs
push
inc
inc
xor
adc
add
hlt
in
in
aam
les
xchg
mov
push
je
sbb
inc
jae
push
pop
jno
jo
test
std
mov
mov
jecxz
out
loope
sbb
and
daa
push
ja
popa
imul
xchg
xorb
xor
icebp
xchg
rorb
push
cmp
push
xor
add
hlt
cmc
in
aam
les
xchg
xchg
test
jne
inc
push
push
inc
and
adc
add
hlt
cmc
in
aam
les
xchg
xchg
test
mov
sbb
cmp
cmpsl
mov
in
cli
cmp
add
mov
sbb
mov
pop
dec
cmpsb
xor
imul
lret
addb
fsub
add
xchg
inc
cmc
jl
sbb
ficompl
jge
push
ja
lcall
pop
repz
insl
lret
mov
xor
xlat
jb
mov
and
mov
pushf
mov
pop
in
xchg
out
in
clc
jmp
sub
fistpll
inc
or
sbb
mov
sbb
sub
shr
lret
or
jae
mov
repnz
or
in
jg
sbb
lock
mov
xchg
lret
xor
sti
dec
sub
daa
pop
add
jle
inc
std
int
add
cltd
notl
je
ja
mov
ljmp
nop
xchg
test
push
mov
into
pop
push
push
dec
lods
lea
shlb
je
popf
push
push
aas
push
ds
into
hlt
jae
xor
lahf
push
cld
mov
mov
add
mov
sarl
inc
and
xor
pop
and
sub
fcompl
fistps
jns
scas
loopne
dec
inc
xor
pop
out
push
xor
push
pop
rcrb
xchg
testb
mov
ffreep
int3
stos
lods
test
lcall
or
jb
call
pop
and
fsubl
and
xchg
popf
ja
mov
inc
lahf
stos
or
daa
jo
and
inc
push
mov
ljmp
or
dec
lods
fldenv
fistpll
imul
mov
xchg
es
nop
jbe
js
test
and
mov
xchg
nop
push
inc
test
sub
dec
dec
jmp
dec
out
sbb
loopne
mov
out
cs
add
mov
fisttpll
hlt
sbb
mov
addb
int
adc
scas
dec
jae
xchg
stc
shlb
xchg
cmp
and
int
daa
ljmp
ljmp
xor
jg
pop
jno
cwtl
and
es
xor
movsb
and
mov
sbb
sti
clc
aad
lcall
and
cmpsb
xchg
jmp
lea
gs
xchg
add
jbe
cld
xchg
cmc
test
adc
iret
push
js
dec
push
jo
cli
jge
and
in
rorb
xlat
add
sub
repz
sahf
notl
add
pop
scas
rorb
mov
ja
test
daa
mov
sbb
and
xchg
mov
or
rclb
popf
inc
int3
je
int3
into
sti
push
lods
lock
test
mov
outsb
mov
and
fbld
mov
das
jns
test
int
shlb
pop
aas
inc
push
fsts
scas
outsb
dec
in
mov
dec
inc
loope
ret
call
mov
jo
in
adc
stc
dec
loopne
or
pop
cwtl
push
lea
jmp
hlt
cmpb
mov
pop
add
movsl
and
mov
push
inc
jmp
push
dec
cmpsl
push
dec
hlt
jg
hlt
xchg
and
movsl
or
test
inc
repz
bound
and
mov
fdivrs
fnstenv
test
push
mov
jge
lret
sahf
mov
or
rclb
mov
push
rcl
cltd
adc
mov
mov
pushf
mov
xchg
or
adc
loop
dec
jecxz
lods
scas
lock
inc
subb
mov
loope
jb
iret
inc
loope
adc
jb
lods
repnz
scas
leave
repnz
test
pop
xchg
pushf
sbbl
dec
fnstsw
je
lock
xor
and
pop
mov
push
pop
lds
incb
popf
hlt
sahf
adc
or
fiadds
in
pop
js
stos
and
jg
pop
jmp
xor
mov
in
out
push
push
push
xor
pop
xor
mov
test
dec
insb
idivl
sbb
mov
add
loop
add
inc
mov
pop
mov
stos
push
add
xchg
nop
leave
xor
jbe
insb
pop
push
inc
movsb
pop
jns
add
pop
cs
andb
or
into
ljmp
jle
mov
mov
lods
dec
jne
sahf
xchg
mov
and
data16
les
xchg
nop
cli
add
mov
jecxz
sbb
aas
mov
fldl
cld
xor
pop
rcll
loope
add
cmp
out
cmp
test
addl
xor
jns
out
in
movsb
out
push
mov
es
popf
cmpxchg
and
insb
es
jl
inc
pushf
jbe
mov
out
push
xor
out
mov
cwtl
cmp
push
mov
fldenv
fcompl
shlb
nop
jb
daa
xorl
outsb
pushf
xor
fbld
and
push
mov
xor
or
pop
imull
arpl
or
je
aad
jb
push
js
rclb
inc
mov
sub
mov
notb
subb
cmp
jecxz
movsl
mov
aaa
dec
push
daa
in
loop
lock
inc
cltd
xchg
call
xor
jmp
repnz
and
mov
mov
scas
lods
imul
int3
test
jmp
cwtl
push
stos
and
xor
pop
pushf
insl
leave
mov
fucom
adc
add
cltd
jg
pushf
cli
cmp
ds
jmp
scas
pop
or
mov
adc
mov
ret
mov
out
jo
repnz
pusha
adc
fwait
movsl
add
lcall
sbb
enter
aad
mov
push
sub
scas
nop
pop
push
in
jmp
cmpsb
lcall
ja
notb
addb
fdivl
test
movsl
shll
fnsave
sbb
xchg
das
lea
xchg
adc
push
clc
xchg
add
mov
test
add
cmp
lret
and
mov
push
sub
out
xchg
adc
sti
addr16
inc
jns
stos
stos
in
rcll
clc
push
pop
in
fadd
xchg
lods
sbb
ret
lods
icebp
jecxz
push
inc
and
fs
xor
push
cmp
daa
adc
or
cwtl
push
sub
mov
out
dec
subb
mov
shll
loope
adc
pop
sbb
bound
imul
sarl
xorb
push
lock
ret
mov
bound
pushf
paddd
out
cmpsl
std
ds
sbb
incl
add
orb
mov
jno
jp
fs
cmp
xlat
imul
or
sub
jns
ret
and
add
jns
mov
mov
add
imul
xor
pop
or
jl
and
sbb
pop
cs
sub
rolb
cltd
mov
scas
shrb
lret
add
or
adc
push
xorl
cmpsb
jmp
push
jns
cld
xlat
testl
pop
jp
mov
mulb
or
mov
push
sbb
fiadds
popa
or
or
sahf
cwtl
in
scas
xor
cmc
xor
pusha
shlb
adc
cmp
bound
dec
mov
xchg
sarl
mov
enter
mov
je
xor
mov
adc
inc
test
shrl
fstpt
je
scas
lahf
pusha
imul
icebp
push
test
xchg
movsb
inc
ds
ret
mov
jmp
repz
xchg
mov
stc
lret
inc
or
lods
iret
mov
mov
mov
mov
outsl
lods
shrb
ret
dec
pusha
xor
push
outsb
leave
or
aam
testb
inc
mov
dec
ret
bound
push
hlt
rcl
lcall
ds
cmp
fincstp
or
cld
pop
dec
dec
sbb
adc
fs
icebp
negb
mov
mov
shlb
sarl
cmp
mov
push
pop
add
stos
or
sbb
jmp
jae
push
addr16
pushl
std
insb
add
adc
jae
ja
aam
aad
scas
movsb
pop
test
mov
mov
repnz
out
imul
mov
cmp
clc
cmp
hlt
sub
cmp
inc
push
sti
jle
int
stos
mov
sti
and
xchg
es
mov
sbb
stos
adc
adc
mov
pop
cmp
pop
lret
add
jno
hlt
divl
loope
mov
xchg
je
mov
jbe
test
jl
sarb
dec
fsubs
cmpsb
sbb
cli
je
lret
std
aam
std
jecxz
xchg
test
stos
ljmp
daa
repz
popf
ja
mov
pop
lret
add
add
pop
iret
stc
inc
sbb
jb
mov
mov
scas
mov
nop
out
sub
mov
sti
mov
lret
gs
out
mov
cmpsl
inc
cmpsb
jb
icebp
add
out
push
mov
pop
xor
pop
jecxz
stos
jae
pop
movsb
push
jae
mov
test
xlat
or
jo
aas
data16
jnp
icebp
cld
pusha
aaa
jmp
mulb
les
pop
or
inc
stos
pushf
lods
cmpsb
rep
xor
jnp
inc
je
int
aad
mov
test
xchg
xlat
jae
push
cli
mov
push
fiaddl
dec
iret
data16
xchg
sbb
dec
ret
jbe
inc
cmp
push
js
mov
push
cmp
lods
xor
xor
mov
movsb
popa
xchg
pop
sbb
adc
nop
mov
stc
mov
ss
mov
addr16
cwtl
iret
cmpsl
ret
xchg
dec
incb
jbe
cmp
sbb
ds
popf
lods
sub
insb
dec
jge
jmp
mov
popf
xlat
les
in
ja
iret
dec
fbstp
outsb
arpl
test
testb
insl
fisubrl
mov
and
lcall
sub
outsb
mov
mov
or
sti
pop
arpl
leave
xchg
xchg
pushf
gs
adc
mov
imul
jmp
enter
sbb
inc
stos
pop
fwait
jecxz
in
mov
push
cmpsb
shll
push
lret
imul
and
adc
arpl
jno
es
and
mov
stc
inc
jecxz
pop
xchg
push
insb
gs
nop
mov
scas
roll
dec
add
out
icebp
dec
sti
mov
aaa
mov
mov
pushf
pop
fnstsw
or
add
cmp
xchg
and
js
mov
inc
push
ret
or
insl
dec
addr16
aad
hlt
mov
enter
jle
mov
and
push
cmp
jbe
cmp
cli
cmp
addb
aam
cld
or
mov
xlat
sbb
and
aaa
lock
adc
jg
bound
mov
rcrb
push
jns
stos
adc
xor
sub
bswap
dec
addl
adc
inc
xor
jg
mov
lea
cli
stc
mov
iret
enter
lahf
out
cmpl
jne
sbb
push
rclb
ret
sti
xor
jno
ljmp
fldcw
cli
push
mov
addr16
add
test
in
dec
into
lock
mov
dec
in
xorl
rorb
lret
loopne
sbb
lods
and
scas
inc
cld
stc
dec
into
xchg
rolb
call
ss
pop
jae
fnstsw
inc
andl
roll
or
push
inc
insl
or
mov
test
inc
jns
or
sbb
fwait
nop
mov
stc
sbb
movsl
xchg
cwtl
shlb
outsl
xchg
mov
sub
aad
sub
cmp
jle
mov
jge
mov
cmp
jge
cs
sbb
mov
or
dec
sti
aas
xchg
cwtl
pop
mov
sahf
inc
dec
movsl
shr
cmpsb
cmpl
xchg
jecxz
in
xor
or
sbb
adc
cmp
sbb
xchg
xchg
or
xor
sub
clc
cmp
sbb
push
dec
jns
dec
add
mov
pop
dec
out
xor
xor
pop
lret
stc
sub
mov
test
out
adc
mov
es
jnp
in
mov
addr16
fwait
add
test
jae
pushf
lods
and
loop
mov
addr16
adc
add
dec
je
jmp
and
das
outsb
rcll
xchg
sbb
fisubrl
pusha
mov
pop
mov
lret
jbe
shrl
idivl
jne
test
std
and
insb
test
adc
popf
mov
add
mov
lret
into
shlb
clc
mov
push
rcrl
or
shrb
out
mov
orb
or
adc
lahf
into
inc
rcrl
add
insl
stos
cwtl
iret
jp
adc
lcall
test
xor
lret
add
sub
ret
out
and
adc
cltd
enter
or
repnz
mov
cmp
or
jle
jmp
cmp
sbb
pop
imull
xchg
test
xorl
test
js
fbld
pop
lcall
adc
cld
inc
scas
cmp
add
push
mov
fiaddl
test
loop
lret
hlt
push
xchg
xchg
bound
cmp
fisubs
xchg
pusha
fisubl
add
sub
out
aad
mov
insl
adc
push
mov
xchg
popa
sub
mov
popl
sbb
xor
addr16
and
popa
push
pop
mov
lods
mov
pop
das
push
or
inc
loop
jle
mov
mov
sbbl
es
push
lods
adc
rcrl
loopne
and
xchg
out
jle
mov
xchg
or
cltd
sbb
fmull
sbbl
sub
daa
lret
ds
mov
jns
xchg
loopne
repz
or
clc
outsb
fadds
sbb
pop
jo
decl
cmp
and
popf
mov
xchg
jle
repnz
sub
or
jb
jb
inc
lds
pop
out
in
fldln2
mov
inc
push
stc
xor
mov
dec
sbb
adc
cltd
xor
mov
or
mov
adc
stos
out
push
and
aas
cs
dec
sbb
add
pop
ret
jno
jo
xchg
lods
sbb
xchg
xchg
xchg
cli
lods
xchg
test
pop
loope
push
cmc
cmp
cmp
ret
fcompl
and
dec
push
addr16
sbb
push
ret
andb
sub
jno
mov
mov
or
fadds
mov
pop
xchg
sar
fwait
es
fwait
and
jp
lods
lret
jnp
aaa
lcall
jle
out
mov
xchg
loope
inc
xchg
outsl
imul
add
sub
movb
fnsave
and
sub
push
sti
mov
lock
xchg
pop
ficompl
int3
push
xlat
shl
outsl
gs
ds
push
pop
adc
loop
mov
lods
cmp
dec
jne
stc
in
cmp
mov
sti
pusha
jno
daa
jmp
mov
cltd
ret
js
lahf
dec
and
inc
xchg
call
dec
mov
arpl
xor
in
lret
xor
and
cmpsl
adc
pop
cld
clc
insl
add
pop
jmp
push
add
xrstor
lds
jnp
test
mov
mov
jmp
aam
lods
inc
push
xor
les
fdivl
inc
xlat
fdivrl
pushf
pusha
cmp
sbb
int
cs
mov
mov
jl
and
arpl
and
fimull
testl
jl
repnz
vmread
mov
push
sbb
fnsave
or
inc
pop
dec
movsl
inc
mov
popa
sub
pop
loopne
mov
lods
xor
sbb
and
repnz
adc
ja
sahf
loop
out
call
imul
fidivrs
or
xchg
popl
iret
mov
adc
push
mov
aas
fnstsw
testl
imul
arpl
incl
mov
inc
jmp
adc
scas
aas
fs
lods
fnstenv
mov
lret
rol
jecxz
pop
mov
dec
sbb
cltd
cmp
cmp
aad
test
inc
push
leave
std
ljmp
cltd
frstor
scas
jne
cld
insb
lcall
xchg
push
jmp
mov
les
xchg
ja
add
push
mov
push
ds
fcompl
mov
ljmp
jp
scas
sbb
aas
inc
mov
je
mov
xchg
popf
lods
dec
or
in
mov
xchg
out
xor
lods
je
xor
push
dec
xor
pop
mov
mov
out
xchg
cmp
into
and
inc
sub
xor
xchg
pop
xor
ds
les
mov
popf
insl
xchg
mov
lds
jp
sub
sbb
fnstsw
add
or
push
mov
xor
addl
sub
fwait
jnp
and
inc
push
sahf
mov
rep
fnstsw
xchg
add
out
leave
popa
and
jge
mov
cmp
int
call
mov
lods
cmpsb
div
xchg
push
and
mov
add
pop
int3
ss
cmpsb
cs
sarb
fstl
jle
push
and
rorb
push
mov
popl
and
ljmp
mov
pop
and
ffree
adcl
xchg
popf
jns
inc
xchg
inc
xlat
xchg
sub
jae
sub
test
adc
stc
fidivrl
decl
add
lret
rolb
cmc
out
cmp
add
dec
push
adc
pop
andb
cmpsb
cmpb
push
adc
cltd
push
pop
mov
jae
or
inc
jp
sub
push
or
loopne
rorb
aam
fdivrs
stos
sub
add
bound
mov
push
test
call
jge
xor
sub
and
pop
pop
xchg
loop
repnz
xchg
dec
push
pusha
loopne
pop
orb
mov
sbbb
out
mov
scas
out
jmp
pop
fdivl
or
xchg
lret
arpl
enter
fnstenv
jmp
add
jae
es
fisttps
je
in
imul
dec
adc
call
ljmp
or
pop
cmp
das
add
mov
sbb
fistpll
xchg
push
sub
jo
ss
pop
push
adc
fistl
call
cltd
repnz
jbe
jmp
loope
xchg
add
xor
jle
sbb
ja
out
sarb
pop
mov
in
mov
rolb
xlat
lahf
lock
ljmp
xor
xor
push
cld
das
xchg
ja
lods
cmp
fstps
mov
in
mov
xchg
aaa
xchg
lret
jae
imul
call
push
movsb
sub
adc
int
shrb
aam
mov
sbb
xor
jnp
or
fwait
fwait
insl
or
or
inc
flds
rdmsr
nop
lea
in
mov
pop
movsl
push
mov
sub
sbb
jp
mov
push
insb
mov
xchg
mov
mov
xor
push
mov
xchg
mov
loop
mov
jae
popf
xor
push
mov
iret
or
out
jle
movsb
cs
pop
jle
xor
outsb
mov
xchg
das
call
and
mov
mov
int
mov
fwait
push
push
jmp
dec
mov
pop
enter
test
inc
push
mov
jp
int
lret
inc
pop
push
ljmp
cmpsb
in
popa
push
adc
pop
add
dec
popf
das
inc
dec
jns
push
addr16
sbb
mov
fcmovb
pop
ja
out
inc
sub
cld
pop
lods
shl
add
adc
pop
outsb
cltd
aaa
dec
jmp
push
mov
adc
pop
mov
push
fld
jae,pt
dec
xorl
push
outsb
leave
int
jns
stos
test
loopne
or
inc
sbb
lds
js
push
sbb
sbb
dec
add
push
push
xor
mov
or
out
das
aam
shrl
sub
inc
xchg
or
daa
mov
jb
out
dec
push
clc
ja
jp
xor
enter
cmp
push
cmc
in
sub
mov
xchg
je
push
mov
loop
movhps
ja
jge
cmpb
test
jnp
mov
shrb
xchg
jmp
insl
inc
push
add
jecxz
inc
xlat
mov
lret
popf
mov
stos
repnz
lret
cmpsl
jge
mov
cltd
jns
loope
adc
mov
dec
loopne
repnz
cwtl
mov
out
lds
xor
negb
scas
mov
movsl
fs
push
inc
and
adc
add
hlt
cmc
in
aam
les
xchg
xchg
test
jne
inc
push
push
inc
and
adc
add
hlt
cmc
in
aam
les
xchg
xchg
test
jne
inc
push
push
inc
and
adc
add
hlt
cmc
in
aam
les
xchg
movsb
test
inc
fs
push
inc
and
adc
les
hlt
or
aam
mov
cmp
pop
jp
push
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cmp
faddl
push
xor
jae
sub
cmp
in
aam
les
xchg
loop
loop
adc
xor
push
and
adc
add
movsb
nop
in
cli
xchg
les
xchg
repnz
scas
or
add
sub
pop
cmp
js
jno
mov
xchg
xchg
clc
lods
jecxz
mul
xor
inc
xor
adc
pop
mov
loope
rorl
mov
js
xor
mov
fstpt
adc
push
mov
xor
scas
and
je
push
insl
les
add
inc
pusha
push
cmp
mov
sbb
push
cmp
dec
ret
addr16
loop
inc
sbb
sub
adc
xor
sub
popf
loope
mov
les
pop
cmp
jnp
icebp
sub
ret
cmpsl
mov
xor
mov
sub
mov
repnz
sbb
stos
xor
jmp
xchg
dec
std
out
or
sbb
aad
les
rorl
fs
xor
pusha
inc
adc
mov
lcall
mov
xchg
ja
add
xor
and
push
sub
push
gs
movsl
cli
test
movsl
int
mov
ret
je
in
add
inc
daa
pop
and
js
ja
int3
jmp
jecxz
test
mov
lds
and
add
inc
adc
add
hlt
xchg
in
aam
les
xchg
repnz
je
add
and
and
adc
add
hlt
xchg
in
aam
les
xchg
repnz
je
mov
xor
dec
daa
je
pusha
mov
cmp
scas
and
aaa
xchg
in
jne
rcr
push
ds
dec
test
jbe
fidivrl
mov
in
push
mov
hlt
xlat
bound
arpl
bound
vpcmpeqb
and
hlt
mov
imul
insl
cmp
stos
cmp
xchg
mov
les
repz
mov
ljmp
mov
jns
or
sub
loop
add
mov
aam
es
and
adc
push
pop
repnz
stos
lret
mov
dec
jae
subb
scas
cmp
ds
xor
adc
cmc
and
xor
sub
pusha
je
and
aad
jbe
dec
xor
push
sbb
in
icebp
divb
pop
adc
ss
out
mov
mov
mov
loope
int
add
in
aaa
push
lret
xorl
or
adc
cltd
ljmp
and
push
mov
mull
mov
loopne
mov
xchg
rcl
cmc
push
mov
xor
hlt
outsb
pop
mov
mov
ret
ret
rol
in
int3
das
hlt
sub
test
dec
add
out
cmpb
leave
pop
mov
addl
sbb
aas
and
cli
xor
and
mov
push
dec
inc
and
test
jecxz
insb
mov
aas
ret
mov
mov
dec
inc
lahf
rclb
jmp
jb
scas
fisubs
and
imul
mov
fidivs
pop
jp
out
sbb
sbb
xchg
cs
mov
xchg
sub
sbb
fstp
fsts
sub
adc
sub
mov
xor
inc
xor
lock
push
into
adc
out
sbb
push
sub
cmp
mov
into
int
ror
imul
or
sbb
int3
lock
pop
sahf
loopne
jge
xchg
pusha
inc
shrb
sti
shl
mov
imul
js
nop
mov
xchg
push
cmp
inc
sub
sti
ja
lock
faddl
bound
xor
jae
ret
cmpsl
xor
rcrb
and
sub
add
mov
sbb
pop
mov
dec
cmpb
addl
or
push
jp
subb
jbe
pop
xchg
cmp
outsl
test
push
fbstp
and
add
mov
dec
xchg
mov
int
mov
push
pop
out
or
lods
sbb
jecxz
nop
mov
mov
aam
pop
mov
pop
mov
fstpt
jg
jbe
repnz
mov
xor
js
sbb
or
mov
mov
adc
in
jl
icebp
fsubrs
and
test
mov
repz
mov
jp
xchg
fistl
testb
out
fwait
dec
and
insl
or
mov
sub
push
jle
out
es
lods
ficompl
pop
dec
pop
mov
cmp
mov
in
cmpb
jle
lahf
lock
inc
sbb
fiaddl
cltd
inc
inc
jo
mov
ja
arpl
ss
push
dec
adc
xor
mov
sahf
loop
dec
aas
pop
cmp
cmp
jo
pusha
out
in
loopne
aad
push
andl
stos
hlt
or
mov
sbb
dec
mov
xchg
inc
imul
and
mov
imul
dec
sub
movsb
sub
adc
popf
jae
jle
adcb
inc
add
rcrl
std
addb
mov
or
ja
xlat
adc
xchg
fbstp
push
xchg
das
xor
sbb
xchg
fiadds
sbb
shrl
out
cmp
arpl
sahf
outsb
fsts
jg
mov
dec
addb
dec
out
jmp
mov
fsubrp
popf
adc
mov
outsl
cli
dec
mul
and
mov
add
inc
mov
cmc
jge
jno
mov
lods
cmpb
mov
cld
fwait
push
aam
mov
das
test
ret
push
cmp
stos
loope
mov
stos
lahf
aad
pop
movsl
add
insl
inc
push
sbb
xor
ja
sti
inc
test
mov
push
xchg
test
movsl
mov
adc
mov
sbb
sbb
cmp
sbb
ja
aaa
mov
lcall
or
xlat
or
dec
in
add
push
lods
out
gs
add
push
mov
mov
adc
push
pop
bnd
pushf
out
xchg
add
scas
xor
test
xchg
aam
xchg
dec
orb
xchg
mov
jmp
and
int
daa
mov
jne
icebp
cmc
xchg
stos
cmp
pop
popa
insb
aaa
js
jg
in
test
in
fstl
dec
adc
lcall
fidivrs
fstl
scas
xor
aad
stc
adc
rcll
xor
mov
scas
pusha
xchg
call
pusha
into
scas
insl
inc
cs
cwtl
jecxz
sub
cld
xor
sbb
dec
std
push
lret
sbb
pop
scas
mov
jle
jno
sbb
dec
cmp
sbb
daa
mov
add
popa
xchg
stos
push
sbb
cltd
jle
lcall
loopne
and
insb
mov
push
test
mov
mov
sahf
sub
pusha
inc
fsubrs
xchg
pop
mov
ss
and
xor
xor
not
mov
jbe
mov
add
xor
inc
cld
pop
lret
subb
mov
decl
hlt
mov
add
jp
dec
push
lods
stc
shll
xchg
dec
sahf
push
popf
enter
jb
add
dec
popa
sub
dec
je
sti
cwtl
push
dec
sub
dec
xchg
jge
pushf
pop
jmp
jmp
sub
dec
cs
test
pminsw
pop
pop
call
sub
nop
push
lcall
js
sbb
pop
add
mov
addr16
ss
sub
out
or
js
xchg
addr16
in
pop
fs
out
inc
clc
or
mov
test
mov
fdivs
or
and
lret
xchg
add
aam
shl
mov
fnsave
in
rorl
jns
loope
jecxz
hlt
in
jo
add
jne
insb
mov
movsb
push
call
mov
insl
mov
leave
cli
jle
sbb
inc
mov
lcall
jae
js
lahf
push
out
pusha
mov
sub
cmpsb
xlat
mov
jne
mov
addl
outsl
and
push
jg
xchg
adc
inc
pop
push
mov
sbb
sbb
fistl
xchg
inc
jno
fdivs
push
aas
xor
push
lret
imul
rcll
lcall
sbb
or
push
les
mov
xor
cld
pop
pop
mov
xchg
inc
into
mov
ds
fstpl
dec
dec
rcrl
mov
jp
decb
std
dec
push
scas
sub
mov
scas
int3
mov
movsl
lea
mov
pop
lea
test
leave
imul
mov
adc
pop
xchg
insl
scas
xchg
jns
pop
pop
lcall
jnp
dec
movswl
push
lret
sbb
call
mov
imul
in
jp
push
dec
sub
add
iret
out
jbe
xchg
cmpsl
incl
pop
mov
stos
fdivr
xchg
sbb
imul
hlt
idivl
sbb
ja
loop
sbb
and
dec
dec
add
sub
mov
sbbb
shr
dec
movsb
aas
push
lahf
fadd
jno
jp
mov
clc
add
mov
xchg
lret
pop
lods
test
data16
mov
pop
rorl
bound
xor
out
test
or
sahf
rcrb
push
mov
dec
dec
addr16
imul
testl
or
sbb
rorl
in
movsb
xchg
sarl
xchg
test
popf
loopne
sub
dec
repz
les
loopne
mov
sbb
jae
shrl
outsl
dec
inc
jae
adc
fimull
pusha
scas
shl
push
jecxz
jne
stos
jne
rcrl
lea
repz
leave
jmp
sbb
ficoml
ss
arpl
pop
sbb
roll
divb
sub
push
sbb
dec
push
pusha
adc
cltd
fdivs
dec
repz
pusha
mov
jbe
data16
inc
addr16
sub
cmc
mov
mov
imulb
xchg
mov
or
mov
push
mov
in
loop
out
xchg
cmc
cltd
sbb
pop
push
pop
dec
inc
add
xchg
or
aad
add
or
sbbb
aad
fsubl
push
add
orb
movlps
push
outsl
and
mov
pop
sbb
xorb
xchg
notb
insl
ret
cld
jne
mov
aad
in
push
push
shrl
decl
adc
je
or
cmc
mov
mov
call
arpl
popa
mov
push
daa
idivl
lcall
arpl
mov
add
les
sarl
mov
mov
cwtl
jns
mov
scas
mov
loop
dec
cld
mov
ret
push
dec
imul
addr16
in
cmpsb
sbb
stc
lret
sub
clc
push
movsb
test
pushl
sbb
cltd
sbb
push
fcom
pop
out
repz
xor
fbstp
cmp
sbb
push
shll
mov
dec
jns
call
cmp
push
movsl
call
add
inc
mov
ret
dec
adcb
movl
aaa
jo
xchg
int
rcrb
movsl
scas
jge
cli
mov
int
lock
fbstp
xlat
cmc
xchg
sahf
add
pop
loop
loop
xor
fstpl
rorl
add
insl
pusha
push
test
shrl
pop
mov
negb
push
jmp
loop
stc
sbb
in
lds
lods
pop
or
pop
adc
dec
fcmovnbe
or
ret
gs
xchg
rolb
test
push
sbb
add
push
xor
add
sub
in
fdivl
lahf
mov
mov
loopne
mov
popa
js
addr16
fnstcw
mov
insl
mov
scas
stos
loope
push
es
push
je
repz
movsb
fldenv
mov
fildl
ss
shl
dec
cld
out
gs
push
repz
scas
hlt
jecxz
mov
and
lret
leave
int
lahf
loopne
pop
dec
mov
aaa
ffreep
inc
cmpsl
lahf
outsb
lock
cmp
out
pop
ljmp
push
pop
xor
popa
ficompl
rolb
out
aam
hlt
popa
mov
cwtl
xor
clc
jle
mov
and
andb
jecxz
notl
mov
xor
sub
xor
fisubrl
adcb
or
aas
push
push
ss
lods
div
divb
xor
andb
cmp
movsl
adc
bound
mov
lods
cmp
and
jl
test
les
xchg
add
or
stos
push
loopne
and
mov
les
enter
gs
push
mov
popa
lret
jp
iret
loop
imulb
aas
jbe
or
sbb
push
cmc
inc
fidivs
sbb
pusha
daa
pop
lcall
aaa
mov
mov
mov
je
adc
jae
js
push
fisubrs
das
les
jg
and
roll
add
testl
or
negl
enter
sbb
inc
sbbb
push
repnz
and
bound
shrl
xor
sub
xchg
es
and
dec
in
stc
pop
push
sbb
fs
outsb
and
addr16
ljmp
inc
pop
and
adc
mov
test
or
popf
mov
push
push
iret
outsl
imul
repz
ja
push
popf
mov
jnp
repnz
mov
out
mov
sti
sbb
mov
pop
pop
pop
insb
inc
pop
ss
or
sti
notb
out
sbb
cmpsl
fnsave
sub
or
sbb
sbb
gs
mov
cmp
cmp
mov
adc
push
ret
pop
jnp
shl
mov
mov
sub
mov
push
aam
out
stos
cmp
jl
test
insb
loopne
ds
rcrb
ja
jge
sub
and
cmp
repz
bound
sbb
add
iret
xor
or
imul
mov
add
imul
adc
das
mov
stc
xor
push
or
js
mov
faddl
xchg
pop
adcl
inc
jne
repnz
add
mov
jo
push
adc
out
in
push
cwtl
push
jne
mov
jns
fcmovb
dec
jnp
pop
pusha
fimull
cmp
aas
xchg
xchg
mov
and
mov
sarb
in
inc
cmpsb
lcall
loop
jge
inc
jl
xchg
or
and
lahf
dec
pop
loopne
xor
jmp
add
xchg
push
lock
add
cmp
cmp
inc
pop
sub
adc
mov
sub
ljmp
test
std
sub
outsb
addb
aad
xor
mov
gs
dec
sarl
shl
mov
aam
lret
rclb
divb
stc
cmp
or
sub
xchg
ret
jle
sub
xchg
push
adc
jl
push
jge
lcall
xlat
fdivl
push
add
adc
sub
out
imul
clc
jo
jl
outsb
outsb
insl
outsl
xchg
jne
jecxz
adc
sub
push
pop
mov
js
pusha
add
sbb
out
xchg
jecxz
xchg
jmp
xor
mov
push
fisubrl
into
popf
call
xchg
aas
adc
add
movsb
sbb
dec
les
ss
mov
in
adc
enter
pop
outsl
inc
aam
jge
pop
lcall
testb
cmp
xor
mov
sbb
inc
mov
or
pop
testl
into
push
cwtl
addb
cmp
push
adc
inc
xchg
lods
imul
ds
inc
mov
dec
ds
dec
stos
js
cli
addr16
fs
or
pop
fsubrs
repz
mov
scas
inc
dec
or
dec
pop
movsb
dec
mov
or
cmp
and
shlb
adc
out
pop
enter
arpl
stc
add
insb
into
mov
push
mov
pop
lea
cmp
xor
std
mov
leave
inc
xchg
mov
add
mov
hlt
sbb
fstpl
jge
std
mov
mov
cmp
dec
push
sahf
sbb
mov
sbb
mov
lret
arpl
pop
xor
dec
xchg
enter
inc
cmp
sub
sbb
cmp
mov
roll
cmp
mov
add
es
nop
ss
enter
dec
fdivl
push
andl
insl
int3
sahf
mov
pop
in
jbe
std
mov
pop
pushf
inc
jo
dec
sub
sbb
sbb
fwait
xlat
push
sbb
inc
fsubl
into
mov
hlt
mov
pop
sub
lds
and
pop
in
push
mov
mov
adc
cmpsb
je
out
js
iret
sub
stos
les
fprem
push
push
pop
fidivl
mov
xchg
daa
adc
in
shlb
cmp
mov
jae
dec
mov
jle
lds
fbstp
mov
pushf
scas
xor
js
loop
fistpll
push
enter
mov
rclb
xlat
sub
or
int3
dec
js
cmpb
jne
bound
and
xor
xor
and
cli
cmp
testb
aam
mov
fdivr
xchg
push
pop
dec
lcall
sbb
je
imul
inc
push
stc
lahf
mov
xlat
ja
jb
gs
or
cwtl
popf
push
or
sbb
cmc
adc
into
lock
insb
in
es
add
dec
fwait
stc
mov
push
loopne
out
inc
or
ljmp
jb
test
mov
mov
jne
sbb
mov
out
inc
pop
dec
iret
ss
cmpsl
sbb
pop
flds
mov
aas
mov
pop
shll
xor
sub
cmc
repnz
sbbl
outsb
lds
and
hlt
fldenv
mov
insb
and
dec
cmp
inc
sub
fdivrl
test
mov
icebp
or
lret
mov
mov
push
subb
cmp
dec
sti
arpl
mov
and
or
adc
cmp
and
das
inc
inc
jecxz
sub
clc
push
daa
or
cmp
notb
je
cwtl
hlt
dec
jno
jne
mov
in
pusha
incb
jle
das
or
test
movsl
lock
or
cltd
and
sbb
iret
out
mov
arpl
pushf
popa
dec
test
mov
movsl
pop
insl
dec
pop
adc
icebp
notb
sbb
jecxz
das
out
sti
movsl
aas
leave
adc
cmp
jne
cli
cmp
xor
rcll
sub
imul
dec
pushf
xor
ret
lcall
xor
xor
xchg
add
icebp
xor
sti
iret
mov
xor
rcrl
outsl
jo
pop
cltd
dec
imul
out
loope
sbb
dec
popa
mov
adc
pop
jbe
cmp
xor
mov
cmc
jbe
lea
loope
pop
adc
movsb
push
test
add
test
lock
dec
dec
push
cmc
cs
ss
std
mov
les
out
mov
out
jle
addr16
aad
cmp
je
xchg
fdivrs
sti
pop
and
out
xchg
inc
dec
pop
xchg
adc
or
mov
cmc
mov
mov
inc
shll
mov
push
loop
or
mov
adc
inc
mov
and
fs
inc
sub
or
fs
hlt
push
lods
je
jns
jg
inc
std
aad
ret
jb
add
jmp
mov
rorb
pop
push
mov
push
mov
aad
push
int3
mov
pop
sub
adc
lods
insl
push
cmp
add
xchg
int3
loop
gs
adc
call
sub
scas
jo
inc
mov
dec
adc
test
dec
mov
lcall
stos
int
adc
adc
mov
shlb
addr16
loop
outsb
xchg
push
pop
push
mov
push
fisttpl
daa
inc
js
dec
test
popa
mov
mov
pop
adc
mov
test
outsl
mov
sub
and
mov
mov
xor
push
xchg
push
adc
loope
jmp
dec
outsb
push
or
xchg
xchg
insb
sub
or
pop
imul
rclb
fdivs
adc
iret
imul
cmp
outsb
xchg
daa
inc
cltd
dec
add
jnp
pop
cmp
outsl
nop
dec
popf
dec
sbb
cmpsb
ss
ret
xor
lea
call
shrl
inc
fidivl
push
adc
outsl
inc
dec
cld
push
es
mov
and
inc
sbb
ljmp
xchg
mov
xor
sbb
jae
mov
jmp
imul
clc
mov
fisttpl
xorb
add
cs
int
cmp
lret
jle
fisubl
add
fists
test
jmp
pop
popa
push
imul
push
notb
adc
adc
cmp
sub
adc
leave
jno
inc
insb
out
pop
mov
icebp
jle
sti
adc
jmp
aad
das
lretw
fisubrl
shlb
sbb
push
dec
fisubrs
loope
mov
adc
xchg
stos
adc
cmp
push
lret
aaa
mov
inc
es
movsl
enter
aam
jl
fsubrs
mov
enter
mov
sar
jl
jo
xor
inc
jg
cmp
ffreep
inc
das
jmp
dec
xor
out
fucomi
mov
or
xor
shrl
icebp
imul
jl
pop
push
sub
jle
out
scas
mov
shll
inc
sbb
push
addl
repz
sbb
int
pusha
out
push
push
mov
paddusb
sub
cmp
add
inc
add
fiadds
push
cmpsl
adc
inc
xlat
inc
ss
and
inc
int
sbb
and
push
mov
xor
xchg
push
lret
pop
shl
out
add
inc
orl
xchg
xchg
mov
jbe
idivl
xchg
fstpl
xor
and
adc
add
hlt
xchg
in
aam
les
xchg
repnz
je
add
and
and
adc
add
hlt
xchg
in
aam
les
xchg
repnz
je
add
inc
and
jb
lock
in
fnsave
mov
loop
adc
fdivl
insb
and
xor
adc
test
xchg
sbb
jle
aad
pop
sub
imul
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
mov
xchg
repnz
sarl
ret
add
adc
notb
push
push
mov
adcb
ret
ret
and
push
jae
add
xor
jae
add
or
pop
xchg
in
jecxz
repz
ret
ret
mov
xor
adc
adc
xor
push
fsubl
jmp
mulb
adc
sbb
xlat
jne
adc
dec
push
xchg
aaa
movsb
clc
push
dec
inc
xchg
pop
cmc
pop
xor
in
insb
fsubl
or
lds
lret
push
int3
xchg
add
sahf
lea
ds
push
adc
mov
cmp
and
xor
fisubs
int3
pop
ret
add
bound
mov
mov
lret
dec
outsb
xchg
or
dec
ret
clc
and
cld
cld
inc
lea
bound
inc
scas
dec
mov
pop
insb
push
loop
out
dec
push
adc
mov
shll
jae
fimuls
aas
dec
xchg
in
push
xchg
or
mov
xor
push
xor
jbe
mov
push
inc
push
jmp
addl
rol
fs
and
adc
arpl
pusha
inc
inc
cmp
int3
shlb
popf
mov
cmpsb
ret
inc
jno
ja
addr16
add
or
cmp
adc
mov
jecxz
fwait
stos
xchg
push
pop
jo
adc
jl
add
add
ljmp
mov
ret
ret
and
xor
add
adc
bound
inc
inc
push
mov
mov
xchg
repnz
repz
ret
and
xor
add
adc
bound
inc
inc
push
mov
add
push
xor
cmp
mov
shrl
lcall
mov
dec
in
aas
fstpl
mov
mov
pop
rol
xchg
iret
sbb
jno
call
jne
inc
mov
xor
pop
gs
mov
das
dec
jbe
bound
ret
or
adc
or
cmp
and
negl
rorb
sti
ss
inc
mov
and
xchg
lret
bnd
push
mov
xor
add
outsl
sbb
pop
xor
test
and
idivl
adc
ret
push
xor
xlat
test
xchg
and
mul
mov
jnp
xor
repz
mov
mov
movsb
xor
and
inc
xchg
cmpsb
lahf
and
dec
dec
shlb
push
pusha
add
shlb
pop
push
mov
inc
pushl
xchg
adc
adc
mov
push
inc
leave
pop
cli
pop
pop
and
sub
xor
fsubs
and
mov
cmp
jecxz
scas
jmp
ret
aaa
movsl
pop
pop
add
xchg
out
hlt
jle
inc
pusha
and
lea
mov
std
or
dec
push
xor
dec
cmp
insl
mul
data16
iret
ja
cmp
jp
int3
mov
lea
push
sbb
rorb
lods
add
xchg
xchg
inc
dec
rorb
imul
cltd
daa
adc
and
xor
pop
mov
or
ljmp
mov
cmp
mov
xor
jae
movsl
xchg
arpl
push
gs
dec
out
das
test
mov
repnz
push
push
shll
sub
and
mov
sbb
mov
aaa
xor
dec
sbb
xor
dec
and
int
and
movsb
iret
jg
push
dec
add
lods
or
pop
jnp
outsb
insb
cmp
ja,pn
inc
push
test
inc
iret
xor
push
mov
dec
fisubs
pop
xchg
lcall
inc
divl
pop
cmc
cli
lret
clc
hlt
add
inc
movsl
push
push
rol
adc
push
xchg
mov
lret
mov
push
addr16
or
daa
inc
or
fsub
jp
inc
lret
sbb
enter
pushf
jp
outsl
cmpsl
sub
sub
enter
addr16
rorb
repnz
pop
inc
icebp
dec
int
add
hlt
xchg
aam
pushf
clc
ja
dec
mov
push
out
dec
scas
outsb
mov
xchg
fistps
xchg
std
insl
pop
fimuls
repz
roll
movaps
fcmovnbe
and
pop
into
into
xchg
xor
fdivp
sub
aas
and
inc
fadds
inc
xchg
hlt
push
pusha
leave
add
pusha
mov
cmp
rcrb
dec
ljmp
aaa
lods
lahf
ss
insb
and
divl
push
inc
sub
icebp
insl
movsb
clc
dec
lods
jle
sub
cmc
jle
aas
es
test
sti
sub
mov
insb
test
in
pop
lea
adc
cmp
cmpsl
inc
into
call
mov
dec
xor
outsb
mov
in
mov
add
xchg
cmpl
push
jns
clc
in
add
js
sbb
mov
or
xor
mov
outsl
sub
dec
jae
cmp
loope
aas
xchg
repnz
ja
nop
dec
xor
shrb
jnp
pop
jle
cmc
repz
mov
in
cld
fdivr
popf
sbb
mov
mov
and
and
test
cmp
pop
xorl
stc
cmc
push
das
pop
mov
pushl
ds
mov
cld
cmp
gs
xor
insb
cwtl
in
or
dec
mov
aad
and
xchg
lods
popw
ficoml
arpl
add
mul
inc
test
jbe
or
divps
es
and
lret
pop
jae
or
in
insb
cs
and
imul
sbb
mov
shrl
lcall
sti
gs
and
lret
lret
push
data16
and
adc
jno
out
and
push
push
leave
push
mov
aam
pop
and
or
loop
lret
inc
xchg
inc
adc
mov
fdivp
ja
cmpsl
xor
insl
shrl
xchg
data16
fdiv
aad
xor
mov
and
dec
pop
mov
push
test
dec
jae
fwait
mov
push
xlat
daa
add
mov
adc
jne
jmp
cmp
test
push
pop
jg
jne
jns
sub
xor
lock
push
stos
adc
dec
inc
mov
xor
add
adc
inc
mov
dec
outsl
sbb
push
or
xchg
pop
ljmp
push
imul
hlt
sbb
aam
sub
and
adc
inc
mov
jbe
mov
jmp
imul
sahf
aaa
iret
and
arpl
jmp
out
jl
clc
add
in
xchg
dec
cmp
aad
mov
sbbb
daa
adc
and
insl
pop
in
sbb
dec
mov
add
les
hlt
mov
dec
mov
push
mov
jns
xor
mov
jo
idivl
pusha
lahf
pop
pop
testl
or
cmp
loop
ss
sub
cmp
stos
xchg
pop
jo
jp
push
or
or
push
pop
sbb
aam
cs
jnp
inc
shrl
pop
mov
xor
mov
test
push
scas
or
sub
call
loop
out
mov
pop
push
and
cmp
jmp
fistpl
int
xor
cmp
call
mov
loopne
mov
imul
sub
inc
inc
orl
clc
rcll
push
fisubrs
cmpl
inc
sbb
add
sarl
aaa
aam
mov
test
lock
dec
mov
ret
test
insb
xchg
int
ja
ss
mov
dec
cs
dec
rol
push
jle
in
fists
repnz
adc
push
sub
sti
adc
lods
inc
ret
mulb
jne
stc
push
sub
cmc
xchg
mov
out
hlt
fisubl
fisubrl
push
xchg
call
lret
inc
mov
lret
sbb
ret
jns
cmp
adc
xchg
call
std
jb
mov
mov
sbb
test
loop
jb
mov
clc
pop
insl
cmp
pusha
lahf
pop
sbb
pop
add
rcrb
push
mov
cmc
fwait
mov
sti
jno
mov
cmpl
scas
and
push
push
jnp
mov
imul
lret
dec
movsb
mov
das
les
mov
jg
mov
test
push
adc
jle
or
push
add
gs
xchg
out
sahf
or
xchg
pop
push
mov
in
test
sbb
fsts
int
rorb
out
andb
and
or
aam
sub
sahf
mov
das
cs
stos
jns
and
out
cmp
ds
jne
leave
xchg
icebp
sahf
popl
mov
popa
stos
andb
pusha
in
repz
cmp
pushf
in
and
outsl
mov
ret
aad
es
sbb
lock
jl
into
xchg
sub
stc
bound
rcr
pop
push
popa
mov
lahf
push
stos
or
xchg
mov
add
mov
jb
out
pop
shrl
cmp
pop
stos
outsl
jp
or
fistps
movsl
mov
dec
pop
mov
cmp
adc
and
push
add
pop
xor
into
dec
pushf
aaa
jo
push
arpl
push
push
add
rorl
cmpsb
cmp
in
sahf
int3
mov
lret
in
xor
push
push
pop
xchg
mov
mov
mov
aad
jmp
stos
dec
mov
lock
out
ret
into
adc
mov
jp
sarb
mov
lret
mov
mov
icebp
insb
push
adc
outsl
test
dec
sbb
call
adc
jp
ljmp
adc
fdivp
dec
and
inc
aad
ss
and
data16
mov
push
push
and
mov
xchg
or
loope
inc
jmp
or
mov
mov
jp
ja
test
jmp
adc
dec
rclb
and
fsubp
push
insb
pop
fisubrl
das
xor
das
in
mov
movsb
adc
jb
pop
and
fstpl
clc
push
dec
rcl
pop
mov
cmp
es
mov
and
insl
mov
std
aam
repnz
in
sbbl
fiaddl
mov
push
fidivrs
sbb
sub
jbe
mov
stc
add
enter
adc
inc
fsts
inc
cwtl
lods
in
lret
cmpsb
sbb
mov
add
sahf
outsl
and
ja
pop
in
sbb
dec
jl
lods
mov
or
or
aas
mov
add
ja
jmp
add
roll
xchg
mov
dec
std
fmull
and
mov
inc
jbe
jno
scas
mov
mov
lcall
into
dec
mov
mov
cmp
dec
jmp
outsb
cs
out
loope
xchg
clc
mov
mov
xor
pop
lret
xchg
push
ficoms
in
pop
js
or
inc
add
jecxz
pushf
cmpsb
out
pop
dec
xchg
jmp
push
repz
dec
and
sub
rol
cmp
lods
mov
shll
repnz
mov
mov
ja
into
adc
add
cmp
dec
cltd
into
movsb
lret
push
mov
mov
push
lcall
icebp
jnp
dec
stos
sub
cld
xchg
lcall
shrb
test
paddusb
rcrb
mov
push
notb
insb
bound
sbb
sub
sti
popa
aad
lcall
push
mov
sahf
sbb
sub
in
mov
fnstcw
pop
inc
shll
scas
cmpb
jne
outsl
aad
iret
mov
mov
inc
cs
addb
or
imul
xchg
es
pop
test
arpl
shrb
mov
add
shll
adc
and
ret
mov
push
mov
mov
sahf
lea
mov
ljmp
sbb
push
jmp
ds
mov
int
inc
imul
push
nop
loopne
inc
add
aad
and
xchg
insl
ficomps
pop
cmp
mov
cli
jae
mov
sbb
inc
mov
xor
test
icebp
or
sarl
mov
das
inc
sti
xchg
jle
cmp
and
mov
mov
adcb
mov
fisttpl
jge
cwtl
inc
mov
sub
scas
ds
fsubl
call
push
out
sub
sahf
inc
mov
xchg
adc
adc
das
sub
shr
daa
rorl
inc
imul
pop
xchg
sub
fdivrs
inc
repnz
scas
mov
xchg
dec
adc
inc
or
adc
sbbb
push
lds
xor
adc
lods
cmpsb
sbb
divl
and
add
loop
daa
aas
mov
lods
jne
out
xchg
cmc
sbb
and
rcl
outsl
mov
push
shlb
mov
jg
iret
mov
bnd
cmp
and
sbb
fdivr
js
fldl
ja
mov
jbe
movsl
js
sub
shlb
insl
fmul
xor
pushf
int
push
inc
sti
fdiv
pop
icebp
add
fcoml
inc
mov
jb
dec
scas
push
mov
xchg
sub
testb
xchg
cmp
push
in
mov
mov
in
pop
xchg
cs
xchg
xchg
jmp
cmp
in
rcll
pop
xorps
lods
sbb
sub
jo
jae
or
xchg
addb
jp
lea
jecxz
repz
mov
sub
out
xchg
adc
cmpsb
dec
or
mov
loopne
xchg
out
lock
add
add
add
cli
cmp
fs
adc
neg
adc
outsb
dec
mov
push
mov
jle
mulb
jne
mov
rcll
out
scas
rcrl
add
mov
aas
aam
xchg
outsl
loopne
dec
out
mov
xchg
dec
add
push
dec
xchg
push
fadds
das
add
jo
out
xchg
cld
in
aaa
lahf
mov
aas
popa
xor
mov
mov
jb
jmp
xchg
scas
mov
nop
leave
sub
cmpl
int3
and
or
imul
pop
dec
mov
arpl
bound
pop
inc
dec
test
sbbl
sbb
inc
js
call
or
lahf
xchg
testl
jmp
cmpsl
pushf
das
aad
pop
test
push
jbe
adc
or
adc
pop
push
pushf
inc
lcall
enter
pop
push
push
push
push
mov
stos
or
sahf
jecxz
and
cmc
lret
cmp
mov
sub
adcb
bound
dec
sti
cmpsb
out
imul
leave
fisttps
jmp
adc
shlb
sub
xorl
push
lret
xchg
mov
stos
sub
in
cs
sub
inc
or
nop
fld
in
fstps
in
dec
pop
jg
cmp
movsl
xor
dec
push
arpl
arpl
jae
xchg
xor
adc
orb
or
outsl
mov
xchg
ffree
jns
lods
iret
scas
xchg
inc
push
icebp
cmp
imul
and
scas
lret
add
ljmp
fsubrl
cltd
jecxz
test
sub
js
cmp
push
jns
jae
sub
xchg
xor
mov
jmp
xor
stos
inc
jo
xor
mov
cmpsl
fadds
adc
pop
inc
xor
into
jge
es
sti
pop
sti
rolb
xchg
into
cld
lods
nop
cmpsb
popf
sub
push
inc
in
push
add
mov
sti
cmp
mov
xor
push
outsb
mov
or
xchg
stc
mov
mov
pop
andl
and
adc
lcall
loop
in
rorl
xchg
and
jns
std
icebp
cmp
addl
int
sti
xor
mov
adc
mov
xchg
nop
cmp
out
rorl
cld
mov
in
or
ss
adc
int3
test
addb
mov
pop
dec
loopne
sub
ja
stc
sub
inc
icebp
pop
jne
cs
adc
dec
cmp
repnz
pop
aaa
cmp
das
out
push
xchg
andl
xchg
inc
mov
push
jns
shl
lahf
and
mov
int
or
cwtl
jne
jg
mov
out
mov
mov
loope
aad
mov
xchg
adc
cwtl
cmpb
dec
or
outsb
mov
xor
pop
mov
inc
stos
mov
imul
add
xor
stc
xchg
xor
adc
and
outsb
aaa
jns
sub
sub
jnp
dec
psubsw
push
and
dec
jbe
mov
out
icebp
push
ss
dec
push
and
mov
ret
jne
jmp
cmp
out
lock
aaa
addr16
daa
jb
insl
mov
mov
stos
mov
in
and
in
stc
fildll
sahf
pop
je
and
dec
mov
cmp
xchg
mov
mov
pop
xchg
push
mov
mov
push
lds
arpl
stos
add
dec
push
sub
xchg
or
adc
xor
xorl
or
adc
insl
cmpsb
clc
jno
inc
dec
or
lds
ljmp
mov
inc
ljmp
gs
mov
dec
pop
xchg
dec
andb
xchg
xor
fistpll
push
cmp
addb
mov
fwait
sti
aas
or
pop
pusha
mov
jbe
psubsw
adcl
ret
sarl
int
popf
call
dec
fwait
sbb
adc
dec
sub
add
add
mov
sub
xlat
bound
sub
add
pop
xchg
ret
or
leave
add
imul
call
test
test
xchg
inc
pop
aaa
push
mov
test
pop
inc
loop
jo
sbb
mov
and
xchg
pop
aam
mov
add
jge
inc
fists
imul
imul
inc
stc
xor
fidivl
push
jp
icebp
lret
fdivs
repz
mov
fnsave
xchg
shll
lods
in
testl
ret
das
and
icebp
popf
je
mov
in
push
push
in
filds
decl
std
pop
in
out
int3
pop
mull
scas
sub
in
xchg
and
leave
xor
pop
setb
mov
je
stos
dec
and
std
cli
incb
lds
mov
ret
mov
xchg
mov
enter
rcrb
and
dec
rolb
das
mov
jp
lock
out
xchg
sarb
xchg
arpl
enter
xchg
rcrb
cmpsl
dec
push
adc
mulb
mov
dec
jb
add
sahf
mov
dec
ror
cmpsb
dec
adc
xor
dec
dec
add
popf
cltd
mov
mov
divb
outsl
xor
push
adc
inc
or
iret
test
test
dec
xchg
xchg
out
jnp
pop
jl
or
pop
cmp
aam
xchg
aad
dec
stc
inc
out
cli
jmp
jae
jb
sub
or
iret
sbb
xchg
cmc
mov
aaa
push
mov
adc
and
jno
mov
push
mull
fisttpll
mov
xchg
icebp
lcall
adc
and
dec
in
and
out
nop
repz
andl
notl
xor
jae
stos
or
lods
fadd
mov
mov
add
subl
enter
inc
sbb
jg
xchg
div
mov
out
dec
mov
inc
or
shl
xlat
into
out
xor
lret
mov
in
xlat
scas
dec
outsl
xchg
lock
pop
lcall
dec
mov
sub
mov
in
out
xorl
call
lret
loop
dec
mov
sbb
jae
imul
push
xor
push
push
sbb
add
lret
dec
lods
or
cmpsl
or
and
stos
sub
test
cmpb
pop
cmp
push
mov
mov
pop
test
cmp
adc
adc
inc
or
cmp
lahf
outsl
pop
mov
xchg
adc
das
ja
pushf
int
mov
adc
scas
stc
cs
dec
mov
mov
dec
and
push
cmp
sbb
add
pop
stc
aam
add
and
mov
mov
cmp
cmpsl
jl
es
sub
mov
inc
rorb
mov
insb
pop
stos
test
shlb
aad
popa
clc
ja
mov
sub
insl
fucomip
hlt
test
mov
jl
xchg
insb
sarl
gs
sbb
bound
push
lret
mov
shll
jecxz
stos
imul
push
rcl
adc
sub
xor
or
call
enter
adc
sub
sarl
jle
cmp
jle
xchg
das
fstpt
lea
mov
or
and
push
add
cmpsb
dec
scas
arpl
xor
imul
fs
jno
dec
js
cmc
pop
mov
mov
hlt
mov
sub
sbb
xchg
pop
std
aam
out
pop
sub
flds
jmp
pop
rcr
arpl
inc
sub
push
mov
test
repnz
mov
sti
lea
pop
cmp
adc
in
adc
mov
pop
push
ss
mov
scas
xchg
cld
cmp
mov
lret
and
fnstcw
std
inc
cwtl
adc
lea
xor
lds
aad
out
movl
xor
cs
dec
rolb
sbb
mov
push
adc
inc
js
xor
fwait
lcall
mov
cmp
aas
sarl
mov
fwait
hlt
and
int3
pusha
sbb
lods
fnstcw
dec
or
divb
movsl
jle
dec
mov
aaa
popf
pop
mov
popa
sbb
mov
inc
cwtl
jg
rcr
jle
sbb
jg
daa
sub
cmp
lcall
pop
xor
jb
stos
cli
inc
ds
es
icebp
fcoml
jl
and
dec
enter
jo
cmp
jecxz
ret
or
sbb
mov
idivl
push
push
arpl
sub
js
cmpsb
imul
jo
dec
inc
mul
hlt
ret
rcl
add
sbb
les
scas
les
aad
adcb
ret
ret
and
xor
add
adc
bound
inc
inc
push
mov
mov
xchg
repnz
repz
ret
and
xor
add
adc
bound
inc
inc
push
mov
xchg
xor
add
jae
ret
add
xor
add
jb
jb
push
inc
stos
push
cmpsb
mov
mov
repz
inc
shll
and
cltd
mov
jmp
mov
out
lahf
fisubrs
shll
movd
pop
das
dec
aas
ds
sub
push
outsl
push
jg
out
lahf
fisubrs
scas
fistps
movd
pop
das
inc
aas
ds
push
pop
push
outsl
push
jg
negl
cmpsl
iret
mov
xchg
mov
xor
add
aas
ds
pop
jg
popl
push
in
or
sbb
adc
push
in
mov
xchg
fbld
aaa
scas
and
jecxz
idiv
mov
jg
das
mov
outsb
ds
outsl
icebp
addl
adc
pop
mov
jge
sub
dec
jle
iret
xchg
loope
sub
ds
shrb
push
jle
jo
sahf
pop
scas
ljmp
push
scas
cmc
cmp
or
mov
rcrl
xchg
xchg
push
pop
scas
adc
push
jns
inc
inc
iret
mov
rcll
jle
jle
test
pop
sarl
sbb
outsb
push
das
push
or
addr16
scas
xor
inc
add
fsubrl
xchg
lock
and
push
aas
jnp
jge
push
jp
jg
negl
test
out
xchg
jmp
jbe
inc
das
push
aas
es
ss
add
push
cmp
jmp
enter
mov
sub
and
insb
in
arpl
xchg
into
aad
scas
mov
icebp
sahf
sbb
cmp
jns
push
and
push
filds
lret
mulb
mov
jle
outsb
pop
pop
das
dec
aas
ds
cs
push
outsl
push
jg
out
lahf
fisubrs
scas
fistps
movd
pop
das
dec
aas
ds
cs
push
outsl
push
jg
pop
mov
mov
leave
pushf
mov
popa
jp
push
sahf
pusha
xchg
mov
fcmovnbe
mov
dec
ljmp
xorb
scas
iret
outsl
gs
cld
or
int3
loop
notl
push
jnp
jecxz
fs
sbb
arpl
pop
dec
in
mov
cmp
mov
or
mov
mov
xor
cmpl
xchg
lahf
addl
mov
mov
sti
ds
insl
add
test
dec
and
inc
imul
mov
add
add
ss
ret
bound
sahf
mov
lods
cmp
loope
fwait
pushf
daa
push
mov
icebp
pop
xchg
inc
add
ret
jns
and
enter
inc
mov
out
out
push
aaa
ror
lock
mov
or
test
pop
push
shll
in
adc
dec
xchg
data16
xchg
dec
mov
fnsave
sbb
aad
xor
adc
or
xchg
mov
jge
fs
fisubs
imul
and
inc
test
imul
divb
fldt
fisttpll
les
test
aaa
into
out
cwtl
orl
mov
adcl
xchg
icebp
push
xor
pop
test
or
sub
hlt
int3
add
test
cmp
xchg
push
into
ja
push
mov
mov
testl
test
add
ljmp
fmuls
mov
int3
xor
push
in
mov
adcl
mov
jo
add
lods
sbb
aas
popa
icebp
inc
ret
pop
pop
push
xchg
out
or
push
out
scas
arpl
adc
cs
pop
or
test
mov
test
int3
ss
pop
scas
xchg
sbb
imul
testb
push
idivb
mov
push
fidivl
mov
jo
addb
subl
jnp
sbb
les
lret
add
xchg
cmpsl
mov
ljmp
jl
push
fwait
cwtl
add
mov
ss
mov
test
dec
int3
adcl
loopne
ficomps
cs
push
mov
pop
popl
out
xchg
sbb
fs
xchg
mov
div
int3
out
mov
das
push
mov
notb
ja
in
rcrl
cmp
add
test
mov
div
dec
jbe
orb
test
repnz
sub
jge
notl
mov
add
xchg
or
inc
push
outsl
lods
mov
cli
arpl
inc
and
and
cs
adc
push
aam
sarb
jbe
jp
mov
push
outsb
push
lret
pop
ja
dec
cltd
imul
jne
lods
add
push
iret
jge
ret
adc
loop
js
mov
pop
popa
xchg
clc
xabort
push
jns
repz
addr16
ljmp
dec
test
cmp
push
jmp
in
mov
hlt
push
out
cld
aaa
movsl
push
pusha
jo
mov
in
sub
jns
inc
mov
cmc
lahf
pop
xor
dec
xchg
mov
xor
sti
sbb
pop
and
mov
repnz
pop
sub
mov
orl
test
inc
xor
sbb
dec
mov
mov
jbe
sahf
mov
ja
jne
mov
pop
xor
cli
adc
jp
es
mov
push
pop
push
in
popf
inc
dec
jle
push
cs
lock
cmc
sahf
mov
and
sub
mov
adc
sbb
sbb
pop
add
xchg
psubd
pop
scas
mov
shrb
cmp
test
aaa
xchg
pop
sub
les
scas
stc
fistps
and
js
mov
sbb
test
or
sbb
cwtl
fmull
repnz
inc
mov
mov
or
cmpsb
jmp
xor
push
pop
push
mov
pop
xlat
or
dec
ja
jns
adc
sahf
xor
sbb
cmp
arpl
push
out
fcomps
pop
jmp
cli
pop
sub
xor
int
or
add
movsb
pushf
imul
push
mov
sbb
dec
fs
int3
push
data16
fsubrs
inc
cltd
or
pop
stc
shr
pop
add
pusha
jae
cs
std
jle
aaa
lods
jno
sub
cmp
sbb
or
push
aad
jae
xchg
in
scas
lods
jns
jo
hlt
mov
ret
fnstcw
popa
sbb
pop
mov
movsl
cmp
in
xor
cmp
lahf
xor
addb
jp
inc
jmp
outsl
xchg
push
sbbb
sbb
int3
xchg
stos
sbb
out
pop
xor
les
push
xchg
insl
xchg
shl
pop
pushf
mov
jecxz
inc
mov
add
jae
jno
inc
cmpb
cmp
or
inc
push
insb
jb
jge
sbb
mov
sar
xor
lcall
xchg
mov
sarb
xlat
sti
xchg
fsubrl
dec
subl
mov
fidivs
and
insl
repnz
test
pop
insl
imul
inc
js
or
imul
stos
and
inc
int
shll
mov
jne
xor
or
test
mov
mov
add
and
pop
in
mov
cmp
add
xchg
shrb
lods
test
in
aad
insl
scas
and
sub
call
test
jg
mov
ss
add
andb
data16
mov
inc
xor
sarl
sarb
mov
out
sub
iretw
shlb
repnz
addr16
incb
setge
xor
jb
ljmp
stos
mov
and
jae
ficompl
xchg
das
arpl
pop
add
or
fidivrs
pop
mov
lar
jne
add
mov
iret
pop
cmp
jp
sti
jnp
enter
faddl
ret
hlt
push
sbbb
mov
aaa
mov
cmp
jmp
shll
dec
ss
dec
and
test
sub
push
daa
aam
ljmp
cmpsl
cmp
jmp
and
stos
adc
lret
popa
and
or
enter
push
ss
mov
in
repnz
dec
sahf
xchg
icebp
out
lea
ficoms
sub
or
jnp
loope
mov
xchg
push
fidivrs
aam
push
call
pusha
out
outsl
dec
mov
mov
and
sbb
fstps
daa
sbb
fimull
xchg
rcrb
out
jg
aaa
jo
inc
xchg
or
jg
add
faddp
movsl
dec
ds
movsl
jae
inc
adc
std
in
sbb
xchg
or
jle
cmp
adc
into
cmp
imul
bound
test
sbb
xchg
sti
cmp
mov
repnz
push
fs
mov
add
and
adc
shll
lock
stos
arpl
jge
repz
gs
gs
adc
jne
or
int
lret
in
and
ss
pop
dec
cmp
sub
out
stos
sbb
addr16
out
xlat
or
adc
mov
dec
jg
xlat
add
mov
dec
cmp
mov
int3
das
push
push
jo
incl
scas
fdivrp
mov
aam
cwtl
push
js
fidivrs
fs
in
stos
pop
push
stos
sub
mov
bound
sahf
loope
test
mov
incl
jge
inc
sbb
jnp
pop
add
pop
xchg
xlat
cmp
fdivr
aas
out
add
jle
xchg
shll
xor
xchg
inc
adc
loop
mov
jmp
inc
fstpt
mov
ja
jge
aas
pop
push
jb
decb
dec
imul
les
xor
sbb
pop
cli
lds
inc
cmp
lock
negb
and
sub
incb
fwait
jo
or
or
mov
imul
rolb
loope
lahf
xchg
stc
xchg
fbld
pop
nop
rcll
out
stos
test
in
mov
in
pop
xchg
xor
mov
sbb
adc
inc
adc
insl
loopne
add
aas
mov
nop
cs
fstpt
xchg
lods
insl
ror
jle
sbb
stos
pop
xchg
sub
push
andl
loop
aaa
je
dec
xor
out
xchg
fdivp
cmpsl
add
movsl
mov
fnstcw
scas
cs
mov
clc
push
fstl
fisttps
adc
ret
jmp
andb
xchg
lahf
push
scas
ret
frstor
fisubrs
rcl
sub
sub
cltd
out
adc
enter
mov
je
cli
into
adc
jb
xchg
adc
adc
das
daa
pop
repnz
out
push
pop
leave
enter
add
or
sub
mov
fdivrp
push
jle
cmp
ds
pop
sub
mov
out
xchg
clc
in
mov
push
insl
sbb
fs
jae
cli
mov
mov
or
xchg
push
jbe
lret
popf
out
dec
enter
adc
dec
subb
arpl
mov
mov
mov
mov
into
ficompl
jmp
sbb
je
jb
inc
aaa
or
pop
mov
pop
dec
sbbb
adc
aad
jnp
fsubrl
sbb
xchg
data16
into
cmp
pop
lds
daa
and
sub
dec
lods
add
mov
incb
push
push
mov
and
bt
fwait
stos
std
subl
jecxz
loope
dec
int
jle
les
push
and
addr16
in
jb
rcl
sbb
pop
cmp
jle
xchg
sub
scas
pop
subl
les
bound
adc
leave
out
loope
addr16
aas
add
lcall
cmp
mov
cmpb
jle
sub
or
sbb
xor
push
lods
sbb
dec
jmp
fisubrs
xor
fldcw
imul
xchg
dec
jne
xor
insl
aam
daa
iret
popa
je
dec
jbe
cld
sub
dec
inc
sbb
xor
jmp
and
nop/reserved
mov
out
jno
cwtl
xchg
cld
out
hlt
or
arpl
mov
mov
movsb
mov
push
pop
push
insl
xor
rcll
mov
movsl
xor
inc
xor
jnp
cmc
test
ja
ret
xor
dec
xor
fisttpll
lea
push
xchg
cs
sub
or
insl
jnp
add
lock
cmpsb
dec
imul
out
loopne
cmp
std
jo
dec
mov
sub
bound
aam
icebp
in
or
push
push
pop
cmp
push
sahf
pop
movsb
xchg
pusha
dec
es
fistpl
adc
mov
popf
jbe
mov
inc
push
jnp
or
pop
or
call
push
lret
stos
jle
push
jae
mov
in
mov
xor
pop
xchg
fimuls
xor
xor
std
andl
cltd
pop
or
mov
cwtl
push
mov
out
or
inc
icebp
movsb
jne
insb
repnz
push
stc
xchg
cmp
scas
sub
unpcklps
add
dec
fnsave
daa
test
jmp
xlat
nop
mov
xor
mov
lods
adc
xchg
decb
test
cld
loop
shrl
push
and
push
inc
clc
fnstcw
add
mov
adc
xchg
pop
push
cs
inc
dec
inc
mov
xchg
dec
mov
pop
xchg
mov
sbb
das
out
stc
sub
or
jbe
scas
cld
in
neg
mov
aaa
push
jecxz
lock
test
scas
mov
fcmove
test
sbb
mov
pop
xchg
inc
addr16
cmpsl
insb
mov
cmp
pop
dec
inc
push
stos
push
addr16
and
rorb
int3
pop
mov
adc
les
jbe
mov
add
jns
mov
or
ret
rorl
cmp
je
out
push
jmp
fdivrp
imul
test
xor
out
leave
sahf
sarb
cmp
mov
inc
ljmp
cs
jbe
pop
sbb
ja
or
sahf
mov
iret
lods
scas
xchg
add
push
mov
mov
daa
xchg
xor
in
aad
pop
fsubs
sbb
xor
jnp
inc
les
dec
shrb
pop
sub
inc
inc
pop
pop
sub
mov
pop
fbld
mov
mov
call
xor
sbb
xchg
and
outsb
pop
push
pop
cltd
out
mov
xchg
mov
jmp
or
pop
dec
mov
pop
fs
jo
xchg
lock
jecxz
adc
xor
cmc
push
mov
mov
mov
mov
adc
faddp
cmp
int3
insb
cwtl
test
loope
dec
scas
pushf
mov
shlb
mov
push
es
or
adc
add
and
jo
shlb
inc
mov
xchg
clc
flds
xchg
outsb
mov
jmp
push
sbb
and
arpl
mov
or
out
pop
add
aas
xchg
mov
loop,pt
mov
push
and
pop
jp
sbb
dec
push
mov
cld
dec
loope
repnz
adc
lds
mov
cmc
ret
or
inc
shlb
adc
mov
pop
cmp
out
push
cmp
leave
pop
xchg
test
xor
jp
jne
mov
mov
fwait
cwtl
and
std
aad
push
out
pushf
jne
cld
scas
js
loop
lahf
ret
or
mov
js
pop
or
push
xchg
ss
dec
pop
sub
je
xor
mov
orb
int3
mov
outsl
or
mov
sbb
inc
fadds
push
fldenv
gs
jae
fisubl
scas
aas
mov
loope
nop
xorl
stos
xorl
jge
iret
inc
jecxz
cmp
xchg
and
cld
or
push
jb
lock
jne
add
les
pop
sar
fisubl
insl
lock
ss
add
fadds
in
jns
std
nop
cmc
sbb
dec
adc
jno
cmp
and
shll
cmp
xchg
dec
dec
mov
cmp
clc
add
lds
pop
movsb
fildll
vandnps
sarl
aas
xchg
outsb
jbe
icebp
ljmp
fimuls
pop
dec
shlb
sbb
jae
pop
insl
xchg
mov
sub
xor
js
inc
mov
cmp
fcom
dec
popf
pop
je
pop
or
lahf
sti
pushf
mov
jl
jge
add
xlat
push
inc
repnz
mov
sbb
push
inc
aad
loopne
add
inc
sbb
sbb
clc
cmp
int3
es
mov
sbb
pushf
xor
imul
iret
repz
ret
rcr
outsb
xor
push
cltd
dec
scas
adc
es
cltd
pushf
xchg
lcall
mov
outsl
dec
or
inc
aaa
fistl
test
imul
out
mov
dec
into
mov
adc
das
or
sub
popa
icebp
out
and
iret
mov
test
nop
jae
pusha
sbb
int
adc
mov
arpl
xchg
sbb
cmp
ret
mov
outsl
xor
mov
sbb
and
imul
cmp
dec
jnp
lahf
fwait
test
mov
test
add
xchg
push
dec
pop
dec
pop
shll
stos
hlt
shl
subl
cmp
or
xchg
xchg
jl
xor
fcomps
xchg
inc
jne
imul
push
arpl
in
xchg
data16
push
mov
adc
sbb
pushf
sub
and
rol
sbb
cmp
mov
sarb
add
xchg
xlat
aad
jecxz
jge
ljmp
sub
and
mov
lods
inc
fcomps
xor
sub
push
lahf
xor
int3
js
mov
jno
or
ret
jns
aam
testl
lock
stc
xor
inc
test
ds
mov
popf
push
inc
pop
cmpsl
stos
inc
insb
and
sbb
subb
jo
rcll
jg
mov
jge
dec
add
or
mov
aaa
jecxz
push
addl
push
add
adc
jns
pop
pop
ds
or
cld
mov
repz
pop
stos
sub
sub
lahf
scas
mov
push
insb
lret
in
mov
pop
stc
sub
sub
sub
pushf
mov
ret
dec
scas
mov
into
in
pop
xchg
ret
sub
ss
xadd
roll
imul
jl
inc
lahf
jae
aas
cmp
xchg
in
inc
pop
xchg
stos
sbb
test
and
es
out
and
jl
add
push
fimull
scas
mull
xchg
repz
cmpsl
mov
and
inc
mov
dec
mov
lods
add
test
orl
dec
sbbb
pop
sbb
ror
les
jo
mov
test
or
int
cs
mov
iret
cmpsl
mov
mov
ss
push
loopne
insb
in
or
ret
pop
jae
repz
or
mov
and
stos
jne
adc
cmp
mov
fildll
mov
cmp
and
fwait
mov
fiadds
sub
push
dec
add
insl
pop
mov
je
fisubrl
aam
mov
sbb
adc
xlat
xchg
repz
jns
sub
mov
lcall
push
add
push
jnp
pushf
test
imul
repnz
push
dec
xchg
pop
outsl
cltd
shll
mov
sub
subl
mov
mov
fbstp
push
mov
pusha
clc
jns
sub
dec
xchg
xlat
sbb
mov
jp
mov
adc
dec
stc
inc
push
xchg
stos
pop
sbb
fists
mov
test
jmp
rcll
xchg
ret
lods
add
icebp
push
in
filds
push
int
xchg
lock
out
outsl
rcrl
mov
push
pushf
adc
and
in
xor
jp
outsl
pop
addr16
xchg
jno
add
push
cmp
es
mulb
dec
mov
xor
sbb
cmp
push
sbb
in
xchg
arpl
mov
out
mov
popf
adc
mov
push
fs
xor
imul
xor
pop
adcl
and
enter
xchg
add
sbb
push
gs
or
xor
cmpb
jge
mov
shrb
mov
lds
icebp
jne
adc
cmp
aaa
xchg
jae
aas
pop
enter
in
inc
or
stos
pop
aad
lahf
dec
gs
es
jo
mov
sbb
jl
sbb
loopne
outsb
fists
outsb
outsb
inc
add
push
jns
dec
dec
push
jl
jnp
mov
rol
inc
inc
dec
xchg
xchg
xor
hlt
ret
inc
movb
dec
and
xor
and
mov
push
pop
mov
push
imul
insl
add
loop
lret
or
addb
add
js
dec
pop
loop
mov
pop
dec
and
adc
add
jo
pop
ret
or
arpl
pop
sbb
insl
test
add
mov
push
mov
fisubs
or
fdivl
push
lods
enter
sbb
das
mov
push
out
cs
cld
mov
lret
popf
call
xchg
push
push
rcl
shll
cmp
subl
mov
gs
sbb
fucomi
jmp
lock
fisubs
lcall
pop
push
lcall
popa
arpl
ljmp
aad
imul
inc
mov
dec
mov
sub
cmc
xchg
ret
pushf
repnz
int3
pop
jne
cmp
and
in
lcall
jo
or
or
out
mov
bnd
jnp,pn
stos
and
ljmp
cmpsl
mov
dec
cmp
lcall
pop
inc
into
add
cmp
sbb
shl
mov
mov
sbb
mov
das
std
jmp
dec
push
cli
jmp
cmpb
pop
incl
xchg
or
add
ficoms
sbb
xchg
dec
popa
xchg
int
stos
insb
int
xchg
cmpsb
scas
add
add
aas
jns
insb
mov
movb
sub
xchg
sahf
mov
xchg
call
dec
out
cmp
xchg
xchg
push
je
xor
jae
inc
ss
aas
loop
mov
rcrb
repnz
jno
fcmove
in
roll
mov
mov
popf
mov
push
inc
sub
adcb
movsl
push
ret
or
mov
ret
adc
cmc
jl
add
lahf
aam
into
mov
sahf
out
mov
jle
outsb
pop
pop
das
dec
aas
ds
cs
push
outsl
push
jg
out
lahf
fisubrs
scas
fistps
movd
pop
das
dec
aas
ds
cs
push
outsl
push
jg
mov
lahf
fisubrs
scas
fistps
movd
pop
das
dec
aas
ds
das
pop
push
outsl
or
decb
into
mov
push
outsl
push
add
das
dec
dec
dec
cmpsb
mov
mov
mov
cltd
scas
mov
push
sub
sbb
or
jns
imul
test
scas
stc
fsubrp
inc
fsin
leave
lcall
or
jns
imul
or
mov
loop
repnz
leave
idivb
shrl
push
daa
pop
adc
or
pop
or
outsb
lock
test
sti
mov
loop
ss
sbb
pop
outsb
repnz
or
xor
add
rcr
insl
xor
mov
pop
pop
xchg
push
mov
xchg
lea
mov
inc
lahf
and
cmpsl
clc
mulb
inc
mov
mov
mov
cmp
mov
pop
test
out
scas
or
stc
fdivrp
cmpsb
daa
add
cmp
or
rolb
xchg
dec
cmp
repz
mov
inc
cli
loop
fdiv
enter
aad
or
subb
or
pop
xchg
inc
pop
xchg
xor
scas
imul
push
inc
data16
dec
ss
pop
push
ljmp
mov
and
outsb
cmp
or
jb
mov
jle
add
int3
rorb
stos
mov
mov
sub
inc
sbb
add
sbb
fcmovnu
iret
leave
fucomip
mov
nop
leave
sbbb
pop
pop
dec
dec
sbb
cmp
add
lock
mov
stc
mov
leave
out
cmp
sub
sbb
or
jns
imul
sahf
test
scas
stc
fsubrp
into
fsin
leave
out
cmp
sub
sbb
or
jns
imul
sahf
or
and
inc
in
pusha
mov
pop
mov
test
cmp
pop
cwtl
ljmp
dec
xchg
push
pushl
fstpt
mov
scas
jp
fdivrs
repz
jmp
jb
sbb
imul
lock
scas
popf
stos
imul
fsubr
les
test
xor
icebp
or
xorl
mov
xchg
and
lods
cmp
sub
or
cmpsl
sub
outsb
lahf
add
jnp
and
cmp
stc
iret
xor
int3
psubsw
mov
int
leave
pop
lret
ljmp
xchg
and
mov
repnz
xchg
sub
hlt
repz
mov
xchg
cmp
cwtl
mov
dec
push
jnp
jmp
nop
fsubs
mov
popa
sbbl
xchg
lock
daa
ljmp
inc
xor
ja
mov
jg
adc
je
mov
inc
iret
pop
and
hlt
add
inc
adcb
lea
jno
push
ret
pop
mov
sbb
out
push
dec
icebp
fs
setge
dec
adc
aaa
iret
adc
inc
sbb
adc
arpl
nop
popa
adc
add
icebp
mov
sti
das
xchg
mov
xor
aam
loopne
mov
bswap
lock
sbb
in
test
and
inc
and
or
out
mov
pop
pop
inc
movsb
enter
es
and
rorl
adc
add
ja
jle
std
popf
adc
loop
aad
jle
sub
and
std
lret
pop
jp
stos
mov
add
mov
std
in
outsl
mov
sub
xor
cmc
inc
scas
fistpl
pop
xor
xchg
lea
lret
jmp
xchg
lods
repnz
xchg
es
pop
pop
or
adc
jno
lcall
mov
lds
out
xorl
or
mov
sub
fcompl
roll
pop
push
xor
xchg
call
cwtl
jb
pop
lcall
mov
mov
out
add
xor
add
insb
adc
jb
jmp
dec
xor
or
lret
pusha
cmp
arpl
xor
push
pop
rep
in
arpl
xchg
mov
lahf
dec
lret
or
push
lcall
jecxz
iret
pop
mov
dec
pop
or
sbb
int
dec
mov
testl
cltd
in
mov
dec
xor
adc
sti
pop
nop
xchg
inc
scas
stos
jl
push
ja
mov
nop
mov
in
lods
sub
mov
sbb
lahf
jbe
fwait
dec
lds
mov
lds
or
mov
in
sub
sub
lock
inc
aam
ss
fsubl
mov
nop
cmp
fdivl
jns
sub
in
mov
pop
ljmp
adc
mov
ja
insl
sbb
iret
cmp
stos
pop
cld
cmp
mov
push
jns
fsubl
popa
cmp
fldcw
ds
xchg
xor
mov
mov
push
insb
push
out
pop
mov
into
je
xchg
mov
cmc
sub
cld
adc
jle
and
sub
dec
xchg
adc
addr16
decl
lea
test
push
xchg
mov
orl
rcr
jns
sub
lods
sti
inc
xchg
sbb
sbb
mov
cmpsl
and
push
add
in
mov
loopne
cltd
movsb
jle
push
inc
adc
mov
outsl
shl
jmp
add
or
dec
insb
stc
pop
push
adc
jmp
into
fstpl
add
sub
adc
mov
out
pop
mov
repz
movsb
pop
sub
pop
test
fs
push
sub
shrb
repnz
lock
insb
divb
adc
aam
fcoms
rcr
mov
loopne
push
and
daa
lret
loope
fiadds
jno
mov
std
pushl
sub
cmpb
subl
or
dec
dec
into
jge
push
mov
xchg
sub
in
addl
mov
mov
sarb
imulb
ret
mov
mov
loope
aas
pusha
and
iret
push
push
out
pop
sahf
jp
outsb
and
push
mov
in
jbe
sahf
aam
add
jecxz
enter
lahf
cmpsb
fcmovb
xor
gs
lods
ja
inc
dec
enter
jbe
nop
xor
int3
pop
cltd
fsub
out
orl
pop
add
cltd
dec
cmp
sub
jno
std
cs
push
mov
scas
int
in
mov
ficoml
adc
insb
outsb
mov
xorb
jl
sub
dec
sbb
mov
jo
addr16
fldenv
mov
inc
clc
sbb
pop
pop
xor
mov
jbe
cli
cltd
mov
xor
mov
insl
fimuls
mov
xchg
scas
aaa
movsl
mov
outsl
sub
out
mov
dec
fildll
xor
dec
push
sbb
out
push
test
pop
add
loope
test
add
inc
icebp
in
xor
pushf
or
adc
cmp
push
mov
dec
rorl
jbe
jge
or
cmpsl
loopne
inc
inc
and
xchg
orb
pop
jl
mov
inc
push
andl
xor
mov
or
icebp
mov
shl
mov
push
std
fnsave
inc
lods
rcrl
sub
cmp
pusha
sub
lcall
icebp
loop
or
push
sbb
lcall
xor
enter
leave
in
jo
inc
and
pop
aaa
cmp
fistpll
scas
pop
jnp
fldenv
pop
push
or
fidivl
lods
mov
cmpsl
jnp
mov
movsb
lds
mov
mov
je
push
jno
push
jle
push
ret
adc
jl
sahf
mov
cld
pop
dec
jne
cmp
push
fists
sbb
pop
adc
dec
add
jno
sub
ja
xor
or
mov
jg
pop
fistl
dec
imul
and
test
js
out
lret
out
and
rcll
mov
loopne
mov
fdivrs
clc
mov
push
xor
aaa
idivl
stos
jle
movsb
pop
fcoms
jnp,pn
ljmp
lret
leave
push
and
and
repnz
cwtl
les
dec
sub
jae
test
mov
xchg
stos
jle
pop
push
sub
sahf
outsl
sub
dec
mov
add
sti
inc
cmpsb
and
fsubs
popl
test
mov
out
sbb
loop
push
or
stc
xchg
dec
pop
int3
call
mov
or
xchg
adc
xchg
or
pop
roll
data16
bt
dec
loope
push
subb
sub
sbb
or
gs
dec
pushf
xor
push
sahf
inc
cmc
pop
and
fsubrl
or
jae
fldcw
pushf
cmpsb
add
push
mov
test
jecxz
jns
mov
mov
mov
in
adc
divb
and
mov
imul
and
push
daa
dec
pusha
insb
int
mov
ds
sti
mov
les
pushf
xlat
int
add
push
cli
and
add
mov
mov
dec
mov
sahf
imul
das
mov
rolb
pop
nop
pushf
clc
sub
inc
sbb
enter
out
pop
aas
test
stc
or
jl
into
cs
mov
mov
jbe
xchg
cwtl
and
rcr
fcomps
inc
stc
loopne
fisubs
sub
je
sar
cmovb
lret
jmp
mov
xor
aam
outsb
movsl
inc
je
lahf
sbb
outsb
insl
icebp
lods
and
lahf
mov
mov
lahf
jge
jns
xchg
dec
push
lds
inc
push
aad
cwtl
push
xor
cmc
pop
pop
outsl
jbe
push
in
jnp
sbb
jb
mov
out
mov
rcl
fisubrl
and
cmp
cmc
ds
xchg
pop
imul
clc
dec
not
enter
sub
rolb
inc
inc
enter
ja
jno
push
repnz
shrb
js
xor
lods
mov
leave
pop
fadd
dec
in
jl
shr
addr16
into
xor
push
push
in
out
pop
mov
pusha
xlat
insb
jl
test
ret
int
cld
push
mov
adc
sub
xlat
and
mov
jl
mov
lcall
dec
or
mov
or
sbb
daa
push
sub
lock
push
out
outsl
dec
dec
repnz
sub
es
std
enter
inc
add
xchg
add
scas
jnp
or
hlt
sub
and
jbe
add
adc
mov
les
jb
add
xor
fiaddl
repnz
rclb
ret
test
inc
inc
std
xchg
sub
or
es
incb
cwtl
and
xchg
stc
jp
popf
je
in
push
out
cmp
idivb
push
or
lods
aas
je
ret
xchg
test
insl
xchg
cs
adc
ja
push
xchg
ret
xor
jl
cmp
cmp
and
xor
xchg
jp
outsl
cmpsb
jl
arpl
stos
jnp
jge
mov
jno
and
xchg
stos
pop
jmp
xchg
fmuls
mov
mov
jecxz
sub
out
adcl
add
pusha
mov
or
and
mov
loopne
mov
pushf
sub
adc
mov
xchg
inc
out
inc
and
push
jno
lods
mov
sub
jmp
push
jg
sbbl
jb
xchg
in
add
fs
call
dec
fcmovnu
data16
lret
xorb
pop
and
jmp
mov
xchg
ror
mov
sbb
out
test
xor
gs
cmp
push
mov
mov
mov
leave
push
mov
out
xchg
js
movsb
pop
lods
xorb
inc
lea
cmp
dec
xchg
xor
cwtl
push
out
imul
lcall
mov
mov
test
add
test
stos
push
mov
dec
imul
nop
test
cmp
dec
gs
lods
sub
mov
movsb
orb
push
add
inc
dec
stos
jp
adc
add
jno
jge
or
pop
stos
leave
sbb
or
push
pop
lcall
lds
mov
mov
imulb
js
adc
cli
dec
dec
jp
cmp
fsub
and
mov
je
add
and
or
js
lahf
mov
dec
loop
roll
xrelease
sti
les
inc
jle
jge
or
sbb
sub
in
sbb
xor
or
mov
xchg
std
mov
pushl
cld
mov
scas
in
test
out
push
mov
pop
adc
pop
clc
lods
dec
lock
dec
std
mov
lahf
pop
jns
in
sbb
vmwrite
jmp
std
gs
mov
mov
push
push
pop
dec
cwtl
jb
fnstcw
repnz
frstor
mov
pop
sub
jge
mov
lret
fucomp
dec
xchg
dec
call
add
xor
push
dec
pop
rep
and
ja
push
sub
mov
xchg
xchg
or
mov
xchg
aam
addb
cld
dec
push
sub
sub
cmpsb
fsubrs
rcrb
push
xor
adc
incb
mov
cmp
fcmovb
sub
cli
sti
lds
xchg
push
dec
jge
shlb
cmc
mov
jbe
adcb
es
fistpl
jae
cmpsb
movsb
in
lret
das
mov
and
pop
and
js
dec
scas
iret
or
push
xchg
lcall
mov
push
sub
in
stos
jb
test
lods
cmp
push
jno
repnz
cli
xor
add
negb
dec
adc
mov
or
pop
sarb
sub
push
dec
jp
mov
jb
outsb
imul
ljmp
dec
mov
test
xchg
mov
mov
pop
jo
addr16
clc
sbb
rclb
testb
es
dec
in
push
jnp
dec
aam
sbb
sti
ret
adc
xchg
sbb
cmp
shlb
fisubrl
xor
adc
sbbb
pop
jmp
cmp
in
cmp
xchg
jae
repz
call
mov
mov
jne
std
pop
enter
adc
mov
add
add
xor
or
xchg
xchg
mov
sub
push
sub
lea
sbb
stos
int
daa
sbb
std
fcmove
outsb
jmp
stos
mov
xchg
addl
or
mov
aaa
mov
pop
dec
popf
cmp
and
scas
pop
mov
add
pop
dec
orb
push
push
cmpsb
gs
mov
sub
jge
je
mov
push
fsubrl
dec
push
jmp
add
adc
popf
sbb
test
cs
or
scas
push
in
out
cmc
push
mov
movsb
cwtl
test
andl
leave
ret
add
sub
cmp
int3
push
adc
adc
mov
out
scas
xchg
pop
dec
arpl
movsl
cmc
or
ds
push
fildl
out
xchg
icebp
jecxz
pop
push
and
lods
push
or
dec
push
mov
jg
sub
lds
mov
cltd
lret
inc
jecxz
shl
sbbl
xor
jbe
fbstp
jl
insl
push
int3
jo
mov
outsb
adc
push
push
adc
push
xor
adc
xchg
movsb
xor
adc
divl
xlat
jno
xor
sub
mov
sar
mov
adc
inc
pop
mov
inc
jmp
mov
std
adc
mov
arpl
test
lcall
sbb
mov
insl
popf
loop
shrd
daa
iret
jge
mov
aas
dec
dec
movsb
xchg
bound
test
and
mov
push
in
xchg
xlat
mov
dec
mov
stos
adc
popf
cmp
orb
pop
out
jecxz
jnp
and
ficompl
mov
mov
mov
lahf
jmp
shl
lret
les
jne
out
xchg
lods
ja
shll
xor
mov
dec
popf
popa
or
xchg
jp
daa
addr16
jne
xchg
push
aaa
nop
shl
rorl
push
pop
lds
fwait
lock
fdivr
daa
bound
cmp
loopnew
mov
xchg
and
pop
jp
xor
push
and
cmc
fs
daa
in
ss
nop
mov
aaa
xor
or
push
jne
and
and
mov
inc
jmp
repz
jb
push
test
sub
je
sub
mov
add
jo
lcall
adc
sbb
mov
pop
push
mov
scas
popf
add
imul
js
test
dec
xor
xor
add
pop
sbb
cmp
mov
lea
daa
iret
in
add
fildll
sub
scas
mov
pop
sti
pop
aaa
roll
push
lcall
xor
xchg
xor
xchg
cmc
cld
out
pusha
mov
cmp
inc
fs
test
lods
nop
xchg
stos
pop
loope
popf
scas
aas
dec
clc
leave
xor
sbb
into
aam
clc
aam
repz
mov
pop
fidivl
adc
push
push
scas
xchg
int3
lods
mov
jmp
pop
dec
jl
jmp
cmp
inc
xchg
fdivr
inc
es
in
movsb
sub
int3
popa
lods
mov
dec
divb
cmp
dec
push
data16
sbb
ret
icebp
cmp
or
xor
or
mov
adc
cs
std
test
scas
inc
push
pusha
mov
cmpsb
in
mov
sub
pop
inc
add
dec
add
push
xor
or
popf
xchg
std
lods
loope
or
vmovsd
repnz
xchg
jecxz
lret
inc
adc
add
push
and
xchg
pop
stc
jl
adc
cmp
popf
imul
mov
jl
out
ficompl
jmp
call
lods
stos
js
or
notl
imul
or
lahf
cmp
cwtl
jnp
insl
test
call
mov
aaa
or
enter
cmpl
decl
pop
xor
add
cld
movsl
pusha
fcmovb
sbb
push
movsb
test
enter
jmp
ret
xchg
movsl
fwait
scas
mov
test
and
mov
sti
pop
jmp
imul
push
xchg
fiadds
and
mov
rcl
xchg
or
or
fistpll
insl
in
fs
bnd
lds
fnstenv
pusha
mov
push
hlt
ret
lock
in
aaa
inc
dec
sbb
mov
call
jle
xor
lahf
popa
jmp
push
in
jle
cld
stos
push
imul
jmp
in
in
inc
ss
dec
xor
iret
and
pop
nop
dec
pop
push
mov
mov
inc
cmp
cwtl
insl
sbb
push
mov
fs
arpl
mov
mov
add
mov
inc
push
jp
imul
jo
icebp
int
push
mov
add
or
mov
js
mov
cmp
jg
fstl
stos
inc
mov
push
popf
pop
fsub
mov
cwtl
insl
sbb
add
inc
fldl
js
push
ss
std
insl
nop
aaa
push
push
xor
mov
scas
stc
jae
adc
mov
push
xchg
std
push
or
mov
sti
xor
pop
out
fistpll
ret
xchg
jne
lock
mov
cld
lea
cwtl
dec
popa
mov
out
pop
pop
loopne
adc
fs
loopne
xchg
lock
mov
enter
or
je
sbbb
hlt
das
jb
push
xchg
lods
jmp
mov
fwait
xchg
add
xchg
loop
push
bound
mov
add
out
sub
xchg
push
or
xchg
jo
xchg
inc
mov
mov
push
push
daa
sub
daa
stos
dec
adc
sbb
pop
bound
mov
popa
rorl
lcall
in
shl
outsb
movsb
imul
adc
mov
insl
push
pop
sbb
rcr
cmp
push
mov
fcos
ficoms
jle
lock
inc
int
and
push
lcall
xchg
inc
faddl
cli
pop
mov
and
stos
test
int3
les
in
dec
addr16
push
mov
iret
cmp
mov
in
movsb
cmp
les
out
sub
xchg
std
cmp
iret
dec
jbe
popf
pop
mov
testl
and
push
inc
pop
repnz
pop
call
mov
push
pop
decl
testl
inc
in
mov
stos
jecxz
mov
ds
mov
mov
fs
bound
push
sbb
add
inc
mov
and
test
cmpsl
inc
js
test
mov
cld
dec
repnz
cmp
shrb
xchg
pop
or
xchg
push
cli
xchg
inc
rclb
cmp
inc
cld
sbb
jb
shll
sti
and
cmp
sbb
jmp
je
rcl
repnz
ds
cli
or
sub
aad
aas
movsb
sbb
jge
and
xchg
add
mov
sub
sbb
jb
cmp
lret
push
lret
mov
out
and
fxch
js
pop
push
pop
mov
mov
push
cmp
xchg
test
add
stc
rcrl
cltd
sub
dec
adc
pop
push
daa
mov
and
push
stc
aam
mov
leave
push
or
lds
cwtl
in
cmpl
imull
push
outsb
outsl
cmp
sub
add
push
arpl
out
shll
mov
lret
mov
inc
mov
rorb
dec
push
xor
sti
ljmp
xchg
dec
test
scas
push
inc
addl
lea
out
inc
dec
pop
fcmovne
shll
test
or
push
push
mov
int
sti
pop
mov
sbb
pushf
add
fisubrl
add
int3
mov
lret
or
and
in
or
and
xchg
pop
mov
jb
mov
sti
jb
fldcw
cmp
nop
movsl
xor
fnsave
imul
fdivs
jbe
into
dec
push
xchg
pop
dec
ja
mov
adc
add
idiv
aad
or
subb
rorb
pop
pop
or
mov
in
mov
or
cmp
sbb
arpl
test
xchg
adc
mov
pop
fdivs
mov
ds
lods
fisubs
jl
test
xor
fisubs
and
and
jae
dec
dec
cmpsb
inc
cs
outsl
pop
setnp
pop
roll
fcompl
and
insl
xorl
sarb
add
test
insb
mov
xor
aas
inc
into
in
and
in
fiadds
movd
jle
cmpsb
xor
dec
je
xchg
psubq
and
loop
mov
cmp
mov
fsubrp
into
fsin
leave
out
cmp
sub
sbb
or
jns
imul
sahf
test
scas
stc
fsubrp
into
fsin
leave
out
cmp
sub
sbb
or
jns
imul
sahf
test
scas
stc
fsubrp
data16
leave
out
cmp
sub
sbb
or
jns
imul
sahf
test
scas
stc
fsubrp
into
fnstcw
out
cmp
sub
loope
cmpsb
xorl
mov
add
mov
movsl
and
jge
test
pop
dec
aaa
mov
pop
mov
addr16
mov
cmpsl
sub
push
out
xlat
pop
dec
aaa
push
daa
outsb
pop
add
ja
addr16
inc
cli
mov
test
out
loop
imull
xchg
push
xchg
sub
jmp
js
xor
mov
mov
xlat
popf
pop
and
mov
addb
mov
cli
ja
in
arpl
aaa
or
sub
imul
out
adc
dec
icebp
jge
dec
js
adc
adc
cmp
div
mov
mov
aaa
mov
add
push
sbb
inc
mov
js
cmpsl
insl
out
das
cmpsl
dec
xor
outsb
mov
ja
lret
inc
jmp
mov
scas
jg
clc
or
cmpsl
adc
sub
mov
sub
mov
sbb
test
leave
lock
addr16
in
bound
adc
hlt
xor
mov
in
pop
mov
addr16
mov
cmpsl
adcb
out
xlat
inc
jp
mov
inc
in
pop
or
jnp
pop
in
ret
aas
cmpsb
pop
mov
mov
inc
push
out
je
inc
in
stos
sub
adc
rcrb
xchg
add
subb
lods
cmp
daa
dec
push
hlt
in
mov
call
mov
cmpsl
sub
js
push
aaa
mov
pop
mov
addr16
mov
cmpsl
sub
js
push
aaa
mov
js
cmpsl
lahf
xchg
loope
jno
testl
ljmp
add
or
mov
pop
test
push
lcall
jbe
push
int
inc
scas
loope
sub
push
shr
aaa
cmp
or
clc
cmp
or
sub
aas
aas
test
fcmovnu
push
iret
aas
mov
inc
dec
xchg
bound
fsub
pop
pop
xchg
dec
inc
adc
xchg
nop
je
push
ja
andb
jo
and
inc
stos
roll
pop
aam
sub
add
insb
or
adcl
mov
add
ljmp
push
inc
push
sahf
imul
arpl
dec
sar
sbb
out
arpl
imul
adcb
sub
arpl
pop
out
in
in
inc
outsb
std
add
and
leave
inc
in
stos
jle
loopne
fwait
xor
imul
adc
pop
mov
ds
sti
cmp
mov
cmp
jg
outsb
push
ret
aaa
mov
dec
jg
aad
add
cld
pushf
fadds
pushf
leave
mov
sbb
xor
and
sub
mov
dec
sub
clc
daa
dec
cmp
inc
mov
jp
insl
rcll
xor
iret
xchg
sbb
repnz
sti
insb
jnp
sub
orb
ds
mov
pop
jmp
push
icebp
out
test
push
nop
jge
addr16
mov
cmp
insb
jge
scas
insb
jno
sahf
fstl
mov
out
cmp
stc
mov
outsl
pop
data16
push
mov
fidivrl
lods
xchg
mov
fldt
push
psubusb
sub
pop
xchg
std
rcl
xchg
mov
and
mov
cmpsl
lret
adc
cs
popf
push
in
cld
mov
dec
sbb
mov
in
in
add
in
out
jmp
add
es
sub
or
mov
adc
int3
mov
lret
pop
jnp
mov
shll
fnsave
or
nop
or
fidivrl
lahf
sbb
out
rcrl
nop
xchg
pushf
outsl
aad
xchg
stc
xchg
ss
push
out
add
mov
in
ret
push
adc
int
mov
daa
hlt
mov
xor
clc
mov
mov
mov
ljmp
pop
lods
popf
cmp
jecxz
cmp
movsb
mov
push
pop
mov
jecxz
xor
lcall
sahf
dec
ret
adc
or
push
xchg
es
les
fwait
mov
dec
jmp
fisubs
pop
mov
fwait
inc
es
mov
andl
scas
or
or
rcrl
adc
shlb
pop
xchg
insb
movsl
cs
push
mov
aas
xorb
mov
inc
inc
sbb
in
imul
data16
cltd
mov
lods
fs
lds
jns
ja
mov
inc
cmp
mov
fisubs
xor
pushf
dec
dec
lock
push
xchg
jae
movsb
cmp
rorl
int3
aam
cmpsb
in
lret
and
pusha
jp
or
or
sub
addl
jp
mov
mov
xor
mov
push
push
cmp
sub
stc
jl
and
push
adc
cld
cmp
or
test
xchg
int3
and
sub
jge
mov
in
or
bound
in
xor
pop
dec
sub
xchg
in
in
hlt
jmp
mov
jmp
bound
jmp
inc
cmp
sub
fiadds
dec
sti
ja
pop
push
decb
stos
aad
ds
cmp
adc
jo
outsb
lret
call
repz
mov
xchg
fisubl
mov
pop
jnp
outsb
cmc
xchg
mov
in
bound
clc
mov
in
test
dec
xlat
fidivs
push
mov
cmp
into
dec
aaa
cmp
jb
inc
add
pop
mov
push
and
fistl
cwtl
add
add
inc
popa
aad
lock
sub
lds
in
pusha
test
jnp
or
movd
lock
int
lods
fmull
xor
mov
add
mov
sbb
clc
sub
je
xchg
xor
inc
mov
jp
xchg
addr16
jo
cmp
test
xchg
js
sub
sbb
cli
mov
add
test
out
mov
mov
sbb
pop
shll
test
repnz
cmpsl
jns
mov
dec
push
lret
test
dec
lock
lcall
push
fildl
jg
pop
int3
stos
adc
nop
call
xchg
pushf
andb
mov
mov
push
dec
xchg
jo
cmp
push
xchg
icebp
jmp
in
pop
mov
mov
stos
and
in
into
gs
gs
aad
test
push
jp
pop
xor
sbb
orl
fwait
and
in
shl
push
pop
out
fs
jg
loope
add
mov
pop
mov
cmc
mov
mov
adc
add
fcomps
loop
ljmp
jae
int
mov
pop
dec
dec
negb
sub
mov
xor
movsl
je
out
inc
xor
in
or
inc
pusha
inc
sbb
bound
shll
cmp
push
adc
leave
jle
xor
int
inc
std
mov
sub
pop
jecxz
shl
push
cltd
xchg
jl
mov
out
mov
and
and
mov
jae
pop
push
pop
jp
out
movsl
aam
mov
movsb
lahf
and
int3
cmp
out
leave
testl
jo
call
sahf
cmpsl
cs
sub
and
ds
pop
mov
pop
mov
movsl
or
mov
jne
add
nop
xor
jne
inc
cli
mov
int3
into
jp
inc
iret
inc
pop
iret
ds
mov
bound
popf
jl
pop
imul
xchg
xlat
pop
pop
jnp
fcmovu
cmc
cld
dec
je
mov
sub
pop
xchg
outsb
mov
xor
adc
xchg
cmp
mov
popa
test
dec
mov
lods
inc
push
xchg
clc
lea
mov
and
arpl
jge
dec
pop
mov
int3
pop
sub
aaa
mov
fldt
mov
imul
and
mov
xor
sbb
mov
jae
call
mov
aas
inc
mov
loope
lcall
mov
mov
dec
cli
mov
jne
fnstenv
mov
popa
add
mov
dec
jno
fstpt
and
jns
orb
cltd
repz
str
push
cmpsb
mov
sub
dec
jecxz
cltd
xor
mov
xchg
jnp
shlb
adc
outsb
inc
jmp
rcrl
aaa
sub
shrl
int3
bound
push
cwtl
push
jnp
add
in
add
int3
sub
mov
pop
pusha
xchg
in
cmc
add
mov
jg
fcomip
push
dec
mov
sbb
lahf
ror
in
add
addl
mov
push
sbb
xchg
mov
in
ljmp
bnd
dec
int
fcmovnbe
sbbl
mov
lret
and
aam
inc
fsubrs
adc
or
arpl
lret
movsb
mov
jle
sbb
enter
or
mov
mov
loop
aas
ds
out
mov
getsec
pushf
push
xor
mov
xor
push
push
dec
push
jnp
daa
jns
ja
add
rcll
add
repz
jp
mov
mov
xchg
in
jbe
mov
fmull
ja
roll
aam
shlb
inc
inc
fnsetpm(287
xchg
jmp
imul
jecxz
jns
cmp
scas
sub
pop
jo
and
cmp
jecxz
xchg
movsb
push
sub
dec
xchg
and
jge
out
push
mov
mov
dec
xchg
adcb
out
sbb
inc
aaa
or
arpl
jmp
fcomp
mov
mov
inc
test
push
outsl
into
movsl
and
sub
adc
xor
ret
fistpl
adc
mov
xchg
lea
lcall
inc
add
test
dec
cmc
jmp
dec
pusha
mov
and
ficomps
mov
dec
and
or
sbb
mov
jecxz
mov
lods
xor
or
jb
mov
dec
jns
stos
xor
fimull
or
rcrl
int3
lods
movsb
jmp
lcall
xchg
mov
into
test
inc
and
nop
loop
jns
jnp
xchg
subb
out
ficoms
dec
je
push
push
push
dec
nop
out
sub
outsl
jns
xor
inc
mov
add
xchg
xor
pop
mov
std
cmp
sub
mov
and
inc
popf
mov
add
cmp
mov
es
jae
data16
je
cmp
imul
jp
add
movsl
mov
cld
out
cs
xchg
sbb
or
dec
adc
or
sbb
inc
mov
stos
xor
cmc
cmc
repz
jb
push
mov
sub
jae
push
out
test
add
adc
add
cmpsb
push
fmulp
sub
xchg
icebp
push
lcall
sub
add
es
jmp
xor
mov
add
jmp
push
scas
dec
pop
pop
ret
mov
push
in
repz
les
imul
imul
mov
ss
insl
jns
les
xor
std
divb
out
adc
out
mov
aas
notl
fstpl
insb
dec
jo
pop
or
xchg
pop
test
test
adc
je
mov
xchg
and
pop
and
sbb
lods
ja
fisttps
into
and
jb
dec
sub
loopne
pop
into
sub
cmp
push
pop
pusha
ret
rorl
fcmovnb
das
mov
jg
or
out
add
das
hlt
pop
adcb
mov
in
dec
xor
pop
hlt
adc
sub
mov
insl
repnz
jne
test
sahf
and
jmp
sbb
pop
aam
mov
ljmp
movaps
je
inc
pop
xor
arpl
pushf
sub
nop
lret
test
add
sub
jg
lds
insb
mov
xchg
and
xor
adc
gs
nop
int
mov
inc
call
xor
push
inc
pop
jl
mov
sbb
sub
cmp
sbb
xchg
in
aam
mov
adc
sahf
ss
pop
jbe
mov
jecxz
dec
pop
mul
rorb
cmp
sbb
shl
daa
mov
lods
fwait
stos
push
repnz
dec
or
pusha
or
xchg
dec
out
add
rorl
outsb
sub
lock
mov
faddl
ljmp
xchg
or
push
pop
shlb
cmp
fistl
std
cmpsl
loop
insl
sub
cmpl
push
fnstsw
std
and
push
out
mov
sub
cwtl
fisubrl
ja
inc
sahf
push
and
int
and
jne
fbld
mov
sbb
cli
and
lods
sub
mov
add
sti
ret
shlb
push
js
lret
cmp
sub
into
repnz
dec
push
xchg
hlt
negl
xor
test
call
push
out
sub
inc
push
push
not
adc
scas
std
mov
lock
xor
cltd
xchg
das
lods
push
push
fidivl
xchg
push
bound
push
ror
jns
cli
sub
in
sub
test
stc
ss
jno
int3
mov
push
lods
les
data16
movsl
lods
add
mov
mov
xlat
inc
mov
push
sbb
test
xor
inc
jne
jp
and
jge
shlb
imul
sbb
push
xchg
mov
xor
inc
ret
xor
xor
sbb
pop
pop
mov
sar
inc
test
stos
xchg
sub
xchg
mov
sub
xchg
dec
adc
mov
icebp
mov
inc
or
sbb
cwtl
jmp
mov
xlat
xchg
scas
adc
sbb
mov
mov
sahf
into
jp
fisubrs
sub
sbb
inc
in
daa
mov
insl
mov
negb
daa
cmp
mov
loop
xchg
addr16
in
adc
mov
les
gs
lcall
popf
aas
lods
stos
cld
mov
mov
jbe
insb
and
xor
inc
outsl
std
sub
push
inc
jbe
and
push
rcrb
stc
add
add
xchg
mov
sbb
lret
xchg
mov
adcl
loope
fsubs
adc
and
in
and
lret
fisttpl
xchg
mov
jb
pusha
bound
mov
shrb
push
in
sbb
iret
dec
push
lock
popl
jae
mov
cmp
lods
xor
test
push
sbb
fsubp
adc
xor
test
fdivs
and
mov
inc
les
decl
mov
addr16
sahf
in
in
test
push
pop
lds
inc
and
inc
or
cs
adc
add
int
sub
push
xor
push
push
xor
add
insl
shlb
loopne
add
push
insb
add
mov
cltd
push
add
rclb
xor
pusha
fildl
sub
mov
sub
xchg
add
cld
hlt
xchg
xchg
adc
sub
pushf
push
adc
test
bndldx
push
mov
sbb
mov
mov
cmp
jecxz
clc
sbb
lcall
push
jbe
jp
jecxz
jbe
out
push
cmc
bound
rorb
cmpsb
xchg
inc
call
addb
xchg
cmp
popa
inc
dec
inc
les
mov
scas
mov
mov
js
xlat
mov
lock
popf
inc
cmpsb
lahf
push
push
popf
push
pushf
add
jb
cld
mov
incl
lahf
shll
fmull
mov
fnstcw
dec
adc
negb
sub
cld
jl
and
in
mov
insb
xlat
cmp
or
test
popl
sbb
dec
data16
ret
aas
in
jnp
adc
loop
cmc
je
pop
pop
mov
fildl
loopne
push
out
or
or
inc
cmpsl
ss
sti
pop
testl
enter
ds
rcrl
mov
arpl
bound
or
out
leave
repz
mov
fstpl
or
jae
dec
les
push
and
stos
jb
push
sub
repnz
push
jns
cs
jecxz
icebp
mov
adc
shr
pop
ds
in
outsb
cltd
inc
sbb
xchg
lahf
stos
das
mov
jnp
out
xor
mov
aad
insb
adc
leave
mov
fcmovbe
mov
sarb
pop
sub
xor
daa
mov
xchg
cmpl
or
movsl
mov
cmc
icebp
pop
mov
call
bound
fs
jg
inc
push
dec
das
fiadds
sbb
cwtl
add
push
mov
insb
mov
insb
popa
add
xchg
cltd
add
xor
or
add
mov
divl
in
sub
sbbb
sub
dec
push
std
outsb
das
jb
inc
imul
or
insl
jp
push
int3
mov
jae
jmp
mov
push
imul
cmc
sar
idiv
push
or
je
and
inc
aaa
out
das
nop
xor
xor
sbb
out
dec
mov
lods
mov
test
enter
mov
fnsave
lea
leave
pop
test
pop
subps
mov
out
push
test
imul
jle
xchg
dec
stos
icebp
cli
pop
jne
mov
insb
and
in
adc
dec
loopne
cwtl
adcb
ljmp
sbb
xchg
or
dec
xor
lods
scas
add
stos
push
xor
jecxz
pop
adc
and
add
arpl
pop
adc
xor
xchg
adc
lds
ror
push
or
and
jb
xor
mov
mov
add
test
pop
adc
xchg
xor
pushf
jl
cli
xor
jle
adc
lds
insl
cmp
movsl
adc
in
sbb
into
sub
movsl
lock
push
popa
fcompl
repnz
nop
in
xchg
aaa
add
fists
push
bound
aaa
sbb
push
dec
dec
push
fiaddl
stc
cmpsb
push
icebp
mov
call
stc
pop
clc
loope
scas
jne
mov
sbb
mov
and
sarb
adc
ret
jle
xchg
out
sbb
fistpll
dec
ljmp
ret
cli
sub
fldenv
adcb
mov
popa
adc
lret
std
ja
xchg
add
pop
int
sub
pop
xchg
xchg
movsl
into
js
mov
and
ss
or
loop
outsl
push
sarl
pushl
pop
int3
test
push
add
push
or
mov
push
adc
adc
mov
mov
and
xchg
jae
dec
fisubs
stos
and
movsl
jbe
jbe
nop
out
adc
xchg
add
dec
dec
mov
jnp
shlb
mov
or
lret
mov
int
pop
sti
xor
leave
mov
out
mov
push
xchg
repnz
push
neg
outsb
mov
cmp
sbb
dec
pop
mov
test
mov
sub
adc
or
cld
sbb
adc
dec
pop
idivb
cmp
inc
sbb
in
mov
cmp
hlt
cli
push
inc
push
adc
shrl
insb
adc
adc
dec
notb
mov
sti
iret
cli
fstpt
push
push
stos
clc
xchg
fbstp
cmp
mov
push
cmp
cli
mov
pop
jmp
push
das
jmp
dec
push
sub
arpl
add
sbb
repnz
push
cwtl
imul
push
sti
cmc
push
test
xor
cs
and
jo
xlat
pusha
dec
cmovge
mov
hlt
xor
pop
ud1
in
call
jae
mov
mov
mov
test
hlt
add
push
pop
subl
push
lods
std
add
dec
out
cmp
jg
daa
mov
cmp
push
or
mov
fcmovnu
ret
adc
or
clc
adc
in
ljmp
stos
mov
and
pop
mov
inc
mov
add
jp
int
lock
cli
dec
fidivs
fistpl
jo
negb
mov
mov
jbe
lea
repz
jmp
loope
pop
fwait
movsb
out
fwait
arpl
mov
push
cmp
stos
lret
in
pop
xor
push
pushf
sub
cmp
lds
fldcw
cmp
sub
imul
cmc
pop
int3
cltd
cmpb
sti
stos
and
cmp
pop
out
xor
in
mov
adc
aad
cltd
and
es
out
cmpsb
xchg
dec
jl
movsb
jae
nop
inc
or
and
ss
push
movsb
inc
cwtl
xchg
notb
push
push
pop
pushf
movsb
dec
adc
push
push
fsub
test
stc
add
aam
or
lods
mov
sub
mov
outsl
lock
insb
push
insl
jbe
xchg
pop
and
stos
stos
inc
sub
or
fcmovb
push
pop
out
cmp
rorb
add
pusha
arpl
rorl
out
jno
jl
sub
js
inc
push
test
fisubrs
lcall
cld
mov
orl
sub
jo
push
cwtl
shrb
and
lds
hlt
xor
ror
or
in
pop
mov
call
add
or
loop
mov
pop
lea
into
test
mov
mov
aad
in
sub
xor
in
sub
shrl
mov
ss
adc
pop
in
xor
push
pop
mov
jge
repnz
inc
mov
pop
jmp
fdivrs
adc
in
cmc
in
pop
dec
pop
jae
hlt
jecxz
jg
push
out
sbb
out
aam
and
aam
aam
jno
in
rcr
inc
aad
fildl
mov
cmp
mov
jo
mov
and
fmull
push
mov
iret
dec
and
sub
int
movsb
das
push
jbe
ret
fdivr
fistpl
addr16
decb
sub
xor
repnz
shlb
xor
loop
insb
aaa
push
cs
push
lcall
ljmp
mov
sub
leave
add
out
sbb
gs
push
dec
fwait
xor
out
xchg
push
test
xor
xchg
mov
fsubrp
cli
jnp
mov
push
cltd
mov
mov
stos
and
pop
test
inc
insb
or
and
mov
addr16
mov
cmpsl
sub
js
push
aaa
mov
pop
mov
addr16
mov
cmpsl
sub
js
push
aaa
mov
pop
mov
adcw
enter
sub
sbb
push
aaa
pop
daa
dec
pop
jl
enter
call
dec
pop
cmpb
outsl
adc
and
xor
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
divb
push
movb
aam
clc
xor
push
rolb
ss
mov
divb
push
movb
cmpsb
and
repnz
rolb
neg
mov
divb
push
movb
cmpsb
and
repnz
sarl
inc
mov
arpl
push
sub
cmp
daa
popf
cltd
jle
pop
adc
mov
inc
sbb
fnstsw
push
cmp
dec
xor
or
mov
imul
shll
cmp
mov
jbe
xor
mov
mov
divb
out
mov
xchg
mov
adc
cld
sti
or
sub
leave
mov
pop
xchg
cwtl
xor
add
iret
out
mov
ret
and
sub
fldenv
or
sbb
adc
xor
sbb
mov
sub
data16
icebp
push
xchg
xchg
push
movb
cmpsb
and
repnz
rolb
ss
mov
mov
xchg
and
push
aam
repnz
test
mov
jecxz
mov
mov
icebp
es
jne
inc
int3
xchg
pop
addl
aaa
stos
inc
mov
jecxz
out
jnp
adc
inc
cmpsl
aaa
fmull
jp
jae
xchg
ss
mov
sbb
and
repnz
rolb
ss
mov
divb
push
movb
cmpsb
and
repnz
rolb
ss
mov
divb
or
jmp
int
popf
jno
add
push
jns
xchg
jg
mov
push
and
sub
ja
lret
xchg
pusha
xor
inc
mov
fcomip
pop
push
add
xchg
xchg
mov
push
adc
sbb
jbe
loopne
sub
jns
rorl
jle
call
adc
mov
test
jnp
inc
cli
testl
jle
test
je
xor
lcall
inc
ret
and
popf
adc
test
test
lods
js
nop
shr
and
insb
cld
je
lahf
sarl
push
sahf
stos
jmp
iret
sub
mov
ljmp
mov
rcll
fwait
loop
iret
sbb
enter
mov
mov
jecxz
hlt
rcll
popf
and
aas
iret
push
hlt
or
push
adc
adc
cmpsl
cmp
outsl
or
bound
or
push
ret
inc
sbb
push
inc
sbb
out
std
sbb
mov
dec
sbb
fldl
cmp
lcall
popa
sbb
fs
push
and
shlb
jmp
jb
jns
mull
cmp
mov
icebp
cmp
lcall
stos
arpl
and
xchg
loop
popa
xor
stos
ja
mov
jo
sub
movsl
push
fbld
and
mov
mov
loope
inc
adc
insl
adcb
sahf
ficoml
call
sbb
fsubs
setbe
je
xchg
mov
stos
mov
arpl
and
mov
fwait
arpl
int3
jo
and
lcall
rol
andb
movsb
xchg
xchg
mov
mov
jne
out
cmp
sub
push
out
cmpsl
mov
leave
ffreep
xlat
xor
cld
mov
lods
iret
pop
outsl
test
mov
in
add
jp
and
lods
xlat
or
mov
rcrb
lea
fimull
dec
or
loopne
test
imul
and
pop
movsb
xchg
and
mov
leave
dec
inc
push
popa
jne
mov
and
cmp
xor
jns
adc
xlat
jecxz
andl
aad
in
test
sub
cs
inc
inc
mov
rcrb
movsl
lock
inc
mov
mov
pop
push
push
adc
icebp
stos
lock
scas
push
pop
dec
add
dec
mov
sbb
dec
xchg
stc
mov
pop
sbb
sbb
iret
les
je
sbb
and
pusha
inc
loope
cmp
cmp
test
lds
cmp
xor
loope
mov
addr16
pop
add
incb
out
pop
sbb
push
aam
adc
testb
inc
shll
mov
inc
insb
mov
push
pop
sbb
sub
push
int
mov
mov
out
xlat
sub
xchg
jmp
jmp
or
xor
jb
loopne
stc
fmul
lcall
adc
stc
adc
xor
cmpsb
or
jnp
jp
sub
mov
jae
loopne
and
adc
mov
jge
add
mov
ss
mov
out
cmp
cmp
mov
xchg
xchg
fsts
xchg
and
loope
pop
inc
lahf
cld
lret
mov
xchg
push
pushl
ret
dec
es
and
xor
call
es
ljmp
lret
daa
mov
push
sbb
cmp
daa
int
cltd
push
mov
push
dec
add
das
stos
cmp
cmp
pop
les
inc
lret
add
jno
fdivp
push
jno
movb
jnp
sti
mov
frstor
and
mov
ret
xor
ss
icebp
leave
mov
shr
dec
push
nop
sbb
jle
fsubs
into
ret
adc
orb
xchg
lods
repnz
popa
push
push
bound
inc
stos
push
cmpsb
adc
jg
push
imul
inc
dec
inc
add
outsb
mov
xlat
ret
pop
fists
add
push
mov
add
mov
fcoms
stos
mov
pminsw
inc
fistpll
imul
xchg
lds
mov
popf
mov
pop
mov
push
push
shll
adc
add
mov
lcall
push
cmc
subl
xchg
adc
and
mov
clc
push
insl
pop
add
js
push
push
sub
inc
and
mov
xor
xor
call
movsb
pop
dec
jmp
mov
push
faddl
lods
ja
push
push
addl
test
lahf
fistpl
push
mov
dec
inc
aam
adc
add
sub
in
testl
push
negl
push
cmp
stc
lock
shl
pop
packsswb
inc
loopne
dec
sbb
test
test
test
sahf
fs
mov
adc
sbb
xchg
sbbb
popa
sub
out
mov
push
lock
mov
ffree
repz
lret
loop
jmp
pop
and
insl
mov
xor
and
mov
jg
bound
pop
xor
ffree
hlt
mull
adc
and
mov
cli
loop
fs
clc
mov
lods
push
fiadds
and
xchg
cltd
sbb
adc
push
mov
cmpsl
test
repnz
adc
mov
cld
notb
sub
inc
jns
or
mov
or
loop
pop
mov
push
jne
dec
pop
mov
pop
popa
pop
lds
add
push
dec
js
push
aad
in
pop
test
ss
jbe
and
cmp
xchg
mov
ss
test
add
lret
out
ret
outsl
sarl
or
jae
rclb
enter
scas
stos
cltd
fnsaves
cmp
inc
xor
xchg
insb
rorb
push
xchg
gs
mov
shlb
lret
outsl
mov
mov
subb
fsubrl
mov
mov
cmpsl
rclb
mov
pop
mov
pop
add
pop
loopne
push
xor
pop
push
xor
jns
ret
nop
pop
adc
or
mov
jmp
ret
xchg
adc
adc
repnz
mov
pop
test
and
ret
pop
or
loop
test
or
dec
lahf
movsl
inc
xchg
enter
jmp
or
mov
jecxz
push
push
inc
repnz
xor
mov
pop
aad
dec
fsubrs
in
imul
dec
jp
add
das
cltd
mov
mov
xchg
fstp
ret
inc
orl
cmpl
js
outsb
test
push
sbb
in
rorb
mov
imul
xchg
mov
jl
mov
xchg
pop
int3
outsb
jne
bound
out
sbb
std
or
jge
mov
cltd
adc
xchg
mov
mov
sti
les
mov
daa
outsl
or
push
das
js
cmp
push
and
mov
or
mov
ljmp
stc
lock
cmp
cmpsl
mov
push
or
mov
push
repz
mov
mov
out
in
lock
xor
mov
repz
les
xor
and
movsb
aas
jns
xchg
inc
inc
cmp
xor
or
push
xchg
in
rcrb
pop
add
pop
xchg
mov
sbb
or
dec
adc
data16
stos
fwait
notl
jmp
pushf
pushf
lea
nopl
leave
popf
mov
mov
mov
in
pop
movsl
mov
cmpsb
orl
out
adc
aaa
push
or
inc
lret
imul
jecxz
test
push
jno
cltd
sub
mov
outsl
lods
sub
sub
adc
or
ret
les
xor
into
jp
sub
mov
sbb
lcall
sbb
mov
nop
mov
jo
mov
xor
mov
xor
mov
out
mov
clc
pop
dec
pop
mov
mov
scas
xchg
inc
shlb
add
gs
es
js
ret
pop
or
push
xchg
ficoml
pop
fwait
test
mov
mov
sub
push
push
rol
adc
testb
xchg
lahf
sbb
in
xchg
mov
lcall
sub
add
add
cmpsb
out
cwtl
in
xchg
mov
xchg
mov
dec
fildl
out
mov
out
mov
sbb
inc
mov
sub
pop
popa
fdivr
movsb
sub
add
add
test
stos
fnstenv
sbb
lds
or
jno
lds
adc
and
inc
popa
hlt
push
push
sarb
mov
xor
dec
xchg
push
scas
sub
mov
jl
cmp
or
lea
xorl
test
push
call
lock
popa
inc
in
ret
fiaddl
or
lret
repz
jp
jle
pop
jne
jg
in
sbbl
lret
fs
fwait
sahf
mov
lds
addps
popf
outsb
ljmp
push
xor
fisttps
insb
popa
mov
std
lea
dec
and
inc
cltd
std
ljmp
pop
mov
mov
pop
inc
dec
scas
jns
ret
imul
mov
sti
call
int
sub
jb
xor
popa
add
or
and
into
cmpsb
fwait
insl
call
cwtl
mov
imul
jno
mov
pop
hlt
or
fisttps
aas
gs
xchg
jno
daa
mov
in
addr16
inc
mov
fisubs
aaa
xchg
loope
mov
push
outsb
xchg
and
mov
bound
loopne
cmp
movsb
out
test
ja
sbb
dec
xchg
sbb
test
lds
pop
nop
mov
inc
sbb
ret
pop
cwtl
xchg
mov
repz
stos
fs
rcrb
mov
ret
sar
cld
imul
gs
cmpsb
push
mov
ljmp
jae
sub
push
daa
lods
ds
lret
scas
lods
fidivrs
js
jb
sbb
sub
lods
adc
mov
pop
jge
testb
ljmp
outsl
outsb
and
popf
sar
jecxz
inc
sahf
add
stc
hlt
int3
js
popa
mov
add
sub
pop
test
lock
push
dec
roll
sbb
lcall
push
or
pop
lahf
pushf
in
iret
or
xchg
into
mov
push
dec
out
cs
pop
xchg
cli
inc
xabort
inc
pop
sbb
notb
sub
mov
lret
xchg
pop
fwait
imul
fiadds
in
leave
mov
gs
sahf
mov
shrb
mov
lock
test
dec
inc
movsb
mov
adc
stc
sub
jno
inc
rcrb
sbb
mov
xor
ret
inc
or
xchg
cltd
aas
xor
inc
aam
mov
pop
xchg
in
pop
aaa
rorb
out
inc
ret
xor
pushf
add
cmpsb
pusha
mov
or
mov
lds
test
clc
dec
pop
xor
jl
shlb
cmc
aaa
push
cs
sbb
jecxz
add
inc
repnz
push
insb
or
and
test
movsl
sub
adc
out
imul
mov
jno
flds
adc
push
cmpsb
inc
jp
leave
push
pop
jne
inc
test
cmpsb
bound
pop
pop
sahf
xchg
push
sbb
fadd
push
mov
sub
gs
push
lret
sbb
sbb
mov
push
pop
mov
or
daa
jmp
mov
cli
loop
jmp
inc
lods
mov
imul
fsubl
mov
pop
clc
rcll
rclb
push
inc
popf
add
inc
fistl
mov
sbb
xchg
sbb
cmc
je
mov
cmp
xchg
in
sti
lock
pop
shll
adc
xlat
nopl
or
ret
and
jmp
adc
addr16
or
insb
jecxz
pusha
mov
rclb
inc
mov
jae
pop
cwtl
sub
out
mov
loopne
adc
rcl
adc
out
inc
leave
lds
stos
sub
cltd
aad
push
popa
jp
mov
dec
xchg
shr
imul
out
sbb
sbb
jo
ljmp
inc
jge
enter
dec
mov
scas
decl
aam
decb
fbstp
int
cmp
mov
jno
hlt
jg
mov
lret
sub
outsl
mov
dec
in
xchg
cmpl
test
adc
je
xor
stos
sbb
stc
inc
pop
fnstenv
jne
xchg
mov
sbb
pop
mov
sbb
inc
cmpb
hlt
data16
xchg
cmp
movsl
fisubl
pop
rcrb
pop
out
adc
pop
shll
test
stos
loop
test
xor
adc
push
inc
xchg
test
arpl
mov
mov
push
cmp
fcmovu
out
imul
mov
mov
mov
dec
testb
jbe
fcmovb
cs
pop
add
rep
scas
add
xor
jl
jge
aaa
push
jge
dec
hlt
xor
clc
sbb
sub
stc
lret
iret
mov
ret
outsl
call
call
inc
and
push
lahf
insl
jge
jle
daa
jno
pop
shl
or
fwait
push
push
in
pop
mov
cli
push
jb
test
xchg
popa
iret
mov
cmp
mov
lds
jno
pop
into
enter
jo
and
pushf
jecxz
int
push
mov
and
mov
inc
pop
mov
mov
jno
insl
ficomps
aaa
add
mov
adc
inc
xchg
mov
lods
imul
fidivrl
sbb
jle
out
add
lods
loop
lock
mov
stc
movsl
clc
jle
mov
lods
sbb
cld
adc
mov
repz
pushf
pop
jg
outsl
shl
jle
rcl
mov
outsl
dec
rol
addr16
or
sbb
adc
xor
adc
aad
cmp
jge
in
xchg
sbb
popf
pop
mov
xor
push
daa
mov
pop
cltd
call
sub
scas
and
mov
sub
test
roll
jle
es
xor
pop
imul
dec
sub
test
add
dec
sub
mov
lds
cwtl
jmp
sbb
daa
pop
filds
fsubs
pop
lea
or
dec
clc
scas
push
aad
dec
xchg
adc
inc
insl
mov
fldt
stos
stc
push
xor
adc
adc
pushf
dec
pop
aam
aaa
sub
scas
push
adc
arpl
test
sub
ds
testl
gs
xchg
arpl
jns
and
pop
mov
pop
push
enter
aas
sub
cmpsb
mov
ljmp
xchg
sti
shrl
aas
mov
sub
xchg
cmc
push
aas
dec
push
pop
mov
cmpsb
xchg
mov
lea
enter
cmp
ret
add
in
jno
call
jg
shll
xchg
lea
jp
xchg
adc
push
lods
mov
sbb
cmp
mov
dec
dec
sarl
aam
sbb
int
in
and
xchg
xor
mov
adc
lcall
movsl
sub
or
std
xor
adc
scas
or
imul
push
dec
or
xchg
flds
das
aaa
testl
mov
daa
inc
and
stc
cld
jnp
idiv
jmp
nop
jno
das
cmp
mov
ret
into
mov
movsb
cmpl
ret
cld
cmpsb
inc
jb
pop
add
add
xchg
jl
and
mov
aas
call
ffreep
cwtl
jl
pop
in
addb
call
fwait
fwait
jg
jl
or
jo
daa
push
jae
pop
adc
aas
mov
scas
sub
mov
inc
jbe
xchg
add
stos
test
xchg
cld
push
cs
std
sarb
cli
fldl
in
lcallw
out
clc
inc
mov
xchg
stc
inc
call
xor
lret
sub
mov
mov
add
mov
xor
sub
dec
cmp
jne
imul
pop
jecxz
or
lret
repz
out
mov
aad
xchg
dec
pop
mov
je
jns
es
xor
mov
sub
rcr
jle
aas
movsl
xor
loop
shl
mov
xor
bnd
test
stos
sbbl
mov
jge
out
and
inc
cltd
push
or
pop
mov
sbb
sbb
adc
insl
movb
arpl
aaa
pop
pop
arpl
mov
shlb
out
xorb
cmc
inc
sub
lods
fsubs
push
push
insb
cwtl
test
push
mov
cltd
and
mov
ficoml
lea
mov
add
lret
sahf
add
insb
sbb
fs
mov
shl
fisubrs
pusha
jecxz
add
int3
jno
icebp
sub
mov
movsb
scas
sbb
and
xor
push
mov
lods
xchg
lea
in
stos
sahf
jmp
outsl
sti
mov
jae
int3
mov
loopne
mov
xor
sub
xchg
sub
push
push
cmp
cmp
call
ret
fisttpl
fisttps
aam
xor
dec
mov
add
in
in
push
adc
shrb
sbb
cwtl
push
adc
dec
sub
lods
in
in
pop
scas
or
sub
inc
jecxz
mov
add
xor
cmova
imul
out
popf
mov
test
mov
addb
xor
test
pop
jnp
sub
int3
and
lods
mov
stos
lds
out
sahf
outsl
scas
mov
sahf
cmpsb
sbb
lds
push
pop
cs
sbb
cmpsl
or
cwtl
lods
pop
pop
daa
sbb
loopne
sub
in
cwtl
bound
sub
or
aad
loop
cmp
xor
mov
icebp
mov
push
cmp
outsb
mov
cli
fistps
roll
dec
lcall
jmp
adc
stos
aam
rclb
or
pop
int
xlat
std
xchg
mov
arpl
mov
repnz
push
pop
shrl
adc
idivl
cmp
lret
sbb
out
add
jo
and
lods
pop
cmp
push
mov
insl
mov
pop
ds
jbe
imul
call
mov
enter
gs
pop
push
dec
push
pop
pop
mov
adc
fsubrs
mov
dec
fcomps
sbb
mov
rorl
sbb
insb
hlt
xchg
or
sub
mov
sub
fimuls
stos
xchg
xchg
dec
xor
mov
xchg
lcall
enter
sub
js
test
push
ljmp
out
scas
leave
enter
pop
jmp
pop
popa
push
mov
and
xor
sub
xor
hlt
xchg
cltd
aaa
sub
cmpl
mov
xchg
xor
mov
push
adc
xor
inc
lods
pop
sbb
pop
cld
push
mov
mov
sub
push
or
popf
cmc
imul
dec
sbb
movsb
cmpsb
divl
add
xchg
xchg
je
movl
aad
shl
in
scas
mov
test
and
cld
inc
push
outsb
nop
add
add
sub
mov
test
mov
sbbb
outsb
stos
sub
rclb
xchg
jbe
out
sub
cmp
dec
pop
jp
lret
shll
fldl
jle
dec
xchg
and
dec
pop
lds
mov
fcoms
jne
nop
dec
jmp
add
ss
lods
add
add
pusha
aas
inc
fcmovne
pop
push
repnz
dec
lods
adc
loopne
adcb
fdivl
pop
mov
add
ficoml
pop
mov
int3
sub
push
fildl
repz
out
cmp
xor
cmp
push
in
shll
and
fs
cmc
bound
push
mov
subb
fcomps
popa
jg
mov
loop
mov
les
imul
aas
lret
test
adc
mov
pop
sbb
ljmp
xor
mov
xchg
adc
out
dec
xchg
clc
test
divl
cli
fstpl
lods
or
dec
or
inc
insl
sub
je
lods
stos
repz
shlb
mov
nop
popf
lods
loop
into
jge
inc
sub
fdivrl
jge
aaa
push
repnz
push
mov
add
addr16
mov
aam
lea
pop
out
out
xchg
push
and
insl
in
mov
or
push
int3
mov
inc
mov
cmpsb
and
repnz
rolb
ss
mov
divb
push
movb
cmpsb
and
repnz
rolb
ss
mov
divb
bound
movb
cmpsb
and
repnz
rolb
ss
mov
divb
push
movb
cmpsb
and
repnz
cld
rolb
inc
cmp
insw
jbe
das
add
adc
and
xor
cld
iret
cmp
mov
xchg
push
mov
movsb
jle
outsb
pop
dec
in
hlt
mov
and
xor
inc
out
inc
fbld
aas
mov
xchg
jle
lfs
outsl
pop
in
hlt
mov
cmp
sub
pop
out
dec
fistpll
aas
test
mov
sbb
push
mov
iret
dec
scas
roll
push
je
iret
xchg
and
cld
fwait
mov
mov
sti
pop
or
les
ljmp
cmpsl
push
fwait
mov
push
hlt
orb
nop
mov
mov
cmp
out
imul
gs
push
mov
xchg
dec
into
lock
shll
fsub
or
mov
inc
ret
inc
aas
adc
icebp
das
fs
cmp
sbb
inc
adcl
pop
test
and
insb
iret
sbb
js
imul
or
fidivl
scas
pusha
adc
into
daa
icebp
daa
or
in
stc
push
orb
outsl
xor
out
repnz
scas
add
cmp
out
push
fbld
aas
test
mov
mov
outsl
int3
pop
decb
lret
add
repz
rcll
mov
push
jmp
xchg
jo
imul
mov
cmp
jmp
pop
lcall
inc
insl
lock
icebp
shrl
mov
aam
adcl
add
adc
inc
scas
jno
ja
push
fbld
aas
test
xchg
pop
movsb
lfs
outsl
aam
in
hlt
mov
and
xor
inc
out
push
fbld
aas
test
xchg
pop
movsb
lfs
outsl
aam
in
hlt
mov
mov
in
lods
stos
cmp
sbb
push
jecxz
xor
jmp
mov
fbld
inc
pusha
push
outsl
shl
jb
sub
sub
or
jo
add
out
cld
jecxz
sbb
outsb
pop
or
inc
jb
and
and
ja
mov
cmp
lds
ret
push
filds
pop
divl
mov
movsl
pusha
pop
jnp
aaa
mov
mov
dec
dec
jmp
into
nop
inc
adc
mov
mov
adc
dec
xchg
ret
insb
int3
imul
stos
lret
adc
push
dec
notb
lock
jmp
push
inc
mov
pop
and
jne
dec
dec
and
jnp
lods
or
sub
pop
pop
pop
jmp
xor
cmpsl
pop
jge
inc
xor
call
pop
fdiv
and
lods
pop
fstps
repnz
or
rclb
mov
sub
in
mov
std
jno
cli
mov
test
lahf
lods
nop
test
test
scas
mov
push
aas
jmp
add
or
es
aas
arpl
xchg
sub
pop
mov
test
xchg
in
call
push
movsb
sub
fdivr
sbb
aad
dec
sub
mov
sar
out
inc
mov
mov
mov
mov
loopne
ja
push
shlb
inc
xchg
into
in
adc
cmpb
in
jecxz
mov
fmuls
gs
push
repnz
cmp
push
push
xchg
dec
xchg
sahf
ja
test
sbb
test
movsl
add
out
sub
shll
in
fwait
sub
lret
notl
pop
xor
push
ljmp
insb
in
adc
push
popa
sbb
mov
push
pop
test
mov
mov
je
dec
out
frstor
int3
cmpl
sbb
shll
xchg
mov
xor
dec
push
xor
xorl
and
fcomp
push
xchg
xchg
les
sub
pop
fists
sub
enter
ja
inc
xchg
inc
push
rcr
jno
add
push
mov
rcll
outsl
sbb
jl
mov
movsl
sub
fildll
stc
jge
test
hlt
ret
mov
or
icebp
test
adc
fidivrs
mov
push
xlat
pop
cmp
xorb
ss
add
sbb
jecxz
cmp
xor
mov
or
sbb
push
push
ljmp
mov
insl
inc
outsl
fiadds
fmull
xlat
dec
sbb
push
outsl
jb
int
pop
push
xor
mov
jmp
jnp
lahf
cltd
ss
mov
sub
pop
xchg
mov
jmp
mov
arpl
xor
dec
add
jb
jp
sub
cwtl
cwtl
les
pop
cmpsb
sub
jg
add
push
mov
js
add
cmc
cmp
scas
imul
iret
and
or
lret
repz
ret
mov
pop
fildl
dec
call
arpl
adc
subl
xchg
rcrl
push
add
jge
adc
cmp
idivb
or
xchg
mov
cmp
sahf
es
lods
push
jae
cmp
daa
inc
fcmovne
leave
mov
inc
clc
popf
scas
js
inc
icebp
jae
add
fs
ret
xor
sti
nop
mov
inc
in
fisttpl
jb
xor
fisttpl
mov
lds
fdivrs
push
mov
ret
into
movsl
push
lret
fildl
jge
movsl
notb
xchg
inc
or
sub
cltd
insl
mov
sbb
insl
add
dec
adc
imul
stc
insl
aas
arpl
testb
aam
imul
shll
mov
dec
push
pop
enter
ud1
xchg
jg
imul
es
pop
addb
jmp
or
or
jb
mov
jbe
ret
jnp
or
jo
jno
and
inc
loopne
push
or
lret
xchg
mov
and
scas
mov
mov
xchg
hlt
sar
fisttps
dec
jmp
mov
dec
xlat
rcr
dec
or
fcomi
mov
xchg
pop
cmp
add
xor
inc
decl
std
stos
sub
sbb
in
lret
push
mov
cmpsl
movsb
pop
adc
enter
push
push
pushf
jmp
pop
stc
inc
jp
cwtl
test
pushl
lock
inc
rcrl
xchg
dec
adc
sti
popa
cmp
dec
pop
dec
insb
lock
sbb
sbb
gs
sbb
ljmp
popa
int3
ss
push
lods
loop
dec
jmp
sub
jbe
fsubrs
testl
enter
jnp
cmp
int
sbb
mov
icebp
shll
arpl
add
dec
mov
roll
out
aaa
daa
adc
cld
rorb
mov
sub
cmp
push
repnz
add
pop
inc
popf
sahf
jecxz
jne
jmp
sub
test
cwtl
loope
int3
ljmp
fimull
add
inc
lahf
repnz
pop
std
adc
test
les
iret
sbb
out
clc
je
stos
jno
xchg
repnz
pop
pop
push
jne
orl
clc
dec
out
movsl
test
pop
jb
mov
cmpsb
negl
mov
jno
sbb
and
or
add
mov
popf
adc
in
lods
addr16
aaa
sbb
xor
nop
es
pop
mov
xor
xchg
jb
scas
lds
hlt
push
mov
xchg
fadds
dec
in
inc
jns
xor
sub
adc
and
mov
add
mov
adc
out
adcb
psubq
mov
lods
decb
es
inc
xor
sbb
cmp
xchg
jle
in
and
sbb
decl
pop
pop
dec
fwait
pusha
scas
adc
xchg
das
xor
sahf
pusha
pop
loop
es
fadds
mov
movsb
mov
mov
adc
jl
push
push
movsb
aam
xor
and
and
push
nop
test
sbb
aam
and
inc
cmc
dec
adc
arpl
mov
cmpsl
or
mov
or
adc
mov
cwtl
rorb
fimuls
sarl
aas
pop
jns,pt
adc
cmp
mov
ret
fs
and
cld
call
notb
inc
push
sti
lds
xor
and
cmp
dec
mov
jg
sbb
jmp
test
mov
dec
pop
cmp
cmp
shll
stos
cli
pop
leave
add
sbb
test
xor
test
push
jae
shll
xlat
mov
lahf
shl
out
movzwl
jo
adc
mov
and
ja
cmp
add
pop
outsl
cmp
les
jp
jle
jb
dec
jns
xchg
fsubs
lret
fs
out
add
ret
jnp
xchg
xchg
imul
cmp
imul
cmpsl
mov
repnz
pop
pop
mov
out
vmovntps
mov
into
mov
mov
scas
cs
push
mov
cs
push
xlat
xor
xchg
inc
sbb
clc
cwtl
ss
enter
adc
push
insb
cmp
inc
imul
sbb
sub
clc
xchg
pop
rcrb
and
mov
fcoml
clc
pop
mov
iret
out
ds
pop
pop
add
dec
add
mov
test
cmp
mov
cmp
out
je
fs
cld
shlb
and
repnz
icebp
or
imul
call
pop
cwtl
addr16
cs
popa
loop
lcall
ljmp
inc
sbb
ljmp
aad
pushl
das
sbb
pop
lcall
push
dec
cmpsb
push
in
pop
mov
stc
cmp
arpl
mov
push
cwtl
icebp
ss
and
mov
cltd
and
fmull
shll
mov
dec
cli
inc
fnstcw
bound
fidivrs
xchg
pop
sti
push
fldcw
fidivs
xchg
cltd
rep
aas
xchg
sub
divb
push
shll
add
insb
stos
clc
hlt
movsb
rorb
mov
push
sbb
test
ja
pop
bound
cmp
jnp
xor
mov
mov
scas
fildl
cmp
addl
cli
sahf
loopne
adc
mov
cmp
or
ds
inc
cmp
jecxz
xor
scas
sub
addr16
jmp
sbb
mov
ss
cmp
and
push
pop
cmp
ret
pusha
sbb
pop
cli
stos
or
adc
inc
orb
mov
pushf
pop
bound
jle
dec
dec
cmp
push
pop
fisubrs
ljmp
cmp
sarb
addb
lret
pop
jns
outsb
pusha
ficoms
dec
and
xchg
aad
nop
push
lahf
cld
push
pop
pop
cmc
imul
cld
scas
loop
dec
and
push
mov
mov
jnp
scas
xchg
clc
outsl
out
pop
rclb
inc
push
cmp
mov
ficomps
xchg
xor
enter
mov
sbb
test
or
pushf
xchg
xor
pop
push
lret
cltd
stos
negl
or
mov
push
arpl
shrl
outsb
ss
out
mov
in
sub
add
aad
notb
and
clc
js
xor
frstor
add
push
int3
mov
fistl
jno
mov
sub
xor
jecxz
aad
xlat
jmp
fwait
mov
testb
xchg
jb
cwtl
sub
lods
out
xlat
int
stc
dec
repz
inc
gs
push
xchg
pushf
bound
xor
or
jno
pop
addr16
in
sbb
inc
fnstsw
lret
pop
les
call
mov
pop
repnz
pop
jmp
ja
or
fcomps
xchg
or
imul
push
cli
ds
lods
sbb
rolb
xchg
movsl
outsl
add
sti
xor
xchg
dec
pop
aas
pop
outsb
mov
mov
js
ss
push
lahf
inc
jns
push
outsl
test
mov
dec
jecxz
rol
and
in
test
mov
leave
inc
sbb
dec
cmpsl
jmp
or
rorl
jo
shlb
adc
push
lods
cmp
aad
sub
stos
sub
and
fisubl
mov
mov
ret
loope
jmp
mov
lods
xchg
inc
bound
push
mull
xchg
dec
push
clts
xchg
addr16
jne
sub
movaps
aaa
cmpsl
xor
add
addr16
mov
fisubs
dec
mov
movsl
pop
das
data16
add
leave
orl
mov
jge
nop
push
xchg
adc
jns
and
shr
mov
mov
stos
out
mov
pop
adc
daa
ss
out
pop
pop
push
jle
adc
push
jp
cmp
sub
leave
push
jnp
sub
mov
inc
jb
xchg
jecxz
lods
movsl
das
sahf
push
mov
jg
or
cli
out
sbb
pop
jecxz
xchg
notl
rolb
mov
adc
loopne
fs
mov
dec
mov
mov
cmp
clc
ljmp
sub
fcompl
fsubs
lock
sti
xchg
sub
imul
mov
sub
sbb
jnp
sti
xor
dec
out
lret
mov
nop
jbe
mov
fs
jg
pop
adc
aaa
adc
or
adc
pop
dec
xchg
dec
bound
imulb
sub
ljmp
push
sbb
shrl
push
pop
and
jg
sbb
stos
pop
int
ljmp
sub
cmpsl
unpckhps
adc
sahf
lahf
mov
out
outsl
imul
or
lods
ljmp
int3
add
pop
ja
ss
out
xchg
in
aad
cs
cmp
push
es
popf
xlat
pop
fs
adc
sbbb
jno
test
fs
int
adc
into
inc
and
xor
jbe
dec
pop
fmull
movsl
pop
bound
les
xor
int3
dec
in
sub
jb
mov
enter
pop
or
push
mov
call
add
inc
stos
mov
push
lock
cmp
shrb
jo
popf
scas
jp
stos
xchg
mov
xor
aaa
and
push
or
jo
fwait
ja
lcall
jge
xorl
das
push
push
push
pusha
add
imul
aaa
icebp
gs
loope
pop
orl
sbb
addr16
jb
add
xchg
jbe
sbb
lcall
inc
push
insl
fiaddl
cmc
loope
adc
cmpsl
in
inc
mov
cs
into
in
mov
repnz
aam
out
lret
stos
add
jns
fwait
xor
aaa
test
insl
fwait
imul
pop
repz
cmp
subl
in
pop
jno
pop
idivb
pop
pop
sub
inc
andl
icebp
dec
xor
iret
lock
rorb
sub
pop
push
loopw
sahf
pop
mov
jecxz
stos
out
das
stos
aas
pop
into
or
push
int
add
dec
roll
or
mov
push
cmpsb
pop
cmp
jbe
or
repz
adc
dec
sti
stc
push
repnz
adc
loope
stos
lcall
xchg
push
dec
add
insl
aad
jne
fcmovnu
cld
pop
shlb
rorl
fidivs
lock
popf
cmp
add
je
jnp
rolb
cmp
test
jge
data16
shrb
stc
out
add
dec
xorb
cwtl
fwait
mov
xor
mov
dec
pop
out
jo
push
dec
inc
dec
adc
jae
ds
scas
test
jg
mov
shl
rorl
outsl
xor
mov
push
test
pop
mov
pushf
push
xchg
int
ret
pop
std
leave
lea
imul
or
scas
lcall
and
xor
jge
imul
mov
jb
push
jg
cwtl
ret
int
cmpsb
mov
xlat
bound
insb
pop
cld
dec
loope
add
mov
aam
or
mov
adc
outsl
push
shlb
aaa
lcall
scas
dec
jecxz
jno
push
sbb
pop
fs
mov
aas
into
mov
pop
cld
jmp
stos
jbe
jg
pop
aad
out
and
xor
in
lock
add
in
add
mov
push
dec
inc
mov
pop
out
sbbb
mov
std
loopne
jl
fnstsw
popa
jge
xor
or
add
divl
and
jmp
inc
mov
push
and
and
cmpsl
mov
mov
push
shll
lcall
lock
or
mov
aas
insb
adc
mov
nop
jmp
xor
xor
repnz
clc
ss
push
pop
shll
jl
inc
lcall
jl
push
addr16
jnp
and
pop
sahf
xchg
mull
hlt
mov
rep
add
add
aas
jbe
xor
dec
and
mov
in
outsl
sbb
sbb
cmp
sbb
mov
cmp
popl
jae
pop
lods
push
push
adc
loop
fmull
nop
stc
jne
inc
or
and
dec
push
ret
lcall
sub
mov
incl
mov
sub
jo
out
rolb
sub
ret
mov
jge
cmpb
push
ja
jmp
lret
and
sbb
fsubs
add
sub
xor
fldenv
lods
mov
push
test
shrl
sbb
ror
aam
rcrl
ret
stos
xchg
hlt
aad
cmc
lret
cmpsl
mov
in
stos
dec
movsb
ss
daa
mov
sbb
jno
shl
add
add
ljmp
and
and
add
ds
sbb
jmp
add
cli
add
jb
clc
dec
or
or
pop
lock
jecxz
lods
jnp
mov
mov
push
imul
pop
test
cmc
dec
or
push
cmpsl
out
mov
cmpsb
jne
sub
aas
lock
mov
mov
iret
adc
mov
pusha
cmpsb
pusha
pop
aas
or
fs
rcll
loope
fimull
mov
lods
jecxz
scas
popa
into
xchg
icebp
mov
xchg
jecxz
mov
adc
jmp
rclb
xchg
pop
imul
aas
inc
push
sbb
lret
in
imul
xor
aam
ffree
into
or
shlb
mov
mov
fs
inc
adc
lds
jmp
fmuls
mov
jae
ja
dec
jns
cmp
adc
sub
or
jle
lret
or
imulb
shlb
mov
insl
sub
ljmp
repnz
movsl
ret
lahf
iret
lret
fidivrl
dec
icebp
fnsave
hlt
push
jnp
xor
sbb
fidivrl
jb
mov
iret
xchg
and
mov
xchg
and
cmp
jnp
lods
dec
arpl
stos
xchg
loope
inc
push
data16
adc
addl
movsb
pushl
jae
loope
push
push
sbb
idivl
scas
es
sub
outsb
dec
aam
dec
lret
dec
iret
bound
je
int3
test
sahf
mov
mov
fiaddl
xchg
pop
xor
aam
jecxz
shll
pop
mov
jmp
and
or
cmp
xchg
movsl
loop
mov
mov
adcb
inc
push
icebp
lods
loopne
xor
out
mov
repnz
subb
stc
add
cwtl
into
sbb
das
inc
or
insb
int3
std
and
adc
jo
jmp
lahf
pop
pop
push
xchg
jge
imul
out
or
mov
jb
popf
adc
call
ljmp
xor
add
or
mov
jmp
outsl
stos
popa
inc
mov
inc
mov
aad
mov
pop
ret
popf
popa
sub
cmc
aas
in
pop
add
lods
daa
dec
push
lahf
push
and
cs
or
jecxz
push
inc
dec
sbb
inc
xchg
lea
es
sbbl
add
xor
cmpsb
push
cltd
mov
insl
sahf
scas
and
repnz
insl
sahf
mov
push
cmp
ss
adc
xchg
mov
les
cmpsl
xchg
jp
fidivrl
test
mov
adc
sarb
jns
or
repnz
js
push
sbb
cmp
ljmp
xor
int3
mov
cli
mov
and
fwait
rcl
jle
shrb
scas
jno
and
dec
insb
jne
in
lret
jae
cwtl
jmp
jb
ja
cmc
inc
jbe
das
repnz
cmp
es
cmp
mov
shll
clc
and
push
adc
jecxz
sbb
in
cmp
mov
xlat
cmp
xchg
jne
test
and
out
inc
sahf
push
in
mov
xor
adc
xlat
int3
cltd
xor
cmp
inc
mov
xchg
ss
inc
jns
pop
jg
inc
jnp
js
gs
js
pop
mov
jo
pop
xlat
xchg
cmp
shlb
std
in
arpl
mov
xor
mov
nop
mov
pushf
fmulp
push
cmp
push
out
sub
jp
push
xchg
arpl
clc
xchg
sub
mov
iret
pop
xor
and
roll
xchg
xchg
rclb
pop
jecxz
ficompl
pop
lahf
into
sti
inc
mov
xchg
pop
sub
jmp
insl
into
xchg
sub
xor
push
sbb
popf
call
xor
mov
lahf
pop
pushf
cmpsl
adc
and
push
inc
add
ds
add
cmpsb
mov
or
leave
mov
push
jl,pt
and
cmc
stos
mov
xchg
sbbb
aas
dec
cmc
sub
outsl
pop
stc
inc
repnz
ljmp
fstl
out
mov
test
movsb
daa
cld
aad
cmp
sti
mov
jae
incb
cmp
sub
push
cli
push
popa
adc
jl
xor
mov
ljmp
push
jb
pop
ljmp
adc
and
mov
lret
adc
xor
and
std
mov
ljmp
mov
fidivs
stc
int3
test
popf
call
test
dec
cmp
test
mov
mov
jno
arpl
in
or
lds
sbb
lds
repnz
repnz
pop
into
ret
insb
jo
xchg
jnp
add
push
jo
filds
mov
and
xor
inc
out
push
fbld
aas
test
xchg
pop
movsb
lfs
outsl
aam
in
hlt
mov
and
xor
inc
out
push
fbld
aas
test
xchg
pop
movsb
lfs
outsl
aam
in
hlt
mov
and
xor
inc
out
push
fbld
aas
test
xchg
pop
movsb
cmpxchg
outsl
aam
loopne
lock
and
push
fbld
aas
test
ds
movnti
dec
out
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
je
mov
icebp
mov
jle
xchg
pop
subl
or
pop
add
add
add
add
add
add
add
pusha
add
or
add
stos
add
add
add
jo
roll
add
lret
add
add
add
add
dec
add
add
sub
roll
add
add
add
test
cmp
nop
add
inc
add
add
add
jl
incl
mov
add
adc
ret
add
add
add
add
aaa
add
fiadds
sub
add
dec
add
add
add
add
add
add
or
inc
add
add
add
push
add
mov
push
add
add
add
add
add
inc
add
add
add
ja
adc
jle
sbb
mov
jl
jae
dec
add
add
add
add
inc
add
add
add
add
mov
mov
or
add
jno
call
add
add
mov
adc
xchg
add
dec
add
roll
add
add
add
add
add
imul
roll
add
add
out
dec
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
and
xchg
add
add
add
add
add
add
lahf
add
add
add
mov
add
add
sbb
add
enter
push
add
add
add
add
out
add
add
add
or
xor
or
popa
add
add
sbb
pusha
add
ja
adc
add
add
add
add
add
add
add
add
add
repz
add
add
add
add
add
add
add
add
or
add
add
add
add
add
xor
popa
add
dec
add
add
lahf
add
add
roll
add
add
add
cmp
lret
add
cltd
add
add
flds
movsl
add
add
add
jo
ljmp
add
out
add
add
add
add
add
add
test
xchg
roll
add
push
add
add
add
add
adc
add
add
dec
add
add
add
add
roll
add
add
mov
mov
add
add
or
jge
jg
mov
add
push
add
add
add
add
add
push
add
add
add
add
mov
scas
add
add
add
adc
mov
push
add
roll
add
add
add
add
add
push
add
add
add
add
add
add
and
cmp
mov
adc
add
add
mov
add
add
add
add
add
mov
or
add
jae
or
add
mov
add
add
add
dec
add
add
add
add
add
add
mov
add
add
add
add
add
push
dec
add
add
add
into
add
lea
rolb
sub
int3
add
add
jle
xchg
add
add
add
pop
add
add
out
push
cmp
mov
stc
stos
adc
mov
xchg
fistl
mov
push
fs
pop
mov
sbb
adcl
pop
bound
ds
adc
in
push
inc
mov
fisubrl
xchg
adc
ja
scas
int
shlb
test
mov
fldcw
inc
pop
add
or
popf
push
push
lea
leave
repnz
mov
jmp
data16
ret
or
mov
test
pop
add
adc
pop
nop
addr16
adcb
call
mov
mov
sbb
pop
mov
dec
pop
cltd
les
xchg
lods
dec
lea
ret
lahf
mov
daa
dec
outsb
in
es
sub
jmp
test
dec
push
fcoms
and
sbb
push
icebp
xchg
jl
jno
dec
or
push
or
cmp
repnz
jge
cld
ja
sbb
bound
sub
push
popf
lret
push
pop
movsl
fists
xchg
fildll
scas
daa
outsb
cmp
cmpsb
jmp
mov
mov
mov
xor
jbe
cli
xor
add
cmp
shll
xor
sbb
iret
jno
lret
pop
rcl
sahf
push
sbb
or
dec
adc
inc
iret
jl
mov
aas
pop
faddl
cmp
ljmp
das
xchg
inc
inc
sub
les
mov
cvtps2pd
test
les
push
jns
negl
fnstenv
test
movsl
in
cwtl
loop
ds
mov
inc
sarl
mov
imul
fsubl
jnp
mov
nop
and
in
addr16
cltd
leave
pop
dec
or
or
je
js
lahf
out
cli
mov
mov
mov
in
fimull
ret
and
dec
popf
lret
push
cmpsb
negb
and
sub
pop
cwtl
daa
scas
roll
sub
addl
pop
jo
mov
mov
test
push
adc
mov
loope
lahf
das
lods
pop
scas
addr16
jbe
jno
jo
sahf
push
push
lods
imul
add
sub
sahf
mov
aaa
decl
arpl
not
movsb
sbb
int
push
cmp
aaa
negb
cmp
pusha
jb
add
fdivrl
push
mov
orl
pop
andl
cmp
sub
stos
mov
rorl
int3
or
ja
test
rcrl
es
rorb
and
addb
lret
ret
sub
sub
jae
mov
std
sbb
lock
inc
dec
mov
in
or
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
