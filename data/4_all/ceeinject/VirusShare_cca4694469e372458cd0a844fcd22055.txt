call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
enter
jmp
sti
pop
mov
push
mov
jnp
imul
or
sbb
sub
sub
scas
das
fstpt
xchg
sti
pop
mov
jg
dec
mov
mov
dec
rcrl
sub
cmp
jae
sub
jns
and
pop
sti
aaa
mov
mov
pushf
add
push
in
pusha
mov
addr16
jmp
xchg
jp
pusha
fwait
xchg
nop
sahf
or
push
je
aaa
sbb
das
xor
xchg
daa
sub
cld
imul
movsl
jp
hlt
es
mov
out
jo
iret
hlt
cli
inc
mov
xor
push
in
out
inc
sbb
mov
scas
pop
scas
jle
jnp
sbb
add
sbb
sbb
das
mov
push
or
pop
je
fwait
dec
push
mov
pop
out
jo
sahf
hlt
cli
sbb
xor
mov
lret
repnz
pop
adc
mov
mov
imul
dec
test
ljmp
inc
shr
add
mov
pop
js
pop
out
loop
cmc
xchg
cmp
jmp
sti
pop
outsl
outsl
jecxz
stos
dec
sbb
pop
sbb
rcll
adc
xlat
cmp
mov
arpl
adc
cmp
iret
push
sub
cld
jns
jne
inc
mov
mov
jae
cmp
out
insb
sub
or
imul
scas
jb
je
inc
stos
jp
cmpsl
pop
mov
mov
jae
and
pop
dec
scas
pop
mov
or
sbb
sub
cmp
lret
das
fstpt
jmp
sti
pop
mov
jg
dec
mov
mov
or
sbb
sub
cmp
lret
das
jge
sub
icebp
inc
or
pusha
and
test
or
push
or
xchg
popf
jbe
not
inc
sub
sub
jecxz
cmp
mov
mov
out
pop
addr16
sti
movsl
jecxz
cmc
insl
out
mov
popa
idivl
call
xlat
out
imulb
push
lahf
arpl
daa
cli
and
mov
xchg
sbb
jmp
test
sub
test
lods
or
js
mov
cmc
xchg
icebp
dec
add
iret
jmp
sub
dec
push
push
fcmovnb
cmp
xchg
cmp
addr16
xchg
xchg
aam
loope
mov
push
cmp
and
xchg
in
xchg
std
pop
ret
mov
aam
mov
push
bound
and
push
test
jae
sbb
cld
test
push
add
loope
jbe
cmp
gs
shll
mov
mov
adcw
lahf
push
cmp
jae
xor
mov
fcmovnb
data16
xchg
cmc
ja
or
in
movq
enter
out
movsl
std
rcr
adc
aad
mov
movsl
hlt
mov
mov
repnz
add
dec
fwait
xchg
enter
sub
push
fdivrs
scas
jecxz
mov
or
ss
push
jne
fidivrs
xor
scas
mov
push
ficomps
mov
inc
mov
mov
mov
lret
shl
xor
fimuls
sbb
out
sub
and
aaa
out
and
jl
or
or
sti
or
xchg
push
iret
sub
data16
test
scas
dec
popa
mov
dec
pop
pop
xchg
stos
mov
jmp
mov
or
addr16
fdivrl
push
pop
xor
sub
outsl
add
rcrb
xchg
stos
sti
orb
xchg
mov
sub
push
fsubrp
pushf
push
fs
ficoml
in
ja
jnp
sub
push
dec
lret
sub
add
cmpsl
fmulp
imul
jo
sbb
sbb
dec
or
test
sub
cmp
ucomiss
popf
test
in
loope
insb
es
mov
imul
xor
xor
push
pop
add
add
push
mov
mov
nop
aam
inc
cwtl
pop
call
stc
dec
jmp
sahf
pop
sub
xchg
adcb
aaa
addr16
inc
xor
sub
dec
mov
jbe
or
xchg
aam
cmp
loope
into
mov
fbld
jg
cmpsl
idivl
or
push
inc
in
hlt
pop
idivl
loop
sub
push
mov
jg
sub
mov
rorb
inc
cmp
test
int
imul
stos
je
fsubp
aad
repnz
ficoms
ja
addr16
mov
popf
pop
imul
loopne
outsb
mov
mov
dec
xchg
test
enter
aaa
add
mov
or
sub
daa
pop
xor
outsl
push
jecxz
jp
or
adc
imul
adc
fisttpll
or
and
int
push
push
popf
dec
nop
jmp
lods
adc
idivb
mov
test
les
jl
sbb
xchg
fbld
jl
xchg
mov
fwait
andl
pop
fs
jl
add
iret
xchg
stos
out
aam
push
jp
jle
inc
mov
lods
lret
outsb
inc
icebp
fisubrs
adc
sahf
push
pop
pop
nop
out
cltd
sub
jle
pop
xchg
add
jae
gs
mov
dec
je
inc
mov
xchg
test
fadd
ja
rol
pop
inc
enter
out
xchg
add
imul
fs
outsl
pusha
addb
and
fisubs
push
xor
mov
mov
popf
cmpsb
testl
popl
inc
pop
add
mov
adc
fsub
adc
decl
dec
xchg
repnz
outsb
js
xchg
sbb
xchg
dec
pop
orb
jnp
pop
add
sahf
fsubr
or
enter
cmp
push
or
mov
inc
adc
dec
int
inc
sbb
std
cmpsl
adc
adc
ljmp
call
fucom
divb
jns
inc
rcrb
dec
test
les
imull
out
daa
aas
xor
cmp
inc
fsubrl
ret
inc
and
sub
jnp
das
fs
popa
xchg
das
dec
add
fstpt
inc
in
stos
rsqrtps
xor
pop
mov
jb
divb
gs
pop
popf
mov
mov
mov
mov
pop
push
xor
add
push
jne
nop
push
dec
popa
push
push
jno
cmp
dec
mov
dec
sti
mov
jecxz
in
in
pop
inc
stos
js
int
mov
ss
cmp
hlt
jno
cmp
insb
pop
jno
and
xchg
cli
mov
inc
in
jns
mov
lds
das
pop
leave
aam
mov
out
sub
and
aaa
mov
jno
faddp
dec
dec
push
xchg
jae
stc
xor
fdivrp
push
icebp
mov
sahf
in
lods
dec
cli
loopne
dec
sub
mov
adc
imul
sub
arpl
lock
ret
sbb
fcoms
ds
pushf
cmp
sbb
cld
dec
sbb
adc
mov
lock
xchg
in
int3
add
cmpsb
or
jp
dec
outsb
fdivs
xchg
out
insb
sbb
cmp
xchg
xor
xor
sub
jno
and
adc
sahf
push
insl
rorl
inc
inc
lret
push
sti
mov
or
xor
mov
repnz
ja
lret
mov
lcall
rcll
push
fdiv
sbb
out
out
adcl
clc
inc
sbb
jmp
dec
popa
mov
mov
mov
mov
leave
pop
jecxz
cld
sbb
sub
xlat
xor
sub
inc
adc
div
push
cwtl
jnp
adc
inc
les
lahf
iret
ljmp
or
out
dec
xchg
stos
xchg
arpl
lock
icebp
popf
lods
cwtl
adc
inc
aas
cmp
stos
pop
stos
mov
repnz
add
cmp
testb
pop
test
jmp
fnstcw
das
jecxz
in
mov
push
outsl
dec
pop
in
sub
fdivl
mov
jmp
mul
adc
test
or
lock
stc
fisttpll
jp
mov
popf
sub
je
out
pop
sbb
xchg
rcl
jg
xor
mov
popl
cmp
xchg
mov
jnp
inc
aas
repnz
stos
mov
inc
mov
cmp
sub
iret
pop
sbb
lret
rcr
jb
and
cmpsl
push
insb
sub
pop
adc
mov
pushf
pop
movsl
les
out
gs
cwtl
fcoms
comiss
inc
cs
lret
les
call
loopne
jg
es
jp
mov
jnp
xchg
adc
cmc
shlb
in
push
pop
mov
adc
jmp
and
fldcw
mov
cmp
sub
jle
imul
mov
cwtl
test
xchg
ja
sbb
jb
and
ret
fcmove
jmp
and
mov
lock
mov
dec
jne
mov
dec
fmul
xchg
jp
mov
mov
sbb
or
sub
loope
rorb
fldt
mov
aas
xchg
push
and
or
sti
lds
adc
add
sub
es
or
fld
es
nop
pop
sub
ret
jle,pn
cmp
mov
aam
push
test
and
dec
push
jmp
add
sub
iret
lahf
in
pop
dec
call
mov
xchg
dec
xor
adc
push
jl
movsb
jb
inc
test
jo
cmp
or
mov
push
and
shlb
or
inc
int
xchg
shl
mov
data16
mov
cmpb
xor
out
cwtl
mov
xchg
or
sbb
xchg
push
arpl
aad
push
sub
sbb
mov
xchg
orl
xor
repnz
loope
test
imul
mulb
clc
daa
inc
and
mov
xchg
aam
dec
adc
adc
aam
aaa
int
loope
xchg
ja
sub
mov
pushf
adc
or
aas
sahf
sub
rcrl
cmp
xlat
pop
cmpsl
add
nop
js
mov
inc
pop
add
icebp
hlt
jmp
insl
fmul
mov
mov
push
je
xchg
mov
mov
inc
popa
imul
fwait
mov
int3
test
mov
and
mov
loopne
aaa
dec
out
rcr
in
subb
mov
sbb
push
push
jg
pop
jns
push
imul
jle
mov
sub
sbb
mov
fsubrs
std
decb
mov
adc
in
and
stos
push
ljmp
or
xchg
ja
enter
out
cwtl
push
loopne
sub
inc
lea
mov
fstl
and
add
xor
xchg
sub
push
mov
sti
divl
dec
mov
push
sub
test
das
sbb
mov
add
mov
inc
movsl
rcrl
repz
mov
xchg
push
mov
test
xchg
lods
in
mov
cltd
mov
jp
jae
ds
xchg
push
rclb
jae
jbe
rcll
sbb
and
aam
sbb
xchg
addl
fstpt
cmpsl
ja
xor
mov
clc
lods
jg
push
test
leave
sbb
hlt
or
mov
pop
mov
rol
lods
cmpsb
ret
jmp
out
ret
xor
outsl
int3
test
dec
mov
into
jno
and
into
mov
pop
mov
je
jno
cwtl
cli
cmp
pop
mov
inc
adc
push
bound
xor
fwait
add
add
mov
cmpsl
mov
xchg
sub
incb
xchg
pop
jbe
xor
mov
xor
add
aam
rolb
mov
mov
data16
leave
mov
sub
pushl
push
icebp
mov
cwtl
leave
movsl
out
and
dec
pop
jno
push
xchg
fcomps
mov
pushf
sub
cli
cltd
mov
xor
adc
aad
pop
adc
jge
and
sub
cmpsl
pusha
mov
cmpsb
sub
cmpsb
mov
jmp
cltd
inc
adc
pop
jmp
scas
jl
dec
ret
pop
into
pushf
sub
lods
mov
xor
sarb
cmpl
lods
lock
cld
mov
adc
js
fwait
in
iret
pusha
pop
inc
cmpsb
pushf
xor
movb
add
xchg
add
push
nop
pushf
adc
mov
notl
mov
adc
test
add
stos
inc
mov
bound
inc
and
mov
fs
and
fnsave
ss
loop
loop
sbb
jle
adc
test
scas
mov
out
ljmp
stc
sbb
push
pop
popf
into
jmp
pop
mov
cmpsl
pusha
inc
mov
leave
rcll
xchg
in
sti
in
or
xchg
cmpsl
add
xor
sahf
xchg
cmp
adc
rcll
xor
lret
add
test
sarb
popf
push
out
icebp
les
add
inc
mov
jnp
pop
mov
or
mov
mov
or
add
sbb
mov
cmpsb
adc
aaa
mov
push
xchg
push
sbb
push
andl
pop
xorb
pop
inc
in
iret
in
popa
xchg
in
mov
test
dec
iret
rorl
xor
cmc
test
sbb
dec
cwtl
push
mov
out
call
out
dec
jb
ret
mov
enter
testl
pop
adc
pcmpeqd
jl
add
sbb
fistpl
mov
paddq
lahf
xor
andl
xchg
mov
lods
pop
imul
cmpsb
inc
fnstenv
rcr
or
fwait
jnp
je
push
lahf
or
mov
push
sahf
gs
test
jg
mov
movd
fsubl
in
inc
into
dec
fcompl
push
or
out
adc
add
cmp
insb
iret
xorl
loop
scas
jle
or
xchg
xchg
jnp
fiaddl
adc
xchg
jmp
mov
sub
and
pop
test
inc
negb
pop
push
es
fcomp
int
ret
nop
inc
mov
sbb
subb
arpl
testb
push
data16
pop
repz
andl
dec
pop
mov
shl
sbb
jae
pop
psubusb
lds
cli
sbb
mov
out
clc
dec
cli
idivl
repz
xchg
loopne
imul
aas
add
sbbl
pop
shll
rorl
jp
jg
mov
mov
mov
xlat
xor
imul
cmp
jle
xchg
dec
add
sti
add
scas
arpl
clc
inc
jae
mov
outsb
lcall
adc
push
sbb
cmp
xor
or
and
sti
mov
testb
or
xchg
test
xchg
jno
add
adc
loope
push
adc
mov
or
pop
jmp
pop
into
inc
push
xor
adc
mov
lods
faddp
daa
push
add
jmp
loopne
loopne
xor
pop
xor
or
ljmp
fistps
dec
dec
mov
xchg
mov
and
decl
mov
je
push
mov
stos
hlt
out
shr
sub
popf
pushl
bound
mov
sbb
mov
adc
mov
inc
mov
fcoms
inc
mov
mov
sbb
in
shrl
clc
push
mov
pushf
pop
scas
fs
jmp
xor
fs
or
and
shlb
addr16
add
bound
fucomip
sub
and
movsl
cmc
adc
push
mov
popf
adc
lcall
add
add
fmull
xchg
adcb
roll
enter
test
jge
pop
mov
dec
in
xchg
outsl
bound
stos
cmp
test
insb
rorl
jo
ja
push
clc
imul
sarl
cltd
jecxz
mov
add
lret
jg
loopne
sti
dec
jp
pop
imul
fbstp
jae
push
mov
push
mov
int
xlat
int3
idiv
inc
movsl
mov
or
xor
popa
sub
mov
cmpl
lcall
xchg
adc
sub
and
repnz
out
mov
imull
adc
ret
jge
cmc
nop
cs
jl
xchg
xchg
add
mov
ss
cmp
sbb
jl
aaa
jp
out
push
mov
arpl
mov
sarb
mov
in
inc
ror
inc
xor
decl
fdivrs
jb
outsb
mov
pop
adc
or
jge
leave
andb
pop
sub
xchg
adc
inc
xor
push
fcomps
cmpl
jge
test
or
adc
mov
inc
fs
xchg
hlt
leave
push
imul
and
test
subl
loopne
bound
or
sbb
fistpll
or
andb
add
cmp
xor
cmp
out
andb
jmp
fcomi
out
mov
mov
dec
and
pop
mov
repnz
mov
ja
cmpsl
xor
call
jns
pop
cwtl
jmp
andb
lods
fs
mov
add
jne
jno
push
rcl
inc
ljmp
xlat
cwtl
stc
int3
aaa
jns
adc
lods
sub
add
dec
and
repz
ficomps
push
stos
loopne
sub
jl
and
cs
ljmp
enter
data16
data16
xchg
adc
jo
mov
out
lret
ljmp
out
and
icebp
push
lock
lea
add
xlat
jb
pop
lcall
rcrb
rcrb
or
mov
push
mov
inc
fistpl
movsb
popa
jno
xchg
cld
mov
clc
sarl
pusha
in
cmp
testb
fcomps
adc
dec
fmull
loop
adc
adc
push
inc
add
or
andl
scas
testb
mov
dec
pop
and
or
mov
mov
testl
out
mov
pushf
outsb
cmp
leave
imull
fsts
test
push
mov
shr
icebp
fistpll
or
fiaddl
sub
mov
push
sti
fildl
push
fwait
jbe
shl
mov
dec
add
lods
nop
inc
fsubrs
out
xchg
sub
add
xor
push
test
jno
xlat
rorl
sbb
or
xchg
popa
sahf
jbe
insl
aaa
or
icebp
negb
sub
dec
jp
or
je
mov
test
dec
mov
fisubs
sub
or
push
int
and
push
scas
xchg
mov
and
test
out
push
add
inc
mov
pushf
cmc
movsb
popa
inc
in
or
mov
inc
sub
push
mov
mov
mov
xchg
adc
pushw
aad
iret
push
push
push
cmp
sub
xor
dec
sbb
dec
cmc
cli
lret
or
icebp
mov
adc
push
push
cmpsb
stos
cs
mov
mov
push
aas
scas
iret
xchg
aaa
jno
mov
dec
mov
out
bound
pop
sbb
out
cmp
add
cmpsl
addl
daa
push
or
mov
sahf
mov
ds
adc
and
mov
int3
ss
lcall
pop
je
xchg
adc
dec
sub
lret
fwait
lods
adc
sbbl
mov
add
xor
pop
lock
xor
les
les
push
mov
stc
pop
jecxz
das
push
jnp
out
fcmovnb
arpl
aaa
adc
pop
enter
xor
jne
por
ljmp
roll
aam
popf
inc
in
adc
cmp
cmp
clc
daa
xchg
test
out
jno
aad
imul
mov
enter
out
test
cmp
loope
ljmp
mov
pop
mov
shufps
loopne
xchg
sti
sub
sub
iret
push
lock
cmp
jg
fs
jl
clc
cmp
mov
xchg
adc
add
cmp
lret
or
outsl
leave
and
dec
or
fs
add
inc
pop
add
cmp
dec
loop
sarb
or
mov
rcrl
push
sub
cli
hlt
inc
fimuls
in
rorb
xorb
mov
or
pop
lock
pop
cmp
xchg
lds
xrstors
mov
xchg
add
test
pop
rcrb
in
mov
stos
pushf
repnz
scas
jb
dec
call
imul
pop
mov
adc
rcrl
sbb
cmp
dec
cmp
xchg
mov
insb
and
lea
ljmp
sub
lods
ja
jle
fldenv
leave
pusha
adc
mov
loope
scas
test
sbb
jbe
frstor
test
popa
aad
mov
cmc
sbb
push
sarb
sub
xchg
dec
dec
ficompl
nop
scas
and
jno
sbb
mov
sbb
enter
pop
cmp
lret
or
loop
mov
into
or
fcompl
pop
adc
dec
add
xchg
xchg
or
call
fwait
arpl
xchg
dec
pop
int
movl
sarl
mov
imul
fidivrl
push
shll
cmp
out
loopne
imul
jmp
stc
test
and
popf
lahf
leave
xchg
std
cmp
sub
mov
sbb
aam
nop
nop
inc
fisttpl
dec
test
mov
push
xchg
push
fidivl
movsb
std
and
pop
testl
sub
adc
lret
and
xor
pop
out
in
and
popa
es
and
cmp
cltd
out
testl
sbb
jge
aas
lahf
shr
and
add
test
xchg
dec
pop
sbb
sub
adc
test
xchg
adc
pop
faddl
test
call
aas
mov
divl
cmp
das
aas
test
xor
mov
scas
lret
cmp
add
mov
pop
sub
jle
addr16
xor
es
and
test
out
cmpsb
stos
das
popa
adc
push
clc
push
jo
mov
push
jmp
pop
cli
cltd
xchg
aad
push
mov
outsb
mulb
test
call
in
push
dec
je
rolb
push
sub
test
daa
repnz
sbbb
clc
inc
sbb
aas
lods
or
pop
mov
jg
dec
mov
mov
or
sbb
sub
cmp
lret
das
fstpt
jmp
sti
pop
mov
jg
dec
mov
mov
or
sbb
sub
cmp
lret
sub
xor
outsl
fwait
adc
dec
jnp
dec
scas
pop
mov
or
or
sub
sarl
xchg
mov
fistpl
outsl
mov
iret
cmp
rorl
xchg
mov
cmpsl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
in
or
jne
or
jb
push
aas
cmp
fwait
xlat
mov
mov
xchg
leave
movsl
sti
mov
inc
sbb
cmp
add
jnp
pop
lds
cmc
stos
test
jmp
mov
gs
jne
add
xchg
xor
call
test
jmp
sbb
or
into
addr16
xor
jns
jmp
daa
push
inc
dec
mov
stos
sbb
pop
adc
sub
pop
fistpl
rorl
mov
repz
in
mov
and
out
jnp
rorb
ss
test
push
lret
cmp
sbb
pop
ljmp
fs
fildl
or
ficoml
mov
loopne
mov
fnstenv
imul
fstpl
aad
adc
adc
fldt
adc
sbb
enter
xchg
sbbb
mov
fcmovb
xor
sti
mov
xchg
push
sti
gs
adc
jmp
sbb
cmc
jecxz
notl
test
dec
or
js
add
dec
adc
into
xchg
iret
mov
add
mov
pop
and
pop
xor
pusha
xor
js
adc
mov
cwtl
fdivp
int3
jb
lock
lcall
and
dec
inc
aas
adc
imul
aad
in
cmc
stos
test
xchg
lret
movsl
sti
mov
inc
sbb
cmp
add
jnp
imul
aad
in
cmc
stos
test
xchg
lret
movsl
sti
mov
inc
sbb
clc
cwtl
or
aad
out
jne
stos
and
push
jecxz
fstpl
fistpl
enter
and
jmp
in
cmp
and
es
or
push
lods
mov
das
ja
sub
mov
shlb
sbb
inc
xorb
pop
sbb
xor
es
cmc
jp
mov
dec
shrl
dec
jns
jmp
sbb
fadds
xchg
adc
setl
scas
fmul
jmp
xchg
lea
lods
mov
xor
ss
leave
out
jg
inc
sbb
sub
test
gs
ljmp
into
and
imul
mov
sub
adcl
jl
test
pop
xlat
enter
fdivs
stos
popa
mov
xchg
adc
pop
fstl
mov
addl
out
lock
stc
int3
add
push
popf
dec
lds
jmp
in
stc
xor
pop
lds
fmuls
and
jmp
rcll
xchg
mov
fsubs
icebp
add
outsl
sub
mov
bndldx
sti
add
lcall
cmp
popf
lds
aad
push
ret
inc
mov
sbb
push
outsl
ljmp
sub
pop
std
push
cmc
mov
cmc
leave
or
xchg
mov
pop
or
int3
jnp
mov
and
sub
icebp
xchg
pushf
xor
and
test
sub
xor
jb
rclb
xchg
or
popf
js
xchg
mov
ds
aas
lcall
fs
cmpb
jns
push
mov
jle
mov
add
clc
pop
lods
mov
arpl
aas
in
loop
push
xchg
jno
mov
inc
pop
adc
imul
in
popl
out
sub
fcomps
jne
xchg
jne
fs
icebp
iret
pop
lcall
sti
sub
xchg
in
in
insb
loop
mov
ds
mov
nop
or
sub
jae
aad
or
shlb
imul
mov
in
jo
pop
iret
push
int
pop
dec
mov
push
mov
xlat
adc
or
pop
xchg
mov
aas
cld
fidivrs
xchg
cwtl
mov
push
or
leave
pop
mov
jmp
jmp
clc
or
lret
packsswb
movb
aas
out
mov
inc
nop
mov
mov
addr16
jo
ss
mov
sbb
mov
outsb
popa
fadds
insb
sub
arpl
clc
adc
rcrl
test
mov
lret
es
nopl
pop
sbb
loopne
pop
xchg
xor
dec
xchg
add
or
imul
ss
pushf
andb
push
sbb
dec
icebp
stos
repz
js
and
pusha
lret
jne
sbb
test
aad
pop
leave
pop
xchg
mov
pushf
or
leave
fidivs
inc
mov
dec
sub
xchg
les
pop
mov
dec
aad
mov
jo
stos
mov
into
cmp
in
mov
sub
sbb
int3
jmp
and
negl
sbb
fists
test
push
cli
xor
mov
pushl
jp
dec
dec
insl
lods
adc
cs
push
xor
movsb
sarb
pop
sub
fstp
in
loopne
in
nop
or
jmp
cmc
out
scas
out
cmp
in
xchg
cmp
pop
inc
ja
les
ret
in
clc
mov
cmp
xor
insl
rcll
int3
sbb
mov
icebp
iret
jle
insb
das
mov
push
mov
aaa
stos
lcall
xor
fld
int
adc
jb
lret
sbb
arpl
leave
sub
mov
pop
sbb
rcl
loopne
fwait
or
adc
jbe
shlb
push
mov
mov
cmpsb
xchg
and
into
and
fcmovu
adc
scas
movsl
outsl
cmc
sub
int
mov
jns
imul
or
mov
ss
test
inc
cltd
jno
stc
mov
xor
push
add
sub
sbb
in
movsb
lock
cmpsl
loope
ljmp
fcom
das
sub
lds
fldcw
add
push
add
jp
cmp
adc
dec
and
push
imul
test
in
inc
pop
ss
lock
push
rorb
seta
xchg
adc
out
scas
inc
or
xor
or
jg
pop
fstpl
sbb
pop
negb
dec
lods
jmp
sbb
mov
xor
pop
fwait
sar
xchg
es
pop
in
xchg
test
pop
cmpsb
inc
mov
mov
fmull
cmp
nop
ja
icebp
in
fdivrl
jne
lea
mov
imul
test
fstpl
sbbl
sub
mov
mov
pop
fnstsw
mov
mov
xchg
jns
cld
out
mov
movl
lods
iret
stc
in
sub
jae
cmp
loopne
and
stos
dec
adc
mov
cmp
inc
pusha
sub
imul
mov
clc
cmp
subb
jg
mov
xchg
std
xor
cmp
cmpsl
cmp
arpl
mov
clc
pusha
sarb
mov
and
shlb
dec
xchg
or
je
insb
xchg
xor
sarl
imul
pushf
daa
pushf
xchg
sub
add
push
cld
mov
push
mov
mov
divl
jmp
js
fdiv
inc
push
cmpsl
sbb
or
adc
lret
sar
js
subb
and
cmc
xchg
add
jb
jmp
mov
and
cmpsb
sbb
and
push
pop
push
adc
loopne
pop
cmp
mov
fiaddl
dec
dec
enter
dec
mov
xchg
iret
stc
sub
mov
lds
sarl
lods
hlt
fmul
mov
pop
push
scas
imul
movsl
mov
cmp
int3
adc
dec
aam
shrb
in
and
jnp
outsl
jne
xor
sub
dec
lea
inc
xor
adc
out
add
cmp
test
into
ret
outsl
and
jbe,pn
mov
jae
sbb
pop
rcr
xchg
iret
xchg
cmpsl
sar
mov
cmp
popf
scas
xchg
test
dec
or
fmul
lock
or
jg
pop
and
mov
js
push
inc
in
jecxz
sbb
lds
ss
mov
int3
pop
xchg
cltd
cmp
jnp
mov
xor
cmp
pusha
sub
ret
pop
dec
and
test
es
fldcw
add
or
and
dec
rorb
mov
sub
pop
sub
add
pushf
mov
mov
test
lret
mov
cltd
dec
out
out
daa
or
dec
jne
jl
mov
lahf
stos
mov
xchg
mov
add
dec
daa
add
lahf
leave
cmp
adc
aaa
sti
or
adc
push
cwtl
ss
push
das
mov
shrl
lods
mov
ss
lock
and
jecxz
xchg
into
inc
movsl
adc
mov
xor
dec
mov
mov
pop
pop
pushf
lods
xor
in
inc
lods
jbe
dec
push
mov
ss
insb
fists
movsl
pop
or
jecxz
lods
loopne
cmpsb
pop
inc
mov
sbb
xor
sbb
xchg
movsb
jmp
jno
aam
mov
and
mov
jg
adc
shll
cmp
sti
sarb
cmp
adc
xor
xchg
addl
testl
shl
dec
sub
and
sbb
scas
inc
stc
imul
pop
pop
out
push
jecxz
add
xor
insb
mov
xchg
lock
inc
sahf
xchg
push
pop
push
jo
cmp
mov
jmp
and
sbb
xlat
xchg
out
pop
into
or
jns
js
and
in
dec
movsb
in
mov
mov
add
nop
push
or
mov
add
sbb
xor
inc
fwait
add
test
arpl
scas
std
loopne
mov
jo
adc
xchg
sarb
add
xor
add
pop
data16
pop
mov
mov
mov
cltd
cmp
nop
in
mov
push
adc
xlat
or
mov
xor
nop
mov
lcall
cmp
push
mov
addr16
mov
inc
push
out
idiv
ja
mov
push
scas
sbb
push
out
popf
aad
test
or
cld
add
sub
out
sbb
xchg
enter
in
fmuls
lcall
in
mov
and
mov
imul
cmp
decb
and
mov
pop
jge
xor
repz
pusha
adc
int3
fdivs
mov
sub
popa
mov
movsb
push
loop
mov
mov
fmull
xor
xchg
aad
jbe
fsubr
popa
cmp
shrl
jb
cmpsb
jns
icebp
jne
jecxz
jl
sbb
push
hlt
clc
and
loop
cli
mov
in
jl
rcll
xchg
xor
jno
push
rorb
adc
mov
pop
push
imull
sub
rolb
xchg
mov
out
rcrb
mov
mov
cmp
cmc
jne
xchg
ret
in
js
cmp
xor
xchg
popf
clc
imull
iret
add
jmp
mov
popf
addr16
jl
mov
cs
movsl
outsb
mov
sub
test
xor
mov
sbb
outsl
jmp
jge
jno
aas
decl
fs
ja
add
fwait
or
xchg
dec
or
mov
xchg
dec
push
outsl
iret
icebp
push
mulb
xchg
inc
sbb
lods
jecxz
sub
mov
and
mov
mov
or
sub
push
dec
xor
mov
xor
mov
imul
sub
mov
inc
adc
stc
imul
lret
rcll
pop
insl
add
shrl
and
jmp
popa
ja
inc
call
ret
pop
sbb
adc
push
mov
in
mov
jmp
sub
cli
ret
sbb
ljmp
gs
shl
fstps
iret
adc
xor
call
insb
sbb
scas
or
jae
inc
ret
lahf
fnstenv
xchg
cmpsb
xchg
mov
scas
sub
push
cli
jecxz
aad
pop
outsb
inc
mov
or
adc
je
and
inc
fbstp
or
pop
mov
iret
pop
mov
icebp
xchg
inc
in
push
mov
stc
add
sti
or
addr16
sub
rorl
sbb
or
mov
sub
call
ret
xchg
jg
fnstcw
shrl
lret
andb
in
pop
push
incl
dec
cmp
ret
cmp
lcall
xchg
push
test
cmp
cld
push
dec
sub
cwtl
repnz
push
jae
repz
icebp
xorl
xchg
rcl
dec
fwait
pop
push
and
fwait
pop
fsubrs
stc
pop
test
cmc
xorps
inc
lret
cmp
xor
mov
sub
sub
pop
pop
leave
sub
add
sub
fidivrl
in
divl
shlb
cld
xchg
cmp
nop
mov
vpshuflw
mov
scas
adc
rorb
test
jl
jle
mov
fs
iret
mov
rcrl
popf
inc
rcll
frstor
mov
test
ja
push
ja
xchg
shll
imul
xor
idivb
aaa
pop
pop
jb
or
cli
fisubl
mov
je
inc
or
mov
cld
movsl
leave
lret
sub
nopl
out
cs
popa
arpl
test
push
in
in
cmc
xor
in
mov
cmp
jb
fcomps
cs
pop
or
iret
stos
movsb
popa
fsubrp
jle
adc
mov
mov
lds
mov
dec
inc
inc
neg
shll
add
or
jns
popf
sbb
adc
push
xor
lahf
pop
sub
xor
jo
mov
inc
out
call
hlt
sti
xor
fidivl
mov
jne
adc
mov
outsl
sysenter
std
pop
inc
mov
leave
mov
inc
pop
insl
push
sahf
in
adc
xor
int
xor
mov
or
sub
xor
test
stos
and
jns
adc
mov
fistpl
mov
mov
pop
cltd
sub
daa
add
aas
jecxz
xchg
or
mov
fwait
popa
fsubr
sub
rclb
jmp
mov
xchg
xchg
dec
loope
popf
inc
data16
sub
pusha
divl
xchg
xor
mov
and
in
negb
insb
scas
pop
jle
cld
mov
in
xor
jb
xchg
stos
jp
lahf
out
sbb
pop
dec
leave
outsb
dec
xchg
std
dec
test
xchg
aas
bnd
xchg
and
mov
push
jne
in
mov
lock
jae
sbbb
aam
or
and
push
jns
or
test
jmp
inc
fcmovne
test
pop
inc
add
jne
mov
dec
sbb
arpl
roll
sub
lock
lods
cli
iret
dec
cmpb
in
pushf
stc
mov
and
push
xor
adc
std
imul
outsb
lock
sbb
int
jmp
sbb
das
in
rol
bound
sub
push
daa
mov
int3
xor
add
adc
push
popa
in
scas
fnstsw
andl
sar
pop
lock
scas
jb
pop
mov
test
outsb
mov
lods
outsw
cmp
xor
addl
cmp
mov
movsb
jmp
xlat
fdivl
lcall
nop
sbb
in
lcall
add
cmp
out
clc
repz
test
out
adc
sbb
imul
sbb
loopne
rolb
adc
mov
popf
lahf
jle
and
push
inc
mov
adc
js
jmp
rorl
cmp
push
dec
sbb
lods
cmp
int
sbb
pop
pop
dec
daa
jg
cmp
dec
add
lods
fwait
sbb
je
push
mov
mov
or
cld
call
ss
mov
push
xchg
js
add
aas
and
pop
sbb
pop
mov
iret
insl
add
lcall
sub
xchg
lahf
mov
mov
ret
jb
xlat
or
pop
repnz
push
mov
or
mov
in
mov
ljmp
jb
push
sbb
or
pop
add
fnstcw
movsl
outsb
bound
dec
inc
xor
lds
or
es
sub
adc
arpl
xchg
in
arpl
push
pop
and
insb
mov
push
lds
push
mov
decb
push
pop
add
push
mov
add
mov
repz
xor
cmp
sahf
pop
lret
push
push
cmp
shlb
xor
sub
xchg
pop
jge
popf
test
test
call
dec
faddp
mov
pop
sbb
inc
pop
mov
repnz
or
insb
or
push
mov
inc
clc
inc
mov
mov
mov
test
jnp
xor
inc
xor
or
lahf
mov
ljmp
bound
mov
lcall
ficoms
adc
jl
out
xchg
int
or
xor
mov
xor
test
test
repz
jns
or
cli
repz
fwait
or
mov
pop
vpsllw
xchg
scas
mov
xchg
inc
add
sbb
ds
insb
lret
jns
out
sbb
cmp
jns
out
mov
sbb
cmp
inc
sub
cld
in
jo
cli
cli
pop
xchg
in
imul
add
jmp
inc
sbb
xchg
or
mov
mov
cwtl
shrl
cli
aas
or
sub
addl
fwait
movsl
lds
sbb
in
cmp
movsb
imul
push
push
aas
cld
orb
adc
dec
sub
mov
test
addr16
or
lods
repnz
int3
ret
lock
inc
rcll
in
aad
mov
mov
adc
push
in
inc
in
dec
mov
cmp
andb
std
sbb
mov
stos
subb
add
std
gs
sub
jb
outsb
jns
add
in
into
mov
xchg
int3
stos
divb
inc
pop
jle
xchg
cld
mov
pop
pop
aam
je
cmpsl
cmp
mov
pushf
or
xchg
mov
xchg
mov
aad
shlb
fs
lods
scas
pop
sbb
mov
roll
dec
or
int
jo
mov
sahf
pop
xor
xchg
push
sbb
ret
lcall
mov
mov
lahf
in
aas
adc
jbe
and
das
mov
iret
arpl
pop
insl
rorb
mov
sub
ljmp
add
shrl
push
ror
cmp
dec
mov
cwtl
sbb
movsb
mov
les
in
pop
mov
dec
and
mov
std
sti
negb
stos
jb
pop
leave
int3
insb
cs
fsubrp
aas
icebp
pop
push
ret
pushf
jl
push
mov
jns
push
xor
scas
jle
push
std
mov
mov
inc
jns
and
lret
inc
lock
xchg
outsb
xlat
lcall
push
icebp
sbb
andl
lods
push
xchg
inc
xchg
inc
in
xchg
insl
cmp
loop
xor
ljmp
jo
push
inc
mov
sbb
imull
icebp
sbb
leave
sarb
faddl
mov
lret
cmp
popa
cli
pop
into
test
lret
mov
cmpsb
movsl
inc
push
ds
and
and
inc
adc
jns
icebp
imul
ss
pop
pop
je
roll
out
pop
lret
adc
movb
ret
mov
fdivl
imul
mov
movsb
mov
pop
int3
dec
mov
xor
out
les
std
mov
jecxz
fstp
mov
lahf
insb
xor
mov
mov
sbb
jge
enter
mov
or
mov
out
mov
aad
in
sub
adc
adc
popa
fidivrs
lods
jbe
mov
mov
inc
inc
ficoml
ret
pcmpgtw
inc
loop
inc
add
adc
inc
or
sub
les
out
rcrl
adc
in
aad
mov
add
and
popa
push
xchg
addr16
jne
xchg
je
repnz
inc
adc
pop
xchg
popa
pop
aaa
in
mov
add
stos
aaa
xor
cmpl
pop
lretw
pop
lds
mov
js
push
mov
jno
lahf
pop
incl
jne
xchg
aaa
cmp
cld
roll
cmp
lret
sub
aaa
cwtl
push
repz
add
pop
cwtl
pop
not
mov
jg
adc
inc
jmp
sub
push
inc
sbb
lea
in
xor
mov
jno
into
insb
dec
or
mov
dec
in
insl
push
roll
cmp
adc
clc
inc
rcr
pop
mov
addb
adc
jge
mov
dec
and
cmc
xchg
pop
les
test
adc
fscale
inc
inc
fistps
arpl
repnz
scas
or
fistpll
insl
xchg
outsb
adc
pop
aaa
xor
repnz
pop
pushf
mov
cmp
sti
sti
inc
fidivrs
mov
lret
test
mov
das
push
movsb
mov
rolb
mov
cmp
out
inc
je
xor
mov
xorl
es
mov
add
push
enter
imul
rorb
arpl
dec
and
or
stc
insb
stos
xchg
jle
jne
ret
and
ds
dec
lock
mov
lea
lret
sub
or
das
fisubrl
push
sub
movsl
fldl
add
push
inc
loope,pn
test
jmp
pop
xor
mov
lahf
lods
fmul
cmp
jmp
jbe
pop
cmp
push
test
psrad
rol
out
adc
sub
xchg
add
or
sub
sbb
sbb
je
pusha
in
adc
dec
or
jne
add
jnp
imul
aad
in
cmc
stos
test
xchg
lret
movsl
sti
mov
inc
sbb
cmp
add
jnp
imul
aad
in
cmc
stos
test
xchg
lret
movsl
sti
mov
inc
sbb
gs
jne
add
jnp
imul
aad
in
hlt
stos
test
xchg
lret
movsb
or
jne
add
sti
mov
cmp
dec
mov
sbb
adc
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jb
bound
call
or
repnz
jecxz
sarb
ret
das
mov
mov
outsl
jb
bound
xor
and
adc
add
sarb
ret
xor
outsl
jb
bound
xor
and
adc
add
repnz
shrl
ret
or
sbb
adc
sbb
in
push
push
xlat
cs
sti
ljmp
fs
cld
sub
push
negb
out
ret
hlt
xchg
cmp
jmp
sub
fbld
dec
in
idiv
in
imul
sub
xchg
jg
and
aaa
test
cltd
or
mov
shlb
jg
dec
fisttps
cli
adc
fisubl
cmp
aaa
into
xchg
xchg
add
jg
addr16
test
dec
pop
loop
adc
outsb
jmp
fbstp
push
and
xchg
inc
iret
sbb
mov
push
sarb
ret
xchg
sbb
out
lock
pop
lahf
testl
pop
sub
pop
das
sbb
jg
jp
lahf
bound
xor
and
adc
add
repnz
loop
sarb
ret
pop
mov
push
xor
sub
jbe
add
rcrb
pop
mov
mov
and
cli
pop
ljmp
subl
mov
insb
ret
xor
dec
sub
add
cmp
icebp
and
adc
add
repnz
loop
sarb
ret
pop
mov
outsl
jb
bound
xor
and
adc
add
repnz
loop
sarb
ret
pop
mov
outsl
jb
inc
out
push
insl
insl
int3
stos
and
stc
jo
lods
test
rcll
adc
icebp
xor
pop
pextrw
lahf
xchg
or
cmp
sbb
dec
movsl
jns
jl
cmp
leave
mov
jae
xor
popf
pusha
arpl
push
xchg
fiaddl
adc
mov
rcl
adc
outsl
adc
fwait
cmp
lcall
mov
xor
adc
add
dec
add
js
in
inc
dec
rcrl
stc
out
mulb
pop
sub
ficoml
sbb
xchg
les
mov
pop
xchg
hlt
cltd
rclb
sub
inc
mov
add
repnz
rclb
push
mov
mov
add
js
or
cli
pop
int3
inc
pop
cmpsb
js
jb
pushl
and
xchg
push
push
lret
or
dec
iret
or
sub
xor
mulb
dec
mov
stos
adc
inc
sti
mov
cmp
aad
subb
inc
stc
mov
movsl
enter
cmp
push
jle
notb
cmpsb
in
enter
stc
jg
sub
std
jmp
iret
test
sub
imul
in
jnp
repnz
jg
test
test
jp
incb
add
cmp
push
repnz
test
inc
jae
sbb
leave
shl
push
repnz
or
xor
mov
mov
aad
and
jo
push
pusha
hlt
xchg
lret
jo
push
hlt
idivb
push
and
sbb
mov
add
cwtl
data16
out
mov
jb
sbb
iret
cmc
pop
dec
and
ret
cwtl
ficoms
mov
fidivs
lds
test
fs
adc
mov
fisttps
dec
cmove
lret
inc
popf
repnz
jmp
xor
xchg
leave
rcrb
ficoms
ret
loopne
mov
xor
arpl
mov
xchg
lea
cmc
xchg
xor
out
mov
imul
mov
call
dec
mov
arpl
add
and
dec
cmp
mov
daa
ljmp
xor
xor
pop
xor
into
xor
push
in
call
inc
icebp
out
int
sbb
adc
movsl
dec
mov
fimuls
nop
jle
orb
mov
fistps
mov
mov
hlt
ficoms
fildll
call
in
xor
push
lahf
pop
fcom
sbb
xlat
orb
fisubs
sub
into
jecxz
aad
xchg
into
stos
nop
mov
popa
push
js
and
adc
push
mov
push
jns
arpl
add
sub
in
out
test
mov
outsl
mov
xor
mov
ret
ljmp
pop
dec
mov
sub
lods
xor
ret
imul
stos
or
pop
ret
test
gs
and
sub
mov
pop
push
mov
in
xchg
mov
or
or
loop
xor
xchg
jp
repnz
xchg
outsb
mov
addl
adc
pop
dec
pop
les
gs
jns
into
fwait
add
out
lods
xor
jecxz
sbb
lock
ret
pop
call
dec
cmp
inc
lods
in
cltd
icebp
rcll
jecxz
icebp
cwtl
pushf
int
push
inc
popf
retw
cmpsl
dec
movsl
push
in
add
ljmp
mov
mov
mov
inc
push
adcb
pop
fldl
cmc
fidivs
add
orl
sub
mov
lret
adc
int3
pop
ds
rolb
push
pop
dec
mov
xchg
fisttps
xor
jo
xor
mov
gs
jle
xchg
repnz
aaa
and
sbb
xor
rorl
out
xchg
mov
push
push
data16
clc
out
out
adc
xchg
lods
stos
and
fimull
call
sbb
xchg
xorb
rorb
clc
cs
outsb
das
shrl
into
loop
push
dec
mov
sbb
pusha
ret
jp
add
dec
xchg
mov
adc
mov
or
sbb
iret
leave
xchg
fsubp
jno
lret
insb
sub
hlt
xor
fs
jne
push
lock
mov
jns
jmp
icebp
pusha
daa
into
adc
pop
push
fwait
jecxz
jg
stos
aaa
cmp
rcrl
xchg
push
flds
xor
pop
outsb
sub
or
insb
sti
mulb
inc
jg
dec
xor
sbb
lods
arpl
xchg
dec
jns
push
add
std
rorb
pop
leave
lea
call
adc
in
pop
fsubl
mov
es
outsl
mov
wrmsr
lcall
cmpsl
add
pusha
cmp
pop
inc
sub
pop
out
inc
in
push
jmp
lods
xor
stos
ret
and
inc
shlb
sti
out
xor
sub
xchg
mov
and
ret
mov
mov
pusha
fldt
pop
jns
lds
jno
and
adc
aaa
sbb
xchg
pop
rcl
xchg
cmpsl
or
cld
pop
push
lds
adc
adc
out
int
xlat
sub
mov
leave
push
into
push
jae
push
push
std
dec
dec
fs
or
push
fistpl
fs
pmaddwd
call
stos
aaa
jl
cmp
imul
ja
and
or
jle
loopne
or
pushl
dec
hlt
push
jp
sahf
jl
loopne
pop
int3
jmp
inc
sub
sbb
pop
xchg
lahf
clc
nop
jg
cwtl
shrl
inc
inc
test
insl
arpl
cmp
lret
inc
sarb
mov
fdivrl
pop
pop
inc
test
cwtl
aam
out
in
sub
sbb
cmpsb
sub
sub
dec
test
or
xchg
cmpsl
lret
xorb
inc
aaa
mov
stc
inc
sub
dec
mov
push
sub
push
shll
outsl
in
les
inc
mov
sbb
shlb
xor
cmpl
imul
mov
sub
icebp
push
and
push
xor
push
mov
push
inc
daa
idivl
inc
lock
jl
bnd
fisttpll
inc
xor
testb
jns
pop
out
dec
or
ret
inc
loop
push
lcall
xchg
and
pop
insb
roll
xor
jmp
and
rcll
outsb
push
adc
push
adc
inc
arpl
xorl
push
cmp
and
divb
lock
jnp
add
cltd
in
out
cmp
fstl
xor
rolb
mov
xor
cmp
cwtl
adc
in
inc
cmp
lock
sti
ret
ret
sub
push
aam
push
fisttpll
sbb
sub
rorb
lret
fisubrs
fnstcw
sbb
mov
shl
fadd
jecxz
fidivrs
je
dec
fs
test
dec
inc
dec
inc
ljmp
std
lods
pop
dec
cs
leave
cmp
mov
xchg
push
push
jle
inc
push
jno
jnp
dec
loop
mov
dec
cmp
rolb
loop
pop
lahf
push
cld
or
mov
jo
cwtl
enter
fadd
stc
or
add
pop
ja
jge
in
icebp
pop
jge
mov
imul
pusha
flds
jbe
xchg
xorb
sbb
jp
push
sarb
mov
icebp
int3
dec
es
repnz
xor
pop
fistl
cmp
xchg
repz
test
std
xchg
lods
xlat
call
cmp
add
xchg
lahf
lcall
addr16
pop
and
popl
mov
pushl
pop
jnp
cmc
jns
cmp
lods
faddl
mov
pop
in
int3
cmp
movsb
sbbb
aaa
xchg
add
lods
in
lret
mov
test
fisttps
out
or
and
outsl
in
popf
pop
in
dec
sbb
in
and
subl
lock
shll
pusha
jnp
hlt
mov
in
out
cwtl
inc
push
popa
sub
repnz
dec
into
jns
jns
leave
das
mov
dec
or
mov
jge
cmp
and
int
int
int3
xor
jnp
shlb
pop
fnstsw
ret
jne
in
leave
push
mov
mov
jp
sub
mov
insb
stos
scas
pop
mov
jne,pn
or
test
sbb
idivb
jecxz
daa
cwtl
and
and
daa
dec
add
push
test
mov
mov
test
adc
sahf
leave
scas
aaa
mov
jmp
imul
sub
movsb
stos
push
mov
pop
sub
and
adc
mov
jecxz
pop
lock
flds
je
push
aas
inc
sub
cmpl
jl
inc
les
pop
into
pop
mov
daa
mov
fcmovu
andb
in
mov
adc
mov
adc
fisubrl
addl
test
xlat
mov
rep
or
pop
test
cltd
mov
jbe
inc
rcrl
dec
cli
icebp
mov
cs
lods
mov
mov
xor
lock
fadd
and
insl
xor
leave
imul
lea
js
add
add
cs
add
xchg
hlt
xor
decl
bound
cmp
inc
xor
jno
insb
pop
or
popf
push
fbld
in
xor
es
pop
scas
aad
dec
xorl
fidivrl
mov
sti
sbb
outsb
xor
sbb
cmp
dec
fistps
xor
loopne
imul
jbe
mov
das
mov
xchg
xchg
pushf
loope
enter
mov
cmp
adc
aaa
inc
nop
mov
and
pop
hlt
or
outsb
outsl
adc
xor
xchg
jns
adcb
lock
jge
in
mov
es
mov
bound
test
push
dec
sub
rolb
gs
dec
sub
fisubl
mov
sub
jmp
push
jl
idivb
mov
jns
xor
push
and
subl
cs
test
inc
add
roll
jns
jae
test
sarb
dec
add
sub
push
ffree
dec
jno
pop
in
push
cmpsl
cmp
xchg
clc
cmp
shll
xchg
stos
add
mov
call
js
mov
jmp
xchg
outsb
inc
dec
daa
cltd
add
push
mov
shrb
aaa
xchg
in
and
mov
in
push
or
stos
jp
mov
mov
or
lcall
add
push
xor
stos
jnp
or
inc
decb
cmp
sbb
test
pop
cltd
std
cmp
ds
rcrb
jmp
lret
shlb
mov
bound
pop
test
sub
inc
scas
sbb
mov
fcmovbe
sub
sbb
mov
dec
pop
push
adc
int3
dec
hlt
push
inc
dec
xchg
cld
lods
mov
js
cltd
dec
dec
subb
call
popf
lea
mov
or
enter
jnp
add
mov
jno
daa
pusha
dec
mov
rcll
lock
dec
sbb
js
mov
sbb
addl
enter
testl
clc
jg
movsb
and
jp
sbb
cmp
iret
jno
mov
jbe
jl
adc
movsl
int3
into
inc
mov
sbbb
xlat
icebp
pusha
mov
and
fidivrl
xchg
or
and
sbb
lea
dec
scas
lods
fsub
jb
ljmp
add
mov
lods
ss
push
test
add
mov
nop
out
das
xchg
mov
jb
sub
repnz
pop
dec
pop
inc
js
sub
jg
pop
inc
xchg
fmuls
outsb
jne
dec
mov
iret
repnz
lea
outsb
pusha
sub
mov
jmp
mov
inc
dec
imul
push
ret
xchg
in
jg
or
mov
mov
movsl
adc
out
out
sbb
inc
xor
push
imul
pop
mov
stos
xchg
iret
lcall
dec
mov
pop
mov
push
andb
adc
and
sbb
leave
ret
pop
and
into
stc
sarl
stos
sahf
loope
int3
insb
loop
or
test
in
jno
ss
jl
inc
sub
mov
sbb
jae
adc
bound
mov
ret
shl
or
push
std
aam
add
cld
fs
ret
pop
addl
xchg
out
and
adc
pop
out
cs
gs
xor
popf
out
sub
into
rorb
adc
push
mov
cmpsl
adc
adc
add
mov
push
push
mov
aaa
sub
in
ljmp
lret
fdivrl
out
cmp
sub
fdivr
inc
movsl
pop
jno
jp
jge
sti
add
outsl
scas
int
push
clc
lea
jmp
scas
insb
test
jg
mov
push
pushl
jle
xor
imul
inc
das
roll
cmc
repnz
jp
sbb
out
scas
cltd
sbbl
push
ljmp
xor
or
mov
int
lahf
push
mov
dec
fcom
out
loop
inc
mov
or
inc
inc
stc
jl
aad
xchg
mov
sbb
in
rcll
test
adc
ljmp
stos
jmp
lods
insb
xor
mov
mov
jno
jb
sbb
loope
movsb
jge
push
repnz
mov
xor
orl
dec
mov
inc
sti
aaa
jns
cli
scas
mov
outsb
orl
repnz
loopne
lds
clc
jne
mov
mov
cmp
rcrl
sbb
adc
into
mov
and
push
popf
inc
fs
and
fmuls
sub
fs
lock
popl
pop
lds
rclb
jmp
jl
iret
pop
incl
sub
mov
fisttps
add
xorl
dec
in
add
gs
add
das
hlt
cmc
jl
and
jbe
xor
and
sub
movsl
sarl
shll
mov
shlb
mov
ljmp
mov
frstor
lods
out
mov
lods
mov
push
push
xor
fdivrp
stos
sbb
orl
punpckldq
cwtl
rol
roll
in
dec
xor
je
ds
or
fwait
jp
in
rorb
fcoml
sbb
in
jl
jne
mov
dec
sahf
fnstsw
push
inc
pop
and
mov
or
data16
mov
frndint
out
push
fs
add
mov
ja
pop
xlat
xor
sub
rolb
scas
cli
data16
repnz
xor
imul
pop
and
insb
mov
mov
cmp
mov
sub
adc
sub
aad
dec
in
addr16
push
cmp
lahf
mov
xlat
dec
loope
sbb
xchg
imul
lods
adc
cmp
insl
push
out
sub
jo
xor
ljmp
dec
movsb
jns
xor
in
lahf
or
icebp
mov
inc
aam
mov
or
mov
pop
lcall
mov
add
ss
das
pop
lret
mov
movl
dec
ljmp
lds
hlt
and
pop
in
leave
or
pop
mov
cmpsl
scas
inc
push
les
xor
popa
fnstcw
sub
leave
aaa
xor
push
stos
sub
cmp
insb
jle
je
xchg
sub
mov
jecxz
jecxz
sarl
push
dec
cmc
movsb
add
int3
movsl
or
and
push
je
dec
cmpsb
sbbl
add
ja
jp
dec
out
lods
cmpsl
aas
add
add
jp
cmp
mov
adc
sub
sar
cmc
push
mov
mov
xchg
add
mov
out
sbb
mov
dec
xchg
or
ljmp
or
pop
dec
fadds
cmc
std
cwtl
fisubl
inc
pop
lock
pop
stos
ja
and
cmp
jmp
addr16
xor
rorb
add
mov
inc
lahf
lods
mov
lahf
mov
popa
lods
mov
fwait
adc
push
movsb
and
ja
mov
lock
push
inc
mov
xor
push
enter
xchg
sub
hlt
sbb
pop
xchg
mov
repnz
pop
add
pop
frstor
pop
jbe
lods
loope
and
inc
push
fsubrl
into
push
in
ljmp
cmp
push
mov
je
out
iret
cmp
xor
xchg
idivl
insl
mov
xchg
ja
xchg
lods
shll
pop
mov
sbb
call
xchg
inc
stos
jns
ds
inc
in
in
push
mov
add
pop
cmp
flds
iret
adc
push
jns
adc
inc
lods
lcall
xchg
add
dec
cmpsb
ret
xchg
or
sti
cmp
mov
push
fs
dec
clc
jae
sub
clc
sub
mov
jnp
jg
xchg
loopne
xchg
adc
adc
sub
popf
stc
cmc
mov
xchg
and
add
data16
mov
add
xchg
outsb
pop
mov
sahf
repnz
test
dec
andb
hlt
ja
inc
xchg
scas
sbb
cli
ret
xor
ret
push
rorl
cmp
add
nop
jmp
imul
stc
imul
loopne
push
mov
sub
scas
sub
cmp
xchg
in
leave
pop
stos
or
fidivrs
lcall
adc
cmp
push
xor
mov
dec
les
sub
dec
mov
sbb
mov
arpl
mov
sbb
test
pop
pop
ficoms
xchg
adcb
pop
jp
push
jecxz
in
cwtl
mov
movsl
sub
pop
inc
dec
and
jge
cmp
ja
bnd
dec
mov
sbbb
out
insb
bound
stos
sbb
hlt
pop
or
lret
stc
lret
fldcw
jg
mov
and
out
pop
rol
cli
inc
subl
mov
mov
les
std
rcll
imul
xchg
testl
rclb
mov
popf
cpuid
loopnew
dec
jns
mov
lret
ficompl
aad
xlat
push
sub
leave
lock
aas
or
stos
rol
adc
mov
jp
imul
fwait
pop
mov
adc
cld
es
in
push
or
inc
cld
push
mov
hlt
adcb
jl
cld
jo
arpl
fxch
leave
daa
out
loopne
cs
pusha
inc
inc
scas
jl
sub
cmp
dec
test
lea
cwtl
decb
xchg
stc
stc
test
test
loope
inc
jl
add
jns
addr16
inc
cmp
inc
lods
sub
lods
call
shlb
in
addl
jne
hlt
adc
out
xchg
mov
cmp
mov
int
cwtl
xchg
dec
daa
adc
or
fs
cmp
xor
cmpsl
jecxz
stos
movsl
ja
test
out
sbb
inc
xchg
jo
je
sbb
or
mov
fs
xor
scas
rcrb
jecxz
pop
inc
sub
cld
cmpsb
dec
sbb
jbe
xchg
sti
aaa
lods
loop
sub
xor
add
loopne
or
xor
sbb
enter
scas
mov
ret
or
test
xor
jmp
mov
add
mov
adc
or
mov
sub
sub
push
mov
lret
cmp
and
dec
add
dec
bound
addr16
and
xchg
mov
frstor
cmp
pop
cld
call
cmp
outsb
cmp
rcr
dec
psubsb
mov
fmulp
xor
das
pop
fwait
inc
push
imul
int
cli
jge
cmpsl
int
sub
fldt
stos
fsubs
inc
xchg
gs
fdivs
adc
push
inc
and
xchg
cmp
js
xchg
repz
push
pop
neg
or
mov
mov
xchg
push
jp
mov
sub
loopne
dec
push
sbb
lock
jg
mov
cmp
js
push
fs
push
test
loop
xchg
test
mov
je
dec
shlb
ljmp
push
aaa
das
insl
shr
fcompl
mov
sbb
mov
lods
movb
enter
push
fcoms
addr16
add
or
xor
xchg
loop
xorl
insb
fldenv
addr16
mov
or
jle
addl
js
sahf
std
pop
pop
push
sub
imull
pop
shlb
mov
and
adc
daa
enter
test
xchg
sbb
mul
lahf
xchg
xor
push
mov
and
adc
add
repnz
loop
sarb
ret
pop
mov
outsl
jb
bound
xor
and
adc
add
repnz
loop
sarb
ret
pop
mov
outsl
jb
loop
sarb
and
adc
sub
pop
loop
sarb
ret
pop
mov
outsl
jb
bound
xor
and
adc
add
repnz
loop
js
ret
xlat
shlb
enter
mov
mov
rorb
jno
inc
add
and
jno
add
test
xor
shll
repnz
jno
inc
loopne
push
and
jb
bound
mov
fwait
icebp
stos
sarl
ljmp
sub
jge
andnps
or
loop
addb
addr16
sbbb
jmp
inc
into
push
es
fcoms
shlb
dec
add
std
adc
inc
das
push
out
loope
mov
pop
hlt
andb
ss
mov
loopne
cli
adc
mov
fstl
fdivr
movsl
adc
xchg
lock
shrb
mull
loop
es
push
xor
adc
decl
or
andb
sbb
clc
jmp
lcall
shrb
outsl
push
mov
dec
leave
adc
sahf
std
pusha
int
and
ficoms
xchg
adc
adc
xor
shll
repnz
jno
inc
cmp
and
jb
jnp
loope
out
xlat
xchg
xchg
mov
scas
lock
loope
or
dec
aas
ds
es
pop
addl
xchg
mov
mov
lahf
sahf
out
cmpsl
xchg
adc
sbb
aaa
dec
xor
je
jg
mov
test
mov
movsl
stos
int
mov
and
jno
inc
and
and
jb
bound
xchg
loope
icebp
mov
mov
mov
and
jno
inc
and
and
jb
bound
xchg
loope
in
xor
add
fs
cmpsl
dec
mov
mov
sbb
arpl
iret
xor
out
sbb
mov
xor
inc
and
scas
roll
repz
imul
cmp
shrl
jp
mov
push
into
mov
mov
pop
loope
pop
into
orl
mov
aaa
mov
push
xlat
test
xor
dec
mov
in
bswap
sub
addr16
aaa
imul
ljmp
push
imul
stos
pand
push
push
ficomps
cltd
aas
xor
lret
fcompl
lea
sahf
push
inc
ret
mov
push
nop
insl
in
dec
pusha
rep
enter
mov
mov
mov
cmpsl
into
sbb
je
addb
scas
jne
mov
roll
xlat
inc
adc
icebp
fs
cmpsb
fistl
cmp
or
push
sub
aad
ljmp
lods
or
or
js
mov
push
sbb
xorb
jge
sbb
jg
push
cmpsl
and
ret
push
cld
aaa
les
jns
shr
inc
cmpsl
insl
push
mov
outsb
jne
jbe
cmp
lret
outsb
ficompl
mov
imul
iret
xchg
imul
cmpsl
lret
jns
and
pop
push
mov
mov
ffree
stos
push
sbb
cmc
xor
movsb
add
sub
filds
mov
xchg
lret
jle
lock
sahf
jae
unpcklps
or
stos
mov
mov
movsb
lock
movsl
hlt
sub
inc
mov
mov
fwait
ljmp
adc
into
pop
popf
nop
xchg
test
hlt
jge
fldt
stos
addr16
add
pop
mov
out
data16
mov
ss
movsb
lahf
pop
insb
push
ss
sbb
movsb
cwtl
cltd
cmp
cld
fdivrl
outsl
sbbl
sarl
ljmp
cld
clc
xor
sub
in
inc
and
cltd
mov
cmp
ljmp
andb
add
sub
or
sbbb
xchg
bound
pop
sbb
sub
ret
dec
inc
lret
dec
leave
fucomp
mov
hlt
and
sub
subl
inc
pop
jo
fnstsw
cmp
pop
pop
mov
scas
jmp
daa
dec
jge
popf
rcll
fisubrs
pop
sti
les
and
push
mov
or
addr16
mov
sub
pusha
jmp
mov
int3
sbb
xor
rclb
insl
aaa
push
sub
and
and
xor
mov
shl
shlb
pushf
stos
mov
add
loop
jb
mov
outsl
jle
call
mov
rcrl
or
xor
enter
pop
icebp
mov
in
mov
lret
sahf
cmp
xchg
sahf
jg
sub
jmp
sub
roll
push
imul
jp
mov
fisubl
push
dec
or
dec
sbb
mov
push
shrl
jecxz
aas
dec
push
sub
xor
mov
test
and
pop
jne
pop
gs
push
jne
insb
dec
dec
popf
ja
sahf
movsl
lock
fcmovnb
rorl
ja,pn
nop
loope
push
and
mov
cmp
cs
jnp
mov
ss
mov
fistps
cmpsb
decl
dec
imul
loope
testl
dec
and
sbb
add
loop
fistps
inc
inc
outsb
out
push
xchg
pop
iret
add
adc
jmp
repnz
xor
les
cli
repnz
bound
lock
mov
movsb
int3
jl
mov
xchg
xlat
and
sti
mov
add
into
jbe
sbb
out
adc
push
xor
and
jae
and
push
mov
sub
dec
leave
mov
stc
sbb
inc
iret
push
xchg
push
mov
adc
push
sub
adc
jl
std
fnsave
mov
inc
fcomps
and
fucompp
push
push
or
dec
insl
pop
mov
setno
or
or
jl
cmpsb
cmp
aas
mov
jmp
call
mov
sub
loop
jmp
mov
out
addr16
sub
or
jmp
adc
jbe
sub
je
das
movsl
aaa
mov
repz
xchg
fwait
out
inc
out
cmp
sahf
xor
mov
mov
mov
cmp
jb
add
stos
ljmp
lret
push
jbe
cmovg
jmp
cmc
xchg
mov
add
add
mov
cmpsb
cmc
xor
or
push
and
out
testl
mov
jmp
push
cltd
roll
fsubr
push
push
mov
jp
aaa
jmp
xlat
insb
rclb
and
popf
lret
xchg
outsb
push
mov
mov
or
mov
adc
push
cmp
mov
xchg
or
test
flds
pushf
jne
adc
mov
lods
lret
jns
dec
sub
xor
rorb
decl
push
pop
cmpl
aam
adc
iret
inc
pusha
repz
adc
push
adc
and
mov
std
lods
cld
data16
xorl
imul
push
outsb
add
out
test
loop
ret
mov
insb
pop
pusha
gs
push
test
push
sub
push
and
push
push
shl
fs
mov
or
inc
and
sub
in
push
leavew
mov
movsb
movsb
mov
cmp
xor
inc
cvtps2pd
dec
insb
std
cmpsl
mov
fidivl
mov
fnop
jae
subb
cmc
cmp
mov
ja
mov
repz
push
clc
outsl
fisubs
inc
sub
pop
stos
test
jae
lret
push
nop
and
ret
sbbb
arpl
mov
fs
adc
xor
sub
pop
inc
sbb
jmp
sub
bound
pop
jge
pop
sub
cmpsl
push
xchg
xlat
xchg
es
xchg
mov
fisubrs
daa
es
dec
mov
sub
pop
add
aaa
in
jno
aad
icebp
loope
in
sub
dec
push
mov
sub
jno
or
push
daa
ret
jg
cmp
or
aas
stos
mov
into
nop
pusha
iret
add
sub
jns
mov
jecxz
jae
stc
or
jp
jns
mov
pop
push
push
and
mov
insb
enter
jne
push
rorb
sub
mov
mov
xor
fwait
pop
inc
addr16
cmc
and
inc
or
sub
decl
cltd
push
mov
decb
in
push
aad
pop
cmpsb
pop
lods
cld
sbb
mov
xchg
cmpsl
xor
outsb
lds
popa
pop
sahf
iret
andl
inc
fcoml
stos
flds
add
lret
cmp
cld
popa
popa
sbb
test
inc
mov
push
and
or
mov
pop
into
js
mov
mov
insl
jne
cs
jmp
in
pop
mov
lcall
ret
sub
cmpsb
aaa
cmp
mov
xlat
mov
mov
icebp
jecxz
adc
shlb
add
xor
add
cmp
push
out
and
shlb
outsb
mov
mov
fsubrl
leave
out
imul
aaa
iret
cmp
fsubp
and
adcb
int
mov
jle
push
ds
imul
mov
les
fwait
ds
sbb
jge
js,pn
insb
and
fldln2
inc
sbb
add
cmpb
mulb
inc
sub
test
jbe
fs
cwtl
push
aad
jno
jne
out
jge
shrl
lods
pop
arpl
lret
xchg
sub
cmc
lcall
cltd
xchg
xor
dec
fsubp
fs
or
popf
mov
jo
add
nop
movsb
or
push
stc
xor
sbb
aaa
loop
std
iret
xchg
xor
inc
sub
and
cmp
out
mulw
mov
adc
sti
dec
cli
lds
xor
or
push
divb
flds
fldenv
mov
inc
and
mov
mov
test
fdivs
and
stos
adc
subb
pop
xor
call
cmp
inc
pop
sub
jo
xor
leave
dec
add
aad
inc
push
pop
rcl
lds
and
cltd
cmp
inc
stc
js
push
pushf
mov
pop
xchg
ret
dec
ret
push
into
data16
xchg
add
jecxz
push
stos
xchg
xor
adc
adc
fdivrs
mov
repnz
les
sub
mov
xchg
jmp
adc
mull
xor
cltd
jmp
shrl
in
fidivrs
out
push
or
loopne
dec
sarb
loope
sbb
out
aaa
mov
dec
rclb
int3
cli
imul
outsl
cmp
cmpsb
mov
adc
inc
sbb
mov
xor
je
adc
mov
ja
and
or
mov
sub
push
sbb
mov
test
loope
out
out
insl
arpl
ds
dec
xchg
roll
jle
scas
loope
xor
addl
insl
mov
lds
insb
or
and
mov
fisubs
lods
mov
movsb
mov
insl
push
xchg
or
pop
fcomps
fmul
mov
mov
mov
xor
mov
sbb
cmp
cmp
inc
inc
popa
es
cwtl
in
insl
pop
ret
add
lret
sub
cmc
adc
push
fs
adc
xchg
pop
insl
fsubs
scas
or
pop
into
lret
mov
lods
jge
pop
aaa
outsb
in
dec
lcall
xchg
movsl
xor
std
add
in
sbb
push
cmc
mov
divl
inc
adc
mov
xor
in
inc
and
loop
mov
lock
mov
lock
adcb
dec
clc
out
insb
std
jle
lea
mov
cs
jns
out
xor
cmp
mov
data16
scas
imul
ret
insb
out
add
rcll
test
sbb
clc
mov
lret
gs
inc
pusha
sar
add
lret
cld
push
cmp
fdivr
sbb
out
pop
dec
popa
and
fcmove
xor
stos
jb
lcall
ret
lret
fistpll
pop
shl
cmp
rol
mov
bound
add
pop
lock
icebp
sub
ror
repnz
jae
push
inc
mov
insl
push
enter
stc
fidivrs
push
mov
fdivrs
shl
rol
ss
jg
mov
testb
sti
sbb
push
cs
mov
inc
and
dec
xchg
test
outsl
in
stos
push
and
fstl
cmp
pop
rcr
mov
pop
loopne
bound
jl
movsb
clc
into
incl
rcrb
leave
data16
mov
pop
inc
les
mul
xor
out
stc
mov
sub
ljmp
cmpsl
push
negl
inc
pop
add
mov
nop
sahf
mov
sbb
push
push
and
dec
and
fs
loopne
and
lods
push
jge
inc
dec
aas
inc
in
mov
cmpsl
orb
test
pop
test
adc
leave
cmp
mov
jne
test
pop
mov
mov
cmpsb
or
or
vmptrld
jp
add
movsl
ds
mov
popf
xchg
push
cmpsb
lods
mov
daa
add
imul
xor
stos
jg
jb
and
adc
js
add
stc
push
dec
adc
dec
insl
testl
cmp
sbb
jmp
or
scas
sub
pop
and
push
fcoml
call
test
xchg
cwtl
mov
add
mov
sub
pushf
pop
sarl
out
push
add
adc
push
ss
divl
jb
pusha
adc
add
xchg
mov
adc
imul
test
icebp
std
mov
aam
sub
pop
icebp
push
lret
or
and
adc
in
sbb
jge
bound
cmp
and
cmc
xchg
sbb
jns
cltd
push
jp
ficoms
and
shlb
lret
test
insb
inc
xchg
adc
cmc
sahf
mov
push
jle
aam
loope
cmp
inc
stos
cmp
sbb
cmp
mov
jge
stc
cld
int
fidivrs
jno
adc
rorb
and
dec
mov
popa
xchg
jg
pop
and
dec
les
push
sbbl
sbb
jo
push
push
jmp
inc
aad
xchg
push
jb
fsubrs
and
faddl
push
movsl
sub
or
or
shrl
int3
test
ret
and
sbb
addps
xlat
or
or
mov
mov
push
dec
fists
icebp
pop
cwtl
test
fs
sub
stos
pusha
dec
sub
inc
cmpsl
sub
and
mov
mov
movb
jl
inc
push
pop
fnstsw
fstpt
push
pop
jb
sbb
or
mov
arpl
jl
jge
inc
adc
cmc
jne
jp
rol
fincstp
movsl
push
repnz
push
push
xchg
sub
jno
test
and
jae
rcll
fcomip
mov
loope
shlb
aam
lret
add
test
fisttpll
aad
pop
cmp
jne
fldl
push
out
mov
fcoml
notl
and
out
cltd
mov
cs
lock
sahf
test
mov
les
and
adc
xchg
jb
xchg
jnp
dec
stc
lret
and
sbb
cmc
and
xor
pop
ja
insl
and
fdivr
sbb
mov
cmp
enter
jbe
ret
mov
mov
mov
shl
imul
jne
add
mov
mul
or
mov
or
in
dec
pop
and
push
xchg
pop
sub
xchg
push
dec
ss
test
fcoml
or
pop
fnstenv
mov
cmp
xchg
add
ss
adc
js
or
out
cmp
sbb
inc
jo
cltd
mov
out
xchg
je
or
icebp
sbb
scas
scas
inc
mov
mov
ja
jno
sub
into
lea
popl
or
test
and
pusha
sbb
pop
mov
jmp
clc
or
cmpsl
aam
push
adcl
rcll
lea
mov
pop
scas
lods
mov
dec
mov
and
mov
xchg
push
pop
sub
outsb
les
mov
add
jne
out
fsubl
inc
pop
mov
xchg
mov
gs
xor
or
das
dec
dec
push
in
test
sbb
add
push
jbe
adc
sbb
push
int3
imul
daa
pop
adc
xchg
lret
mov
jecxz
jmp
mov
sbb
out
push
jmp
hlt
jne
cmp
movsb
mov
cli
test
pushf
into
call
dec
mov
push
stc
out
mov
xchg
sub
mov
pusha
data16
subl
stos
add
cmp
push
xchg
shll
add
in
cmp
imul
aaa
nop
pop
add
je
popa
mov
xor
pop
into
or
jae
mov
lret
jmp
incb
jp
push
xlat
aas
dec
lahf
add
js
push
and
mov
aam
jno
outsb
stc
xor
sbb
push
in
cmp
aam
push
roll
aad
adc
or
lea
and
das
enter
jbe
lods
roll
test
mov
inc
nop
push
stos
push
lret
mov
arpl
in
out
xchg
jns
fs
out
and
xchg
dec
cmpsl
xor
cmp
push
and
popf
xor
jnp
mov
push
mov
mov
mov
dec
repnz
arpl
into
cmp
mov
cld
fdivs
call
xchg
icebp
and
jne
jne
imul
sbbb
cmpsl
icebp
out
sti
jo
cwtl
sahf
mov
out
xor
cmp
loopne
pushf
adc
mov
mov
sbb
inc
jmp
mov
cld
iret
dec
cmp
orb
xchg
cld
test
mov
jbe
test
div
daa
mov
jns
xchg
icebp
mov
cmpl
shl
mov
pop
lret
add
aas
daa
sbb
aad
mov
call
adc
mov
push
scas
ret
and
mov
jmp
mov
in
loopne
and
dec
and
je
fdiv
enter
test
fcompl
adc
or
and
lods
pushw
fwait
ss
cmp
push
lret
and
mov
mov
jbe
sbb
aas
push
rcr
mov
pop
sti
xor
insb
inc
jae
mov
inc
sub
loope
add
and
push
push
lods
rcrb
loopne
and
aas
fnsave
mov
lahf
insl
cmpsb
cmc
in
pop
arpl
out
rorb
adc
jb
int
dec
mov
jne
stc
adc
iret
push
js
mulb
lret
push
mov
scas
pop
daa
cmp
and
insl
sbb
stos
pop
jb
sbb
das
aam
filds
sub
lahf
inc
leave
push
mov
pop
cmp
or
rol
nop
adc
mov
push
xor
test
insb
js
push
das
test
cmp
scas
cmp
ret
ret
jl
push
inc
dec
repz
jge
mov
out
jp
mov
mov
inc
test
add
mov
and
mov
jg
fiaddl
dec
in
cmp
stos
in
xchg
cmp
cmp
lahf
push
sbb
test
cwtl
imul
push
cmc
ret
push
sub
mov
rolb
daa
icebp
jb
shlb
pushf
jmp
add
dec
lret
fsubs
roll
mov
scas
lods
adc
fsubl
xor
jo
mov
outsb
jp
cwtl
lea
mov
jnp
push
push
xor
xchg
insb
cmp
fs
adc
jbe
xor
repnz
inc
jno
inc
jecxz
sahf
mov
inc
jne
sub
adc
cmp
add
lock
add
ret
xchg
sub
sbb
fwait
or
and
sbb
rcrl
inc
push
out
mov
adc
push
xchg
push
in
arpl
jmp
cmpsl
stos
pusha
rcrb
xor
jne
popa
mov
inc
jbe
int3
sub
add
out
adc
incb
pop
loope
sub
xchg
idiv
sub
jge
mov
xchg
and
out
cmpsb
shll
sub
int3
cmpsb
mov
cmp
in
cmp
in
inc
insb
sbb
or
gs
in
xchg
arpl
cmp
mov
xchg
gs
std
loop
into
std
xchg
pop
mov
mov
inc
popf
sti
mov
mov
push
pop
mov
sahf
add
in
xlat
cmc
lcall
mov
std
jnp
verw
leave
repnz
mov
rorb
cmp
mov
dec
jle
aaa
insb
adc
in
lahf
insb
xchg
cmpsl
clc
or
jno
pop
cli
adc
sub
insb
cltd
icebp
or
ljmp
sub
push
cs
dec
inc
mov
rorb
ljmp
mov
out
mov
jnp
ss
adc
iret
mov
jne
cmp
mov
int
xchg
lret
push
icebp
jecxz
sbb
mov
enter
push
mov
ret
fwait
loop
pop
flds
xchg
clc
popf
inc
jns
pop
test
in
aas
jp
and
or
lret
cmpsb
mov
shlb
psubd
adc
outsl
je
outsb
sub
ret
aas
sbb
inc
das
fsubl
int
repz
dec
shll
andb
lret
in
nop
mov
mov
add
inc
mov
inc
cmp
jp
aam
ret
lahf
pop
and
pop
sarb
push
andb
stos
xor
mov
mov
dec
sarb
loope
pop
lods
push
cld
mov
mov
icebp
lods
int3
pop
xor
mov
jmp
add
jb
sub
cli
add
pop
fstp
pop
mov
scas
push
fcmove
sahf
sbb
ds
loope
inc
jecxz
pop
xor
mov
jns
test
add
scas
in
aas
push
iret
leave
sub
cmpsb
dec
xorb
or
sub
mov
jno
lahf
jns
bnd
insb
mov
imul
cld
inc
rolb
scas
sub
packsswb
push
stos
sarb
das
fnstcw
jle
jge
push
fildll
mov
pushf
push
xchg
in
icebp
jns
popf
shlb
cmpsl
cld
out
and
adc
movsb
int3
add
mov
mov
cmpsl
lret
fldl2e
mov
and
pop
mov
xlat
pop
adc
cmp
mov
ret
xchg
xchg
xchg
shll
daa
mov
or
lcall
testb
lcall
add
fwait
ja
pop
jbe
sbb
adc
lds
test
jnp
in
ljmp
shll
shrb
loope
pop
mov
repz
sbb
shlb
repnz
jno
inc
and
and
jb
bound
xchg
loope
icebp
mov
mov
mov
and
jno
inc
and
and
jb
bound
xchg
in
icebp
mov
mov
mov
and
adc
jo
inc
and
and
jb
push
adc
shll
jb
bound
sahf
std
fistpl
test
popf
out
and
mov
out
inc
call
xor
inc
adc
addr16
pusha
addb
daa
mov
mov
out
xchg
loope
shll
and
jo
add
pop
popa
pop
push
jne
daa
mov
mov
out
xchg
loope
shll
and
adc
push
or
inc
cs
rcl
cwtl
fstpl
shll
mov
push
and
jge
cmc
mov
aas
lret
subl
lock
js
mov
out
mov
mov
mov
jmp
addr16
aad
add
mov
sbb
pop
divl
inc
mov
lcall
add
jbe
mov
out
xchg
int
xor
rcrl
out
adc
xor
inc
enter
aaa
pop
cmp
jb
sbb
xchg
jmp
and
stos
push
adc
add
aam
mov
cmp
xchg
add
adc
sub
sub
pop
inc
into
and
inc
mov
add
push
and
out
xlat
mov
out
xchg
loope
shll
and
ja
addr16
popa
pop
push
aaa
inc
dec
lds
iret
mov
stc
movsb
negl
xchg
xor
and
xor
loop
in
leave
xchg
xchg
filds
cmpsl
arpl
dec
xor
or
je
insb
add
ja
sahf
xchg
repnz
mov
xchg
mov
cmpsl
xor
inc
adc
addr16
popa
pop
push
aaa
inc
daa
mov
mov
out
xchg
loope
shll
and
ja
addr16
popa
pop
push
aaa
inc
daa
mov
movsb
mov
ljmp
mov
sbb
in
add
in
popa
imul
xchg
mov
ja
push
mov
jbe
movsb
jmp
mov
jg
fwait
jp
js
xchg
pop
xchg
test
mov
pop
sbb
mov
cltd
outsb
in
xchg
adc
dec
cmp
in
cmp
add
pop
cmp
cmp
outsl
add
ja
push
push
jns
xchg
xchg
or
out
leave
or
xchg
cmp
inc
and
dec
push
pop
adc
push
adc
fstps
mov
daa
mov
ss
pop
daa
cmp
fcomps
lock
orl
ljmp
sbb
mov
jle
mov
gs
addr16
cld
dec
adc
xor
xchg
in
jl
mov
jp
jp
fmul
and
sub
call
shrb
mov
xor
pop
mov
jge
stos
cmc
dec
out
mov
add
add
insb
xlat
and
add
fidivrl
test
aam
xor
push
ljmp
sti
mov
stos
mov
hlt
out
adc
je
repz
xor
int3
and
outsb
dec
xchg
or
add
lock
mov
fistl
out
sarl
arpl
jg
dec
pop
addl
shlb
push
cmpl
jmp
gs
cmp
insb
inc
movsb
or
push
ret
sbb
lea
mov
clc
sub
push
fldenv
jecxz
cmp
stos
popa
push
pop
movsb
pushf
fisttpl
aam
test
pusha
cmp
sbb
inc
lock
in
mov
cmp
incb
xor
jns
add
jp
mov
cmpsb
sub
hlt
daa
push
jo
sbb
int3
cmp
xchg
stos
rcrl
jge
push
std
div
mov
arpl
sub
xor
pop
loope
push
fiadds
mov
xchg
pop
pop
add
stos
push
pop
or
and
das
mov
jg
testl
or
or
mov
shll
sub
int3
pop
push
fsubl
inc
dec
lret
cltd
js
int3
rcrl
rcr
in
bnd
pushf
fs
dec
dec
add
scas
hlt
ljmp
add
xor
push
gs
xlat
subl
jp
and
mov
mov
cmpsb
adc
xchg
pop
sbb
mov
add
lret
das
pop
mov
or
gs
inc
mov
out
push
jmp
lret
and
jle
push
push
adc
rcr
cmc
das
mov
or
mov
negb
jle
lock
pushf
repnz
mov
add
lods
push
in
xchg
out
mov
sub
cltd
lret
pop
insl
daa
js
inc
sub
mov
or
ret
jp
mov
movsb
jle
and
push
cld
insl
hlt
mov
mov
nop
mov
push
inc
shlb
and
xchg
and
enter
rcr
adc
test
push
xchg
jle
xchg
push
xchg
xchg
arpl
mov
adc
pop
mov
lock
jb
mov
pop
xor
pop
sbb
repnz
popa
mov
sbb
nop
mov
mov
push
sub
loope
rorb
in
outsl
hlt
mov
jo
shl
stos
fsubrl
adc
adc
hlt
dec
jle
leave
outsl
rol
into
inc
int
adc
push
mov
xchg
mov
daa
ljmp
push
repnz
sbb
lret
rcll
jg
push
jnp
test
cmp
push
insl
mov
icebp
push
jmp
cmpsb
or
fwait
mov
push
push
insl
out
mov
mov
fwait
test
cmp
ja
ljmp
push
lret
add
add
push
or
cld
inc
loopne
or
jp
dec
cmpl
stos
dec
push
fstpt
test
sub
inc
out
fsubrl
push
cmp
scas
test
in
out
andl
hlt
adc
sbb
push
adc
sub
jle
adc
xchg
xor
jbe
mov
test
in
mov
push
cmp
xor
bnd
mov
mov
and
jge
sbb
pop
inc
cli
fcmovu
pop
ds
adc
dec
inc
cmp
mov
jp
mov
xchg
xor
clc
popf
dec
mov
sub
add
dec
arpl
out
push
sub
imul
test
mov
lcall
out
std
aad
scas
int3
loop
rcrb
and
out
mov
pusha
out
cli
pminub
mov
add
and
lahf
ja
movsl
jnp
int3
call
sbb
mov
clc
cmp
arpl
in
lret
fbld
shl
fwait
cwtl
daa
push
repz
outsl
add
andnps
push
loopne
data16
mov
fsub
test
test
sbb
cmp
dec
inc
xchg
shlb
mov
ror
pop
je
lods
xlat
fstpt
rol
mov
sahf
imul
xlat
mov
jne
and
dec
add
xor
mov
icebp
pushaw
xor
sti
push
push
ficoml
stos
push
and
mov
cmpsb
xor
push
mov
dec
and
jecxz
dec
incl
cmc
les
ljmp
flds
nop
jp
inc
out
in
push
ljmp
sbb
add
psubw
aas
or
stos
imul
push
sbb
subb
dec
das
inc
mov
or
lea
scas
xchg
push
mov
inc
mov
clc
les
pop
add
rorl
fldenv
ret
ja
movnti
lret
sbb
setne
xchg
jp
dec
pop
push
xchg
es
rcll
lock
pop
inc
iret
rcl
pop
fadds
cltd
sbb
and
bound
aad
rclb
xor
movsl
adc
arpl
fnstcw
inc
mov
push
jns
pop
cld
or
sbb
ds
out
pusha
mov
call
fbstp
mov
push
faddl
lock
loope
into
push
xor
fisttpll
sbb
pushf
ja
nop
inc
dec
frndint
mov
sbb
cmp
and
mov
loop
nop
mov
ss
loope
fwait
sub
lcall
cmp
inc
js
add
add
int3
inc
push
lods
xor
or
mov
ja
sub
or
test
mov
mov
sub
shrl
push
add
sti
insl
das
xlat
pop
test
std
xorb
out
pop
into
jb
push
inc
xor
pop
sarl
xchg
mov
pop
push
stos
adc
or
sub
sub
cmp
repnz
scas
push
pop
into
test
test
hlt
push
les
scas
xchg
daa
pop
xor
jbe
cmp
shrb
pop
leave
mov
pusha
test
scas
subb
das
jl
sbb
mov
mov
lods
sub
addr16
imul
adc
ficoml
and
outsb
or
sbb
stos
add
push
out
jmp
sbb
out
pop
int3
movsl
xor
push
ret
mull
test
int
popf
mov
std
jno
int3
dec
out
mov
or
adc
mov
xor
jno
pop
mov
jae
movsbl
jmp
push
pop
mov
into
iret
xlat
cmp
cli
cwtl
mov
cltd
add
xor
cs
divb
les
inc
cwtl
lods
pop
adc
mov
ss
lret
daa
push
jg
fistl
inc
pushf
mov
mov
addr16
bound
xchg
nop
in
push
insb
cmp
adc
or
dec
popf
and
inc
adc
arpl
mov
mov
add
cmpsb
enter
mov
fisttpll
in
cmc
outsb
mov
hlt
call
sub
mov
ja
xor
jo
inc
pusha
rep
cltd
icebp
sbb
inc
lods
cmp
jg
lds
mov
lret
jne
and
icebp
loop
out
mov
andb
xlat
jae
sbb
mov
fiaddl
push
pop
pusha
aaa
call
sbb
repnz
dec
xorl
mov
mov
mov
out
and
repnz
lcall
xchg
sub
mov
inc
fimull
lods
arpl
sbb
lahf
push
cmp
jl
mov
out
jo
xlat
sti
pop
pusha
sub
cmp
scas
sti
mov
pop
jb
mov
add
xchg
add
sub
xchg
pandn
sti
pusha
cli
fneni(8087
xor
sub
adc
aam
loope
std
adc
fs
fwait
push
jns
cmp
jno
and
stos
div
xor
pushf
pushf
push
mov
adc
shrl
lahf
jb
scas
pop
add
pushf
iret
dec
or
pop
insb
fsubs
or
and
adc
or
push
fldl
jmp
les
pop
out
ret
mov
and
mov
push
jge
sbb
jg
fcmovnbe
xor
dec
int3
xchg
xor
orl
jl
ret
in
fcomi
fwait
push
push
mov
dec
and
dec
fists
mov
mov
dec
adc
xchg
xor
mov
imul
scas
mov
dec
ret
sarl
leave
lea
faddp
lds
xor
xor
jae
sub
jo
into
add
sbb
test
adc
aad
cmp
push
jb
imull
pop
and
mov
les
pop
mov
ds
mov
xchg
mov
mov
push
jg
and
cli
fidivs
jle
loope
jp
dec
outsl
xor
inc
repnz
xchg
pop
and
mov
in
adc
push
aas
cmpsl
sbb
negb
mov
out
pop
pusha
push
cmpsb
pop
adc
pop
mov
inc
cwtl
sub
push
jle
mov
dec
add
not
mov
jl
ja
inc
dec
jne
add
loope
dec
dec
adc
xchg
in
add
mov
or
pop
imul
call
movsb
ret
add
inc
repnz
loopne
dec
ds
inc
mov
test
gs
nop
test
pop
int
xchg
out
push
sbb
fcomps
aad
mov
xorl
dec
mov
scas
or
lahf
dec
popa
or
mov
mov
jle
sub
andb
inc
repz
pop
jmp
popa
sbb
add
inc
jmp
repz
mov
movntq
imul
jle
into
cs
mov
or
lea
pusha
cltd
cmovae
repz
xchg
dec
call
enter
push
push
sub
pop
daa
loopne
ss
dec
or
cvtps2pi
add
pop
push
subb
pop
push
mov
dec
cmp
mov
rorb
sbb
orb
dec
mov
lds
xor
mov
shl
mov
cmpsb
std
cmp
int
lcall
sbb
pop
aas
sbb
pop
fwait
pop
pop
push
or
sarl
mov
dec
xchg
outsl
mov
nop
sub
insb
xlat
sub
mov
adc
add
and
mov
or
push
mov
push
dec
out
pop
adc
ret
and
mov
add
pop
in
xchg
dec
fstpt
sbb
push
jle
push
pop
dec
jmp
aad
lret
jl
push
or
das
cld
mov
mov
pushf
mov
insl
xor
std
out
cmp
push
xchg
rorl
fisubs
pop
sub
lods
andb
ret
add
test
sub
mov
push
sub
xchg
ljmp
add
xor
jle
shll
inc
fiaddl
pop
mov
and
add
icebp
pop
loop
xor
mov
leave
jnp
mov
leave
jmp
add
sub
add
pop
jbe
aaa
sbb
add
adc
adc
pop
mov
std
in
enter
mov
adc
scas
es
jg
js
pop
or
lcall
shrb
ss
jno
movsl
pop
or
sahf
inc
fdivrl
cmpsb
in
jnp
pop
stos
xor
iret
imul
imul
enter
sahf
pop
sbb
adc
jae
mov
addl
mov
insl
call
outsl
push
jp
mov
cli
popf
lock
mov
pmullw
jnp
int
aam
jae
jns
lods
inc
call
xlat
mov
leave
sbb
mov
mov
rcr
aam
xlat
dec
sbb
mov
test
dec
sahf
stos
pusha
clc
pop
jns
cmc
addb
or
dec
fmull
xor
jb
inc
mov
xchg
mov
out
daa
pusha
rorl
std
lcall
cmpsb
insb
adc
sar
testb
dec
aam
pushf
cmp
imul
and
pop
adc
pusha
sbb
xchg
and
sbb
cmpl
and
pop
or
mov
mov
cmp
rorl
scas
dec
jo
add
shll
pop
xor
pop
jecxz
cmp
insb
scas
adc
xor
adcb
mov
cmpsb
mov
xchg
add
xchg
sbb
bound
dec
nop
and
inc
dec
arpl
ds
mov
je
psubusb
adc
mov
adc
mov
in
icebp
xor
scas
fmulp
imul
mov
dec
fxch
int3
data16
ret
adc
mov
movsb
mov
shlb
popa
mov
dec
xchg
mov
fscale
into
push
mov
pop
add
pop
pushf
scas
ret
sub
cmpsb
loopne
sti
dec
arpl
cmp
imul
lock
xor
fadds
aaa
xor
adc
xchg
test
pushf
push
cmc
ss
int3
pushf
sub
movsb
loopne
add
push
pop
xor
adc
push
into
mov
cmp
inc
sbb
lods
enter
add
cmp
jp
jg
mov
dec
adc
leave
pop
inc
mov
leave
jno
pop
or
dec
aas
mov
cld
and
pop
divl
sub
out
movsb
xchg
xchg
les
xor
js
out
data16
mov
cmpsb
sub
mov
pop
sbb
jne
xchg
jg
nop
add
out
fisttps
enter
xor
mov
jae
jp
dec
cmp
mov
jnp,pn
push
xchg
pop
sub
xchg
aam
and
pushl
xchg
dec
into
inc
aad
dec
jns
or
stos
or
sarl
and
xchg
test
inc
adc
pop
movsb
imul
add
repz
lret
add
jns
mov
jg
ss
mov
sbb
stos
push
push
mov
insl
subb
lods
test
mov
gs
push
jo
dec
xor
mov
xchg
fidivl
popa
dec
mov
aaa
aam
std
xchg
bound
aas
loope
out
dec
jg
repz
lahf
lods
ja
rorb
xchg
and
imul
xor
lea
pop
icebp
xchg
sub
or
jno
xor
jae
dec
and
inc
mov
xor
in
insl
mov
daa
dec
outsl
lret
push
repnz
xchg
mov
inc
insl
repz
out
xchg
addl
and
out
push
jl
sub
mov
jp
std
shrl
pushl
enter
adc
dec
pusha
adc
add
push
adc
sbb
and
adc
cmpsb
mov
xor
mov
sub
xchg
out
jp
int
sahf
addr16
adc
jle
pusha
mov
addr16
push
sbbl
shll
jns
or
in
aaa
mov
add
shl
inc
jge
and
fsubl
repz
xchg
clc
add
push
test
lret
cld
loopne
fdivrp
adc
xchg
jns
in
test
and
dec
cmpsl
call
fsts
inc
pop
mov
jg
jns
iret
xchg
stos
or
call
push
adc
push
mov
dec
jns
fisubrs
or
insl
roll
and
xor
das
out
sbb
repz
cmc
iret
jmp
mov
sbb
mov
cld
loop
push
mov
cmp
mov
xchg
xchg
std
jp
inc
loope
js
add
adc
lock
push
pop
dec
test
add
movsl
push
pusha
push
int
inc
mov
push
mov
pop
js
mov
mov
scas
cmp
push
xor
mov
mov
dec
fnstcw
add
add
or
fimuls
inc
mov
push
sets
adc
xchg
and
lret
rclb
cmp
adcb
cmpsb
cltd
xor
call
adc
xor
cmp
iret
out
mov
fucomp
ljmp
sub
arpl
xchg
mov
testl
xchg
or
xchg
mov
mov
lret
jno
or
mov
les
jo
adc
push
cmp
jae
iret
pop
cmp
pop
insb
mov
add
movsl
jle
or
jnp
pop
mov
inc
cmp
test
lahf
rcll
xor
push
aas
fidivrl
sbbb
ret
pop
outsl
cmpsb
or
xchg
mov
insl
in
dec
mov
leave
ror
cld
adc
xchg
imul
sbb
dec
ja
sub
fcmovb
inc
xlat
inc
inc
mov
sub
fwait
xlat
stos
and
div
sub
orl
adc
and
jle
jbe
repz
out
xchg
mov
fcmovnbe
punpckhbw
xor
fldt
xor
lret
lcall
scas
lret
bound
leave
loop
aaa
in
xor
pop
subl
fstpt
cmp
out
aad
data16
sti
cmpsl
insb
nop
fiadds
lods
mov
mov
clc
mov
cs
cmp
push
sub
bound
movsl
xor
imul
mov
int
enter
jp
mov
cmpsb
pop
dec
dec
sbb
pop
adc
pop
cmp
jge
test
movsl
pop
mov
sub
jecxz
dec
sahf
test
inc
mov
fisubrl
cltd
les
mov
sbb
into
pop
ror
cwtl
enter
adc
ficoms
mov
roll
push
mov
ja
mov
inc
fwait
jle
cltd
pusha
mov
inc
clc
or
sbb
addr16
nop
mov
iret
xor
addr16
sub
enter
ds
xchg
mov
testb
outsb
pop
or
adc
fwait
in
mov
sbb
nop
pusha
xchg
js
pop
jg
jns
testl
daa
aas
dec
jecxz
push
cltd
xor
lods
and
xchg
pop
pusha
inc
dec
dec
push
stc
clc
mov
mov
mov
xchg
outsb
or
xchg
pop
pop
clc
dec
int
mov
out
mov
ljmp
push
fmull
xor
inc
jbe
rclb
pop
sub
shlb
cld
stos
mov
add
lds
jg
nop
mov
fdivrs
sbb
enter
sub
negb
push
scas
add
outsl
or
lahf
fwait
call
jb
inc
mov
mov
and
sbb
and
dec
jo,pt
mov
xchg
xchg
ret
stos
push
jmp
xor
cli
mov
lahf
push
pop
dec
push
test
pushf
dec
sub
lahf
aaa
es
cmp
fwait
push
in
xchg
dec
inc
lea
add
cltd
jb
and
fwait
xchg
pusha
add
bound
out
or
mov
movsb
ja
pop
push
jb
aaa
pop
cmp
addl
sbb
test
push
ret
lcall
mov
cmc
pushf
dec
fisttpll
out
and
inc
les
xor
mov
inc
push
mov
mov
xor
pop
dec
dec
pop
xchg
inc
fisubrs
fsubp
insl
mov
jp
mov
mov
mov
jo
pop
jb
mov
inc
mov
sbb
push
pop
mov
cwtl
mov
add
push
mov
sti
lret
int
or
and
add
daa
push
sahf
outsb
outsl
lahf
fcoml
mov
add
das
mov
daa
dec
pushf
mov
out
dec
sar
and
cwtl
jbe
cmp
inc
outsl
fcmovne
cwtl
jecxz
cli
inc
fdivrs
adc
xor
add
xchg
ljmp
std
xchg
int
cmp
mov
dec
sarb
mov
cmc
dec
and
sub
adc
push
mov
outsl
push
fsubs
jb
insl
stc
xor
and
add
add
lock
push
or
aaa
pop
in
int
out
push
nop
in
and
ljmp
jmp
cmp
es
pop
pop
sahf
gs
add
lods
inc
ja
pop
cwtl
testl
cmpsl
xor
inc
adc
addr16
popa
pop
push
aaa
inc
daa
mov
mov
out
xchg
loope
shll
and
ja
addr16
popa
pop
push
aaa
inc
daa
mov
mov
out
xchg
loope
shll
and
ja
addr16
popa
pop
push
aaa
inc
daa
mov
mov
out
xchg
loope
shll
and
mov
lahf
jmp
fdivs
popl
xchg
movsl
or
ss
daa
xor
pop
pop
sbb
inc
pop
inc
pop
mov
cmpsl
mov
imul
out
xlat
iret
fbld
sub
or
ja
push
scas
push
dec
inc
pop
scas
mov
mov
out
idiv
out
xlat
mov
dec
jp
pop
ja
or
or
adc
scas
enter
icebp
adc
add
es
push
add
mov
fdivl
test
mov
add
repnz
out
pop
cmp
fs
push
inc
push
push
mov
push
xlat
jmp
stc
pop
daa
ljmp
dec
push
pop
cmp
sti
xor
arpl
pop
mov
fdivr
das
mov
lcall
inc
pop
mov
mov
pop
mov
aas
sub
shlb
clc
loopne
cmp
sbb
inc
xor
sbb
jg
iret
incl
lcall
aas
push
dec
negl
popl
addr16
push
mov
rorb
in
and
iret
push
enter
push
push
rdmsr
cmp
or
inc
dec
jle
mov
test
out
idiv
xlat
faddp
cs
aas
daa
movhps
push
outsl
ja
push
fcmovne
ret
mov
sahf
test
mov
inc
dec
inc
fs
arpl
add
sub
dec
sub
fcom
mov
fwait
pushf
out
xlat
stos
xchg
mov
push
inc
pop
pop
jnp
pop
ja
or
and
and
shr
lret
out
out
ljmp
fbstp
das
daa
aas
pop
sysret
pop
ja
addr16
dec
inc
pop
mov
cmpsl
mov
imul
out
xlat
iret
fbstp
das
daa
aas
pop
sysret
pop
ja
addr16
dec
inc
pop
mov
mov
sub
test
push
mov
sbb
mov
sub
gs
sbb
pop
and
mov
das
pop
push
mov
into
jg
push
pop
cmp
lds
or
jg
jo
sub
push
sub
and
in
inc
xchg
fwait
in
cmc
mov
sub
pop
mov
and
popf
mov
push
nop
xlat
inc
and
or
sti
xlat
aam
ja
sub
lret
cmpsb
xor
pusha
and
outsl
jmp
cwtl
test
ret
xor
nop
shl
add
jne,pt
cltd
mov
jbe
hlt
aaa
push
push
push
push
xor
mov
xor
dec
push
popa
orb
mov
adc
jne
mov
cmp
jecxz
arpl
out
pop
cmp
call
xchg
in
push
dec
add
pop
ret
sbb
int3
je
mov
push
xchg
test
push
mov
inc
sub
mov
mov
cmpsb
iret
imul
pusha
nop
les
mov
mov
test
push
pop
sbb
shlb
andl
pop
sub
cmpb
cmp
fisttpl
imul
clc
mov
dec
cli
inc
in
ljmp
cmp
mov
pop
pop
hlt
js
ficompl
xor
jbe
dec
ja
mov
mov
push
sti
xor
jo
push
ficompl
xor
lret
inc
mov
or
loope
and
jmp
int
in
or
adc
sbb
cltd
clc
cli
test
add
or
jge
push
insb
jl
mov
cwtl
dec
mov
pop
jmp
cmpsl
sbb
push
in
ret
inc
jb
mov
lret
jle
xchg
in
ror
out
bnd
add
adc
mov
dec
pop
xor
mov
xor
fwait
jecxz
xor
lea
js
cltd
inc
sub
cltd
test
add
icebp
push
fxch
fst
cmp
outsb
fidivrs
lcall
es
fsubrs
shll
nop
leave
mov
dec
arpl
movsb
or
xchg
orb
push
adc
jle
dec
loopne
cmp
ljmp
sbb
dec
mov
pop
inc
pop
ffree
lea
mov
test
cmpb
icebp
xchg
sub
pop
jl
mov
sub
and
sbb
xchg
sbb
sub
xor
jecxz
js
arpl
pop
or
imul
test
test
hlt
pop
adc
jae
outsl
jl
fnstsw
add
mov
cmp
xor
adc
xchg
mov
xor
popa
xchg
lret
push
cmc
or
scas
cmpsb
fwait
aam
cmpsl
or
mov
test
stc
mov
clc
std
or
xchg
add
out
or
rcrl
sbb
and
ja
dec
outsb
sar
daa
mov
lock
sti
fisubrl
nop
sar
mov
pop
mov
ficoms
jge
lret
cmp
aas
out
jl
repnz
xor
pop
mov
and
mov
adc
xchg
jo
imul
dec
xchg
add
push
dec
iret
popf
into
shrl
pop
xor
mov
xlat
loopne
stos
hlt
dec
inc
and
nop
test
test
test
das
ja
mov
sbb
cmp
xchg
in
negl
jle
mov
push
xchg
jg
mov
hlt
xchg
or
cmp
xor
adc
leave
pop
jbe
insb
shrb
push
divb
push
and
fwait
pop
push
fiaddl
faddl
sbb
gs
test
pusha
or
in
push
cmp
inc
leave
xor
ret
sub
xchg
xchg
movsb
xlat
or
out
pusha
xor
cmp
push
rolb
inc
cmp
jno
bswap
div
decl
sub
lret
cmpsl
mov
adc
lahf
ljmp
nop
push
push
or
dec
sbb
add
fwait
int3
outsl
cmp
es
add
pop
nop
adc
loope
adc
mov
xchg
imul
bound
xchg
imul
fimuls
xchg
and
inc
xor
mov
xchg
mov
in
push
and
or
into
sub
shrb
add
scas
cmp
out
lds
test
ljmp
das
aam
cltd
dec
out
lods
jge
push
out
and
push
cmp
repz
sub
sub
cmpsb
cmp
cmpb
movsb
sti
mov
sbb
mov
mov
push
or
lea
xchg
sbb
hlt
outsb
lods
mov
mov
imul
jecxz
das
insb
sub
and
test
insl
add
imul
mov
adc
and
push
out
aad
jo
loop
pop
cmp
mov
pop
adc
xchg
sbb
insb
pop
cltd
push
and
pop
jae
pop
mov
xchg
xchg
loope
or
adc
stos
mov
add
cli
nop
push
ss
mov
and
add
jecxz
fisttps
inc
mov
lds
add
mov
mov
sahf
adc
pop
pop
inc
dec
loop
es
xchg
cld
repnz
mov
mov
or
mov
xlat
add
in
in
push
hlt
in
fisttpll
sub
cmpl
pusha
daa
lcall
push
sbb
cwtl
pop
or
es
dec
jge
mov
mov
subb
pop
enter
jnp
dec
mov
in
and
lds
stc
mov
out
fstl
movsl
or
lods
add
xchg
inc
sub
sub
jae
xchg
shrl
pushf
add
enter
movb
andb
sbb
aas
and
xlat
fdivs
xor
jae
mov
mov
add
cmp
ljmp
xor
je
test
fisttps
aam
xchg
lcall
fwait
xchg
adc
int3
shlb
push
repnz
add
std
mov
mov
movsb
and
incb
lret
or
ret
dec
scas
jmp
sub
stc
jp
jns
ficoml
sti
and
test
sti
adc
jmp
adc
dec
push
push
push
push
test
cmpsb
adcb
testl
iret
jno
pop
sub
rcrb
stc
adc
jmp
mov
xorl
sbb
addr16
jae
and
sub
and
cmp
arpl
cmp
xor
repz
xchg
or
or
dec
push
sub
dec
xor
lods
xor
shlb
xchg
and
ds
mov
pop
or
sbb
mov
mov
cmp
icebp
divl
adc
jo
in
les
and
cwtl
test
add
and
mov
icebp
psubsb
nop
es
xchg
pusha
aam
jo
pop
jg
fldenv
or
push
fadd
sub
xor
fs
stos
not
jmp
push
sbb
mov
mov
mov
push
push
sbb
orl
xlat
xchg
mov
les
push
cmp
fstl
fs
add
pop
aad
jecxz
hlt
pop
jmp
and
sub
rorb
jecxz
pop
ja
ja
loopne
shll
dec
into
cwtl
sbb
xchg
xchg
xlat
enter
push
clc
sub
mov
mov
add
and
bound
orl
ds
push
mov
push
call
push
sbb
push
or
dec
mov
fstpt
dec
jl
push
inc
neg
in
rol
add
sub
xchg
lock
mov
or
mov
aam
daa
imul
jl
jne
lcall
dec
jp
cmp
mov
out
aas
push
xor
pmuludq
mov
mov
pushf
clc
lahf
dec
xchg
fdivs
sbb
mov
add
cltd
inc
lahf
or
fsubr
add
shll
popa
push
hlt
mov
mov
nop
div
ds
mov
faddp
rep
aas
jbe
aam
imul
into
mov
cli
push
cmp
xchg
mov
outsb
xchg
xlat
xchg
inc
sub
jae
pop
hlt
dec
xchg
lahf
jbe
loop
xlat
inc
cmpb
test
popf
mov
push
lds
adc
xchg
dec
out
dec
std
aad
mov
pop
or
sub
daa
mov
lahf
fists
enter
mov
xchg
pop
mov
out
pop
push
pop
jns
and
push
sub
mov
inc
lods
addb
lock
test
sub
leave
fiadds
mov
lea
cli
leave
and
lock
xor
in
aaa
addr16
jl
lds
orl
cmp
imul
and
cmpsb
pop
leave
inc
lods
push
out
fsubs
aad
cs
lds
fistl
nop
jo
jecxz
xchg
xchg
push
testl
add
pop
push
pop
mov
lret
clc
scas
aas
sub
sub
daa
outsb
xchg
and
loopne
xor
inc
fwait
mov
in
adcb
fdivrl
dec
jns
dec
rcrb
cmp
jl
ja
mov
mov
mov
cmp
aad
pop
cmpsl
loop
in
sbb
add
pop
dec
lock
pop
sarb
movsl
xchg
aam
je
ja
and
aaa
loopne
xchg
mov
in
mov
push
fisttpl
sarb
push
sbb
in
lcall
js
or
imul
mov
pop
bndldx
cs
mov
int
lods
cld
rolb
inc
in
int3
dec
xor
sbb
mov
loopne
and
test
mov
inc
inc
incb
add
aam
repnz
xor
and
adc
roll
push
and
sahf
fcompl
sub
inc
idivb
movsl
mov
les
loope
ds
mov
mov
mov
dec
in
fcoml
jns
add
daa
lahf
or
lret
push
push
adc
cwtl
jae
xchg
sub
insb
dec
or
sub
push
out
add
xchg
xor
adc
add
sbb
test
fisubs
push
sub
mov
sarb
call
jno
popf
pop
adc
add
mov
je
fdivp
inc
jb
gs
sub
pop
ljmp
insb
clc
pop
cmp
aas
outsl
dec
pusha
dec
sbb
push
pop
pop
or
pusha
push
in
xor
lret
bound
outsb
insb
mov
mov
je
daa
int3
fs
xchg
xchg
mov
dec
inc
inc
adc
test
pop
icebp
cmp
aad
or
jbe
arpl
jmp
jo
pushf
jno
mov
sbb
mov
fcomps
hlt
cwtl
test
push
pop
sub
push
fwait
aas
cmp
scas
outsl
pop
outsb
adc
int3
ljmp
aaa
or
cmpsl
in
in
ljmp
inc
adc
jp
in
in
push
lret
testl
pop
movsb
jo
or
fnstenv
jle
jno
nop
roll
add
repz
cmc
idivl
jp
pop
jns
mov
loope
test
out
mov
jmp
cmc
xchg
aam
fcompl
mov
stos
int
ret
rolb
push
cmpl
fcompl
arpl
inc
pusha
lods
jne
cli
xor
pop
ja
lret
mul
test
xor
push
imul
adc
xchg
sub
and
jb
xchg
pop
fistps
in
mov
pop
inc
aam
mov
adc
sti
or
fadds
pop
aas
or
fs
rcrl
repnz
scas
pop
mov
xchg
ljmp
push
pop
jns
cmp
loope
push
jecxz
loop
insb
insl
in
ds
mov
pop
sbb
jo
xor
subb
jg
arpl
lcall
rclb
jmp
jo
or
icebp
mov
ret
cmpsb
pop
mov
jl
lea
push
push
outsl
dec
sarl
pop
popa
sbb
notb
icebp
pushf
cmp
loop
xchg
xchg
sti
hlt
sbb
sbb
jae
pop
jne
icebp
pop
sbbl
jmp
out
rcrl
outsl
aad
or
test
arpl
hlt
fnsave
cmp
xchg
inc
inc
mov
push
data16
je
flds
popf
cmp
or
dec
call
pop
cmp
dec
je
in
mov
stos
nop
jne
mov
xchg
cltd
lods
ja
sub
xor
xchg
and
fs
adc
pop
fdivl
paddusb
cld
xor
or
mov
sub
mov
jnp
call
loop
and
in
mov
enter
aas
or
adc
stc
ds
mov
pusha
sahf
lods
sub
pusha
lret
hlt
sbb
clc
jae
mov
inc
cli
dec
pop
pop
mov
mov
lods
mov
and
add
and
add
sub
ret
into
push
cmpsb
neg
cs
mov
mov
repz
lcall
pop
scas
dec
and
sbb
sub
xchg
inc
lahf
loop
rclb
cwtl
aad
cwtl
sub
addr16
dec
push
ja
mov
in
or
inc
icebp
shrb
test
mov
cwtl
sub
jbe
mov
insb
stc
push
jo
mov
jb
mov
aas
jmp
movsb
mov
fwait
cli
jge
mov
jge
mov
adc
push
and
shl
shll
dec
aad
push
cmp
les
sbb
push
in
jns
stos
pop
or
out
fcomi
or
loope
xlat
repnz
cld
cmp
bound
inc
nop
mov
mov
sbb
mov
jb
pop
jl
enter
inc
or
imul
xor
pusha
inc
roll
xchg
imul
daa
aam
andl
mov
xchg
ffreep
and
test
xchg
add
mov
xor
roll
ret
pop
mov
js
pop
cmp
inc
xor
or
jno
inc
jmp
or
rcrl
pop
mov
jp
cmp
pop
xchg
push
lcall
push
lds
test
in
sbb
andl
mov
mov
stos
or
pop
cltd
loop
andb
xchg
je
in
mov
daa
xchg
aaa
in
xlat
enter
xor
sub
lea
push
repnz
mov
dec
dec
xchg
mov
adc
pop
test
xor
sbb
loop
les
hlt
pop
in
jg
shll
and
add
xchg
cmc
add
sbb
add
cmp
pop
out
inc
leave
in
and
sub
mov
dec
in
out
pop
pop
lcall
push
stos
movsb
lahf
adc
pop
lods
lahf
decl
out
hlt
loope
jae
jbe
xchg
mov
aam
arpl
rcrb
loopne
inc
mov
mov
data16
xor
pop
je
pop
jg
push
lret
cmpsl
mov
fcompl
test
sbb
mul
sub
adc
fiadds
outsl
xor
dec
adc
sbbb
fcoms
stc
sub
xchg
lock
movsl
pop
inc
dec
and
test
stos
mov
sub
cmpsl
mov
xor
mov
pop
pop
mov
arpl
xor
es
lret
mov
inc
rorb
hlt
inc
jle
push
jne
push
mov
out
adcb
shlb
dec
pop
sub
sub
xor
std
jle
jnp
scas
jge
scas
adc
xchg
pop
add
mov
jmp
cmp
mov
jbe
data16
mov
cmp
mov
mov
adc
adc
test
fcoml
pop
sbb
dec
andl
jbe
push
jae
stc
sub
ret
adc
fiaddl
pop
aaa
dec
xlat
imulb
rclb
in
mov
in
imul
fistl
and
test
das
pushf
xchg
push
les
mov
mov
data16
test
cmp
js
xchg
adc
jae
jno
pop
iret
pop
fisubs
adc
enter
or
jo
lea
mov
push
or
inc
mov
jmp
xchg
lret
loope
repnz
call
ret
outsb
push
sub
stos
out
xchg
cltd
aad
xorb
jg
xor
in
and
iret
rclb
es
scas
pop
xchg
xchg
pop
and
loopne
mov
pop
jb
dec
scas
mov
adc
adc
cmp
push
add
dec
lods
pop
lea
pushf
imul
xchg
mov
cmp
mov
push
or
pop
pop
out
fstps
push
xchg
das
pop
adc
sbb
mov
cmp
movsb
mov
lahf
fisubl
jb
and
sub
addl
popa
aad
ja
scas
addr16
fidivrl
cwtl
dec
fsts
int3
cli
test
jge
stc
or
cld
cmc
enter
insl
repz
ret
xchg
cmc
hlt
stos
insl
icebp
jecxz
mov
pop
das
push
sti
gs
pop
jae
push
xchg
cmp
insl
outsb
insl
dec
pop
jmp
loop
jns
cmpsl
fsubl
xor
xchg
adc
cmpl
xor
scas
push
cmp
pop
mov
mov
sub
xchg
movsl
insl
loope
ja
sarl
jp
jge
and
into
es
stc
cmp
lret
daa
inc
inc
mov
inc
xchg
adc
mov
pop
pop
and
jo
pop
mov
stos
dec
imul
xchg
fmul
enter
rclb
sub
mov
jecxz
dec
enter
xchg
adc
cmp
pop
xor
cmpsb
adc
pop
hlt
repz
cmpsb
xchg
jl
mov
into
mov
mov
cmpsb
movsb
es
jno
mov
push
jne
sub
lock
das
leave
lcall
sub
popf
fsubrl
sarl
hlt
leave
in
pop
mov
pop
cmp
clc
cmp
decl
dec
xor
and
mov
les
mov
loop
daa
xchg
lods
das
mov
and
push
test
xor
popf
addr16
fwait
pusha
pop
fidivs
imul
movl
jo
addr16
repz
pop
push
fsubl
aam
mov
pop
cli
mov
ret
dec
mov
jo
in
outsl
mov
push
push
xor
add
cmpsl
pop
push
fsubrl
sbb
mov
lods
push
adc
fldt
mov
or
add
jge
jmp
mov
dec
cmpsb
push
movsb
icebp
cs
ficompl
mov
pop
xchg
add
jp
aas
and
pop
int
and
and
xor
push
movsb
lods
sub
mov
in
pop
push
out
cmpsl
xchg
fdivrs
xlat
mov
adc
jecxz
fistl
add
add
imul
popa
enter
push
or
pop
out
adcb
das
cmpsl
add
jmp
and
je
popa
ja
xlat
sbb
dec
pop
push
fisttpll
cli
mov
call
into
cmp
mov
mov
in
pop
push
pop
dec
push
and
popf
mov
xor
cmp
subb
cmp
push
fisttpll
or
aad
push
lcall
adcl
movaps
inc
sti
lret
add
out
inc
xchg
es
aas
ret
addr16
stc
imul
in
mov
mov
idivb
cmp
shlb
pop
hlt
xchg
dec
mov
aad
jmp
leave
into
cmp
dec
enter
stos
insl
sub
push
and
adc
inc
sbb
jp
inc
inc
shlb
add
xor
xor
pop
out
daa
sbb
out
gs
data16
popa
hlt
in
mov
jle
stos
xor
pop
and
jle
sbb
das
movl
sub
mov
or
in
xor
cmp
jge
push
fwait
imul
aad
pop
or
int3
xor
test
pop
cmp
icebp
dec
negb
popa
mov
dec
jecxz
repz
push
cmp
and
out
scas
lcall
adc
push
xchg
push
std
notl
dec
mov
xchg
sub
inc
inc
adcl
cmpsb
inc
pusha
and
jl
mov
push
cmp
push
adc
mov
cmp
fwait
adc
adc
cmpsl
loopne
pushf
pop
xchg
pop
shl
jne
aam
xchg
lret
sbbb
test
mov
dec
test
test
int3
dec
mov
pop
fmul
adc
lods
jg
xchg
pop
mov
shlb
out
xor
jl
inc
int3
mov
or
aas
loope
mov
lahf
jno
fisttpll
mov
inc
aam
push
push
push
loop
je
add
or
ljmp
leave
neg
daa
sub
ficompl
mov
jne
inc
and
jp
add
aaa
imul
loop
ss
in
jmp
sbb
iret
mov
mov
cmp
xchg
xlat
iret
fbstp
das
daa
aas
pop
sysret
pop
ja
addr16
dec
inc
pop
mov
cmpsl
mov
imul
out
xlat
iret
fbstp
das
daa
aas
pop
sysret
pop
ja
addr16
dec
inc
pop
mov
cmpsl
mov
imul
out
xlat
iret
fbstp
das
daa
aas
pop
sysret
push
ja
data16
dec
inc
pop
mov
movsl
mov
cmc
out
out
push
iret
inc
das
fcoms
add
out
subb
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lret
inc
sti
push
test
jmp
into
insb
ficoms
dec
pop
pop
clc
imul
rorb
mov
cmp
jmp
sti
push
mov
fwait
xor
loop
repnz
ret
jnp
or
sbb
lret
inc
sti
push
mov
fwait
xor
loop
rcrl
cmpsl
push
mov
gs
in
fildl
cwtl
adc
frstor
add
mov
push
mov
sub
cmpsb
jge
push
inc
bound
push
sub
mov
mov
mov
cmp
push
jmp
xor
mov
nop
jae
aad
mov
fsts
dec
loop
repz
les
sub
dec
psubq
out
fisubl
push
jp
mov
mov
push
or
repnz
push
dec
or
cmc
mov
push
sub
cmp
cmpl
mov
out
cmp
sbb
xor
jecxz
lods
cld
sbb
insl
pop
mov
sbb
xor
xchg
mov
sub
sub
inc
sti
push
mov
fwait
xor
loop
repnz
rorb
mov
cmp
lea
or
rolb
addr16
data16
pop
mov
outsl
lock
test
or
ja
push
mov
subb
subb
and
out
mov
daa
cli
sub
add
repnz
rorb
mov
cmp
jmp
sti
push
mov
fwait
xor
loop
repnz
rorb
mov
cmp
push
sub
aaa
mov
push
movsb
mulb
repnz
stc
mov
add
ljmp
pop
ss
popf
in
mov
lret
xor
cs
xchg
outsl
in
stos
imul
sbb
pushf
adc
xor
dec
cmp
loop
imul
or
out
cli
pop
jmp
mov
cmc
push
clc
mov
jne
leave
out
cltd
and
rcr
xor
shll
push
push
pop
lods
sti
insl
sub
cmp
push
dec
sbb
cmp
test
enter
cmp
sub
inc
jle
mov
pop
mov
lods
mov
das
mov
outsb
jl
mov
or
jl
lret
inc
addb
xchg
ret
es
jle
pop
mov
and
jmp
jecxz
pop
lods
pushf
mov
or
cmpl
dec
ret
fcmovbe
sub
sbb
std
xor
popf
dec
and
mov
rorl
pop
sub
and
mov
push
in
pop
or
add
lahf
xchg
xchg
mov
mov
int3
clc
xchg
jae
pop
mov
ret
outsl
lock
lcall
sub
out
decb
xchg
fiaddl
dec
xchg
ret
rcr
pusha
lret
insb
add
mov
out
pop
fildll
pop
jno
faddl
adc
sbb
cmp
leave
mov
mov
cmp
xor
cld
cmp
inc
out
add
test
dec
jecxz
leave
rolb
imul
pop
pop
sub
out
pop
ss
outsb
jp
mov
sahf
and
lahf
dec
fistpll
xchg
jo
js
scas
mov
gs
sbb
mov
add
mov
loop
scas
mov
push
incb
push
xor
movsl
popf
pusha
and
aas
dec
inc
xor
hlt
xor
dec
shll
out
push
movl
sbb
clc
aaa
adc
insb
push
cmpsb
out
lret
xor
pop
and
pop
movsb
mov
dec
out
xchg
dec
push
out
mov
in
leave
sbb
pop
je
sbb
jo
rcll
test
js
mov
outsl
jle
jge
and
popf
sub
jae
stos
call
ja
cld
lods
test
rcrl
scas
sahf
mov
adc
hlt
xchg
pop
xor
aas
es
dec
push
or
mov
int3
xchg
loope
lods
inc
sbbl
lds
xor
sarb
pop
aas
cltd
add
hlt
test
fildll
sub
mov
in
clc
mov
fisubs
push
pusha
lahf
mov
push
scas
jne
mov
mov
push
repz
cmp
and
sbb
shll
and
push
dec
scas
mov
add
or
sbb
rorl
xor
jne
or
jne
jno
and
fwait
dec
add
mov
dec
and
test
push
popa
lahf
dec
jl
xchg
ljmp
sub
pop
call
mov
inc
rolb
inc
cmpsl
stos
js
sbb
push
leave
xlat
and
insl
out
and
pop
and
aam
stos
jno
out
out
adc
addl
mov
and
push
nop
idivb
mov
enter
aam
mov
xchg
pop
cltd
add
xchg
jg
daa
push
push
push
adc
test
repz
mov
test
int
std
cmp
mov
or
mov
and
sbb
or
adcb
mov
mov
mov
pop
sbb
test
shrl
add
sub
js
push
in
jb
mov
mov
cmp
xchg
adc
add
mov
lds
icebp
mov
mov
mov
lock
dec
adc
cltd
ja
enter
and
add
loop
xor
test
cld
es
xchg
cmp
mov
mov
push
mov
inc
pop
out
popf
jo
ss
movsl
mov
dec
xor
adc
and
jmp
ljmp
cmc
daa
loope
loop
in
jl
inc
aas
outsb
iret
cltd
neg
outsl
xchg
cmpsb
fs
mov
fidivrs
addr16
mov
mov
pop
in
movsl
out
xchg
pop
out
cmp
xchg
test
mov
lds
push
mov
push
add
cmp
lahf
ljmp
popf
sub
ljmp
push
sub
test
movsl
mov
les
mov
cs
push
jnp
lcall
imul
les
lods
xlat
mull
sbb
or
mov
loop
xorb
xchg
je
push
jmp
jo
cmpsl
imul
xor
out
pop
mov
fnstcw
mov
dec
in
xchg
push
mov
aad
hlt
push
xor
insl
push
lret
out
xchg
jb
mov
jnp
insl
mov
test
adc
out
in
sbb
inc
pop
or
ds
test
mov
stos
shlb
add
push
loope
stc
fcoml
jne
stos
stos
mov
jge
pop
mov
dec
push
ret
jmp
lcall
inc
aad
subl
jno
loop
inc
mov
in
out
out
mov
iret
push
idivl
lret
pushf
cmp
mov
pop
stc
or
mov
in
pop
in
inc
cmpb
rcr
mov
idivl
sbbl
mov
sbb
out
xor
out
mov
sbb
js,pn
outsb
pop
jo
mov
nop
lahf
push
jne
push
imulb
shl
inc
int
adc
mov
pop
mov
pop
cmp
into
lahf
mov
mov
dec
lods
loopne
fdivs
test
frstor
repz
mov
pop
jmp
and
subl
push
lods
push
mov
cmp
in
leave
dec
or
cmpsb
aad
inc
lds
inc
pop
xchg
adc
sarl
fisttpl
xchg
mov
enter
xchg
mov
ljmp
lock
push
daa
fimuls
ss
ds
inc
int3
xor
and
push
dec
bsr
push
outsl
sub
mov
and
and
dec
push
pop
inc
adc
xor
jb
add
cmpsl
cltd
fldenv
adc
test
mov
test
push
sub
sbb
icebp
mov
mov
int
xchg
and
dec
mov
out
pop
mov
std
jno
out
pop
mov
popa
xor
fldenv
sub
mov
cmp
repnz
push
int3
call
mov
lret
push
jbe
mov
iret
or
jle
shr
add
fistpll
rorb
mov
pushl
jmp
cmpb
inc
mov
push
and
jae
cs
adc
lock
jge
ja
cmp
xchg
dec
bound
rolb
fwait
lock
movsb
stos
dec
dec
call
mov
outsb
pop
inc
inc
mov
leave
jecxz
jne
and
push
out
pop
jge
cli
aaa
cmp
insb
fbstp
cmpsb
mov
sbb
aaa
add
test
sub
sub
test
xlat
cs
push
movsl
xor
fiaddl
sahf
movsb
or
mov
and
shlb
fidivrl
aas
push
sub
sahf
xor
cld
bnd
push
xor
cmp
in
mov
inc
movsb
xchg
sarb
xchg
pop
ja
sub
dec
pop
adc
ffree
xor
shlb
data16
out
jne
sti
xor
or
push
out
mov
jne
imul
outsl
loope
mov
cmp
sbb
out
das
scas
cmpsl
cmpsl
cmp
xor
divb
dec
cwtl
ss
mov
scas
js
push
sub
test
scas
leave
pop
ds
adc
in
push
xchg
test
cwtl
push
test
subb
repz
call
outsl
insb
sub
dec
in
decb
pop
adc
mov
in
mov
push
pop
push
in
jo
lods
and
pop
push
inc
aad
cmpsl
xor
mov
or
pop
cmc
adcl
xor
lds
call
push
adc
inc
jne
jg
inc
mov
aam
and
xchg
cltd
fs
ss
add
in
push
or
jno
mov
adc
lcall
movsb
jecxz
addb
out
pop
in
mov
and
mov
add
in
aaa
mov
rcrl
cli
jl
mov
xchg
pusha
cs
insl
cmp
lret
adc
xor
test
lcall
mov
aas
sub
shl
sarl
fucomi
shlb
inc
lahf
fstpt
aas
add
pop
xchg
dec
mov
push
add
xor
mulb
sbb
xchg
xor
gs
mov
xchg
addr16
or
mov
lods
loopne
push
lock
push
jge
fwait
adc
adc
sbb
nop
cmpsb
dec
inc
dec
sahf
pop
push
fdivp
sbb
push
scas
inc
negb
stc
pop
add
inc
xlat
adc
loopne
loope
push
xor
xchg
sbb
fdivrs
lds
rorl
push
das
add
call
sahf
jo
inc
adc
or
pop
xor
inc
cmp
or
out
xchg
or
cmpsb
xchg
ds
adc
fildll
hlt
sahf
xchg
out
test
addl
dec
adc
mov
xchg
fistl
xchg
out
pop
jecxz
pop
jecxz
push
fwait
lcall
imul
in
mov
lret
cmp
sub
ret
arpl
loope
sbb
push
jg
int
lret
jp
push
or
addl
dec
loope
repz
mov
mov
dec
int3
sbb
enter
scas
xchg
sub
xor
xor
ds
push
jb
aam
mov
andb
jmp
inc
out
cmp
and
nop
clc
orb
push
or
in
jge
lret
adc
lret
dec
decl
pop
pop
push
fcompl
push
pop
arpl
cmpsb
fsubrs
push
push
mov
and
mov
sub
pop
mov
es
lret
dec
xchg
arpl
mov
ljmp
dec
adc
and
dec
cld
push
popa
pusha
das
xchg
fistpll
sti
into
adc
lods
xlat
adc
sub
pop
add
shl
mov
jmp
call
dec
aaa
fwait
repnz
in
and
into
xchg
xchg
addr16
dec
and
dec
outsb
rcrb
ret
ficompl
rcrl
out
imul
out
or
aas
mov
out
les
xchg
pop
jmp
cmp
jg
push
jne
in
lret
es
jo
out
clc
jo
pusha
cmpsl
jl
inc
cmp
inc
mov
ss
inc
cltd
pop
and
mov
enter
sub
cli
add
cwtl
cwtl
xchg
jge
sbb
loop
cwtl
mov
adc
ss
imul
push
mulps
aas
inc
or
aam
mov
push
insb
out
mov
sarb
mov
out
popf
mov
sub
addb
push
daa
jecxz
jle
cmp
push
mov
fmulp
xchg
rclb
sbb
aas
inc
mov
inc
dec
xlat
notb
mov
jnp
xchg
lock
setae
test
std
xor
and
dec
cmpsl
push
inc
adc
call
jl
mov
out
jnp
mov
or
push
sbb
add
je
xchg
outsl
stos
add
sahf
adc
xchg
adc
or
pushf
jecxz
push
fadd
xchg
mov
mov
in
cmp
out
insb
das
bound
adc
adc
insb
xor
lret
roll
mov
lock
add
lahf
inc
jno
shrl
test
inc
test
stc
and
push
pop
inc
sub
and
pop
lock
icebp
or
fdivrp
push
cli
add
outsb
dec
fs
inc
sbbl
hlt
popl
push
jg
sbb
mov
sbb
repz
sub
xchg
aad
stc
cwtl
jle
addr16
loop
and
fwait
ret
and
mov
dec
add
xor
and
mov
popf
movsl
in
std
sahf
rcrl
movsb
or
dec
cli
inc
push
std
pop
jnp
xor
mov
not
dec
fildl
sbb
and
int3
lret
and
enter
cmpsl
lea
popa
cmpsl
or
xchg
insl
jno
mov
idivl
xor
outsb
mov
fwait
dec
mov
xchg
pushf
lret
mov
adc
sbbb
sub
pop
mov
adc
int
adc
push
leave
ljmp
lret
sub
es
add
xchg
or
pop
jmp
inc
sub
jl
push
dec
lea
pop
movsl
and
cs
and
mov
sbb
mov
jo
mov
fisubrs
das
out
mov
add
pop
stos
inc
push
adc
ss
shr
cmp
jno
pop
jecxz
fiaddl
fisttps
test
inc
pop
adc
repz
cmpsl
xor
xchg
rol
xchg
add
aam
test
sarl
or
xor
inc
xchg
inc
adc
and
and
pop
les
out
push
mov
mov
shlb
dec
fdivr
sub
test
adc
stc
adc
pop
outsb
jmp
adc
add
xchg
dec
sar
mov
icebp
mov
dec
je
pop
scas
jle
add
and
mov
and
jbe
mov
xor
inc
jne
mov
inc
jae
stc
outsb
adc
xchg
lahf
movsb
sub
pop
imul
in
sahf
cmp
rcr
jnp
lods
push
sub
inc
test
addr16
lahf
dec
das
ljmp
ret
fwait
push
movsb
xchg
jbe
push
ss
fwait
movsb
xor
and
sub
and
jecxz
jo
mov
sbb
enter
scas
sbb
xchg
mov
jb
out
test
pushf
iret
lcall
push
sub
pushf
mov
xchg
pop
and
adc
cmp
pop
mov
je
jl
lret
push
dec
jb
xor
add
fsts
test
popf
iret
ja
inc
mov
inc
mov
in
xor
mov
int
les
mov
xor
aas
repnz
lret
adc
pop
pop
stos
out
enter
aas
xchg
gs
mov
pop
not
movsb
mov
pop
ljmp
jp
cmpsb
adc
and
pop
aam
insl
fcoml
push
dec
mov
ljmp
cltd
jae
inc
adc
push
mov
fistps
je
or
mov
repz
or
imul
dec
data16
mov
add
lea
movsl
pop
mov
dec
mov
cmp
add
test
mov
out
jnp
popa
daa
jg
inc
out
push
je
lahf
inc
inc
push
push
push
cltd
fs
les
lcall
icebp
out
push
jbe
push
and
push
ret
fsts
adc
les
and
call
jmp
jns
jmp
mov
mov
out
stos
push
or
xchg
pop
test
in
aad
lret
push
sub
fisubl
jle
imul
loop
pop
mov
scas
orl
dec
lcall
aas
sbb
sbb
push
pop
ret
inc
jecxz
repz
mov
jne
arpl
test
fisttpl
data16
mov
push
and
or
xor
adc
push
data16
lret
cmp
movsb
cmp
gs
inc
xchg
xor
pop
sbb
sub
cltd
and
lea
test
rcll
mov
out
gs
stc
cmp
stos
xor
or
xlat
pop
jge
inc
sub
adc
ja
inc
push
adc
outsl
ljmp
push
das
push
adc
repz
push
ret
incl
lods
call
fsubrl
cmp
aas
cwtl
xchg
repnz
call
dec
jle
cmpsb
jecxz
pop
sarl
xlat
ret
push
inc
rcl
in
imul
mov
rcrl
fnstenv
cld
jge
jg
adc
adc
or
inc
push
mov
sarb
rorb
mov
jbe
xor
mov
lret
add
adc
or
lods
bnd
inc
or
mov
orb
dec
shrl
and
sub
add
stc
mov
lret
xor
xor
out
mov
push
movsl
les
fwait
add
push
add
jae
test
dec
ficompl
lock
jmp
add
pop
leave
jo
mov
add
push
lret
mov
in
pop
int
dec
dec
xor
mov
xor
lret
fcoml
repnz
ljmp
jmp
cmpsb
loopne
push
pop
xor
mov
lret
xor
add
insb
and
dec
stc
inc
test
mov
cmc
es
xor
and
cltd
mov
in
mov
inc
inc
xor
add
pop
lods
int3
nop
mov
clc
scas
inc
fcmovne
cmp
rcrl
sarl
and
jmp
jno
test
sub
dec
dec
cltd
mov
jg
pop
lret
in
divl
or
sub
rcl
mov
dec
hlt
movsb
daa
sahf
mov
add
sub
negb
leave
lods
jecxz
scas
cmp
insb
xchg
jo
fldenv
xlat
insl
adc
insl
outsb
addr16
leave
mov
lcall
xor
aad
movb
ret
sar
add
sahf
sub
movsb
mov
xor
jl
popa
mov
cmpsl
popa
cmc
xchg
dec
in
insb
xchg
in
aad
mov
or
je
out
lea
push
sub
out
dec
int
push
movsl
fcmovnu
jmp
rcr
lret
cltd
stc
sbb
js
sub
ds
rep
or
insb
test
push
mov
adc
fstpl
xchg
lods
add
stc
push
fcmovb
lcall
xor
hlt
and
cmp
sbb
push
fists
lret
mov
lods
fdivr
inc
jp
fimull
xchg
fcmovbe
mov
dec
call
outsb
jbe
outsb
mov
ja
mov
pop
xor
and
in
push
push
sbb
mov
mov
sub
aad
repnz
jbe
call
sbb
cld
sbbl
and
insl
aaa
push
cmp
popf
test
xor
shll
ljmp
push
dec
mov
dec
repz
xchg
mov
inc
mov
adc
stos
clc
hlt
adc
inc
icebp
fcomi
push
xchg
sbb
shl
mov
or
ja
jge
mov
lock
push
movsl
repz
aad
add
dec
jl
sti
insl
in
in
out
lods
addl
push
mov
or
pop
pop
pop
je
iret
ljmp
jo
lret
inc
jno
cs
inc
cwtl
lea
aam
xchg
jb
cli
mov
mov
mov
and
aaa
mov
fisubl
push
wbinvd
in
addr16
imul
sub
jmp
add
sub
dec
jp
fwait
and
cmp
xor
ror
and
loop
pop
push
mov
icebp
and
or
sti
inc
fwait
enter
push
push
cmp
add
les
pop
loop
lahf
or
mov
add
enter
out
bound
cld
popa
das
popa
or
xor
sub
mov
insb
movsl
sub
lods
pop
jp
ja
pop
mov
fisubrl
out
in
lea
bound
pop
dec
push
repnz
pop
fsts
in
sbb
movsb
jmp
push
in
mov
movsb
jle
adc
sbb
mov
rclb
stc
popl
push
sbb
incl
or
dec
push
push
bound
test
pop
adc
ret
jecxz
in
mov
or
cmp
insb
orl
sbb
inc
movl
flds
cltd
je
ss
ss
push
push
enter
cmpl
jmp
ljmp
xor
cmpsb
test
push
idivl
pop
rorl
jg
repnz
xor
pop
jb
inc
fwait
mov
adc
dec
xor
inc
pop
dec
xor
ljmp
fistps
push
lods
sub
mov
jns
out
nop
mov
mov
pop
mov
cli
cmp
clc
sbb
into
adc
push
cmpsb
mov
mov
xor
xchg
ret
rorl
dec
add
sub
aam
push
insl
inc
push
or
mov
push
add
sbb
add
test
and
adc
jle
rcll
int
pop
and
jmp
sub
dec
es
xchg
aaa
shrb
cmp
pusha
cmp
add
movsl
sbb
repnz
add
sbb
xchg
sbb
sti
inc
xchg
cli
jno
xor
push
push
add
in
push
adc
dec
sahf
movsb
xchg
sub
jns
fs
cld
loop
add
test
lcall
jge
std
inc
cmp
pusha
push
jecxz
hlt
shrl
or
loop
out
call
jmp
sqrtps
push
adc
push
inc
cs
pop
rclb
and
aad
push
lods
adc
out
cmp
je
outsb
mov
js
ficoms
sti
push
mov
fwait
xor
loop
repnz
rorb
mov
cmp
jmp
sti
push
mov
fwait
xor
loop
repnz
rorb
mov
cmp
jmp
sti
push
mov
fwait
xor
loop
repnz
rorb
mov
cmp
jmp
sti
push
mov
fwait
xor
loop
pop
rol
movsl
jl
xchg
dec
aam
les
xchg
mov
jg
mov
shll
xchg
push
mov
inc
rcr
loope
icebp
ja
xchg
xchg
and
push
popa
out
adc
xchg
pop
daa
mov
shll
ja
sahf
xchg
mov
ficomps
iret
dec
decl
xor
pop
rolb
or
sbb
xor
gs
lret
push
gs
sbb
and
xor
mov
rorb
xchg
sbb
scas
and
sbb
or
ja
enter
or
jl
push
sbb
cld
and
cld
adc
pop
outsb
pop
pop
dec
dec
enter
out
adc
xor
push
inc
scas
pusha
xchg
jae
xchg
out
jmp
dec
jnp
shl
cwtl
push
test
in
push
mov
out
cmp
pop
fbstp
inc
mov
test
test
jecxz
pop
xchg
cmp
in
mov
mov
outsl
shll
xor
pop
mov
adc
out
jae
add
jns
scas
mov
jge
jbe
xchg
gs
das
lds
jb
adc
icebp
and
push
test
mov
sbb
out
cltd
data16
fsubrs
xor
mov
inc
fnsave
xchg
add
xchg
push
ret
jo
add
push
xlat
popa
out
testl
inc
rcll
addr16
ja
xchg
xchg
and
push
xlat
popa
out
testl
inc
rcll
addr16
ja
xchg
test
dec
ds
add
adc
jmp
aas
outsb
pusha
push
mov
xchg
mov
inc
sti
mov
inc
jae
jge
push
add
enter
ret
jl
jo
jle
das
cmp
inc
das
push
stos
pop
and
enter
adc
mov
pop
mov
ret
mov
xchg
adc
pushf
pushf
xchg
repz
mov
jecxz
mov
push
jg
pop
inc
xor
out
push
faddp
mov
push
adc
jb
in
xchg
xchg
sbbl
jge
adc
mov
test
sbb
pop
fbstp
xchg
mov
cmpsl
jns
je
jno
or
xchg
rorb
or
test
adcl
inc
in
cmp
jp
inc
lcall
jge
or
xor
add
jge
sbb
ja
and
inc
ljmp
loop
pop
mov
lea
cs
sbb
adc
incl
mov
cmp
clc
shrb
test
clc
je
inc
clc
fwait
out
add
pop
pop
stc
push
dec
and
xor
xchg
pop
jae
ja
sbb
add
cmp
outsb
sub
mov
inc
repz
push
je
inc
test
jo
adc
and
sbbb
and
loope
mov
mov
sarl
jb
or
inc
adc
jo
in
adcl
inc
push
mov
mov
adc
lock
sub
sbb
adc
pop
mov
mov
mov
int3
insl
sbb
pop
aad
mov
repz
pop
or
icebp
loop
roll
dec
lock
jmp
and
jae
xor
mov
out
cld
jno
pop
stos
iret
sbb
dec
xchg
dec
lcall
mov
in
negl
and
out
dec
push
fisubs
addr16
adc
aaa
fmuls
push
adc
pop
push
jecxz
cmc
cmp
ret
cmc
push
test
xor
mov
movsl
scas
push
mov
rcr
aaa
sti
adc
xchg
sbb
add
jno
nopl
pop
fidivrs
stos
and
cmp
ret
loop
or
iret
loope
inc
ljmp
sbb
push
mov
pushf
add
repnz
jo
jnp
and
and
scas
and
ss
pop
xchg
ljmp
push
push
loop
call
mov
or
lahf
mov
mov
out
cmp
in
xor
test
pop
push
mov
push
loopne
mov
xor
in
push
sbb
imul
ret
int
cwtl
xchg
cmpsb
ss
sbb
outsl
xchg
sbb
jo
stc
sbb
xor
jae
xchg
scas
imul
es
test
stos
jge
xchg
mov
fmull
jl
mov
in
shrl
adc
sti
sub
push
push
pop
xchg
lods
je
cwtl
add
sub
adc
xchg
mov
enter
mulb
divb
inc
dec
push
adc
jmp
push
cmp
sub
push
leave
in
mov
or
or
call
shl
into
dec
fdivrl
popa
adc
push
sbb
repnz
jno
push
jb
mov
movsl
jp
add
mov
xchg
xor
mov
out
xchg
push
fcmovnb
pop
fwait
jnp
push
dec
or
shl
call
loop
int
fistpll
insb
mov
push
jb
adc
xchg
cli
ret
testb
cli
cld
inc
shll
jbe
mov
xchg
adc
add
jno
test
add
insl
adc
xchg
xor
in
or
pop
mov
jbe
mov
xor
shrb
aas
imull
pop
sbb
ss
in
frstor
pushf
ljmp
lahf
xor
call
xchg
mov
jge
dec
int
dec
mov
outsb
add
outsl
mov
ja
push
jns
mov
out
or
dec
scas
out
push
div
cmp
out
adc
lods
sbb
and
dec
add
ds
sub
push
insb
cwtl
fnstenv
or
mov
jp
inc
adc
das
push
lcall
into
insl
das
adc
sbb
xchg
and
fwait
inc
and
cmc
sbb
in
cmp
aaa
imul
insl
pop
jb
in
and
ljmp
dec
and
dec
pop
test
dec
mov
pushf
hlt
push
daa
je
insb
sarl
enter
mov
aaa
pop
sub
jge
xor
popa
repnz
push
push
icebp
mov
data16
imulb
aas
into
mov
outsl
push
cmpsb
in
mov
aam
iret
mov
inc
mov
add
lods
div
data16
xchg
nop
inc
push
or
mov
cli
pop
enter
sub
negl
movsb
inc
mov
mov
bound
push
jo
xchg
inc
push
int
popa
andb
jp
add
cmp
movsl
mov
iret
dec
ss
sbb
lds
sbb
bound
or
cmc
lret
mov
lods
adc
fdivrp
sub
sbb
lret
pop
dec
fsubl
push
xchg
scas
adc
mov
leave
sub
loop
inc
inc
dec
inc
lea
and
das
fs
pop
pop
stos
fnstsw
outsb
push
or
push
sarb
scas
mov
pandn
push
mov
and
repnz
lods
adc
jp
adc
clc
jecxz
pop
dec
pushl
sub
daa
adc
jmp
js
je
xchg
ret
nop
push
into
decl
cwtl
fs
lret
outsl
push
jl
pop
dec
fwait
cmp
push
add
sub
and
in
adc
rorl
sub
lahf
repnz
lea
fildl
loope
and
or
mov
and
popf
and
sub
xchg
mov
ds
push
mov
dec
xchg
aam
in
push
sti
inc
call
lea
lcall
fs
xor
mov
pop
popa
roll
sbb
push
adc
lds
ja
iret
xchg
sbb
mov
in
inc
aam
into
lahf
inc
or
movsb
dec
pop
push
or
and
mov
jmp
jp
or
in
mov
adc
cmpsb
bound
jae
mov
xchg
pop
std
imul
add
or
push
and
add
and
mov
clc
pop
add
push
mov
scas
sbb
icebp
xlat
cmp
repnz
cwtl
cmc
aaa
mov
push
dec
int3
jg
into
mov
ds
cmp
or
lods
mov
lahf
add
push
mov
dec
cmp
adc
pop
mov
sbb
clc
mov
lahf
xchg
sub
imul
add
jnp
enter
fnstcw
es
mov
mov
call
cmp
imul
into
xchg
fbstp
cmc
lret
add
outsl
das
cwtl
xor
cmpl
mov
out
xchg
mov
shlb
add
mov
mov
cmp
mov
or
jp
mov
cs
mov
cmpsl
sbb
dec
mov
mov
sub
cmpl
mov
int
or
adc
jecxz
push
test
rorb
mov
aad
dec
add
jo
fsts
push
sbb
adc
std
cld
inc
mov
push
inc
vmovss
dec
roll
sbb
lcall
cmpsb
xor
sbb
loop
xchg
rorb
pop
xchg
mov
mov
imul
add
ja
mov
cli
sub
cli
cmp
lods
fnsave
inc
jecxz
or
adc
aas
js
data16
dec
jp
xchg
loopne
jg
ljmp
sar
pop
lods
outsb
lahf
xchg
aas
fsub
cld
mov
and
pop
adcb
mov
pushf
sbb
das
in
mov
adc
out
js
cld
or
lods
divb
div
push
mov
leave
inc
mov
ljmp
ljmp
add
push
jne
pop
mov
dec
mov
pop
test
sub
mov
hlt
adc
mov
shlb
mov
movsl
fwait
or
inc
jno
and
movsb
and
and
xor
je
repz
test
enter
mov
jns
es
xor
push
mov
mov
ljmp
add
cltd
pop
cmp
push
clc
xor
xchg
sbb
push
std
sahf
cmc
sahf
inc
inc
iret
mov
xor
fnstsw
push
mov
add
add
aaa
gs
xor
push
ljmp
outsl
loop
jge
pushw
sbb
jmp
push
sub
fwait
cld
mov
into
adc
test
std
fadd
subl
andl
xor
adc
enter
xchg
or
std
pop
stos
cmp
sbb
rep
je
xchg
sbb
sub
stos
dec
push
lcall
jecxz
jbe
mov
pop
mov
ret
aam
arpl
sub
lods
mov
inc
outsl
dec
stc
add
add
cmpsl
fdivrl
sbb
dec
fadd
cwtl
and
jl
adc
xor
loope
jae
cmp
pop
pop
mov
pop
insl
lea
out
fiaddl
gs
or
sub
aad
dec
fcmovnb
jae
dec
lods
adc
push
mov
es
cld
sbb
cmp
cmpsl
add
xchg
repnz
mov
in
mov
inc
rep
adcl
pop
sub
cmp
push
idiv
pop
jmp
enter
add
and
mov
xor
jg
add
xchg
cmp
imull
les
enter
xor
inc
pop
sarl
mov
loope
test
sbb
add
and
add
test
push
push
xchg
sub
popf
add
dec
xchg
cmp
sbb
es
cld
sarb
aas
cmpsb
adc
cli
les
rcrl
cmp
add
or
or
sub
sti
dec
push
adc
or
inc
lods
xchg
int
xchg
jns
shrb
jle
or
xchg
pop
jbe
lret
and
popf
adc
mov
outsl
push
mov
pop
add
in
insb
xchg
movl
in
aam
je
inc
pop
pushf
jg
pop
popa
mov
fcoml
aaa
xor
cltd
mov
or
or
out
and
add
cmp
std
mov
hlt
imul
fistl
jns
cmp
ret
mov
fildll
sub
adcl
mov
cmp
mov
sub
xlat
mov
cmp
mov
int3
loope
mov
xchg
popa
add
dec
insb
inc
loope
repnz
jle
xchg
addl
das
push
pop
mov
push
pop
mov
xchg
fcmovbe
lret
mov
mov
stc
sarl
fildll
lcall
or
add
jns
push
div
vcvtpd2dqx
and
xchg
dec
cwtl
insb
mov
addr16
out
jne
outsl
loop
xlat
fstpl
inc
daa
leave
lock
stos
in
inc
std
incb
xchg
inc
xor
icebp
std
pop
call
and
nop
addb
pop
sub
arpl
cltd
or
nop
cmp
push
dec
sub
pop
push
pop
mov
roll
stc
cmp
xchg
stc
pop
insb
push
xor
add
out
xor
add
pop
inc
mov
mov
ljmp
lahf
jne
push
jnp,pt
lcall
es
fmull
daa
xchg
nop
push
in
adc
xchg
cmp
push
shrl
add
pusha
test
ficompl
clc
or
dec
push
repnz
sbb
cmc
hlt
push
movsl
movsb
or
jg
stc
std
dec
sbb
inc
add
adc
jp
mov
xor
fldenv
xchg
or
sub
mov
and
adcb
movsb
inc
imul
and
test
add
icebp
mov
jp
or
fmull
cltd
andl
lods
insl
pop
sbb
loope
jnp
jl
jmp
repnz
xlat
push
and
push
adc
sub
ja
addr16
gs
push
into
and
cltd
addr16
mov
leave
jo
sbbl
imul
rolb
inc
jnp
iret
add
mov
stos
movsl
cmpsl
jle
movsb
mov
lea
cltd
mov
stc
in
mov
mov
dec
push
jle
call
pop
xchg
sti
and
addr16
rcrl
cmp
push
dec
mov
inc
sarb
in
pop
fists
inc
call
and
and
mov
fs
out
xchg
cmpsl
push
mov
xchg
xchg
shll
or
dec
bound
mov
xor
pop
xchg
test
lods
cwtl
cltd
fdiv
add
add
loop
inc
xchg
sahf
pop
test
mov
test
pop
iret
cs
push
mov
loop
push
add
mov
push
lahf
loop
rcr
mov
dec
xchg
in
adc
lahf
push
pop
lret
les
loope
lcall
arpl
mov
cli
cmp
movsb
lret
lcall
add
test
and
mov
xchg
xchg
leave
jp
pop
mov
mov
outsl
xchg
xor
pushf
insb
jmp
mov
out
adc
dec
fisubrl
enter
mov
shrl
push
adc
andb
test
mov
mov
xchg
jbe
stc
shrb
push
jo
mov
cwtl
mov
push
fstpt
dec
pop
imul
ficomps
bound
mov
lods
fisubrs
sbb
imul
lcall
mov
or
gs
xchg
sahf
cmpsb
xchg
call
mov
pop
mov
lahf
out
pop
aas
cli
fmul
popa
lea
or
push
icebp
fs
and
sahf
in
das
int3
cmp
add
xchg
in
ret
mov
or
xchg
adc
push
inc
xchg
cmp
inc
xchg
mov
push
lods
or
mov
sbb
fldl
mov
mov
xchg
mov
cli
dec
mov
push
stos
arpl
jl
jae
inc
xor
scas
loop
or
cmp
xor
aam
repnz
out
sub
and
push
fsubl
in
and
daa
scas
inc
test
push
jle
cmp
cmp
into
mov
jne
js
mov
fwait
ljmp
shlb
arpl
xorb
out
int3
je
movsl
loope
test
test
daa
testb
and
xchg
int
sub
or
ret
inc
sbbl
xchg
dec
fidivrs
mov
add
or
es
and
pushf
rclb
sub
add
mov
fcmovbe
lods
shlb
fcoml
fisubrs
push
mov
mov
les
push
sbb
dec
xchg
orl
es
hlt
inc
ss
jne
popa
neg
or
or
push
or
fwait
jno
xchg
sahf
jo
loopne
shrb
sahf
cmp
xlat
mov
inc
add
fdivl
pop
js
mov
dec
mov
xchg
cmp
xchg
dec
movsb
dec
out
addr16
mov
testb
add
je
dec
lcall
jp
out
dec
test
rcrl
push
mov
xlat
adc
or
dec
sbb
shlb
testl
in
fcomps
jnp
push
pop
xchg
add
dec
lea
lret
hlt
lock
inc
xchg
cmp
cmc
test
shlb
iret
jne
push
pop
mov
and
mov
xchg
add
mov
push
xchg
adc
dec
pusha
and
subl
ret
ja
js
jmp
pop
in
pop
rorb
filds
xchg
int
arpl
xchg
cltd
or
cmc
dec
adc
sti
neg
pop
xchg
repnz
je
fdivs
sub
jbe
les
pop
pop
fistpll
inc
dec
int
fidivrs
and
lret
lods
cmp
jecxz
mov
pop
testl
mov
cmp
pop
aaa
test
mov
jge
push
dec
fwait
jbe
jecxz
push
test
movsb
mov
mov
out
push
mov
es
sti
or
mov
popa
jmp
pmaddwd
xor
xor
or
and
push
xchg
idivl
nop
jo
mov
hlt
push
movsl
mov
sub
daa
out
ss
mov
mov
stos
pop
xchg
mov
test
add
push
adcb
scas
pop
push
pop
sub
mov
cmpsb
sub
push
int
mov
gs
call
mov
sbb
mov
insl
pop
inc
mov
inc
pop
jl
mov
dec
cli
in
pop
cmc
dec
dec
mov
shrl
pop
orl
cmp
lods
ds
sub
adc
push
idivb
aad
push
in
pop
sarl
cmc
or
sbb
and
movsb
aam
inc
lods
pop
jmp
enter
sbb
inc
and
mov
cs
ljmp
mulb
clc
nop
xor
andb
xchg
fwait
out
pop
pushf
cwtl
inc
xor
dec
dec
ret
add
pusha
mov
sbb
outsl
in
and
jnp
pushf
xor
xlat
pop
sub
push
jno
or
push
dec
mov
xchg
movsl
out
outsb
mov
and
int3
clc
xor
testb
ret
sti
fucom
filds
dec
ss
fnsave
pop
clc
int3
cld
mov
lock
iret
xor
lea
mov
adc
and
jge
fdivp
mov
xchg
in
in
filds
in
jnp
aaa
ss
pop
and
int3
loopne
gs
loopne
scas
popf
fadd
adc
add
push
fisubs
push
loope
pop
out
push
adc
pop
ret
mov
in
std
sbb
out
cmp
xchg
scas
adc
jae
inc
jb
pop
mov
push
cmp
fbld
adc
dec
ret
pop
movsb
int
cwtl
push
leave
arpl
outsl
out
std
cmpsb
call
dec
nop
xor
sbb
ror
test
and
pop
xchg
iret
movsb
push
push
rclb
lods
inc
repz
sbb
outsb
push
ret
mov
fsubrs
mov
lock
jge
xor
dec
fstpt
sarb
pop
cmp
daa
sahf
aaa
pop
inc
movsb
mov
les
fimuls
mov
push
adc
and
inc
inc
inc
pop
fwait
add
and
push
incb
movb
shrl
fisubrl
jbe
push
daa
pop
hlt
sbb
and
insb
scas
pusha
fldenv
mov
fnstsw
jl
je
mov
and
das
popf
cltd
mov
loopne
jl
and
test
mov
cmp
pop
sbbb
mov
sub
cmp
subl
mov
dec
rcr
xor
bnd
sbb
mov
sahf
lds
leave
push
std
xchg
or
dec
repz
sub
or
cs
xor
incb
cld
pop
inc
lret
xchg
das
mov
push
pop
sbbl
popa
hlt
dec
imul
inc
lret
stc
dec
add
adcl
ja
pop
push
mov
xlat
mov
mov
shlb
xlat
cmp
data16
bound
pop
inc
ja
lahf
or
pop
adc
xor
xchg
out
mov
std
mov
out
xor
inc
push
out
outsl
pop
stc
push
mov
sbb
out
add
or
adcb
xor
ljmp
jp
jo
add
jle
and
push
cli
and
add
hlt
dec
gs
mov
mov
nop
xor
daa
pop
jle
jb
sub
shrb
addr16
xor
lcall
mov
mov
aas
ss
add
popa
xorb
in
adc
mov
adc
jp
cmp
jnp
shl
iret
xchg
orb
pop
push
into
loope
pop
xchg
push
pop
fdecstp
lea
inc
add
mov
outsb
cwtl
lret
mov
adc
jno
popf
or
test
sahf
mov
xor
dec
repz
inc
push
add
push
shr
fwait
xchg
imul
xchg
add
into
jl
push
push
xchg
test
ficoml
minps
xchg
push
test
test
push
fmulp
and
pop
inc
ret
and
jl
int
push
mov
dec
movsb
mov
jp
stos
inc
adc
cmp
lods
cmp
lcall
push
movsb
sub
jae
scas
jbe
ret
sub
decl
repnz
cli
ret
ja
test
clc
xor
sbb
lret
adc
popa
loop
and
xor
filds
xchg
outsl
arpl
pop
cltd
lods
jo
mov
mov
std
sti
sbb
inc
cmp
jp
cltd
sti
fcomp
movsb
scas
push
mov
lods
dec
cmp
jns
out
mov
xchg
mov
mov
jbe
jl
jbe
mul
sahf
test
iret
addr16
aas
out
xchg
push
cmpsb
cmp
sbb
loope
adc
push
jbe
xchg
mov
inc
xchg
inc
leave
xchg
mov
push
xchg
pusha
cmpsl
sub
xlat
popa
out
testl
inc
rcll
addr16
ja
xchg
xchg
and
push
xlat
popa
out
testl
inc
rcll
addr16
ja
xchg
xchg
xor
push
xlat
popa
out
testl
inc
enter
shll
cmp
mov
movl
addl
mov
mov
pop
sub
sbb
or
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
add
inc
jne
mov
pop
mov
add
add
or
add
push
add
mov
add
add
add
add
inc
add
add
add
add
jns
cmpsb
add
add
add
rolb
lea
nop
add
add
fwait
add
add
add
add
add
add
add
add
add
addl
out
add
mov
add
sbb
add
ret
add
add
pusha
add
add
pop
push
add
add
add
ss
add
and
mov
mov
mov
add
add
add
add
add
dec
add
push
add
add
add
add
add
add
add
sbb
jnp
pusha
add
add
incb
or
adc
sbb
push
add
add
add
pop
add
add
add
add
add
add
add
add
add
push
add
mov
push
mov
add
add
add
sbb
push
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
push
add
add
add
add
repnz
add
add
popa
add
add
lea
mov
add
add
add
inc
add
add
pop
add
mov
push
add
add
add
push
add
add
add
pop
add
add
add
add
add
add
add
mov
mov
popf
add
add
add
add
add
cmp
cmp
add
add
es
add
nop
add
or
push
add
add
add
xchg
add
add
mov
add
add
ret
add
add
add
sbb
je
popa
add
add
sbb
mov
jns
push
add
add
sub
adc
cwtl
add
xchg
scas
add
add
pop
add
mov
push
add
add
out
add
add
add
add
pop
add
add
lcall
add
add
add
add
js
push
add
add
mov
cmc
add
add
pop
add
mov
add
add
add
add
add
add
nop
add
inc
add
add
push
and
or
ja
inc
add
cmp
add
lcall
add
sbb
add
add
add
add
sbb
add
add
inc
add
add
call
add
add
add
lea
or
xor
jne
lods
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
lret
add
and
faddl
pop
add
mov
ret
add
mov
push
add
add
add
inc
add
add
xchg
inc
add
mov
pusha
add
add
add
add
out
add
add
add
add
testl
inc
add
mov
push
add
add
add
add
add
mov
lret
add
add
scas
add
add
dec
daa
ror
aaa
and
xor
cs
mov
out
out
xchg
pusha
or
xor
sub
xchg
jne
xchg
scas
inc
in
out
in
mov
jb
ja
xchg
ja
inc
scas
cmp
pop
mov
insl
in
and
dec
addr16
movsb
cmp
bound
icebp
int3
adc
jg
ret
in
jno
clc
clc
test
sbb
mov
sbb
test
push
xor
push
in
jmp
push
push
pushf
clc
imul
mov
jbe
pop
sub
lret
push
aas
cli
or
mov
mov
pop
orb
repz
cmp
lcall
cmp
dec
pop
cmp
and
push
push
mov
pop
scas
neg
incl
addr16
and
sbb
mov
int3
daa
test
les
xchg
cmp
push
mov
arpl
mov
lea
mov
popa
push
cwtl
mov
addr16
sub
push
push
jle
mov
inc
jo
mov
shrl
xor
loopne
xor
xor
js
xorl
cmpsb
and
out
sarb
cmpl
mov
mov
xchg
icebp
fwait
sbb
hlt
lcall
outsb
std
push
mov
sbb
mov
gs
dec
scas
mov
push
or
loopne
imul
push
push
sub
jecxz
dec
pop
aad
mov
mov
mov
sbb
lret
dec
jns
test
daa
sub
stos
unpcklps
add
adc
das
and
in
xchg
add
and
dec
dec
rolb
push
fisttpl
mov
push
xchg
and
das
inc
pop
mov
lret
divb
jge
loop
jge
push
dec
scas
hlt
push
add
mov
mov
aas
mov
aaa
sbb
fs
push
ljmp
jb
in
bound
push
mov
push
xor
pop
mov
jo
mov
subb
gs
shld
mov
xchg
sti
jecxz
add
jae
adc
into
decl
test
xchg
xchg
dec
mov
stos
cmp
mov
add
xlat
and
add
test
ror
mov
fwait
cltd
movsl
shr
inc
inc
mov
and
test
sbb
push
push
jp
stos
push
mov
xchg
mov
ds
fcoms
mov
xchg
scas
iret
inc
mov
addr16
cmp
jg
push
jmp
cmp
cmp
movsl
aaa
add
adc
scas
xor
xchg
adc
push
push
loop
mov
push
gs
addl
dec
cmp
int
stos
daa
loopne
mov
bound
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
