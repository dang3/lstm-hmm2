call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
ljmp
mov
js
outsb
lret
ljmp
dec
stos
mov
outsl
mov
scas
dec
mov
sbb
or
cli
pminsw
mov
popa
stos
pop
lcall
pop
pop
xor
sub
cli
pminsw
dec
scas
dec
fstps
cmp
lret
push
push
cld
sbb
mov
or
loope
cmp
jnp
jmp
aam
xchg
ds
int
add
mov
pop
das
fisttpl
inc
cmp
and
add
rolb
inc
pop
push
add
out
push
imulb
dec
and
movsb
cli
push
mov
roll
mov
mov
stos
cmpsb
mov
cli
das
or
mov
fcmovnbe
and
pop
pop
stc
rorb
pop
xchg
bound
push
pop
inc
sar
and
sbb
or
xchg
sub
dec
mov
lret
and
jne
xorb
rcr
iret
outsl
fiaddl
int3
incb
stc
inc
push
into
daa
stos
sbb
add
pop
fisttpl
cmp
sub
sbb
or
pminsw
mov
ja
dec
push
cs
add
jns
dec
mov
lcall
mov
scas
pop
into
or
xor
sbb
push
and
faddl
rcrl
dec
lea
xchg
test
xchg
jge
psllw
fstps
or
jg
ret
push
jnp
sub
sbb
or
cli
pminsw
fisubrl
lret
dec
stos
pop
lcall
lahf
pop
scas
dec
mov
sbb
or
cli
pminsw
fisubrl
lret
dec
stos
pop
lcall
leave
xlat
rcrb
push
dec
test
push
inc
mov
pop
mov
std
in
aaa
cs
not
hlt
sub
adcb
mov
cmc
xchg
jmp
idivb
xchg
daa
inc
pop
mov
leavew
xor
ljmp
push
mov
fidivl
int3
notl
leave
pop
push
adc
dec
pop
scas
inc
sbb
mov
xor
mov
mov
mov
je
aam
or
push
mov
in
cli
jne
sbb
cmp
pop
sti
xchg
sub
cwtl
sub
std
push
das
mov
mov
xchg
inc
testb
sub
fsubp
pop
dec
lea
fdivrl
sti
out
ss
xchg
or
sahf
or
push
cmp
ret
dec
leave
mov
cmp
add
xlat
lds
ljmp
mov
movsb
jl
mov
fdivs
repz
dec
je
imul
shlb
hlt
cmp
push
push
cmc
les
rorl
pushf
inc
fbld
movsb
ret
lret
ss
in
clc
cs
and
inc
xchg
cwtl
jbe
aam
shll
push
mov
pushf
mov
jmp
iret
jle
addr16
mov
or
or
and
mov
into
add
cmp
pop
sbb
out
in
imul
bound
in
ljmp
lahf
mov
mov
cwtl
xor
jge
inc
pop
or
adc
add
notl
cltd
or
cli
cmp
cmp
sarl
cmp
mov
sbb
push
into
or
mov
es
mov
out
out
jb
test
cmp
cmpsl
dec
popf
or
dec
je
lcall
xor
ds
xor
push
stos
mov
xchg
sub
flds
inc
jno
xor
mov
or
lods
push
pop
push
ss
adc
cli
mov
push
test
leave
inc
add
sbb
sub
jnp
andb
add
ljmp
push
push
sub
jle
fwait
pop
inc
insl
pop
ljmp
push
mov
jmp
arpl
dec
or
xchg
cmp
shll
and
lods
sbb
sbb
xchg
xlat
add
dec
sbb
push
loop
sub
dec
mov
fnsave
or
jns
rolw
cmp
add
or
jae
in
stos
into
lods
mov
movl
test
add
jns
push
lods
out
jo
loop
adc
cmpsl
cmp
pushf
inc
or
push
stc
leave
mov
stos
push
or
fildll
sub
cmc
mov
jmp
mov
fstpt
push
repz
js
notl
xor
add
mov
inc
arpl
sbb
add
enter
jge
subb
hlt
xlat
pop
sbbl
into
adc
mov
xor
cli
cmp
adc
loope
mov
in
test
inc
add
rcll
ficoml
mov
sbb
lods
testb
dec
lock
daa
es
push
stos
jnp
mov
and
ret
test
outsb
bound
fwait
bound
xor
xor
mov
pop
mov
lret
repnz
mov
mov
push
push
dec
or
dec
sbb
jp
xchg
push
and
jecxz
fxtract
adc
jnp
mov
imul
hlt
inc
pop
test
xchg
mov
aaa
push
or
xchg
dec
mov
cmp
arpl
dec
cmp
jle
cwtl
in
push
and
jns
mov
inc
inc
mov
pop
pushl
fistpll
xchg
adc
jns
popf
sub
cs
fcos
pop
insb
sub
jl
mov
mov
movaps
jl
mov
loopne
jns
sbb
fstps
jae
push
inc
fnsave
jo
sbb
fidivs
inc
cs
mov
jecxz
cltd
and
and
inc
dec
aaa
mov
jmp
cmp
sub
test
jmp
cmpsb
push
ds
xor
rolb
mov
cmpsb
sbb
push
pop
cmp
aam
pop
mov
cmpsl
xor
dec
or
xlat
cld
sub
mov
int
dec
sbb
mov
cmp
lcall
dec
cmc
adc
in
xchg
xchg
mov
dec
xor
sbb
aam
xchg
lahf
sub
mov
and
mov
jns
cltd
shl
fcoml
stos
int3
pop
and
stc
test
das
lahf
mov
ljmp
mov
pop
loope
and
jl
cmp
pop
mov
repz
adcl
mov
test
push
out
jb
iret
nop
mov
adc
jnp
jae
lret
and
cli
cltd
mov
mov
sbbb
cmp
cmp
les
push
arpl
addr16
mov
in
scas
adc
pop
jle
jecxz
cmp
xor
fidivl
xor
dec
mov
loope
pusha
mov
test
mov
dec
movsl
sti
dec
divb
push
or
divb
nop
aaa
xor
pop
jne
mov
scas
mov
lcall
pop
pop
pop
pop
xchg
lea
push
mov
mov
pop
mov
mov
jp
mov
push
lret
pop
ret
sbb
dec
mov
jecxz
es
pop
out
sub
fistps
inc
push
fistpll
xlat
leave
jge
loop
fildll
sbb
push
jns
hlt
xchg
push
rcr
mov
adc
test
mov
or
aas
cld
dec
int
mov
add
subl
scas
mov
jae
out
stos
pusha
adc
in
pop
adc
and
sbb
into
push
mov
loopne
hlt
shlb
jl
test
sbbb
and
mov
sbb
fs
xor
mov
add
jmp
dec
scas
std
pop
arpl
andb
fwait
dec
ja
cmc
pop
repz
mov
and
pop
mov
inc
pop
push
cmpsb
movsb
leave
rorb
jae
xor
popf
dec
pop
loopne
cmpsb
ljmp
inc
fisubrl
xchg
push
pop
adc
or
gs
hlt
sbb
sub
inc
cmp
jne
lods
jl
mov
xchg
pop
push
mov
cld
repnz
jmp
dec
mov
add
ljmp
call
cmpsl
clc
mov
xor
xor
inc
mov
cmpb
cld
lcall
mov
arpl
fs
test
pop
hlt
lahf
push
inc
jl
xchg
mov
das
mov
cld
add
jecxz
inc
add
lock
stc
lods
insl
xchg
cli
mov
lods
xor
pushf
jb
mov
xor
lret
inc
je
ljmp
mov
push
sub
pop
addr16
mov
imul
popa
jmp
mov
clc
pop
xlat
ljmp
mov
and
xor
cs
jge
leave
insl
xor
int
mov
adc
push
sbb
loope
cld
sub
jo
je
test
pop
add
div
je
cld
pop
pusha
xchg
lods
je
sbb
pop
cmp
aam
mov
mov
cli
mov
or
mov
scas
cmp
out
dec
sub
out
pop
les
js,pt
repz
lods
dec
fs
jns
fucomp
dec
xor
das
scas
adcl
imul
insl
jbe
and
inc
mov
xchg
adc
movsl
jns
in
pop
mov
in
imul
scas
xlat
dec
mov
xchg
sbb
lret
movsl
mov
push
test
sbb
push
push
adc
xchg
in
scas
loop
xor
or
in
cli
jne
xorl
pop
scas
pop
cmp
xchg
pop
xor
test
dec
sbb
fstpt
jbe
movsb
push
test
push
push
pop
and
out
and
sti
idivl
dec
stos
mov
mov
xchg
sbb
mov
dec
mov
adc
push
push
jge
mov
push
fsin
adc
in
ss
repz
fisttpl
mov
ret
jae
push
xchg
push
int
scas
xchg
pop
inc
fdivrs
pop
movsl
ss
mov
pop
js
iret
xor
insl
push
xlat
cmp
arpl
out
int3
aad
jle
jb
mov
sahf
insb
xor
cmpsl
pusha
xchg
xor
shll
dec
or
rcrl
sarb
sbb
jno
aad
es
xor
xchg
mov
pop
pop
and
scas
lock
inc
sbb
in
sbb
mov
out
sbb
jno
dec
push
jo
cmp
cmp
fstpl
repnz
cmp
adc
lret
cmpsl
pop
aad
ret
std
cld
mov
mov
movsl
fldcw
jp
and
cmp
aaa
andb
jns
sarb
jns
ret
into
xchg
cld
push
cltd
loopne
fadd
dec
xchg
add
dec
adc
ret
out
add
ret
sub
cmpsb
movsb
and
leave
xlat
fs
jg
jmp
hlt
movsb
sbb
iret
or
jmp
out
mov
xchg
push
test
xor
test
and
mov
into
push
add
gs
aam
jno
outsb
loop
movsb
fcmovbe
loope
xor
jp
push
aaa
mov
in
jecxz
stos
mov
cmp
and
adc
shr
fs
xor
hlt
sbb
push
sub
jl
jns
leave
aas
dec
lret
mov
jge
and
fucom
pusha
push
xchg
mov
cmp
inc
add
addr16
and
outsb
sbb
mov
js
sub
icebp
cli
adc
mov
jl
dec
cli
int3
push
mov
pop
sub
stos
lods
adc
dec
repz
push
jp
jmp
clc
stc
xchg
adc
in
cld
and
push
mov
pop
fs
sbb
jnp
adcb
lock
xor
sub
repnz
dec
cmp
loopne
mov
sub
mov
add
jl
or
xchg
ret
cmp
mov
or
xor
mov
dec
mov
mov
push
js
sbb
adc
out
je
jo
adc
aad
push
cld
arpl
cmp
xor
fdivs
js
in
sbb
xchg
mov
ljmp
sbb
mov
scas
nop
divb
movsl
ja
test
addr16
jne
and
mov
fwait
adc
out
dec
xchg
xchg
add
adc
je
sbb
lcall
nop
pop
inc
in
test
or
push
push
xchg
outsl
cmpsl
xchg
push
fisubl
enter
mov
xchg
push
jl
and
and
add
out
pop
stos
scas
mov
xchg
popl
pop
cmp
mov
xor
sahf
stos
mov
xlat
and
fwait
inc
bound
pop
jo
dec
xor
mov
jge
cmc
or
scas
mov
mov
ret
mov
das
dec
mov
imul
jge
pop
add
fsts
ret
pop
mov
adc
add
pop
in
add
sbb
subb
je
and
jb
mov
push
xchg
ret
shll
pop
dec
cs
cmpb
add
pop
ss
push
jnp
jle
xchg
mov
cmp
fmull
shl
call
repz
es
push
cmpsb
aad
jge
in
cmp
mov
jb
mov
rclb
stc
push
insb
add
sti
mov
aam
cmp
movl
movsl
outsb
cmp
cmc
push
add
insb
sub
repnz
jle
xor
movsl
cmovns
pop
in
sub
mov
pop
test
jge
jno
jae
cs
dec
out
inc
in
jne
push
sbb
clc
out
sti
cmpsl
enter
dec
dec
lods
cld
pushf
pop
outsl
dec
cmp
ret
test
lds
mov
xchg
ja
test
aam
movsl
pop
jle
sahf
jns
cwtl
adc
test
cmpsb
mov
aam
jle
mov
add
xchg
pushf
sub
mov
push
outsl
fwait
pop
fnsave
and
or
shlb
jb
xchg
cmp
sub
mov
sub
jae
loopne
push
fldcw
sub
xor
push
and
xchg
aaa
daa
adc
cmpsl
dec
inc
icebp
pop
sub
pushf
es
cmpsl
xchg
decb
jmp
xchg
xor
fs
pop
and
cmpsb
push
ljmp
cmp
loopne
lods
icebp
sub
pusha
push
dec
adc
rolb
add
xchg
ja
insl
filds
sbbb
mov
xchg
and
cmp
les
mov
xor
outsl
push
inc
outsb
rolb
ljmp
jecxz
iret
inc
movsl
loop
mov
outsb
fcomps
mov
test
mov
jp
jle
cmp
pop
inc
fidivrl
test
dec
rcrl
inc
mov
mov
cmp
insb
call
cmp
repz
test
loopne
movsl
loopne
mov
test
mov
pop
clc
and
pop
nop
adcl
repz
data16
lods
repnz
mov
test
lcall
push
push
fimull
xchg
iret
cltd
pop
dec
lds
or
clc
in
or
sbb
test
mov
scas
out
pop
inc
imul
mov
jne
mov
iret
lret
push
pop
cltd
mov
pop
add
cmp
mov
push
cs
or
popf
jp
jno
sub
into
mov
push
and
xchg
xchg
sub
mov
fisubs
jg
lods
cmp
sbb
fistps
jno
jns
mov
enter
xor
icebp
jp
in
add
loopne
xchg
sbb
sbb
sbb
out
int
scas
or
fcomp
addr16
mov
notb
pushf
std
fwait
add
cld
aam
dec
jl
push
cli
push
pop
clc
enter
aam
push
mov
mov
mov
mull
jne
pop
movl
sub
test
mov
cmp
push
mov
jg
enter
mov
push
rol
lds
mov
test
movb
lahf
inc
out
mov
and
pop
pop
adc
sub
xchg
jne
cmp
cmp
je
js
inc
dec
xor
daa
es
lds
push
or
stos
mov
add
cltd
out
out
jp
shrb
test
mov
adc
cld
mov
push
fwait
xchg
and
scas
pop
mov
jae
js
jb
into
loopne
mov
xor
loop
push
jge
mov
sti
bound
cmp
xor
loopne
cmp
jge
pop
fiadds
dec
test
test
mov
lret
add
sbb
movsl
bound
addr16
stos
adc
lret
push
and
cmp
and
push
jmp
mov
dec
push
pushf
arpl
mov
sub
mov
mov
xchg
xchg
lods
adc
inc
xchg
adc
xor
mov
and
mov
lcall
sbb
lcall
mov
or
pop
push
or
aad
sub
xchg
and
xchg
test
dec
call
jg
jmpw
incl
xor
mov
pop
mov
push
push
rcrl
inc
repz
pop
jmp
incb
testb
xchg
fisttpll
pop
loopne
or
insl
xorb
mull
cmp
adc
jp
lret
add
push
add
test
add
loop
int
or
iret
lcall
xchg
jge
stc
cmc
and
and
clc
pop
aam
lds
pop
push
out
mov
test
add
xlat
data16
and
push
outsl
stc
adc
mov
mov
dec
out
into
sub
jnp
ja
roll
leave
pushf
test
mov
mov
fdivr
fidivs
and
jbe
jl
stc
lahf
shll
hlt
sub
pop
imul
cli
aam
fistl
aas
inc
inc
dec
push
dec
sub
cmp
loopne
dec
in
fwait
xchg
daa
adc
push
mov
inc
sahf
sbb
xchg
testb
jo
cmp
and
pop
inc
push
loop
dec
js
repnz
ret
xchg
inc
pusha
mov
jo
mull
data16
or
push
or
or
test
mov
aad
in
xchg
scas
dec
hlt
rolb
in
dec
xchg
test
sub
dec
outsl
jl
mov
repz
outsl
movsl
cmp
dec
fmull
notb
add
push
mov
ss
and
add
sbb
jle
mov
pop
fiaddl
out
dec
mov
jb
aad
xor
add
xor
mov
jl
test
pop
push
adc
push
pop
or
dec
jl
cmp
adc
js
iret
pushl
fisttpl
aaa
push
inc
jmp
add
cmc
pushf
orl
adc
jge
movsb
xlat
rorl
popf
bnd
daa
cmp
jg
push
mov
sub
xor
mov
fidivrs
aad
or
xor
xor
loopne
cmp
sub
or
xchg
dec
call
mov
jbe
imul
roll
and
leave
in
cli
inc
in
faddl
xor
in
push
jge
jb
cs
inc
scas
mov
and
add
and
mov
gs
jmp
insl
in
mov
push
repz
dec
pop
xor
ffreep
mov
cmp
shlb
or
push
call
push
lahf
movsb
addr16
inc
push
gs
add
mov
inc
js
push
push
jns
add
loopne
test
xchg
rep
mov
mov
sbb
out
mov
out
adc
and
ret
jle
jne
add
rorl
int3
mov
inc
or
xchg
jno
cmp
jnp
adc
mov
adc
mov
mov
sbb
mov
jp
das
mov
mov
mov
sub
mov
xchg
std
xor
mov
mov
pop
jae
call
dec
adc
lret
xor
xor
icebp
lret
cmc
std
in
jl
cmp
bound
jne
push
and
dec
pop
repnz
sbb
loop
aas
insl
sbb
adc
inc
pop
sub
mov
sbb
ficompl
repnz
repz
inc
pushf
orl
dec
jg
and
fstl
retw
stos
fs
imulb
das
out
mov
dec
pop
mov
sub
lahf
push
and
mov
xor
push
into
adc
test
jg
fadds
stos
movsb
aad
sar
pusha
cltd
stos
ss
into
cmp
inc
incb
divl
imul
push
cmpl
mov
mov
or
insb
xor
fstl
aas
lock
sarl
into
mov
jg
imul
imul
loop
mov
movsb
push
mov
fcoms
insb
test
cmpb
jmp
push
orl
lods
jbe
daa
push
adc
and
popa
stos
js
add
adc
xchg
adc
adc
sti
repz
stc
addr16
mov
stos
cmp
jecxz
xchg
scas
jge
xor
insb
negl
sub
push
jl
jae
inc
xchg
mov
or
cmpsb
test
cmpsl
or
or
outsb
rclb
bound
std
fabs
jge
dec
enter
inc
stos
push
jmp
cmpsl
sbb
call
xchg
imul
sbb
gs
or
add
jno
or
sub
rclb
cli
mov
dec
popf
cmp
sub
fcoml
insl
loope
mov
jle
jl
add
negl
push
push
or
setae
adc
ret
fsub
stos
out
push
fdivrs
lods
adc
adc
lea
clc
and
and
outsb
mul
add
cmpsl
mov
bound
adc
cli
ss
int3
inc
xchg
pop
ljmp
or
xor
adc
test
inc
or
xor
pop
xor
inc
jl
aaa
ret
mov
lret
xchg
dec
aas
push
fs
std
arpl
jno
shrl
pop
pop
mov
mov
into
mov
lahf
pop
add
aam
inc
adc
adc
mov
pop
push
lcall
or
rorb
leave
ret
popa
movb
ljmp
stos
nop
in
lds
jg
ret
into
adcb
fldl
and
imul
movl
pop
sbbl
insb
mov
sub
mov
sub
mov
cmp
stos
insl
mov
gs
jns
repnz
xor
sub
add
or
xchg
nop
data16
outsb
jle
aaa
fldcw
push
add
mov
ret
adc
mov
lret
mov
repnz
sub
popf
and
xlat
mov
jmp
xor
fcoml
stos
dec
mov
sbb
or
cli
pminsw
fisubrl
lret
dec
stos
pop
lcall
lahf
pop
scas
dec
mov
sbb
or
cli
pminsw
fisubrl
lret
dec
stos
pop
lcall
xchg
pop
mov
mov
sbb
or
cli
push
ljmp
dec
stos
pop
lcall
jnp
dec
dec
cmp
sub
sbb
aas
cli
lock
aaa
and
gs
jne
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sbb
or
cmp
sub
push
xchg
mov
leave
fs
stc
mov
addr16
push
stc
aaa
jmp
xlat
cmp
sub
pop
xchg
jns
imul
mov
enter
jmp
xlat
cmp
sub
pop
xchg
jns
imul
flds
dec
mov
mov
cmp
js
movsb
loop
push
les
cmp
mov
adc
scas
repz
test
aam
pop
xchg
dec
sbb
push
add
inc
cwtl
push
bound
lahf
mov
pop
push
xor
fwait
pop
mov
ss
inc
pushf
push
test
clc
inc
sub
jmp
ret
mov
and
add
pop
mov
leave
testl
pop
mov
mov
or
js
mul
mov
mov
and
push
dec
pop
push
dec
jmp
roll
pushl
ret
sub
int3
push
dec
adc
mov
daa
jmp
fcmovb
or
cmp
sub
pop
xchg
jns
imul
flds
leave
pop
stc
daa
jmp
scas
jg
outsl
mov
shlb
push
ret
jmp
xor
pop
pop
jae
push
pushf
push
cltd
push
outsl
stos
jge
pop
scas
push
sarb
sub
jmp
out
and
bound
jle
or
mov
xchg
jns
imul
flds
leave
pop
stc
daa
jmp
xlat
cmp
sub
pop
xchg
jns
imul
flds
leave
pop
stc
daa
jmp
jmp
mov
push
sub
dec
xchg
clc
jl
pushf
pop
push
push
xchg
dec
sbb
daa
dec
dec
popf
mov
jne
loopne
cmp
je
outsl
mov
insb
loop
sbb
sbb
ret
into
addr16
adc
or
mov
push
inc
pop
test
jbe
inc
xchg
fmul
ficoms
fisttpll
xorl
fsubs
cmp
jo
xchg
push
cmpsb
inc
inc
sti
mov
sub
addr16
call
imul
lret
xchg
mov
pop
mov
bound
jbe
stos
xchg
or
jne
push
data16
mov
scas
cmp
movsl
testl
lret
mov
fwait
xor
sbb
popa
sahf
adc
repnz
ficoms
mov
lock
inc
ret
pop
neg
sub
ss
push
inc
daa
cmpsb
adc
push
test
test
movsl
js
dec
cwtl
push
or
dec
test
push
shl
mov
mov
jbe
popa
ret
cmpsl
add
mov
sub
push
cmp
xchg
out
test
cli
mov
movl
mov
jg
jno
movsl
jmp
or
push
mov
lret
inc
xchg
outsl
cmp
sbb
loope
pop
outsb
mov
insb
and
push
xor
dec
mov
lahf
fsubs
test
push
fsts
sbb
loop
pop
les
into
lahf
sub
push
mov
sub
les
iret
mov
mov
xchg
fs
rorb
ret
inc
sub
clc
add
jge
rorb
stos
cld
scas
cli
mov
mov
icebp
test
add
out
or
mov
aam
xchg
push
jno
lret
and
sbbb
cmp
test
pop
sub
pushf
in
je
stos
mov
rol
out
fcmovbe
sub
jp
aad
adc
es
push
or
sahf
mov
in
adc
lods
sti
lods
imul
inc
rolb
lahf
outsl
pop
lods
add
insb
or
jne
pop
add
jmp
or
adc
and
in
mov
mov
sub
lods
lret
and
daa
cmp
pop
cltd
out
or
xor
inc
jo
test
jno
or
fidivs
dec
insb
andb
rcr
subb
sub
in
dec
push
sarb
enter
hlt
adc
cwtl
dec
int3
ljmp
pop
lods
je
mov
mov
jge
add
fdivrl
xor
xor
cwtl
adc
idivb
lret
mov
push
pop
jae
xchg
mov
es
idivl
fcmovne
adc
loop
int
out
jp
test
cmpsb
inc
aaa
pop
xorb
orl
mov
mov
aam
mov
sbb
cmp
cmp
out
push
mov
mov
fs
xor
mov
clc
stos
stos
mov
dec
cli
mov
out
jg
out
insl
int3
dec
jb
aam
jae
test
pop
mov
cwtl
mov
add
sbb
sub
je
int
adc
adc
ret
xlat
cmpsb
pop
sarl
loopne
fwait
scas
jae
sub
mov
outsb
test
int3
mov
js
ljmp
or
push
aas
mov
push
mov
push
mov
xchg
fs
or
hlt
mov
add
cmp
insb
dec
lock
sbb
sarl
push
dec
xor
cmpsb
sbb
ret
in
lret
push
jne
push
xchg
adc
lret
in
sbb
inc
fwait
bound
pop
xor
jbe
xor
mov
adc
pop
inc
pop
inc
mov
outsl
jne
out
clc
fadds
cld
out
fldenv
out
jg
adc
idivl
jl
dec
jg
jns
push
cmp
lcall
ss
cmp
aas
sarb
insl
or
add
pop
outsb
pushf
xor
sub
test
or
arpl
les
bound
jge
cld
iret
mov
in
sub
fbld
gs
add
adc
scas
je
int
add
pop
push
lcall
popf
lret
dec
sar
push
jl
xchg
mov
cmp
stc
pop
add
cmp
mov
mov
pushf
mov
popa
push
ror
push
das
cmp
push
mov
push
adc
je
cmp
jl
jo
outsb
adc
test
hlt
and
jle
xchg
mov
cmp
ret
sbb
jle
sub
aam
inc
mov
add
inc
out
push
fsubl
or
int
lcall
ficomps
out
iret
js
mov
xchg
out
and
clc
test
mov
xchg
xchg
ret
xchg
in
dec
arpl
inc
pop
ja
sub
mov
sbb
lahf
and
fimuls
loopne
xor
insl
aad
xchg
loope
cltd
loop
or
jne
out
sti
push
jnp
cs
jno
sti
pop
cs
fwait
push
xchg
jns
mov
jg
cltd
jge
and
jb
add
adc
lcall
fstps
aas
mov
cmp
cmpsl
pop
push
push
in
xchg
xchg
stc
insb
andnps
mov
mov
out
mov
mov
in
adc
xlat
pop
iret
jg
sahf
push
int
adc
cmp
mov
incb
rcll
xchg
pop
ja
mov
push
mov
push
mov
mov
inc
inc
repnz
pop
in
sti
out
mov
jmp
in
mov
notl
iret
rol
movsb
pop
jo
negl
xchg
pop
jno
fwait
xchg
adc
faddl
insb
push
mov
repz
or
pop
pop
movsb
mov
jae
xor
xchg
gs
cmp
mov
or
movsl
push
xor
inc
fidivrl
cmp
sub
subb
ljmp
xchg
jo
int
popa
jnp
leave
push
mov
lcall
jae
cmp
mov
or
dec
and
ret
sahf
xorl
in
ja
pop
in
repnz
jb
or
add
inc
mov
mov
sar
das
mov
jp
add
sub
test
roll
add
pop
fwait
inc
sub
jns
push
popl
idivb
mov
jne
cmc
dec
pop
inc
sub
xchg
ds
xor
mov
mov
bound
mov
xchg
cmc
dec
xor
jg
or
adc
imul
cmp
loop
js
sub
leave
sbb
fprem1
mov
popa
sub
pop
adc
cmc
in
fwait
pop
outsb
lods
out
inc
iret
call
inc
fnstcw
outsb
inc
shrb
pop
in
mov
call
les
pop
adc
bound
mov
aad
mov
inc
and
sahf
jnp
pusha
jecxz
mov
push
shlb
nop
lret
push
sti
sbb
xor
or
cli
mov
push
sahf
inc
cmp
cmpsb
dec
rcl
or
ret
enter
enter
inc
pop
iret
xchg
xor
mov
xor
shll
pop
jns
lods
mov
cwtl
bound
fidivl
bound
jne
push
imul
inc
shll
xchg
mov
mov
inc
add
mov
je
imul
or
adc
cmc
xor
faddl
pusha
dec
sbb
cwtl
xor
ret
negb
leave
push
push
jp
jp
add
jno
sbb
ret
mul
cli
dec
sbb
je
inc
into
add
jnp
add
sub
inc
add
dec
ds
push
sub
in
fcmovb
out
leave
cmp
sbb
movsl
clc
aad
shrb
popa
stos
cltd
or
lods
pusha
jmp
ljmp
cmc
mov
inc
xchg
lret
pop
adc
push
lea
scas
add
mov
dec
call
test
mov
pop
pop
jge
xlat
add
mov
ljmp
sbb
outsb
sbb
push
lret
out
mov
ja
test
scas
pop
in
pop
push
rcll
lock
mov
les
push
int
ss
test
clc
dec
mov
clc
lods
inc
pop
adc
pop
mov
and
add
mov
xorl
je
push
loopne
outsb
into
xor
add
lods
insb
pop
sbb
adc
int
xor
mov
in
pop
mov
xchg
mov
imul
and
or
addl
adc
mov
lcall
and
inc
mov
insb
aaa
jno
pop
fwait
out
in
notb
sbb
incb
or
rorl
hlt
push
outsb
imul
cmpb
lahf
pop
cs
jnp
inc
mov
jg
stos
das
and
push
fdivp
mov
int3
out
cmp
rcrl
xor
movsl
lcall
or
mov
lcall
into
mov
in
push
int
sub
push
ret
inc
ficomps
adc
push
jbe
imul
repz
jl
sbb
sbb
and
test
rcrb
loopne
lret
add
fcoml
add
and
cmc
cld
sbb
lods
sbb
push
or
test
cmp
stc
int
adc
inc
or
testl
negb
push
ss
popa
or
push
xchg
das
push
mov
cmc
repz
outsl
or
fisubrl
and
cmp
push
pop
inc
pop
mov
aam
fistps
sbb
cld
imul
test
mov
repnz
lahf
sbb
push
lea
mov
xor
test
bound
scas
xchg
sub
dec
fnstcw
adc
jno
lea
jbe
pop
icebp
das
ret
mov
gs
adc
enter
fsts
fwait
jl
insl
push
xor
cmpsl
das
xchg
mov
cmp
mov
mov
sub
loope
enter
out
sbb
shl
or
gs
test
popa
call
cmp
mov
jae
cwtl
jle
xchg
loop
mov
nop
jecxz
jle
fwait
mov
pop
dec
into
push
cmp
jns
xor
and
jp
or
icebp
add
sahf
ljmp
jl
repz
mov
push
gs
rcrl
or
mov
jmp
int
jnp
xlat
add
out
ljmp
rorl
cmp
xor
jmp
sbb
pop
xchg
das
mov
imul
fwait
mov
and
bound
outsl
outsb
adc
cwtl
inc
sub
push
xchg
push
stc
loope
mov
inc
int3
popf
mov
jge
mov
shlb
jbe
xor
aad
fcmovu
mov
movsl
sbb
jl
xor
outsb
ret
icebp
and
andl
push
adc
jo
or
adc
sbb
mov
mov
mov
mulb
ret
stos
fidivrl
xchg
inc
jns
mov
jbe
and
fdivl
testl
inc
sbb
lods
mov
les
lea
inc
adc
jecxz
xor
inc
movsl
cmp
lds
cmpsb
cmp
rcll
xor
iret
iret
lcall
dec
es
les
add
xchg
ja
int3
dec
jecxz
mov
jo
cltd
xchg
pop
mov
test
das
add
pop
lea
les
mov
jno
inc
mov
mov
out
lds
inc
push
int3
cmp
sbb
sub
arpl
out
mov
jg
ds
repnz
dec
lret
fdivp
out
add
pop
sub
aad
das
push
sub
jb
dec
in
or
adc
cmp
push
mov
push
mov
mov
aas
mov
lret
or
mov
pop
andl
sub
sbb
or
xchg
pop
insl
push
and
sbb
fwait
daa
mov
push
jno
enter
fidivl
cmp
int
das
jle
add
mov
in
das
mov
lahf
jnp
jmp
mov
subl
xchg
scas
push
push
ds
ficoms
jne
push
xchg
inc
sub
or
mov
sub
push
push
mov
test
les
dec
mov
mov
push
aam
pop
dec
jbe
out
adc
out
stos
gs
gs
in
add
jg
ljmp
sbb
add
lods
addb
pop
dec
pop
ss
lret
xor
lret
sti
cmpsl
pop
lods
inc
loopne
push
rcrb
aad
mov
inc
mov
outsl
mov
mov
and
cwtl
xor
movsb
addr16
idivl
add
mov
adc
mov
push
sbb
xchg
mov
outsb
aas
fisttps
cmp
jno
insl
cmpsl
sub
mov
insl
xor
sti
loop
test
xchg
mov
imul
shlb
mov
add
add
push
cmpsl
xlat
mov
cmp
and
cli
jge
shrb
inc
pop
popa
insl
pop
push
push
mov
xor
pop
adc
sarl
fstpt
sub
mov
popf
arpl
sub
adc
xchg
inc
mov
cmp
adc
shll
aam
push
shrl
xchg
or
loop
arpl
arpl
repz
push
mov
cmc
lea
sub
scas
dec
scas
add
xchg
add
lret
jns
cmc
ret
hlt
pop
lret
arpl
aaa
push
clc
push
dec
adc
or
mov
xor
das
cs
sub
xor
fisubl
aad
aad
jle
inc
daa
popf
data16
xchg
mov
das
jg
shll
test
cs
cmp
or
icebp
ja
scas
idiv
packsswb
xchg
icebp
loopne
cld
fmul
addr16
push
xlat
cld
sbb
push
loopne
and
add
in
adc
jl
mov
ja
test
dec
decb
fsubrl
in
daa
out
sbb
xorb
jg
adc
inc
add
push
jmp
icebp
mov
xor
and
je
inc
mov
pop
cmp
push
repnz
add
daa
push
gs
imul
cwtl
mov
adc
ret
pop
int3
cmp
xchg
xor
xor
jb
push
sub
or
out
fistps
mov
xchg
cmp
testb
sarl
lcall
mov
bound
mov
stc
movsb
popf
jne
sarl
lcall
rcrb
fnstenv
xor
leave
mov
xchg
mov
test
gs
movsb
push
xor
in
in
dec
fadd
dec
outsl
sbb
mov
ss
pop
dec
or
sub
cmpsl
and
cmp
mov
popf
mov
cmp
loopne
jne
ds
outsb
out
hlt
add
imull
movsb
fnstcw
rcrl
jecxz
cwtl
stos
sarb
fld
inc
inc
or
popf
jbe
add
bound
bound
and
decb
popf
inc
scas
out
fdiv
jg
leave
stc
mov
lcall
adc
and
bound
fnstenv
jg
neg
dec
mov
aam
dec
pop
jo
cmp
xchg
or
out
shlb
and
xchg
push
mov
pop
lods
sbb
addl
outsb
aad
jecxz
std
pop
shll
mov
mov
mov
sbb
ja
mov
and
jae
test
frstor
pop
mov
pop
out
mov
xchg
sub
jnp
add
or
push
jle
cmp
jo
jecxz
sbb
loopne
xor
mov
ja
dec
pop
xor
data16
js
mov
xchg
pop
fsubs
adc
dec
sub
out
or
mov
xchg
push
movsl
add
jb
lea
aas
jmp
pop
xchg
xchg
test
dec
loope
xchg
pop
push
sbb
data16
dec
mov
lods
xor
push
sub
or
mov
push
ss
out
nop
sub
repz
xor
lods
dec
outsl
sbb
xchg
mov
lret
mov
lahf
mov
xor
inc
dec
call
enter
add
and
inc
push
ret
test
test
or
lcall
sub
and
adc
xor
call
in
dec
xchg
push
and
lahf
out
scas
and
mov
dec
inc
imulb
xor
sub
mov
dec
push
scas
lahf
jo
fwait
xor
dec
cmp
lods
loope
xor
and
ss
outsl
or
add
mov
or
sbb
jno
loopne
jecxz
ss
jg
cld
mov
js
xchg
insl
out
insl
dec
sarl
cltd
cmp
xchg
dec
mov
sbb
gs
daa
enter
adc
lock
mov
lret
lcall
adc
adc
pushf
sbb
adc
sahf
jne
jb
push
inc
hlt
outsl
stos
cmp
aaa
adc
into
jle
loope
sub
jecxz
fdivr
adc
gs
adc
xchg
mov
mov
jg
das
stc
lods
ss
out
xchg
aas
shrb
jmp
ljmp
pop
dec
cmp
test
sub
outsl
pop
fdivp
adc
jg
insb
xchg
lahf
mov
pop
cmc
outsb
daa
jnp
pushf
std
int
mov
inc
pop
cmp
push
mov
cmp
xchg
mov
jne
inc
rcll
repz
gs
xor
loope
out
push
movq
loope
decl
fadds
mov
mov
jne
jmp
das
push
fsubs
dec
stos
push
in
jle
call
repz
jns
push
jp
cmpsl
cmp
mov
test
fcoms
xchg
addb
sarl
fadds
sbb
packsswb
subl
popa
inc
mov
shll
mov
jo
repnz
and
sub
sub
stc
jbe
inc
pop
sbb
push
adcl
rol
or
cs
adc
adc
cmpsl
push
movsl
jne
out
hlt
lret
icebp
xchg
mov
mov
jle
sarb
lahf
jo
mov
add
int
mov
lock
clc
inc
sbb
stos
hlt
shrb
in
int
push
aad
push
push
jge
xlat
fsubrs
pop
mov
mov
or
and
xchg
add
add
push
mov
dec
xor
xor
in
pusha
cmp
xor
js
pop
sbb
mov
jl
arpl
push
adc
inc
cmp
lea
and
push
iret
inc
aaa
js
adc
mov
daa
push
mov
mov
sarl
mov
or
push
fdivs
ljmp
bound
or
lahf
pop
fldl2t
xchg
subl
jmp
and
pushf
mov
je
in
push
dec
scas
fsts
call
andl
or
mov
stos
repnz
sub
clc
dec
in
mov
pop
mov
mov
std
add
gs
mov
imul
jmp
xor
xlat
jg
js
imul
ficoms
imul
lret
sbb
mov
push
jmp
inc
push
in
pop
hlt
mov
cmp
ljmp
cmpsl
cmp
int3
mov
xor
cltd
adc
xchg
push
test
fists
lods
and
add
mov
xchg
xchg
xchg
xor
pop
insb
and
push
lods
and
and
inc
add
inc
jmp
insl
sbb
sub
fistpl
sub
cltd
xor
adc
jl
out
lcall
fsts
rcl
or
xor
stc
push
fsubr
popf
pop
inc
add
mov
pop
call
loop
repz
pop
pop
sbb
les
cwtl
add
mov
or
pop
in
jge
cmpsl
enter
mov
or
imul
xchg
stc
shrl
stos
es
push
test
sub
sahf
mov
add
xchg
mov
mov
movsl
out
mov
imul
dec
in
mov
in
imul
fsts
push
sbb
sahf
loope
ss
enter
xchg
push
pop
aam
adc
pop
dec
push
dec
dec
test
test
ss
inc
adc
js
ficoms
sub
cmp
pop
mov
and
dec
cs
xor
aam
mov
jmp
sub
push
fisubrl
jg
mov
inc
adc
pop
pop
pop
dec
xchg
out
fs
pop
jle
popf
iret
loopne
je
das
jne
cld
jg
pop
push
adc
add
in
pushl
push
mov
mov
jle
in
sbb
push
popa
inc
std
mov
repz
xor
or
fld
lock
xchg
adc
xorl
inc
std
cmp
mov
jecxz
or
outsl
cmp
test
movl
in
pop
cmp
mull
pop
adc
mov
insl
lret
lock
add
popf
ret
out
push
icebp
cmpsb
popa
add
dec
cmp
in
imul
or
das
lods
mov
adc
fwait
xchg
outsb
nop
mov
out
negl
dec
xchg
jns
imul
flds
leave
pop
stc
daa
jmp
xlat
cmp
sub
pop
xchg
jns
imul
flds
leave
pop
stc
daa
jmp
xlat
cmp
sub
pop
xchg
jns
imul
flds
leave
pop
clc
daa
jmp
xlat
cmp
sub
pop
xchg
stc
cmpsl
jmp
std
adc
add
fcoms
enter
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
adc
and
xor
cmc
leave
notb
test
or
jne
add
icebp
xor
and
xor
inc
test
popa
movsl
jno
xchg
inc
xchg
push
mov
imul
xor
cmp
sub
pop
test
jns
jno
cwtl
inc
mov
pop
leave
adc
push
mov
inc
push
lea
adc
mov
pop
cmpsb
push
sub
add
adcb
jo
test
in
in
add
mov
adc
and
in
fcom
ja
orb
loopne
adc
cltd
cmp
and
loope
icebp
lea
addb
call
es
xchg
sahf
iret
jo
or
dec
xchg
ds
icebp
xor
mov
test
dec
sbb
iret
adcl
cmp
adc
jmp
cmc
into
mov
test
xchg
lods
jns
jle
sbb
fcompl
addb
icebp
and
lds
aad
in
cmc
push
test
popa
movsl
push
push
mov
add
icebp
pop
insl
shll
inc
cmc
xor
aaa
cld
sub
jno
cmpl
jo
pop
pushf
jnp
mov
inc
cmc
sub
int3
and
ret
sub
ss
imul
cmpl
or
jno
addl
jne
add
icebp
xor
and
xor
inc
test
popa
movsl
jno
addl
jne
add
icebp
xor
sahf
or
sub
sub
dec
and
test
push
into
iret
popf
mov
sub
repz
push
lret
mov
insl
pushw
bound
pop
arpl
mov
jns
fadd
push
and
cmc
lahf
inc
and
lret
mov
mov
notl
push
mov
cmpl
nop
hlt
jle
add
pushf
cltd
lea
sub
ret
cmp
mov
xor
fisttps
xor
out
xchg
in
stc
mov
cmp
dec
popa
push
fldcw
fbstp
dec
lods
and
inc
and
out
stos
mov
jae
aaa
out
mov
sub
repz
jne
ds
rclb
movsb
iret
or
out
jne
jb
xchg
xchg
test
xchg
mov
out
push
test
mov
xchg
xchg
mov
sbb
and
movsb
lret
jle
adc
bswap
pop
lods
mov
and
jmp
push
or
xchg
and
nop
xor
aad
dec
aaa
sbb
lcall
adc
cmp
test
pop
sub
std
mov
leave
or
mov
out
loope
cltd
mov
or
mov
mov
or
sbbb
sbb
lahf
and
into
jge
dec
subl
movq
int3
push
nop
add
enter
fs
shl
jle
jl
xor
sbb
bound
pop
cwtl
mov
shlb
jg
pop
xchg
fiaddl
xchg
fwait
jmp
icebp
loop
ja
xchg
sbb
leave
mov
cmp
mov
sbb
sub
and
push
adc
fwait
push
jns
or
lods
dec
out
push
jne
xlat
xchg
sub
popf
sub
rcr
shrl
xchg
into
add
out
mov
xchg
daa
pop
and
int
xchg
rcr
mov
std
mov
and
mov
fs
mov
stos
mov
lods
stos
mov
lret
dec
add
sbb
aam
subb
js
lock
sub
inc
sub
pop
xlat
in
mov
xchg
fstps
inc
mov
and
jge
adc
in
mov
js
and
movsl
push
cld
loop
add
cs
int3
lret
hlt
int
cmpsb
in
aam
in
cld
shrl
lock
fcom
push
pushf
popa
loope
xor
mov
adc
mov
jo
out
test
stos
jp
mov
add
jne
repz
int3
movsb
jae
mov
fwait
mov
imul
cmp
mov
fisttpll
jns
pop
data16
repz
in
test
es
dec
or
jnp
pop
xor
lret
mov
xchg
add
pusha
aam
dec
dec
dec
int3
xor
ret
icebp
jle
mov
cmp
xlat
adc
xor
pop
mov
mov
mov
push
fistl
mov
sti
mov
sbb
shrb
insl
sub
add
xor
cmp
inc
movsb
xchg
das
aas
test
rcl
fistpl
xchg
inc
pop
stos
mov
cltd
daa
stos
adc
pop
sbb
pop
mov
inc
push
ljmp
dec
push
stos
mov
outsl
leave
xchg
insl
sbb
mov
dec
pop
lds
push
into
shll
outsb
shl
or
arpl
xor
dec
add
sub
pop
mov
shrl
insl
lahf
and
je
lret
test
pusha
add
add
cmpsl
mov
xor
ret
inc
pop
adc
sbb
ljmp
xchg
mov
xchg
jmp
sub
cmc
data16
popl
add
push
stos
cwtl
xchg
cmp
pop
pop
mov
fnstcw
shrl
cmp
cmp
mov
stos
aaa
mov
addr16
loop
xchg
cld
add
test
dec
sbb
jecxz
cmp
mov
std
jb
clc
call
xchg
fstl
jb
int3
cmpsl
push
jns
aam
sub
xor
add
data16
sahf
sti
cmp
fnstsw
enter
or
jge
jle
gs
add
jbe
in
aad
enter
movsb
jmp
lds
xor
push
mov
scas
mov
test
rcrl
mov
sub
adc
adc
push
stc
dec
scas
int
lcall
push
addr16
cli
aas
js
stos
and
adc
cmp
xchg
or
add
divl
sub
movsb
cmp
jb
jge
insb
sub
push
xchg
ret
outsb
cs
cmpl
ja
ss
mov
mov
in
mov
sub
cmp
roll
pop
je
sub
jl
cmp
daa
add
pop
js
lcall
rclb
iret
cld
jcxz
aaa
dec
adc
repz
test
cld
sbb
push
je
jno
dec
push
mov
xchg
fstps
dec
fwait
std
pop
arpl
push
lods
imul
loopne
inc
sbb
out
sbb
aam
insb
movsl
xlat
mov
shr
mov
xchg
shl
mov
data16
and
shrl
jp
mov
sbb
xorl
jle
xchg
icebp
js
frstor
dec
andb
loop
cmp
and
mov
testb
or
cmp
and
push
push
mov
mov
mov
mov
adc
sbb
cld
aam
adcb
sub
adcl
pop
cmp
cli
sub
in
ret
jl
test
xor
outsl
adc
mov
loope
sub
jb
sbb
fimuls
cmp
inc
sub
jae
xchg
mov
pop
loope
pop
pushf
mov
mov
loopne
inc
std
lods
divl
call
daa
test
jecxz
out
or
inc
lcall
ljmp
test
jecxz
pop
jecxz
xchg
iret
sub
fcmove
jp
mov
jecxz
popf
sahf
add
mull
test
int3
leave
push
test
iret
add
push
jp
mov
test
or
dec
cld
mov
mov
xchg
xlat
add
clc
ljmp
add
add
outsb
jnp
rcl
js
xchg
ljmp
mov
mov
push
fldenv
add
mov
lds
std
xchg
movl
adc
ss
push
sbb
pop
popf
jecxz
push
dec
add
sti
mov
fiaddl
repnz
stos
mov
mov
or
xor
sbb
or
dec
roll
xchg
xchg
cmpsl
iret
jmp
cld
pop
imulb
cmp
push
sbb
jl
xor
sbb
add
sbb
rcr
push
rolb
inc
pushw
dec
mov
add
loop
mov
cs
xchg
cmpb
out
inc
mov
jp
pop
mov
sbb
cmp
push
mov
in
jne
push
out
cli
inc
das
insb
movsb
jg
and
mov
xchg
push
adc
mov
add
inc
sbb
and
jge
mov
das
lds
push
popa
dec
shlb
add
jno
mov
sub
mov
fisubrs
movb
jmp
frstor
mov
mov
sahf
outsb
jnp
push
stos
outsb
mov
adc
xor
xchg
sarl
test
fiadds
mov
notl
enter
daa
xchg
mov
into
mov
testl
sbb
mov
jmp
push
jno
jecxz
call
rolb
push
xchg
or
movsl
pop
lahf
fimuls
movntq
mov
bound
int
lcall
pop
jno
jno
mov
cli
leave
push
cmp
arpl
lods
mov
into
mov
test
jg
loope
sub
pop
out
enter
xor
js
mov
adc
ret
cmp
xor
fadds
imul
cwtl
inc
mov
hlt
xor
sub
std
pause
jl
dec
popf
mov
xlat
movsl
arpl
in
call
lahf
popf
loopne
fwait
mov
mov
sub
movsl
sbb
and
or
pusha
aas
jmp
cmp
push
add
adc
rolb
and
js
mov
push
lds
dec
cmp
jae
xor
das
loopne
in
ficoms
sbb
mov
cld
jnp
out
call
adc
test
aad
jmp
or
popf
ds
mov
divl
in
ret
mov
insl
mov
mov
aaa
in
mov
push
pop
and
xchg
popf
push
push
cmpsl
and
fmuls
frstor
rcrl
cmp
cwtl
mov
jg,pn
push
push
adc
push
push
daa
cmc
and
inc
dec
scas
jle
and
testb
sbb
xchg
scas
lcall
push
xchg
loop
lds
ret
sbb
call
lret
cmpsb
push
dec
fs
outsl
mov
daa
filds
das
mov
mov
lds
sub
aas
jae
add
cmp
adc
mov
and
test
aaa
test
cld
pop
enter
or
mov
adc
cmp
add
bound
and
sti
mov
cwtl
fnsave
inc
daa
sub
mov
push
mov
cmp
mov
in
push
repnz
sbb
aad
mov
sbb
mov
jns
rorb
dec
and
lcall
inc
dec
imul
pop
push
xchg
mov
push
cmp
fs
lods
je
add
cwtl
mov
jge
cli
or
insl
mov
sbb
cld
jae
sbb
fisubrs
mov
les
xchg
or
mov
ret
mov
addr16
lcall
or
xchg
xchg
insl
pop
in
dec
scas
std
lods
outsb
add
push
push
mov
cltd
jno
push
pop
adc
insl
cmp
adc
mov
shr
adc
and
adc
mov
or
loope
ret
xor
test
lcall
mov
ds
add
mull
xor
push
xchg
loope
imul
lcall
add
les
addl
jl
jp
ficoms
or
fdiv
iret
scas
popf
sahf
repnz
pop
jp
inc
pushf
mov
out
xchg
pop
xor
cwtl
in
push
adc
xor
dec
and
mov
xor
adc
in
adc
call
scas
inc
movsb
sbb
out
icebp
mov
mov
push
sub
mov
icebp
jae
nop
cmp
inc
out
cwtl
loope
test
pop
jne
iret
mov
mov
inc
lahf
mov
stc
ss
mov
sub
out
sub
cs
xchg
mov
push
and
and
xor
std
cmpsl
inc
xor
ret
pop
es
jo
ficoms
aad
jp
push
sub
insl
lret
push
xor
and
repnz
gs
push
call
cmp
lock
dec
sbb
adc
xor
stos
pop
ss
repnz
and
cmp
mov
pusha
mov
jns
aam
pop
repnz
cmp
and
cmpsb
popa
inc
jnp
repnz
call
jnp
stos
xchg
lret
jge
inc
imul
ss
cmp
aas
and
test
test
into
imul
or
lret
fiaddl
and
test
enter
mov
test
add
dec
add
imull
test
mov
fldl
out
mov
loopne
sub
loop
push
dec
cltd
outsb
stos
clc
test
fstl
shl
push
stc
call
popa
ret
mov
mov
ja
sub
fidivrs
push
stos
dec
in
inc
aaa
inc
mov
mov
into
pusha
jo
stc
xor
popf
js
lea
cmpl
jecxz
rcl
xchg
mov
out
jmp
sahf
ret
mov
adc
push
push
mov
in
jg
cmp
out
cld
lock
xchg
imul
ret
xlat
push
or
cld
fldt
je
jmp
pop
push
and
jl,pt
sbb
mov
and
shlb
mov
in
jecxz
outsb
aam
dec
outsb
jnp
notl
mov
arpl
lods
xchg
imul
push
lret
aad
push
mov
jb
lcall
pushl
or
jo
push
xor
mov
and
jp
adc
mov
mov
adc
call
add
ret
movsl
hlt
in
xor
and
call
pop
jae
call
cmp
mov
cmp
xchg
sbb
scas
xor
jp
stos
fstpt
ljmp
adc
xchg
test
das
fwait
xchg
inc
dec
mov
bound
jne
mov
aaa
nop
and
jns
lods
mov
adc
add
testl
popa
sub
inc
es
mov
inc
sbb
popa
daa
xchg
sub
add
mov
ja
lea
adc
jl
jo
push
pop
fbld
jmp
sbb
sbb
lret
faddl
sub
add
push
jb
inc
lock
dec
lcall
cwtl
and
pop
or
loopne
inc
int3
iret
xchg
data16
rolb
imul
pop
mov
aam
enter
sbb
and
dec
sub
mov
scas
ds
and
test
sub
mov
js
push
xchg
test
lahf
lods
mov
inc
xchg
daa
lcall
jmp
dec
dec
loop
sar
pusha
scas
xchg
jmp
inc
mov
mov
mov
inc
sub
sub
repz
insw
outsb
ret
xor
pop
fcompl
loopne
adc
into
cmp
jg
and
sbb
js
ret
stc
pop
or
or
stc
push
inc
sub
sbb
ljmp
addr16
push
js
je
clc
jbe
and
pop
jne
loopne
sub
mov
dec
sbb
aam
xor
mov
cwtl
xchg
lea
lods
push
adc
mov
lret
dec
testb
mov
lock
adc
rclb
shll
mov
add
add
inc
mov
push
cld
push
dec
and
pop
or
fdivrl
mov
lods
sarb
les
cmpsl
mov
add
push
in
sub
in
and
cmc
cli
popf
popa
arpl
rolb
lock
lods
data16
sbb
iret
and
pushf
jnp
pop
push
idivl
arpl
push
or
es
sub
or
jo
int
or
xchg
xchg
add
fisubl
sbb
sti
rclb
imul
mov
sub
jbe
cmp
test
pop
xchg
ficoms
xchg
dec
out
sbbl
test
mov
std
call
sub
jo
pop
push
add
imul
ja
popf
aas
push
mov
aaa
adc
sub
adc
mov
test
mov
and
inc
lcall
xchg
lret
aas
xchg
cmpsl
push
xor
fisubrs
and
pop
jb
cmp
push
or
push
ds
xchg
daa
mov
mov
jmp
push
sub
in
sarb
jmp
mov
in
mov
cltd
cmp
inc
or
lea
jmp
into
jb
ret
pop
call
shll
xchg
ljmp
aaa
push
jmp
xchg
nop
lea
out
mov
cmp
cmp
mul
fwait
mull
into
js
sub
pop
fldcw
add
arpl
inc
push
jb
mov
dec
fistpl
push
jp
and
out
sahf
jb
sbb
inc
add
sub
fdivrl
pop
push
jne
aad
ror
sbb
sub
out
das
push
xchg
xor
inc
test
mov
mov
mov
mov
movsl
fisubl
lret
inc
out
icebp
popl
loope
mov
outsl
mov
push
dec
cltd
jnp
sbb
insb
xchg
mov
sbb
lock
out
je
push
sbb
fisubl
or
fdivs
mov
jecxz
dec
mov
sbb
xor
dec
mov
sub
cltd
mov
data16
js
mov
inc
sbb
out
and
out
xor
scas
sarl
jo
and
fstp
xchg
mov
mov
jb
xchg
scas
mov
mov
dec
inc
or
xor
jmp
add
clc
mov
push
dec
out
mov
outsb
imul
js
xlat
mov
push
fwait
inc
push
divl
sbb
js
lds
outsb
add
mov
add
sbb
dec
out
mov
and
lds
imul
andl
cmp
scas
jnp,pt
mov
ficompl
rcrb
lahf
xor
or
sbb
xor
jmp
and
in
push
out
fidivrs
sub
aad
stos
xor
cmp
and
sahf
stos
cmpl
sub
aad
sbb
fnstsw
adcb
shll
out
fwait
lds
pop
xchg
int
push
and
popa
mov
test
out
dec
mov
cmpsl
fisubs
mul
jl
loope
pop
shlb
jae
sbb
movsb
sar
mov
mov
notb
cmp
mov
punpcklbw
insb
jbe
inc
jmp
lods
repnz
ds
fidivl
mov
push
pushf
movsl
cmp
and
adc
ret
cld
or
add
or
cmp
mov
shr
mov
sti
out
es
cmp
hlt
add
data16
and
repnz
sub
mov
daa
fsubs
push
add
dec
stos
add
stos
add
push
fdivrl
jle
popa
jp
inc
lods
sub
outsl
mov
mov
and
pushf
repnz
and
sbb
loop
jo
or
or
frstor
rorl
sub
jnp
jnp
add
lods
loope
and
push
dec
inc
mov
addl
hlt
pop
fdivl
js
aaa
ljmp
rorb
test
test
dec
mov
test
mov
push
pop
ret
mov
add
jmp
adc
and
cld
push
xchg
dec
xchg
shll
mov
adc
call
mov
roll
es
mov
loope
xor
jae
out
add
call
repnz
stos
incl
sbb
inc
mov
popa
call
jo
insb
paddusw
iret
es
ret
cmpsl
cld
aad
xchg
pop
fisubrl
movsb
sub
jle
xchg
push
mov
cmpsb
mov
mov
mov
into
push
into
xchg
mov
mov
pop
jle
addr16
jns
lock
sub
arpl
mov
into
sar
pushf
xchg
hlt
mov
jecxz
jns
out
sahf
lods
sub
mov
sub
outsl
cmpsb
push
pop
add
mov
repz
mov
xlat
sbb
mov
jno
mov
test
sbb
jmp
inc
outsl
xchg
adc
arpl
mov
xchg
mov
mov
adc
push
dec
test
cld
or
lret
pop
mov
push
inc
and
mov
hlt
cmc
jmp
int
rcl
jp
xchg
push
jg
test
cli
adc
lods
sbbb
inc
push
in
and
dec
sbb
push
stos
xchg
dec
fisttpll
das
mov
mov
inc
fistpll
mov
push
push
popf
cltd
pop
cmp
and
pop
lret
mov
shll
sti
div
ja
sbb
stos
sbb
loopne
mov
fiadds
addr16
leave
push
lea
dec
push
mov
ss
addr16
inc
sub
cmpsl
push
sub
hlt
mov
cmp
lds
aad
and
fs
mov
adc
jb
xchg
xor
cmpb
cmp
inc
and
cwtl
mov
cltd
cltd
mov
jnp
sub
fwait
cwtl
push
sub
mov
in
push
loopne
aaa
and
je
mulb
pop
push
insl
scas
data16
push
jp
or
pop
xchg
xchg
out
pusha
adc
mov
mov
aas
hlt
sub
lock
arpl
lahf
test
xor
pop
enter
outsb
jecxz
inc
fwait
les
mov
jb
aam
fisubs
push
lods
loop
adc
jl
cmp
pop
cs
lahf
inc
pop
icebp
sub
outsl
push
mov
pop
or
jl
movsb
mov
xlat
adc
mov
lcall
sub
jg
xor
add
mov
pushf
je
cmc
mulb
lea
andb
es
xor
andb
xor
inc
test
popa
movsl
jno
addl
jne
add
icebp
xor
and
xor
inc
test
popa
movsl
jno
addl
jne
add
icebp
xor
and
xor
inc
test
popa
movsl
jno
addl
jne
add
repz
and
xor
inc
test
loope
icebp
mov
inc
outsb
decl
gs
mov
pop
ljmp
sarl
xor
test
stos
sub
fistpl
lret
sbb
pop
mov
stos
imul
ljmp
stos
sub
cmp
sub
sbb
dec
mov
mov
mov
sub
arpl
aaa
shl
sar
xchg
mov
sub
adc
sbb
pop
cmp
cmp
mov
outsb
and
push
or
enter
aam
inc
dec
pusha
sub
add
cmp
arpl
ret
popa
aam
xor
push
jg
push
shlb
and
ds
cmp
sbb
pop
sub
cmp
mov
pop
cli
outsl
mov
adc
and
xor
jp
mov
pop
ds
adc
cmp
aam
sbb
mov
in
cmp
xor
xchg
xchg
pop
movsb
jne
jp
lret
pop
lcall
and
enter
stos
test
movsl
imul
out
push
mov
rcrl
sahf
lock
add
adc
ficompl
lret
or
cmp
dec
dec
stos
imul
ljmp
or
jns
add
aad
insl
fwait
dec
out
ds
sbb
fwait
push
mov
push
lcall
jne
pop
lds
out
dec
int3
aaa
jnp
jecxz
sbb
sbbb
scas
js
ret
push
stos
pop
mov
sbb
adc
or
pop
fildll
jmp
out
jle
sub
sbb
or
sti
sub
cmp
or
sbb
dec
mov
stos
imul
ljmp
sti
sub
cmp
or
sbb
dec
mov
stos
scas
cmp
ja
inc
lahf
jnp
outsl
xor
adcb
adc
push
hlt
cmp
cltd
call
dec
sub
daa
mov
mov
adc
lods
inc
repnz
push
test
outsl
daa
call
sub
sti
xchg
add
sub
enter
mov
int3
sbbl
cmpsb
mov
lret
mov
xor
movaps
insl
or
jae
sbb
lret
xor
xchg
xchg
mov
mov
fisttps
mov
sbb
repz
push
inc
push
loope
mov
lods
fsub
pop
ds
mov
pop
mov
cmpsl
test
fdivl
mov
aas
sub
out
ds
es
in
sub
mov
jle
shrb
lods
rorl
mov
push
hlt
faddl
rclb
xchg
ret
mov
inc
mov
loop
sbb
and
sub
inc
xchg
cmpsb
inc
pop
adc
add
shll
push
int
outsl
sbb
gs
lahf
out
movsl
aas
ss
out
sub
push
xor
xor
insb
push
pop
lret
jo
cmpsl
in
test
testl
gs
ret
pop
cs
or
imul
out
push
adc
fnstenv
jg
mov
xor
int
fisubs
stc
or
or
mov
xor
sbb
add
pop
mov
and
cltd
push
mov
jg
mov
aaa
dec
xchg
jb
jecxz
mov
mov
jne
out
test
cmpsl
sbb
xlat
add
mov
jmp
pop
aam
dec
mov
sub
push
and
repnz
fwait
dec
jo
jne
mov
and
mov
out
lret
shr
shll
xor
cmp
pop
loopne
mov
aaa
xor
and
loop
pop
and
loope
jne
jecxz
call
js
pushf
push
cmp
movsb
jge
cmp
cmp
sbb
jmp
shll
add
adc
adc
mov
sbb
sub
xchg
data16
inc
sbb
div
dec
cmp
jae
aaa
nop
aas
out
jecxz
dec
jnp
je
xchg
jb
mov
mov
das
std
addr16
xor
mov
push
shlb
xor
jo
movsl
push
jp
mov
lahf
mov
mov
sbb
je
imul
xor
andl
sub
pushf
pop
jecxz
inc
mov
sar
in
cmp
enter
std
sbb
fwait
jmp
bound
sbb
test
cs
sahf
cmp
pop
mov
adc
int
add
dec
aaa
jbe
aad
stos
dec
sbb
fstpt
inc
es
ja
mov
test
pop
mov
cwtl
mov
mov
cmp
movswl
pop
add
inc
jo
movb
pushf
loope
enter
orb
aas
stc
push
adc
xlat
sbb
fcmovu
test
and
jmp
popl
add
mov
lods
dec
lahf
icebp
jp
cs
daa
and
ret
push
inc
jae
adc
sub
fidivl
pop
lcall
mov
repz
inc
aaa
shl
push
xchg
arpl
loopne
lds
adc
cmp
xchg
subl
fst
test
cmpsb
sbbb
rcrl
sbb
add
pop
lods
cmpsb
mov
imul
mov
mov
jp
out
es
inc
jo
movsb
clc
mov
sub
nop
cmp
call
sbb
sbb
ficoml
adc
jle
sub
sahf
icebp
push
int
ret
popf
rcl
repnz
loope
xor
ds
jecxz
popf
xor
js
mov
adc
sbb
repnz
dec
cli
push
pop
cmp
or
out
mov
mov
int
jle
sbb
mov
or
jp
adc
jne
jno
outsb
popa
fsts
loopne
mov
inc
mov
lds
aas
xchg
test
pop
popf
sub
jle
outsl
xlat
or
dec
out
jno
jbe
jecxz
push
popf
cld
sub
mov
aam
xchg
mov
dec
lret
leave
add
fimull
mov
sub
push
jmp
or
jb
mov
jge
aaa
push
dec
jb
dec
mov
dec
xor
mov
vpaddq
jne
pop
int
lret
xor
lods
cmp
das
aaa
loopne
cmp
add
sub
lcall
mov
pushf
add
jne
cmp
jb
pop
add
and
testb
or
movsl
mov
mov
inc
int
jb
sbb
cmp
testb
mov
push
jecxz
push
xor
xlat
ljmp
pop
add
mov
nop
mov
jno
repz
inc
xor
aas
sub
fnstsw
sbb
out
fucomp
popf
popa
loope
into
sub
add
xchg
in
mov
movl
cmc
leave
std
mov
aas
pop
jo
cld
es
inc
sbb
xchg
add
mov
push
aad
sbb
in
sbb
sbb
or
sbbl
dec
ljmp
xchg
outsl
iret
and
data16
lret
push
ss
or
lock
sarb
sbb
into
test
pop
push
ja
inc
test
sbb
fmuls
adc
ds
insb
xchg
push
lea
mov
push
std
ret
icebp
loope
mov
out
leave
inc
fistpl
test
sti
cmp
or
jp
jbe
pop
pop
mov
rclb
lcall
call
imul
and
out
scas
jbe
outsb
jmp
in
mov
mov
jo
adc
cmovae
pushf
xchg
adc
aaa
xchg
jmp
je
or
xchg
and
pop
pushf
add
in
shr
pusha
shrb
rclb
xchg
push
in
adc
push
jle
add
jno
shrl
int3
lock
popa
or
cmc
push
mov
cs
icebp
push
in
add
inc
adc
flds
xchg
mov
movsl
sub
aaa
xchg
call
push
mov
xlat
data16
and
mov
mov
pop
jae
xchg
js,pt
insb
jae
mov
cmp
xor
jp
jecxz
xchg
mov
push
push
dec
mov
xchg
outsl
rorl
andl
inc
stos
xchg
cmp
andl
out
add
push
adcb
add
sub
or
int3
mov
hlt
pop
push
add
leave
lret
imul
ret
push
mov
aaa
jg
xchg
shl
test
push
xor
mov
pop
popl
cmpsl
mov
mov
test
xchg
push
add
shlb
push
inc
jge
push
jmp
enter
dec
movsl
jns
in
xor
or
aaa
dec
push
adcb
repz
sub
sbb
fildll
push
push
adc
xchg
out
push
fcomps
pusha
dec
jns
sahf
jbe
xor
daa
and
cmp
and
cmp
movsb
popf
xor
cmp
int3
std
je
add
aas
in
sahf
sti
pop
mov
mov
lret
sbb
mov
popa
jmp
sbb
lret
mull
cwtl
adc
roll
fs
daa
jnp
xor
and
andl
cmp
mov
mov
pop
and
mov
cs
fwait
xor
sub
mov
or
enter
data16
or
mov
aas
insl
push
push
cmp
mov
iret
pop
adc
mov
sub
pop
icebp
test
cmp
icebp
in
sbb
or
mov
clc
pop
outsb
dec
mov
mov
adc
and
outsl
out
xor
inc
mov
imul
cmpsb
movsb
addb
ss
test
js
std
clc
mov
gs
and
leave
in
loope
inc
bnd
dec
out
faddp
lret
loopne
movsl
inc
add
cmc
lcall
addb
clc
jge
cmp
push
cli
cmp
mov
add
ljmp
lock
cld
add
lahf
jle
sar
add
or
jbe
sub
lods
mov
std
push
movsb
or
in
test
mov
adc
push
pop
push
pop
add
dec
int3
sub
push
add
icebp
mov
jmp
fstl
loop
or
cli
pop
stc
bnd
out
ss
push
jae
fs
jbe
push
jmp
lods
add
xchg
mov
or
fisubrs
bound
lods
subb
sbb
push
cmp
sbb
cmp
mov
popa
inc
ret
fildll
stos
xlat
jp
mov
jne
pop
pop
pop
ja
dec
adc
sub
int
push
sbb
mov
mov
bound
and
mov
mov
cmc
push
mull
hlt
scas
dec
or
cli
xor
sbb
jmp
mov
daa
out
test
sub
mov
mov
in
adc
dec
outsb
daa
inc
mov
aam
adc
dec
inc
cwtl
mov
leave
or
test
scas
test
pop
std
mov
mov
shrb
mov
les
lretw
pop
dec
xor
lods
pop
dec
imul
sahf
dec
call
out
sbb
or
push
fsubr
outsb
jmp
lock
push
pop
or
stos
fmuls
sbb
xlat
fcmovnu
fdivrl
push
test
xchg
mov
daa
hlt
adc
fwait
popa
mov
pop
test
cwtl
addr16
xor
in
jae
fcoms
pop
mov
fucomip
mov
add
adc
jp
xor
lds
mov
jl
ret
imul
mov
and
mov
test
sbb
dec
movsl
arpl
adc
and
pop
cwtl
fmull
mov
push
vmovsd
adc
push
inc
mov
pop
push
into
add
pop
imul
push
push
mov
lahf
roll
xchg
mov
fdivrp
aam
daa
inc
repz
mov
xor
cs
es
mov
mov
mov
xchg
xchg
jecxz
dec
mov
cmpsl
inc
adc
hlt
mov
cmp
aad
arpl
xchg
popl
fwait
mov
lea
jo
bound
add
negl
add
xor
dec
add
xchg
inc
gs
adc
sti
out
adc
adc
mov
cmp
jmp
sub
dec
push
mov
lcall
pop
dec
pop
cmp
outsl
push
mov
jo
incl
mov
inc
jae
xchg
jp
outsb
xor
mov
sub
dec
pop
pusha
xor
mov
insb
in
filds
or
scas
cmp
std
mov
test
lret
fdivs
and
in
popf
dec
pop
aaa
fstps
movsb
xchg
aad
je
ret
mov
or
sbb
in
and
dec
or
sbb
stos
loopne
sbb
cmc
jp
lret
mov
push
dec
sti
mov
pop
fsts
push
jmp
bound
popl
sub
pushf
stc
dec
push
xor
es
mov
dec
scas
mov
mov
or
or
pop
ret
pop
add
aad
negl
imul
jge
gs
pop
xor
rcrb
fwait
inc
add
jmp
adc
jge
pop
jge
push
fdivrp
cmc
loopne
add
inc
xchg
jns
mov
cmp
lock
lea
cmc
pop
inc
mov
cmp
inc
inc
xchg
lods
repnz
lcall
sub
sbb
jae
mov
add
cmp
out
fs
mov
adc
mov
xor
inc
imul
ss
in
push
sub
mov
pop
dec
test
fldl
mov
pop
mov
sbb
xor
dec
ficompl
in
mov
subl
mov
in
mov
xchg
adc
jae
mov
add
ret
lret
mov
jbe
mov
insl
inc
jl
pop
movsb
movl
out
dec
mov
insb
lods
pop
inc
out
xor
and
mov
stos
test
add
mov
sbb
dec
adc
cmp
out
cmp
or
mov
ljmp
and
and
lret
sahf
and
gs
fidivs
or
mov
pop
add
insb
push
xlat
mov
clc
and
xlat
out
jle
ret
test
aad
xchg
and
fwait
mov
mov
cmp
dec
mov
outsl
xchg
dec
lcall
push
xor
and
enter
dec
cmp
push
adc
out
mov
sub
xor
and
scas
data16
in
out
cmpsb
sub
adc
jp
sub
scas
stos
das
sbb
aad
or
jo
fwait
cmp
popa
push
pop
jnp
sahf
sbb
imul
sahf
jno
inc
and
cs
test
push
sbb
aad
cmp
das
sbb
fldt
xchg
inc
rclb
adc
es
pop
rcll
dec
inc
xor
pop
push
push
jae
in
daa
aad
mov
sbb
int3
orb
push
inc
mov
cwtl
mov
enter
shlb
ja
adc
push
mov
mov
and
out
xor
sbb
das
jo
cmc
or
lcall
mov
xor
in
pop
xorl
jmp
loopne
or
dec
add
adc
call
cmp
inc
in
mov
lods
sub
xlat
push
js
sub
loop
xor
imul
rcrb
push
dec
cmp
mov
cmp
loopne
cmpsb
mov
jmp
xlat
pop
mov
and
mov
and
xchg
call
mov
cmp
aas
dec
addr16
jne
in
jp
push
lahf
out
xchg
mov
pop
lea
cmp
addl
lahf
sti
popf
fisubl
test
test
lcall
and
mov
push
rolb
aam
fsubrs
call
mov
imul
push
movsl
and
jae
dec
add
js
pushf
test
pop
iret
repnz
std
jl
add
add
pop
sbb
jl
push
aam
mov
xor
int
adc
sub
sub
cwtl
inc
cmpsl
add
ss
push
cmpsb
lods
jae
jecxz
repz
frstor
pusha
mov
adc
adc
mov
in
sbb
mov
push
and
sub
sbb
mov
sbbl
fistps
push
push
inc
js
push
je
cmp
mov
test
stos
call
ljmp
mov
icebp
jp
fdivr
push
adc
idivb
xchg
scas
jno
out
cmc
add
enter
sbb
push
adc
ds
sub
pop
xchg
int
xor
dec
cltd
mov
outsl
jge
imul
xchg
inc
dec
ja
xlat
or
sub
pop
loop
std
icebp
ds
jae
xchg
popa
cmpsl
pop
sub
pop
inc
or
xchg
int3
push
rcll
sbb
js
test
adc
xor
fisubrl
cmc
mov
std
xchg
adc
shlb
jnp
aam
pop
repz
inc
mov
lock
inc
lock
outsb
push
stos
fnsave
push
movsl
sti
xor
jbe
out
fdivl
jb
outsb
lods
mov
cmp
mov
jle
jmp
aam
jae
push
lds
sub
data16
add
add
push
jp
mov
cmp
test
aas
cmp
add
pop
aam
loopne
testl
mov
or
mov
fs
and
cwtl
comiss
movsb
or
orl
icebp
sub
or
mov
xchg
inc
add
std
push
pop
cmp
dec
addr16
scas
mov
push
out
and
pop
sti
arpl
stos
sahf
cmc
sub
clc
adc
out
fnstcw
inc
leave
dec
inc
ja
pop
leave
loopne
jo
jmp
adc
es
mov
in
movzwl
jbe
cltd
pop
lds
cwtl
jmp
fcom
je
test
push
movsb
cmp
cmpsb
cmpsl
aad
jle
mov
loope
cmc
js
popf
push
cwtl
xchg
cmp
xchg
fcoml
mov
mov
inc
jb
data16
xor
mov
sbb
dec
and
stc
test
adc
push
xorl
jle
test
mov
xchg
insl
cmp
pusha
mov
adc
out
lods
out
xchg
sbb
and
clc
out
clc
nop
std
push
movl
or
xchg
fidivrl
cmpsl
sub
or
and
sbb
or
cmp
gs
mov
in
lds
pusha
and
push
adc
insb
mov
cmpsb
inc
push
nop
or
js
loop
aaa
aam
sub
ret
mov
adc
mov
imul
popa
orb
or
popa
lds
mov
and
dec
icebp
cli
add
dec
ret
pop
jg
and
pop
cmp
aas
fiaddl
mov
add
in
hlt
inc
and
clc
pop
pop
repnz
and
js
in
stc
mov
testl
sbb
popf
jbe
xchg
jo
pop
ds
movd
hlt
jg
mov
mov
mov
add
in
lret
mov
or
repz
dec
pop
pop
in
sbb
cli
jg
lret
das
mov
lds
mov
jl
pop
mov
push
pusha
sbb
insl
push
stos
cmp
bound
pop
sub
mov
je
test
aas
mov
xor
sub
aas
stos
sbb
out
inc
subl
mov
mov
add
adc
out
fcmovnu
pop
aas
xor
xchg
push
daa
push
adc
mov
mov
lds
pop
mov
lahf
fbld
nop
fidivs
pop
xlat
dec
pop
add
xlat
pop
jb
repnz
repnz
ljmp
aas
jb
jbe
sbb
sub
mov
add
das
dec
mov
lods
neg
nop
xchg
push
pop
int3
nop
sub
inc
sbb
sub
fst
sbb
xchg
movsl
push
bound
dec
jno
xchg
mov
pop
out
mov
sub
pop
adc
push
add
jbe
cltd
test
leave
jg
cmp
inc
add
mov
sbb
imul
pop
mov
sub
fmull
dec
mov
xchg
aaa
pop
mov
mov
jae
test
ret
jg
add
in
out
dec
pop
cwtl
cltd
rcrb
ret
add
xor
mov
aas
imulb
xchg
lds
out
lcall
pop
loope
sbb
jl
or
sahf
inc
xchg
cvtps2pd
test
mov
mov
fcompl
jecxz
fdivl
lahf
dec
pop
mov
mov
cmpsb
pop
wbinvd
movsb
add
push
aad
lds
add
xor
mov
xor
int
and
adc
mov
cmp
leave
or
imul
pushl
cmp
inc
mov
das
shll
stc
sar
adc
imul
out
add
mov
mov
dec
mov
in
or
pop
inc
mov
addr16
std
in
mov
add
bound
subb
cmp
movsb
push
mov
push
push
dec
out
lret
lods
xor
loop
dec
out
push
imul
popa
cmpsb
and
scas
xchg
pusha
pusha
and
dec
cmp
mov
test
mov
arpl
xchg
inc
dec
mov
xchg
inc
popf
xchg
xchg
mov
cwtl
lret
stos
repnz
mov
pop
and
mov
mov
add
push
sbb
push
push
jl
mov
imul
jne
or
push
arpl
imul
push
prefetch
or
sub
js
mov
xchg
dec
leave
or
cmpsb
jo
and
adc
jb
lret
leave
insb
leave
cs
inc
ja
mov
ljmp
cld
pop
dec
push
mov
rcrb
xor
ftst
mov
lret
sbb
loop
jg
dec
inc
mov
cmc
adc
imul
ds
adc
pusha
repz
stos
fdivs
popf
jne
subl
sahf
loop
fs
mov
ret
add
mov
xchg
dec
jbe
aaa
repz
jne
fildll
mov
lods
xchg
adc
sub
jp
dec
adc
add
aam
jge
push
mov
and
scas
sbb
das
add
ds
sub
cmp
mov
xchg
shrl
gs
lcall
or
sti
sub
cmp
or
sbb
dec
mov
stos
imul
ljmp
sti
sub
cmp
or
sbb
dec
mov
stos
push
lcall
or
ljmp
jmp
rorb
iret
sbb
dec
mov
mov
cmp
cmp
sbb
mov
sti
sub
jno
lret
insl
int3
loop
test
movsl
push
fldl
jo
pusha
in
push
cmc
jo
push
popf
inc
lods
rcrb
dec
lock
insl
nop
sbb
mov
int
std
pusha
in
adc
and
test
insl
nop
sbb
mov
int
std
pusha
in
adc
and
sbbl
insl
clc
pop
jecxz
decb
sub
add
add
fldt
sbb
sub
xchg
mov
dec
test
test
mov
out
mov
jl
loopne
push
pop
jl
test
fistpll
adc
pop
dec
std
into
inc
shlb
mov
aad
pusha
movsb
adc
xor
in
adc
push
rolb
cmp
mov
mov
xor
js
adc
test
shlb
lods
sbb
ret
scas
dec
js
aaa
fwait
adcb
roll
enter
sub
insb
lods
or
sub
fldl
jo
pusha
in
adc
and
lock
insl
nop
sbb
mov
int
xchg
add
lea
popa
std
xchg
cmp
cmp
jl
jle
aas
hlt
insb
push
fnsave
iret
and
add
jmp
mov
ret
sbb
add
jle
retw
jge
xchg
and
sbb
add
rcrb
dec
lock
insl
nop
sbb
mov
int
std
pusha
in
adc
and
lock
insl
nop
sbb
mov
test
dec
inc
stos
lret
xor
mov
mov
sbb
xor
jno
cmp
cmc
aad
push
jl
bound
lcall
add
jbe
pushf
data16
mov
jmp
adc
scas
pop
imul
cmp
mov
dec
or
push
stos
inc
pop
shll
mov
sub
dec
xor
push
out
jno
lret
xchg
inc
sub
xor
dec
mov
or
rorl
and
cmpsb
push
add
pop
xchg
xchg
enter
adc
and
stc
outsb
mov
xor
xlat
xorb
inc
in
lret
arpl
xchg
push
arpl
cwtl
ret
inc
test
push
arpl
ljmp
aaa
rolb
sub
sub
fwait
test
pusha
sub
mov
cmpsb
mov
dec
insl
rclb
xchg
fs
cmpsb
sbb
pop
lahf
mov
mov
daa
in
cmp
lea
pop
push
divb
mov
cmp
jle
mov
pop
data16
je
mov
mov
push
cmp
jnp
in
movsl
sbb
repz
pop
rcrl
gs
imul
js
xor
lret
andl
stos
or
jnp
jmp
div
leave
mov
and
sbb
loopne
mov
add
pop
or
int
std
loop
sub
ss
rclb
xchg
arpl
adc
dec
bound
inc
nop
int3
dec
pushf
push
lret
xor
jns
jo
loopne
sub
and
fs
rep
mov
movsl
ret
add
adc
dec
sbb
aam
cmp
lods
push
insl
pushf
call
movsl
clc
xchg
push
xchg
cmpsl
xor
fwait
xchg
leave
stos
adc
sbb
xchg
xchg
jmp
rcrb
cmpb
jno
pop
clc
xor
pop
aam
cs
mov
jno
filds
push
in
ljmp
mov
lock
pushf
nop
and
push
nop
int3
out
and
add
push
push
fxch
mov
push
pop
jns
mov
rorl
lds
mov
or
pop
push
push
fwait
std
cmpsb
lahf
cmc
and
cltd
add
cmp
call
jns
pop
sub
and
fisttpll
push
and
xorb
idivb
xor
lahf
jae
sbb
or
ja
std
aas
jns
xchg
mov
mov
push
test
mov
xchg
outsl
lods
stos
or
js
dec
inc
push
add
push
fldenv
stos
dec
adc
mov
or
das
push
test
insl
test
mov
fistl
les
in
enter
ljmp
imul
aam
cmc
mov
mov
pop
jbe
push
in
je
mov
int3
mov
mov
sbb
xchg
ja
rcll
push
cmp
rorl
adc
cmpsl
pop
adc
ficomps
jb
int3
mov
mov
pop
sub
adc
mov
jo
mov
push
sub
xchg
cmp
and
cmc
cmp
mov
ret
lods
or
sub
in
clc
or
fiadds
rcl
dec
push
pop
pop
scas
xchg
mov
cmpsb
mov
add
lret
inc
pop
pushf
lahf
push
and
test
inc
xor
add
mov
cmp
mov
lcall
clc
lret
jle
clc
and
sbb
xor
push
aaa
loop
push
xchg
in
lcall
bound
sbb
push
inc
scas
mov
pop
into
cwtl
test
push
inc
sub
or
int3
int3
rcr
or
add
or
shl
das
pop
negl
push
fisubs
stos
pusha
jb
sub
or
push
int3
adc
jns
cli
and
jge
inc
xchg
pop
sub
icebp
shrb
ds
fistpll
add
add
sahf
popf
cmp
push
or
cmp
fcomps
outsb
inc
aas
pushf
jns
push
nop
movsb
pop
adc
mov
adc
inc
clc
inc
sbb
add
repnz
mov
or
out
mov
std
call
pop
int
int
fidivs
or
aad
imul
mov
and
pop
in
xchg
pushf
push
and
or
push
ja
xchg
scas
cmpsb
lock
fsubrl
cmp
pop
fwait
add
mov
stos
and
cmp
lds
push
inc
pop
imul
mov
loop
je
xchg
movsl
in
mov
pop
xchg
dec
sub
cmc
lds
inc
sub
jg
push
mov
inc
loop
mov
jmp
imull
shlb
push
jne
iret
push
mov
inc
ficoms
test
or
xchg
jno
daa
ror
push
sbb
lods
cmp
push
sbb
je
dec
jae
imul
gs
or
ja
imul
ror
cmpl
call
repnz
les
xor
jo
shlb
xchg
mov
jle
push
es
add
xchg
std
ljmp
push
rcrl
jo
stc
mov
jbe
cmp
dec
test
mov
sub
xchg
hlt
sbb
outsl
out
test
add
sbb
movsl
es
popf
sbb
in
adc
pusha
mov
out
sbbb
test
mov
add
cpuid
ret
dec
insb
mov
push
jns
aas
loope
aad
and
sub
fsubrs
jmp
xorl
inc
adc
push
xchg
in
or
pusha
fs
cmpsl
arpl
in
sbb
add
xor
lret
sbb
xor
jl
stc
fdivs
cmp
mov
test
sub
jge
fcomps
jno
dec
mov
xchg
fsub
pop
mov
lods
insb
aaa
jno
or
xor
push
shll
and
xchg
ljmp
je
hlt
fisubrl
jne
pusha
dec
aas
or
stos
mov
or
or
bound
aas
in
imul
jne
mov
xchg
add
jp
jo
aaa
inc
mov
movsl
fs
sbb
inc
popf
rcll
jge
lret
pop
stos
loope
scas
or
fdivrs
mov
xchg
mov
fsubr
jns
push
dec
loop
xchg
inc
jno
cmpsb
pusha
inc
sbb
es
pop
mov
lcall
inc
andb
repnz
sub
ret
cwtl
imul
add
int3
mov
dec
inc
je
rorl
loope
jl
mov
or
stc
cmpsl
sbb
rcl
js
mov
pop
sbb
fsub
pop
sti
push
jb
mov
loope
fwait
lcall
rclb
add
arpl
jge
pusha
adc
enter
test
inc
dec
cmp
add
mov
adc
or
inc
mov
aas
fmull
popf
sub
push
std
int3
out
xor
out
adc
inc
scas
pop
pushf
xchg
outsb
xchg
dec
ss
pushf
pop
mov
sub
xor
xor
sub
mov
sti
pop
cmpsl
popa
xchg
fbstp
mov
cmovp
dec
cmp
add
jecxz
loop
dec
dec
int3
pushf
mov
xor
mov
ret
iret
ss
bnd
nop
inc
int3
sbb
or
ss
outsb
sub
and
sbb
push
jmp
jo
add
pop
xchg
jge
sar
push
rcr
or
jl
shrb
mov
incb
add
mov
repz
stc
ret
xchg
addl
jno
in
xor
and
sub
xchg
or
cmp
inc
pop
sarb
push
aas
ss
sbb
add
jp
mov
push
jp
in
xchg
jno
enter
sub
pusha
pop
sub
mov
vpcmpgtd
jne
cmp
ret
and
js
or
push
mov
xchg
mov
aaa
stos
pop
clc
push
imul
pop
add
ljmp
mov
cmpsb
jge
xchg
xchg
int3
push
adc
cmp
and
sbbb
add
jl
mov
aas
roll
imul
xchg
fstp
inc
scas
sbb
in
cltd
stc
dec
notw
xor
push
call
and
ss
inc
imul
scas
fldenv
cmp
inc
outsb
stc
fadds
ds
cmp
inc
push
jl
xor
out
outsb
jb
addr16
in
or
notb
lcall
mov
sub
mov
sub
mov
and
cmpsl
rclb
adc
mov
arpl
test
cmc
mov
xor
push
cmp
in
mov
pop
lahf
push
std
jl
pop
cmp
sbb
outsl
movl
outsl
addr16
movsl
in
movsb
leave
cmp
cmp
pop
mov
cmp
cmp
xchg
ret
push
into
xor
inc
test
mov
pop
push
xor
push
cmpsb
outsb
loope
sub
mov
mov
or
fmull
push
push
ret
mov
pop
rolb
jb
dec
addr16
mov
aaa
mov
push
lods
and
xor
xchg
in
or
xor
inc
adc
add
and
xchg
sub
movl
in
js
lds
add
adc
xchg
mov
sub
push
sub
mov
ror
push
push
cmp
sbb
mov
fcmovne
lock
mov
pusha
xchg
sbb
subl
mov
push
inc
mov
cmc
fstl
decb
push
push
int3
mov
dec
lahf
mov
dec
mov
cmc
or
int3
movsb
pop
scas
pushfw
mov
adc
ljmp
insb
rcl
out
xor
cmp
mov
nop
jnp
sbb
sahf
or
and
mov
mov
mov
pop
cmp
clc
xor
lea
loop
jl
mov
sub
out
inc
in
sub
pop
mov
call
arpl
scas
and
dec
and
inc
mov
mov
cmp
jne
loopne
mov
movsb
mov
andl
cmp
rorb
jecxz
sub
cmpl
sahf
mov
imul
fistpl
shr
and
popf
bound
xchg
jg
and
testl
or
js
inc
mov
fbstp
mov
test
mov
cmp
push
xor
xchg
sbb
adc
aaa
insb
jbe
frstor
outsb
jno
jle
stos
mov
xor
mov
mov
xor
enter
pop
pmullw
or
and
adc
lcall
sub
dec
inc
mov
cwtl
cmp
nopl
inc
je
sbb
cmpsb
in
loope
add
add
in
mov
sub
mov
hlt
enter
add
adc
dec
xlat
inc
lds
popf
hlt
movsb
cmp
or
xlat
cli
outsl
push
dec
ja
add
movsb
test
and
xchg
fstl
lds
mov
push
adc
dec
pop
ret
jns
xchg
cmp
pusha
fwait
lods
mov
xor
scas
in
pop
je
ds
or
mov
lock
sub
add
jnp
cmp
dec
or
mov
dec
pop
add
dec
into
and
or
pop
arpl
repz
and
jo
mov
and
mov
or
ret
ljmp
push
movsl
mov
int
mov
dec
fidivl
ss
mov
jae
int3
mov
pop
push
in
xchg
mov
xchg
pop
cld
sti
aaa
cmp
popf
push
or
jnp
ss
addb
faddl
es
bound
std
ret
or
jns
sti
fld
cli
test
cmp
jecxz
dec
sub
pop
pusha
pop
and
sub
hlt
orl
mov
push
push
mov
jp
sarl
dec
jge
mov
faddp
jecxz
jg
push
pop
mov
jnp
lods
addr16
pop
ja
mov
adc
push
mov
fwait
data16
test
mov
inc
pop
dec
adc
insb
out
xor
test
sbb
loop
adc
ja
loopne
mov
or
out
or
sub
lahf
sub
xchg
dec
adc
sti
into
je
push
out
jmp
out
jno
cmp
add
xor
mov
xor
add
ljmp
into
jecxz
jbe
push
lcall
xchg
dec
dec
dec
movb
push
and
pop
inc
mov
ror
lds
lcall
and
ds
and
negb
mov
jbe
negb
dec
je
mov
idiv
pop
out
xor
movsl
ficomps
push
cwtl
subl
test
hlt
cmp
jle
cmp
sbb
scas
xchg
into
add
data16
in
std
mov
test
add
mov
aam
je
pushf
nop
sahf
sahf
or
rcll
jg
inc
xchg
ljmp
pop
das
inc
cmpsb
decb
push
xchg
mov
jne
push
inc
sbb
mov
jno
lahf
push
and
testb
adc
stos
mov
mov
insl
int
mov
dec
data16
dec
adc
mov
xchg
mov
inc
add
mov
xchg
outsb
out
or
pop
jl
es
dec
sub
xor
lock
inc
adc
sub
mov
sub
hlt
leave
inc
push
fldl
pop
fisttps
jmp
push
into
inc
inc
stc
jg
inc
pop
mov
daa
xchg
sub
push
dec
or
out
xlat
les
es
mov
xchg
in
cmpsb
push
cmp
pop
jl
daa
cli
movsb
scas
or
dec
fists
xchg
or
adc
xchg
sarl
xor
push
pop
scas
sahf
fld
mov
loopne
pop
adc
decl
jecxz
test
add
outsb
pop
pop
data16
sub
int3
and
jg
mov
xor
int3
xchg
out
mov
lret
lods
movsl
pop
pop
ja
gs
leave
movsb
sub
mov
xor
and
hlt
mov
adc
inc
xchg
sub
ficoml
mov
test
dec
jno
cli
cli
push
into
mov
cmp
jmp
insb
inc
mov
push
in
push
in
test
mov
stos
ldmxcsr
pop
push
mov
cmp
mov
ss
cmp
xchg
insb
xor
mov
sahf
pop
test
jge
sub
and
jmp
adc
imul
sbb
dec
sbb
mov
cmp
gs
iret
adc
flds
or
cld
mov
pop
fstl
and
xchg
xchg
push
test
std
pop
addl
mov
repz
js
movsl
mov
sti
or
in
hlt
push
xor
mov
inc
test
xchg
jecxz
push
jecxz
lods
and
cli
xchg
xorl
cs
xchg
or
addr16
dec
jmp
cli
or
ret
push
mov
inc
fdivl
inc
sub
push
mov
movsl
add
jmp
ss
in
push
outsl
sbb
movsl
push
fwait
jp
fwait
lods
pusha
push
js
mov
jle
sub
adc
fstpl
rorl
lret
std
aad
cmpsb
ja
add
jecxz
insl
pop
xchg
inc
mov
mov
adc
xor
sub
xor
push
sub
xchg
andb
in
popf
ror
or
test
mov
add
roll
inc
mov
imul
mov
mov
mov
ret
imul
mov
shrl
fisttpll
sub
int3
mov
push
outsb
orb
sub
iret
sarb
int3
in
push
sbb
push
shrb
ss
push
ja
ljmp
add
xchg
lret
repz
call
ja
jbe
jbe
jno
or
test
lahf
pop
sbb
popf
add
adc
xor
jmp
loope
lcall
and
or
rorl
sub
insb
or
pop
int3
test
fstpt
fadds
sub
imul
sahf
adc
cli
xchg
xor
jmp
loop
cmp
pop
mov
jmp
frstor
mov
xchg
inc
inc
shl
cmp
and
pop
lods
or
xor
jl
sbb
bound
pop
lcall
cmp
mov
daa
rcll
insb
inc
cvtpi2ps
or
mov
bswap
dec
scas
cmp
sti
xor
scas
ljmp
sbb
stos
mov
cmp
mov
or
xor
dec
dec
insl
imul
inc
or
icebp
in
and
fcomps
adc
out
cmp
lahf
test
or
or
mov
clc
adcb
mov
mov
shr
or
orl
dec
in
repz
cld
mov
dec
lret
adc
bound
mov
sbb
or
xor
cmpsb
ljmp
fiaddl
adc
add
out
cmc
pushf
scas
f2xm1
adc
jo
dec
insb
shlb
sbb
sub
dec
scas
divl
jmp
subl
int3
pcmpeqd
mov
push
jle
insl
fiadds
out
xchg
pop
push
mov
mov
fidivs
inc
mov
adc
fcmovnb
or
lds
adcl
loop
rorl
loop
mov
int3
or
sbb
in
ds
cmp
ljmp
out
pop
inc
repz
sti
lds
out
and
adc
mov
arpl
rep
test
xchg
and
cmp
push
mov
xor
pop
repz
jmp
js
ja
mov
xchg
sub
jae
mov
sub
insl
and
popa
ds
push
add
cmc
stos
fst
add
pop
leave
lahf
mov
test
lods
stos
cs
mov
loope
dec
gs
xchg
cs
mov
mov
sub
es
repnz
testl
xchg
fdivrl
fmul
push
shrl
popa
sbb
movl
xor
dec
xchg
inc
dec
psllq
ljmp
pop
mov
cmp
push
and
insb
gs
sub
and
pop
mov
ss
ficoml
mov
xchg
andl
lods
inc
fstps
inc
pop
lahf
jbe
test
test
pusha
and
enter
fisubs
dec
cmp
cmc
imul
mov
je
push
inc
xchg
loop
shrl
xor
aam
mov
and
push
aad
sbb
bound
cmp
xor
scas
test
aas
mov
jno
jmp
mov
movsl
and
out
push
sbb
dec
cmp
test
sub
mov
add
scas
pop
in
xchg
sarb
pop
pop
fs
shrl
push
adc
iret
xlat
movsl
outsl
lods
mov
frstor
adc
xor
cmp
inc
insl
lahf
movsb
rolb
jb
lods
mov
lret
sub
and
xchg
mov
jp
addl
daa
or
xor
xchg
jns
and
inc
push
aam
outsb
mov
xor
mov
outsl
mov
pop
mov
and
pop
cs
aad
dec
mov
jecxz
aaa
bound
jg
adc
movsl
mov
int
nop
popf
pop
and
dec
arpl
test
xor
xchg
sbb
mov
fucom
or
push
or
fcomp
cmp
mov
arpl
lods
int3
mov
push
iret
jge
repnz
mov
orl
fists
mov
iret
pusha
dec
loop
sub
scas
xlat
fcmovb
popf
sub
xchg
sti
cmp
idivl
mov
clc
test
shl
push
lock
sub
cltd
lea
push
push
into
cli
fnstsw
inc
sub
data16
push
add
mov
daa
sahf
out
stos
das
pop
adc
push
sub
lods
divb
jg
fs
sbb
addr16
andl
notb
hlt
fcmovnbe
lahf
cmp
pushw
lret
lahf
dec
aaa
es
jno
and
in
mov
adc
adc
mov
add
dec
inc
mov
and
call
mov
sub
cmp
fistl
sbbb
inc
fstpt
jecxz
sbb
data16
mov
shll
sbb
ret
ljmp
push
push
jnp
or
lods
add
xchg
inc
sub
fcomp
call
adc
cmp
xor
lahf
jecxz
movsb
sbb
or
add
xchg
loopne
add
mov
jp
lock
fbld
mov
pop
iret
stos
imul
inc
into
cmc
fcoml
mov
repnz
idiv
pusha
in
adc
and
lock
insl
nop
sbb
mov
int
std
pusha
in
adc
and
lock
insl
nop
sbb
mov
dec
jo
pusha
in
adc
and
lock
insl
nop
sbb
mov
int
std
pusha
in
adc
and
pop
jge
sbb
xchg
or
dec
ret
or
pop
inc
das
ja
addr16
inc
sub
daa
ret
xlat
jg
scas
idivl
out
mov
cmpsl
imul
inc
ja
addr16
pop
pop
pop
outsl
aaa
jg
xlat
lahf
into
idivl
xchg
mov
cmpsl
mov
in
inc
mov
pop
aas
pop
jno
jg
jmp
mov
out
lds
cmpsl
popa
push
push
xor
adc
dec
rcrl
mov
push
enter
lock
mov
nop
fistps
cmp
outsb
jecxz
jecxz
scas
mov
out
loop
repnz
jns
jmp
sub
inc
out
push
orl
add
inc
pop
xchg
pop
subb
xchg
mov
dec
cmpsb
fsts
lahf
cmp
xchg
lcall
test
inc
lret
jae
push
pop
pop
nop
fidivrs
mov
lahf
shrb
or
xor
out
dec
incl
pop
mov
clc
in
hlt
jno
xchg
sbb
scas
or
aam
pop
ffreep
pop
mov
div
rolb
adc
cld
dec
mov
es
out
push
cld
cmpsl
push
push
dec
inc
das
ja
stos
pop
daa
pop
outsl
aaa
fldenv
dec
xlat
add
out
xchg
aad
fnsave
insl
xchg
pop
xor
and
inc
sbb
push
mov
fimull
xchg
jp
pop
ja
xor
jb
sub
xchg
int
scas
mov
mov
xchg
mov
xor
insb
adc
pop
pop
outsl
aaa
jg
xlat
lahf
scas
idivl
xchg
mov
cmpsl
xorps
inc
das
ja
addr16
pop
pop
pop
outsl
aaa
jg
xlat
lahf
scas
idivl
xchg
mov
cmpsl
xorps
mov
shlb
pop
out
insb
add
lods
xchg
mov
ss
pop
ret
cmc
addl
jae
add
xchg
adc
pop
ljmp
js
push
ja
cwtl
mov
xor
inc
dec
in
dec
subl
ror
clc
fmuls
and
and
cmp
sbbl
cmpsl
ficomps
nop
jl
rcrl
mov
mov
adc
sub
leave
or
mov
ret
test
sub
mov
imul
cmp
xchg
xor
xchg
mov
jl
jge
xor
jg
insl
cmp
rorb
sub
xlat
aam
inc
je
or
movsb
js
adc
xchg
mov
xchg
pop
xor
sub
inc
jo
inc
push
xchg
add
add
jbe
push
pop
cmpl
xor
mov
pop
in
push
add
shlb
jp
daa
mov
pop
loop
rorl
and
icebp
jmp
mov
in
sbb
in
mov
fs
jg
es
pop
push
pusha
jns
icebp
mov
out
inc
mov
jp
cmp
xchg
cmp
xor
and
push
stos
inc
xor
mov
mov
insl
in
in
jg
shrl
addb
andl
int
dec
cmpsl
xchg
lret
mov
mov
aam
mov
cmp
jns
popa
daa
out
mov
push
xor
gs
pusha
mov
pop
push
dec
in
stos
lods
jp
dec
mov
inc
cmp
stos
or
icebp
fcmove
cmc
or
cmc
mov
enter
mov
jg
ret
cmp
fldl
lock
jns
lea
xchg
in
sbb
inc
push
mov
pop
adc
cmpsb
stos
fbld
insb
ret
and
cmp
cmp
or
sbb
ficoms
xchg
jmp
add
mov
dec
stc
cld
mov
add
mov
cmc
pop
test
inc
fnstenv
out
dec
das
and
mov
subb
aad
into
xor
stos
inc
addr16
adc
sub
daa
clc
push
lock
ret
enter
jle
roll
clc
outsb
fisubs
dec
pop
cwtl
fdivrs
pop
pop
sti
jae
sub
and
and
stc
sahf
cmc
addr16
push
push
int3
dec
hlt
xchg
es
inc
push
mov
rcl
mov
or
rcrb
in
and
divl
imul
shll
orl
sub
shrb
cmp
insb
pop
push
cs
jmp
repz
in
mov
cmpsl
xchg
jb
push
push
roll
mov
mov
imull
jl
mov
sub
and
jecxz
sbb
lea
dec
cmpsl
mov
xchg
faddl
and
jecxz
iret
xor
addr16
sub
mov
insl
cli
sbb
addr16
adc
jns
xor
rclb
jne
jnp
mov
or
sbb
aas
test
pop
lret
jne
sub
dec
inc
ds
movsl
in
lret
mov
jecxz
mov
and
adc
cwtl
lea
cltd
lods
mov
push
xor
adc
mov
mov
mov
adcb
subl
fadds
adc
mov
add
rcll
sub
test
mov
inc
sub
lods
lret
mov
in
mov
repnz
call
xor
mov
jg
int
push
inc
lret
dec
mov
xchg
sbb
push
fwait
aaa
xorb
jl
and
imul
or
loop
insl
jp
pusha
xchg
lods
and
xchg
arpl
nop
testb
dec
xchg
inc
popf
dec
out
push
loopne
sbbb
dec
gs
or
and
cs
gs
add
data16
pop
cli
adc
cmc
int3
add
pop
dec
in
mov
adc
and
scas
mov
ds
add
mov
jmp
or
push
cmpsl
bound
add
cmp
mov
xlat
jp
lods
jno
cmpsb
cmpxchg
adc
or
cmp
sbb
ljmp
rcrb
in
test
daa
pop
cld
jbe
rorb
fdivrs
xchg
adc
dec
dec
add
lds
je
dec
or
lret
jp
popa
pop
or
cmp
aas
mov
add
cld
daa
dec
lods
js
lret
xchg
cmpsl
xchg
inc
sti
push
es
xchg
sub
test
movsb
testb
ret
ljmp
adc
or
adc
aas
out
loop
or
nop
xchg
pop
dec
mov
mov
fisubrl
js
fdivr
fs
dec
jae
inc
pop
mov
mov
mov
aam
xchg
xchg
je
jbe
mov
lds
and
cwtl
clc
lcall
jge
int3
nop
mov
xchg
pop
aam
out
xchg
inc
mov
jecxz
adc
mov
mov
mov
mov
add
push
hlt
cmc
push
loopne
push
jle
cld
sbb
and
xchg
push
mov
ficomps
popf
xor
sub
sbb
repnz
push
mov
pushf
adc
pop
xchg
adc
mov
data16
mov
lods
mov
sbb
jge
add
shl
lock
mov
jo
mov
pop
jl
mov
cmp
fildl
addr16
jbe
xchg
insl
mov
repnz
shr
jns
mov
add
popf
aas
push
or
xchg
outsl
leave
pop
jecxz
xchg
pushf
ja
aaa
pop
pop
pusha
xchg
outsl
inc
imul
push
mov
ds
imul
outsl
les
in
sub
icebp
ss
fisubrs
sub
jns
push
movsl
cwtl
outsl
mov
scas
enter
mov
mov
add
mov
cld
xor
movsl
aad
jg
shll
inc
xchg
xlat
sti
inc
test
mov
mov
pop
xor
push
and
xchg
lcall
daa
push
hlt
add
mov
cmp
mov
insl
fsts
xchg
mov
xchg
test
add
mov
fwait
cmp
lahf
into
inc
mov
xor
xchg
xchg
xchg
nop
sbb
insl
jns
aam
or
pop
ljmp
add
popf
int
out
mov
mov
dec
repz
and
stos
sub
dec
loope
adc
test
jmp
mov
bound
pushf
aad
loop
lcall
mov
xor
lods
add
nop
lret
test
mov
cmp
imul
inc
dec
ficoml
push
sti
xor
es
inc
xor
jge
add
scas
mov
add
pop
add
xchg
inc
add
out
sbb
mov
sti
int
icebp
mov
inc
jo
xchg
sar
push
cmp
gs
mov
out
push
jo
push
mov
sti
popf
lahf
jae
mov
sub
repnz
push
js
cmp
clc
cmpsl
xor
add
push
xchg
repnz
cltd
cli
push
jae
lret
movsb
out
push
je
dec
add
out
and
scas
inc
test
rcr
pop
cmp
sbb
sti
mull
mov
in
jne
ret
sub
insb
lahf
jno
stc
add
or
push
xchg
inc
sub
pop
xor
lods
das
or
ljmp
mov
nop
cmpsl
xacquire
mov
psrlw
negb
push
jle
jg
mov
add
nop
cmp
stos
push
daa
iret
add
sub
aam
mov
in
lahf
and
push
fsub
cld
rclb
mov
pop
mov
cwtl
jl
roll
cli
pop
outsl
out
lcall
enter
test
rcl
and
pop
popf
jne
mov
shl
jle
mov
jge
addr16
xlat
jge
nop
shrl
mov
mov
subl
mov
dec
cmc
mov
mov
add
xchg
insb
dec
test
xchg
rolb
push
add
nop
repz
or
insl
xor
jb
test
ss
pop
add
rcrl
dec
mov
xchg
into
aam
loopne
clc
ja
cmc
int
lret
mov
hlt
cmpsb
or
mov
lahf
test
dec
dec
daa
and
fimuls
fdiv
mov
aaa
or
xchg
lahf
push
nop
shl
idivl
mov
mov
adc
ficoms
xchg
inc
mov
ja
cmpsl
cltd
push
add
push
and
cmpsb
mov
or
inc
add
lahf
addr16
inc
outsl
dec
sub
repnz
inc
dec
stc
or
mov
js
mov
dec
xchg
dec
mov
push
rcrw
cld
fwait
add
popa
jns
cmp
dec
mov
jmp
hlt
xchg
sti
push
mov
push
jne
pop
dec
inc
aaa
sub
cmp
mov
push
enter
add
testl
sub
je
arpl
or
sbb
xchg
jo
ret
fs
cwtl
lock
icebp
nop
cmp
jg
pop
push
nop
stos
or
lret
stos
sbb
inc
adc
jl
loop
aas
and
xchg
ja
incl
std
add
jge
pop
push
lock
jne
add
jge
adc
aaa
in
enter
xor
cmc
pop
sbb
gs
cmpsl
push
iret
popf
rolb
xchg
cmp
add
lock
mul
out
and
cmc
push
push
stos
ret
add
xor
idivl
adc
shlb
repnz
or
movsb
orl
sub
outsl
adc
inc
push
dec
mov
mov
pop
jle
stos
xchg
enter
mov
mov
add
rorb
dec
imul
mulps
aas
sbb
inc
sti
ss
out
inc
mov
aad
cmp
mov
out
call
andb
jl
mov
xor
popf
das
jbe
loope
nop
lock
xchg
mov
and
jbe
in
dec
mov
lret
loope
lods
inc
scas
dec
movsl
sbb
ljmp
mov
push
xor
cmp
jmp
mov
cmc
outsl
xchg
mov
movsb
movsb
lods
xchg
and
mov
faddl
in
sbb
ds
inc
sarl
scas
push
je
inc
inc
jno
mov
in
xor
mov
aas
mov
cli
or
xchg
sub
sbb
cmc
ror
jbe
sub
jle
enter
sub
inc
add
inc
mov
mov
ficompl
lcall
xchg
stc
xlat
sub
or
mov
lahf
pop
or
lcall
sub
add
mov
or
or
or
imul
movsl
mov
imul
fidivrl
icebp
gs
out
lret
mov
rolb
mov
pushf
and
je
dec
mov
fnsave
int3
ss
add
mov
jnp
rorb
add
and
cwtl
cmp
ret
int3
pause
nop
mov
fildll
fbld
mov
add
jb
fsubp
fwait
add
cwtl
jno
mov
dec
repz
data16
xchg
mov
mov
jbe
push
jecxz
push
and
xor
or
push
cmp
inc
jae
fdivrs
popf
into
out
loope
lahf
or
inc
or
iret
sbb
mov
ret
outsb
cld
adc
lds
outsl
fistpl
sbb
pop
cs
and
adc
decb
inc
sub
movsl
cmpsl
xor
mov
mov
jae
inc
and
in
shrb
mov
mov
stc
in
cmp
mov
push
cmp
ljmp
sub
cltd
xor
mov
lret
cmp
or
pop
xchg
adc
xor
pop
pusha
adc
pop
jno
aaa
fdivrs
push
int
dec
adc
mov
or
leave
push
test
shlb
dec
cmp
ror
jle
push
lcall
fadds
mov
sub
stc
data16
add
cmp
pop
mov
test
push
orb
push
test
fwait
movsl
jg
hlt
inc
insl
and
jge
fstpl
clc
push
mov
fs
adc
and
bound
enter
xchg
lahf
mov
popa
mov
cli
add
call
data16
in
das
mov
push
sbb
fmul
or
mov
jecxz
pop
sti
es
fsubs
outsl
popf
mov
repz
push
add
and
testb
add
stos
cmp
xchg
jmp
mov
imul
pop
addb
jae
test
sbb
call
sbb
les
fs
movsl
cmp
mov
adc
es
push
sbb
mov
inc
xchg
lcall
jmp
xor
pusha
add
cmc
in
lcall
inc
shlb
pushf
jae
or
popa
inc
adc
mov
lret
movsl
mov
pop
mov
andl
bound
inc
int
in
insl
bound
push
loope
jmp
xor
xlat
add
pop
and
cwtl
fstpt
and
xchg
mov
jg
into
and
aam
popf
enter
and
add
push
sbb
pop
cltd
cmp
mov
std
add
sub
test
or
xor
aas
iret
dec
fdivrp
or
movsb
pop
dec
dec
push
lock
das
lcall
notl
dec
out
mov
xor
iret
xchg
adc
fxch
xchg
outsb
cmpb
add
push
ret
pop
adc
or
mov
push
or
push
mov
rclb
in
add
insl
sti
gs
and
pop
mov
push
fs
arpl
int3
adc
add
pop
lods
enter
xor
pop
lcall
in
js
cld
adc
into
and
js
fs
cmp
jge
orb
ljmp
mov
dec
cwtl
lret
mov
mov
jmp
push
cld
scas
aad
rcll
mov
test
sub
pusha
fidivs
in
aad
movsl
out
jecxz
jg
adc
sahf
ss
cmp
in
fisubl
icebp
jle
mov
fbld
mov
sub
sbb
mov
push
fcompl
pop
jnp
add
adc
or
ss
add
and
pop
adcb
mov
dec
jbe
pop
and
pushf
cmpsb
clc
cmpsl
xchg
cwtl
outsl
cmpsb
jno
popa
aas
xchg
nop
cmp
sti
mov
ja
add
jo
xor
movsl
pop
int
scas
push
enter
repz
out
push
popa
test
xchg
test
mov
push
test
inc
rcr
iret
mov
sub
andl
mov
cmp
into
out
mov
mov
call
xchg
mov
add
lods
push
jne
adc
sub
dec
das
out
out
mov
mov
in
test
loope
jp
pop
mov
add
pop
dec
out
pushf
jmp
shlb
in
or
stos
cvtps2pd
sbb
jecxz
lahf
pop
lea
or
mov
adc
sub
pop
js
xor
inc
enter
mov
cmp
add
pop
popf
mov
xlat
int
gs
xchg
sub
mov
adc
inc
insl
mov
cwtl
jg
xchg
rorb
and
inc
pop
std
adc
dec
cmp
jnp
sub
pop
or
aam
sbb
or
mov
push
aam
scas
jg
or
loop
cmpsl
cld
loop
adc
jl
sbb
dec
sbb
test
out
out
scas
test
stc
push
push
lock
dec
loop
xlat
sub
mov
push
sub
mov
adc
gs
xchg
lcall
dec
mov
std
mov
mov
mov
gs
daa
jge
inc
mul
imul
aam
cwtl
pop
lret
mov
loopne
icebp
lret
cmpsb
cmc
lahf
jbe
outsb
mov
xchg
adcb
and
mov
idivb
mov
or
xchg
in
jne
mov
insl
inc
mov
mov
fcomip
and
lds
xor
mov
sarl
jge
aas
ljmp
in
sarl
push
mov
add
xchg
push
fistpl
loope
negb
movsb
ss
in
hlt
sub
popa
pop
xchg
je
xchg
lods
xchg
fmuls
loope
sub
in
ss
xor
xchg
cmc
sbb
out
lock
andl
sbb
dec
outsb
lock
test
push
shr
mov
into
jb
into
dec
xor
in
mov
mov
jo
ljmp
mov
lock
sub
pop
nop
shlb
es
cmp
test
repz
xchg
shll
sub
push
mov
daa
ja
mov
inc
es
or
xor
insb
lea
mov
inc
sbb
shlb
pop
pop
stc
mov
loop
xchg
jne
icebp
and
leave
pop
push
mov
popf
mov
mov
lcall
cmpl
xlat
mov
pushf
dec
adc
sti
push
inc
xchg
stos
icebp
dec
mov
stos
and
ss
shlb
xor
iret
jo
imulb
sbb
fwait
mov
int3
popa
das
fwait
out
jno
sbb
jns
jle
fscale
int
fcoml
add
mov
push
sbb
out
mov
jns
iret
add
pop
pop
outsl
test
je
cld
pop
cmpsb
lock
addr16
xor
ljmp
xlat
adc
in
fcmovnb
into
add
leave
test
in
jle
pop
daa
daa
das
jl
das
and
call
and
out
scas
insl
xor
aas
mov
jae
and
cmpb
cli
dec
cmpsb
in
xchg
fcomip
ljmp
jge
mov
sub
hlt
push
divl
fildl
mov
test
repnz
pushf
leave
cmp
popf
pop
push
sub
cmp
jae
cmp
out
and
aas
adc
lret
xor
mov
add
inc
push
dec
outsl
inc
fidivrl
int
std
addr16
adc
and
out
mov
aam
ficomps
xchg
push
inc
pop
scas
cmp
lcall
xor
sahf
aaa
lcall
lahf
repz
push
pop
mov
dec
push
lret
pop
fimuls
pop
sahf
add
xchg
loop
push
scas
add
inc
lock
xchg
jnp
pushf
clc
cld
and
jg
arpl
ret
and
dec
cltd
xchg
xchg
fisttpll
lods
nop
inc
lods
arpl
dec
xor
idivb
aam
sub
int
jge
mov
pop
sbb
add
xor
loop
daa
xor
shl
and
cltd
sbb
je
push
ret
fdivl
adc
mov
stc
or
jne,pn
cli
cwtl
or
inc
sub
adc
mov
mov
repz
cmp
adc
mov
jne
mov
in
sbb
ja
in
dec
movsl
pusha
shll
push
add
sub
pop
fnstenv
add
push
mov
pop
fdivs
fs
addr16
and
rcll
sub
mov
das
push
pusha
inc
mov
orl
sub
arpl
cmc
xchg
fdivl
scas
sbb
push
int
mov
insb
int3
pop
jecxz
std
bound
cmp
test
push
fisttpl
imul
dec
sbb
dec
jne
push
fwait
xor
fisubs
jmp
push
mov
repz
out
add
push
popf
or
xchg
lret
lcall
bswap
xchg
or
and
adc
or
inc
xor
jge
sub
mov
sub
ds
jg
outsl
popa
mov
mov
iret
addb
xor
adc
jge
mov
movsl
cltd
sbbl
sub
hlt
add
pop
cmp
sbb
ficoms
dec
sahf
jbe
push
nop
xchg
sahf
xchg
call
repz
lahf
repz
push
add
stc
fbstp
push
xchg
add
lcall
jl
mov
mov
fdecstp
jmp
movsb
pop
scas
fs
das
lock
imul
adc
ds
mov
mov
mov
pop
sahf
ret
jne
pop
push
xchg
cmpsl
inc
cmc
push
dec
lahf
insl
arpl
add
test
outsl
sysenter
stc
lods
subl
add
ja
arpl
leave
sbbb
scas
sbb
call
pop
arpl
lret
lcall
sbb
fpatan
mov
imul
dec
idivl
push
sbb
xor
cwtl
out
and
cmp
and
or
mov
pop
dec
dec
imul
cmpsl
xlat
out
loope
outsb
fdivl
cld
aaa
sti
push
xchg
mov
and
push
mov
sub
bound
out
jle
call
ljmp
pop
pop
pop
outsl
aaa
jg
xlat
lahf
scas
idivl
xchg
mov
cmpsl
xorps
inc
das
ja
addr16
pop
pop
pop
outsl
aaa
jg
xlat
lahf
scas
idivl
xchg
mov
cmpsl
rcpps
inc
dec
ja
data16
pop
pop
outsl
ss
pop
idivl
xchg
mov
cmpsl
sbb
inc
jne
pop
arpl
dec
xchg
fmuls
idivl
js
dec
add
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
out
jbe
dec
cltd
divl
inc
sub
data16
push
imul
dec
ss
out
idiv
xchg
sbb
cmpsb
lret
ret
sub
or
imul
mov
dec
mov
sti
mov
lret
scas
cmp
or
cs
and
mov
xor
xor
inc
in
xchg
movsb
lret
cli
cs
or
push
mov
jmp
and
arpl
data16
push
or
mov
pushf
cld
fdivs
sahf
scas
push
add
rcrl
jmp
sti
sub
push
push
ds
es
testb
pop
pop
lret
dec
mov
scas
push
in
popa
mov
jle
inc
rorl
jnp
je
mov
scas
mov
sahf
mov
xchg
pop
or
dec
leave
inc
push
push
imul
int3
cmp
sbb
insb
inc
fstpt
in
and
pop
out
push
es
mov
stos
es
bound
xchg
fstpt
cmp
sub
jnp
imul
es
pop
cli
xchg
repnz
loop
sti
repnz
stc
mov
add
sbb
jae
jp
imul
or
xchg
incb
scas
movsl
mov
and
sbb
or
jp
add
pop
ficoms
out
mov
jmp
sub
or
push
imul
es
ss
out
idiv
xchg
xchg
sub
or
push
imul
es
ss
inc
movsb
fiaddl
clc
cmp
dec
xchg
sbb
xor
jmp
mov
rcll
or
loopne
in
sbb
xlat
or
test
dec
insl
mov
icebp
fisubl
push
and
cs
icebp
dec
mov
popf
dec
push
cmpb
adc
addb
pop
jecxz
pop
and
sub
les
mov
or
movl
daa
push
dec
push
jecxz
call
sub
inc
push
add
stos
ljmp
cmp
std
mov
xor
jbe
insl
pop
jne
testl
cmp
into
loop
enter
push
sub
xchg
xchg
mov
jno
test
or
imul
sub
cmp
add
das
arpl
out
mov
jp
not
jnp
out
jmp
outsl
ljmp
lcall
mov
push
lahf
push
mov
lahf
ja
push
jl
jle
cli
cmp
mov
std
push
push
sbb
lcall
push
ret
adc
orl
jae
xchg
sub
push
xchg
sbb
jmp
ret
fistpll
pop
lea
pop
cmc
push
xchg
sarl
aaa
leave
addr16
leave
mov
das
dec
mov
pop
cmc
inc
into
imul
fs
cmp
xchg
stc
cltd
sbb
jmp
lahf
dec
xor
sub
into
nopl
mov
cld
scas
ds
jae
cmp
pop
lods
lods
push
daa
cli
loope
in
or
rcll
in
daa
lret
lods
lods
inc
fstpl
push
push
jg
loope
push
pop
lret
lods
adc
add
push
cld
and
jmp
ss
push
ljmp
jge
sbb
dec
or
aad
nop
mov
push
sub
sbb
xlat
push
mov
fldl
imul
pop
cs
or
push
dec
rorb
xchg
and
xchg
sub
ret
mov
dec
cmp
les
adc
sbbl
pop
outsl
insb
push
mov
jns
sub
push
jecxz
fsubrl
cmp
and
pop
push
cs
mov
cs
xor
sub
pop
rolb
and
ds
pusha
fs
int3
mov
hlt
loopne
ud0
and
cmp
jecxz
int3
jl
sub
dec
sub
pop
test
iret
push
sub
lahf
pop
sahf
adc
adc
sub
sahf
add
loope
jbe
es
scas
mov
push
xchg
push
in
jge
test
inc
jmp
pop
daa
pusha
lret
das
out
xor
jmp
out
imul
ret
inc
lods
pop
push
in
push
jecxz
pop
push
arpl
xor
lods
addr16
xor
ret
ror
push
push
outsb
lock
lret
lcall
insl
pop
ljmp
lods
pop
jb
jno
mov
movsb
xor
inc
call
pop
mov
mov
in
test
jp
out
int
xor
test
jmp
jnp
dec
test
fcompl
xchg
loopne
lods
rcll
pop
jo
xchg
pop
cld
jae
mov
xchg
pop
add
inc
inc
mov
dec
or
out
or
jo
icebp
lea
adc
mov
jg
adc
icebp
scas
push
mov
loope
enter
and
inc
gs
and
push
pop
mov
loopne
cmc
sbb
inc
test
rorl
imul
pushl
sub
outsb
stos
ret
cmp
mov
dec
ja
shlb
sti
mov
mov
sbb
inc
xor
mov
int
dec
xlat
add
mov
xor
push
pop
pop
and
mov
test
adc
into
inc
aas
lcall
inc
out
add
ja
mov
push
sub
in
mov
fisubl
rcrl
stos
xchg
lds
cli
test
inc
lock
mov
in
lahf
mov
ret
add
mov
pop
fwait
mov
jae
mov
test
push
dec
mov
inc
fwait
subb
and
addl
cli
enter
stc
aas
or
jno
test
dec
testb
push
clc
fsubs
shl
es
mov
pop
pop
test
pushf
shrl
rcl
add
mov
inc
cld
lret
fwait
cmp
pop
faddl
and
xchg
loop
mov
cmp
push
fsubl
jns
in
cwtl
jmp
adc
sub
imul
or
mov
xchg
into
sbb
cmpb
lahf
mov
cli
mov
cmp
stos
clc
cmp
jbe
repnz
lea
fildll
add
jp
cs
dec
test
add
repz
nop
sbbb
dec
cmp
stos
call
sbb
lret
xchg
loope
jns
repz
jae
jnp
test
fdivrs
insb
push
aad
mov
je
leave
adc
or
lret
pop
lret
lock
cmpsl
xor
popf
pop
xchg
scas
adc
mov
push
daa
mov
lret
aas
push
stos
daa
lret
popa
pop
mov
sahf
fistpll
or
lock
add
dec
xor
cmp
ljmp
pusha
es
js,pn
pop
pop
mov
adc
push
push
clc
outsl
test
sub
pop
fs
les
call
jg
test
call
clc
jae
ds
dec
pushf
cmpsb
xchg
outsb
leave
mov
mov
adc
hlt
cwtl
pop
idivl
lods
ljmp
out
sub
xor
push
cmc
popf
sub
outsl
and
mov
repz
sub
cmp
pushf
iret
xchg
xchg
lahf
sbb
push
fadds
scas
ljmp
adc
fs
lret
cltd
cmp
mov
pop
popa
jmp
cmp
mov
out
lcall
loope
pop
xchg
jl
mov
mov
std
push
xor
sub
mov
pop
test
jbe
jecxz
mov
rcrb
xchg
leave
adc
divl
mov
stc
gs
mov
pop
jl
jns
sti
jb
imul
jl
push
dec
loop
mov
mov
shlb
in
dec
and
iret
daa
mov
mov
sbb
dec
mov
imul
push
scas
mov
or
mov
xchg
aad
movsb
xchg
xor
fbld
shrl
xor
pop
lods
mov
rcrl
imul
jecxz
pop
xchg
icebp
jne
daa
cmpsl
pop
push
adc
std
push
xchg
add
test
jecxz
and
test
scas
push
testl
pushf
mov
cmp
jo
in
mov
jnp
adc
sbb
dec
sahf
lds
je
adc
pop
les
mov
pusha
in
scas
inc
fxch
or
sahf
mov
in
mov
jl
cmpxchg
pop
and
mov
jb
mov
dec
test
imul
push
inc
fistpll
popl
mov
sbb
dec
repnz
xor
sti
and
fcoms
add
jmp
mov
xor
negb
pop
scas
push
jecxz
insl
popf
popa
mov
mov
lcall
jo
out
movsb
pop
out
test
xchg
sahf
ret
sbb
ret
scas
mov
cmpsb
pop
dec
dec
divl
fwait
out
scas
in
push
loop
popf
mov
and
jns
call
lret
idiv
xor
call
xchg
shl
push
in
shlb
cmp
adc
sub
stos
bound
es
loopne
outsl
ss
mov
dec
inc
adc
cmp
pop
rorb
mov
and
xchg
fucomip
jno
cli
add
jb
jae
shl
mov
mov
loope
bound
or
cmc
cwtl
inc
in
jmp
xor
pop
ret
pusha
mov
es
sbb
icebp
cmp
test
jae
iret
push
lea
and
jmp
xchg
fcompl
fucomp
aas
ret
inc
icebp
aad
in
pushf
adc
aas
pop
rorl
mov
loopne
loopne
sub
and
xchg
fs
lods
pop
stos
push
add
pop
xor
cmpsb
mov
orl
push
std
orb
mov
popf
jl
icebp
addr16
testb
inc
xor
add
jns
int
das
push
pop
dec
idivl
in
xchg
sub
shrl
pushf
push
mov
pop
fcompp
lock
nop
loope
mov
pusha
cmp
push
cmp
in
scas
insb
lock
sub
hlt
scas
mov
mov
inc
dec
cmp
into
je
fstps
add
bound
sub
xchg
aas
loop
lods
popa
fists
out
rcrb
and
popf
aaa
push
mov
xor
cli
dec
xor
dec
push
cmp
jno
icebp
push
arpl
sbb
dec
push
dec
inc
scas
ror
mov
mov
xchg
je
cmc
pop
xchg
insb
cmp
dec
pushf
test
and
iret
mov
imul
movsb
in
lods
dec
sub
das
push
gs
leave
andl
ret
pop
cmp
and
or
mov
add
push
roll
and
dec
ja
or
mov
push
pop
cmpsl
pop
mov
xor
inc
jno
or
subl
das
cmp
int3
iret
stos
call
in
push
int
lcall
clc
insb
bound
push
in
xchg
leave
je
xlat
xchg
mov
sub
cs
movsb
fsubrp
ds
and
ret
jb
jmp
outsb
sbb
add
insb
mov
ja
cmp
mov
not
xchg
mov
and
std
lods
or
rcrl
mov
cmp
popf
repz
das
scas
mov
idivb
xor
cli
inc
sub
xchg
pop
or
jb
push
cli
pop
test
fdivl
pusha
mov
inc
mov
ja
dec
inc
add
or
shrl
jae
push
adc
xorb
test
and
xchg
mov
adc
outsl
test
jbe
movsl
cltd
dec
fs
jb
cmp
shl
int3
mov
lahf
jp
icebp
aas
jb
cmpsl
xchg
mov
mov
and
adc
cwtl
in
lea
es
movsb
cltd
inc
data16
test
dec
dec
call
mov
or
gs
loop
out
push
xor
sahf
movsl
pop
sbb
adc
das
sahf
inc
in
jle
sub
arpl
add
dec
mov
fistpll
adc
push
sbbl
cmpsb
ret
loop
rolb
ds
repz
or
test
pop
sbb
int3
lea
pop
mov
jmp
out
jmp
sbb
aad
mov
fs
push
inc
push
adc
out
cwtl
add
repnz
leave
outsl
cld
cmp
and
xchg
add
and
and
mov
cmp
repz
cmp
lods
pushf
dec
adc
adc
dec
xchg
sbb
aad
push
outsb
out
dec
mov
cmc
cwtl
aaa
imul
push
and
repnz
imul
sbb
mov
jle
insl
mov
scas
cltd
jecxz
push
push
cwtl
pusha
fists
mov
sub
out
adc
cmc
cmp
hlt
xor
xor
or
pop
sub
xor
inc
cltd
and
fisubs
loope
stos
in
or
test
mov
pop
mov
adc
push
jp
mov
insl
rcrb
xor
or
fisttpl
fnsave
lods
les
lea
cmpsb
int
cwtl
pop
into
adc
inc
repnz
xchg
sub
ret
subl
push
adc
pop
xlat
mov
xor
mov
push
fbstp
adc
fmulp
jns
aad
push
shr
adc
jne
loop
jb
pop
jnp
push
and
cs
cmp
jne
std
in
push
jo
mov
mov
pop
addb
inc
pop
pop
and
lcall
mov
dec
xchg
push
mov
movsb
lahf
pop
pop
sbb
mov
mov
insl
clc
iret
adc
iret
cwtl
adc
push
lahf
push
adc
xor
and
mov
inc
shlb
jo
mov
xor
scas
mov
je
dec
jne
push
cltd
in
cmpsl
push
adc
add
push
add
cmpsl
gs
and
es
pusha
ljmp
mov
pop
xchg
dec
std
lret
jmp
insl
xor
gs
rcrb
dec
sbb
daa
or
add
test
cmp
sahf
cmp
fistpll
ljmp
dec
add
dec
xchg
mov
rcll
push
jb
inc
and
add
inc
pop
dec
dec
sbb
or
jmp
pop
pop
mov
mov
repz
mov
mov
icebp
test
dec
xchg
in
adc
mov
and
jne
cmp
dec
pop
mov
sbb
mov
stos
stos
shrl
xchg
movsb
sub
pop
subb
in
inc
sahf
bound
add
clc
es
cmp
rol
daa
mov
jge
push
arpl
fldt
fcoms
enter
pop
mov
lret
movsb
inc
pop
xor
ljmp
loop
out
notb
adc
inc
and
fcomip
hlt
in
pop
or
sub
sub
jo
pop
push
movsb
pop
icebp
mov
or
push
stc
lods
cmp
pop
pop
test
and
ret
imul
repz
f2xm1
add
sub
adc
lret
gs
sub
dec
popa
jecxz
jae
mov
dec
cld
xchg
dec
pop
pop
add
bt
or
push
sbbb
jns
push
sbb
xchg
bound
fsubrl
mov
outsb
ja
out
popf
xor
out
in
fcmovu
sbb
and
sub
dec
jb
push
cmp
adc
pop
dec
adc
sub
lods
js
arpl
push
arpl
sbb
mov
pop
pop
sub
pop
scas
filds
addr16
cli
push
push
ja
adc
mov
out
aaa
cli
popa
add
mov
sahf
repz
xchg
adc
pop
mov
add
es
and
shr
call
mov
insl
xchg
out
xchg
jbe
outsb
je
cltd
idivl
push
push
or
test
and
xor
fs
gs
sti
sbb
lcall
cmp
lret
mov
mov
adc
mov
mov
repnz
ficoml
xor
fcomi
sti
push
aam
fdivrs
sub
inc
cmpsb
les
cmp
sbb
add
pop
dec
loopne
cmp
imul
jmp
mov
xchg
jno
or
push
incl
pop
sub
jo
sbb
mov
jle
loopne
cltd
std
fbstp
es
fdiv
adc
xor
pop
adc
and
dec
aaa
addb
jnp
out
xchg
add
sbb
test
scas
push
xor
stos
test
inc
sbb
push
mov
lods
and
jnp
pop
xor
mov
pop
inc
in
out
insl
cmc
add
pop
adc
adc
lahf
pop
loop
push
movsl
mov
add
shll
inc
pop
mov
add
negl
iret
testb
adc
jmp
cs
or
inc
lods
dec
mov
jbe
mov
pop
frstor
mov
roll
pop
push
cwtl
imul
xchg
movsl
iret
xchg
xchg
popf
ja
lea
jmp
ja
pop
int3
push
out
push
xlat
aad
aaa
add
adc
jge
cmp
mov
or
mov
or
lods
loope
loope
cmp
jne
out
or
and
xchg
xor
xchg
das
into
mov
loope
add
repnz
add
dec
pop
pop
sbb
inc
push
sub
cmc
out
add
sub
inc
insb
insb
orl
jb
ret
fbld
test
sub
leave
pop
rclb
sub
inc
xchg
fs
dec
add
add
jle
in
fwait
clc
loopne
and
icebp
pop
xlat
fs
shlb
cmp
andb
loopne
lahf
cmpsb
and
ret
mov
pop
cmp
or
push
movl
arpl
mov
adc
adc
mov
sub
adc
int
cmpsl
sbb
jg
nop
fadd
adc
data16
jb
addr16
pop
jns
mov
inc
xchg
scas
loopne
jae
xchg
or
sbb
sti
xor
sub
les
xlat
jge
xchg
xchg
cmpsb
divb
cmp
push
xchg
rcl
mov
adcb
mov
insl
sbb
lret
pop
ror
popl
cld
push
pop
add
movsb
enter
pop
xchg
xor
and
add
test
loop
pop
dec
jecxz
push
fldt
adcl
add
movsl
and
leave
fdivl
jo
in
adc
and
mov
mov
jmp
cmp
sbbl
lret
stos
nop
jbe,pt
fmul
jnp
jne
cmpsb
insb
add
cwtl
inc
lcall
pop
out
mov
jns
xor
fwait
add
fbstp
subl
cmp
jecxz
addr16
inc
xchg
call
shlb
jg
push
cltd
dec
dec
daa
hlt
add
jle
mov
mov
push
add
arpl
sub
loopne
outsl
test
jb
cmpsb
stc
and
mov
imul
addr16
das
and
outsl
negb
rcr
shrl
or
pop
jg
jl
leave
jb
leave
inc
jnp
stos
xchg
sbb
fistpl
mov
sbb
add
or
lods
repz
mov
mov
inc
mov
add
sub
or
out
aam
ss
imul
cmp
push
fidivrl
in
push
pop
cmp
shlb
insl
in
xor
or
adc
addr16
std
mov
or
ss
ret
inc
cmpsl
pop
cmp
daa
mov
xchg
xor
nop
leave
or
sahf
jno
lcall
clc
pop
fldt
add
add
or
and
imul
stos
mov
orb
dec
add
cmpl
inc
rcrb
cld
jbe
xchg
into
add
mov
jae
mov
int
jae
cwtl
push
js,pt
dec
jl
pushl
into
fwait
xchg
push
pusha
or
ss
test
in
cmpsl
and
push
outsb
jne
lea
out
or
sbb
fcmovu
lock
lock
jno
sub
push
pop
jno
push
adc
push
inc
inc
scas
pop
jno
notb
xor
jge
divl
dec
dec
jg
pop
push
pop
push
push
sbb
popa
jne
xlat
arpl
leave
insl
mov
call
std
xor
mov
jp
jbe
push
das
dec
inc
sub
mov
ret
xchg
and
int3
sbbb
mov
jmp
sti
inc
arpl
inc
inc
jno
addr16
cld
rcrl
stos
mov
data16
sub
jmp
cmp
lods
out
mov
dec
fcoms
ss
mov
hlt
push
xchg
and
fs
ja
add
gs
push
or
inc
hlt
sahf
out
arpl
xor
add
bound
daa
lret
in
mov
adc
sbb
sbb
mov
mov
mov
cli
shlb
lea
sarb
in
jnp
leave
mov
les
mov
stos
idivb
sbb
test
lret
dec
in
jmp
mov
lret
jle
sub
daa
cmp
fstl
movsl
lahf
mov
out
inc
mov
pop
push
rcrb
jns
pop
ret
mov
cli
lock
add
test
adc
imul
out
push
sub
pop
mov
add
lret
jle
pusha
or
cmp
sbb
jns
mov
test
mov
in
mov
jno
pop
icebp
cmp
and
icebp
fwait
mov
and
aaa
repnz
ret
or
cmc
add
mov
dec
push
popf
dec
cmp
mov
fidivs
or
aas
push
mov
xor
cmpsl
addb
int
mov
clc
inc
mov
xchg
in
andl
and
loop
dec
clc
rorl
mov
jne
mov
cmp
dec
enter
int3
mov
dec
cmp
movsb
lods
sbb
inc
sbb
adc
inc
or
fbstp
push
fs
mov
pop
ds
jo
loopne
xchg
pop
and
mov
inc
scas
add
fisttpll
cmp
repz
and
dec
jecxz
pop
mov
imul
or
pop
cmp
push
mov
cmpsl
repnz
arpl
mull
std
mov
lock
fcmove
loopne
xlat
cmp
sub
xchg
dec
dec
ja
jae
outsl
fwait
insl
divb
aam
xor
push
jnp
inc
mov
add
adc
mov
test
repz
inc
sbb
out
movsl
mov
ljmp
addr16
mov
jecxz
jae
or
into
lcall
xchg
sub
or
push
imul
es
ss
out
idiv
xchg
xchg
sub
or
push
imul
es
ss
sahf
mov
jnp
jmp
sub
or
push
imul
push
dec
ss
out
idiv
xchg
xchg
lret
mov
mov
or
or
cmp
fisubl
mov
pushf
mov
adc
rcll
cmc
and
adc
inc
movsb
adc
pusha
test
xchg
fs
je
inc
mov
shlb
loopne
lock
or
adc
inc
repnz
push
mov
test
cltd
jge
insl
mov
cmp
out
add
sbb
dec
mov
sbb
sti
lock
xor
in
sub
shl
or
sti
ds
xlat
xor
lods
aas
push
fs
add
push
das
adc
cmp
leave
sbb
or
xchg
cmp
ljmp
nop
pop
jmp
scas
rcrl
repnz
call
hlt
jo
iret
sub
test
mov
cmp
in
lds
jo
xchg
xor
js
and
insb
pop
lds
cltd
test
outsl
mov
mov
adc
or
jl
sbb
or
cmpsb
push
movsb
in
xlat
mov
pusha
fwait
nop
add
mov
pop
xchg
add
out
sahf
fistpll
xor
orb
inc
jae
mov
and
xor
add
or
cmp
sub
pop
mov
imul
movsb
es
jno
mov
hlt
push
rcrb
shll
jmp
clc
orb
cmp
mov
add
inc
and
jecxz
loopne
mov
adc
add
adc
in
hlt
and
xor
inc
movsb
push
mov
test
andb
inc
mov
shlb
loopne
lock
in
hlt
and
xor
inc
movsb
push
mov
test
andb
ret
fcoms
scas
cld
stos
pop
lret
jge,pn
or
faddl
cmp
loopne
insl
leave
fstl
bound
dec
clc
push
cmpsl
lret
out
mov
cmp
fistpll
mov
push
mov
mov
into
xlat
iret
daa
pop
adc
jge
adc
adc
fwait
mov
imul
push
lods
sahf
into
pushf
pop
or
jge
cmpb
and
sub
sub
mov
xor
bound
sarb
je
push
cmp
sub
cs
fstl
das
rol
mov
sbb
in
adc
lods
jnp
repnz
jmp
pushf
xchg
test
in
jno
and
shr
adc
mov
xchg
push
cwtl
push
xchg
adc
adc
hlt
dec
cmp
sbb
xor
xchg
jp
sub
xchg
mov
or
in
lock
ret
jae
xchg
fldenv
mov
insl
loop
mov
jge
neg
and
sarb
and
test
and
fdivs
mov
cmp
pop
out
dec
mov
mov
adc
add
push
fstps
cmp
adc
jno
pushf
imul
int3
aaa
sub
or
ljmp
ds
jne
mov
adc
cli
fists
mov
js
xchg
push
inc
sbb
jbe
or
test
sbb
cmp
repnz
mov
cmp
mov
fldl
mov
std
push
bound
test
mov
push
ds
aaa
cli
cmpsl
leave
mov
inc
mov
out
in
xlat
into
ljmp
cld
frstor
pop
int3
add
nop
xchg
ja
jl
mov
push
mov
lahf
xchg
mov
lcall
pop
daa
stos
insl
or
xchg
cmp
cmpsb
push
movsb
pop
or
inc
lods
jns
sbb
and
mov
outsl
push
fnsave
xor
mov
test
cmp
and
xchg
ss
jle
into
int
das
jbe
push
push
pop
or
mov
scas
ja
push
push
xor
lcall
push
mov
xor
xor
ljmp
negb
lcall
popa
xor
adc
bound
dec
push
lret
cmp
pusha
dec
xor
cmp
dec
mov
fcomi
int3
aam
in
cmpsb
xchg
fistps
dec
inc
mov
sub
cmp
ret
jae
and
xlat
outsb
imull
out
mov
sbb
mov
push
mov
xchg
ret
lods
iret
xor
fldl
cmp
mov
jbe
test
ret
imul
cmpsb
mov
dec
pop
fwait
aad
mov
inc
push
sbb
lahf
jmp
dec
sbb
cmpsl
push
adc
je
mov
mov
sub
xchg
or
push
xor
mov
gs
jle
xchg
outsl
xor
je
or
xor
rclb
and
sbb
sub
jg
push
es
shl
add
cmp
jmp
sahf
ja
push
xchg
loop
jb
or
mov
mov
dec
jg
mov
mov
lcall
enter
inc
jns
jge
xchg
andl
dec
movsb
mov
pextrw
sub
jae
push
ja
test
negb
loope
mov
sbb
and
pushf
push
push
rcrb
dec
and
lcall
or
mov
add
and
jge
popf
mov
inc
nop
test
test
jo
mov
mov
mov
repnz
sbb
out
xchg
addl
pop
mov
or
mov
aaa
dec
mov
lcall
scas
mov
shrl
adc
pop
mov
movsb
pop
or
and
cli
hlt
dec
lods
xorl
xor
inc
jb
repz
or
leave
test
mov
loop
sbb
or
popa
mov
inc
add
xor
loope
cmpsb
sub
cld
jae
in
imul
jle
cmc
and
cs
push
lods
out
xchg
shlb
insl
and
inc
stc
sbb
fs
dec
add
sub
in
xor
mov
ror
and
cltd
push
dec
ljmp
aas
mov
cmp
int3
ficoms
push
fimull
out
add
repnz
sbb
jns
dec
out
lahf
mov
into
mov
pop
stc
jge
push
enter
lret
outsb
jae
sbb
jb
cld
cmc
fidivrs
mov
ret
add
inc
stc
push
xor
sahf
mov
mov
sar
int3
cmp
call
imul
mov
js
aaa
and
stc
mov
jae
push
xchg
aad
push
mov
pushf
jb
cld
xchg
loop
add
mov
mov
jno
dec
aad
clc
les
push
cmp
pop
mov
cmp
stos
jle
jmp
aam
pop
clc
aas
mov
sub
imul
in
ficoml
push
push
ss
aam
inc
or
mov
dec
dec
push
out
jmp
mov
xchg
and
lret
lret
push
incb
and
mov
je
decl
sub
test
cltd
loopne
jo
lds
fstl
mov
jo
add
stc
cwtl
insb
jmp
mov
inc
mov
jl
push
ja
push
lahf
subb
xchg
push
rol
loop
repnz
sbb
mov
lods
adc
not
jo
adc
inc
rolb
shrl
sbb
pop
xchg
out
lcall
cli
sbb
cli
xlat
in
aam
jl
mov
jecxz
insb
call
xor
mov
mov
sbb
imul
cld
adc
jo
cbtw
xor
cmp
inc
and
les
lods
fmuls
xor
bound
push
xchg
cmc
push
movsb
cmp
jecxz
ficoml
lods
fmul
and
pop
movb
add
xchg
hlt
loopne
gs
and
cmpsb
cmp
insl
cltd
loope
shlb
mov
push
in
jge
dec
stos
mov
dec
mov
cmc
mov
cmp
stos
pause
incl
addl
push
jo
lds
cmp
pop
int3
ret
inc
js
int3
sbb
sub
fsts
dec
xchg
xchg
adc
jg
sub
ds
mov
push
mov
push
xor
jge
ss
test
and
out
insb
pop
sub
mov
out
pop
fsubr
add
cs
xor
mov
mov
cmp
jb
test
and
ror
das
or
bound
and
test
js
lock
insl
xor
xor
sub
aas
and
das
movsb
push
or
lcall
inc
rorb
repz
stc
cmp
xchg
sahf
jle
outsl
jmp
inc
pop
std
repnz
repz
xor
lds
fwait
lcall
clc
inc
jbe
cld
aam
pushf
sar
jmp
jmp
inc
in
pop
push
lahf
or
lods
jge
xchg
sti
lods
push
fs
mov
mov
lahf
mov
jmp
nop
xor
test
mov
loopne
sub
cmp
add
test
jo
leave
rolb
pop
push
data16
out
scas
dec
clc
ret
xorl
pop
mov
fnstsw
aad
mov
push
lea
insb
fstl
insl
fwait
movsl
loope
pop
cmp
pushf
mov
and
lods
daa
inc
stos
cmpsb
sbb
in
rcll
dec
cltd
mov
push
inc
popf
pop
imul
pop
sahf
jge
dec
xor
insb
aad
jp
pop
cmc
popa
push
cwtl
inc
mov
sub
addb
inc
sbb
aam
adc
jg
aad
pushl
pushf
mull
notl
inc
adc
xchg
insb
xchg
mov
mov
lcall
fnstsw
push
jo
lret
arpl
stc
cld
mov
fs
mull
cmp
sub
shlb
xlat
xor
mov
and
enter
pop
jp
imul
pop
mov
in
cmp
inc
and
push
mov
push
sub
or
insb
xchg
ret
jecxz
jge
cmp
pop
iret
add
or
repnz
icebp
in
pop
or
cltd
add
enter
jo
fidivrl
cmp
or
push
icebp
inc
sub
lret
pushf
lahf
shl
jns
xchg
mov
sbb
jp
mov
mov
leave
jmp
cmp
adc
je
cmp
xchg
daa
out
sbb
sbb
sti
hlt
shrl
dec
dec
scas
inc
andb
rcl
mov
call
pop
jnp
push
hlt
or
mov
iret
adcb
jge
jno
into
lods
pusha
mov
sub
mov
cld
out
mov
jecxz
mov
inc
push
or
inc
inc
adc
jl
ljmp
jmp
adc
mov
adc
cs
add
mov
inc
ret
cmp
dec
push
push
mov
xchg
xchg
lahf
sub
lcall
fistps
xor
int
xor
test
sub
adc
repnz
or
ss
fmuls
push
loop
push
clc
pusha
xchg
ss
jge
cltd
out
xchg
je
and
dec
ja
das
and
les
sub
dec
sbb
roll
push
push
xchg
mov
in
xchg
insb
dec
jbe
les
xlat
adc
adc
fnstsw
decb
dec
sbb
jae
dec
shl
or
fidivrl
mov
test
lret
pop
loopne
sbb
js
aad
xchg
mov
mov
mov
mov
pop
mov
cs
adc
flds
dec
jecxz
sub
test
lods
jbe
and
mov
dec
and
dec
xchg
mov
and
add
push
repz
test
jge
xchg
lcall
in
push
dec
testb
pushf
aam
push
xchg
test
push
jmp
dec
fstps
nop
pop
cmpsb
faddp
sbb
insl
test
cmovo
mov
adc
pusha
pop
pusha
in
pusha
out
sahf
popa
shlb
pop
cmp
sahf
adc
inc
pop
mov
adc
sti
or
out
push
mov
jge
sbb
mov
or
sbb
leave
sub
inc
movsl
in
jle
push
xchg
mov
dec
nop
mov
sub
frstor
push
cmp
jnp
adcb
in
jle
push
push
pushf
xchg
adc
fisubrl
sub
mov
pop
insl
pop
add
push
jecxz
xor
insl
cmp
pop
neg
repz
fwait
xor
cmpsl
and
lret
sub
imul
lret
movsl
out
inc
popf
leave
ja
and
sub
les
movsl
jmp
mov
inc
and
push
clc
xlat
icebp
xchg
push
mov
dec
fdivl
mov
rsm
xor
or
inc
xchg
push
out
jle
jo
wrmsr
adc
push
int3
jmp
je
add
mov
into
push
fwait
arpl
mov
jp
in
aas
jp
and
xchg
dec
push
popa
and
or
in
loope
mov
and
outsl
in
addr16
add
pop
pushf
mov
mov
les
rclb
fst
xchg
je
pop
or
das
sub
roll
mov
adc
xor
adc
mov
outsl
mov
jae
pop
out
xacquire
clc
xor
and
nop
push
in
movsb
es
rclb
shll
mov
pop
xor
loopne
rcrb
out
jo
roll
or
cwtl
jmp
jb
or
outsl
mov
xchg
pushf
iret
dec
sbb
dec
les
adc
or
xor
call
pop
scas
imul
xchg
dec
jmp
and
dec
es
dec
adc
shlb
leave
orb
push
xor
subb
dec
lcall
cmp
jmp
mov
js
call
fnstsw
in
mov
lret
imul
cmp
mov
sbb
or
pop
mov
dec
fsubr
mov
cmpsb
xor
jg
cs
inc
and
les
or
std
fucomi
ds
insb
jecxz
cmpsb
stos
stc
dec
es
lret
dec
mov
or
xchg
paddb
stos
lds
stos
lcall
mov
mov
sets
data16
push
or
cmp
mov
loope
imul
pop
mov
pop
aas
push
lret
fsts
popa
inc
repz
jns,pn
inc
pop
mov
mov
call
lretw
mov
push
jne
sub
xor
dec
or
jns
fidivl
mov
xchg
ds
rcrb
nop
loopne
or
add
aas
lahf
and
jg
mov
cltd
sbb
hlt
loope
stos
addr16
imul
jp
mov
pop
mov
push
mov
cmp
and
sub
int3
add
stos
flds
ljmp
mov
ds
sarb
adc
imull
fs
in
mov
loope
mov
dec
or
outsb
cmpsb
dec
scas
insb
push
dec
sub
and
insb
out
xchg
movsl
dec
aam
fstpl
lret
roll
das
sbb
adc
mov
jne
or
std
xchg
ds
adc
popf
inc
mov
mov
shl
sub
cmp
leave
inc
mov
int3
add
pop
xchg
or
stc
push
mov
cmpsl
clc
or
cmp
sti
or
orl
cmp
cmp
es
jecxz
lods
push
fbstp
sbbb
adc
jnp
xchg
scas
cmp
jmp
cwtl
or
xchg
cmp
sbb
mov
jnp
mov
mov
pop
mov
and
pushf
xlat
push
xchg
jge
push
or
cs
push
aam
test
adc
push
fiaddl
pop
fildl
xchg
cmpsl
xchg
xor
dec
loopne
push
out
sub
lock
add
mov
xorb
imul
and
and
dec
mov
outsl
and
or
lea
cmc
mov
shll
mov
outsl
push
sub
popf
arpl
mov
cli
adc
into
sbb
negl
dec
push
dec
divl
ret
add
les
xor
xchg
iret
cmpsb
loope
mov
sub
mov
dec
push
mov
cmp
faddl
dec
ss
dec
lahf
mov
pop
movsb
dec
inc
jb
scas
sahf
push
dec
mov
outsb
adc
cmp
xchg
xchg
dec
push
xlat
mov
idiv
cmpb
test
add
inc
sbb
push
jne
pushf
es
mov
icebp
int3
xchg
cmp
sub
ja
mov
xor
xchg
sbb
sbb
jnp
fadds
leave
lret
cmp
out
mov
stos
fsub
inc
push
sti
arpl
mov
sub
pop
fmuls
pop
mov
aad
pop
push
jmp
xchg
lahf
xor
sbb
repz
and
inc
std
or
push
dec
push
pop
insb
mov
shll
sub
push
mov
and
arpl
mov
or
push
jmp
fbld
das
pusha
test
adc
xchg
jmp
lret
jb
mov
mov
and
xchg
popa
movsb
pop
movsb
pop
pusha
inc
sti
pop
ss
das
mov
push
xchg
push
out
add
push
mov
jne
fldt
dec
and
stos
pusha
pop
scas
aad
xor
jp
push
mov
mov
std
lea
hlt
jp
and
sbb
fwait
jg
stc
and
arpl
push
jmp
rcrl
adc
or
jmp
das
mov
mov
mov
push
mov
cmp
test
cmpsb
movsb
dec
dec
lcall
cltd
push
add
idivb
sub
and
ficompl
std
inc
push
jb
pop
sub
test
imul
push
les
pop
or
or
es
pop
lret
stc
out
and
mov
lea
icebp
pop
and
lret
jp
inc
fsubrs
pop
mov
add
out
lahf
push
lds
in
and
stos
out
addb
xchg
pop
inc
mov
out
subl
or
sbb
imul
mov
inc
lahf
loope
addr16
mov
xchg
sub
imul
aam
push
stos
xchg
bound
add
jmp
lcall
sbb
xchg
repnz
cld
popf
out
inc
loop
pop
push
cld
out
cld
in
ret
nop
add
xchg
mov
bnd
fs
or
xor
mov
push
arpl
sbb
and
sti
int3
aas
mov
mov
cs
xor
popf
insb
lcall
adc
imul
out
sahf
jne
insb
int3
js
je
sbb
adc
pop
lods
test
rcrl
sub
sub
adc
push
movsl
xchg
cmp
sub
out
call
or
cmp
and
xorb
fs
and
lock
add
and
notw
pop
mov
shr
xor
stc
dec
push
fstps
arpl
cmpsb
mov
xchg
and
stc
je
and
call
fdivrl
push
mov
lds
xchg
repz
add
and
jg
push
sti
rcl
das
fwait
movsb
push
in
call
mov
pusha
jns
sbb
push
inc
cmp
out
xchg
inc
test
dec
pop
aam
inc
or
and
and
out
outsl
mov
ret
add
dec
scas
sub
stos
gs
mov
mov
pushf
fcmove
in
out
fistps
xor
xlat
sub
sbb
loopne
and
add
lret
out
aad
mov
lea
sub
arpl
inc
fbld
ljmp
mov
inc
lds
in
imul
jae
mov
out
idivl
inc
sub
addr16
daa
call
push
call
fs
sub
sub
int3
mov
int3
mov
push
xchg
add
inc
add
test
inc
int3
sub
icebp
or
push
dec
cmpsb
imul
and
xchg
adc
in
mov
ds
sbb
and
rcl
pop
clc
test
dec
jne
call
add
das
adc
shll
cld
dec
inc
aaa
cmpsb
lock
push
sahf
or
adc
add
pop
ljmp
or
and
stos
daa
shlb
add
or
pop
push
out
jmp
insl
inc
test
sahf
adc
cmp
sub
sub
hlt
fdivr
cmpsb
imul
mov
push
addr16
mov
mov
aam
lods
gs
add
pop
mov
xchg
test
jle
std
mov
push
movsl
ss
dec
mov
bound
jae
adc
std
dec
sbbb
add
inc
or
and
addb
and
jmp
push
adc
lcall
add
xor
out
cmpsb
adc
inc
inc
cmp
iret
loope
inc
and
stos
cltd
dec
divb
dec
fbstp
xchg
sbbl
aam
sub
aam
push
pop
pop
mov
js
dec
test
aad
mov
mov
push
pop
push
icebp
jne
xchg
repnz
inc
xor
sub
mov
nop
int
mov
rclb
clc
mov
fdivr
cmp
repz
or
cld
jb
xchg
sbb
sub
nopl
cli
mov
jle
sahf
inc
push
mov
ret
fcmovu
outsb
inc
xchg
cmp
scas
add
negb
mov
frstor
in
inc
pop
adc
cmc
xchg
adc
cmp
lret
outsl
int3
outsb
jmp
fimuls
nop
scas
in
stos
mov
mov
push
dec
inc
pusha
fidivrs
pop
sub
loope
xor
add
test
jp
push
outsl
in
adc
mov
insb
divb
movsl
into
add
aaa
stc
cmc
pop
negb
push
xchg
xchg
push
jns
lock
mov
sub
aad
xor
in
dec
fucomp
pop
fstpl
add
rcll
mov
sub
ds
icebp
pushw
xlat
sub
mov
adc
push
lret
push
pop
stc
imul
test
inc
sbb
xor
lahf
shr
add
and
mov
inc
mov
insl
and
das
loop
dec
ja
dec
dec
mov
test
imul
sbb
daa
mov
xchg
jl
pusha
pop
or
loope
out
addr16
cmp
cmp
lods
fnsave
ja
lock
pop
cmp
loopne
sub
dec
pop
pusha
xchg
pusha
inc
sub
loop
inc
sahf
dec
mov
leave
push
and
push
jae
subb
insl
add
pmaxsw
cmp
gs
loop
in
add
sub
cmpsl
sub
popf
scas
add
cs
xchg
and
or
nop
pop
sub
cltd
outsl
pop
je
inc
mov
shlb
loopne
lock
in
hlt
and
xor
inc
movsb
push
mov
test
andb
inc
mov
shlb
loopne
lock
in
hlt
and
xor
inc
movsb
push
mov
test
andb
inc
mov
shlb
loopne
lock
in
hlt
and
xor
inc
movsb
push
mov
addb
pusha
movsb
jo
inc
mov
shlb
pusha
add
aam
in
pop
mov
xor
lahf
sti
jmp
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jnp
js
or
mov
lret
rolb
add
add
add
pop
add
add
popa
add
add
add
add
or
xor
fildl
aas
add
add
mov
cmpsl
add
xor
and
das
add
add
stos
add
add
and
push
add
add
add
add
mov
sub
add
add
add
add
xchg
add
fildl
cmp
add
add
add
add
add
add
add
add
add
add
and
push
add
aas
add
add
add
add
push
add
add
add
add
add
in
lahf
add
add
mov
add
add
cmp
inc
add
add
add
add
add
sub
xchg
add
add
add
add
add
add
add
add
add
fildl
inc
add
add
add
mov
mov
add
add
add
add
add
add
add
add
and
filds
xor
imul
add
add
add
add
push
add
add
add
testb
add
add
add
add
add
add
jb
and
testb
add
add
add
add
add
hlt
add
add
add
inc
add
add
add
add
add
add
add
push
add
test
adc
lret
add
inc
add
add
inc
add
add
xchg
add
add
add
add
add
xor
das
add
add
add
add
add
add
add
and
add
add
sbb
xchg
add
push
add
add
add
push
add
add
add
jp
mov
add
cmp
add
add
add
or
inc
add
lret
add
testb
add
add
add
add
add
cmpsb
add
add
add
add
add
popa
add
add
add
add
add
xchg
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
push
add
bound
adc
js
jns
testb
add
add
add
pop
add
add
add
sub
add
add
mov
ljmp
add
or
mov
sub
push
add
add
xchg
add
xor
sbb
add
add
add
dec
add
test
add
add
jl
xor
add
push
add
adc
pop
add
xchg
add
add
add
add
add
outsb
add
add
dec
add
or
imul
add
fildl
add
add
add
add
sub
xor
iret
add
loopne
mov
pop
add
add
add
add
xor
add
add
add
add
add
or
incb
stos
pop
fnstsw
aad
sub
ret
data16
lds
jbe
mov
and
int3
add
sbb
loop
out
dec
mov
pop
xlat
in
out
out
test
aas
in
js
push
pop
jmp
lods
ret
cmp
push
adc
adc
mov
fcmovnu
xchg
arpl
cmp
adc
pop
xor
bound
dec
jno
cwtl
xchg
adc
loopne
push
push
movsl
xchg
or
sahf
cmp
into
add
in
pushf
in
sbb
jne
push
aam
stos
cmp
stos
or
pop
mov
dec
adc
fiaddl
fsubl
jp
xor
inc
and
push
cli
add
sbb
xor
stos
stos
or
push
cmp
sbb
or
mov
mov
cmp
out
popa
leave
dec
sub
int3
and
adc
or
cmpsb
aad
lock
or
les
sbb
loop
push
adc
mov
fcmovnbe
cmc
push
ss
insl
jmp
gs
jnp
dec
inc
sub
inc
aaa
sub
out
mov
in
cmp
mov
inc
lret
push
push
mov
addb
push
scas
sbb
push
jns
sbb
leave
into
mov
out
pushf
cmp
jns
mov
leave
out
pop
ljmp
stc
cmp
cmp
dec
cld
push
lret
mov
dec
adc
rcrb
mov
movsb
test
mov
dec
lcall
sub
and
andl
enter
jne
pop
mov
in
adc
mov
mov
or
arpl
xchg
push
out
mov
ret
outsl
pop
jns
lret
lret
dec
push
xor
mov
inc
jle
mov
pop
nop
or
pop
add
push
cmp
push
add
pushf
push
add
xchg
mov
mov
out
xchg
mov
sbb
pop
pusha
dec
push
mov
subl
dec
sar
dec
in
xchg
pop
jne
pop
or
bound
jno
or
xchg
xor
pop
fwait
or
push
add
dec
aam
ja
xor
lahf
cli
dec
cmp
fdivs
jge
or
test
outsl
fistpl
fsubs
adc
hlt
fcoml
jle
add
sahf
sub
mov
pop
imul
push
lods
mov
mov
outsl
cmpsb
sbb
adc
insl
in
sub
in
mov
push
outsl
fbld
lods
push
pop
clc
js
jb
out
outsl
jmp
loope
ds
push
dec
inc
or
pop
stc
adc
xchg
and
les
push
aas
aam
jnp
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
