call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
int
dec
mov
cmpsl
in
sub
xchg
int
cld
or
sbb
insl
mov
pop
lods
pop
pop
lods
dec
mov
sbb
int3
sub
cmp
or
lea
lods
pop
pop
lods
dec
mov
sbb
int3
sub
pop
pushf
imul
sub
fistpll
adc
iret
push
fstps
shl
mov
or
mov
cwtl
or
adc
add
inc
pop
push
test
xor
movsb
repz
or
jb
mov
push
or
jb
or
sbb
pop
pop
jecxz
xchg
dec
inc
ds
lcall
lret
and
ffree
sub
ret
cld
lret
jge
ficomps
insb
mov
jae,pn
xchg
cmc
addr16
fdivl
repz
sbb
aas
in
cmp
mov
divl
call
ja
inc
jmp
and
cmp
jge
sub
dec
lods
mov
jge
insl
pushf
sbb
int3
sub
cmp
or
sbb
insb
lea
lods
sbb
lods
or
adc
and
pop
stos
push
test
pop
jg
xchg
pop
mov
sarl
fnstcw
add
push
rorb
les
mov
test
dec
or
ljmp
arpl
push
jmp
or
sub
cmp
or
sbb
insb
lea
lods
pop
pop
lods
dec
mov
sbb
int3
sub
cmp
or
sbb
insb
lea
lods
pop
pop
lods
dec
xchg
lock
pop
outsb
sbb
jg
fstcw
lret
and
mov
pushf
pminub
mov
into
jl
jecxz
cmpb
mov
pusha
and
loopne
adc
mov
push
rol
das
and
into
stos
mov
lds
push
dec
inc
push
xchg
stos
pop
jbe
loope
dec
lods
sbb
les
add
push
pop
xor
ret
fsubs
adc
jnp
and
lahf
adc
sub
ffree
xor
add
mov
repz
cwtl
mov
nop
adcb
repz
mov
and
jns
jg
jge
xlat
int
int3
mov
lret
insl
push
xchg
mov
pop
data16
pushf
rcrb
dec
icebp
push
mov
add
xchg
fcoml
push
aad
jecxz
xchg
lret
or
insb
push
sbb
adc
adc
movsb
or
dec
dec
jle
mulb
mov
fistpll
rcrl
aaa
mov
lret
and
xchg
xor
sbb
xchg
rolb
push
cmp
or
cmp
xchg
xor
js
xchg
shll
xchg
scas
and
lods
sub
stc
mov
push
pop
sbb
jno
and
movsb
cmpl
sub
cwtl
sbb
add
pop
sbb
sub
add
scas
test
jae
cli
pop
xchg
adc
sub
inc
out
mov
into
mov
rcrl
inc
aam
pusha
pop
mov
in
loope
add
aad
adc
pop
out
fs
popa
mov
aam
leave
xchg
adc
js
shrl
mov
inc
nop
scas
mov
clc
dec
jg
in
jae
insl
ljmp
push
push
push
out
jb
ja
xor
cmpsl
jo
dec
pusha
xchg
enter
fistl
stos
cmp
in
mov
cmp
leave
scas
ret
lcall
in
pop
aad
pop
and
ret
mov
dec
pop
xchg
sbb
dec
mov
sbb
stc
into
and
cltd
stos
mov
fwait
stc
add
push
mov
loopne
in
inc
leave
push
orb
dec
fstl
pop
loope
pop
popf
pop
leave
repz
pop
pop
adc
or
push
test
stos
push
mov
roll
push
hlt
rcl
std
std
dec
jae
fwait
nop
into
divl
jno
sbb
xor
lods
push
push
test
pop
fs
mov
adc
mov
xor
rcl
jg
jnp
xchg
mov
push
cmp
ret
shlb
arpl
xor
cmp
nop
xor
xor
rcll
arpl
mov
scas
mov
push
xchg
push
imulb
add
xor
pop
sahf
inc
rorb
lahf
mov
xlat
popf
add
pusha
pop
add
add
pop
add
hlt
mov
sbb
jne
mov
cwtl
jg
sbb
aas
vmread
stos
imul
adc
mov
sub
pop
faddl
xchg
cltd
pop
add
gs
xchg
xor
nop
fwait
scas
push
mov
and
add
sti
push
cmp
adc
push
inc
addr16
adc
insl
xchg
jmp
cmpsl
sbb
addr16
inc
sti
arpl
test
ret
es
xchg
xor
cmc
mov
and
jnp
dec
mov
sbb
into
sbb
loope
mov
add
push
lea
xlat
movl
xchg
cmp
jge
ret
cmpsb
and
test
clc
or
out
aad
cmp
pushf
ret
mov
insb
jg
fwait
aas
aad
arpl
pop
fucom
mov
lock
mov
adc
sbb
jmp
repz
add
leave
jo
xor
mov
je
mov
inc
test
out
jge
sub
dec
mov
stos
mov
fmull
push
xor
jbe
mov
loop
fnstsw
push
cs
jp
cmp
es
mov
je
lods
arpl
aad
add
movsb
popf
push
jecxz
add
adc
in
aad
insl
lock
iret
lcall
xor
mov
jb
shl
dec
js
push
jb
xlat
arpl
adc
mov
jge
inc
ret
clc
push
int
lcall
adc
bound
iret
test
in
addl
and
sbb
inc
pop
cmp
hlt
js
mov
or
mov
les
ljmp
mov
jle
adc
nop
frstor
das
outsl
push
aam
pop
loop
movsb
push
fiadds
cs
leave
mov
mov
xchg
in
adc
or
xchg
jmp
sbb
movsb
add
aaa
js
pop
subl
les
mov
xor
lds
stc
lds
das
or
adc
test
add
fs
aam
shl
lods
hlt
pushf
outsb
aas
push
add
sub
mov
mov
push
mov
pop
lods
out
shlb
and
jg
push
dec
scas
sahf
loop
popf
out
mov
or
mov
rep
pop
xchg
push
push
xor
in
out
vmwrite
nop
movsl
mov
fwait
into
ja
gs
push
push
stos
xor
push
vpmacssww
xor
jmp
add
fldt
repnz
pop
sub
fidivs
test
and
add
pushf
mov
mov
out
cmp
in
into
add
dec
mov
mov
fistps
cmp
pushf
out
sbb
adc
adc
fbstp
sbb
lret
push
scas
mov
cmp
pop
mov
mov
call
dec
mov
mov
add
jae
stc
mov
or
jp
jbe
mov
pop
arpl
pop
ss
lcall
xchg
iret
rcl
sarb
xor
xchg
mov
and
push
shll
insb
push
scas
xchg
ss
insl
testl
jmp
push
shlb
or
pop
movsb
inc
xlat
dec
mov
ret
push
pop
xchg
lahf
pop
sahf
pusha
jp
fcomps
sbb
cld
xchg
daa
fcmovnbe
addl
mov
rolb
mov
push
inc
xor
mov
mov
lcall
xchg
aam
enter
mov
enter
push
sbb
push
inc
std
and
mov
ret
test
and
lret
lods
jp
iret
sbb
pushf
or
daa
and
imul
dec
mov
sti
jo
or
les
mov
cmp
daa
jp
mov
insl
add
repnz
cmpsl
jle
inc
cmp
testl
js
sbb
dec
aad
out
mov
pop
sbb
push
cmp
mov
repz
ljmp
shlb
aaa
cmpsl
push
lret
push
cmc
ljmp
cwtl
jns
iret
pop
das
mov
shll
lahf
test
jae
divl
inc
dec
lea
mov
cmpsb
push
sub
mov
jp
jmp
loopne
fidivrl
in
fs
mov
dec
cwtl
lea
and
ja
xchg
and
loopne
test
push
cmpb
push
xchg
xchg
xor
or
jne
xor
int3
mov
shrb
jg
fdiv
inc
pusha
mov
xor
xor
inc
xchg
jbe
fdiv
dec
cmp
ss
dec
iret
push
sbb
adc
stos
addr16
dec
cmpsl
sub
or
stos
sbb
mov
jbe
popa
andb
and
insl
sbb
in
jb
xor
mov
and
cld
lods
sbb
dec
popa
in
nop
in
dec
popf
int
daa
cmp
pop
sub
and
notl
fnstsw
dec
ror
push
push
aas
jne
xor
or
shlb
inc
inc
cli
cltd
mov
and
push
push
stos
dec
popa
shr
repz
test
xchg
dec
mov
cmpsb
xor
jns
pop
sbb
sub
lret
xchg
push
jo
stos
filds
cltd
or
cmp
jns
mov
inc
add
mov
out
sti
pop
jle
dec
movsb
popf
cli
pop
movsb
sbb
cmpsw
shr
fcomps
mov
or
add
mov
sahf
xor
ss
jmp
sbb
mov
into
inc
sbb
push
rcll
mov
cmpsb
pop
jne
sbb
out
sub
in
mov
xchg
mov
pop
mov
mov
pop
pop
mov
fwait
dec
enter
push
dec
inc
testb
cwtd
pop
lods
xor
pusha
xor
dec
int3
pop
addr16
js
mov
fiadds
push
test
es
into
pop
sbb
dec
mov
pop
test
or
subb
popa
add
loop
cmp
xchg
pop
dec
jne
lcall
daa
sti
lahf
adc
ret
push
xchg
add
iret
push
int
scas
pop
mov
xor
lahf
xchg
inc
xchg
mov
scas
mov
cmpsl
push
cmp
je
inc
enter
add
lods
scas
dec
and
mov
jle
xor
insl
add
mov
rclb
fisubrl
test
mov
in
out
dec
ret
fs
sub
data16
lock
out
push
jecxz
push
mov
mov
sbb
mov
and
shl
and
cmp
sub
xchg
lods
addr16
sbb
call
xor
pop
mov
inc
dec
hlt
cli
repz
movsl
sbb
imul
pop
test
das
pop
popf
sbb
xchg
ja
call
jge
mov
loopne
mov
inc
cmc
mov
pop
outsb
sbb
adc
inc
subl
loop
push
loope
pushf
mov
and
jae
jle
jmp
mov
imul
cmp
fwait
mov
dec
insl
jnp
mov
and
scas
aad
insl
jg
inc
jbe
dec
pushl
xor
cmp
dec
cmpsl
xor
cmp
lahf
jne
xor
scas
sbb
mov
call
xlat
push
ds
jecxz
inc
icebp
test
mov
ret
xchg
dec
test
dec
mov
daa
sub
mov
add
pop
lods
in
icebp
sbb
jp
mov
out
movsb
jmp
int3
ja
or
mov
add
sbb
dec
cli
ja
or
scas
in
mov
push
stos
adc
pop
divb
sbb
movsl
or
cltd
hlt
in
mov
jns
lods
fwait
stos
mov
je
in
in
dec
movsb
add
sbb
sub
mov
push
sbb
mov
fnstsw
outsb
jle
ljmp
pop
fisubs
pop
xor
xor
les
outsb
btr
pop
add
gs
xchg
adc
cs
mov
cli
and
rcl
shll
sahf
sub
addb
test
pop
inc
loopne
sti
add
punpcklbw
std
push
pop
push
xchg
pop
ljmp
pop
and
fsubr
shlb
mov
xchg
sub
or
hlt
in
mov
xorl
xchg
sub
mov
pop
mov
ror
or
aas
xlat
cmp
dec
cmpb
gs
sub
pushf
gs
stc
cmc
dec
pop
add
jbe
nop
cmp
sbb
es
push
arpl
hlt
jge
add
pop
xlat
mov
fistpll
frstor
push
add
lret
xlat
inc
push
mov
push
ljmp
popa
inc
js
enter
inc
jg
adc
aas
push
push
mov
icebp
cmp
test
mov
push
stc
das
loope
aam
icebp
sub
ficompl
ljmp
push
mov
cmpsb
xchg
repnz
xor
lods
cwtl
mov
xor
pop
push
test
sbb
mov
sarl
mov
xchg
inc
xchg
out
test
sbb
es
mov
push
loope
movsl
jo
xor
push
scas
loop
or
test
cmc
loope
stc
aas
xchg
or
mov
add
pop
xor
dec
std
inc
addr16
mov
outsb
mov
or
sti
aas
aam
mov
push
mov
into
adc
fstpt
xchg
cwtl
inc
cs
dec
mov
xor
push
pop
lock
dec
pop
in
push
xchg
leave
test
repz
loopne
jmp
add
dec
pop
mov
or
mov
dec
mov
shr
fcom
notb
dec
jecxz
add
pop
adc
pop
test
push
jle
sub
fwait
clc
cmp
adc
and
push
push
loop
lahf
xchg
in
mov
cltd
xor
imul
sbb
clc
cmpb
sub
pop
mov
flds
pop
inc
nop
jmp
orl
notb
mov
sub
inc
test
sub
sub
or
and
aad
lods
jmp
xchg
dec
popa
in
inc
repnz
jecxz
lcall
cmp
xchg
mov
insb
incb
les
xchg
push
sbb
add
add
push
sbb
insl
cmp
xchg
xor
lahf
and
fcomps
cmpsl
mov
pop
mov
movsl
and
sbb
push
cld
loop
and
imul
jle
mov
sahf
or
or
or
bound
cli
cwtl
add
adc
sbb
fsts
cltd
std
in
xor
shll
push
test
push
add
fstp
loope
cwtl
adc
fdivrp
sbb
push
cli
imul
in
hlt
aaa
out
jnp
fwait
into
lret
jne
lods
sti
mov
pop
sbb
cmp
movsb
pop
mov
mov
in
shrb
mov
insb
add
jb
roll
or
imul
and
inc
jmp
add
pop
sub
leave
fsubl
js
shrb
mov
mov
inc
mov
and
stos
mov
mov
sub
push
cmp
lods
loopne
mov
mov
dec
mov
aaa
xor
cmpsl
and
loopne
icebp
fsubl
repnz
sahf
jnp
jno
add
xor
push
lods
cli
pop
cwtl
or
jecxz
push
out
add
xor
stc
lea
daa
push
push
insl
adc
xchg
sahf
repnz
pop
arpl
and
mov
in
xchg
mov
xchg
sbbb
cmp
cmpsb
inc
andl
rcll
mov
orl
cmp
fidivrl
lods
sbb
in
cwtl
int3
xor
sub
mov
into
dec
in
insl
jp
fidivl
mov
shrb
mov
paddusb
aas
jg
cld
pop
jg
test
sub
ljmp
pop
out
jmp
jns
lcall
mov
jae
in
add
mov
jl
hlt
jnp
mov
sbb
orb
aaa
std
int
data16
test
push
mov
inc
mov
out
jmp
cmp
dec
jo
cs
sub
iret
xor
adc
adc
sbb
test
stc
and
es
scas
les
sub
aam
sub
mov
cmp
jne
jmp
xchg
rep
rorb
push
cli
mov
adc
xchg
jb
sbb
vshufps
lock
scas
rcrl
push
add
rcll
mov
or
fists
jp
repz
pop
sub
ds
mov
rcl
idiv
jg
fnstcw
loopne
mov
jmp
insl
cmp
inc
std
pop
repz
pop
and
adc
nop
push
insl
lds
mov
push
xchg
int3
pop
aad
das
les
mov
inc
push
mov
outsl
jae
repz
push
xchg
roll
and
push
shlb
cltd
push
push
lds
icebp
mov
jno
lcall
aaa
xchg
push
xchg
les
je
mov
shr
aam
lcall
jno
cmp
out
and
scas
mov
ja
xchg
repnz
fisubrs
xchg
test
adcb
cwtl
cltd
mov
lret
xchg
sbb
gs
jge
or
addr16
push
in
mov
int3
pushf
inc
int3
sub
xchg
adcb
pop
movsl
call
lock
or
cmp
mov
inc
mov
pop
not
shrl
adc
add
and
arpl
imul
sbb
decl
jecxz
sub
test
dec
clc
sbb
iret
std
pop
lods
fdivs
pop
stc
test
mov
push
cmp
hlt
push
dec
test
ljmp
lods
cmp
push
push
fdivp
insl
popf
aas
ds
adc
ljmp
rorl
std
inc
gs
out
jo
and
scas
jle
inc
in
adc
xchg
ret
mov
mov
insl
cmc
jno
xor
outsb
add
xchg
nop
sti
push
in
sbb
mov
xchg
xchg
push
pop
stos
push
cmp
pop
jnp
fnstsw
clc
and
xchg
fcomp
les
test
jae
cltd
xor
or
test
shlb
lcall
loop
movsb
mov
xchg
das
je
cmpsb
in
mov
in
cs
mov
cmp
lea
cld
xor
dec
shl
lcall
mov
and
jl
arpl
jne
jmp
iret
mov
out
scas
push
test
icebp
clc
fmulp
push
loopne
ljmp
jmp
push
dec
imul
mov
jno
jno
mov
mov
inc
ljmp
sub
jno
mov
mov
pop
les
adc
jbe
movsb
sub
pusha
xchg
stos
jb
lods
enter
fsubrl
xor
jg
jb
imul
cmp
out
shrb
mov
pop
rcrb
fisubrl
popl
xlat
negl
sbb
mov
sbb
fmul
or
and
push
mov
mov
imul
test
xlat
pop
xor
mov
xchg
mov
or
ljmp
lds
push
js
and
sub
jecxz
push
jae
mov
sub
pop
pop
inc
xchg
cmpb
cmp
sar
mov
xchg
call
lahf
fldl
pop
cmc
testb
movsb
insb
lods
movsb
dec
mov
push
sub
xchg
pop
jne
mov
jnp
loope
jbe
out
lret
sbb
fcmovu
mov
sti
xchg
mov
pand
push
imul
adcl
sub
jle
and
mov
add
sub
sub
in
sub
int3
mov
lock
cld
pop
outsb
add
mov
imul
adc
ja
rclb
cmpsb
scas
test
xor
std
aaa
pusha
stc
test
xchg
fwait
cmc
mov
cmc
or
mov
lods
adc
inc
push
jge
testl
xor
call
mov
xor
jl
push
rolb
dec
hlt
mov
fwait
mov
pushf
fisubrs
add
insb
mov
fs
dec
sub
popa
dec
push
mov
push
pop
pop
xchg
mov
dec
fsubl
mov
insl
xchg
xchg
mov
push
or
push
mulb
or
xchg
xor
mov
in
inc
inc
lock
push
sub
das
stos
mov
sub
sub
into
pop
xor
lahf
repnz
cmc
add
mov
dec
stos
pop
mov
imul
outsb
cltd
lds
push
test
outsl
aad
cmpb
rolb
cmp
iret
jecxz
rcll
mov
out
loop
xor
ret
mov
fstps
mov
jl
add
movsl
xor
adc
or
mov
or
mov
int
in
jne
sub
inc
test
push
icebp
ret
imul
inc
mov
arpl
imull
xchg
insb
add
mov
fs
sahf
dec
xor
es
imul
mov
les
and
mov
ljmp
push
test
jnp
xlat
call
add
inc
xor
cltd
loop
pop
mov
adc
xor
mov
gs
push
xor
sbb
mov
xorl
fidivrl
jg
out
and
mov
test
fldt
xor
sahf
mov
mov
add
mov
out
fcmovnbe
je
insl
cmp
aad
xchg
cmpsb
outsb
leave
mov
and
fadds
xor
mov
shrl
pop
fistpl
pop
mov
jo
and
ljmp
mov
cmpsb
pop
lahf
push
inc
xlat
dec
xchg
mov
mov
mov
int
xlat
roll
mov
jmp
mov
push
push
jno
push
sub
imul
mov
sbb
int3
sub
cmp
or
sbb
insb
lea
lods
pop
pop
lods
dec
mov
sbb
int3
sub
cmp
or
sbb
insb
lea
lods
pop
pop
lods
dec
mov
sbb
int3
sub
cmp
or
sbb
insb
lea
lods
pop
pop
lods
dec
mov
sbb
int3
sub
xchg
push
or
imul
add
mov
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jnp
imul
xor
push
mov
jns
fisttpl
dec
mov
or
jmp
cmp
or
fstpt
dec
mov
sbb
jmp
cmp
or
stos
sub
dec
mov
dec
loop
psubw
sbbb
inc
xor
jl
lock
orb
shl
pop
int3
pop
shlb
adc
xchg
movsb
xchg
test
push
mov
cmp
sub
adc
add
andw
jl
sbb
inc
test
add
xchg
lods
outsb
out
stc
test
inc
cld
test
mov
out
or
dec
jmp
push
cltd
aam
inc
rorl
or
xchg
cmp
stos
arpl
out
or
es
les
orb
sbb
dec
jmp
sub
notb
add
andl
mov
dec
mov
pop
pop
out
sbb
leave
dec
sarl
mov
or
fildl
push
mov
sbb
jmp
pop
out
inc
je
in
adc
es
sbb
fs
test
pusha
fwait
pop
std
dec
in
add
dec
dec
into
inc
bnd
insb
sbb
imul
sub
sti
jns
imul
cmp
or
imul
cmp
or
fistpl
dec
mov
sbb
outsb
xabort
test
int3
dec
and
cmp
in
cmpsb
inc
xchg
inc
lcall
loop
pop
sbb
xor
jp
fadd
add
cmpb
movsb
cmp
pusha
jb
mov
lea
pop
addr16
insl
jnp
push
xchg
int
call
clc
cmp
add
call
mov
and
sub
jl
mov
push
ja
daa
mov
pop
lahf
dec
inc
stos
jb
cmp
xchg
aas
clc
mov
aad
mov
orl
std
fisubrl
outsb
fnstcw
pop
sub
pop
xor
cmp
cmp
cld
dec
outsb
pop
ret
scas
cmpsl
push
int
cld
das
testb
cmp
cmp
lods
arpl
mov
xchg
xchg
push
jns
add
stc
xor
or
mov
popf
mov
add
dec
add
sub
and
dec
sub
dec
repnz
pop
push
push
rclb
push
lods
jae
sub
lods
outsl
push
sbb
sbb
jnp
hlt
mov
xchg
inc
mov
mov
gs
in
xchg
jecxz
imul
lret
and
mov
xrelease
jecxz
shll
sub
sbb
popa
arpl
inc
les
push
xor
xchg
call
or
ds
xor
pop
and
pushf
inc
dec
fs
mov
shll
ret
pop
cltd
hlt
cli
pop
pushf
pop
cmp
fildl
push
sbb
jno
lds
shll
and
lcall
fisubrs
ffreep
push
xor
xor
pop
pop
jmp
loop
fisubs
mov
pop
imul
inc
stc
in
mov
push
fnsave
jmp
aad
adc
mov
gs
das
in
je
sub
test
aad
pop
cs
in
lods
pop
mov
cmpsl
mov
mov
mov
mov
xlat
mov
sbb
or
jns
loop
inc
xchg
xchg
pushf
pop
mov
mov
cmp
mov
insb
xchg
sub
mov
psllw
cmp
mov
mov
pop
popaw
les
es
pop
jg
clc
cmp
js
pop
jmp
mov
test
dec
or
adc
mov
into
jecxz
mov
jecxz
fnstsw
adc
or
mov
mov
cwtl
pusha
xchg
pop
lcall
mov
cmp
mov
jmp
dec
cmpb
push
xchg
iret
pop
cwtl
call
jg
rcr
sub
adc
jns
iret
cmpsb
les
mov
cmc
jmp
hlt
imul
je,pt
inc
outsl
pop
xchg
es
push
stc
inc
stc
pop
push
add
add
out
into
ljmp
pop
cs
pop
adc
leave
jb
std
xor
shr
pop
add
mov
jo
scas
pop
mov
jne
mov
cmp
mov
push
sub
addr16
jbe
add
fisttpll
and
xor
and
mov
push
sbb
stc
xchg
push
pop
cmp
into
stc
inc
mov
dec
sub
clc
pushf
inc
sbb
lock
cmpsb
dec
jp
pop
dec
inc
push
pusha
push
jo
pop
dec
cld
rolb
icebp
int3
leave
xchg
mov
popa
les
mov
pop
insb
xor
mov
cli
ds
imul
xchg
xor
cmp
pop
inc
sahf
pop
fs
out
xchg
mov
fs
xor
mov
popf
movl
and
xchg
jne
pop
loopne
push
ret
in
subl
stc
fisubrs
mov
and
cmp
adc
or
xor
in
pushf
addl
xor
scas
fs
sbb
pop
mov
stc
mov
pop
icebp
mov
mov
push
ljmp
pop
lcall
imul
les
push
xlat
or
outsl
pop
xchg
rcl
das
imul
xchg
dec
cs
inc
push
cmpsl
bound
aad
xor
xlat
js
rorl
out
mov
jae
add
cli
adc
mov
mov
lret
add
out
std
mov
push
xor
mov
or
lcall
dec
pop
sbbl
outsl
or
gs
subl
inc
lahf
lods
xor
js
lds
mov
jp
into
xor
mov
lcall
mov
pop
mov
movb
sbb
add
je
pop
inc
es
jg
shll
mov
std
cli
add
dec
mov
dec
data16
arpl
lds
inc
rcrl
xchg
pop
pop
in
flds
sub
int
mov
mov
sbb
insw
call
lods
jne
imul
or
push
test
dec
stc
adcl
les
mov
movsb
test
jp
inc
leave
or
roll
jbe
aam
mov
sbb
jg
adc
lret
jg
mov
jo
cs
xchg
scas
daa
mov
jne
inc
mov
movsb
cmpsb
loopne
out
mov
js
mov
sub
les
std
stos
data16
lods
mov
nop
iret
mov
push
not
out
pushf
sub
mov
mov
and
ja
push
enter
fs
imul
je
xchg
xchg
and
cmp
add
add
mov
adc
mov
pop
fwait
cmp
xbegin
int3
sbb
sbb
pop
dec
pop
and
adc
push
push
movzbl
sbb
pop
mov
mov
scas
dec
addb
or
and
mov
jno
dec
fstps
pop
jl
popf
daa
xor
jecxz
in
enter
out
jo
sbb
cmp
test
pop
out
xchg
ret
mov
adc
sbbb
fisubrs
mov
dec
fldpi
mov
xor
jl
jno
push
push
sbb
cmp
jnp
outsb
out
nop
clc
dec
pop
dec
test
pop
mov
icebp
sbb
outsl
and
lret
jl
jp
cmp
jnp
jnp
into
pop
into
mov
xor
pop
or
test
dec
sbb
fsts
mov
mov
add
pusha
xor
jae
add
xor
xor
je
shl
and
mov
movsl
rorl
addr16
or
ljmp
add
inc
lods
stos
mov
and
lea
mov
push
jnp
pop
mov
imul
addb
xor
nop
imul
nop
js
addr16
mov
sub
movsb
outsb
or
fdivp
mov
inc
mov
and
pop
lahf
popf
lds
outsl
add
xchg
into
add
jae
hlt
movsl
sbb
cmpsb
ret
test
mov
std
push
jns
int3
adc
sub
cltd
inc
mov
cwtl
out
or
int
cmpsl
ud2
xchg
rolb
add
mov
inc
sub
inc
jg
mov
mov
ret
mov
mov
call
push
push
mov
dec
inc
roll
mov
dec
pop
mov
jno
imul
lea
and
jecxz
outsl
fld
mov
xchg
cwtl
data16
mov
jb
mov
xchg
mov
cmp
or
add
cltd
outsb
sbb
pop
xor
fsubp
pop
cmpsb
loop
jmp
cmpsl
mov
push
das
mov
int3
xlat
data16
lock
fcmovb
jbe
pop
jnp
into
or
ficomps
mov
stos
xlat
inc
mov
xchg
sbb
data16
cs
jmp
jl
ja
hlt
push
mov
imul
enter
sub
lds
lds
xor
bound
and
adc
loope
cmpsl
cmp
mov
sbb
movups
cmp
sbb
sti
dec
cwtl
iret
xchg
lds
add
and
cmpsb
repz
push
xchg
mov
shr
jl
leave
cld
insb
les
test
lcall
sbb
inc
fnsave
mov
pop
inc
jmp
rorb
fistpll
adcl
icebp
pop
cltd
push
xchg
mov
dec
imul
pushf
or
add
add
fsubrp
int
push
rcll
ljmp
mov
cmp
ror
xor
adcb
add
data16
xchg
cli
popa
setp
fsubrs
jge
pop
lret
and
cld
mov
imul
add
or
and
orl
push
xor
sahf
cmp
mov
xor
pop
xlat
daa
insb
and
add
fldcw
aaa
ja
notl
in
push
cs
js
cmp
mov
push
negl
movsl
jg
insl
add
jo
mov
jnp
xchg
and
fisttps
xchg
xor
popa
in
mov
fisubrl
mov
xchg
nop
nop
push
mov
and
in
aaa
ret
int
lahf
into
push
imul
repnz
outsl
push
and
push
dec
mov
mov
inc
adc
cmp
add
icebp
pop
out
dec
stos
and
inc
movsl
in
aaa
adc
addr16
imul
scas
lods
rolb
and
in
mov
repz
push
xchg
sub
stc
cmp
push
xor
popf
into
js
cs
sbb
adc
inc
mov
addb
in
sub
gs
cmp
rclb
sub
out
and
xchg
into
ss
dec
loopne
scas
in
fbstp
and
pop
iret
xchg
aas
out
add
push
or
sbb
pop
sbb
loop
jg
xchg
in
cmp
call
pop
adc
adc
or
out
icebp
ror
dec
add
cmp
fsubrl
cmpsb
arpl
add
push
mov
aam
in
xchg
or
adc
adc
xchg
mov
sub
or
inc
imul
and
lods
xchg
fwait
test
jo
jmp
jmp
fbld
cmp
xchg
jge
adc
dec
pop
pop
sahf
sbb
mov
lahf
clc
dec
xchg
pop
lods
xchg
fstpt
fisttpl
test
in
cmp
ret
les
mov
xchg
sub
movsl
xor
repz
and
jmp
push
mov
sub
add
add
je
and
mov
cld
sbb
cwtl
nop
push
data16
mov
outsb
pop
aad
ljmp
loope
fwait
and
fbld
inc
std
pop
loope
push
cmpsl
mov
mov
cwtl
xchg
mov
jns
shlb
and
adc
rorb
jg
pop
sar
fsubl
adc
sysenter
mov
jae
add
add
sahf
leave
rcr
mov
call
aam
mov
pop
div
mov
mov
das
mov
sbb
rolb
cmp
mov
bound
fadds
addr16
xchg
cli
cmp
daa
loopne
or
or
cmpsb
ret
cs
cmp
pop
stc
nop
les
aaa
test
jnp
dec
add
mov
mov
sbb
dec
or
inc
andl
divl
imul
les
aam
rcr
xchg
and
cwtl
dec
call
rcll
daa
nop
or
mov
test
sub
push
leave
adcb
repz
test
shrb
push
xorb
xor
ja
lea
sub
sbb
movsb
stos
lahf
xchg
xchg
cmp
ficoml
mov
notb
loopne
or
mov
lret
scas
das
repnz
rclb
and
push
fs
aas
fimuls
stos
out
dec
xchg
push
or
push
das
test
dec
sbb
dec
mov
xor
add
pushf
jmp
decl
aas
jns
pop
or
enter
out
add
imul
xor
push
mov
sub
adc
sbb
es
pop
out
mov
shlb
into
push
lcall
inc
xchg
popf
clc
xor
arpl
pop
call
ret
push
dec
addr16
jo
inc
lods
add
dec
fdivrl
repz
mov
cmp
test
jne
js
imul
in
cmp
push
in
sbb
sub
pop
lods
push
xor
push
dec
push
sbb
fstps
mov
outsl
cs
sbb
pop
sub
cmp
idivb
push
popa
sahf
out
fcomps
jmp
sub
mov
dec
inc
pop
int
jb
jae
pop
nop
mov
lods
pop
bound
aas
lock
sbb
mov
fcmovb
in
insb
sub
xchg
add
mov
jne
push
push
and
or
and
in
xor
inc
jecxz
cltd
cmpsl
mov
sub
pushf
mov
mov
frstor
lahf
and
xchg
repnz
data16
cltd
cmp
pop
incb
daa
mov
outsb
jnp
dec
ficoml
icebp
dec
pop
es
pop
stos
add
mov
dec
mov
jg
jecxz
das
movsl
jle
cmp
jnp
imul
mov
jle
xor
out
aas
mov
lcall
rcrb
and
subl
push
add
push
fnstsw
xor
out
sti
mov
pop
loopne
mov
jl
cli
jnp
xchg
shrb
das
sub
mov
ljmp
inc
mov
xchg
in
or
jno
or
add
mov
sti
cli
rcll
inc
sti
popf
ret
btr
push
add
shrb
adc
int3
jb
xor
mov
push
iret
adc
repz
xchg
pop
addr16
ret
movb
ret
rcrl
push
rcrb
cwtl
cmp
jbe
xor
inc
mov
pop
addr16
sbb
mov
push
imul
repnz
lods
pusha
ljmp
shll
inc
adcb
push
inc
lds
into
das
std
mov
mov
mov
sar
jecxz
test
dec
mov
mov
jne
sbb
pushf
int3
push
aam
push
jmp
push
sbb
scas
push
pop
cs
mov
sbb
adc
mov
mov
icebp
pushl
cld
sbb
mov
push
je
inc
fmuls
xchg
jecxz
loop
or
outsb
push
xchg
fstpl
xchg
pop
pop
lret
pop
fdivrs
xor
pop
ret
test
lahf
pushf
cmc
mov
push
addr16
orb
sti
sarl
movsl
add
ds
mov
and
push
ret
cld
jnp
js
popa
js
xchg
adc
xor
dec
or
mov
repz
and
sub
dec
push
xor
in
mov
xor
jle
xor
daa
mov
push
sub
add
fistps
or
imul
dec
push
call
ret
xchg
loopne
outsl
adc
cmpsb
nop
into
pusha
fcoms
sarb
cmp
decb
arpl
in
inc
ficoms
pop
push
ss
movsb
pop
adc
jmp
or
sbb
movsb
push
push
clc
lret
in
outsb
pop
loop
ljmp
inc
jmp
aaa
loopnew
repnz
movsl
dec
push
mov
sbbb
add
test
mov
lahf
jg
fldenv
or
jne
lret
fcmovnu
push
and
sub
jmp
push
adc
loop
xor
mov
stos
mov
or
aas
dec
shlb
cli
inc
push
xor
sti
rcl
pop
fldl
xor
pop
mov
jp
jg
insb
xor
sahf
lds
jbe
stos
pop
push
shll
mov
add
lcall
fs
das
jo
mov
push
mov
and
in
inc
dec
sbb
xchg
and
ljmp
in
sbb
movsl
xlat
icebp
and
mov
inc
and
add
jg
dec
push
add
jb
cmp
lods
popa
jnp
jo
fstl
mov
push
pop
xor
push
add
loop
adc
data16
loope
sub
lds
bound
jae
push
les
xorl
clc
mov
xor
scas
loope
sti
out
loop
out
andl
mov
pushf
fimuls
pop
lods
in
pop
xchg
mov
or
and
mov
mov
cld
roll
sbb
mov
jle
add
enter
in
lahf
dec
test
xorl
push
clc
fisubs
ds
push
xchg
jecxz
std
push
mov
into
jns
adc
lock
mov
fadd
mov
addr16
nop
bound
fldenv
enter
outsb
dec
adc
es
mov
sub
inc
mov
and
in
or
test
mov
inc
loop
ret
daa
decb
test
dec
loop
loope
jl
push
dec
jae
sub
adc
sbb
xchg
adc
pop
jecxz
cmp
xor
es
cs
repnz
mov
es
addr16
or
ss
arpl
cmc
mov
xchg
fdiv
xchg
movsl
ljmp
pop
enter
push
push
sub
int3
add
push
xor
dec
inc
addl
fistl
sbb
xchg
jns
dec
jb
jae
int3
lret
adc
add
vmovdqu
xchg
lcall
mov
in
out
and
test
repz
push
call
add
push
and
xchg
mov
test
pop
adc
aad
dec
scas
dec
adc
add
adc
or
popf
int
mov
arpl
inc
and
mov
das
mov
stos
xchg
jmp
repz
cld
cmc
fisubrs
pop
loop
or
xchg
ficoms
imul
inc
push
fnstsw
pop
rcr
lret
jl
popf
pushw
sarl
out
and
insl
or
scas
inc
lret
popa
adc
ja
pop
mov
or
sbb
xchg
add
jle
mov
pop
jne
andl
arpl
js
ds
ds
andl
sub
imul
test
adc
sbb
sub
faddl
push
in
outsl
repz
sbb
push
cld
ja
sbb
jae
aad
testb
inc
cs
mov
add
sahf
das
pop
mov
cmp
inc
add
pop
ss
shll
xchg
sub
cld
xchg
jge
push
inc
cmp
or
inc
div
rol
fimuls
sti
cmp
stos
ds
mov
loop
cmp
push
aam
or
xchg
push
jo
lret
pop
jb
inc
push
dec
loope
aaa
add
xor
lret
call
cmc
xchg
packuswb
jle
nop
imul
or
lahf
cmc
jge
mov
mov
jmp
leave
pop
or
lahf
test
sbb
jp
shll
sbb
mov
fcomps
bswap
out
pusha
jne
xlat
loopne
mov
push
loop
and
fsubp
xor
cmc
mov
test
lret
adc
pop
jecxz
pop
xor
insb
xorb
movsl
xchg
add
xchg
jge
inc
pop
test
in
popf
adc
inc
scas
ret
jns
adc
ja
sbb
cmp
and
dec
ljmp
push
add
lock
call
adc
into
or
dec
xor
lcall
mov
pop
push
dec
jg
nop
adc
add
xor
pop
loop
cld
mov
inc
push
pop
push
pop
mov
popa
xchg
xor
sbb
daa
mov
mov
push
or
dec
and
in
outsl
js
xlat
xchg
mov
sub
xchg
inc
cmp
sbb
out
adcl
nop
mov
push
adc
jmp
jl
mov
fsubs
cmp
rcll
adc
cwtl
inc
and
jp
add
aaa
mov
adc
int
outsb
jg
mov
inc
add
int3
sub
lcall
mov
cli
lods
fmuls
inc
cmp
lods
repnz
nop
scas
push
fbstp
jnp
jae
negb
andb
bnd
pop
nop
out
mov
jno
jle
iret
or
fisubs
lods
pop
mov
in
mov
push
fnclex
pop
jle
jecxz
sahf
add
shl
push
daa
and
or
mov
and
adc
notl
or
cmovl
mov
test
imull
cmpl
mov
push
aas
nop
shll
mov
xor
dec
shl
out
inc
push
iret
not
jl
jg
popa
xchg
sub
mov
daa
stos
dec
push
fcoml
mov
dec
lock
adc
and
test
fs
leave
cmp
or
fistpl
dec
mov
sbb
jmp
cmp
or
fistpl
dec
mov
sbb
jmp
cmp
or
fistpl
dec
mov
sbb
jmp
cmp
mov
jno
lret
ds
mov
arpl
jae
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xor
and
adc
add
mov
mov
mov
movsl
sub
in
aam
les
mov
add
je
fs
mov
movsb
sub
in
aam
les
mov
add
je
fs
mov
xchg
test
hlt
sub
dec
imul
fs
fstpt
sbb
jg
mov
rol
cmpl
ja
add
aam
rorb
dec
imul
or
mov
dec
mov
lods
sub
adc
in
scas
adc
fistps
dec
mov
lock
xchg
sbb
cltd
pop
mov
les
inc
and
jle
add
push
stc
jno
shll
inc
cwtl
cmp
and
or
movsb
cmp
icebp
imul
dec
sti
jne
clc
fs
xlat
daa
add
adc
stc
cmp
pop
lds
leave
cmp
std
mov
xchg
jmp
adc
push
cmp
lods
or
inc
dec
clc
mov
add
je
fs
mov
movsb
sub
in
aam
les
jne
push
jnp
fisubrs
je
push
test
mov
roll
cld
data16
adc
subb
cwtl
push
sub
push
enter
inc
xchg
dec
test
mov
mov
call
push
call
mov
movsb
sub
in
aam
les
mov
add
je
fs
mov
movsb
sub
in
aam
les
mov
sub
cmp
mov
ret
and
dec
jo
xchg
cmp
iret
sub
adc
imul
dec
mov
xor
pop
push
mov
xchg
mov
stos
fistpl
inc
push
leave
das
rolb
xor
pop
pop
es
sub
mov
mulb
jbe
pop
xchg
jbe
dec
imul
test
in
and
lods
or
imul
jge
mov
icebp
adcl
or
clc
xor
ss
lods
es
insl
pop
adc
sahf
mov
mov
test
aas
xchg
mov
lods
cmpsb
nop
cld
loope
jno
inc
inc
sbb
push
daa
mov
sub
xchg
hlt
xor
das
push
mov
loope
lahf
mov
push
ds
rol
dec
pop
int
pop
xchg
cld
test
movsb
test
mov
sti
insl
ret
cmp
and
out
cli
jo
inc
and
je
ds
loope
mov
mov
inc
xor
fisubs
insl
sar
mov
test
or
pop
imul
lahf
inc
sahf
fwait
jmp
ds
push
mov
push
lods
fucomi
sbb
jmp
push
aad
mov
mov
mov
inc
pop
xchg
sub
sbb
pushf
incl
push
mov
leave
aaa
fstpl
lcall
xchg
xchg
or
mov
or
mov
jb
mov
scas
cli
or
mov
mull
js
inc
lea
ret
jno
cmp
sub
movb
data16
xchg
insb
push
push
push
jns
stos
jae
pop
mov
std
inc
daa
es
test
dec
cltd
pop
sbb
sub
pop
pop
pmaxub
in
cld
push
jne
loop
mov
rclb
or
jmp
in
into
fidivl
cli
and
push
gs
dec
mov
mov
aad
xor
in
xchg
dec
jl
shlb
jne
dec
lret
push
sbb
movsb
imul
out
push
mov
xor
push
fdivrl
mov
dec
daa
sahf
pop
push
jno
popl
xchg
mov
cld
int3
adc
jle
adc
jmp
repnz
cli
in
inc
nop
fdiv
shr
cmp
xchg
stos
cld
fmulp
in
fdivrs
inc
lea
mov
arpl
cwtl
js
mov
and
xlat
mov
adc
js
dec
pop
mov
idivl
loope
mov
push
pop
repz
lock
mov
cmp
push
mov
mov
mov
sub
cwtl
mov
mov
cwtl
mov
dec
jg
in
pop
mov
xchg
cmpsl
cmp
icebp
int3
test
xchg
repnz
mov
sub
sub
mov
push
push
into
pop
mov
cmp
cltd
mov
insb
add
add
cmp
imul
lock
movsl
pop
mov
orb
jp
cmp
add
scas
xor
das
cmc
mov
loop
xor
push
xchg
mov
sub
dec
sbb
cli
xor
pop
xor
sarl
stos
adc
inc
jecxz
daa
cmp
push
dec
dec
mov
or
lahf
lcall
push
pop
mov
mov
mov
dec
pop
ja
lret
mov
xchg
fistps
not
repz
jp
dec
sbb
mov
fwait
pop
mov
xor
jmp
scas
out
data16
jne
loop
cmp
push
xchg
scas
mov
arpl
adc
loopne
pop
cmp
sub
jp
add
cltd
adc
xor
test
or
aas
push
lret
addr16
dec
insl
jmp
arpl
jge
adc
jb
es
fists
bound
in
out
iret
sar
pop
or
push
das
adc
cs
jg
fwait
push
mov
repz
mov
xchg
jmp
sbb
ret
jge
add
and
or
cmp
stos
add
arpl
mov
pop
sbb
cmpsb
fimuls
inc
or
cld
sahf
push
sbbb
jo
popa
fimuls
int
add
test
and
inc
fsubrs
sub
sub
pop
notl
aad
jmp
nop
outsl
jmp
jge
push
sub
inc
mov
mov
mov
sbb
lcall
push
call
pop
mov
adc
sbb
test
pop
clc
or
dec
addr16
or
xchg
jns
aam
mov
xlat
lods
cltd
adc
pop
mov
xchg
fistpll
xor
cltd
xchg
mov
insb
xor
or
scas
xchg
pop
das
in
mov
out
cmpl
sbb
jbe
sarl
sbb
sbb
rcll
or
sbb
sub
or
adc
imul
out
and
and
dec
dec
xor
push
movb
mov
pop
inc
insl
jl
xchg
sti
stos
mov
adc
fs
cmp
repz
sbb
fnstenv
subl
bts
jle
jge
mov
inc
in
lcall
popa
sarb
dec
inc
insb
sub
mov
mov
imul
loop
sbb
icebp
loope
in
inc
clc
in
enter
fistpll
imul
movsl
pop
std
cmp
stos
pusha
in
and
cmp
cmp
ficomps
dec
or
dec
mov
lret
push
js
popf
in
into
repz
push
imul
hlt
sbb
push
cltd
jg
in
cmc
sub
out
inc
lcall
xchg
not
and
jbe
mov
cli
cmp
adc
pop
pushw
ja
cmpsb
in
popa
xor
addr16
test
aam
xchg
pop
inc
cmp
call
pop
lahf
clc
dec
stos
call
add
add
js
cltd
int3
ss
xor
sbb
test
xlat
jecxz
test
jno
insl
pusha
loope
cmc
mov
gs
int3
xor
mov
addl
out
lods
idivb
inc
inc
adc
ret
pop
xchg
mov
lods
dec
inc
fxtract
lods
outsb
in
pop
adc
sbb
xchg
sbb
adc
cs
movsl
cmp
mov
inc
xorl
inc
sbb
test
insl
push
pop
arpl
jae
mov
lahf
js
cmp
pop
pop
pop
fnsave
call
push
jge
stos
sbb
loope
sub
push
into
xchg
das
lods
shll
or
pop
cmpsb
cmp
add
repz
repnz
insl
jl
cltd
pushf
jns
inc
cmc
cmp
rcl
stos
mov
push
dec
mov
sbb
add
inc
subl
sbb
sbb
seta
xchg
xchg
sbb
es
adc
cmp
in
pop
push
pushf
das
outsb
jbe
mov
les
fisubrs
cli
dec
inc
rcll
or
xor
mov
sbb
mov
stos
cs
add
mov
call
cmp
data16
and
stc
xchg
add
jecxz
imul
ret
dec
push
add
iret
mov
rol
insl
sbb
fwait
sub
xchg
sarl
cltd
xchg
jecxz
int3
inc
loopne
dec
ret
inc
imul
fcomps
pop
pop
jge
sub
xlat
leave
push
mov
mov
sbb
clc
mov
mov
ds
add
sbb
call
xchg
and
xchg
insb
loop
jae
mov
push
adc
and
xor
cmp
ret
ret
push
and
loope
jno
sbb
movsb
loopne
js
in
notb
xchg
mov
nop
mov
rcll
mov
or
lods
filds
ret
add
xor
xchg
jno
ds
jg
jmp
pop
or
dec
aad
jp
test
mov
push
xchg
lock
or
outsl
cmpsb
sbb
xchg
jle
shl
or
out
inc
int
in
sbb
rcll
in
sub
mov
pop
lock
jg
int
aas
and
stc
stc
stc
mov
dec
or
and
pop
mov
out
push
sub
adc
push
adc
test
mov
in
gs
and
and
aad
sub
test
lahf
cmp
sub
ds
dec
dec
imul
icebp
fadd
jp
adc
pop
jp
ret
mov
mov
push
mov
int3
push
pop
loop
jno
stos
add
inc
mov
mov
sub
sub
push
clc
push
cld
cmpsb
dec
lret
cltd
mov
scas
in
mov
push
ret
adc
test
sbb
pop
dec
out
out
into
pop
inc
lods
pop
jbe
aaa
aaa
int3
in
or
imul
sub
lea
das
inc
daa
into
sbb
pop
loop
mov
outsl
push
stos
xor
pop
xor
fists
dec
cmpsl
pushf
sar
xchg
fcoms
push
ss
sti
jmp
in
cld
cmp
cs
fidivl
rolb
push
loop
push
popa
adc
je
mov
inc
mov
repnz
bound
mov
dec
scas
mov
nop
or
stc
sub
daa
call
adcl
or
jp,pn
lock
dec
mov
les
std
out
inc
xor
andl
and
cld
adc
insl
sti
xchg
and
ficomps
fidivl
sub
inc
loop,pn
aaa
dec
insb
adcb
mov
shll
clc
sbb
push
aas
ret
rorb
lahf
add
data16
push
push
mov
mov
arpl
dec
jle
mov
xchg
jno
adc
xchg
hlt
inc
dec
pop
jns
mov
lcall
push
call
inc
mov
or
lods
push
push
sarb
addr16
xor
add
mov
lahf
or
dec
sti
xor
shlb
movsl
loop
repz
push
pushf
sbb
xchg
aaa
test
and
sarl
xor
jo
sbb
fidivrs
in
mov
dec
test
testb
cmp
mov
lock
pop
in
outsl
mov
jo
push
inc
fbld
arpl
ljmp
add
or
push
cld
push
ret
adc
xchg
or
loopne
or
repnz
test
movsb
frstor
ja
adc
ds
xchg
sahf
ljmp
xorl
fld
ljmp
cmp
mov
xchg
testb
int
negb
insl
mov
inc
lret
push
imul
cmp
mov
bound
hlt
add
sub
outsb
jp
inc
popf
push
scas
roll
fstpl
mov
fimuls
cld
inc
je,pn
sar
xor
and
inc
mov
dec
dec
xor
sub
mov
add
arpl
inc
popf
fcomps
rcl
adc
push
mov
movsl
ljmp
fs
cld
outsl
out
cli
push
xor
mov
pop
pop
ret
mov
xor
mov
or
test
fisubrs
adc
xchg
addl
xor
cld
outsl
incl
sbb
pop
fistl
int3
jge
add
pop
mov
je
cmpl
mov
pushf
out
icebp
in
mov
sub
and
out
out
and
leave
xor
dec
call
pushf
popl
cmp
popf
outsl
popa
jo
das
xchg
insl
jne
and
pushf
mov
xor
sbb
jbe
leave
and
lret
mov
jmp
mov
ss
fmuls
jae
mov
fdivrl
pusha
ficoms
sbb
fistpll
adc
rorl
movsl
cmp
scas
data16
mov
xor
mov
or
mov
pop
scas
outsl
inc
cmpsl
lods
cltd
inc
jmp
cmp
mov
jmp
add
or
in
xchg
ret
sarl
sbb
aam
xchg
xor
aad
or
iret
sub
push
inc
mov
adc
jmp
loope
std
fstps
mov
stc
std
cli
out
jb
lods
cmc
inc
fsubrl
sbb
loop
pop
cltd
adc
add
pusha
fdivr
ss
jne
loope
sub
fiaddl
popa
cltd
cltd
jmp
test
and
mov
sarb
outsb
and
fstps
gs
mov
icebp
cmc
test
push
jge
js
inc
cwtl
inc
xor
xchg
jp
mov
pushl
xor
cmpsb
rorl
push
loopne
pop
mov
and
mov
orl
das
xlat
jnp
iret
icebp
jecxz
aas
add
sahf
test
pop
divb
adc
daa
leave
idiv
in
or
push
mov
push
pop
shll
cs
lds
adc
in
inc
dec
stc
jno
js
cltd
sbb
cld
fs
jp
addr16
cmpsb
insl
jno
mov
jnp
std
ds
mov
leave
leave
xchg
xor
fs
mov
bound
rorl
mov
or
out
dec
inc
push
ljmp
dec
cli
pop
and
ja
sub
popf
mov
pop
jg
xchg
enter
mov
mov
daa
movsb
adc
stc
push
or
and
cmp
jbe
ss
outsl
cmp
dec
add
in
sbb
test
add
ret
sahf
fdivl
push
push
pop
jo
rorl
es
mov
ret
inc
cmp
aam
mov
jae
in
push
sub
jmp
movsb
and
inc
cmova
cmp
fidivrl
insl
jns
fiaddl
je
movsb
sbb
xchg
pop
mov
rorb
pop
sbb
fiadds
add
cmp
int3
or
push
sarb
mov
xor
lea
inc
add
gs
and
shlb
or
or
shrb
addl
pop
stc
out
clc
add
xor
test
int
mov
rcrb
push
dec
jg
jo
les
xlat
stc
jecxz
jne
fnstenv
pop
jge
addr16
add
fwait
pop
je
hlt
xor
xor
ret
stc
leave
insb
push
push
xor
mov
js
pop
ds
sbb
movsb
loop
xchg
mov
imul
adc
xlat
jg
jae
leave
pmaxsw
out
add
cmpsb
jmp
insl
lds
push
sbb
mov
xchg
push
xor
inc
fisubrl
lret
mov
xor
or
adc
or
xor
push
mov
ja
and
or
cld
testl
jmp
mov
lods
sub
roll
fwait
push
push
ds
aad
les
jle
jge
push
les
imul
or
pop
movsl
call
jo
fistl
mov
xchg
in
sahf
and
mov
test
mov
inc
pop
mov
out
add
pushf
inc
xlat
aaa
mov
push
std
push
cmc
fisttps
imul
fs
mov
jno
imul
repnz
jnp
stos
jmp
dec
adc
les
cmpsl
dec
sbb
xor
icebp
jbe
mov
inc
fldenv
mov
loop
pop
sbb
repz
or
mov
stos
dec
inc
test
mov
pushf
int3
or
xchg
addr16
jmp
pop
test
jbe
jno
fstpl
sbb
sub
orl
loopne
inc
mov
push
mov
mov
mov
inc
push
ss
std
mov
mov
cld
pop
stos
mov
pop
cltd
enter
out
fwait
popa
inc
stos
add
push
ss
dec
sti
aad
inc
jmp
ss
pop
pop
adc
imul
sahf
les
lods
ret
mov
pop
mov
jbe
mov
mov
les
inc
subb
test
push
pinsrw
mov
xchg
negl
popa
add
pop
xlat
sub
jnp
or
sbb
roll
dec
cmpsl
xor
or
sbb
xchg
insl
jecxz
sbb
xor
gs
mov
mov
pusha
jne
pop
fwait
lods
das
bound
and
leave
ret
jmp
mov
cmpsb
xor
mov
mov
adc
aas
sbb
ret
pop
iret
lret
mov
int
xlat
repnz
test
sub
ljmp
pushf
fldl
lods
inc
adc
movsb
jns
imul
mov
pop
test
jg
fnsave
repz
mov
insb
xor
movsl
jp
add
insl
insl
cwtl
jp
iret
xor
jns
mov
outsb
xchg
jg
xor
cmc
mov
push
lock
jle
jns
call
out
cmp
dec
outsb
push
xor
xorb
in
mov
push
jbe
test
xor
into
mov
rcll
outsb
inc
daa
mov
in
xor
mov
outsl
lods
jno
insl
test
sbb
adc
inc
in
in
cli
iret
andl
lea
in
adc
fsubs
out
pop
add
mov
hlt
clc
ss
pop
or
dec
mov
in
push
bound
adc
push
sub
lcall
xchg
jae
jno
add
mov
xor
xor
imull
shlb
adc
mov
jae
jbe
aad
addr16
adc
and
inc
sbb
mov
pop
xor
sbb
popf
movsb
das
int3
insb
clc
and
int
mov
lods
scas
stos
fs
ficoml
push
xlat
addr16
je
pop
sub
int
xor
mov
xor
push
add
pop
adc
fs
push
call
enter
loopne
pop
ret
insb
outsb
pop
addr16
pusha
mov
inc
addl
add
xchg
mov
xchg
push
add
and
pop
loopne
orl
push
adc
or
ss
addr16
rcrl
sbb
cmp
test
pop
in
dec
xchg
lret
cmp
clc
mov
push
insl
dec
inc
jnp
sbb
cmp
or
dec
std
nop
pop
sti
into
shl
test
mov
push
test
push
lcall
nop
jmp
push
pop
add
add
push
or
cwtl
jmp
cmpsb
and
inc
mov
shrl
dec
add
inc
pop
cmp
cltd
sub
jns
mov
pop
je
int
cwtl
or
pop
inc
xchg
mov
or
loope
sub
enter
in
or
repz
ja
lods
das
std
fcomi
jmp
push
inc
lds
inc
xlat
mov
or
gs
sahf
bnd
or
popl
filds
mov
pop
je
insb
cmpb
jns
adc
inc
mov
cmp
clc
loope
mov
loop
mov
es
out
cltd
jg
iret
adc
lods
push
dec
mov
je
outsl
add
out
sahf
sti
nop
cmp
fnstcw
add
ss
dec
sub
jne
cmp
pop
push
js
out
cmp
enter
mov
sbb
testb
icebp
xor
cwtl
insl
outsb
jmp
lahf
inc
mov
enter
loopne
dec
fwait
loopne
dec
lret
int
lock
aad
into
jecxz
add
lea
das
xor
aaa
cltd
xcrypt-ofb
cmpsl
sub
and
gs
pop
mov
and
scas
xchg
xchg
push
mov
addl
mov
mov
fcmove
lret
aaa
fistl
int3
push
cmpsl
cmp
aas
mov
and
test
mov
cmc
cltd
or
xor
mov
jno
mov
and
nop
xor
aad
lock
sub
fwait
mov
xchg
mov
std
dec
dec
sub
mov
inc
imul
test
movsl
mov
adcb
xor
adc
sarl
mov
inc
das
int3
repnz
std
outsl
xor
xor
xchg
sti
repz
push
xchg
cmp
fisttps
pop
jnp
sbbb
cs
push
and
lock
das
ljmp
push
pushf
mov
imul
mov
inc
jmp
ret
arpl
xchg
mov
push
pop
int
or
mov
lret
call
sbb
sbb
inc
pop
push
mov
je
movsl
sti
push
inc
jl
mov
mov
or
sub
push
enter
pop
sub
ret
xchg
push
jle
cmc
movsl
mov
dec
and
jecxz
ss
sbb
cld
insb
andl
cltd
test
cmpsb
pop
push
lods
lahf
xor
add
xchg
test
or
inc
das
pop
push
and
test
adc
pop
cmp
push
fwait
std
ss
and
leave
sbbl
jbe
ljmp
mov
in
or
sahf
xchg
mov
pop
lock
pushf
jmp
or
mov
cwtl
sub
in
pop
mov
test
test
push
push
ret
mov
push
push
dec
lret
fmull
enter
lret
test
cltd
add
je
fs
mov
movsb
sub
in
aam
les
mov
add
je
fs
mov
movsb
sub
in
aam
les
mov
add
hlt
clc
fs
mov
movsb
sub
in
aam
les
mov
add
je
fs
mov
movsb
cmpb
test
lock
xchg
movsb
cmpsl
mov
lock
mov
cs
adc
out
outsl
push
cmp
or
cmp
push
cmp
pop
outsb
mov
mov
cli
inc
lret
lcall
fsubrs
push
jnp
dec
ds
outsb
mov
mov
lods
repz
repnz
int
sub
xor
popa
outsb
pop
inc
or
daa
cmp
xor
sahf
mov
sti
loop
push
inc
stc
loop
rcrl
imulb
mov
push
xor
in
adc
mov
lds
push
pop
ds
pop
sub
jecxz
lahf
mov
andb
sub
in
xchg
jle
dec
loopne
popf
jle
pop
stos
sahf
push
adc
iret
fsubrp
cmpsb
and
push
pop
or
inc
shr
pop
sub
dec
mov
shr
out
sub
test
and
push
pop
stc
sbb
rorb
xchg
dec
pop
mov
xchg
push
cltd
jno
sub
lds
rcrl
stos
pop
push
stos
jle
ljmp
lea
and
outsb
xor
add
jb
mov
jle
add
int3
fisttps
mov
mov
pop
pop
cmp
dec
je
push
xor
cmp
aas
aas
rsm
fstpt
mov
nop
lahf
subb
cmp
pop
outsl
dec
femms
or
cmp
pop
add
out
out
lcall
sub
cmp
or
sbb
push
jp
dec
jle
outsb
stos
sahf
mov
scas
ljmp
out
sub
cmp
or
sbb
push
jp
dec
jle
outsb
stos
sahf
jns
rcrl
in
jne
andb
pop
sub
pop
inc
ljmp
mov
push
imul
xor
es
xchg
push
dec
ss
mov
nop
call
inc
jo
repz
lcall
les
xchg
cmc
lods
sbb
rolb
stos
push
dec
hlt
pop
lds
sbb
cmp
mov
xor
pusha
xor
insb
out
pushf
les
add
push
cmp
insb
dec
pop
pop
pop
mov
and
mov
out
lahf
stc
out
aaa
jns
xchg
scas
mov
and
mov
rcrb
test
mov
les
fildl
mov
mov
push
das
adc
mov
or
jmp
lea
ret
scas
jp
lret
mov
push
mov
pop
dec
jg
loopne
xchg
cmp
mov
xchg
xorl
fisubrs
insb
inc
inc
push
or
or
xor
lahf
mov
mov
adc
mov
loop
int
test
lods
fcmovbe
iret
out
sbb
sbb
jle
aam
jb
xchg
mov
dec
cwtl
mov
inc
fiadds
pop
into
mov
out
jl
std
dec
sub
xor
addr16
add
pop
scas
ljmp
adc
add
adc
lmsw
mov
js
push
jle
or
xor
sahf
daa
das
clc
add
lods
out
mov
out
shll
dec
push
push
shl
mov
mov
jle
and
xor
adc
xor
mov
jecxz
testl
xlat
aam
shl
scas
sub
dec
in
leave
arpl
clc
pop
push
jne
cmp
mov
outsb
adc
xor
arpl
fiadds
mov
xor
fidivl
xlat
add
ret
iret
add
shll
add
gs
adc
mov
imul
pop
test
dec
clc
imul
aam
clc
repnz
cmp
push
movsb
les
mov
aam
mov
push
push
sub
xchg
push
xor
inc
sub
clc
shl
fs
clc
test
ds
xor
or
add
mov
mov
stc
in
sbb
mov
outsb
and
adc
xlat
fildll
mov
add
divl
pop
nop
ss
pop
pop
sub
shl
xor
xadd
sbb
adc
fldcw
or
call
and
out
hlt
xor
push
cs
lock
push
les
mov
out
je
sbb
cli
and
test
sarb
fisubrl
sti
cli
test
mov
xor
pop
pop
mov
outsb
xchg
aad
sbb
stos
xorl
sbb
push
and
jb
mov
div
ret
dec
and
scas
jg
movsb
enter
xchg
add
ljmp
push
jbe
mov
or
lea
add
pop
aam
andl
pop
rcrb
stc
popa
lods
jmp
xchg
xchg
adc
stc
push
insb
sqrtps
loope
xorb
or
mov
cmp
or
sbbb
xor
or
test
pop
ss
filds
subb
aaa
mov
push
pop
ret
sar
and
std
jle
ljmp
sbb
inc
push
pop
jbe
cmp
mov
and
int
fimull
stos
adc
les
les
inc
std
dec
or
cmp
rorl
cwtl
cmp
jns
icebp
std
adc
divb
in
push
iret
fbld
lahf
add
mov
mov
test
scas
stos
fld
loopne
negl
xor
push
xor
sbb
ja
cmp
loopne
mov
mov
jmp
mov
cmc
inc
call
jb
inc
jp
in
dec
push
cli
test
es
iret
inc
mov
je
je
sub
jo
cli
stos
and
xchg
lds
xor
jno
xor
push
add
mov
fisubrl
or
gs
pop
jle
out
std
fnstsw
les
lahf
std
pop
das
xchg
lahf
mov
std
push
adc
sub
movsb
cmp
or
jns
add
sbb
cmc
mov
add
xchg
add
pusha
xchg
add
mov
imul
aam
sti
rcr
insb
inc
xchg
rcrl
popf
fistl
testl
int
aad
and
les
jge
hlt
and
aam
dec
lcall
pop
dec
pusha
inc
mov
lea
fnsave
lods
arpl
cmp
mov
es
flds
xor
inc
mov
inc
cmp
xor
mov
add
xorb
mov
or
jp
fisubl
and
ret
dec
jecxz
lret
or
add
dec
dec
push
fidivrs
inc
pop
les
add
ret
fidivs
lret
push
idivl
push
adc
aam
mov
pop
nop
lds
pop
push
xor
cmp
cltd
daa
or
fstl
in
fwait
ds
test
or
xor
popa
lahf
mov
enter
sbb
cmp
inc
fcompl
cmpl
ljmp
mov
and
mov
mov
sbb
ret
or
mov
inc
cmp
rolb
dec
ljmp
mov
jecxz
js
add
int3
pushf
pop
pop
mov
stos
sbb
dec
lahf
mov
es
pop
arpl
adc
sbb
pop
sub
adcl
dec
and
ss
mov
inc
xchg
imul
sub
aas
icebp
push
mov
fstpt
nop
test
lods
scas
in
mov
dec
sub
stos
test
and
in
insb
adc
aad
repz
jg
push
mov
add
mov
aaa
cmp
lea
sbb
inc
push
out
push
inc
in
stc
movsb
xor
add
ret
pop
popf
xor
push
jge
out
push
mov
das
jmp
test
aad
jl
jbe
xchg
sbb
sub
xlat
or
push
mov
cmp
and
mov
cmp
repnz
in
xchg
cmc
dec
xchg
add
and
leave
imul
mov
sbb
lds
inc
xor
inc
add
das
insl
push
ss
jns
and
mov
pop
cld
mov
loope
jo
or
and
push
add
popa
loop
push
jge
dec
xchg
push
cli
insb
mov
or
and
sbbl
pop
into
mov
scas
dec
mov
and
inc
push
je
stc
mulb
push
icebp
jnp
out
mov
in
fcoml
xchg
mov
mov
hlt
in
shll
sti
push
sbbb
xchg
leave
ja
sbb
fcmove
lock
cmp
cmpsl
pop
rcll
inc
or
mov
aad
mov
call
sub
or
mov
and
lahf
cmp
xchg
pop
fwait
stos
xorl
mov
xor
pop
lret
cwtl
lds
in
mov
aaa
jge
int3
mov
jge
outsl
sbb
popa
fildl
inc
ficoms
insl
adc
ss
push
aad
daa
mov
cmp
aas
insb
repnz
or
pop
xchg
and
notb
mov
mov
adc
fcompl
popf
fldt
outsb
push
ja
mov
mov
push
das
ja
cs
cmp
bound
or
sbb
mov
rorb
push
inc
ja
mov
aaa
divl
sbb
rclb
mov
vaddsd
inc
sbb
cmc
iret
inc
mov
xchg
mov
clc
dec
push
cmpsl
mov
jb
mov
fstl
inc
mov
repz
add
std
loopne
jne
xor
cmp
scas
dec
push
mov
scas
or
xchg
fidivrs
xor
sub
xor
and
out
xchg
mov
add
fsubrp
cli
sbbl
push
inc
lcall
ffree
rcr
mul
fs
out
pop
mov
xor
shr
lahf
lods
cmp
jo
mov
adc
mov
pop
jns
jmp
mov
ds
rorl
cmp
inc
mov
pop
push
mov
mov
hlt
adc
add
sti
rcrl
jo
rorb
mov
xor
mov
xchg
fsts
in
fwait
and
gs
xlat
rcr
lret
sub
cli
lds
xchg
fsub
jno
xor
dec
lret
lods
je
and
sti
fidivs
xchg
test
stc
jp
lods
mov
mov
mov
lds
mov
sbb
adc
mov
pop
or
scas
fnstsw
push
and
dec
pop
jl
cmp
push
pop
mov
pop
std
ds
cmp
cs
dec
mov
push
mov
mov
xchg
je
jnp
outsb
or
mov
in
cmp
cli
jle
es
cmp
cli
cltd
out
jno
std
bound
jns
sub
call
scas
ror
repz
push
xor
lea
xchg
cs
lock
bound
lods
mov
call
jns
test
je,pn
push
mov
addl
hlt
mov
fsubrl
inc
sub
cli
pop
fcoml
and
cli
xchg
pop
or
std
data16
lret
sbb
or
cmp
mov
add
pop
aad
push
pop
mov
fsubl
call
lods
adc
test
lahf
bound
dec
test
leave
sarl
movsb
std
dec
inc
outsl
and
push
mov
dec
test
lahf
or
psllq
cmpsl
fcoml
pop
loopne
aas
add
xor
mov
add
pop
add
mov
aas
push
mov
rorb
jno
xor
sub
fisubrs
mov
in
test
incl
inc
mov
lea
inc
mov
push
mov
sbb
imul
insb
es
mov
cwtl
push
jmp
rorb
lods
mov
outsb
or
icebp
mov
xchg
js
lret
mov
jo
insb
shrb
pushf
fldenv
sbb
xchg
xor
xchg
cmpsb
xchg
sbb
add
push
stos
bound
aad
fisubrs
in
nop
cmp
stos
xchg
lcall
aas
dec
jg
loope
loopne
sbb
jno
in
inc
cmp
faddl
call
add
mov
jne
xchg
adc
int3
cwtl
movsb
adc
jmp
mov
lret
xchg
dec
mov
push
aad
ljmp
inc
sub
pop
sbb
rcr
fdiv
repnz
pusha
xor
mov
rcl
cmp
arpl
jge
jne
sbb
push
mov
test
in
pop
push
push
call
sbb
insb
cmp
inc
mov
inc
jge
rcrb
jecxz
lahf
dec
and
jbe
push
xchg
cltd
lods
js
in
pop
mov
ucomiss
pusha
pop
or
lahf
inc
jle
mov
test
fsubs
xchg
sti
inc
push
out
into
mov
dec
cltd
pop
nop
mov
stc
and
and
push
sub
lret
or
bound
mov
jns
or
loopne
mov
jae
ret
data16
push
dec
mov
add
add
ret
cmp
lods
xacquire
inc
inc
jl
inc
insl
pop
int3
sub
lret
xor
inc
xor
sub
xchg
xchg
jno
lret
test
mov
inc
test
pusha
stc
ret
pop
lea
jle
push
repnz
rol
test
xor
dec
popf
and
pop
inc
outsb
out
or
sbb
cmp
lock
mov
push
es
and
lcall
pop
jecxz
jae
fnstcw
mov
push
jg
jae
inc
lods
ljmp
mov
xchg
clc
test
xchg
mov
push
xor
test
jnp
test
push
inc
or
mov
fidivl
in
cmp
lcall
sub
test
pushl
pop
pop
out
mov
add
and
jno
ja
hlt
lds
xor
pop
inc
insl
testb
scas
cld
cmp
out
inc
mov
or
notl
sti
or
mov
xor
bound
mov
jle
jge
insl
call
pop
fstpt
sub
rcr
dec
jbe
jge
push
cmp
adc
mov
push
stos
lds
sbb
pop
xor
jo
aaa
mov
push
in
or
mov
lock
cli
xchg
push
sub
mov
cmp
sub
daa
mov
es
push
sub
rol
dec
cmp
jbe
aam
inc
pop
int3
sbb
adc
cltd
je
dec
sub
adc
cmp
aas
mov
mov
adc
pop
popf
pop
shl
stos
es
lahf
sub
mov
dec
stos
pop
mov
call
pop
mov
leave
sahf
fidivs
clc
out
outsl
outsl
cmp
mov
pop
pop
shlb
mov
sbb
sbbl
sbb
push
mov
cwtl
in
loopne
gs
inc
sub
jne
mov
mull
ret
inc
sbb
adc
xor
into
or
or
jb
pop
inc
adc
cmp
adc
add
mov
cmpsl
cwtl
imul
loope
inc
dec
add
test
mov
cmc
push
sbb
div
mov
inc
mov
mov
pop
jb
pop
sbb
cmp
jle
imull
fs
fdivl
subl
xor
add
hlt
pop
xchg
jo
jo
scas
test
sti
jg
call
bound
inc
mov
movsb
or
add
loopne
cmp
mov
adc
mov
mov
cmp
repz
mov
test
push
movsl
mov
mov
insl
insl
push
jno
lret
mov
xchg
lds
inc
jmp
mov
out
adc
test
clc
fisubrl
cmovnp
lret
adc
adc
and
jle
hlt
or
lock
sbb
jecxz
icebp
push
ds
pop
cmp
jo
mov
subl
xchg
cmp
and
push
sub
dec
es
loop
rorb
or
xchg
outsl
add
pcmpeqd
test
sbb
dec
add
sbb
dec
fistl
mov
sub
mov
sbb
push
je
cmp
jb
cmp
mov
mov
iret
inc
loop
pop
dec
push
jno
fcomps
xchg
ds
jmp
ret
sub
jae
add
ret
xor
fiadds
ss
xchg
ret
addr16
imul
fildl
add
mov
mov
stos
lret
insb
push
lock
movsl
mov
mov
mov
sub
and
mov
rorl
sbb
sti
stos
cmp
mov
or
scas
mov
pop
push
rclb
sub
or
sub
xchg
scas
mov
lea
jae
mov
mov
out
add
inc
rclb
or
rorb
add
pop
outsl
stos
inc
jno
stos
mov
xchg
xor
ss
scas
xchg
popa
cmp
aad
scas
cltd
push
lds
mov
dec
bound
or
shrb
loopne
out
or
dec
xchg
adc
mov
sbb
clc
daa
and
dec
stc
inc
sub
xor
dec
dec
jbe
fisubs
jne
test
in
mov
add
loopne
jae
or
jge
cmp
mov
mov
test
sarl
and
fwait
push
gs
xchg
and
out
xchg
enter
jge
lock
mov
xchg
mov
js
cmpsl
cmp
sbb
test
out
mov
in
out
in
push
xchg
fcomp
xor
inc
mov
test
clc
adcl
jge
mov
dec
aaa
push
mov
xor
lcall
mov
into
bound
movsl
fdivrl
push
and
or
test
push
lahf
das
popa
cmpl
push
shrb
pop
jns
push
add
and
or
jecxz
test
stc
pop
mov
add
mov
dec
inc
or
pop
daa
sbbl
ljmp
mov
outsb
scas
les
adc
jmp
test
pop
pop
in
xor
or
orb
mov
dec
xchg
inc
push
and
pop
insl
loop
pusha
das
mov
push
pop
or
push
cmp
jnp
mov
sbb
mov
mov
dec
ret
imul
es
insb
imul
pushf
push
out
mov
ja
cmp
push
push
dec
push
pop
into
jmp
push
jb
adc
shl
dec
ror
mov
movsl
mov
loop
cmp
jbe
pusha
test
jae
in
sti
cmpsl
cmp
mov
addb
sbb
sbb
mov
std
xchg
cmpl
push
add
imul
jg
orl
enter
dec
sbbb
mov
in
sbb
aam
sbb
mov
pop
les
mov
sbb
or
push
fcoms
add
and
add
call
test
jp
push
ja
stos
repnz
xchg
inc
cmp
xor
xor
adc
jo
sub
testl
push
dec
xor
leave
sbb
ja
popa
mov
clc
cmpsb
mov
mov
loopne
hlt
pop
cmp
lahf
fsubrs
push
jbe
stc
mov
movsl
fnstenv
lret
cmp
dec
jmp
test
sub
and
out
clc
push
mov
roll
daa
push
push
mov
jle
xchg
mov
adc
cwtl
lock
cwtd
pushf
call
push
mov
cmc
mov
add
std
ljmp
movsl
pop
pop
mov
aad
cmp
or
mov
cmp
push
mov
fwait
pop
and
pop
jl
cmp
push
mov
addr16
or
idiv
mov
mov
cmpsl
fimuls
outsl
dec
xchg
jb
adc
ffreep
sub
clc
dec
shlb
scas
push
cltd
adc
das
repnz
cmp
sbb
sbb
repnz
ds
ja
push
test
outsl
shll
push
data16
dec
out
jnp
call
pop
lock
push
jne
dec
cwtl
cli
pop
arpl
dec
pshufw
dec
mov
xor
mov
lods
pusha
movsl
mov
fsts
mov
ret
mov
ss
cmp
pop
cmp
mov
push
and
xlat
xor
sub
inc
dec
push
jl
nop
aaa
xor
test
inc
ret
jp
testl
leave
jge
out
gs
movsb
repnz
rcrb
inc
mov
cld
pusha
and
leave
jl
dec
nop
fisubl
xchg
xor
test
push
out
sub
insl
bnd
out
xor
aaa
dec
xchg
jle
pop
pop
fcompl
movsl
jne
dec
mov
mov
fcompl
test
push
dec
sbb
or
and
rcl
es
inc
in
sahf
inc
adc
inc
mov
xor
addr16
lret
insb
push
je
cmp
rclb
mov
daa
fisubrl
neg
fdivl
lock
adc
xor
xor
cmc
out
cmc
pop
mov
push
mov
jg
inc
jae
xor
loop
insl
andl
out
lods
ds
test
jbe
fldcw
adcb
and
js
cmp
dec
xchg
mov
stc
mov
rorb
push
push
cmc
add
and
shrl
aam
dec
je
push
iret
sbb
out
leave
mov
xorl
inc
scas
mov
sti
inc
test
or
push
or
imul
imul
lods
jg
pop
jnp
fldt
cs
push
pop
mov
mov
or
mov
das
dec
adc
mov
sbb
push
divl
ljmp
lods
and
jl
in
out
xchg
aad
emms
out
mov
add
jl
sahf
mov
clc
pop
mov
lods
inc
nop
lcall
xlat
mov
frstor
mov
mov
xor
add
into
jmp
test
dec
in
sbb
mov
lcall
sub
cmp
or
sbb
push
jp
dec
jle
outsb
stos
sahf
mov
scas
ljmp
out
sub
cmp
or
sbb
push
jp
dec
jle
outsb
stos
sahf
mov
scas
ljmp
out
sub
cmp
push
sbb
push
jle
dec
pop
imul
mov
ljmp
out
aad
lds
repnz
andl
jmp
fstpl
pop
dec
outsl
jns
imul
cmp
sub
leave
out
stc
jmp
scas
mov
pop
dec
outsl
jns
imul
cmp
sub
fld
leave
idiv
out
xchg
cltd
xchg
push
pop
jl
xor
pop
or
dec
jo
jae
push
sub
mov
fdivrl
js
leave
mov
daa
adc
pop
push
sbb
mov
jbe
mov
inc
xchg
movsl
inc
insb
movsl
cltd
lahf
or
mov
mov
xchg
insb
orl
xor
and
sbb
mov
or
jg
sbb
mov
cmp
or
or
mov
iret
in
es
mov
push
sarl
mov
std
orb
xor
sub
test
xchg
loop
dec
mov
cltd
add
testl
xlat
daa
pop
aas
inc
test
add
pop
mov
in
mov
rcrb
adc
dec
pop
das
cmp
cmp
fld
leave
out
stc
jmp
scas
mov
inc
dec
ja
imul
or
fnstsw
jmp
loop
mov
dec
sbb
sbb
pop
inc
push
addr16
lods
sbbb
scas
shr
int
adc
xor
ds
ja
or
pop
inc
stos
popf
mov
orl
mov
pop
pop
dec
outsl
jns
imul
cmp
sub
leave
out
stc
jmp
scas
mov
pop
dec
outsl
jns
imul
cmp
sub
f2xm1
mov
jecxz
std
lods
ss
outsb
mov
rolb
dec
mov
push
mov
les
add
cmp
mov
cltd
and
lock
pop
jg
pusha
repnz
push
aad
outsb
push
inc
in
sub
mov
scas
adc
mov
ret
sub
adc
dec
mov
ret
or
sbb
fildl
push
mov
pop
inc
hlt
mov
add
sbb
mov
jmp
cmp
cwtl
and
aad
cwtl
sbb
inc
dec
xchg
cmc
lret
shl
scas
rcll
sahf
lea
jl
out
sarb
or
push
inc
sub
jmp
inc
iret
repnz
fadd
lret
stos
lods
icebp
jo
sbb
mov
and
pop
insl
pop
pop
popf
incl
or
jns
js
cltd
xor
aam
or
out
cltd
rcr
jns
pushf
movsl
mov
outsb
adc
mov
and
pop
lret
add
inc
in
pop
push
xchg
or
xchg
push
aad
jecxz
cs
mov
cmp
mov
or
jne
sub
insb
adc
pop
fdivrs
sbb
pop
and
sbb
xor
ss
shlb
sahf
repnz
jb
dec
imul
sbb
add
stos
mulb
rcl
rolb
jl
cmpsb
sub
jnp
xor
insl
nop
xorb
shll
sbb
pop
dec
leave
inc
bound
fistl
aaa
mov
jns
in
cmp
ss
inc
xlat
into
pop
jnp
insb
shlb
testb
push
add
sbb
dec
pop
and
enter
dec
mov
dec
push
jns
lods
sub
add
out
pop
dec
mov
insl
repz
iret
roll
insb
or
leave
sub
jo
cld
test
and
adc
gs
out
mov
xchg
je
adc
aaa
loope
xchg
les
movsb
xor
push
pop
imul
push
testl
xlat
repnz
mov
and
ret
lea
inc
jge
std
xor
fwait
add
adc
lods
mov
movsb
cmp
add
mov
ljmp
sbb
jp
mov
scas
mov
ret
scas
in
sahf
sbb
sub
ljmp
into
pop
ficoms
popa
movl
imul
rcr
xchg
and
test
pop
xchg
in
pop
gs
inc
fimuls
jno
push
sbb
push
addr16
test
xchg
xchg
in
and
jb
outsb
xor
insl
jg
outsb
mov
add
mov
test
push
adc
popa
pop
popa
js
addr16
popf
sbb
jecxz
iret
pop
jo
dec
test
sub
mov
ss
popa
mov
jle
add
rolb
pop
scas
jno
in
push
add
cmp
add
mov
or
mov
ficomps
dec
push
stc
cltd
mov
dec
push
test
jecxz
sbb
lock
xchg
pop
int
aaa
loopne
xchg
push
rolb
mov
add
shll
cmp
fsubp
out
jno
mov
pop
adc
dec
popf
jno
cmc
addr16
add
adc
dec
and
stos
jecxz
jmp
xchg
cmp
mov
daa
jecxz
cld
stos
fldt
xor
das
inc
nop
dec
lahf
or
out
movsb
hlt
jne
shrl
inc
adc
push
push
pop
inc
int3
jno
mov
pushf
xchg
jp
rolb
dec
or
mov
test
mov
cmp
aas
lcall
test
push
jmp
pushf
mov
les
out
mov
clc
and
mov
or
push
mov
sbb
mov
cmp
mov
cli
fidivrl
and
nop
inc
cmp
test
mov
pop
xor
mov
mov
sbb
xlat
mov
lds
loope
loop
ss
hlt
add
lahf
repnz
jle
sbb
xor
in
add
in
repz
xchg
orl
vshufps
dec
adc
test
fdivs
je
ret
xchg
mov
sti
jo
leave
sub
cmpsb
movsl
dec
xchg
gs
int
mov
pop
dec
addl
sub
and
pushf
mov
cmpsb
mov
das
or
mov
or
cltd
lcall
ret
and
jge
mov
dec
lahf
adc
dec
fsubl
mov
sub
pop
ret
sbb
in
jno
dec
xchg
xor
dec
jno
mov
mov
in
jne
sbb
add
pop
sbb
pop
movsb
or
test
mov
jae
jecxz
je
sbb
jo
call
iret
xchg
sarl
gs
fstps
fidivrl
addr16
and
pop
or
andl
and
repnz
push
repz
adc
xchg
test
adc
shll
push
inc
loop
repz
xchg
cmpsb
std
lahf
enter
lahf
lea
in
or
dec
inc
inc
mov
aaa
mov
pminsw
mov
fsubl
leave
mov
and
filds
xchg
test
dec
loop
inc
sahf
rcr
adc
push
jbe
xlat
ficoml
sbb
xchg
push
push
enter
mov
mov
and
es
orl
cli
adc
sub
mov
cmc
mov
sahf
stos
mov
loop
stc
inc
xchg
in
dec
pop
mov
movsb
pop
cmp
das
subl
lahf
cli
dec
xor
dec
jo
mov
push
inc
cs
ljmp
cmc
addr16
mov
dec
inc
jmp
cmpsb
cli
mov
pushf
in
fwait
dec
sub
mov
inc
lahf
pop
dec
ret
dec
clc
mov
dec
jg
sti
cmp
push
fdiv
mov
cli
mov
shl
ss
push
dec
into
in
xchg
mov
negl
mov
cmp
stc
insb
lret
repnz
add
pop
and
dec
mov
movsl
std
and
ljmp
in
xchg
pop
inc
pop
jnp
mov
and
dec
lret
xorps
sub
sub
jnp
test
iret
mov
cmp
ret
push
jg
adc
das
push
loop
push
leave
add
hlt
mov
cmp
loop
cmp
sahf
push
or
mov
cmp
pushf
pop
jecxz
or
mov
repz
and
clc
jp
pop
and
ret
inc
decb
fdivrs
popf
jecxz
ljmp
pop
xchg
pop
stos
jecxz
repnz
xchg
das
jno
scas
jb
adcl
push
aam
xchg
xor
ja
and
ljmp
sarl
push
test
clc
mov
or
movsl
and
xchg
jge
sbb
mov
in
daa
loope
xor
push
and
mov
lahf
in
pop
sbb
aas
cmp
lock
stos
out
mov
pop
test
dec
into
test
cld
rorl
ljmp
insb
mov
sbb
sbb
jae
and
ljmp
out
mov
add
cld
arpl
js
inc
lds
adc
sbb
clc
push
repz
out
xchg
mov
dec
mov
cmp
cwtl
repnz
push
test
icebp
flds
add
or
pop
lret
popa
push
fidivl
shlb
jge
and
sbb
jnp
pop
das
mov
mov
xchg
and
gs
ljmp
test
test
cmpsb
ret
or
jo
cmpsb
xchg
mov
push
cmp
bound
xor
dec
das
inc
cmpsl
jae
xchg
stos
sahf
sub
lea
mov
ret
pop
sub
adc
mov
sbb
mov
dec
push
push
or
and
pushf
mov
adc
lods
lods
adc
pop
push
dec
in
scas
ffree
push
jnp
inc
lcall
mov
lret
dec
mov
xchg
mulb
pop
pop
lret
inc
inc
out
popa
jl
dec
outsl
fiaddl
push
mov
jle
xchg
rolb
dec
in
rcrl
dec
test
test
repnz
xchg
mov
or
inc
shrb
cmp
pusha
test
jg
sub
xchg
jge
dec
lahf
jne
xor
dec
clc
ret
add
jle
push
addr16
popf
fisttps
mov
and
pushf
hlt
mov
in
lcall
fldl
std
nop
cmp
scas
xorb
xchg
std
mov
pusha
in
and
in
sbb
lcall
das
adc
dec
add
sub
stos
or
stos
loop
scas
or
sbb
or
push
inc
inc
push
jg
test
andb
cmp
ret
arpl
cli
inc
js
sbb
shlb
xor
xor
cmp
fcomps
mov
popa
bound
sbb
cmp
sub
push
imul
cmp
adc
push
into
mov
movsb
aaa
int
xchg
sarb
xorb
in
shrb
test
push
pop
addl
popaw
jle
xor
sub
mov
adc
push
aas
insl
js
jno
jbe
mov
call
fists
inc
cmp
sub
push
push
loope
sbb
lods
and
inc
add
fstp
lds
sbb
imul
cmp
add
call
sub
lret
push
xchg
dec
push
jle
test
cmc
fnop
orl
aad
adc
sbb
fcompp
int
in
movsl
xor
fildl
cli
dec
jns
ficoml
cmp
jge
push
repz
je
or
out
or
test
fsts
fimuls
jmp
iret
push
lea
mov
movsl
cltd
ret
or
js
je
pop
cltd
adcb
xor
mov
dec
in
loope
and
push
sub
out
mov
out
gs
out
mov
ret
fimuls
aas
mov
mov
add
ds
sar
pop
insb
add
xlat
ds
dec
pop
xchg
nop
popa
fwait
sub
mov
scas
dec
cmp
dec
and
sub
loope
mov
hlt
mov
out
pop
test
rcrb
and
pop
push
cmpsl
dec
jg
jne
add
insb
push
jno
int3
xor
push
dec
lret
dec
or
arpl
mov
lods
jae
xor
push
pop
dec
jbe
lds
test
xor
pop
ds
cmpsl
sbb
inc
jecxz
movsl
popf
and
pop
adc
dec
outsl
or
sbb
out
mov
pop
xorb
fisubrs
in
sbb
xor
mov
out
in
shll
jmp
or
adc
inc
mov
or
mov
inc
xchg
or
neg
shlb
into
mov
xchg
loop
or
pop
mov
pop
icebp
push
out
pop
leave
adc
dec
sti
xchg
add
mov
test
add
fucomip
mov
pop
sub
mov
push
ljmp
adc
pop
jmp
adc
out
push
rcrb
add
jnp
call
pusha
incb
or
popa
aam
push
jecxz
lods
int
pop
cmp
mov
sbb
adcl
rolb
mov
mov
outsl
push
test
data16
lret
into
adc
in
negb
pop
je
aam
rcrl
aam
mov
gs
mov
scas
jbe
fcmovbe
pop
cmp
cmp
bound
in
repnz
xor
inc
jg
sbb
mov
pminub
in
adc
jno
es
cwtl
fistps
ret
into
xchg
subb
stos
jle
jecxz
dec
sbb
sbb
jbe
and
insb
xor
sub
rolb
or
movsl
fstps
out
adc
push
outsl
cltd
or
popa
or
int
push
mov
xlat
mov
loope
sub
mov
lahf
call
xchg
mov
push
leave
sub
push
addb
nop
decl
jae
out
or
push
mov
and
pop
out
inc
pop
push
les
cmp
cmp
imul
negl
xlat
loopne
mull
or
dec
roll
nop
mov
adc
mov
sub
xchg
jl
lods
das
mov
data16
and
lods
or
testb
push
or
xchg
add
popa
or
scas
mov
aas
jne
lock
sbb
cmpsl
shrb
cld
es
mov
cld
or
mov
and
andl
es
push
popf
sbb
jne
adc
push
jge
cli
aad
pusha
cmpsb
cld
enter
rorb
out
xchg
fdivs
mov
push
out
mov
sbb
and
adc
push
loope
pop
adc
out
sahf
jmp
or
lret
xchg
jmp
stos
arpl
fdivrl
mov
xor
mulb
popf
mov
mov
or
loopne
jl
jmp
outsb
test
cltd
ror
jo
shlb
xchg
push
adc
mov
inc
xor
dec
sldt
jp
arpl
int
jmp
sbb
popa
pop
mov
xchg
clc
adc
sub
into
lds
inc
push
lds
mov
test
jl
inc
out
iretw
inc
adc
aaa
neg
lahf
sub
mov
push
ror
in
lods
data16
je
mov
mov
adc
mov
inc
mov
lcall
pop
enter
xchg
jl
or
jbe
fcompl
xchg
inc
mov
pop
dec
insl
add
dec
mov
or
cmp
jp
clc
std
sahf
pop
nop
repz
test
xor
int3
dec
das
push
repz
lock
mov
sub
cmp
mov
mov
cmp
dec
imul
sbb
dec
jmp
cltd
lea
popf
sub
cmp
lahf
les
int3
and
sahf
dec
sbb
dec
add
ret
or
stos
test
pop
imul
jp
push
push
mov
push
or
pop
movsb
repz
dec
mov
cmpsb
test
rcrb
jg
ret
imull
dec
lock
sbbb
fs
mov
jnp
push
push
push
inc
imull
inc
imul
add
jmp
and
daa
dec
adc
and
and
jl
fnstenv
mov
pop
xchg
adc
addb
pop
imul
mov
ja
fs
pop
daa
es
fcmovbe
fsubs
fnstenv
jge
cmp
pop
lcall
mov
cmp
push
pop
pop
push
decl
ror
inc
inc
push
cwtl
bnd
jo
cmp
fsubr
mov
stos
aam
jmp
pop
hlt
jmp
leave
pop
push
sar
enter
sbb
aad
les
mov
cli
lods
addr16
and
test
push
cmp
addl
cmp
jge
and
mov
sbb
pand
mov
rcrl
inc
stos
cmpb
es
push
pop
scas
popf
loopne
xlat
mov
adc
cmc
mov
testl
aam
cltd
or
sbb
movsl
inc
jne
sbb
shrl
mov
cli
and
and
int3
gs
test
mov
iret
std
mov
cwtl
jnp
xadd
scas
mov
gs
dec
sub
test
pop
mov
jg
dec
jo
hlt
pop
dec
adc
pusha
bound
das
inc
into
inc
adc
pushf
mov
xchg
iret
mov
push
mov
pop
pop
adc
cmp
mov
fs
add
push
in
inc
in
inc
ds
or
fs
in
popf
gs
xor
mov
xchg
bound
cmpsb
pop
sub
mov
dec
cmpsl
cwtl
or
jg
fsubs
xchg
adc
icebp
shll
addr16
jo
rcrb
sbb
pop
jl
inc
mov
mov
or
lods
jne
loope
imul
or
and
ror
fstpl
repz
enter
lret
cmpsb
jecxz
add
mov
ds
xor
adc
mov
sbb
jns
leave
cli
popa
cmp
mov
es
cmp
sti
jno
push
jb
aas
push
incb
jp
je
les
repz
jmp
jg
push
adc
out
gs
jno
xchg
push
and
std
inc
mov
xor
and
or
hlt
mov
testl
fnsave
arpl
popa
gs
pop
inc
repz
sub
nop
adc
mov
ss
rcrl
add
ss
mov
addr16
pop
andl
xorl
inc
movsb
pop
mov
filds
pop
push
sub
cltd
mov
movb
jmp
jb
icebp
dec
xor
dec
or
cmpsl
dec
dec
xchg
lret
sub
shrl
push
xchg
jmp
xchg
dec
rorl
fwait
mov
jne
dec
pop
fucomip
cs
jns
cmpb
les
int3
in
inc
sbb
outsl
mov
dec
test
daa
shrl
mov
leave
push
push
add
lcall
test
out
ret
test
dec
mov
fisttpll
mov
xor
mov
stos
loop
jo
shll
cmc
jp
adc
inc
cli
fdiv
xor
bound
jecxz
fdivs
pop
add
pop
add
test
xchg
lret
stc
inc
push
lea
arpl
sub
bound
dec
icebp
sbb
cs
inc
lret
xchg
pop
or
xor
and
mov
fildl
aaa
into
jle
xchg
dec
dec
and
mov
cld
and
push
mov
lds
push
jno
xor
push
jo
bound
lock
and
fidivrs
jl
or
or
sbb
stos
xchg
incb
add
add
into
lds
bound
mov
push
jp
sub
adc
in
insb
jno
std
mov
cld
sbb
cmpsb
mov
or
ds
mov
inc
inc
test
dec
xor
sub
xchg
loop
dec
add
ret
and
out
popf
lods
fiadds
or
fldl2t
mov
inc
fistpl
insl
dec
push
mov
outsl
pusha
dec
cmp
mov
pop
rcrl
call
dec
push
lahf
stc
sbb
add
sti
or
jecxz
stos
fbld
aad
mov
pop
ja
cmp
mov
cmpsb
ds
dec
inc
mov
outsb
sub
aas
mov
mov
xchg
shll
dec
outsl
jmp
inc
push
lods
cmp
nop
or
xor
sub
and
pop
int
scas
cmc
inc
pop
mov
mov
sub
xor
jecxz
or
outsb
or
mov
mov
jmp
cltd
pop
icebp
aas
loop
outsb
popa
jns
adc
imul
lret
or
inc
xor
push
xor
fisubrl
push
rcrb
subb
repz
int
push
fbld
sub
or
pop
xorb
or
cld
sbb
adc
mov
lret
push
out
or
pop
scas
ss
fistps
cld
insl
loope
mov
mov
pusha
cli
enter
repz
inc
push
jle
mov
pusha
ss
arpl
pop
test
push
gs
mov
jmp
and
daa
std
mov
sub
test
cmp
adc
pop
mov
fsubrl
or
popa
cwtl
jb
in
xor
adc
mov
out
and
and
loop
and
mov
cmpsb
arpl
fisttpll
dec
arpl
test
loopne
fs
xor
mov
pop
jmp
sbb
jne
add
cmpsl
in
adc
adc
add
jp
aam
cmp
mov
ret
std
xchg
dec
leave
loope
stc
data16
loop
adcl
mov
js
cs
mov
push
bnd
jp
loopne
jmp
sbb
rorb
push
data16
lods
inc
jp
bound
push
imul
jl
xchg
les
ds
jno
ljmp
sub
movsl
mov
mov
scas
pop
mov
das
shll
pop
lods
adc
popa
scas
xor
sub
pop
jnp
adc
out
and
cmc
dec
les
repz
hlt
pop
sub
pop
jns
shll
inc
les
pop
inc
shlb
das
mov
pop
inc
or
fiaddl
fcomip
adc
das
adcl
enter
scas
jl
dec
mov
pop
loop
add
mov
jne
addr16
iret
popa
xchg
int3
and
leave
pusha
popa
cltd
cli
push
and
mov
sbb
fadds
notb
add
cmovno
sarb
rolb
inc
jns
aaa
andb
cmpxchg
rcll
sbb
mov
jl
or
push
adc
cmp
inc
fistps
adc
dec
pop
xchg
lods
enter
in
jmp
scas
mov
pop
dec
outsl
jns
imul
cmp
sub
leave
out
stc
jmp
scas
mov
pop
dec
outsl
jns
imul
cmp
sub
leave
out
stc
jmp
scas
mov
pop
dec
outsl
jns
imul
cmp
leave
out
stc
jmp
das
mov
mov
push
js
xchg
not
mov
out
hlt
dec
les
aam
movsb
jg
das
movsb
pop
mov
test
scas
and
xor
add
add
sbbb
push
test
aam
movsb
pop
mov
test
inc
fs
je
and
lock
add
adc
pop
mov
or
mov
je
pop
add
xor
dec
lea
push
mov
mov
dec
les
dec
mov
std
mov
jno
cld
flds
push
xor
add
adc
inc
dec
push
rorl
sbbl
jb
inc
test
fcmovne
push
mov
mov
ret
mov
mov
mov
sahf
push
mov
jno
int3
sub
sub
push
pushf
push
and
cmp
pop
dec
mov
jnp
xchg
jecxz
sbb
inc
stos
scas
fcmovne
xor
add
enter
ret
dec
rcrl
cmp
movswl
xchg
inc
mov
adc
mov
lods
sbb
loope
icebp
lds
pop
adc
jnp
mov
fmulp
push
mov
adc
test
dec
aam
inc
pop
int3
dec
test
cld
mov
mov
and
out
fmull
push
lods
inc
lret
sti
fisubl
lock
and
xor
push
cltd
pop
mov
test
dec
mov
int
rcrl
pop
rcrl
es
inc
in
sub
pop
xchg
pop
into
insl
fwait
push
popf
mov
out
movsl
push
xchg
adc
fs
je
inc
mov
xor
add
adc
in
hlt
push
les
aam
movsb
pop
mov
test
outsb
fs
je
inc
mov
xor
add
adc
in
push
pop
push
inc
adc
imul
inc
ljmp
hlt
daa
das
jg
mov
cmpsb
mov
cmp
pop
ss
mov
pop
sbb
jae
lods
in
rclb
icebp
mov
cmpl
xchg
add
sub
and
mov
xchg
scas
cmp
mov
sub
inc
add
mov
cmpb
mov
les
shlb
mov
lds
mov
xchg
loopne
adc
stos
xchg
repz
mov
fnstenv
inc
dec
int
pop
push
mov
sbb
in
cli
dec
lcall
dec
ret
cmp
dec
mov
clc
pushf
inc
xchg
pop
es
fistps
fstps
les
ss
mov
mov
negb
loope
imul
stos
dec
lds
lock
lahf
aam
loope
cld
dec
sbb
test
shr
xchg
sub
je
xor
out
add
mov
in
jne
and
pop
inc
das
ss
push
clc
mov
xchg
jmp
cmp
das
enter
mov
sub
popa
hlt
xorl
mov
loopne
int3
sub
decb
dec
dec
hlt
and
cmc
jecxz
stos
xchg
into
adc
inc
push
mov
jb
jbe
filds
add
inc
mov
jo
mov
mov
fiadds
adc
inc
loop
call
in
aad
dec
insl
lahf
lock
adc
sub
popf
lret
mov
lods
call
bnd
dec
arpl
cli
inc
sub
divb
xchg
inc
mov
outsb
aas
xchg
aad
adc
and
and
popa
loopne
push
scas
or
popa
aam
dec
pop
bound
sbb
inc
int3
pop
sbb
xchg
add
testl
mov
add
shrb
sbb
clc
es
dec
xor
mov
pop
cmpsb
mov
mulb
enter
fidivrs
inc
sub
jno
lea
and
in
fs
fwait
sbb
loopne
imul
dec
sub
ret
cmp
enter
les
loope
ss
daa
fsubr
push
jl
in
pop
stos
bound
rorl
ja
mov
cmp
xorb
cmp
mov
adc
aad
cmp
aam
mov
imul
hlt
lods
mov
mov
roll
ds
cmpb
fwait
jo
xchg
jns
xor
add
pop
int3
out
subb
xor
test
addr16
out
into
adc
mov
rclb
cmp
clc
imul
add
xor
movsl
pand
pop
cld
dec
sub
pop
mov
xchg
mov
daa
xchg
cmp
pop
add
adc
add
movsb
lock
pop
pop
arpl
sbb
lret
push
sub
add
pushf
mov
movsb
fistpl
fbld
and
sub
lods
pushf
rolb
pop
or
imul
pushf
sbb
pop
xchg
add
mov
sti
push
test
push
cmp
jmp
into
xchg
mov
inc
inc
add
inc
out
jae
fstpt
mov
cld
sbb
lods
arpl
sbb
mov
lret
mov
xchg
insb
shlb
adc
cmpsl
mov
inc
cli
jno
pop
ljmp
dec
insb
and
lock
mov
lret
xor
adc
jle
lods
movsl
repnz
cmpsb
add
jmp
inc
mov
outsb
dec
dec
insb
push
sub
add
push
aas
jp
push
push
push
inc
arpl
lret
mov
dec
out
lods
inc
cmp
mov
ror
dec
dec
in
and
pop
adc
mov
add
jo
xchg
sbb
icebp
movsl
dec
aam
sbb
jae
mov
lea
mov
pop
mov
ds
xchg
icebp
fisttps
adc
sub
sub
cmp
repnz
in
dec
fmuls
mull
mov
int
push
or
in
mov
int
pop
test
in
bsf
pop
mov
sbb
sub
hlt
fcompl
gs
dec
out
js
les
jnp
mov
ljmp
das
in
pop
daa
stc
jge
ss
push
sar
push
mov
es
dec
ss
gs
jge
imul
mov
jecxz
sub
add
cli
idivb
push
jge
pop
jae
dec
ret
sbb
test
push
jbe
mov
cmpb
add
push
inc
shlb
mov
push
iret
bound
adc
push
aas
cmp
mov
roll
dec
or
cmpsl
cmp
xchg
repz
lds
ret
movsb
cmpsl
test
sbb
hlt
and
outsb
in
pop
popa
loopne
outsl
dec
jbe
int3
jnp
lock
lcall
dec
rcr
pop
dec
xor
push
xchg
scas
sbb
pop
aam
cmpsl
jp
fstl
mov
cmp
in
xchg
lret
jnp
or
lret
mov
cmpsl
sbb
mov
ds
dec
insl
push
mov
loopne
sub
ds
hlt
cs
push
prefetch
pushf
push
inc
in
dec
sub
pop
into
inc
mov
pop
imul
adc
sbb
ja
cmp
mov
jb
xor
hlt
popf
pop
lea
stos
sbb
test
jle
ljmp
movsl
mov
shlb
xlat
pop
cltd
xor
pushf
cmpsl
test
int
or
xlat
or
jns
sti
test
stos
adc
sub
mov
fstp
inc
jle
cmp
lcall
loopne
imul
inc
lock
add
in
jle
arpl
and
pop
fldl
mov
sbb
push
lods
out
das
mov
pop
dec
mov
pusha
pop
mov
lds
sub
out
dec
mov
add
cmp
mov
repz
sub
xchg
add
lea
sbb
mov
enter
call
jecxz
inc
xchg
add
cs
push
xchg
cmp
call
sbb
stc
adc
shrl
dec
insl
mov
jg
push
push
sub
cmp
or
imul
mov
nop
insl
mov
sbb
jb
insb
leave
jecxz
lea
push
jns
mov
dec
pop
aas
repnz
fldenv
push
inc
mov
mov
lods
jno
rclb
das
jmp
int3
push
mov
mov
bound
ds
fcompl
imul
push
mov
stc
jl
and
jp
add
push
jge
inc
or
in
outsl
mov
insl
cmpsl
clc
push
sbb
jne
xchg
mov
scas
push
andb
pop
mov
out
adc
adc
push
xchg
int3
movsb
pusha
std
mov
inc
icebp
mov
ss
cmpl
mov
dec
or
adc
cli
mov
inc
sub
subl
jno
hlt
mov
sub
cmp
jmp
jg
inc
fldl
sbb
shrb
or
aam
loope
scas
stos
fxtract
pusha
dec
adc
int
insb
push
sti
aam
insb
sbb
dec
sbb
sbb
xorb
fs
push
movsb
mov
or
xchg
aas
sub
mov
data16
jg
cmp
and
in
into
sti
rcl
push
jnp
enter
negl
sahf
or
stc
jl
and
int3
mov
mov
or
mov
inc
rcr
lea
push
xor
repnz
inc
les
icebp
data16
fwait
xchg
mov
mov
aas
mov
das
mov
shr
jge
xchg
push
movsl
test
pop
cmp
subl
mov
xor
add
push
repnz
fimull
pop
sub
pushf
sbb
movsb
psraw
addr16
add
pusha
pop
aas
scas
jle
xchg
mov
int
rol
and
dec
mov
dec
out
js
mov
and
inc
shr
in
imul
enter
mov
jne
mov
in
adc
pushf
jae
nop
inc
mov
adcl
ja
ss
inc
jbe
cmc
xchg
fstps
orl
ret
mov
adc
mov
sahf
mov
push
cld
push
pop
icebp
push
or
ljmp
pop
mov
pop
lds
mov
adc
into
pop
mov
cmp
cld
mov
sahf
ficoms
ror
pop
and
pop
or
repz
xchg
fnstcw
filds
sbb
mov
data16
pusha
loope
or
sub
sub
mov
ljmp
sub
ss
aad
inc
pusha
ds
ficompl
adc
shll
xchg
call
cmp
shrb
out
imul
adc
stos
pop
imul
xchg
test
jge
sub
rcr
sbb
pop
and
cs
movd
sub
push
fmull
cltd
les
adc
push
out
loop
scas
mov
fisubrl
pusha
xchg
in
push
jno
and
nop
lret
lret
testl
jl
movsl
lods
repnz
mov
stos
xchg
pop
sub
inc
sub
or
test
orb
mov
stos
add
dec
mov
xor
mov
jg
fsubs
scas
mov
ret
lds
jno
ret
aad
daa
jle
push
testl
mov
dec
push
xor
fwait
movsl
jbe
xchg
enter
test
shlb
iret
pop
mov
adcl
inc
jne
mov
mov
subb
add
xchg
filds
sbb
loopne
cltd
in
insb
out
xchg
divb
or
adc
stos
fstpt
mov
mov
xor
jmp
icebp
sub
ss
push
in
gs
inc
inc
je
and
test
dec
mov
and
imul
push
movsl
out
push
lods
rorl
lahf
pop
push
das
data16
stc
lahf
mov
ljmp
xchg
popf
push
mov
mov
sub
push
arpl
or
and
adc
ss
mov
imul
fstps
js
lahf
push
sbb
fwait
pushf
in
adc
sbb
aad
imul
sbb
xchg
dec
mov
loop
adc
sbb
aad
or
fiadds
mov
mov
push
mov
sti
idivb
fimull
push
xor
xchg
sbb
pop
xchg
mov
push
xlat
jmp
ret
mov
loopne
or
mov
jne
dec
adc
pop
xor
or
inc
shrb
xchg
cmp
and
cmc
lods
mov
inc
lods
in
fwait
jg
unpcklps
ljmp
ja
mov
xor
dec
cltd
insb
pop
outsl
pop
scas
ret
jmp
je
dec
mov
ror
inc
cmpb
div
mov
lret
and
int
mull
std
das
mov
mov
js
mov
or
mov
pop
stc
adc
scas
cmpsl
cmpsb
inc
loop
xor
xchg
cmp
jmp
sbb
jg
and
and
clc
cmp
push
jbe
add
mov
and
push
dec
icebp
pop
push
cmc
imul
call
cmpsb
popf
jno
ja
sbb
mov
insb
pop
cmp
or
mov
cmp
push
mov
outsb
cli
inc
jl
sbb
into
adc
stos
iret
pop
add
add
or
mov
aaa
hlt
dec
inc
add
fmull
and
mov
dec
sub
ret
mov
test
adc
cli
out
pusha
rcl
add
mov
mov
cwtl
std
or
cmp
mov
shlb
icebp
dec
cli
dec
repz
in
lcall
les
xlat
mov
push
lcall
push
sub
mov
sbb
ficompl
dec
dec
js
pop
test
fcomps
int3
adc
inc
mov
into
mov
sarb
std
inc
hlt
mov
cmp
nop
ret
aad
cmp
inc
or
pop
add
popl
xor
insb
cmp
leave
test
test
add
jmp
add
aas
loopne
popf
push
ljmp
ds
mov
out
insl
inc
icebp
push
fldt
fistl
push
jbe
scas
and
cmp
mov
or
and
iret
int
cmpsb
xchg
imul
jns
ret
imul
mov
dec
and
mov
aam
stos
adc
es
sbb
adc
inc
cmp
rcrl
lret
or
int3
xchg
mov
sub
fistpl
or
push
mov
shlb
loopne
sbb
imul
cs
enter
mov
or
pop
mov
pop
test
ret
jmp
mov
or
addr16
out
leave
fcmovnu
mov
les
xchg
mov
jp
fwait
popa
repnz
push
loope
sub
push
cmp
push
loop
sbb
jmp
lods
jo
fisttps
aaa
std
imul
sbb
and
pop
add
push
fstl
mov
dec
push
and
imul
and
inc
pushf
jl
ljmp
sbb
icebp
fs
sbb
das
xor
push
rorl
mov
sbb
jo
les
scas
data16
aam
adc
ss
sahf
push
addr16
push
hlt
push
or
jp
shll
stos
mov
xchg
mov
aaa
repnz
test
std
push
jbe
mov
sub
cli
mov
adc
fsubs
jg
inc
imul
inc
loope
dec
cmp
out
push
gs
dec
sti
shll
mov
cs
add
xchg
cltd
xchg
enter
sub
push
les
push
shl
dec
rcrb
and
or
imul
sub
add
push
cltd
xchg
mov
scas
ss
mov
ja
mov
daa
push
mov
sbb
sub
scas
push
loopne
lock
mov
cmp
xlat
cld
cmp
test
jmp
adc
or
xchg
mov
daa
pop
push
fcmovb
push
pop
jnp
mov
addl
push
or
pop
pop
popl
ret
loope
les
dec
andb
shl
dec
ss
xor
cmpb
ljmp
ljmp
add
orl
add
jne
enter
jb
shrb
pop
mov
lret
pop
add
push
adc
xchg
popa
outsb
jbe
mov
lcall
ret
xor
inc
xchg
loopne
test
push
outsl
imul
fwait
sbb
lods
xchg
std
hlt
cmp
fistpll
sbb
aaa
cmp
shlb
sub
inc
pusha
dec
in
mov
sub
repnz
loopne
add
cltd
inc
mov
cmc
xchg
fsubp
xor
and
sbbl
dec
std
aaa
cmpsb
dec
add
or
in
rorb
mov
jnp
xchg
jmp
xlat
cli
sub
aam
or
fidivrl
lcall
jnp
in
fistl
jle
aam
pushl
movsb
repz
push
test
imul
rorl
aam
ljmp
cmp
icebp
insl
inc
inc
scas
push
mov
xor
out
stc
jo
cwtl
cmpsb
cmpsl
mov
add
iret
pop
bound
imul
cmp
ja
mov
mov
fs
add
and
cmp
push
loop
mov
ja
sbb
scas
aam
dec
fdivl
cltd
je
jecxz
push
add
pop
adc
lret
in
fldcw
loopne
jge
mov
shll
pushf
ret
xorl
inc
fdivs
ret
stos
dec
pop
xchg
xchg
cmp
dec
data16
pop
call
push
add
xor
aaa
testb
cli
and
lcall
jno
sub
imul
cmp
add
xor
add
lods
jns
mov
bound
or
mov
dec
sbb
fs
int
hlt
mov
mov
xlat
cmpsb
jae
test
mov
stc
cld
mov
adc
adc
dec
sbb
sti
subb
ret
mov
std
outsb
rorb
sbb
aam
xchg
sbb
loope
xor
add
or
xlat
cwtl
mov
cwtl
adc
xchg
mov
outsl
cmc
ficoml
popa
sub
call
mov
pusha
in
xor
or
adc
mov
or
sbbl
aas
push
lret
and
inc
aaa
mov
add
les
mov
push
cmp
mov
mov
cmp
add
jae
mov
mov
sub
stos
aaa
call
gs
mov
mov
push
int
aad
sub
xor
or
inc
sbb
jae
cmp
repz
sbb
cmp
pushf
rolb
jp
push
mov
shrb
xor
rolb
xor
sbbl
xchg
add
jno
inc
in
aaa
xchg
mov
mov
cmpl
daa
cld
dec
leave
sbb
pop
ljmp
adc
sti
iret
sub
clc
sarb
sarl
dec
es
enter
lock
out
ss
out
lea
scas
ret
push
leave
inc
xchg
dec
xor
imul
js
xor
nop
mov
addr16
sbb
lods
fs
iret
inc
cltd
push
aam
outsl
sbb
xor
out
adc
js
inc
pop
sub
and
shlb
cmp
repz
cs
shrb
pop
iret
mov
inc
dec
add
lret
push
add
cmpsb
adc
sarb
test
fidivrl
loopne
icebp
test
jl
aas
push
pop
adc
iret
inc
ret
in
push
insl
fstps
cli
jp
pop
lret
pop
lcall
mov
in
dec
xchg
jnp
cmp
nop
shl
mov
sub
adc
sahf
sbb
les
inc
sub
int3
mov
xchg
fwait
shrl
push
pushf
fldl
into
mov
mov
cmp
movsl
push
ja
stos
or
data16
jmp
clc
xchg
outsb
pop
loopne
pop
out
ficomps
pop
aas
lods
xor
push
cmp
dec
orl
xchg
lea
mov
cs
gs
push
andl
movsb
sbb
pop
inc
cltd
sbb
push
mov
dec
push
lock
mov
inc
daa
nop
inc
stos
aad
push
call
or
insl
push
mov
into
or
or
popa
cmp
out
lahf
bound
dec
and
adc
mov
stc
leave
test
dec
xor
and
xchg
xchg
dec
or
push
jmp
outsb
inc
jns
out
in
not
adc
outsl
sub
popf
repz
dec
push
mov
into
repnz
mov
inc
loopne
dec
pushf
push
sbb
scas
int3
subl
fimuls
gs
insl
pop
xchg
jp
iret
sub
mov
leave
int3
in
mov
in
sub
push
inc
test
clc
xlat
pop
add
push
inc
push
xor
pop
ficoml
sbb
dec
mov
aam
lcall
dec
adc
pop
sbb
nop
mov
hlt
sahf
adc
dec
mov
sbb
xchg
aas
push
popa
jecxz
cmp
out
dec
sub
jne
pusha
mov
out
inc
jge
test
repnz
jl
or
adc
je
adc
xchg
lods
inc
and
pushf
add
jge
ja
push
in
mov
fidivl
xchg
popa
pop
cwtl
lret
sub
cmp
cwtl
data16
jbe
cs
mov
jno
les
or
jae
mov
jb
pop
mov
out
jns
cmpsl
ja
scas
cltd
shlb
daa
mov
or
filds
outsb
xor
cmp
xchg
scas
jo
mov
xor
xchg
mov
scas
sub
sbb
frstor
iret
std
cmc
popf
and
lods
out
fwait
dec
or
aam
pop
ffreep
mov
test
stos
std
dec
dec
jne
stc
jmp
add
lahf
or
scas
clc
xchg
xor
imul
mov
inc
xchg
mov
pushl
push
in
jg
outsb
outsb
add
pminsw
dec
fldenv
add
xor
mov
in
imul
popf
jge
and
xor
loopne
vphadduwq
cld
lods
outsl
fiadds
test
xor
and
pushf
push
pop
inc
ljmp
adcl
js
adc
ret
es
in
movsb
cld
rclb
dec
jl
fdivr
imul
in
push
xor
cmp
movsb
pop
mov
test
outsb
fs
je
inc
mov
xor
add
adc
in
hlt
push
les
aam
movsb
pop
mov
test
outsb
fs
je
inc
mov
xor
add
adc
in
les
movsb
es
xor
mov
test
outsb
fs
je
mov
push
cmpsl
and
and
add
cld
or
cli
test
sahf
outsb
movsb
pop
movsb
dec
test
adc
fs
mov
mov
mov
xchg
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
dec
inc
pop
jae
arpl
gs
push
or
ret
in
jecxz
xchg
lea
mov
jae
arpl
or
and
xchg
jecxz
xchg
lea
mov
jae
arpl
or
and
orb
repnz
mov
add
adc
lret
mov
push
sbb
cmp
xchg
push
movsl
jecxz
fcomps
fldl
mov
jge
and
data16
clc
xchg
jno
std
pop
in
stos
adc
jmp
dec
adcb
dec
insl
int
shll
test
add
mov
pop
push
arpl
pop
inc
fiadds
or
sbb
rcll
shll
insl
out
bound
lods
aaa
mov
test
or
xor
and
jecxz
push
push
popf
andl
fstpt
xor
addl
test
cmpl
cld
scas
cwtl
sbbb
lret
mov
jae
arpl
or
and
repz
jecxz
xchg
lea
aam
and
pop
push
add
adc
popa
dec
sbb
xchg
test
test
imul
ljmp
dec
xor
insl
push
andnps
jns
pop
and
mov
cmpsb
xchg
imul
xlat
test
mov
push
sbb
add
ror
ret
in
jecxz
xchg
lea
mov
jae
arpl
or
and
repz
jecxz
xchg
lea
mov
enter
leave
shrl
mov
je
cmp
jle
cwtl
jb
cmp
mov
dec
mov
pop
pop
popf
scas
cltd
lods
enter
mov
out
mov
js
out
iret
inc
adc
and
stos
nop
cmp
mov
mov
sets
aaa
or
icebp
sub
pop
aaa
outsl
xor
add
ja
add
sbb
lea
fcompl
and
or
daa
int3
push
xorb
push
inc
mov
outsb
ret
data16
les
jmp
pop
addr16
mov
lds
mov
push
shlb
adc
scas
pop
lcall
sbbb
jns
cmp
mov
insl
das
mov
andl
push
cmp
xchg
loopne
mov
fcomp
popw
stos
ror
das
stos
mov
scas
lock
push
cwtl
arpl
push
dec
fstp
mov
push
mov
test
repnz
xor
ss
xchg
jmp
std
in
push
out
sarb
sar
push
adc
aaa
mov
inc
xor
mov
pop
xchg
or
push
test
push
jae
cmp
in
push
sti
dec
gs
sub
jecxz
test
mov
inc
sub
xor
icebp
popa
test
scas
push
sbb
pop
pusha
inc
cmpsb
insl
jge
mov
ss
lods
bound
sub
sbb
cmp
daa
mov
mov
mov
jns
add
mov
in
mov
cmp
or
jmp
ss
inc
sub
mov
jb
jmp
push
dec
pop
cld
adc
mov
mov
cmp
lret
scas
xor
mov
in
test
call
lea
pop
lock
inc
push
rorb
rorl
xchg
inc
mov
mov
popf
or
xor
mov
out
into
mov
jnp
push
mov
loop
xor
popf
movsl
xchg
mov
imul
lret
lea
gs
loopne
aaa
sub
xor
loope
sub
xlat
inc
inc
test
js
ss
jb
rclb
insl
pop
and
inc
add
jnp
and
sub
movsb
clc
pop
popf
jle
cmc
mov
xor
dec
js
mov
aam
push
fisttpll
dec
out
into
inc
push
add
loopne
xlat
jns
or
push
ret
sub
mov
inc
shrl
mov
testb
lea
lock
add
les
fimull
sub
or
fmulp
or
push
jno
push
rorb
outsb
fs
mov
mov
sub
mov
rcrb
pop
cs
ljmp
jnp
pop
test
nop
dec
add
mov
outsl
inc
add
stc
sub
cmpsl
pop
jno
mov
lret
xor
das
mov
sbb
sbb
mov
fxch
test
jge
fisubrs
push
push
inc
andl
js
or
pop
fdivrs
or
jge
jp,pt
icebp
push
add
bound
mov
outsl
sub
cwtl
rclb
rcrl
fdivp
js
dec
ret
ja
jl
sub
data16
pop
les
push
and
fsubs
push
push
inc
stc
fwait
pop
push
lea
rcl
popf
bound
les
and
js
xor
lcall
popa
xchg
push
mov
cmp
xor
imul
add
dec
bswap
outsl
sub
adcb
jae
inc
mov
bnd
xchg
mov
insb
xchg
pop
add
mov
jmp
aaa
jb
add
xchg
mov
and
sbb
enter
xchg
pop
inc
bound
rclb
arpl
ficoml
in
outsl
push
mov
out
sarl
dec
mov
push
mov
into
sbb
sahf
and
push
jns
and
mov
scas
int
xchg
xor
pop
and
ja
pop
push
clc
lea
jge
push
out
push
sub
dec
cli
jno
gs
and
or
js
test
movb
insl
xor
push
xor
out
out
out
fsubs
mov
outsl
es
loope
or
adc
imul
jnp
rcr
ljmp
adc
xchg
pop
or
jno
popa
shr
xor
orl
cltd
mov
hlt
popa
xor
push
lods
mov
ja
dec
pop
cmc
cmp
punpcklbw
aam
lods
sbb
arpl
jp
lods
push
or
ret
fidivrs
sbb
or
mov
sbb
push
xlat
pop
mov
inc
pop
adc
test
sbb
mov
mov
mov
and
mov
imul
cs
int
inc
add
movsl
sbb
bound
cli
movsb
jbe
add
push
inc
xchg
in
push
add
into
and
repnz
in
mov
jg
orb
lods
and
mov
rolb
fsts
inc
cmp
xorl
xorb
or
in
mov
icebp
xor
leave
cltd
outsl
shll
fmuls
dec
iret
ss
and
cmp
dec
in
test
lods
mov
test
push
jl
mov
add
and
sbb
bound
cmovl
dec
hlt
push
mov
fs
stos
mov
add
push
clc
mov
shrb
std
add
stc
sarb
roll
bound
rcrl
insb
dec
aad
int
lret
mov
adc
loope
sub
bound
xchg
mov
sbb
ss
int3
pop
sub
lea
popf
mov
ljmp
pop
and
adc
adc
pop
or
push
inc
in
in
adc
inc
cmp
dec
hlt
pop
shll
in
jns
dec
loopne
sbb
repnz
sti
push
lods
les
xor
push
sbbl
cld
cmp
insb
out
in
test
sub
ja
mov
add
in
outsb
fistl
in
mov
push
sbb
inc
pop
rol
sub
dec
and
mov
bndstx
xlat
in
and
mov
jmp
mov
lret
outsb
shll
push
sti
ret
xchg
mulb
insl
cmp
clc
mov
fldenv
and
push
add
sarb
mov
xchg
pop
inc
push
and
clc
into
mov
int3
or
hlt
scas
push
cmp
cmp
mov
lods
lret
pop
inc
sti
mov
std
xchg
inc
popf
dec
popa
mov
jge
sbb
or
push
imul
out
imul
xchg
insl
jbe
sub
std
inc
idivb
flds
pop
mov
mov
adc
adcl
ja
test
test
xchg
sub
dec
aad
mov
and
dec
xchg
outsl
stos
and
cmpsb
cmp
mov
pusha
add
xchg
pop
lret
xor
mov
lds
cli
mov
lods
cmpsb
dec
repz
mov
loope
push
repz
mov
data16
in
xchg
xlat
cmpb
mov
imul
xor
adc
movsl
add
mov
insl
cli
or
mull
rcrl
loop
xor
pop
divl
ss
pop
mov
iret
cs
inc
inc
stos
lahf
pop
sbbb
fdivp
jo
xor
in
mov
test
stos
push
enter
xorl
jb
lret
lods
jae
inc
int3
rcl
les
shll
mov
aaa
sub
lods
jecxz
mov
fdivl
sbb
adc
mov
iret
fimull
jp
data16
cmp
das
add
add
jno
xchg
mov
loope
fwait
notl
insb
add
sbb
jno
fs
push
cli
push
outsb
clc
jnp
xorb
mov
out
xchg
std
push
sbb
mov
jge
adc
scas
shrl
rorb
sbb
inc
sti
pop
cli
pop
adcl
scas
daa
mov
mov
jl
inc
popa
out
repnz
ds
xchg
out
adc
loope
data16
or
mov
scas
sbb
sbb
mov
lret
call
push
loop
lea
icebp
dec
pop
sti
test
jg
or
test
pop
movsl
mov
repz
mov
leave
les
iret
jno
ss
mov
addr16
dec
xchg
jg
cmpsb
bound
sub
sahf
adc
sub
loope
cmp
mov
pop
and
or
xor
stc
xchg
test
mov
dec
fs
xor
xor
dec
js
mov
xlat
mov
push
call
int
mov
inc
popf
push
repz
sub
sahf
aaa
data16
pop
mov
repnz
ficoml
adc
mov
aas
es
loop
aas
mov
mov
jne
dec
jno
mov
jmp
add
aam
ret
inc
insb
fs
inc
xor
add
roll
stc
mov
and
das
cmpsl
sub
jne
loop
in
sbb
and
and
jge
dec
pop
shll
xchg
in
jg
out
stos
jae
stos
push
movsl
clc
sub
pop
rorl
mov
pop
xchg
sub
lds
dec
xor
or
or
pop
imul
dec
cltd
or
ffree
dec
xchg
or
lcall
add
pushf
lds
mull
lahf
mov
int3
mov
cld
pop
xchg
cmpsb
lock
sbb
icebp
xchg
test
out
cltd
daa
xor
arpl
cmp
cltd
pop
ja
mov
fiaddl
push
dec
mov
sti
rol
mov
cmp
xchg
icebp
adc
loope
dec
jle
dec
dec
push
subl
push
mov
xchg
cmp
sub
enter
jecxz
movsl
aam
cmp
push
pop
mov
pop
enter
pop
lcall
notb
mov
daa
pop
jg
xor
push
andb
or
shr
lods
jo
fld
ds
xlat
push
add
cmpsb
repnz
cmpsb
or
xor
jae
aas
mov
mov
js
xor
lea
ret
inc
jnp
add
daa
adc
daa
inc
adc
out
pop
popf
andb
mov
cmp
clc
repnz
shlb
cmp
add
mov
cltd
pop
call
pop
or
mov
loop
imul
lret
pause
dec
or
lcall
mov
jno
inc
lds
sbb
mov
adcl
jne
sub
out
push
sahf
push
cmp
fs
lods
sbbl
movsb
cmpsb
and
jbe
mov
cmpsl
push
outsb
inc
inc
pop
sarb
outsb
xchg
int
pop
xor
dec
repnz
mov
into
adc
pop
pop
std
or
adc
or
aad
div
popf
in
sub
iret
mov
xchg
jmp
cwtl
mov
and
mov
or
jmp
inc
push
mov
or
cmpsl
inc
add
int
xor
push
add
add
and
outsb
je
outsl
fsts
push
daa
loopne
fcoms
imul
xchg
dec
mov
cli
mov
cmp
aaa
lret
or
jg
and
std
and
fldt
lcall
cmc
fwait
cmp
cld
jne
rcll
mov
push
cmp
push
jmp
in
pop
xor
sarl
pop
das
push
fyl2x
and
inc
xchg
cli
fs
inc
push
cmp
repnz
fldl2e
xlat
in
mov
mov
xor
jg
std
mov
adc
mov
imul
scas
pop
pop
rcll
xchg
cmpsl
pop
daa
stos
sbb
or
sbb
clc
xchg
dec
movsb
rcrb
xchg
daa
inc
dec
mov
out
push
daa
xchg
ljmp
shrl
scas
or
inc
adc
pop
adc
cmp
scas
lcall
push
imul
das
mov
sub
adc
fcomp
xchg
dec
sbb
rcr
adc
jnp
test
add
negl
cmp
xor
lret
out
xchg
mov
mov
adc
iret
jg
icebp
sti
sbb
jnp
or
cmp
int3
mov
iret
sbb
xor
inc
cli
mov
cmp
test
and
sbb
mov
or
arpl
xchg
sub
subb
xchg
and
dec
jl
mov
xchg
aas
adc
notb
scas
cmp
gs
loope
cmpb
pop
mov
cmp
xchg
xlat
mov
mov
push
pusha
das
mov
cmpsl
inc
jo
enter
add
in
loopne
call
fwait
test
push
sbb
dec
jmp
scas
mov
iret
adc
std
add
xor
stos
adc
sbb
dec
cmp
lock
or
fucomip
mov
xor
sbb
and
repnz
fcom
int3
push
ret
push
icebp
sub
movsl
sbb
jp
pop
pop
dec
pop
mov
jecxz
inc
movsl
pop
in
outsl
xchg
scas
pop
addb
fs
aas
test
push
dec
movsb
in
sbb
dec
dec
sbb
sub
lret
jl
pop
jo
lcall
jge
aam
dec
mov
js
push
mov
ja
inc
popa
mov
pop
stc
jp
and
rclb
jecxz
inc
mov
enter
lods
inc
imul
sbb
sub
imul
pop
add
inc
or
mov
xchg
mov
test
movsl
bound
xchg
pop
adc
test
jnp
repz
mov
mov
jo
popa
rorl
xor
sub
or
in
arpl
mov
inc
xchg
jns
inc
jmp
or
add
shl
filds
pusha
xchg
aam
inc
insl
mov
sbb
mov
shrl
in
inc
ds
imul
mov
cmpl
fiaddl
ss
stc
sub
in
cmpsb
push
lea
dec
jge
and
adc
es
test
jno
movsb
aas
adc
dec
jae
cmp
mov
xor
mov
sti
repz
outsb
push
xchg
loope
cmp
dec
inc
or
popa
xor
pop
adc
push
cmp
fistpll
cli
mov
clc
pushf
jnp
push
add
add
push
lret
clc
fs
decb
mov
dec
fcoms
xabort
imul
pushf
jmp
sub
ror
fcompp
jmp
loopne
fldcw
adc
movsl
je
ret
jbe
xchg
add
push
ret
sti
add
mov
insl
aad
icebp
fnstenv
cld
pop
mov
mov
xor
pop
mov
test
and
pop
out
sbb
dec
lret
inc
enter
std
repz
push
bound
xor
push
inc
pop
jle
icebp
inc
or
into
jg
and
pop
call
mov
mov
aad
sbb
inc
xlat
push
pop
push
jge
ret
adc
dec
mov
and
in
lret
or
sub
jecxz
int
sbb
jbe
leave
hlt
das
fmull
and
ret
movsl
dec
adc
push
imul
sub
fidivrl
out
shll
sub
cmp
ds
cmp
arpl
xchg
ds
push
in
push
fldl
dec
cmpsl
jne
movsb
dec
push
push
and
xchg
icebp
lock
push
xchg
in
mov
xlat
pop
xchg
pop
jle
dec
sub
mov
fld
imul
and
xchg
add
js
xor
push
fdivl
out
push
mov
test
popf
js
in
add
dec
sbb
imul
dec
and
in
adc
rcll
pushf
xor
mov
jae
pop
out
or
push
roll
outsl
pop
pop
insl
mov
pop
xchg
mov
add
scas
push
ljmp
inc
add
out
fwait
es
mov
and
loop
xor
hlt
out
cli
getsec
fstl
inc
dec
testl
push
mov
mov
push
mov
mov
pop
sbb
xor
in
test
push
pop
fsubrp
lcall
dec
sbb
jmp
xchg
or
xor
dec
push
movsl
pusha
mov
or
pushf
fcomps
add
xor
or
xor
out
pop
sbb
cwtl
jb
lock
stos
sub
scas
mov
jnp
push
rcll
xchg
pop
pop
data16
dec
mov
and
out
shrl
into
fadd
xchg
xor
mov
scas
pop
or
mov
lcall
lcall
imul
mov
pop
sub
lahf
and
cmp
xor
pop
jb
test
add
fisubs
leave
mov
in
cmp
xorl
dec
loop
sub
es
adc
jbe
cli
mov
adc
add
test
push
loope
xchg
out
jge
aad
js
jl
mov
cmpl
adc
sbb
test
pop
cmp
jmp
aad
ret
jmp
sub
adc
sar
or
mull
mov
pushf
push
mov
xchg
insb
sbb
fs
sbb
jle
je
inc
cmp
adc
in
sar
mov
mov
out
pop
jns
out
jp
pop
pop
fisubs
leave
cs
stos
xor
pop
aaa
out
mov
mov
insb
xor
rcrb
xor
roll
adc
lcall
pop
insl
in
pop
scas
orb
mov
scas
lret
rcrl
sbb
xchg
xchg
mov
das
fbstp
jnp
stos
js
cltd
sarl
ja
mov
aam
cwtl
aas
dec
jo
jns
pop
mov
jbe
addr16
mov
mov
loope
jl
lea
shrb
rcll
divl
and
jne
xchg
cmp
cltd
outsl
sbb
std
fcmovnb
mov
lahf
arpl
movsl
pop
sar
jl
fiadds
cmp
rolb
out
inc
add
dec
inc
cmpsb
out
xor
mov
xchg
jmp
scas
pop
es
or
xchg
add
pop
and
dec
mov
cli
stos
scas
mov
or
cmp
lds
cmp
repnz
jmp
adc
xor
sbb
hlt
inc
add
popf
mov
jns
insb
dec
mov
out
fs
loopne
outsl
mov
loope
adc
js
jbe
sarb
adc
test
mov
out
das
movsl
add
mov
inc
xchg
sub
adc
pop
cmp
xchg
pop
mov
jns
adc
inc
xchg
sbb
inc
sub
pop
inc
dec
hlt
or
push
xchg
cmp
dec
pusha
xchg
push
jne
pusha
inc
xor
adc
test
vpshufd
cmpsb
xchg
pop
dec
xor
jns
and
scas
push
mov
jecxz
out
mov
es
mov
outsl
std
inc
lds
lahf
push
cs
inc
fisttpl
adc
pop
fstps
cmp
stos
call
mov
sbb
in
jb
or
sarb
inc
adc
cmpsb
pop
popf
jge
ret
movb
or
loop
mov
sub
mov
sub
shll
xlat
cmp
imull
std
lds
fstps
xchg
pop
lret
jo
bound
sub
jecxz
sarl
xchg
sahf
dec
xor
cmp
xchg
dec
rclb
pop
into
push
xchg
add
or
into
out
cmp
dec
dec
ljmp
and
loop
and
fistl
pop
aad
test
mov
jno
cmpsl
ficomps
lret
mov
mov
test
cmp
jecxz
push
faddp
inc
mov
daa
cmp
movsl
lds
rorb
out
push
push
in
xchg
iret
sub
or
imulb
push
inc
xor
iret
sti
xor
sti
xor
pop
push
push
mov
cmp
push
ja
push
lds
dec
insb
int3
leave
dec
imul
pop
gs
and
int
outsb
cwtl
bound
gs
rorb
or
test
adc
jp
popa
and
movsb
pop
js
arpl
mov
inc
mov
mov
xchg
mov
aad
push
xlat
gs
bound
lret
fists
fistl
rcrb
push
dec
stos
pop
xor
imul
pop
inc
push
mov
mov
sub
jmp
inc
pop
fiaddl
gs
enter
data16
mov
pusha
int3
mov
mov
sub
insl
arpl
or
and
repz
jecxz
xchg
lea
mov
jae
arpl
or
and
repz
jecxz
xchg
lea
mov
jae
arpl
or
and
repz
jecxz
xchg
lea
mov
jae
arpl
or
and
pop
in
jecxz
in
or
push
pop
inc
pusha
popl
mov
cmp
mov
das
call
outsl
fnstsw
cmp
mov
dec
out
pop
mov
add
aas
in
cmp
fnstsw
xchg
mov
cmpsl
jge
xor
in
psrlw
push
cld
dec
int
mov
adc
out
dec
lret
out
cmp
dec
or
adc
sub
cmp
mov
aam
nop
in
push
and
xchg
out
cmp
adc
add
lock
loope
jg
shrb
add
xchg
sub
loopne
inc
or
cmp
mov
jb
arpl
adc
jo
outsl
cmpb
roll
jo
dec
in
insb
iret
or
fwait
pop
jp
out
out
loope
shlb
pusha
jae
fcmovu
nop
and
or
pusha
repnz
xchg
paddd
insl
repz
loopne
xlat
sahf
xchg
dec
std
dec
popf
cmp
cli
test
cmp
xor
enter
push
addr16
jne
rcrb
mov
push
cwtl
cmp
mov
dec
out
in
pop
comiss
push
andl
push
jecxz
int
mov
in
dec
lret
add
or
int3
pusha
cld
pop
cld
pop
test
xchg
pop
mov
out
testb
rolb
sbb
and
cld
jp
dec
icebp
cmp
mov
push
lahf
jge
pop
cli
sub
jge
dec
out
pop
ljmp
das
popf
aas
in
dec
std
pop
int
fnstsw
cmp
mov
dec
out
pop
ljmp
das
popf
aas
in
dec
std
pop
int
fnstsw
stc
mov
inc
adc
and
loopne
xchg
or
stos
aaa
inc
push
mov
sbb
fisubl
cmp
fdiv
sets
cmp
sub
sub
ret
or
pusha
push
xor
xchg
cltd
push
icebp
movsl
jl
test
mov
push
sbb
adc
and
stos
loopne
push
sub
dec
add
sub
in
ljmp
repz
cmpsb
enter
rcll
test
pop
mov
sbb
sbbb
mov
pop
lahf
aad
sahf
xor
push
xchg
xor
aas
pop
cmp
cli
mov
jnp
lret
rorl
and
negl
mov
mov
in
mov
dec
sar
jle
pop
out
fldenv
mov
bound
jbe
dec
jo
in
loop
sbb
sub
mov
clc
mov
test
sbb
inc
test
push
mov
xchg
fldt
sub
hlt
xchg
mov
cli
out
iret
daa
xor
dec
imul
adc
enter
popa
mov
add
xchg
nop
testl
or
rcr
lret
mov
rcrl
add
mov
imul
xor
or
pop
out
ret
sti
cltd
lret
sub
push
cltd
push
and
dec
xor
mov
add
jecxz
push
test
add
pop
add
out
pop
sub
fiadds
sar
dec
es
mov
cmpsl
mov
rcr
pushf
push
and
mov
out
push
outsl
stos
test
and
les
iret
int3
es
rorb
mov
pop
dec
mov
aam
ss
rcll
xchg
shlb
dec
push
mov
xchg
ffreep
bound
pop
in
cmp
adc
ss
xchg
lods
cmpsl
jmp
mov
dec
xorl
adc
subl
in
outsb
push
sub
das
loop
lret
dec
sub
in
push
dec
inc
pop
sub
mov
scas
jae
sbb
popa
xchg
mov
pushf
fsts
mov
outsb
in
lods
call
mov
pop
stos
jnp
test
jmp
mov
movsl
xor
and
lods
cli
lods
mov
pop
push
xchg
xchg
xor
out
lea
sbb
mov
aas
dec
pop
inc
mov
sub
call
shrb
or
insb
dec
inc
mov
adc
enter
ss
sarb
add
mov
out
jge
test
imul
sbb
cmp
outsl
cmpsb
movsb
pop
scas
pushl
xorb
aad
pop
cmpsb
pop
ret
xor
push
sub
push
sbb
mov
pop
push
cwtl
adc
mov
adc
int
loop
iret
pop
sahf
push
xor
sbb
and
and
fwait
xlat
shl
fbld
out
aad
xor
ja
jecxz
and
rolb
into
pop
sub
jecxz
or
cmp
adc
push
mov
stc
add
lahf
call
lods
mov
mov
or
cltd
roll
ljmp
or
movsl
imul
xchg
dec
dec
push
pop
xchg
enter
push
pop
pop
in
jge
pop
mov
movsl
int3
jae
mov
icebp
loopne
fmull
test
pushl
sbb
js
roll
cltd
xor
cld
insl
pop
mov
into
lcall
rcll
pop
add
shrl
jmp
aam
push
mov
icebp
pop
ss
or
movsb
cltd
popa
in
int
cmp
shl
into
cmp
or
sub
ret
sahf
dec
rcrb
adc
mov
daa
cwtl
jmp
stc
enter
xchg
or
int
sbb
inc
pop
loope
cmpsl
rcrb
mov
sub
mov
fcompl
lret
jmp
pusha
xchg
jno
ja
push
repz
sub
sbb
pop
dec
xchg
pop
and
insl
or
lods
in
in
cli
xchg
jl
shl
std
fsubrs
and
in
jo
popa
scas
sub
aas
sbb
lcall
inc
shll
inc
cld
inc
stos
jbe
sbb
mov
adc
mov
mov
mov
add
fidivl
lods
push
push
inc
lea
push
push
xor
add
jb
xorl
clc
xor
mov
cs
loope
dec
sub
ret
jg
adc
shrl
out
jg
add
lret
mov
dec
jge
cmp
push
test
or
add
adc
and
pop
fnstenv
fmul
dec
in
jbe
das
mov
cld
dec
shr
ds
mov
dec
pop
or
jl
daa
mov
outsl
inc
lret
mov
dec
call
add
jp
mov
add
dec
sub
add
addl
pop
mov
andl
mov
or
dec
inc
cmc
jl
out
pop
push
lods
mov
scas
jg
lock
or
cmp
das
dec
gs
mov
pop
dec
mov
ss
jl
mov
xor
mov
mov
xor
ret
fldcw
jl
cmp
pop
sbb
sbb
inc
fxch
stos
flds
sub
cltd
cmp
mov
pop
outsb
mov
ret
push
and
outsb
lcall
dec
sub
adc
or
xchg
pusha
aaa
push
push
imul
insb
push
into
mov
jnp
mov
xor
fldl
mov
sbb
ljmp
stos
add
shr
xlat
aam
or
push
out
int3
insl
cmpsb
and
insb
jg
std
jl
mov
or
xchg
jecxz
scas
cli
ja
cmpb
out
xor
xchg
add
sbb
cli
fs
mulb
mov
cmp
jg
jmp
jmp
or
popf
cmp
mov
repz
imul
push
cmpsl
xor
add
cmc
cltd
push
sub
into
movsb
pushf
jp
pusha
sub
in
adc
pop
xor
cmp
pushl
loop
in
rorl
adc
mov
rcrl
push
sbbb
adc
repz
icebp
pop
sarb
sub
push
jnp
dec
into
mov
into
add
pop
filds
pop
ja
mov
lods
and
sub
into
pop
dec
push
xchg
jg
xchg
pop
fidivl
pop
lret
dec
pop
and
ds
mov
hlt
add
lahf
xor
xor
mov
insl
push
adc
dec
repnz
jb
inc
inc
push
mov
jns
test
pop
inc
jb
cmpsb
mov
inc
xor
imul
dec
xor
jbe
jo
sbb
rorl
push
adc
icebp
sahf
lock
dec
int3
out
insb
stc
enter
inc
xchg
lea
push
dec
mov
fistpll
js
pop
jl
push
dec
lea
les
push
cmp
test
lret
fisubs
pop
ficoms
or
out
and
ror
ja
dec
xor
int
xlat
popf
add
shlb
fldl
sub
mov
leave
push
fucomp
shlb
add
ds
inc
call
insl
in
mov
cli
out
jno
xchg
scas
cmp
call
addr16
stc
out
pop
adc
ret
insl
mov
cs
cmpsl
jle
mov
mov
out
adc
lahf
ds
cwtl
hlt
mov
mov
dec
dec
adc
iret
rcll
jae
or
sub
test
movsl
jae
lahf
sub
mov
in
mov
cli
adc
lods
je
and
movq
add
fdivs
cmp
inc
push
ljmp
add
mov
adc
mov
ljmp
test
pushl
xchg
das
cmpsl
inc
pop
jge
push
aad
pop
pop
scas
test
xchg
push
adc
lods
cli
lods
arpl
mov
cmp
roll
pop
in
xchg
sbb
hlt
and
push
dec
sar
sti
ficoml
lcall
adcl
out
jno
lcall
fmull
insb
cmp
gs
les
test
mov
inc
clc
sbb
iret
xor
popf
popa
fcmovnu
mov
push
cs
adc
inc
cwtl
adc
sub
mov
aad
pop
test
pop
loop
data16
jmp
mov
dec
das
mov
inc
pushf
int
je
je
gs
pop
mov
outsb
bound
popf
sub
pop
push
into
iret
out
push
insl
pushf
and
idivl
es
ficompl
push
add
hlt
icebp
mov
mov
test
lret
cltd
jg
mov
mov
out
ja
ljmp
js
cmp
jno
dec
std
xchg
mov
inc
hlt
sub
clc
inc
ja
addr16
mov
mov
xor
fsubrl
test
cwtl
fists
mov
mov
or
aad
mov
inc
call
popa
xchg
sbb
cmp
sub
mov
push
scas
ror
mov
out
lods
bound
rorb
xchg
cmpsb
test
test
dec
aaa
std
testl
xor
adc
inc
fsubs
xor
repz
jno
mov
sahf
inc
dec
add
push
mov
sub
gs
and
inc
mov
mov
test
cs
arpl
sbb
xorl
or
and
ja
mov
xor
cmpb
push
mov
push
nop
xchg
push
sbb
mov
lret
xor
xchg
lds
and
rcrl
push
ss
orb
hlt
adc
gs
arpl
aas
add
lods
and
jecxz
lds
xchg
and
fistpll
int
mov
and
xor
pop
addr16
xlat
in
xchg
cmpsb
mov
clc
add
pop
out
xor
sub
sub
sub
pop
pop
icebp
add
sub
stos
push
icebp
cmpsl
imul
ret
jl
imul
jno
add
dec
and
shll
mov
test
sub
jl
inc
mov
or
loopne
xorl
sub
jp
dec
or
xchg
inc
rorb
adc
mov
pop
dec
outsb
pop
out
push
mov
insb
sub
dec
jae
rorl
mov
xlat
mov
mov
outsl
mov
mov
mov
jmp
test
jae
push
lock
shlb
mov
inc
lret
repz
out
enter
xlat
mov
gs
xchg
imul
jo
cmp
popa
divl
mov
scas
mov
add
jl
mov
add
inc
cmp
sub
sarb
or
sub
mov
mov
hlt
pop
arpl
jmp
xorb
xor
enter
fistl
mov
andb
loope
pusha
lret
popa
dec
inc
es
in
in
sbb
cwtl
les
in
sti
adc
adc
mov
xchg
dec
xchg
xlat
test
cs
sbb
lret
lds
push
ss
mov
mov
gs
xchg
repz
cmp
movsb
adc
dec
mov
pop
xor
xor
int3
sub
movq
fwait
push
jb
xchg
mov
mov
fisttps
addl
out
fnstsw
es
sub
stos
mov
fistl
repz
sbb
daa
sub
sbb
mov
ljmp
add
int
dec
ss
push
insl
mov
lret
xchg
adc
insl
loope
mov
mov
sbb
add
repnz
std
xchg
adc
and
and
test
js
or
ja
mov
mov
push
or
and
test
mov
aas
mov
into
mov
jle
xor
push
inc
xchg
push
mov
pushf
push
cmpsl
ret
sub
lcall
jne
jmp
rcl
xchg
jnp
sbb
dec
dec
addr16
jp
ret
out
mov
popa
jmp
sub
lods
and
inc
ficoml
jne
xor
mov
aam
jp
out
xlat
and
dec
sub
adc
rorb
ret
add
stos
cltd
jbe
xor
out
jp
outsl
and
sbb
lret
mov
push
or
daa
js
inc
in
xchg
push
imul
mov
or
push
out
push
enter
decb
stos
movsl
or
push
aaa
mov
loopne
fsub
int
sbb
sub
pop
imul
pop
jns
outsl
cmp
xchg
dec
out
repnz
frstor
adc
pusha
orl
adc
mov
sub
hlt
dec
icebp
mov
cmp
sub
jle
cmpsb
pop
ss
std
mov
lods
jecxz
jno
xchg
or
push
cmpl
or
out
push
sysenter
mov
movd
pop
pop
mov
push
scas
lret
or
stos
int
lret
outsb
idivl
lock
jmp
xchg
cwtl
push
push
insb
cmp
push
mov
leave
out
inc
rcrb
xor
mov
mov
cmc
xor
cmc
ljmp
push
in
scas
mov
dec
inc
cmpsb
mov
fucomp
sbb
add
jns
cmp
lcall
aas
dec
dec
mov
insl
jl,pt
movl
loop
cli
jecxz
subb
bnd
andl
sub
addr16
lret
cltd
aaa
mov
je
daa
mov
cmp
pop
sub
cmp
mov
aaa
or
data16
es
mov
push
iret
sub
xchg
and
shrl
fwait
test
jp
rorb
mov
jne
cmp
mull
aam
or
repnz
daa
rolb
jle
lahf
cwtl
mov
roll
jge
loope
jle
cmp
xchg
lret
mov
cmp
out
ds
pop
clc
cmp
mov
xchg
jnp
movsb
fadds
sub
pop
mov
xlat
push
pop
dec
pop
hlt
hlt
hlt
loope
int
call
cmp
movb
rorl
js
clc
test
add
xchg
out
jns
xchg
lea
jmp
dec
pusha
cmp
cmpsb
test
mov
shlb
sbb
rorl
shll
mov
adc
fbld
pop
out
push
test
inc
in
out
mov
loop
mov
sbb
lahf
sti
ljmp
or
stos
lahf
mov
jb
pmullw
sti
pop
and
jge
call
int
pushf
and
fisubl
jmp
jmp
sbb
push
cmc
inc
and
push
sub
sub
add
inc
fcoml
xchg
xchg
mov
imul
xchg
icebp
or
test
jae
add
jmp
cmpsb
enter
cmp
popf
jb
or
fbstp
adc
in
pmaddwd
xchg
pop
xchg
lods
add
negl
and
nop
repnz
xchg
fs
mov
mov
shrb
sub
fadds
mov
dec
outsl
jge
out
xlat
add
jg
sahf
negb
mov
pop
or
aad
movl
stc
or
ss
jne
lret
jl
divb
pop
mov
mov
xor
mov
jmp
incl
lods
push
mov
das
bound
fimull
pop
popa
imul
cmp
sbb
xchg
push
mov
sub
or
mov
jle
cmpsl
pop
pop
mov
xchg
cwtl
mov
or
aas
jo
and
push
or
cmp
add
pop
and
lds
ror
mov
cmpsb
mov
mov
mov
ja
subb
inc
dec
fnstsw
jp
mov
push
fadd
jp
aad
xlat
sbb
mov
fwait
addr16
test
dec
ljmp
mov
lcall
mov
ja
mov
stos
imulb
inc
and
sbb
push
adcb
jle
mov
and
rorb
dec
shl
dec
inc
lds
aaa
mov
xchg
pop
arpl
repz
jno
pop
and
sbb
mov
inc
fwait
arpl
mov
scas
mov
push
mov
iret
adc
mov
pushf
movsl
int
jno
mov
jae
adcb
inc
insb
sub
push
fwait
shl
call
pxor
cmp
dec
xor
stc
push
or
cs
rcrb
mov
xor
data16
mov
leave
std
lods
mov
jb
mov
dec
rorb
rep
lds
pop
js
ds
test
arpl
or
test
mov
mov
mov
sarb
lods
ret
pop
in
ds
jbe
repz
pusha
popf
fisubrs
mov
bound
pop
outsl
test
aad
jl
in
sbb
xchg
sub
les
out
bound
jbe
sti
pop
jg
je
jle
mov
mov
sub
mov
dec
pop
cmp
mov
cmpsl
pushf
dec
pop
or
push
js
mov
inc
cmp
fisubrl
mov
mov
mov
sub
and
cmp
decl
jge
push
cmp
das
pop
ds
negb
loope
cmp
rclb
hlt
jns
call
jb,pt
xchg
push
mov
movsl
fsubrl
push
test
loope
test
jl
nop
add
mov
repz
loopne
mov
xor
inc
sbb
jmp
or
aam
inc
repz
mov
sub
jmp
push
xorl
repz
and
test
jmp
mov
leave
shll
dec
adc
push
jmp
pop
dec
cmp
negl
jmp
inc
sub
popa
enter
mov
mov
loopne
or
and
hlt
roll
outsl
aaa
cld
mov
mov
mov
cmpsl
test
sbb
pop
xchg
and
xacquire
ffree
clc
dec
imul
mov
mov
jb
dec
js
or
in
or
imul
mov
aam
adc
sbb
sbb
sbb
lret
pop
outsb
xor
push
daa
add
int
leave
add
mov
xlat
insb
pop
mov
roll
nop
mov
sbb
mov
fnstenv
push
loope
fsubs
sub
dec
sub
fwait
and
push
fcoml
cwtl
pop
loop
push
xor
jmp
pop
ljmp
repnz
orl
pop
mov
xor
repz
cmp
pop
xchg
and
adc
and
inc
cli
out
sub
fcmovu
rcll
mov
out
fsubrp
xor
cmp
int
mov
mov
in
cmc
or
xor
xchg
push
into
cli
mov
cmpsb
mov
je
mov
shlb
sbb
adc
inc
into
mov
sub
jnp
movsl
jnp
and
cmp
je
jg
cmp
jnp
sbb
mov
xchg
mov
pushl
clc
or
jno
mov
pop
aam
inc
sub
addr16
lcall
mov
and
inc
jns
in
mov
xor
sbb
jb
aaa
or
cmpsb
std
mov
dec
jmp
pushf
xor
mov
leave
out
lret
into
mov
push
push
pop
pop
push
xor
orl
push
xchg
leave
jb
rcrb
mov
outsl
cs
xor
aad
adc
into
xchg
sub
mov
inc
fs
add
and
lea
repnz
or
jl
xchg
mov
xchg
loop
into
pop
mov
push
fmuls
leave
cmp
psubq
jns
dec
stc
fsts
les
int
clc
subl
push
in
dec
ds
dec
ss
add
jecxz
xchg
rcrb
notb
mov
add
mov
inc
jecxz
testl
jmp
fnstsw
mov
sbb
icebp
shll
and
fcoms
push
or
sub
sub
or
mov
xor
fdivrp
mov
daa
sbb
adc
inc
arpl
icebp
jle
xor
mov
ljmp
sub
xlat
mov
sbb
mov
and
icebp
es
call
addr16
jp
movsb
nop
sahf
inc
push
add
aas
shrb
ret
mulb
leave
xchg
adcl
jle
mov
aaa
aam
fwait
cmp
clc
in
adc
mov
bound
cmpsl
fldt
jns
sub
test
insb
and
lea
and
test
cmp
cld
mov
add
jge
push
push
push
add
fwait
add
filds
jbe
cmp
jge
dec
popa
lret
dec
xchg
loopne
or
inc
and
imul
test
sbb
test
xor
pop
lods
lahf
sbb
jge
dec
out
pop
ljmp
das
popf
aas
in
dec
std
pop
int
fnstsw
cmp
mov
dec
out
pop
ljmp
das
popf
aas
in
dec
std
pop
int
fnstsw
ds
sbb
iret
jns
dec
out
pop
ljmp
das
cltd
cmp
dec
in
leave
imul
xor
stos
xor
fisttps
fnstsw
lods
cmovb
lcall
add
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sub
lret
push
xchg
inc
or
pop
push
add
add
jb
inc
add
add
push
add
add
add
add
mov
dec
add
xchg
add
add
mov
add
add
add
add
add
insl
add
sub
and
flds
mov
add
add
add
add
add
add
add
add
add
lea
mov
xor
add
lret
add
or
add
add
add
add
add
add
add
add
inc
add
jmp
add
add
add
add
add
add
add
jnp
xchg
add
add
add
add
add
add
add
add
jno
icebp
add
add
xor
in
add
add
add
add
xor
add
add
add
add
add
add
add
push
xor
add
addb
add
mov
out
add
cltd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
flds
xchg
add
add
movb
add
sbb
add
add
add
jno
push
add
add
data16
add
pop
add
add
or
dec
add
add
add
dec
add
add
add
add
pop
add
add
add
add
add
add
mov
add
add
add
add
inc
add
call
add
add
stos
add
xor
add
flds
xor
dec
add
add
add
add
add
outsb
add
addb
add
add
loop
add
add
add
add
xor
add
add
xor
jnp
arpl
popa
add
add
add
roll
add
inc
add
add
push
lds
ds
add
add
add
push
add
add
add
or
push
add
add
add
add
and
pop
add
add
add
ds
add
add
add
pop
add
add
add
add
add
add
push
add
jnp
sbb
jl
das
add
add
add
add
add
add
add
add
insl
add
add
add
add
add
add
add
add
add
add
add
adc
daa
add
addl
add
jmp
add
xor
push
add
mov
jmp
add
jnp
outsb
add
add
mov
add
outsb
add
sbb
add
add
add
add
add
push
add
popa
add
push
in
adc
sbb
add
pop
add
add
add
add
add
add
add
add
repnz
add
movb
add
movb
add
sub
sbb
or
jbe
or
xor
sub
call
add
add
add
repz
add
push
add
add
add
add
add
add
add
sub
and
pop
add
add
add
dec
add
add
add
add
mov
cltd
add
add
add
add
add
adc
add
mov
or
cli
push
stos
stc
clc
dec
sub
ljmp
fldenv
repnz
adc
inc
mov
pusha
push
push
mov
ljmp
mov
mov
adc
cmp
test
clc
outsl
cli
sbb
fwait
cwtl
push
mov
inc
in
xor
rorb
xlat
cld
jno
sub
data16
shll
inc
and
and
push
add
pop
sbb
or
lods
lock
sbb
inc
out
rol
out
mull
pop
mov
sbb
nop
cltd
subl
hlt
adc
pusha
and
repz
ret
pop
loopne
jb
ds
dec
mov
mov
test
jle
mov
add
and
xlat
xor
cmp
jecxz
ffree
test
out
xchg
jle
cmp
sahf
pop
daa
in
add
adc
mov
jno
loop
rolb
ja
adc
lods
mov
test
and
fbstp
mov
inc
cmp
imul
jb
xor
jne
ja
jl
ljmp
xchg
mov
clc
cmp
mov
jle
lds
and
lds
fildll
jmp
in
lcall
pushf
xor
adc
gs
xor
fistl
inc
pushl
pop
daa
rcrl
inc
jne
iret
mov
into
mov
sbb
in
and
pusha
mov
imul
xchg
push
dec
mov
and
sbb
movsl
subps
cmp
mov
xor
or
sti
jp
int3
mov
push
jge
dec
mov
cmp
add
cmp
cmpsb
scas
jae
ss
out
aas
aam
je
dec
iret
and
pop
mov
sti
xor
in
es
push
in
movsl
xor
arpl
lea
ss
in
sbb
clc
sar
outsl
pop
adc
lods
ja
sbb
jge
mov
cmp
lret
xchg
mov
mov
fisttpl
cltd
lcall
push
adc
shll
ret
cwtl
lea
sbb
or
jmp
push
push
push
mov
arpl
sarb
aad
fistpl
mov
pop
popf
cmp
leave
push
repnz
sahf
mov
sub
mov
push
enter
dec
nop
or
inc
rcrb
popa
pop
inc
and
dec
test
decb
sbb
mov
outsb
xlat
mov
and
jp
outsl
adc
mov
in
out
jb
into
or
gs
mov
das
fdivl
sbb
aas
adc
rep
lcall
into
sub
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
