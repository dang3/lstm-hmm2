int
test
add
mov
pushf
adc
insb
ss
or
mov
adc
sti
jne
fisttps
and
dec
push
paddusb
mov
scas
es
xor
push
adc
xor
std
mov
inc
sub
push
int3
and
pop
cmpb
sub
jl
add
incl
in
or
add
push
jnp
ljmp
call
mov
push
mov
push
call
pop
ret
das
sbb
mov
push
inc
add
movl
xchg
data16
inc
xor
out
xchg
in
or
in
aas
mov
shl
imul
mov
out
sbb
jl
out
and
sbbb
mov
or
mov
adcl
adc
sti
add
mov
xor
ds
xchg
fdiv
inc
mulb
ss
addr16
xchg
pop
xor
pop
les
nop
cld
sub
pop
roll
xchg
inc
stos
ficomps
pop
inc
push
xor
lcall
and
mov
mov
xchg
or
mov
cld
or
mov
outsl
push
and
push
push
rclb
jle
push
stos
xchg
inc
leave
dec
enter
dec
xor
dec
call
xchg
and
push
mov
push
dec
xchg
or
push
out
and
fs
jle
inc
movsl
or
and
cmc
push
sahf
mov
xchg
movsl
push
jp
es
push
pop
mov
xchg
xchg
movsb
loope
stc
push
xor
scas
xchg
or
xchg
push
shlb
stos
push
fs
jle
xor
push
das
push
and
loope
ret
pop
sub
xchg
pop
rolb
cmp
clc
mov
push
jnp
xor
nop
std
ss
int3
aas
xor
add
dec
xchg
rcrb
cld
jecxz
push
xor
incb
fmul
xchg
and
jo
clc
xlat
dec
jle
or
arpl
fs
sbb
repnz
sub
dec
xchg
inc
mov
push
xor
fs
iret
cs
xchg
and
es
ss
pop
pusha
addr16
or
scas
popa
cs
push
in
inc
fsts
mov
sahf
lret
xor
enter
fs
stos
or
sbb
in
leavew
nop
cld
sub
dec
xchg
inc
in
mov
push
stos
int3
rcrb
xchg
and
cmpsb
cltd
dec
into
push
fidivrl
or
mov
imul
sbb
mov
mov
and
sub
outsb
xor
loop
addr16
cld
sub
outsl
xor
in
leave
jo
aas
xchg
or
and
dec
xor
jb,pt
and
push
pushf
xor
pop
jae
or
mov
test
je
jbe
jge
pop
cwtl
jae
xor
sbb
xor
pop
or
push
mov
push
movl
add
test
je
mov
push
call
add
cmp
je
mov
add
mov
mov
add
sbb
shr
adc
jge
add
inc
cld
push
sub
rolb
jmp
jmp
xor
in
mov
in
or
inc
adc
clc
popa
add
push
leave
je
push
add
mov
mov
mov
hlt
push
dec
push
dec
or
dec
clc
mov
mov
jl
sti
push
clc
cmpl
jmp
mov
add
movb
imul
scas
jnp
outsl
push
push
insl
push
in
fnstcw
and
cmp
dec
cld
and
aas
sub
call
call
add
push
push
js
inc
clc
push
fst
push
cld
mov
push
mov
push
mov
push
call
movl
decl
add
or
shl
jne
cmp
jae
mov
imul
add
imull
pusha
add
push
cltd
sti
outsb
dec
clc
push
cld
push
call
cmpsw
mov
add
push
movl
insl
push
shrl
aam
adc
pop
cmp
or
test
mov
je
les
lea
push
aam
clc
xor
and
xor
xchg
jg
dec
cld
mov
lea
mov
std
fistpl
cmp
test
jmp
mov
addr16
and
shll
fidivl
push
call
push
or
jo
ret
das
sub
pop
add
push
andb
fs
cld
push
inc
push
inc
test
cmpsl
or
subl
or
das
push
sub
xor
lea
jb
lea
nop
jb
fs
movl
push
jne
lea
faddl
push
mov
bound
and
sbb
cmp
call
adc
or
push
hlt
jge
mov
sti
inc
or
test
enter
mov
mov
push
call
push
lea
test
sti
jnp
mov
adc
jmp
test
sti
fcomi
mov
add
xchg
add
inc
add
les
call
insl
clc
sti
in
or
or
xchg
ja
ja
add
mov
adc
test
push
push
sub
gs
faddl
push
sbb
popa
addr16
or
pop
lea
push
mov
dec
mov
test
xchg
ret
std
gs
std
fwait
lea
push
das
inc
hlt
add
mov
jmp
sbbl
push
mov
dec
fwait
bound
ret
inc
into
push
outsl
fmuls
add
xchg
sub
xchg
testl
movnti
add
add
ds
push
adc
jnp
add
aaa
sbb
or
sbb
int3
jp
call
jnp
nop
sbb
in
aas
and
pop
and
mov
ljmp
push
inc
or
dec
fwait
push
or
fucomi
repnz
sbb
jo
int3
ret
or
cwtl
pop
fs
filds
test
mov
fcompl
push
std
sbb
call
push
lea
gs
push
loopne
jl
outsl
push
mov
pop
xchg
inc
jmp
jbe
divl
or
push
add
dec
clc
mov
dec
mov
push
or
or
ffreep
fcom
dec
add
push
test
out
decl
xchg
adc
xchg
mov
dec
xor
inc
pop
into
je
mov
ss
sbb
sbb
mov
inc
or
push
and
sbb
or
data16
stos
mov
sbb
scas
xchg
dec
sub
adc
sbb
cmovg
lea
cmp
rol
bound
iret
rorb
les
adc
jae
outsb
mov
mov
push
aas
cmp
push
push
lcall
jle
or
and
cmp
adc
xchg
jae
push
divw
movl
jmp
mov
call
mov
push
cmp
xchg
je
inc
fadds
je
lea
shrb
rorb
mov
pop
mov
test
lds
sbb
push
sti
das
fsubs
add
mov
test
cmp
es
inc
lds
pop
fs
mov
jecxz
push
pop
repz
and
mov
push
fwait
inc
sbb
push
lea
sbb
lock
push
fsubr
inc
cld
dec
or
or
int
in
je
ret
loope
adc
pop
fwait
sahf
mov
add
loopne
loope
xchg
insb
sti
incl
inc
out
js
mov
add
js
inc
mov
call
xor
out
fwait
outsb
cli
ret
pop
sub
outsl
mov
push
dec
dec
aam
call
lea
cmp
fisttpll
dec
bound
mov
fmull
movsb
decl
in
inc
fmuls
fcoml
mov
ficoml
mov
inc
mov
inc
aaa
jne
mov
push
or
inc
ljmp
dec
mov
repz
in
or
add
pop
aas
fcmovb
or
push
lret
or
cmp
adc
pop
mov
xor
lock
popl
out
bound
out
aas
push
add
pop
ret
and
mov
jno
lahf
sub
loope
lcall
std
add
mov
cmpl
je
mov
push
adc
clc
and
je
pushl
dec
test
out
jmp
mov
shl
mov
mov
and
and
fdivr
push
or
push
adc
push
or
dec
pop
cld
shlb
add
or
incl
dec
fs
clc
cmpl
jae
ja
loop
xchg
xor
jl
cld
subb
push
mov
push
iret
jns
icebp
xor
pop
add
sbb
mov
arpl
inc
mov
dec
loope
push
push
das
push
incl
addr16
cld
mov
inc
push
sbb
dec
negb
dec
hlt
jae
sub
sar
lcall
mov
ja
out
outsb
cmp
loopne
xchg
and
shl
or
xchg
and
std
and
sti
shl
or
adc
mov
aas
repnz
xor
shl
sbb
and
shl
outsb
ljmp
inc
shl
sbb
sub
ss
jmp
jno
and
xchg
adc
inc
adc
and
lret
xchg
call
inc
add
add
enter
jmp
push
and
rclb
mov
and
or
mov
dec
xchg
mov
inc
in
shl
or
and
pop
sbb
sahf
mov
inc
hlt
inc
mov
pop
mov
ljmp
and
lock
or
aaa
jb
mov
push
or
cmp
and
flds
add
sbb
jb
aaa
add
cmp
in
shr
mov
shl
or
inc
nop
mov
jg
inc
push
or
lcall
cs
mov
mov
add
inc
clc
xor
dec
xchg
jmp
xchg
and
xor
add
dec
fstps
mov
ja
jmp
cmp
call
or
cmp
cmc
xor
or
data16
stos
inc
clc
or
insl
js
dec
adc
add
or
movzbl
mov
shr
movzbl
and
mov
add
mov
xor
enter
mov
mov
fmuls
and
xor
or
outsl
dec
clc
jbe
call
jae
ljmp
pop
out
xchg
and
in
rcrb
adc
movsl
xchg
dec
add
dec
add
call
cmpl
jne
jb
dec
cmpsb
negl
movl
lds
fcomip
or
add
mov
mov
fcompl
or
inc
adc
inc
aam
jg
inc
adc
dec
les
inc
enter
aaa
lock
in
adc
aas
sbb
lcall
xor
lcall
xlat
sbb
mov
mov
enter
mov
add
idiv
fmull
int3
cmp
sbb
neg
add
add
sbb
mulb
daa
xchg
call
bound
dec
in
andb
add
ljmp
xchg
mov
cld
mov
pusha
and
push
fsubl
dec
ljmp
push
fmuls
fistpl
mov
mov
mov
fldl
rorb
push
int3
push
lea
push
add
clc
or
dec
hlt
add
push
enter
decl
or
daa
pop
push
fiadds
mov
iret
or
add
jecxz
xchg
rorb
loopne
or
or
lock
ret
dec
xchg
mov
popf
adc
out
push
cmp
sbb
neg
mov
xchg
jl
add
cmpsb
jae
jmp
sub
xchg
add
out
push
sbb
test
sub
jo
jnp
cmp
and
cmpsb
fisttpll
pop
sub
hlt
sub
out
push
push
or
sub
mov
inc
in
sbb
neg
mov
fs
fdivrl
inc
sub
or
lea
mov
xor
adc
mov
mov
pusha
clc
leave
int3
jo
ja
adc
jae
out
dec
sbb
mov
inc
adc
lea
jecxz
ret
and
jl
repz
fmuls
fcoml
lock
sahf
iret
adc
js
pop
cltd
jmp
xor
scas
xor
scas
scas
shll
clc
testl
clc
sub
popa
add
clc
js
add
js
insl
popa
push
fisubs
xor
scas
xlat
xor
ja
adc
sbb
loope
jns
dec
clc
js
mov
and
adc
leave
inc
scas
add
jp
out
lret
adc
shlb
lock
cmc
cltd
adcl
sub
xor
enter
int3
jno
inc
scas
call
xchg
scas
in
adc
pop
loopne
jns
inc
icebp
fdivrs
jo
inc
fcoml
enter
rcrb
scas
xlat
xor
ja
adc
sbb
clc
push
shl
sub
and
adc
out
add
and
xor
js
pop
sbb
or
push
sbb
adc
jmp
cltd
scas
movsb
xor
xor
popa
js
adc
fcoml
inc
xchg
adc
enter
scas
sbb
js
dec
fs
js
icebp
sbb
sbb
jl
jbe
push
pusha
jmp
jo
dec
je
inc
xchg
pop
or
xor
sub
push
pusha
xor
mov
pop
jb
pop
dec
pop
lcall
add
pop
movb
mov
and
mov
clc
sbbl
add
lret
popa
dec
lds
adc
xor
mov
nop
sub
inc
sub
rorl
loope
pusha
mov
add
sbb
mov
in
push
dec
adc
xor
icebp
inc
rcrb
sbb
sbb
clc
stos
xchg
dec
add
dec
or
mov
ljmp
mov
loopne
cld
mov
scas
push
lock
ss
test
sbb
mov
pusha
fistpll
push
and
movups
push
int3
mov
lret
add
iret
push
push
mov
adc
mov
add
cmp
jbe
cmp
aas
mov
jb
xor
hlt
dec
inc
add
je
mov
push
and
and
cmp
pop
pop
jne
pop
pop
pop
push
cmp
mov
jmp
cmp
jb
rep
jmp
nop
mov
mov
sbb
or
loopne
add
jmp
jmp
out
jmp
in
or
rorl
decl
mov
mov
push
mov
add
add
int3
pop
dec
mulb
add
mov
add
andl
add
in
add
sbb
js
dec
shll
push
mov
inc
mov
mov
pop
call
cmpsb
in
in
lock
lock
imul
out
cmp
fistps
add
lock
push
mov
hlt
lods
push
fidivs
mov
pop
pop
leave
ret
nop
icebp
pop
mov
rorb
adc
pop
adc
push
sbb
push
loope
nop
lea
lea
test
sbb
fstpl
movsl
cld
ja
inc
inc
add
loopne
out
adc
inc
add
stc
sub
mov
nop
inc
or
nop
inc
inc
clc
fisttps
mov
sub
out
mov
ret
pop
rcrb
cltd
jle
lock
pushf
sub
sub
mov
pushf
or
nop
daa
and
sub
push
out
add
push
pushl
pop
pop
shll
sub
hlt
cld
add
or
push
shll
daa
imul
lcall
adc
cmpsb
imul
adc
mov
inc
dec
or
add
arpl
cwtl
shll
pop
xor
in
lds
rcrl
mov
add
fadds
inc
dec
xor
fadds
ret
or
loopne
adc
xchg
call
add
fsubrp
sbb
jle
pushl
or
push
sub
aaa
aad
inc
cmpw
jne
mov
inc
add
sti
mov
jne
cmpw
cmpl
xor
cmp
fisttpll
rorl
push
push
dec
push
sub
cld
add
adc
movl
jg
in
push
push
mov
sbb
test
jne
push
jmp
mov
cmp
mov
push
call
add
xor
testb
nopl
loopne
inc
lahf
in
incl
inc
fmull
fmuls
jg
add
mov
cmp
inc
cld
incb
je
or
shl
mov
add
lock
ret
mov
or
fnsave
and
cmp
xor
inc
push
or
push
pop
jg
push
or
sti
xor
adc
adc
mov
or
jge
into
mov
or
fistps
adc
in
sbb
lock
ja
enter
mov
cmp
or
xor
out
adc
sbb
lock
lcall
pop
mov
dec
shr
push
pop
push
push
push
push
stos
sbb
outsl
mov
cmpl
jne
xor
xchg
adc
popa
pop
cld
pushl
in
mov
mov
mov
push
lock
imul
jae
mov
inc
aam
mov
std
jnp
xor
inc
ret
sub
mov
and
ret
sub
cmpb
or
sub
mov
mov
in
jmp
call
shr
jmp
lea
outsl
push
add
add
scas
sti
int
and
movdqa
add
jg
jg
jbe
fwait
pop
outsl
inc
sbb
push
add
pusha
jle
cmc
int
xlat
and
jg
jg
jg
jo
mov
jbe
jle
lea
mov
cld
push
decb
mov
orl
mov
cmp
fwait
and
and
push
cltd
mov
xor
sub
gs
lcall
xlat
jne
mov
mov
and
mov
cmp
je
sub
push
push
pop
in
cmp
mov
call
test
je
mov
roll
sar
in
add
ja
ljmp
in
mov
mov
rep
data16
cmp
jne
neg
add
cmp
sbb
add
pop
jle
lock
in
push
xchg
mov
cli
mov
popa
jmp
sub
mov
mov
movsl
mov
add
jge
cld
loop
andl
inc
push
push
mov
loop
hlt
neg
sbb
and
lcall
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
jg
push
cmp
inc
cltd
or
xor
ret
fwait
clc
add
push
hlt
mov
mov
add
out
pushl
ja
loop
mov
call
rol
sub
mov
idivl
je
push
sti
stos
jae
clts
pusha
call
ret
push
dec
cmp
fstp
add
call
cli
pop
lds
or
std
aas
push
aad
ret
push
mov
jmp
mov
cmp
pop
movb
and
jb
dec
out
fsubr
pop
pop
or
shr
jo
mov
xchg
idiv
pop
jnp
call
sbbl
jb
pop
ret
mov
push
xor
cmp
jne
gs
icebp
ja
lods
push
add
add
orl
push
pop
pop
or
call
ret
mov
fimull
cmp
ss
cmp
je
mov
pop
mov
cmp
pop
and
mov
and
cmp
pusha
add
adc
inc
add
jg
and
cmpl
aaa
jecxz
js
xchg
test
pop
je
add
ja
fstpl
pop
mov
and
inc
add
mov
cmp
and
inc
jg
jne
push
push
push
pop
sahf
mov
mov
mov
cmp
incb
mov
jb
cmpl
sbb
dec
mov
or
add
sbb
mov
jo
iret
push
push
sub
pop
cmp
jl
mov
out
cmp
mov
adc
jne
add
negl
xor
ja
pushl
lcall
pop
pop
mov
mov
cmp
je
sub
or
jne
jb
cmpl
jg
sti
add
xor
clc
je
push
or
call
jmp
push
inc
jbe
in
mov
push
pop
push
mov
push
aas
jl
jge
add
mov
lods
and
jne
cmp
mov
add
jle
je
sbb
popf
lock
inc
ds
sahf
jbe
pop
rclb
add
adc
sub
push
add
cs
dec
outsb
mov
pop
pop
add
jg
lahf
iret
gs
or
inc
cmp
push
test
dec
add
pop
out
lcall
add
jne
pushl
pushl
pushl
pushl
scas
mov
ret
push
push
mov
push
push
xor
xor
cmp
aaa
cld
je
inc
cmp
sar
pop
jae
add
neg
popf
push
cmp
pop
je
push
or
add
test
cmp
mov
push
mov
scas
loope
mov
inc
adc
or
mov
push
pop
mov
add
adc
sti
mov
es
add
add
push
das
out
pop
rdpmc
rclb
inc
sbb
decl
ljmp
inc
cmp
pop
jbe
imul
or
push
les
push
pop
push
mull
in
adc
testb
shlb
stos
push
mov
xor
sbb
and
cmp
pop
push
inc
inc
iretw
mov
hlt
call
cmp
je
cmp
je
push
lea
push
mov
push
pushl
enter
push
pushl
push
call
or
pusha
call
pop
cmp
fisttpll
fists
jb
inc
mov
cmpb
je
or
pop
mov
loope
jne
push
or
mov
or
push
ffreep
cmp
je
mov
imul
add
add
cmp
jb
imul
add
or
std
or
shll
add
push
push
testl
inc
in
push
pop
mov
rclb
push
cmp
je
mov
imul
add
add
cmp
jb
or
rorb
cmp
jae
cmp
jne
mov
sarb
lds
test
daa
jne
xor
movb
sti
add
jne
andl
repnz
dec
jno
aas
mov
xor
or
dec
pusha
mov
cmpl
jne
dec
mov
roll
xor
mov
jge
mov
jle
andl
mov
jl
inc
add
nop
cmp
jl
mov
add
mov
xor
fdivrp
jne
movl
cmp
xchg
sbb
dec
cmp
xchg
test
iret
and
cs
ja
repz
push
cmp
ud0
push
call
pop
mov
jmp
in
call
mov
pop
mov
or
pop
pop
pop
leave
mov
mov
or
add
daa
js
lods
pop
outsl
sahf
cmp
lret
mov
test
mov
cmp
ja
mov
test
cmp
jne
xor
test
sete
mov
movzbl
repnz
jecxz
push
adc
add
jmp
sub
inc
mov
test
jne
pop
mov
cmpsl
xchg
std
pop
ret
push
xor
cmp
push
clc
sbb
pop
psllq
popf
mov
cmp
je
inc
add
fbstp
mov
mov
cmp
jne
push
inc
pop
mov
out
clc
cmp
pop
pop
mov
mov
icebp
pushl
inc
cmpb
pop
je
push
push
mov
cmp
out
and
dec
push
push
fwait
rorl
inc
jb
iret
add
add
cmp
jne
decl
jg
push
je
mov
add
fimuls
sub
ret
pushl
mov
or
adc
push
mov
push
xor
cmp
push
mov
mov
push
ffreep
add
or
or
adc
and
and
std
mov
sete
inc
adc
cmp
pop
test
je
mov
mov
inc
mov
mov
movzbl
cmpsl
loopne
fcoml
insb
push
adc
pop
mov
or
incl
mov
inc
test
pop
jo
xor
out
lcall
sti
and
sti
or
dec
add
inc
incl
jg
cld
push
xchg
cmpb
je
add
or
push
inc
jmp
dec
jmp
sbb
add
lea
incl
jne
sti
mov
inc
inc
cmpb
je
lods
es
jne
data16
faddl
cmpb
data16
xor
fadds
out
mov
in
ret
shr
mov
dec
jl
pop
inc
sar
mov
icebp
lret
pop
je
cmp
or
je
cmp
je
jae
idiv
test
je
test
movsbl
push
je
in
mov
xchg
sbb
or
jmp
and
lock
jecxz
inc
incl
sbb
inc
xor
imul
add
pushl
out
xor
leave
test
pop
pop
je
andl
incl
push
sub
xchg
xchg
sub
adcb
clc
aaa
jo
mov
cmp
inc
add
out
lock
mov
xor
sbb
jne
mov
testl
push
push
push
lea
xchg
inc
es
filds
aas
jae
mov
cmp
jae
mov
shl
lea
shll
jne
mov
cmp
pop
je
ds
mov
in
push
push
inc
dec
mov
lock
std
add
leave
ret
push
push
mov
ja
push
push
push
push
mov
cld
jg
jg
ret
push
pop
jne
call
push
je
movl
fstl
js
or
add
sbb
repz
cmp
incl
cmp
mov
je
add
cmp
jne
push
repnz
lcall
sub
push
sar
inc
push
push
push
push
mov
cmp
cmp
je
popa
cmpsl
adc
je
push
push
push
pop
push
mov
and
or
mov
pop
mov
cld
adc
adc
out
push
mov
jmp
cmp
je
cmp
jne
call
sti
fistpll
test
cmp
je
inc
cmp
jne
add
sub
inc
mov
addr16
xor
jne
inc
or
loop
and
subb
clc
adcl
pop
pop
pop
pop
jae
push
push
xchg
hlt
lea
test
xlat
pop
push
xchg
push
push
pop
xor
cmp
ud0
ffreep
test
mov
mov
add
add
jmp
mov
inc
add
orl
movb
mov
movb
movb
movb
cmp
fcomip
jle
inc
xor
add
mov
lock
cmp
aaa
sarl
mov
pop
dec
mov
std
cmp
pop
add
add
push
mov
mov
movl
es
pop
int
mov
mov
std
std
sti
dec
loopne
or
push
mov
addl
jmp
xchg
psubq
add
andb
xchg
andl
lahf
mov
add
cmp
jb
incl
cmp
jg
jmp
mov
andl
test
jle
mov
mov
lods
je
popf
loope
incl
mov
test
je
test
jne
push
call
mov
loopne
mov
add
out
add
push
mov
jmp
jecxz
mov
push
lea
in
xchg
pop
pop
test
je
mov
jp
addl
cmp
jl
xor
mov
inc
xor
inc
push
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
ret
cld
pop
jmp
mov
dec
call
leave
jbe
int3
clc
cmp
je
jae
push
fwait
idiv
lock
ds
jne
inc
jmp
cmp
jne
push
fsubr
pop
pop
or
or
movl
xchg
inc
cmp
jl
test
and
jns
push
cmpsb
or
and
push
loope
in
push
push
mov
lea
sti
pop
testl
mov
add
add
std
cmp
jb
imul
add
movb
jle
jg
jl
pop
pop
ret
push
push
mov
mov
lock
sahf
movsl
lods
out
in
fucomip
loopne
inc
push
xor
lea
inc
xor
sbb
inc
mov
scas
cmp
pushl
sar
add
jmp
push
push
call
add
cmp
movzwl
loop
inc
adc
jl
sbb
push
push
in
jmp
out
outsb
mov
je
sbb
inc
add
cmp
jb
jmp
andl
das
ds
mov
xor
out
mov
out
mov
sbb
lret
sbb
out
js
call
call
sbb
mov
push
inc
shll
out
xchg
addr16
add
mov
or
inc
xlat
pop
sub
or
pop
ret
push
adc
scas
mov
add
jbe
fstl
leave
push
and
adc
push
imul
lock
cmp
adc
xchg
call
in
sbb
jne
pushl
ja
mov
mov
jnp
push
call
mov
fs
pushl
ret
push
sysret
lods
jns
push
push
sbb
jne
xchg
cmp
orl
call
push
push
std
pop
add
jne
movl
subb
inc
mov
jo
pushf
jns
loope
pushl
mov
xchg
lock
jo
xchg
inc
movb
hlt
inc
add
jmp
push
push
pop
pop
mov
mov
faddp
inc
insb
repz
pushl
outsl
js
pop
xor
inc
adc
cmovl
stos
cmp
mov
mov
push
dec
or
rclb
push
mov
adc
lock
pop
pop
je
fsubrs
inc
ficompl
push
out
incb
scas
dec
xchg
pop
pop
call
add
mov
jmp
shlb
cmp
jle
imulb
pop
pop
pop
jl
out
mov
jne
push
cmp
or
pop
pop
push
push
testb
and
test
mov
bound
jbe
inc
sub
cmpxchg
sbb
or
dec
pop
cmp
lock
dec
jle
pusha
fsubl
sbb
jp
pop
ret
cmpsl
add
dec
jmp
jne
jo
cmp
mov
cmp
sti
decl
ljmp
jns
pop
cmp
call
or
aas
add
ja
and
adcb
cmp
push
imul
cld
adc
ja
or
or
loope
je
push
mov
test
jne
nop
lea
pop
adc
cmp
xor
push
adc
mov
dec
fistps
or
pop
xor
mov
and
call
jecxz
mov
mov
je
dec
push
xor
pop
ret
push
mov
hlt
push
push
inc
and
sub
or
xchg
or
aas
jge
jge
cmpl
mov
mov
out
mov
or
je
jbe
mov
mulb
add
cmpsb
pop
mov
and
xchg
jecxz
mov
xor
push
jnp
jo
and
test
pushl
sahf
mov
pmaxub
in
lds
setbe
jae
push
aaa
inc
gs
jecxz
inc
inc
push
insl
add
rolb
xor
add
cmp
aam
mov
add
pop
insl
addr16
pop
xchg
sbbl
popa
xor
pusha
inc
je
xor
sbb
das
je
jne
adc
sbb
decl
inc
lea
pop
jne
cmpl
jb
pop
leave
ja
pop
std
ret
push
pop
leave
ret
incl
push
cmp
adc
lock
test
mov
xor
xchg
mov
jmp
stc
fsubs
pop
cld
jne
push
mov
adc
idivl
xor
jmp
pop
ret
push
xor
cmpl
add
push
mov
cmp
and
in
cmp
and
add
push
or
add
pushl
inc
adc
sti
iret
push
roll
cmp
pushl
mov
rcrl
or
sub
pop
ret
mov
arpl
pushl
add
out
jle
lret
adc
add
loopne
push
push
mov
outsl
and
inc
cld
xor
push
mov
pushl
mov
mov
mov
lea
mov
dec
lock
mov
mov
mov
pop
push
aas
hlt
sub
cmp
aaa
cld
add
into
xor
je
lret
or
inc
or
lds
lret
sub
out
loop
aaa
jle
push
push
mov
xor
inc
inc
jg
cld
and
add
inc
and
add
mov
add
xor
incl
in
iret
push
dec
or
inc
or
inc
and
testb
jne
pop
outsl
mov
cmp
mov
lea
mov
decl
mov
je
lea
mov
test
lea
mov
sbb
je
imul
fisttpll
test
jbe
jl
jg
and
xchg
lds
mov
jne
cmpb
xchg
xchg
mov
add
ret
mov
mov
out
mov
cmpl
fildll
out
add
dec
pop
jne
pop
add
je
mov
cmc
and
push
push
call
sub
out
adc
outsb
cltd
decb
je
push
pop
xchg
sub
into
lcall
add
mov
fwait
push
and
cs
fcomip
push
xchg
mov
sbbb
je
jae
push
lret
mov
adc
xchg
push
addr16
mov
dec
push
push
mov
cmp
cmp
or
not
mov
sub
mov
jmp
jne
xor
call
fwait
shll
testb
cmova
out
cmp
pop
or
lock
cmp
jne
mov
jecxz
cli
or
loopne
or
mov
not
mov
pusha
pop
pop
pop
xchg
or
mov
call
movl
pop
dec
cmpsl
idiv
add
add
je
cmp
mov
sbb
gs
mov
and
sarl
test
jecxz
xor
push
mov
mov
outsl
cli
sbb
pop
mov
sbb
pushf
pop
sub
je
push
popf
pop
cmp
xor
cpuid
sbb
in
mov
push
aas
adc
jne
push
xor
pop
imull
pop
push
jbe
push
out
inc
ficoms
adc
mov
lods
or
sarb
addb
call
jmp
cmpsl
mov
and
jl
jmp
rcrb
xor
pop
mov
and
shll
ss
cmc
out
dec
mov
idivb
cmc
lods
push
aaa
add
lea
cmpsb
pushl
fdivrl
out
add
pop
gs
rcrl
or
cmp
jl
stos
aad
fsubrs
add
lret
push
mov
adc
jle
add
call
dec
push
dec
repnz
add
pop
inc
or
pop
ds
cmc
jne
push
call
pop
out
pop
fistl
cld
std
mov
pushl
xor
ja
mov
mov
jo
std
popf
cli
inc
cmp
sub
jo
jecxz
push
sub
div
aas
pop
jge
xor
cmp
ljmp
sub
mov
pop
inc
rcr
fmuls
je
mov
jmp
push
jne
pop
cltd
and
shrl
lods
movl
ret
push
push
inc
rorb
jne
and
adcb
pop
jne
or
xor
or
mov
pop
mov
mov
les
cmp
iret
lock
jne
mov
sbb
jge
pushl
call
aas
push
mov
inc
add
push
lea
sub
push
xorb
add
add
test
les
lea
xchg
ja
out
mov
pop
jl
jne
mov
data16
pushl
add
data16
data16
data16
data16
pushf
popl
xor
test
ja
sbb
inc
fadds
add
add
inc
cld
push
mov
out
lea
sub
or
rorb
subb
mov
mov
call
mov
cs
xlat
or
push
adcb
mov
test
call
push
sbb
out
outsl
xlat
and
mov
and
xchg
aad
lock
leave
repnz
dec
ja
and
or
lock
pop
pop
sbb
push
loop
fcos
xor
and
sbbb
arpl
pusha
mov
loopne
jge
rdpmc
add
pop
xor
aas
jle
js
xor
cmp
cmp
jb
lea
ja
in
cmp
ja
push
pop
ret
mov
inc
arpl
clc
jg
push
pop
cmp
sbb
and
add
xor
push
in
push
mov
push
mov
adc
ret
push
ffree
clc
pop
mov
push
fs
jbe
jno
fcomps
mov
pop
inc
add
or
or
sbb
negl
sub
jp
loope
pushl
xor
cmp
jne
sbb
fcompl
push
inc
ja
sub
mov
leave
into
add
or
inc
sbbl
outsb
inc
mov
lret
cwtl
outsl
cli
hlt
arpl
and
dec
ja
pop
pop
ud0
decl
sub
lea
cmp
jb
loopne
mov
cmp
pop
mov
mov
xchg
lock
mov
add
cmp
jb
mov
adc
jbe
cwtl
pop
jne
lea
push
inc
lock
incl
xor
sti
add
cmp
sub
mov
sbb
pop
add
sbb
mov
pop
jo
adc
cltd
popf
pop
ret
push
push
push
cmp
jp
ret
mov
jg
cli
inc
inc
mov
sbb
ret
andl
pop
adc
or
cmp
mov
jmp
jp
mov
fistpl
mov
and
inc
mov
pop
cmp
fcomps
js
lea
cmp
ljmp
pop
mov
jb
xchg
xor
push
flds
pop
cld
cmpw
je
mov
add
cmpl
add
xor
cmpw
in
cmp
mov
dec
cmp
enter
adc
push
movzwl
xor
test
push
incl
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
add
add
cmp
xor
ljmp
add
xchg
push
push
xor
cmpsb
mov
in
or
clc
jo
and
xlat
pop
cmp
andb
adc
add
fisubrs
mov
mov
mov
rorl
rolb
incl
pop
pop
fs
loope
mov
xor
xchg
adc
adc
sete
mov
or
test
xchg
xor
out
ss
mov
mov
movl
adc
rclb
adc
or
mov
mov
imul
loopne
add
sbb
dec
pushl
pop
cmp
je
pop
mov
cmc
cmp
je
dec
outsb
mov
es
pop
ficomps
in
push
inc
sbb
ljmp
es
out
cmpl
pushl
call
pop
push
daa
sahf
push
pop
or
mov
xchg
push
add
test
adc
lret
cmp
xchg
pushl
lret
test
push
dec
movl
in
andb
jmp
incb
test
cmp
incb
je
out
or
pop
cmp
je
adc
push
mov
stc
enter
je
cmp
ljmp
cmp
je
cmp
je
cmp
jne
sarb
mov
mov
cs
jle
jne
pushl
mov
cltd
imul
push
movsb
inc
mov
jbe
mov
and
push
mov
cmp
je
fisttps
jmp
mov
add
mov
add
lds
mov
orl
cmp
je
jmp
cmp
je
into
jne
cmpl
sti
add
push
push
call
pusha
sar
inc
cmp
jne
mov
jbe
rol
jne
sbb
les
loope
jg
ret
sub
je
sub
je
sub
je
sub
je
dec
jne
jnp
jmp
add
cmp
je
dec
mov
xchg
jmp
sub
pop
dec
out
icebp
and
pushl
into
or
aas
sub
pop
jmp
orb
pop
and
cmp
sub
push
sbb
jg
adc
jmp
mov
add
sti
add
sti
add
sti
or
movd
adc
jbe
scas
loopne
stos
lahf
ljmp
and
cmp
imull
sbb
pop
repnz
cmpsb
sti
jg
je
mov
push
pop
sub
je
add
fs
jne
push
or
clc
sub
xchg
arpl
push
mov
ja
mov
add
mov
jmp
mov
sub
je
push
sub
cmp
cltd
jmp
mov
inc
cli
add
push
nop
mov
jmp
add
push
mov
loopne
sbb
je
jl
inc
loopne
pop
and
in
pop
in
mov
sub
rolb
or
jmp
fdivl
add
sbb
aam
inc
pusha
pop
jne
mov
jl
mov
movl
mov
mov
or
fcomip
mov
cmp
jge
mov
lods
mov
mov
sbb
adc
incl
jmp
sbb
iret
inc
mov
pushl
push
call
pop
jmp
pop
mov
sbb
je
pop
insb
or
dec
or
adc
rorb
sbb
cs
mov
es
push
push
push
pushl
and
xor
cmp
or
test
pop
lods
push
pop
cmp
es
mov
mov
inc
aas
std
outsl
test
push
mov
jne
xchg
mov
mov
cmp
cmp
inc
fdivrl
push
call
icebp
ljmp
fdivr
cltd
sbb
xlat
xchg
pop
jno
push
mov
pop
divb
push
pop
jmp
push
mov
mov
outsb
push
push
sbb
adc
outsl
nop
cmp
je
pop
mov
add
ja
icebp
loop
daa
sub
cmp
out
out
test
and
sub
pop
decl
mov
xor
cmpl
push
mov
mov
jne
test
lea
mov
push
jmp
pop
fdivr
jne
mov
ja
mov
es
jne
lds
jne
push
push
push
and
jp
andl
fsubrp
test
out
push
xor
inc
push
cmp
out
jle
push
je
sub
mov
push
xor
cmpsl
movzbl
sbb
xlat
inc
mov
dec
rorb
pop
fcompl
adc
dec
inc
mov
pop
pop
xor
xor
mov
lds
lea
push
push
data16
adc
add
inc
mov
cmp
jle
cmp
jne
push
push
mov
mov
scas
mov
mov
outsl
push
sahf
xor
leave
mov
sbb
imul
add
sub
inc
inc
cmp
jl
jmp
addr16
pop
mov
call
call
or
push
push
test
pushl
out
aaa
cli
divl
lea
cmpb
or
add
push
cld
and
dec
les
push
adc
test
punpcklbw
jno
out
cmp
fs
decl
or
jne
call
mov
jmp
aaa
add
adc
out
scas
inc
fdivl
leave
cmp
mov
cmpl
or
adc
loop
mov
inc
loopne
push
out
popf
mov
adc
pushl
jb
jo
stos
add
mov
push
push
aad
les
js
inc
ret
data16
ret
xor
ret
sbb
add
pop
je
ss
jg
ret
xor
sub
pop
arpl
ljmp
mov
mov
mov
mov
jne
cmp
fs
dec
add
call
cmp
pandn
pop
faddl
movl
lcall
adc
push
push
mov
sarb
lea
and
je
idivl
hlt
add
push
pusha
out
cmp
pop
mov
push
in
call
adc
clc
cmp
je
cmp
lahf
lock
or
pop
mov
je
cmp
je
mov
in
push
push
lea
push
push
push
repnz
jne
jae
aam
pop
aam
mov
cmp
mov
pop
lock
or
and
jmp
or
jmp
mov
cmp
je
cmp
je
call
cmp
je
mov
or
jne
call
sbb
xor
inc
mov
test
pop
pop
pop
leave
push
push
xor
cmp
xor
mov
or
sti
ja
call
mov
jo
mov
movsl
clc
adc
jmp
mov
ljmp
sbb
add
dec
jne
je
mov
stos
decl
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
inc
and
aam
pop
mov
mov
jmp
scas
mov
jecxz
daa
pop
adc
jne
mov
jne
push
incl
aas
pop
ret
cmp
je
mov
xchg
cmp
jne
mov
jmp
push
jmp
mov
cmp
or
cmpl
mov
jne
mov
mov
inc
inc
sti
lahf
insb
rorl
or
add
out
cmp
ljmp
mov
mov
push
mov
pop
push
or
ja
imul
clc
stos
aaa
lods
pop
pop
fcomip
roll
iret
out
into
je
mov
add
test
je
adc
add
decl
fsubs
jle
rolb
add
test
incl
add
cld
cmp
test
je
test
je
push
add
jmp
je
jmp
lea
gs
ret
lea
add
js
es
adc
or
dec
push
inc
jle
lret
push
push
xor
rolb
sbb
add
pop
dec
lods
push
rolb
mov
arpl
cmp
jne
mov
mov
sbbb
or
inc
sbb
jb
or
mov
jae
mov
push
mov
out
icebp
movb
jne
cmp
mov
mov
mov
mov
mov
mov
cmp
push
adc
dec
jo
pop
daa
jp
mov
mov
cmp
mov
sbb
mov
mov
outsl
std
mov
adc
int
jo
add
or
sbb
pop
ret
cmpb
outsb
lcall
pusha
jo
ret
mov
lds
mov
movzbl
mov
mov
test
jne
cmpl
aaa
add
lea
mov
inc
and
mov
mov
or
clc
imul
cld
andl
leave
ret
and
add
imul
add
adc
push
and
xor
pusha
and
add
je
adc
xor
andl
jbe
enter
pop
sub
inc
pop
sub
mov
adcl
or
pop
sub
add
mov
daa
push
insb
xorb
adc
insb
mov
xchg
dec
adc
mov
sub
fcomip
or
mov
mov
shrl
cmpl
dec
out
and
lahf
rorl
push
xorl
rcrl
pop
mov
dec
xor
out
jg
or
rorb
ret
sub
shlb
sub
je
dec
sbb
add
add
ret
mov
or
clc
out
and
mov
push
xor
lea
push
cmp
aas
es
dec
mov
mov
mov
xor
lea
stos
stos
stos
sbb
mov
sub
mov
mov
inc
dec
jne
lea
inc
sbb
adc
mov
inc
dec
jne
pop
pop
pop
inc
scas
push
jp
and
sti
jb
movsb
pop
inc
out
push
test
inc
test
jbe
call
cmc
ja
sarb
xor
mov
idiv
inc
cmp
jb
mov
test
movb
pop
mov
mov
movzbl
cmp
ja
add
push
sub
inc
push
lea
fwait
dec
mov
inc
mov
inc
test
jne
mov
or
inc
cwtl
fs
push
testl
push
iret
stos
sbb
fistl
fnstcw
adc
push
push
pushl
imull
lret
pop
mov
and
and
das
jg
and
xor
movzwl
test
je
orb
mov
ja
jmp
test
je
adc
inc
mov
daa
jmp
movb
lea
inc
inc
sbbb
sub
mov
lea
pop
and
mov
dec
push
pop
roll
cmp
ja
push
sbb
ljmp
adc
add
add
inc
cmp
jb
mov
ja
ds
push
mov
mov
mov
sbb
rclb
cli
je
mov
pop
lock
or
inc
push
daa
aas
and
dec
pop
sub
mov
cmp
add
sbb
adc
cmpsl
and
and
inc
push
cmp
sub
divb
cmp
jmp
mov
pusha
orl
pop
push
or
aaa
hlt
jae
hlt
push
jne
movl
adc
cld
je
or
out
jmp
cmp
jne
and
jne
mov
das
sti
inc
lock
sbb
les
cmp
arpl
lds
lahf
inc
cld
jg
je
push
mov
cld
or
mov
cmp
mov
decb
mov
outsb
push
mov
in
xor
cmp
xchg
mov
incl
add
cmp
call
test
fwait
mov
data16
jmp
push
call
xor
push
jle
movsb
push
pop
je
lea
cmp
mov
dec
xor
inc
fdivrs
push
call
jae
btc
push
addb
iret
ja
jne
icebp
ja
out
mov
test
je
inc
decl
mov
push
jb
out
mov
dec
in
leave
xor
mov
ja
jmp
mov
sub
mov
movzbl
jmp
fistpll
mov
inc
cmp
clc
jbe
mov
inc
inc
cmpb
idivl
mov
inc
loopne
or
jb
mov
xchg
rolb
mov
mov
push
mov
lea
lea
mov
inc
mov
inc
inc
inc
dec
jne
idiv
outsb
ret
mov
sti
outsb
jae
jno
orb
inc
cmp
jbe
pop
mov
incl
vmwrite
leave
orb
in
test
or
jne
mov
insl
out
push
mov
jmp
push
cmpsl
jmp
jae
mov
mov
xor
lcall
add
cld
pop
inc
xor
stos
xor
sbb
cmpl
cmp
je
cli
inc
add
push
sti
leave
std
orl
mov
mov
or
mov
mov
clc
incl
jo
mov
cmp
je
call
jne
pop
mov
test
cli
cli
aaa
cmp
pop
pop
mov
rep
andl
push
push
fistps
pop
pop
mov
add
or
pushl
dec
adc
fwait
dec
dec
push
test
pop
push
scas
loopne
inc
call
testb
jne
adc
push
lock
test
in
incl
add
inc
add
pop
or
or
pushl
test
in
clc
add
dec
inc
adc
or
clc
aas
outsb
bound
call
or
mov
xor
inc
add
jmp
sbb
mov
fbstp
adc
mov
mov
sar
xlat
sti
je
jmp
lods
clc
jmp
pop
jmpw
and
test
pop
pusha
and
pop
enter
orl
out
mov
push
and
xor
add
xchg
add
rolb
mov
add
dec
pop
cmpsl
mov
in
or
out
popa
inc
mov
arpl
lods
addl
out
sbb
xchg
test
jne
test
xchg
aad
lods
lods
shrb
mov
das
ds
sbb
or
test
add
mov
test
or
movsb
dec
jnp
fucomip
and
mov
ret
push
push
xor
inc
push
sti
jge
mov
sbb
pop
jne
cmp
cmp
and
lea
sbb
jne
ds
mov
je
adc
add
mov
roll
and
sbb
scas
cmp
pop
jne
add
add
cmp
je
mov
bound
dec
stos
enter
mov
xchg
pop
ret
fwait
orb
das
negb
out
ljmp
and
test
test
cmp
add
add
or
je
cmp
jne
or
je
shr
cmp
jne
adc
jecxz
jg
cmp
jne
add
add
or
jne
mov
inc
nop
sbb
shl
xor
clc
rolb
test
add
add
xor
jae
je
test
mov
pop
into
adc
pop
lds
mov
dec
add
popa
or
mov
icebp
xor
cmp
push
je
cmp
mov
repz
je
cmp
jne
mov
mov
pop
fs
pushl
adc
xchg
xchg
mov
sub
cmpsb
push
cmp
pop
inc
pop
inc
mov
cld
jecxz
mov
call
sbb
add
stos
fdivrs
or
push
ja
push
mov
mov
mov
test
arpl
jle
jne
cmp
pop
pop
push
lea
pop
sbbl
mov
jle
enter
xchg
cmp
je
mov
push
in
jg
adc
leave
mov
pusha
adc
push
add
xlat
xor
mov
or
in
and
or
pusha
lahf
jl
push
pop
cmpl
jnp
add
jmp
imul
fmuls
xchg
out
dec
bound
gs
fcoml
mov
mov
mov
cmp
icebp
mov
mov
cmp
je
ret
push
adc
ss
mov
popa
and
cmpl
pop
pop
ret
test
je
and
push
mov
cmp
je
push
mov
xchg
js
test
pop
je
sbb
inc
cmpl
pop
jne
cmp
hlt
jg
ja
pop
mov
pop
ret
add
or
inc
dec
iret
test
aaa
aaa
push
ss
jo
push
push
pop
jle
sbb
jo
rclb
cmp
inc
icebp
inc
outsb
lea
mov
xor
mov
or
sahf
jmp
push
out
cs
pop
ret
cli
dec
jg
jo
roll
sbb
inc
inc
mov
aam
cmp
je
push
sar
mov
je
cmp
je
cmp
je
mov
push
and
jmp
or
mov
jmp
bound
incl
ret
jmp
dec
add
or
pop
les
pop
or
std
mov
mov
mov
orl
mov
mov
xchg
push
ret
push
push
fadd
jp
pushl
aaa
loope
popa
call
sub
xor
add
cmp
je
add
and
cltd
loop
jl
jge
inc
pop
mov
int
cmp
cmp
sbb
pushf
inc
jnp
mov
pusha
cmp
mov
add
sub
inc
or
push
push
ret
imul
arpl
sbbb
ljmp
lock
cmp
es
jmp
sub
add
int3
std
pop
out
inc
insb
mov
mov
push
subb
rclb
cmpsb
mov
sbb
sbb
mov
xor
pop
push
test
fstpt
sti
jle
push
lea
adcl
lock
sbb
rorl
aam
mov
jne
pop
pop
pop
ret
mov
push
dec
jg
cmpsb
mov
push
test
aas
push
out
loopne
mov
jmp
shlb
jge
cmp
jne
cs
pushl
je
push
push
lea
push
sahf
shlb
cli
lock
jmp
push
push
mov
ror
cmp
out
mov
xor
clc
inc
jae
cs
loop
test
inc
sub
and
sti
mov
pop
je
push
mov
sbb
add
sbbl
jae
test
call
adc
lcall
cmp
je
test
pop
incl
lea
decb
ror
test
pop
pop
jne
cmp
pop
pop
pop
mov
notl
push
in
and
scas
or
stos
xchg
in
fdivp
lea
and
push
push
das
jl
je
std
mov
pushf
cmp
pop
pop
je
cmp
dec
cld
aas
pop
ret
sub
push
xor
inc
push
outsb
out
imul
mov
je
fwait
inc
push
push
lea
movb
mov
lea
and
push
out
dec
pushl
push
push
sbb
and
pop
push
enter
pop
pushl
pushl
jne
mov
andl
jge
add
mov
lea
push
or
xor
out
popl
lea
in
cmp
jne
mov
cmp
mov
mov
rol
or
jbe
out
xor
aaa
jo
inc
push
mov
jg
inc
and
mov
mov
mov
jmp
aam
testl
cltd
push
push
dec
dec
cld
lcall
inc
push
outsb
dec
pop
mov
mov
pop
pop
jle
xchg
paddd
insb
and
sub
aaa
popf
push
mov
sbb
mov
mov
mov
mov
and
stos
inc
clc
dec
movl
decl
lea
lea
add
mov
mov
je
fbld
test
cmpl
mov
adc
cmpb
jne
push
jo
jne
pop
jne
jo
dec
imulb
adc
mov
mov
add
inc
scas
pop
mov
mov
mov
lea
add
imul
pusha
sub
scas
mov
scas
jae
adc
andl
lea
daa
xorb
test
jle
je
push
or
int3
fiaddl
out
je
inc
add
dec
mov
add
push
pushl
jge
loopne
xorl
mov
jb
mov
mov
sti
add
inc
push
push
and
add
shl
jne
je
push
lcall
add
push
pushl
xchg
mov
jne
je
push
pushl
inc
jo
ret
pushl
adc
and
rclb
pop
mov
ret
pop
lock
sbbb
lds
rorl
xchg
je
jo
push
hlt
fbstp
pushl
mov
lea
jbe
push
call
inc
lea
push
push
add
shl
add
test
test
cmpb
sbb
pushl
sub
push
je
sbb
adc
add
push
mov
shll
mov
mov
inc
dec
mov
mov
mov
roll
leave
push
std
sti
scas
mov
mov
push
orl
inc
fmuls
test
jmp
jbe
pushf
mov
sbb
pop
add
add
push
xchg
and
loopne
mov
xor
mov
movzwl
mov
leave
loopne
arpl
push
pushl
jge
sbb
jne
movsl
sti
ja
jbe
mov
inc
and
dec
and
mov
cmp
je
mov
push
mov
mov
push
push
jg
std
add
dec
add
lea
add
cmpl
jl
jmp
std
mov
scas
sbb
mov
xor
inc
out
jmp
dec
add
jne
push
pushl
lea
jge
pop
push
push
push
fistpll
sub
inc
ss
andw
inc
cmp
jb
push
xor
jo
cwtl
cmp
and
mov
jmp
andl
pop
mov
mov
mov
add
stc
mov
inc
jl
rorb
nop
js
mov
sbb
inc
ret
fwait
dec
daa
mov
xor
mov
xchg
and
add
cmpl
and
add
dec
cmp
pushl
repnz
push
pushl
andl
movsb
dec
jl
or
adc
loope
cmp
movb
add
cmc
pop
xchg
stos
pushl
push
push
and
mov
push
mov
je
cmp
je
ja
aas
cmpsb
andl
dec
or
clc
sbb
cmp
into
mov
bswap
jle
pop
incb
inc
cmpb
adc
pop
pop
and
stc
push
dec
sbb
add
insb
cmpsl
aaa
test
xor
sub
cltd
inc
cmpb
je
fcoms
movl
mov
sbb
loop
push
push
testb
mov
push
cld
jg
add
cmp
pop
je
sbb
fdivs
push
jg
jle
inc
mov
out
ret
inc
pop
pop
jne
pop
add
loopne
jg
and
jg
loopne
std
or
sbb
jne
inc
aaa
inc
movb
andl
out
loop
stos
aas
mov
sub
xor
cmp
aam
out
call
pusha
shll
pop
scas
add
gs
sbb
out
std
cmp
je
lea
test
je
pushl
sbb
divl
addr16
bound
and
jmp
inc
mov
adc
pop
in
add
ja
jle
mov
ret
int
jl
hlt
out
and
add
or
add
incl
imul
add
mov
push
push
je
mov
movhlps
jmp
push
push
out
adc
cmc
pop
cwtl
jne
jno
call
inc
push
jns
adc
mov
mov
sbb
das
jns
push
ja
ss
mov
insl
mov
push
pushl
jno
mov
into
pop
je
adc
call
cmpsl
lahf
adc
imul
or
jle
pop
icebp
mov
adc
mov
mov
cmpl
cmp
or
mov
add
add
xchg
sub
lea
loope
out
jg
jp
orl
mov
push
adc
mov
mov
mov
cmp
je
sub
out
add
dec
insb
mov
cmp
ss
mov
call
test
or
fists
sbb
call
in
out
add
mov
adc
dec
pop
rorl
jp
sbb
lea
icebp
jns
sub
mov
push
add
jne
jb
sub
cmp
push
and
fdivrl
add
push
push
out
pop
in
pop
jnp
sub
mov
fmull
daa
jae
bound
or
jo
pushw
mov
int3
xor
cmp
mov
mov
sub
shlb
add
sbb
add
dec
incl
stos
pusha
adc
insl
add
aad
pop
hlt
out
pop
lods
jmp
mov
add
xor
js
sbb
cmp
or
adc
ret
push
inc
fstl
adc
test
mov
mov
in
and
and
cmpsl
add
mov
mov
addb
or
leave
adc
sar
dec
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
rorb
adc
adc
jne
push
lds
sub
add
shr
mov
imul
add
push
std
sbb
mov
dec
imul
cld
jne
rcrl
push
lea
mov
mov
cld
ljmp
pop
push
hlt
test
mov
jne
sar
dec
cmp
jbe
push
aas
pop
mov
cmp
jne
cmp
mov
mov
shr
lea
not
dec
divb
and
decb
jne
andb
jmp
lea
sbb
outsl
sbb
pop
add
pop
or
push
or
xchg
mov
or
mov
or
jg
fdivrl
clc
and
hlt
jne
mov
sarl
sti
add
aas
mov
dec
pop
cmp
jbe
mov
add
mov
cld
in
jmp
fidivl
jno
cmp
jne
cmp
mov
jg
mov
shr
not
and
add
sbb
data16
mov
sbb
add
mov
mov
sub
add
dec
or
dec
or
or
or
fimull
test
mov
dec
lock
mov
or
lock
or
or
mov
mov
inc
sbb
mov
jae
cmpb
jne
mov
push
shr
testb
or
mov
sub
pop
int3
xor
push
sbb
fdivrs
lea
cld
mov
mov
call
or
test
pop
mov
cmp
insl
mov
mov
jg
and
inc
add
shl
add
mov
js
push
call
pop
xor
cmp
or
mov
sbb
movsb
mov
add
flds
or
cmpb
jne
andl
adc
js
pushl
push
or
call
adc
jo
mov
push
je
dec
in
arpl
or
sub
lea
push
jg
push
lea
daa
add
lods
mov
mov
inc
add
insl
or
cli
fildll
pop
mov
leave
ret
mov
dec
push
mov
cmp
jne
add
imul
push
incb
mov
cmp
jne
shrb
cmp
jg
mov
ljmp
add
les
add
xor
cmp
mov
je
push
push
std
dec
out
add
adc
inc
or
adc
jbe
idiv
pop
xchg
cmp
fwait
orl
mov
mov
incl
decl
decl
in
push
push
decl
decl
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
ja
xor
inc
clc
pop
mov
mov
stos
dec
test
push
std
jne
push
mov
mov
out
add
mov
mov
or
out
add
lods
lea
cmp
mov
ja
mov
sub
shrl
jmp
inc
orl
orl
lea
pop
cmc
mov
inc
inc
cld
lock
push
add
sub
or
orb
jne
mov
add
mov
inc
or
jmp
incb
andl
add
mov
inc
mov
sub
mov
test
dec
inc
jne
or
pusha
nop
or
not
and
mov
pop
and
sbbl
push
adc
push
mov
sub
nop
cld
scas
push
int
shr
mov
hlt
mov
and
dec
mov
icebp
pop
mov
mov
psubq
ret
add
test
add
cmp
jg
mov
stc
add
cmp
mov
jbe
push
pop
pop
mov
cmp
jne
lahf
push
jmp
cmp
sbb
lea
fwait
mov
xchg
fcompl
add
dec
push
pop
out
popa
sbb
nop
dec
or
out
ljmp
jg
mov
mov
sub
add
cmpl
out
mov
xchg
mov
pushf
sar
dec
cmp
lea
iret
sar
pusha
pop
mov
lea
mov
sbb
mov
mov
mov
dec
dec
or
push
mov
mov
ja
dec
adc
and
jge
inc
iret
idivb
pusha
sbb
lea
mov
jmp
sbb
lea
mov
cmp
and
jae
lea
mov
mov
add
fistl
mov
mov
cld
pop
cld
clc
jmp
mov
das
inc
pop
or
sbb
pushl
lea
mov
lea
mov
sar
dec
cmp
cmp
pusha
clc
out
rcrb
inc
cld
sbbb
pop
cld
pop
mov
push
sbb
dec
incb
mov
xor
mov
xor
push
dec
dec
outsl
lea
pop
sub
insb
dec
outsl
aaa
sarb
mov
push
mov
jg
in
jne
mov
or
mov
mov
mov
or
xchg
dec
add
add
push
push
cwtl
push
push
add
and
sbbl
insb
std
or
push
into
sbb
loopne
and
sbb
add
push
dec
loopne
xor
mov
mov
xor
inc
fiadds
xorl
sbb
and
fwait
das
dec
adc
mov
sbb
and
add
test
mov
and
push
mov
cli
pusha
push
cmp
push
mov
mov
jle
imul
adc
stos
leave
sub
shlb
dec
cmpsb
loop
jmp
mov
mov
mov
rcrb
enter
sarb
loopne
lea
mov
mov
hlt
repz
std
scas
ljmp
clc
je
add
mov
decl
test
sbb
test
or
je
dec
cmp
jg
in
incl
jmp
mov
sar
dec
cmp
jle
pop
fucomp
filds
stc
adc
mov
and
rorl
test
sti
cmp
or
inc
cmp
mov
cmp
jb
out
add
and
sti
or
mov
push
mov
jne
sbb
cld
negl
push
inc
jge
mov
je
cmp
jmp
jg
cmp
setp
dec
lahf
or
and
cld
mov
xchg
mov
lret
inc
mov
push
mov
and
add
cmp
mov
jne
sbb
jg
fiaddl
or
fcompl
into
jne
mov
cmp
std
jns
mov
mov
dec
std
add
jne
and
ljmp
addb
fmuls
inc
lock
lea
or
in
mov
cmp
jne
mov
test
test
jg
fildll
cmp
mov
jl
enter
xor
mov
cmp
js
inc
mov
cmp
jne
sbb
inc
fsubr
shll
incl
add
mov
mov
jl
mov
cmp
jne
mov
cmp
xchg
clc
incl
incl
mov
cmp
ud0
sub
mov
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
in
jmp
push
jmp
push
jmp
push
jmp
push
pop
jmp
add
mov
sbb
jne
in
ljmp
aad
push
pop
mov
jmp
mov
aad
lcall
or
je
cmp
jne
cmp
push
sub
lock
ljmp
add
addb
or
jo
hlt
out
sub
mov
inc
mov
add
and
icebp
jg
or
push
push
jge
or
shr
orl
jmp
jp
decl
lret
not
ljmp
hlt
jmp
mov
mov
and
and
or
jne
add
cmp
call
mov
jne
mov
pop
fnstenv
faddp
pop
jmp
cmpl
cmp
cmp
jb
cmp
pushl
cmp
lock
jne
call
xor
mov
xchg
das
ret
ljmp
lds
stos
pop
mov
mov
mov
cmpl
je
mov
movsb
inc
adc
je
mov
mov
and
iret
jne
pop
mov
stos
sbb
inc
mov
lret
push
in
xchg
gs
loop
jo
roll
rorb
idivb
nop
inc
xor
and
jne
pop
push
push
pop
lock
sbb
dec
hlt
mov
mov
sub
mov
cld
xchg
mov
inc
pop
pop
cmp
je
dec
mov
cmp
jne
cmp
xchg
cmpl
es
push
cld
lea
fmull
pop
mov
decb
jne
mov
mov
and
jmp
xchg
aas
mov
cltd
mov
and
decb
xor
jbe
jne
and
and
popf
pop
mov
add
add
jns
jo
jp
sahf
or
test
mov
dec
or
and
xchg
add
aaa
icebp
pop
mov
dec
or
dec
jl
aas
jge
cmpb
jne
xchg
orb
or
mov
cld
or
test
or
or
icebp
lea
dec
loopne
shr
or
mov
dec
je
mov
mov
dec
clc
mov
add
sub
mov
mov
and
ret
test
mov
jne
cmp
adc
popf
jne
andl
call
inc
add
cmp
jne
repz
jmp
int3
decl
aad
int3
or
and
mov
dec
and
push
push
push
push
sub
jo
push
add
inc
and
mov
fistpll
sub
jo
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
add
jne
push
add
inc
or
or
or
xadd
std
rorl
mov
popl
mov
inc
add
adc
mov
cs
or
cwtl
lret
push
jl
bound
pushl
cwtl
fcoml
and
mov
mov
or
dec
pushl
pushl
pushl
sbb
ret
push
push
push
push
mov
or
xor
xchg
call
mov
ret
mov
mov
mov
js
fisttpll
pop
jmp
dec
out
ja
sbb
push
push
ret
fnstcw
stos
and
push
push
pushl
pop
and
ret
testb
jg
push
je
xchg
inc
aas
aaa
test
jmp
incl
pop
pop
and
add
add
test
and
mov
aas
add
push
movl
and
push
icebp
jbe
inc
out
or
mov
filds
add
push
and
not
and
or
mov
add
add
or
add
arpl
fcomip
imul
shlb
cli
in
push
cmp
xchg
mov
push
mov
cmp
out
and
pushl
neg
and
je
sub
mov
jp
add
sti
mov
shl
add
push
adc
and
shr
je
rep
pop
adc
out
or
ljmp
xor
fsubs
ljmp
cmp
setne
cmp
pop
mov
and
dec
les
imul
cmp
push
pop
lds
jge
push
xlat
jg
add
cmp
je
mov
sub
mov
push
clc
pop
adc
stos
pushf
pusha
cmp
jne
push
dec
sarb
mov
mov
fisttpll
cmp
incl
rcrb
add
add
cmp
inc
adcl
popa
inc
jecxz
cmpl
add
xchg
push
mov
or
mov
pop
mov
and
inc
test
icebp
cmpsb
mov
add
sub
mov
into
mov
inc
ret
push
divb
cmp
adc
jnp
and
dec
and
jns
out
add
adc
inc
xor
xor
add
adc
add
popf
imul
add
push
in
add
pusha
push
cwtl
adc
idivb
or
and
inc
or
insb
or
sahf
pop
inc
ret
out
jnp
or
popa
jns
or
es
push
fcoms
das
cmp
cmp
adc
and
jecxz
fldcw
test
outsb
and
idivb
add
and
data16
stc
test
pop
enter
dec
cmpb
das
nop
mov
and
jle
mov
or
insb
lret
inc
and
popf
fidivrs
cmpl
push
and
and
fldl
mov
add
mov
pop
je
ret
sbb
ljmp
mov
sbb
inc
and
add
stos
mov
adcb
mov
mov
add
mov
adc
sub
cmpl
jne
lahf
rcrb
shr
push
jnp
mov
in
cld
mov
push
push
mov
mov
das
push
push
xor
inc
pop
inc
or
fdivrs
sbb
cmp
add
adc
outsb
sbb
cmp
aaa
hlt
jg
mov
add
mov
jne
decl
cmp
mov
and
mov
mov
mov
push
push
pushl
mov
mov
call
pop
pop
or
jmp
loopne
rcrb
repz
jb
lea
cmp
mov
sbb
hlt
test
je
movl
add
jmp
aaa
mov
je
movl
jmp
out
out
add
imulb
lods
push
push
push
sarb
shll
sbb
push
push
jmp
mov
call
sbb
adc
out
mov
pop
mov
pop
lea
loope
jbe
mov
xor
mov
lret
jnp
pushl
mov
sbbl
data16
mov
jge
rclb
andb
lcall
push
mov
testb
jne
push
push
push
test
mov
or
jne
lock
pop
je
sarl
icebp
insl
pop
and
push
std
rorl
clc
cmp
mov
arpl
inc
enter
jb
lea
cld
cmp
je
movl
cmp
pop
clc
pushl
ja
jne
iret
shlw
cmp
je
sbb
jne
push
push
fdivs
cld
paddsw
mov
jmp
xchg
lock
cmp
adc
dec
dec
mov
pop
dec
cmpb
je
dec
pushl
test
jne
dec
sub
rorl
sbb
add
inc
xchg
push
mov
push
jne
push
push
xor
inc
push
push
push
enter
into
and
fwait
and
out
ljmp
cmp
jle
mov
mov
dec
std
out
cmp
je
inc
cmp
jne
or
mov
jne
inc
adc
add
inc
adc
ret
loope
jp
test
ja
cmp
adc
pop
and
mov
pusha
jecxz
and
and
loope
and
add
pop
pop
lock
add
jne
call
mov
mov
out
test
negl
aaa
lea
movq
les
ret
je
movl
rorb
cmp
fdivr
mov
add
hlt
je
dec
popf
push
inc
jge
imul
sbb
loop
mov
rcll
or
and
jg
je
inc
or
add
sub
pop
sbb
test
mov
sbb
cmpsl
sbb
cli
pop
lret
insb
cmp
cmpsl
mov
movsl
movsb
pop
hlt
cmp
je
std
shlb
frstor
inc
sbb
inc
pushf
ret
push
push
push
ds
jne
push
push
mov
inc
adc
mov
aaa
jl
lret
nop
adc
or
mov
imul
pushf
adc
inc
or
subl
pop
mov
outsl
xor
out
aas
test
je
lea
push
mov
mov
mov
jo
sbb
hlt
je
mov
out
jmp
idivb
call
loopne
hlt
adc
scas
cmp
adc
cmp
je
faddl
enter
sti
je
in
loopne
dec
sub
xlat
test
mov
fdiv
cmp
jne
xor
jmp
movsl
lea
pop
push
jne
mov
and
in
mov
lock
push
dec
fbstp
and
push
int
or
sub
loop
in
clc
rorb
bound
je
pop
push
addl
and
lea
outsb
sub
lock
test
jb
xchg
les
lret
jbe
dec
cmpsb
and
call
stc
jne
shrb
rcr
out
call
sbb
xor
hlt
mov
sbb
adc
mov
ficompl
test
mov
inc
and
dec
cmp
ret
and
sbb
fadds
mov
nop
ja
jle
cmp
ja
mov
cmp
inc
je
lea
push
push
inc
test
push
aam
or
lods
imul
imul
or
jmp
sub
jmp
xor
sbb
jne
xchg
mov
mov
sbb
fcmove
mov
inc
cmp
je
rclb
or
cmp
and
mov
mov
fidivl
or
mov
int3
arpl
repz
je
ret
cmp
icebp
and
sahf
arpl
xlat
jl
loop
imull
outsb
push
push
adc
cmp
adc
test
and
pop
shl
dec
cmp
xchg
out
out
xchg
pop
stos
sahf
mov
push
push
insl
ret
sub
add
cmp
push
dec
adc
add
pop
test
jne
inc
test
ret
cmp
cmpsl
std
jmp
stos
pop
lds
test
jne
inc
add
and
in
xchg
inc
ret
mov
insb
and
cmp
ja
sbb
push
sub
mov
dec
xchg
ret
mov
cmp
in
out
add
je
mov
jmp
push
jmp
xorl
es
jne
cmp
jne
add
clc
sbb
and
mov
clc
rcll
jne
cmp
push
pop
je
std
test
jle
lods
mov
les
or
out
adc
loopne
shll
lods
jae
sub
inc
clc
stos
pop
decl
les
negb
in
mov
xor
cmp
xchg
push
pop
xor
div
cmp
sbb
inc
jne
cmp
call
and
into
lods
testl
xlat
lock
icebp
mov
les
or
cld
in
loopne
imul
cmp
inc
or
gs
mov
in
jge
sti
add
add
pop
lods
fisttpl
je
or
lock
fbstp
push
inc
ret
xchg
dec
cmp
outsl
test
mov
cs
adc
movl
fcomp
inc
movsb
lods
sbb
decl
loop
pop
je
or
push
and
pop
pop
pushf
or
pusha
jp
lea
cmp
or
rorl
sbb
push
mov
ret
adc
pop
lods
mov
pop
mov
pop
leave
xor
dec
call
or
and
inc
mov
sbb
mov
test
xor
mov
add
les
adc
dec
ja
movl
inc
mov
and
dec
fmull
or
popl
xor
fucom
daa
mov
dec
cmp
jb
mov
fs
loopne
hlt
fnstenv
dec
mov
adc
loope
pop
dec
cmp
jne
xor
inc
mov
ret
adc
in
mov
push
and
jne
cli
mov
xor
cli
scas
addb
leave
notl
push
jecxz
sbb
mov
jmp
sbb
call
mov
movsb
mov
test
jne
cmp
int
stos
jp
ljmp
aas
popa
push
dec
je
push
pop
mov
jmp
pushf
add
hlt
andb
pop
pop
in
or
jmp
mov
in
lock
push
pusha
je
inc
push
add
cmovnp
les
scas
mov
pop
push
jmp
push
or
mov
jmp
rcrl
mov
mov
cmp
jbe
les
adc
add
and
pop
icebp
pop
inc
and
xor
xor
jmp
imul
stos
aas
imul
fadds
pop
mov
adc
fidivs
sub
mov
sbb
scas
add
fldenv
inc
ja
fisubl
fimuls
mov
mov
add
pop
les
add
adc
mov
jp
loop
dec
sub
mov
inc
movzwl
mov
decl
loope
add
ret
andl
push
push
mov
lea
push
push
push
xor
inc
clc
fildl
inc
lock
sbb
push
push
pushl
adc
xchg
mov
push
adc
xor
imul
or
push
push
pop
into
cmp
push
push
push
push
bndldx
mov
and
sub
jge
test
push
and
push
pop
sub
push
lahf
xchg
dec
fldcw
adc
push
push
xor
cs
pop
sub
push
xor
push
pop
in
imulb
push
sbb
push
adc
push
push
add
enter
push
push
imulb
popa
sbb
inc
push
push
adc
cmpsl
in
dec
push
push
dec
push
push
dec
fadds
dec
push
push
push
push
pop
push
sub
xchg
std
push
push
push
adc
push
push
test
repnz
push
push
push
pusha
push
push
pop
ds
push
fs
push
adc
push
push
mov
jl
insb
push
push
push
fnstcw
push
pop
push
je
push
adc
lahf
xchg
dec
js
push
jl
push
fmuls
aam
push
sahf
push
push
sbb
xchg
push
push
pop
pop
aad
nop
nop
push
scas
icebp
andb
push
cltd
sbb
pusha
mov
push
ljmp
fwait
push
push
dec
xchg
fldl
inc
pop
xchg
mov
mov
pop
rcll
push
adcl
pop
bound
pop
es
jge
in
sub
mov
sbbb
popa
pop
add
mov
adc
add
add
mov
sbb
ficoml
inc
mov
lds
or
test
cltd
cld
jbe
je
cmp
pop
aam
jbe
pop
sbb
out
shlb
aad
pop
lahf
pop
andl
pop
lahf
pop
and
pop
lods
inc
iret
add
push
add
or
pop
xor
push
ljmp
pop
add
pushl
mov
jne
and
ja
neg
dec
sbb
jbe
pop
lods
pop
sbb
adc
pop
pop
pop
fs
inc
push
pusha
fs
insb
jo
lds
sbb
xorb
or
add
add
xor
daa
or
add
pop
or
or
add
std
or
or
add
loopne
rorl
out
loopne
cmp
or
push
push
push
jl
adc
mov
sbb
jg
add
xor
push
mov
xor
jne
rclb
rolb
mov
adc
ja
jle
mov
add
mov
sbb
add
mov
cmp
je
jb
decl
pop
pop
ret
xor
cmp
je
push
push
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
pop
pop
ret
cmp
jne
mov
lea
mov
mov
mov
cmp
cli
adc
jmp
pop
xor
sbb
xchg
add
sub
fs
inc
add
push
mov
push
adc
sahf
cmp
pop
pushl
sub
push
pop
pop
jae
adc
mov
in
jne
cmp
jne
mov
dec
mov
inc
or
mov
loopne
push
aam
std
clc
cmp
pop
pop
out
stos
fidivrs
sbb
push
pop
push
pop
mov
add
movsl
dec
jne
scas
push
xchg
mov
jne
adc
rorl
cmp
xor
es
call
cld
jne
sbb
jne
das
pop
mov
pop
mov
mov
rorb
mov
ds
push
dec
cld
sbb
jg
sbb
loop
fmuls
adc
sub
mov
xchg
dec
inc
sub
les
inc
hlt
je
jmp
xchg
mov
pop
or
jmp
mov
mov
jmp
mov
cmp
jl
cmp
cmp
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
js
xchg
cmpb
jne
jmp
mov
mov
mov
mov
mov
xor
inc
jg
sbb
add
addl
rorb
je
add
mov
sti
pop
pop
or
shlb
mov
cmp
mov
mov
dec
or
mov
mov
push
cmp
xor
subl
pop
lret
cmp
inc
or
add
les
push
je
inc
adc
add
nop
pop
adc
add
js
cld
inc
jle
cmp
add
mov
jbe
cmp
std
dec
pop
or
cmp
rorl
jne
cmp
sbb
adc
jge
mov
xor
test
xchg
rorl
clc
jne
add
ja
stos
int
loopne
cmp
test
in
xor
and
jne
or
imul
mov
cmp
sbb
jge
jne
mov
push
adc
adc
push
adc
adc
lea
sbb
ds
push
adc
xor
daa
lock
imul
daa
dec
sbb
std
shl
push
lea
push
push
inc
loop
sbb
cmpsl
mov
decb
sub
sub
push
adc
push
rorb
incl
imulb
ds
push
adc
roll
das
push
push
pop
je
adc
sti
push
mov
or
pop
add
mov
push
mov
jo
pop
add
scas
push
mov
je
std
or
in
cmpsb
or
mov
mov
mov
mov
dec
jge
mov
je
mov
xchg
xorl
xor
push
shlb
sbb
dec
push
sbbb
mov
adcb
or
sti
inc
daa
mov
mov
dec
pop
xor
push
mov
cmp
push
aam
pop
fmull
and
jmp
mov
mov
je
cmp
jne
push
shl
cld
movzwl
push
inc
mov
loopne
les
mov
push
mov
cld
rcl
dec
inc
andl
inc
xor
jns
ljmp
mov
mov
jne
add
cmp
push
mov
loopne
test
cmp
je
pop
sti
pop
pusha
pop
cmp
je
test
inc
aam
jle
rorb
add
inc
cmp
mov
repnz
and
cmpl
ja
jg
mov
call
inc
sarb
cmp
je
lea
mov
cmp
je
movzbl
pushl
push
jmp
mov
movb
movzbl
inc
cmp
jle
inc
inc
mov
pop
pushl
mov
push
loopne
push
stos
decl
mov
push
inc
fildll
xor
mov
mov
sub
push
mov
add
jbe
push
inc
aaa
jbe
xor
neg
shlb
and
test
add
mov
ljmp
out
fiadds
cmpl
mov
mov
lea
cmp
dec
enter
mov
mov
mov
fcoml
rorb
sbb
out
inc
lea
mov
mov
push
out
cmp
je
movzbl
sarb
lret
lea
push
fsubl
sti
out
incl
add
push
fmull
adc
lret
roll
cmp
cmp
loop
mov
shrl
cmc
std
sbb
sbb
jg
xchg
rorl
ds
mov
adc
rorl
and
dec
push
ss
pusha
rcrl
mov
mov
mov
mov
clc
adc
cmpsl
mov
mov
addb
xchg
rcrb
mov
jmp
pushl
dec
jne
pop
pop
js
cmpsb
pop
lahf
je
xor
adc
imul
lret
lea
mov
in
push
mov
pop
les
jno
jnp
ja
enter
lret
jmp
add
inc
add
xorb
or
cmp
pop
shrb
mov
jo
roll
and
roll
inc
dec
dec
aam
mov
add
ret
aaa
cmp
xchg
sbb
push
or
add
aas
cli
mov
mov
mov
shl
pushl
call
mov
mov
imul
pop
scas
dec
clc
lea
jb
lea
sarb
pop
mov
je
incl
cli
push
cmp
xor
rolb
lea
push
xchg
add
xchg
xorl
add
je
xor
cmp
popa
and
fdivrs
popf
jb
movb
cmpb
xchg
hlt
add
pop
je
cmpb
jle
in
test
ret
cltd
rcrl
hlt
adc
sbb
in
sbb
in
popl
in
ja
movw
mov
aad
ss
imul
add
decl
das
jne
or
cld
je
add
inc
xlat
ja
rcr
add
and
xor
cmp
xchg
pop
jne
enter
push
lock
cld
lds
cmp
es
xor
xor
xchg
push
fmull
mov
shl
ret
xor
mov
add
arpl
inc
outsl
pop
mov
lea
cmp
hlt
xchg
add
pop
lock
xor
loope
lock
in
ds
hlt
xor
aam
or
push
mov
add
mov
lea
or
dec
lea
add
jno
push
push
int3
call
pop
push
scas
pop
mov
fadds
into
add
pop
push
push
lea
inc
xor
mov
pop
lock
sub
inc
hlt
adc
pushl
mov
inc
hlt
pushl
mov
sub
add
sbb
xor
fistpll
cmp
pushl
cmp
cmp
inc
hlt
add
jge
pop
pop
minps
jg
jb
lea
lods
lea
in
cmp
out
inc
in
fistps
pop
aaa
sbb
cmp
in
mov
jo
addl
cld
inc
in
cwtl
jne
aam
add
xchg
jo
inc
sub
inc
mov
fwait
jmp
mov
mov
cmp
in
std
sbb
pushl
sar
inc
pop
add
filds
add
mov
or
lods
movsb
jg
cli
cmpb
in
pop
pop
mov
pop
pop
lcall
ret
sub
add
bnd
push
mov
test
je
mov
mov
incl
inc
decl
pushl
jne
pop
pop
ret
cmpl
mov
push
jbe
push
cltd
pop
idiv
add
mov
inc
decl
cld
incl
add
out
pop
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
mov
push
push
push
xor
cmp
out
idivb
add
decl
call
adc
mov
inc
cmp
jb
jmp
cmp
jae
ja
decl
push
add
mov
adcb
ja
dec
cmp
jne
cmp
pop
sub
jmp
mov
test
clc
aas
push
push
movsbl
cmp
push
push
mov
mov
jg
in
loop
inc
loope
clc
dec
jg
fsubr
call
add
test
je
lcall
je
sub
je
dec
je
sub
jne
loope
testl
pop
jg
pushl
daa
leave
lahf
mov
xor
cmp
jl
or
push
or
leave
ja
mov
mov
and
xor
orl
jg
fs
popf
and
movb
mov
incl
decl
xor
outsl
jne
sub
cltd
add
dec
cld
idiv
mov
cmp
jne
adc
lahf
sub
je
sub
out
mov
and
je
add
dec
jne
or
pushl
pop
leave
in
mov
lret
sti
scas
stos
pop
cmp
jg
sbb
dec
jmp
sbb
mov
enter
je
out
add
insl
adc
add
cmp
jge
leave
lahf
push
cltd
pop
idiv
cmp
xadd
push
mov
jne
push
imulb
sub
mov
jmp
jmp
mov
cmp
jl
cmp
jle
call
mov
cltd
push
pop
idiv
pushl
push
add
imul
add
jmp
inc
in
jbe
clc
insl
jg
out
sub
inc
xor
push
call
into
dec
mov
dec
je
dec
je
mov
adc
sbb
sbbl
jg
mov
add
jmp
mov
cmp
jl
jns
cmp
jg
and
pop
mov
xor
mov
pushf
loope
lret
cmp
add
push
dec
adc
jne
push
push
je
pop
aaa
cld
shrb
je
ret
je
pmaxsw
insb
mov
sub
add
push
rcll
push
out
push
xor
sub
test
jmp
jbe
mov
jg
adc
xor
cmp
adc
jl
xor
sub
push
nop
mov
push
xchg
dec
add
jge
sub
cmp
adc
aaa
movntq
push
enter
std
fcomip
jo
test
je
dec
je
dec
je
dec
jne
call
or
filds
xchg
mov
xor
cmp
mov
setne
mov
mov
fldl
andl
xchg
inc
and
mov
mov
and
pop
push
adc
mov
cmp
aaa
or
std
fldl
rolb
movsl
mov
sahf
pop
pop
jp
mov
push
push
or
int
or
jg
jmp
mov
mov
lds
es
scas
imul
insl
jne
xor
sub
push
cmp
pop
je
dec
je
mov
mov
jl
mov
loopne
popa
mov
out
filds
mov
jne
mov
push
adc
add
push
loopne
xlat
je
or
inc
or
or
out
out
loop
mov
mov
push
push
pushw
inc
loopne
loopne
jle
push
pushl
push
ljmp
sub
lock
ret
lock
mov
jg
cmp
add
cmp
pop
pushl
mov
mov
out
call
dec
test
jle
mov
mov
cmpl
jbe
mov
in
fidivrs
rorl
fcomi
inc
decl
and
inc
aaa
cmp
shll
gs
lcall
push
jno
dec
cld
aad
pop
test
je
mov
mov
ja
call
cmp
je
xor
outsb
iret
inc
inc
cmp
je
cmp
cmpb
enter
jg
mov
stc
cmpb
daa
xchg
cmp
sbb
decl
stc
dec
je
cmp
je
cmp
je
cmpsb
mov
sbb
test
pop
pop
je
cmpl
inc
pushl
lea
cmpb
je
push
mov
incl
decl
mov
mov
jnp
push
inc
decl
mov
test
sbb
int3
outsl
mov
dec
je
dec
je
dec
je
dec
jne
mov
iret
jae
bound
das
jbe
push
add
or
or
xchg
xchg
jae
push
mov
inc
add
sbb
add
adc
mov
mov
mov
dec
sub
add
add
test
cmp
jle
ret
lcall
test
cmp
je
fisttpll
cmpsb
push
pop
push
xor
inc
jle
cmpsb
pop
loopne
push
mov
ja
jbe
jne
data16
inc
add
je
fsubrl
imul
push
into
fs
push
fists
sub
je
test
pop
dec
je
adc
addb
mov
dec
push
jb
mov
push
jns
or
hlt
jg
adc
inc
sbb
mov
loop
jne
clc
in
xchg
movsbl
in
jmp
add
jmp
push
les
xchg
inc
sbb
arpl
fidivrs
adc
jmp
shlb
je
pop
ret
int3
fcoml
jmp
pop
xor
dec
dec
jmp
dec
or
sbb
sbb
into
add
adc
std
mov
jge
mov
adc
lret
jge
int3
jb
mov
daa
push
lea
clc
pop
xor
cmp
jne
or
or
dec
cmp
or
jbe
imul
pop
test
cmp
xor
mov
add
dec
adc
cmp
sbb
ljmp
loopne
xor
sti
mov
mov
jbe
and
je
cmp
je
xor
shrl
filds
pushl
leave
inc
cmp
jbe
pop
cmp
mov
mov
fstl
decl
decl
mov
sbb
jg
push
inc
por
mov
cmp
je
inc
xor
cmpb
jne
inc
inc
push
pushl
pop
pushl
movsb
fisttps
ret
out
aas
test
cld
ja
add
sbb
pop
rcr
jge
sbb
jge
std
mov
je
mov
and
dec
aad
jmp
dec
clc
cmp
mov
mov
jne
sub
mov
push
jmp
fldl
jmp
push
jbe
fldl
leave
dec
mov
pop
or
pop
maxps
subl
scas
pushl
push
pop
into
popa
ret
jno
iret
popf
mov
ret
pushl
push
sbb
leave
pop
sbb
out
push
fcomps
cmp
dec
mov
push
nop
in
xchg
inc
je
fsubrl
xor
jle
pop
push
or
push
push
mov
ja
mov
mov
or
je
orl
and
fdivs
jmp
mov
or
pop
add
mov
sbb
add
mov
psubsb
pop
arpl
rclb
inc
cmp
mov
inc
push
push
test
je
aad
ret
cltd
sub
mov
pusha
aas
lock
call
decb
mov
pushl
jge
pop
jne
mov
decl
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
clc
ja
cmp
rcrl
dec
or
sbbl
call
sbb
inc
sbb
sub
mov
xchg
inc
scas
ret
adcb
xor
push
hlt
or
lods
mov
push
push
add
ficoms
or
or
mov
pushl
int
or
or
mov
push
push
test
subb
mull
mov
je
inc
inc
cmp
jb
movsb
ret
xor
ret
push
ja
pushl
imul
and
cmp
ja
add
jmp
or
roll
mov
lea
mov
test
jne
jp
pushl
rorb
jl
cmp
jle
sub
cmp
ja
inc
jmp
loope
popa
or
jl
xlat
aaa
mov
add
mov
push
lea
push
std
sbb
and
add
pop
mov
jne
and
inc
jmp
es
loopne
out
pushl
fcomps
adcl
std
xchg
je
andl
sbb
jle
pop
aad
add
std
pop
inc
mov
add
xor
xchg
jnp
or
incl
add
push
or
jp
icebp
arpl
add
shr
lea
stos
cmp
je
mov
mov
sti
mov
push
mov
adc
push
mov
pop
cmp
pop
je
dec
dec
out
dec
je
pop
adc
sbb
add
roll
pushaw
and
test
das
adc
push
push
or
sbb
dec
sahf
add
inc
je
xor
outsl
jo
dec
inc
or
cld
cmp
push
testb
pop
cld
or
jne
mov
sub
sub
pushf
add
loopne
jo
inc
add
cmp
imul
push
or
jge
pop
ret
xchg
or
or
mov
mov
fbld
enter
frstor
je
lahf
pop
out
and
test
jne
test
cmp
cld
out
mov
or
jmp
cmp
je
out
pop
jnp
test
jmp
daa
aas
pusha
adc
jne
sbb
repnz
push
push
mov
pop
mov
cmp
addps
cmp
negl
jne
int
inc
pop
and
addb
or
dec
and
xlat
xchg
and
int3
xlat
add
jne
cmp
jne
ret
inc
idiv
cmpl
jne
cmpl
je
and
jae
inc
or
mov
ds
incl
les
and
sbb
push
inc
push
mov
jmp
jecxz
xlat
adc
jne
fs
push
or
add
inc
mov
testl
rolb
pop
pop
aas
sti
mov
push
pop
jmp
jo
dec
push
push
jle
in
push
test
je
add
movsb
sbb
dec
adc
and
xchg
rcll
lds
and
mov
xor
popa
mov
pop
push
cmp
jne
rcrl
fsubs
lea
mov
mov
je
lea
push
test
test
rclb
fwait
repz
or
inc
add
or
sbbl
cld
xlat
sub
jb
nop
cmp
jne
add
jl
push
push
pop
mov
cmp
je
out
mov
int
dec
xchg
xlat
nop
jmp
inc
cmp
adc
or
push
or
mov
jmp
movl
sbb
push
mov
add
leave
and
mov
mov
mov
xchg
sti
push
orb
xor
sti
addr16
movzwl
push
cmpsb
add
pushl
in
shl
call
xchg
adc
ja
ja
mov
mov
push
sbb
mov
data16
xlat
decl
and
test
je
cmpw
mov
jl
mov
ds
fdivr
sbb
add
sti
sbb
pop
push
sub
cld
inc
lea
push
push
call
sbb
push
add
xlat
adc
pop
rcrl
mov
jmp
xor
push
jg
dec
lahf
rorl
ret
movzbl
movzbl
sub
je
out
incl
mov
cmp
je
movzbl
movzbl
sub
je
xor
fisttps
dec
lcall
decl
pshufw
cmp
push
std
cmp
add
push
push
add
cmp
movzbl
nop
inc
lcall
sub
dec
fdivrp
mov
cmp
je
movzbl
pxor
fwait
cli
mov
sub
je
test
setg
lea
movl
jno
movzbl
push
repz
aaa
cmp
mov
push
xchg
outsb
inc
add
jecxz
arpl
out
cmp
lods
mov
cmp
je
mov
fstl
xchg
mov
push
mov
push
push
add
pop
ret
jle
test
or
inc
or
or
or
push
mov
push
fisttpll
or
or
ret
jle
test
or
inc
or
sbb
xchg
mov
and
add
dec
or
dec
push
nop
push
xor
paddsb
cwtl
mov
mov
cmp
mov
push
cltd
cmp
sub
dec
push
mov
or
push
adc
fs
imul
test
jle
test
mov
cmp
fcoml
sub
add
sbb
cmp
push
nop
out
push
sbb
imul
add
ja
out
nop
sbb
sub
add
cmp
mov
push
nop
out
sbb
imul
inc
sbb
cltd
cmp
cmp
mov
mov
dec
sbb
movsb
cmp
push
pop
rclb
lcallw
fbstp
shll
ret
out
and
cltd
sti
incl
iret
add
cmp
ja
out
push
jmp
in
inc
in
jp
in
cmp
scas
in
mov
sub
add
and
push
je
xor
ja
cltd
scas
out
out
cs
fs
adc
inc
call
call
cmp
and
add
lea
add
ljmp
lret
mov
std
out
mov
cmp
mov
sub
and
mov
dec
in
push
xorb
pop
out
out
ret
xor
out
out
mov
popa
mov
inc
lock
mov
sub
mov
out
mov
dec
icebp
rcrb
repnz
leave
add
out
or
cmp
mov
inc
add
jae
mov
mov
dec
cmc
push
add
adc
push
div
imul
div
in
inc
cwtl
mov
clc
cmp
test
cltd
cmp
sub
cmp
dec
stc
stc
push
mov
cld
push
cli
cli
cmpsb
jmp
sti
sti
and
pop
pusha
mov
mov
cmp
je
xor
add
pop
jns
xchg
xor
std
sbb
inc
call
mov
decl
mov
decl
popa
shll
adc
jg
and
mov
cmp
je
jge
inc
mov
in
inc
cwtl
and
xchg
sbb
sbb
sbb
into
clc
orb
out
inc
out
fidivl
nop
fsubr
and
inc
jno
loop
sbb
int
cmp
lret
ss
and
xchg
xchg
clc
incl
decl
jmp
adc
enter
ret
in
dec
in
mov
mov
lcall
push
fistps
imul
inc
out
cmp
mov
mov
mov
mov
add
lret
inc
dec
mov
push
lret
pop
push
xchg
nop
lret
mov
std
adc
repz
mov
mov
and
mov
movsb
fstps
mov
mov
mov
jbe
div
cmp
mov
mov
pop
dec
cmpsb
jae
mov
lret
adc
nop
pushw
lret
icebp
cld
imul
mov
mov
cmp
inc
sti
mov
mov
mov
iret
push
xchg
or
push
adc
movsb
leave
data16
mov
movsb
fdivrs
es
test
nop
incl
iret
mov
cmp
lods
loop
mov
xor
outsb
not
lods
jecxz
inc
jbe
push
fcomps
push
mov
push
lods
xchg
mov
cmp
inc
push
movsb
out
sbb
xorb
mov
inc
in
or
dec
push
push
sub
push
mov
add
ljmp
nop
mov
loopne
adc
idivl
ret
rcrl
mov
xor
add
out
cmp
mov
ss
out
push
and
mov
inc
ss
push
pop
mov
int
push
mov
stc
and
in
dec
out
repnz
mov
sbb
into
sbb
mov
mov
stos
push
push
mov
mov
push
push
mov
xor
ja
mov
cmp
mov
sbb
into
sbb
mov
mov
and
push
add
mov
push
push
mov
nop
sbb
xchg
adc
mov
or
and
fsts
and
jbe
push
mov
mov
mov
cmp
je
orb
loope
inc
loope
loope
loope
mov
popf
sbb
add
lods
sbb
div
jmp
mov
push
add
mov
mov
cmp
sub
movsb
leave
mov
incl
nop
or
lcall
decl
fbld
mov
cmp
mov
test
jnp
div
sbb
mov
push
lcall
cmp
xchg
mov
mov
inc
in
mov
ss
out
je
adc
inc
push
push
lcall
decl
fbld
mov
cmp
mov
insb
pop
inc
js
cmc
adc
int
lret
push
cmp
xchg
mov
mov
cmp
mov
ss
out
pop
and
nop
inc
aas
push
lcall
popa
inc
lcall
push
lahf
loopne
cmp
mov
ss
cmp
and
nop
inc
mov
lcall
decl
lcall
jmp
test
aad
ljmp
mov
xchg
testb
cli
inc
add
decl
incb
pop
wbinvd
stc
stc
inc
add
std
inc
add
icebp
inc
add
inc
add
jg
xor
inc
repz
inc
add
clc
inc
add
cld
inc
add
xor
add
cmp
inc
add
testl
scas
sti
inc
add
inc
and
fbstp
xchg
jae
mov
push
push
mov
mov
sub
leave
leave
fcos
je
dec
je
ja
cmp
stos
inc
or
and
repz
xor
xor
mov
movzbl
sub
je
xor
addr16
lea
jg
out
decl
mov
pop
add
inc
lcall
cmpsb
cmp
out
sub
add
jo
cmp
add
jle
mov
add
add
fsts
dec
testl
add
test
and
int3
je
adc
aaa
idivb
jo
cmp
out
lret
or
or
and
or
inc
mov
and
loop
sbb
cs
jo
cmp
or
or
cmp
mov
or
out
cmp
ja
mov
pop
pusha
cmpsb
jg
adc
jno
int3
jne
adc
sub
sub
out
sbb
dec
adc
or
add
pushf
adc
out
or
je
pop
jo
and
idiv
sbb
adc
jno
jo
sub
in
lret
cltd
dec
adc
nop
adc
inc
inc
add
rcll
ja
cwtl
jmp
inc
mov
xchg
cltd
outsb
in
cmp
sbb
jb
and
into
push
mov
xorb
push
nop
rcrb
lcall
je
mov
cmp
je
sub
lcall
jne
sbb
sbb
pusha
push
push
movsl
movsb
imul
cmc
jmp
jecxz
and
ret
sub
cmp
jae
add
out
clc
mov
xlat
jmp
aaa
icebp
jmp
push
in
push
in
jno
mov
push
in
xlat
popf
cld
test
sbb
pslld
cmpb
mov
in
mov
mov
out
fwait
in
pop
aas
dec
fsts
sbb
jne
negl
jle
call
push
sub
adc
das
xor
orb
dec
daa
dec
bound
sub
sub
out
push
ljmp
icebp
push
jmp
add
cmp
iret
ret
mov
in
cmp
in
sub
mov
pop
dec
es
and
es
and
push
jle
cmpl
cmp
fcoml
sub
lods
jmp
invd
dec
pusha
maxps
and
mov
sub
push
repz
leave
std
sbb
push
insl
pop
jo
sub
or
cmc
and
dec
and
push
mulb
int3
in
bound
pop
push
mull
popl
and
push
clc
cmp
push
clc
xlat
mov
adc
insl
stc
mov
mov
lock
push
jo
xor
and
mov
push
sti
and
mov
cmp
sub
sub
sbb
xor
test
jne
mov
push
std
in
mov
jo
push
fcomip
adc
sbb
xor
jmp
inc
decl
mov
aas
nop
adc
add
cmp
pop
or
adc
jecxz
adc
push
leave
xchg
jae
mov
hlt
and
nop
es
fdivr
and
xor
xchg
and
push
out
push
out
sub
scas
in
or
mov
in
add
add
lods
fsts
jle
andl
mov
mov
push
jo
or
and
popf
and
in
ja
fmuls
out
cmp
mov
scas
in
xor
in
add
rcrl
and
push
and
mov
stc
fcomip
cmp
mov
mov
mov
mov
daa
push
inc
lcall
pop
and
and
cli
fldl
mov
cmp
scas
in
je
outsb
or
xor
sub
out
clc
push
add
pop
mov
and
out
insl
cs
cmp
ret
mov
cmp
push
or
mov
add
in
and
xchg
sub
mov
mov
cmp
inc
and
test
jle
mov
sti
adc
loop
push
loop
loop
mov
pop
daa
icebp
idiv
jecxz
sub
popa
int
shlb
sub
pop
pusha
ret
lcall
xchg
push
out
xor
bound
std
bound
imul
inc
sub
sbb
in
and
sub
xor
mov
ljmp
pop
pusha
cmp
daa
into
in
lret
mov
fsts
or
fldl
out
cmp
mov
inc
daa
mov
in
lret
mov
and
lods
fsts
xchg
jmp
or
cmp
mov
fcoml
daa
mov
and
jae
sub
jle
orl
or
add
cmp
cmp
sub
and
jo
mov
pusha
das
mov
mov
and
push
cli
cmp
push
cmp
daa
push
cmp
jne
sub
or
sub
mov
jg
das
and
mov
cmp
je
pop
ja
mov
dec
je
decl
jne
jmp
mov
cmp
push
enter
loope
loope
shl
mov
sub
loop
inc
scas
and
mov
inc
loope
pop
fadd
imul
in
mov
xor
push
ss
stos
jns
and
mov
inc
push
shlb
fdivs
mov
pop
pusha
xor
mov
sub
push
into
daa
mov
push
pop
mov
and
and
fdivs
mov
pop
pusha
xor
mov
sub
push
into
daa
mov
test
mov
and
icebp
sbb
inc
mov
mov
cmp
cmp
jo
ret
ret
xchg
sub
gs
jb
inc
add
in
push
and
stos
and
out
sub
mov
cmp
push
jp
jb
add
mov
lds
popa
jp
lock
inc
imul
jp
ret
fistps
cmpsl
push
mov
cmp
mov
mov
mov
daa
push
ss
mov
push
int
mov
inc
xor
int
mov
inc
mov
and
xchg
cmc
pusha
inc
je
adc
xor
sub
mov
movzbl
sub
je
rclb
mov
in
sbb
sub
and
gs
daa
add
mov
mull
jne
jg
stos
add
mov
add
fwait
in
push
enter
leave
mov
paddsb
movzbl
dec
orb
sahf
mov
cmp
xchg
inc
and
int3
dec
add
or
add
mov
mov
loop
dec
or
adc
lcall
les
inc
add
cmovno
jecxz
inc
add
daa
jg
xor
push
mov
or
mov
adc
shll
xor
jns
inc
aaa
dec
incl
test
inc
add
ljmp
add
jnp
inc
sar
aaa
int
pop
mov
inc
add
add
int3
arpl
mov
push
mov
push
jnp
mov
test
decl
inc
int
push
push
cmp
push
jb
lea
test
jbe
fistpll
adc
add
shlb
push
cld
jne
mov
out
stc
out
or
push
std
jne
mov
cmp
jne
mov
xor
call
cmp
jne
addl
cmp
jb
jmp
movzbl
testl
cmp
aas
jle
push
testl
dec
cld
jmp
insl
jmp
mov
mov
out
inc
adc
adc
inc
inc
incl
cmp
jb
xor
pop
push
xchg
jmp
int3
add
mov
inc
lahf
mov
pop
rcrl
icebp
lea
sbbl
mov
sbb
pop
inc
xor
jmp
jmp
push
nop
dec
add
add
stos
rorb
lea
test
rorl
and
das
sbb
add
clc
ss
shll
lock
loopne
mov
mov
mov
cmp
dec
add
or
and
outsb
nop
inc
jo
out
mov
adcb
lods
and
les
or
add
mov
sub
xchg
adc
cmp
sub
mov
mov
sbb
fucom
mov
shll
xor
cmpl
push
shll
fwait
push
gs
hlt
sbb
inc
cwtl
cmpsb
jmp
insb
mov
rorb
add
cld
out
std
and
inc
add
out
in
add
adc
cmp
cmpl
pop
cmovb
mov
jnp
stc
jl
dec
xor
mov
mov
cmp
sti
out
xchg
cmp
push
pop
pop
lcall
pusha
lea
mov
cld
inc
add
mov
add
movl
test
add
inc
mov
test
xor
mov
fcoml
pop
mov
inc
lcall
call
rcll
cmpl
adcb
ja
pop
ljmp
int3
push
push
push
push
push
cmpsl
and
mov
xor
cmp
sarb
pop
cs
adc
add
xor
dec
repnz
dec
cld
adc
push
and
call
add
ja
and
lret
adc
mov
imull
push
mov
lds
xor
push
lea
sbb
sub
jg
je
cmpl
je
cmp
jbe
lea
mov
mov
pop
adc
add
jne
jae
inc
jge
out
inc
mov
jp
sub
mov
addb
xor
mov
add
jne
mov
inc
aam
push
or
push
or
push
or
cmpsb
ret
push
push
mov
push
pop
in
add
or
inc
or
fadds
jg
add
imul
pop
pop
dec
rol
out
mov
outsl
ss
mov
mov
shr
call
pxor
jmp
mov
mov
inc
inc
inc
xor
dec
rcll
push
inc
and
push
and
mov
in
sub
and
cli
decl
test
jne
mov
mov
and
mov
cmp
je
sub
dec
lock
jns
dec
jb
mov
test
je
add
mov
sub
mov
xor
mov
mov
rep
sbb
cs
add
das
mov
add
push
lock
cs
adc
enter
push
inc
or
cs
and
mov
push
daa
mov
pushl
lea
call
mov
lea
popf
das
sub
ja
push
mov
mov
add
jmp
mov
sarl
lea
push
jb
xor
push
adc
out
decl
stc
movb
pop
jmp
xor
mov
movb
inc
dec
push
pushl
push
push
cmc
adc
jo
std
push
and
cmp
outsl
add
xchg
lea
cmp
ljmp
lock
std
xor
jmp
movzwl
and
rclb
xchg
or
rorb
xchg
inc
jne
inc
and
dec
add
add
and
and
inc
cmp
andb
cmp
push
lea
sub
and
add
sbb
or
pop
sbb
sbb
and
inc
clc
shrl
mov
mov
fsubrs
sbb
pop
jmp
xchg
push
out
push
imul
loopne
add
out
sub
inc
adc
fmuls
inc
rorb
jg
inc
faddl
xor
cmp
mov
mov
mov
je
add
push
ja
jge
rorl
add
jge
add
aaa
push
xchg
sti
aas
push
push
dec
adc
jne
cmp
movl
test
sub
fwait
cli
aas
mov
pop
inc
cmp
jle
cmp
lea
in
adc
ja
mov
adc
je
sub
sbb
jne
call
mov
cli
xchg
das
out
lods
sbb
sub
and
outsl
cmp
jge
cmp
je
lea
fsub
add
add
inc
push
idiv
xorb
je
mov
cmp
je
push
sbb
in
mov
out
pop
daa
push
pusha
mov
jmp
cmp
mov
cmp
popf
inc
and
je
push
out
jne
mov
inc
inc
ror
loopne
sub
push
push
and
mov
into
je
pop
push
jmp
cmpl
out
fmull
test
sahf
mov
inc
or
inc
loopne
sarb
pop
imul
inc
sub
inc
mov
add
jbe
sbb
std
mov
cmp
pop
adc
cmp
je
mov
push
sahf
cmp
je
out
ja
or
adc
clc
add
pop
lods
push
pop
or
std
add
inc
sarb
cmp
pop
pop
jg
lea
xor
sub
cmpb
mov
inc
adc
push
pop
jmp
pushl
das
mov
xchg
and
pop
ret
mov
ffreep
mov
ret
mov
jg
pop
les
addr16
lods
add
test
or
and
mov
push
inc
jle
enter
sbb
loop
xlat
push
push
nop
mov
dec
mov
lea
xchg
add
test
arpl
mov
inc
xchg
mov
fdivs
mov
inc
int3
mov
or
mov
mov
add
and
xchg
jl
push
je
mov
xor
js
fildll
bound
test
xor
push
pop
push
jge
jne
pop
pop
mov
cmp
pop
inc
rolb
push
pushl
ret
je
pusha
fnstsw
div
push
or
push
jbe
push
call
add
xor
inc
mov
aaa
std
sbb
cmp
cmp
mov
jne
imul
add
push
adc
je
mov
sti
popf
aam
mov
sub
push
aaa
push
icebp
inc
outsb
fsubrs
add
dec
inc
pushl
push
push
dec
inc
inc
sub
mov
jne
pop
mov
mov
jmp
or
aaa
addr16
pop
jo
push
push
pop
cmpl
sub
xor
or
roll
jge
add
mov
jmp
mov
in
mov
adc
movntps
pop
aam
test
rorl
jg
add
inc
mov
mov
jns
add
addb
jne
movl
push
mov
rclb
mov
decl
or
jl
cmp
jg
inc
jmp
xor
mov
mov
in
mov
cmp
xor
enter
add
add
out
push
cmp
jge
pop
sbb
pop
enter
pop
in
mov
nop
ret
or
mov
ja
ljmp
lahf
jmp
mov
mov
mov
xor
mov
xchg
loopne
push
sub
cmpl
pushl
hlt
call
jne
add
cmpb
or
jg
incl
inc
hlt
jne
mov
push
addl
jbe
pop
add
cltd
mov
addr16
test
mov
or
jge
fwait
pop
mov
lea
pop
mov
pushl
pop
inc
push
xchg
mov
cltd
idiv
mov
mov
sub
mov
lea
cltd
fists
incl
sar
mov
imul
ret
mov
and
mov
ret
sbb
push
sbb
lea
push
stc
jmp
add
cmpl
jne
dec
leave
cmpb
lods
sbb
cmp
adcb
pusha
or
ss
cmp
jle
sub
jmp
clc
cmc
sbb
ds
or
or
add
fdivr
add
imul
add
add
mov
dec
sub
adc
xor
push
add
sub
imul
xor
and
cld
or
rcrb
dec
jle
mov
imul
jns
addl
div
es
sbb
or
pop
pusha
pusha
cmp
add
scas
loope
out
push
jbe
pushf
das
add
outsl
inc
lahf
adc
cmp
jae
test
push
adc
xor
inc
cmp
adc
mov
xor
mov
cmp
add
negl
lods
imul
pop
sbb
adc
jge
adc
push
sbb
or
push
jmp
adc
mov
xor
push
push
push
push
pop
push
lcall
push
lret
mov
les
add
mov
cmpl
pop
jne
sub
or
std
fstpl
pushl
push
jmp
push
or
push
push
subps
mov
fisttps
push
cmp
push
pop
push
pop
movl
clc
jge
push
and
fwait
out
pop
mov
adc
movl
jnp
jge
push
push
push
sub
pushl
aas
add
pop
gs
pop
add
mov
jmp
mov
jge
cmp
jl
cmp
jg
cmp
loopne
jle
cmp
jge
mov
pop
pop
leave
ret
cmp
jl
cmp
jg
cmp
jle
cmp
jge
ja
sub
mov
sbb
pop
negl
shll
xor
cmp
shr
or
loop
popl
setl
mov
jmp
push
push
fdivp
idivb
xor
push
sbb
jne
imull
cld
adc
mov
pop
push
pop
mov
sbb
movsb
jnp
das
stos
dec
cwtl
adc
lds
inc
daa
cmp
fmull
aaa
or
mov
jbe
push
stc
dec
cmp
mov
test
pop
inc
js
push
and
dec
push
movzbl
lea
inc
cmp
sbb
and
mov
lea
inc
cmp
ja
add
jg
add
je
pop
sub
jo
loopne
cmp
adc
mov
fmuls
mov
ja
jne
popf
and
and
mov
fcmovb
jg
sbb
xor
xor
lock
sbb
or
pop
pop
jmp
push
orb
gs
aas
and
mov
movzbl
lea
adc
ljmp
adc
shrb
lock
pop
adc
mov
decl
xor
jne
cmp
orb
lcall
add
or
fcompl
leave
sbb
push
xchg
mov
sbb
pop
dec
add
or
adcl
testb
and
xchg
int3
add
je
fcomps
out
pop
pop
ret
or
je
cs
add
ret
adc
daa
jbe
fadd
pop
adc
push
and
dec
inc
push
and
jnp
mov
mov
adc
fmuls
sbb
push
and
outsl
and
push
and
push
inc
andb
and
pop
push
rcrl
or
pop
pop
out
es
jecxz
mov
pusha
xchg
aam
adc
subb
lds
jbe
es
and
stos
sbb
and
xchg
jne
std
or
subw
cmpsl
and
inc
shr
and
out
add
roll
pusha
sub
inc
push
cmp
inc
sub
cmp
or
aas
sub
pop
cmpsl
sbb
sbb
sbb
add
sub
add
and
outsb
loopne
push
push
je
adc
cmpsb
jne
push
xchg
mov
and
jmp
cmp
jbe
xchg
push
push
test
cli
pop
sub
sbb
xchg
repz
mov
jmp
decl
je
ret
addl
enter
cld
cmp
test
iret
ja
add
add
mov
lret
lock
orl
arpl
insb
pop
or
popf
pop
int
push
ja
sbb
leave
xchg
mov
setne
inc
cmp
ja
jg
inc
rcrb
push
jmp
mov
add
cmp
std
cmp
xor
je
movb
lea
fwait
or
scas
sub
neg
mov
xor
divl
sbb
cli
or
add
jmp
sbb
cld
loop
cld
fistps
push
or
push
cld
jb
cli
cmp
jb
out
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
xchg
andl
lret
or
test
jge
push
push
jmp
nop
fsub
push
push
or
fists
or
shrb
push
cmp
jge
inc
sbb
cwtl
shl
mov
and
dec
and
sub
rolb
push
inc
stos
sbb
pop
sti
push
aas
mov
aas
and
idivl
fnsave
sarb
sbb
inc
cmp
and
inc
into
std
cmp
add
cmp
ja
and
mov
divl
ficoml
ret
movb
lea
mov
sbb
push
pop
cmpsl
loope
icebp
sub
stc
or
mov
aas
sar
inc
inc
xor
inc
rorl
test
jbe
cmp
jb
xor
out
pop
push
movb
out
jle
jno
adc
fldt
jp
test
add
inc
sbb
mov
xchg
or
mov
pop
pop
leave
adc
rdmsr
sbb
jne
cmp
jg
jl
cmp
mov
adc
pop
cs
pushf
sbb
cmp
aad
push
das
sbb
jmp
cmp
sbb
sub
iret
jg
add
shlb
enter
ret
cmp
jb
mov
pop
jle
add
xchg
mov
mov
ret
sub
jmp
push
mov
push
mov
lcall
mov
notb
jne
cmp
je
lods
imul
les
je
out
call
add
pop
decl
mov
jmp
or
cmp
pop
jbe
mov
cmpb
jne
push
jmp
das
lods
into
test
je
add
mov
push
add
pop
ret
mov
lea
cmp
add
hlt
push
mov
push
push
arpl
mov
cmp
test
addr16
cmp
mov
je
cmp
ja
adc
out
pop
jmp
push
jne
cmp
and
adc
test
imul
jo
cmp
popa
push
add
jb
or
xchg
mov
mov
xchg
push
push
pop
fbstp
imul
ret
ja
mov
je
mov
cmp
je
or
hlt
or
mov
mov
mov
je
adc
arpl
push
lods
std
or
mov
jne
adc
jecxz
push
filds
lods
mov
jmp
and
jp
bound
push
imul
jmp
xor
push
xor
rorb
not
jne
cs
push
ds
push
rcr
inc
adc
jmp
mov
or
push
xor
add
cmp
and
je
push
call
mov
add
mov
mov
ret
out
xchg
or
clc
addb
test
cmp
add
sti
pop
and
jne
jne
add
ja
pop
sub
lret
je
mov
ja
cmp
jne
or
cmpsb
shll
fcmovnb
sbb
mov
dec
pop
xchg
lock
mov
adc
or
inc
in
and
adc
and
and
loop
pop
pop
mov
mov
xlat
adc
in
push
rcrl
mov
xlat
test
jns
sbb
pop
or
faddp
cmp
jp
clc
push
pop
mov
mov
jmp
les
adc
je
test
loopne
pop
sbb
icebp
shll
inc
push
mov
mov
add
shll
jbe
call
pushl
stos
fsubrl
je
inc
jae
gs
pop
push
and
add
pop
popf
jge
or
mov
jae
mov
cmpl
add
testb
notl
mov
les
or
incb
pop
and
dec
jnp
adc
cmp
mov
mov
call
adc
xor
addl
dec
cld
mov
movb
pop
jmp
push
and
and
sub
fdivr
movb
incl
push
push
lea
push
push
pushl
inc
ffreep
popa
adc
outsl
int3
cmp
jne
push
mov
decl
mov
clc
jmp
movzbl
xor
mov
or
cmpsb
shll
loope
js
add
add
dec
mov
xchg
das
jge
and
dec
cltd
sub
jge
pushl
stos
stos
ljmp
jmp
or
movzwl
inc
mov
and
movzwl
inc
cmp
jmp
add
call
lret
add
push
lea
push
lea
sarb
xchg
add
xchg
add
ja
and
sbbb
add
cltd
pop
cld
out
ficomps
movzwl
and
fsts
jg
xor
leave
jge
xlat
mov
and
mov
mov
inc
add
and
fnsave
stc
inc
cld
pushl
push
push
fsubr
cli
jnp
lret
jge
test
jbe
jae
int
enter
cmc
call
mov
xor
cmp
lock
jne
or
ficoml
enter
or
sub
cmp
je
add
and
ret
mov
push
mov
mov
lea
jle
jmp
push
movzbl
push
xor
in
dec
jmp
mov
lock
mov
inc
jmp
cmp
xchg
dec
sbb
jmp
sbb
sti
cmp
jne
adc
test
jl
xchg
je
btcl
imul
dec
adc
idivb
mov
cmp
je
cmp
adc
insb
idivl
movl
clc
adc
jne,pn
and
add
pop
jne
inc
bound
xchg
decl
mov
movzwl
test
je
movsbl
sub
jmp
test
je
mov
cmp
cmp
push
ja
sub
add
cmp
jae
addl
std
decl
or
inc
cld
jb
jne
cmp
jbe
push
add
sti
cs
test
jne
or
xor
pop
mov
imul
add
jmp
jg
mov
test
jne
and
je
jle
pop
rolb
or
sub
jne
jbe
decl
cld
fwait
adc
sbb
movl
dec
cld
jmp
mov
sbb
neg
adc
mov
inc
push
out
push
dec
fisubrs
add
rol
xor
inc
jmp
and
push
adc
xor
pop
pop
pop
popf
jb
or
xor
cmp
rcrb
mov
cmp
gs
enter
xchg
mov
add
rcl
xor
xchg
sub
and
sbb
xchg
push
ret
dec
cltd
xor
fs
jb
mov
inc
testb
inc
mov
cmp
or
and
mov
or
sub
jl
mov
cmp
jne
adc
inc
mov
pop
aam
rolb
rcr
sub
enter
and
push
mov
mov
mov
and
pop
inc
cmpl
sbb
mov
jne
adc
jg
icebp
cs
les
push
orl
sub
ja
mov
je
adc
and
xor
in
idivl
and
adc
sbb
jne
and
or
dec
dec
or
push
mov
push
push
mov
decl
sub
mov
adc
sbb
movzbl
inc
inc
test
icebp
sub
jmp
data16
decl
shrl
sbb
mov
lea
cmp
fwait
jb
adc
cmp
in
jb
ja
mov
cmp
ljmp
call
inc
lock
cmp
jne
xor
cmp
jb
ja
cmp
out
divl
jbe
sub
clc
in
pop
mov
adc
mov
mov
inc
hlt
jne
hlt
push
pushl
pushl
out
ljmp
add
fdivl
leave
add
adc
mov
mov
mov
mov
incl
fistl
nop
jbe
sub
add
mov
or
pop
hlt
ja
jb
cmpl
ja
cld
std
dec
push
cmp
jb
ja
pushl
add
jmp
cmp
push
or
dec
hlt
jmp
adc
dec
andl
mov
jmp
sbb
scas
push
pop
mov
and
lock
std
or
roll
neg
fwait
dec
hlt
cmpb
xor
pop
and
push
hlt
xchg
test
jb
sbb
popf
insb
add
sbb
lds
ret
int3
ja
jg
out
push
push
push
mov
or
je
mov
pop
mov
mov
jmp
repz
mov
je
or
je
add
add
cmpsb
sti
incl
cmp
jb
cmp
ja
add
cmp
or
cmp
jne
sub
lock
xor
cmp
je
mov
neg
mov
pop
pop
pop
mov
stos
push
pop
mov
cmpb
mov
ja
add
icebp
mov
adc
lock
mull
fstl
enter
add
jmp
mov
jb
push
and
mov
shr
rcr
shr
rcr
or
jne
div
mov
and
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
dec
mull
xor
or
or
fisubl
mov
mov
sarb
adc
in
hlt
mov
adc
lret
jne
inc
mov
adc
pop
test
das
stos
cmp
or
je
push
dec
test
or
clc
punpcklbw
aas
mov
cmp
fs
sub
add
add
repz
jmp
sub
add
arpl
addl
and
cli
ss
les
inc
adc
add
icebp
and
adc
sahf
bound
fidivl
add
roll
loope
dec
push
push
push
push
xor
push
mov
cmc
adc
call
adc
push
push
push
push
call
cmp
clc
je
test
add
cmp
pop
sar
je
sbb
push
push
aad
sub
pushl
or
ljmp
mov
jne
je
cld
cli
jge
pusha
insb
cmp
add
fs
mov
pop
enter
icebp
pusha
jp
pop
pop
jmp
and
adc
mul
fildll
add
cmp
je
inc
inc
fdivs
scas
add
pushf
push
and
jecxz
dec
inc
outsl
mov
push
push
push
ret
add
test
outsl
and
add
xor
inc
cmp
daa
add
and
std
mov
je
mov
andb
sbb
adc
inc
push
or
subl
cmp
mov
lods
popa
adc
inc
and
jge
cld
aas
cmp
jne
push
dec
cmp
pop
je
cmp
je
mov
add
es
and
adc
mov
je
loopne
jle
cmp
ja
lea
sbb
clc
loopne
and
sbb
jmp
sbb
cli
outsl
in
jge
je
scas
clc
jae
inc
std
adc
push
push
bound
bound
adc
mov
lea
cmp
std
inc
lock
jle
cmp
or
loop,pt
sbb
push
sbb
fdivrl
ffreep
cmpsb
add
add
ret
dec
jle
fsubr
add
fbstp
sbb
ficoms
les
mov
lea
into
adc
push
call
dec
cmpsl
call
push
cmpw
push
cmpw
scas
mov
push
lods
mov
add
into
mov
jmp
lea
pop
pop
pop
mov
bound
les
adc
leave
mov
imul
aam
mov
jae
scas
jo
xorb
scas
add
dec
and
jne
mul
addr16
out
xor
loope
fs
add
loope
and
add
pop
sbb
scas
arpl
or
sub
adc
fwait
cmpb
xor
cmp
icebp
call
and
jne
push
mov
sbb
call
or
add
inc
mov
mov
push
add
cmp
jle
mov
jg
or
iret
jne
or
xchg
sub
pusha
inc
add
mov
cmp
jle
mov
mov
and
rorb
push
sbb
adc
jge
out
mov
hlt
pop
push
inc
fisttps
stc
jle
rcrl
icebp
pop
xor
inc
cmp
jne
hlt
mov
out
jbe
sarl
test
xlat
es
out
jne
jne
push
pop
popf
mov
insl
femms
clc
out
test
inc
adc
push
jmp
pop
xchg
adc
jbe
mov
jle
cmpl
add
call
lea
je
mov
test
je
push
cmc
call
mov
cmp
jb
cmp
jbe
inc
lret
call
pop
inc
inc
out
sbb
sub
aad
mov
out
nop
jae,pt
outsb
mov
cmp
cmp
jbe
jmp
jge
mov
aad
jne
push
push
jecxz
adc
test
sub
incl
test
mov
jg
pop
jge
divl
lea
cmp
ja
test
sbbl
push
scas
in
aaa
fdivrl
pop
mov
jmp
loopne
cmpl
je
cwtl
lcall
or
sbb
push
std
leave
cmp
lcall
je
jle
leave
xor
cmpb
adc
cld
test
je
loop
and
orb
push
xor
cli
in
je
iret
push
pushl
lcall
test
popa
shlb
mov
mov
mov
cmpsl
sbb
cli
test
sbb
xchg
sti
xchg
cmp
pop
je
je
fnstcw
pop
icebp
lea
fdivrl
and
mov
xchg
std
jmp
sbb
gs
sub
and
add
test
roll
pop
scas
insb
xor
xor
and
in
inc
and
fstpl
and
mov
je
das
ret
pop
mov
lea
sbb
push
adc
pop
pop
add
pop
and
in
test
pop
mov
xor
not
push
enter
aaa
call
xor
ret
rorl
dec
adc
lret
jne
fistl
or
incl
mov
jmp
pushl
pop
push
push
shrb
aaa
aaa
stos
pop
xor
in
or
xor
mov
cmp
push
loopne
push
pop
push
pushf
dec
pop
cmp
or
call
push
jmp
push
aas
sbbl
mov
enter
mov
cmp
je
test
je
outsl
mov
aas
sbb
mov
sub
add
dec
or
neg
ret
push
jmp
xor
test
mov
jne
mov
ret
cmp
je
add
inc
cmpl
jne
push
push
inc
push
adc
clc
dec
jne
mov
fists
imul
fistps
pop
mov
test
add
or
add
mov
pop
cld
lock
push
mov
push
shr
adc
inc
or
adc
mov
lock
jmp
cmc
scas
mov
je
push
add
cmp
pushl
dec
inc
hlt
je
cmp
je
xor
cmp
mov
decb
xchg
sarl
cld
pop
dec
dec
clc
jne
std
ja
add
pop
mov
pop
or
and
sbb
or
outsb
add
je
int
pop
xchg
xor
insb
adc
pop
clc
jne
push
push
insl
or
mov
inc
je
mov
aas
jne
sbb
sbb
mov
test
jge
fstl
jns
cmp
inc
sar
adc
jl
cmp
je
lea
xchg
insb
push
clc
pop
jne
adc
sbb
mov
jge
ret
cmp
inc
add
in
inc
lea
cmp
jne
xorl
push
push
in
inc
in
aaa
icebp
jbe
xchg
cmp
je
jmp
stos
adc
fists
cmp
jge
neg
lea
icebp
sub
xlat
push
cmpl
inc
inc
push
push
cmp
test
outsl
sub
fbld
mov
lea
mov
ss
or
in
js
jne
inc
imul
jbe
pop
je
call
pop
out
or
stc
popa
or
decl
sub
add
mov
inc
in
pop
dec
xor
jle
push
hlt
xor
adc
paddq
in
pop
iret
pop
dec
cmp
je
mov
mov
arpl
pop
push
inc
lock
pop
adc
sub
pop
jmp
cmc
fwait
dec
or
in
cmp
dec
jmp
push
push
mov
aam
cld
imul
cmp
pop
pop
je
stos
inc
and
es
add
sbb
test
outsb
or
stos
xchg
mov
jne
xor
jmp
push
mov
cmp
jne
pop
cmp
cmp
pop
pop
jmp
incl
mov
testb
je
inc
mov
cmp
je
movzwl
movzbl
filds
cmp
jne
dec
jmp
movzwl
cmp
je
inc
movzbw
out
mov
movl
cmp
ret
pop
push
adc
push
xlat
jmp
push
adc
push
loopne
hlt
adcl
lea
pop
ret
leave
call
adc
fs
xor
push
mov
shl
mov
lahf
inc
rclb
je
mov
add
cmp
je
jmp
adc
test
je
insb
jmp
fcoms
ret
shl
lcall
fmuls
rorl
add
ja
hlt
stc
xor
xchg
iret
xor
add
and
xchg
jne
and
jne
or
ffree
and
push
sarb
out
pushf
inc
cld
cmp
je
xchg
cmp
je
test
je
dec
rcr
inc
mov
faddl
aam
mov
pop
pop
mov
aaa
ret
lea
push
cld
shll
jmp
fdivr
and
jmp
jmp
add
jmp
jmp
ss
ret
jmp
ficoml
in
mov
and
add
mov
fwait
stos
ficoml
jmp
stos
push
in
and
push
push
cmp
and
jmp
push
cmp
and
stos
jmp
pop
push
in
sub
mov
test
and
mov
and
and
adc
mov
and
aam
and
push
mov
jmp
sub
jbe
and
fmuls
and
adc
sub
insl
add
jbe
and
and
jmp
mov
and
and
add
jmp
push
inc
sbb
and
adc
and
jmp
mov
and
and
mov
and
data16
jne
sbb
sarb
ss
jg
fadds
and
or
add
call
and
into
jg
mov
addb
jg
stos
jo
inc
add
insb
inc
add
test
add
inc
sti
aad
add
incl
sub
dec
gs
gs
xor
cs
add
je
or
inc
decl
dec
outsl
arpl
gs
jne
arpl
filds
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
gs
je
push
jb
arpl
mov
jae
add
push
imul
insb
outsl
arpl
add
push
jb
push
and
fnstsw
gs
outsl
jb
add
dec
jne
gs
push
add
push
inc
outsl
insl
insl
popa
outsb
fs
imul
add
add
add
add
mov
jb
js
je
add
insl
jae
outsl
jg
jb
shll
je
insl
and
jb
jb
add
or
dec
add
fucomip
dec
push
push
adc
add
dec
inc
add
mov
dec
inc
dec
dec
adc
or
popa
mov
jo
imul
and
jae
insl
popa
fs
je
gs
jo
inc
jmp
je
and
and
and
jg
imul
idiv
fwait
jb
arpl
or
gs
jae
and
outsb
je
arpl
cmpb
pop
daa
jae
jae
jo
outsl
jb
gs
mov
and
inc
gs
or
std
scas
and
rolb
lahf
xor
fidivrs
pop
dec
push
dec
dec
pusha
mov
jne
out
xchg
imul
insl
bound
fs
imul
out
mov
imul
imul
push
out
imul
bound
jg
jns
fstpl
or
and
and
insl
outsl
jae
and
gs
jg
pop
add
jae
insb
je
outsl
data16
insb
insb
insb
lcall
sub
jo
insb
gs
das
arpl
and
outsb
arpl
mov
or
popa
xchg
outsb
jae
jb
arpl
cld
add
insb
insb
dec
popa
imul
divl
outsb
outsl
je
outsb
outsl
jne
push
arpl
inc
inc
fcoms
test
xor
pop
inc
js
xor
das
sti
inc
mov
mov
je
outsl
add
outsb
arpl
packuswb
xor
dec
lahf
pusha
fs
mul
pusha
pop
xor
jne
popa
bound
and
push
jnp
aaa
or
pusha
out
daa
inc
jecxz
imul
mov
ss
xor
xor
and
popa
or
dec
pusha
fwait
mov
and
jbe
cmpsb
gs
das
push
push
and
clc
outsl
aaa
add
xor
pop
imull
outsb
pop
negb
out
cmpsb
outsb
jae
pop
fs
arpl
pop
xchg
inc
and
jo
xor
aaa
ret
popf
dec
pop
jne
mov
jbe
je
sub
das
pop
xor
sti
pusha
xor
popa
je
orb
xchg
hlt
jb
jno
gs
mov
xchg
in
shlb
imul
adc
jne
jne
addl
popa
repnz
jnp
outsb
mov
pusha
adc
outsb
je
sub
or
add
jb
lea
jae
imul
imul
mov
outsl
imul
mov
fs
incl
add
arpl
jae
data16
push
imul
lsl
sahf
add
ja
mov
jg
cs
jb
addr16
outsb
popa
xchg
jne
imul
cmp
outsl
ja
ja,pt
inc
cmpsl
and
or
cmp
js
adc
lock
add
fs
rorl
jle
das
dec
inc
push
dec
inc
dec
mov
dec
pop
fdivs
add
outsl
pop
inc
insb
jae
ljmp
pop
push
gs
popa
insb
jne
or
xchg
cmp
or
xchg
insl
inc
test
xor
gs
push
inc
push
dec
pop
dec
fadds
inc
aad
insb
push
into
std
ja
nop
pop
inc
outsb
fs
jo
outsb
inc
outsl
les
and
pop
es
outsl
ja
jmp
notl
gs
bound
dec
jb
fisttpll
dec
popa
jae
inc
insb
neg
xor
jne
add
cmovbe
dec
jb
addr16
outsl
js
add
inc
push
test
dec
inc
pop
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
dec
dec
inc
or
icebp
repz
inc
push
pop
inc
push
pop
pop
dec
sbb
pop
inc
dec
dec
dec
inc
push
inc
or
add
mov
std
fbld
add
mov
pop
or
and
inc
add
int3
inc
add
stc
inc
jle
lret
xor
movl
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
lcall
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
aas
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
lcall
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
inc
adc
jg
pop
cs
aaa
pop
xchg
out
insl
xor
add
or
jnp
add
add
orb
movntps
xchg
jge
add
add
xor
rcrb
inc
pop
cmpb
aas
or
js
pop
add
mov
aaa
test
fadds
add
pop
pop
cmpb
aaa
test
adc
aaa
dec
pop
add
add
cmp
adc
lock
add
mov
or
mov
add
test
decl
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
ljmp
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
dec
leave
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
push
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
ljmp
mov
and
mov
ljmp
jg
insb
xchg
inc
test
aas
stos
sub
test
dec
dec
cmp
sbb
push
add
and
jmp
aaa
and
and
dec
dec
das
fs
jns
sub
push
dec
add
inc
add
insl
bound
add
jbe
dec
arpl
push
gs
adc
mov
cmovno
jne
je
add
insb
inc
dec
stos
out
sbb
lahf
dec
inc
jo
imul
bound
inc
cld
inc
bound
popa
and
iret
jne
out
pop
add
push
add
out
jbe
ja
outsb
add
jns
inc
pop
jb
cmp
dec
popa
outsb
jle
out
add
je
jb
sbb
imul
jae
push
sti
inc
add
push
gs
gs
jmp
jg
dec
outsl
outsb
push
add
pop
popa
je
inc
jb
add
mov
add
add
pop
add
jo
push
dec
push
hlt
popa
insl
das
jo
jne
aad
xchg
fs
gs
imul
mov
and
outsb
andl
filds
je
sub
popa
add
pushf
test
jb
scas
mov
pop
rcrb
insb
outsl
jbe
imul
jo
gs
out
jg
jb
outsl
sub
jb
arpl
outsb
popa
cmp
and
jne
lcall
outsb
gs
jp
popa
insb
popa
outsb
add
outsb
addr16
aaa
jbe
adc
push
orb
ss
and
popa
imul
outsb
addr16
arpl
mov
aad
and
jae
decl
jne
jae
imul
jae
sub
out
arpl
jo
outsb
pcmpeqd
gs
gs
mov
pcmpeqw
sahf
cpuid
xchg
in
into
iret
and
add
gs
pop
data16
jb
addr16
xchg
popa
outsb
popa
insl
pop
movd
add
inc
and
fstl
insl
gs
outsb
seta
lock
fs
popa
mov
or
mov
inc
gs
and
insb
nop
mov
sti
jbe
outsl
jb
arpl
xchg
std
mov
popa
outsb
and
jo
bound
ja
incb
jnp
outsl
and
scas
arpl
outsl
insl
bound
lds
out
daa
push
popa
out
punpckldq
imul
outsb
je
rcll
sbb
jae
sub
out
popa
jp
insb
imul
ja
addr16
outsb
jns
cwtl
imul
jae
add
adc
imul
ja
dec
jb
xor
popa
ds
iret
imul
mov
pop
addr16
popa
outsb
push
add
insb
jne
jmp
fwait
loope
jne
push
adc
push
scas
imul
adc
jb
mov
lret
incb
data16
outsb
arpl
cmova
dec
popa
fs
sbb
mull
insb
aam
add
jae
pop
pop
lock
xor
leave
and
jns
imul
cmp
push
xor
cld
xchg
cmp
arpl
imul
jae
das
mov
mov
jp
data16
sbb
pushf
loope
inc
dec
jbe
fs
adc
fiadds
ja
je
lcall
sbb
adc
popa
decl
or
push
daa
jae
insl
jo
imul
rorl
imul
pushf
fstpt
push
jae
mov
jne
outsb
add
fsubrs
add
gs
outsb
sub
fsubs
and
pop
xchg
roll
xchg
inc
push
sti
inc
dec
push
add
mov
pop
dec
dec
inc
add
inc
add
dec
dec
add
dec
add
dec
push
add
pop
adc
out
jae
sldt
pop
dec
dec
add
rolb
inc
dec
push
add
jns
jae
inc
enter
pop
inc
add
add
add
dec
add
add
dec
inc
push
jns
push
add
push
add
add
push
add
jg
or
iret
inc
add
inc
add
inc
add
in
inc
push
dec
add
push
add
movsb
fwait
inc
push
jns
add
add
dec
inc
mov
pusha
dec
push
push
add
push
add
stc
out
sub
add
push
inc
add
inc
push
push
add
into
push
jns
or
loopne
dec
add
dec
add
inc
add
js
xchg
inc
push
inc
add
push
dec
add
inc
push
jns
add
dec
add
add
cmp
testl
add
pop
push
add
push
add
jl
enter
mov
add
cwtl
repnz
inc
push
add
push
add
push
push
inc
add
push
add
out
repz
dec
add
pop
pop
push
pop
aaa
fistpll
dec
dec
inc
add
dec
inc
add
pop
dec
sarl
enter
aas
sbb
stc
jmp
fwait
or
push
dec
add
push
dec
add
int3
inc
add
inc
add
iret
jge
mov
bswap
pop
bswap
jge
mov
dec
scas
ja
sysret
jg
cltd
cwtl
cmpsl
mov
or
adc
add
or
add
add
adc
or
add
dec
dec
popa
test
leave
dec
jmp
add
push
test
pop
cs
in
xor
xchg
pop
mov
mov
out
stc
mov
mov
push
sub
push
adc
and
cmpb
nop
dec
rcr
inc
pop
or
cmpsb
aas
xor
jg
add
inc
push
sub
lret
leave
inc
mov
inc
add
add
mov
add
pop
imul
je
pop
push
gs
jo
xor
bound
xor
xor
push
add
jmp
outsb
cmp
xor
xor
jne
jo,pn
scas
or
xor
pop
shlb
add
add
jo
add
cmp
int
push
xchg
mov
sbb
adc
pop
ljmp
jae
add
add
add
test
mov
shlb
sbb
or
dec
pop
pop
mov
std
sub
inc
add
add
pop
pop
testb
aam
dec
pop
aas
fdivs
in
pop
inc
add
clc
or
pop
inc
add
add
out
rolb
add
jae
test
pop
addr16
add
add
pop
fsubrs
pop
pop
shrb
add
and
sti
jmp
add
inc
push
fld
push
lods
outsb
aas
pop
pop
jno
and
inc
shlb
jb
int3
std
sbbb
inc
add
add
in
xchg
or
push
fld
jle
xchg
test
aas
inc
test
mov
fs
or
pop
outsl
pusha
or
mov
fistpll
fs
mov
or
adc
lods
aaa
pop
pop
fldenv
sbb
mov
mov
mov
loopne
adc
mov
stos
imul
jg
sub
pop
fstps
sub
push
mov
xchg
pop
lahf
jmp
ret
ret
ret
xor
in
int
fnstcw
test
clc
jo
jg
jns
sub
add
into
iret
add
pop
jne
add
push
cmp
or
adc
or
inc
add
scas
imul
adc
sbb
adc
mov
imul
cmpsb
imul
inc
add
cmpsb
imul
push
cmp
pop
and
and
in
mov
insb
pop
cmpsb
jmp
scas
in
pop
jp
dec
pop
cld
call
aam
pop
add
push
out
mov
xorl
or
popa
push
lea
fs
push
in
mov
nop
push
fs
push
xchg
xchg
xchg
jae
push
inc
xor
push
cmpsl
mov
idiv
orb
sbb
aas
add
add
pop
insb
test
or
pop
inc
gs
xchg
aas
pop
cmp
jbe
js
fsubp
add
cmp
ljmp
add
loope
stos
mov
fiadds
adc
mov
sti
ficomps
testb
cmp
jecxz
sahf
push
xchg
adc
sti
pusha
mov
xor
subb
ljmp
add
pop
and
out
push
inc
pop
pop
pop
pop
jnp
idivl
movlps
pop
xor
test
jae
shll
dec
pop
shlb
pop
pop
outsb
xor
inc
ret
add
and
hlt
dec
call
adc
outsl
lahf
sti
or
or
into
xor
pop
pop
xlat
pop
pop
sbb
testb
lods
inc
add
fadds
outsb
add
add
and
pop
push
mov
insb
add
pushf
fstps
nop
int
pop
add
add
test
push
pop
add
inc
or
pusha
sbb
add
hlt
inc
add
add
movsb
mov
inc
mov
cmpsb
filds
popf
or
inc
jle
pop
inc
js
inc
cmp
mov
mov
cmp
add
pop
mov
das
inc
out
outsl
push
mov
mov
in
call
rcr
push
pop
jle
xor
mov
ficompl
and
pop
fisubrl
stc
js
aas
fs
rcr
fsubp
stc
add
xor
pop
push
mov
add
sub
mov
add
aaa
sub
cwtl
push
xstore-rng
cmpsl
addb
sbbb
or
pop
les
loop
inc
loopne
push
cli
inc
add
out
cltd
addb
orb
sbb
push
mov
dec
sar
and
mov
inc
add
dec
shll
jo
pusha
pop
shll
sub
dec
shll
adc
aaa
dec
shll
or
cld
lret
inc
shll
fsubrs
shrb
cmpsb
jmp
enter
lods
mov
xchg
nop
mov
lcall
test
pop
sti
inc
add
add
mov
inc
inc
cmp
popa
iret
add
out
dec
add
aam
lds
push
sbb
stos
push
xor
or
aas
shlb
cld
inc
add
cmp
cmpsl
dec
xchg
pop
xchg
sub
stos
add
cli
xorb
jl
ror
add
mov
in
out
out
xor
daa
push
mov
and
inc
inc
add
pusha
repnz
add
dec
cmp
test
jae
add
cli
test
push
gs
inc
adc
sub
and
mov
add
and
push
and
cmp
cmp
add
mov
pushf
lds
xor
jge
sub
adc
jo
data16
mov
inc
and
ret
pop
outsb
jo
into
testb
pop
sub
lret
in
push
pop
js
ror
cmpl
mov
sub
jmp
or
sbb
ljmp
outsb
cmpb
sarl
mov
push
das
mov
jmp
fcoml
incl
jno
jo
add
aam
cmp
outsb
cli
or
mov
mov
add
cli
or
in
ljmp
enter
push
pop
cmp
stos
pop
ud0
incl
daa
push
test
call
xor
rcl
scas
ja
cwtl
cmp
arpl
jge
incl
in
xlat
fldt
inc
sub
jg
addr16
push
mov
repz
sbb
decl
mov
ss
pop
hlt
test
cmp
mov
in
enter
movsb
and
decl
lret
repnz
shr
add
xor
dec
aaa
or
aam
in
and
lock
mov
enter
das
ja
cmpsb
stc
cmc
sub
cld
jo
dec
or
xchg
mov
mov
call
jmp
sbb
loop
ret
cwtl
mov
xlat
add
and
call
mov
xchg
xor
outsl
ud0
jg
sahf
sub
leave
xchg
imul
pushf
in
stos
inc
sub
add
movsl
pop
pop
mov
call
in
mov
adc
pushf
imul
les
rorb
shll
and
fcmove
cmpsl
inc
add
and
pusha
pop
fnstsw
inc
es
pop
pop
aas
mulb
jmp
out
mov
enter
mov
test
push
fwait
jns
jge
dec
cmp
xor
cmpsb
dec
test
dec
push
pop
xlat
lcall
cmp
push
fisubs
xlat
out
mov
lcall
insb
inc
jl
jne
jge
fs
outsl
inc
cmc
push
jg
add
mov
into
movsl
decl
dec
and
fwait
adc
hlt
xor
jg
mov
test
dec
es
call
movsb
aaa
test
sbb
inc
push
mov
pop
pop
cs
inc
jbe
dec
and
inc
pop
mov
mov
jb
repnz
sub
jmp
pop
sbb
movsl
decl
pop
leave
pop
push
int
pusha
mov
cmc
je
rcrb
sbb
rcll
dec
rcr
ror
dec
dec
inc
sub
xchg
adc
mov
stos
dec
pop
push
lods
pop
xor
orb
call
mov
sarb
out
cmp
jne
stc
int3
mov
aaa
rclb
and
sub
dec
fyl2xp1
sub
js
into
push
arpl
inc
jo
aas
aad
aas
sub
xor
push
sarb
icebp
ljmp
inc
sti
sub
into
jmp
int
shl
ret
jno
iret
inc
pop
push
shrb
add
mov
mov
jmp
xor
test
enter
mull
dec
test
rclb
fbstp
cmpsl
into
mov
int3
fsts
pushl
and
or
test
cmp
cld
xor
psllq
inc
xchg
xchg
push
mov
ljmp
leave
enter
fwait
sub
test
mov
inc
into
jns
int3
xchg
fiaddl
ljmp
mov
add
in
insb
imul
lcall
scas
jne
cmpsb
xor
mov
or
in
xorl
mov
mov
push
mov
andb
sub
aas
adc
sub
mov
roll
or
popa
cs
incl
imul
std
shlb
movsl
ret
dec
adc
ret
insl
mov
xor
cli
push
mov
push
fs
add
ja
cld
icebp
out
pop
mov
mov
mov
pushl
mov
add
xor
and
push
fnstenv
mov
icebp
hlt
mov
mov
jge
call
sbb
test
jmp
push
inc
es
xchg
fs
push
mov
out
inc
mov
cltd
lret
pushl
and
ret
cmp
xchg
mov
int3
aas
push
cld
dec
test
mov
iret
jp
arpl
mov
dec
mov
je
cmp
gs
mov
outsb
mov
push
add
out
mov
scas
adc
lcall
insl
aad
pop
fisttps
repnz
popf
jo
jmp
lods
xor
mov
push
inc
lock
arpl
ljmp
pop
sahf
out
fwait
push
leave
cmp
mov
icebp
adc
out
sarl
jne
cmpxchg
jmp
into
mov
add
or
movsl
add
lret
pop
jnp
shll
and
pop
or
call
lcall
add
ret
test
and
idiv
fwait
cmp
jg
and
cmpsl
cmp
sbb
out
mov
cli
mov
neg
das
inc
rorl
jmp
jae
push
fcmove
clc
arpl
dec
bound
into
cli
sub
or
jg
jo
pushl
loop
jg
dec
lock
repnz
sbb
popa
iret
addr16
jp
or
sub
jle
jge
xchg
adc
fstl
or
popa
and
lods
xchg
sahf
stos
sbb
cmpsb
adc
aas
cmp
xchg
aas
sbb
repz
pop
and
pop
mov
sbb
cli
sbb
incl
mov
data16
and
inc
rorb
jns
cmp
incl
mov
dec
push
gs
lods
out
sub
jbe
inc
dec
xor
repz
mov
mov
lcall
cmpsb
xor
push
in
add
fwait
jno
add
push
fwait
shr
adcl
jmp
cmp
cli
mov
test
call
mov
push
and
pushl
test
add
xchg
fisttpl
xlat
inc
xchg
ret
das
jg
loopne
jbe
xchg
fsubl
xor
mov
insb
scas
sbb
push
mov
enter
add
pushl
adc
add
sub
fs
ljmp
stos
lock
mov
push
xchg
ljmp
imul
mov
popf
subl
mov
pop
lods
out
aaa
sub
loope
imul
jl
push
xchg
push
jne
rolb
mov
jecxz
mov
add
ljmp
clc
push
les
pop
and
mov
or
mov
int3
adc
cld
fnstenv
jb
xor
test
xchg
imul
jmp
leave
push
add
xorl
pop
out
push
loopne
roll
pop
decl
adc
les
mov
daa
fiadds
shl
xor
jo
fs
fst
mov
xorl
test
loope
fdiv
ficoml
pop
xor
sbb
xchg
pop
sub
mov
arpl
lret
loop
in
lahf
cwtl
or
jbe
pop
mov
sub
pop
data16
call
les
and
sbb
add
lcall
cmpsb
pop
scas
out
or
fcmovnu
out
clc
int
gs
push
out
ret
mov
stos
clc
cltd
pop
lea
xorl
int3
pop
rorb
mov
pushl
xchg
mov
mov
hlt
enter
aaa
jno
pop
dec
lds
sub
jmp
ljmp
ja
add
int
xchg
mov
mov
cmp
fiadds
push
xor
lcall
inc
mov
mov
xchg
lea
nop
leave
inc
loop,pt
cmpsl
lret
mov
dec
lahf
gs
dec
out
clc
lcall
mov
shll
xchg
and
loope
pop
mov
ljmp
fucomi
addr16
push
out
push
push
or
lret
xchg
lcall
jmp
stos
dec
mov
pop
loope
popf
rcrl
sub
adc
sub
push
add
push
xor
inc
lcall
jge
xchg
adc
repnz
incl
and
xor
sbb
adc
movsb
mov
dec
cli
stos
fwait
mov
cltd
addb
call
into
out
imul
ret
xchg
sbb
push
les
andl
mov
push
sahf
mov
adc
dec
inc
out
cmp
fists
subb
test
and
push
inc
mov
sbb
mov
sbb
xor
aaa
sub
xchg
or
fs
incl
mov
pop
add
ficompl
int
add
dec
cmpsl
scas
mov
adc
mov
xchg
ljmp
mov
aas
and
cmp
iret
popa
sub
xor
inc
out
dec
dec
pop
sbb
fsubs
xchg
cmp
inc
pop
jle
cmp
mov
cmp
bound
pop
movsl
clc
decl
dec
mov
clc
sbb
adcl
das
rcll
inc
jmp
test
adc
in
push
cmc
loop
dec
sarb
jne
xor
sbb
flds
mov
cmc
mov
in
mov
jg
pop
fisubrl
mov
es
incl
cmc
push
decl
cmpsb
pop
loopne
subb
xchg
popf
outsl
rcrb
cmc
cmp
mov
rorl
adc
mov
call
outsb
or
sub
cmp
or
jl
lahf
lahf
testb
push
jmp
lock
pop
dec
mov
inc
andb
loope
int3
fcoms
cmp
push
adcl
mov
mov
or
push
jmp
mov
testl
xchg
and
sub
mov
std
outsb
adc
push
sbb
jge
cs
sub
mov
jle
rcl
dec
xor
mov
mov
cmpsl
jl
fs
cmpsl
call
jns
adc
push
test
push
add
push
insb
sub
divl
jmp
enter
xor
sti
shl
cltd
pop
popf
inc
cmc
testb
pop
repnz
sbb
mov
pushl
out
jmp
sbbb
sti
rcrb
mov
and
mov
incl
jno
and
jg
push
enter
xchg
orb
mov
cmpsl
into
push
int
call
add
pop
rcrl
stos
jl
rcl
mov
push
sbb
mov
inc
call
scas
ds
test
dec
adc
dec
cmp
mov
and
call
xchg
pop
add
stos
ja
imul
sub
mov
dec
fcmovne
mov
xchg
pop
iret
jmp
push
fistpl
stos
fistpll
out
pusha
cld
mov
movsb
xchg
pop
dec
xchg
jg
jne
hlt
stos
incl
jp
into
mov
pop
lea
imulb
das
xlat
cmp
mov
cmp
jmp
out
xchg
sarb
push
sub
mov
outsl
xor
jg
and
or
sbb
iret
sub
jb
dec
fcoms
test
fs
call
outsb
testl
mov
sti
fldcw
in
push
hlt
incb
andnps
add
xchg
out
jmp
jo
xchg
lret
mov
js
rep
sbb
xchg
fisubl
loope
jecxz
dec
jl
mov
data16
jmp
jmp
dec
pop
leave
jnp
ret
xlat
xchg
jns
lcall
cmc
cmp
xchg
aas
and
lahf
cmpsl
popf
dec
xorl
jge
pushl
lret
in
inc
pop
xchg
cmp
dec
or
sbb
jmp
das
pop
sti
xchg
popa
add
pop
pop
sahf
add
jmp
jle
ljmp
mov
in
inc
out
xchg
bound
sub
pop
jae
pop
ljmp
jb
adc
cmp
dec
sbb
imul
mov
lcall
in
jle
mov
lods
addr16
xor
popf
movsl
or
sbb
mov
faddl
jp
fbstp
pop
dec
or
rcrb
arpl
aam
cmp
out
and
out
cmpsl
repz
lcall
mov
insb
test
int
mov
pop
xor
dec
jg
sbb
pushl
pop
jge
mov
out
push
mov
mov
add
pop
jo
outsl
ja
mov
adc
jnp
js
add
cli
pop
addr16
mov
dec
pop
add
out
ror
mov
jns
addr16
jmp
mov
or
jge
xor
sub
lods
sbb
sbb
lahf
fstl
pushl
arpl
cmpsl
sbb
inc
incb
and
imul
cld
jbe
adc
lds
xor
jns
movsb
int
pop
inc
js
mov
aas
loopne
int
adc
mov
clc
cmc
dec
xchg
scas
push
mov
incl
aam
mov
fwait
stos
or
mov
jge
mov
scas
dec
inc
cmc
scas
or
cmp
adc
test
sti
push
xchg
test
fisubrl
jne
sahf
xchg
mov
inc
mov
jmp
lods
jl
data16
push
inc
insl
fisubrl
stos
pop
jmp
test
adc
lahf
mov
arpl
loope
lret
test
aam
cmpsb
mov
mov
ret
es
mov
aaa
cwtl
jg
js
das
std
idiv
incl
jl
mov
sub
lcall
mov
repnz
dec
ds
ss
outsl
stos
out
sub
jmp
cmp
adc
inc
xchg
jnp
sub
jno
in
xchg
aaa
push
icebp
pop
shrl
roll
in
decl
dec
dec
aad
outsl
sub
enter
pop
mov
lock
mov
roll
data16
incl
lods
fsubrp
cmp
addr16
pusha
shrd
mov
xor
ds
push
test
incl
add
jno
pop
adc
jnp
dec
xchg
in
mov
sub
and
pop
ljmp
clc
sarb
mov
push
sub
notb
lcall
mov
pushl
xchg
push
xor
pop
mov
mov
test
mov
mov
daa
push
in
cmp
call
imull
testl
inc
xor
gs
or
cmp
adc
call
movl
enter
push
dec
xor
lods
in
sub
pop
xchg
test
cmp
mov
mov
and
js
cli
fsubrs
or
cmp
incl
fadd
dec
or
mov
in
mov
std
and
aam
daa
daa
cwtl
in
lods
and
jmp
aad
insl
std
jmp
mov
pop
cmp
into
inc
movsl
and
inc
ret
aam
in
sbb
sahf
pusha
xchg
nop
cmp
loopne
xchg
jp
xchg
and
fimuls
xor
dec
or
jmp
std
out
pop
mov
orb
sub
ret
inc
and
test
adc
decl
dec
xchg
testl
xlat
data16
in
in
mov
xchg
jmp
pop
ljmp
ss
rcll
dec
sbb
or
jb
jmp
call
cmc
frstor
mov
pop
add
or
xlat
aam
sbb
popf
int3
pop
dec
pushl
int3
dec
adc
out
mov
mov
cmpb
cmp
test
ffreep
gs
ljmp
jns
pop
jle
mov
call
push
dec
adc
mov
in
push
dec
mov
decl
pop
rcll
std
cmp
push
inc
out
lret
and
ds
out
sti
mov
decl
sub
jecxz
and
cs
dec
cmp
jno
or
cmp
jae
adc
incl
adc
dec
iret
fstpt
outsb
mov
ss
sbb
push
mov
and
lods
mov
mov
inc
xchg
shlb
out
cltd
jmp
aad
arpl
ljmp
cmp
cmpsl
mov
jnp
mov
ss
ss
sub
mov
push
mov
pop
sar
ficoml
stos
xor
mov
in
pop
inc
lds
fstl
shrl
lcall
lods
and
xorb
jo
pop
sbb
mov
outsl
fidivrs
addr16
pushl
mov
pop
sbb
pop
sbb
in
xlat
pop
sarb
mov
movsbl
in
mov
cmpsb
inc
iret
js
mov
lock
sub
add
cs
dec
cs
call
cmpsb
les
mov
cld
fwait
insb
or
rcl
aas
add
push
sub
std
pop
jmp
pop
xor
loopne
in
add
mov
push
push
inc
mov
in
jecxz
dec
mov
std
dec
movsl
call
das
fwait
mov
xchg
rol
mov
cmpsl
sub
mov
incl
mov
push
cmc
and
mov
out
mov
cltd
ret
sbb
daa
fildl
xorb
cmp
xchg
pop
cmp
loope
adc
in
in
dec
cmc
xor
mov
loopne
iret
add
jmp
push
bound
adc
xor
movsb
test
les
das
popf
in
hlt
mov
pushl
dec
add
adc
mov
and
mov
out
enter
daa
insl
mov
call
sahf
insb
xchg
loop
dec
aas
daa
xor
sbb
sub
xchg
cmpsb
int
cmpsb
adc
aad
jmp
daa
sarb
aad
dec
sbb
rorb
inc
adc
cld
icebp
jmp
stos
sbb
arpl
incl
sbb
cmp
clc
push
add
jnp
movsl
rep
fcmove
out
mov
lods
or
push
aaa
mov
pop
mov
icebp
shrl
int
pop
ret
fildl
mov
imul
mov
fdivrs
sarl
call
cmp
int
mov
dec
xchg
mov
mov
sbb
pushl
mov
or
sub
push
ret
push
imul
loope
lea
mov
rep
push
push
std
add
std
or
or
inc
xlat
pop
lahf
dec
xchg
sub
inc
hlt
stos
lahf
adc
out
lahf
and
ds
jmp
insb
xor
adc
andl
jnp
cmp
popa
mov
xchg
and
mov
insb
lret
lock
movsb
xchg
sbb
mov
dec
or
scas
adc
cmpl
test
or
fsts
lock
jns
cmovbe
fimuls
mov
pop
cld
push
push
ret
inc
pop
inc
mov
arpl
mov
int
lcall
xor
leave
xchg
cmp
ror
mov
jb
repz
jae
pcmpeqw
adc
mov
jmp
inc
mov
dec
cmp
xchg
inc
sub
push
mov
int3
nop
into
in
jns
xor
daa
mov
push
push
cmc
lret
push
jg
repnz
cmp
push
rclb
bswap
xchg
dec
movsl
mov
call
and
fisubrs
movsb
data16
xor
pop
and
mov
adc
call
lahf
sbb
pop
add
shrl
mov
popa
pop
xor
cmp
add
ljmp
jne
cmp
int3
sub
ret
out
lcall
jmp
lcall
add
icebp
leave
pop
int3
cmp
rol
repz
mov
mov
fimuls
incl
or
movsl
cmp
push
jle
mov
xchg
lret
xchg
jle
outsl
es
adc
cmpw
outsb
ljmp
gs
mov
cli
or
loopne
adcl
cmpsb
gs
popf
pushl
jb
pop
out
xor
cmpsl
or
popf
std
mov
rep
ljmp
dec
pop
int3
daa
add
or
fiadds
xchg
or
vpmuludq
incl
std
rorb
inc
les
ja
push
cld
test
out
push
jmp
icebp
jo
add
dec
divb
nop
sub
cmp
xchg
pop
lods
mov
pop
mov
insb
or
stc
fistl
inc
mov
inc
roll
jmp
mul
mov
scas
push
pop
notb
insb
push
dec
inc
inc
decl
outsb
out
je
shl
pop
sbb
adc
adc
iret
rorl
movsl
iret
aad
add
leave
imul
imulb
movsb
fcoml
pushf
lods
shlb
cmp
fisttpl
fs
sub
inc
jmp
cmovbe
sar
repnz
mov
jge
cmp
les
pop
icebp
mov
fsubs
jmp
lahf
push
pop
js
jb
js
test
jp
sarb
push
iret
dec
stos
mov
pushl
sahf
cmp
mov
and
in
dec
mov
inc
cmc
mov
and
icebp
loop
mov
popf
nop
in
dec
adc
in
sub
lcall
fwait
test
pushl
arpl
push
dec
push
js
push
cmpsl
loope
cli
adcl
jle
rcr
sub
cmp
pop
and
sbb
xchg
scas
jae
repz
mov
push
popa
jp
jmp
or
fistps
mov
aas
loope
or
push
aaa
and
fxch
cmpsl
rorl
push
pop
xchg
imul
sbb
adc
cwtl
cmp
ljmp
xor
test
test
sub
sbb
dec
in
dec
mov
adc
jne
jmp
scas
imul
cmc
adc
sbb
cli
cmp
xchg
fcompl
mov
mov
lcall
cli
add
inc
mov
mov
cs
popf
add
jo
test
test
jge
add
aad
call
pushf
push
push
jnp
mov
jmp
bound
xorb
lock
mov
xchg
or
inc
out
mov
xor
stos
sub
sahf
aad
cmp
sbb
arpl
out
mov
incl
cmpl
sub
sub
add
imul
push
out
leave
inc
and
fisubrl
mov
pop
and
mov
fnstenv
jnp
jmp
jmp
fstpt
out
or
jg
jp
mov
je
ror
cmp
jmp
mov
jo
inc
incl
add
jae
pop
adc
ret
loopne
inc
test
fcoms
jle
xor
inc
lock
inc
in
leave
sbb
cld
mov
loope
dec
jb
jecxz
mov
and
add
dec
push
jmp
lea
es
cmp
in
addl
gs
mov
push
mov
mov
aad
xchg
jo
and
push
jg
int
sbb
pushf
lea
cmp
jmp
pop
loope
jp
push
jmp
xchg
cld
mov
push
out
pusha
stos
sarl
lret
jl
stos
xor
in
test
arpl
inc
cld
shlb
mov
lock
daa
push
and
aam
mov
in
or
jmp
imul
inc
pop
out
pop
stos
add
pop
or
hlt
xchg
xor
ja
pop
lret
sahf
mov
call
gs
orb
ret
mov
xchg
xchg
mov
scas
movsb
inc
mov
call
jne
ficoms
cmp
xchg
subb
and
rcrl
or
xor
test
lcall
push
out
sbb
pop
mov
test
fld
mov
jno
push
lea
lret
inc
mov
dec
imul
mov
add
movb
clc
pop
icebp
mov
or
fadd
out
xlat
outsb
jb
cwtl
std
in
data16
cmp
mov
dec
jmp
sbb
fs
sub
cmp
adc
sbb
aaa
scas
cld
sub
sahf
aad
jle
dec
or
decl
aaa
hlt
divl
imul
pop
mov
aaa
loope
sbb
sbb
xchg
mov
imul
jb
mov
mov
cltd
stc
pop
dec
lahf
push
push
cmpsb
in
add
ss
push
cmp
lcall
repz
or
daa
cmp
test
sbb
shl
adc
pop
jmp
loop
sbb
aaa
mov
rcll
cmp
insl
aas
jmp
or
imul
mov
adc
pushl
lods
xchg
fs
adcl
jge
popf
pop
outsl
pop
inc
mov
jnp
rol
or
inc
cld
dec
and
in
dec
rcll
pop
dec
jle
mov
decl
fwait
arpl
pop
lahf
call
nop
sub
loopne
and
test
in
mov
ljmp
je
mov
mov
loope
add
stos
push
mov
popa
push
into
stos
repz
sti
incl
sbb
push
cmp
push
cmp
xor
rcrb
decl
shll
pop
stos
jo
jge
lcall
pop
sahf
daa
insb
and
lret
loop
xor
jns
js
pop
adc
aad
sbb
ljmp
out
push
mov
push
dec
push
pop
je
cmpsb
mov
loop
dec
xchg
sbb
pushl
mov
or
mov
lret
mov
sbb
pushl
pop
jno
int
sub
repnz
and
mov
loop
adc
je
push
sbb
mov
fiaddl
xor
scas
cmp
test
cld
inc
out
fisttpll
decl
add
mov
gs
jge
outsl
ret
pop
inc
hlt
xchg
test
stos
ljmp
jmp
mov
repz
sub
cmp
sub
or
mov
movsb
imul
mov
fidivrl
mov
cltd
xor
add
shlb
or
out
jno
or
inc
adc
cmpb
pop
rcrb
sub
adc
sbb
test
sub
sub
mov
call
pop
jp
sub
stc
jns
xchg
ror
xor
push
sti
xor
lock
es
std
addr16
hlt
add
cli
jl
xor
out
cmp
test
movsb
sbb
cmp
cmp
decl
inc
dec
jnp
and
das
inc
adcl
stc
neg
lods
cli
and
push
xchg
jmp
int
outsb
rolb
add
cwtl
fsubrl
pusha
or
ret
pop
mov
rorl
call
dec
xor
push
scas
mov
enter
xor
jmp
imul
movsb
call
xchg
adc
or
adc
and
lods
add
xorb
push
lcall
test
fcmovne
shll
pop
dec
add
pop
xchg
pop
leave
call
ret
fs
test
jmp
push
pop
rclb
xor
or
mov
mov
cmp
xor
fiadds
push
int
dec
cmc
mov
mov
add
xor
out
outsb
mov
subl
pusha
mov
js
les
dec
aam
inc
push
pop
cmc
add
jecxz
inc
lcall
inc
cmp
push
int3
mov
add
add
jb
mov
xchg
mov
sub
pop
ljmp
mov
mov
push
dec
test
stos
adc
ficoms
or
push
repz
push
cmp
sbb
out
jo
cs
mov
push
or
popf
xchg
movsb
stos
iret
jecxz,pn
fmuls
popf
lcall
jl
inc
dec
stos
test
mov
orb
inc
pop
dec
and
jmp
jle
mov
inc
iret
or
daa
push
inc
lret
jo
aad
push
bound
pop
cmpsl
push
jmp
pushl
sub
fmuls
ja
je
sbb
jmp
jmp
insb
fmuls
movsb
lea
mov
dec
movsb
mov
leave
inc
pop
loope
lret
lds
cmp
sbb
aas
jmp
push
and
sahf
fisubl
insl
lods
imul
out
mov
adc
out
fmul
scas
xchg
pushl
cs
or
jo
jbe
test
add
cli
xchg
pushf
fwait
outsl
dec
ret
and
stos
scas
mov
dec
arpl
mov
xor
dec
xchg
mov
das
sub
rcll
ds
jns
das
mov
pop
xchg
adc
in
sbbb
enter
xlat
shll
mov
in
popl
pusha
push
push
rcrb
das
pop
and
cmp
mov
and
dec
mov
sub
xor
out
xchg
or
or
xchg
jns
ja
pushf
aas
jge
into
inc
loopne
int3
jbe
mov
lock
mov
into
cmp
repz
fdivrl
mov
lcall
or
cmpb
push
out
jmp
and
push
popa
into
gs
loop
int3
pushl
rcr
adc
dec
jb
repnz
xor
sbb
adc
push
dec
mov
cltd
cmp
adc
jmp
push
sub
dec
xchg
lret
daa
adc
adc
pop
and
sbb
out
xchg
in
or
jnp
pop
lcall
je
mov
rorl
cmp
mov
loopne
dec
and
divb
xor
call
insb
or
and
rorl
xor
test
fs
scas
sub
jns
aad
fisttps
adcb
jmp
add
sub
xorl
divl
js
jns
stc
jae
ljmp
or
syscall
idiv
bound
cs
hlt
cltd
fstps
popf
idiv
adc
inc
aas
adc
inc
inc
or
mov
fildl
out
pop
sub
cli
out
push
nop
pushf
mov
pop
cs
cmpsl
fs
sti
je
nop
pop
xor
or
pop
pop
xchg
sti
scas
test
daa
jb
pop
test
flds
call
xor
aas
adc
fdivrl
dec
adc
jns
lods
pusha
jecxz
adc
call
out
push
orl
add
fistpl
mov
mov
dec
mov
sub
mov
xchg
add
xorb
xchg
mov
cmpsb
cmpsb
lret
decl
jne
mov
int3
cld
push
add
stos
dec
mov
or
push
xor
inc
cmpsb
pop
pop
pop
incl
fldt
fmul
les
jo
mov
mov
mov
cmp
repnz
inc
int
push
into
test
mov
push
pop
mov
push
mov
xor
lcall
ficompl
daa
xchg
std
movsb
push
popl
ds
fcoml
stc
lods
push
push
pop
decl
sub
ss
das
mov
jge,pn
xchg
dec
int
push
sbb
aad
call
fwait
repz
sti
push
xor
jne
lock
mov
jmp
leave
mov
mov
test
adc
std
sbb
in
push
mov
mov
jnp
fsubrl
jne
aad
inc
test
and
data16
inc
sub
xchg
or
or
pop
and
jmp
fmul
mov
sbb
mov
adc
xchg
fadd
inc
idiv
inc
mov
scas
mov
bound
sbb
xchg
inc
jle
add
add
cmp
pusha
out
add
mov
ljmp
jl
cmp
add
dec
inc
add
jp
push
inc
je
out
sbb
adc
cmp
in
jmp
addl
insb
movsb
mov
xchg
popa
addr16
test
les
mov
sbb
push
jmp
arpl
adc
sub
xchg
insl
sub
cmp
fnop
xor
cmp
pop
ss
and
and
mov
adc
lcall
cwtl
cmpsl
scas
sub
and
push
mov
arpl
pop
add
add
movsl
pop
inc
sub
adc
mov
dec
aas
sarl
cmpsl
mov
adc
xchg
std
arpl
lcall
fmuls
loop
inc
mov
pop
xchg
adc
mov
aad
aad
mov
sub
lcall
jne
scas
fldenv
adc
cmp
shll
ret
arpl
inc
test
orl
dec
lcall
lcall
push
dec
cmp
dec
ja
and
pop
inc
pop
or
dec
jmp
fcompp
enter
xor
outsb
mov
xor
decl
mov
xchg
je
fsts
pop
adc
add
pop
sub
stos
mov
incl
testl
movsl
push
test
stos
ds
jmp
jge
pop
test
data16
incl
jae
into
jmp
rclb
or
inc
push
ret
add
pop
aas
sbb
jmp
push
xchg
add
test
push
fs
mov
sahf
xlat
fcoms
cmc
ss
jmp
enter
out
into
shr
push
ficomps
fdivs
jmp
inc
inc
enter
mov
pmulhuw
in
mov
push
das
add
add
pusha
lea
insl
outsl
aad
sbbb
xchg
fwait
jmp
ljmp
sub
push
bound
mov
pusha
scas
ja
imul
adc
push
xor
stos
jmp
stos
iret
les
jge
adc
stos
xlat
push
and
dec
cmc
pusha
inc
incl
cwtl
arpl
insl
fcmove
xlat
mov
jmp
stos
xlat
out
loopne
cli
cmc
je
inc
xor
lret
out
push
xor
xor
inc
push
leave
mov
fiaddl
mov
xchg
sbb
fcmovnu
incl
pop
pop
pusha
jp
sbb
xor
push
gs
popa
pop
pushf
sti
outsb
mov
inc
loope
lcall
fsubrs
push
pusha
adc
sub
lds
fnstcw
pop
sti
mov
mov
adc
ds
pushf
sbbb
push
cs
lcall
mov
push
test
and
and
xor
sti
cld
mov
inc
mov
jmp
pushl
and
cmpsl
push
cs
sub
cmpsb
imul
decl
lods
andb
stos
arpl
push
xchg
xchg
lods
push
add
jl
addb
jg
call
ljmp
jnp
ret
dec
cmp
ljmp
cli
dec
pusha
pop
outsb
pusha
idivl
ljmp
xchg
dec
or
cli
stos
pop
cld
sub
jmp
mov
icebp
shrl
testb
inc
jno
or
push
fwait
aaa
icebp
mov
adc
lret
je
aad
mov
xchg
rorl
dec
dec
sbbb
dec
ja
orl
cmp
cmp
aas
pushl
and
xchg
pop
addb
xchg
add
pop
popa
inc
clc
inc
test
test
decl
cld
or
mov
pop
enter
mov
xchg
xor
pushf
cmp
sub
xor
pop
incl
dec
repz
pop
dec
sub
jecxz
inc
stc
repz
aad
pop
in
lds
and
add
in
jl
aas
insl
dec
loope
notl
push
stos
call
inc
or
xchg
out
mov
jno
push
jge
add
cmp
jmp
mov
mov
notl
jns
mov
jb
das
ss
mov
inc
clc
adc
call
fcmovnu
mov
leave
test
ja
lods
faddl
inc
pusha
dec
sub
jno
mov
mov
incl
push
push
and
fs
dec
shll
pop
clc
cli
and
pop
cltd
mov
fistpll
cmp
sbb
mov
mov
sti
lods
dec
push
stos
push
leave
aas
in
rcl
cld
int
xchg
adc
inc
pushl
pop
mov
fstpl
pop
popa
add
aam
addb
pop
loope
sar
cmp
clc
dec
sti
adc
fnstsw
mov
jecxz
dec
inc
in
xchg
loope
sbb
push
ds
jns
push
xor
jnp
mov
insb
inc
fmul
std
mov
sti
aam
and
xchg
decl
jl
xchg
out
imul
sbb
mov
and
gs
dec
mov
lods
pop
in
lcall
lret
and
enter
xchg
sub
addr16
stos
pop
pop
inc
lret
push
push
jne
sbb
push
mov
lock
xchg
cwtl
add
faddp
dec
pop
mov
cli
and
cmpsl
pusha
scas
push
gs
lods
jmp
jge
es
xchg
daa
js
and
lods
dec
cmp
sbb
mov
lea
mov
aaa
lcall
rcrl
scas
push
jns
xor
loop
xchg
inc
add
cmp
lock
xor
add
js
cmp
cmpb
cltd
sbbb
or
sti
mov
movsl
cwtl
incl
lods
es
bound
xchg
les
push
rcrb
in
mov
jecxz
into
imul
jmp
sbb
xchg
int3
xorl
pop
repz
cvtps2pd
lret
jg
dec
incl
out
out
andl
out
inc
adc
xchg
mov
scas
ljmp
cli
pop
pop
add
stos
cmp
stos
leave
jns
push
sub
ds
jbe
dec
mov
mov
cmp
jmp
ljmp
xorb
inc
call
xor
push
stos
test
jmp
je
repz
push
incl
loopne
mov
sbb
dec
arpl
mov
add
mov
jmp
es
test
call
and
xchg
test
mov
jmp
fs
adc
cltd
psubd
mov
pop
gs
int
sbb
push
mov
mov
stc
xor
mov
inc
pop
lcall
je
mov
mov
test
mov
std
jge
std
cmpl
dec
adc
sub
repnz
jnp
xor
inc
dec
mov
inc
inc
xchg
sahf
push
dec
dec
xchg
pop
mov
lahf
and
daa
xlat
jo
inc
mov
push
decl
push
cli
rol
and
lods
pop
adc
dec
movsb
mov
push
mov
mov
mov
add
repnz
and
pop
add
int
fmull
call
inc
imul
popf
xchg
in
xchg
rcrl
sbbb
dec
and
cltd
xlat
ja
pop
mov
inc
lea
call
aam
pushf
cvtpi2ps
pop
enter
add
push
push
dec
mov
daa
mov
lcall
jnp
xchg
cmp
push
dec
imul
fldt
xor
xchg
shl
xchg
and
push
lock
call
mov
or
movsl
movsl
dec
cmc
mov
mov
movb
sub
test
adc
mov
in
xchg
aad
test
mov
shlb
int3
lock
incl
push
push
push
shll
sub
mov
cwtl
and
ljmp
mov
sub
pusha
and
repz
idivb
movsl
imul
ljmp
sbb
mov
fstps
jne
push
popa
sbb
add
divl
rclb
and
decl
and
jg
ret
outsb
sub
cmp
movlps
xor
mov
jp
das
test
xchg
pop
rcrb
or
stos
jp
lock
test
add
xchg
adc
lods
mov
outsb
sbb
add
incl
fcoml
or
inc
jb
xlat
pop
jnp
jp
outsb
orl
mov
dec
inc
fs
jbe
ret
add
inc
mov
sti
adc
pop
mov
jmp
cld
iret
sub
or
lcall
xchg
pop
jo
sub
xchg
popa
lods
bound
mov
push
push
sbb
pop
xchg
in
fnstcw
or
jmp
gs
ds
out
test
lcall
xor
push
or
xor
jnp
arpl
popa
cltd
insl
mov
mov
sar
mov
jmp
push
pop
pop
daa
push
bound
shrl
mov
mov
popa
dec
cmp
dec
sarb
clc
hlt
push
aaa
iret
and
aaa
jns
mov
mov
pop
shl
add
and
incl
dec
testb
aam
mov
outsb
fs
mov
pop
inc
loop
jae
sbb
dec
mov
jmp
adc
pusha
test
idivl
sub
pop
or
cmp
repz
pushl
add
cwtd
out
cmp
adc
das
outsb
sbb
mov
pop
xchg
sub
call
insb
pop
and
lcall
out
test
inc
jb
xor
daa
test
gs
pushl
mov
pop
in
and
xorb
rorb
pop
leave
popa
mov
mov
iret
lret
add
mov
shlb
insl
test
jg
fimull
mov
jmp
pop
loopne
cmp
test
mov
leave
nop
movsb
test
cmp
cli
call
movsl
ljmp
stc
jbe
dec
pop
iret
add
loop
in
inc
les
push
daa
inc
sub
jmp
lock
dec
add
mov
push
test
inc
pop
jmp
mov
fstpl
add
out
leave
roll
pop
ret
cmpsb
cmc
mov
int3
push
gs
cmpxchg8b
addr16
xor
cli
lds
jbe
jo
jnp
mov
or
mov
aas
or
lahf
sbb
sub
incl
out
or
adc
jge
xchg
std
xchg
mov
mov
inc
cmc
jge
pop
mov
jp
inc
jno
push
xchg
testl
insb
mov
adc
insb
jbe
orl
fcompl
sbb
mov
repz
addl
repz
inc
mov
sti
xor
fcmovnu
pop
cs
daa
test
xchg
sub
repnz
xchg
mov
loop
icebp
jmp
jmp
es
stc
xchg
shlb
sub
aad
mov
or
imul
sbb
push
pushl
int
mov
or
add
push
mov
int
mov
cld
jno
push
inc
stos
test
pop
notb
lcall
es
dec
sahf
jmp
fdivs
inc
shlb
imul
rcrl
adc
stos
cmp
addr16
cmp
push
xchg
mov
call
clc
std
out
and
dec
imul
clc
sbb
add
push
mov
insl
shll
push
xchg
cmp
inc
cltd
dec
mov
jmp
push
cmc
test
sbb
fisubl
enter
mov
out
or
push
jmp
cltd
movsb
push
inc
xor
inc
push
in
push
dec
cmp
lcall
add
in
adc
mov
adc
insb
das
fmull
and
in
adc
mov
mov
inc
fstpl
stos
icebp
and
fxch
push
daa
mov
incl
pusha
les
jge
popf
loope
push
popa
mov
sbb
mov
fs
repnz
lcall
push
cmp
repz
ss
and
fsts
or
and
fdivr
call
adc
mov
ret
dec
nop
and
xor
mov
int3
cld
pop
lcall
movsl
pusha
cmp
stos
and
dec
loope
mov
mov
jae
addb
mov
enter
lcall
dec
xor
mov
outsl
mov
test
fabs
sbb
pop
decl
inc
xchg
adc
leave
or
inc
jno
jne
xchg
addb
sbb
cs
lahf
fwait
xor
pushl
pop
repz
notl
xchg
jmp
popa
das
push
hlt
aaa
add
jge
mov
pop
cmc
loopne
movsl
into
push
in
fwait
cli
cmp
push
xchg
movnti
sbb
sbb
adc
data16
mov
ljmp
arpl
xor
adc
dec
mov
testb
sub
test
mov
cs
ljmp
mov
jg
scas
ror
loope
daa
aaa
or
out
movsb
mov
fs
incl
adc
das
out
and
mov
or
sbb
call
insb
cld
xchg
push
xchg
cld
into
movsb
setle
xchg
xor
je
or
pop
dec
outsb
push
sub
lcall
dec
aam
cmpsb
mov
mov
sbbb
dec
cmp
negb
dec
adc
cld
dec
mov
or
ficoml
xchg
push
in
and
mov
xchg
data16
xor
mov
inc
jge
jp
adc
lret
push
xor
adc
int3
push
xor
decl
xchg
mov
push
add
xor
mov
xchg
adc
cmp
cmp
mov
or
stc
iret
pop
imul
es
in
sub
mov
cs
xor
adc
decl
cltd
or
mov
sbb
mov
in
mov
repnz
out
and
jmp
leave
lds
or
sub
aas
mov
roll
push
cli
pop
enter
xchg
lods
call
imul
or
in
adc
hlt
sahf
scas
xchg
cmp
lds
or
decl
bound
std
arpl
lods
pop
xor
push
sbb
icebp
dec
je
mull
jmp
out
ret
daa
mov
add
in
fxtract
pop
mov
cmp
dec
cmp
push
cltd
daa
xchg
and
lcall
or
dec
in
ds
and
shl
outsl
cs
push
xlat
dec
pop
ret
dec
nop
push
pop
sbb
xor
nop
add
stos
mov
mov
sub
pusha
fsubrl
aas
ja
sub
adc
pop
mov
or
and
jg
call
dec
xlat
cmp
dec
push
aas
repz
adc
sbb
fisubl
pop
js
jle
cs
xchg
cwtl
daa
and
in
lock
and
xchg
data16
rcrb
xchg
pop
cltd
push
loopne
adc
scas
in
inc
incl
mov
enter
loopne
jl
mov
frstor
pop
ret
lret
ljmp
or
adc
jl
sub
stc
pop
add
jg
push
xchg
push
mov
cltd
ret
mov
push
sub
mov
jns
test
mov
mov
in
pop
mov
dec
inc
movsb
jae
jbe
lds
pop
in
fimuls
loop
pop
cmp
jmp
xor
dec
rcrl
xchg
lret
in
dec
and
addr16
adcl
lahf
ret
pop
adc
mov
jmp
or
lret
decb
mov
sbb
lock
sub
es
iret
pop
daa
iret
pushl
sub
loop
dec
inc
sbb
jnp
cli
idiv
out
push
movsl
outsl
stos
cmp
popf
sbb
call
xor
sbb
adc
adc
push
push
jle
push
pop
xor
jno
adc
aaa
cmp
jns
fisubl
roll
lock
out
sbb
pop
xchg
aaa
dec
dec
lods
insl
int
std
aaa
and
inc
or
jae
testb
inc
mov
adc
xchg
mov
add
pop
incl
or
faddl
jb
fld
and
add
aad
push
jle
xor
xor
shld
and
dec
and
fsts
jb
pop
add
test
push
outsb
cmp
dec
lods
jl
cltd
xchg
call
mov
imul
mov
jl
mov
les
xor
scas
mulb
jmp
pusha
cld
dec
xor
pop
hlt
jne
mov
jo
aas
enter
in
and
incl
call
sub
insl
js
shrb
popa
stc
mov
xor
and
call
cmc
sub
pop
mov
cmpl
mov
popf
incl
lock
insb
push
mov
loopne
lea
lret
push
mov
jae
mov
sub
sahf
hlt
sbb
jmp
test
xor
loope
int3
std
je
dec
jecxz
icebp
inc
mov
cld
std
xor
push
cmp
mov
pop
mov
int
mov
pop
push
xlat
movsl
out
xor
call
xor
ja
fisubrs
lock
xchg
mov
and
lods
rclb
mov
jle
add
decl
inc
inc
sub
js
stos
cmpsl
imul
mov
clc
out
mov
cmp
xor
retw
out
xor
push
add
jle
pop
pop
leave
mov
pop
std
nop
js
pushl
clc
push
mov
jno
in
pop
div
cwtl
imul
push
mov
gs
sbb
xchg
mov
jmp
jecxz
rcrb
ss
jmp
sub
hlt
inc
clc
mov
fucomp
fwait
xchg
bound
cwtl
ljmp
push
mov
jl
xor
cltd
mov
sub
push
nop
cmp
cmpsb
lahf
sub
icebp
sar
ljmp
scas
gs
ja
mov
sahf
sbb
push
std
ret
push
es
imul
decl
subb
xor
sbb
mov
aam
insb
lcall
out
jmp
pop
fsubrs
mov
xchg
mov
sub
push
push
imul
ljmp
sub
adc
sub
gs
dec
mov
imul
mov
test
decl
scas
sub
or
mov
pop
cld
jle
pop
or
dec
aam
mov
ss
incl
cmp
aam
sbbb
inc
pop
xchg
lods
sahf
insb
mov
push
jbe
divl
push
pushl
test
mov
adc
sub
or
movsb
xchg
ds
mov
nop
dec
push
sbb
mov
mov
inc
or
and
sub
std
xor
gs
or
insl
loop
jae
addl
dec
pop
repnz
jmp
mov
push
mov
xor
lcall
sbb
jno
std
adc
pop
mov
pushf
add
inc
out
pop
in
cs
daa
sub
sub
cmpsb
fdivrp
ljmp
mov
mov
aam
pop
mov
pop
mov
push
negl
lcall
ljmp
mov
test
inc
into
fdivp
bound
push
sbb
bound
incl
hlt
outsl
pop
sbb
cmp
dec
sbb
cmpsl
xor
insb
cmpsb
inc
pusha
mov
lcall
jl
jmp
sub
push
jg
mov
mov
or
or
jl
decl
mov
test
test
push
fistl
pusha
lcall
or
int3
push
insb
mov
call
push
xor
scas
mov
fisttpl
imul
pop
jne
xor
mov
incl
scas
ljmp
cmp
repnz
fcoml
popf
xlat
lahf
outsl
dec
loopne
rdpmc
cmp
push
and
rcll
insb
inc
cmc
out
adc
jne
or
xor
outsl
bound
inc
mov
int3
cmp
and
mov
sbb
fcom
out
bound
repnz
aam
nop
sahf
pop
bnd
ljmp
or
imul
int
into
sbb
in
notb
scas
pusha
lcall
leave
adc
mov
call
repnz
sahf
xchg
hlt
dec
add
test
outsl
mov
sbb
dec
or
mov
xor
sbb
mov
mulb
cmp
pop
inc
fwait
mov
std
and
ud0
js
push
jle
adc
test
outsb
cmp
push
push
mov
and
add
mov
push
fwait
pop
mov
fisttpl
test
ja
ret
adc
dec
ss
dec
sti
cmpsl
outsl
jae
xor
out
jp
xor
rcll
and
notl
adc
cmp
call
push
pop
or
xchg
inc
dec
or
mov
push
in
cld
lret
push
stos
ffree
lcall
mov
imul
in
mov
adc
or
mov
xchg
stc
mov
call
aam
and
aas
fstpl
pop
repnz
xor
or
out
adc
fstps
jmp
add
add
orl
inc
data16
xchg
dec
push
shlb
inc
je
or
inc
lret
into
aas
cmpsl
das
xor
mov
mov
and
jp
ret
rcll
shlb
cmp
lret
out
cs
ljmp
call
add
sbb
in
adc
mov
push
adc
popf
sub
xchg
int3
call
jp
xchg
jle
push
mov
sbb
movsl
sub
pop
notb
cld
es
push
push
rcll
pop
or
incl
and
outsl
cmp
cmp
jge
mov
lods
pop
pop
push
dec
dec
mov
pushl
in
test
or
cmpsb
popa
stos
loope
sub
xchg
mov
pop
imul
xor
incl
jmp
mov
xchg
enter
jp
sub
outsl
jno
sub
add
mov
mov
lahf
xlat
or
dec
popf
xor
sub
inc
shr
xchg
subb
cltd
sahf
or
jmp
cmpsl
sar
jl
push
xor
push
cmc
jae
ss
mov
mov
pop
decl
pop
inc
aaa
mov
mov
loopne
mov
das
mov
jmp
dec
xchg
push
or
cld
loope
jno
add
loope
test
arpl
popf
decb
idivb
mov
or
push
pusha
test
into
sub
add
mov
pop
dec
mov
mov
push
mov
xor
xchg
cmp
inc
dec
and
in
clc
fists
scas
pushf
cmp
jnp
incl
call
in
cmp
mov
xchg
in
xchg
inc
dec
in
leave
popf
iret
out
es
pushl
add
scas
lahf
mov
xor
iret
lcall
jb
leave
mov
incl
andl
xchg
dec
enter
push
loope
sub
lods
outsl
mov
add
lods
cwtl
sub
incl
push
mov
scas
or
shlb
xor
pop
inc
addb
and
fimull
and
sti
push
repnz
call
pop
jo
rorb
int3
xor
shrb
fsubr
call
lcall
dec
jp
in
xor
and
inc
or
sbb
repnz
icebp
jns
leave
comiss
decl
mov
push
jge
cmpsl
jl
imulb
repnz
rcl
sub
jle
fisttps
pushl
pop
dec
dec
mov
or
insb
loop
rcl
andb
jo
cmp
ljmp
mov
fistpll
xor
and
fisubl
pop
stc
mov
shll
inc
sbb
and
jno
ljmp
fbld
aad
cmp
xchg
ret
mov
or
sub
fisttps
jmp
cmp
sbb
and
imul
decl
mov
stos
pop
pop
adc
rcl
repz
inc
cmp
insl
mov
sbb
decl
mov
loop
out
fstps
mov
mov
pusha
mov
fcmovnbe
cmp
push
jmp
arpl
movsb
je
jmp
out
and
inc
ret
or
push
fadd
xchg
push
sub
xchg
ljmp
jbe
sbb
loop
outsb
inc
aad
pop
sub
lret
out
jno
inc
aam
or
aas
incl
xlat
sub
int
fildll
in
dec
outsl
aas
cltd
cmp
push
es
pushl
inc
sbb
inc
mov
int
mov
or
cmpsl
stos
and
adc
mov
fcoms
addr16
sub
push
andl
cmp
cmp
in
xchg
mov
inc
mov
inc
test
cmp
mov
aad
add
add
adc
xlat
popf
lahf
jmp
xlat
jge
pop
inc
adc
mov
inc
push
out
push
xchg
pop
js
iret
push
in
and
in
mov
mov
jp
cmc
jae
stos
jl
outsl
test
mov
or
pushl
test
fcmovbe
setge
fildll
fxch
loope
and
ror
dec
out
add
movsb
loopne
scas
and
data16
enter
loop
hlt
sub
addr16
fs
lcall
shrb
xor
popa
xchg
inc
adc
adc
mov
dec
sahf
pushl
cmp
sub
mov
mov
pop
add
scas
pop
lock
fistpll
lcall
adc
scas
mov
jmp
nop
adcb
jecxz
inc
outsb
mov
pushl
out
ja
and
xchg
jmp
out
mull
mov
cmp
jmp
push
and
mov
daa
pusha
out
fidivrs
pop
xchg
sbb
out
xchg
add
fsubl
call
ss
gs
cmp
rcll
aas
imul
ja
inc
add
aas
inc
in
pushl
cwtl
leave
dec
add
mov
sbb
std
cs
inc
test
xchg
out
cld
jle
sar
ljmp
add
lods
rolb
pop
pushf
movsb
sub
mov
dec
push
in
and
incl
fildll
or
ljmp
cmp
cmpsb
jg
lea
or
lcall
ja
push
jnp
mov
cmp
mov
dec
roll
or
adc
pushl
js
std
mov
sbb
mov
cmp
bound
inc
aad
sahf
jecxz
push
jmp
and
jmp
shll
aam
mov
ss
lret
push
decl
lahf
lret
jne
jmp
pop
mov
sub
dec
mov
add
scas
mov
decl
imul
mov
or
ror
push
popa
and
js
ljmp
ljmp
test
insl
and
sub
dec
mov
cld
pop
sbb
scas
dec
iret
nop
cmp
add
mov
mov
lcall
sbb
or
loop
stos
mov
out
adc
rol
mov
decl
add
sbb
xor
push
test
lret
mov
jns
mov
rcrb
push
push
test
fisubrl
stc
insb
sub
jno
inc
fidivl
push
inc
jmp
push
cwtl
outsb
out
jecxz
xchg
inc
add
jnp
xlat
push
pop
sub
cmp
sti
or
and
lods
mov
push
sbb
pushl
jl
add
cmp
add
movsb
lds
arpl
pop
adc
fistl
jmp
add
enter
or
iret
in
jno
sbb
adc
mov
dec
movsb
inc
mov
call
cmp
out
inc
in
xor
outsb
xchg
mov
ja
xchg
scas
lret
ljmp
mov
mov
cmp
cmpsl
es
jae
icebp
and
into
movsl
loope
mov
sbb
call
add
enter
pop
in
addr16
inc
xor
adc
addr16
shrb
incl
mov
cmp
and
lret
iret
xlat
xchg
pop
jl
mov
stc
repz
push
inc
mov
jmp
sbb
push
out
cwtl
sbb
outsl
stos
push
into
push
fmuls
decb
lea
lahf
xchg
mov
ljmp
inc
mov
add
push
push
out
pop
int3
je
jmp
add
shll
jno
add
decl
sti
jb
xlat
xchg
and
cmpxchg8b
into
mov
push
pop
adc
mov
adc
sar
call
pushf
push
clc
iret
jmp
imul
shl
pop
push
pop
xchg
pusha
repnz
sub
pop
negb
push
in
pushl
xor
inc
xor
sub
adc
xchg
cmpsl
adc
adc
lock
pop
pushl
incl
cmc
test
pop
sub
mov
push
xchg
int3
fisubl
inc
mov
jmp
rcrb
cmp
fs
sarl
lock
inc
lret
inc
in
loopne
jle
das
mov
sti
fadds
in
cld
or
out
push
jecxz
aas
and
insl
xchg
dec
in
sub
sub
call
cmp
inc
fidivrs
xchg
xor
stos
push
bound
js
inc
fcmovnu
les
aad
fdivrl
jmp
out
jmp
fnstenv
xor
or
dec
into
sub
jbe
imul
enter
fwait
push
adc
mov
sub
lcall
decl
jmp
dec
addl
add
jae
imul
add
lret
jno
adc
dec
in
jno
js
sub
mov
push
repnz
pop
push
jmp
lcall
lret
inc
std
js
bound
xchg
scas
pop
jl
or
add
ror
std
insl
xchg
dec
push
daa
sbb
call
rclw
mov
push
pop
jae
mov
je
xor
xchg
xlat
push
xor
fadd
jg
decl
cld
loopne
lcall
xor
test
or
mov
stos
out
sbb
jmp
fistl
add
inc
sub
push
test
cmp
mov
pushl
or
dec
cmp
adc
push
xor
xor
lods
fnstcw
adc
dec
out
jge
loope
pushl
stos
std
xchg
jmp
add
fcomp
xchg
repz
out
pop
into
xchg
cli
push
enter
xorb
cmp
mov
hlt
pop
push
js
sti
mov
dec
mov
lods
push
rcl
xchg
sbb
sahf
mov
inc
outsb
movsl
push
inc
inc
jbe
in
lret
dec
je
or
incl
jns
fcompl
or
in
cmc
pop
dec
movsb
adc
xor
call
or
mov
push
pop
in
js
mov
mov
test
popf
xchg
cmp
and
sub
ss
bnd
cmp
aam
xchg
cli
je
jmp
mov
addr16
dec
add
inc
mov
adc
mov
andl
sub
sub
pop
es
xor
cmp
pop
cltd
cmp
repnz
aaa
add
fmulp
push
inc
test
mov
call
mov
dec
cmp
xchg
add
jl
inc
jno
ja
mov
xorb
arpl
decl
scas
inc
ss
sarl
mov
aam
rcl
push
xor
mov
das
fs
xchg
lcall
jmp
das
jnp
dec
shlb
cmpl
lea
loop
stos
sbb
hlt
ljmp
mov
lret
imul
enter
xchg
pop
xor
mov
data16
fimull
jl
xlat
mov
mov
test
mov
subb
sarl
jg
std
lahf
xor
inc
jl
outsb
fadd
or
mov
lret
clc
mov
cltd
ljmp
int
and
out
roll
lods
or
xchg
xor
jmp
add
inc
fs
enter
xor
lret
jl
fcompp
rclb
jp
movsl
and
imul
pushl
push
push
lahf
test
fcmovnb
push
aad
xor
out
cld
and
adc
jge
or
insl
mov
in
mov
or
sti
pop
xchg
fistl
cmp
inc
faddl
movb
decl
sbb
and
pop
push
fimull
push
mov
jge
sub
xor
fsubl
fisttps
jg
cmp
dec
sub
pop
sbb
jecxz
push
mov
js
add
call
sar
inc
fdivrs
mov
pop
add
push
mov
xchg
jnp
mov
int
test
and
in
sahf
inc
inc
js
aam
mov
adc
inc
mov
pop
or
cs
and
mov
les
inc
stos
inc
sti
cmc
adc
mov
fcompl
bound
incl
pushf
out
inc
xchg
inc
loop
and
cmp
cmp
test
incl
push
popf
add
test
cmp
mov
inc
das
lret
push
arpl
pop
or
decl
cmp
inc
into
xchg
mov
nop
into
in
and
jge
pshufw
incl
inc
mov
inc
mov
mov
add
aas
ficoml
test
and
imul
loope
inc
dec
pop
mov
xor
mov
xchg
into
mov
lret
pop
xor
call
cmp
jl
cli
push
mov
push
push
popf
popa
repz
dec
add
std
lcall
ret
sbb
in
inc
nop
loop
and
jo
mov
leave
dec
mov
leave
es
fimuls
jmp
out
inc
mov
or
out
cmp
aad
mov
fidivl
out
xchg
insl
or
xor
pushl
jp
and
fisubl
popa
andb
push
xchg
add
fcmovnu
les
pushl
jmp
and
loopne
imulb
mov
mov
jno
fdivrp
scas
push
mov
and
xchg
xor
and
xchg
arpl
push
mov
adc
xchg
ds
call
adc
lock
std
gs
ss
out
sbb
stc
xchg
insl
xor
push
push
dec
clc
push
jg
incl
arpl
loope
out
cmc
nop
in
inc
xor
adc
aam
cli
subl
pushl
in
dec
cld
xlat
pop
cltd
nop
pop
mov
and
push
loopne
js
out
popa
gs
push
inc
mov
into
lods
push
jae
sbbb
pusha
jecxz
xlat
pop
jno
fcomi
push
mov
sub
xor
cmp
decl
jp
push
push
and
sbb
sub
push
dec
sub
fistps
sbb
in
xchg
decl
push
xchg
decb
inc
add
daa
pop
jae
in
filds
jb
jp
enter
cmp
ljmp
loop
cs
rcl
sti
pop
and
pslld
fidivrs
mov
fildll
jmp
pushf
outsb
out
test
sbb
das
pop
loopne
sbb
jae
mov
ja
xor
fcoms
mov
or
lret
sbbl
jmp
jmp
sub
je
das
icebp
bound
jae
mov
sub
stos
xor
call
inc
fwait
pop
sbb
inc
dec
sub
xchg
xor
and
mov
rol
mov
pop
inc
sbb
ljmp
pop
mov
mov
pushf
jns
test
pushf
imul
xchg
sahf
and
decl
out
enter
int
enter
mov
pusha
mov
push
pusha
movsb
stos
test
std
scas
dec
popf
out
in
in
ss
rclb
repz
loope
mov
and
jecxz
jae
xlat
int
mov
sbb
outsl
incl
jg
cs
pop
cltd
push
lahf
clc
enter
fldt
scas
mov
das
and
cmp
adc
or
gs
xchg
xchg
out
and
xchg
lds
into
fs
inc
and
cld
add
outsb
incl
jbe
lcall
adc
daa
jbe
jge
jnp
add
test
mov
or
jmp
pop
adc
add
sbb
pop
loope
adc
xorb
xor
inc
in
jge
pop
push
dec
ror
dec
repz
in
sti
mov
sbb
mov
rcr
shr
jo
call
mov
add
cwtl
mov
inc
sarl
push
mov
repnz
ljmp
inc
or
cmpsl
xor
ds
and
jecxz
ds
sub
pop
jmp
jo
cmp
mov
daa
adc
cmp
insb
sub
sbb
imul
xchg
ss
ja
cmp
into
lods
adc
sub
dec
jne
push
xchg
aas
lea
cmpsl
icebp
mov
out
mov
jge
int3
dec
lods
jecxz
movsl
adc
stc
fs
pushf
insb
and
fcmovu
lret
xor
adc
outsb
jecxz
xor
imul
add
cmp
lret
js
mov
push
in
sbb
jmp
inc
lcall
outsl
cmp
rorb
xchg
aas
mov
aas
xor
pushl
call
sbb
mov
mov
out
repnz
cmpsl
in
mov
test
stos
call
lea
lods
nop
push
xchg
push
arpl
push
push
shl
xchg
cmpsb
mov
incb
incl
cmc
push
pop
dec
ret
movsl
dec
jo
sub
imul
cmp
add
adc
das
ss
inc
lods
call
sbb
cmp
push
jns
testl
jmp
jle
adc
jmp
mov
sbb
in
sub
jno
loope
mov
cmp
movsb
mov
adc
int3
jmp
sub
sub
push
lock
jg
call
lock
mov
adc
sbb
ljmp
mov
sub
mov
test
rorl
and
jae
rorb
shll
jp
sti
stc
jne
inc
ficoms
lock
and
icebp
sbb
add
insl
pop
cmp
lcall
xor
pop
dec
push
je
dec
sbbb
in
dec
jmp
insl
mov
push
stos
mov
jmp
jno
push
lcall
fnstcw
das
repz
incl
imul
push
xor
mov
and
movsb
imull
add
jnp
fs
ss
pushl
aam
bsr
mov
mov
mov
fisubs
fistl
lcall
add
lock
test
and
push
popf
cmp
or
ljmp
cmp
cmp
jl
add
add
das
and
jl
mov
test
add
jmp
scas
pop
sarl
popf
in
mov
scas
pushf
push
stc
adc
sbb
adc
push
out
decl
int3
mov
sahf
scas
and
xlat
push
lds
xor
shl
hlt
fldenv
lret
ljmp
cmp
rol
aas
test
out
fstl
mov
ljmp
pop
scas
popa
jno
das
pushl
pop
cli
stos
sbb
mov
icebp
test
call
ja
mov
mov
xor
dec
shr
xchg
inc
clc
scas
inc
cmc
xchg
sbb
push
iret
lcall
inc
nop
call
lods
out
add
ds
xchg
sbb
dec
imul
inc
add
jb
mov
ljmp
cs
push
ret
subl
push
sub
call
test
cltd
mov
lahf
pushl
lods
cli
subl
or
int
lcall
pushl
clc
enter
outsb
jge
xchg
sub
adc
in
mov
pop
adc
push
fsubr
mov
lds
add
cwtl
repnz
into
shlw
push
outsl
ret
cwtl
out
in
mov
jmp
mov
cmp
pop
rolb
xor
sbb
pusha
mov
jno
ds
dec
ret
or
push
and
bound
pop
test
xor
dec
sub
mov
sbbb
fdiv
out
jl
sbb
and
neg
inc
ret
inc
mov
decl
sbb
pop
cld
mov
lock
insb
into
imul
sbb
fdivrs
mov
inc
push
add
pop
inc
cltd
push
push
nop
bound
push
mov
sub
xchg
cld
jecxz
cmp
decl
dec
pop
fcomps
xlat
bound
aad
sbb
insb
jl
mov
cmp
cmp
lcall
mov
lcall
cltd
xchg
test
mov
in
das
lret
ja
out
loop
xchg
lret
incl
out
repnz
dec
xor
loop
push
sbb
add
aaa
repz
cmp
xor
sti
incl
rcrl
lds
cli
inc
iret
mov
jge
shll
or
xor
xchg
sub
decl
sub
push
jno
jo
int
cmp
stos
adc
cld
jbe
xchg
mov
std
out
and
jnp
sub
pop
ss
cmp
lahf
nop
test
outsb
jno,pt
ljmp
call
repz
jae
movsw
mov
lret
cmp
dec
je
mov
push
aas
pop
testl
outsl
mov
jmp
and
xor
neg
div
lods
sub
cmp
incl
stos
stos
push
lods
xchg
and
dec
shl
xchg
call
arpl
gs
call
ror
icebp
jnp
mov
scas
subl
rorb
nop
xchg
outsb
imul
insb
decl
jmp
mov
movsb
mov
push
lods
or
xchg
cmp
mov
call
roll
lods
cmpsl
out
pushl
or
push
aam
outsb
xchg
cmp
cmpsl
mov
cmp
ljmp
xor
pop
pop
mov
or
hlt
push
cmpsb
lret
repnz
inc
ss
incl
je
movsb
das
cmp
inc
je
sbb
inc
cmp
jge
jb
fsts
loop
push
mov
idivb
cmp
jle
out
jae
data16
out
fcomps
and
call
dec
sub
and
lret
dec
enter
jge
fmul
fsubl
pop
test
cmp
inc
ss
ds
rcrb
mov
pop
mov
push
mov
cmp
lret
aam
push
in
sti
xchg
in
lock
inc
mov
fsts
seta
mov
enter
ljmp
daa
movsl
mov
adc
testb
push
mov
cmpsl
rep
ja
test
mov
and
cli
pop
cmp
mov
mov
rcrb
stos
mov
sub
push
shll
jp
sub
outsb
jecxz
add
mov
popf
in
negl
lods
mov
and
pushl
stc
cmp
pop
push
inc
movsl
sub
push
pop
lret
test
pushl
int3
pop
jbe
pop
outsb
fistpl
add
enter
push
sub
stos
icebp
scas
sbb
and
sbb
out
decl
out
cli
stc
fistpll
inc
daa
lahf
mov
cltd
imul
cltd
xor
enter
decl
int3
push
sarl
push
addl
test
xchg
loope
inc
push
xchg
adc
std
outsb
pop
add
mov
outsl
cmp
mov
pop
test
test
test
icebp
jp
inc
in
xchg
hlt
mov
cmc
xor
and
cs
sub
and
imul
or
push
mov
add
mov
ret
add
lret
add
push
lods
outsl
mov
outsb
rorl
call
lods
mov
xlat
adc
shl
fsts
movsb
out
jne
and
cmp
jne
or
test
mov
popa
sub
in
dec
cmc
stos
stc
out
lcall
faddl
mov
xchg
scas
lds
pop
lods
dec
dec
nop
insl
aam
jns
mov
inc
inc
jmp
cmp
rcll
leave
lds
dec
stos
ret
mov
clc
pop
adc
inc
adc
sbb
popa
test
ficoms
mov
cld
jle
dec
xchg
xchg
decl
push
in
int3
js
cmp
add
out
inc
sbb
ds
out
sbb
jg
mov
pop
and
fildl
testb
popa
inc
in
dec
and
aad
ss
jns
cmp
pop
cli
fwait
adc
insl
and
dec
pop
subb
fisttpll
cmp
xchg
xchg
sub
mov
jg
jecxz
enter
cli
xor
in
jg
cmpsl
push
faddl
mov
mov
pop
xchg
and
mov
or
stos
and
and
call
cmp
dec
movl
mov
fldt
adc
mov
jbe
inc
jl
test
call
ja
mov
out
pop
pop
aaa
inc
cs
test
sub
and
lcall
pop
push
insl
or
dec
in
cltd
xor
orb
arpl
sub
pushl
into
mov
fucomp
lret
mov
push
aam
sub
fdiv
pop
stc
daa
frstor
jmp
cld
das
sbb
jl
sbb
xor
out
ja
sub
pop
add
dec
ss
xor
xor
jg
sbb
adc
push
popa
daa
ret
adc
ss
mov
out
addr16
clc
loopne
fs
dec
inc
stos
mov
lahf
fs
ret
sub
test
push
lods
mov
aad
mov
das
stos
inc
cmpsb
test
fldt
xchg
jne
inc
pop
push
jno
jmp
pop
fs
xor
sub
mov
xchg
lods
push
in
sbb
test
cs
jmp
mov
push
mov
jnp
xor
add
xchg
adc
jl
pop
sbb
ljmp
rclb
add
js
add
insl
inc
pushf
or
fwait
mov
sbb
push
xchg
das
or
xchg
mov
fstp
jbe
jmp
pop
dec
lahf
bound
cmp
jmp
sbb
aam
add
inc
ljmp
sbb
scas
cmpb
sti
xor
pop
xchg
in
or
outsl
mov
mov
repz
xor
pop
mov
jmp
dec
icebp
adc
es
call
int
push
insl
xor
roll
mov
and
xchg
adc
incl
imul
sbb
adc
or
ss
stc
decl
pop
call
jnp
mov
mov
push
xor
jmp
pop
mov
cs
ja
test
push
lds
sub
lcall
outsl
cmp
sbb
lcall
inc
mov
leave
mov
jo
or
ss
mov
xor
decl
mov
insl
mov
arpl
in
fnstenv
lahf
clc
jl
test
lcall
icebp
cld
xchg
aaa
pusha
cmpxchg
jmp
mov
cmpl
int
movsl
inc
call
mov
sti
push
jo
push
mov
cli
and
aad
jecxz
leave
or
push
pop
pop
jg
stos
test
adc
ja
outsb
mov
add
mov
sbb
push
inc
popf
cmp
jmp
lods
inc
fsubs
adc
dec
xorl
inc
and
dec
fistps
sbbl
arpl
into
xor
jae
loope
test
incl
mov
push
arpl
sbb
xchg
cmp
pop
into
addb
aas
or
ret
xchg
insb
pushl
sub
cmc
and
not
cmc
notb
mov
inc
mov
ret
push
add
inc
in
test
mov
insl
sbb
out
mov
and
cmc
pop
ljmp
inc
xor
inc
pop
cmpsl
inc
and
pop
sbb
in
add
jne
and
mov
int3
lahf
in
fstp
out
cmpsl
call
inc
ss
clc
cmp
sbb
mov
nop
cmp
lret
aaa
push
add
std
fildll
incl
adc
dec
inc
mov
in
fildl
jo
jno
orb
ror
dec
and
mov
aaa
push
adc
rorb
xor
sub
cmp
and
subb
xorl
decl
in
mull
lods
gs
dec
pop
pop
arpl
int3
sub
xor
jo
call
mov
push
repz
mov
push
ficomps
mov
inc
mov
jmp
scas
in
xchg
mov
mov
stos
inc
inc
std
testb
inc
mov
aas
push
pushl
fstpl
mov
clc
jl
cmp
js
int
and
cmp
mov
or
fcompl
ss
stos
sbb
out
lret
mov
loopne
cmp
sbb
jmp
movsb
jmp
lret
ret
aad
ret
push
pop
push
mov
aam
xor
cltd
aad
sub
lods
jge
ljmp
je
hlt
mov
mov
in
fldcw
jg
movsb
daa
or
xor
insb
sbb
mov
popa
fs
jmp
sub
mov
cmp
jecxz
lods
cltd
cld
rclb
das
inc
clc
cmc
push
sub
inc
in
push
movl
cmpsl
pop
aam
pop
stos
xchg
fcomps
setle
add
pushl
inc
js
popa
test
imul
insl
mov
xor
and
xchg
xchg
add
push
mov
popa
rclb
sub
call
inc
sbb
pop
cmp
adc
test
or
iret
movsl
mov
fmulp
pop
add
test
ret
fimull
mov
aam
dec
jecxz
hlt
idiv
push
rorl
repnz
aam
jle
sub
mov
test
pop
push
out
fadd
popa
dec
ja
inc
in
xchg
rorl
mov
mov
dec
or
adc
lcall
dec
or
loopne
mov
and
mov
sbb
push
je
dec
addr16
mov
sbb
fcos
jmp
ja
adc
mov
pop
push
call
inc
xchg
arpl
adc
orl
pushl
push
outsl
xlat
imul
daa
repz
ljmp
pop
int
fiadds
decl
fsubp
xchg
xor
popa
pusha
adc
es
or
sbb
and
call
jb
inc
stc
mov
inc
push
scas
pop
or
out
xlat
cmpl
ja
mov
fcomip
dec
inc
sti
test
js
insl
aas
jnp
scas
repnz
sbb
push
popw
outsb
in
incl
or
cmp
inc
inc
stos
out
mov
mov
addl
call
jge
jp
insb
cltd
mov
jne
dec
hlt
cld
enter
sub
pushf
adc
jmp
in
lds
test
and
in
cmp
fcoml
sti
sti
lret
push
lahf
out
test
mov
dec
addl
xchg
fsts
insb
push
sub
incl
daa
jnp
lcall
xchg
mov
sarl
dec
out
insl
xlat
inc
call
sbb
jo
or
inc
mov
mov
testl
dec
cmc
cmp
ljmp
pop
in
loop
mov
lods
mov
aas
sub
nop
dec
sub
lea
pop
jle
leave
shlb
sbb
sbbl
xor
sub
inc
repz
pushl
ljmp
scas
sbb
cltd
and
xchg
xor
dec
cmc
cmp
insb
adcl
mov
xchg
stos
add
call
pushf
imul
sarb
xchg
pop
incl
je
pop
imul
dec
iret
inc
data16
jl
jge
mov
push
xor
mov
lcall
nop
xchg
adc
xor
xor
sahf
sub
jmp
push
cwtl
in
inc
out
jno
push
les
cmp
sbb
mov
into
std
adc
jmp
stc
mov
in
mov
xchg
cmp
incl
mov
cmp
push
scas
cmc
xor
out
outsb
push
std
add
jo
jno
dec
enter
sbb
cmp
aaa
jecxz
pop
enter
fldl
fisubl
sbb
incl
mov
inc
pushf
hlt
sub
fiaddl
push
push
xor
xlat
adcb
mov
call
in
xchg
out
jecxz
lret
daa
xchg
jae
inc
dec
ret
fisubs
xchg
jns
xorl
xor
xor
out
cmc
shrb
inc
push
xchg
out
mov
lcall
mov
aam
rcrb
in
and
faddl
cmpsb
imul
cld
mov
stos
out
lcall
cs
int3
pushf
mov
add
dec
lds
mov
add
decl
and
popf
xchg
inc
jne
les
jb
and
xor
ret
jg
xchg
mov
stos
ficomps
push
in
jl
fisubrs
stc
outsb
mov
or
aad
ljmp
shlb
add
loopne
sbb
sti
xor
sub
sub
decl
fdivs
imul
pop
fmull
inc
cwtl
aaa
adc
pop
cmp
call
sbb
xchg
ret
and
mov
or
out
jecxz
add
mov
dec
std
push
adc
aas
xchg
in
xor
jae
mov
add
cmp
jl
sub
jmp
push
add
mov
jmp
adc
jb
or
mov
int3
pop
cmp
mov
fstpl
jae
xor
cli
je
mov
scas
xchg
js
inc
jecxz
sarb
out
xor
int
pop
loope
decl
mov
iret
cwtl
push
pusha
adc
pop
fwait
fisubs
shr
fcmovu
jp
cmc
push
xchg
aas
and
xlat
or
mov
xchg
jle
jmp
pop
testb
or
pusha
ret
insb
imul
in
in
fildl
mov
push
jecxz
fmuls
pop
jp
call
jle
xor
or
call
or
pop
pop
sbb
cmp
lret
aad
cwtl
mull
lea
rorb
push
inc
mov
pushl
mov
leave
mov
popf
sarb
lahf
or
pop
xlat
push
lods
int
jmp
icebp
jge
incl
inc
int3
xchg
jmp
add
into
xor
dec
inc
out
adc
and
rep
incl
mov
inc
mov
jnp
lahf
adc
xlat
pop
in
roll
lcall
push
fcomps
mov
mov
jo
lret
inc
cmp
arpl
pushl
ret
mov
call
fmuls
cs
jns
mov
sti
loope
ficoml
push
xchg
incl
mov
or
mov
in
xor
scas
shl
pop
push
icebp
mov
push
push
dec
std
mov
js
test
dec
inc
aaa
mov
push
fmuls
push
or
jmp
jnp
ret
nop
push
and
in
aam
fistl
inc
xor
aad
call
outsl
lock
mov
mov
loopne
sub
inc
insb
inc
mov
xor
rclb
aas
mov
dec
add
mov
leave
lcall
xor
cld
pop
xchg
scas
dec
inc
push
pop
push
add
lcall
jle
cltd
stos
sar
push
lret
dec
xor
pop
and
into
fmull
lods
mov
fsubs
in
pushf
loope
test
mov
js
mov
lret
lock
adc
jecxz
push
cmp
je
sub
incb
push
loope
push
pop
lods
mov
std
data16
call
out
xchg
push
pop
jle
jmp
imul
push
add
loop
push
add
pop
inc
push
push
jno
test
cmp
and
daa
dec
sub
stos
in
sub
xchg
clc
aas
popf
xchg
ljmp
incl
outsl
jnp
popa
xchg
ret
jmp
push
or
loop
inc
pop
xchg
idivb
fadds
inc
rcrl
js
and
fadd
mov
mov
ds
and
jmp
in
sbb
lcall
ror
cltd
mov
fstps
rorb
push
jle
pop
jg
lcall
in
addl
in
sub
inc
movsb
mov
dec
movsl
jle
imul
pushf
ljmp
xchg
cmpb
mov
pushf
push
push
push
mov
in
daa
jle
mov
xor
xor
pop
cld
nop
or
add
lret
incl
test
or
pop
push
out
sbb
push
in
ret
aad
shrl
jo
jp
decl
es
movsb
cmp
jbe
cmpsb
mov
sub
xor
cmpsl
xchg
dec
data16
jecxz
xor
inc
push
add
cwtl
lret
add
lods
jecxz,pt
arpl
adcb
dec
es
cmp
and
cli
jb
jmp
ret
aam
xchg
int3
data16
mov
testl
lret
cld
inc
int3
xor
and
dec
call
cs
sahf
and
imul
xchg
xchg
xlat
dec
bound
push
je
mov
jns
call
pop
cwtl
fwait
out
or
mov
test
jno
xor
fidivl
push
push
add
mov
imul
push
outsb
or
cmp
mov
cli
pop
pushl
fbstp
inc
cmp
jg
mov
mov
popf
hlt
dec
push
out
inc
testl
orl
incl
aas
data16
popa
outsb
enter
mov
and
into
in
dec
mov
pop
fwait
call
mov
cmpsl
in
inc
xchg
loopne
adc
jbe
sub
or
loope
jl
jmp
dec
gs
fidivrl
cmp
ret
pushf
aad
sbb
inc
mov
and
jle
xor
xchg
lahf
call
test
pop
aaa
sarb
jne
push
sub
lahf
pop
lcall
dec
sub
pusha
lahf
sbb
pop
push
pop
ja
sbbl
pop
jns
add
out
inc
call
lcall
in
push
stc
adc
jb
bound
fisubrl
rclb
and
pop
repz
mov
jnp
popf
add
fistpll
scas
rclb
xor
mov
cmp
mov
jle
decl
and
out
sbb
cmp
jmp
jae
dec
xor
mov
or
mov
push
adc
lea
pop
pop
mov
mov
les
rep
jp
xchg
sub
ljmp
or
mov
push
mov
pop
xor
nop
xlat
push
xchg
add
mov
test
or
decl
sbb
dec
movsb
mov
add
inc
inc
sbb
add
or
imull
div
in
pushf
cmp
jp
stc
popa
mov
movsl
scas
push
sbbb
sub
xchg
jmp
or
fnstsw
pop
mov
loopne
cld
test
mov
aad
int
cltd
cmpsb
cwtl
jg
icebp
jne
pushl
popa
int3
scas
mov
inc
jno
mov
jbe
inc
add
roll
inc
jbe
incl
push
ds
sbb
pop
fldenv
jge
jno
shrb
stos
lods
dec
fsubs
lcall
jl
inc
aam
imul
fisttps
cmp
dec
nop
out
xchg
push
pushl
push
mov
sti
ret
cmpsb
lods
inc
push
sahf
xor
cmp
jg
mov
sbb
incl
lret
sbb
cmp
cld
stos
and
stc
or
mov
jne
nop
int
cmp
std
xchg
mov
call
cltd
xchg
pop
ret
shl
mov
pop
push
idivb
fwait
or
mov
mov
cmp
or
push
jo
gs
aad
jmp
and
cmp
nop
aaa
ss
fistpll
jns
out
or
stos
lods
insl
fsubl
in
cmpsb
into
inc
pop
xchg
inc
scas
pop
gs
incl
lods
sahf
mov
mov
hlt
dec
adc
dec
xchg
daa
lcall
xor
insl
lret
jmp
jg
mov
scas
push
pushf
sbb
mov
lcall
cwtl
push
ss
cwtl
incl
push
pop
inc
shrd
dec
cmp
and
mov
or
js
mov
subl
fidivs
adc
or
inc
sarl
mov
pop
mov
loope
pop
sarb
jmp
lds
dec
inc
cwtl
push
ficoms
xchg
adc
inc
sbb
lahf
cmp
lods
mov
fwait
push
ljmp
xor
push
shll
cmpsl
arpl
add
inc
sbb
and
cmp
add
push
cltd
in
cld
popaw
xor
addr16
rclb
jo
in
aas
stos
pop
stos
adc
jb
pop
sbb
inc
xchg
xchg
inc
mov
or
mov
cmp
dec
fwait
push
xchg
mov
std
xlat
out
adc
push
jg
xor
pushf
mov
loopne
fiaddl
or
cmp
int
out
imul
inc
aam
or
and
repnz
cmp
and
xor
cmpsl
test
arpl
dec
add
dec
adc
pop
sbb
vaddss
inc
mov
sub
pop
adc
in
mov
ljmp
or
fmuls
arpl
and
dec
cmp
outsb
jnp
int
adc
mov
pop
add
adc
decl
ret
cld
push
jo
arpl
lds
lret
fdivrs
addr16
dec
je
push
cmp
pop
mov
repnz
test
vsqrtps
add
push
xchg
mov
dec
icebp
and
cld
pop
xchg
mov
sbb
inc
in
sbbb
and
and
gs
xchg
jbe
add
outsb
scas
test
mov
adc
cmp
sub
je
xor
incl
cli
fcom
ret
inc
xor
mov
inc
pop
push
xchg
test
jmp
inc
mov
lret
xor
xlat
dec
adcl
push
test
xchg
and
insl
cs
incl
pop
mov
mov
or
pushf
jo
cmc
iret
jo
jb
push
popf
andl
pushl
dec
daa
fnstenv
xor
push
icebp
in
ds
iret
ja
das
add
ret
jno
lcall
inc
push
xchg
mov
js
rolb
ret
pop
movsb
push
lds
xchg
mov
in
lcall
jae
popf
cli
mov
icebp
cmp
and
sub
or
push
xchg
dec
xorb
mov
add
incl
mov
dec
sub
int
xchg
repz
push
repz
push
jae
push
outsl
add
jae
call
xchg
ljmp
sahf
gs
and
xchg
sahf
fimull
add
incl
std
or
repnz
sub
icebp
add
loop
dec
arpl
cli
fs
cs
test
mov
jns
mov
test
in
xchg
xlat
or
std
sub
mov
frndint
in
lcall
fs
imul
aad
pop
fwait
mov
adc
sbb
sarb
repnz
and
inc
xchg
scas
rol
mov
cltd
inc
es
rcrl
dec
stos
or
mov
inc
sbb
lcall
pop
add
inc
in
xor
mov
xchg
aaa
sar
jbe
push
sahf
mov
fistl
dec
xchg
cmp
fiadds
decl
jmp
ret
or
dec
lea
jp
dec
lods
cld
xlat
xchg
push
loopne
test
pop
jne
stc
movsl
xor
jge
ljmp
or
popf
cltd
lret
cmp
sbb
out
dec
push
push
sbb
enter
push
or
sub
aaa
mov
fimull
add
call
pop
inc
gs
stos
push
dec
repnz
push
xchg
in
pop
repz
das
shlb
sahf
js
leave
push
mov
ljmp
or
hlt
and
or
mov
int3
inc
pop
out
xor
jnp
xor
add
ljmp
mov
ret
pop
aam
xchg
pop
into
push
test
xor
push
xchg
xor
and
ljmp
push
mov
mov
daa
leave
ret
xchg
and
stos
test
mov
shr
decb
out
add
pop
cltd
cmpsl
pop
push
ret
or
push
out
adc
cwtl
mov
call
imul
mov
adc
in
xchg
mov
cmp
aad
inc
repnz
push
push
ljmp
xchg
in
ljmp
dec
fcompl
mov
les
call
dec
lods
or
push
add
add
fdivp
add
push
lahf
add
ljmp
lcall
popa
push
pop
sub
pop
lock
and
dec
sti
adcl
sub
ffree
pop
xchg
sub
xlat
sarb
cmc
add
jp
sub
jnp
jmp
lahf
jmp
aas
in
aad
mov
arpl
sarl
jge,pn
add
sbb
dec
cmpsl
pop
ja
cmp
sbb
sti
inc
xlat
ret
fsubrp
lret
pop
cs
dec
aad
mov
call
inc
sbb
ljmp
fdivrs
imul
ljmp
jge
jno
sbb
sbb
xchg
mov
mov
mov
dec
sub
sbb
fistps
divl
pop
decl
and
fdivp
sub
pop
call
pop
ja
adc
lcall
mov
cmp
jmp
bswap
adc
sbb
push
mov
imul
pop
imul
fbstp
and
outsl
mov
jmp
dec
push
scas
fwait
out
cmp
add
nop
fnstsw
dec
in
cs
fidivrs
insb
call
lret
sub
xchg
inc
lods
fistpl
jge
dec
inc
xchg
pop
je
xchg
xchg
jecxz
xchg
dec
sahf
xor
adc
fldcw
enter
sahf
fldt
das
les
das
and
mov
incl
int3
mov
incb
sub
in
and
sbb
pop
mov
jmp
and
fisttpl
adc
mov
jmp
push
ficoml
int
call
cmc
aam
mov
out
mov
je
cmp
call
sbb
and
jno
enter
mov
in
subb
jne
push
mov
loopne
jno
dec
mov
xor
mov
popa
sub
incl
stos
lcall
cli
stos
rcrl
jmp
in
subl
ljmp
mov
cmp
je
mov
shlb
push
sub
sub
loop
pushl
into
pop
fcmovnu
test
and
pop
xor
and
js
inc
xchg
jns
incl
mov
insl
jle
or
cwtl
int
add
fisubs
or
or
pushl
sarl
jmp
push
cltd
cs
lods
push
dec
xlat
call
mov
xor
and
call
cli
dec
mov
imul
ror
sbb
adc
dec
jo
mov
loopne
lcall
scas
lahf
lret
fnstcw
mov
xchg
sbb
xchg
pop
cmp
fwait
push
test
adc
test
push
sub
andps
call
fildll
adc
movaps
fcompl
lcall
into
push
shlb
adcb
sbb
icebp
popf
rorl
shr
dec
xor
test
cmp
cld
arpl
and
mov
xchg
xlat
aas
test
sub
dec
ljmp
shl
roll
add
jg
sbb
adc
xlat
ja
int
jb
ret
addb
pushl
dec
or
add
add
movsl
dec
into
sahf
mov
sub
sbb
inc
fmul
and
repz
mov
ret
cld
dec
sbb
fdivr
ficoms
and
data16
arpl
adc
pushl
loope
jo
inc
fsubrs
nop
out
inc
dec
sub
pmaxub
cmp
jnp
pop
ja
test
sub
movsb
lahf
and
mull
fisubs
sbbl
in
cli
jge
jmp
sti
jae
scas
fdivrl
in
popf
cmp
xlat
inc
loope
fsubs
fsts
lds
stc
jnp
mov
or
nop
test
sbb
loope
stc
in
aam
xor
dec
in
fnstenv
and
sahf
xchg
cmp
push
ljmp
lret
sub
xor
mov
enter
jmp
sbb
repnz
cmp
inc
mov
ffree
jecxz
rclb
imul
decl
data16
cmp
stos
cmp
xchg
dec
leave
add
imul
js
cwtl
insl
call
into
cmp
and
sbb
or
push
and
xchg
jbe
mov
notl
popf
jp
push
cli
push
sub
mov
pop
adc
shrb
orb
add
ljmp
dec
push
sub
lods
mov
mov
mov
pop
ret
mov
call
cmp
push
ja
cltd
rcr
jbe
lock
mov
mov
cmpl
pushl
inc
in
jle
cld
movsb
shlb
std
and
add
inc
les
fdivrp
jg
cld
sbb
pop
push
push
cmp
jmp
mov
or
pushl
pop
jecxz
hlt
mov
mov
icebp
gs
dec
push
xchg
and
inc
adc
imul
dec
sbb
sbb
or
inc
xchg
shll
dec
mov
stc
inc
sub
test
xor
stos
dec
push
xchg
add
adc
call
sub
incl
cltd
lea
mov
test
xor
jg
stc
mov
cmp
push
pop
lcall
sbb
xchg
pop
sbb
fsubrl
cwtl
jp
add
xor
xchg
mul
pusha
pop
sbb
js
out
lds
ficoml
test
inc
or
clc
mov
call
fwait
mov
pushf
jb
les
xor
jns
ds
xchg
xchg
or
pushl
xor
cmp
fnstenv
jg
sub
bts
jo
mov
xchg
scas
and
push
sti
pop
and
fadds
dec
jg
cmpsb
scas
pop
cmc
or
add
xor
pushl
pop
or
in
fs
inc
jmp
add
outsl
shr
cmc
out
pop
test
mov
sub
jmp
xchg
pop
xchg
es
sti
mov
test
sbb
xchg
divb
jp
call
loopne
rcll
xchg
push
test
fstps
stos
outsb
sbb
inc
je
inc
sbb
dec
sbb
call
outsb
sbb
loope
movsl
push
insb
decb
fmul
jo
mov
jbe
lcall
subb
pop
mov
sub
ficompl
cwtl
test
sbb
xchg
push
test
jge
dec
sbbb
mov
mov
inc
ret
shr
daa
fists
and
fbstp
data16
call
dec
pop
and
dec
addr16
push
jg
jl
add
pop
ss
dec
les
rorl
mov
loop
push
jecxz
cli
out
andb
outsl
or
xchg
stc
mov
movsl
dec
mov
cmp
addr16
les
fildll
ret
call
loop
and
dec
jp
jl
ljmp
mov
and
shrb
dec
sbb
cmp
mov
xchg
jo
mov
es
cmpsb
mov
movsb
fdivs
dec
loopne
xor
out
sbb
mov
sbb
sub
insb
inc
jo
incl
or
mov
push
adc
dec
and
call
jno,pt
sbb
pushl
shl
pop
jb
cmpsb
jno
mov
cs
add
dec
adc
lods
mov
call
or
lret
insb
repnz
mov
mov
or
mov
sti
lahf
adc
pushl
pop
push
or
popf
sub
push
xor
push
shl
xchg
cmp
push
push
test
fsubrp
pushl
divb
lods
inc
inc
or
push
jbe
bswap
lcall
pushl
cmpsb
push
xchg
or
push
call
jg
jle
sbb
stc
push
cld
stc
dec
inc
arpl
ljmp
lret
mov
orb
push
sub
nop
repnz
outsl
add
decl
shll
cmp
daa
mov
jb
sarl
mov
imul
lcall
push
mov
mov
and
sbb
in
mov
js
insb
push
mov
jmp
dec
mov
outsb
mov
sbb
in
pushf
stos
hlt
mov
ret
xchg
out
pusha
ret
add
out
mov
sahf
and
pop
lods
ja
add
in
push
mov
mov
sti
call
call
mov
xchg
arpl
aam
cmp
jl
xlat
lock
stc
pop
mov
movsb
or
aad
ud0
jmp
jbe
outsl
adc
xor
fisubl
mov
jno
push
or
aaa
outsl
cmp
call
and
push
jle
xchg
stos
dec
inc
test
adc
mov
and
hlt
mov
decl
xor
mov
xchg
jb
or
jne
ficomps
test
cwtl
cmp
cmp
pushl
dec
push
cwtl
pop
inc
mov
push
mov
shrb
pushf
loope
mov
fdivs
imul
int3
call
iret
mov
push
call
or
pop
sub
popf
mov
out
incl
imul
and
int
mov
push
pop
pusha
arpl
xor
xlat
mov
addb
lods
push
sbb
jns
xchg
cmp
enter
xchg
and
pop
hlt
xchg
incl
fldcw
push
dec
or
scas
push
mov
cwtl
jp
out
or
incl
dec
push
jecxz
dec
xor
mov
pop
inc
and
pop
call
push
sub
lcall
test
pop
lcall
vorps
test
jge
xchg
pushl
xchg
inc
insb
or
into
push
push
aaa
xor
adc
sub
aam
jp
mov
cmc
adc
jl
stc
pop
stos
push
sbbl
repz
lods
out
mov
xor
push
xchg
mov
cmp
pushl
jge
xchg
push
inc
shrb
pushf
and
xchg
or
xchg
test
pop
outsb
add
pushf
pop
loope
and
dec
jge
inc
js
call
pop
lods
jne
imul
lock
jb
fmull
ljmp
rolb
mov
cwtl
xor
pop
jno
jbe
popf
xor
call
dec
add
xchg
jb
jo
xchg
mov
popl
sahf
test
les
cs
cli
pushf
enter
sub
push
mov
cmpsb
in
add
gs
fcomps
jge
stc
mov
mov
lods
fst
movsl
movsb
stos
mov
decb
loopne
add
scas
repnz
cmp
lcall
std
in
mov
or
mov
shl
testb
jnp
add
les
decl
ret
jg
pop
out
lds
inc
dec
out
pop
mov
and
fidivl
push
clc
mov
popa
or
and
fwait
iret
pop
sub
jo
push
mov
gs
xchg
lds
ficoms
decl
and
push
pslld
sbb
push
xchg
xor
cmp
sar
decl
in
pop
ljmp
es
add
mov
jge
insl
or
mov
jmp
pushl
jnp
leave
call
rolb
loope
cmp
cmp
daa
sub
repnz
in
stos
jns
mov
xchg
loope
push
pop
xor
push
jbe
cmc
sahf
inc
repnz
xor
mov
call
mov
incl
pop
xor
xor
ja
cmp
fcoml
pushl
fstps
mov
jp
mov
dec
subb
adc
pop
jle
mov
pop
xor
xor
jns
bound
xor
pop
inc
push
mov
lods
cmpsb
test
inc
out
mov
gs
lcall
cmp
mov
enter
test
stos
out
add
fmull
outsl
mov
lret
outsb
push
mov
adc
mov
pop
and
pop
push
and
inc
mov
rorl
dec
mov
incl
fs
adc
out
or
inc
flds
in
das
mov
or
lcall
cmp
push
lock
ret
leave
aas
push
fcmove
insb
jp
inc
aas
xchg
pop
fnstcw
jmp
sub
mov
add
pop
repz
or
loope
push
movb
dec
scas
and
arpl
push
fisubl
xchg
sbb
pop
push
add
jb
fs
pushl
cmpsb
call
mov
inc
push
adc
xlat
mov
dec
insl
pushf
xchg
mov
fdivrl
pushl
push
sbb
mov
sbb
push
sbb
mov
pop
xor
jno
cmp
js
push
stos
aaa
enter
cwtl
jl
out
xor
popa
pop
ret
adc
call
or
mov
repnz
cmpb
inc
sub
lods
adc
decl
cmp
imul
push
imul
jbe
mov
pop
fistpll
popa
dec
popa
mov
push
mov
pop
jbe
aas
pop
lret
fsub
sub
mov
fildll
pushl
cmpl
or
imul
repnz
outsl
xor
mov
pushl
and
adc
inc
jmp
sbb
aam
hlt
insb
push
fwait
xor
cmp
sbb
push
outsb
call
mov
dec
lods
fnsave
dec
je
outsl
lds
lea
aad
loopne
jp
lcall
cli
or
das
xchg
jp
arpl
testb
mov
outsl
add
ret
lcall
hlt
mov
cmp
leave
pop
add
cld
mov
adc
es
ljmp
pushl
insb
or
jno
lcall
rcr
cmpsb
sub
inc
lcall
adc
aam
xor
pop
ficomps
adc
inc
and
pusha
xchg
sub
fimull
pushl
jecxz
push
test
sbb
popa
lahf
dec
lock
shlb
jno
mov
rorb
inc
in
push
test
decl
and
and
push
pushf
mov
shlb
push
and
push
mov
stos
dec
pop
lahf
and
inc
lea
fwait
outsl
mov
inc
mov
fidivrl
mov
cld
jno
cmp
push
decl
inc
shlb
pusha
and
in
xlat
jl
sub
sub
xchg
cmp
mov
or
in
fsts
cmp
cmp
hlt
mov
mov
in
enter
std
and
int3
popf
decl
in
mov
xchg
aam
lcall
mov
out
pop
cmp
xchg
lcall
sub
fiaddl
popl
dec
dec
pop
jl
mov
inc
dec
sbb
ljmp
and
mov
cmp
mov
mov
lcall
inc
inc
popa
rorb
icebp
in
cmp
add
mov
ret
jmp
aas
sti
arpl
pop
decl
pop
push
xor
sbb
dec
add
dec
std
sahf
mov
int
sub
adc
outsb
fidivl
cli
lods
jecxz
pusha
or
or
lcall
dec
mov
mov
pushf
pop
test
idivb
xchg
lret
push
movsb
and
inc
aam
int
mov
cmp
mov
jne
fidivl
or
push
fnstsw
imul
ljmp
test
push
add
sahf
mov
jge
inc
out
stos
inc
inc
lcall
movl
decl
pop
inc
data16
adc
pop
loop
rcrl
pop
mull
cmp
movsl
mov
daa
cs
dec
lea
call
inc
xlat
pop
leave
fistpl
add
mov
stos
mov
nop
push
loopne
lods
ss
push
push
lcall
mov
push
pop
mov
out
leave
lods
mov
or
push
in
push
pushl
jge
lret
mov
inc
arpl
test
hlt
inc
fdivrl
sbb
mov
decl
dec
mov
imul
xor
sahf
mov
sbb
dec
or
sub
mov
mov
lret
test
int3
enter
lcall
pop
mov
icebp
cwtl
mov
jp
and
js
xor
fstpl
in
and
cmp
push
scas
in
in
lahf
pushf
mov
and
out
mov
out
dec
mov
adc
sub
call
test
cmp
cwtl
mulb
mov
inc
sti
mov
dec
add
mov
mov
fucomi
inc
lds
decl
push
xor
lcall
xor
sbb
out
aas
shrl
jmp
adc
mov
incl
nop
cmp
sti
mov
ret
jbe
lret
add
fs
call
dec
mov
push
xor
lods
mov
ljmp
aad
enter
or
int
inc
push
stos
push
sbb
mov
mov
inc
fcmovnb
cld
jne
and
xlat
int3
fadds
or
out
aas
data16
stos
orl
adc
and
insb
bound
stc
xlat
aaa
add
aaa
or
call
jl
mov
pop
ds
inc
or
dec
loopne
mov
dec
mov
xor
or
pushl
or
mov
cmc
dec
xchg
addb
inc
movsl
js
loopne
hlt
mov
data16
ljmp
adc
rcrl
out
jle
lea
les
adc
call
jmp
fistpl
fisttps
loop
and
dec
rclb
adc
cmp
rcll
lret
mov
jnp
scas
mov
xor
add
adc
ljmp
sbbl
xchg
cmp
fstpl
mull
ds
dec
das
lcall
jle
int3
inc
fdivs
je
mov
push
cmpsb
insl
mov
sarl
jbe
adc
or
decl
cli
dec
mov
lahf
pop
subl
add
sbb
popa
push
data16
lret
cld
in
leave
cli
imul
ljmp
xchg
fwait
gs
fildl
aad
adc
xor
jge
pop
jno
ljmp
in
jecxz
jmp
push
xor
stc
add
jns
lcall
push
andb
enter
jno
mov
xchg
pop
inc
ret
and
push
sbb
lahf
mov
ret
dec
and
cwtl
mov
push
imul
jg
pop
iret
adc
out
jmp
dec
push
fwait
leave
sbbl
dec
sub
jne
repz
fdivrp
push
fcomps
ljmp
aam
and
test
mov
mov
mov
daa
jo
dec
xlat
push
ljmp
gs
loop
mov
rorl
push
xlat
or
sbb
sub
test
push
mov
in
adc
xchg
xor
pop
outsl
pusha
jp
push
jae
or
imul
ret
jmp
cmp
call
aas
push
lcall
add
dec
mov
shlb
jl
mov
mov
incl
adc
dec
ror
rclb
jmp
jb
pop
jle
push
jns
das
dec
in
out
jmp
in
clc
jns
push
xor
xor
je
aaa
mov
adcb
sub
mov
call
push
testb
cmp
pop
xorb
mov
outsl
imul
pop
dec
insb
pop
jle
xorb
mov
sbbl
subl
xor
bnd
ss
push
xchg
pushf
jmp
mov
out
push
and
jb
inc
inc
lds
add
loop
ds
faddl
dec
push
add
inc
push
xor
push
push
cmp
push
mov
sub
out
nop
sub
addb
mov
stc
fnstsw
pushl
jl
cli
push
push
add
pop
pop
mov
jl
mov
and
daa
pop
mov
xor
aad
js
cmpsb
iret
arpl
xchg
and
inc
mov
adc
aaa
into
mov
or
sub
dec
sub
sarl
jnp
cld
push
imul
fwait
push
inc
pop
ret
or
lcall
sub
pop
aad
in
pop
dec
fimuls
and
and
incl
cmp
mov
leave
outsl
sub
out
xlat
cli
test
cli
loopne
rclb
test
or
add
sbb
push
xchg
in
adc
popf
enter
lcall
ret
add
ret
push
movsl
jbe
ja
mov
sub
xchg
int
nopl
add
pop
popf
cmp
fiadds
call
repnz
dec
shll
ss
pop
adc
lahf
mov
in
shlb
adc
pushl
test
jp
mov
fwait
adc
xchg
mov
add
outsl
imul
lds
dec
das
decl
mov
cld
test
jne
lret
mov
xchg
mov
sub
mov
jmp
add
pop
inc
mov
test
pusha
adc
aam
movsl
push
ljmp
nop
jae
cli
outsb
lods
aaa
lcall
int
sub
add
add
mov
adcl
in
push
ljmp
lret
lret
mov
jno
mov
cmp
add
outsl
fstpt
xchg
push
ljmp
add
stc
cmp
fdecstp
mov
or
mov
push
stos
daa
lock
jae
test
incl
cltd
xor
ret
cmpsb
stc
cwtl
pop
sub
mov
fidivrs
scas
enter
xchg
mov
inc
aaa
cwtl
add
cmpsb
lea
sbb
fs
pop
sahf
cli
xchg
jp
aaa
sti
int
sub
int3
leave
call
pop
and
xchg
clc
mov
in
fisubrs
std
je
mov
jmp
in
jp
lock
pop
mov
mov
mov
imul
pop
cmp
mov
push
lcall
sbb
adc
shr
daa
add
cltd
mov
jbe
nop
pusha
mov
cmp
jg
pop
mov
into
fsubrl
add
loopne
pop
jno
inc
lea
call
cmp
movsl
lret
sbb
lret
or
xorl
mov
mov
or
ljmp
shr
jg
mov
mov
popa
cmp
xchg
add
cmp
shll
ja
cs
mov
mov
or
fdivr
pushl
aas
push
inc
lret
cmp
adc
mov
aad
aaa
rcl
or
push
popf
lea
test
incl
stos
mov
push
popa
out
fildll
mov
push
mov
mov
lcall
xchg
ljmp
cmc
ds
inc
lock
leave
inc
ret
stc
and
push
cmp
pusha
testb
or
jmp
ss
cs
or
jge
pop
cmc
ds
dec
shll
in
frstor
sbb
lcall
sti
mov
sahf
mov
fsubrl
aam
pop
inc
push
inc
xchg
je
jbe
lods
mov
mov
push
push
in
stc
mov
sbb
jmp
mov
addr16
pop
mov
xor
mov
xor
ja
aas
jns
sbb
xor
fstpl
push
out
pop
fildll
lds
dec
into
pop
dec
push
ret
xor
adc
xchg
sbb
in
out
lcall
fsts
repz
incl
popa
push
cmp
cwtl
adc
pop
bound
inc
lahf
popa
fstps
jne
mov
fiaddl
movsb
stos
lock
pop
fistl
repnz
xchg
fmul
pop
push
cltd
in
dec
test
jl
mov
sbb
aaa
loopne
fistpl
pop
and
inc
pop
out
inc
dec
jl
bound
call
int3
popf
xchg
jnp
sub
mov
in
cmp
ret
popf
mov
mov
mov
jmp
and
jne
adc
fisubs
test
xor
loopne
dec
jle
add
xchg
fists
call
bound
xchg
jae
aad
pop
mov
or
lods
pop
mov
icebp
enter
jbe
cmp
add
mov
and
inc
cmp
scas
mov
jmp
add
cli
mull
sarl
fwait
jne
mov
ds
std
daa
sub
arpl
sahf
pushl
mov
push
sbb
push
jmp
cltd
and
cld
xchg
add
cmp
cmc
sub
cmc
pop
pusha
pushl
push
movb
jecxz
dec
push
ret
dec
shl
ljmp
adc
test
ret
shl
add
jl
inc
dec
imul
and
aam
ljmp
ds
jp
xchg
hlt
dec
and
or
lahf
in
cwtl
pushf
stc
aaa
or
repnz
idiv
fldt
int3
inc
mov
xor
jle
bound
sub
mov
pop
add
xor
push
std
lea
in
int3
or
and
outsb
mov
dec
icebp
adc
lds
fldt
movsb
lea
testb
jne
xchg
cmc
xor
lea
pop
ret
ret
in
call
dec
xchg
sti
leave
jae
xchg
scas
push
and
iret
sub
shll
test
ljmp
or
stc
push
mov
sbb
xchg
mov
mov
jb
mov
mov
leave
lcall
sbb
inc
sbb
fstpl
add
subl
add
dec
cmpsb
push
ljmp
and
and
filds
fsubl
faddl
cmpsb
xchg
sbb
mov
dec
dec
rol
sbbb
test
decl
testl
sub
and
or
cltd
hlt
aam
loope
out
shll
sbb
jae
push
call
push
add
js
test
loop
adc
pop
add
incl
sub
cltd
cmp
jmp
mov
ss
je
adc
dec
jb
in
add
adc
ljmp
jbe
cmpsl
lock
fiaddl
push
call
hlt
jae
daa
add
test
add
decl
jo
mov
xlat
sub
xor
push
ret
mov
psllq
ljmp
or
inc
mov
sbb
jbe
icebp
dec
cmp
lea
incl
ja
popa
mov
xor
mov
fwait
inc
adc
or
das
stc
and
inc
jl
incl
movsb
push
call
cmp
in
pushf
test
mov
cwtl
add
dec
add
cmp
cmp
cltd
gs
cmp
sub
xchg
push
sub
or
sahf
lods
dec
int3
sbb
testb
sub
sub
sbb
cs
fstps
cmpsl
mov
incl
inc
inc
cmc
scas
adc
jno
pop
jb
in
sbb
into
cwtl
xchg
rclb
es
in
fnstcw
pop
incl
dec
mov
stc
leave
arpl
jg
jns
adc
rcrl
and
jmp
xchg
lock
lcall
out
movsl
mov
inc
dec
insb
pop
mov
loop
adc
jg
and
out
js
mov
jmp
aad
jb
or
mov
pusha
push
test
shll
ret
lock
pop
mov
incl
mov
inc
mov
push
cwtl
das
push
out
xchg
push
test
hlt
insb
mov
addr16
in
jns
dec
jmp
push
sbb
push
jo
mov
lods
jo
sbb
stos
push
je
push
mov
out
jae
out
incl
loop
pop
pop
ficoml
inc
pop
jae
nop
test
jl
dec
test
adc
lods
inc
lea
push
clc
ljmp
cs
pop
push
fnstsw
das
stc
or
jg
outsl
mov
sbb
inc
std
repnz
das
stos
fnstcw
popa
scas
mov
sub
sbb
mov
lcall
test
inc
mov
or
rcrb
cs
test
sbb
mov
pusha
ljmp
inc
xchg
ret
mov
push
push
pop
mov
add
dec
jne
int3
cmc
cmp
cmp
and
pop
pop
hlt
rcr
fwait
test
lcall
test
jo
test
xchg
es
jmp
mov
and
dec
xchg
in
cltd
mov
sub
add
mov
jmp
ljmp
fcoms
iret
adc
call
test
add
cld
cmp
fcmove
push
and
dec
adc
cmc
mov
movsb
inc
or
int3
pop
loopne
fdiv
jbe
push
inc
jmp
xchg
mov
mov
and
mov
cmpsb
fildll
cmpsl
mov
pop
xor
incl
sbb
jmp
jp
icebp
dec
cmp
movsl
cmp
cli
sbb
jmp
xchg
adc
aad
mov
lock
or
cli
sub
cmpsl
shll
or
inc
decl
xor
xchg
les
les
lods
push
adc
int3
mov
insl
js
or
inc
push
push
sub
or
lret
and
push
popf
es
dec
xchg
inc
incl
repz
inc
int
adc
pop
xchg
out
fwait
scas
arpl
push
adc
lods
out
and
decl
loop
and
xor
jbe
cmp
orl
xor
and
scas
inc
or
jns
inc
in
pushf
das
imulb
test
ret
push
jae
push
push
sbb
test
mov
inc
inc
xor
and
mov
adc
mov
icebp
mov
icebp
sub
mov
addl
mov
arpl
mov
pushf
mov
pop
pop
and
mov
test
cmp
cmp
js
rcrb
pop
mov
jge
push
push
push
fsubl
decl
mov
notb
push
ja
adc
jp
mov
divps
out
das
jns
ficoms
cmp
xor
mov
inc
loopne
cmp
popa
outsb
adc
jae
icebp
sub
jmp
stos
pop
jge
or
xor
push
sbb
ljmp
mov
nop
out
mov
pop
fistpll
cmp
fsubrs
mov
xchg
iret
mov
incl
xchg
insb
loop
cmp
fcompl
call
incl
hlt
sbb
xchg
loop,pt
addb
xchg
pushf
in
pop
scas
push
icebp
mov
aas
xchg
add
cmp
nop
ljmp
mov
pushl
xchg
or
and
into
sub
out
inc
pop
shrl
stos
xor
mov
fidivs
ljmp
fistps
inc
pop
scas
jecxz
pop
into
outsl
roll
jne
mov
cmp
lahf
add
cmp
xor
mov
fisubrl
repz
push
jo
orb
xor
call
stos
lcall
cmpsl
dec
or
jge
shlb
mov
ljmp
dec
faddl
rcrl
add
jecxz
push
lret
inc
and
in
mov
mov
call
inc
adc
lret
sbb
sahf
dec
inc
sbb
lret
xor
cmp
mov
es
lcall
xor
push
int3
add
sbb
cmp
cmpsb
test
sub
pop
sahf
inc
iret
mov
dec
jnp
cmp
pop
out
xchg
inc
and
arpl
es
push
add
lcall
jo
bound
maxps
les
pop
sub
pop
sub
cwtl
test
fcoms
sbb
call
clc
inc
inc
push
add
cmovbe
add
jne
mov
decl
inc
std
push
mov
jmp
cmp
ss
push
andl
add
scas
jo
push
mov
jb
fldlg2
jp
mov
pop
cltd
add
and
cmp
aas
loop
ss
inc
add
xchg
out
sub
decl
push
shlb
push
inc
xor
loope
cwtl
pusha
mov
jg
sub
pop
dec
mov
dec
das
or
decl
cmp
inc
fcmove
rorb
outsb
jp
pushf
or
movsb
adc
stc
cld
sub
push
test
xor
loopne
arpl
adc
mov
repnz
sti
pop
aas
mov
mov
das
shrb
fimull
enter
and
cmp
sti
call
mov
pop
or
aam
bnd
std
jge
inc
jge
dec
pop
cmc
das
lret
stc
jns
jmp
lahf
in
sbb
test
scas
push
sbb
mov
and
ljmp
jmp
lods
fs
clc
add
leave
scas
cmp
ss
lods
inc
rorl
mov
sub
lcall
cltd
enter
dec
cmp
sahf
out
nop
mov
flds
inc
xor
gs
lcall
decl
cmp
jae
rol
push
pop
popa
ja
jge
push
out
xchg
adc
rclb
pop
inc
xchg
pop
jmp
orb
movsl
pusha
lahf
lret
imul
aam
bound
incl
ljmp
pop
in
test
inc
mov
xchg
inc
cmp
call
add
int
popf
jmp
cltd
add
arpl
push
and
test
cmpsb
aas
nop
notb
pop
mov
jae
mov
push
mov
lret
cmp
xor
sbb
ss
out
cwtl
scas
push
jmp
int
dec
xor
cmpsb
loopne
or
push
ret
push
push
push
add
xor
ljmp
imul
cmpsl
sub
jns
and
mov
int3
mov
decl
xchg
lock
xchg
negl
fcmovnu
test
adc
xor
shll
xor
je
push
push
pop
fsubrp
inc
aaa
pushw
outsl
iret
movl
and
repz
addr16
inc
dec
loopne
and
loope
stos
insb
and
aam
fldenv
xchg
lcall
pushl
dec
test
adc
adc
fcoml
scas
push
cmp
andl
inc
mov
std
dec
mov
lret
xlat
out
cmp
int3
loope
fisubrs
dec
jne
gs
call
xor
hlt
je
flds
jg
mov
cld
xchg
mov
xlat
push
adc
call
insl
sti
dec
jl
jp
pusha
sub
addr16
cmp
mov
mov
inc
jo
pop
pop
test
fimull
cltd
xor
jae
or
adc
push
jmp
lcall
add
divl
lods
push
pop
rcl
enter
inc
xor
dec
cli
cwtl
xchg
frstor
nop
push
sub
out
add
out
data16
decb
cmp
mov
mov
inc
scas
add
lcall
pop
push
cmp
decl
sti
jno
push
adc
int
movsb
ljmp
pop
out
dec
hlt
push
popa
mov
jmp
loopne
in
js
or
sbb
sub
daa
xchg
xchg
int
repnz
push
inc
lret
aas
js
addl
xchg
lret
outsl
cwtl
stos
xchg
sti
sti
shl
fwait
xchg
lret
fiadds
lea
fildll
push
pop
mov
inc
popa
dec
mov
mov
jle
pop
pop
push
jmp
sub
xor
into
jo
imul
adc
cwtl
inc
int3
lods
aam
lret
adc
mov
xor
add
call
dec
roll
pop
jge
or
and
jne
jno
lds
dec
incl
orl
shll
ret
int3
add
dec
add
aaa
out
paddd
std
pusha
loop
jmp
fucomi
fisubs
out
ret
xchg
inc
mov
mov
cmp
decl
mov
cmpsl
cmpsb
daa
sub
repz
mov
dec
sahf
lock
xchg
popf
lcall
inc
pop
jbe
int
pop
das
sub
imul
popf
cld
jge
fsubrs
out
cmp
push
ljmp
sbb
mov
std
and
sub
jnp
dec
ret
and
out
xor
sub
incl
imul
mov
aaa
testl
push
std
out
je
mov
mov
mov
adc
jmp
cwtl
out
in
adc
sti
imul
lahf
loop
and
pushl
js
adc
cld
xchg
clc
div
mov
push
ja
dec
mov
cmp
lcall
push
mov
daa
jle
in
xchg
push
gs
push
mov
add
mov
fdivr
push
push
stos
xor
inc
repnz
repz
push
adc
dec
lock
mov
cmp
mov
mov
test
adc
mov
imul
mov
jmp
mov
lock
jb
insb
mov
xchg
push
ja
inc
ljmp
dec
call
std
scas
inc
out
jle
and
mov
fistpl
call
push
mov
fcmove
pusha
xchg
aad
adc
pop
dec
mul
add
push
les
jnp
scas
cmpxchg
ljmp
data16
inc
xor
or
loop
cmp
sbb
cwtl
data16
jmp
roll
pushl
cltd
test
sbb
adc
enter
xchg
out
adc
push
decl
ss
hlt
adc
leave
orl
es
dec
pop
push
dec
push
xchg
loop
inc
jb
jnp
sub
push
arpl
testl
jp
fdivrl
cmp
incl
dec
aaa
sub
cltd
sub
sub
cmpsl
inc
mov
js
mov
xor
mov
out
or
adc
divl
mov
out
mov
dec
jmp
and
decl
loop
mov
push
jno
iret
fidivrs
pusha
divb
cmp
stos
popa
sbb
xchg
ret
mov
call
movsl
cmc
lods
sub
xchg
out
and
mov
dec
mov
push
lret
push
scas
mov
pushl
icebp
sub
test
loop
in
fistpll
loop
sub
push
lods
cmp
inc
pop
push
movsl
pop
outsl
test
aas
add
jle
imulb
cwtl
jno
js
sahf
adc
add
mov
decl
loopne
not
dec
shlb
aad
shll
jno
pop
mov
inc
movsl
pop
pop
mov
insb
pushl
in
rcrl
loope
push
fisubrl
inc
pop
cmp
inc
movsl
sbb
mov
ljmp
lret
ret
and
pop
inc
jecxz
inc
sub
mov
inc
jbe
mov
mov
jmp
jmp
pop
add
adc
sti
loop
and
push
cltd
dec
fidivs
movl
xchg
shlb
cld
clc
fwait
mov
xchg
dec
or
push
in
pop
xor
out
pop
decl
fwait
test
add
dec
repnz
lea
mov
mov
imul
out
push
xor
movsb
rorb
int
fisubrs
into
pop
push
inc
insb
call
jo
jmp
jge
or
dec
sub
pop
add
pop
rorl
leave
sbb
jne
sbb
sti
test
push
test
bound
jmp
iret
xchg
nop
stos
dec
mov
shl
push
mov
and
dec
imul
movsl
xor
pop
aas
lods
add
in
hlt
xchg
adc
push
imul
mov
rcll
inc
cld
or
adc
popa
mov
mov
pop
stc
enter
call
add
and
inc
int
lods
nop
icebp
das
cltd
std
jns
pop
int
das
xchg
pusha
push
fmull
push
lret
icebp
jl
rorl
ss
jbe
jp
mov
mov
pop
out
jmp
je
mov
push
lock
sbb
addr16
jle
cmp
js
nop
filds
mov
repz
cmp
decl
xchg
and
mov
fldenv
outsl
les
lcall
inc
shrb
add
lcall
jl
jp
mov
gs
ljmp
or
popf
jle
jmp
add
ficoml
sub
pop
sbb
inc
pop
jecxz
stos
pop
adc
fdivrs
stos
adc
ljmp
inc
fsub
push
lahf
xchg
fadds
mov
repz
dec
inc
mov
iret
adc
call
and
lods
dec
loope
lods
adc
pop
dec
or
sub
movsb
cmpsl
mov
xchg
cmc
sbb
jmp
push
mov
shrl
dec
mov
fstp
cmpsb
cmpsb
mov
inc
dec
push
sub
movsb
and
or
sbb
push
lds
push
lock
push
into
in
ret
or
mov
ret
xlat
pop
or
mov
jmp
dec
icebp
aad
aam
cmp
mov
repz
mov
inc
and
adc
add
jae
jmp
jbe
xchg
dec
mov
pop
xor
insl
xor
push
jnp
fsubrp
add
jbe
not
in
pushl
jmp
fs
sbb
add
popf
mov
mov
ret
je
lret
lcall
call
aas
mov
jns
fsubp
fcmovbe
xchg
push
rolb
or
dec
lcall
test
sbb
push
xor
or
push
cmpsl
pop
adcl
call
xor
roll
rcl
jl
adc
ljmp
mov
divb
cmp
xchg
es
mov
pusha
insl
ljmp
sub
insb
jp
pop
popf
add
xchg
push
jmp
ja
jecxz
fadds
int
inc
push
or
or
es
rclb
test
lods
cmp
mov
test
rclb
adc
dec
mov
inc
xchg
mov
js
adc
jmp
sahf
push
loope
movsb
push
dec
jecxz
in
pop
inc
mov
mov
scas
cmp
cwtd
sahf
call
faddl
inc
mov
mov
fst
and
mov
inc
aaa
cmp
adc
mov
call
push
pop
out
mov
push
push
sub
mov
adc
mov
pushl
xor
fcompl
fsubs
sub
cmp
daa
or
imul
decl
mov
frstor
mov
movsl
add
cmp
pop
push
out
out
sbb
dec
clc
mov
mov
test
cmp
outsl
test
cmp
mov
dec
loope
cmpsl
add
lcall
repnz
xchg
cmpsb
pop
xlat
mov
xchg
pop
daa
adc
mov
fs
dec
std
cmpl
push
sbb
inc
cmp
aad
xor
add
jp
pop
adc
push
inc
into
call
data16
addr16
ret
cmpsb
cmp
leave
rol
pop
mov
pop
mov
cmp
sub
call
sub
adc
add
in
adc
jmp
and
jmp
jecxz
jmp
mov
xchg
sahf
sbb
leave
fwait
mov
and
jmp
int3
int
lods
lcall
pop
push
mov
push
imul
int
insl
movsb
and
rcrl
cmpsb
lcall
mov
sbb
jo
xor
jns
jnp
aas
aaa
xchg
fcmove
sti
mov
incl
adc
push
or
filds
jp
sbb
inc
mov
dec
sub
into
sarl
jne
pop
dec
xchg
aaa
add
popf
mov
int3
sbb
sbb
int3
mov
pusha
imulb
stos
mov
inc
fistps
sbb
xor
mov
sbb
lock
jae
pop
decl
ss
jno
js
lahf
repz
and
sbb
jl
xor
es
inc
inc
xor
jp
jo
push
cmp
scas
jle
ss
xchg
fidivl
out
or
in
mov
scas
pushl
ficompl
push
divb
sahf
xchg
xchg
xchg
add
fstp
push
xchg
cltd
xor
call
ret
stos
or
cmpsl
das
in
iret
mov
push
adc
push
cmp
mov
pushl
int
lds
sub
fstl
fsub
mov
lcall
ds
call
sbb
or
fsubrs
cmp
pop
xor
mov
pop
js
dec
and
jmp
fsubr
mov
sarb
or
xchg
adc
dec
jb
push
jno
add
gs
les
dec
imul
cmp
sti
cli
sahf
movsb
adc
in
xor
rolb
inc
fs
decl
add
push
push
arpl
dec
lret
mov
inc
jmp
data16
mov
aas
lcall
scas
mov
data16
and
lret
sar
dec
dec
sub
mov
lcall
inc
dec
sub
mov
ficoml
aas
sarb
mov
call
mov
or
mov
call
mov
cmp
pop
mov
push
pushl
xchg
stos
add
push
ja
test
outsb
adc
xor
shl
pop
aam
clc
call
mov
sti
std
arpl
and
andb
xor
mov
addb
ljmp
jbe
jns
sub
imul
xchg
add
andl
mov
incl
and
bound
push
add
pop
push
pop
cmpsb
imull
xchg
mov
loopne
xchg
jle
fldenv
insb
ret
mov
and
test
xor
int
and
shl
mov
jmp
rorb
out
fnstcw
adc
jbe
sbb
lods
add
sub
mov
cli
adc
xchg
ljmp
fisubrs
mov
test
push
movsb
add
mov
lock
scas
sbbb
iret
xor
xor
jne
incl
mov
push
sub
incl
sti
aad
fiaddl
loopne
lea
decl
cmpsb
mov
nop
icebp
int3
inc
icebp
push
cmp
loop
push
rcll
shll
repnz
das
ljmp
sbb
imul
lahf
adc
pop
xor
xchg
inc
xchg
xlat
les
xor
adc
lcall
pusha
xchg
stc
jbe
js
jnp
xor
xor
mov
je
and
and
pop
inc
loope
out
and
hlt
aaa
imul
in
mov
mov
cmpsl
or
xchg
lcall
outsl
icebp
loop
sbb
jmp
testl
jo
hlt
and
ljmp
sbb
lock
ja
test
pop
push
sub
rcll
cmc
fwait
jnp
les
scas
or
inc
pop
stos
outsl
lods
adc
lret
and
scas
incl
leave
pop
xchg
in
or
mov
xchg
icebp
mov
jb
js
clc
out
jbe
ret
incl
jle
sub
imul
dec
je
fsts
inc
mov
and
xor
inc
into
jle
fdivrl
ljmp
mov
jecxz
mov
popf
add
xchg
push
ljmp
dec
mov
arpl
xor
mov
mov
enter
inc
cmp
insb
sub
call
mov
mov
scas
inc
dec
or
stos
test
push
lahf
cs
out
cltd
gs
mov
ss
lock
loopne
addl
rorl
sub
fisttps
mov
or
dec
xor
push
arpl
cwtl
sti
out
sbbl
mov
ss
inc
jmp
subl
inc
pop
jo
dec
xor
lret
mov
dec
cmp
jb
decl
jmp
dec
jge
xchg
push
ds
inc
inc
iret
cmpsb
jmp
addr16
mov
xchg
outsb
mov
lcall
in
or
int
push
js
out
pop
jne
loope
or
cwtl
test
es
stc
dec
sarb
inc
and
xor
jns
popf
jno
jo
in
icebp
pop
cmp
mov
outsb
jle
inc
cli
jae
out
push
xchg
ljmp
jp
jmp
pop
jmp
mov
shl
push
enter
bound
testl
jecxz
sub
incl
je
adc
je
and
aas
repz
mov
lahf
call
cmp
pop
cli
xchg
jns
call
xor
fnstcw
xchg
inc
jns
mov
xchg
xor
dec
push
ret
lods
test
mov
dec
bound
push
xor
lea
stos
pusha
xchg
out
lds
or
ljmp
fbstp
decl
nop
or
push
das
outsl
in
inc
fdivrl
mov
or
lret
push
push
jmp
xor
mov
in
sub
shr
sbb
lea
adc
dec
sub
adc
sar
lcall
jb
and
and
add
mov
imul
aad
sar
jmp
cltd
adc
aaa
es
and
jbe
movsb
in
mov
mov
ljmp
mov
call
sbb
jno
ror
ja
xor
push
fcomip
jo
push
enter
push
pushl
lds
les
test
adc
dec
xor
cld
test
fs
mov
fwait
mov
lcall
rcrl
and
mov
es
mov
inc
mov
fisubrl
fimull
xchg
hlt
dec
pop
push
jnp
fwait
xorb
mov
adc
movsl
shlb
ret
incl
dec
and
xchg
sahf
je
imul
lret
div
push
push
leave
pushl
push
rorl
lods
sbb
imul
pushl
stc
adc
call
les
add
push
sub
es
stc
test
lods
sub
jnp
sti
loopne
decl
mov
lcall
pushf
xchg
adc
mov
insl
push
push
mov
lcall
icebp
xor
dec
adc
push
fs
jg
and
in
adc
ret
push
mov
test
xchg
enter
adc
dec
cmpsl
pop
fisubl
cmpsl
mov
jmp
insb
xor
mov
pop
aad
ja
add
sbb
ds
jg
push
mov
jns
and
addb
inc
mov
lahf
scas
mov
imul
xchg
ret
decl
stos
jae
cmpsb
dec
sbb
mov
or
pop
xor
test
call
xchg
cmp
jmp
roll
arpl
xchg
pop
add
mov
cli
lods
ss
bound
data16
ljmp
xchg
jle
mov
clc
lds
jmp
cmp
mov
movsl
test
loopne
stc
ljmp
in
lcall
or
int3
hlt
cmpsb
idivb
jae
push
pop
adc
jmp
dec
push
in
lcall
inc
or
mov
test
rorl
dec
mov
icebp
and
push
aas
bound
xchg
adc
fnstcw
cmpsl
imul
fwait
daa
mov
pop
outsb
and
call
jo
jecxz
adc
fs
loop
iret
inc
inc
loop
fadds
cmp
rclb
sar
call
hlt
cld
pop
xorl
inc
pop
xlat
push
je
push
add
push
add
in
cmp
mov
incl
pop
imul
in
jge
stos
test
jno
test
fidivs
pop
dec
inc
sub
int3
cmpsl
or
jmp
into
inc
mov
std
int3
test
out
ret
test
mov
int3
mov
mov
incl
ret
inc
jg
cli
test
or
pop
push
rcll
mov
mov
jae
decl
fs
push
cli
sarb
cmp
ret
or
loopne
adc
mov
pushf
cmp
fdivr
incl
pop
in
cmp
adc
std
cltd
xchg
ds
pushf
sub
sar
decl
rcll
mov
jb
sbb
adcb
orb
push
and
pop
pop
mov
stos
jmp
and
scas
les
jb,pt
cltd
pop
dec
cmp
int
xor
or
jl
jnp
or
cmp
cmp
mov
or
testb
jge
in
loope
mov
das
jg
test
push
lea
lcall
xchg
test
aas
addr16
xchg
outsl
daa
or
sbb
mov
shll
jns
and
test
lcall
and
or
aaa
dec
sub
lret
push
in
cmpsb
das
xor
addb
lods
loope
dec
add
ljmp
pop
mov
out
xor
fdivr
in
dec
cmp
xor
inc
test
inc
shrb
in
sub
pop
jmp
push
sub
out
cmpsb
push
inc
sti
pop
cwtl
adc
mov
ljmp
cmp
jmp
daa
dec
jge
cld
dec
sbb
xor
lret
jge
hlt
stos
andb
sahf
jp
cmp
inc
cmc
adc
lock
lcall
js
sub
call
stc
dec
lock
data16
subb
lods
and
out
fdiv
push
sub
mov
pushl
and
or
dec
inc
inc
mov
push
scas
inc
cmp
repnz
loope
xlat
repnz
lcall
push
fildl
incl
shl
fst
sbb
fwait
arpl
iret
fistpll
and
stc
das
jb
mov
decl
hlt
mov
jmp
fisubrs
sbb
cld
icebp
cltd
xchg
sbb
jns
inc
call
sbb
scas
int
pushf
shll
jo
pushf
and
jo
inc
mov
jns
pushf
int3
or
lcall
inc
insb
or
jo
mov
loopne
push
mov
jne
pop
in
inc
mov
jmp
lret
sbb
mov
popf
lea
mov
negb
pop
ljmp
aam
dec
out
pushf
cmpb
dec
repnz
outsl
gs
push
mull
and
lds
movsl
out
aas
subl
into
xchg
dec
daa
push
dec
ljmp
enter
cli
popa
pop
pushl
xchg
cmpsl
pop
push
aaa
divl
inc
leave
push
mov
jg
scas
sub
jo
aas
dec
dec
pushl
push
inc
outsb
sbb
int3
pushl
stc
add
adc
scas
xor
mov
daa
mov
pushl
out
sbb
int
out
arpl
cld
dec
push
adc
fs
pushf
or
jbe
lock
aas
xlat
push
xchg
adc
and
movsl
mov
cld
cmp
adc
push
scas
call
mov
sbb
out
jno
mov
mov
mov
or
fdivl
dec
xlat
mov
inc
lea
aam
mov
xchg
inc
divl
cmp
mov
call
cld
mov
cld
notb
in
mov
add
jl
mov
pop
lcall
dec
stos
xor
push
and
out
out
jne
jae
in
cmp
in
iret
ret
in
in
and
pushl
repz
jmp
or
sub
shl
dec
hlt
clc
pop
xchg
daa
out
sub
xchg
inc
incl
sub
ret
mov
mov
pusha
nop
pop
xorl
pop
dec
stc
test
mov
or
ds
aam
dec
inc
inc
pushf
pusha
das
jbe
xchg
cmpsb
lahf
decl
aas
xchg
pop
mov
popa
popf
stos
aas
or
dec
and
and
sub
imul
jmp
mov
jg
popa
outsl
outsl
mov
push
out
das
addb
xor
mov
outsb
xchg
mov
pusha
or
mov
adc
jb
xlat
pop
jae
loop
jno
xlat
cmpsl
and
cmpl
lods
dec
pop
pop
lahf
mov
imul
push
mov
mov
pushf
adc
insl
call
xor
lea
pop
xlat
add
add
ret
in
dec
pop
push
mov
add
fisubs
mov
mov
pushl
push
jg
xchg
nop
mov
mov
sbb
sub
cmp
jmp
sbb
jnp
dec
btc
adc
testb
mov
mov
out
aam
fistl
dec
cli
jp
scas
outsl
flds
jecxz
dec
roll
xchg
into
mov
nop
inc
mov
xchg
clc
aas
nop
sub
js
mov
lds
cmp
inc
loope
lret
jmp
adc
shll
orl
sub
push
iret
mov
mov
loope
imul
rcll
or
movsb
lcall
shrl
adc
mov
lock
sub
adc
jbe
mov
jns
call
mov
fs
sub
sbb
lahf
lds
and
mov
pop
mov
pop
incl
fldenv
push
ds
out
movsb
arpl
fisubrs
xchg
ja
js
lea
xchg
incl
movsl
loop
sub
mov
mov
mov
fcoml
or
test
add
dec
xchg
adc
rolb
jge
outsb
int3
mov
pop
bound
xchg
shr
aas
add
sub
lret
decl
jg
test
ret
xchg
mov
ret
imul
sbb
arpl
or
pushl
jae
jnp
sub
cmpsb
push
clc
je
sbb
adc
into
add
adc
in
xchg
pushl
iret
xchg
pushf
in
sub
divb
testl
cmp
lock
incl
stc
adc
jmp
cmc
inc
add
or
fsub
insb
sbb
das
sbb
mov
dec
dec
jg
out
mov
cmp
pop
lods
xchg
sub
adc
pop
add
xlat
lcall
lcall
in
jnp
add
adc
and
push
leave
sbb
call
out
imul
push
ftst
dec
sbb
xlat
fistpll
push
jbe
sub
fsubl
cs
mov
lods
inc
int3
add
sub
adc
pop
lock
call
xlat
adc
call
enter
inc
rorb
lods
mov
xchg
out
xor
inc
mov
int
psrlq
outsl
sub
in
mov
jmp
rcl
sbb
pop
push
aad
iretw
insb
inc
cli
sub
xor
aaa
pop
mov
dec
in
call
sub
lods
rorb
mov
repz
inc
cmpsb
sbb
adc
pop
out
xchg
decl
cmp
inc
inc
daa
xchg
jmp
xchg
mov
inc
mov
mov
push
or
pop
int3
sahf
jmp
ja
and
add
movsl
nop
ficompl
mov
mov
jns
xchg
cmc
sahf
in
rorb
fildl
aas
popf
pop
pop
sbb
add
pop
push
xchg
push
fnstcw
cmp
push
sbb
stc
fisubrl
pushl
and
or
push
inc
and
or
sub
nop
xchg
xchg
jnp
ljmp
std
orl
jbe
movsb
clc
loope
push
es
mov
insl
movsb
lahf
ror
sbb
lcall
xor
scas
add
fldt
xor
out
mov
pop
sarb
dec
xor
jmp
nop
cwtl
xor
sub
pop
jmp
fstpt
out
mov
pop
mov
cmp
push
jmp
arpl
xchg
icebp
pop
into
xor
mov
ljmp
bound
mov
jns
stos
cmpsl
rcrw
arpl
mov
push
iret
mov
gs
sbb
incl
push
imul
mov
cmpsl
push
mov
jo
adc
xchg
cmp
lods
sub
dec
cmp
outsb
jns
mov
push
xchg
popf
inc
clc
aas
cmp
rorl
test
or
call
add
push
inc
mov
pop
cld
test
add
and
out
in
inc
sar
inc
call
adcb
sbb
inc
pop
mov
add
sub
call
ljmp
cmp
in
jnp
mov
cmp
cmp
sbb
xchg
cwtl
sbb
loope
pushl
cmp
pop
mov
mov
mov
push
lds
cltd
push
adc
call
mov
insl
mov
inc
insl
ss
adc
xchg
mov
scas
clc
and
inc
dec
pop
dec
pop
sarl
stc
sub
mov
adc
dec
jg
mov
sub
sub
pushl
in
add
int3
notl
mov
lods
cmpsb
aaa
push
fwait
lea
fwait
sub
mov
pop
sti
decl
in
cwtl
popa
enter
adc
fsubrl
jno
dec
mov
call
dec
pop
mov
es
or
cmp
sub
stos
cli
jo
dec
pop
pop
pop
fdivrp
jmp
cmp
in
ja
or
addr16
into
addr16
jnp
inc
push
rclb
pushl
cmp
jp
adc
jb
roll
sbb
xchg
push
arpl
shlb
add
call
sbb
mov
andb
aaa
cs
iret
dec
push
or
xchg
inc
jmp
dec
out
xor
sti
pop
mov
xchg
repnz
mov
mov
pop
push
sbb
ljmp
inc
pop
loopne
mov
clc
repnz
jg
xchg
xchg
mov
js
sbb
decl
jmp
push
xchg
xchg
in
scas
sbb
leave
aad
pusha
push
or
inc
xor
call
jmp
shl
jno
push
addr16
jle
jge
fchs
or
sahf
in
pushl
add
aam
es
mov
ds
dec
xor
dec
push
rclb
scas
decl
mov
fxch
mov
lock
push
push
in
xor
lcall
mov
jns
ljmp
xchg
pop
out
lds
lea
xorl
adc
scas
or
push
mov
outsb
ret
pushl
rorb
loop
push
lds
cwtl
sbb
mov
fisubrl
popf
add
cmp
lcall
push
inc
mov
xchg
rcl
sbb
mov
js
and
add
xor
push
mov
roll
mov
or
fwait
mov
sarl
mov
in
xchg
push
rolb
push
jmp
adc
paddsw
movsl
cmp
fdivs
lret
xlat
jo
push
loop
mov
jge
loopne
pop
cmp
dec
das
xor
mov
fcomp
fs
add
scas
stos
ret
fidivrl
decl
adc
pop
adc
mov
sub
xchg
popa
push
mov
push
push
pop
lock
mov
and
jmp
repnz
pop
lds
dec
ret
ss
shll
push
decl
subb
cmc
out
jecxz
rorb
inc
arpl
jnp
cvttps2pi
pusha
movsb
cmp
lcall
fbstp
adc
push
inc
orb
mov
mov
int
pop
ljmp
mov
add
xlat
push
inc
pop
aad
sarl
xchg
lock
fldpi
pop
popa
lock
stos
mov
stos
hlt
pop
jecxz
sub
sub
mov
push
pushl
sahf
lods
lret
jp
push
arpl
decl
xor
push
cmp
lods
cmc
or
decl
adc
lock
mov
aas
xor
cmp
repnz
mov
pushl
scas
mov
test
mov
mov
lock
js
push
rcrb
pop
jne
pop
cmp
incl
or
sub
xor
ss
pop
adc
dec
iret
sub
ret
lcall
loopne
mov
dec
mov
mov
adc
arpl
push
mov
cmc
imul
mov
outsl
fdivrl
fbstp
mov
mov
pop
push
lods
insl
les
push
pushl
dec
pusha
int3
insb
sub
icebp
ret
fnstcw
pop
outsl
sbb
loop
enter
add
pop
daa
fwait
pop
fsubs
push
pop
fcoml
push
insb
aaa
push
mov
pop
xor
lds
xchg
out
pop
inc
in
and
mov
in
xlat
mov
pop
out
in
imul
dec
and
jl
leave
xchg
call
dec
push
xchg
ljmp
dec
mov
iret
ret
cmc
jb
incl
nop
scas
nop
pusha
mov
bound
or
xor
jge
pop
push
mov
jmp
mov
daa
pop
dec
jecxz
mov
scas
mov
bound
add
pushl
xor
xor
in
fwait
add
sbb
mov
call
cltd
xor
jmp
clc
push
adc
popf
sub
sbb
mov
xor
out
cmc
imul
ljmp
jo
add
fcmovnu
xor
movb
inc
call
jecxz
jge
dec
outsb
fstps
ljmp
cld
scas
and
fsubrp
sub
adc
cmpsb
pushf
inc
push
add
inc
stos
out
lock
aaa
sbb
jmp
inc
enter
sub
lea
out
packsswb
data16
inc
int3
sbb
in
pop
test
jp
push
cli
add
fcmovne
stos
mov
ficomps
repz
fucomi
insb
stc
mov
jmp
push
clc
data16
fbld
mov
rolb
jae
test
xor
inc
push
jbe
dec
jnp
repnz
inc
lds
inc
jg
pop
ret
call
shl
push
adc
jle
pop
xor
cmp
xlat
xchg
lret
dec
outsb
iret
jno
in
gs
and
incl
fwait
mov
repz
cli
xchg
sbb
push
popa
int
jae
sub
mov
aas
ss
inc
cltd
pop
cld
cmp
cli
pop
xchg
repnz
pusha
in
ret
out
fistl
inc
inc
add
ffree
sbb
jmp
std
fsubs
lahf
and
dec
sbb
call
sub
ror
mov
call
fdivrs
mov
fildl
sbb
lds
mov
leave
dec
inc
cltd
mov
imul
addr16
inc
or
push
fs
ficoml
jecxz
inc
icebp
xchg
mov
and
gs
jns
lcall
gs
ds
inc
mov
dec
mov
insb
sbb
fcoms
repnz
shrb
test
pushf
call
ret
insb
cld
shll
add
js
inc
pushf
notl
pop
hlt
lret
out
loope
mov
and
incl
mov
lods
lds
mov
mov
les
mov
in
push
pop
pushl
add
jae
addl
pop
xor
sbb
inc
adc
outsl
mov
sub
incl
xor
xor
out
and
pop
scas
and
test
and
incl
insl
mov
stos
sbb
xchg
int
xchg
pop
mov
cmp
daa
push
sbb
shl
pop
ljmp
and
dec
mov
xor
inc
xchg
pop
es
in
adc
bound
xor
jmp
sahf
sbb
leave
mov
xchg
mov
pop
outsb
adc
push
cmp
clc
dec
mov
pop
inc
incl
xor
mov
cltd
push
mov
inc
jle
test
xchg
cltd
push
clc
sahf
mov
aam
icebp
jl
repnz
jne
jb
scas
lret
lahf
mov
lea
incl
test
jnp
outsb
jge
mov
or
ss
lret
cli
imul
jge
cld
pop
shrl
jmp
movsb
cs
jno
cld
scas
aam
insb
push
cmpsb
decl
and
jmp
xor
or
mov
mov
or
mov
js
mov
mov
dec
or
mov
cmpsb
sub
sub
xchg
loopne
mov
cmp
mov
pushl
cwtl
fs
and
clc
or
outsl
push
repnz
or
mov
incl
aas
idiv
adc
jno
outsb
ret
mov
pop
xchg
mov
rclb
push
add
push
or
loop
popa
push
dec
stc
dec
test
or
pop
or
cmovns
jne
call
les
mov
lahf
dec
rcrl
mov
scas
aam
testl
pushl
lcall
and
jb
fwait
lret
into
andl
imul
shll
call
in
adc
movsb
jbe
fdivrp
arpl
cmpsl
neg
fistps
jl
adc
cmpsl
adc
xor
incl
loope
inc
xlat
or
mov
jmp
push
lods
cmc
push
in
mov
aam
fbstp
ret
xlat
jl
iret
adc
stos
sbb
in
es
push
push
mov
int
xchg
add
xchg
dec
mov
and
out
mov
dec
fcmovnb
out
jmp
int3
mov
int
xchg
inc
push
mov
test
inc
shll
cmovle
ja
lret
dec
mov
popa
out
lods
in
mov
paddw
xchg
fldenv
jecxz
or
add
fistpl
data16
sub
lcall
inc
pop
pop
xchg
daa
sbb
das
mov
xchg
pop
xchg
xchg
cmp
negb
adc
lcall
rorb
add
mov
and
mov
rcrb
cmpsb
xlat
push
add
cli
incl
mov
mov
or
or
jg
stc
aaa
cmpsb
fnstcw
lea
sbb
pop
mov
jmp
aaa
pop
add
orl
lods
das
jp
in
lret
test
dec
inc
scas
cmc
iret
inc
lcall
into
inc
xor
add
adc
rolb
into
mov
pop
jae
mov
mov
sarl
bound
push
push
push
mov
lods
push
insb
rorl
push
imul
ljmp
pop
xchg
lret
pop
pop
test
inc
imul
das
repz
sbb
mov
call
outsl
push
pop
or
xor
add
ret
mov
mov
pushl
fistpl
xchg
testl
ja
mov
fucomip
into
scas
inc
flds
jo
dec
mov
incl
not
test
fidivs
sbb
enter
xor
stos
fnsave
out
inc
pushl
jne
in
ja
jmp
ret
jecxz
fisttps
add
sub
call
shlb
mov
mov
clc
cmp
ljmp
ljmp
sub
xor
adc
rolb
sub
push
push
call
pop
cmp
sub
inc
xor
out
dec
es
cmp
pushf
xor
mov
adc
jnp
sbb
inc
inc
enter
inc
lds
in
sbb
xchg
jns
enter
faddl
aas
jp
into
or
stos
fiaddl
scas
mov
sarb
adc
or
mov
and
incl
xchg
push
push
enter
ror
loop
cmpsb
sbb
push
pop
in
enter
cwtl
loope
mov
pushl
mov
inc
cmp
jbe
mov
repz
fnstsw
xor
aad
pop
mov
in
mov
ret
inc
and
ret
adcl
mov
cmpsb
mov
pop
and
scas
push
cs
jg
mov
negb
push
bound
xor
and
pop
push
inc
push
lods
nop
imul
add
push
mov
push
dec
stos
add
or
pop
sbb
cmpxchg
push
cli
dec
cmpsb
leave
xchg
incl
stos
rolb
and
adc
pop
dec
adc
imull
ret
mulb
and
xchg
out
dec
cltd
jmp
aaa
into
cltd
out
xorl
aas
push
repnz
pushf
in
outsl
icebp
out
or
mov
push
cmp
pop
jmp
fimull
adcb
dec
add
cmpsl
pop
xchg
adc
ja
rcrb
mov
call
sahf
dec
sbb
in
jl
inc
cmc
mov
push
call
mov
inc
outsb
out
call
ljmp
dec
adc
aam
xor
pop
pusha
or
pushf
sahf
xor
fisttpl
cmpsl
sub
decl
push
pop
iret
aaa
inc
adc
or
and
cmp
pop
mov
mov
mov
call
jno
inc
mov
cmp
jecxz
mov
inc
int3
rcrb
pushl
std
outsb
in
and
xchg
jle
xchg
cmpb
dec
jmp
mov
dec
out
fstpl
mov
pushl
mov
xor
fs
and
mov
or
int3
dec
inc
adc
movsl
pushl
dec
add
call
inc
in
adc
mov
int3
lret
mov
addr16
jb
sbb
movsb
jmp
xchg
add
pop
decl
cwtl
push
mull
andl
jne
fists
lcall
push
fldt
out
mov
jp
aaa
inc
fistps
dec
pop
xor
fistpl
inc
mov
cmp
fidivs
mov
lcall
jne
sbb
adc
stos
arpl
jg
jg
mov
jle
or
sbb
jp
cltd
mov
lcall
xchg
aaa
and
sbb
cli
cs
dec
pop
jg
add
aaa
mov
xchg
mov
jmp
or
daa
jl
sub
movsl
idiv
xor
xlat
and
sahf
ljmp
clc
arpl
nop
cs
incl
nop
pushl
sbb
ljmp
ds
test
pop
mov
cmp
std
push
mov
mov
fistps
push
inc
fistpl
cmp
push
orb
in
imul
xchg
stc
mov
popa
jl
and
and
into
je
leave
shrl
jbe
pop
cld
ljmp
pusha
mov
mov
das
mov
adc
movzbl
and
lcall
je
xor
ds
les
lods
lret
pop
popf
mov
scas
aad
mov
jmp
mov
jmp
popf
fninit
xor
mov
cmp
ror
mov
and
inc
lods
lods
inc
cmc
push
mov
andb
popl
dec
icebp
testl
push
hlt
and
fsubrs
fadds
add
out
mov
push
repz
or
cwtl
lcall
ds
cmc
ja
pushf
and
cli
loope
shrb
jo
sarl
sbb
in
call
inc
mov
adc
ret
xor
cmc
fdivl
jne
sbb
xchg
lcall
faddl
std
addl
fnclex
cmpsl
push
mov
cmpsb
xchg
mov
and
push
stc
or
jmp
mov
nop
push
shlb
mov
jbe
fsubl
jo
cmc
xchg
push
cwtl
test
jnp
insb
fstpl
mov
icebp
jbe
in
ret
ss
dec
mov
sahf
int3
pop
mov
jmp
sarb
lahf
test
pop
clc
stc
leave
push
fdivrs
pop
dec
jle
mov
adc
jbe
loope
and
aad
jmp
add
adc
clc
faddl
xorb
mov
add
push
addl
inc
or
jmp
add
cmpsb
and
inc
push
mov
and
fs
je
mov
mov
loope
xor
lcall
je
xchg
xchg
and
in
fwait
cmp
adc
jbe
jne
fwait
inc
clc
loopne
add
pushl
mov
ljmp
jle
mov
add
pusha
cmp
insl
lcallw
cmpsl
cmp
rcrl
pop
xchg
jg
loope
sub
mov
aam
aam
arpl
add
incl
data16
scas
inc
das
mov
fistl
xchg
sbb
sbb
loop
leave
repnz
dec
xor
dec
nop
xor
xor
iret
add
push
data16
hlt
pop
push
icebp
or
push
or
cmp
xchg
sar
or
rol
or
repz
enter
push
cmp
sahf
mov
jns
fildll
pusha
sahf
loope
pusha
stc
lret
out
sub
mov
inc
mov
movsl
cmp
ljmp
mov
jbe
add
mov
or
sbb
pop
adc
jle
decl
in
lods
adc
lcall
cmpsb
pop
push
add
fiadds
popf
notb
fnstenv
add
imul
ljmp
jl
jbe
inc
mov
mov
ud0
mov
leave
stos
xchg
mov
inc
mov
sbb
lcall
pop
ja
dec
insb
std
jmp
cmpb
xchg
xchg
addr16
jmp
scas
js
inc
xchg
push
pop
ja
arpl
test
mov
cmp
shrb
ljmp
loopne
clc
push
xchg
sahf
adc
xchg
call
cmp
cmp
hlt
xchg
xchg
mov
xchg
or
in
inc
pop
dec
ret
icebp
dec
int3
and
mov
mov
mov
mov
in
adc
mov
lock
fiadds
fnstsw
rorl
aas
addr16
imul
loop
aad
decb
ljmp
cwtd
imul
pop
add
lcall
and
mov
push
in
pusha
incl
and
call
lahf
mov
call
cmp
cmp
inc
mov
call
inc
movsl
mov
dec
fldcw
cld
aad
mov
jecxz
dec
or
mov
shrl
lcall
cmp
aam
stos
lods
xor
dec
ljmp
leave
daa
ret
jb
xlat
sbb
push
popa
stos
clc
ss
inc
sub
pop
xlat
enter
add
lods
popf
push
int3
popa
or
inc
mov
mov
popa
leave
popf
dec
scas
stc
js
adc
ljmp
xor
cmp
pushl
insl
lds
out
cmp
cmp
out
pop
outsb
jl
pushf
aad
leave
adc
lahf
and
shl
lcall
xor
loopne
lods
sarl
pop
je
adc
notl
push
fwait
sbb
push
lods
cli
cltd
adcl
fsubr
jle
jae
cmp
pop
dec
pop
push
fwait
mov
pop
test
stos
sbb
repnz
data16
call
mov
inc
popa
dec
cmp
jle
jno
mov
jl
mov
cmp
jb
add
dec
push
aad
jnp
jns
pop
loopne
sub
jmp
push
pop
cli
mov
and
dec
sbb
incl
leave
jno
cli
inc
test
xor
mov
cltd
or
mov
ljmp
jp
call
mov
fmulp
cwtl
in
mov
or
add
and
les
sub
rclb
imul
jecxz
and
lret
push
push
mov
inc
or
mov
lods
into
ret
decl
lea
outsl
in
in
jno
ret
jle
mov
add
mov
outsb
push
jb
sub
pushl
hlt
mov
sub
xchg
mov
xor
mov
inc
jl
xor
incl
adc
jnp
shl
push
push
in
jne
jo
loop
push
daa
jmp
xlat
mov
add
xor
jge
fldcw
jbe
mov
mov
das
mov
stos
stc
ljmp
mov
pop
add
hlt
sub
pusha
es
pushf
mov
mov
jo
inc
or
rorl
push
cmc
mov
outsl
adc
leave
xchg
inc
xchg
fidivrl
mov
mov
aas
and
jnp
push
cld
imul
push
mov
sub
repnz
sbb
cltd
dec
lcall
cwtl
adc
test
jmp
or
ror
mov
pop
mov
pushl
xor
mov
push
aas
and
ret
adc
lods
aaa
pop
sub
lret
decl
dec
mov
sti
and
shll
lahf
xchg
sub
fcmovu
aam
insb
mov
sbb
call
pop
mov
sub
pop
cmp
into
push
jle
insl
adc
mulb
iret
pop
sahf
in
sub
scas
xor
mov
call
and
test
daa
xchg
test
daa
adc
mov
cmp
add
ljmp
add
pop
or
aas
rorb
ljmp
and
push
adc
add
inc
out
dec
mov
mov
dec
inc
popa
push
stos
pushf
out
lret
jp
out
mov
incl
xor
dec
mov
cmp
mov
lods
xchg
and
imul
mov
je
das
pop
imul
nop
in
mov
std
add
jbe
xor
xchg
sti
pushl
loopne
xchg
fucom
adc
dec
inc
and
daa
out
push
pop
sarl
sub
in
mov
movsl
jmp
out
fcoml
and
add
stos
call
jp
lods
push
jecxz
incl
jbe
mov
cmp
xchg
out
xor
xchg
aam
stos
int3
dec
lds
jmp
lods
arpl
cmp
xchg
and
push
xchg
addl
lcall
les
pop
xor
test
inc
nop
jp
and
cltd
aad
cmp
ja
jb
pmuludq
rolb
call
sub
fadd
imul
fmuls
cmp
pushl
dec
sbbb
jmp
adc
jb
xchg
leave
aaa
dec
test
daa
xchg
and
mov
pushl
jo
in
fisubrl
and
loopne
jecxz
xchg
mov
and
pushl
xor
dec
icebp
sub
jg
jp
mov
push
mov
sbbl
incl
adc
rcrb
lret
xchg
ss
mov
or
aad
imul
pushl
mov
leave
mov
add
sub
clc
inc
and
cmp
cmc
rol
sbbl
ljmp
adc
inc
sarb
xchg
iret
jge
mov
dec
shrb
jmp
inc
test
ret
out
les
cli
push
xor
dec
and
sbb
jae
in
jl
decl
cmp
cli
xchg
mov
lret
subb
dec
fldcw
andps
decl
pop
call
mov
pop
pop
testl
push
push
cmc
sub
cmp
mov
jb
lcall
mov
add
fsubrs
es
arpl
and
pop
pop
xor
aaa
ficompl
lcall
dec
push
pop
xlat
sub
loopne
clc
pop
adc
mov
pop
or
push
call
addb
mov
int
test
imul
dec
lds
cmp
jge
scas
mul
xor
fdivrp
lcall
sahf
js
fwait
lods
dec
lds
rcll
add
mov
add
lods
rcr
push
mov
jmp
pop
push
js
pop
pop
dec
fldenv
mov
xchg
sub
add
cld
mov
pop
mov
add
jmp
jns
push
or
sahf
cmp
jle
cmpsl
mov
inc
and
pop
shlb
mov
outsb
push
aas
pusha
jmp
fmul
cmp
pop
shrl
out
fistpl
or
loope
lock
lcall
dec
or
or
push
ret
stos
gs
icebp
mov
add
mov
push
push
arpl
mov
push
inc
cmp
mov
pop
fbld
dec
pusha
test
shlb
ja
pop
mov
mov
loop
inc
lds
jecxz
push
sbb
bound
pushl
mov
sub
inc
mov
push
je
je
ss
adc
out
jg
hlt
mov
movsb
bnd
mov
push
lods
fcmovu
xchg
mov
xchg
out
adc
jmp
pushl
icebp
ds
aaa
mov
cmc
pop
mov
cmp
jo
hlt
push
cmpsl
test
decl
sub
sub
ror
jo
jge
push
mov
int
mov
pop
fistl
lcall
sub
scas
add
inc
lods
mov
and
repnz
cmpsb
addr16
mul
out
gs
and
fwait
shll
push
cmp
ja
xlat
mov
inc
push
xor
decl
mov
test
mov
aad
lret
or
enter
push
jmp
push
dec
loope
sub
pminub
xor
in
imul
lods
sub
mov
sub
add
ret
xor
out
stos
cmp
mov
mov
mov
and
pop
out
call
test
xor
stc
cmp
mov
sub
push
add
lods
mov
cltd
sbb
jmp
pop
add
mov
out
rep
sbb
mov
lods
xor
jnp
xor
xor
orl
add
lea
iret
mov
pop
roll
cmpsl
xor
inc
leave
test
dec
jl
pop
inc
push
or
enter
clc
stos
and
je
inc
jno
jp
arpl
and
incl
imul
rcrl
push
sti
jge
popf
cmp
sahf
notb
mov
lcall
je
cmp
sti
nop
cmp
xor
or
mov
dec
pop
test
mov
lcall
movb
imul
push
adc
add
loope
mov
pop
cmpsl
cmp
call
scas
cmp
ja
cwtl
out
das
mov
jmp
cmp
pusha
or
or
incl
push
and
push
mov
and
outsl
sub
imul
dec
incl
xlat
inc
mov
ret
mov
push
sti
iret
lods
enter
out
add
inc
lahf
inc
mov
inc
loop
dec
loopne
cmp
jmp
mov
dec
das
pop
ret
push
xor
jnp
xchg
jae
sub
push
decl
push
xchg
sbbl
clc
xchg
sti
inc
test
push
std
cmp
fsts
decl
movsb
dec
cmc
rcrb
mov
loopne
cmp
and
fmuls
xchg
jb
fs
cmpsl
popf
add
mov
xor
jns
hlt
dec
adc
subps
jmp
jae
add
or
outsb
inc
adc
ja
mov
stos
fwait
ud0
decl
pop
lea
pop
sub
pusha
inc
test
push
push
mov
inc
jns
xor
cmp
sti
xchg
jae
es
loope
outsl
adc
divb
movsb
sbb
sbb
pop
cwtl
sbb
pop
pop
or
cld
sar
popa
jl
in
jge
push
fisubs
mov
sub
jmp
fs
sub
lock
mov
outsl
xor
cmpsl
jl
cltd
bound
push
mov
ljmp
mov
dec
and
adc
je
int3
add
pop
dec
and
and
mov
loop
jmp
inc
ljmp
jle
xchg
mov
mov
pop
cld
lahf
faddl
mov
call
xchg
xchg
pop
mov
jle
ljmp
mov
ss
popf
xor
loopne
push
xchg
aad
cmpsb
inc
xor
mov
inc
adc
mov
scas
jl
adc
sbb
loopne
xchg
jmp
mov
std
dec
mov
setg
xor
scas
lcall
cmp
jmp
add
cli
data16
push
loopne
dec
push
call
jp
imul
add
ljmp
adc
dec
dec
pusha
mov
or
adc
dec
add
mov
and
clc
js
mov
scas
mov
cmp
imul
push
cs
pop
xchg
cli
or
loop
ljmp
mov
xor
lcall
mov
cs
mov
js
aas
sub
subl
jno
mov
jae
test
and
sti
cmp
cmp
sbb
das
push
xchg
aad
pushf
jmp
add
adcl
push
pop
dec
lcall
mov
je
mov
or
ljmp
icebp
xor
jge
lret
jne
outsl
xchg
jmp
or
sti
test
xor
iret
lea
test
movsl
jns
push
cmpsl
lock
ljmp
add
cmp
ja
pop
lea
jns
xor
stc
lock
lcall
mov
jae
aas
cmp
jecxz
jge
inc
pusha
xchg
arpl
or
cmp
xor
mov
or
cmpsb
adc
mov
imul
pop
sbb
or
and
out
jmp
int3
add
push
xchg
scas
xor
mov
adc
add
lcall
pop
jo
outsl
nop
ret
jmp
out
adc
cmp
xchg
not
in
and
and
adc
jae
and
lahf
pushl
and
sbb
iret
lret
fdiv
xchg
xor
out
push
mov
out
adc
repz
pop
xor
pushl
dec
subb
cmp
mov
ss
xchg
scas
inc
cmp
jge
mov
lcall
aaa
bound
dec
jp
sbb
test
mov
and
sub
out
xor
jno
and
incl
gs
call
repnz
mov
sahf
lret
movsl
int
inc
movsb
sbb
es
push
call
outsl
lcall
pop
adc
add
ljmp
jnp
mov
lea
imul
call
add
push
cld
sahf
push
mov
jns
dec
adc
loop
jno
and
cld
call
outsb
ljmp
mov
cli
aam
insb
push
imul
repnz
adc
mov
dec
fadds
rorl
pushf
divb
ret
jo
rcl
adc
fnstcw
pusha
add
mov
ljmp
aas
and
vpunpcklbw
loop
repz
fisubl
or
in
fdivr
cmp
push
or
incl
mov
in
shrb
jge
inc
dec
add
push
test
and
sbb
incl
add
adc
popf
inc
mov
jnp
cmc
xchg
enter
push
push
or
jg
pop
push
outsb
or
pushl
fwait
sti
cmpsb
cmp
test
lcall
insl
xlat
arpl
mov
jmp
mov
cld
lods
in
cmp
push
int3
or
repnz
xchg
divl
call
or
sti
pushf
iret
xchg
push
inc
jne
sbb
fsubrs
cmp
push
cwtl
pop
iret
mov
sbb
addr16
mov
hlt
sub
stos
idivb
incl
push
cmp
fsubrs
mov
adc
jge
lahf
outsb
ret
outsb
mov
testl
decl
mov
pop
dec
xchg
push
pop
sbb
mov
ret
je
insb
sbb
jp
cmp
jg
iret
xchg
push
add
sbb
pop
ljmp
push
dec
test
and
jns
cwtl
cld
cld
loope
imul
sbb
jecxz
lock
pop
jnp
or
add
decl
sub
nop
jmp
cmp
cltd
fiadds
das
pop
jnp
fs
and
jmp
insb
lods
mull
dec
push
inc
push
dec
sub
popa
mov
cmp
movsb
cwtl
sahf
leave
fstpt
xorl
scas
mov
pusha
mov
dec
dec
test
xorl
les
mov
xor
stos
or
or
leave
mov
dec
in
iret
dec
mov
inc
jmp
mov
out
cs
fdivrp
and
sub
ficoms
jp
aas
jle
xchg
out
push
xchg
stos
loope
jo
test
pushf
cmp
push
push
or
xchg
add
push
rorl
mov
incl
popf
sbb
pop
xor
xor
lahf
lret
sbb
sbb
mov
aaa
lcall
xor
xchg
ret
mov
jle
jmp
xchg
mov
cld
in
dec
jb
push
lods
test
out
incl
pop
call
mov
pushl
adc
or
outsb
and
ss
leave
cld
dec
test
xor
mov
jmp
xor
addr16
mov
pop
clc
ljmp
dec
inc
incl
and
jnp
or
xor
aas
cld
addr16
cld
fmull
lcall
mov
xchg
lods
fstl
rorb
sbb
rcrb
ljmp
enter
leave
sbb
es
add
rcrl
jmp
xchg
sbb
dec
sub
test
jmp
daa
push
out
push
mov
pop
dec
jo
fsubrl
inc
inc
nop
adc
pop
decl
and
mov
mov
xor
inc
outsl
pop
test
push
jno
mov
lock
lret
mov
pushl
call
popa
add
jmp
imul
xchg
jecxz
inc
fwait
bound
dec
dec
push
cli
mov
xchg
pop
cmpsb
hlt
int
fisttpl
mov
xor
or
mov
pop
imul
loopne
out
mov
mov
ret
xchg
push
xchg
daa
ds
cmc
jb
add
dec
mov
call
adc
adc
mov
mov
in
jns
push
and
out
jo
pushl
popa
dec
push
rcr
add
cmpsl
fistps
popf
sbbb
insb
iret
xor
jmp
xor
push
xchg
imul
das
cmc
out
fcmove
inc
mov
sub
dec
dec
xchg
mov
mov
jmp
data16
adc
ret
xor
cli
rcr
and
rolb
les
jmp
lahf
mov
out
adc
scas
popa
xchg
loop
cmc
sub
stc
adc
bound
shll
hlt
dec
sub
ds
dec
je
imul
in
mov
iret
and
bound
xchg
decl
loope
jmp
aas
lods
daa
mov
jnp
add
mov
ret
dec
xor
add
cwtl
int3
inc
arpl
jle
sbb
aaa
ret
std
inc
cmpb
aam
pushf
xchg
movsl
decl
insl
jmp
or
add
shrl
loop
movsb
sbb
adc
xor
out
test
decl
adc
stos
pop
js
pop
jp
fcomps
cmpsl
jecxz
stos
mov
pop
dec
pushl
dec
pop
mov
dec
cmp
insb
out
xrelease
and
dec
xchg
fdivrp
dec
les
je
cmp
movsl
icebp
sahf
outsl
mov
ds
mov
lret
dec
movsb
pop
push
cltd
xlat
lock
call
mov
shrl
mov
mov
and
cmp
call
jmp
int
cmp
stos
js
test
pop
push
sbb
push
andb
inc
inc
and
aad
jbe
mov
pop
mov
xchg
sbb
dec
ror
std
mov
xchg
sub
stos
mov
add
int3
jmp
scas
adc
jnp
mov
vminsd
jmp
decl
test
loop
xchg
insl
adc
cs
into
das
add
test
ljmp
leave
stos
jae
arpl
cmp
in
or
mov
mov
and
pushl
and
out
mov
in
xor
out
xchg
fstl
aad
pushl
int3
pop
cltd
int3
lds
add
dec
out
sbb
pop
mov
pop
aas
xchg
jbe
xor
lcall
decl
roll
pop
mov
mov
xchg
std
or
decl
adc
iret
inc
fucomp
ds
lods
dec
ret
add
inc
pop
mov
dec
lds
outsl
jmp
ret
or
push
cmp
and
loope
xchg
bound
out
pushl
mov
cmpsb
dec
push
pop
mov
icebp
xchg
out
and
in
xchg
sub
pop
or
push
fdivr
movsl
test
sarb
rolb
mov
fists
bound
jmp
pop
fistpl
fiaddl
iret
add
inc
ds
mov
and
rorb
mov
popf
arpl
jmp
int
bound
sbb
or
lcall
daa
push
ss
and
push
out
imul
pushl
in
mov
xchg
adc
xchg
and
add
jo
or
lahf
sub
cli
ret
hlt
sbb
idivl
call
lods
cwtl
shlb
imul
sub
sub
cmpsb
lods
lret
cmpsl
rcll
inc
lcall
lds
adc
adc
cmc
lahf
fstl
aaa
mov
out
jge
add
ljmp
cmc
xchg
mov
adc
mov
gs
jmp
loop
loope
mov
dec
pop
stc
jp
repz
cmp
insl
mov
fdivr
ljmp
mov
shl
sbb
clc
ret
mov
lods
loopne
into
mov
inc
sbb
xchg
fdivr
pushl
aam
iret
mov
fnsave
mov
or
outsb
push
sahf
add
add
pushl
sbb
sarb
dec
dec
dec
xchg
test
stos
mov
cltd
xchg
sbb
push
sbb
sbb
mov
out
mov
mov
jnp
push
shr
xchg
inc
incl
cmpsb
mov
not
push
xchg
add
inc
pop
mov
mov
or
mov
lcall
ret
xchg
repnz
xor
int
inc
jmp
pop
push
shrb
jns
push
add
out
mov
lcall
jl
inc
add
bound
fldenv
lret
test
xchg
push
jl
jb
mov
addl
decl
sub
mov
stos
iret
mov
insb
mov
cltd
pop
sbb
into
mov
iret
or
incl
mov
inc
pop
inc
mov
adc
ss
mov
push
pushl
sbb
ljmp
fisubrs
or
jbe
dec
in
jge
test
pop
loopne
lods
sti
pop
sub
lcall
sbbb
push
int
mov
or
jmp
adc
iret
push
inc
addl
jecxz
dec
xchg
addr16
popf
mov
mov
xchg
or
je
dec
pop
aas
push
xchg
jecxz
mov
add
mov
stos
loope
add
add
incl
and
sbb
add
addr16
or
test
inc
pop
cmp
jmp
cmpsl
xchg
mul
sbb
roll
and
sub
mov
lods
test
call
orb
adc
icebp
incl
rcrl
cli
fidivrl
out
pop
mov
call
push
addr16
and
xchg
lcall
jg
notb
fidivrs
jmp
popa
cmp
ret
fnstsw
pop
sub
push
sbb
addr16
mov
iret
iret
ljmp
xor
mov
dec
xchg
push
push
and
or
pop
xchg
les
cld
xchg
in
mov
mov
fwait
push
shll
imul
bound
movsl
pop
shr
ljmp
pop
daa
push
add
jle
add
xlat
mov
roll
movsl
cld
pop
cmp
daa
adc
jno
ljmp
mov
test
mov
mov
inc
push
fwait
enter
push
mov
mov
cmpb
push
mov
je
testb
scas
out
data16
lea
je
enter
push
xchg
jmp
pop
sbb
inc
pop
sub
fwait
adc
cltd
out
xor
jg
in
xor
jmp
or
call
out
dec
ficompl
xor
pop
jns
and
test
mov
cmp
mov
and
insl
add
ret
int3
jb
pop
aam
cmc
aaa
sbb
cli
call
call
push
out
rcll
xchg
iret
mov
xchg
dec
fistpl
push
test
jo
push
inc
push
jle
mov
sbb
xor
jnp
cld
fidivl
incl
add
cmp
lea
pusha
jns
rorb
mov
pop
dec
mov
push
lcall
fists
shll
fwait
retw
outsb
mov
ja
adc
repz
xchg
jmp
dec
xchg
aam
fstl
jp
mov
sahf
shll
or
incl
push
mov
push
pop
icebp
xor
sub
jge
int
pop
outsb
jp
lret
pop
jb
sub
sbb
dec
ret
stc
mov
je
dec
xchg
stc
rcl
cmp
sub
and
pop
roll
xor
lcall
xor
jae
ror
fldl
stos
fs
cmp
lods
inc
ja
fcompl
scas
push
push
or
cmp
pushf
pop
insl
mov
mov
in
mov
outsb
daa
aas
pop
xor
cmc
mov
sar
mov
fisttpl
shlb
sub
mov
pop
dec
adc
mov
data16
incl
inc
adc
sbb
aad
lods
leave
shlb
lcall
jbe
call
adc
xchg
inc
je
add
rcrb
inc
mov
ljmp
xor
mov
lcall
aam
cmp
sub
cmp
cmpxchg
cmc
in
lods
lret
mov
ljmp
es
jae
aaa
push
rorb
cmp
push
imul
mov
dec
dec
mov
sbb
xlat
outsb
idiv
incl
jo
sub
pop
gs
xchg
push
inc
sbb
cltd
push
idivl
rolb
decl
push
cmpsl
inc
jbe
test
sahf
andl
pop
cmpsb
cli
push
jmp
sbb
lcall
pop
mov
stos
vpaddusb
or
sti
or
push
adcb
test
and
orl
int
mov
mov
push
lcall
rolb
pusha
iret
addr16
sub
push
pop
xchg
out
inc
les
or
decl
out
cmp
inc
lret
cmp
mov
cmp
add
jg
xchg
iret
mov
inc
pop
xchg
gs
into
pusha
int
inc
adc
push
mov
xor
aaa
or
push
lcall
int3
sbb
mov
gs
mov
pushf
xor
loope
mov
pushl
pop
sbb
nop
mov
je
movsl
or
idivb
repnz
xchg
ret
incl
push
fnsave
inc
ljmp
rcrl
push
rcrb
mov
loope
cld
cld
fstpl
lcall
out
shlb
popa
cmp
outsb
mov
nop
call
mov
stc
mov
mov
adc
cli
in
inc
popa
pop
arpl
jae
adc
lcall
add
ds
subb
cmp
push
rclb
cltd
sbb
lcall
push
mov
jne
rorl
inc
cltd
cmc
xor
daa
scas
andl
xlat
xor
mov
call
push
fdivrs
dec
fldt
in
adc
stos
lcall
add
push
subb
cmpsb
nopl
jb
push
and
sbb
jmp
sarb
ljmp
repnz
dec
push
in
test
mov
cld
or
in
adc
incl
xor
mov
pushf
inc
rolb
cmp
or
into
jno
jmp
pusha
in
in
ss
mov
icebp
push
and
mov
test
jne
pop
dec
xchg
jmp
push
cld
jmp
xchg
pop
filds
fdiv
or
scas
test
pop
mov
lcall
mov
ljmp
push
xchg
cltd
in
dec
fildl
adc
mov
jmp
and
xchg
ljmp
cltd
mov
sub
fbld
inc
ljmp
mov
out
cmp
mov
sar
inc
mov
jae
in
xchg
mov
mov
sti
xchg
fisttpll
mov
mov
jmp
daa
mov
push
outsb
mov
xor
aas
push
add
mov
out
adc
fcoml
cmp
popl
jns
fdivl
mov
lret
icebp
lea
lret
mov
mov
push
ss
popf
mov
mov
cmp
xchg
xchg
xlat
dec
adc
pop
daa
dec
push
stc
and
fists
mov
mov
pop
cmpsl
sub
or
mov
and
mov
mov
clc
test
mov
outsl
les
fs
xlat
xchg
jp
lcall
stos
push
pop
jae
out
jmp
shrl
and
lods
push
push
mov
out
lret
inc
pop
inc
shll
roll
add
xchg
pushl
out
add
repz
filds
sub
pop
xchg
push
out
pusha
add
call
movsb
adc
xchg
loope
sbb
and
cmpsb
cmp
gs
shlb
in
icebp
xchg
mov
dec
inc
mov
fidivs
aam
ljmp
add
and
add
decl
in
or
push
sbb
pop
add
mov
push
jb
pushl
cmp
jge
cld
and
divb
dec
scas
out
aaa
arpl
mov
ljmp
and
cmp
sbb
jo
xchg
nop
or
es
mov
cmp
popa
icebp
xchg
jmp
or
fs
dec
mov
sarl
xchg
xchg
sbb
xchg
and
stc
and
cmp
lcall
xor
cmc
je
xchg
and
mov
shll
sbb
inc
and
cmp
push
xchg
scas
mov
fdivp
push
rcr
jns
adc
dec
scas
lretw
sar
jnp
and
push
mov
int3
ljmp
outsl
jle
pop
icebp
fldl
das
sub
decl
stos
push
fcomp
mov
jo
mov
pop
mov
js
nop
sbb
test
hlt
xor
lcall
dec
insb
ret
notl
loopne
jae
jecxz
fisubl
loope
cmp
test
cmp
dec
mov
mov
mov
insb
aas
lret
pop
bound
mov
pop
in
cmp
leave
sbb
lods
mov
mov
add
mov
dec
cld
dec
jg
test
cmp
xor
jo
cmp
arpl
or
cmpsb
mov
or
add
je
lock
call
aad
cltd
loop
mov
dec
mov
pop
clc
cmp
pop
hlt
xor
cs
xchg
fwait
pop
int3
mov
cli
pop
push
adc
xchg
xchg
sbb
cmp
mov
lds
lods
mul
gs
mov
incl
outsl
xchg
jmp
loope
xchg
stos
xchg
add
jp
push
in
xchg
push
loopne
fdivs
cli
test
lcall
enter
xor
fdivrl
fidivl
in
push
mov
mov
mov
push
dec
test
je
or
adc
xchg
mov
in
jo
mov
repnz
jmp
rclb
out
add
push
cs
mov
and
aas
std
aaa
decl
mov
xor
lods
push
outsl
aas
and
dec
sub
cwtl
test
jmp
stc
cld
lea
add
push
add
adc
lods
xchg
xchg
mov
ljmp
push
into
push
inc
or
and
sbbw
pop
cmpsl
mov
pop
xchg
shll
cmp
sub
loope
mov
std
loope
lcall
jmp
add
cld
fcmovb
sub
aam
insb
orb
popf
lcall
push
out
pop
mov
lods
push
cmp
pop
pushf
pop
xor
movaps
cmp
aas
fsubl
mov
lcall
adc
testl
pop
shlb
std
push
dec
rclb
test
in
ljmp
fcomps
rcrb
push
push
insb
arpl
mov
insb
clc
fs
sbb
sbb
xrelease
adc
jg
ljmp
out
push
sbb
jg
add
mov
rorl
int
jmp
jp
xchg
in
loope
test
inc
cli
add
or
je
inc
cld
in
call
das
sub
mov
xchg
jp
das
push
pop
cltd
les
mov
call
pop
dec
das
pop
fbld
mov
mov
shll
daa
loop
dec
mov
sub
testb
lcall
adc
mov
out
fildl
out
shrl
xchg
xor
call
rorb
mov
cmp
xchg
pop
xchg
aas
inc
mov
repnz
add
dec
sbb
mov
dec
jmp
mov
daa
sbb
jl
mov
sahf
mov
lods
shl
push
cwtl
inc
cmc
or
call
cmp
fdivrs
cmpb
sbb
shlb
insb
fadds
test
and
call
or
xchg
dec
xchg
inc
xchg
lods
and
pusha
in
aaa
lret
dec
into
ficoml
cmpl
pop
xchg
lcall
in
inc
cld
jns
sub
out
jge
cmp
dec
cli
adc
mov
jae
pop
sub
jge
xor
lds
xchg
fadds
es
lret
pushf
ret
sub
lods
jne
and
call
nop
dec
and
aam
mov
adc
imul
sub
addr16
decl
mov
add
cwtl
popa
push
xlat
cmpsb
sbb
dec
inc
rorl
inc
mov
into
test
jmp
call
outsl
jb
out
adc
adc
loop
mov
cld
xchg
cs
push
inc
test
clc
stc
pop
addr16
popa
mov
mov
jb
daa
lds
push
dec
clc
cli
cmpsl
icebp
aad
push
or
inc
les
push
test
inc
shlb
das
cld
pop
or
popa
jns
jge
pushl
cmp
lods
pop
mov
cltd
retw
pop
aam
inc
lahf
pop
stos
je
mov
mov
dec
pop
pop
cmp
jmp
cmp
and
out
push
or
sbb
aam
test
cmp
cmp
out
jl
ja
lcall
xchg
data16
fucom
orl
cli
lock
lea
xorb
cmp
fdivrp
lcall
sbb
xchg
add
lcall
jle
cmp
cmp
call
in
mov
pushf
ds
sbb
and
push
jecxz
fistl
insb
sub
ja
cmpsl
lcall
cmc
jmp
hlt
scas
or
xor
aam
xchg
pop
xor
lock
dec
lock
jmp
lcall
js
sub
icebp
imul
or
sbb
testl
lods
lret
xlat
loopne
nop
call
pusha
lcall
jb
pop
jns
aad
dec
sub
xchg
lahf
popa
xchg
fistpll
jl
jmp
adc
add
fbstp
lahf
adc
jns
xlat
cmp
sahf
incl
mov
cmp
jbe
add
xchg
or
xchg
std
mov
test
lcall
push
ja
lods
mov
pop
pop
test
push
adc
fmuls
mov
pushl
lret
push
fisttpl
fildl
and
and
aad
push
or
and
push
inc
lock
lods
scas
incl
jge
jbe
mov
inc
jno
iret
shl
and
mov
hlt
cmpsb
aam
pop
sti
fcmove
and
push
push
mov
jp
mov
mov
sub
jo
push
out
dec
test
movsb
xchg
sbb
movsb
push
push
push
call
leave
push
jg
inc
dec
and
push
pop
and
sti
sbb
xchg
icebp
jge
adc
pop
pushf
jmp
fwait
pop
mov
cmp
ljmp
fistpl
sbb
iret
xor
test
int3
and
adc
incl
push
aam
jle
hlt
rcll
push
xchg
fdivs
mov
pushf
adc
aaa
cmpsl
push
clc
ret
pop
frstor
es
adc
repnz
loope
fsincos
addb
inc
cmp
test
mov
cmp
test
add
mov
push
stos
scas
and
imul
xor
xor
rcrb
or
orb
imul
push
jns
pop
sbb
add
les
fld
sbb
pop
sbb
or
xor
in
mov
data16
cmp
jb
cmc
cmp
sub
out
js
nop
add
fstpl
enter
dec
push
push
adc
loopne
push
lods
and
idivl
ret
xchg
lea
cmpsl
dec
push
jb
fistps
push
stos
andl
incl
dec
cmp
iret
clc
dec
inc
mov
or
dec
gs
pop
mov
jl
dec
pop
and
sub
dec
iret
cmpl
out
insl
in
jns
or
iret
xchg
popa
fcmove
mov
push
dec
push
sub
incl
orl
stos
ss
fxch
ret
push
mov
sar
ljmp
test
or
mov
sub
and
lea
pop
test
xchg
and
ljmp
push
ds
pushf
cmp
imul
leave
mov
jbe
xlat
or
push
dec
pop
push
insl
push
cmp
dec
xor
mov
pusha
xchg
add
sbb
lods
outsb
out
arpl
or
add
std
lcall
push
fisttpl
and
and
xor
in
into
fwait
stos
fimuls
repz
stos
mov
lcall
scas
test
movsl
inc
mov
inc
ficoml
out
shr
decl
jmp
cltd
aaa
pop
mov
scas
out
adc
lods
adc
lock
jnp
aas
or
decl
jb
das
sarl
inc
push
mov
mov
mov
adc
push
icebp
shrl
scas
push
pop
mov
inc
popa
scas
insl
test
ret
aad
adc
pop
xor
push
cmp
jmp
jbe
xor
xor
decl
push
adc
add
pop
fucomp
cmp
dec
out
stc
dec
in
scas
xchg
add
repnz
pop
gs
js
iret
incl
cmp
jbe
lahf
push
call
fists
stc
xchg
je
xor
in
cs
dec
jbe
and
and
inc
bound
sbb
in
imul
xor
jl
pushl
cwtl
inc
in
idivb
andb
inc
scas
and
sti
test
add
mov
call
mov
and
xlat
out
das
and
cmp
clc
imul
aad
mulb
decl
and
sub
ret
pop
push
es
add
inc
insl
mov
or
adc
mov
call
xchg
repz
int
cltd
inc
js
dec
inc
inc
idivb
fwait
dec
sub
xor
push
call
pop
xchg
and
imul
in
test
insl
dec
push
scas
push
cmp
int3
pushl
and
addb
inc
or
cmp
stos
fwait
xor
into
adc
int
jmp
inc
cmpsb
cmp
int
cmp
outsb
mov
dec
adc
sbb
xor
frstor
loopne
pop
out
cs
cld
fistpll
pop
jb
ret
rorb
and
push
cmp
jl
mov
test
lcall
xor
xchg
mov
fs
dec
mov
aas
and
test
jne
ss
dec
pop
jecxz
cli
cltd
inc
sbbb
divb
xorl
incl
mov
pop
sub
pandn
mov
cltd
push
ds
fbstp
jb
xor
cmp
sbb
ja
push
mov
cmp
mov
add
inc
jle
push
add
ss
iret
pop
clc
cld
bound
leave
mov
fldenv
in
or
incl
daa
shll
or
test
pop
xor
ss
loop
mov
dec
stc
adc
push
sbb
adc
mov
andb
sub
jg
xchg
mov
xchg
sub
sbb
movsl
out
or
ds
sbb
adc
fdivr
ljmp
xchg
ja
xor
or
xchg
cmpsb
jbe
inc
mov
cmpsb
iret
bound
stc
decl
ret
xchg
leave
aad
mov
push
call
mov
xlat
sub
incl
push
inc
cltd
test
dec
sti
sbb
dec
test
inc
xor
call
loope
jne
ret
push
pop
pop
mov
sbb
cmp
push
aam
and
test
mov
xor
insb
popa
repnz
inc
das
and
decl
popf
fnsave
imul
pop
shl
xchg
test
mov
or
inc
xchg
imul
pop
cmpsl
bound
in
xor
mov
adc
inc
inc
ja
lcall
aad
jae
pop
sbb
mov
xchg
cmp
fcompl
loop
shr
dec
or
mov
mov
ljmp
fdivl
hlt
jnp
fdivl
mov
fildl
sub
adc
lcall
push
and
mov
jg
ret
jl
data16
pop
lods
sub
add
mov
cmp
sub
pop
pop
iret
xchg
jns
sti
push
jle
int
jb
jp
dec
fwait
mov
fldenv
aas
mov
jmp
insb
dec
sti
sub
insl
popf
movsl
or
sub
mov
dec
xchg
out
fildl
ljmp
mov
fwait
rorl
mov
mov
test
mov
pop
test
call
sbb
push
mov
nop
movsb
mov
jns
push
std
add
negl
dec
jne
fdivrp
jle
jne
sub
cmp
ja
fidivs
sbb
dec
int
mov
lcall
cli
out
jnp
lahf
and
and
xchg
dec
mov
in
cmc
lods
jne
inc
outsb
aas
dec
dec
mov
insl
cmp
jb
xchg
mov
jb
adc
cmp
dec
add
decl
sahf
in
lahf
pop
jg
xor
adc
jmp
xor
int3
bnd
imul
decl
notb
push
adc
mov
js
jb
adc
nop
rcll
cli
insb
pushl
sbb
fnstenv
lock
mov
xor
jno
out
test
aaa
aam
xchg
fsubl
lcall
fwait
cmc
in
ret
sub
xor
movsb
jp
arpl
scas
pop
cltd
in
cmp
cmp
lcall
cmc
and
fdivs
imul
add
push
mov
imul
sbbl
push
sti
outsb
dec
in
sbb
out
add
ret
std
push
lret
lods
adc
lods
mov
orl
lcall
ret
or
mov
mov
daa
dec
and
inc
insb
mov
out
xchg
push
mov
ljmp
lods
jo
cmpl
cmp
and
fs
lahf
sub
data16
lahf
mov
sbb
adc
lcall
mov
notb
pop
adc
cmpb
call
mov
pusha
xor
inc
and
or
lds
cmp
ds
andb
mov
sbb
fiadds
add
mov
fisubrs
pop
jg
ljmp
xchg
cmp
je
into
insl
outsb
test
adc
hlt
fldenv
and
rorl
sub
mov
push
mov
cmc
sbb
xor
lcall
fstl
jle
push
pop
xor
pop
adc
or
cwtl
sub
outsl
stos
mov
aad
popa
mov
decl
jl
nop
sbb
push
push
and
fildl
push
mov
sbb
out
lahf
dec
out
add
test
pushl
in
xchg
sbb
jl
cwtl
and
mov
rcrb
lds
and
aas
mov
sahf
test
outsb
cmp
aas
outsl
mov
dec
xorl
out
incl
mov
and
iret
mov
stos
xchg
insl
cmp
push
ret
xor
pushl
int
xor
sahf
fstpl
adc
lods
ret
popf
add
icebp
mov
das
in
pop
jmp
mov
ret
cld
and
int
lret
xchg
dec
cmp
out
mov
es
inc
js
mov
sub
jo
repnz
sbb
sbb
aad
stc
xchg
or
std
lea
data16
std
incl
xchg
adc
push
iret
pusha
mov
mov
call
aas
mov
adc
aas
lret
insl
and
add
ljmp
xor
pop
sbb
pop
jle
shrb
add
mov
pop
pushl
and
push
fistpl
nop
jecxz
xchg
sbb
mov
dec
mov
into
or
decl
divb
cmp
ds
mov
mov
sub
pusha
incl
sub
jl
stc
testb
jnp
orb
andl
jg
xor
pushl
jae
imulb
dec
rorb
clc
or
jg
mov
sub
xor
dec
lcall
sub
aam
jnp
stc
addr16
mov
ja
fs
pop
cmp
jb
pop
scas
jno
iret
or
xlat
xlat
push
out
call
insb
xchg
ret
scas
cmp
xor
inc
add
or
shlb
mov
xor
aas
add
stos
mov
loope
jecxz
xor
hlt
ljmp
int3
push
jno
shr
sahf
sub
jle
and
sar
push
dec
dec
je
fs
sarl
jnp
or
and
pop
popf
sub
out
cmp
jecxz
jae
push
into
sbb
dec
or
sub
jne
loopne
pop
pop
jmp
xchg
inc
ljmp
cmp
enter
xchg
outsl
pop
inc
fidivrl
sahf
fs
scas
add
popf
inc
add
cmc
mov
xor
fimuls
jg
aas
add
sub
xor
mov
ljmp
push
xor
lods
xlat
outsb
xchg
clc
lcall
dec
mov
mov
xchg
cld
xchg
out
call
and
cltd
les
in
fucomp
mov
js
repz
push
ret
and
jmp
lret
xchg
test
add
and
add
sub
xor
jmp
insb
mov
cmp
shll
add
mov
lock
cmc
jle
sub
pushl
push
sub
sahf
jae
xor
scas
jecxz
test
les
cwtl
add
lcall
sub
testb
xlat
inc
xchg
shrb
sub
push
mov
cmpsl
scas
push
daa
subl
mov
jnp
push
xchg
call
hlt
xor
ja
jno
inc
clc
iret
enter
cli
es
ss
jmp
jb
jns
orb
aam
stos
mov
sarb
xor
xor
pop
or
std
jge
fists
sbb
loope
xchg
cmp
pop
incb
icebp
mov
mov
push
push
push
push
jp
out
ljmp
jmp
rol
ja
xchg
adc
test
enter
add
fdivp
or
cmp
notb
loopne
les
jmp
repz
ja
out
test
push
shrl
adc
call
jo
and
scas
pop
stos
shl
scas
mov
loopne
push
popf
xchg
mov
decl
aam
add
pop
pop
popa
out
aaa
push
call
add
xchg
jg
cld
fistl
out
xor
push
jns
adc
scas
pop
pop
sbb
cltd
xchg
adc
ljmp
ret
jo
stos
into
loop
hlt
adc
pop
jecxz
cmpsl
ret
filds
mov
xor
nop
fscale
call
add
ret
out
dec
sub
scas
mov
stos
aaa
cs
sti
add
jge
js
inc
scas
sbb
decl
or
xor
loop
jp
cltd
push
imul
in
sub
fwait
ror
test
pushl
mov
sub
out
add
aaa
mov
pusha
arpl
jp
ss
movsb
pop
cmpsb
es
decl
jae
cs
mov
push
sub
in
mov
xchg
in
push
insl
pop
jns
jle
jns
cmc
xchg
cmc
std
mov
adc
pusha
adc
mov
outsl
lock
cwtl
pushf
jge
ljmp
mov
rcll
push
mov
lea
adc
cmpsb
mov
dec
cld
mov
lcall
lods
jo
test
dec
das
lret
adc
or
push
sub
push
pushl
scas
fists
inc
or
popf
pop
repnz
daa
scas
les
popf
js
inc
movsl
mov
ljmp
xchg
std
pop
xor
scas
lcall
mov
lock
xor
xchg
jnp
incl
xor
cmpb
fwait
daa
fwait
shrb
test
movsb
fbld
fidivrs
adc
pusha
mov
dec
adc
jo
xchg
pop
repz
xor
lcall
outsb
fsts
xor
js
ja
mov
inc
xor
push
ret
shl
pushl
push
or
xchg
out
pop
xchg
fwait
enter
insb
aam
sub
pop
idiv
pushl
dec
or
xor
xor
call
pop
mov
jae
sbb
and
sbb
ljmp
cld
sub
push
cmp
or
adc
out
cwtl
sub
xlat
xchg
mov
ljmp
movsb
loope
out
push
ss
sar
xor
scas
mov
dec
jmp
repz
mov
inc
cmp
mov
call
sub
addb
pusha
push
fiaddl
mov
and
arpl
dec
test
jne
incl
mov
jno
cmc
sub
popf
cmpsl
adc
pop
jns
xchg
mov
popa
jecxz
jns
xchg
jl
jmp
repnz
pop
mov
call
ret
in
and
push
lcall
daa
and
mov
fisttpl
enter
std
mov
daa
dec
push
push
std
out
jge
rorl
bnd
sti
mov
xchg
dec
pop
mov
mov
decl
pop
shrl
mov
xchg
cli
xor
jnp
cwtl
lea
decl
imul
cmp
test
or
jne
leave
dec
dec
push
xor
adc
rorb
mov
or
push
and
addl
push
jbe
jo
decl
cmp
jno
dec
stos
les
aaa
in
mov
orb
popa
mov
incl
stos
test
sbb
mov
dec
cwtl
and
pop
xorb
incl
adc
inc
mov
insb
das
cli
xor
fisttpll
dec
add
or
in
mov
clc
mov
mov
and
or
mov
decl
fwait
pop
sar
std
aas
in
mov
aas
movsl
rcll
test
push
xchg
mov
incl
stos
sub
mov
cmpsb
stc
mov
mov
add
ds
mov
mov
decl
jno
sub
sbb
int
cli
setno
adc
mov
lea
cmpsb
jmp
jge
enter
lods
or
sub
and
cmpsb
aas
pop
sbb
or
jge
adc
movsb
xor
lds
lea
imul
jb
insl
and
mov
push
cmp
jmp
xchg
mov
add
jle
bound
fsub
and
cmpb
das
xchg
cmc
mov
cmp
xor
pushf
push
push
mov
mov
test
sbbb
das
into
xchg
hlt
lea
inc
pop
jp
adc
or
out
dec
jge
push
cltd
ss
mov
in
idivl
jmp
mov
pop
nop
cli
inc
sub
xchg
data16
adc
js
dec
inc
or
std
mov
pushl
jmp
cmp
jge
pop
stos
xchg
mov
mov
test
jmp
or
in
pop
dec
pop
cs
aas
add
into
int
ret
push
add
gs
sub
inc
sbb
lock
fmuls
mov
fcompl
int
xor
mov
sahf
jno
pop
xchg
dec
stos
cmp
incl
data16
push
nop
sbb
or
mov
fisttpll
inc
fstpl
add
mov
movsb
in
mov
jmp
out
fisttps
push
and
mov
sti
mov
ds
mov
fdivr
decl
fucom
fdivr
ficoms
ret
push
mov
les
cwtl
scas
add
pushl
pop
lret
out
or
push
out
idivl
std
mov
mov
outsl
loope
mov
cltd
add
lcall
repnz
mov
inc
loopne
ficoms
lret
iret
or
sbb
dec
xor
sbbb
xor
pop
aad
dec
fwait
je
int3
mov
cmp
lods
movsb
test
pushl
jl
add
mov
shlb
lcall
ja
outsl
ljmp
test
jmp
mov
pop
pop
xchg
or
shl
scas
pop
loop
out
and
lret
arpl
decl
push
fsts
imull
out
adc
setp
xchg
repnz
ljmp
lret
dec
int
pushf
cmp
ret
xor
pop
test
add
jmp
cmc
pop
sbbb
mov
mov
xor
adc
clc
gs
stos
adc
push
adc
lret
pop
jg
jg
dec
dec
aaa
in
xlat
outsb
inc
inc
imulb
aad
jmp
ds
bound
out
in
mov
mov
xchg
repz
dec
stos
mull
push
repz
jne
gs
sarl
jb
inc
jne
rcll
inc
cmpsb
sbb
dec
ljmp
repz
jae
lret
inc
and
divb
das
push
imul
mov
sbb
jmp
and
sub
inc
daa
insl
and
push
shll
add
mov
mov
negl
push
adc
call
test
mov
lea
outsb
lret
mov
loop
iret
bnd
xor
and
sub
insl
sub
insb
scas
rcll
ljmp
push
jg
pop
and
incl
or
sub
cmp
dec
cmpsl
insl
test
popf
xor
out
mov
out
loop
decl
cmp
xor
rorl
bound
std
insl
shl
test
mov
mov
mov
cmp
mov
mov
stos
ficompl
mov
or
push
mov
dec
mov
loopne
iret
pop
incl
mov
icebp
negl
insl
mov
call
xor
loopne
dec
movsl
sub
mov
in
fdivl
jle
leave
sub
popf
cs
outsl
sti
ljmp
movsb
popa
lret
lods
fisubrl
out
cmp
pop
push
leave
lret
lods
mov
mov
and
subb
pop
mov
scas
popa
fidivrs
loopne
push
into
xchg
call
in
loopne
test
adc
sbb
xchg
cmovbe
xor
adc
fisubl
mov
adc
filds
mov
subl
push
imul
jb
rcll
iret
cmc
incl
aas
ljmp
loopne
cwtl
sub
int
repnz
pop
mov
das
ficomps
je
mov
call
and
inc
cmc
jg
dec
or
pop
mov
movl
je
sar
decl
adc
cmp
aaa
lea
push
es
dec
mov
pop
lds
imul
decl
adc
or
mov
pop
add
add
mov
fsubrl
inc
popf
cld
mov
jmp
push
jg
stc
xor
fdivr
out
mov
sub
push
push
jge
lcall
cmp
imul
dec
sub
dec
cltd
or
es
xlat
mov
test
push
mov
xor
push
mov
xor
xor
ss
decl
fldcw
cmp
addr16
fdivs
mov
pushf
mov
lcall
sbb
xchg
cwtl
rorb
or
adc
test
inc
repnz
sbb
sbb
push
fnsave
hlt
inc
data16
cli
adc
cmp
jge
mov
dec
dec
mov
mov
icebp
scas
mov
sub
mov
lcall
jp
ret
lcall
test
adc
lock
cs
push
lret
jle
xchg
jp
lahf
lret
adc
mov
andb
or
fcompl
inc
out
push
std
and
cwtl
es
lods
jp
push
jl
sahf
push
popa
pop
imul
jmp
in
sub
mov
cmpsl
stc
mov
insl
test
xor
or
incl
sar
cmc
shll
call
addr16
notl
push
decl
incb
lcall
cmp
mov
pop
mov
sbbl
dec
jbe
mov
ja
sahf
cmp
pop
push
mov
jno
mov
pop
ret
lret
inc
hlt
decl
dec
push
clc
dec
inc
or
aas
xor
pop
cwtl
add
cmp
std
mov
in
pop
or
in
leave
jmp
jmp
fdivs
dec
fsubrl
cmpsl
and
lret
xchg
add
ret
push
incl
int
rorl
xor
test
add
iret
adc
aad
push
je
incl
call
mov
js
out
xlat
mov
xor
jge
jge
and
popa
and
dec
lcall
ja
or
sub
cmp
mov
out
andb
arpl
ljmp
stos
adc
das
enter
xor
dec
test
xchg
and
divl
mov
decl
xor
and
and
pushf
push
xchg
mov
mov
sub
movsb
jnp
addr16
lcall
testb
xor
pop
fidivrs
adc
push
xchg
inc
pop
arpl
adc
clc
push
jns
sub
pop
enter
push
pop
add
sbb
negb
jns
fistps
call
leave
push
out
mov
sub
jecxz
cmp
xchg
fidivs
mov
call
repz
lds
movswl
xor
xchg
cmpsl
in
int3
test
and
lea
call
pushl
mov
add
mov
pop
lcall
insl
les
push
or
sbb
mov
lret
repz
hlt
pushf
jecxz
rorb
ljmp
enter
mov
arpl
mov
subb
xchg
lcall
dec
push
jge
mov
inc
shlb
mov
mov
adc
in
or
sub
enter
out
mov
and
pop
jg
dec
in
fs
fs
sti
add
lock
repz
xor
fcoms
lret
push
ret
adc
mov
inc
pop
push
iret
push
push
sbb
mov
push
cmp
stc
les
push
lret
adc
mov
out
stc
mov
ret
jge
rorb
pushl
insl
or
jne
in
mov
mov
int3
mov
xor
xchg
mov
push
movsb
mov
ljmp
cmc
push
adc
cld
mov
clc
add
mov
jge
call
add
adc
adc
mov
xor
mov
incl
adc
out
loope
cmc
std
push
or
dec
sub
cmp
in
or
out
addr16
pop
adc
push
pop
stos
frndint
movsb
aas
add
aas
sti
mov
int3
cmp
xchg
and
jmp
sbb
lods
sbb
jg
stc
cmp
enter
int
jae
cmp
incl
into
shlb
aaa
aaa
mov
inc
fwait
and
push
push
lcall
sbb
pushl
jmp
push
mov
mov
mov
lods
push
inc
lods
mov
aas
mov
cmp
sub
push
lds
cmp
inc
add
mov
xchg
or
rorl
int
notb
pop
lret
xor
mov
clc
fdivr
pushl
stos
ret
fwait
push
rcrb
test
mov
adcb
adc
jge
aas
sbb
add
sbb
xlat
mov
cmp
sub
add
jl
fnstsw
xchg
mov
fidivrl
stc
decl
or
sbb
pop
cwtl
faddp
stos
lret
ljmp
push
jne
rorl
adc
add
mov
imul
mov
dec
iret
sbb
call
jecxz
std
mov
fs
jmp
sub
js
inc
sub
or
std
mov
popf
stc
jnp
ret
cwtl
mov
fbstp
iret
fistps
adc
decl
int3
mov
push
add
incb
in
dec
stc
js
sub
adc
popf
mov
lcall
jge
and
repz
push
mov
mov
or
fildll
lds
fdivrp
call
jmp
mov
je
subps
sbb
ret
incl
mov
xlat
xor
inc
jle
sub
jle
or
int3
pop
in
mov
sbb
and
insl
lcall
out
pop
inc
pop
xchg
cmc
push
adc
lahf
push
js
push
call
repz
inc
lods
adc
xor
aas
mov
syscall
fwait
mov
mov
and
push
push
adc
inc
pushl
rcl
lcall
sub
adc
push
jo
jmp
test
mov
mov
cmc
aam
stos
fsub
jo
jae
div
es
lods
add
sbb
mov
incl
fnstcw
or
pop
add
mov
sbb
xor
mov
ja
mov
clc
lcall
jg
add
push
ficoms
inc
lahf
ret
inc
or
addr16
insl
in
call
ret
sbb
push
arpl
push
adc
imul
dec
push
ljmp
jb
sbb
inc
and
mov
sbb
mov
mov
idiv
pushl
push
mov
add
stos
sbb
sbb
out
inc
jge
test
leave
push
dec
stc
das
mov
ret
test
cmpsb
test
and
or
inc
ds
cmp
decl
push
aaa
pop
jno
inc
loopne
orb
lock
add
or
dec
cmp
pushl
nop
jecxz
popf
mov
or
icebp
dec
out
ret
sub
sbb
nop
mov
dec
lods
dec
call
push
mov
mov
mov
pop
outsl
dec
xchg
iret
xchg
imul
push
pop
mov
ficomps
iret
movsb
add
imull
ret
in
sub
bound
jno
fs
cmp
lret
cmp
out
inc
out
pop
dec
enter
xor
cmp
cmpsb
dec
or
xchg
in
add
call
shll
stc
lods
mov
sbb
mov
aad
iretw
mov
inc
push
sub
inc
pop
ljmp
icebp
loop
jmp
popf
and
negl
sbb
aaa
jmp
mov
clc
or
loopne
mov
repz
mov
in
into
dec
hlt
jae
icebp
cmp
ficompl
and
dec
into
iret
pop
xchg
subps
add
cmp
cmpsb
push
mov
jbe
mov
jmp
jg
xchg
pushf
repnz
inc
test
popa
dec
fisubrl
call
movswl
jb
scas
pop
call
and
dec
fwait
scas
mov
jp
out
js
shrl
pop
lds
pushl
hlt
gs
repz
fs
in
ret
pop
push
mov
cmpl
dec
ljmp
jns
lret
inc
and
cmc
imul
and
mov
sahf
jb
and
call
rcr
push
and
fidivl
inc
sub
mov
mov
inc
icebp
das
cld
ret
mov
inc
data16
lcall
les
mov
pop
mov
inc
push
fstps
xchg
inc
jae
movsb
xchg
pushl
dec
test
in
pop
or
add
inc
repnz
out
mov
lcall
insb
sbb
repnz
adcb
scas
in
sahf
cmp
inc
and
sub
fsubr
or
call
inc
mov
and
cmpsb
cmp
fidivs
lods
mov
iret
mov
and
jo
cmp
pushl
call
fildll
jnp
insb
popf
xchg
mov
inc
iret
lahf
adc
mov
xlat
or
pushl
mov
mov
ret
adcl
sbb
and
xor
stos
in
daa
cld
rolb
sbb
fidivl
js
add
lods
ret
cmp
xchg
daa
push
inc
push
lret
and
decl
xor
bound
iret
sahf
ds
lahf
pusha
mov
and
inc
cmp
xor
xor
push
std
daa
lea
pop
in
xchg
mov
pop
jg
aam
in
cmp
aam
cli
cltd
push
jp
xor
clc
push
jge
push
sub
adc
fs
loope
adc
add
in
popf
push
addr16
jmp
sub
jmp
and
dec
rcrl
xor
cmc
js
test
aam
ljmp
jnp
cmp
sbb
cmp
aad
mov
xchg
mov
sbbl
das
add
dec
outsl
dec
xchg
loopne
mulb
js
fldenv
and
arpl
sbb
lods
rcr
cmpb
jnp
sub
aas
jne
in
dec
mov
push
push
xchg
loope
mov
sub
ljmp
call
pop
xchg
cmp
xor
loop
push
scas
push
pusha
out
mov
test
data16
scas
stos
lcall
unpcklps
es
sarl
dec
adc
cmp
xchg
mov
call
cmp
lock
mov
xor
xchg
adc
mov
push
scas
aaa
repnz
xor
lcall
xchg
pop
nop
movsb
aaa
inc
xor
leave
testl
pop
mov
stc
push
fstps
imul
call
push
jnp
cmp
movntq
fsts
mov
mov
aam
jmp
push
mov
cmp
scas
daa
pop
stos
and
pop
mov
js
scas
lods
push
arpl
inc
ljmp
jp
dec
or
mov
dec
xor
insl
adcb
lahf
xchg
mov
aam
push
fidivrs
fistpll
pushl
inc
mov
stos
xor
mov
add
clc
push
insl
jnp
xchg
subl
xchg
jmp
mov
mov
and
nop
rcll
repnz
cmp
cmp
cmp
rorl
incl
add
fwait
push
add
jmp
aaa
jne
rorl
rol
ret
pop
inc
pop
inc
xchg
fdivrp
lcall
push
mov
call
ljmp
cmpsb
xchg
push
or
aaa
cmp
cmp
cli
push
mov
push
sarb
aam
xchg
push
dec
add
stc
movsl
cwtl
cltd
push
fdivrl
decl
shl
ret
xor
ret
cld
mov
cmp
test
sub
lret
loope
jo
push
pushl
in
cltd
dec
sti
clc
mov
ret
repnz
push
or
or
sbb
call
add
mulb
or
fisttpl
and
enter
or
insl
rolb
les
add
push
scas
add
test
add
push
push
add
shlb
in
pushl
mov
clc
in
dec
sbb
jo
mov
inc
add
sbb
fcoms
imul
push
mov
test
jb
push
aad
add
mov
xor
rcrl
inc
outsb
dec
mov
inc
in
and
cmpsb
icebp
jl
pop
cmp
dec
inc
add
sub
lcall
sbb
decl
push
lret
in
mov
and
lcall
das
mov
adc
daa
sbb
call
icebp
lea
filds
jle
xor
push
imul
push
xor
pop
mov
decl
sahf
imul
sub
roll
sbb
cmpsb
sbb
das
stos
hlt
mov
push
call
dec
cmc
add
and
adc
mov
fimuls
lret
sbb
xchg
js
jecxz
in
call
xchg
xor
orl
icebp
add
out
mov
or
xchg
leavew
mov
divb
out
inc
and
iret
fnsave
stos
cmp
xchg
xchg
pop
cmp
mov
lcall
pop
cmp
in
push
jnp
xor
lock
ret
dec
adc
sahf
mov
decl
test
int
ljmp
dec
push
dec
test
hlt
push
mov
sti
insb
cmpsb
jmp
jae
sub
rclb
dec
jl
scas
mov
xorb
sub
inc
leave
pop
hlt
dec
addr16
fsts
daa
pop
sub
xchg
fwait
pop
push
cs
jmp
shr
ret
ss
test
ja
mov
daa
iret
mov
pushl
test
dec
inc
mov
sbb
sub
test
gs
fistpl
pop
push
hlt
xchg
leave
dec
cmpsb
mov
sti
sbb
sbb
sbb
fwait
sub
pop
daa
dec
mov
incl
dec
lcall
lds
sub
mov
add
or
xchg
rol
fdivl
incl
push
scas
fadd
and
mov
xchg
addr16
addl
xchg
cmp
mov
insl
xlat
das
imul
mov
les
popf
movsb
push
lds
es
and
xchg
imulb
les
ljmp
xor
and
push
testl
and
loope
hlt
out
clts
xchg
fisubs
push
jmp
shl
cmp
lcall
aam
add
push
add
jb
adc
icebp
cmp
sub
nop
je
lods
push
and
push
in
daa
cmp
and
lret
ds
pushl
outsb
sbb
idivl
outsb
mov
sbb
and
push
scas
jl
es
stc
mull
cli
fcompl
loopne
ja
lret
push
sub
jb
fildll
cld
lret
dec
pop
mov
push
loop
pop
sbb
mov
inc
shlb
out
inc
and
int
ljmp
dec
mov
sbb
inc
mov
lock
scas
pop
push
sbb
sahf
jp
jg
call
loop
notl
fistpl
loopne
orb
xchg
inc
mov
mov
sub
jne
mov
jl
mov
jmp
add
aaa
popf
jle
pop
xchg
outsl
add
add
je
pushl
xor
clc
jns
jl
outsb
repnz
xchg
cwtl
mulb
loope
and
jecxz
in
sub
sarb
ffreep
cmpsl
xchg
ret
xchg
cli
or
fld
xchg
mov
fcompl
das
inc
sbb
fcompp
and
pop
pushl
dec
mov
add
icebp
cmp
inc
mov
mov
inc
or
jno
jbe
popa
jns
mov
shlb
mov
stc
and
pushl
hlt
adc
push
jle
enter
xchg
aad
sbb
xchg
movsl
decl
sub
ljmp
dec
xor
xor
push
pop
jmp
stc
jne
es
pop
xchg
pop
out
push
jmp
out
mov
sbb
stos
dec
mov
dec
cld
loop
leave
mov
mov
fistl
fisubl
test
jns
lcall
adc
fwait
inc
jle
fadds
fiadds
jmp
pop
int3
cmp
mov
lahf
add
fucom
aaa
jecxz
jbe
lret
xor
in
repz
mov
into
add
dec
pushf
xlat
inc
adc
dec
lock
aam
pop
cmc
jmp
mov
mov
pop
push
fsubrl
inc
daa
xchg
mov
mov
add
test
xor
mov
lods
shr
push
lcall
nop
cmp
xchg
pushl
ds
xor
cmp
xorb
adc
mov
pop
sahf
enter
sbb
imul
push
push
or
call
sbb
in
cwtl
adc
out
mov
mov
sbbb
mov
mov
mov
repnz
or
daa
push
jno
es
dec
sbb
pushl
sub
in
inc
into
lret
cmp
mov
push
or
push
cmpb
dec
pushl
fs
imul
xor
dec
cmpsl
cmpsb
mov
jmp
inc
ss
repnz
lcall
popa
sahf
xchg
cmpsb
imul
pop
or
jle
iret
cmp
scas
mov
adcb
fwait
outsb
pop
gs
decl
shl
inc
sub
dec
cld
stc
jo
pushf
xor
cmp
add
stos
cmp
pop
cwtl
jmp
push
mov
add
in
adc
test
lret
cs
pop
adc
sar
pop
js
inc
add
into
aas
repnz
xorb
xor
arpl
jns
pop
fs
test
jmp
cli
and
dec
cmc
pop
movb
inc
xchg
rcrl
ficoml
jecxz
inc
pop
jnp
cmp
lcall
and
fdivs
xor
dec
dec
rcll
mov
adc
loopne
jecxz
scas
ljmp
fisttpll
ret
sbb
jmp
das
fisttpl
lret
adc
add
lret
dec
out
adc
dec
pop
scas
shll
cld
jmp
push
ret
ljmp
lds
mov
mov
cmp
aam
mov
aaa
push
and
aaa
pop
bound
push
aad
push
adc
bound
es
xchg
sub
arpl
jae
icebp
mov
int
std
lods
fcmovnbe
sbb
insl
out
push
popf
nop
mov
push
dec
pop
movsb
mov
lods
xorb
jmp
call
jp
sbb
scas
int
sbb
push
loope
test
xchg
cmp
clc
and
loop
scas
and
jnp
jno
lock
pop
mov
jmp
call
dec
out
add
mov
data16
add
add
lret
or
and
inc
add
sbb
call
jnp
vmptrst
outsb
std
cmc
mov
cmc
lcall
mov
mov
push
scas
mov
cmp
xor
fstpl
jmp
cmp
sbb
push
arpl
sbb
ljmp
imul
pop
mov
jns
rcll
add
push
sarb
loopne
lds
push
and
or
lcall
mov
mov
enter
test
sbb
aad
add
cmp
mov
call
sbb
cld
cmc
xorl
ja
xchg
xchg
sub
jmp
stos
push
cmp
push
addb
mov
push
call
mov
mov
mov
rorl
dec
sarl
push
mov
fistl
cmp
pop
lods
xor
fsubl
dec
jbe
sbb
mov
push
inc
jnp
cli
jg
call
mov
dec
and
xorl
mov
and
sub
rol
sbb
push
addr16
inc
idiv
scas
out
cmp
sbb
icebp
xchg
cmc
inc
roll
and
incl
shlb
in
fldl
out
sti
outsl
out
out
mov
sub
jnp
icebp
mov
ljmp
imul
mov
xchg
or
or
ja
ja
sbb
pop
test
jge
jge
call
lds
sbb
jbe
mov
push
shl
hlt
adc
sti
in
lock
stc
jae
and
cmpsb
mov
add
and
xchg
xchg
pushl
sub
or
fcomi
rcr
add
sbb
sbb
cmc
pushl
rorb
out
sub
mov
mov
xor
mov
ljmp
cmp
add
cmp
mov
addr16
push
das
xor
pushl
jbe
dec
lret
loopne
inc
outsl
cli
push
mov
out
insl
xchg
sbb
sbb
jg
mov
frstor
lods
loopne
into
cs
divl
push
jl
adc
xor
xchg
add
sub
in
stos
add
push
stc
add
cwtl
addr16
adc
inc
pop
adc
in
sub
mov
call
ja
add
mov
inc
add
mov
ja
xchg
insb
cmpsb
mov
mov
daa
sbb
pushl
and
sahf
sub
flds
dec
aam
lods
outsb
mov
test
mov
xor
and
and
incl
popa
mov
sti
adc
jle
cwtl
inc
outsb
mov
jmp
scas
lods
mov
xchg
ss
decl
mov
inc
sbb
sub
dec
icebp
lcall
mov
fistpll
fisttps
pop
xchg
xor
cmc
loope
inc
mov
rolb
int
xchg
lcall
sahf
push
jno
mov
movl
xchg
ljmp
test
and
jae
mov
cmpb
or
pop
jge
jmp
jmp
mov
cmp
bswap
push
stos
call
pop
mov
movsb
subps
xlat
add
push
arpl
jb
sub
stos
cmp
incl
push
mov
leave
mov
pop
jb
hlt
cld
mov
sub
fcoms
add
insb
scas
lcall
sub
pop
mov
das
jmp
mov
ss
xchg
add
sbb
jnp
out
push
lcall
fistl
je
leave
push
into
rcl
jp
sbb
or
sub
pushl
outsb
nop
xlat
enter
inc
je
inc
js
mov
sub
or
pushl
dec
cmp
insl
andb
in
push
fwait
add
fisubs
jbe
jge
push
in
and
arpl
arpl
inc
test
cs
les
push
push
xchg
cmp
inc
sbb
adc
push
outsl
or
adc
jp
ss
mov
jns
dec
dec
arpl
ss
decl
mov
stc
outsl
pop
inc
adc
and
or
sarl
mov
inc
xor
or
pushl
xchg
lods
mov
dec
outsl
sbb
xor
sbb
test
call
dec
jns
clc
jns
lahf
sbb
test
shll
sbb
lea
and
dec
pop
cld
fisubrs
cmp
mov
pop
aaa
mov
jle
out
loopne
call
sbb
dec
mov
in
clc
xchg
mov
pop
mov
std
pop
incl
pop
mov
dec
fiadds
xchg
sub
jae,pt
test
push
ljmp
xchg
jg
fnstcw
pop
or
das
ljmp
out
inc
dec
pop
push
popa
in
dec
cwtl
ds
fmul
jle
divb
sbb
inc
adc
jmp
test
pop
popa
dec
loopne
mov
and
out
xchg
ffree
decl
adc
mov
inc
lret
das
push
data16
pushl
imul
ret
and
cmpsb
dec
push
daa
pop
ja
lods
jbe
mov
cmp
cli
xor
sbb
push
pushl
sub
mov
fdivrs
call
or
icebp
out
adc
push
jp
out
jno
mov
dec
jecxz
jge
test
call
cmpsb
stos
addr16
push
insb
das
std
mov
add
jle
movsl
add
loope
hlt
push
in
jno
enter
arpl
mov
mov
or
push
jge
scas
mov
sahf
out
ret
cmp
add
sub
lcall
and
imul
sbb
jge
sub
push
xor
add
cmpsl
lcall
or
mov
jo
mov
shrb
cmp
arpl
sub
push
or
aaa
or
sti
push
mov
cltd
cld
cmpb
adc
pushl
mov
leave
sbb
push
mov
pop
outsb
mov
cmp
lods
outsb
data16
jne
ud0
jge
xor
jae
dec
imull
dec
mov
in
cmpsb
mov
add
rcr
inc
scas
add
lcall
mov
out
rcrb
push
inc
scas
cltd
xchg
pop
into
btr
rol
sti
xchg
jo
adc
cmp
inc
in
pushf
add
das
shll
stos
lods
stos
pop
xor
leave
test
in
clc
fimull
mov
nop
pop
sub
push
loop
dec
mov
ds
add
incl
sarl
gs
aad
std
in
and
stc
pop
aad
aas
daa
lret
stc
sub
fmuls
mov
sub
test
or
faddl
push
add
jmp
mov
orb
adc
roll
aaa
cmp
test
outsl
mov
sahf
lods
bound
bound
fcmovnbe
in
inc
or
push
jmp
out
pop
scas
and
cmp
inc
stos
fldt
mov
ljmp
jg
push
xchg
inc
xchg
sbb
mov
mov
test
lret
add
rorb
adc
incl
sbb
outsb
jmp
int3
adc
inc
mov
sub
sbb
mov
jmp
cmp
or
xchg
popa
sti
imul
scas
sarb
xor
incl
rcll
push
push
or
push
mov
ret
jmp
push
mov
or
jge
and
icebp
cmp
pushl
push
cmpsl
and
in
dec
shll
add
sarl
mov
jb
or
cmpsb
clc
lcall
in
jle
movb
xchg
lcall
sbb
sahf
dec
pop
test
jmp
or
jmp
mov
scas
jo
pop
adc
das
cmp
ret
mov
sar
aas
icebp
add
mov
dec
fsubrl
jl
jmp
jp
loopne
push
mov
test
mov
xchg
scas
fcomi
cmp
mov
rorb
insb
lcall
mov
cmp
loope
add
loope
insb
push
xchg
xor
in
sub
dec
loopne
mov
dec
mov
xchg
popf
sub
hlt
sbb
outsb
cs
inc
mov
dec
scas
imulb
mov
call
enter
scas
adc
pop
lret
mov
jae
iret
xchg
out
in
les
add
cmpsb
out
lret
faddl
lret
pusha
and
jns
roll
pop
xor
push
leave
jmp
sahf
push
mov
pushl
hlt
lret
mov
xchg
mov
dec
into
jge
xchg
mov
pop
or
mov
aas
nop
rclb
mov
cmp
call
aas
pushf
xchg
mov
pusha
cld
call
and
fs
aaa
cld
test
cmp
push
cwtl
sbb
ret
xlat
iret
cld
es
je
cmp
dec
or
mov
mov
jge
imul
clc
cmp
jmp
and
jno
pop
adc
sub
pusha
imul
sub
jmp
cmp
pop
dec
push
jne
inc
pop
sti
scas
je
mov
mov
adc
mov
xchg
je
sbb
lock
in
sbb
lods
and
mov
bound
mov
jmp
inc
add
fwait
mov
xor
cli
pop
jmp
push
or
jmp
call
dec
inc
xchg
insb
xchg
lahf
in
and
mov
addb
sbb
lcall
je
jp
xor
shll
xor
leave
add
xchg
loopne
call
insl
lock
push
test
ficoml
stos
lcall
or
testb
lcall
jg
int3
dec
sbb
mov
pusha
xchg
dec
aaa
sbb
imul
xchg
sti
mov
in
inc
and
mov
mov
push
jo
ret
and
mov
call
jno
aad
sbb
cs
mov
popf
mov
jo
sub
jbe
mov
jns
xorl
cmp
stos
clc
sbb
adc
xchg
lcall
sbb
fdivs
xchg
fstpt
mov
int
pop
fninit
dec
mov
mov
ljmp
mov
jmp
xchg
pop
jo
lahf
mov
icebp
bound
aam
fldl
sub
sahf
and
ja
shll
fstp
jno
add
xor
fdiv
pop
imul
mov
jmp
mov
jmp
les
movsb
pop
ficomps
dec
dec
scas
inc
sub
sub
pop
int3
les
mov
mov
lcall
and
ficomps
pop
xchg
xor
mov
cli
out
popf
incl
pop
dec
jmp
lods
mov
int
xchg
mov
sbb
pushl
sub
inc
push
aam
pop
lea
les
test
and
mov
jmp
test
sub
lret
cmp
mov
add
push
or
inc
pop
sub
in
ss
mov
jg
inc
push
aaa
hlt
and
mov
mov
les
andb
ds
mov
sbb
push
or
adc
mov
sbb
xor
pusha
hlt
or
mov
incl
arpl
cmp
nop
adcb
jmp
mov
xor
sbb
inc
add
lods
lock
std
jecxz
sbbb
pop
adc
std
cmp
push
rcr
jmp
adc
lock
sub
pop
cmp
cmc
add
inc
mov
lock
pushl
pop
adc
xchg
movsl
fwait
das
sbb
fcomps
jmp
out
stc
test
daa
dec
push
mov
lret
test
gs
mov
and
add
lret
adc
dec
jmp
dec
loop
jmp
in
pop
adc
add
xchg
inc
sti
insl
movb
jno
push
gs
out
arpl
cli
mov
call
inc
popa
in
mov
adc
in
cmp
sbb
and
cmp
xor
test
pushl
push
ret
sbb
subb
aam
lcall
jnp
test
incl
and
sub
mov
pushf
sub
push
leave
clc
inc
mov
stos
or
aam
inc
pop
mov
or
jne
xchg
insl
cld
jp
hlt
in
rorb
daa
pop
jmp
call
pushl
and
and
or
xor
popa
in
nop
fbstp
mov
adc
sub
pushf
adc
jmp
das
adc
loope
aas
jmp
les
jg
ss
and
or
imul
stc
and
xchg
scas
in
jbe
xchg
mov
hlt
aas
stos
inc
pop
sub
xchg
mov
add
jbe
inc
cli
mov
and
mov
sbb
scas
xchg
mov
pop
sahf
pop
popf
jp
xchg
ljmp
push
sbb
pop
push
sbb
fsubrl
into
or
je
adc
xor
fisttpl
cmp
orl
adc
or
xchg
rcrb
fisttps
pop
ljmp
sub
into
repnz
jno
push
xlat
push
dec
hlt
mov
mov
xchg
push
xor
pop
mov
ds
pop
icebp
ficompl
ja
movsl
xchg
jbe
divl
push
lods
loop
cmc
int
in
mov
jmp
out
xchg
xchg
in
push
aas
sahf
xor
cmp
add
cli
cmp
shlb
cltd
lods
bnd
test
pop
outsb
inc
adc
adc
mov
adc
dec
movl
inc
xor
dec
fs
call
movsl
shl
stos
cwtl
rcrl
fcoml
pop
jmp
out
icebp
xorb
lretw
dec
pop
incl
pop
test
aas
ret
cmc
clc
jg
xchg
and
and
push
pop
mov
lds
adc
sar
push
inc
dec
outsb
cltd
test
push
mov
pop
mov
and
in
push
mov
jle
das
stc
xor
loop
and
sbb
rcrb
aad
pop
dec
jo
xor
aas
in
inc
enter
xchg
adc
aaa
popa
iret
fdivrs
mov
sbb
pop
out
inc
and
iret
push
adcl
or
les
bound
mov
mov
addl
mov
loope
mov
xchg
mov
xchg
cmp
movsb
push
push
cmpl
sti
fimuls
dec
mov
jno
inc
gs
out
adc
scas
out
xchg
out
jne
pop
cmpsl
lods
xchg
jne
call
int
xor
dec
or
mov
jle
stos
clc
jmp
aad
cmpsl
dec
or
pushl
mov
push
out
pop
call
ficomps
int
lret
inc
xlat
out
in
xor
jmp
mov
add
or
mov
xor
scas
mov
stos
incl
xor
call
or
sti
dec
cli
scas
sti
jp
hlt
cwtl
pop
hlt
iret
mov
lds
sub
out
decl
cli
jmp
decb
push
pop
cmc
mov
icebp
jg
or
adc
cmp
sbb
sbb
scas
mov
sbb
aam
mov
pop
rclb
cmpsb
rorl
mov
xchg
lcall
push
insb
les
xchg
pop
mov
adc
mov
cli
add
not
lcall
inc
xor
movsl
pop
movsb
jg
mov
dec
lds
popa
lds
inc
mov
ret
jmp
movsl
lea
cmp
fisubrs
pop
fimuls
scas
aam
mov
xchg
jns
in
fwait
pop
idiv
ljmp
imul
mov
out
shll
cmpsl
loope
es
lret
scas
faddl
test
cmp
mov
mov
lock
jl
fnsave
push
mov
adc
adc
ljmp
das
add
adc
xor
push
scas
and
rcll
in
out
inc
pushl
fildl
call
movsb
dec
push
add
adc
setb
sbb
pushl
lods
rclb
dec
xor
shlb
xchg
in
cld
inc
inc
fiadds
or
call
pop
cld
xchg
jge
mov
out
cmpsl
xlat
ss
add
push
jns
or
jne
sahf
inc
ds
pushl
jp
push
es
andl
inc
sbb
or
adc
lcall
jns
fsubs
gs
sahf
add
adc
xchg
dec
jmp
jae
mov
fidivs
lcall
ret
add
mov
in
or
mulps
cmc
loope
add
jecxz
add
ffree
dec
mov
and
pusha
ret
dec
jns
sbb
lahf
loopne
rorb
adc
pop
lret
mov
ljmp
scas
or
xchg
pop
xchg
mov
rol
jmp
sbb
enter
cld
movsl
ljmp
mov
les
and
xlat
jne
sbb
cwtl
jo
cli
bound
pushf
sub
jns
movsb
rclb
movsb
jne
mov
daa
xorb
xor
ljmp
enter
vshufps
push
ds
push
jns
lret
fistpl
mov
addr16
ljmp
lea
fwait
out
cmpsb
leavew
push
vmread
leave
gs
xchg
gs
xchg
daa
pop
out
xor
xchg
or
mov
jns
scas
pop
mov
mov
mull
adc
sar
fldenv
ss
pop
test
ss
dec
adcl
push
out
scas
test
icebp
cmp
call
lea
mov
leave
pop
mov
mov
mov
mov
pop
pop
bound
pop
pop
sub
decl
loope
pop
pop
sahf
ljmp
popf
sbb
ja
xchg
or
xchg
push
jno
loopne
call
push
outsl
cltd
mov
cmpsb
adc
mov
mov
xchg
mov
clc
jne
inc
push
ret
hlt
jae
sti
cli
cmpsl
pop
cmp
sub
out
scas
lahf
lods
mov
arpl
call
lret
xor
xchg
xchg
cmp
mov
cld
les
out
xor
adc
decl
sub
je
sar
pop
cmp
lret
loop
clc
dec
outsl
and
xchg
mov
push
sbb
call
or
jbe
nop
sbb
and
mov
dec
pop
ljmp
jno
lcall
push
dec
lods
sbb
pop
mov
cmc
lret
movsl
pop
mov
data16
ljmp
sbb
cmc
sub
cmpsb
addl
out
sbb
bound
pushl
popl
adc
sbb
pop
xor
test
cmp
xlat
les
push
lds
inc
mov
inc
mov
xchg
mov
add
mov
jmp
fnstenv
inc
dec
add
in
dec
es
xor
js
mov
pop
pop
in
cmp
dec
shll
imul
xchg
adc
or
jge
decl
mov
insl
inc
cmp
in
mov
adc
lea
pmulhw
jbe
out
inc
xchg
ss
ljmp
mov
inc
cltd
inc
test
jne
inc
test
xchg
or
push
fdivl
hlt
lea
inc
jmp
mov
es
inc
sub
int3
test
dec
mov
xchg
sbb
adc
mov
gs
jmp
fcompl
inc
test
loop
lcall
mov
loopne
inc
daa
insl
sbb
pushl
ficoml
icebp
fstps
lea
pop
fildll
and
out
xchg
cmp
ljmp
lea
jmp
cmp
hlt
hlt
dec
or
out
inc
mov
pause
repz
jbe
ljmp
fdivl
inc
iret
jmp
adc
pop
pop
pop
mov
add
cmp
jo
xchg
and
jo
adc
mov
and
setne
pushl
cmpsl
test
inc
xchg
lock
mov
mov
test
out
mov
in
jle
decl
cmp
dec
pop
test
lods
add
adc
in
jmp
xchg
aam
jno
fcomps
imul
fisttpll
xor
cld
int
dec
sub
les
inc
daa
mov
push
mov
outsl
inc
pop
rclb
adc
call
xchg
or
pop
jnp
mov
loopne
mov
ret
mov
decb
idiv
call
xor
or
inc
add
cmp
xchg
mov
jne
push
aas
cmpl
pushl
mov
cmc
cmp
lea
push
mov
xor
cld
sahf
add
dec
arpl
fcmovbe
clc
jecxz
jmp
xor
pop
roll
mulb
mov
in
xor
dec
jae
or
jmp
subb
mulb
sub
sbb
aam
enter
and
xlat
lea
push
fs
xchg
xor
jle
dec
dec
mov
iret
ret
push
pop
mov
inc
lcall
incl
loopne
adc
dec
nop
xchg
pop
imul
or
daa
shll
jmp
mov
push
gs
ret
filds
push
sub
dec
push
push
sbb
repnz
test
mov
pop
int
out
sbb
sahf
sbb
dec
outsb
ljmp
loope
jnp
iret
mov
call
inc
sub
frstor
out
jg
and
aam
inc
gs
mov
call
and
decl
repz
and
inc
sbb
pop
xor
insl
cs
in
xchg
mov
xor
xchg
lret
in
jge
cmc
xchg
xchg
in
arpl
sub
mov
stc
ret
sbb
cmp
js
push
jle
jmp
icebp
add
add
ss
inc
mov
fldz
mov
out
adc
jg
ud0
push
xor
icebp
adc
fisttpll
sub
ja
in
popa
sub
outsb
add
stos
dec
jno
incl
bswap
sbb
or
lds
xor
ss
sbb
nop
out
xchg
dec
out
sbb
iret
call
mov
add
push
sbb
std
std
pop
xchg
jno
je
data16
pop
stc
push
lcall
sbb
mov
out
fstl
xor
addr16
popf
es
dec
sbb
push
popf
inc
inc
lds
adc
jb
lahf
daa
popf
call
mov
adc
pusha
mov
outsb
mov
rcrb
mov
jg
adc
aaa
pop
ds
pop
cmp
cmp
add
mov
lcall
sahf
pop
jne
push
cmpsb
or
xchg
call
sub
adc
adc
add
pushf
lcall
sub
sbb
imul
ja
jb
adc
and
jle
call
mov
pop
stos
xor
adc
mov
aam
add
std
scas
push
mov
fsts
adc
cwtl
imul
loopne
jge
std
pop
mov
cmp
jg
sbb
decl
inc
xlat
jae
shll
add
imul
iret
sbb
mov
call
jecxz
cmp
imulb
std
insb
mov
or
inc
push
sub
decl
jne
ror
xchg
ljmp
cwtl
imul
outsb
sub
push
mov
sub
stos
sar
incl
pop
data16
mov
dec
xor
jmp
lcall
mov
fidivrl
mov
jge
call
loopne
push
jp
jmpw
movsl
add
shl
add
pushl
and
into
les
push
xor
stos
xor
dec
imul
pop
xchg
cmp
decl
mov
and
fstpt
das
cmp
push
sbb
test
cmpsl
xchg
pushl
gs
fs
add
lret
adc
jns
stc
jl
andl
pushl
xchg
xor
or
movb
jle
movaps
xchg
add
or
lcall
ljmp
mov
orl
push
or
xor
pop
call
fdivrl
in
daa
enter
clc
mov
push
or
inc
aam
cmp
xor
inc
popa
dec
pop
jae
std
outsl
jne
clc
shll
cld
sbb
stc
repz
repnz
icebp
cli
xchg
or
mov
ret
cmpsb
loopne
lock
out
icebp
lret
or
int3
popf
popf
clc
hlt
and
mov
mov
xor
in
popf
jp
ret
nop
leave
cmc
xchg
incl
mov
push
or
addr16
xchg
dec
sbb
sub
test
rcrb
decl
out
das
pop
cltd
xor
ja
pusha
repnz
hlt
xchg
add
xchg
ficomps
in
inc
pop
andb
cmp
hlt
sar
decl
cmp
mov
daa
add
jno
dec
jae
pop
ds
or
lcall
shlb
jle
push
addr16
ljmp
adc
pop
addr16
insl
cmpsb
mov
cltd
in
mov
inc
lods
inc
test
pop
mov
ficoml
andb
mov
repnz
cli
jmp
call
xchg
adc
mov
addr16
jge
imul
xor
in
ds
jecxz
cmc
je
xchg
notb
jecxz
rcll
inc
shr
es
push
push
ja
pop
aad
mov
jle
add
mov
sbb
push
or
cmc
inc
jmp
lret
sahf
cli
or
and
loop
call
mov
and
dec
jg
loopne
jecxz
sub
mov
jmp
xor
fwait
mov
in
jmp
mov
jnp
inc
idivb
imul
inc
xchg
addr16
lds
adc
decl
push
lock
shrb
xchg
and
imul
mov
fsubrp
mov
push
mov
mov
mov
xchg
les
xchg
sbb
cmp
insb
in
ljmp
and
outsb
jbe
mov
scas
sahf
xchg
xor
inc
adc
pop
xor
jle
stos
jecxz
mov
adc
call
sub
push
decl
loope
pop
mov
fildll
jge
pop
jbe
aaa
cltd
sbb
es
test
xchg
std
pop
movsl
or
daa
das
sub
pop
inc
les
inc
call
mov
in
jg
jg
mov
sub
shl
or
je
test
lea
and
cltd
movl
pop
cmp
fldt
xchg
xor
mov
popf
pop
popf
imul
hlt
xlat
xlat
mov
mov
jg
jae
xor
mov
pop
jmp
scas
loop
mov
pop
xchg
incl
mov
jb
ljmp
daa
sahf
outsl
pop
insl
push
xchg
inc
push
mov
mov
add
mov
repz
and
imul
mov
xor
mov
and
ss
incl
sarb
cmpsb
popa
xor
fiadds
lock
test
sti
xor
jp
xchg
and
mov
jmp
xor
xchg
les
rcrl
jg
jno
rep
addr16
or
ljmp
xor
aaa
mov
icebp
push
in
mov
popa
adc
add
pushl
jmp
loop
xor
pop
test
es
das
jno
testb
push
jmp
sbb
pop
iret
jns
add
outsl
incl
int3
fnstcw
loope
push
out
iret
loop
ja
pop
ds
stos
adc
or
leave
mov
call
cli
in
jmp
push
in
cs
dec
jbe
xchg
mov
dec
cltd
push
pop
gs
fldlg2
sub
mov
movsl
jle
mov
mov
scas
inc
outsb
fdivr
dec
popa
inc
xchg
adc
cmpsl
rol
lock
sub
cli
rol
scas
mov
cs
cltd
aad
pop
and
sar
pushl
adc
mov
int
push
adc
mov
adc
incl
jmp
incl
add
clc
outsb
imul
xchg
int
out
inc
cmp
sub
mov
cmp
shlb
aas
jmp
cmp
sub
lods
sub
incl
bound
mov
add
lcall
push
fisubs
into
mov
or
jle
jbe
mov
pop
je
inc
int
mov
movsl
ljmp
and
jp
sbb
mov
data16
in
sarl
jbe
decl
out
pop
pop
pop
xchg
cmp
cli
or
test
out
pop
inc
roll
in
in
mov
clc
decb
mov
mov
imul
add
sub
mov
aam
mov
cmp
sbb
rcll
adc
and
pushf
aas
cmp
sub
sub
decl
insb
adcl
cli
lret
sub
fists
or
mov
je
and
cmp
ret
repnz
loop
dec
sbb
stos
lret
mov
je
sbb
push
stc
arpl
jbe
les
mov
push
ret
aam
mov
rcrb
cmp
decl
insl
jl
mov
cmp
sbb
mov
lcall
jg
int3
mov
sahf
sbb
pop
inc
clc
xor
std
aas
push
loopne
jp
xchg
mov
jnp
insl
or
adc
inc
add
lret
dec
loope
inc
push
sbb
pop
scas
call
push
fucomp
mov
xor
cld
adc
adc
mov
ret
scas
push
cmp
leave
jno
in
pop
loope
cmp
test
lods
add
pop
lods
add
call
loop
fcmove
xor
decl
push
pop
daa
scas
adc
sub
sub
daa
sti
addr16
sahf
mov
dec
arpl
jns
nop
and
mov
jmp
in
fcoms
repnz
lret
loop
xchg
adc
into
push
xchg
lods
cltd
inc
jne
and
mov
jmp
insb
cli
cltd
xchg
rcrl
inc
push
or
stos
fnsetpm(287
push
movsb
in
xchg
out
mov
ljmp
dec
in
pop
out
xchg
std
test
loope
hlt
sub
outsl
stos
jnp
into
test
mov
sub
sub
cmpsl
sti
inc
inc
test
mov
fmull
adc
loope
insl
mov
push
xchg
xor
call
mov
sbb
adc
fdivrp
jle
outsl
sub
push
int
pop
xchg
dec
das
fs
or
lods
mov
rcrl
decl
or
lock
inc
stos
dec
repnz
lret
lods
mov
jmp
inc
push
inc
decl
inc
or
nop
loope
jbe
mov
pop
cld
scas
adc
pop
add
push
decl
push
cs
cwtl
jns
push
lret
ljmp
lahf
cli
jle
dec
adc
pushl
xchg
and
xor
ja
mov
sub
xor
add
or
lcall
or
mov
xchg
outsl
jp
jno
sbb
sarl
fxch
cli
and
inc
pop
mov
jl
push
mov
mov
pop
pop
sub
enter
xchg
loope
call
add
dec
add
adc
shll
das
pop
dec
mov
mov
idivb
xlat
popf
cmpsl
jae
dec
vminss
in
sbb
inc
fidivrs
add
sub
cmp
lods
andps
jns
or
jmp
in
mov
aad
push
mov
jnp
push
nop
jge
sahf
dec
jbe
jge
repnz
decl
mov
cmpsb
jle
mov
or
lcall
xchg
and
mov
ljmp
outsb
shll
xchg
xor
ret
xor
pop
push
in
mov
jnp
cmp
mov
loope
mov
xchg
cmp
insb
out
enter
mov
add
andb
pop
nop
mov
jmp
add
inc
rolb
mov
sarl
or
mov
mov
push
call
stos
into
data16
dec
cwtl
aam
mov
jl
in
in
and
test
cltd
sub
loop
loop
or
scas
negl
mov
ds
ret
in
lea
sti
or
or
repz
push
es
and
loop
fimull
sub
les
xorl
jle
dec
dec
into
push
push
scas
sub
or
pushl
bswap
jno
mov
xchg
cmp
btr
fldl
push
outsb
sbbb
jmp
orb
push
dec
pop
add
mov
cltd
jp
loope
lea
pushl
fbld
pop
lods
jmp
fwait
out
inc
mov
fsubrs
mov
popf
pushf
fdivr
cmpsl
incl
add
int
xchg
mov
jb
data16
pop
stc
pop
sbb
test
jle
gs
jb
ret
push
jnp
jns
imull
jl
push
sbb
adc
sub
push
loope
jp
arpl
cmpb
xchg
xor
or
xchg
outsb
jmp
mov
push
ret
incl
inc
inc
cld
mov
dec
adc
inc
arpl
jmp
jmp
push
jmp
incl
int3
jle
cmp
mov
mov
pop
inc
aas
loop
in
call
push
sub
stos
cwtl
daa
mov
mov
push
scas
jp
dec
mov
push
and
push
dec
call
test
jne
adc
loope
sub
rcrb
jb
pushf
adc
cmpsl
decl
icebp
js
call
and
push
dec
mov
or
pushf
nop
dec
sbb
inc
fucom
sub
call
fildl
fstpt
dec
cmp
sub
icebp
cmp
subb
div
aas
cmp
sar
fildl
addr16
mov
js
cs
sub
call
arpl
out
pop
aad
test
mov
pushf
sbb
imul
pushf
xchg
mov
sbbl
arpl
jmp
addr16
jl
or
lcall
icebp
aad
cmpsb
jae
outsl
mov
fstpl
ret
decl
mov
cs
xor
loope
fwait
testl
adcb
xchg
call
mov
mov
cmpsl
ffree
and
rclb
mov
loop
and
jle
xor
mov
jmp
dec
stos
aaa
shrl
lock
stc
adc
fwait
xlat
lret
mov
mov
pushl
mov
jnp
jne
mov
mov
stos
sahf
fcmove
inc
aas
mov
incb
inc
mov
and
cmpb
ret
sub
adc
call
fimuls
push
cltd
cmc
fadds
in
xor
or
xor
adc
adc
dec
or
stos
sub
adc
aas
xor
out
pop
adc
xor
add
lea
sbb
fmuls
lods
fs
fldt
add
mov
cmpsl
sbb
mov
cmpsl
or
shl
call
addw
xchg
push
push
push
lahf
cmp
jge
jl
loopne
jb
out
out
inc
xchg
mov
jmp
std
sbb
pop
mov
push
popa
adc
mov
gs
fstpt
cmp
out
loope
push
enter
fs
push
xchg
mov
jmp
pop
test
inc
dec
push
jmp
sbb
push
adc
cmp
gs
pop
push
inc
jl
test
pop
insl
fcompl
decl
sbb
mov
loopne,pn
subl
jae
xchg
movl
and
mov
sbb
testb
jmp
mov
subl
add
pop
sbb
dec
inc
lods
pop
rolb
sbb
push
cld
in
dec
push
cli
ljmp
add
and
push
inc
fistpll
movsl
data16
push
add
dec
and
sub
lcall
cmpsl
cmp
xchg
pusha
xchg
push
test
outsl
mov
xor
or
jb
ljmp
push
lret
push
dec
mov
icebp
outsb
xchg
enter
mov
dec
push
ss
movsb
xorb
push
and
sub
mov
or
jg
sub
xchg
test
or
jmp
arpl
stos
jb
xchg
sub
push
lock
sbb
or
jmp
pusha
int
xor
mov
add
rcrl
jge
push
or
fsts
xchg
imulb
pushl
jge
or
aam
pushf
in
lret
jl
shlb
out
add
incl
into
mov
clc
enter
mov
sub
mov
jns
fsubrs
jae
ljmp
sbb
xchg
fistpl
cltd
inc
mov
inc
cltd
sti
mov
dec
sti
mov
call
push
xor
cs
ret
imul
dec
mov
cld
and
ds
mov
and
xchg
pop
sbb
pop
adc
add
dec
cli
mov
push
push
loop
push
fistpll
cwtl
pop
jnp
jae
cmp
push
push
jae
xlat
adcb
pushf
aad
lods
decl
add
cmp
fisubs
out
rorb
jl
adc
decl
inc
mov
int3
cltd
arpl
fwait
retw
repnz
mov
pop
xchg
or
mov
cmovnp
and
jmp
jne
adcb
adc
out
xor
fnstsw
out
lcall
jg
ja
decl
jbe
lcall
out
jae
hlt
outsl
add
stos
or
mov
ret
xchg
dec
cmp
scas
mov
fistpl
xchg
xor
dec
nop
jg
push
or
xor
popa
cmp
dec
mov
adc
push
and
lea
dec
jecxz
cmc
cltd
inc
cmp
sbb
add
ljmp
xchg
sbb
loopne
cmp
and
inc
jle
cwtl
dec
test
sahf
icebp
push
in
push
dec
cmpsb
mov
and
cmp
call
mov
or
add
push
xor
add
int
in
cmpsb
rcrl
ja
mov
int
cmpsl
imul
es
rorb
cmp
outsb
movl
int
arpl
pop
inc
adc
push
outsl
icebp
push
mov
ss
xor
sub
incl
ret
jne
jne
jo
or
ja
mov
push
lcall
lods
call
pop
push
shrb
lahf
sbb
jmp
insb
cmp
cltd
je
aas
jmp
loope
aam
jo
jg
add
fildl
fcomi
sub
call
test
pop
fwait
mov
xor
fxch
dec
sbb
mov
pop
addr16
dec
scas
and
call
aad
pusha
fisttpll
push
int3
cs
pusha
push
and
xchg
je
inc
mov
cmp
decl
nop
jg
jp
dec
movsl
jns
pslld
imul
fs
add
sti
jmp
cmpl
and
sbb
inc
mov
ret
cld
and
and
das
add
incl
cmc
ret
sbb
pushf
bound
lret
cmp
in
in
cmp
mov
loopne
faddl
ljmp
mov
fistps
ds
ljmp
repz
into
fimuls
or
mov
adc
sbb
std
scas
or
mov
enter
decl
in
in
repz
pusha
mov
dec
cltd
pop
bound
pusha
cmp
mov
mov
mul
or
push
into
cmp
sub
push
adc
fisubl
and
jbe
lds
ljmp
mov
sti
mov
jecxz
lret
sahf
roll
sbb
andps
pop
aaa
icebp
idivb
jno
lcall
dec
push
clc
cmp
pusha
and
cli
sub
xchg
mov
cmpsb
or
fcoml
dec
pop
cli
jo
ret
lcall
out
pop
push
stc
pop
stos
mov
fistpll
inc
mov
in
sub
jmp
mov
mov
iret
mov
repnz
in
in
add
sti
out
ss
jg
cld
mov
or
test
aaa
jnp
adcb
sub
lcall
in
mov
test
dec
cmpsl
push
mov
and
imull
inc
and
inc
call
inc
fistl
je
loop
or
fldcw
dec
mov
jg
fisttpll
dec
cltd
mov
stc
mov
dec
jecxz
addr16
repnz
dec
or
leave
jb
test
pushl
push
dec
push
xchg
lods
fistps
rolb
jne
xor
imul
lret
shrb
push
in
xchg
cmp
mov
adc
jnp
mov
mov
xchg
mov
inc
jns
pop
push
pop
or
pop
inc
jmp
dec
cli
cmc
adc
pop
adc
mov
icebp
and
inc
out
cmc
popf
fistl
pop
mov
mov
jmp
mov
push
jg
xchg
hlt
xchg
xchg
into
or
adc
mov
out
aas
mov
cmp
es
popa
mov
clc
push
inc
or
movsb
xchg
mov
mov
incl
enter
pushf
jge
out
fadds
movsb
mov
cmpsb
mov
test
sbb
out
or
inc
pop
daa
clc
or
cmpb
adc
shlb
cmp
and
pushl
mov
push
popf
add
scas
ficompl
bound
inc
cmp
push
lods
fs
decl
stos
pop
push
leave
stos
xor
pop
pop
aaa
add
jge
jne
aas
sub
insb
lret
decl
loopne
sbbl
es
push
jae
sub
andb
jecxz
out
hlt
fsub
inc
scas
test
sbb
outsb
xchg
loop
bound
or
add
call
cmpl
jbe
pop
jl
fisubrl
mov
sbb
lcall
arpl
clc
jae
cmp
cltd
inc
lahf
mov
mov
xorb
jmp
fmul
outsl
add
movsl
pop
loope
adc
jg
mov
std
cmc
push
pop
cli
js
mov
pop
fs
jg
ja
xor
aaa
ljmp
xchg
inc
icebp
and
enterw
lcall
adc
aaa
aam
cmp
jp
arpl
enter
mov
mov
lock
jmp
sub
jne
fwait
data16
jp
push
rol
ja
cmpsl
push
pushl
cmp
shll
inc
es
sti
ja
jecxz
xor
xor
outsb
adc
decl
pop
mov
dec
ss
adc
jb
mov
scas
inc
lock
lret
shufps
stc
cs
decl
addr16
mov
or
repz
adc
repz
mov
ss
inc
mov
jne
fcoml
push
jl
lret
sub
shlb
imul
ljmp
stos
push
bound
and
dec
xchg
sub
lock
mov
mov
mov
jmp
jl
ljmp
cmp
sbb
push
inc
sub
je
push
in
mov
xor
pushl
addr16
mov
sbb
sbb
out
not
enter
and
pop
outsb
aaa
jmp
pusha
jb
dec
lret
sti
in
ret
clc
sarb
movsb
enter
adcl
pop
jl
bound
incl
pop
das
cmp
cltd
lret
jns
les
and
pop
in
pushf
and
cmp
inc
mov
cmp
mov
mov
popa
push
lds
cmp
icebp
mov
lcall
jo
mov
sbb
dec
sub
stos
adc
or
out
and
popf
inc
jns
mov
js
mov
xchg
dec
pop
pop
out
repz
jmp
movsb
fcompl
cmp
and
gs
ljmp
test
dec
imul
aam
xchg
push
rcll
pop
xor
pushf
rol
cmp
ud0
call
in
add
aas
xchg
fwait
punpcklwd
in
push
or
inc
sti
adc
stos
adc
xchg
ljmp
sub
jb
js
shll
mov
out
test
loope
iret
scas
mov
mov
insb
scas
cmc
jb
adc
add
mov
and
test
and
in
ljmp
das
fildl
scas
leave
fsubl
pop
cmp
popf
push
add
lock
xchg
add
notl
call
cwtl
fdiv
mov
pushf
adc
mulb
mov
rclb
popa
cmc
lea
adc
mov
popf
aas
mov
jmp
inc
es
fistpl
inc
fimuls
push
je
pushl
shl
xchg
nop
in
ret
jne
pop
or
sbb
mov
xor
push
scas
and
jmp
sub
movsl
adc
sbb
bound
jl
dec
jnp
hlt
les
sar
lcall
mov
jp
xor
ds
and
ret
mov
mov
mul
sbb
jne
decl
nopl
lcall
cltd
pop
mov
fidivrs
sbb
xor
repz
sbb
pop
add
dec
sub
xchg
sbb
push
adcb
cmpsl
push
into
xor
jmp
xchg
mov
xchg
popa
sbb
sbb
add
adc
push
inc
and
push
xchg
icebp
ljmp
cli
fs
lods
mov
cmp
cli
fmull
pop
fsubr
and
push
xchg
push
xchg
out
fld
movl
inc
inc
or
add
mov
gs
jg
out
cmc
fldt
ljmp
push
call
jae
stos
dec
jno
mov
nop
mov
arpl
ljmp
je
adc
lods
es
push
jp
pop
jl
xchg
or
addb
out
mov
cmp
pop
mov
push
pop
clc
or
cwtl
repnz
inc
push
jbe
scas
mov
mov
inc
es
jmp
mov
pop
sub
mov
in
mov
xor
scas
mov
dec
adc
pusha
out
pop
or
gs
dec
xor
insl
sub
or
std
add
mov
int3
jno
out
std
sub
xor
jp
jb
frstor
xchg
ror
push
fs
ss
cs
movsl
xchg
mov
popf
cmp
mov
push
test
mov
jp
xlat
add
ss
lods
pop
std
ficoml
sbb
mov
adc
xor
fnstenv
inc
rcll
aas
mov
out
psrlw
ljmp
flds
mov
cmp
ds
in
jecxz
dec
lar
jle
mov
add
cmp
mov
lret
mov
fists
dec
dec
xlat
popf
mov
fdivrp
xchg
lock
ljmp
shr
test
data16
sarb
bound
mov
in
xor
ljmp
cmpsb
xchg
xchg
adc
jo
imul
in
imul
mov
cmp
lcall
in
cltd
mov
or
xlat
dec
stos
xor
xchg
pop
mov
or
xchg
sub
mov
jmp
cmpsl
in
leave
xor
push
xchg
cmp
xchg
xor
pop
fnstsw
pop
mov
jbe
jbe
add
mov
incl
push
out
mov
xor
jo
cmp
push
sub
adc
cmc
fistl
lcall
mov
iret
movsl
stc
loopne
lds
xor
and
mov
popa
aad
sbbb
and
mov
inc
idivl
pop
sbb
je
sub
sbb
and
cmc
rcrb
loope
push
icebp
mov
add
cmc
adc
std
sub
scas
out
and
jg
jmp
daa
dec
imul
inc
gs
pusha
sub
fdiv
bound
decl
scas
adc
lahf
xor
push
pop
and
arpl
pop
mov
jg
mov
enter
call
test
loope
aas
das
test
dec
push
pop
stc
push
jb
inc
addr16
mov
jg
lahf
lea
incl
xor
daa
lret
and
xchg
outsb
addl
rcll
enter
call
mov
and
pop
xor
mov
ret
sti
dec
in
sub
add
mov
jp
cmp
aas
pop
adc
mov
sub
repz
loop
xor
fistpll
xlat
into
mov
out
decl
out
call
scas
mov
and
sbb
push
jmp
dec
mov
decl
lods
cwtl
or
stc
xlat
mov
cmp
into
jns
dec
pusha
inc
lahf
mov
adc
clc
negl
pushl
and
rcl
popa
hlt
out
jmp
mov
ficoms
or
push
leave
cmp
mov
mov
fstpt
and
data16
aaa
adc
push
push
add
lods
fstpl
sbb
call
loop
ja
xchg
jmp
fstps
outsl
sub
and
jge
adc
andb
jmp
cld
jecxz
pusha
adc
lods
enter
and
push
adc
lahf
xchg
mov
mov
fcomps
fs
iret
rorb
adc
push
clc
push
stos
sbb
adc
add
and
lcall
jno
lods
std
sub
push
icebp
and
xchg
jle
loopne
adc
jmp
incl
sbb
mov
cmc
inc
add
pop
and
ds
and
or
cmp
adc
pushf
in
pop
stc
and
sbb
mov
aaa
aas
movsb
mov
fildl
pushl
and
dec
bound
cmp
and
inc
sub
lcall
shlb
push
xor
xchg
dec
imul
ljmp
adcb
sahf
fistpl
stc
int3
pop
jmp
rcll
lds
dec
lods
push
adc
jp
test
push
dec
daa
mov
cmp
dec
xchg
pusha
sti
push
leave
mov
enter
mov
decl
es
ret
jbe
daa
adc
stos
dec
popf
dec
mov
sbb
mov
cmp
fldcw
ficoml
ficomps
and
cmc
xchg
loope
pop
cmp
inc
sbb
sahf
xchg
pop
mov
ret
inc
test
or
dec
movsl
inc
aaa
fldt
lret
out
call
jp
data16
xlat
add
jb
push
cmc
rclb
mov
incl
xor
mov
popa
mov
cltd
sahf
ljmp
adc
rolb
sbbb
decl
or
adc
mov
out
es
ja
dec
or
xor
cs
ret
test
flds
pop
in
les
push
mov
sub
into
sbb
push
into
test
xor
data16
in
inc
outsl
in
aad
cld
out
adc
in
ja
jne
sub
cmp
out
pop
outsl
adc
insl
popw
mov
sub
mov
loopne
jae
ret
jmp
mov
out
push
mov
push
popf
call
dec
sti
out
pop
test
movl
incl
xchg
fsubr
lcall
hlt
xor
mov
adc
push
mov
fdivrs
incl
fdivrs
cmp
flds
mov
mov
icebp
test
add
cmpsl
imul
push
scas
jb
in
in
cmpsl
jmp
in
push
add
dec
xorb
mov
gs
and
jle
xor
xor
pop
dec
adc
pop
imulb
pop
dec
cwtl
xchg
dec
sub
ljmp
outsb
nop
xor
mov
in
xor
inc
stc
dec
add
mov
push
shrl
jmp
lock
les
rcrl
push
sub
mov
sbb
ja
jge
orl
sti
mov
xor
pushl
mov
mov
mov
xor
mov
pop
or
jle
lcall
push
fsubrl
push
outsl
sbb
add
mov
pop
adc
adc
mov
add
decl
shl
cmp
ljmp
mov
and
or
cltd
push
cltd
int3
add
loope
fcoms
mov
add
or
pop
call
jb
enter
xor
fcmovb
arpl
or
add
pop
adc
jbe
stos
mov
mov
mov
decl
mov
loop
xchg
outsb
sbb
jnp
fdiv
aam
dec
fistpll
and
stc
pop
lret
inc
aas
scas
xchg
xor
adc
cwtl
jns
xchg
repz
push
sub
sbbb
decl
push
or
scas
jne
mov
jle
bound
pop
or
xchg
shl
pop
jmp
sbb
sarb
cmp
push
xorl
mov
ret
xchg
scas
repz
lret
jmp
sub
and
in
dec
and
and
sbb
xchg
lcall
aaa
lahf
push
xor
ljmp
jbe
out
popf
jecxz
push
add
in
or
jp
test
nop
jecxz
sub
test
movsl
jmp
repz
and
xchg
pop
arpl
xchg
lock
push
dec
jg
xchg
push
mov
ljmp
decl
fstl
andl
enter
add
push
rorb
leave
loopne
loope
jns
sahf
ds
mov
cmp
and
mov
mov
jge
xor
test
pop
mov
shl
jmp
movsl
pop
mov
stos
ret
mov
cs
loopne
pop
jno
mov
popa
test
cld
cmp
pop
cmp
out
inc
mov
mov
in
test
xor
call
mov
lahf
jg
leave
jmp
mov
push
mov
and
push
mov
xor
pushl
pop
mov
bound
pop
fucom
shll
out
pop
push
call
leave
dec
insb
iret
adcl
lds
mov
andl
lcall
pop
inc
bnd
pop
sbb
ret
out
add
cmpl
jne
add
xchg
mov
sbb
lcall
outsb
nop
pop
and
push
jbe
cmpb
push
jnp
lods
lcall
scas
pop
jns
gs
ljmp
ljmp
pop
add
mov
mov
jmp
mov
xchg
es
incl
imul
xchg
inc
push
adc
and
leave
and
jbe
xor
pushl
ret
xor
dec
cwtl
enter
popf
inc
movsb
jb
mov
mov
incl
mov
cwtl
js
mov
cmp
mov
push
or
call
mov
lcall
pop
aam
jl
mov
outsl
mov
inc
jl
cmp
movsb
pop
add
lea
decl
xlat
sti
and
daa
cs
sub
jns
rclb
jl
stc
pusha
int3
incl
dec
or
out
cwtl
int
mov
movsl
push
push
or
stos
inc
test
jbe
in
call
popa
sub
lret
mov
ret
push
sbb
mov
loop
loopne
pop
push
scas
push
adc
lcall
pop
outsb
add
sbb
cwtl
fists
hlt
es
das
jne
xor
push
in
mov
and
repz
clc
xor
jecxz
xchg
or
repnz
js
jl
add
sbbb
cltd
jae
jmp
mov
insb
xchg
push
push
in
shlb
push
mov
pop
popa
clc
into
negl
out
sub
call
imul
xor
iret
ss
ficompl
lahf
mov
mov
add
push
into
mov
sahf
jmp
or
cmp
and
jmp
leave
int
add
push
gs
incl
aaa
mov
mov
repnz
fwait
pop
cmp
dec
repz
push
push
js
js
test
lret
fs
clc
pop
add
adc
mov
dec
lock
dec
push
bound
sub
inc
adc
mov
call
sbb
pushf
jp
xchg
cmp
out
test
stos
out
xchg
cwtl
shll
jae
call
stos
in
cld
cmpsb
pushf
shll
pop
inc
or
and
sti
xor
xchg
dec
pop
dec
push
adc
add
incl
sub
ret
mov
test
lcall
jne
call
mov
int
mov
sahf
ljmp
lock
lret
neg
std
mov
jecxz
inc
inc
and
sbb
loop
gs
filds
jmp
adc
mov
scas
imul
hlt
sbb
push
dec
fisubs
add
jp
adc
in
jecxz
xchg
js
or
xchg
jns
inc
fs
fmull
fiaddl
sub
sti
push
in
decl
addr16
mov
shll
fmull
add
mov
andl
stc
cmp
jne
fstps
mov
mov
and
mov
xchg
mov
pushf
pop
adc
incl
mov
scas
sub
adc
jle
jns
imul
xorl
lcall
nop
mov
xchg
das
mov
push
mov
decb
mov
fiaddl
shll
mov
in
inc
stc
das
into
fwait
sbb
add
fidivl
mov
and
and
idiv
incl
and
push
fisubs
cmp
dec
popa
mov
mov
nop
rcrl
xor
rcrl
cltd
fsubrl
xchg
mov
outsl
pop
xor
arpl
inc
xchg
fwait
cmpsl
stos
shr
cmc
sub
lods
fnstsw
mov
repnz
dec
fsts
in
test
xor
fmull
adcl
xchg
bound
push
xchg
test
test
into
js
cld
cmp
and
fcompl
xrelease
ljmp
push
stc
movsl
mov
jmp
xor
push
mov
add
xchg
dec
je
aas
adc
or
ret
jg
sub
decb
rclb
inc
or
xor
in
jge
pop
je
pop
jnp
jno
into
jb
mov
pop
mov
dec
incl
mov
cmpsw
add
dec
xchg
or
adc
xchg
int
or
dec
jno
and
sti
jne
jl
scas
outsb
mov
mov
out
jecxz
fucomip
lret
int
push
das
adc
add
loop
mov
sbb
cs
call
shll
inc
mov
dec
dec
imul
aas
jbe
icebp
fnstenvs
decl
lds
outsb
adc
jne
and
cmp
inc
bound
repz
jmp
sbb
dec
lahf
jecxz
imul
andb
cmp
jns
pop
adcl
shrl
xchg
or
mov
in
fildl
inc
imul
sbb
roll
inc
inc
ret
repz
clc
dec
jnp
push
rcr
push
ror
mov
pop
mov
in
and
mov
lcall
mov
jmp
nop
jle
xlat
or
and
cmp
mov
lret
loopne
pop
icebp
xor
mov
push
dec
push
jl
push
adc
leave
nop
mov
aas
shr
pop
insb
mov
lret
and
cmp
arpl
push
pop
jae
call
imul
pop
fs
mov
sti
leave
or
xor
mov
sti
dec
ja
push
data16
mov
ret
cmp
arpl
pop
nop
faddl
mov
pushl
addr16
push
add
bound
test
sar
sub
or
lods
mov
pushl
or
jno
fnsave
jbe
mov
pop
ja
jbe
aas
jmp
add
sub
sub
xchg
cwtl
subb
cmc
xchg
test
decl
mov
imul
insb
pop
fldcw
jns
andb
and
popa
bound
mov
jnp
mov
shrl
lea
das
pop
cmp
mov
lds
decl
std
cmp
nop
stos
leave
in
jecxz
dec
dec
ds
scas
or
pop
lea
sbb
shlb
dec
inc
and
int
cmp
add
lahf
lea
xlat
les
sbb
adc
decl
imulb
iret
in
lds
push
mov
mov
and
fsubs
lcall
fistpl
decl
imulb
lret
shll
cmp
jecxz
aam
xchg
xor
mov
cwtl
lret
pushf
fistpl
and
and
pop
popf
out
or
cmpsl
ret
out
insb
mov
jle
pusha
std
jno
mov
loope
dec
imul
fs
movsb
add
xlat
pushf
aad
ljmp
out
mov
pushl
add
lods
dec
arpl
js
push
in
mov
daa
test
cmp
js
dec
fs
adc
call
test
mov
imul
call
inc
lcall
lahf
jmp
mov
mov
or
jae
lret
mov
mov
mov
out
sti
call
lahf
and
subb
or
lds
fnstsw
xchg
mov
loopne
pushl
mov
iret
lods
stos
mov
adc
data16
popa
cli
inc
lret
pushl
and
dec
lods
shlb
das
int
mov
mov
xchg
pop
xchg
push
das
cld
dec
cli
fisubl
adc
pop
jmp
lea
fcoml
ljmp
outsb
sbbb
roll
push
idivb
inc
sbb
push
cld
in
mov
mov
jmp
outsl
incl
aas
fcmovne
loopne
lea
inc
iret
outsl
push
test
inc
shr
aas
pop
lcall
fisttpll
jae
repz
int3
scas
mov
xor
jge
cli
dec
jle
jne
xlat
mov
fcomps
repz
int3
arpl
jo
dec
cs
ljmp
rorl
rorl
jmp
fimuls
out
out
scas
arpl
pop
movb
jb
std
jb
and
jbe
in
repz
pushl
out
cmpl
cmp
mov
xchg
inc
adc
mov
fcmovb
push
inc
lret
je
pushl
or
inc
shr
fs
sub
xor
mov
out
cmp
sub
popf
or
lcall
sahf
fisubrl
ror
test
ret
add
imul
mov
imul
push
xchg
call
popf
sbb
xchg
inc
cld
ljmp
dec
dec
in
push
dec
and
jg
in
jb
call
mov
and
inc
jg
fdivs
or
and
hlt
sar
cmp
mov
cmp
xor
xchg
in
xor
jne
testb
testb
loope
call
mov
or
push
popf
aam
adc
aaa
mov
jbe
jno
ss
aaa
test
loop
lahf
jo
jmp
out
mov
call
mov
aam
pop
hlt
shld
ljmp
dec
xor
xchg
fsubr
bnd
or
mov
cmp
sub
call
in
dec
mov
xor
js
xor
fstp
dec
addr16
mov
orl
decl
add
aas
testl
cmp
jmp
andl
out
inc
fsubs
adc
pop
pop
mov
mov
aad
xor
xchg
rcl
jno
ljmp
cmp
xchg
arpl
sarl
lds
ss
jmp
adc
pushl
lock
pushf
cmp
pop
sub
xchg
adc
xor
mov
or
lcall
dec
loop
add
jl
cmp
mov
leave
insb
mov
dec
mov
mov
push
clc
xor
movsb
gs
mov
dec
pushf
in
ror
ja
add
lcall
lea
fs
lds
shlb
xlat
addr16
les
jmp
adc
push
mull
lcall
mov
inc
scas
in
xchg
fimuls
lahf
adc
subl
ljmp
in
mov
add
xor
repz
inc
mov
or
cwtl
fdivrl
in
call
push
daa
inc
xchg
out
push
jp
lahf
inc
and
andb
dec
stos
jl
jb
adcl
jmp
inc
xchg
cmpsl
das
fsubl
xchg
xchg
cmp
jbe
pop
or
push
sub
lcall
arpl
xchg
add
cmpsb
xor
sbb
bound
pop
fdivr
jmp
test
cs
inc
or
loope
jle
push
xchg
mov
hlt
mov
sbb
aas
pushl
xchg
lds
sub
inc
adc
mov
jle
pop
int3
sub
adc
mov
sbb
loopne
icebp
dec
inc
test
sbb
les
ljmp
add
push
jle
mov
fidivrl
xor
jb
into
xchg
test
decl
cmp
mov
cmp
aas
jae
rolb
lcall
jle
enter
dec
jmp
sbb
cmpsl
adc
stos
scas
mov
inc
jae
inc
outsl
pop
pop
sar
ficoml
sbb
nop
callw
cmpsl
inc
ror
or
test
xchg
mov
jae
mov
gs
incl
fsubp
fucomip
fisubrl
jmp
xor
pusha
pop
adc
jge
lcall
jnp
sbb
subb
pop
xor
xlat
and
leave
pushf
in
xchg
shlb
push
jmp
xor
jmp
inc
out
xor
inc
and
daa
xor
sahf
test
test
push
xlat
jmp
jl
imul
sbb
insl
out
or
mov
bound
add
sar
lcall
or
jo
sar
ret
into
jg
sub
pop
call
dec
nop
iret
mov
pushl
lret
dec
cmp
pop
sub
in
lret
add
insb
pop
inc
dec
arpl
shll
and
aas
test
jge
lea
inc
inc
and
xor
ljmp
gs
call
mov
dec
dec
fsubrp
pop
dec
xchg
dec
mov
push
fcmovnbe
mov
add
dec
cmp
lcall
mov
jbe
jo
jne
loop
nop
cmp
rorl
int3
bound
ljmp
icebp
mov
icebp
call
add
outsl
mull
push
push
test
pushl
xchg
inc
add
outsl
cmp
push
stos
push
and
cwtl
or
mov
mov
dec
rcrl
sti
sub
incl
push
mov
lahf
sub
pop
std
pop
sbb
or
incl
cmc
cmp
lock
orb
add
incl
pop
fsts
pop
xor
adc
jb
and
jmp
push
imul
decl
cmp
clc
mov
inc
inc
xchg
leave
push
stos
fs
cmp
sbb
sub
mov
popf
adc
dec
arpl
dec
outsl
inc
lods
sub
mov
jmp
push
adc
xchg
inc
out
cltd
scas
mov
js
adc
xor
push
cltd
ja
and
decl
pop
popa
push
js
popa
sub
mov
rcrl
mov
lcall
js
cmp
add
divl
push
lods
mov
add
inc
dec
mov
ljmp
ljmp
fdivs
mov
loope
scas
inc
roll
xchg
jmp
mov
mov
lcall
verw
cltd
bound
inc
dec
fldenv
or
dec
test
sbb
jmp
dec
xchg
ret
and
and
mov
fwait
leave
pop
arpl
mov
cld
mov
jae
sub
loopne
aam
decl
lock
jl
mov
leave
push
popa
mov
pushf
int3
sahf
push
mov
sti
rolb
iret
jmp
gs
mov
aam
scas
mov
jae
sbb
arpl
adc
hlt
mov
call
into
outsl
mov
aas
and
xchg
and
inc
ret
int
subl
add
call
or
push
daa
pop
pop
mov
mov
mov
femms
in
add
mov
and
mov
pop
mulb
mov
adcl
push
sub
jne
jg
jo
adcl
ljmp
fst
sbb
push
push
cmp
sub
cmpsb
scas
adc
push
push
cmp
pushl
movsl
inc
add
mov
scas
xchg
inc
dec
fisubs
sbb
inc
xor
stos
call
mov
jl
notl
iret
das
push
and
dec
lcall
popf
jnp
std
pop
add
ljmp
xor
xchg
gs
push
pop
sbb
and
jnp
in
fisttpll
xchg
std
adc
lods
push
mov
ficomps
inc
jecxz
adc
ss
sbb
fisubrs
pop
lahf
popf
lcall
lock
test
inc
sbb
rolb
movsb
jbe
push
movsl
stos
sub
lret
sub
xchg
inc
out
or
jbe
stc
pop
test
add
popf
jae
inc
std
push
je
xor
testb
cmp
mov
push
lds
sub
jl
mov
sub
push
sub
jmp
gs
mov
pop
push
test
push
sbb
sbb
inc
pusha
add
lcall
jns
rcrl
test
mov
jl
jbe
repnz
xchg
and
jmp
cmpsl
mov
push
or
push
xor
or
mov
xor
sub
dec
push
mov
scas
lcall
adcl
jns
insb
rcr
mov
add
push
dec
ss
addr16
jno
inc
lret
test
imul
mov
dec
inc
enter
dec
test
lcall
mov
dec
mov
aad
jns
lock
test
clc
cli
sbb
ficompl
loopne
mov
mov
and
loope
mov
es
cmp
xor
pushl
mov
test
mov
cld
jae
or
inc
mov
movsb
sar
call
pop
cli
aaa
mov
mov
pop
addl
sub
insb
ds
dec
push
jmp
aad
push
inc
sar
jl
je
std
cmp
idivb
out
fadds
and
jmp
push
jbe
push
push
jae
out
mov
cld
adc
cmc
std
dec
enter
out
jmp
movq
gs
test
and
es
xorb
xor
xor
out
iret
stos
sahf
mov
jns
jmp
ret
and
or
jns
adc
xlat
cmp
inc
push
in
sub
cmpsb
outsl
mov
dec
xchg
push
fstl
inc
fwait
cltd
int
push
movl
negb
scas
ret
jb
push
mov
iret
push
fisubrl
les
call
add
sbb
adc
and
nop
adc
jns
repz
pushl
xchg
icebp
and
mov
lret
mov
xlat
lret
loopne
lds
flds
decl
jge
lcall
cmp
push
pop
and
cltd
and
inc
mov
pushl
jno
pop
push
jl
test
pusha
not
loopne
cmp
testl
mov
lds
jb
xor
pop
mov
adc
adc
cmc
mov
adc
push
loopne
arpl
test
decb
inc
jecxz
sarb
movsb
add
pusha
arpl
fistpll
incl
jb
inc
lret
jle
sbbl
adc
inc
xlat
cltd
and
repnz
fs
repz
fnstenv
sbb
shl
jne
out
mov
stc
je
aaa
cltd
in
push
je
call
lcall
out
mov
shll
jp
fstpl
inc
fdiv
add
int
cmp
int3
aas
mov
cmp
jmp
pop
dec
adc
je
mov
mov
xor
and
into
mov
ljmp
and
test
adc
push
daa
or
jno
mov
jge
xor
xor
ljmp
rorb
out
xor
sbb
cwtl
in
or
xorb
adc
mov
pop
or
rcrl
aad
sbb
mov
dec
inc
es
test
mov
testb
mov
mov
std
ret
arpl
scas
pop
subl
jmp
cld
dec
stos
lods
jp
lods
insl
inc
wbinvd
sar
nop
adc
push
pop
arpl
decl
jns
inc
pop
in
inc
mov
loop
fisubrl
xor
mul
test
jg
call
mov
or
lret
out
dec
pop
mov
mov
jmp
in
dec
sbb
repnz
mov
mov
pop
sub
jle
add
mov
or
push
ss
packssdw
pop
ss
jne
call
out
adc
sbb
inc
jb
lods
je
pop
xchg
cld
sub
dec
mov
dec
push
les
mov
jne
test
sbb
popa
addr16
mov
sub
mov
jmp
movsl
dec
fcompl
loopne
ja
rorl
movl
cmp
xor
mov
enter
mov
dec
and
and
and
push
xor
inc
ret
insb
dec
push
sbb
loop
push
in
imul
lcall
lea
mov
addr16
decl
add
jnp
and
xchg
outsl
add
push
test
pushf
rcr
push
cmpsl
lcall
icebp
mov
lods
inc
mov
jns
mov
insb
adc
inc
movsl
decl
out
jns
jmp
imul
imul
addr16
addl
mov
and
jbe
shll
jo
and
gs
outsl
imul
push
aas
out
cmpsb
inc
push
in
bound
sbb
inc
shl
cmpsb
push
xlat
pop
fdivs
xchg
andb
lcall
repz
dec
out
outsb
ljmp
adc
les
xchg
int3
mov
mov
dec
fnstenv
dec
in
lcall
jo
push
icebp
pushl
pop
xchg
in
pop
fldt
inc
inc
dec
clc
and
ja
aas
pushl
jmp
and
or
mov
ffree
inc
jnp
div
in
mov
dec
cli
or
fisubs
push
inc
push
fcmovbe
adc
loope
arpl
aaa
push
arpl
and
orb
lcall
out
push
decl
pop
xor
scas
sub
jle
push
sub
aas
jle
jge
jl
cwtl
xor
mov
xchg
scas
xor
add
ficompl
scas
pop
mov
cmp
aaa
sub
jae
lret
std
xlat
sahf
aas
sbb
and
pop
test
jmp
push
jmp
or
jecxz
cmp
rorb
or
pop
out
push
pop
push
addr16
jmp
ljmp
mov
ljmp
push
call
mov
mov
inc
idiv
pushl
test
xchg
pop
fwait
rcrl
or
adc
decl
jg
repnz
stos
pop
imul
lods
ljmp
xchg
jnp
xchg
in
cmpb
cld
call
inc
cmpsl
out
cmp
int
dec
movsb
ja
add
clc
jne
nop
xor
mov
jno
xor
lahf
sarl
leave
es
pop
pop
mov
hlt
and
xchg
ljmp
xchg
mov
arpl
sbb
xor
dec
xorb
inc
jb
mov
mov
lods
and
jmp
mov
lret
cmpsl
adcb
bound
into
mov
add
popf
das
push
ljmp
aam
leave
popf
jno
pop
pushf
dec
adc
jg
in
pop
xchg
adc
push
movsl
aad
xchg
mov
jmp
lcall
xchg
cmc
pushf
xchg
test
push
cmpl
cmp
mov
repnz
mov
loope
lcall
inc
pop
bound
mov
xchg
xlat
sbbb
mov
fstl
inc
xchg
inc
iret
xchg
int
xchg
cmp
rcrb
lock
nop
test
lea
pop
lret
jmp
arpl
xor
jns
fcmove
sbb
mov
push
scas
sbb
out
or
jne
call
mov
lcall
dec
pop
loope
ret
sarl
sbb
and
push
pushl
jne
fsubrl
xor
adc
mov
data16
ret
dec
out
and
addr16
call
or
push
dec
sub
out
pop
adcl
arpl
in
pop
mov
add
fwait
outsl
mov
mov
push
sbb
insb
xchg
push
jo
cmp
enter
cmc
xchg
ds
loop
mov
lods
pop
jecxz
jns
xchg
test
aas
sbb
out
shlb
dec
loop
xor
mov
ret
jmp
movsl
and
out
ss
les
adc
fcomi
mov
sbb
fcmovnbe
mov
in
sub
dec
sahf
mov
mov
xor
sahf
push
stos
inc
int
cs
jns
push
push
mov
dec
subb
mov
xchg
movsb
inc
insl
inc
cmp
sti
cmp
incl
add
addr16
add
loope
fcompl
clc
inc
and
and
fidivrl
inc
stc
test
nop
and
xor
insb
cmc
leave
cmp
push
xorl
sbb
jnp
aad
decl
int3
adc
loope
insl
iret
mov
sub
adc
mov
push
mov
cmp
mov
es
add
stc
mov
mov
mov
mov
bnd
jae
mov
lea
decl
sti
cli
jns
sbb
fucomip
fimull
es
lods
mov
test
into
jg
sarb
ljmp
or
scas
mov
in
sub
aaa
pop
adc
and
inc
mov
jmp
cmp
aad
jp
cmp
flds
imul
popf
and
inc
adc
call
dec
rorb
subl
fs
push
push
mov
or
cmp
and
inc
std
enter
mov
mov
lock
inc
outsb
insb
lret
sbb
outsl
icebp
mov
push
xchg
pushl
test
stos
popf
mov
es
xor
add
stc
lods
jne
lret
cmp
cld
mov
js
inc
stos
pushl
mov
pushf
inc
adc
dec
hlt
mov
pop
add
call
repz
mov
xor
or
fidivs
mov
inc
shl
std
lcall
out
repnz
mov
lods
adc
cld
pop
adc
sub
sti
aas
pop
outsb
js
push
push
lahf
movsl
jne
call
adc
push
pusha
in
push
lahf
out
or
ljmp
push
popf
xor
dec
pop
xchg
ljmp
mov
lcall
mov
loope
inc
popf
inc
rol
inc
jg
xor
xchg
orl
nop
add
call
jmp
sbb
sahf
mov
arpl
rcr
clc
int3
xchg
lahf
inc
push
xor
jmp
int3
test
loopne
fistpl
sub
sbb
mov
xor
mov
push
fisubrs
inc
sbb
or
adc
popf
mov
jo
jmp
pushf
dec
xor
call
mov
clc
cmp
leave
xor
push
and
loopne
xchg
mov
sub
xchg
jmp
call
pop
cmpsl
and
nop
fstpt
mov
es
mov
fldenv
fstpl
mov
pushl
or
pop
ss
mov
test
cmp
xor
insl
aad
call
roll
xor
in
sub
mov
js
test
mov
jno
cmp
mov
pusha
jle
in
inc
incb
adc
pop
testl
cmpsl
jmp
enter
xor
dec
inc
or
adc
clc
jns
out
mov
jmp
push
mov
leave
hlt
inc
cmp
jmp
xor
fs
shlb
arpl
jge
loopne
mov
cmp
cmp
mov
and
add
out
scas
ljmp
cmp
sbb
imul
sbb
jb
jmp
jg
ss
inc
mov
xchg
mov
call
test
mov
repnz
jmp
cltd
test
cmpl
neg
and
test
mov
add
pop
cld
sbb
test
sbb
incl
cmp
mov
movsl
pop
or
add
or
pushf
sbb
add
jnp
fldenv
pop
int3
sbb
pop
leave
or
aas
lcall
les
sahf
test
mov
xor
jmp
jno
cmp
sub
and
popa
inc
push
pop
jns
cmp
jne
test
in
out
xchg
es
jmp
and
in
jl
lea
in
clc
pop
addr16
jp
popf
adc
sub
mov
jno
int3
xor
call
rorl
repz
mov
mov
inc
xchg
int3
cmp
push
mov
xor
repz
data16
rclb
add
pop
daa
mov
ja
lcall
leave
incl
je
fcmove
mov
or
push
cmp
std
jg
lds
dec
mov
sub
mov
lods
faddl
imul
mov
call
dec
xchg
rorl
cli
fcoms
sahf
mov
xor
outsl
pop
outsb
insl
xchg
movsl
xchg
adc
jmp
test
cmp
bound
jl
shrb
push
mov
testl
fisttps
cmp
hlt
add
loop
or
fs
xchg
outsl
sahf
and
pushf
mov
ljmp
and
mov
xlat
xlat
mov
jle
mov
in
ficoml
dec
sti
push
test
pushl
add
sbbl
js
push
lret
subl
pop
adc
and
jg
stos
in
or
ds
mov
inc
sbb
es
fistpl
aam
push
xlat
cs
jmp
push
rcr
push
insb
lcall
andl
push
stc
movsl
jbe
fisubrs
in
cmpsl
inc
jle
decl
xor
fxtract
aam
push
xchg
fdivrs
hlt
mov
cli
je
fwait
into
leave
sub
jge
jle
lret
pop
lahf
mov
sub
in
jae
and
std
mov
in
roll
mov
in
aaa
xchg
and
add
or
shl
in
pop
dec
jmp
inc
cmc
xor
jno
jmp
mov
mov
cmpsb
aam
pop
cli
push
adcb
pop
js
xchg
jmp
jg
inc
inc
stos
sub
aaa
pop
repnz
pop
mov
lret
inc
inc
out
dec
roll
mov
in
push
test
xor
das
mov
fsubrl
sub
mov
pop
test
decl
push
scas
push
mov
or
mov
xchg
xchg
xor
sbb
ja
lret
ljmp
inc
push
cmpsb
pop
lret
dec
hlt
pushf
int
mov
cltd
mov
cltd
dec
scas
mov
ljmp
dec
sub
out
dec
mov
leave
inc
and
add
pop
xchg
push
call
cmp
mov
pop
in
pusha
ja
mov
scas
cmp
mov
ljmp
push
pop
lock
data16
jle
adcb
fwait
shl
sub
mov
jg
push
jge
cmp
das
shlb
mov
lock
ret
fwait
orb
jecxz
mov
lcall
sub
fnstsw
jae
cli
mov
outsb
out
sti
filds
adc
ss
movsb
js
fsts
dec
mov
inc
mov
repnz
push
jmp
jl
in
in
pop
and
mov
jnp
shll
lods
xchg
mov
ljmp
sub
iret
sbbb
pop
pop
xor
mov
mov
sub
data16
decl
inc
and
dec
mov
lea
add
ret
inc
add
call
lret
rorb
xlat
mov
stc
mov
call
popa
push
xchg
pop
dec
add
incl
ret
dec
movsb
pop
sahf
pushf
mov
je
add
pop
inc
iret
jg
ljmp
xor
jmp
ret
xor
pop
mov
orl
pushf
cmpsb
cwtl
xor
lret
mov
adc
push
pushl
pusha
jmp
int3
ret
and
rcrl
popa
or
cmpsl
sbb
lock
jb
cmp
das
movsl
pop
in
call
int3
ss
dec
xor
in
jp
addr16
mov
test
out
dec
sahf
sbb
call
sbb
pop
sbb
fwait
xchg
daa
add
out
jg
add
or
sbb
bound
sbb
cmp
sub
cmp
inc
dec
xchg
leave
test
inc
jnp
dec
sub
xchg
sub
and
sbb
pop
stos
mov
ja
cmpsb
cli
mov
jl
push
sub
pop
and
in
fs
jle
push
sti
je
enter
sub
mov
insb
fistpll
xchg
and
scas
icebp
and
mov
lods
sub
push
cmp
lcall
sub
clc
imul
mov
pop
es
repnz
push
mov
jnp
and
faddp
outsl
lcall
and
mov
scas
stos
pushl
out
imul
sbb
adc
push
or
jle
push
xchg
js
sbb
and
dec
jmp
shll
or
mov
test
movsl
inc
out
fcos
jg
out
shlb
adc
scas
and
cmp
lret
sub
call
dec
into
jnp
push
iret
push
dec
or
repnz
push
mov
mov
jno
jno
xchg
into
into
movsl
cmp
data16
ja
push
gs
leave
ret
add
test
inc
add
sarb
fsubrp
andl
test
leave
xchg
mov
imul
shrb
lock
incl
in
mov
adc
cli
mov
xchg
pcmpeqd
lahf
mov
incl
insl
mov
fs
push
sub
mov
sub
xchg
divb
sbb
sub
cmp
xchg
scas
mov
in
nop
jb
cmp
or
repnz
les
rcrl
outsb
in
add
incl
mov
ret
loope
movsl
sti
inc
pusha
mov
jne
dec
inc
dec
mov
cmpsb
out
inc
aas
mov
aad
out
shl
pusha
gs
scas
rorl
add
push
cs
lea
nop
psadbw
mov
sar
decl
jne
or
gs
loop
repnz
imul
aam
inc
addb
push
divl
mov
sbb
pop
jae
sarl
in
xchg
int
push
aas
push
sbb
call
push
je
cmp
mov
dec
xor
mov
movsb
push
test
mov
call
mov
stos
outsl
popa
roll
xor
test
and
int
sub
xchg
clc
sub
xor
pushl
pusha
xchg
in
outsl
sbb
and
paddusw
jae
mov
lcall
pushl
push
xor
inc
and
movsl
jecxz
popf
xchg
test
pop
in
jnp
xchg
jbe
incl
push
fcmovne
pop
xlat
xchg
shrl
adc
daa
sbb
hlt
div
add
fldt
aaa
xchg
iret
out
rcll
mov
fwait
in
sbb
jne
adc
in
stos
push
lcall
adc
repz
xor
aad
das
jge
pop
into
sbb
sub
dec
jmp
sbb
jmp
mov
sub
shlb
cmp
shrl
insb
lcall
movsb
push
clc
jmp
inc
jno
aaa
push
cmp
lea
push
mov
scas
mov
call
stc
mov
inc
test
jmp
gs
jl
rcll
incl
lods
sbb
push
jmp
jae
sti
addr16
dec
ljmp
stos
je
loopne
mov
lahf
push
ror
jp
mov
xchg
cmp
inc
sbb
jmp
shrl
mov
add
mov
in
mov
cli
cmp
inc
inc
pushl
xchg
mov
pop
cltd
icebp
imul
call
push
sahf
inc
ss
mov
lcall
int
cmp
cmp
out
imull
sub
xchg
in
pushl
fdivrs
mov
xchg
push
cltd
jp
pop
shll
fists
and
jmp
enter
cmc
pop
cmpsl
fldl
lret
jg
insl
jo
mov
scas
shlb
iret
outsl
mov
call
mov
std
dec
cli
sbb
jno
sbb
xchg
lods
push
push
push
enter
incl
testl
imull
iret
dec
mov
and
cmp
lret
xor
pushl
ret
mov
sbb
add
pop
xchg
fisttps
loopne
mov
stos
adc
sub
xor
ljmp
fistl
fldl
into
call
aas
mov
xor
pop
and
call
cmc
insl
outsb
das
dec
arpl
adc
ds
test
es
fsubs
sti
in
mov
and
adc
or
push
cmp
mov
jo
lock
lahf
adc
lock
cwtl
popa
jmp
stos
mulb
insb
loopne
push
daa
rorb
dec
dec
ret
inc
push
leave
mov
leave
enter
call
aad
jae
or
aam
stos
fstl
aam
jge
xchg
daa
mulb
popa
inc
shlb
test
lock
cs
out
scas
xlat
or
pop
xchg
mov
sbb
lahf
add
jmp
inc
jo
xor
sbb
cmp
add
inc
imul
js
sahf
sub
dec
lds
cmp
aas
icebp
cmp
jbe
or
mov
hlt
and
push
push
jg
inc
repz
ljmp
xchg
mov
xchg
dec
ret
adc
cli
inc
xor
test
mov
in
mov
idiv
movsb
lcall
jl
or
jbe
add
adc
nop
mov
lods
jl
aas
insb
aas
stos
xor
pop
repnz
fs
push
les
out
pop
mov
sahf
dec
stc
push
or
popf
ljmp
mov
mov
sub
cld
push
outsl
stos
lods
jne
andl
arpl
pushl
repnz
loop
mov
push
push
test
cmpsb
jns
cmc
dec
inc
xor
cmp
bound
xchg
sbb
add
pushf
pop
int3
xor
clc
testb
aad
stos
and
mov
jmp
ret
sbb
fwait
xor
pop
rorl
mov
and
pop
mov
pop
dec
repnz
decl
jae
hlt
and
push
les
leave
sbb
add
jge
dec
sar
mov
aaa
and
dec
mov
ficomps
in
xchg
mov
pop
sub
lret
popf
and
incl
pop
sbb
js
cwtl
scas
add
scas
jb
les
xchg
and
cmp
cmpsb
aaa
ljmp
mov
mov
data16
mov
or
mov
mov
mov
lods
lcall
lods
dec
or
inc
push
and
and
lds
int
das
mov
inc
dec
mov
imul
cmp
fisubl
outsl
cmp
inc
fcoms
xchg
cwtl
loop
cltd
pop
dec
and
idiv
stos
cmp
mov
pop
sahf
or
add
jmp
xor
xchg
sarl
repz
push
sahf
lds
add
mov
test
subb
dec
push
xchg
lock
decl
add
mov
mov
repz
and
test
movsl
inc
cltd
xor
scas
ss
add
pushl
rclb
movsb
ljmp
nop
pop
sbb
dec
sub
push
sub
lret
scas
call
sbb
aas
fsubrl
daa
sbb
in
cmpsl
ljmp
call
pop
popf
push
test
sub
xchg
call
fs
mov
add
call
lds
lds
sub
cmp
mov
pop
lret
dec
mov
ss
test
mov
inc
notb
cmpsb
inc
leave
sub
hlt
and
insl
out
and
add
lcall
cs
ljmp
jo
inc
mov
pop
aaa
adc
pop
repnz
cmpsl
pop
loope
mov
jb
pop
mov
lea
idivl
push
shrb
arpl
jle
mull
pushl
int3
push
mov
mov
hlt
mov
jmp
xchg
movsl
jp
mov
push
fbstp
jmp
loopne
sti
inc
arpl
or
mov
insl
nop
stos
pop
lea
stos
adc
clc
push
push
call
adc
cmpsb
pop
xor
stos
inc
push
inc
in
adc
fcoms
cmp
test
decl
jl
or
inc
mov
mov
int
ds
sub
pusha
push
xor
lea
inc
decl
lock
jb
repnz
enter
test
data16
add
jg
lret
pop
aaa
test
jne
mov
dec
movsb
sbb
cmpsl
jl
cmpb
add
push
sub
inc
mov
loop
dec
fs
aaa
mov
jp
imul
lds
cld
mov
and
decl
test
cli
jo
test
in
jl
ljmp
mov
xchg
inc
ljmp
rorb
mov
xchg
jb
cmp
or
ret
ljmp
lcall
call
mov
fwait
push
push
dec
mov
mov
push
push
lock
loope
roll
ds
jge
mov
jmp
cli
vmovdqu
popl
negl
mov
imul
mov
mov
out
jnp
leave
push
pushl
mov
cmpsl
xor
in
and
sbb
rclb
inc
fidivs
mov
incl
pop
das
movsb
push
movsl
pop
jne
jle
fnstenv
add
inc
add
pop
cmp
aad
push
push
sbb
cmp
xor
fstpt
and
xchg
test
in
gs
mov
cmc
fwait
mov
stos
scas
lcall
std
pop
icebp
repz
fdiv
pop
dec
ja
jns
test
xor
inc
in
jmp
push
ret
cs
dec
and
loop
test
jno
or
bound
decl
xchg
sub
or
mov
sub
adc
decl
pop
fcmovu
jo
shl
fistl
repz
inc
lcall
fsubs
push
jl
insl
insb
js
fisubl
scas
cmp
mov
movl
jl
cmc
mulb
xor
pop
inc
outsb
jp
mov
sub
pop
test
fcmovu
loope
dec
fmuls
pmaddwd
inc
pop
push
inc
imul
mov
lcall
mov
inc
xchg
add
sbb
fldenv
andl
and
scas
jle
dec
je
fs
test
dec
roll
jecxz
dec
add
xor
int
sbb
call
outsl
xor
push
or
mov
sbb
andb
and
push
inc
mov
idiv
jmp
ds
dec
subb
xchg
fisubrs
sub
cmp
xchg
jae
xchg
xchg
jo
ljmp
fildl
xchg
xchg
mov
cmp
and
aaa
fldcw
in
add
js
sar
std
jmp
int
in
add
inc
and
stos
inc
and
daa
lret
idivb
ds
decl
jmp
ret
sub
iret
xor
ds
inc
mov
aam
roll
mov
push
ds
cmp
adc
insl
loope
mov
hlt
cltd
in
jno
jmp
jnp
and
mov
push
std
js
inc
cmp
cmp
ret
push
ret
jmp
arpl
jmp
scas
sti
sarl
and
rcrl
dec
int3
daa
ljmp
push
cmp
arpl
mov
jmp
jge
mov
jns
jns
ror
mov
sbb
rcl
mov
mov
lcall
enter
lock
push
dec
ror
push
or
or
xchg
add
sbb
mov
push
mov
rol
add
sub
add
push
adc
call
pop
out
incl
inc
int
jbe
xchg
sub
inc
in
dec
xchg
cmpsl
sub
pop
add
cmp
push
inc
incl
fsubp
mov
das
pushl
jnp
popa
adc
jb
pop
ljmp
fistl
popf
dec
dec
dec
xor
mov
aad
in
lods
push
xlat
dec
jg
add
jbe
sub
decl
push
pop
xlat
ret
adcl
roll
sbb
jp
push
push
lcall
cmp
dec
lret
adc
pop
mov
mov
dec
adc
sub
sti
pop
scas
cmp
sbbl
pop
pop
cs
psubb
pop
cli
mov
jecxz
mov
test
in
aam
push
sbb
call
addr16
xchg
mov
mov
add
push
or
dec
decl
xchg
pop
aaa
insl
or
arpl
ret
cmp
jp
and
or
gs
dec
andnps
dec
mov
mov
mov
inc
adc
or
aas
addb
add
cmp
scas
aaa
icebp
jae
fimuls
xor
adc
or
ss
cwtl
mov
or
call
dec
jg
inc
aad
pusha
shrb
mov
sbb
xchg
mov
push
sbbb
decl
cld
rcrb
adc
pop
lods
inc
andb
sub
push
xor
push
test
or
mov
arpl
lock
shrl
xchg
in
sbb
in
lea
push
addr16
lcall
addl
push
jp
or
test
sub
push
jns
addr16
in
lods
pop
pop
cmp
or
jnp
sub
lock
dec
inc
dec
mov
in
ja
inc
sbb
lcall
setle
jmp
xchg
push
xchg
and
stos
vfmsub231ps
lods
sbbl
cmp
sub
jmp
and
lret
sbb
adc
or
rcr
enter
mov
push
jl
push
ljmp
inc
and
adc
xchg
popl
cli
cmp
inc
push
xchg
inc
test
sarb
cmp
stos
sbb
out
sbb
dec
xchg
jo
and
cmp
cld
std
incl
cs
fimull
sbb
mov
fcomi
rcll
loopne
scas
or
ljmp
ds
lahf
xchg
loopne
cltd
mov
inc
pop
push
mov
and
je
aas
push
lds
lcall
ffree
mov
les
std
sbb
add
sbb
inc
popa
adc
mov
sub
std
fisubrl
lcall
shlb
call
insl
loop
pop
xchg
jnp
rclb
sub
fbld
repnz
or
jl
jl
add
push
sar
dec
jge
adcl
sti
pusha
das
cmp
cmp
incl
pop
lret
cmp
adc
out
movzwl
xchg
ret
sub
daa
cs
cmp
lcall
cmp
mov
sub
or
leave
inc
sti
xor
sub
jmp
daa
out
sbb
push
jmp
es
jecxz
jl
mov
mov
aas
pop
dec
xor
mov
xor
decl
add
jecxz
mov
or
add
ja
nop
pushf
cmp
mov
call
jbe
inc
cmpsb
add
insb
out
sbb
int
lods
inc
mov
xchg
ja
ret
pushl
lcall
sbb
test
loop
push
stos
jp
in
iret
js
jns
jmp
fnstenv
lahf
dec
scas
push
xor
jno
cmp
mov
push
adc
pushl
push
dec
shlb
jge
pop
loop
jne
push
cmp
loope
pop
push
xchg
filds
stos
xor
mov
pop
dec
fldl
mov
xor
call
addr16
aas
xor
ljmp
or
dec
je
test
lcall
fcoml
pop
ds
push
leave
jp
mulb
and
jne
dec
jecxz
mov
sub
dec
or
jmp
inc
in
inc
sbb
jecxz
jge
leave
push
mov
into
mov
je
mov
xlat
fldt
lcall
dec
fcmovu
shrl
test
ret
push
fdivl
cmpsl
cli
mov
inc
mov
cmp
add
out
subl
dec
cmp
lea
jo
jl
pushf
out
jge
pushl
pop
std
stos
dec
xchg
lock
add
dec
xor
mov
sub
inc
leave
jne
jmp
xor
push
push
mov
jne
cmpsb
aad
cltd
sbb
sbb
pop
pop
mov
push
push
or
mov
test
scas
insb
aad
and
int3
and
lret
push
add
insl
ljmp
push
movsl
or
adc
hlt
or
and
mov
cs
sub
fsubr
sub
mov
rorl
std
xchg
rol
addb
jnp
nop
cmp
out
call
call
push
and
jno
add
fldcw
div
pop
aaa
jo
push
and
xor
imul
call
sbb
sahf
cmp
cmpsb
clc
add
fidivs
hlt
cli
dec
test
clc
sub
pushl
nop
mov
les
lea
stos
orl
and
and
icebp
lret
jmp
jecxz
je
test
cs
fisubs
xor
scas
dec
ret
loopne
stos
scas
jns
jmp
xchg
mov
lcall
les
push
test
loop
imul
lcall
adc
adc
or
shlb
insl
rorb
dec
jb
fwait
push
test
hlt
xor
add
orl
push
in
or
aam
pop
dec
mov
and
incl
leave
sbb
cld
add
out
pop
xchg
jle
pop
jns
mov
outsb
lcall
push
adc
rcrl
cld
mov
in
inc
inc
xchg
mov
mov
sbb
das
in
scas
sar
incl
mov
fwait
insl
mov
inc
dec
lret
jmp
rcrl
adc
call
arpl
add
inc
es
mov
insl
push
jp
pop
sub
in
fs
test
rorl
lods
pop
les
mov
xrelease
dec
push
lods
not
outsl
repnz
ljmp
push
add
push
loop
scas
fwait
mov
fsts
aam
scas
sub
push
and
cmp
jle
idiv
cld
int
sbb
pop
mov
lds
mov
out
sub
add
jl
nop
inc
pop
cmp
decl
loope
mov
jno
mov
cltd
add
jb
mov
sbb
xlat
movsl
repnz
pushl
xchg
xchg
verr
push
sub
sbb
insb
inc
in
xchg
jmp
loopne
ljmp
lcall
cmpsb
jo
cs
mov
mov
pop
push
jg
pop
push
popf
mov
incl
pop
aad
enter
rcr
pop
js
xor
test
adc
add
cmp
lret
decl
out
js
xor
mov
out
les
mov
dec
add
aaa
mov
cmp
cmp
andw
int
pop
stc
js
stos
aaa
sub
lock
roll
mov
inc
insl
pop
or
jb
pushf
and
pop
pop
in
dec
cmpsl
push
pop
mov
pop
lcall
leave
ret
or
dec
call
jno
adc
cs
push
sub
sbb
inc
sar
mov
push
outsb
aas
xchg
adc
jo
push
aad
loop
aas
stos
pop
cmp
push
ret
push
sub
out
mov
cmp
stos
sbb
shlb
mov
psllq
ja
xchg
shlb
or
jmp
jnp
repnz
repnz
aas
stos
mov
xor
mov
dec
call
lds
adc
push
test
movsb
cmpb
cmpsl
cmpsl
cmp
cmc
or
call
xchg
push
mov
sub
fs
xor
inc
sbb
xor
lcall
aaa
es
cmpsb
dec
shlb
lcall
notl
arpl
in
dec
ljmp
cltd
pushl
cwtl
ret
dec
sarb
push
aas
nop
fnstsw
daa
sbb
clc
jecxz
out
popf
call
push
jmp
ds
mov
arpl
fdiv
js
scas
lea
mov
jmp
cmp
clc
fxch
in
fsubp
rclb
jmp
jl
sti
aad
int3
int
outsb
mov
pushl
jbe
mov
sbb
pop
cmp
sahf
xor
pop
jbe
ds
dec
jecxz
out
cs
xor
mov
outsl
addr16
adc
cltd
ds
mov
incl
mov
roll
out
fwait
or
orb
jmp
pusha
push
pop
sti
mov
jmp
in
mov
mov
mov
lahf
inc
aas
jg
adc
in
movsb
mov
cmpsl
cmp
incl
jge
fistps
pushf
xor
mov
jmp
jge
test
in
sub
adc
test
call
push
add
push
and
and
and
and
rcrl
add
adc
call
adc
xor
inc
sbb
sbb
es
ret
ss
clc
pop
sti
jne
inc
jle
ljmp
fiaddl
fldenv
cmp
add
fisttpl
gs
jl
shrl
hlt
call
ffreep
cmc
jns
inc
ffreep
sub
cmovge
aad
in
inc
jmp
mov
mov
jmp
fildll
test
push
pop
out
shll
lods
cmp
imulb
into
sahf
xor
cmp
popa
cld
adc
mov
pushf
mov
and
push
in
call
pop
mov
lcall
jp
outsl
inc
cmp
pop
jl
cld
mov
mov
and
decl
inc
mov
pop
dec
je
sarl
inc
cmp
in
jb
rorb
cmpsb
xchg
mov
mov
cld
sub
jno
jbe
and
push
iret
aaa
ss
mov
add
ljmp
mov
jne
scas
push
test
dec
pushf
stos
les
jno
fstpl
ljmp
leave
push
cmp
jns
xchg
cwtl
mov
mov
das
adc
dec
fcmovnu
add
sti
adc
insl
pop
mov
leave
testl
inc
in
jp
ja
mov
jp
cwtl
fmul
decl
test
jmp
mov
rcrl
mov
jnp
jbe
xor
fwait
ret
mov
les
insb
ret
stos
or
mov
scas
sub
jmp
pop
cli
dec
lahf
incl
pop
mov
lahf
push
arpl
mov
pop
mov
insb
lret
inc
mov
xchg
outsb
incl
or
jno
xchg
xorl
xlat
sbb
pop
add
and
insl
pusha
fmuls
aas
inc
mov
xchg
pop
adc
xor
lods
mov
adc
sbb
pop
inc
imul
push
push
cmpsb
fmuls
decl
inc
cmpsb
pop
ret
pop
cltd
add
inc
dec
loop
or
fstps
lcall
jnp
fisubrl
sbb
cmpb
gs
pop
xor
lock
sbb
jae
lods
add
jmp
mov
pushf
cmc
enter
stos
mov
ljmp
mov
fimull
call
jne,pn
jle
mov
push
stc
ret
fcmovnbe
cli
inc
lahf
add
sbbl
scas
out
push
loopne
inc
ret
test
jnp
inc
std
inc
pop
clc
cmc
insl
lret
dec
pop
insb
jns
cmp
push
fmulp
in
or
cwtl
push
fimuls
xchg
stos
fsubl
push
inc
inc
in
xchg
jb
ja
mov
popf
mov
mov
pushf
in
xor
imul
or
xchg
sub
and
adc
dec
lret
add
insl
dec
nop
outsl
popf
mov
push
sub
fnstcw
push
add
incl
jg
push
scas
mov
pop
loope
repnz
xchg
in
push
xor
lds
xchg
pop
jmp
push
js
xchg
cmp
fs
add
mov
mov
or
ret
jns
adc
decl
les
cs
push
fidivs
insl
pop
push
idiv
and
and
mov
fsts
dec
call
dec
pop
cmp
dec
or
aad
and
outsb
cmc
sti
pop
push
mov
dec
jno
pop
sbb
scas
jne
push
add
pop
pop
add
and
inc
pop
in
and
fxch
orb
fisttpl
pop
jbe
cmp
call
insl
cmpsb
data16
xchg
sbb
popl
jl
push
adc
notl
lcall
dec
sbbb
add
ds
shll
dec
cmpsl
outsb
xchg
xchg
jmp
in
inc
jmp
sub
xchg
mov
arpl
pop
jb
test
mov
ljmp
bound
out
mov
hlt
xor
in
outsl
fwait
ss
sti
dec
cmp
xor
popa
call
imul
ds
repnz
add
mov
ds
adc
je
lcall
fidivs
loope
out
pop
loope
push
fstpt
notl
scas
add
jge
cli
cmp
push
push
mov
sub
adc
jle
fs
rcrb
fs
js
pop
imul
call
fstps
aas
xchg
sbb
shll
aam
daa
int3
cmp
and
pop
add
adc
lcall
insb
dec
mov
adc
jmp
cmp
sahf
cmc
adc
incl
pop
pop
mov
xchg
dec
jp
mov
out
dec
push
jns
in
fbstp
push
jo
call
iret
out
stos
lret
fstpl
xor
add
lret
jg
dec
in
jo
mov
idivl
decl
lods
add
or
pop
pop
inc
ret
pop
in
test
ljmp
sbb
decl
outsl
mov
jl
dec
pop
sub
mov
inc
mov
loope
bound
ret
int3
or
inc
stos
ret
nop
xchg
and
mov
push
in
in
iret
leave
and
xchg
decl
fbld
pop
sbb
lahf
jg
dec
push
xlat
in
loop
pop
sub
xor
jbe
jo
arpl
in
jmp
aaa
add
fwait
xor
cmpsb
in
shrb
cmp
adc
or
sub
decl
rorb
fcomi
xchg
dec
add
mov
pusha
das
stos
out
sbb
or
mov
incl
insb
dec
mov
sub
mov
xchg
jl
or
leave
loopne
or
dec
out
int
decl
je
pushf
adc
ljmp
xor
jle
sub
rcl
cltd
insb
inc
pop
inc
xor
inc
lock
lret
ljmp
sub
mov
or
fstl
sub
pushf
loopne
mov
pop
pop
dec
sbb
mov
test
jns
pop
in
test
ret
pop
enter
cwtl
pop
inc
pop
ds
ljmp
cmp
dec
jle
push
mov
cltd
sub
movb
inc
mov
lahf
out
arpl
jmp
jl
push
mov
cmpsl
mov
push
jo
inc
pop
push
nop
jbe
ret
hlt
sbb
decl
repz
lds
ds
stc
push
fwait
data16
pop
iret
push
jns
pop
pop
iret
mov
mov
mov
fidivs
pop
int3
out
movsl
popl
test
loopne
jmp
mov
nop
cwtl
lret
inc
or
popf
das
mov
mov
std
jecxz
sbb
sbb
into
fcomps
les
stos
ja
test
scas
dec
xchg
mov
jnp
or
add
clc
push
pop
pop
nop
or
call
push
mov
loope
adc
dec
jno
mov
xor
call
ljmp
movsl
dec
or
cmpsl
mov
push
xor
das
xchg
pop
outsb
lds
or
fldt
ds
pop
jbe
data16
out
or
pop
hlt
adc
aam
mov
lret
add
in
inc
sti
test
imul
cli
jns
push
pop
loopne
jge
sti
in
mov
incl
mov
xchg
gs
and
lahf
iret
sub
and
jns
jge
rcrl
or
lcall
lcall
icebp
aaa
addb
push
aam
aam
mov
cli
loop
adc
enter
lcall
pusha
pusha
jbe
test
pop
pop
scas
cmp
js
push
adc
std
mov
sbb
mov
ret
pushl
sbb
or
sbb
icebp
nop
mov
sub
mov
or
test
jmp
pop
rolb
or
jbe
sbb
inc
mov
rcr
sti
sahf
adc
frstor
jmp
pop
push
sub
and
outsb
in
sub
movsb
push
mov
fidivs
sbb
inc
ja
call
lods
dec
mov
pop
dec
rcr
insl
insb
dec
hlt
inc
mov
iret
cmp
inc
pushf
data16
out
mov
ljmp
fs
push
push
faddl
loop
mov
ss
adc
movsb
sbb
inc
or
ret
outsl
arpl
ljmp
cmc
clc
insl
push
inc
adc
pop
ja
decl
pop
mov
leave
mov
sub
mov
cli
mov
sub
mov
inc
sbb
jno,pt
icebp
jle
xor
jns
pop
sbb
leave
xchg
xor
jns
lock
jne
jmp
pop
inc
test
into
xlat
repz
sub
insl
clc
sarl
push
ret
mov
fs
pushl
pop
jmp
mov
aaa
ret
mov
arpl
push
arpl
gs
je
lcall
dec
dec
push
sahf
push
push
inc
fst
xchg
dec
push
fwait
imul
jb
jne
ret
jp
decl
lahf
add
sbb
push
ja
mov
jl
add
iret
sbb
mov
sar
mov
cmpsb
cmp
test
or
dec
int
popf
pop
addr16
push
lods
hlt
rol
xor
in
mul
outsl
mov
inc
shrl
xor
mov
in
sbb
pushl
and
inc
cmc
arpl
test
clc
pop
inc
inc
ja
lods
aaa
sbb
stc
lods
mov
pusha
cmpsl
bound
jmp
pusha
test
test
leave
or
mov
adc
mov
push
add
mov
imul
xchg
pop
loope
repz
push
sbb
decl
dec
movsl
xchg
enter
push
scas
scas
inc
mov
cmp
lods
and
cs
add
repz
push
cmpb
and
out
jmp
lcall
imul
mov
lods
sbb
popf
mov
cs
lcall
lret
mov
bound
std
dec
addr16
fstpl
pusha
inc
out
and
pushf
xchg
mov
xlat
rol
sub
test
into
fsts
adc
js
test
loop
pop
inc
or
lret
stc
aas
xchg
dec
out
decl
dec
leave
sahf
lds
mov
push
add
sbb
pop
ret
jmp
mov
aas
push
stos
jl
mov
cmp
lcall
popa
mov
jmp
sub
jbe
je
loope
test
jecxz
push
mov
das
inc
pop
sbb
adc
inc
rorb
lcall
xlat
cltd
aam
daa
aas
fwait
in
in
ret
xor
sub
mov
inc
push
lods
sti
ja
call
inc
mov
cmpsl
mov
sbb
jp
cli
xchg
jecxz
dec
add
mov
js,pt
sar
pushl
pop
mov
pop
ds
mov
mov
mov
in
mov
pushl
arpl
inc
insb
pop
and
and
pop
mov
pop
push
std
jns
pop
call
bnd
add
scas
sti
repz
cmp
in
xlat
arpl
stc
movsb
ja
stos
pop
xchg
adc
lret
pop
sub
xchg
les
mov
jno
pop
fcoml
sub
jmp
sbb
shrb
xchg
sub
dec
dec
pusha
dec
mov
negb
xchg
push
out
jbe
mov
jl
leave
xchg
xor
push
sti
mov
cld
lret
cmp
mov
pop
faddp
decl
cmp
fcoms
pop
or
std
dec
mov
dec
testl
repnz
cmp
mov
cli
repz
ss
int3
xchg
add
test
hlt
mov
popa
mov
call
push
xor
lods
cltd
sbbl
loopne
dec
repz
fcoml
out
aaa
pop
inc
icebp
int3
pop
adc
call
and
decb
dec
adc
jae
mov
testl
mov
call
push
mov
add
jo
fcoml
lods
cmp
or
adcb
loope
ljmp
divb
testl
cmpsl
jl
lds
sahf
mov
sti
in
cmp
inc
in
rcrb
decl
dec
push
pushf
pop
xor
rcrb
dec
sbb
lret
add
or
pop
dec
cmp
ljmp
dec
dec
sbb
mov
pop
sub
and
jns
outsl
and
les
adc
pushf
add
insl
cmp
xchg
mov
xor
clc
inc
fdiv
mov
or
xchg
decl
inc
xchg
push
cwtl
adcl
dec
das
add
fwait
xlat
das
pop
lds
pop
insb
into
or
call
rorl
test
ds
cltd
lea
dec
mov
std
int3
sub
mov
adc
xchg
enter
pushl
lret
jg
jb
push
das
cmp
pop
loop
add
push
jge
mov
call
xor
inc
sub
addr16
test
adc
pop
in
out
enter
mov
mov
jmp
push
stc
xor
outsb
pushf
pushf
test
xchg
sub
stc
iret
shll
enter
sbb
ljmp
sahf
cmp
outsb
int3
aad
push
inc
push
dec
or
mov
stc
push
lret
lcall
and
lea
mov
sahf
jno
imull
fcompl
push
xor
shlb
subl
decl
add
fists
push
sbb
enter
xchg
js
pop
in
mov
mov
decl
into
xlat
push
push
sbb
cltd
inc
dec
enter
jae
cmp
xor
cmp
xor
sub
daa
adc
mov
mov
movsb
cmpl
adc
pop
add
filds
repnz
mov
sbbl
out
aas
xchg
ljmp
or
xchg
inc
mov
or
mov
jmp
jbe
and
scas
jmp
inc
fnsave
mov
and
dec
pushl
arpl
stos
add
fiadds
adc
inc
push
sbb
iret
pop
push
mov
adc
jmp
jecxz
dec
movsb
xor
shrl
or
pop
add
shl
push
adcb
inc
or
xor
jnp
incl
pavgw
in
cmp
mov
cmp
aad
loop
inc
sub
jnp
in
inc
decl
pop
xlat
dec
push
and
cs
icebp
mov
inc
jnp
js
test
and
call
jmp
daa
pushf
dec
pop
sbb
pop
arpl
sub
inc
movsl
loope
sti
jb
scas
cmp
push
lea
adc
add
push
sbb
xor
push
dec
lahf
jle
cmp
aas
xor
sbb
test
and
adc
cwtl
inc
repz
jge
mov
pop
xor
cmp
add
cli
sarb
out
push
aaa
je
add
push
xchg
lcall
in
outsl
out
push
dec
iret
inc
pop
out
rcrl
mov
xchg
test
int
in
inc
mov
xchg
stc
stc
and
movsl
jbe
rorl
js
sarl
addr16
sahf
lock
sub
jmp
std
jo
stc
in
dec
adc
js
cmc
movsl
shll
push
push
adc
push
inc
mov
pushl
dec
inc
es
jmp
enter
mov
adc
push
and
ljmp
mov
aam
mov
iret
das
mov
sti
sbb
cs
pop
bound
icebp
push
push
sbb
pop
jl
lcall
mov
dec
push
lods
mov
xchg
dec
cmp
test
add
stos
mov
enter
icebp
dec
pop
sbbl
jp
xor
xor
pop
cwtl
gs
rorl
jne
loopne
hlt
daa
insl
rorb
jmp
jae
add
fisubrl
decl
insb
repz
xchg
jmp
xchg
test
jl
popa
fbstp
or
fcomip
push
jl
jns
stc
jae
pushf
cmp
adc
dec
outsb
xor
fstpl
jmp
pop
or
rorl
xchg
call
outsb
mov
test
cmp
test
sbb
neg
dec
shr
stc
sub
icebp
inc
ljmp
push
mov
scas
xchg
gs
aaa
stos
fimuls
lods
repnz
call
inc
or
inc
les
test
test
sbb
mov
loopne
mov
decl
inc
sub
sub
loopne
lock
lock
fstl
call
inc
pop
adc
inc
mov
sub
inc
push
cmpb
mov
pop
xor
ret
or
repz
sub
outsl
mov
dec
pushf
fs
jns
mov
push
fistl
inc
jecxz
or
mov
js
in
rorb
cmp
fisubrl
cltd
fdiv
and
cmp
adc
sbb
xchg
arpl
lcall
movsl
push
adc
xor
scas
pop
dec
leave
mov
test
xor
dec
mov
mov
cmp
jmp
xchg
or
ret
xchg
or
cmp
fwait
jge
inc
ret
bnd
das
ss
pop
sbb
push
mov
push
test
adc
in
pushf
mov
hlt
mov
pop
cmp
jl
jmp
movsw
mov
rorl
addr16
sahf
ds
adc
std
scas
rcll
and
jmp
jbe
adc
xchg
mov
jb
popa
popa
adc
mov
sbb
sbb
ljmp
push
cmp
icebp
popa
je
mov
push
cmp
push
dec
js
xchg
jge
push
xor
jne
ss
insl
movsl
data16
push
xor
sub
incl
sub
loope
xchg
dec
xlat
pop
gs
cmp
xchg
popa
outsl
inc
pop
mov
xchg
insl
dec
and
jp
xlat
cmc
cmp
or
mov
xor
andb
add
pop
xor
lods
iret
pop
jle
test
ficomps
inc
cmp
xor
lods
dec
rorb
xchg
fisubrs
decl
mov
xchg
sbb
mov
aad
pop
lcall
stos
push
push
jecxz
jmp
stos
into
cld
scas
push
and
inc
sti
test
or
cltd
add
pop
in
lcall
std
sub
faddl
jno
mov
add
jbe
inc
sar
cltd
jmp
and
sub
int
in
mov
out
and
sbb
decl
outsl
je
shrb
imul
xabort
sub
mov
push
and
sub
incl
jo
jae
in
inc
pop
dec
lret
aad
repnz
frstor
inc
lret
cmp
arpl
call
or
rsm
mov
out
loop
enter
jb
sub
fisttpl
dec
int3
lret
call
daa
add
sti
scas
sub
push
repnz
pmaxub
scas
ljmp
jns
xchg
stos
cwtl
shll
loopne
push
xchg
jns
pop
push
andb
xchg
push
cmp
adc
inc
pop
pop
mov
jle
cmpsl
addr16
mov
xchg
lods
ret
hlt
adc
xchg
decl
xorb
lcall
aaa
loopne
add
jecxz
ja
ret
sub
xchg
jo
int
mov
pop
ret
pop
lods
iret
ret
out
cmp
incl
clc
pop
add
cltd
jmp
into
test
push
ljmp
xor
mov
daa
mov
out
pop
dec
and
outsl
es
call
addr16
and
popa
dec
mov
jl
adc
testl
and
xor
scas
adc
lods
imul
add
icebp
and
push
mov
pop
incl
pushl
test
mov
and
inc
xor
js
js
mov
mov
imul
jmp
mov
jle
fstps
xchg
jecxz
fstpt
push
imul
loop
jl
shr
dec
inc
cli
fwait
and
cmpb
mov
je
fs
aad
mov
icebp
pop
jl,pn
stos
sub
sti
sbb
imul
imul
xor
xchg
cmp
js
mov
lret
lods
popf
adc
popa
sti
add
mov
xor
inc
rorb
cmp
test
xchg
mov
cmp
fstpt
sbb
or
decl
jmp
mov
adc
cs
scas
and
jbe
out
outsl
jmp
mov
pushl
push
mov
popf
repnz
xchg
cwtl
and
mov
roll
inc
push
jmp
cmp
popf
add
inc
inc
lods
cmp
repnz
sbb
mov
sub
xor
jp
pushl
adc
fists
xor
pop
icebp
pinsrw
cli
jo
or
aad
call
inc
push
aas
arpl
or
xchg
test
pusha
mov
cmp
mov
enter
dec
pushl
inc
enter
mov
and
cmp
xchg
sbb
push
xor
sbb
dec
or
adc
fbld
aas
mov
mov
lahf
inc
sub
out
lcall
gs
hlt
je
pop
aaa
ret
mov
sbb
sbb
stos
lret
lock
roll
sub
xchg
ds
and
push
decl
test
fsubs
mov
adc
xchg
pop
fstps
xchg
stos
push
scas
sub
xchg
adc
cmpl
pushl
ror
xor
xchg
gs
cmpsb
push
jle
push
jo
push
jl
in
call
mov
sti
sbb
bound
mov
jne
adc
pushl
test
xor
andb
in
cmp
fwait
test
lret
popl
jmp
ret
cmp
xchg
xchg
xor
push
or
daa
push
jge
mov
call
das
scas
adc
push
sbb
pop
mov
jp
loop
call
rcll
call
lret
mov
fisubrs
mov
ret
xchg
and
push
adc
decl
out
pushf
lods
mov
xor
sbb
imul
nop
repz
ret
fs
jge
outsl
xchg
and
push
jnp
repnz
push
push
daa
scas
pop
sbbl
push
call
add
inc
adc
cmp
jae
fdivs
xchg
or
cmpsb
unpckhps
inc
lds
dec
dec
xchg
jmp
sub
shlb
std
or
stos
int3
mov
lds
lock
adc
popa
xor
int
ds
pop
lods
cmp
jno
icebp
test
push
inc
sub
and
test
ljmp
or
add
stos
int3
push
lret
push
xor
xchg
mov
sub
jmp
lret
cmp
add
mov
in
pop
lcall
push
inc
and
mov
ja
pushl
xchg
add
sub
fadd
clc
mov
popa
mov
jmp
mov
or
ret
and
les
aaa
ss
push
negl
popa
jnp
ret
cmp
js
testl
nop
mov
sub
dec
fwait
sbb
dec
test
call
es
mov
jns
and
mov
ja
ret
jecxz
push
imul
and
leave
add
and
ja
aam
mov
cmp
not
cmc
sub
push
push
mov
call
adc
das
xor
hlt
jmp
add
sahf
jecxz
mov
xchg
or
and
jmp
push
ss
inc
fcomps
jl
inc
mov
push
in
iret
mov
fldt
inc
xchg
mov
imul
dec
test
mov
iret
mov
push
loopne
or
dec
ja
call
inc
adc
push
out
cmpsb
std
imul
jecxz
xlat
xor
out
jl
sbb
jmp
push
sarl
lret
jo
lahf
jge
sbb
adc
sub
aad
xchg
jb
add
test
out
mov
dec
int
sbb
mov
sbb
push
stos
push
stos
mov
repnz
sar
incl
hlt
enter
mov
cltd
xchg
in
ljmp
sub
push
push
loopne
dec
test
lcall
nop
sti
fildll
and
dec
adc
xchg
ror
mov
jae
sub
rcll
sub
push
mov
cmp
push
xchg
push
stos
hlt
jbe
test
test
fcomps
sub
decl
out
push
lods
lods
fwait
mov
out
fiadds
add
xchg
imul
mov
jmp
dec
mov
imul
arpl
xchg
mov
cmp
stos
push
fdivr
call
call
cmp
jbe
hlt
stos
mov
jb
xchg
or
popa
sbb
pushl
push
or
in
sub
lcall
call
or
ds
call
imul
fdiv
ja
ljmp
pop
mov
xchg
ss
or
dec
sbbl
push
arpl
fwait
in
sub
mov
je
mov
out
ljmp
iret
mov
pop
out
sar
mov
aam
mov
std
jl
into
sbb
jo
outsb
fwait
vpsubusb
loopne
adc
adc
mov
popa
mov
repnz
lret
fsts
aad
jo
lahf
jg
jg
cmpb
push
test
jb
xor
mov
cmp
pushl
mov
inc
out
scas
cmp
insl
aaa
xor
aaa
mov
scas
or
mov
ljmp
loope
or
rcr
jle
aaa
xchg
sarl
or
sub
mov
test
nop
movsb
push
je
mov
add
xor
daa
sti
inc
push
cmp
ja
call
fs
xchg
aad
push
mov
add
pushf
pop
bound
add
out
adc
decl
dec
stc
xchg
imull
imul
das
pop
push
cwtl
xchg
and
inc
pop
movsb
inc
pop
add
sbb
jge
and
mov
mov
xchg
ret
or
pushl
pop
out
push
mov
push
jge
ret
jb
jno
imul
adc
adc
inc
mov
jge
lcall
mov
cli
xchg
pop
in
jno
rorb
xlat
pop
or
mov
mov
stos
in
stc
sub
clc
inc
shlb
xor
jne
pop
mov
decl
jmp
or
jnp
imul
out
cmpsb
ret
jo
mov
mov
daa
cmp
pushl
mov
pushf
mov
sbb
add
jle
ja
in
stos
rcrb
rorl
cmp
jg
xor
subl
rorb
out
xchg
incl
push
xor
mov
jmp
sbb
jns
adc
mov
xchg
outsb
lods
dec
popf
and
imul
jmp
aad
cmovae
and
stos
call
sbb
repz
mov
jmp
not
ror
lea
fbld
cmpb
iret
push
movsl
pop
out
jmp
sti
jp
je
sub
decl
dec
lock
inc
mov
orl
arpl
jp
push
jmp
mov
nop
mov
push
cmp
xchg
push
cmc
jo
out
icebp
and
insb
cmpsl
aam
es
mov
faddl
xchg
adc
adcl
push
or
lret
inc
mov
repnz
fisubl
lahf
mov
dec
push
mov
shll
add
push
or
pop
lock
ja
aaa
jle
mov
cwtl
subl
dec
jns
adcb
dec
jb
mov
sbb
ljmp
aaa
push
sub
cmp
pop
loope
pop
pop
cli
or
cmp
insl
testb
pusha
mov
push
stos
aam
call
add
jle
pop
rol
outsb
loope
stos
lcall
dec
aam
and
xchg
fistpll
push
jmp
leave
jge
loope
arpl
movsb
adc
jmp
adc
aas
inc
sti
scas
add
repz
mov
add
daa
arpl
mov
incl
xor
bound
xor
aas
push
ljmp
cmc
pop
popa
mov
cli
gs
pusha
nop
loop
ljmp
mov
cmovne
dec
cmpsb
sbb
and
pop
ss
iret
sub
xlat
out
mov
mov
ljmp
test
divb
enter
mov
dec
dec
or
mov
mov
push
and
lea
mov
je
push
adc
ljmp
addr16
or
outsb
pop
sub
jmp
ds
scas
xchg
jno
ficompl
jnp
mov
pop
inc
jne
add
cmp
rcr
inc
and
loop
cwtl
or
and
std
popa
add
or
ja
aaa
call
ljmp
imul
das
dec
addl
pop
imul
xchg
movsl
addl
and
lret
push
inc
xchg
in
and
jo
mov
cmc
cmp
popf
mov
in
cltd
push
push
and
subl
imul
cmpb
sub
in
push
xlat
out
jle
cli
repz
mov
xor
enter
pop
notl
or
icebp
data16
jmp
mov
lea
fistpll
stos
outsb
mov
icebp
test
mov
addr16
ljmp
stc
clc
mov
inc
cmp
jmp
dec
clc
or
shl
pop
call
cmp
aam
jp
jbe
movl
mov
cmovle
add
ljmp
jecxz
adc
fucom
push
push
xlat
addl
mov
adc
pop
call
pop
fcomp
subb
hlt
ja
mov
push
xchg
sbb
or
adc
and
decl
sbb
jecxz
cltd
pop
ret
pop
adc
movb
dec
jo
push
mov
cs
repnz
decl
call
mov
shrl
mov
adc
pop
mov
flds
leave
cmp
pushl
push
dec
enter
lock
xchg
imul
cmp
add
lea
sbb
xor
dec
gs
xchg
add
dec
je
fidivl
pop
ljmp
push
xor
push
sub
mov
cld
fsubrl
xchg
pop
cmc
in
mov
lcall
in
das
stos
loopne
aas
ljmp
out
mov
push
pop
ds
fidivrs
stos
mov
mov
fmuls
stc
daa
pushf
cmpsb
fnstsw
inc
push
or
mov
jle
scas
add
stos
daa
xor
in
imul
xchg
pushl
out
movsb
pop
or
mov
or
jecxz
xchg
mov
lods
pusha
iret
push
cmp
dec
xor
rorb
stc
sbb
pushf
add
mov
ret
mov
xorl
aaa
lret
int
mov
dec
sub
shll
mov
or
add
xor
push
add
cmp
mov
cmpb
pusha
add
pushl
add
xor
ss
sbb
xlat
sub
fstps
push
mov
pop
sbb
jmp
lahf
unpckhps
push
mov
or
mov
fnstcw
or
push
out
pop
mov
scas
cltd
dec
or
jbe
les
fcoml
scas
inc
test
xor
mov
incl
xchg
or
mov
cmp
out
push
movsb
repz
xchg
scas
xorb
lea
pushl
icebp
push
mov
js
fiadds
jecxz
sbb
pop
sub
icebp
stc
or
jle
xor
out
pusha
mov
lods
dec
ds
inc
dec
mov
test
add
scas
or
lret
pop
jle
pushl
xchg
inc
test
leave
and
rcll
dec
enter
imul
lcall
or
adc
sbb
lret
es
lahf
or
sahf
and
out
ljmp
cmpsb
pop
jle
lret
xor
rcl
stc
dec
scas
inc
jmp
stc
fadd
jae
pop
clc
clc
outsb
push
stc
call
and
dec
fs
lret
xlat
arpl
fldcw
jo
pop
push
ljmp
scas
lret
repz
xlat
into
cli
clc
loopne
mov
add
ret
mov
inc
arpl
lcall
sbb
fstpl
xlat
or
dec
push
test
push
inc
mov
jmp
sub
and
out
pop
mov
outsb
sahf
jns
xchg
cmp
mov
roll
cmp
inc
out
in
jno
pop
inc
sbb
daa
dec
inc
sub
cld
lods
outsl
mov
adc
stc
lcall
scas
jae
mov
nop
add
mov
jno
ljmp
leave
inc
adc
cwtl
push
xor
out
cmp
adc
ja
aaa
mov
inc
stc
jae
mov
xlat
add
out
scas
jecxz
jl
inc
decl
and
mov
jg
xchg
movl
mov
lods
sti
xchg
mov
dec
push
add
sar
cs
push
add
mov
pop
clc
ja
and
call
in
and
mov
push
lock
cs
mov
mov
aas
arpl
decl
testl
push
nop
in
pushf
jo
test
ja
cmpsl
mov
mov
or
jb
movsb
adcb
mov
mov
mov
hlt
pop
sbb
inc
add
rorb
sub
mov
lcall
dec
push
enter
pop
nop
int3
xor
icebp
addr16
ss
mov
out
or
jns
test
je
add
dec
push
dec
fsubl
arpl
dec
loopne
cmp
ljmp
push
mov
mov
pop
xor
movsl
or
je
insl
es
inc
test
xlat
xor
decl
pop
push
mov
nop
dec
into
pushf
push
or
or
dec
or
mov
sub
or
or
adc
pushl
push
clc
jge
cwtl
test
add
mov
add
notl
sub
int
xchg
call
aas
sub
adc
insb
lock
ljmp
jmp
loope
push
or
aas
jmp
mov
jecxz
push
daa
push
dec
inc
stos
cld
sahf
dec
dec
es
movsb
jbe
sbb
leave
outsb
and
pushl
call
pop
mov
pop
addl
test
jge
xchg
add
lcall
inc
sbb
or
mov
lea
jp
sub
push
pop
xchg
divl
fstl
decl
and
fwait
mov
outsl
movsb
rcll
andb
std
pop
or
lret
pop
cmp
jmp
cltd
or
stos
adc
les
add
jns
push
sbb
sbb
aad
stc
add
popa
cld
outsb
push
adcl
imul
push
arpl
adc
ss
leave
bound
mov
call
push
xchg
test
insl
lcall
mov
jbe
je
loope
fcoml
arpl
jmp
jno
or
sub
pop
dec
sub
dec
testl
push
xchg
lea
loop
ss
jae
cmp
out
call
test
lahf
push
ud0
ljmp
cltd
out
lcall
notl
subb
lcall
mov
inc
inc
repz
xorl
iret
pop
cmp
xor
outsl
mov
lock
pop
lcall
mov
in
dec
fidivs
push
pop
jp
loope
mov
mov
lcall
push
jle
mov
subb
dec
cmp
faddl
loopne
mov
jmp
lods
xor
adc
cmp
pushf
out
imul
pop
jne
sbb
cs
cmp
pushf
sub
lcall
jo
mov
xchg
jl
popa
xchg
pop
jmp
xorb
xor
or
push
and
insb
or
or
mov
add
in
test
jmp
mov
lods
or
adc
dec
fmull
dec
mov
mov
outsb
hlt
jl
adcl
lcall
mov
xor
imul
jl
push
and
mov
lret
std
jmp
sub
mov
adc
popa
adc
imul
sbbb
decl
int3
push
push
dec
loopne
push
adc
pcmpgtb
inc
loop
jp
fldenv
pop
bound
lcall
fistps
fildll
cmpsb
scas
sbb
sti
scas
mov
mov
daa
lret
addr16
and
sahf
incl
in
movsb
jne
pop
push
loope
push
mov
push
jns
or
int3
incl
aad
inc
fcmovnu
shrl
jl
fdiv
mov
sub
daa
or
or
lock
sti
mov
adc
fists
and
jp
jbe
xor
rorb
les
imul
jmp
adc
dec
mov
cli
out
arpl
sbb
movsb
xor
enter
add
jmp
dec
test
cmpsb
inc
sbb
cwtl
das
out
aam
mov
lea
movsl
mov
cmp
aam
pop
js
pop
in
lret
scas
les
sbb
xor
leave
adc
adc
cmp
jmp
int3
cmp
outsb
addr16
xchg
out
les
add
push
adc
ljmp
outsl
into
pop
aam
mov
mov
leave
into
shrb
sti
out
push
call
push
shrw
xchg
xlat
fsubrs
aas
jmp
shlb
xchg
icebp
movsl
fs
dec
test
lcall
fisubrs
or
push
pop
lret
pusha
ljmp
out
cld
cmpl
in
pop
out
jo
xchg
popa
popa
and
jb
dec
xor
add
js
sub
das
mov
xor
jmp
in
notb
lds
push
roll
in
cwtl
mov
test
in
lcall
jle
xor
mov
adc
pop
scas
clc
jle
fildll
and
call
lds
and
push
test
pop
sub
sub
push
mov
adc
ljmp
add
ja
outsb
mov
ret
push
pop
xchg
mov
mov
push
testl
test
jns
mov
fidivl
dec
mov
mov
je
ss
lahf
jae
xorb
out
cmp
xchg
adc
in
subl
lock
in
loop
xor
jae
jbe
dec
and
lock
lcall
mov
xchg
cmp
xchg
mov
outsb
mov
dec
in
push
xlat
sbb
sub
xor
les
mov
xchg
test
call
jl
cmpsl
aas
adc
insl
imul
sbb
imul
or
add
jecxz
pop
sub
jl
loopne
dec
in
jg
cli
jae
lret
sarl
lahf
cmp
test
ret
fdivs
push
inc
lea
fldl
or
ffreep
cs
mov
dec
fadds
lds
out
inc
fcomp
mov
dec
outsl
xor
enter
dec
mov
pop
popa
push
pop
inc
pop
mov
inc
cli
insb
fidivs
lcall
xchg
mov
push
je
mov
cltd
or
out
leave
xor
adc
push
sbb
ljmp
pushf
sbb
dec
fcomps
add
jp
outsl
push
testb
or
pop
lcall
push
mov
jbe
pop
mov
fistpll
gs
iret
pop
ret
pushl
js
movsl
jne
fdivrl
imul
push
nop
mov
pop
xor
add
ljmp
repz
pop
out
aam
out
lret
js
nop
imul
sbb
scas
ds
inc
repnz
decl
sbb
xchg
cmp
icebp
imul
dec
adc
push
ret
push
jg
pop
mov
cmp
jmp
mov
and
mov
sbb
outsb
mov
data16
mov
push
cmpsb
addr16
jno
cli
push
mov
or
or
xchg
pop
dec
rcr
sub
add
and
and
shrl
out
lret
cs
hlt
mov
inc
incl
xchg
and
jle
mov
or
sarl
js
push
push
int
pushl
addr16
xchg
sahf
nop
fnstcw
rclb
mov
dec
mov
ljmp
and
imul
je
addr16
aas
cmp
popa
scas
clc
cld
push
push
or
loope
aaa
mov
sbb
adc
aad
fnstsw
dec
test
mov
dec
sub
decl
nop
lods
sbb
xchg
popa
mov
fdivl
mov
leave
lahf
or
xchg
dec
leave
push
jge
pop
mov
mov
pushl
xchg
fistl
stos
stos
mov
cld
ljmp
ja
dec
shl
decl
outsl
insb
push
cmp
fwait
mov
push
push
mov
xor
sbb
cmc
es
pushl
sub
test
sbb
inc
mov
cmp
xchg
inc
pushl
mov
sahf
fnstenv
imul
sti
fstpl
aad
mov
dec
out
dec
sarb
add
incl
push
movsl
jp
sub
jb
sbbb
xchg
push
and
jle
jb
mov
pop
pop
decl
out
sub
or
ficompl
jecxz
dec
fwait
dec
add
xchg
cmp
mov
ljmp
inc
dec
and
in
and
into
scas
aaa
pop
xor
js
inc
rolb
lods
test
jle
sub
in
in
rcll
mov
mov
inc
jnp
das
cmp
xor
imul
repz
dec
mov
add
loope
popa
add
testb
cwtl
dec
adc
imul
jae
push
dec
add
lcall
pop
in
cmp
xlat
test
gs
cmp
aas
and
decl
bound
pop
mov
jmp
xor
ljmp
fld
cmp
mov
jae
stc
mov
neg
movsb
and
jmp
fmull
mov
js
into
xor
and
lods
mov
and
jmp
movsl
sub
decl
and
mov
push
lds
sub
lock
fcompl
mov
int3
stos
adc
push
and
int
mov
and
fucomp
leave
ljmp
je
js
adc
je
imul
jno
ljmp
lods
lds
pushl
ds
jb
mov
gs
mov
movsb
aam
inc
stos
arpl
sbb
outsb
jo
lret
jmp
cmc
test
jp
divb
cld
repnz
push
sub
and
mov
rorl
mov
dec
decb
insb
mov
lret
aas
dec
cmp
cwtl
std
ja
sbb
stc
aam
jl
movsl
push
sub
mov
mov
imul
mov
pop
fcom
imul
loope
call
incl
ds
popf
in
xor
sub
aaa
les
mov
repz
sub
pop
and
ljmp
ljmp
ja
dec
es
das
das
shrl
jae
cmp
or
fidivl
data16
cld
sbb
bound
and
mov
bound
adcl
adc
inc
fdivr
lcall
into
mov
frstor
out
int
add
mov
jns
cmp
call
shll
outsb
mov
lcall
adc
dec
sarl
fdivr
pushl
adc
sub
sub
sbb
das
xor
scas
lret
rclb
sub
call
mov
jmp
push
jnp
into
xor
sbb
js
push
sbb
aaa
fists
repnz
jg
int3
xchg
ljmp
sub
aad
or
push
xchg
jb
leave
adc
gs
insb
inc
xchg
cmp
dec
cmp
adc
xchg
sub
int3
adc
and
les
fldenv
mov
xorl
pushf
jge
arpl
into
scas
pop
test
dec
jno
repnz
fucomp
aas
jmp
and
iret
inc
jmp
int
or
mov
repz
cmp
pop
xchg
xchg
cmp
jmp
pop
scas
dec
jecxz
push
dec
mov
jns
push
dec
in
xor
js
stos
dec
and
jns
ret
and
or
cli
dec
fdiv
xchg
pop
fcompl
or
dec
xchg
adc
hlt
loopne
incl
jnp
shrl
inc
and
add
stc
sbb
xor
je
aad
jne
inc
xchg
xor
pushl
cmc
mov
mov
out
fwait
mov
mov
lods
add
call
dec
int3
xchg
mov
jnp
cmp
push
lods
adc
repz
shll
lods
fdivl
loop
lds
inc
rol
sub
xchg
cmp
into
mov
stos
dec
cltd
mov
jmp
xchg
outsb
jp
cmp
lea
loopne
gs
fadd
dec
mov
mov
cmp
cmpl
dec
sub
cmp
mov
aas
xlat
cmp
ja
mov
mov
sbb
sub
aas
incl
lods
mov
in
inc
jp
adc
add
clc
test
mov
xorb
xor
mov
dec
jp
movsb
or
fs
add
mov
xchg
mov
pushf
test
lea
div
lahf
pop
mov
out
add
jl
cmp
jl
xchg
pop
cli
jp
add
mov
insl
or
mov
mov
lods
cmp
push
test
and
fadds
xchg
and
test
pushl
movsl
mov
jl
fs
frstor
sbb
pop
cmp
lods
sti
shrb
adc
outsb
call
push
and
xor
dec
xchg
loopne
mov
mov
rorl
lods
pop
lahf
inc
dec
add
faddl
shll
mov
cmpsl
fisubrl
or
nop
dec
mov
arpl
lcall
push
add
pop
pop
jge
push
ljmp
pushf
sub
add
xor
xor
addr16
dec
mov
cwtl
jo
pop
add
ficoml
and
outsl
js
adc
ud0
call
push
xchg
lods
enter
dec
and
dec
pop
fsts
mov
push
cmp
sti
xchg
call
jmp
pop
cltd
add
xchg
mov
mov
push
test
pop
lcall
in
jmp
or
sahf
xchg
in
test
push
or
repz
in
movsb
and
call
pop
nop
xlat
sbb
mov
lcall
and
cli
push
jg
xor
incl
outsl
aam
repnz
jle
xor
fstl
push
rclb
mov
rolb
push
and
jp
adc
enter
jmp
push
lock
xbegin
ljmp
iret
ss
cmp
cltd
push
test
sahf
cmc
xchg
aas
ljmp
push
sub
decl
daa
stc
pop
mov
lea
lods
call
mov
stc
or
adc
ljmp
inc
cmpb
hlt
mov
pop
pop
cmp
and
xor
xchg
cmp
push
inc
imul
sub
or
xchg
fnstsw
les
jmp
fdivrs
ljmp
push
jle
mov
mov
test
adc
add
stos
fstps
cltd
inc
call
out
andl
loopne
push
mov
cmpsl
neg
pop
bound
inc
sub
mov
jmp
pop
dec
scas
cmp
jp
sbb
flds
mov
xor
inc
stos
test
and
js
arpl
decl
sub
lret
popf
xchg
popa
dec
sub
aam
adc
scas
sbbb
cmp
mov
inc
jl
sub
incl
repz
subl
std
or
mov
adc
mov
inc
cmp
decb
loope
and
andl
adc
push
ret
add
data16
ja
stc
stos
call
mov
scas
shll
cld
pop
lahf
jno
fcmovu
stos
out
mov
or
mov
mov
jle
mov
add
jne
lret
in
pop
nop
xchg
pusha
xor
mov
clc
or
mov
cltd
call
push
fcomp
orb
je
and
pop
or
ret
mov
push
cmp
push
xor
jne
mov
add
gs
jae
xchg
es
inc
mov
pop
sub
xchg
fs
pushl
in
inc
and
test
sarb
jbe
mov
lcall
push
sbb
insl
mov
add
pushl
cmpsl
pop
add
inc
xchg
xchg
sbb
mov
repz
xchg
dec
jbe
test
push
sar
call
es
jmp
or
popa
aam
and
jns
mov
shll
adc
mov
push
decl
cmp
maskmovq
clc
push
call
and
jne
and
push
xor
clc
or
inc
dec
pop
repz
stc
mov
int
jns
js
xchg
and
push
je
lods
inc
push
mov
or
dec
cmc
mov
sub
imul
xchg
loope
lcall
pop
sahf
dec
mov
aam
dec
jle
jecxz
push
fwait
xchg
adc
dec
mov
and
cmp
es
inc
fwait
mov
pop
daa
sbb
cmpsb
adc
addr16
sbb
mov
push
incl
and
xchg
mov
pop
xlat
daa
loop
mov
and
cmp
les
add
push
pop
aam
dec
test
or
std
loope
mov
and
data16
fisubrl
loopne
pop
push
outsl
dec
sbb
jmp
cli
subb
lret
xchg
inc
aam
or
ljmp
mov
stc
push
cld
or
adc
adc
fcomip
shrl
or
andl
push
aaa
add
mov
sbb
ja
jp
adc
inc
dec
push
loope
lods
xlat
push
inc
cmp
jmp
pmulhw
sub
sub
aam
fsubl
pop
mov
mov
out
call
stc
pop
and
sub
and
leave
dec
xlat
aas
add
sub
and
jo
push
push
or
das
adc
sbb
ret
cltd
dec
int
aas
clc
pop
stos
test
cmpsb
pop
push
daa
cmp
jmp
mov
push
push
stos
imul
sub
pop
mov
push
dec
out
cltd
cmpsl
lret
jmp
adc
mov
xor
xchg
ds
or
insb
xchg
mov
pop
outsb
xchg
mov
ret
jmp
lods
mov
mov
pop
scas
sub
cli
popf
cmp
dec
test
or
dec
les
jmp
cmp
in
shrb
fldcw
lock
arpl
test
fstpt
insb
push
pop
cs
fldcw
push
insb
sti
dec
movsb
and
test
shl
push
xor
call
pop
mov
xlat
arpl
sahf
mov
cld
negb
je
pop
and
jo
pop
fsubs
mov
pop
push
jmp
jne
btc
xor
cmc
lret
and
data16
push
pop
sub
lahf
jmp
inc
mov
daa
sbbl
mov
out
sub
stos
mov
adc
jp
adc
ljmp
test
and
or
inc
int3
sbb
scas
dec
ljmp
sbb
aaa
imul
je
vmovsd
push
incb
pop
jno
jmp
sub
xchg
pushl
mov
ret
add
adc
fisubrs
loop
dec
mov
fstl
call
pop
mov
hlt
inc
cltd
jle
jmp
mov
sub
dec
je
pushf
xor
insb
pop
cmpsb
dec
add
call
sub
push
iret
scas
or
xor
pushf
pop
out
xor
adc
xchg
shr
js
xor
lock
enter
ljmp
adc
test
sbb
sbb
shrb
jae
shll
add
incl
push
mov
mov
dec
pusha
mov
fildll
inc
aad
in
jp
mov
decl
pop
dec
mov
js
xorb
inc
xchg
jb
je
cmpsl
mov
incl
sti
out
mov
push
adc
out
pop
xor
add
pop
dec
mov
mov
shlb
stc
aam
push
arpl
pop
data16
dec
or
test
dec
xor
je
mov
std
cmp
cmpsb
fsubl
lahf
or
add
jmp
jmp
pushl
cld
inc
jp
xchg
cmp
cmpsb
sub
jecxz
loopne
jge
or
popf
mov
inc
movsl
daa
lcall
roll
roll
arpl
stos
pop
pop
pop
pop
ror
mov
jno
add
lcall
sbb
inc
icebp
add
or
push
inc
test
inc
and
lret
cld
push
call
push
sbb
pop
in
gs
jb
les
sub
push
call
test
push
or
shll
pushl
mov
imul
out
mov
shll
mov
sbb
lods
pop
sbb
ljmp
mov
xor
fstps
push
pop
loopne
xchg
add
mov
mov
incl
inc
outsl
xchg
xlat
outsb
xor
sbb
pop
mov
int3
xchg
movsl
in
in
decl
bound
cld
xor
mov
pushf
cmp
out
inc
adcb
dec
mov
outsl
std
mov
aam
and
rclb
aad
inc
xchg
inc
dec
pop
cmp
adc
ljmp
pop
ret
mov
lahf
sbb
std
jmp
aas
shrl
fildl
stc
mov
lods
int
xchg
cmp
ljmp
xorl
mov
out
dec
push
jns
test
jo
das
das
mov
call
out
dec
pop
inc
dec
in
jnp
or
shll
lock
iret
insb
mov
incl
xchg
cld
popa
xor
mov
pop
je
mov
lret
test
fcoml
sub
test
decl
jp
mov
addr16
out
mov
add
mov
mov
icebp
decl
sub
jle
push
dec
mov
push
loop
mov
repz
xor
ljmp
cmp
sbb
rcrb
mov
push
popf
lret
mov
or
imul
push
ss
bound
inc
enter
dec
movsl
jecxz
jg
popf
and
inc
cmpsl
mov
leave
repnz
ds
outsb
movsl
push
xor
push
sahf
adc
xchg
sbb
insb
lock
inc
xchg
lock
ss
mov
xchg
test
mov
cld
jecxz
push
add
xchg
out
mov
inc
and
and
ret
cmp
enter
jb
lcall
addl
lcall
inc
mov
or
leave
test
add
dec
cmp
or
and
incl
xchg
mov
add
daa
cmp
stos
xor
cs
add
sbb
jns
dec
imul
lret
adc
mul
aas
stos
ret
shll
or
cmpsb
xchg
cmp
dec
clc
add
fisubrs
mov
cmp
mov
inc
cmpsb
adc
push
decl
mov
mov
mov
xchg
flds
movsl
idivl
nop
push
xchg
push
pushl
inc
cmp
fidivrl
stos
mov
jl
lea
jae
lock
ljmp
push
push
mov
xchg
cmpsl
mov
mov
push
dec
jmp
lret
add
pushl
adc
cmovle
in
xlat
push
jmp
ror
cld
jge
pop
push
xchg
jp
and
nop
dec
out
xor
call
lahf
pop
dec
fisubrs
pop
sbb
and
aaa
shll
aam
pop
push
jle
daa
adc
jo
push
incl
popf
push
xor
dec
lret
lret
add
xchg
or
dec
mov
push
ficoml
call
loope
stos
out
mov
das
pop
nop
dec
rcrb
dec
repz
mov
push
ljmp
sub
xlat
sub
lods
into
lods
inc
lea
insl
clc
jne
push
sti
inc
and
cmp
mov
into
push
mov
inc
lret
rol
jns
lret
out
cmc
add
mov
decl
stc
xor
ficomps
jl
ljmp
cmp
pop
ss
das
add
mov
jl
cmp
lcall
xchg
sub
adc
or
sbb
mov
call
aam
das
mov
pusha
add
mov
dec
lcall
and
stos
lret
stos
ja
xlat
decl
gs
outsb
inc
std
jo
mov
lods
subl
aaa
std
lahf
lock
fcoml
movsl
pop
jecxz
lcall
xchg
cmc
testl
repnz
in
jae
dec
call
gs
in
mov
mov
jmp
pop
inc
sbb
adc
ret
jb
sub
popl
xchg
std
loope
call
lds
jmp
jmp
jo
xchg
stos
cmpsb
and
xor
test
adc
and
lcall
clc
decl
lret
jl
jmp
es
cmpsl
js
push
dec
cmc
mov
aas
push
sbb
in
out
jg
lods
push
popf
scas
int
xor
push
push
dec
insl
repnz
cltd
ficompl
mov
lcall
divl
sbb
aaa
inc
icebp
xor
ss
outsb
push
push
dec
insl
outsl
std
inc
rolb
pop
aad
cld
push
mov
in
call
mov
ljmp
pop
sbbb
lret
out
cmpb
sbb
ret
call
mov
add
divl
mov
out
cmp
mov
jmp
das
leave
mov
cmp
shlb
shrb
not
pop
fdiv
fwait
int
inc
insb
ljmp
push
xlat
xchg
fs
inc
cmp
inc
in
pop
mov
cld
adc
js
add
sub
lcall
cli
mov
lcall
mov
loopne
frstor
xchg
xor
decl
ficoml
push
daa
jo
and
mov
xor
push
hlt
stos
fisubl
mov
shll
mov
adc
sub
jmp
fildll
sbb
mov
inc
into
pop
sbb
incl
ficoml
addr16
and
xchg
rclb
dec
adc
add
jmp
add
fstps
cmp
mov
outsb
mov
int
and
inc
sbb
pushl
and
mov
repz
sbb
push
jl
int3
inc
pop
dec
mov
pop
je
xor
stc
hlt
dec
ret
cli
jmp
xchg
mov
mov
and
je
aad
sub
hlt
xchg
xchg
xchg
cmp
hlt
dec
loope
out
rol
test
sub
roll
mov
mov
lods
popf
xlat
fdivs
aas
mov
cmp
stos
sbb
insb
in
sub
je
sbb
les
jmp
pop
imul
and
dec
cltd
sub
aam
push
jne
pop
xchg
mov
jbe
sbb
cmp
dec
adc
mov
mov
pop
mov
push
inc
mov
test
jne
pushl
or
insb
jae
inc
ss
dec
pop
rol
insb
shlb
jnp
popf
sbb
jnp
jmp
sahf
stos
mov
mov
and
mov
lret
mov
cmpsl
js
mov
mov
jmp
xlat
mov
mov
mov
cmp
jns
jns
mov
xor
xchg
addr16
fstps
add
rorl
lahf
mov
xchg
test
jno
or
outsb
jmp
stos
push
arpl
call
xchg
mov
xchg
outsl
mov
mov
aad
movsl
xor
push
adc
divl
fcmovnb
sub
stos
sub
mov
xor
mov
and
inc
xchg
scas
or
sbb
xlat
mov
cmp
sbb
sbb
lcall
jle
jae
cmpsb
fisubl
or
xor
imul
stos
js
leave
aas
sbb
jmp
jmp
loope
lret
pop
pop
mov
add
xlat
in
scas
sahf
out
call
jns
jecxz
sub
rcr
push
mov
mov
mov
arpl
enter
in
or
add
inc
dec
ret
cmp
testl
fmuls
in
fs
in
dec
jg
incl
ret
mov
xor
cmp
and
out
popf
xor
test
call
das
insb
call
cmpsl
das
lods
and
sub
clc
or
jmp
incl
les
mov
lcall
and
adc
add
sub
xchg
pushl
lahf
sbb
ja
in
clc
add
xchg
inc
outsl
js
dec
fwait
xchg
jnp
test
inc
loopne
pop
push
clc
adc
jmp
lea
into
popf
aam
jmp
sbb
dec
push
push
xchg
lahf
out
loope
pop
jmp
add
lods
mov
daa
notl
mov
and
insl
ljmp
in
fildl
mov
cmpsl
push
loopne
jmp
xor
das
xchg
dec
stc
xchg
call
dec
clc
jno
cmpsl
mov
dec
adc
test
movl
ljmp
xchg
lds
test
fcomps
push
adc
jle
filds
testl
xlat
adc
jne
rep
sub
movsb
lods
roll
mov
lods
bound
call
call
test
sti
mov
jmp
cmp
pushf
push
enter
rorb
cmpsl
push
pop
dec
insb
jns
xor
fwait
xor
subl
mov
fdivrl
dec
incl
arpl
add
adc
mov
lret
je
pop
aad
mov
ljmp
xchg
mov
int3
fstpl
xchg
xor
fsts
mov
cmp
sub
adc
ret
lods
mov
ljmp
xor
stos
xor
push
ja
mov
and
ds
pop
loope
cmp
imul
cld
mov
adc
lods
in
aam
shll
pop
mov
test
adc
leave
mov
lcall
cmp
cli
hlt
je
add
lds
xor
jb
out
sar
jmp
dec
mov
push
inc
cmovne
ss
adc
les
gs
sbb
push
xorb
push
adc
and
sub
add
mov
ljmp
loope
xor
bound
pop
lret
fidivrl
cmc
mov
adc
mov
aaa
dec
in
aad
sbb
jo
push
mov
mov
sbb
pushl
adc
jmp
push
add
and
data16
mov
or
inc
cmp
ret
cmp
xor
cltd
pop
sbb
icebp
popf
pop
rolb
inc
mov
pushl
jle
mov
scas
sahf
mov
mov
test
or
fs
call
insl
sbb
inc
ja
mov
sahf
push
aad
adc
test
arpl
aaa
shll
push
das
dec
lds
sub
aaa
pop
int
les
rcr
pusha
sar
xor
pop
xchg
fwait
push
incl
push
stc
push
cmpsb
add
test
push
mov
into
pop
out
sbbb
mov
call
jno
movsl
lret
shlb
arpl
addr16
gs
adc
roll
jge
mov
sahf
mov
mov
insl
loope
daa
mov
xor
xor
xchg
inc
out
inc
aas
lods
adc
xor
imul
je
cmpsb
pop
cmp
pop
ja
or
add
mov
call
sbb
or
add
ljmp
sub
jo
push
adc
dec
incl
cwtl
popf
jp
rcrl
xchg
push
sub
addr16
data16
int3
test
sub
jnp
inc
jne
xor
or
mov
pop
scas
xlat
subb
push
out
xor
ljmp
xchg
cmpsb
test
popa
cli
lret
xor
mov
add
dec
int3
out
pop
sbb
xchg
idiv
jmp
hlt
loopne
mov
inc
lods
push
cmpsb
fimull
jmp
xchg
aam
sbbb
jbe
mov
pushl
test
mov
lock
movsb
sbb
pop
inc
gs
rcrb
sbb
push
cs
ss
insl
pop
les
stc
mov
xchg
int
jl
add
aam
sbb
jmp
pop
fistl
cli
cmp
pusha
mov
pop
pop
sbb
es
xchg
xor
aam
decl
sarb
decb
push
dec
dec
test
pop
or
push
cmp
xor
mov
pushl
add
adc
shlb
test
lods
adcl
push
fmull
mov
jmp
test
cwtl
lcall
sbb
jle
lock
jbe
imul
enter
pop
xchg
test
inc
loopne
mov
pushl
and
in
testl
loopne
xchg
mov
int
rolb
cmpsl
and
incl
shlb
mov
cmp
call
sbbl
xchg
adc
jmp
push
ss
lock
out
cld
aas
pop
pop
enter
out
movsb
mov
pop
mul
push
inc
mov
pushl
ret
cs
das
outsl
pop
aas
jmp
aam
fsts
in
cld
xchg
sub
pop
fistps
fcmovbe
es
adc
cld
pushf
xchg
sub
mov
loope
popf
and
out
jno
sbb
cmp
pop
jo
add
ja
scas
gs
cmc
or
mov
jbe
cwtl
ljmp
hlt
pop
js
add
or
loopne
or
dec
mov
add
or
icebp
shr
jae
inc
movsl
rolb
sbb
ljmp
lcall
lock
cmp
pop
movsb
outsb
mov
sub
mov
call
sbb
xchg
sbb
repz
xor
jmp
jg
stos
loopne
inc
cmp
add
ljmp
push
dec
push
jecxz
insb
cltd
sub
popf
movsb
pop
lock
imul
data16
and
dec
dec
lds
les
test
outsl
push
or
data16
cmpsb
sbb
adc
dec
mov
jmp
mov
leave
xor
sub
sahf
icebp
cmpsb
fcompl
test
inc
notb
pushl
or
xchg
jmp
hlt
or
xchg
sub
jmp
dec
pusha
xchg
or
jmp
mov
pop
cmp
hlt
inc
mov
cwtl
ficoml
jmp
pop
sbb
lcall
or
fsubl
aaa
push
stos
mov
mov
mov
pop
out
in
loope
repnz
push
mov
and
or
adc
icebp
sbb
lock
jp
aad
push
lods
jmp
out
fwait
inc
mov
lcall
cmpsb
bound
cmp
pop
negl
fmull
jmp
or
leave
pop
dec
jecxz
xchg
or
xor
enter
pop
xor
dec
call
lcall
mov
popf
imul
stos
push
inc
mov
cmpsl
mov
mov
outsl
imul
inc
cmp
bound
ret
or
divl
in
ret
orb
int
clc
pop
cmp
lock
sub
inc
cmp
and
add
insl
fcompl
jns
imul
incl
dec
in
arpl
lahf
mov
sub
gs
add
jae
pop
jmp
pop
push
jge
inc
adc
test
pop
adc
sub
ds
ret
dec
out
pushl
je
sbb
fimuls
add
push
test
rorb
gs
ljmp
arpl
gs
push
cmp
push
dec
in
mov
enter
pushl
and
mov
mov
in
xor
or
fwait
lds
shll
or
xor
ljmp
inc
in
int
scas
out
adc
lock
adc
xor
fsubrl
data16
ljmp
mov
mov
cmpsb
in
dec
dec
ljmp
adc
repnz
add
cmp
xor
ret
push
pop
popf
negb
or
pop
iret
into
jmp
repnz
push
ret
sbb
call
arpl
push
mov
fmul
aam
fucomi
ds
call
jecxz
les
shl
sbb
adc
sub
in
mov
adc
lods
jmp
or
scas
fsubl
xorl
dec
inc
sahf
or
decl
push
mov
dec
pop
lea
pushf
addr16
xchg
in
pop
daa
mov
jmp
in
rcrl
out
sahf
insl
push
jecxz
inc
cmp
fcoml
loop
mov
push
into
lret
mov
xlat
rolb
add
mov
push
jg
int3
jns
cmpsb
insl
test
loopne
incl
movsl
xor
xchg
jbe
xor
test
jo
leave
cltd
xchg
adc
call
lods
inc
or
imul
pop
repnz
push
pushf
sarb
sbb
lcall
fcos
jmp
sarl
fsub
popf
jmp
or
jmp
or
adc
pop
mulb
dec
lods
inc
shrb
fsubrs
sahf
insb
lods
push
fistpll
push
pop
fsts
loope
stos
dec
lcall
pop
inc
inc
sub
sbb
fidivrs
shll
pop
rcrb
sub
lcall
jae
repz
je
lds
push
mov
jmp
test
inc
lods
dec
jmp
out
xor
out
lock
rcr
pop
xchg
loope
push
lea
adc
adc
xor
jp
bound
or
ds
cmp
fdivl
aaa
fldlg2
test
xor
loope
in
pop
or
and
call
loope
cs
das
js
in
push
das
mov
adc
push
xchg
sub
call
adc
shll
xor
cmpsl
sbb
cmc
pop
pushf
jns
add
sar
pushl
jl
and
bound
daa
push
gs
push
out
mov
das
jo
lea
fcoml
fnstsw
pop
popf
in
shll
clc
inc
add
xchg
int3
daa
add
subl
incl
aas
xchg
inc
sub
cwtl
lock
jg
shll
add
mov
lcall
loopne
pusha
je
jecxz
jo
sub
jecxz
pop
fs
aad
pop
fimull
test
adc
ljmp
or
add
mov
and
mov
jo
hlt
stos
imul
sbb
lcall
add
aam
inc
jge
adc
inc
mov
pop
jl
in
sub
gs
decl
pop
mov
pop
gs
cmp
push
mov
cmp
add
jns
cltd
cmp
incl
arpl
js
cld
inc
loop
sub
cmp
lods
mov
call
sub
popa
cmc
cmp
popf
jecxz
imul
lds
test
or
xchg
hlt
mov
pushl
mov
cmp
aad
adc
bound
adc
in
test
or
ljmp
lret
push
inc
xor
add
sbb
stos
and
mov
pop
push
mov
cmp
mov
add
pop
lea
pusha
pusha
cltd
or
inc
mov
es
xchg
push
ds
incl
sub
jbe
adc
andl
in
mov
push
iret
out
cmp
sti
or
pushl
xchg
push
subb
add
pop
mov
mov
iret
call
or
and
in
scas
mov
test
insl
mov
cmp
ss
xchg
mov
pushf
mov
mov
xor
mov
jmp
decl
mov
pop
and
xchg
cmp
push
push
stos
cmp
insl
movsl
jmp
decl
fcmovnu
aaa
call
addl
sbb
fistl
icebp
clc
mov
cli
push
incl
lret
sahf
xchg
mov
adc
enter
mov
lea
ret
stos
pushl
cmp
jmp
notb
inc
cld
add
add
out
pop
test
rcrb
lcall
jl
xchg
push
addr16
loop
sbb
pop
vpcmpgtb
inc
test
xor
loopne
sub
pushl
push
inc
push
xchg
sbb
rolb
jbe
leave
sbb
hlt
jmp
pop
pushf
pop
pushl
js
inc
testl
scas
push
and
pop
movsl
xchg
shlb
pushl
neg
jbe
repnz
aam
inc
in
int3
pop
xchg
xchg
mov
incl
push
repz
mov
jge
and
loope
jmp
aad
fidivs
aad
decl
andl
sbb
jl
faddl
repz
sbb
push
mov
pushl
in
push
outsl
in
int
cwtd
popf
lret
or
fdivrp
and
or
decl
mov
scas
add
sub
pop
push
dec
cmp
mov
inc
sub
cmc
and
cli
or
adc
pop
test
ficoms
lods
ret
test
inc
imul
cmp
je
loopne
mov
adc
jnp
add
je
xchg
cwtl
mov
inc
and
ljmp
or
nop
mov
stos
stos
sub
pop
fs
imul
gs
fidivrs
jnp
fwait
rcrl
andl
dec
inc
pminsw
mov
ret
stc
sub
inc
lcall
mov
xchg
push
cld
cs
test
push
mov
jae
jae
push
mov
mov
out
mov
rcll
test
pop
or
dec
cmp
xchg
mov
xchg
or
loopne
lods
or
dec
xchg
push
push
or
fcoms
loop
mov
aas
mov
addb
iret
push
and
jp
adc
xchg
inc
testl
jns
mov
xor
rcrl
or
add
dec
sub
inc
mov
jns
fcmovnu
fstpl
mov
outsb
leave
pop
jbe
mov
pop
inc
jle
inc
push
pop
sbb
jl
lea
pusha
out
pop
in
scas
adc
lods
hlt
inc
pop
mov
pushl
lea
mov
lret
negl
mov
out
inc
je
icebp
sbb
loope
ffreep
pushl
xor
xchg
mov
mov
inc
iret
popa
mov
xor
cmpsl
je
fadds
lret
cmpsb
sub
test
clc
stos
mov
and
call
jmp
mov
jmp
int3
mov
imul
or
cmp
xor
in
add
mov
mov
aam
ds
sub
lods
ds
adc
jl
call
sbbl
repz
in
xor
in
enter
clc
fcompl
push
lods
cmp
dec
stos
fwait
icebp
sbb
mov
je
mul
imul
push
into
pop
cmp
arpl
jmp
mov
or
and
call
cmpsb
and
popf
sbb
lods
leave
shrl
pop
add
decl
cmp
or
xchg
lahf
icebp
and
inc
adc
stc
dec
dec
jb
imul
mov
adc
popa
lcall
adc
push
adc
pop
cmpsb
fisttpl
cwtl
xor
sub
and
mov
lret
jnp
ljmp
jnp
xor
xor
sbb
add
push
roll
in
hlt
in
cli
fcomps
sub
movsl
xor
int3
fsubrl
mov
inc
lcall
out
stos
xor
lea
ja
ljmp
out
jp
sahf
shll
lds
arpl
mov
jmp
jbe
stc
mov
jb
outsl
or
push
cmp
xchg
pop
inc
clc
jno
lods
dec
lods
shl
dec
pushl
mov
and
pusha
dec
mov
and
push
insb
pop
xchg
gs
popa
pushl
shl
sub
cmc
push
aad
test
inc
out
rorl
jecxz
cmp
jmp
mov
imul
and
push
xchg
jbe
xchg
xchg
das
adc
lock
fwait
inc
dec
push
aad
jmp
loop
cmp
dec
add
push
rorl
jmp
loopne,pn
push
mov
fstpt
xor
das
loop
and
jae
mov
mov
pop
and
jmp
dec
cmp
adc
sub
ret
ret
adc
shll
xor
push
cmpsb
in
loopne
mov
decl
fnstcw
je
call
stos
insb
imul
into
add
mov
add
dec
pop
out
dec
ds
out
out
dec
xchg
jp
inc
inc
mov
decb
xchg
xchg
repnz
out
int3
hlt
je
pop
dec
sahf
arpl
gs
mov
inc
lods
mov
rorl
jle
aaa
mov
jmp
and
pop
insl
xchg
fsubrs
stos
fwait
mov
stc
into
stos
jl
and
jmp
mov
xchg
loope
mov
outsl
xor
mov
fbstp
xor
lock
adc
pushl
stc
jbe
and
movsl
cmp
movsb
xchg
lock
je
xchg
jge
shrb
inc
inc
xchg
pop
lcall
mov
cmpsb
iret
nop
sbb
push
fiadds
jecxz
mov
call
movsb
xor
rcrl
ljmp
dec
shl
pusha
add
dec
int
cld
outsl
popf
sub
repnz
ja
sbb
add
in
sbb
xchg
inc
sbb
iret
inc
dec
push
mov
xor
mov
ljmp
cmp
pop
mov
jno
sbb
icebp
cmp
cmp
cmp
lret
insb
adc
adc
leave
or
cmp
loope
scas
fptan
xchg
add
outsb
jmp
sti
pop
xchg
jp
or
in
xor
push
pxor
xchg
popa
pinsrw
fdivrl
imul
test
jo
sub
cmp
adc
dec
lcall
popl
arpl
push
dec
push
push
fs
add
mov
push
cmp
pushl
sub
fidivs
pop
sub
push
and
lock
lcall
test
fisubs
cmp
xor
daa
cltd
adc
xor
adc
jns
fmull
sub
out
and
lcall
icebp
pushl
mov
in
je
aad
mov
add
adc
jne
cli
rolb
or
decl
push
in
cltd
add
mov
shll
jne
push
mov
out
pop
lock
incl
add
fwait
inc
out
int
jns
repz
ja
out
xor
movsl
or
pop
jp
addb
das
push
xchg
xchg
into
add
insl
rcrl
out
mov
clc
xor
pop
js
mov
mov
repnz
push
pop
push
in
pop
and
test
int3
mov
push
jmp
push
inc
lcall
lret
add
insl
inc
push
movsb
pop
adc
add
inc
xor
sub
add
ljmp
mov
out
dec
mov
dec
mov
or
rorb
nop
pop
inc
imul
std
jg
xor
stc
xor
pop
pop
dec
xchg
rorl
mov
mov
mov
dec
mov
cltd
sbb
lock
orb
add
test
arpl
ljmp
incl
add
ret
mov
jmp
add
test
sti
sahf
push
adc
xchg
incl
faddl
int
xor
mov
xchg
cmp
imul
dec
syscall
ss
mov
adc
mov
push
fisubl
out
jp
mov
dec
push
sbb
call
and
push
mov
dec
cmc
scas
lret
mov
and
cli
test
mov
pushl
pop
jg
lcall
and
out
mov
cld
je
inc
cmp
movsb
rol
call
pop
imul
jns
in
mov
xchg
sbb
fdivr
dec
push
xchg
pop
ret
pop
in
call
pop
lock
dec
test
cmp
nop
pop
inc
jbe
push
and
leave
pop
mov
push
xor
lcall
in
cli
inc
sti
test
ret
data16
mov
push
mov
push
repnz
add
or
jmp
cmp
or
jbe
mov
ret
lods
xchg
xchg
or
dec
fdivrp
lcall
mov
xchg
pop
push
adc
pop
aam
sub
mov
insl
inc
and
int3
dec
xor
daa
add
dec
decl
into
mov
and
in
mov
mov
or
mov
pushl
sahf
lret
iret
dec
and
out
subl
imul
out
xchg
push
push
or
inc
adc
push
cltd
aas
ljmp
lahf
mov
dec
mov
pushl
bound
push
mov
cmp
fstpl
shr
pusha
cmp
std
inc
incl
inc
stos
mov
iret
push
push
popa
hlt
ss
es
or
xchg
in
and
or
mov
dec
push
lods
shll
add
inc
adc
sti
ret
add
mov
mov
arpl
cmp
popa
jg
movsb
sbb
pop
add
push
push
pop
sbb
adc
sti
lcall
mov
sbbl
xlat
inc
in
or
mov
cltd
fidivs
cmp
cmp
lcall
sbb
in
inc
xchg
stc
inc
cld
push
or
or
push
push
arpl
adc
lods
sar
jmp
xor
or
adc
rcrb
les
sub
sarb
sbb
jle
xor
jmp
cmpb
popa
push
das
xorb
out
add
fisttpll
outsb
lcall
mov
mov
fsubrl
mov
rcl
pop
dec
rorl
out
out
jo
aas
mov
inc
out
mov
call
xchg
sub
xchg
xlat
int
jo
jmp
sbb
inc
adc
mov
in
movsl
jne
xchg
shll
adc
cmp
xor
daa
addr16
decl
ret
movsl
sub
and
add
or
icebp
push
bound
gs
lretw
fistpll
jmp
adc
mov
sbb
lahf
cmp
push
mov
lahf
aaa
inc
call
int3
insb
jo
incl
ret
test
adc
aaa
add
xchg
dec
jge
stc
pop
aaa
xchg
lock
xor
test
and
and
ljmp
add
loop
push
cmp
pop
cmpsb
jbe
outsl
mov
in
lcall
ljmp
push
push
pop
das
xor
pusha
insl
jmp
inc
mov
sbb
cmp
lea
push
bound
jle
inc
adcb
push
sbb
lahf
ret
dec
jg
jge
into
das
in
fcos
decl
pop
xor
xor
adc
xchg
adc
push
push
mov
mov
pushf
pop
sbb
jb
incl
rol
pusha
cld
mov
xchg
xlat
xor
jno
sub
mov
mov
dec
sar
mov
lret
jmp
stos
lret
xor
mov
into
jbe
lea
insl
sub
lods
inc
jo
add
xchg
loop
cmp
cmp
add
insl
xchg
jmp
jmp
jb
shl
mov
xor
repnz
aam
cmp
bound
jge
out
lcall
or
sti
sub
mov
jae
cmp
aas
sti
xlat
int3
pusha
hlt
inc
dec
fidivrl
mov
push
faddl
mov
dec
adc
lock
add
loope
imul
call
cwtl
pop
std
movsl
sbb
cmp
scas
mov
lcall
movsb
subl
mov
jmp
jno
fyl2x
pop
or
or
repz
pop
sbb
cmc
incb
push
push
test
pop
and
sbb
push
inc
mov
pop
pop
sbb
loop
in
shlb
sar
call
nop
inc
ret
dec
xor
mov
adc
movsl
jmp
cmp
int
add
sub
inc
ret
mov
jno
and
sahf
push
cmp
cmc
inc
push
aam
outsl
cmp
fsubrl
fisttpl
lret
or
jg
inc
or
pusha
xor
mov
cwtl
incl
fisubrl
cmc
inc
adc
popa
fstp
mov
bound
loopne
call
push
gs
push
jg
mov
test
mov
xor
gs
jecxz
sbb
std
aam
mov
cmp
outsl
dec
mov
in
fildll
mov
jo
shlb
and
stos
arpl
lcall
cmp
mov
push
and
fldcw
enter
mov
imul
adc
jae
push
fbld
incl
lahf
repnz
or
pop
stos
mov
lods
adc
in
jmp
out
sbb
sub
mov
in
testl
addb
ljmp
bnd
pop
pop
cmp
sub
aaa
push
pop
and
out
ret
cwtl
scas
inc
ret
sub
xchg
shrl
xchg
or
in
data16
sbb
aas
fucomi
cli
popf
mov
xor
sbb
push
scas
mov
test
fmulp
sbbb
idivl
mov
leave
dec
out
add
mov
mov
lock
dec
pop
ja
test
decl
or
int
xchg
shlb
mov
aaa
fcomps
hlt
idivl
es
pushl
cwtl
lret
fadd
inc
sahf
gs
xor
push
inc
or
cmp
mov
aam
jecxz
jmp
popl
jbe
cwtl
add
in
xchg
fadds
std
sub
sub
jmp
mov
dec
pop
mov
adc
xchg
mov
lea
pusha
addr16
int3
mov
daa
mov
adc
cmp
mov
cmpsl
test
xor
add
sbb
fstp
sahf
xlat
test
stos
push
pop
jle
mov
mov
sub
sbb
mov
jmp
dec
adc
xchg
dec
jl
hlt
dec
push
dec
scas
pop
cmp
lea
or
jg
iret
test
mov
mov
popa
fdivrp
incl
outsl
xchg
fwait
mov
push
mov
fcom
ffreep
ljmp
gs
inc
andb
inc
out
loopne
fldenv
add
out
and
or
movsb
mov
pushl
xchg
decb
sub
je
je
inc
out
sub
jle
push
je
jge
inc
or
popa
add
hlt
mov
pop
repnz
cltd
insb
xor
fprem
and
imul
aas
ss
loope
popa
jnp
subl
push
addr16
push
scas
dec
ficompl
mov
ljmp
push
xchg
out
push
mov
and
jns
xlat
xor
dec
pop
in
sub
jmp
push
aaa
xor
pop
mov
lods
cmp
dec
daa
sahf
outsb
out
rcll
jns
fistpll
call
fwait
mov
loope
cmp
mov
sbb
mov
jne
in
jg
jmp
mov
mov
cmp
jl
out
jecxz
sbb
lahf
adc
sub
decl
mov
pop
xor
pop
test
imul
sub
outsl
cmc
xchg
loopne
call
mov
mov
push
test
mov
mov
pusha
adc
push
sti
ljmp
subb
jae
jecxz
stc
rcr
in
xchg
scas
cld
and
adc
dec
fnstcw
push
mov
test
movsb
and
push
dec
popa
loope
mov
sub
cmp
lcall
andl
out
fisttpll
dec
xor
pop
mov
iret
cmp
testl
pushl
xorl
mov
addr16
sub
cld
mov
ljmp
rclb
dec
jns
and
leave
adc
push
adc
cmp
sub
push
xor
call
loopne
add
sbb
test
fcompl
in
repz
rep
fsubrs
push
ffree
into
inc
mov
scas
mov
sbb
orb
ret
cli
mov
lcall
scas
sbb
inc
ss
mov
call
sub
in
mulb
decl
mov
jecxz
sub
fiaddl
stc
pusha
addb
mov
es
lcall
xor
ljmp
inc
mov
lock
roll
pop
movsl
dec
outsl
cmp
call
sub
xor
popa
mov
push
rcrb
or
mov
int3
mov
call
sub
in
lea
cmp
test
dec
add
jbe
loope
push
adc
jle
fldcw
jg
call
mov
in
sbb
mov
shll
daa
cli
mov
xchg
xchg
lea
mov
mov
call
or
scas
sbb
xor
xchg
pop
inc
cs
push
inc
xchg
xchg
xor
xchg
add
lods
out
xchg
fnstsw
bnd
call
lahf
or
jb
call
inc
jbe
mov
orl
inc
nop
pop
lret
incl
inc
push
pop
test
dec
mov
pop
cmp
mov
nop
jl
int
test
ljmp
mull
mov
xlat
in
jmp
lods
xchg
loope
sbb
in
jns
fsubrp
imul
pushl
pop
addl
cmp
andl
les
popa
ja
add
imul
aas
xor
adc
xor
dec
adc
mov
cmc
and
scas
pop
cli
xchg
mov
cmp
aad
adc
adcl
stc
gs
xchg
bound
sahf
jecxz
test
mov
mov
test
leave
imul
xchg
imul
xchg
in
stc
and
rol
xchg
cmpl
mov
fs
negl
push
push
insl
ljmp
incl
push
dec
dec
or
or
add
inc
sahf
cwtl
mov
inc
or
lods
jbe
movsb
aad
es
jmp
xchg
stos
jb
stos
sub
dec
adc
mov
stc
cld
sbb
jnp
cli
pop
es
push
inc
icebp
mov
cmp
mov
sub
ljmp
sbb
dec
loop
cmp
xor
or
jne
je
add
ljmp
mov
inc
mov
sahf
adc
shlb
and
sub
out
roll
ljmp
pop
movsl
test
pushf
sti
push
jbe
push
ljmp
mov
and
fldcw
xchg
jl
lret
mov
jmp
movsl
addl
loope
mov
fmuls
mov
xorb
shlb
sub
cmp
fdivl
adc
imulb
rcl
test
cmp
ror
imul
sbb
or
jmp
lret
adc
xchg
xor
ficoms
or
pop
adc
mov
pusha
sub
fs
or
sbb
dec
push
push
xchg
cmp
mov
dec
mov
lock
jmp
les
sub
roll
lahf
add
push
cltd
or
cmpsb
cwtl
insl
inc
sbb
inc
sub
pushl
dec
out
inc
and
jno
adc
or
cmp
out
gs
jg
mov
outsl
xchg
mov
test
cmp
cltd
shr
mov
xor
mov
aaa
adc
std
or
out
ja
mov
cmp
imul
insl
dec
cli
insl
lods
jmp
push
ljmp
daa
cmp
mov
jge
insb
jge
das
jnp
rcrl
repnz
xchg
movsb
pushf
mov
dec
in
dec
cmpsl
fistpll
xchg
push
ss
sbbb
push
inc
jae
mov
add
call
dec
sub
push
xchg
in
shll
clc
add
out
mov
jle
or
xchg
lahf
aaa
pushl
ss
mov
jp
push
fiadds
mov
dec
aaa
push
dec
xor
in
and
clc
rcll
mov
lea
add
jmp
lds
dec
cmc
mov
mov
lcall
fadds
sbb
popf
dec
sbb
lret
mov
pop
leave
data16
aas
sar
decl
ds
add
test
add
fsubrl
jg
fcoml
aad
incl
push
stc
clc
inc
enter
mov
leave
sbb
push
push
adc
push
decl
arpl
fwait
in
stos
addr16
push
cs
aaa
fldt
ljmp
ret
nop
mov
adc
cwtl
jbe
mov
out
ret
movsl
les
and
mov
pusha
push
rorb
call
mov
call
add
fcomi
sbb
mov
push
sarl
test
jp
xor
adcb
mov
aad
arpl
pop
pop
xchg
insl
fldenv
and
ljmp
ret
out
cmp
sub
popa
jmp
push
push
mov
lcall
cmp
in
xchg
push
cltd
sar
push
jne
mov
std
cli
andb
sub
push
xor
fsubl
mov
mov
daa
lods
mov
dec
mov
pop
mov
and
adc
call
adc
inc
arpl
into
leave
mov
rorl
fwait
xchg
out
or
jp
or
add
pop
in
jae
into
pop
outsb
arpl
aas
sahf
sub
mov
incl
jle
jp
arpl
cmc
fisubl
jbe
lahf
mov
pop
xchg
sub
cld
sbb
mov
and
jg
adc
pop
leave
adc
xchg
adc
sub
pop
nop
jl
pop
mov
pop
movsl
bound
out
jb
test
adc
or
test
decl
lods
lods
fucom
ja
adc
add
jns
cli
sub
add
rorb
ljmp
push
inc
push
shlb
cmp
nop
shrb
mov
inc
or
mov
push
adc
lret
insl
cmpsb
jbe
loop
testb
dec
out
into
xor
decl
sahf
adc
iret
adc
jbe
xchg
sub
nop
mov
leave
adc
push
fdivr
ljmp
fistps
ljmp
and
lret
dec
adc
mov
lret
pop
in
adc
stos
jge
lcall
test
into
stos
and
das
out
sbb
xchg
shll
ljmp
jp
fcmovnbe
sbb
pushw
fucomp
xor
int3
adc
add
cmc
pop
aaa
popa
lret
xchg
mov
mov
or
jmp
cmpsl
push
sbb
sbb
pop
clc
out
cmp
clc
dec
mov
push
ret
push
jns
jnp
inc
je
lret
aam
jmp
pop
inc
mov
push
mov
cmc
pop
ss
mov
cmp
arpl
jmp
pop
call
loope
jne
mov
push
cmp
fs
mov
out
rclb
mov
add
out
add
push
jge
dec
pop
jmp
push
adc
rclb
jle
cli
jmp
data16
fwait
shlb
sbb
test
jno
lea
fldenv
test
pusha
notb
loop
mov
incl
ret
pop
or
or
dec
pop
xchg
out
push
dec
andb
jl
mov
aam
inc
xor
inc
mov
push
jnp
push
orl
into
jmp
stc
movsb
shlb
in
jns
mov
movsl
adc
dec
pop
in
mov
jecxz
cs
shrb
pushl
sub
aas
mov
aad
lock
ds
jmp
xchg
dec
xchg
sti
dec
call
ljmp
pop
cmpsb
jo
movsb
cmpsl
dec
push
dec
cltd
lods
lret
test
adc
add
mov
jmp
adc
dec
and
pop
push
xor
pop
into
cmp
add
fcoms
sbb
subl
inc
lret
inc
out
call
outsl
xchg
leave
add
and
testl
pop
xchg
push
mov
mov
jecxz
sub
xor
dec
adc
jae
mov
xor
mov
ljmp
adc
decl
fdiv
aaa
daa
push
fistpl
iret
mov
or
adc
sti
imul
xchg
movsl
les
loopne
call
mov
cld
xchg
or
fcmovnu
jecxz
call
lods
test
mov
ss
addr16
lcall
faddp
cld
push
sahf
or
sub
clc
aaa
mov
pop
inc
xor
inc
cmp
call
iret
inc
lret
incb
mov
push
push
and
in
jo
mov
call
call
adcl
xor
sub
lret
cld
or
enter
sub
test
lock
je
sbb
pop
push
sub
outsb
mov
dec
rcll
add
sub
test
pushl
and
nop
xchg
cld
fwait
rcr
adc
mov
fmulp
dec
adc
jmp
pop
add
or
sbb
psrlq
std
xor
adc
test
mov
jl
std
popa
inc
lea
in
cmp
ret
clc
incl
ror
add
add
je
fs
jmp
push
sbbl
incl
outsl
sub
test
push
cmp
xlat
pop
lret
ljmp
movsb
in
adc
inc
pop
cmp
mov
lret
leave
aad
dec
mov
dec
push
fnstsw
push
mov
incl
xorb
cmp
das
clc
scas
insl
fnsave
into
lret
pop
push
pop
and
xchg
rorl
es
jmp
sarl
aad
add
bnd
xchg
adc
pop
mov
mov
and
and
js
call
lcall
push
leave
sbb
or
cmpsb
cli
out
or
js
mov
dec
int
out
fwait
clc
xchg
std
lds
and
repnz
cmc
fs
pusha
jge
xchg
out
jmp
mov
push
movsl
movsl
aam
adc
mov
test
negl
push
ljmp
idiv
jmp
icebp
es
xor
shlb
xor
jecxz
add
dec
call
leave
lahf
pop
mov
inc
es
jno
pop
fstps
loopne
fs
subb
pop
daa
das
adc
inc
jnp
pop
add
dec
inc
cld
insl
jg
ror
out
inc
jg
imul
lret
test
jmp
pop
cmc
pop
mov
leave
movsb
fisttpll
sarb
push
inc
dec
sbb
lcall
push
lods
add
sub
pop
sahf
lcall
fwait
popl
andl
into
sub
xchg
das
lcall
sbb
pop
pop
and
in
sub
push
sbb
push
and
adc
scas
lcall
jmp
popa
rcl
mov
mov
xchg
aam
movsl
lahf
push
ljmp
jmp
enter
mov
jge
aaa
mov
daa
or
int
and
daa
xchg
pop
push
mov
lds
sbb
mov
mov
pop
roll
cmpsb
std
in
repz
jno
xchg
pop
out
sbb
cmp
cli
ret
xchg
add
pop
jmp
test
dec
imul
push
fstpt
inc
sbb
push
lods
pushl
sub
outsb
data16
scas
sub
scas
fstpt
pmaxub
push
sub
pushl
es
popa
mov
or
or
lret
outsb
fld
xor
inc
sahf
fisttpll
and
incl
mov
pop
xchg
in
in
cli
int3
xchg
xor
adc
idivl
push
jae
fcos
jmp
push
in
sbb
fildll
das
and
mov
sub
and
sbb
xor
sahf
loopne
push
pop
add
or
mov
and
and
dec
push
push
cmp
leave
rol
mov
pop
cwtl
jae
dec
xor
outsb
mov
fwait
push
incl
or
rcrl
int3
scas
sub
mov
lret
inc
jb
xor
cmp
dec
idiv
mov
sub
int
stos
out
mov
mov
shll
lcall
xchg
fimuls
pop
mov
psraw
test
jg
cmp
pop
push
dec
clc
movsl
push
cmp
call
movsl
jbe
sbb
sub
inc
xchg
aam
dec
loopne
aaa
and
test
add
ljmp
inc
bound
movsb
xchg
xchg
fsubl
add
sub
jns
mov
jmp
xchg
jmp
inc
sbb
or
cld
fdivrl
and
jmp
mov
cmc
cmp
cltd
out
xor
in
loope
mov
faddl
mov
dec
call
inc
xor
inc
inc
or
pop
xchg
imul
int
cltd
fsts
mov
icebp
inc
packuswb
jecxz
in
add
or
adc
out
pop
faddl
jle
mov
cmp
adc
push
gs
adc
adc
shlb
xchg
cli
shrb
pop
pop
out
pop
and
inc
jmp
mov
fsubr
outsl
pop
xor
sub
ret
push
inc
sub
push
sub
ljmp
out
sub
insb
mov
mov
or
movsb
xchg
dec
movsb
pop
mov
stos
repz
push
fistpll
lea
jno
sarl
cmp
popf
or
into
dec
mov
pop
xor
pushl
addr16
or
sub
fwait
or
insl
daa
int3
stc
xchg
jmp
pop
sub
call
popa
aaa
enter
add
cmpsl
xor
jecxz
int
and
sbb
pop
jmp
lds
or
sbb
dec
jns
jl
add
mov
int3
sub
ljmp
mov
mov
andl
stos
xchg
adc
aaa
push
cmpsl
mov
adc
call
jno
lret
cmp
sbb
sub
jp
add
das
outsl
mov
loope
bnd
sbb
aam
lods
jae
jmp
mov
pop
dec
rorl
lret
arpl
push
push
jmp
inc
fmuls
out
inc
jp
mov
push
mov
stos
test
sub
mov
mov
xchg
fdivp
push
adc
outsb
add
call
jl
jle
adc
repz
or
push
repnz
lret
outsb
lcall
adc
pop
std
add
sbb
out
mov
mov
clc
popf
mov
push
sbb
inc
sbb
call
pop
lahf
ficompl
negb
dec
adc
add
cwtl
inc
mull
push
cmp
ljmp
jne
sarb
xchg
mov
test
les
cmpsl
idiv
fildl
jg
clc
pop
xchg
insb
test
lret
jmp
jmp
add
mov
mov
leave
pop
or
mov
sti
fmull
push
or
imul
xchg
cs
dec
mov
jnp
pop
bswap
pop
push
mov
pushl
aas
xchg
cli
mov
mov
inc
lahf
shrl
jecxz
hlt
in
mov
mov
test
jg
push
in
push
cmp
pop
popa
movsb
and
sub
pop
nop
das
push
mov
aam
jp
out
js
dec
lock
xor
push
cwtl
adc
xchg
cltd
sub
push
xor
movsb
cmp
scas
idiv
xchg
adc
inc
pop
sahf
inc
mov
clc
arpl
stos
cmp
orl
jmp
pop
and
jl
cmp
pop
add
jbe
pop
cmp
rcrb
stos
adc
xchg
shll
inc
sbb
push
add
fs
push
cltd
mov
or
out
clc
push
adc
cmp
or
push
mov
inc
loope
inc
lcall
addb
and
and
mov
pop
movsb
repnz
decl
pop
adc
cli
lret
outsb
inc
cmp
repnz
stos
ret
inc
lods
xchg
decl
push
repnz
repz
std
scas
jbe
pop
mov
insb
xor
cs
pop
stc
lcall
pusha
push
pushl
jge
das
adc
outsl
enter
adc
and
hlt
or
sbbl
jg
sub
mov
loop
mov
pop
mov
and
cmp
mov
push
ljmp
or
xchg
cli
jge
cmp
inc
decb
popf
lahf
xchg
call
addl
test
dec
xlat
fwait
or
cltd
mov
push
inc
loope
adc
add
test
aas
inc
push
arpl
inc
jle
clc
pop
lods
cmp
imul
cmc
inc
scas
dec
rorb
cmp
jbe
rol
fwait
out
das
sbb
mov
addr16
push
sbb
scas
jne
or
jnp
ljmp
pop
fimuls
mov
jmp
fs
dec
movsl
lds
cwtl
sarb
out
popa
outsb
push
dec
pop
lahf
stos
add
lahf
stc
sub
xchg
les
fcmovb
jmp
sub
cmp
push
dec
aam
aaa
js
xorl
ja
fidivs
push
enter
cmpsl
mov
call
xor
imul
neg
mov
xchg
dec
mov
xchg
mov
xchg
jmp
add
jl
sub
mov
mov
and
popf
xchg
jne
int
xchg
mov
dec
adc
sti
cmp
or
sbb
inc
fldl
pushf
lcall
repz
jno
decl
inc
into
lcall
jle
dec
pop
adcl
xchg
out
lret
and
jecxz
push
repz
call
add
jg
adc
jo
nop
and
imul
enter
dec
and
pop
mov
aas
scas
inc
cmp
cmp
push
mov
and
adc
ja
into
push
xchg
ljmp
clc
xchg
in
fnstcw
jmp
cmp
adc
out
jecxz
dec
stc
gs
xor
inc
je
iret
jmp
arpl
je
inc
iret
jl
scas
ror
pop
int
repz
push
scas
insl
pushl
addb
pop
mov
xor
outsl
sub
add
sbb
loope
mov
incl
std
sbb
out
cmp
pop
lods
xor
xor
out
xchg
add
or
insb
aas
leave
jo
push
movsb
lret
call
mov
or
inc
jcxz
sbbb
push
cmp
add
cmc
test
push
sub
incl
gs
push
subl
lock
insl
jl
sub
imul
mov
repnz
mov
mov
stos
cltd
imul
shl
int
in
xchg
enter
fucomp
mov
and
cmp
out
call
lds
push
mov
xor
sub
mov
xchg
mov
pop
sbb
pop
gs
jmp
push
add
cld
add
test
rcr
jns
add
adc
inc
mov
jmp
xchg
pop
pop
mov
lret
mov
jno
fdiv
mov
xchg
mov
and
sbb
dec
jmp
push
adcl
ret
jae
or
push
cmp
pushl
aam
xor
sub
and
inc
ret
lods
cmp
ja
cmp
mov
inc
sbb
xor
or
mov
in
xchg
push
sbb
js
add
jle
adc
inc
addb
shlb
int3
movl
mov
pushf
in
add
jne
xor
incl
xchg
lahf
je
jge
sub
jp
stos
inc
sub
sbbl
cmpsl
mov
xor
leave
outsl
cmp
add
cli
lods
testl
xor
cmp
inc
cmp
sub
ljmp
pusha
fwait
sti
jnp
mov
fisubl
jnp
in
mov
jbe
inc
lods
pop
adc
div
icebp
std
loopne
sarb
xlat
ror
lock
push
mov
cmp
loopne
movsb
sbb
into
cltd
cld
into
cld
sarl
pusha
imul
inc
repnz
xlat
mov
push
or
inc
scas
lods
xor
mov
les
stc
das
mov
incl
wbinvd
fcoml
leave
xchg
dec
je
xchg
gs
pop
add
rorl
mov
pushl
mov
shlb
pop
and
jp
inc
hlt
pop
jo
and
dec
mov
ljmp
dec
mov
dec
mov
icebp
cmpsb
aad
shrb
and
sbb
push
pop
outsl
xor
mov
pushl
js
arpl
mov
das
pop
cmp
pop
lds
or
test
incl
movsl
fdivs
mulb
mov
xor
andl
insl
sbb
mov
lcall
enter
jo
popa
mov
jle
or
push
push
xor
inc
cmp
in
xchg
and
inc
popa
bound
cmp
test
das
xchg
or
inc
call
sub
xchg
xor
pushl
int
sub
or
in
push
jle
mov
and
ret
jg
xor
and
pushf
mov
jmp
lret
push
loop
sbb
scas
adc
lods
pop
movsl
leave
push
int3
mov
add
xlat
pop
xor
lcall
xchg
adc
mov
sbb
mov
js
movsl
adc
das
hlt
bound
sub
repz
sbb
jmp
jmp
jae
pop
cmpsb
movsb
jne
js
test
aas
jmp
leave
pop
inc
shlb
dec
or
push
incl
pop
or
int
shrb
cld
cmp
in
dec
cmp
jecxz
dec
xchg
pop
jns
lea
add
sahf
fs
add
or
ficoml
jae
jmp
jnp
insb
lcall
inc
ja
scas
stos
jmp
nop
xchg
cmp
lods
mov
xlat
incl
repnz
popa
push
mov
or
test
mov
outsb
incl
insb
and
pop
outsl
ficompl
jecxz
lods
stc
aam
pop
stos
mov
xor
mov
inc
jp
jmp
test
lock
ret
nop
mov
inc
pop
push
push
gs
pop
xchg
scas
dec
loope
mov
xchg
fwait
int
call
sub
into
call
incl
jbe
mov
xor
jmp
test
dec
cmp
cmpsb
js
fs
mov
outsb
fcmovnbe
push
push
mov
mov
nop
fiadds
push
jno
loop
daa
inc
mov
stc
and
push
lea
mov
jecxz
aas
hlt
mov
or
rol
sahf
rol
subb
cmp
cs
mov
pop
mov
sar
lcall
adc
stos
cmp
mov
lea
lahf
movsl
cmp
repnz
mov
jmp
mov
int3
mov
adc
xchg
ds
pop
mov
xchg
aam
hlt
cmp
incl
pop
mov
jae
mov
mov
pop
fadds
aas
xchg
jg
sub
stc
mov
inc
int
fcmovnb
ljmp
imul
outsl
ret
movsb
fists
pop
push
sahf
push
ljmp
and
movzbl
mov
xlat
shll
mov
inc
sti
push
jns
call
movsl
sbbb
or
or
inc
cmp
xor
gs
and
out
xor
and
call
push
and
stc
shll
push
and
sarl
xchg
leave
jb
and
mov
in
into
outsb
sti
test
push
add
dec
popa
pusha
pop
adc
adc
fcoml
jmp
lret
mov
mov
jbe
sbb
aaa
sbbl
or
push
gs
mov
out
add
mov
andl
cmp
out
mov
xor
and
mov
jmp
xor
addr16
push
hlt
mov
arpl
lods
cmp
mov
insb
and
loopne
push
arpl
das
fcmove
inc
mov
jl
push
adcl
gs
imul
pop
lods
jl
dec
inc
das
or
pop
lea
mov
inc
xor
jp
cltd
nop
incl
shrl
fstps
mov
enter
mull
out
lahf
mov
adc
mov
jmp
pop
jle
xchg
adc
cmp
mov
mov
insb
scas
aam
fstpl
es
xor
cmpsl
shlb
ret
xchg
in
or
add
aas
inc
fistl
loop
call
test
or
rorl
fwait
adc
aad
ja
mov
dec
pusha
mov
lcall
sub
cmp
call
adc
sbb
les
jmp
nop
stos
cmpsb
jo
out
fucomp
insb
pop
mov
push
out
push
mov
cmp
cmp
adcb
lcall
into
mov
cmpsb
je
push
aam
cld
mov
mov
push
cmp
cli
repz
insl
lcall
inc
imul
xlat
cwtl
inc
or
pop
jno
push
ljmp
shll
decl
push
sub
pop
push
sbb
add
adc
in
mov
cmc
scas
shll
add
jmp
and
popl
aas
ja
nop
jl
ds
add
inc
xchg
add
outsl
jnp
pop
pop
decl
lods
jo
xchg
jg
jmp
push
jg
imul
pcmpeqb
cmp
jb
hlt
sbb
mov
dec
fwait
mov
and
repz
dec
repnz
cmp
add
and
cmp
pushl
push
in
inc
in
add
insl
lock
mov
idivl
addr16
adc
ljmp
imul
mov
les
js
daa
std
sub
in
jp
push
adc
incl
xor
dec
lock
loope
stos
test
xlat
dec
mov
loop
ljmp
sbb
incl
pop
decb
adc
pop
sub
shll
ss
mov
addb
addr16
jmp
cli
sbb
or
adc
insl
and
adc
push
dec
mov
loope
push
pushl
push
inc
dec
pop
mov
push
les
and
xor
adc
xchg
ljmp
pushl
jg
outsb
mov
arpl
daa
or
insb
sub
imul
stc
add
iret
rcr
xlat
xlat
or
test
jle
sti
dec
popf
cmp
mov
ret
sub
mov
decl
cmpsl
std
inc
sbb
push
push
and
push
pop
sarl
dec
lcall
xor
roll
gs
cmc
mov
popa
mov
mov
add
mov
je
fistl
jmp
dec
sub
sub
orb
inc
inc
clc
ss
jns
push
call
mov
decl
fstp
stc
cwtl
add
iret
inc
xor
nop
pop
jge
xchg
push
insl
pusha
mov
pusha
decl
xor
push
or
mov
add
roll
jnp
pop
ljmp
lock
mov
sbb
push
mov
leave
xor
xchg
mov
ds
dec
sub
xchg
push
mov
stc
sbb
jecxz
testl
fcomps
addb
call
std
push
daa
cltd
push
cltd
lds
xchg
xchg
pop
in
lock
cltd
scas
mov
fdivrs
test
call
addl
push
imul
cmpl
scas
inc
inc
dec
pop
push
add
popf
fisttpll
ljmp
mov
ss
jge
mov
in
sbb
pusha
cmp
or
jecxz
incl
jo
hlt
aad
into
fisubrs
mov
adc
popf
in
subb
loope
pusha
fnstenv
incl
xor
push
cwtl
addr16
imul
adc
inc
insb
iret
lcall
aad
cltd
in
fsubp
mov
sti
dec
loop
mov
mov
cmpsb
fs
stc
dec
xchg
sahf
pop
mov
pusha
bound
jg
or
push
mov
scas
cld
popf
sbb
pusha
decl
js
dec
arpl
cmp
mov
ret
jne
jnp
and
call
adc
out
and
ret
or
sub
jmp
push
adc
jp
cmp
pushl
rcr
mov
gs
sbb
mov
shrb
mov
stos
std
dec
jmp
cmp
or
lods
add
jecxz
xor
aaa
inc
fs
out
out
pop
lret
rorb
jge
lea
int
push
xor
jno
pop
ffreep
xchg
ficoml
into
add
decl
js
stc
jnp
into
mov
out
mov
dec
pushf
mov
out
movsl
xor
cmp
sbb
dec
aad
xchg
jnp
cmp
pop
aas
fldl
mov
popf
cmpsb
xor
jmp
dec
test
mov
pop
popa
enter
mov
ds
ja
int3
mov
mov
jnp
test
je
adc
in
fistps
jo
ss
sub
inc
jbe
gs
fistpll
fbstp
fimull
aas
sub
sbb
dec
mov
lods
pop
jo
jecxz
xchg
jno
add
call
or
dec
stos
pop
popa
andl
jae
mov
pop
pop
pop
sub
int
pextrw
xchg
incl
mov
repnz
flds
push
xlat
push
in
stc
sbb
push
sar
call
lods
pop
push
and
add
xor
mov
jp
dec
div
aaa
test
cmc
dec
cli
inc
cmp
sub
fscale
pushf
xchg
shll
pop
stos
adc
stos
cltd
push
sbb
into
or
decl
sbb
push
cmp
shrl
jne
jge
imul
inc
cmp
mov
ljmp
pusha
sarl
push
pop
rolb
ss
gs
pop
fstpt
mov
sbb
mov
dec
fcompl
adc
inc
inc
testl
fcoml
adc
mov
insl
loop
pop
std
inc
cltd
jmp
ja
xor
pusha
insl
xchg
int3
dec
in
adc
lret
lret
inc
jmp
aas
cli
lret
adc
sub
scas
enter
fisubrl
dec
xor
cmp
jp
jmp
call
bound
test
movsl
dec
push
lock
ja
pop
jns
sbb
add
incl
test
push
push
outsb
in
mov
add
and
ror
rcrb
ja
push
enter
insl
call
inc
icebp
inc
jl
movsb
fcoml
cs
xchg
inc
repnz
inc
stos
adc
jne
mov
sub
cmp
bound
mov
mov
out
mov
pop
mov
add
or
mov
mov
xor
incl
jmp
fdivl
mov
outsl
push
mov
xor
out
push
add
ret
mov
call
mov
cltd
int
ss
das
jo
jle
mov
dec
fidivl
xchg
push
pushl
xor
inc
or
cmpl
mov
xchg
fnstcw
cmp
mov
call
fsubs
sti
cmp
sbb
negl
xor
mov
loop
into
push
push
pusha
lods
call
ds
clc
nop
in
mov
mov
cmc
and
rol
cmpb
ss
icebp
mov
sbb
pushl
jge
inc
mov
and
imul
inc
incl
and
test
push
jmp
sahf
mov
aad
fstpt
cmpsb
dec
inc
mov
imul
dec
and
jmp
xor
cmp
pusha
push
add
out
arpl
jmp
aad
or
sarb
lcall
pop
stc
cmp
mov
mov
outsl
sbb
les
mov
call
std
cltd
fildl
sbb
or
pop
and
mov
xor
scas
fistpl
mov
xor
ret
ja
movsb
pop
cwtl
cwtl
or
jns
mov
xor
fistpll
or
mov
pop
sub
push
loope
ds
cld
jo
ror
imul
pop
and
mov
cmp
xchg
xchg
mov
cltd
and
jl
cltd
scas
mov
lahf
flds
dec
imul
mov
repnz
mov
out
icebp
or
jge
xor
xor
cwtl
mov
jb
ljmp
insl
lds
lret
jmp
dec
jno
pop
outsb
in
jp
sub
movsb
jge
leave
cmp
cmp
pop
dec
adc
js
test
stos
bnd
imul
ss
incl
xchg
jmp
leave
or
cmp
xchg
fbld
jb
cmpsb
jmp
sub
add
pop
mov
and
popf
mov
cmp
jae
jg
cmp
movsb
je
jbe
jbe
xchg
or
sub
xchg
sub
lcall
lcall
or
and
pop
mov
arpl
in
daa
inc
je
sarb
mov
sbb
fcos
pushl
pop
xor
repnz
rclb
pushf
inc
push
cmpl
cmp
and
aam
dec
fisttpl
add
decl
inc
lcall
jecxz
clc
mov
pop
xchg
sbb
lock
repz
decl
sbb
sub
dec
jbe
fdivl
repz
pop
adc
in
fs
subb
inc
call
mov
mov
fdivrp
push
mov
scas
pop
xchg
push
dec
jl
lods
inc
jns
sti
arpl
add
mov
xlat
xor
cltd
xor
sub
fs
loope
out
xchg
insl
pop
sti
test
test
hlt
lods
pop
jmp
mov
out
cmpsl
or
shl
or
decl
lds
popa
loope
stos
jg
sbb
xor
loop
mov
push
or
cmp
and
pushl
aaa
push
add
shlw
push
sub
xchg
fnsave
push
inc
lds
push
xchg
incl
lahf
mov
sub
and
lret
dec
sub
xchg
cmp
ss
sbb
fdivr
call
daa
push
int3
jo
cld
cmpl
mov
rolb
xchg
mov
lds
ljmp
stos
repnz
xor
push
in
ljmp
or
sarl
and
call
cmp
xchg
xchg
push
imul
cmpsl
adc
push
xchg
mov
nop
js
mov
mov
push
mov
add
cmp
add
aas
lret
pop
push
push
mov
notl
loope
mov
dec
inc
mov
mov
mov
jmp
dec
movsl
scas
lret
dec
mov
lret
xchg
pop
xchg
std
pushl
xor
pop
movl
jno
jg
sbb
or
lea
stos
int
incl
pop
aas
sahf
jae
sbbl
dec
sbb
mov
mov
gs
mov
call
adc
lret
cmp
or
mov
and
mov
decl
dec
or
mov
push
mov
test
push
cwtl
mov
jg
xchg
fcomps
lcall
sbb
test
xlat
enter
cltd
push
loopne
movsl
outsb
mov
xchg
xchg
ds
push
mov
mov
stos
imul
xor
mov
sbb
inc
push
fisttps
lea
out
call
icebp
shll
jns
pushf
sub
push
pop
mov
fldenv
fistl
int
jmp
mov
pop
jne
pop
lods
inc
pop
dec
sbb
mov
adc
mov
add
ljmp
sub
dec
cmp
lods
in
xchg
xor
inc
imul
call
leave
sub
test
imul
dec
movsb
or
je
jb
pushf
ljmp
xchg
jnp
jno
dec
lods
xor
pop
push
push
int
stos
scas
mov
js
ret
cmp
add
cltd
hlt
xchg
popa
pop
push
clc
mov
and
xchg
dec
inc
add
push
lock
mov
mov
jmp
fbstp
mov
mov
mov
test
das
add
fiaddl
or
lcall
mov
sub
gs
push
aad
fisubs
cmpsl
dec
into
cmpsb
cmpsb
cmp
decl
int3
lds
pop
jmp
sub
push
mov
xor
xchg
aad
jo
cmpsb
lret
test
pop
rcrl
jmp
adc
mov
and
jle
xchg
je
xchg
divl
cli
mov
call
inc
sbbb
mov
jge
or
cmp
adc
mov
mov
ljmp
xorb
dec
insb
lcall
dec
jns
mov
dec
cwtl
sarb
repz
repnz
decl
sub
dec
or
fwait
icebp
fidivl
repnz
and
xor
mov
lcall
xor
mov
xchg
fstps
mov
hlt
in
add
or
clc
movsb
pop
xor
or
jmp
pop
test
xchg
ret
int3
out
out
loope
loope
sub
popa
hlt
xchg
cwtl
loop
fs
cwtl
cmp
mov
call
int3
xchg
ds
jge
dec
jge
imull
and
adc
loope
mov
inc
mov
lcall
aaa
xor
leave
mov
mov
dec
out
jp
xor
adc
fistpl
ljmp
adc
xchg
out
inc
mov
jle
xchg
testl
clc
mov
cld
out
lret
scas
imul
wbinvd
mov
push
xorb
pop
add
nop
outsb
popw
rorl
fbld
add
push
je
add
push
test
test
mov
push
jg
scas
shll
aam
cltd
jmp
push
xchg
pusha
arpl
call
and
or
cli
push
pop
inc
sbb
call
sub
rolb
scas
loopne
push
xchg
fsubr
mov
jno
xor
pushl
mov
push
push
arpl
fisubl
ja
pop
in
sub
jge
aas
call
fiaddl
sbb
jb
pushf
push
das
sbb
sub
pusha
sbb
sbb
pushl
shll
mov
mov
pop
iret
imul
arpl
nop
movlhps
mov
push
jge
shlb
jmp
push
pop
stos
mov
test
bound
pop
cli
rcrl
leave
cltd
pop
fiadds
inc
jo
call
push
inc
sbb
sbb
pop
jmp
fidivrl
sub
stos
mov
vmwrite
decl
and
cmp
ret
pop
jnp
mov
push
addl
out
or
clc
rcrb
ljmp
mov
inc
push
jo
inc
flds
push
adc
insb
ljmp
fldt
fs
jns
aas
test
call
mov
je
mov
xchg
jo
pushl
dec
sbb
xor
push
fnstsw
mov
jo
stos
sbb
out
lret
mov
decl
cltd
inc
cmpsl
das
mov
mov
sbb
out
cmpsb
jnp
stos
adc
cs
fdivrp
jmp
mov
lret
jmp
cmp
in
push
or
icebp
fistpll
lcall
xor
rcll
movsb
sti
repnz
mov
aaa
in
adc
pusha
ds
inc
in
mov
push
rcrl
inc
incl
lods
push
cmpsl
mov
mov
jle
mov
mov
je
dec
in
sarl
dec
mov
popf
inc
xorb
insb
mov
xlat
ljmp
push
loope
push
dec
repnz
loop
imul
add
data16
fistl
jmp
int3
push
inc
shl
dec
adcl
subb
add
pop
shlb
sub
mov
ljmp
pushf
les
inc
lcall
cmp
out
out
imul
jb
pop
ds
cmp
cwtl
jp
push
movsb
push
pop
aas
roll
popa
movb
loope
cmc
stc
dec
add
decl
mov
mov
adc
lds
xchg
jmp
cltd
mov
adc
cmp
adc
icebp
stos
aas
mov
and
jo
inc
jbe,pt
call
xchg
shl
incl
sub
outsb
insl
dec
pop
test
sub
sahf
leave
andb
iret
iret
add
iret
sub
mov
cmp
pop
mov
data16
std
rolb
hlt
add
fbstp
jmp
push
push
enter
outsl
cmpsl
or
pop
mov
jle
adc
insl
insl
push
lcall
call
fcompl
mov
into
mov
push
ljmp
xlat
pop
mov
mov
loop
ror
repz
repz
rcrb
add
sbb
scas
jge
sahf
out
fsubr
pop
ss
inc
sub
aad
scas
ds
jecxz
rcrl
mov
cmp
leave
dec
ds
pushl
mov
testl
dec
dec
outsb
push
lret
in
jne
mov
sub
xor
jmp
pop
pop
lods
lahf
aas
sub
pop
mov
loop
mov
hlt
cmp
mov
ja
xor
mov
sti
lcall
fwait
outsb
outsb
lds
inc
aas
iret
cltd
rep
mov
lret
daa
sub
imul
repz
cmpb
xor
pop
push
push
shl
mov
test
xor
lcall
int
push
cmp
stos
jecxz
scas
push
or
scas
std
xlat
and
and
and
jmp
cmp
sub
cmp
in
xor
sub
pop
xlat
push
jecxz
ret
fstp
xor
call
das
test
mov
imul
ja
sbb
rcrb
cli
int3
adc
rclb
sub
call
adcb
pop
jl
push
rorl
sub
mov
scas
iret
dec
pop
int3
or
and
inc
sbb
cmp
cwtl
mov
dec
icebp
sbb
movzwl
stos
test
inc
jb
icebp
test
fimull
inc
mov
ja
int
jns
sub
pop
jb
lret
mov
mov
push
dec
push
pop
jmp
lahf
dec
push
or
xor
inc
in
outsb
cmc
ds
sbb
lahf
jg
or
call
or
popa
nop
xchg
dec
pop
mov
pop
test
jne
pop
cmc
mov
jge
xchg
push
and
incl
shlb
pushf
jg
add
xchg
js
xchg
out
cli
xlat
dec
outsl
xor
popa
push
fisttpll
sub
xor
or
test
xchg
jecxz
xchg
xor
mov
aaa
inc
dec
clc
jne
scas
test
sbb
in
and
fwait
or
bswap
decl
push
pop
add
fmul
test
mov
cmp
xchg
inc
adc
mov
lcall
inc
sub
test
loope
cmp
movsb
mov
xchg
mov
or
dec
ljmp
aam
daa
test
insl
ret
add
jno
ret
cmpsb
out
dec
lods
inc
jns
push
cmpb
stc
test
pushl
sbb
test
add
jle
ss
scas
rclb
inc
jb
ds
call
cmp
inc
pop
fucomip
gs
rcrb
or
ja
push
xorb
gs
js
ds
ljmp
mov
mov
cmp
into
adc
pop
mov
adc
adc
sbb
pushf
aaa
into
aas
xor
ficoms
sub
lds
test
xor
aam
sbb
cmp
mov
incl
aad
or
cwtl
push
loopne
in
or
into
push
sti
ret
std
insb
rcll
pop
sbb
ljmp
xor
bound
sub
daa
dec
imul
push
xchg
inc
das
jo
push
cmp
push
jecxz
sbb
fsubr
push
add
fildll
push
scas
cs
jmp
ror
xchg
push
sarl
jne
sub
dec
xor
sar
jl
adc
push
fstl
jmp
push
jge
mov
ficompl
shlb
mov
iret
fcoml
inc
cmp
mov
xor
pop
lds
mov
out
imul
insl
fmuls
jecxz
call
icebp
test
push
lahf
es
in
mov
pop
sub
into
fdivrl
push
pusha
mov
inc
pushl
sbb
mov
outsb
mov
pmaxsw
idiv
dec
jecxz
sbb
cmpl
sub
lcall
jns
inc
and
pop
in
icebp
sbb
ret
sbb
inc
nop
pop
pop
leave
inc
test
push
test
inc
ljmp
mov
bound
lret
in
cltd
std
mov
fldenv
cmp
ds
pushf
cmp
mov
flds
lock
mov
mov
mov
in
mov
xchg
insl
stc
popf
xchg
clc
or
aaa
clc
xchg
cmpb
sti
jne
je
cmpsb
mov
call
lahf
and
rorl
mov
push
stos
outsb
movsl
xchg
mov
mov
andl
cmp
xor
outsl
icebp
jne
and
jbe
inc
and
inc
jg
add
rcrb
gs
das
push
sub
jp
cmpsb
adc
or
aam
push
or
cmc
les
sbbl
insb
jge
dec
push
sti
fucom
or
lods
push
hlt
xchg
ds
xchg
cltd
cmpl
mov
add
nop
pushl
mov
movl
in
dec
mov
rcrb
sub
imul
aam
movsb
jnp
pushl
je
repnz
mov
arpl
sbb
jbe
sbb
sbb
push
mov
cmp
push
daa
push
fstps
mov
mov
cmp
pushl
cmp
xor
inc
stos
mul
or
pusha
add
cld
ljmp
decl
nop
cmpl
fimull
popa
andl
inc
test
out
sbb
jae
pushl
mov
jne
adc
mov
lcall
sub
stos
test
stc
xchg
or
stc
cli
mov
pop
mov
sub
insb
in
rolb
inc
ret
lcall
insb
sarb
lea
and
pop
add
lds
iret
adc
mov
mov
ljmp
mov
test
mov
push
cmc
insl
mov
cmpsl
or
mov
adc
stc
negb
pop
xor
mov
shrb
inc
and
xchg
inc
lahf
imul
incl
iret
aam
stos
mov
icebp
push
mov
mov
mov
nop
pop
fdivr
cmp
into
cwtl
adc
mov
pop
out
not
movsl
or
mov
push
push
or
decl
mov
mov
jno
dec
rcll
ror
cltd
loopne
push
bound
mov
ljmp
push
sbb
shl
add
and
popf
test
frstor
xchg
sbb
lcall
leave
loop
repz
xor
jne
cmpb
cmpsl
cmp
jo
xchg
decl
sbb
shr
ficoml
pop
mov
clc
xor
fistl
adc
jnp
push
lahf
dec
cli
cwtl
je
scas
ljmp
daa
into
mov
rorb
cld
fldt
lea
mov
inc
add
mov
daa
push
pop
mov
cli
test
jmp
stos
or
iret
xor
xchg
mov
add
lods
lds
es
ljmp
mov
shll
xor
sbb
jb
mov
stc
and
inc
mov
call
out
repnz
insl
scas
sub
xchg
rolb
rol
cmp
jle
push
xor
dec
daa
ljmp
mov
mov
add
push
lret
jmp
xchg
stc
sbb
fmuls
or
lock
andb
sbb
push
push
sbb
or
test
stos
jp
inc
aam
sub
xor
jecxz
mov
scas
pop
mov
loope
ljmp
cmp
mov
inc
push
lds
sbb
and
add
cmpsb
sub
loope
pop
mov
in
inc
lock
dec
cmc
into
jbe
pushf
sbb
ret
cmp
movsl
xchg
jmp
in
inc
cmp
cmpsb
jbe
push
xchg
sub
mov
inc
stos
mov
repz
pop
test
call
sbb
adc
jae
loop
ljmp
enter
xchg
sub
adc
xchg
cmp
cmp
push
in
lods
add
dec
mov
mov
jge
outsw
pop
out
pushf
adc
pop
lcall
cmp
sti
repnz
jl
add
dec
movsl
das
roll
mov
adc
push
jmp
pop
sbb
jnp
or
and
xor
mov
imul
out
pop
xlat
mov
mov
sub
dec
xchg
sti
dec
lret
loopne
aam
leave
ljmp
cmp
adcb
out
test
lcall
stc
scas
jne
mov
pop
push
adc
sub
jp
leave
adc
lods
scas
leave
xor
clc
jmp
mov
scas
pop
and
lock
outsb
cli
jb
sbb
clc
push
das
fstl
mov
aas
std
in
sbb
lods
ljmp
inc
mov
call
mov
add
jle
xor
xor
pushf
lcall
sub
call
addb
mov
pop
push
dec
cs
inc
and
mov
pop
in
dec
push
mov
xor
imul
loope
or
adc
js
add
dec
jmp
dec
cmpsb
xchg
hlt
aam
int
push
hlt
adc
into
in
xchg
pop
mov
jl
aam
decl
iret
test
imulb
cpuid
addr16
jmp
bound
test
sbbl
cmp
leave
cmp
add
adc
lcall
mov
push
push
push
fisubl
incl
shl
jmp
aaa
shrl
pop
jmp
stos
jle
cmp
loopne
or
incl
inc
in
leave
stc
fmul
sub
sub
inc
and
dec
jmp
sbb
cmc
mov
test
adc
jecxz
add
aas
add
jge
in
push
mov
sub
pusha
mov
xor
popf
mov
mov
leave
mov
mov
adc
hlt
rcl
stos
sarl
xlat
cmpsb
jno
xchg
push
call
in
mov
push
rolb
pop
lret
cli
xchg
add
in
sub
js
cmp
xor
lock
das
sbb
pop
mov
mov
pop
loopne
sub
push
push
pushl
jne
rorl
mov
pop
mov
jno
repnz
es
cs
sub
mov
fmull
fs
add
and
fwait
lock
mov
xor
dec
not
sbb
mov
mov
lcall
and
jle
or
xchg
or
add
andl
pop
or
sbb
cli
fdivs
sbb
js
test
pushl
mov
dec
mov
int3
lahf
data16
bound
fmull
rcrb
jmp
cmp
add
subb
pop
jbe
jp
pushf
sarb
sub
xor
sahf
nop
sub
js
sbb
into
popa
jecxz
das
sub
insb
imul
mov
mov
call
clc
cld
loope
xlat
repnz
jns
xor
adc
jmp
sbb
incl
xor
pop
inc
mov
jbe
adc
pop
shrl
adc
and
lcall
cld
scas
mov
aaa
adc
jg
sbb
inc
int
push
rcrl
in
dec
inc
sahf
clc
mov
add
ret
adc
repnz
sub
clc
dec
popf
push
imul
mov
adc
cmp
jecxz
mov
out
push
lods
fisttpll
nop
int3
mov
repnz
pushl
fmuls
loope
pop
pop
jmp
lock
sbb
adc
divl
test
ljmp
inc
fdivrl
out
mov
add
and
sub
add
jmp
inc
dec
lcall
mov
cmp
fldenv
out
xchg
pop
clc
pop
jae
pop
ret
pop
jnp
mov
push
pop
cmp
ficomps
movsl
imul
sub
fwait
xchg
cltd
sahf
out
jmp
fwait
shl
dec
xlat
pop
inc
pusha
mov
aam
shrl
or
rorb
add
test
jmp
cmp
pop
in
test
mov
and
or
or
push
adc
ja
pushl
stc
sub
mov
insl
pop
loop
mov
mov
fists
pop
leave
xchg
dec
sbb
neg
imul
incl
xchg
xor
xchg
arpl
mov
xchg
pop
int3
test
inc
jo
jmp
add
aam
jl
or
ljmp
dec
sbb
jle
jp
mov
pop
mov
mov
es
jae
out
call
movsb
cwtl
test
cmpb
jge
das
lcall
fs
inc
int
lods
imulb
call
push
pop
xchg
xchg
stc
mov
mov
sahf
cmpxchg
or
cmpsb
sub
out
movsb
adc
pop
inc
add
call
or
mov
arpl
outsb
das
sbb
push
stos
loop
fucomi
mov
pushl
cmc
xchg
add
xor
iret
mov
iret
push
jns
sbbb
jg
mov
sub
data16
jmp
pop
mov
jbe
sub
add
or
cmp
cmpsb
xlat
test
mov
in
push
test
push
aaa
mov
sti
xchg
mov
xchg
jne
int
incl
pop
mov
fistpl
outsl
mov
js
lahf
int3
cmc
ss
pushl
bound
adc
sub
push
sub
xchg
adc
push
mov
das
or
ljmp
mov
fildl
mov
rcl
stc
mov
aas
inc
add
je
inc
cs
mov
movsl
and
pop
cmc
pop
xchg
add
fstl
mov
pusha
mov
stc
pop
je
push
mov
sub
shr
loopne
lret
int
fistpl
aaa
jecxz
adc
ja
mov
jmp
in
sbb
cmp
dec
test
out
cmpb
fidivs
test
ljmp
call
push
fcompl
outsb
push
aam
lods
lahf
cmp
pop
daa
je
push
pushl
mov
mov
or
pop
adc
movsl
loopne
test
subl
test
or
mov
ficompl
mov
cltd
xorb
pop
mov
mov
and
adc
test
out
movsl
int
test
enter
test
mov
cltd
push
pop
decl
out
and
jl
mov
cmp
inc
fwait
jns
xor
in
jge
test
cmp
dec
stc
xchg
insb
dec
shll
lcall
mov
scas
mov
dec
adc
andl
jns
jne
call
sub
in
xchg
stos
out
std
test
xor
movsb
sbb
push
bound
push
xchg
mov
std
subl
pushl
sbb
int
xor
jmp
clc
cs
cmpsl
push
or
xchg
sub
insl
es
mov
in
dec
out
dec
pop
sbb
sub
jecxz
inc
add
testl
xor
mov
jp
and
xor
mov
movsb
mov
mov
add
mov
lcall
movb
cmp
sub
inc
aas
and
inc
stos
pop
gs
ret
sub
pushl
scas
pop
mov
jmp
mov
xlat
lahf
stos
adc
cmpl
mov
movsl
sarl
stos
std
test
lahf
dec
nop
adcb
mov
or
mov
pop
inc
incl
fidivrl
dec
hlt
sub
add
addr16
ret
fs
xlat
mov
decl
hlt
test
cld
aad
sub
outsb
scas
dec
in
mov
cmc
sbb
call
cltd
fs
clc
icebp
in
add
lret
stc
jg
push
fmulp
ret
dec
pop
dec
repnz
jmp
push
std
sbb
inc
pop
adcb
insl
sub
mov
loopne
ss
add
je
lcall
les
fldt
in
push
icebp
xor
lods
adc
loopne
in
inc
sbb
repnz
call
dec
ljmp
hlt
sbb
sub
push
fisubs
cmp
mov
in
mov
sub
lahf
mov
decl
mov
sub
xchg
popf
sub
mov
sahf
inc
pop
xchg
pushf
orb
pushl
mov
lret
ficoms
cmp
into
ds
ror
or
cmc
xchg
shrl
push
xor
push
lods
aam
xchg
sbb
cli
xor
mov
xchg
mov
movsl
pop
or
insb
mov
rol
std
inc
call
ja
and
ret
jmp
jbe
inc
loopne
pop
pop
mov
les
cli
bound
ljmp
cli
mov
push
out
loop
repnz
popf
mov
cld
jmp
and
xor
sub
dec
or
decl
or
rorb
sub
adc
mov
fisttpl
pushl
test
roll
lcall
mov
int
mov
int3
lahf
cmp
jmp
jmp
or
shlb
jl
push
je
aaa
lahf
pop
cmpsl
in
ljmp
inc
xor
adc
and
int3
push
arpl
and
cli
adc
enter
fwait
or
ljmp
xor
jno
cmp
xchg
sub
cmpsl
iret
cli
inc
lea
push
adc
fs
aas
mov
push
jne
xchg
insb
add
test
bound
loop
std
xchg
incl
adc
dec
inc
mov
pushf
lods
pushf
adc
add
pop
loopne
add
pop
cld
cmp
jge
ja
lods
repnz
jae
in
pop
jl
mov
xlat
sbb
fnstcw
cmp
ljmp
cmpsb
or
lret
jnp
cli
jno
dec
mov
mov
fidivrl
xchg
fstpt
inc
sahf
dec
cwtl
movsb
cltd
fs
ljmp
xchg
push
cmp
xchg
idivl
pop
sub
push
cmc
mov
fwait
jmp
cmp
push
jl
das
dec
xchg
jge
stos
dec
mov
ficoml
sbb
inc
xlat
ljmp
or
jb
ds
iret
xchg
fimull
movsb
stos
xchg
dec
jg
outsl
pop
insl
gs
inc
sub
push
mov
lods
sbb
and
mov
and
sbb
cmp
out
outsl
ss
data16
mov
addb
pushl
shl
add
push
movsl
cmp
dec
sar
test
mov
mov
jmp
adc
pop
outsb
ror
or
mov
loope
cmp
movsl
mov
lcall
mov
mov
into
mov
lahf
testl
push
xchg
shrb
popf
maxps
fisttpll
inc
xor
jmp
mov
mov
pushf
sbb
and
cmp
call
dec
adc
cmp
fld
pop
fsubr
jg
cvtps2pd
bound
add
xchg
test
jmp
stos
lods
aad
pop
test
hlt
push
add
and
add
in
sti
add
stos
mov
incl
or
sub
addr16
cli
sub
dec
or
lcall
xchg
sub
outsb
jae
out
ret
push
lds
js
push
inc
xor
subl
pop
push
shrb
shl
je
ljmp
mov
clc
inc
idiv
cli
push
data16
jno
mov
mov
pop
movsb
loope
inc
xchg
stc
stos
push
adc
jp
addr16
push
outsl
xor
dec
pushl
loope
aaa
orl
je
and
out
nop
fisubl
test
mov
stos
dec
rorb
jae
inc
in
enter
xchg
jne
in
fnstcw
push
fwait
xchg
inc
xor
stos
gs
icebp
jmp
push
add
xchg
imul
adc
out
dec
lret
js
addr16
lods
ja
sahf
fdivrl
incl
push
mov
mov
dec
inc
sti
xor
cmp
jl
or
and
pop
ljmp
mov
imul
popa
dec
mov
stc
shr
mov
jl
and
adc
push
cmp
stc
std
das
jl
sbb
dec
dec
stos
icebp
xchg
jo
xor
lods
jnp
imul
shll
xchg
ja
aaa
imulb
fisttpl
mov
mov
jmp
push
and
add
inc
insb
loop
sbb
mov
mov
in
mov
ror
lcall
and
dec
cmpsl
or
lcall
dec
xor
cmp
std
sbb
jl
adc
je
cmp
and
cmp
xchg
lea
outsb
aas
pop
test
incl
loopne
xor
test
gs
out
jbe
popf
or
pushl
stos
jle
popf
jae
scas
fiaddl
cmp
inc
push
je
mov
ret
mov
cli
cmp
sbb
cli
sbb
mov
js
mov
das
push
movsl
adc
mov
push
sub
pushl
and
push
les
lahf
pop
dec
mov
and
inc
movsb
jle
sub
call
adc
seta
pop
jb
jo
repz
mov
scas
loopne
adc
pop
rcr
jecxz
lcall
jg
mov
pop
leave
das
pop
push
sti
pop
mov
test
loope
in
out
pop
std
jle
pushl
inc
pop
enter
ljmp
sub
push
mov
decl
cmp
outsl
add
fwait
cmp
repnz
insb
test
mov
subb
lcall
mov
cmpl
xor
pusha
jno
mov
pop
aas
mov
lods
incl
je
ficoml
outsb
pop
idivb
insl
rol
xchg
mov
add
adc
outsl
push
out
lcall
dec
cmp
repnz
pop
sbb
cmp
loope
sbb
int
in
cmova
xchg
pop
fisttpll
out
sub
ficomps
push
icebp
add
push
fadd
inc
jle
fs
dec
int3
mov
add
mov
call
xchg
enter
test
cwtl
cmp
mov
test
mov
push
mov
pushl
ljmp
sbb
lret
ds
paddb
mov
xchg
dec
pop
ljmp
mov
pop
stos
loop
repz
jne
aas
out
pop
ret
inc
pushf
push
lock
xlat
pop
jmp
or
stos
add
fsubr
rcll
dec
xor
cs
fidivl
in
jg
mov
outsl
push
jmp
pushl
fwait
inc
jns
repnz
enter
icebp
insb
test
imul
cmp
fisttpll
int
inc
xchg
fsub
scas
xchg
cmp
xor
pushf
push
push
xchg
mov
pop
out
loopne
in
fnstcw
movsb
adc
ret
orb
mov
jmp
adc
and
insb
adc
add
and
mov
daa
push
das
cmp
cmp
incl
fmuls
stc
mov
mov
inc
repz
sbb
lret
push
dec
and
sub
call
ss
push
add
lods
push
add
repz
loop
dec
and
sub
xor
inc
loop
sub
incl
pop
adc
into
add
xlat
nop
int
push
imul
jmp
ret
push
test
clc
ljmp
ljmp
lret
cli
ss
mov
pop
xor
mov
mov
add
xlat
add
push
sahf
test
jmp
aaa
jmp
pop
sub
popa
mov
jo
xchg
mov
loopne
popf
mov
sbb
pop
fdivr
call
jg
addr16
rcr
in
push
sub
test
fwait
cmpsb
stos
inc
int
inc
cmpb
dec
popf
mov
jl
je
sti
adc
pop
mov
daa
scas
iret
mov
pop
lcall
pop
sbb
ljmp
roll
mov
shrb
add
js
xchg
subl
jmp
xor
leave
loopne
pop
xlat
xor
or
push
add
mov
clc
xlat
xchg
stos
mov
fcomip
push
leave
pushl
fidivrl
xchg
add
push
je
in
fisubrs
mov
xchg
mov
inc
pushf
out
cmp
popa
or
popf
sahf
adc
mov
jbe
cmp
jmp
pop
orb
pop
push
mov
jbe
call
jg
mov
fsts
mov
in
inc
mov
movsl
loop
movsb
push
pop
and
cli
cmpsl
lea
xor
fldenv
fdivl
leave
std
decl
movsb
je
lcall
and
mov
xlat
lods
movb
loope
mov
jmp
ljmp
js
mov
add
call
jae
or
mov
cmpsl
sti
sub
jg
cmp
jb
xor
xchg
imul
add
fcoml
rorl
pushl
cmpl
outsl
mov
lods
jo
gs
in
int3
ret
mov
aas
lods
lods
ja
fsubrl
sub
out
ljmp
loopne
aam
aaa
jne
nop
imull
xchg
xchg
addr16
incl
cwtl
inc
sub
add
sarb
mov
sub
scas
push
adc
and
call
jmp
xor
push
xor
inc
mov
xchg
push
repz
lea
jmp
lods
inc
jne
cld
js
or
rol
inc
sti
add
adc
idiv
jmp
int
push
mov
decl
aaa
pop
addr16
jns
test
rcrb
insb
inc
xor
mov
pushl
scas
xchg
and
and
jbe
insb
lahf
cmpl
and
sahf
sahf
fnsaves
incl
mov
ljmp
data16
mov
aas
ja
inc
jg
sbb
out
dec
shll
and
mov
test
sbb
jmp
xor
push
les
jp
mov
push
lods
mov
in
xchg
or
lahf
inc
cmp
ss
dec
aad
push
mov
fcmovnbe
jns
cmpsb
xor
imul
rcr
sar
jb
cmpsl
call
inc
lock
pushf
sub
or
jl
out
ret
loop
rdtsc
rcrb
mov
std
outsb
and
cmpl
rol
push
in
addr16
mov
push
jmp
jbe
pop
fsub
mov
and
popf
ret
cltd
push
xor
jl
popa
cmp
xor
sbb
cmpl
push
adc
into
aam
mov
notb
mov
dec
add
in
adc
mov
and
cmp
mov
mov
mov
inc
push
or
ja
cwtl
cmp
add
xchg
xlat
jbe
leave
orl
mov
loope
or
into
pushl
pusha
fsts
adc
test
mov
test
scas
dec
xchg
jecxz
pop
scas
movsl
dec
cmpsl
hlt
js
int3
loop
mov
lds
out
mov
pop
push
pusha
dec
lcall
test
clc
iret
lcall
push
inc
push
jae
dec
push
mov
andb
icebp
loope
or
loopne
push
add
mov
inc
cld
pop
push
aaa
data16
hlt
cmc
dec
aaa
shr
jmp
sarb
or
cmp
push
mov
jl
pop
in
pop
dec
in
inc
pushf
ret
mov
cmpsb
std
xchg
aam
mov
lcall
notb
gs
cmc
sbb
xchg
jecxz
jecxz
push
adcl
dec
inc
mov
insb
xchg
mov
mov
inc
lret
cmpsl
adc
shll
adc
leave
mov
scas
aaa
ljmp
jbe
inc
repnz
movsl
lock
aad
mov
xchg
pusha
cmc
and
xor
js
push
jo
movsb
mov
push
enter
in
dec
add
daa
dec
mov
es
mov
shll
aam
dec
xor
es
decl
sbb
pusha
out
dec
mov
ud1
push
pop
cltd
inc
push
sti
out
mov
xchg
mov
jmp
dec
mov
leave
jg
fcoml
roll
andb
pop
imul
mov
jmp
mov
mov
pop
cmp
mov
cmp
add
imul
mov
stc
push
pusha
xchg
dec
or
adc
adcb
lock
mov
clc
in
push
push
or
dec
and
in
shlb
call
lods
std
mov
enter
test
mov
cmpsl
mov
add
adc
inc
mov
mov
gs
cwtl
sub
nop
mov
sbb
xchg
and
test
dec
fdivrl
in
les
inc
inc
xchg
xlat
sbb
je
aam
fists
dec
out
dec
sub
movsb
cmp
in
test
and
iret
not
mov
sbb
das
pop
mov
incl
push
movsl
fidivrs
fisubs
mov
inc
mov
mov
dec
fimull
push
int3
enter
incl
je
mov
push
mov
sbb
arpl
jno
cld
push
cmp
mov
call
xchg
inc
popf
clc
push
test
mov
jg
push
dec
iret
dec
enter
xchg
neg
sub
and
xchg
mov
int3
cld
lahf
test
test
lcall
ret
jecxz
bound
ljmp
int
rorb
and
std
ret
hlt
dec
icebp
repnz
call
dec
mov
movsl
mov
push
imul
loope
jnp
in
mov
imul
adc
mov
xchg
dec
push
adc
in
popf
jo
push
ss
mov
mov
pushf
inc
es
inc
leave
mov
ss
add
pop
lret
push
push
das
lods
mov
mov
jmp
pop
out
scas
movl
cmpsb
sbb
sbb
or
and
xchg
pushf
ljmp
pop
and
orb
into
and
sbb
jmp
add
sub
add
jmp
nop
roll
ret
insb
xchg
sub
movsb
std
in
insb
jmp
rorb
decl
pop
jge
and
cmp
xlat
pop
dec
mov
outsl
inc
ss
push
ljmp
fmul
loope
mov
add
sub
adc
loop
xor
mov
iret
out
cltd
popf
lcall
call
or
out
test
insl
dec
leave
orb
repnz
cmpsb
ret
push
mov
jmp
pop
xor
fdivs
int
repnz
xor
mov
jmp
jp
xchg
sub
adc
lahf
lcall
add
enter
cld
lcall
mov
sbb
sub
xor
enter
stos
mov
cmpl
ljmp
add
clc
popa
adc
leave
and
mov
popf
push
ljmp
sub
lcall
lea
ds
dec
or
mov
es
mov
push
push
es
ficompl
mov
in
cltd
stc
mov
xorb
xchg
inc
daa
sahf
aaa
call
add
ljmp
and
outsl
jmp
adc
adc
lods
add
add
ljmp
push
dec
xchg
mov
fnstsw
movsb
inc
adc
xlat
jno
mov
aad
sbb
or
mov
in
ret
cs
imul
out
mov
xchg
jl
xchg
pop
and
xchg
call
incl
xchg
cmp
sbb
push
lds
insb
jne
cmpsl
sahf
cmpsb
clc
pushf
iret
adc
and
cltd
inc
mov
decl
pop
decl
add
add
xchg
sti
ret
push
test
cmp
adcl
mov
paddusb
imul
ljmp
imul
icebp
jg
imul
aam
jg
pop
xchg
addr16
ljmp
inc
rorb
inc
lcall
stos
in
mov
inc
pop
cmpsl
adc
incl
mov
imul
pop
jecxz
ret
data16
in
lea
insb
ret
mov
jmp
loopne
mov
cmpb
and
xchg
cltd
arpl
push
push
mov
pop
and
cmp
incl
mov
xchg
sbb
xchg
cld
xor
xor
dec
iret
std
aaa
loopne
test
je
cld
jmp
int3
scas
arpl
test
stos
xor
dec
frndint
fstpt
js
pop
pop
jae
xchg
lret
pushl
adc
sti
xlat
mov
and
movsl
out
nop
sub
ret
add
dec
imul
decl
adc
fimull
pop
mov
insl
mov
pop
in
dec
jle
lods
push
fistpl
std
rep
xor
leave
jno
mov
fmuls
ljmp
push
popa
ljmp
xchg
xchg
xchg
mov
lea
mov
icebp
pop
sub
aad
es
mov
enter
aad
insl
jmp
xor
incl
xlat
dec
in
addl
data16
push
cmp
leave
adc
ja
add
and
pushl
mov
inc
repnz
clc
inc
pop
aam
jecxz
in
cltd
mov
decl
and
arpl
ds
inc
inc
dec
std
push
cwtl
xlat
ret
add
xor
mov
in
xor
xchg
daa
mov
jmp
push
scas
pop
lods
xor
outsb
out
cmp
cltd
inc
lods
testb
gs
and
dec
cmp
stc
je
in
mov
scas
pop
pusha
mov
fnsave
add
jge
enter
jecxz
lcall
icebp
jnp
inc
xchg
inc
fmull
push
repnz
and
out
add
push
dec
xchg
and
cmp
pop
stos
mov
lods
sarl
xchg
cmc
push
jecxz
testb
inc
addr16
popf
dec
cmp
iret
sbb
jmp
iret
mov
xor
mull
jle
xor
jmp
xchg
jge
adc
out
push
inc
jmp
ljmp
or
mulps
loop
shrl
inc
cli
push
inc
ja
xchg
out
xor
lods
shlb
inc
fs
ljmp
adcb
dec
mov
add
xor
sub
in
pop
sar
cmpsb
inc
js,pt
lcall
sub
and
pop
jns
outsb
sahf
scas
pop
push
daa
mov
push
push
adc
jg
cmpb
jg
fisubs
gs
inc
jp
xchg
or
push
fnstsw
into
sub
outsb
jns
call
sarl
cmp
jo
sarb
gs
xor
out
pop
jmp
fildll
sbb
and
outsl
dec
test
fldl
popa
in
push
mov
call
pop
aad
mov
hlt
adcb
insb
das
arpl
push
ret
xchg
dec
call
jae
insb
xor
or
lods
or
ljmp
push
das
inc
cli
cmp
jmp
push
in
cmp
shrl
jecxz
jno
clc
cmp
stos
call
xchg
ret
mov
add
cmp
add
test
push
les
dec
insb
dec
es
mov
cwtl
call
mov
jne
fbstp
pushl
xor
les
fistpll
std
dec
mov
aad
mov
jmp
lret
sbb
xchg
jb
out
or
loopne
or
imulb
push
xchg
mov
out
push
inc
aad
xorb
mov
loope
xor
rorb
add
jmp
mov
and
jmp
sbb
push
dec
xchg
es
shlb
jne
outsl
ss
jl
loop
mov
hlt
adc
jns
les
stc
fwait
sti
test
jg
push
jp
pushf
outsl
xchg
fwait
iret
test
incl
mov
orb
jae
mov
aam
jo
xor
shr
xor
xlat
sbb
imul
push
mov
mov
add
nop
dec
cli
fdivl
adc
adc
jl
sar
ljmp
inc
push
inc
mov
mov
aam
mov
sarl
gs
ret
jmp
jnp
sub
sbb
xor
js
je
jb
lods
add
gs
in
into
push
fsubrl
jmp
add
mov
or
icebp
and
ret
jle
xchg
outsl
inc
mov
adc
call
jae
loop
and
sub
out
sbb
outsb
icebp
cmp
sti
popf
and
out
mov
aaa
lcall
pop
cli
out
cmp
std
stos
ljmp
mov
sub
dec
in
or
dec
imul
xor
movsb
ss
fnstsw
and
jno
xor
outsb
sub
call
pushf
jle
or
and
or
inc
and
popf
sahf
int
dec
outsb
out
clc
dec
mov
ljmp
adc
dec
xchg
pop
aam
mov
mov
pop
mov
dec
jle
faddp
bnd
adc
incl
sub
cltd
jp
fdivrl
push
mov
loop
jbe
jle
in
lds
cld
ljmp
push
ss
pop
repnz
adc
adc
jge
ja
xor
push
jnp
or
cmpsb
lret
aam
fsubs
jp
mov
int
mov
mov
testb
mov
mov
bound
sbb
adc
pop
jnp
arpl
cmp
push
das
xchg
cmp
pop
jl
sti
lahf
imul
and
dec
add
insb
or
mov
xor
scas
pop
jmp
in
cld
jns
hlt
mov
inc
sbb
xlat
pop
push
shlb
movsl
or
add
jno
cmpsb
enter
mov
pusha
stos
add
sub
cmpsl
or
inc
xchg
decl
shlb
sbbb
enter
data16
xor
push
int3
dec
cmp
incl
jnp
fldenv
xor
push
bound
cmp
ret
stos
call
iret
out
or
or
add
jecxz
aad
pop
xor
pop
inc
sub
in
pop
xchg
ljmp
mov
jns
mov
add
jno
and
cmp
lret
mov
call
into
and
mull
dec
add
jle
out
test
sub
std
decl
jecxz
addb
call
dec
jp
dec
test
jnp
or
pushl
mov
xor
mov
push
mov
and
call
cltd
negl
xor
xor
mov
jnp
insl
adc
cmp
shl
inc
or
adc
mov
ljmp
mov
mov
push
push
and
in
lret
cli
sub
lock
jle
mov
xchg
pop
push
imul
jp
xor
add
sbb
lcall
mov
inc
dec
lret
xchg
movsl
sub
mov
ret
movsl
xor
outsl
jmp
and
lods
mov
add
fwait
pop
fdivr
ljmp
addr16
insb
aam
mov
ljmp
jle
ja
push
jp
mov
pushl
rcl
cs
sbb
pop
adc
test
popl
test
shlb
sbb
test
push
ds
out
daa
clc
mov
call
lahf
gs
xchg
adc
ljmp
jae
add
pusha
push
mov
test
jl
jg
stc
jns
gs
adc
scas
fstl
xor
push
lcall
mov
arpl
adc
xor
and
ja
daa
gs
incl
pop
test
sub
shr
cmpsb
inc
add
add
arpl
shl
push
push
jnp
fs
xchg
pop
cs
mov
stos
ficoml
push
dec
insl
sub
cmp
jmp
add
mov
arpl
arpl
push
movsl
fs
jg
rorb
movsb
jg
movsb
xchg
ljmp
pop
mov
push
sub
dec
idivl
jmp
and
lods
push
or
cmp
jmp
mov
repz
ficomps
xchg
pop
call
add
add
shrl
cmp
xlat
mov
mov
ds
or
int3
jo
icebp
lcall
fcmovbe
mov
mov
sbb
out
test
push
inc
mov
inc
inc
insl
and
incl
in
mov
xchg
and
dec
cmpsb
inc
xchg
ja
shlb
daa
sar
ljmp
jmp
sub
lea
dec
out
and
mov
insl
adc
mov
decl
and
je
and
insb
lahf
add
or
mov
xor
adc
call
cmp
cmc
inc
test
mov
push
fmulp
adcb
rcr
stos
push
cmpb
lcall
jne
aam
cmp
stos
push
pop
xchg
iret
je
lods
mov
les
xchg
mov
es
sahf
mov
decl
add
adc
inc
gs
data16
jbe
lods
jb
xor
lret
push
pop
in
sbb
push
jecxz
popa
jle
sbb
in
stc
cwtl
xchg
jp
pushf
rorb
lahf
adc
mov
lcall
lods
fcmovb
lods
push
rcrl
pop
mov
push
cmp
dec
mov
inc
push
jle
in
sarb
into
xchg
imul
xchg
xor
or
cld
add
add
into
lods
jecxz
andl
popa
bound
push
ja
aas
lcall
cs
pop
dec
add
negl
add
or
lcall
xor
call
leave
push
clc
dec
dec
repz
fcoms
mov
xchg
and
push
mov
push
xchg
hlt
popf
jns
stos
cld
mov
fdivrp
pushl
mov
pop
push
js
sbb
out
aaa
ja
fwait
dec
gs
sbb
xor
xor
decl
aad
lods
mov
loope
js
jns
sbb
lret
out
pop
rcrl
jmp
adc
cmc
and
xlat
mov
sarl
mov
or
lcall
sub
jmp
arpl
push
jmp
clc
jecxz
repnz
push
jg
inc
mov
fiaddl
in
fmuls
push
and
sbb
and
ds
fsubs
jmp
inc
int
dec
cmp
add
insb
sbbl
sbbb
fdivrp
dec
xchg
push
rolb
out
and
sbb
scas
jne
jno
xor
jae
lods
jnp
jbe
push
decl
out
fisubrl
sub
mov
negl
addl
out
lods
das
pop
lea
and
fcmovu
fsubs
popf
xor
mov
cmp
mov
cli
mov
push
sub
jg
ljmp
push
jo
insb
roll
pop
add
rcrb
shlb
divl
ljmp
cmp
mov
aam
aaa
cmpsb
popl
push
sahf
cltd
cmp
fcom
in
inc
icebp
mov
ljmp
mov
int
scas
xlat
jno
pop
mov
push
push
icebp
pop
or
imul
frstor
fstl
fidivl
mov
pop
jecxz
daa
insl
cld
mov
adc
cmp
flds
mov
leave
std
lods
nop
mov
add
shrb
out
sbb
adc
pushl
pushf
and
pop
mov
push
jbe
xchg
jp
pusha
add
jp
out
sahf
add
lcall
dec
mov
clc
les
cli
sub
fstps
cs
sbb
push
lods
sbb
lcall
xor
test
push
pop
flds
cs
loopne
test
mov
sbb
mov
das
icebp
outsb
lea
xor
mov
inc
inc
jmp
pop
jno
pop
push
stc
stos
push
rcll
fsubr
and
fdivrs
fadds
in
sub
add
daa
int3
daa
mov
cmp
arpl
cmp
cmp
and
dec
loopne
dec
inc
mov
out
aad
lods
mov
lds
xchg
into
call
sbb
mov
push
movsb
mov
stc
or
mov
pop
cltd
push
outsb
add
sbb
dec
add
inc
popf
mov
fstpl
sbb
dec
xchg
mov
lret
dec
cmpsb
int3
jo
sub
decl
clc
ret
add
jns
fwait
xor
jmp
mov
jbe
inc
and
mov
jle
mov
aaa
mov
ljmp
arpl
lcall
int3
jecxz
fwait
or
xchg
scas
int3
jns
in
sbb
inc
or
lcall
cmp
dec
mov
xor
sub
es
testb
ljmp
dec
daa
cmpsl
sub
xchg
mov
les
or
xor
gs
mov
insb
mul
mov
push
push
sbb
add
push
or
jbe
jmp
pop
adc
push
adc
cli
adc
decl
cmpsl
loope
mov
aam
inc
inc
movsl
xor
cld
mov
sbb
icebp
xchg
imul
adc
mov
enter
jle
sbb
insl
push
push
fwait
fs
mov
call
negl
pop
add
mov
mov
lret
dec
or
test
in
fnstsw
js
xor
dec
mov
adc
mov
into
stc
mov
outsl
orb
push
mov
out
push
sub
data16
or
cmp
andb
and
jns
je
jmp
movsb
jo
icebp
sub
orb
sbb
mov
andl
rcrl
pushf
inc
enter
pushf
lock
ret
xchg
sbb
subl
pop
hlt
xorb
ljmp
sbb
and
xchg
pop
jp
and
insb
inc
mov
loope
rcrl
inc
pop
pushl
cmp
cmp
hlt
fbld
jb
sti
lods
mov
bound
xchg
push
js
and
cmc
fcoms
jp,pn
jmp
mov
cli
ljmp
adc
icebp
out
xchg
adc
or
fcomps
mov
mov
mov
mov
pop
lret
or
push
mov
sbb
fists
inc
or
ffree
inc
lea
or
push
in
dec
dec
pop
xchg
jle
mov
dec
in
ret
mov
cmp
arpl
clc
lods
ret
shll
adc
std
mov
sar
jmp
mov
add
inc
pop
lods
sub
in
lcall
or
in
cmp
dec
inc
xor
ss
and
jae
mov
test
adc
push
mov
ljmp
ficoml
mov
out
jmp
lock
int
scas
mov
mov
mov
push
xchg
adc
inc
and
int3
adc
js
scas
imul
xchg
dec
loop
xchg
insl
cs
call
fisubs
sub
addr16
cld
enter
or
jb
add
jns
cmpsl
xor
add
sub
hlt
inc
inc
gs
mov
adc
xchg
jmp
xchg
xor
fcoms
mov
out
mov
dec
cmp
mov
popa
in
cld
test
sar
dec
test
ljmp
fdivrs
hlt
xor
add
popf
pop
and
pusha
mov
stos
call
mov
repz
out
cld
pop
mov
fcoml
lods
mov
or
xchg
inc
jb
push
fildl
jg
mov
add
ja
pusha
xchg
pushf
mov
decb
sub
inc
inc
stc
push
decl
mov
mov
fists
jnp
paddusb
xchg
ljmp
xchg
inc
sub
out
cwtl
inc
pop
jge
push
test
xor
pop
mov
sub
insb
call
xor
dec
mov
shlb
dec
pop
testb
cmp
outsl
jbe
jo
sbb
int3
lahf
lock
jo
cmp
or
lea
fldl
lahf
mov
xchg
cwtl
cwtl
sbb
loope
incl
inc
inc
lock
jmp
inc
fisttpll
loope
xor
out
data16
lcall
aam
mov
lahf
pop
xchg
je
call
rcll
pop
fldl
mov
jmp
fmull
std
mov
fisttpl
mov
je
notl
insl
xchg
push
call
pushf
sub
out
jecxz
rcl
jle
push
sbb
rclb
call
mov
test
sbbb
es
sbb
add
gs
cmp
stc
imul
xorl
fimuls
xchg
jo
xchg
pop
mov
ljmp
push
xor
pop
mov
fidivl
lds
mov
xchg
pop
aas
cltd
aad
arpl
decl
cmc
adc
clc
dec
cmp
and
or
out
sbb
ljmp
scas
aad
cmpsl
stos
push
outsb
mov
aas
push
xchg
je
stos
addl
popa
pop
xchg
xchg
call
rcr
movsl
pop
mov
popf
dec
cmpb
sub
dec
pop
popf
pop
xor
dec
in
mull
shlb
add
xchg
pop
xor
ja
mov
adc
lds
repz
jp
sbb
xchg
icebp
wrmsr
popa
into
lcall
lcall
outsb
cmp
jae
in
dec
ja
sub
mov
sbb
pusha
mov
stos
scas
mov
stc
es
call
dec
dec
or
outsl
mov
dec
clc
and
ds
addb
sbb
sbb
ss
jmp
pop
push
push
jge
stos
adc
add
lock
xor
lcall
push
cmpsl
sbb
ljmp
adc
movsb
ss
xchg
rcrb
fists
add
pop
push
sub
ss
jmp
clc
pop
push
pop
pop
push
int3
and
lock
xlat
movsb
arpl
cmpsb
jno
jmp
in
decl
nop
sbb
xchg
jge
push
jecxz
cmpsl
mov
inc
sbbb
data16
ljmp
incl
fld
adc
push
xchg
arpl
sbb
int3
pop
xor
lods
fists
pushl
scas
jle
add
sbb
adc
stos
xor
mov
fbld
lret
add
shlb
mov
test
mov
lea
fwait
mov
imul
push
jo
daa
cmp
xor
scas
cmpb
icebp
dec
xchg
and
adc
xor
pop
mov
lahf
pop
stos
aad
stc
jmp
mov
out
insl
adc
push
arpl
adc
insb
mov
cmp
outsl
loopne
cmp
icebp
push
loope
cltd
jnp
addb
mov
pop
fwait
imul
jno
or
incl
sub
pop
cmpsl
inc
imul
imulb
sub
xor
mov
sub
mov
mov
mov
out
cmp
fsubp
adc
mov
push
std
sub
adcl
jmp
std
insl
mov
es
jae
mov
add
in
push
xchg
dec
xchg
les
std
testb
decl
fldcw
sti
cld
ficomps
mov
call
cmc
xor
dec
jmp
add
ljmp
and
nop
sbbl
cmp
or
push
cmpsb
ljmp
sbb
push
jae
daa
loop
lds
cmp
adc
add
ljmp
inc
aas
les
jae
xor
pop
scas
andb
subb
cli
cs
decl
mov
push
mov
mov
push
lock
in
arpl
lret
add
decl
xor
add
fisubs
stos
je
jmp
xor
dec
sar
pop
pushl
fsubrl
mov
sub
hlt
inc
mov
cs
cmp
mov
mov
jmp
sbb
fs
xchg
daa
jnp
sub
cmp
sbb
pop
aam
andl
ljmp
aam
cmpsb
cmpsl
pop
or
pop
or
mov
lds
into
imul
cmp
rolb
call
lcall
and
das
and
jg
adc
adc
aas
pop
fnstcw
sbb
int3
popf
lods
in
mov
loop
mov
sub
xchg
pushf
cltd
add
incl
sub
push
adc
inc
and
jb
mov
out
mov
je
test
fadds
inc
mov
iret
test
cwtl
ret
ds
in
fidivs
cmp
mov
mov
sbb
in
pop
dec
fwait
adcb
rolb
xor
lods
dec
sbb
das
fidivs
aad
push
incl
and
rcrb
fdivrs
aas
jle
sbb
movsl
xor
decl
and
inc
xor
rcrl
pop
std
adc
add
decl
xor
setno
scas
push
lcall
push
notb
add
dec
cmp
testb
lret
shr
sar
lcall
dec
cli
jno
sbb
data16
es
nop
sub
mov
mov
call
mov
popf
adc
leave
out
mov
pop
ss
ljmp
and
cmp
decl
outsl
ret
sub
call
push
mov
fsubl
sahf
data16
inc
les
js
pop
popf
cmp
jmp
mov
jnp
cmp
push
lcall
dec
aas
into
mov
fidivl
xorb
ret
lcall
mov
xchg
dec
call
pop
inc
inc
mov
test
xchg
int3
mov
orl
insb
dec
mov
push
jnp
clc
addr16
in
sti
dec
push
mov
sar
imul
jns
xchg
push
cmp
stc
adc
fwait
dec
popf
push
sub
addr16
in
pop
push
sti
pusha
inc
cmp
decb
imulb
decl
mov
cli
loopne
flds
es
or
popa
out
jno
and
sar
in
shl
ljmp
mul
sub
mov
fs
daa
sbb
push
ljmp
fdiv
cld
cmpsl
out
cmp
in
ret
fldt
pop
daa
mov
sbb
sbb
jg
jb
scas
xchg
hlt
mov
and
xchg
adc
fwait
mov
sbb
out
mov
data16
jmp
jnp
add
adc
sbb
mov
adc
jns
movsb
xchg
shll
push
lcall
jl
push
daa
insl
xchg
sahf
adc
rolb
aaa
xorb
adc
pushl
stos
stos
add
mov
push
sbb
mov
xor
loopne,pn
pushl
aas
inc
xchg
scas
imul
cmpb
xorb
addb
jp
popa
scas
iret
sbb
jmp
leave
sar
add
mov
out
cltd
das
sub
not
xor
ficompl
repz
call
aaa
cmp
movsl
out
cmp
outsl
aas
xor
stos
pop
sub
mov
pop
stos
lcall
sbb
mov
mov
test
mov
roll
pushl
fst
scas
imul
inc
ss
and
je
dec
scas
inc
mov
mov
mov
mov
mov
cmc
aaa
inc
dec
xchg
mov
fildll
mov
inc
orb
cli
sar
incl
movsl
sbb
push
ret
cli
lahf
sbbl
mov
cmc
stos
test
incl
lods
mov
sub
into
ret
decl
leave
xchg
push
les
pushf
les
sbb
jl,pt
mov
incl
and
sbb
ret
dec
shrb
mov
sub
jmp
mov
dec
xchg
call
sbb
pop
lds
inc
fsubr
orl
cmp
pop
into
and
std
inc
packsswb
add
mov
adc
inc
or
repz
cmp
sub
xchg
xchg
xchg
and
hlt
push
jne
lret
js
push
sub
jecxz
jmp
bound
insb
sbb
je
xor
mov
cmpsl
lret
pop
rorb
pushf
mov
nop
mov
inc
push
xchg
std
push
lds
and
aad
inc
push
pushl
fsubrl
mov
sub
mov
sub
sbb
or
testb
push
mov
adc
imul
xor
enter
jmp
std
lcall
push
scas
push
and
mov
jo
sbb
iret
push
js
or
lahf
test
push
jmp
mov
cmp
or
call
out
inc
cmp
call
ljmp
pop
and
arpl
ficompl
pop
xor
and
pop
mov
xlat
xchg
lret
fmul
and
and
scas
test
outsl
inc
sub
out
adc
inc
push
mov
push
sub
mov
or
pushl
ds
sub
lods
cs
inc
loope
jbe
shr
movsl
test
repnz
cltd
add
decl
inc
cs
mov
mov
andps
and
mov
call
mov
ljmp
cli
sbb
mov
push
push
xor
sbb
cmc
xor
decl
or
addr16
inc
lds
mov
mov
push
aaa
movsl
jp
decl
add
es
movsl
inc
mov
test
sbb
cmp
or
lcall
inc
pop
pop
and
dec
popf
pushf
dec
out
test
mov
and
cmp
psrld
jecxz
lods
data16
pushl
adc
xor
pushl
into
ret
fwait
rcrl
mov
call
mov
dec
out
es
jne
jmp
fidivl
jle
jg
fnstenv
cltd
imul
lret
jmp
stos
cli
mov
imul
mov
dec
or
mov
out
enter
subl
cmp
iret
and
mov
incl
test
cmp
lock
xor
mov
inc
pop
cs
push
jae
mov
je
push
loopne
mov
and
sti
repnz
jnp
push
movsb
jmp
addr16
dec
into
and
pushl
mov
mov
lds
call
stc
mov
adc
mov
incl
xchg
loopne
adc
or
in
push
lds
xchg
fimull
lock
jo
mov
inc
push
cmp
jns
pop
inc
mov
adc
mov
rcrb
clc
push
add
jmp
jmp
lahf
lods
or
cmp
mov
dec
mov
scas
roll
cmp
jnp
add
sbb
ss
repnz
push
or
cmpsb
mov
jne
pop
dec
or
clc
mov
jg
push
add
fcomps
into
dec
jle
hlt
shlb
and
pop
loope
sbb
repz
push
in
jmp
mov
add
mov
and
mov
roll
insl
mov
call
mov
fwait
call
mov
adc
pop
jge
arpl
and
incl
xor
sub
xor
test
sarb
ja
adc
in
xchg
jle
enter
jb
imul
test
test
jg
push
mov
cmp
pop
hlt
jnp
daa
fnstcw
sbb
xor
jno
sbb
sub
ds
mov
out
sub
rorb
and
and
popf
and
adc
fnstcw
sti
fstpl
xor
sub
add
pop
cmp
pop
pushf
gs
lock
pop
pop
inc
call
jge
xchg
aad
ljmp
add
call
rolb
sahf
test
test
lcall
jp
cmp
outsl
insb
jnp
sbbb
cmp
adc
mov
pop
imul
imul
cmp
ss
lcall
add
mov
adc
sti
popa
sahf
les
lea
xor
in
jp
decl
cli
orb
cmp
and
out
movsl
mov
mov
call
roll
sub
ds
aam
in
push
sub
mov
mov
push
and
ss
out
or
add
sbb
lock
xor
jne
ficoml
mov
inc
xchg
lea
inc
pushf
dec
mov
fprem
jns
std
sbb
push
inc
inc
mov
test
cmp
cmpsb
test
int
decl
jp
int
out
mov
movsb
in
mov
and
jp
lret
das
jne
outsb
inc
jmp
test
std
cmp
std
ja
addr16
mov
leave
mov
outsb
mov
pop
filds
inc
lods
orb
mov
mov
jbe
shl
in
dec
jle
jecxz
sti
aad
clc
icebp
lods
and
pushl
fwait
stos
push
jmp
lret
scas
and
sub
jbe
push
aam
scas
adc
xchg
imul
jmp
movsl
mov
pop
cltd
mov
xchg
test
sub
xchg
scas
cmp
ljmp
jecxz
sbb
xchg
mov
dec
inc
sti
es
inc
rclb
aas
mull
andb
ljmp
loopne
cmpsb
jo
dec
jns
jge
xorl
int
and
xchg
scas
pop
fdivrl
jmp
cmp
dec
dec
pop
fwait
and
mov
dec
rolb
jl
dec
jg
movsb
push
call
mov
push
lcall
es
and
in
adc
adc
frstor
jge
dec
dec
mov
fs
mov
loop
daa
leave
addr16
xorb
bound
in
push
mov
lcall
imul
je
sahf
repz
mov
mov
imul
nop
sahf
cmpsl
icebp
lcall
xchg
shll
loopne
es
imul
lea
sbb
dec
pushf
xacquire
fisubrl
out
xchg
cmpsl
xor
fst
adc
pop
pop
nop
dec
mov
and
das
xchg
sarb
mov
cwtl
lret
rcrb
lds
push
jl,pn
sbb
sub
push
mov
xchg
inc
mov
add
mov
icebp
loope
pop
ss
call
sbb
sahf
pushl
daa
xor
addr16
fistl
in
lret
inc
push
testb
xor
jmp
hlt
loopne
fisubrl
movsb
test
jmp
lret
mov
pop
sub
fadds
repnz
pop
mov
cli
inc
and
pop
fwait
pop
cmpsl
stc
outsl
mov
int3
fistps
cmp
xorl
add
jle
repz
call
inc
aad
inc
iret
xor
rcll
add
and
decl
jl
test
mov
adc
pop
in
xchg
shrb
mov
adc
pushl
or
jnp
scas
test
test
outsb
imul
iret
xlat
push
addr16
sar
lcall
jg
inc
cld
push
nop
push
cs
sbb
cmp
enter
adcb
addl
fidivs
add
mov
icebp
xchg
sbb
xor
dec
test
push
sahf
pusha
mov
xchg
and
xor
je
lods
and
imul
out
pushf
lcall
mov
fcompl
mov
and
cmp
hlt
xor
out
adc
mov
ljmp
call
adc
movsl
clc
cmc
fbstp
xchg
push
inc
les
jmp
cmp
iret
shlb
ret
jns
clc
jmp
inc
insb
push
push
dec
push
ja
jne
jno,pt
or
das
and
sub
jmp
andl
hlt
and
pop
inc
cmp
in
outsl
push
out
xchg
incl
ljmp
jno
fidivrl
das
test
es
mov
push
testb
ljmp
cmp
lcall
leave
jne
in
aad
jle
add
pop
scas
mov
pushl
inc
xchg
repnz
jge
sub
push
idivb
in
pop
mov
movlps
cmp
call
cld
inc
in
xchg
lcall
push
push
lcall
mov
jg
jmp
add
add
adcb
or
cmpsl
sub
ljmp
stc
mov
stos
insl
push
jns
xor
movsl
mov
test
in
outsb
jmp
pop
das
or
movsl
push
mov
jnp
decl
aad
pop
pop
push
fidivrl
pop
loope
lds
xor
enterw
fstps
cmpsl
incl
or
jle
and
into
leave
subb
inc
push
xchg
add
pop
pop
dec
scas
ss
pushl
inc
movsl
sub
popf
enter
and
jo
push
xorb
int
xor
lds
incl
popa
nop
mov
pop
push
repz
xlat
leave
jns
insl
jns
xchg
repnz
mov
push
mov
lods
inc
pop
xor
dec
cmp
ja
addl
and
xor
std
mov
sub
popf
out
cmpl
pushl
lock
adc
movsl
mov
pop
sbb
incb
in
lea
xchg
clc
inc
xchg
ljmp
push
push
addl
repz
fadds
scas
and
cmp
ljmp
cmp
push
sbbb
add
dec
cmp
pop
rcl
in
inc
jecxz
out
inc
and
ljmp
sub
xor
add
test
mov
jae
fdivrl
call
mov
out
dec
mov
jns
push
shrl
push
push
loope
pop
jns
or
jmp
ljmp
sbb
sub
negb
mov
cmp
xchg
mov
incl
loope
mov
sub
fisttpll
mov
mov
xlat
dec
mov
or
push
and
push
nop
loop
jne
ficoms
jae
push
jnp
outsl
add
stos
cld
adc
mov
ljmp
mov
aam
insl
or
dec
pop
mov
lahf
mov
pop
sbb
scas
fistl
jns
fwait
popf
mov
jg
jmp
xor
iret
push
decl
call
mov
ret
mov
lcall
outsl
testl
jle
popf
add
inc
or
xchg
out
mov
xchg
incl
je
and
rcrb
enter
jle,pt
add
fwait
sbb
mov
sbb
push
sti
push
pop
push
clc
cltd
clc
push
aad
or
dec
xor
das
mov
or
adc
sbbl
dec
pop
dec
lock
cmp
pop
and
and
lahf
fbld
stc
ja
jge
sub
cs
in
les
mov
push
fbld
mov
add
decl
dec
push
cmp
and
mov
mov
out
push
inc
mov
mov
pop
sar
pushl
dec
jl
sbb
ljmp
enter
jecxz
jbe
add
mov
cwtl
fcompl
test
push
mov
mov
inc
shrb
lcall
dec
dec
and
adc
xor
xchg
fsubrs
aas
addr16
nop
sbbl
mov
adc
dec
cli
push
gs
rcrb
sbb
decl
lret
cmp
and
push
pop
xor
pandn
sub
je
inc
mov
xchg
sbb
xchg
or
scas
push
sbb
ss
lret
cli
inc
rcrb
fldl
stc
push
fistps
xor
ds
sub
out
es
ret
jns
incl
out
out
and
lea
cmpsl
in
sbb
xchg
pop
adc
add
mov
in
jge
ds
or
sub
add
lahf
cmpsb
jmp
or
in
lret
mov
jmp
leave
push
fadd
std
call
push
into
jbe
scas
cmpsb
aad
pop
mov
sahf
lods
pop
xor
sub
std
outsb
lds
lahf
lods
pushf
in
fisttps
jb
xchg
xchg
jl
push
or
movsl
jb
mov
stc
inc
pop
inc
je
xor
xorb
sarl
and
pusha
inc
mov
add
xor
ljmp
mov
scas
xchg
into
leave
add
push
pop
stc
bound
incb
cli
sbb
lds
lahf
xor
test
ret
je
mov
push
bnd
lea
pushf
mov
lcall
xor
scas
arpl
stc
aad
dec
ljmp
mov
divl
mov
dec
fiaddl
incl
adc
xchg
imul
push
mov
mov
popf
mov
pop
xor
test
jmp
es
add
push
scas
daa
sbb
dec
mov
pop
mov
pusha
mov
fwait
add
call
dec
mov
setns
jnp
cli
or
sub
mov
std
sbb
mov
mov
cmp
or
mov
sarb
dec
inc
mov
pop
fisubs
ret
das
loop
aaa
loope
adc
movsbl
cmp
incl
inc
pop
sub
dec
das
push
xchg
add
xorl
pop
sbb
add
js
test
jge
and
or
inc
adc
fstp
out
jb
in
jecxz
pop
das
nop
lahf
sub
jmp
jne
std
mov
xorl
push
filds
lret
lahf
pop
cmpsb
push
add
xchg
ljmp
outsl
out
addr16
xor
jno
dec
jno
xchg
jo
outsb
icebp
or
mov
call
lcall
pop
adc
inc
mov
sahf
sub
pop
and
inc
imul
insl
fwait
out
cmp
sub
lcall
test
mov
jecxz
pushf
movsb
addr16
mov
dec
add
in
dec
cmp
repnz
incl
inc
cmp
push
lock
fsts
fcoml
incb
mov
lods
mov
lds
shl
incl
scas
or
call
mov
jp
sbb
call
pop
dec
popa
or
mov
sbb
call
mov
xchg
insl
mov
in
shlb
xchg
sub
aaa
in
decl
shlb
jl
aad
add
dec
into
test
pusha
inc
mov
and
lcall
ljmp
repnz
mov
imul
rclb
mov
insb
pusha
or
pop
jnp
movsl
inc
enter
cli
pop
jno
jb
outsl
xchg
push
popf
in
mov
dec
fnstenv
gs
and
pushl
push
rcll
clc
les
stos
jmp
arpl
pop
sub
xor
xor
ret
call
ljmp
call
adc
rolb
inc
daa
movsl
push
int
adcb
clc
sbb
incl
push
fwait
xor
or
push
add
mov
xlat
shrl
pushf
sbb
pushl
mov
adcb
sbb
or
sarb
pop
push
decl
loope
lret
inc
or
rorl
shl
push
scas
filds
xorl
call
xchg
pusha
and
mov
ret
or
lcall
add
push
in
fsubrl
sbb
jmp
cmp
or
rcl
out
ss
enter
paddq
test
je
jae
clc
repnz
in
push
sub
out
inc
fisttps
jbe
int
into
xchg
enter
xchg
lahf
lods
xchg
fidivrl
decl
dec
rcrb
inc
lret
sub
adc
outsb
jge
aas
rcr
push
xchg
inc
xchg
dec
jmp
xor
aad
add
jle
enter
fidivs
add
fcmovne
cs
cmp
shld
xor
int3
adc
xor
mov
jp
or
xchg
jge
js
hlt
cs
in
mov
push
clc
xor
lcall
in
pop
rclb
jl
dec
aad
mov
jns
icebp
ret
clc
dec
push
mov
push
jmp
jg
mov
insb
in
pop
repz
ljmp
mov
idiv
decl
ror
push
xchg
je
je
movsb
nop
or
enter
loop
cld
out
hlt
pop
sub
pop
jnp
push
in
inc
ss
xchg
add
and
mov
cmp
insb
in
insl
pop
jb
iret
mov
add
dec
cs
push
xor
mov
pop
dec
lock
decl
dec
inc
pop
adc
and
push
mov
mov
sbb
loopne
sub
mov
cmp
push
sub
lods
sub
and
imul
movsl
sbb
add
cmc
mov
mov
lcall
jl
rcrl
loope
lea
cmp
push
sub
sub
or
mov
call
imul
push
pop
decl
sub
jb,pt
lea
xchg
add
sub
jmp
push
push
out
pop
pop
out
btcl
dec
lds
roll
xchg
mov
jg
jl,pt
shlb
inc
shrb
dec
fs
je
inc
lock
sbb
das
push
jmp
repz
pop
jl
pop
fs
out
jns
nop
mov
outsb
xlat
sub
loop
rcrb
or
xor
cmc
lds
push
xchg
sarb
into
insl
cmpsb
out
aas
in
out
xchg
incl
test
int
out
movsl
mov
fsubl
push
inc
fsubrs
movupd
call
sarl
inc
fisubl
mov
dec
or
je
mov
xor
push
sar
inc
mov
push
xor
mov
imul
adcl
mov
jbe
in
inc
cmc
decl
hlt
jecxz
shll
out
ljmp
fucomp
or
xchg
imul
in
arpl
outsl
jne
mov
jae
cli
scas
sbb
loope
lea
dec
xlat
cld
mov
test
inc
sar
jno
mov
scas
mov
sub
fs
and
jp
insl
mov
int
loop
gs
pop
push
add
sub
decl
shlb
jecxz
xchg
pop
and
inc
mov
sahf
add
incl
les
popl
lcall
jmp
lea
lret
adc
xchg
adc
notb
push
xor
mov
jmp
loope
sti
pusha
or
jbe
dec
sub
inc
mul
mov
dec
jo
std
add
fdivrl
aam
push
push
test
fst
cwtl
push
aaa
fldenv
adc
xor
xlat
imul
incl
lret
rorl
mov
stos
ja
mov
test
test
decl
jno
jmp
mov
imul
inc
jb
insb
rolb
lret
dec
xor
int
xchg
insl
mov
lcall
shll
sub
in
and
mov
popl
adc
mov
aam
xor
fcoml
insb
icebp
aam
xchg
lods
mov
cmc
das
clc
cmp
cmp
sbb
out
sarb
sub
xor
fcmovbe
mov
sti
push
pusha
jb
xchg
dec
cmp
rorb
ljmp
xlat
fisttps
dec
mov
jmp
lret
mov
mov
and
imul
mov
and
outsl
jmp
fistl
push
xchg
in
lahf
or
mov
dec
mov
cmp
test
repnz
aaa
sar
call
push
jnp
test
mov
xchg
mov
and
or
movsb
mov
incl
and
mov
mov
rorl
jl
fistl
js
mov
xchg
pushl
js
push
adc
imul
std
mov
jmp
outsb
fwait
enter
rorl
bound
clc
or
les
add
fldenv
ljmp
push
sbbl
mov
jmp
or
rolb
aas
push
push
decl
and
sub
fdivs
fwait
loopne
jecxz
fs
adc
mov
jmp
icebp
cmp
out
or
sub
aad
mov
jne
dec
jle
jg
xchg
cmp
push
pop
push
pop
xor
and
xchg
scas
test
push
sub
sub
ljmp
jecxz
inc
popa
push
fists
xchg
pop
sahf
call
negl
cmpsb
adc
mov
decl
push
and
sbbb
mov
cmp
test
aaa
and
movsl
push
dec
cmp
xor
mov
incl
loopne
xchg
sbb
ss
sbb
pop
jecxz
mov
xor
repz
pop
addr16
inc
inc
outsl
jns
cltd
sub
aad
mov
cmc
bound
daa
pop
or
int3
out
xchg
xor
xchg
mov
incl
dec
test
pop
mov
jno
pop
mov
sbb
mov
or
sub
incl
hlt
sub
dec
aas
jmp
mov
add
test
sub
inc
sbb
mov
ljmp
and
inc
and
inc
out
dec
adc
mov
cmp
clc
mov
dec
nop
scas
dec
lds
imul
push
rolb
or
push
xchg
push
mov
inc
ljmp
sbb
sub
psrlw
push
lret
xor
pushf
jae
jb
push
add
icebp
test
decl
push
inc
jnp
mov
outsl
jp
jns
les
push
xor
push
arpl
pushl
xor
filds
outsb
je
or
mov
mov
xor
sub
decl
jno
fstps
sbb
subb
dec
cmp
add
lcall
sub
xor
or
xchg
jmp
xchg
sub
push
jecxz
sbb
inc
ljmp
ss
mov
fcoms
mov
sar
mov
in
xchg
cmp
mov
cmp
movsb
mov
and
cmp
inc
sarb
inc
cwtl
mov
incl
add
incl
pop
lcall
push
jns
xchg
int
icebp
mov
mov
fs
shrl
cmc
popf
scas
mov
in
xchg
call
into
sti
mov
or
dec
pop
cld
daa
sbbb
inc
in
mov
jns
aas
roll
or
imul
repnz
add
dec
xlat
pop
mov
or
jmp
ja
sub
jl
push
xor
int3
sbb
inc
pop
in
cmp
icebp
call
inc
test
ljmp
inc
iret
mov
adc
mov
bound
and
jge
push
insb
pop
push
orb
sub
pushf
dec
movsb
clc
and
xchg
and
push
add
lods
in
lds
test
lcall
sahf
fldt
cmp
test
pusha
mov
sbb
push
lock
xchg
decl
pusha
es
or
dec
sbb
outsb
xchg
ficomps
or
add
lcall
fists
pusha
or
icebp
out
out
mov
dec
jno
cwtl
and
dec
jp
dec
push
xchg
xchg
sbb
fs
inc
fisttps
jg
out
xchg
sbb
mov
test
decl
and
pop
loop
jnp
fiadds
mov
fisttpl
jge
push
xchg
pop
pushl
mov
mov
add
mov
test
jp
push
pop
inc
sub
ljmp
mov
clc
pop
cmp
mov
pop
push
or
dec
addr16
xchg
dec
jmp
incl
push
or
push
sub
pop
jns
xchg
and
arpl
lcall
aad
icebp
in
decb
in
adc
lret
loopne
mov
and
leave
or
ret
sub
lcall
jg
push
icebp
cmp
cwtl
pop
add
and
jbe
push
push
inc
push
push
dec
sbb
call
mov
movsb
sbb
sub
pop
incl
lret
addr16
repnz
mov
outsl
push
out
test
mov
jae
mov
inc
pop
dec
inc
jbe
dec
mov
jmp
cld
mov
push
inc
cwtl
sbb
mov
push
cmp
pop
aam
scas
push
lods
lods
mov
pushl
test
or
mov
in
negb
mov
std
pop
pop
je
sbb
mov
lock
call
mov
cltd
mov
xchg
xchg
fisubrl
popf
out
notb
xor
ljmp
mov
push
ret
das
mov
ficompl
and
out
mov
int
xor
jmp
jbe
dec
sarb
aas
pop
mov
sbb
add
or
pminsw
sub
push
in
dec
sarb
xchg
sub
xchg
pop
pop
dec
xor
mov
or
cmp
xor
decl
ret
sbb
icebp
sub
cmovbe
sbb
iret
and
outsb
mov
push
enter
xchg
xorb
stos
iret
mov
jle
mov
popa
inc
xlat
repz
or
jno
xlat
jmp
mov
push
aad
cmp
pop
push
filds
push
out
jnp
push
data16
or
sub
mov
aas
and
mov
cmpsb
hlt
cwtl
xlat
sti
test
incl
out
xchg
inc
add
popf
lcall
pop
leave
mov
and
cltd
rorl
cmpsb
pop
lcall
loop
add
mov
adc
or
sub
sbb
mov
pusha
push
ja
mov
cmp
sub
fdivp
mov
xchg
mov
dec
push
std
jp
cmp
pop
ljmp
xor
movsb
push
adc
movsb
test
cld
in
out
in
cmpsl
loop
dec
mov
push
adcb
pop
jmp
sbb
imul
out
jne
ljmp
movsb
sub
jmp
mov
jb
or
in
movsb
pop
jge
jno
iret
mov
mov
insb
xchg
pop
or
sti
push
daa
cmp
outsl
mov
mov
idivb
cmp
stc
and
or
pusha
pushl
or
add
push
addr16
inc
sub
dec
insl
call
push
or
incl
pop
jo
xor
cmpb
lcall
out
mov
roll
xorl
inc
inc
push
push
cmpsb
lahf
lret
jnp
pop
call
fbstp
out
int
mov
dec
mov
negl
stos
cwtl
in
pop
clc
gs
imul
out
rol
cmp
incl
les
loop
xor
or
pop
fldenv
sbb
ja
iret
lds
pushl
inc
and
cmp
mov
pop
mov
out
iret
dec
loopne
or
dec
jmp
sub
js
mov
lds
jg
call
push
bound
jmp
lret
sub
lock
jmp
xchg
jne
mov
adc
push
cmp
dec
adc
int
adc
movsl
and
mov
lcall
mov
lock
stos
cmp
cwtl
maskmovq
notl
nop
jmp
fs
adc
xchg
mov
ljmp
out
les
mov
sbb
sub
push
std
mov
pop
push
inc
call
or
stc
or
add
xchg
in
outsb
mov
jge
cmpsl
cmp
cmc
and
decl
fistl
ss
shlb
and
out
loope
pop
outsl
fs
xor
nop
adc
adc
lcall
dec
sub
dec
mov
repz
jl
adc
add
aad
cld
mov
inc
jp
stc
es
pop
in
add
adc
popf
pop
push
mov
incl
cltd
inc
lods
minps
les
arpl
xlat
mov
lcall
push
data16
insl
loop
pop
jnp
fucomi
test
mov
cwtl
sub
jge
sub
inc
xchg
push
nop
jmp
mov
fcmovnu
jmp
push
loop
inc
shl
xor
dec
xchg
add
cmp
imul
decl
pop
cmc
mov
jp
add
cmp
out
fnstcw
ljmp
je
pop
adc
inc
pop
and
scas
xchg
decl
clc
dec
syscall
popa
rclb
out
add
imul
and
iret
pop
add
lahf
data16
out
mov
mov
mov
push
inc
lods
lds
push
ljmp
mov
mov
and
out
mov
lods
shrb
popf
movsb
inc
push
icebp
pushf
bound
dec
mov
lcall
shll
dec
cmp
dec
push
or
call
inc
test
push
and
xor
into
dec
movsb
bound
jmp
xchg
xor
stos
shlb
sub
sbb
push
fidivs
mov
pushl
hlt
filds
pop
pop
bswap
es
push
sahf
xchg
xor
shr
pusha
push
sbb
or
movsb
in
stos
mov
inc
dec
je
iret
mov
je
jmp
pop
ljmp
insb
xor
dec
scas
inc
push
jae
mov
outsb
and
push
jns
mov
push
shll
xchg
arpl
aaa
jp
out
es
jmp
jnp
cs
int3
into
int3
push
or
and
mov
das
incl
call
jg
scas
imulb
fwait
push
insl
xor
pop
sub
ds
les
inc
mov
push
push
or
jmp
mov
cmp
push
cmpl
imul
loope
adc
cmp
dec
sub
roll
jmp
or
scas
cltd
jle
imul
out
popl
mov
jmp
decl
push
insl
ljmp
xchg
pop
cmp
mov
shrb
add
mov
and
mov
imul
js
outsl
xor
mov
out
xor
pusha
lock
xchg
jmp
inc
jne
xor
sub
jne
or
enter
pop
push
dec
push
leave
outsb
ljmp
jmp
cmc
addl
lea
imul
icebp
les
bound
or
adc
xchg
pop
cmp
adc
jge
lcall
lahf
mov
fwait
incl
fisttps
add
aaa
gs
push
out
in
adc
lret
leave
dec
sub
movsl
js
lcall
scas
sbb
mov
rolb
test
inc
push
xchg
jae
and
sub
pop
sbb
decl
mov
pop
mov
cltd
lret
or
xor
cld
jnp
imul
add
incl
or
cmp
insb
arpl
dec
scas
xchg
mov
dec
and
add
pushl
in
lea
dec
cmp
ja
cltd
dec
in
adc
mov
int
jae
ljmp
xor
adc
imul
test
mov
repz
ret
mov
sub
xor
cmp
or
pop
das
or
decl
lods
sub
sub
cli
shl
push
scas
inc
add
fs
pop
inc
mov
xor
ljmp
lds
mov
inc
push
push
pop
mov
repnz
jge
pop
divl
dec
jmp
pushf
fwait
xchg
test
mov
xor
ljmp
push
test
ja
xchg
lcall
fcos
sub
bound
int3
push
test
rol
sub
jnp
out
xchg
sub
pop
shll
pop
dec
sub
rcr
addr16
or
fwait
pusha
aas
int
lcall
icebp
mov
in
into
adcb
mov
outsb
pushl
inc
inc
rclb
lret
cwtl
adc
xchg
shlb
sbb
cmp
loope
repnz
pop
fwait
or
loopne
and
xor
lcall
xor
rcr
dec
cmp
pusha
mov
jnp
dec
testb
mov
dec
push
loope
call
aas
and
mov
sahf
fscale
inc
inc
add
movsb
out
add
pushl
out
bndldx
lahf
or
push
xchg
inc
cmc
aad
notb
xor
mov
les
pop
arpl
mov
lea
data16
mov
mov
cvtps2pi
cmp
push
mov
inc
movsb
mov
xor
mov
rclb
lcall
cmc
loopne
xchg
dec
fmull
mov
xor
jg
jmp
xlat
jne
or
popa
mov
popa
jns
pop
cld
popa
inc
jle
mov
sub
test
jmp
mov
movsb
sub
xchg
popa
dec
decb
push
or
push
lock
jl
pushl
push
repnz
shrl
sub
mov
outsl
rorb
loope
cltd
dec
test
aaa
imul
inc
lods
add
xchg
leave
and
push
sbb
jmp
insl
jo
notb
daa
push
cld
aaa
stc
call
jno
cmpxchg
push
insl
sti
rcrb
push
insb
adc
push
jp
or
mov
loop
mov
cmpsb
pop
mov
push
roll
repnz
sub
xchg
inc
xor
jae
ljmp
out
jecxz
push
xlat
shlb
jbe
jecxz
mov
jl
stos
movsl
in
hlt
subb
pushl
lret
test
int3
or
repz
push
cld
icebp
pop
scas
sbb
std
ds
pushl
sub
push
cmp
jb
ret
lock
or
hlt
jge
adc
mov
ljmp
daa
divl
and
or
arpl
repnz
pop
call
imul
add
inc
jl
push
leave
pop
dec
decb
stos
jge
adc
lods
outsb
dec
jo
jmp
xor
dec
mov
fistpll
inc
leave
or
cmp
call
push
iret
iret
mov
inc
jle
pop
inc
ja
leave
xchg
jmp
notb
jb
decl
jmp
xchg
pop
inc
testb
lret
sbb
mov
xchg
cmpsl
pop
aaa
mov
add
sub
pushl
or
sbb
or
mov
jl
push
push
addl
call
mov
pushl
rcll
repnz
sub
pop
cld
popf
jecxz
mov
push
das
nop
aam
fdivs
pop
pushl
fwait
mov
and
push
ret
or
lods
jo
cld
inc
xchg
lea
cmp
popa
jmp
lods
stos
pop
mov
test
scas
mov
push
adc
sub
pop
push
popa
mov
jmp
jp
fimull
shl
and
aas
pop
lods
push
add
cmp
bound
pushl
sti
sbb
inc
mov
fdivr
je
clc
xlat
jo
dec
pusha
insl
loopne
adc
jmp
inc
dec
les
mov
scas
movsl
dec
pop
xchg
adc
mov
mov
xchg
stos
call
mov
dec
push
ret
aad
inc
insl
xor
lret
sub
pop
div
sahf
xor
aas
lcall
inc
push
mov
cmc
iret
push
jl
push
mov
or
gs
rcr
call
and
mov
mov
scas
mov
pop
daa
or
dec
fcmovne
js
fidivrs
jge
enter
ljmp
cmpsl
decb
in
cmpsl
arpl
loopne
xchg
lock
fisubrl
cld
insb
enter
xchg
pop
inc
into
call
sub
aaa
movsb
push
adcl
cmpsl
cmp
pop
jne
xchg
push
mov
inc
incl
push
mov
xchg
xchg
aam
sub
jnp
int
xchg
push
add
call
xor
in
outsb
mov
pop
sub
aam
pop
inc
es
aad
jecxz
jecxz
notl
test
pushl
scas
pusha
adc
aaa
popf
js
loope
sti
mov
push
gs
pop
jb
shll
ret
jnp
out
inc
cmc
dec
mov
aad
adc
xchg
push
xorb
push
xor
shrb
addb
pop
push
fistl
fisubl
dec
xchg
aaa
adc
and
inc
fxch
faddl
pop
mov
lcall
jns
mov
fstl
and
call
mov
sbb
jo
test
jmp
std
push
push
fld
xorb
in
sti
aam
fdivs
jne
mov
mov
fcoml
adc
lcall
jp
cli
lcall
sub
jge
mov
int3
movsl
sahf
add
shr
mov
call
sahf
mov
pop
pop
je
mull
insl
lret
rcll
xchg
jns
lret
dec
sub
fildll
mov
jp
jg
popf
test
jle
adc
sti
sbb
int
leave
jmp
je
xor
rcrb
out
jb
push
out
sahf
mov
movb
jns
fildll
incl
mov
push
mov
jp
dec
loope
bound
enter
add
jne
push
xchg
jnp
mov
jne
in
movsb
inc
sarl
push
addr16
out
and
ljmp
cmp
inc
push
pusha
ret
mov
test
inc
adc
xor
orl
decl
cmp
clc
xchg
jg
mov
and
mov
ja
cli
ret
sbb
lcall
cmp
sub
mov
pop
mov
mov
data16
fidivrl
cmp
ljmp
lcall
xchg
pop
daa
xor
les
jnp
sahf
les
enter
pop
mov
mov
test
outsb
jge
or
adc
cmp
out
ret
add
jmp
xchg
orb
int
and
sbb
into
and
loop
orb
call
cld
push
mov
nop
aam
xor
jl
mov
add
jmp
xchg
es
incl
mov
cltd
out
mov
sub
cmp
add
xor
jae
xor
ljmp
lds
dec
out
lret
pop
ds
inc
sbb
mov
jmp
dec
pop
cmp
mov
jg
push
icebp
loope
fbstp
push
movsb
cmc
push
xorb
or
add
outsl
inc
push
push
push
in
fstpt
push
pop
adc
pop
cmp
or
xchg
pop
inc
adc
das
pop
pop
add
movsl
addr16
fbstp
mov
push
mov
inc
insb
fistpll
mov
fistpll
movl
mov
cmp
leave
aad
loopne
fldl
inc
mov
or
insl
pop
dec
cmp
dec
and
xor
dec
mov
decl
pop
xchg
jecxz
daa
jmp
subb
fs
sub
mov
in
imul
call
insl
xchg
cmp
push
std
sub
pcmpgtd
out
pop
sub
cmp
or
jge
shlb
sbb
mov
lcall
data16
aam
xchg
imul
scas
outsl
inc
cmp
push
adc
je
sbb
arpl
movb
pop
mulb
cmp
mov
aad
in
dec
sbb
mull
negl
jmp
jae
cmp
push
push
dec
les
mov
out
cmp
jne
sti
pop
sub
ret
test
xor
sar
lcall
dec
jle,pn
mov
xchg
cmpsl
ret
xor
xor
incl
adc
push
xor
mov
imul
rclb
jnp
mov
cmp
stos
xor
mov
mov
popa
test
lcall
ljmp
mov
jmp
jno
pusha
enter
loopne
jno
push
mov
je
xchg
jmp
outsl
iret
xchg
jl
sbb
ficomps
lahf
dec
pop
fbld
jbe
jmp
push
dec
pop
mul
decl
dec
arpl
jl
mov
les
je
repz
aas
sbb
scas
sbb
inc
mov
movsb
cmc
dec
jbe
mov
mov
xchg
jl
daa
pop
int3
decl
mov
adc
xor
in
movl
push
sbb
inc
aas
inc
mov
ljmp
test
push
outsl
jg
out
xchg
mov
pusha
mov
pusha
mov
cmpsl
cli
sbb
ljmp
pop
cltd
loop
shlb
push
gs
sbbl
insl
adc
cmp
call
mov
outsl
ret
sbb
mov
outsl
ret
xchg
out
in
sub
or
repnz
cmpsl
inc
pop
cmp
lahf
or
inc
out
mov
lock
int
mov
repz
lret
repz
jbe
call
sti
adc
test
mov
jle
ljmp
fsqrt
aaa
mov
push
mov
decb
adc
and
hlt
xchg
jne
pop
test
cmpb
mov
push
stos
ud1
inc
jecxz
call
arpl
xchg
jnp
xorl
jle
mov
sbb
and
add
jle
incl
mov
and
ret
mov
and
popa
pop
pop
ja
push
xchg
cli
clc
xchg
shlb
in
mov
push
cmp
add
repz
scas
aad
mov
fs
sarb
shr
dec
inc
pop
sahf
xchg
scas
ds
jae
das
push
sbb
add
call
mov
ds
insb
iret
cwtl
les
inc
out
es
aas
adc
frstor
fistps
mov
and
shrl
inc
stc
pop
mov
sbb
ret
lea
mov
clc
sub
repz
add
sub
mov
test
add
in
inc
pop
push
ret
lret
stc
movsl
fldenv
push
xchg
inc
and
stc
or
out
adc
pushl
ds
and
adc
or
jmp
mov
or
add
mov
push
stos
iret
cli
jmp
decb
nop
cwtl
cwtl
and
outsl
inc
jecxz
and
xchg
sbb
cmc
mov
cli
shlb
adc
test
fstl
or
xchg
andb
inc
jbe,pn
ljmp
dec
repnz
cmp
push
rorl
popa
pop
fimuls
jmp
scas
pop
cmp
adc
xchg
mov
out
bound
in
out
outsl
and
decl
sbb
push
sbb
sub
pushf
xchg
std
mov
add
imul
jns
sub
add
test
sti
pop
or
xlat
mov
or
imul
cs
call
sub
jl
imul
addr16
xchg
xor
sahf
hlt
adc
ljmp
loop
ficomps
fwait
jg
mov
mov
scas
pop
jns
lea
aas
aaa
popf
dec
mov
mov
sbb
sarb
sub
mov
int3
out
cmp
movsl
cmp
add
pushl
rclb
outsb
add
jo
je
lahf
mov
push
js
mov
xchg
call
lock
pop
fildl
xchg
mov
stc
cmpsb
out
add
in
jno
inc
sub
sbb
decl
push
push
aaa
lods
aam
int3
movsb
cmp
in
dec
fcmovnb
jge
sub
aaa
fwait
out
adc
jmp
adc
std
inc
mov
jl
adc
cmp
inc
adcb
mov
pop
popa
adc
xor
jmp
test
orb
fisubl
ret
out
ret
inc
cmc
xor
call
stos
add
subps
push
push
pop
cmp
pop
imul
jne
lcall
push
dec
adc
fldenv
in
dec
std
add
out
jne
mov
cmpsl
test
and
cltd
push
add
xchg
push
sub
jne
sbb
iret
sub
push
mov
hlt
repnz
mov
fadd
add
push
lods
or
fwait
push
aad
mov
call
pop
into
push
push
adc
jb
and
xchg
mov
xorb
xchg
push
decl
mov
loope
loopne
lcall
add
int3
xchg
inc
repz
inc
pop
inc
sbb
cmp
mov
ljmp
or
mov
pop
outsl
mov
pushf
pop
imul
cmc
sbb
pushl
xor
lds
mov
clc
shlb
lret
jmp
in
mov
inc
sbb
shlb
in
in
outsb
les
mov
pop
push
ljmp
incl
push
inc
jp
xor
fwait
test
push
cmp
loop
iret
out
inc
cmpl
adc
mov
ljmp
das
jmp
bound
call
adc
mov
adc
mov
pushl
imul
push
xor
and
out
sub
mov
mov
add
sbb
ljmp
push
xor
sbb
jae
mov
xlat
add
inc
imul
jmp
enter
cmc
movsb
test
add
leave
mov
xchg
add
mov
xor
incl
push
mov
push
loopne
xlat
adc
jb
test
jge
mov
sbb
mov
jmp
fs
lret
fisubl
stc
push
cld
jo
inc
pushl
enter
inc
sub
pushl
and
mov
add
add
push
andl
js
shlb
inc
pusha
mov
jne
rcl
mov
scas
fsts
push
pop
pushf
cmp
mov
dec
adc
call
mov
lds
sub
in
sti
popf
cltd
push
lds
jb
mov
loop
test
decl
in
aaa
call
jmp
call
fwait
popa
inc
jecxz
and
fisubrl
xlat
push
incl
sbb
je
inc
sbb
int
jne
sbbb
dec
mov
mov
mov
sbb
lcall
jecxz
fistl
cmp
jp
and
ret
mov
jmp
jg
test
arpl
xor
scas
mov
sti
dec
aad
ret
sbb
cmp
pushl
ljmp
inc
push
jmp
adc
fwait
cs
stc
jbe
pushl
cld
mov
mov
sub
adc
loopne
adc
adc
call
inc
inc
nop
stos
and
mov
out
sbb
mov
scas
sahf
inc
in
test
jns
out
add
sub
divb
pop
ret
cmp
outsb
adc
mov
insb
rcll
pop
lret
js
je
add
pushl
jge
mov
into
xlat
fldt
setbe
popf
stc
adc
push
bound
add
sarl
cmp
pop
mov
xchg
push
jecxz
lds
out
cmp
pop
icebp
xchg
pop
push
and
pushl
int
mov
imul
or
pusha
pushf
rclb
pusha
push
pusha
sub
or
add
cs
incl
jg,pt
adc
adc
cmp
outsb
inc
and
jp
shrl
push
ljmp
add
jle
mov
adc
scas
imul
jno
out
push
push
in
std
insl
add
outsl
addr16
jmp
pop
aas
icebp
pop
mov
scas
mov
call
das
adc
jbe
mulps
inc
movsb
sub
dec
fdivr
ljmp
data16
push
add
xor
mov
or
xor
insl
shll
lcall
iret
jmp
mov
xchg
shll
and
movsb
push
jbe
sub
ljmp
loopne
mov
adc
mov
fldenv
icebp
sbbb
popf
imul
xor
ds
or
cmp
mov
jnp
xor
add
bound
mov
into
pushl
shlb
mov
out
adc
es
aas
xchg
xchg
pushl
inc
inc
aaa
in
int3
push
sbb
mov
test
and
mov
fadds
aas
das
mov
push
clc
pop
adc
jbe
mov
jecxz
lock
scas
outsl
add
jl,pt
out
loope
dec
sub
cltd
pop
clc
cmp
jb,pn
adc
movsb
or
call
xchg
pop
leave
add
xchg
or
adc
repz
pusha
xor
stos
cmp
ljmp
pop
add
in
lods
mov
or
cs
lods
mov
lcall
call
incl
mov
aad
jmp
js
mov
dec
mov
out
test
mov
cmp
loope
out
cmp
pop
xchg
es
lods
inc
stc
aam
test
test
aad
lods
jl
stc
call
and
rorl
add
ret
test
pop
inc
mov
out
inc
xchg
insb
rcrb
lahf
jle
ljmp
iret
mov
push
adc
fsubrl
sbb
xor
rclb
fldcw
fxch
std
sti
mov
test
dec
imull
mov
scas
adc
sarb
add
shrl
imul
ljmp
xor
movsl
mov
outsb
fs
out
stc
fadds
sub
pop
outsl
call
int3
imul
lahf
das
andb
push
push
dec
xchg
and
loopne
cltd
or
sub
push
lods
mov
xchg
sub
or
mov
dec
xchg
xor
pop
je
jmp
fdivl
or
in
add
divl
jmp
je
cmp
cmp
movsb
sbb
jmp
or
ss
mov
inc
cmp
jmp
mov
daa
fimull
call
dec
cmpsb
jl
loop
neg
xorb
adc
mov
sub
daa
js
mov
lcall
pushf
pusha
add
xchg
xchg
stos
fistl
xchg
jp
xchg
les
dec
jmp
add
jmp
pop
lcall
sbb
leave
fmull
adc
outsb
xchg
jge
mov
add
push
push
fsubs
lcall
mov
or
in
pop
dec
popa
add
mov
push
je
les
jle
push
ja
pushl
ret
pop
test
dec
push
cmp
arpl
fwait
cmp
or
sbb
adc
call
xor
jge
jno
out
cwtl
pcmpeqb
ds
vcvtps2pd
movsl
popa
jno
mov
call
mov
in
movsl
pushf
jb
mov
enter
outsl
cs
xchg
mov
incl
mov
push
lahf
leave
cli
mov
dec
cmp
int3
sbb
es
decl
sub
addr16
fdivrl
sbb
mov
dec
cmpsb
inc
test
in
add
cmp
rcr
mov
push
mov
mov
jmp
push
popf
push
stos
pop
dec
cmp
stos
js
lds
add
leave
sahf
addb
fdivrs
mov
or
cmp
gs
andb
loop
iret
cmp
and
ljmp
lods
aad
push
pop
sti
lock
xchg
pop
lret
into
mov
insl
mov
call
out
add
xor
or
jne
int
insl
sbb
xor
mov
lahf
aaa
ljmp
or
cmp
dec
push
imul
dec
jmp
gs
movl
rorb
aam
idivl
push
pop
mov
incl
xor
and
imul
mov
sbb
lods
sbbb
incl
cmp
in
rcl
xor
fisubrl
stc
push
mov
or
push
jecxz
mov
ljmp
adc
add
mov
jecxz
out
adc
adc
jmp
dec
clc
jmp
ficoms
call
aaa
in
mov
add
push
cmpsb
dec
lahf
xchg
add
inc
mov
xchg
pushl
and
xchg
mov
mov
jle
sahf
sub
imul
ds
sub
mov
cvtps2pi
outsl
or
xchg
sbb
adc
movsl
cmp
dec
je
ds
xchg
nop
jne
xchg
into
sbb
sbb
fsubrs
sub
mov
les
popf
lcall
mov
clc
jle
xchg
push
fs
adc
xchg
cli
repnz
mov
das
push
cs
call
cmovo
sbb
push
loop
clc
fs
xor
push
sti
lcall
call
andl
jne
gs
or
stos
inc
outsl
cli
and
jb
imul
ljmp
pop
ja
dec
pop
jge
test
jne
lock
std
pop
inc
sub
ljmp
lcall
xor
cmp
jecxz
rorb
in
andnps
xchg
call
fwait
aas
insb
js
lret
popf
push
pop
cld
pusha
or
orb
mov
jmp
cli
lcall
stos
hlt
mov
ss
add
popl
mov
xor
ljmp
sub
leave
fdivs
lahf
rorb
adc
push
loop
jns
daa
shll
xchg
nop
inc
sar
xor
push
repnz
lcall
inc
jle
mov
int
sahf
mov
leave
and
xchg
cld
add
jns
sbb
xchg
push
mov
hlt
orl
xchg
sti
sti
and
dec
cmpsb
mov
negl
jne
sbb
push
insl
fdivrl
push
scas
push
dec
xchg
sub
decl
rcrb
and
pop
mov
mov
jp
xchg
lea
inc
bound
aas
fs
mov
adc
mov
mov
in
fwait
enter
cmp
orl
lret
push
mov
pop
testb
loope
sti
hlt
mov
decl
inc
xchg
sbb
cmc
add
or
pushw
movsb
or
decl
into
stc
imul
repz
sti
push
nop
xor
scas
push
xor
insl
inc
in
and
mov
pop
and
ficomps
mov
lret
adc
std
fisttps
or
mov
dec
sub
decl
leave
dec
cli
push
ret
sti
dec
jg
cld
and
adc
jae
in
call
call
xchg
inc
lods
xor
adc
and
pop
pop
lret
andl
int3
incl
fsubs
mov
jg
sbb
pop
movsb
pop
notb
ret
jb
in
and
ljmp
in
ja
mov
fisubs
adc
aam
sbb
test
fistl
lcall
fiaddl
ja
inc
popf
mov
push
cmpsl
jns
scas
mov
xchg
jmpw
decl
movsb
icebp
rolb
clc
xlat
aaa
mov
ficomps
sbb
hlt
scas
adc
xor
add
jmp
stc
dec
outsl
inc
pop
test
and
insl
cmpsl
adc
dec
xor
sbb
int3
call
cltd
or
test
es
mov
sbb
lahf
pop
hlt
jo
xchg
fstpt
outsb
dec
stc
in
add
cs
mov
xchg
lds
mov
inc
mov
adc
sbb
incl
push
loopne
cs
mov
xchg
inc
aam
inc
sbb
xchg
movsb
or
ljmp
lods
idiv
push
insl
cli
jne
mov
bnd
pop
cvtdq2ps
adc
inc
imul
incl
sub
jb
xchg
jle
mov
dec
mov
and
sti
xchg
cmp
push
adcl
fidivrl
daa
ficoms
cmp
mov
xor
lret
popa
dec
pop
mov
mov
xchg
sbb
jo
and
ds
addl
jg
popa
dec
dec
std
aas
inc
ljmp
lods
dec
addr16
add
out
pop
or
or
sub
sub
mov
ljmp
pushf
pop
mov
inc
stos
mov
sbb
pop
adc
loope
and
add
pop
inc
pop
lods
dec
xchg
xor
lods
push
push
ret
clc
out
jle
or
mov
mov
fsub
into
pop
push
outsl
push
lods
pop
sbb
push
aaa
stos
jb
mov
xor
pop
call
shll
mov
mov
movsb
adc
ss
cld
fcomip
pop
xchg
pushl
xchg
popf
pop
cld
sub
or
mov
xor
xor
jmp
push
stc
scas
stc
movsb
fwait
push
cmp
fidivrl
cmp
jb
pusha
out
dec
push
call
add
fidivrs
icebp
mov
or
inc
pop
sub
sahf
movsl
lret
inc
cmp
mov
jl
jne
lods
pop
push
dec
fistpll
mov
cwtl
adc
mov
dec
clc
jo
xlat
xor
sbb
lret
hlt
sbb
sarb
push
incl
scas
lea
stos
cmp
rolb
mov
jle
orl
ret
enter
ljmp
sahf
mov
jmp
in
test
xor
popa
rcl
imul
cmp
push
mov
out
add
ds
cli
mov
cld
mov
in
inc
xor
out
cli
adc
decl
and
icebp
pop
mov
aaa
dec
dec
test
fisubrl
mov
cs
mov
jmp
xor
call
int
mov
push
inc
lea
into
bnd
in
xchg
popa
jge
call
fwait
sti
dec
mov
into
flds
je
loopne
imul
movsb
mov
push
dec
jmp
decl
pusha
lods
cmp
xadd
jle
inc
jl
std
and
pop
cmp
daa
fadd
incl
sbb
test
lahf
mov
jge
movb
pop
test
test
addr16
add
fdivr
lcall
inc
jecxz
mov
jno
cld
push
sbb
in
call
push
push
daa
pop
incl
push
mov
cli
mov
xchg
add
adc
push
xchg
cmpb
mov
movsl
in
int
hlt
jmp
pop
xchg
mov
cmp
adc
dec
jg
mov
jne
inc
or
mov
xlat
sar
jmp
push
pop
and
sbb
fld
jmp
pop
cmp
push
das
fisttps
lcall
nop
cltd
les
sub
xchg
jmp
and
sbb
idiv
pushl
icebp
xchg
push
js
pop
jge
sbb
xchg
mov
lcall
xor
sub
sti
pushf
lret
jmp
jae
jnp
xchg
jne
imul
xchg
in
or
out
mov
pop
hlt
mov
addr16
aad
push
test
arpl
add
pop
subb
and
cmp
xchg
je
add
ffreep
cmp
test
nop
shrl
sub
add
jp
pusha
sbb
lcall
dec
dec
flds
jb
push
cltd
xchg
push
data16
mov
jp
mov
mov
call
in
adc
inc
aad
jno
mov
lock
mov
or
pushf
cmp
push
ljmp
lcall
adc
fsubs
ja
fs
xor
sbb
pop
pop
data16
out
lcall
hlt
ficomps
pop
inc
xchg
pushf
adc
cmpsb
leave
lret
pop
mov
stos
stc
je
mov
jmp
adc
movsb
mov
cltd
push
sbb
cmc
arpl
dec
movsb
jl
sbb
out
jmp
cmc
outsl
or
push
out
inc
cmp
andl
ss
test
jecxz
call
sti
or
sbb
arpl
xchg
add
out
cmp
test
shrl
dec
decl
cli
pushl
add
or
pop
mov
pop
arpl
aas
in
lcall
push
data16
jne
andl
jp
in
cltd
cmp
popa
pushl
lods
push
sub
mov
and
ds
xor
jmp
insb
adc
fisubl
jmp
repz
add
add
adc
lcall
std
xchg
cmpsb
mov
aas
cmp
pushl
arpl
ljmp
ficoms
insb
mov
cmp
and
mov
loop
cmp
xor
pop
gs
push
cmp
stos
or
je
repz
cmp
jmp
cmp
mov
inc
dec
inc
adc
lret
sub
inc
lret
leave
loopne
inc
add
jmp
incl
cmp
or
in
mov
or
mov
loopne
mov
ss
or
push
mov
push
dec
jnp
mov
jp
int
mov
call
fbld
push
add
aam
cmc
inc
sbb
out
into
addr16
pop
sub
push
pushl
aaa
jmp
test
push
pusha
mov
jne
jne
mov
sbb
pop
cmovns
sahf
fcomps
push
cld
lds
mov
popa
fst
cltd
scas
outsb
fiaddl
les
fmull
mov
mov
andl
fiaddl
inc
dec
out
movsb
adc
inc
loop
add
mov
lret
mov
push
mov
jb
es
mov
mov
test
mov
xor
and
hlt
mov
mov
lahf
mov
mov
sbb
cmp
daa
mov
dec
and
add
or
bound
shrb
mov
add
adc
mov
decl
mov
shlb
push
ret
lods
push
test
fstp
jmp
stc
call
enter
in
jl
inc
pop
rcrl
in
gs
fsubrs
sbb
pushl
jge
jecxz
outsl
lea
stos
sbb
std
adc
lret
pop
adc
stos
xchg
int
inc
adc
fadds
mov
das
nop
test
pop
push
imul
mov
loopne
jmp
cwtl
lods
inc
insl
mov
call
cmpsl
inc
cmc
nop
insl
rdmsr
rclb
sub
loopne
test
sub
sub
push
or
scas
sub
pushl
dec
adc
lea
insl
loopne
push
outsb
in
cmp
mov
lret
fcmovnb
pusha
and
push
ss
decl
inc
negb
leave
ljmp
lods
adc
inc
in
out
pop
push
js
jns
fucom
arpl
push
rcrl
add
jns
addr16
sbb
pop
mov
fcomp
xchg
sahf
mov
push
cmp
jo
sub
push
fldt
pop
jb
fdiv
stos
mov
popf
sub
arpl
aaa
and
call
adc
xchg
iret
je
test
daa
test
jno
stos
add
xor
insl
mov
cmp
dec
push
ror
fsubl
ja
inc
int3
and
xchg
dec
call
ja
dec
lcall
dec
mov
mov
pop
and
adc
dec
outsb
sarb
mov
mov
jmp
imul
lret
xor
int3
leave
push
mov
xchg
cmp
ljmp
lret
pop
pop
xor
out
jge
xchg
rorl
and
aam
dec
jno
jae
push
jnp
je
mov
xor
lahf
cmp
and
push
sub
pop
mov
out
mov
and
adcb
decl
push
or
fwait
jl
int3
sub
and
or
mov
jmp
popa
jns
inc
sarb
xchg
ljmp
ret
ds
mov
cmp
adc
ljmp
jnp
es
mov
pop
lcall
pop
adc
sarb
ljmp
arpl
mov
rclb
ja
jmp
movsb
xor
sub
sbb
aam
insl
xchg
sbb
sub
inc
pop
or
push
pop
sbb
jmp
out
cmpsl
js
jne
sbb
pop
xor
ror
cmp
dec
sbb
call
inc
ficoml
pushf
das
stos
cmp
xchg
and
pop
ss
push
mov
pop
inc
fcmove
iret
jg
je
loop
ljmp
adc
loope
xchg
jl
mov
insb
push
push
repnz
es
push
fldcw
push
mov
jne
sti
mov
xchg
insb
test
ret
decl
outsb
mov
pop
adc
sbb
ss
or
dec
pop
pop
sbb
in
dec
ret
decl
int3
jb
icebp
aaa
out
loopne
inc
xchg
scas
pop
lods
mov
out
cmp
mov
loopne
sub
enter
call
clc
mov
movsl
inc
loopne
inc
ja
push
jo
mov
mov
dec
jmp
mov
jmp
cmp
sbb
dec
shrb
or
imull
lock
or
incl
subb
pop
scas
fsubr
xorl
mov
xchg
add
xor
es
incl
fildll
ret
push
lret
adc
inc
pop
dec
adc
or
jmp
out
dec
into
decl
int
or
ret
lcall
lcall
les
sbb
clc
sti
or
in
shll
insb
mov
daa
and
leave
push
lock
jl
add
mov
mov
ss
call
cli
adc
xchg
inc
lods
or
mov
out
inc
mov
pop
aas
sbb
push
sub
in
push
jns
adc
add
pushf
jle
pop
mov
pop
cltd
pop
pushl
in
lahf
es
or
and
jg
inc
xchg
xchg
fidivrs
repnz
mov
call
cmpl
test
dec
add
xor
mov
adc
mov
daa
fs
push
push
ja
add
mov
int
shlb
xorb
lret
push
ljmp
pushl
or
xchg
loop
jae
lock
jne
xchg
cmp
mov
pop
cmp
pushl
stc
les
xchg
pop
das
icebp
fwait
mov
lcall
test
aaa
mov
in
popf
add
call
xchg
dec
ja
dec
or
adc
dec
sbb
xor
pop
std
movsb
out
push
cmp
lea
jp
lret
mov
repnz
aaa
inc
cmp
in
mov
jo
shlb
in
loopne
fbstp
sbb
pop
add
mov
in
inc
movsl
repz
push
nop
test
jmp
mov
in
movsb
sbb
loop
rcll
dec
fisubrs
daa
cmp
fucomp
aad
push
fiaddl
cwtl
mov
inc
push
cmc
lret
push
test
fistl
out
jne
cltd
inc
repz
pop
sub
mov
data16
call
popf
inc
pop
fildl
sbb
xchg
push
int
es
adc
lods
cmpsl
leave
sbb
incl
fstpt
mov
dec
loope
adc
rclb
cmc
mov
mov
rcll
jmp
add
cwtl
push
inc
cli
gs
iret
ret
pop
loope
in
pop
xor
in
dec
lds
nop
ds
imul
pushl
shlb
add
std
cli
mov
pop
fwait
pop
mov
push
fwait
mov
rorl
lcall
sub
adc
daa
inc
mov
xchg
inc
push
repnz
xor
lcall
xchg
inc
add
fsubrl
add
cmp
arpl
or
lcall
out
cmp
xchg
pushl
pop
pop
aad
rclb
das
mov
mov
push
in
movsl
cmc
sti
punpcklbw
loop
sub
sub
push
lret
out
mov
adc
out
dec
minps
dec
lcall
cmp
lock
pop
sub
sub
imul
xchg
mov
pop
jp
cli
mov
xor
cld
pop
push
push
jecxz
divl
and
test
inc
rcrl
xchg
xor
mov
or
jmp
and
pop
xor
mov
inc
dec
xor
mov
adc
orb
mov
out
mov
and
jae
in
adc
jns
cmp
stos
add
call
mov
mov
es
movl
jmp
sbb
ljmp
mov
std
dec
sahf
mov
scas
and
daa
cmp
jl
push
mov
out
loop
ljmp
add
push
and
push
xchg
inc
jb
cwtl
cld
addr16
sbb
cmp
xchg
jno
decl
pop
in
push
clc
dec
or
and
ret
sarb
lods
fucomip
dec
fwait
mov
lcall
push
dec
enter
or
aam
pushf
xor
stc
popa
push
jo
lahf
stos
call
insb
and
call
in
jae
lds
xchg
cltd
sbb
push
add
inc
adc
mov
cmp
jmp
xor
ss
dec
jle
int3
adc
xchg
sub
pop
fcmovu
aad
mov
xor
push
imul
push
push
insb
jl
jae
pop
ret
inc
repnz
scas
lock
out
mov
pusha
sub
xchg
outsb
jne
xchg
xor
cli
addr16
imul
pop
stc
jb
xor
insb
push
xchg
pop
in
call
std
setbe
lods
mov
loop
mov
call
adc
fs
xchg
inc
sub
movsl
iret
jnp
test
mov
jmp
es
aaa
push
jns
jmp
jne
and
or
xchg
push
cmp
lahf
push
jmp
test
call
mov
or
ss
mov
sub
hlt
and
xchg
push
jo
ret
mov
call
xor
les
push
mov
roll
dec
add
lds
ret
mov
jmp
push
imul
push
mov
lret
add
nop
divb
int
cmp
iret
incl
jg
mov
jae
push
in
scas
pop
scas
into
jae
aas
inc
popa
pop
cs
mov
jnp
ret
pushl
jnp
or
cmp
leave
test
call
and
fcmovnbe
dec
cmp
xor
jmp
xlat
lahf
mov
mov
lret
int
sbb
pop
cmc
jge
cs
xor
std
dec
cmc
call
imul
mov
insb
mov
bound
mov
and
sub
mov
jmp
xchg
or
insb
jg
cli
xor
loope
pop
xlat
xor
das
push
les
out
add
xchg
jg
mov
ljmp
pop
in
jle
mov
push
shlb
je
inc
push
jo
mov
jmp
jno
lods
in
into
repnz
orl
xchg
aaa
pop
repz
lcall
aaa
pushl
mov
std
push
mov
jl
mov
jp
clc
mov
jnp
sahf
lahf
push
pop
call
rolb
push
xlat
or
mov
dec
mov
mov
pushf
mov
jle
ret
lds
fdivr
lcall
andl
inc
aad
jp
pusha
jae
xor
lock
pop
int3
push
xchg
jp
sbb
push
jmp
orl
fdivrs
push
xchg
jo
mov
mov
pop
jmp
leave
test
xor
add
jnp
cli
mov
adc
loop
cmp
mov
in
enter
sub
pushf
les
shll
icebp
imull
sti
mov
xchg
loope
pop
out
enter
incl
test
lods
pop
stc
xchg
pop
je
popf
push
cmpsl
jne
fs
nop
rol
sbb
jbe
les
shll
incl
pop
mov
or
mov
les
cmpsb
mov
push
and
incl
xor
pop
mov
test
add
pusha
scas
ret
and
in
test
sub
incl
mov
paddusb
inc
stc
push
or
leave
sbb
xchg
cmp
mov
fs
test
call
mulb
jne
test
dec
add
sbb
hlt
bound
cmp
call
cmp
aas
and
cmpsl
sub
test
les
or
or
mov
push
call
dec
mov
or
daa
stos
das
ret
push
pop
sub
loopne
cmpsl
lds
bound
iret
xchg
js
loop
out
sbb
dec
clc
cli
lret
loope
mov
add
add
mov
mov
and
jmp
shll
js
mov
push
xor
test
stos
ss
fldenv
mov
jmp
cmp
loop
xchg
xor
mov
mov
pop
leave
sti
fidivl
je
ret
pop
add
incl
xchg
mov
mov
mov
sbb
xor
xchg
aad
xchg
and
sub
incl
ss
aas
inc
pop
dec
jg
mov
not
lods
movsb
pop
jb
xor
push
scas
jge
enter
incl
out
shl
sub
outsb
sbb
sub
nop
and
fcoms
lods
cmp
xor
aaa
adc
call
cmp
pop
pop
inc
and
dec
fs
stc
testb
cmp
xchg
inc
popa
mov
and
add
test
mov
jo
mov
push
push
hlt
mov
decl
adc
insb
mov
add
mull
jbe
sbb
mov
rcrb
push
cmpsl
mov
cld
call
sbb
fsts
dec
nop
js
xor
sbb
dec
scas
das
adc
fidivl
xchg
cmp
stos
dec
mov
imul
push
sbb
sub
pop
jge
fldt
cmp
dec
inc
les
mov
adc
fistpll
adc
or
movl
push
adc
sbb
loopne
or
xor
push
adc
mov
inc
cs
fdivrp
into
mov
incl
sbb
iret
jecxz
xchg
fldcw
pop
out
lahf
mov
inc
jl
dec
aaa
and
and
cmpsb
sti
call
jg
jg
insl
xchg
bound
mov
gs
ficoml
mov
inc
xchg
fdivrs
hlt
mov
push
addl
sub
jns
cmp
in
call
test
mov
and
out
pusha
and
ffree
mov
sbb
mov
decl
xchg
xchg
inc
lds
hlt
shlb
lret
xor
adc
pop
dec
bound
push
test
push
sbb
shlb
outsl
inc
dec
js
in
sbb
mov
cmpsb
inc
adc
add
dec
loop
sub
sarb
push
sub
add
xchg
movsl
push
sub
loopne
lahf
rcll
or
decl
dec
div
addb
pop
jae
sub
jp
shll
nop
rcr
clc
aas
insb
pushl
inc
fisttpl
mov
std
ret
xor
inc
rcll
std
add
cmp
fadd
call
sbb
xchg
pushf
cmpsb
les
jns
into
mov
sub
and
rorl
popf
pushf
dec
jl
mov
aam
pushl
pop
pushf
and
xchg
cmp
repz
inc
jp
in
ret
sarl
jmp
jp
mov
test
inc
aam
test
jnp
add
mov
mov
decl
je
hlt
mov
ret
dec
cli
dec
lods
fucomp
dec
cld
push
xchg
pmulhw
or
push
fisttpl
sahf
sbb
jb
subb
mov
mov
pop
hlt
xchg
sub
and
mov
push
test
and
xor
xchg
jbe
dec
shrb
ss
jbe
add
mov
dec
les
ret
add
pop
mov
dec
xor
xor
and
lock
test
js
repnz
pop
adc
pop
imull
incl
ds
outsb
cmc
int
jb
lds
repnz
mov
faddl
dec
lods
or
lcall
test
out
cld
xchg
testb
or
or
xchg
hlt
or
dec
xchg
xor
jmp
stos
scas
push
mov
std
sbb
xor
jg
orb
lret
mov
call
mov
inc
inc
in
mov
gs
cld
arpl
adc
mov
dec
std
xchg
dec
lods
jo
decl
roll
fidivrs
ret
pop
add
sub
pop
aaa
pop
and
popf
or
pushl
add
test
dec
hlt
repnz
jb
clc
ss
les
push
mov
sub
pop
or
cltd
add
aam
clc
mov
movsb
in
jo
push
sar
push
mov
adc
cwtl
or
pop
orb
stc
adc
push
push
aas
cmp
call
push
fwait
out
jb
mov
mov
stc
outsb
pushl
aaa
fcomps
sub
idiv
mov
ret
jmp
add
mov
or
xchg
imul
out
addl
push
pusha
aas
insb
cltd
and
dec
push
jmp
les
add
dec
mov
addr16
mov
fisttpll
pusha
xor
dec
dec
outsl
xchg
push
lret
xor
stos
mov
mov
or
lahf
incl
push
inc
aas
dec
out
ret
sbb
sahf
movsl
int
scas
les
pop
jne
aaa
arpl
loopne
sub
decl
shlb
jp
cli
lcall
mov
test
push
pop
mov
call
sub
decl
les
subl
sbb
cmc
adc
cmp
xchg
and
incl
popa
aad
jno
icebp
loopne
xchg
daa
scas
icebp
daa
pop
jns
arpl
pop
js
pop
adc
ljmp
or
pop
cli
fdivrl
es
je
mov
testb
out
push
sar
push
enter
mov
das
and
mov
mov
mov
push
repz
push
mov
test
adc
decl
pop
pop
sub
lret
inc
cld
mov
into
mov
ror
in
ds
jmp
cmp
pushl
fcomps
jge
inc
flds
scas
mov
mov
inc
jl
iret
mov
adc
xor
incl
mov
sbb
add
jne
add
aas
adc
repz
cmp
mov
mov
cmp
and
aas
jp
inc
stos
jns
inc
jbe
jecxz
push
test
pop
push
iret
xor
jmp
es
push
xchg
or
xor
bound
mov
nop
sar
pop
pop
adc
jge
mov
pushl
push
lahf
jne
xchg
cs
enter
cmp
stc
out
popf
idivb
or
incl
pop
lods
and
enter
push
decl
and
rcll
call
jmp
lods
mov
lods
ret
gs
sbb
inc
adc
outsl
in
jbe
jmp
popa
inc
push
movsl
sbb
call
divb
inc
cmp
xorb
pop
lahf
out
pop
push
cmp
nop
adc
lds
mov
call
adc
iret
rcl
addr16
mov
sbb
dec
insl
add
popf
icebp
jnp
adc
adc
decl
add
imul
lods
sbb
in
mov
cs
aam
add
scas
out
lcall
sbb
shlb
push
mov
into
cmp
mov
jno
ret
cmpsb
add
dec
fsts
sbb
sbb
test
out
ja
std
jecxz
int3
add
insl
pop
fwait
dec
andl
jmp
imul
cltd
repnz
push
aad
outsb
mov
insl
or
loopne
fimuls
cs
jmp
pop
pop
xchg
outsb
push
pushf
call
jae
adc
sahf
xor
lods
jno
push
lcall
incl
mov
and
pop
das
jns
sub
fcmovnb
loop
adc
or
cmp
push
out
shl
cmp
dec
out
add
imul
push
bound
push
jbe
mov
incl
mov
popa
fidivl
lret
jg
lret
mov
or
pmulhw
and
outsl
insl
loopne
ret
adc
lods
cmp
sub
insb
jecxz
push
mov
imul
call
mov
fnstsw
leave
out
push
sar
negl
sbb
incl
dec
mov
push
xchg
inc
popf
pop
in
pusha
mov
xor
lcall
dec
incb
lods
jae
fcoml
imul
mov
pop
cmc
mov
jno
jg
fildl
and
jg
movsb
adc
popf
jle
inc
dec
insl
fsts
rol
mov
cli
sti
inc
in
lcall
call
push
ret
leave
xchg
test
sub
test
sbb
repz
cmp
xor
cmp
or
cltd
andl
movsl
sahf
ljmp
inc
push
sbb
adc
or
pusha
loopne
ret
jno
jae
hlt
adc
ljmp
mov
xlat
mov
call
pusha
push
loop
jmp
loope
dec
mov
xor
sub
pushl
sub
push
arpl
out
dec
xor
sbb
nop
cmp
out
outsw
cmpsl
add
dec
lea
and
jmp
sbb
mov
fldenv
and
jecxz
mov
inc
sub
pop
mov
push
repz
mov
pop
mov
or
add
and
test
push
lcall
mov
ss
mov
or
addr16
stos
stc
js
pop
fimuls
repz
shlb
popa
jge
push
lock
mov
daa
aaa
shlb
pushf
test
push
and
lcall
pop
fcmovbe
jb
mov
aas
push
xchg
jmp
add
adc
aam
sbb
fidivrs
pop
je
sbb
cmp
sahf
inc
repnz
in
mov
les
andb
pop
mov
and
je
inc
xchg
cmp
push
in
addr16
dec
insb
cwtl
dec
in
mov
stos
cwtl
pop
xchg
dec
or
jmp
dec
push
cmp
mov
add
push
aaa
movsl
lds
repz
xor
xlat
add
jmp
cmp
cmp
pop
std
lret
inc
dec
stos
inc
dec
pop
loopne
mov
xor
xchg
cltd
cmp
pushl
xchg
sub
push
jae
iret
out
fildl
xlat
popa
aaa
testb
hlt
test
cmp
cltd
lret
add
lods
lds
mov
sbb
daa
pop
inc
push
dec
es
sar
pushl
mov
push
xchg
mov
inc
aaa
push
stos
sbb
jo
lcall
push
cmpsl
fistps
les
jbe
inc
or
sbbl
add
adc
repnz
jbe
xchg
sub
into
inc
sbb
xor
xchg
push
sub
dec
jg
sbb
pop
sub
lea
pusha
add
cmpl
xor
stc
mov
jecxz,pn
jmp
in
jne
lds
fcoms
cld
in
cmp
lret
dec
loop
and
lcall
mov
icebp
cmp
sti
mov
mov
pop
fwait
mov
add
sbb
scas
scas
push
js
inc
dec
cmp
fmuls
jmp
inc
aad
in
mov
or
or
mov
aad
decl
and
xor
negb
xchg
lock
jg
lahf
jecxz
adc
out
or
movsl
aad
add
cmp
and
cld
in
pop
sbb
negl
dec
pushf
cmpsl
les
push
decl
mov
sub
fisubs
notl
test
loop
push
cld
xchg
fcompl
lret
mov
sbbl
lcall
movsl
aaa
ljmp
repz
dec
xchg
scas
ret
cmc
push
inc
inc
push
mov
mov
call
rolb
mov
push
addr16
addr16
in
daa
fcmovnbe
andl
mov
in
xlat
jmp
jne
sub
pop
pop
pop
sbb
xchg
dec
sbb
les
sbb
arpl
lcall
sbb
arpl
movb
int
pusha
xor
das
nop
dec
push
jle
jmp
addr16
lcall
sahf
mov
add
push
inc
out
das
sbb
dec
das
test
and
mov
push
sub
scas
jne
cwtl
xchg
cltd
push
and
fdivr
pop
rorb
add
jne
imul
out
ds
mov
jge
in
mov
jecxz
fimull
imul
dec
testl
call
cltd
iret
mov
mov
cmp
and
or
sti
vmwrite
add
ljmp
xchg
test
jne
call
fisttpll
call
lret
ficoml
xlat
out
les
incl
sbb
scas
nop
inc
adc
and
adc
or
or
test
lcall
ror
aam
rcll
dec
lret
mov
pushf
xchg
ja
mov
mov
xor
jmp
jl
loop
dec
cmc
sub
mov
addr16
popa
push
in
xchg
inc
bound
mov
and
cs
int3
adc
adc
or
stos
insl
sahf
sub
movsl
and
decl
lret
mov
ss
mov
ficoml
into
push
or
mov
lcall
xchg
dec
aam
push
into
pop
mov
pop
rcll
cmp
mov
inc
add
jne
decl
mov
pop
das
push
xchg
movsl
pop
jge
sub
movsb
adc
lret
pushl
xchg
cmp
sahf
and
aas
mov
je
fxch
stc
pop
mov
mov
repz
xchg
xchg
fisubs
test
fs
xchg
push
ret
and
dec
mov
add
xlat
cmc
ret
test
std
pop
outsb
out
lods
cmc
das
cltd
gs
pop
addr16
and
cmp
jecxz
xchg
and
aad
lcall
aaa
or
jmp
mov
inc
ret
mov
mov
mov
xorl
inc
std
decl
cmp
cwtl
adc
int3
xchg
dec
xor
add
add
pop
mov
add
lret
loopne
ljmp
gs
cmpsl
popf
stos
push
shlb
fs
adc
or
inc
mov
or
and
mov
mov
stc
mov
fnsave
dec
mov
add
push
dec
push
xor
add
or
pop
inc
movsl
xchg
sbb
sub
call
decl
cmp
imul
icebp
repnz
cld
jo
jae
inc
mov
loope
sub
pop
push
jb
lcall
dec
xchg
inc
sti
cmp
gs
aam
cmc
shl
lret
mov
cmp
decl
cmpsl
cmc
xchg
in
sbb
ljmp
pop
dec
daa
mov
sahf
cmpsl
mov
and
jmp
pop
pop
push
jae
sub
nop
lock
push
mov
repnz
mov
sbb
call
imul
xchg
xlat
std
scas
push
jmp
pop
imul
cmp
leave
pushl
arpl
jo
pop
inc
out
subl
sub
mov
fs
incl
les
dec
int
ficompl
push
sahf
xchg
aam
add
arpl
incl
data16
adc
or
data16
out
out
sub
push
lret
into
dec
dec
aad
insb
das
pusha
repnz
lcall
fistps
jmp
test
lds
out
pop
pop
mov
mov
decl
inc
dec
inc
cwtl
imul
sbb
sbbb
add
insl
pushl
push
mov
adc
dec
xchg
or
push
dec
mov
and
xor
loop
lcall
cwtl
cltd
push
push
and
inc
add
inc
inc
jp
mov
push
cwtl
mov
xchg
pop
push
decl
fbstp
mov
out
sub
and
push
add
push
js
inc
in
cltd
sahf
cmp
mov
sarb
hlt
sbb
jns
jg
mov
scas
inc
mov
aam
imul
shrl
add
jbe
test
jne
add
js
push
int3
push
xor
xchg
pop
inc
lock
xor
loop,pn
lock
mov
ljmp
xchg
inc
cs
sub
push
inc
mov
pop
imul
xchg
jae
inc
sbb
pushl
insb
sub
cmp
add
add
mov
popf
push
ljmp
sti
sbb
icebp
push
mov
shlb
scas
call
and
nop
dec
cmpb
cld
decl
sub
xor
lcall
insb
fidivs
scas
ficoms
je
pushl
das
mov
mov
mov
fsubrs
mov
fdivl
pushf
adc
xlat
xchg
lcall
test
jge
es
add
repz
mov
pop
out
inc
mov
in
pop
incl
mov
cld
leave
or
jno
shlb
push
cmp
in
xor
sbb
jp
push
in
and
inc
push
imul
xlat
pusha
js
btr
add
pop
push
std
stos
out
cmp
mov
xorb
sbb
sub
sub
mov
cmp
jns
cld
cwtl
push
mov
shll
insl
xchg
cmpsb
xchg
jge
xor
xchg
nop
std
lods
xor
push
jge
loop
and
fdivrs
pop
sarl
in
movsb
xor
cld
xchg
in
jecxz
sbb
xchg
dec
jle
pusha
fwait
jmp
cmp
insl
add
out
jne
or
out
mov
lret
dec
cmp
ds
fistps
sbb
int
mov
mov
push
outsl
cmp
inc
into
sahf
jl
loop
cs
and
jmp
mull
pop
pop
inc
mov
adc
aaa
jecxz
push
jne
out
sub
fldenv
jns
jne
mov
mov
jg
pop
and
sti
sub
sub
inc
mov
loope
dec
shrb
mov
mov
aam
mov
fisubrs
outsb
pop
jmp
adc
test
sar
ret
mov
shlb
push
jle
stc
add
mov
fs
and
mov
or
pop
mov
pop
in
dec
dec
dec
scas
jns
mov
mov
inc
in
std
xlat
cli
ds
nop
ror
mov
in
push
mov
int3
je
mov
pop
shlb
mov
push
dec
sbb
decl
xchg
fucomip
sub
sub
sbb
fsubs
inc
xor
sub
jmp
in
inc
jo
inc
mov
sbb
out
adc
cmp
cmp
push
iret
pop
inc
inc
ljmp
fisubrs
outsb
push
push
fcmovne
adc
xchg
add
sbb
test
xchg
insb
loop
or
jmp
dec
lret
mov
out
jmp
sub
fidivrl
xor
or
jb
mov
jle
xor
pavgw
call
fildll
out
lea
inc
aad
dec
and
inc
sbb
lcall
decl
out
popf
mov
das
push
or
rcrl
dec
je
hlt
cmpl
ljmp
push
in
std
mov
jne
rcr
pop
bound
jns
scas
std
pop
divb
decl
les
cltd
in
adc
add
js
mov
jecxz
cli
icebp
jns
incl
sub
mov
les
jnp
stc
mov
movsl
push
adc
mov
jmp
divb
dec
imul
dec
xchg
out
dec
sti
popa
iret
jmp
mov
push
add
call
xor
fistps
stc
and
cmp
cwtl
push
ret
test
mov
fbld
stc
push
push
jno
ret
pop
ret
loope
jp
mov
dec
jns
fdivrs
pop
pushl
incl
dec
fs
xchg
mov
pushf
loope
rolb
cmp
sub
inc
fcoms
inc
xchg
cltd
mov
gs
dec
pop
es
or
mov
call
adc
or
or
lds
add
lret
cmp
sub
inc
mov
inc
xor
xchg
adc
movsl
xlat
cmp
jmp
lcall
in
arpl
cmpsb
push
inc
ret
jns
sti
lret
adc
je
xor
movsl
bound
test
lret
adc
xchg
dec
addr16
push
ficompl
fsts
pop
rcll
pop
pop
add
dec
movsl
jle
dec
mov
push
test
decl
roll
in
in
or
loop
out
push
jmp
into
ss
jg
and
decl
pusha
push
aam
adc
test
popa
notb
outsb
cmp
scas
xchg
fadds
aaa
stos
cmp
mov
push
outsb
sub
lret
push
sub
xor
mov
sbb
fmull
faddl
xlat
nop
loopne
jnp
insl
fsubs
decb
mov
mov
loopne
sbb
xchg
adc
fnsave
cmp
ljmp
testb
and
aas
mov
or
add
nop
push
into
das
cmp
mov
call
fbld
push
xchg
xor
int
jmp
in
sahf
aas
mov
dec
fimull
cmp
mov
sbb
push
mov
iret
into
outsb
movsl
popf
sub
dec
lods
push
sbb
ljmp
test
lcall
leave
dec
test
stos
xor
or
adc
add
pushf
sbb
fiadds
fisubs
add
fbstp
fiaddl
nop
mov
mov
call
mov
mov
cltd
mov
andl
rcrb
mov
call
pushf
jns
lret
ljmp
out
dec
cltd
lahf
lods
popf
insb
leave
aad
bound
loope
push
xchg
lock
call
pop
in
rorl
xchg
push
push
inc
bound
jecxz
xor
subl
ljmp
jo
push
xchg
lods
xor
dec
cmp
jge
idivb
sbb
or
aam
jo
jle
push
pushf
daa
jnp
mov
inc
sbb
clc
aas
fimull
pop
pop
aam
rorl
fisubs
pushl
jo
xor
or
lea
pop
add
push
xlat
jae
mov
cmp
imul
pushl
les
dec
ljmp
loop
jge
lret
jae
mov
div
or
incl
pop
mov
pop
xor
mov
pop
pop
scas
or
mov
jno
inc
or
add
jmp
sbb
mov
push
pop
stos
xor
je
cmp
out
and
pushf
nop
jecxz
jmp
icebp
stos
dec
push
or
inc
or
idivb
dec
fsubrl
inc
or
jmp
push
outsb
xchg
in
xchg
rol
mov
jb
pop
xorb
lcall
lcall
add
jb
xchg
shr
xor
xchg
pop
je
inc
mov
dec
xor
decl
cli
push
push
in
scas
jmp
fs
outsb
adc
testl
jmp
in
xchg
add
icebp
dec
in
lock
iret
add
movsl
mov
int3
push
sub
ss
pushl
sbb
arpl
popa
ficomps
xchg
push
mov
ljmp
outsl
fbstp
lods
outsl
xchg
push
jmp
dec
push
rolb
cld
pop
js
addr16
in
pop
xor
call
movsl
repz
cs
push
mov
push
outsb
subb
mov
and
call
fisttpl
mov
int3
jg
mov
inc
pmaxub
pop
out
jbe
repnz
or
pushl
inc
movsb
outsl
mov
movsl
cmpb
mov
movsl
pop
in
add
jmp
pop
icebp
adc
jnp
xchg
int
popa
pushf
mov
cmp
jne
pop
movsb
push
push
pushl
scas
mov
sub
imul
pusha
jecxz
sbb
aad
jle
stos
stc
xchg
jb
pushl
hlt
xchg
into
out
mov
cmp
scas
int3
push
in
xchg
adc
pop
cli
rcll
xor
jmp
aad
mov
dec
ret
sbb
and
setb
mov
pop
test
and
loop
or
movsl
xor
aas
cmp
movsb
aad
rcl
inc
gs
call
or
xor
enter
mov
das
das
cmp
inc
loope
addb
movsb
imul
pop
dec
iret
repz
and
cmc
ds
fisubl
jmp
lcall
jmp
xor
mov
bnd
or
inc
sub
sti
pop
rorb
jmp
pop
dec
jbe
dec
dec
mov
sbb
dec
popf
jge
pusha
mov
test
sar
lcall
push
mov
jg
movl
fsts
jne
lret
fmuls
push
sub
call
lahf
std
push
inc
pop
adc
pop
test
or
mov
cmpsb
xlat
dec
adc
adc
jg
or
pushf
pop
rcrl
sti
ljmp
mov
test
arpl
pushl
pcmpeqd
pop
inc
add
inc
mov
xor
out
out
sbb
xor
adc
adc
jmp
in
push
cmp
scas
add
cltd
push
cmp
jbe
insb
cld
cmp
cmpsb
cli
bound
call
pop
pop
iret
loope
pushf
cmpl
pop
imull
lret
push
test
pushl
pop
lock
repnz
div
js
xor
testb
dec
cmc
fstpl
cli
icebp
and
inc
pop
xor
repnz
ret
or
pop
fmul
ja
lcall
arpl
jmp
call
in
dec
sar
adc
mull
inc
sub
xchg
stos
mov
and
call
mov
leave
enter
shll
cld
lret
xchg
sbb
jp
stc
xor
push
adc
sub
xor
or
test
test
adc
or
call
cltd
clc
xchg
dec
sbb
ja
adc
mov
data16
dec
out
xchg
scas
cmp
sti
add
push
and
push
lock
push
pop
jmp
and
sbb
ss
sub
ret
or
jmp
add
addr16
shrl
jmp
notl
pop
adc
dec
lds
cs
in
pop
jge
jmp
mov
into
or
mov
testb
mull
decl
jno
pop
push
or
daa
movl
fiadds
cmpsb
inc
cmpsl
xchg
mov
mov
cmp
shlb
daa
inc
js
pop
jb
cltd
cmp
jo
lods
sbb
cmp
xchg
mov
jmp
fnstcw
or
xchg
xchg
xchg
scas
leave
lea
lock
mov
pushl
sub
fs
jl
psrlq
jb
xor
inc
add
pop
loope
aas
int
sti
hlt
cmp
repz
bswap
cmp
jg
in
out
lods
dec
sti
sbb
mov
mov
je
or
mov
pop
mov
mov
incl
arpl
and
mov
fidivs
ljmp
push
push
sar
xorl
mov
and
xor
rcll
xchg
call
lcall
scas
or
call
std
inc
idivb
xor
loop
fldcw
testl
cmpsb
and
call
adc
stc
scas
je
lcall
pop
test
cmpsl
xlat
imul
cmp
inc
adc
push
push
sti
inc
bnd
aam
xor
and
dec
xchg
or
push
cli
lds
notb
mov
dec
jl
mov
mov
fldcw
cmp
call
mov
aad
sub
clc
out
fimull
repz
dec
jno
cmpsl
bnd
ljmp
xlat
sub
sub
mov
inc
data16
xor
mov
inc
scas
ljmp
xor
icebp
mov
xchg
dec
add
bound
aaa
notl
dec
inc
pushl
cmpsl
cmp
push
out
inc
push
aas
gs
das
adc
int3
mov
stc
mov
or
mov
push
insb
dec
add
mov
ret
stc
mov
in
and
ds
out
or
inc
sub
aam
aam
stos
loopne
insb
sbb
popf
psrlq
lea
pop
or
xlat
neg
repz
aas
fdivs
ficoml
cmc
leave
sbb
mov
fsubs
mov
test
mov
fs
jmp
mov
adc
add
xchg
push
cmpsb
popf
sbb
shlb
xchg
dec
mov
jmp
pop
daa
insb
repnz
loope
cld
in
cmp
outsb
es
mov
sub
dec
add
call
mov
fildll
xchg
jl
in
out
add
lcall
decl
cmp
xor
les
xchg
outsl
add
pop
xchg
leave
push
movb
push
dec
jmp
sub
pop
pop
repnz
inc
and
mov
aaa
mov
adc
jle
push
fs
dec
das
push
mov
pushf
das
jle
inc
sub
or
push
fs
cmpsb
fstpt
pushl
sbbb
fstp
imul
adc
sub
notl
loopne
mov
mov
sahf
cli
shl
ja
pop
fucom
lcall
mov
jg
adc
xchg
in
outsb
mov
push
ja
sub
rdpmc
fbld
jp
jge
test
cltd
jno
pop
dec
dec
jnp
jmp
push
popf
mov
out
jnp
jne
outsl
adc
inc
fld
xor
adc
ja
push
sbb
jmp
in
xchg
mov
mov
jae
in
scas
in
mov
sub
mov
mov
push
mov
ficomps
int3
sub
inc
jb
loope
pop
mov
sub
sub
stc
dec
incl
pop
xchg
daa
adc
or
aad
push
call
out
decl
sbb
ret
outsl
daa
and
push
imul
xchg
mov
mov
in
cmpsl
sub
cs
sub
into
movsb
push
loop
jge
subb
mov
and
ljmp
push
ret
aaa
ret
ja
in
cwtl
xor
jle
cmp
adc
xchg
xor
ljmp
jle
jecxz
mul
loopne
aaa
call
pop
and
rolb
push
mov
push
fwait
jp
inc
daa
aas
push
jecxz
adc
mov
test
aaa
fs
xchg
pop
rorb
dec
push
repnz
ja
scas
incl
mov
data16
xchg
pop
sbb
push
daa
mov
enter
ja
repz
jmp
mov
scas
int3
mov
sahf
gs
inc
decb
bound
outsb
add
decl
js
insl
jnp
arpl
mov
imul
mov
hlt
adc
inc
and
decl
dec
mov
and
nop
addb
xor
mov
xchg
push
decl
sbb
pop
shrb
cltd
sti
cmc
lds
mov
div
xchg
decl
cmp
mov
test
push
inc
aas
adc
faddl
incl
mov
roll
jb
fcoms
xchg
cld
or
sub
push
xchg
mov
xchg
call
sbb
stc
out
push
outsb
pop
mov
push
scas
mov
cmp
mov
dec
mov
fsubl
pop
adc
fwait
xchg
jmp
fs
fsubr
dec
sti
cmp
imul
sub
xchg
jmp
jmp
mov
push
or
shll
mov
aam
decl
or
clc
test
mov
dec
call
lret
push
dec
fwait
sbb
cmp
shrb
jbe
nop
sbb
inc
sub
pop
popf
les
mov
decl
lods
in
arpl
cld
leave
in
enter
cmc
cmp
call
xor
jmp
imul
xor
cmc
je
test
pop
sub
cli
nop
xchg
jo
sub
lea
out
lcall
inc
push
mov
adc
push
inc
adcb
cmpsb
negl
pop
jp
fisttpll
sbb
mov
dec
in
inc
inc
adc
xor
std
xor
push
cltd
add
push
xchg
nop
rcpps
mov
dec
ljmp
inc
pop
xor
push
push
sbb
test
xor
xchg
xor
pushl
inc
jnp
loop
adc
les
xchg
push
into
push
fs
imul
lcall
add
popa
stc
mov
adc
dec
adc
mov
ss
incl
jecxz
movhps
lds
icebp
sbb
lods
scas
mov
sbb
adc
call
test
xchg
daa
lock
mov
jecxz
or
in
or
lcall
addr16
fcoml
inc
jmp
cmp
jnp
aas
das
push
jno
adc
int3
mov
inc
adc
mov
ja
pop
pop
hlt
aas
mov
int
inc
mov
mov
xor
incl
xchg
mov
dec
cs
push
pop
add
push
jle
sub
mov
add
mov
sub
dec
in
lret
incl
mov
or
stc
xlat
inc
pop
sub
mov
xchg
rcr
and
push
ret
and
enter
jmpw
fs
mov
fs
sti
repz
mov
decl
hlt
add
fs
mov
out
rcl
add
sub
mov
test
dec
fistps
sub
inc
mov
stos
pop
movsl
mov
mov
pop
mov
jnp
fstpt
inc
adc
fnstcw
cmp
inc
ret
cmc
pop
cmp
xor
xor
shll
push
fnstenv
imul
incl
inc
sbb
dec
inc
popf
pop
cmp
aaa
push
and
rcrl
daa
jl
and
ret
decl
inc
mov
scas
ss
xor
fwait
jbe
push
mov
fisubrs
dec
or
dec
lock
outsb
mov
arpl
cmpsl
or
mov
mov
outsb
mov
aad
push
inc
cld
fidivrs
call
add
repnz
mov
mov
pop
lret
or
dec
sbb
jb
sub
add
mov
movsb
inc
mov
fsts
push
in
inc
pop
mov
mov
fnstenv
or
pushf
les
jg
jle
xchg
sarb
xor
imul
insb
pusha
dec
jno
cs
ljmp
sbb
adc
aas
and
je
dec
ret
cmp
jmp
rorl
rcrl
sti
sub
pop
call
add
dec
jbe
sbb
xchg
jno
test
iret
in
and
inc
add
inc
clc
jmp
mov
xchg
jge
jl
mov
mov
popa
inc
mov
loopne
mov
ljmp
loopne
call
add
lcall
xchg
pop
sub
fistl
and
jo
sub
dec
pushl
in
pop
ja
xor
sbb
xor
jae
imull
subl
cmp
or
shl
adc
rol
pop
aad
test
push
push
xchg
stc
test
jmp
adc
cli
push
ret
sub
fsubs
cmp
inc
xor
and
cmpsl
ljmp
cwtl
insb
push
pop
inc
pop
popf
add
add
aas
mov
mull
mov
sahf
push
xchg
jb
sar
incl
aaa
cmp
xchg
push
imul
mov
lods
mov
fnstcw
inc
imul
mov
cli
dec
mov
jmp
ljmp
clc
lock
cmp
and
cmp
push
inc
pop
ss
mov
call
pop
cmp
lods
ret
rorb
bswap
fwait
cmpsl
xor
sbb
ds
nop
sahf
popf
and
lcall
fistl
pop
mov
adc
jmp
inc
jnp
cmp
pop
sbb
sub
pop
sbb
adc
push
mov
jl
jns
popa
xor
ljmp
adc
inc
aam
push
inc
repz
or
dec
scas
cmp
shrl
cmpsb
nop
lcall
dec
add
pop
or
pop
adc
push
pop
push
sub
out
pop
xchg
sbb
inc
cmp
gs
ror
sub
adc
mov
std
push
jecxz
stc
cs
sub
jmp
adc
imul
gs
jno
shl
mov
sbb
popf
mov
jmp
in
dec
cmpsl
push
push
dec
cmpl
jbe
lret
inc
sub
outsl
and
mov
test
incl
push
adc
cmpsb
enter
clc
bound
jo
mov
fwait
inc
out
mov
out
pop
ljmp
cmp
mov
adc
pop
clc
mov
ljmp
mov
push
push
ficoml
rep
outsb
jae
mov
xchg
in
push
dec
movsb
and
insl
push
push
sbbb
test
mov
adc
dec
xchg
out
push
loop
pop
mov
or
int
test
jb
or
lock
lcall
adc
cmp
gs
lods
rcrl
outsl
test
insl
xor
test
inc
pop
mov
mov
jmp
xchg
insl
std
jo
jbe
out
jmp
xchg
sub
add
mov
fadds
dec
mov
push
xchg
notl
arpl
push
adc
bound
test
mov
jecxz
icebp
xchg
loopne
lcall
xor
xor
pop
or
gs
sti
icebp
inc
mov
sub
fwait
call
adc
sbb
stc
ds
push
sbb
mov
mov
out
in
sub
cmpsb
bswap
pop
iret
inc
add
adc
ljmp
outsb
cmp
es
mov
adc
mov
jecxz
jg
sub
or
sbb
pushl
out
icebp
xchg
jo
xlat
xchg
loope
repnz
negl
pop
js
dec
dec
push
or
test
cmpsb
fwait
inc
negl
inc
int
adc
cwtl
enter
pusha
and
adc
bound
decl
inc
fs
push
adc
pop
stos
mov
adc
push
adc
cmp
pushl
mov
jne
out
jns
pusha
ret
push
jns
leave
mov
mov
mov
add
mov
inc
mov
and
cli
cmpl
dec
mov
add
dec
fbstp
xlat
mov
dec
pop
scas
inc
adc
pop
or
pop
and
loop
inc
lret
mov
xchg
mov
lcall
xor
jne
pop
jp
add
ljmp
aad
scas
adc
jle
orl
incl
ja
inc
xchg
fbstp
add
jo
insb
ljmp
pop
popa
xor
dec
test
pop
sub
std
pop
pop
dec
adc
mov
xor
rcrb
fnstenv
mov
decl
negl
mov
mov
popf
cwtl
insl
into
mov
sahf
or
lea
inc
push
and
rcll
jmp
add
mov
sub
fwait
cwtl
mov
push
dec
sub
mov
clc
adc
and
dec
movsl
adc
mov
ds
dec
inc
push
addl
lcall
jb
push
aas
jmp
sbbb
ss
popa
test
jecxz
xor
jmp
add
cmp
int3
jns
inc
push
xor
mov
ret
bound
scas
mov
dec
sbb
sbb
xor
adc
stc
mov
mov
and
icebp
lret
pushl
pusha
daa
lcall
push
fwait
loope
mov
pushf
data16
sbb
and
xor
incl
imul
bound
xchg
xchg
out
ret
xchg
fs
pop
mov
sub
xor
call
add
cltd
imul
idivb
int
enter
xchg
fcoms
outsl
mov
out
incl
xchg
dec
dec
mov
sub
lret
cltd
dec
shll
inc
je
sbb
repz
cltd
pop
lcall
dec
lea
std
int3
mov
push
bound
mov
push
add
call
incl
stc
inc
jg
in
push
xchg
cmp
inc
xorb
push
andb
call
mov
or
addr16
push
push
loopne
pushf
or
int3
mov
test
aad
popa
das
in
lcall
ja
lea
call
inc
mov
stos
jo
push
imul
decl
lock
imull
sub
xchg
push
or
cmc
pusha
adc
nop
mov
fldcw
dec
pop
shrb
in
ss
ljmp
xchg
std
test
pop
lret
push
test
sub
and
mov
fcomps
adc
sbb
cmp
pop
rcrl
push
push
fcmovnbe
mov
jp
sar
decl
daa
adc
testb
jp
ljmp
sub
mov
out
mov
inc
clc
or
leave
lea
pop
shrb
mov
or
add
jmp
mov
or
incl
mov
jno
fld1
fwait
fs
mov
into
sbb
xchg
add
jmp
mov
mov
clc
rolb
xor
adc
jmp
mov
fnsave
sbb
jo
dec
xchg
aam
jo
cltd
popa
fisubrs
decl
sbbb
sub
sbb
cmp
shrl
daa
roll
push
call
decl
push
cltd
mov
imul
mov
aaa
lods
nop
loopne
jmp
xchg
lods
cmp
lcall
jne
mov
push
rolb
loopne
mov
dec
adc
mov
mov
jmp
adc
cmp
xor
or
out
cmp
and
sbb
fisttps
incl
test
daa
ljmp
fcompl
sub
mov
jae
dec
inc
jle
ficoms
pop
ss
lahf
jle
das
sti
and
cmc
cmpsb
xchg
sti
fdivp
or
pushl
mov
adc
insl
lea
lods
jg
push
or
icebp
pop
lods
mulb
adc
pop
ds
sub
mov
add
or
sub
xor
xor
mov
icebp
sti
mov
fdivrl
lea
test
shl
aaa
cltd
incl
and
sbb
or
inc
or
adc
mov
push
lcall
call
mov
lods
outsl
pop
mov
imulb
out
dec
pop
sbb
lods
aaa
sbb
addr16
ljmp
mov
or
mov
out
push
popa
jge
mov
aas
fidivrl
jo
pushl
imul
pop
xchg
sub
js
sbb
cmp
test
call
add
stc
xchg
in
out
leave
pop
push
sbb
stos
add
pop
mov
sub
out
aas
pop
aaa
lcall
mov
loope
fs
push
jb
rcrl
push
jnp
outsb
mov
mov
dec
scas
push
inc
in
and
dec
mov
in
jno
repnz
arpl
out
dec
sbb
add
aaa
sbb
cmp
dec
mov
call
pushl
lcall
test
insl
pop
mov
sub
add
cmp
ffreep
sbb
pop
push
add
push
and
sarl
pop
call
decl
xor
sbb
xor
stos
push
mov
add
icebp
data16
sub
incl
mov
adcb
jecxz
daa
xchg
pushf
popf
inc
fwait
test
addb
push
or
or
jp
xchg
mov
or
stc
pop
in
jp
in
mov
loope
call
mov
lret
nop
shll
inc
jnp
jp
int3
push
xor
ds
out
call
movl
xor
mov
pusha
je
in
mov
in
sar
incl
cmp
out
imul
aaa
or
or
adc
or
mulb
nop
rorl
les
push
add
or
mov
inc
cmc
mov
jge
sub
inc
js
daa
adc
inc
dec
jns
sti
xchg
and
dec
in
adc
mov
std
rolb
int
lcall
out
cvtps2pd
stos
jle
push
testb
int3
imull
jg
mov
test
push
call
les
pop
jecxz
adc
rcrl
push
cwtl
fidivrs
add
lds
xor
jbe
adc
test
cmp
mov
sti
and
outsb
adc
or
jg
shll
mov
push
jnp
decl
in
cwtl
loopne
or
mov
inc
and
mov
or
das
in
or
ljmp
cltd
pop
mov
sub
cld
or
pushf
stos
pushf
xor
lock
inc
mov
ljmp
push
clc
push
rcrb
loopne
xchg
movsl
imul
fisubrs
or
adc
jb
jmp
jb
xchg
inc
shll
xor
mov
out
pop
cmp
sub
in
imul
dec
jmp
push
or
ret
popf
gs
inc
fisubrl
fcmovb
mov
xchg
std
inc
jmp
ret
mov
aad
test
mov
mov
inc
fdivrl
pop
lcall
jbe
and
add
movsl
dec
pop
repnz
imul
push
sub
decl
inc
dec
fwait
std
pop
mov
push
push
push
popf
push
test
lods
and
pushl
repnz
sub
and
repnz
inc
xor
pop
mov
inc
sub
mov
jno
mov
es
out
mov
in
shrl
rorl
jmp
movsl
mov
mulb
sti
pop
or
xchg
arpl
stos
mov
push
pop
add
jns
push
sub
sbb
jb
repnz
imul
or
pop
jl
mov
or
inc
clc
and
jmp
lcall
ror
mov
out
mov
cmp
nop
xor
push
sub
jns
inc
inc
popf
test
push
sub
or
jg
call
inc
lods
repnz
scas
jmp
push
mov
fucomp
ficoml
mov
push
cltd
dec
sahf
pop
fcomi
sbb
decl
lods
dec
cli
inc
sbb
xchg
xorl
inc
loopne
inc
jmp
add
incl
adcb
mov
loopne
sbb
cmp
dec
loope
ljmp
push
cmp
imul
call
shll
mov
xchg
mov
pushf
test
shr
out
jnp
cmp
or
mov
or
pop
mov
mov
or
ret
xor
inc
jno
xchg
test
outsl
adc
mov
or
not
ret
lahf
pop
test
inc
imul
adcl
fidivs
jg
ljmp
shl
xchg
lret
add
sti
mov
mov
push
and
cmp
and
fwait
int
lcall
cs
inc
ss
in
cvtdq2ps
bound
arpl
sub
ret
cmpsb
pop
jae
jle
push
std
outsb
jbe
mov
mov
lcall
shr
dec
push
lcall
nop
sarl
sbb
pop
sub
sbb
sbb
pop
sbb
and
lcall
lret
jg
inc
hlt
mov
ficomps
mov
mov
mov
decl
xlat
inc
js
lret
aad
ljmp
test
or
cmpsb
xchg
sbb
cmp
ret
ja
incl
mov
fwait
out
icebp
addr16
cs
movsl
lret
xchg
scas
gs
pop
cs
mov
incl
jae
imul
push
cwtl
and
mov
xorl
jp
test
pop
imul
decl
and
jns
out
aad
mov
mov
cltd
dec
imul
subl
or
lock
andb
bound
cmp
lock
pop
sbb
das
orl
jp
nop
mov
inc
mov
into
sbb
cmp
lock
jb
mov
lret
inc
fstpl
cmpsl
jle
cld
stos
jo
out
sub
sbb
cmp
dec
inc
jbe
lcall
scas
xchg
dec
mull
lret
call
ds
mov
pop
pop
divl
jne
dec
lret
jmp
test
ljmp
pop
test
inc
push
fwait
push
addr16
pop
mov
xor
call
lock
test
mov
or
out
dec
sahf
sahf
leave
loop
idivl
dec
pop
daa
pop
ss
add
jp
inc
in
jno
sbb
sbbb
mov
fbstp
jo
dec
cwtl
subb
leave
das
push
inc
mov
fstps
and
lahf
push
hlt
pop
jge
push
sarb
dec
mov
pushl
cmc
icebp
jge
sub
jecxz
add
adc
sub
sub
rol
out
sub
inc
and
inc
jge
orl
mov
adc
stos
pop
push
std
adc
lock
jmp
ftst
mov
sub
inc
addl
jecxz
sbb
decl
mov
sbb
jns
iret
aas
jno
int3
idivb
mov
std
imul
scas
sub
lcall
mov
adc
aam
lods
decl
push
xchg
xchg
psubusb
inc
je
ss
jae
sahf
push
xor
and
pop
push
subl
incl
cmc
jns
jmp
idiv
push
sub
imul
loop
jae
loope
aad
pop
out
out
bound
mov
inc
sub
dec
lods
sub
xor
pop
les
xor
decl
xchg
mov
jp
outsl
movsl
cmc
xchg
pop
mov
in
das
ljmp
clc
xlat
lea
adc
xchg
jmp
pop
pop
jbe
pop
mov
ljmp
fwait
aaa
add
aad
sub
sub
cs
clc
mov
fistpll
inc
inc
js
dec
decl
xchg
sub
pop
cli
test
jmp
mov
inc
imul
bound
popf
jmp
cmc
lcall
mov
push
xchg
movsl
xchg
adcb
cwtl
sti
sti
cmp
or
call
arpl
fucom
loopne
fidivl
sbb
lret
push
xchg
out
add
jbe
and
ljmp
leave
pop
mov
add
or
in
mov
in
daa
adc
jmp
sbb
lcall
std
in
adc
out
int
mov
and
adc
fiaddl
out
mov
dec
fs
aas
and
pop
jp
in
push
or
xchg
cmp
test
je
adc
call
into
rorb
push
jo
mov
pushf
and
inc
out
add
sti
das
adc
in
jge
dec
stos
adc
xor
mov
pop
cmp
adc
mov
dec
xlat
or
push
cmpsb
rclb
fadds
leave
pop
int
aam
into
hlt
pop
roll
ja
lods
out
std
in
scas
inc
stos
xchg
sub
and
leave
je
loopne
mov
in
stos
pushf
or
ja
addr16
jb
cmp
xor
mov
pushl
and
push
enter
push
aam
adc
add
fistl
mov
fcmovnbe
test
mov
xchg
ja
imul
ljmp
out
or
mov
push
xor
push
push
and
in
mov
dec
inc
xchg
cmp
adc
inc
lcall
out
movsl
ljmp
pop
ljmp
jg
incl
lock
imulb
cmc
inc
xlat
ljmp
mov
clc
jns
push
adc
push
in
scas
sub
or
dec
jb
lcall
call
pop
rolb
dec
xchg
adc
aaa
mov
and
sbb
mov
call
loopne
test
fldenv
gs
or
xor
rorb
and
in
ss
incl
cmc
xchg
mov
lods
dec
push
push
test
push
jno
cmpsw
popf
scas
cmp
fwait
cmpsb
mov
lcall
jnp
stc
fldt
repnz
sub
add
xchg
push
int3
pop
jne
mov
cli
stc
jge
call
ss
add
and
insl
or
fisttpll
inc
jbe
int3
loope
aaa
push
pop
sub
push
dec
call
inc
dec
in
outsb
mov
mov
push
mov
int
cmc
dec
ja
dec
add
cmpsb
xchg
push
dec
stos
jae
aaa
or
push
push
pop
jle
scas
aad
xor
push
mov
ljmp
outsb
xlat
inc
ds
mov
add
mov
psllq
pop
movsb
das
subl
pushl
and
cmp
stos
cld
bound
ja
xor
sub
and
sbb
jmp
or
repz
mov
call
mov
int3
cs
imul
pushl
dec
movsl
xor
adc
jge
es
nop
mov
push
xor
repnz
out
les
adc
jmp
mov
test
dec
pop
shl
insl
fs
int3
clc
enter
pop
fcmovnb
cli
mov
dec
xor
sub
incl
jo
inc
lock
das
in
mov
sub
xchg
repz
lret
lods
sahf
cli
subl
mov
lret
shlb
das
imul
lods
xor
in
scas
ljmp
cmc
adc
sbb
jmp
test
mov
ja
pop
adcb
insb
movsb
lcall
add
mov
ret
cld
pop
iret
inc
outsl
dec
shrb
das
es
ljmp
fimuls
xor
add
xor
inc
icebp
cld
pop
jb
in
xchg
pop
sar
sti
lcall
mov
push
sbb
hlt
xchg
mov
mov
jp
shl
or
int3
dec
pop
jle
mov
icebp
sub
outsl
mov
adc
mov
dec
jnp
jmp
sbb
mov
insb
imul
repnz
xor
call
decl
adc
ror
mov
icebp
loopne
cmp
jmp
xor
dec
rorb
cli
inc
ljmp
and
outsl
xchg
mov
aad
sub
cmp
cld
xor
aam
imul
pushl
cld
add
cmp
and
outsl
fwait
mov
imul
pushl
cmp
push
sti
push
xor
lock
ja
xchg
jo
iret
leave
aaa
ss
imul
lcall
mov
sti
insl
ja
pop
int3
cmp
sbb
aaa
and
in
xor
aaa
sti
imul
inc
call
cld
pop
or
push
in
mov
gs
push
push
in
mov
xor
shl
jmp
push
cs
sub
jp
jecxz
movsl
sub
js
xor
shrb
mov
lcall
jge
cltd
rolb
cmp
and
xchg
jae
mov
imul
inc
sbb
mov
test
sbb
mov
add
lret
out
sahf
jne
std
fsubs
orl
jne
push
or
dec
mov
adc
adc
fs
push
lret
shlb
push
pop
mov
dec
jmp
adc
jg
mov
mov
out
repnz
adc
call
sub
ret
sbb
xorb
aam
jle
sub
and
push
jmp
pop
dec
cmpl
stc
shlb
push
fistl
fcmovu
mov
std
or
fcos
call
jg
dec
sbb
shlb
or
jo
jmp
pop
loop
call
sbb
cmpsb
dec
inc
add
sub
jo
mov
aam
or
inc
xor
dec
lret
call
testb
adc
dec
outsl
movsl
call
popa
jns
fstpl
je
movsl
jae
inc
adc
decl
or
xor
popa
xchg
les
sar
dec
jns
call
jb
sarb
jo
decl
pop
add
sbb
sarb
dec
pop
clc
dec
pop
fnsave
es
mov
xchg
jle
fisttpl
pop
pushl
jl
cmpsb
fidivs
push
nop
sub
lcall
mov
xchg
inc
sub
call
gs
aad
push
and
pop
pusha
popf
lods
push
das
inc
mov
mov
xchg
loope
cmpsl
incl
insb
out
das
jno
int3
cmc
sbb
push
in
sbb
and
mov
cmp
sbb
sbb
or
jbe
mov
inc
mov
sbb
test
inc
cmp
js
pop
mov
test
iret
iret
pusha
push
push
dec
adc
jmp
loopne
std
jmp
pushl
scas
pusha
sbbb
lods
and
test
fs
mov
pop
daa
test
movsl
sub
rcrb
mov
cmp
or
xchg
pop
mov
jae
jmp
fucomip
push
fdivr
call
cmp
and
pop
bswap
xchg
push
sub
stos
nop
sbb
shlb
push
or
pushl
mov
stc
arpl
push
jecxz
xor
cli
jmp
inc
test
ljmp
sbb
lea
shlb
subl
pop
js
dec
ljmp
pop
ja
push
pushl
xchg
xchg
sbb
xchg
jge
rorl
roll
xchg
pushl
jle
xchg
js
outsb
jecxz
mov
sarb
rcll
js
sbb
lds
data16
mov
jmp
xlat
mov
jno,pn
popf
xor
ja
xchg
xor
ss
lret
decl
ljmp
outsl
pop
rol
loop
in
lea
add
cmp
dec
xchg
pop
xchg
add
flds
pop
mov
cli
outsb
test
pop
cs
lret
ds
mov
jne
ljmp
cmp
in
roll
insl
loope
fwait
mov
es
ja
hlt
out
cmp
outsb
out
mulb
fistps
inc
pop
push
pushf
std
pusha
in
adc
call
add
cmpsl
out
shll
movsb
xchg
ss
sarb
mov
inc
sub
data16
sub
jmp
cmp
shlb
jbe
or
in
iret
lods
pop
loop
push
in
jmp
mov
pushl
inc
stc
int
imull
xchg
fwait
in
inc
in
pop
arpl
mov
mov
data16
decl
leave
add
jmp
xchg
daa
int3
mov
int3
nop
mov
sub
jl
pop
aaa
hlt
aad
adc
aaa
rolb
dec
push
push
xchg
js
dec
subb
push
scas
jbe
test
dec
arpl
ja
test
cmp
push
mov
jle
pop
push
cmp
sbbb
fwait
adc
adc
mov
jmp
ja
test
das
imul
movsb
out
mull
cmova
sub
cmp
in
das
into
cmp
sbb
shrb
push
sbb
jbe
ljmp
xchg
mov
jmp
shl
call
add
lds
pushf
xor
xchg
jecxz
aas
xlat
stos
and
cld
sub
sahf
cli
out
jnp
sbb
dec
aam
jge
and
and
dec
push
pop
jnp
lret
ljmp
lea
or
cmp
test
mov
out
fbstp
jmp
inc
or
ds
fcmovbe
fldcw
dec
xchg
pop
sbb
mov
jns
jecxz
call
mov
jo
rcll
in
push
test
fsubrs
imul
or
scas
mov
mov
fadd
in
clc
sbb
sub
sub
sbb
add
and
ljmp
bsr
xchg
xchg
or
jno
dec
xor
inc
adc
push
lcall
and
in
lods
hlt
dec
in
adc
or
mov
mov
add
xchg
mov
lcall
pop
cli
int3
and
cmp
ror
adc
loopne
inc
dec
imul
mov
lcall
cld
mov
xchg
dec
rolb
jg
mov
sub
jne
jle
ror
pop
test
add
push
ljmp
in
mov
test
enter
lahf
push
mov
jbe
cmp
fcmovne
pop
and
fldcw
mov
in
pop
sub
mov
repz
incl
mov
test
jg
mov
out
xchg
jecxz
jb
mov
loope
aam
decl
xor
stos
ficoml
pop
fisubrl
dec
sub
sbb
jae
aam
and
jg
mov
jmp
ljmp
and
sub
out
adc
and
xchg
lret
inc
popf
mov
pop
je
call
call
sub
nop
jecxz
ja
in
adc
dec
mov
in
add
in
pop
rorb
rclb
imul
dec
or
push
in
out
sahf
testl
scas
ds
jmp
clc
push
xor
or
es
cmp
or
mov
fnstsw
lods
out
cld
pushl
and
adcl
xchg
pop
jns
mov
push
xchg
ficoml
call
xor
pop
xchg
push
xchg
xor
mov
ja
cmp
xchg
inc
hlt
mov
adc
ret
push
sbb
call
or
xchg
add
sar
mov
test
icebp
lret
adcb
cli
push
sbb
mov
pop
lret
jmp
test
jae
adc
stos
mov
adc
lods
sub
fmull
jmp
cltd
mov
mov
call
or
stos
sub
dec
lods
push
push
cmp
gs
push
sub
mov
adc
mov
adc
arpl
mov
scas
adc
jmp
imul
adc
sub
movsb
adc
xchg
aam
and
psraw
jge
call
pop
dec
mov
rcrb
mov
repnz
das
sub
mov
decl
scas
pop
mov
mov
inc
ss
push
std
pop
cmp
sbb
cltd
psadbw
jmp
mov
pushl
or
test
push
cmpsl
pop
dec
adc
dec
addr16
loope
imul
add
jmp
popf
outsb
fwait
sbb
mov
pop
loop
mov
push
sub
pop
stos
leave
add
pop
in
mov
push
cmp
vpaddb
jb
add
shll
adcb
in
arpl
lcall
mov
scas
gs
rorl
bound
ja
adc
ljmp
shlb
test
xor
ret
mov
fcoms
aaa
setb
lds
dec
test
push
decl
mov
testl
dec
lea
fimuls
fcmovne
jmp
scas
imul
incl
cmp
call
or
mov
jns
push
mov
test
ljmp
inc
pop
sbb
mov
push
out
int
or
mov
pop
stos
aaa
ljmp
call
mov
cmp
push
rorl
jno
shrb
pop
pop
add
xor
push
jmp
daa
aaa
and
jae
pop
fmull
or
sub
testl
pushl
int3
inc
sbb
mov
sub
int
inc
xchg
orl
test
mov
iret
jle
nop
ret
inc
repz
test
push
jl
and
inc
call
jno
dec
or
cmpsl
jb
push
sub
in
js
mov
lret
cmp
clc
sar
es
aas
xor
inc
xchg
push
loope
cmpsb
mov
lcall
stc
imul
sub
mov
pushl
mov
sub
xchg
out
inc
xor
push
and
mov
mov
nop
xchg
cwtl
imulb
ret
call
mov
mov
dec
cmpl
gs
sub
cmp
adc
or
adc
inc
mov
loop
and
mov
adc
gs
sti
dec
dec
xor
fmuls
test
push
and
sub
dec
adc
xor
aad
jbe
xor
int
adc
mov
sbb
mov
sbb
dec
jbe
test
pop
aad
or
outsb
cli
rep
push
push
jae
call
xchg
nop
in
push
mov
insl
fucomip
inc
daa
xlat
cmp
pop
int3
xor
and
or
bound
loopne
sbbb
or
add
jmp
cmp
pop
outsl
xor
dec
xchg
out
sbb
mov
lods
testl
push
jle
or
shrb
call
scas
mov
mov
cli
lods
fisubrl
cmp
xchg
stc
fdivl
jmp
scas
sub
push
adc
dec
rolb
mov
mov
movsb
xchg
adc
int
or
jle
xlat
sub
add
dec
shrl
rcrb
or
push
pop
icebp
cmp
inc
sbb
mov
push
mov
rol
sbb
cmp
dec
movsb
ret
push
cmp
pushl
jns
xchg
sub
mov
mov
gs
push
adc
sbb
jb
xor
decl
idivl
mov
inc
leave
adcl
push
movsb
ret
pop
or
inc
in
push
or
lahf
divb
sbb
insb
lret
inc
or
test
push
frstor
in
mov
fdivr
aas
xchg
inc
cwtl
mov
sub
std
decb
insb
ficompl
push
int3
push
jp
std
jge
jge
cs
insl
mov
adc
mov
jb
cltd
and
pop
jnp
mov
pushl
jmp
stc
adc
xchg
and
adc
int
jp
jo
push
in
pop
cmpsl
adc
lcall
sbb
mov
push
loop
lods
mov
sbb
inc
lea
dec
leave
xchg
shll
incl
rcll
cltd
nop
dec
loopne
mov
aaa
imul
adc
jne
cld
jp
add
xchg
jp
mov
jns
in
mov
push
mov
fsubl
out
inc
test
out
ret
pusha
adc
insl
cmp
repz
mov
out
in
incl
out
test
inc
cmpsl
jae
fstps
inc
mov
cld
ss
sahf
add
out
add
ja
and
sti
sub
sbbl
xor
xchg
insb
fimuls
mov
mov
incl
jp
pop
out
or
insl
sbb
xor
movsl
mov
divb
roll
lds
inc
push
mov
inc
pushf
jge
sbb
icebp
xchg
lods
inc
pushf
push
or
adc
push
pop
pop
xlat
push
insl
fwait
xor
rorb
jmp
lods
mov
leave
and
jg
sub
rol
cmp
jo
test
push
sub
lea
call
jecxz
dec
in
sub
jp
mov
push
xchg
adcb
ret
xor
xlat
cmp
mov
fcompl
ljmp
popf
mov
sbb
sub
or
leave
or
cli
ja
dec
popf
rorl
or
pushl
add
inc
cmpsl
nop
sar
cli
cmp
enter
dec
lret
insl
in
inc
idivl
mov
outsl
decl
dec
adc
int
testl
out
adc
enter
fsubrp
push
loop
pop
repz
out
stos
rcrl
je
out
hlt
icebp
stos
iret
add
roll
sbb
lcall
mov
cmp
lcall
fs
mov
jle
popa
sub
js
cmp
ja
lahf
fpatan
mov
lods
jne
or
gs
mov
adc
jl
push
jmp
dec
push
jecxz
xchg
push
mov
mov
repz
test
fnstcw
cmp
xor
imul
lcall
shrl
out
pop
and
and
out
flds
aam
call
pop
vpaddw
sar
inc
push
jbe
xchg
aaa
cmp
pop
xor
or
lcall
bound
les
imul
mov
push
dec
sti
ret
dec
sti
js
fdivrl
int3
add
cmp
test
aaa
push
jge
fsts
mov
or
push
mov
xchg
dec
and
pop
imul
pushl
sbb
mov
lahf
enter
pop
lea
pop
and
aas
lods
sbb
push
lcall
jl
mov
push
test
add
jbe
imul
shrb
sbb
sbb
incl
mov
icebp
fcoms
xchg
mov
pop
movl
repz
mov
pusha
sbb
sbb
add
pushf
sti
inc
jb
dec
and
loope
jno
pop
lcall
ret
es
mov
pushf
sbb
sub
sbb
pop
sbb
xchg
incl
add
cmc
out
fldenv
lret
jae
ss
or
pop
add
xor
ret
into
fucomp
rcr
in
inc
inc
or
arpl
loope
cmpsl
pushl
add
lds
add
test
inc
sub
in
adc
roll
jl
lock
lcall
add
push
jmp
data16
rorl
scas
xor
or
cld
inc
loope
xchg
sbb
sub
jmp
in
pop
jb
mov
cmp
scas
movsl
sti
in
rorb
push
and
mov
out
decl
aaa
xchg
popa
or
ds
jb
jnp
fcmovne
jns
lret
dec
in
loopne
inc
inc
push
inc
mov
lcall
loop
xchg
mov
xlat
jnp
xchg
adc
push
adc
mov
das
clc
out
jbe
dec
mov
xor
cmp
fwait
xchg
sbb
xchg
shlb
andb
mov
dec
je
mov
out
adc
xchg
mov
jne
or
cwtl
repz
mov
repz
mov
sbb
subl
or
xor
iret
cli
add
mov
dec
ja
fdivrs
mov
adc
inc
subl
mov
jg
pop
sub
jnp
and
outsb
je
dec
lea
fistpl
mov
add
enter
push
popf
xor
dec
add
dec
inc
scas
or
test
xchg
test
mov
push
sub
or
pushl
data16
insl
mov
adc
cmp
mov
mov
sbb
enter
jno
imul
pop
xchg
mov
fcmovne
stos
daa
test
pop
and
outsl
out
pusha
or
fcmovbe
adc
jp
cs
stos
roll
js
test
sub
cld
sti
hlt
push
test
popf
mov
scas
clc
decl
idiv
adc
hlt
shrb
xor
loopne
or
jp
push
mov
mov
outsl
adc
sahf
or
pop
ljmp
and
dec
cld
pop
jae
mov
call
inc
popf
daa
lcall
mov
lds
inc
pop
out
nop
mov
pop
mov
jmp
pop
jle
and
xchg
mov
les
jno
pop
xchg
xchg
jecxz
sub
ljmp
decl
xor
sub
xor
xor
iret
mov
sub
xor
out
xchg
push
pushl
push
and
inc
iret
repnz
push
lret
sbb
dec
inc
dec
fcompl
xchg
push
sub
push
fmull
movsl
stc
push
loope
call
ret
adc
mov
pop
mov
xlat
sbb
incl
fimuls
imul
pop
adc
pop
mov
bound
iret
add
lcall
insb
out
xchg
mov
mov
sbb
sahf
jno
hlt
mov
xchg
push
test
adc
decl
in
sbbb
xchg
xchg
push
xchg
lahf
lcall
lret
xlat
pop
xchg
sar
ljmp
insl
dec
mov
ss
push
xchg
std
mov
in
test
scas
je
xor
cmp
mov
push
imul
out
xor
pop
mov
cmpsb
inc
repz
call
add
shll
add
or
pushf
and
nop
mov
sar
call
dec
jle
dec
sbb
roll
outsb
jno
and
push
jge
sub
and
popa
incl
test
daa
cwtl
pusha
out
add
jecxz
add
sbb
dec
in
xchg
decl
into
in
aad
mov
jle
je
in
xchg
aas
pop
cli
jp
or
push
test
bound
adc
cld
sub
mov
and
test
and
jo
cmp
ds
mov
call
scas
shll
lock
cmp
xor
xchg
lret
inc
clc
push
cmp
mov
lods
jecxz
in
cmpsb
dec
scas
push
idivl
jecxz
cmp
into
add
pop
and
inc
jecxz
aam
jmp
mov
mov
mov
icebp
orl
pop
mov
inc
pushl
cmp
ljmp
or
jle
dec
xor
sub
orl
fidivl
or
shl
scas
fnstsw
push
or
cs
push
fcompl
dec
jns
mov
loopne
lcall
push
clc
out
jae
push
fnsave
mov
jnp
mov
or
aad
add
loopne
xor
lahf
lods
repnz
cmp
jmp
insb
int3
inc
adc
xor
jbe
gs
ja
add
push
rcl
xchg
out
mov
decl
mov
xchg
jecxz
push
sti
and
push
call
or
dec
pextrw
daa
arpl
fcoms
pushl
pop
out
push
jns
mov
xchg
xor
add
fcmovb
jp
xchg
mov
mov
incl
mov
or
in
outsl
hlt
out
hlt
popf
jns
pop
adc
hlt
cmpsl
fisubs
xchg
xchg
xchg
and
incl
popa
jecxz
mov
ret
mov
cmp
outsl
sbb
inc
mov
leave
imul
call
jno
in
pusha
lahf
lods
push
xchg
adc
inc
add
mov
sbb
push
fs
jle
mov
inc
jmp
stos
fs
xor
mov
pop
js
outsb
js
test
inc
push
loopne
mov
in
jb
gs
xor
jmp
cmpsl
inc
sbb
call
jge
push
inc
cmp
push
jb
sahf
or
stc
mov
decl
and
cltd
sar
aam
jge
push
jp
jl
xor
test
fcoml
pushl
dec
pop
dec
dec
mov
in
sbb
or
sub
or
stc
ljmp
lds
arpl
sub
jb
jb
cmp
sub
sahf
jo
dec
je
adc
xor
xchg
sbb
cli
jmp
popf
add
and
lret
adc
push
cmp
add
dec
cmp
xchg
mov
rol
jno
mov
mov
iret
cmp
inc
push
add
outsl
sbb
testl
call
inc
and
or
jmp
mov
call
and
icebp
sahf
jne
ja
pop
filds
xlat
dec
sub
cmp
adc
jmp
sar
pop
lahf
mov
insl
ret
lds
mov
sub
popa
call
ljmp
inc
ret
mov
cmc
inc
sbb
mov
mov
jnp
sub
push
jl
popf
mov
sahf
sub
rolb
xor
mov
mov
mov
fbstp
xor
cs
call
insl
adc
gs
push
mov
loope
xchg
aaa
popfw
jns
inc
push
insb
cmpsb
movsb
push
vmwrite
incl
sbb
mov
jo
or
jns
cmpsl
rorb
push
push
imul
adc
inc
xor
in
jne
xor
jo
dec
test
add
xor
xor
jmp
call
jle
mov
xchg
adc
repz
push
push
and
push
or
or
push
cmp
inc
icebp
pop
or
mov
aaa
sahf
jecxz
fsubrl
subl
movsb
xor
cmp
mov
mov
lret
in
outsl
pop
repnz
xor
or
rolb
gs
inc
mov
enter
mov
test
pop
aad
call
pushf
insl
pop
xor
fisttpl
sub
jb
mov
cmp
push
mov
leave
in
into
outsb
sub
mov
jge
call
xlat
sbb
das
mov
mov
jne
rcrl
shrl
pushf
pushl
sub
dec
lock
pop
pop
mov
aas
cmp
xor
cmp
rcrb
inc
ret
ljmp
xchg
test
std
add
cmp
ja
push
int
sti
push
pop
or
pop
lcall
add
push
inc
aam
push
dec
fidivrl
cld
jo
pop
push
nop
pop
test
and
decl
insb
mov
out
gs
out
outsl
jg
cmpsl
sahf
adc
lcall
ljmp
out
push
inc
sbb
jne
push
jns
imul
mov
adc
sub
mov
inc
mov
addr16
addr16
ljmp
sub
ficompl
aas
leave
sbb
clc
add
pop
je
loope
jecxz
lcall
mov
push
out
shll
sbb
daa
add
bound
add
or
jmp
es
jo
incl
adc
push
xor
push
dec
fstl
cmp
aam
mov
popa
aas
rorb
iret
mov
mov
mov
mov
pop
cltd
adcl
and
pushl
gs
jbe
sbb
jl
loop
lea
cmc
or
imul
popf
lock
incl
mov
arpl
fsubrl
mov
xor
int3
adc
push
cmpsl
mov
cltd
inc
xchg
pushf
mov
call
adc
js
pop
dec
lahf
mov
xchg
push
cmp
ljmp
cmpsb
shl
mov
add
icebp
insb
push
pop
or
das
sti
cmpsb
xor
inc
xchg
lsl
shlb
cmpsl
jl
jmp
dec
ss
sbb
sarl
mov
jge
test
push
dec
lea
ljmp
shl
stos
inc
ljmp
push
jge
xor
bound
mov
incl
mov
xchg
mov
movsl
cltd
add
fsubp
cmp
adc
dec
sub
push
mov
incl
and
test
mov
mov
lret
mov
mov
sahf
xchg
mov
lcall
dec
adc
cmp
mov
out
ljmp
pop
add
gs
decb
push
push
cmpsb
aad
lret
ficoml
cmp
inc
cmc
sub
add
sub
cld
negb
call
jge
xchg
cmp
mov
mov
shr
xor
in
je
lret
and
and
jp
fnstsw
out
xchg
pop
adc
and
pop
out
ljmp
lcall
pushl
int3
fsts
icebp
clc
xor
movsl
lods
in
lea
add
clc
add
ljmp
jbe
ljmp
lret
cmp
ret
xchg
push
fmuls
dec
icebp
xchg
dec
xlat
fdivrp
sbb
xor
aas
jge
insl
adc
popf
hlt
cmp
jo
lea
jl
lcall
lahf
outsb
in
gs
push
daa
and
nop
call
cmc
fdiv
flds
test
frstor
sti
leave
insl
and
es
daa
mov
mov
dec
nop
xorl
sbb
roll
mov
faddl
call
add
jmp
filds
in
incl
mov
outsl
arpl
mov
push
mov
scas
jl
scas
push
out
and
sti
mov
shl
push
adc
stos
mov
pop
out
les
jbe
je
inc
lcall
decl
add
scas
scas
fdivrs
ds
in
dec
jge
mov
push
addr16
jmp
pop
push
adc
insl
dec
or
jg
sub
in
movsb
pushl
xlat
mov
pushl
roll
pop
pop
push
dec
mov
dec
icebp
int
or
es
jecxz
or
push
push
inc
clc
dec
xor
cmp
push
pusha
pop
or
mov
hlt
jmp
xor
aas
hlt
jns
in
aas
fwait
lcall
movsb
dec
es
jp
mov
inc
scas
xchg
mov
dec
jmp
pop
fisubs
dec
fs
lcall
or
inc
pop
add
fsts
jmp
mov
xchg
stc
pop
loopne
mov
lea
stc
xor
jno
test
lcall
cmp
pop
dec
out
mov
mov
subl
jnp
dec
mov
mov
out
xor
cmp
sub
sbb
fists
loopne
stc
and
jmp
ja
mov
push
mulb
scas
mov
popf
test
fsubrl
das
mov
sub
jmp
mov
rcll
loopne
sbb
not
out
fsubl
add
out
js
int
ficompl
mov
and
sub
jbe
mov
fsubs
stos
call
jnp
xor
scas
aad
cmp
mov
xchg
xchg
inc
fldcw
jae
js
shl
dec
push
pop
imul
call
arpl
cmc
cmp
xchg
mov
pop
or
jge
int
lock
decl
mov
jne
sub
cmp
mov
iret
mov
pop
xor
inc
inc
cmc
adc
add
decl
fldenv
int
pushf
mov
xchg
mov
or
pushl
mov
jmp
pop
popf
mov
test
mov
xorl
incl
mov
xchg
xchg
lret
shl
movsb
mov
repz
adc
jnp
in
or
push
outsb
inc
repz
jp
ja
enter
mov
jo
ret
sub
pop
out
cs
lcall
jns
or
jb
fs
daa
push
and
fiadds
jbe
test
loope
jmp
xchg
inc
sbb
inc
rclb
cmp
sub
cmpsb
pop
shrl
nop
stc
in
icebp
lcall
inc
jmp
xchg
pushf
jbe
pusha
mov
mov
inc
xchg
stos
mov
decl
pop
pop
in
nop
nop
mov
ljmp
ds
call
or
or
int3
xchg
shl
xor
jge
insl
ljmp
in
call
jmp
and
out
dec
int3
leave
xchg
stc
push
jle
out
xor
cwtl
xor
mov
dec
add
out
dec
mov
lcall
adc
inc
add
mov
xchg
mov
push
mov
push
sub
movsl
pop
nop
mov
outsl
stos
call
mov
test
push
sti
cs
lret
push
xchg
xchg
sbb
cmp
leave
push
call
mov
rorl
or
mov
stos
and
mov
imul
lcall
shlb
xchg
hlt
clc
and
and
pop
mov
jne
decl
ds
add
popf
mov
pop
xor
mov
aaa
cmp
ret
push
idivb
xor
lcall
pop
fs
xor
test
jne
movsl
jp
xchg
cmp
cmp
mov
jo
subb
call
xor
int
jecxz
imul
adc
adc
adc
movsl
sbb
jge
rcrb
pushl
outsb
cmp
mov
sbb
add
add
pop
fisubrs
sti
push
daa
in
add
aad
sub
stc
xchg
mov
mov
cs
cmc
addr16
incl
aam
insb
loope
mov
loopne
outsb
or
xchg
or
cmp
pop
fadds
out
xchg
and
dec
ja
arpl
bound
pop
scas
mov
ficomps
testl
pop
das
xchg
popf
sub
in
or
stc
ljmp
mov
xor
addps
out
mov
repnz
mov
fs
inc
cli
sahf
or
es
decl
xchg
repz
xrelease
dec
xor
and
pop
xchg
add
call
sub
jl
cmp
mov
jbe
and
repnz
mov
cmpb
sti
jbe
xor
in
sub
stos
lods
mov
fsubrp
call
cld
add
jg
ljmp
rcrb
xchg
outsb
push
add
add
movsl
stc
pusha
out
sub
inc
shll
scas
cmp
call
add
cs
push
js
push
scas
inc
pop
mov
push
xchg
out
cwtl
lock
ffreep
jmp
ljmp
mov
push
lods
push
int
call
inc
lcall
xor
fcomps
movsb
pop
sub
dec
fcoml
lret
push
mov
mov
jmp
jecxz
add
push
loop
dec
daa
inc
pop
jns
ljmp
cmp
ud0
call
test
stos
cmp
stos
pop
fstpl
cs
ds
cld
mov
pushl
pushl
add
aad
rorb
jne
inc
ds
add
pop
in
mov
inc
inc
or
call
es
call
push
mov
push
sbb
mov
xor
int
daa
and
mov
jge
lret
incl
dec
rclb
pop
mov
insl
cmp
mov
lods
mov
pusha
fidivrl
fidivl
sub
jo
mov
in
or
lock
xchg
pop
in
jp
jns
sarl
daa
and
lret
mov
push
push
outsb
xchg
cltd
addr16
sbb
cmc
popa
repnz
push
and
pop
xchg
inc
popa
mov
adc
mov
cmp
push
mov
inc
sub
xor
pushl
cmp
cmp
dec
fiaddl
dec
aam
sbb
rclb
repz
adc
lcall
pusha
arpl
mov
addb
ret
jns
mov
data16
sbb
lret
or
cmp
sub
pop
sysexit
test
je
fdivr
popw
out
mov
push
push
or
mov
loope
aas
lea
out
xlat
shlb
xor
sbb
mov
mov
lcall
mov
test
adc
jns
add
push
insb
jmp
xchg
popf
stos
loop
inc
adc
ss
test
push
ss
or
out
or
das
or
call
inc
jns
lret
mov
mov
inc
mov
inc
xchg
outsb
jne
iret
jb
adc
adc
ds
pop
mov
repz
jns
pop
push
out
imul
out
in
cli
pop
dec
mov
das
lret
out
push
sbb
mov
mov
push
repnz
fidivl
dec
aas
cli
push
mov
sar
inc
shrl
in
jl
xchg
fdivrs
popa
rorl
leave
incl
in
fdivs
sub
insb
notl
mov
je
ffreep
xor
ss
pushl
adc
cmp
push
dec
dec
movsl
leave
hlt
dec
imul
mov
push
imul
lahf
add
fcomi
jno
cmp
dec
cmpsb
cmp
push
inc
mov
pop
sbb
cmp
push
add
jmp
loop
xchg
shll
scas
not
imul
mov
cmp
xorb
jnp
or
incl
add
push
inc
mov
xchg
adc
mov
or
pop
pop
.byte
sub
int
test
add
mov
pushf
adc
insb
ss
or
mov
adc
sti
jne
fisttps
and
dec
push
paddusb
mov
scas
es
xor
push
adc
xor
std
mov
inc
sub
push
int3
and
pop
cmpb
sub
jl
add
incl
in
or
add
push
jnp
ljmp
call
mov
push
mov
push
call
pop
ret
das
sbb
mov
push
inc
add
movl
xchg
data16
inc
xor
out
xchg
in
or
in
aas
mov
shl
imul
mov
out
sbb
jl
out
and
sbbb
mov
or
mov
adcl
adc
sti
add
mov
xor
ds
xchg
fdiv
inc
mulb
ss
addr16
xchg
pop
xor
pop
les
nop
cld
sub
pop
roll
xchg
inc
stos
ficomps
pop
inc
push
xor
lcall
and
mov
mov
xchg
or
mov
cld
or
mov
outsl
push
and
push
push
rclb
jle
push
stos
xchg
inc
leave
dec
enter
dec
xor
dec
call
xchg
and
push
mov
push
dec
xchg
or
push
out
and
fs
jle
inc
movsl
or
and
cmc
push
sahf
mov
xchg
movsl
push
jp
es
push
pop
mov
xchg
xchg
movsb
loope
stc
push
xor
scas
xchg
or
xchg
push
shlb
stos
push
fs
jle
xor
push
das
push
and
loope
ret
pop
sub
xchg
pop
rolb
cmp
clc
mov
push
jnp
xor
nop
std
ss
int3
aas
xor
add
dec
xchg
rcrb
cld
jecxz
push
xor
incb
fmul
xchg
and
jo
clc
xlat
dec
jle
or
arpl
fs
sbb
repnz
sub
dec
xchg
inc
mov
push
xor
fs
iret
cs
xchg
and
es
ss
pop
pusha
addr16
or
scas
popa
cs
push
in
inc
fsts
mov
sahf
lret
xor
enter
fs
stos
or
sbb
in
leavew
nop
cld
sub
dec
xchg
inc
in
mov
push
stos
int3
rcrb
xchg
and
cmpsb
cltd
dec
into
push
fidivrl
or
mov
imul
sbb
mov
mov
and
sub
outsb
xor
loop
addr16
cld
sub
outsl
xor
in
leave
jo
aas
xchg
or
and
dec
xor
jb,pt
and
push
pushf
xor
pop
jae
or
mov
test
je
jbe
jge
pop
cwtl
jae
xor
sbb
xor
pop
or
push
mov
push
movl
add
test
je
mov
push
call
add
cmp
je
mov
add
mov
mov
add
sbb
shr
adc
jge
add
inc
cld
push
sub
rolb
jmp
jmp
xor
in
mov
in
or
inc
adc
clc
popa
add
push
leave
je
push
add
mov
mov
mov
hlt
push
dec
push
dec
or
dec
clc
mov
mov
jl
sti
push
clc
cmpl
jmp
mov
add
movb
imul
scas
jnp
outsl
push
push
insl
push
in
fnstcw
and
cmp
dec
cld
and
aas
sub
call
call
add
push
push
js
inc
clc
push
fst
push
cld
mov
push
mov
push
mov
push
call
movl
decl
add
or
shl
jne
cmp
jae
mov
imul
add
imull
pusha
add
push
cltd
sti
outsb
dec
clc
push
cld
push
call
cmpsw
mov
add
push
movl
insl
push
shrl
aam
adc
pop
cmp
or
test
mov
je
les
lea
push
aam
clc
xor
and
xor
xchg
jg
dec
cld
mov
lea
mov
std
fistpl
cmp
test
jmp
mov
addr16
and
shll
fidivl
push
call
push
or
jo
ret
das
sub
pop
add
push
andb
fs
cld
push
inc
push
inc
test
cmpsl
or
subl
or
das
push
sub
xor
lea
jb
lea
nop
jb
fs
movl
push
jne
lea
faddl
push
mov
bound
and
sbb
cmp
call
adc
or
push
hlt
jge
mov
sti
inc
or
test
enter
mov
mov
push
call
push
lea
test
sti
jnp
mov
adc
jmp
test
sti
fcomi
mov
add
xchg
add
inc
add
les
call
insl
clc
sti
in
or
or
xchg
ja
ja
add
mov
adc
test
push
push
sub
gs
faddl
push
sbb
popa
addr16
or
pop
lea
push
mov
dec
mov
test
xchg
ret
std
gs
std
fwait
lea
push
das
inc
hlt
add
mov
jmp
sbbl
push
mov
dec
fwait
bound
ret
inc
into
push
outsl
fmuls
add
xchg
sub
xchg
testl
movnti
add
add
ds
push
adc
jnp
add
aaa
sbb
or
sbb
int3
jp
call
jnp
nop
sbb
in
aas
and
pop
and
mov
ljmp
push
inc
or
dec
fwait
push
or
fucomi
repnz
sbb
jo
int3
ret
or
cwtl
pop
fs
filds
test
mov
fcompl
push
std
sbb
call
push
lea
gs
push
loopne
jl
outsl
push
mov
pop
xchg
inc
jmp
jbe
divl
or
push
add
dec
clc
mov
dec
mov
push
or
or
ffreep
fcom
dec
add
push
test
out
decl
xchg
adc
xchg
mov
dec
xor
inc
pop
into
je
mov
ss
sbb
sbb
mov
inc
or
push
and
sbb
or
data16
stos
mov
sbb
scas
xchg
dec
sub
adc
sbb
cmovg
lea
cmp
rol
bound
iret
rorb
les
adc
jae
outsb
mov
mov
push
aas
cmp
push
push
lcall
jle
or
and
cmp
adc
xchg
jae
push
divw
movl
jmp
mov
call
mov
push
cmp
xchg
je
inc
fadds
je
lea
shrb
rorb
mov
pop
mov
test
lds
sbb
push
sti
das
fsubs
add
mov
test
cmp
es
inc
lds
pop
fs
mov
jecxz
push
pop
repz
and
mov
push
fwait
inc
sbb
push
lea
sbb
lock
push
fsubr
inc
cld
dec
or
or
int
in
je
ret
loope
adc
pop
fwait
sahf
mov
add
loopne
loope
xchg
insb
sti
incl
inc
out
js
mov
add
js
inc
mov
call
xor
out
fwait
outsb
cli
ret
pop
sub
outsl
mov
push
dec
dec
aam
call
lea
cmp
fisttpll
dec
bound
mov
fmull
movsb
decl
in
inc
fmuls
fcoml
mov
ficoml
mov
inc
mov
inc
aaa
jne
mov
push
or
inc
ljmp
dec
mov
repz
in
or
add
pop
aas
fcmovb
or
push
lret
or
cmp
adc
pop
mov
xor
lock
popl
out
bound
out
aas
push
add
pop
ret
and
mov
jno
lahf
sub
loope
lcall
std
add
mov
cmpl
je
mov
push
adc
clc
and
je
pushl
dec
test
out
jmp
mov
shl
mov
mov
and
and
fdivr
push
or
push
adc
push
or
dec
pop
cld
shlb
add
or
incl
dec
fs
clc
cmpl
jae
ja
loop
xchg
xor
jl
cld
subb
push
mov
push
iret
jns
icebp
xor
pop
add
sbb
mov
arpl
inc
mov
dec
loope
push
push
das
push
incl
addr16
cld
mov
inc
push
sbb
dec
negb
dec
hlt
jae
sub
sar
lcall
mov
ja
out
outsb
cmp
loopne
xchg
and
shl
or
xchg
and
std
and
sti
shl
or
adc
mov
aas
repnz
xor
shl
sbb
and
shl
outsb
ljmp
inc
shl
sbb
sub
ss
jmp
jno
and
xchg
adc
inc
adc
and
lret
xchg
call
inc
add
add
enter
jmp
push
and
rclb
mov
and
or
mov
dec
xchg
mov
inc
in
shl
or
and
pop
sbb
sahf
mov
inc
hlt
inc
mov
pop
mov
ljmp
and
lock
or
aaa
jb
mov
push
or
cmp
and
flds
add
sbb
jb
aaa
add
cmp
in
shr
mov
shl
or
inc
nop
mov
jg
inc
push
or
lcall
cs
mov
mov
add
inc
clc
xor
dec
xchg
jmp
xchg
and
xor
add
dec
fstps
mov
ja
jmp
cmp
call
or
cmp
cmc
xor
or
data16
stos
inc
clc
or
insl
js
dec
adc
add
or
movzbl
mov
shr
movzbl
and
mov
add
mov
xor
enter
mov
mov
fmuls
and
xor
or
outsl
dec
clc
jbe
call
jae
ljmp
pop
out
xchg
and
in
rcrb
adc
movsl
xchg
dec
add
dec
add
call
cmpl
jne
jb
dec
cmpsb
negl
movl
lds
fcomip
or
add
mov
mov
fcompl
or
inc
adc
inc
aam
jg
inc
adc
dec
les
inc
enter
aaa
lock
in
adc
aas
sbb
lcall
xor
lcall
xlat
sbb
mov
mov
enter
mov
add
idiv
fmull
int3
cmp
sbb
neg
add
add
sbb
mulb
daa
xchg
call
bound
dec
in
andb
add
ljmp
xchg
mov
cld
mov
pusha
and
push
fsubl
dec
ljmp
push
fmuls
fistpl
mov
mov
mov
fldl
rorb
push
int3
push
lea
push
add
clc
or
dec
hlt
add
push
enter
decl
or
daa
pop
push
fiadds
mov
iret
or
add
jecxz
xchg
rorb
loopne
or
or
lock
ret
dec
xchg
mov
popf
adc
out
push
cmp
sbb
neg
mov
xchg
jl
add
cmpsb
jae
jmp
sub
xchg
add
out
push
sbb
test
sub
jo
jnp
cmp
and
cmpsb
fisttpll
pop
sub
hlt
sub
out
push
push
or
sub
mov
inc
in
sbb
neg
mov
fs
fdivrl
inc
sub
or
lea
mov
xor
adc
mov
mov
pusha
clc
leave
int3
jo
ja
adc
jae
out
dec
sbb
mov
inc
adc
lea
jecxz
ret
and
jl
repz
fmuls
fcoml
lock
sahf
iret
adc
js
pop
cltd
jmp
xor
scas
xor
scas
scas
shll
clc
testl
clc
sub
popa
add
clc
js
add
js
insl
popa
push
fisubs
xor
scas
xlat
xor
ja
adc
sbb
loope
jns
dec
clc
js
mov
and
adc
leave
inc
scas
add
jp
out
lret
adc
shlb
lock
cmc
cltd
adcl
sub
xor
enter
int3
jno
inc
scas
call
xchg
scas
in
adc
pop
loopne
jns
inc
icebp
fdivrs
jo
inc
fcoml
enter
rcrb
scas
xlat
xor
ja
adc
sbb
clc
push
shl
sub
and
adc
out
add
and
xor
js
pop
sbb
or
push
sbb
adc
jmp
cltd
scas
movsb
xor
xor
popa
js
adc
fcoml
inc
xchg
adc
enter
scas
sbb
js
dec
fs
js
icebp
sbb
sbb
jl
jbe
push
pusha
jmp
jo
dec
je
inc
xchg
pop
or
xor
sub
push
pusha
xor
mov
pop
jb
pop
dec
pop
lcall
add
pop
movb
mov
and
mov
clc
sbbl
add
lret
popa
dec
lds
adc
xor
mov
nop
sub
inc
sub
rorl
loope
pusha
mov
add
sbb
mov
in
push
dec
adc
xor
icebp
inc
rcrb
sbb
sbb
clc
stos
xchg
dec
add
dec
or
mov
ljmp
mov
loopne
cld
mov
scas
push
lock
ss
test
sbb
mov
pusha
fistpll
push
and
movups
push
int3
mov
lret
add
iret
push
push
mov
adc
mov
add
cmp
jbe
cmp
aas
mov
jb
xor
hlt
dec
inc
add
je
mov
push
and
and
cmp
pop
pop
jne
pop
pop
pop
push
cmp
mov
jmp
cmp
jb
rep
jmp
nop
mov
mov
sbb
or
loopne
add
jmp
jmp
out
jmp
in
or
rorl
decl
mov
mov
push
mov
add
add
int3
pop
dec
mulb
add
mov
add
andl
add
in
add
sbb
js
dec
shll
push
mov
inc
mov
mov
pop
call
cmpsb
in
in
lock
lock
imul
out
cmp
fistps
add
lock
push
mov
hlt
lods
push
fidivs
mov
pop
pop
leave
ret
nop
icebp
pop
mov
rorb
adc
pop
adc
push
sbb
push
loope
nop
lea
lea
test
sbb
fstpl
movsl
cld
ja
inc
inc
add
loopne
out
adc
inc
add
stc
sub
mov
nop
inc
or
nop
inc
inc
clc
fisttps
mov
sub
out
mov
ret
pop
rcrb
cltd
jle
lock
pushf
sub
sub
mov
pushf
or
nop
daa
and
sub
push
out
add
push
pushl
pop
pop
shll
sub
hlt
cld
add
or
push
shll
daa
imul
lcall
adc
cmpsb
imul
adc
mov
inc
dec
or
add
arpl
cwtl
shll
pop
xor
in
lds
rcrl
mov
add
fadds
inc
dec
xor
fadds
ret
or
loopne
adc
xchg
call
add
fsubrp
sbb
jle
pushl
or
push
sub
aaa
aad
inc
cmpw
jne
mov
inc
add
sti
mov
jne
cmpw
cmpl
xor
cmp
fisttpll
rorl
push
push
dec
push
sub
cld
add
adc
movl
jg
in
push
push
mov
sbb
test
jne
push
jmp
mov
cmp
mov
push
call
add
xor
testb
nopl
loopne
inc
lahf
in
incl
inc
fmull
fmuls
jg
add
mov
cmp
inc
cld
incb
je
or
shl
mov
add
lock
ret
mov
or
fnsave
and
cmp
xor
inc
push
or
push
pop
jg
push
or
sti
xor
adc
adc
mov
or
jge
into
mov
or
fistps
adc
in
sbb
lock
ja
enter
mov
cmp
or
xor
out
adc
sbb
lock
lcall
pop
mov
dec
shr
push
pop
push
push
push
push
stos
sbb
outsl
mov
cmpl
jne
xor
xchg
adc
popa
pop
cld
pushl
in
mov
mov
mov
push
lock
imul
jae
mov
inc
aam
mov
std
jnp
xor
inc
ret
sub
mov
and
ret
sub
cmpb
or
sub
mov
mov
in
jmp
call
shr
jmp
lea
outsl
push
add
add
scas
sti
int
and
movdqa
add
jg
jg
jbe
fwait
pop
outsl
inc
sbb
push
add
pusha
jle
cmc
int
xlat
and
jg
jg
jg
jo
mov
jbe
jle
lea
mov
cld
push
decb
mov
orl
mov
cmp
fwait
and
and
push
cltd
mov
xor
sub
gs
lcall
xlat
jne
mov
mov
and
mov
cmp
je
sub
push
push
pop
in
cmp
mov
call
test
je
mov
roll
sar
in
add
ja
ljmp
in
mov
mov
rep
data16
cmp
jne
neg
add
cmp
sbb
add
pop
jle
lock
in
push
xchg
mov
cli
mov
popa
jmp
sub
mov
mov
movsl
mov
add
jge
cld
loop
andl
inc
push
push
mov
loop
hlt
neg
sbb
and
lcall
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
jg
push
cmp
inc
cltd
or
xor
ret
fwait
clc
add
push
hlt
mov
mov
add
out
pushl
ja
loop
mov
call
rol
sub
mov
idivl
je
push
sti
stos
jae
clts
pusha
call
ret
push
dec
cmp
fstp
add
call
cli
pop
lds
or
std
aas
push
aad
ret
push
mov
jmp
mov
cmp
pop
movb
and
jb
dec
out
fsubr
pop
pop
or
shr
jo
mov
xchg
idiv
pop
jnp
call
sbbl
jb
pop
ret
mov
push
xor
cmp
jne
gs
icebp
ja
lods
push
add
add
orl
push
pop
pop
or
call
ret
mov
fimull
cmp
ss
cmp
je
mov
pop
mov
cmp
pop
and
mov
and
cmp
pusha
add
adc
inc
add
jg
and
cmpl
aaa
jecxz
js
xchg
test
pop
je
add
ja
fstpl
pop
mov
and
inc
add
mov
cmp
and
inc
jg
jne
push
push
push
pop
sahf
mov
mov
mov
cmp
incb
mov
jb
cmpl
sbb
dec
mov
or
add
sbb
mov
jo
iret
push
push
sub
pop
cmp
jl
mov
out
cmp
mov
adc
jne
add
negl
xor
ja
pushl
lcall
pop
pop
mov
mov
cmp
je
sub
or
jne
jb
cmpl
jg
sti
add
xor
clc
je
push
or
call
jmp
push
inc
jbe
in
mov
push
pop
push
mov
push
aas
jl
jge
add
mov
lods
and
jne
cmp
mov
add
jle
je
sbb
popf
lock
inc
ds
sahf
jbe
pop
rclb
add
adc
sub
push
add
cs
dec
outsb
mov
pop
pop
add
jg
lahf
iret
gs
or
inc
cmp
push
test
dec
add
pop
out
lcall
add
jne
pushl
pushl
pushl
pushl
scas
mov
ret
push
push
mov
push
push
xor
xor
cmp
aaa
cld
je
inc
cmp
sar
pop
jae
add
neg
popf
push
cmp
pop
je
push
or
add
test
cmp
mov
push
mov
scas
loope
mov
inc
adc
or
mov
push
pop
mov
add
adc
sti
mov
es
add
add
push
das
out
pop
rdpmc
rclb
inc
sbb
decl
ljmp
inc
cmp
pop
jbe
imul
or
push
les
push
pop
push
mull
in
adc
testb
shlb
stos
push
mov
xor
sbb
and
cmp
pop
push
inc
inc
iretw
mov
hlt
call
cmp
je
cmp
je
push
lea
push
mov
push
pushl
enter
push
pushl
push
call
or
pusha
call
pop
cmp
fisttpll
fists
jb
inc
mov
cmpb
je
or
pop
mov
loope
jne
push
or
mov
or
push
ffreep
cmp
je
mov
imul
add
add
cmp
jb
imul
add
or
std
or
shll
add
push
push
testl
inc
in
push
pop
mov
rclb
push
cmp
je
mov
imul
add
add
cmp
jb
or
rorb
cmp
jae
cmp
jne
mov
sarb
lds
test
daa
jne
xor
movb
sti
add
jne
andl
repnz
dec
jno
aas
mov
xor
or
dec
pusha
mov
cmpl
jne
dec
mov
roll
xor
mov
jge
mov
jle
andl
mov
jl
inc
add
nop
cmp
jl
mov
add
mov
xor
fdivrp
jne
movl
cmp
xchg
sbb
dec
cmp
xchg
test
iret
and
cs
ja
repz
push
cmp
ud0
push
call
pop
mov
jmp
in
call
mov
pop
mov
or
pop
pop
pop
leave
mov
mov
or
add
daa
js
lods
pop
outsl
sahf
cmp
lret
mov
test
mov
cmp
ja
mov
test
cmp
jne
xor
test
sete
mov
movzbl
repnz
jecxz
push
adc
add
jmp
sub
inc
mov
test
jne
pop
mov
cmpsl
xchg
std
pop
ret
push
xor
cmp
push
clc
sbb
pop
psllq
popf
mov
cmp
je
inc
add
fbstp
mov
mov
cmp
jne
push
inc
pop
mov
out
clc
cmp
pop
pop
mov
mov
icebp
pushl
inc
cmpb
pop
je
push
push
mov
cmp
out
and
dec
push
push
fwait
rorl
inc
jb
iret
add
add
cmp
jne
decl
jg
push
je
mov
add
fimuls
sub
ret
pushl
mov
or
adc
push
mov
push
xor
cmp
push
mov
mov
push
ffreep
add
or
or
adc
and
and
std
mov
sete
inc
adc
cmp
pop
test
je
mov
mov
inc
mov
mov
movzbl
cmpsl
loopne
fcoml
insb
push
adc
pop
mov
or
incl
mov
inc
test
pop
jo
xor
out
lcall
sti
and
sti
or
dec
add
inc
incl
jg
cld
push
xchg
cmpb
je
add
or
push
inc
jmp
dec
jmp
sbb
add
lea
incl
jne
sti
mov
inc
inc
cmpb
je
lods
es
jne
data16
faddl
cmpb
data16
xor
fadds
out
mov
in
ret
shr
mov
dec
jl
pop
inc
sar
mov
icebp
lret
pop
je
cmp
or
je
cmp
je
jae
idiv
test
je
test
movsbl
push
je
in
mov
xchg
sbb
or
jmp
and
lock
jecxz
inc
incl
sbb
inc
xor
imul
add
pushl
out
xor
leave
test
pop
pop
je
andl
incl
push
sub
xchg
xchg
sub
adcb
clc
aaa
jo
mov
cmp
inc
add
out
lock
mov
xor
sbb
jne
mov
testl
push
push
push
lea
xchg
inc
es
filds
aas
jae
mov
cmp
jae
mov
shl
lea
shll
jne
mov
cmp
pop
je
ds
mov
in
push
push
inc
dec
mov
lock
std
add
leave
ret
push
push
mov
ja
push
push
push
push
mov
cld
jg
jg
ret
push
pop
jne
call
push
je
movl
fstl
js
or
add
sbb
repz
cmp
incl
cmp
mov
je
add
cmp
jne
push
repnz
lcall
sub
push
sar
inc
push
push
push
push
mov
cmp
cmp
je
popa
cmpsl
adc
je
push
push
push
pop
push
mov
and
or
mov
pop
mov
cld
adc
adc
out
push
mov
jmp
cmp
je
cmp
jne
call
sti
fistpll
test
cmp
je
inc
cmp
jne
add
sub
inc
mov
addr16
xor
jne
inc
or
loop
and
subb
clc
adcl
pop
pop
pop
pop
jae
push
push
xchg
hlt
lea
test
xlat
pop
push
xchg
push
push
pop
xor
cmp
ud0
ffreep
test
mov
mov
add
add
jmp
mov
inc
add
orl
movb
mov
movb
movb
movb
cmp
fcomip
jle
inc
xor
add
mov
lock
cmp
aaa
sarl
mov
pop
dec
mov
std
cmp
pop
add
add
push
mov
mov
movl
es
pop
int
mov
mov
std
std
sti
dec
loopne
or
push
mov
addl
jmp
xchg
psubq
add
andb
xchg
andl
lahf
mov
add
cmp
jb
incl
cmp
jg
jmp
mov
andl
test
jle
mov
mov
lods
je
popf
loope
incl
mov
test
je
test
jne
push
call
mov
loopne
mov
add
out
add
push
mov
jmp
jecxz
mov
push
lea
in
xchg
pop
pop
test
je
mov
jp
addl
cmp
jl
xor
mov
inc
xor
inc
push
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
ret
cld
pop
jmp
mov
dec
call
leave
jbe
int3
clc
cmp
je
jae
push
fwait
idiv
lock
ds
jne
inc
jmp
cmp
jne
push
fsubr
pop
pop
or
or
movl
xchg
inc
cmp
jl
test
and
jns
push
cmpsb
or
and
push
loope
in
push
push
mov
lea
sti
pop
testl
mov
add
add
std
cmp
jb
imul
add
movb
jle
jg
jl
pop
pop
ret
push
push
mov
mov
lock
sahf
movsl
lods
out
in
fucomip
loopne
inc
push
xor
lea
inc
xor
sbb
inc
mov
scas
cmp
pushl
sar
add
jmp
push
push
call
add
cmp
movzwl
loop
inc
adc
jl
sbb
push
push
in
jmp
out
outsb
mov
je
sbb
inc
add
cmp
jb
jmp
andl
das
ds
mov
xor
out
mov
out
mov
sbb
lret
sbb
out
js
call
call
sbb
mov
push
inc
shll
out
xchg
addr16
add
mov
or
inc
xlat
pop
sub
or
pop
ret
push
adc
scas
mov
add
jbe
fstl
leave
push
and
adc
push
imul
lock
cmp
adc
xchg
call
in
sbb
jne
pushl
ja
mov
mov
jnp
push
call
mov
fs
pushl
ret
push
sysret
lods
jns
push
push
sbb
jne
xchg
cmp
orl
call
push
push
std
pop
add
jne
movl
subb
inc
mov
jo
pushf
jns
loope
pushl
mov
xchg
lock
jo
xchg
inc
movb
hlt
inc
add
jmp
push
push
pop
pop
mov
mov
faddp
inc
insb
repz
pushl
outsl
js
pop
xor
inc
adc
cmovl
stos
cmp
mov
mov
push
dec
or
rclb
push
mov
adc
lock
pop
pop
je
fsubrs
inc
ficompl
push
out
incb
scas
dec
xchg
pop
pop
call
add
mov
jmp
shlb
cmp
jle
imulb
pop
pop
pop
jl
out
mov
jne
push
cmp
or
pop
pop
push
push
testb
and
test
mov
bound
jbe
inc
sub
cmpxchg
sbb
or
dec
pop
cmp
lock
dec
jle
pusha
fsubl
sbb
jp
pop
ret
cmpsl
add
dec
jmp
jne
jo
cmp
mov
cmp
sti
decl
ljmp
jns
pop
cmp
call
or
aas
add
ja
and
adcb
cmp
push
imul
cld
adc
ja
or
or
loope
je
push
mov
test
jne
nop
lea
pop
adc
cmp
xor
push
adc
mov
dec
fistps
or
pop
xor
mov
and
call
jecxz
mov
mov
je
dec
push
xor
pop
ret
push
mov
hlt
push
push
inc
and
sub
or
xchg
or
aas
jge
jge
cmpl
mov
mov
out
mov
or
je
jbe
mov
mulb
add
cmpsb
pop
mov
and
xchg
jecxz
mov
xor
push
jnp
jo
and
test
pushl
sahf
mov
pmaxub
in
lds
setbe
jae
push
aaa
inc
gs
jecxz
inc
inc
push
insl
add
rolb
xor
add
cmp
aam
mov
add
pop
insl
addr16
pop
xchg
sbbl
popa
xor
pusha
inc
je
xor
sbb
das
je
jne
adc
sbb
decl
inc
lea
pop
jne
cmpl
jb
pop
leave
ja
pop
std
ret
push
pop
leave
ret
incl
push
cmp
adc
lock
test
mov
xor
xchg
mov
jmp
stc
fsubs
pop
cld
jne
push
mov
adc
idivl
xor
jmp
pop
ret
push
xor
cmpl
add
push
mov
cmp
and
in
cmp
and
add
push
or
add
pushl
inc
adc
sti
iret
push
roll
cmp
pushl
mov
rcrl
or
sub
pop
ret
mov
arpl
pushl
add
out
jle
lret
adc
add
loopne
push
push
mov
outsl
and
inc
cld
xor
push
mov
pushl
mov
mov
mov
lea
mov
dec
lock
mov
mov
mov
pop
push
aas
hlt
sub
cmp
aaa
cld
add
into
xor
je
lret
or
inc
or
lds
lret
sub
out
loop
aaa
jle
push
push
mov
xor
inc
inc
jg
cld
and
add
inc
and
add
mov
add
xor
incl
in
iret
push
dec
or
inc
or
inc
and
testb
jne
pop
outsl
mov
cmp
mov
lea
mov
decl
mov
je
lea
mov
test
lea
mov
sbb
je
imul
fisttpll
test
jbe
jl
jg
and
xchg
lds
mov
jne
cmpb
xchg
xchg
mov
add
ret
mov
mov
out
mov
cmpl
fildll
out
add
dec
pop
jne
pop
add
je
mov
cmc
and
push
push
call
sub
out
adc
outsb
cltd
decb
je
push
pop
xchg
sub
into
lcall
add
mov
fwait
push
and
cs
fcomip
push
xchg
mov
sbbb
je
jae
push
lret
mov
adc
xchg
push
addr16
mov
dec
push
push
mov
cmp
cmp
or
not
mov
sub
mov
jmp
jne
xor
call
fwait
shll
testb
cmova
out
cmp
pop
or
lock
cmp
jne
mov
jecxz
cli
or
loopne
or
mov
not
mov
pusha
pop
pop
pop
xchg
or
mov
call
movl
pop
dec
cmpsl
idiv
add
add
je
cmp
mov
sbb
gs
mov
and
sarl
test
jecxz
xor
push
mov
mov
outsl
cli
sbb
pop
mov
sbb
pushf
pop
sub
je
push
popf
pop
cmp
xor
cpuid
sbb
in
mov
push
aas
adc
jne
push
xor
pop
imull
pop
push
jbe
push
out
inc
ficoms
adc
mov
lods
or
sarb
addb
call
jmp
cmpsl
mov
and
jl
jmp
rcrb
xor
pop
mov
and
shll
ss
cmc
out
dec
mov
idivb
cmc
lods
push
aaa
add
lea
cmpsb
pushl
fdivrl
out
add
pop
gs
rcrl
or
cmp
jl
stos
aad
fsubrs
add
lret
push
mov
adc
jle
add
call
dec
push
dec
repnz
add
pop
inc
or
pop
ds
cmc
jne
push
call
pop
out
pop
fistl
cld
std
mov
pushl
xor
ja
mov
mov
jo
std
popf
cli
inc
cmp
sub
jo
jecxz
push
sub
div
aas
pop
jge
xor
cmp
ljmp
sub
mov
pop
inc
rcr
fmuls
je
mov
jmp
push
jne
pop
cltd
and
shrl
lods
movl
ret
push
push
inc
rorb
jne
and
adcb
pop
jne
or
xor
or
mov
pop
mov
mov
les
cmp
iret
lock
jne
mov
sbb
jge
pushl
call
aas
push
mov
inc
add
push
lea
sub
push
xorb
add
add
test
les
lea
xchg
ja
out
mov
pop
jl
jne
mov
data16
pushl
add
data16
data16
data16
data16
pushf
popl
xor
test
ja
sbb
inc
fadds
add
add
inc
cld
push
mov
out
lea
sub
or
rorb
subb
mov
mov
call
mov
cs
xlat
or
push
adcb
mov
test
call
push
sbb
out
outsl
xlat
and
mov
and
xchg
aad
lock
leave
repnz
dec
ja
and
or
lock
pop
pop
sbb
push
loop
fcos
xor
and
sbbb
arpl
pusha
mov
loopne
jge
rdpmc
add
pop
xor
aas
jle
js
xor
cmp
cmp
jb
lea
ja
in
cmp
ja
push
pop
ret
mov
inc
arpl
clc
jg
push
pop
cmp
sbb
and
add
xor
push
in
push
mov
push
mov
adc
ret
push
ffree
clc
pop
mov
push
fs
jbe
jno
fcomps
mov
pop
inc
add
or
or
sbb
negl
sub
jp
loope
pushl
xor
cmp
jne
sbb
fcompl
push
inc
ja
sub
mov
leave
into
add
or
inc
sbbl
outsb
inc
mov
lret
cwtl
outsl
cli
hlt
arpl
and
dec
ja
pop
pop
ud0
decl
sub
lea
cmp
jb
loopne
mov
cmp
pop
mov
mov
xchg
lock
mov
add
cmp
jb
mov
adc
jbe
cwtl
pop
jne
lea
push
inc
lock
incl
xor
sti
add
cmp
sub
mov
sbb
pop
add
sbb
mov
pop
jo
adc
cltd
popf
pop
ret
push
push
push
cmp
jp
ret
mov
jg
cli
inc
inc
mov
sbb
ret
andl
pop
adc
or
cmp
mov
jmp
jp
mov
fistpl
mov
and
inc
mov
pop
cmp
fcomps
js
lea
cmp
ljmp
pop
mov
jb
xchg
xor
push
flds
pop
cld
cmpw
je
mov
add
cmpl
add
xor
cmpw
in
cmp
mov
dec
cmp
enter
adc
push
movzwl
xor
test
push
incl
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
add
add
cmp
xor
ljmp
add
xchg
push
push
xor
cmpsb
mov
in
or
clc
jo
and
xlat
pop
cmp
andb
adc
add
fisubrs
mov
mov
mov
rorl
rolb
incl
pop
pop
fs
loope
mov
xor
xchg
adc
adc
sete
mov
or
test
xchg
xor
out
ss
mov
mov
movl
adc
rclb
adc
or
mov
mov
imul
loopne
add
sbb
dec
pushl
pop
cmp
je
pop
mov
cmc
cmp
je
dec
outsb
mov
es
pop
ficomps
in
push
inc
sbb
ljmp
es
out
cmpl
pushl
call
pop
push
daa
sahf
push
pop
or
mov
xchg
push
add
test
adc
lret
cmp
xchg
pushl
lret
test
push
dec
movl
in
andb
jmp
incb
test
cmp
incb
je
out
or
pop
cmp
je
adc
push
mov
stc
enter
je
cmp
ljmp
cmp
je
cmp
je
cmp
jne
sarb
mov
mov
cs
jle
jne
pushl
mov
cltd
imul
push
movsb
inc
mov
jbe
mov
and
push
mov
cmp
je
fisttps
jmp
mov
add
mov
add
lds
mov
orl
cmp
je
jmp
cmp
je
into
jne
cmpl
sti
add
push
push
call
pusha
sar
inc
cmp
jne
mov
jbe
rol
jne
sbb
les
loope
jg
ret
sub
je
sub
je
sub
je
sub
je
dec
jne
jnp
jmp
add
cmp
je
dec
mov
xchg
jmp
sub
pop
dec
out
icebp
and
pushl
into
or
aas
sub
pop
jmp
orb
pop
and
cmp
sub
push
sbb
jg
adc
jmp
mov
add
sti
add
sti
add
sti
or
movd
adc
jbe
scas
loopne
stos
lahf
ljmp
and
cmp
imull
sbb
pop
repnz
cmpsb
sti
jg
je
mov
push
pop
sub
je
add
fs
jne
push
or
clc
sub
xchg
arpl
push
mov
ja
mov
add
mov
jmp
mov
sub
je
push
sub
cmp
cltd
jmp
mov
inc
cli
add
push
nop
mov
jmp
add
push
mov
loopne
sbb
je
jl
inc
loopne
pop
and
in
pop
in
mov
sub
rolb
or
jmp
fdivl
add
sbb
aam
inc
pusha
pop
jne
mov
jl
mov
movl
mov
mov
or
fcomip
mov
cmp
jge
mov
lods
mov
mov
sbb
adc
incl
jmp
sbb
iret
inc
mov
pushl
push
call
pop
jmp
pop
mov
sbb
je
pop
insb
or
dec
or
adc
rorb
sbb
cs
mov
es
push
push
push
pushl
and
xor
cmp
or
test
pop
lods
push
pop
cmp
es
mov
mov
inc
aas
std
outsl
test
push
mov
jne
xchg
mov
mov
cmp
cmp
inc
fdivrl
push
call
icebp
ljmp
fdivr
cltd
sbb
xlat
xchg
pop
jno
push
mov
pop
divb
push
pop
jmp
push
mov
mov
outsb
push
push
sbb
adc
outsl
nop
cmp
je
pop
mov
add
ja
icebp
loop
daa
sub
cmp
out
out
test
and
sub
pop
decl
mov
xor
cmpl
push
mov
mov
jne
test
lea
mov
push
jmp
pop
fdivr
jne
mov
ja
mov
es
jne
lds
jne
push
push
push
and
jp
andl
fsubrp
test
out
push
xor
inc
push
cmp
out
jle
push
je
sub
mov
push
xor
cmpsl
movzbl
sbb
xlat
inc
mov
dec
rorb
pop
fcompl
adc
dec
inc
mov
pop
pop
xor
xor
mov
lds
lea
push
push
data16
adc
add
inc
mov
cmp
jle
cmp
jne
push
push
mov
mov
scas
mov
mov
outsl
push
sahf
xor
leave
mov
sbb
imul
add
sub
inc
inc
cmp
jl
jmp
addr16
pop
mov
call
call
or
push
push
test
pushl
out
aaa
cli
divl
lea
cmpb
or
add
push
cld
and
dec
les
push
adc
test
punpcklbw
jno
out
cmp
fs
decl
or
jne
call
mov
jmp
aaa
add
adc
out
scas
inc
fdivl
leave
cmp
mov
cmpl
or
adc
loop
mov
inc
loopne
push
out
popf
mov
adc
pushl
jb
jo
stos
add
mov
push
push
aad
les
js
inc
ret
data16
ret
xor
ret
sbb
add
pop
je
ss
jg
ret
xor
sub
pop
arpl
ljmp
mov
mov
mov
mov
jne
cmp
fs
dec
add
call
cmp
pandn
pop
faddl
movl
lcall
adc
push
push
mov
sarb
lea
and
je
idivl
hlt
add
push
pusha
out
cmp
pop
mov
push
in
call
adc
clc
cmp
je
cmp
lahf
lock
or
pop
mov
je
cmp
je
mov
in
push
push
lea
push
push
push
repnz
jne
jae
aam
pop
aam
mov
cmp
mov
pop
lock
or
and
jmp
or
jmp
mov
cmp
je
cmp
je
call
cmp
je
mov
or
jne
call
sbb
xor
inc
mov
test
pop
pop
pop
leave
push
push
xor
cmp
xor
mov
or
sti
ja
call
mov
jo
mov
movsl
clc
adc
jmp
mov
ljmp
sbb
add
dec
jne
je
mov
stos
decl
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
inc
and
aam
pop
mov
mov
jmp
scas
mov
jecxz
daa
pop
adc
jne
mov
jne
push
incl
aas
pop
ret
cmp
je
mov
xchg
cmp
jne
mov
jmp
push
jmp
mov
cmp
or
cmpl
mov
jne
mov
mov
inc
inc
sti
lahf
insb
rorl
or
add
out
cmp
ljmp
mov
mov
push
mov
pop
push
or
ja
imul
clc
stos
aaa
lods
pop
pop
fcomip
roll
iret
out
into
je
mov
add
test
je
adc
add
decl
fsubs
jle
rolb
add
test
incl
add
cld
cmp
test
je
test
je
push
add
jmp
je
jmp
lea
gs
ret
lea
add
js
es
adc
or
dec
push
inc
jle
lret
push
push
xor
rolb
sbb
add
pop
dec
lods
push
rolb
mov
arpl
cmp
jne
mov
mov
sbbb
or
inc
sbb
jb
or
mov
jae
mov
push
mov
out
icebp
movb
jne
cmp
mov
mov
mov
mov
mov
mov
cmp
push
adc
dec
jo
pop
daa
jp
mov
mov
cmp
mov
sbb
mov
mov
outsl
std
mov
adc
int
jo
add
or
sbb
pop
ret
cmpb
outsb
lcall
pusha
jo
ret
mov
lds
mov
movzbl
mov
mov
test
jne
cmpl
aaa
add
lea
mov
inc
and
mov
mov
or
clc
imul
cld
andl
leave
ret
and
add
imul
add
adc
push
and
xor
pusha
and
add
je
adc
xor
andl
jbe
enter
pop
sub
inc
pop
sub
mov
adcl
or
pop
sub
add
mov
daa
push
insb
xorb
adc
insb
mov
xchg
dec
adc
mov
sub
fcomip
or
mov
mov
shrl
cmpl
dec
out
and
lahf
rorl
push
xorl
rcrl
pop
mov
dec
xor
out
jg
or
rorb
ret
sub
shlb
sub
je
dec
sbb
add
add
ret
mov
or
clc
out
and
mov
push
xor
lea
push
cmp
aas
es
dec
mov
mov
mov
xor
lea
stos
stos
stos
sbb
mov
sub
mov
mov
inc
dec
jne
lea
inc
sbb
adc
mov
inc
dec
jne
pop
pop
pop
inc
scas
push
jp
and
sti
jb
movsb
pop
inc
out
push
test
inc
test
jbe
call
cmc
ja
sarb
xor
mov
idiv
inc
cmp
jb
mov
test
movb
pop
mov
mov
movzbl
cmp
ja
add
push
sub
inc
push
lea
fwait
dec
mov
inc
mov
inc
test
jne
mov
or
inc
cwtl
fs
push
testl
push
iret
stos
sbb
fistl
fnstcw
adc
push
push
pushl
imull
lret
pop
mov
and
and
das
jg
and
xor
movzwl
test
je
orb
mov
ja
jmp
test
je
adc
inc
mov
daa
jmp
movb
lea
inc
inc
sbbb
sub
mov
lea
pop
and
mov
dec
push
pop
roll
cmp
ja
push
sbb
ljmp
adc
add
add
inc
cmp
jb
mov
ja
ds
push
mov
mov
mov
sbb
rclb
cli
je
mov
pop
lock
or
inc
push
daa
aas
and
dec
pop
sub
mov
cmp
add
sbb
adc
cmpsl
and
and
inc
push
cmp
sub
divb
cmp
jmp
mov
pusha
orl
pop
push
or
aaa
hlt
jae
hlt
push
jne
movl
adc
cld
je
or
out
jmp
cmp
jne
and
jne
mov
das
sti
inc
lock
sbb
les
cmp
arpl
lds
lahf
inc
cld
jg
je
push
mov
cld
or
mov
cmp
mov
decb
mov
outsb
push
mov
in
xor
cmp
xchg
mov
incl
add
cmp
call
test
fwait
mov
data16
jmp
push
call
xor
push
jle
movsb
push
pop
je
lea
cmp
mov
dec
xor
inc
fdivrs
push
call
jae
btc
push
addb
iret
ja
jne
icebp
ja
out
mov
test
je
inc
decl
mov
push
jb
out
mov
dec
in
leave
xor
mov
ja
jmp
mov
sub
mov
movzbl
jmp
fistpll
mov
inc
cmp
clc
jbe
mov
inc
inc
cmpb
idivl
mov
inc
loopne
or
jb
mov
xchg
rolb
mov
mov
push
mov
lea
lea
mov
inc
mov
inc
inc
inc
dec
jne
idiv
outsb
ret
mov
sti
outsb
jae
jno
orb
inc
cmp
jbe
pop
mov
incl
vmwrite
leave
orb
in
test
or
jne
mov
insl
out
push
mov
jmp
push
cmpsl
jmp
jae
mov
mov
xor
lcall
add
cld
pop
inc
xor
stos
xor
sbb
cmpl
cmp
je
cli
inc
add
push
sti
leave
std
orl
mov
mov
or
mov
mov
clc
incl
jo
mov
cmp
je
call
jne
pop
mov
test
cli
cli
aaa
cmp
pop
pop
mov
rep
andl
push
push
fistps
pop
pop
mov
add
or
pushl
dec
adc
fwait
dec
dec
push
test
pop
push
scas
loopne
inc
call
testb
jne
adc
push
lock
test
in
incl
add
inc
add
pop
or
or
pushl
test
in
clc
add
dec
inc
adc
or
clc
aas
outsb
bound
call
or
mov
xor
inc
add
jmp
sbb
mov
fbstp
adc
mov
mov
sar
xlat
sti
je
jmp
lods
clc
jmp
pop
jmpw
and
test
pop
pusha
and
pop
enter
orl
out
mov
push
and
xor
add
xchg
add
rolb
mov
add
dec
pop
cmpsl
mov
in
or
out
popa
inc
mov
arpl
lods
addl
out
sbb
xchg
test
jne
test
xchg
aad
lods
lods
shrb
mov
das
ds
sbb
or
test
add
mov
test
or
movsb
dec
jnp
fucomip
and
mov
ret
push
push
xor
inc
push
sti
jge
mov
sbb
pop
jne
cmp
cmp
and
lea
sbb
jne
ds
mov
je
adc
add
mov
roll
and
sbb
scas
cmp
pop
jne
add
add
cmp
je
mov
bound
dec
stos
enter
mov
xchg
pop
ret
fwait
orb
das
negb
out
ljmp
and
test
test
cmp
add
add
or
je
cmp
jne
or
je
shr
cmp
jne
adc
jecxz
jg
cmp
jne
add
add
or
jne
mov
inc
nop
sbb
shl
xor
clc
rolb
test
add
add
xor
jae
je
test
mov
pop
into
adc
pop
lds
mov
dec
add
popa
or
mov
icebp
xor
cmp
push
je
cmp
mov
repz
je
cmp
jne
mov
mov
pop
fs
pushl
adc
xchg
xchg
mov
sub
cmpsb
push
cmp
pop
inc
pop
inc
mov
cld
jecxz
mov
call
sbb
add
stos
fdivrs
or
push
ja
push
mov
mov
mov
test
arpl
jle
jne
cmp
pop
pop
push
lea
pop
sbbl
mov
jle
enter
xchg
cmp
je
mov
push
in
jg
adc
leave
mov
pusha
adc
push
add
xlat
xor
mov
or
in
and
or
pusha
lahf
jl
push
pop
cmpl
jnp
add
jmp
imul
fmuls
xchg
out
dec
bound
gs
fcoml
mov
mov
mov
cmp
icebp
mov
mov
cmp
je
ret
push
adc
ss
mov
popa
and
cmpl
pop
pop
ret
test
je
and
push
mov
cmp
je
push
mov
xchg
js
test
pop
je
sbb
inc
cmpl
pop
jne
cmp
hlt
jg
ja
pop
mov
pop
ret
add
or
inc
dec
iret
test
aaa
aaa
push
ss
jo
push
push
pop
jle
sbb
jo
rclb
cmp
inc
icebp
inc
outsb
lea
mov
xor
mov
or
sahf
jmp
push
out
cs
pop
ret
cli
dec
jg
jo
roll
sbb
inc
inc
mov
aam
cmp
je
push
sar
mov
je
cmp
je
cmp
je
mov
push
and
jmp
or
mov
jmp
bound
incl
ret
jmp
dec
add
or
pop
les
pop
or
std
mov
mov
mov
orl
mov
mov
xchg
push
ret
push
push
fadd
jp
pushl
aaa
loope
popa
call
sub
xor
add
cmp
je
add
and
cltd
loop
jl
jge
inc
pop
mov
int
cmp
cmp
sbb
pushf
inc
jnp
mov
pusha
cmp
mov
add
sub
inc
or
push
push
ret
imul
arpl
sbbb
ljmp
lock
cmp
es
jmp
sub
add
int3
std
pop
out
inc
insb
mov
mov
push
subb
rclb
cmpsb
mov
sbb
sbb
mov
xor
pop
push
test
fstpt
sti
jle
push
lea
adcl
lock
sbb
rorl
aam
mov
jne
pop
pop
pop
ret
mov
push
dec
jg
cmpsb
mov
push
test
aas
push
out
loopne
mov
jmp
shlb
jge
cmp
jne
cs
pushl
je
push
push
lea
push
sahf
shlb
cli
lock
jmp
push
push
mov
ror
cmp
out
mov
xor
clc
inc
jae
cs
loop
test
inc
sub
and
sti
mov
pop
je
push
mov
sbb
add
sbbl
jae
test
call
adc
lcall
cmp
je
test
pop
incl
lea
decb
ror
test
pop
pop
jne
cmp
pop
pop
pop
mov
notl
push
in
and
scas
or
stos
xchg
in
fdivp
lea
and
push
push
das
jl
je
std
mov
pushf
cmp
pop
pop
je
cmp
dec
cld
aas
pop
ret
sub
push
xor
inc
push
outsb
out
imul
mov
je
fwait
inc
push
push
lea
movb
mov
lea
and
push
out
dec
pushl
push
push
sbb
and
pop
push
enter
pop
pushl
pushl
jne
mov
andl
jge
add
mov
lea
push
or
xor
out
popl
lea
in
cmp
jne
mov
cmp
mov
mov
rol
or
jbe
out
xor
aaa
jo
inc
push
mov
jg
inc
and
mov
mov
mov
jmp
aam
testl
cltd
push
push
dec
dec
cld
lcall
inc
push
outsb
dec
pop
mov
mov
pop
pop
jle
xchg
paddd
insb
and
sub
aaa
popf
push
mov
sbb
mov
mov
mov
mov
and
stos
inc
clc
dec
movl
decl
lea
lea
add
mov
mov
je
fbld
test
cmpl
mov
adc
cmpb
jne
push
jo
jne
pop
jne
jo
dec
imulb
adc
mov
mov
add
inc
scas
pop
mov
mov
mov
lea
add
imul
pusha
sub
scas
mov
scas
jae
adc
andl
lea
daa
xorb
test
jle
je
push
or
int3
fiaddl
out
je
inc
add
dec
mov
add
push
pushl
jge
loopne
xorl
mov
jb
mov
mov
sti
add
inc
push
push
and
add
shl
jne
je
push
lcall
add
push
pushl
xchg
mov
jne
je
push
pushl
inc
jo
ret
pushl
adc
and
rclb
pop
mov
ret
pop
lock
sbbb
lds
rorl
xchg
je
jo
push
hlt
fbstp
pushl
mov
lea
jbe
push
call
inc
lea
push
push
add
shl
add
test
test
cmpb
sbb
pushl
sub
push
je
sbb
adc
add
push
mov
shll
mov
mov
inc
dec
mov
mov
mov
roll
leave
push
std
sti
scas
mov
mov
push
orl
inc
fmuls
test
jmp
jbe
pushf
mov
sbb
pop
add
add
push
xchg
and
loopne
mov
xor
mov
movzwl
mov
leave
loopne
arpl
push
pushl
jge
sbb
jne
movsl
sti
ja
jbe
mov
inc
and
dec
and
mov
cmp
je
mov
push
mov
mov
push
push
jg
std
add
dec
add
lea
add
cmpl
jl
jmp
std
mov
scas
sbb
mov
xor
inc
out
jmp
dec
add
jne
push
pushl
lea
jge
pop
push
push
push
fistpll
sub
inc
ss
andw
inc
cmp
jb
push
xor
jo
cwtl
cmp
and
mov
jmp
andl
pop
mov
mov
mov
add
stc
mov
inc
jl
rorb
nop
js
mov
sbb
inc
ret
fwait
dec
daa
mov
xor
mov
xchg
and
add
cmpl
and
add
dec
cmp
pushl
repnz
push
pushl
andl
movsb
dec
jl
or
adc
loope
cmp
movb
add
cmc
pop
xchg
stos
pushl
push
push
and
mov
push
mov
je
cmp
je
ja
aas
cmpsb
andl
dec
or
clc
sbb
cmp
into
mov
bswap
jle
pop
incb
inc
cmpb
adc
pop
pop
and
stc
push
dec
sbb
add
insb
cmpsl
aaa
test
xor
sub
cltd
inc
cmpb
je
fcoms
movl
mov
sbb
loop
push
push
testb
mov
push
cld
jg
add
cmp
pop
je
sbb
fdivs
push
jg
jle
inc
mov
out
ret
inc
pop
pop
jne
pop
add
loopne
jg
and
jg
loopne
std
or
sbb
jne
inc
aaa
inc
movb
andl
out
loop
stos
aas
mov
sub
xor
cmp
aam
out
call
pusha
shll
pop
scas
add
gs
sbb
out
std
cmp
je
lea
test
je
pushl
sbb
divl
addr16
bound
and
jmp
inc
mov
adc
pop
in
add
ja
jle
mov
ret
int
jl
hlt
out
and
add
or
add
incl
imul
add
mov
push
push
je
mov
movhlps
jmp
push
push
out
adc
cmc
pop
cwtl
jne
jno
call
inc
push
jns
adc
mov
mov
sbb
das
jns
push
ja
ss
mov
insl
mov
push
pushl
jno
mov
into
pop
je
adc
call
cmpsl
lahf
adc
imul
or
jle
pop
icebp
mov
adc
mov
mov
cmpl
cmp
or
mov
add
add
xchg
sub
lea
loope
out
jg
jp
orl
mov
push
adc
mov
mov
mov
cmp
je
sub
out
add
dec
insb
mov
cmp
ss
mov
call
test
or
fists
sbb
call
in
out
add
mov
adc
dec
pop
rorl
jp
sbb
lea
icebp
jns
sub
mov
push
add
jne
jb
sub
cmp
push
and
fdivrl
add
push
push
out
pop
in
pop
jnp
sub
mov
fmull
daa
jae
bound
or
jo
pushw
mov
int3
xor
cmp
mov
mov
sub
shlb
add
sbb
add
dec
incl
stos
pusha
adc
insl
add
aad
pop
hlt
out
pop
lods
jmp
mov
add
xor
js
sbb
cmp
or
adc
ret
push
inc
fstl
adc
test
mov
mov
in
and
and
cmpsl
add
mov
mov
addb
or
leave
adc
sar
dec
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
rorb
adc
adc
jne
push
lds
sub
add
shr
mov
imul
add
push
std
sbb
mov
dec
imul
cld
jne
rcrl
push
lea
mov
mov
cld
ljmp
pop
push
hlt
test
mov
jne
sar
dec
cmp
jbe
push
aas
pop
mov
cmp
jne
cmp
mov
mov
shr
lea
not
dec
divb
and
decb
jne
andb
jmp
lea
sbb
outsl
sbb
pop
add
pop
or
push
or
xchg
mov
or
mov
or
jg
fdivrl
clc
and
hlt
jne
mov
sarl
sti
add
aas
mov
dec
pop
cmp
jbe
mov
add
mov
cld
in
jmp
fidivl
jno
cmp
jne
cmp
mov
jg
mov
shr
not
and
add
sbb
data16
mov
sbb
add
mov
mov
sub
add
dec
or
dec
or
or
or
fimull
test
mov
dec
lock
mov
or
lock
or
or
mov
mov
inc
sbb
mov
jae
cmpb
jne
mov
push
shr
testb
or
mov
sub
pop
int3
xor
push
sbb
fdivrs
lea
cld
mov
mov
call
or
test
pop
mov
cmp
insl
mov
mov
jg
and
inc
add
shl
add
mov
js
push
call
pop
xor
cmp
or
mov
sbb
movsb
mov
add
flds
or
cmpb
jne
andl
adc
js
pushl
push
or
call
adc
jo
mov
push
je
dec
in
arpl
or
sub
lea
push
jg
push
lea
daa
add
lods
mov
mov
inc
add
insl
or
cli
fildll
pop
mov
leave
ret
mov
dec
push
mov
cmp
jne
add
imul
push
incb
mov
cmp
jne
shrb
cmp
jg
mov
ljmp
add
les
add
xor
cmp
mov
je
push
push
std
dec
out
add
adc
inc
or
adc
jbe
idiv
pop
xchg
cmp
fwait
orl
mov
mov
incl
decl
decl
in
push
push
decl
decl
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
ja
xor
inc
clc
pop
mov
mov
stos
dec
test
push
std
jne
push
mov
mov
out
add
mov
mov
or
out
add
lods
lea
cmp
mov
ja
mov
sub
shrl
jmp
inc
orl
orl
lea
pop
cmc
mov
inc
inc
cld
lock
push
add
sub
or
orb
jne
mov
add
mov
inc
or
jmp
incb
andl
add
mov
inc
mov
sub
mov
test
dec
inc
jne
or
pusha
nop
or
not
and
mov
pop
and
sbbl
push
adc
push
mov
sub
nop
cld
scas
push
int
shr
mov
hlt
mov
and
dec
mov
icebp
pop
mov
mov
psubq
ret
add
test
add
cmp
jg
mov
stc
add
cmp
mov
jbe
push
pop
pop
mov
cmp
jne
lahf
push
jmp
cmp
sbb
lea
fwait
mov
xchg
fcompl
add
dec
push
pop
out
popa
sbb
nop
dec
or
out
ljmp
jg
mov
mov
sub
add
cmpl
out
mov
xchg
mov
pushf
sar
dec
cmp
lea
iret
sar
pusha
pop
mov
lea
mov
sbb
mov
mov
mov
dec
dec
or
push
mov
mov
ja
dec
adc
and
jge
inc
iret
idivb
pusha
sbb
lea
mov
jmp
sbb
lea
mov
cmp
and
jae
lea
mov
mov
add
fistl
mov
mov
cld
pop
cld
clc
jmp
mov
das
inc
pop
or
sbb
pushl
lea
mov
lea
mov
sar
dec
cmp
cmp
pusha
clc
out
rcrb
inc
cld
sbbb
pop
cld
pop
mov
push
sbb
dec
incb
mov
xor
mov
xor
push
dec
dec
outsl
lea
pop
sub
insb
dec
outsl
aaa
sarb
mov
push
mov
jg
in
jne
mov
or
mov
mov
mov
or
xchg
dec
add
add
push
push
cwtl
push
push
add
and
sbbl
insb
std
or
push
into
sbb
loopne
and
sbb
add
push
dec
loopne
xor
mov
mov
xor
inc
fiadds
xorl
sbb
and
fwait
das
dec
adc
mov
sbb
and
add
test
mov
and
push
mov
cli
pusha
push
cmp
push
mov
mov
jle
imul
adc
stos
leave
sub
shlb
dec
cmpsb
loop
jmp
mov
mov
mov
rcrb
enter
sarb
loopne
lea
mov
mov
hlt
repz
std
scas
ljmp
clc
je
add
mov
decl
test
sbb
test
or
je
dec
cmp
jg
in
incl
jmp
mov
sar
dec
cmp
jle
pop
fucomp
filds
stc
adc
mov
and
rorl
test
sti
cmp
or
inc
cmp
mov
cmp
jb
out
add
and
sti
or
mov
push
mov
jne
sbb
cld
negl
push
inc
jge
mov
je
cmp
jmp
jg
cmp
setp
dec
lahf
or
and
cld
mov
xchg
mov
lret
inc
mov
push
mov
and
add
cmp
mov
jne
sbb
jg
fiaddl
or
fcompl
into
jne
mov
cmp
std
jns
mov
mov
dec
std
add
jne
and
ljmp
addb
fmuls
inc
lock
lea
or
in
mov
cmp
jne
mov
test
test
jg
fildll
cmp
mov
jl
enter
xor
mov
cmp
js
inc
mov
cmp
jne
sbb
inc
fsubr
shll
incl
add
mov
mov
jl
mov
cmp
jne
mov
cmp
xchg
clc
incl
incl
mov
cmp
ud0
sub
mov
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
in
jmp
push
jmp
push
jmp
push
jmp
push
pop
jmp
add
mov
sbb
jne
in
ljmp
aad
push
pop
mov
jmp
mov
aad
lcall
or
je
cmp
jne
cmp
push
sub
lock
ljmp
add
addb
or
jo
hlt
out
sub
mov
inc
mov
add
and
icebp
jg
or
push
push
jge
or
shr
orl
jmp
jp
decl
lret
not
ljmp
hlt
jmp
mov
mov
and
and
or
jne
add
cmp
call
mov
jne
mov
pop
fnstenv
faddp
pop
jmp
cmpl
cmp
cmp
jb
cmp
pushl
cmp
lock
jne
call
xor
mov
xchg
das
ret
ljmp
lds
stos
pop
mov
mov
mov
cmpl
je
mov
movsb
inc
adc
je
mov
mov
and
iret
jne
pop
mov
stos
sbb
inc
mov
lret
push
in
xchg
gs
loop
jo
roll
rorb
idivb
nop
inc
xor
and
jne
pop
push
push
pop
lock
sbb
dec
hlt
mov
mov
sub
mov
cld
xchg
mov
inc
pop
pop
cmp
je
dec
mov
cmp
jne
cmp
xchg
cmpl
es
push
cld
lea
fmull
pop
mov
decb
jne
mov
mov
and
jmp
xchg
aas
mov
cltd
mov
and
decb
xor
jbe
jne
and
and
popf
pop
mov
add
add
jns
jo
jp
sahf
or
test
mov
dec
or
and
xchg
add
aaa
icebp
pop
mov
dec
or
dec
jl
aas
jge
cmpb
jne
xchg
orb
or
mov
cld
or
test
or
or
icebp
lea
dec
loopne
shr
or
mov
dec
je
mov
mov
dec
clc
mov
add
sub
mov
mov
and
ret
test
mov
jne
cmp
adc
popf
jne
andl
call
inc
add
cmp
jne
repz
jmp
int3
decl
aad
int3
or
and
mov
dec
and
push
push
push
push
sub
jo
push
add
inc
and
mov
fistpll
sub
jo
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
add
jne
push
add
inc
or
or
or
xadd
std
rorl
mov
popl
mov
inc
add
adc
mov
cs
or
cwtl
lret
push
jl
bound
pushl
cwtl
fcoml
and
mov
mov
or
dec
pushl
pushl
pushl
sbb
ret
push
push
push
push
mov
or
xor
xchg
call
mov
ret
mov
mov
mov
js
fisttpll
pop
jmp
dec
out
ja
sbb
push
push
ret
fnstcw
stos
and
push
push
pushl
pop
and
ret
testb
jg
push
je
xchg
inc
aas
aaa
test
jmp
incl
pop
pop
and
add
add
test
and
mov
aas
add
push
movl
and
push
icebp
jbe
inc
out
or
mov
filds
add
push
and
not
and
or
mov
add
add
or
add
arpl
fcomip
imul
shlb
cli
in
push
cmp
xchg
mov
push
mov
cmp
out
and
pushl
neg
and
je
sub
mov
jp
add
sti
mov
shl
add
push
adc
and
shr
je
rep
pop
adc
out
or
ljmp
xor
fsubs
ljmp
cmp
setne
cmp
pop
mov
and
dec
les
imul
cmp
push
pop
lds
jge
push
xlat
jg
add
cmp
je
mov
sub
mov
push
clc
pop
adc
stos
pushf
pusha
cmp
jne
push
dec
sarb
mov
mov
fisttpll
cmp
incl
rcrb
add
add
cmp
inc
adcl
popa
inc
jecxz
cmpl
add
xchg
push
mov
or
mov
pop
mov
and
inc
test
icebp
cmpsb
mov
add
sub
mov
into
mov
inc
ret
push
divb
cmp
adc
jnp
and
dec
and
jns
out
add
adc
inc
xor
xor
add
adc
add
popf
imul
add
push
in
add
pusha
push
cwtl
adc
idivb
or
and
inc
or
insb
or
sahf
pop
inc
ret
out
jnp
or
popa
jns
or
es
push
fcoms
das
cmp
cmp
adc
and
jecxz
fldcw
test
outsb
and
idivb
add
and
data16
stc
test
pop
enter
dec
cmpb
das
nop
mov
and
jle
mov
or
insb
lret
inc
and
popf
fidivrs
cmpl
push
and
and
fldl
mov
add
mov
pop
je
ret
sbb
ljmp
mov
sbb
inc
and
add
stos
mov
adcb
mov
mov
add
mov
adc
sub
cmpl
jne
lahf
rcrb
shr
push
jnp
mov
in
cld
mov
push
push
mov
mov
das
push
push
xor
inc
pop
inc
or
fdivrs
sbb
cmp
add
adc
outsb
sbb
cmp
aaa
hlt
jg
mov
add
mov
jne
decl
cmp
mov
and
mov
mov
mov
push
push
pushl
mov
mov
call
pop
pop
or
jmp
loopne
rcrb
repz
jb
lea
cmp
mov
sbb
hlt
test
je
movl
add
jmp
aaa
mov
je
movl
jmp
out
out
add
imulb
lods
push
push
push
sarb
shll
sbb
push
push
jmp
mov
call
sbb
adc
out
mov
pop
mov
pop
lea
loope
jbe
mov
xor
mov
lret
jnp
pushl
mov
sbbl
data16
mov
jge
rclb
andb
lcall
push
mov
testb
jne
push
push
push
test
mov
or
jne
lock
pop
je
sarl
icebp
insl
pop
and
push
std
rorl
clc
cmp
mov
arpl
inc
enter
jb
lea
cld
cmp
je
movl
cmp
pop
clc
pushl
ja
jne
iret
shlw
cmp
je
sbb
jne
push
push
fdivs
cld
paddsw
mov
jmp
xchg
lock
cmp
adc
dec
dec
mov
pop
dec
cmpb
je
dec
pushl
test
jne
dec
sub
rorl
sbb
add
inc
xchg
push
mov
push
jne
push
push
xor
inc
push
push
push
enter
into
and
fwait
and
out
ljmp
cmp
jle
mov
mov
dec
std
out
cmp
je
inc
cmp
jne
or
mov
jne
inc
adc
add
inc
adc
ret
loope
jp
test
ja
cmp
adc
pop
and
mov
pusha
jecxz
and
and
loope
and
add
pop
pop
lock
add
jne
call
mov
mov
out
test
negl
aaa
lea
movq
les
ret
je
movl
rorb
cmp
fdivr
mov
add
hlt
je
dec
popf
push
inc
jge
imul
sbb
loop
mov
rcll
or
and
jg
je
inc
or
add
sub
pop
sbb
test
mov
sbb
cmpsl
sbb
cli
pop
lret
insb
cmp
cmpsl
mov
movsl
movsb
pop
hlt
cmp
je
std
shlb
frstor
inc
sbb
inc
pushf
ret
push
push
push
ds
jne
push
push
mov
inc
adc
mov
aaa
jl
lret
nop
adc
or
mov
imul
pushf
adc
inc
or
subl
pop
mov
outsl
xor
out
aas
test
je
lea
push
mov
mov
mov
jo
sbb
hlt
je
mov
out
jmp
idivb
call
loopne
hlt
adc
scas
cmp
adc
cmp
je
faddl
enter
sti
je
in
loopne
dec
sub
xlat
test
mov
fdiv
cmp
jne
xor
jmp
movsl
lea
pop
push
jne
mov
and
in
mov
lock
push
dec
fbstp
and
push
int
or
sub
loop
in
clc
rorb
bound
je
pop
push
addl
and
lea
outsb
sub
lock
test
jb
xchg
les
lret
jbe
dec
cmpsb
and
call
stc
jne
shrb
rcr
out
call
sbb
xor
hlt
mov
sbb
adc
mov
ficompl
test
mov
inc
and
dec
cmp
ret
and
sbb
fadds
mov
nop
ja
jle
cmp
ja
mov
cmp
inc
je
lea
push
push
inc
test
push
aam
or
lods
imul
imul
or
jmp
sub
jmp
xor
sbb
jne
xchg
mov
mov
sbb
fcmove
mov
inc
cmp
je
rclb
or
cmp
and
mov
mov
fidivl
or
mov
int3
arpl
repz
je
ret
cmp
icebp
and
sahf
arpl
xlat
jl
loop
imull
outsb
push
push
adc
cmp
adc
test
and
pop
shl
dec
cmp
xchg
out
out
xchg
pop
stos
sahf
mov
push
push
insl
ret
sub
add
cmp
push
dec
adc
add
pop
test
jne
inc
test
ret
cmp
cmpsl
std
jmp
stos
pop
lds
test
jne
inc
add
and
in
xchg
inc
ret
mov
insb
and
cmp
ja
sbb
push
sub
mov
dec
xchg
ret
mov
cmp
in
out
add
je
mov
jmp
push
jmp
xorl
es
jne
cmp
jne
add
clc
sbb
and
mov
clc
rcll
jne
cmp
push
pop
je
std
test
jle
lods
mov
les
or
out
adc
loopne
shll
lods
jae
sub
inc
clc
stos
pop
decl
les
negb
in
mov
xor
cmp
xchg
push
pop
xor
div
cmp
sbb
inc
jne
cmp
call
and
into
lods
testl
xlat
lock
icebp
mov
les
or
cld
in
loopne
imul
cmp
inc
or
gs
mov
in
jge
sti
add
add
pop
lods
fisttpl
je
or
lock
fbstp
push
inc
ret
xchg
dec
cmp
outsl
test
mov
cs
adc
movl
fcomp
inc
movsb
lods
sbb
decl
loop
pop
je
or
push
and
pop
pop
pushf
or
pusha
jp
lea
cmp
or
rorl
sbb
push
mov
ret
adc
pop
lods
mov
pop
mov
pop
leave
xor
dec
call
or
and
inc
mov
sbb
mov
test
xor
mov
add
les
adc
dec
ja
movl
inc
mov
and
dec
fmull
or
popl
xor
fucom
daa
mov
dec
cmp
jb
mov
fs
loopne
hlt
fnstenv
dec
mov
adc
loope
pop
dec
cmp
jne
xor
inc
mov
ret
adc
in
mov
push
and
jne
cli
mov
xor
cli
scas
addb
leave
notl
push
jecxz
sbb
mov
jmp
sbb
call
mov
movsb
mov
test
jne
cmp
int
stos
jp
ljmp
aas
popa
push
dec
je
push
pop
mov
jmp
pushf
add
hlt
andb
pop
pop
in
or
jmp
mov
in
lock
push
pusha
je
inc
push
add
cmovnp
les
scas
mov
pop
push
jmp
push
or
mov
jmp
rcrl
mov
mov
cmp
jbe
les
adc
add
and
pop
icebp
pop
inc
and
xor
xor
jmp
imul
stos
aas
imul
fadds
pop
mov
adc
fidivs
sub
mov
sbb
scas
add
fldenv
inc
ja
fisubl
fimuls
mov
mov
add
pop
les
add
adc
mov
jp
loop
dec
sub
mov
inc
movzwl
mov
decl
loope
add
ret
andl
push
push
mov
lea
push
push
push
xor
inc
clc
fildl
inc
lock
sbb
push
push
pushl
adc
xchg
mov
push
adc
xor
imul
or
push
push
pop
into
cmp
push
push
push
push
bndldx
mov
and
sub
jge
test
push
and
push
pop
sub
push
lahf
xchg
dec
fldcw
adc
push
push
xor
cs
pop
sub
push
xor
push
pop
in
imulb
push
sbb
push
adc
push
push
add
enter
push
push
imulb
popa
sbb
inc
push
push
adc
cmpsl
in
dec
push
push
dec
push
push
dec
fadds
dec
push
push
push
push
pop
push
sub
xchg
std
push
push
push
adc
push
push
test
repnz
push
push
push
pusha
push
push
pop
ds
push
fs
push
adc
push
push
mov
jl
insb
push
push
push
fnstcw
push
pop
push
je
push
adc
lahf
xchg
dec
js
push
jl
push
fmuls
aam
push
sahf
push
push
sbb
xchg
push
push
pop
pop
aad
nop
nop
push
scas
icebp
andb
push
cltd
sbb
pusha
mov
push
ljmp
fwait
push
push
dec
xchg
fldl
inc
pop
xchg
mov
mov
pop
rcll
push
adcl
pop
bound
pop
es
jge
in
sub
mov
sbbb
popa
pop
add
mov
adc
add
add
mov
sbb
ficoml
inc
mov
lds
or
test
cltd
cld
jbe
je
cmp
pop
aam
jbe
pop
sbb
out
shlb
aad
pop
lahf
pop
andl
pop
lahf
pop
and
pop
lods
inc
iret
add
push
add
or
pop
xor
push
ljmp
pop
add
pushl
mov
jne
and
ja
neg
dec
sbb
jbe
pop
lods
pop
sbb
adc
pop
pop
pop
fs
inc
push
pusha
fs
insb
jo
lds
sbb
xorb
or
add
add
xor
daa
or
add
pop
or
or
add
std
or
or
add
loopne
rorl
out
loopne
cmp
or
push
push
push
jl
adc
mov
sbb
jg
add
xor
push
mov
xor
jne
rclb
rolb
mov
adc
ja
jle
mov
add
mov
sbb
add
mov
cmp
je
jb
decl
pop
pop
ret
xor
cmp
je
push
push
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
pop
pop
ret
cmp
jne
mov
lea
mov
mov
mov
cmp
cli
adc
jmp
pop
xor
sbb
xchg
add
sub
fs
inc
add
push
mov
push
adc
sahf
cmp
pop
pushl
sub
push
pop
pop
jae
adc
mov
in
jne
cmp
jne
mov
dec
mov
inc
or
mov
loopne
push
aam
std
clc
cmp
pop
pop
out
stos
fidivrs
sbb
push
pop
push
pop
mov
add
movsl
dec
jne
scas
push
xchg
mov
jne
adc
rorl
cmp
xor
es
call
cld
jne
sbb
jne
das
pop
mov
pop
mov
mov
rorb
mov
ds
push
dec
cld
sbb
jg
sbb
loop
fmuls
adc
sub
mov
xchg
dec
inc
sub
les
inc
hlt
je
jmp
xchg
mov
pop
or
jmp
mov
mov
jmp
mov
cmp
jl
cmp
cmp
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
js
xchg
cmpb
jne
jmp
mov
mov
mov
mov
mov
xor
inc
jg
sbb
add
addl
rorb
je
add
mov
sti
pop
pop
or
shlb
mov
cmp
mov
mov
dec
or
mov
mov
push
cmp
xor
subl
pop
lret
cmp
inc
or
add
les
push
je
inc
adc
add
nop
pop
adc
add
js
cld
inc
jle
cmp
add
mov
jbe
cmp
std
dec
pop
or
cmp
rorl
jne
cmp
sbb
adc
jge
mov
xor
test
xchg
rorl
clc
jne
add
ja
stos
int
loopne
cmp
test
in
xor
and
jne
or
imul
mov
cmp
sbb
jge
jne
mov
push
adc
adc
push
adc
adc
lea
sbb
ds
push
adc
xor
daa
lock
imul
daa
dec
sbb
std
shl
push
lea
push
push
inc
loop
sbb
cmpsl
mov
decb
sub
sub
push
adc
push
rorb
incl
imulb
ds
push
adc
roll
das
push
push
pop
je
adc
sti
push
mov
or
pop
add
mov
push
mov
jo
pop
add
scas
push
mov
je
std
or
in
cmpsb
or
mov
mov
mov
mov
dec
jge
mov
je
mov
xchg
xorl
xor
push
shlb
sbb
dec
push
sbbb
mov
adcb
or
sti
inc
daa
mov
mov
dec
pop
xor
push
mov
cmp
push
aam
pop
fmull
and
jmp
mov
mov
je
cmp
jne
push
shl
cld
movzwl
push
inc
mov
loopne
les
mov
push
mov
cld
rcl
dec
inc
andl
inc
xor
jns
ljmp
mov
mov
jne
add
cmp
push
mov
loopne
test
cmp
je
pop
sti
pop
pusha
pop
cmp
je
test
inc
aam
jle
rorb
add
inc
cmp
mov
repnz
and
cmpl
ja
jg
mov
call
inc
sarb
cmp
je
lea
mov
cmp
je
movzbl
pushl
push
jmp
mov
movb
movzbl
inc
cmp
jle
inc
inc
mov
pop
pushl
mov
push
loopne
push
stos
decl
mov
push
inc
fildll
xor
mov
mov
sub
push
mov
add
jbe
push
inc
aaa
jbe
xor
neg
shlb
and
test
add
mov
ljmp
out
fiadds
cmpl
mov
mov
lea
cmp
dec
enter
mov
mov
mov
fcoml
rorb
sbb
out
inc
lea
mov
mov
push
out
cmp
je
movzbl
sarb
lret
lea
push
fsubl
sti
out
incl
add
push
fmull
adc
lret
roll
cmp
cmp
loop
mov
shrl
cmc
std
sbb
sbb
jg
xchg
rorl
ds
mov
adc
rorl
and
dec
push
ss
pusha
rcrl
mov
mov
mov
mov
clc
adc
cmpsl
mov
mov
addb
xchg
rcrb
mov
jmp
pushl
dec
jne
pop
pop
js
cmpsb
pop
lahf
je
xor
adc
imul
lret
lea
mov
in
push
mov
pop
les
jno
jnp
ja
enter
lret
jmp
add
inc
add
xorb
or
cmp
pop
shrb
mov
jo
roll
and
roll
inc
dec
dec
aam
mov
add
ret
aaa
cmp
xchg
sbb
push
or
add
aas
cli
mov
mov
mov
shl
pushl
call
mov
mov
imul
pop
scas
dec
clc
lea
jb
lea
sarb
pop
mov
je
incl
cli
push
cmp
xor
rolb
lea
push
xchg
add
xchg
xorl
add
je
xor
cmp
popa
and
fdivrs
popf
jb
movb
cmpb
xchg
hlt
add
pop
je
cmpb
jle
in
test
ret
cltd
rcrl
hlt
adc
sbb
in
sbb
in
popl
in
ja
movw
mov
aad
ss
imul
add
decl
das
jne
or
cld
je
add
inc
xlat
ja
rcr
add
and
xor
cmp
xchg
pop
jne
enter
push
lock
cld
lds
cmp
es
xor
xor
xchg
push
fmull
mov
shl
ret
xor
mov
add
arpl
inc
outsl
pop
mov
lea
cmp
hlt
xchg
add
pop
lock
xor
loope
lock
in
ds
hlt
xor
aam
or
push
mov
add
mov
lea
or
dec
lea
add
jno
push
push
int3
call
pop
push
scas
pop
mov
fadds
into
add
pop
push
push
lea
inc
xor
mov
pop
lock
sub
inc
hlt
adc
pushl
mov
inc
hlt
pushl
mov
sub
add
sbb
xor
fistpll
cmp
pushl
cmp
cmp
inc
hlt
add
jge
pop
pop
minps
jg
jb
lea
lods
lea
in
cmp
out
inc
in
fistps
pop
aaa
sbb
cmp
in
mov
jo
addl
cld
inc
in
cwtl
jne
aam
add
xchg
jo
inc
sub
inc
mov
fwait
jmp
mov
mov
cmp
in
std
sbb
pushl
sar
inc
pop
add
filds
add
mov
or
lods
movsb
jg
cli
cmpb
in
pop
pop
mov
pop
pop
lcall
ret
sub
add
bnd
push
mov
test
je
mov
mov
incl
inc
decl
pushl
jne
pop
pop
ret
cmpl
mov
push
jbe
push
cltd
pop
idiv
add
mov
inc
decl
cld
incl
add
out
pop
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
mov
push
push
push
xor
cmp
out
idivb
add
decl
call
adc
mov
inc
cmp
jb
jmp
cmp
jae
ja
decl
push
add
mov
adcb
ja
dec
cmp
jne
cmp
pop
sub
jmp
mov
test
clc
aas
push
push
movsbl
cmp
push
push
mov
mov
jg
in
loop
inc
loope
clc
dec
jg
fsubr
call
add
test
je
lcall
je
sub
je
dec
je
sub
jne
loope
testl
pop
jg
pushl
daa
leave
lahf
mov
xor
cmp
jl
or
push
or
leave
ja
mov
mov
and
xor
orl
jg
fs
popf
and
movb
mov
incl
decl
xor
outsl
jne
sub
cltd
add
dec
cld
idiv
mov
cmp
jne
adc
lahf
sub
je
sub
out
mov
and
je
add
dec
jne
or
pushl
pop
leave
in
mov
lret
sti
scas
stos
pop
cmp
jg
sbb
dec
jmp
sbb
mov
enter
je
out
add
insl
adc
add
cmp
jge
leave
lahf
push
cltd
pop
idiv
cmp
xadd
push
mov
jne
push
imulb
sub
mov
jmp
jmp
mov
cmp
jl
cmp
jle
call
mov
cltd
push
pop
idiv
pushl
push
add
imul
add
jmp
inc
in
jbe
clc
insl
jg
out
sub
inc
xor
push
call
into
dec
mov
dec
je
dec
je
mov
adc
sbb
sbbl
jg
mov
add
jmp
mov
cmp
jl
jns
cmp
jg
and
pop
mov
xor
mov
pushf
loope
lret
cmp
add
push
dec
adc
jne
push
push
je
pop
aaa
cld
shrb
je
ret
je
pmaxsw
insb
mov
sub
add
push
rcll
push
out
push
xor
sub
test
jmp
jbe
mov
jg
adc
xor
cmp
adc
jl
xor
sub
push
nop
mov
push
xchg
dec
add
jge
sub
cmp
adc
aaa
movntq
push
enter
std
fcomip
jo
test
je
dec
je
dec
je
dec
jne
call
or
filds
xchg
mov
xor
cmp
mov
setne
mov
mov
fldl
andl
xchg
inc
and
mov
mov
and
pop
push
adc
mov
cmp
aaa
or
std
fldl
rolb
movsl
mov
sahf
pop
pop
jp
mov
push
push
or
int
or
jg
jmp
mov
mov
lds
es
scas
imul
insl
jne
xor
sub
push
cmp
pop
je
dec
je
mov
mov
jl
mov
loopne
popa
mov
out
filds
mov
jne
mov
push
adc
add
push
loopne
xlat
je
or
inc
or
or
out
out
loop
mov
mov
push
push
pushw
inc
loopne
loopne
jle
push
pushl
push
ljmp
sub
lock
ret
lock
mov
jg
cmp
add
cmp
pop
pushl
mov
mov
out
call
dec
test
jle
mov
mov
cmpl
jbe
mov
in
fidivrs
rorl
fcomi
inc
decl
and
inc
aaa
cmp
shll
gs
lcall
push
jno
dec
cld
aad
pop
test
je
mov
mov
ja
call
cmp
je
xor
outsb
iret
inc
inc
cmp
je
cmp
cmpb
enter
jg
mov
stc
cmpb
daa
xchg
cmp
sbb
decl
stc
dec
je
cmp
je
cmp
je
cmpsb
mov
sbb
test
pop
pop
je
cmpl
inc
pushl
lea
cmpb
je
push
mov
incl
decl
mov
mov
jnp
push
inc
decl
mov
test
sbb
int3
outsl
mov
dec
je
dec
je
dec
je
dec
jne
mov
iret
jae
bound
das
jbe
push
add
or
or
xchg
xchg
jae
push
mov
inc
add
sbb
add
adc
mov
mov
mov
dec
sub
add
add
test
cmp
jle
ret
lcall
test
cmp
je
fisttpll
cmpsb
push
pop
push
xor
inc
jle
cmpsb
pop
loopne
push
mov
ja
jbe
jne
data16
inc
add
je
fsubrl
imul
push
into
fs
push
fists
sub
je
test
pop
dec
je
adc
addb
mov
dec
push
jb
mov
push
jns
or
hlt
jg
adc
inc
sbb
mov
loop
jne
clc
in
xchg
movsbl
in
jmp
add
jmp
push
les
xchg
inc
sbb
arpl
fidivrs
adc
jmp
shlb
je
pop
ret
int3
fcoml
jmp
pop
xor
dec
dec
jmp
dec
or
sbb
sbb
into
add
adc
std
mov
jge
mov
adc
lret
jge
int3
jb
mov
daa
push
lea
clc
pop
xor
cmp
jne
or
or
dec
cmp
or
jbe
imul
pop
test
cmp
xor
mov
add
dec
adc
cmp
sbb
ljmp
loopne
xor
sti
mov
mov
jbe
and
je
cmp
je
xor
shrl
filds
pushl
leave
inc
cmp
jbe
pop
cmp
mov
mov
fstl
decl
decl
mov
sbb
jg
push
inc
por
mov
cmp
je
inc
xor
cmpb
jne
inc
inc
push
pushl
pop
pushl
movsb
fisttps
ret
out
aas
test
cld
ja
add
sbb
pop
rcr
jge
sbb
jge
std
mov
je
mov
and
dec
aad
jmp
dec
clc
cmp
mov
mov
jne
sub
mov
push
jmp
fldl
jmp
push
jbe
fldl
leave
dec
mov
pop
or
pop
maxps
subl
scas
pushl
push
pop
into
popa
ret
jno
iret
popf
mov
ret
pushl
push
sbb
leave
pop
sbb
out
push
fcomps
cmp
dec
mov
push
nop
in
xchg
inc
je
fsubrl
xor
jle
pop
push
or
push
push
mov
ja
mov
mov
or
je
orl
and
fdivs
jmp
mov
or
pop
add
mov
sbb
add
mov
psubsb
pop
arpl
rclb
inc
cmp
mov
inc
push
push
test
je
aad
ret
cltd
sub
mov
pusha
aas
lock
call
decb
mov
pushl
jge
pop
jne
mov
decl
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
clc
ja
cmp
rcrl
dec
or
sbbl
call
sbb
inc
sbb
sub
mov
xchg
inc
scas
ret
adcb
xor
push
hlt
or
lods
mov
push
push
add
ficoms
or
or
mov
pushl
int
or
or
mov
push
push
test
subb
mull
mov
je
inc
inc
cmp
jb
movsb
ret
xor
ret
push
ja
pushl
imul
and
cmp
ja
add
jmp
or
roll
mov
lea
mov
test
jne
jp
pushl
rorb
jl
cmp
jle
sub
cmp
ja
inc
jmp
loope
popa
or
jl
xlat
aaa
mov
add
mov
push
lea
push
std
sbb
and
add
pop
mov
jne
and
inc
jmp
es
loopne
out
pushl
fcomps
adcl
std
xchg
je
andl
sbb
jle
pop
aad
add
std
pop
inc
mov
add
xor
xchg
jnp
or
incl
add
push
or
jp
icebp
arpl
add
shr
lea
stos
cmp
je
mov
mov
sti
mov
push
mov
adc
push
mov
pop
cmp
pop
je
dec
dec
out
dec
je
pop
adc
sbb
add
roll
pushaw
and
test
das
adc
push
push
or
sbb
dec
sahf
add
inc
je
xor
outsl
jo
dec
inc
or
cld
cmp
push
testb
pop
cld
or
jne
mov
sub
sub
pushf
add
loopne
jo
inc
add
cmp
imul
push
or
jge
pop
ret
xchg
or
or
mov
mov
fbld
enter
frstor
je
lahf
pop
out
and
test
jne
test
cmp
cld
out
mov
or
jmp
cmp
je
out
pop
jnp
test
jmp
daa
aas
pusha
adc
jne
sbb
repnz
push
push
mov
pop
mov
cmp
addps
cmp
negl
jne
int
inc
pop
and
addb
or
dec
and
xlat
xchg
and
int3
xlat
add
jne
cmp
jne
ret
inc
idiv
cmpl
jne
cmpl
je
and
jae
inc
or
mov
ds
incl
les
and
sbb
push
inc
push
mov
jmp
jecxz
xlat
adc
jne
fs
push
or
add
inc
mov
testl
rolb
pop
pop
aas
sti
mov
push
pop
jmp
jo
dec
push
push
jle
in
push
test
je
add
movsb
sbb
dec
adc
and
xchg
rcll
lds
and
mov
xor
popa
mov
pop
push
cmp
jne
rcrl
fsubs
lea
mov
mov
je
lea
push
test
test
rclb
fwait
repz
or
inc
add
or
sbbl
cld
xlat
sub
jb
nop
cmp
jne
add
jl
push
push
pop
mov
cmp
je
out
mov
int
dec
xchg
xlat
nop
jmp
inc
cmp
adc
or
push
or
mov
jmp
movl
sbb
push
mov
add
leave
and
mov
mov
mov
xchg
sti
push
orb
xor
sti
addr16
movzwl
push
cmpsb
add
pushl
in
shl
call
xchg
adc
ja
ja
mov
mov
push
sbb
mov
data16
xlat
decl
and
test
je
cmpw
mov
jl
mov
ds
fdivr
sbb
add
sti
sbb
pop
push
sub
cld
inc
lea
push
push
call
sbb
push
add
xlat
adc
pop
rcrl
mov
jmp
xor
push
jg
dec
lahf
rorl
ret
movzbl
movzbl
sub
je
out
incl
mov
cmp
je
movzbl
movzbl
sub
je
xor
fisttps
dec
lcall
decl
pshufw
cmp
push
std
cmp
add
push
push
add
cmp
movzbl
nop
inc
lcall
sub
dec
fdivrp
mov
cmp
je
movzbl
pxor
fwait
cli
mov
sub
je
test
setg
lea
movl
jno
movzbl
push
repz
aaa
cmp
mov
push
xchg
outsb
inc
add
jecxz
arpl
out
cmp
lods
mov
cmp
je
mov
fstl
xchg
mov
push
mov
push
push
add
pop
ret
jle
test
or
inc
or
or
or
push
mov
push
fisttpll
or
or
ret
jle
test
or
inc
or
sbb
xchg
mov
and
add
dec
or
dec
push
nop
push
xor
paddsb
cwtl
mov
mov
cmp
mov
push
cltd
cmp
sub
dec
push
mov
or
push
adc
fs
imul
test
jle
test
mov
cmp
fcoml
sub
add
sbb
cmp
push
nop
out
push
sbb
imul
add
ja
out
nop
sbb
sub
add
cmp
mov
push
nop
out
sbb
imul
inc
sbb
cltd
cmp
cmp
mov
mov
dec
sbb
movsb
cmp
push
pop
rclb
lcallw
fbstp
shll
ret
out
and
cltd
sti
incl
iret
add
cmp
ja
out
push
jmp
in
inc
in
jp
in
cmp
scas
in
mov
sub
add
and
push
je
xor
ja
cltd
scas
out
out
cs
fs
adc
inc
call
call
cmp
and
add
lea
add
ljmp
lret
mov
std
out
mov
cmp
mov
sub
and
mov
dec
in
push
xorb
pop
out
out
ret
xor
out
out
mov
popa
mov
inc
lock
mov
sub
mov
out
mov
dec
icebp
rcrb
repnz
leave
add
out
or
cmp
mov
inc
add
jae
mov
mov
dec
cmc
push
add
adc
push
div
imul
div
in
inc
cwtl
mov
clc
cmp
test
cltd
cmp
sub
cmp
dec
stc
stc
push
mov
cld
push
cli
cli
cmpsb
jmp
sti
sti
and
pop
pusha
mov
mov
cmp
je
xor
add
pop
jns
xchg
xor
std
sbb
inc
call
mov
decl
mov
decl
popa
shll
adc
jg
and
mov
cmp
je
jge
inc
mov
in
inc
cwtl
and
xchg
sbb
sbb
sbb
into
clc
orb
out
inc
out
fidivl
nop
fsubr
and
inc
jno
loop
sbb
int
cmp
lret
ss
and
xchg
xchg
clc
incl
decl
jmp
adc
enter
ret
in
dec
in
mov
mov
lcall
push
fistps
imul
inc
out
cmp
mov
mov
mov
mov
add
lret
inc
dec
mov
push
lret
pop
push
xchg
nop
lret
mov
std
adc
repz
mov
mov
and
mov
movsb
fstps
mov
mov
mov
jbe
div
cmp
mov
mov
pop
dec
cmpsb
jae
mov
lret
adc
nop
pushw
lret
icebp
cld
imul
mov
mov
cmp
inc
sti
mov
mov
mov
iret
push
xchg
or
push
adc
movsb
leave
data16
mov
movsb
fdivrs
es
test
nop
incl
iret
mov
cmp
lods
loop
mov
xor
outsb
not
lods
jecxz
inc
jbe
push
fcomps
push
mov
push
lods
xchg
mov
cmp
inc
push
movsb
out
sbb
xorb
mov
inc
in
or
dec
push
push
sub
push
mov
add
ljmp
nop
mov
loopne
adc
idivl
ret
rcrl
mov
xor
add
out
cmp
mov
ss
out
push
and
mov
inc
ss
push
pop
mov
int
push
mov
stc
and
in
dec
out
repnz
mov
sbb
into
sbb
mov
mov
stos
push
push
mov
mov
push
push
mov
xor
ja
mov
cmp
mov
sbb
into
sbb
mov
mov
and
push
add
mov
push
push
mov
nop
sbb
xchg
adc
mov
or
and
fsts
and
jbe
push
mov
mov
mov
cmp
je
orb
loope
inc
loope
loope
loope
mov
popf
sbb
add
lods
sbb
div
jmp
mov
push
add
mov
mov
cmp
sub
movsb
leave
mov
incl
nop
or
lcall
decl
fbld
mov
cmp
mov
test
jnp
div
sbb
mov
push
lcall
cmp
xchg
mov
mov
inc
in
mov
ss
out
je
adc
inc
push
push
lcall
decl
fbld
mov
cmp
mov
insb
pop
inc
js
cmc
adc
int
lret
push
cmp
xchg
mov
mov
cmp
mov
ss
out
pop
and
nop
inc
aas
push
lcall
popa
inc
lcall
push
lahf
loopne
cmp
mov
ss
cmp
and
nop
inc
mov
lcall
decl
lcall
jmp
test
aad
ljmp
mov
xchg
testb
cli
inc
add
decl
incb
pop
wbinvd
stc
stc
inc
add
std
inc
add
icebp
inc
add
inc
add
jg
xor
inc
repz
inc
add
clc
inc
add
cld
inc
add
xor
add
cmp
inc
add
testl
scas
sti
inc
add
inc
and
fbstp
xchg
jae
mov
push
push
mov
mov
sub
leave
leave
fcos
je
dec
je
ja
cmp
stos
inc
or
and
repz
xor
xor
mov
movzbl
sub
je
xor
addr16
lea
jg
out
decl
mov
pop
add
inc
lcall
cmpsb
cmp
out
sub
add
jo
cmp
add
jle
mov
add
add
fsts
dec
testl
add
test
and
int3
je
adc
aaa
idivb
jo
cmp
out
lret
or
or
and
or
inc
mov
and
loop
sbb
cs
jo
cmp
or
or
cmp
mov
or
out
cmp
ja
mov
pop
pusha
cmpsb
jg
adc
jno
int3
jne
adc
sub
sub
out
sbb
dec
adc
or
add
pushf
adc
out
or
je
pop
jo
and
idiv
sbb
adc
jno
jo
sub
in
lret
cltd
dec
adc
nop
adc
inc
inc
add
rcll
ja
cwtl
jmp
inc
mov
xchg
cltd
outsb
in
cmp
sbb
jb
and
into
push
mov
xorb
push
nop
rcrb
lcall
je
mov
cmp
je
sub
lcall
jne
sbb
sbb
pusha
push
push
movsl
movsb
imul
cmc
jmp
jecxz
and
ret
sub
cmp
jae
add
out
clc
mov
xlat
jmp
aaa
icebp
jmp
push
in
push
in
jno
mov
push
in
xlat
popf
cld
test
sbb
pslld
cmpb
mov
in
mov
mov
out
fwait
in
pop
aas
dec
fsts
sbb
jne
negl
jle
call
push
sub
adc
das
xor
orb
dec
daa
dec
bound
sub
sub
out
push
ljmp
icebp
push
jmp
add
cmp
iret
ret
mov
in
cmp
in
sub
mov
pop
dec
es
and
es
and
push
jle
cmpl
cmp
fcoml
sub
lods
jmp
invd
dec
pusha
maxps
and
mov
sub
push
repz
leave
std
sbb
push
insl
pop
jo
sub
or
cmc
and
dec
and
push
mulb
int3
in
bound
pop
push
mull
popl
and
push
clc
cmp
push
clc
xlat
mov
adc
insl
stc
mov
mov
lock
push
jo
xor
and
mov
push
sti
and
mov
cmp
sub
sub
sbb
xor
test
jne
mov
push
std
in
mov
jo
push
fcomip
adc
sbb
xor
jmp
inc
decl
mov
aas
nop
adc
add
cmp
pop
or
adc
jecxz
adc
push
leave
xchg
jae
mov
hlt
and
nop
es
fdivr
and
xor
xchg
and
push
out
push
out
sub
scas
in
or
mov
in
add
add
lods
fsts
jle
andl
mov
mov
push
jo
or
and
popf
and
in
ja
fmuls
out
cmp
mov
scas
in
xor
in
add
rcrl
and
push
and
mov
stc
fcomip
cmp
mov
mov
mov
mov
daa
push
inc
lcall
pop
and
and
cli
fldl
mov
cmp
scas
in
je
outsb
or
xor
sub
out
clc
push
add
pop
mov
and
out
insl
cs
cmp
ret
mov
cmp
push
or
mov
add
in
and
xchg
sub
mov
mov
cmp
inc
and
test
jle
mov
sti
adc
loop
push
loop
loop
mov
pop
daa
icebp
idiv
jecxz
sub
popa
int
shlb
sub
pop
pusha
ret
lcall
xchg
push
out
xor
bound
std
bound
imul
inc
sub
sbb
in
and
sub
xor
mov
ljmp
pop
pusha
cmp
daa
into
in
lret
mov
fsts
or
fldl
out
cmp
mov
inc
daa
mov
in
lret
mov
and
lods
fsts
xchg
jmp
or
cmp
mov
fcoml
daa
mov
and
jae
sub
jle
orl
or
add
cmp
cmp
sub
and
jo
mov
pusha
das
mov
mov
and
push
cli
cmp
push
cmp
daa
push
cmp
jne
sub
or
sub
mov
jg
das
and
mov
cmp
je
pop
ja
mov
dec
je
decl
jne
jmp
mov
cmp
push
enter
loope
loope
shl
mov
sub
loop
inc
scas
and
mov
inc
loope
pop
fadd
imul
in
mov
xor
push
ss
stos
jns
and
mov
inc
push
shlb
fdivs
mov
pop
pusha
xor
mov
sub
push
into
daa
mov
push
pop
mov
and
and
fdivs
mov
pop
pusha
xor
mov
sub
push
into
daa
mov
test
mov
and
icebp
sbb
inc
mov
mov
cmp
cmp
jo
ret
ret
xchg
sub
gs
jb
inc
add
in
push
and
stos
and
out
sub
mov
cmp
push
jp
jb
add
mov
lds
popa
jp
lock
inc
imul
jp
ret
fistps
cmpsl
push
mov
cmp
mov
mov
mov
daa
push
ss
mov
push
int
mov
inc
xor
int
mov
inc
mov
and
xchg
cmc
pusha
inc
je
adc
xor
sub
mov
movzbl
sub
je
rclb
mov
in
sbb
sub
and
gs
daa
add
mov
mull
jne
jg
stos
add
mov
add
fwait
in
push
enter
leave
mov
paddsb
movzbl
dec
orb
sahf
mov
cmp
xchg
inc
and
int3
dec
add
or
add
mov
mov
loop
dec
or
adc
lcall
les
inc
add
cmovno
jecxz
inc
add
daa
jg
xor
push
mov
or
mov
adc
shll
xor
jns
inc
aaa
dec
incl
test
inc
add
ljmp
add
jnp
inc
sar
aaa
int
pop
mov
inc
add
add
int3
arpl
mov
push
mov
push
jnp
mov
test
decl
inc
int
push
push
cmp
push
jb
lea
test
jbe
fistpll
adc
add
shlb
push
cld
jne
mov
out
stc
out
or
push
std
jne
mov
cmp
jne
mov
xor
call
cmp
jne
addl
cmp
jb
jmp
movzbl
testl
cmp
aas
jle
push
testl
dec
cld
jmp
insl
jmp
mov
mov
out
inc
adc
adc
inc
inc
incl
cmp
jb
xor
pop
push
xchg
jmp
int3
add
mov
inc
lahf
mov
pop
rcrl
icebp
lea
sbbl
mov
sbb
pop
inc
xor
jmp
jmp
push
nop
dec
add
add
stos
rorb
lea
test
rorl
and
das
sbb
add
clc
ss
shll
lock
loopne
mov
mov
mov
cmp
dec
add
or
and
outsb
nop
inc
jo
out
mov
adcb
lods
and
les
or
add
mov
sub
xchg
adc
cmp
sub
mov
mov
sbb
fucom
mov
shll
xor
cmpl
push
shll
fwait
push
gs
hlt
sbb
inc
cwtl
cmpsb
jmp
insb
mov
rorb
add
cld
out
std
and
inc
add
out
in
add
adc
cmp
cmpl
pop
cmovb
mov
jnp
stc
jl
dec
xor
mov
mov
cmp
sti
out
xchg
cmp
push
pop
pop
lcall
pusha
lea
mov
cld
inc
add
mov
add
movl
test
add
inc
mov
test
xor
mov
fcoml
pop
mov
inc
lcall
call
rcll
cmpl
adcb
ja
pop
ljmp
int3
push
push
push
push
push
cmpsl
and
mov
xor
cmp
sarb
pop
cs
adc
add
xor
dec
repnz
dec
cld
adc
push
and
call
add
ja
and
lret
adc
mov
imull
push
mov
lds
xor
push
lea
sbb
sub
jg
je
cmpl
je
cmp
jbe
lea
mov
mov
pop
adc
add
jne
jae
inc
jge
out
inc
mov
jp
sub
mov
addb
xor
mov
add
jne
mov
inc
aam
push
or
push
or
push
or
cmpsb
ret
push
push
mov
push
pop
in
add
or
inc
or
fadds
jg
add
imul
pop
pop
dec
rol
out
mov
outsl
ss
mov
mov
shr
call
pxor
jmp
mov
mov
inc
inc
inc
xor
dec
rcll
push
inc
and
push
and
mov
in
sub
and
cli
decl
test
jne
mov
mov
and
mov
cmp
je
sub
dec
lock
jns
dec
jb
mov
test
je
add
mov
sub
mov
xor
mov
mov
rep
sbb
cs
add
das
mov
add
push
lock
cs
adc
enter
push
inc
or
cs
and
mov
push
daa
mov
pushl
lea
call
mov
lea
popf
das
sub
ja
push
mov
mov
add
jmp
mov
sarl
lea
push
jb
xor
push
adc
out
decl
stc
movb
pop
jmp
xor
mov
movb
inc
dec
push
pushl
push
push
cmc
adc
jo
std
push
and
cmp
outsl
add
xchg
lea
cmp
ljmp
lock
std
xor
jmp
movzwl
and
rclb
xchg
or
rorb
xchg
inc
jne
inc
and
dec
add
add
and
and
inc
cmp
andb
cmp
push
lea
sub
and
add
sbb
or
pop
sbb
sbb
and
inc
clc
shrl
mov
mov
fsubrs
sbb
pop
jmp
xchg
push
out
push
imul
loopne
add
out
sub
inc
adc
fmuls
inc
rorb
jg
inc
faddl
xor
cmp
mov
mov
mov
je
add
push
ja
jge
rorl
add
jge
add
aaa
push
xchg
sti
aas
push
push
dec
adc
jne
cmp
movl
test
sub
fwait
cli
aas
mov
pop
inc
cmp
jle
cmp
lea
in
adc
ja
mov
adc
je
sub
sbb
jne
call
mov
cli
xchg
das
out
lods
sbb
sub
and
outsl
cmp
jge
cmp
je
lea
fsub
add
add
inc
push
idiv
xorb
je
mov
cmp
je
push
sbb
in
mov
out
pop
daa
push
pusha
mov
jmp
cmp
mov
cmp
popf
inc
and
je
push
out
jne
mov
inc
inc
ror
loopne
sub
push
push
and
mov
into
je
pop
push
jmp
cmpl
out
fmull
test
sahf
mov
inc
or
inc
loopne
sarb
pop
imul
inc
sub
inc
mov
add
jbe
sbb
std
mov
cmp
pop
adc
cmp
je
mov
push
sahf
cmp
je
out
ja
or
adc
clc
add
pop
lods
push
pop
or
std
add
inc
sarb
cmp
pop
pop
jg
lea
xor
sub
cmpb
mov
inc
adc
push
pop
jmp
pushl
das
mov
xchg
and
pop
ret
mov
ffreep
mov
ret
mov
jg
pop
les
addr16
lods
add
test
or
and
mov
push
inc
jle
enter
sbb
loop
xlat
push
push
nop
mov
dec
mov
lea
xchg
add
test
arpl
mov
inc
xchg
mov
fdivs
mov
inc
int3
mov
or
mov
mov
add
and
xchg
jl
push
je
mov
xor
js
fildll
bound
test
xor
push
pop
push
jge
jne
pop
pop
mov
cmp
pop
inc
rolb
push
pushl
ret
je
pusha
fnstsw
div
push
or
push
jbe
push
call
add
xor
inc
mov
aaa
std
sbb
cmp
cmp
mov
jne
imul
add
push
adc
je
mov
sti
popf
aam
mov
sub
push
aaa
push
icebp
inc
outsb
fsubrs
add
dec
inc
pushl
push
push
dec
inc
inc
sub
mov
jne
pop
mov
mov
jmp
or
aaa
addr16
pop
jo
push
push
pop
cmpl
sub
xor
or
roll
jge
add
mov
jmp
mov
in
mov
adc
movntps
pop
aam
test
rorl
jg
add
inc
mov
mov
jns
add
addb
jne
movl
push
mov
rclb
mov
decl
or
jl
cmp
jg
inc
jmp
xor
mov
mov
in
mov
cmp
xor
enter
add
add
out
push
cmp
jge
pop
sbb
pop
enter
pop
in
mov
nop
ret
or
mov
ja
ljmp
lahf
jmp
mov
mov
mov
xor
mov
xchg
loopne
push
sub
cmpl
pushl
hlt
call
jne
add
cmpb
or
jg
incl
inc
hlt
jne
mov
push
addl
jbe
pop
add
cltd
mov
addr16
test
mov
or
jge
fwait
pop
mov
lea
pop
mov
pushl
pop
inc
push
xchg
mov
cltd
idiv
mov
mov
sub
mov
lea
cltd
fists
incl
sar
mov
imul
ret
mov
and
mov
ret
sbb
push
sbb
lea
push
stc
jmp
add
cmpl
jne
dec
leave
cmpb
lods
sbb
cmp
adcb
pusha
or
ss
cmp
jle
sub
jmp
clc
cmc
sbb
ds
or
or
add
fdivr
add
imul
add
add
mov
dec
sub
adc
xor
push
add
sub
imul
xor
and
cld
or
rcrb
dec
jle
mov
imul
jns
addl
div
es
sbb
or
pop
pusha
pusha
cmp
add
scas
loope
out
push
jbe
pushf
das
add
outsl
inc
lahf
adc
cmp
jae
test
push
adc
xor
inc
cmp
adc
mov
xor
mov
cmp
add
negl
lods
imul
pop
sbb
adc
jge
adc
push
sbb
or
push
jmp
adc
mov
xor
push
push
push
push
pop
push
lcall
push
lret
mov
les
add
mov
cmpl
pop
jne
sub
or
std
fstpl
pushl
push
jmp
push
or
push
push
subps
mov
fisttps
push
cmp
push
pop
push
pop
movl
clc
jge
push
and
fwait
out
pop
mov
adc
movl
jnp
jge
push
push
push
sub
pushl
aas
add
pop
gs
pop
add
mov
jmp
mov
jge
cmp
jl
cmp
jg
cmp
loopne
jle
cmp
jge
mov
pop
pop
leave
ret
cmp
jl
cmp
jg
cmp
jle
cmp
jge
ja
sub
mov
sbb
pop
negl
shll
xor
cmp
shr
or
loop
popl
setl
mov
jmp
push
push
fdivp
idivb
xor
push
sbb
jne
imull
cld
adc
mov
pop
push
pop
mov
sbb
movsb
jnp
das
stos
dec
cwtl
adc
lds
inc
daa
cmp
fmull
aaa
or
mov
jbe
push
stc
dec
cmp
mov
test
pop
inc
js
push
and
dec
push
movzbl
lea
inc
cmp
sbb
and
mov
lea
inc
cmp
ja
add
jg
add
je
pop
sub
jo
loopne
cmp
adc
mov
fmuls
mov
ja
jne
popf
and
and
mov
fcmovb
jg
sbb
xor
xor
lock
sbb
or
pop
pop
jmp
push
orb
gs
aas
and
mov
movzbl
lea
adc
ljmp
adc
shrb
lock
pop
adc
mov
decl
xor
jne
cmp
orb
lcall
add
or
fcompl
leave
sbb
push
xchg
mov
sbb
pop
dec
add
or
adcl
testb
and
xchg
int3
add
je
fcomps
out
pop
pop
ret
or
je
cs
add
ret
adc
daa
jbe
fadd
pop
adc
push
and
dec
inc
push
and
jnp
mov
mov
adc
fmuls
sbb
push
and
outsl
and
push
and
push
inc
andb
and
pop
push
rcrl
or
pop
pop
out
es
jecxz
mov
pusha
xchg
aam
adc
subb
lds
jbe
es
and
stos
sbb
and
xchg
jne
std
or
subw
cmpsl
and
inc
shr
and
out
add
roll
pusha
sub
inc
push
cmp
inc
sub
cmp
or
aas
sub
pop
cmpsl
sbb
sbb
sbb
add
sub
add
and
outsb
loopne
push
push
je
adc
cmpsb
jne
push
xchg
mov
and
jmp
cmp
jbe
xchg
push
push
test
cli
pop
sub
sbb
xchg
repz
mov
jmp
decl
je
ret
addl
enter
cld
cmp
test
iret
ja
add
add
mov
lret
lock
orl
arpl
insb
pop
or
popf
pop
int
push
ja
sbb
leave
xchg
mov
setne
inc
cmp
ja
jg
inc
rcrb
push
jmp
mov
add
cmp
std
cmp
xor
je
movb
lea
fwait
or
scas
sub
neg
mov
xor
divl
sbb
cli
or
add
jmp
sbb
cld
loop
cld
fistps
push
or
push
cld
jb
cli
cmp
jb
out
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
xchg
andl
lret
or
test
jge
push
push
jmp
nop
fsub
push
push
or
fists
or
shrb
push
cmp
jge
inc
sbb
cwtl
shl
mov
and
dec
and
sub
rolb
push
inc
stos
sbb
pop
sti
push
aas
mov
aas
and
idivl
fnsave
sarb
sbb
inc
cmp
and
inc
into
std
cmp
add
cmp
ja
and
mov
divl
ficoml
ret
movb
lea
mov
sbb
push
pop
cmpsl
loope
icebp
sub
stc
or
mov
aas
sar
inc
inc
xor
inc
rorl
test
jbe
cmp
jb
xor
out
pop
push
movb
out
jle
jno
adc
fldt
jp
test
add
inc
sbb
mov
xchg
or
mov
pop
pop
leave
adc
rdmsr
sbb
jne
cmp
jg
jl
cmp
mov
adc
pop
cs
pushf
sbb
cmp
aad
push
das
sbb
jmp
cmp
sbb
sub
iret
jg
add
shlb
enter
ret
cmp
jb
mov
pop
jle
add
xchg
mov
mov
ret
sub
jmp
push
mov
push
mov
lcall
mov
notb
jne
cmp
je
lods
imul
les
je
out
call
add
pop
decl
mov
jmp
or
cmp
pop
jbe
mov
cmpb
jne
push
jmp
das
lods
into
test
je
add
mov
push
add
pop
ret
mov
lea
cmp
add
hlt
push
mov
push
push
arpl
mov
cmp
test
addr16
cmp
mov
je
cmp
ja
adc
out
pop
jmp
push
jne
cmp
and
adc
test
imul
jo
cmp
popa
push
add
jb
or
xchg
mov
mov
xchg
push
push
pop
fbstp
imul
ret
ja
mov
je
mov
cmp
je
or
hlt
or
mov
mov
mov
je
adc
arpl
push
lods
std
or
mov
jne
adc
jecxz
push
filds
lods
mov
jmp
and
jp
bound
push
imul
jmp
xor
push
xor
rorb
not
jne
cs
push
ds
push
rcr
inc
adc
jmp
mov
or
push
xor
add
cmp
and
je
push
call
mov
add
mov
mov
ret
out
xchg
or
clc
addb
test
cmp
add
sti
pop
and
jne
jne
add
ja
pop
sub
lret
je
mov
ja
cmp
jne
or
cmpsb
shll
fcmovnb
sbb
mov
dec
pop
xchg
lock
mov
adc
or
inc
in
and
adc
and
and
loop
pop
pop
mov
mov
xlat
adc
in
push
rcrl
mov
xlat
test
jns
sbb
pop
or
faddp
cmp
jp
clc
push
pop
mov
mov
jmp
les
adc
je
test
loopne
pop
sbb
icebp
shll
inc
push
mov
mov
add
shll
jbe
call
pushl
stos
fsubrl
je
inc
jae
gs
pop
push
and
add
pop
popf
jge
or
mov
jae
mov
cmpl
add
testb
notl
mov
les
or
incb
pop
and
dec
jnp
adc
cmp
mov
mov
call
adc
xor
addl
dec
cld
mov
movb
pop
jmp
push
and
and
sub
fdivr
movb
incl
push
push
lea
push
push
pushl
inc
ffreep
popa
adc
outsl
int3
cmp
jne
push
mov
decl
mov
clc
jmp
movzbl
xor
mov
or
cmpsb
shll
loope
js
add
add
dec
mov
xchg
das
jge
and
dec
cltd
sub
jge
pushl
stos
stos
ljmp
jmp
or
movzwl
inc
mov
and
movzwl
inc
cmp
jmp
add
call
lret
add
push
lea
push
lea
sarb
xchg
add
xchg
add
ja
and
sbbb
add
cltd
pop
cld
out
ficomps
movzwl
and
fsts
jg
xor
leave
jge
xlat
mov
and
mov
mov
inc
add
and
fnsave
stc
inc
cld
pushl
push
push
fsubr
cli
jnp
lret
jge
test
jbe
jae
int
enter
cmc
call
mov
xor
cmp
lock
jne
or
ficoml
enter
or
sub
cmp
je
add
and
ret
mov
push
mov
mov
lea
jle
jmp
push
movzbl
push
xor
in
dec
jmp
mov
lock
mov
inc
jmp
cmp
xchg
dec
sbb
jmp
sbb
sti
cmp
jne
adc
test
jl
xchg
je
btcl
imul
dec
adc
idivb
mov
cmp
je
cmp
adc
insb
idivl
movl
clc
adc
jne,pn
and
add
pop
jne
inc
bound
xchg
decl
mov
movzwl
test
je
movsbl
sub
jmp
test
je
mov
cmp
cmp
push
ja
sub
add
cmp
jae
addl
std
decl
or
inc
cld
jb
jne
cmp
jbe
push
add
sti
cs
test
jne
or
xor
pop
mov
imul
add
jmp
jg
mov
test
jne
and
je
jle
pop
rolb
or
sub
jne
jbe
decl
cld
fwait
adc
sbb
movl
dec
cld
jmp
mov
sbb
neg
adc
mov
inc
push
out
push
dec
fisubrs
add
rol
xor
inc
jmp
and
push
adc
xor
pop
pop
pop
popf
jb
or
xor
cmp
rcrb
mov
cmp
gs
enter
xchg
mov
add
rcl
xor
xchg
sub
and
sbb
xchg
push
ret
dec
cltd
xor
fs
jb
mov
inc
testb
inc
mov
cmp
or
and
mov
or
sub
jl
mov
cmp
jne
adc
inc
mov
pop
aam
rolb
rcr
sub
enter
and
push
mov
mov
mov
and
pop
inc
cmpl
sbb
mov
jne
adc
jg
icebp
cs
les
push
orl
sub
ja
mov
je
adc
and
xor
in
idivl
and
adc
sbb
jne
and
or
dec
dec
or
push
mov
push
push
mov
decl
sub
mov
adc
sbb
movzbl
inc
inc
test
icebp
sub
jmp
data16
decl
shrl
sbb
mov
lea
cmp
fwait
jb
adc
cmp
in
jb
ja
mov
cmp
ljmp
call
inc
lock
cmp
jne
xor
cmp
jb
ja
cmp
out
divl
jbe
sub
clc
in
pop
mov
adc
mov
mov
inc
hlt
jne
hlt
push
pushl
pushl
out
ljmp
add
fdivl
leave
add
adc
mov
mov
mov
mov
incl
fistl
nop
jbe
sub
add
mov
or
pop
hlt
ja
jb
cmpl
ja
cld
std
dec
push
cmp
jb
ja
pushl
add
jmp
cmp
push
or
dec
hlt
jmp
adc
dec
andl
mov
jmp
sbb
scas
push
pop
mov
and
lock
std
or
roll
neg
fwait
dec
hlt
cmpb
xor
pop
and
push
hlt
xchg
test
jb
sbb
popf
insb
add
sbb
lds
ret
int3
ja
jg
out
push
push
push
mov
or
je
mov
pop
mov
mov
jmp
repz
mov
je
or
je
add
add
cmpsb
sti
incl
cmp
jb
cmp
ja
add
cmp
or
cmp
jne
sub
lock
xor
cmp
je
mov
neg
mov
pop
pop
pop
mov
stos
push
pop
mov
cmpb
mov
ja
add
icebp
mov
adc
lock
mull
fstl
enter
add
jmp
mov
jb
push
and
mov
shr
rcr
shr
rcr
or
jne
div
mov
and
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
dec
mull
xor
or
or
fisubl
mov
mov
sarb
adc
in
hlt
mov
adc
lret
jne
inc
mov
adc
pop
test
das
stos
cmp
or
je
push
dec
test
or
clc
punpcklbw
aas
mov
cmp
fs
sub
add
add
repz
jmp
sub
add
arpl
addl
and
cli
ss
les
inc
adc
add
icebp
and
adc
sahf
bound
fidivl
add
roll
loope
dec
push
push
push
push
xor
push
mov
cmc
adc
call
adc
push
push
push
push
call
cmp
clc
je
test
add
cmp
pop
sar
je
sbb
push
push
aad
sub
pushl
or
ljmp
mov
jne
je
cld
cli
jge
pusha
insb
cmp
add
fs
mov
pop
enter
icebp
pusha
jp
pop
pop
jmp
and
adc
mul
fildll
add
cmp
je
inc
inc
fdivs
scas
add
pushf
push
and
jecxz
dec
inc
outsl
mov
push
push
push
ret
add
test
outsl
and
add
xor
inc
cmp
daa
add
and
std
mov
je
mov
andb
sbb
adc
inc
push
or
subl
cmp
mov
lods
popa
adc
inc
and
jge
cld
aas
cmp
jne
push
dec
cmp
pop
je
cmp
je
mov
add
es
and
adc
mov
je
loopne
jle
cmp
ja
lea
sbb
clc
loopne
and
sbb
jmp
sbb
cli
outsl
in
jge
je
scas
clc
jae
inc
std
adc
push
push
bound
bound
adc
mov
lea
cmp
std
inc
lock
jle
cmp
or
loop,pt
sbb
push
sbb
fdivrl
ffreep
cmpsb
add
add
ret
dec
jle
fsubr
add
fbstp
sbb
ficoms
les
mov
lea
into
adc
push
call
dec
cmpsl
call
push
cmpw
push
cmpw
scas
mov
push
lods
mov
add
into
mov
jmp
lea
pop
pop
pop
mov
bound
les
adc
leave
mov
imul
aam
mov
jae
scas
jo
xorb
scas
add
dec
and
jne
mul
addr16
out
xor
loope
fs
add
loope
and
add
pop
sbb
scas
arpl
or
sub
adc
fwait
cmpb
xor
cmp
icebp
call
and
jne
push
mov
sbb
call
or
add
inc
mov
mov
push
add
cmp
jle
mov
jg
or
iret
jne
or
xchg
sub
pusha
inc
add
mov
cmp
jle
mov
mov
and
rorb
push
sbb
adc
jge
out
mov
hlt
pop
push
inc
fisttps
stc
jle
rcrl
icebp
pop
xor
inc
cmp
jne
hlt
mov
out
jbe
sarl
test
xlat
es
out
jne
jne
push
pop
popf
mov
insl
femms
clc
out
test
inc
adc
push
jmp
pop
xchg
adc
jbe
mov
jle
cmpl
add
call
lea
je
mov
test
je
push
cmc
call
mov
cmp
jb
cmp
jbe
inc
lret
call
pop
inc
inc
out
sbb
sub
aad
mov
out
nop
jae,pt
outsb
mov
cmp
cmp
jbe
jmp
jge
mov
aad
jne
push
push
jecxz
adc
test
sub
incl
test
mov
jg
pop
jge
divl
lea
cmp
ja
test
sbbl
push
scas
in
aaa
fdivrl
pop
mov
jmp
loopne
cmpl
je
cwtl
lcall
or
sbb
push
std
leave
cmp
lcall
je
jle
leave
xor
cmpb
adc
cld
test
je
loop
and
orb
push
xor
cli
in
je
iret
push
pushl
lcall
test
popa
shlb
mov
mov
mov
cmpsl
sbb
cli
test
sbb
xchg
sti
xchg
cmp
pop
je
je
fnstcw
pop
icebp
lea
fdivrl
and
mov
xchg
std
jmp
sbb
gs
sub
and
add
test
roll
pop
scas
insb
xor
xor
and
in
inc
and
fstpl
and
mov
je
das
ret
pop
mov
lea
sbb
push
adc
pop
pop
add
pop
and
in
test
pop
mov
xor
not
push
enter
aaa
call
xor
ret
rorl
dec
adc
lret
jne
fistl
or
incl
mov
jmp
pushl
pop
push
push
shrb
aaa
aaa
stos
pop
xor
in
or
xor
mov
cmp
push
loopne
push
pop
push
pushf
dec
pop
cmp
or
call
push
jmp
push
aas
sbbl
mov
enter
mov
cmp
je
test
je
outsl
mov
aas
sbb
mov
sub
add
dec
or
neg
ret
push
jmp
xor
test
mov
jne
mov
ret
cmp
je
add
inc
cmpl
jne
push
push
inc
push
adc
clc
dec
jne
mov
fists
imul
fistps
pop
mov
test
add
or
add
mov
pop
cld
lock
push
mov
push
shr
adc
inc
or
adc
mov
lock
jmp
cmc
scas
mov
je
push
add
cmp
pushl
dec
inc
hlt
je
cmp
je
xor
cmp
mov
decb
xchg
sarl
cld
pop
dec
dec
clc
jne
std
ja
add
pop
mov
pop
or
and
sbb
or
outsb
add
je
int
pop
xchg
xor
insb
adc
pop
clc
jne
push
push
insl
or
mov
inc
je
mov
aas
jne
sbb
sbb
mov
test
jge
fstl
jns
cmp
inc
sar
adc
jl
cmp
je
lea
xchg
insb
push
clc
pop
jne
adc
sbb
mov
jge
ret
cmp
inc
add
in
inc
lea
cmp
jne
xorl
push
push
in
inc
in
aaa
icebp
jbe
xchg
cmp
je
jmp
stos
adc
fists
cmp
jge
neg
lea
icebp
sub
xlat
push
cmpl
inc
inc
push
push
cmp
test
outsl
sub
fbld
mov
lea
mov
ss
or
in
js
jne
inc
imul
jbe
pop
je
call
pop
out
or
stc
popa
or
decl
sub
add
mov
inc
in
pop
dec
xor
jle
push
hlt
xor
adc
paddq
in
pop
iret
pop
dec
cmp
je
mov
mov
arpl
pop
push
inc
lock
pop
adc
sub
pop
jmp
cmc
fwait
dec
or
in
cmp
dec
jmp
push
push
mov
aam
cld
imul
cmp
pop
pop
je
stos
inc
and
es
add
sbb
test
outsb
or
stos
xchg
mov
jne
xor
jmp
push
mov
cmp
jne
pop
cmp
cmp
pop
pop
jmp
incl
mov
testb
je
inc
mov
cmp
je
movzwl
movzbl
filds
cmp
jne
dec
jmp
movzwl
cmp
je
inc
movzbw
out
mov
movl
cmp
ret
pop
push
adc
push
xlat
jmp
push
adc
push
loopne
hlt
adcl
lea
pop
ret
leave
call
adc
fs
xor
push
mov
shl
mov
lahf
inc
rclb
je
mov
add
cmp
je
jmp
adc
test
je
insb
jmp
fcoms
ret
shl
lcall
fmuls
rorl
add
ja
hlt
stc
xor
xchg
iret
xor
add
and
xchg
jne
and
jne
or
ffree
and
push
sarb
out
pushf
inc
cld
cmp
je
xchg
cmp
je
test
je
dec
rcr
inc
mov
faddl
aam
mov
pop
pop
mov
aaa
ret
lea
push
cld
shll
jmp
fdivr
and
jmp
jmp
add
jmp
jmp
ss
ret
jmp
ficoml
in
mov
and
add
mov
fwait
stos
ficoml
jmp
stos
push
in
and
push
push
cmp
and
jmp
push
cmp
and
stos
jmp
pop
push
in
sub
mov
test
and
mov
and
and
adc
mov
and
aam
and
push
mov
jmp
sub
jbe
and
fmuls
and
adc
sub
insl
add
jbe
and
and
jmp
mov
and
and
add
jmp
push
inc
sbb
and
adc
and
jmp
mov
and
and
mov
and
data16
jne
sbb
sarb
ss
jg
fadds
and
or
add
call
and
into
jg
mov
addb
jg
stos
jo
inc
add
insb
inc
add
test
add
inc
sti
aad
add
incl
sub
dec
gs
gs
xor
cs
add
je
or
inc
decl
dec
outsl
arpl
gs
jne
arpl
filds
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
gs
je
push
jb
arpl
mov
jae
add
push
imul
insb
outsl
arpl
add
push
jb
push
and
fnstsw
gs
outsl
jb
add
dec
jne
gs
push
add
push
inc
outsl
insl
insl
popa
outsb
fs
imul
add
add
add
add
mov
jb
js
je
add
insl
jae
outsl
jg
jb
shll
je
insl
and
jb
jb
add
or
dec
add
fucomip
dec
push
push
adc
add
dec
inc
add
mov
dec
inc
dec
dec
adc
or
popa
mov
jo
imul
and
jae
insl
popa
fs
je
gs
jo
inc
jmp
je
and
and
and
jg
imul
idiv
fwait
jb
arpl
or
gs
jae
and
outsb
je
arpl
cmpb
pop
daa
jae
jae
jo
outsl
jb
gs
mov
and
inc
gs
or
std
scas
and
rolb
lahf
xor
fidivrs
pop
dec
push
dec
dec
pusha
mov
jne
out
xchg
imul
insl
bound
fs
imul
out
mov
imul
imul
push
out
imul
bound
jg
jns
fstpl
or
and
and
insl
outsl
jae
and
gs
jg
pop
add
jae
insb
je
outsl
data16
insb
insb
insb
lcall
sub
jo
insb
gs
das
arpl
and
outsb
arpl
mov
or
popa
xchg
outsb
jae
jb
arpl
cld
add
insb
insb
dec
popa
imul
divl
outsb
outsl
je
outsb
outsl
jne
push
arpl
inc
inc
fcoms
test
xor
pop
inc
js
xor
das
sti
inc
mov
mov
je
outsl
add
outsb
arpl
packuswb
xor
dec
lahf
pusha
fs
mul
pusha
pop
xor
jne
popa
bound
and
push
jnp
aaa
or
pusha
out
daa
inc
jecxz
imul
mov
ss
xor
xor
and
popa
or
dec
pusha
fwait
mov
and
jbe
cmpsb
gs
das
push
push
and
clc
outsl
aaa
add
xor
pop
imull
outsb
pop
negb
out
cmpsb
outsb
jae
pop
fs
arpl
pop
xchg
inc
and
jo
xor
aaa
ret
popf
dec
pop
jne
mov
jbe
je
sub
das
pop
xor
sti
pusha
xor
popa
je
orb
xchg
hlt
jb
jno
gs
mov
xchg
in
shlb
imul
adc
jne
jne
addl
popa
repnz
jnp
outsb
mov
pusha
adc
outsb
je
sub
or
add
jb
lea
jae
imul
imul
mov
outsl
imul
mov
fs
incl
add
arpl
jae
data16
push
imul
lsl
sahf
add
ja
mov
jg
cs
jb
addr16
outsb
popa
xchg
jne
imul
cmp
outsl
ja
ja,pt
inc
cmpsl
and
or
cmp
js
adc
lock
add
fs
rorl
jle
das
dec
inc
push
dec
inc
dec
mov
dec
pop
fdivs
add
outsl
pop
inc
insb
jae
ljmp
pop
push
gs
popa
insb
jne
or
xchg
cmp
or
xchg
insl
inc
test
xor
gs
push
inc
push
dec
pop
dec
fadds
inc
aad
insb
push
into
std
ja
nop
pop
inc
outsb
fs
jo
outsb
inc
outsl
les
and
pop
es
outsl
ja
jmp
notl
gs
bound
dec
jb
fisttpll
dec
popa
jae
inc
insb
neg
xor
jne
add
cmovbe
dec
jb
addr16
outsl
js
add
inc
push
test
dec
inc
pop
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
dec
dec
inc
or
icebp
repz
inc
push
pop
inc
push
pop
pop
dec
sbb
pop
inc
dec
dec
dec
inc
push
inc
or
add
mov
std
fbld
add
mov
pop
or
and
inc
add
int3
inc
add
stc
inc
jle
lret
xor
movl
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
lcall
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
aas
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
lcall
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
inc
adc
jg
pop
cs
aaa
pop
xchg
out
insl
xor
add
or
jnp
add
add
orb
movntps
xchg
jge
add
add
xor
rcrb
inc
pop
cmpb
aas
or
js
pop
add
mov
aaa
test
fadds
add
pop
pop
cmpb
aaa
test
adc
aaa
dec
pop
add
add
cmp
adc
lock
add
mov
or
mov
add
test
decl
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
ljmp
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
dec
leave
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
push
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
ljmp
mov
and
mov
ljmp
jg
insb
xchg
inc
test
aas
stos
sub
test
dec
dec
cmp
sbb
push
add
and
jmp
aaa
and
and
dec
dec
das
fs
jns
sub
push
dec
add
inc
add
insl
bound
add
jbe
dec
arpl
push
gs
adc
mov
cmovno
jne
je
add
insb
inc
dec
stos
out
sbb
lahf
dec
inc
jo
imul
bound
inc
cld
inc
bound
popa
and
iret
jne
out
pop
add
push
add
out
jbe
ja
outsb
add
jns
inc
pop
jb
cmp
dec
popa
outsb
jle
out
add
je
jb
sbb
imul
jae
push
sti
inc
add
push
gs
gs
jmp
jg
dec
outsl
outsb
push
add
pop
popa
je
inc
jb
add
mov
add
add
pop
add
jo
push
dec
push
hlt
popa
insl
das
jo
jne
aad
xchg
fs
gs
imul
mov
and
outsb
andl
filds
je
sub
popa
add
pushf
test
jb
scas
mov
pop
rcrb
insb
outsl
jbe
imul
jo
gs
out
jg
jb
outsl
sub
jb
arpl
outsb
popa
cmp
and
jne
lcall
outsb
gs
jp
popa
insb
popa
outsb
add
outsb
addr16
aaa
jbe
adc
push
orb
ss
and
popa
imul
outsb
addr16
arpl
mov
aad
and
jae
decl
jne
jae
imul
jae
sub
out
arpl
jo
outsb
pcmpeqd
gs
gs
mov
pcmpeqw
sahf
cpuid
xchg
in
into
iret
and
add
gs
pop
data16
jb
addr16
xchg
popa
outsb
popa
insl
pop
movd
add
inc
and
fstl
insl
gs
outsb
seta
lock
fs
popa
mov
or
mov
inc
gs
and
insb
nop
mov
sti
jbe
outsl
jb
arpl
xchg
std
mov
popa
outsb
and
jo
bound
ja
incb
jnp
outsl
and
scas
arpl
outsl
insl
bound
lds
out
daa
push
popa
out
punpckldq
imul
outsb
je
rcll
sbb
jae
sub
out
popa
jp
insb
imul
ja
addr16
outsb
jns
cwtl
imul
jae
add
adc
imul
ja
dec
jb
xor
popa
ds
iret
imul
mov
pop
addr16
popa
outsb
push
add
insb
jne
jmp
fwait
loope
jne
push
adc
push
scas
imul
adc
jb
mov
lret
incb
data16
outsb
arpl
cmova
dec
popa
fs
sbb
mull
insb
aam
add
jae
pop
pop
lock
xor
leave
and
jns
imul
cmp
push
xor
cld
xchg
cmp
arpl
imul
jae
das
mov
mov
jp
data16
sbb
pushf
loope
inc
dec
jbe
fs
adc
fiadds
ja
je
lcall
sbb
adc
popa
decl
or
push
daa
jae
insl
jo
imul
rorl
imul
pushf
fstpt
push
jae
mov
jne
outsb
add
fsubrs
add
gs
outsb
sub
fsubs
and
pop
xchg
roll
xchg
inc
push
sti
inc
dec
push
add
mov
pop
dec
dec
inc
add
inc
add
dec
dec
add
dec
add
dec
push
add
pop
adc
out
jae
sldt
pop
dec
dec
add
rolb
inc
dec
push
add
jns
jae
inc
enter
pop
inc
add
add
add
dec
add
add
dec
inc
push
jns
push
add
push
add
add
push
add
jg
or
iret
inc
add
inc
add
inc
add
in
inc
push
dec
add
push
add
movsb
fwait
inc
push
jns
add
add
dec
inc
mov
pusha
dec
push
push
add
push
add
stc
out
sub
add
push
inc
add
inc
push
push
add
into
push
jns
or
loopne
dec
add
dec
add
inc
add
js
xchg
inc
push
inc
add
push
dec
add
inc
push
jns
add
dec
add
add
cmp
testl
add
pop
push
add
push
add
jl
enter
mov
add
cwtl
repnz
inc
push
add
push
add
push
push
inc
add
push
add
out
repz
dec
add
pop
pop
push
pop
aaa
fistpll
dec
dec
inc
add
dec
inc
add
pop
dec
sarl
enter
aas
sbb
stc
jmp
fwait
or
push
dec
add
push
dec
add
int3
inc
add
inc
add
iret
jge
mov
bswap
pop
bswap
jge
mov
dec
scas
ja
sysret
jg
cltd
cwtl
cmpsl
mov
or
adc
add
or
add
add
adc
or
add
dec
dec
popa
test
leave
dec
jmp
add
push
test
pop
cs
in
xor
xchg
pop
mov
mov
out
stc
mov
mov
push
sub
push
adc
and
cmpb
nop
dec
rcr
inc
pop
or
cmpsb
aas
xor
jg
add
inc
push
sub
lret
leave
inc
mov
inc
add
add
mov
add
pop
imul
je
pop
push
gs
jo
xor
bound
xor
xor
push
add
jmp
outsb
cmp
xor
xor
jne
jo,pn
scas
or
xor
pop
shlb
add
add
jo
add
cmp
int
push
xchg
mov
sbb
adc
pop
ljmp
jae
add
add
add
test
mov
shlb
sbb
or
dec
pop
pop
mov
std
sub
inc
add
add
pop
pop
testb
aam
dec
pop
aas
fdivs
in
pop
inc
add
clc
or
pop
inc
add
add
out
rolb
add
jae
test
pop
addr16
add
add
pop
fsubrs
pop
pop
shrb
add
and
sti
jmp
add
inc
push
fld
push
lods
outsb
aas
pop
pop
jno
and
inc
shlb
jb
int3
std
sbbb
inc
add
add
in
xchg
or
push
fld
jle
xchg
test
aas
inc
test
mov
fs
or
pop
outsl
pusha
or
mov
fistpll
fs
mov
or
adc
lods
aaa
pop
pop
fldenv
sbb
mov
mov
mov
loopne
adc
mov
stos
imul
jg
sub
pop
fstps
sub
push
mov
xchg
pop
lahf
jmp
ret
ret
ret
xor
in
int
fnstcw
test
clc
jo
jg
jns
sub
add
into
iret
add
pop
jne
add
push
cmp
or
adc
or
inc
add
scas
imul
adc
sbb
adc
mov
imul
cmpsb
imul
inc
add
cmpsb
imul
push
cmp
pop
and
and
in
mov
insb
pop
cmpsb
jmp
scas
in
pop
jp
dec
pop
cld
call
aam
pop
add
push
out
mov
xorl
or
popa
push
lea
fs
push
in
mov
nop
push
fs
push
xchg
xchg
xchg
jae
push
inc
xor
push
cmpsl
mov
idiv
orb
sbb
aas
add
add
pop
insb
test
or
pop
inc
gs
xchg
aas
pop
cmp
jbe
js
fsubp
add
cmp
ljmp
add
loope
stos
mov
fiadds
adc
mov
sti
ficomps
testb
cmp
jecxz
sahf
push
xchg
adc
sti
pusha
mov
xor
subb
ljmp
add
pop
and
out
push
inc
pop
pop
pop
pop
jnp
idivl
movlps
pop
xor
test
jae
shll
dec
pop
shlb
pop
pop
outsb
xor
inc
ret
add
and
hlt
dec
call
adc
outsl
lahf
sti
or
or
into
xor
pop
pop
xlat
pop
pop
sbb
testb
lods
inc
add
fadds
outsb
add
add
and
pop
push
mov
insb
add
pushf
fstps
nop
int
pop
add
add
test
push
pop
add
inc
or
pusha
sbb
add
hlt
inc
add
add
movsb
mov
inc
mov
cmpsb
filds
popf
or
inc
jle
pop
inc
js
inc
cmp
mov
mov
cmp
add
pop
mov
das
inc
out
outsl
push
mov
mov
in
call
rcr
push
pop
jle
xor
mov
ficompl
and
pop
fisubrl
stc
js
aas
fs
rcr
fsubp
stc
add
xor
pop
push
mov
add
sub
mov
add
aaa
sub
cwtl
push
xstore-rng
cmpsl
addb
sbbb
or
pop
les
loop
inc
loopne
push
cli
inc
add
out
cltd
addb
orb
sbb
push
mov
dec
sar
and
mov
inc
add
dec
shll
jo
pusha
pop
shll
sub
dec
shll
adc
aaa
dec
shll
or
cld
lret
inc
shll
fsubrs
shrb
cmpsb
jmp
enter
lods
mov
xchg
nop
mov
lcall
test
pop
sti
inc
add
add
mov
inc
inc
cmp
popa
iret
add
out
dec
add
aam
lds
push
sbb
stos
push
xor
or
aas
shlb
cld
inc
add
cmp
cmpsl
dec
xchg
pop
xchg
sub
stos
add
cli
xorb
jl
ror
add
mov
in
out
out
xor
daa
push
mov
and
inc
inc
add
pusha
repnz
add
dec
cmp
test
jae
add
cli
test
push
gs
inc
adc
sub
and
mov
add
and
push
and
cmp
cmp
add
mov
pushf
lds
xor
jge
sub
adc
jo
data16
mov
inc
and
ret
pop
outsb
jo
into
testb
pop
sub
lret
in
push
pop
js
ror
cmpl
mov
sub
jmp
or
sbb
ljmp
outsb
cmpb
sarl
mov
push
das
mov
jmp
fcoml
incl
jno
jo
add
aam
cmp
outsb
cli
or
mov
mov
add
cli
or
in
ljmp
enter
push
pop
cmp
stos
pop
ud0
incl
daa
push
test
call
xor
rcl
scas
ja
cwtl
cmp
arpl
jge
incl
in
xlat
fldt
inc
sub
jg
addr16
push
mov
repz
sbb
decl
mov
ss
pop
hlt
test
cmp
mov
in
enter
movsb
and
decl
lret
repnz
shr
add
xor
dec
aaa
or
aam
in
and
lock
mov
enter
das
ja
cmpsb
stc
cmc
sub
cld
jo
dec
or
xchg
mov
mov
call
jmp
sbb
loop
ret
cwtl
mov
xlat
add
and
call
mov
xchg
xor
outsl
ud0
jg
sahf
sub
leave
xchg
imul
pushf
in
stos
inc
sub
add
movsl
pop
pop
mov
call
in
mov
adc
pushf
imul
les
rorb
shll
and
fcmove
cmpsl
inc
add
and
pusha
pop
fnstsw
inc
es
pop
pop
aas
mulb
jmp
out
mov
enter
mov
test
push
fwait
jns
jge
dec
cmp
xor
cmpsb
dec
test
dec
push
pop
xlat
lcall
cmp
push
fisubs
xlat
out
mov
lcall
insb
inc
jl
jne
jge
fs
outsl
inc
cmc
push
jg
add
mov
into
movsl
decl
dec
and
fwait
adc
hlt
xor
jg
mov
test
dec
es
call
movsb
aaa
test
sbb
inc
push
mov
pop
pop
cs
inc
jbe
dec
and
inc
pop
mov
mov
jb
repnz
sub
jmp
pop
sbb
movsl
decl
pop
leave
pop
push
int
pusha
mov
cmc
je
rcrb
sbb
rcll
dec
rcr
ror
dec
dec
inc
sub
xchg
adc
mov
stos
dec
pop
push
lods
pop
xor
orb
call
mov
sarb
out
cmp
jne
stc
int3
mov
aaa
rclb
and
sub
dec
fyl2xp1
sub
js
into
push
arpl
inc
jo
aas
aad
aas
sub
xor
push
sarb
icebp
ljmp
inc
sti
sub
into
jmp
int
shl
ret
jno
iret
inc
pop
push
shrb
add
mov
mov
jmp
xor
test
enter
mull
dec
test
rclb
fbstp
cmpsl
into
mov
int3
fsts
pushl
and
or
test
cmp
cld
xor
psllq
inc
xchg
xchg
push
mov
ljmp
leave
enter
fwait
sub
test
mov
inc
into
jns
int3
xchg
fiaddl
ljmp
mov
add
in
insb
imul
lcall
scas
jne
cmpsb
xor
mov
or
in
xorl
mov
mov
push
mov
andb
sub
aas
adc
sub
mov
roll
or
popa
cs
incl
imul
std
shlb
movsl
ret
dec
adc
ret
insl
mov
xor
cli
push
mov
push
fs
add
ja
cld
icebp
out
pop
mov
mov
mov
pushl
mov
add
xor
and
push
fnstenv
mov
icebp
hlt
mov
mov
jge
call
sbb
test
jmp
push
inc
es
xchg
fs
push
mov
out
inc
mov
cltd
lret
pushl
and
ret
cmp
xchg
mov
int3
aas
push
cld
dec
test
mov
iret
jp
arpl
mov
dec
mov
je
cmp
gs
mov
outsb
mov
push
add
out
mov
scas
adc
lcall
insl
aad
pop
fisttps
repnz
popf
jo
jmp
lods
xor
mov
push
inc
lock
arpl
ljmp
pop
sahf
out
fwait
push
leave
cmp
mov
icebp
adc
out
sarl
jne
cmpxchg
jmp
into
mov
add
or
movsl
add
lret
pop
jnp
shll
and
pop
or
call
lcall
add
ret
test
and
idiv
fwait
cmp
jg
and
cmpsl
cmp
sbb
out
mov
cli
mov
neg
das
inc
rorl
jmp
jae
push
fcmove
clc
arpl
dec
bound
into
cli
sub
or
jg
jo
pushl
loop
jg
dec
lock
repnz
sbb
popa
iret
addr16
jp
or
sub
jle
jge
xchg
adc
fstl
or
popa
and
lods
xchg
sahf
stos
sbb
cmpsb
adc
aas
cmp
xchg
aas
sbb
repz
pop
and
pop
mov
sbb
cli
sbb
incl
mov
data16
and
inc
rorb
jns
cmp
incl
mov
dec
push
gs
lods
out
sub
jbe
inc
dec
xor
repz
mov
mov
lcall
cmpsb
xor
push
in
add
fwait
jno
add
push
fwait
shr
adcl
jmp
cmp
cli
mov
test
call
mov
push
and
pushl
test
add
xchg
fisttpl
xlat
inc
xchg
ret
das
jg
loopne
jbe
xchg
fsubl
xor
mov
insb
scas
sbb
push
mov
enter
add
pushl
adc
add
sub
fs
ljmp
stos
lock
mov
push
xchg
ljmp
imul
mov
popf
subl
mov
pop
lods
out
aaa
sub
loope
imul
jl
push
xchg
push
jne
rolb
mov
jecxz
mov
add
ljmp
clc
push
les
pop
and
mov
or
mov
int3
adc
cld
fnstenv
jb
xor
test
xchg
imul
jmp
leave
push
add
xorl
pop
out
push
loopne
roll
pop
decl
adc
les
mov
daa
fiadds
shl
xor
jo
fs
fst
mov
xorl
test
loope
fdiv
ficoml
pop
xor
sbb
xchg
pop
sub
mov
arpl
lret
loop
in
lahf
cwtl
or
jbe
pop
mov
sub
pop
data16
call
les
and
sbb
add
lcall
cmpsb
pop
scas
out
or
fcmovnu
out
clc
int
gs
push
out
ret
mov
stos
clc
cltd
pop
lea
xorl
int3
pop
rorb
mov
pushl
xchg
mov
mov
hlt
enter
aaa
jno
pop
dec
lds
sub
jmp
ljmp
ja
add
int
xchg
mov
mov
cmp
fiadds
push
xor
lcall
inc
mov
mov
xchg
lea
nop
leave
inc
loop,pt
cmpsl
lret
mov
dec
lahf
gs
dec
out
clc
lcall
mov
shll
xchg
and
loope
pop
mov
ljmp
fucomi
addr16
push
out
push
push
or
lret
xchg
lcall
jmp
stos
dec
mov
pop
loope
popf
rcrl
sub
adc
sub
push
add
push
xor
inc
lcall
jge
xchg
adc
repnz
incl
and
xor
sbb
adc
movsb
mov
dec
cli
stos
fwait
mov
cltd
addb
call
into
out
imul
ret
xchg
sbb
push
les
andl
mov
push
sahf
mov
adc
dec
inc
out
cmp
fists
subb
test
and
push
inc
mov
sbb
mov
sbb
xor
aaa
sub
xchg
or
fs
incl
mov
pop
add
ficompl
int
add
dec
cmpsl
scas
mov
adc
mov
xchg
ljmp
mov
aas
and
cmp
iret
popa
sub
xor
inc
out
dec
dec
pop
sbb
fsubs
xchg
cmp
inc
pop
jle
cmp
mov
cmp
bound
pop
movsl
clc
decl
dec
mov
clc
sbb
adcl
das
rcll
inc
jmp
test
adc
in
push
cmc
loop
dec
sarb
jne
xor
sbb
flds
mov
cmc
mov
in
mov
jg
pop
fisubrl
mov
es
incl
cmc
push
decl
cmpsb
pop
loopne
subb
xchg
popf
outsl
rcrb
cmc
cmp
mov
rorl
adc
mov
call
outsb
or
sub
cmp
or
jl
lahf
lahf
testb
push
jmp
lock
pop
dec
mov
inc
andb
loope
int3
fcoms
cmp
push
adcl
mov
mov
or
push
jmp
mov
testl
xchg
and
sub
mov
std
outsb
adc
push
sbb
jge
cs
sub
mov
jle
rcl
dec
xor
mov
mov
cmpsl
jl
fs
cmpsl
call
jns
adc
push
test
push
add
push
insb
sub
divl
jmp
enter
xor
sti
shl
cltd
pop
popf
inc
cmc
testb
pop
repnz
sbb
mov
pushl
out
jmp
sbbb
sti
rcrb
mov
and
mov
incl
jno
and
jg
push
enter
xchg
orb
mov
cmpsl
into
push
int
call
add
pop
rcrl
stos
jl
rcl
mov
push
sbb
mov
inc
call
scas
ds
test
dec
adc
dec
cmp
mov
and
call
xchg
pop
add
stos
ja
imul
sub
mov
dec
fcmovne
mov
xchg
pop
iret
jmp
push
fistpl
stos
fistpll
out
pusha
cld
mov
movsb
xchg
pop
dec
xchg
jg
jne
hlt
stos
incl
jp
into
mov
pop
lea
imulb
das
xlat
cmp
mov
cmp
jmp
out
xchg
sarb
push
sub
mov
outsl
xor
jg
and
or
sbb
iret
sub
jb
dec
fcoms
test
fs
call
outsb
testl
mov
sti
fldcw
in
push
hlt
incb
andnps
add
xchg
out
jmp
jo
xchg
lret
mov
js
rep
sbb
xchg
fisubl
loope
jecxz
dec
jl
mov
data16
jmp
jmp
dec
pop
leave
jnp
ret
xlat
xchg
jns
lcall
cmc
cmp
xchg
aas
and
lahf
cmpsl
popf
dec
xorl
jge
pushl
lret
in
inc
pop
xchg
cmp
dec
or
sbb
jmp
das
pop
sti
xchg
popa
add
pop
pop
sahf
add
jmp
jle
ljmp
mov
in
inc
out
xchg
bound
sub
pop
jae
pop
ljmp
jb
adc
cmp
dec
sbb
imul
mov
lcall
in
jle
mov
lods
addr16
xor
popf
movsl
or
sbb
mov
faddl
jp
fbstp
pop
dec
or
rcrb
arpl
aam
cmp
out
and
out
cmpsl
repz
lcall
mov
insb
test
int
mov
pop
xor
dec
jg
sbb
pushl
pop
jge
mov
out
push
mov
mov
add
pop
jo
outsl
ja
mov
adc
jnp
js
add
cli
pop
addr16
mov
dec
pop
add
out
ror
mov
jns
addr16
jmp
mov
or
jge
xor
sub
lods
sbb
sbb
lahf
fstl
pushl
arpl
cmpsl
sbb
inc
incb
and
imul
cld
jbe
adc
lds
xor
jns
movsb
int
pop
inc
js
mov
aas
loopne
int
adc
mov
clc
cmc
dec
xchg
scas
push
mov
incl
aam
mov
fwait
stos
or
mov
jge
mov
scas
dec
inc
cmc
scas
or
cmp
adc
test
sti
push
xchg
test
fisubrl
jne
sahf
xchg
mov
inc
mov
jmp
lods
jl
data16
push
inc
insl
fisubrl
stos
pop
jmp
test
adc
lahf
mov
arpl
loope
lret
test
aam
cmpsb
mov
mov
ret
es
mov
aaa
cwtl
jg
js
das
std
idiv
incl
jl
mov
sub
lcall
mov
repnz
dec
ds
ss
outsl
stos
out
sub
jmp
cmp
adc
inc
xchg
jnp
sub
jno
in
xchg
aaa
push
icebp
pop
shrl
roll
in
decl
dec
dec
aad
outsl
sub
enter
pop
mov
lock
mov
roll
data16
incl
lods
fsubrp
cmp
addr16
pusha
shrd
mov
xor
ds
push
test
incl
add
jno
pop
adc
jnp
dec
xchg
in
mov
sub
and
pop
ljmp
clc
sarb
mov
push
sub
notb
lcall
mov
pushl
xchg
push
xor
pop
mov
mov
test
mov
mov
daa
push
in
cmp
call
imull
testl
inc
xor
gs
or
cmp
adc
call
movl
enter
push
dec
xor
lods
in
sub
pop
xchg
test
cmp
mov
mov
and
js
cli
fsubrs
or
cmp
incl
fadd
dec
or
mov
in
mov
std
and
aam
daa
daa
cwtl
in
lods
and
jmp
aad
insl
std
jmp
mov
pop
cmp
into
inc
movsl
and
inc
ret
aam
in
sbb
sahf
pusha
xchg
nop
cmp
loopne
xchg
jp
xchg
and
fimuls
xor
dec
or
jmp
std
out
pop
mov
orb
sub
ret
inc
and
test
adc
decl
dec
xchg
testl
xlat
data16
in
in
mov
xchg
jmp
pop
ljmp
ss
rcll
dec
sbb
or
jb
jmp
call
cmc
frstor
mov
pop
add
or
xlat
aam
sbb
popf
int3
pop
dec
pushl
int3
dec
adc
out
mov
mov
cmpb
cmp
test
ffreep
gs
ljmp
jns
pop
jle
mov
call
push
dec
adc
mov
in
push
dec
mov
decl
pop
rcll
std
cmp
push
inc
out
lret
and
ds
out
sti
mov
decl
sub
jecxz
and
cs
dec
cmp
jno
or
cmp
jae
adc
incl
adc
dec
iret
fstpt
outsb
mov
ss
sbb
push
mov
and
lods
mov
mov
inc
xchg
shlb
out
cltd
jmp
aad
arpl
ljmp
cmp
cmpsl
mov
jnp
mov
ss
ss
sub
mov
push
mov
pop
sar
ficoml
stos
xor
mov
in
pop
inc
lds
fstl
shrl
lcall
lods
and
xorb
jo
pop
sbb
mov
outsl
fidivrs
addr16
pushl
mov
pop
sbb
pop
sbb
in
xlat
pop
sarb
mov
movsbl
in
mov
cmpsb
inc
iret
js
mov
lock
sub
add
cs
dec
cs
call
cmpsb
les
mov
cld
fwait
insb
or
rcl
aas
add
push
sub
std
pop
jmp
pop
xor
loopne
in
add
mov
push
push
inc
mov
in
jecxz
dec
mov
std
dec
movsl
call
das
fwait
mov
xchg
rol
mov
cmpsl
sub
mov
incl
mov
push
cmc
and
mov
out
mov
cltd
ret
sbb
daa
fildl
xorb
cmp
xchg
pop
cmp
loope
adc
in
in
dec
cmc
xor
mov
loopne
iret
add
jmp
push
bound
adc
xor
movsb
test
les
das
popf
in
hlt
mov
pushl
dec
add
adc
mov
and
mov
out
enter
daa
insl
mov
call
sahf
insb
xchg
loop
dec
aas
daa
xor
sbb
sub
xchg
cmpsb
int
cmpsb
adc
aad
jmp
daa
sarb
aad
dec
sbb
rorb
inc
adc
cld
icebp
jmp
stos
sbb
arpl
incl
sbb
cmp
clc
push
add
jnp
movsl
rep
fcmove
out
mov
lods
or
push
aaa
mov
pop
mov
icebp
shrl
int
pop
ret
fildl
mov
imul
mov
fdivrs
sarl
call
cmp
int
mov
dec
xchg
mov
mov
sbb
pushl
mov
or
sub
push
ret
push
imul
loope
lea
mov
rep
push
push
std
add
std
or
or
inc
xlat
pop
lahf
dec
xchg
sub
inc
hlt
stos
lahf
adc
out
lahf
and
ds
jmp
insb
xor
adc
andl
jnp
cmp
popa
mov
xchg
and
mov
insb
lret
lock
movsb
xchg
sbb
mov
dec
or
scas
adc
cmpl
test
or
fsts
lock
jns
cmovbe
fimuls
mov
pop
cld
push
push
ret
inc
pop
inc
mov
arpl
mov
int
lcall
xor
leave
xchg
cmp
ror
mov
jb
repz
jae
pcmpeqw
adc
mov
jmp
inc
mov
dec
cmp
xchg
inc
sub
push
mov
int3
nop
into
in
jns
xor
daa
mov
push
push
cmc
lret
push
jg
repnz
cmp
push
rclb
bswap
xchg
dec
movsl
mov
call
and
fisubrs
movsb
data16
xor
pop
and
mov
adc
call
lahf
sbb
pop
add
shrl
mov
popa
pop
xor
cmp
add
ljmp
jne
cmp
int3
sub
ret
out
lcall
jmp
lcall
add
icebp
leave
pop
int3
cmp
rol
repz
mov
mov
fimuls
incl
or
movsl
cmp
push
jle
mov
xchg
lret
xchg
jle
outsl
es
adc
cmpw
outsb
ljmp
gs
mov
cli
or
loopne
adcl
cmpsb
gs
popf
pushl
jb
pop
out
xor
cmpsl
or
popf
std
mov
rep
ljmp
dec
pop
int3
daa
add
or
fiadds
xchg
or
vpmuludq
incl
std
rorb
inc
les
ja
push
cld
test
out
push
jmp
icebp
jo
add
dec
divb
nop
sub
cmp
xchg
pop
lods
mov
pop
mov
insb
or
stc
fistl
inc
mov
inc
roll
jmp
mul
mov
scas
push
pop
notb
insb
push
dec
inc
inc
decl
outsb
out
je
shl
pop
sbb
adc
adc
iret
rorl
movsl
iret
aad
add
leave
imul
imulb
movsb
fcoml
pushf
lods
shlb
cmp
fisttpl
fs
sub
inc
jmp
cmovbe
sar
repnz
mov
jge
cmp
les
pop
icebp
mov
fsubs
jmp
lahf
push
pop
js
jb
js
test
jp
sarb
push
iret
dec
stos
mov
pushl
sahf
cmp
mov
and
in
dec
mov
inc
cmc
mov
and
icebp
loop
mov
popf
nop
in
dec
adc
in
sub
lcall
fwait
test
pushl
arpl
push
dec
push
js
push
cmpsl
loope
cli
adcl
jle
rcr
sub
cmp
pop
and
sbb
xchg
scas
jae
repz
mov
push
popa
jp
jmp
or
fistps
mov
aas
loope
or
push
aaa
and
fxch
cmpsl
rorl
push
pop
xchg
imul
sbb
adc
cwtl
cmp
ljmp
xor
test
test
sub
sbb
dec
in
dec
mov
adc
jne
jmp
scas
imul
cmc
adc
sbb
cli
cmp
xchg
fcompl
mov
mov
lcall
cli
add
inc
mov
mov
cs
popf
add
jo
test
test
jge
add
aad
call
pushf
push
push
jnp
mov
jmp
bound
xorb
lock
mov
xchg
or
inc
out
mov
xor
stos
sub
sahf
aad
cmp
sbb
arpl
out
mov
incl
cmpl
sub
sub
add
imul
push
out
leave
inc
and
fisubrl
mov
pop
and
mov
fnstenv
jnp
jmp
jmp
fstpt
out
or
jg
jp
mov
je
ror
cmp
jmp
mov
jo
inc
incl
add
jae
pop
adc
ret
loopne
inc
test
fcoms
jle
xor
inc
lock
inc
in
leave
sbb
cld
mov
loope
dec
jb
jecxz
mov
and
add
dec
push
jmp
lea
es
cmp
in
addl
gs
mov
push
mov
mov
aad
xchg
jo
and
push
jg
int
sbb
pushf
lea
cmp
jmp
pop
loope
jp
push
jmp
xchg
cld
mov
push
out
pusha
stos
sarl
lret
jl
stos
xor
in
test
arpl
inc
cld
shlb
mov
lock
daa
push
and
aam
mov
in
or
jmp
imul
inc
pop
out
pop
stos
add
pop
or
hlt
xchg
xor
ja
pop
lret
sahf
mov
call
gs
orb
ret
mov
xchg
xchg
mov
scas
movsb
inc
mov
call
jne
ficoms
cmp
xchg
subb
and
rcrl
or
xor
test
lcall
push
out
sbb
pop
mov
test
fld
mov
jno
push
lea
lret
inc
mov
dec
imul
mov
add
movb
clc
pop
icebp
mov
or
fadd
out
xlat
outsb
jb
cwtl
std
in
data16
cmp
mov
dec
jmp
sbb
fs
sub
cmp
adc
sbb
aaa
scas
cld
sub
sahf
aad
jle
dec
or
decl
aaa
hlt
divl
imul
pop
mov
aaa
loope
sbb
sbb
xchg
mov
imul
jb
mov
mov
cltd
stc
pop
dec
lahf
push
push
cmpsb
in
add
ss
push
cmp
lcall
repz
or
daa
cmp
test
sbb
shl
adc
pop
jmp
loop
sbb
aaa
mov
rcll
cmp
insl
aas
jmp
or
imul
mov
adc
pushl
lods
xchg
fs
adcl
jge
popf
pop
outsl
pop
inc
mov
jnp
rol
or
inc
cld
dec
and
in
dec
rcll
pop
dec
jle
mov
decl
fwait
arpl
pop
lahf
call
nop
sub
loopne
and
test
in
mov
ljmp
je
mov
mov
loope
add
stos
push
mov
popa
push
into
stos
repz
sti
incl
sbb
push
cmp
push
cmp
xor
rcrb
decl
shll
pop
stos
jo
jge
lcall
pop
sahf
daa
insb
and
lret
loop
xor
jns
js
pop
adc
aad
sbb
ljmp
out
push
mov
push
dec
push
pop
je
cmpsb
mov
loop
dec
xchg
sbb
pushl
mov
or
mov
lret
mov
sbb
pushl
pop
jno
int
sub
repnz
and
mov
loop
adc
je
push
sbb
mov
fiaddl
xor
scas
cmp
test
cld
inc
out
fisttpll
decl
add
mov
gs
jge
outsl
ret
pop
inc
hlt
xchg
test
stos
ljmp
jmp
mov
repz
sub
cmp
sub
or
mov
movsb
imul
mov
fidivrl
mov
cltd
xor
add
shlb
or
out
jno
or
inc
adc
cmpb
pop
rcrb
sub
adc
sbb
test
sub
sub
mov
call
pop
jp
sub
stc
jns
xchg
ror
xor
push
sti
xor
lock
es
std
addr16
hlt
add
cli
jl
xor
out
cmp
test
movsb
sbb
cmp
cmp
decl
inc
dec
jnp
and
das
inc
adcl
stc
neg
lods
cli
and
push
xchg
jmp
int
outsb
rolb
add
cwtl
fsubrl
pusha
or
ret
pop
mov
rorl
call
dec
xor
push
scas
mov
enter
xor
jmp
imul
movsb
call
xchg
adc
or
adc
and
lods
add
xorb
push
lcall
test
fcmovne
shll
pop
dec
add
pop
xchg
pop
leave
call
ret
fs
test
jmp
push
pop
rclb
xor
or
mov
mov
cmp
xor
fiadds
push
int
dec
cmc
mov
mov
add
xor
out
outsb
mov
subl
pusha
mov
js
les
dec
aam
inc
push
pop
cmc
add
jecxz
inc
lcall
inc
cmp
push
int3
mov
add
add
jb
mov
xchg
mov
sub
pop
ljmp
mov
mov
push
dec
test
stos
adc
ficoms
or
push
repz
push
cmp
sbb
out
jo
cs
mov
push
or
popf
xchg
movsb
stos
iret
jecxz,pn
fmuls
popf
lcall
jl
inc
dec
stos
test
mov
orb
inc
pop
dec
and
jmp
jle
mov
inc
iret
or
daa
push
inc
lret
jo
aad
push
bound
pop
cmpsl
push
jmp
pushl
sub
fmuls
ja
je
sbb
jmp
jmp
insb
fmuls
movsb
lea
mov
dec
movsb
mov
leave
inc
pop
loope
lret
lds
cmp
sbb
aas
jmp
push
and
sahf
fisubl
insl
lods
imul
out
mov
adc
out
fmul
scas
xchg
pushl
cs
or
jo
jbe
test
add
cli
xchg
pushf
fwait
outsl
dec
ret
and
stos
scas
mov
dec
arpl
mov
xor
dec
xchg
mov
das
sub
rcll
ds
jns
das
mov
pop
xchg
adc
in
sbbb
enter
xlat
shll
mov
in
popl
pusha
push
push
rcrb
das
pop
and
cmp
mov
and
dec
mov
sub
xor
out
xchg
or
or
xchg
jns
ja
pushf
aas
jge
into
inc
loopne
int3
jbe
mov
lock
mov
into
cmp
repz
fdivrl
mov
lcall
or
cmpb
push
out
jmp
and
push
popa
into
gs
loop
int3
pushl
rcr
adc
dec
jb
repnz
xor
sbb
adc
push
dec
mov
cltd
cmp
adc
jmp
push
sub
dec
xchg
lret
daa
adc
adc
pop
and
sbb
out
xchg
in
or
jnp
pop
lcall
je
mov
rorl
cmp
mov
loopne
dec
and
divb
xor
call
insb
or
and
rorl
xor
test
fs
scas
sub
jns
aad
fisttps
adcb
jmp
add
sub
xorl
divl
js
jns
stc
jae
ljmp
or
syscall
idiv
bound
cs
hlt
cltd
fstps
popf
idiv
adc
inc
aas
adc
inc
inc
or
mov
fildl
out
pop
sub
cli
out
push
nop
pushf
mov
pop
cs
cmpsl
fs
sti
je
nop
pop
xor
or
pop
pop
xchg
sti
scas
test
daa
jb
pop
test
flds
call
xor
aas
adc
fdivrl
dec
adc
jns
lods
pusha
jecxz
adc
call
out
push
orl
add
fistpl
mov
mov
dec
mov
sub
mov
xchg
add
xorb
xchg
mov
cmpsb
cmpsb
lret
decl
jne
mov
int3
cld
push
add
stos
dec
mov
or
push
xor
inc
cmpsb
pop
pop
pop
incl
fldt
fmul
les
jo
mov
mov
mov
cmp
repnz
inc
int
push
into
test
mov
push
pop
mov
push
mov
xor
lcall
ficompl
daa
xchg
std
movsb
push
popl
ds
fcoml
stc
lods
push
push
pop
decl
sub
ss
das
mov
jge,pn
xchg
dec
int
push
sbb
aad
call
fwait
repz
sti
push
xor
jne
lock
mov
jmp
leave
mov
mov
test
adc
std
sbb
in
push
mov
mov
jnp
fsubrl
jne
aad
inc
test
and
data16
inc
sub
xchg
or
or
pop
and
jmp
fmul
mov
sbb
mov
adc
xchg
fadd
inc
idiv
inc
mov
scas
mov
bound
sbb
xchg
inc
jle
add
add
cmp
pusha
out
add
mov
ljmp
jl
cmp
add
dec
inc
add
jp
push
inc
je
out
sbb
adc
cmp
in
jmp
addl
insb
movsb
mov
xchg
popa
addr16
test
les
mov
sbb
push
jmp
arpl
adc
sub
xchg
insl
sub
cmp
fnop
xor
cmp
pop
ss
and
and
mov
adc
lcall
cwtl
cmpsl
scas
sub
and
push
mov
arpl
pop
add
add
movsl
pop
inc
sub
adc
mov
dec
aas
sarl
cmpsl
mov
adc
xchg
std
arpl
lcall
fmuls
loop
inc
mov
pop
xchg
adc
mov
aad
aad
mov
sub
lcall
jne
scas
fldenv
adc
cmp
shll
ret
arpl
inc
test
orl
dec
lcall
lcall
push
dec
cmp
dec
ja
and
pop
inc
pop
or
dec
jmp
fcompp
enter
xor
outsb
mov
xor
decl
mov
xchg
je
fsts
pop
adc
add
pop
sub
stos
mov
incl
testl
movsl
push
test
stos
ds
jmp
jge
pop
test
data16
incl
jae
into
jmp
rclb
or
inc
push
ret
add
pop
aas
sbb
jmp
push
xchg
add
test
push
fs
mov
sahf
xlat
fcoms
cmc
ss
jmp
enter
out
into
shr
push
ficomps
fdivs
jmp
inc
inc
enter
mov
pmulhuw
in
mov
push
das
add
add
pusha
lea
insl
outsl
aad
sbbb
xchg
fwait
jmp
ljmp
sub
push
bound
mov
pusha
scas
ja
imul
adc
push
xor
stos
jmp
stos
iret
les
jge
adc
stos
xlat
push
and
dec
cmc
pusha
inc
incl
cwtl
arpl
insl
fcmove
xlat
mov
jmp
stos
xlat
out
loopne
cli
cmc
je
inc
xor
lret
out
push
xor
xor
inc
push
leave
mov
fiaddl
mov
xchg
sbb
fcmovnu
incl
pop
pop
pusha
jp
sbb
xor
push
gs
popa
pop
pushf
sti
outsb
mov
inc
loope
lcall
fsubrs
push
pusha
adc
sub
lds
fnstcw
pop
sti
mov
mov
adc
ds
pushf
sbbb
push
cs
lcall
mov
push
test
and
and
xor
sti
cld
mov
inc
mov
jmp
pushl
and
cmpsl
push
cs
sub
cmpsb
imul
decl
lods
andb
stos
arpl
push
xchg
xchg
lods
push
add
jl
addb
jg
call
ljmp
jnp
ret
dec
cmp
ljmp
cli
dec
pusha
pop
outsb
pusha
idivl
ljmp
xchg
dec
or
cli
stos
pop
cld
sub
jmp
mov
icebp
shrl
testb
inc
jno
or
push
fwait
aaa
icebp
mov
adc
lret
je
aad
mov
xchg
rorl
dec
dec
sbbb
dec
ja
orl
cmp
cmp
aas
pushl
and
xchg
pop
addb
xchg
add
pop
popa
inc
clc
inc
test
test
decl
cld
or
mov
pop
enter
mov
xchg
xor
pushf
cmp
sub
xor
pop
incl
dec
repz
pop
dec
sub
jecxz
inc
stc
repz
aad
pop
in
lds
and
add
in
jl
aas
insl
dec
loope
notl
push
stos
call
inc
or
xchg
out
mov
jno
push
jge
add
cmp
jmp
mov
mov
notl
jns
mov
jb
das
ss
mov
inc
clc
adc
call
fcmovnu
mov
leave
test
ja
lods
faddl
inc
pusha
dec
sub
jno
mov
mov
incl
push
push
and
fs
dec
shll
pop
clc
cli
and
pop
cltd
mov
fistpll
cmp
sbb
mov
mov
sti
lods
dec
push
stos
push
leave
aas
in
rcl
cld
int
xchg
adc
inc
pushl
pop
mov
fstpl
pop
popa
add
aam
addb
pop
loope
sar
cmp
clc
dec
sti
adc
fnstsw
mov
jecxz
dec
inc
in
xchg
loope
sbb
push
ds
jns
push
xor
jnp
mov
insb
inc
fmul
std
mov
sti
aam
and
xchg
decl
jl
xchg
out
imul
sbb
mov
and
gs
dec
mov
lods
pop
in
lcall
lret
and
enter
xchg
sub
addr16
stos
pop
pop
inc
lret
push
push
jne
sbb
push
mov
lock
xchg
cwtl
add
faddp
dec
pop
mov
cli
and
cmpsl
pusha
scas
push
gs
lods
jmp
jge
es
xchg
daa
js
and
lods
dec
cmp
sbb
mov
lea
mov
aaa
lcall
rcrl
scas
push
jns
xor
loop
xchg
inc
add
cmp
lock
xor
add
js
cmp
cmpb
cltd
sbbb
or
sti
mov
movsl
cwtl
incl
lods
es
bound
xchg
les
push
rcrb
in
mov
jecxz
into
imul
jmp
sbb
xchg
int3
xorl
pop
repz
cvtps2pd
lret
jg
dec
incl
out
out
andl
out
inc
adc
xchg
mov
scas
ljmp
cli
pop
pop
add
stos
cmp
stos
leave
jns
push
sub
ds
jbe
dec
mov
mov
cmp
jmp
ljmp
xorb
inc
call
xor
push
stos
test
jmp
je
repz
push
incl
loopne
mov
sbb
dec
arpl
mov
add
mov
jmp
es
test
call
and
xchg
test
mov
jmp
fs
adc
cltd
psubd
mov
pop
gs
int
sbb
push
mov
mov
stc
xor
mov
inc
pop
lcall
je
mov
mov
test
mov
std
jge
std
cmpl
dec
adc
sub
repnz
jnp
xor
inc
dec
mov
inc
inc
xchg
sahf
push
dec
dec
xchg
pop
mov
lahf
and
daa
xlat
jo
inc
mov
push
decl
push
cli
rol
and
lods
pop
adc
dec
movsb
mov
push
mov
mov
mov
add
repnz
and
pop
add
int
fmull
call
inc
imul
popf
xchg
in
xchg
rcrl
sbbb
dec
and
cltd
xlat
ja
pop
mov
inc
lea
call
aam
pushf
cvtpi2ps
pop
enter
add
push
push
dec
mov
daa
mov
lcall
jnp
xchg
cmp
push
dec
imul
fldt
xor
xchg
shl
xchg
and
push
lock
call
mov
or
movsl
movsl
dec
cmc
mov
mov
movb
sub
test
adc
mov
in
xchg
aad
test
mov
shlb
int3
lock
incl
push
push
push
shll
sub
mov
cwtl
and
ljmp
mov
sub
pusha
and
repz
idivb
movsl
imul
ljmp
sbb
mov
fstps
jne
push
popa
sbb
add
divl
rclb
and
decl
and
jg
ret
outsb
sub
cmp
movlps
xor
mov
jp
das
test
xchg
pop
rcrb
or
stos
jp
lock
test
add
xchg
adc
lods
mov
outsb
sbb
add
incl
fcoml
or
inc
jb
xlat
pop
jnp
jp
outsb
orl
mov
dec
inc
fs
jbe
ret
add
inc
mov
sti
adc
pop
mov
jmp
cld
iret
sub
or
lcall
xchg
pop
jo
sub
xchg
popa
lods
bound
mov
push
push
sbb
pop
xchg
in
fnstcw
or
jmp
gs
ds
out
test
lcall
xor
push
or
xor
jnp
arpl
popa
cltd
insl
mov
mov
sar
mov
jmp
push
pop
pop
daa
push
bound
shrl
mov
mov
popa
dec
cmp
dec
sarb
clc
hlt
push
aaa
iret
and
aaa
jns
mov
mov
pop
shl
add
and
incl
dec
testb
aam
mov
outsb
fs
mov
pop
inc
loop
jae
sbb
dec
mov
jmp
adc
pusha
test
idivl
sub
pop
or
cmp
repz
pushl
add
cwtd
out
cmp
adc
das
outsb
sbb
mov
pop
xchg
sub
call
insb
pop
and
lcall
out
test
inc
jb
xor
daa
test
gs
pushl
mov
pop
in
and
xorb
rorb
pop
leave
popa
mov
mov
iret
lret
add
mov
shlb
insl
test
jg
fimull
mov
jmp
pop
loopne
cmp
test
mov
leave
nop
movsb
test
cmp
cli
call
movsl
ljmp
stc
jbe
dec
pop
iret
add
loop
in
inc
les
push
daa
inc
sub
jmp
lock
dec
add
mov
push
test
inc
pop
jmp
mov
fstpl
add
out
leave
roll
pop
ret
cmpsb
cmc
mov
int3
push
gs
cmpxchg8b
addr16
xor
cli
lds
jbe
jo
jnp
mov
or
mov
aas
or
lahf
sbb
sub
incl
out
or
adc
jge
xchg
std
xchg
mov
mov
inc
cmc
jge
pop
mov
jp
inc
jno
push
xchg
testl
insb
mov
adc
insb
jbe
orl
fcompl
sbb
mov
repz
addl
repz
inc
mov
sti
xor
fcmovnu
pop
cs
daa
test
xchg
sub
repnz
xchg
mov
loop
icebp
jmp
jmp
es
stc
xchg
shlb
sub
aad
mov
or
imul
sbb
push
pushl
int
mov
or
add
push
mov
int
mov
cld
jno
push
inc
stos
test
pop
notb
lcall
es
dec
sahf
jmp
fdivs
inc
shlb
imul
rcrl
adc
stos
cmp
addr16
cmp
push
xchg
mov
call
clc
std
out
and
dec
imul
clc
sbb
add
push
mov
insl
shll
push
xchg
cmp
inc
cltd
dec
mov
jmp
push
cmc
test
sbb
fisubl
enter
mov
out
or
push
jmp
cltd
movsb
push
inc
xor
inc
push
in
push
dec
cmp
lcall
add
in
adc
mov
adc
insb
das
fmull
and
in
adc
mov
mov
inc
fstpl
stos
icebp
and
fxch
push
daa
mov
incl
pusha
les
jge
popf
loope
push
popa
mov
sbb
mov
fs
repnz
lcall
push
cmp
repz
ss
and
fsts
or
and
fdivr
call
adc
mov
ret
dec
nop
and
xor
mov
int3
cld
pop
lcall
movsl
pusha
cmp
stos
and
dec
loope
mov
mov
jae
addb
mov
enter
lcall
dec
xor
mov
outsl
mov
test
fabs
sbb
pop
decl
inc
xchg
adc
leave
or
inc
jno
jne
xchg
addb
sbb
cs
lahf
fwait
xor
pushl
pop
repz
notl
xchg
jmp
popa
das
push
hlt
aaa
add
jge
mov
pop
cmc
loopne
movsl
into
push
in
fwait
cli
cmp
push
xchg
movnti
sbb
sbb
adc
data16
mov
ljmp
arpl
xor
adc
dec
mov
testb
sub
test
mov
cs
ljmp
mov
jg
scas
ror
loope
daa
aaa
or
out
movsb
mov
fs
incl
adc
das
out
and
mov
or
sbb
call
insb
cld
xchg
push
xchg
cld
into
movsb
setle
xchg
xor
je
or
pop
dec
outsb
push
sub
lcall
dec
aam
cmpsb
mov
mov
sbbb
dec
cmp
negb
dec
adc
cld
dec
mov
or
ficoml
xchg
push
in
and
mov
xchg
data16
xor
mov
inc
jge
jp
adc
lret
push
xor
adc
int3
push
xor
decl
xchg
mov
push
add
xor
mov
xchg
adc
cmp
cmp
mov
or
stc
iret
pop
imul
es
in
sub
mov
cs
xor
adc
decl
cltd
or
mov
sbb
mov
in
mov
repnz
out
and
jmp
leave
lds
or
sub
aas
mov
roll
push
cli
pop
enter
xchg
lods
call
imul
or
in
adc
hlt
sahf
scas
xchg
cmp
lds
or
decl
bound
std
arpl
lods
pop
xor
push
sbb
icebp
dec
je
mull
jmp
out
ret
daa
mov
add
in
fxtract
pop
mov
cmp
dec
cmp
push
cltd
daa
xchg
and
lcall
or
dec
in
ds
and
shl
outsl
cs
push
xlat
dec
pop
ret
dec
nop
push
pop
sbb
xor
nop
add
stos
mov
mov
sub
pusha
fsubrl
aas
ja
sub
adc
pop
mov
or
and
jg
call
dec
xlat
cmp
dec
push
aas
repz
adc
sbb
fisubl
pop
js
jle
cs
xchg
cwtl
daa
and
in
lock
and
xchg
data16
rcrb
xchg
pop
cltd
push
loopne
adc
scas
in
inc
incl
mov
enter
loopne
jl
mov
frstor
pop
ret
lret
ljmp
or
adc
jl
sub
stc
pop
add
jg
push
xchg
push
mov
cltd
ret
mov
push
sub
mov
jns
test
mov
mov
in
pop
mov
dec
inc
movsb
jae
jbe
lds
pop
in
fimuls
loop
pop
cmp
jmp
xor
dec
rcrl
xchg
lret
in
dec
and
addr16
adcl
lahf
ret
pop
adc
mov
jmp
or
lret
decb
mov
sbb
lock
sub
es
iret
pop
daa
iret
pushl
sub
loop
dec
inc
sbb
jnp
cli
idiv
out
push
movsl
outsl
stos
cmp
popf
sbb
call
xor
sbb
adc
adc
push
push
jle
push
pop
xor
jno
adc
aaa
cmp
jns
fisubl
roll
lock
out
sbb
pop
xchg
aaa
dec
dec
lods
insl
int
std
aaa
and
inc
or
jae
testb
inc
mov
adc
xchg
mov
add
pop
incl
or
faddl
jb
fld
and
add
aad
push
jle
xor
xor
shld
and
dec
and
fsts
jb
pop
add
test
push
outsb
cmp
dec
lods
jl
cltd
xchg
call
mov
imul
mov
jl
mov
les
xor
scas
mulb
jmp
pusha
cld
dec
xor
pop
hlt
jne
mov
jo
aas
enter
in
and
incl
call
sub
insl
js
shrb
popa
stc
mov
xor
and
call
cmc
sub
pop
mov
cmpl
mov
popf
incl
lock
insb
push
mov
loopne
lea
lret
push
mov
jae
mov
sub
sahf
hlt
sbb
jmp
test
xor
loope
int3
std
je
dec
jecxz
icebp
inc
mov
cld
std
xor
push
cmp
mov
pop
mov
int
mov
pop
push
xlat
movsl
out
xor
call
xor
ja
fisubrs
lock
xchg
mov
and
lods
rclb
mov
jle
add
decl
inc
inc
sub
js
stos
cmpsl
imul
mov
clc
out
mov
cmp
xor
retw
out
xor
push
add
jle
pop
pop
leave
mov
pop
std
nop
js
pushl
clc
push
mov
jno
in
pop
div
cwtl
imul
push
mov
gs
sbb
xchg
mov
jmp
jecxz
rcrb
ss
jmp
sub
hlt
inc
clc
mov
fucomp
fwait
xchg
bound
cwtl
ljmp
push
mov
jl
xor
cltd
mov
sub
push
nop
cmp
cmpsb
lahf
sub
icebp
sar
ljmp
scas
gs
ja
mov
sahf
sbb
push
std
ret
push
es
imul
decl
subb
xor
sbb
mov
aam
insb
lcall
out
jmp
pop
fsubrs
mov
xchg
mov
sub
push
push
imul
ljmp
sub
adc
sub
gs
dec
mov
imul
mov
test
decl
scas
sub
or
mov
pop
cld
jle
pop
or
dec
aam
mov
ss
incl
cmp
aam
sbbb
inc
pop
xchg
lods
sahf
insb
mov
push
jbe
divl
push
pushl
test
mov
adc
sub
or
movsb
xchg
ds
mov
nop
dec
push
sbb
mov
mov
inc
or
and
sub
std
xor
gs
or
insl
loop
jae
addl
dec
pop
repnz
jmp
mov
push
mov
xor
lcall
sbb
jno
std
adc
pop
mov
pushf
add
inc
out
pop
in
cs
daa
sub
sub
cmpsb
fdivrp
ljmp
mov
mov
aam
pop
mov
pop
mov
push
negl
lcall
ljmp
mov
test
inc
into
fdivp
bound
push
sbb
bound
incl
hlt
outsl
pop
sbb
cmp
dec
sbb
cmpsl
xor
insb
cmpsb
inc
pusha
mov
lcall
jl
jmp
sub
push
jg
mov
mov
or
or
jl
decl
mov
test
test
push
fistl
pusha
lcall
or
int3
push
insb
mov
call
push
xor
scas
mov
fisttpl
imul
pop
jne
xor
mov
incl
scas
ljmp
cmp
repnz
fcoml
popf
xlat
lahf
outsl
dec
loopne
rdpmc
cmp
push
and
rcll
insb
inc
cmc
out
adc
jne
or
xor
outsl
bound
inc
mov
int3
cmp
and
mov
sbb
fcom
out
bound
repnz
aam
nop
sahf
pop
bnd
ljmp
or
imul
int
into
sbb
in
notb
scas
pusha
lcall
leave
adc
mov
call
repnz
sahf
xchg
hlt
dec
add
test
outsl
mov
sbb
dec
or
mov
xor
sbb
mov
mulb
cmp
pop
inc
fwait
mov
std
and
ud0
js
push
jle
adc
test
outsb
cmp
push
push
mov
and
add
mov
push
fwait
pop
mov
fisttpl
test
ja
ret
adc
dec
ss
dec
sti
cmpsl
outsl
jae
xor
out
jp
xor
rcll
and
notl
adc
cmp
call
push
pop
or
xchg
inc
dec
or
mov
push
in
cld
lret
push
stos
ffree
lcall
mov
imul
in
mov
adc
or
mov
xchg
stc
mov
call
aam
and
aas
fstpl
pop
repnz
xor
or
out
adc
fstps
jmp
add
add
orl
inc
data16
xchg
dec
push
shlb
inc
je
or
inc
lret
into
aas
cmpsl
das
xor
mov
mov
and
jp
ret
rcll
shlb
cmp
lret
out
cs
ljmp
call
add
sbb
in
adc
mov
push
adc
popf
sub
xchg
int3
call
jp
xchg
jle
push
mov
sbb
movsl
sub
pop
notb
cld
es
push
push
rcll
pop
or
incl
and
outsl
cmp
cmp
jge
mov
lods
pop
pop
push
dec
dec
mov
pushl
in
test
or
cmpsb
popa
stos
loope
sub
xchg
mov
pop
imul
xor
incl
jmp
mov
xchg
enter
jp
sub
outsl
jno
sub
add
mov
mov
lahf
xlat
or
dec
popf
xor
sub
inc
shr
xchg
subb
cltd
sahf
or
jmp
cmpsl
sar
jl
push
xor
push
cmc
jae
ss
mov
mov
pop
decl
pop
inc
aaa
mov
mov
loopne
mov
das
mov
jmp
dec
xchg
push
or
cld
loope
jno
add
loope
test
arpl
popf
decb
idivb
mov
or
push
pusha
test
into
sub
add
mov
pop
dec
mov
mov
push
mov
xor
xchg
cmp
inc
dec
and
in
clc
fists
scas
pushf
cmp
jnp
incl
call
in
cmp
mov
xchg
in
xchg
inc
dec
in
leave
popf
iret
out
es
pushl
add
scas
lahf
mov
xor
iret
lcall
jb
leave
mov
incl
andl
xchg
dec
enter
push
loope
sub
lods
outsl
mov
add
lods
cwtl
sub
incl
push
mov
scas
or
shlb
xor
pop
inc
addb
and
fimull
and
sti
push
repnz
call
pop
jo
rorb
int3
xor
shrb
fsubr
call
lcall
dec
jp
in
xor
and
inc
or
sbb
repnz
icebp
jns
leave
comiss
decl
mov
push
jge
cmpsl
jl
imulb
repnz
rcl
sub
jle
fisttps
pushl
pop
dec
dec
mov
or
insb
loop
rcl
andb
jo
cmp
ljmp
mov
fistpll
xor
and
fisubl
pop
stc
mov
shll
inc
sbb
and
jno
ljmp
fbld
aad
cmp
xchg
ret
mov
or
sub
fisttps
jmp
cmp
sbb
and
imul
decl
mov
stos
pop
pop
adc
rcl
repz
inc
cmp
insl
mov
sbb
decl
mov
loop
out
fstps
mov
mov
pusha
mov
fcmovnbe
cmp
push
jmp
arpl
movsb
je
jmp
out
and
inc
ret
or
push
fadd
xchg
push
sub
xchg
ljmp
jbe
sbb
loop
outsb
inc
aad
pop
sub
lret
out
jno
inc
aam
or
aas
incl
xlat
sub
int
fildll
in
dec
outsl
aas
cltd
cmp
push
es
pushl
inc
sbb
inc
mov
int
mov
or
cmpsl
stos
and
adc
mov
fcoms
addr16
sub
push
andl
cmp
cmp
in
xchg
mov
inc
mov
inc
test
cmp
mov
aad
add
add
adc
xlat
popf
lahf
jmp
xlat
jge
pop
inc
adc
mov
inc
push
out
push
xchg
pop
js
iret
push
in
and
in
mov
mov
jp
cmc
jae
stos
jl
outsl
test
mov
or
pushl
test
fcmovbe
setge
fildll
fxch
loope
and
ror
dec
out
add
movsb
loopne
scas
and
data16
enter
loop
hlt
sub
addr16
fs
lcall
shrb
xor
popa
xchg
inc
adc
adc
mov
dec
sahf
pushl
cmp
sub
mov
mov
pop
add
scas
pop
lock
fistpll
lcall
adc
scas
mov
jmp
nop
adcb
jecxz
inc
outsb
mov
pushl
out
ja
and
xchg
jmp
out
mull
mov
cmp
jmp
push
and
mov
daa
pusha
out
fidivrs
pop
xchg
sbb
out
xchg
add
fsubl
call
ss
gs
cmp
rcll
aas
imul
ja
inc
add
aas
inc
in
pushl
cwtl
leave
dec
add
mov
sbb
std
cs
inc
test
xchg
out
cld
jle
sar
ljmp
add
lods
rolb
pop
pushf
movsb
sub
mov
dec
push
in
and
incl
fildll
or
ljmp
cmp
cmpsb
jg
lea
or
lcall
ja
push
jnp
mov
cmp
mov
dec
roll
or
adc
pushl
js
std
mov
sbb
mov
cmp
bound
inc
aad
sahf
jecxz
push
jmp
and
jmp
shll
aam
mov
ss
lret
push
decl
lahf
lret
jne
jmp
pop
mov
sub
dec
mov
add
scas
mov
decl
imul
mov
or
ror
push
popa
and
js
ljmp
ljmp
test
insl
and
sub
dec
mov
cld
pop
sbb
scas
dec
iret
nop
cmp
add
mov
mov
lcall
sbb
or
loop
stos
mov
out
adc
rol
mov
decl
add
sbb
xor
push
test
lret
mov
jns
mov
rcrb
push
push
test
fisubrl
stc
insb
sub
jno
inc
fidivl
push
inc
jmp
push
cwtl
outsb
out
jecxz
xchg
inc
add
jnp
xlat
push
pop
sub
cmp
sti
or
and
lods
mov
push
sbb
pushl
jl
add
cmp
add
movsb
lds
arpl
pop
adc
fistl
jmp
add
enter
or
iret
in
jno
sbb
adc
mov
dec
movsb
inc
mov
call
cmp
out
inc
in
xor
outsb
xchg
mov
ja
xchg
scas
lret
ljmp
mov
mov
cmp
cmpsl
es
jae
icebp
and
into
movsl
loope
mov
sbb
call
add
enter
pop
in
addr16
inc
xor
adc
addr16
shrb
incl
mov
cmp
and
lret
iret
xlat
xchg
pop
jl
mov
stc
repz
push
inc
mov
jmp
sbb
push
out
cwtl
sbb
outsl
stos
push
into
push
fmuls
decb
lea
lahf
xchg
mov
ljmp
inc
mov
add
push
push
out
pop
int3
je
jmp
add
shll
jno
add
decl
sti
jb
xlat
xchg
and
cmpxchg8b
into
mov
push
pop
adc
mov
adc
sar
call
pushf
push
clc
iret
jmp
imul
shl
pop
push
pop
xchg
pusha
repnz
sub
pop
negb
push
in
pushl
xor
inc
xor
sub
adc
xchg
cmpsl
adc
adc
lock
pop
pushl
incl
cmc
test
pop
sub
mov
push
xchg
int3
fisubl
inc
mov
jmp
rcrb
cmp
fs
sarl
lock
inc
lret
inc
in
loopne
jle
das
mov
sti
fadds
in
cld
or
out
push
jecxz
aas
and
insl
xchg
dec
in
sub
sub
call
cmp
inc
fidivrs
xchg
xor
stos
push
bound
js
inc
fcmovnu
les
aad
fdivrl
jmp
out
jmp
fnstenv
xor
or
dec
into
sub
jbe
imul
enter
fwait
push
adc
mov
sub
lcall
decl
jmp
dec
addl
add
jae
imul
add
lret
jno
adc
dec
in
jno
js
sub
mov
push
repnz
pop
push
jmp
lcall
lret
inc
std
js
bound
xchg
scas
pop
jl
or
add
ror
std
insl
xchg
dec
push
daa
sbb
call
rclw
mov
push
pop
jae
mov
je
xor
xchg
xlat
push
xor
fadd
jg
decl
cld
loopne
lcall
xor
test
or
mov
stos
out
sbb
jmp
fistl
add
inc
sub
push
test
cmp
mov
pushl
or
dec
cmp
adc
push
xor
xor
lods
fnstcw
adc
dec
out
jge
loope
pushl
stos
std
xchg
jmp
add
fcomp
xchg
repz
out
pop
into
xchg
cli
push
enter
xorb
cmp
mov
hlt
pop
push
js
sti
mov
dec
mov
lods
push
rcl
xchg
sbb
sahf
mov
inc
outsb
movsl
push
inc
inc
jbe
in
lret
dec
je
or
incl
jns
fcompl
or
in
cmc
pop
dec
movsb
adc
xor
call
or
mov
push
pop
in
js
mov
mov
test
popf
xchg
cmp
and
sub
ss
bnd
cmp
aam
xchg
cli
je
jmp
mov
addr16
dec
add
inc
mov
adc
mov
andl
sub
sub
pop
es
xor
cmp
pop
cltd
cmp
repnz
aaa
add
fmulp
push
inc
test
mov
call
mov
dec
cmp
xchg
add
jl
inc
jno
ja
mov
xorb
arpl
decl
scas
inc
ss
sarl
mov
aam
rcl
push
xor
mov
das
fs
xchg
lcall
jmp
das
jnp
dec
shlb
cmpl
lea
loop
stos
sbb
hlt
ljmp
mov
lret
imul
enter
xchg
pop
xor
mov
data16
fimull
jl
xlat
mov
mov
test
mov
subb
sarl
jg
std
lahf
xor
inc
jl
outsb
fadd
or
mov
lret
clc
mov
cltd
ljmp
int
and
out
roll
lods
or
xchg
xor
jmp
add
inc
fs
enter
xor
lret
jl
fcompp
rclb
jp
movsl
and
imul
pushl
push
push
lahf
test
fcmovnb
push
aad
xor
out
cld
and
adc
jge
or
insl
mov
in
mov
or
sti
pop
xchg
fistl
cmp
inc
faddl
movb
decl
sbb
and
pop
push
fimull
push
mov
jge
sub
xor
fsubl
fisttps
jg
cmp
dec
sub
pop
sbb
jecxz
push
mov
js
add
call
sar
inc
fdivrs
mov
pop
add
push
mov
xchg
jnp
mov
int
test
and
in
sahf
inc
inc
js
aam
mov
adc
inc
mov
pop
or
cs
and
mov
les
inc
stos
inc
sti
cmc
adc
mov
fcompl
bound
incl
pushf
out
inc
xchg
inc
loop
and
cmp
cmp
test
incl
push
popf
add
test
cmp
mov
inc
das
lret
push
arpl
pop
or
decl
cmp
inc
into
xchg
mov
nop
into
in
and
jge
pshufw
incl
inc
mov
inc
mov
mov
add
aas
ficoml
test
and
imul
loope
inc
dec
pop
mov
xor
mov
xchg
into
mov
lret
pop
xor
call
cmp
jl
cli
push
mov
push
push
popf
popa
repz
dec
add
std
lcall
ret
sbb
in
inc
nop
loop
and
jo
mov
leave
dec
mov
leave
es
fimuls
jmp
out
inc
mov
or
out
cmp
aad
mov
fidivl
out
xchg
insl
or
xor
pushl
jp
and
fisubl
popa
andb
push
xchg
add
fcmovnu
les
pushl
jmp
and
loopne
imulb
mov
mov
jno
fdivrp
scas
push
mov
and
xchg
xor
and
xchg
arpl
push
mov
adc
xchg
ds
call
adc
lock
std
gs
ss
out
sbb
stc
xchg
insl
xor
push
push
dec
clc
push
jg
incl
arpl
loope
out
cmc
nop
in
inc
xor
adc
aam
cli
subl
pushl
in
dec
cld
xlat
pop
cltd
nop
pop
mov
and
push
loopne
js
out
popa
gs
push
inc
mov
into
lods
push
jae
sbbb
pusha
jecxz
xlat
pop
jno
fcomi
push
mov
sub
xor
cmp
decl
jp
push
push
and
sbb
sub
push
dec
sub
fistps
sbb
in
xchg
decl
push
xchg
decb
inc
add
daa
pop
jae
in
filds
jb
jp
enter
cmp
ljmp
loop
cs
rcl
sti
pop
and
pslld
fidivrs
mov
fildll
jmp
pushf
outsb
out
test
sbb
das
pop
loopne
sbb
jae
mov
ja
xor
fcoms
mov
or
lret
sbbl
jmp
jmp
sub
je
das
icebp
bound
jae
mov
sub
stos
xor
call
inc
fwait
pop
sbb
inc
dec
sub
xchg
xor
and
mov
rol
mov
pop
inc
sbb
ljmp
pop
mov
mov
pushf
jns
test
pushf
imul
xchg
sahf
and
decl
out
enter
int
enter
mov
pusha
mov
push
pusha
movsb
stos
test
std
scas
dec
popf
out
in
in
ss
rclb
repz
loope
mov
and
jecxz
jae
xlat
int
mov
sbb
outsl
incl
jg
cs
pop
cltd
push
lahf
clc
enter
fldt
scas
mov
das
and
cmp
adc
or
gs
xchg
xchg
out
and
xchg
lds
into
fs
inc
and
cld
add
outsb
incl
jbe
lcall
adc
daa
jbe
jge
jnp
add
test
mov
or
jmp
pop
adc
add
sbb
pop
loope
adc
xorb
xor
inc
in
jge
pop
push
dec
ror
dec
repz
in
sti
mov
sbb
mov
rcr
shr
jo
call
mov
add
cwtl
mov
inc
sarl
push
mov
repnz
ljmp
inc
or
cmpsl
xor
ds
and
jecxz
ds
sub
pop
jmp
jo
cmp
mov
daa
adc
cmp
insb
sub
sbb
imul
xchg
ss
ja
cmp
into
lods
adc
sub
dec
jne
push
xchg
aas
lea
cmpsl
icebp
mov
out
mov
jge
int3
dec
lods
jecxz
movsl
adc
stc
fs
pushf
insb
and
fcmovu
lret
xor
adc
outsb
jecxz
xor
imul
add
cmp
lret
js
mov
push
in
sbb
jmp
inc
lcall
outsl
cmp
rorb
xchg
aas
mov
aas
xor
pushl
call
sbb
mov
mov
out
repnz
cmpsl
in
mov
test
stos
call
lea
lods
nop
push
xchg
push
arpl
push
push
shl
xchg
cmpsb
mov
incb
incl
cmc
push
pop
dec
ret
movsl
dec
jo
sub
imul
cmp
add
adc
das
ss
inc
lods
call
sbb
cmp
push
jns
testl
jmp
jle
adc
jmp
mov
sbb
in
sub
jno
loope
mov
cmp
movsb
mov
adc
int3
jmp
sub
sub
push
lock
jg
call
lock
mov
adc
sbb
ljmp
mov
sub
mov
test
rorl
and
jae
rorb
shll
jp
sti
stc
jne
inc
ficoms
lock
and
icebp
sbb
add
insl
pop
cmp
lcall
xor
pop
dec
push
je
dec
sbbb
in
dec
jmp
insl
mov
push
stos
mov
jmp
jno
push
lcall
fnstcw
das
repz
incl
imul
push
xor
mov
and
movsb
imull
add
jnp
fs
ss
pushl
aam
bsr
mov
mov
mov
fisubs
fistl
lcall
add
lock
test
and
push
popf
cmp
or
ljmp
cmp
cmp
jl
add
add
das
and
jl
mov
test
add
jmp
scas
pop
sarl
popf
in
mov
scas
pushf
push
stc
adc
sbb
adc
push
out
decl
int3
mov
sahf
scas
and
xlat
push
lds
xor
shl
hlt
fldenv
lret
ljmp
cmp
rol
aas
test
out
fstl
mov
ljmp
pop
scas
popa
jno
das
pushl
pop
cli
stos
sbb
mov
icebp
test
call
ja
mov
mov
xor
dec
shr
xchg
inc
clc
scas
inc
cmc
xchg
sbb
push
iret
lcall
inc
nop
call
lods
out
add
ds
xchg
sbb
dec
imul
inc
add
jb
mov
ljmp
cs
push
ret
subl
push
sub
call
test
cltd
mov
lahf
pushl
lods
cli
subl
or
int
lcall
pushl
clc
enter
outsb
jge
xchg
sub
adc
in
mov
pop
adc
push
fsubr
mov
lds
add
cwtl
repnz
into
shlw
push
outsl
ret
cwtl
out
in
mov
jmp
mov
cmp
pop
rolb
xor
sbb
pusha
mov
jno
ds
dec
ret
or
push
and
bound
pop
test
xor
dec
sub
mov
sbbb
fdiv
out
jl
sbb
and
neg
inc
ret
inc
mov
decl
sbb
pop
cld
mov
lock
insb
into
imul
sbb
fdivrs
mov
inc
push
add
pop
inc
cltd
push
push
nop
bound
push
mov
sub
xchg
cld
jecxz
cmp
decl
dec
pop
fcomps
xlat
bound
aad
sbb
insb
jl
mov
cmp
cmp
lcall
mov
lcall
cltd
xchg
test
mov
in
das
lret
ja
out
loop
xchg
lret
incl
out
repnz
dec
xor
loop
push
sbb
add
aaa
repz
cmp
xor
sti
incl
rcrl
lds
cli
inc
iret
mov
jge
shll
or
xor
xchg
sub
decl
sub
push
jno
jo
int
cmp
stos
adc
cld
jbe
xchg
mov
std
out
and
jnp
sub
pop
ss
cmp
lahf
nop
test
outsb
jno,pt
ljmp
call
repz
jae
movsw
mov
lret
cmp
dec
je
mov
push
aas
pop
testl
outsl
mov
jmp
and
xor
neg
div
lods
sub
cmp
incl
stos
stos
push
lods
xchg
and
dec
shl
xchg
call
arpl
gs
call
ror
icebp
jnp
mov
scas
subl
rorb
nop
xchg
outsb
imul
insb
decl
jmp
mov
movsb
mov
push
lods
or
xchg
cmp
mov
call
roll
lods
cmpsl
out
pushl
or
push
aam
outsb
xchg
cmp
cmpsl
mov
cmp
ljmp
xor
pop
pop
mov
or
hlt
push
cmpsb
lret
repnz
inc
ss
incl
je
movsb
das
cmp
inc
je
sbb
inc
cmp
jge
jb
fsts
loop
push
mov
idivb
cmp
jle
out
jae
data16
out
fcomps
and
call
dec
sub
and
lret
dec
enter
jge
fmul
fsubl
pop
test
cmp
inc
ss
ds
rcrb
mov
pop
mov
push
mov
cmp
lret
aam
push
in
sti
xchg
in
lock
inc
mov
fsts
seta
mov
enter
ljmp
daa
movsl
mov
adc
testb
push
mov
cmpsl
rep
ja
test
mov
and
cli
pop
cmp
mov
mov
rcrb
stos
mov
sub
push
shll
jp
sub
outsb
jecxz
add
mov
popf
in
negl
lods
mov
and
pushl
stc
cmp
pop
push
inc
movsl
sub
push
pop
lret
test
pushl
int3
pop
jbe
pop
outsb
fistpl
add
enter
push
sub
stos
icebp
scas
sbb
and
sbb
out
decl
out
cli
stc
fistpll
inc
daa
lahf
mov
cltd
imul
cltd
xor
enter
decl
int3
push
sarl
push
addl
test
xchg
loope
inc
push
xchg
adc
std
outsb
pop
add
mov
outsl
cmp
mov
pop
test
test
test
icebp
jp
inc
in
xchg
hlt
mov
cmc
xor
and
cs
sub
and
imul
or
push
mov
add
mov
ret
add
lret
add
push
lods
outsl
mov
outsb
rorl
call
lods
mov
xlat
adc
shl
fsts
movsb
out
jne
and
cmp
jne
or
test
mov
popa
sub
in
dec
cmc
stos
stc
out
lcall
faddl
mov
xchg
scas
lds
pop
lods
dec
dec
nop
insl
aam
jns
mov
inc
inc
jmp
cmp
rcll
leave
lds
dec
stos
ret
mov
clc
pop
adc
inc
adc
sbb
popa
test
ficoms
mov
cld
jle
dec
xchg
xchg
decl
push
in
int3
js
cmp
add
out
inc
sbb
ds
out
sbb
jg
mov
pop
and
fildl
testb
popa
inc
in
dec
and
aad
ss
jns
cmp
pop
cli
fwait
adc
insl
and
dec
pop
subb
fisttpll
cmp
xchg
xchg
sub
mov
jg
jecxz
enter
cli
xor
in
jg
cmpsl
push
faddl
mov
mov
pop
xchg
and
mov
or
stos
and
and
call
cmp
dec
movl
mov
fldt
adc
mov
jbe
inc
jl
test
call
ja
mov
out
pop
pop
aaa
inc
cs
test
sub
and
lcall
pop
push
insl
or
dec
in
cltd
xor
orb
arpl
sub
pushl
into
mov
fucomp
lret
mov
push
aam
sub
fdiv
pop
stc
daa
frstor
jmp
cld
das
sbb
jl
sbb
xor
out
ja
sub
pop
add
dec
ss
xor
xor
jg
sbb
adc
push
popa
daa
ret
adc
ss
mov
out
addr16
clc
loopne
fs
dec
inc
stos
mov
lahf
fs
ret
sub
test
push
lods
mov
aad
mov
das
stos
inc
cmpsb
test
fldt
xchg
jne
inc
pop
push
jno
jmp
pop
fs
xor
sub
mov
xchg
lods
push
in
sbb
test
cs
jmp
mov
push
mov
jnp
xor
add
xchg
adc
jl
pop
sbb
ljmp
rclb
add
js
add
insl
inc
pushf
or
fwait
mov
sbb
push
xchg
das
or
xchg
mov
fstp
jbe
jmp
pop
dec
lahf
bound
cmp
jmp
sbb
aam
add
inc
ljmp
sbb
scas
cmpb
sti
xor
pop
xchg
in
or
outsl
mov
mov
repz
xor
pop
mov
jmp
dec
icebp
adc
es
call
int
push
insl
xor
roll
mov
and
xchg
adc
incl
imul
sbb
adc
or
ss
stc
decl
pop
call
jnp
mov
mov
push
xor
jmp
pop
mov
cs
ja
test
push
lds
sub
lcall
outsl
cmp
sbb
lcall
inc
mov
leave
mov
jo
or
ss
mov
xor
decl
mov
insl
mov
arpl
in
fnstenv
lahf
clc
jl
test
lcall
icebp
cld
xchg
aaa
pusha
cmpxchg
jmp
mov
cmpl
int
movsl
inc
call
mov
sti
push
jo
push
mov
cli
and
aad
jecxz
leave
or
push
pop
pop
jg
stos
test
adc
ja
outsb
mov
add
mov
sbb
push
inc
popf
cmp
jmp
lods
inc
fsubs
adc
dec
xorl
inc
and
dec
fistps
sbbl
arpl
into
xor
jae
loope
test
incl
mov
push
arpl
sbb
xchg
cmp
pop
into
addb
aas
or
ret
xchg
insb
pushl
sub
cmc
and
not
cmc
notb
mov
inc
mov
ret
push
add
inc
in
test
mov
insl
sbb
out
mov
and
cmc
pop
ljmp
inc
xor
inc
pop
cmpsl
inc
and
pop
sbb
in
add
jne
and
mov
int3
lahf
in
fstp
out
cmpsl
call
inc
ss
clc
cmp
sbb
mov
nop
cmp
lret
aaa
push
add
std
fildll
incl
adc
dec
inc
mov
in
fildl
jo
jno
orb
ror
dec
and
mov
aaa
push
adc
rorb
xor
sub
cmp
and
subb
xorl
decl
in
mull
lods
gs
dec
pop
pop
arpl
int3
sub
xor
jo
call
mov
push
repz
mov
push
ficomps
mov
inc
mov
jmp
scas
in
xchg
mov
mov
stos
inc
inc
std
testb
inc
mov
aas
push
pushl
fstpl
mov
clc
jl
cmp
js
int
and
cmp
mov
or
fcompl
ss
stos
sbb
out
lret
mov
loopne
cmp
sbb
jmp
movsb
jmp
lret
ret
aad
ret
push
pop
push
mov
aam
xor
cltd
aad
sub
lods
jge
ljmp
je
hlt
mov
mov
in
fldcw
jg
movsb
daa
or
xor
insb
sbb
mov
popa
fs
jmp
sub
mov
cmp
jecxz
lods
cltd
cld
rclb
das
inc
clc
cmc
push
sub
inc
in
push
movl
cmpsl
pop
aam
pop
stos
xchg
fcomps
setle
add
pushl
inc
js
popa
test
imul
insl
mov
xor
and
xchg
xchg
add
push
mov
popa
rclb
sub
call
inc
sbb
pop
cmp
adc
test
or
iret
movsl
mov
fmulp
pop
add
test
ret
fimull
mov
aam
dec
jecxz
hlt
idiv
push
rorl
repnz
aam
jle
sub
mov
test
pop
push
out
fadd
popa
dec
ja
inc
in
xchg
rorl
mov
mov
dec
or
adc
lcall
dec
or
loopne
mov
and
mov
sbb
push
je
dec
addr16
mov
sbb
fcos
jmp
ja
adc
mov
pop
push
call
inc
xchg
arpl
adc
orl
pushl
push
outsl
xlat
imul
daa
repz
ljmp
pop
int
fiadds
decl
fsubp
xchg
xor
popa
pusha
adc
es
or
sbb
and
call
jb
inc
stc
mov
inc
push
scas
pop
or
out
xlat
cmpl
ja
mov
fcomip
dec
inc
sti
test
js
insl
aas
jnp
scas
repnz
sbb
push
popw
outsb
in
incl
or
cmp
inc
inc
stos
out
mov
mov
addl
call
jge
jp
insb
cltd
mov
jne
dec
hlt
cld
enter
sub
pushf
adc
jmp
in
lds
test
and
in
cmp
fcoml
sti
sti
lret
push
lahf
out
test
mov
dec
addl
xchg
fsts
insb
push
sub
incl
daa
jnp
lcall
xchg
mov
sarl
dec
out
insl
xlat
inc
call
sbb
jo
or
inc
mov
mov
testl
dec
cmc
cmp
ljmp
pop
in
loop
mov
lods
mov
aas
sub
nop
dec
sub
lea
pop
jle
leave
shlb
sbb
sbbl
xor
sub
inc
repz
pushl
ljmp
scas
sbb
cltd
and
xchg
xor
dec
cmc
cmp
insb
adcl
mov
xchg
stos
add
call
pushf
imul
sarb
xchg
pop
incl
je
pop
imul
dec
iret
inc
data16
jl
jge
mov
push
xor
mov
lcall
nop
xchg
adc
xor
xor
sahf
sub
jmp
push
cwtl
in
inc
out
jno
push
les
cmp
sbb
mov
into
std
adc
jmp
stc
mov
in
mov
xchg
cmp
incl
mov
cmp
push
scas
cmc
xor
out
outsb
push
std
add
jo
jno
dec
enter
sbb
cmp
aaa
jecxz
pop
enter
fldl
fisubl
sbb
incl
mov
inc
pushf
hlt
sub
fiaddl
push
push
xor
xlat
adcb
mov
call
in
xchg
out
jecxz
lret
daa
xchg
jae
inc
dec
ret
fisubs
xchg
jns
xorl
xor
xor
out
cmc
shrb
inc
push
xchg
out
mov
lcall
mov
aam
rcrb
in
and
faddl
cmpsb
imul
cld
mov
stos
out
lcall
cs
int3
pushf
mov
add
dec
lds
mov
add
decl
and
popf
xchg
inc
jne
les
jb
and
xor
ret
jg
xchg
mov
stos
ficomps
push
in
jl
fisubrs
stc
outsb
mov
or
aad
ljmp
shlb
add
loopne
sbb
sti
xor
sub
sub
decl
fdivs
imul
pop
fmull
inc
cwtl
aaa
adc
pop
cmp
call
sbb
xchg
ret
and
mov
or
out
jecxz
add
mov
dec
std
push
adc
aas
xchg
in
xor
jae
mov
add
cmp
jl
sub
jmp
push
add
mov
jmp
adc
jb
or
mov
int3
pop
cmp
mov
fstpl
jae
xor
cli
je
mov
scas
xchg
js
inc
jecxz
sarb
out
xor
int
pop
loope
decl
mov
iret
cwtl
push
pusha
adc
pop
fwait
fisubs
shr
fcmovu
jp
cmc
push
xchg
aas
and
xlat
or
mov
xchg
jle
jmp
pop
testb
or
pusha
ret
insb
imul
in
in
fildl
mov
push
jecxz
fmuls
pop
jp
call
jle
xor
or
call
or
pop
pop
sbb
cmp
lret
aad
cwtl
mull
lea
rorb
push
inc
mov
pushl
mov
leave
mov
popf
sarb
lahf
or
pop
xlat
push
lods
int
jmp
icebp
jge
incl
inc
int3
xchg
jmp
add
into
xor
dec
inc
out
adc
and
rep
incl
mov
inc
mov
jnp
lahf
adc
xlat
pop
in
roll
lcall
push
fcomps
mov
mov
jo
lret
inc
cmp
arpl
pushl
ret
mov
call
fmuls
cs
jns
mov
sti
loope
ficoml
push
xchg
incl
mov
or
mov
in
xor
scas
shl
pop
push
icebp
mov
push
push
dec
std
mov
js
test
dec
inc
aaa
mov
push
fmuls
push
or
jmp
jnp
ret
nop
push
and
in
aam
fistl
inc
xor
aad
call
outsl
lock
mov
mov
loopne
sub
inc
insb
inc
mov
xor
rclb
aas
mov
dec
add
mov
leave
lcall
xor
cld
pop
xchg
scas
dec
inc
push
pop
push
add
lcall
jle
cltd
stos
sar
push
lret
dec
xor
pop
and
into
fmull
lods
mov
fsubs
in
pushf
loope
test
mov
js
mov
lret
lock
adc
jecxz
push
cmp
je
sub
incb
push
loope
push
pop
lods
mov
std
data16
call
out
xchg
push
pop
jle
jmp
imul
push
add
loop
push
add
pop
inc
push
push
jno
test
cmp
and
daa
dec
sub
stos
in
sub
xchg
clc
aas
popf
xchg
ljmp
incl
outsl
jnp
popa
xchg
ret
jmp
push
or
loop
inc
pop
xchg
idivb
fadds
inc
rcrl
js
and
fadd
mov
mov
ds
and
jmp
in
sbb
lcall
ror
cltd
mov
fstps
rorb
push
jle
pop
jg
lcall
in
addl
in
sub
inc
movsb
mov
dec
movsl
jle
imul
pushf
ljmp
xchg
cmpb
mov
pushf
push
push
push
mov
in
daa
jle
mov
xor
xor
pop
cld
nop
or
add
lret
incl
test
or
pop
push
out
sbb
push
in
ret
aad
shrl
jo
jp
decl
es
movsb
cmp
jbe
cmpsb
mov
sub
xor
cmpsl
xchg
dec
data16
jecxz
xor
inc
push
add
cwtl
lret
add
lods
jecxz,pt
arpl
adcb
dec
es
cmp
and
cli
jb
jmp
ret
aam
xchg
int3
data16
mov
testl
lret
cld
inc
int3
xor
and
dec
call
cs
sahf
and
imul
xchg
xchg
xlat
dec
bound
push
je
mov
jns
call
pop
cwtl
fwait
out
or
mov
test
jno
xor
fidivl
push
push
add
mov
imul
push
outsb
or
cmp
mov
cli
pop
pushl
fbstp
inc
cmp
jg
mov
mov
popf
hlt
dec
push
out
inc
testl
orl
incl
aas
data16
popa
outsb
enter
mov
and
into
in
dec
mov
pop
fwait
call
mov
cmpsl
in
inc
xchg
loopne
adc
jbe
sub
or
loope
jl
jmp
dec
gs
fidivrl
cmp
ret
pushf
aad
sbb
inc
mov
and
jle
xor
xchg
lahf
call
test
pop
aaa
sarb
jne
push
sub
lahf
pop
lcall
dec
sub
pusha
lahf
sbb
pop
push
pop
ja
sbbl
pop
jns
add
out
inc
call
lcall
in
push
stc
adc
jb
bound
fisubrl
rclb
and
pop
repz
mov
jnp
popf
add
fistpll
scas
rclb
xor
mov
cmp
mov
jle
decl
and
out
sbb
cmp
jmp
jae
dec
xor
mov
or
mov
push
adc
lea
pop
pop
mov
mov
les
rep
jp
xchg
sub
ljmp
or
mov
push
mov
pop
xor
nop
xlat
push
xchg
add
mov
test
or
decl
sbb
dec
movsb
mov
add
inc
inc
sbb
add
or
imull
div
in
pushf
cmp
jp
stc
popa
mov
movsl
scas
push
sbbb
sub
xchg
jmp
or
fnstsw
pop
mov
loopne
cld
test
mov
aad
int
cltd
cmpsb
cwtl
jg
icebp
jne
pushl
popa
int3
scas
mov
inc
jno
mov
jbe
inc
add
roll
inc
jbe
incl
push
ds
sbb
pop
fldenv
jge
jno
shrb
stos
lods
dec
fsubs
lcall
jl
inc
aam
imul
fisttps
cmp
dec
nop
out
xchg
push
pushl
push
mov
sti
ret
cmpsb
lods
inc
push
sahf
xor
cmp
jg
mov
sbb
incl
lret
sbb
cmp
cld
stos
and
stc
or
mov
jne
nop
int
cmp
std
xchg
mov
call
cltd
xchg
pop
ret
shl
mov
pop
push
idivb
fwait
or
mov
mov
cmp
or
push
jo
gs
aad
jmp
and
cmp
nop
aaa
ss
fistpll
jns
out
or
stos
lods
insl
fsubl
in
cmpsb
into
inc
pop
xchg
inc
scas
pop
gs
incl
lods
sahf
mov
mov
hlt
dec
adc
dec
xchg
daa
lcall
xor
insl
lret
jmp
jg
mov
scas
push
pushf
sbb
mov
lcall
cwtl
push
ss
cwtl
incl
push
pop
inc
shrd
dec
cmp
and
mov
or
js
mov
subl
fidivs
adc
or
inc
sarl
mov
pop
mov
loope
pop
sarb
jmp
lds
dec
inc
cwtl
push
ficoms
xchg
adc
inc
sbb
lahf
cmp
lods
mov
fwait
push
ljmp
xor
push
shll
cmpsl
arpl
add
inc
sbb
and
cmp
add
push
cltd
in
cld
popaw
xor
addr16
rclb
jo
in
aas
stos
pop
stos
adc
jb
pop
sbb
inc
xchg
xchg
inc
mov
or
mov
cmp
dec
fwait
push
xchg
mov
std
xlat
out
adc
push
jg
xor
pushf
mov
loopne
fiaddl
or
cmp
int
out
imul
inc
aam
or
and
repnz
cmp
and
xor
cmpsl
test
arpl
dec
add
dec
adc
pop
sbb
vaddss
inc
mov
sub
pop
adc
in
mov
ljmp
or
fmuls
arpl
and
dec
cmp
outsb
jnp
int
adc
mov
pop
add
adc
decl
ret
cld
push
jo
arpl
lds
lret
fdivrs
addr16
dec
je
push
cmp
pop
mov
repnz
test
vsqrtps
add
push
xchg
mov
dec
icebp
and
cld
pop
xchg
mov
sbb
inc
in
sbbb
and
and
gs
xchg
jbe
add
outsb
scas
test
mov
adc
cmp
sub
je
xor
incl
cli
fcom
ret
inc
xor
mov
inc
pop
push
xchg
test
jmp
inc
mov
lret
xor
xlat
dec
adcl
push
test
xchg
and
insl
cs
incl
pop
mov
mov
or
pushf
jo
cmc
iret
jo
jb
push
popf
andl
pushl
dec
daa
fnstenv
xor
push
icebp
in
ds
iret
ja
das
add
ret
jno
lcall
inc
push
xchg
mov
js
rolb
ret
pop
movsb
push
lds
xchg
mov
in
lcall
jae
popf
cli
mov
icebp
cmp
and
sub
or
push
xchg
dec
xorb
mov
add
incl
mov
dec
sub
int
xchg
repz
push
repz
push
jae
push
outsl
add
jae
call
xchg
ljmp
sahf
gs
and
xchg
sahf
fimull
add
incl
std
or
repnz
sub
icebp
add
loop
dec
arpl
cli
fs
cs
test
mov
jns
mov
test
in
xchg
xlat
or
std
sub
mov
frndint
in
lcall
fs
imul
aad
pop
fwait
mov
adc
sbb
sarb
repnz
and
inc
xchg
scas
rol
mov
cltd
inc
es
rcrl
dec
stos
or
mov
inc
sbb
lcall
pop
add
inc
in
xor
mov
xchg
aaa
sar
jbe
push
sahf
mov
fistl
dec
xchg
cmp
fiadds
decl
jmp
ret
or
dec
lea
jp
dec
lods
cld
xlat
xchg
push
loopne
test
pop
jne
stc
movsl
xor
jge
ljmp
or
popf
cltd
lret
cmp
sbb
out
dec
push
push
sbb
enter
push
or
sub
aaa
mov
fimull
add
call
pop
inc
gs
stos
push
dec
repnz
push
xchg
in
pop
repz
das
shlb
sahf
js
leave
push
mov
ljmp
or
hlt
and
or
mov
int3
inc
pop
out
xor
jnp
xor
add
ljmp
mov
ret
pop
aam
xchg
pop
into
push
test
xor
push
xchg
xor
and
ljmp
push
mov
mov
daa
leave
ret
xchg
and
stos
test
mov
shr
decb
out
add
pop
cltd
cmpsl
pop
push
ret
or
push
out
adc
cwtl
mov
call
imul
mov
adc
in
xchg
mov
cmp
aad
inc
repnz
push
push
ljmp
xchg
in
ljmp
dec
fcompl
mov
les
call
dec
lods
or
push
add
add
fdivp
add
push
lahf
add
ljmp
lcall
popa
push
pop
sub
pop
lock
and
dec
sti
adcl
sub
ffree
pop
xchg
sub
xlat
sarb
cmc
add
jp
sub
jnp
jmp
lahf
jmp
aas
in
aad
mov
arpl
sarl
jge,pn
add
sbb
dec
cmpsl
pop
ja
cmp
sbb
sti
inc
xlat
ret
fsubrp
lret
pop
cs
dec
aad
mov
call
inc
sbb
ljmp
fdivrs
imul
ljmp
jge
jno
sbb
sbb
xchg
mov
mov
mov
dec
sub
sbb
fistps
divl
pop
decl
and
fdivp
sub
pop
call
pop
ja
adc
lcall
mov
cmp
jmp
bswap
adc
sbb
push
mov
imul
pop
imul
fbstp
and
outsl
mov
jmp
dec
push
scas
fwait
out
cmp
add
nop
fnstsw
dec
in
cs
fidivrs
insb
call
lret
sub
xchg
inc
lods
fistpl
jge
dec
inc
xchg
pop
je
xchg
xchg
jecxz
xchg
dec
sahf
xor
adc
fldcw
enter
sahf
fldt
das
les
das
and
mov
incl
int3
mov
incb
sub
in
and
sbb
pop
mov
jmp
and
fisttpl
adc
mov
jmp
push
ficoml
int
call
cmc
aam
mov
out
mov
je
cmp
call
sbb
and
jno
enter
mov
in
subb
jne
push
mov
loopne
jno
dec
mov
xor
mov
popa
sub
incl
stos
lcall
cli
stos
rcrl
jmp
in
subl
ljmp
mov
cmp
je
mov
shlb
push
sub
sub
loop
pushl
into
pop
fcmovnu
test
and
pop
xor
and
js
inc
xchg
jns
incl
mov
insl
jle
or
cwtl
int
add
fisubs
or
or
pushl
sarl
jmp
push
cltd
cs
lods
push
dec
xlat
call
mov
xor
and
call
cli
dec
mov
imul
ror
sbb
adc
dec
jo
mov
loopne
lcall
scas
lahf
lret
fnstcw
mov
xchg
sbb
xchg
pop
cmp
fwait
push
test
adc
test
push
sub
andps
call
fildll
adc
movaps
fcompl
lcall
into
push
shlb
adcb
sbb
icebp
popf
rorl
shr
dec
xor
test
cmp
cld
arpl
and
mov
xchg
xlat
aas
test
sub
dec
ljmp
shl
roll
add
jg
sbb
adc
xlat
ja
int
jb
ret
addb
pushl
dec
or
add
add
movsl
dec
into
sahf
mov
sub
sbb
inc
fmul
and
repz
mov
ret
cld
dec
sbb
fdivr
ficoms
and
data16
arpl
adc
pushl
loope
jo
inc
fsubrs
nop
out
inc
dec
sub
pmaxub
cmp
jnp
pop
ja
test
sub
movsb
lahf
and
mull
fisubs
sbbl
in
cli
jge
jmp
sti
jae
scas
fdivrl
in
popf
cmp
xlat
inc
loope
fsubs
fsts
lds
stc
jnp
mov
or
nop
test
sbb
loope
stc
in
aam
xor
dec
in
fnstenv
and
sahf
xchg
cmp
push
ljmp
lret
sub
xor
mov
enter
jmp
sbb
repnz
cmp
inc
mov
ffree
jecxz
rclb
imul
decl
data16
cmp
stos
cmp
xchg
dec
leave
add
imul
js
cwtl
insl
call
into
cmp
and
sbb
or
push
and
xchg
jbe
mov
notl
popf
jp
push
cli
push
sub
mov
pop
adc
shrb
orb
add
ljmp
dec
push
sub
lods
mov
mov
mov
pop
ret
mov
call
cmp
push
ja
cltd
rcr
jbe
lock
mov
mov
cmpl
pushl
inc
in
jle
cld
movsb
shlb
std
and
add
inc
les
fdivrp
jg
cld
sbb
pop
push
push
cmp
jmp
mov
or
pushl
pop
jecxz
hlt
mov
mov
icebp
gs
dec
push
xchg
and
inc
adc
imul
dec
sbb
sbb
or
inc
xchg
shll
dec
mov
stc
inc
sub
test
xor
stos
dec
push
xchg
add
adc
call
sub
incl
cltd
lea
mov
test
xor
jg
stc
mov
cmp
push
pop
lcall
sbb
xchg
pop
sbb
fsubrl
cwtl
jp
add
xor
xchg
mul
pusha
pop
sbb
js
out
lds
ficoml
test
inc
or
clc
mov
call
fwait
mov
pushf
jb
les
xor
jns
ds
xchg
xchg
or
pushl
xor
cmp
fnstenv
jg
sub
bts
jo
mov
xchg
scas
and
push
sti
pop
and
fadds
dec
jg
cmpsb
scas
pop
cmc
or
add
xor
pushl
pop
or
in
fs
inc
jmp
add
outsl
shr
cmc
out
pop
test
mov
sub
jmp
xchg
pop
xchg
es
sti
mov
test
sbb
xchg
divb
jp
call
loopne
rcll
xchg
push
test
fstps
stos
outsb
sbb
inc
je
inc
sbb
dec
sbb
call
outsb
sbb
loope
movsl
push
insb
decb
fmul
jo
mov
jbe
lcall
subb
pop
mov
sub
ficompl
cwtl
test
sbb
xchg
push
test
jge
dec
sbbb
mov
mov
inc
ret
shr
daa
fists
and
fbstp
data16
call
dec
pop
and
dec
addr16
push
jg
jl
add
pop
ss
dec
les
rorl
mov
loop
push
jecxz
cli
out
andb
outsl
or
xchg
stc
mov
movsl
dec
mov
cmp
addr16
les
fildll
ret
call
loop
and
dec
jp
jl
ljmp
mov
and
shrb
dec
sbb
cmp
mov
xchg
jo
mov
es
cmpsb
mov
movsb
fdivs
dec
loopne
xor
out
sbb
mov
sbb
sub
insb
inc
jo
incl
or
mov
push
adc
dec
and
call
jno,pt
sbb
pushl
shl
pop
jb
cmpsb
jno
mov
cs
add
dec
adc
lods
mov
call
or
lret
insb
repnz
mov
mov
or
mov
sti
lahf
adc
pushl
pop
push
or
popf
sub
push
xor
push
shl
xchg
cmp
push
push
test
fsubrp
pushl
divb
lods
inc
inc
or
push
jbe
bswap
lcall
pushl
cmpsb
push
xchg
or
push
call
jg
jle
sbb
stc
push
cld
stc
dec
inc
arpl
ljmp
lret
mov
orb
push
sub
nop
repnz
outsl
add
decl
shll
cmp
daa
mov
jb
sarl
mov
imul
lcall
push
mov
mov
and
sbb
in
mov
js
insb
push
mov
jmp
dec
mov
outsb
mov
sbb
in
pushf
stos
hlt
mov
ret
xchg
out
pusha
ret
add
out
mov
sahf
and
pop
lods
ja
add
in
push
mov
mov
sti
call
call
mov
xchg
arpl
aam
cmp
jl
xlat
lock
stc
pop
mov
movsb
or
aad
ud0
jmp
jbe
outsl
adc
xor
fisubl
mov
jno
push
or
aaa
outsl
cmp
call
and
push
jle
xchg
stos
dec
inc
test
adc
mov
and
hlt
mov
decl
xor
mov
xchg
jb
or
jne
ficomps
test
cwtl
cmp
cmp
pushl
dec
push
cwtl
pop
inc
mov
push
mov
shrb
pushf
loope
mov
fdivs
imul
int3
call
iret
mov
push
call
or
pop
sub
popf
mov
out
incl
imul
and
int
mov
push
pop
pusha
arpl
xor
xlat
mov
addb
lods
push
sbb
jns
xchg
cmp
enter
xchg
and
pop
hlt
xchg
incl
fldcw
push
dec
or
scas
push
mov
cwtl
jp
out
or
incl
dec
push
jecxz
dec
xor
mov
pop
inc
and
pop
call
push
sub
lcall
test
pop
lcall
vorps
test
jge
xchg
pushl
xchg
inc
insb
or
into
push
push
aaa
xor
adc
sub
aam
jp
mov
cmc
adc
jl
stc
pop
stos
push
sbbl
repz
lods
out
mov
xor
push
xchg
mov
cmp
pushl
jge
xchg
push
inc
shrb
pushf
and
xchg
or
xchg
test
pop
outsb
add
pushf
pop
loope
and
dec
jge
inc
js
call
pop
lods
jne
imul
lock
jb
fmull
ljmp
rolb
mov
cwtl
xor
pop
jno
jbe
popf
xor
call
dec
add
xchg
jb
jo
xchg
mov
popl
sahf
test
les
cs
cli
pushf
enter
sub
push
mov
cmpsb
in
add
gs
fcomps
jge
stc
mov
mov
lods
fst
movsl
movsb
stos
mov
decb
loopne
add
scas
repnz
cmp
lcall
std
in
mov
or
mov
shl
testb
jnp
add
les
decl
ret
jg
pop
out
lds
inc
dec
out
pop
mov
and
fidivl
push
clc
mov
popa
or
and
fwait
iret
pop
sub
jo
push
mov
gs
xchg
lds
ficoms
decl
and
push
pslld
sbb
push
xchg
xor
cmp
sar
decl
in
pop
ljmp
es
add
mov
jge
insl
or
mov
jmp
pushl
jnp
leave
call
rolb
loope
cmp
cmp
daa
sub
repnz
in
stos
jns
mov
xchg
loope
push
pop
xor
push
jbe
cmc
sahf
inc
repnz
xor
mov
call
mov
incl
pop
xor
xor
ja
cmp
fcoml
pushl
fstps
mov
jp
mov
dec
subb
adc
pop
jle
mov
pop
xor
xor
jns
bound
xor
pop
inc
push
mov
lods
cmpsb
test
inc
out
mov
gs
lcall
cmp
mov
enter
test
stos
out
add
fmull
outsl
mov
lret
outsb
push
mov
adc
mov
pop
and
pop
push
and
inc
mov
rorl
dec
mov
incl
fs
adc
out
or
inc
flds
in
das
mov
or
lcall
cmp
push
lock
ret
leave
aas
push
fcmove
insb
jp
inc
aas
xchg
pop
fnstcw
jmp
sub
mov
add
pop
repz
or
loope
push
movb
dec
scas
and
arpl
push
fisubl
xchg
sbb
pop
push
add
jb
fs
pushl
cmpsb
call
mov
inc
push
adc
xlat
mov
dec
insl
pushf
xchg
mov
fdivrl
pushl
push
sbb
mov
sbb
push
sbb
mov
pop
xor
jno
cmp
js
push
stos
aaa
enter
cwtl
jl
out
xor
popa
pop
ret
adc
call
or
mov
repnz
cmpb
inc
sub
lods
adc
decl
cmp
imul
push
imul
jbe
mov
pop
fistpll
popa
dec
popa
mov
push
mov
pop
jbe
aas
pop
lret
fsub
sub
mov
fildll
pushl
cmpl
or
imul
repnz
outsl
xor
mov
pushl
and
adc
inc
jmp
sbb
aam
hlt
insb
push
fwait
xor
cmp
sbb
push
outsb
call
mov
dec
lods
fnsave
dec
je
outsl
lds
lea
aad
loopne
jp
lcall
cli
or
das
xchg
jp
arpl
testb
mov
outsl
add
ret
lcall
hlt
mov
cmp
leave
pop
add
cld
mov
adc
es
ljmp
pushl
insb
or
jno
lcall
rcr
cmpsb
sub
inc
lcall
adc
aam
xor
pop
ficomps
adc
inc
and
pusha
xchg
sub
fimull
pushl
jecxz
push
test
sbb
popa
lahf
dec
lock
shlb
jno
mov
rorb
inc
in
push
test
decl
and
and
push
pushf
mov
shlb
push
and
push
mov
stos
dec
pop
lahf
and
inc
lea
fwait
outsl
mov
inc
mov
fidivrl
mov
cld
jno
cmp
push
decl
inc
shlb
pusha
and
in
xlat
jl
sub
sub
xchg
cmp
mov
or
in
fsts
cmp
cmp
hlt
mov
mov
in
enter
std
and
int3
popf
decl
in
mov
xchg
aam
lcall
mov
out
pop
cmp
xchg
lcall
sub
fiaddl
popl
dec
dec
pop
jl
mov
inc
dec
sbb
ljmp
and
mov
cmp
mov
mov
lcall
inc
inc
popa
rorb
icebp
in
cmp
add
mov
ret
jmp
aas
sti
arpl
pop
decl
pop
push
xor
sbb
dec
add
dec
std
sahf
mov
int
sub
adc
outsb
fidivl
cli
lods
jecxz
pusha
or
or
lcall
dec
mov
mov
pushf
pop
test
idivb
xchg
lret
push
movsb
and
inc
aam
int
mov
cmp
mov
jne
fidivl
or
push
fnstsw
imul
ljmp
test
push
add
sahf
mov
jge
inc
out
stos
inc
inc
lcall
movl
decl
pop
inc
data16
adc
pop
loop
rcrl
pop
mull
cmp
movsl
mov
daa
cs
dec
lea
call
inc
xlat
pop
leave
fistpl
add
mov
stos
mov
nop
push
loopne
lods
ss
push
push
lcall
mov
push
pop
mov
out
leave
lods
mov
or
push
in
push
pushl
jge
lret
mov
inc
arpl
test
hlt
inc
fdivrl
sbb
mov
decl
dec
mov
imul
xor
sahf
mov
sbb
dec
or
sub
mov
mov
lret
test
int3
enter
lcall
pop
mov
icebp
cwtl
mov
jp
and
js
xor
fstpl
in
and
cmp
push
scas
in
in
lahf
pushf
mov
and
out
mov
out
dec
mov
adc
sub
call
test
cmp
cwtl
mulb
mov
inc
sti
mov
dec
add
mov
mov
fucomi
inc
lds
decl
push
xor
lcall
xor
sbb
out
aas
shrl
jmp
adc
mov
incl
nop
cmp
sti
mov
ret
jbe
lret
add
fs
call
dec
mov
push
xor
lods
mov
ljmp
aad
enter
or
int
inc
push
stos
push
sbb
mov
mov
inc
fcmovnb
cld
jne
and
xlat
int3
fadds
or
out
aas
data16
stos
orl
adc
and
insb
bound
stc
xlat
aaa
add
aaa
or
call
jl
mov
pop
ds
inc
or
dec
loopne
mov
dec
mov
xor
or
pushl
or
mov
cmc
dec
xchg
addb
inc
movsl
js
loopne
hlt
mov
data16
ljmp
adc
rcrl
out
jle
lea
les
adc
call
jmp
fistpl
fisttps
loop
and
dec
rclb
adc
cmp
rcll
lret
mov
jnp
scas
mov
xor
add
adc
ljmp
sbbl
xchg
cmp
fstpl
mull
ds
dec
das
lcall
jle
int3
inc
fdivs
je
mov
push
cmpsb
insl
mov
sarl
jbe
adc
or
decl
cli
dec
mov
lahf
pop
subl
add
sbb
popa
push
data16
lret
cld
in
leave
cli
imul
ljmp
xchg
fwait
gs
fildl
aad
adc
xor
jge
pop
jno
ljmp
in
jecxz
jmp
push
xor
stc
add
jns
lcall
push
andb
enter
jno
mov
xchg
pop
inc
ret
and
push
sbb
lahf
mov
ret
dec
and
cwtl
mov
push
imul
jg
pop
iret
adc
out
jmp
dec
push
fwait
leave
sbbl
dec
sub
jne
repz
fdivrp
push
fcomps
ljmp
aam
and
test
mov
mov
mov
daa
jo
dec
xlat
push
ljmp
gs
loop
mov
rorl
push
xlat
or
sbb
sub
test
push
mov
in
adc
xchg
xor
pop
outsl
pusha
jp
push
jae
or
imul
ret
jmp
cmp
call
aas
push
lcall
add
dec
mov
shlb
jl
mov
mov
incl
adc
dec
ror
rclb
jmp
jb
pop
jle
push
jns
das
dec
in
out
jmp
in
clc
jns
push
xor
xor
je
aaa
mov
adcb
sub
mov
call
push
testb
cmp
pop
xorb
mov
outsl
imul
pop
dec
insb
pop
jle
xorb
mov
sbbl
subl
xor
bnd
ss
push
xchg
pushf
jmp
mov
out
push
and
jb
inc
inc
lds
add
loop
ds
faddl
dec
push
add
inc
push
xor
push
push
cmp
push
mov
sub
out
nop
sub
addb
mov
stc
fnstsw
pushl
jl
cli
push
push
add
pop
pop
mov
jl
mov
and
daa
pop
mov
xor
aad
js
cmpsb
iret
arpl
xchg
and
inc
mov
adc
aaa
into
mov
or
sub
dec
sub
sarl
jnp
cld
push
imul
fwait
push
inc
pop
ret
or
lcall
sub
pop
aad
in
pop
dec
fimuls
and
and
incl
cmp
mov
leave
outsl
sub
out
xlat
cli
test
cli
loopne
rclb
test
or
add
sbb
push
xchg
in
adc
popf
enter
lcall
ret
add
ret
push
movsl
jbe
ja
mov
sub
xchg
int
nopl
add
pop
popf
cmp
fiadds
call
repnz
dec
shll
ss
pop
adc
lahf
mov
in
shlb
adc
pushl
test
jp
mov
fwait
adc
xchg
mov
add
outsl
imul
lds
dec
das
decl
mov
cld
test
jne
lret
mov
xchg
mov
sub
mov
jmp
add
pop
inc
mov
test
pusha
adc
aam
movsl
push
ljmp
nop
jae
cli
outsb
lods
aaa
lcall
int
sub
add
add
mov
adcl
in
push
ljmp
lret
lret
mov
jno
mov
cmp
add
outsl
fstpt
xchg
push
ljmp
add
stc
cmp
fdecstp
mov
or
mov
push
stos
daa
lock
jae
test
incl
cltd
xor
ret
cmpsb
stc
cwtl
pop
sub
mov
fidivrs
scas
enter
xchg
mov
inc
aaa
cwtl
add
cmpsb
lea
sbb
fs
pop
sahf
cli
xchg
jp
aaa
sti
int
sub
int3
leave
call
pop
and
xchg
clc
mov
in
fisubrs
std
je
mov
jmp
in
jp
lock
pop
mov
mov
mov
imul
pop
cmp
mov
push
lcall
sbb
adc
shr
daa
add
cltd
mov
jbe
nop
pusha
mov
cmp
jg
pop
mov
into
fsubrl
add
loopne
pop
jno
inc
lea
call
cmp
movsl
lret
sbb
lret
or
xorl
mov
mov
or
ljmp
shr
jg
mov
mov
popa
cmp
xchg
add
cmp
shll
ja
cs
mov
mov
or
fdivr
pushl
aas
push
inc
lret
cmp
adc
mov
aad
aaa
rcl
or
push
popf
lea
test
incl
stos
mov
push
popa
out
fildll
mov
push
mov
mov
lcall
xchg
ljmp
cmc
ds
inc
lock
leave
inc
ret
stc
and
push
cmp
pusha
testb
or
jmp
ss
cs
or
jge
pop
cmc
ds
dec
shll
in
frstor
sbb
lcall
sti
mov
sahf
mov
fsubrl
aam
pop
inc
push
inc
xchg
je
jbe
lods
mov
mov
push
push
in
stc
mov
sbb
jmp
mov
addr16
pop
mov
xor
mov
xor
ja
aas
jns
sbb
xor
fstpl
push
out
pop
fildll
lds
dec
into
pop
dec
push
ret
xor
adc
xchg
sbb
in
out
lcall
fsts
repz
incl
popa
push
cmp
cwtl
adc
pop
bound
inc
lahf
popa
fstps
jne
mov
fiaddl
movsb
stos
lock
pop
fistl
repnz
xchg
fmul
pop
push
cltd
in
dec
test
jl
mov
sbb
aaa
loopne
fistpl
pop
and
inc
pop
out
inc
dec
jl
bound
call
int3
popf
xchg
jnp
sub
mov
in
cmp
ret
popf
mov
mov
mov
jmp
and
jne
adc
fisubs
test
xor
loopne
dec
jle
add
xchg
fists
call
bound
xchg
jae
aad
pop
mov
or
lods
pop
mov
icebp
enter
jbe
cmp
add
mov
and
inc
cmp
scas
mov
jmp
add
cli
mull
sarl
fwait
jne
mov
ds
std
daa
sub
arpl
sahf
pushl
mov
push
sbb
push
jmp
cltd
and
cld
xchg
add
cmp
cmc
sub
cmc
pop
pusha
pushl
push
movb
jecxz
dec
push
ret
dec
shl
ljmp
adc
test
ret
shl
add
jl
inc
dec
imul
and
aam
ljmp
ds
jp
xchg
hlt
dec
and
or
lahf
in
cwtl
pushf
stc
aaa
or
repnz
idiv
fldt
int3
inc
mov
xor
jle
bound
sub
mov
pop
add
xor
push
std
lea
in
int3
or
and
outsb
mov
dec
icebp
adc
lds
fldt
movsb
lea
testb
jne
xchg
cmc
xor
lea
pop
ret
ret
in
call
dec
xchg
sti
leave
jae
xchg
scas
push
and
iret
sub
shll
test
ljmp
or
stc
push
mov
sbb
xchg
mov
mov
jb
mov
mov
leave
lcall
sbb
inc
sbb
fstpl
add
subl
add
dec
cmpsb
push
ljmp
and
and
filds
fsubl
faddl
cmpsb
xchg
sbb
mov
dec
dec
rol
sbbb
test
decl
testl
sub
and
or
cltd
hlt
aam
loope
out
shll
sbb
jae
push
call
push
add
js
test
loop
adc
pop
add
incl
sub
cltd
cmp
jmp
mov
ss
je
adc
dec
jb
in
add
adc
ljmp
jbe
cmpsl
lock
fiaddl
push
call
hlt
jae
daa
add
test
add
decl
jo
mov
xlat
sub
xor
push
ret
mov
psllq
ljmp
or
inc
mov
sbb
jbe
icebp
dec
cmp
lea
incl
ja
popa
mov
xor
mov
fwait
inc
adc
or
das
stc
and
inc
jl
incl
movsb
push
call
cmp
in
pushf
test
mov
cwtl
add
dec
add
cmp
cmp
cltd
gs
cmp
sub
xchg
push
sub
or
sahf
lods
dec
int3
sbb
testb
sub
sub
sbb
cs
fstps
cmpsl
mov
incl
inc
inc
cmc
scas
adc
jno
pop
jb
in
sbb
into
cwtl
xchg
rclb
es
in
fnstcw
pop
incl
dec
mov
stc
leave
arpl
jg
jns
adc
rcrl
and
jmp
xchg
lock
lcall
out
movsl
mov
inc
dec
insb
pop
mov
loop
adc
jg
and
out
js
mov
jmp
aad
jb
or
mov
pusha
push
test
shll
ret
lock
pop
mov
incl
mov
inc
mov
push
cwtl
das
push
out
xchg
push
test
hlt
insb
mov
addr16
in
jns
dec
jmp
push
sbb
push
jo
mov
lods
jo
sbb
stos
push
je
push
mov
out
jae
out
incl
loop
pop
pop
ficoml
inc
pop
jae
nop
test
jl
dec
test
adc
lods
inc
lea
push
clc
ljmp
cs
pop
push
fnstsw
das
stc
or
jg
outsl
mov
sbb
inc
std
repnz
das
stos
fnstcw
popa
scas
mov
sub
sbb
mov
lcall
test
inc
mov
or
rcrb
cs
test
sbb
mov
pusha
ljmp
inc
xchg
ret
mov
push
push
pop
mov
add
dec
jne
int3
cmc
cmp
cmp
and
pop
pop
hlt
rcr
fwait
test
lcall
test
jo
test
xchg
es
jmp
mov
and
dec
xchg
in
cltd
mov
sub
add
mov
jmp
ljmp
fcoms
iret
adc
call
test
add
cld
cmp
fcmove
push
and
dec
adc
cmc
mov
movsb
inc
or
int3
pop
loopne
fdiv
jbe
push
inc
jmp
xchg
mov
mov
and
mov
cmpsb
fildll
cmpsl
mov
pop
xor
incl
sbb
jmp
jp
icebp
dec
cmp
movsl
cmp
cli
sbb
jmp
xchg
adc
aad
mov
lock
or
cli
sub
cmpsl
shll
or
inc
decl
xor
xchg
les
les
lods
push
adc
int3
mov
insl
js
or
inc
push
push
sub
or
lret
and
push
popf
es
dec
xchg
inc
incl
repz
inc
int
adc
pop
xchg
out
fwait
scas
arpl
push
adc
lods
out
and
decl
loop
and
xor
jbe
cmp
orl
xor
and
scas
inc
or
jns
inc
in
pushf
das
imulb
test
ret
push
jae
push
push
sbb
test
mov
inc
inc
xor
and
mov
adc
mov
icebp
mov
icebp
sub
mov
addl
mov
arpl
mov
pushf
mov
pop
pop
and
mov
test
cmp
cmp
js
rcrb
pop
mov
jge
push
push
push
fsubl
decl
mov
notb
push
ja
adc
jp
mov
divps
out
das
jns
ficoms
cmp
xor
mov
inc
loopne
cmp
popa
outsb
adc
jae
icebp
sub
jmp
stos
pop
jge
or
xor
push
sbb
ljmp
mov
nop
out
mov
pop
fistpll
cmp
fsubrs
mov
xchg
iret
mov
incl
xchg
insb
loop
cmp
fcompl
call
incl
hlt
sbb
xchg
loop,pt
addb
xchg
pushf
in
pop
scas
push
icebp
mov
aas
xchg
add
cmp
nop
ljmp
mov
pushl
xchg
or
and
into
sub
out
inc
pop
shrl
stos
xor
mov
fidivs
ljmp
fistps
inc
pop
scas
jecxz
pop
into
outsl
roll
jne
mov
cmp
lahf
add
cmp
xor
mov
fisubrl
repz
push
jo
orb
xor
call
stos
lcall
cmpsl
dec
or
jge
shlb
mov
ljmp
dec
faddl
rcrl
add
jecxz
push
lret
inc
and
in
mov
mov
call
inc
adc
lret
sbb
sahf
dec
inc
sbb
lret
xor
cmp
mov
es
lcall
xor
push
int3
add
sbb
cmp
cmpsb
test
sub
pop
sahf
inc
iret
mov
dec
jnp
cmp
pop
out
xchg
inc
and
arpl
es
push
add
lcall
jo
bound
maxps
les
pop
sub
pop
sub
cwtl
test
fcoms
sbb
call
clc
inc
inc
push
add
cmovbe
add
jne
mov
decl
inc
std
push
mov
jmp
cmp
ss
push
andl
add
scas
jo
push
mov
jb
fldlg2
jp
mov
pop
cltd
add
and
cmp
aas
loop
ss
inc
add
xchg
out
sub
decl
push
shlb
push
inc
xor
loope
cwtl
pusha
mov
jg
sub
pop
dec
mov
dec
das
or
decl
cmp
inc
fcmove
rorb
outsb
jp
pushf
or
movsb
adc
stc
cld
sub
push
test
xor
loopne
arpl
adc
mov
repnz
sti
pop
aas
mov
mov
das
shrb
fimull
enter
and
cmp
sti
call
mov
pop
or
aam
bnd
std
jge
inc
jge
dec
pop
cmc
das
lret
stc
jns
jmp
lahf
in
sbb
test
scas
push
sbb
mov
and
ljmp
jmp
lods
fs
clc
add
leave
scas
cmp
ss
lods
inc
rorl
mov
sub
lcall
cltd
enter
dec
cmp
sahf
out
nop
mov
flds
inc
xor
gs
lcall
decl
cmp
jae
rol
push
pop
popa
ja
jge
push
out
xchg
adc
rclb
pop
inc
xchg
pop
jmp
orb
movsl
pusha
lahf
lret
imul
aam
bound
incl
ljmp
pop
in
test
inc
mov
xchg
inc
cmp
call
add
int
popf
jmp
cltd
add
arpl
push
and
test
cmpsb
aas
nop
notb
pop
mov
jae
mov
push
mov
lret
cmp
xor
sbb
ss
out
cwtl
scas
push
jmp
int
dec
xor
cmpsb
loopne
or
push
ret
push
push
push
add
xor
ljmp
imul
cmpsl
sub
jns
and
mov
int3
mov
decl
xchg
lock
xchg
negl
fcmovnu
test
adc
xor
shll
xor
je
push
push
pop
fsubrp
inc
aaa
pushw
outsl
iret
movl
and
repz
addr16
inc
dec
loopne
and
loope
stos
insb
and
aam
fldenv
xchg
lcall
pushl
dec
test
adc
adc
fcoml
scas
push
cmp
andl
inc
mov
std
dec
mov
lret
xlat
out
cmp
int3
loope
fisubrs
dec
jne
gs
call
xor
hlt
je
flds
jg
mov
cld
xchg
mov
xlat
push
adc
call
insl
sti
dec
jl
jp
pusha
sub
addr16
cmp
mov
mov
inc
jo
pop
pop
test
fimull
cltd
xor
jae
or
adc
push
jmp
lcall
add
divl
lods
push
pop
rcl
enter
inc
xor
dec
cli
cwtl
xchg
frstor
nop
push
sub
out
add
out
data16
decb
cmp
mov
mov
inc
scas
add
lcall
pop
push
cmp
decl
sti
jno
push
adc
int
movsb
ljmp
pop
out
dec
hlt
push
popa
mov
jmp
loopne
in
js
or
sbb
sub
daa
xchg
xchg
int
repnz
push
inc
lret
aas
js
addl
xchg
lret
outsl
cwtl
stos
xchg
sti
sti
shl
fwait
xchg
lret
fiadds
lea
fildll
push
pop
mov
inc
popa
dec
mov
mov
jle
pop
pop
push
jmp
sub
xor
into
jo
imul
adc
cwtl
inc
int3
lods
aam
lret
adc
mov
xor
add
call
dec
roll
pop
jge
or
and
jne
jno
lds
dec
incl
orl
shll
ret
int3
add
dec
add
aaa
out
paddd
std
pusha
loop
jmp
fucomi
fisubs
out
ret
xchg
inc
mov
mov
cmp
decl
mov
cmpsl
cmpsb
daa
sub
repz
mov
dec
sahf
lock
xchg
popf
lcall
inc
pop
jbe
int
pop
das
sub
imul
popf
cld
jge
fsubrs
out
cmp
push
ljmp
sbb
mov
std
and
sub
jnp
dec
ret
and
out
xor
sub
incl
imul
mov
aaa
testl
push
std
out
je
mov
mov
mov
adc
jmp
cwtl
out
in
adc
sti
imul
lahf
loop
and
pushl
js
adc
cld
xchg
clc
div
mov
push
ja
dec
mov
cmp
lcall
push
mov
daa
jle
in
xchg
push
gs
push
mov
add
mov
fdivr
push
push
stos
xor
inc
repnz
repz
push
adc
dec
lock
mov
cmp
mov
mov
test
adc
mov
imul
mov
jmp
mov
lock
jb
insb
mov
xchg
push
ja
inc
ljmp
dec
call
std
scas
inc
out
jle
and
mov
fistpl
call
push
mov
fcmove
pusha
xchg
aad
adc
pop
dec
mul
add
push
les
jnp
scas
cmpxchg
ljmp
data16
inc
xor
or
loop
cmp
sbb
cwtl
data16
jmp
roll
pushl
cltd
test
sbb
adc
enter
xchg
out
adc
push
decl
ss
hlt
adc
leave
orl
es
dec
pop
push
dec
push
xchg
loop
inc
jb
jnp
sub
push
arpl
testl
jp
fdivrl
cmp
incl
dec
aaa
sub
cltd
sub
sub
cmpsl
inc
mov
js
mov
xor
mov
out
or
adc
divl
mov
out
mov
dec
jmp
and
decl
loop
mov
push
jno
iret
fidivrs
pusha
divb
cmp
stos
popa
sbb
xchg
ret
mov
call
movsl
cmc
lods
sub
xchg
out
and
mov
dec
mov
push
lret
push
scas
mov
pushl
icebp
sub
test
loop
in
fistpll
loop
sub
push
lods
cmp
inc
pop
push
movsl
pop
outsl
test
aas
add
jle
imulb
cwtl
jno
js
sahf
adc
add
mov
decl
loopne
not
dec
shlb
aad
shll
jno
pop
mov
inc
movsl
pop
pop
mov
insb
pushl
in
rcrl
loope
push
fisubrl
inc
pop
cmp
inc
movsl
sbb
mov
ljmp
lret
ret
and
pop
inc
jecxz
inc
sub
mov
inc
jbe
mov
mov
jmp
jmp
pop
add
adc
sti
loop
and
push
cltd
dec
fidivs
movl
xchg
shlb
cld
clc
fwait
mov
xchg
dec
or
push
in
pop
xor
out
pop
decl
fwait
test
add
dec
repnz
lea
mov
mov
imul
out
push
xor
movsb
rorb
int
fisubrs
into
pop
push
inc
insb
call
jo
jmp
jge
or
dec
sub
pop
add
pop
rorl
leave
sbb
jne
sbb
sti
test
push
test
bound
jmp
iret
xchg
nop
stos
dec
mov
shl
push
mov
and
dec
imul
movsl
xor
pop
aas
lods
add
in
hlt
xchg
adc
push
imul
mov
rcll
inc
cld
or
adc
popa
mov
mov
pop
stc
enter
call
add
and
inc
int
lods
nop
icebp
das
cltd
std
jns
pop
int
das
xchg
pusha
push
fmull
push
lret
icebp
jl
rorl
ss
jbe
jp
mov
mov
pop
out
jmp
je
mov
push
lock
sbb
addr16
jle
cmp
js
nop
filds
mov
repz
cmp
decl
xchg
and
mov
fldenv
outsl
les
lcall
inc
shrb
add
lcall
jl
jp
mov
gs
ljmp
or
popf
jle
jmp
add
ficoml
sub
pop
sbb
inc
pop
jecxz
stos
pop
adc
fdivrs
stos
adc
ljmp
inc
fsub
push
lahf
xchg
fadds
mov
repz
dec
inc
mov
iret
adc
call
and
lods
dec
loope
lods
adc
pop
dec
or
sub
movsb
cmpsl
mov
xchg
cmc
sbb
jmp
push
mov
shrl
dec
mov
fstp
cmpsb
cmpsb
mov
inc
dec
push
sub
movsb
and
or
sbb
push
lds
push
lock
push
into
in
ret
or
mov
ret
xlat
pop
or
mov
jmp
dec
icebp
aad
aam
cmp
mov
repz
mov
inc
and
adc
add
jae
jmp
jbe
xchg
dec
mov
pop
xor
insl
xor
push
jnp
fsubrp
add
jbe
not
in
pushl
jmp
fs
sbb
add
popf
mov
mov
ret
je
lret
lcall
call
aas
mov
jns
fsubp
fcmovbe
xchg
push
rolb
or
dec
lcall
test
sbb
push
xor
or
push
cmpsl
pop
adcl
call
xor
roll
rcl
jl
adc
ljmp
mov
divb
cmp
xchg
es
mov
pusha
insl
ljmp
sub
insb
jp
pop
popf
add
xchg
push
jmp
ja
jecxz
fadds
int
inc
push
or
or
es
rclb
test
lods
cmp
mov
test
rclb
adc
dec
mov
inc
xchg
mov
js
adc
jmp
sahf
push
loope
movsb
push
dec
jecxz
in
pop
inc
mov
mov
scas
cmp
cwtd
sahf
call
faddl
inc
mov
mov
fst
and
mov
inc
aaa
cmp
adc
mov
call
push
pop
out
mov
push
push
sub
mov
adc
mov
pushl
xor
fcompl
fsubs
sub
cmp
daa
or
imul
decl
mov
frstor
mov
movsl
add
cmp
pop
push
out
out
sbb
dec
clc
mov
mov
test
cmp
outsl
test
cmp
mov
dec
loope
cmpsl
add
lcall
repnz
xchg
cmpsb
pop
xlat
mov
xchg
pop
daa
adc
mov
fs
dec
std
cmpl
push
sbb
inc
cmp
aad
xor
add
jp
pop
adc
push
inc
into
call
data16
addr16
ret
cmpsb
cmp
leave
rol
pop
mov
pop
mov
cmp
sub
call
sub
adc
add
in
adc
jmp
and
jmp
jecxz
jmp
mov
xchg
sahf
sbb
leave
fwait
mov
and
jmp
int3
int
lods
lcall
pop
push
mov
push
imul
int
insl
movsb
and
rcrl
cmpsb
lcall
mov
sbb
jo
xor
jns
jnp
aas
aaa
xchg
fcmove
sti
mov
incl
adc
push
or
filds
jp
sbb
inc
mov
dec
sub
into
sarl
jne
pop
dec
xchg
aaa
add
popf
mov
int3
sbb
sbb
int3
mov
pusha
imulb
stos
mov
inc
fistps
sbb
xor
mov
sbb
lock
jae
pop
decl
ss
jno
js
lahf
repz
and
sbb
jl
xor
es
inc
inc
xor
jp
jo
push
cmp
scas
jle
ss
xchg
fidivl
out
or
in
mov
scas
pushl
ficompl
push
divb
sahf
xchg
xchg
xchg
add
fstp
push
xchg
cltd
xor
call
ret
stos
or
cmpsl
das
in
iret
mov
push
adc
push
cmp
mov
pushl
int
lds
sub
fstl
fsub
mov
lcall
ds
call
sbb
or
fsubrs
cmp
pop
xor
mov
pop
js
dec
and
jmp
fsubr
mov
sarb
or
xchg
adc
dec
jb
push
jno
add
gs
les
dec
imul
cmp
sti
cli
sahf
movsb
adc
in
xor
rolb
inc
fs
decl
add
push
push
arpl
dec
lret
mov
inc
jmp
data16
mov
aas
lcall
scas
mov
data16
and
lret
sar
dec
dec
sub
mov
lcall
inc
dec
sub
mov
ficoml
aas
sarb
mov
call
mov
or
mov
call
mov
cmp
pop
mov
push
pushl
xchg
stos
add
push
ja
test
outsb
adc
xor
shl
pop
aam
clc
call
mov
sti
std
arpl
and
andb
xor
mov
addb
ljmp
jbe
jns
sub
imul
xchg
add
andl
mov
incl
and
bound
push
add
pop
push
pop
cmpsb
imull
xchg
mov
loopne
xchg
jle
fldenv
insb
ret
mov
and
test
xor
int
and
shl
mov
jmp
rorb
out
fnstcw
adc
jbe
sbb
lods
add
sub
mov
cli
adc
xchg
ljmp
fisubrs
mov
test
push
movsb
add
mov
lock
scas
sbbb
iret
xor
xor
jne
incl
mov
push
sub
incl
sti
aad
fiaddl
loopne
lea
decl
cmpsb
mov
nop
icebp
int3
inc
icebp
push
cmp
loop
push
rcll
shll
repnz
das
ljmp
sbb
imul
lahf
adc
pop
xor
xchg
inc
xchg
xlat
les
xor
adc
lcall
pusha
xchg
stc
jbe
js
jnp
xor
xor
mov
je
and
and
pop
inc
loope
out
and
hlt
aaa
imul
in
mov
mov
cmpsl
or
xchg
lcall
outsl
icebp
loop
sbb
jmp
testl
jo
hlt
and
ljmp
sbb
lock
ja
test
pop
push
sub
rcll
cmc
fwait
jnp
les
scas
or
inc
pop
stos
outsl
lods
adc
lret
and
scas
incl
leave
pop
xchg
in
or
mov
xchg
icebp
mov
jb
js
clc
out
jbe
ret
incl
jle
sub
imul
dec
je
fsts
inc
mov
and
xor
inc
into
jle
fdivrl
ljmp
mov
jecxz
mov
popf
add
xchg
push
ljmp
dec
mov
arpl
xor
mov
mov
enter
inc
cmp
insb
sub
call
mov
mov
scas
inc
dec
or
stos
test
push
lahf
cs
out
cltd
gs
mov
ss
lock
loopne
addl
rorl
sub
fisttps
mov
or
dec
xor
push
arpl
cwtl
sti
out
sbbl
mov
ss
inc
jmp
subl
inc
pop
jo
dec
xor
lret
mov
dec
cmp
jb
decl
jmp
dec
jge
xchg
push
ds
inc
inc
iret
cmpsb
jmp
addr16
mov
xchg
outsb
mov
lcall
in
or
int
push
js
out
pop
jne
loope
or
cwtl
test
es
stc
dec
sarb
inc
and
xor
jns
popf
jno
jo
in
icebp
pop
cmp
mov
outsb
jle
inc
cli
jae
out
push
xchg
ljmp
jp
jmp
pop
jmp
mov
shl
push
enter
bound
testl
jecxz
sub
incl
je
adc
je
and
aas
repz
mov
lahf
call
cmp
pop
cli
xchg
jns
call
xor
fnstcw
xchg
inc
jns
mov
xchg
xor
dec
push
ret
lods
test
mov
dec
bound
push
xor
lea
stos
pusha
xchg
out
lds
or
ljmp
fbstp
decl
nop
or
push
das
outsl
in
inc
fdivrl
mov
or
lret
push
push
jmp
xor
mov
in
sub
shr
sbb
lea
adc
dec
sub
adc
sar
lcall
jb
and
and
add
mov
imul
aad
sar
jmp
cltd
adc
aaa
es
and
jbe
movsb
in
mov
mov
ljmp
mov
call
sbb
jno
ror
ja
xor
push
fcomip
jo
push
enter
push
pushl
lds
les
test
adc
dec
xor
cld
test
fs
mov
fwait
mov
lcall
rcrl
and
mov
es
mov
inc
mov
fisubrl
fimull
xchg
hlt
dec
pop
push
jnp
fwait
xorb
mov
adc
movsl
shlb
ret
incl
dec
and
xchg
sahf
je
imul
lret
div
push
push
leave
pushl
push
rorl
lods
sbb
imul
pushl
stc
adc
call
les
add
push
sub
es
stc
test
lods
sub
jnp
sti
loopne
decl
mov
lcall
pushf
xchg
adc
mov
insl
push
push
mov
lcall
icebp
xor
dec
adc
push
fs
jg
and
in
adc
ret
push
mov
test
xchg
enter
adc
dec
cmpsl
pop
fisubl
cmpsl
mov
jmp
insb
xor
mov
pop
aad
ja
add
sbb
ds
jg
push
mov
jns
and
addb
inc
mov
lahf
scas
mov
imul
xchg
ret
decl
stos
jae
cmpsb
dec
sbb
mov
or
pop
xor
test
call
xchg
cmp
jmp
roll
arpl
xchg
pop
add
mov
cli
lods
ss
bound
data16
ljmp
xchg
jle
mov
clc
lds
jmp
cmp
mov
movsl
test
loopne
stc
ljmp
in
lcall
or
int3
hlt
cmpsb
idivb
jae
push
pop
adc
jmp
dec
push
in
lcall
inc
or
mov
test
rorl
dec
mov
icebp
and
push
aas
bound
xchg
adc
fnstcw
cmpsl
imul
fwait
daa
mov
pop
outsb
and
call
jo
jecxz
adc
fs
loop
iret
inc
inc
loop
fadds
cmp
rclb
sar
call
hlt
cld
pop
xorl
inc
pop
xlat
push
je
push
add
push
add
in
cmp
mov
incl
pop
imul
in
jge
stos
test
jno
test
fidivs
pop
dec
inc
sub
int3
cmpsl
or
jmp
into
inc
mov
std
int3
test
out
ret
test
mov
int3
mov
mov
incl
ret
inc
jg
cli
test
or
pop
push
rcll
mov
mov
jae
decl
fs
push
cli
sarb
cmp
ret
or
loopne
adc
mov
pushf
cmp
fdivr
incl
pop
in
cmp
adc
std
cltd
xchg
ds
pushf
sub
sar
decl
rcll
mov
jb
sbb
adcb
orb
push
and
pop
pop
mov
stos
jmp
and
scas
les
jb,pt
cltd
pop
dec
cmp
int
xor
or
jl
jnp
or
cmp
cmp
mov
or
testb
jge
in
loope
mov
das
jg
test
push
lea
lcall
xchg
test
aas
addr16
xchg
outsl
daa
or
sbb
mov
shll
jns
and
test
lcall
and
or
aaa
dec
sub
lret
push
in
cmpsb
das
xor
addb
lods
loope
dec
add
ljmp
pop
mov
out
xor
fdivr
in
dec
cmp
xor
inc
test
inc
shrb
in
sub
pop
jmp
push
sub
out
cmpsb
push
inc
sti
pop
cwtl
adc
mov
ljmp
cmp
jmp
daa
dec
jge
cld
dec
sbb
xor
lret
jge
hlt
stos
andb
sahf
jp
cmp
inc
cmc
adc
lock
lcall
js
sub
call
stc
dec
lock
data16
subb
lods
and
out
fdiv
push
sub
mov
pushl
and
or
dec
inc
inc
mov
push
scas
inc
cmp
repnz
loope
xlat
repnz
lcall
push
fildl
incl
shl
fst
sbb
fwait
arpl
iret
fistpll
and
stc
das
jb
mov
decl
hlt
mov
jmp
fisubrs
sbb
cld
icebp
cltd
xchg
sbb
jns
inc
call
sbb
scas
int
pushf
shll
jo
pushf
and
jo
inc
mov
jns
pushf
int3
or
lcall
inc
insb
or
jo
mov
loopne
push
mov
jne
pop
in
inc
mov
jmp
lret
sbb
mov
popf
lea
mov
negb
pop
ljmp
aam
dec
out
pushf
cmpb
dec
repnz
outsl
gs
push
mull
and
lds
movsl
out
aas
subl
into
xchg
dec
daa
push
dec
ljmp
enter
cli
popa
pop
pushl
xchg
cmpsl
pop
push
aaa
divl
inc
leave
push
mov
jg
scas
sub
jo
aas
dec
dec
pushl
push
inc
outsb
sbb
int3
pushl
stc
add
adc
scas
xor
mov
daa
mov
pushl
out
sbb
int
out
arpl
cld
dec
push
adc
fs
pushf
or
jbe
lock
aas
xlat
push
xchg
adc
and
movsl
mov
cld
cmp
adc
push
scas
call
mov
sbb
out
jno
mov
mov
mov
or
fdivl
dec
xlat
mov
inc
lea
aam
mov
xchg
inc
divl
cmp
mov
call
cld
mov
cld
notb
in
mov
add
jl
mov
pop
lcall
dec
stos
xor
push
and
out
out
jne
jae
in
cmp
in
iret
ret
in
in
and
pushl
repz
jmp
or
sub
shl
dec
hlt
clc
pop
xchg
daa
out
sub
xchg
inc
incl
sub
ret
mov
mov
pusha
nop
pop
xorl
pop
dec
stc
test
mov
or
ds
aam
dec
inc
inc
pushf
pusha
das
jbe
xchg
cmpsb
lahf
decl
aas
xchg
pop
mov
popa
popf
stos
aas
or
dec
and
and
sub
imul
jmp
mov
jg
popa
outsl
outsl
mov
push
out
das
addb
xor
mov
outsb
xchg
mov
pusha
or
mov
adc
jb
xlat
pop
jae
loop
jno
xlat
cmpsl
and
cmpl
lods
dec
pop
pop
lahf
mov
imul
push
mov
mov
pushf
adc
insl
call
xor
lea
pop
xlat
add
add
ret
in
dec
pop
push
mov
add
fisubs
mov
mov
pushl
push
jg
xchg
nop
mov
mov
sbb
sub
cmp
jmp
sbb
jnp
dec
btc
adc
testb
mov
mov
out
aam
fistl
dec
cli
jp
scas
outsl
flds
jecxz
dec
roll
xchg
into
mov
nop
inc
mov
xchg
clc
aas
nop
sub
js
mov
lds
cmp
inc
loope
lret
jmp
adc
shll
orl
sub
push
iret
mov
mov
loope
imul
rcll
or
movsb
lcall
shrl
adc
mov
lock
sub
adc
jbe
mov
jns
call
mov
fs
sub
sbb
lahf
lds
and
mov
pop
mov
pop
incl
fldenv
push
ds
out
movsb
arpl
fisubrs
xchg
ja
js
lea
xchg
incl
movsl
loop
sub
mov
mov
mov
fcoml
or
test
add
dec
xchg
adc
rolb
jge
outsb
int3
mov
pop
bound
xchg
shr
aas
add
sub
lret
decl
jg
test
ret
xchg
mov
ret
imul
sbb
arpl
or
pushl
jae
jnp
sub
cmpsb
push
clc
je
sbb
adc
into
add
adc
in
xchg
pushl
iret
xchg
pushf
in
sub
divb
testl
cmp
lock
incl
stc
adc
jmp
cmc
inc
add
or
fsub
insb
sbb
das
sbb
mov
dec
dec
jg
out
mov
cmp
pop
lods
xchg
sub
adc
pop
add
xlat
lcall
lcall
in
jnp
add
adc
and
push
leave
sbb
call
out
imul
push
ftst
dec
sbb
xlat
fistpll
push
jbe
sub
fsubl
cs
mov
lods
inc
int3
add
sub
adc
pop
lock
call
xlat
adc
call
enter
inc
rorb
lods
mov
xchg
out
xor
inc
mov
int
psrlq
outsl
sub
in
mov
jmp
rcl
sbb
pop
push
aad
iretw
insb
inc
cli
sub
xor
aaa
pop
mov
dec
in
call
sub
lods
rorb
mov
repz
inc
cmpsb
sbb
adc
pop
out
xchg
decl
cmp
inc
inc
daa
xchg
jmp
xchg
mov
inc
mov
mov
push
or
pop
int3
sahf
jmp
ja
and
add
movsl
nop
ficompl
mov
mov
jns
xchg
cmc
sahf
in
rorb
fildl
aas
popf
pop
pop
sbb
add
pop
push
xchg
push
fnstcw
cmp
push
sbb
stc
fisubrl
pushl
and
or
push
inc
and
or
sub
nop
xchg
xchg
jnp
ljmp
std
orl
jbe
movsb
clc
loope
push
es
mov
insl
movsb
lahf
ror
sbb
lcall
xor
scas
add
fldt
xor
out
mov
pop
sarb
dec
xor
jmp
nop
cwtl
xor
sub
pop
jmp
fstpt
out
mov
pop
mov
cmp
push
jmp
arpl
xchg
icebp
pop
into
xor
mov
ljmp
bound
mov
jns
stos
cmpsl
rcrw
arpl
mov
push
iret
mov
gs
sbb
incl
push
imul
mov
cmpsl
push
mov
jo
adc
xchg
cmp
lods
sub
dec
cmp
outsb
jns
mov
push
xchg
popf
inc
clc
aas
cmp
rorl
test
or
call
add
push
inc
mov
pop
cld
test
add
and
out
in
inc
sar
inc
call
adcb
sbb
inc
pop
mov
add
sub
call
ljmp
cmp
in
jnp
mov
cmp
cmp
sbb
xchg
cwtl
sbb
loope
pushl
cmp
pop
mov
mov
mov
push
lds
cltd
push
adc
call
mov
insl
mov
inc
insl
ss
adc
xchg
mov
scas
clc
and
inc
dec
pop
dec
pop
sarl
stc
sub
mov
adc
dec
jg
mov
sub
sub
pushl
in
add
int3
notl
mov
lods
cmpsb
aaa
push
fwait
lea
fwait
sub
mov
pop
sti
decl
in
cwtl
popa
enter
adc
fsubrl
jno
dec
mov
call
dec
pop
mov
es
or
cmp
sub
stos
cli
jo
dec
pop
pop
pop
fdivrp
jmp
cmp
in
ja
or
addr16
into
addr16
jnp
inc
push
rclb
pushl
cmp
jp
adc
jb
roll
sbb
xchg
push
arpl
shlb
add
call
sbb
mov
andb
aaa
cs
iret
dec
push
or
xchg
inc
jmp
dec
out
xor
sti
pop
mov
xchg
repnz
mov
mov
pop
push
sbb
ljmp
inc
pop
loopne
mov
clc
repnz
jg
xchg
xchg
mov
js
sbb
decl
jmp
push
xchg
xchg
in
scas
sbb
leave
aad
pusha
push
or
inc
xor
call
jmp
shl
jno
push
addr16
jle
jge
fchs
or
sahf
in
pushl
add
aam
es
mov
ds
dec
xor
dec
push
rclb
scas
decl
mov
fxch
mov
lock
push
push
in
xor
lcall
mov
jns
ljmp
xchg
pop
out
lds
lea
xorl
adc
scas
or
push
mov
outsb
ret
pushl
rorb
loop
push
lds
cwtl
sbb
mov
fisubrl
popf
add
cmp
lcall
push
inc
mov
xchg
rcl
sbb
mov
js
and
add
xor
push
mov
roll
mov
or
fwait
mov
sarl
mov
in
xchg
push
rolb
push
jmp
adc
paddsw
movsl
cmp
fdivs
lret
xlat
jo
push
loop
mov
jge
loopne
pop
cmp
dec
das
xor
mov
fcomp
fs
add
scas
stos
ret
fidivrl
decl
adc
pop
adc
mov
sub
xchg
popa
push
mov
push
push
pop
lock
mov
and
jmp
repnz
pop
lds
dec
ret
ss
shll
push
decl
subb
cmc
out
jecxz
rorb
inc
arpl
jnp
cvttps2pi
pusha
movsb
cmp
lcall
fbstp
adc
push
inc
orb
mov
mov
int
pop
ljmp
mov
add
xlat
push
inc
pop
aad
sarl
xchg
lock
fldpi
pop
popa
lock
stos
mov
stos
hlt
pop
jecxz
sub
sub
mov
push
pushl
sahf
lods
lret
jp
push
arpl
decl
xor
push
cmp
lods
cmc
or
decl
adc
lock
mov
aas
xor
cmp
repnz
mov
pushl
scas
mov
test
mov
mov
lock
js
push
rcrb
pop
jne
pop
cmp
incl
or
sub
xor
ss
pop
adc
dec
iret
sub
ret
lcall
loopne
mov
dec
mov
mov
adc
arpl
push
mov
cmc
imul
mov
outsl
fdivrl
fbstp
mov
mov
pop
push
lods
insl
les
push
pushl
dec
pusha
int3
insb
sub
icebp
ret
fnstcw
pop
outsl
sbb
loop
enter
add
pop
daa
fwait
pop
fsubs
push
pop
fcoml
push
insb
aaa
push
mov
pop
xor
lds
xchg
out
pop
inc
in
and
mov
in
xlat
mov
pop
out
in
imul
dec
and
jl
leave
xchg
call
dec
push
xchg
ljmp
dec
mov
iret
ret
cmc
jb
incl
nop
scas
nop
pusha
mov
bound
or
xor
jge
pop
push
mov
jmp
mov
daa
pop
dec
jecxz
mov
scas
mov
bound
add
pushl
xor
xor
in
fwait
add
sbb
mov
call
cltd
xor
jmp
clc
push
adc
popf
sub
sbb
mov
xor
out
cmc
imul
ljmp
jo
add
fcmovnu
xor
movb
inc
call
jecxz
jge
dec
outsb
fstps
ljmp
cld
scas
and
fsubrp
sub
adc
cmpsb
pushf
inc
push
add
inc
stos
out
lock
aaa
sbb
jmp
inc
enter
sub
lea
out
packsswb
data16
inc
int3
sbb
in
pop
test
jp
push
cli
add
fcmovne
stos
mov
ficomps
repz
fucomi
insb
stc
mov
jmp
push
clc
data16
fbld
mov
rolb
jae
test
xor
inc
push
jbe
dec
jnp
repnz
inc
lds
inc
jg
pop
ret
call
shl
push
adc
jle
pop
xor
cmp
xlat
xchg
lret
dec
outsb
iret
jno
in
gs
and
incl
fwait
mov
repz
cli
xchg
sbb
push
popa
int
jae
sub
mov
aas
ss
inc
cltd
pop
cld
cmp
cli
pop
xchg
repnz
pusha
in
ret
out
fistl
inc
inc
add
ffree
sbb
jmp
std
fsubs
lahf
and
dec
sbb
call
sub
ror
mov
call
fdivrs
mov
fildl
sbb
lds
mov
leave
dec
inc
cltd
mov
imul
addr16
inc
or
push
fs
ficoml
jecxz
inc
icebp
xchg
mov
and
gs
jns
lcall
gs
ds
inc
mov
dec
mov
insb
sbb
fcoms
repnz
shrb
test
pushf
call
ret
insb
cld
shll
add
js
inc
pushf
notl
pop
hlt
lret
out
loope
mov
and
incl
mov
lods
lds
mov
mov
les
mov
in
push
pop
pushl
add
jae
addl
pop
xor
sbb
inc
adc
outsl
mov
sub
incl
xor
xor
out
and
pop
scas
and
test
and
incl
insl
mov
stos
sbb
xchg
int
xchg
pop
mov
cmp
daa
push
sbb
shl
pop
ljmp
and
dec
mov
xor
inc
xchg
pop
es
in
adc
bound
xor
jmp
sahf
sbb
leave
mov
xchg
mov
pop
outsb
adc
push
cmp
clc
dec
mov
pop
inc
incl
xor
mov
cltd
push
mov
inc
jle
test
xchg
cltd
push
clc
sahf
mov
aam
icebp
jl
repnz
jne
jb
scas
lret
lahf
mov
lea
incl
test
jnp
outsb
jge
mov
or
ss
lret
cli
imul
jge
cld
pop
shrl
jmp
movsb
cs
jno
cld
scas
aam
insb
push
cmpsb
decl
and
jmp
xor
or
mov
mov
or
mov
js
mov
mov
dec
or
mov
cmpsb
sub
sub
xchg
loopne
mov
cmp
mov
pushl
cwtl
fs
and
clc
or
outsl
push
repnz
or
mov
incl
aas
idiv
adc
jno
outsb
ret
mov
pop
xchg
mov
rclb
push
add
push
or
loop
popa
push
dec
stc
dec
test
or
pop
or
cmovns
jne
call
les
mov
lahf
dec
rcrl
mov
scas
aam
testl
pushl
lcall
and
jb
fwait
lret
into
andl
imul
shll
call
in
adc
movsb
jbe
fdivrp
arpl
cmpsl
neg
fistps
jl
adc
cmpsl
adc
xor
incl
loope
inc
xlat
or
mov
jmp
push
lods
cmc
push
in
mov
aam
fbstp
ret
xlat
jl
iret
adc
stos
sbb
in
es
push
push
mov
int
xchg
add
xchg
dec
mov
and
out
mov
dec
fcmovnb
out
jmp
int3
mov
int
xchg
inc
push
mov
test
inc
shll
cmovle
ja
lret
dec
mov
popa
out
lods
in
mov
paddw
xchg
fldenv
jecxz
or
add
fistpl
data16
sub
lcall
inc
pop
pop
xchg
daa
sbb
das
mov
xchg
pop
xchg
xchg
cmp
negb
adc
lcall
rorb
add
mov
and
mov
rcrb
cmpsb
xlat
push
add
cli
incl
mov
mov
or
or
jg
stc
aaa
cmpsb
fnstcw
lea
sbb
pop
mov
jmp
aaa
pop
add
orl
lods
das
jp
in
lret
test
dec
inc
scas
cmc
iret
inc
lcall
into
inc
xor
add
adc
rolb
into
mov
pop
jae
mov
mov
sarl
bound
push
push
push
mov
lods
push
insb
rorl
push
imul
ljmp
pop
xchg
lret
pop
pop
test
inc
imul
das
repz
sbb
mov
call
outsl
push
pop
or
xor
add
ret
mov
mov
pushl
fistpl
xchg
testl
ja
mov
fucomip
into
scas
inc
flds
jo
dec
mov
incl
not
test
fidivs
sbb
enter
xor
stos
fnsave
out
inc
pushl
jne
in
ja
jmp
ret
jecxz
fisttps
add
sub
call
shlb
mov
mov
clc
cmp
ljmp
ljmp
sub
xor
adc
rolb
sub
push
push
call
pop
cmp
sub
inc
xor
out
dec
es
cmp
pushf
xor
mov
adc
jnp
sbb
inc
inc
enter
inc
lds
in
sbb
xchg
jns
enter
faddl
aas
jp
into
or
stos
fiaddl
scas
mov
sarb
adc
or
mov
and
incl
xchg
push
push
enter
ror
loop
cmpsb
sbb
push
pop
in
enter
cwtl
loope
mov
pushl
mov
inc
cmp
jbe
mov
repz
fnstsw
xor
aad
pop
mov
in
mov
ret
inc
and
ret
adcl
mov
cmpsb
mov
pop
and
scas
push
cs
jg
mov
negb
push
bound
xor
and
pop
push
inc
push
lods
nop
imul
add
push
mov
push
dec
stos
add
or
pop
sbb
cmpxchg
push
cli
dec
cmpsb
leave
xchg
incl
stos
rolb
and
adc
pop
dec
adc
imull
ret
mulb
and
xchg
out
dec
cltd
jmp
aaa
into
cltd
out
xorl
aas
push
repnz
pushf
in
outsl
icebp
out
or
mov
push
cmp
pop
jmp
fimull
adcb
dec
add
cmpsl
pop
xchg
adc
ja
rcrb
mov
call
sahf
dec
sbb
in
jl
inc
cmc
mov
push
call
mov
inc
outsb
out
call
ljmp
dec
adc
aam
xor
pop
pusha
or
pushf
sahf
xor
fisttpl
cmpsl
sub
decl
push
pop
iret
aaa
inc
adc
or
and
cmp
pop
mov
mov
mov
call
jno
inc
mov
cmp
jecxz
mov
inc
int3
rcrb
pushl
std
outsb
in
and
xchg
jle
xchg
cmpb
dec
jmp
mov
dec
out
fstpl
mov
pushl
mov
xor
fs
and
mov
or
int3
dec
inc
adc
movsl
pushl
dec
add
call
inc
in
adc
mov
int3
lret
mov
addr16
jb
sbb
movsb
jmp
xchg
add
pop
decl
cwtl
push
mull
andl
jne
fists
lcall
push
fldt
out
mov
jp
aaa
inc
fistps
dec
pop
xor
fistpl
inc
mov
cmp
fidivs
mov
lcall
jne
sbb
adc
stos
arpl
jg
jg
mov
jle
or
sbb
jp
cltd
mov
lcall
xchg
aaa
and
sbb
cli
cs
dec
pop
jg
add
aaa
mov
xchg
mov
jmp
or
daa
jl
sub
movsl
idiv
xor
xlat
and
sahf
ljmp
clc
arpl
nop
cs
incl
nop
pushl
sbb
ljmp
ds
test
pop
mov
cmp
std
push
mov
mov
fistps
push
inc
fistpl
cmp
push
orb
in
imul
xchg
stc
mov
popa
jl
and
and
into
je
leave
shrl
jbe
pop
cld
ljmp
pusha
mov
mov
das
mov
adc
movzbl
and
lcall
je
xor
ds
les
lods
lret
pop
popf
mov
scas
aad
mov
jmp
mov
jmp
popf
fninit
xor
mov
cmp
ror
mov
and
inc
lods
lods
inc
cmc
push
mov
andb
popl
dec
icebp
testl
push
hlt
and
fsubrs
fadds
add
out
mov
push
repz
or
cwtl
lcall
ds
cmc
ja
pushf
and
cli
loope
shrb
jo
sarl
sbb
in
call
inc
mov
adc
ret
xor
cmc
fdivl
jne
sbb
xchg
lcall
faddl
std
addl
fnclex
cmpsl
push
mov
cmpsb
xchg
mov
and
push
stc
or
jmp
mov
nop
push
shlb
mov
jbe
fsubl
jo
cmc
xchg
push
cwtl
test
jnp
insb
fstpl
mov
icebp
jbe
in
ret
ss
dec
mov
sahf
int3
pop
mov
jmp
sarb
lahf
test
pop
clc
stc
leave
push
fdivrs
pop
dec
jle
mov
adc
jbe
loope
and
aad
jmp
add
adc
clc
faddl
xorb
mov
add
push
addl
inc
or
jmp
add
cmpsb
and
inc
push
mov
and
fs
je
mov
mov
loope
xor
lcall
je
xchg
xchg
and
in
fwait
cmp
adc
jbe
jne
fwait
inc
clc
loopne
add
pushl
mov
ljmp
jle
mov
add
pusha
cmp
insl
lcallw
cmpsl
cmp
rcrl
pop
xchg
jg
loope
sub
mov
aam
aam
arpl
add
incl
data16
scas
inc
das
mov
fistl
xchg
sbb
sbb
loop
leave
repnz
dec
xor
dec
nop
xor
xor
iret
add
push
data16
hlt
pop
push
icebp
or
push
or
cmp
xchg
sar
or
rol
or
repz
enter
push
cmp
sahf
mov
jns
fildll
pusha
sahf
loope
pusha
stc
lret
out
sub
mov
inc
mov
movsl
cmp
ljmp
mov
jbe
add
mov
or
sbb
pop
adc
jle
decl
in
lods
adc
lcall
cmpsb
pop
push
add
fiadds
popf
notb
fnstenv
add
imul
ljmp
jl
jbe
inc
mov
mov
ud0
mov
leave
stos
xchg
mov
inc
mov
sbb
lcall
pop
ja
dec
insb
std
jmp
cmpb
xchg
xchg
addr16
jmp
scas
js
inc
xchg
push
pop
ja
arpl
test
mov
cmp
shrb
ljmp
loopne
clc
push
xchg
sahf
adc
xchg
call
cmp
cmp
hlt
xchg
xchg
mov
xchg
or
in
inc
pop
dec
ret
icebp
dec
int3
and
mov
mov
mov
mov
in
adc
mov
lock
fiadds
fnstsw
rorl
aas
addr16
imul
loop
aad
decb
ljmp
cwtd
imul
pop
add
lcall
and
mov
push
in
pusha
incl
and
call
lahf
mov
call
cmp
cmp
inc
mov
call
inc
movsl
mov
dec
fldcw
cld
aad
mov
jecxz
dec
or
mov
shrl
lcall
cmp
aam
stos
lods
xor
dec
ljmp
leave
daa
ret
jb
xlat
sbb
push
popa
stos
clc
ss
inc
sub
pop
xlat
enter
add
lods
popf
push
int3
popa
or
inc
mov
mov
popa
leave
popf
dec
scas
stc
js
adc
ljmp
xor
cmp
pushl
insl
lds
out
cmp
cmp
out
pop
outsb
jl
pushf
aad
leave
adc
lahf
and
shl
lcall
xor
loopne
lods
sarl
pop
je
adc
notl
push
fwait
sbb
push
lods
cli
cltd
adcl
fsubr
jle
jae
cmp
pop
dec
pop
push
fwait
mov
pop
test
stos
sbb
repnz
data16
call
mov
inc
popa
dec
cmp
jle
jno
mov
jl
mov
cmp
jb
add
dec
push
aad
jnp
jns
pop
loopne
sub
jmp
push
pop
cli
mov
and
dec
sbb
incl
leave
jno
cli
inc
test
xor
mov
cltd
or
mov
ljmp
jp
call
mov
fmulp
cwtl
in
mov
or
add
and
les
sub
rclb
imul
jecxz
and
lret
push
push
mov
inc
or
mov
lods
into
ret
decl
lea
outsl
in
in
jno
ret
jle
mov
add
mov
outsb
push
jb
sub
pushl
hlt
mov
sub
xchg
mov
xor
mov
inc
jl
xor
incl
adc
jnp
shl
push
push
in
jne
jo
loop
push
daa
jmp
xlat
mov
add
xor
jge
fldcw
jbe
mov
mov
das
mov
stos
stc
ljmp
mov
pop
add
hlt
sub
pusha
es
pushf
mov
mov
jo
inc
or
rorl
push
cmc
mov
outsl
adc
leave
xchg
inc
xchg
fidivrl
mov
mov
aas
and
jnp
push
cld
imul
push
mov
sub
repnz
sbb
cltd
dec
lcall
cwtl
adc
test
jmp
or
ror
mov
pop
mov
pushl
xor
mov
push
aas
and
ret
adc
lods
aaa
pop
sub
lret
decl
dec
mov
sti
and
shll
lahf
xchg
sub
fcmovu
aam
insb
mov
sbb
call
pop
mov
sub
pop
cmp
into
push
jle
insl
adc
mulb
iret
pop
sahf
in
sub
scas
xor
mov
call
and
test
daa
xchg
test
daa
adc
mov
cmp
add
ljmp
add
pop
or
aas
rorb
ljmp
and
push
adc
add
inc
out
dec
mov
mov
dec
inc
popa
push
stos
pushf
out
lret
jp
out
mov
incl
xor
dec
mov
cmp
mov
lods
xchg
and
imul
mov
je
das
pop
imul
nop
in
mov
std
add
jbe
xor
xchg
sti
pushl
loopne
xchg
fucom
adc
dec
inc
and
daa
out
push
pop
sarl
sub
in
mov
movsl
jmp
out
fcoml
and
add
stos
call
jp
lods
push
jecxz
incl
jbe
mov
cmp
xchg
out
xor
xchg
aam
stos
int3
dec
lds
jmp
lods
arpl
cmp
xchg
and
push
xchg
addl
lcall
les
pop
xor
test
inc
nop
jp
and
cltd
aad
cmp
ja
jb
pmuludq
rolb
call
sub
fadd
imul
fmuls
cmp
pushl
dec
sbbb
jmp
adc
jb
xchg
leave
aaa
dec
test
daa
xchg
and
mov
pushl
jo
in
fisubrl
and
loopne
jecxz
xchg
mov
and
pushl
xor
dec
icebp
sub
jg
jp
mov
push
mov
sbbl
incl
adc
rcrb
lret
xchg
ss
mov
or
aad
imul
pushl
mov
leave
mov
add
sub
clc
inc
and
cmp
cmc
rol
sbbl
ljmp
adc
inc
sarb
xchg
iret
jge
mov
dec
shrb
jmp
inc
test
ret
out
les
cli
push
xor
dec
and
sbb
jae
in
jl
decl
cmp
cli
xchg
mov
lret
subb
dec
fldcw
andps
decl
pop
call
mov
pop
pop
testl
push
push
cmc
sub
cmp
mov
jb
lcall
mov
add
fsubrs
es
arpl
and
pop
pop
xor
aaa
ficompl
lcall
dec
push
pop
xlat
sub
loopne
clc
pop
adc
mov
pop
or
push
call
addb
mov
int
test
imul
dec
lds
cmp
jge
scas
mul
xor
fdivrp
lcall
sahf
js
fwait
lods
dec
lds
rcll
add
mov
add
lods
rcr
push
mov
jmp
pop
push
js
pop
pop
dec
fldenv
mov
xchg
sub
add
cld
mov
pop
mov
add
jmp
jns
push
or
sahf
cmp
jle
cmpsl
mov
inc
and
pop
shlb
mov
outsb
push
aas
pusha
jmp
fmul
cmp
pop
shrl
out
fistpl
or
loope
lock
lcall
dec
or
or
push
ret
stos
gs
icebp
mov
add
mov
push
push
arpl
mov
push
inc
cmp
mov
pop
fbld
dec
pusha
test
shlb
ja
pop
mov
mov
loop
inc
lds
jecxz
push
sbb
bound
pushl
mov
sub
inc
mov
push
je
je
ss
adc
out
jg
hlt
mov
movsb
bnd
mov
push
lods
fcmovu
xchg
mov
xchg
out
adc
jmp
pushl
icebp
ds
aaa
mov
cmc
pop
mov
cmp
jo
hlt
push
cmpsl
test
decl
sub
sub
ror
jo
jge
push
mov
int
mov
pop
fistl
lcall
sub
scas
add
inc
lods
mov
and
repnz
cmpsb
addr16
mul
out
gs
and
fwait
shll
push
cmp
ja
xlat
mov
inc
push
xor
decl
mov
test
mov
aad
lret
or
enter
push
jmp
push
dec
loope
sub
pminub
xor
in
imul
lods
sub
mov
sub
add
ret
xor
out
stos
cmp
mov
mov
mov
and
pop
out
call
test
xor
stc
cmp
mov
sub
push
add
lods
mov
cltd
sbb
jmp
pop
add
mov
out
rep
sbb
mov
lods
xor
jnp
xor
xor
orl
add
lea
iret
mov
pop
roll
cmpsl
xor
inc
leave
test
dec
jl
pop
inc
push
or
enter
clc
stos
and
je
inc
jno
jp
arpl
and
incl
imul
rcrl
push
sti
jge
popf
cmp
sahf
notb
mov
lcall
je
cmp
sti
nop
cmp
xor
or
mov
dec
pop
test
mov
lcall
movb
imul
push
adc
add
loope
mov
pop
cmpsl
cmp
call
scas
cmp
ja
cwtl
out
das
mov
jmp
cmp
pusha
or
or
incl
push
and
push
mov
and
outsl
sub
imul
dec
incl
xlat
inc
mov
ret
mov
push
sti
iret
lods
enter
out
add
inc
lahf
inc
mov
inc
loop
dec
loopne
cmp
jmp
mov
dec
das
pop
ret
push
xor
jnp
xchg
jae
sub
push
decl
push
xchg
sbbl
clc
xchg
sti
inc
test
push
std
cmp
fsts
decl
movsb
dec
cmc
rcrb
mov
loopne
cmp
and
fmuls
xchg
jb
fs
cmpsl
popf
add
mov
xor
jns
hlt
dec
adc
subps
jmp
jae
add
or
outsb
inc
adc
ja
mov
stos
fwait
ud0
decl
pop
lea
pop
sub
pusha
inc
test
push
push
mov
inc
jns
xor
cmp
sti
xchg
jae
es
loope
outsl
adc
divb
movsb
sbb
sbb
pop
cwtl
sbb
pop
pop
or
cld
sar
popa
jl
in
jge
push
fisubs
mov
sub
jmp
fs
sub
lock
mov
outsl
xor
cmpsl
jl
cltd
bound
push
mov
ljmp
mov
dec
and
adc
je
int3
add
pop
dec
and
and
mov
loop
jmp
inc
ljmp
jle
xchg
mov
mov
pop
cld
lahf
faddl
mov
call
xchg
xchg
pop
mov
jle
ljmp
mov
ss
popf
xor
loopne
push
xchg
aad
cmpsb
inc
xor
mov
inc
adc
mov
scas
jl
adc
sbb
loopne
xchg
jmp
mov
std
dec
mov
setg
xor
scas
lcall
cmp
jmp
add
cli
data16
push
loopne
dec
push
call
jp
imul
add
ljmp
adc
dec
dec
pusha
mov
or
adc
dec
add
mov
and
clc
js
mov
scas
mov
cmp
imul
push
cs
pop
xchg
cli
or
loop
ljmp
mov
xor
lcall
mov
cs
mov
js
aas
sub
subl
jno
mov
jae
test
and
sti
cmp
cmp
sbb
das
push
xchg
aad
pushf
jmp
add
adcl
push
pop
dec
lcall
mov
je
mov
or
ljmp
icebp
xor
jge
lret
jne
outsl
xchg
jmp
or
sti
test
xor
iret
lea
test
movsl
jns
push
cmpsl
lock
ljmp
add
cmp
ja
pop
lea
jns
xor
stc
lock
lcall
mov
jae
aas
cmp
jecxz
jge
inc
pusha
xchg
arpl
or
cmp
xor
mov
or
cmpsb
adc
mov
imul
pop
sbb
or
and
out
jmp
int3
add
push
xchg
scas
xor
mov
adc
add
lcall
pop
jo
outsl
nop
ret
jmp
out
adc
cmp
xchg
not
in
and
and
adc
jae
and
lahf
pushl
and
sbb
iret
lret
fdiv
xchg
xor
out
push
mov
out
adc
repz
pop
xor
pushl
dec
subb
cmp
mov
ss
xchg
scas
inc
cmp
jge
mov
lcall
aaa
bound
dec
jp
sbb
test
mov
and
sub
out
xor
jno
and
incl
gs
call
repnz
mov
sahf
lret
movsl
int
inc
movsb
sbb
es
push
call
outsl
lcall
pop
adc
add
ljmp
jnp
mov
lea
imul
call
add
push
cld
sahf
push
mov
jns
dec
adc
loop
jno
and
cld
call
outsb
ljmp
mov
cli
aam
insb
push
imul
repnz
adc
mov
dec
fadds
rorl
pushf
divb
ret
jo
rcl
adc
fnstcw
pusha
add
mov
ljmp
aas
and
vpunpcklbw
loop
repz
fisubl
or
in
fdivr
cmp
push
or
incl
mov
in
shrb
jge
inc
dec
add
push
test
and
sbb
incl
add
adc
popf
inc
mov
jnp
cmc
xchg
enter
push
push
or
jg
pop
push
outsb
or
pushl
fwait
sti
cmpsb
cmp
test
lcall
insl
xlat
arpl
mov
jmp
mov
cld
lods
in
cmp
push
int3
or
repnz
xchg
divl
call
or
sti
pushf
iret
xchg
push
inc
jne
sbb
fsubrs
cmp
push
cwtl
pop
iret
mov
sbb
addr16
mov
hlt
sub
stos
idivb
incl
push
cmp
fsubrs
mov
adc
jge
lahf
outsb
ret
outsb
mov
testl
decl
mov
pop
dec
xchg
push
pop
sbb
mov
ret
je
insb
sbb
jp
cmp
jg
iret
xchg
push
add
sbb
pop
ljmp
push
dec
test
and
jns
cwtl
cld
cld
loope
imul
sbb
jecxz
lock
pop
jnp
or
add
decl
sub
nop
jmp
cmp
cltd
fiadds
das
pop
jnp
fs
and
jmp
insb
lods
mull
dec
push
inc
push
dec
sub
popa
mov
cmp
movsb
cwtl
sahf
leave
fstpt
xorl
scas
mov
pusha
mov
dec
dec
test
xorl
les
mov
xor
stos
or
or
leave
mov
dec
in
iret
dec
mov
inc
jmp
mov
out
cs
fdivrp
and
sub
ficoms
jp
aas
jle
xchg
out
push
xchg
stos
loope
jo
test
pushf
cmp
push
push
or
xchg
add
push
rorl
mov
incl
popf
sbb
pop
xor
xor
lahf
lret
sbb
sbb
mov
aaa
lcall
xor
xchg
ret
mov
jle
jmp
xchg
mov
cld
in
dec
jb
push
lods
test
out
incl
pop
call
mov
pushl
adc
or
outsb
and
ss
leave
cld
dec
test
xor
mov
jmp
xor
addr16
mov
pop
clc
ljmp
dec
inc
incl
and
jnp
or
xor
aas
cld
addr16
cld
fmull
lcall
mov
xchg
lods
fstl
rorb
sbb
rcrb
ljmp
enter
leave
sbb
es
add
rcrl
jmp
xchg
sbb
dec
sub
test
jmp
daa
push
out
push
mov
pop
dec
jo
fsubrl
inc
inc
nop
adc
pop
decl
and
mov
mov
xor
inc
outsl
pop
test
push
jno
mov
lock
lret
mov
pushl
call
popa
add
jmp
imul
xchg
jecxz
inc
fwait
bound
dec
dec
push
cli
mov
xchg
pop
cmpsb
hlt
int
fisttpl
mov
xor
or
mov
pop
imul
loopne
out
mov
mov
ret
xchg
push
xchg
daa
ds
cmc
jb
add
dec
mov
call
adc
adc
mov
mov
in
jns
push
and
out
jo
pushl
popa
dec
push
rcr
add
cmpsl
fistps
popf
sbbb
insb
iret
xor
jmp
xor
push
xchg
imul
das
cmc
out
fcmove
inc
mov
sub
dec
dec
xchg
mov
mov
jmp
data16
adc
ret
xor
cli
rcr
and
rolb
les
jmp
lahf
mov
out
adc
scas
popa
xchg
loop
cmc
sub
stc
adc
bound
shll
hlt
dec
sub
ds
dec
je
imul
in
mov
iret
and
bound
xchg
decl
loope
jmp
aas
lods
daa
mov
jnp
add
mov
ret
dec
xor
add
cwtl
int3
inc
arpl
jle
sbb
aaa
ret
std
inc
cmpb
aam
pushf
xchg
movsl
decl
insl
jmp
or
add
shrl
loop
movsb
sbb
adc
xor
out
test
decl
adc
stos
pop
js
pop
jp
fcomps
cmpsl
jecxz
stos
mov
pop
dec
pushl
dec
pop
mov
dec
cmp
insb
out
xrelease
and
dec
xchg
fdivrp
dec
les
je
cmp
movsl
icebp
sahf
outsl
mov
ds
mov
lret
dec
movsb
pop
push
cltd
xlat
lock
call
mov
shrl
mov
mov
and
cmp
call
jmp
int
cmp
stos
js
test
pop
push
sbb
push
andb
inc
inc
and
aad
jbe
mov
pop
mov
xchg
sbb
dec
ror
std
mov
xchg
sub
stos
mov
add
int3
jmp
scas
adc
jnp
mov
vminsd
jmp
decl
test
loop
xchg
insl
adc
cs
into
das
add
test
ljmp
leave
stos
jae
arpl
cmp
in
or
mov
mov
and
pushl
and
out
mov
in
xor
out
xchg
fstl
aad
pushl
int3
pop
cltd
int3
lds
add
dec
out
sbb
pop
mov
pop
aas
xchg
jbe
xor
lcall
decl
roll
pop
mov
mov
xchg
std
or
decl
adc
iret
inc
fucomp
ds
lods
dec
ret
add
inc
pop
mov
dec
lds
outsl
jmp
ret
or
push
cmp
and
loope
xchg
bound
out
pushl
mov
cmpsb
dec
push
pop
mov
icebp
xchg
out
and
in
xchg
sub
pop
or
push
fdivr
movsl
test
sarb
rolb
mov
fists
bound
jmp
pop
fistpl
fiaddl
iret
add
inc
ds
mov
and
rorb
mov
popf
arpl
jmp
int
bound
sbb
or
lcall
daa
push
ss
and
push
out
imul
pushl
in
mov
xchg
adc
xchg
and
add
jo
or
lahf
sub
cli
ret
hlt
sbb
idivl
call
lods
cwtl
shlb
imul
sub
sub
cmpsb
lods
lret
cmpsl
rcll
inc
lcall
lds
adc
adc
cmc
lahf
fstl
aaa
mov
out
jge
add
ljmp
cmc
xchg
mov
adc
mov
gs
jmp
loop
loope
mov
dec
pop
stc
jp
repz
cmp
insl
mov
fdivr
ljmp
mov
shl
sbb
clc
ret
mov
lods
loopne
into
mov
inc
sbb
xchg
fdivr
pushl
aam
iret
mov
fnsave
mov
or
outsb
push
sahf
add
add
pushl
sbb
sarb
dec
dec
dec
xchg
test
stos
mov
cltd
xchg
sbb
push
sbb
sbb
mov
out
mov
mov
jnp
push
shr
xchg
inc
incl
cmpsb
mov
not
push
xchg
add
inc
pop
mov
mov
or
mov
lcall
ret
xchg
repnz
xor
int
inc
jmp
pop
push
shrb
jns
push
add
out
mov
lcall
jl
inc
add
bound
fldenv
lret
test
xchg
push
jl
jb
mov
addl
decl
sub
mov
stos
iret
mov
insb
mov
cltd
pop
sbb
into
mov
iret
or
incl
mov
inc
pop
inc
mov
adc
ss
mov
push
pushl
sbb
ljmp
fisubrs
or
jbe
dec
in
jge
test
pop
loopne
lods
sti
pop
sub
lcall
sbbb
push
int
mov
or
jmp
adc
iret
push
inc
addl
jecxz
dec
xchg
addr16
popf
mov
mov
xchg
or
je
dec
pop
aas
push
xchg
jecxz
mov
add
mov
stos
loope
add
add
incl
and
sbb
add
addr16
or
test
inc
pop
cmp
jmp
cmpsl
xchg
mul
sbb
roll
and
sub
mov
lods
test
call
orb
adc
icebp
incl
rcrl
cli
fidivrl
out
pop
mov
call
push
addr16
and
xchg
lcall
jg
notb
fidivrs
jmp
popa
cmp
ret
fnstsw
pop
sub
push
sbb
addr16
mov
iret
iret
ljmp
xor
mov
dec
xchg
push
push
and
or
pop
xchg
les
cld
xchg
in
mov
mov
fwait
push
shll
imul
bound
movsl
pop
shr
ljmp
pop
daa
push
add
jle
add
xlat
mov
roll
movsl
cld
pop
cmp
daa
adc
jno
ljmp
mov
test
mov
mov
inc
push
fwait
enter
push
mov
mov
cmpb
push
mov
je
testb
scas
out
data16
lea
je
enter
push
xchg
jmp
pop
sbb
inc
pop
sub
fwait
adc
cltd
out
xor
jg
in
xor
jmp
or
call
out
dec
ficompl
xor
pop
jns
and
test
mov
cmp
mov
and
insl
add
ret
int3
jb
pop
aam
cmc
aaa
sbb
cli
call
call
push
out
rcll
xchg
iret
mov
xchg
dec
fistpl
push
test
jo
push
inc
push
jle
mov
sbb
xor
jnp
cld
fidivl
incl
add
cmp
lea
pusha
jns
rorb
mov
pop
dec
mov
push
lcall
fists
shll
fwait
retw
outsb
mov
ja
adc
repz
xchg
jmp
dec
xchg
aam
fstl
jp
mov
sahf
shll
or
incl
push
mov
push
pop
icebp
xor
sub
jge
int
pop
outsb
jp
lret
pop
jb
sub
sbb
dec
ret
stc
mov
je
dec
xchg
stc
rcl
cmp
sub
and
pop
roll
xor
lcall
xor
jae
ror
fldl
stos
fs
cmp
lods
inc
ja
fcompl
scas
push
push
or
cmp
pushf
pop
insl
mov
mov
in
mov
outsb
daa
aas
pop
xor
cmc
mov
sar
mov
fisttpl
shlb
sub
mov
pop
dec
adc
mov
data16
incl
inc
adc
sbb
aad
lods
leave
shlb
lcall
jbe
call
adc
xchg
inc
je
add
rcrb
inc
mov
ljmp
xor
mov
lcall
aam
cmp
sub
cmp
cmpxchg
cmc
in
lods
lret
mov
ljmp
es
jae
aaa
push
rorb
cmp
push
imul
mov
dec
dec
mov
sbb
xlat
outsb
idiv
incl
jo
sub
pop
gs
xchg
push
inc
sbb
cltd
push
idivl
rolb
decl
push
cmpsl
inc
jbe
test
sahf
andl
pop
cmpsb
cli
push
jmp
sbb
lcall
pop
mov
stos
vpaddusb
or
sti
or
push
adcb
test
and
orl
int
mov
mov
push
lcall
rolb
pusha
iret
addr16
sub
push
pop
xchg
out
inc
les
or
decl
out
cmp
inc
lret
cmp
mov
cmp
add
jg
xchg
iret
mov
inc
pop
xchg
gs
into
pusha
int
inc
adc
push
mov
xor
aaa
or
push
lcall
int3
sbb
mov
gs
mov
pushf
xor
loope
mov
pushl
pop
sbb
nop
mov
je
movsl
or
idivb
repnz
xchg
ret
incl
push
fnsave
inc
ljmp
rcrl
push
rcrb
mov
loope
cld
cld
fstpl
lcall
out
shlb
popa
cmp
outsb
mov
nop
call
mov
stc
mov
mov
adc
cli
in
inc
popa
pop
arpl
jae
adc
lcall
add
ds
subb
cmp
push
rclb
cltd
sbb
lcall
push
mov
jne
rorl
inc
cltd
cmc
xor
daa
scas
andl
xlat
xor
mov
call
push
fdivrs
dec
fldt
in
adc
stos
lcall
add
push
subb
cmpsb
nopl
jb
push
and
sbb
jmp
sarb
ljmp
repnz
dec
push
in
test
mov
cld
or
in
adc
incl
xor
mov
pushf
inc
rolb
cmp
or
into
jno
jmp
pusha
in
in
ss
mov
icebp
push
and
mov
test
jne
pop
dec
xchg
jmp
push
cld
jmp
xchg
pop
filds
fdiv
or
scas
test
pop
mov
lcall
mov
ljmp
push
xchg
cltd
in
dec
fildl
adc
mov
jmp
and
xchg
ljmp
cltd
mov
sub
fbld
inc
ljmp
mov
out
cmp
mov
sar
inc
mov
jae
in
xchg
mov
mov
sti
xchg
fisttpll
mov
mov
jmp
daa
mov
push
outsb
mov
xor
aas
push
add
mov
out
adc
fcoml
cmp
popl
jns
fdivl
mov
lret
icebp
lea
lret
mov
mov
push
ss
popf
mov
mov
cmp
xchg
xchg
xlat
dec
adc
pop
daa
dec
push
stc
and
fists
mov
mov
pop
cmpsl
sub
or
mov
and
mov
mov
clc
test
mov
outsl
les
fs
xlat
xchg
jp
lcall
stos
push
pop
jae
out
jmp
shrl
and
lods
push
push
mov
out
lret
inc
pop
inc
shll
roll
add
xchg
pushl
out
add
repz
filds
sub
pop
xchg
push
out
pusha
add
call
movsb
adc
xchg
loope
sbb
and
cmpsb
cmp
gs
shlb
in
icebp
xchg
mov
dec
inc
mov
fidivs
aam
ljmp
add
and
add
decl
in
or
push
sbb
pop
add
mov
push
jb
pushl
cmp
jge
cld
and
divb
dec
scas
out
aaa
arpl
mov
ljmp
and
cmp
sbb
jo
xchg
nop
or
es
mov
cmp
popa
icebp
xchg
jmp
or
fs
dec
mov
sarl
xchg
xchg
sbb
xchg
and
stc
and
cmp
lcall
xor
cmc
je
xchg
and
mov
shll
sbb
inc
and
cmp
push
xchg
scas
mov
fdivp
push
rcr
jns
adc
dec
scas
lretw
sar
jnp
and
push
mov
int3
ljmp
outsl
jle
pop
icebp
fldl
das
sub
decl
stos
push
fcomp
mov
jo
mov
pop
mov
js
nop
sbb
test
hlt
xor
lcall
dec
insb
ret
notl
loopne
jae
jecxz
fisubl
loope
cmp
test
cmp
dec
mov
mov
mov
insb
aas
lret
pop
bound
mov
pop
in
cmp
leave
sbb
lods
mov
mov
add
mov
dec
cld
dec
jg
test
cmp
xor
jo
cmp
arpl
or
cmpsb
mov
or
add
je
lock
call
aad
cltd
loop
mov
dec
mov
pop
clc
cmp
pop
hlt
xor
cs
xchg
fwait
pop
int3
mov
cli
pop
push
adc
xchg
xchg
sbb
cmp
mov
lds
lods
mul
gs
mov
incl
outsl
xchg
jmp
loope
xchg
stos
xchg
add
jp
push
in
xchg
push
loopne
fdivs
cli
test
lcall
enter
xor
fdivrl
fidivl
in
push
mov
mov
mov
push
dec
test
je
or
adc
xchg
mov
in
jo
mov
repnz
jmp
rclb
out
add
push
cs
mov
and
aas
std
aaa
decl
mov
xor
lods
push
outsl
aas
and
dec
sub
cwtl
test
jmp
stc
cld
lea
add
push
add
adc
lods
xchg
xchg
mov
ljmp
push
into
push
inc
or
and
sbbw
pop
cmpsl
mov
pop
xchg
shll
cmp
sub
loope
mov
std
loope
lcall
jmp
add
cld
fcmovb
sub
aam
insb
orb
popf
lcall
push
out
pop
mov
lods
push
cmp
pop
pushf
pop
xor
movaps
cmp
aas
fsubl
mov
lcall
adc
testl
pop
shlb
std
push
dec
rclb
test
in
ljmp
fcomps
rcrb
push
push
insb
arpl
mov
insb
clc
fs
sbb
sbb
xrelease
adc
jg
ljmp
out
push
sbb
jg
add
mov
rorl
int
jmp
jp
xchg
in
loope
test
inc
cli
add
or
je
inc
cld
in
call
das
sub
mov
xchg
jp
das
push
pop
cltd
les
mov
call
pop
dec
das
pop
fbld
mov
mov
shll
daa
loop
dec
mov
sub
testb
lcall
adc
mov
out
fildl
out
shrl
xchg
xor
call
rorb
mov
cmp
xchg
pop
xchg
aas
inc
mov
repnz
add
dec
sbb
mov
dec
jmp
mov
daa
sbb
jl
mov
sahf
mov
lods
shl
push
cwtl
inc
cmc
or
call
cmp
fdivrs
cmpb
sbb
shlb
insb
fadds
test
and
call
or
xchg
dec
xchg
inc
xchg
lods
and
pusha
in
aaa
lret
dec
into
ficoml
cmpl
pop
xchg
lcall
in
inc
cld
jns
sub
out
jge
cmp
dec
cli
adc
mov
jae
pop
sub
jge
xor
lds
xchg
fadds
es
lret
pushf
ret
sub
lods
jne
and
call
nop
dec
and
aam
mov
adc
imul
sub
addr16
decl
mov
add
cwtl
popa
push
xlat
cmpsb
sbb
dec
inc
rorl
inc
mov
into
test
jmp
call
outsl
jb
out
adc
adc
loop
mov
cld
xchg
cs
push
inc
test
clc
stc
pop
addr16
popa
mov
mov
jb
daa
lds
push
dec
clc
cli
cmpsl
icebp
aad
push
or
inc
les
push
test
inc
shlb
das
cld
pop
or
popa
jns
jge
pushl
cmp
lods
pop
mov
cltd
retw
pop
aam
inc
lahf
pop
stos
je
mov
mov
dec
pop
pop
cmp
jmp
cmp
and
out
push
or
sbb
aam
test
cmp
cmp
out
jl
ja
lcall
xchg
data16
fucom
orl
cli
lock
lea
xorb
cmp
fdivrp
lcall
sbb
xchg
add
lcall
jle
cmp
cmp
call
in
mov
pushf
ds
sbb
and
push
jecxz
fistl
insb
sub
ja
cmpsl
lcall
cmc
jmp
hlt
scas
or
xor
aam
xchg
pop
xor
lock
dec
lock
jmp
lcall
js
sub
icebp
imul
or
sbb
testl
lods
lret
xlat
loopne
nop
call
pusha
lcall
jb
pop
jns
aad
dec
sub
xchg
lahf
popa
xchg
fistpll
jl
jmp
adc
add
fbstp
lahf
adc
jns
xlat
cmp
sahf
incl
mov
cmp
jbe
add
xchg
or
xchg
std
mov
test
lcall
push
ja
lods
mov
pop
pop
test
push
adc
fmuls
mov
pushl
lret
push
fisttpl
fildl
and
and
aad
push
or
and
push
inc
lock
lods
scas
incl
jge
jbe
mov
inc
jno
iret
shl
and
mov
hlt
cmpsb
aam
pop
sti
fcmove
and
push
push
mov
jp
mov
mov
sub
jo
push
out
dec
test
movsb
xchg
sbb
movsb
push
push
push
call
leave
push
jg
inc
dec
and
push
pop
and
sti
sbb
xchg
icebp
jge
adc
pop
pushf
jmp
fwait
pop
mov
cmp
ljmp
fistpl
sbb
iret
xor
test
int3
and
adc
incl
push
aam
jle
hlt
rcll
push
xchg
fdivs
mov
pushf
adc
aaa
cmpsl
push
clc
ret
pop
frstor
es
adc
repnz
loope
fsincos
addb
inc
cmp
test
mov
cmp
test
add
mov
push
stos
scas
and
imul
xor
xor
rcrb
or
orb
imul
push
jns
pop
sbb
add
les
fld
sbb
pop
sbb
or
xor
in
mov
data16
cmp
jb
cmc
cmp
sub
out
js
nop
add
fstpl
enter
dec
push
push
adc
loopne
push
lods
and
idivl
ret
xchg
lea
cmpsl
dec
push
jb
fistps
push
stos
andl
incl
dec
cmp
iret
clc
dec
inc
mov
or
dec
gs
pop
mov
jl
dec
pop
and
sub
dec
iret
cmpl
out
insl
in
jns
or
iret
xchg
popa
fcmove
mov
push
dec
push
sub
incl
orl
stos
ss
fxch
ret
push
mov
sar
ljmp
test
or
mov
sub
and
lea
pop
test
xchg
and
ljmp
push
ds
pushf
cmp
imul
leave
mov
jbe
xlat
or
push
dec
pop
push
insl
push
cmp
dec
xor
mov
pusha
xchg
add
sbb
lods
outsb
out
arpl
or
add
std
lcall
push
fisttpl
and
and
xor
in
into
fwait
stos
fimuls
repz
stos
mov
lcall
scas
test
movsl
inc
mov
inc
ficoml
out
shr
decl
jmp
cltd
aaa
pop
mov
scas
out
adc
lods
adc
lock
jnp
aas
or
decl
jb
das
sarl
inc
push
mov
mov
mov
adc
push
icebp
shrl
scas
push
pop
mov
inc
popa
scas
insl
test
ret
aad
adc
pop
xor
push
cmp
jmp
jbe
xor
xor
decl
push
adc
add
pop
fucomp
cmp
dec
out
stc
dec
in
scas
xchg
add
repnz
pop
gs
js
iret
incl
cmp
jbe
lahf
push
call
fists
stc
xchg
je
xor
in
cs
dec
jbe
and
and
inc
bound
sbb
in
imul
xor
jl
pushl
cwtl
inc
in
idivb
andb
inc
scas
and
sti
test
add
mov
call
mov
and
xlat
out
das
and
cmp
clc
imul
aad
mulb
decl
and
sub
ret
pop
push
es
add
inc
insl
mov
or
adc
mov
call
xchg
repz
int
cltd
inc
js
dec
inc
inc
idivb
fwait
dec
sub
xor
push
call
pop
xchg
and
imul
in
test
insl
dec
push
scas
push
cmp
int3
pushl
and
addb
inc
or
cmp
stos
fwait
xor
into
adc
int
jmp
inc
cmpsb
cmp
int
cmp
outsb
mov
dec
adc
sbb
xor
frstor
loopne
pop
out
cs
cld
fistpll
pop
jb
ret
rorb
and
push
cmp
jl
mov
test
lcall
xor
xchg
mov
fs
dec
mov
aas
and
test
jne
ss
dec
pop
jecxz
cli
cltd
inc
sbbb
divb
xorl
incl
mov
pop
sub
pandn
mov
cltd
push
ds
fbstp
jb
xor
cmp
sbb
ja
push
mov
cmp
mov
add
inc
jle
push
add
ss
iret
pop
clc
cld
bound
leave
mov
fldenv
in
or
incl
daa
shll
or
test
pop
xor
ss
loop
mov
dec
stc
adc
push
sbb
adc
mov
andb
sub
jg
xchg
mov
xchg
sub
sbb
movsl
out
or
ds
sbb
adc
fdivr
ljmp
xchg
ja
xor
or
xchg
cmpsb
jbe
inc
mov
cmpsb
iret
bound
stc
decl
ret
xchg
leave
aad
mov
push
call
mov
xlat
sub
incl
push
inc
cltd
test
dec
sti
sbb
dec
test
inc
xor
call
loope
jne
ret
push
pop
pop
mov
sbb
cmp
push
aam
and
test
mov
xor
insb
popa
repnz
inc
das
and
decl
popf
fnsave
imul
pop
shl
xchg
test
mov
or
inc
xchg
imul
pop
cmpsl
bound
in
xor
mov
adc
inc
inc
ja
lcall
aad
jae
pop
sbb
mov
xchg
cmp
fcompl
loop
shr
dec
or
mov
mov
ljmp
fdivl
hlt
jnp
fdivl
mov
fildl
sub
adc
lcall
push
and
mov
jg
ret
jl
data16
pop
lods
sub
add
mov
cmp
sub
pop
pop
iret
xchg
jns
sti
push
jle
int
jb
jp
dec
fwait
mov
fldenv
aas
mov
jmp
insb
dec
sti
sub
insl
popf
movsl
or
sub
mov
dec
xchg
out
fildl
ljmp
mov
fwait
rorl
mov
mov
test
mov
pop
test
call
sbb
push
mov
nop
movsb
mov
jns
push
std
add
negl
dec
jne
fdivrp
jle
jne
sub
cmp
ja
fidivs
sbb
dec
int
mov
lcall
cli
out
jnp
lahf
and
and
xchg
dec
mov
in
cmc
lods
jne
inc
outsb
aas
dec
dec
mov
insl
cmp
jb
xchg
mov
jb
adc
cmp
dec
add
decl
sahf
in
lahf
pop
jg
xor
adc
jmp
xor
int3
bnd
imul
decl
notb
push
adc
mov
js
jb
adc
nop
rcll
cli
insb
pushl
sbb
fnstenv
lock
mov
xor
jno
out
test
aaa
aam
xchg
fsubl
lcall
fwait
cmc
in
ret
sub
xor
movsb
jp
arpl
scas
pop
cltd
in
cmp
cmp
lcall
cmc
and
fdivs
imul
add
push
mov
imul
sbbl
push
sti
outsb
dec
in
sbb
out
add
ret
std
push
lret
lods
adc
lods
mov
orl
lcall
ret
or
mov
mov
daa
dec
and
inc
insb
mov
out
xchg
push
mov
ljmp
lods
jo
cmpl
cmp
and
fs
lahf
sub
data16
lahf
mov
sbb
adc
lcall
mov
notb
pop
adc
cmpb
call
mov
pusha
xor
inc
and
or
lds
cmp
ds
andb
mov
sbb
fiadds
add
mov
fisubrs
pop
jg
ljmp
xchg
cmp
je
into
insl
outsb
test
adc
hlt
fldenv
and
rorl
sub
mov
push
mov
cmc
sbb
xor
lcall
fstl
jle
push
pop
xor
pop
adc
or
cwtl
sub
outsl
stos
mov
aad
popa
mov
decl
jl
nop
sbb
push
push
and
fildl
push
mov
sbb
out
lahf
dec
out
add
test
pushl
in
xchg
sbb
jl
cwtl
and
mov
rcrb
lds
and
aas
mov
sahf
test
outsb
cmp
aas
outsl
mov
dec
xorl
out
incl
mov
and
iret
mov
stos
xchg
insl
cmp
push
ret
xor
pushl
int
xor
sahf
fstpl
adc
lods
ret
popf
add
icebp
mov
das
in
pop
jmp
mov
ret
cld
and
int
lret
xchg
dec
cmp
out
mov
es
inc
js
mov
sub
jo
repnz
sbb
sbb
aad
stc
xchg
or
std
lea
data16
std
incl
xchg
adc
push
iret
pusha
mov
mov
call
aas
mov
adc
aas
lret
insl
and
add
ljmp
xor
pop
sbb
pop
jle
shrb
add
mov
pop
pushl
and
push
fistpl
nop
jecxz
xchg
sbb
mov
dec
mov
into
or
decl
divb
cmp
ds
mov
mov
sub
pusha
incl
sub
jl
stc
testb
jnp
orb
andl
jg
xor
pushl
jae
imulb
dec
rorb
clc
or
jg
mov
sub
xor
dec
lcall
sub
aam
jnp
stc
addr16
mov
ja
fs
pop
cmp
jb
pop
scas
jno
iret
or
xlat
xlat
push
out
call
insb
xchg
ret
scas
cmp
xor
inc
add
or
shlb
mov
xor
aas
add
stos
mov
loope
jecxz
xor
hlt
ljmp
int3
push
jno
shr
sahf
sub
jle
and
sar
push
dec
dec
je
fs
sarl
jnp
or
and
pop
popf
sub
out
cmp
jecxz
jae
push
into
sbb
dec
or
sub
jne
loopne
pop
pop
jmp
xchg
inc
ljmp
cmp
enter
xchg
outsl
pop
inc
fidivrl
sahf
fs
scas
add
popf
inc
add
cmc
mov
xor
fimuls
jg
aas
add
sub
xor
mov
ljmp
push
xor
lods
xlat
outsb
xchg
clc
lcall
dec
mov
mov
xchg
cld
xchg
out
call
and
cltd
les
in
fucomp
mov
js
repz
push
ret
and
jmp
lret
xchg
test
add
and
add
sub
xor
jmp
insb
mov
cmp
shll
add
mov
lock
cmc
jle
sub
pushl
push
sub
sahf
jae
xor
scas
jecxz
test
les
cwtl
add
lcall
sub
testb
xlat
inc
xchg
shrb
sub
push
mov
cmpsl
scas
push
daa
subl
mov
jnp
push
xchg
call
hlt
xor
ja
jno
inc
clc
iret
enter
cli
es
ss
jmp
jb
jns
orb
aam
stos
mov
sarb
xor
xor
pop
or
std
jge
fists
sbb
loope
xchg
cmp
pop
incb
icebp
mov
mov
push
push
push
push
jp
out
ljmp
jmp
rol
ja
xchg
adc
test
enter
add
fdivp
or
cmp
notb
loopne
les
jmp
repz
ja
out
test
push
shrl
adc
call
jo
and
scas
pop
stos
shl
scas
mov
loopne
push
popf
xchg
mov
decl
aam
add
pop
pop
popa
out
aaa
push
call
add
xchg
jg
cld
fistl
out
xor
push
jns
adc
scas
pop
pop
sbb
cltd
xchg
adc
ljmp
ret
jo
stos
into
loop
hlt
adc
pop
jecxz
cmpsl
ret
filds
mov
xor
nop
fscale
call
add
ret
out
dec
sub
scas
mov
stos
aaa
cs
sti
add
jge
js
inc
scas
sbb
decl
or
xor
loop
jp
cltd
push
imul
in
sub
fwait
ror
test
pushl
mov
sub
out
add
aaa
mov
pusha
arpl
jp
ss
movsb
pop
cmpsb
es
decl
jae
cs
mov
push
sub
in
mov
xchg
in
push
insl
pop
jns
jle
jns
cmc
xchg
cmc
std
mov
adc
pusha
adc
mov
outsl
lock
cwtl
pushf
jge
ljmp
mov
rcll
push
mov
lea
adc
cmpsb
mov
dec
cld
mov
lcall
lods
jo
test
dec
das
lret
adc
or
push
sub
push
pushl
scas
fists
inc
or
popf
pop
repnz
daa
scas
les
popf
js
inc
movsl
mov
ljmp
xchg
std
pop
xor
scas
lcall
mov
lock
xor
xchg
jnp
incl
xor
cmpb
fwait
daa
fwait
shrb
test
movsb
fbld
fidivrs
adc
pusha
mov
dec
adc
jo
xchg
pop
repz
xor
lcall
outsb
fsts
xor
js
ja
mov
inc
xor
push
ret
shl
pushl
push
or
xchg
out
pop
xchg
fwait
enter
insb
aam
sub
pop
idiv
pushl
dec
or
xor
xor
call
pop
mov
jae
sbb
and
sbb
ljmp
cld
sub
push
cmp
or
adc
out
cwtl
sub
xlat
xchg
mov
ljmp
movsb
loope
out
push
ss
sar
xor
scas
mov
dec
jmp
repz
mov
inc
cmp
mov
call
sub
addb
pusha
push
fiaddl
mov
and
arpl
dec
test
jne
incl
mov
jno
cmc
sub
popf
cmpsl
adc
pop
jns
xchg
mov
popa
jecxz
jns
xchg
jl
jmp
repnz
pop
mov
call
ret
in
and
push
lcall
daa
and
mov
fisttpl
enter
std
mov
daa
dec
push
push
std
out
jge
rorl
bnd
sti
mov
xchg
dec
pop
mov
mov
decl
pop
shrl
mov
xchg
cli
xor
jnp
cwtl
lea
decl
imul
cmp
test
or
jne
leave
dec
dec
push
xor
adc
rorb
mov
or
push
and
addl
push
jbe
jo
decl
cmp
jno
dec
stos
les
aaa
in
mov
orb
popa
mov
incl
stos
test
sbb
mov
dec
cwtl
and
pop
xorb
incl
adc
inc
mov
insb
das
cli
xor
fisttpll
dec
add
or
in
mov
clc
mov
mov
and
or
mov
decl
fwait
pop
sar
std
aas
in
mov
aas
movsl
rcll
test
push
xchg
mov
incl
stos
sub
mov
cmpsb
stc
mov
mov
add
ds
mov
mov
decl
jno
sub
sbb
int
cli
setno
adc
mov
lea
cmpsb
jmp
jge
enter
lods
or
sub
and
cmpsb
aas
pop
sbb
or
jge
adc
movsb
xor
lds
lea
imul
jb
insl
and
mov
push
cmp
jmp
xchg
mov
add
jle
bound
fsub
and
cmpb
das
xchg
cmc
mov
cmp
xor
pushf
push
push
mov
mov
test
sbbb
das
into
xchg
hlt
lea
inc
pop
jp
adc
or
out
dec
jge
push
cltd
ss
mov
in
idivl
jmp
mov
pop
nop
cli
inc
sub
xchg
data16
adc
js
dec
inc
or
std
mov
pushl
jmp
cmp
jge
pop
stos
xchg
mov
mov
test
jmp
or
in
pop
dec
pop
cs
aas
add
into
int
ret
push
add
gs
sub
inc
sbb
lock
fmuls
mov
fcompl
int
xor
mov
sahf
jno
pop
xchg
dec
stos
cmp
incl
data16
push
nop
sbb
or
mov
fisttpll
inc
fstpl
add
mov
movsb
in
mov
jmp
out
fisttps
push
and
mov
sti
mov
ds
mov
fdivr
decl
fucom
fdivr
ficoms
ret
push
mov
les
cwtl
scas
add
pushl
pop
lret
out
or
push
out
idivl
std
mov
mov
outsl
loope
mov
cltd
add
lcall
repnz
mov
inc
loopne
ficoms
lret
iret
or
sbb
dec
xor
sbbb
xor
pop
aad
dec
fwait
je
int3
mov
cmp
lods
movsb
test
pushl
jl
add
mov
shlb
lcall
ja
outsl
ljmp
test
jmp
mov
pop
pop
xchg
or
shl
scas
pop
loop
out
and
lret
arpl
decl
push
fsts
imull
out
adc
setp
xchg
repnz
ljmp
lret
dec
int
pushf
cmp
ret
xor
pop
test
add
jmp
cmc
pop
sbbb
mov
mov
xor
adc
clc
gs
stos
adc
push
adc
lret
pop
jg
jg
dec
dec
aaa
in
xlat
outsb
inc
inc
imulb
aad
jmp
ds
bound
out
in
mov
mov
xchg
repz
dec
stos
mull
push
repz
jne
gs
sarl
jb
inc
jne
rcll
inc
cmpsb
sbb
dec
ljmp
repz
jae
lret
inc
and
divb
das
push
imul
mov
sbb
jmp
and
sub
inc
daa
insl
and
push
shll
add
mov
mov
negl
push
adc
call
test
mov
lea
outsb
lret
mov
loop
iret
bnd
xor
and
sub
insl
sub
insb
scas
rcll
ljmp
push
jg
pop
and
incl
or
sub
cmp
dec
cmpsl
insl
test
popf
xor
out
mov
out
loop
decl
cmp
xor
rorl
bound
std
insl
shl
test
mov
mov
mov
cmp
mov
mov
stos
ficompl
mov
or
push
mov
dec
mov
loopne
iret
pop
incl
mov
icebp
negl
insl
mov
call
xor
loopne
dec
movsl
sub
mov
in
fdivl
jle
leave
sub
popf
cs
outsl
sti
ljmp
movsb
popa
lret
lods
fisubrl
out
cmp
pop
push
leave
lret
lods
mov
mov
and
subb
pop
mov
scas
popa
fidivrs
loopne
push
into
xchg
call
in
loopne
test
adc
sbb
xchg
cmovbe
xor
adc
fisubl
mov
adc
filds
mov
subl
push
imul
jb
rcll
iret
cmc
incl
aas
ljmp
loopne
cwtl
sub
int
repnz
pop
mov
das
ficomps
je
mov
call
and
inc
cmc
jg
dec
or
pop
mov
movl
je
sar
decl
adc
cmp
aaa
lea
push
es
dec
mov
pop
lds
imul
decl
adc
or
mov
pop
add
add
mov
fsubrl
inc
popf
cld
mov
jmp
push
jg
stc
xor
fdivr
out
mov
sub
push
push
jge
lcall
cmp
imul
dec
sub
dec
cltd
or
es
xlat
mov
test
push
mov
xor
push
mov
xor
xor
ss
decl
fldcw
cmp
addr16
fdivs
mov
pushf
mov
lcall
sbb
xchg
cwtl
rorb
or
adc
test
inc
repnz
sbb
sbb
push
fnsave
hlt
inc
data16
cli
adc
cmp
jge
mov
dec
dec
mov
mov
icebp
scas
mov
sub
mov
lcall
jp
ret
lcall
test
adc
lock
cs
push
lret
jle
xchg
jp
lahf
lret
adc
mov
andb
or
fcompl
inc
out
push
std
and
cwtl
es
lods
jp
push
jl
sahf
push
popa
pop
imul
jmp
in
sub
mov
cmpsl
stc
mov
insl
test
xor
or
incl
sar
cmc
shll
call
addr16
notl
push
decl
incb
lcall
cmp
mov
pop
mov
sbbl
dec
jbe
mov
ja
sahf
cmp
pop
push
mov
jno
mov
pop
ret
lret
inc
hlt
decl
dec
push
clc
dec
inc
or
aas
xor
pop
cwtl
add
cmp
std
mov
in
pop
or
in
leave
jmp
jmp
fdivs
dec
fsubrl
cmpsl
and
lret
xchg
add
ret
push
incl
int
rorl
xor
test
add
iret
adc
aad
push
je
incl
call
mov
js
out
xlat
mov
xor
jge
jge
and
popa
and
dec
lcall
ja
or
sub
cmp
mov
out
andb
arpl
ljmp
stos
adc
das
enter
xor
dec
test
xchg
and
divl
mov
decl
xor
and
and
pushf
push
xchg
mov
mov
sub
movsb
jnp
addr16
lcall
testb
xor
pop
fidivrs
adc
push
xchg
inc
pop
arpl
adc
clc
push
jns
sub
pop
enter
push
pop
add
sbb
negb
jns
fistps
call
leave
push
out
mov
sub
jecxz
cmp
xchg
fidivs
mov
call
repz
lds
movswl
xor
xchg
cmpsl
in
int3
test
and
lea
call
pushl
mov
add
mov
pop
lcall
insl
les
push
or
sbb
mov
lret
repz
hlt
pushf
jecxz
rorb
ljmp
enter
mov
arpl
mov
subb
xchg
lcall
dec
push
jge
mov
inc
shlb
mov
mov
adc
in
or
sub
enter
out
mov
and
pop
jg
dec
in
fs
fs
sti
add
lock
repz
xor
fcoms
lret
push
ret
adc
mov
inc
pop
push
iret
push
push
sbb
mov
push
cmp
stc
les
push
lret
adc
mov
out
stc
mov
ret
jge
rorb
pushl
insl
or
jne
in
mov
mov
int3
mov
xor
xchg
mov
push
movsb
mov
ljmp
cmc
push
adc
cld
mov
clc
add
mov
jge
call
add
adc
adc
mov
xor
mov
incl
adc
out
loope
cmc
std
push
or
dec
sub
cmp
in
or
out
addr16
pop
adc
push
pop
stos
frndint
movsb
aas
add
aas
sti
mov
int3
cmp
xchg
and
jmp
sbb
lods
sbb
jg
stc
cmp
enter
int
jae
cmp
incl
into
shlb
aaa
aaa
mov
inc
fwait
and
push
push
lcall
sbb
pushl
jmp
push
mov
mov
mov
lods
push
inc
lods
mov
aas
mov
cmp
sub
push
lds
cmp
inc
add
mov
xchg
or
rorl
int
notb
pop
lret
xor
mov
clc
fdivr
pushl
stos
ret
fwait
push
rcrb
test
mov
adcb
adc
jge
aas
sbb
add
sbb
xlat
mov
cmp
sub
add
jl
fnstsw
xchg
mov
fidivrl
stc
decl
or
sbb
pop
cwtl
faddp
stos
lret
ljmp
push
jne
rorl
adc
add
mov
imul
mov
dec
iret
sbb
call
jecxz
std
mov
fs
jmp
sub
js
inc
sub
or
std
mov
popf
stc
jnp
ret
cwtl
mov
fbstp
iret
fistps
adc
decl
int3
mov
push
add
incb
in
dec
stc
js
sub
adc
popf
mov
lcall
jge
and
repz
push
mov
mov
or
fildll
lds
fdivrp
call
jmp
mov
je
subps
sbb
ret
incl
mov
xlat
xor
inc
jle
sub
jle
or
int3
pop
in
mov
sbb
and
insl
lcall
out
pop
inc
pop
xchg
cmc
push
adc
lahf
push
js
push
call
repz
inc
lods
adc
xor
aas
mov
syscall
fwait
mov
mov
and
push
push
adc
inc
pushl
rcl
lcall
sub
adc
push
jo
jmp
test
mov
mov
cmc
aam
stos
fsub
jo
jae
div
es
lods
add
sbb
mov
incl
fnstcw
or
pop
add
mov
sbb
xor
mov
ja
mov
clc
lcall
jg
add
push
ficoms
inc
lahf
ret
inc
or
addr16
insl
in
call
ret
sbb
push
arpl
push
adc
imul
dec
push
ljmp
jb
sbb
inc
and
mov
sbb
mov
mov
idiv
pushl
push
mov
add
stos
sbb
sbb
out
inc
jge
test
leave
push
dec
stc
das
mov
ret
test
cmpsb
test
and
or
inc
ds
cmp
decl
push
aaa
pop
jno
inc
loopne
orb
lock
add
or
dec
cmp
pushl
nop
jecxz
popf
mov
or
icebp
dec
out
ret
sub
sbb
nop
mov
dec
lods
dec
call
push
mov
mov
mov
pop
outsl
dec
xchg
iret
xchg
imul
push
pop
mov
ficomps
iret
movsb
add
imull
ret
in
sub
bound
jno
fs
cmp
lret
cmp
out
inc
out
pop
dec
enter
xor
cmp
cmpsb
dec
or
xchg
in
add
call
shll
stc
lods
mov
sbb
mov
aad
iretw
mov
inc
push
sub
inc
pop
ljmp
icebp
loop
jmp
popf
and
negl
sbb
aaa
jmp
mov
clc
or
loopne
mov
repz
mov
in
into
dec
hlt
jae
icebp
cmp
ficompl
and
dec
into
iret
pop
xchg
subps
add
cmp
cmpsb
push
mov
jbe
mov
jmp
jg
xchg
pushf
repnz
inc
test
popa
dec
fisubrl
call
movswl
jb
scas
pop
call
and
dec
fwait
scas
mov
jp
out
js
shrl
pop
lds
pushl
hlt
gs
repz
fs
in
ret
pop
push
mov
cmpl
dec
ljmp
jns
lret
inc
and
cmc
imul
and
mov
sahf
jb
and
call
rcr
push
and
fidivl
inc
sub
mov
mov
inc
icebp
das
cld
ret
mov
inc
data16
lcall
les
mov
pop
mov
inc
push
fstps
xchg
inc
jae
movsb
xchg
pushl
dec
test
in
pop
or
add
inc
repnz
out
mov
lcall
insb
sbb
repnz
adcb
scas
in
sahf
cmp
inc
and
sub
fsubr
or
call
inc
mov
and
cmpsb
cmp
fidivs
lods
mov
iret
mov
and
jo
cmp
pushl
call
fildll
jnp
insb
popf
xchg
mov
inc
iret
lahf
adc
mov
xlat
or
pushl
mov
mov
ret
adcl
sbb
and
xor
stos
in
daa
cld
rolb
sbb
fidivl
js
add
lods
ret
cmp
xchg
daa
push
inc
push
lret
and
decl
xor
bound
iret
sahf
ds
lahf
pusha
mov
and
inc
cmp
xor
xor
push
std
daa
lea
pop
in
xchg
mov
pop
jg
aam
in
cmp
aam
cli
cltd
push
jp
xor
clc
push
jge
push
sub
adc
fs
loope
adc
add
in
popf
push
addr16
jmp
sub
jmp
and
dec
rcrl
xor
cmc
js
test
aam
ljmp
jnp
cmp
sbb
cmp
aad
mov
xchg
mov
sbbl
das
add
dec
outsl
dec
xchg
loopne
mulb
js
fldenv
and
arpl
sbb
lods
rcr
cmpb
jnp
sub
aas
jne
in
dec
mov
push
push
xchg
loope
mov
sub
ljmp
call
pop
xchg
cmp
xor
loop
push
scas
push
pusha
out
mov
test
data16
scas
stos
lcall
unpcklps
es
sarl
dec
adc
cmp
xchg
mov
call
cmp
lock
mov
xor
xchg
adc
mov
push
scas
aaa
repnz
xor
lcall
xchg
pop
nop
movsb
aaa
inc
xor
leave
testl
pop
mov
stc
push
fstps
imul
call
push
jnp
cmp
movntq
fsts
mov
mov
aam
jmp
push
mov
cmp
scas
daa
pop
stos
and
pop
mov
js
scas
lods
push
arpl
inc
ljmp
jp
dec
or
mov
dec
xor
insl
adcb
lahf
xchg
mov
aam
push
fidivrs
fistpll
pushl
inc
mov
stos
xor
mov
add
clc
push
insl
jnp
xchg
subl
xchg
jmp
mov
mov
and
nop
rcll
repnz
cmp
cmp
cmp
rorl
incl
add
fwait
push
add
jmp
aaa
jne
rorl
rol
ret
pop
inc
pop
inc
xchg
fdivrp
lcall
push
mov
call
ljmp
cmpsb
xchg
push
or
aaa
cmp
cmp
cli
push
mov
push
sarb
aam
xchg
push
dec
add
stc
movsl
cwtl
cltd
push
fdivrl
decl
shl
ret
xor
ret
cld
mov
cmp
test
sub
lret
loope
jo
push
pushl
in
cltd
dec
sti
clc
mov
ret
repnz
push
or
or
sbb
call
add
mulb
or
fisttpl
and
enter
or
insl
rolb
les
add
push
scas
add
test
add
push
push
add
shlb
in
pushl
mov
clc
in
dec
sbb
jo
mov
inc
add
sbb
fcoms
imul
push
mov
test
jb
push
aad
add
mov
xor
rcrl
inc
outsb
dec
mov
inc
in
and
cmpsb
icebp
jl
pop
cmp
dec
inc
add
sub
lcall
sbb
decl
push
lret
in
mov
and
lcall
das
mov
adc
daa
sbb
call
icebp
lea
filds
jle
xor
push
imul
push
xor
pop
mov
decl
sahf
imul
sub
roll
sbb
cmpsb
sbb
das
stos
hlt
mov
push
call
dec
cmc
add
and
adc
mov
fimuls
lret
sbb
xchg
js
jecxz
in
call
xchg
xor
orl
icebp
add
out
mov
or
xchg
leavew
mov
divb
out
inc
and
iret
fnsave
stos
cmp
xchg
xchg
pop
cmp
mov
lcall
pop
cmp
in
push
jnp
xor
lock
ret
dec
adc
sahf
mov
decl
test
int
ljmp
dec
push
dec
test
hlt
push
mov
sti
insb
cmpsb
jmp
jae
sub
rclb
dec
jl
scas
mov
xorb
sub
inc
leave
pop
hlt
dec
addr16
fsts
daa
pop
sub
xchg
fwait
pop
push
cs
jmp
shr
ret
ss
test
ja
mov
daa
iret
mov
pushl
test
dec
inc
mov
sbb
sub
test
gs
fistpl
pop
push
hlt
xchg
leave
dec
cmpsb
mov
sti
sbb
sbb
sbb
fwait
sub
pop
daa
dec
mov
incl
dec
lcall
lds
sub
mov
add
or
xchg
rol
fdivl
incl
push
scas
fadd
and
mov
xchg
addr16
addl
xchg
cmp
mov
insl
xlat
das
imul
mov
les
popf
movsb
push
lds
es
and
xchg
imulb
les
ljmp
xor
and
push
testl
and
loope
hlt
out
clts
xchg
fisubs
push
jmp
shl
cmp
lcall
aam
add
push
add
jb
adc
icebp
cmp
sub
nop
je
lods
push
and
push
in
daa
cmp
and
lret
ds
pushl
outsb
sbb
idivl
outsb
mov
sbb
and
push
scas
jl
es
stc
mull
cli
fcompl
loopne
ja
lret
push
sub
jb
fildll
cld
lret
dec
pop
mov
push
loop
pop
sbb
mov
inc
shlb
out
inc
and
int
ljmp
dec
mov
sbb
inc
mov
lock
scas
pop
push
sbb
sahf
jp
jg
call
loop
notl
fistpl
loopne
orb
xchg
inc
mov
mov
sub
jne
mov
jl
mov
jmp
add
aaa
popf
jle
pop
xchg
outsl
add
add
je
pushl
xor
clc
jns
jl
outsb
repnz
xchg
cwtl
mulb
loope
and
jecxz
in
sub
sarb
ffreep
cmpsl
xchg
ret
xchg
cli
or
fld
xchg
mov
fcompl
das
inc
sbb
fcompp
and
pop
pushl
dec
mov
add
icebp
cmp
inc
mov
mov
inc
or
jno
jbe
popa
jns
mov
shlb
mov
stc
and
pushl
hlt
adc
push
jle
enter
xchg
aad
sbb
xchg
movsl
decl
sub
ljmp
dec
xor
xor
push
pop
jmp
stc
jne
es
pop
xchg
pop
out
push
jmp
out
mov
sbb
stos
dec
mov
dec
cld
loop
leave
mov
mov
fistl
fisubl
test
jns
lcall
adc
fwait
inc
jle
fadds
fiadds
jmp
pop
int3
cmp
mov
lahf
add
fucom
aaa
jecxz
jbe
lret
xor
in
repz
mov
into
add
dec
pushf
xlat
inc
adc
dec
lock
aam
pop
cmc
jmp
mov
mov
pop
push
fsubrl
inc
daa
xchg
mov
mov
add
test
xor
mov
lods
shr
push
lcall
nop
cmp
xchg
pushl
ds
xor
cmp
xorb
adc
mov
pop
sahf
enter
sbb
imul
push
push
or
call
sbb
in
cwtl
adc
out
mov
mov
sbbb
mov
mov
mov
repnz
or
daa
push
jno
es
dec
sbb
pushl
sub
in
inc
into
lret
cmp
mov
push
or
push
cmpb
dec
pushl
fs
imul
xor
dec
cmpsl
cmpsb
mov
jmp
inc
ss
repnz
lcall
popa
sahf
xchg
cmpsb
imul
pop
or
jle
iret
cmp
scas
mov
adcb
fwait
outsb
pop
gs
decl
shl
inc
sub
dec
cld
stc
jo
pushf
xor
cmp
add
stos
cmp
pop
cwtl
jmp
push
mov
add
in
adc
test
lret
cs
pop
adc
sar
pop
js
inc
add
into
aas
repnz
xorb
xor
arpl
jns
pop
fs
test
jmp
cli
and
dec
cmc
pop
movb
inc
xchg
rcrl
ficoml
jecxz
inc
pop
jnp
cmp
lcall
and
fdivs
xor
dec
dec
rcll
mov
adc
loopne
jecxz
scas
ljmp
fisttpll
ret
sbb
jmp
das
fisttpl
lret
adc
add
lret
dec
out
adc
dec
pop
scas
shll
cld
jmp
push
ret
ljmp
lds
mov
mov
cmp
aam
mov
aaa
push
and
aaa
pop
bound
push
aad
push
adc
bound
es
xchg
sub
arpl
jae
icebp
mov
int
std
lods
fcmovnbe
sbb
insl
out
push
popf
nop
mov
push
dec
pop
movsb
mov
lods
xorb
jmp
call
jp
sbb
scas
int
sbb
push
loope
test
xchg
cmp
clc
and
loop
scas
and
jnp
jno
lock
pop
mov
jmp
call
dec
out
add
mov
data16
add
add
lret
or
and
inc
add
sbb
call
jnp
vmptrst
outsb
std
cmc
mov
cmc
lcall
mov
mov
push
scas
mov
cmp
xor
fstpl
jmp
cmp
sbb
push
arpl
sbb
ljmp
imul
pop
mov
jns
rcll
add
push
sarb
loopne
lds
push
and
or
lcall
mov
mov
enter
test
sbb
aad
add
cmp
mov
call
sbb
cld
cmc
xorl
ja
xchg
xchg
sub
jmp
stos
push
cmp
push
addb
mov
push
call
mov
mov
mov
rorl
dec
sarl
push
mov
fistl
cmp
pop
lods
xor
fsubl
dec
jbe
sbb
mov
push
inc
jnp
cli
jg
call
mov
dec
and
xorl
mov
and
sub
rol
sbb
push
addr16
inc
idiv
scas
out
cmp
sbb
icebp
xchg
cmc
inc
roll
and
incl
shlb
in
fldl
out
sti
outsl
out
out
mov
sub
jnp
icebp
mov
ljmp
imul
mov
xchg
or
or
ja
ja
sbb
pop
test
jge
jge
call
lds
sbb
jbe
mov
push
shl
hlt
adc
sti
in
lock
stc
jae
and
cmpsb
mov
add
and
xchg
xchg
pushl
sub
or
fcomi
rcr
add
sbb
sbb
cmc
pushl
rorb
out
sub
mov
mov
xor
mov
ljmp
cmp
add
cmp
mov
addr16
push
das
xor
pushl
jbe
dec
lret
loopne
inc
outsl
cli
push
mov
out
insl
xchg
sbb
sbb
jg
mov
frstor
lods
loopne
into
cs
divl
push
jl
adc
xor
xchg
add
sub
in
stos
add
push
stc
add
cwtl
addr16
adc
inc
pop
adc
in
sub
mov
call
ja
add
mov
inc
add
mov
ja
xchg
insb
cmpsb
mov
mov
daa
sbb
pushl
and
sahf
sub
flds
dec
aam
lods
outsb
mov
test
mov
xor
and
and
incl
popa
mov
sti
adc
jle
cwtl
inc
outsb
mov
jmp
scas
lods
mov
xchg
ss
decl
mov
inc
sbb
sub
dec
icebp
lcall
mov
fistpll
fisttps
pop
xchg
xor
cmc
loope
inc
mov
rolb
int
xchg
lcall
sahf
push
jno
mov
movl
xchg
ljmp
test
and
jae
mov
cmpb
or
pop
jge
jmp
jmp
mov
cmp
bswap
push
stos
call
pop
mov
movsb
subps
xlat
add
push
arpl
jb
sub
stos
cmp
incl
push
mov
leave
mov
pop
jb
hlt
cld
mov
sub
fcoms
add
insb
scas
lcall
sub
pop
mov
das
jmp
mov
ss
xchg
add
sbb
jnp
out
push
lcall
fistl
je
leave
push
into
rcl
jp
sbb
or
sub
pushl
outsb
nop
xlat
enter
inc
je
inc
js
mov
sub
or
pushl
dec
cmp
insl
andb
in
push
fwait
add
fisubs
jbe
jge
push
in
and
arpl
arpl
inc
test
cs
les
push
push
xchg
cmp
inc
sbb
adc
push
outsl
or
adc
jp
ss
mov
jns
dec
dec
arpl
ss
decl
mov
stc
outsl
pop
inc
adc
and
or
sarl
mov
inc
xor
or
pushl
xchg
lods
mov
dec
outsl
sbb
xor
sbb
test
call
dec
jns
clc
jns
lahf
sbb
test
shll
sbb
lea
and
dec
pop
cld
fisubrs
cmp
mov
pop
aaa
mov
jle
out
loopne
call
sbb
dec
mov
in
clc
xchg
mov
pop
mov
std
pop
incl
pop
mov
dec
fiadds
xchg
sub
jae,pt
test
push
ljmp
xchg
jg
fnstcw
pop
or
das
ljmp
out
inc
dec
pop
push
popa
in
dec
cwtl
ds
fmul
jle
divb
sbb
inc
adc
jmp
test
pop
popa
dec
loopne
mov
and
out
xchg
ffree
decl
adc
mov
inc
lret
das
push
data16
pushl
imul
ret
and
cmpsb
dec
push
daa
pop
ja
lods
jbe
mov
cmp
cli
xor
sbb
push
pushl
sub
mov
fdivrs
call
or
icebp
out
adc
push
jp
out
jno
mov
dec
jecxz
jge
test
call
cmpsb
stos
addr16
push
insb
das
std
mov
add
jle
movsl
add
loope
hlt
push
in
jno
enter
arpl
mov
mov
or
push
jge
scas
mov
sahf
out
ret
cmp
add
sub
lcall
and
imul
sbb
jge
sub
push
xor
add
cmpsl
lcall
or
mov
jo
mov
shrb
cmp
arpl
sub
push
or
aaa
or
sti
push
mov
cltd
cld
cmpb
adc
pushl
mov
leave
sbb
push
mov
pop
outsb
mov
cmp
lods
outsb
data16
jne
ud0
jge
xor
jae
dec
imull
dec
mov
in
cmpsb
mov
add
rcr
inc
scas
add
lcall
mov
out
rcrb
push
inc
scas
cltd
xchg
pop
into
btr
rol
sti
xchg
jo
adc
cmp
inc
in
pushf
add
das
shll
stos
lods
stos
pop
xor
leave
test
in
clc
fimull
mov
nop
pop
sub
push
loop
dec
mov
ds
add
incl
sarl
gs
aad
std
in
and
stc
pop
aad
aas
daa
lret
stc
sub
fmuls
mov
sub
test
or
faddl
push
add
jmp
mov
orb
adc
roll
aaa
cmp
test
outsl
mov
sahf
lods
bound
bound
fcmovnbe
in
inc
or
push
jmp
out
pop
scas
and
cmp
inc
stos
fldt
mov
ljmp
jg
push
xchg
inc
xchg
sbb
mov
mov
test
lret
add
rorb
adc
incl
sbb
outsb
jmp
int3
adc
inc
mov
sub
sbb
mov
jmp
cmp
or
xchg
popa
sti
imul
scas
sarb
xor
incl
rcll
push
push
or
push
mov
ret
jmp
push
mov
or
jge
and
icebp
cmp
pushl
push
cmpsl
and
in
dec
shll
add
sarl
mov
jb
or
cmpsb
clc
lcall
in
jle
movb
xchg
lcall
sbb
sahf
dec
pop
test
jmp
or
jmp
mov
scas
jo
pop
adc
das
cmp
ret
mov
sar
aas
icebp
add
mov
dec
fsubrl
jl
jmp
jp
loopne
push
mov
test
mov
xchg
scas
fcomi
cmp
mov
rorb
insb
lcall
mov
cmp
loope
add
loope
insb
push
xchg
xor
in
sub
dec
loopne
mov
dec
mov
xchg
popf
sub
hlt
sbb
outsb
cs
inc
mov
dec
scas
imulb
mov
call
enter
scas
adc
pop
lret
mov
jae
iret
xchg
out
in
les
add
cmpsb
out
lret
faddl
lret
pusha
and
jns
roll
pop
xor
push
leave
jmp
sahf
push
mov
pushl
hlt
lret
mov
xchg
mov
dec
into
jge
xchg
mov
pop
or
mov
aas
nop
rclb
mov
cmp
call
aas
pushf
xchg
mov
pusha
cld
call
and
fs
aaa
cld
test
cmp
push
cwtl
sbb
ret
xlat
iret
cld
es
je
cmp
dec
or
mov
mov
jge
imul
clc
cmp
jmp
and
jno
pop
adc
sub
pusha
imul
sub
jmp
cmp
pop
dec
push
jne
inc
pop
sti
scas
je
mov
mov
adc
mov
xchg
je
sbb
lock
in
sbb
lods
and
mov
bound
mov
jmp
inc
add
fwait
mov
xor
cli
pop
jmp
push
or
jmp
call
dec
inc
xchg
insb
xchg
lahf
in
and
mov
addb
sbb
lcall
je
jp
xor
shll
xor
leave
add
xchg
loopne
call
insl
lock
push
test
ficoml
stos
lcall
or
testb
lcall
jg
int3
dec
sbb
mov
pusha
xchg
dec
aaa
sbb
imul
xchg
sti
mov
in
inc
and
mov
mov
push
jo
ret
and
mov
call
jno
aad
sbb
cs
mov
popf
mov
jo
sub
jbe
mov
jns
xorl
cmp
stos
clc
sbb
adc
xchg
lcall
sbb
fdivs
xchg
fstpt
mov
int
pop
fninit
dec
mov
mov
ljmp
mov
jmp
xchg
pop
jo
lahf
mov
icebp
bound
aam
fldl
sub
sahf
and
ja
shll
fstp
jno
add
xor
fdiv
pop
imul
mov
jmp
mov
jmp
les
movsb
pop
ficomps
dec
dec
scas
inc
sub
sub
pop
int3
les
mov
mov
lcall
and
ficomps
pop
xchg
xor
mov
cli
out
popf
incl
pop
dec
jmp
lods
mov
int
xchg
mov
sbb
pushl
sub
inc
push
aam
pop
lea
les
test
and
mov
jmp
test
sub
lret
cmp
mov
add
push
or
inc
pop
sub
in
ss
mov
jg
inc
push
aaa
hlt
and
mov
mov
les
andb
ds
mov
sbb
push
or
adc
mov
sbb
xor
pusha
hlt
or
mov
incl
arpl
cmp
nop
adcb
jmp
mov
xor
sbb
inc
add
lods
lock
std
jecxz
sbbb
pop
adc
std
cmp
push
rcr
jmp
adc
lock
sub
pop
cmp
cmc
add
inc
mov
lock
pushl
pop
adc
xchg
movsl
fwait
das
sbb
fcomps
jmp
out
stc
test
daa
dec
push
mov
lret
test
gs
mov
and
add
lret
adc
dec
jmp
dec
loop
jmp
in
pop
adc
add
xchg
inc
sti
insl
movb
jno
push
gs
out
arpl
cli
mov
call
inc
popa
in
mov
adc
in
cmp
sbb
and
cmp
xor
test
pushl
push
ret
sbb
subb
aam
lcall
jnp
test
incl
and
sub
mov
pushf
sub
push
leave
clc
inc
mov
stos
or
aam
inc
pop
mov
or
jne
xchg
insl
cld
jp
hlt
in
rorb
daa
pop
jmp
call
pushl
and
and
or
xor
popa
in
nop
fbstp
mov
adc
sub
pushf
adc
jmp
das
adc
loope
aas
jmp
les
jg
ss
and
or
imul
stc
and
xchg
scas
in
jbe
xchg
mov
hlt
aas
stos
inc
pop
sub
xchg
mov
add
jbe
inc
cli
mov
and
mov
sbb
scas
xchg
mov
pop
sahf
pop
popf
jp
xchg
ljmp
push
sbb
pop
push
sbb
fsubrl
into
or
je
adc
xor
fisttpl
cmp
orl
adc
or
xchg
rcrb
fisttps
pop
ljmp
sub
into
repnz
jno
push
xlat
push
dec
hlt
mov
mov
xchg
push
xor
pop
mov
ds
pop
icebp
ficompl
ja
movsl
xchg
jbe
divl
push
lods
loop
cmc
int
in
mov
jmp
out
xchg
xchg
in
push
aas
sahf
xor
cmp
add
cli
cmp
shlb
cltd
lods
bnd
test
pop
outsb
inc
adc
adc
mov
adc
dec
movl
inc
xor
dec
fs
call
movsl
shl
stos
cwtl
rcrl
fcoml
pop
jmp
out
icebp
xorb
lretw
dec
pop
incl
pop
test
aas
ret
cmc
clc
jg
xchg
and
and
push
pop
mov
lds
adc
sar
push
inc
dec
outsb
cltd
test
push
mov
pop
mov
and
in
push
mov
jle
das
stc
xor
loop
and
sbb
rcrb
aad
pop
dec
jo
xor
aas
in
inc
enter
xchg
adc
aaa
popa
iret
fdivrs
mov
sbb
pop
out
inc
and
iret
push
adcl
or
les
bound
mov
mov
addl
mov
loope
mov
xchg
mov
xchg
cmp
movsb
push
push
cmpl
sti
fimuls
dec
mov
jno
inc
gs
out
adc
scas
out
xchg
out
jne
pop
cmpsl
lods
xchg
jne
call
int
xor
dec
or
mov
jle
stos
clc
jmp
aad
cmpsl
dec
or
pushl
mov
push
out
pop
call
ficomps
int
lret
inc
xlat
out
in
xor
jmp
mov
add
or
mov
xor
scas
mov
stos
incl
xor
call
or
sti
dec
cli
scas
sti
jp
hlt
cwtl
pop
hlt
iret
mov
lds
sub
out
decl
cli
jmp
decb
push
pop
cmc
mov
icebp
jg
or
adc
cmp
sbb
sbb
scas
mov
sbb
aam
mov
pop
rclb
cmpsb
rorl
mov
xchg
lcall
push
insb
les
xchg
pop
mov
adc
mov
cli
add
not
lcall
inc
xor
movsl
pop
movsb
jg
mov
dec
lds
popa
lds
inc
mov
ret
jmp
movsl
lea
cmp
fisubrs
pop
fimuls
scas
aam
mov
xchg
jns
in
fwait
pop
idiv
ljmp
imul
mov
out
shll
cmpsl
loope
es
lret
scas
faddl
test
cmp
mov
mov
lock
jl
fnsave
push
mov
adc
adc
ljmp
das
add
adc
xor
push
scas
and
rcll
in
out
inc
pushl
fildl
call
movsb
dec
push
add
adc
setb
sbb
pushl
lods
rclb
dec
xor
shlb
xchg
in
cld
inc
inc
fiadds
or
call
pop
cld
xchg
jge
mov
out
cmpsl
xlat
ss
add
push
jns
or
jne
sahf
inc
ds
pushl
jp
push
es
andl
inc
sbb
or
adc
lcall
jns
fsubs
gs
sahf
add
adc
xchg
dec
jmp
jae
mov
fidivs
lcall
ret
add
mov
in
or
mulps
cmc
loope
add
jecxz
add
ffree
dec
mov
and
pusha
ret
dec
jns
sbb
lahf
loopne
rorb
adc
pop
lret
mov
ljmp
scas
or
xchg
pop
xchg
mov
rol
jmp
sbb
enter
cld
movsl
ljmp
mov
les
and
xlat
jne
sbb
cwtl
jo
cli
bound
pushf
sub
jns
movsb
rclb
movsb
jne
mov
daa
xorb
xor
ljmp
enter
vshufps
push
ds
push
jns
lret
fistpl
mov
addr16
ljmp
lea
fwait
out
cmpsb
leavew
push
vmread
leave
gs
xchg
gs
xchg
daa
pop
out
xor
xchg
or
mov
jns
scas
pop
mov
mov
mull
adc
sar
fldenv
ss
pop
test
ss
dec
adcl
push
out
scas
test
icebp
cmp
call
lea
mov
leave
pop
mov
mov
mov
mov
pop
pop
bound
pop
pop
sub
decl
loope
pop
pop
sahf
ljmp
popf
sbb
ja
xchg
or
xchg
push
jno
loopne
call
push
outsl
cltd
mov
cmpsb
adc
mov
mov
xchg
mov
clc
jne
inc
push
ret
hlt
jae
sti
cli
cmpsl
pop
cmp
sub
out
scas
lahf
lods
mov
arpl
call
lret
xor
xchg
xchg
cmp
mov
cld
les
out
xor
adc
decl
sub
je
sar
pop
cmp
lret
loop
clc
dec
outsl
and
xchg
mov
push
sbb
call
or
jbe
nop
sbb
and
mov
dec
pop
ljmp
jno
lcall
push
dec
lods
sbb
pop
mov
cmc
lret
movsl
pop
mov
data16
ljmp
sbb
cmc
sub
cmpsb
addl
out
sbb
bound
pushl
popl
adc
sbb
pop
xor
test
cmp
xlat
les
push
lds
inc
mov
inc
mov
xchg
mov
add
mov
jmp
fnstenv
inc
dec
add
in
dec
es
xor
js
mov
pop
pop
in
cmp
dec
shll
imul
xchg
adc
or
jge
decl
mov
insl
inc
cmp
in
mov
adc
lea
pmulhw
jbe
out
inc
xchg
ss
ljmp
mov
inc
cltd
inc
test
jne
inc
test
xchg
or
push
fdivl
hlt
lea
inc
jmp
mov
es
inc
sub
int3
test
dec
mov
xchg
sbb
adc
mov
gs
jmp
fcompl
inc
test
loop
lcall
mov
loopne
inc
daa
insl
sbb
pushl
ficoml
icebp
fstps
lea
pop
fildll
and
out
xchg
cmp
ljmp
lea
jmp
cmp
hlt
hlt
dec
or
out
inc
mov
pause
repz
jbe
ljmp
fdivl
inc
iret
jmp
adc
pop
pop
pop
mov
add
cmp
jo
xchg
and
jo
adc
mov
and
setne
pushl
cmpsl
test
inc
xchg
lock
mov
mov
test
out
mov
in
jle
decl
cmp
dec
pop
test
lods
add
adc
in
jmp
xchg
aam
jno
fcomps
imul
fisttpll
xor
cld
int
dec
sub
les
inc
daa
mov
push
mov
outsl
inc
pop
rclb
adc
call
xchg
or
pop
jnp
mov
loopne
mov
ret
mov
decb
idiv
call
xor
or
inc
add
cmp
xchg
mov
jne
push
aas
cmpl
pushl
mov
cmc
cmp
lea
push
mov
xor
cld
sahf
add
dec
arpl
fcmovbe
clc
jecxz
jmp
xor
pop
roll
mulb
mov
in
xor
dec
jae
or
jmp
subb
mulb
sub
sbb
aam
enter
and
xlat
lea
push
fs
xchg
xor
jle
dec
dec
mov
iret
ret
push
pop
mov
inc
lcall
incl
loopne
adc
dec
nop
xchg
pop
imul
or
daa
shll
jmp
mov
push
gs
ret
filds
push
sub
dec
push
push
sbb
repnz
test
mov
pop
int
out
sbb
sahf
sbb
dec
outsb
ljmp
loope
jnp
iret
mov
call
inc
sub
frstor
out
jg
and
aam
inc
gs
mov
call
and
decl
repz
and
inc
sbb
pop
xor
insl
cs
in
xchg
mov
xor
xchg
lret
in
jge
cmc
xchg
xchg
in
arpl
sub
mov
stc
ret
sbb
cmp
js
push
jle
jmp
icebp
add
add
ss
inc
mov
fldz
mov
out
adc
jg
ud0
push
xor
icebp
adc
fisttpll
sub
ja
in
popa
sub
outsb
add
stos
dec
jno
incl
bswap
sbb
or
lds
xor
ss
sbb
nop
out
xchg
dec
out
sbb
iret
call
mov
add
push
sbb
std
std
pop
xchg
jno
je
data16
pop
stc
push
lcall
sbb
mov
out
fstl
xor
addr16
popf
es
dec
sbb
push
popf
inc
inc
lds
adc
jb
lahf
daa
popf
call
mov
adc
pusha
mov
outsb
mov
rcrb
mov
jg
adc
aaa
pop
ds
pop
cmp
cmp
add
mov
lcall
sahf
pop
jne
push
cmpsb
or
xchg
call
sub
adc
adc
add
pushf
lcall
sub
sbb
imul
ja
jb
adc
and
jle
call
mov
pop
stos
xor
adc
mov
aam
add
std
scas
push
mov
fsts
adc
cwtl
imul
loopne
jge
std
pop
mov
cmp
jg
sbb
decl
inc
xlat
jae
shll
add
imul
iret
sbb
mov
call
jecxz
cmp
imulb
std
insb
mov
or
inc
push
sub
decl
jne
ror
xchg
ljmp
cwtl
imul
outsb
sub
push
mov
sub
stos
sar
incl
pop
data16
mov
dec
xor
jmp
lcall
mov
fidivrl
mov
jge
call
loopne
push
jp
jmpw
movsl
add
shl
add
pushl
and
into
les
push
xor
stos
xor
dec
imul
pop
xchg
cmp
decl
mov
and
fstpt
das
cmp
push
sbb
test
cmpsl
xchg
pushl
gs
fs
add
lret
adc
jns
stc
jl
andl
pushl
xchg
xor
or
movb
jle
movaps
xchg
add
or
lcall
ljmp
mov
orl
push
or
xor
pop
call
fdivrl
in
daa
enter
clc
mov
push
or
inc
aam
cmp
xor
inc
popa
dec
pop
jae
std
outsl
jne
clc
shll
cld
sbb
stc
repz
repnz
icebp
cli
xchg
or
mov
ret
cmpsb
loopne
lock
out
icebp
lret
or
int3
popf
popf
clc
hlt
and
mov
mov
xor
in
popf
jp
ret
nop
leave
cmc
xchg
incl
mov
push
or
addr16
xchg
dec
sbb
sub
test
rcrb
decl
out
das
pop
cltd
xor
ja
pusha
repnz
hlt
xchg
add
xchg
ficomps
in
inc
pop
andb
cmp
hlt
sar
decl
cmp
mov
daa
add
jno
dec
jae
pop
ds
or
lcall
shlb
jle
push
addr16
ljmp
adc
pop
addr16
insl
cmpsb
mov
cltd
in
mov
inc
lods
inc
test
pop
mov
ficoml
andb
mov
repnz
cli
jmp
call
xchg
adc
mov
addr16
jge
imul
xor
in
ds
jecxz
cmc
je
xchg
notb
jecxz
rcll
inc
shr
es
push
push
ja
pop
aad
mov
jle
add
mov
sbb
push
or
cmc
inc
jmp
lret
sahf
cli
or
and
loop
call
mov
and
dec
jg
loopne
jecxz
sub
mov
jmp
xor
fwait
mov
in
jmp
mov
jnp
inc
idivb
imul
inc
xchg
addr16
lds
adc
decl
push
lock
shrb
xchg
and
imul
mov
fsubrp
mov
push
mov
mov
mov
xchg
les
xchg
sbb
cmp
insb
in
ljmp
and
outsb
jbe
mov
scas
sahf
xchg
xor
inc
adc
pop
xor
jle
stos
jecxz
mov
adc
call
sub
push
decl
loope
pop
mov
fildll
jge
pop
jbe
aaa
cltd
sbb
es
test
xchg
std
pop
movsl
or
daa
das
sub
pop
inc
les
inc
call
mov
in
jg
jg
mov
sub
shl
or
je
test
lea
and
cltd
movl
pop
cmp
fldt
xchg
xor
mov
popf
pop
popf
imul
hlt
xlat
xlat
mov
mov
jg
jae
xor
mov
pop
jmp
scas
loop
mov
pop
xchg
incl
mov
jb
ljmp
daa
sahf
outsl
pop
insl
push
xchg
inc
push
mov
mov
add
mov
repz
and
imul
mov
xor
mov
and
ss
incl
sarb
cmpsb
popa
xor
fiadds
lock
test
sti
xor
jp
xchg
and
mov
jmp
xor
xchg
les
rcrl
jg
jno
rep
addr16
or
ljmp
xor
aaa
mov
icebp
push
in
mov
popa
adc
add
pushl
jmp
loop
xor
pop
test
es
das
jno
testb
push
jmp
sbb
pop
iret
jns
add
outsl
incl
int3
fnstcw
loope
push
out
iret
loop
ja
pop
ds
stos
adc
or
leave
mov
call
cli
in
jmp
push
in
cs
dec
jbe
xchg
mov
dec
cltd
push
pop
gs
fldlg2
sub
mov
movsl
jle
mov
mov
scas
inc
outsb
fdivr
dec
popa
inc
xchg
adc
cmpsl
rol
lock
sub
cli
rol
scas
mov
cs
cltd
aad
pop
and
sar
pushl
adc
mov
int
push
adc
mov
adc
incl
jmp
incl
add
clc
outsb
imul
xchg
int
out
inc
cmp
sub
mov
cmp
shlb
aas
jmp
cmp
sub
lods
sub
incl
bound
mov
add
lcall
push
fisubs
into
mov
or
jle
jbe
mov
pop
je
inc
int
mov
movsl
ljmp
and
jp
sbb
mov
data16
in
sarl
jbe
decl
out
pop
pop
pop
xchg
cmp
cli
or
test
out
pop
inc
roll
in
in
mov
clc
decb
mov
mov
imul
add
sub
mov
aam
mov
cmp
sbb
rcll
adc
and
pushf
aas
cmp
sub
sub
decl
insb
adcl
cli
lret
sub
fists
or
mov
je
and
cmp
ret
repnz
loop
dec
sbb
stos
lret
mov
je
sbb
push
stc
arpl
jbe
les
mov
push
ret
aam
mov
rcrb
cmp
decl
insl
jl
mov
cmp
sbb
mov
lcall
jg
int3
mov
sahf
sbb
pop
inc
clc
xor
std
aas
push
loopne
jp
xchg
mov
jnp
insl
or
adc
inc
add
lret
dec
loope
inc
push
sbb
pop
scas
call
push
fucomp
mov
xor
cld
adc
adc
mov
ret
scas
push
cmp
leave
jno
in
pop
loope
cmp
test
lods
add
pop
lods
add
call
loop
fcmove
xor
decl
push
pop
daa
scas
adc
sub
sub
daa
sti
addr16
sahf
mov
dec
arpl
jns
nop
and
mov
jmp
in
fcoms
repnz
lret
loop
xchg
adc
into
push
xchg
lods
cltd
inc
jne
and
mov
jmp
insb
cli
cltd
xchg
rcrl
inc
push
or
stos
fnsetpm(287
push
movsb
in
xchg
out
mov
ljmp
dec
in
pop
out
xchg
std
test
loope
hlt
sub
outsl
stos
jnp
into
test
mov
sub
sub
cmpsl
sti
inc
inc
test
mov
fmull
adc
loope
insl
mov
push
xchg
xor
call
mov
sbb
adc
fdivrp
jle
outsl
sub
push
int
pop
xchg
dec
das
fs
or
lods
mov
rcrl
decl
or
lock
inc
stos
dec
repnz
lret
lods
mov
jmp
inc
push
inc
decl
inc
or
nop
loope
jbe
mov
pop
cld
scas
adc
pop
add
push
decl
push
cs
cwtl
jns
push
lret
ljmp
lahf
cli
jle
dec
adc
pushl
xchg
and
xor
ja
mov
sub
xor
add
or
lcall
or
mov
xchg
outsl
jp
jno
sbb
sarl
fxch
cli
and
inc
pop
mov
jl
push
mov
mov
pop
pop
sub
enter
xchg
loope
call
add
dec
add
adc
shll
das
pop
dec
mov
mov
idivb
xlat
popf
cmpsl
jae
dec
vminss
in
sbb
inc
fidivrs
add
sub
cmp
lods
andps
jns
or
jmp
in
mov
aad
push
mov
jnp
push
nop
jge
sahf
dec
jbe
jge
repnz
decl
mov
cmpsb
jle
mov
or
lcall
xchg
and
mov
ljmp
outsb
shll
xchg
xor
ret
xor
pop
push
in
mov
jnp
cmp
mov
loope
mov
xchg
cmp
insb
out
enter
mov
add
andb
pop
nop
mov
jmp
add
inc
rolb
mov
sarl
or
mov
mov
push
call
stos
into
data16
dec
cwtl
aam
mov
jl
in
in
and
test
cltd
sub
loop
loop
or
scas
negl
mov
ds
ret
in
lea
sti
or
or
repz
push
es
and
loop
fimull
sub
les
xorl
jle
dec
dec
into
push
push
scas
sub
or
pushl
bswap
jno
mov
xchg
cmp
btr
fldl
push
outsb
sbbb
jmp
orb
push
dec
pop
add
mov
cltd
jp
loope
lea
pushl
fbld
pop
lods
jmp
fwait
out
inc
mov
fsubrs
mov
popf
pushf
fdivr
cmpsl
incl
add
int
xchg
mov
jb
data16
pop
stc
pop
sbb
test
jle
gs
jb
ret
push
jnp
jns
imull
jl
push
sbb
adc
sub
push
loope
jp
arpl
cmpb
xchg
xor
or
xchg
outsb
jmp
mov
push
ret
incl
inc
inc
cld
mov
dec
adc
inc
arpl
jmp
jmp
push
jmp
incl
int3
jle
cmp
mov
mov
pop
inc
aas
loop
in
call
push
sub
stos
cwtl
daa
mov
mov
push
scas
jp
dec
mov
push
and
push
dec
call
test
jne
adc
loope
sub
rcrb
jb
pushf
adc
cmpsl
decl
icebp
js
call
and
push
dec
mov
or
pushf
nop
dec
sbb
inc
fucom
sub
call
fildl
fstpt
dec
cmp
sub
icebp
cmp
subb
div
aas
cmp
sar
fildl
addr16
mov
js
cs
sub
call
arpl
out
pop
aad
test
mov
pushf
sbb
imul
pushf
xchg
mov
sbbl
arpl
jmp
addr16
jl
or
lcall
icebp
aad
cmpsb
jae
outsl
mov
fstpl
ret
decl
mov
cs
xor
loope
fwait
testl
adcb
xchg
call
mov
mov
cmpsl
ffree
and
rclb
mov
loop
and
jle
xor
mov
jmp
dec
stos
aaa
shrl
lock
stc
adc
fwait
xlat
lret
mov
mov
pushl
mov
jnp
jne
mov
mov
stos
sahf
fcmove
inc
aas
mov
incb
inc
mov
and
cmpb
ret
sub
adc
call
fimuls
push
cltd
cmc
fadds
in
xor
or
xor
adc
adc
dec
or
stos
sub
adc
aas
xor
out
pop
adc
xor
add
lea
sbb
fmuls
lods
fs
fldt
add
mov
cmpsl
sbb
mov
cmpsl
or
shl
call
addw
xchg
push
push
push
lahf
cmp
jge
jl
loopne
jb
out
out
inc
xchg
mov
jmp
std
sbb
pop
mov
push
popa
adc
mov
gs
fstpt
cmp
out
loope
push
enter
fs
push
xchg
mov
jmp
pop
test
inc
dec
push
jmp
sbb
push
adc
cmp
gs
pop
push
inc
jl
test
pop
insl
fcompl
decl
sbb
mov
loopne,pn
subl
jae
xchg
movl
and
mov
sbb
testb
jmp
mov
subl
add
pop
sbb
dec
inc
lods
pop
rolb
sbb
push
cld
in
dec
push
cli
ljmp
add
and
push
inc
fistpll
movsl
data16
push
add
dec
and
sub
lcall
cmpsl
cmp
xchg
pusha
xchg
push
test
outsl
mov
xor
or
jb
ljmp
push
lret
push
dec
mov
icebp
outsb
xchg
enter
mov
dec
push
ss
movsb
xorb
push
and
sub
mov
or
jg
sub
xchg
test
or
jmp
arpl
stos
jb
xchg
sub
push
lock
sbb
or
jmp
pusha
int
xor
mov
add
rcrl
jge
push
or
fsts
xchg
imulb
pushl
jge
or
aam
pushf
in
lret
jl
shlb
out
add
incl
into
mov
clc
enter
mov
sub
mov
jns
fsubrs
jae
ljmp
sbb
xchg
fistpl
cltd
inc
mov
inc
cltd
sti
mov
dec
sti
mov
call
push
xor
cs
ret
imul
dec
mov
cld
and
ds
mov
and
xchg
pop
sbb
pop
adc
add
dec
cli
mov
push
push
loop
push
fistpll
cwtl
pop
jnp
jae
cmp
push
push
jae
xlat
adcb
pushf
aad
lods
decl
add
cmp
fisubs
out
rorb
jl
adc
decl
inc
mov
int3
cltd
arpl
fwait
retw
repnz
mov
pop
xchg
or
mov
cmovnp
and
jmp
jne
adcb
adc
out
xor
fnstsw
out
lcall
jg
ja
decl
jbe
lcall
out
jae
hlt
outsl
add
stos
or
mov
ret
xchg
dec
cmp
scas
mov
fistpl
xchg
xor
dec
nop
jg
push
or
xor
popa
cmp
dec
mov
adc
push
and
lea
dec
jecxz
cmc
cltd
inc
cmp
sbb
add
ljmp
xchg
sbb
loopne
cmp
and
inc
jle
cwtl
dec
test
sahf
icebp
push
in
push
dec
cmpsb
mov
and
cmp
call
mov
or
add
push
xor
add
int
in
cmpsb
rcrl
ja
mov
int
cmpsl
imul
es
rorb
cmp
outsb
movl
int
arpl
pop
inc
adc
push
outsl
icebp
push
mov
ss
xor
sub
incl
ret
jne
jne
jo
or
ja
mov
push
lcall
lods
call
pop
push
shrb
lahf
sbb
jmp
insb
cmp
cltd
je
aas
jmp
loope
aam
jo
jg
add
fildl
fcomi
sub
call
test
pop
fwait
mov
xor
fxch
dec
sbb
mov
pop
addr16
dec
scas
and
call
aad
pusha
fisttpll
push
int3
cs
pusha
push
and
xchg
je
inc
mov
cmp
decl
nop
jg
jp
dec
movsl
jns
pslld
imul
fs
add
sti
jmp
cmpl
and
sbb
inc
mov
ret
cld
and
and
das
add
incl
cmc
ret
sbb
pushf
bound
lret
cmp
in
in
cmp
mov
loopne
faddl
ljmp
mov
fistps
ds
ljmp
repz
into
fimuls
or
mov
adc
sbb
std
scas
or
mov
enter
decl
in
in
repz
pusha
mov
dec
cltd
pop
bound
pusha
cmp
mov
mov
mul
or
push
into
cmp
sub
push
adc
fisubl
and
jbe
lds
ljmp
mov
sti
mov
jecxz
lret
sahf
roll
sbb
andps
pop
aaa
icebp
idivb
jno
lcall
dec
push
clc
cmp
pusha
and
cli
sub
xchg
mov
cmpsb
or
fcoml
dec
pop
cli
jo
ret
lcall
out
pop
push
stc
pop
stos
mov
fistpll
inc
mov
in
sub
jmp
mov
mov
iret
mov
repnz
in
in
add
sti
out
ss
jg
cld
mov
or
test
aaa
jnp
adcb
sub
lcall
in
mov
test
dec
cmpsl
push
mov
and
imull
inc
and
inc
call
inc
fistl
je
loop
or
fldcw
dec
mov
jg
fisttpll
dec
cltd
mov
stc
mov
dec
jecxz
addr16
repnz
dec
or
leave
jb
test
pushl
push
dec
push
xchg
lods
fistps
rolb
jne
xor
imul
lret
shrb
push
in
xchg
cmp
mov
adc
jnp
mov
mov
xchg
mov
inc
jns
pop
push
pop
or
pop
inc
jmp
dec
cli
cmc
adc
pop
adc
mov
icebp
and
inc
out
cmc
popf
fistl
pop
mov
mov
jmp
mov
push
jg
xchg
hlt
xchg
xchg
into
or
adc
mov
out
aas
mov
cmp
es
popa
mov
clc
push
inc
or
movsb
xchg
mov
mov
incl
enter
pushf
jge
out
fadds
movsb
mov
cmpsb
mov
test
sbb
out
or
inc
pop
daa
clc
or
cmpb
adc
shlb
cmp
and
pushl
mov
push
popf
add
scas
ficompl
bound
inc
cmp
push
lods
fs
decl
stos
pop
push
leave
stos
xor
pop
pop
aaa
add
jge
jne
aas
sub
insb
lret
decl
loopne
sbbl
es
push
jae
sub
andb
jecxz
out
hlt
fsub
inc
scas
test
sbb
outsb
xchg
loop
bound
or
add
call
cmpl
jbe
pop
jl
fisubrl
mov
sbb
lcall
arpl
clc
jae
cmp
cltd
inc
lahf
mov
mov
xorb
jmp
fmul
outsl
add
movsl
pop
loope
adc
jg
mov
std
cmc
push
pop
cli
js
mov
pop
fs
jg
ja
xor
aaa
ljmp
xchg
inc
icebp
and
enterw
lcall
adc
aaa
aam
cmp
jp
arpl
enter
mov
mov
lock
jmp
sub
jne
fwait
data16
jp
push
rol
ja
cmpsl
push
pushl
cmp
shll
inc
es
sti
ja
jecxz
xor
xor
outsb
adc
decl
pop
mov
dec
ss
adc
jb
mov
scas
inc
lock
lret
shufps
stc
cs
decl
addr16
mov
or
repz
adc
repz
mov
ss
inc
mov
jne
fcoml
push
jl
lret
sub
shlb
imul
ljmp
stos
push
bound
and
dec
xchg
sub
lock
mov
mov
mov
jmp
jl
ljmp
cmp
sbb
push
inc
sub
je
push
in
mov
xor
pushl
addr16
mov
sbb
sbb
out
not
enter
and
pop
outsb
aaa
jmp
pusha
jb
dec
lret
sti
in
ret
clc
sarb
movsb
enter
adcl
pop
jl
bound
incl
pop
das
cmp
cltd
lret
jns
les
and
pop
in
pushf
and
cmp
inc
mov
cmp
mov
mov
popa
push
lds
cmp
icebp
mov
lcall
jo
mov
sbb
dec
sub
stos
adc
or
out
and
popf
inc
jns
mov
js
mov
xchg
dec
pop
pop
out
repz
jmp
movsb
fcompl
cmp
and
gs
ljmp
test
dec
imul
aam
xchg
push
rcll
pop
xor
pushf
rol
cmp
ud0
call
in
add
aas
xchg
fwait
punpcklwd
in
push
or
inc
sti
adc
stos
adc
xchg
ljmp
sub
jb
js
shll
mov
out
test
loope
iret
scas
mov
mov
insb
scas
cmc
jb
adc
add
mov
and
test
and
in
ljmp
das
fildl
scas
leave
fsubl
pop
cmp
popf
push
add
lock
xchg
add
notl
call
cwtl
fdiv
mov
pushf
adc
mulb
mov
rclb
popa
cmc
lea
adc
mov
popf
aas
mov
jmp
inc
es
fistpl
inc
fimuls
push
je
pushl
shl
xchg
nop
in
ret
jne
pop
or
sbb
mov
xor
push
scas
and
jmp
sub
movsl
adc
sbb
bound
jl
dec
jnp
hlt
les
sar
lcall
mov
jp
xor
ds
and
ret
mov
mov
mul
sbb
jne
decl
nopl
lcall
cltd
pop
mov
fidivrs
sbb
xor
repz
sbb
pop
add
dec
sub
xchg
sbb
push
adcb
cmpsl
push
into
xor
jmp
xchg
mov
xchg
popa
sbb
sbb
add
adc
push
inc
and
push
xchg
icebp
ljmp
cli
fs
lods
mov
cmp
cli
fmull
pop
fsubr
and
push
xchg
push
xchg
out
fld
movl
inc
inc
or
add
mov
gs
jg
out
cmc
fldt
ljmp
push
call
jae
stos
dec
jno
mov
nop
mov
arpl
ljmp
je
adc
lods
es
push
jp
pop
jl
xchg
or
addb
out
mov
cmp
pop
mov
push
pop
clc
or
cwtl
repnz
inc
push
jbe
scas
mov
mov
inc
es
jmp
mov
pop
sub
mov
in
mov
xor
scas
mov
dec
adc
pusha
out
pop
or
gs
dec
xor
insl
sub
or
std
add
mov
int3
jno
out
std
sub
xor
jp
jb
frstor
xchg
ror
push
fs
ss
cs
movsl
xchg
mov
popf
cmp
mov
push
test
mov
jp
xlat
add
ss
lods
pop
std
ficoml
sbb
mov
adc
xor
fnstenv
inc
rcll
aas
mov
out
psrlw
ljmp
flds
mov
cmp
ds
in
jecxz
dec
lar
jle
mov
add
cmp
mov
lret
mov
fists
dec
dec
xlat
popf
mov
fdivrp
xchg
lock
ljmp
shr
test
data16
sarb
bound
mov
in
xor
ljmp
cmpsb
xchg
xchg
adc
jo
imul
in
imul
mov
cmp
lcall
in
cltd
mov
or
xlat
dec
stos
xor
xchg
pop
mov
or
xchg
sub
mov
jmp
cmpsl
in
leave
xor
push
xchg
cmp
xchg
xor
pop
fnstsw
pop
mov
jbe
jbe
add
mov
incl
push
out
mov
xor
jo
cmp
push
sub
adc
cmc
fistl
lcall
mov
iret
movsl
stc
loopne
lds
xor
and
mov
popa
aad
sbbb
and
mov
inc
idivl
pop
sbb
je
sub
sbb
and
cmc
rcrb
loope
push
icebp
mov
add
cmc
adc
std
sub
scas
out
and
jg
jmp
daa
dec
imul
inc
gs
pusha
sub
fdiv
bound
decl
scas
adc
lahf
xor
push
pop
and
arpl
pop
mov
jg
mov
enter
call
test
loope
aas
das
test
dec
push
pop
stc
push
jb
inc
addr16
mov
jg
lahf
lea
incl
xor
daa
lret
and
xchg
outsb
addl
rcll
enter
call
mov
and
pop
xor
mov
ret
sti
dec
in
sub
add
mov
jp
cmp
aas
pop
adc
mov
sub
repz
loop
xor
fistpll
xlat
into
mov
out
decl
out
call
scas
mov
and
sbb
push
jmp
dec
mov
decl
lods
cwtl
or
stc
xlat
mov
cmp
into
jns
dec
pusha
inc
lahf
mov
adc
clc
negl
pushl
and
rcl
popa
hlt
out
jmp
mov
ficoms
or
push
leave
cmp
mov
mov
fstpt
and
data16
aaa
adc
push
push
add
lods
fstpl
sbb
call
loop
ja
xchg
jmp
fstps
outsl
sub
and
jge
adc
andb
jmp
cld
jecxz
pusha
adc
lods
enter
and
push
adc
lahf
xchg
mov
mov
fcomps
fs
iret
rorb
adc
push
clc
push
stos
sbb
adc
add
and
lcall
jno
lods
std
sub
push
icebp
and
xchg
jle
loopne
adc
jmp
incl
sbb
mov
cmc
inc
add
pop
and
ds
and
or
cmp
adc
pushf
in
pop
stc
and
sbb
mov
aaa
aas
movsb
mov
fildl
pushl
and
dec
bound
cmp
and
inc
sub
lcall
shlb
push
xor
xchg
dec
imul
ljmp
adcb
sahf
fistpl
stc
int3
pop
jmp
rcll
lds
dec
lods
push
adc
jp
test
push
dec
daa
mov
cmp
dec
xchg
pusha
sti
push
leave
mov
enter
mov
decl
es
ret
jbe
daa
adc
stos
dec
popf
dec
mov
sbb
mov
cmp
fldcw
ficoml
ficomps
and
cmc
xchg
loope
pop
cmp
inc
sbb
sahf
xchg
pop
mov
ret
inc
test
or
dec
movsl
inc
aaa
fldt
lret
out
call
jp
data16
xlat
add
jb
push
cmc
rclb
mov
incl
xor
mov
popa
mov
cltd
sahf
ljmp
adc
rolb
sbbb
decl
or
adc
mov
out
es
ja
dec
or
xor
cs
ret
test
flds
pop
in
les
push
mov
sub
into
sbb
push
into
test
xor
data16
in
inc
outsl
in
aad
cld
out
adc
in
ja
jne
sub
cmp
out
pop
outsl
adc
insl
popw
mov
sub
mov
loopne
jae
ret
jmp
mov
out
push
mov
push
popf
call
dec
sti
out
pop
test
movl
incl
xchg
fsubr
lcall
hlt
xor
mov
adc
push
mov
fdivrs
incl
fdivrs
cmp
flds
mov
mov
icebp
test
add
cmpsl
imul
push
scas
jb
in
in
cmpsl
jmp
in
push
add
dec
xorb
mov
gs
and
jle
xor
xor
pop
dec
adc
pop
imulb
pop
dec
cwtl
xchg
dec
sub
ljmp
outsb
nop
xor
mov
in
xor
inc
stc
dec
add
mov
push
shrl
jmp
lock
les
rcrl
push
sub
mov
sbb
ja
jge
orl
sti
mov
xor
pushl
mov
mov
mov
xor
mov
pop
or
jle
lcall
push
fsubrl
push
outsl
sbb
add
mov
pop
adc
adc
mov
add
decl
shl
cmp
ljmp
mov
and
or
cltd
push
cltd
int3
add
loope
fcoms
mov
add
or
pop
call
jb
enter
xor
fcmovb
arpl
or
add
pop
adc
jbe
stos
mov
mov
mov
decl
mov
loop
xchg
outsb
sbb
jnp
fdiv
aam
dec
fistpll
and
stc
pop
lret
inc
aas
scas
xchg
xor
adc
cwtl
jns
xchg
repz
push
sub
sbbb
decl
push
or
scas
jne
mov
jle
bound
pop
or
xchg
shl
pop
jmp
sbb
sarb
cmp
push
xorl
mov
ret
xchg
scas
repz
lret
jmp
sub
and
in
dec
and
and
sbb
xchg
lcall
aaa
lahf
push
xor
ljmp
jbe
out
popf
jecxz
push
add
in
or
jp
test
nop
jecxz
sub
test
movsl
jmp
repz
and
xchg
pop
arpl
xchg
lock
push
dec
jg
xchg
push
mov
ljmp
decl
fstl
andl
enter
add
push
rorb
leave
loopne
loope
jns
sahf
ds
mov
cmp
and
mov
mov
jge
xor
test
pop
mov
shl
jmp
movsl
pop
mov
stos
ret
mov
cs
loopne
pop
jno
mov
popa
test
cld
cmp
pop
cmp
out
inc
mov
mov
in
test
xor
call
mov
lahf
jg
leave
jmp
mov
push
mov
and
push
mov
xor
pushl
pop
mov
bound
pop
fucom
shll
out
pop
push
call
leave
dec
insb
iret
adcl
lds
mov
andl
lcall
pop
inc
bnd
pop
sbb
ret
out
add
cmpl
jne
add
xchg
mov
sbb
lcall
outsb
nop
pop
and
push
jbe
cmpb
push
jnp
lods
lcall
scas
pop
jns
gs
ljmp
ljmp
pop
add
mov
mov
jmp
mov
xchg
es
incl
imul
xchg
inc
push
adc
and
leave
and
jbe
xor
pushl
ret
xor
dec
cwtl
enter
popf
inc
movsb
jb
mov
mov
incl
mov
cwtl
js
mov
cmp
mov
push
or
call
mov
lcall
pop
aam
jl
mov
outsl
mov
inc
jl
cmp
movsb
pop
add
lea
decl
xlat
sti
and
daa
cs
sub
jns
rclb
jl
stc
pusha
int3
incl
dec
or
out
cwtl
int
mov
movsl
push
push
or
stos
inc
test
jbe
in
call
popa
sub
lret
mov
ret
push
sbb
mov
loop
loopne
pop
push
scas
push
adc
lcall
pop
outsb
add
sbb
cwtl
fists
hlt
es
das
jne
xor
push
in
mov
and
repz
clc
xor
jecxz
xchg
or
repnz
js
jl
add
sbbb
cltd
jae
jmp
mov
insb
xchg
push
push
in
shlb
push
mov
pop
popa
clc
into
negl
out
sub
call
imul
xor
iret
ss
ficompl
lahf
mov
mov
add
push
into
mov
sahf
jmp
or
cmp
and
jmp
leave
int
add
push
gs
incl
aaa
mov
mov
repnz
fwait
pop
cmp
dec
repz
push
push
js
js
test
lret
fs
clc
pop
add
adc
mov
dec
lock
dec
push
bound
sub
inc
adc
mov
call
sbb
pushf
jp
xchg
cmp
out
test
stos
out
xchg
cwtl
shll
jae
call
stos
in
cld
cmpsb
pushf
shll
pop
inc
or
and
sti
xor
xchg
dec
pop
dec
push
adc
add
incl
sub
ret
mov
test
lcall
jne
call
mov
int
mov
sahf
ljmp
lock
lret
neg
std
mov
jecxz
inc
inc
and
sbb
loop
gs
filds
jmp
adc
mov
scas
imul
hlt
sbb
push
dec
fisubs
add
jp
adc
in
jecxz
xchg
js
or
xchg
jns
inc
fs
fmull
fiaddl
sub
sti
push
in
decl
addr16
mov
shll
fmull
add
mov
andl
stc
cmp
jne
fstps
mov
mov
and
mov
xchg
mov
pushf
pop
adc
incl
mov
scas
sub
adc
jle
jns
imul
xorl
lcall
nop
mov
xchg
das
mov
push
mov
decb
mov
fiaddl
shll
mov
in
inc
stc
das
into
fwait
sbb
add
fidivl
mov
and
and
idiv
incl
and
push
fisubs
cmp
dec
popa
mov
mov
nop
rcrl
xor
rcrl
cltd
fsubrl
xchg
mov
outsl
pop
xor
arpl
inc
xchg
fwait
cmpsl
stos
shr
cmc
sub
lods
fnstsw
mov
repnz
dec
fsts
in
test
xor
fmull
adcl
xchg
bound
push
xchg
test
test
into
js
cld
cmp
and
fcompl
xrelease
ljmp
push
stc
movsl
mov
jmp
xor
push
mov
add
xchg
dec
je
aas
adc
or
ret
jg
sub
decb
rclb
inc
or
xor
in
jge
pop
je
pop
jnp
jno
into
jb
mov
pop
mov
dec
incl
mov
cmpsw
add
dec
xchg
or
adc
xchg
int
or
dec
jno
and
sti
jne
jl
scas
outsb
mov
mov
out
jecxz
fucomip
lret
int
push
das
adc
add
loop
mov
sbb
cs
call
shll
inc
mov
dec
dec
imul
aas
jbe
icebp
fnstenvs
decl
lds
outsb
adc
jne
and
cmp
inc
bound
repz
jmp
sbb
dec
lahf
jecxz
imul
andb
cmp
jns
pop
adcl
shrl
xchg
or
mov
in
fildl
inc
imul
sbb
roll
inc
inc
ret
repz
clc
dec
jnp
push
rcr
push
ror
mov
pop
mov
in
and
mov
lcall
mov
jmp
nop
jle
xlat
or
and
cmp
mov
lret
loopne
pop
icebp
xor
mov
push
dec
push
jl
push
adc
leave
nop
mov
aas
shr
pop
insb
mov
lret
and
cmp
arpl
push
pop
jae
call
imul
pop
fs
mov
sti
leave
or
xor
mov
sti
dec
ja
push
data16
mov
ret
cmp
arpl
pop
nop
faddl
mov
pushl
addr16
push
add
bound
test
sar
sub
or
lods
mov
pushl
or
jno
fnsave
jbe
mov
pop
ja
jbe
aas
jmp
add
sub
sub
xchg
cwtl
subb
cmc
xchg
test
decl
mov
imul
insb
pop
fldcw
jns
andb
and
popa
bound
mov
jnp
mov
shrl
lea
das
pop
cmp
mov
lds
decl
std
cmp
nop
stos
leave
in
jecxz
dec
dec
ds
scas
or
pop
lea
sbb
shlb
dec
inc
and
int
cmp
add
lahf
lea
xlat
les
sbb
adc
decl
imulb
iret
in
lds
push
mov
mov
and
fsubs
lcall
fistpl
decl
imulb
lret
shll
cmp
jecxz
aam
xchg
xor
mov
cwtl
lret
pushf
fistpl
and
and
pop
popf
out
or
cmpsl
ret
out
insb
mov
jle
pusha
std
jno
mov
loope
dec
imul
fs
movsb
add
xlat
pushf
aad
ljmp
out
mov
pushl
add
lods
dec
arpl
js
push
in
mov
daa
test
cmp
js
dec
fs
adc
call
test
mov
imul
call
inc
lcall
lahf
jmp
mov
mov
or
jae
lret
mov
mov
mov
out
sti
call
lahf
and
subb
or
lds
fnstsw
xchg
mov
loopne
pushl
mov
iret
lods
stos
mov
adc
data16
popa
cli
inc
lret
pushl
and
dec
lods
shlb
das
int
mov
mov
xchg
pop
xchg
push
das
cld
dec
cli
fisubl
adc
pop
jmp
lea
fcoml
ljmp
outsb
sbbb
roll
push
idivb
inc
sbb
push
cld
in
mov
mov
jmp
outsl
incl
aas
fcmovne
loopne
lea
inc
iret
outsl
push
test
inc
shr
aas
pop
lcall
fisttpll
jae
repz
int3
scas
mov
xor
jge
cli
dec
jle
jne
xlat
mov
fcomps
repz
int3
arpl
jo
dec
cs
ljmp
rorl
rorl
jmp
fimuls
out
out
scas
arpl
pop
movb
jb
std
jb
and
jbe
in
repz
pushl
out
cmpl
cmp
mov
xchg
inc
adc
mov
fcmovb
push
inc
lret
je
pushl
or
inc
shr
fs
sub
xor
mov
out
cmp
sub
popf
or
lcall
sahf
fisubrl
ror
test
ret
add
imul
mov
imul
push
xchg
call
popf
sbb
xchg
inc
cld
ljmp
dec
dec
in
push
dec
and
jg
in
jb
call
mov
and
inc
jg
fdivs
or
and
hlt
sar
cmp
mov
cmp
xor
xchg
in
xor
jne
testb
testb
loope
call
mov
or
push
popf
aam
adc
aaa
mov
jbe
jno
ss
aaa
test
loop
lahf
jo
jmp
out
mov
call
mov
aam
pop
hlt
shld
ljmp
dec
xor
xchg
fsubr
bnd
or
mov
cmp
sub
call
in
dec
mov
xor
js
xor
fstp
dec
addr16
mov
orl
decl
add
aas
testl
cmp
jmp
andl
out
inc
fsubs
adc
pop
pop
mov
mov
aad
xor
xchg
rcl
jno
ljmp
cmp
xchg
arpl
sarl
lds
ss
jmp
adc
pushl
lock
pushf
cmp
pop
sub
xchg
adc
xor
mov
or
lcall
dec
loop
add
jl
cmp
mov
leave
insb
mov
dec
mov
mov
push
clc
xor
movsb
gs
mov
dec
pushf
in
ror
ja
add
lcall
lea
fs
lds
shlb
xlat
addr16
les
jmp
adc
push
mull
lcall
mov
inc
scas
in
xchg
fimuls
lahf
adc
subl
ljmp
in
mov
add
xor
repz
inc
mov
or
cwtl
fdivrl
in
call
push
daa
inc
xchg
out
push
jp
lahf
inc
and
andb
dec
stos
jl
jb
adcl
jmp
inc
xchg
cmpsl
das
fsubl
xchg
xchg
cmp
jbe
pop
or
push
sub
lcall
arpl
xchg
add
cmpsb
xor
sbb
bound
pop
fdivr
jmp
test
cs
inc
or
loope
jle
push
xchg
mov
hlt
mov
sbb
aas
pushl
xchg
lds
sub
inc
adc
mov
jle
pop
int3
sub
adc
mov
sbb
loopne
icebp
dec
inc
test
sbb
les
ljmp
add
push
jle
mov
fidivrl
xor
jb
into
xchg
test
decl
cmp
mov
cmp
aas
jae
rolb
lcall
jle
enter
dec
jmp
sbb
cmpsl
adc
stos
scas
mov
inc
jae
inc
outsl
pop
pop
sar
ficoml
sbb
nop
callw
cmpsl
inc
ror
or
test
xchg
mov
jae
mov
gs
incl
fsubp
fucomip
fisubrl
jmp
xor
pusha
pop
adc
jge
lcall
jnp
sbb
subb
pop
xor
xlat
and
leave
pushf
in
xchg
shlb
push
jmp
xor
jmp
inc
out
xor
inc
and
daa
xor
sahf
test
test
push
xlat
jmp
jl
imul
sbb
insl
out
or
mov
bound
add
sar
lcall
or
jo
sar
ret
into
jg
sub
pop
call
dec
nop
iret
mov
pushl
lret
dec
cmp
pop
sub
in
lret
add
insb
pop
inc
dec
arpl
shll
and
aas
test
jge
lea
inc
inc
and
xor
ljmp
gs
call
mov
dec
dec
fsubrp
pop
dec
xchg
dec
mov
push
fcmovnbe
mov
add
dec
cmp
lcall
mov
jbe
jo
jne
loop
nop
cmp
rorl
int3
bound
ljmp
icebp
mov
icebp
call
add
outsl
mull
push
push
test
pushl
xchg
inc
add
outsl
cmp
push
stos
push
and
cwtl
or
mov
mov
dec
rcrl
sti
sub
incl
push
mov
lahf
sub
pop
std
pop
sbb
or
incl
cmc
cmp
lock
orb
add
incl
pop
fsts
pop
xor
adc
jb
and
jmp
push
imul
decl
cmp
clc
mov
inc
inc
xchg
leave
push
stos
fs
cmp
sbb
sub
mov
popf
adc
dec
arpl
dec
outsl
inc
lods
sub
mov
jmp
push
adc
xchg
inc
out
cltd
scas
mov
js
adc
xor
push
cltd
ja
and
decl
pop
popa
push
js
popa
sub
mov
rcrl
mov
lcall
js
cmp
add
divl
push
lods
mov
add
inc
dec
mov
ljmp
ljmp
fdivs
mov
loope
scas
inc
roll
xchg
jmp
mov
mov
lcall
verw
cltd
bound
inc
dec
fldenv
or
dec
test
sbb
jmp
dec
xchg
ret
and
and
mov
fwait
leave
pop
arpl
mov
cld
mov
jae
sub
loopne
aam
decl
lock
jl
mov
leave
push
popa
mov
pushf
int3
sahf
push
mov
sti
rolb
iret
jmp
gs
mov
aam
scas
mov
jae
sbb
arpl
adc
hlt
mov
call
into
outsl
mov
aas
and
xchg
and
inc
ret
int
subl
add
call
or
push
daa
pop
pop
mov
mov
mov
femms
in
add
mov
and
mov
pop
mulb
mov
adcl
push
sub
jne
jg
jo
adcl
ljmp
fst
sbb
push
push
cmp
sub
cmpsb
scas
adc
push
push
cmp
pushl
movsl
inc
add
mov
scas
xchg
inc
dec
fisubs
sbb
inc
xor
stos
call
mov
jl
notl
iret
das
push
and
dec
lcall
popf
jnp
std
pop
add
ljmp
xor
xchg
gs
push
pop
sbb
and
jnp
in
fisttpll
xchg
std
adc
lods
push
mov
ficomps
inc
jecxz
adc
ss
sbb
fisubrs
pop
lahf
popf
lcall
lock
test
inc
sbb
rolb
movsb
jbe
push
movsl
stos
sub
lret
sub
xchg
inc
out
or
jbe
stc
pop
test
add
popf
jae
inc
std
push
je
xor
testb
cmp
mov
push
lds
sub
jl
mov
sub
push
sub
jmp
gs
mov
pop
push
test
push
sbb
sbb
inc
pusha
add
lcall
jns
rcrl
test
mov
jl
jbe
repnz
xchg
and
jmp
cmpsl
mov
push
or
push
xor
or
mov
xor
sub
dec
push
mov
scas
lcall
adcl
jns
insb
rcr
mov
add
push
dec
ss
addr16
jno
inc
lret
test
imul
mov
dec
inc
enter
dec
test
lcall
mov
dec
mov
aad
jns
lock
test
clc
cli
sbb
ficompl
loopne
mov
mov
and
loope
mov
es
cmp
xor
pushl
mov
test
mov
cld
jae
or
inc
mov
movsb
sar
call
pop
cli
aaa
mov
mov
pop
addl
sub
insb
ds
dec
push
jmp
aad
push
inc
sar
jl
je
std
cmp
idivb
out
fadds
and
jmp
push
jbe
push
push
jae
out
mov
cld
adc
cmc
std
dec
enter
out
jmp
movq
gs
test
and
es
xorb
xor
xor
out
iret
stos
sahf
mov
jns
jmp
ret
and
or
jns
adc
xlat
cmp
inc
push
in
sub
cmpsb
outsl
mov
dec
xchg
push
fstl
inc
fwait
cltd
int
push
movl
negb
scas
ret
jb
push
mov
iret
push
fisubrl
les
call
add
sbb
adc
and
nop
adc
jns
repz
pushl
xchg
icebp
and
mov
lret
mov
xlat
lret
loopne
lds
flds
decl
jge
lcall
cmp
push
pop
and
cltd
and
inc
mov
pushl
jno
pop
push
jl
test
pusha
not
loopne
cmp
testl
mov
lds
jb
xor
pop
mov
adc
adc
cmc
mov
adc
push
loopne
arpl
test
decb
inc
jecxz
sarb
movsb
add
pusha
arpl
fistpll
incl
jb
inc
lret
jle
sbbl
adc
inc
xlat
cltd
and
repnz
fs
repz
fnstenv
sbb
shl
jne
out
mov
stc
je
aaa
cltd
in
push
je
call
lcall
out
mov
shll
jp
fstpl
inc
fdiv
add
int
cmp
int3
aas
mov
cmp
jmp
pop
dec
adc
je
mov
mov
xor
and
into
mov
ljmp
and
test
adc
push
daa
or
jno
mov
jge
xor
xor
ljmp
rorb
out
xor
sbb
cwtl
in
or
xorb
adc
mov
pop
or
rcrl
aad
sbb
mov
dec
inc
es
test
mov
testb
mov
mov
std
ret
arpl
scas
pop
subl
jmp
cld
dec
stos
lods
jp
lods
insl
inc
wbinvd
sar
nop
adc
push
pop
arpl
decl
jns
inc
pop
in
inc
mov
loop
fisubrl
xor
mul
test
jg
call
mov
or
lret
out
dec
pop
mov
mov
jmp
in
dec
sbb
repnz
mov
mov
pop
sub
jle
add
mov
or
push
ss
packssdw
pop
ss
jne
call
out
adc
sbb
inc
jb
lods
je
pop
xchg
cld
sub
dec
mov
dec
push
les
mov
jne
test
sbb
popa
addr16
mov
sub
mov
jmp
movsl
dec
fcompl
loopne
ja
rorl
movl
cmp
xor
mov
enter
mov
dec
and
and
and
push
xor
inc
ret
insb
dec
push
sbb
loop
push
in
imul
lcall
lea
mov
addr16
decl
add
jnp
and
xchg
outsl
add
push
test
pushf
rcr
push
cmpsl
lcall
icebp
mov
lods
inc
mov
jns
mov
insb
adc
inc
movsl
decl
out
jns
jmp
imul
imul
addr16
addl
mov
and
jbe
shll
jo
and
gs
outsl
imul
push
aas
out
cmpsb
inc
push
in
bound
sbb
inc
shl
cmpsb
push
xlat
pop
fdivs
xchg
andb
lcall
repz
dec
out
outsb
ljmp
adc
les
xchg
int3
mov
mov
dec
fnstenv
dec
in
lcall
jo
push
icebp
pushl
pop
xchg
in
pop
fldt
inc
inc
dec
clc
and
ja
aas
pushl
jmp
and
or
mov
ffree
inc
jnp
div
in
mov
dec
cli
or
fisubs
push
inc
push
fcmovbe
adc
loope
arpl
aaa
push
arpl
and
orb
lcall
out
push
decl
pop
xor
scas
sub
jle
push
sub
aas
jle
jge
jl
cwtl
xor
mov
xchg
scas
xor
add
ficompl
scas
pop
mov
cmp
aaa
sub
jae
lret
std
xlat
sahf
aas
sbb
and
pop
test
jmp
push
jmp
or
jecxz
cmp
rorb
or
pop
out
push
pop
push
addr16
jmp
ljmp
mov
ljmp
push
call
mov
mov
inc
idiv
pushl
test
xchg
pop
fwait
rcrl
or
adc
decl
jg
repnz
stos
pop
imul
lods
ljmp
xchg
jnp
xchg
in
cmpb
cld
call
inc
cmpsl
out
cmp
int
dec
movsb
ja
add
clc
jne
nop
xor
mov
jno
xor
lahf
sarl
leave
es
pop
pop
mov
hlt
and
xchg
ljmp
xchg
mov
arpl
sbb
xor
dec
xorb
inc
jb
mov
mov
lods
and
jmp
mov
lret
cmpsl
adcb
bound
into
mov
add
popf
das
push
ljmp
aam
leave
popf
jno
pop
pushf
dec
adc
jg
in
pop
xchg
adc
push
movsl
aad
xchg
mov
jmp
lcall
xchg
cmc
pushf
xchg
test
push
cmpl
cmp
mov
repnz
mov
loope
lcall
inc
pop
bound
mov
xchg
xlat
sbbb
mov
fstl
inc
xchg
inc
iret
xchg
int
xchg
cmp
rcrb
lock
nop
test
lea
pop
lret
jmp
arpl
xor
jns
fcmove
sbb
mov
push
scas
sbb
out
or
jne
call
mov
lcall
dec
pop
loope
ret
sarl
sbb
and
push
pushl
jne
fsubrl
xor
adc
mov
data16
ret
dec
out
and
addr16
call
or
push
dec
sub
out
pop
adcl
arpl
in
pop
mov
add
fwait
outsl
mov
mov
push
sbb
insb
xchg
push
jo
cmp
enter
cmc
xchg
ds
loop
mov
lods
pop
jecxz
jns
xchg
test
aas
sbb
out
shlb
dec
loop
xor
mov
ret
jmp
movsl
and
out
ss
les
adc
fcomi
mov
sbb
fcmovnbe
mov
in
sub
dec
sahf
mov
mov
xor
sahf
push
stos
inc
int
cs
jns
push
push
mov
dec
subb
mov
xchg
movsb
inc
insl
inc
cmp
sti
cmp
incl
add
addr16
add
loope
fcompl
clc
inc
and
and
fidivrl
inc
stc
test
nop
and
xor
insb
cmc
leave
cmp
push
xorl
sbb
jnp
aad
decl
int3
adc
loope
insl
iret
mov
sub
adc
mov
push
mov
cmp
mov
es
add
stc
mov
mov
mov
mov
bnd
jae
mov
lea
decl
sti
cli
jns
sbb
fucomip
fimull
es
lods
mov
test
into
jg
sarb
ljmp
or
scas
mov
in
sub
aaa
pop
adc
and
inc
mov
jmp
cmp
aad
jp
cmp
flds
imul
popf
and
inc
adc
call
dec
rorb
subl
fs
push
push
mov
or
cmp
and
inc
std
enter
mov
mov
lock
inc
outsb
insb
lret
sbb
outsl
icebp
mov
push
xchg
pushl
test
stos
popf
mov
es
xor
add
stc
lods
jne
lret
cmp
cld
mov
js
inc
stos
pushl
mov
pushf
inc
adc
dec
hlt
mov
pop
add
call
repz
mov
xor
or
fidivs
mov
inc
shl
std
lcall
out
repnz
mov
lods
adc
cld
pop
adc
sub
sti
aas
pop
outsb
js
push
push
lahf
movsl
jne
call
adc
push
pusha
in
push
lahf
out
or
ljmp
push
popf
xor
dec
pop
xchg
ljmp
mov
lcall
mov
loope
inc
popf
inc
rol
inc
jg
xor
xchg
orl
nop
add
call
jmp
sbb
sahf
mov
arpl
rcr
clc
int3
xchg
lahf
inc
push
xor
jmp
int3
test
loopne
fistpl
sub
sbb
mov
xor
mov
push
fisubrs
inc
sbb
or
adc
popf
mov
jo
jmp
pushf
dec
xor
call
mov
clc
cmp
leave
xor
push
and
loopne
xchg
mov
sub
xchg
jmp
call
pop
cmpsl
and
nop
fstpt
mov
es
mov
fldenv
fstpl
mov
pushl
or
pop
ss
mov
test
cmp
xor
insl
aad
call
roll
xor
in
sub
mov
js
test
mov
jno
cmp
mov
pusha
jle
in
inc
incb
adc
pop
testl
cmpsl
jmp
enter
xor
dec
inc
or
adc
clc
jns
out
mov
jmp
push
mov
leave
hlt
inc
cmp
jmp
xor
fs
shlb
arpl
jge
loopne
mov
cmp
cmp
mov
and
add
out
scas
ljmp
cmp
sbb
imul
sbb
jb
jmp
jg
ss
inc
mov
xchg
mov
call
test
mov
repnz
jmp
cltd
test
cmpl
neg
and
test
mov
add
pop
cld
sbb
test
sbb
incl
cmp
mov
movsl
pop
or
add
or
pushf
sbb
add
jnp
fldenv
pop
int3
sbb
pop
leave
or
aas
lcall
les
sahf
test
mov
xor
jmp
jno
cmp
sub
and
popa
inc
push
pop
jns
cmp
jne
test
in
out
xchg
es
jmp
and
in
jl
lea
in
clc
pop
addr16
jp
popf
adc
sub
mov
jno
int3
xor
call
rorl
repz
mov
mov
inc
xchg
int3
cmp
push
mov
xor
repz
data16
rclb
add
pop
daa
mov
ja
lcall
leave
incl
je
fcmove
mov
or
push
cmp
std
jg
lds
dec
mov
sub
mov
lods
faddl
imul
mov
call
dec
xchg
rorl
cli
fcoms
sahf
mov
xor
outsl
pop
outsb
insl
xchg
movsl
xchg
adc
jmp
test
cmp
bound
jl
shrb
push
mov
testl
fisttps
cmp
hlt
add
loop
or
fs
xchg
outsl
sahf
and
pushf
mov
ljmp
and
mov
xlat
xlat
mov
jle
mov
in
ficoml
dec
sti
push
test
pushl
add
sbbl
js
push
lret
subl
pop
adc
and
jg
stos
in
or
ds
mov
inc
sbb
es
fistpl
aam
push
xlat
cs
jmp
push
rcr
push
insb
lcall
andl
push
stc
movsl
jbe
fisubrs
in
cmpsl
inc
jle
decl
xor
fxtract
aam
push
xchg
fdivrs
hlt
mov
cli
je
fwait
into
leave
sub
jge
jle
lret
pop
lahf
mov
sub
in
jae
and
std
mov
in
roll
mov
in
aaa
xchg
and
add
or
shl
in
pop
dec
jmp
inc
cmc
xor
jno
jmp
mov
mov
cmpsb
aam
pop
cli
push
adcb
pop
js
xchg
jmp
jg
inc
inc
stos
sub
aaa
pop
repnz
pop
mov
lret
inc
inc
out
dec
roll
mov
in
push
test
xor
das
mov
fsubrl
sub
mov
pop
test
decl
push
scas
push
mov
or
mov
xchg
xchg
xor
sbb
ja
lret
ljmp
inc
push
cmpsb
pop
lret
dec
hlt
pushf
int
mov
cltd
mov
cltd
dec
scas
mov
ljmp
dec
sub
out
dec
mov
leave
inc
and
add
pop
xchg
push
call
cmp
mov
pop
in
pusha
ja
mov
scas
cmp
mov
ljmp
push
pop
lock
data16
jle
adcb
fwait
shl
sub
mov
jg
push
jge
cmp
das
shlb
mov
lock
ret
fwait
orb
jecxz
mov
lcall
sub
fnstsw
jae
cli
mov
outsb
out
sti
filds
adc
ss
movsb
js
fsts
dec
mov
inc
mov
repnz
push
jmp
jl
in
in
pop
and
mov
jnp
shll
lods
xchg
mov
ljmp
sub
iret
sbbb
pop
pop
xor
mov
mov
sub
data16
decl
inc
and
dec
mov
lea
add
ret
inc
add
call
lret
rorb
xlat
mov
stc
mov
call
popa
push
xchg
pop
dec
add
incl
ret
dec
movsb
pop
sahf
pushf
mov
je
add
pop
inc
iret
jg
ljmp
xor
jmp
ret
xor
pop
mov
orl
pushf
cmpsb
cwtl
xor
lret
mov
adc
push
pushl
pusha
jmp
int3
ret
and
rcrl
popa
or
cmpsl
sbb
lock
jb
cmp
das
movsl
pop
in
call
int3
ss
dec
xor
in
jp
addr16
mov
test
out
dec
sahf
sbb
call
sbb
pop
sbb
fwait
xchg
daa
add
out
jg
add
or
sbb
bound
sbb
cmp
sub
cmp
inc
dec
xchg
leave
test
inc
jnp
dec
sub
xchg
sub
and
sbb
pop
stos
mov
ja
cmpsb
cli
mov
jl
push
sub
pop
and
in
fs
jle
push
sti
je
enter
sub
mov
insb
fistpll
xchg
and
scas
icebp
and
mov
lods
sub
push
cmp
lcall
sub
clc
imul
mov
pop
es
repnz
push
mov
jnp
and
faddp
outsl
lcall
and
mov
scas
stos
pushl
out
imul
sbb
adc
push
or
jle
push
xchg
js
sbb
and
dec
jmp
shll
or
mov
test
movsl
inc
out
fcos
jg
out
shlb
adc
scas
and
cmp
lret
sub
call
dec
into
jnp
push
iret
push
dec
or
repnz
push
mov
mov
jno
jno
xchg
into
into
movsl
cmp
data16
ja
push
gs
leave
ret
add
test
inc
add
sarb
fsubrp
andl
test
leave
xchg
mov
imul
shrb
lock
incl
in
mov
adc
cli
mov
xchg
pcmpeqd
lahf
mov
incl
insl
mov
fs
push
sub
mov
sub
xchg
divb
sbb
sub
cmp
xchg
scas
mov
in
nop
jb
cmp
or
repnz
les
rcrl
outsb
in
add
incl
mov
ret
loope
movsl
sti
inc
pusha
mov
jne
dec
inc
dec
mov
cmpsb
out
inc
aas
mov
aad
out
shl
pusha
gs
scas
rorl
add
push
cs
lea
nop
psadbw
mov
sar
decl
jne
or
gs
loop
repnz
imul
aam
inc
addb
push
divl
mov
sbb
pop
jae
sarl
in
xchg
int
push
aas
push
sbb
call
push
je
cmp
mov
dec
xor
mov
movsb
push
test
mov
call
mov
stos
outsl
popa
roll
xor
test
and
int
sub
xchg
clc
sub
xor
pushl
pusha
xchg
in
outsl
sbb
and
paddusw
jae
mov
lcall
pushl
push
xor
inc
and
movsl
jecxz
popf
xchg
test
pop
in
jnp
xchg
jbe
incl
push
fcmovne
pop
xlat
xchg
shrl
adc
daa
sbb
hlt
div
add
fldt
aaa
xchg
iret
out
rcll
mov
fwait
in
sbb
jne
adc
in
stos
push
lcall
adc
repz
xor
aad
das
jge
pop
into
sbb
sub
dec
jmp
sbb
jmp
mov
sub
shlb
cmp
shrl
insb
lcall
movsb
push
clc
jmp
inc
jno
aaa
push
cmp
lea
push
mov
scas
mov
call
stc
mov
inc
test
jmp
gs
jl
rcll
incl
lods
sbb
push
jmp
jae
sti
addr16
dec
ljmp
stos
je
loopne
mov
lahf
push
ror
jp
mov
xchg
cmp
inc
sbb
jmp
shrl
mov
add
mov
in
mov
cli
cmp
inc
inc
pushl
xchg
mov
pop
cltd
icebp
imul
call
push
sahf
inc
ss
mov
lcall
int
cmp
cmp
out
imull
sub
xchg
in
pushl
fdivrs
mov
xchg
push
cltd
jp
pop
shll
fists
and
jmp
enter
cmc
pop
cmpsl
fldl
lret
jg
insl
jo
mov
scas
shlb
iret
outsl
mov
call
mov
std
dec
cli
sbb
jno
sbb
xchg
lods
push
push
push
enter
incl
testl
imull
iret
dec
mov
and
cmp
lret
xor
pushl
ret
mov
sbb
add
pop
xchg
fisttps
loopne
mov
stos
adc
sub
xor
ljmp
fistl
fldl
into
call
aas
mov
xor
pop
and
call
cmc
insl
outsb
das
dec
arpl
adc
ds
test
es
fsubs
sti
in
mov
and
adc
or
push
cmp
mov
jo
lock
lahf
adc
lock
cwtl
popa
jmp
stos
mulb
insb
loopne
push
daa
rorb
dec
dec
ret
inc
push
leave
mov
leave
enter
call
aad
jae
or
aam
stos
fstl
aam
jge
xchg
daa
mulb
popa
inc
shlb
test
lock
cs
out
scas
xlat
or
pop
xchg
mov
sbb
lahf
add
jmp
inc
jo
xor
sbb
cmp
add
inc
imul
js
sahf
sub
dec
lds
cmp
aas
icebp
cmp
jbe
or
mov
hlt
and
push
push
jg
inc
repz
ljmp
xchg
mov
xchg
dec
ret
adc
cli
inc
xor
test
mov
in
mov
idiv
movsb
lcall
jl
or
jbe
add
adc
nop
mov
lods
jl
aas
insb
aas
stos
xor
pop
repnz
fs
push
les
out
pop
mov
sahf
dec
stc
push
or
popf
ljmp
mov
mov
sub
cld
push
outsl
stos
lods
jne
andl
arpl
pushl
repnz
loop
mov
push
push
test
cmpsb
jns
cmc
dec
inc
xor
cmp
bound
xchg
sbb
add
pushf
pop
int3
xor
clc
testb
aad
stos
and
mov
jmp
ret
sbb
fwait
xor
pop
rorl
mov
and
pop
mov
pop
dec
repnz
decl
jae
hlt
and
push
les
leave
sbb
add
jge
dec
sar
mov
aaa
and
dec
mov
ficomps
in
xchg
mov
pop
sub
lret
popf
and
incl
pop
sbb
js
cwtl
scas
add
scas
jb
les
xchg
and
cmp
cmpsb
aaa
ljmp
mov
mov
data16
mov
or
mov
mov
mov
lods
lcall
lods
dec
or
inc
push
and
and
lds
int
das
mov
inc
dec
mov
imul
cmp
fisubl
outsl
cmp
inc
fcoms
xchg
cwtl
loop
cltd
pop
dec
and
idiv
stos
cmp
mov
pop
sahf
or
add
jmp
xor
xchg
sarl
repz
push
sahf
lds
add
mov
test
subb
dec
push
xchg
lock
decl
add
mov
mov
repz
and
test
movsl
inc
cltd
xor
scas
ss
add
pushl
rclb
movsb
ljmp
nop
pop
sbb
dec
sub
push
sub
lret
scas
call
sbb
aas
fsubrl
daa
sbb
in
cmpsl
ljmp
call
pop
popf
push
test
sub
xchg
call
fs
mov
add
call
lds
lds
sub
cmp
mov
pop
lret
dec
mov
ss
test
mov
inc
notb
cmpsb
inc
leave
sub
hlt
and
insl
out
and
add
lcall
cs
ljmp
jo
inc
mov
pop
aaa
adc
pop
repnz
cmpsl
pop
loope
mov
jb
pop
mov
lea
idivl
push
shrb
arpl
jle
mull
pushl
int3
push
mov
mov
hlt
mov
jmp
xchg
movsl
jp
mov
push
fbstp
jmp
loopne
sti
inc
arpl
or
mov
insl
nop
stos
pop
lea
stos
adc
clc
push
push
call
adc
cmpsb
pop
xor
stos
inc
push
inc
in
adc
fcoms
cmp
test
decl
jl
or
inc
mov
mov
int
ds
sub
pusha
push
xor
lea
inc
decl
lock
jb
repnz
enter
test
data16
add
jg
lret
pop
aaa
test
jne
mov
dec
movsb
sbb
cmpsl
jl
cmpb
add
push
sub
inc
mov
loop
dec
fs
aaa
mov
jp
imul
lds
cld
mov
and
decl
test
cli
jo
test
in
jl
ljmp
mov
xchg
inc
ljmp
rorb
mov
xchg
jb
cmp
or
ret
ljmp
lcall
call
mov
fwait
push
push
dec
mov
mov
push
push
lock
loope
roll
ds
jge
mov
jmp
cli
vmovdqu
popl
negl
mov
imul
mov
mov
out
jnp
leave
push
pushl
mov
cmpsl
xor
in
and
sbb
rclb
inc
fidivs
mov
incl
pop
das
movsb
push
movsl
pop
jne
jle
fnstenv
add
inc
add
pop
cmp
aad
push
push
sbb
cmp
xor
fstpt
and
xchg
test
in
gs
mov
cmc
fwait
mov
stos
scas
lcall
std
pop
icebp
repz
fdiv
pop
dec
ja
jns
test
xor
inc
in
jmp
push
ret
cs
dec
and
loop
test
jno
or
bound
decl
xchg
sub
or
mov
sub
adc
decl
pop
fcmovu
jo
shl
fistl
repz
inc
lcall
fsubs
push
jl
insl
insb
js
fisubl
scas
cmp
mov
movl
jl
cmc
mulb
xor
pop
inc
outsb
jp
mov
sub
pop
test
fcmovu
loope
dec
fmuls
pmaddwd
inc
pop
push
inc
imul
mov
lcall
mov
inc
xchg
add
sbb
fldenv
andl
and
scas
jle
dec
je
fs
test
dec
roll
jecxz
dec
add
xor
int
sbb
call
outsl
xor
push
or
mov
sbb
andb
and
push
inc
mov
idiv
jmp
ds
dec
subb
xchg
fisubrs
sub
cmp
xchg
jae
xchg
xchg
jo
ljmp
fildl
xchg
xchg
mov
cmp
and
aaa
fldcw
in
add
js
sar
std
jmp
int
in
add
inc
and
stos
inc
and
daa
lret
idivb
ds
decl
jmp
ret
sub
iret
xor
ds
inc
mov
aam
roll
mov
push
ds
cmp
adc
insl
loope
mov
hlt
cltd
in
jno
jmp
jnp
and
mov
push
std
js
inc
cmp
cmp
ret
push
ret
jmp
arpl
jmp
scas
sti
sarl
and
rcrl
dec
int3
daa
ljmp
push
cmp
arpl
mov
jmp
jge
mov
jns
jns
ror
mov
sbb
rcl
mov
mov
lcall
enter
lock
push
dec
ror
push
or
or
xchg
add
sbb
mov
push
mov
rol
add
sub
add
push
adc
call
pop
out
incl
inc
int
jbe
xchg
sub
inc
in
dec
xchg
cmpsl
sub
pop
add
cmp
push
inc
incl
fsubp
mov
das
pushl
jnp
popa
adc
jb
pop
ljmp
fistl
popf
dec
dec
dec
xor
mov
aad
in
lods
push
xlat
dec
jg
add
jbe
sub
decl
push
pop
xlat
ret
adcl
roll
sbb
jp
push
push
lcall
cmp
dec
lret
adc
pop
mov
mov
dec
adc
sub
sti
pop
scas
cmp
sbbl
pop
pop
cs
psubb
pop
cli
mov
jecxz
mov
test
in
aam
push
sbb
call
addr16
xchg
mov
mov
add
push
or
dec
decl
xchg
pop
aaa
insl
or
arpl
ret
cmp
jp
and
or
gs
dec
andnps
dec
mov
mov
mov
inc
adc
or
aas
addb
add
cmp
scas
aaa
icebp
jae
fimuls
xor
adc
or
ss
cwtl
mov
or
call
dec
jg
inc
aad
pusha
shrb
mov
sbb
xchg
mov
push
sbbb
decl
cld
rcrb
adc
pop
lods
inc
andb
sub
push
xor
push
test
or
mov
arpl
lock
shrl
xchg
in
sbb
in
lea
push
addr16
lcall
addl
push
jp
or
test
sub
push
jns
addr16
in
lods
pop
pop
cmp
or
jnp
sub
lock
dec
inc
dec
mov
in
ja
inc
sbb
lcall
setle
jmp
xchg
push
xchg
and
stos
vfmsub231ps
lods
sbbl
cmp
sub
jmp
and
lret
sbb
adc
or
rcr
enter
mov
push
jl
push
ljmp
inc
and
adc
xchg
popl
cli
cmp
inc
push
xchg
inc
test
sarb
cmp
stos
sbb
out
sbb
dec
xchg
jo
and
cmp
cld
std
incl
cs
fimull
sbb
mov
fcomi
rcll
loopne
scas
or
ljmp
ds
lahf
xchg
loopne
cltd
mov
inc
pop
push
mov
and
je
aas
push
lds
lcall
ffree
mov
les
std
sbb
add
sbb
inc
popa
adc
mov
sub
std
fisubrl
lcall
shlb
call
insl
loop
pop
xchg
jnp
rclb
sub
fbld
repnz
or
jl
jl
add
push
sar
dec
jge
adcl
sti
pusha
das
cmp
cmp
incl
pop
lret
cmp
adc
out
movzwl
xchg
ret
sub
daa
cs
cmp
lcall
cmp
mov
sub
or
leave
inc
sti
xor
sub
jmp
daa
out
sbb
push
jmp
es
jecxz
jl
mov
mov
aas
pop
dec
xor
mov
xor
decl
add
jecxz
mov
or
add
ja
nop
pushf
cmp
mov
call
jbe
inc
cmpsb
add
insb
out
sbb
int
lods
inc
mov
xchg
ja
ret
pushl
lcall
sbb
test
loop
push
stos
jp
in
iret
js
jns
jmp
fnstenv
lahf
dec
scas
push
xor
jno
cmp
mov
push
adc
pushl
push
dec
shlb
jge
pop
loop
jne
push
cmp
loope
pop
push
xchg
filds
stos
xor
mov
pop
dec
fldl
mov
xor
call
addr16
aas
xor
ljmp
or
dec
je
test
lcall
fcoml
pop
ds
push
leave
jp
mulb
and
jne
dec
jecxz
mov
sub
dec
or
jmp
inc
in
inc
sbb
jecxz
jge
leave
push
mov
into
mov
je
mov
xlat
fldt
lcall
dec
fcmovu
shrl
test
ret
push
fdivl
cmpsl
cli
mov
inc
mov
cmp
add
out
subl
dec
cmp
lea
jo
jl
pushf
out
jge
pushl
pop
std
stos
dec
xchg
lock
add
dec
xor
mov
sub
inc
leave
jne
jmp
xor
push
push
mov
jne
cmpsb
aad
cltd
sbb
sbb
pop
pop
mov
push
push
or
mov
test
scas
insb
aad
and
int3
and
lret
push
add
insl
ljmp
push
movsl
or
adc
hlt
or
and
mov
cs
sub
fsubr
sub
mov
rorl
std
xchg
rol
addb
jnp
nop
cmp
out
call
call
push
and
jno
add
fldcw
div
pop
aaa
jo
push
and
xor
imul
call
sbb
sahf
cmp
cmpsb
clc
add
fidivs
hlt
cli
dec
test
clc
sub
pushl
nop
mov
les
lea
stos
orl
and
and
icebp
lret
jmp
jecxz
je
test
cs
fisubs
xor
scas
dec
ret
loopne
stos
scas
jns
jmp
xchg
mov
lcall
les
push
test
loop
imul
lcall
adc
adc
or
shlb
insl
rorb
dec
jb
fwait
push
test
hlt
xor
add
orl
push
in
or
aam
pop
dec
mov
and
incl
leave
sbb
cld
add
out
pop
xchg
jle
pop
jns
mov
outsb
lcall
push
adc
rcrl
cld
mov
in
inc
inc
xchg
mov
mov
sbb
das
in
scas
sar
incl
mov
fwait
insl
mov
inc
dec
lret
jmp
rcrl
adc
call
arpl
add
inc
es
mov
insl
push
jp
pop
sub
in
fs
test
rorl
lods
pop
les
mov
xrelease
dec
push
lods
not
outsl
repnz
ljmp
push
add
push
loop
scas
fwait
mov
fsts
aam
scas
sub
push
and
cmp
jle
idiv
cld
int
sbb
pop
mov
lds
mov
out
sub
add
jl
nop
inc
pop
cmp
decl
loope
mov
jno
mov
cltd
add
jb
mov
sbb
xlat
movsl
repnz
pushl
xchg
xchg
verr
push
sub
sbb
insb
inc
in
xchg
jmp
loopne
ljmp
lcall
cmpsb
jo
cs
mov
mov
pop
push
jg
pop
push
popf
mov
incl
pop
aad
enter
rcr
pop
js
xor
test
adc
add
cmp
lret
decl
out
js
xor
mov
out
les
mov
dec
add
aaa
mov
cmp
cmp
andw
int
pop
stc
js
stos
aaa
sub
lock
roll
mov
inc
insl
pop
or
jb
pushf
and
pop
pop
in
dec
cmpsl
push
pop
mov
pop
lcall
leave
ret
or
dec
call
jno
adc
cs
push
sub
sbb
inc
sar
mov
push
outsb
aas
xchg
adc
jo
push
aad
loop
aas
stos
pop
cmp
push
ret
push
sub
out
mov
cmp
stos
sbb
shlb
mov
psllq
ja
xchg
shlb
or
jmp
jnp
repnz
repnz
aas
stos
mov
xor
mov
dec
call
lds
adc
push
test
movsb
cmpb
cmpsl
cmpsl
cmp
cmc
or
call
xchg
push
mov
sub
fs
xor
inc
sbb
xor
lcall
aaa
es
cmpsb
dec
shlb
lcall
notl
arpl
in
dec
ljmp
cltd
pushl
cwtl
ret
dec
sarb
push
aas
nop
fnstsw
daa
sbb
clc
jecxz
out
popf
call
push
jmp
ds
mov
arpl
fdiv
js
scas
lea
mov
jmp
cmp
clc
fxch
in
fsubp
rclb
jmp
jl
sti
aad
int3
int
outsb
mov
pushl
jbe
mov
sbb
pop
cmp
sahf
xor
pop
jbe
ds
dec
jecxz
out
cs
xor
mov
outsl
addr16
adc
cltd
ds
mov
incl
mov
roll
out
fwait
or
orb
jmp
pusha
push
pop
sti
mov
jmp
in
mov
mov
mov
lahf
inc
aas
jg
adc
in
movsb
mov
cmpsl
cmp
incl
jge
fistps
pushf
xor
mov
jmp
jge
test
in
sub
adc
test
call
push
add
push
and
and
and
and
rcrl
add
adc
call
adc
xor
inc
sbb
sbb
es
ret
ss
clc
pop
sti
jne
inc
jle
ljmp
fiaddl
fldenv
cmp
add
fisttpl
gs
jl
shrl
hlt
call
ffreep
cmc
jns
inc
ffreep
sub
cmovge
aad
in
inc
jmp
mov
mov
jmp
fildll
test
push
pop
out
shll
lods
cmp
imulb
into
sahf
xor
cmp
popa
cld
adc
mov
pushf
mov
and
push
in
call
pop
mov
lcall
jp
outsl
inc
cmp
pop
jl
cld
mov
mov
and
decl
inc
mov
pop
dec
je
sarl
inc
cmp
in
jb
rorb
cmpsb
xchg
mov
mov
cld
sub
jno
jbe
and
push
iret
aaa
ss
mov
add
ljmp
mov
jne
scas
push
test
dec
pushf
stos
les
jno
fstpl
ljmp
leave
push
cmp
jns
xchg
cwtl
mov
mov
das
adc
dec
fcmovnu
add
sti
adc
insl
pop
mov
leave
testl
inc
in
jp
ja
mov
jp
cwtl
fmul
decl
test
jmp
mov
rcrl
mov
jnp
jbe
xor
fwait
ret
mov
les
insb
ret
stos
or
mov
scas
sub
jmp
pop
cli
dec
lahf
incl
pop
mov
lahf
push
arpl
mov
pop
mov
insb
lret
inc
mov
xchg
outsb
incl
or
jno
xchg
xorl
xlat
sbb
pop
add
and
insl
pusha
fmuls
aas
inc
mov
xchg
pop
adc
xor
lods
mov
adc
sbb
pop
inc
imul
push
push
cmpsb
fmuls
decl
inc
cmpsb
pop
ret
pop
cltd
add
inc
dec
loop
or
fstps
lcall
jnp
fisubrl
sbb
cmpb
gs
pop
xor
lock
sbb
jae
lods
add
jmp
mov
pushf
cmc
enter
stos
mov
ljmp
mov
fimull
call
jne,pn
jle
mov
push
stc
ret
fcmovnbe
cli
inc
lahf
add
sbbl
scas
out
push
loopne
inc
ret
test
jnp
inc
std
inc
pop
clc
cmc
insl
lret
dec
pop
insb
jns
cmp
push
fmulp
in
or
cwtl
push
fimuls
xchg
stos
fsubl
push
inc
inc
in
xchg
jb
ja
mov
popf
mov
mov
pushf
in
xor
imul
or
xchg
sub
and
adc
dec
lret
add
insl
dec
nop
outsl
popf
mov
push
sub
fnstcw
push
add
incl
jg
push
scas
mov
pop
loope
repnz
xchg
in
push
xor
lds
xchg
pop
jmp
push
js
xchg
cmp
fs
add
mov
mov
or
ret
jns
adc
decl
les
cs
push
fidivs
insl
pop
push
idiv
and
and
mov
fsts
dec
call
dec
pop
cmp
dec
or
aad
and
outsb
cmc
sti
pop
push
mov
dec
jno
pop
sbb
scas
jne
push
add
pop
pop
add
and
inc
pop
in
and
fxch
orb
fisttpl
pop
jbe
cmp
call
insl
cmpsb
data16
xchg
sbb
popl
jl
push
adc
notl
lcall
dec
sbbb
add
ds
shll
dec
cmpsl
outsb
xchg
xchg
jmp
in
inc
jmp
sub
xchg
mov
arpl
pop
jb
test
mov
ljmp
bound
out
mov
hlt
xor
in
outsl
fwait
ss
sti
dec
cmp
xor
popa
call
imul
ds
repnz
add
mov
ds
adc
je
lcall
fidivs
loope
out
pop
loope
push
fstpt
notl
scas
add
jge
cli
cmp
push
push
mov
sub
adc
jle
fs
rcrb
fs
js
pop
imul
call
fstps
aas
xchg
sbb
shll
aam
daa
int3
cmp
and
pop
add
adc
lcall
insb
dec
mov
adc
jmp
cmp
sahf
cmc
adc
incl
pop
pop
mov
xchg
dec
jp
mov
out
dec
push
jns
in
fbstp
push
jo
call
iret
out
stos
lret
fstpl
xor
add
lret
jg
dec
in
jo
mov
idivl
decl
lods
add
or
pop
pop
inc
ret
pop
in
test
ljmp
sbb
decl
outsl
mov
jl
dec
pop
sub
mov
inc
mov
loope
bound
ret
int3
or
inc
stos
ret
nop
xchg
and
mov
push
in
in
iret
leave
and
xchg
decl
fbld
pop
sbb
lahf
jg
dec
push
xlat
in
loop
pop
sub
xor
jbe
jo
arpl
in
jmp
aaa
add
fwait
xor
cmpsb
in
shrb
cmp
adc
or
sub
decl
rorb
fcomi
xchg
dec
add
mov
pusha
das
stos
out
sbb
or
mov
incl
insb
dec
mov
sub
mov
xchg
jl
or
leave
loopne
or
dec
out
int
decl
je
pushf
adc
ljmp
xor
jle
sub
rcl
cltd
insb
inc
pop
inc
xor
inc
lock
lret
ljmp
sub
mov
or
fstl
sub
pushf
loopne
mov
pop
pop
dec
sbb
mov
test
jns
pop
in
test
ret
pop
enter
cwtl
pop
inc
pop
ds
ljmp
cmp
dec
jle
push
mov
cltd
sub
movb
inc
mov
lahf
out
arpl
jmp
jl
push
mov
cmpsl
mov
push
jo
inc
pop
push
nop
jbe
ret
hlt
sbb
decl
repz
lds
ds
stc
push
fwait
data16
pop
iret
push
jns
pop
pop
iret
mov
mov
mov
fidivs
pop
int3
out
movsl
popl
test
loopne
jmp
mov
nop
cwtl
lret
inc
or
popf
das
mov
mov
std
jecxz
sbb
sbb
into
fcomps
les
stos
ja
test
scas
dec
xchg
mov
jnp
or
add
clc
push
pop
pop
nop
or
call
push
mov
loope
adc
dec
jno
mov
xor
call
ljmp
movsl
dec
or
cmpsl
mov
push
xor
das
xchg
pop
outsb
lds
or
fldt
ds
pop
jbe
data16
out
or
pop
hlt
adc
aam
mov
lret
add
in
inc
sti
test
imul
cli
jns
push
pop
loopne
jge
sti
in
mov
incl
mov
xchg
gs
and
lahf
iret
sub
and
jns
jge
rcrl
or
lcall
lcall
icebp
aaa
addb
push
aam
aam
mov
cli
loop
adc
enter
lcall
pusha
pusha
jbe
test
pop
pop
scas
cmp
js
push
adc
std
mov
sbb
mov
ret
pushl
sbb
or
sbb
icebp
nop
mov
sub
mov
or
test
jmp
pop
rolb
or
jbe
sbb
inc
mov
rcr
sti
sahf
adc
frstor
jmp
pop
push
sub
and
outsb
in
sub
movsb
push
mov
fidivs
sbb
inc
ja
call
lods
dec
mov
pop
dec
rcr
insl
insb
dec
hlt
inc
mov
iret
cmp
inc
pushf
data16
out
mov
ljmp
fs
push
push
faddl
loop
mov
ss
adc
movsb
sbb
inc
or
ret
outsl
arpl
ljmp
cmc
clc
insl
push
inc
adc
pop
ja
decl
pop
mov
leave
mov
sub
mov
cli
mov
sub
mov
inc
sbb
jno,pt
icebp
jle
xor
jns
pop
sbb
leave
xchg
xor
jns
lock
jne
jmp
pop
inc
test
into
xlat
repz
sub
insl
clc
sarl
push
ret
mov
fs
pushl
pop
jmp
mov
aaa
ret
mov
arpl
push
arpl
gs
je
lcall
dec
dec
push
sahf
push
push
inc
fst
xchg
dec
push
fwait
imul
jb
jne
ret
jp
decl
lahf
add
sbb
push
ja
mov
jl
add
iret
sbb
mov
sar
mov
cmpsb
cmp
test
or
dec
int
popf
pop
addr16
push
lods
hlt
rol
xor
in
mul
outsl
mov
inc
shrl
xor
mov
in
sbb
pushl
and
inc
cmc
arpl
test
clc
pop
inc
inc
ja
lods
aaa
sbb
stc
lods
mov
pusha
cmpsl
bound
jmp
pusha
test
test
leave
or
mov
adc
mov
push
add
mov
imul
xchg
pop
loope
repz
push
sbb
decl
dec
movsl
xchg
enter
push
scas
scas
inc
mov
cmp
lods
and
cs
add
repz
push
cmpb
and
out
jmp
lcall
imul
mov
lods
sbb
popf
mov
cs
lcall
lret
mov
bound
std
dec
addr16
fstpl
pusha
inc
out
and
pushf
xchg
mov
xlat
rol
sub
test
into
fsts
adc
js
test
loop
pop
inc
or
lret
stc
aas
xchg
dec
out
decl
dec
leave
sahf
lds
mov
push
add
sbb
pop
ret
jmp
mov
aas
push
stos
jl
mov
cmp
lcall
popa
mov
jmp
sub
jbe
je
loope
test
jecxz
push
mov
das
inc
pop
sbb
adc
inc
rorb
lcall
xlat
cltd
aam
daa
aas
fwait
in
in
ret
xor
sub
mov
inc
push
lods
sti
ja
call
inc
mov
cmpsl
mov
sbb
jp
cli
xchg
jecxz
dec
add
mov
js,pt
sar
pushl
pop
mov
pop
ds
mov
mov
mov
in
mov
pushl
arpl
inc
insb
pop
and
and
pop
mov
pop
push
std
jns
pop
call
bnd
add
scas
sti
repz
cmp
in
xlat
arpl
stc
movsb
ja
stos
pop
xchg
adc
lret
pop
sub
xchg
les
mov
jno
pop
fcoml
sub
jmp
sbb
shrb
xchg
sub
dec
dec
pusha
dec
mov
negb
xchg
push
out
jbe
mov
jl
leave
xchg
xor
push
sti
mov
cld
lret
cmp
mov
pop
faddp
decl
cmp
fcoms
pop
or
std
dec
mov
dec
testl
repnz
cmp
mov
cli
repz
ss
int3
xchg
add
test
hlt
mov
popa
mov
call
push
xor
lods
cltd
sbbl
loopne
dec
repz
fcoml
out
aaa
pop
inc
icebp
int3
pop
adc
call
and
decb
dec
adc
jae
mov
testl
mov
call
push
mov
add
jo
fcoml
lods
cmp
or
adcb
loope
ljmp
divb
testl
cmpsl
jl
lds
sahf
mov
sti
in
cmp
inc
in
rcrb
decl
dec
push
pushf
pop
xor
rcrb
dec
sbb
lret
add
or
pop
dec
cmp
ljmp
dec
dec
sbb
mov
pop
sub
and
jns
outsl
and
les
adc
pushf
add
insl
cmp
xchg
mov
xor
clc
inc
fdiv
mov
or
xchg
decl
inc
xchg
push
cwtl
adcl
dec
das
add
fwait
xlat
das
pop
lds
pop
insb
into
or
call
rorl
test
ds
cltd
lea
dec
mov
std
int3
sub
mov
adc
xchg
enter
pushl
lret
jg
jb
push
das
cmp
pop
loop
add
push
jge
mov
call
xor
inc
sub
addr16
test
adc
pop
in
out
enter
mov
mov
jmp
push
stc
xor
outsb
pushf
pushf
test
xchg
sub
stc
iret
shll
enter
sbb
ljmp
sahf
cmp
outsb
int3
aad
push
inc
push
dec
or
mov
stc
push
lret
lcall
and
lea
mov
sahf
jno
imull
fcompl
push
xor
shlb
subl
decl
add
fists
push
sbb
enter
xchg
js
pop
in
mov
mov
decl
into
xlat
push
push
sbb
cltd
inc
dec
enter
jae
cmp
xor
cmp
xor
sub
daa
adc
mov
mov
movsb
cmpl
adc
pop
add
filds
repnz
mov
sbbl
out
aas
xchg
ljmp
or
xchg
inc
mov
or
mov
jmp
jbe
and
scas
jmp
inc
fnsave
mov
and
dec
pushl
arpl
stos
add
fiadds
adc
inc
push
sbb
iret
pop
push
mov
adc
jmp
jecxz
dec
movsb
xor
shrl
or
pop
add
shl
push
adcb
inc
or
xor
jnp
incl
pavgw
in
cmp
mov
cmp
aad
loop
inc
sub
jnp
in
inc
decl
pop
xlat
dec
push
and
cs
icebp
mov
inc
jnp
js
test
and
call
jmp
daa
pushf
dec
pop
sbb
pop
arpl
sub
inc
movsl
loope
sti
jb
scas
cmp
push
lea
adc
add
push
sbb
xor
push
dec
lahf
jle
cmp
aas
xor
sbb
test
and
adc
cwtl
inc
repz
jge
mov
pop
xor
cmp
add
cli
sarb
out
push
aaa
je
add
push
xchg
lcall
in
outsl
out
push
dec
iret
inc
pop
out
rcrl
mov
xchg
test
int
in
inc
mov
xchg
stc
stc
and
movsl
jbe
rorl
js
sarl
addr16
sahf
lock
sub
jmp
std
jo
stc
in
dec
adc
js
cmc
movsl
shll
push
push
adc
push
inc
mov
pushl
dec
inc
es
jmp
enter
mov
adc
push
and
ljmp
mov
aam
mov
iret
das
mov
sti
sbb
cs
pop
bound
icebp
push
push
sbb
pop
jl
lcall
mov
dec
push
lods
mov
xchg
dec
cmp
test
add
stos
mov
enter
icebp
dec
pop
sbbl
jp
xor
xor
pop
cwtl
gs
rorl
jne
loopne
hlt
daa
insl
rorb
jmp
jae
add
fisubrl
decl
insb
repz
xchg
jmp
xchg
test
jl
popa
fbstp
or
fcomip
push
jl
jns
stc
jae
pushf
cmp
adc
dec
outsb
xor
fstpl
jmp
pop
or
rorl
xchg
call
outsb
mov
test
cmp
test
sbb
neg
dec
shr
stc
sub
icebp
inc
ljmp
push
mov
scas
xchg
gs
aaa
stos
fimuls
lods
repnz
call
inc
or
inc
les
test
test
sbb
mov
loopne
mov
decl
inc
sub
sub
loopne
lock
lock
fstl
call
inc
pop
adc
inc
mov
sub
inc
push
cmpb
mov
pop
xor
ret
or
repz
sub
outsl
mov
dec
pushf
fs
jns
mov
push
fistl
inc
jecxz
or
mov
js
in
rorb
cmp
fisubrl
cltd
fdiv
and
cmp
adc
sbb
xchg
arpl
lcall
movsl
push
adc
xor
scas
pop
dec
leave
mov
test
xor
dec
mov
mov
cmp
jmp
xchg
or
ret
xchg
or
cmp
fwait
jge
inc
ret
bnd
das
ss
pop
sbb
push
mov
push
test
adc
in
pushf
mov
hlt
mov
pop
cmp
jl
jmp
movsw
mov
rorl
addr16
sahf
ds
adc
std
scas
rcll
and
jmp
jbe
adc
xchg
mov
jb
popa
popa
adc
mov
sbb
sbb
ljmp
push
cmp
icebp
popa
je
mov
push
cmp
push
dec
js
xchg
jge
push
xor
jne
ss
insl
movsl
data16
push
xor
sub
incl
sub
loope
xchg
dec
xlat
pop
gs
cmp
xchg
popa
outsl
inc
pop
mov
xchg
insl
dec
and
jp
xlat
cmc
cmp
or
mov
xor
andb
add
pop
xor
lods
iret
pop
jle
test
ficomps
inc
cmp
xor
lods
dec
rorb
xchg
fisubrs
decl
mov
xchg
sbb
mov
aad
pop
lcall
stos
push
push
jecxz
jmp
stos
into
cld
scas
push
and
inc
sti
test
or
cltd
add
pop
in
lcall
std
sub
faddl
jno
mov
add
jbe
inc
sar
cltd
jmp
and
sub
int
in
mov
out
and
sbb
decl
outsl
je
shrb
imul
xabort
sub
mov
push
and
sub
incl
jo
jae
in
inc
pop
dec
lret
aad
repnz
frstor
inc
lret
cmp
arpl
call
or
rsm
mov
out
loop
enter
jb
sub
fisttpl
dec
int3
lret
call
daa
add
sti
scas
sub
push
repnz
pmaxub
scas
ljmp
jns
xchg
stos
cwtl
shll
loopne
push
xchg
jns
pop
push
andb
xchg
push
cmp
adc
inc
pop
pop
mov
jle
cmpsl
addr16
mov
xchg
lods
ret
hlt
adc
xchg
decl
xorb
lcall
aaa
loopne
add
jecxz
ja
ret
sub
xchg
jo
int
mov
pop
ret
pop
lods
iret
ret
out
cmp
incl
clc
pop
add
cltd
jmp
into
test
push
ljmp
xor
mov
daa
mov
out
pop
dec
and
outsl
es
call
addr16
and
popa
dec
mov
jl
adc
testl
and
xor
scas
adc
lods
imul
add
icebp
and
push
mov
pop
incl
pushl
test
mov
and
inc
xor
js
js
mov
mov
imul
jmp
mov
jle
fstps
xchg
jecxz
fstpt
push
imul
loop
jl
shr
dec
inc
cli
fwait
and
cmpb
mov
je
fs
aad
mov
icebp
pop
jl,pn
stos
sub
sti
sbb
imul
imul
xor
xchg
cmp
js
mov
lret
lods
popf
adc
popa
sti
add
mov
xor
inc
rorb
cmp
test
xchg
mov
cmp
fstpt
sbb
or
decl
jmp
mov
adc
cs
scas
and
jbe
out
outsl
jmp
mov
pushl
push
mov
popf
repnz
xchg
cwtl
and
mov
roll
inc
push
jmp
cmp
popf
add
inc
inc
lods
cmp
repnz
sbb
mov
sub
xor
jp
pushl
adc
fists
xor
pop
icebp
pinsrw
cli
jo
or
aad
call
inc
push
aas
arpl
or
xchg
test
pusha
mov
cmp
mov
enter
dec
pushl
inc
enter
mov
and
cmp
xchg
sbb
push
xor
sbb
dec
or
adc
fbld
aas
mov
mov
lahf
inc
sub
out
lcall
gs
hlt
je
pop
aaa
ret
mov
sbb
sbb
stos
lret
lock
roll
sub
xchg
ds
and
push
decl
test
fsubs
mov
adc
xchg
pop
fstps
xchg
stos
push
scas
sub
xchg
adc
cmpl
pushl
ror
xor
xchg
gs
cmpsb
push
jle
push
jo
push
jl
in
call
mov
sti
sbb
bound
mov
jne
adc
pushl
test
xor
andb
in
cmp
fwait
test
lret
popl
jmp
ret
cmp
xchg
xchg
xor
push
or
daa
push
jge
mov
call
das
scas
adc
push
sbb
pop
mov
jp
loop
call
rcll
call
lret
mov
fisubrs
mov
ret
xchg
and
push
adc
decl
out
pushf
lods
mov
xor
sbb
imul
nop
repz
ret
fs
jge
outsl
xchg
and
push
jnp
repnz
push
push
daa
scas
pop
sbbl
push
call
add
inc
adc
cmp
jae
fdivs
xchg
or
cmpsb
unpckhps
inc
lds
dec
dec
xchg
jmp
sub
shlb
std
or
stos
int3
mov
lds
lock
adc
popa
xor
int
ds
pop
lods
cmp
jno
icebp
test
push
inc
sub
and
test
ljmp
or
add
stos
int3
push
lret
push
xor
xchg
mov
sub
jmp
lret
cmp
add
mov
in
pop
lcall
push
inc
and
mov
ja
pushl
xchg
add
sub
fadd
clc
mov
popa
mov
jmp
mov
or
ret
and
les
aaa
ss
push
negl
popa
jnp
ret
cmp
js
testl
nop
mov
sub
dec
fwait
sbb
dec
test
call
es
mov
jns
and
mov
ja
ret
jecxz
push
imul
and
leave
add
and
ja
aam
mov
cmp
not
cmc
sub
push
push
mov
call
adc
das
xor
hlt
jmp
add
sahf
jecxz
mov
xchg
or
and
jmp
push
ss
inc
fcomps
jl
inc
mov
push
in
iret
mov
fldt
inc
xchg
mov
imul
dec
test
mov
iret
mov
push
loopne
or
dec
ja
call
inc
adc
push
out
cmpsb
std
imul
jecxz
xlat
xor
out
jl
sbb
jmp
push
sarl
lret
jo
lahf
jge
sbb
adc
sub
aad
xchg
jb
add
test
out
mov
dec
int
sbb
mov
sbb
push
stos
push
stos
mov
repnz
sar
incl
hlt
enter
mov
cltd
xchg
in
ljmp
sub
push
push
loopne
dec
test
lcall
nop
sti
fildll
and
dec
adc
xchg
ror
mov
jae
sub
rcll
sub
push
mov
cmp
push
xchg
push
stos
hlt
jbe
test
test
fcomps
sub
decl
out
push
lods
lods
fwait
mov
out
fiadds
add
xchg
imul
mov
jmp
dec
mov
imul
arpl
xchg
mov
cmp
stos
push
fdivr
call
call
cmp
jbe
hlt
stos
mov
jb
xchg
or
popa
sbb
pushl
push
or
in
sub
lcall
call
or
ds
call
imul
fdiv
ja
ljmp
pop
mov
xchg
ss
or
dec
sbbl
push
arpl
fwait
in
sub
mov
je
mov
out
ljmp
iret
mov
pop
out
sar
mov
aam
mov
std
jl
into
sbb
jo
outsb
fwait
vpsubusb
loopne
adc
adc
mov
popa
mov
repnz
lret
fsts
aad
jo
lahf
jg
jg
cmpb
push
test
jb
xor
mov
cmp
pushl
mov
inc
out
scas
cmp
insl
aaa
xor
aaa
mov
scas
or
mov
ljmp
loope
or
rcr
jle
aaa
xchg
sarl
or
sub
mov
test
nop
movsb
push
je
mov
add
xor
daa
sti
inc
push
cmp
ja
call
fs
xchg
aad
push
mov
add
pushf
pop
bound
add
out
adc
decl
dec
stc
xchg
imull
imul
das
pop
push
cwtl
xchg
and
inc
pop
movsb
inc
pop
add
sbb
jge
and
mov
mov
xchg
ret
or
pushl
pop
out
push
mov
push
jge
ret
jb
jno
imul
adc
adc
inc
mov
jge
lcall
mov
cli
xchg
pop
in
jno
rorb
xlat
pop
or
mov
mov
stos
in
stc
sub
clc
inc
shlb
xor
jne
pop
mov
decl
jmp
or
jnp
imul
out
cmpsb
ret
jo
mov
mov
daa
cmp
pushl
mov
pushf
mov
sbb
add
jle
ja
in
stos
rcrb
rorl
cmp
jg
xor
subl
rorb
out
xchg
incl
push
xor
mov
jmp
sbb
jns
adc
mov
xchg
outsb
lods
dec
popf
and
imul
jmp
aad
cmovae
and
stos
call
sbb
repz
mov
jmp
not
ror
lea
fbld
cmpb
iret
push
movsl
pop
out
jmp
sti
jp
je
sub
decl
dec
lock
inc
mov
orl
arpl
jp
push
jmp
mov
nop
mov
push
cmp
xchg
push
cmc
jo
out
icebp
and
insb
cmpsl
aam
es
mov
faddl
xchg
adc
adcl
push
or
lret
inc
mov
repnz
fisubl
lahf
mov
dec
push
mov
shll
add
push
or
pop
lock
ja
aaa
jle
mov
cwtl
subl
dec
jns
adcb
dec
jb
mov
sbb
ljmp
aaa
push
sub
cmp
pop
loope
pop
pop
cli
or
cmp
insl
testb
pusha
mov
push
stos
aam
call
add
jle
pop
rol
outsb
loope
stos
lcall
dec
aam
and
xchg
fistpll
push
jmp
leave
jge
loope
arpl
movsb
adc
jmp
adc
aas
inc
sti
scas
add
repz
mov
add
daa
arpl
mov
incl
xor
bound
xor
aas
push
ljmp
cmc
pop
popa
mov
cli
gs
pusha
nop
loop
ljmp
mov
cmovne
dec
cmpsb
sbb
and
pop
ss
iret
sub
xlat
out
mov
mov
ljmp
test
divb
enter
mov
dec
dec
or
mov
mov
push
and
lea
mov
je
push
adc
ljmp
addr16
or
outsb
pop
sub
jmp
ds
scas
xchg
jno
ficompl
jnp
mov
pop
inc
jne
add
cmp
rcr
inc
and
loop
cwtl
or
and
std
popa
add
or
ja
aaa
call
ljmp
imul
das
dec
addl
pop
imul
xchg
movsl
addl
and
lret
push
inc
xchg
in
and
jo
mov
cmc
cmp
popf
mov
in
cltd
push
push
and
subl
imul
cmpb
sub
in
push
xlat
out
jle
cli
repz
mov
xor
enter
pop
notl
or
icebp
data16
jmp
mov
lea
fistpll
stos
outsb
mov
icebp
test
mov
addr16
ljmp
stc
clc
mov
inc
cmp
jmp
dec
clc
or
shl
pop
call
cmp
aam
jp
jbe
movl
mov
cmovle
add
ljmp
jecxz
adc
fucom
push
push
xlat
addl
mov
adc
pop
call
pop
fcomp
subb
hlt
ja
mov
push
xchg
sbb
or
adc
and
decl
sbb
jecxz
cltd
pop
ret
pop
adc
movb
dec
jo
push
mov
cs
repnz
decl
call
mov
shrl
mov
adc
pop
mov
flds
leave
cmp
pushl
push
dec
enter
lock
xchg
imul
cmp
add
lea
sbb
xor
dec
gs
xchg
add
dec
je
fidivl
pop
ljmp
push
xor
push
sub
mov
cld
fsubrl
xchg
pop
cmc
in
mov
lcall
in
das
stos
loopne
aas
ljmp
out
mov
push
pop
ds
fidivrs
stos
mov
mov
fmuls
stc
daa
pushf
cmpsb
fnstsw
inc
push
or
mov
jle
scas
add
stos
daa
xor
in
imul
xchg
pushl
out
movsb
pop
or
mov
or
jecxz
xchg
mov
lods
pusha
iret
push
cmp
dec
xor
rorb
stc
sbb
pushf
add
mov
ret
mov
xorl
aaa
lret
int
mov
dec
sub
shll
mov
or
add
xor
push
add
cmp
mov
cmpb
pusha
add
pushl
add
xor
ss
sbb
xlat
sub
fstps
push
mov
pop
sbb
jmp
lahf
unpckhps
push
mov
or
mov
fnstcw
or
push
out
pop
mov
scas
cltd
dec
or
jbe
les
fcoml
scas
inc
test
xor
mov
incl
xchg
or
mov
cmp
out
push
movsb
repz
xchg
scas
xorb
lea
pushl
icebp
push
mov
js
fiadds
jecxz
sbb
pop
sub
icebp
stc
or
jle
xor
out
pusha
mov
lods
dec
ds
inc
dec
mov
test
add
scas
or
lret
pop
jle
pushl
xchg
inc
test
leave
and
rcll
dec
enter
imul
lcall
or
adc
sbb
lret
es
lahf
or
sahf
and
out
ljmp
cmpsb
pop
jle
lret
xor
rcl
stc
dec
scas
inc
jmp
stc
fadd
jae
pop
clc
clc
outsb
push
stc
call
and
dec
fs
lret
xlat
arpl
fldcw
jo
pop
push
ljmp
scas
lret
repz
xlat
into
cli
clc
loopne
mov
add
ret
mov
inc
arpl
lcall
sbb
fstpl
xlat
or
dec
push
test
push
inc
mov
jmp
sub
and
out
pop
mov
outsb
sahf
jns
xchg
cmp
mov
roll
cmp
inc
out
in
jno
pop
inc
sbb
daa
dec
inc
sub
cld
lods
outsl
mov
adc
stc
lcall
scas
jae
mov
nop
add
mov
jno
ljmp
leave
inc
adc
cwtl
push
xor
out
cmp
adc
ja
aaa
mov
inc
stc
jae
mov
xlat
add
out
scas
jecxz
jl
inc
decl
and
mov
jg
xchg
movl
mov
lods
sti
xchg
mov
dec
push
add
sar
cs
push
add
mov
pop
clc
ja
and
call
in
and
mov
push
lock
cs
mov
mov
aas
arpl
decl
testl
push
nop
in
pushf
jo
test
ja
cmpsl
mov
mov
or
jb
movsb
adcb
mov
mov
mov
hlt
pop
sbb
inc
add
rorb
sub
mov
lcall
dec
push
enter
pop
nop
int3
xor
icebp
addr16
ss
mov
out
or
jns
test
je
add
dec
push
dec
fsubl
arpl
dec
loopne
cmp
ljmp
push
mov
mov
pop
xor
movsl
or
je
insl
es
inc
test
xlat
xor
decl
pop
push
mov
nop
dec
into
pushf
push
or
or
dec
or
mov
sub
or
or
adc
pushl
push
clc
jge
cwtl
test
add
mov
add
notl
sub
int
xchg
call
aas
sub
adc
insb
lock
ljmp
jmp
loope
push
or
aas
jmp
mov
jecxz
push
daa
push
dec
inc
stos
cld
sahf
dec
dec
es
movsb
jbe
sbb
leave
outsb
and
pushl
call
pop
mov
pop
addl
test
jge
xchg
add
lcall
inc
sbb
or
mov
lea
jp
sub
push
pop
xchg
divl
fstl
decl
and
fwait
mov
outsl
movsb
rcll
andb
std
pop
or
lret
pop
cmp
jmp
cltd
or
stos
adc
les
add
jns
push
sbb
sbb
aad
stc
add
popa
cld
outsb
push
adcl
imul
push
arpl
adc
ss
leave
bound
mov
call
push
xchg
test
insl
lcall
mov
jbe
je
loope
fcoml
arpl
jmp
jno
or
sub
pop
dec
sub
dec
testl
push
xchg
lea
loop
ss
jae
cmp
out
call
test
lahf
push
ud0
ljmp
cltd
out
lcall
notl
subb
lcall
mov
inc
inc
repz
xorl
iret
pop
cmp
xor
outsl
mov
lock
pop
lcall
mov
in
dec
fidivs
push
pop
jp
loope
mov
mov
lcall
push
jle
mov
subb
dec
cmp
faddl
loopne
mov
jmp
lods
xor
adc
cmp
pushf
out
imul
pop
jne
sbb
cs
cmp
pushf
sub
lcall
jo
mov
xchg
jl
popa
xchg
pop
jmp
xorb
xor
or
push
and
insb
or
or
mov
add
in
test
jmp
mov
lods
or
adc
dec
fmull
dec
mov
mov
outsb
hlt
jl
adcl
lcall
mov
xor
imul
jl
push
and
mov
lret
std
jmp
sub
mov
adc
popa
adc
imul
sbbb
decl
int3
push
push
dec
loopne
push
adc
pcmpgtb
inc
loop
jp
fldenv
pop
bound
lcall
fistps
fildll
cmpsb
scas
sbb
sti
scas
mov
mov
daa
lret
addr16
and
sahf
incl
in
movsb
jne
pop
push
loope
push
mov
push
jns
or
int3
incl
aad
inc
fcmovnu
shrl
jl
fdiv
mov
sub
daa
or
or
lock
sti
mov
adc
fists
and
jp
jbe
xor
rorb
les
imul
jmp
adc
dec
mov
cli
out
arpl
sbb
movsb
xor
enter
add
jmp
dec
test
cmpsb
inc
sbb
cwtl
das
out
aam
mov
lea
movsl
mov
cmp
aam
pop
js
pop
in
lret
scas
les
sbb
xor
leave
adc
adc
cmp
jmp
int3
cmp
outsb
addr16
xchg
out
les
add
push
adc
ljmp
outsl
into
pop
aam
mov
mov
leave
into
shrb
sti
out
push
call
push
shrw
xchg
xlat
fsubrs
aas
jmp
shlb
xchg
icebp
movsl
fs
dec
test
lcall
fisubrs
or
push
pop
lret
pusha
ljmp
out
cld
cmpl
in
pop
out
jo
xchg
popa
popa
and
jb
dec
xor
add
js
sub
das
mov
xor
jmp
in
notb
lds
push
roll
in
cwtl
mov
test
in
lcall
jle
xor
mov
adc
pop
scas
clc
jle
fildll
and
call
lds
and
push
test
pop
sub
sub
push
mov
adc
ljmp
add
ja
outsb
mov
ret
push
pop
xchg
mov
mov
push
testl
test
jns
mov
fidivl
dec
mov
mov
je
ss
lahf
jae
xorb
out
cmp
xchg
adc
in
subl
lock
in
loop
xor
jae
jbe
dec
and
lock
lcall
mov
xchg
cmp
xchg
mov
outsb
mov
dec
in
push
xlat
sbb
sub
xor
les
mov
xchg
test
call
jl
cmpsl
aas
adc
insl
imul
sbb
imul
or
add
jecxz
pop
sub
jl
loopne
dec
in
jg
cli
jae
lret
sarl
lahf
cmp
test
ret
fdivs
push
inc
lea
fldl
or
ffreep
cs
mov
dec
fadds
lds
out
inc
fcomp
mov
dec
outsl
xor
enter
dec
mov
pop
popa
push
pop
inc
pop
mov
inc
cli
insb
fidivs
lcall
xchg
mov
push
je
mov
cltd
or
out
leave
xor
adc
push
sbb
ljmp
pushf
sbb
dec
fcomps
add
jp
outsl
push
testb
or
pop
lcall
push
mov
jbe
pop
mov
fistpll
gs
iret
pop
ret
pushl
js
movsl
jne
fdivrl
imul
push
nop
mov
pop
xor
add
ljmp
repz
pop
out
aam
out
lret
js
nop
imul
sbb
scas
ds
inc
repnz
decl
sbb
xchg
cmp
icebp
imul
dec
adc
push
ret
push
jg
pop
mov
cmp
jmp
mov
and
mov
sbb
outsb
mov
data16
mov
push
cmpsb
addr16
jno
cli
push
mov
or
or
xchg
pop
dec
rcr
sub
add
and
and
shrl
out
lret
cs
hlt
mov
inc
incl
xchg
and
jle
mov
or
sarl
js
push
push
int
pushl
addr16
xchg
sahf
nop
fnstcw
rclb
mov
dec
mov
ljmp
and
imul
je
addr16
aas
cmp
popa
scas
clc
cld
push
push
or
loope
aaa
mov
sbb
adc
aad
fnstsw
dec
test
mov
dec
sub
decl
nop
lods
sbb
xchg
popa
mov
fdivl
mov
leave
lahf
or
xchg
dec
leave
push
jge
pop
mov
mov
pushl
xchg
fistl
stos
stos
mov
cld
ljmp
ja
dec
shl
decl
outsl
insb
push
cmp
fwait
mov
push
push
mov
xor
sbb
cmc
es
pushl
sub
test
sbb
inc
mov
cmp
xchg
inc
pushl
mov
sahf
fnstenv
imul
sti
fstpl
aad
mov
dec
out
dec
sarb
add
incl
push
movsl
jp
sub
jb
sbbb
xchg
push
and
jle
jb
mov
pop
pop
decl
out
sub
or
ficompl
jecxz
dec
fwait
dec
add
xchg
cmp
mov
ljmp
inc
dec
and
in
and
into
scas
aaa
pop
xor
js
inc
rolb
lods
test
jle
sub
in
in
rcll
mov
mov
inc
jnp
das
cmp
xor
imul
repz
dec
mov
add
loope
popa
add
testb
cwtl
dec
adc
imul
jae
push
dec
add
lcall
pop
in
cmp
xlat
test
gs
cmp
aas
and
decl
bound
pop
mov
jmp
xor
ljmp
fld
cmp
mov
jae
stc
mov
neg
movsb
and
jmp
fmull
mov
js
into
xor
and
lods
mov
and
jmp
movsl
sub
decl
and
mov
push
lds
sub
lock
fcompl
mov
int3
stos
adc
push
and
int
mov
and
fucomp
leave
ljmp
je
js
adc
je
imul
jno
ljmp
lods
lds
pushl
ds
jb
mov
gs
mov
movsb
aam
inc
stos
arpl
sbb
outsb
jo
lret
jmp
cmc
test
jp
divb
cld
repnz
push
sub
and
mov
rorl
mov
dec
decb
insb
mov
lret
aas
dec
cmp
cwtl
std
ja
sbb
stc
aam
jl
movsl
push
sub
mov
mov
imul
mov
pop
fcom
imul
loope
call
incl
ds
popf
in
xor
sub
aaa
les
mov
repz
sub
pop
and
ljmp
ljmp
ja
dec
es
das
das
shrl
jae
cmp
or
fidivl
data16
cld
sbb
bound
and
mov
bound
adcl
adc
inc
fdivr
lcall
into
mov
frstor
out
int
add
mov
jns
cmp
call
shll
outsb
mov
lcall
adc
dec
sarl
fdivr
pushl
adc
sub
sub
sbb
das
xor
scas
lret
rclb
sub
call
mov
jmp
push
jnp
into
xor
sbb
js
push
sbb
aaa
fists
repnz
jg
int3
xchg
ljmp
sub
aad
or
push
xchg
jb
leave
adc
gs
insb
inc
xchg
cmp
dec
cmp
adc
xchg
sub
int3
adc
and
les
fldenv
mov
xorl
pushf
jge
arpl
into
scas
pop
test
dec
jno
repnz
fucomp
aas
jmp
and
iret
inc
jmp
int
or
mov
repz
cmp
pop
xchg
xchg
cmp
jmp
pop
scas
dec
jecxz
push
dec
mov
jns
push
dec
in
xor
js
stos
dec
and
jns
ret
and
or
cli
dec
fdiv
xchg
pop
fcompl
or
dec
xchg
adc
hlt
loopne
incl
jnp
shrl
inc
and
add
stc
sbb
xor
je
aad
jne
inc
xchg
xor
pushl
cmc
mov
mov
out
fwait
mov
mov
lods
add
call
dec
int3
xchg
mov
jnp
cmp
push
lods
adc
repz
shll
lods
fdivl
loop
lds
inc
rol
sub
xchg
cmp
into
mov
stos
dec
cltd
mov
jmp
xchg
outsb
jp
cmp
lea
loopne
gs
fadd
dec
mov
mov
cmp
cmpl
dec
sub
cmp
mov
aas
xlat
cmp
ja
mov
mov
sbb
sub
aas
incl
lods
mov
in
inc
jp
adc
add
clc
test
mov
xorb
xor
mov
dec
jp
movsb
or
fs
add
mov
xchg
mov
pushf
test
lea
div
lahf
pop
mov
out
add
jl
cmp
jl
xchg
pop
cli
jp
add
mov
insl
or
mov
mov
lods
cmp
push
test
and
fadds
xchg
and
test
pushl
movsl
mov
jl
fs
frstor
sbb
pop
cmp
lods
sti
shrb
adc
outsb
call
push
and
xor
dec
xchg
loopne
mov
mov
rorl
lods
pop
lahf
inc
dec
add
faddl
shll
mov
cmpsl
fisubrl
or
nop
dec
mov
arpl
lcall
push
add
pop
pop
jge
push
ljmp
pushf
sub
add
xor
xor
addr16
dec
mov
cwtl
jo
pop
add
ficoml
and
outsl
js
adc
ud0
call
push
xchg
lods
enter
dec
and
dec
pop
fsts
mov
push
cmp
sti
xchg
call
jmp
pop
cltd
add
xchg
mov
mov
push
test
pop
lcall
in
jmp
or
sahf
xchg
in
test
push
or
repz
in
movsb
and
call
pop
nop
xlat
sbb
mov
lcall
and
cli
push
jg
xor
incl
outsl
aam
repnz
jle
xor
fstl
push
rclb
mov
rolb
push
and
jp
adc
enter
jmp
push
lock
xbegin
ljmp
iret
ss
cmp
cltd
push
test
sahf
cmc
xchg
aas
ljmp
push
sub
decl
daa
stc
pop
mov
lea
lods
call
mov
stc
or
adc
ljmp
inc
cmpb
hlt
mov
pop
pop
cmp
and
xor
xchg
cmp
push
inc
imul
sub
or
xchg
fnstsw
les
jmp
fdivrs
ljmp
push
jle
mov
mov
test
adc
add
stos
fstps
cltd
inc
call
out
andl
loopne
push
mov
cmpsl
neg
pop
bound
inc
sub
mov
jmp
pop
dec
scas
cmp
jp
sbb
flds
mov
xor
inc
stos
test
and
js
arpl
decl
sub
lret
popf
xchg
popa
dec
sub
aam
adc
scas
sbbb
cmp
mov
inc
jl
sub
incl
repz
subl
std
or
mov
adc
mov
inc
cmp
decb
loope
and
andl
adc
push
ret
add
data16
ja
stc
stos
call
mov
scas
shll
cld
pop
lahf
jno
fcmovu
stos
out
mov
or
mov
mov
jle
mov
add
jne
lret
in
pop
nop
xchg
pusha
xor
mov
clc
or
mov
cltd
call
push
fcomp
orb
je
and
pop
or
ret
mov
push
cmp
push
xor
jne
mov
add
gs
jae
xchg
es
inc
mov
pop
sub
xchg
fs
pushl
in
inc
and
test
sarb
jbe
mov
lcall
push
sbb
insl
mov
add
pushl
cmpsl
pop
add
inc
xchg
xchg
sbb
mov
repz
xchg
dec
jbe
test
push
sar
call
es
jmp
or
popa
aam
and
jns
mov
shll
adc
mov
push
decl
cmp
maskmovq
clc
push
call
and
jne
and
push
xor
clc
or
inc
dec
pop
repz
stc
mov
int
jns
js
xchg
and
push
je
lods
inc
push
mov
or
dec
cmc
mov
sub
imul
xchg
loope
lcall
pop
sahf
dec
mov
aam
dec
jle
jecxz
push
fwait
xchg
adc
dec
mov
and
cmp
es
inc
fwait
mov
pop
daa
sbb
cmpsb
adc
addr16
sbb
mov
push
incl
and
xchg
mov
pop
xlat
daa
loop
mov
and
cmp
les
add
push
pop
aam
dec
test
or
std
loope
mov
and
data16
fisubrl
loopne
pop
push
outsl
dec
sbb
jmp
cli
subb
lret
xchg
inc
aam
or
ljmp
mov
stc
push
cld
or
adc
adc
fcomip
shrl
or
andl
push
aaa
add
mov
sbb
ja
jp
adc
inc
dec
push
loope
lods
xlat
push
inc
cmp
jmp
pmulhw
sub
sub
aam
fsubl
pop
mov
mov
out
call
stc
pop
and
sub
and
leave
dec
xlat
aas
add
sub
and
jo
push
push
or
das
adc
sbb
ret
cltd
dec
int
aas
clc
pop
stos
test
cmpsb
pop
push
daa
cmp
jmp
mov
push
push
stos
imul
sub
pop
mov
push
dec
out
cltd
cmpsl
lret
jmp
adc
mov
xor
xchg
ds
or
insb
xchg
mov
pop
outsb
xchg
mov
ret
jmp
lods
mov
mov
pop
scas
sub
cli
popf
cmp
dec
test
or
dec
les
jmp
cmp
in
shrb
fldcw
lock
arpl
test
fstpt
insb
push
pop
cs
fldcw
push
insb
sti
dec
movsb
and
test
shl
push
xor
call
pop
mov
xlat
arpl
sahf
mov
cld
negb
je
pop
and
jo
pop
fsubs
mov
pop
push
jmp
jne
btc
xor
cmc
lret
and
data16
push
pop
sub
lahf
jmp
inc
mov
daa
sbbl
mov
out
sub
stos
mov
adc
jp
adc
ljmp
test
and
or
inc
int3
sbb
scas
dec
ljmp
sbb
aaa
imul
je
vmovsd
push
incb
pop
jno
jmp
sub
xchg
pushl
mov
ret
add
adc
fisubrs
loop
dec
mov
fstl
call
pop
mov
hlt
inc
cltd
jle
jmp
mov
sub
dec
je
pushf
xor
insb
pop
cmpsb
dec
add
call
sub
push
iret
scas
or
xor
pushf
pop
out
xor
adc
xchg
shr
js
xor
lock
enter
ljmp
adc
test
sbb
sbb
shrb
jae
shll
add
incl
push
mov
mov
dec
pusha
mov
fildll
inc
aad
in
jp
mov
decl
pop
dec
mov
js
xorb
inc
xchg
jb
je
cmpsl
mov
incl
sti
out
mov
push
adc
out
pop
xor
add
pop
dec
mov
mov
shlb
stc
aam
push
arpl
pop
data16
dec
or
test
dec
xor
je
mov
std
cmp
cmpsb
fsubl
lahf
or
add
jmp
jmp
pushl
cld
inc
jp
xchg
cmp
cmpsb
sub
jecxz
loopne
jge
or
popf
mov
inc
movsl
daa
lcall
roll
roll
arpl
stos
pop
pop
pop
pop
ror
mov
jno
add
lcall
sbb
inc
icebp
add
or
push
inc
test
inc
and
lret
cld
push
call
push
sbb
pop
in
gs
jb
les
sub
push
call
test
push
or
shll
pushl
mov
imul
out
mov
shll
mov
sbb
lods
pop
sbb
ljmp
mov
xor
fstps
push
pop
loopne
xchg
add
mov
mov
incl
inc
outsl
xchg
xlat
outsb
xor
sbb
pop
mov
int3
xchg
movsl
in
in
decl
bound
cld
xor
mov
pushf
cmp
out
inc
adcb
dec
mov
outsl
std
mov
aam
and
rclb
aad
inc
xchg
inc
dec
pop
cmp
adc
ljmp
pop
ret
mov
lahf
sbb
std
jmp
aas
shrl
fildl
stc
mov
lods
int
xchg
cmp
ljmp
xorl
mov
out
dec
push
jns
test
jo
das
das
mov
call
out
dec
pop
inc
dec
in
jnp
or
shll
lock
iret
insb
mov
incl
xchg
cld
popa
xor
mov
pop
je
mov
lret
test
fcoml
sub
test
decl
jp
mov
addr16
out
mov
add
mov
mov
icebp
decl
sub
jle
push
dec
mov
push
loop
mov
repz
xor
ljmp
cmp
sbb
rcrb
mov
push
popf
lret
mov
or
imul
push
ss
bound
inc
enter
dec
movsl
jecxz
jg
popf
and
inc
cmpsl
mov
leave
repnz
ds
outsb
movsl
push
xor
push
sahf
adc
xchg
sbb
insb
lock
inc
xchg
lock
ss
mov
xchg
test
mov
cld
jecxz
push
add
xchg
out
mov
inc
and
and
ret
cmp
enter
jb
lcall
addl
lcall
inc
mov
or
leave
test
add
dec
cmp
or
and
incl
xchg
mov
add
daa
cmp
stos
xor
cs
add
sbb
jns
dec
imul
lret
adc
mul
aas
stos
ret
shll
or
cmpsb
xchg
cmp
dec
clc
add
fisubrs
mov
cmp
mov
inc
cmpsb
adc
push
decl
mov
mov
mov
xchg
flds
movsl
idivl
nop
push
xchg
push
pushl
inc
cmp
fidivrl
stos
mov
jl
lea
jae
lock
ljmp
push
push
mov
xchg
cmpsl
mov
mov
push
dec
jmp
lret
add
pushl
adc
cmovle
in
xlat
push
jmp
ror
cld
jge
pop
push
xchg
jp
and
nop
dec
out
xor
call
lahf
pop
dec
fisubrs
pop
sbb
and
aaa
shll
aam
pop
push
jle
daa
adc
jo
push
incl
popf
push
xor
dec
lret
lret
add
xchg
or
dec
mov
push
ficoml
call
loope
stos
out
mov
das
pop
nop
dec
rcrb
dec
repz
mov
push
ljmp
sub
xlat
sub
lods
into
lods
inc
lea
insl
clc
jne
push
sti
inc
and
cmp
mov
into
push
mov
inc
lret
rol
jns
lret
out
cmc
add
mov
decl
stc
xor
ficomps
jl
ljmp
cmp
pop
ss
das
add
mov
jl
cmp
lcall
xchg
sub
adc
or
sbb
mov
call
aam
das
mov
pusha
add
mov
dec
lcall
and
stos
lret
stos
ja
xlat
decl
gs
outsb
inc
std
jo
mov
lods
subl
aaa
std
lahf
lock
fcoml
movsl
pop
jecxz
lcall
xchg
cmc
testl
repnz
in
jae
dec
call
gs
in
mov
mov
jmp
pop
inc
sbb
adc
ret
jb
sub
popl
xchg
std
loope
call
lds
jmp
jmp
jo
xchg
stos
cmpsb
and
xor
test
adc
and
lcall
clc
decl
lret
jl
jmp
es
cmpsl
js
push
dec
cmc
mov
aas
push
sbb
in
out
jg
lods
push
popf
scas
int
xor
push
push
dec
insl
repnz
cltd
ficompl
mov
lcall
divl
sbb
aaa
inc
icebp
xor
ss
outsb
push
push
dec
insl
outsl
std
inc
rolb
pop
aad
cld
push
mov
in
call
mov
ljmp
pop
sbbb
lret
out
cmpb
sbb
ret
call
mov
add
divl
mov
out
cmp
mov
jmp
das
leave
mov
cmp
shlb
shrb
not
pop
fdiv
fwait
int
inc
insb
ljmp
push
xlat
xchg
fs
inc
cmp
inc
in
pop
mov
cld
adc
js
add
sub
lcall
cli
mov
lcall
mov
loopne
frstor
xchg
xor
decl
ficoml
push
daa
jo
and
mov
xor
push
hlt
stos
fisubl
mov
shll
mov
adc
sub
jmp
fildll
sbb
mov
inc
into
pop
sbb
incl
ficoml
addr16
and
xchg
rclb
dec
adc
add
jmp
add
fstps
cmp
mov
outsb
mov
int
and
inc
sbb
pushl
and
mov
repz
sbb
push
jl
int3
inc
pop
dec
mov
pop
je
xor
stc
hlt
dec
ret
cli
jmp
xchg
mov
mov
and
je
aad
sub
hlt
xchg
xchg
xchg
cmp
hlt
dec
loope
out
rol
test
sub
roll
mov
mov
lods
popf
xlat
fdivs
aas
mov
cmp
stos
sbb
insb
in
sub
je
sbb
les
jmp
pop
imul
and
dec
cltd
sub
aam
push
jne
pop
xchg
mov
jbe
sbb
cmp
dec
adc
mov
mov
pop
mov
push
inc
mov
test
jne
pushl
or
insb
jae
inc
ss
dec
pop
rol
insb
shlb
jnp
popf
sbb
jnp
jmp
sahf
stos
mov
mov
and
mov
lret
mov
cmpsl
js
mov
mov
jmp
xlat
mov
mov
mov
cmp
jns
jns
mov
xor
xchg
addr16
fstps
add
rorl
lahf
mov
xchg
test
jno
or
outsb
jmp
stos
push
arpl
call
xchg
mov
xchg
outsl
mov
mov
aad
movsl
xor
push
adc
divl
fcmovnb
sub
stos
sub
mov
xor
mov
and
inc
xchg
scas
or
sbb
xlat
mov
cmp
sbb
sbb
lcall
jle
jae
cmpsb
fisubl
or
xor
imul
stos
js
leave
aas
sbb
jmp
jmp
loope
lret
pop
pop
mov
add
xlat
in
scas
sahf
out
call
jns
jecxz
sub
rcr
push
mov
mov
mov
arpl
enter
in
or
add
inc
dec
ret
cmp
testl
fmuls
in
fs
in
dec
jg
incl
ret
mov
xor
cmp
and
out
popf
xor
test
call
das
insb
call
cmpsl
das
lods
and
sub
clc
or
jmp
incl
les
mov
lcall
and
adc
add
sub
xchg
pushl
lahf
sbb
ja
in
clc
add
xchg
inc
outsl
js
dec
fwait
xchg
jnp
test
inc
loopne
pop
push
clc
adc
jmp
lea
into
popf
aam
jmp
sbb
dec
push
push
xchg
lahf
out
loope
pop
jmp
add
lods
mov
daa
notl
mov
and
insl
ljmp
in
fildl
mov
cmpsl
push
loopne
jmp
xor
das
xchg
dec
stc
xchg
call
dec
clc
jno
cmpsl
mov
dec
adc
test
movl
ljmp
xchg
lds
test
fcomps
push
adc
jle
filds
testl
xlat
adc
jne
rep
sub
movsb
lods
roll
mov
lods
bound
call
call
test
sti
mov
jmp
cmp
pushf
push
enter
rorb
cmpsl
push
pop
dec
insb
jns
xor
fwait
xor
subl
mov
fdivrl
dec
incl
arpl
add
adc
mov
lret
je
pop
aad
mov
ljmp
xchg
mov
int3
fstpl
xchg
xor
fsts
mov
cmp
sub
adc
ret
lods
mov
ljmp
xor
stos
xor
push
ja
mov
and
ds
pop
loope
cmp
imul
cld
mov
adc
lods
in
aam
shll
pop
mov
test
adc
leave
mov
lcall
cmp
cli
hlt
je
add
lds
xor
jb
out
sar
jmp
dec
mov
push
inc
cmovne
ss
adc
les
gs
sbb
push
xorb
push
adc
and
sub
add
mov
ljmp
loope
xor
bound
pop
lret
fidivrl
cmc
mov
adc
mov
aaa
dec
in
aad
sbb
jo
push
mov
mov
sbb
pushl
adc
jmp
push
add
and
data16
mov
or
inc
cmp
ret
cmp
xor
cltd
pop
sbb
icebp
popf
pop
rolb
inc
mov
pushl
jle
mov
scas
sahf
mov
mov
test
or
fs
call
insl
sbb
inc
ja
mov
sahf
push
aad
adc
test
arpl
aaa
shll
push
das
dec
lds
sub
aaa
pop
int
les
rcr
pusha
sar
xor
pop
xchg
fwait
push
incl
push
stc
push
cmpsb
add
test
push
mov
into
pop
out
sbbb
mov
call
jno
movsl
lret
shlb
arpl
addr16
gs
adc
roll
jge
mov
sahf
mov
mov
insl
loope
daa
mov
xor
xor
xchg
inc
out
inc
aas
lods
adc
xor
imul
je
cmpsb
pop
cmp
pop
ja
or
add
mov
call
sbb
or
add
ljmp
sub
jo
push
adc
dec
incl
cwtl
popf
jp
rcrl
xchg
push
sub
addr16
data16
int3
test
sub
jnp
inc
jne
xor
or
mov
pop
scas
xlat
subb
push
out
xor
ljmp
xchg
cmpsb
test
popa
cli
lret
xor
mov
add
dec
int3
out
pop
sbb
xchg
idiv
jmp
hlt
loopne
mov
inc
lods
push
cmpsb
fimull
jmp
xchg
aam
sbbb
jbe
mov
pushl
test
mov
lock
movsb
sbb
pop
inc
gs
rcrb
sbb
push
cs
ss
insl
pop
les
stc
mov
xchg
int
jl
add
aam
sbb
jmp
pop
fistl
cli
cmp
pusha
mov
pop
pop
sbb
es
xchg
xor
aam
decl
sarb
decb
push
dec
dec
test
pop
or
push
cmp
xor
mov
pushl
add
adc
shlb
test
lods
adcl
push
fmull
mov
jmp
test
cwtl
lcall
sbb
jle
lock
jbe
imul
enter
pop
xchg
test
inc
loopne
mov
pushl
and
in
testl
loopne
xchg
mov
int
rolb
cmpsl
and
incl
shlb
mov
cmp
call
sbbl
xchg
adc
jmp
push
ss
lock
out
cld
aas
pop
pop
enter
out
movsb
mov
pop
mul
push
inc
mov
pushl
ret
cs
das
outsl
pop
aas
jmp
aam
fsts
in
cld
xchg
sub
pop
fistps
fcmovbe
es
adc
cld
pushf
xchg
sub
mov
loope
popf
and
out
jno
sbb
cmp
pop
jo
add
ja
scas
gs
cmc
or
mov
jbe
cwtl
ljmp
hlt
pop
js
add
or
loopne
or
dec
mov
add
or
icebp
shr
jae
inc
movsl
rolb
sbb
ljmp
lcall
lock
cmp
pop
movsb
outsb
mov
sub
mov
call
sbb
xchg
sbb
repz
xor
jmp
jg
stos
loopne
inc
cmp
add
ljmp
push
dec
push
jecxz
insb
cltd
sub
popf
movsb
pop
lock
imul
data16
and
dec
dec
lds
les
test
outsl
push
or
data16
cmpsb
sbb
adc
dec
mov
jmp
mov
leave
xor
sub
sahf
icebp
cmpsb
fcompl
test
inc
notb
pushl
or
xchg
jmp
hlt
or
xchg
sub
jmp
dec
pusha
xchg
or
jmp
mov
pop
cmp
hlt
inc
mov
cwtl
ficoml
jmp
pop
sbb
lcall
or
fsubl
aaa
push
stos
mov
mov
mov
pop
out
in
loope
repnz
push
mov
and
or
adc
icebp
sbb
lock
jp
aad
push
lods
jmp
out
fwait
inc
mov
lcall
cmpsb
bound
cmp
pop
negl
fmull
jmp
or
leave
pop
dec
jecxz
xchg
or
xor
enter
pop
xor
dec
call
lcall
mov
popf
imul
stos
push
inc
mov
cmpsl
mov
mov
outsl
imul
inc
cmp
bound
ret
or
divl
in
ret
orb
int
clc
pop
cmp
lock
sub
inc
cmp
and
add
insl
fcompl
jns
imul
incl
dec
in
arpl
lahf
mov
sub
gs
add
jae
pop
jmp
pop
push
jge
inc
adc
test
pop
adc
sub
ds
ret
dec
out
pushl
je
sbb
fimuls
add
push
test
rorb
gs
ljmp
arpl
gs
push
cmp
push
dec
in
mov
enter
pushl
and
mov
mov
in
xor
or
fwait
lds
shll
or
xor
ljmp
inc
in
int
scas
out
adc
lock
adc
xor
fsubrl
data16
ljmp
mov
mov
cmpsb
in
dec
dec
ljmp
adc
repnz
add
cmp
xor
ret
push
pop
popf
negb
or
pop
iret
into
jmp
repnz
push
ret
sbb
call
arpl
push
mov
fmul
aam
fucomi
ds
call
jecxz
les
shl
sbb
adc
sub
in
mov
adc
lods
jmp
or
scas
fsubl
xorl
dec
inc
sahf
or
decl
push
mov
dec
pop
lea
pushf
addr16
xchg
in
pop
daa
mov
jmp
in
rcrl
out
sahf
insl
push
jecxz
inc
cmp
fcoml
loop
mov
push
into
lret
mov
xlat
rolb
add
mov
push
jg
int3
jns
cmpsb
insl
test
loopne
incl
movsl
xor
xchg
jbe
xor
test
jo
leave
cltd
xchg
adc
call
lods
inc
or
imul
pop
repnz
push
pushf
sarb
sbb
lcall
fcos
jmp
sarl
fsub
popf
jmp
or
jmp
or
adc
pop
mulb
dec
lods
inc
shrb
fsubrs
sahf
insb
lods
push
fistpll
push
pop
fsts
loope
stos
dec
lcall
pop
inc
inc
sub
sbb
fidivrs
shll
pop
rcrb
sub
lcall
jae
repz
je
lds
push
mov
jmp
test
inc
lods
dec
jmp
out
xor
out
lock
rcr
pop
xchg
loope
push
lea
adc
adc
xor
jp
bound
or
ds
cmp
fdivl
aaa
fldlg2
test
xor
loope
in
pop
or
and
call
loope
cs
das
js
in
push
das
mov
adc
push
xchg
sub
call
adc
shll
xor
cmpsl
sbb
cmc
pop
pushf
jns
add
sar
pushl
jl
and
bound
daa
push
gs
push
out
mov
das
jo
lea
fcoml
fnstsw
pop
popf
in
shll
clc
inc
add
xchg
int3
daa
add
subl
incl
aas
xchg
inc
sub
cwtl
lock
jg
shll
add
mov
lcall
loopne
pusha
je
jecxz
jo
sub
jecxz
pop
fs
aad
pop
fimull
test
adc
ljmp
or
add
mov
and
mov
jo
hlt
stos
imul
sbb
lcall
add
aam
inc
jge
adc
inc
mov
pop
jl
in
sub
gs
decl
pop
mov
pop
gs
cmp
push
mov
cmp
add
jns
cltd
cmp
incl
arpl
js
cld
inc
loop
sub
cmp
lods
mov
call
sub
popa
cmc
cmp
popf
jecxz
imul
lds
test
or
xchg
hlt
mov
pushl
mov
cmp
aad
adc
bound
adc
in
test
or
ljmp
lret
push
inc
xor
add
sbb
stos
and
mov
pop
push
mov
cmp
mov
add
pop
lea
pusha
pusha
cltd
or
inc
mov
es
xchg
push
ds
incl
sub
jbe
adc
andl
in
mov
push
iret
out
cmp
sti
or
pushl
xchg
push
subb
add
pop
mov
mov
iret
call
or
and
in
scas
mov
test
insl
mov
cmp
ss
xchg
mov
pushf
mov
mov
xor
mov
jmp
decl
mov
pop
and
xchg
cmp
push
push
stos
cmp
insl
movsl
jmp
decl
fcmovnu
aaa
call
addl
sbb
fistl
icebp
clc
mov
cli
push
incl
lret
sahf
xchg
mov
adc
enter
mov
lea
ret
stos
pushl
cmp
jmp
notb
inc
cld
add
add
out
pop
test
rcrb
lcall
jl
xchg
push
addr16
loop
sbb
pop
vpcmpgtb
inc
test
xor
loopne
sub
pushl
push
inc
push
xchg
sbb
rolb
jbe
leave
sbb
hlt
jmp
pop
pushf
pop
pushl
js
inc
testl
scas
push
and
pop
movsl
xchg
shlb
pushl
neg
jbe
repnz
aam
inc
in
int3
pop
xchg
xchg
mov
incl
push
repz
mov
jge
and
loope
jmp
aad
fidivs
aad
decl
andl
sbb
jl
faddl
repz
sbb
push
mov
pushl
in
push
outsl
in
int
cwtd
popf
lret
or
fdivrp
and
or
decl
mov
scas
add
sub
pop
push
dec
cmp
mov
inc
sub
cmc
and
cli
or
adc
pop
test
ficoms
lods
ret
test
inc
imul
cmp
je
loopne
mov
adc
jnp
add
je
xchg
cwtl
mov
inc
and
ljmp
or
nop
mov
stos
stos
sub
pop
fs
imul
gs
fidivrs
jnp
fwait
rcrl
andl
dec
inc
pminsw
mov
ret
stc
sub
inc
lcall
mov
xchg
push
cld
cs
test
push
mov
jae
jae
push
mov
mov
out
mov
rcll
test
pop
or
dec
cmp
xchg
mov
xchg
or
loopne
lods
or
dec
xchg
push
push
or
fcoms
loop
mov
aas
mov
addb
iret
push
and
jp
adc
xchg
inc
testl
jns
mov
xor
rcrl
or
add
dec
sub
inc
mov
jns
fcmovnu
fstpl
mov
outsb
leave
pop
jbe
mov
pop
inc
jle
inc
push
pop
sbb
jl
lea
pusha
out
pop
in
scas
adc
lods
hlt
inc
pop
mov
pushl
lea
mov
lret
negl
mov
out
inc
je
icebp
sbb
loope
ffreep
pushl
xor
xchg
mov
mov
inc
iret
popa
mov
xor
cmpsl
je
fadds
lret
cmpsb
sub
test
clc
stos
mov
and
call
jmp
mov
jmp
int3
mov
imul
or
cmp
xor
in
add
mov
mov
aam
ds
sub
lods
ds
adc
jl
call
sbbl
repz
in
xor
in
enter
clc
fcompl
push
lods
cmp
dec
stos
fwait
icebp
sbb
mov
je
mul
imul
push
into
pop
cmp
arpl
jmp
mov
or
and
call
cmpsb
and
popf
sbb
lods
leave
shrl
pop
add
decl
cmp
or
xchg
lahf
icebp
and
inc
adc
stc
dec
dec
jb
imul
mov
adc
popa
lcall
adc
push
adc
pop
cmpsb
fisttpl
cwtl
xor
sub
and
mov
lret
jnp
ljmp
jnp
xor
xor
sbb
add
push
roll
in
hlt
in
cli
fcomps
sub
movsl
xor
int3
fsubrl
mov
inc
lcall
out
stos
xor
lea
ja
ljmp
out
jp
sahf
shll
lds
arpl
mov
jmp
jbe
stc
mov
jb
outsl
or
push
cmp
xchg
pop
inc
clc
jno
lods
dec
lods
shl
dec
pushl
mov
and
pusha
dec
mov
and
push
insb
pop
xchg
gs
popa
pushl
shl
sub
cmc
push
aad
test
inc
out
rorl
jecxz
cmp
jmp
mov
imul
and
push
xchg
jbe
xchg
xchg
das
adc
lock
fwait
inc
dec
push
aad
jmp
loop
cmp
dec
add
push
rorl
jmp
loopne,pn
push
mov
fstpt
xor
das
loop
and
jae
mov
mov
pop
and
jmp
dec
cmp
adc
sub
ret
ret
adc
shll
xor
push
cmpsb
in
loopne
mov
decl
fnstcw
je
call
stos
insb
imul
into
add
mov
add
dec
pop
out
dec
ds
out
out
dec
xchg
jp
inc
inc
mov
decb
xchg
xchg
repnz
out
int3
hlt
je
pop
dec
sahf
arpl
gs
mov
inc
lods
mov
rorl
jle
aaa
mov
jmp
and
pop
insl
xchg
fsubrs
stos
fwait
mov
stc
into
stos
jl
and
jmp
mov
xchg
loope
mov
outsl
xor
mov
fbstp
xor
lock
adc
pushl
stc
jbe
and
movsl
cmp
movsb
xchg
lock
je
xchg
jge
shrb
inc
inc
xchg
pop
lcall
mov
cmpsb
iret
nop
sbb
push
fiadds
jecxz
mov
call
movsb
xor
rcrl
ljmp
dec
shl
pusha
add
dec
int
cld
outsl
popf
sub
repnz
ja
sbb
add
in
sbb
xchg
inc
sbb
iret
inc
dec
push
mov
xor
mov
ljmp
cmp
pop
mov
jno
sbb
icebp
cmp
cmp
cmp
lret
insb
adc
adc
leave
or
cmp
loope
scas
fptan
xchg
add
outsb
jmp
sti
pop
xchg
jp
or
in
xor
push
pxor
xchg
popa
pinsrw
fdivrl
imul
test
jo
sub
cmp
adc
dec
lcall
popl
arpl
push
dec
push
push
fs
add
mov
push
cmp
pushl
sub
fidivs
pop
sub
push
and
lock
lcall
test
fisubs
cmp
xor
daa
cltd
adc
xor
adc
jns
fmull
sub
out
and
lcall
icebp
pushl
mov
in
je
aad
mov
add
adc
jne
cli
rolb
or
decl
push
in
cltd
add
mov
shll
jne
push
mov
out
pop
lock
incl
add
fwait
inc
out
int
jns
repz
ja
out
xor
movsl
or
pop
jp
addb
das
push
xchg
xchg
into
add
insl
rcrl
out
mov
clc
xor
pop
js
mov
mov
repnz
push
pop
push
in
pop
and
test
int3
mov
push
jmp
push
inc
lcall
lret
add
insl
inc
push
movsb
pop
adc
add
inc
xor
sub
add
ljmp
mov
out
dec
mov
dec
mov
or
rorb
nop
pop
inc
imul
std
jg
xor
stc
xor
pop
pop
dec
xchg
rorl
mov
mov
mov
dec
mov
cltd
sbb
lock
orb
add
test
arpl
ljmp
incl
add
ret
mov
jmp
add
test
sti
sahf
push
adc
xchg
incl
faddl
int
xor
mov
xchg
cmp
imul
dec
syscall
ss
mov
adc
mov
push
fisubl
out
jp
mov
dec
push
sbb
call
and
push
mov
dec
cmc
scas
lret
mov
and
cli
test
mov
pushl
pop
jg
lcall
and
out
mov
cld
je
inc
cmp
movsb
rol
call
pop
imul
jns
in
mov
xchg
sbb
fdivr
dec
push
xchg
pop
ret
pop
in
call
pop
lock
dec
test
cmp
nop
pop
inc
jbe
push
and
leave
pop
mov
push
xor
lcall
in
cli
inc
sti
test
ret
data16
mov
push
mov
push
repnz
add
or
jmp
cmp
or
jbe
mov
ret
lods
xchg
xchg
or
dec
fdivrp
lcall
mov
xchg
pop
push
adc
pop
aam
sub
mov
insl
inc
and
int3
dec
xor
daa
add
dec
decl
into
mov
and
in
mov
mov
or
mov
pushl
sahf
lret
iret
dec
and
out
subl
imul
out
xchg
push
push
or
inc
adc
push
cltd
aas
ljmp
lahf
mov
dec
mov
pushl
bound
push
mov
cmp
fstpl
shr
pusha
cmp
std
inc
incl
inc
stos
mov
iret
push
push
popa
hlt
ss
es
or
xchg
in
and
or
mov
dec
push
lods
shll
add
inc
adc
sti
ret
add
mov
mov
arpl
cmp
popa
jg
movsb
sbb
pop
add
push
push
pop
sbb
adc
sti
lcall
mov
sbbl
xlat
inc
in
or
mov
cltd
fidivs
cmp
cmp
lcall
sbb
in
inc
xchg
stc
inc
cld
push
or
or
push
push
arpl
adc
lods
sar
jmp
xor
or
adc
rcrb
les
sub
sarb
sbb
jle
xor
jmp
cmpb
popa
push
das
xorb
out
add
fisttpll
outsb
lcall
mov
mov
fsubrl
mov
rcl
pop
dec
rorl
out
out
jo
aas
mov
inc
out
mov
call
xchg
sub
xchg
xlat
int
jo
jmp
sbb
inc
adc
mov
in
movsl
jne
xchg
shll
adc
cmp
xor
daa
addr16
decl
ret
movsl
sub
and
add
or
icebp
push
bound
gs
lretw
fistpll
jmp
adc
mov
sbb
lahf
cmp
push
mov
lahf
aaa
inc
call
int3
insb
jo
incl
ret
test
adc
aaa
add
xchg
dec
jge
stc
pop
aaa
xchg
lock
xor
test
and
and
ljmp
add
loop
push
cmp
pop
cmpsb
jbe
outsl
mov
in
lcall
ljmp
push
push
pop
das
xor
pusha
insl
jmp
inc
mov
sbb
cmp
lea
push
bound
jle
inc
adcb
push
sbb
lahf
ret
dec
jg
jge
into
das
in
fcos
decl
pop
xor
xor
adc
xchg
adc
push
push
mov
mov
pushf
pop
sbb
jb
incl
rol
pusha
cld
mov
xchg
xlat
xor
jno
sub
mov
mov
dec
sar
mov
lret
jmp
stos
lret
xor
mov
into
jbe
lea
insl
sub
lods
inc
jo
add
xchg
loop
cmp
cmp
add
insl
xchg
jmp
jmp
jb
shl
mov
xor
repnz
aam
cmp
bound
jge
out
lcall
or
sti
sub
mov
jae
cmp
aas
sti
xlat
int3
pusha
hlt
inc
dec
fidivrl
mov
push
faddl
mov
dec
adc
lock
add
loope
imul
call
cwtl
pop
std
movsl
sbb
cmp
scas
mov
lcall
movsb
subl
mov
jmp
jno
fyl2x
pop
or
or
repz
pop
sbb
cmc
incb
push
push
test
pop
and
sbb
push
inc
mov
pop
pop
sbb
loop
in
shlb
sar
call
nop
inc
ret
dec
xor
mov
adc
movsl
jmp
cmp
int
add
sub
inc
ret
mov
jno
and
sahf
push
cmp
cmc
inc
push
aam
outsl
cmp
fsubrl
fisttpl
lret
or
jg
inc
or
pusha
xor
mov
cwtl
incl
fisubrl
cmc
inc
adc
popa
fstp
mov
bound
loopne
call
push
gs
push
jg
mov
test
mov
xor
gs
jecxz
sbb
std
aam
mov
cmp
outsl
dec
mov
in
fildll
mov
jo
shlb
and
stos
arpl
lcall
cmp
mov
push
and
fldcw
enter
mov
imul
adc
jae
push
fbld
incl
lahf
repnz
or
pop
stos
mov
lods
adc
in
jmp
out
sbb
sub
mov
in
testl
addb
ljmp
bnd
pop
pop
cmp
sub
aaa
push
pop
and
out
ret
cwtl
scas
inc
ret
sub
xchg
shrl
xchg
or
in
data16
sbb
aas
fucomi
cli
popf
mov
xor
sbb
push
scas
mov
test
fmulp
sbbb
idivl
mov
leave
dec
out
add
mov
mov
lock
dec
pop
ja
test
decl
or
int
xchg
shlb
mov
aaa
fcomps
hlt
idivl
es
pushl
cwtl
lret
fadd
inc
sahf
gs
xor
push
inc
or
cmp
mov
aam
jecxz
jmp
popl
jbe
cwtl
add
in
xchg
fadds
std
sub
sub
jmp
mov
dec
pop
mov
adc
xchg
mov
lea
pusha
addr16
int3
mov
daa
mov
adc
cmp
mov
cmpsl
test
xor
add
sbb
fstp
sahf
xlat
test
stos
push
pop
jle
mov
mov
sub
sbb
mov
jmp
dec
adc
xchg
dec
jl
hlt
dec
push
dec
scas
pop
cmp
lea
or
jg
iret
test
mov
mov
popa
fdivrp
incl
outsl
xchg
fwait
mov
push
mov
fcom
ffreep
ljmp
gs
inc
andb
inc
out
loopne
fldenv
add
out
and
or
movsb
mov
pushl
xchg
decb
sub
je
je
inc
out
sub
jle
push
je
jge
inc
or
popa
add
hlt
mov
pop
repnz
cltd
insb
xor
fprem
and
imul
aas
ss
loope
popa
jnp
subl
push
addr16
push
scas
dec
ficompl
mov
ljmp
push
xchg
out
push
mov
and
jns
xlat
xor
dec
pop
in
sub
jmp
push
aaa
xor
pop
mov
lods
cmp
dec
daa
sahf
outsb
out
rcll
jns
fistpll
call
fwait
mov
loope
cmp
mov
sbb
mov
jne
in
jg
jmp
mov
mov
cmp
jl
out
jecxz
sbb
lahf
adc
sub
decl
mov
pop
xor
pop
test
imul
sub
outsl
cmc
xchg
loopne
call
mov
mov
push
test
mov
mov
pusha
adc
push
sti
ljmp
subb
jae
jecxz
stc
rcr
in
xchg
scas
cld
and
adc
dec
fnstcw
push
mov
test
movsb
and
push
dec
popa
loope
mov
sub
cmp
lcall
andl
out
fisttpll
dec
xor
pop
mov
iret
cmp
testl
pushl
xorl
mov
addr16
sub
cld
mov
ljmp
rclb
dec
jns
and
leave
adc
push
adc
cmp
sub
push
xor
call
loopne
add
sbb
test
fcompl
in
repz
rep
fsubrs
push
ffree
into
inc
mov
scas
mov
sbb
orb
ret
cli
mov
lcall
scas
sbb
inc
ss
mov
call
sub
in
mulb
decl
mov
jecxz
sub
fiaddl
stc
pusha
addb
mov
es
lcall
xor
ljmp
inc
mov
lock
roll
pop
movsl
dec
outsl
cmp
call
sub
xor
popa
mov
push
rcrb
or
mov
int3
mov
call
sub
in
lea
cmp
test
dec
add
jbe
loope
push
adc
jle
fldcw
jg
call
mov
in
sbb
mov
shll
daa
cli
mov
xchg
xchg
lea
mov
mov
call
or
scas
sbb
xor
xchg
pop
inc
cs
push
inc
xchg
xchg
xor
xchg
add
lods
out
xchg
fnstsw
bnd
call
lahf
or
jb
call
inc
jbe
mov
orl
inc
nop
pop
lret
incl
inc
push
pop
test
dec
mov
pop
cmp
mov
nop
jl
int
test
ljmp
mull
mov
xlat
in
jmp
lods
xchg
loope
sbb
in
jns
fsubrp
imul
pushl
pop
addl
cmp
andl
les
popa
ja
add
imul
aas
xor
adc
xor
dec
adc
mov
cmc
and
scas
pop
cli
xchg
mov
cmp
aad
adc
adcl
stc
gs
xchg
bound
sahf
jecxz
test
mov
mov
test
leave
imul
xchg
imul
xchg
in
stc
and
rol
xchg
cmpl
mov
fs
negl
push
push
insl
ljmp
incl
push
dec
dec
or
or
add
inc
sahf
cwtl
mov
inc
or
lods
jbe
movsb
aad
es
jmp
xchg
stos
jb
stos
sub
dec
adc
mov
stc
cld
sbb
jnp
cli
pop
es
push
inc
icebp
mov
cmp
mov
sub
ljmp
sbb
dec
loop
cmp
xor
or
jne
je
add
ljmp
mov
inc
mov
sahf
adc
shlb
and
sub
out
roll
ljmp
pop
movsl
test
pushf
sti
push
jbe
push
ljmp
mov
and
fldcw
xchg
jl
lret
mov
jmp
movsl
addl
loope
mov
fmuls
mov
xorb
shlb
sub
cmp
fdivl
adc
imulb
rcl
test
cmp
ror
imul
sbb
or
jmp
lret
adc
xchg
xor
ficoms
or
pop
adc
mov
pusha
sub
fs
or
sbb
dec
push
push
xchg
cmp
mov
dec
mov
lock
jmp
les
sub
roll
lahf
add
push
cltd
or
cmpsb
cwtl
insl
inc
sbb
inc
sub
pushl
dec
out
inc
and
jno
adc
or
cmp
out
gs
jg
mov
outsl
xchg
mov
test
cmp
cltd
shr
mov
xor
mov
aaa
adc
std
or
out
ja
mov
cmp
imul
insl
dec
cli
insl
lods
jmp
push
ljmp
daa
cmp
mov
jge
insb
jge
das
jnp
rcrl
repnz
xchg
movsb
pushf
mov
dec
in
dec
cmpsl
fistpll
xchg
push
ss
sbbb
push
inc
jae
mov
add
call
dec
sub
push
xchg
in
shll
clc
add
out
mov
jle
or
xchg
lahf
aaa
pushl
ss
mov
jp
push
fiadds
mov
dec
aaa
push
dec
xor
in
and
clc
rcll
mov
lea
add
jmp
lds
dec
cmc
mov
mov
lcall
fadds
sbb
popf
dec
sbb
lret
mov
pop
leave
data16
aas
sar
decl
ds
add
test
add
fsubrl
jg
fcoml
aad
incl
push
stc
clc
inc
enter
mov
leave
sbb
push
push
adc
push
decl
arpl
fwait
in
stos
addr16
push
cs
aaa
fldt
ljmp
ret
nop
mov
adc
cwtl
jbe
mov
out
ret
movsl
les
and
mov
pusha
push
rorb
call
mov
call
add
fcomi
sbb
mov
push
sarl
test
jp
xor
adcb
mov
aad
arpl
pop
pop
xchg
insl
fldenv
and
ljmp
ret
out
cmp
sub
popa
jmp
push
push
mov
lcall
cmp
in
xchg
push
cltd
sar
push
jne
mov
std
cli
andb
sub
push
xor
fsubl
mov
mov
daa
lods
mov
dec
mov
pop
mov
and
adc
call
adc
inc
arpl
into
leave
mov
rorl
fwait
xchg
out
or
jp
or
add
pop
in
jae
into
pop
outsb
arpl
aas
sahf
sub
mov
incl
jle
jp
arpl
cmc
fisubl
jbe
lahf
mov
pop
xchg
sub
cld
sbb
mov
and
jg
adc
pop
leave
adc
xchg
adc
sub
pop
nop
jl
pop
mov
pop
movsl
bound
out
jb
test
adc
or
test
decl
lods
lods
fucom
ja
adc
add
jns
cli
sub
add
rorb
ljmp
push
inc
push
shlb
cmp
nop
shrb
mov
inc
or
mov
push
adc
lret
insl
cmpsb
jbe
loop
testb
dec
out
into
xor
decl
sahf
adc
iret
adc
jbe
xchg
sub
nop
mov
leave
adc
push
fdivr
ljmp
fistps
ljmp
and
lret
dec
adc
mov
lret
pop
in
adc
stos
jge
lcall
test
into
stos
and
das
out
sbb
xchg
shll
ljmp
jp
fcmovnbe
sbb
pushw
fucomp
xor
int3
adc
add
cmc
pop
aaa
popa
lret
xchg
mov
mov
or
jmp
cmpsl
push
sbb
sbb
pop
clc
out
cmp
clc
dec
mov
push
ret
push
jns
jnp
inc
je
lret
aam
jmp
pop
inc
mov
push
mov
cmc
pop
ss
mov
cmp
arpl
jmp
pop
call
loope
jne
mov
push
cmp
fs
mov
out
rclb
mov
add
out
add
push
jge
dec
pop
jmp
push
adc
rclb
jle
cli
jmp
data16
fwait
shlb
sbb
test
jno
lea
fldenv
test
pusha
notb
loop
mov
incl
ret
pop
or
or
dec
pop
xchg
out
push
dec
andb
jl
mov
aam
inc
xor
inc
mov
push
jnp
push
orl
into
jmp
stc
movsb
shlb
in
jns
mov
movsl
adc
dec
pop
in
mov
jecxz
cs
shrb
pushl
sub
aas
mov
aad
lock
ds
jmp
xchg
dec
xchg
sti
dec
call
ljmp
pop
cmpsb
jo
movsb
cmpsl
dec
push
dec
cltd
lods
lret
test
adc
add
mov
jmp
adc
dec
and
pop
push
xor
pop
into
cmp
add
fcoms
sbb
subl
inc
lret
inc
out
call
outsl
xchg
leave
add
and
testl
pop
xchg
push
mov
mov
jecxz
sub
xor
dec
adc
jae
mov
xor
mov
ljmp
adc
decl
fdiv
aaa
daa
push
fistpl
iret
mov
or
adc
sti
imul
xchg
movsl
les
loopne
call
mov
cld
xchg
or
fcmovnu
jecxz
call
lods
test
mov
ss
addr16
lcall
faddp
cld
push
sahf
or
sub
clc
aaa
mov
pop
inc
xor
inc
cmp
call
iret
inc
lret
incb
mov
push
push
and
in
jo
mov
call
call
adcl
xor
sub
lret
cld
or
enter
sub
test
lock
je
sbb
pop
push
sub
outsb
mov
dec
rcll
add
sub
test
pushl
and
nop
xchg
cld
fwait
rcr
adc
mov
fmulp
dec
adc
jmp
pop
add
or
sbb
psrlq
std
xor
adc
test
mov
jl
std
popa
inc
lea
in
cmp
ret
clc
incl
ror
add
add
je
fs
jmp
push
sbbl
incl
outsl
sub
test
push
cmp
xlat
pop
lret
ljmp
movsb
in
adc
inc
pop
cmp
mov
lret
leave
aad
dec
mov
dec
push
fnstsw
push
mov
incl
xorb
cmp
das
clc
scas
insl
fnsave
into
lret
pop
push
pop
and
xchg
rorl
es
jmp
sarl
aad
add
bnd
xchg
adc
pop
mov
mov
and
and
js
call
lcall
push
leave
sbb
or
cmpsb
cli
out
or
js
mov
dec
int
out
fwait
clc
xchg
std
lds
and
repnz
cmc
fs
pusha
jge
xchg
out
jmp
mov
push
movsl
movsl
aam
adc
mov
test
negl
push
ljmp
idiv
jmp
icebp
es
xor
shlb
xor
jecxz
add
dec
call
leave
lahf
pop
mov
inc
es
jno
pop
fstps
loopne
fs
subb
pop
daa
das
adc
inc
jnp
pop
add
dec
inc
cld
insl
jg
ror
out
inc
jg
imul
lret
test
jmp
pop
cmc
pop
mov
leave
movsb
fisttpll
sarb
push
inc
dec
sbb
lcall
push
lods
add
sub
pop
sahf
lcall
fwait
popl
andl
into
sub
xchg
das
lcall
sbb
pop
pop
and
in
sub
push
sbb
push
and
adc
scas
lcall
jmp
popa
rcl
mov
mov
xchg
aam
movsl
lahf
push
ljmp
jmp
enter
mov
jge
aaa
mov
daa
or
int
and
daa
xchg
pop
push
mov
lds
sbb
mov
mov
pop
roll
cmpsb
std
in
repz
jno
xchg
pop
out
sbb
cmp
cli
ret
xchg
add
pop
jmp
test
dec
imul
push
fstpt
inc
sbb
push
lods
pushl
sub
outsb
data16
scas
sub
scas
fstpt
pmaxub
push
sub
pushl
es
popa
mov
or
or
lret
outsb
fld
xor
inc
sahf
fisttpll
and
incl
mov
pop
xchg
in
in
cli
int3
xchg
xor
adc
idivl
push
jae
fcos
jmp
push
in
sbb
fildll
das
and
mov
sub
and
sbb
xor
sahf
loopne
push
pop
add
or
mov
and
and
dec
push
push
cmp
leave
rol
mov
pop
cwtl
jae
dec
xor
outsb
mov
fwait
push
incl
or
rcrl
int3
scas
sub
mov
lret
inc
jb
xor
cmp
dec
idiv
mov
sub
int
stos
out
mov
mov
shll
lcall
xchg
fimuls
pop
mov
psraw
test
jg
cmp
pop
push
dec
clc
movsl
push
cmp
call
movsl
jbe
sbb
sub
inc
xchg
aam
dec
loopne
aaa
and
test
add
ljmp
inc
bound
movsb
xchg
xchg
fsubl
add
sub
jns
mov
jmp
xchg
jmp
inc
sbb
or
cld
fdivrl
and
jmp
mov
cmc
cmp
cltd
out
xor
in
loope
mov
faddl
mov
dec
call
inc
xor
inc
inc
or
pop
xchg
imul
int
cltd
fsts
mov
icebp
inc
packuswb
jecxz
in
add
or
adc
out
pop
faddl
jle
mov
cmp
adc
push
gs
adc
adc
shlb
xchg
cli
shrb
pop
pop
out
pop
and
inc
jmp
mov
fsubr
outsl
pop
xor
sub
ret
push
inc
sub
push
sub
ljmp
out
sub
insb
mov
mov
or
movsb
xchg
dec
movsb
pop
mov
stos
repz
push
fistpll
lea
jno
sarl
cmp
popf
or
into
dec
mov
pop
xor
pushl
addr16
or
sub
fwait
or
insl
daa
int3
stc
xchg
jmp
pop
sub
call
popa
aaa
enter
add
cmpsl
xor
jecxz
int
and
sbb
pop
jmp
lds
or
sbb
dec
jns
jl
add
mov
int3
sub
ljmp
mov
mov
andl
stos
xchg
adc
aaa
push
cmpsl
mov
adc
call
jno
lret
cmp
sbb
sub
jp
add
das
outsl
mov
loope
bnd
sbb
aam
lods
jae
jmp
mov
pop
dec
rorl
lret
arpl
push
push
jmp
inc
fmuls
out
inc
jp
mov
push
mov
stos
test
sub
mov
mov
xchg
fdivp
push
adc
outsb
add
call
jl
jle
adc
repz
or
push
repnz
lret
outsb
lcall
adc
pop
std
add
sbb
out
mov
mov
clc
popf
mov
push
sbb
inc
sbb
call
pop
lahf
ficompl
negb
dec
adc
add
cwtl
inc
mull
push
cmp
ljmp
jne
sarb
xchg
mov
test
les
cmpsl
idiv
fildl
jg
clc
pop
xchg
insb
test
lret
jmp
jmp
add
mov
mov
leave
pop
or
mov
sti
fmull
push
or
imul
xchg
cs
dec
mov
jnp
pop
bswap
pop
push
mov
pushl
aas
xchg
cli
mov
mov
inc
lahf
shrl
jecxz
hlt
in
mov
mov
test
jg
push
in
push
cmp
pop
popa
movsb
and
sub
pop
nop
das
push
mov
aam
jp
out
js
dec
lock
xor
push
cwtl
adc
xchg
cltd
sub
push
xor
movsb
cmp
scas
idiv
xchg
adc
inc
pop
sahf
inc
mov
clc
arpl
stos
cmp
orl
jmp
pop
and
jl
cmp
pop
add
jbe
pop
cmp
rcrb
stos
adc
xchg
shll
inc
sbb
push
add
fs
push
cltd
mov
or
out
clc
push
adc
cmp
or
push
mov
inc
loope
inc
lcall
addb
and
and
mov
pop
movsb
repnz
decl
pop
adc
cli
lret
outsb
inc
cmp
repnz
stos
ret
inc
lods
xchg
decl
push
repnz
repz
std
scas
jbe
pop
mov
insb
xor
cs
pop
stc
lcall
pusha
push
pushl
jge
das
adc
outsl
enter
adc
and
hlt
or
sbbl
jg
sub
mov
loop
mov
pop
mov
and
cmp
mov
push
ljmp
or
xchg
cli
jge
cmp
inc
decb
popf
lahf
xchg
call
addl
test
dec
xlat
fwait
or
cltd
mov
push
inc
loope
adc
add
test
aas
inc
push
arpl
inc
jle
clc
pop
lods
cmp
imul
cmc
inc
scas
dec
rorb
cmp
jbe
rol
fwait
out
das
sbb
mov
addr16
push
sbb
scas
jne
or
jnp
ljmp
pop
fimuls
mov
jmp
fs
dec
movsl
lds
cwtl
sarb
out
popa
outsb
push
dec
pop
lahf
stos
add
lahf
stc
sub
xchg
les
fcmovb
jmp
sub
cmp
push
dec
aam
aaa
js
xorl
ja
fidivs
push
enter
cmpsl
mov
call
xor
imul
neg
mov
xchg
dec
mov
xchg
mov
xchg
jmp
add
jl
sub
mov
mov
and
popf
xchg
jne
int
xchg
mov
dec
adc
sti
cmp
or
sbb
inc
fldl
pushf
lcall
repz
jno
decl
inc
into
lcall
jle
dec
pop
adcl
xchg
out
lret
and
jecxz
push
repz
call
add
jg
adc
jo
nop
and
imul
enter
dec
and
pop
mov
aas
scas
inc
cmp
cmp
push
mov
and
adc
ja
into
push
xchg
ljmp
clc
xchg
in
fnstcw
jmp
cmp
adc
out
jecxz
dec
stc
gs
xor
inc
je
iret
jmp
arpl
je
inc
iret
jl
scas
ror
pop
int
repz
push
scas
insl
pushl
addb
pop
mov
xor
outsl
sub
add
sbb
loope
mov
incl
std
sbb
out
cmp
pop
lods
xor
xor
out
xchg
add
or
insb
aas
leave
jo
push
movsb
lret
call
mov
or
inc
jcxz
sbbb
push
cmp
add
cmc
test
push
sub
incl
gs
push
subl
lock
insl
jl
sub
imul
mov
repnz
mov
mov
stos
cltd
imul
shl
int
in
xchg
enter
fucomp
mov
and
cmp
out
call
lds
push
mov
xor
sub
mov
xchg
mov
pop
sbb
pop
gs
jmp
push
add
cld
add
test
rcr
jns
add
adc
inc
mov
jmp
xchg
pop
pop
mov
lret
mov
jno
fdiv
mov
xchg
mov
and
sbb
dec
jmp
push
adcl
ret
jae
or
push
cmp
pushl
aam
xor
sub
and
inc
ret
lods
cmp
ja
cmp
mov
inc
sbb
xor
or
mov
in
xchg
push
sbb
js
add
jle
adc
inc
addb
shlb
int3
movl
mov
pushf
in
add
jne
xor
incl
xchg
lahf
je
jge
sub
jp
stos
inc
sub
sbbl
cmpsl
mov
xor
leave
outsl
cmp
add
cli
lods
testl
xor
cmp
inc
cmp
sub
ljmp
pusha
fwait
sti
jnp
mov
fisubl
jnp
in
mov
jbe
inc
lods
pop
adc
div
icebp
std
loopne
sarb
xlat
ror
lock
push
mov
cmp
loopne
movsb
sbb
into
cltd
cld
into
cld
sarl
pusha
imul
inc
repnz
xlat
mov
push
or
inc
scas
lods
xor
mov
les
stc
das
mov
incl
wbinvd
fcoml
leave
xchg
dec
je
xchg
gs
pop
add
rorl
mov
pushl
mov
shlb
pop
and
jp
inc
hlt
pop
jo
and
dec
mov
ljmp
dec
mov
dec
mov
icebp
cmpsb
aad
shrb
and
sbb
push
pop
outsl
xor
mov
pushl
js
arpl
mov
das
pop
cmp
pop
lds
or
test
incl
movsl
fdivs
mulb
mov
xor
andl
insl
sbb
mov
lcall
enter
jo
popa
mov
jle
or
push
push
xor
inc
cmp
in
xchg
and
inc
popa
bound
cmp
test
das
xchg
or
inc
call
sub
xchg
xor
pushl
int
sub
or
in
push
jle
mov
and
ret
jg
xor
and
pushf
mov
jmp
lret
push
loop
sbb
scas
adc
lods
pop
movsl
leave
push
int3
mov
add
xlat
pop
xor
lcall
xchg
adc
mov
sbb
mov
js
movsl
adc
das
hlt
bound
sub
repz
sbb
jmp
jmp
jae
pop
cmpsb
movsb
jne
js
test
aas
jmp
leave
pop
inc
shlb
dec
or
push
incl
pop
or
int
shrb
cld
cmp
in
dec
cmp
jecxz
dec
xchg
pop
jns
lea
add
sahf
fs
add
or
ficoml
jae
jmp
jnp
insb
lcall
inc
ja
scas
stos
jmp
nop
xchg
cmp
lods
mov
xlat
incl
repnz
popa
push
mov
or
test
mov
outsb
incl
insb
and
pop
outsl
ficompl
jecxz
lods
stc
aam
pop
stos
mov
xor
mov
inc
jp
jmp
test
lock
ret
nop
mov
inc
pop
push
push
gs
pop
xchg
scas
dec
loope
mov
xchg
fwait
int
call
sub
into
call
incl
jbe
mov
xor
jmp
test
dec
cmp
cmpsb
js
fs
mov
outsb
fcmovnbe
push
push
mov
mov
nop
fiadds
push
jno
loop
daa
inc
mov
stc
and
push
lea
mov
jecxz
aas
hlt
mov
or
rol
sahf
rol
subb
cmp
cs
mov
pop
mov
sar
lcall
adc
stos
cmp
mov
lea
lahf
movsl
cmp
repnz
mov
jmp
mov
int3
mov
adc
xchg
ds
pop
mov
xchg
aam
hlt
cmp
incl
pop
mov
jae
mov
mov
pop
fadds
aas
xchg
jg
sub
stc
mov
inc
int
fcmovnb
ljmp
imul
outsl
ret
movsb
fists
pop
push
sahf
push
ljmp
and
movzbl
mov
xlat
shll
mov
inc
sti
push
jns
call
movsl
sbbb
or
or
inc
cmp
xor
gs
and
out
xor
and
call
push
and
stc
shll
push
and
sarl
xchg
leave
jb
and
mov
in
into
outsb
sti
test
push
add
dec
popa
pusha
pop
adc
adc
fcoml
jmp
lret
mov
mov
jbe
sbb
aaa
sbbl
or
push
gs
mov
out
add
mov
andl
cmp
out
mov
xor
and
mov
jmp
xor
addr16
push
hlt
mov
arpl
lods
cmp
mov
insb
and
loopne
push
arpl
das
fcmove
inc
mov
jl
push
adcl
gs
imul
pop
lods
jl
dec
inc
das
or
pop
lea
mov
inc
xor
jp
cltd
nop
incl
shrl
fstps
mov
enter
mull
out
lahf
mov
adc
mov
jmp
pop
jle
xchg
adc
cmp
mov
mov
insb
scas
aam
fstpl
es
xor
cmpsl
shlb
ret
xchg
in
or
add
aas
inc
fistl
loop
call
test
or
rorl
fwait
adc
aad
ja
mov
dec
pusha
mov
lcall
sub
cmp
call
adc
sbb
les
jmp
nop
stos
cmpsb
jo
out
fucomp
insb
pop
mov
push
out
push
mov
cmp
cmp
adcb
lcall
into
mov
cmpsb
je
push
aam
cld
mov
mov
push
cmp
cli
repz
insl
lcall
inc
imul
xlat
cwtl
inc
or
pop
jno
push
ljmp
shll
decl
push
sub
pop
push
sbb
add
adc
in
mov
cmc
scas
shll
add
jmp
and
popl
aas
ja
nop
jl
ds
add
inc
xchg
add
outsl
jnp
pop
pop
decl
lods
jo
xchg
jg
jmp
push
jg
imul
pcmpeqb
cmp
jb
hlt
sbb
mov
dec
fwait
mov
and
repz
dec
repnz
cmp
add
and
cmp
pushl
push
in
inc
in
add
insl
lock
mov
idivl
addr16
adc
ljmp
imul
mov
les
js
daa
std
sub
in
jp
push
adc
incl
xor
dec
lock
loope
stos
test
xlat
dec
mov
loop
ljmp
sbb
incl
pop
decb
adc
pop
sub
shll
ss
mov
addb
addr16
jmp
cli
sbb
or
adc
insl
and
adc
push
dec
mov
loope
push
pushl
push
inc
dec
pop
mov
push
les
and
xor
adc
xchg
ljmp
pushl
jg
outsb
mov
arpl
daa
or
insb
sub
imul
stc
add
iret
rcr
xlat
xlat
or
test
jle
sti
dec
popf
cmp
mov
ret
sub
mov
decl
cmpsl
std
inc
sbb
push
push
and
push
pop
sarl
dec
lcall
xor
roll
gs
cmc
mov
popa
mov
mov
add
mov
je
fistl
jmp
dec
sub
sub
orb
inc
inc
clc
ss
jns
push
call
mov
decl
fstp
stc
cwtl
add
iret
inc
xor
nop
pop
jge
xchg
push
insl
pusha
mov
pusha
decl
xor
push
or
mov
add
roll
jnp
pop
ljmp
lock
mov
sbb
push
mov
leave
xor
xchg
mov
ds
dec
sub
xchg
push
mov
stc
sbb
jecxz
testl
fcomps
addb
call
std
push
daa
cltd
push
cltd
lds
xchg
xchg
pop
in
lock
cltd
scas
mov
fdivrs
test
call
addl
push
imul
cmpl
scas
inc
inc
dec
pop
push
add
popf
fisttpll
ljmp
mov
ss
jge
mov
in
sbb
pusha
cmp
or
jecxz
incl
jo
hlt
aad
into
fisubrs
mov
adc
popf
in
subb
loope
pusha
fnstenv
incl
xor
push
cwtl
addr16
imul
adc
inc
insb
iret
lcall
aad
cltd
in
fsubp
mov
sti
dec
loop
mov
mov
cmpsb
fs
stc
dec
xchg
sahf
pop
mov
pusha
bound
jg
or
push
mov
scas
cld
popf
sbb
pusha
decl
js
dec
arpl
cmp
mov
ret
jne
jnp
and
call
adc
out
and
ret
or
sub
jmp
push
adc
jp
cmp
pushl
rcr
mov
gs
sbb
mov
shrb
mov
stos
std
dec
jmp
cmp
or
lods
add
jecxz
xor
aaa
inc
fs
out
out
pop
lret
rorb
jge
lea
int
push
xor
jno
pop
ffreep
xchg
ficoml
into
add
decl
js
stc
jnp
into
mov
out
mov
dec
pushf
mov
out
movsl
xor
cmp
sbb
dec
aad
xchg
jnp
cmp
pop
aas
fldl
mov
popf
cmpsb
xor
jmp
dec
test
mov
pop
popa
enter
mov
ds
ja
int3
mov
mov
jnp
test
je
adc
in
fistps
jo
ss
sub
inc
jbe
gs
fistpll
fbstp
fimull
aas
sub
sbb
dec
mov
lods
pop
jo
jecxz
xchg
jno
add
call
or
dec
stos
pop
popa
andl
jae
mov
pop
pop
pop
sub
int
pextrw
xchg
incl
mov
repnz
flds
push
xlat
push
in
stc
sbb
push
sar
call
lods
pop
push
and
add
xor
mov
jp
dec
div
aaa
test
cmc
dec
cli
inc
cmp
sub
fscale
pushf
xchg
shll
pop
stos
adc
stos
cltd
push
sbb
into
or
decl
sbb
push
cmp
shrl
jne
jge
imul
inc
cmp
mov
ljmp
pusha
sarl
push
pop
rolb
ss
gs
pop
fstpt
mov
sbb
mov
dec
fcompl
adc
inc
inc
testl
fcoml
adc
mov
insl
loop
pop
std
inc
cltd
jmp
ja
xor
pusha
insl
xchg
int3
dec
in
adc
lret
lret
inc
jmp
aas
cli
lret
adc
sub
scas
enter
fisubrl
dec
xor
cmp
jp
jmp
call
bound
test
movsl
dec
push
lock
ja
pop
jns
sbb
add
incl
test
push
push
outsb
in
mov
add
and
ror
rcrb
ja
push
enter
insl
call
inc
icebp
inc
jl
movsb
fcoml
cs
xchg
inc
repnz
inc
stos
adc
jne
mov
sub
cmp
bound
mov
mov
out
mov
pop
mov
add
or
mov
mov
xor
incl
jmp
fdivl
mov
outsl
push
mov
xor
out
push
add
ret
mov
call
mov
cltd
int
ss
das
jo
jle
mov
dec
fidivl
xchg
push
pushl
xor
inc
or
cmpl
mov
xchg
fnstcw
cmp
mov
call
fsubs
sti
cmp
sbb
negl
xor
mov
loop
into
push
push
pusha
lods
call
ds
clc
nop
in
mov
mov
cmc
and
rol
cmpb
ss
icebp
mov
sbb
pushl
jge
inc
mov
and
imul
inc
incl
and
test
push
jmp
sahf
mov
aad
fstpt
cmpsb
dec
inc
mov
imul
dec
and
jmp
xor
cmp
pusha
push
add
out
arpl
jmp
aad
or
sarb
lcall
pop
stc
cmp
mov
mov
outsl
sbb
les
mov
call
std
cltd
fildl
sbb
or
pop
and
mov
xor
scas
fistpl
mov
xor
ret
ja
movsb
pop
cwtl
cwtl
or
jns
mov
xor
fistpll
or
mov
pop
sub
push
loope
ds
cld
jo
ror
imul
pop
and
mov
cmp
xchg
xchg
mov
cltd
and
jl
cltd
scas
mov
lahf
flds
dec
imul
mov
repnz
mov
out
icebp
or
jge
xor
xor
cwtl
mov
jb
ljmp
insl
lds
lret
jmp
dec
jno
pop
outsb
in
jp
sub
movsb
jge
leave
cmp
cmp
pop
dec
adc
js
test
stos
bnd
imul
ss
incl
xchg
jmp
leave
or
cmp
xchg
fbld
jb
cmpsb
jmp
sub
add
pop
mov
and
popf
mov
cmp
jae
jg
cmp
movsb
je
jbe
jbe
xchg
or
sub
xchg
sub
lcall
lcall
or
and
pop
mov
arpl
in
daa
inc
je
sarb
mov
sbb
fcos
pushl
pop
xor
repnz
rclb
pushf
inc
push
cmpl
cmp
and
aam
dec
fisttpl
add
decl
inc
lcall
jecxz
clc
mov
pop
xchg
sbb
lock
repz
decl
sbb
sub
dec
jbe
fdivl
repz
pop
adc
in
fs
subb
inc
call
mov
mov
fdivrp
push
mov
scas
pop
xchg
push
dec
jl
lods
inc
jns
sti
arpl
add
mov
xlat
xor
cltd
xor
sub
fs
loope
out
xchg
insl
pop
sti
test
test
hlt
lods
pop
jmp
mov
out
cmpsl
or
shl
or
decl
lds
popa
loope
stos
jg
sbb
xor
loop
mov
push
or
cmp
and
pushl
aaa
push
add
shlw
push
sub
xchg
fnsave
push
inc
lds
push
xchg
incl
lahf
mov
sub
and
lret
dec
sub
xchg
cmp
ss
sbb
fdivr
call
daa
push
int3
jo
cld
cmpl
mov
rolb
xchg
mov
lds
ljmp
stos
repnz
xor
push
in
ljmp
or
sarl
and
call
cmp
xchg
xchg
push
imul
cmpsl
adc
push
xchg
mov
nop
js
mov
mov
push
mov
add
cmp
add
aas
lret
pop
push
push
mov
notl
loope
mov
dec
inc
mov
mov
mov
jmp
dec
movsl
scas
lret
dec
mov
lret
xchg
pop
xchg
std
pushl
xor
pop
movl
jno
jg
sbb
or
lea
stos
int
incl
pop
aas
sahf
jae
sbbl
dec
sbb
mov
mov
gs
mov
call
adc
lret
cmp
or
mov
and
mov
decl
dec
or
mov
push
mov
test
push
cwtl
mov
jg
xchg
fcomps
lcall
sbb
test
xlat
enter
cltd
push
loopne
movsl
outsb
mov
xchg
xchg
ds
push
mov
mov
stos
imul
xor
mov
sbb
inc
push
fisttps
lea
out
call
icebp
shll
jns
pushf
sub
push
pop
mov
fldenv
fistl
int
jmp
mov
pop
jne
pop
lods
inc
pop
dec
sbb
mov
adc
mov
add
ljmp
sub
dec
cmp
lods
in
xchg
xor
inc
imul
call
leave
sub
test
imul
dec
movsb
or
je
jb
pushf
ljmp
xchg
jnp
jno
dec
lods
xor
pop
push
push
int
stos
scas
mov
js
ret
cmp
add
cltd
hlt
xchg
popa
pop
push
clc
mov
and
xchg
dec
inc
add
push
lock
mov
mov
jmp
fbstp
mov
mov
mov
test
das
add
fiaddl
or
lcall
mov
sub
gs
push
aad
fisubs
cmpsl
dec
into
cmpsb
cmpsb
cmp
decl
int3
lds
pop
jmp
sub
push
mov
xor
xchg
aad
jo
cmpsb
lret
test
pop
rcrl
jmp
adc
mov
and
jle
xchg
je
xchg
divl
cli
mov
call
inc
sbbb
mov
jge
or
cmp
adc
mov
mov
ljmp
xorb
dec
insb
lcall
dec
jns
mov
dec
cwtl
sarb
repz
repnz
decl
sub
dec
or
fwait
icebp
fidivl
repnz
and
xor
mov
lcall
xor
mov
xchg
fstps
mov
hlt
in
add
or
clc
movsb
pop
xor
or
jmp
pop
test
xchg
ret
int3
out
out
loope
loope
sub
popa
hlt
xchg
cwtl
loop
fs
cwtl
cmp
mov
call
int3
xchg
ds
jge
dec
jge
imull
and
adc
loope
mov
inc
mov
lcall
aaa
xor
leave
mov
mov
dec
out
jp
xor
adc
fistpl
ljmp
adc
xchg
out
inc
mov
jle
xchg
testl
clc
mov
cld
out
lret
scas
imul
wbinvd
mov
push
xorb
pop
add
nop
outsb
popw
rorl
fbld
add
push
je
add
push
test
test
mov
push
jg
scas
shll
aam
cltd
jmp
push
xchg
pusha
arpl
call
and
or
cli
push
pop
inc
sbb
call
sub
rolb
scas
loopne
push
xchg
fsubr
mov
jno
xor
pushl
mov
push
push
arpl
fisubl
ja
pop
in
sub
jge
aas
call
fiaddl
sbb
jb
pushf
push
das
sbb
sub
pusha
sbb
sbb
pushl
shll
mov
mov
pop
iret
imul
arpl
nop
movlhps
mov
push
jge
shlb
jmp
push
pop
stos
mov
test
bound
pop
cli
rcrl
leave
cltd
pop
fiadds
inc
jo
call
push
inc
sbb
sbb
pop
jmp
fidivrl
sub
stos
mov
vmwrite
decl
and
cmp
ret
pop
jnp
mov
push
addl
out
or
clc
rcrb
ljmp
mov
inc
push
jo
inc
flds
push
adc
insb
ljmp
fldt
fs
jns
aas
test
call
mov
je
mov
xchg
jo
pushl
dec
sbb
xor
push
fnstsw
mov
jo
stos
sbb
out
lret
mov
decl
cltd
inc
cmpsl
das
mov
mov
sbb
out
cmpsb
jnp
stos
adc
cs
fdivrp
jmp
mov
lret
jmp
cmp
in
push
or
icebp
fistpll
lcall
xor
rcll
movsb
sti
repnz
mov
aaa
in
adc
pusha
ds
inc
in
mov
push
rcrl
inc
incl
lods
push
cmpsl
mov
mov
jle
mov
mov
je
dec
in
sarl
dec
mov
popf
inc
xorb
insb
mov
xlat
ljmp
push
loope
push
dec
repnz
loop
imul
add
data16
fistl
jmp
int3
push
inc
shl
dec
adcl
subb
add
pop
shlb
sub
mov
ljmp
pushf
les
inc
lcall
cmp
out
out
imul
jb
pop
ds
cmp
cwtl
jp
push
movsb
push
pop
aas
roll
popa
movb
loope
cmc
stc
dec
add
decl
mov
mov
adc
lds
xchg
jmp
cltd
mov
adc
cmp
adc
icebp
stos
aas
mov
and
jo
inc
jbe,pt
call
xchg
shl
incl
sub
outsb
insl
dec
pop
test
sub
sahf
leave
andb
iret
iret
add
iret
sub
mov
cmp
pop
mov
data16
std
rolb
hlt
add
fbstp
jmp
push
push
enter
outsl
cmpsl
or
pop
mov
jle
adc
insl
insl
push
lcall
call
fcompl
mov
into
mov
push
ljmp
xlat
pop
mov
mov
loop
ror
repz
repz
rcrb
add
sbb
scas
jge
sahf
out
fsubr
pop
ss
inc
sub
aad
scas
ds
jecxz
rcrl
mov
cmp
leave
dec
ds
pushl
mov
testl
dec
dec
outsb
push
lret
in
jne
mov
sub
xor
jmp
pop
pop
lods
lahf
aas
sub
pop
mov
loop
mov
hlt
cmp
mov
ja
xor
mov
sti
lcall
fwait
outsb
outsb
lds
inc
aas
iret
cltd
rep
mov
lret
daa
sub
imul
repz
cmpb
xor
pop
push
push
shl
mov
test
xor
lcall
int
push
cmp
stos
jecxz
scas
push
or
scas
std
xlat
and
and
and
jmp
cmp
sub
cmp
in
xor
sub
pop
xlat
push
jecxz
ret
fstp
xor
call
das
test
mov
imul
ja
sbb
rcrb
cli
int3
adc
rclb
sub
call
adcb
pop
jl
push
rorl
sub
mov
scas
iret
dec
pop
int3
or
and
inc
sbb
cmp
cwtl
mov
dec
icebp
sbb
movzwl
stos
test
inc
jb
icebp
test
fimull
inc
mov
ja
int
jns
sub
pop
jb
lret
mov
mov
push
dec
push
pop
jmp
lahf
dec
push
or
xor
inc
in
outsb
cmc
ds
sbb
lahf
jg
or
call
or
popa
nop
xchg
dec
pop
mov
pop
test
jne
pop
cmc
mov
jge
xchg
push
and
incl
shlb
pushf
jg
add
xchg
js
xchg
out
cli
xlat
dec
outsl
xor
popa
push
fisttpll
sub
xor
or
test
xchg
jecxz
xchg
xor
mov
aaa
inc
dec
clc
jne
scas
test
sbb
in
and
fwait
or
bswap
decl
push
pop
add
fmul
test
mov
cmp
xchg
inc
adc
mov
lcall
inc
sub
test
loope
cmp
movsb
mov
xchg
mov
or
dec
ljmp
aam
daa
test
insl
ret
add
jno
ret
cmpsb
out
dec
lods
inc
jns
push
cmpb
stc
test
pushl
sbb
test
add
jle
ss
scas
rclb
inc
jb
ds
call
cmp
inc
pop
fucomip
gs
rcrb
or
ja
push
xorb
gs
js
ds
ljmp
mov
mov
cmp
into
adc
pop
mov
adc
adc
sbb
pushf
aaa
into
aas
xor
ficoms
sub
lds
test
xor
aam
sbb
cmp
mov
incl
aad
or
cwtl
push
loopne
in
or
into
push
sti
ret
std
insb
rcll
pop
sbb
ljmp
xor
bound
sub
daa
dec
imul
push
xchg
inc
das
jo
push
cmp
push
jecxz
sbb
fsubr
push
add
fildll
push
scas
cs
jmp
ror
xchg
push
sarl
jne
sub
dec
xor
sar
jl
adc
push
fstl
jmp
push
jge
mov
ficompl
shlb
mov
iret
fcoml
inc
cmp
mov
xor
pop
lds
mov
out
imul
insl
fmuls
jecxz
call
icebp
test
push
lahf
es
in
mov
pop
sub
into
fdivrl
push
pusha
mov
inc
pushl
sbb
mov
outsb
mov
pmaxsw
idiv
dec
jecxz
sbb
cmpl
sub
lcall
jns
inc
and
pop
in
icebp
sbb
ret
sbb
inc
nop
pop
pop
leave
inc
test
push
test
inc
ljmp
mov
bound
lret
in
cltd
std
mov
fldenv
cmp
ds
pushf
cmp
mov
flds
lock
mov
mov
mov
in
mov
xchg
insl
stc
popf
xchg
clc
or
aaa
clc
xchg
cmpb
sti
jne
je
cmpsb
mov
call
lahf
and
rorl
mov
push
stos
outsb
movsl
xchg
mov
mov
andl
cmp
xor
outsl
icebp
jne
and
jbe
inc
and
inc
jg
add
rcrb
gs
das
push
sub
jp
cmpsb
adc
or
aam
push
or
cmc
les
sbbl
insb
jge
dec
push
sti
fucom
or
lods
push
hlt
xchg
ds
xchg
cltd
cmpl
mov
add
nop
pushl
mov
movl
in
dec
mov
rcrb
sub
imul
aam
movsb
jnp
pushl
je
repnz
mov
arpl
sbb
jbe
sbb
sbb
push
mov
cmp
push
daa
push
fstps
mov
mov
cmp
pushl
cmp
xor
inc
stos
mul
or
pusha
add
cld
ljmp
decl
nop
cmpl
fimull
popa
andl
inc
test
out
sbb
jae
pushl
mov
jne
adc
mov
lcall
sub
stos
test
stc
xchg
or
stc
cli
mov
pop
mov
sub
insb
in
rolb
inc
ret
lcall
insb
sarb
lea
and
pop
add
lds
iret
adc
mov
mov
ljmp
mov
test
mov
push
cmc
insl
mov
cmpsl
or
mov
adc
stc
negb
pop
xor
mov
shrb
inc
and
xchg
inc
lahf
imul
incl
iret
aam
stos
mov
icebp
push
mov
mov
mov
nop
pop
fdivr
cmp
into
cwtl
adc
mov
pop
out
not
movsl
or
mov
push
push
or
decl
mov
mov
jno
dec
rcll
ror
cltd
loopne
push
bound
mov
ljmp
push
sbb
shl
add
and
popf
test
frstor
xchg
sbb
lcall
leave
loop
repz
xor
jne
cmpb
cmpsl
cmp
jo
xchg
decl
sbb
shr
ficoml
pop
mov
clc
xor
fistl
adc
jnp
push
lahf
dec
cli
cwtl
je
scas
ljmp
daa
into
mov
rorb
cld
fldt
lea
mov
inc
add
mov
daa
push
pop
mov
cli
test
jmp
stos
or
iret
xor
xchg
mov
add
lods
lds
es
ljmp
mov
shll
xor
sbb
jb
mov
stc
and
inc
mov
call
out
repnz
insl
scas
sub
xchg
rolb
rol
cmp
jle
push
xor
dec
daa
ljmp
mov
mov
add
push
lret
jmp
xchg
stc
sbb
fmuls
or
lock
andb
sbb
push
push
sbb
or
test
stos
jp
inc
aam
sub
xor
jecxz
mov
scas
pop
mov
loope
ljmp
cmp
mov
inc
push
lds
sbb
and
add
cmpsb
sub
loope
pop
mov
in
inc
lock
dec
cmc
into
jbe
pushf
sbb
ret
cmp
movsl
xchg
jmp
in
inc
cmp
cmpsb
jbe
push
xchg
sub
mov
inc
stos
mov
repz
pop
test
call
sbb
adc
jae
loop
ljmp
enter
xchg
sub
adc
xchg
cmp
cmp
push
in
lods
add
dec
mov
mov
jge
outsw
pop
out
pushf
adc
pop
lcall
cmp
sti
repnz
jl
add
dec
movsl
das
roll
mov
adc
push
jmp
pop
sbb
jnp
or
and
xor
mov
imul
out
pop
xlat
mov
mov
sub
dec
xchg
sti
dec
lret
loopne
aam
leave
ljmp
cmp
adcb
out
test
lcall
stc
scas
jne
mov
pop
push
adc
sub
jp
leave
adc
lods
scas
leave
xor
clc
jmp
mov
scas
pop
and
lock
outsb
cli
jb
sbb
clc
push
das
fstl
mov
aas
std
in
sbb
lods
ljmp
inc
mov
call
mov
add
jle
xor
xor
pushf
lcall
sub
call
addb
mov
pop
push
dec
cs
inc
and
mov
pop
in
dec
push
mov
xor
imul
loope
or
adc
js
add
dec
jmp
dec
cmpsb
xchg
hlt
aam
int
push
hlt
adc
into
in
xchg
pop
mov
jl
aam
decl
iret
test
imulb
cpuid
addr16
jmp
bound
test
sbbl
cmp
leave
cmp
add
adc
lcall
mov
push
push
push
fisubl
incl
shl
jmp
aaa
shrl
pop
jmp
stos
jle
cmp
loopne
or
incl
inc
in
leave
stc
fmul
sub
sub
inc
and
dec
jmp
sbb
cmc
mov
test
adc
jecxz
add
aas
add
jge
in
push
mov
sub
pusha
mov
xor
popf
mov
mov
leave
mov
mov
adc
hlt
rcl
stos
sarl
xlat
cmpsb
jno
xchg
push
call
in
mov
push
rolb
pop
lret
cli
xchg
add
in
sub
js
cmp
xor
lock
das
sbb
pop
mov
mov
pop
loopne
sub
push
push
pushl
jne
rorl
mov
pop
mov
jno
repnz
es
cs
sub
mov
fmull
fs
add
and
fwait
lock
mov
xor
dec
not
sbb
mov
mov
lcall
and
jle
or
xchg
or
add
andl
pop
or
sbb
cli
fdivs
sbb
js
test
pushl
mov
dec
mov
int3
lahf
data16
bound
fmull
rcrb
jmp
cmp
add
subb
pop
jbe
jp
pushf
sarb
sub
xor
sahf
nop
sub
js
sbb
into
popa
jecxz
das
sub
insb
imul
mov
mov
call
clc
cld
loope
xlat
repnz
jns
xor
adc
jmp
sbb
incl
xor
pop
inc
mov
jbe
adc
pop
shrl
adc
and
lcall
cld
scas
mov
aaa
adc
jg
sbb
inc
int
push
rcrl
in
dec
inc
sahf
clc
mov
add
ret
adc
repnz
sub
clc
dec
popf
push
imul
mov
adc
cmp
jecxz
mov
out
push
lods
fisttpll
nop
int3
mov
repnz
pushl
fmuls
loope
pop
pop
jmp
lock
sbb
adc
divl
test
ljmp
inc
fdivrl
out
mov
add
and
sub
add
jmp
inc
dec
lcall
mov
cmp
fldenv
out
xchg
pop
clc
pop
jae
pop
ret
pop
jnp
mov
push
pop
cmp
ficomps
movsl
imul
sub
fwait
xchg
cltd
sahf
out
jmp
fwait
shl
dec
xlat
pop
inc
pusha
mov
aam
shrl
or
rorb
add
test
jmp
cmp
pop
in
test
mov
and
or
or
push
adc
ja
pushl
stc
sub
mov
insl
pop
loop
mov
mov
fists
pop
leave
xchg
dec
sbb
neg
imul
incl
xchg
xor
xchg
arpl
mov
xchg
pop
int3
test
inc
jo
jmp
add
aam
jl
or
ljmp
dec
sbb
jle
jp
mov
pop
mov
mov
es
jae
out
call
movsb
cwtl
test
cmpb
jge
das
lcall
fs
inc
int
lods
imulb
call
push
pop
xchg
xchg
stc
mov
mov
sahf
cmpxchg
or
cmpsb
sub
out
movsb
adc
pop
inc
add
call
or
mov
arpl
outsb
das
sbb
push
stos
loop
fucomi
mov
pushl
cmc
xchg
add
xor
iret
mov
iret
push
jns
sbbb
jg
mov
sub
data16
jmp
pop
mov
jbe
sub
add
or
cmp
cmpsb
xlat
test
mov
in
push
test
push
aaa
mov
sti
xchg
mov
xchg
jne
int
incl
pop
mov
fistpl
outsl
mov
js
lahf
int3
cmc
ss
pushl
bound
adc
sub
push
sub
xchg
adc
push
mov
das
or
ljmp
mov
fildl
mov
rcl
stc
mov
aas
inc
add
je
inc
cs
mov
movsl
and
pop
cmc
pop
xchg
add
fstl
mov
pusha
mov
stc
pop
je
push
mov
sub
shr
loopne
lret
int
fistpl
aaa
jecxz
adc
ja
mov
jmp
in
sbb
cmp
dec
test
out
cmpb
fidivs
test
ljmp
call
push
fcompl
outsb
push
aam
lods
lahf
cmp
pop
daa
je
push
pushl
mov
mov
or
pop
adc
movsl
loopne
test
subl
test
or
mov
ficompl
mov
cltd
xorb
pop
mov
mov
and
adc
test
out
movsl
int
test
enter
test
mov
cltd
push
pop
decl
out
and
jl
mov
cmp
inc
fwait
jns
xor
in
jge
test
cmp
dec
stc
xchg
insb
dec
shll
lcall
mov
scas
mov
dec
adc
andl
jns
jne
call
sub
in
xchg
stos
out
std
test
xor
movsb
sbb
push
bound
push
xchg
mov
std
subl
pushl
sbb
int
xor
jmp
clc
cs
cmpsl
push
or
xchg
sub
insl
es
mov
in
dec
out
dec
pop
sbb
sub
jecxz
inc
add
testl
xor
mov
jp
and
xor
mov
movsb
mov
mov
add
mov
lcall
movb
cmp
sub
inc
aas
and
inc
stos
pop
gs
ret
sub
pushl
scas
pop
mov
jmp
mov
xlat
lahf
stos
adc
cmpl
mov
movsl
sarl
stos
std
test
lahf
dec
nop
adcb
mov
or
mov
pop
inc
incl
fidivrl
dec
hlt
sub
add
addr16
ret
fs
xlat
mov
decl
hlt
test
cld
aad
sub
outsb
scas
dec
in
mov
cmc
sbb
call
cltd
fs
clc
icebp
in
add
lret
stc
jg
push
fmulp
ret
dec
pop
dec
repnz
jmp
push
std
sbb
inc
pop
adcb
insl
sub
mov
loopne
ss
add
je
lcall
les
fldt
in
push
icebp
xor
lods
adc
loopne
in
inc
sbb
repnz
call
dec
ljmp
hlt
sbb
sub
push
fisubs
cmp
mov
in
mov
sub
lahf
mov
decl
mov
sub
xchg
popf
sub
mov
sahf
inc
pop
xchg
pushf
orb
pushl
mov
lret
ficoms
cmp
into
ds
ror
or
cmc
xchg
shrl
push
xor
push
lods
aam
xchg
sbb
cli
xor
mov
xchg
mov
movsl
pop
or
insb
mov
rol
std
inc
call
ja
and
ret
jmp
jbe
inc
loopne
pop
pop
mov
les
cli
bound
ljmp
cli
mov
push
out
loop
repnz
popf
mov
cld
jmp
and
xor
sub
dec
or
decl
or
rorb
sub
adc
mov
fisttpl
pushl
test
roll
lcall
mov
int
mov
int3
lahf
cmp
jmp
jmp
or
shlb
jl
push
je
aaa
lahf
pop
cmpsl
in
ljmp
inc
xor
adc
and
int3
push
arpl
and
cli
adc
enter
fwait
or
ljmp
xor
jno
cmp
xchg
sub
cmpsl
iret
cli
inc
lea
push
adc
fs
aas
mov
push
jne
xchg
insb
add
test
bound
loop
std
xchg
incl
adc
dec
inc
mov
pushf
lods
pushf
adc
add
pop
loopne
add
pop
cld
cmp
jge
ja
lods
repnz
jae
in
pop
jl
mov
xlat
sbb
fnstcw
cmp
ljmp
cmpsb
or
lret
jnp
cli
jno
dec
mov
mov
fidivrl
xchg
fstpt
inc
sahf
dec
cwtl
movsb
cltd
fs
ljmp
xchg
push
cmp
xchg
idivl
pop
sub
push
cmc
mov
fwait
jmp
cmp
push
jl
das
dec
xchg
jge
stos
dec
mov
ficoml
sbb
inc
xlat
ljmp
or
jb
ds
iret
xchg
fimull
movsb
stos
xchg
dec
jg
outsl
pop
insl
gs
inc
sub
push
mov
lods
sbb
and
mov
and
sbb
cmp
out
outsl
ss
data16
mov
addb
pushl
shl
add
push
movsl
cmp
dec
sar
test
mov
mov
jmp
adc
pop
outsb
ror
or
mov
loope
cmp
movsl
mov
lcall
mov
mov
into
mov
lahf
testl
push
xchg
shrb
popf
maxps
fisttpll
inc
xor
jmp
mov
mov
pushf
sbb
and
cmp
call
dec
adc
cmp
fld
pop
fsubr
jg
cvtps2pd
bound
add
xchg
test
jmp
stos
lods
aad
pop
test
hlt
push
add
and
add
in
sti
add
stos
mov
incl
or
sub
addr16
cli
sub
dec
or
lcall
xchg
sub
outsb
jae
out
ret
push
lds
js
push
inc
xor
subl
pop
push
shrb
shl
je
ljmp
mov
clc
inc
idiv
cli
push
data16
jno
mov
mov
pop
movsb
loope
inc
xchg
stc
stos
push
adc
jp
addr16
push
outsl
xor
dec
pushl
loope
aaa
orl
je
and
out
nop
fisubl
test
mov
stos
dec
rorb
jae
inc
in
enter
xchg
jne
in
fnstcw
push
fwait
xchg
inc
xor
stos
gs
icebp
jmp
push
add
xchg
imul
adc
out
dec
lret
js
addr16
lods
ja
sahf
fdivrl
incl
push
mov
mov
dec
inc
sti
xor
cmp
jl
or
and
pop
ljmp
mov
imul
popa
dec
mov
stc
shr
mov
jl
and
adc
push
cmp
stc
std
das
jl
sbb
dec
dec
stos
icebp
xchg
jo
xor
lods
jnp
imul
shll
xchg
ja
aaa
imulb
fisttpl
mov
mov
jmp
push
and
add
inc
insb
loop
sbb
mov
mov
in
mov
ror
lcall
and
dec
cmpsl
or
lcall
dec
xor
cmp
std
sbb
jl
adc
je
cmp
and
cmp
xchg
lea
outsb
aas
pop
test
incl
loopne
xor
test
gs
out
jbe
popf
or
pushl
stos
jle
popf
jae
scas
fiaddl
cmp
inc
push
je
mov
ret
mov
cli
cmp
sbb
cli
sbb
mov
js
mov
das
push
movsl
adc
mov
push
sub
pushl
and
push
les
lahf
pop
dec
mov
and
inc
movsb
jle
sub
call
adc
seta
pop
jb
jo
repz
mov
scas
loopne
adc
pop
rcr
jecxz
lcall
jg
mov
pop
leave
das
pop
push
sti
pop
mov
test
loope
in
out
pop
std
jle
pushl
inc
pop
enter
ljmp
sub
push
mov
decl
cmp
outsl
add
fwait
cmp
repnz
insb
test
mov
subb
lcall
mov
cmpl
xor
pusha
jno
mov
pop
aas
mov
lods
incl
je
ficoml
outsb
pop
idivb
insl
rol
xchg
mov
add
adc
outsl
push
out
lcall
dec
cmp
repnz
pop
sbb
cmp
loope
sbb
int
in
cmova
xchg
pop
fisttpll
out
sub
ficomps
push
icebp
add
push
fadd
inc
jle
fs
dec
int3
mov
add
mov
call
xchg
enter
test
cwtl
cmp
mov
test
mov
push
mov
pushl
ljmp
sbb
lret
ds
paddb
mov
xchg
dec
pop
ljmp
mov
pop
stos
loop
repz
jne
aas
out
pop
ret
inc
pushf
push
lock
xlat
pop
jmp
or
stos
add
fsubr
rcll
dec
xor
cs
fidivl
in
jg
mov
outsl
push
jmp
pushl
fwait
inc
jns
repnz
enter
icebp
insb
test
imul
cmp
fisttpll
int
inc
xchg
fsub
scas
xchg
cmp
xor
pushf
push
push
xchg
mov
pop
out
loopne
in
fnstcw
movsb
adc
ret
orb
mov
jmp
adc
and
insb
adc
add
and
mov
daa
push
das
cmp
cmp
incl
fmuls
stc
mov
mov
inc
repz
sbb
lret
push
dec
and
sub
call
ss
push
add
lods
push
add
repz
loop
dec
and
sub
xor
inc
loop
sub
incl
pop
adc
into
add
xlat
nop
int
push
imul
jmp
ret
push
test
clc
ljmp
ljmp
lret
cli
ss
mov
pop
xor
mov
mov
add
xlat
add
push
sahf
test
jmp
aaa
jmp
pop
sub
popa
mov
jo
xchg
mov
loopne
popf
mov
sbb
pop
fdivr
call
jg
addr16
rcr
in
push
sub
test
fwait
cmpsb
stos
inc
int
inc
cmpb
dec
popf
mov
jl
je
sti
adc
pop
mov
daa
scas
iret
mov
pop
lcall
pop
sbb
ljmp
roll
mov
shrb
add
js
xchg
subl
jmp
xor
leave
loopne
pop
xlat
xor
or
push
add
mov
clc
xlat
xchg
stos
mov
fcomip
push
leave
pushl
fidivrl
xchg
add
push
je
in
fisubrs
mov
xchg
mov
inc
pushf
out
cmp
popa
or
popf
sahf
adc
mov
jbe
cmp
jmp
pop
orb
pop
push
mov
jbe
call
jg
mov
fsts
mov
in
inc
mov
movsl
loop
movsb
push
pop
and
cli
cmpsl
lea
xor
fldenv
fdivl
leave
std
decl
movsb
je
lcall
and
mov
xlat
lods
movb
loope
mov
jmp
ljmp
js
mov
add
call
jae
or
mov
cmpsl
sti
sub
jg
cmp
jb
xor
xchg
imul
add
fcoml
rorl
pushl
cmpl
outsl
mov
lods
jo
gs
in
int3
ret
mov
aas
lods
lods
ja
fsubrl
sub
out
ljmp
loopne
aam
aaa
jne
nop
imull
xchg
xchg
addr16
incl
cwtl
inc
sub
add
sarb
mov
sub
scas
push
adc
and
call
jmp
xor
push
xor
inc
mov
xchg
push
repz
lea
jmp
lods
inc
jne
cld
js
or
rol
inc
sti
add
adc
idiv
jmp
int
push
mov
decl
aaa
pop
addr16
jns
test
rcrb
insb
inc
xor
mov
pushl
scas
xchg
and
and
jbe
insb
lahf
cmpl
and
sahf
sahf
fnsaves
incl
mov
ljmp
data16
mov
aas
ja
inc
jg
sbb
out
dec
shll
and
mov
test
sbb
jmp
xor
push
les
jp
mov
push
lods
mov
in
xchg
or
lahf
inc
cmp
ss
dec
aad
push
mov
fcmovnbe
jns
cmpsb
xor
imul
rcr
sar
jb
cmpsl
call
inc
lock
pushf
sub
or
jl
out
ret
loop
rdtsc
rcrb
mov
std
outsb
and
cmpl
rol
push
in
addr16
mov
push
jmp
jbe
pop
fsub
mov
and
popf
ret
cltd
push
xor
jl
popa
cmp
xor
sbb
cmpl
push
adc
into
aam
mov
notb
mov
dec
add
in
adc
mov
and
cmp
mov
mov
mov
inc
push
or
ja
cwtl
cmp
add
xchg
xlat
jbe
leave
orl
mov
loope
or
into
pushl
pusha
fsts
adc
test
mov
test
scas
dec
xchg
jecxz
pop
scas
movsl
dec
cmpsl
hlt
js
int3
loop
mov
lds
out
mov
pop
push
pusha
dec
lcall
test
clc
iret
lcall
push
inc
push
jae
dec
push
mov
andb
icebp
loope
or
loopne
push
add
mov
inc
cld
pop
push
aaa
data16
hlt
cmc
dec
aaa
shr
jmp
sarb
or
cmp
push
mov
jl
pop
in
pop
dec
in
inc
pushf
ret
mov
cmpsb
std
xchg
aam
mov
lcall
notb
gs
cmc
sbb
xchg
jecxz
jecxz
push
adcl
dec
inc
mov
insb
xchg
mov
mov
inc
lret
cmpsl
adc
shll
adc
leave
mov
scas
aaa
ljmp
jbe
inc
repnz
movsl
lock
aad
mov
xchg
pusha
cmc
and
xor
js
push
jo
movsb
mov
push
enter
in
dec
add
daa
dec
mov
es
mov
shll
aam
dec
xor
es
decl
sbb
pusha
out
dec
mov
ud1
push
pop
cltd
inc
push
sti
out
mov
xchg
mov
jmp
dec
mov
leave
jg
fcoml
roll
andb
pop
imul
mov
jmp
mov
mov
pop
cmp
mov
cmp
add
imul
mov
stc
push
pusha
xchg
dec
or
adc
adcb
lock
mov
clc
in
push
push
or
dec
and
in
shlb
call
lods
std
mov
enter
test
mov
cmpsl
mov
add
adc
inc
mov
mov
gs
cwtl
sub
nop
mov
sbb
xchg
and
test
dec
fdivrl
in
les
inc
inc
xchg
xlat
sbb
je
aam
fists
dec
out
dec
sub
movsb
cmp
in
test
and
iret
not
mov
sbb
das
pop
mov
incl
push
movsl
fidivrs
fisubs
mov
inc
mov
mov
dec
fimull
push
int3
enter
incl
je
mov
push
mov
sbb
arpl
jno
cld
push
cmp
mov
call
xchg
inc
popf
clc
push
test
mov
jg
push
dec
iret
dec
enter
xchg
neg
sub
and
xchg
mov
int3
cld
lahf
test
test
lcall
ret
jecxz
bound
ljmp
int
rorb
and
std
ret
hlt
dec
icebp
repnz
call
dec
mov
movsl
mov
push
imul
loope
jnp
in
mov
imul
adc
mov
xchg
dec
push
adc
in
popf
jo
push
ss
mov
mov
pushf
inc
es
inc
leave
mov
ss
add
pop
lret
push
push
das
lods
mov
mov
jmp
pop
out
scas
movl
cmpsb
sbb
sbb
or
and
xchg
pushf
ljmp
pop
and
orb
into
and
sbb
jmp
add
sub
add
jmp
nop
roll
ret
insb
xchg
sub
movsb
std
in
insb
jmp
rorb
decl
pop
jge
and
cmp
xlat
pop
dec
mov
outsl
inc
ss
push
ljmp
fmul
loope
mov
add
sub
adc
loop
xor
mov
iret
out
cltd
popf
lcall
call
or
out
test
insl
dec
leave
orb
repnz
cmpsb
ret
push
mov
jmp
pop
xor
fdivs
int
repnz
xor
mov
jmp
jp
xchg
sub
adc
lahf
lcall
add
enter
cld
lcall
mov
sbb
sub
xor
enter
stos
mov
cmpl
ljmp
add
clc
popa
adc
leave
and
mov
popf
push
ljmp
sub
lcall
lea
ds
dec
or
mov
es
mov
push
push
es
ficompl
mov
in
cltd
stc
mov
xorb
xchg
inc
daa
sahf
aaa
call
add
ljmp
and
outsl
jmp
adc
adc
lods
add
add
ljmp
push
dec
xchg
mov
fnstsw
movsb
inc
adc
xlat
jno
mov
aad
sbb
or
mov
in
ret
cs
imul
out
mov
xchg
jl
xchg
pop
and
xchg
call
incl
xchg
cmp
sbb
push
lds
insb
jne
cmpsl
sahf
cmpsb
clc
pushf
iret
adc
and
cltd
inc
mov
decl
pop
decl
add
add
xchg
sti
ret
push
test
cmp
adcl
mov
paddusb
imul
ljmp
imul
icebp
jg
imul
aam
jg
pop
xchg
addr16
ljmp
inc
rorb
inc
lcall
stos
in
mov
inc
pop
cmpsl
adc
incl
mov
imul
pop
jecxz
ret
data16
in
lea
insb
ret
mov
jmp
loopne
mov
cmpb
and
xchg
cltd
arpl
push
push
mov
pop
and
cmp
incl
mov
xchg
sbb
xchg
cld
xor
xor
dec
iret
std
aaa
loopne
test
je
cld
jmp
int3
scas
arpl
test
stos
xor
dec
frndint
fstpt
js
pop
pop
jae
xchg
lret
pushl
adc
sti
xlat
mov
and
movsl
out
nop
sub
ret
add
dec
imul
decl
adc
fimull
pop
mov
insl
mov
pop
in
dec
jle
lods
push
fistpl
std
rep
xor
leave
jno
mov
fmuls
ljmp
push
popa
ljmp
xchg
xchg
xchg
mov
lea
mov
icebp
pop
sub
aad
es
mov
enter
aad
insl
jmp
xor
incl
xlat
dec
in
addl
data16
push
cmp
leave
adc
ja
add
and
pushl
mov
inc
repnz
clc
inc
pop
aam
jecxz
in
cltd
mov
decl
and
arpl
ds
inc
inc
dec
std
push
cwtl
xlat
ret
add
xor
mov
in
xor
xchg
daa
mov
jmp
push
scas
pop
lods
xor
outsb
out
cmp
cltd
inc
lods
testb
gs
and
dec
cmp
stc
je
in
mov
scas
pop
pusha
mov
fnsave
add
jge
enter
jecxz
lcall
icebp
jnp
inc
xchg
inc
fmull
push
repnz
and
out
add
push
dec
xchg
and
cmp
pop
stos
mov
lods
sarl
xchg
cmc
push
jecxz
testb
inc
addr16
popf
dec
cmp
iret
sbb
jmp
iret
mov
xor
mull
jle
xor
jmp
xchg
jge
adc
out
push
inc
jmp
ljmp
or
mulps
loop
shrl
inc
cli
push
inc
ja
xchg
out
xor
lods
shlb
inc
fs
ljmp
adcb
dec
mov
add
xor
sub
in
pop
sar
cmpsb
inc
js,pt
lcall
sub
and
pop
jns
outsb
sahf
scas
pop
push
daa
mov
push
push
adc
jg
cmpb
jg
fisubs
gs
inc
jp
xchg
or
push
fnstsw
into
sub
outsb
jns
call
sarl
cmp
jo
sarb
gs
xor
out
pop
jmp
fildll
sbb
and
outsl
dec
test
fldl
popa
in
push
mov
call
pop
aad
mov
hlt
adcb
insb
das
arpl
push
ret
xchg
dec
call
jae
insb
xor
or
lods
or
ljmp
push
das
inc
cli
cmp
jmp
push
in
cmp
shrl
jecxz
jno
clc
cmp
stos
call
xchg
ret
mov
add
cmp
add
test
push
les
dec
insb
dec
es
mov
cwtl
call
mov
jne
fbstp
pushl
xor
les
fistpll
std
dec
mov
aad
mov
jmp
lret
sbb
xchg
jb
out
or
loopne
or
imulb
push
xchg
mov
out
push
inc
aad
xorb
mov
loope
xor
rorb
add
jmp
mov
and
jmp
sbb
push
dec
xchg
es
shlb
jne
outsl
ss
jl
loop
mov
hlt
adc
jns
les
stc
fwait
sti
test
jg
push
jp
pushf
outsl
xchg
fwait
iret
test
incl
mov
orb
jae
mov
aam
jo
xor
shr
xor
xlat
sbb
imul
push
mov
mov
add
nop
dec
cli
fdivl
adc
adc
jl
sar
ljmp
inc
push
inc
mov
mov
aam
mov
sarl
gs
ret
jmp
jnp
sub
sbb
xor
js
je
jb
lods
add
gs
in
into
push
fsubrl
jmp
add
mov
or
icebp
and
ret
jle
xchg
outsl
inc
mov
adc
call
jae
loop
and
sub
out
sbb
outsb
icebp
cmp
sti
popf
and
out
mov
aaa
lcall
pop
cli
out
cmp
std
stos
ljmp
mov
sub
dec
in
or
dec
imul
xor
movsb
ss
fnstsw
and
jno
xor
outsb
sub
call
pushf
jle
or
and
or
inc
and
popf
sahf
int
dec
outsb
out
clc
dec
mov
ljmp
adc
dec
xchg
pop
aam
mov
mov
pop
mov
dec
jle
faddp
bnd
adc
incl
sub
cltd
jp
fdivrl
push
mov
loop
jbe
jle
in
lds
cld
ljmp
push
ss
pop
repnz
adc
adc
jge
ja
xor
push
jnp
or
cmpsb
lret
aam
fsubs
jp
mov
int
mov
mov
testb
mov
mov
bound
sbb
adc
pop
jnp
arpl
cmp
push
das
xchg
cmp
pop
jl
sti
lahf
imul
and
dec
add
insb
or
mov
xor
scas
pop
jmp
in
cld
jns
hlt
mov
inc
sbb
xlat
pop
push
shlb
movsl
or
add
jno
cmpsb
enter
mov
pusha
stos
add
sub
cmpsl
or
inc
xchg
decl
shlb
sbbb
enter
data16
xor
push
int3
dec
cmp
incl
jnp
fldenv
xor
push
bound
cmp
ret
stos
call
iret
out
or
or
add
jecxz
aad
pop
xor
pop
inc
sub
in
pop
xchg
ljmp
mov
jns
mov
add
jno
and
cmp
lret
mov
call
into
and
mull
dec
add
jle
out
test
sub
std
decl
jecxz
addb
call
dec
jp
dec
test
jnp
or
pushl
mov
xor
mov
push
mov
and
call
cltd
negl
xor
xor
mov
jnp
insl
adc
cmp
shl
inc
or
adc
mov
ljmp
mov
mov
push
push
and
in
lret
cli
sub
lock
jle
mov
xchg
pop
push
imul
jp
xor
add
sbb
lcall
mov
inc
dec
lret
xchg
movsl
sub
mov
ret
movsl
xor
outsl
jmp
and
lods
mov
add
fwait
pop
fdivr
ljmp
addr16
insb
aam
mov
ljmp
jle
ja
push
jp
mov
pushl
rcl
cs
sbb
pop
adc
test
popl
test
shlb
sbb
test
push
ds
out
daa
clc
mov
call
lahf
gs
xchg
adc
ljmp
jae
add
pusha
push
mov
test
jl
jg
stc
jns
gs
adc
scas
fstl
xor
push
lcall
mov
arpl
adc
xor
and
ja
daa
gs
incl
pop
test
sub
shr
cmpsb
inc
add
add
arpl
shl
push
push
jnp
fs
xchg
pop
cs
mov
stos
ficoml
push
dec
insl
sub
cmp
jmp
add
mov
arpl
arpl
push
movsl
fs
jg
rorb
movsb
jg
movsb
xchg
ljmp
pop
mov
push
sub
dec
idivl
jmp
and
lods
push
or
cmp
jmp
mov
repz
ficomps
xchg
pop
call
add
add
shrl
cmp
xlat
mov
mov
ds
or
int3
jo
icebp
lcall
fcmovbe
mov
mov
sbb
out
test
push
inc
mov
inc
inc
insl
and
incl
in
mov
xchg
and
dec
cmpsb
inc
xchg
ja
shlb
daa
sar
ljmp
jmp
sub
lea
dec
out
and
mov
insl
adc
mov
decl
and
je
and
insb
lahf
add
or
mov
xor
adc
call
cmp
cmc
inc
test
mov
push
fmulp
adcb
rcr
stos
push
cmpb
lcall
jne
aam
cmp
stos
push
pop
xchg
iret
je
lods
mov
les
xchg
mov
es
sahf
mov
decl
add
adc
inc
gs
data16
jbe
lods
jb
xor
lret
push
pop
in
sbb
push
jecxz
popa
jle
sbb
in
stc
cwtl
xchg
jp
pushf
rorb
lahf
adc
mov
lcall
lods
fcmovb
lods
push
rcrl
pop
mov
push
cmp
dec
mov
inc
push
jle
in
sarb
into
xchg
imul
xchg
xor
or
cld
add
add
into
lods
jecxz
andl
popa
bound
push
ja
aas
lcall
cs
pop
dec
add
negl
add
or
lcall
xor
call
leave
push
clc
dec
dec
repz
fcoms
mov
xchg
and
push
mov
push
xchg
hlt
popf
jns
stos
cld
mov
fdivrp
pushl
mov
pop
push
js
sbb
out
aaa
ja
fwait
dec
gs
sbb
xor
xor
decl
aad
lods
mov
loope
js
jns
sbb
lret
out
pop
rcrl
jmp
adc
cmc
and
xlat
mov
sarl
mov
or
lcall
sub
jmp
arpl
push
jmp
clc
jecxz
repnz
push
jg
inc
mov
fiaddl
in
fmuls
push
and
sbb
and
ds
fsubs
jmp
inc
int
dec
cmp
add
insb
sbbl
sbbb
fdivrp
dec
xchg
push
rolb
out
and
sbb
scas
jne
jno
xor
jae
lods
jnp
jbe
push
decl
out
fisubrl
sub
mov
negl
addl
out
lods
das
pop
lea
and
fcmovu
fsubs
popf
xor
mov
cmp
mov
cli
mov
push
sub
jg
ljmp
push
jo
insb
roll
pop
add
rcrb
shlb
divl
ljmp
cmp
mov
aam
aaa
cmpsb
popl
push
sahf
cltd
cmp
fcom
in
inc
icebp
mov
ljmp
mov
int
scas
xlat
jno
pop
mov
push
push
icebp
pop
or
imul
frstor
fstl
fidivl
mov
pop
jecxz
daa
insl
cld
mov
adc
cmp
flds
mov
leave
std
lods
nop
mov
add
shrb
out
sbb
adc
pushl
pushf
and
pop
mov
push
jbe
xchg
jp
pusha
add
jp
out
sahf
add
lcall
dec
mov
clc
les
cli
sub
fstps
cs
sbb
push
lods
sbb
lcall
xor
test
push
pop
flds
cs
loopne
test
mov
sbb
mov
das
icebp
outsb
lea
xor
mov
inc
inc
jmp
pop
jno
pop
push
stc
stos
push
rcll
fsubr
and
fdivrs
fadds
in
sub
add
daa
int3
daa
mov
cmp
arpl
cmp
cmp
and
dec
loopne
dec
inc
mov
out
aad
lods
mov
lds
xchg
into
call
sbb
mov
push
movsb
mov
stc
or
mov
pop
cltd
push
outsb
add
sbb
dec
add
inc
popf
mov
fstpl
sbb
dec
xchg
mov
lret
dec
cmpsb
int3
jo
sub
decl
clc
ret
add
jns
fwait
xor
jmp
mov
jbe
inc
and
mov
jle
mov
aaa
mov
ljmp
arpl
lcall
int3
jecxz
fwait
or
xchg
scas
int3
jns
in
sbb
inc
or
lcall
cmp
dec
mov
xor
sub
es
testb
ljmp
dec
daa
cmpsl
sub
xchg
mov
les
or
xor
gs
mov
insb
mul
mov
push
push
sbb
add
push
or
jbe
jmp
pop
adc
push
adc
cli
adc
decl
cmpsl
loope
mov
aam
inc
inc
movsl
xor
cld
mov
sbb
icebp
xchg
imul
adc
mov
enter
jle
sbb
insl
push
push
fwait
fs
mov
call
negl
pop
add
mov
mov
lret
dec
or
test
in
fnstsw
js
xor
dec
mov
adc
mov
into
stc
mov
outsl
orb
push
mov
out
push
sub
data16
or
cmp
andb
and
jns
je
jmp
movsb
jo
icebp
sub
orb
sbb
mov
andl
rcrl
pushf
inc
enter
pushf
lock
ret
xchg
sbb
subl
pop
hlt
xorb
ljmp
sbb
and
xchg
pop
jp
and
insb
inc
mov
loope
rcrl
inc
pop
pushl
cmp
cmp
hlt
fbld
jb
sti
lods
mov
bound
xchg
push
js
and
cmc
fcoms
jp,pn
jmp
mov
cli
ljmp
adc
icebp
out
xchg
adc
or
fcomps
mov
mov
mov
mov
pop
lret
or
push
mov
sbb
fists
inc
or
ffree
inc
lea
or
push
in
dec
dec
pop
xchg
jle
mov
dec
in
ret
mov
cmp
arpl
clc
lods
ret
shll
adc
std
mov
sar
jmp
mov
add
inc
pop
lods
sub
in
lcall
or
in
cmp
dec
inc
xor
ss
and
jae
mov
test
adc
push
mov
ljmp
ficoml
mov
out
jmp
lock
int
scas
mov
mov
mov
push
xchg
adc
inc
and
int3
adc
js
scas
imul
xchg
dec
loop
xchg
insl
cs
call
fisubs
sub
addr16
cld
enter
or
jb
add
jns
cmpsl
xor
add
sub
hlt
inc
inc
gs
mov
adc
xchg
jmp
xchg
xor
fcoms
mov
out
mov
dec
cmp
mov
popa
in
cld
test
sar
dec
test
ljmp
fdivrs
hlt
xor
add
popf
pop
and
pusha
mov
stos
call
mov
repz
out
cld
pop
mov
fcoml
lods
mov
or
xchg
inc
jb
push
fildl
jg
mov
add
ja
pusha
xchg
pushf
mov
decb
sub
inc
inc
stc
push
decl
mov
mov
fists
jnp
paddusb
xchg
ljmp
xchg
inc
sub
out
cwtl
inc
pop
jge
push
test
xor
pop
mov
sub
insb
call
xor
dec
mov
shlb
dec
pop
testb
cmp
outsl
jbe
jo
sbb
int3
lahf
lock
jo
cmp
or
lea
fldl
lahf
mov
xchg
cwtl
cwtl
sbb
loope
incl
inc
inc
lock
jmp
inc
fisttpll
loope
xor
out
data16
lcall
aam
mov
lahf
pop
xchg
je
call
rcll
pop
fldl
mov
jmp
fmull
std
mov
fisttpl
mov
je
notl
insl
xchg
push
call
pushf
sub
out
jecxz
rcl
jle
push
sbb
rclb
call
mov
test
sbbb
es
sbb
add
gs
cmp
stc
imul
xorl
fimuls
xchg
jo
xchg
pop
mov
ljmp
push
xor
pop
mov
fidivl
lds
mov
xchg
pop
aas
cltd
aad
arpl
decl
cmc
adc
clc
dec
cmp
and
or
out
sbb
ljmp
scas
aad
cmpsl
stos
push
outsb
mov
aas
push
xchg
je
stos
addl
popa
pop
xchg
xchg
call
rcr
movsl
pop
mov
popf
dec
cmpb
sub
dec
pop
popf
pop
xor
dec
in
mull
shlb
add
xchg
pop
xor
ja
mov
adc
lds
repz
jp
sbb
xchg
icebp
wrmsr
popa
into
lcall
lcall
outsb
cmp
jae
in
dec
ja
sub
mov
sbb
pusha
mov
stos
scas
mov
stc
es
call
dec
dec
or
outsl
mov
dec
clc
and
ds
addb
sbb
sbb
ss
jmp
pop
push
push
jge
stos
adc
add
lock
xor
lcall
push
cmpsl
sbb
ljmp
adc
movsb
ss
xchg
rcrb
fists
add
pop
push
sub
ss
jmp
clc
pop
push
pop
pop
push
int3
and
lock
xlat
movsb
arpl
cmpsb
jno
jmp
in
decl
nop
sbb
xchg
jge
push
jecxz
cmpsl
mov
inc
sbbb
data16
ljmp
incl
fld
adc
push
xchg
arpl
sbb
int3
pop
xor
lods
fists
pushl
scas
jle
add
sbb
adc
stos
xor
mov
fbld
lret
add
shlb
mov
test
mov
lea
fwait
mov
imul
push
jo
daa
cmp
xor
scas
cmpb
icebp
dec
xchg
and
adc
xor
pop
mov
lahf
pop
stos
aad
stc
jmp
mov
out
insl
adc
push
arpl
adc
insb
mov
cmp
outsl
loopne
cmp
icebp
push
loope
cltd
jnp
addb
mov
pop
fwait
imul
jno
or
incl
sub
pop
cmpsl
inc
imul
imulb
sub
xor
mov
sub
mov
mov
mov
out
cmp
fsubp
adc
mov
push
std
sub
adcl
jmp
std
insl
mov
es
jae
mov
add
in
push
xchg
dec
xchg
les
std
testb
decl
fldcw
sti
cld
ficomps
mov
call
cmc
xor
dec
jmp
add
ljmp
and
nop
sbbl
cmp
or
push
cmpsb
ljmp
sbb
push
jae
daa
loop
lds
cmp
adc
add
ljmp
inc
aas
les
jae
xor
pop
scas
andb
subb
cli
cs
decl
mov
push
mov
mov
push
lock
in
arpl
lret
add
decl
xor
add
fisubs
stos
je
jmp
xor
dec
sar
pop
pushl
fsubrl
mov
sub
hlt
inc
mov
cs
cmp
mov
mov
jmp
sbb
fs
xchg
daa
jnp
sub
cmp
sbb
pop
aam
andl
ljmp
aam
cmpsb
cmpsl
pop
or
pop
or
mov
lds
into
imul
cmp
rolb
call
lcall
and
das
and
jg
adc
adc
aas
pop
fnstcw
sbb
int3
popf
lods
in
mov
loop
mov
sub
xchg
pushf
cltd
add
incl
sub
push
adc
inc
and
jb
mov
out
mov
je
test
fadds
inc
mov
iret
test
cwtl
ret
ds
in
fidivs
cmp
mov
mov
sbb
in
pop
dec
fwait
adcb
rolb
xor
lods
dec
sbb
das
fidivs
aad
push
incl
and
rcrb
fdivrs
aas
jle
sbb
movsl
xor
decl
and
inc
xor
rcrl
pop
std
adc
add
decl
xor
setno
scas
push
lcall
push
notb
add
dec
cmp
testb
lret
shr
sar
lcall
dec
cli
jno
sbb
data16
es
nop
sub
mov
mov
call
mov
popf
adc
leave
out
mov
pop
ss
ljmp
and
cmp
decl
outsl
ret
sub
call
push
mov
fsubl
sahf
data16
inc
les
js
pop
popf
cmp
jmp
mov
jnp
cmp
push
lcall
dec
aas
into
mov
fidivl
xorb
ret
lcall
mov
xchg
dec
call
pop
inc
inc
mov
test
xchg
int3
mov
orl
insb
dec
mov
push
jnp
clc
addr16
in
sti
dec
push
mov
sar
imul
jns
xchg
push
cmp
stc
adc
fwait
dec
popf
push
sub
addr16
in
pop
push
sti
pusha
inc
cmp
decb
imulb
decl
mov
cli
loopne
flds
es
or
popa
out
jno
and
sar
in
shl
ljmp
mul
sub
mov
fs
daa
sbb
push
ljmp
fdiv
cld
cmpsl
out
cmp
in
ret
fldt
pop
daa
mov
sbb
sbb
jg
jb
scas
xchg
hlt
mov
and
xchg
adc
fwait
mov
sbb
out
mov
data16
jmp
jnp
add
adc
sbb
mov
adc
jns
movsb
xchg
shll
push
lcall
jl
push
daa
insl
xchg
sahf
adc
rolb
aaa
xorb
adc
pushl
stos
stos
add
mov
push
sbb
mov
xor
loopne,pn
pushl
aas
inc
xchg
scas
imul
cmpb
xorb
addb
jp
popa
scas
iret
sbb
jmp
leave
sar
add
mov
out
cltd
das
sub
not
xor
ficompl
repz
call
aaa
cmp
movsl
out
cmp
outsl
aas
xor
stos
pop
sub
mov
pop
stos
lcall
sbb
mov
mov
test
mov
roll
pushl
fst
scas
imul
inc
ss
and
je
dec
scas
inc
mov
mov
mov
mov
mov
cmc
aaa
inc
dec
xchg
mov
fildll
mov
inc
orb
cli
sar
incl
movsl
sbb
push
ret
cli
lahf
sbbl
mov
cmc
stos
test
incl
lods
mov
sub
into
ret
decl
leave
xchg
push
les
pushf
les
sbb
jl,pt
mov
incl
and
sbb
ret
dec
shrb
mov
sub
jmp
mov
dec
xchg
call
sbb
pop
lds
inc
fsubr
orl
cmp
pop
into
and
std
inc
packsswb
add
mov
adc
inc
or
repz
cmp
sub
xchg
xchg
xchg
and
hlt
push
jne
lret
js
push
sub
jecxz
jmp
bound
insb
sbb
je
xor
mov
cmpsl
lret
pop
rorb
pushf
mov
nop
mov
inc
push
xchg
std
push
lds
and
aad
inc
push
pushl
fsubrl
mov
sub
mov
sub
sbb
or
testb
push
mov
adc
imul
xor
enter
jmp
std
lcall
push
scas
push
and
mov
jo
sbb
iret
push
js
or
lahf
test
push
jmp
mov
cmp
or
call
out
inc
cmp
call
ljmp
pop
and
arpl
ficompl
pop
xor
and
pop
mov
xlat
xchg
lret
fmul
and
and
scas
test
outsl
inc
sub
out
adc
inc
push
mov
push
sub
mov
or
pushl
ds
sub
lods
cs
inc
loope
jbe
shr
movsl
test
repnz
cltd
add
decl
inc
cs
mov
mov
andps
and
mov
call
mov
ljmp
cli
sbb
mov
push
push
xor
sbb
cmc
xor
decl
or
addr16
inc
lds
mov
mov
push
aaa
movsl
jp
decl
add
es
movsl
inc
mov
test
sbb
cmp
or
lcall
inc
pop
pop
and
dec
popf
pushf
dec
out
test
mov
and
cmp
psrld
jecxz
lods
data16
pushl
adc
xor
pushl
into
ret
fwait
rcrl
mov
call
mov
dec
out
es
jne
jmp
fidivl
jle
jg
fnstenv
cltd
imul
lret
jmp
stos
cli
mov
imul
mov
dec
or
mov
out
enter
subl
cmp
iret
and
mov
incl
test
cmp
lock
xor
mov
inc
pop
cs
push
jae
mov
je
push
loopne
mov
and
sti
repnz
jnp
push
movsb
jmp
addr16
dec
into
and
pushl
mov
mov
lds
call
stc
mov
adc
mov
incl
xchg
loopne
adc
or
in
push
lds
xchg
fimull
lock
jo
mov
inc
push
cmp
jns
pop
inc
mov
adc
mov
rcrb
clc
push
add
jmp
jmp
lahf
lods
or
cmp
mov
dec
mov
scas
roll
cmp
jnp
add
sbb
ss
repnz
push
or
cmpsb
mov
jne
pop
dec
or
clc
mov
jg
push
add
fcomps
into
dec
jle
hlt
shlb
and
pop
loope
sbb
repz
push
in
jmp
mov
add
mov
and
mov
roll
insl
mov
call
mov
fwait
call
mov
adc
pop
jge
arpl
and
incl
xor
sub
xor
test
sarb
ja
adc
in
xchg
jle
enter
jb
imul
test
test
jg
push
mov
cmp
pop
hlt
jnp
daa
fnstcw
sbb
xor
jno
sbb
sub
ds
mov
out
sub
rorb
and
and
popf
and
adc
fnstcw
sti
fstpl
xor
sub
add
pop
cmp
pop
pushf
gs
lock
pop
pop
inc
call
jge
xchg
aad
ljmp
add
call
rolb
sahf
test
test
lcall
jp
cmp
outsl
insb
jnp
sbbb
cmp
adc
mov
pop
imul
imul
cmp
ss
lcall
add
mov
adc
sti
popa
sahf
les
lea
xor
in
jp
decl
cli
orb
cmp
and
out
movsl
mov
mov
call
roll
sub
ds
aam
in
push
sub
mov
mov
push
and
ss
out
or
add
sbb
lock
xor
jne
ficoml
mov
inc
xchg
lea
inc
pushf
dec
mov
fprem
jns
std
sbb
push
inc
inc
mov
test
cmp
cmpsb
test
int
decl
jp
int
out
mov
movsb
in
mov
and
jp
lret
das
jne
outsb
inc
jmp
test
std
cmp
std
ja
addr16
mov
leave
mov
outsb
mov
pop
filds
inc
lods
orb
mov
mov
jbe
shl
in
dec
jle
jecxz
sti
aad
clc
icebp
lods
and
pushl
fwait
stos
push
jmp
lret
scas
and
sub
jbe
push
aam
scas
adc
xchg
imul
jmp
movsl
mov
pop
cltd
mov
xchg
test
sub
xchg
scas
cmp
ljmp
jecxz
sbb
xchg
mov
dec
inc
sti
es
inc
rclb
aas
mull
andb
ljmp
loopne
cmpsb
jo
dec
jns
jge
xorl
int
and
xchg
scas
pop
fdivrl
jmp
cmp
dec
dec
pop
fwait
and
mov
dec
rolb
jl
dec
jg
movsb
push
call
mov
push
lcall
es
and
in
adc
adc
frstor
jge
dec
dec
mov
fs
mov
loop
daa
leave
addr16
xorb
bound
in
push
mov
lcall
imul
je
sahf
repz
mov
mov
imul
nop
sahf
cmpsl
icebp
lcall
xchg
shll
loopne
es
imul
lea
sbb
dec
pushf
xacquire
fisubrl
out
xchg
cmpsl
xor
fst
adc
pop
pop
nop
dec
mov
and
das
xchg
sarb
mov
cwtl
lret
rcrb
lds
push
jl,pn
sbb
sub
push
mov
xchg
inc
mov
add
mov
icebp
loope
pop
ss
call
sbb
sahf
pushl
daa
xor
addr16
fistl
in
lret
inc
push
testb
xor
jmp
hlt
loopne
fisubrl
movsb
test
jmp
lret
mov
pop
sub
fadds
repnz
pop
mov
cli
inc
and
pop
fwait
pop
cmpsl
stc
outsl
mov
int3
fistps
cmp
xorl
add
jle
repz
call
inc
aad
inc
iret
xor
rcll
add
and
decl
jl
test
mov
adc
pop
in
xchg
shrb
mov
adc
pushl
or
jnp
scas
test
test
outsb
imul
iret
xlat
push
addr16
sar
lcall
jg
inc
cld
push
nop
push
cs
sbb
cmp
enter
adcb
addl
fidivs
add
mov
icebp
xchg
sbb
xor
dec
test
push
sahf
pusha
mov
xchg
and
xor
je
lods
and
imul
out
pushf
lcall
mov
fcompl
mov
and
cmp
hlt
xor
out
adc
mov
ljmp
call
adc
movsl
clc
cmc
fbstp
xchg
push
inc
les
jmp
cmp
iret
shlb
ret
jns
clc
jmp
inc
insb
push
push
dec
push
ja
jne
jno,pt
or
das
and
sub
jmp
andl
hlt
and
pop
inc
cmp
in
outsl
push
out
xchg
incl
ljmp
jno
fidivrl
das
test
es
mov
push
testb
ljmp
cmp
lcall
leave
jne
in
aad
jle
add
pop
scas
mov
pushl
inc
xchg
repnz
jge
sub
push
idivb
in
pop
mov
movlps
cmp
call
cld
inc
in
xchg
lcall
push
push
lcall
mov
jg
jmp
add
add
adcb
or
cmpsl
sub
ljmp
stc
mov
stos
insl
push
jns
xor
movsl
mov
test
in
outsb
jmp
pop
das
or
movsl
push
mov
jnp
decl
aad
pop
pop
push
fidivrl
pop
loope
lds
xor
enterw
fstps
cmpsl
incl
or
jle
and
into
leave
subb
inc
push
xchg
add
pop
pop
dec
scas
ss
pushl
inc
movsl
sub
popf
enter
and
jo
push
xorb
int
xor
lds
incl
popa
nop
mov
pop
push
repz
xlat
leave
jns
insl
jns
xchg
repnz
mov
push
mov
lods
inc
pop
xor
dec
cmp
ja
addl
and
xor
std
mov
sub
popf
out
cmpl
pushl
lock
adc
movsl
mov
pop
sbb
incb
in
lea
xchg
clc
inc
xchg
ljmp
push
push
addl
repz
fadds
scas
and
cmp
ljmp
cmp
push
sbbb
add
dec
cmp
pop
rcl
in
inc
jecxz
out
inc
and
ljmp
sub
xor
add
test
mov
jae
fdivrl
call
mov
out
dec
mov
jns
push
shrl
push
push
loope
pop
jns
or
jmp
ljmp
sbb
sub
negb
mov
cmp
xchg
mov
incl
loope
mov
sub
fisttpll
mov
mov
xlat
dec
mov
or
push
and
push
nop
loop
jne
ficoms
jae
push
jnp
outsl
add
stos
cld
adc
mov
ljmp
mov
aam
insl
or
dec
pop
mov
lahf
mov
pop
sbb
scas
fistl
jns
fwait
popf
mov
jg
jmp
xor
iret
push
decl
call
mov
ret
mov
lcall
outsl
testl
jle
popf
add
inc
or
xchg
out
mov
xchg
incl
je
and
rcrb
enter
jle,pt
add
fwait
sbb
mov
sbb
push
sti
push
pop
push
clc
cltd
clc
push
aad
or
dec
xor
das
mov
or
adc
sbbl
dec
pop
dec
lock
cmp
pop
and
and
lahf
fbld
stc
ja
jge
sub
cs
in
les
mov
push
fbld
mov
add
decl
dec
push
cmp
and
mov
mov
out
push
inc
mov
mov
pop
sar
pushl
dec
jl
sbb
ljmp
enter
jecxz
jbe
add
mov
cwtl
fcompl
test
push
mov
mov
inc
shrb
lcall
dec
dec
and
adc
xor
xchg
fsubrs
aas
addr16
nop
sbbl
mov
adc
dec
cli
push
gs
rcrb
sbb
decl
lret
cmp
and
push
pop
xor
pandn
sub
je
inc
mov
xchg
sbb
xchg
or
scas
push
sbb
ss
lret
cli
inc
rcrb
fldl
stc
push
fistps
xor
ds
sub
out
es
ret
jns
incl
out
out
and
lea
cmpsl
in
sbb
xchg
pop
adc
add
mov
in
jge
ds
or
sub
add
lahf
cmpsb
jmp
or
in
lret
mov
jmp
leave
push
fadd
std
call
push
into
jbe
scas
cmpsb
aad
pop
mov
sahf
lods
pop
xor
sub
std
outsb
lds
lahf
lods
pushf
in
fisttps
jb
xchg
xchg
jl
push
or
movsl
jb
mov
stc
inc
pop
inc
je
xor
xorb
sarl
and
pusha
inc
mov
add
xor
ljmp
mov
scas
xchg
into
leave
add
push
pop
stc
bound
incb
cli
sbb
lds
lahf
xor
test
ret
je
mov
push
bnd
lea
pushf
mov
lcall
xor
scas
arpl
stc
aad
dec
ljmp
mov
divl
mov
dec
fiaddl
incl
adc
xchg
imul
push
mov
mov
popf
mov
pop
xor
test
jmp
es
add
push
scas
daa
sbb
dec
mov
pop
mov
pusha
mov
fwait
add
call
dec
mov
setns
jnp
cli
or
sub
mov
std
sbb
mov
mov
cmp
or
mov
sarb
dec
inc
mov
pop
fisubs
ret
das
loop
aaa
loope
adc
movsbl
cmp
incl
inc
pop
sub
dec
das
push
xchg
add
xorl
pop
sbb
add
js
test
jge
and
or
inc
adc
fstp
out
jb
in
jecxz
pop
das
nop
lahf
sub
jmp
jne
std
mov
xorl
push
filds
lret
lahf
pop
cmpsb
push
add
xchg
ljmp
outsl
out
addr16
xor
jno
dec
jno
xchg
jo
outsb
icebp
or
mov
call
lcall
pop
adc
inc
mov
sahf
sub
pop
and
inc
imul
insl
fwait
out
cmp
sub
lcall
test
mov
jecxz
pushf
movsb
addr16
mov
dec
add
in
dec
cmp
repnz
incl
inc
cmp
push
lock
fsts
fcoml
incb
mov
lods
mov
lds
shl
incl
scas
or
call
mov
jp
sbb
call
pop
dec
popa
or
mov
sbb
call
mov
xchg
insl
mov
in
shlb
xchg
sub
aaa
in
decl
shlb
jl
aad
add
dec
into
test
pusha
inc
mov
and
lcall
ljmp
repnz
mov
imul
rclb
mov
insb
pusha
or
pop
jnp
movsl
inc
enter
cli
pop
jno
jb
outsl
xchg
push
popf
in
mov
dec
fnstenv
gs
and
pushl
push
rcll
clc
les
stos
jmp
arpl
pop
sub
xor
xor
ret
call
ljmp
call
adc
rolb
inc
daa
movsl
push
int
adcb
clc
sbb
incl
push
fwait
xor
or
push
add
mov
xlat
shrl
pushf
sbb
pushl
mov
adcb
sbb
or
sarb
pop
push
decl
loope
lret
inc
or
rorl
shl
push
scas
filds
xorl
call
xchg
pusha
and
mov
ret
or
lcall
add
push
in
fsubrl
sbb
jmp
cmp
or
rcl
out
ss
enter
paddq
test
je
jae
clc
repnz
in
push
sub
out
inc
fisttps
jbe
int
into
xchg
enter
xchg
lahf
lods
xchg
fidivrl
decl
dec
rcrb
inc
lret
sub
adc
outsb
jge
aas
rcr
push
xchg
inc
xchg
dec
jmp
xor
aad
add
jle
enter
fidivs
add
fcmovne
cs
cmp
shld
xor
int3
adc
xor
mov
jp
or
xchg
jge
js
hlt
cs
in
mov
push
clc
xor
lcall
in
pop
rclb
jl
dec
aad
mov
jns
icebp
ret
clc
dec
push
mov
push
jmp
jg
mov
insb
in
pop
repz
ljmp
mov
idiv
decl
ror
push
xchg
je
je
movsb
nop
or
enter
loop
cld
out
hlt
pop
sub
pop
jnp
push
in
inc
ss
xchg
add
and
mov
cmp
insb
in
insl
pop
jb
iret
mov
add
dec
cs
push
xor
mov
pop
dec
lock
decl
dec
inc
pop
adc
and
push
mov
mov
sbb
loopne
sub
mov
cmp
push
sub
lods
sub
and
imul
movsl
sbb
add
cmc
mov
mov
lcall
jl
rcrl
loope
lea
cmp
push
sub
sub
or
mov
call
imul
push
pop
decl
sub
jb,pt
lea
xchg
add
sub
jmp
push
push
out
pop
pop
out
btcl
dec
lds
roll
xchg
mov
jg
jl,pt
shlb
inc
shrb
dec
fs
je
inc
lock
sbb
das
push
jmp
repz
pop
jl
pop
fs
out
jns
nop
mov
outsb
xlat
sub
loop
rcrb
or
xor
cmc
lds
push
xchg
sarb
into
insl
cmpsb
out
aas
in
out
xchg
incl
test
int
out
movsl
mov
fsubl
push
inc
fsubrs
movupd
call
sarl
inc
fisubl
mov
dec
or
je
mov
xor
push
sar
inc
mov
push
xor
mov
imul
adcl
mov
jbe
in
inc
cmc
decl
hlt
jecxz
shll
out
ljmp
fucomp
or
xchg
imul
in
arpl
outsl
jne
mov
jae
cli
scas
sbb
loope
lea
dec
xlat
cld
mov
test
inc
sar
jno
mov
scas
mov
sub
fs
and
jp
insl
mov
int
loop
gs
pop
push
add
sub
decl
shlb
jecxz
xchg
pop
and
inc
mov
sahf
add
incl
les
popl
lcall
jmp
lea
lret
adc
xchg
adc
notb
push
xor
mov
jmp
loope
sti
pusha
or
jbe
dec
sub
inc
mul
mov
dec
jo
std
add
fdivrl
aam
push
push
test
fst
cwtl
push
aaa
fldenv
adc
xor
xlat
imul
incl
lret
rorl
mov
stos
ja
mov
test
test
decl
jno
jmp
mov
imul
inc
jb
insb
rolb
lret
dec
xor
int
xchg
insl
mov
lcall
shll
sub
in
and
mov
popl
adc
mov
aam
xor
fcoml
insb
icebp
aam
xchg
lods
mov
cmc
das
clc
cmp
cmp
sbb
out
sarb
sub
xor
fcmovbe
mov
sti
push
pusha
jb
xchg
dec
cmp
rorb
ljmp
xlat
fisttps
dec
mov
jmp
lret
mov
mov
and
imul
mov
and
outsl
jmp
fistl
push
xchg
in
lahf
or
mov
dec
mov
cmp
test
repnz
aaa
sar
call
push
jnp
test
mov
xchg
mov
and
or
movsb
mov
incl
and
mov
mov
rorl
jl
fistl
js
mov
xchg
pushl
js
push
adc
imul
std
mov
jmp
outsb
fwait
enter
rorl
bound
clc
or
les
add
fldenv
ljmp
push
sbbl
mov
jmp
or
rolb
aas
push
push
decl
and
sub
fdivs
fwait
loopne
jecxz
fs
adc
mov
jmp
icebp
cmp
out
or
sub
aad
mov
jne
dec
jle
jg
xchg
cmp
push
pop
push
pop
xor
and
xchg
scas
test
push
sub
sub
ljmp
jecxz
inc
popa
push
fists
xchg
pop
sahf
call
negl
cmpsb
adc
mov
decl
push
and
sbbb
mov
cmp
test
aaa
and
movsl
push
dec
cmp
xor
mov
incl
loopne
xchg
sbb
ss
sbb
pop
jecxz
mov
xor
repz
pop
addr16
inc
inc
outsl
jns
cltd
sub
aad
mov
cmc
bound
daa
pop
or
int3
out
xchg
xor
xchg
mov
incl
dec
test
pop
mov
jno
pop
mov
sbb
mov
or
sub
incl
hlt
sub
dec
aas
jmp
mov
add
test
sub
inc
sbb
mov
ljmp
and
inc
and
inc
out
dec
adc
mov
cmp
clc
mov
dec
nop
scas
dec
lds
imul
push
rolb
or
push
xchg
push
mov
inc
ljmp
sbb
sub
psrlw
push
lret
xor
pushf
jae
jb
push
add
icebp
test
decl
push
inc
jnp
mov
outsl
jp
jns
les
push
xor
push
arpl
pushl
xor
filds
outsb
je
or
mov
mov
xor
sub
decl
jno
fstps
sbb
subb
dec
cmp
add
lcall
sub
xor
or
xchg
jmp
xchg
sub
push
jecxz
sbb
inc
ljmp
ss
mov
fcoms
mov
sar
mov
in
xchg
cmp
mov
cmp
movsb
mov
and
cmp
inc
sarb
inc
cwtl
mov
incl
add
incl
pop
lcall
push
jns
xchg
int
icebp
mov
mov
fs
shrl
cmc
popf
scas
mov
in
xchg
call
into
sti
mov
or
dec
pop
cld
daa
sbbb
inc
in
mov
jns
aas
roll
or
imul
repnz
add
dec
xlat
pop
mov
or
jmp
ja
sub
jl
push
xor
int3
sbb
inc
pop
in
cmp
icebp
call
inc
test
ljmp
inc
iret
mov
adc
mov
bound
and
jge
push
insb
pop
push
orb
sub
pushf
dec
movsb
clc
and
xchg
and
push
add
lods
in
lds
test
lcall
sahf
fldt
cmp
test
pusha
mov
sbb
push
lock
xchg
decl
pusha
es
or
dec
sbb
outsb
xchg
ficomps
or
add
lcall
fists
pusha
or
icebp
out
out
mov
dec
jno
cwtl
and
dec
jp
dec
push
xchg
xchg
sbb
fs
inc
fisttps
jg
out
xchg
sbb
mov
test
decl
and
pop
loop
jnp
fiadds
mov
fisttpl
jge
push
xchg
pop
pushl
mov
mov
add
mov
test
jp
push
pop
inc
sub
ljmp
mov
clc
pop
cmp
mov
pop
push
or
dec
addr16
xchg
dec
jmp
incl
push
or
push
sub
pop
jns
xchg
and
arpl
lcall
aad
icebp
in
decb
in
adc
lret
loopne
mov
and
leave
or
ret
sub
lcall
jg
push
icebp
cmp
cwtl
pop
add
and
jbe
push
push
inc
push
push
dec
sbb
call
mov
movsb
sbb
sub
pop
incl
lret
addr16
repnz
mov
outsl
push
out
test
mov
jae
mov
inc
pop
dec
inc
jbe
dec
mov
jmp
cld
mov
push
inc
cwtl
sbb
mov
push
cmp
pop
aam
scas
push
lods
lods
mov
pushl
test
or
mov
in
negb
mov
std
pop
pop
je
sbb
mov
lock
call
mov
cltd
mov
xchg
xchg
fisubrl
popf
out
notb
xor
ljmp
mov
push
ret
das
mov
ficompl
and
out
mov
int
xor
jmp
jbe
dec
sarb
aas
pop
mov
sbb
add
or
pminsw
sub
push
in
dec
sarb
xchg
sub
xchg
pop
pop
dec
xor
mov
or
cmp
xor
decl
ret
sbb
icebp
sub
cmovbe
sbb
iret
and
outsb
mov
push
enter
xchg
xorb
stos
iret
mov
jle
mov
popa
inc
xlat
repz
or
jno
xlat
jmp
mov
push
aad
cmp
pop
push
filds
push
out
jnp
push
data16
or
sub
mov
aas
and
mov
cmpsb
hlt
cwtl
xlat
sti
test
incl
out
xchg
inc
add
popf
lcall
pop
leave
mov
and
cltd
rorl
cmpsb
pop
lcall
loop
add
mov
adc
or
sub
sbb
mov
pusha
push
ja
mov
cmp
sub
fdivp
mov
xchg
mov
dec
push
std
jp
cmp
pop
ljmp
xor
movsb
push
adc
movsb
test
cld
in
out
in
cmpsl
loop
dec
mov
push
adcb
pop
jmp
sbb
imul
out
jne
ljmp
movsb
sub
jmp
mov
jb
or
in
movsb
pop
jge
jno
iret
mov
mov
insb
xchg
pop
or
sti
push
daa
cmp
outsl
mov
mov
idivb
cmp
stc
and
or
pusha
pushl
or
add
push
addr16
inc
sub
dec
insl
call
push
or
incl
pop
jo
xor
cmpb
lcall
out
mov
roll
xorl
inc
inc
push
push
cmpsb
lahf
lret
jnp
pop
call
fbstp
out
int
mov
dec
mov
negl
stos
cwtl
in
pop
clc
gs
imul
out
rol
cmp
incl
les
loop
xor
or
pop
fldenv
sbb
ja
iret
lds
pushl
inc
and
cmp
mov
pop
mov
out
iret
dec
loopne
or
dec
jmp
sub
js
mov
lds
jg
call
push
bound
jmp
lret
sub
lock
jmp
xchg
jne
mov
adc
push
cmp
dec
adc
int
adc
movsl
and
mov
lcall
mov
lock
stos
cmp
cwtl
maskmovq
notl
nop
jmp
fs
adc
xchg
mov
ljmp
out
les
mov
sbb
sub
push
std
mov
pop
push
inc
call
or
stc
or
add
xchg
in
outsb
mov
jge
cmpsl
cmp
cmc
and
decl
fistl
ss
shlb
and
out
loope
pop
outsl
fs
xor
nop
adc
adc
lcall
dec
sub
dec
mov
repz
jl
adc
add
aad
cld
mov
inc
jp
stc
es
pop
in
add
adc
popf
pop
push
mov
incl
cltd
inc
lods
minps
les
arpl
xlat
mov
lcall
push
data16
insl
loop
pop
jnp
fucomi
test
mov
cwtl
sub
jge
sub
inc
xchg
push
nop
jmp
mov
fcmovnu
jmp
push
loop
inc
shl
xor
dec
xchg
add
cmp
imul
decl
pop
cmc
mov
jp
add
cmp
out
fnstcw
ljmp
je
pop
adc
inc
pop
and
scas
xchg
decl
clc
dec
syscall
popa
rclb
out
add
imul
and
iret
pop
add
lahf
data16
out
mov
mov
mov
push
inc
lods
lds
push
ljmp
mov
mov
and
out
mov
lods
shrb
popf
movsb
inc
push
icebp
pushf
bound
dec
mov
lcall
shll
dec
cmp
dec
push
or
call
inc
test
push
and
xor
into
dec
movsb
bound
jmp
xchg
xor
stos
shlb
sub
sbb
push
fidivs
mov
pushl
hlt
filds
pop
pop
bswap
es
push
sahf
xchg
xor
shr
pusha
push
sbb
or
movsb
in
stos
mov
inc
dec
je
iret
mov
je
jmp
pop
ljmp
insb
xor
dec
scas
inc
push
jae
mov
outsb
and
push
jns
mov
push
shll
xchg
arpl
aaa
jp
out
es
jmp
jnp
cs
int3
into
int3
push
or
and
mov
das
incl
call
jg
scas
imulb
fwait
push
insl
xor
pop
sub
ds
les
inc
mov
push
push
or
jmp
mov
cmp
push
cmpl
imul
loope
adc
cmp
dec
sub
roll
jmp
or
scas
cltd
jle
imul
out
popl
mov
jmp
decl
push
insl
ljmp
xchg
pop
cmp
mov
shrb
add
mov
and
mov
imul
js
outsl
xor
mov
out
xor
pusha
lock
xchg
jmp
inc
jne
xor
sub
jne
or
enter
pop
push
dec
push
leave
outsb
ljmp
jmp
cmc
addl
lea
imul
icebp
les
bound
or
adc
xchg
pop
cmp
adc
jge
lcall
lahf
mov
fwait
incl
fisttps
add
aaa
gs
push
out
in
adc
lret
leave
dec
sub
movsl
js
lcall
scas
sbb
mov
rolb
test
inc
push
xchg
jae
and
sub
pop
sbb
decl
mov
pop
mov
cltd
lret
or
xor
cld
jnp
imul
add
incl
or
cmp
insb
arpl
dec
scas
xchg
mov
dec
and
add
pushl
in
lea
dec
cmp
ja
cltd
dec
in
adc
mov
int
jae
ljmp
xor
adc
imul
test
mov
repz
ret
mov
sub
xor
cmp
or
pop
das
or
decl
lods
sub
sub
cli
shl
push
scas
inc
add
fs
pop
inc
mov
xor
ljmp
lds
mov
inc
push
push
pop
mov
repnz
jge
pop
divl
dec
jmp
pushf
fwait
xchg
test
mov
xor
ljmp
push
test
ja
xchg
lcall
fcos
sub
bound
int3
push
test
rol
sub
jnp
out
xchg
sub
pop
shll
pop
dec
sub
rcr
addr16
or
fwait
pusha
aas
int
lcall
icebp
mov
in
into
adcb
mov
outsb
pushl
inc
inc
rclb
lret
cwtl
adc
xchg
shlb
sbb
cmp
loope
repnz
pop
fwait
or
loopne
and
xor
lcall
xor
rcr
dec
cmp
pusha
mov
jnp
dec
testb
mov
dec
push
loope
call
aas
and
mov
sahf
fscale
inc
inc
add
movsb
out
add
pushl
out
bndldx
lahf
or
push
xchg
inc
cmc
aad
notb
xor
mov
les
pop
arpl
mov
lea
data16
mov
mov
cvtps2pi
cmp
push
mov
inc
movsb
mov
xor
mov
rclb
lcall
cmc
loopne
xchg
dec
fmull
mov
xor
jg
jmp
xlat
jne
or
popa
mov
popa
jns
pop
cld
popa
inc
jle
mov
sub
test
jmp
mov
movsb
sub
xchg
popa
dec
decb
push
or
push
lock
jl
pushl
push
repnz
shrl
sub
mov
outsl
rorb
loope
cltd
dec
test
aaa
imul
inc
lods
add
xchg
leave
and
push
sbb
jmp
insl
jo
notb
daa
push
cld
aaa
stc
call
jno
cmpxchg
push
insl
sti
rcrb
push
insb
adc
push
jp
or
mov
loop
mov
cmpsb
pop
mov
push
roll
repnz
sub
xchg
inc
xor
jae
ljmp
out
jecxz
push
xlat
shlb
jbe
jecxz
mov
jl
stos
movsl
in
hlt
subb
pushl
lret
test
int3
or
repz
push
cld
icebp
pop
scas
sbb
std
ds
pushl
sub
push
cmp
jb
ret
lock
or
hlt
jge
adc
mov
ljmp
daa
divl
and
or
arpl
repnz
pop
call
imul
add
inc
jl
push
leave
pop
dec
decb
stos
jge
adc
lods
outsb
dec
jo
jmp
xor
dec
mov
fistpll
inc
leave
or
cmp
call
push
iret
iret
mov
inc
jle
pop
inc
ja
leave
xchg
jmp
notb
jb
decl
jmp
xchg
pop
inc
testb
lret
sbb
mov
xchg
cmpsl
pop
aaa
mov
add
sub
pushl
or
sbb
or
mov
jl
push
push
addl
call
mov
pushl
rcll
repnz
sub
pop
cld
popf
jecxz
mov
push
das
nop
aam
fdivs
pop
pushl
fwait
mov
and
push
ret
or
lods
jo
cld
inc
xchg
lea
cmp
popa
jmp
lods
stos
pop
mov
test
scas
mov
push
adc
sub
pop
push
popa
mov
jmp
jp
fimull
shl
and
aas
pop
lods
push
add
cmp
bound
pushl
sti
sbb
inc
mov
fdivr
je
clc
xlat
jo
dec
pusha
insl
loopne
adc
jmp
inc
dec
les
mov
scas
movsl
dec
pop
xchg
adc
mov
mov
xchg
stos
call
mov
dec
push
ret
aad
inc
insl
xor
lret
sub
pop
div
sahf
xor
aas
lcall
inc
push
mov
cmc
iret
push
jl
push
mov
or
gs
rcr
call
and
mov
mov
scas
mov
pop
daa
or
dec
fcmovne
js
fidivrs
jge
enter
ljmp
cmpsl
decb
in
cmpsl
arpl
loopne
xchg
lock
fisubrl
cld
insb
enter
xchg
pop
inc
into
call
sub
aaa
movsb
push
adcl
cmpsl
cmp
pop
jne
xchg
push
mov
inc
incl
push
mov
xchg
xchg
aam
sub
jnp
int
xchg
push
add
call
xor
in
outsb
mov
pop
sub
aam
pop
inc
es
aad
jecxz
jecxz
notl
test
pushl
scas
pusha
adc
aaa
popf
js
loope
sti
mov
push
gs
pop
jb
shll
ret
jnp
out
inc
cmc
dec
mov
aad
adc
xchg
push
xorb
push
xor
shrb
addb
pop
push
fistl
fisubl
dec
xchg
aaa
adc
and
inc
fxch
faddl
pop
mov
lcall
jns
mov
fstl
and
call
mov
sbb
jo
test
jmp
std
push
push
fld
xorb
in
sti
aam
fdivs
jne
mov
mov
fcoml
adc
lcall
jp
cli
lcall
sub
jge
mov
int3
movsl
sahf
add
shr
mov
call
sahf
mov
pop
pop
je
mull
insl
lret
rcll
xchg
jns
lret
dec
sub
fildll
mov
jp
jg
popf
test
jle
adc
sti
sbb
int
leave
jmp
je
xor
rcrb
out
jb
push
out
sahf
mov
movb
jns
fildll
incl
mov
push
mov
jp
dec
loope
bound
enter
add
jne
push
xchg
jnp
mov
jne
in
movsb
inc
sarl
push
addr16
out
and
ljmp
cmp
inc
push
pusha
ret
mov
test
inc
adc
xor
orl
decl
cmp
clc
xchg
jg
mov
and
mov
ja
cli
ret
sbb
lcall
cmp
sub
mov
pop
mov
mov
data16
fidivrl
cmp
ljmp
lcall
xchg
pop
daa
xor
les
jnp
sahf
les
enter
pop
mov
mov
test
outsb
jge
or
adc
cmp
out
ret
add
jmp
xchg
orb
int
and
sbb
into
and
loop
orb
call
cld
push
mov
nop
aam
xor
jl
mov
add
jmp
xchg
es
incl
mov
cltd
out
mov
sub
cmp
add
xor
jae
xor
ljmp
lds
dec
out
lret
pop
ds
inc
sbb
mov
jmp
dec
pop
cmp
mov
jg
push
icebp
loope
fbstp
push
movsb
cmc
push
xorb
or
add
outsl
inc
push
push
push
in
fstpt
push
pop
adc
pop
cmp
or
xchg
pop
inc
adc
das
pop
pop
add
movsl
addr16
fbstp
mov
push
mov
inc
insb
fistpll
mov
fistpll
movl
mov
cmp
leave
aad
loopne
fldl
inc
mov
or
insl
pop
dec
cmp
dec
and
xor
dec
mov
decl
pop
xchg
jecxz
daa
jmp
subb
fs
sub
mov
in
imul
call
insl
xchg
cmp
push
std
sub
pcmpgtd
out
pop
sub
cmp
or
jge
shlb
sbb
mov
lcall
data16
aam
xchg
imul
scas
outsl
inc
cmp
push
adc
je
sbb
arpl
movb
pop
mulb
cmp
mov
aad
in
dec
sbb
mull
negl
jmp
jae
cmp
push
push
dec
les
mov
out
cmp
jne
sti
pop
sub
ret
test
xor
sar
lcall
dec
jle,pn
mov
xchg
cmpsl
ret
xor
xor
incl
adc
push
xor
mov
imul
rclb
jnp
mov
cmp
stos
xor
mov
mov
popa
test
lcall
ljmp
mov
jmp
jno
pusha
enter
loopne
jno
push
mov
je
xchg
jmp
outsl
iret
xchg
jl
sbb
ficomps
lahf
dec
pop
fbld
jbe
jmp
push
dec
pop
mul
decl
dec
arpl
jl
mov
les
je
repz
aas
sbb
scas
sbb
inc
mov
movsb
cmc
dec
jbe
mov
mov
xchg
jl
daa
pop
int3
decl
mov
adc
xor
in
movl
push
sbb
inc
aas
inc
mov
ljmp
test
push
outsl
jg
out
xchg
mov
pusha
mov
pusha
mov
cmpsl
cli
sbb
ljmp
pop
cltd
loop
shlb
push
gs
sbbl
insl
adc
cmp
call
mov
outsl
ret
sbb
mov
outsl
ret
xchg
out
in
sub
or
repnz
cmpsl
inc
pop
cmp
lahf
or
inc
out
mov
lock
int
mov
repz
lret
repz
jbe
call
sti
adc
test
mov
jle
ljmp
fsqrt
aaa
mov
push
mov
decb
adc
and
hlt
xchg
jne
pop
test
cmpb
mov
push
stos
ud1
inc
jecxz
call
arpl
xchg
jnp
xorl
jle
mov
sbb
and
add
jle
incl
mov
and
ret
mov
and
popa
pop
pop
ja
push
xchg
cli
clc
xchg
shlb
in
mov
push
cmp
add
repz
scas
aad
mov
fs
sarb
shr
dec
inc
pop
sahf
xchg
scas
ds
jae
das
push
sbb
add
call
mov
ds
insb
iret
cwtl
les
inc
out
es
aas
adc
frstor
fistps
mov
and
shrl
inc
stc
pop
mov
sbb
ret
lea
mov
clc
sub
repz
add
sub
mov
test
add
in
inc
pop
push
ret
lret
stc
movsl
fldenv
push
xchg
inc
and
stc
or
out
adc
pushl
ds
and
adc
or
jmp
mov
or
add
mov
push
stos
iret
cli
jmp
decb
nop
cwtl
cwtl
and
outsl
inc
jecxz
and
xchg
sbb
cmc
mov
cli
shlb
adc
test
fstl
or
xchg
andb
inc
jbe,pn
ljmp
dec
repnz
cmp
push
rorl
popa
pop
fimuls
jmp
scas
pop
cmp
adc
xchg
mov
out
bound
in
out
outsl
and
decl
sbb
push
sbb
sub
pushf
xchg
std
mov
add
imul
jns
sub
add
test
sti
pop
or
xlat
mov
or
imul
cs
call
sub
jl
imul
addr16
xchg
xor
sahf
hlt
adc
ljmp
loop
ficomps
fwait
jg
mov
mov
scas
pop
jns
lea
aas
aaa
popf
dec
mov
mov
sbb
sarb
sub
mov
int3
out
cmp
movsl
cmp
add
pushl
rclb
outsb
add
jo
je
lahf
mov
push
js
mov
xchg
call
lock
pop
fildl
xchg
mov
stc
cmpsb
out
add
in
jno
inc
sub
sbb
decl
push
push
aaa
lods
aam
int3
movsb
cmp
in
dec
fcmovnb
jge
sub
aaa
fwait
out
adc
jmp
adc
std
inc
mov
jl
adc
cmp
inc
adcb
mov
pop
popa
adc
xor
jmp
test
orb
fisubl
ret
out
ret
inc
cmc
xor
call
stos
add
subps
push
push
pop
cmp
pop
imul
jne
lcall
push
dec
adc
fldenv
in
dec
std
add
out
jne
mov
cmpsl
test
and
cltd
push
add
xchg
push
sub
jne
sbb
iret
sub
push
mov
hlt
repnz
mov
fadd
add
push
lods
or
fwait
push
aad
mov
call
pop
into
push
push
adc
jb
and
xchg
mov
xorb
xchg
push
decl
mov
loope
loopne
lcall
add
int3
xchg
inc
repz
inc
pop
inc
sbb
cmp
mov
ljmp
or
mov
pop
outsl
mov
pushf
pop
imul
cmc
sbb
pushl
xor
lds
mov
clc
shlb
lret
jmp
in
mov
inc
sbb
shlb
in
in
outsb
les
mov
pop
push
ljmp
incl
push
inc
jp
xor
fwait
test
push
cmp
loop
iret
out
inc
cmpl
adc
mov
ljmp
das
jmp
bound
call
adc
mov
adc
mov
pushl
imul
push
xor
and
out
sub
mov
mov
add
sbb
ljmp
push
xor
sbb
jae
mov
xlat
add
inc
imul
jmp
enter
cmc
movsb
test
add
leave
mov
xchg
add
mov
xor
incl
push
mov
push
loopne
xlat
adc
jb
test
jge
mov
sbb
mov
jmp
fs
lret
fisubl
stc
push
cld
jo
inc
pushl
enter
inc
sub
pushl
and
mov
add
add
push
andl
js
shlb
inc
pusha
mov
jne
rcl
mov
scas
fsts
push
pop
pushf
cmp
mov
dec
adc
call
mov
lds
sub
in
sti
popf
cltd
push
lds
jb
mov
loop
test
decl
in
aaa
call
jmp
call
fwait
popa
inc
jecxz
and
fisubrl
xlat
push
incl
sbb
je
inc
sbb
int
jne
sbbb
dec
mov
mov
mov
sbb
lcall
jecxz
fistl
cmp
jp
and
ret
mov
jmp
jg
test
arpl
xor
scas
mov
sti
dec
aad
ret
sbb
cmp
pushl
ljmp
inc
push
jmp
adc
fwait
cs
stc
jbe
pushl
cld
mov
mov
sub
adc
loopne
adc
adc
call
inc
inc
nop
stos
and
mov
out
sbb
mov
scas
sahf
inc
in
test
jns
out
add
sub
divb
pop
ret
cmp
outsb
adc
mov
insb
rcll
pop
lret
js
je
add
pushl
jge
mov
into
xlat
fldt
setbe
popf
stc
adc
push
bound
add
sarl
cmp
pop
mov
xchg
push
jecxz
lds
out
cmp
pop
icebp
xchg
pop
push
and
pushl
int
mov
imul
or
pusha
pushf
rclb
pusha
push
pusha
sub
or
add
cs
incl
jg,pt
adc
adc
cmp
outsb
inc
and
jp
shrl
push
ljmp
add
jle
mov
adc
scas
imul
jno
out
push
push
in
std
insl
add
outsl
addr16
jmp
pop
aas
icebp
pop
mov
scas
mov
call
das
adc
jbe
mulps
inc
movsb
sub
dec
fdivr
ljmp
data16
push
add
xor
mov
or
xor
insl
shll
lcall
iret
jmp
mov
xchg
shll
and
movsb
push
jbe
sub
ljmp
loopne
mov
adc
mov
fldenv
icebp
sbbb
popf
imul
xor
ds
or
cmp
mov
jnp
xor
add
bound
mov
into
pushl
shlb
mov
out
adc
es
aas
xchg
xchg
pushl
inc
inc
aaa
in
int3
push
sbb
mov
test
and
mov
fadds
aas
das
mov
push
clc
pop
adc
jbe
mov
jecxz
lock
scas
outsl
add
jl,pt
out
loope
dec
sub
cltd
pop
clc
cmp
jb,pn
adc
movsb
or
call
xchg
pop
leave
add
xchg
or
adc
repz
pusha
xor
stos
cmp
ljmp
pop
add
in
lods
mov
or
cs
lods
mov
lcall
call
incl
mov
aad
jmp
js
mov
dec
mov
out
test
mov
cmp
loope
out
cmp
pop
xchg
es
lods
inc
stc
aam
test
test
aad
lods
jl
stc
call
and
rorl
add
ret
test
pop
inc
mov
out
inc
xchg
insb
rcrb
lahf
jle
ljmp
iret
mov
push
adc
fsubrl
sbb
xor
rclb
fldcw
fxch
std
sti
mov
test
dec
imull
mov
scas
adc
sarb
add
shrl
imul
ljmp
xor
movsl
mov
outsb
fs
out
stc
fadds
sub
pop
outsl
call
int3
imul
lahf
das
andb
push
push
dec
xchg
and
loopne
cltd
or
sub
push
lods
mov
xchg
sub
or
mov
dec
xchg
xor
pop
je
jmp
fdivl
or
in
add
divl
jmp
je
cmp
cmp
movsb
sbb
jmp
or
ss
mov
inc
cmp
jmp
mov
daa
fimull
call
dec
cmpsb
jl
loop
neg
xorb
adc
mov
sub
daa
js
mov
lcall
pushf
pusha
add
xchg
xchg
stos
fistl
xchg
jp
xchg
les
dec
jmp
add
jmp
pop
lcall
sbb
leave
fmull
adc
outsb
xchg
jge
mov
add
push
push
fsubs
lcall
mov
or
in
pop
dec
popa
add
mov
push
je
les
jle
push
ja
pushl
ret
pop
test
dec
push
cmp
arpl
fwait
cmp
or
sbb
adc
call
xor
jge
jno
out
cwtl
pcmpeqb
ds
vcvtps2pd
movsl
popa
jno
mov
call
mov
in
movsl
pushf
jb
mov
enter
outsl
cs
xchg
mov
incl
mov
push
lahf
leave
cli
mov
dec
cmp
int3
sbb
es
decl
sub
addr16
fdivrl
sbb
mov
dec
cmpsb
inc
test
in
add
cmp
rcr
mov
push
mov
mov
jmp
push
popf
push
stos
pop
dec
cmp
stos
js
lds
add
leave
sahf
addb
fdivrs
mov
or
cmp
gs
andb
loop
iret
cmp
and
ljmp
lods
aad
push
pop
sti
lock
xchg
pop
lret
into
mov
insl
mov
call
out
add
xor
or
jne
int
insl
sbb
xor
mov
lahf
aaa
ljmp
or
cmp
dec
push
imul
dec
jmp
gs
movl
rorb
aam
idivl
push
pop
mov
incl
xor
and
imul
mov
sbb
lods
sbbb
incl
cmp
in
rcl
xor
fisubrl
stc
push
mov
or
push
jecxz
mov
ljmp
adc
add
mov
jecxz
out
adc
adc
jmp
dec
clc
jmp
ficoms
call
aaa
in
mov
add
push
cmpsb
dec
lahf
xchg
add
inc
mov
xchg
pushl
and
xchg
mov
mov
jle
sahf
sub
imul
ds
sub
mov
cvtps2pi
outsl
or
xchg
sbb
adc
movsl
cmp
dec
je
ds
xchg
nop
jne
xchg
into
sbb
sbb
fsubrs
sub
mov
les
popf
lcall
mov
clc
jle
xchg
push
fs
adc
xchg
cli
repnz
mov
das
push
cs
call
cmovo
sbb
push
loop
clc
fs
xor
push
sti
lcall
call
andl
jne
gs
or
stos
inc
outsl
cli
and
jb
imul
ljmp
pop
ja
dec
pop
jge
test
jne
lock
std
pop
inc
sub
ljmp
lcall
xor
cmp
jecxz
rorb
in
andnps
xchg
call
fwait
aas
insb
js
lret
popf
push
pop
cld
pusha
or
orb
mov
jmp
cli
lcall
stos
hlt
mov
ss
add
popl
mov
xor
ljmp
sub
leave
fdivs
lahf
rorb
adc
push
loop
jns
daa
shll
xchg
nop
inc
sar
xor
push
repnz
lcall
inc
jle
mov
int
sahf
mov
leave
and
xchg
cld
add
jns
sbb
xchg
push
mov
hlt
orl
xchg
sti
sti
and
dec
cmpsb
mov
negl
jne
sbb
push
insl
fdivrl
push
scas
push
dec
xchg
sub
decl
rcrb
and
pop
mov
mov
jp
xchg
lea
inc
bound
aas
fs
mov
adc
mov
mov
in
fwait
enter
cmp
orl
lret
push
mov
pop
testb
loope
sti
hlt
mov
decl
inc
xchg
sbb
cmc
add
or
pushw
movsb
or
decl
into
stc
imul
repz
sti
push
nop
xor
scas
push
xor
insl
inc
in
and
mov
pop
and
ficomps
mov
lret
adc
std
fisttps
or
mov
dec
sub
decl
leave
dec
cli
push
ret
sti
dec
jg
cld
and
adc
jae
in
call
call
xchg
inc
lods
xor
adc
and
pop
pop
lret
andl
int3
incl
fsubs
mov
jg
sbb
pop
movsb
pop
notb
ret
jb
in
and
ljmp
in
ja
mov
fisubs
adc
aam
sbb
test
fistl
lcall
fiaddl
ja
inc
popf
mov
push
cmpsl
jns
scas
mov
xchg
jmpw
decl
movsb
icebp
rolb
clc
xlat
aaa
mov
ficomps
sbb
hlt
scas
adc
xor
add
jmp
stc
dec
outsl
inc
pop
test
and
insl
cmpsl
adc
dec
xor
sbb
int3
call
cltd
or
test
es
mov
sbb
lahf
pop
hlt
jo
xchg
fstpt
outsb
dec
stc
in
add
cs
mov
xchg
lds
mov
inc
mov
adc
sbb
incl
push
loopne
cs
mov
xchg
inc
aam
inc
sbb
xchg
movsb
or
ljmp
lods
idiv
push
insl
cli
jne
mov
bnd
pop
cvtdq2ps
adc
inc
imul
incl
sub
jb
xchg
jle
mov
dec
mov
and
sti
xchg
cmp
push
adcl
fidivrl
daa
ficoms
cmp
mov
xor
lret
popa
dec
pop
mov
mov
xchg
sbb
jo
and
ds
addl
jg
popa
dec
dec
std
aas
inc
ljmp
lods
dec
addr16
add
out
pop
or
or
sub
sub
mov
ljmp
pushf
pop
mov
inc
stos
mov
sbb
pop
adc
loope
and
add
pop
inc
pop
lods
dec
xchg
xor
lods
push
push
ret
clc
out
jle
or
mov
mov
fsub
into
pop
push
outsl
push
lods
pop
sbb
push
aaa
stos
jb
mov
xor
pop
call
shll
mov
mov
movsb
adc
ss
cld
fcomip
pop
xchg
pushl
xchg
popf
pop
cld
sub
or
mov
xor
xor
jmp
push
stc
scas
stc
movsb
fwait
push
cmp
fidivrl
cmp
jb
pusha
out
dec
push
call
add
fidivrs
icebp
mov
or
inc
pop
sub
sahf
movsl
lret
inc
cmp
mov
jl
jne
lods
pop
push
dec
fistpll
mov
cwtl
adc
mov
dec
clc
jo
xlat
xor
sbb
lret
hlt
sbb
sarb
push
incl
scas
lea
stos
cmp
rolb
mov
jle
orl
ret
enter
ljmp
sahf
mov
jmp
in
test
xor
popa
rcl
imul
cmp
push
mov
out
add
ds
cli
mov
cld
mov
in
inc
xor
out
cli
adc
decl
and
icebp
pop
mov
aaa
dec
dec
test
fisubrl
mov
cs
mov
jmp
xor
call
int
mov
push
inc
lea
into
bnd
in
xchg
popa
jge
call
fwait
sti
dec
mov
into
flds
je
loopne
imul
movsb
mov
push
dec
jmp
decl
pusha
lods
cmp
xadd
jle
inc
jl
std
and
pop
cmp
daa
fadd
incl
sbb
test
lahf
mov
jge
movb
pop
test
test
addr16
add
fdivr
lcall
inc
jecxz
mov
jno
cld
push
sbb
in
call
push
push
daa
pop
incl
push
mov
cli
mov
xchg
add
adc
push
xchg
cmpb
mov
movsl
in
int
hlt
jmp
pop
xchg
mov
cmp
adc
dec
jg
mov
jne
inc
or
mov
xlat
sar
jmp
push
pop
and
sbb
fld
jmp
pop
cmp
push
das
fisttps
lcall
nop
cltd
les
sub
xchg
jmp
and
sbb
idiv
pushl
icebp
xchg
push
js
pop
jge
sbb
xchg
mov
lcall
xor
sub
sti
pushf
lret
jmp
jae
jnp
xchg
jne
imul
xchg
in
or
out
mov
pop
hlt
mov
addr16
aad
push
test
arpl
add
pop
subb
and
cmp
xchg
je
add
ffreep
cmp
test
nop
shrl
sub
add
jp
pusha
sbb
lcall
dec
dec
flds
jb
push
cltd
xchg
push
data16
mov
jp
mov
mov
call
in
adc
inc
aad
jno
mov
lock
mov
or
pushf
cmp
push
ljmp
lcall
adc
fsubs
ja
fs
xor
sbb
pop
pop
data16
out
lcall
hlt
ficomps
pop
inc
xchg
pushf
adc
cmpsb
leave
lret
pop
mov
stos
stc
je
mov
jmp
adc
movsb
mov
cltd
push
sbb
cmc
arpl
dec
movsb
jl
sbb
out
jmp
cmc
outsl
or
push
out
inc
cmp
andl
ss
test
jecxz
call
sti
or
sbb
arpl
xchg
add
out
cmp
test
shrl
dec
decl
cli
pushl
add
or
pop
mov
pop
arpl
aas
in
lcall
push
data16
jne
andl
jp
in
cltd
cmp
popa
pushl
lods
push
sub
mov
and
ds
xor
jmp
insb
adc
fisubl
jmp
repz
add
add
adc
lcall
std
xchg
cmpsb
mov
aas
cmp
pushl
arpl
ljmp
ficoms
insb
mov
cmp
and
mov
loop
cmp
xor
pop
gs
push
cmp
stos
or
je
repz
cmp
jmp
cmp
mov
inc
dec
inc
adc
lret
sub
inc
lret
leave
loopne
inc
add
jmp
incl
cmp
or
in
mov
or
mov
loopne
mov
ss
or
push
mov
push
dec
jnp
mov
jp
int
mov
call
fbld
push
add
aam
cmc
inc
sbb
out
into
addr16
pop
sub
push
pushl
aaa
jmp
test
push
pusha
mov
jne
jne
mov
sbb
pop
cmovns
sahf
fcomps
push
cld
lds
mov
popa
fst
cltd
scas
outsb
fiaddl
les
fmull
mov
mov
andl
fiaddl
inc
dec
out
movsb
adc
inc
loop
add
mov
lret
mov
push
mov
jb
es
mov
mov
test
mov
xor
and
hlt
mov
mov
lahf
mov
mov
sbb
cmp
daa
mov
dec
and
add
or
bound
shrb
mov
add
adc
mov
decl
mov
shlb
push
ret
lods
push
test
fstp
jmp
stc
call
enter
in
jl
inc
pop
rcrl
in
gs
fsubrs
sbb
pushl
jge
jecxz
outsl
lea
stos
sbb
std
adc
lret
pop
adc
stos
xchg
int
inc
adc
fadds
mov
das
nop
test
pop
push
imul
mov
loopne
jmp
cwtl
lods
inc
insl
mov
call
cmpsl
inc
cmc
nop
insl
rdmsr
rclb
sub
loopne
test
sub
sub
push
or
scas
sub
pushl
dec
adc
lea
insl
loopne
push
outsb
in
cmp
mov
lret
fcmovnb
pusha
and
push
ss
decl
inc
negb
leave
ljmp
lods
adc
inc
in
out
pop
push
js
jns
fucom
arpl
push
rcrl
add
jns
addr16
sbb
pop
mov
fcomp
xchg
sahf
mov
push
cmp
jo
sub
push
fldt
pop
jb
fdiv
stos
mov
popf
sub
arpl
aaa
and
call
adc
xchg
iret
je
test
daa
test
jno
stos
add
xor
insl
mov
cmp
dec
push
ror
fsubl
ja
inc
int3
and
xchg
dec
call
ja
dec
lcall
dec
mov
mov
pop
and
adc
dec
outsb
sarb
mov
mov
jmp
imul
lret
xor
int3
leave
push
mov
xchg
cmp
ljmp
lret
pop
pop
xor
out
jge
xchg
rorl
and
aam
dec
jno
jae
push
jnp
je
mov
xor
lahf
cmp
and
push
sub
pop
mov
out
mov
and
adcb
decl
push
or
fwait
jl
int3
sub
and
or
mov
jmp
popa
jns
inc
sarb
xchg
ljmp
ret
ds
mov
cmp
adc
ljmp
jnp
es
mov
pop
lcall
pop
adc
sarb
ljmp
arpl
mov
rclb
ja
jmp
movsb
xor
sub
sbb
aam
insl
xchg
sbb
sub
inc
pop
or
push
pop
sbb
jmp
out
cmpsl
js
jne
sbb
pop
xor
ror
cmp
dec
sbb
call
inc
ficoml
pushf
das
stos
cmp
xchg
and
pop
ss
push
mov
pop
inc
fcmove
iret
jg
je
loop
ljmp
adc
loope
xchg
jl
mov
insb
push
push
repnz
es
push
fldcw
push
mov
jne
sti
mov
xchg
insb
test
ret
decl
outsb
mov
pop
adc
sbb
ss
or
dec
pop
pop
sbb
in
dec
ret
decl
int3
jb
icebp
aaa
out
loopne
inc
xchg
scas
pop
lods
mov
out
cmp
mov
loopne
sub
enter
call
clc
mov
movsl
inc
loopne
inc
ja
push
jo
mov
mov
dec
jmp
mov
jmp
cmp
sbb
dec
shrb
or
imull
lock
or
incl
subb
pop
scas
fsubr
xorl
mov
xchg
add
xor
es
incl
fildll
ret
push
lret
adc
inc
pop
dec
adc
or
jmp
out
dec
into
decl
int
or
ret
lcall
lcall
les
sbb
clc
sti
or
in
shll
insb
mov
daa
and
leave
push
lock
jl
add
mov
mov
ss
call
cli
adc
xchg
inc
lods
or
mov
out
inc
mov
pop
aas
sbb
push
sub
in
push
jns
adc
add
pushf
jle
pop
mov
pop
cltd
pop
pushl
in
lahf
es
or
and
jg
inc
xchg
xchg
fidivrs
repnz
mov
call
cmpl
test
dec
add
xor
mov
adc
mov
daa
fs
push
push
ja
add
mov
int
shlb
xorb
lret
push
ljmp
pushl
or
xchg
loop
jae
lock
jne
xchg
cmp
mov
pop
cmp
pushl
stc
les
xchg
pop
das
icebp
fwait
mov
lcall
test
aaa
mov
in
popf
add
call
xchg
dec
ja
dec
or
adc
dec
sbb
xor
pop
std
movsb
out
push
cmp
lea
jp
lret
mov
repnz
aaa
inc
cmp
in
mov
jo
shlb
in
loopne
fbstp
sbb
pop
add
mov
in
inc
movsl
repz
push
nop
test
jmp
mov
in
movsb
sbb
loop
rcll
dec
fisubrs
daa
cmp
fucomp
aad
push
fiaddl
cwtl
mov
inc
push
cmc
lret
push
test
fistl
out
jne
cltd
inc
repz
pop
sub
mov
data16
call
popf
inc
pop
fildl
sbb
xchg
push
int
es
adc
lods
cmpsl
leave
sbb
incl
fstpt
mov
dec
loope
adc
rclb
cmc
mov
mov
rcll
jmp
add
cwtl
push
inc
cli
gs
iret
ret
pop
loope
in
pop
xor
in
dec
lds
nop
ds
imul
pushl
shlb
add
std
cli
mov
pop
fwait
pop
mov
push
fwait
mov
rorl
lcall
sub
adc
daa
inc
mov
xchg
inc
push
repnz
xor
lcall
xchg
inc
add
fsubrl
add
cmp
arpl
or
lcall
out
cmp
xchg
pushl
pop
pop
aad
rclb
das
mov
mov
push
in
movsl
cmc
sti
punpcklbw
loop
sub
sub
push
lret
out
mov
adc
out
dec
minps
dec
lcall
cmp
lock
pop
sub
sub
imul
xchg
mov
pop
jp
cli
mov
xor
cld
pop
push
push
jecxz
divl
and
test
inc
rcrl
xchg
xor
mov
or
jmp
and
pop
xor
mov
inc
dec
xor
mov
adc
orb
mov
out
mov
and
jae
in
adc
jns
cmp
stos
add
call
mov
mov
es
movl
jmp
sbb
ljmp
mov
std
dec
sahf
mov
scas
and
daa
cmp
jl
push
mov
out
loop
ljmp
add
push
and
push
xchg
inc
jb
cwtl
cld
addr16
sbb
cmp
xchg
jno
decl
pop
in
push
clc
dec
or
and
ret
sarb
lods
fucomip
dec
fwait
mov
lcall
push
dec
enter
or
aam
pushf
xor
stc
popa
push
jo
lahf
stos
call
insb
and
call
in
jae
lds
xchg
cltd
sbb
push
add
inc
adc
mov
cmp
jmp
xor
ss
dec
jle
int3
adc
xchg
sub
pop
fcmovu
aad
mov
xor
push
imul
push
push
insb
jl
jae
pop
ret
inc
repnz
scas
lock
out
mov
pusha
sub
xchg
outsb
jne
xchg
xor
cli
addr16
imul
pop
stc
jb
xor
insb
push
xchg
pop
in
call
std
setbe
lods
mov
loop
mov
call
adc
fs
xchg
inc
sub
movsl
iret
jnp
test
mov
jmp
es
aaa
push
jns
jmp
jne
and
or
xchg
push
cmp
lahf
push
jmp
test
call
mov
or
ss
mov
sub
hlt
and
xchg
push
jo
ret
mov
call
xor
les
push
mov
roll
dec
add
lds
ret
mov
jmp
push
imul
push
mov
lret
add
nop
divb
int
cmp
iret
incl
jg
mov
jae
push
in
scas
pop
scas
into
jae
aas
inc
popa
pop
cs
mov
jnp
ret
pushl
jnp
or
cmp
leave
test
call
and
fcmovnbe
dec
cmp
xor
jmp
xlat
lahf
mov
mov
lret
int
sbb
pop
cmc
jge
cs
xor
std
dec
cmc
call
imul
mov
insb
mov
bound
mov
and
sub
mov
jmp
xchg
or
insb
jg
cli
xor
loope
pop
xlat
xor
das
push
les
out
add
xchg
jg
mov
ljmp
pop
in
jle
mov
push
shlb
je
inc
push
jo
mov
jmp
jno
lods
in
into
repnz
orl
xchg
aaa
pop
repz
lcall
aaa
pushl
mov
std
push
mov
jl
mov
jp
clc
mov
jnp
sahf
lahf
push
pop
call
rolb
push
xlat
or
mov
dec
mov
mov
pushf
mov
jle
ret
lds
fdivr
lcall
andl
inc
aad
jp
pusha
jae
xor
lock
pop
int3
push
xchg
jp
sbb
push
jmp
orl
fdivrs
push
xchg
jo
mov
mov
pop
jmp
leave
test
xor
add
jnp
cli
mov
adc
loop
cmp
mov
in
enter
sub
pushf
les
shll
icebp
imull
sti
mov
xchg
loope
pop
out
enter
incl
test
lods
pop
stc
xchg
pop
je
popf
push
cmpsl
jne
fs
nop
rol
sbb
jbe
les
shll
incl
pop
mov
or
mov
les
cmpsb
mov
push
and
incl
xor
pop
mov
test
add
pusha
scas
ret
and
in
test
sub
incl
mov
paddusb
inc
stc
push
or
leave
sbb
xchg
cmp
mov
fs
test
call
mulb
jne
test
dec
add
sbb
hlt
bound
cmp
call
cmp
aas
and
cmpsl
sub
test
les
or
or
mov
push
call
dec
mov
or
daa
stos
das
ret
push
pop
sub
loopne
cmpsl
lds
bound
iret
xchg
js
loop
out
sbb
dec
clc
cli
lret
loope
mov
add
add
mov
mov
and
jmp
shll
js
mov
push
xor
test
stos
ss
fldenv
mov
jmp
cmp
loop
xchg
xor
mov
mov
pop
leave
sti
fidivl
je
ret
pop
add
incl
xchg
mov
mov
mov
sbb
xor
xchg
aad
xchg
and
sub
incl
ss
aas
inc
pop
dec
jg
mov
not
lods
movsb
pop
jb
xor
push
scas
jge
enter
incl
out
shl
sub
outsb
sbb
sub
nop
and
fcoms
lods
cmp
xor
aaa
adc
call
cmp
pop
pop
inc
and
dec
fs
stc
testb
cmp
xchg
inc
popa
mov
and
add
test
mov
jo
mov
push
push
hlt
mov
decl
adc
insb
mov
add
mull
jbe
sbb
mov
rcrb
push
cmpsl
mov
cld
call
sbb
fsts
dec
nop
js
xor
sbb
dec
scas
das
adc
fidivl
xchg
cmp
stos
dec
mov
imul
push
sbb
sub
pop
jge
fldt
cmp
dec
inc
les
mov
adc
fistpll
adc
or
movl
push
adc
sbb
loopne
or
xor
push
adc
mov
inc
cs
fdivrp
into
mov
incl
sbb
iret
jecxz
xchg
fldcw
pop
out
lahf
mov
inc
jl
dec
aaa
and
and
cmpsb
sti
call
jg
jg
insl
xchg
bound
mov
gs
ficoml
mov
inc
xchg
fdivrs
hlt
mov
push
addl
sub
jns
cmp
in
call
test
mov
and
out
pusha
and
ffree
mov
sbb
mov
decl
xchg
xchg
inc
lds
hlt
shlb
lret
xor
adc
pop
dec
bound
push
test
push
sbb
shlb
outsl
inc
dec
js
in
sbb
mov
cmpsb
inc
adc
add
dec
loop
sub
sarb
push
sub
add
xchg
movsl
push
sub
loopne
lahf
rcll
or
decl
dec
div
addb
pop
jae
sub
jp
shll
nop
rcr
clc
aas
insb
pushl
inc
fisttpl
mov
std
ret
xor
inc
rcll
std
add
cmp
fadd
call
sbb
xchg
pushf
cmpsb
les
jns
into
mov
sub
and
rorl
popf
pushf
dec
jl
mov
aam
pushl
pop
pushf
and
xchg
cmp
repz
inc
jp
in
ret
sarl
jmp
jp
mov
test
inc
aam
test
jnp
add
mov
mov
decl
je
hlt
mov
ret
dec
cli
dec
lods
fucomp
dec
cld
push
xchg
pmulhw
or
push
fisttpl
sahf
sbb
jb
subb
mov
mov
pop
hlt
xchg
sub
and
mov
push
test
and
xor
xchg
jbe
dec
shrb
ss
jbe
add
mov
dec
les
ret
add
pop
mov
dec
xor
xor
and
lock
test
js
repnz
pop
adc
pop
imull
incl
ds
outsb
cmc
int
jb
lds
repnz
mov
faddl
dec
lods
or
lcall
test
out
cld
xchg
testb
or
or
xchg
hlt
or
dec
xchg
xor
jmp
stos
scas
push
mov
std
sbb
xor
jg
orb
lret
mov
call
mov
inc
inc
in
mov
gs
cld
arpl
adc
mov
dec
std
xchg
dec
lods
jo
decl
roll
fidivrs
ret
pop
add
sub
pop
aaa
pop
and
popf
or
pushl
add
test
dec
hlt
repnz
jb
clc
ss
les
push
mov
sub
pop
or
cltd
add
aam
clc
mov
movsb
in
jo
push
sar
push
mov
adc
cwtl
or
pop
orb
stc
adc
push
push
aas
cmp
call
push
fwait
out
jb
mov
mov
stc
outsb
pushl
aaa
fcomps
sub
idiv
mov
ret
jmp
add
mov
or
xchg
imul
out
addl
push
pusha
aas
insb
cltd
and
dec
push
jmp
les
add
dec
mov
addr16
mov
fisttpll
pusha
xor
dec
dec
outsl
xchg
push
lret
xor
stos
mov
mov
or
lahf
incl
push
inc
aas
dec
out
ret
sbb
sahf
movsl
int
scas
les
pop
jne
aaa
arpl
loopne
sub
decl
shlb
jp
cli
lcall
mov
test
push
pop
mov
call
sub
decl
les
subl
sbb
cmc
adc
cmp
xchg
and
incl
popa
aad
jno
icebp
loopne
xchg
daa
scas
icebp
daa
pop
jns
arpl
pop
js
pop
adc
ljmp
or
pop
cli
fdivrl
es
je
mov
testb
out
push
sar
push
enter
mov
das
and
mov
mov
mov
push
repz
push
mov
test
adc
decl
pop
pop
sub
lret
inc
cld
mov
into
mov
ror
in
ds
jmp
cmp
pushl
fcomps
jge
inc
flds
scas
mov
mov
inc
jl
iret
mov
adc
xor
incl
mov
sbb
add
jne
add
aas
adc
repz
cmp
mov
mov
cmp
and
aas
jp
inc
stos
jns
inc
jbe
jecxz
push
test
pop
push
iret
xor
jmp
es
push
xchg
or
xor
bound
mov
nop
sar
pop
pop
adc
jge
mov
pushl
push
lahf
jne
xchg
cs
enter
cmp
stc
out
popf
idivb
or
incl
pop
lods
and
enter
push
decl
and
rcll
call
jmp
lods
mov
lods
ret
gs
sbb
inc
adc
outsl
in
jbe
jmp
popa
inc
push
movsl
sbb
call
divb
inc
cmp
xorb
pop
lahf
out
pop
push
cmp
nop
adc
lds
mov
call
adc
iret
rcl
addr16
mov
sbb
dec
insl
add
popf
icebp
jnp
adc
adc
decl
add
imul
lods
sbb
in
mov
cs
aam
add
scas
out
lcall
sbb
shlb
push
mov
into
cmp
mov
jno
ret
cmpsb
add
dec
fsts
sbb
sbb
test
out
ja
std
jecxz
int3
add
insl
pop
fwait
dec
andl
jmp
imul
cltd
repnz
push
aad
outsb
mov
insl
or
loopne
fimuls
cs
jmp
pop
pop
xchg
outsb
push
pushf
call
jae
adc
sahf
xor
lods
jno
push
lcall
incl
mov
and
pop
das
jns
sub
fcmovnb
loop
adc
or
cmp
push
out
shl
cmp
dec
out
add
imul
push
bound
push
jbe
mov
incl
mov
popa
fidivl
lret
jg
lret
mov
or
pmulhw
and
outsl
insl
loopne
ret
adc
lods
cmp
sub
insb
jecxz
push
mov
imul
call
mov
fnstsw
leave
out
push
sar
negl
sbb
incl
dec
mov
push
xchg
inc
popf
pop
in
pusha
mov
xor
lcall
dec
incb
lods
jae
fcoml
imul
mov
pop
cmc
mov
jno
jg
fildl
and
jg
movsb
adc
popf
jle
inc
dec
insl
fsts
rol
mov
cli
sti
inc
in
lcall
call
push
ret
leave
xchg
test
sub
test
sbb
repz
cmp
xor
cmp
or
cltd
andl
movsl
sahf
ljmp
inc
push
sbb
adc
or
pusha
loopne
ret
jno
jae
hlt
adc
ljmp
mov
xlat
mov
call
pusha
push
loop
jmp
loope
dec
mov
xor
sub
pushl
sub
push
arpl
out
dec
xor
sbb
nop
cmp
out
outsw
cmpsl
add
dec
lea
and
jmp
sbb
mov
fldenv
and
jecxz
mov
inc
sub
pop
mov
push
repz
mov
pop
mov
or
add
and
test
push
lcall
mov
ss
mov
or
addr16
stos
stc
js
pop
fimuls
repz
shlb
popa
jge
push
lock
mov
daa
aaa
shlb
pushf
test
push
and
lcall
pop
fcmovbe
jb
mov
aas
push
xchg
jmp
add
adc
aam
sbb
fidivrs
pop
je
sbb
cmp
sahf
inc
repnz
in
mov
les
andb
pop
mov
and
je
inc
xchg
cmp
push
in
addr16
dec
insb
cwtl
dec
in
mov
stos
cwtl
pop
xchg
dec
or
jmp
dec
push
cmp
mov
add
push
aaa
movsl
lds
repz
xor
xlat
add
jmp
cmp
cmp
pop
std
lret
inc
dec
stos
inc
dec
pop
loopne
mov
xor
xchg
cltd
cmp
pushl
xchg
sub
push
jae
iret
out
fildl
xlat
popa
aaa
testb
hlt
test
cmp
cltd
lret
add
lods
lds
mov
sbb
daa
pop
inc
push
dec
es
sar
pushl
mov
push
xchg
mov
inc
aaa
push
stos
sbb
jo
lcall
push
cmpsl
fistps
les
jbe
inc
or
sbbl
add
adc
repnz
jbe
xchg
sub
into
inc
sbb
xor
xchg
push
sub
dec
jg
sbb
pop
sub
lea
pusha
add
cmpl
xor
stc
mov
jecxz,pn
jmp
in
jne
lds
fcoms
cld
in
cmp
lret
dec
loop
and
lcall
mov
icebp
cmp
sti
mov
mov
pop
fwait
mov
add
sbb
scas
scas
push
js
inc
dec
cmp
fmuls
jmp
inc
aad
in
mov
or
or
mov
aad
decl
and
xor
negb
xchg
lock
jg
lahf
jecxz
adc
out
or
movsl
aad
add
cmp
and
cld
in
pop
sbb
negl
dec
pushf
cmpsl
les
push
decl
mov
sub
fisubs
notl
test
loop
push
cld
xchg
fcompl
lret
mov
sbbl
lcall
movsl
aaa
ljmp
repz
dec
xchg
scas
ret
cmc
push
inc
inc
push
mov
mov
call
rolb
mov
push
addr16
addr16
in
daa
fcmovnbe
andl
mov
in
xlat
jmp
jne
sub
pop
pop
pop
sbb
xchg
dec
sbb
les
sbb
arpl
lcall
sbb
arpl
movb
int
pusha
xor
das
nop
dec
push
jle
jmp
addr16
lcall
sahf
mov
add
push
inc
out
das
sbb
dec
das
test
and
mov
push
sub
scas
jne
cwtl
xchg
cltd
push
and
fdivr
pop
rorb
add
jne
imul
out
ds
mov
jge
in
mov
jecxz
fimull
imul
dec
testl
call
cltd
iret
mov
mov
cmp
and
or
sti
vmwrite
add
ljmp
xchg
test
jne
call
fisttpll
call
lret
ficoml
xlat
out
les
incl
sbb
scas
nop
inc
adc
and
adc
or
or
test
lcall
ror
aam
rcll
dec
lret
mov
pushf
xchg
ja
mov
mov
xor
jmp
jl
loop
dec
cmc
sub
mov
addr16
popa
push
in
xchg
inc
bound
mov
and
cs
int3
adc
adc
or
stos
insl
sahf
sub
movsl
and
decl
lret
mov
ss
mov
ficoml
into
push
or
mov
lcall
xchg
dec
aam
push
into
pop
mov
pop
rcll
cmp
mov
inc
add
jne
decl
mov
pop
das
push
xchg
movsl
pop
jge
sub
movsb
adc
lret
pushl
xchg
cmp
sahf
and
aas
mov
je
fxch
stc
pop
mov
mov
repz
xchg
xchg
fisubs
test
fs
xchg
push
ret
and
dec
mov
add
xlat
cmc
ret
test
std
pop
outsb
out
lods
cmc
das
cltd
gs
pop
addr16
and
cmp
jecxz
xchg
and
aad
lcall
aaa
or
jmp
mov
inc
ret
mov
mov
mov
xorl
inc
std
decl
cmp
cwtl
adc
int3
xchg
dec
xor
add
add
pop
mov
add
lret
loopne
ljmp
gs
cmpsl
popf
stos
push
shlb
fs
adc
or
inc
mov
or
and
mov
mov
stc
mov
fnsave
dec
mov
add
push
dec
push
xor
add
or
pop
inc
movsl
xchg
sbb
sub
call
decl
cmp
imul
icebp
repnz
cld
jo
jae
inc
mov
loope
sub
pop
push
jb
lcall
dec
xchg
inc
sti
cmp
gs
aam
cmc
shl
lret
mov
cmp
decl
cmpsl
cmc
xchg
in
sbb
ljmp
pop
dec
daa
mov
sahf
cmpsl
mov
and
jmp
pop
pop
push
jae
sub
nop
lock
push
mov
repnz
mov
sbb
call
imul
xchg
xlat
std
scas
push
jmp
pop
imul
cmp
leave
pushl
arpl
jo
pop
inc
out
subl
sub
mov
fs
incl
les
dec
int
ficompl
push
sahf
xchg
aam
add
arpl
incl
data16
adc
or
data16
out
out
sub
push
lret
into
dec
dec
aad
insb
das
pusha
repnz
lcall
fistps
jmp
test
lds
out
pop
pop
mov
mov
decl
inc
dec
inc
cwtl
imul
sbb
sbbb
add
insl
pushl
push
mov
adc
dec
xchg
or
push
dec
mov
and
xor
loop
lcall
cwtl
cltd
push
push
and
inc
add
inc
inc
jp
mov
push
cwtl
mov
xchg
pop
push
decl
fbstp
mov
out
sub
and
push
add
push
js
inc
in
cltd
sahf
cmp
mov
sarb
hlt
sbb
jns
jg
mov
scas
inc
mov
aam
imul
shrl
add
jbe
test
jne
add
js
push
int3
push
xor
xchg
pop
inc
lock
xor
loop,pn
lock
mov
ljmp
xchg
inc
cs
sub
push
inc
mov
pop
imul
xchg
jae
inc
sbb
pushl
insb
sub
cmp
add
add
mov
popf
push
ljmp
sti
sbb
icebp
push
mov
shlb
scas
call
and
nop
dec
cmpb
cld
decl
sub
xor
lcall
insb
fidivs
scas
ficoms
je
pushl
das
mov
mov
mov
fsubrs
mov
fdivl
pushf
adc
xlat
xchg
lcall
test
jge
es
add
repz
mov
pop
out
inc
mov
in
pop
incl
mov
cld
leave
or
jno
shlb
push
cmp
in
xor
sbb
jp
push
in
and
inc
push
imul
xlat
pusha
js
btr
add
pop
push
std
stos
out
cmp
mov
xorb
sbb
sub
sub
mov
cmp
jns
cld
cwtl
push
mov
shll
insl
xchg
cmpsb
xchg
jge
xor
xchg
nop
std
lods
xor
push
jge
loop
and
fdivrs
pop
sarl
in
movsb
xor
cld
xchg
in
jecxz
sbb
xchg
dec
jle
pusha
fwait
jmp
cmp
insl
add
out
jne
or
out
mov
lret
dec
cmp
ds
fistps
sbb
int
mov
mov
push
outsl
cmp
inc
into
sahf
jl
loop
cs
and
jmp
mull
pop
pop
inc
mov
adc
aaa
jecxz
push
jne
out
sub
fldenv
jns
jne
mov
mov
jg
pop
and
sti
sub
sub
inc
mov
loope
dec
shrb
mov
mov
aam
mov
fisubrs
outsb
pop
jmp
adc
test
sar
ret
mov
shlb
push
jle
stc
add
mov
fs
and
mov
or
pop
mov
pop
in
dec
dec
dec
scas
jns
mov
mov
inc
in
std
xlat
cli
ds
nop
ror
mov
in
push
mov
int3
je
mov
pop
shlb
mov
push
dec
sbb
decl
xchg
fucomip
sub
sub
sbb
fsubs
inc
xor
sub
jmp
in
inc
jo
inc
mov
sbb
out
adc
cmp
cmp
push
iret
pop
inc
inc
ljmp
fisubrs
outsb
push
push
fcmovne
adc
xchg
add
sbb
test
xchg
insb
loop
or
jmp
dec
lret
mov
out
jmp
sub
fidivrl
xor
or
jb
mov
jle
xor
pavgw
call
fildll
out
lea
inc
aad
dec
and
inc
sbb
lcall
decl
out
popf
mov
das
push
or
rcrl
dec
je
hlt
cmpl
ljmp
push
in
std
mov
jne
rcr
pop
bound
jns
scas
std
pop
divb
decl
les
cltd
in
adc
add
js
mov
jecxz
cli
icebp
jns
incl
sub
mov
les
jnp
stc
mov
movsl
push
adc
mov
jmp
divb
dec
imul
dec
xchg
out
dec
sti
popa
iret
jmp
mov
push
add
call
xor
fistps
stc
and
cmp
cwtl
push
ret
test
mov
fbld
stc
push
push
jno
ret
pop
ret
loope
jp
mov
dec
jns
fdivrs
pop
pushl
incl
dec
fs
xchg
mov
pushf
loope
rolb
cmp
sub
inc
fcoms
inc
xchg
cltd
mov
gs
dec
pop
es
or
mov
call
adc
or
or
lds
add
lret
cmp
sub
inc
mov
inc
xor
xchg
adc
movsl
xlat
cmp
jmp
lcall
in
arpl
cmpsb
push
inc
ret
jns
sti
lret
adc
je
xor
movsl
bound
test
lret
adc
xchg
dec
addr16
push
ficompl
fsts
pop
rcll
pop
pop
add
dec
movsl
jle
dec
mov
push
test
decl
roll
in
in
or
loop
out
push
jmp
into
ss
jg
and
decl
pusha
push
aam
adc
test
popa
notb
outsb
cmp
scas
xchg
fadds
aaa
stos
cmp
mov
push
outsb
sub
lret
push
sub
xor
mov
sbb
fmull
faddl
xlat
nop
loopne
jnp
insl
fsubs
decb
mov
mov
loopne
sbb
xchg
adc
fnsave
cmp
ljmp
testb
and
aas
mov
or
add
nop
push
into
das
cmp
mov
call
fbld
push
xchg
xor
int
jmp
in
sahf
aas
mov
dec
fimull
cmp
mov
sbb
push
mov
iret
into
outsb
movsl
popf
sub
dec
lods
push
sbb
ljmp
test
lcall
leave
dec
test
stos
xor
or
adc
add
pushf
sbb
fiadds
fisubs
add
fbstp
fiaddl
nop
mov
mov
call
mov
mov
cltd
mov
andl
rcrb
mov
call
pushf
jns
lret
ljmp
out
dec
cltd
lahf
lods
popf
insb
leave
aad
bound
loope
push
xchg
lock
call
pop
in
rorl
xchg
push
push
inc
bound
jecxz
xor
subl
ljmp
jo
push
xchg
lods
xor
dec
cmp
jge
idivb
sbb
or
aam
jo
jle
push
pushf
daa
jnp
mov
inc
sbb
clc
aas
fimull
pop
pop
aam
rorl
fisubs
pushl
jo
xor
or
lea
pop
add
push
xlat
jae
mov
cmp
imul
pushl
les
dec
ljmp
loop
jge
lret
jae
mov
div
or
incl
pop
mov
pop
xor
mov
pop
pop
scas
or
mov
jno
inc
or
add
jmp
sbb
mov
push
pop
stos
xor
je
cmp
out
and
pushf
nop
jecxz
jmp
icebp
stos
dec
push
or
inc
or
idivb
dec
fsubrl
inc
or
jmp
push
outsb
xchg
in
xchg
rol
mov
jb
pop
xorb
lcall
lcall
add
jb
xchg
shr
xor
xchg
pop
je
inc
mov
dec
xor
decl
cli
push
push
in
scas
jmp
fs
outsb
adc
testl
jmp
in
xchg
add
icebp
dec
in
lock
iret
add
movsl
mov
int3
push
sub
ss
pushl
sbb
arpl
popa
ficomps
xchg
push
mov
ljmp
outsl
fbstp
lods
outsl
xchg
push
jmp
dec
push
rolb
cld
pop
js
addr16
in
pop
xor
call
movsl
repz
cs
push
mov
push
outsb
subb
mov
and
call
fisttpl
mov
int3
jg
mov
inc
pmaxub
pop
out
jbe
repnz
or
pushl
inc
movsb
outsl
mov
movsl
cmpb
mov
movsl
pop
in
add
jmp
pop
icebp
adc
jnp
xchg
int
popa
pushf
mov
cmp
jne
pop
movsb
push
push
pushl
scas
mov
sub
imul
pusha
jecxz
sbb
aad
jle
stos
stc
xchg
jb
pushl
hlt
xchg
into
out
mov
cmp
scas
int3
push
in
xchg
adc
pop
cli
rcll
xor
jmp
aad
mov
dec
ret
sbb
and
setb
mov
pop
test
and
loop
or
movsl
xor
aas
cmp
movsb
aad
rcl
inc
gs
call
or
xor
enter
mov
das
das
cmp
inc
loope
addb
movsb
imul
pop
dec
iret
repz
and
cmc
ds
fisubl
jmp
lcall
jmp
xor
mov
bnd
or
inc
sub
sti
pop
rorb
jmp
pop
dec
jbe
dec
dec
mov
sbb
dec
popf
jge
pusha
mov
test
sar
lcall
push
mov
jg
movl
fsts
jne
lret
fmuls
push
sub
call
lahf
std
push
inc
pop
adc
pop
test
or
mov
cmpsb
xlat
dec
adc
adc
jg
or
pushf
pop
rcrl
sti
ljmp
mov
test
arpl
pushl
pcmpeqd
pop
inc
add
inc
mov
xor
out
out
sbb
xor
adc
adc
jmp
in
push
cmp
scas
add
cltd
push
cmp
jbe
insb
cld
cmp
cmpsb
cli
bound
call
pop
pop
iret
loope
pushf
cmpl
pop
imull
lret
push
test
pushl
pop
lock
repnz
div
js
xor
testb
dec
cmc
fstpl
cli
icebp
and
inc
pop
xor
repnz
ret
or
pop
fmul
ja
lcall
arpl
jmp
call
in
dec
sar
adc
mull
inc
sub
xchg
stos
mov
and
call
mov
leave
enter
shll
cld
lret
xchg
sbb
jp
stc
xor
push
adc
sub
xor
or
test
test
adc
or
call
cltd
clc
xchg
dec
sbb
ja
adc
mov
data16
dec
out
xchg
scas
cmp
sti
add
push
and
push
lock
push
pop
jmp
and
sbb
ss
sub
ret
or
jmp
add
addr16
shrl
jmp
notl
pop
adc
dec
lds
cs
in
pop
jge
jmp
mov
into
or
mov
testb
mull
decl
jno
pop
push
or
daa
movl
fiadds
cmpsb
inc
cmpsl
xchg
mov
mov
cmp
shlb
daa
inc
js
pop
jb
cltd
cmp
jo
lods
sbb
cmp
xchg
mov
jmp
fnstcw
or
xchg
xchg
xchg
scas
leave
lea
lock
mov
pushl
sub
fs
jl
psrlq
jb
xor
inc
add
pop
loope
aas
int
sti
hlt
cmp
repz
bswap
cmp
jg
in
out
lods
dec
sti
sbb
mov
mov
je
or
mov
pop
mov
mov
incl
arpl
and
mov
fidivs
ljmp
push
push
sar
xorl
mov
and
xor
rcll
xchg
call
lcall
scas
or
call
std
inc
idivb
xor
loop
fldcw
testl
cmpsb
and
call
adc
stc
scas
je
lcall
pop
test
cmpsl
xlat
imul
cmp
inc
adc
push
push
sti
inc
bnd
aam
xor
and
dec
xchg
or
push
cli
lds
notb
mov
dec
jl
mov
mov
fldcw
cmp
call
mov
aad
sub
clc
out
fimull
repz
dec
jno
cmpsl
bnd
ljmp
xlat
sub
sub
mov
inc
data16
xor
mov
inc
scas
ljmp
xor
icebp
mov
xchg
dec
add
bound
aaa
notl
dec
inc
pushl
cmpsl
cmp
push
out
inc
push
aas
gs
das
adc
int3
mov
stc
mov
or
mov
push
insb
dec
add
mov
ret
stc
mov
in
and
ds
out
or
inc
sub
aam
aam
stos
loopne
insb
sbb
popf
psrlq
lea
pop
or
xlat
neg
repz
aas
fdivs
ficoml
cmc
leave
sbb
mov
fsubs
mov
test
mov
fs
jmp
mov
adc
add
xchg
push
cmpsb
popf
sbb
shlb
xchg
dec
mov
jmp
pop
daa
insb
repnz
loope
cld
in
cmp
outsb
es
mov
sub
dec
add
call
mov
fildll
xchg
jl
in
out
add
lcall
decl
cmp
xor
les
xchg
outsl
add
pop
xchg
leave
push
movb
push
dec
jmp
sub
pop
pop
repnz
inc
and
mov
aaa
mov
adc
jle
push
fs
dec
das
push
mov
pushf
das
jle
inc
sub
or
push
fs
cmpsb
fstpt
pushl
sbbb
fstp
imul
adc
sub
notl
loopne
mov
mov
sahf
cli
shl
ja
pop
fucom
lcall
mov
jg
adc
xchg
in
outsb
mov
push
ja
sub
rdpmc
fbld
jp
jge
test
cltd
jno
pop
dec
dec
jnp
jmp
push
popf
mov
out
jnp
jne
outsl
adc
inc
fld
xor
adc
ja
push
sbb
jmp
in
xchg
mov
mov
jae
in
scas
in
mov
sub
mov
mov
push
mov
ficomps
int3
sub
inc
jb
loope
pop
mov
sub
sub
stc
dec
incl
pop
xchg
daa
adc
or
aad
push
call
out
decl
sbb
ret
outsl
daa
and
push
imul
xchg
mov
mov
in
cmpsl
sub
cs
sub
into
movsb
push
loop
jge
subb
mov
and
ljmp
push
ret
aaa
ret
ja
in
cwtl
xor
jle
cmp
adc
xchg
xor
ljmp
jle
jecxz
mul
loopne
aaa
call
pop
and
rolb
push
mov
push
fwait
jp
inc
daa
aas
push
jecxz
adc
mov
test
aaa
fs
xchg
pop
rorb
dec
push
repnz
ja
scas
incl
mov
data16
xchg
pop
sbb
push
daa
mov
enter
ja
repz
jmp
mov
scas
int3
mov
sahf
gs
inc
decb
bound
outsb
add
decl
js
insl
jnp
arpl
mov
imul
mov
hlt
adc
inc
and
decl
dec
mov
and
nop
addb
xor
mov
xchg
push
decl
sbb
pop
shrb
cltd
sti
cmc
lds
mov
div
xchg
decl
cmp
mov
test
push
inc
aas
adc
faddl
incl
mov
roll
jb
fcoms
xchg
cld
or
sub
push
xchg
mov
xchg
call
sbb
stc
out
push
outsb
pop
mov
push
scas
mov
cmp
mov
dec
mov
fsubl
pop
adc
fwait
xchg
jmp
fs
fsubr
dec
sti
cmp
imul
sub
xchg
jmp
jmp
mov
push
or
shll
mov
aam
decl
or
clc
test
mov
dec
call
lret
push
dec
fwait
sbb
cmp
shrb
jbe
nop
sbb
inc
sub
pop
popf
les
mov
decl
lods
in
arpl
cld
leave
in
enter
cmc
cmp
call
xor
jmp
imul
xor
cmc
je
test
pop
sub
cli
nop
xchg
jo
sub
lea
out
lcall
inc
push
mov
adc
push
inc
adcb
cmpsb
negl
pop
jp
fisttpll
sbb
mov
dec
in
inc
inc
adc
xor
std
xor
push
cltd
add
push
xchg
nop
rcpps
mov
dec
ljmp
inc
pop
xor
push
push
sbb
test
xor
xchg
xor
pushl
inc
jnp
loop
adc
les
xchg
push
into
push
fs
imul
lcall
add
popa
stc
mov
adc
dec
adc
mov
ss
incl
jecxz
movhps
lds
icebp
sbb
lods
scas
mov
sbb
adc
call
test
xchg
daa
lock
mov
jecxz
or
in
or
lcall
addr16
fcoml
inc
jmp
cmp
jnp
aas
das
push
jno
adc
int3
mov
inc
adc
mov
ja
pop
pop
hlt
aas
mov
int
inc
mov
mov
xor
incl
xchg
mov
dec
cs
push
pop
add
push
jle
sub
mov
add
mov
sub
dec
in
lret
incl
mov
or
stc
xlat
inc
pop
sub
mov
xchg
rcr
and
push
ret
and
enter
jmpw
fs
mov
fs
sti
repz
mov
decl
hlt
add
fs
mov
out
rcl
add
sub
mov
test
dec
fistps
sub
inc
mov
stos
pop
movsl
mov
mov
pop
mov
jnp
fstpt
inc
adc
fnstcw
cmp
inc
ret
cmc
pop
cmp
xor
xor
shll
push
fnstenv
imul
incl
inc
sbb
dec
inc
popf
pop
cmp
aaa
push
and
rcrl
daa
jl
and
ret
decl
inc
mov
scas
ss
xor
fwait
jbe
push
mov
fisubrs
dec
or
dec
lock
outsb
mov
arpl
cmpsl
or
mov
mov
outsb
mov
aad
push
inc
cld
fidivrs
call
add
repnz
mov
mov
pop
lret
or
dec
sbb
jb
sub
add
mov
movsb
inc
mov
fsts
push
in
inc
pop
mov
mov
fnstenv
or
pushf
les
jg
jle
xchg
sarb
xor
imul
insb
pusha
dec
jno
cs
ljmp
sbb
adc
aas
and
je
dec
ret
cmp
jmp
rorl
rcrl
sti
sub
pop
call
add
dec
jbe
sbb
xchg
jno
test
iret
in
and
inc
add
inc
clc
jmp
mov
xchg
jge
jl
mov
mov
popa
inc
mov
loopne
mov
ljmp
loopne
call
add
lcall
xchg
pop
sub
fistl
and
jo
sub
dec
pushl
in
pop
ja
xor
sbb
xor
jae
imull
subl
cmp
or
shl
adc
rol
pop
aad
test
push
push
xchg
stc
test
jmp
adc
cli
push
ret
sub
fsubs
cmp
inc
xor
and
cmpsl
ljmp
cwtl
insb
push
pop
inc
pop
popf
add
add
aas
mov
mull
mov
sahf
push
xchg
jb
sar
incl
aaa
cmp
xchg
push
imul
mov
lods
mov
fnstcw
inc
imul
mov
cli
dec
mov
jmp
ljmp
clc
lock
cmp
and
cmp
push
inc
pop
ss
mov
call
pop
cmp
lods
ret
rorb
bswap
fwait
cmpsl
xor
sbb
ds
nop
sahf
popf
and
lcall
fistl
pop
mov
adc
jmp
inc
jnp
cmp
pop
sbb
sub
pop
sbb
adc
push
mov
jl
jns
popa
xor
ljmp
adc
inc
aam
push
inc
repz
or
dec
scas
cmp
shrl
cmpsb
nop
lcall
dec
add
pop
or
pop
adc
push
pop
push
sub
out
pop
xchg
sbb
inc
cmp
gs
ror
sub
adc
mov
std
push
jecxz
stc
cs
sub
jmp
adc
imul
gs
jno
shl
mov
sbb
popf
mov
jmp
in
dec
cmpsl
push
push
dec
cmpl
jbe
lret
inc
sub
outsl
and
mov
test
incl
push
adc
cmpsb
enter
clc
bound
jo
mov
fwait
inc
out
mov
out
pop
ljmp
cmp
mov
adc
pop
clc
mov
ljmp
mov
push
push
ficoml
rep
outsb
jae
mov
xchg
in
push
dec
movsb
and
insl
push
push
sbbb
test
mov
adc
dec
xchg
out
push
loop
pop
mov
or
int
test
jb
or
lock
lcall
adc
cmp
gs
lods
rcrl
outsl
test
insl
xor
test
inc
pop
mov
mov
jmp
xchg
insl
std
jo
jbe
out
jmp
xchg
sub
add
mov
fadds
dec
mov
push
xchg
notl
arpl
push
adc
bound
test
mov
jecxz
icebp
xchg
loopne
lcall
xor
xor
pop
or
gs
sti
icebp
inc
mov
sub
fwait
call
adc
sbb
stc
ds
push
sbb
mov
mov
out
in
sub
cmpsb
bswap
pop
iret
inc
add
adc
ljmp
outsb
cmp
es
mov
adc
mov
jecxz
jg
sub
or
sbb
pushl
out
icebp
xchg
jo
xlat
xchg
loope
repnz
negl
pop
js
dec
dec
push
or
test
cmpsb
fwait
inc
negl
inc
int
adc
cwtl
enter
pusha
and
adc
bound
decl
inc
fs
push
adc
pop
stos
mov
adc
push
adc
cmp
pushl
mov
jne
out
jns
pusha
ret
push
jns
leave
mov
mov
mov
add
mov
inc
mov
and
cli
cmpl
dec
mov
add
dec
fbstp
xlat
mov
dec
pop
scas
inc
adc
pop
or
pop
and
loop
inc
lret
mov
xchg
mov
lcall
xor
jne
pop
jp
add
ljmp
aad
scas
adc
jle
orl
incl
ja
inc
xchg
fbstp
add
jo
insb
ljmp
pop
popa
xor
dec
test
pop
sub
std
pop
pop
dec
adc
mov
xor
rcrb
fnstenv
mov
decl
negl
mov
mov
popf
cwtl
insl
into
mov
sahf
or
lea
inc
push
and
rcll
jmp
add
mov
sub
fwait
cwtl
mov
push
dec
sub
mov
clc
adc
and
dec
movsl
adc
mov
ds
dec
inc
push
addl
lcall
jb
push
aas
jmp
sbbb
ss
popa
test
jecxz
xor
jmp
add
cmp
int3
jns
inc
push
xor
mov
ret
bound
scas
mov
dec
sbb
sbb
xor
adc
stc
mov
mov
and
icebp
lret
pushl
pusha
daa
lcall
push
fwait
loope
mov
pushf
data16
sbb
and
xor
incl
imul
bound
xchg
xchg
out
ret
xchg
fs
pop
mov
sub
xor
call
add
cltd
imul
idivb
int
enter
xchg
fcoms
outsl
mov
out
incl
xchg
dec
dec
mov
sub
lret
cltd
dec
shll
inc
je
sbb
repz
cltd
pop
lcall
dec
lea
std
int3
mov
push
bound
mov
push
add
call
incl
stc
inc
jg
in
push
xchg
cmp
inc
xorb
push
andb
call
mov
or
addr16
push
push
loopne
pushf
or
int3
mov
test
aad
popa
das
in
lcall
ja
lea
call
inc
mov
stos
jo
push
imul
decl
lock
imull
sub
xchg
push
or
cmc
pusha
adc
nop
mov
fldcw
dec
pop
shrb
in
ss
ljmp
xchg
std
test
pop
lret
push
test
sub
and
mov
fcomps
adc
sbb
cmp
pop
rcrl
push
push
fcmovnbe
mov
jp
sar
decl
daa
adc
testb
jp
ljmp
sub
mov
out
mov
inc
clc
or
leave
lea
pop
shrb
mov
or
add
jmp
mov
or
incl
mov
jno
fld1
fwait
fs
mov
into
sbb
xchg
add
jmp
mov
mov
clc
rolb
xor
adc
jmp
mov
fnsave
sbb
jo
dec
xchg
aam
jo
cltd
popa
fisubrs
decl
sbbb
sub
sbb
cmp
shrl
daa
roll
push
call
decl
push
cltd
mov
imul
mov
aaa
lods
nop
loopne
jmp
xchg
lods
cmp
lcall
jne
mov
push
rolb
loopne
mov
dec
adc
mov
mov
jmp
adc
cmp
xor
or
out
cmp
and
sbb
fisttps
incl
test
daa
ljmp
fcompl
sub
mov
jae
dec
inc
jle
ficoms
pop
ss
lahf
jle
das
sti
and
cmc
cmpsb
xchg
sti
fdivp
or
pushl
mov
adc
insl
lea
lods
jg
push
or
icebp
pop
lods
mulb
adc
pop
ds
sub
mov
add
or
sub
xor
xor
mov
icebp
sti
mov
fdivrl
lea
test
shl
aaa
cltd
incl
and
sbb
or
inc
or
adc
mov
push
lcall
call
mov
lods
outsl
pop
mov
imulb
out
dec
pop
sbb
lods
aaa
sbb
addr16
ljmp
mov
or
mov
out
push
popa
jge
mov
aas
fidivrl
jo
pushl
imul
pop
xchg
sub
js
sbb
cmp
test
call
add
stc
xchg
in
out
leave
pop
push
sbb
stos
add
pop
mov
sub
out
aas
pop
aaa
lcall
mov
loope
fs
push
jb
rcrl
push
jnp
outsb
mov
mov
dec
scas
push
inc
in
and
dec
mov
in
jno
repnz
arpl
out
dec
sbb
add
aaa
sbb
cmp
dec
mov
call
pushl
lcall
test
insl
pop
mov
sub
add
cmp
ffreep
sbb
pop
push
add
push
and
sarl
pop
call
decl
xor
sbb
xor
stos
push
mov
add
icebp
data16
sub
incl
mov
adcb
jecxz
daa
xchg
pushf
popf
inc
fwait
test
addb
push
or
or
jp
xchg
mov
or
stc
pop
in
jp
in
mov
loope
call
mov
lret
nop
shll
inc
jnp
jp
int3
push
xor
ds
out
call
movl
xor
mov
pusha
je
in
mov
in
sar
incl
cmp
out
imul
aaa
or
or
adc
or
mulb
nop
rorl
les
push
add
or
mov
inc
cmc
mov
jge
sub
inc
js
daa
adc
inc
dec
jns
sti
xchg
and
dec
in
adc
mov
std
rolb
int
lcall
out
cvtps2pd
stos
jle
push
testb
int3
imull
jg
mov
test
push
call
les
pop
jecxz
adc
rcrl
push
cwtl
fidivrs
add
lds
xor
jbe
adc
test
cmp
mov
sti
and
outsb
adc
or
jg
shll
mov
push
jnp
decl
in
cwtl
loopne
or
mov
inc
and
mov
or
das
in
or
ljmp
cltd
pop
mov
sub
cld
or
pushf
stos
pushf
xor
lock
inc
mov
ljmp
push
clc
push
rcrb
loopne
xchg
movsl
imul
fisubrs
or
adc
jb
jmp
jb
xchg
inc
shll
xor
mov
out
pop
cmp
sub
in
imul
dec
jmp
push
or
ret
popf
gs
inc
fisubrl
fcmovb
mov
xchg
std
inc
jmp
ret
mov
aad
test
mov
mov
inc
fdivrl
pop
lcall
jbe
and
add
movsl
dec
pop
repnz
imul
push
sub
decl
inc
dec
fwait
std
pop
mov
push
push
push
popf
push
test
lods
and
pushl
repnz
sub
and
repnz
inc
xor
pop
mov
inc
sub
mov
jno
mov
es
out
mov
in
shrl
rorl
jmp
movsl
mov
mulb
sti
pop
or
xchg
arpl
stos
mov
push
pop
add
jns
push
sub
sbb
jb
repnz
imul
or
pop
jl
mov
or
inc
clc
and
jmp
lcall
ror
mov
out
mov
cmp
nop
xor
push
sub
jns
inc
inc
popf
test
push
sub
or
jg
call
inc
lods
repnz
scas
jmp
push
mov
fucomp
ficoml
mov
push
cltd
dec
sahf
pop
fcomi
sbb
decl
lods
dec
cli
inc
sbb
xchg
xorl
inc
loopne
inc
jmp
add
incl
adcb
mov
loopne
sbb
cmp
dec
loope
ljmp
push
cmp
imul
call
shll
mov
xchg
mov
pushf
test
shr
out
jnp
cmp
or
mov
or
pop
mov
mov
or
ret
xor
inc
jno
xchg
test
outsl
adc
mov
or
not
ret
lahf
pop
test
inc
imul
adcl
fidivs
jg
ljmp
shl
xchg
lret
add
sti
mov
mov
push
and
cmp
and
fwait
int
lcall
cs
inc
ss
in
cvtdq2ps
bound
arpl
sub
ret
cmpsb
pop
jae
jle
push
std
outsb
jbe
mov
mov
lcall
shr
dec
push
lcall
nop
sarl
sbb
pop
sub
sbb
sbb
pop
sbb
and
lcall
lret
jg
inc
hlt
mov
ficomps
mov
mov
mov
decl
xlat
inc
js
lret
aad
ljmp
test
or
cmpsb
xchg
sbb
cmp
ret
ja
incl
mov
fwait
out
icebp
addr16
cs
movsl
lret
xchg
scas
gs
pop
cs
mov
incl
jae
imul
push
cwtl
and
mov
xorl
jp
test
pop
imul
decl
and
jns
out
aad
mov
mov
cltd
dec
imul
subl
or
lock
andb
bound
cmp
lock
pop
sbb
das
orl
jp
nop
mov
inc
mov
into
sbb
cmp
lock
jb
mov
lret
inc
fstpl
cmpsl
jle
cld
stos
jo
out
sub
sbb
cmp
dec
inc
jbe
lcall
scas
xchg
dec
mull
lret
call
ds
mov
pop
pop
divl
jne
dec
lret
jmp
test
ljmp
pop
test
inc
push
fwait
push
addr16
pop
mov
xor
call
lock
test
mov
or
out
dec
sahf
sahf
leave
loop
idivl
dec
pop
daa
pop
ss
add
jp
inc
in
jno
sbb
sbbb
mov
fbstp
jo
dec
cwtl
subb
leave
das
push
inc
mov
fstps
and
lahf
push
hlt
pop
jge
push
sarb
dec
mov
pushl
cmc
icebp
jge
sub
jecxz
add
adc
sub
sub
rol
out
sub
inc
and
inc
jge
orl
mov
adc
stos
pop
push
std
adc
lock
jmp
ftst
mov
sub
inc
addl
jecxz
sbb
decl
mov
sbb
jns
iret
aas
jno
int3
idivb
mov
std
imul
scas
sub
lcall
mov
adc
aam
lods
decl
push
xchg
xchg
psubusb
inc
je
ss
jae
sahf
push
xor
and
pop
push
subl
incl
cmc
jns
jmp
idiv
push
sub
imul
loop
jae
loope
aad
pop
out
out
bound
mov
inc
sub
dec
lods
sub
xor
pop
les
xor
decl
xchg
mov
jp
outsl
movsl
cmc
xchg
pop
mov
in
das
ljmp
clc
xlat
lea
adc
xchg
jmp
pop
pop
jbe
pop
mov
ljmp
fwait
aaa
add
aad
sub
sub
cs
clc
mov
fistpll
inc
inc
js
dec
decl
xchg
sub
pop
cli
test
jmp
mov
inc
imul
bound
popf
jmp
cmc
lcall
mov
push
xchg
movsl
xchg
adcb
cwtl
sti
sti
cmp
or
call
arpl
fucom
loopne
fidivl
sbb
lret
push
xchg
out
add
jbe
and
ljmp
leave
pop
mov
add
or
in
mov
in
daa
adc
jmp
sbb
lcall
std
in
adc
out
int
mov
and
adc
fiaddl
out
mov
dec
fs
aas
and
pop
jp
in
push
or
xchg
cmp
test
je
adc
call
into
rorb
push
jo
mov
pushf
and
inc
out
add
sti
das
adc
in
jge
dec
stos
adc
xor
mov
pop
cmp
adc
mov
dec
xlat
or
push
cmpsb
rclb
fadds
leave
pop
int
aam
into
hlt
pop
roll
ja
lods
out
std
in
scas
inc
stos
xchg
sub
and
leave
je
loopne
mov
in
stos
pushf
or
ja
addr16
jb
cmp
xor
mov
pushl
and
push
enter
push
aam
adc
add
fistl
mov
fcmovnbe
test
mov
xchg
ja
imul
ljmp
out
or
mov
push
xor
push
push
and
in
mov
dec
inc
xchg
cmp
adc
inc
lcall
out
movsl
ljmp
pop
ljmp
jg
incl
lock
imulb
cmc
inc
xlat
ljmp
mov
clc
jns
push
adc
push
in
scas
sub
or
dec
jb
lcall
call
pop
rolb
dec
xchg
adc
aaa
mov
and
sbb
mov
call
loopne
test
fldenv
gs
or
xor
rorb
and
in
ss
incl
cmc
xchg
mov
lods
dec
push
push
test
push
jno
cmpsw
popf
scas
cmp
fwait
cmpsb
mov
lcall
jnp
stc
fldt
repnz
sub
add
xchg
push
int3
pop
jne
mov
cli
stc
jge
call
ss
add
and
insl
or
fisttpll
inc
jbe
int3
loope
aaa
push
pop
sub
push
dec
call
inc
dec
in
outsb
mov
mov
push
mov
int
cmc
dec
ja
dec
add
cmpsb
xchg
push
dec
stos
jae
aaa
or
push
push
pop
jle
scas
aad
xor
push
mov
ljmp
outsb
xlat
inc
ds
mov
add
mov
psllq
pop
movsb
das
subl
pushl
and
cmp
stos
cld
bound
ja
xor
sub
and
sbb
jmp
or
repz
mov
call
mov
int3
cs
imul
pushl
dec
movsl
xor
adc
jge
es
nop
mov
push
xor
repnz
out
les
adc
jmp
mov
test
dec
pop
shl
insl
fs
int3
clc
enter
pop
fcmovnb
cli
mov
dec
xor
sub
incl
jo
inc
lock
das
in
mov
sub
xchg
repz
lret
lods
sahf
cli
subl
mov
lret
shlb
das
imul
lods
xor
in
scas
ljmp
cmc
adc
sbb
jmp
test
mov
ja
pop
adcb
insb
movsb
lcall
add
mov
ret
cld
pop
iret
inc
outsl
dec
shrb
das
es
ljmp
fimuls
xor
add
xor
inc
icebp
cld
pop
jb
in
xchg
pop
sar
sti
lcall
mov
push
sbb
hlt
xchg
mov
mov
jp
shl
or
int3
dec
pop
jle
mov
icebp
sub
outsl
mov
adc
mov
dec
jnp
jmp
sbb
mov
insb
imul
repnz
xor
call
decl
adc
ror
mov
icebp
loopne
cmp
jmp
xor
dec
rorb
cli
inc
ljmp
and
outsl
xchg
mov
aad
sub
cmp
cld
xor
aam
imul
pushl
cld
add
cmp
and
outsl
fwait
mov
imul
pushl
cmp
push
sti
push
xor
lock
ja
xchg
jo
iret
leave
aaa
ss
imul
lcall
mov
sti
insl
ja
pop
int3
cmp
sbb
aaa
and
in
xor
aaa
sti
imul
inc
call
cld
pop
or
push
in
mov
gs
push
push
in
mov
xor
shl
jmp
push
cs
sub
jp
jecxz
movsl
sub
js
xor
shrb
mov
lcall
jge
cltd
rolb
cmp
and
xchg
jae
mov
imul
inc
sbb
mov
test
sbb
mov
add
lret
out
sahf
jne
std
fsubs
orl
jne
push
or
dec
mov
adc
adc
fs
push
lret
shlb
push
pop
mov
dec
jmp
adc
jg
mov
mov
out
repnz
adc
call
sub
ret
sbb
xorb
aam
jle
sub
and
push
jmp
pop
dec
cmpl
stc
shlb
push
fistl
fcmovu
mov
std
or
fcos
call
jg
dec
sbb
shlb
or
jo
jmp
pop
loop
call
sbb
cmpsb
dec
inc
add
sub
jo
mov
aam
or
inc
xor
dec
lret
call
testb
adc
dec
outsl
movsl
call
popa
jns
fstpl
je
movsl
jae
inc
adc
decl
or
xor
popa
xchg
les
sar
dec
jns
call
jb
sarb
jo
decl
pop
add
sbb
sarb
dec
pop
clc
dec
pop
fnsave
es
mov
xchg
jle
fisttpl
pop
pushl
jl
cmpsb
fidivs
push
nop
sub
lcall
mov
xchg
inc
sub
call
gs
aad
push
and
pop
pusha
popf
lods
push
das
inc
mov
mov
xchg
loope
cmpsl
incl
insb
out
das
jno
int3
cmc
sbb
push
in
sbb
and
mov
cmp
sbb
sbb
or
jbe
mov
inc
mov
sbb
test
inc
cmp
js
pop
mov
test
iret
iret
pusha
push
push
dec
adc
jmp
loopne
std
jmp
pushl
scas
pusha
sbbb
lods
and
test
fs
mov
pop
daa
test
movsl
sub
rcrb
mov
cmp
or
xchg
pop
mov
jae
jmp
fucomip
push
fdivr
call
cmp
and
pop
bswap
xchg
push
sub
stos
nop
sbb
shlb
push
or
pushl
mov
stc
arpl
push
jecxz
xor
cli
jmp
inc
test
ljmp
sbb
lea
shlb
subl
pop
js
dec
ljmp
pop
ja
push
pushl
xchg
xchg
sbb
xchg
jge
rorl
roll
xchg
pushl
jle
xchg
js
outsb
jecxz
mov
sarb
rcll
js
sbb
lds
data16
mov
jmp
xlat
mov
jno,pn
popf
xor
ja
xchg
xor
ss
lret
decl
ljmp
outsl
pop
rol
loop
in
lea
add
cmp
dec
xchg
pop
xchg
add
flds
pop
mov
cli
outsb
test
pop
cs
lret
ds
mov
jne
ljmp
cmp
in
roll
insl
loope
fwait
mov
es
ja
hlt
out
cmp
outsb
out
mulb
fistps
inc
pop
push
pushf
std
pusha
in
adc
call
add
cmpsl
out
shll
movsb
xchg
ss
sarb
mov
inc
sub
data16
sub
jmp
cmp
shlb
jbe
or
in
iret
lods
pop
loop
push
in
jmp
mov
pushl
inc
stc
int
imull
xchg
fwait
in
inc
in
pop
arpl
mov
mov
data16
decl
leave
add
jmp
xchg
daa
int3
mov
int3
nop
mov
sub
jl
pop
aaa
hlt
aad
adc
aaa
rolb
dec
push
push
xchg
js
dec
subb
push
scas
jbe
test
dec
arpl
ja
test
cmp
push
mov
jle
pop
push
cmp
sbbb
fwait
adc
adc
mov
jmp
ja
test
das
imul
movsb
out
mull
cmova
sub
cmp
in
das
into
cmp
sbb
shrb
push
sbb
jbe
ljmp
xchg
mov
jmp
shl
call
add
lds
pushf
xor
xchg
jecxz
aas
xlat
stos
and
cld
sub
sahf
cli
out
jnp
sbb
dec
aam
jge
and
and
dec
push
pop
jnp
lret
ljmp
lea
or
cmp
test
mov
out
fbstp
jmp
inc
or
ds
fcmovbe
fldcw
dec
xchg
pop
sbb
mov
jns
jecxz
call
mov
jo
rcll
in
push
test
fsubrs
imul
or
scas
mov
mov
fadd
in
clc
sbb
sub
sub
sbb
add
and
ljmp
bsr
xchg
xchg
or
jno
dec
xor
inc
adc
push
lcall
and
in
lods
hlt
dec
in
adc
or
mov
mov
add
xchg
mov
lcall
pop
cli
int3
and
cmp
ror
adc
loopne
inc
dec
imul
mov
lcall
cld
mov
xchg
dec
rolb
jg
mov
sub
jne
jle
ror
pop
test
add
push
ljmp
in
mov
test
enter
lahf
push
mov
jbe
cmp
fcmovne
pop
and
fldcw
mov
in
pop
sub
mov
repz
incl
mov
test
jg
mov
out
xchg
jecxz
jb
mov
loope
aam
decl
xor
stos
ficoml
pop
fisubrl
dec
sub
sbb
jae
aam
and
jg
mov
jmp
ljmp
and
sub
out
adc
and
xchg
lret
inc
popf
mov
pop
je
call
call
sub
nop
jecxz
ja
in
adc
dec
mov
in
add
in
pop
rorb
rclb
imul
dec
or
push
in
out
sahf
testl
scas
ds
jmp
clc
push
xor
or
es
cmp
or
mov
fnstsw
lods
out
cld
pushl
and
adcl
xchg
pop
jns
mov
push
xchg
ficoml
call
xor
pop
xchg
push
xchg
xor
mov
ja
cmp
xchg
inc
hlt
mov
adc
ret
push
sbb
call
or
xchg
add
sar
mov
test
icebp
lret
adcb
cli
push
sbb
mov
pop
lret
jmp
test
jae
adc
stos
mov
adc
lods
sub
fmull
jmp
cltd
mov
mov
call
or
stos
sub
dec
lods
push
push
cmp
gs
push
sub
mov
adc
mov
adc
arpl
mov
scas
adc
jmp
imul
adc
sub
movsb
adc
xchg
aam
and
psraw
jge
call
pop
dec
mov
rcrb
mov
repnz
das
sub
mov
decl
scas
pop
mov
mov
inc
ss
push
std
pop
cmp
sbb
cltd
psadbw
jmp
mov
pushl
or
test
push
cmpsl
pop
dec
adc
dec
addr16
loope
imul
add
jmp
popf
outsb
fwait
sbb
mov
pop
loop
mov
push
sub
pop
stos
leave
add
pop
in
mov
push
cmp
vpaddb
jb
add
shll
adcb
in
arpl
lcall
mov
scas
gs
rorl
bound
ja
adc
ljmp
shlb
test
xor
ret
mov
fcoms
aaa
setb
lds
dec
test
push
decl
mov
testl
dec
lea
fimuls
fcmovne
jmp
scas
imul
incl
cmp
call
or
mov
jns
push
mov
test
ljmp
inc
pop
sbb
mov
push
out
int
or
mov
pop
stos
aaa
ljmp
call
mov
cmp
push
rorl
jno
shrb
pop
pop
add
xor
push
jmp
daa
aaa
and
jae
pop
fmull
or
sub
testl
pushl
int3
inc
sbb
mov
sub
int
inc
xchg
orl
test
mov
iret
jle
nop
ret
inc
repz
test
push
jl
and
inc
call
jno
dec
or
cmpsl
jb
push
sub
in
js
mov
lret
cmp
clc
sar
es
aas
xor
inc
xchg
push
loope
cmpsb
mov
lcall
stc
imul
sub
mov
pushl
mov
sub
xchg
out
inc
xor
push
and
mov
mov
nop
xchg
cwtl
imulb
ret
call
mov
mov
dec
cmpl
gs
sub
cmp
adc
or
adc
inc
mov
loop
and
mov
adc
gs
sti
dec
dec
xor
fmuls
test
push
and
sub
dec
adc
xor
aad
jbe
xor
int
adc
mov
sbb
mov
sbb
dec
jbe
test
pop
aad
or
outsb
cli
rep
push
push
jae
call
xchg
nop
in
push
mov
insl
fucomip
inc
daa
xlat
cmp
pop
int3
xor
and
or
bound
loopne
sbbb
or
add
jmp
cmp
pop
outsl
xor
dec
xchg
out
sbb
mov
lods
testl
push
jle
or
shrb
call
scas
mov
mov
cli
lods
fisubrl
cmp
xchg
stc
fdivl
jmp
scas
sub
push
adc
dec
rolb
mov
mov
movsb
xchg
adc
int
or
jle
xlat
sub
add
dec
shrl
rcrb
or
push
pop
icebp
cmp
inc
sbb
mov
push
mov
rol
sbb
cmp
dec
movsb
ret
push
cmp
pushl
jns
xchg
sub
mov
mov
gs
push
adc
sbb
jb
xor
decl
idivl
mov
inc
leave
adcl
push
movsb
ret
pop
or
inc
in
push
or
lahf
divb
sbb
insb
lret
inc
or
test
push
frstor
in
mov
fdivr
aas
xchg
inc
cwtl
mov
sub
std
decb
insb
ficompl
push
int3
push
jp
std
jge
jge
cs
insl
mov
adc
mov
jb
cltd
and
pop
jnp
mov
pushl
jmp
stc
adc
xchg
and
adc
int
jp
jo
push
in
pop
cmpsl
adc
lcall
sbb
mov
push
loop
lods
mov
sbb
inc
lea
dec
leave
xchg
shll
incl
rcll
cltd
nop
dec
loopne
mov
aaa
imul
adc
jne
cld
jp
add
xchg
jp
mov
jns
in
mov
push
mov
fsubl
out
inc
test
out
ret
pusha
adc
insl
cmp
repz
mov
out
in
incl
out
test
inc
cmpsl
jae
fstps
inc
mov
cld
ss
sahf
add
out
add
ja
and
sti
sub
sbbl
xor
xchg
insb
fimuls
mov
mov
incl
jp
pop
out
or
insl
sbb
xor
movsl
mov
divb
roll
lds
inc
push
mov
inc
pushf
jge
sbb
icebp
xchg
lods
inc
pushf
push
or
adc
push
pop
pop
xlat
push
insl
fwait
xor
rorb
jmp
lods
mov
leave
and
jg
sub
rol
cmp
jo
test
push
sub
lea
call
jecxz
dec
in
sub
jp
mov
push
xchg
adcb
ret
xor
xlat
cmp
mov
fcompl
ljmp
popf
mov
sbb
sub
or
leave
or
cli
ja
dec
popf
rorl
or
pushl
add
inc
cmpsl
nop
sar
cli
cmp
enter
dec
lret
insl
in
inc
idivl
mov
outsl
decl
dec
adc
int
testl
out
adc
enter
fsubrp
push
loop
pop
repz
out
stos
rcrl
je
out
hlt
icebp
stos
iret
add
roll
sbb
lcall
mov
cmp
lcall
fs
mov
jle
popa
sub
js
cmp
ja
lahf
fpatan
mov
lods
jne
or
gs
mov
adc
jl
push
jmp
dec
push
jecxz
xchg
push
mov
mov
repz
test
fnstcw
cmp
xor
imul
lcall
shrl
out
pop
and
and
out
flds
aam
call
pop
vpaddw
sar
inc
push
jbe
xchg
aaa
cmp
pop
xor
or
lcall
bound
les
imul
mov
push
dec
sti
ret
dec
sti
js
fdivrl
int3
add
cmp
test
aaa
push
jge
fsts
mov
or
push
mov
xchg
dec
and
pop
imul
pushl
sbb
mov
lahf
enter
pop
lea
pop
and
aas
lods
sbb
push
lcall
jl
mov
push
test
add
jbe
imul
shrb
sbb
sbb
incl
mov
icebp
fcoms
xchg
mov
pop
movl
repz
mov
pusha
sbb
sbb
add
pushf
sti
inc
jb
dec
and
loope
jno
pop
lcall
ret
es
mov
pushf
sbb
sub
sbb
pop
sbb
xchg
incl
add
cmc
out
fldenv
lret
jae
ss
or
pop
add
xor
ret
into
fucomp
rcr
in
inc
inc
or
arpl
loope
cmpsl
pushl
add
lds
add
test
inc
sub
in
adc
roll
jl
lock
lcall
add
push
jmp
data16
rorl
scas
xor
or
cld
inc
loope
xchg
sbb
sub
jmp
in
pop
jb
mov
cmp
scas
movsl
sti
in
rorb
push
and
mov
out
decl
aaa
xchg
popa
or
ds
jb
jnp
fcmovne
jns
lret
dec
in
loopne
inc
inc
push
inc
mov
lcall
loop
xchg
mov
xlat
jnp
xchg
adc
push
adc
mov
das
clc
out
jbe
dec
mov
xor
cmp
fwait
xchg
sbb
xchg
shlb
andb
mov
dec
je
mov
out
adc
xchg
mov
jne
or
cwtl
repz
mov
repz
mov
sbb
subl
or
xor
iret
cli
add
mov
dec
ja
fdivrs
mov
adc
inc
subl
mov
jg
pop
sub
jnp
and
outsb
je
dec
lea
fistpl
mov
add
enter
push
popf
xor
dec
add
dec
inc
scas
or
test
xchg
test
mov
push
sub
or
pushl
data16
insl
mov
adc
cmp
mov
mov
sbb
enter
jno
imul
pop
xchg
mov
fcmovne
stos
daa
test
pop
and
outsl
out
pusha
or
fcmovbe
adc
jp
cs
stos
roll
js
test
sub
cld
sti
hlt
push
test
popf
mov
scas
clc
decl
idiv
adc
hlt
shrb
xor
loopne
or
jp
push
mov
mov
outsl
adc
sahf
or
pop
ljmp
and
dec
cld
pop
jae
mov
call
inc
popf
daa
lcall
mov
lds
inc
pop
out
nop
mov
pop
mov
jmp
pop
jle
and
xchg
mov
les
jno
pop
xchg
xchg
jecxz
sub
ljmp
decl
xor
sub
xor
xor
iret
mov
sub
xor
out
xchg
push
pushl
push
and
inc
iret
repnz
push
lret
sbb
dec
inc
dec
fcompl
xchg
push
sub
push
fmull
movsl
stc
push
loope
call
ret
adc
mov
pop
mov
xlat
sbb
incl
fimuls
imul
pop
adc
pop
mov
bound
iret
add
lcall
insb
out
xchg
mov
mov
sbb
sahf
jno
hlt
mov
xchg
push
test
adc
decl
in
sbbb
xchg
xchg
push
xchg
lahf
lcall
lret
xlat
pop
xchg
sar
ljmp
insl
dec
mov
ss
push
xchg
std
mov
in
test
scas
je
xor
cmp
mov
push
imul
out
xor
pop
mov
cmpsb
inc
repz
call
add
shll
add
or
pushf
and
nop
mov
sar
call
dec
jle
dec
sbb
roll
outsb
jno
and
push
jge
sub
and
popa
incl
test
daa
cwtl
pusha
out
add
jecxz
add
sbb
dec
in
xchg
decl
into
in
aad
mov
jle
je
in
xchg
aas
pop
cli
jp
or
push
test
bound
adc
cld
sub
mov
and
test
and
jo
cmp
ds
mov
call
scas
shll
lock
cmp
xor
xchg
lret
inc
clc
push
cmp
mov
lods
jecxz
in
cmpsb
dec
scas
push
idivl
jecxz
cmp
into
add
pop
and
inc
jecxz
aam
jmp
mov
mov
mov
icebp
orl
pop
mov
inc
pushl
cmp
ljmp
or
jle
dec
xor
sub
orl
fidivl
or
shl
scas
fnstsw
push
or
cs
push
fcompl
dec
jns
mov
loopne
lcall
push
clc
out
jae
push
fnsave
mov
jnp
mov
or
aad
add
loopne
xor
lahf
lods
repnz
cmp
jmp
insb
int3
inc
adc
xor
jbe
gs
ja
add
push
rcl
xchg
out
mov
decl
mov
xchg
jecxz
push
sti
and
push
call
or
dec
pextrw
daa
arpl
fcoms
pushl
pop
out
push
jns
mov
xchg
xor
add
fcmovb
jp
xchg
mov
mov
incl
mov
or
in
outsl
hlt
out
hlt
popf
jns
pop
adc
hlt
cmpsl
fisubs
xchg
xchg
xchg
and
incl
popa
jecxz
mov
ret
mov
cmp
outsl
sbb
inc
mov
leave
imul
call
jno
in
pusha
lahf
lods
push
xchg
adc
inc
add
mov
sbb
push
fs
jle
mov
inc
jmp
stos
fs
xor
mov
pop
js
outsb
js
test
inc
push
loopne
mov
in
jb
gs
xor
jmp
cmpsl
inc
sbb
call
jge
push
inc
cmp
push
jb
sahf
or
stc
mov
decl
and
cltd
sar
aam
jge
push
jp
jl
xor
test
fcoml
pushl
dec
pop
dec
dec
mov
in
sbb
or
sub
or
stc
ljmp
lds
arpl
sub
jb
jb
cmp
sub
sahf
jo
dec
je
adc
xor
xchg
sbb
cli
jmp
popf
add
and
lret
adc
push
cmp
add
dec
cmp
xchg
mov
rol
jno
mov
mov
iret
cmp
inc
push
add
outsl
sbb
testl
call
inc
and
or
jmp
mov
call
and
icebp
sahf
jne
ja
pop
filds
xlat
dec
sub
cmp
adc
jmp
sar
pop
lahf
mov
insl
ret
lds
mov
sub
popa
call
ljmp
inc
ret
mov
cmc
inc
sbb
mov
mov
jnp
sub
push
jl
popf
mov
sahf
sub
rolb
xor
mov
mov
mov
fbstp
xor
cs
call
insl
adc
gs
push
mov
loope
xchg
aaa
popfw
jns
inc
push
insb
cmpsb
movsb
push
vmwrite
incl
sbb
mov
jo
or
jns
cmpsl
rorb
push
push
imul
adc
inc
xor
in
jne
xor
jo
dec
test
add
xor
xor
jmp
call
jle
mov
xchg
adc
repz
push
push
and
push
or
or
push
cmp
inc
icebp
pop
or
mov
aaa
sahf
jecxz
fsubrl
subl
movsb
xor
cmp
mov
mov
lret
in
outsl
pop
repnz
xor
or
rolb
gs
inc
mov
enter
mov
test
pop
aad
call
pushf
insl
pop
xor
fisttpl
sub
jb
mov
cmp
push
mov
leave
in
into
outsb
sub
mov
jge
call
xlat
sbb
das
mov
mov
jne
rcrl
shrl
pushf
pushl
sub
dec
lock
pop
pop
mov
aas
cmp
xor
cmp
rcrb
inc
ret
ljmp
xchg
test
std
add
cmp
ja
push
int
sti
push
pop
or
pop
lcall
add
push
inc
aam
push
dec
fidivrl
cld
jo
pop
push
nop
pop
test
and
decl
insb
mov
out
gs
out
outsl
jg
cmpsl
sahf
adc
lcall
ljmp
out
push
inc
sbb
jne
push
jns
imul
mov
adc
sub
mov
inc
mov
addr16
addr16
ljmp
sub
ficompl
aas
leave
sbb
clc
add
pop
je
loope
jecxz
lcall
mov
push
out
shll
sbb
daa
add
bound
add
or
jmp
es
jo
incl
adc
push
xor
push
dec
fstl
cmp
aam
mov
popa
aas
rorb
iret
mov
mov
mov
mov
pop
cltd
adcl
and
pushl
gs
jbe
sbb
jl
loop
lea
cmc
or
imul
popf
lock
incl
mov
arpl
fsubrl
mov
xor
int3
adc
push
cmpsl
mov
cltd
inc
xchg
pushf
mov
call
adc
js
pop
dec
lahf
mov
xchg
push
cmp
ljmp
cmpsb
shl
mov
add
icebp
insb
push
pop
or
das
sti
cmpsb
xor
inc
xchg
lsl
shlb
cmpsl
jl
jmp
dec
ss
sbb
sarl
mov
jge
test
push
dec
lea
ljmp
shl
stos
inc
ljmp
push
jge
xor
bound
mov
incl
mov
xchg
mov
movsl
cltd
add
fsubp
cmp
adc
dec
sub
push
mov
incl
and
test
mov
mov
lret
mov
mov
sahf
xchg
mov
lcall
dec
adc
cmp
mov
out
ljmp
pop
add
gs
decb
push
push
cmpsb
aad
lret
ficoml
cmp
inc
cmc
sub
add
sub
cld
negb
call
jge
xchg
cmp
mov
mov
shr
xor
in
je
lret
and
and
jp
fnstsw
out
xchg
pop
adc
and
pop
out
ljmp
lcall
pushl
int3
fsts
icebp
clc
xor
movsl
lods
in
lea
add
clc
add
ljmp
jbe
ljmp
lret
cmp
ret
xchg
push
fmuls
dec
icebp
xchg
dec
xlat
fdivrp
sbb
xor
aas
jge
insl
adc
popf
hlt
cmp
jo
lea
jl
lcall
lahf
outsb
in
gs
push
daa
and
nop
call
cmc
fdiv
flds
test
frstor
sti
leave
insl
and
es
daa
mov
mov
dec
nop
xorl
sbb
roll
mov
faddl
call
add
jmp
filds
in
incl
mov
outsl
arpl
mov
push
mov
scas
jl
scas
push
out
and
sti
mov
shl
push
adc
stos
mov
pop
out
les
jbe
je
inc
lcall
decl
add
scas
scas
fdivrs
ds
in
dec
jge
mov
push
addr16
jmp
pop
push
adc
insl
dec
or
jg
sub
in
movsb
pushl
xlat
mov
pushl
roll
pop
pop
push
dec
mov
dec
icebp
int
or
es
jecxz
or
push
push
inc
clc
dec
xor
cmp
push
pusha
pop
or
mov
hlt
jmp
xor
aas
hlt
jns
in
aas
fwait
lcall
movsb
dec
es
jp
mov
inc
scas
xchg
mov
dec
jmp
pop
fisubs
dec
fs
lcall
or
inc
pop
add
fsts
jmp
mov
xchg
stc
pop
loopne
mov
lea
stc
xor
jno
test
lcall
cmp
pop
dec
out
mov
mov
subl
jnp
dec
mov
mov
out
xor
cmp
sub
sbb
fists
loopne
stc
and
jmp
ja
mov
push
mulb
scas
mov
popf
test
fsubrl
das
mov
sub
jmp
mov
rcll
loopne
sbb
not
out
fsubl
add
out
js
int
ficompl
mov
and
sub
jbe
mov
fsubs
stos
call
jnp
xor
scas
aad
cmp
mov
xchg
xchg
inc
fldcw
jae
js
shl
dec
push
pop
imul
call
arpl
cmc
cmp
xchg
mov
pop
or
jge
int
lock
decl
mov
jne
sub
cmp
mov
iret
mov
pop
xor
inc
inc
cmc
adc
add
decl
fldenv
int
pushf
mov
xchg
mov
or
pushl
mov
jmp
pop
popf
mov
test
mov
xorl
incl
mov
xchg
xchg
lret
shl
movsb
mov
repz
adc
jnp
in
or
push
outsb
inc
repz
jp
ja
enter
mov
jo
ret
sub
pop
out
cs
lcall
jns
or
jb
fs
daa
push
and
fiadds
jbe
test
loope
jmp
xchg
inc
sbb
inc
rclb
cmp
sub
cmpsb
pop
shrl
nop
stc
in
icebp
lcall
inc
jmp
xchg
pushf
jbe
pusha
mov
mov
inc
xchg
stos
mov
decl
pop
pop
in
nop
nop
mov
ljmp
ds
call
or
or
int3
xchg
shl
xor
jge
insl
ljmp
in
call
jmp
and
out
dec
int3
leave
xchg
stc
push
jle
out
xor
cwtl
xor
mov
dec
add
out
dec
mov
lcall
adc
inc
add
mov
xchg
mov
push
mov
push
sub
movsl
pop
nop
mov
outsl
stos
call
mov
test
push
sti
cs
lret
push
xchg
xchg
sbb
cmp
leave
push
call
mov
rorl
or
mov
stos
and
mov
imul
lcall
shlb
xchg
hlt
clc
and
and
pop
mov
jne
decl
ds
add
popf
mov
pop
xor
mov
aaa
cmp
ret
push
idivb
xor
lcall
pop
fs
xor
test
jne
movsl
jp
xchg
cmp
cmp
mov
jo
subb
call
xor
int
jecxz
imul
adc
adc
adc
movsl
sbb
jge
rcrb
pushl
outsb
cmp
mov
sbb
add
add
pop
fisubrs
sti
push
daa
in
add
aad
sub
stc
xchg
mov
mov
cs
cmc
addr16
incl
aam
insb
loope
mov
loopne
outsb
or
xchg
or
cmp
pop
fadds
out
xchg
and
dec
ja
arpl
bound
pop
scas
mov
ficomps
testl
pop
das
xchg
popf
sub
in
or
stc
ljmp
mov
xor
addps
out
mov
repnz
mov
fs
inc
cli
sahf
or
es
decl
xchg
repz
xrelease
dec
xor
and
pop
xchg
add
call
sub
jl
cmp
mov
jbe
and
repnz
mov
cmpb
sti
jbe
xor
in
sub
stos
lods
mov
fsubrp
call
cld
add
jg
ljmp
rcrb
xchg
outsb
push
add
add
movsl
stc
pusha
out
sub
inc
shll
scas
cmp
call
add
cs
push
js
push
scas
inc
pop
mov
push
xchg
out
cwtl
lock
ffreep
jmp
ljmp
mov
push
lods
push
int
call
inc
lcall
xor
fcomps
movsb
pop
sub
dec
fcoml
lret
push
mov
mov
jmp
jecxz
add
push
loop
dec
daa
inc
pop
jns
ljmp
cmp
ud0
call
test
stos
cmp
stos
pop
fstpl
cs
ds
cld
mov
pushl
pushl
add
aad
rorb
jne
inc
ds
add
pop
in
mov
inc
inc
or
call
es
call
push
mov
push
sbb
mov
xor
int
daa
and
mov
jge
lret
incl
dec
rclb
pop
mov
insl
cmp
mov
lods
mov
pusha
fidivrl
fidivl
sub
jo
mov
in
or
lock
xchg
pop
in
jp
jns
sarl
daa
and
lret
mov
push
push
outsb
xchg
cltd
addr16
sbb
cmc
popa
repnz
push
and
pop
xchg
inc
popa
mov
adc
mov
cmp
push
mov
inc
sub
xor
pushl
cmp
cmp
dec
fiaddl
dec
aam
sbb
rclb
repz
adc
lcall
pusha
arpl
mov
addb
ret
jns
mov
data16
sbb
lret
or
cmp
sub
pop
sysexit
test
je
fdivr
popw
out
mov
push
push
or
mov
loope
aas
lea
out
xlat
shlb
xor
sbb
mov
mov
lcall
mov
test
adc
jns
add
push
insb
jmp
xchg
popf
stos
loop
inc
adc
ss
test
push
ss
or
out
or
das
or
call
inc
jns
lret
mov
mov
inc
mov
inc
xchg
outsb
jne
iret
jb
adc
adc
ds
pop
mov
repz
jns
pop
push
out
imul
out
in
cli
pop
dec
mov
das
lret
out
push
sbb
mov
mov
push
repnz
fidivl
dec
aas
cli
push
mov
sar
inc
shrl
in
jl
xchg
fdivrs
popa
rorl
leave
incl
in
fdivs
sub
insb
notl
mov
je
ffreep
xor
ss
pushl
adc
cmp
push
dec
dec
movsl
leave
hlt
dec
imul
mov
push
imul
lahf
add
fcomi
jno
cmp
dec
cmpsb
cmp
push
inc
mov
pop
sbb
cmp
push
add
jmp
loop
xchg
shll
scas
not
imul
mov
cmp
xorb
jnp
or
incl
add
push
inc
mov
xchg
adc
mov
or
pop
pop
ljmp
xchg
movsl
xchg
in
mov
hlt
pop
lods
mov
rolb
lods
stos
sub
push
iret
inc
hlt
loopne
in
dec
xchg
adc
dec
mov
into
cmc
lahf
js
nop
scas
filds
dec
push
ljmp
mov
add
pop
and
xchg
push
mov
pop
inc
cli
mov
inc
cwtl
sbb
mov
mov
pop
rcrl
mov
cmp
mov
pop
push
mov
jmp
test
ret
je
jle
shlb
jl
mov
sub
cmp
lcall
pop
rcrb
dec
andl
cmc
cld
push
mov
xchg
pushf
out
or
jmp
decl
stos
repnz
inc
cwtl
dec
mov
adc
mov
jnp
sub
mov
dec
push
imul
pushl
test
add
sbb
iret
cmp
dec
xor
cmp
push
and
pop
mov
push
adc
in
pusha
cmpsl
add
and
decl
rcl
repnz
pop
jp
movsb
push
jbe
mov
pusha
loope
push
fisttpl
call
jne
ret
sbb
pop
add
loop
incl
lock
mov
push
pushaw
fstps
mov
lea
das
addb
dec
mov
int3
xor
add
call
mov
pushf
adc
cwtl
xchg
int3
lock
xchg
rcrl
aaa
aas
dec
xor
mulb
jl
pushl
lock
pop
pop
popa
pusha
orb
push
scas
pop
adc
lods
adc
mov
cld
sbb
sti
fbstp
repnz
mov
test
or
xchg
pop
jle
idiv
mov
repnz
cmp
incl
decl
lock
jae
inc
popf
scas
daa
rcr
fdivr
pop
adc
push
adc
mov
mov
aam
ret
or
push
ds
je
pop
jns
in
je
shrb
inc
xchg
in
idivb
test
pop
aas
scas
mov
ljmp
mov
pushf
cs
lcall
xchg
jge
scas
xor
jl
sub
lahf
aaa
repz
lock
hlt
and
mov
movsb
push
test
or
bound
fisttpll
mov
dec
cmpsl
daa
xchg
bound
out
jmp
data16
inc
mov
out
add
lcall
add
or
incl
movsb
sarl
push
popf
push
stos
xor
pop
jecxz
fwait
sbb
cmpsl
lods
outsl
decl
xor
pop
shl
xchg
push
test
fdiv
sub
arpl
jbe
pop
cltd
cmp
mov
faddl
sub
add
jmp
adc
ret
sarb
cmp
ret
test
int3
mov
push
jo
and
pop
test
pop
pushf
pop
decl
xor
ret
popf
into
daa
outsl
fmuls
push
mov
fidivs
xor
decl
pop
pop
movsb
xchg
das
mov
adc
cmp
inc
popa
std
dec
outsb
push
fistl
mov
push
inc
sbb
or
clc
loopne
fadds
adc
jp
stos
call
movsb
mov
scas
jae
push
inc
cltd
push
cmp
stos
add
or
in
lret
enter
jb
sbb
sub
and
aas
jne,pn
mov
xor
ljmp
sbb
push
ficoms
xchg
jg
cmpsl
inc
imul
imul
ret
aas
icebp
mov
mov
push
arpl
xchg
xor
incb
lds
sub
arpl
inc
fdivrs
test
notl
push
pushf
js
push
gs
pop
in
icebp
iret
cmp
jl
ljmp
lock
jbe
rorl
and
lds
mov
test
cli
jecxz
in
sti
inc
call
leave
mov
test
popa
cwtl
mov
xor
mov
pop
fwait
leave
test
hlt
lret
jmp
push
mov
xor
xchg
ror
cmp
and
int3
call
lcall
iret
cli
xchg
jns
xlat
jp
std
jmp
dec
sub
cmpsb
repz
cmp
lret
jbe
daa
js
fldenv
sbb
and
stos
fmull
jecxz
notb
je
je
ljmp
loop
sbb
in
xlat
inc
and
add
fstl
stos
mov
jmp
jmp
jo
out
cld
rcll
mov
sarb
cmp
cmpsl
repz
jmp
arpl
inc
das
cmp
xor
ror
and
ret
idivl
sub
cmpl
popf
mov
mov
and
push
inc
mov
into
push
adc
daa
or
sub
dec
sar
jmp
notl
push
test
sti
jo
xor
jmp
fcomi
mov
outsb
repnz
cmc
add
jmp
cli
mov
test
bound
ja
sarl
cmc
movsl
inc
xchg
fcompl
ljmp
cmc
push
xchg
mov
cmp
cmp
sbb
adc
mov
inc
repz
xor
divb
pop
jp
xor
neg
out
dec
stc
repnz
movsl
jecxz
sbb
xchg
outsb
xchg
jb
repz
jmp
push
sbb
hlt
imul
mov
sub
push
shlb
call
inc
push
add
sub
xchg
mov
leave
lret
sbb
sbb
jb
aas
out
add
or
jmp
sub
xchg
inc
aam
adc
dec
push
mov
fs
iret
xchg
mov
call
rcll
hlt
ret
pop
mov
and
ljmp
add
xor
in
jnp
fbld
sub
in
into
addr16
loope
das
add
jmp
inc
out
call
daa
test
sbb
fs
loop
xor
sub
add
xor
pushl
rep
iret
test
xchg
adc
stos
nop
push
mov
das
xor
inc
dec
pop
test
lcall
and
mov
add
je
xchg
data16
and
cmc
mov
mov
pushl
mov
add
push
orb
mov
je
mov
andb
cli
aaa
psubusb
push
js
dec
push
leave
xchg
outsl
push
sbb
insl
jae
and
int
mov
dec
sbb
lock
loope
cmc
jmp
push
push
jge
or
xlat
ljmp
jmp
pusha
dec
imul
mov
mov
lock
pushf
or
sbb
xchg
cmpl
sti
sahf
sti
and
jg
lods
push
pushf
out
fsubp
loop
lods
xor
je
mov
jb
mov
pushl
sub
pop
mov
push
popa
cmpsl
addr16
sbb
andl
jg
sbb
iret
out
mov
jp
in
inc
inc
insb
andl
lret
repz
sar
insl
in
outsl
mov
incl
jp
aam
sbb
ret
stc
aaa
adc
sbb
or
xchg
movsb
ds
decl
movsb
adc
ljmp
jle
es
sarl
std
fstpt
loopne
fcomps
ljmp
jle
adc
rolb
sbb
das
aad
jne
fisttpl
pushl
fnstcw
test
cmp
push
sub
or
xchg
jmp
push
push
shll
jno
cmc
and
movsl
push
decl
pop
push
sbbb
jnp
pop
repnz
xchg
push
enter
insb
jmp
ja
repz
loope
mov
call
xor
lcall
das
jbe
js
sahf
jg
stos
or
dec
push
iret
xchg
decl
cmp
cmp
out
dec
mov
mov
cmp
mov
xchg
test
in
sbb
push
and
pop
add
xchg
mov
testb
adc
movhps
cli
test
decl
outsl
stos
cmc
sub
mov
scas
insl
cmp
std
mov
decl
in
mov
aas
mov
inc
sbb
out
aas
pusha
jno
pop
inc
leave
xor
lcall
sbb
and
lods
lds
and
repz
test
fwait
xlat
fs
out
jnp
jmp
dec
stc
mov
or
xor
out
stc
xchg
add
stc
shlb
xor
cltd
pop
idivb
jmp
jl
add
lea
mov
in
push
inc
pop
and
jno
xor
ljmp
pop
cmc
and
and
xchg
inc
mov
clc
ljmp
lcall
sahf
xchg
rol
sub
xchg
xlat
lods
fstpt
lcall
mov
cld
cli
adc
lcall
mov
xor
aas
and
out
cmp
dec
push
dec
dec
jnp
inc
fmuls
pop
outsb
dec
inc
testb
add
dec
outsb
int3
stc
xchg
out
jo
dec
repnz
sbb
jmp
dec
adc
pop
push
dec
mov
in
pop
dec
and
cmpsb
es
scas
addb
lret
push
lcall
dec
aad
jno
mov
out
xchg
lcall
in
gs
push
dec
xor
push
sbb
pusha
and
jecxz
in
cmpl
std
add
or
sar
jnp
repnz
lock
dec
lret
jbe
repnz
mov
std
addr16
fnstcw
dec
mov
call
xor
sbbb
push
push
hlt
cmp
add
cwtl
push
adc
stos
jmp
movsb
in
mov
pop
push
inc
inc
jecxz
pop
stos
add
inc
fisttpll
test
add
outsb
dec
call
lahf
pop
data16
aam
jbe
sub
mov
fdivs
icebp
out
or
dec
les
pop
je
or
daa
outsl
scas
xchg
call
mov
dec
adc
sbb
jmp
adc
adcb
stos
scas
jne
notb
fisubrl
sbb
mov
in
jecxz
push
mov
fwait
lret
inc
adc
shll
cmpsb
xchg
mov
sbb
xor
jns
pop
lods
or
inc
fsubp
addl
fdivl
sub
mov
ljmp
sub
call
bound
jns
adc
lock
pop
xor
out
inc
xor
adc
ds
adc
hlt
inc
sub
and
pop
cmp
dec
fisttps
mov
call
push
adc
add
jl
mov
leave
jno
xor
mov
data16
xchg
xor
jmp
push
scas
push
and
jecxz
mov
insb
pop
inc
adc
jo
loop
sub
cmp
lcall
cmp
out
pop
lahf
pusha
mov
jbe
cmc
scas
dec
fsubrs
lock
dec
add
jmp
call
mov
cmp
add
ljmp
xchg
in
push
xor
adc
data16
repz
ljmp
or
adc
sahf
in
imul
push
lret
sar
fists
les
jmp
cli
jge
pop
pusha
js
jp
pop
xchg
shrb
mov
jle
popf
sub
movsb
lcall
add
mov
roll
sub
movsl
jecxz
sahf
insl
ss
jmp
test
ds
mov
fdivrs
jl
sbb
adc
add
in
fcos
dec
ret
nop/reserved
mov
mov
arpl
adcl
fwait
scas
mov
cmpsl
push
aas
inc
or
bound
xor
aas
push
in
loope
jbe
outsl
mov
and
push
aas
gs
push
sar
test
orl
push
pop
ficomps
or
andb
dec
sahf
mov
ljmp
mov
inc
sbb
adc
rolb
push
fcmovu
imul
sub
mov
mov
mov
push
lahf
ret
ret
loope
lock
lods
jge
out
test
xor
lcall
leave
xor
dec
push
loop
fstpl
pop
or
jle
call
xchg
pop
and
sbb
sub
cmc
lea
dec
call
mov
fs
jmp
js
sub
cmpsb
xchg
xor
mov
adc
dec
bound
pusha
pop
mov
incl
and
dec
nop
xchg
xchg
std
adc
add
in
mov
divl
fildll
inc
bound
jmp
sbb
ficoms
mov
scas
jbe
cmp
lock
rolb
unpckhps
incl
enter
loope
addr16
cwtl
out
cmp
out
jle
test
test
cmpb
cli
inc
decl
out
and
xor
mov
das
out
jae
jbe
push
and
decl
sbb
in
mov
cmpl
push
sub
dec
push
icebp
dec
lcall
mov
pop
cmp
mov
xorb
inc
push
lea
pop
mov
call
jae
mov
dec
inc
and
in
jne
xchg
sub
mov
cmp
mov
cwtl
incl
xor
mov
pusha
roll
loope
inc
xor
out
jne
int
call
leave
insb
stc
jp
dec
jle,pt
sahf
pushf
add
jnp
cltd
in
mov
and
popa
cmp
pushl
dec
mov
hlt
repnz
jnp
pop
sahf
xchg
and
mov
mov
lds
inc
inc
and
loop
cmp
sbb
dec
nop
scas
loopne
jg
call
mov
adc
ljmp
or
mov
pop
mov
iret
xchg
pop
das
or
sub
in
cmp
incl
out
add
jecxz
or
xchg
inc
sub
test
pop
lcall
inc
data16
sub
sti
in
aad
scas
sarl
add
xchg
jae
dec
push
xor
mov
fildl
jmp
in
push
dec
pop
imul
or
pusha
fdivrs
push
imul
pop
cmp
mov
es
and
xchg
pop
push
mov
clc
mov
pushl
stos
stc
loope
inc
cmc
rcrb
aad
je
jbe
lock
jnp
aad
push
cmp
out
popa
push
jge
leave
ljmp
xor
inc
mov
cmp
inc
mov
jl
ret
mov
cld
adc
jmp
jbe
sub
adc
std
jmp
push
out
jp
cmpxchg
sbb
mov
lcall
and
pop
inc
incl
ror
nop
fildll
arpl
fcmovbe
jbe
ljmp
mov
inc
adc
in
repz
int
sub
pop
ds
loop
push
or
jmp
dec
inc
call
inc
sbbb
mov
mov
pop
inc
mov
pop
out
add
cmpsl
inc
insb
and
or
and
leave
outsl
fadd
fcmovnu
in
hlt
push
or
out
fs
push
aas
and
clc
aam
imul
mov
test
xchg
das
xchg
xchg
int
or
jp
pusha
push
test
call
pop
repnz
seto
and
mov
fcom
std
nop
xchg
lock
lea
jno
fstps
inc
push
cmc
sar
sti
js
inc
sub
push
imul
mov
into
lods
sub
outsl
mov
inc
jmp
xchg
hlt
and
sbb
dec
add
int
fwait
xor
and
mov
jmp
or
aas
pop
dec
cmpb
push
insb
mov
in
xor
cwtl
loop
negb
jmp
cs
popf
sbbl
nop
xlat
aas
or
cmp
jne
and
push
pushl
popa
mov
mov
inc
out
and
cltd
sbb
pop
sub
jg
and
fdivl
pop
popa
and
lcall
sbb
shrb
daa
or
inc
nop
lods
icebp
mov
sub
aas
mov
std
or
das
insb
and
testb
imul
sub
mov
cmp
lcall
sbb
aas
and
xchg
hlt
mov
adc
lret
mov
adc
adc
call
sub
pop
leave
pushf
adc
mov
inc
sahf
movsb
cmp
and
fisubrl
push
jmp
push
test
inc
nop
adc
pop
lret
push
and
mov
mov
adc
ljmp
out
mov
call
aas
loopne
jmp
dec
shll
adc
lcall
jecxz
mov
pop
push
rcrl
lods
push
nop
fiadds
dec
pop
cmp
sub
sar
pushl
movb
jbe
push
inc
dec
add
inc
mov
cmc
push
sbbl
idiv
fcomi
pushf
pusha
push
xchg
movsb
add
scas
in
or
cs
add
aam
mov
xchg
jmp
cmp
imul
jmp
sbb
aad
dec
xor
les
lcall
push
xor
dec
jmp
cltd
and
cmpb
ljmp
call
cmpsl
dec
adc
mov
cli
outsl
into
in
int
jle
movsb
fsubr
push
add
pop
push
int
incl
out
aam
sti
adc
das
push
inc
xchg
xor
fsubrl
es
int
and
or
hlt
dec
jb
jle
outsl
sbb
in
pusha
dec
je
js
mov
sar
sbb
fcmovb
cld
xor
adc
into
sahf
arpl
scas
loopne
jl
mov
test
push
sbb
jae
int3
scas
adc
aam
mov
test
fs
test
fcmovbe
decl
dec
out
scas
add
leave
imul
xor
cmp
jns
mov
mov
popa
outsl
jns
inc
sbb
inc
dec
ds
cmp
xchg
xchg
push
and
and
outsb
call
dec
repnz
sub
neg
adc
mov
add
xchg
inc
enter
outsb
jmp
xor
pushl
aaa
pop
xor
and
pop
push
rorl
fisubrs
or
jmp
es
pop
test
or
repnz
jne
and
mov
sahf
shrl
ds
lcall
sarl
icebp
ret
pop
arpl
insl
insl
and
in
xor
ja
lock
pushl
scas
out
addr16
mov
xchg
in
mov
cwtl
jge
mov
or
dec
int
shlb
ds
icebp
mov
fldl
int3
fucomi
pushf
ds
lds
push
scas
xchg
sub
pushl
push
jne
add
push
mov
or
push
sub
xchg
test
push
incl
inc
or
pushl
in
xchg
ja
sub
data16
fildll
hlt
cli
mov
push
addr16
adcb
cmp
ljmp
cmp
add
fldl
popa
jmp
xchg
add
imul
push
xchg
pop
ljmp
xor
stc
pushf
jne
mov
dec
mov
sti
pusha
test
push
pop
adc
xor
push
adc
ds
les
adc
ja
jno
rorl
scas
sbb
or
xchg
jnp
cld
jno
ret
push
aas
ljmp
cmp
movsl
sbb
xor
rcrb
push
inc
scas
dec
jecxz
mov
jne
fxtract
loop
fisubrs
mov
dec
pop
test
decl
xchg
outsl
imul
fildll
xchg
jb
sbb
cltd
sbb
std
jae
nop
incl
movsb
push
sbb
dec
dec
imul
aaa
aaa
sbb
pusha
outsl
cmpsl
repnz
int
fisttpl
repnz
outsb
cmc
es
dec
inc
movsb
mov
int3
xor
xchg
into
shrb
pop
orl
and
or
stos
cmpsb
daa
push
ffreep
inc
xchg
mov
jmp
and
ret
sub
jp
cli
mov
xchg
or
pop
addr16
inc
jg
dec
mov
imull
mov
adc
mov
xchg
bound
fs
mov
fldt
jge
adc
mov
mov
mov
es
jmp
loope
mov
aad
add
cmp
ds
ljmp
and
popf
daa
adc
ljmp
jns
pop
sub
lock
lcall
call
pop
fistps
sahf
mov
stc
dec
push
jecxz
push
je
xorl
out
btr
pushf
and
dec
mov
rcl
mov
cmp
nop
pop
xchg
in
gs
push
mov
mov
ljmp
adc
inc
fwait
mov
mov
xchg
jo
push
pop
jno
pushf
scas
lcall
jns
or
mov
adc
jnp
idiv
ljmp
dec
daa
mov
or
jmp
inc
fdivs
into
cmp
loopne,pt
jb
clc
test
stos
stos
int3
sti
xor
mov
in
call
mov
lods
xchg
loopne
out
orl
notl
sub
pop
xchg
shrl
pop
jb
ds
add
xchg
mov
mov
shlb
hlt
pop
mov
bnd
xchg
cmpsb
push
fs
ret
test
add
fimull
mov
jb
filds
sub
dec
std
mov
dec
pop
dec
jmp
mov
add
add
push
loop
jmp
aas
sbbb
adc
sbb
incl
mov
cmp
push
rcrb
sar
cmp
add
popf
in
dec
xchg
out
fwait
outsb
sar
cmp
fsts
xor
rol
xor
nop
dec
fs
lcall
daa
popa
sti
add
inc
sub
or
or
ret
dec
movb
mov
js
stos
sbb
xchg
mov
mov
mov
adc
lock
sbb
daa
adc
test
xlat
incl
or
adc
ja
jmp
xrelease
divl
in
mov
jmp
int
push
push
bound
sub
xchg
and
sbb
jg
cmp
decl
dec
dec
fcomi
sub
cli
and
stc
nop
sarl
inc
jmp
test
call
xor
aad
sub
je
iret
and
sub
shlb
xchg
xor
mov
incl
aad
jmp
xchg
loop
fidivs
mov
push
int
push
sub
jecxz
insl
lcall
mov
mov
lahf
cmpsb
mov
ljmp
push
pop
gs
bound
cmp
out
add
push
add
daa
out
add
mov
mov
cmp
in
insb
fidivl
in
lret
cmpsl
push
fsub
and
repnz
push
icebp
jns
sbb
lahf
xchg
insb
stos
pop
pop
mov
inc
jo
hlt
fildl
sub
pop
lret
out
dec
mov
add
inc
shlb
xor
ljmp
jmp
inc
leave
push
and
arpl
jo
xor
inc
mov
pop
test
xchg
mov
jmp
push
dec
pop
repz
dec
add
and
xchg
vphadduwq
mov
mov
pop
enter
call
push
lcall
fwait
repz
xchg
loop
aas
xor
jno
sbb
sbb
ret
in
stos
mov
pop
pushf
fs
push
out
insl
push
dec
dec
stc
insb
xor
or
and
pushl
cmpsb
shlb
adc
dec
pop
sub
inc
pop
xchg
xchg
ljmp
push
rorb
sub
cmp
cmp
and
pushl
xor
cmp
jmp
cli
orb
inc
shll
xor
mov
push
lcall
mov
xor
cmp
mov
movsb
mov
je
jbe
xlat
mov
push
scas
and
pop
das
lcall
outsl
fdecstp
xlat
mov
sub
mov
aam
les
orb
outsb
adc
out
arpl
push
test
mov
pop
outsb
inc
pop
xor
fcoms
lret
push
hlt
std
pop
jmp
sbb
bound
test
and
jp
and
push
imul
incl
xor
test
adc
push
ds
cmc
mov
adc
and
les
decl
mov
xor
adc
test
lods
out
or
jb
inc
fiadds
scas
or
ljmp
mov
nop
nop
movsl
push
ficoml
fwait
jp
call
adc
scas
jo
jmp
test
lahf
mov
mov
aas
je
dec
aaa
data16
push
ja
jmp
int
fwait
fs
push
lds
dec
mov
gs
or
testb
jmp
fs
test
leave
outsl
xchg
cmp
into
adc
mov
xor
inc
mov
pushl
xchg
data16
xor
jp
int3
test
jo
call
aas
test
jp
pop
dec
jl
lcall
push
arpl
movsl
xchg
adcl
inc
shrb
out
dec
inc
ja
out
call
xchg
negl
jne
sbb
xchg
inc
xor
in
sti
movsl
push
es
mov
jg
sub
xor
call
jnp
mov
push
mov
stos
xchg
dec
inc
movl
push
cltd
cld
repz
inc
icebp
mov
in
inc
daa
icebp
xchg
shrb
fmull
rcrb
and
mov
mov
ljmp
pusha
pop
xor
sbb
out
inc
shll
mov
ljmp
push
fwait
dec
cs
inc
ja
inc
jo
or
fstpt
stc
es
dec
xlat
push
mov
incl
push
or
xchg
out
sti
cmp
jge
xor
push
ret
into
pop
jbe
xor
push
cs
mov
out
and
jle
or
xor
addr16
adc
xchg
insb
or
int
mov
xchg
fstpl
stos
jmp
addb
or
push
xor
mov
rcrl
aas
pushf
leave
orl
frstor
ror
xor
push
hlt
pusha
or
jl,pt
movsb
pusha
mov
andl
mov
fucom
sbb
cltd
adcb
add
aas
stos
icebp
popa
or
xor
lret
ret
call
repnz
adc
sbb
mov
cmp
mov
cli
dec
lds
bound
jnp
pushl
fmuls
sbb
xchg
call
sbb
cmpsl
sub
pop
xchg
push
rol
das
mov
fstpt
sbb
icebp
imul
inc
mov
xlat
jecxz
test
jne
jmp
test
ljmp
in
outsb
push
pop
or
fildll
xor
and
xchg
sbb
push
pop
xchg
adc
incl
adc
mov
xor
arpl
add
push
push
in
decl
xchg
ss
movsb
and
xor
adc
push
loope
xlat
and
cmp
decb
jb
jne
lods
mov
dec
mov
stos
jno
loop
loopne
das
mov
std
push
pop
sbb
outsl
stc
cmp
inc
sub
js
lcall
push
dec
xlat
push
mov
mov
push
and
jo
leave
ficoml
pop
inc
or
lock
rcrl
mov
mov
hlt
das
ja
loop
sahf
pushf
inc
outsl
shll
ljmp
repz
sub
movsl
and
incl
push
jmp
ss
mov
outsb
popf
ret
int3
mov
and
mov
mov
push
sbb
cmp
lret
leave
sbb
cmpsb
arpl
jmp
cmpsl
js
loopne
xchg
adc
jl
pop
fldt
or
jno
insb
outsb
adc
xor
xchg
nop
mov
insl
jg
jle
stos
inc
test
decl
repz
add
scas
push
rcl
xchg
pop
leave
sbb
ss
ja
je
and
cmp
mov
or
add
pop
pushf
testb
call
mov
cmpsl
mov
jmp
pop
inc
mov
imul
mov
testl
jg
sub
cmpl
ja
push
cs
lret
mov
in
lret
cmp
movsb
cmpl
cmp
fwait
pop
dec
and
pop
fldcw
nop
jo
aas
and
rcrl
int3
dec
mov
mov
outsb
lahf
push
mov
outsb
add
cmc
cmp
inc
lods
les
sar
in
push
es
call
in
int3
jbe
sbb
push
test
and
xchg
push
jmp
and
cld
mov
add
cwtl
std
jmp
pop
jbe
ds
xchg
orl
inc
loopne
and
sub
mull
mov
jle
outsb
sbb
mov
loopne
into
lcall
incl
dec
dec
inc
jne
imul
popf
push
insl
loope
nop
jo
ljmp
cltd
ret
jmp
xchg
xchg
jmp
pusha
mov
pop
xchg
inc
push
mov
ret
in
call
inc
fistps
and
outsl
xchg
pop
inc
add
inc
adc
xchg
pop
add
cmc
pop
and
push
mov
fdivr
ljmp
lods
inc
jmp
incl
dec
mov
cmc
lahf
loopne
sbb
inc
xchg
ja
jne
inc
shl
mov
incl
sub
add
pop
xor
leave
fildl
in
mov
xorb
jmp
inc
icebp
lret
enter
scas
fincstp
lods
xor
cltd
xor
or
jb
inc
push
or
decl
adc
movsl
jno
scas
jecxz
fisttps
mov
cld
sti
jne
notb
imul
jg,pt
adc
dec
and
in
clc
lret
fmuls
arpl
leave
sti
repnz
mov
mov
xchg
incl
stc
mov
add
pop
cmp
pop
push
sahf
add
mov
scas
in
fdivp
adc
push
and
sar
jmp
push
or
imul
rcrb
movl
push
or
sub
lcall
call
mov
mov
stos
int
stos
push
loopne
mov
inc
ss
pop
xchg
ljmp
xchg
jg
jp
pop
outsl
or
mov
push
pop
repnz
ror
lods
push
mov
imul
dec
data16
xor
push
movsl
iret
dec
pushf
insb
or
cli
repnz
enter
call
pop
xor
inc
mov
imul
call
mov
push
push
idiv
lcall
fdivl
and
push
jecxz
loope
lret
xchg
mov
addr16
jle
int
clc
xchg
and
sbb
push
shrb
aas
dec
jae
mov
push
inc
out
imul
sbb
icebp
ret
pop
ss
cmc
or
stos
das
xchg
dec
pop
and
decl
push
xchg
or
inc
fwait
shl
mov
je
xchg
mov
or
mov
incl
mov
inc
shll
in
cmp
mov
mov
out
and
push
scas
mov
mov
xchg
out
in
push
add
shl
movb
fidivl
jbe
xchg
test
dec
lret
out
inc
mov
dec
pop
das
gs
adc
xchg
mov
xchg
inc
pusha
mov
add
pop
or
lcall
pop
dec
lock
aaa
sbb
jns
or
and
call
inc
mov
mov
leave
ss
call
xchg
inc
sbb
popf
adc
and
pusha
stos
leave
cmp
xchg
leave
jnp
daa
shll
pushl
or
insb
nop
mov
je
lret
out
xor
popa
dec
sti
sbb
dec
push
cmp
push
insb
shlb
leave
pop
fildll
add
test
dec
cmp
inc
or
ljmp
cmc
mov
sub
push
imul
ja
loop
push
ss
mov
inc
jl
call
rolb
mov
cmovge
adc
in
adc
or
jo
and
add
pushl
dec
popa
sub
xor
lods
scas
inc
cmp
mov
jle
inc
and
mov
ret
test
jmp
shlb
mov
call
xchg
loope
inc
cmp
in
rcr
fcompl
loope
hlt
mov
sahf
es
push
sbb
mov
mov
test
incl
movsb
mov
iret
hlt
fldl
cwtl
push
lds
push
lcall
call
xchg
and
fsubrs
es
xchg
push
adc
xchg
add
mov
inc
repnz
cmp
xlat
pop
add
pushl
testl
xchg
stos
les
pop
xor
pop
int3
call
sub
mov
adc
shrb
pushf
mov
mov
decl
push
loopne
loop
jbe
aad
mov
and
mov
dec
and
dec
add
mov
cmp
mov
std
adc
jnp
or
cmc
test
dec
sub
out
into
andb
jns
sti
push
mov
cs
adc
roll
pushl
mov
pop
ret
inc
popl
mov
mov
cwtl
int
pop
mov
pop
pushl
fidivrs
xor
data16
adcl
pop
and
xchg
icebp
pusha
adcl
jl
dec
stos
mov
or
test
fildll
pop
pop
inc
push
jmp
mov
push
shll
arpl
adc
xorb
jge
pop
into
mov
mov
js
sarb
and
out
xor
adc
dec
and
xor
pop
call
xor
inc
mov
xor
jns
pop
fdivrs
jbe
pop
in
mov
inc
xchg
test
xchg
xchg
movsb
mov
sub
jns
inc
jnp
or
dec
push
ret
call
xor
mov
repz
subl
bound
inc
add
pop
inc
and
icebp
sbb
mov
out
dec
cs
mov
sbb
loop
push
jge
or
mov
and
cli
insb
lcall
cmp
lods
inc
cmpsb
push
movsl
sbb
jbe
pop
in
jp
decl
jno
lahf
push
es
int
push
xchg
push
jp
decl
stos
pusha
add
arpl
call
lods
xchg
gs
enter
out
pop
pop
mov
stos
xor
push
imul
inc
cmp
jmp
jmp
mov
ret
pushf
jne
sbb
add
repz
adc
sub
lods
int3
jae
call
ss
jmp
xor
mov
icebp
sub
aam
jb
mov
mov
inc
push
call
in
lock
and
adc
cmp
xchg
or
mov
ljmp
cmp
nop
add
frstor
pop
sbb
ljmp
mov
inc
in
in
mov
loop
scas
insb
cmpsb
cmp
out
push
mov
pop
mov
outsb
mov
sbb
lock
call
mov
ds
icebp
inc
out
add
in
and
sar
stos
in
push
xchg
nop
inc
sbb
mov
pop
xchg
mov
movsl
loop
in
cmp
stos
pusha
jmp
cwtl
ljmp
into
call
dec
xor
push
dec
mov
cmp
in
push
sub
into
in
aam
jmp
lret
es
test
bound
cs
xchg
cmp
call
aam
enter
int3
or
push
fstl
ljmp
arpl
sub
sbb
call
dec
pop
and
ror
ret
mov
push
es
pop
push
cs
incl
jl
mov
or
lcall
cmp
jnp
scas
flds
sbb
es
mov
decl
rcrb
mov
jmp
std
sbb
int3
es
ljmp
daa
cld
jmp
lods
test
jmp
test
pusha
mov
shrl
cmp
fwait
in
mov
pop
mov
iret
sbb
bound
fstl
jae
push
call
mov
inc
adc
cmp
sbb
leave
cmc
addr16
test
out
or
add
sub
je
sarb
insb
out
mov
inc
dec
jae
push
jbe
icebp
inc
nop
std
push
ja
push
ds
out
cmp
fcoml
or
push
gs
and
jae
lea
inc
ficoms
jmp
mov
bound
testl
sbb
xor
jno
push
ljmp
push
js
mov
and
aam
pop
jle
in
lds
pop
test
jg
outsl
ljmp
mov
cmpsl
in
mov
push
iret
scas
and
scas
call
sub
loopne
les
lcall
lret
jmp
xchg
and
push
xor
neg
aaa
xchg
cli
and
cld
sub
ljmp
sub
loope
jle
mov
rcrb
push
cwtl
mov
dec
cs
cmp
decl
popa
into
mov
and
pop
or
stc
test
pop
adc
push
mov
into
add
jbe
incl
movsl
or
pop
ficoml
mov
dec
adc
jns
dec
pop
pushf
pop
fwait
int
test
sub
xchg
fs
and
cli
adc
cmp
cwtl
jbe
or
jne
fsubrs
jne
jg
lcall
das
cmp
insl
push
adc
push
jnp
hlt
sahf
xlat
pushf
mov
xchg
jmp
andb
jmp
and
call
cld
sar
xchg
pop
js
js
inc
fmulp
iret
shlb
dec
xchg
decl
or
aaa
push
and
jp
aaa
jo
xchg
mov
pusha
hlt
xor
cwtl
sbb
lcall
adc
outsb
leave
mov
cs
fdivrp
je
dec
jl
cld
or
ljmp
decl
dec
cmp
cwtl
push
sbb
mov
mov
arpl
sbb
pushl
repnz
jp
xchg
push
out
fnstenv
jne
test
sub
adc
ljmp
pop
inc
int
sub
in
pop
adc
loop
add
ret
jecxz
mov
ds
incl
nop
bound
andb
push
stos
shr
repnz
nop
gs
dec
dec
inc
cmp
mov
dec
add
push
mov
ja
or
mov
mov
cltd
xchg
int3
pusha
adc
ljmp
push
jnp
mov
xchg
push
or
xchg
push
dec
jne
pop
adc
leave
push
and
sti
cmp
addr16
sbbl
cs
adc
mov
iret
lahf
scas
add
aad
or
xchg
inc
ficompl
mov
sub
sub
mov
stc
pop
or
fmull
cmp
ficomps
imul
xor
cmp
movsb
rcll
xchg
scas
test
scas
cmp
cli
inc
mov
mov
dec
push
or
test
test
xchg
insl
mov
movsl
test
lds
adc
adc
mov
add
inc
mov
mov
arpl
and
shrb
or
sub
jmp
imul
movl
pop
pop
stos
out
fs
addr16
xchg
cvtps2pi
adc
ret
pop
rcll
adc
and
sbb
enter
and
sbb
sbb
call
lahf
add
call
pop
sbb
adc
cltd
fiadds
pop
loope
push
jmp
mov
lcall
popw
shll
ss
in
test
add
inc
movsb
imul
jmp
pop
inc
pop
aam
sbb
aad
outsl
xchg
xor
mov
xchg
int
in
xchg
mull
add
adc
addr16
jae
loop
jo
jle
sbb
mov
ljmp
aaa
test
rcr
mov
das
sub
xchg
ja
push
clc
cmp
mov
call
add
fcmovbe
and
adc
pop
pushf
add
aad
add
xlat
lcall
push
and
sbb
ljmp
dec
cmc
sbb
pushf
inc
dec
je
out
add
and
out
sub
add
cmp
fadd
cmpb
push
add
sub
add
out
int
pop
inc
ljmp
dec
inc
bound
mov
rcll
add
cmpb
pop
cmpxchg
pushl
mov
or
clc
test
mov
mov
mov
stc
pop
push
lcall
pop
stc
xchg
xchg
out
out
jae
push
rcll
daa
or
repz
loopne
decl
idivl
dec
into
inc
lahf
ljmp
aas
rcrb
jae
fs
jmp
xchg
push
out
std
add
lds
lods
push
dec
fs
incl
and
jbe
bound
mov
dec
mov
fmull
mov
pushl
in
fstpt
jle
daa
repz
cld
inc
gs
lahf
nop
mov
mov
call
cmp
cmp
and
jb
stos
pop
push
fstl
fnstsw
jp
sub
push
sub
lret
lds
ds
sub
ja
mov
jg
loope
cmp
xor
xlat
loop
dec
xchg
icebp
dec
push
imul
sub
xchg
jl
xchg
dec
pop
sub
scas
xchg
outsl
lods
xor
dec
cmp
shlb
inc
push
mov
mov
cli
jno
push
out
int3
adc
jle
repnz
pop
and
call
sbb
jl
fimull
sbb
push
adc
pop
repnz
adc
test
cs
incl
dec
sbb
adc
imulb
or
out
push
sbb
lods
xchg
gs
call
and
and
and
test
popf
fwait
mov
je
push
push
insl
out
lret
pushl
cld
leave
jns
xchg
movsl
or
fdivl
dec
adc
aas
int
aas
cmp
mov
push
xor
adc
fwait
xlat
ret
cmp
cmp
jge
push
clc
sbb
pusha
and
jmp
ljmp
sub
mov
outsl
mov
lods
mov
add
mov
shlb
popl
pop
jns
pushf
lret
adc
ljmp
mov
lcall
cmp
cmp
push
out
cld
dec
sub
jnp
addb
mov
ss
decl
cmp
or
arpl
cld
insb
xchg
or
jle
shl
es
not
das
cmp
lcall
nop
pop
loop
stos
adc
out
das
jo
stos
mov
sub
inc
or
mov
decl
mov
push
cld
push
jo
inc
ss
leave
shlb
rcl
les
xlat
sub
lods
ljmp
fisubrs
mov
mov
mov
pop
addb
insb
jge
loope
jmp
fbstp
xchg
daa
sbb
push
cmp
imul
adc
jge
jmp
fisttps
repz
rcrl
pop
mov
into
movsb
xchg
add
sahf
std
les
call
shll
int3
movsb
sbb
fidivrs
jl
aas
pushl
ret
or
lods
adc
ss
fisubrs
jo
inc
cmp
nop
out
ds
aam
test
decl
mov
mov
mov
std
xchg
inc
in
dec
push
cs
dec
jb
outsb
loope
sbb
push
sub
incl
adc
add
pop
sti
stos
add
mov
daa
ret
jbe
mov
push
push
xchg
loop
decl
inc
push
js
repnz
arpl
jae
cmp
xchg
jb
ficoms
scas
jmp
xchg
and
xchg
into
loop
adc
call
popf
xchg
cmp
sbb
push
jle
push
out
addb
pop
outsb
arpl
aas
xlat
push
mov
cli
rdtsc
outsl
sbb
ret
lret
insl
in
ror
xor
adc
or
lahf
xchg
pop
daa
mov
inc
push
jb
mov
shr
pop
movsl
jnp
outsl
pop
cmpsb
adc
sbb
out
mov
cwtl
sarb
cmc
cli
dec
addr16
or
pop
pop
imul
sub
pop
test
mov
adc
dec
push
or
cli
inc
mov
fbld
add
jg
adc
cmp
dec
mov
sub
xor
stos
icebp
incl
add
enter
dec
bound
mov
dec
push
lahf
out
mov
xchg
in
fsubrs
call
aas
loop
movsl
mov
cmp
cmp
and
push
arpl
int3
in
mov
jmp
dec
rorb
mov
dec
add
mov
pcmpeqd
call
scas
lock
mov
pushl
into
decb
or
hlt
hlt
or
dec
test
or
mov
jmp
or
inc
shlb
out
jb
xchg
ja
hlt
cs
and
stos
cmp
bnd
lcall
cwtl
inc
mov
sbb
mov
popl
push
inc
cmpsl
pushf
aas
aaa
inc
imul
pushl
cld
ljmp
inc
outsl
clc
push
sar
xchg
dec
call
in
add
sbb
das
nop
test
incl
je
sbb
cld
jnp
push
fnstcw
jnp
lcall
decl
mov
sub
pop
xor
mov
aaa
pop
fisttps
decl
pop
mov
inc
popf
push
pushf
outsb
insb
es
adc
mov
je
jns
pop
jnp
out
fs
lods
fs
incl
gs
pop
jno
icebp
ds
and
pop
mov
aam
inc
ljmp
push
loopne
xchg
sub
jns
lds
sub
or
js
jmp
lods
shlb
imulb
repz
mov
sarb
outsl
divb
lcall
addr16
es
loope
adcb
push
mov
pop
cmp
pop
test
out
fwait
fs
pushl
stos
outsb
scas
pop
inc
push
xor
iret
xchg
xor
mov
xor
shrl
das
mov
and
sahf
xor
rcrb
push
mov
sub
jmp
shll
inc
mov
stc
sub
pop
addb
inc
sub
mov
decl
and
pusha
mov
push
cmpl
sahf
xchg
sbb
xor
pop
cwtl
push
dec
fsts
inc
movsl
dec
push
sbb
add
xor
punpcklwd
daa
cmp
out
jbe
push
mov
ss
cmp
mov
xchg
dec
jl
jmp
adcl
icebp
jg
call
add
mov
mov
xor
mov
sub
in
fsub
call
arpl
shrb
daa
or
dec
sbb
negl
loopne
add
cmp
inc
lcall
loopne
jl
popa
and
mov
into
cld
add
jbe
addr16
decl
cmp
stos
loope
insb
lahf
add
mov
test
pop
fs
sbb
pusha
fcompl
jmp
mov
loope
cmp
mov
jecxz
xor
adc
adc
pop
dec
mov
pop
xor
movsb
jle
clc
inc
jp
arpl
jp
pushf
adc
add
clc
push
ljmp
add
sub
inc
lods
jo
pop
push
mov
bound
imull
cld
xchg
cmovg
cmc
imul
cmp
fcomps
or
push
mov
ds
adc
inc
inc
jb
out
loopne
inc
pop
dec
les
dec
icebp
mov
pushl
or
ret
push
xchg
hlt
jo
out
es
jae
mov
lods
xor
test
jmp
jbe
lods
dec
mov
cmp
lods
sbb
shl
push
push
jb
xchg
pop
ljmp
mov
inc
add
aad
add
int3
into
cmp
sbb
xchg
adc
push
sub
jmp
push
mov
and
divb
xchg
pop
cmc
scas
cmp
mov
mov
decl
iret
mov
push
imul
sub
push
push
orl
lahf
hlt
inc
int
cli
sub
dec
cmp
jmp
cwtl
out
imul
cltd
inc
jne
mov
nop
push
push
ds
adc
outsl
daa
inc
pop
xchg
fldl
sub
dec
pop
sbb
jmp
ret
xor
lcall
push
aas
mov
cmp
mov
fbld
jmp
repnz
push
gs
lods
mov
xchg
sbb
rcrl
pushl
dec
jns
and
es
loope
inc
add
inc
cmp
mov
ss
lcall
mov
and
cld
fs
sarl
mov
push
sub
mov
push
je
lock
ss
fnsave
bound
cmp
lods
jle
loop
int
lahf
inc
gs
mov
mov
lcall
inc
pop
ret
cli
xchg
jmp
popa
push
mov
inc
nop
arpl
mov
xor
pop
ret
jl
lcall
mov
dec
testb
mov
movsl
mov
xor
or
adc
fiadds
popf
inc
add
add
jae
and
xor
mov
or
call
jg
rorl
jl
pop
xor
lock
ret
jns
aaa
gs
jmp
cvtdq2ps
cmp
adcb
enter
lds
cmp
ret
ljmp
pop
cmc
out
out
push
jp
cld
inc
lahf
xchg
cmc
jb
push
fcmovnbe
pop
push
pop
sbb
std
adc
xchg
outsl
mov
incl
notl
lret
aam
out
mov
sub
rcll
cmp
pusha
sub
jmp
xchg
clc
cmp
add
addr16
outsl
test
xlat
js
in
rclb
lcall
jp
movsl
loope
loopne
int3
arpl
sbbb
icebp
jge
addb
mov
jmp
loopne
cmp
std
fildl
add
jnp
int3
lods
xchg
aaa
aas
rorb
mov
out
cmp
lcall
mov
cmc
sbb
ja
fdivrl
or
push
mov
lea
inc
push
in
bound
mov
decl
push
test
mov
lods
and
iret
cmp
or
jp
xchg
std
out
cmp
add
mov
mov
xchg
data16
out
push
ret
int3
cltd
daa
mov
push
push
aaa
lods
push
mov
and
mov
lret
fldt
and
call
xor
pushf
outsb
dec
xchg
and
mov
int
sub
repnz
scas
sub
stos
add
cmp
mov
sti
cmp
sbb
sub
mov
inc
movb
in
je
sbb
lods
dec
cmpsl
data16
popl
pushl
sbb
test
and
jmp
mov
xchg
and
lret
call
decl
fadd
dec
insl
push
dec
imul
adcb
sub
jnp
adc
mov
call
mov
push
dec
xchg
ret
out
dec
inc
mov
lea
cmpb
lods
lcall
or
jg
cmpsl
jbe
stos
loopne
xchg
xor
or
jp
xchg
mov
dec
clc
rclb
push
push
popf
or
sub
incb
das
jg
sti
and
fisubl
add
loope
in
inc
and
sbb
push
add
fstl
xchg
rcll
mov
in
fmuls
ror
lret
repnz
test
cltd
int3
int3
cmp
jns
cmp
test
out
or
pop
js
fisttps
loope
icebp
jne
ljmp
jmp
lcall
imul
ret
add
lcall
pop
mov
or
dec
pop
std
push
ja
aad
movsb
mov
add
push
sbb
push
scas
aas
dec
in
push
les
mull
mov
pop
jb
call
fwait
xchg
shrl
adc
pop
dec
mov
xchg
jmp
lods
xlat
adc
mov
incl
shrb
scas
push
or
and
gs
jp
movsb
addr16
ds
mov
ud0
ljmp
jecxz
jae
jno
outsb
xchg
cmp
lret
orl
call
xchg
sbb
mov
out
aas
sub
pop
fistpl
xor
ret
decl
xor
jmp
mov
or
dec
clc
gs
push
loopne
incl
push
mov
add
mov
sub
jge
popa
out
fldenv
and
cmp
int3
loop
pop
sub
pushf
cmova
inc
xchg
test
xchg
cmp
fsub
stc
push
push
fs
adc
leave
movb
pop
neg
inc
push
mov
arpl
jmp
mov
sub
ficoml
mov
cmp
ffree
mulb
adc
js
mov
jmp
push
fisttpll
or
inc
inc
cld
xor
call
mov
xchg
push
aam
and
int3
adc
xor
lret
jle
cmp
or
push
mov
invd
sbb
lahf
nop
incl
dec
fstl
adc
dec
jne
je
popa
fcompl
ljmp
fdivrs
sub
call
adc
dec
xchg
dec
pop
and
pusha
inc
insl
jo
lret
cmp
out
mov
ds
pushl
dec
xchg
pop
push
call
sbb
jo
mov
push
imul
daa
fwait
stc
mov
incl
dec
mov
inc
ds
mov
xchg
mov
or
push
popa
lret
inc
jne
dec
out
psubq
sarb
outsl
dec
pop
jo
mov
mov
lods
add
fnstsw
in
mov
cmp
push
popf
jge
xchg
in
imul
sub
mov
cmp
flds
jae
test
inc
pop
movsl
pop
outsl
stos
mov
faddl
cmc
fwait
in
dec
clc
dec
pusha
icebp
mov
dec
jmp
sbb
pop
test
sbb
stos
xchg
push
cmp
fidivl
imulb
and
loop
call
sbb
push
xchg
testb
pop
std
inc
lret
enter
and
mov
mov
xchg
mov
push
adc
insl
mov
js
pop
cmp
push
dec
daa
mov
decl
xor
aas
outsb
adc
mul
add
sub
add
inc
adc
lcall
jge
mov
push
jmp
push
inc
daa
mov
ljmp
movsl
leave
nop
loop
mov
ljmp
mov
mov
push
sub
mov
adc
fildl
sub
or
fbstp
dec
lods
cmp
outsb
stos
bound
movsbl
test
push
and
aad
jge
cs
adc
in
cmp
add
xlat
push
dec
daa
lret
daa
jne
pop
pop
lret
aad
movsl
aaa
sub
ljmp
shll
mov
adc
inc
test
div
mov
test
inc
jbe
mov
fs
xchg
mov
push
mov
or
pop
jnp
int
bound
cmp
mov
mov
ficoms
testb
lret
xor
xor
loop
mov
call
fildll
jl
pop
std
pushf
int
out
mov
sub
push
decl
push
xorl
aad
les
push
jg
clc
xchg
stos
pop
push
cmp
or
je
pop
add
adc
pop
mov
jmp
hlt
nopl
mov
add
dec
adc
int3
and
dec
adcb
push
xchg
test
cmp
jne
enter
loopne
fmuls
outsl
sbb
add
js
loope
inc
insb
leave
mov
out
mov
in
outsl
pop
adc
mov
or
arpl
jns
outsl
pop
inc
inc
scas
jmp
sbb
test
or
pop
fcmovb
inc
clc
pop
pushf
adc
xchg
sbb
lock
popf
sub
int3
ret
fdivs
and
movsl
out
ljmp
out
xchg
mov
xchg
sub
fadd
les
push
lods
dec
dec
pop
ja
call
push
pusha
aas
shl
xor
fildl
pop
stos
add
das
xor
dec
pop
and
pushf
mov
data16
iret
daa
enter
bound
mov
push
sbb
jecxz
mov
les
rorb
ss
nop
and
add
addb
stos
fs
call
daa
scas
dec
scas
push
push
mulb
push
adc
adc
inc
push
clc
data16
jle
mov
xor
loopne
inc
and
and
and
lea
test
inc
stc
adc
pop
cs
mov
call
xchg
loop
fwait
scas
in
xor
mov
loop
push
iret
pop
inc
movzwl
xchg
ficompl
adc
add
les
fnstenv
inc
sbb
mov
cmp
movsb
call
ja
popa
sub
pop
push
push
or
addr16
fsub
inc
xchg
fcompl
int
insl
push
in
dec
pushl
out
adc
jae
jecxz
adc
xchg
adc
fisttps
fimull
int3
outsb
idiv
jmp
fcmovb
ds
cmpsl
xlat
dec
dec
ss
add
movsb
mov
cltd
inc
push
pop
cs
add
push
jecxz
jg
out
lds
mov
les
jns
push
lret
jmp
loopne
and
cmp
jmp
rep
lahf
inc
or
bound
pop
bound
js
rcrl
rcr
incl
xchg
int
mov
mov
gs
xor
cmp
in
dec
and
lcall
shl
stos
lods
jle
iret
add
test
cwtl
dec
ret
scas
loop
fdivrs
out
aas
pop
sar
mov
jne
in
fs
out
sbb
cmc
jle
test
test
push
xchg
dec
jo
jmp
pushf
jbe
mov
popf
add
dec
test
aaa
cld
lahf
stos
in
fadds
pushl
or
jmp
sub
cltd
idivb
aaa
cmp
ljmp
test
mov
scas
ds
fisttps
fs
adc
add
inc
add
sbbl
xbegin
or
rol
lret
push
sub
push
repz
das
addl
xor
lcall
mov
jbe
lea
popf
loopne
lods
add
test
mov
gs
lods
pop
cmp
fimull
sbb
lret
mov
pop
rcl
mov
in
loopne
decl
rcrb
push
dec
jmp
push
daa
jns
popa
dec
test
mulb
mov
pushf
rclb
jnp
cli
ret
dec
jecxz
jecxz
jg
cmp
dec
not
cmpsb
nop
movsb
loop
jp
push
xabort
popa
decl
dec
push
push
and
jo
bound
out
lea
repnz
mov
std
cmp
orl
lods
mov
mov
push
mov
pushl
jo
jl
cltd
out
icebp
into
daa
push
and
sub
cmp
pusha
call
in
lahf
ja
dec
xrelease
dec
in
mov
xchg
jp
pop
pop
add
cmpsb
pushl
imul
popa
out
dec
sub
je
pop
ljmp
xchg
adc
pop
fbstp
add
out
mov
xchg
pop
pop
cld
jg
and
push
xor
jno
xor
mov
jmp
push
aas
ljmp
shr
xchg
push
aas
fidivrl
mov
adc
cmc
pop
dec
cmpsb
sbb
xor
out
pop
imul
jmp
jbe
std
push
shlb
out
in
mov
jo
and
dec
and
jmp
mov
cmp
cmp
bound
sahf
arpl
mov
in
jns
pop
cmp
jl
jp
shl
shlb
addl
in
pop
fdivrp
xchg
call
mov
mov
cmp
sub
in
add
lahf
fistpll
lock
mov
cmp
or
stos
cmp
adc
hlt
mov
outsl
mov
jb
fs
decl
mov
inc
push
fwait
and
ss
lret
jmp
jmp
mov
pushl
shlb
mov
pushf
fiaddl
jge
push
int
inc
ss
iret
lret
movsb
int
lcall
mov
test
push
std
mov
mov
mov
dec
pop
jl
adc
sar
cwtl
xor
decl
insl
jmp
xor
fs
pushf
imul
pop
int
scas
mov
pushf
out
icebp
mov
xlat
jmp
stos
and
jg
rcrb
call
and
insb
mov
mov
sub
lcall
dec
enter
cmp
mov
ffree
xor
in
call
xchg
sbb
pushl
insl
test
sti
stc
inc
sbb
jne
or
lcall
sbb
and
mov
iret
ja
les
repnz
inc
xor
ljmp
repz
repnz
test
jmp
add
xor
enter
jmp
mov
call
push
mov
popa
jo
inc
and
lods
ja
shr
xchg
mov
jnp
into
rolb
cltd
push
ljmp
sub
dec
aas
lret
nop
mov
mov
push
cmpsb
xchg
inc
sbb
dec
add
ljmp
fwait
cmp
sub
or
cwtl
add
out
sbb
xchg
xchg
clc
aam
incl
ret
push
nop
test
xchg
loopne
mov
mov
push
xchg
add
cmp
outsl
call
cmp
lods
data16
or
lcall
cvtps2pd
icebp
addr16
mov
jmp
adcb
pop
repnz
in
mov
test
ds
sub
iret
xchg
xor
ljmp
js
cld
in
adc
sbb
xchg
mov
pushf
jb
mov
call
dec
fidivs
cmp
inc
mov
pop
cmc
pop
loop
inc
lock
jp
into
add
push
lcall
push
xor
int3
faddl
rcl
loopne
cs
mov
inc
popf
mov
cmp
and
xor
jmp
insl
push
ficompl
jno
or
dec
push
mov
pop
out
test
ret
lea
lcall
cld
mov
int
roll
jne
iret
jbe
push
es
or
mov
test
mov
sbbl
pushl
xor
push
push
fwait
or
lahf
pop
dec
jo
lret
in
or
jle
sbb
jbe
and
call
jnp
or
ljmp
mov
aas
repnz
mov
or
fnsave
jmp
in
xor
stos
cmp
sbb
jp
aad
lods
ja
testb
add
mov
pop
sahf
rcrl
outsb
mov
in
jg
cltd
rcl
cltd
adc
inc
mov
in
mov
cwtl
mov
pushl
and
push
out
out
and
fnstsw
adc
decl
add
icebp
pop
inc
mov
dec
inc
and
push
pop
repz
mov
inc
mov
call
out
sbb
jb
mov
shll
jp
mov
out
cli
mov
jp
incl
bound
movsl
mov
loopne
rcl
hlt
pop
xor
ljmp
nop
dec
fisttpll
xor
dec
hlt
cli
mov
cli
mov
sub
in
fs
xor
and
clc
push
mov
cwtl
cmp
cwtl
repz
in
dec
stos
dec
ja
mov
fisubl
js
call
lahf
xchg
jnp
and
cmp
and
inc
hlt
out
mov
ljmp
mov
mov
xchg
in
push
arpl
sti
adc
pop
mov
inc
in
mov
inc
cmpsl
pop
lret
jo
mov
push
sbb
lock
mov
xchg
push
lcall
inc
dec
push
dec
shlb
jge
ret
icebp
inc
fistpll
jbe
sbb
xor
push
ljmp
inc
or
fs
imul
sbb
mov
shl
in
mov
ljmp
cmpb
sti
out
or
xor
sahf
mov
inc
call
lret
jp
push
xor
sub
lods
push
inc
inc
std
lock
push
jmp
sub
lock
mov
pop
cmpb
jp
push
or
push
test
or
sti
movsb
data16
fildll
push
push
cwtl
repnz
inc
decl
clc
xor
push
test
mov
lgs
clc
xchg
shlb
int3
sti
das
enter
enter
xchg
push
loop
mov
popa
call
test
and
shr
cli
add
shll
leave
lcall
pushl
ss
je
loop
mov
out
aaa
loope
popa
mov
dec
xchg
jg
stos
mov
mov
das
mov
addr16
test
pop
push
jbe
sbb
aam
push
xorb
aas
sub
les
sbb
xchg
sti
cmp
popf
cmp
stos
pusha
inc
cli
aam
jmp
pop
cmp
jo
fstl
outsb
mov
imul
mov
icebp
jmp
mov
mov
mov
movsb
cmp
xor
icebp
push
sbb
outsb
clc
iret
in
incl
or
iret
push
incl
in
outsl
ja,pt
jecxz
lcall
xor
jmp
pop
pop
sub
ret
pop
xlat
adc
push
or
xchg
fldl
fnstcw
orb
pop
lock
mov
repnz
stos
jl
fsqrt
push
jl
outsl
lcall
lds
cmp
cmp
cmp
aas
xchg
mov
sahf
add
scas
mov
push
aaa
jmp
stos
scas
movsb
fidivl
into
addr16
sub
push
adc
in
adc
lret
cmpsb
daa
xlat
stos
add
ljmp
scas
push
addr16
mov
mov
pop
fisubl
push
mov
pusha
das
dec
dec
sbb
dec
jbe
out
dec
aad
stos
arpl
sbb
jae
xchg
es
inc
aam
ja
mov
fs
ljmp
pop
mov
push
enter
mov
testl
aad
pop
fstl
stos
mov
dec
xchg
and
xor
push
jbe
jo
sbb
pop
mov
push
dec
cli
outsl
outsb
xor
jno
inc
pushl
push
outsl
add
mov
ljmp
test
mov
jmp
subb
in
push
jl
cmp
sbb
mov
insb
daa
mov
popa
jge
xchg
cmp
sub
call
dec
adc
mov
pop
addr16
or
lahf
cmp
pushf
scas
or
lock
ret
lahf
sti
mov
inc
test
je
push
and
shl
push
lret
add
call
xchg
orb
adc
jmp
insl
mov
iret
hlt
dec
icebp
adc
add
jmp
lcall
hlt
incl
mov
fldenv
sbb
stos
ljmp
test
out
add
imul
ljmp
insb
fwait
dec
ret
mov
fwait
aad
push
push
or
dec
xchg
inc
and
pop
mov
js
adc
push
push
sbb
pop
jbe
jns
aaa
aam
pop
jns
jp
inc
pushf
lods
sub
roll
mov
jmp
jne
sub
mov
pushl
jg
pop
jns
adc
les
in
pusha
call
lds
mov
fsubl
fsubrs
pause
addb
and
into
ds
std
shll
incl
out
mov
insl
popf
in
inc
in
jno
loope
stos
jmp
les
pop
iret
push
pop
in
xor
into
decl
fcmovu
jecxz
testl
enter
out
jne
dec
mov
sbb
push
incl
push
push
add
pop
sub
sub
aad
lods
cmpb
in
mov
cmp
add
jmp
and
inc
imul
call
aaa
aam
movsb
sub
cli
sbb
pop
pop
jl
jmp
inc
push
mov
or
addr16
fnstenv
lods
xchg
ficoms
pop
jle
mov
imul
pushl
pop
pop
jo
adc
inc
pminsw
xor
mov
ja
mov
jecxz
cld
data16
incl
mov
mov
test
xor
sbb
loopne
je
fstpl
dec
inc
shl
clc
jmp
lods
or
in
fnstsw
adc
fisttpl
inc
or
sub
cltd
fucom
jecxz
fucomp
xchg
loopne
push
outsb
pop
jmp
pop
adc
clc
sbb
call
push
jbe
pop
sub
mov
lcall
dec
xor
in
outsb
mov
mov
sti
push
dec
pushf
jno
inc
cli
sarl
stos
rcll
cmp
leave
dec
loop
dec
xchg
lods
jge
incl
mov
test
jge
cwtl
sti
push
insb
xor
fisubrl
lods
fisttpll
xchg
jmp
push
adc
test
pop
scas
out
or
lahf
fldt
adc
jge
clc
mov
leave
dec
jns
push
jns
sbb
clc
jnp
jno
push
sbb
or
pushl
inc
testl
xor
mov
mov
push
call
push
or
and
cmp
lahf
pop
adc
sub
sbb
sbb
insb
xor
inc
mov
fxch
xchg
push
das
dec
jl
push
mov
jne
dec
nop
add
lods
push
iret
dec
or
ret
dec
push
mov
or
ljmp
scas
push
dec
push
dec
sbb
les
lcall
pusha
mov
pop
lahf
push
mov
neg
jmp
mov
push
push
jmp
or
add
rorb
dec
addr16
cmp
out
mov
enter
jns
popa
push
push
push
outsb
jo,pt
pop
rcl
pop
xor
nop
jae
pop
push
pop
call
mov
cwtl
pushl
pop
add
dec
gs
xor
fistps
aad
pop
mov
cmp
call
mov
insb
inc
and
out
push
stos
xlat
dec
out
push
push
cmp
enter
repnz
insb
adc
cli
ficoms
sbb
jecxz
loop
inc
lret
push
jge
inc
loope
out
gs
pop
pop
out
rcl
push
inc
fsubs
orb
cmp
cmpsl
imul
in
mov
xchg
out
lods
sbb
faddl
std
imul
lahf
dec
lret
andl
dec
lret
xchg
cmp
pusha
jl
clc
push
or
jp
movsb
pop
lret
iret
push
xchg
mov
out
stos
jns
sti
fcmovu
lds
push
out
ljmp
loope
shll
or
adc
ret
daa
sbb
xor
cmp
sbb
aas
add
pop
or
pushl
popa
push
jge
mov
pop
push
daa
dec
push
jp
and
push
xor
and
incl
aaa
pop
cli
imul
dec
adc
ss
xlat
fdivs
lcall
inc
dec
jae
push
outsl
in
mov
movsl
inc
sahf
ja
lret
leave
inc
dec
inc
inc
shll
sub
shrl
in
in
mov
xor
add
cmp
jge
mov
pop
inc
mov
scas
dec
dec
add
mov
gs
and
sbb
movsl
cmc
inc
pushl
jo
and
mov
and
push
inc
add
fwait
lret
sbbb
push
in
push
pushf
mov
call
jecxz
cmp
dec
leave
sbb
and
icebp
adc
add
aad
or
ljmp
cmp
stos
outsl
call
fs
fwait
add
lock
pop
out
mov
cmp
cltd
jge
dec
inc
mov
add
js
push
stc
hlt
sbb
popa
popf
mov
xor
pushf
ljmp
repnz
fnstenv
iret
out
sbb
push
cs
sub
imul
jnp
shl
mov
sub
mov
incl
push
mov
inc
adc
inc
dec
orb
xchg
out
in
dec
int3
ret
je
lods
xchg
lcall
add
nop
xchg
xchg
stos
rcr
nop
shrl
jno
mov
mov
jmp
lret
mov
decl
or
leave
test
mov
cs
adc
mov
movsb
and
pusha
mov
call
jne
icebp
pop
ljmp
pop
dec
inc
xchg
xlat
sbb
bnd
sbb
pop
incl
pop
cmp
mov
mov
cwtl
fcmovu
or
imul
dec
inc
and
mov
xlat
imul
xor
ds
cmp
mov
lahf
pop
inc
ret
pushl
mov
xor
mov
leave
jg
sub
aaa
hlt
cli
out
inc
outsl
and
or
lcall
jns
movsb
rcll
inc
or
sbb
and
cld
shrl
cld
push
iret
ljmp
in
test
pushl
aaa
pop
icebp
sub
add
dec
and
ja
adc
fisubs
adc
cmp
stos
std
pop
xor
pushl
sub
dec
sub
repnz
lds
data16
sbb
xor
pop
gs
cwtl
mov
or
incl
mov
cwtl
jl
lea
xor
in
or
push
incl
add
sbb
xorb
push
lds
xor
inc
ret
lret
adc
call
fsubl
pop
test
sub
xchg
fimull
fistpl
pop
mov
ljmp
incl
bound
cmp
bswap
addr16
mov
add
xchg
aam
ja
lcall
call
aad
sbb
enter
popa
push
mov
xchg
bound
adc
ljmp
inc
mov
jo
sub
ja
push
sarb
sub
pop
outsb
lahf
xchg
jns
jle
jae
lcall
and
in
inc
push
popa
decl
jl
fdivrs
mulb
out
es
lahf
in
ficoms
mov
jge
mov
push
aas
and
jo
pop
bound
adc
jnp
scas
sub
pushl
das
outsl
ret
roll
cli
ja
lret
dec
or
pop
jp
mov
inc
or
imul
incl
pop
popa
stos
push
push
imull
sbb
enter
sti
or
incl
pop
mov
xor
xchg
clc
inc
in
and
insb
sbb
decl
lcall
or
xchg
dec
pop
pop
pop
add
jno
mov
jmp
js
and
subb
nop
cmp
pushf
push
fsub
lods
sarl
lock
dec
data16
data16
loopne
fstps
out
sub
mov
xor
daa
inc
jge
incl
leave
or
cmp
fidivl
pusha
fs
or
push
es
loop
aam
mov
pushl
fsubl
adc
popa
push
cmp
xor
scas
mov
dec
xchg
pop
mov
adc
iret
dec
enter
and
ret
mull
xchg
clc
lods
fisubs
push
daa
xchg
inc
andb
lcall
out
push
imul
pop
mov
shll
and
push
push
dec
jo
pop
mov
aaa
add
loope
push
ds
inc
fcoms
and
bound
xchg
xchg
mov
and
cli
add
cmp
outsb
ljmp
out
xor
mov
or
decl
leave
sbb
pop
enter
jg
stos
dec
int
ss
or
xor
xchg
cli
cmp
aas
xor
pushl
int
and
sbb
mov
stos
mov
insb
adcl
inc
incl
mov
push
fadds
cmpl
or
sbb
xchg
inc
lea
mov
xchg
imul
inc
js
jmp
xchg
aam
sbb
roll
inc
pop
aaa
jmp
stos
xor
fldt
push
sahf
rcrb
xlat
fldcw
or
std
lret
ljmp
push
inc
mov
stos
stos
mov
int3
hlt
xor
xor
jno
xor
push
push
fptan
jne
sub
push
push
repz
jmp
jg
pop
mov
pop
push
mov
cmp
inc
mov
sub
pop
mov
repnz
xchg
into
xchg
push
lock
incl
mov
add
pusha
pop
std
imul
daa
mov
cmp
mulb
pushl
pop
in
lods
sub
notb
hlt
and
add
push
dec
xorl
jecxz
or
sbb
scas
cmc
aaa
xor
jge
pop
inc
rorb
sahf
jae
cmp
ljmp
pop
test
inc
aam
in
cmpsb
adc
adc
nop
sahf
xchg
jmp
mov
es
push
mov
sbb
cli
ret
incb
fdivrs
decl
test
mov
lds
subl
sub
enter
add
pop
mov
frstor
sahf
sarl
cmp
or
jae
ljmp
imulb
lcall
and
es
inc
stc
loop
in
mov
jno
sahf
stos
xchg
call
das
ja
incl
and
insb
xlat
in
xor
mov
cmpsb
jmp
cmp
xor
call
xchg
sub
sub
ja
inc
popf
push
ret
push
mov
lahf
mov
orl
ljmp
not
cmp
aaa
imul
xchg
mov
repz
jbe
pusha
arpl
xchg
ljmp
lcall
and
aas
sti
das
jo
push
iret
dec
or
in
popa
dec
adc
xlat
lds
clc
mov
sarl
jge
dec
rcrl
movsb
xchg
bsr
xchg
sub
jno
sub
insl
jbe
fwait
fwait
mov
into
test
incl
pushf
fisttps
xor
mov
jl
jo
cmp
mov
xchg
enter
or
sbb
pushl
hlt
mov
cli
leave
out
xor
inc
sti
imul
cmpsb
loopne
lods
push
xor
inc
adc
incl
pop
negl
inc
cmp
scas
aas
rolb
mov
pop
add
jno
sarl
lcall
gs
stos
shlb
pop
cmp
pop
hlt
aad
sbb
push
or
push
and
jg
xchg
jp
rcll
push
push
lods
iret
rcll
and
clc
sub
or
xorb
inc
in
testb
loop
mov
and
mov
divl
in
or
call
lds
fprem
xchg
mov
mov
es
aam
jne
popa
and
mov
jae
call
movsl
sarl
cli
xor
mulb
add
out
outsb
push
fidivrs
scas
loopne
lcall
jae
outsb
les
and
adc
data16
mov
sbb
cmp
nop
int3
incl
call
mov
out
sti
in
fcomp
ds
sub
int3
idiv
or
xchg
xchg
les
aad
jmp
in
mov
mov
stc
mov
dec
push
add
fdiv
int3
sub
lret
jge
cmpl
mov
fsubrs
mov
mov
lock
fwait
loop
out
mov
aaa
stos
test
decl
and
or
sbb
mov
pop
std
shrl
rcll
inc
pop
mov
pushl
incb
pop
jge
iret
nop
insl
std
aad
test
inc
mov
cmp
fcos
jmp
xchg
sbb
inc
das
jo
cmpsb
dec
shrl
dec
cmp
mov
xor
push
sub
repnz
jmp
or
int3
adc
adc
int
inc
enter
add
test
movsl
pop
cli
rcll
jp
fmulp
out
adc
inc
fsubl
pop
adc
adc
stos
cmpsb
lcall
movsl
call
int
test
int3
mov
fwait
push
lds
in
xor
jmp
leave
cmc
lods
cmpsb
and
jge
cli
cmp
inc
jmp
adc
or
adc
fimuls
jo
and
pop
jmp
fidivrl
push
push
mov
jnp
sbb
ljmp
sahf
int
mov
repz
addr16
xlat
inc
xchg
lcall
nop
and
pop
jmp
xor
xor
movsb
imul
hlt
ret
inc
fstpl
nop
and
gs
inc
mov
sub
mov
or
mov
pop
and
jne
mov
jmp
pause
pop
test
sub
daa
loope
insb
aad
aam
sub
mov
pushl
testl
fcompl
lds
je
cli
ds
cmp
or
fstpl
jmp
insl
ds
stc
jne
fcmovb
pop
mov
mov
or
daa
arpl
sar
jmp
add
cmpsb
xchg
repz
mov
mov
test
pmulhw
cmpsl
movups
call
lret
in
cmpl
xor
add
es
sarb
mov
mov
pop
lcall
xchg
xchg
xbegin
fcoms
incl
fs
mov
test
lret
data16
ljmp
shr
push
push
mov
add
arpl
inc
dec
lock
scas
jecxz
fidivs
loopne
in
jg
hlt
jb
or
xchg
dec
mov
into
hlt
mov
les
xlat
icebp
fcomp
test
decl
pop
sbb
xchg
push
ja
shll
andl
adc
lcall
sbb
sub
scas
or
adcl
je
cmpl
xchg
jb
dec
cmpsb
mov
js
aas
std
sbb
dec
or
pop
fidivs
aam
fucomip
push
jg
incl
push
dec
pushl
push
pop
ret
popa
sub
xor
dec
loopne
outsb
cmpl
push
mov
stos
dec
movsl
adc
and
push
xchg
dec
ja
or
jo
call
stos
jmp
cs
decb
or
subb
repz
add
mov
jp
add
call
pop
sub
push
mov
push
andb
xchg
xchg
loopne
ret
js
ljmp
and
es
scas
aas
mov
or
mov
aad
or
in
ds
lcall
lret
decl
stos
adc
jmp
sbb
jge
sub
mov
inc
sub
sahf
cmp
decb
mov
mov
adcl
out
out
xlat
sahf
xor
dec
lcall
daa
getsec
fcmovbe
sbb
mov
and
es
jb
jo
pop
ja
pop
sub
mov
inc
idivl
imul
xchg
push
add
add
je
or
push
mov
lods
jb
sti
mov
mov
jnp
loop
movsl
mov
mov
jmp
dec
aad
outsl
adc
popf
aad
jl
jbe
inc
popa
inc
push
cmp
leave
lcall
decl
jle
out
aam
lods
sub
sbb
and
cmp
push
add
push
mov
jmp
xchg
out
popa
lgs
mov
repnz
pop
push
scas
pop
sub
stos
frstor
ljmp
fnsave
and
mov
dec
mov
mov
int3
inc
pop
mov
lds
dec
ret
mov
icebp
int3
xchg
addb
fcomps
inc
add
decl
push
push
or
inc
lock
or
pop
mov
cmp
pop
cwtl
or
filds
dec
frstor
mov
xchg
lods
stos
insb
fmull
inc
cmp
jmp
add
icebp
call
pop
test
cmc
adc
mov
aam
push
jecxz
outsb
mov
test
mov
cmp
je
stc
pop
xor
jmp
es
xchg
jns
repz
or
dec
pop
xchg
cmp
shlb
sub
fwait
int3
mov
mov
sub
mov
xchg
leave
sub
shlb
cmp
sub
int3
or
decl
mov
adc
movsb
fcmovnb
cwtl
aam
pop
js
mov
test
js
jb
lcall
xorl
stos
movsb
sahf
jmp
xchg
xchg
ja
popa
xor
aam
mov
or
mov
cmp
andl
mov
jmp
out
jl
sbb
dec
adc
test
add
inc
cmp
jns
dec
adc
das
lea
sarb
flds
jecxz
cmpsb
xor
sub
incb
fwait
sbb
sahf
ss
lock
xor
adc
stos
data16
data16
lcall
enter
cli
mov
shll
mov
xchg
push
adc
lods
lock
sbb
in
stc
mov
fcomp
inc
lret
cmpsl
mov
lods
xorb
sub
in
mov
push
pop
fcmovne
sub
push
call
jbe
pop
aam
dec
inc
mov
negl
push
cmp
hlt
ljmp
cmp
fbld
xchg
jge
shlb
mov
test
decl
push
movsl
xchg
sahf
add
fdivl
cmp
push
dec
push
mov
je
jp
pop
adc
lcall
mov
or
sub
jno
mov
xor
test
leave
cwtl
sub
repnz
ror
mov
mov
call
sarb
mov
fcomp
test
sub
incl
shr
push
adc
mov
es
iret
in
loope
pop
nop
xchg
push
mov
test
test
addr16
lods
mov
sbb
jg
dec
jmp
cmovns
mov
xchg
imul
pop
imul
ljmp
cwtl
pop
xor
pop
lret
subl
das
cmp
pop
mov
enter
ljmp
pop
andb
fimull
js
imul
mov
shll
call
and
mov
mov
addr16
ja
xor
pop
mov
sti
cmpsl
mov
loopne
incl
jle
xchg
in
mov
js
dec
ljmp
cmc
iret
jnp
in
push
lcall
jae
add
mov
fldcw
dec
lret
dec
xchg
push
ffreep
push
ja
xor
sbb
xor
push
rcrb
ds
or
dec
push
mov
or
incl
mov
add
pop
cmpsl
cwtl
cmp
flds
into
aas
scas
cmc
add
movsl
aas
sub
out
mov
jb
dec
mov
pop
or
inc
mov
xchg
in
inc
cmp
adc
pop
incl
jbe
lahf
mov
cmp
xchg
xlat
or
loop
in
je
adc
fnstsw
pushl
mov
dec
xchg
lods
mov
fucom
sub
das
es
mov
clc
or
call
and
shrb
mov
in
fnstcw
adc
ljmp
hlt
test
mov
stos
xor
out
addr16
mov
bound
mov
cli
xor
popf
leave
and
cmp
xchg
push
dec
pop
mov
mov
pop
out
pop
push
fisubrl
test
xchg
decl
and
stos
sahf
imul
insb
loope
out
mov
jmp
dec
int3
jmp
mov
incl
mov
lock
das
fs
std
sub
rcrl
imul
ret
popa
popf
mov
test
rol
les
lahf
nop
or
xchg
in
jge
and
call
xchg
cmp
repz
insb
or
pop
add
icebp
push
pusha
mov
jmp
sbb
test
push
and
sarl
cmp
xchg
popf
add
aam
mov
fdivrp
incl
into
hlt
mov
ret
mov
shrl
nop
dec
in
les
icebp
icebp
adc
jns
movsb
pushl
dec
inc
int3
adcl
test
jl
pop
push
add
decl
cmc
loopne
inc
cli
lahf
jecxz
pop
jb
repz
add
mov
mov
push
incl
pop
cmpl
mov
icebp
xor
mov
test
push
js
or
ljmp
insb
ja
cmc
pop
data16
xor
insl
and
inc
inc
dec
or
adc
cmpsl
sahf
pop
sub
imul
hlt
gs
pop
lock
adc
daa
test
xchg
rol
ret
dec
outsb
and
cmp
cli
movsb
fisttpl
inc
add
inc
pop
sahf
xor
nop
lahf
pop
mov
cld
push
popf
hlt
daa
adc
out
sbb
inc
pushf
sub
int3
or
cmp
dec
out
jle
repz
mov
pop
mov
iret
dec
pop
push
imulb
xor
xor
xor
lret
dec
aaa
cmp
loopne
push
incl
adc
es
jo
test
leave
and
add
pop
imul
xchg
mov
jmp
jg
xchg
jl
sbb
push
jmp
inc
jbe
scas
addb
inc
iret
lea
pushl
in
rolb
fwait
dec
pop
pop
push
cmp
out
xor
pop
lahf
lods
nop
and
jmp
jle
outsl
adc
dec
push
cmc
fbstp
mov
xchg
push
cmpb
push
test
decl
stc
fldenv
lcall
bound
loopne
mov
pop
fs
mov
xchg
jecxz
ljmp
les
add
xor
cmp
movd
arpl
add
incl
ret
shl
imulb
dec
popf
mov
idivl
mov
mov
inc
dec
shr
decl
shlb
push
mov
daa
jmp
inc
xchg
xor
ficoml
and
add
decl
mov
inc
cld
ret
add
pushl
mov
pop
jmp
mov
jp
insb
aad
cmc
cmc
je
adc
shl
stc
jmp
jae
icebp
push
sub
incl
xor
stos
std
fstps
jle
xchg
cmc
imul
push
lahf
mov
push
inc
fdivrp
call
fwait
lods
sub
fildl
mov
xchg
adc
je
fwait
mov
jmp
adc
sub
aad
mull
mov
and
mov
cmp
ljmp
loopne
ja
pop
dec
mov
add
dec
lods
or
outsl
dec
lret
std
or
jmp
pushl
push
lods
xor
mov
push
jmp
mov
push
push
call
mov
pushl
mov
imul
aas
add
jg
scas
movsl
ja
or
mov
decl
sub
pop
rcr
lock
push
je
adc
and
or
fisubl
mov
add
incl
out
stos
dec
adc
mov
dec
dec
ret
add
jbe
xchg
jne
mov
jmp
lahf
mov
mov
push
dec
ret
xchg
cmp
sub
mov
inc
or
jmp
sub
jo,pn
dec
mov
imul
push
sarl
mov
lcall
int3
pop
xor
add
aad
monitorx
and
mov
push
cmp
inc
jnp
pop
push
repnz
rcr
adc
cs
dec
nop
adc
int3
out
push
mov
cmp
movsl
je
lcall
cmp
sub
cmp
arpl
js
mov
test
lock
jg
push
into
cmp
ds
mov
repz
cmpsl
mov
mov
push
inc
fisubrl
test
dec
jo
pushf
outsb
imul
add
stc
test
mov
fs
repnz
shll
imul
clc
stos
into
mov
jp
xor
lcall
xlat
jp
ss
out
sub
repz
lahf
arpl
sub
movb
jp
lds
jmp
pop
push
mov
dec
in
sub
dec
fstpl
fsubrs
jno
movsl
mov
jmp
lea
sahf
bound
cmpsb
andl
jno
pop
push
mov
lret
add
call
xchg
or
and
cmp
jne
pop
lret
decl
inc
inc
jb
xchg
insl
out
mov
inc
imul
xchg
movsb
mov
aaa
out
mov
pop
repnz
jae
aam
or
iret
xchg
dec
and
mov
adc
mov
int
jae
jb
xor
arpl
dec
jo
push
lcall
test
div
lds
pop
cmp
push
insb
roll
lcall
sub
lret
sti
pop
into
daa
or
fsts
movsb
add
xchg
sbb
jmp
lret
inc
xor
sub
inc
bound
rorb
dec
jmp
lcall
mov
xchg
push
dec
cmpb
sbb
nop
adc
insl
cmpsl
push
lds
cwtl
ds
decl
or
push
lcall
sub
inc
popa
bound
sahf
mov
decl
push
jp
xor
arpl
mov
mov
es
lahf
rcrl
incl
call
insb
pop
lock
cli
inc
inc
test
int
out
inc
dec
or
cmc
loop
cltd
push
outsb
pop
fdivr
jl
or
push
lret
inc
das
pop
test
imul
daa
mov
das
add
pusha
cmp
jle
sbb
lods
movsl
adc
inc
push
xor
out
bound
cltd
inc
xchg
fidivs
or
pushl
xor
lret
or
cltd
jno
ss
cli
xchg
or
jno
lret
out
popa
pop
xchg
sub
out
mov
cmp
inc
cmp
mov
cmp
mov
stos
and
mov
ficoms
push
repz
call
xchg
push
dec
scas
xor
pop
arpl
add
addl
xchg
addr16
incl
pop
out
fidivrs
cli
jbe
mov
cli
lods
faddl
fimuls
adc
cmp
push
and
inc
out
sbb
pop
popf
push
repnz
rcll
add
cmp
or
inc
pop
inc
insl
push
popf
jge
sub
fimuls
jnp
iret
pop
sbb
int
mov
dec
insl
lea
icebp
cmp
in
nop
cmp
add
adc
mov
fstl
jo
jbe
sahf
sub
sbb
stc
inc
jno
dec
out
jmp
or
mov
or
jp
add
int3
xor
jg
movsl
inc
loop
shrl
or
lret
scas
ljmp
ret
pop
pushl
mov
xchg
xchg
test
fstl
addr16
push
sahf
mov
adc
lret
pushl
push
and
jle
call
pop
scas
imul
cld
mov
out
jmp
decl
hlt
inc
cmpsl
ffreep
xor
mov
fiadds
add
sub
daa
mov
lcall
andb
rclb
jno
push
jl
rcrb
inc
cld
add
hlt
jmp
dec
xchg
fwait
push
aad
je
xor
jmp
adc
fcmovu
icebp
sbb
lret
dec
adc
or
inc
in
pop
ret
std
dec
daa
mov
aad
lcall
fwait
mov
call
in
and
adc
lret
movsl
ret
jne
and
mov
ss
jnp
inc
xor
call
or
push
xchg
xor
dec
inc
mov
iret
fsubrs
mov
call
aad
inc
add
ja
pusha
adc
adc
sbb
shll
push
movsl
jle
xor
lcall
mov
dec
mov
push
icebp
stc
inc
fs
mov
mov
push
sbb
inc
aam
xchg
out
insb
out
std
ljmp
sti
inc
movsb
push
orb
or
out
in
cmpsb
sahf
mov
push
incl
jmp
mov
out
pop
std
scas
fcomi
addl
jmp
enter
fsubrs
scas
call
fucomip
movsl
mov
ljmp
iret
call
les
xchg
mov
inc
pushl
test
mov
xor
jge
pushl
xchg
sbb
lea
fsts
movl
lods
jmp
ret
aas
sub
lock
add
inc
mov
icebp
push
push
mov
aas
pop
pop
lcall
add
xor
mov
cmp
jmp
nop
xchg
mov
push
mov
ret
sbb
fldl
adc
stos
fcos
pushl
inc
ja
cmp
xchg
push
mov
jns
shrl
ss
fs
insl
or
dec
mov
inc
sbb
movsb
sbb
leave
cmp
mov
push
dec
or
out
push
mov
xor
aas
sub
dec
mov
xor
xor
mov
in
sub
xchg
inc
pop
and
jae
call
and
xchg
cmp
shl
jge
ret
and
cld
int3
cli
hlt
pop
jae
mov
jmp
enter
data16
dec
daa
out
stos
outsb
xchg
dec
rcrl
idivl
mov
and
and
or
addr16
and
mov
inc
dec
dec
adc
inc
sub
pop
pop
cld
je
test
arpl
push
sahf
into
dec
movsl
test
cmpsl
or
xor
cmp
daa
loope
or
mov
fisttpll
xchg
je
ja
movsl
jb
inc
scas
or
ljmp
fwait
cmp
mov
rol
je
pop
dec
adc
test
popa
push
shll
in
int
push
icebp
push
push
enter
jbe
push
mov
xchg
into
lahf
or
mov
push
out
lret
fisubs
mov
aam
push
pusha
repz
xchg
jb
lret
mov
xor
call
icebp
xor
into
mull
in
into
fisubrl
cwtl
pop
jecxz
aam
test
push
je
stc
jae
call
stc
ret
cmp
and
lahf
xor
adc
xor
dec
lret
jmp
jg
dec
xor
stos
in
mov
jno
call
xchg
es
decl
add
in
pushf
adc
add
lret
cmp
insl
pop
ret
in
call
outsb
mov
hlt
popf
inc
fisubrl
call
dec
adc
aad
test
roll
loope
call
pop
xchg
repz
daa
int
add
sub
cmp
push
sahf
jg
add
cwtl
mov
call
cmp
ja
mov
push
push
pop
sub
arpl
cmp
xor
and
call
fldl
ljmp
pop
pop
mov
sbb
cmc
fildl
push
aad
jnp
inc
shlb
jp
push
pop
lret
mov
push
adc
mov
into
data16
mov
mov
pushl
and
sar
lret
add
pop
cmpsb
adc
pop
sub
pop
push
lds
mov
xchg
inc
cmp
and
mov
cmp
sbb
or
jae
repz
jecxz
call
rcl
fucom
push
fs
fcmovb
out
faddp
add
mov
pop
repz
aas
mov
pushl
pop
sar
out
push
es
fwait
sbb
cld
xor
lock
dec
dec
dec
lock
cmp
test
pushl
cli
mov
insl
lds
add
leave
inc
add
jnp
jp
or
adc
jmp
std
aas
addr16
dec
push
xlat
xor
adc
jns
jmp
xchg
inc
popf
and
call
push
lret
adc
loopne
clc
fldt
inc
inc
popf
jp
push
cmp
cmp
lcall
int3
add
inc
sub
push
jb
pop
ss
lret
out
loop
adc
daa
fs
fistps
and
adc
lods
mov
cwtl
jp
adc
pop
mov
je
jmp
jns
negl
and
pop
pop
imul
enter
lret
mov
mov
ljmp
adc
dec
sub
mov
mov
aas
sbbl
clc
fs
pusha
cmp
mov
inc
xchg
out
bound
iret
std
or
fwait
lock
add
out
mov
call
outsb
jl
data16
push
lods
test
aas
sti
xchg
dec
jp
push
clc
dec
mov
sub
xor
incl
call
pop
fbstp
pop
cmc
sar
push
cmp
es
inc
sub
adc
scas
mov
insb
or
push
test
inc
data16
sub
cmp
nop
je
repnz
mov
incl
sbb
jbe
fwait
ja
inc
loopne
cmp
mov
fdivrs
jecxz
decl
xor
mov
mov
inc
out
test
push
lcall
push
cltd
xchg
jnp
adc
call
or
mov
mov
movsb
nop
lock
jmp
es
push
and
shll
sarl
or
jle
hlt
inc
xchg
lea
cmp
lret
data16
add
scas
dec
pop
xor
push
lds
fs
or
aad
test
xchg
jle
mov
pop
push
mov
gs
fisubrl
roll
mov
cmp
mov
mov
insb
or
pop
das
dec
imul
out
cmp
lahf
sub
lods
push
xor
and
jno
imul
imul
call
inc
sbb
mov
push
fldenv
addr16
jmp
std
loop
pop
into
data16
push
jmp
in
xchg
cmpsl
or
mov
add
cwtl
into
psllw
scas
cmp
ja
xchg
jecxz
jmp
inc
jb
and
stos
inc
jp
repz
repz
out
lea
repz
add
icebp
inc
push
mov
jae
lods
xor
dec
loop
mov
ds
dec
adc
int3
add
or
sub
decl
sarb
out
test
stc
pop
gs
andl
mov
out
mov
jbe
mov
push
push
sti
pop
mov
lcall
add
outsb
mov
xor
pushf
push
insb
je
adc
decl
iret
les
hlt
nop
mov
fwait
adc
xlat
js
push
jge
popa
add
js
jge
stc
pop
cmp
xor
push
or
outsl
push
adc
rorb
push
das
fiadds
mov
add
js
mov
testl
mov
lahf
pushl
pop
mov
aas
test
lock
push
and
std
clc
mov
lcall
sub
and
mov
lock
into
enter
cli
frstor
outsl
cmp
decl
or
inc
fstl
rcl
push
push
adc
push
dec
push
stos
das
dec
add
mov
stc
inc
mov
jne
out
cmpb
mov
cmpxchg
xchg
jl
clc
push
jmp
mov
sub
or
das
mov
add
icebp
jecxz
jg
data16
adc
jmp
test
mov
ret
adc
or
or
pop
in
mov
decl
lret
data16
add
scas
mov
inc
ss
lcall
andb
rcll
inc
aas
jno
mov
in
stos
xchg
sub
and
push
mov
ljmp
inc
pop
sub
pop
mov
maskmovq
idivl
in
cwtl
adc
or
push
sar
out
mov
lret
orb
adc
aas
fs
cmpsl
shrl
jne
icebp
out
jecxz
mov
dec
std
sbb
inc
insb
sbb
pop
mov
mov
imul
pop
inc
ret
lret
mov
pushl
mov
sub
cmp
push
insb
dec
sahf
popa
xchg
nop
xchg
das
mov
gs
mov
ja
arpl
jmp
stos
and
inc
jbe
push
pop
sbb
sarl
jb
loop
push
mov
pop
sub
mov
jbe
fmulp
dec
dec
push
xor
push
adc
cmp
add
or
mov
rcrl
call
int
cmp
mov
mov
mov
pusha
jp
ja
lahf
xor
ljmp
push
mov
sahf
jno
hlt
call
leave
xchg
loope
push
jle
mov
mov
adc
decl
push
int3
sub
popaw
mov
enter
mov
shl
ss
jmp
pushl
add
lcall
outsb
lods
rolb
xchg
mov
in
mov
mov
xor
push
add
cs
jecxz
sbb
es
decl
dec
data16
cltd
xor
mov
jae
sbb
jo
repz
add
dec
xor
jle
lcall
push
jne
mov
push
sub
bound
pop
push
xchg
mov
into
fstl
gs
jbe,pt
scas
xchg
sbb
out
or
icebp
cmc
stc
sbb
sti
jmp
pushl
dec
mov
loop
loope
inc
and
fstpt
push
add
push
or
std
dec
push
shrl
dec
lds
mov
xchg
add
push
cld
out
xchg
arpl
xchg
arpl
pushl
mov
mov
push
pushl
daa
sbb
adc
bound
std
pop
adc
xchg
or
mov
in
pop
push
into
mov
xor
ljmp
popf
comiss
pop
mov
dec
jge
ljmp
pop
loop
fldl
stos
xchg
lret
fldenv
or
sbb
mov
mov
jne
incl
mov
cmp
mov
sub
das
jmp
sub
cld
inc
or
jnp
call
aas
test
pushf
mov
push
cmp
xchg
push
movsl
cmp
xchg
xor
mov
mov
mov
sbb
mov
mov
data16
dec
fwait
clc
imulb
addb
xchg
cmpsl
inc
test
rorl
gs
call
cmp
clc
lahf
dec
push
js
xchg
jmp
icebp
xchg
xor
decl
inc
lea
ja
jecxz
out
cmp
pop
adc
mov
aam
jmp
dec
jl
fmull
pop
pusha
mov
push
dec
mov
xor
pop
cli
test
int
mov
into
ljmp
shl
leave
call
inc
std
or
push
test
out
flds
popf
dec
ds
fldcw
sub
push
lret
ret
or
clc
fiaddl
mov
dec
mov
xor
js
xchg
call
sub
icebp
repz
fs
mov
inc
scas
ret
inc
add
mov
stc
jp
dec
inc
mov
push
mov
mov
xchg
xchg
stc
push
cmp
int3
call
enter
mov
add
out
inc
cmc
xchg
sbb
push
push
pop
adc
xlat
xchg
decb
inc
push
lods
and
aaa
test
jb
and
pop
pop
jb
cmp
gs
int3
mov
inc
cs
pop
out
xchg
cmc
popf
fcoms
xor
cmp
ss
scas
inc
jp
scas
mov
jb
jmp
out
cmpsb
inc
push
xchg
xchg
inc
mov
into
jne
aad
dec
addr16
decl
das
mov
addl
or
idivb
inc
xor
vmovd
sub
ljmp
std
movsb
mov
add
cwtl
fistps
add
jnp
jp
xchg
ljmp
jp
mov
sub
dec
stos
mov
out
push
xlat
mov
mov
ds
ljmp
add
sti
pusha
and
fstps
je
or
pushl
ja
mov
pop
and
lea
sbb
add
xor
sub
jmp
push
cmpsb
adc
lea
inc
decb
jg
insb
inc
dec
cmp
or
test
jmp
inc
ja
cmpsl
cltd
jnp
push
imul
cmpsb
xor
cld
into
xor
inc
int
xchg
inc
jns
inc
lock
call
lcall
xchg
popf
inc
cmpsb
arpl
stos
arpl
pop
xchg
int
out
out
add
cmp
pop
ret
loop
mov
jge
fsubr
add
sbb
aad
out
lcall
sub
add
inc
gs
pop
mov
lahf
adc
mov
iret
jnp
mov
scas
push
jo
add
and
outsb
in
lcall
dec
jp
outsl
cmp
sbb
lahf
cmp
jmp
call
fcmovne
jne
xchg
sub
cmpl
cmpsl
inc
repz
into
mov
call
shll
mov
dec
test
out
and
les
dec
adcb
jecxz
jne
adc
add
jns
jno
push
jno
inc
jmp
addb
jmp
jp
sub
mov
es
jmp
mov
inc
nop
add
push
adc
fmul
bound
adc
daa
fcmovb
cmpsb
and
jmp
or
pop
push
fiadds
push
je
sahf
adc
test
rclb
or
pop
lods
ljmp
test
sti
cmc
add
pusha
inc
xor
adc
sbb
sbb
pushl
jge
sbb
in
pop
xor
adc
xorb
andl
dec
mov
xchg
or
in
or
lds
adc
dec
push
xchg
movsl
mov
pop
pop
jmp
and
push
aas
rcrl
fisttps
adc
add
and
fsubl
call
mov
and
xchg
imul
daa
cmp
jmp
imull
jo
das
add
or
sub
pop
movsl
mov
add
pusha
cli
mov
jg
pop
inc
fidivl
cmpsl
or
mov
mov
dec
xchg
sbb
and
jae
ret
push
or
adc
mov
fldenv
cmc
cld
rcll
mov
mov
gs
decl
scas
jecxz
mov
negl
cmp
pushf
out
test
das
mov
decl
jbe
js
xor
stos
sub
and
jge
xchg
test
pusha
adcb
lret
cmc
mov
ljmp
xchg
cmpsb
cmp
loopne
sbb
pop
out
aad
ret
aad
inc
pop
dec
dec
cltd
inc
lret
jmp
mov
inc
lods
sbb
and
movsl
xor
es
dec
faddl
jmp
mov
xchg
cli
xchg
jmp
stos
xchg
test
xor
add
mov
adc
aas
mov
lcall
iret
dec
std
int3
jle
inc
pop
clc
or
test
dec
call
sar
or
cmpsl
incb
jbe
call
cmc
call
adc
ds
mov
fisttpl
push
fwait
sbb
out
scas
inc
cmp
cmp
aas
add
adc
push
leave
pushf
sub
es
dec
xor
cmp
hlt
push
jp
decl
pop
aas
xchg
cwtl
das
xchg
adc
sarl
stos
testb
push
push
sub
jnp
je
je
cmc
incl
push
or
add
loop
imul
mov
sub
inc
cmc
mov
lcall
aas
sub
inc
jg
mov
add
sub
or
lds
inc
or
push
sbb
sub
dec
jno
lods
imul
stos
pushf
mov
aam
ret
sbb
test
pop
cmc
out
decl
mov
adcb
in
or
push
bound
and
and
sbb
ud0
decl
callw
fcmovbe
dec
cmpsl
push
adc
data16
fldl
mov
movsl
decl
jae
hlt
repnz
push
movsl
add
sbb
adc
adc
push
adc
notb
push
imul
or
push
mov
les
inc
mov
xchg
adc
fcompl
dec
or
sub
xor
call
or
movsl
imul
out
repz
mov
add
test
push
lcall
out
jge
pop
sbb
scas
ja
mov
inc
mov
pop
xor
incl
imul
enter
mov
xor
lret
push
popa
std
mov
lcall
cltd
flds
mov
or
imul
shrb
push
dec
js
pusha
mov
sub
cmpsb
jnp
fmul
pop
xchg
mov
pushl
mov
repnz
ds
cwtl
adc
js
gs
scas
and
mov
inc
lock
jle
and
mov
out
jmp
dec
arpl
inc
cmp
ret
cmp
sahf
std
inc
dec
scas
and
fsubr
jmp
mov
mov
inc
xchg
sarl
and
mov
call
mov
fisttpll
pop
push
in
fdivrl
push
nop
jnp
xor
push
and
cmp
lcall
mov
cmc
int3
push
fcoms
je
dec
fisubrs
inc
icebp
idiv
scas
or
pushl
push
filds
xorb
mov
addl
adc
cld
in
xchg
daa
push
jnp
test
sub
cmp
pop
lret
test
sub
push
sbb
jecxz,pt
push
or
push
and
inc
adcl
jle
push
cs
loope
jmp
lret
mov
mov
decl
sub
cmp
ret
shrd
imul
decl
inc
shl
sahf
and
lods
pavgb
scas
push
sub
sub
js
push
outsl
inc
cmpsl
daa
ljmp
pop
mov
ja
xorl
je
mov
sub
sahf
pop
pop
xchg
sbb
loopne
sub
dec
sbb
inc
ds
dec
aam
inc
rolb
leave
repz
in
mov
mov
das
push
xchg
sti
mov
out
xchg
mov
or
js
out
movsb
xor
decl
cmpsb
jno
pop
filds
jmp
xor
lret
xor
sub
push
sbb
pushl
cmp
enter
xor
push
mov
fstpl
dec
sub
add
in
decl
dec
mov
bound
add
stc
in
lock
or
mov
ljmp
ret
in
cmp
dec
adc
sub
js
loopne
nop
dec
push
xchg
gs
pop
mov
hlt
hlt
pushl
pop
fsubrp
push
pop
xchg
leave
ret
sbb
daa
pop
jmp
shrb
cmp
loopne
call
mov
mov
ret
lret
in
pop
push
sbb
mov
push
jae
ror
insb
call
leave
or
sar
dec
fwait
lods
xchg
push
jbe
or
jle
fstp
xchg
mov
dec
mov
sbb
lcall
jne
mov
orl
sub
icebp
xchg
jp
mov
sbb
in
aad
push
popl
aas
push
jnp
ljmp
xchg
mov
les
fadds
or
add
or
jl
popf
aaa
adc
ljmp
stos
lods
clc
in
test
stc
sub
cs
dec
jb
cmc
jp
and
dec
sbb
pushl
cwtl
fistpl
lret
mov
pop
xchg
lret
xor
ss
push
push
sub
sbb
int3
imul
push
sub
iret
inc
movsb
lret
lods
jmp
lock
pop
xchg
dec
in
and
sub
out
mov
inc
push
ret
sahf
or
jnp
fs
jl
imul
xor
cwtl
inc
xchg
jae
push
cli
lahf
data16
incl
sub
stos
ret
popf
mov
in
lahf
cltd
push
pop
pop
xor
call
xor
cmp
sahf
out
lds
push
cltd
cmp
pop
test
dec
lock
jg
sbb
sub
dec
imul
inc
mov
sub
mov
xchg
pushl
adc
cmpsl
cpuid
push
pushf
dec
pop
xchg
xor
or
or
xchg
sub
xchg
pop
jmp
insl
sbb
lret
mov
int3
xlat
mov
push
inc
lods
les
mov
daa
cmp
repz
cmp
adc
ds
cli
push
mov
xor
js
sbb
in
mov
dec
push
xor
and
nop
in
cmp
leave
sti
dec
sub
inc
out
jmp
repz
cld
xchg
or
xor
inc
pusha
stos
mov
fstps
xchg
cli
add
dec
push
xchg
jmp
push
mov
cmp
cmp
stos
jmp
and
sbb
pushl
mov
iret
stos
movsb
sarl
jbe
lahf
xchg
pop
mov
dec
int
mov
jecxz
push
call
sti
stos
push
or
out
jbe,pn
push
int
lret
addr16
push
push
xchg
pushl
ret
lods
jle
inc
cmp
es
testb
clc
pop
outsb
xor
mov
icebp
stos
call
andl
pop
mov
cmpsl
repz
lahf
je
inc
adc
mov
rclb
xchg
lds
dec
sbb
dec
stos
out
mov
inc
and
aam
mov
or
add
inc
pop
xorb
incl
xor
pop
sbb
dec
push
lock
addl
push
mov
iret
mov
dec
mov
cmpsb
decl
mov
rolb
xor
imul
mov
cmp
sub
mov
lea
pop
mov
and
or
push
stc
insb
lret
mov
arpl
decl
sysret
xor
out
es
push
cmc
test
int3
aas
jbe
pusha
or
mov
jmp
dec
pop
call
adcl
fdivr
pushf
lret
push
out
lcall
add
ljmp
xchg
inc
loopne
test
test
test
cmp
je
mov
stos
test
jno
cmpl
sti
inc
xchg
add
pop
lods
movsb
sub
lahf
mov
sbb
js
js
add
aas
loop
cli
inc
sti
pop
cmc
xlat
cmp
dec
sbb
mov
pop
push
mov
insl
inc
mov
jl
mov
xchg
js
popf
das
jmp
popf
pushf
out
xor
ljmp
iret
test
mov
push
icebp
imul
add
jbe
movl
jmp
pop
push
sbb
mov
imul
ret
out
jmp
dec
call
fdivrs
in
test
icebp
dec
out
mov
dec
and
cli
and
call
out
and
pushf
push
pushf
repz
ret
xor
mov
std
xchg
icebp
jo
mov
iret
enter
jp
inc
push
push
ficoml
sbb
sub
jg
es
scas
setge
jmp
pushf
cld
cli
and
mov
dec
add
repz
xchg
cmpsl
xor
push
add
push
mov
pushl
je
pop
jnp
jb
cli
pop
nop
jle
push
sahf
xor
or
fcmovne
sub
xchg
push
xchg
ljmp
push
das
lea
lds
fcompl
adc
add
dec
loope
sbb
fbstp
xor
pushl
clc
cmp
popf
in
adc
pop
jno
dec
nop
gs
mov
cmpsl
mov
inc
add
jmp
mov
roll
in
outsb
sti
inc
fistpll
in
repnz
cld
jg
mov
inc
mov
mov
dec
pop
in
insl
mov
jg
imul
dec
movsb
inc
and
insb
hlt
push
inc
pop
cmpb
jb
std
adc
mov
data16
jnp
mov
call
les
stos
add
push
scas
rcl
add
ds
sbb
js
push
sub
cld
mov
call
xchg
pushf
fisttpll
mov
and
scas
sub
xchg
mov
xor
aad
mov
incl
movsl
jbe,pt
sub
pop
es
xor
mov
or
jne
push
aam
jne
push
mov
je
daa
mov
sbb
mov
scas
stc
ds
call
cmp
es
xchg
aam
mov
imul
pusha
mov
iret
and
cli
mov
mov
pop
xor
lods
pop
outsl
test
add
sbb
or
leave
out
outsb
push
cmp
call
and
push
cld
inc
jbe
sbb
mov
arpl
fildl
out
insl
out
decl
inc
push
out
ret
and
and
scas
pushf
pop
push
fsubrs
scas
mulb
mov
stos
shr
fmull
jp
call
jmp
xchg
jmp
scas
jb
dec
mov
xchg
lods
fwait
sti
test
mov
push
mov
jmp
and
adc
xchg
push
fs
fwait
pop
adc
loop
jbe
pop
jg
jle
jmp
imul
jno
dec
jne
cmpsl
sbbl
out
xchg
stos
mov
stos
lods
imul
int
incl
aad
mov
jbe
call
icebp
loop
ja
addr16
adc
inc
ror
jmp
jns
and
sbb
push
mov
negb
and
push
rorl
inc
add
fidivs
cld
shrl
mov
push
pop
std
mov
clc
mulb
sti
pop
mov
add
xor
arpl
jo
pop
out
jge
push
subl
movsl
xchg
in
call
insb
add
adcl
inc
xor
sbb
adc
xor
xchg
loope
or
push
aam
jno
pushl
pop
scas
or
add
jp
dec
jle
imul
iret
cltd
lock
incl
jp
dec
sub
add
shlb
and
mov
out
xor
fildll
mov
out
mov
iret
jne
lret
scas
gs
loop
or
cmp
inc
push
sahf
pop
pushf
cmp
lret
roll
adc
fcomi
pop
inc
lret
cmp
mov
pusha
adc
cmp
sub
pusha
push
jmp
shlb
decb
in
mov
loop
stos
iret
lcall
mov
and
mov
mov
or
aaa
sar
add
push
pop
xchg
sub
bound
jne
incl
mov
loopne
in
je
rcll
rclb
xlat
mov
push
les
or
call
add
ss
inc
mov
sbb
jp
jno
js
and
xabort
decl
fwait
gs
xchg
mov
in
adc
fsubrs
sti
push
lcall
pop
mov
fcmovnu
or
and
fs
test
rcrb
jnp
cmp
pop
sbb
test
insl
lret
mov
jmp
jnp
pop
fdivrl
in
leavew
je
lock
movsl
loope
sbb
lret
leave
and
call
sbb
push
imul
lock
incb
dec
xchg
mov
fisttpll
mov
ljmp
and
testl
dec
or
sub
mov
xlat
jbe
mov
mov
mov
lcall
cmpsb
lret
out
inc
icebp
dec
pop
testl
dec
mov
fstpl
call
inc
sub
inc
lock
jmp
jg
mov
add
jo
lahf
push
leave
add
dec
leave
cmpsl
xchg
lock
addr16
or
mov
add
dec
mov
push
jmp
out
insb
icebp
fidivs
outsl
or
in
subb
mov
mov
call
lcall
mov
out
adc
or
push
leave
mov
sbb
inc
fildll
xor
rclb
jmp
inc
xlat
mov
dec
xchg
in
ds
jo
adc
push
sub
xor
pop
nop
mov
jmp
in
shlb
xchg
mov
or
cmp
out
push
dec
jno
xlat
pop
cmpl
push
pop
jns
cmp
pushl
test
in
out
xchg
adc
cmp
jge
into
mov
add
clc
subb
cmp
loop
jle
inc
lea
jns
mov
push
mov
dec
ja
dec
add
pushl
inc
lcall
out
lcall
aam
cmp
stc
out
add
dec
loope
sub
test
dec
fwait
test
mov
jmp
add
sahf
mov
jecxz
pop
cld
or
leave
xchg
pushf
xor
jecxz
sub
and
incl
loop
push
sub
or
xchg
lahf
dec
in
bnd
dec
jno
pushf
or
inc
mov
call
mov
pop
pop
mov
mov
mov
xor
jnp
fmul
int3
mov
dec
in
or
lret
fidivl
or
pop
dec
cmp
sub
int3
das
imul
pop
or
repz
sub
pop
push
jb
mov
xchg
sub
mov
ljmp
sbb
cltd
lret
adc
movl
fldt
sbb
popf
jmp
iret
test
mov
add
jo
sub
lds
cmp
std
orl
js
sub
pushl
sarl
sub
push
mov
push
sbb
bt
test
decl
aam
mov
nop
pop
call
loopne
repnz
or
sub
decl
ret
or
mov
popf
adc
movsb
inc
outsb
mov
mov
jmp
js
pop
pusha
stos
pop
leave
insl
fsubrl
jg
ss
mov
pop
sti
ret
les
es
mov
pop
cli
push
adc
sbb
clc
popf
xor
ljmp
dec
mov
pushl
stc
inc
adc
mov
mov
adc
add
xchg
cmp
push
nop
cs
incl
jmp
fimull
rorb
test
test
faddl
decl
mov
mov
mov
jp
out
push
pop
fwait
push
aad
jp
gs
inc
cmp
sbb
lods
stos
test
dec
or
xchg
mov
sub
xchg
push
rdmsr
mov
lcall
outsl
out
addb
cmp
aas
add
enter
cmp
pop
loop
dec
jge
call
cmp
shl
ret
loope
jnp
xor
movsl
xchg
xchg
mov
jne
call
in
inc
dec
outsl
mov
push
ss
orl
pusha
xor
xor
lcall
inc
sbb
daa
and
xchg
jmp
sub
push
mov
in
jns
int
daa
xchg
cwtl
ljmp
and
fwait
xor
mov
xchg
aad
xlat
data16
test
jns
cld
lods
popa
sbb
negb
je
lret
inc
and
iret
nop
icebp
sub
add
push
das
mov
ds
jle
jmp
sub
pop
mov
stos
or
or
add
mov
xchg
sub
mov
jmp
fldcw
or
and
fucom
loope
inc
xchg
mov
arpl
lock
pushl
inc
pop
enter
aaa
add
and
std
xor
outsl
out
rorl
cli
addb
inc
lret
or
mov
aad
pop
es
push
inc
ja
pop
in
mov
adc
push
mov
call
cmc
dec
cli
add
jge
jae
ljmp
stc
aaa
inc
or
push
lcall
push
lods
arpl
out
mov
push
mov
and
lds
pop
aam
jg
xor
cltd
lret
incl
roll
and
lds
and
pop
mov
fwait
cwtl
shl
outsb
xor
mov
or
jmp
add
in
push
lods
sub
jge
dec
unpcklps
sti
push
incl
cmp
bound
jns
pop
call
mov
int3
mov
repnz
call
push
shr
add
icebp
lret
mov
pop
out
mov
xchg
shll
sub
in
scas
lcall
or
mov
aaa
adc
inc
lea
jbe
outsb
add
add
or
mov
lcall
adc
movsb
push
add
cmc
loop
dec
xchg
add
dec
scas
pop
or
lcall
xchg
xor
jge
cmpsb
leave
jle
cmc
inc
sbb
test
pop
cmc
andl
mov
mov
mov
ret
enter
jns
test
sub
mov
jns
adc
ret
push
gs
inc
fisubs
cmpsl
pop
push
sub
test
inc
negl
lcall
or
test
dec
push
xorl
sbb
lods
pop
pop
or
xchg
lret
jb
mov
sub
orl
sti
mull
cmp
enter
push
leave
or
decl
xchg
das
cmp
call
stos
push
sub
sub
cs
push
imul
call
call
push
repz
mov
sbb
mov
imul
mov
ud0
lcall
pusha
mov
or
pop
call
pop
pop
jo
ds
decl
dec
sub
test
pop
cld
clc
pop
call
mov
lods
xchg
xchg
adc
fstps
push
push
iret
inc
in
in
cmp
es
pushf
cli
cmpsb
scas
in
xor
je
sub
jmp
add
dec
rol
sub
and
fxtract
ret
pop
push
pop
and
icebp
ljmp
mov
inc
inc
cmp
push
cld
in
scas
repz
arpl
out
push
lea
loopne
mov
jp
sar
dec
push
mov
inc
jns
cltd
xchg
lret
mov
insl
stc
dec
jl
inc
mov
jl
loope
movsl
gs
jmp
ja
daa
xchg
clc
fwait
dec
loope
iret
cmp
decl
cmp
inc
out
push
data16
leave
cwtl
push
cmp
test
jae
sar
push
and
sbb
xor
mov
and
mov
inc
and
sti
pop
outsb
jge
call
inc
ret
out
fisttpll
mov
push
or
lods
sbb
add
sbb
call
mov
jno
dec
jne
imul
enter
mov
jnp
cmp
je
inc
fdivrp
mov
mov
adc
jb
mov
cmp
orb
cs
add
insl
roll
gs
cmc
arpl
lahf
gs
mov
fsubrl
push
dec
sbb
pop
jp
ds
incl
prefetchw
or
imul
push
into
push
and
imul
incl
call
pop
in
fimull
daa
out
mov
ficoms
mov
or
lcall
sub
fldl
pop
sarl
ljmp
test
pop
adc
rcrl
lcall
divb
or
cmp
pop
xor
lods
or
push
subb
int3
iret
decl
les
or
or
sahf
xor
pop
dec
xor
je
push
fdivrp
out
and
jp
lea
and
aam
leave
hlt
pop
pop
mov
push
aaa
sahf
mov
das
add
incl
lahf
mov
push
push
fnstenv
flds
cltd
dec
sbb
xor
incl
dec
cmp
loopne
out
push
jl
rclb
xchg
ja
xchg
pushl
lcall
adc
imul
mov
scas
scas
rcr
pop
pop
sub
call
ret
ljmp
jno
call
int3
enter
xchg
mov
mov
gs
sar
call
sub
jl
ficoms
das
mov
int
cmc
xchg
xor
inc
adc
inc
rclb
sbb
dec
xor
push
xor
xchg
das
inc
or
call
fcomip
pushl
dec
inc
xor
mov
sarb
mov
aam
mov
test
call
stc
sbb
xchg
push
lock
and
in
sbb
mov
jb
imul
in
cs
call
xchg
xchg
jp
std
and
xlat
and
daa
leave
in
or
push
xchg
mov
decl
mov
inc
addr16
in
xchg
push
test
adc
add
fsubrs
sub
call
add
fnstcw
push
sub
ja
movsl
mov
jo
sar
in
xor
repnz
and
stos
loopne
bound
dec
mov
dec
adc
xchg
pushl
scas
into
mov
pushf
inc
ljmp
xlat
and
push
dec
cmc
lods
popf
mov
adc
add
and
out
and
fstl
inc
nop
dec
aaa
test
push
fcoml
call
cmp
mov
pushl
jo
sbb
out
scas
shlb
cld
notl
xchg
fildll
pop
xor
lods
push
inc
push
add
jb
sahf
sbb
inc
mov
shlb
cmp
loope
jmp
fisttpl
sub
in
iret
fisttpll
push
shlb
aaa
xchg
insl
scas
sbb
push
lods
dec
mov
dec
adc
fildl
sbb
fs
mov
mov
push
aam
jmp
jl
mov
and
decl
pop
and
repz
and
add
pop
mov
push
fdivr
dec
ret
mov
xlat
cld
les
test
add
adc
ja
data16
cmp
stos
addr16
scas
lods
pop
cld
fnstenv
fcmove
out
cmp
xchg
rclb
mov
ljmp
sub
fwait
or
sbb
cmp
inc
daa
adc
or
cmpsl
and
sarb
jle
in
das
cmp
mov
push
mov
push
fidivrl
jb
and
fadd
cld
sbb
dec
cmp
jp
xor
shl
push
pop
bound
pop
nop
dec
ljmp
jbe
lcall
pop
scas
mov
push
icebp
sbb
scas
xchg
mov
adc
sbb
loop
jge
or
lcall
push
sub
fsts
into
push
and
push
mov
leave
or
incl
jno
cwtl
mov
test
lods
mov
decb
pop
loop
loop
je
clc
call
dec
push
jg
popa
scas
sub
mov
aad
aad
cmc
sbb
cmpsb
pop
adc
ficoml
jmp
aas
lcall
fwait
dec
out
loope
mov
push
jl
pop
int3
les
xlat
pop
dec
xorl
add
pop
insb
movsb
dec
xchg
ret
and
loop
pusha
dec
lcall
fwait
out
xchg
sbb
mov
in
or
movsl
mov
xchg
pop
sbb
adc
sub
daa
into
pushl
outsl
popa
dec
dec
out
mov
mov
in
shll
clc
xchg
fs
popa
iret
cmp
dec
call
mov
jge
and
mov
test
mov
inc
jmp
aaa
pop
jg
adc
aas
in
out
cmpsl
pusha
inc
xor
daa
jno
rolb
and
dec
dec
xchg
ret
push
jp
mov
jb
icebp
scas
stos
pop
outsb
out
mov
sub
sub
decl
mov
sahf
pop
lcall
mov
test
nop
jle
cltd
inc
jl
sub
adc
popf
out
iret
aad
fiaddl
cmp
push
dec
mov
mov
icebp
mov
mov
mov
icebp
inc
dec
leave
sahf
icebp
call
fistl
and
jg
xchg
test
std
xchg
xor
or
sar
xchg
sarb
clc
adc
fs
dec
stos
cld
xor
jge
cmp
and
mov
jmp
mov
and
fwait
icebp
xor
sbb
jae
call
xchg
mov
fadds
cs
lcall
and
cmp
shlb
mov
sbb
inc
jmp
pushl
xor
push
add
icebp
loop
fs
cmc
jbe
das
test
xchg
mov
mov
or
ret
xlat
test
sub
movsl
stos
pusha
mov
mov
jmp
int
imul
lods
mov
mov
fs
outsl
test
out
xor
mov
data16
or
cmp
mov
adc
sbb
cld
pop
out
inc
call
test
jno
dec
dec
cmpsl
sub
test
and
int
insl
mov
and
mov
leave
inc
sti
lods
mov
ja
fldcw
movsl
jmp
cmc
push
das
lahf
pop
int3
pop
in
xor
decl
test
jle
and
dec
jns
cli
mov
add
lods
pop
and
lcall
ds
clc
xchg
dec
imul
jbe
int
adc
mov
push
push
push
lcall
shrb
ss
push
shll
lds
push
mov
push
xchg
cwtl
movsl
adc
add
aas
aad
dec
xor
jb
faddl
jmp
fstpl
movsl
cmp
lds
movsl
push
repnz
adc
ss
jge
jae
jmp
sbb
faddl
cmpsb
daa
es
cmp
inc
jae
test
lret
mov
jg
stos
push
pushl
loope
loope
scas
leave
pop
pop
lods
shlb
lock
gs
mov
push
aas
cmp
pushl
incl
btc
bnd
nop
dec
loop
stc
or
jnp
and
fst
call
ljmp
gs
cmp
fdivs
sub
inc
fistpl
mov
cmp
rorl
stc
xchg
mov
sbb
xchg
mov
pop
ret
mov
cmpsb
push
andb
jmp
pop
adc
mov
pushl
repnz
or
and
push
fisttps
incb
loopne
push
jmp
scas
hlt
ja
das
decl
fcom
cmp
fwait
loop
adc
add
insb
pushf
in
sbb
rcrl
pushl
sub
iret
fwait
xchg
insl
aam
mov
loop
sahf
out
add
jmp
lret
xor
hlt
jae
cmp
inc
xchg
or
push
or
rolb
jnp
sub
adc
mov
imull
outsb
jnp
inc
leave
inc
addr16
jne
xchg
outsl
push
sbb
out
mov
loopne
sbb
lret
adc
xchg
les
repnz
mov
test
fdivrs
arpl
sub
movntps
xorb
fstps
sub
test
sbb
lcall
push
enter
test
out
mov
xchg
adc
sub
xor
mov
push
fwait
cld
decl
in
sbb
pop
xor
out
jmp
jo
ds
lret
jno
sbb
fadds
jb
adc
cmp
lahf
lods
cmp
ss
sbb
stos
push
stos
stos
or
call
test
or
xchg
aaa
add
aam
xchg
adc
and
out
stos
gs
dec
jmp
mov
mov
mov
lahf
fsts
inc
repnz
sub
dec
call
mov
stos
cwtl
arpl
sub
inc
jnp
sbb
mov
lahf
call
hlt
enter
imul
mov
add
pushf
jl
adc
xor
call
cltd
icebp
jg
pop
mov
add
addr16
mov
or
dec
cmp
decl
or
cmpsl
push
push
scas
fiaddl
sbb
mov
inc
scas
punpcklwd
mov
mov
iret
mov
hlt
cmp
les
push
sahf
filds
and
call
popa
fadds
push
adc
mov
fsubrl
dec
inc
movsb
lahf
pop
or
cmp
idivb
cmp
cli
loop
fwait
xor
add
out
out
ljmp
sbb
dec
jnp
mov
xchg
xchg
cltd
cltd
and
push
cmpsb
imul
cltd
stc
cmpsb
faddl
and
call
add
mov
decl
cwtl
add
das
stos
sub
loop
push
add
dec
outsl
frstor
repnz
mov
mov
dec
ficompl
mov
decl
jb
xchg
push
adc
shll
or
jne
jmp
jae
cmp
mov
es
push
lahf
ficompl
lcall
mov
mov
or
mov
rcr
pop
jnp
xor
lcall
lret
sbb
or
dec
xchg
inc
ja
push
add
cs
popf
call
decl
inc
std
out
vpmaddwd
inc
ja
cltd
lds
mov
mov
add
popa
dec
dec
ja
push
xchg
xor
sub
jb
ja
je
and
xchg
push
push
call
jo
cltd
sub
ja
xchg
mov
loopne
push
or
rolb
movl
loope
inc
fld
pop
pop
jp
mov
enter
or
fdivp
add
movsl
xor
lcall
sbb
rclb
jbe
pop
lret
aad
enter
insl
mov
cmpl
call
movsl
lds
jb
in
inc
bound
and
inc
xor
shll
xchg
shlb
decl
mov
pop
pop
pop
shlb
inc
dec
inc
inc
jnp
sbb
aam
sbb
ret
pushl
xchg
inc
fistps
jmp
sbb
dec
mov
xor
dec
stos
lock
and
jmp
mov
pop
cld
mov
das
rorb
jno
popf
sbb
out
cmp
test
hlt
hlt
mov
sahf
lcall
daa
mov
jnp
mov
ret
push
jb
sti
and
int
sbb
pop
mov
fistpll
negb
out
adc
repz
xchg
popa
mov
rorb
sahf
sbb
jmp
push
jmp
or
pop
pop
cmc
in
xchg
popf
lods
out
cld
xorb
aaa
lea
mov
decl
inc
sub
pushf
out
fbstp
mov
xchg
test
lods
ljmp
push
mov
pushf
pop
aad
adc
cs
or
push
das
pop
mov
and
das
mov
decl
sbb
sarb
mov
xor
inc
dec
fidivrl
jecxz
push
adc
frstor
push
mov
insb
inc
pop
insb
imul
pop
insb
addr16
cmpsl
ss
sti
mov
aam
push
enter
push
enter
jns
ja
push
mov
loop
pop
das
lods
pusha
fsts
inc
call
mov
data16
jmp
push
icebp
jae
adc
and
hlt
mov
pop
and
push
inc
test
in
lcall
inc
pop
shrl
pop
les
dec
inc
xchg
roll
or
les
xchg
inc
mov
fldcw
in
xor
mov
push
jge
fcmovne
fdivp
jp
or
push
or
cmp
pushl
xchg
jne
insb
pop
aam
sub
pop
pop
push
adc
andb
andb
jg
cmp
cmp
insl
jmp
push
fists
js
aam
xchg
arpl
insl
lret
std
xchg
testb
cs
inc
call
cmp
inc
cmp
call
mov
and
push
pop
pop
popa
aas
pushl
cmc
jmp
bound
leave
jmp
pop
divl
adc
hlt
stc
leave
dec
rorl
popa
mov
aam
push
cmp
jns
jns
popf
jnp
fs
pop
nop
aad
cltd
mov
sub
imul
cmpsl
psrad
jecxz
rclb
out
mov
or
xor
push
fnstsw
xor
push
test
xchg
mov
jmp
pop
ss
nopl
pop
dec
xorl
dec
fwait
test
xchg
mov
lcall
movsl
xchg
daa
adcb
nop
sub
lea
jb
sub
inc
imull
cmp
lcall
jae
add
js
add
xor
mov
lods
fs
xchg
mov
jmp
and
lods
dec
xor
neg
shr
inc
dec
jl
dec
out
pop
jnp
mov
mov
scas
out
add
out
push
cmp
dec
and
lcall
jle
sbb
adc
sub
call
mov
addb
xor
sub
adc
mov
call
ljmp
hlt
faddl
mov
adc
sub
mov
mov
int3
leave
add
call
pop
jecxz
mov
jmp
sbb
in
adc
leave
scas
mov
dec
call
mov
mov
push
mov
jle
mov
cli
push
cmp
fidivl
mov
jmp
andl
test
cmp
faddl
aam
movsb
test
aam
dec
cltd
and
sarl
dec
in
and
xchg
je
cmp
push
add
sub
lret
std
jae
clc
incl
or
or
in
inc
and
in
vsqrtss
cmp
ljmp
out
int3
adc
ja
addr16
xor
inc
push
pop
nop
dec
lcall
jmp
loopne
into
sti
cmp
pushf
pop
popf
push
outsb
mov
lods
dec
sub
cwtl
notl
jb
pop
in
pushl
push
out
data16
push
fsubl
ret
cmpsl
inc
xchg
scas
push
pop
xchg
or
adc
incl
xchg
xor
jno
pushf
fsubs
xchg
mov
lds
fs
cltd
incl
popf
xchg
pusha
lock
pop
nop
pop
push
lds
outsb
or
xchg
xchg
push
pop
fimull
inc
incl
dec
inc
mov
and
xor
loop
jne
dec
mov
cs
out
nop
cld
jmp
imul
pusha
subb
test
or
mov
mov
call
mov
lods
repnz
pop
jnp
imul
and
push
lcall
rclb
lahf
pop
hlt
sub
hlt
lods
xlat
test
test
xchg
leave
pop
dec
imull
popa
cltd
lods
lahf
xchg
xchg
popl
bswap
mov
pop
fs
pop
mov
sti
cltd
fidivrl
fistl
adc
inc
mov
jnp
pop
incb
add
aad
call
jp
mov
mov
dec
iret
mov
sub
outsb
push
dec
pop
push
call
jae
mov
xor
out
cld
jmp
je
push
adc
incl
cmp
xchg
jbe
in
mov
stos
les
aam
nop
mov
test
pop
incl
hlt
ret
jnp
inc
lcall
lods
jl
pop
sub
cmpsl
repnz
push
pushl
js
push
nop
mov
js
mov
into
sbb
add
mov
iret
arpl
enter
dec
xor
aad
retw
mov
add
dec
mov
push
push
or
xor
call
daa
xchg
cmp
insl
xchg
or
into
adc
pop
or
mov
incl
fistps
fldt
fs
ficompl
out
mov
aaa
adc
or
push
dec
pop
dec
inc
in
imul
sbb
lcall
out
cltd
dec
jle
or
decl
bound
jae
pusha
jnp
jmp
hlt
scas
stos
and
mov
jae
xor
jmp
jmp
sub
cld
and
xor
xchg
cmc
sbb
push
shll
sbb
dec
jmp
adc
and
stos
js
mov
or
cmpsb
mov
fldt
repnz
les
std
addr16
in
lret
mov
pop
cmp
or
scas
sub
aam
mov
inc
out
push
lret
jne
inc
push
mov
mov
loop
push
and
adc
dec
jmp
xchg
mov
or
insl
adc
push
movsl
pop
out
gs
xor
clc
or
pushl
cs
push
inc
std
dec
out
inc
gs
subb
or
push
mov
mov
ljmp
adc
aaa
lea
push
mov
je
xlat
shrb
ljmp
jmp
fwait
cmp
in
ret
adc
mov
pop
sti
mov
lods
into
push
jl
add
popl
pushf
or
adc
decl
sbb
inc
aad
sbb
mov
add
jl
jmp
call
roll
jne
outsb
mov
xor
xor
inc
inc
cmp
sub
loop
rcrb
jae
in
nop
addr16
fs
cmc
dec
pop
adc
add
sbb
into
inc
push
ret
and
sbb
dec
andl
test
loopne
dec
daa
sub
es
scas
jns
scas
xchg
repnz
inc
jecxz
jge
pop
sbb
dec
pop
fs
sbb
ss
cmpb
cmp
scas
and
sti
xchg
mov
or
int
test
faddl
jo
pop
cmpsl
cmc
or
sub
lcall
xchg
out
inc
or
imul
adc
mov
dec
test
pop
movsl
and
mov
movsb
push
dec
push
adc
fildl
push
xor
adc
mov
add
outsb
sbb
xchg
repnz
sbb
lret
mov
mov
fmuls
outsb
loop
jno
imul
mov
inc
and
decl
push
lret
jne
clc
or
inc
push
jle
dec
push
pop
push
mov
push
mov
pop
or
test
incl
mov
lahf
xchg
shll
mov
lcall
decl
jbe
jnp
mov
das
xlat
bound
repz
push
stos
inc
clc
lret
and
call
sbb
ljmp
loop
add
out
jle
pop
loop
xor
call
aad
js
mov
gs
push
mov
pop
sti
nop
xor
movl
aad
mov
pushl
push
adc
add
sbb
insb
push
or
fcoml
mov
xchg
sub
mov
pusha
fsubrp
push
ljmp
fs
jnp
cmpsl
or
add
incl
push
xchg
test
inc
push
or
lcall
out
testl
xor
add
xchg
in
mov
and
xor
int3
pushl
mov
inc
inc
aam
mov
dec
shlb
mov
xor
push
insb
fimuls
and
mov
jae
les
or
cmpsb
xchg
addr16
mov
out
push
add
ljmp
pop
dec
nop
std
mov
les
fsubs
mov
imul
and
mov
ljmp
jle
mov
dec
lods
push
ja
std
addr16
sub
into
shr
sub
mov
adc
call
pop
pop
xchg
jo
out
scas
jle
mov
js
dec
xchg
dec
iret
jle
ss
and
pushl
aas
ficoms
sbb
mov
and
fdivrs
cmpsb
cmpsb
leave
sub
dec
decl
xlat
ficoms
popf
mov
sbbl
bound
push
fists
sbb
aas
jl
adc
jb
lcall
cs
enter
push
int3
pop
and
in
rcrb
stos
xchg
push
jmp
sbb
out
xor
es
decl
mov
cwtl
addb
lahf
lds
mov
inc
xor
pushf
mov
mov
clc
call
pop
loope
fdivrl
pop
adc
enter
js
adc
adc
incl
hlt
push
jb
jmp
and
sub
or
push
jnp
jp
dec
adc
rcrb
mov
test
mov
push
pusha
adc
inc
scas
dec
pop
iret
mov
test
testb
incl
fistpll
xchg
clc
cmp
mov
and
stos
cwtl
dec
cli
cmc
not
xlat
ljmp
xchg
jnp
bound
add
jg
out
xor
imul
jmp
jmp
push
rolb
ficomps
call
dec
pusha
or
inc
int
or
call
xchg
test
and
jno
inc
fs
cs
jb
mov
dec
mov
xchg
insl
popa
lcall
icebp
xor
popa
inc
or
adc
sbb
xor
xor
dec
mov
repz
lcall
cmp
shlb
rcrb
push
mov
pushf
push
ja
mov
sbb
leave
jmp
cmp
and
pop
movsl
jecxz
outsb
xor
mov
push
mov
in
lcall
mov
ret
cltd
lock
loope
or
decb
ljmp
push
pop
movsl
and
mov
xchg
incb
int3
insb
and
xchg
loop
or
pop
mov
ljmp
dec
add
cmpsb
mov
xor
mov
stos
mov
orl
pushf
mov
pushl
lahf
xor
rol
and
sub
bound
jnp
push
and
lcall
mov
enter
in
sbb
inc
icebp
push
loopne
andl
lea
xchg
pushl
mov
jp
dec
stos
mov
fwait
adc
sub
movsb
cmp
push
nop
adc
out
xchg
mov
jbe
aam
inc
pushf
mov
les
mov
outsb
jle
repnz
rcrb
decl
sub
mov
stos
sub
mov
mov
pop
push
out
or
das
jmp
mov
not
mov
jecxz
push
lock
push
lock
repnz
or
jb
jg
icebp
inc
and
xchg
jle
push
xchg
loope
add
ss
inc
stc
pop
stos
mov
scas
out
inc
or
lcall
scas
mov
mov
daa
clc
dec
xchg
sbb
cmp
lret
lcall
xchg
rcll
test
inc
fs
inc
jp
pop
insb
mov
andb
decl
rol
clc
adc
je
or
add
jle
xchg
and
dec
cmp
call
and
adc
mov
adc
push
mov
ja
aas
in
push
and
call
mov
clc
insl
inc
into
pop
cmp
out
enter
daa
es
cmp
pop
xchg
xchg
mov
mov
push
movsl
and
test
xorl
aaa
in
scas
jg
jl
sarb
les
ret
fnstcw
repz
inc
outsl
sub
and
and
int
mov
sahf
inc
push
pushl
pop
mov
leave
mov
adc
subb
mov
inc
fs
je
call
lret
or
cmpsb
insl
enter
js
cmovns
jb
inc
mov
pop
and
pushl
mov
imul
jecxz
fwait
inc
roll
mov
notl
jmp
cld
cmp
ljmp
dec
mov
aad
lock
fucomip
scas
scas
jl
aaa
sbb
mov
push
and
ljmp
fsubl
push
out
jne
xchg
stc
pop
sbb
bnd
test
loope
fs
adc
add
aas
push
or
xlat
out
mov
xchg
nop
mov
stos
clc
loope
pop
jmp
out
decl
mov
add
int3
jnp
repnz
es
xchg
scas
enter
dec
xchg
inc
adc
lock
jmp
mov
test
or
int3
jle
mov
add
pop
jbe
jmp
inc
mov
imul
sarl
pop
sbb
loop
pushf
in
loopne
jg
stc
mul
mov
decl
and
adc
and
in
sub
js
daa
xchg
cmp
inc
call
imul
sti
cltd
adc
pop
orb
mov
xor
out
inc
sub
call
insb
add
xlat
das
daa
add
adc
das
sub
sub
lcall
jnp
fiadds
xor
movsb
outsl
mov
repz
insl
push
int
fildl
mov
out
ret
fiaddl
enter
pushl
hlt
and
push
xchg
je
lods
aas
pop
rorl
test
cmc
test
pop
push
mov
mov
push
mov
fcoml
push
jno
mov
sbb
mov
pusha
addr16
push
jb
call
insb
fdivr
mov
hlt
inc
push
sarl
popf
daa
adc
adc
dec
shrl
jmp
pusha
mov
dec
outsb
out
xchg
lcall
cmp
push
sahf
rol
sub
mov
jmp
adc
dec
arpl
jne
mov
pop
rol
movb
mov
insb
ja
ret
push
adc
mov
add
sbb
loopne
push
cmp
test
in
inc
jle
pop
adc
mov
lcall
in
push
inc
cmp
pop
mov
and
insl
fnstenv
cmp
pop
add
jmp
rorl
add
xchg
movsb
mov
pop
cltd
inc
pop
test
cmpsl
cmp
mov
ljmp
xchg
and
jg
mov
test
mov
jp
cmp
decl
imul
addl
lret
cli
xor
test
clc
imul
outsb
add
shl
decl
mov
je
cltd
icebp
rcr
test
in
xchg
dec
pop
fcoms
cli
inc
lahf
out
repz
lcall
cmp
imul
xchg
test
mov
fwait
bound
push
mov
mov
lock
mov
dec
cmp
adc
sub
in
push
push
xlat
sub
dec
sbb
push
popf
adc
cwtl
mov
xor
aam
in
adc
cli
fs
or
cmp
mov
ret
and
pop
dec
dec
jp,pt
rolb
data16
cmp
repz
mov
jp
cmp
or
jb
test
js
cmpl
out
loope
cmp
sar
inc
mov
dec
push
and
mov
mov
lea
aaa
scas
xchg
nop
inc
dec
aam
ret
pushl
dec
push
pop
mov
test
sub
or
pop
and
inc
dec
jmp
push
cmp
adc
divb
test
push
or
sbb
out
out
pop
mov
stos
sahf
and
jmp
xor
push
jle
movsb
push
add
repz
push
mov
sub
shrb
jg
ljmp
add
in
push
frstor
adc
mov
incl
push
out
fildll
lods
mov
shll
lret
mov
jmp
jl
mov
jo
inc
add
fbstp
xorl
lods
lea
xchg
mov
push
and
incl
xchg
or
jns
dec
mov
outsb
ds
mov
jge
test
call
inc
andl
addr16
lods
or
pop
mov
pop
dec
mov
xor
lcall
cmp
out
xchg
add
loopne
mov
rclb
adc
lcall
pop
adc
push
cmpsb
push
shrl
pop
xchg
js
add
pop
pop
fimuls
jmp
xor
jg
insl
in
shll
je
xor
mov
jae
push
push
pop
push
mov
add
insb
mov
leave
movsb
popf
loope
jmp
inc
sbb
mov
lcall
mov
repz
adc
orl
iret
int
ret
sub
call
push
mov
ret
push
subl
adc
dec
insb
sub
mov
mov
cmp
push
inc
leave
or
and
xor
incb
adc
loope
cmp
daa
out
mov
push
fwait
mov
inc
rclb
test
push
adc
mov
dec
xor
jmp
sub
imul
pop
repz
mov
jmp
mov
ret
inc
or
xchg
sub
sbb
add
jmp
xchg
pop
pop
mov
ljmp
imulb
sbb
push
inc
aas
ja
cmpsb
data16
iret
lea
mov
and
lods
movsl
adc
notl
or
dec
xor
fistps
test
ret
ljmp
pop
fstpl
sbb
ds
fldt
daa
incb
mov
decl
mov
add
add
mov
test
sbb
mov
aam
ss
fucomip
iret
addr16
call
test
insl
sbbl
add
sub
cld
loopne
les
inc
adcl
push
fwait
lcall
push
jnp
lcall
into
out
dec
pop
jbe
js
in
pop
mov
ljmp
pop
xor
adc
in
add
or
jmp
jb
mov
lcall
jmp
shlb
cld
push
shll
daa
test
pop
movsl
sub
in
jo
and
pop
shr
sar
jns
mov
out
cmp
in
out
shlb
lret
pop
xlat
xchg
dec
rorl
lret
cli
xchg
xchg
pop
mov
dec
or
in
roll
cmp
imul
decl
dec
lods
insb
xor
das
mov
icebp
movsl
icebp
jmp
pop
mov
xchg
dec
iret
dec
inc
movsl
xlat
repz
mov
sarb
icebp
sub
ds
sbb
pop
leave
addl
mov
push
ljmp
mov
aaa
adcl
ds
aaa
or
sahf
sub
fwait
inc
inc
cltd
pop
incl
lcall
xor
cvtps2pi
add
mov
cmp
lds
mov
pop
iret
daa
and
xchg
inc
and
push
jae
sbb
inc
mov
jmp
add
lahf
adc
fsubrl
mov
cmp
test
sarl
jmp
sbb
xor
mov
push
out
adc
mov
xchg
nop
shr
test
aas
ljmp
add
pop
jge
enter
faddl
cltd
into
jne
mov
xchg
adc
andl
pop
shlb
rol
sti
inc
nop
sbb
test
into
repz
incl
push
and
push
jne
push
scas
mov
movsb
mov
insl
mov
sub
adc
jecxz
add
jmp
pop
jle
jle
aas
hlt
fisubl
cmpl
mov
cmp
test
daa
mov
fidivrl
add
lcall
and
mov
push
xchg
and
add
mov
ja,pt
xchg
or
mov
xor
mov
mov
pop
xchg
cmp
pop
aaa
cmc
add
je
stos
lcall
aad
cltd
fnsave
ja
adc
notl
call
push
xor
cmpsl
cmpsb
lea
sub
adc
fs
mov
fimull
mov
inc
imul
neg
jl
mov
in
loopne
test
jl
dec
jmp
push
push
inc
addr16
fwait
arpl
sub
mov
imul
push
dec
xchg
nop
inc
in
adc
decl
test
test
mov
ficoms
mov
sub
ds
cmp
ror
lock
sub
add
or
jle
mov
adc
decl
sub
int
repnz
pop
mov
xor
xor
pop
adc
test
pop
sarl
lcall
rorl
rcr
mov
outsb
data16
sti
and
pop
ret
stos
decl
dec
pop
cld
repnz
jo
mov
pop
and
xorb
pop
popf
jge
jle
cmp
leave
rorl
fcomi
cmc
call
idivb
test
ror
xchg
out
mov
dec
xchg
mov
pop
push
dec
test
ds
sbb
xchg
inc
mov
mov
pop
cli
inc
ss
in
pop
test
decl
insb
daa
fmul
call
xor
mov
ja
xor
out
sub
hlt
jle
push
xor
ljmp
lds
push
test
js
xor
push
nop
push
pusha
setbe
pop
xchg
dec
jl
lahf
jmp
lea
sub
adc
out
xchg
dec
and
mov
sbb
into
testl
pop
adcb
jmp
andnps
dec
jne
xor
mov
shll
test
nop
ror
cs
decl
idivb
lods
cli
outsl
outsl
test
push
dec
push
sub
nop
and
jns
rclb
incl
mov
lea
push
inc
mov
jl
jns
push
jmp
and
xchg
dec
pop
lcall
icebp
xchg
andl
mov
add
push
pop
adc
fiaddl
mov
jecxz
cmp
dec
fdivp
loop
mov
or
dec
mov
pop
xchg
jmp
inc
mov
imul
dec
pop
dec
push
and
jb
dec
sbb
popa
leave
xchg
aad
fidivs
cmpsl
rorl
pop
xchg
stos
or
call
cltd
dec
ds
dec
clc
bound
cmp
sub
movsb
and
and
or
inc
xor
dec
out
pop
or
aaa
cmp
push
fwait
sub
mov
ret
outsb
in
subl
mov
fwait
pop
outsl
mov
mov
arpl
mov
mov
cmp
dec
adcb
loop
mov
cmp
or
movsl
hlt
fiadds
cmp
push
dec
jmp
test
push
cmp
ds
out
mov
dec
mov
test
dec
dec
jecxz
orb
call
gs
insl
fs
aaa
xchg
or
imul
sbb
lods
mov
sub
jns
cmp
xchg
lea
cld
sub
dec
int3
insb
ljmp
int
fdivrs
push
imul
mov
add
cld
mov
or
jmp
mov
sub
adc
xchg
or
mov
pop
xor
leave
mov
out
mov
in
outsl
dec
ss
jmp
push
insl
lds
pop
aas
into
xor
decl
ljmp
scas
cld
jns
add
sub
out
mov
andl
sub
stos
test
inc
jns
insl
loop
pop
minps
repz
test
pushl
fwait
lods
sbb
dec
xchg
das
jmp
scas
jle
mov
xchg
popf
imull
mov
outsb
arpl
and
push
xchg
pop
pop
daa
loope
imul
mov
dec
pop
cmpsb
sarb
dec
cmp
pushl
mov
lahf
loope
int
aaa
sbb
sub
cmp
call
scas
push
mov
mov
lret
imul
es
gs
push
add
jbe
rcl
cmpsl
jae
data16
insb
gs
sbb
stos
movsl
add
mov
call
daa
dec
xchg
faddl
fcmovbe
rclb
mov
jo
in
xor
push
dec
pop
mov
cli
clc
pop
mov
push
and
mov
sub
bound
subl
loopne
call
mov
push
int
and
daa
sub
jp
dec
fmulp
cmp
pop
mov
daa
and
inc
mov
and
decl
sbbb
lock
fidivs
movsb
mull
push
sahf
lcall
mov
into
inc
mov
sbb
mov
stos
sahf
pop
ss
jnp
es
mov
adc
ljmp
dec
xchg
dec
or
in
data16
lahf
mov
jecxz
cmpsb
icebp
lea
and
icebp
or
ljmp
lods
inc
popf
lcall
cmpsl
cwtl
mov
out
pop
js
mov
aam
fcompl
incl
out
inc
inc
adc
bound
dec
pop
pop
pop
rep
inc
xor
ret
out
aam
pop
push
mov
dec
fcmove
cmp
push
xchg
cwtl
pop
outsb
cmp
push
scas
add
and
mov
sbb
out
jle
aaa
adc
mov
inc
out
add
pusha
mov
cmpl
cmpsl
fisttps
decl
mov
add
lcall
jmp
sub
call
ja
mov
and
push
cmp
jns
gs
xchg
adc
push
ud0
ljmp
xor
es
xchg
push
cmp
stos
add
je
jle
cmpsb
repnz
jp
mov
cmp
pop
sbb
add
pop
fsubrs
jmp
addr16
sbb
jb
aaa
inc
decl
cltd
xchg
push
pushf
test
jnp
pop
push
ficoml
or
mov
pop
mov
decl
pop
in
lcall
insb
push
and
push
mov
in
push
sub
jb
data16
call
leave
daa
fmul
and
pusha
jne
test
arpl
sbb
jg
cmp
adc
jmp
repnz
add
shll
adc
movsl
outsb
loopne
stos
xor
dec
xor
das
pop
aas
sub
ljmp
fs
sbb
inc
xor
jb
push
xchg
cmp
fstp
ret
mov
jmp
clc
loope
daa
cmpsl
and
icebp
mov
icebp
cltd
loope
iret
sub
xlat
xchg
sti
jb
add
and
jmp
rcrb
dec
or
daa
mov
dec
xchg
pop
mov
and
inc
lret
mov
pop
stos
mov
loop
inc
subb
ret
lahf
insb
jb
call
push
xchg
dec
pop
pop
fstl
lcall
mov
popa
lea
repz
add
sahf
ret
pminsw
pop
adc
jle
pushf
rcr
lds
repnz
jo
repnz
jmp
call
mov
dec
insb
imul
mov
fldenv
xchg
pop
daa
and
decl
mov
movsb
inc
cmpsb
test
addr16
movsl
jmp
and
adc
or
fisttps
bound
push
mov
mov
sub
cmpsl
out
dec
rcrb
js
push
decl
dec
jge
movsb
in
xchg
fisubs
iret
jl
flds
fisubrl
test
loopne
cmp
mov
ljmp
sub
mov
adc
outsl
lahf
jl
movsl
jo
sub
popf
arpl
inc
call
push
dec
loope
cmc
pop
pop
cs
sub
test
sub
and
in
test
incl
stc
fwait
ljmp
push
cmp
daa
call
mov
jmp
or
mov
insl
dec
rcrb
call
pop
int
inc
shll
movsb
xchg
jbe
mov
ljmp
enter
adc
into
mov
fchs
int
jecxz
shlb
roll
ljmp
test
inc
ljmp
push
xlat
dec
imul
jns
mov
mov
out
loope
lcall
sbb
xlat
or
out
fistpl
xchg
in
cltd
dec
std
dec
int3
push
jecxz
jmp
push
pop
mov
insl
sub
xchg
push
popf
xor
push
lret
stos
sbb
xchg
stos
mov
lcall
mov
or
dec
jecxz
mov
dec
ret
enter
pusha
repz
dec
notl
and
jmp
leave
int3
or
xchg
scas
fidivl
fistpl
push
mov
jecxz
or
pop
mov
sar
mov
shl
bound
xchg
imul
mov
jmp
dec
lcall
aas
push
mov
arpl
add
roll
mov
cwtl
xchg
mov
call
cmpsb
lods
xlat
movsb
popf
and
dec
insl
test
icebp
mov
jnp
test
inc
dec
sub
or
and
decl
andb
mov
and
mov
pusha
lods
insb
out
scas
sbb
jmp
xchg
jp
pop
jb
call
lret
into
mov
fdivs
sub
mov
aam
les
popa
fs
pop
push
xchg
int
decl
add
xor
scas
imul
hlt
sbb
sub
push
and
push
pop
insb
pop
incl
jmp
xor
xlat
das
ret
lods
push
add
fisubs
pop
mov
push
inc
fs
xchg
adcb
jnp
push
andl
in
xchg
leave
mov
iret
xor
sbb
mov
ljmp
cmp
pop
xor
mov
out
pop
out
sub
shll
ljmp
xchg
sar
pushl
and
add
xchg
inc
dec
aam
pop
nop
je
shlb
rcrl
cmp
fsubs
leave
or
in
cmp
push
leave
jo
inc
test
fisttps
lcall
rolb
inc
scas
push
jbe
mov
cmp
fs
nop
scas
xchg
shll
cmp
jmp
cltd
mov
jnp
mov
mov
xchg
mov
jecxz
aad
add
jmp
mov
aad
movsl
push
jmp
xchg
jl
lods
dec
inc
cmp
aas
cmp
aas
movsl
push
je
ud0
lcall
je
addr16
mov
mov
jae
jns
mov
pop
sbb
xor
ljmp
testl
cmp
adc
add
popf
rorl
fwait
mov
sub
cmc
in
imul
pop
stc
ss
sbb
sbb
mov
jmp
sarb
dec
adc
push
test
mov
divb
pop
leave
and
jecxz
fwait
cmp
pop
push
out
adc
jnp
and
stos
push
or
mov
push
repz
and
jmp
testl
insl
and
sarl
fnstsw
clc
inc
adc
jmp
xchg
sbb
incb
add
repz
mov
and
sbb
jecxz
clc
gs
jmp
insl
mov
clc
aad
xchg
mov
test
jle
stos
or
add
ds
lcall
or
fiadds
or
repz
in
add
jp
xchg
scas
clc
cmp
and
adc
adc
add
cmpl
pop
jbe
shll
call
fimull
outsb
inc
ficoml
jnp
xchg
pushf
adc
mov
add
ljmp
fisttpll
mov
out
mov
inc
mov
es
inc
dec
pushf
icebp
call
xchg
jne
cmpsl
pop
mov
in
loop
decl
sbb
cmp
push
push
in
mov
mov
dec
add
cs
jmp
pusha
popa
popf
andl
and
mov
jmp
sub
cmp
or
jne
mov
inc
sti
and
scas
and
jl
pop
test
cmp
jp
bnd
push
sub
pop
and
mov
sahf
movsb
add
aas
rorb
js
adcb
jmp
fadds
sub
cmp
out
xchg
lods
cmp
movsb
jnp
fbstp
pop
sahf
out
je
loopne
decl
lock
iret
adc
out
cmp
cmp
mov
aam
je
stos
or
jmp
cmp
inc
adc
not
es
cli
cmp
pop
xor
loop
fstpl
pushl
xchg
sbb
or
daa
and
cmp
xor
es
pushf
mov
add
jmp
inc
sbb
mov
push
mov
loopne
sbb
ss
jle
push
popa
shrb
cmp
xlat
dec
lret
lret
cli
and
cmp
aaa
dec
cmc
cld
mov
cmp
mov
jp
mov
aam
or
ss
cwtl
and
xor
stos
xchg
arpl
ljmp
loop
jns
xor
adc
mov
xchg
ficoms
cwtl
and
mov
mov
call
addr16
cmp
pop
jmp
or
mov
mov
adc
les
in
test
call
inc
std
sbb
mov
cmp
rorb
pop
push
stos
aaa
dec
pushf
cmpsb
rcrb
cltd
or
ljmp
out
insl
gs
dec
insl
mov
mov
mov
add
es
xchg
xor
sbb
call
test
filds
mov
fyl2x
fstps
mov
es
in
pop
jae
test
insl
decl
ja
xchg
mov
in
add
inc
stc
pop
lahf
mov
dec
mov
xlat
pushl
jg
and
xor
jge
sbb
cmp
xchg
mov
inc
loop
je
push
mov
push
mov
je
jae
iret
dec
testl
xor
testb
ljmp
xor
pop
loopne
shrb
sbb
sub
decl
fimull
sbb
pushl
and
sahf
cmp
push
dec
sbb
es
mov
xchg
int
pop
pop
pop
mov
push
mov
incl
dec
add
arpl
push
fs
fwait
dec
shrb
out
in
cmpsb
stos
push
dec
loope
sbb
in
mov
jmp
imul
xchg
sahf
jmp
rcrl
aam
or
pop
arpl
loopne
repnz
call
cli
pop
lea
ret
int
mov
mov
into
sarb
jae
cmp
call
cmp
data16
sbbb
pop
aas
mov
fldenv
outsl
fisubs
shll
mov
test
int
repz
aaa
lret
and
adc
mov
push
mov
and
mov
jmp
loope
mov
outsl
sub
or
scas
add
mov
cs
xchg
cmp
scas
cmpsb
hlt
outsl
or
jp
out
jbe
sahf
out
add
sbb
push
addr16
pop
or
loope
ljmp
pop
pusha
inc
ljmp
pushw
popfw
in
pushl
and
jo
shrb
jmp
jp
notl
lcall
xor
daa
add
push
mov
pushl
sahf
dec
jp
xlat
test
jo
ffree
add
dec
xor
jg
adc
jne
shlb
jne
xchg
incl
dec
leave
adc
mov
inc
fsub
xchg
inc
std
loope
push
mov
dec
incl
mov
decl
or
cli
xchg
xchg
inc
sbb
push
or
sub
mov
mov
push
movsl
pushl
sti
mov
arpl
jne
ret
cmp
sbb
add
imul
nop
ss
sbb
push
sub
enter
cmpsl
or
jb
xchg
addb
mov
incl
sub
rorb
push
pop
inc
mov
int3
dec
or
cld
xor
jmp
cmp
mov
or
fisubs
dec
shl
in
mov
jmp
scas
mov
and
mov
in
inc
adc
fistl
pop
mov
ljmp
daa
inc
xor
xchg
jno
mov
dec
push
in
sub
call
pandn
xor
push
sti
jnp
dec
push
mov
mov
lods
ss
incl
mov
jl
cmp
pusha
ljmp
lret
enter
sarl
adc
dec
sub
mov
jp
mov
movsl
out
outsl
jnp
dec
pop
dec
sar
std
popf
push
mov
jmp
idiv
and
mov
clc
mov
adc
cltd
mov
add
ljmp
lret
cmpsb
dec
jle
sbb
and
cld
loopne
push
shr
jmp
outsl
add
notl
int
inc
sbb
jmp
cmp
adc
stos
sub
push
sub
loop
sbb
clc
imul
jmp
outsb
or
rcl
add
pop
mov
mov
mov
outsl
jmp
call
mov
in
fdivrs
js
inc
mov
jne
aam
stos
xlat
and
push
xchg
pushl
cmp
push
cmpsl
std
xor
loop
bound
jg
clc
dec
adc
sub
mov
cmp
lods
fistpl
insl
sbb
ret
divb
std
fs
pop
cltd
lahf
imul
push
fcompl
lock
in
gs
imul
ja
xchg
ds
xor
aad
ficoms
jle
dec
cltd
enter
mov
pop
cli
push
cmp
pop
shll
xlat
jl
rcrb
fildl
lahf
ds
mov
outsb
test
mov
inc
jmp
inc
xor
mov
movsl
dec
mov
pushf
xchg
lea
inc
shll
adc
push
icebp
dec
or
xchg
mov
lcall
adc
inc
jb
test
inc
rorl
xlat
lods
xchg
push
lds
insl
cmp
arpl
dec
or
push
loope
jbe
sbb
lahf
jle
jne
in
cli
inc
mov
lcall
lods
sbb
in
mov
rcrl
fnstenv
std
mull
or
call
mov
xchg
xchg
cs
adc
xor
out
xchg
inc
lret
std
movsb
dec
test
jnp
jle
les
jb
cmp
notb
sbb
divb
pop
ret
repnz
incl
imul
pop
inc
stos
enter
mov
insl
bound
ljmp
adc
arpl
pop
scas
hlt
loopne
dec
push
pop
sbb
cwtl
inc
fcos
pushl
aam
or
stos
xchg
cwtl
pop
xchg
pop
sbb
sahf
out
jns
cmp
dec
test
flds
decl
xchg
xor
cmp
push
xor
movsl
outsl
cltd
repnz
leave
sbb
cwtl
test
push
xchg
jecxz
outsb
in
scas
cmp
je
push
fdiv
imulb
cmc
add
incl
mov
test
inc
out
lea
mov
and
push
repz
cld
fmul
dec
jle
cli
add
fiadds
xchg
iret
sub
pop
in
setb
rcl
add
xchg
add
call
aam
or
dec
inc
cmp
or
push
cmc
inc
dec
cmpsb
mov
inc
call
jmp
int3
lods
or
or
mov
sub
mov
pop
xor
jmp
lds
xchg
es
aas
and
dec
adc
insb
mov
in
lock
scas
mov
adc
jge
decl
or
mov
sbb
addr16
jmp
dec
cmpsl
pop
mov
jmp
and
pusha
mov
adc
adc
jns
push
shlb
mov
imul
lods
fs
sub
and
pop
dec
add
xor
pop
out
repnz
cmpsl
push
decl
clc
push
rcrl
ljmp
sbb
sar
in
fxch
pop
andb
incl
xor
and
sti
mov
dec
enter
mov
adc
out
dec
pop
push
sbb
loope
jmp
mov
sub
mov
and
cmp
lahf
rorl
adc
jmp
rclb
mul
add
push
jmp
ja
jnp
jae
test
mov
or
sbb
sbb
dec
lcall
or
repnz
fcmovnb
sbb
sbb
inc
lret
xor
and
and
mov
mov
mov
mov
pushl
sarl
pop
loop
or
outsb
jbe
ret
in
jbe
addl
stos
shrl
lcall
iret
ret
mov
cmp
in
clc
dec
std
mov
adc
sub
loopne
jle
fmulp
pop
cmp
xchg
ja
cmp
sti
loop
cmp
mov
sahf
imul
clc
dec
push
adc
dec
lahf
sahf
cmp
jp
fildll
cwtl
sub
outsb
pop
jg
xchg
inc
imul
rorl
aas
loop
incl
inc
shrb
xchg
pop
insl
ret
sub
into
cmp
pop
test
enter
mov
push
xchg
ret
mov
shll
ss
cs
mov
repz
push
dec
andb
jmp
pop
stos
mov
das
lahf
xchg
cwtl
jle
les
pop
xor
or
fildl
in
jmp
ret
sbb
add
adc
mov
pop
les
dec
or
inc
cmp
mov
pop
jno
dec
mov
shrb
fcmovb
adc
cli
out
test
call
push
imul
outsl
pand
sbb
sub
sub
sub
lcall
xchg
das
loope
fiaddl
addb
fmulp
lock
xchg
sti
mov
sub
sub
pop
das
cmp
call
jl
sahf
sbb
inc
mov
xchg
outsb
jecxz
dec
inc
cmp
shr
fstpt
sub
lds
push
in
ret
jae
sbb
mov
xchg
pop
sub
sub
cmp
incl
movb
or
gs
adc
push
xlat
rcrl
mov
incl
jns
dec
aas
in
jbe
dec
cmp
push
out
jecxz
ja
lods
dec
push
sti
cmc
mov
or
add
fldt
jp
bound
fdivs
pop
sbb
out
xor
jne
enter
out
jp
mov
lcall
adc
jne
adc
sbb
lds
adc
add
decl
push
xchg
rol
mov
stos
lds
popa
out
mov
loop
sbb
jl
outsl
mov
popf
outsb
jmp
mov
inc
pop
push
mov
jg
in
cmp
xor
mov
mov
ljmp
in
add
aad
fisttpl
sbb
xchg
dec
pop
idivl
sub
cltd
xchg
jb
sbb
xchg
pop
dec
outsb
and
mov
addr16
nop
into
leave
int3
and
call
jp
dec
sbb
popf
sbb
push
iret
cmc
xchg
xor
xchg
add
mov
pop
pop
mov
xchg
aas
scas
xor
popf
dec
shl
cs
and
fprem1
push
cmp
sub
push
push
je
mov
mov
add
and
pop
sub
xchg
popf
inc
bound
jb
cltd
jl
cmp
jmp
push
call
mov
add
std
icebp
dec
orl
loop
add
adc
mov
cmp
jmp
mov
and
cld
pop
adc
xchg
jecxz
jecxz
sub
mov
mov
mov
jmp
int
push
jl
int
add
and
mov
cli
dec
cmp
adc
cmp
in
mov
jo
sbb
mov
arpl
pop
in
pop
add
mov
sbb
call
outsb
insl
lock
lret
xor
sub
pop
add
mov
and
push
cmp
outsl
call
jns
movsl
fisttpll
lock
mov
dec
insb
dec
jle
insl
jns
insb
dec
lcall
test
sub
dec
adc
lret
and
pop
push
cmp
icebp
jbe
xchg
data16
inc
mov
ljmp
pop
xor
loop
mov
push
adc
mov
inc
pop
js
inc
sbb
decl
pop
cmp
push
les
cmp
push
jg
push
mov
into
loopne
aas
rcll
xor
cmp
xor
mov
mov
mov
ja
xchg
dec
in
lahf
jbe
enter
cmp
mov
dec
dec
sub
out
and
push
lods
ljmp
lret
scas
jbe
outsl
adc
into
stos
shlb
lods
jns
mov
divl
out
mov
into
aam
lcall
adc
push
dec
sbb
mov
xchg
jl
xchg
push
into
hlt
mov
ret
incl
out
sbb
inc
add
mov
arpl
and
adc
jmp
jae
sbb
loop
sbb
push
xor
mov
mov
sbb
jmp
mov
jnp
test
mov
inc
fbld
push
mov
push
jb
jmp
fwait
stos
jle
das
sub
and
mov
addr16
sub
push
lods
fdivs
sbb
dec
push
lret
mov
scas
roll
cld
pop
jge
add
mov
sub
pushl
xor
data16
dec
iret
inc
inc
in
aaa
mov
add
mov
mov
push
ret
or
dec
fstl
mov
sub
and
aas
sti
and
js
shll
jbe
xchg
push
xchg
and
rcll
icebp
xor
movaps
aad
icebp
push
pop
dec
lcall
mov
lcall
jmp
shlb
cmpsl
mov
sub
adc
repnz
jge
dec
cmp
pop
rcrb
mov
adc
inc
icebp
icebp
inc
frstor
push
or
call
outsl
mov
mov
dec
nop
mov
cmpsb
jns
inc
or
shll
cmp
pusha
xchg
adc
push
cmp
jle
xchg
and
popa
or
pusha
xchg
lret
sbb
test
lcall
add
stc
jmp
dec
int
dec
adc
push
sub
mov
stc
mov
incl
int
in
int
pushf
pop
bound
or
rclb
imul
lea
jmp
cwtl
cmpsl
fdivrs
push
sti
pop
and
fidivrl
divl
ret
lock
push
call
sub
mov
and
mov
xor
adc
ljmp
cwtl
mov
loopne
adc
ret
pushl
xchg
adcl
pop
jae
xchg
fwait
cltd
mov
and
mov
ljmp
shll
xchg
sub
fcoml
push
test
test
mov
movsb
push
fucom
dec
xor
mov
ljmp
jnp,pt
aaa
mov
jle
sti
or
imul
lods
fs
jmp
out
pusha
jbe
pusha
jl
call
mov
lods
or
mov
dec
imul
push
jo
cmp
jp
or
xor
xor
decl
or
mov
and
mov
and
dec
and
inc
xchg
push
push
call
jg
sbb
dec
hlt
sub
in
cmp
fmull
pop
les
xchg
movsl
shrb
testb
push
andl
rorl
and
decl
out
xor
lea
jns
call
cmp
mov
mov
xlat
std
sub
popa
imul
popf
mov
incl
pop
adc
jno
scas
or
inc
test
xchg
in
aaa
mov
xchg
or
ljmp
xchg
into
arpl
data16
fldt
out
std
jo
mov
xor
mov
and
jl
add
lcall
mov
xabort
lret
jl
mov
aam
mov
pop
push
and
fucomip
stos
lods
sbbb
xor
push
repnz
ljmp
sub
dec
adc
fs
int3
jmp
lret
aas
pushf
inc
pop
adc
mov
pop
scas
xor
dec
mov
fwait
xor
or
or
fwait
jle
imul
es
repnz
push
ljmp
sbb
iret
out
scas
xchg
pop
lcall
addl
jbe
xchg
popf
stos
sub
ljmp
test
dec
jae
sbb
dec
mov
mov
and
lcall
sub
jecxz
cmpsb
aam
mov
mov
xchg
int
ja
data16
rcll
dec
inc
bound
out
jmp
flds
add
lcall
dec
mov
ror
cmc
ja
out
fnstenv
outsl
insb
adc
pushl
aam
mov
outsb
mov
fmuls
pop
jle
sub
aas
adc
xchg
aad
scas
cli
ljmp
jne
jmp
cmpsb
pop
xlat
in
call
icebp
imul
jne
jbe
sub
or
pop
iret
push
xor
jg
mov
pop
cli
mov
popf
jbe
clc
clc
jno
ret
fidivl
cmp
xlat
decl
pusha
daa
std
fs
imul
cmp
pop
in
xlat
add
call
inc
cmpsl
push
ret
insl
inc
and
dec
mov
out
cmpsb
mov
adc
sub
mov
jmp
out
dec
xchg
dec
mov
cmp
out
xorl
das
shr
xchg
lcall
into
xor
sub
dec
jbe
cmpsb
neg
xor
adc
loopne
add
mov
inc
dec
pshufw
cmp
push
sbb
push
add
mov
repnz
xchg
in
add
mov
ljmp
into
add
in
lret
cmpsl
les
mov
pop
push
stc
inc
xchg
outsl
jbe
lcall
pop
icebp
rol
lods
xchg
stos
pop
mov
jbe
filds
jne
dec
ja
iret
jl
or
jmp
push
mov
push
xchg
inc
push
xchg
rcll
sub
std
cmp
push
iret
sbb
pop
cmpsb
pushl
pop
cmp
ds
add
push
repz
cmp
push
mov
mov
xchg
push
cmp
or
andl
xor
mov
jp
stc
inc
dec
in
roll
scas
lcall
bnd
pop
xor
xchg
int3
pushf
xor
jge
push
xor
or
adc
cltd
idiv
call
and
mov
push
clc
dec
jns
or
mull
loopne
popf
mov
lods
cmp
jmp
and
jmp
inc
pop
mov
inc
pop
inc
pop
fists
cmp
scas
sbb
jg
popf
xor
ret
jnp
mov
dec
pop
and
mov
or
xor
ja
hlt
arpl
data16
scas
call
loope
ss
mov
insb
call
jb
sub
cmp
push
in
pushl
inc
jge
lret
gs
into
insb
mov
lahf
lahf
in
fisttps
pusha
test
inc
dec
add
or
imul
pop
andl
popa
sub
hlt
pusha
fmuls
incl
pop
rcl
fwait
mov
ret
aaa
sub
mov
lret
dec
pop
mov
imul
ljmp
insl
push
cmp
out
in
sbb
fildl
or
pop
xchg
pop
pusha
bound
scas
and
cwtl
or
and
mov
movsb
pop
aaa
stc
data16
sar
pop
fucomip
mov
sub
aas
add
adc
inc
lock
fnstenv
xor
mov
dec
mov
and
rcrb
test
pop
xor
fwait
lods
adc
fisttps
movsb
jae
mov
ljmp
ret
pusha
rcrl
lea
in
enter
cli
push
push
mov
shll
cmpsb
jae
jmp
mov
lret
mov
popf
and
cwtl
and
scas
in
outsl
fistps
ljmp
bound
orb
dec
or
movl
sahf
aaa
or
lcall
adc
lahf
inc
sub
test
std
mov
adc
mov
mov
nop
lcall
ljmp
dec
xor
fiadds
inc
mov
or
push
inc
xor
rcrl
jmp
test
repnz
inc
jecxz
xor
mov
dec
dec
jge
cmp
and
xchg
pop
push
mov
cli
shlb
inc
dec
xchg
icebp
adc
ret
dec
add
movl
xchg
es
ljmp
mov
rcl
dec
cli
nop
movsl
mov
ret
sarb
pop
stos
push
xchg
or
hlt
push
cmpsl
lcall
or
adc
mov
fdivp
cmpsl
mov
lret
fld
stos
sbb
call
cmp
xchg
mov
sub
cmp
mov
sbb
dec
out
pushl
xlat
adc
and
jle
lahf
xor
xor
xchg
lods
sub
push
lahf
jb
ja
pop
cmpsb
jl
decl
mov
xchg
rcrl
sbb
outsb
pop
cmp
fimull
pop
not
lods
and
mov
in
dec
xchg
inc
popa
mov
jp
out
movsl
jl
xor
xor
or
fimuls
sarl
xchg
decl
aam
sub
adc
sbbl
push
cwtl
cmp
mov
inc
push
add
call
mov
cli
idivb
mov
ret
jb
lcall
in
sti
inc
out
int
lcall
push
aaa
test
in
jp
fidivs
cmp
or
dec
shll
mov
inc
xor
push
lret
fs
sbb
xor
pop
xchg
ljmp
xor
out
push
call
js
cmp
and
in
jge
mov
mov
xor
cmp
sar
dec
xlat
ds
sbb
mov
mov
sbbb
mov
inc
inc
sbb
push
out
sbb
ljmp
sub
jle
xor
sahf
mov
pop
std
add
xor
cmp
andb
mov
addr16
pop
push
xchg
ja
popf
shl
or
movsl
push
sbb
call
scas
add
dec
scas
mov
inc
arpl
mov
call
cmp
sub
lcall
pop
mov
fadds
mov
lods
mov
jp
xor
loopne
or
xor
incl
sti
aam
pop
mov
outsl
pop
shll
add
sahf
pop
mov
call
push
rclb
cs
shrl
outsl
and
cmp
add
scas
inc
inc
fs
les
inc
loop
lret
jbe
popa
sub
and
jb
or
push
dec
es
call
ljmp
jb
stc
test
jmp
movsl
fnstenv
xor
push
adc
idivb
call
adc
test
push
xchg
stc
or
lds
inc
sbb
push
jmp
loope
lcall
test
ljmp
lret
aad
xchg
out
cltd
lea
mov
sbb
push
out
sbb
imul
ljmp
ja
sbb
repnz
and
add
pop
and
out
in
sahf
lods
rolb
mov
jmp
pop
test
mov
cmp
mov
pop
xlat
test
shr
push
jle
or
sbb
dec
bound
imul
nop
jl
dec
outsl
dec
or
adc
lcall
jne
xor
jle
cmpsl
adc
aam
jbe
iret
jno
aam
cmp
in
movsl
nop
popf
push
sarb
mov
sub
lock
iret
push
std
mov
loopne
andl
testb
es
dec
loop
xchg
sbb
hlt
call
xor
or
inc
inc
hlt
lahf
jmp
lcall
jbe
add
jmp
push
cmc
push
xorl
jmp
sbb
aad
pop
clc
xor
daa
mov
call
lea
lods
shl
push
mov
inc
out
or
rorb
negb
pop
cltd
mov
dec
xor
add
cmp
cmp
inc
bound
loopne
sahf
scas
fdivs
sbb
ss
insb
inc
into
je
sub
jmp
outsb
mov
or
fimull
mull
inc
add
scas
ficomps
fld
and
je
jge
mov
mov
jmp
xor
mov
loope
lcall
lock
add
test
jge
jns
push
out
lret
call
cld
add
jo
insb
fbld
std
fcompl
iret
dec
jne
mov
cs
mov
jmp
and
faddl
adc
cmp
push
lods
pushf
pop
inc
shrb
mov
aas
jecxz
mov
adc
pop
inc
js
movsb
push
fcmovu
mov
test
ljmp
xlat
jge
call
add
in
leave
xor
pop
fcmovnbe
addr16
xlat
and
mov
out
push
shl
incl
xor
inc
fistl
mov
pop
jg
cmpsb
add
cmp
adc
fcomps
cli
sti
jbe
pushf
xor
or
icebp
scas
ljmp
sahf
loope
dec
pop
add
pop
push
inc
lea
scas
and
subl
pop
jmp
fiadds
fdivp
sbb
mov
out
test
cmp
iret
jmp
push
lcall
push
imul
dec
test
cmp
push
push
cmpsl
adc
call
inc
popa
lcall
ror
out
inc
inc
ljmp
fcmovbe
lret
fdivrl
jnp
ret
call
pop
or
sbb
jb
les
mov
in
into
push
jbe
cli
insb
ja
in
aaa
fnstsw
inc
dec
fstpl
rol
and
xchg
adc
popf
shr
imul
adc
mov
incl
sbb
mov
cmp
ret
dec
enter
jno
push
mov
fbstp
data16
inc
cmp
push
movb
out
adc
hlt
lds
push
jl
jle
jo
fmuls
inc
sar
cmp
mov
xor
insl
dec
imul
test
mov
repz
ljmp
pop
sub
mov
lods
jno
int3
or
test
scas
pop
pop
xchg
push
push
mov
mov
pop
jecxz
popa
add
lds
pushf
test
push
mov
and
sarl
out
jbe
testl
xor
rol
aad
dec
call
fisttpl
daa
cmpsb
js
outsb
and
jmp
test
mov
ljmp
movsb
pop
and
roll
sub
inc
pop
out
lahf
loop
decl
sub
cmpsl
in
clc
mov
mov
mov
adc
add
repnz
icebp
incl
or
mov
add
push
lahf
fistl
mov
js
pop
lcall
push
adc
dec
cs
incl
out
aad
andl
pop
js
inc
push
imul
jmp
repnz
jnp
adc
in
inc
js
lock
repz
test
icebp
lods
into
repnz
jmp
call
jbe
arpl
aam
jo
es
sbb
jae
scas
out
sbb
or
add
sti
les
pusha
daa
and
js
loope
gs
sbb
sbb
sub
dec
fwait
shll
xchg
jne
fcomps
jp
out
mov
in
in
add
sti
das
jb
andb
push
mov
dec
ja
inc
cmpsl
arpl
sbb
jnp
cs
pusha
xor
ljmp
incl
or
rclb
scas
push
jmp
arpl
stos
pushf
lock
incl
out
mov
jnp
js
js
and
cmpsl
fisttps
addr16
outsl
or
mov
jp
sbb
call
jge
push
push
ljmp
xor
imul
nop
xchg
mov
mov
sub
sbb
ret
push
movsb
aas
sub
xchg
mov
xor
mov
cmp
imul
cmp
mov
jle
push
dec
sub
dec
adc
push
pop
mov
roll
fs
std
pop
jbe
fcoms
lock
cwtl
int3
insb
insl
xor
xchg
sub
shlb
jle
stos
lahf
std
ljmp
sub
in
fistpll
in
movntps
xchg
sarb
jecxz
cmp
jmp
mov
pusha
sub
stos
dec
cs
and
ror
dec
jmp
add
push
push
mov
jmp
psadbw
scas
add
mov
in
out
xorl
cmp
bnd
pop
inc
xorb
iret
inc
icebp
jmp
ret
loope
fidivrs
and
add
ljmp
les
xor
mov
jmp
pop
popa
stos
insl
and
xor
aas
add
jle
inc
aam
jo
orl
inc
mov
fidivl
outsb
mov
hlt
adc
xchg
add
jle
jg
jmp
ja
incl
cmp
movsl
inc
insl
bound
push
push
push
mov
jecxz
fdivrs
pop
dec
push
cmp
push
cs
aas
iret
xchg
pop
in
jbe
xor
bound
sub
mov
jns
fldcw
into
fs
pushl
popf
mov
pushf
jle
mov
leave
mov
dec
movsb
pop
icebp
or
or
loop
iret
pop
test
fidivrs
and
adc
stc
mov
icebp
add
sbb
push
push
or
dec
data16
push
popa
sub
mov
lahf
stos
push
dec
ljmp
add
cmpxchg
cmp
je
inc
sbb
sub
out
arpl
inc
arpl
xorl
inc
mov
mov
xchg
push
test
cs
in
mov
inc
adc
and
dec
mov
outsl
inc
mov
lcall
jne
inc
jo
mov
jns
daa
aam
sbb
push
sub
push
mov
call
push
les
pop
jbe
sbb
jnp
aad
outsl
pushl
hlt
dec
push
popa
and
movb
pop
divb
outsb
mov
scas
mov
or
call
mov
jae
ficoml
movsb
adc
inc
lcall
mov
mov
pushl
scas
loop
jns
jmp
sbb
ss
xchg
xchg
inc
jg
cmp
arpl
incl
clc
jb
push
xchg
mov
dec
stc
push
sbb
clc
or
rclb
ds
jo
jmp
fiadds
in
mov
icebp
enter
add
mov
cmpsb
push
fwait
cmp
jmp
xor
cli
jne
jbe
adc
bound
lahf
and
and
xchg
sbb
lcall
mov
jge
stc
add
aad
pop
xchg
cmpsb
stc
repz
sub
cmp
shr
call
lret
adc
pop
ffreep
iret
mov
and
addl
mov
scas
or
jmp
xor
loope
xchg
notl
add
inc
and
ret
inc
jb
fdivrl
call
mulb
add
ljmp
cmp
repz
daa
or
outsl
jno
jmp
inc
dec
lods
xchg
jbe
push
scas
test
cld
mov
push
inc
fisttpll
rol
dec
mov
fcomip
jmp
mov
popf
gs
push
lahf
insb
sbb
shll
jmp
push
test
imul
dec
cld
mov
rolb
enter
out
lock
call
or
test
je
push
push
jmp
add
stos
push
cmc
cwtl
push
cld
lds
inc
xor
mov
cmp
aaa
in
sub
mov
inc
lods
insl
test
pushl
orl
movsb
xchg
daa
repz
gs
loopne
sub
mov
xchg
mov
lcall
loope
push
fdivp
or
lods
push
int
inc
add
fcmovnbe
aad
pushf
jns
or
jmp
daa
js
das
es
mov
push
mov
or
or
pop
loope
cmp
push
in
push
out
mov
pushl
cmpsb
xchg
sub
xchg
repz
adc
rcl
in
sbb
lcall
mov
nop
cmc
push
cmp
ret
jge
test
lock
popf
mov
incl
add
adc
cmp
rorb
std
lcall
out
adcb
jmp
and
mov
or
pop
fwait
jbe
mov
pop
push
imul
mov
sti
imul
ljmp
cmp
addb
sar
xor
or
mov
les
ja
lahf
out
jb
les
sar
ljmp
lock
adc
aas
and
lods
nop
ljmp
mov
adc
call
pop
fwait
inc
idivb
xor
xchg
nop
adc
add
out
subb
xor
lcall
or
mov
scas
sub
push
adc
and
das
add
mov
xchg
incl
das
cwtl
out
pop
into
cmp
push
rorl
addr16
bound
jns
mov
push
pusha
xchg
add
and
mov
data16
cmp
lcall
dec
adc
cmp
icebp
inc
fildl
lret
push
pushf
sbb
adcl
ljmp
push
jnp
or
into
imul
dec
loope
add
cmc
mov
jmp
ret
mov
adc
push
das
dec
cmp
mov
mov
or
dec
jmp
cmpsb
mov
mov
xor
mov
lock
pop
inc
fstp
jmp
cmp
adc
cmc
mov
aaa
sbb
loope
mov
scas
data16
sar
pushl
stos
aas
repz
int
adc
repz
icebp
sbb
rcl
or
call
mov
lret
xchg
repnz
add
test
aas
mov
jge
popf
cld
inc
ds
ljmp
inc
and
call
mov
or
and
loop
cwtl
mov
in
push
insb
rorb
mov
in
test
pop
out
sbb
cmpsb
lds
mov
ljmp
xlat
push
jbe
xchg
scas
les
mov
cmpb
inc
and
push
arpl
push
inc
push
sbb
arpl
mov
lret
fstp
jl
mov
insb
call
pop
ds
fwait
pushl
adc
cmp
scas
xor
inc
mov
ss
xchg
inc
push
and
les
add
cmpsb
and
lods
push
call
mov
mov
sub
jae
cltd
mov
js
mov
pop
jb
gs
call
sbb
inc
or
mov
pop
xlat
bound
repz
loopne
cmpsl
mov
roll
ret
jmp
or
insb
dec
cmpsl
add
pop
dec
daa
lods
jns
jmp
imul
fcmovu
faddl
adc
add
icebp
sub
jmp
and
xor
rcll
test
hlt
aas
sysret
ret
push
and
ljmp
xchg
mov
push
push
xchg
scas
dec
sbb
in
sub
push
std
idivb
sbb
mov
and
out
xor
incl
lcall
adc
xchg
pushf
xor
movlhps
jge
out
jae
outsb
jbe
cld
iret
pop
test
test
sub
arpl
insb
mov
push
pop
loopne
ficomps
jmp
lret
xchg
adc
add
pop
aad
aad
push
scas
cmp
in
out
inc
ja
or
jmp
push
jmp
push
imul
inc
add
inc
lcall
ds
pop
lret
enter
fnstsw
xchg
enter
push
ss
add
in
decl
iret
sub
mul
into
imul
mov
inc
fwait
mov
jmp
incl
orb
or
pop
push
dec
fiaddl
mov
inc
inc
mov
decl
xchg
push
aaa
fisttpl
insl
mov
or
fnsave
pop
iret
lahf
dec
and
jmp
and
std
cmp
add
xor
xlat
push
loope
add
scas
test
pop
ret
rcr
jmp
jb
push
sub
fs
inc
outsl
cmp
push
inc
push
test
mov
mov
scas
sub
lea
aaa
call
lretw
lea
call
dec
sbbl
sub
lods
xor
jge
jbe
decl
std
push
scas
rolb
sbb
aam
jb
jl
stc
addr16
imul
call
popa
jnp
push
pop
sahf
js
sub
adc
xor
stos
xor
adc
mov
cmpsl
das
sti
cmp
inc
stos
repnz
clc
test
xor
and
addr16
cmp
in
fidivs
es
sbb
and
loop
rclb
push
mov
loope
call
fldl
and
insb
xorl
sub
inc
or
mov
cmpsb
inc
jno
mov
call
lods
negl
cmp
mov
or
call
ljmp
dec
icebp
pop
int
cltd
xchg
test
xlat
mov
cmp
pop
movsb
cmp
or
mov
xchg
add
xor
cld
push
cmp
cs
inc
adc
adc
push
jp
std
jmp
andl
jmp
inc
pusha
xchg
mov
or
jl
jbe
xchg
add
nop
mov
inc
mov
lods
jmp
or
mov
fildll
pop
ret
pop
bound
lods
aaa
clc
popa
jnp
push
setae
test
lcall
rcr
loope
aas
icebp
mov
push
mov
jo
int3
out
jmp
push
js
push
fdivrp
jmp
xor
and
rcll
jnp
xor
cld
fdivs
ret
iret
push
sub
mov
imul
cmp
int
lcall
mov
pop
insl
and
jnp
cld
adc
aaa
adc
incl
mov
jnp
mov
sbb
aad
iret
push
jp
pop
cmp
sarl
out
push
or
ljmp
repz
ret
dec
mov
clc
add
adc
mov
and
mov
lea
gs
pop
inc
test
cmp
decl
and
and
mov
rcr
sbb
pop
je
sbb
test
ljmp
mov
and
jae
pop
stos
shlb
movsb
fmul
mov
and
lret
incb
push
call
out
dec
inc
dec
push
jg
ficompl
mov
or
and
adc
dec
in
add
call
mov
mov
jg
jp
jecxz
shll
mov
or
neg
cld
fcos
jmp
cwtl
mov
cmp
lods
fldcw
in
in
out
jle
xchg
sarb
cmp
xchg
ljmp
icebp
jb
and
xchg
cmpsb
add
pop
ret
adc
jbe
inc
sub
inc
cli
clc
icebp
pop
sar
decl
and
repnz
xchg
push
sbb
push
aas
shll
mov
inc
sub
inc
cmp
int
jb
add
enter
cmp
sub
cmpsl
inc
es
ret
negb
lds
xchg
movsl
inc
sbb
fcmovu
or
jbe
mov
jmp
aaa
mov
cmp
sbb
jp
icebp
cs
out
mov
push
and
hlt
mov
in
ds
or
push
leave
loope
lods
mov
fdecstp
repnz
push
jo
sub
lcall
jmp
out
int
test
dec
jg
shl
loope
lock
ljmp
decl
push
xor
push
push
and
aam
int3
leave
ret
and
or
mov
inc
call
cmpsb
sbb
in
xor
dec
adc
aaa
inc
mov
test
incl
pop
in
sub
sbb
repnz
sub
mov
sahf
stc
push
test
aaa
xchg
lcall
jle
cmpsb
mov
repz
pop
pusha
fildll
int3
loope
mov
push
stos
pop
rcrb
scas
incl
push
xchg
lock
dec
faddl
xor
loope
in
out
mov
call
mov
adc
and
adc
mulb
inc
sbb
fiadds
incl
add
test
test
std
data16
daa
inc
in
stos
jae
sub
imul
decl
in
lcall
ja
dec
fidivrl
int
outsb
mov
mov
dec
inc
imul
jne
frstor
xchg
inc
mov
movsl
mov
and
pop
add
popa
out
lods
dec
sub
std
in
pop
leave
fisubl
int
sbbl
in
dec
stos
in
pop
mov
incl
icebp
cmp
into
popf
sbb
dec
sbb
das
mov
mov
jl
ud0
dec
cmp
mov
sarl
icebp
inc
lods
cmp
or
xchg
repnz
pushf
lods
xor
ljmp
cld
add
cmp
std
jns
fwait
sbb
push
push
shr
out
sti
clc
bswap
adc
and
pushl
mov
fs
movl
or
fsubr
rol
sub
xor
inc
sti
cmp
push
xchg
mov
lods
js
test
push
negb
cmpsb
cmp
in
dec
addb
or
push
ljmp
jns
js
jbe
scas
push
sub
hlt
mov
lret
adc
jl
mov
and
inc
inc
xchg
add
jge
pop
out
xchg
add
and
test
or
xchg
dec
pop
or
jmp
icebp
xor
dec
mov
cmp
cmp
inc
fisttpl
mov
pop
fs
shrl
incl
lods
sahf
adc
adc
pop
lret
popf
mov
imul
cmp
xor
dec
xchg
divl
mull
sub
jge
dec
in
sub
pop
xchg
divb
cmp
add
ljmp
sti
repz
or
and
rcll
les
mov
call
xchg
loopne
sarb
das
push
xor
je
pop
sahf
dec
mov
arpl
push
mov
mov
decl
arpl
and
fxch
pop
int3
aaa
inc
pop
and
adc
sub
rcrb
sbb
fsubrs
movsb
aam
lcall
cs
divl
mov
mov
jecxz
jle
fcmovbe
pop
mov
cmp
add
pop
out
cwtl
sbb
and
insb
call
test
xor
into
mov
jle
dec
lret
cmp
mov
mov
or
repnz
rolb
and
in
cmp
mov
jmp
test
xchg
sbb
inc
sarb
pushl
and
push
inc
fwait
adc
adc
fucom
jp
sbb
inc
add
sub
pop
rcrl
cmp
push
jecxz
jle
jnp
aaa
cwtl
ret
push
cwtl
adc
popa
imul
lcall
lcall
pop
pop
pop
inc
cld
add
push
mov
fstl
pop
lret
mov
add
jl
cld
mov
mov
pop
adc
sub
or
or
clc
jmp
fnstsw
mov
mov
sub
push
mov
addb
stos
idivl
jmp
sub
loop
and
cltd
cmp
xlat
jle
enter
pushl
xor
cs
lea
sti
addl
pop
mov
sbb
nop
pop
mov
jmp
jne
jmp
pop
or
roll
add
enter
mov
test
jmp
mov
decl
repz
fistps
mov
cmp
in
mov
lcall
decl
call
mov
jmp
insl
or
cmp
call
bound
pushl
popa
loop
nop
push
lret
out
sbb
sub
in
adc
mov
aad
push
add
lahf
adc
lds
fbld
insl
mov
call
mov
dec
lcall
cmp
push
loopne
aas
fisttpll
scas
xlat
mov
xchg
js
cmp
fldt
xor
lods
mov
dec
cmp
aam
loopne
lock
dec
push
jno
test
add
xchg
dec
adc
adc
pop
pop
add
and
iret
inc
arpl
lds
or
cmpsb
popf
inc
add
scas
mov
xor
jmp
iret
or
es
xor
daa
jbe
sub
test
push
mov
call
inc
xchg
push
push
movsl
sbb
add
sub
shld
negl
sahf
push
sahf
and
shrb
jmp
clc
pushf
adc
dec
insb
adc
loop
in
ficoms
xchg
call
loopne
pop
dec
jns
stos
add
out
lcall
xchg
add
sub
outsl
or
inc
lcall
mov
pop
shrl
add
mov
mov
sub
call
push
push
jbe
jl
fnstsw
stos
mov
nop
or
cmc
fs
lret
inc
cwtl
movsb
xorb
inc
imul
jmp
fsubp
and
pop
pop
shrb
mov
les
je
xlat
clts
icebp
out
scas
adc
pop
pop
inc
xchg
notl
or
in
mov
add
imul
stos
jmp
je
add
add
aam
pop
push
sbb
pop
into
in
test
and
stos
ljmp
cmpb
insl
push
mov
js
dec
push
shlb
xorb
int
ss
ljmp
imul
shrb
mov
mov
jl
es
rol
data16
pop
jmp
jmp
mov
jecxz
notb
mov
mov
and
scas
inc
movsb
stos
pop
aam
add
fdivr
incl
insl
inc
mov
jmp
lret
shlb
mov
pop
adc
cmp
mov
inc
pushl
jno
sti
out
and
outsb
cmp
adc
mov
shr
arpl
call
mov
pushf
rcr
cmp
aas
cmp
rol
xchg
add
or
push
jne
mov
push
add
stc
shll
repz
mov
fildl
push
jmp
fbstp
js
xor
xchg
jl
out
out
test
andb
mov
adc
pop
pop
sbb
lret
fmull
pop
sbb
dec
cmc
or
rorl
mov
fldl
push
mov
cmp
adc
popl
stos
imul
sti
nop
test
inc
fs
mov
pop
and
push
jl
jo
sub
pop
int
lods
ficomps
ss
and
jnp
inc
xchg
mov
fcmovb
lods
cmp
add
mov
inc
adc
dec
imull
lods
rorb
out
sub
ljmp
jb
sbb
xor
insl
push
inc
adc
pop
ljmp
cmp
lret
stc
inc
lahf
subl
rorb
cmp
inc
lods
ret
push
jl
sbb
lcall
test
sbb
scas
fsub
int
test
lret
jbe
dec
sbb
push
jo
sbb
ljmp
ja
sub
pop
es
int3
or
roll
stos
mov
nop
pop
mov
jmp
in
and
fwait
push
sti
inc
xor
xchg
popf
xlat
daa
xchg
mov
pop
push
pushl
inc
and
mov
cmp
data16
pop
mov
aad
loope
bound
mov
cmp
fnstcw
xor
nop
mov
xor
lret
jmp
test
lcall
mov
push
push
jnp
xchg
push
mov
sti
xchg
mov
xchg
xor
in
call
and
xchg
xor
mov
and
mov
nop
imul
inc
aad
ja
daa
sub
pop
aas
jo
test
and
lds
pop
aaa
adc
fcoms
push
outsl
imul
mov
pop
and
es
push
push
jmp
js
call
loopne
in
sarb
test
mov
stc
in
lahf
and
dec
inc
mov
jo,pn
ljmp
sub
ljmp
repnz
dec
test
inc
xor
jle
pushl
push
push
adc
sti
jae
je
sahf
jg
push
add
je
repz
jo
push
loop
jle
outsb
inc
repz
imul
mov
stc
dec
insb
jno
shll
sbbb
ljmp
in
int3
fists
add
jbe
adc
clc
xchg
sti
push
xor
ljmp
jno
movsl
popf
lahf
pop
imul
gs
in
les
cmc
mov
dec
jo
dec
or
ljmp
mov
sub
dec
xor
iret
mov
sub
mov
cmpsl
bound
dec
dec
pop
lret
xor
or
dec
add
adc
and
jmp
mov
sbb
int
jmp
imul
test
add
sahf
repnz
std
daa
pop
pop
mov
dec
mov
lret
ljmp
mov
aas
les
mov
xchg
xor
or
out
add
mov
out
iret
inc
shll
cmpsb
sti
or
xchg
adc
shl
mov
stc
push
jae
fs
std
and
jmp
jae
movsl
xchg
cmpsb
jbe
mov
add
adc
std
arpl
stos
cmp
lcall
sti
fucomp
int3
pop
ret
gs
mov
lret
adc
push
stc
mov
add
call
enter
xchg
cmp
inc
add
xor
fistpl
and
cwtl
fs
mov
jge
pop
cmpsb
pop
cmpsb
loop
test
out
das
movsb
or
je
jno
adc
lods
out
pushl
out
pop
sbb
and
xchg
sub
das
inc
insl
xchg
setle
jmp
incl
ljmp
xor
sbb
or
sbb
add
or
pop
lcall
pop
dec
lret
jne
inc
sbb
cmp
bnd
shl
orb
adc
pushl
imul
lret
aaa
xchg
dec
adc
mov
sub
inc
pop
fstp
test
fnstcw
test
fwait
lahf
pop
pop
and
inc
or
movsl
jb
and
pop
add
inc
pushf
movsl
lds
and
inc
or
insb
xchg
pop
push
xchg
jae
jns
add
stos
and
ja
ljmp
out
ss
loop
aaa
lret
adc
inc
mov
adc
cmp
jnp
xor
sub
pop
mov
mov
movsb
and
sbb
adc
sbb
incl
push
dec
mov
xchg
mov
xchg
mov
mov
cs
lods
iret
test
fdivs
scas
and
jge
inc
jmp
sbb
sub
mov
cmpsl
out
imul
nop
xorb
mov
fs
sub
sub
push
ja
mov
or
xchg
dec
stc
imul
mov
xchg
jl
shlb
sub
inc
mov
inc
rol
aad
jb
lret
outsb
cmp
fcmovne
in
dec
pop
adc
inc
lea
and
test
iret
add
jl
int3
test
stos
decl
lcall
je
jg
dec
sbb
mov
jae
and
mov
lahf
popa
fwait
sub
lds
call
rcl
loopne
ljmp
aaa
mov
push
adc
cmp
sbb
cli
repnz
add
cmp
cmp
ret
and
or
jo
gs
call
mov
dec
lahf
into
out
mov
fsubr
in
jl
push
sbb
xor
fs
xor
pushl
jo
ret
ret
loop
rcr
aad
jg
sub
flds
inc
cmp
jo
jmp
ljmp
cmp
sbb
fsub
pop
std
lods
stos
mov
andb
decl
mov
mov
jbe
xor
mov
movsl
mov
cwtl
loope
incl
jo
int
lods
cld
and
ja
sbbb
in
daa
mov
mov
add
fs
pushl
je
shlb
lret
dec
stc
fisubrl
xchg
adc
lcall
int3
sub
sub
sbbb
into
rcrl
cmp
sbb
or
idiv
mov
cmp
pushl
std
movsb
aad
cmp
pusha
mov
stc
idivb
or
fdivs
sbb
push
dec
fndisi(8087
call
pop
cmp
sbb
lret
mov
notl
inc
add
lcall
jle
ljmp
bound
loope
in
push
push
lds
pop
aaa
jge
in
jo
orb
sub
call
gs
and
xchg
stos
filds
outsb
hlt
mov
loop
jg
xor
call
or
es
test
fldcw
loope
pop
ss
cmp
shl
xchg
decl
adc
and
shrl
xor
popf
cmp
sub
dec
sub
inc
lods
icebp
pusha
sub
pop
or
xchg
jl
dec
mov
jnp
dec
nopl
xor
jmp
dec
imull
jne
xorl
add
in
xor
dec
xor
ljmp
jg
mov
mov
jnp
xchg
mov
out
out
mov
movsb
pop
fistps
jmp
adc
xlat
lea
les
and
mov
xor
xor
rorl
popf
sbb
lcall
aaa
mov
xorb
mov
lahf
cmpsl
rclb
adc
xchg
enter
or
jmp
jb
mov
xchg
orl
dec
sub
andb
dec
pandn
pushl
mov
sub
js
scas
dec
aam
xchg
sub
pop
jl
cld
adc
inc
mov
aad
test
pushl
add
and
mov
and
pop
mov
call
test
cmp
jmp
enter
sub
xor
cmp
cmpsl
sarb
inc
ljmp
sub
push
mov
jl
hlt
std
mov
and
lods
inc
push
fucom
cmc
jmp
pushl
movsb
and
adc
test
mov
inc
outsl
jp
pop
add
pusha
cmp
decl
mov
inc
jbe
pop
ret
fimull
clc
xor
mov
lcall
add
testb
adc
cmpsl
out
mov
icebp
adc
sub
adc
fildl
mov
cmc
inc
sbb
movsb
les
leavew
sahf
pushf
sarl
mov
cld
inc
test
or
mov
cli
mov
ds
cmpl
jge
dec
dec
das
stc
pusha
pop
dec
enter
mov
xchg
and
es
test
nop
aam
and
imul
mov
lahf
popf
decl
loopne
arpl
dec
xchg
dec
in
mov
idivb
mov
incl
ljmp
cmovge
adc
fsts
push
mov
adc
xchg
cmp
fdivrp
incl
loop
into
sti
pop
and
repz
int
in
sahf
shll
scas
xlat
xchg
xchg
xlat
jmp
adc
jns
push
mov
jmp
mov
test
pop
xor
mov
fidivrs
repz
imul
sti
push
and
inc
xchg
in
xor
jbe
subl
xchg
movsl
or
push
enter
mov
mov
lcall
mov
imul
xor
mov
adc
cmc
lods
mov
pushl
repz
cli
cmpsb
add
push
cmp
test
xor
mov
pushl
int3
or
ja
mov
imul
push
mov
lods
addr16
mov
icebp
sbb
cmp
pushl
enter
mov
cmp
jo
push
cmp
bound
cmp
jo
jmp
decl
cli
lods
cmp
add
ret
outsb
push
outsb
and
repnz
mov
fs
out
scas
dec
add
sbb
ret
sub
cmp
or
and
or
push
out
imul
mov
orb
xchg
or
xor
jns
inc
cltd
sbb
call
xor
stos
sub
test
jmp
fstpt
adc
out
inc
incl
sbb
mov
xor
incl
repz
icebp
arpl
sub
adc
aaa
xor
push
cmc
testl
jmp
loop
jge
std
cmp
cmp
jl
adc
adc
cmp
pop
mov
icebp
idiv
lcall
arpl
jb
jns
insb
repnz
dec
inc
int3
rorb
push
aam
lcall
sub
xchg
sarb
xchg
js
enter
scas
cmp
gs
mov
add
lcall
stos
push
pop
nop
stos
dec
insl
nop
pop
sbb
cld
mov
data16
cmpsl
mov
pop
enter
incl
mov
jmp
outsb
movsl
mov
sub
pushf
data16
cmp
cwtl
data16
in
aad
incl
insb
push
jbe
and
or
xchg
in
popa
adc
scas
nop
xchg
shr
cmp
pushl
pop
in
jnp
jns
mov
mov
sbb
push
je
add
pop
dec
push
push
out
js
out
ret
jbe
mov
lods
loope
ss
es
addb
jns
std
stos
pusha
repz
andb
mov
mov
stos
jp
and
adc
ret
jno
inc
roll
xor
sbbb
lcall
sub
and
add
xor
pop
lock
lret
mul
daa
lahf
cwtl
stc
mov
out
or
and
xor
xchg
cmp
push
dec
jle
cmp
cwtl
sub
mov
fimull
lea
loop
iret
stc
int
add
hlt
test
pop
xlat
shll
rorl
add
incl
xchg
pop
inc
popl
and
imul
xchg
sbbb
xor
dec
mov
fs
jmp
fnstcw
mov
mov
jbe
xlat
jbe
sbb
and
shl
add
mov
jle
stc
iret
mov
sti
xchg
dec
loop
leave
maxps
addr16
in
xor
jmp
stos
call
in
dec
push
xchg
cmp
out
je
jbe
adc
mov
inc
dec
cmp
sarl
add
repnz
aam
cwtl
sub
mov
mulb
int3
out
std
add
fstps
call
fcompp
stos
pop
dec
pushf
jbe
dec
xor
arpl
jne
push
sbb
adc
jg
ljmp
test
sarb
xchg
out
pop
test
adc
sbb
pushl
roll
pop
pusha
cmp
lock
in
jge
fucom
jne
jmp
jmp
mov
ds
xchg
mov
mov
dec
aas
imul
sahf
adc
lcall
jne
cld
cwtl
insb
ja
or
jl
inc
add
je
movsl
inc
or
xchg
call
jmp
arpl
jno
and
loope
mov
inc
sub
fidivl
or
jbe
add
ljmp
filds
fbstp
mov
jg
mov
fwait
xchg
mov
iret
jmp
sbb
and
incl
mov
xor
int3
je
nop
lods
push
test
dec
sar
cwtl
push
mov
es
jmp
pop
xlat
mov
enter
mov
out
sbb
repnz
pushl
js
mov
jnp
inc
outsb
enter
es
or
pushf
stc
loope
scas
sub
inc
inc
call
sbb
and
lcall
xor
or
shrb
or
incl
in
cwtl
cmpl
clc
mov
adc
loopne
decl
scas
ds
call
push
sub
pop
mov
inc
into
mov
sbb
pushf
cmp
push
mov
hlt
outsl
cmpsb
push
fistpll
sbb
pushf
stos
cld
jno
scas
test
xorb
mov
jbe
je
jo
xor
push
mull
fnstenv
xchg
nop
xorb
shrl
pushl
std
daa
shlb
sub
and
rorb
js
out
sub
push
ds
pushl
pop
lods
mov
shr
filds
pop
in
cltd
pop
movsb
push
out
pop
xchg
fmull
popa
jmp
call
inc
jbe
or
lods
out
and
hlt
out
leave
insl
inc
not
pop
pushl
fldl
shlb
ja
int3
jp
mov
call
in
jle
cwtl
dec
flds
xchg
icebp
movaps
sub
dec
ret
xchg
rcl
into
in
sbb
rcrl
arpl
imul
pop
dec
imul
adc
jge
pop
dec
lea
mov
loop
lods
adc
inc
or
add
inc
jl
inc
xor
and
push
mov
loopne
call
push
lods
and
add
xor
or
cwtl
push
aaa
std
jmp
dec
push
dec
mov
jo
xchg
and
lahf
jb
push
sbb
arpl
test
lcall
adc
in
addr16
inc
add
jle
sbb
sarb
pusha
out
jle
dec
xor
lcall
dec
cs
je
sarl
idivl
sti
scas
inc
les
pushl
sub
adc
push
fs
outsl
rorl
out
and
fisubs
jb
inc
scas
aas
out
std
iret
dec
mov
jmp
and
mov
stc
add
rcr
push
nop
xchg
call
dec
push
pop
pop
dec
lods
jl
xlat
inc
into
mov
dec
mov
loopne
jp
inc
repz
pushl
xor
rorb
std
adc
cmp
imul
movsl
aad
subb
incl
mov
sbb
mov
add
aas
add
xchg
cld
dec
xor
adc
lcall
xchg
int
pop
sub
rcrl
fcomp
es
test
popf
xchg
cmpsl
mov
ljmp
lods
mov
loopne
xchg
data16
dec
inc
jge
push
xchg
xchg
sub
ja
bound
ret
xchg
movsl
call
push
subl
rol
adc
out
in
pop
call
sbb
or
incl
mov
xor
mov
clc
jp
nop
add
rclb
pop
jmp
pop
divl
icebp
call
out
inc
jne
aaa
pop
les
or
scas
mov
and
fdivrs
cmp
sbbl
adc
bound
xchg
sbb
dec
mov
bound
jo
out
in
imul
pop
loopne
out
sbb
push
jb
stos
ds
push
cmp
lahf
jnp
mov
and
add
dec
push
lods
in
insl
das
jnp
divl
jmp
pop
cld
call
cmpsb
mov
inc
push
sub
iret
mov
jp
cld
aas
pushf
inc
pushl
mov
and
insb
pop
std
movsb
data16
ror
or
and
push
sbb
xchg
arpl
sub
call
adc
aas
outsl
cmp
mov
mov
lock
gs
mov
pushl
je
push
movswl
mov
push
je
or
push
out
and
mov
incl
and
and
sbb
push
cmp
call
clc
xchg
ja
push
ljmp
dec
sahf
pop
ret
xor
push
roll
cmp
clc
push
aaa
lret
jp
mov
inc
imul
and
int3
add
imul
jmp
mov
lcall
stos
subl
enter
pushl
fldt
mov
hlt
in
jae
popf
rcrb
adc
insb
mov
stos
xchg
jbe
ljmp
or
shrl
nop
mov
dec
out
je
mov
jle
lods
inc
movsb
das
or
in
call
imul
out
xchg
jge
bound
jmp
adc
xor
mov
mov
mov
mov
outsb
push
pop
adc
pusha
fildll
or
ficomps
addr16
insl
fbstp
leave
jmp
mov
jl
outsb
inc
rcl
mov
out
push
pop
sub
mov
sbb
call
xchg
sub
aam
pusha
add
pop
cmp
cmpsl
jle
cltd
out
dec
clc
push
roll
pop
sub
and
and
imul
imul
lcall
loopne
mov
xchg
sarb
ret
cmpsb
xorb
cmp
ljmp
imul
aam
and
push
xlat
arpl
addr16
test
outsb
mov
decl
jns
les
aas
aam
les
lcall
aad
mov
ljmp
xor
pop
add
sti
mov
idiv
add
mov
pop
sbb
mov
fabs
jecxz
pushl
in
sbb
mov
jl
inc
in
lcall
push
xlat
or
cmpsb
jge
mov
clc
jmp
into
mov
movsl
aas
mov
cmp
mov
pop
xlat
cmp
fsub
stc
jp
ljmp
loop
jno
mov
sub
repz
in
test
mov
inc
push
jge
into
lcall
gs
out
cmpsb
push
test
or
cmp
dec
cwtl
pop
push
stc
or
inc
dec
xor
pop
or
ljmp
insb
out
sub
test
imul
jmp
aaa
and
mov
int
mov
cmp
or
mov
adc
call
mov
pop
dec
in
jae
sub
shlb
je
stc
add
jnp
xor
outsb
adc
ljmp
gs
repz
data16
mov
mov
jl
popa
rcl
adc
cmp
ljmp
xor
sub
in
icebp
sbb
push
push
cmp
dec
mov
scas
call
testl
pop
gs
inc
sbb
dec
mov
jp
pop
kandb
int3
decl
xchg
sub
ja
stc
lods
jl
stos
cmp
test
mov
mov
jge
decl
mov
xor
and
or
lahf
push
jle
xchg
das
pushf
sarl
jmp
sti
ljmp
xor
iret
mov
out
pop
push
arpl
and
es
jp
sub
mov
mov
jmp
jle
sbb
loop
jbe
in
clc
and
jo
lock
xor
pop
mov
xchg
mov
outsl
push
out
les
xchg
sbb
mov
sbb
pop
xchg
mov
call
cmp
decl
dec
jmp
xchg
lds
or
lea
pop
dec
adc
enter
sbb
pushl
add
sub
jo
xor
cmp
dec
jne
pop
jnp
mov
dec
jne
and
jae
xor
jmp
inc
push
testb
mov
lahf
jb
jmp
insl
add
outsl
push
fwait
outsl
pop
jne,pt
xor
sti
je
jb
leave
xchg
les
mov
and
decl
sub
pop
addb
sahf
push
inc
mov
pop
mov
shl
test
pop
push
cmp
push
or
ds
inc
sub
or
push
xchg
or
daa
sbb
mov
inc
push
pop
neg
inc
int
mov
ds
adc
in
imul
inc
adc
stc
and
jne
faddl
enter
fwait
int
sahf
mov
jg
aaa
std
mov
mov
call
xor
lret
pop
fstp
cwtl
daa
mov
repz
loope
mov
mov
xchg
fcmovnu
jmp
test
mov
rcrl
xor
jecxz
xchg
and
xchg
jmp
inc
xchg
adc
test
pop
sbb
aam
jl
loop
push
in
push
jns
idiv
ljmp
cwtl
and
lods
push
adc
pushf
idivl
push
mov
adc
es
cmp
lret
mov
sahf
outsl
push
testl
int3
and
daa
pop
in
popf
bnd
pushf
mov
dec
mov
aaa
cmp
imul
and
xlat
nop
pop
xchg
jo
xlat
pushf
test
mov
decl
ret
dec
shll
push
pop
inc
cmpsl
in
sbb
push
add
jno
out
test
xor
mov
loop
insl
pop
in
xor
pop
inc
js
ss
jb
or
out
decl
rol
mov
rcl
outsl
and
sub
fisubrs
jns
adc
xchg
jmp
imul
fsubrs
out
cli
popf
sub
pop
pop
fiaddl
in
xor
in
xor
in
mov
sarl
pop
dec
das
js
sysret
pop
add
imul
inc
jno
cltd
movsl
lret
popf
jo
shlb
jmp
push
lock
pop
aad
jmp
cltd
lahf
dec
ret
cmp
fnstcw
cmp
cmpl
mov
pop
push
jmp
insl
xor
cld
sahf
pop
or
loopne
pushl
xchg
jne
jbe
add
adc
cmp
pop
pop
pusha
lds
cli
shrl
xchg
sub
jmp
out
push
jmp
push
xchg
xchg
mov
push
rcr
sbb
scas
test
dec
mov
insb
ret
mov
subb
xchg
or
fwait
jb
push
test
test
ljmp
aad
and
mov
jl
fidivrl
outsb
jecxz
lods
repz
push
add
int3
cmp
clc
lret
push
mov
out
xchg
adc
mov
pop
pusha
cwtl
ret
js
mov
jmp
dec
mov
movsl
scas
add
sbb
inc
ret
jnp
push
sub
rorb
stc
add
subl
pop
add
xor
lods
xchg
leave
inc
ret
ret
lret
mov
mov
fwait
pop
les
loop
rorb
or
ljmp
dec
stos
jae
mov
mov
ss
stos
ljmp
pusha
push
push
xchg
pop
call
lahf
mov
iret
popf
int
cmc
leave
cmp
addr16
inc
push
xor
adc
call
jo
push
in
sbb
mov
aam
or
fisubrs
call
jb
into
addr16
arpl
sbb
lock
sub
cli
mov
jmp
pop
ss
xor
xchg
repnz
mov
stos
cmpsl
inc
nop
testb
xchg
repnz
pushl
xor
addr16
cmp
sub
imul
test
push
movsb
inc
es
inc
push
rcrl
xchg
call
cmpsb
cltd
jns
sbb
test
jno
cmpsl
mov
mov
dec
enter
jmp
nop
call
movsl
popf
pop
push
sub
xor
add
push
test
mov
or
ja
jbe
into
pushf
mov
mov
lds
cmpsl
and
nop
ljmp
cs
mov
mov
xor
jmp
jno
adc
idivb
test
mov
pop
mov
and
and
cmp
ljmp
pusha
mov
imul
lods
pop
adc
fisttpl
sti
sahf
jmp
push
inc
pushl
dec
outsb
cmpsl
loop
push
jle
inc
nop
dec
fmull
out
in
loop
ljmp
or
inc
pop
pusha
xor
sbb
push
psubq
and
jmp
rcrl
in
or
jg
mov
mov
push
sub
dec
outsb
ljmp
push
cmp
insl
mov
xchg
ds
cmc
fistps
fbstp
movsb
out
in
push
lcall
mov
mov
clc
xor
jmp
fwait
sbb
mov
dec
jae
fwait
jmp
addb
mov
sahf
mov
sahf
cmpsl
in
dec
jle
subb
dec
pop
fldenv
push
xchg
lea
outsl
cmp
mov
enter
dec
sbb
nop
ret
idivl
jmp
decb
jbe
aam
or
add
pusha
cli
and
sub
cwtl
int3
subl
aad
sub
scas
sahf
movsb
fs
pop
aas
nop
jo
mov
dec
dec
aam
insb
xchg
add
mov
push
jnp
mov
mov
add
xor
xlat
xchg
scas
movsl
aas
add
pop
pop
lea
daa
in
inc
popf
nop
add
sub
ljmp
mov
lock
bound
cld
pop
pop
pusha
xchg
insl
notl
enter
add
jg
push
addb
xor
les
adc
imul
and
jmp
mov
cmp
mov
cmp
add
pop
loopne
fisubs
adc
adc
decl
inc
inc
stc
inc
lds
popf
fldcw
arpl
jecxz
add
imul
int3
sub
jmp
cmpsb
lcall
sar
int3
shlb
sbb
push
add
mov
pop
push
ret
fs
sbb
pushf
lcall
sbb
and
pop
stc
hlt
dec
aas
xchg
dec
push
push
or
sti
loopne
lds
iret
ja
and
mov
mov
icebp
xor
add
loope
adc
pop
out
sbb
push
inc
out
mov
jmp
out
push
sahf
add
inc
sbb
pushf
jo
sub
cld
fimuls
sub
testl
shrl
ljmp
or
ret
jae
push
push
ret
orl
cmp
imul
out
mov
decl
call
rorb
jecxz
mov
mov
stc
mov
es
push
in
jg
dec
test
mov
xlat
fstl
pop
cmpsb
pop
cmp
ret
orb
jmp
clc
mov
lret
pop
add
pop
dec
orl
cmpsb
xchg
out
pmullw
cmpsl
pushl
jl
test
into
xchg
scas
lcall
or
mov
cltd
test
ljmp
or
pushl
dec
fsubrl
pop
iret
test
xor
nop
xor
sub
pushl
lock
mov
mov
loopne
push
sbb
ja
ret
jns
aas
les
insl
mov
std
xchg
mov
negb
or
clc
xor
add
incl
sbb
mov
or
xor
mov
fs
addr16
pop
and
jno
popf
jnp
addb
es
cmp
add
jb
adc
sahf
sub
dec
daa
sub
jmp
mov
imul
mov
aam
or
js
mov
mov
bound
and
mov
lret
add
call
adc
pop
push
push
insb
mov
cmp
lret
aam
test
incl
das
mov
aas
or
add
ficoms
loopne
adc
cmp
hlt
cmpsb
and
jmp
les
repz
lahf
sarb
fsubr
clc
jle
insb
push
pop
call
sub
ljmp
std
xchg
xor
add
adc
mov
add
push
dec
ret
sub
pushl
sub
ret
in
xor
hlt
mov
lds
fadds
aam
jg
neg
push
mov
xchg
push
mov
idivb
fisttpl
rcl
xor
testb
xchg
sbb
fisubl
bound
mulb
lret
shlb
mov
loopne
fimull
clc
cmp
ljmp
aaa
xchg
cwtl
pop
and
pop
xor
adc
popf
jle
cs
mov
dec
idiv
call
inc
mov
cmpsb
sub
fiadds
adc
leave
cmp
lods
orb
xor
fdivl
call
xor
jns
push
pop
cld
mov
iret
in
jl
scas
aas
jns
jbe
sbb
pushf
mov
incl
jmp
lea
pushf
pusha
mov
mov
call
mov
dec
nop
sar
call
xchg
pushf
and
loop
push
lahf
pop
xchg
jp
shll
xor
and
pushl
loope
aas
sbb
sbb
sbb
insl
in
cmp
cli
pop
ljmp
call
pop
mov
arpl
mov
push
hlt
xchg
sub
jne
and
aas
lret
pushl
daa
and
pop
clc
jne
daa
mov
push
mov
lods
loope
cmp
sub
call
repnz
cli
test
xor
nop
mov
int
cmp
add
ljmp
nop
mov
inc
sahf
mov
scas
mov
test
pop
imul
pushl
push
push
int
push
xchg
fwait
pop
push
inc
dec
fstl
xchg
mov
inc
jmp
mov
aad
decl
jg
pop
int
popa
cpuid
mov
ret
sub
rolb
popa
push
out
div
push
jmp
out
cmc
movsb
xchg
cld
icebp
stc
repnz
xor
jmp
pop
inc
xchg
call
mov
sbb
inc
push
out
in
adc
mov
inc
lock
fs
std
mov
divl
and
shrb
test
incl
adc
lds
jns,pt
and
and
and
pop
and
xor
decl
test
sbb
pushf
jnp
aad
add
pop
cmpsw
xchg
jb
arpl
mov
push
into
ljmp
scas
adc
or
push
pop
and
add
rcrb
cld
xor
xchg
icebp
stos
cwtl
or
pop
sti
jno
xchg
dec
outsb
pushf
test
mov
sti
int
inc
mov
mov
dec
cmp
les
out
test
lcall
ror
pop
add
adcb
sbb
fisubl
fidivrs
dec
add
sbb
push
movsl
ljmp
push
sub
rorl
scas
jno
or
enter
push
pop
xor
mov
cld
mov
xchg
xchg
scas
sbb
pusha
or
lret
loopne
outsl
icebp
les
call
pop
xchg
cmp
push
cmp
adc
outsb
jmp
pop
cmp
jns
inc
add
push
dec
je
lcall
and
js
add
xor
ficomps
jmp
pop
in
in
jmp
fucomip
pop
sub
in
in
andl
jne
int
xchg
loope
fs
jmp
sar
ljmp
pop
inc
xor
mov
mov
nop
roll
and
xchg
mov
push
mov
jp
sbb
sub
shl
mov
push
or
jno
clc
outsl
test
jmp
scas
add
mov
inc
add
xchg
lahf
push
orl
xlat
out
sbb
pop
jl
addr16
inc
jb
sub
sbb
adc
hlt
add
cltd
sar
addr16
or
pushl
adc
loopne
jle
lahf
inc
and
outsl
inc
add
int3
out
test
decl
add
sub
test
fwait
mov
loopne
mov
inc
pop
mov
fwait
data16
inc
and
mov
lret
loop
cmpsb
sub
je
dec
fimuls
imul
jmp
addr16
popa
jmp
inc
in
pop
push
stos
mov
jo
pop
mov
push
scas
xchg
adc
mov
jns
xlat
inc
and
out
test
jmp
inc
and
sbb
mov
pop
inc
jmp
cmpl
lret
add
int3
mov
inc
pop
or
and
clc
jmp
mov
sahf
pop
adc
xor
push
jnp
push
push
inc
xchg
xchg
add
cmp
in
shl
fdivr
jmp
subb
ja
jnp
pushf
add
cmc
dec
out
jne
sbb
insb
push
sbbl
adc
decl
inc
or
in
mov
pop
sbb
push
scas
inc
add
jbe
mov
xchg
sbb
inc
ljmp
mov
sbb
movsb
jp
fimuls
fdiv
push
xor
jno
ret
inc
clc
addr16
push
pop
sbb
fnstsw
jecxz
push
and
sarb
push
sarb
jmp
pop
xchg
cmp
out
xchg
mov
push
pop
int
xchg
add
or
mov
push
pop
and
ljmp
sub
enter
fiadds
out
mov
movsb
and
loope
decb
jmp
mov
pusha
sti
fisubrs
fildl
push
fucomi
and
lea
sti
dec
decl
popf
shl
jmp
imul
cmp
flds
enter
aaa
pop
decb
incl
jbe
jno
mov
mov
fnsave
pop
bound
inc
gs
jle
ss
push
push
mov
and
mov
subb
xchg
fisubl
mov
jecxz
jmp
mov
jmp
cmpb
or
sti
cmp
jno
push
push
sub
jmp
mov
cmpsl
fwait
jne
sbb
cmpsl
ljmp
out
outsl
push
imul
push
jae
shll
add
cmp
pop
stos
mov
sub
or
mov
lcall
pop
adc
jns
and
shrl
jmp
clc
xchg
xchg
shr
adc
pop
ljmp
cmc
hlt
rcrb
rclb
and
mov
inc
ret
out
xchg
movsb
cld
das
cmp
pop
int3
xchg
dec
pop
out
dec
push
sti
mov
mov
leave
sbb
mov
test
ret
pop
aas
ds
iret
xchg
jge
mov
pop
movb
sbb
cli
aas
mov
mov
ljmp
sbbl
push
xor
mov
ds
shlb
leave
add
add
int3
pop
add
je
pop
push
incl
pop
xlat
sti
pushf
xchg
mov
scas
mov
jbe
imul
mov
out
test
lds
decl
sub
jb
and
or
and
pop
adcb
shll
insb
sub
loopne
cmp
adc
jge
mov
outsb
mov
cs
idivb
cmp
sub
mov
jge
gs
pushl
mov
xchg
lret
das
sbb
dec
roll
lods
mov
inc
adc
scas
decl
cmp
sahf
imul
sub
pop
xchg
push
hlt
pop
fisubs
sub
jmp
out
cld
and
cmpsl
sub
and
xchg
mov
scas
xchg
push
inc
ss
jle
xchg
pop
jnp
adc
jmp
dec
jle
sub
ret
int3
aaa
fwait
js
xchg
shl
or
add
cmp
imul
call
fs
or
jnp
xlat
dec
rol
adc
inc
hlt
inc
enter
les
call
pusha
jl
lret
mov
mov
xchg
scas
shll
dec
mov
sbb
xchg
fimuls
jmp
and
sub
pop
xor
push
mov
leave
adc
dec
and
repnz
decl
mov
fwait
lcall
iret
int3
mov
mov
inc
in
imul
popa
lock
lea
jno
sub
or
inc
adc
add
lcall
jp
add
wrmsr
inc
out
pop
add
orl
cmpsl
fwait
lds
push
xorb
adc
mov
inc
push
inc
lods
adc
jp
mov
shlb
outsb
call
cmp
cmp
push
outsb
loopne
push
int3
jmp
push
shll
lods
movsb
mov
in
push
or
decl
sarl
sub
cli
push
xor
and
jno
aad
lret
incl
dec
lret
iret
jae
daa
lock
movsl
sub
in
je
jl
clc
add
mov
repz
fbld
xor
daa
xor
ja
jle
and
pop
in
sbb
ljmp
push
nop
pop
mov
jns
and
int
xchg
mov
inc
clc
insb
push
sar
decl
sub
adc
lock
push
or
and
fnstsw
jnp
popf
jecxz
pushl
cltd
ljmp
adc
out
insb
pusha
xor
jmp
inc
xchg
jmp
imul
std
js
and
ja
je
stos
dec
mov
push
jp
lret
mov
mov
das
lahf
les
lret
cmp
xor
imul
mov
push
mov
or
mov
xor
ss
mov
incb
mov
jp
imul
jmp
sub
or
test
lock
out
jns
outsl
xchg
jmp
lret
mov
add
pusha
aad
stos
pop
pop
into
lea
aam
outsl
push
lock
aaa
test
or
test
hlt
add
jnp
cmp
movsl
cli
ret
in
iret
fldt
cmp
inc
jp
push
pop
cmc
mov
popa
add
cmp
scas
push
incl
pop
push
call
mov
push
mov
cmp
sub
mov
cli
push
ljmp
repnz
enter
jle
jecxz
cwtl
xlat
cltd
adc
aad
mov
call
stos
sub
shlb
fwait
in
ret
push
call
sbb
aaa
pop
add
pop
pop
pop
inc
ljmp
adc
scas
mov
outsl
mov
stc
sub
cmc
mov
mov
xor
movsl
adc
jg
xchg
mov
push
push
cmpsb
pushl
into
sbb
push
push
inc
mov
mov
packssdw
bound
and
jmp
cmpsl
shrd
cli
loop
or
cmp
mov
pop
mov
rcrb
xlat
cmp
std
sub
mov
pop
sub
jg
test
xchg
out
test
imull
push
adc
int3
and
mov
out
cmp
push
jp
and
pushf
jae
or
ret
jne
cmpsl
jmp
je,pn
mov
xor
fmulp
cmp
out
dec
insb
sbb
or
pusha
xchg
push
arpl
decl
lcall
cmpsb
ja
lret
and
das
jns
fistpll
jo
call
lods
pop
sbb
fstpl
ljmp
jnp
cld
xor
call
decl
mov
mov
faddp
lahf
mov
push
shlb
filds
push
scas
test
and
call
xor
loopne
xchg
popa
lods
movl
pusha
loop
fldcw
xchg
xlat
xor
aam
dec
aas
and
jmp
dec
mov
test
mov
push
jmp
sbbb
pop
mov
ljmp
cmp
cmp
jmp
cli
jb
xor
movsl
es
in
mov
cmp
ds
cmp
jo
cmp
cmp
cli
outsl
fistl
dec
dec
cld
ds
jmp
lcall
pop
add
les
je
adc
mov
jmp
sub
jmp
push
shr
xlat
fwait
pop
xor
sahf
push
adc
sahf
mov
in
repz
ret
cs
sub
decl
insl
lcall
in
pop
das
imull
sti
std
mov
pop
jno
mov
jb
sbb
incl
jge
xchg
sbb
mov
testl
and
push
mov
js
popf
push
pop
pop
xor
ja
sbb
mov
into
push
jl
mov
xchg
call
cmpb
repnz
cmp
rorl
jnp
out
mov
loope
sarl
xchg
xor
mov
imul
jmp
outsb
sti
dec
movsb
jmp
sub
adc
xchg
icebp
push
cltd
jb
pop
pop
or
insl
pop
incl
or
jnp,pt
test
inc
jne
rcrl
and
fisttpll
mov
popf
and
int
inc
xor
pop
and
pop
mull
loop
ja
es
test
rclb
jbe
leave
mov
jno
jmp
sub
adc
mov
lret
sbb
sub
call
ljmp
std
in
dec
sub
add
and
lcall
testb
out
fwait
mov
mov
mov
add
push
and
cli
sbb
mov
pop
pop
cwtl
fadds
lock
mov
ja
hlt
or
les
push
xor
test
mov
stos
pop
test
xchg
pop
or
das
je
ds
fisttpll
jno
ljmp
mov
adc
xor
ds
push
fsts
subl
lcall
pop
mov
pop
incl
mov
inc
icebp
insl
sub
cwtl
mov
sbb
ljmp
jmp
ja
scas
xchg
dec
insb
mov
ss
and
mov
scas
pushf
pop
and
jmp
arpl
fsubrs
addb
dec
pop
adc
xorl
mov
sbb
test
pushl
push
add
dec
xor
int3
xor
xchg
jmp
jns
clc
out
jno
mov
cld
sbb
aaa
outsb
test
mov
xor
pop
lcall
sbb
std
adc
sub
pop
inc
fnstsw
push
daa
lods
hlt
daa
enter
jmp
outsb
inc
cmp
aam
dec
movsl
aad
dec
sbb
pop
js
add
xchg
dec
mov
mov
decl
mov
xchg
inc
mov
ljmp
mov
jecxz
mov
mov
jmp
js
mov
mov
insl
jbe
add
dec
push
mov
stos
mov
cmp
sbb
mov
mov
ret
fcom
pushl
jmp
and
mov
mov
cld
gs
or
ljmp
add
push
cld
fmuls
jne
or
jge
jecxz
lret
inc
jmp
jecxz
xor
outsl
adc
xchg
test
dec
add
cwtl
xor
mov
pop
aas
dec
lcall
lds
cld
push
inc
dec
dec
mov
adc
push
mov
fisubrs
out
js
ljmp
fwait
scas
cld
xchg
inc
mov
nop
lds
pop
mov
int
xchg
jle
daa
cwtl
push
lcall
sbb
addl
je
inc
mov
xorb
in
into
es
jp
fistps
rolb
mov
jge
mov
test
pop
scas
cmpsb
insb
ss
call
les
mov
popf
push
in
jle
mov
jb
cmp
arpl
in
cmp
fwait
insl
dec
pushl
mov
xchg
mov
cmc
mov
dec
mov
pop
stos
fadds
pop
movsl
xchg
mov
dec
mov
pop
je
xchg
push
push
jle
pushf
xor
mov
sbb
mov
inc
fstps
jns
lcall
xor
jo
mov
sub
pop
icebp
add
dec
pop
mov
push
nop
inc
loope
inc
sub
repz
rorb
jb
je
push
cmpsl
bnd
mov
testb
in
jmp
pop
lahf
jg
pop
cmp
inc
out
adc
dec
xor
cltd
and
pop
call
push
or
or
push
js
ss
mov
jnp
mov
test
clc
jmp
dec
push
and
inc
fnstcw
mov
outsb
std
arpl
int3
test
add
inc
loop
es
jg
js
data16
lahf
cmp
mov
jg
inc
adc
lods
outsb
arpl
ljmp
pop
outsl
mov
fistpll
xchg
lea
ljmp
icebp
jmp
pushl
sahf
pop
fbstp
cmpsl
int3
dec
inc
dec
imul
mov
inc
mov
dec
clc
scas
mov
inc
pop
mov
pop
sbb
xor
je
in
pop
fldcw
jp
mov
sub
les
dec
stc
sub
mov
dec
push
and
gs
mov
fwait
add
into
pushf
pop
dec
idivl
mov
call
pop
mov
aas
lret
jmp
repz
and
call
lret
pop
mov
pop
insl
cltd
lahf
daa
cmpb
adc
or
add
push
xchg
lcall
lds
out
xchg
push
push
loop
xchg
adcb
or
imul
cmp
dec
call
fisttpl
popf
mov
xchg
xor
inc
enter
aam
rclb
mov
mov
lcall
lods
ss
cs
fcomip
mov
or
divb
push
sbb
ss
jmp
adc
orb
xor
push
push
push
jp
cmpsl
jl
jns
xor
in
ljmp
add
clc
loopw
mov
push
xchg
or
cs
decl
push
repnz
leave
aad
adc
inc
test
outsb
in
xor
fistpll
cmp
mov
sti
mov
cmp
pop
aaa
xchg
daa
adc
frstor
mov
popa
js
incl
pop
jmp
and
out
fstl
enter
cmc
jle
ret
testb
jmp
inc
fmulp
imul
push
sub
in
sti
jecxz
leave
xor
push
aam
insb
xlat
ds
mov
pop
ljmp
pop
aad
rcrl
dec
fcmovb
cmp
jae
decl
insl
into
adc
into
scas
pusha
mov
addr16
mov
mov
or
and
mov
cmpsb
mov
xchg
out
leave
xchg
dec
sbb
sar
mov
in
pop
add
fwait
sbb
cmp
out
out
mov
loop
inc
cmp
outsb
lds
fwait
js
cli
int
and
xlat
das
movsb
ljmp
pop
fdiv
xor
sahf
imul
pop
rcrl
dec
clc
and
out
lods
pop
testl
shlb
mov
sbb
inc
and
das
leave
cmp
add
out
dec
dec
cs
pop
dec
xchg
or
pusha
lahf
xchg
popa
mov
insb
adc
pushf
shll
aad
fstpt
mov
dec
xlat
fistl
cs
inc
aad
jecxz
std
and
dec
mov
xchg
divl
adc
jmp
pusha
fs
loop
imul
dec
inc
pusha
aad
sahf
add
int3
cmpsb
enter
rorl
call
pop
or
mov
sub
add
add
insl
les
mov
pop
loopne
fsub
incl
enter
stos
push
lea
jb
shrb
sbb
outsl
pop
shll
pop
call
lcall
loop
jl
mov
ja
sbb
jecxz
cmp
fbstp
pop
mov
sub
call
arpl
cltd
fcoms
inc
lret
aam
dec
mull
ja
repnz
jnp
incl
sbb
lods
popa
mov
imul
sub
insl
dec
inc
js
scas
inc
add
or
in
jmp
inc
push
jp
out
lcall
vorpd
out
push
leave
hlt
and
sub
inc
xchg
test
js
jnp
adc
rorl
xchg
out
ret
into
sbb
pushl
push
ja
lcallw
inc
jle
push
xor
push
mov
pop
mov
decl
stc
dec
cmc
popa
movsb
decl
gs
popl
out
push
and
xchg
sbb
call
jb
cmpsl
dec
push
ret
lock
fistps
dec
mov
jge
push
push
inc
inc
xchg
in
es
ljmp
mov
add
clc
jns
rcl
jo
nop
test
cmp
fadd
insl
inc
jmp
cmp
jb
insl
pop
push
cmpsl
std
mov
imul
fildl
mov
push
jmp
cmpsl
add
and
cmp
mov
sub
pop
dec
mov
xor
push
xor
inc
pusha
mov
or
xorl
stos
mov
clc
push
adc
push
lret
sub
loop
decl
sub
fidivrs
pop
push
xchg
xchg
and
cmc
pushf
mov
inc
stos
jle
decl
call
sbb
data16
cmp
or
mov
add
push
dec
cwtl
jmp
cmp
add
adc
adc
and
mov
adc
dec
mov
fisttps
jmp
cs
push
cmp
or
mov
fwait
xor
pop
aad
push
mov
mov
lcall
sub
jb
xor
mov
or
cltd
or
pop
gs
movsl
mov
loopne
scas
jmp
ljmp
fists
sub
insb
push
jns
cmpsl
inc
mov
pop
xchg
cmp
inc
hlt
pop
cmpsl
cltd
inc
pop
jecxz
inc
push
xor
cmc
mov
mov
cmc
pop
cmp
aaa
cmp
into
outsb
mov
addb
mov
mov
push
mov
push
loop
inc
xor
mov
inc
stc
rorl
adc
shl
pop
enter
mov
outsb
std
fwait
popa
in
ds
call
sub
movsl
push
xchg
je
sbb
pop
jo
fcmove
dec
jle
push
aad
sbb
and
inc
out
adc
aaa
pop
sub
pop
loop
in
sub
cmc
dec
sub
iret
movsl
inc
mov
lds
pushl
and
gs
dec
loop
cld
arpl
les
cld
inc
rolb
pushl
add
mov
idivl
imul
sub
mov
jae
test
cmp
mov
lock
lahf
add
cmp
les
sbb
inc
mov
or
js
mov
pop
cmc
inc
mov
dec
inc
push
bnd
dec
push
shl
push
mov
jo
mov
xlat
loop
push
xchg
lcall
lods
sub
sbb
outsb
loop
adc
xor
cmp
loop
add
push
int
mov
inc
sub
sub
repz
ret
call
add
cmp
shll
movsl
xorl
shl
sbb
xlat
or
mov
in
decl
out
mov
iret
mov
andl
mov
cs
aaa
or
pushl
xor
lea
inc
pop
out
fdivr
leave
int3
insl
mov
fs
out
cmp
mov
adc
xchg
addl
call
xor
mov
mov
push
xor
xlat
add
mov
in
in
xchg
mov
ss
scas
aaa
xchg
popa
xor
mov
sbb
mov
in
and
js
jns
scas
insb
pop
push
pop
mov
repnz
inc
sti
je
pop
sub
ljmp
inc
enter
cmpsb
pop
inc
cmp
mov
mov
mov
pop
adc
addr16
call
sub
out
sbb
repnz
sti
clc
jbe
dec
fldenv
hlt
cmpsb
xchg
std
adc
inc
cmpsb
push
fnsave
and
mov
push
cmp
inc
jg
jp
jl
push
adc
and
jne
icebp
ja
push
jno,pt
pushf
mov
jecxz
xor
ljmp
addr16
inc
and
add
lods
aas
pop
inc
jo
sub
add
loope
xchg
cmp
test
decl
lcall
push
jno
add
mov
jecxz
adc
addb
pushf
decl
push
jo
adc
fisubrl
adc
and
pop
adc
loopne
scas
push
mov
push
pop
xor
sub
movsb
sbb
stos
aam
jnp
sbb
loop
sbb
cwtl
jns
call
jne
mov
and
fdivs
jp
cmp
dec
lret
or
push
sbb
cs
decl
adcl
cmp
xlat
push
mov
mov
mov
inc
out
sub
inc
pushf
or
lock
aas
jle
into
fs
pusha
jnp
insb
movsl
and
add
lcall
mov
shrb
xor
mov
cs
jg
xor
sub
lcall
mov
mov
push
lcall
stos
sub
sbb
pop
inc
dec
lea
fldl
decl
aas
lcall
sub
and
add
push
dec
test
sub
jmp
and
stc
lock
out
inc
inc
jnp
cmc
add
mov
jg
test
mov
inc
xchg
jmp
xchg
cmp
xor
decl
cmp
push
and
jp
aad
xor
imul
mov
call
hlt
and
dec
xchg
inc
xchg
inc
ss
jo
sbb
xor
scas
lcall
scas
and
ret
and
repnz
mov
pop
xlat
movsb
aad
push
cmp
ljmp
cmp
popa
sarb
inc
push
ja
xchg
xchg
mov
dec
pop
emms
adc
jp
decl
out
scas
push
or
pushf
jbe
lods
scas
shlb
int3
pop
test
shrl
call
sahf
inc
add
inc
dec
jmp
push
fsin
js
lods
out
add
cs
mov
sub
push
pop
add
inc
jecxz
gs
fsubs
mov
out
sbb
push
add
push
add
js
xor
dec
and
cmp
gs
lds
mov
insb
jg
mov
sti
lcall
lret
mov
mov
dec
test
pusha
out
lds
pop
test
pushl
cmp
push
out
cmpsb
sub
add
mov
cmpsb
fldt
inc
xlat
outsl
add
cmpsl
loop
sub
inc
xor
outsl
pop
and
jl
jecxz
jo
cmpsb
cmp
ficomps
xchg
xlat
or
mov
sti
and
push
xchg
pop
enter
push
jno
push
cwtl
jecxz
jae
insb
fcomi
or
jmp
mov
es
push
adc
ja
adc
imul
xchg
dec
or
jne
adc
call
cmp
xor
inc
sbbl
dec
jnp
jmp
pop
imul
push
pushf
imul
aad
mov
ja
stc
in
pop
inc
xchg
cmp
incl
jmp
out
push
lods
cmc
jns
mov
insb
xchg
add
xlat
lds
mov
shl
lcall
mov
mov
cs
dec
aam
xor
aam
jg
negb
repz
mov
add
pop
push
shl
cmp
jns
pop
push
int
xorl
gs
adc
jmp
jmp
data16
imul
popf
jmp
cmc
mov
push
scas
into
xchg
call
dec
adcl
pusha
pop
jl
les
xchg
mov
and
fsubr
scas
dec
fs
jp
lcall
adc
icebp
test
imul
xchg
xor
push
mov
loopne
decl
and
cmpsb
dec
inc
add
scas
ljmp
pushf
push
dec
adc
lcall
mov
and
scas
push
andb
mov
cs
pop
mov
mov
and
ret
movsl
mov
lds
loope
adc
mov
cmc
adc
sub
insb
insl
inc
mov
pop
bound
lcall
mov
jg
inc
pop
mov
mov
inc
dec
out
in
pop
mov
xchg
fcomps
incl
and
mov
mov
bound
inc
stos
lea
sbb
mov
ljmp
mov
mov
xchg
xchg
mov
mov
out
jmp
sub
outsb
call
and
insb
das
mov
dec
movsl
jb
ljmp
jmp
jbe
inc
loopne
lret
sub
ljmp
pop
sub
daa
mov
inc
xchg
inc
mov
mov
lahf
pop
adc
ljmp
mov
lds
rcll
shlb
sbb
pop
int
and
pushl
add
sbb
lock
gs
das
dec
dec
mov
inc
sub
or
or
mov
or
ljmp
or
and
or
dec
mov
fldl
fcompl
insb
add
cmpsl
fdivrp
pushl
inc
dec
ret
adc
push
movsl
inc
hlt
adc
imul
cmp
call
pop
mov
aad
ret
cmc
out
adc
je
call
icebp
jle
incl
hlt
add
jmp
mov
jne
lea
and
mov
mov
rcrb
decl
stos
jae
push
cld
sahf
icebp
outsl
stos
cltd
and
push
nop
push
fildll
jmp
clc
xor
adc
mov
inc
sbb
dec
lcall
jmp
out
xor
imul
cwtl
xchg
sbb
aas
pop
xor
pop
push
mov
test
and
repnz
or
inc
mov
jno
xchg
sbb
popf
mov
push
jmp
xor
sti
pop
pop
push
inc
mov
mov
ret
decl
lahf
sbb
cmpb
pop
jp
mov
dec
pop
mov
xchg
jp
lock
jmp
shrl
cmpsl
adc
adc
xor
jge
add
mov
mov
imul
incl
das
add
inc
mov
pop
adc
call
mov
sahf
mov
incl
lea
pop
cld
jle
adc
dec
loop
setle
inc
push
imul
testb
dec
add
pop
pop
int
sub
in
leave
repnz
mov
push
sub
jmp
mov
jbe
jmp
dec
push
fidivrl
mov
push
add
push
or
xchg
xchg
mov
push
cs
call
popf
test
insl
mov
imul
decl
mov
mov
xchg
shll
xor
outsb
adc
fnsave
cmpl
jl
adc
in
jge
xor
ljmp
enter
rorb
jmp
and
imul
push
dec
cmpsb
add
xchg
shrl
jmp
lcall
outsb
stc
lret
sub
inc
ret
pushf
std
setg
jg
xchg
cmc
test
push
dec
cmp
xchg
pop
mov
push
into
lods
testb
dec
imul
js
and
and
cmp
jl
aad
mov
sub
lahf
cltd
out
push
sti
popa
icebp
fdivrl
lcall
jge
ja
les
mov
test
rorl
jmp
call
xchg
sub
pushf
xchg
cmp
lds
mov
jle
xchg
or
decl
pop
cmc
movsb
or
cmp
jg
jo
xchg
test
pop
sbb
cli
cmp
rcll
jmp
xor
xor
repz
cmp
add
int
jmp
xchg
subl
pushl
lahf
xchg
xor
jno
stos
add
mov
mov
fwait
inc
scas
lods
pop
xor
mov
sar
call
add
cs
int
and
sahf
mov
or
out
mov
call
dec
jae
xor
mov
adc
mov
data16
in
mov
sbb
call
scas
push
xchg
pushl
xor
out
xor
dec
cmp
cli
xlat
out
maskmovq
xorb
cmp
lcall
cmp
imul
bound
arpl
mov
aaa
adc
lahf
pop
imul
pop
rorb
aad
dec
sbb
ds
lcall
jp
cwtl
and
jnp
insb
pop
popf
pop
sbb
cwtl
mov
movsb
ss
mul
push
pop
jb
sub
add
lcall
aaa
rclb
push
jno
sti
pusha
lret
and
movsb
scas
js
insl
xor
inc
mov
jle
test
jns
int
cmp
adc
stos
push
push
or
pop
out
dec
jg
cmp
and
push
xor
sar
in
or
cmp
adc
sbb
mov
lcall
call
pusha
mov
call
popa
shlb
xchg
lcall
shlb
fucomp
mov
decl
pop
xchg
pop
movsb
mov
xor
mov
das
push
icebp
add
xlat
dec
loop
and
incl
xor
ret
fdivrp
mov
ds
in
inc
fcoml
call
xchg
mov
mov
call
wrmsr
pop
jmp
int3
pop
fs
xor
subl
sbb
jns
push
inc
jmp
in
pushf
inc
daa
bound
add
lret
insl
mov
pop
cmpsl
jb
pop
ljmp
jbe
stos
dec
sub
pop
popa
adc
mov
mov
dec
jl
ja
adc
xchg
jg
test
and
mov
and
or
out
jbe
ljmp
mov
stos
adc
ss
pminsw
inc
mov
dec
repnz
push
adc
and
inc
decl
sub
jg
ret
push
dec
inc
jne
leave
mov
cmp
data16
leave
dec
aad
cli
cli
push
test
mov
jecxz
inc
adc
jns
test
sti
imull
fidivrs
or
call
jl
xor
fstpl
xchg
lods
in
adc
imul
fadds
in
jne
pop
roll
icebp
mov
arpl
jmp
fs
mov
stc
loope
insb
or
cmc
clc
xchg
add
xchg
shlb
test
ret
mov
mov
decl
dec
xchg
jne
and
sahf
add
mov
add
ljmp
cs
dec
dec
cmpsb
pop
adc
call
inc
lret
dec
or
add
cld
and
mov
inc
lods
sahf
orb
or
out
inc
mov
and
pop
mov
xchg
xchg
cmp
jge
es
cmp
sahf
push
dec
sbb
dec
mov
cwtl
into
xchg
fs
xlat
pop
leave
scas
sub
decl
cmp
loopne
pop
and
cmp
mov
adc
lcall
mov
bnd
addr16
ja
lods
xchg
lcall
add
adc
mov
dec
jecxz
decl
mov
call
dec
rolb
jae
jge
repnz
hlt
cltd
cwtl
ljmp
mov
test
and
iret
aam
mov
adc
xchg
lret
mov
jmp
add
lods
push
and
mov
daa
mov
xor
movb
add
cmp
call
xchg
sub
in
mov
jbe
inc
mov
sbb
in
test
stc
sub
decl
ja
jbe
sbb
fsubl
sbb
xchg
int
and
push
pushf
push
mov
pop
aaa
arpl
mov
cli
mov
push
fcos
pushl
and
outsb
int
ljmp
xchg
outsl
js
cmp
jne
mov
pop
daa
incl
dec
fdivs
pusha
sti
and
fiadds
mov
popl
popa
fs
xchg
jmp
jmp
leave
add
out
mov
mov
xchg
jnp
loope
and
dec
xchg
jae
lahf
shll
call
imul
mov
mov
xor
lds
adc
adc
sbb
loope
incl
xorl
mov
lods
cmp
sbb
fsubrs
repz
rorl
inc
pop
int
jmp
push
into
adc
adc
push
mov
scas
movsb
fs
add
sub
ret
jne,pn
call
xchg
adc
and
inc
testl
mov
fdivrl
es
shll
cltd
incb
dec
dec
sarb
fmulp
jg
roll
repnz
add
jmp
dec
mov
cltd
jno
out
decl
mul
adc
insb
ficomps
and
fidivrs
cmp
cmpsb
out
pop
adc
rcrl
test
aad
xor
mov
jns
outsl
scas
loop
idiv
pushl
mov
pop
mov
hlt
adc
mov
sbb
test
sahf
pop
adc
mov
incl
push
cwtl
js
fmuls
adc
cmp
ret
sub
jl
popa
pop
lds
lcall
mov
out
pop
subl
sub
dec
test
add
jle
add
xchg
xor
icebp
test
pushf
and
int3
jbe
lds
add
xor
cmc
push
dec
cmp
inc
jge
cmp
scas
add
mov
push
popf
mov
dec
movsb
fcomi
dec
pop
in
push
push
mov
jne
pop
js
test
sub
cmp
idivl
fistl
push
add
pop
clc
pop
jmp
cwtl
lahf
dec
mov
or
out
test
cs
testb
mov
xlat
push
rorl
xchg
and
lcall
loopne,pt
inc
dec
movsb
and
adc
rolb
popa
and
inc
push
dec
clc
inc
cmp
addr16
fsubrl
adc
es
inc
jne
mov
das
mov
xchg
lods
ljmp
stos
out
jge
pusha
ret
pop
adc
repnz
hlt
das
lahf
dec
jno,pt
adc
out
jl
call
dec
inc
push
pop
loopne
fmulp
lock
xchg
or
mov
lret
mov
in
xlat
cwtl
test
xlat
lcall
mov
jbe
fsubrs
adc
push
mov
pop
mov
repnz
jp
out
sbb
jecxz
dec
in
aam
fwait
cwtl
cmpsb
jl
pusha
inc
jg
xor
rcr
xchg
lcall
hlt
jnp
dec
enter
pop
cmp
fdivrs
xchg
call
neg
mov
sbb
js
fcomp
push
mov
lahf
push
xchg
mov
inc
jno
mov
cmp
pop
in
sub
jg
scas
sub
insb
sbb
add
add
push
lcall
enter
xchg
cmp
mov
enter
jae
adc
mov
mov
sbbb
repnz
cmpl
or
mov
out
adc
lcall
adc
mov
imul
xchg
ret
ret
lret
cmp
push
jp
inc
push
aad
call
inc
test
adc
xorl
inc
jmp
mov
fisubrl
cmp
pushl
mov
stc
test
subb
sbb
enter
scas
outsl
or
decl
es
mov
and
dec
loop
add
insl
cli
cltd
gs
adc
inc
pushl
addr16
sbb
iret
mov
cltd
sub
xchg
scas
xchg
jae
pop
add
pop
incl
push
mov
pop
call
enter
rcrb
sbb
jbe
and
pushl
push
movsb
mov
mov
daa
sbbl
lahf
sbb
out
adc
mov
jecxz
pushl
cmp
fisttpl
inc
xchg
push
dec
mov
pushf
int
lods
pop
dec
lret
push
xor
incl
rcll
push
jecxz
pop
addb
lret
add
push
or
out
and
out
ret
inc
xor
push
sub
mov
mov
call
dec
xchg
push
jmp
add
inc
xchg
mov
leave
pop
sbb
adcb
fsts
nop
ljmp
movsl
sub
outsb
pop
adc
xor
nop
fwait
insb
push
lret
adc
aad
mov
sar
fistpll
call
pop
xchg
mov
cmpl
and
cld
push
adc
adc
das
mov
es
push
xchg
mov
lcall
sbb
lods
dec
fwait
lret
mov
cmp
cmp
test
std
push
adc
jo
test
ret
into
cmpl
and
cmp
decl
mov
addr16
icebp
rolb
jle
in
jl
sub
test
push
cmpps
lcall
dec
sbb
es
and
pusha
mov
incl
rcl
out
repz
pop
push
das
xor
inc
push
subb
xor
decl
mov
fimuls
lods
movb
or
imul
lcall
push
ret
loopne
cld
enter
imul
xor
incl
xor
mov
push
popl
sub
mov
xchg
or
jns
xchg
xor
fistpll
in
sub
sbb
pop
pop
pop
int
test
addr16
inc
je
fwait
pop
decl
mov
lcall
jns
mov
ret
dec
xchg
sub
xor
mov
hlt
cli
jl
incl
mov
test
adc
lods
enter
dec
es
test
push
pop
jns
ja
inc
test
jmp
jnp
pop
ss
mov
mov
adc
pop
in
notb
ds
clc
ret
fld
fwait
inc
cmp
ss
push
adc
lock
mov
and
add
push
sub
jmp
jmp
lahf
loope
fs
push
sbb
cmp
jge
stc
inc
xor
lcall
push
push
scas
cmpsb
sub
push
mov
movsl
sarb
push
inc
mov
addl
lcall
adc
pop
or
mov
adc
xor
movsb
add
mov
int3
into
idivl
dec
fsubr
jg
addr16
icebp
ljmp
outsb
je
lds
push
ljmp
pop
cmpb
movsl
les
and
cmpsl
popl
sub
fidivs
out
mov
shll
lcall
xlat
xorb
adc
ljmp
ficoms
adc
jo
fs
ret
inc
repz
or
adc
mov
lcall
cmc
jnp
xorb
in
mov
jmp
decl
fwait
ja
mov
cmp
decl
lea
mov
in
mov
xor
out
scas
es
push
jbe
sbb
f2xm1
mov
fildl
scas
repz
es
lret
lock
pop
rclb
hlt
inc
push
dec
xchg
aaa
call
jmp
mov
out
or
inc
inc
xchg
xor
mov
and
test
and
incl
mov
mov
xchg
out
sub
xor
stos
imull
ds
push
std
call
push
fimull
xor
adcl
addr16
icebp
std
jmp
lds
shlb
or
lods
and
xor
aad
pop
inc
sbb
mov
decl
lret
stc
xor
imul
lcall
xor
pop
int
in
pushl
movsb
sub
into
xchg
mov
xchg
jmp
add
repnz
or
cli
loope
dec
pushl
sub
inc
fsts
push
sub
push
and
add
xor
xchg
xchg
pop
and
xlat
pop
popf
fs
cmpsl
fidivl
pop
bound
add
mov
jmp
push
inc
dec
data16
test
push
aam
mov
stos
cmpsb
mov
orl
jae
add
jnp
daa
cmpsl
inc
xlat
js
aam
clc
xor
mov
add
ficoms
sub
decl
cltd
adc
or
mov
dec
sub
shll
iret
add
lret
lods
mov
insl
loope
pop
mov
loopne
ret
nop
hlt
leave
lcall
mov
lahf
clc
mov
fs
dec
enter
ljmp
sub
cmc
fcomps
pop
mov
loop
xor
scas
pop
jmp
movsb
dec
adc
leave
sub
mov
mov
jno
pusha
sub
iret
jbe
xor
and
xchg
sub
lcall
dec
pop
push
shl
call
cmp
push
add
add
ljmp
call
clc
xchg
mov
insb
push
pop
cmp
pop
cmp
stos
jmp
cmp
call
mov
push
inc
out
xorb
les
mov
jmp
mov
paddd
decl
sbb
les
jns
cmpsb
inc
ja
mov
and
ja
lcall
ljmp
push
xchg
or
mov
test
mull
pop
insb
fmull
jnp
out
outsb
jg
push
xchg
or
and
sti
test
mov
les
adc
aaa
sbb
sub
icebp
icebp
sub
fwait
incl
sahf
fldenv
lret
inc
outsl
cltd
arpl
test
jp
int3
ljmp
aaa
mov
cmp
add
popa
add
or
add
pop
inc
mov
xchg
je
inc
xchg
dec
incl
push
and
icebp
shlb
xchg
or
mov
jnp
jbe
sahf
push
cmc
cmp
jmp
je
fdivr
out
in
adcl
ficomps
scas
fsubp
push
sbbb
or
out
jmp
push
jmp
sub
sub
pop
jl
lret
xor
cwtl
push
or
jmp
scas
es
xchg
pop
ja
pop
push
push
daa
fidivs
push
dec
cmp
mov
mov
jmp
or
mov
cs
outsl
out
dec
jne
mov
inc
pop
popl
xor
pushl
xchg
inc
dec
xor
stos
bound
es
add
mov
roll
and
je
idivl
ljmp
test
xchg
test
das
mov
inc
ficompl
gs
mov
lcall
mov
push
sbb
pusha
fbstp
insl
xchg
lea
jecxz
push
in
jp
jmp
aas
out
jle
stos
mov
bnd
push
jmp
cwtl
mov
nop
or
add
es
incl
pop
xchg
mov
repnz
das
imul
dec
nop
and
sbb
dec
mov
ljmp
orb
xchg
jb
cmp
data16
dec
pop
or
movsb
mov
decl
pop
or
sub
mov
mov
sarl
ficoms
or
mov
inc
and
dec
jge
mov
lahf
xchg
and
cmp
cld
sub
cmc
and
incl
ja
add
rcr
inc
xlat
add
gs
lea
xor
test
adc
lcall
ljmp
lods
arpl
test
lret
or
xor
adc
mov
xor
out
mov
popf
pop
mov
xchg
shlb
insb
stos
ret
idivb
jmp
jmp
sbb
xchg
out
dec
mov
lcall
push
cmpsl
dec
push
aas
cmpsb
iret
out
mov
lcall
adc
or
mov
idivb
sbb
lods
cltd
xchg
cmp
into
in
incl
pop
cmpsl
and
sbb
xchg
stos
mov
mov
popa
xchg
sbbl
ljmp
aaa
aad
mov
pop
mov
lods
faddp
add
xor
mov
test
call
mov
scas
loop
or
popf
jnp
and
push
push
xchg
arpl
or
inc
jnp
incl
mov
xor
js
jbe
loope
add
pushf
cs
sub
lcall
cmp
test
mov
push
sbb
popf
mov
lahf
mov
mov
outsl
mulps
call
inc
jl
sbbb
lods
xchg
cmovge
pop
lock
jmp
mov
out
lock
sbb
sbb
ja
fsubp
sbb
je
mov
pop
iret
push
mov
out
loop
fsubs
dec
push
out
and
push
xor
cmpsl
xchg
xor
sbb
dec
addr16
out
jge
push
nop
invd
arpl
div
fists
mov
push
test
cltd
push
mov
incl
inc
arpl
cltd
push
enter
push
sub
pop
fdivrs
jne
ja
adc
jmp
push
stos
js
jbe
enter
mov
sub
js
in
repnz
lret
lahf
xchg
xchg
in
jne
cmpsl
pushf
sarl
dec
in
mov
jae
jne
add
cmc
adc
xchg
xor
jmp
mov
jae
stc
add
into
jl
call
ja
push
pop
push
inc
inc
xor
xchg
push
and
call
movsl
cmc
xchg
js
testl
fnstenv
or
dec
test
pop
mov
lcall
pop
icebp
out
rcll
sbb
cld
das
mov
jle
sbb
call
adc
jmp
incl
pop
addl
pop
dec
add
in
sub
sub
jmp
push
sbb
inc
out
xchg
data16
addr16
loopne
mov
cmc
adc
adc
call
imul
push
test
xor
push
and
push
int
movsb
into
jg
xor
ljmp
divl
repz
add
push
in
je
test
in
andl
add
sub
jmp
cmc
rcr
dec
mov
sbb
xchg
les
mov
test
ljmp
dec
stos
mov
adc
mov
iret
inc
mov
iret
repnz
xor
xchg
pushl
pop
aad
sbb
mov
xchg
fcompl
cmp
in
cmpsl
insl
sti
pushl
xchg
call
adc
enter
ret
popa
sbb
imul
mov
repnz
pop
pop
roll
int
dec
or
add
push
cmp
cs
sub
lret
pop
jnp
cli
inc
lahf
jae
stc
cmp
rcl
mov
jge
sbbl
sbb
dec
es
mov
inc
ljmp
xor
or
std
jbe
push
cmpsl
xchg
cwtl
mov
inc
iret
pop
push
nop
mov
lods
xchg
call
decl
out
inc
mov
int3
int
add
adc
pushf
cmp
addr16
ljmp
sub
clc
and
jge
lcall
dec
and
push
test
add
call
sbb
call
cmp
xor
inc
les
xor
cli
add
add
mov
mov
xor
lcall
outsl
xor
addr16
lahf
in
stos
and
shl
and
in
mov
ja
jmp
or
fwait
das
cltd
xchg
xor
sbb
xchg
gs
lcall
mov
loope
inc
stos
test
pushl
inc
jns
xchg
fwait
je
lods
inc
mov
lods
divl
sbb
ljmp
sar
and
std
xchg
dec
push
popa
nop
and
movsl
dec
cmp
testl
adc
pop
and
pop
cmc
xor
cmp
je
ret
negb
ljmp
lcall
insb
mov
inc
or
pop
xchg
push
dec
test
subl
das
or
dec
imul
dec
xlat
call
or
dec
dec
outsl
push
pop
sub
stos
jmp
out
mov
pushl
lahf
cmc
shrl
div
dec
mov
fildll
jge
mov
add
in
pop
incl
pop
pop
loop
inc
push
fistl
jns
dec
sub
dec
pop
push
push
cmpb
rcrl
mov
stc
into
popf
jae
pop
iret
adc
aad
push
dec
data16
dec
mov
xchg
sub
insb
test
fldt
leave
add
mov
test
mov
aam
sbb
shlb
dec
dec
test
insb
jge
incl
cmp
and
sbb
mov
mov
daa
inc
mov
fdivl
shr
es
push
inc
enter
push
movsl
add
cmp
bound
dec
inc
push
imulb
pop
mov
insl
cli
incl
test
arpl
aaa
xchg
sbbb
sbb
cli
and
out
nop
mov
fisubrs
ja
insl
add
lcall
mov
jmp
lahf
mov
push
pop
stos
jp
pop
adc
imul
lret
pop
push
pop
push
js
pusha
inc
gs
ss
push
movsl
loop
lods
lret
push
sub
cli
push
xor
jp
push
sbb
incl
xchg
call
stos
inc
and
inc
lds
pop
add
jp
std
xor
pmulhw
push
rcl
mov
cmp
stos
jmp
insb
cmpsl
decl
int3
and
pop
dec
in
sahf
pop
ja
dec
adc
js
mov
jne
or
fiaddl
mov
cli
or
mov
les
addr16
push
test
dec
or
test
decb
jns
scas
pop
mov
and
psubsw
notb
popa
ror
push
jbe
and
inc
gs
inc
sbb
enter
mov
cmp
out
out
call
jnp
sar
fdivl
call
fdivs
mov
std
gs
mov
ljmp
mov
decl
jno
lods
aad
cmp
sub
jnp
icebp
fstl
add
push
pop
inc
push
daa
mov
out
and
xchg
or
mov
pop
inc
ds
subb
lods
jl
inc
loope
decl
xor
push
jbe
inc
ljmp
mov
cmpsl
out
xor
xor
xlat
or
jmp
gs
jne
shrb
shll
and
inc
push
jb
out
xchg
nop
fmuls
decl
xchg
adc
ret
adc
lahf
inc
jge
xlat
or
std
into
div
push
imul
ljmp
ljmp
adc
pop
pop
sbb
add
adc
sub
jnp
inc
pop
adc
jne
imul
inc
ret
repnz
pop
int
fsubp
int3
mov
and
test
ja
or
mov
lcall
and
in
jg
ss
adc
mov
jmp
xchg
cld
decl
sti
jns
mov
aam
pop
mov
push
xchg
dec
sub
lcall
inc
jb
fmuls
add
xchg
add
outsb
test
mov
sbb
inc
push
in
jae
js
push
int
push
inc
rcrb
jo
je
inc
aam
lcall
mov
decl
hlt
cmp
xchg
pop
and
stos
sbb
xlat
stc
stos
lock
jae
cmp
js
sar
dec
and
repz
push
sarb
insb
jbe
inc
push
dec
ds
push
je
lock
push
data16
fisubs
mov
mov
stc
inc
in
jb
ja
icebp
add
sbb
adc
and
and
pop
jle
leave
fs
repz
das
or
aad
and
hlt
outsl
into
cmp
xchg
xor
push
xchg
jge
mov
pop
mov
mov
dec
das
cltd
jae
gs
sub
insl
outsl
lock
jmp
ds
mov
pop
andl
push
mov
add
add
cmp
into
imul
or
in
or
inc
cmp
lds
xchg
push
aaa
xor
ljmp
push
sub
jg
data16
add
mov
jmp
decl
aam
add
dec
fidivs
jns
inc
negb
adc
shl
sahf
inc
stos
dec
jge
popf
push
incl
xchg
inc
insb
fldln2
pop
fbstp
popf
js
sub
mov
xchg
sub
mov
push
jmp
push
or
push
loopne
mov
cmp
repnz
adc
mov
bound
subl
decl
out
rolb
mov
inc
repnz
add
sbb
jp
andb
mov
jb
cmpsb
stos
fwait
subb
lahf
jmp
bound
or
loope
mov
jecxz
sbb
jo
in
cli
std
xor
cmp
out
push
pushf
or
aam
test
add
jbe
fs
fnstcw
lahf
decl
mov
mov
mov
and
lea
nop
out
jns
outsl
mov
daa
aad
test
adc
lcall
in
xor
gs
arpl
inc
fcoml
adc
sub
mov
dec
or
push
xlat
pop
in
fwait
mov
int
push
cmp
lods
pop
push
in
shl
jmp
and
clc
xor
lock
jo
out
pop
adc
dec
mov
jno
push
add
pushl
fiadds
mov
test
lock
cld
sub
stc
cmp
inc
iret
jns
adc
pushl
dec
sub
pop
pop
test
sbb
adc
stos
inc
out
cmp
ljmp
sbb
neg
pop
and
pop
and
js
jb
and
int3
xchg
loop
std
or
mov
lcall
fwait
add
xchg
fs
and
repz
xchg
xchg
jno
outsl
sti
ljmp
outsb
das
and
sub
ret
mov
jo
pop
call
dec
mov
pushl
xorb
cmp
jg
aam
pop
mov
out
pop
rcll
fcoml
mov
dec
lods
push
sbb
insb
dec
loope
int3
cwtl
lcall
in
mov
stc
mov
mov
call
mov
sahf
sbb
les
jns
jo
sbb
loopne
notl
call
and
cmc
imul
lods
xchg
hlt
call
mov
jge
lcall
incl
aas
mov
xor
adc
daa
mov
sub
enter
mov
out
inc
jp
jmp
cmp
and
mov
into
cmpb
sub
test
jecxz
stos
fadd
pushl
add
andl
hlt
pusha
or
rcrb
sub
dec
hlt
call
mov
add
dec
or
push
pop
ljmp
sub
sub
es
mov
adc
outsl
lea
pop
jmp
jmp
divl
rcrl
inc
jno
cli
xchg
inc
mov
ret
lds
in
dec
pop
fldt
mov
insb
int3
sbb
decl
dec
iret
out
fldl
and
push
aam
daa
cmp
fcoml
xor
js
jmp
stc
push
or
ret
mov
inc
and
das
mov
insl
mov
push
incl
enter
cmp
pop
inc
inc
hlt
rcrl
mov
dec
pushf
scas
imul
out
adc
push
xchg
popf
cmp
push
ds
cli
loope
inc
or
xor
pusha
cs
cmp
dec
aaa
pusha
mov
and
and
arpl
inc
adc
inc
hlt
mov
lcall
jns
dec
jmp
movsb
movsb
xchg
push
out
mov
sub
push
xlat
adc
xchg
loop
decl
fimull
xlat
jno
add
xchg
push
adc
iret
jecxz
jge
scas
test
inc
mov
ljmp
inc
sbb
jne
hlt
push
cs
xor
jb
repz
xor
or
pop
repnz
jecxz
call
cmp
jmp
enter
sub
fisttpll
dec
mov
xchg
mov
sbb
pushl
scas
lds
pusha
cmpl
ret
test
or
cld
and
or
jns
mov
decl
mov
jbe
mov
sbb
inc
stc
mov
xlat
inc
out
push
enter
jmp
cmpl
in
inc
mov
stos
movsb
push
ficomps
lcall
fidivrl
daa
add
inc
nop
fstps
aam
xor
push
push
in
mov
adc
lcall
in
push
dec
sti
test
add
xor
mov
into
jbe
les
daa
enter
jp
adc
pop
loope
popl
ljmp
ja
ret
imul
sub
test
jmp
jns
inc
sbb
push
enter
insl
or
shrl
cmc
ljmp
inc
push
jnp
xchg
pop
outsl
lahf
out
mov
sahf
inc
and
xchg
addr16
jno
xor
pusha
cli
mov
aad
decl
mov
pop
push
sub
adc
into
es
in
in
in
sub
xchg
aad
xor
inc
mov
test
inc
fldcw
lcall
mov
push
jge
aam
pusha
pop
inc
xor
jmp
add
xchg
mov
cltd
cmp
mov
jp
fisubs
mov
pop
mov
jmp
sbb
dec
icebp
jp
mov
in
pop
or
sub
mov
xchg
pop
pop
add
call
mov
push
jl
outsb
mov
sbb
push
daa
mov
adc
and
inc
or
adc
pop
jg
sarb
pop
push
sbb
sbb
loope
mov
call
bound
push
xor
cmpsl
push
mov
shlb
mov
into
call
lahf
mov
add
jns
pop
cmpsl
mov
mov
iret
add
pushl
xor
gs
repnz
sarl
push
push
inc
sti
push
adc
mov
and
mov
jmp
aaa
jmp
push
inc
test
call
inc
orl
add
dec
pusha
ret
push
cli
dec
sub
mov
addr16
pop
mov
aaa
sub
call
out
adc
ljmp
cmpsl
mov
xlat
out
mov
add
xor
jnp
aaa
lods
xor
bound
aas
lret
out
push
dec
dec
adc
outsb
push
jne
and
pop
inc
ja
jmp
incl
xor
imul
sti
or
jmp
je
negb
or
push
iret
repnz
push
lea
xchg
out
je
add
sbb
scas
repnz
push
iret
fisubs
popa
sbb
call
fisubrs
rcrl
orb
out
ljmp
lea
call
cld
mov
add
movsl
int3
es
xchg
sti
flds
test
push
jle
call
xchg
push
sbb
pushf
dec
aas
loop
hlt
mov
adc
fisttpl
mov
pushl
fst
jmp
dec
add
sub
ret
xchg
insb
outsl
iret
sub
sbb
and
cmp
lahf
stos
data16
xor
adc
and
scas
in
xchg
stos
and
decl
in
mov
sarb
jbe
movsb
jle
lods
jle
push
es
inc
sub
sbb
mov
mov
add
movsl
lret
shlb
mov
lds
sbb
je
test
dec
and
and
lcall
and
stos
arpl
fs
divl
lods
inc
mov
and
xchg
cli
inc
pop
call
pop
push
ror
loopne
inc
lods
jge
and
dec
jae
mov
cld
pop
out
aaa
sbb
jnp
ljmp
cmp
xor
repz
roll
mov
aad
jnp
xchg
rcrl
decl
pop
jg
sarl
es
and
inc
xchg
push
mov
adc
xchg
andw
pop
fwait
popa
mov
jge
cli
andl
fwait
lods
je
add
xor
insl
mov
jmp
js
pushl
or
je
movsl
incb
lds
push
and
jo
push
mov
add
ljmp
add
jmp
cmp
sbb
jl
and
or
bound
hlt
dec
add
pushl
xchg
jno
push
add
push
out
xor
out
test
movsb
mov
incl
pop
or
loope
inc
jbe
mov
insb
scas
lock
in
mov
mov
ljmp
inc
add
loop
and
fsubrs
stc
js,pn
xor
out
lcall
enter
mov
fwait
lcall
mov
pop
sub
inc
ljmp
jmp
mov
and
fisubl
push
push
sub
pop
movsl
in
fcomps
das
and
xlat
sar
pushl
jmp
inc
shlb
ljmp
sub
adc
std
mov
sub
and
lcall
xchg
int
fidivs
dec
cli
mov
jae
clc
cmp
repnz
int3
stc
adc
dec
inc
pushl
mov
shrb
out
jmp
in
mov
mov
push
jmp
incl
sub
lret
sbb
int
inc
popa
inc
inc
push
outsl
int3
cs
lret
fwait
leave
push
das
and
cmp
jmp
aaa
movsl
add
out
cli
sarb
sub
sub
fwait
lods
mov
ljmp
cmp
sti
rorb
je
mov
lods
push
add
and
cs
mov
nop
dec
test
scas
lods
xchg
std
or
scas
std
adc
jecxz
daa
imul
jmp
adc
jg
out
mov
push
and
sbb
pop
push
jmp
call
dec
push
rolb
sti
or
cmp
sbb
std
sbb
ljmp
clc
rorb
es
mov
jl
or
out
nop
pop
cmc
iret
mov
decl
dec
dec
popf
pop
and
dec
xchg
and
ljmp
sub
jmp
rclb
jge
inc
dec
push
or
lea
lea
dec
sahf
decl
inc
push
ds
mov
lea
js
adc
and
in
add
and
aas
stc
xchg
adc
push
adc
cltd
pop
std
mov
enter
loop,pt
aad
loopne
fsubrp
sub
jmp
mov
inc
pop
int
inc
pushf
fidivs
mov
pop
add
loopne
inc
add
jb
or
jnp
sub
cwtl
loope
push
ljmp
cmp
sub
pop
xor
xchg
call
cmp
leave
and
stos
adc
popf
arpl
sub
cwtl
mov
lcall
icebp
mov
jbe
push
lret
and
clc
in
sub
cmp
les
jl
add
ljmp
or
or
adcl
popa
push
dec
mov
out
loope
mov
lcall
call
loopne
push
and
add
sub
fwait
xor
jle
rcr
inc
add
les
stos
cmc
mov
repnz
xchg
inc
filds
cs
pop
call
rcrb
jmp
lret
adc
push
test
mov
mov
call
jo
pop
and
lret
xchg
clc
addb
mov
pop
inc
stc
pop
push
mov
add
or
lcall
cmpsb
push
jg
cmp
mov
fwait
out
cs
je
xor
adc
adc
scas
mov
pop
out
push
mov
ffreep
jno
cmp
loopne
scas
and
and
imulb
int
jmp
incl
sbbb
xchg
repnz
sbb
and
pop
bound
out
push
push
outsb
xchg
push
repnz
call
ret
mov
js
pushf
cmp
sahf
xchg
sub
fiadds
push
enter
pop
jbe
mov
inc
andl
jmp
repz
xor
sti
out
scas
jns
out
xor
leave
or
adc
push
fisttpll
mov
mov
push
xchg
imul
or
inc
pop
xchg
sti
add
xchg
aam
cs
jnp
adc
inc
mov
jl
push
outsb
or
mov
inc
cli
mov
lahf
scas
hlt
cmpsl
movb
rclb
incl
outsl
dec
inc
fucom
clc
pop
dec
outsl
ss
lret
jecxz
pop
loopne
push
imul
lock
ljmp
add
imul
xchg
test
sub
out
sub
popf
fs
mov
stos
repz
lcall
aas
push
shr
mov
popa
data16
into
sub
cmp
push
sub
bound
rcrb
jl
dec
bound
or
test
push
xor
push
lods
mov
sar
movsb
pusha
pushl
lcall
jle
fisubrs
aas
adc
xchg
mov
pop
mov
sbb
decl
push
and
push
pop
pop
jmp
daa
push
xor
lods
inc
cli
mov
out
inc
outsl
sar
incl
sbb
cld
test
mov
and
mov
mov
lcall
pusha
insb
dec
pusha
jp
ret
mov
clc
xor
iret
loopne
idivl
mov
xorl
xchg
jecxz
shrl
add
push
scas
ret
stos
call
xchg
adc
mov
cmpsl
sbb
mov
enter
outsl
or
sub
call
adc
daa
xor
adc
sbb
fcomi
sbb
fsubl
sbbl
or
std
ljmp
jns
fdivr
stos
test
xchg
mov
sub
xlat
stos
fmull
lds
mov
lcall
dec
push
adc
push
push
inc
test
clc
mov
or
mov
pop
add
lcall
cmc
leave
mov
cmp
mov
pusha
push
or
lds
leave
fidivrs
dec
sub
dec
icebp
xchg
in
imul
pop
jo
fdivrl
xchg
jge
pop
mov
jne
inc
stos
sub
pushl
dec
int
fs
sub
mov
push
mov
add
lods
stos
inc
dec
ljmp
xor
jae
daa
fucom
int3
imul
sbb
test
imul
cmp
lcall
mov
loopne
loopne
push
test
xor
add
sub
sub
decl
xchg
xchg
jae
repz
mov
mov
dec
fdiv
daa
cld
mov
out
ljmp
insb
outsb
mov
lahf
or
shrl
xchg
add
fmuls
subl
lcall
out
xchg
or
mov
sub
ds
push
dec
and
jmp
push
ret
xchg
or
inc
jnp
push
xchg
mov
push
leave
dec
xchg
in
push
movsb
sbb
xor
pushl
push
cmpsl
mov
mov
xor
sbb
mov
sub
lcall
loopne
or
push
call
in
and
inc
mul
sub
imul
out
fwait
mov
mov
xchg
sub
pop
in
lods
stos
sbb
pushl
leave
dec
mov
xor
je
filds
add
push
sbb
lcall
pop
addl
pop
ret
repz
out
je
push
xchg
pop
and
call
mov
testl
popf
paddd
ss
mov
call
mov
mov
mov
outsl
addr16
cmpsb
sarb
push
in
lea
shr
mov
sahf
ret
mov
ljmp
xor
inc
jecxz
cltd
xor
xor
push
adc
sub
adc
out
pushl
sub
push
jle
scas
ficomps
les
cmp
sub
and
jo
jbe
and
incl
popl
pop
push
gs
jne
inc
aas
mov
mov
or
andl
xchg
clc
sbb
add
dec
ja
fldcw
pcmpeqb
push
sahf
pop
sbb
mov
dec
ficoms
inc
pop
decl
adc
cmp
lock
sbb
cmp
lret
mov
inc
mov
jne
decl
sbb
pop
divb
mov
dec
push
sbb
and
fbstp
or
push
inc
xor
shlb
out
iret
jae
jae
xor
imul
ret
cmp
incl
inc
pop
mov
xor
xchg
dec
out
sub
mov
loope
inc
mov
fmull
jle
jae
pop
aad
push
mov
mov
xchg
mov
inc
xchg
add
imul
pushl
lds
into
sub
pop
orl
lods
jg
xchg
fwait
pop
mov
push
iret
scas
aam
inc
push
outsl
je
sbb
bound
gs
mov
mov
cmp
mulb
mov
mov
cmpsl
cmp
push
pop
xchg
adc
inc
jne
dec
adc
push
ljmp
shrb
test
jl
movsb
or
sarb
fwait
lods
pushf
lret
outsl
dec
or
fsubrs
mov
jmp
cmpsb
xor
jb
mov
sub
rclb
mov
push
scas
into
sbb
dec
mov
cwtl
in
dec
cmpl
incl
js
sbb
imul
adc
xor
sbb
xchg
idiv
out
addl
incl
cs
cltd
jno
leave
inc
icebp
sub
cmp
test
pop
fnstcw
vcvtss2si
loop
push
cltd
push
cmpb
loope
dec
cmpsl
pop
hlt
sub
cmp
pop
and
add
sbb
cmp
jmp
sub
pop
orl
adc
pop
xchg
test
std
fwait
mov
sub
pushl
icebp
jae
mov
cmpsb
pop
daa
sub
cmp
data16
addr16
shlb
fildl
xor
or
mov
and
mov
stos
sbb
aad
fisubl
in
out
call
mov
lahf
push
pop
repz
pop
leave
in
cld
dec
adc
xchg
iret
pop
les
or
xor
mov
notb
add
inc
pushl
jge
cmpsl
mov
cli
add
cmc
cmpsb
into
loope
mov
pop
mov
mov
pushl
and
push
sahf
bound
push
fidivl
mov
pop
stos
jbe
fdivr
pushl
mov
jae
in
pop
add
or
jg
push
sbb
jg
call
inc
iret
pop
imull
jmp
shr
mov
inc
inc
or
sar
adc
lcall
aas
xor
outsl
leave
nop
je
adc
dec
in
push
imul
ret
dec
call
xchg
orl
mov
scas
mov
inc
jae
and
in
out
or
jle
pushl
push
or
sub
sahf
xor
jno
cmpl
pushl
inc
mov
fisttps
sbb
lret
cmp
lret
mov
lock
subb
cmc
lcall
push
cltd
sub
or
fwait
test
mov
cs
outsl
push
push
loope
xor
inc
add
pop
cmpsb
enter
mov
mov
imul
push
push
xchg
mov
sub
sbb
call
idiv
xor
jg
repnz
mov
mov
pushl
push
pusha
cmp
pop
xor
imul
xchg
cmpsl
or
inc
jbe
lcall
dec
outsb
mov
lahf
out
addr16
out
jno
mov
cmp
std
inc
pop
push
mov
outsl
jmp
or
push
mov
xor
loopne
popa
insl
stos
cmc
inc
sub
inc
mov
js
leave
jns
mov
and
ljmp
imul
and
pushl
xchg
push
mov
cmp
push
cltd
sbb
out
or
imul
adc
stos
xor
jb
mov
incl
les
sbb
push
mov
insl
mov
and
adc
gs
fldenv
incl
cwtl
xchg
js
and
mov
adc
jmp
xor
es
cld
cmpsl
mov
xchg
ljmp
aaa
aaa
inc
lret
gs
push
add
rorl
inc
loope
dec
fimuls
clc
and
jmp
sub
push
pusha
lret
fwait
dec
sbb
pushf
imul
lcall
pop
cs
push
sbb
pushl
pop
mov
std
cmp
pop
and
jg
and
psraw
mov
and
jmp
enter
mov
addr16
or
out
mov
add
cmp
fwait
add
pop
pushl
shrb
cwtl
rol
xchg
out
cmc
aad
daa
inc
add
sti
inc
out
fldcw
and
outsl
pop
pop
push
jne
jae
fwait
int
repnz
jnp
clc
popf
xchg
lret
pop
test
imul
imul
dec
cmp
lret
push
loope
xorb
dec
lods
nop
xchg
jnp
daa
ja
lds
clc
dec
adc
and
sbb
xchg
jmp
repz
rclb
ds
mov
nop
cmp
mov
add
es
popa
loopne
or
dec
call
jecxz
loop
inc
imul
cld
outsb
daa
mov
jne
movsb
jmp
shl
dec
xchg
inc
iret
lret
fdivrp
inc
mov
sbb
xchg
cmp
push
push
cmpb
xor
mov
pop
or
jo
cli
jnp
push
push
arpl
fs
mov
push
cmpsb
mov
out
add
bound
jmp
pusha
mov
add
push
aam
or
and
push
in
dec
mov
xor
in
mov
incl
insb
sub
outsl
and
aam
dec
scas
inc
cltd
xchg
pop
nop
adc
lea
fisubrl
jbe
test
loopne
stos
or
jmp
adc
mov
hlt
adc
mov
iret
pusha
or
popf
jmp
inc
decl
pop
cmp
cli
jp
fistl
mov
adc
rclb
jo
std
xlat
ret
ljmp
xchg
xor
fsqrt
dec
subl
pop
push
cmp
xlat
aad
jbe
jnp
xchg
aam
inc
test
loope
xchg
ret
popf
mov
imulb
icebp
clc
sbb
inc
lods
into
jno
test
sbb
in
mov
adc
shlb
or
mov
int
jp
pop
jbe
adc
jl
push
lds
xchg
dec
sbb
pushl
fdivr
hlt
imul
hlt
lods
sbb
sbb
ret
add
clc
jle
idivb
je
cmp
dec
inc
pop
mov
data16
clc
push
mov
adc
divb
and
push
xchg
cmc
push
xor
out
xor
jmp
addb
lret
lea
cmp
icebp
adc
sbb
decl
mov
bound
jecxz
cld
pusha
mov
cwtl
enter
addr16
add
incl
xor
sbb
mov
outsl
imul
adc
in
imul
rclb
aad
xor
mov
js
pusha
lock
xor
das
and
jo
ret
cmc
nop
inc
setnp
pinsrw
cmp
push
xchg
ss
lcall
cmc
movsb
xchg
ljmp
std
or
test
cmpsb
mov
call
and
inc
loop
rorl
imul
mov
mov
push
inc
out
sar
jmp
lds
shlb
andl
jg
pop
mov
repnz
cs
lods
movsb
outsb
ljmp
cmpsb
and
pusha
lds
push
popl
xchg
nop
iret
fwait
orb
popf
xchg
mov
mov
lcall
mov
mov
jno
pushf
adc
dec
shll
ljmp
call
mov
imul
cmpsl
dec
xchg
xlat
jecxz
loopne
push
or
insb
cs
sar
ljmp
cwtl
pop
outsb
rcrb
fs
mov
test
mov
xor
cli
inc
ja
pop
call
mov
adc
mov
and
jns
sub
rcr
mov
ljmp
lret
loopne
clc
call
or
in
pushf
ljmp
mov
mov
incl
dec
jb
mov
xor
jnp
cs
cwtl
dec
xchg
mov
jl
mov
dec
push
ret
push
and
dec
mov
es
or
dec
xor
xor
push
sub
stos
sarb
repnz
lds
movsl
repnz
lods
in
adc
adc
decl
jp
shrb
icebp
add
dec
pop
sub
out
add
push
mov
sub
push
hlt
cmc
ljmp
cmc
ljmp
push
stos
pop
pop
int
stc
out
enter
sbb
sarb
cmp
lcall
dec
xchg
sub
cmpsb
negb
cli
inc
adc
xchg
mov
jp
jp
sub
rcrb
js
cmp
into
sti
data16
push
jno
cmp
inc
sub
std
sarl
sti
xchg
cmp
and
mov
out
push
decl
inc
ja
decl
fsubl
cmp
xor
cld
inc
imul
inc
add
imul
scas
cmp
incl
sarb
xor
icebp
clc
or
neg
xor
mov
incl
cmpsb
imul
cmp
jmp
adc
push
inc
or
pushl
mov
stos
insl
adc
test
dec
js
bound
lahf
addr16
decl
out
push
fmuls
and
mov
mov
test
aas
dec
adc
data16
dec
sub
outsb
mov
mov
dec
pop
inc
rcll
iret
dec
rorb
data16
das
arpl
cmp
xchg
or
ds
mov
ficoml
imul
mov
adc
outsl
xlat
add
incl
jbe
xacquire
jno
dec
es
sub
pop
stc
cwtl
mov
cltd
push
sbb
xchg
hlt
push
mov
pushf
cmp
faddl
mov
jg
push
das
test
out
mov
mov
push
les
subb
pop
es
and
or
pop
pop
popf
incl
mov
aaa
sbb
int3
cltd
mov
adc
push
inc
daa
mov
lock
lcall
xor
cmpsl
addb
xchg
push
ret
notb
outsl
sbb
addl
call
in
lds
in
or
adc
std
mov
adc
adc
pop
push
insl
ret
sbb
jb
mov
test
nopl
sbb
or
cmc
cltd
fildll
inc
or
ljmp
mov
stos
sahf
jno
jle
inc
cld
mov
inc
test
js
adc
int3
cmpsl
dec
lods
test
pushl
lock
jbe
incb
cmpsl
push
mov
rcrl
clc
adc
int
push
mov
push
add
add
or
xchg
cmp
jns
pop
data16
ss
pushl
addr16
fwait
mov
cmp
adc
add
lahf
and
push
and
rcrb
hlt
mov
push
ljmp
test
pmaxub
call
cmp
icebp
aam
mov
sbb
decl
xlat
sub
jne
jo
or
mov
push
ss
or
xchg
lahf
in
jg
ljmp
push
cmp
or
mov
rorl
sahf
iret
mov
pop
or
cmp
sub
mov
xor
out
inc
dec
jo
nopl
insb
in
cld
pop
pop
js
call
inc
jg
cmp
movsb
sar
sub
int
test
test
or
sbb
jg
dec
sbb
xchg
or
pop
or
add
in
sbb
xor
sahf
in
mov
jecxz
decl
mov
mov
ja
inc
pop
cmp
dec
jmp
push
sub
xchg
mov
sti
and
xor
pop
stos
and
mov
pushl
pop
cmovp
stos
jle
cmp
and
scas
mov
dec
mov
insl
mov
mov
inc
idivl
in
mov
fdivr
adc
and
lods
and
sti
outsl
stc
out
dec
inc
aad
incl
xor
cs
shlb
cs
movsl
gs
dec
jle
movsb
or
xchg
pusha
lds
jmp
pop
push
or
in
add
xor
adc
shll
or
or
rclb
push
xchg
mov
add
sub
adc
out
inc
inc
cwtl
test
or
push
jo
gs
pop
and
leave
dec
mov
test
xor
call
test
cltd
fdiv
inc
jae
pop
in
pushl
fstl
popl
dec
sub
sti
mov
jnp
push
lret
lea
js
and
mov
or
insl
cmp
cltd
sbb
push
sahf
mov
aas
rolb
decl
fcompl
shr
lahf
jnp
xchg
lods
cmp
or
xchg
dec
pop
in
cmp
or
loope
int
addr16
rcr
into
or
sbb
or
call
call
jecxz
insb
das
adc
icebp
int3
mov
cmpsl
vphsubbw
sbb
call
push
or
xlat
scas
fiaddl
push
mov
sub
sub
cmp
push
cmpsb
mov
fdivr
ljmp
inc
mov
or
mov
test
data16
adc
jl
mov
inc
lock
push
in
adc
xor
xor
imul
push
aas
pop
popf
push
aas
jnp
pushl
pop
xchg
js
pop
inc
adc
gs
jae
fsubs
push
shrb
incl
sbb
mov
sbb
pushf
xor
icebp
mov
shrl
int
lcall
mov
jmp
push
nop
mov
out
decb
pop
scas
xor
xor
insb
subb
jmp
adc
mov
cld
jo
mov
add
repnz
gs
pushf
lock
cmp
cmp
mov
sub
cs
add
out
pop
xchg
push
cs
mov
sub
pop
xchg
in
xlat
xor
cld
sarb
pushl
lcall
xor
ret
aam
popa
adc
and
out
fildll
fdivr
jmp
lret
jl
popa
push
xor
repz
aad
aad
fwait
or
enter
mov
int3
sub
cmp
flds
mov
jns
aaa
add
mov
and
mov
push
mov
lcall
notb
jl
sub
inc
andl
mov
push
push
dec
lret
stc
or
mov
cltd
lcall
inc
cmp
ss
rorb
and
xchg
ret
punpckldq
sub
insl
mov
and
cmp
push
lret
xchg
sub
pop
sbb
lock
call
mov
jae
shlb
mov
insb
adc
lods
sub
pop
push
aaa
cli
shl
jl
cmpsb
call
pop
pop
rcl
enter
jmp
lcall
sub
pusha
outsl
push
loop
movzwl
inc
mov
sub
rcl
les
roll
adc
xchg
push
rclw
cld
out
xchg
addr16
sbb
mov
pop
mov
and
push
cmovs
pop
shrl
out
inc
lds
mov
jns
repz
into
adc
sbb
insl
inc
xchg
sub
fs
cmp
ja
out
mov
cmp
xor
xor
or
xor
cmpsb
jns
icebp
popa
ljmp
xor
push
mov
repnz
cwtl
shrl
jb
cs
cmpb
daa
popf
jmp
fdivs
sbb
sub
jmp
leave
clc
out
mov
ljmp
adc
cmp
mov
xchg
mov
je
inc
cmpsl
das
cmp
pop
mov
pop
call
xchg
clc
fwait
xchg
mov
popl
ljmp
mov
or
call
lock
adc
mov
add
mov
jne
pop
xor
unpckhps
or
pushl
pop
in
push
sub
sub
mov
int3
aad
rol
and
or
jmp
mov
push
and
sbbl
xchg
mov
push
xlat
sahf
cmp
dec
nop
lcall
lea
push
cwtl
roll
mov
ja
fnsave
sub
adc
xchg
mov
mov
xor
inc
jecxz
xchg
out
sbb
and
gs
fwait
imul
bound
jl
aam
scas
pop
xchg
push
xor
adc
aad
std
inc
mov
xchg
out
daa
test
inc
in
outsl
mov
data16
leave
ret
xchg
sub
inc
test
jl
incl
out
inc
mov
push
pop
test
imul
and
mov
into
fdivrs
out
ret
xchg
lcall
pop
pop
push
in
mov
mov
pop
scas
frstor
pushf
mov
push
xchg
inc
scas
sub
aas
jl
jmp
or
frstor
cmpb
dec
and
xchg
aaa
xlat
sar
ljmp
repnz
insb
and
xchg
mov
ss
int3
mov
jg
adc
cli
and
push
call
dec
sbb
pop
es
ficoms
out
repz
mov
pop
xchg
je
push
fs
mov
shrl
jmp
outsl
loop
push
cmpsb
jmp
mov
je
pop
stos
je
and
lcall
or
aad
jb
mov
addr16
xorb
movsl
aaa
fiaddl
clc
imul
adc
call
xchg
pusha
jl
jnp
jmp
data16
fsub
notl
int
fstpt
sbb
pushl
fwait
lods
cwtl
mov
ss
int3
imul
fiadds
into
icebp
sbb
aas
jno
cmc
jbe
mulb
xchg
jns
inc
test
shrb
fcomi
dec
lahf
jbe
shll
or
call
popf
idivb
pushf
inc
pop
stc
adc
lock
movsl
sub
notb
outsl
fwait
cmp
jne
call
mov
int3
mov
jmp
mov
das
mov
cld
xchg
sar
ret
inc
xor
inc
mov
mov
xorl
pop
das
scas
inc
adc
inc
jae
cmp
std
call
adc
movsb
std
inc
int3
pop
cmc
jmp
mov
pop
dec
mov
or
xor
call
mov
mov
fstp
jo
ret
stc
mov
inc
push
popf
lods
dec
call
mov
dec
jge
cmp
or
jno
or
lret
std
inc
sar
mov
dec
test
mov
sbb
cmp
mov
js
bound
dec
sub
mov
std
scas
fbld
cmp
pusha
add
rolb
rorl
call
aam
sub
xlat
mov
dec
lds
jmp
pushf
sub
or
paddd
sbb
imul
js
sbbl
push
cmpsb
mulb
cmp
cmp
popa
idiv
push
push
cmp
lahf
scas
lret
jmp
and
push
lea
shlb
pop
mov
dec
shrd
decl
add
or
jno
pop
mov
add
add
js
and
decl
adc
mov
inc
jns
cmp
adc
aad
int3
movsl
shrl
test
xchg
dec
push
xor
divb
or
orl
and
clc
lret
pushf
iret
mov
mov
das
test
mov
je
fcomp
ss
aad
dec
or
popf
pop
push
push
or
sub
mov
adc
jb
sti
shrb
movsb
movsb
incl
test
std
mov
divb
test
cmpb
ljmp
jmp
xor
mov
in
leave
pop
decb
shl
fcmovu
push
dec
dec
push
nop
popa
out
jns
jmp
mov
cmpsl
call
cmp
lahf
jae
push
ja
xchg
in
ud0
fimuls
cmp
negl
mov
or
arpl
pop
cpuid
rcll
cmp
je
nop
test
out
clc
icebp
jb
jecxz
rcll
mov
testl
xor
inc
fdivrp
decl
mov
xchg
fildl
and
mov
and
push
mov
xchg
inc
mov
call
inc
pop
xchg
adc
dec
cwtl
jnp
mov
adc
outsl
mov
in
jg
pop
dec
fldl
adc
xchg
sbb
jmp
xchg
adc
mov
cli
movsb
push
lcall
addr16
add
sub
ds
ljmp
lret
ss
dec
sbb
pop
stos
mov
inc
dec
daa
inc
fidivrs
sar
sarl
div
fs
mov
inc
bound
call
or
adc
inc
xchg
das
push
xchg
call
push
shrb
and
pop
lcall
and
and
xlat
adc
mov
jo
into
jb
test
pushl
jno
loopne
add
or
insl
sub
iret
xor
sahf
ljmp
loop
lahf
incl
out
push
add
ror
or
imul
xchg
leave
decl
test
aas
inc
dec
push
in
enter
and
lcall
mov
push
inc
jmp
andb
call
rcll
lock
addl
leave
mov
xchg
xchg
inc
ja
outsb
imul
decl
aaa
out
inc
push
and
jge
pushf
pop
push
ret
mov
inc
repz
add
jg
scas
scas
and
sub
xchg
jne
cmp
inc
pop
push
shlb
decl
lahf
out
dec
mov
movb
add
adc
in
fsubrs
dec
call
repz
int3
mov
pop
mov
scas
sbb
and
jg
call
je
push
push
repz
out
xchg
xchg
js
dec
add
test
xchg
adc
cmp
and
jmp
pop
or
cmpsb
or
sbb
sbb
scas
sbb
or
cs
inc
lock
fxch
pop
popf
iret
ja
push
mov
cwtl
fldt
dec
inc
lahf
test
fildll
mov
aas
lahf
mov
js
loope
aam
sub
lock
cmpsb
cwtl
ljmp
mov
xchg
push
sbbl
ret
lods
add
inc
and
jae
scas
fisttpll
test
jmp
jmp
mov
loope
adc
and
cmp
mov
decl
mov
js
mov
das
testl
sub
adc
in
inc
out
adc
jmp
loope
sub
lret
jl
insl
enter
out
adc
add
dec
add
add
out
or
pushl
mov
popf
inc
mov
test
push
arpl
sbb
lcall
mov
or
fsubr
mul
in
ret
sub
xor
fidivs
jg
incl
clc
lds
ret
std
shlb
cltd
pushl
je
xchg
cmp
lret
cmpb
int3
lods
sub
sbb
mov
push
movsl
outsb
out
fisttpl
loope
sti
cs
xor
jg
call
ret
gs
mov
push
lods
bound
loop
cmp
rcl
clc
in
idivb
mov
mov
data16
jg
std
xor
bnd
fucomip
mov
leave
jmp
and
fdiv
and
lcall
stc
fnsave
pop
in
rcll
sbbl
mov
popf
mov
push
pusha
xchg
dec
movsb
scas
and
decl
fldcw
push
jmp
jae
stos
roll
scas
pop
push
std
cmpsl
mov
cmc
push
outsb
mov
dec
repnz
in
call
stos
in
mov
xchg
add
aas
aam
cmpsl
mov
xchg
std
incl
scas
xchg
ret
push
adc
or
incl
or
mov
mov
out
ds
call
push
dec
inc
or
pop
je
inc
xor
push
push
xchg
aas
mov
ljmp
fsts
adc
pushf
push
stc
mov
cli
mov
inc
incl
inc
pop
adc
jns
call
sub
lret
jg
call
jp
xchg
movsl
mov
add
shl
dec
mov
jae
sahf
imul
pop
leave
cmpsl
or
test
mov
mov
test
inc
outsl
sub
decl
push
inc
push
decl
push
out
add
and
jp
push
push
adc
clc
mov
push
jmp
sti
push
pop
test
or
outsl
xor
cmpsb
sub
cmp
cli
mov
jg
call
jl
loopne
mov
stc
imul
call
xchg
outsl
cmpb
xchg
das
xchg
push
sub
pop
jb
out
adc
xchg
pop
imull
and
pushl
sub
jg
test
fcompl
test
fs
push
pop
cs
out
cmpsl
in
lods
sbb
aad
adc
pop
pop
mull
add
cs
xchg
cld
pushl
loopne
dec
xchg
jns
xchg
fildll
ret
popl
pop
adc
mov
pop
push
sbb
call
mov
hlt
sbb
jo
imul
jmp
mov
into
out
aaa
jle
ljmp
popf
int
loop
dec
in
jae
sub
aas
mov
sti
inc
rclb
test
ret
shrb
ja
shrl
incl
call
pop
imul
imul
int3
and
jnp
cmp
push
sar
adc
pop
bound
stc
xchg
inc
aas
mov
xor
or
jmp
int
mov
sbb
inc
cmp
cmp
mov
lret
fcom
sbb
add
decl
fsubrl
cmp
imul
pextrw
push
pushf
pushf
pop
imul
in
inc
idiv
fisubrs
mov
pop
ret
fildl
idiv
outsb
jno
dec
ljmp
fnstcw
add
add
pop
adc
aas
mov
into
push
out
or
inc
ss
jmp
jns
mov
divl
adc
jnp
pop
adc
scas
mov
jmp
movsl
test
mov
add
out
gs
scas
test
fldenv
pop
shl
jne
incl
push
fbstp
lock
test
adc
pop
in
jne
lret
add
sar
pushl
lcall
pop
fcompl
mov
js
jb
pop
jne
mov
pusha
jge
incl
dec
inc
fstpt
popf
cs
shll
add
push
jmp
data16
and
insb
ljmp
incl
jne
xchg
xor
cwtl
addr16
and
sbb
out
and
xlat
pop
xor
push
testb
call
lea
insl
mov
push
fcompl
and
xchg
ror
jle
adc
mov
lcall
xor
push
xlat
in
ficomps
cmp
xor
push
jne
fstpt
xor
mov
inc
pop
mov
lods
je
jp
pop
sti
insl
icebp
mov
xchg
scas
das
gs
jmp
lods
lods
enter
mov
dec
imul
cmp
push
add
std
fimuls
lcall
ss
adc
negb
jnp
in
loop
lahf
jae
in
dec
out
push
push
movsl
test
push
test
mov
stos
test
stos
dec
cmp
jo
sbb
out
pushl
rclb
lcall
jb
xor
dec
and
add
cmp
imul
stos
add
dec
mov
pop
lret
mov
add
cmpb
xchg
loope
push
inc
out
pushl
fildll
sub
or
jb
push
ret
push
mov
cld
sbb
xor
jge
inc
leave
xor
jbe
lret
psubb
insl
mov
cwtl
sub
mov
adc
fdivrl
push
daa
inc
js
xchg
add
and
push
shlb
pop
xor
out
lret
inc
dec
lock
pusha
rcll
mov
dec
nop
cmc
test
mov
pop
adc
dec
jno
call
incl
mov
push
repz
push
and
leave
clc
sbb
imul
lcall
lods
lock
add
and
movsl
dec
fiadds
movsb
cmp
insb
add
incl
jnp
sub
inc
cld
cld
dec
roll
aas
or
xchg
es
aas
xchg
imul
lds
dec
push
pop
adc
fldl
jg
lock
sbb
dec
scas
mov
sbb
je
push
mov
in
sahf
lods
mov
insb
lock
xor
and
pushl
adc
dec
mov
scas
ret
add
aas
sub
in
pushl
das
aaa
outsb
movb
pop
and
call
int3
filds
sub
inc
insb
lods
xchg
pop
mov
filds
decl
loopne
gs
fnstenv
repnz
and
sti
js
sbb
jno
test
repnz
fstpl
fcomps
pop
mov
and
or
xor
cmpsb
add
call
jo
mov
cmpsb
in
aam
mov
loope
sub
mov
decl
in
cs
inc
add
jne
pop
shrb
lcall
or
mov
xchg
pop
das
dec
fsts
movsl
ret
rorb
sub
in
jg
std
pushl
push
xchg
pop
ds
xor
je
jmp
xchg
or
in
ljmp
cs
dec
insb
pop
aaa
scas
lahf
dec
adc
dec
int3
jg
int3
jg
std
sbb
xchg
sbb
cmc
ret
popf
inc
pop
outsb
outsb
filds
call
push
in
push
int3
jg
addr16
fdivrl
data16
mov
xchg
sbb
lahf
shlb
mov
push
cmp
add
loop
push
imul
xchg
fwait
xchg
pusha
or
adc
push
mov
jno
or
fbld
add
enter
mov
xor
xchg
cld
lcall
push
mov
mov
sbbl
ljmp
sbb
lahf
fsqrt
mov
xchg
fwait
test
aam
daa
adcl
incl
data16
xchg
stc
out
mov
dec
add
sub
xor
popf
xor
push
adc
push
repz
jmp
dec
pop
ljmp
inc
cld
jbe
push
jge
leave
fwait
cmpsb
adc
loope
cmpsb
inc
adc
fs
add
addr16
mov
aam
inc
sbb
push
rcll
jmp
stc
cld
out
adc
sbb
adc
push
les
sbb
sbb
xor
pushl
negb
shlb
arpl
add
fisttps
ud2
daa
xor
leave
dec
cmp
call
or
shrl
ja
adc
popa
ja
int3
xor
push
mov
pop
sahf
jmp
sahf
aam
sbb
pushl
or
pop
add
add
adc
mov
leave
dec
js
scas
cmpsl
mov
pop
pop
inc
fnsetpm(287
mov
xor
loopne
xor
in
and
stos
popf
test
fdivr
incl
iret
subl
lcall
rcrb
out
testl
mov
imul
shrb
adc
and
sub
sbb
mov
cmp
jns
adc
add
ja
clc
mov
cwtl
xor
es
jno
or
stos
and
call
sub
xor
or
dec
inc
ja
aaa
out
xchg
inc
dec
push
popa
or
and
ljmp
int
lods
lcall
dec
shlb
dec
pop
add
push
push
jmp
jmp
addl
les
cmpsb
test
out
mov
es
icebp
or
notb
sbb
jmp
movsl
fs
mov
lret
lcall
jnp
cmp
cmp
call
mov
mov
test
add
push
es
shlb
adc
mov
ljmp
pop
call
or
test
mov
push
xchg
inc
push
test
aad
jmp
mov
lcall
enter
in
hlt
xchg
leave
das
sahf
add
test
aad
imul
inc
adc
fimuls
loop
gs
pop
cs
cmpsl
xchg
mov
jle
ds
pop
inc
sahf
popa
js
scas
dec
cmc
lcall
pop
mov
in
xchg
or
push
aaa
movl
jo
jne,pn
sub
test
aaa
lahf
icebp
ljmp
cmp
mov
pop
and
sbb
push
fistl
add
scas
outsb
cmp
jmp
fwait
mov
sub
sbb
cmpsl
push
push
repnz
mov
daa
in
add
pushl
mov
sahf
push
lds
mov
adc
jl
insb
mov
dec
ja
adc
test
les
add
cmp
xchg
push
ss
test
inc
dec
push
sbb
pushf
xchg
dec
std
hlt
rcrb
push
pop
xor
popa
dec
rcll
xor
lcall
mov
sahf
sub
gs
rorl
jp
pop
push
das
aas
adc
icebp
mov
cmp
mov
int3
dec
cld
loopne
push
call
push
inc
adc
stc
dec
aad
pushf
fmuls
inc
jg
or
sbb
sbb
and
cld
mov
andb
ljmp
inc
arpl
inc
push
in
out
and
daa
mov
leave
push
iret
mov
incl
xorb
js
cmc
inc
mov
shrb
into
xchg
or
leave
pop
add
into
add
mov
in
push
mov
or
jne
jp
sbb
pop
push
cmp
repz
out
int3
loope
leave
inc
stos
pop
cltd
je
sbb
decl
add
loopne
lret
fldl
mov
sub
ret
pop
xchg
ljmp
push
pop
lock
repz
add
ds
bound
pushf
add
jmp
mov
dec
ljmp
subb
stc
sbb
jns
es
push
cmp
aad
pushl
push
pop
cltd
cmpsl
stos
sub
fisttpll
adc
js
mov
test
shlb
in
iret
xor
mov
xchg
push
jne
aad
jmp
push
sahf
je
stos
mov
push
pop
dec
jmp
cli
cmpsb
fincstp
xchg
ljmp
stos
aad
int3
std
or
pushl
pop
inc
xchg
dec
daa
jmp
jecxz
loopne
rolb
shll
lret
mov
pop
sbb
jbe
mov
xchg
mov
lcall
xor
popf
test
shl
pop
call
jno
insb
cmp
orl
cmp
xor
cs
call
push
cs
xchg
aas
fucom
dec
in
enter
mov
lea
sub
pop
push
insl
outsl
inc
jno
int
inc
jae
adc
scas
fisubrs
sbb
stc
call
inc
lret
adc
mov
xchg
mov
incl
das
jp
push
int
sbb
dec
ljmp
js
dec
cld
ss
fcoms
mov
ljmp
mov
cmpsb
sub
xchg
push
nop
adc
arpl
mov
insl
mov
mov
lcall
sub
jl
or
adc
lods
mov
xor
lahf
pop
inc
mov
loopne
jo
xor
call
out
jae
adc
xchg
jl
xor
jmp
test
dec
jl
dec
pop
cs
pop
jmp
cmpsl
add
ret
sbb
movsl
cli
lods
repnz
dec
jecxz
cmpb
push
jns
cmpsb
incl
imul
jecxz
sbb
loop
jo
repz
ficompl
mov
sub
call
clc
sbb
dec
enter
jle
rolb
mov
pop
aaa
xchg
cld
pop
pushf
push
call
cmp
rorl
dec
push
imul
pop
mov
fs
scas
cld
ljmp
insl
aaa
loopne
jg
adc
mov
ss
popf
imul
lcall
push
je
imul
push
add
scas
aad
mov
jmp
cmp
nop
sbb
repnz
or
dec
add
sbb
stc
fwait
outsb
popa
inc
mov
lcall
test
mov
add
fcompl
sbb
out
mov
fcoml
xor
pusha
shr
rcrb
sbb
pop
pop
inc
shrb
minps
jnp
mov
lcall
push
mov
add
xchg
xchg
sub
inc
jb
mov
inc
inc
mov
jmp
shll
jbe
scas
jg
shlb
add
add
push
jle
lcall
lea
mov
sbb
adc
dec
xchg
adc
mov
lcall
fcoml
mov
flds
xchg
loope
adc
lahf
icebp
sub
mov
test
decl
stos
dec
xacquire
outsb
notl
mov
xchg
outsb
clc
out
idiv
jmp
ljmp
daa
cmp
lods
fstps
movsl
xchg
cmp
test
lcall
pop
xor
adc
mov
xchg
lcall
fstpt
and
jo
mov
dec
sbb
aas
and
or
fstps
addr16
pop
sbb
cmp
repnz
jl
js
fcompl
jmp
in
adc
sub
mov
cmp
in
add
daa
xchg
xor
lcall
xlat
push
push
scas
pop
add
in
push
das
lahf
popf
xor
mov
adc
arpl
sbb
lcall
out
popf
ror
jecxz
adc
stos
aaa
cmp
and
das
mov
mul
xor
daa
incl
inc
outsl
pop
dec
mov
cmp
inc
mov
rol
pop
xchg
rorb
ja
push
stos
inc
lahf
lcall
sahf
push
in
mov
sahf
adc
adc
or
push
or
and
add
jmp
pushl
fbstp
jp
adc
lret
imul
fbstp
inc
xchg
jmp
lret
pop
lods
rcrb
rcr
sbb
sti
shll
and
jno
push
mov
stos
mov
push
sub
loopne
fwait
mov
cwtl
xor
sub
ljmp
daa
xchg
shrl
xchg
test
xor
jo
in
incl
fmulp
cmp
fsubrl
xchg
or
bound
ficomps
je
add
pushl
jb
sub
das
xor
dec
jecxz
push
xor
cmp
jae
out
mov
cmp
adc
fidivl
aad
incl
inc
add
test
call
test
fdivrs
dec
sbb
jmp
adc
or
ds
fbstp
decl
cmc
lock
push
aaa
mov
mov
popf
outsl
pxor
add
lret
dec
arpl
call
int3
imul
daa
push
outsl
xlat
pop
add
and
jg
adc
jbe
dec
sbb
push
and
ljmp
ja
repz
or
addr16
sub
xchg
mov
xor
decl
jne
add
inc
pop
aaa
je
out
movsb
push
push
dec
sbb
aad
mov
pop
inc
cld
xchg
in
jmp
lcall
decl
and
frstor
pop
mov
cltd
aas
std
lret
cmpsb
push
or
inc
clc
sbb
decl
add
lock
pop
imul
cmp
xchg
adc
incl
dec
movsb
ret
pop
arpl
jp
out
dec
lock
loope
cmp
loope
mov
loop
mov
sahf
jb
aaa
bound
push
lahf
jmp
xchg
jb
rol
subl
sbb
push
sub
pop
decl
pop
addr16
mov
push
sub
cmpb
movsl
mov
mov
jno
decl
fstpl
cld
imul
lret
loopne
aam
sbb
int
data16
fs
push
push
dec
incl
std
gs
mov
leave
cmp
adc
loopne
sbb
jmp
add
pop
jecxz
cmp
sbb
sbb
fidivrl
pop
pop
inc
xchg
roll
call
mov
mov
gs
scas
iret
add
xchg
cmp
call
loopne
in
js
aad
call
ds
push
adc
and
aaa
test
fimull
xchg
imul
mov
sub
ret
lahf
lods
mov
adc
cwtl
mov
push
test
xor
jmp
push
cmp
mov
jne
or
cmp
scas
xlat
cmp
popf
test
fisubs
lcall
ficomps
and
push
and
mov
addl
sbb
jmp
lcall
xor
and
sub
cmp
mov
sub
inc
pop
fs
insb
adc
call
fs
nop
dec
test
dec
popf
aad
int3
cmp
fstpl
lods
sbb
push
sar
decl
paddb
jns
adc
repz
mov
cli
and
pushf
arpl
adc
push
jns
je
in
inc
push
out
jp
stos
mov
fst
jl
xor
sbbl
xor
jns
pop
push
xorb
xor
leave
gs
mov
int3
sub
adc
mov
adc
xchg
pushl
sub
cmpsl
or
sbb
xor
dec
idivl
sub
inc
or
imul
mov
out
pop
push
or
test
loop
pusha
mov
mov
add
std
jmp
sahf
popa
cmp
push
andl
jmp
in
pop
in
xchg
ljmp
test
xchg
fwait
test
shlb
inc
cmpsb
sub
mov
push
push
hlt
cmc
or
cmpsb
decl
sbb
jne
mov
ljmp
fld
push
out
fwait
push
out
nop
pop
and
int
out
mul
cmp
test
out
inc
jle
push
cmc
jnp
jg
pop
cmpsb
and
add
or
ljmp
jmp
in
out
lock
sub
inc
out
cmp
xchg
je
stos
iret
lea
dec
movsl
in
and
jle
sahf
icebp
int3
xor
jnp
or
je
jno
jno
bound
incl
mov
xor
xchg
pop
push
adc
xchg
mov
inc
test
in
fs
fbstp
ljmp
jg
filds
push
pop
mov
inc
pop
add
ljmp
aaa
mov
inc
push
out
cmc
mov
inc
fbstp
or
inc
jae
push
push
std
jp
or
jno
lea
cmp
push
cmp
clc
mov
aam
xchg
lret
push
adc
inc
mov
shlb
fisubrs
rolb
jmp
jecxz,pt
lret
lock
sbb
es
call
cs
lods
pop
pop
test
movsl
popf
cmc
imul
cmp
inc
inc
sahf
je
daa
mov
xchg
andl
jmp
push
not
clc
add
jae
mov
mov
outsl
add
fst
addl
cmp
lret
popf
sbbl
mov
scas
insb
xchg
xchg
pop
loope
dec
ds
insb
aaa
mov
pop
int3
sub
incl
stc
adc
push
mov
xchg
xor
xchg
push
mov
xchg
jbe
scas
mov
push
bound
int3
xchg
jmp
dec
loope
xor
inc
push
mov
call
xor
in
outsb
std
call
and
aam
insl
adc
jmp
shl
decl
daa
xor
out
call
imul
js
push
push
jns
sbb
pop
sub
sbb
insl
call
rorl
or
stos
les
jb
jmp
xchg
mov
nop
jp
in
add
bound
sarl
mov
int
ljmp
push
mov
pusha
popa
cwtl
mov
iret
popa
inc
inc
sub
jg
jb
mull
pop
sarb
mov
in
outsl
sbb
mov
lods
fidivs
sti
dec
mov
inc
pop
jae
test
imulb
nop
aam
push
sbb
in
mov
sar
and
scas
faddp
xchg
rolb
aaa
push
pop
push
cmpsl
push
scas
movsb
push
test
lcall
ljmp
popa
stc
adcb
or
xor
add
jo
inc
repz
das
in
ljmp
into
xor
out
mov
xor
les
cmp
sbb
mov
dec
and
loopne
mov
lea
dec
int
mov
push
inc
stc
cmp
pushl
sub
scas
mov
add
cmp
mov
add
inc
xor
inc
cmovnp
sar
cld
aad
gs
jmp
xor
int
mov
shll
push
mov
mov
jmp
iret
lds
lret
dec
xor
xchg
daa
icebp
mov
adc
mov
clc
nop
lods
movsb
pop
sbb
dec
ret
mov
cmpl
icebp
shr
mov
mov
in
push
mov
nop
mov
add
inc
lods
sub
jle
add
movsl
fwait
sub
enter
xor
lret
adc
fisttps
cli
cmpsb
test
stos
stos
cmp
jle
push
in
xor
inc
push
ss
mov
insl
or
mov
imul
jo
push
pop
aaa
xchg
or
pop
jmp
mov
adc
jmp
je
in
cmp
sbb
jge
adc
bt
add
incl
xor
inc
jo
cmp
jae
push
mov
push
cmp
ficompl
pop
imul
mov
jns
pop
arpl
lods
add
cmp
push
xor
jb
into
xorb
cmc
rcrl
jge
lods
xchg
cmp
addr16
movsl
xchg
std
leave
mov
call
addr16
jae
mov
popl
outsb
xchg
test
call
add
ljmp
mov
mov
repz
pop
out
cmp
data16
sbb
mov
incl
mov
mov
test
xchg
xchg
push
stc
hlt
lock
xor
or
out
rorb
dec
inc
bound
push
sti
and
imul
shrl
rorb
sub
mov
iret
jmp
lret
mov
dec
fimull
dec
push
stos
hlt
and
sbb
lods
adc
mov
call
jbe
adc
int3
mov
mov
lcall
iret
sbb
popa
daa
insl
in
jmp
dec
mov
clc
shlb
es
sbb
and
bound
imul
scas
push
out
mov
les
xchg
cmc
and
xchg
icebp
inc
popf
and
cmc
lea
inc
orl
mov
sbb
mov
mov
push
outsl
xchg
lods
shrb
pop
cmp
lahf
xchg
add
cltd
xchg
jp
cli
lret
mov
and
lock
lahf
or
pushl
cli
vpunpckhqdq
fs
or
in
jb
fs
inc
fistpll
add
pop
xchg
cld
stc
mov
mov
loope
adc
mov
popf
ss
xchg
mov
jle
mov
lcall
ss
or
mov
mov
xchg
adcl
cmp
pop
xchg
jmp
sbb
push
je
cltd
mov
pusha
or
xor
xchg
lret
fs
pop
cmp
inc
add
push
adc
sti
and
leave
ljmp
nop
jne
adc
and
mov
ljmp
push
in
cmp
and
mov
ss
test
bound
mov
dec
aam
cli
pop
repnz
sbb
lcall
or
adc
cwtl
add
pop
sub
cmp
dec
dec
adc
pop
adc
stc
mov
sbb
sub
mov
push
adc
mov
arpl
dec
dec
jb
popf
adc
xchg
adc
mov
decl
xor
sar
imul
shlb
je
mov
lahf
lcall
jmp
mov
and
in
clc
in
xchg
xor
xchg
inc
aam
push
arpl
mov
negb
pop
out
pop
js
outsl
jns
pop
mov
repnz
and
fwait
jo
into
mov
pushl
pop
test
xchg
cmpl
jo
scas
cmp
or
cmp
pushl
in
push
cmp
repz
xchg
out
lahf
out
test
pop
cmp
dec
pop
popa
lret
mov
aas
or
imul
push
sahf
pop
inc
push
and
idiv
call
cmp
and
add
adc
cmpsl
xor
pusha
sub
jecxz
ficoms
fisubrl
call
decl
sub
inc
pop
daa
frstor
std
pop
adc
or
incl
sub
pop
mov
ret
es
aad
cs
and
mov
aam
les
jecxz
jg
clc
mov
pop
enter
sbb
dec
pop
fcomip
mov
rclb
test
mov
or
dec
dec
call
loop
adc
pop
jp
sub
add
jo
ret
fsub
pop
ljmp
push
rsm
inc
cmp
imul
add
fnstcw
jmp
adc
and
call
stos
rorb
adc
rclb
mov
add
mov
sbb
and
inc
jmp
cwtl
pop
sbb
and
inc
sahf
out
fisttps
xor
fsubrs
jmp
ficoml
lds
negb
mov
xchg
mov
sbb
ljmp
call
gs
adc
insl
repnz
lret
adc
xor
adc
dec
xchg
add
stc
push
pop
mov
mov
xor
mov
ja
filds
and
and
decl
lret
shr
lods
nop
xchg
clc
or
push
push
out
xchg
incl
push
call
insb
lds
and
jno
sub
push
in
stc
test
decl
lret
add
mov
inc
mov
cld
daa
push
sbb
jae
scas
pop
sbb
jl
pushf
jle
add
ds
lods
jp
js
test
push
jnp
mov
ss
xchg
ljmp
mov
cmp
sbb
pop
gs
pusha
xchg
push
sub
bswap
xchg
or
pushl
test
iret
aam
aad
add
xchg
js
aad
stc
ljmp
mov
popa
dec
jmp
clc
xchg
sbb
lods
out
push
jne
data16
fcompl
inc
sub
sbb
call
add
pop
mov
jecxz
sbb
mov
insl
lods
and
in
inc
addr16
pushl
inc
dec
std
mov
mov
mov
ljmp
dec
push
aaa
sahf
xlat
pop
inc
out
cmp
incl
and
jle
add
push
add
pushf
xchg
fisubrl
fcoms
dec
jno
decl
pop
add
dec
dec
mov
inc
pop
aam
jo
sbb
push
insl
pop
sbb
xor
jo
stc
ss
jnp
arpl
jbe
cmpsb
and
jp
jb
sub
sbb
xchg
dec
jmp
pushl
push
or
xchg
mov
test
dec
fstl
sti
ror
add
loopne
ds
call
jp
mov
dec
xchg
xor
lret
sbb
ljmp
add
les
adc
dec
movsb
add
dec
test
scas
mov
cmc
pop
mov
push
mov
cltd
dec
cld
stos
xor
pushl
outsb
fildl
shlb
insl
js
clc
repz
mov
out
jge
int
xchg
sbb
pop
xchg
push
ljmp
lahf
je
mov
cmp
enter
leave
cmp
ljmp
xor
aad
mov
dec
xor
jp
inc
and
mov
outsl
and
pushl
outsb
push
ja
xchg
mov
bound
mov
stos
lea
inc
je
xor
pushl
sti
cmp
inc
jno
cld
les
imul
loopne
rcll
pop
mov
ljmp
daa
scas
xlat
and
gs
out
mov
insl
hlt
pop
nop
mov
data16
lcall
lret
push
inc
mov
test
jb
xor
mov
and
ljmp
mov
pop
sub
popf
mov
cmpl
fnstenv
mov
in
ds
jge
cmp
lods
fsubs
cmp
pop
mov
cmc
add
inc
std
in
call
mov
stos
icebp
fbld
sahf
pop
ljmp
mov
stos
ret
test
aad
push
incl
out
adc
mov
fsubl
outsb
mov
call
xchg
or
jmp
out
dec
mov
mov
mov
decl
jmp
mov
dec
xor
dec
sbb
cmp
frstor
test
dec
cmpsb
fidivrl
icebp
add
jnp
loopne
push
lds
inc
mov
inc
repz
in
push
cmp
pusha
jecxz
lahf
pop
cld
jg
and
ss
add
or
cmp
jnp
push
cmp
ret
aas
ds
pop
add
mov
idivb
adc
fs
pushl
jge
fidivrs
xor
jge
xor
cmp
add
inc
push
btc
sub
xor
mov
idivl
or
enter
mov
mov
incl
cltd
icebp
enter
adc
xor
nop
std
gs
sub
add
xchg
pop
cltd
imul
js
push
mov
jl
and
fstpt
icebp
mov
inc
pushl
jae
hlt
jmp
and
dec
shl
xor
jae
and
mov
sub
lcall
fildl
cltd
fwait
insl
insl
pop
pop
pop
add
leave
ds
idivl
pop
mov
adcl
adc
inc
sub
iret
add
push
out
hlt
inc
sub
xchg
imul
jmp
jb
inc
dec
inc
in
shlb
ljmp
out
ret
mov
sbb
dec
lcall
inc
push
movsl
jmp
adc
in
cmpsb
mov
ret
mov
sub
adc
sbb
incl
inc
addr16
mov
jmp
hlt
add
xchg
add
stos
call
aas
aam
ljmp
scas
add
data16
inc
add
pop
imul
sbb
pushl
loopne
xchg
pushf
daa
adc
sub
sub
jb
cmp
imul
xchg
sub
call
push
push
xor
adc
orl
and
lret
xor
mov
dec
in
mov
pushl
loopne
jnp
lret
iret
mov
aad
daa
and
nop
stos
inc
xchg
ljmp
popa
xchg
mov
pop
gs
test
add
stos
fdiv
movsl
inc
dec
push
insl
out
out
pop
cmp
mull
lcall
mov
fidivrs
jg
jnp
ror
pushl
shlb
fcomip
inc
test
ja
clc
inc
das
sbb
cmp
pop
xor
lahf
call
out
pop
in
negl
xchg
hlt
fsubs
xchg
jmp
mov
stos
sub
mov
mov
pushl
les
std
xchg
xchg
fimuls
pop
insl
rcrl
xchg
pop
pop
movl
mov
push
dec
add
dec
aad
cmp
sub
jmp
mov
int
repz
jge
aas
jmp
mov
in
mov
sub
decl
ds
jno
pop
rcrb
call
cmpsl
pop
icebp
fimuls
mov
xchg
lcall
push
push
pusha
adc
incl
inc
pop
cmp
movsl
in
jo
scas
insl
call
fimull
xor
daa
mov
mov
pop
ret
jg
sarl
call
sub
mov
inc
fsubr
push
pop
nop
xchg
sti
jb
scas
popf
pop
insb
add
sub
jle
fs
cmp
orb
push
cmp
push
sub
mov
in
or
pop
iret
imul
push
dec
push
imul
lret
jbe
inc
xchg
pusha
mov
dec
adc
or
in
ret
push
inc
push
cmp
sbb
repnz
stc
into
pop
in
call
push
cltd
cmp
sbb
addr16
mov
dec
pop
pop
pop
orl
cmp
mov
cmp
ss
les
iret
scas
jle
add
lods
xor
les
and
jbe
and
push
jecxz
sti
cmpsb
fwait
int
jne
loopne
xchg
pop
nop
icebp
lods
pop
je
stos
jge
pop
lds
xchg
mov
gs
inc
stc
push
cs
je
fs
ffreep
mov
inc
push
and
sti
and
cld
test
sbb
in
add
adc
divl
iret
jae
int
aas
xchg
cli
jecxz
aam
call
sbb
pusha
mov
in
mov
out
jmp
insl
loop
ret
mov
jmp
enter
xchg
inc
mov
js
lret
insb
imull
adc
call
scas
and
int
xchg
dec
sahf
movsl
insb
fsts
xlat
xchg
xchg
add
xlat
pop
xlat
add
xlat
ljmp
inc
jcxz
jb
sti
mov
cmp
test
arpl
pop
adc
cmpsb
inc
sti
in
inc
iret
pushf
cmpsl
mov
cmp
out
cmpl
xchg
dec
pop
cmp
and
ds
sbb
stos
xor
pop
mov
popf
ficoml
fs
call
and
inc
dec
scas
jecxz
or
lret
cs
mov
cmp
and
iret
xchg
mov
dec
and
ljmp
pusha
lahf
popa
jmp
inc
dec
pop
popa
call
call
js
lcall
cmc
fisubl
xor
xchg
pusha
jns
jmp
aad
bound
push
cmp
push
xor
scas
jmp
scas
and
mov
fistps
out
sbb
mov
call
ljmp
cmp
or
and
cmpsl
mov
mov
dec
ret
ds
repnz
addb
sbb
in
rcrl
mov
push
icebp
sub
ss
out
xchg
add
call
sub
lock
out
out
jae
dec
hlt
movsb
rclb
xchg
xchg
loop
aaa
jmp
pushl
mov
lds
gs
add
shll
add
and
ret
inc
imul
les
lods
scas
push
sbb
out
decb
or
addr16
leave
adc
jecxz
jmp
sub
scas
test
aaa
fistpl
push
call
stc
xchg
add
jl
pop
cltd
or
lcall
testl
cmp
das
loope
add
outsb
cli
movsl
in
adc
sub
call
and
sti
mov
mov
lods
popf
jmp
cmp
in
mov
sub
xchg
scas
mov
mov
fwait
lcall
fsts
sub
mov
and
push
pop
jbe
xchg
addr16
jmp
xchg
inc
mov
stos
add
addr16
fs
rcrl
sar
jmp
sbb
call
imul
addl
sub
cmpsl
incl
lret
push
jne
sub
ja
pushf
xlat
push
xor
or
test
sub
daa
stc
mov
mov
inc
cltd
xor
mov
add
dec
fs
cli
xchg
fwait
imul
jne
fadds
cs
aad
dec
stos
mov
pop
shl
mov
pop
xchg
push
mov
scas
scas
jmp
xchg
outsl
and
inc
xor
test
xor
adc
xor
fdivr
inc
mov
push
sti
ret
and
jge
and
daa
inc
loopne
lahf
daa
out
sbb
jl
addr16
cmp
fsubs
sbb
mov
lahf
adc
mov
in
mov
pushl
mov
stos
testl
dec
mov
fisttps
dec
cmp
int
jmp
decl
inc
dec
adc
sub
inc
gs
push
or
subl
decl
ret
stos
mov
push
stc
ljmp
pop
loope
push
sbb
cmp
sbb
cmp
je
pop
stc
jp
jb
xchg
in
das
jo
and
sub
add
cmp
mov
enter
out
enter
sbb
fs
pushl
movsb
push
jae
adc
test
add
adc
fdivrs
mov
mov
ljmp
inc
leave
jmp
popa
gs
sbb
add
sub
test
xchg
mov
sets
jle
jne
inc
das
add
adc
inc
leave
pop
pop
adc
jmp
call
ljmp
cmpsb
lds
mov
push
push
and
insb
bound
rcll
xor
mov
ljmp
mov
test
aam
das
add
movsl
adc
rcl
sbb
pusha
and
scas
jge
mov
push
test
and
aas
jb
fcoml
aad
xchg
ja
jle
jmp
es
dec
push
lea
sub
cmp
adc
xchg
fs
sub
leave
incl
jmp
mov
mov
sarb
sbb
xor
loop
out
xor
jg
mov
ljmp
push
movsb
ljmp
lcall
mov
xchg
ja
mov
out
incb
fidivrl
pop
xchg
xchg
pop
inc
pop
mov
sbb
push
call
arpl
decl
xor
call
mov
stos
xor
lret
insl
in
inc
jg
push
frstor
in
cmp
decl
pop
cli
mov
mulb
test
int
sbb
adc
popa
aam
enter
cltd
test
pushl
into
lods
lods
repnz
js
jle
pop
inc
mov
inc
push
daa
test
inc
movsb
push
rclb
iret
adc
sbbl
sbb
xor
data16
pushl
xchg
push
add
loope
imul
cld
popf
outsb
fnstenv
jmp
fs
pop
jmp
shll
sub
pop
cmp
jo
mov
stos
jbe
es
mov
or
mov
testb
adcb
mov
sub
aaa
es
incl
ror
sbb
test
repnz
jnp
pusha
pop
jne
in
int
jp
outsl
or
les
call
adc
adc
test
icebp
cwtl
adc
jns
je
fs
cmpl
inc
push
das
jp
jl
arpl
jae
or
mov
sbb
and
out
call
push
ret
inc
and
enter
pushf
push
lods
push
clc
cld
pushw
aad
mov
dec
decl
sbb
loop
jns
xlat
mov
in
push
mov
pop
dec
int3
adc
mov
ljmp
adc
cmp
repnz
xchg
aad
sbbb
cli
popf
dec
jmp
outsl
incl
imul
mov
ljmp
incl
lods
and
dec
pop
sub
dec
jle
test
test
pop
loop
loop
imul
pop
shl
cld
jb
mov
cmpl
jmp
mov
packuswb
jae
pop
mov
xchg
ret
sahf
scas
movsl
std
cltd
jno
mov
leave
sbbl
and
push
pop
add
cmp
push
mov
mov
decl
fstps
jns
das
enter
das
mov
pushf
jp
and
xchg
adc
leave
sbb
cmp
orl
sub
adc
in
imul
test
incl
fucom
pushf
sbb
aam
sti
outsb
xchg
mov
lods
iret
adc
dec
ret
push
decl
pop
dec
call
pop
sbb
cltd
adc
std
movsl
pop
sbb
mov
or
cmp
lcall
loope
pop
push
adc
scas
xor
or
inc
fistps
pop
cs
lock
push
cmp
int
pushl
cmp
adcb
fwait
cmpb
popa
lods
or
inc
stos
je
cmc
inc
aam
xchg
fldl
dec
dec
xor
push
xchg
push
mov
cmp
das
mov
js
movb
test
lcall
fists
fistps
jp
xchg
fwait
subb
pop
dec
sbb
mov
sbb
cmp
jmp
stos
mov
out
mov
stos
dec
fwait
push
enter
cmp
inc
repz
sarl
arpl
incl
out
in
pushf
sti
dec
insl
fmull
popl
mov
adc
sbb
in
mov
xor
push
std
cmp
jge,pt
incb
cli
or
outsl
decl
or
clc
pop
jns
mov
shl
lcall
into
movsl
mov
pop
rcrl
jmp
stc
dec
and
ds
sub
adc
pop
mov
out
lret
inc
pop
push
pushl
cmp
mov
popa
mov
push
nop
add
jbe
cmpsb
cmp
push
incl
mov
and
outsl
pop
fdivs
iret
shlb
roll
in
cmc
clc
mov
push
and
ljmp
les
fs
mov
incl
push
sbb
mov
mov
mov
fsubs
or
shll
xchg
pushl
ss
leave
xchg
pop
mov
fstpl
push
and
cltd
mov
or
xchg
les
decl
lods
cmp
cmpsl
cwtl
jle
add
in
pop
test
jmp
xor
fwait
jbe
ljmp
inc
loop
xor
mov
dec
cmp
pop
sub
popa
jae
add
mov
nop
ljmp
push
mov
andl
mov
hlt
enter
ret
jmp
incl
loope
in
cltd
fsubl
push
push
push
or
fstps
pop
scas
insb
sub
adc
mov
pushl
sub
add
sub
cmpsl
scas
movsl
mov
cmp
hlt
push
call
cmp
add
test
mov
xchg
aam
xor
jg
push
cltd
cmp
inc
lock
jmp
mov
add
push
scas
sub
ss
jl
dec
fwait
les
mov
inc
test
rclb
fiadds
xor
ret
inc
lds
mov
scas
into
sbb
ljmp
dec
push
aaa
add
cmpsl
movsl
push
test
inc
jne
lea
or
fucomip
ret
add
cld
cmpsb
in
jo
push
les
inc
stc
xchg
bound
mov
rolb
mov
pushl
insb
mov
loopne
push
es
sub
push
mov
dec
cmp
out
imul
cmp
fucomi
xchg
movsl
in
adc
push
inc
mov
sub
jne
push
int
push
jg
mov
lcall
sar
cmp
inc
nop
add
push
fwait
push
out
mov
enter
xlat
jae
push
ds
inc
pop
mov
sub
fistl
fwait
ss
add
cltd
pop
imul
pop
in
test
hlt
mov
decl
ret
jo
sbb
adc
inc
xchg
cmp
mov
xor
adc
inc
sbb
sub
shll
xchg
push
push
gs
pop
lock
mov
js
xchg
xlat
aaa
sbb
ljmp
or
mov
xor
dec
sahf
fdivrl
rcll
aas
xlat
popf
add
iret
mov
mov
leave
mov
inc
push
jg
aad
call
adcl
xorl
cmp
jmp
mov
stc
adc
push
ljmp
sub
push
mov
pop
into
in
inc
mov
fdivr
mov
pusha
insb
cld
das
sbbl
mov
jno
inc
scas
mov
cmp
pushl
repnz
sarl
outsb
fwait
dec
inc
or
mov
push
sub
push
sub
inc
cmc
mov
clc
sbb
jge
int
pop
adc
popf
push
mov
lret
add
lret
push
and
lcall
mov
mov
in
xor
push
xor
scas
inc
fs
xchg
pop
incl
fisttpl
mov
or
out
mov
divl
mov
dec
push
pop
outsb
sbb
inc
test
dec
rol
lcall
jge
mov
xlat
sub
dec
inc
sbb
xchg
int
lcall
add
jae
mov
int
jp
in
jecxz
call
or
call
push
loopne
dec
std
in
ret
std
jns
arpl
jo
mov
or
addr16
push
fldl
inc
xchg
lock
jecxz
xor
jb
cmp
mov
leave
pop
std
clc
incl
add
jb
add
leave
outsl
dec
cmp
or
mov
and
dec
dec
nop
int
cmc
sub
inc
lock
mov
jo
in
or
fdivs
in
sbb
mov
mov
push
sbb
sub
push
push
and
push
inc
and
push
mov
inc
aas
mov
mov
jmp
in
mov
dec
cmp
mov
aam
adc
sbb
incl
adc
mov
mov
lahf
push
dec
sub
shrb
out
fcoms
cmp
cmp
adc
add
sbb
sub
mov
rolb
jno
adc
ljmp
mov
gs
jne
cmpsb
repnz
mov
cli
and
add
cs
cmp
stc
hlt
add
dec
mov
mov
movsl
mov
push
je
test
fldl
xlat
notl
lret
dec
xorl
pop
mov
ljmp
and
dec
sahf
fcmovbe
xor
aas
lret
decl
cmp
mov
fwait
dec
outsb
cmp
fmulp
add
jno
or
lds
incl
adc
inc
fidivs
stc
leave
sarb
pop
test
inc
clc
mov
sbb
call
cmpsb
ret
mov
cmp
fidivrl
mov
loopne
pop
ss
test
movsl
pushl
xchg
ret
inc
ds
add
mov
or
xor
popf
outsb
mov
decl
inc
jo
mov
gs
jmp
int3
or
or
sub
jle
mov
pop
lret
push
adc
iret
jno
cwtl
cmp
jmp
dec
mov
ljmp
sti
mov
push
cmc
sbb
or
pop
cwtl
inc
gs
popf
cvtps2pd
pop
cltd
mov
mov
pushl
xor
xor
inc
je
clc
mov
ds
out
js
push
outsb
mov
and
cli
jbe
or
mov
lods
inc
jb
mov
addr16
insl
mov
mov
call
and
ret
test
jmp
mov
cmp
pop
dec
test
mov
loope
ret
mov
pushl
xor
fidivs
mov
daa
cwtl
push
or
jg
aaa
xor
inc
add
lcall
xchg
aad
mov
push
mov
imul
arpl
adc
popf
jle
add
aas
sbbb
push
out
cmp
bound
adc
mov
ffreep
call
xchg
mov
stc
adc
sub
jmp
pushf
xchg
rcl
xchg
wbinvd
dec
dec
mov
jmp
fimuls
arpl
shll
pop
mov
pop
ss
cli
into
nop
jne
xchg
mov
call
dec
sti
lcall
fdivrl
dec
add
dec
in
mov
sbb
lret
std
loope
xchg
and
jl
lea
sarl
push
mov
or
fstps
mov
aaa
decl
xor
sahf
sub
jle
and
sbb
subb
push
iret
orb
dec
xor
repnz
popf
sub
mov
pop
nop
pop
fmulp
adc
negb
jg
pushl
lcall
mov
mov
pop
push
mov
adc
mov
leave
mov
addr16
test
dec
adc
dec
emms
loope
inc
sar
insl
sub
mov
pushl
idivb
std
dec
fwait
negb
stos
mov
adc
and
int
jb
subb
jmp
sub
pop
in
divl
outsl
push
dec
clc
rcr
lock
sub
jl
sbb
jmp
jo
stos
loop
gs
jmp
in
cwtl
fmulp
in
add
push
add
outsb
scas
insb
push
call
shrl
xchg
xchg
fdivs
mov
inc
loop
in
aas
loop
movsb
lret
ljmp
decl
pop
sarl
movsl
fwait
mov
cli
pop
fistpll
inc
in
mov
mov
call
inc
adc
jle
pop
xchg
and
push
sub
jns
push
add
jmp
aas
je
push
pop
push
subb
js
push
adc
sbb
incl
adc
xchg
pop
mov
loopne
clc
gs
and
pushl
lret
inc
jmp
mov
sbb
xor
mov
push
dec
mov
jp
adc
pop
sbb
mov
push
fcoml
adcl
or
jmp
push
or
xchg
and
call
lcall
jecxz
add
int
fwait
sbb
les
aas
inc
in
js
pushl
mov
sbb
popa
push
pop
lds
mov
xchg
das
gs
jmp
jmp
pop
mov
dec
mov
rolb
inc
std
jle
aad
mov
scas
cmp
gs
inc
jns
std
jo
inc
je
ss
or
mov
sbb
pop
add
push
push
icebp
xor
sbb
call
popf
dec
push
cmc
pop
mov
cltd
insl
ljmp
or
inc
sti
add
cld
mov
cmpsl
pop
stos
adc
mov
nop
mov
int3
dec
dec
daa
shll
jg
push
hlt
decl
cmpsl
sbb
stos
dec
pop
jecxz
cmp
clc
mov
scas
mov
insl
xchg
push
call
jmp
nop
add
mov
scas
insl
repnz
je
shlb
ja
cmp
insb
call
dec
inc
adc
cli
xchg
daa
mov
aad
push
sbb
push
cmpb
mov
stc
xlat
and
xchg
std
push
mov
and
je
nop
push
adc
mov
add
xchg
mov
incl
stc
imul
or
repnz
cli
sub
add
jo
lret
pop
sub
lcall
jmp
or
push
push
cmc
mov
imul
mov
cmp
dec
pushl
fdivrl
fimull
mov
lea
push
adc
xor
clc
out
cmp
aas
push
pop
dec
cld
fsubl
fnstenv
loop
arpl
into
fldcw
decl
roll
xor
ds
ds
jns
jae
lahf
dec
mov
outsl
dec
loope
mov
adc
loop
pop
xor
cmc
addl
sbb
inc
js
mov
andb
inc
clc
out
xor
lret
ljmp
js
jo
push
fcmovnbe
lods
inc
repnz
bound
pop
ret
loope
add
adc
repnz
lcall
stos
xchg
aad
jne
dec
cltd
ret
jo
inc
frstor
fbstp
mov
flds
inc
cmp
xchg
xchg
jne
pop
cs
fdiv
aad
or
xchg
pusha
adc
icebp
loopne
jmp
jo
leave
loopne
sub
jecxz
sbb
push
test
pop
xor
mov
incl
adc
ja
insb
roll
sub
mov
leave
scas
adc
lret
mov
jo
pushf
icebp
popf
pop
cmpsb
or
push
pop
std
mov
inc
or
mov
pushl
aam
flds
repz
sti
stos
jmp
push
push
pusha
xchg
fisubrl
fwait
cli
repnz
jae
stos
insb
lret
and
call
int
push
dec
mov
jge
sub
test
imul
loop
mov
lcall
fstpl
shlb
repz
out
loope
and
fcmovbe
pop
mov
dec
pop
call
cmp
push
mov
mov
mov
dec
xor
in
jo
leave
mov
incl
pop
loopne
nop
inc
dec
inc
mov
notb
std
data16
pop
sub
scas
jno
pop
push
imul
dec
ljmp
ljmp
fs
jge
test
xor
push
imul
call
fcoms
push
aaa
xchg
pop
jge
mov
and
test
adc
int
repz
lcall
aam
shlb
mov
jp
xchg
push
rcll
mov
cld
dec
cmpsb
cmp
call
aaa
push
jl
cmp
and
xchg
repnz
lcall
lret
add
jmp
adc
ret
sbb
xlat
jle
clc
dec
cld
cmp
loop
pop
jno
add
cwtl
xor
pop
dec
jge
jmp
shlb
clc
popa
inc
add
pop
clc
xchg
sbb
ret
cmp
inc
repnz
fwait
inc
push
sbb
xor
decl
push
sbb
mov
fmul
andb
push
out
das
mov
or
shrb
xchg
out
mov
call
xlat
arpl
fwait
xchg
cwtl
or
pop
repz
int
and
adc
mov
xchg
sub
mov
ljmp
push
lret
bnd
mov
inc
mov
jmp
push
cmp
decl
add
insb
frndint
cmp
das
leave
push
cld
dec
pop
leave
icebp
cmp
dec
fwait
jae
jg
sbb
inc
mov
adc
inc
popf
xchg
inc
sbb
iret
je
outsb
lock
int
push
lret
push
jnp
bound
lods
jmp
shrl
movl
inc
add
stc
pushl
arpl
ret
daa
hlt
decl
dec
lods
pushf
pop
jbe
shlb
lcall
shrb
fwait
pusha
decl
addr16
imul
stc
int3
adc
mov
lret
jmp
add
data16
lds
stos
lcall
icebp
popf
loop
js
das
je
cmpl
jne
or
sbb
mov
dec
push
inc
and
jmp
mov
xor
push
imul
out
pushl
out
and
adc
sub
std
fsts
idivb
imul
xchg
jno
pushl
adc
push
mov
xchg
jp
mov
mov
inc
jnp
mov
jmp
cmpsb
sbb
dec
xchg
add
mov
addr16
out
enter
cmp
in
int3
enter
aas
mov
and
gs
add
cmp
cmpsl
dec
sbb
frstor
in
pusha
cmp
data16
fisubrs
or
mov
ret
rcr
xor
pop
or
adcl
lret
cmpsb
xchg
outsb
jp
sbb
dec
cmp
or
inc
mov
sbb
outsl
lock
mov
push
sbb
lcall
ss
sbbb
mov
sbb
jb
jmp
and
mov
in
insb
xchg
scas
int3
leave
fadds
mov
cs
mov
rcrb
call
push
fs
jno
cmp
sub
push
or
adcl
arpl
pushl
scas
arpl
pop
js
cld
adc
loop
arpl
movsb
sahf
int
xchg
out
ljmp
gs
imul
mov
jmp
mov
call
sar
repz
pushl
inc
adc
dec
ret
data16
xchg
sbb
jne
repnz
pop
push
jmp
push
jmp
push
loopne
lods
mov
out
add
incb
sahf
jecxz
cmp
push
jmp
sbb
push
shl
xor
mov
mov
mov
jo
std
add
call
fidivl
sub
mov
push
or
mov
dec
enter
jp
mov
loop
imul
loopne
push
cs
xchg
fdivrl
aaa
xor
dec
xchg
adc
push
lcall
ss
mov
nop
rcrl
jo
idiv
pushl
loope
xor
outsl
jns
lds
sub
fildl
int3
push
dec
loop
ljmp
ret
rcl
xor
mov
xchg
push
adc
test
call
and
jg
lahf
xlat
rorb
sub
cmp
fs
xchg
enter
dec
out
xor
ljmp
cmp
push
cmpsl
jne
pop
jne
inc
rorl
push
cmpsl
inc
and
xor
mov
clc
cltd
into
push
and
loope
push
cld
xchg
fs
dec
xchg
xchg
mov
std
fbstp
jle
mov
inc
scas
mov
sbb
stc
sbb
popa
and
mov
jno
neg
decl
iret
pop
jns
shll
push
mov
movsl
inc
stos
pop
xchg
xchg
js
cli
xor
pop
inc
incl
pop
dec
shlb
in
daa
shll
jl
pop
les
xchg
clc
mov
sti
add
incl
push
inc
aas
scas
shlb
sub
push
inc
push
outsb
push
ljmp
jmp
sbb
xor
pop
inc
dec
lret
pop
cmp
sbb
sahf
andl
or
jg
jmp
dec
mov
int
gs
stos
ds
ret
loop
sub
jne
call
sar
dec
and
push
cltd
xchg
movsb
xchg
mov
jmp
loopne
adc
nop
test
xchg
jl
jns
mov
lcall
iret
pop
add
cmp
std
mov
jb
call
jecxz
int
dec
mov
decl
add
lods
inc
scas
sar
fwait
ds
mov
cmp
and
add
test
add
enter
ljmp
mov
shrb
js
dec
pop
mov
loope
and
popa
xchg
lcall
jl
cmp
mov
pop
ss
insl
fldl
cmpsb
aad
arpl
dec
mov
lea
jmp
lcall
movsb
sbb
les
iret
movsl
or
inc
cld
sbb
xor
mov
jmp
call
jmp
inc
out
cmpsw
and
fisttps
popa
or
outsb
xchg
loopne
lret
mov
jmp
adc
cmp
rcrb
hlt
jnp
out
sub
pop
fbstp
mov
dec
enter
in
mov
pop
shll
push
xor
cltd
sub
push
lds
lock
stc
and
lahf
sbb
lret
inc
sbb
dec
sahf
xchg
add
lcall
pop
int
xlat
mov
shlb
jmp
pop
mov
scas
fimull
loopne
in
push
or
dec
addr16
inc
xchg
or
lds
pushl
clc
pusha
loop
rorl
aad
mov
or
lahf
xchg
and
mov
push
bsf
push
jb
cmpsb
jg
loopne
push
divl
mov
ljmp
rcrl
outsl
jbe
in
push
cmpsl
jae
loop
icebp
in
add
lock
push
cmp
pop
and
call
movsb
nop
ja
mov
pop
cmp
iret
adc
jle
xchg
test
fadd
movsl
ljmp
pushl
in
dec
test
xor
in
pop
dec
aam
push
or
lahf
imul
lods
leave
popa
mov
fiadds
sub
repz
cs
movsb
jmp
movb
ljmp
sbb
xor
dec
cmp
out
popa
lahf
dec
lcall
in
and
pushl
insl
out
rcll
cmpsl
outsl
lods
bound
push
lahf
pop
fistpl
movsl
loope
or
jmp
or
mov
jp
inc
xchg
das
pop
mov
inc
int3
mov
ffreep
insb
pop
in
movsb
fnstenv
push
push
jg
lea
rcrb
push
lcall
in
mov
dec
inc
and
inc
mov
push
shlb
loop
mov
push
sar
in
out
pop
push
orl
or
mov
pop
xchg
inc
rcrl
inc
or
xlat
dec
sub
push
and
popa
ret
popa
jno
sbb
mov
xchg
hlt
decl
cmp
mov
or
scas
inc
jl
mov
test
sbb
into
cmp
call
test
pop
fucomp
in
push
je
push
cli
popf
xchg
add
push
and
adc
in
fdivrs
icebp
nop
int3
test
dec
pop
or
mov
shrl
dec
or
popa
or
lret
iret
mov
push
push
incl
in
lcall
mov
fildl
push
and
sbb
aad
jp
sarb
in
mov
js
addr16
gs
aas
popa
add
dec
mov
jmp
jp
test
adc
xchg
dec
test
cmp
xchg
idivl
pop
add
cmp
call
lods
nop
cmc
sub
mov
clc
es
push
enter
stos
icebp
repnz
pushl
aas
xlat
js
test
scas
xchg
ds
into
mov
sti
mov
adcl
call
daa
cmp
push
mov
cmp
mov
push
or
gs
xor
dec
sbb
das
nop
rcrb
jbe
fsubrs
imull
in
xchg
das
and
outsl
push
mov
popf
push
jmp
fisubrl
lcall
xor
jp
xchg
push
push
fwait
jns
enter
hlt
stc
lcall
xlat
cs
rcrl
pusha
sub
add
sub
in
adc
pop
cltd
cmc
jle
decl
inc
dec
rclb
cmp
clc
repz
js
lods
je
adc
jns
xchg
popa
pop
push
ljmp
mov
aaa
lods
ds
sub
add
in
pop
xorl
ljmp
sub
leave
or
clc
mov
inc
push
mov
test
pop
adc
mov
jle
cmpsb
inc
sub
mov
xchg
jecxz
nop
or
pop
or
jo
ficoml
decl
cwtl
jge
bound
outsb
dec
in
push
das
sub
mov
mov
in
mov
sub
call
loope
add
mov
cmp
bound
jbe
mov
ljmp
push
sub
insb
inc
mov
xor
inc
lahf
and
pop
ds
stos
xchg
fs
dec
ret
fldt
inc
iret
icebp
loopne
xchg
sbb
push
jbe
mov
fildll
mov
fsts
arpl
call
daa
or
repnz
mov
lret
adc
repnz
dec
lock
pusha
mov
sarl
decl
in
mov
ja
int3
xchg
subb
dec
ja
jecxz
pop
call
out
and
nop
int3
cld
jp
push
inc
mov
lret
rorl
push
mov
xlat
gs
fsubrl
inc
icebp
sub
cs
mov
push
call
add
xchg
loope
sti
xlat
inc
xchg
int3
and
mov
jno
shrl
andb
lcall
push
das
lret
aam
stc
mov
loopne
shll
mov
out
mov
push
movsl
lods
aam
inc
das
cmc
push
pushf
jp
xor
xlat
test
push
or
test
popa
adc
fsqrt
outsb
decl
jno
in
xchg
cmpsb
cmp
push
repnz
fsubr
mov
mov
out
data16
lcall
mov
mov
inc
cmp
fwait
mov
nop
or
shll
or
divl
sub
adc
incl
lods
lods
lahf
mov
sbb
rorb
sub
cvtps2pd
mov
fcomps
mov
fnstenv
sbb
arpl
lahf
xchg
pop
ret
cmpsb
xor
cmpsl
mov
pop
jmp
pushf
mov
and
or
add
outsb
xchg
test
dec
incl
mov
rsqrtps
push
and
kmovw
arpl
lcall
sub
lods
arpl
sbb
pusha
mov
out
in
xchg
movsb
jge
test
incl
shll
sbb
add
sub
push
imul
jnp
in
popf
mov
or
dec
adc
mov
mov
leave
sub
fisubs
sub
sbb
pushl
sub
cmpsl
or
sub
xchg
dec
stos
inc
in
jl
add
push
int
mov
call
fidivrs
jo
je
fsubs
in
sbb
xor
or
xchg
sbb
push
clc
ret
xchg
sbb
pushf
and
outsb
and
daa
lea
sub
ljmp
ljmp
test
xchg
jo
int
jne
fsubr
add
je
sti
add
cmp
cmp
dec
incl
outsb
icebp
mov
dec
fstl
out
js
sahf
das
xor
or
or
or
dec
cltd
or
adc
rcrb
xchg
mov
push
mov
ljmp
es
mov
call
xor
fdivrs
jns
lds
mov
es
adc
mov
incl
stos
fmuls
ds
pop
jns
ds
outsl
pop
push
mov
sti
enter
jnp
es
push
mov
mov
pop
lock
ss
lods
push
popf
xchg
or
incl
mov
outsl
adc
push
add
je
aad
and
push
in
sahf
hlt
jle
push
jnp
decl
jbe
cmp
aad
into
mov
mov
sarb
fprem
mov
fs
push
adc
mov
or
insb
cltd
mov
push
sti
mov
sarl
ds
sar
fldenv
push
mov
insb
scas
call
mov
xor
dec
jecxz
fidivs
push
xor
decl
stos
push
cmpsb
pop
in
jbe
add
iret
cmp
dec
cli
dec
adc
jb
sbb
pop
lcall
cmc
orl
pop
pop
rcll
pop
nop
fstpl
dec
mov
testl
xor
push
ret
sub
out
or
add
or
shrl
test
cmp
test
lahf
cmpsl
cmp
jecxz
xchg
imulb
fimuls
pop
jmp
sbb
lea
pop
pop
adc
lcall
fmull
push
mov
dec
dec
mov
out
fcomps
mov
jne
incl
call
xchg
jno
in
dec
cmpsl
daa
pop
les
add
pop
aad
push
mov
push
in
push
jg
jg
scas
xor
adc
and
adc
jne
pushl
or
dec
pop
out
rcll
mov
add
xchg
xorb
jns
scas
mul
pop
push
mov
mov
mov
jnp
jb
subb
add
push
es
cmpl
pop
movsb
mov
decl
test
or
shll
call
inc
push
jbe
adc
cmp
insl
or
test
mov
les
sbb
adc
lahf
lahf
push
insl
cmp
push
or
ljmp
jae
cli
ret
and
push
addl
ds
std
jo
loopne
decl
mov
mov
sti
mov
cs
push
xchg
jmp
mov
adc
call
and
xchg
mov
add
xchg
mov
out
int
addr16
sbb
mov
push
or
lock
gs
cs
fistpl
daa
sbb
add
mov
jle
call
lods
jb
inc
mov
and
mov
cli
or
push
adc
or
adc
fcompl
int3
ret
xchg
fisubrs
pop
pushf
insl
in
fs
or
or
test
mov
cmc
decl
mov
mov
fwait
xchg
mov
test
in
inc
dec
add
mov
adc
cmp
mov
dec
jno
or
lock
pop
cmp
pop
inc
aam
jp
cltd
std
aaa
sbb
call
mov
sti
cmp
adc
ror
imul
pop
sub
fsubl
in
lcall
sbb
pop
popl
scas
mov
out
xor
mov
lods
decl
push
cld
jmp
std
in
pop
sub
and
js
xor
fs
pushl
pop
fsubrs
xchg
adc
cmp
mov
lock
mov
decl
inc
jmp
cmp
xor
js
gs
cmpsl
pop
pop
sbb
out
cmp
pop
int
xor
sahf
cmp
cmp
dec
mov
sbb
shlb
cmp
sub
call
xchg
push
das
clc
jne
sub
mov
mov
sbb
add
or
je
sub
repnz
call
pop
xor
cli
out
lcall
lods
sahf
je
leave
jecxz
divb
mov
push
adc
pushl
fbld
aas
ja
cli
data16
movb
inc
jne
mov
sarb
fiadds
dec
outsl
dec
push
add
inc
inc
imul
sub
mov
jge
daa
shll
cmp
popa
and
hlt
test
stos
fimull
sbb
and
fsubrs
cmp
push
mov
pop
hlt
shll
shll
sarl
pop
inc
js
test
repnz
inc
xchg
rorl
test
mov
call
popa
mov
jno
test
mov
cmp
mov
decl
sbb
cltd
add
xor
fidivl
jg
inc
ljmp
sbb
into
stc
mov
xlat
inc
push
jp
in
sub
outsl
mov
xor
movsb
xlat
in
icebp
fists
adc
sub
ljmp
sbb
scas
in
dec
push
xor
addl
daa
adc
or
imul
inc
call
pop
sahf
mov
outsb
mov
test
jle
sbb
cmp
xchg
call
lock
mov
cmpsb
ret
pop
hlt
mov
into
sub
repnz
fcmovnbe
lock
xlat
mov
call
sbb
inc
movsb
mov
add
ret
push
movsb
into
mov
int3
lods
jge
or
adc
popf
jmp
adc
fs
inc
sub
out
push
pop
fcompl
push
shll
push
das
jne
add
in
ljmp
fisubrs
or
lret
xchg
enter
out
enter
aas
js
ja
rcll
and
cmc
shr
sbb
lods
dec
dec
icebp
xchg
or
ljmp
jmp
es
leave
fidivrl
sarl
add
jecxz
push
cli
repz
inc
je
clc
mov
xchg
lock
lock
clc
xor
std
sbb
fsubl
jno
mov
jmp
mov
pop
stc
or
push
sahf
mov
pushl
xlat
and
repnz
sub
push
mov
sbb
sub
xchg
adc
lret
jmp
pop
cwtl
cmp
ss
shlb
pop
inc
cli
push
popf
mov
rcrl
mov
loope
imul
cmc
paddsb
out
pusha
fidivrs
sub
mov
stos
pusha
cmp
xor
incl
pop
pop
push
mov
clc
mov
jnp
scas
inc
arpl
inc
icebp
int3
mov
sar
decl
lds
xor
lods
mov
sbb
add
sahf
mov
pushl
fs
hlt
insb
daa
addr16
mov
dec
mov
pop
incb
jg
mov
dec
ret
test
pop
flds
sub
ja
ficoml
pop
push
out
xchg
and
inc
sub
fwait
add
and
lret
mov
push
roll
cmp
mov
incl
mov
mov
inc
out
ret
gs
lods
push
into
sub
dec
mov
in
cmp
rcr
and
mov
xor
jecxz
pusha
pusha
mov
mov
mov
pop
mov
jb
or
mov
xchg
sub
call
data16
sub
pop
outsl
call
outsb
fsubp
std
repz
nop
popa
pop
imul
fiaddl
mov
cmpsb
out
stos
mov
pop
orl
sbb
cmpsb
decl
lods
repz
aam
repnz
movsb
xchg
mov
ljmp
cmp
sub
mov
decl
sub
pop
or
sub
mov
add
stc
orb
and
cmp
call
aaa
add
inc
push
cmpsb
pop
outsb
stos
daa
cmpsl
das
mov
fwait
add
push
jecxz
pop
mov
sti
icebp
push
inc
add
cmpsb
mov
lock
pop
pop
lret
test
loop
mov
lcall
pop
xor
and
ficompl
pop
xchg
fldt
cmp
lea
sub
cmc
jge
add
jns
fwait
mov
jg
mov
or
sahf
clc
lret
jl
stos
cmpl
call
ljmp
add
cmc
dec
push
aad
cmp
popa
das
sarl
out
in
xchg
sub
rorb
stos
sbb
ljmp
xor
jecxz
pop
sub
sub
cltd
loop
inc
sub
push
mov
pushl
cli
mov
rcrb
stos
imul
mov
fiaddl
inc
mov
int3
into
adc
decl
out
loop
sbb
mov
gs
push
push
int3
divb
or
ljmp
mov
imul
push
or
scas
scas
xlat
xor
inc
and
xor
arpl
iret
orl
aaa
or
fstps
jnp
mov
xchg
fidivl
dec
cmp
pushl
or
data16
lcall
mov
or
hlt
es
loopne
cmp
cltd
jg
sub
inc
mov
cmp
into
into
push
sbb
cmp
sub
in
pop
in
rclb
push
sar
lcall
shrb
rcrl
icebp
lea
imul
cmpsl
push
test
stc
adc
jmp
stc
into
inc
xchg
push
out
inc
imul
inc
dec
push
sbb
sbb
negb
lods
mov
cmp
bnd
xor
scas
outsl
xor
pop
sub
inc
push
inc
cmp
call
nop
mov
out
jg
incb
es
sti
inc
les
dec
or
jns
ss
ljmp
inc
pushl
add
mov
push
aaa
add
repz
mov
mov
ljmp
xor
mov
scas
andb
push
pop
or
call
cli
inc
outsl
decl
es
popa
sub
cwtl
in
aad
xchg
xchg
das
push
mov
push
cmp
ljmp
in
dec
xlat
mov
xor
mov
mov
dec
add
imul
cmp
or
or
mov
clc
or
popa
sbb
fnsave
pushl
lds
in
dec
jb
cwtl
bound
and
xchg
pop
out
or
jb
cmp
cmp
jp
push
icebp
imul
and
mov
std
shl
xor
push
pushl
mov
dec
jecxz
sbb
xchg
das
add
jmp
xlat
mov
and
mov
call
ss
and
pop
mov
push
xchg
int
push
sbb
js
sarl
enter
jae
pushl
adc
cmp
or
sbb
push
insb
in
mov
jp
mov
pusha
cli
pop
cmp
jmp
into
cli
adc
pop
fidivl
incl
shlb
sub
add
ds
nop
lea
jns
mov
out
loop
lahf
push
jnp
lods
sub
mov
out
pop
mov
ficompl
ljmp
decl
test
push
dec
out
sub
xorb
xor
fldl
cmp
and
xor
ljmp
xor
adc
aaa
mov
jb
add
aam
jg
arpl
mov
jg
mov
push
in
ret
xchg
mov
mov
xchg
mov
enter
sub
cmp
dec
jae
test
dec
hlt
mov
aad
pop
cmp
adc
and
enter
incl
xor
lret
push
pop
mov
cmpsl
mov
data16
adc
sub
push
inc
pusha
add
stos
pop
pusha
and
mov
ret
test
lods
push
in
add
mov
bound
mov
push
lods
sub
fistpll
add
push
bound
mov
out
pop
cmp
lods
xchg
andl
shrl
jge
sbb
inc
pop
add
enter
scas
cltd
xchg
push
inc
dec
jo
jmp
out
sbb
xorb
push
mov
shl
mov
in
xchg
inc
mov
dec
leave
cmpsb
adc
je
es
hlt
inc
test
inc
dec
fldt
mov
iret
xor
jle
call
inc
popl
jp
push
gs
pop
push
pop
fldl
pop
shlb
addb
jp
es
push
shrb
lods
ljmp
and
xor
les
push
out
inc
ret
sbbb
nop
sub
cmp
inc
push
jmp
outsb
imulb
and
and
andb
pop
icebp
hlt
lea
dec
outsb
adc
jbe
xchg
decl
adc
inc
jno
fsts
ret
mov
lods
idivb
push
popl
push
repz
bound
call
orb
ret
cmpsl
leave
mov
mov
dec
iret
push
call
aad
mov
fwait
ljmp
lods
sub
jns
jle
lock
pop
dec
aaa
dec
xchg
incl
jmp
mov
test
int3
inc
pushf
push
and
loop
mov
call
sub
jns
jnp
bound
dec
dec
movsl
jmp
stos
xchg
add
cmp
into
push
lcall
hlt
cmpsl
ljmp
adc
jns
mov
xor
inc
jge
ja
idiv
call
addr16
jp
lds
clc
mov
hlt
pop
dec
xlat
mov
std
out
push
dec
jge
popf
in
repz
incl
or
xchg
inc
and
daa
cli
stos
pop
int3
dec
or
bound
jmp
xchg
mov
jge
dec
adc
mov
arpl
add
in
sub
cmp
pop
mov
sbb
pop
fsubr
lods
iret
rcrl
cmpsl
jecxz
scas
adc
jmp
das
addr16
mov
mov
sub
repnz
imul
ret
sahf
pop
inc
ss
and
pushl
pop
dec
scas
ss
je
addl
je
or
inc
ss
push
cmc
add
call
fs
or
pop
bound
jmp
lret
mov
notb
dec
enter
data16
stos
call
mov
push
sub
mov
iret
shrl
dec
mov
or
fwait
pop
int3
pop
ror
cmp
dec
xchg
sub
push
sub
int
enter
mov
push
jmp
pop
dec
push
fcos
pushl
dec
xchg
es
shlb
pop
xor
adc
adc
sbb
insb
sti
lahf
pushl
push
and
pop
icebp
int
ret
inc
xchg
cmp
jp
push
adc
sbb
adc
std
decl
pushl
int
mov
xor
and
mov
xchg
pop
add
out
stos
pop
adc
fisttpll
aam
ss
sub
rcrl
movsl
push
jnp
aaa
mov
mov
ljmp
das
fbstp
dec
jbe
or
xor
jg
pop
repz
push
cmpsl
scas
std
daa
jns
xor
dec
call
movsl
aas
mov
mov
int
shrb
mov
cmc
int3
xor
lcall
sub
scas
rorb
mov
or
pushf
addr16
in
pushf
jl
outsl
pop
in
incl
lods
mov
cmpsl
xor
sub
je
movsb
jns
adcb
out
outsb
movsl
in
lcall
xchg
testb
ret
jle
xchg
dec
xor
and
leave
dec
mov
xchg
imul
cld
out
or
add
inc
or
dec
je
xlat
ljmp
and
fidivs
lds
mov
push
fistps
fs
xchg
sub
cmp
mov
cmp
mov
sub
pushf
aas
divl
lcall
xchg
cmc
mov
fmull
add
lret
shrb
daa
outsl
incl
jb
pop
fsubrp
fs
daa
fsub
xor
inc
push
cmp
in
lods
or
loope
stc
std
adc
jmp
testb
pusha
add
popf
rolb
lods
add
hlt
push
mov
movsb
cld
daa
fldcw
xchg
decl
push
aaa
jnp
mov
stc
cmp
scas
sub
mov
lods
stos
xchg
ds
stc
mov
mov
push
scas
xor
jmp
js
push
daa
test
xor
sub
pushl
and
ljmp
std
add
push
orl
dec
add
call
out
out
mov
es
cli
sbb
shll
iret
mov
fwait
pop
and
aas
sub
cmp
cmp
test
icebp
pop
mov
and
incl
pop
in
inc
mov
outsl
push
loopne
adc
aad
xchg
stos
push
pop
xchg
sub
orb
pushl
popf
lcall
pop
sub
icebp
push
mov
mov
out
lods
fcos
lcall
shr
cmc
mov
into
test
xchg
xchg
aaa
shrb
lods
sbb
stos
pop
sahf
adc
pop
jl
push
loope
pop
pop
pop
and
cmp
cmpsl
mov
lret
fcomip
jns
int
data16
ret
jmp
sub
add
add
or
orl
jno
fwait
mov
ss
jns
decl
out
icebp
ja
das
or
xchg
mov
sbb
sub
adc
inc
add
pushl
push
push
mov
subl
mov
jb
in
loop
test
pop
movsb
int
jg
push
out
pop
mov
jns
add
ljmp
mov
sbb
pusha
iret
sbb
jle
mov
cmovae
cmp
pop
dec
or
pop
gs
cwtl
xchg
pop
mov
xchg
loopne
inc
stos
push
shrl
pushl
inc
mov
mov
jl
add
insl
aam
jmp
sar
sbb
repnz
mov
ljmp
jno
jge
ds
out
pusha
cmpsb
jbe,pt
incl
adc
outsb
test
cmc
jae
out
cmp
ffree
adc
add
out
in
test
jmp
dec
pop
ja
ret
inc
leave
cmp
pop
push
jecxz
or
sbb
cmp
push
jle
jge
hlt
es
push
lahf
pop
dec
popf
mov
js
insl
jle
test
sbbl
mov
add
add
jnp
scas
sti
popf
adc
arpl
adc
sub
xor
and
mov
mov
sbb
and
fidivs
decl
pop
pop
jns
adc
iret
inc
sbb
sbb
cmpb
jb
sub
mov
subb
mov
jecxz
out
xchg
mov
push
mov
decl
lcall
sub
outsb
cmp
pusha
rcl
mov
ljmp
push
jnp
cmp
aas
stc
push
pop
int
arpl
add
jecxz
arpl
int
roll
dec
jge
adc
mov
jmp
xor
dec
mov
mov
or
hlt
vpshufd
cmp
xor
sti
into
push
call
add
out
scas
sbb
movsl
gs
add
xchg
or
jmp
incl
inc
jae
push
fadd
adc
in
push
jbe
jp
sti
ja
jle
test
iret
fwait
in
iret
decl
and
inc
rorb
leave
lock
pop
inc
adc
mov
incl
stos
lahf
out
out
fistps
mov
test
cmpsl
mov
mov
xchg
adc
mov
and
mov
lcall
das
into
inc
loope
mov
cmp
testl
xchg
es
mov
stc
adc
lea
pop
imul
sahf
scas
jb
out
inc
pop
jb
adc
sbb
mov
hlt
xchg
inc
sub
sbb
cli
adc
clc
adc
stc
pushf
sub
adc
decl
adc
cmpsb
jp
pop
pop
inc
add
dec
movsb
push
mov
xchg
sahf
lods
mov
out
ret
ds
addr16
call
add
repz
pop
int
add
mov
test
push
and
cmp
callw
sub
ljmp
mov
xlat
shll
jno
cmp
mov
dec
pushl
orl
incl
dec
push
lods
xchg
dec
aad
inc
rep
mov
out
nop
or
inc
and
pop
js
pushl
cmpsl
xor
xor
enter
mov
aas
adc
outsb
jno
jp
and
decl
jg
lret
lcall
xchg
push
mov
das
loope
test
cwtl
adc
lcall
push
sbb
push
lods
jno
mov
mov
push
sub
lcall
dec
cmp
mov
je
add
sub
inc
repz
dec
sbb
dec
incl
cmp
dec
xchg
mov
adc
in
sbb
loop
imul
xor
push
jmp
addr16
fidivs
pop
out
and
insb
adc
jmp
cmpl
ljmp
insb
add
pop
jmp
mov
adc
cld
mov
pusha
jns
aas
sbb
mov
inc
xor
sub
pop
les
mov
repnz
call
push
pop
sbb
repz
mov
das
inc
lcall
bound
jecxz
pop
stos
mov
ljmp
push
jp
mov
iret
sbb
mov
inc
shlb
lcall
dec
cmp
aad
shlb
pop
mov
dec
ficoms
out
lock
push
mov
fs
sbb
push
jo
nop
dec
or
jp
xchg
iret
xchg
lret
jae
std
and
or
dec
aam
jl
aas
stos
and
push
lret
adc
into
sti
push
lahf
mov
shll
lret
lcall
int
stc
outsb
loope
insb
or
out
mov
aam
imul
ljmp
call
push
sub
movsl
das
jl
mulb
mov
sbb
cmpsb
ret
adc
dec
decl
adc
jno
add
xlat
cwtl
xchg
xor
add
add
lret
incl
adc
add
ret
inc
enter
and
test
push
pop
add
mov
push
call
jbe
lods
xchg
mov
or
arpl
insl
mov
pop
xor
ljmp
stos
mov
cmp
jg
xchg
pop
sbb
arpl
aas
gs
pop
or
call
inc
mov
in
pop
mov
xor
push
test
xchg
xchg
jle
cmpsb
xchg
pop
aaa
mov
incl
push
mov
sbb
dec
mov
in
repnz
das
and
and
incl
fwait
sbbb
xor
cltd
cmp
mov
inc
cld
mov
movsb
mov
call
add
pusha
mov
enter
mov
push
adc
bound
sbb
lcall
or
sbbb
mov
ds
xchg
and
lea
loop
pop
adcl
mov
iret
and
stos
inc
adc
faddp
lret
sbb
aaa
jno
pop
lcall
icebp
xor
pop
push
jle
push
loop
adc
fisttpll
or
mov
call
jge
add
mov
or
rorb
sbbb
sbb
cmp
mov
push
jle
and
push
je,pt
movsb
sub
dec
or
mov
mov
pushl
inc
mov
scas
enter
dec
icebp
ret
adc
mov
daa
ss
int
xchg
xor
mov
outsb
push
mov
das
push
dec
add
ljmp
call
movsb
lods
popl
mov
mov
aad
addr16
pushl
imul
push
push
xchg
shl
sbb
dec
mov
sbb
cli
test
inc
jnp
scas
sbb
ficoms
xor
add
add
scas
jb
xor
pushf
stc
fidivl
clc
mov
jno
repz
sbb
and
scas
aam
adc
mov
lcall
pop
imul
mov
mov
enter
fstpl
repnz
jmp
pop
inc
pop
fadd
and
mov
pop
and
push
sahf
stos
jmp
test
out
fnsave
test
stos
call
add
movsl
arpl
ja
mov
jne
mov
sbbb
adc
inc
pushf
out
mov
test
fwait
sbb
dec
iret
push
stos
inc
fsts
fcmovb
sar
incl
xchg
jecxz
push
repz
xor
jge
sub
xchg
mov
jae
jle
pop
fwait
loope
sub
lcall
jp
in
mov
shll
and
jns
out
jge
pop
or
add
push
jp
and
in
jnp
in
pop
sub
dec
in
loope
arpl
dec
and
and
incl
shlb
ret
dec
add
das
mov
dec
xchg
or
out
push
js
and
sub
push
ljmp
loope
xchg
popa
sbb
dec
fiadds
stos
pop
iret
ret
cmpsl
jge
xchg
sub
arpl
lcall
dec
sti
sbb
ss
ret
dec
ja
jmp
es
sbb
jmp
hlt
mov
ds
mov
cld
lods
mov
push
aad
jg
sbb
leave
inc
enter
mov
mov
scas
adc
stos
in
lret
lods
push
cltd
jp
mov
fcmovne
push
cmp
fldenv
or
call
or
loopne
pop
sub
mov
xchg
scas
and
sbb
jmp
mov
stos
cs
and
xchg
loope
jle
cmp
mov
pushl
dec
cmc
pop
xor
inc
xchg
lret
fimull
addr16
adc
out
xchg
idivb
stc
pop
pop
lcall
jb
imul
xchg
xor
cmc
fbld
inc
lret
je
mov
ss
add
dec
cmp
call
hlt
mov
sahf
mov
loopne
shll
push
popf
jecxz
in
jns
inc
in
fmull
cld
adc
mov
cmp
cmpsb
outsl
pop
add
cmc
xchg
mov
sbb
aad
lcall
cmp
jb
rcrl
dec
leave
mov
lods
pop
in
stos
nop
adc
push
pushl
test
inc
sbb
lret
ljmp
xchg
pop
pop
dec
lds
sub
and
jp
sbb
or
and
add
push
push
aam
leave
aam
xor
inc
mov
mov
das
jl
in
jmp
in
add
sbb
pop
adc
mov
sahf
push
mov
xor
pop
or
roll
iret
xor
lods
divl
cld
jge
cli
mov
movsl
imul
mov
int3
enter
cmpsl
shll
call
and
sub
sbb
les
mov
mov
cmc
cmp
and
stos
sub
into
push
mov
fs
decl
std
push
mov
aas
xor
pop
aam
add
xchg
push
cmp
inc
adcb
sahf
ljmp
jmp
rolb
mov
pop
dec
jo
popa
stos
inc
shrb
ds
arpl
cli
aaa
dec
mov
xchg
add
push
test
cmp
shlb
inc
pushl
jno
and
cmpl
pushf
adc
adc
mov
add
leave
fidivrs
jmp
std
rclb
call
loope
xchg
arpl
outsb
ja
inc
mov
mov
xchg
fwait
in
dec
das
mov
jmp
mov
push
mov
jmp
push
aaa
test
dec
dec
ret
dec
push
imul
cli
mov
popl
mov
scas
repnz
loope
cmp
popf
sub
out
pop
cs
ror
lcall
loop
sub
pop
clc
xor
rorb
pusha
mov
lret
or
jne
lods
lock
es
inc
subb
sub
sub
jb
mov
in
imul
mov
jmp
out
pop
inc
ds
stos
and
pop
cmp
or
bound
cwtl
push
ljmp
xorb
ret
push
das
mov
push
xchg
and
and
pusha
sub
stos
lret
lds
fildll
aas
lret
pop
mov
loop
jb
mov
sub
bound
pop
icebp
or
das
and
aaa
hlt
ljmp
mov
mov
or
rcrl
or
jmp
mov
adc
xchg
hlt
inc
jmp
jge
xchg
push
fwait
mov
jo
cmp
add
lcall
dec
mov
push
mov
jno
jae
or
jbe
subl
inc
iret
or
push
adc
aam
into
scas
mov
sub
jge
out
sub
stc
and
filds
mov
movsb
cwtl
mov
aas
into
push
in
jns
popa
sarb
jmp
dec
push
popa
divb
push
fdivrl
rcr
and
cmp
cmp
lcall
inc
int3
sbb
repz
jae
adc
sub
subb
or
cmc
jp
or
adc
lahf
sub
jae
fcoml
or
mov
data16
ds
pushl
call
imul
aaa
add
out
in
or
mov
pop
jb
dec
arpl
push
push
xchg
sub
out
imul
cmp
ret
pop
xchg
icebp
outsl
out
jne
sbb
mov
lcall
ds
aam
sbb
fsubr
das
fstl
test
dec
mov
int3
std
int3
and
in
int
fisubl
loopne
cmpsl
mov
stos
xor
lods
imul
xor
mov
fsubr
ljmp
mov
popa
sub
aaa
sub
scas
rorl
sbbl
dec
ja
xchg
loope
incl
mov
sbb
cltd
inc
setge
or
sub
dec
xchg
add
mov
mov
add
shl
movsb
or
adc
xor
fisubs
mov
call
daa
les
push
sub
dec
and
and
sub
std
and
testl
inc
xchg
incl
jbe
add
push
leave
sar
cmp
rolb
shll
repz
fimuls
jmp
sti
dec
inc
in
mov
pop
pop
push
std
iret
xchg
ss
ret
lcall
stos
out
jmp
jg
stos
std
or
outsb
jge
pop
sbb
lcall
push
aam
dec
mov
mov
ljmp
incb
sub
fcmovnbe
and
fstl
lea
sub
rorb
jecxz
incl
push
jne
push
mov
mov
hlt
mov
enter
adc
mov
movsb
decl
popf
jg
iret
push
nop
js
inc
add
inc
orl
push
push
mov
lcall
lahf
test
xlat
dec
or
lods
add
dec
scas
jmp
stc
pop
mov
jmp
lods
sbb
add
jle
mul
xor
inc
push
ret
mov
sbb
shl
incl
and
iret
inc
cmp
nop
in
add
pop
js
pop
mov
inc
out
mov
ljmp
sbb
cs
cs
mov
mov
adc
sbb
dec
test
je
pushl
repz
sbb
sbb
dec
dec
mov
imul
out
and
xchg
mov
aaa
jns
mov
push
jnp
mov
mov
xor
fs
cmp
incl
mov
lods
fsts
pop
mov
insb
imul
nop
shll
adc
ljmp
xchg
cmp
mov
lret
dec
lret
test
cs
incl
fdivs
test
sub
testl
push
mov
shrb
in
fstps
and
jp
dec
lds
repnz
int3
bndldx
and
ss
fldt
dec
add
insb
dec
push
stc
jecxz
insl
cli
add
daa
xlat
scas
push
sub
leave
pushl
fnstenv
std
cmp
jmp
push
xor
es
ret
inc
inc
jo
jle
jno
data16
je
call
add
fmuls
adc
lret
mov
fistpl
adc
loop
xchg
idiv
lcall
out
push
push
xchg
cltd
lods
pop
aaa
les
inc
dec
mov
icebp
out
rclb
leave
mov
ljmp
sub
jecxz
push
adc
xchg
int
or
push
xor
or
call
in
xchg
and
fnstsw
sahf
or
fnsave
test
or
inc
mov
aas
cs
lcall
dec
icebp
mov
fdivs
sbb
cmp
pusha
ds
sbb
jmp
mov
enter
mov
rcl
sbb
scas
cs
int
scas
cmp
xor
jmp
add
xchg
out
add
js
mov
dec
jnp
pop
rcrb
mov
sti
aad
lds
decl
leave
stos
or
pushf
lea
xchg
movb
add
jle
jl
out
shll
pushl
xor
sbb
xchg
cmc
sbb
ret
in
in
or
sub
lcall
jae
inc
cmp
pop
out
add
stc
out
mov
add
rclb
jmp
lcall
es
jb
adc
dec
es
nop
mov
mov
cmp
dec
lcall
sub
lods
lds
mov
mov
aaa
sarl
dec
mov
pushl
mov
pop
notl
push
adc
mov
mov
bound
popf
sbb
sbbb
pop
aaa
push
mov
in
mov
std
dec
jbe
addl
sti
or
fwait
push
and
repnz
mov
loope
mov
call
std
xchg
mov
adc
insl
dec
xor
mov
xchg
je
sbb
ret
fdivrp
call
popf
mov
mov
xor
aad
dec
popl
jmp
sub
incl
mov
xor
imulb
dec
into
xchg
jg
xor
xchg
jmp
movl
and
mov
ret
mov
or
lcall
call
shll
mov
cmp
jge
imul
inc
arpl
mov
fidivrl
and
mov
add
sub
push
or
and
or
xorb
adc
in
aam
inc
ljmpw
adc
push
push
popa
mov
jmp
pop
or
lock
mov
cld
push
jp
aam
jecxz
ljmp
aaa
pop
lods
dec
int
jmp
lcall
pushw
adc
mov
lret
mov
insl
mov
and
aas
push
pop
mov
daa
jge
lcall
fsubl
mov
fisubl
jno
sub
mov
ja
add
bound
out
inc
das
hlt
adc
xchg
mov
push
rorb
xor
fwait
iret
clc
ljmp
cmp
inc
jne
sub
fcomi
ja
shll
sub
std
jl
es
cs
insb
xor
lcall
hlt
fwait
fwait
mov
mov
xchg
xchg
je
or
xchg
aam
inc
in
pushf
outsb
pop
dec
or
inc
sbb
cmc
pop
sahf
cmp
in
mov
xor
in
mov
incl
lods
sbbb
adc
daa
ret
xor
lods
and
test
clc
mov
decl
pop
dec
cli
movsl
xor
xlat
xchg
adc
testb
ljmp
stc
test
les
shl
sbb
out
daa
shrb
inc
test
xor
movsl
mov
cli
in
sbb
push
cld
mov
mov
rcrl
lret
in
in
rcrb
mov
push
mov
incl
fs
aam
mov
insl
add
cmp
roll
or
lcall
xlat
test
inc
in
popa
test
mov
in
xchg
daa
hlt
xchg
jge
repz
imul
idivb
decl
or
aas
lea
inc
scas
enter
dec
mov
or
cmp
cmp
outsl
in
and
adc
adc
jmp
cmpsl
iret
pop
sub
mov
incl
xor
mov
mov
push
ret
push
xor
idivl
pop
fdivrp
push
dec
pop
add
xor
test
out
ficoml
dec
test
jo
jmp
mov
ljmp
pusha
rdmsr
stos
push
out
out
add
in
imul
xor
xchg
adc
fwait
pop
decl
sub
inc
push
inc
loopne
adc
nop
in
adc
mov
xor
lcall
call
fs
es
adc
push
push
mov
mov
adc
mov
jp
jnp
call
mov
enter
sbb
push
sbb
jmp
push
test
pop
shrl
lret
test
dec
lcall
jae
xchg
cmc
push
jl
inc
add
test
dec
je
pop
mov
jg
push
incb
decl
pop
xchg
movsb
sti
and
cmpsb
clc
loopne
add
out
sub
repz
repnz
incl
push
jnp
psraw
shrl
shlb
jbe
inc
or
popf
fsubrs
aas
cmp
into
inc
test
lcall
sbb
fists
es
lods
adc
jne
cmp
cld
outsb
cmp
mov
shlb
cmpsb
add
mov
push
into
ja
lock
jmp
stos
sbb
hlt
sub
lahf
fsubs
sar
push
lds
cmp
das
cltd
mov
inc
mov
clc
sahf
notl
sbbl
out
jge
aad
adc
xchg
test
insb
mov
pop
jp
out
out
addps
ja
test
in
or
adc
test
xchg
and
out
pop
dec
cli
clc
pop
hlt
cmp
cltd
scas
sub
mov
jmp
cmp
enter
inc
fistpl
dec
lahf
xor
inc
push
lcall
add
aas
pusha
add
mov
cmp
dec
adc
insl
aad
sti
sub
xor
lds
mov
imul
stc
mov
lret
mov
inc
xchg
lods
fsubrp
inc
sub
jmp
mov
dec
jmp
les
push
outsb
sub
sahf
adc
add
je
adc
push
jl
cmp
cmp
nop
insl
pop
imul
cmp
unpcklps
inc
lcall
aam
xchg
mov
rorl
mov
in
mov
dec
in
sti
pop
mov
mov
pushl
mov
jmp
bound
rcr
pop
cmpsb
sub
ljmp
jg
int
inc
daa
dec
mov
add
dec
push
insw
cmp
sbb
or
aas
data16
jmp
or
lock
jbe
das
movb
push
repz
addr16
incl
popa
addr16
mov
cmp
adc
mov
xchg
je
sbb
jnp
ljmp
loop
ljmp
adc
scas
push
inc
xchg
clc
mov
cld
mov
mov
dec
imul
lods
cmp
fstpt
inc
lock
int3
or
fstpl
mov
call
push
rcrl
lds
pop
mov
and
mov
test
mov
mov
mov
cmc
enter
pop
sub
incb
cmpsb
lret
xchg
push
dec
aam
xor
out
adc
ja
out
mov
cmp
xchg
pop
push
loopne
iret
aam
outsl
out
mov
insl
sub
mov
ljmp
jae
hlt
push
sub
adc
mov
call
out
cmc
jno
push
movsbl
push
frstor
fucomp
mov
jge
or
xchg
xchg
je
jbe
adc
xor
jl
cmp
lea
in
faddl
shlb
ret
nop
scas
in
scas
inc
pop
cmpb
hlt
and
dec
mov
cs
into
int3
outsl
pop
sbb
ficoms
sub
cli
mov
lahf
jmp
lods
popf
xchg
mov
data16
lods
andl
iret
adc
test
and
stc
ficompl
push
incl
sbb
iret
nop
stos
arpl
cwtl
xor
sub
sahf
pushl
addb
pusha
jecxz
xor
test
xor
cs
add
mull
mov
mov
decl
inc
pop
test
jmp
xchg
mov
out
repnz
mov
jg
mov
call
shlb
dec
movsb
in
inc
sub
add
jmp
or
in
inc
sbb
lcall
jmp
fldt
es
fwait
mov
add
sub
push
mov
inc
test
decl
xchg
loop
inc
in
fwait
push
pop
jge
ja
imul
pop
dec
std
lock
xor
pushl
stos
outsl
sub
sub
lret
in
js
punpcklbw
jge
repnz
sub
cwtl
dec
lods
ret
jns
or
mov
xor
or
mov
dec
cmp
lcall
cmp
repnz
aas
ss
cmp
inc
adc
mov
or
imul
std
mov
je
or
and
mov
sbb
sub
pop
fstpt
cmpsl
sbb
call
jl
testb
sub
add
jl
adc
nop
xor
lret
int3
mov
mov
push
xchg
mov
mov
push
cli
and
pop
or
push
fnstcw
fists
ficomps
sub
sbb
mov
jecxz
add
xor
mov
sub
cli
lcall
push
ret
mov
aad
sbb
add
pop
jne
orl
adc
sub
iret
pop
push
mov
xchg
jmp
and
add
fldcw
ljmp
and
cmp
add
int
xchg
icebp
pusha
adc
xlat
cltd
and
imul
repnz
push
push
fbld
inc
and
out
aas
mov
arpl
xchg
dec
cmp
mov
jno
es
lods
decl
arpl
adc
pop
dec
fwait
ss
fstpl
push
sub
fdivs
mov
decl
mov
dec
pop
mov
ja
daa
mov
pop
mov
movsb
or
leave
lea
jae
dec
lcall
rclb
mov
sbb
pop
fcompp
xor
aaa
fnstcw
shrb
pushl
insb
mov
xor
cmpsb
mov
inc
or
cmp
imul
call
sub
jp
push
scas
out
sar
mov
lret
mov
std
ljmp
or
mov
arpl
mov
jnp
in
pop
inc
cs
cwtl
insb
enter
fcomp
mov
decl
or
inc
mov
inc
das
push
pop
sbb
dec
pop
imul
inc
hlt
xchg
shlw
decl
sbb
push
xchg
mov
jo
or
sub
decb
or
xchg
inc
loop
mov
fcoms
cmpsl
push
push
mov
addr16
sub
jmp
adc
out
sub
mov
push
and
into
cld
sbb
xlat
or
sbb
mov
in
sbb
aam
cmc
loope
shll
jp
std
mov
xchg
cmpsb
adc
lcall
push
test
test
out
or
sbbl
loopne
xchg
imul
decl
inc
icebp
xor
sbb
mov
lcall
adc
push
test
pushl
or
test
ljmp
iret
mov
or
jg
xchg
mov
inc
mov
mov
mov
adc
addb
inc
adc
repz
outsb
rcll
push
sub
fdivrp
pushl
or
vfmaddsub132pd
push
jns
ret
js
fidivl
mov
push
mov
dec
dec
cmp
push
testl
cmp
push
lods
mov
ret
test
inc
out
mov
loope
xchg
fidivrl
adc
xchg
ss
es
cmc
les
xor
rcrl
jmp
inc
pop
or
movsl
mov
ljmp
mulb
stc
lods
inc
lcall
cmp
jmp
fsubrl
lds
lret
outsb
repz
popf
add
xor
js
sarb
stos
sahf
dec
orb
in
aam
lods
pop
sarb
ss
hlt
add
test
cmp
jns
jbe
dec
xor
jge
fld
inc
or
cli
mov
ljmp
xchg
jne
roll
mov
call
call
cmp
or
jne
sahf
sti
sbb
adc
lea
pop
mov
call
cwtl
les
jbe
pop
lds
push
mov
or
jl
inc
pop
push
and
call
lcall
xchg
scas
repz
xor
xchg
add
jl
lods
add
cmp
out
mov
jp
lock
lcall
subb
out
and
lret
jnp
push
mov
out
jne
orb
scas
subl
lcall
sbb
push
or
in
pop
mov
fstps
ljmp
xchg
mov
jmp
lret
imul
cmp
push
mov
inc
outsb
dec
mov
popf
adc
mov
cwtl
movsl
call
push
repz
pop
insl
jbe
add
stos
add
push
xor
sub
or
xor
lcall
incb
stos
fadd
arpl
dec
ficompl
push
adc
pop
lret
paddusw
mov
pop
adc
mov
cwtl
xor
xor
sbb
andl
lcall
push
adc
mov
mov
movsl
xchg
aad
test
in
mov
mov
ljmp
pop
es
push
into
sahf
clc
stos
dec
xchg
sub
jo
js
mov
push
cmp
ljmp
sbb
nop
jnp
addr16
nop
mov
or
jbe
stc
push
decl
in
push
mov
out
mov
pop
jae
es
in
fldenv
ljmp
fst
stc
sub
int
out
movlps
in
push
or
mov
incl
pop
push
movsl
call
mov
dec
pop
in
mov
mov
fldl
es
add
jmp
pop
mov
testb
sub
cltd
stos
outsl
and
lret
call
mov
incl
jb
adc
aad
cmp
or
mov
into
es
and
loop
shlb
lcall
in
xor
movsl
pop
inc
jns,pn
ljmp
sbb
push
pop
leave
mov
jle
decl
dec
cmc
repnz
mov
adc
ret
int
xchg
cmp
repnz
adc
fistl
cmp
mov
fdivl
mov
dec
movsb
pop
shll
arpl
out
dec
js
ljmp
movnti
ljmp
lock
mov
cld
jmp
dec
cmpsb
jns
jp
pop
mov
icebp
mov
jle
mov
mov
test
ret
xor
sahf
stos
push
xor
lods
cli
mov
jo
decl
push
add
sub
mov
or
jae
sbb
call
fdivs
js
negl
jbe
push
stos
int
ljmp
sbb
push
imul
in
mov
test
sub
std
test
xchg
lods
fmuls
into
fs
clc
jae
xchg
fldl
adc
scas
imul
iret
push
sub
jmp
jmp
clc
or
inc
dec
push
cld
sub
xor
daa
decl
test
fndisi(8087
cmp
inc
xchg
divl
aam
call
jg
push
out
xchg
incl
pop
jne
inc
pop
inc
xchg
and
inc
xor
sub
add
and
or
pop
int
sti
cmp
jmp
push
add
ret
cmc
rol
inc
sbb
cmp
jb
add
pop
ds
inc
cmp
jmp
sub
jmp
je
lds
pop
adc
testl
adc
out
shr
xchg
jmp
xor
leave
imul
daa
jl
outsb
bound
iret
jnp
or
popf
loopne
js
lret
shrb
fisubl
jno
and
cs
arpl
sarb
add
call
cmc
pop
rcll
movsl
das
lods
dec
int3
lods
or
xor
pop
vpunpcklqdq
out
decb
jmp
std
pushl
dec
aas
jnp
sahf
dec
pop
cmovp
xchg
inc
sbb
out
mov
push
dec
test
jg
ljmp
add
jg
sbb
mov
sbb
fldcw
invd
inc
ljmp
ljmp
or
jb
cmp
cmp
insb
adc
ljmp
test
std
int3
or
push
lods
in
xor
pcmpgtw
jmp
ja
insl
fwait
mov
lahf
into
sti
jns
add
mov
inc
xchg
xchg
pushl
jne
js
inc
out
test
repnz
mov
xchg
mov
xor
shr
lcall
sub
neg
mov
out
mov
repz
adcb
sbb
call
push
push
dec
into
or
aas
xorl
jae
inc
adc
cmp
clc
in
dec
xor
int3
lcall
testb
mov
xchg
jg
loop
cmp
and
push
ret
pop
push
and
adc
decl
dec
cli
push
cmp
mov
jmp
mov
sub
xchg
mov
jmp
jnp
into
push
adc
test
in
shrb
in
add
mov
sub
dec
jmp
std
push
sub
bound
sub
popf
enter
sbb
cwtl
cmpsl
sub
outsb
incl
or
xor
push
mov
stos
fcomps
fisttps
call
jl
cmp
push
sub
pop
insl
int3
gs
mov
out
adc
les
mov
xchg
inc
add
mov
addr16
leave
jo
jmp
ja
in
xor
jb
fcomp
cmp
js
bnd
cmp
or
aad
mov
or
andb
xchg
sbb
movl
pushl
adc
das
in
push
seta
imul
outsl
sub
shll
mov
lahf
andl
pop
mov
pop
adc
cltd
cmp
incl
adc
popa
jno
in
sub
test
pop
mov
test
in
jp
lret
call
andb
test
scas
in
xor
and
les
repz
fisubrl
mov
xchg
inc
mov
decl
mov
fimull
in
inc
inc
xchg
fiaddl
push
mov
test
int3
incl
pushf
rcll
push
push
mov
lea
icebp
lahf
mov
out
sub
dec
cmpl
pop
lcall
mov
xor
jmp
sub
push
adc
cmp
jmp
push
fnstenv
lahf
mov
pop
jl
outsb
ss
push
insb
aad
jge
ljmp
pop
xchg
in
cmp
sbb
loopne
sahf
xor
ds
loopne
pop
sahf
movsl
pop
push
js
incl
leave
dec
adc
ret
leave
repnz
fsubs
movsb
cli
pop
adc
adc
xor
test
out
dec
xor
insl
inc
fwait
ljmp
lret
es
jbe
mov
adc
or
jb
lcall
gs
xchg
xlat
xor
adc
xor
mov
lahf
sahf
andb
jmp
sub
sbb
mov
pop
hlt
inc
pushf
fs
xor
ljmp
xchg
cmp
incl
cmp
dec
lods
jo
pop
aad
push
jno
push
jbe
cmp
bound
or
pushl
lock
mov
ja
mov
lahf
jle
clc
add
movsb
sub
lcall
ds
inc
ret
push
xor
cmp
cld
dec
mov
jo
addl
sub
pushl
sbb
sub
mov
fisttpll
insb
shlb
ficomps
cmp
or
jo
adc
lret
sub
add
mov
mov
cmpl
call
hlt
jecxz
nop
xchg
mov
ret
gs
xchg
mov
sbb
repnz
inc
push
scas
inc
xor
incl
push
and
mov
add
xchg
cltd
jo
add
pop
xchg
ljmp
aam
and
or
les
rcrl
pushf
mov
outsb
clc
pop
dec
inc
aad
repz
orb
insb
ljmp
adc
pop
adc
popa
adc
leave
fcmovne
stos
gs
aaa
pop
fsubrs
dec
pop
js
mov
inc
inc
pop
mov
scas
xchg
push
out
pop
adcl
lcall
lcall
and
addl
movsb
add
add
subb
lahf
push
cmpb
add
out
pop
add
jl
xchg
xor
mov
pop
push
sub
les
or
jle
push
decl
xchg
jecxz
aas
push
mov
push
add
inc
mov
add
xor
les
pushl
cmc
popa
add
jl
pop
mov
cmp
inc
out
mov
add
push
sub
mov
pushf
xor
jp
mov
fsubs
fs
add
xchg
sbb
cs
jmp
decl
and
lea
and
mov
dec
std
outsl
shrl
in
test
call
cmp
sbb
sbb
fwait
cld
mov
cmp
mov
lock
mov
cmp
sbb
lahf
stos
add
adc
les
push
cli
pop
es
mov
and
mov
dec
mov
flds
stc
lods
lret
push
jecxz
hlt
mov
mov
insl
mov
add
es
ret
or
sub
movsl
ds
mov
insb
jg
cmp
fwait
mov
or
xor
sbb
cmp
jno
movl
cmp
sbb
push
xchg
das
mov
pop
add
dec
or
test
pop
movsb
jmp
push
inc
mov
lock
push
push
pushf
repz
aam
push
push
inc
in
mov
push
adc
call
sbb
js
pop
mov
mov
inc
jl
add
shll
inc
or
stos
or
pop
std
xlat
outsl
sub
loop
pop
mov
dec
add
xchg
out
nop
and
xchg
imull
add
push
or
mov
fidivrl
jmp
push
add
xor
call
test
fdivl
mov
jmp
std
cwtl
sbb
pop
sbb
push
sbb
incl
add
or
cmpsl
xchg
pop
push
mov
xchg
cltd
pop
mov
test
mov
jle
jmp
inc
mov
sbb
mov
push
cmpsl
insb
pop
mov
or
push
xchg
sar
inc
mov
test
shll
add
push
mov
cmc
xor
push
sahf
pushl
fbstp
imul
fsubs
or
pop
call
add
mov
movsl
pop
outsl
es
xchg
movsl
pop
rcrl
ss
outsb
jmp
rorb
mov
lret
jge
ljmp
int
sti
lods
test
pop
out
sub
stc
mov
xchg
mov
fdivl
aad
cli
cmpsl
lods
ficomps
cmp
decl
es
insb
sbb
jg
or
call
mov
js
aaa
xchg
jmp
in
popf
pop
dec
adc
repz
ffree
and
rolb
gs
call
dec
sahf
mov
call
xchg
pop
inc
or
mov
scas
out
push
rorl
jb
mov
add
and
mov
ljmp
sub
push
jecxz
jns
xor
js
adc
inc
addr16
adc
pop
inc
outsb
lods
aam
jmp
jmp
push
scas
cmp
pop
in
stos
iret
ds
and
xor
xlat
bswap
and
cmpsl
and
mov
cmp
add
iret
xor
aaa
mov
incl
outsl
xchg
cltd
push
jae
xor
xchg
ret
jle
cltd
cmp
lods
cmp
repz
jmp
addr16
incb
mov
lds
push
mov
pushl
pop
mov
lret
notl
mov
rorl
sub
pop
xor
orb
push
negb
enter
pop
add
add
test
jo
xchg
stos
stos
sbb
jmp
insl
add
lret
idivb
frstor
in
dec
xchg
cli
fmull
arpl
push
jge
pop
lods
mov
sub
jmp
push
daa
insb
popf
lahf
rcrl
jl
movsb
in
pop
xor
dec
push
out
adc
out
xor
dec
mov
cmp
mov
cmpsb
jmp
mov
stc
ds
xor
mov
mov
pop
cmp
ficomps
lcall
out
dec
shrb
lea
add
and
jle
add
mov
rorb
fsubrl
addl
daa
cwtl
cmp
or
sbb
add
decl
jne
push
leave
mov
lods
sbb
push
popa
dec
insb
and
mov
pmulhw
pushl
mov
mov
push
add
add
stos
lods
add
repz
xor
inc
incl
and
xchg
cmpsb
xchg
fists
shll
jo
lahf
andb
jbe
xchg
adc
jmp
xor
das
push
daa
ficoml
mov
pop
pop
mov
jp
or
mov
pop
in
pushl
lea
fs
rcll
leave
out
gs
js
inc
pop
jbe
mov
out
sbb
movsb
jecxz
jmp
adc
xchg
mov
lods
mov
push
mov
lahf
adc
sub
inc
dec
decl
cld
pop
dec
ss
mov
inc
inc
dec
hlt
and
negb
mov
dec
lods
negl
incl
dec
mov
stos
mov
pop
clc
add
fisttps
std
mov
push
jns
fmull
incl
ljmp
inc
pop
ljmp
adc
push
ret
incl
jmp
xchg
adc
mov
dec
mov
mov
aad
stos
adc
addr16
xchg
inc
ljmp
pushl
sub
pushf
lods
imul
rol
push
imul
adcl
in
sbb
inc
lock
jmp
dec
aam
push
cs
shlb
cmp
or
nop
incb
pop
cmp
sub
push
addb
pushf
adc
out
inc
lret
mov
sbb
cmp
sbb
lcall
cmp
lcall
sbb
push
or
and
imul
sbb
incl
stc
or
fcoms
sbb
and
scas
cld
sbb
jle
ss
mov
cmp
jl
pushl
push
neg
and
xchg
push
bnd
std
adc
ds
mov
in
ss
out
add
cmpsl
ja
mov
pushl
rcr
in
in
cmpsb
stc
fwait
push
fnstsw
pop
push
daa
jg
lock
loope
popa
adc
jmp
inc
xor
mov
xchg
call
negb
sub
or
test
movsb
lea
lcall
shlb
pop
push
pop
ja
test
loop
xchg
mov
insl
fisttpll
movsb
push
fldl
or
mov
xchg
outsl
or
dec
loope
sbb
jmp
cltd
cmp
mov
jmp
test
in
enter
jecxz
inc
neg
xlat
inc
popa
test
ret
icebp
negl
push
or
and
shll
lret
xlat
push
pushf
test
or
dec
fsub
or
pushl
jno
clc
jmp
cmp
push
dec
and
cmp
mov
push
xchg
ret
out
push
mov
adc
jbe
push
icebp
and
mov
inc
mov
jmp
add
push
iret
or
xchg
int
fstl
stos
clc
ffree
je
or
add
mov
pop
aas
mov
popf
mov
icebp
mov
fnstcw
fcomip
arpl
jmp
shll
mov
jmp
stos
sub
arpl
lds
add
dec
add
lock
mov
xor
incl
dec
shlb
inc
pop
add
cmp
in
popa
jno
mov
mov
xor
call
popa
or
xor
pop
adc
pop
or
aam
mov
movsb
push
sub
sbb
das
sub
inc
sub
loop
filds
dec
hlt
or
mov
gs
outsb
shl
or
cmpsl
pushl
xchg
out
pop
adc
stc
in
jg
bswap
inc
mov
xor
mov
out
pop
cmp
mov
decb
stc
in
cmp
push
xor
test
lret
fs
fmulp
std
stos
xor
daa
lods
push
arpl
lcall
jg
xchg
sub
sub
ret
push
inc
adc
cmc
sub
push
sbb
fcompl
incl
cmp
pop
pop
stos
loope
mov
jo
add
sbb
aam
dec
lds
fcos
jl
mov
xchg
mov
pop
test
cmpsb
les
mov
xchg
and
popf
pop
daa
adc
incl
mov
dec
lahf
out
xor
inc
sbb
or
mov
dec
dec
inc
inc
push
incl
jbe
les
inc
fdivrs
insl
in
jbe
aam
in
js
push
incl
sub
xorl
mov
inc
test
cmp
xor
lahf
pop
das
call
mov
inc
xor
lea
sti
jp
fidivrl
test
and
mov
or
inc
in
fnstcw
dec
cmp
les
inc
sbb
fldt
inc
nop
dec
movsl
repnz
and
cmp
std
push
loopne
inc
mov
dec
outsb
in
insb
nop
lret
test
cltd
sbb
rcrl
lret
jno
es
pop
add
cmp
ficoml
xlat
adc
inc
subl
out
nop
mov
insb
in
or
fistl
xlat
test
cmpsl
jmp
stc
sti
cmp
sbb
inc
ljmp
jne
ja
decb
fwait
sub
jnp
dec
mov
jecxz
mov
fdivrs
xor
sbbl
std
sub
or
leave
repnz
pop
push
mov
test
jmp
fadds
sub
dec
pop
mov
lock
inc
xchg
pusha
pop
aas
orl
ljmp
test
pushf
cmp
inc
pushl
push
add
adc
mov
and
adc
call
leave
mov
mov
aas
inc
std
adc
mov
cli
and
cltd
imulb
inc
mov
incl
cmpsl
into
mov
pop
shrl
lcall
iret
les
rorb
incl
bound
fists
mov
cmpsb
jns
out
jmp
pop
lahf
add
and
int
adc
lcall
je
cltd
inc
addr16
jbe
sub
je
stos
mull
xor
incb
decl
test
fwait
adcb
add
and
jp
popf
pop
mov
das
jmp
jmp
in
inc
jle
push
lods
ud2
inc
adc
lea
jno
insl
orb
filds
mov
xor
lcall
mulb
fidivl
popa
hlt
mov
sub
push
sub
movl
or
lret
jns
mov
lret
and
scas
jmp
push
loope
es
in
outsl
fildl
loope
xor
ret
or
fsubrl
pop
cmp
sub
and
mov
jo
pop
lea
or
mov
call
and
ds
sub
xchg
adc
mov
dec
movsl
scas
mov
incl
mov
fs
nop
dec
cltd
and
add
inc
sbb
adc
xchg
or
lcall
or
xor
inc
sub
cmpsb
test
sub
xchg
pop
dec
pusha
stos
xor
call
dec
pop
jae
call
jle
or
xor
xchg
mov
jmp
sub
cwtl
popf
mov
pushl
pop
lea
repnz
sti
push
dec
sub
test
ja
mov
ja
std
pop
xor
ljmp
imul
dec
das
adc
push
mov
lock
mov
outsb
xor
lds
cmpsb
pop
fsubs
pop
arpl
aad
mov
dec
stc
add
loope
lods
nop
xchg
ljmp
jmp
mov
fisttps
and
pop
mov
jg
jo
mov
sub
sbb
jmp
xchg
jnp
rcll
or
mov
ret
pop
adc
into
mov
incl
int3
fistpl
cli
in
mov
mov
addb
movsb
sbb
sti
loopne
inc
outsl
xor
rorb
lods
xchg
mov
jb
jecxz
push
xchg
in
movsb
xchg
mov
inc
decl
fstpl
clc
int
fbstp
fwait
xor
jl
hlt
cmc
xchg
add
xorb
jmp
pop
push
adc
dec
int
out
xchg
fs
into
and
jp
lods
pop
mov
pushl
inc
sbb
bound
decb
cmp
or
test
ljmp
in
les
leave
jnp
loope
or
adc
int3
in
xchg
inc
sub
pop
je
shr
lock
ret
lcall
imul
jne
xor
das
daa
xchg
aam
insl
mov
fwait
ss
je
fisttpll
repnz
and
cmp
pop
add
cwtl
aaa
in
cmp
add
push
out
push
cs
cs
pop
jge
mov
xorb
and
and
inc
adc
pushl
mov
mov
sub
dec
int
push
adc
mov
outsb
mov
cmc
xchg
jmp
dec
sbb
int3
pop
inc
aam
pop
ss
ss
add
and
icebp
push
popa
sub
decl
and
std
cmp
and
jno
popa
ret
pusha
push
rcr
inc
or
pop
lahf
orl
nop
nop
decl
into
and
out
adc
out
sub
push
jp
jle
inc
xor
pushf
mov
stc
xchg
ljmp
icebp
xchg
jp
jmp
jb
mov
clc
pop
and
dec
dec
pop
mov
loope
inc
stos
aad
adc
outsl
rcr
xchg
push
lret
mov
fwait
mov
pushl
xor
push
sbb
les
or
mov
or
jecxz
pop
mov
mov
test
push
add
mov
mov
mov
pop
xor
outsb
inc
sub
pushl
mov
xlat
shrb
loope
mov
cli
fwait
xchg
sti
xchg
aad
pop
fisubs
in
ds
cltd
out
cmpsb
xlat
sub
jmp
scas
loop
dec
lret
cmpsb
and
mov
out
int3
and
aas
in
rcrb
ljmp
cmpsb
insb
sub
or
into
scas
bound
in
bound
pop
in
pushf
call
incl
sub
pop
aaa
or
movsl
push
ret
aad
pushf
push
xchg
sub
loope
or
pop
decl
shlb
cmp
stos
sbb
xchg
mov
shlb
lock
cmpb
jle
mov
jg
call
sub
outsl
in
fbstp
fsubl
mov
pushl
sub
jbe
xor
jo
in
dec
into
orl
sar
rorb
or
push
cmpsb
jns
leave
repnz
lcall
jo
addl
jle
xchg
call
aad
jmp
cwtl
out
aam
jg
lcall
repz
bound
cmp
push
hlt
adc
push
dec
repnz
dec
nop
iret
inc
lock
mov
jmp
dec
xor
mov
jbe
lahf
lea
data16
push
xlat
sub
cld
fidivl
xor
or
mov
dec
xor
mov
mov
ljmp
xor
jmp
add
bound
inc
iret
jp
rcrb
cwtl
cmp
incl
inc
dec
dec
pushf
add
mov
sub
lret
xchg
sarl
pop
mov
and
ljmp
inc
xchg
mov
mov
jmp
scas
das
cld
push
shlb
je
icebp
dec
ljmp
aaa
test
add
jb
adc
ret
cwtl
sti
repnz
dec
jg
call
lods
imul
repnz
add
shrb
and
insl
loopne
insl
js
scas
cld
and
dec
in
out
vzeroupper
mov
sub
mov
data16
popf
pop
insl
gs
jnp
push
sub
ds
lcall
xor
rcl
pop
repnz
and
or
jmp
inc
movsl
call
dec
sub
movb
jge
push
sub
inc
mov
pop
cmp
pop
xchg
incl
fucomi
xchg
aad
xor
outsb
inc
pusha
ss
or
mov
push
lcall
jnp
sub
cmc
dec
in
mov
popa
pop
xchg
xchg
cs
jbe
sub
pop
int3
incl
adc
push
std
jge
mov
xchg
clc
mov
xchg
pop
into
idivb
sbb
mov
jns
cmp
ljmp
xor
pop
stos
lahf
jmp
push
mov
aam
and
sysret
es
mov
fnstenv
mov
pusha
repz
decl
cmc
pop
lds
pop
push
loop
popa
sbb
mov
mov
and
xchg
mov
mov
pushl
lret
sub
jp
test
sub
loopne
scas
out
fisubl
clc
push
dec
aam
jns
jmp
fwait
addr16
pop
scas
or
rcl
xchg
loop
sub
sbb
and
aaa
dec
cld
sub
pushl
je
pop
out
subb
clc
popf
std
hlt
dec
testl
loopne
out
mov
call
outsb
mov
dec
insb
or
adc
pushl
mov
gs
sub
inc
lret
cmp
jmp
and
xor
mov
adc
stos
xchg
aam
sbb
add
inc
inc
mov
lcall
repz
icebp
add
in
mov
push
push
cmp
fcomps
jmp
inc
xchg
push
arpl
aad
fidivrl
sub
sub
rolb
call
popf
js
in
xchg
out
xchg
jmp
push
dec
repnz
mov
xor
xchg
adc
clc
sbb
cmc
decl
sbb
mov
inc
fs
inc
sub
mov
incl
or
sti
push
mov
fnstcw
add
xlat
js
call
call
in
pop
outsb
pop
mov
mov
dec
adc
sahf
daa
cmc
mov
fcos
incl
xchg
fcmovne
mov
arpl
inc
mov
jmp
or
mov
inc
shr
dec
mov
movsb
bound
mov
and
sbb
es
fdivrp
jp
inc
fnsave
das
xchg
push
xor
std
fstpl
mov
sbb
iret
sub
mov
std
insl
dec
push
pusha
fucom
push
stc
ret
cld
jg
imul
sbb
clc
clc
aaa
icebp
into
cmp
fstpt
lcall
mov
mov
and
cmpsl
mov
sahf
xchg
adc
inc
xchg
sbb
mov
incl
jmp
imul
icebp
mov
inc
data16
and
imul
call
jo
and
or
pop
adc
cltd
sahf
out
cmp
xchg
mov
mov
sub
idivl
incl
popf
mov
cmpsb
xchg
shll
jo
mov
cmp
pop
inc
ret
fcomi
sar
movsl
in
fidivrl
popf
decb
mov
jg
jg
mov
sahf
cmp
lods
jl
sarl
lods
fidivrl
leave
sub
dec
jo
push
pop
inc
mov
push
inc
xchg
cmpsl
lcall
mov
xchg
ljmp
pop
xchg
push
jae
mov
xorb
aas
push
mov
mov
inc
inc
push
jle
enter
imul
cld
xchg
pushf
cltd
outsl
shll
pop
rorb
xor
addr16
mov
call
jge
jle
jp
lcall
mull
add
mov
xor
mov
loope
cmp
adc
popa
push
fnstsw
movsb
xorl
adc
imul
mov
xchg
call
fnstcw
cmp
ja
pusha
out
stos
cmp
popa
jg
add
sar
lcall
jbe
mov
mov
jecxz
add
sub
mov
sahf
les
call
xchg
daa
inc
negl
fimull
or
aas
mov
jns
ss
ja
sarl
jg
push
jmp
in
and
popf
into
lods
insb
pop
and
arpl
test
push
mov
mov
decl
and
mov
sub
push
fsub
clc
cmp
popa
in
aam
push
fsubs
jmp
xchg
cmp
addl
mov
add
js
stos
jno
lock
enter
jmp
xor
add
rcll
cli
lea
stos
push
sbb
faddl
pushl
adc
dec
push
xchg
and
pop
aam
movsb
or
popa
jae
bound
mov
dec
mov
mov
sub
out
call
xchg
xchg
dec
icebp
ficoml
inc
lret
fmull
ljmp
les
lahf
lcall
xor
sub
jmp
frstor
jae
xchg
push
pop
call
cmp
jnp
mov
mov
pop
push
jmp
jp
mov
cmc
jg
mov
fmuls
fildll
sti
popf
jmp
cld
adc
ror
cmp
mov
inc
cmp
xlat
inc
shrb
push
shl
add
sbb
call
ja
add
mov
pop
xorb
adc
movsl
loope
ljmp
sub
ljmp
out
cmp
in
mov
or
ficoml
sbb
pop
mov
aam
enter
sub
aas
out
add
mov
ss
mov
fcompl
and
xchg
jno
fldenv
aad
jl
mov
pop
jmp
cmp
sbbl
jmp
out
mov
mov
dec
js
mov
fdivl
lcall
loope
jp
cmp
std
xorb
out
jecxz
popl
xlat
es
rcll
decl
sahf
outsl
ja
mov
mov
test
loopne
repz
xorl
ja
into
add
jmp
mov
cmp
push
enter
imul
dec
loope
dec
decl
push
mov
mov
sbb
movsb
ja
add
fildll
stos
pop
int3
push
pop
sar
push
leave
xor
scas
add
inc
xor
jno
cmp
fdivrp
xlat
in
setb
fistps
sub
jo
mov
inc
sub
mov
mov
jg
cwtl
mov
decl
dec
xchg
jb
in
mov
lds
adc
outsl
ret
pusha
shll
push
mov
ljmp
xchg
je
out
sbb
pusha
roll
jle
out
add
incl
in
xchg
je
hlt
push
sar
clc
outsb
js
adc
into
pop
popf
xchg
xchg
pop
dec
ljmp
push
jl
sub
int
das
push
and
jnp
nop
inc
mov
push
repz
mov
mov
mov
incl
sbb
aam
push
ficoml
pop
scas
std
cmp
jle
imul
cmp
pushf
pop
sbb
xor
add
inc
flds
cmpsl
adc
shr
dec
push
add
pushl
jg
xor
das
movsl
les
pop
dec
bound
mov
loope
dec
loope
mov
xchg
ja
bound
mov
js
insb
mov
das
pushl
or
mov
cmp
or
ror
lret
lds
xor
pushl
in
in
rol
add
or
cld
cmp
xor
lret
sbbb
and
dec
jbe
lock
out
subl
cli
add
dec
fbstp
mov
xchg
in
pop
dec
dec
addb
ljmp
gs
fmuls
cmp
repnz
mov
call
jns
ja
dec
push
mov
push
aas
add
outsb
sbb
push
or
bound
push
add
js
push
push
xor
in
adc
les
lret
and
and
je
stc
shlb
lcall
add
out
loopne
jl
pushf
pop
or
popa
xchg
lds
xor
pop
and
jmp
popf
jle
dec
movsl
mov
mov
mov
lock
mov
pause
popa
xlat
jmp
mov
pop
mov
inc
cli
xchg
and
mov
rolb
xchg
incl
xchg
xchg
push
sahf
mov
scas
outsl
xor
push
loope
fimuls
push
popl
sar
jp
incl
int3
add
in
orl
push
lods
nop
lcall
dec
sbb
inc
popa
cmpsl
ds
call
adc
pop
nop
adc
lock
cmp
fnstcw
iret
in
ret
les
pushl
adc
lret
int3
or
inc
sbb
jl
das
sbb
stc
lret
xchg
xor
ljmp
rep
dec
clc
and
or
add
add
hlt
pop
push
aaa
mov
test
incl
aad
or
push
dec
mov
jae
iret
sti
loopne
bound
push
push
rorb
xor
enter
pushl
shlb
mov
iret
jae
pop
fadds
push
ljmpw
mov
outsb
mov
jmp
mov
sub
mov
mov
scas
nop
or
loope
iret
aam
xor
dec
ss
add
call
int
dec
mov
push
lcall
sub
loope
or
jle
pushl
out
ficomps
jne
into
cmc
shlw
pop
dec
daa
sub
aad
loopne
outsl
insl
call
mov
pop
and
out
push
or
push
jmp
loop
dec
ficoms
pushl
cmp
iret
in
shl
dec
mov
or
rorb
fimuls
xchg
push
clc
enter
lcall
lret
fsubs
cmp
outsl
jne
jae
push
subb
xchg
mov
and
std
jle
mov
stc
push
or
xor
jbe
arpl
das
cmc
lcall
pushl
ljmp
cs
dec
push
ds
mov
mov
mov
xor
incl
rclb
fs
sbb
out
adc
and
or
adc
loopne
repnz
pop
test
incl
xchg
push
outsb
sbb
andl
cli
outsl
fistpll
sub
aad
in
mov
inc
mov
lcall
mov
lds
enter
xor
xorb
jle
hlt
lret
mov
jmp
sbb
lret
push
std
repz
out
js
adc
les
lcall
call
add
fimuls
push
xor
add
jle
sbb
dec
aaa
add
push
mov
mov
or
repz
cwtl
stos
mov
mov
jg
and
shrl
rcll
lcall
push
cmp
jb
xor
pusha
sub
clc
pop
mov
outsb
testb
ja
leave
xor
pushl
test
loopne
sub
or
xor
cmpsb
idivb
mov
jb
sahf
aad
lods
mov
ljmp
add
or
pushf
sub
adc
xlat
mov
int
cmp
xor
jmp
imulb
cmp
in
out
fwait
arpl
mov
mov
cmp
fidivrs
push
cmpl
decl
push
bnd
fistpll
into
data16
aas
test
push
push
negb
jmp
pop
jecxz
sbb
jae
cli
movsb
push
es
pushf
pop
xor
addr16
add
iret
and
push
jae
jle
inc
nop
mov
sub
jp
dec
lret
cmp
movl
int3
adc
fmul
or
mov
cmpsl
push
lods
push
cwtl
mov
xchg
add
imul
movsb
mov
ljmp
sbb
push
cltd
push
outsl
fidivrl
mov
sub
mov
dec
mov
cmpb
outsl
adc
fistpl
shr
xchg
push
jbe
shll
xchg
xor
add
push
bt
sbb
cwtl
jne
call
push
jns
xchg
pop
hlt
rorl
out
test
lods
loop
jmp
inc
rorl
jmp
dec
xor
or
cmp
loop
inc
push
movsb
icebp
adc
or
pushl
pop
pop
imul
inc
or
adc
adc
hlt
xchg
sbb
outsb
or
cli
inc
inc
pmulhw
scas
mov
lret
out
mov
mov
push
jo
lods
jbe
rcrl
jl
adcl
sti
pusha
cmp
jb
mov
jmp
jo
into
cmpsl
jge
fnstenv
dec
cli
sub
ss
sub
cmp
lcall
pop
pop
push
ljmp
fstps
ljmp
jmp
jp
mov
in
push
fwait
add
lock
cmpsl
aad
fsubp
jg
adc
dec
fiaddl
mov
xor
mov
sub
lods
aaa
sub
xchg
gs
fdiv
enter
call
or
mov
inc
mov
mov
loopne
arpl
adc
pop
sub
fldl
xchg
pop
incl
sbb
dec
jl
loope
lret
xrelease
and
jp
add
ret
popl
push
lea
jbe
xor
xchg
ljmp
pop
loop
jecxz
add
adc
cmp
push
or
repnz
dec
cli
adc
orb
sbb
icebp
mov
mov
mov
call
ss
icebp
int
pop
cmp
rclb
pop
mov
sub
push
das
mov
jmp
and
mov
pop
mov
xor
or
xchg
stos
pop
xor
movsb
jmp
jnp
lret
sub
sbb
mov
and
mov
test
incl
mov
into
mov
movsb
repnz
pop
push
aad
xor
add
dec
fs
mov
std
xchg
push
or
cld
xor
push
push
xor
adc
aas
dec
in
mov
pop
dec
inc
or
fs
call
rolb
repz
sub
enter
mov
mov
fcomps
mov
movsl
out
ljmp
mov
fiadds
cmp
pop
or
pop
js
jg
jne
dec
cmp
jae
inc
mov
sbb
adc
sbb
mov
xchg
or
js
cs
mov
ljmp
xchg
mov
push
shrl
inc
mov
sub
mov
nop
fcoml
mov
inc
mov
decl
add
adc
hlt
jae
push
test
cmp
hlt
filds
sbb
xor
decl
mov
dec
mov
imul
in
sti
arpl
sub
push
cld
imul
fisubrs
call
aaa
movsl
rcrb
idivb
je
dec
scas
sub
jg
add
sub
xchg
in
incl
loopne
mov
fs
jp
xor
mov
adc
lods
addr16
gs
imul
jmp
and
jno
jg
push
cmpsl
xchg
int3
ljmp
xchg
pop
bound
xchg
add
adc
call
xchg
scas
fs
mov
push
sahf
fs
inc
xchg
ret
mov
push
daa
mov
jl
cmpsl
adc
push
pop
jmp
daa
cmpsb
call
in
jmp
push
mov
pop
inc
shlb
cmp
mov
out
mov
movsb
aad
ljmp
push
outsb
push
sub
je
cld
mov
sbb
mov
xor
push
call
incl
test
pop
cmpps
sbb
push
dec
sub
mov
push
cld
add
adc
call
mov
repz
icebp
mov
xchg
aas
ror
dec
test
sbb
dec
or
push
mov
mov
mov
insl
enter
bound
lods
addr16
sahf
adc
xchg
pop
testl
adc
pushl
inc
in
xchg
sub
pop
bound
and
sub
test
dec
ljmp
lcall
sbb
xchg
sub
mov
jg
test
rorb
mov
push
repz
ljmp
dec
pop
xchg
jge
add
idivl
or
jo
pop
sti
lret
insb
ud0
decl
lock
movsb
or
test
sarb
stos
or
orl
cmp
popa
jecxz
cmp
movsl
les
into
repnz
das
int
adc
sar
loop
pop
push
pop
test
decl
fwait
imul
rol
sbb
mov
mov
lret
data16
scas
or
lcall
push
shlb
jb
xchg
push
and
push
xchg
or
xchg
cmp
dec
nop
jae
vpshufhw
pop
in
pop
mov
addr16
fstpt
and
hlt
lods
xchg
dec
mov
mov
ret
jne
mov
lcall
jmp
inc
mov
fwait
push
push
cmpsl
aad
push
gs
filds
sub
lret
stos
pop
scas
add
pop
pop
decl
jmp
push
jg
adc
out
pop
pusha
mov
push
jge
enter
daa
or
stos
add
inc
jmp
fnstenv
pop
mov
jbe
pop
sbb
das
mov
pop
inc
pop
or
push
imul
inc
cmc
pop
stc
lahf
roll
xchg
mov
push
and
and
inc
bound
dec
sub
push
fisttpll
decl
inc
or
or
xlat
inc
xor
dec
jo
xchg
sahf
mov
xor
jmp
fcomps
and
cmpsl
sbb
pop
and
scas
sbb
cld
fldcw
cmc
push
ds
out
aad
xchg
mov
cmpsb
jecxz
loope
insl
int
sarb
fnstenv
out
mov
das
addl
jne
je
je
popf
shr
jae
sub
jne
decl
clc
faddl
out
mov
ljmp
roll
push
jmp
xchg
imul
sti
add
lret
fs
lock
mov
fdivrl
incl
xor
sub
mov
stos
push
or
aad
dec
popf
ret
jmp
mov
xchg
inc
add
mov
data16
pop
mov
mov
pushl
jle
pop
mov
or
adc
inc
xchg
lcall
cmp
jno
cs
decl
or
and
mov
push
loop
mov
mov
cmc
shll
cmpsb
lcall
add
adc
dec
je
sub
inc
xor
sub
mov
aam
xchg
jb
mov
sub
outsb
jo
lret
cmp
push
movd
int3
xor
mov
inc
and
push
sub
mov
sub
add
icebp
out
out
mov
jmp
fistpl
lods
pusha
sbb
ret
test
out
sti
adc
and
sbb
incl
inc
mov
push
cltd
lds
mov
mov
sub
pop
pop
faddp
lahf
pop
mov
call
mov
mov
cmc
add
sbb
repnz
inc
adc
mov
decl
jo
cltd
inc
stos
nop
movsl
test
and
cwtl
jecxz
mov
inc
lret
loop
xor
incl
jno
inc
inc
xchg
ds
lds
popf
gs
cmp
push
jbe
push
addb
scas
lahf
jl
std
les
jmp
test
mov
lcall
arpl
lods
inc
fcoml
out
mov
mov
lea
test
jmp
xchg
out
movl
lahf
push
fstl
sub
mov
pusha
ficompl
add
std
sub
push
jp
push
mov
mov
in
dec
rol
call
and
cmc
shl
cld
or
jg
es
cld
pop
and
ret
movb
daa
in
adc
and
jge
les
ljmp
out
pop
pop
fsubs
xchg
fcompl
in
lock
mov
stos
out
push
adc
pop
into
push
das
hlt
hlt
imul
cli
push
imul
add
in
cmp
push
int
xchg
and
fbstp
fildll
mov
dec
mov
cltd
push
inc
xchg
cmpsl
mov
fcompl
pushl
ja
xchg
and
mov
mov
and
test
jp
add
leave
or
ret
fisubrl
aam
or
call
jle
lea
sub
adc
add
mov
cmp
sbb
xchg
test
iret
dec
je
icebp
xchg
mov
cmp
in
inc
jno
adc
cld
in
sbb
mov
jmp
push
adc
cmpsb
in
pop
loop
adc
xor
out
notl
and
jecxz
cmp
js
xor
sahf
dec
jl
and
mov
jl
sub
jl
add
pop
push
popf
mov
lods
jge
mov
ljmp
js
andl
dec
pop
ret
adc
cltd
pop
pop
mov
mov
mov
fdivrl
xlat
jle
faddp
jno
fnstcw
mov
in
cmp
pop
dec
lea
and
lcall
outsb
dec
cmp
sahf
cli
js
mov
xor
les
mov
sbb
pushl
jmp
jns
fsubr
mov
jle
cmp
mov
loopne
sub
fs
cmp
cld
push
ss
pop
cld
roll
enter
into
dec
js
int3
mov
pop
mov
mov
mov
mov
movsb
add
xor
divl
call
bound
xor
pushl
add
xor
gs
pop
loope
mov
push
jne
jns
fdivl
ficoms
fmulp
lds
xchg
xchg
inc
dec
jne
enter
mov
xor
xchg
repz
incb
pop
cld
insl
inc
pushl
or
out
push
push
mov
popa
dec
xorl
ljmp
jmp
lea
out
cmp
pop
dec
in
push
push
pusha
ss
mov
decl
add
stos
hlt
je
xchg
pop
add
scas
add
jno
js
or
mov
pop
cltd
fmull
xor
movsl
inc
ret
aad
adc
fdivs
pop
rcpps
loop
sbb
loope
mov
in
cmp
clc
adc
fmuls
and
shrl
stos
inc
mov
in
adc
fs
movsl
rolb
js
jmp
xorb
cmp
dec
cwtl
jle
sub
or
es
sbb
jnp
jge
jns
sar
decl
mov
pop
mov
and
fdivrs
fbstp
sahf
dec
xor
mov
lods
decl
ja
push
adc
xchg
dec
ret
cmc
sub
stos
mov
jno
mov
and
ret
push
fdivrl
push
dec
and
xchg
leave
jp
push
push
clc
loop
or
or
icebp
lahf
push
fdivr
xor
pop
jmp
push
negb
pop
popa
lods
ret
pop
frstor
out
out
sbb
test
inc
jae
jmp
xchg
push
lods
add
aas
mov
mov
adc
inc
pop
out
push
push
jne
mov
jecxz
addr16
outsl
mov
push
test
jbe
pop
hlt
adc
jne
je
ret
cwtl
inc
pop
mov
decl
dec
xchg
sub
and
mov
repnz
adc
daa
jne
xchg
jae
movsl
mov
aas
xlat
in
inc
hlt
jmp
push
pop
test
pop
jge
push
clc
cmpb
out
xchg
outsl
fcos
decl
repz
int3
ja
mov
mov
jp
mov
cld
xlat
movsl
popf
jns
pop
addr16
movsl
ror
push
int
cmc
dec
push
rcrb
xchg
mov
test
cs
mov
jnp
dec
stos
pop
mov
dec
jbe
dec
fwait
lret
cltd
xchg
or
loope
add
cmp
incl
lods
fstpl
popa
xor
xchg
ror
test
cmp
cmc
push
out
xor
das
int
scas
out
sbb
ljmp
popf
mov
sarl
cwtl
jg
jne
push
cmp
adc
push
cmc
push
out
mov
ljmp
cltd
in
gs
jmp
sbb
xlat
mov
cmpsl
push
inc
mov
std
or
test
call
test
mov
call
dec
xchg
xchg
loop
or
mov
test
decl
adc
mov
stos
ret
in
imul
cld
insl
jne
jmp
test
mov
negb
test
movsb
xor
xchg
fwait
lahf
jmp
and
iret
mov
pushl
jb
dec
push
cmpsb
inc
mov
push
pop
push
ficomps
lods
pop
punpckhwd
subb
test
test
add
lods
xor
push
shrb
xchg
iret
pushl
add
popf
sub
aas
sub
std
mov
push
cmp
cli
test
mov
pop
adc
test
daa
decl
dec
pop
pop
pop
cmp
js
aaa
mov
incl
das
xchg
adc
enter
pop
and
rorl
aas
xchg
out
mov
dec
xor
sbb
je
pop
xchg
jecxz
mov
call
mov
frstor
into
xor
mov
addr16
scas
jmp
jne
mov
sub
xchg
lods
jp
push
xchg
adc
pop
repz
pop
fsubs
jmp
decl
sub
sub
mov
xchg
jl
push
sarl
pushf
and
jmp
hlt
int
jle
sub
push
in
mov
movsb
lahf
sbb
sbb
addr16
ror
and
pushl
add
mov
pop
push
ja
push
dec
nop
mov
mov
push
jge
scas
inc
push
pushf
sbb
call
in
jno
push
sbb
mov
lret
add
mov
decl
lahf
xor
cltd
pushw
jo
into
and
mov
or
pop
call
push
das
stos
cmc
out
popa
aas
xor
pop
lock
jp
shrl
mov
jae
ljmp
sub
push
jb
add
pop
jae
push
loope
sub
data16
push
loope
roll
addr16
pushl
out
xor
imul
fldl2e
sub
popf
cld
xlat
jne
std
or
mov
call
daa
xchg
lret
add
cld
shrl
test
dec
cwtl
ss
enter
jl
mov
mov
call
sbb
xor
in
jbe
rcr
lret
push
decl
ja
xchg
xchg
adc
lcall
cli
push
fs
xchg
cld
movb
call
stc
mov
mov
xchg
sahf
cmpsb
adc
push
jecxz
enter
xor
dec
dec
nop
pop
mov
and
cmpb
orl
aaa
adc
mov
call
mov
mov
mov
pop
xor
mov
and
lods
cltd
add
incl
xchg
aaa
cmp
add
outsb
sahf
out
pop
pop
rclb
int3
cmp
lcall
sbb
pop
mov
adc
lods
cmp
cmpsl
jl
dec
cwtl
mov
fcoms
movsb
out
mov
incl
push
cld
scas
cs
xor
out
dec
mov
js
cmc
mov
lcall
lea
sub
push
sbb
inc
sub
dec
xchg
repz
dec
addb
sbb
jl
in
arpl
xchg
inc
inc
ret
cmp
fcomps
es
hlt
add
adc
mov
xor
cmp
jp
inc
xor
aad
adc
scas
inc
sub
xor
bound
sub
call
pop
in
pop
xchg
mov
int3
pusha
repnz
dec
pushl
stos
mov
cmpsl
mov
lods
decl
outsb
andl
pop
lea
or
movsl
ret
ss
mov
popa
movsbl
cmp
fdivr
pop
imul
in
mov
dec
clc
sbb
lcall
inc
lret
fisubrl
mov
push
pop
add
xchg
addl
cli
popf
dec
push
sub
cmpl
mov
and
mov
xchg
popf
pop
insb
xchg
and
sbb
push
jl
mov
repz
pushl
inc
and
jge
clc
push
jbe
call
adc
fsts
mov
fucomi
sti
or
add
inc
add
iret
fdivrp
pushl
shll
pusha
mov
enter
sahf
popf
into
stos
cltd
add
lret
jmp
xchg
gs
inc
pop
fs
cmp
scas
divl
ljmp
clc
imul
in
test
or
call
xor
and
std
xor
mov
ljmp
cmc
adc
mov
stos
fwait
pop
sbb
repz
sti
jns
or
out
or
fidivrs
mov
cmp
aas
adc
lcall
rcll
sbb
jmp
mov
cmp
sub
jmp
mov
call
push
pop
shl
mov
ljmp
sub
or
xchg
and
outsl
or
dec
stos
mov
stos
add
cmp
adc
adc
xor
pop
cmp
orl
aad
xor
sbb
push
scas
adc
cmp
cmc
add
pop
nop
jmp
mov
cmp
iret
js
xchg
stc
fstps
jp
jae
clc
fnstcw
dec
push
sub
bound
in
vfnmaddps
lcall
cmpsl
and
wrmsr
inc
mov
pop
pop
pop
outsb
enter
ds
adc
incl
pop
sahf
fimull
shrl
dec
sti
mov
sbb
imul
inc
lret
incl
ret
fwait
inc
mov
adcl
xor
fistpl
inc
pop
pop
loopne
cs
insb
fcomip
lret
push
popa
ja
fmuls
out
daa
ja
mov
std
popl
pop
dec
fsubr
jg
mov
mov
outsl
aam
add
jns
aad
es
mov
mov
mov
test
push
pop
or
xchg
inc
cs
xor
fwait
sahf
fcom
cmp
iret
sub
adc
imul
call
repz
pop
cld
dec
sub
cmp
sbb
clc
jle
inc
idivb
ss
mov
inc
test
push
adc
push
dec
adc
sbb
adc
sbb
adc
ljmp
add
mov
fnstcw
mov
out
and
loop
and
push
movsl
jmp
loop
pop
std
in
xor
sub
adc
xlat
dec
sbb
shrl
clc
pop
shlb
fdivs
pusha
fisubrs
leave
mov
xor
out
cmp
or
mov
fdivrs
decl
sbb
out
negl
in
add
test
xor
lcall
mov
aam
lds
insl
adc
push
addr16
xor
shlb
pushl
adc
loopne
dec
cmp
jbe
popa
cli
in
test
push
mov
cmp
je
cmp
xchg
add
xor
mov
push
cwtl
cld
mov
lcall
sub
pop
and
std
mov
push
sti
je
sbb
daa
mov
sti
pop
jle
int3
push
pop
and
std
popf
inc
leave
fistps
xchg
mov
jne
jb
xchg
mov
mov
ss
lahf
mov
ja
in
pop
lods
mov
popa
stos
xor
inc
cmp
shll
xchg
imul
ljmp
hlt
push
rcrb
fwait
enter
insb
xor
lea
ljmp
fldcw
leave
dec
sbbb
pop
or
jg
lods
ds
mov
xchg
cli
and
add
nop
mov
shlb
xor
cs
ljmp
pop
fldenv
jae
or
testb
mov
dec
rcl
cld
call
cmp
mov
pop
cs
das
mov
xor
dec
mov
incl
pop
mov
mov
xchg
adc
add
hlt
dec
pop
jl
lcall
out
push
push
imul
sub
dec
xchg
addr16
data16
mov
jo
inc
addr16
call
xor
adc
out
fs
clc
xchg
cwtl
insb
and
out
les
xchg
stos
out
cmp
jmp
std
dec
cmpsl
mov
fldl
xor
pop
and
in
call
dec
xorb
incl
inc
push
and
cld
and
jno
jae
pop
add
xor
jmp
jo
ljmp
bound
icebp
aam
xchg
push
adc
subl
fdivl
shl
dec
inc
or
test
fwait
inc
das
ret
xchg
rolb
subb
pop
pop
rclb
mov
fisubrl
ret
repnz
cli
sub
ljmp
adc
inc
je
xlat
xor
incl
inc
adc
dec
and
lret
jae
xor
xor
aaa
dec
test
mov
popf
leave
cmp
incl
jb
xor
test
or
mov
les
ret
pop
and
push
xchg
pop
int
incl
jl
cs
repz
lcall
lods
xorl
cltd
pop
sbb
adc
inc
xor
pop
sar
lcall
dec
adc
mov
cmp
jmp
and
sarl
mov
call
dec
clc
fbld
int
xchg
addr16
fistpll
mov
cli
lds
adc
clc
push
xchg
stos
mov
and
or
or
pop
lret
mov
mov
lods
pushf
ret
adc
ljmp
mov
popf
sbb
mov
mov
push
bound
int
cmc
ret
adc
jmp
pop
push
or
subl
scas
fcmovb
jmp
jae
fs
call
push
punpcklbw
pop
orl
add
dec
clc
mov
and
call
push
cmp
int
sbb
cmp
or
fistpll
test
mov
js
lcall
xor
cwtl
cwtl
cltd
pop
inc
mov
push
ds
push
into
and
xor
pushf
pusha
cmp
inc
sub
jo
and
test
dec
jno
push
mov
or
sbb
push
mov
out
or
push
rclb
int
gs
je
pop
sti
mov
insl
gs
mov
dec
shl
mov
in
lcall
movsb
scas
mov
sarb
sbb
jmp
out
fwait
inc
inc
iret
sbb
ljmp
xchg
gs
push
enter
in
dec
into
pusha
and
ljmp
push
inc
cli
sbb
sub
pop
xchg
jge
repz
xor
push
and
scas
imul
push
jae
mov
mov
insl
cmpsl
ficoml
jae
push
pop
or
in
rcrb
cmc
cmp
aad
sbb
cmp
pop
pop
cmp
aam
fistpl
mov
lds
dec
mov
movsb
mov
lcall
push
lret
insb
lods
inc
dec
dec
adc
out
inc
push
push
les
fdivr
pop
pop
fidivs
mov
jmp
adc
aam
mov
sbb
stos
in
lods
lock
scas
mov
or
pushw
ud0
inc
in
cwtl
lods
adc
mov
fs
sub
inc
addl
mov
mov
push
push
sar
inc
es
decl
pop
outsb
loope
mov
imul
jnp
xchg
mov
jmp
rep
cmpsl
and
decl
inc
hlt
inc
into
push
gs
daa
inc
iret
fs
iret
out
scas
xor
adc
pop
arpl
call
push
leave
xchg
push
xchg
and
xchg
push
cs
call
lahf
popf
pop
pushl
cwtd
cmc
and
jae
xchg
mov
in
in
clc
lods
fwait
inc
inc
rcrb
dec
mov
push
stc
call
inc
shll
cmp
mov
arpl
mov
or
repz
stc
test
and
push
incl
push
xchg
push
idivb
xchg
fstpl
inc
xor
arpl
pushf
mov
shll
jne
call
repnz
add
dec
shlb
and
or
shlb
sub
pop
dec
aaa
pop
adc
pushl
test
and
sub
jnp
cltd
mov
push
ret
out
ret
push
xor
jmp
les
xor
mov
cmpsl
mov
imul
out
push
cmp
out
pop
lcall
lock
cmp
pop
addr16
rorl
rcrb
add
ljmp
pop
sahf
hlt
push
dec
nop
insl
jns
ss
daa
loope
andl
sub
jmp
test
pusha
not
add
pop
mov
xchg
int3
fcmovnu
imul
sub
inc
aaa
mov
jmp
cmpsb
and
adc
mov
xorl
cwtl
call
xor
pop
sub
hlt
or
ret
mov
ds
xor
sti
jno
adc
dec
sub
insb
jns
mov
xchg
jbe
scas
fmull
decl
data16
jae
and
fst
pushf
cmp
mov
fistps
stos
and
xlat
es
call
jns
das
xchg
fstpt
int
push
aas
ljmp
jno
aam
inc
jb
decl
popa
push
jp
mov
mov
shrb
ja
pop
cmp
push
mov
aaa
cmp
pushf
dec
test
mov
push
xchg
xchg
push
mov
sub
lods
jmp
fwait
mov
jmp
xor
dec
rclb
mov
sbb
test
add
mov
dec
out
jbe
incl
xor
lods
mov
and
sbb
aaa
pop
cmc
push
mov
push
mov
mov
ljmp
cmp
and
jge
or
sub
je
popl
stos
push
in
jmp
mov
rol
push
inc
aam
xchg
push
movl
push
fst
pop
in
fucomp
ljmp
dec
jg
xchg
ret
mov
push
xor
or
dec
add
into
scas
pushl
repz
pop
repz
std
andl
ret
loopne
adc
push
sbb
push
and
push
out
add
inc
clc
adc
inc
decl
fisttpll
lret
mov
dec
movsl
popa
and
xor
push
and
push
sub
lret
ljmp
fstpl
and
dec
int
in
adc
mov
add
fisubrs
cmp
bound
mov
cmpsb
push
sub
adc
add
pushf
mov
mov
xor
mov
lock
addr16
push
loop
clc
movsb
mov
pop
pop
aas
sbb
lcall
insl
add
cwtl
testb
mov
push
adc
repz
push
rclb
ljmp
jmp
inc
iret
lahf
shll
roll
mov
adc
insl
inc
xor
push
das
insb
push
add
mov
into
leave
dec
fs
and
cmp
and
es
adc
call
outsb
into
out
adc
pop
mov
test
pushf
mov
inc
mov
je
es
js
push
jmp
hlt
pop
pop
or
in
in
sahf
call
and
mov
fldl2t
stos
adc
lods
jmp
clc
inc
out
inc
mov
mov
cmc
nop
outsb
pop
data16
sbb
fbstp
in
in
sbb
mov
pop
imul
mov
mov
sbb
daa
dec
dec
sbb
pushl
cmp
cs
pop
push
sub
rcrb
push
cmpsl
cli
lret
or
inc
gs
in
sub
and
mov
or
loop
mov
inc
lret
cmp
das
push
imull
in
insl
les
pop
xchg
ds
pop
push
shl
add
mov
fcos
ljmp
pop
cli
mov
mov
mov
mov
aad
and
mov
orl
mov
jge
test
dec
outsb
pop
pop
xor
ljmp
sbb
nop
add
push
call
and
xchg
lea
fiaddl
and
mov
addr16
popa
cltd
andb
or
ljmp
int3
jo
pusha
fucomp
xor
jg
lods
xchg
and
xor
gs
bound
aas
cli
call
lock
dec
add
sub
and
xlat
fcmovnu
mov
sbb
ja
scas
inc
mov
pushl
jg
and
dec
xor
dec
jge
mov
xchg
jbe
xchg
mov
incl
inc
dec
lret
in
pop
fwait
aas
lret
cmp
lods
inc
cmc
pusha
es
hlt
cvtps2pd
stc
call
addr16
int3
fisttpl
dec
mov
ret
and
inc
std
call
jg
mov
pushl
cmp
adc
mov
cmp
jbe
mov
mov
fildll
mov
inc
push
sbb
cmp
push
or
adc
enter
pop
dec
sahf
out
mov
les
adcb
rorb
call
inc
lret
and
xchg
xchg
mov
data16
clc
cli
fwait
push
or
cmp
xchg
ljmp
lcall
fwait
lret
xabort
pop
sahf
out
adc
mov
pop
xchg
sbb
and
lcall
mov
adcl
xor
jnp
stc
dec
les
dec
lret
test
jb
cs
pushl
inc
lods
adc
xor
in
add
and
shll
fimull
subb
inc
arpl
cmpsl
jno
fcos
mov
xchg
sbb
jb
sti
in
test
pop
lahf
imul
std
fsub
aas
lcall
imul
out
mov
outsl
movsw
sub
add
into
jp
sub
nop
ljmp
dec
pop
add
xor
and
push
mov
adc
mov
and
inc
shlb
aas
xchg
push
and
in
jg
call
int
pop
movsl
mov
inc
aas
inc
sarl
out
add
push
loop
mov
fildll
adc
mov
movsb
call
into
aam
fstl
push
sar
jmp
jns
jo
mov
or
xor
adc
and
push
pop
mov
pushl
imul
add
xchg
jne
aaa
or
sub
add
adc
pop
sti
fsubs
mov
test
imul
in
mov
ljmp
clc
jg
fbld
ljmp
add
negl
and
cmovle
xchg
cmc
test
inc
sub
xchg
cld
decl
mov
lcall
sti
cltd
outsl
jmp
sub
orb
sbb
xlat
mov
or
adc
sub
jo
inc
add
lods
mov
push
pusha
jecxz
mov
hlt
push
dec
dec
and
xchg
shl
pushf
sbb
mov
ljmp
add
sbb
jg
xor
idiv
ljmp
fdivp
mov
sub
in
and
in
pop
mov
rcl
fildl
pushl
dec
inc
aad
jb
js
fmull
bound
fistps
dec
jecxz
or
jmp
jl
sbb
call
in
sbb
mov
xor
mov
idiv
idiv
and
mov
push
sti
and
inc
xchg
int3
call
mov
and
mov
gs
sbb
and
enter
jb
lods
mov
aas
test
push
xchg
cmp
and
mov
cmc
fisttps
push
xchg
js
pop
mov
flds
in
or
lods
pop
xchg
arpl
lcall
leave
pop
mov
mov
cmp
es
mov
sbbl
mov
pop
or
xor
call
mov
out
xor
js
mov
jmp
push
out
shl
out
jmp
lcall
fcos
data16
notb
int3
outsl
imul
data16
adc
gs
jmp
sti
mov
pop
push
clc
mov
push
add
aaa
pushl
stos
es
jge
xor
test
add
ret
pop
sub
mov
mov
icebp
ret
mov
js
in
xchg
add
in
jge
xor
xchg
test
jae
pop
jge
dec
cmp
pop
mov
fidivs
and
cmpsb
inc
xchg
add
js
fwait
jmp
jne
sub
push
in
mov
pop
push
jno
jmp
and
imul
xchg
gs
push
adc
aaa
lds
andl
pushl
pop
pop
inc
pop
dec
ss
xchg
das
mov
and
cmp
in
jg
call
inc
and
data16
aas
pop
pop
mov
jmp
inc
pop
nop
nop
fbstp
sub
pop
sub
aad
inc
fisttpl
pusha
push
aam
jns
les
in
mov
dec
mov
out
cmpsl
pop
lea
gs
pop
iret
outsl
loop
decl
repz
mov
popa
jl
into
adc
push
xchg
jp
addr16
sbb
sub
dec
data16
stos
notl
adc
dec
xor
cmp
push
aad
aam
outsl
arpl
addb
std
call
sti
cwtl
sbbl
sub
pop
scas
jns
pop
adc
mov
aam
call
pop
andb
jne
ret
cltd
loope
dec
xor
pushf
jb
pusha
aas
gs
jge
dec
loope
test
sbb
mov
daa
cwtl
fldt
incl
inc
jo
jge
pop
cmpsl
sbb
adc
fistl
std
mov
addr16
sti
pop
pop
pop
decl
pusha
loope
push
clc
cltd
mov
push
jl
mov
in
mov
das
pop
xchg
pop
cmpsb
mov
lcall
lcall
ds
push
push
popa
xchg
cmp
data16
adc
jmp
loope
movsb
into
pop
mov
dec
test
jl
mov
decl
adc
cmp
xlat
push
xchg
mov
test
xchg
add
jnp
add
jle
imul
or
cmpsl
pop
cli
scas
mov
ljmp
sub
pop
inc
aad
jmp
dec
pop
sub
shrl
dec
mov
push
lret
mov
sub
dec
jg
pushl
lahf
stos
xchg
insb
js
aas
aaa
fstp
dec
dec
hlt
mov
decl
or
leave
push
pop
xor
loopne
cwtl
js
cltd
pop
sbb
stc
je
jo
cli
xor
pop
jmp
out
sub
cmpsb
sub
mov
cld
pop
loope
or
daa
mov
lcall
popf
pop
xor
mov
loope
and
jb
sub
outsb
dec
fbld
cmc
aaa
jbe
arpl
mov
sub
loopne
ss
pop
and
dec
sti
inc
mov
test
loope
push
dec
mov
movsb
cmp
das
mov
pop
stos
sub
pop
or
daa
cmp
jmp
or
in
fsub
sub
popa
mov
sti
mov
pop
xor
sahf
lahf
lea
outsb
stos
int
pop
mov
jno
cmp
arpl
aad
sub
dec
push
mov
je
sub
dec
jnp
jno
push
sbb
ds
into
sti
mov
ja
pop
sub
and
incl
int
jae
imul
mov
dec
subl
inc
xor
imul
mov
in
dec
pushf
push
push
retw
lsl
dec
out
pop
and
mov
je
or
sbb
test
std
push
outsb
aas
mov
ljmp
scas
orl
add
orl
test
lret
nop
cmp
decl
orl
jp
syscall
push
jno
mov
mov
clc
cmp
jg
cld
push
stc
hlt
test
leave
iret
lcall
xchg
dec
pusha
call
ret
mov
cli
out
cmpsl
pop
out
popa
fadds
decl
xchg
ret
xchg
mov
jbe
xor
xchg
loope
lds
xchg
sub
bound
aas
mov
pop
ret
xchg
xor
mov
add
adc
incl
sbb
sub
fwait
daa
pop
xor
mov
adc
pop
into
dec
xchg
lods
jno
add
das
cmp
mov
mov
sub
ret
imulb
mov
jp
sbb
dec
mov
in
mov
bswap
pushl
dec
adc
xchg
xor
dec
adc
lods
adc
push
in
rorb
cmpsl
mov
dec
scas
jecxz
loopne
sub
int
cs
mov
dec
jg
lcall
inc
sbb
wrmsr
xchg
lods
inc
xchg
bound
scas
neg
roll
mov
fcmovu
jmp
sti
ljmp
pop
and
repz
cmpsb
xor
scas
sub
std
mov
adc
add
inc
lods
in
lret
xor
adcl
adc
out
movsb
sub
shrl
or
outsb
dec
stos
rcll
cmp
hlt
sbb
je
incl
dec
mov
dec
rorb
xchg
or
xchg
or
or
call
inc
mov
inc
sahf
cmp
mov
outsl
mul
jl
xchg
lahf
or
enter
lcall
movsb
int
pop
pop
xor
mov
loopne
call
sbb
aaa
jg
incl
aas
je
sub
iret
insl
jnp
ret
xchg
ja
lods
xchg
in
ljmp
inc
xor
or
loope
or
std
mov
ja
mov
das
decl
fsubrp
sbb
sub
sahf
inc
adc
inc
adcl
dec
arpl
xchg
mov
xor
std
gs
pop
outsl
xchg
xor
mov
call
sub
sub
mov
or
jmp
out
inc
or
sbb
or
pushl
fcoms
xor
add
xchg
addr16
pop
pop
lcall
pushf
out
push
cmp
popa
outsl
lahf
or
shl
fldenv
and
xor
ljmp
push
movsl
jb
dec
lret
in
loop
sarl
fnsave
inc
nop
movsb
and
fistps
call
fnsetpm(287
push
dec
jp
lahf
pop
popf
fiadds
jne
add
aas
mov
jp
cmp
imul
je
flds
mov
ljmp
pop
push
xchg
enter
rorb
sti
jae
pop
push
mov
call
outsl
mov
push
outsl
aad
mov
cmp
popf
jl
stos
idiv
call
int3
aam
lahf
or
movsb
sub
mov
fnstsw
incl
adc
inc
lret
mov
lahf
push
lahf
adc
lock
add
dec
xchg
mov
scas
push
jge
jne
push
xchg
sar
jmp
xchg
mov
cmp
xchg
insl
add
shl
call
pushl
sahf
push
add
adc
out
dec
dec
pop
push
and
pop
cld
sbb
leave
std
sub
pop
fcos
jmp
mov
or
add
adc
mov
sub
fisubrl
out
ret
jmp
sti
decl
add
xlat
cmpb
jp
movsb
fs
push
push
popf
dec
int3
sbb
pop
xchg
pop
add
cmpsb
adc
gs
stos
mov
jg
movsl
pop
rorb
sbb
loop
mov
mov
sub
in
incl
mov
push
inc
ror
adc
incl
inc
push
cld
ljmp
xchg
or
jg
inc
push
xchg
insl
mov
in
push
mov
mov
mov
inc
mov
inc
insl
mov
mov
nop
push
mov
outsl
hlt
mov
inc
xchg
mov
or
pushl
enter
mulb
sub
ds
inc
xor
cmp
dec
pushl
imul
data16
scas
xchg
stos
adc
xchg
inc
mov
xchg
cmc
mov
pop
xor
inc
and
sbb
in
shll
decl
les
add
mov
sbb
mov
loopne
fs
daa
and
ja
adc
test
call
mov
and
jmp
movsl
in
cmp
out
push
adc
xchg
jmp
insb
jge
call
lcall
jg
mul
push
adc
pop
fsubl
lock
jne
dec
inc
ret
jg
sbb
jo
ret
lcall
loopne
das
testb
mov
fistpl
push
bound
xchg
and
ffreep
pandn
incl
jo
fdiv
fmull
push
subb
inc
orb
pop
mov
or
fwait
push
into
pusha
addr16
jnp
mov
xchg
lcall
ftst
shrb
pushf
dec
jb
xor
mov
js
orb
dec
clc
in
loope
in
aas
fisubrs
call
mov
jl
dec
adc
incl
out
in
daa
popf
ja
jbe
lret
call
jb
and
cmpsb
push
jmp
divl
lods
cmp
insb
test
dec
mov
lods
repnz
leave
lea
adc
pop
fcos
int
leave
nop
mov
or
rep
pop
testl
push
call
inc
sub
push
mov
cs
sbb
cmp
addl
ljmp
shlb
cmc
popf
push
in
jge
into
test
testb
out
cwtl
add
xchg
incl
fiadds
or
cmp
sbb
or
xchg
insl
inc
imull
nop
pop
cmp
mov
lcall
mov
xor
fcomip
clc
pushf
imul
pusha
xorl
add
clc
dec
cs
jmp
pop
push
shll
hlt
cmp
mov
test
ljmp
insb
jo
enter
jbe
mov
add
aam
ret
pop
jg
cs
jl
rcr
daa
jmp
in
sub
pushl
xchg
push
push
orl
rcrb
xor
pop
push
fdivp
cs
call
cld
pushf
jae
arpl
frstor
mov
ffreep
cmpsl
xor
fs
mov
jmp
dec
enter
or
cmp
repnz
movsl
imul
jg
jmp
pusha
stc
xlat
mov
repz
fstl
sti
or
incl
scas
dec
mov
xrelease
push
cwtl
repz
iret
test
inc
mov
mov
decl
outsl
mov
test
stos
jns
and
add
fdivrs
cld
decl
fnstenv
xor
dec
std
add
jecxz
and
lock
stos
dec
dec
fidivrs
jne
scas
mov
mov
cmp
jecxz
rolb
lods
ljmp
jmp
pusha
push
dec
xor
jge
repz
dec
out
dec
andl
repnz
and
in
pushl
cltd
inc
frstor
push
jbe
dec
xchg
xlat
add
repz
pop
decl
in
pop
lret
cld
arpl
in
add
es
ss
jns
dec
dec
ja
loop
pop
aas
sub
mov
xor
fwait
mov
xchg
fmull
cld
dec
lods
cmp
dec
ljmp
out
bound
cmp
sbb
mov
faddp
cld
add
sub
jge
orb
mov
mov
outsb
incl
xchg
jmp
ja
mov
scas
bound
movsb
loopne
ret
adc
test
stc
or
cmpsl
cmpsb
mov
mov
loope
push
xchg
ret
add
pop
xchg
sbb
enter
jmp
popf
cmp
xor
adcl
stc
ret
pop
mov
lret
arpl
insb
add
fildl
and
sbb
inc
xchg
aam
sub
lahf
mov
imul
mov
pushf
sub
ret
pop
dec
xor
fcos
jg
cmp
adc
cmp
push
push
pop
xor
mov
pop
inc
ret
dec
inc
mov
cmp
cmp
push
push
mov
pop
test
decl
adcl
inc
mov
jae
out
or
mov
cmpsl
inc
sbb
mov
sti
testb
and
jmp
pushl
push
and
loope
aam
loopne
mov
jmp
ss
outsb
cmp
movsl
out
decl
fsub
jmp
lret
into
jns
fdiv
mov
mov
fsubrp
mov
mov
punpcklbw
incl
loope
mov
sbb
cmp
jnp
pop
sbb
addr16
imul
inc
or
js
es
lcall
jp
xor
leave
lret
inc
leave
test
cmc
out
add
inc
lcall
ljmp
cmp
xor
pop
aaa
shll
sti
js
jge
ljmp
sbb
pop
cwtl
push
pop
fdiv
fsubl
sbb
and
decl
movsb
cmp
test
lea
pop
sbb
push
sbb
out
outsl
insb
ret
call
stos
int3
pop
int
sub
clc
hlt
and
sti
rcrb
incl
sbb
fwait
sub
adc
pop
or
mov
inc
or
inc
fcmovnbe
sti
es
int
lods
and
adc
dec
dec
xchg
jg
incl
mov
add
push
add
sbb
jmp
xchg
dec
cmpsb
lret
enter
es
adc
pop
inc
ret
popa
in
jge
lods
sbb
adc
dec
daa
int
jno
jmp
mov
call
dec
push
fildll
roll
pop
cmp
jns
cld
xchg
in
leave
daa
pushf
or
mov
pop
fdivrp
dec
outsl
shlb
or
rorb
sahf
dec
cmp
jns
lcall
fcos
cmp
popa
cmp
sbb
pop
mov
out
shlb
lret
fbld
mov
xor
pop
pop
das
sti
push
dec
testl
ret
call
mov
enter
aam
xchg
jns
sbb
mov
sub
mov
xchg
dec
jg
dec
repnz
in
jg
aas
nop
cmp
outsl
aaa
push
xor
pmullw
in
xchg
decl
loopne
in
xorl
mov
adc
mov
incl
inc
mov
dec
fisttpl
mov
cwtl
lret
std
in
cltd
mov
push
call
lods
repnz
pop
sub
movsb
xchg
imul
inc
repnz
inc
stos
jns
call
mov
cmpsl
mov
lahf
ds
mov
in
rcrl
mov
stc
loop
in
adc
pop
jg
stc
test
inc
sahf
loop
repz
movsb
push
addr16
decl
mov
cmp
popf
push
cli
insb
stc
sbb
int3
dec
incl
sbb
mov
dec
movsb
push
add
repnz
clc
lcall
lods
push
mov
or
sti
pop
and
dec
add
push
repz
mov
scas
dec
jl
cmp
stos
jle
das
sub
fimull
push
inc
in
pop
jne
xchg
jnp
je
inc
adc
xchg
arpl
cs
loope
jno
mov
loope
call
or
sbb
mov
sub
xchg
cltd
push
loope
aaa
cmpsb
repnz
xchg
icebp
mov
sub
incl
cmp
sbb
es
mov
mov
fstps
jbe
jae,pt
jp
pop
xchg
outsl
mov
xchg
outsl
inc
popf
icebp
xchg
inc
and
mov
decl
int3
test
xchg
push
sub
mov
icebp
mov
cmpsl
mov
dec
or
test
fs
incl
dec
mov
cmpsb
jns
xor
mov
fsubs
inc
ljmp
push
add
or
ja
pop
sub
cmp
cltd
xchg
mov
pop
ss
cmp
dec
js
push
jne
pushf
mov
sbb
mov
inc
add
dec
xor
bound
add
out
hlt
inc
orl
inc
or
call
clc
mov
in
mul
mov
sbb
sti
sahf
std
aam
cmp
and
icebp
cmp
incl
scas
adc
ret
shll
loopne
xchg
test
mov
cld
lods
or
pop
shlb
dec
into
data16
lahf
add
or
shlb
jmp
sbb
popf
or
push
mov
ret
inc
or
pop
sbb
imull
shrb
fsts
cmp
jno
pushf
inc
cmc
clc
bound
and
xchg
ret
int
ljmp
add
frstor
pop
sub
fsts
lods
rclb
pop
push
inc
addb
cmpsb
das
xor
int
int
fnsave
call
jp
mov
mov
repz
sbb
cmpb
inc
xchg
sbb
jns
call
es
incl
iret
xchg
sub
xchg
mov
mov
test
mov
das
pop
mov
mov
in
jmp
jnp
nop
lret
je
xchg
cwtl
bound
es
xlat
orb
xchg
icebp
sti
pop
xchg
mov
cld
incl
adc
xchg
add
add
addb
fnstcw
mov
mov
jg
das
jge
push
inc
test
or
icebp
or
mov
decl
adc
mov
out
icebp
or
xor
inc
lret
dec
loop
gs
das
imul
mov
jbe
jbe
add
sbb
decl
movsl
into
or
addr16
in
cmp
xor
fs
lahf
stos
into
sti
movsb
data16
jmp
or
cmpsb
stc
cmpsl
fidivl
lods
add
mov
push
push
test
xchg
decl
or
xchg
add
inc
daa
sbb
jmp
ret
xchg
cld
call
insl
fdivrl
pop
mov
push
fwait
jbe
xor
lds
das
add
jge
addr16
jg
out
fs
es
inc
hlt
cli
mov
cmp
pop
lcall
dec
mov
inc
cmpsb
cld
add
lret
js
add
jmp
lret
in
jle
mov
scas
push
divl
sub
movsb
adcl
mov
dec
clc
jmp
jb
scas
mov
jmp
fwait
or
ds
test
or
ja
adc
decl
ret
push
inc
dec
popf
sbb
mov
cmp
test
cltd
stos
pop
std
aas
mov
ljmp
jmp
test
je
imul
loope
mov
mov
nop
js
fildll
xor
jbe
dec
and
sbb
cmp
or
and
sbb
decl
pop
scas
jns
imul
scas
pop
and
add
out
jmp
fldenv
jmp
jp
out
sbb
dec
mov
in
fistps
mov
jmp
add
dec
mov
sar
rep
int
push
mov
frstor
incl
insl
shrl
fidivrl
jge
cwtl
out
adc
mov
outsl
lcall
rorb
push
jge
leave
add
leave
cli
aaa
repnz
mov
sbb
mov
sti
incl
lds
jg
addr16
ja
and
test
out
jno
sbb
movsb
jo
and
push
call
icebp
test
sub
jmp
adc
add
push
add
add
repnz
mov
sub
into
int3
inc
add
test
jg
call
in
call
mov
jo
pop
cmpsl
test
call
outsb
dec
push
jl
mov
mov
xchg
imul
mov
and
iret
jg
lea
fdivl
push
mov
rolb
movsb
or
jb
mov
hlt
push
xlat
out
mov
test
xchg
or
sub
pop
inc
loop
dec
call
push
imul
push
mov
in
dec
mov
inc
and
lret
lods
mov
xor
in
hlt
mov
sub
flds
dec
int3
mov
jmp
lcall
into
es
sub
jle
enter
cmpsl
mov
daa
les
xchg
xchg
lock
decl
mov
outsl
bound
jg
or
or
or
jmp
mov
push
sbbl
sub
mov
lret
xchg
pushl
inc
arpl
in
cmp
sbb
xor
incl
push
std
ret
cmp
push
jae
pop
sbbl
dec
faddl
sbbl
xchg
hlt
jl
addr16
sbbb
jae
or
xchg
mov
cmp
aaa
adc
fwait
roll
out
xchg
sub
aas
mov
bound
pop
adcb
jp
dec
push
negl
adc
add
test
lock
call
aas
adc
int
imul
dec
ret
jbe
std
test
scas
aas
mov
clc
sbb
inc
addb
out
push
add
mov
pop
add
jl
jmp
mov
pushl
sub
and
ds
pop
xor
nop
sub
push
in
and
ljmp
sub
lds
es
in
xorl
fwait
loop
pop
jmp
mov
decl
and
mov
dec
and
xor
cmp
shl
and
lock
ljmp
das
fisttpl
ja
out
int
mov
int3
test
mov
call
lret
fimuls
flds
addr16
pop
lods
das
popa
add
inc
xor
mov
cmp
pop
jo
sub
push
nop
mov
sarb
aas
mov
out
dec
cmpsb
shlb
lret
jmp
and
test
ljmp
xor
xchg
xorb
jne
sbb
push
int3
fildl
mov
out
lea
adc
cmpsl
cmp
push
leave
push
mov
aas
mov
movsl
ljmp
loope
sub
pop
or
inc
les
ds
sbb
incl
es
xchg
pop
mov
adc
inc
incl
popl
lods
outsb
push
int
add
mov
and
aaa
call
loop
fcos
and
decl
dec
pop
js
in
iret
sti
push
mov
popa
mov
sbb
and
repnz
fnsave
and
and
into
ljmp
fs
cmpsb
cltd
arpl
mov
mov
or
xchg
call
leave
push
ret
in
push
sbb
mov
insl
stos
pusha
incb
and
sarb
mov
jmp
sti
cmpsl
out
lret
int
cli
rorl
psubw
push
xorb
call
ljmp
addb
xorb
lds
push
idivb
lea
mov
adc
sbb
mov
jg
mov
cmpsb
popa
xor
mov
mov
aas
enter
jmp
test
testb
aad
push
xchg
arpl
push
inc
orb
lret
mov
or
xor
jg
jg
mov
mov
jb
fisttps
jbe
incl
pushl
dec
les
sbb
mov
sarl
scas
shl
push
jnp
inc
repnz
lcall
xchg
lods
inc
scas
add
in
cmp
fs
jle
ret
cmc
xor
jmp
out
movb
push
xor
inc
aas
lea
fs
movsb
xor
ljmp
pop
cmp
cltd
fwait
inc
mov
bound
test
test
ja
add
lahf
jb
xor
jecxz
xchg
push
mov
nop
cmp
and
fstps
ja
xchg
inc
pusha
test
lahf
inc
idivl
cli
xchg
adc
shll
xor
dec
fcmovu
xor
mov
jmp
add
pop
mov
iret
cli
mov
std
push
or
out
or
adc
jmp
arpl
xchg
xor
int3
mov
sub
aas
insl
std
data16
push
hlt
test
stc
pop
mov
jecxz
and
jae
mov
xchg
lock
jae
movsl
iret
dec
mov
xchg
aam
jecxz
xor
incl
int3
push
dec
xchg
lahf
in
mov
sbb
pop
push
andl
pop
sbb
xor
xor
rolb
push
pushw
hlt
xor
cmp
xor
cs
rcrb
inc
idiv
stos
out
out
pop
testb
or
jbe
ss
in
lret
dec
decl
sahf
dec
aad
fisubrl
sahf
iret
inc
dec
fsts
insb
outsb
lods
ss
std
in
cmc
cmp
iret
shrl
jmp
into
popa
lds
mov
pop
leave
clc
sbbl
sbb
or
push
cmpsb
ja
lcall
sbb
out
sub
je
gs
push
add
fwait
jnp
incl
mov
and
adc
imul
inc
lods
dec
sarb
test
mov
and
decl
jno
and
outsl
dec
in
or
lcall
aas
icebp
adc
sbb
in
cmp
sbb
neg
cmp
add
out
sub
pushl
mov
imul
mov
mov
mov
jg
jmp
pop
mov
mov
fwait
xchg
pop
push
xchg
jg
mov
xor
mov
lods
cli
incl
or
xchg
adc
cmpb
push
inc
mov
jb
sbb
jmp
jmp
out
das
insb
fmull
mov
rcr
jbe
cmpsl
xor
mov
imul
dec
xor
cmp
lcall
addr16
out
sub
sub
ffree
fsubl
dec
sub
lea
call
sub
dec
fsubrs
repz
lea
pop
xchg
popf
sbb
mov
or
mov
lcall
sub
repz
les
outsb
das
xchg
xchg
jae
into
sub
pop
pop
icebp
call
or
sbb
pop
movsb
pop
sbb
repnz
es
pushl
ljmp
dec
imul
insl
adc
pop
add
push
ja
sahf
dec
lock
cmp
aad
test
or
cs
clc
dec
xor
mov
imul
test
dec
and
xchg
fs
xchg
push
or
cli
jl
lds
xchg
lcall
imul
jmp
inc
js
movsb
mov
mov
std
xchg
insb
mov
push
in
cmp
jbe
iret
sub
arpl
jp
icebp
ja
pop
aaa
imul
push
push
ds
lcall
rclb
ja
addr16
mov
inc
add
push
cmp
lock
mov
mov
repnz
sbb
push
in
push
cmp
lods
xor
in
adc
lcall
mov
lods
outsb
inc
xlat
sub
pop
lea
push
cmp
mov
stos
mov
jmp
movsb
mov
mov
adcb
aaa
add
imul
fisubl
fs
push
int
mov
adc
lahf
and
movsb
das
test
push
nop
fcos
icebp
adc
pop
xor
lea
test
or
push
mov
sub
jmp
jmp
jmp
or
mov
xchg
out
push
cmpsl
and
int3
inc
decl
pop
test
pop
dec
mov
ds
subb
inc
movsl
add
pop
sub
mov
jmp
cmp
lret
mov
add
cmpsl
lods
jne
xchg
pop
sbb
and
mov
push
lods
adc
xchg
pop
nop
mov
enter
xorb
popf
xchg
std
dec
push
cmc
xlat
icebp
push
cmp
pushl
sarb
stc
jbe
push
inc
xchg
cwtl
sub
dec
dec
popa
and
dec
das
jae
pop
dec
lock
mov
js
test
outsl
sub
pusha
mov
pop
dec
ss
xor
jg
cld
stc
and
cmp
aaa
pop
bound
or
push
adc
decl
pop
cld
jno
sbb
xor
bound
jg
mov
mov
jmp
loope
push
lds
ret
xlat
mov
dec
sbb
adc
dec
sbb
add
jne
mov
aad
xchg
or
pop
or
mov
pop
pop
in
les
ljmp
xorb
add
lahf
add
and
inc
pop
fdivr
popf
rorl
fdivrl
std
lcall
sti
xchg
jmp
mov
cmp
pop
das
mov
jmp
loope
mov
push
cmp
dec
int
pop
ret
push
scas
insl
fwait
out
mov
scas
sar
decl
sub
jnp
cmc
jae
icebp
popl
jecxz
fsts
push
mov
or
mov
sarl
into
in
rcrl
mov
add
lea
daa
nop
repz
loopne
lcall
imul
sbb
jne
icebp
dec
mov
cld
addb
add
pushl
fwait
mov
mov
xor
mov
subb
add
add
dec
aam
cltd
push
cs
jl
das
inc
bound
lret
lret
pop
cmp
es
repnz
decl
lahf
push
jmp
movsl
and
lds
ss
gs
cmp
movsl
or
decl
jb
xor
imul
outsb
movsl
les
mov
cltd
lret
lcall
js
pop
loope
test
xchg
xor
cmc
lea
push
push
cmp
movsl
sub
jmp
insl
or
test
mov
sarb
gs
in
ret
xchg
pop
cs
pushl
mov
setl
orb
jns
pushf
mov
call
shl
ja
stc
xor
jmp
les
pushf
mov
inc
sbb
mov
in
mov
xchg
jae
incl
and
mov
lds
out
mov
rorb
stos
pop
add
xchg
jecxz
dec
jmp
imul
addb
cmp
add
addr16
mov
outsl
mov
leave
push
add
pushl
popf
cmpsb
ret
xor
fsubl
roll
lea
stc
push
in
data16
jmp
mov
adc
sub
imul
inc
mov
dec
sbb
lret
or
and
mov
mov
adc
in
dec
sbb
incl
icebp
lock
mov
cli
notb
dec
ljmp
push
loopne
jo
sub
dec
ret
callw
dec
jge
push
es
lock
or
inc
mov
dec
cwtl
inc
pop
jl
fs
call
movb
sub
sbb
or
es
nop
inc
mov
addr16
shl
roll
test
decl
pop
mov
in
incl
imul
test
daa
jge
add
sub
ljmp
iret
pop
xor
aaa
das
xor
cwtl
filds
sub
dec
xchg
and
decl
push
test
lock
sub
xor
and
dec
pop
cmpsl
hlt
lret
push
das
mov
cli
dec
fstp
pushl
mov
ret
pop
or
cmpsb
xlat
aad
dec
insb
daa
daa
xlat
mov
cmp
push
push
sbb
movl
fcmovnb
mov
fmull
add
loopne
fwait
mov
jg
jecxz
outsb
movsl
inc
and
jb
dec
sub
gs
iret
sbb
out
inc
and
dec
mov
pushl
sbb
add
notl
dec
into
stos
daa
andl
lds
xor
xabort
incl
in
stos
add
cmp
je
lcall
in
insl
mov
and
ljmp
mov
loope
or
push
int
sbb
mov
and
gs
push
cmp
scas
mov
cmpsb
sub
or
lea
pop
das
sub
sbb
outsl
xor
decl
push
lret
mov
decl
stos
jno
insb
and
lahf
add
incl
int3
inc
sete
test
inc
mov
push
adc
pop
sub
jmp
rcll
loopne
aas
xor
sub
mov
lock
cmpl
call
mov
popf
cli
inc
adcb
movsl
fwait
cmp
aas
and
add
repnz
cld
ds
sub
jp
sub
data16
call
fsubrl
mov
fwait
sbb
cli
dec
fistpll
lods
inc
cld
daa
lods
pop
data16
lahf
cmpsl
push
loop
push
stos
push
aaa
dec
xchg
push
std
call
pop
lods
mov
mov
cmc
dec
push
add
sub
push
and
mov
call
lret
repnz
arpl
add
xor
enter
aas
and
dec
testl
mov
push
or
decl
imul
xchg
sub
add
or
and
fdivs
sub
adc
les
sti
scas
jmp
mov
repnz
mov
stos
dec
out
popa
in
sub
pop
sub
sahf
mov
sub
jg
mov
mov
xor
loope
je
decl
leave
xchg
jb,pt
mov
popa
mov
outsl
idiv
call
lods
sarl
push
or
movsl
loope
push
and
stos
aam
mov
lods
fs
mov
call
jecxz
xchg
hlt
dec
mov
iret
sahf
aaa
cmc
shl
sbb
mov
pop
xor
adc
hlt
incl
fidivs
popa
mov
and
nop
cmp
add
push
push
popa
mov
xchg
sub
lods
mov
cmp
inc
jbe
inc
loope
push
push
loop
icebp
jle
and
decl
mov
adc
mov
dec
xchg
les
xchg
sub
add
ljmp
cmp
aaa
shl
aas
mov
jno
cmpsb
filds
jnp
pop
sub
push
push
lcall
jbe
add
arpl
pop
in
js
js
ret
ljmp
adc
sti
inc
cmp
xchg
xor
das
call
xchg
hlt
movsl
mov
arpl
or
lods
mov
dec
sbb
pusha
pop
fcmovu
and
mov
call
popa
jge
movsl
push
loopne
adc
dec
or
jecxz
scas
outsb
fwait
dec
xchg
call
scas
xchg
inc
mov
fisubrs
add
mov
aad
add
cld
push
lds
fdivrs
push
dec
push
lret
pusha
adc
dec
add
andb
pop
inc
in
sbb
cmp
call
outsb
in
mov
ud1
rolb
dec
mov
js
sub
es
lds
test
stc
jl
xchg
push
push
and
aas
scas
dec
aam
cmp
adc
mov
fcoml
sbb
jge
orb
fldl
mov
push
lea
inc
or
in
jae
ret
and
pop
ret
pop
cld
add
cmpsb
lock
loopne
inc
mov
incl
xor
ja
xor
jne
pop
sarb
xor
mov
outsl
lcall
dec
mov
movsb
dec
mov
push
cld
lret
inc
dec
arpl
mov
or
popl
cmp
mov
add
mov
decl
pop
cld
push
dec
rol
mov
out
rcrb
fdivrl
or
pop
sar
inc
out
add
scas
jmp
sub
pop
popa
push
mov
jno
pop
push
mov
ljmp
xchg
clc
jne
lahf
out
ja
ljmp
push
inc
xor
push
dec
mov
inc
dec
fadd
xor
frstor
movsb
bound
mov
aam
call
or
adc
xor
sub
out
daa
jecxz
push
sbb
movsb
add
dec
cmp
rorb
clc
in
enter
in
aas
ljmp
fildl
xchg
dec
int3
mov
std
call
and
dec
imulb
xchg
enter
pushf
js
push
mov
xor
call
gs
jecxz
imul
pop
sub
lret
fisubrl
mov
inc
inc
mov
mov
pop
fiadds
hlt
fsubl
outsl
test
decl
cs
mov
adc
push
cmpsb
jno
dec
call
insb
test
std
pop
cli
testl
fcoml
hlt
jns
jns
shll
jmp
or
add
ret
sbb
pop
dec
subb
inc
stos
push
idiv
aas
negb
and
sub
jl
out
movb
shlb
into
gs
incl
cld
or
and
add
mov
add
decl
xor
js
leave
sbb
dec
mov
int3
daa
addr16
movl
ja
cmp
or
jmp
push
leave
pusha
sub
loop
and
jno
out
aas
mov
jmp
adc
cs
xchg
xchg
mov
lcall
sbb
mov
call
fiaddl
pop
shl
mov
lods
mov
adc
pop
pop
leave
jmp
add
adc
and
pop
inc
fwait
or
ljmp
or
in
mov
push
sbb
testl
and
into
cmpsl
mov
ljmp
dec
sbb
sub
jnp
sar
cmp
mov
push
dec
mov
sbb
cmpsb
jbe
daa
stc
fbld
icebp
pop
or
jmp
cli
cltd
hlt
and
into
lret
fistpl
and
jmp
out
push
cmp
mov
pop
inc
xchg
jb
in
jg
test
cmp
je
les
pop
in
into
gs
mov
xchg
cld
stc
movsb
adc
add
leave
or
push
pusha
out
lcall
aas
xchg
call
aas
inc
arpl
outsl
imul
subl
mov
pushl
mov
mov
outsl
xchg
sar
push
and
inc
rcll
fldl
ljmp
fsubrs
or
xchg
cmpsl
mov
ljmp
dec
cmp
incl
es
cmp
out
clc
mov
mov
inc
rol
push
push
lret
ret
pop
enter
mov
inc
mov
mov
cltd
jl
pop
ss
dec
mov
popa
leave
push
inc
jno
inc
cmc
bound
cmc
inc
add
stc
push
sub
loop
jecxz
pop
in
dec
and
ss
pop
sbb
jbe
push
lcall
idivl
jns
js
shl
jb
ret
add
sbb
pop
icebp
jmp
stc
mov
rcrb
xlat
jb
ficomps
mov
adc
pop
sbb
call
push
push
or
jge
pop
mov
xchg
das
in
cmp
and
decl
lcall
daa
pop
pop
xchg
rcr
enter
decl
xor
icebp
jno
sub
ss
xchg
mov
test
push
sub
mov
out
cld
incl
arpl
mov
xchg
inc
pop
stc
mov
aam
stos
sub
mov
sbb
sub
jb
decl
int3
cli
push
imul
lahf
sbb
das
aas
xchg
repz
nop
xor
sub
repz
sub
pop
rcll
dec
cli
jmp
repz
xchg
repnz
mov
add
sbb
xchg
lret
call
ljmp
sahf
addr16
gs
and
add
and
inc
ret
scas
pop
jnp
push
push
loop
je
add
popf
push
inc
sbbl
enter
and
jae
sbb
xchg
sbb
pop
or
cltd
mov
mov
dec
jl
pop
adcl
cmp
jb
mov
adc
push
dec
adc
bound
jmp
mov
xor
es
andl
adc
insb
add
in
mov
hlt
mov
mov
pushl
je
adc
repz
mov
mov
xchg
push
dec
cmp
dec
clc
lcall
aas
mov
add
fstp
andb
inc
cmc
lahf
pop
fcos
aas
pop
mov
popf
mov
push
cwtl
mov
pop
stos
and
decl
ljmp
cmp
push
insb
or
xchg
dec
mov
sbb
lcall
fcos
cltd
int
loopne
pop
cmpsl
std
lret
jmp
jp
sbb
and
mov
jmp
stc
inc
out
cmc
repz
fdiv
mov
in
xorb
or
or
jg
pop
mov
test
pop
sub
popf
sti
inc
jo
sub
decl
pop
mov
or
jae
sbb
or
aas
mov
lcall
add
cmp
popf
testl
cmp
loop
mov
call
jmp
jle
xchg
adc
inc
iret
add
and
fbld
fadds
in
insl
dec
enter
mov
popf
lahf
gs
hlt
sub
aas
mov
es
and
pop
dec
js
pop
sbb
outsl
or
and
mov
incl
out
mov
push
stos
ss
das
loopne
fwait
lods
xchg
and
cmp
decl
sbb
xlat
shrl
iret
mov
test
call
pop
xlat
cmp
cmpsb
cmp
xchg
sub
pop
decl
sbb
adc
jle,pn
fstp
push
out
jns
jp
es
mov
repz
je
les
add
stos
adc
stos
mov
sarb
subl
xchg
cmp
fists
add
jg
js
icebp
cmp
incl
xor
das
sbb
push
push
ja
sarb
pop
in
fs
aas
add
loop
incl
rorl
aaa
mov
pop
mov
xor
pop
fucom
test
jmp
jae
adc
jns
enter
das
aam
push
fdivr
incl
dec
jns
xchg
push
xchg
jmp
cli
in
xor
jg
pop
jl
enter
push
add
test
or
xrelease
pop
faddp
rcrb
mov
lahf
mov
inc
sbb
call
push
add
ljmp
in
dec
xor
stos
rcrl
pushf
pop
xor
mov
mov
jle
sbb
pushf
jmp
and
push
mov
nop
das
and
inc
inc
addr16
xor
inc
inc
lods
jge
sub
shll
call
mov
jg
inc
jo
push
test
je
lds
es
sub
jb
aad
rcll
fwait
pop
dec
loop
push
test
or
repnz
shll
lcall
fnstcw
addr16
fisubrl
pop
inc
loope
and
fdivr
push
fsub
jmp
sti
ljmp
pop
mov
dec
or
sbb
shl
call
cwtl
ljmp
lods
fcoms
lock
test
aaa
cmpsb
in
faddp
xchg
jg
int
or
add
out
add
cmp
cmp
fcmovu
test
lock
popf
in
incl
dec
pop
cmc
push
sti
addr16
cli
hlt
in
cmpsb
inc
aam
pop
mov
std
ljmp
fwait
pop
jle
sahf
movsl
and
and
mov
push
imul
js
sti
test
pop
dec
mov
outsl
fistps
sub
ret
cmc
repnz
lds
das
adcl
test
dec
int3
xor
jmp
mov
loop
lret
xchg
pop
dec
aam
mov
outsl
aas
xchg
cs
pmullw
cli
sbb
cs
out
int
cmp
test
sbbl
aas
xchg
loopne
sbb
cwtl
jg
enter
inc
int
aam
idiv
incl
xchg
dec
sbb
sarb
hlt
jmp
mov
xor
mov
pushl
ret
lret
repz
xor
cli
adc
lods
jne
mov
pop
push
sub
pushf
aas
and
jb
hlt
mov
loope
cmp
int3
mov
loope
cmp
lds
xor
jnp
dec
int3
push
stos
jmp
jmp
lret
stos
ja
shr
popf
rcl
mov
dec
out
dec
push
cmp
pop
fbstp
lock
sbb
iret
cmp
pushl
jmp
inc
mov
sub
push
pop
adc
hlt
pop
cmpsb
and
xchg
cmovb
dec
ds
lods
stos
sub
cwtl
outsl
xchg
mov
decl
inc
repz
push
xchg
mov
adc
jge
hlt
roll
call
sbb
inc
sub
or
xchg
jmp
xchg
adc
fs
les
test
mov
pop
pushl
mov
ljmp
mov
xorb
andl
into
and
test
cmp
sbb
decb
es
xchg
punpcklwd
push
mov
push
pop
dec
pop
lcall
jl
loop
clc
sarl
push
push
and
fwait
lods
xor
inc
or
ljmp
lea
fisubrs
jmp
out
push
cltd
ljmp
dec
in
xchg
mov
pop
xchg
jge
and
iret
sub
mov
fcos
lcall
inc
pause
xor
mov
mov
cmp
out
inc
pop
push
enter
xchg
aas
or
stc
add
orb
movsl
jae
into
jae
adc
lret
xor
add
xor
xlat
xor
push
stos
adc
int
pushf
or
shll
mov
dec
jg
dec
pop
fs
mov
pushl
cmp
cwtl
mov
push
fwait
pop
cmp
adc
inc
dec
mov
xorl
inc
add
jg
push
sbb
jmp
and
mov
adcb
ss
in
aaa
test
lcall
pmaddwd
mov
sub
hlt
addr16
inc
sbb
adc
subl
pop
aas
dec
push
pushf
loopne
outsb
add
push
test
je
sarl
dec
popa
jo
int
into
jmp
mov
xor
je
scas
jae
icebp
stos
dec
xor
into
in
orb
pop
mov
dec
sub
mov
mov
mov
push
inc
dec
ja
xchg
nop
ret
push
dec
clc
xor
stos
xor
in
inc
lcall
add
dec
jg
jbe,pn
jmp
mov
jg
loope
mov
push
sbb
jmp
das
xor
adc
das
fistpll
xchg
cmc
push
and
ljmp
push
mov
dec
add
adc
mov
push
push
and
pushf
out
add
and
push
mov
call
insb
and
sub
push
adc
xor
push
int3
xor
xchg
mov
or
popa
sbb
sbb
scas
hlt
outsb
mov
bound
out
push
jecxz
mov
xchg
xor
sbb
int3
scas
orl
shrl
jecxz
sub
sub
adc
aas
incl
lea
pop
mov
xor
call
pushl
repnz
or
fwait
jge
sub
cmp
jecxz
mov
out
jp
sbb
adc
mov
inc
jbe
sub
inc
or
movsb
pop
or
popf
into
sub
inc
xchg
out
pop
dec
fdiv
mov
insl
lea
cmp
bound
out
les
adc
cmp
call
or
in
jle
jg
xchg
cmpsb
sbb
lods
scas
mov
mov
lret
jb
sub
jmp
loope
push
rcrl
mov
cmp
mov
cmp
mov
leave
jbe
rcr
sarl
incl
int3
dec
adc
ds
jl
call
add
xor
test
fstpt
into
or
inc
cmp
adc
xrelease
out
push
test
pop
into
jne
out
push
pushl
sbb
adc
testl
decl
mov
je
gs
mov
ljmp
decl
je
bound
nop
fcmovnu
mov
out
adc
adc
test
loope,pn
ljmp
and
xor
add
push
xor
ds
jp
sub
std
or
test
mov
loop
negl
cmp
xchg
loop
cmp
push
xor
mov
mov
dec
pop
loope
push
call
imul
popa
sti
or
mov
xchg
cmpsb
shll
shrl
lock
incl
xchg
mov
jne
imul
int
push
stos
lods
frstor
xchg
in
cmp
xor
daa
incl
pushf
push
mov
popa
popa
add
out
inc
adc
push
es
lret
xlat
dec
orb
incl
push
aam
push
and
popa
and
add
or
push
in
xor
out
mov
pushl
push
scas
adc
xor
lahf
data16
and
ja
clc
or
incl
or
pop
fisubrs
pop
ret
lock
push
fistpl
cmp
iret
xchg
pop
bound
mov
test
xor
je
lea
popf
mov
cmpsl
xor
std
fidivrs
mov
sbb
orb
repnz
dec
add
dec
dec
pop
fcomip
das
xor
jmp
shll
nop
dec
and
loopne
pop
into
fstl
fwait
clc
xchg
or
adc
ljmp
int3
dec
lods
iret
inc
xchg
add
add
ret
lcall
insl
in
cmp
scas
xchg
lret
dec
shll
inc
mov
or
xorl
cmp
lods
adc
fisttpll
sub
mov
pop
jo
push
rolb
jecxz
loop
cmpsl
call
push
in
jo
jmp
mov
cmp
in
hlt
xor
mov
enter
sbb
cmpsb
cwtl
jne
adc
sbb
rcl
xor
inc
push
imull
decl
pop
cmp
sarb
dec
sub
mov
jno
cmp
sahf
incl
aas
dec
pop
pop
out
sbb
dec
push
mov
test
fmuls
test
lcall
mov
push
mov
out
sbb
lret
inc
fcompl
xchg
or
push
mov
push
out
call
cld
test
imul
xlat
es
ret
stos
dec
in
test
addr16
decl
inc
loop
pop
sub
ret
aam
or
imul
push
xorl
sub
mov
js
sub
pop
enter
cmpsb
mov
jecxz
cltd
add
bound
outsb
incl
push
mov
jo
adc
jg
xchg
leave
cmpsb
pushf
xchg
xchg
imul
ljmp
lds
jge
dec
roll
mov
mov
push
cmp
jmp
cmp
outsl
movsb
or
daa
nop
in
ljmp
push
or
shll
mov
imulb
pushl
lea
jecxz
and
test
les
movsl
jnp
push
push
out
add
push
lcall
and
in
push
sahf
jmp
xchg
xchg
ja
or
adc
adc
push
prefetchw
jmp
jae
sti
leave
popl
test
jb
dec
dec
int
cmpsb
xor
outsl
inc
add
adc
aad
dec
cmp
arpl
mov
out
jo
mov
stos
xchg
dec
out
lcall
jl
cmpsl
hlt
in
or
sbb
sbb
jp
jnp
dec
mov
outsl
jo
call
bound
mov
out
ret
push
add
adc
je
stc
adc
jmp
add
cltd
incl
lcall
sbb
lds
xchg
push
scas
out
sub
mov
fcos
decl
outsl
mov
mov
mov
ds
jno
push
stc
jmp
mov
sbb
repnz
pushl
ficomps
repnz
cmpsl
bound
adc
stc
arpl
or
dec
insl
stc
jmp
mov
cwtl
mov
jb
fcomi
iret
cmpsl
dec
push
xlat
xchg
insb
lds
pop
jno
add
dec
and
push
fstpl
xchg
dec
cmp
sub
in
rcr
gs
ret
ljmp
xor
scas
or
push
adc
jne
ljmp
sti
adc
ljmp
insb
mov
dec
ret
loopne
pusha
add
test
add
push
xor
incl
xchg
jns
sub
enter
adc
lds
or
mov
fistpll
ljmp
aas
inc
in
enter
mov
dec
xor
pop
mov
xchg
cmc
nop
out
sub
jmp
popl
cld
cmp
mov
sbb
cmc
pop
or
mov
in
inc
loop
dec
lock
decl
stos
xchg
push
stos
mov
fs
lea
popf
imul
jl
testb
aad
call
xor
les
xor
xor
mov
ret
jb
dec
imul
call
imul
mov
dec
mov
decb
push
fdivl
sbb
pop
aas
cmp
pop
dec
add
push
mov
cmp
pop
test
stos
sarb
and
or
in
cmpsl
adc
cli
push
xchg
pushf
pop
mov
ljmp
ss
jp
xchg
es
and
pushl
movsl
pop
cmpsb
jl
loop
sbb
jmp
pop
mov
stos
mov
std
pop
dec
adc
ret
pushl
mov
out
bound
pop
aad
repz
or
leave
out
shll
imul
jno
idivb
mov
or
jmp
mov
adc
lcall
sub
les
xor
fnstenv
jnp
add
fisubs
adc
lcall
xchg
xor
fcoml
and
scas
jb
adc
sarb
lcall
and
mov
test
jns
cmp
sub
push
jp
xchg
push
sar
pushl
pop
sub
mov
dec
dec
push
pop
jl
call
dec
imul
mov
decl
ljmp
cmp
decl
push
sbb
decl
pop
sbb
lds
rolb
adc
clts
jb
sbb
add
sbb
clc
mov
mov
xor
sbbb
and
loopne
inc
fsubl
sbb
ljmp
std
cmp
xchg
xor
push
add
fwait
inc
in
adc
popa
mov
sub
pop
decl
aas
orb
adc
les
repz
cmp
mov
mov
loopne
push
mov
dec
adc
out
jmp
lcall
das
je
adc
movsl
sbb
sub
pop
adc
cmp
xchg
es
sbb
mov
push
fdivrl
dec
push
call
lret
ja
or
pop
mov
jbe
fs
call
ss
call
repnz
cmp
movsl
clc
push
cmp
jl
fldenv
rcrb
call
and
mov
divl
fsubrs
mov
jb
shll
cmc
lods
mov
xor
call
fs
ficomps
in
xor
push
adc
add
dec
mov
loop
stos
xor
ljmp
addr16
sbb
adc
pmaxsw
lds
push
pop
jle
push
dec
loope
dec
jb
fwait
pop
aas
orl
int3
sub
sub
cli
lods
push
ljmp
decl
and
cwtl
push
push
sub
jmp
outsl
xor
adc
mov
add
cmpsb
std
rclb
jecxz
and
daa
jp
jmp
mov
mov
je
mov
xor
incl
scas
mov
fbstp
out
pop
mov
and
and
in
incl
test
data16
fs
jns
sbb
xor
mov
mov
int3
pop
sahf
mov
call
xchg
les
sub
push
mov
movsb
jae
loopne
imul
xlat
and
fmull
and
cmp
mov
inc
pop
inc
lods
dec
fsubrl
jecxz
xchg
dec
cmp
fdivs
pushl
adc
and
pop
pop
popf
cld
in
mov
fbstp
mov
out
and
fisttps
gs
pushl
push
add
daa
pop
ficoml
lock
gs
decl
es
jecxz
in
mov
sahf
std
mov
mov
mov
cmp
mov
dec
cmp
ljmp
gs
sbb
sti
aaa
adc
mov
dec
xor
inc
ss
pop
movsb
mov
test
lcall
push
cmp
daa
in
or
jne
out
testb
and
mov
mov
dec
je
das
sbb
ljmp
push
xor
inc
stos
add
lock
and
lods
stc
pop
decl
test
dec
jb
mov
test
adc
fistps
jno
popa
add
inc
sub
call
aam
aam
mov
shrl
insb
sub
mov
sar
fildll
icebp
iret
push
dec
call
clc
jecxz
adcb
push
dec
cmpb
mulb
cld
leave
jnp
ss
incl
jmp
xchg
int3
sub
call
sbb
push
inc
imul
adc
in
jg
arpl
loope
ret
loopne
sahf
mov
mov
int
xorl
loope
lea
or
pop
cmp
adc
and
mov
mov
xor
dec
sbb
jnp
add
inc
xchg
scas
xchg
dec
mov
and
je
enter
push
popa
xchg
and
inc
add
aad
out
sbb
out
mov
sub
cwtl
cmp
sbb
in
mov
push
icebp
clc
dec
jg
iret
popf
enter
mov
mov
testb
ljmp
pushl
push
push
sub
push
call
out
add
mov
out
jmp
fisubrl
loope
test
dec
and
jno
leave
xchg
pop
call
push
dec
in
subl
sub
call
bound
movl
pushl
pop
popa
xchg
outsl
out
js
fildll
adc
mov
xor
cmp
incl
aad
cld
xor
mov
test
and
xchg
fs
das
out
adc
pushl
test
dec
or
or
pop
dec
mov
mov
mov
notb
rcrb
mov
cmp
das
faddp
xlat
jne
ret
bnd
and
fucomi
imul
xchg
loopne
movzwl
cwtl
sub
ficoms
mov
or
jns
sahf
xorl
push
stc
mov
imul
outsb
sahf
sub
repz
pusha
lea
pop
xchg
ds
mov
inc
sarb
xor
and
pushl
out
je
and
adc
pushf
fstl
testb
jmp
inc
pop
cmpsl
add
lea
notb
loope
ss
or
mov
mov
xchg
in
lret
lcall
clc
jecxz
hlt
jecxz
mov
jmp
sbb
and
rolb
and
ficoml
loope
sub
push
cmpsl
movsb
cmp
loop
jno
rorl
iret
insl
int3
pop
inc
inc
ja
adc
xor
out
xchg
xchg
mov
cmpsl
adc
scas
das
dec
or
pushf
ljmp
fsin
inc
imul
sarb
push
rorl
adc
mov
jmp
not
push
or
inc
fwait
xor
adc
jns
out
adc
xchg
imul
rorb
decl
mov
xor
sbb
cmp
or
add
mov
test
lcall
in
dec
jmp
into
stc
dec
xor
mov
fs
lahf
aaa
leave
and
or
test
ljmp
push
mov
in
loope
pusha
sbb
jns
ret
popl
and
jo
loope
mov
lcall
xchg
cmpsb
mov
filds
xchg
gs
jecxz
push
jbe
cmp
ja
or
xchg
sub
pushl
mov
out
pop
push
adc
lea
sti
sub
push
stc
jg
cmp
je
mov
icebp
mov
sbb
jo
es
lret
inc
cmp
xchg
in
pushf
pushl
cld
call
out
data16
or
das
push
or
pop
sub
cmp
push
push
andl
movsl
jmp
adc
mov
jp
xchg
pop
ficoms
in
cmpsb
push
call
cli
popa
mov
not
nop
add
fmulp
test
xor
pop
cmp
lretw
ret
incl
xlat
mov
mov
jo
mov
pop
pusha
and
sub
lods
jb
pushl
jg
push
cmpsl
shll
fidivs
ds
cltd
push
mov
jmp
ss
aaa
add
or
ljmp
xor
aaa
sbbb
pushl
jae
adc
and
inc
cs
les
mov
jmp
sbb
call
jo
xor
cmpsb
mov
jns
enter
mov
mov
sbbl
cmp
mov
cld
mov
sub
outsb
xor
inc
ljmp
or
pop
mov
xchg
fsts
mov
lods
mov
popa
pop
in
test
insl
push
fnstcw
pushl
xchg
arpl
call
cmc
lahf
mov
adc
shlb
push
das
sbb
jmp
int3
test
das
or
adcb
mov
addr16
jge
cli
inc
sbb
pushl
out
dec
lret
or
dec
movsb
repnz
scas
cmp
js
cmp
and
xor
pop
aaa
add
push
push
adc
or
sub
sbbb
jns
outsb
jae
in
push
push
xor
inc
mov
and
mov
jmp
cmp
movsb
adc
sbb
dec
jae
jb
sahf
jae
inc
repnz
mov
push
inc
xchg
sub
popa
je
jle
nop
sub
xorl
cmpsl
inc
loope
sbb
jmp
cli
inc
out
push
add
fistpll
test
test
and
xchg
mov
cli
out
xchg
xor
call
dec
rorl
pop
xor
leave
stos
cmc
jb
call
mov
iret
add
dec
stc
test
push
std
lret
cld
mov
cmp
out
push
mov
mov
daa
int3
or
andl
aam
pusha
inc
js
sahf
pop
aas
cmpb
ja
push
mov
mov
decl
inc
lock
inc
mov
sti
cmp
mov
or
xlat
jmp
mov
incl
pop
cltd
and
sub
sbb
xchg
insl
push
pusha
and
cltd
repz
enter
adc
mov
test
and
dec
fildl
and
daa
pop
aam
jge
dec
sbb
outsl
fistpll
mov
pop
lods
fildl
lcall
pushl
imul
sarl
out
mov
pop
scas
pop
push
jp
dec
or
lcall
loope
pop
inc
cmpsl
xchg
sbb
loop
dec
rolb
insb
mull
dec
push
lcall
sbb
mov
pusha
fnstenv
sahf
mulb
mov
ret
xchg
jnp
ljmp
or
fbstp
fwait
adc
push
pop
pop
xchg
mov
sbb
or
pushl
mov
inc
outsb
mov
fidivrs
pop
push
mov
jecxz
movsb
sbb
adc
push
sbb
pop
mov
adc
das
mov
xor
dec
dec
push
test
pop
push
ret
pop
dec
xchg
jae
mov
or
aad
int
xchg
inc
and
bound
add
dec
int
pop
pop
fcmovnbe
inc
xor
subl
dec
pop
push
jp
add
repz
decl
cld
ljmp
fidivrl
lret
inc
push
loope
sbb
fildll
sbb
add
mov
subb
add
add
rcrb
andnps
ja
pushf
sub
sbb
sbb
xor
scas
decl
fwait
inc
rcl
mov
in
sarb
in
xrelease
mov
sbb
ja
ja
mov
mov
fdivl
jp
lea
pop
jmp
push
mov
ljmp
lods
sbb
push
push
insb
bound
imul
outsb
cwtl
pop
pop
lahf
mov
incl
xchg
pop
cli
mov
adc
std
insb
stos
jno
fsubl
dec
pop
cmp
adc
mov
lcall
sbb
jnp
xchg
pusha
insl
fidivrl
mov
and
xchg
sbb
call
outsb
setp
sub
jmp
cmp
adc
ds
xor
in
push
arpl
fwait
stos
pushl
mov
repz
femms
lret
lock
inc
mov
and
test
js
cmpsb
clc
fadds
push
pop
fimuls
mov
add
add
jo
cmp
jae
adc
lret
clc
jg
lea
mov
sbb
jno
inc
jle
push
mov
jns
cmp
out
mov
cmp
mov
ljmp
inc
shll
xchg
inc
dec
das
mov
mov
pop
in
sbb
test
repnz
pushl
cld
fdivrs
popf
dec
xchg
imul
add
mov
mov
mov
popa
decl
jnp
ja
pop
nop
cmp
mov
sahf
mov
dec
int
popa
push
outsl
inc
cs
in
xor
xchg
shll
jno
call
sbb
dec
jb
shll
or
mov
cmpsl
lds
inc
xlat
xchg
push
mov
jmp
lods
movsb
jmp
out
mov
push
mov
push
lods
cmc
iret
and
loope
cltd
pop
lcall
xlat
aas
stos
rclb
faddp
fwait
sub
pop
mov
jge
ror
mov
das
sti
pop
insl
shlb
adc
insb
movsb
inc
insb
out
xchg
mov
pop
das
dec
push
es
cs
jnp
xor
out
call
dec
push
aaa
xchg
mov
inc
pop
int
jl
inc
mov
jmp
ljmp
bound
movsl
jg
xchg
test
jecxz
clc
call
notl
sub
xor
ljmp
sub
lds
popa
pop
cltd
loope
xor
fnstcw
rcr
inc
or
pushl
mov
xor
sub
dec
mov
movsb
adcb
xor
or
fsubrs
loope
into
mov
mov
loope
mov
pop
call
insb
xor
sub
fimuls
imul
mov
jg
mov
out
mov
jp
outsl
mov
mov
jmp
and
dec
mov
mov
fbld
sbb
jg
add
test
sbb
jae
icebp
int
pop
or
decl
mov
scas
mov
and
adc
xor
dec
mov
daa
sbb
call
jge
orb
iret
lcall
test
xchg
je
cmp
sbb
insb
and
aad
jno
decl
lahf
shlb
fistpll
and
jne
out
mov
loope
pop
jb
popf
add
or
fists
int3
test
das
outsl
das
incl
lcall
cmc
arpl
pop
mov
iret
jmp
pop
jbe
jb
inc
pushf
mov
rcrl
push
cmpsb
inc
jle
pop
and
lret
aaa
pushl
add
or
scas
adc
lahf
xor
pop
movsb
dec
push
inc
addl
add
jmp
ret
xor
les
mov
call
movsb
pop
fldenv
std
add
jmp
sbb
mov
mov
pushl
es
sub
push
jg
sub
rcrl
ja
mov
mov
andb
jg
mov
mov
jecxz
xlat
xor
inc
adcb
decl
scas
aaa
aam
aad
ds
loopne
enter
movsb
xor
inc
mov
decl
xchg
jo,pt
mov
cmp
inc
push
pop
aas
jo
mov
jle
ljmp
jp
fldenv
inc
and
sar
repz
adc
bound
dec
and
decl
popa
dec
aaa
adc
jle
pop
leave
cmpsl
dec
mov
xchg
test
cmc
xlat
inc
add
add
cld
push
in
push
scas
pop
push
xchg
movl
xchg
movsb
test
cvtpi2ps
lcall
ret
fs
pop
outsb
scas
pop
mov
sub
inc
inc
xor
mov
int
push
sbb
cmp
dec
xchg
ljmp
out
sub
pop
xlat
or
sub
add
cmpsb
fdivl
lcall
pop
fisubs
fmul
ds
xor
push
icebp
ret
xor
sub
je
fimull
xchg
out
adc
xchg
int3
mov
dec
lea
imul
out
call
or
mov
add
push
mov
je
es
mov
push
pop
adc
nop
cltd
fwait
push
cmp
aas
fxch
inc
adc
and
pop
comiss
mov
xchg
lea
movsl
pop
dec
mov
jmp
pushl
xor
sbb
xor
xchg
adc
push
dec
or
movsl
call
sti
jmp
cmp
jmp
data16
filds
jns
into
and
fwait
cli
in
inc
jg
and
mov
jmp
fdivs
mov
inc
ss
ud0
decl
add
clc
jbe
push
cmc
mov
aad
insl
cs
push
call
cs
mov
loope
mov
push
addr16
mov
fstl
adc
orl
jb
imul
xor
pop
dec
mulb
out
push
mov
cwtl
sbb
or
orb
xchg
subb
jp
test
jmp
xorb
push
add
or
mov
ljmp
and
jmp
sarl
int3
into
sbb
jbe
adc
icebp
arpl
mov
xor
out
imul
pop
cmpl
cmp
add
fistps
xor
xchg
ret
dec
arpl
xchg
sbb
call
test
xchg
in
aad
xchg
lahf
call
cmpl
xchg
sbb
ds
xchg
lcall
lcall
dec
pop
lcall
push
jne
decl
loopne
mov
lods
xchg
mov
or
mov
push
rorl
insl
dec
gs
adc
dec
mov
jmp
sub
out
xor
mov
xlat
pop
incl
pop
jge
inc
add
mov
and
cmp
jecxz
inc
es
cmpsb
and
push
add
push
sbb
cmpsl
loop
inc
inc
fwait
loopne
aam
pop
mov
filds
popf
mov
roll
mov
js
outsl
xchg
mov
repnz
add
dec
xor
fwait
jl
mov
adc
sub
push
dec
mov
fistpll
shrb
push
fdivr
call
ficoml
mov
outsl
jnp
mov
aas
cmp
ret
pop
shl
insb
mov
sub
and
lahf
ss
pop
call
outsb
ret
nop
mov
mov
sub
ficoms
lea
cmp
inc
call
mov
roll
je
insb
rsm
jae
add
insb
jbe
leave
stos
loope
xchg
xchg
cld
out
dec
ja
out
mov
enter
scas
add
sahf
cmpsl
stos
loop
push
xchg
fidivrl
jnp
repz
incl
fidivs
dec
sbb
xor
es
popa
xchg
divl
cmc
mov
jb
cltd
push
inc
roll
jg
pop
test
sbb
adc
mov
dec
cli
dec
int3
cmp
fsubr
shl
jno
jg
xor
shll
testb
mov
cwtl
cmp
mov
sbbb
push
sbb
out
cmp
adc
outsb
shlb
lcall
push
loopne
and
xorb
mov
pop
jl
and
outsb
rcrl
jmp
int3
bound
scas
sbb
mov
movsb
fisubrs
mov
fdivl
lea
pop
jl
xor
insb
imul
or
jg
mov
in
jbe
outsb
shrb
decl
push
test
in
cmpsl
push
push
and
test
inc
test
mov
cmp
inc
xchg
dec
pop
lcall
popa
pop
inc
adc
xchg
ret
mov
das
ds
add
inc
jg
dec
test
jl
mov
imul
sbbl
roll
insb
cmp
stc
ret
fisubrl
mov
ljmp
mov
gs
loopne
arpl
sbb
sqrtps
movsl
in
cmpsb
in
xchg
daa
gs
mov
lcall
aam
push
sub
push
bound
jbe
outsl
and
int3
aas
push
cmp
fildll
enter
push
mov
clc
shll
jno
or
icebp
mov
call
incb
sbbb
cmp
cmc
add
iret
cwtl
and
aaa
cltd
or
fs
fisttps
pushl
rcr
cli
pop
jmp
js
jb
fwait
scas
push
fnsave
ret
call
xor
filds
mov
xor
cmp
decl
xchg
ja
mov
jmp
mov
mov
ret
scas
mov
mov
call
fbstp
leave
push
ficoml
popa
movsb
sarl
sbb
cmp
add
call
mov
pop
in
scas
int
dec
mov
and
ficompl
adc
cmp
pusha
jnp
ror
movsb
push
cli
dec
cli
dec
add
lahf
push
mov
push
jb
mov
push
data16
mov
daa
xchg
outsl
jno
popa
out
nop
lock
outsb
aas
sub
inc
call
xlat
sbb
enter
in
test
lret
rorb
add
and
cmp
lcall
sbb
mov
mov
in
xor
jns
pop
stos
iret
in
scas
repz
dec
push
or
call
daa
mov
or
repnz
aaa
daa
xchg
ret
cmp
xchg
inc
fwait
mov
fcoml
scas
push
pushl
arpl
xor
in
xchg
stos
imul
shlb
movsb
push
sub
test
ljmp
jne
call
int
fistpll
jge
adc
lds
push
and
jmp
subl
mov
popf
filds
jmp
pop
mov
lcall
lods
loope
ret
aas
insl
cmpsb
push
xorl
adc
or
mov
ud0
decl
push
or
and
fisubs
loopne
in
or
xchg
xchg
push
mov
incl
out
xchg
mov
popf
ret
clc
sub
repnz
push
and
or
pushl
push
adc
mov
add
ret
in
sub
ljmp
dec
mov
cmp
ljmp
mov
scas
ret
sub
lods
aas
andl
arpl
shll
push
les
sbb
mov
mov
test
test
loope
ljmp
lret
pop
xchg
or
sbb
jmp
jp
repnz
push
push
lods
paddsw
inc
add
sub
sbb
push
push
dec
dec
add
es
pop
mov
call
mov
fsubr
testl
or
in
insl
push
sbb
pop
out
jmp
push
ss
xchg
or
and
mov
cmp
daa
sbb
cmc
xor
lcall
ret
jns
mov
pop
mov
inc
xor
call
cmpsb
clc
mov
push
mov
jae
je
pop
movsb
popa
clc
loop
loopne
addl
into
dec
pushl
xchg
jno
dec
xchg
pop
sbb
jno
mov
fisttpl
cltd
mov
adc
jno
mov
push
test
insb
pop
mov
mov
dec
push
and
jp
pop
add
pop
dec
mov
inc
push
sar
fiaddl
jae
insb
push
into
ret
pop
pop
fdiv
testl
les
dec
jmp
ret
mov
push
mov
jp
and
lea
mov
push
iret
inc
push
and
stc
inc
push
aas
in
jns
aas
popf
cmpsl
jmp
out
es
mov
stos
out
xchg
jmp
push
insb
test
pop
push
lret
push
jp
mov
jns
in
sub
dec
mov
cmp
and
dec
jge
jae
xchg
push
inc
pop
cmp
cli
cmp
xchg
jle
mov
sti
push
stos
push
push
adc
stc
cmp
inc
gs
in
outsl
int3
mov
decl
sub
push
fistpl
leave
xchg
fcoms
sti
inc
lea
nop
add
mov
mov
and
adc
pop
ret
jmp
xchg
push
pop
jle
cwtl
or
decl
dec
jo
cmpsb
jge
push
repz
mov
adc
add
ficoms
in
xor
ja
inc
cld
push
mov
add
xor
fcompl
xchg
cmp
repz
fs
aas
mov
sbb
das
cmp
inc
jmp
lret
pop
inc
arpl
ljmp
lds
aam
cmp
ljmp
dec
add
insl
arpl
inc
mov
cmp
mov
push
sti
sub
in
or
adc
mov
arpl
cmp
scas
pop
insb
call
call
adc
add
mov
pop
das
sub
rclb
cwtl
shlb
out
icebp
fsubs
pushl
ret
jp
pop
add
mov
lea
inc
xchg
mov
sub
pushl
out
lea
mov
cld
test
xor
inc
push
repz
iret
cmc
repz
call
decl
pop
mov
std
loopne
jg
inc
mov
fldenv
inc
pop
imul
in
fdivr
push
lods
sbb
fs
movsl
ret
xchg
and
and
cwtl
and
std
lret
dec
out
incl
gs
fidivrl
sub
xor
test
xor
sbb
stos
push
or
sti
push
adc
jns
xor
inc
fdivrs
loop
mov
mov
sub
push
scas
mov
leave
xchg
inc
push
arpl
push
dec
push
xchg
lahf
stos
ss
outsb
push
push
aaa
cmp
inc
repnz
lcall
int
mov
inc
adc
imul
pop
arpl
dec
xchg
and
call
adcb
jmp
add
lahf
mov
add
pop
fiaddl
add
jmp
and
jno
mov
inc
dec
add
fisttps
pushl
xchg
jp
mov
adc
push
xor
dec
enter
or
xchg
lock
sti
add
jg
call
shrb
mov
push
inc
and
insb
or
add
pop
cmc
cs
ljmp
and
arpl
xor
sbb
adc
xorb
pop
mov
decl
push
popl
xlat
push
or
leave
call
mov
add
xchg
decl
cmp
fimuls
mov
and
sbb
sahf
loope
movsb
xor
sub
mov
cmp
add
stos
push
mov
jo
jnp
sbb
cli
inc
adc
mov
pushl
outsb
add
jnp
jnp
loopne
push
mov
mov
dec
stos
in
pusha
pop
sbb
leave
jl
call
push
fs
sbb
jns
out
adc
xchg
or
xor
adc
xchg
ljmp
test
ljmp
mov
adc
jge
cli
sub
shlb
mov
das
cld
cltd
sbb
mov
cltd
or
outsl
sub
add
sub
mov
pushl
loop
and
push
mov
push
lea
mov
cmc
addr16
loopne,pt
push
push
or
jmp
shlb
and
pop
test
sub
cmp
mov
aam
movsb
call
insl
jmp
inc
stos
insl
insl
and
cmp
xor
add
inc
mov
call
vpmacssdd
sarb
and
cltd
sti
mov
and
decl
dec
xor
dec
pop
repnz
jecxz
xchg
mov
lods
xrelease
cmpb
lcall
iret
add
in
mov
mov
push
stc
sbb
leave
jmp
xchg
and
jmp
lods
test
into
popa
bnd
in
dec
cld
enter
xchg
cs
jge
cmp
push
sarl
add
inc
icebp
fsubl
cmc
mov
sbb
cmp
inc
mov
leave
gs
jbe
jmp
daa
cmp
mov
or
sbb
push
mov
xchg
pop
movb
cltd
pusha
jmp
icebp
ret
push
das
push
insb
push
pusha
push
pop
out
sub
push
lret
ret
sbb
aas
jp
js
les
jb
cmp
mov
sbb
test
lret
loop
ljmp
das
cmpsl
mov
dec
pop
adc
fscale
mov
cmp
ficomps
inc
jmp
cmpsl
lock
pop
enter
xchg
lcall
dec
push
mov
sub
push
inc
fdivr
lcall
inc
insb
sub
jb
enter
cli
mov
mov
push
jl
and
nop
xor
repz
incl
or
mov
xlat
daa
push
imul
xchg
loopne
dec
xor
inc
bound
clc
jl
shlb
out
cmp
mov
xchg
jno
decl
mov
sbb
add
int3
movsl
data16
inc
movsb
imul
addl
dec
mov
jnp
xor
enter
ljmp
insb
sti
movsl
dec
insl
or
into
jnp
xor
fsubrl
test
jmp
sbb
out
adc
pop
fildll
and
ss
jo
add
jg
decl
and
lcall
cmp
dec
xor
lea
lcall
hlt
jmp
xchg
push
lods
ret
movsb
iret
adc
cld
call
rep
xor
push
aad
sub
ret
and
call
jae
int
es
jp
dec
inc
insb
add
inc
and
sbb
out
mov
sub
cmp
pop
xor
mov
jmp
sub
push
jb
push
test
xor
pop
jno
xor
test
lcall
sbb
mov
shrl
ret
repz
stos
imul
jo
incl
and
inc
mov
shll
add
bound
inc
lahf
cmp
dec
incl
fdivs
les
mov
pop
sti
outsb
xor
leave
ljmp
dec
cs
or
into
sbb
dec
cmp
sub
lcall
dec
cwtl
xor
ja
push
mov
or
and
push
jmp
stc
add
push
add
jne
add
insb
adc
and
fnstcw
hlt
jbe
out
mov
lcall
jmp
push
scas
sbb
sbb
sbb
and
adc
decl
and
out
in
mov
cld
es
dec
mov
xchg
cld
shl
mov
sbb
das
leave
ljmp
decl
mov
xor
pusha
mov
inc
mov
repnz
call
xchg
popa
mov
pop
dec
out
and
mov
xor
adc
incl
dec
data16
cli
lret
lea
xchg
test
out
mov
dec
pop
adc
inc
cmp
inc
arpl
push
xchg
mov
inc
out
add
pop
leave
inc
dec
push
push
ret
lds
push
loope
dec
rcr
stc
decl
out
mov
inc
push
popa
test
inc
and
lock
fcom
fistpll
cmp
inc
xor
popa
jbe
adc
sbb
cmp
mov
cmp
mov
outsl
shll
mov
cli
int
out
pop
test
push
in
cld
lock
das
outsl
stos
outsb
mov
iret
xor
enter
jmp
mov
push
lcall
mov
or
inc
repnz
mov
xor
and
xchg
call
adcl
rolb
out
sarb
int3
inc
inc
aas
xchg
call
and
sahf
jmp
aas
int3
jne
adc
std
dec
out
and
push
mov
shrb
dec
mov
call
mov
mov
mov
test
cmp
icebp
movsb
stc
or
pop
sub
decl
xchg
or
lea
sub
add
push
dec
and
push
mov
leave
incl
in
fs
lock
insb
pop
test
ljmp
decl
adc
arpl
or
fbstp
call
outsl
or
stos
in
xchg
sub
mov
jne
push
adc
dec
jg
sahf
cmc
xchg
push
or
imul
orb
adc
lock
in
inc
adc
add
mov
cli
mov
add
xor
loopne
jp
or
rorl
push
rol
dec
inc
aam
rorb
lcall
out
aaa
testb
fldenv
inc
add
loopnew
xchg
out
scas
popa
out
test
inc
lock
insl
aas
xchg
inc
xor
mov
outsb
xchg
or
out
add
call
sbb
test
insl
lods
les
imull
mov
mov
adc
pusha
xor
adc
inc
jne
and
push
xlat
inc
pop
push
call
loopne
shll
pop
adc
sbb
jge
mov
fildl
sub
pop
leave
cmc
sub
and
mov
cmp
sbb
scas
mov
push
idiv
mov
decb
int
iret
fcompl
lea
push
sbb
inc
dec
cmp
or
int
fwait
jl
loop
sbb
dec
mov
nop
inc
sbb
xchg
sub
and
adc
bound
fs
jmp
addr16
sahf
dec
js
das
jle
movsb
xchg
xor
xchg
std
cmp
push
sbb
ret
sti
sub
test
mov
adc
out
mov
pushl
add
pop
fadd
or
adc
push
add
das
aas
push
jecxz
fldcw
jo
cmp
shl
push
jo
sbb
ja
incl
cmc
add
pop
stos
jge
xlat
lcall
lret
dec
jmp
mov
ret
cwtl
and
shll
inc
leave
addl
or
mov
dec
ret
clc
js
das
pop
add
sbb
xchg
inc
push
jmp
cmp
jnp
dec
arpl
xor
push
cs
gs
subb
or
lahf
js
cltd
out
xor
incl
arpl
cltd
and
aas
jbe
loopne,pn
inc
push
jno
enter
pop
out
xor
cmp
in
jecxz
sbb
das
cmpsb
dec
mov
inc
out
test
jmp
mov
pop
xchg
out
jmp
out
jo
repnz
lcall
or
aam
mov
jmp
rcll
pop
pop
xor
pop
sbb
mov
jmp
stc
fsts
sub
push
inc
rcrb
mov
cmp
out
jg
decb
inc
iret
sub
stc
cwtl
das
cmpsb
addl
lcall
outsl
xor
dec
push
test
pop
faddp
mov
jnp
outsb
ds
inc
decl
cltd
xchg
mov
xchg
jne
test
loopne
stc
mov
mov
call
xchg
or
aaa
mov
cmpsl
xlat
roll
incl
popa
add
loop
jmp
pop
cli
xor
fdivr
sti
pushf
repnz
dec
sub
das
xchg
fisubl
mov
xchg
mov
and
jo
ljmp
push
xor
lds
push
mov
add
into
js
sub
rcrl
mov
mov
in
test
or
pop
leave
incl
sti
addb
adc
inc
stos
shll
mov
incl
roll
ret
xor
rol
aad
sub
jmp
mov
adc
icebp
jae
rorl
push
int3
insb
jp
jbe
neg
jg
fmuls
lods
aam
add
add
sub
jmp
inc
jg
pushf
in
jmp
mov
cmp
insb
rol
pop
add
mov
incl
cmp
jb
mov
add
out
jo
dec
lahf
jge
icebp
pop
push
cmc
and
jg
fsts
subb
hlt
outsb
xlat
or
cmc
loope
ret
pop
pop
push
scas
jo
push
test
imul
popa
icebp
xlat
pop
mov
sbb
mov
lock
ds
xchg
arpl
ljmp
push
fdivr
xlat
mov
test
stos
push
test
data16
cmp
int
xchg
ret
call
cmovge
inc
jne
ja
pop
push
jecxz
cmp
enter
cmp
cmpsl
test
loopne
leave
add
cmpb
mov
inc
mov
leave
testb
and
cltd
or
scas
test
outsb
jae
int
inc
inc
mov
int
decl
xchg
ret
cmp
bound
mov
stos
sub
mov
cmc
mov
xchg
call
sub
mov
das
stos
adc
fcoml
out
int3
aas
inc
jae
sbb
cmp
inc
cmpsb
push
imul
sti
pop
and
adcl
or
pushl
push
fldl
pop
add
cmp
and
xchg
repnz
mov
aas
shl
pop
xchg
pop
push
scas
iret
xlat
fs
incl
rol
sbb
xchg
repz
jae
aas
negl
clc
testb
pop
out
jmp
xchg
xor
aaa
scas
xor
repz
aaa
imul
pop
sbb
cmpsb
or
stos
xlat
xor
inc
popf
lods
movsl
sbb
jmp
arpl
cmc
bound
or
leave
cld
es
nop
outsb
xchg
jno
incl
jmp
hlt
neg
inc
insb
sbb
mov
jae
in
out
or
cmpsb
cs
std
mov
decl
dec
dec
and
jle
xor
je
test
jae
xchg
mov
xchg
dec
ret
call
in
insl
inc
pop
fldl
cmpsb
gs
jno
mov
pop
or
xchg
in
and
push
mov
xchg
pop
jp
rcr
dec
mov
lret
das
in
jmp
sbb
ret
mov
mov
mov
or
dec
andb
clc
mov
stos
mov
repz
mov
add
adc
jmp
outsb
call
dec
sub
ret
jmp
cmc
dec
bound
xor
jae
sbb
ds
push
xor
into
sti
add
adc
pop
shl
jmp
push
sar
test
dec
clc
call
test
or
imul
xor
stos
xchg
mov
lds
and
jmp
cs
movb
sub
subb
adc
add
xor
sub
lret
incl
in
mov
ds
pop
mov
stc
mov
mov
iret
adc
jmp
fsubrp
cmpb
xchg
test
test
xchg
fbstp
xchg
gs
cli
add
jmp
add
jo
adc
popa
in
xchg
xor
dec
in
les
nop
inc
xchg
and
pusha
mov
dec
jne
faddl
fidivrl
out
fsubrl
sbb
xchg
inc
lock
sarb
dec
lcall
arpl
push
and
outsb
test
jmp
fbld
mov
cld
leave
mov
call
sti
mov
mov
out
or
inc
incl
and
dec
mov
aaa
into
add
int
or
jg
mov
or
pusha
popl
adc
mov
orb
js
sbb
jno
cmp
std
data16
out
mov
lret
xor
mov
jp
push
push
bound
mov
lods
fld
lcall
sub
iret
insb
mov
inc
mov
xorb
mov
cmp
cmp
pop
sbb
jp
test
inc
ret
sub
cmpsl
push
adc
push
sub
adc
cmpsb
popa
stos
xchg
ficomps
popf
mov
pushf
mov
incl
test
icebp
cmp
fdivr
adc
stos
push
out
sbb
sub
xor
decl
sbb
repnz
dec
mov
sbb
mov
adc
ljmp
pop
popa
imul
sub
aam
xor
adc
fwait
loope
jg
lcall
decl
pushf
xor
push
sub
jl
out
je
movsl
rol
addl
dec
clc
mov
dec
pop
stos
push
xor
xchg
xor
gs
sbb
insl
sbb
jne
fs
outsb
incl
aas
push
inc
sbb
sbb
movsb
ss
mov
rcrl
out
loopne
mov
fdivrp
lcall
pop
cmp
je
add
push
mov
hlt
test
jb
int
sbb
and
imul
add
cli
insb
in
jno
pop
push
lods
cmp
lock
jmp
xchg
daa
enter
cli
or
clc
popa
jmp
adc
cmp
mov
inc
and
mov
jge
pop
jo
inc
cmpsb
pop
bound
sbb
push
mov
pmovmskb
or
pushf
loope
call
movsl
pop
mov
jbe
push
and
mov
lret
lds
rclb
fimuls
sub
addl
call
cmpb
and
and
inc
nop
iret
push
ret
rorb
clc
push
lcall
cmpsl
insl
xchg
push
lock
cmpsb
mov
jno
or
loopne
repz
push
gs
push
sub
push
loop
push
jle
inc
jle
mov
inc
and
scas
mov
dec
inc
hlt
lret
lcall
mov
out
inc
push
rcl
test
lods
cmp
jbe
rolb
dec
cwtl
data16
lcall
sub
xorb
inc
sub
shl
in
inc
jno
xor
shl
cmp
adc
inc
and
mov
or
push
mov
pushl
add
xor
cli
cmp
lods
ja
xchg
imul
xchg
in
fldl
mov
push
rclb
iret
xor
and
xor
outsl
imul
lds
jmp
push
int
push
push
xor
fucomip
mov
out
pop
pop
jge
mov
xchg
call
mov
mov
sub
xchg
jecxz
icebp
fcmovne
sub
mov
or
cmp
inc
inc
stos
xchg
adc
cltd
pop
dec
mov
push
push
pop
cmpb
adc
mov
lcall
inc
loop
cmp
push
je
adc
push
adc
xchg
push
dec
int3
sub
mov
mov
cmpsl
mov
or
fcomps
out
sbb
mov
fisttpl
mov
in
push
lea
insl
xor
lcall
or
jbe
loope
ds
cli
cmp
lcall
icebp
fisttpll
and
push
fwait
aas
daa
xor
in
mov
aam
inc
dec
lret
adc
out
out
xor
inc
mov
aas
xchg
arpl
call
dec
sahf
lahf
lea
xchg
shrl
jecxz
std
rol
sub
jmp
cmp
in
inc
jp
xchg
jae
das
dec
adc
push
xor
cld
adc
decl
push
mov
mov
pop
popa
xchg
jns
ljmp
jp
scas
cwtl
int
adc
loope
xchg
xlat
data16
jne
inc
lret
push
mov
xchg
sbb
or
loop
add
pop
jle
rcll
jg
arpl
arpl
mov
xor
mov
xchg
sahf
push
pusha
orl
ds
mov
and
movsl
adc
fwait
outsl
cmp
repnz
cmc
inc
aaa
div
lcall
stos
nop
subb
cmp
in
cwtl
movsb
jl
or
lcall
jmp
call
cmp
les
mov
xchg
xchg
call
repz
sub
mov
std
mov
fstpl
mov
cmp
in
xor
rcrl
mov
jl
mov
jmp
adc
ret
cli
xchg
xor
fnsave
push
push
fld
mov
jp
and
mov
mov
decl
outsl
jle
cmp
test
push
jg
into
xchg
arpl
bound
cmp
jmp
in
repnz
jl
push
loop
js
push
arpl
mull
pop
fwait
sbb
sub
push
mov
push
push
addl
cmp
adcl
add
das
xlat
call
xor
call
and
shr
ss
dec
lret
rcr
addb
fidivs
lret
clc
in
lret
outsb
nop
repnz
jmp
popf
mov
xchg
push
scas
push
ret
or
sbb
test
sbb
call
mov
mov
ds
rcll
ficomps
push
jmp
push
mov
dec
mov
or
fiadds
mov
in
outsb
jo
mov
shrb
and
popa
inc
cmp
jns
sbb
je
or
aad
add
or
addr16
fimuls
adc
sahf
cmpsl
pop
loopne
out
sub
in
fcompl
aam
inc
into
scas
and
ret
pop
ret
stos
mov
or
ljmp
cli
mov
jmp
mov
cld
or
enter
push
aaa
int3
sbb
aaa
push
xchg
es
fsubl
incl
mov
fs
or
xchg
pop
jge
pop
or
ret
dec
test
fwait
dec
push
ljmp
pop
xor
push
add
mov
lret
pushf
mov
add
sub
lods
popf
and
call
adc
pusha
inc
dec
sbb
mov
xchg
pop
and
arpl
jge
lret
mov
pushl
push
insl
scas
cld
out
in
inc
mov
jle
ret
stos
rcrb
mov
jmp
aam
call
mov
daa
or
aam
stos
ds
push
popa
mov
aam
jg
bound
repnz
mov
lcall
add
jp
loop
cmc
xchg
mov
dec
jo
leave
sti
lods
lret
ud0
dec
pop
out
stos
clc
sbb
push
test
xchg
mov
aaa
mov
sti
or
incl
push
mov
adc
ss
movsl
dec
insb
decl
popa
imul
incl
jo
loopne
jl
jnp
pop
fcoms
in
int
loope
addr16
int
clc
jns
and
in
xor
cli
push
inc
sbbb
fwait
push
sahf
mov
pop
stc
popf
int3
add
jg
rcr
push
jo
call
fwait
repz
add
pop
ffreep
cmp
out
xor
cmc
stc
mov
mov
lea
loopne
ljmp
addr16
int
out
inc
cmp
sbb
inc
iret
ds
and
pop
roll
sub
pushf
adc
dec
sti
xor
adc
jmp
push
fs
push
ds
lcall
jmp
insb
cmp
push
aaa
dec
rorb
mov
movsb
fmull
and
gs
cmp
and
cs
ljmp
enter
aaa
pop
lret
adc
xchg
pop
inc
cld
mov
inc
jmp
dec
jae
jmp
test
add
fdivrs
jmp
rcr
test
cmp
jne
push
addr16
frstor
mov
pushl
cwtl
addr16
les
sbb
mov
cld
cmp
hlt
movb
incl
push
lahf
inc
xchg
mov
dec
cmp
xchg
push
pop
mov
xchg
inc
icebp
repnz
loopne
jmp
push
insl
lahf
xchg
xor
cmp
or
rcrb
cwtl
in
xor
mov
pop
rcrl
decl
add
mov
imul
outsl
mov
sbb
adc
decl
je
hlt
cltd
pop
inc
add
mov
outsl
divl
sbb
pop
call
fisttpl
enter
in
mov
pop
pop
mov
cld
sub
jb
call
leave
push
inc
mov
lds
clc
jmp
cmp
scas
sub
and
cmpsl
movsl
imul
xchg
movsl
mov
xor
mov
nop
sub
cmpsl
mov
mov
fisttpl
mov
and
cmpsl
aaa
fisttpll
jle
jp
add
cmpb
xlat
jns
fwait
sti
cmp
in
cmpsb
cmpb
cmp
mov
push
adc
mull
scas
dec
mov
repz
aas
cmp
adcb
sub
enter
fs
repz
adc
bswap
sbb
decl
arpl
add
dec
dec
inc
cmc
cld
shl
mov
or
imulb
sbb
ljmp
cmp
mov
idivl
cmc
xchg
jae
xchg
rcll
into
test
dec
es
fisubrs
imul
cltd
or
fstpl
fists
mov
inc
lods
and
xchg
jp
dec
add
std
into
mov
dec
cli
adc
sub
mov
lcall
fisubrl
dec
xchg
and
adc
in
out
test
push
or
incl
dec
add
test
pmulhw
cmp
in
jle
addr16
dec
imul
rorb
sub
mov
mov
daa
sbb
lret
xor
aam
pop
ret
push
pop
ficoms
gs
incl
dec
mov
xchg
std
lods
push
dec
mov
add
xchg
stos
jecxz
sub
pusha
sub
decl
jb
fdivrs
inc
div
add
imulb
pop
adc
test
ljmp
lcall
cmp
xor
mov
dec
sbb
js
inc
test
fnstsw
js
cmpb
popf
in
pop
jb
push
jmp
adc
ficompl
inc
cmp
stos
call
fldenv
into
sbb
cs
out
call
jb
xor
iret
inc
and
test
decl
les
adc
iret
icebp
jle
mov
ret
lret
cmp
pop
jae
lret
stos
das
inc
mov
stc
lcall
and
daa
pop
lock
add
iret
mov
xchg
jno
add
ljmp
xor
push
inc
dec
sti
jmp
mov
add
stos
fildl
push
pop
xchg
pop
or
cmpsb
or
jmp
adc
xor
fstpt
mov
test
pusha
lahf
sub
in
mov
adc
rolb
and
fwait
pop
adcl
movb
mov
call
stos
xor
scas
sbb
push
loop
or
xchg
sbb
daa
es
jae
pandn
jmp
xor
loopne
int
mov
pop
add
addr16
mov
jmp
mov
cli
inc
mov
mov
push
aas
sbb
cwtl
pushf
dec
xchg
ljmp
xchg
or
mov
push
xlat
xor
and
lods
inc
hlt
pop
cmp
mov
dec
incl
bnd
addl
lahf
inc
and
ja
fs
fmuls
pushf
mov
inc
sbb
jmp
push
lds
xchg
sbbl
xchg
addr16
incl
sbb
sbb
push
dec
lret
jnp
arpl
lods
mov
or
shll
call
mov
cmp
popl
test
xchg
fadd
mov
stos
mov
shr
cmp
xchg
or
cmp
mov
and
xor
mov
cmpsl
inc
fdivl
mov
insl
mov
jp
or
ljmp
repnz
jbe
jge
jne
idiv
or
repz
push
sti
mov
or
ret
das
decl
in
testb
xchg
push
in
sub
outsb
das
out
sub
lcall
orl
faddl
jae
sahf
lcall
outsl
jle
dec
cs
add
push
cmp
es
push
jae
stos
fucomip
inc
push
fsubr
repnz
fdivs
cmp
dec
cmp
jbe
xchg
movsb
or
incl
out
dec
and
sarl
add
jnp
movsb
inc
xor
inc
fstl
cmpsb
sbb
scas
cld
fnstenv
popa
pop
pop
sbb
push
imul
add
sarl
decl
cmp
mov
loopne
push
ret
daa
dec
shrl
inc
lods
je
je
lret
data16
call
ljmp
dec
or
cmp
fnsave
xchg
into
mov
mov
aam
cld
jmp
shrl
stos
sub
ficoml
or
testb
sub
lcall
and
scas
in
imul
push
imul
stos
pop
jl
adc
or
inc
push
out
ret
ret
insb
mov
pop
inc
pop
add
add
mov
ljmp
inc
lea
ds
aam
mov
js
jmp
fsubrl
cmp
fsubrl
popa
rcll
mov
jmp
pop
mov
notl
xchg
and
jmp
addl
sahf
fdivrp
xchg
lahf
sub
inc
test
sbb
push
pop
add
call
fmull
cmova
cmpsb
ret
in
mov
insb
divb
iret
pop
js
add
cmpl
push
ret
dec
stc
incl
fists
push
out
pop
dec
inc
sub
fcoms
add
jle
incl
sub
stos
mov
into
int3
mov
rep
push
sbb
sbb
pop
jne
or
pop
dec
fistl
inc
call
imul
bound
das
pop
sub
sti
add
std
lods
pop
sar
cmpsl
movsl
push
clc
movsb
test
add
aas
lret
pop
dec
xchg
adc
adc
fcoms
cmp
bound
jmp
mov
ljmp
jns
daa
leave
inc
xlat
fdivl
cmp
in
clc
dec
dec
jmp
lret
call
std
mov
pop
push
shrb
jno
xor
xor
out
pop
jle
push
fnstcw
aaa
sbb
dec
stos
mov
add
dec
cmpl
mov
int
mov
lods
and
xchg
popf
xchg
pop
clc
data16
mov
jl
jmp
incl
scas
faddl
dec
inc
mov
xchg
cld
sub
cmp
sti
add
jb
mov
ljmp
sbb
mov
xlat
sub
mov
bound
xor
or
mov
decl
sub
dec
ret
scas
repnz
or
or
leave
mov
sar
stc
decl
mov
push
sub
jl
and
shlb
inc
std
sub
ljmp
popf
xor
das
mov
loop
xor
lock
dec
test
aas
jp
mov
sti
ljmp
dec
fwait
outsb
imul
sbb
jl
push
ud0
jmp
add
add
lea
push
cmp
push
aad
cmp
dec
dec
in
je
pushl
add
mov
gs
xchg
push
or
sbb
icebp
mov
sbb
inc
sub
popf
add
sbb
cmp
mov
mov
xchg
pop
push
aas
push
pop
jmp
cmp
jb
push
arpl
or
lcall
add
push
fcomip
mov
pop
mov
je
mov
xchg
jp
decl
into
fcompl
cmp
pop
adc
xor
rolb
aad
pushl
or
fisttpl
out
xlat
mov
mov
hlt
into
sbb
xor
rol
repz
decl
mov
inc
sub
rolb
lds
outsl
mov
jno
inc
cmp
jg
scas
jo
ret
int
inc
loopne
xor
clc
lcall
xchg
lods
call
daa
dec
jmp
aas
adc
inc
pop
popf
jl
mov
pop
jnp
mov
les
or
decl
stos
adc
test
sarl
xchg
das
mov
mov
xchg
mov
xchg
repz
fs
pushf
jae
daa
es
push
xchg
fsubl
adc
repz
lcall
xor
cmp
lods
inc
sub
mov
pop
ljmp
cmp
cmc
scas
jne
imul
insl
je
cltd
cmp
jnp
mov
call
dec
fstpt
jns
inc
je
jbe
push
sub
sbb
jno
mov
lret
mov
ljmp
insb
ja
dec
xchg
pop
jns
pop
mov
std
sub
jg
mov
rolb
adc
incl
js
xchg
movsb
mov
out
jmp
push
mov
or
and
xor
shrl
inc
dec
ret
decl
sub
mov
jp
mov
js
cmpsb
jae
int3
and
sub
pop
adc
fdivr
out
test
xchg
dec
cs
insb
jns
or
add
out
xchg
sbb
inc
out
outsl
lcall
les
mov
insl
sbb
xchg
lods
test
mov
inc
ret
dec
rcll
pushl
lret
add
icebp
push
mulb
jl
xchg
xor
fwait
psubsw
and
push
sbb
movsb
cmp
pop
sub
cwtl
fmuls
sub
mov
gs
ljmp
sbbb
sub
pusha
mov
arpl
or
iret
addr16
and
lock
xchg
fisubs
push
es
mov
js
xor
push
inc
mov
cld
cmp
iret
dec
inc
and
push
sbb
adc
dec
fsubs
jp
repz
jae
mov
test
das
insl
ficomps
jb
rcl
call
fiaddl
fidivrs
mov
aad
add
sti
test
out
jecxz
movsl
jmp
sub
pop
xchg
pop
adc
insb
dec
mov
lcall
mov
dec
mov
push
push
in
call
add
je
jae
std
dec
mov
add
arpl
sbb
pushl
jae
jmp
xchg
test
sbb
sub
cld
call
or
jns
jne
ljmp
test
gs
cltd
fbld
inc
pop
scas
into
push
xchg
fnstenv
mov
sar
call
pushl
imul
imul
inc
mov
fsubs
push
test
incl
test
cmp
sub
xor
sbb
push
jae
xor
decl
cmp
lcall
dec
jge
xor
fdivrl
cltd
and
test
pop
push
sbb
call
lcall
xor
cmp
add
test
outsb
cmp
mov
mov
cld
movnti
push
mov
xor
mov
jg
xor
adc
sbb
lods
test
imul
mov
pop
or
cmc
cmc
dec
cmp
or
mov
jns
inc
lcall
dec
fstps
jmp
pop
outsl
sbb
jno
and
mov
fnstcw
enter
call
or
loope
js
in
push
outsb
jle
mov
and
pop
call
jno
ljmp
jae
pop
rolb
or
push
push
jmp
aad
popf
mov
mull
jmp
pushl
insl
idivl
jg
popf
jl
out
push
jb
mov
out
jno
pop
pop
js
decl
adcb
cmpsb
aam
sbb
popa
sbb
push
cltd
and
int3
xchg
loop
adc
decl
lahf
sub
mov
pop
inc
xor
adc
aad
mov
mov
sbb
decl
xchg
iret
scas
mov
pop
xchg
pushf
fs
pop
mov
sbb
sbb
push
lea
dec
jle
ljmp
fnstcw
outsl
aas
mov
cmp
stos
inc
jge
mov
dec
popf
xor
xchg
and
pop
mov
popf
lea
jl
test
cmpl
jae
imul
add
inc
pop
dec
xor
call
xchg
sar
xlat
cmp
jmp
rorl
scas
fwait
inc
push
scas
call
xchg
aam
test
jmp
push
filds
inc
in
mov
int
ljmp
inc
lret
and
mov
xor
daa
incl
addr16
insb
push
adc
cmp
mov
xchg
aas
xchg
mov
pop
scas
inc
data16
int
mov
mov
pop
cli
loopne
call
adc
jae
movsl
pop
outsb
xlat
jne
pop
enter
pushl
ret
jae
cmpsl
shll
cmp
jmp
mov
jmp
sub
imul
ficoml
mov
mov
xor
scas
in
and
mulb
lret
ss
mov
ljmp
inc
sbb
sub
jo
in
adc
call
push
and
push
fisttps
push
lcall
ss
mov
add
repz
out
stos
and
mov
inc
jne
outsl
dec
cmp
lret
es
xchg
sub
mov
push
out
push
pop
adc
sti
sbb
clc
pop
roll
push
xchg
dec
mov
push
nop
pop
lds
mov
xchg
cmc
incl
push
mov
inc
nop
rol
xlat
outsl
mov
xlat
sbb
dec
cmp
loope
adcb
ja
pushl
lods
imul
xchg
push
outsb
sti
lahf
or
or
jne
inc
cld
std
movsl
mov
add
inc
ret
movsl
mov
fisubrl
aas
addb
int
lcall
mov
gs
in
adc
xlat
ljmp
out
mov
cld
lret
fucomip
lahf
outsl
lahf
adc
ljmp
insb
sbb
decl
jns
test
lds
inc
jbe
shrl
pop
std
xor
ljmp
xchg
loope
clc
push
jb
dec
or
xor
imul
ljmp
sbb
lea
pop
inc
push
push
push
aas
loop
jl
std
mov
inc
bound
sbb
ljmp
je
mov
mov
mov
insl
dec
pushf
jns
das
xchg
or
scas
out
sbb
mov
mov
sbb
push
pop
jecxz
mov
inc
pop
sub
cmp
push
out
aaa
arpl
call
rorb
fisttpll
jo
inc
mov
sahf
push
sbb
push
adc
incl
push
and
js
mov
ror
sub
xor
adcl
or
and
ljmp
ds
repz
inc
push
push
int
push
outsl
mov
xlat
push
mov
mov
push
decl
pop
in
xchg
lret
iret
imul
loop
cld
jnp
nop
sti
bnd
sbb
pushl
sbb
pop
or
dec
jne
push
aas
lcall
pop
in
push
add
fiadds
incl
mov
clc
fwait
pop
sahf
cli
enter
lods
rcr
mov
mov
jae
decl
rcl
test
jbe
js
ds
sub
fnsave
or
lods
mov
jle
mov
push
cwtl
push
xchg
mov
xorl
jecxz
cmpsl
scas
aam
in
lock
lcall
in
add
xor
outsl
mov
fwait
aas
cmp
adc
push
adc
mov
out
push
mov
and
aaa
gs
push
mov
lods
and
push
jno
jmp
dec
pop
aaa
hlt
ljmp
mov
out
push
pop
test
mov
mov
fdivrs
ljmp
fs
adc
mov
jb
mov
fcmovu
popa
mov
dec
repnz
inc
push
mov
jnp
inc
mov
mov
hlt
xor
gs
pop
into
loopne
add
insl
sbb
and
dec
out
ljmp
xchg
out
sbb
cmpsb
ja,pn
ficomps
call
in
push
xor
inc
data16
aaa
pop
sub
xor
std
jle
sti
cmp
sahf
pop
fldlg2
push
out
out
dec
incl
inc
fmuls
xor
rolb
sbb
push
mov
into
stos
lea
inc
stos
insb
sub
call
cs
das
lahf
push
adc
clc
in
es
xor
fwait
lea
adcl
lcall
mov
fcompl
push
in
rcrb
fcmove
sub
data16
push
shrb
cmpsl
cmc
and
out
jp
pop
jmp
outsl
xor
addr16
lods
fsubs
test
aam
mov
aaa
sub
xchg
mov
inc
mov
pop
sbb
loopne
imulb
lods
cld
fcomps
xchg
push
in
xchg
jge
inc
jg
push
cmp
pop
mov
hlt
mov
fwait
jae
adc
lcall
into
inc
push
into
aam
mov
push
arpl
icebp
xchg
iret
xor
arpl
or
sbb
decl
cwtl
push
xorb
add
rcrl
jecxz
ret
sbb
call
push
lods
cltd
adc
or
jne
es
jge
mov
mov
rclb
pop
jno
ljmp
xor
aaa
scas
pop
dec
jp
and
jnp
pop
mov
je
xchg
fucomi
xchg
sbb
push
inc
adcb
jp
and
mov
cld
lcall
lock
and
adc
int
lahf
sar
mov
sub
pop
lcall
dec
and
adc
mov
mov
adc
pop
pusha
jecxz
lods
in
mov
shlb
pop
subl
push
dec
add
sub
mov
dec
out
lahf
cmpsl
shrl
mov
or
lahf
mov
popa
std
push
outsl
xorb
fistpll
jne
incl
call
les
dec
jecxz
xor
fst
fsubl
filds
nop
adc
add
decl
test
pop
stos
xlat
jnp
mov
mov
iret
setns
fsubs
adc
decl
rcrl
pop
rclb
sbb
mov
aaa
jae
fadd
fnstenv
xchg
call
dec
vhsubps
ja
stos
bound
daa
inc
cmp
sub
adc
xchg
aad
rcll
lcall
rcrb
ss
add
dec
dec
adc
xor
outsb
pop
rclb
mov
shll
mov
addr16
or
adc
insl
sub
pop
ret
cmpl
inc
mov
lcall
sbb
lahf
dec
mov
inc
xor
lea
lahf
aad
xor
outsb
jle
adc
jmp
cs
into
lret
mov
sub
movsb
mov
dec
fisubrs
mov
ljmp
push
pop
fiadds
sub
jmp
ja
int3
in
pusha
gs
fstps
pushl
aaa
pop
mov
stos
fimuls
sub
inc
jns
jp
aas
stos
outsb
rorl
add
shlb
mov
mov
lret
and
lods
and
mov
sub
into
jmp
jmp
sub
outsl
leave
mov
jl
push
pop
push
mov
jnp
outsb
adc
lret
pushl
mov
pop
test
pop
in
lock
sub
ficoml
lcall
inc
pop
rorb
popa
popa
iret
lock
sub
adc
lea
cmc
add
xor
inc
sub
cmc
cmp
mov
aas
mov
rorb
and
pop
mov
call
add
or
xor
mov
lret
and
and
sub
pushl
out
test
int
pop
subb
mov
lcall
popf
shrl
in
pushl
mov
mov
cmp
adc
decb
push
shll
inc
xor
jae
lcall
sub
movl
insb
mov
mov
enter
fistpll
inc
dec
push
mov
call
jmp
fcomi
negb
out
cmp
out
lods
jo
jns
outsl
int3
les
out
leave
out
es
movsl
es
mov
mov
data16
jb
pop
adc
xor
and
aam
dec
decl
sbb
lahf
xor
lahf
cmp
fwait
add
sti
jmp
test
nop
dec
xor
mov
or
insl
xchg
ud0
jg
aas
xorl
fs
cmp
sub
out
inc
mov
call
pop
lcall
idivl
lret
cmp
add
jge
repnz
push
cmpsl
inc
jge
loope
mov
xor
ficoms
cltd
xchg
jle
in
stos
leave
int3
push
mov
orb
jmp
xlat
negb
jb
cmp
pusha
ljmp
fsts
cmp
jnp
and
insl
call
ja
testb
lds
in
les
cmp
pop
fsts
je
sar
jmp
and
sbb
ljmp
test
mov
mov
xor
ljmp
call
test
or
pop
and
lret
icebp
push
incl
sbb
xor
fldenv
pop
mov
dec
icebp
lahf
pop
mov
lret
jp
outsl
movsl
dec
cs
xchg
add
hlt
int3
jmp
lret
mov
mov
pop
loopne
jbe
cmp
adc
xor
adc
loop
inc
fcmovu
add
cs
cs
loopne
fcos
pushl
insl
std
xchg
mov
jmp
ja
ficompl
daa
clc
cmp
stc
movsb
mov
out
sti
mov
jmp
cmp
bound
repz
cmpsl
jge
lods
dec
mov
xchg
add
gs
push
sbb
sti
ja
adc
push
push
or
and
xor
insb
cltd
pop
pop
outsl
xchg
push
fwait
xor
xor
jbe
pop
in
ljmp
dec
repnz
shrb
sub
mov
jno
push
mov
pushl
push
arpl
inc
icebp
sbb
pop
loopne
call
je
pop
not
inc
xor
and
decl
push
jmp
push
sbb
xor
jl
adc
and
negb
mov
inc
cmp
dec
jo
out
sbb
jle
jmp
add
sub
dec
jge
fwait
jle
in
push
sti
orl
lcall
insl
test
fsubs
imul
movsl
cwtl
jecxz
mov
mov
pushl
mov
nop
mov
ljmp
daa
fbld
mov
and
call
pop
sbb
mov
repz
adc
lret
in
loope
push
xchg
push
jp
sbb
xlat
mov
inc
push
hlt
inc
sub
adc
sahf
pop
cs
dec
pop
test
out
dec
in
not
cld
mov
cltd
jbe
jae
rcrl
in
pop
lahf
xor
mov
shlb
ljmp
mov
xlat
ret
fwait
lea
or
add
stos
pop
fcmovb
scas
mov
mov
fcoml
and
mov
movsb
sti
test
or
jae
pusha
mov
add
jl
pusha
popf
mov
inc
daa
stos
shll
or
xchg
imul
in
xor
or
jmp
pop
cmpsl
dec
outsb
dec
or
and
loopne
in
ret
lods
shll
mov
pushl
mov
xchg
call
out
pop
daa
or
mov
xchg
inc
ror
fwait
lcall
xor
sarl
xchg
jecxz
mov
jmp
push
dec
sbb
rcr
shll
push
cmp
pop
and
imul
dec
lret
pop
movsl
jno
pop
inc
lds
loopne
out
jmp
jp
xor
cmpsb
mov
lret
push
push
mov
fstpl
jg
add
in
mov
test
add
pushf
mul
jno
pop
insl
ret
cmp
xchg
out
roll
mov
xchg
inc
or
cld
jp
jbe
jecxz
inc
jns
jb
xchg
out
jl
sub
fcoml
fbld
dec
and
repnz
dec
jmp
std
xor
ret
mov
test
or
pop
add
daa
cmpsb
out
push
xor
pushl
outsl
adc
dec
jp
call
mov
adc
stc
cmovnp
test
imul
ret
test
add
mov
call
and
or
outsl
mov
mov
jmp
jle
cmpsb
xor
daa
pushw
aam
cmp
hlt
nop
in
or
adc
sahf
xor
ljmp
mov
jo
mov
lahf
jg
sbb
mov
mov
xchg
pop
ds
pop
mov
jae
fs
call
fwait
xor
lret
ret
cmp
jne
mov
mov
fisubl
decl
mov
add
xor
orb
js
lea
cltd
loope
mov
int3
cwtl
and
test
sbb
inc
add
out
and
ud0
lcall
pop
sti
cmp
outsb
stos
popf
pusha
out
xor
mov
sahf
xchg
cmovg
cltd
scas
and
test
jge
incl
dec
test
ret
fwait
sub
push
imul
mov
xchg
stos
orb
pop
sahf
dec
jmp
fisubrl
push
sub
mov
lahf
ja
ja
cmp
and
cwtl
pushf
ss
lcall
push
lods
mov
push
pop
xor
loopne
pushl
mov
adc
inc
add
fsubrs
fwait
or
out
mov
testl
dec
shl
push
or
adc
decl
jno
hlt
and
cmp
mov
and
sahf
adc
cli
xchg
fisubl
int3
stos
inc
mov
pop
jo
xor
pop
lods
fists
out
cmp
mov
mov
hlt
sub
lcall
lods
or
fisubrl
cmpsl
sub
ss
push
enter
add
lcall
jae
jne
push
dec
pop
sbb
and
ss
cmp
shlb
lcall
push
inc
sub
jle
adc
aad
jne
cli
sbbb
jbe
push
push
lock
jmp
xchg
lret
pushf
jo
shlb
cmc
pop
scas
dec
sbb
push
cmpsb
ret
bnd
jbe
or
clc
stos
mov
cli
xchg
and
cmpsb
jno
jle
into
pop
sub
aam
scas
sbb
pushl
jmp
subl
sbb
ficoml
repz
shll
outsb
xchg
push
cmp
lea
sbb
lock
stos
dec
jae
dec
lds
loope
xlat
adc
dec
repnz
incl
mov
cld
orl
jmp
repnz
shll
inc
fstps
pop
push
fcompl
push
mov
jmp
jnp
loope
lret
je
lahf
inc
in
cmp
jno
orl
filds
lcall
ljmp
push
ror
das
xchg
dec
mov
pushf
ret
inc
mov
xchg
hlt
mov
inc
ds
lcall
mov
aam
inc
rcl
mov
jns
js
inc
cli
fistpll
xchg
lods
xchg
ljmp
xor
mov
fisttpl
pop
scas
push
add
fists
jo
loopne
xchg
pushl
aad
aaa
test
fadd
in
mov
test
push
daa
nop
and
incl
mov
pop
sahf
and
scas
inc
repnz
je
stos
shl
add
cwtl
cmp
sbb
incl
fisubrs
or
test
xchg
jmp
jno
sbb
cmp
and
pop
adc
mov
add
mov
push
ret
and
mov
pusha
or
mov
cltd
lcall
jp
das
mov
xor
mov
cld
shll
xchg
enter
ret
add
add
cli
sbb
bound
imul
push
mov
daa
out
inc
cli
and
fisubs
sbb
icebp
insl
out
xchg
dec
pop
call
lret
or
stos
cld
clc
sub
sbb
adc
pop
adc
xor
xor
imul
xchg
jne
pop
cmp
enter
or
xlat
gs
jno
inc
push
bnd
inc
push
imul
dec
adc
inc
adc
sbb
dec
in
mov
jl
inc
fsts
add
jae
xchg
lea
xor
add
jmp
stos
pop
adc
inc
rol
pushl
and
out
hlt
rcll
popf
xor
cld
add
test
ss
cmpsl
filds
sti
xchg
incl
xchg
out
inc
add
repnz
dec
movsb
pop
aad
cwtl
subb
sub
mov
movsb
ljmp
in
sahf
xchg
inc
xorl
subb
into
iret
jg
xor
jmp
push
mov
add
adc
xor
int3
and
push
int
jecxz
loopne
jmp
mov
inc
idivl
pop
ror
push
stc
push
je
cmpsb
call
mov
cli
cld
sub
incl
nop
sub
out
xor
nop
aam
addl
mov
push
cwtl
add
cmpsb
sbb
movsl
cmpsb
jo
dec
xor
popf
mov
xchg
or
insb
dec
mov
xchg
xchg
pop
scas
pop
inc
jns
incl
cltd
add
lret
fstl
jecxz
popa
bound
lcall
in
aam
mov
scas
add
mov
mov
or
stc
adc
jb
jae
incl
mov
rolb
xchg
push
mov
int3
mov
dec
out
shrl
call
and
fnstenv
test
inc
jg
aad
xchg
mov
out
imul
or
pop
push
jp
sub
push
cli
sub
xor
sbb
and
pop
shr
stos
lods
call
xchg
and
shl
ja
je
aas
pop
mov
aam
mov
inc
jnp
test
mov
gs
jle
mov
shlb
cld
pop
aam
pop
rorb
call
pop
mov
js
jno
inc
add
adc
xchg
and
lcall
dec
push
cs
sbb
sbb
shl
inc
dec
cmp
jno
addr16
fsubrs
fwait
pop
cli
mov
inc
mov
pop
call
outsb
mov
call
out
dec
loope
cmp
mov
xor
adc
mov
inc
inc
nop
std
sbb
push
dec
and
mov
rorl
ljmp
int
jmp
aas
vmovdqa
enter
push
pop
mov
pop
lods
jge
lahf
cwtl
inc
mov
jmp
nop
xor
sbb
movsb
mov
addr16
icebp
scas
insl
and
jns
decl
push
popa
bound
and
in
add
test
mov
out
jle
lcall
or
insb
push
cmp
pop
call
ret
inc
jns
inc
xor
fdivp
repz
fistl
call
lods
mov
mov
mov
dec
cmpsl
jl
outsl
sub
push
out
test
fwait
dec
movsb
mov
push
cmc
sbb
xlat
mov
mov
mov
mov
pop
or
adc
sbb
jmp
roll
out
fucom
movsl
add
dec
out
pushf
iret
ror
stos
inc
rcrl
add
stos
aad
decl
cld
call
lods
fidivrs
stos
stc
lret
sub
jne
mov
gs
fisubs
call
adc
movb
outsb
xchg
add
xchg
cmp
stc
int3
mov
sbb
stc
cltd
jne
incl
mov
in
pop
lods
lcall
push
push
hlt
negb
or
in
adc
inc
stos
lahf
or
repz
pop
addb
sbb
in
fndisi(8087
xor
negb
lcall
in
loop
fcompl
add
lea
and
cmc
and
dec
mov
call
cmpsb
es
dec
xor
sub
fisubrl
mov
hlt
inc
or
out
adc
add
decl
jle
inc
fists
or
add
enter
xchg
and
jg
and
mov
movsb
pop
inc
dec
sub
dec
xor
je
mov
sbb
xchg
dec
out
push
cmp
add
lcall
mull
lods
adc
fs
mov
adc
add
sti
jge
and
jmp
jb
or
cmpsl
cltd
xor
pop
in
repnz
les
lods
mov
jmp
adc
stos
jmp
pop
repnz
faddl
test
aas
iret
sub
dec
test
aam
mov
xlat
test
jmp
pop
inc
daa
repz
or
push
fildl
sub
sbb
push
mov
push
hlt
cmpsl
pop
loope
jmp
mov
es
jae
adc
or
ffree
xchg
inc
sub
mov
cmpsl
daa
adc
pushl
aaa
and
fwait
xchg
mov
xor
ret
pop
movsl
mov
pushl
xchg
mov
out
loop
loopne
cmpsl
push
inc
inc
ja
js
je
mov
ljmp
sbb
aaa
push
js
in
lods
add
aaa
loop
mov
sahf
push
insl
stc
in
pusha
add
call
sbb
xchg
in
in
xor
lea
stos
frstor
repz
lcall
mov
push
paddd
mov
jmp
pop
dec
mov
xor
push
inc
xor
incl
sbb
out
lcall
fisubl
test
idiv
lcall
push
jg
incl
shrl
sbb
jmp
sub
pop
lods
out
mov
call
sub
push
scas
test
xor
imul
lods
es
sub
dec
arpl
daa
pop
shrl
aas
jg
push
lret
mov
push
and
dec
push
adc
cmp
loop
push
lret
xchg
ljmp
xor
adc
mov
xchg
and
pop
xchg
lds
xchg
sahf
push
jo
jno
call
or
mov
gs
ds
adc
test
xchg
mov
js
jae
adc
mov
decl
loope
add
xchg
xlat
and
mov
push
movsb
sub
fmull
pop
pop
subl
cmc
xchg
addr16
adc
mov
cmp
jg
and
insb
xchg
lcall
xor
jns
rorl
insb
mov
test
push
mov
les
inc
xchg
mov
mov
lcall
push
lcall
ja
ljmp
leave
mov
aad
stc
imul
xlat
call
sbb
sub
xor
notb
adc
adc
sub
cmp
xchg
sub
push
fs
mov
push
adc
std
cmp
inc
adc
in
pushl
dec
in
inc
aas
xor
mov
mov
xor
xchg
lea
fistpll
dec
aam
and
clc
popf
mov
cwtl
imul
xlat
lock
imul
pop
sbb
scas
loopne
insb
jns
ja
pop
or
inc
call
decl
int
sub
xor
adc
push
lahf
mov
ljmp
pop
mov
hlt
pop
insb
ljmp
sahf
orb
jp
add
sub
pop
push
call
mov
add
lahf
andl
push
sbb
mov
decl
ljmp
popf
int3
imull
pop
xchg
lcall
fisubrl
adc
incl
add
mov
decl
xor
mov
jl
push
adc
sahf
inc
in
sub
jbe
xchg
out
xchg
or
cmp
call
test
call
inc
sarb
xchg
ja
jno
cwtl
popf
bound
sbb
jmp
cmpsl
xchg
dec
out
push
popf
stc
push
dec
xchg
mov
push
sbb
xchg
xor
pop
sub
movsl
mov
pop
stos
dec
sbb
hlt
pusha
mov
mov
mov
into
cmpb
cwtl
rorb
inc
aas
dec
cwtl
adc
lcall
mov
stos
jmp
test
out
inc
or
in
in
mov
cmp
xchg
sti
dec
daa
lods
sub
aas
adc
sub
mov
sbb
jl
nop
scas
mov
push
shl
inc
mov
inc
mov
sahf
shll
pop
ja
loope
aad
pop
imul
hlt
incl
repz
cmp
adc
push
mov
sub
jmp
lds
xchg
dec
loope
fbstp
mov
cmp
sub
mov
cltd
mov
ja
popf
ss
incl
mov
xor
cwtl
mov
inc
notl
shr
imul
push
push
fcomi
aas
mov
sbb
call
mov
push
lea
repz
mov
xchg
shrb
inc
incb
enter
shr
push
ja
push
push
inc
xor
xchg
fcompl
fwait
inc
in
loopne
jae
lcall
push
gs
xchg
pop
loopne
adc
and
lods
ret
xchg
mov
insb
call
nop
std
outsb
xor
sub
mov
lret
xchg
stos
jge
add
xchg
mov
out
clc
push
jmp
repz
mov
notb
outsl
aas
sbb
xor
test
sub
and
cmp
mov
aad
outsb
mov
out
call
imul
fwait
xor
lds
pop
fxch
call
add
popa
movsl
push
inc
mov
stc
inc
into
push
sti
add
inc
adc
lcall
lret
cmpsb
sub
shll
xchg
mov
int
enter
xchg
mov
jmp
daa
push
push
in
mov
lock
stc
push
out
loop
lret
addb
insl
pop
add
je
jmp
and
pop
es
negl
mov
inc
leave
jbe
fisubrs
mov
test
adc
push
xor
incl
or
dec
mov
les
inc
and
inc
push
or
hlt
test
ljmp
mov
sbb
subl
lds
test
in
loope
adc
icebp
incl
addr16
hlt
aam
scas
fs
imul
lcall
movsb
aas
test
or
sarb
xor
xor
fnstenv
jb
icebp
jmp
mov
push
adc
and
aad
lods
push
jo
in
xor
jp
add
enter
push
jmp
ljmp
push
notb
fwait
push
adc
icebp
lcall
or
bound
jmp
int3
xchg
fcoms
push
jno
mov
insl
cmp
insb
sub
test
jmp
and
cmp
push
xchg
loope
cmp
test
sub
enter
xchg
cli
jmp
popf
loope
insb
jno
cmpsl
mov
test
xchg
inc
inc
iret
call
enter
dec
loopne
stos
imul
jo
sbb
add
scas
fidivrs
adc
sbb
sub
scas
fdivs
sbb
dec
div
xor
stos
adc
jns
clc
gs
jmp
pop
add
dec
test
cmc
xchg
pusha
or
mov
push
jne
incb
gs
pop
faddl
pushl
in
push
jnp
outsl
rcrb
int
add
push
mov
pminsw
lcall
push
jmp
sub
mov
jle
lret
mov
pop
jb
into
sbb
incl
or
shr
imul
dec
cmp
xchg
iret
out
inc
mov
inc
sbb
mov
in
mov
sub
cld
in
lods
sbb
imul
sub
mov
mov
lcall
pop
mov
jl
fs
cmpl
test
fcomps
outsl
movsl
out
dec
outsl
lahf
cmp
sub
sti
cli
shll
adc
popa
decl
cmpsb
xchg
xor
lret
mov
or
pop
decl
pushl
sub
hlt
rcrl
xchg
pop
fcos
imul
mov
mov
sub
dec
fidivl
cmp
stc
jno
jge
into
cmp
fwait
rcll
or
dec
daa
aad
gs
dec
inc
outsl
imul
incl
lcall
pop
mov
lahf
in
jo
stos
cld
sub
sbb
sbb
mov
lahf
int
pop
sub
incl
test
ja
aaa
inc
rcrb
cmpl
jns
fsubl
jae
jge
call
inc
insb
push
enter
stos
mov
mov
xchg
mov
test
iret
popa
sub
pushl
iret
push
pop
and
xor
inc
jns
arpl
je
aas
call
mov
repnz
xor
and
jns
movsb
in
jmp
jo
xor
bt
lcall
mov
std
dec
in
jne
nop
mov
or
xor
inc
sbb
popa
out
inc
test
push
inc
ja
fsubl
bound
movsl
or
enter
into
push
mov
decl
jns
mov
les
aam
lret
sbb
and
pop
jmp
clc
hlt
adc
mov
sub
sti
ret
pushf
nop
out
xchg
stos
fs
push
andb
push
pushl
or
jbe
ret
dec
jge
aas
out
icebp
inc
add
and
or
jg
out
sub
test
insb
inc
outsb
push
mov
pop
mov
inc
aaa
mov
jle
lret
sbbb
icebp
sbb
sub
in
xchg
cmp
pop
jp
pushl
adc
ficompl
adc
popa
bound
jmp
pop
popf
int
and
ljmp
ja
and
cmp
and
std
xorl
movl
scas
dec
lods
js
sbb
mov
xor
test
ljmp
stos
lahf
leave
adc
movsl
in
pushl
or
loopne
mov
adc
call
cmp
insl
adc
clc
decl
cltd
adc
inc
adc
das
mov
pop
ret
imul
sbbb
call
push
cs
stos
push
daa
in
jbe
inc
jg
sub
scas
mov
fisttpl
xchg
sbb
call
repnz
sub
jo
sbb
pop
bound
stc
shl
ficoms
aam
fcmovnbe
jg
or
data16
sbb
xchg
or
cmp
enter
loopne
nop
in
sub
mov
adc
dec
push
arpl
ljmp
add
dec
jne
ljmp
jge
fistps
clc
xor
rcll
fbstp
mov
jge
mov
jns
js
in
addr16
fdivrl
icebp
dec
arpl
sub
pop
jo
or
decb
push
mov
adc
mov
aam
movsb
add
cld
scas
jns
out
loope
push
pop
ss
fs
ljmp
stos
shl
sub
gs
out
loop
div
test
xor
dec
or
pop
mov
mov
sub
xor
pop
dec
and
mov
fldl
dec
jl
push
mov
call
push
sbb
stc
pop
sti
outsl
add
dec
and
fwait
adc
add
mov
fstpt
cwtl
pop
jl
mov
jmp
ljmp
stos
or
mov
test
popa
fmull
cmp
imul
add
xchg
ss
pop
js
xchg
fdivl
shl
sbb
inc
adc
lcall
div
jmp
lods
xor
lret
cmp
xor
jle
and
mov
iret
mov
decl
aam
jmp
push
xchg
psrld
add
out
xchg
push
cli
push
pop
xchg
outsl
pop
jg
dec
adc
add
push
and
fs
and
cld
or
pop
cmpsl
or
inc
xor
aam
decl
js
jb
and
test
js
inc
adc
dec
add
das
ljmp
xchg
stos
imul
jl
fldln2
bound
lret
xchg
jle
sub
jo
xor
mov
decl
cmp
jle
shlb
shlb
rcr
cwtl
sub
push
cmpsb
jmp
rcll
cwtl
in
lea
int
inc
mov
cltd
sarb
inc
add
decl
lahf
pop
xchg
push
das
dec
mov
cmpsl
movsl
mov
fistps
mov
pop
pop
lds
decl
lds
fisubl
sbb
mov
outsb
sbb
mov
scas
loopne
pop
sub
push
iret
cmp
incl
mov
mov
cs
dec
ljmp
inc
mov
dec
xor
pushf
or
call
repnz
mov
dec
mov
push
rcl
pop
fs
enter
dec
xor
cmp
cld
jmp
xchg
dec
push
scas
add
ja
js
mov
inc
mov
jmp
lock
pop
dec
test
and
cmc
scas
lcall
sbb
rcll
fmulp
adc
in
rolb
arpl
mov
in
fidivrs
xchg
jg
lea
jo
cld
add
lods
cmp
movsl
sbb
sahf
decl
and
jo
push
test
dec
cmp
lock
mov
in
xchg
outsb
bound
inc
push
sub
aas
jb
hlt
mov
rcrl
ss
xchg
jae
movsb
jmp
add
sbb
inc
repnz
fmulp
outsb
mov
mov
pop
test
sbb
jns
outsl
aaa
pop
jmp
pusha
push
inc
out
mov
rcrb
jge
xchg
repz
or
inc
mov
mov
cmp
mov
mov
ljmp
sub
aaa
mov
sti
aas
fisttpll
sahf
push
out
mov
dec
fdivrp
decl
arpl
cltd
pop
or
jl
call
adc
mov
inc
and
in
push
pop
and
fistpl
sbb
test
data16
call
add
iret
sbb
hlt
dec
cmp
fwait
adc
mov
jmp
test
std
frstor
shl
aad
lock
inc
mov
inc
lds
xchg
js
arpl
and
daa
in
stos
iret
ds
daa
popa
ret
les
sahf
jae
adc
sbb
test
in
dec
dec
cmpsl
cmp
popf
push
and
aas
xchg
repz
roll
jmp
jle
or
insl
mov
divl
inc
pop
pop
fwait
scas
push
lcall
mov
sub
mov
jge
sarb
xchg
repz
call
fwait
dec
pop
jge
outsb
mov
cmpsl
cmp
aas
xchg
lahf
push
testl
or
ds
and
cmp
out
push
cs
int3
es
lret
seto
in
jb,pt
outsb
sbb
outsb
inc
insl
lds
std
incl
push
mov
xchg
repnz
pop
fwait
cltd
into
jp
ljmp
mov
sbb
and
decl
mov
inc
repnz
mov
addr16
stos
neg
test
jecxz
push
mov
jmp
int
jle
or
mov
cltd
xor
lcall
sbb
mov
fstpl
test
repnz
push
xchg
xchg
sti
movsl
xchg
cmp
xchg
sbb
inc
sbb
sysexit
push
xchg
pop
jne
incl
in
cmpb
stos
add
stos
repnz
insb
sub
mov
popa
cmp
lcall
lcall
imul
in
xchg
aad
repz
out
and
pushl
mov
inc
shll
mov
mov
cmpsl
inc
xor
xchg
jge
jmp
incl
repz
cmpsb
fldcw
jp
movb
sarl
decl
push
out
outsb
sar
and
adc
cmp
rorl
std
call
dec
sbb
cmp
cmp
repz
movsl
dec
sbb
dec
lret
inc
das
lcall
fwait
and
inc
xor
icebp
or
enter
cmp
ja
jo
xor
dec
dec
dec
jl
dec
mov
inc
mov
pop
enter
stc
sbb
xchg
dec
inc
enter
jge
incl
cld
add
and
dec
or
bound
dec
cmp
and
lcall
and
pushl
jg
jnp
je
inc
ja
in
pop
ljmp
mov
xchg
dec
shrb
ss
insb
inc
movsb
push
pop
push
aas
dec
das
xor
pop
xchg
mov
push
call
in
fcmovne
cmp
push
jb
js
inc
xchg
mov
mov
mov
mov
in
iret
cwtl
add
decl
popa
repnz
test
sub
in
int
pusha
mov
cmp
bswap
incl
xchg
mov
inc
jmp
inc
imul
rclb
xchg
sar
daa
stos
push
dec
push
jl
movsb
ss
fdivrs
cmp
pop
inc
push
and
ljmp
push
sub
scas
enter
mov
pop
add
scas
lcall
es
incl
or
xchg
ss
idivb
pop
mov
push
orb
inc
sbb
popa
aas
mov
enter
aad
movsb
push
cmp
lods
test
and
stos
jnp
in
idiv
jmp
dec
dec
inc
push
adc
sbbl
jecxz
sbb
movsl
stos
jbe
out
mov
lds
outsl
decl
ss
inc
push
lcall
lcall
adc
arpl
enter
stos
xchg
das
aas
fnstsw
mov
jmp
in
push
xchg
enter
cmp
jle
xor
mov
out
mov
addl
cmp
cmp
icebp
fcmovnu
out
mov
fiaddl
xlat
fwait
lahf
repz
pop
pop
push
jg
decl
sahf
jne
seta
sbbl
call
imul
adc
dec
outsb
push
xchg
das
ficompl
sub
xor
sbb
sbb
push
dec
call
repz
xchg
sbb
icebp
cmp
call
inc
arpl
cmpsb
xchg
ljmp
decl
data16
inc
jo
inc
xlat
or
call
sarl
xchg
jge
movsb
scas
movsb
add
jge
imul
sbb
aam
out
lea
ret
jns
push
and
aas
mov
lgs
rcrl
sbb
enter
jecxz
out
mov
clc
add
iret
or
fistpl
mov
push
out
test
jge
push
sbb
hlt
lcall
inc
mov
sbb
mov
movsl
aas
loopne
jmp
mov
sbb
pop
subb
cmp
push
das
inc
in
mov
lcall
xchg
mov
in
cwtl
outsb
imul
push
xor
lea
ljmp
push
dec
pop
repnz
pop
addr16
push
xlat
jl
cwtl
out
or
mov
call
cmp
or
ja
jp
pop
inc
loope
mov
or
lcall
pushf
inc
jecxz
lods
mov
cmc
adc
enter
cmpsb
mov
pop
dec
xchg
popf
push
fiaddl
lods
addl
dec
imul
push
stos
mov
call
xlat
adc
outsl
les
and
sahf
rol
jp
decl
mov
jle
mov
subb
loop
outsb
mov
xlat
dec
mov
js
aam
decl
push
xor
add
sbb
mov
call
add
mov
fisubrl
jnp
test
mov
outsl
xchg
out
push
out
jg
cpuid
cmp
ds
add
mov
xor
in
cmp
call
lret
out
xchg
in
dec
repz
decl
mov
xorb
push
ljmp
xor
ja
sub
push
mov
pushf
or
bound
decl
xchg
pop
mov
lret
repz
add
loopnew
outsl
or
scas
fisttpl
stc
and
call
sub
jns
mov
std
sub
out
fwait
lahf
imul
sub
add
stc
test
xchg
mov
xlat
jmp
jnp
pop
mov
sbb
test
sbb
jl
jmp
dec
jo
add
adc
stos
mov
pop
push
cltd
lret
inc
cmp
ja
xchg
pop
ret
call
in
das
jge
push
aam
cmp
jl
xchg
mov
ljmp
hlt
xor
and
sub
jae
imul
fisttpl
xchg
add
jmp
xchg
mov
xor
aaa
outsb
push
jmp
leave
sbb
sbb
and
sahf
in
dec
aad
ljmp
ljmp
jmp
adc
aaa
pushf
ja
lds
addb
lock
pop
mov
dec
lea
fnstenv
inc
daa
jne
jle
and
push
xor
cwtl
jbe
sub
in
in
cmp
xlat
ss
jmp
adc
bound
lcall
inc
test
inc
scas
ud0
incl
popf
xchg
cld
xorl
aad
repnz
jecxz
lock
testb
ljmp
pop
ja
stc
mov
xchg
xor
cwtl
dec
mov
enter
xor
and
loop
ljmp
mov
xchg
mov
pop
mov
lods
xchg
sbb
mov
pushl
fcmovb
leave
mov
adc
xchg
mov
mov
and
fisttpl
pusha
rolb
ljmp
mov
xor
scas
or
push
jmp
sbb
out
and
mov
loopne
leave
and
mov
add
fidivrs
push
mov
movsb
jg
sbb
xor
adc
shlb
add
dec
fcom
icebp
decl
test
jmp
int
ret
push
sub
dec
dec
cmp
cli
inc
fisubl
movsl
mov
fwait
lock
outsl
jle
xor
aaa
aad
mov
data16
test
sti
dec
xchg
or
or
ljmp
lcall
sbbb
hlt
mov
push
jnp
inc
jno
into
js
das
push
dec
xchg
loope
in
push
pusha
dec
inc
negb
lds
and
jno
pop
pop
sub
or
cmp
in
cwtl
test
dec
lahf
mov
mov
aad
inc
push
cmp
dec
shll
imul
cwtl
ret
scas
mov
test
jmp
xchg
push
roll
mov
out
repz
jnp
cmp
fisubrl
pushl
fs
jg
popf
test
test
push
popa
hlt
pop
add
adc
loopne
mov
ljmp
repnz
sti
xchg
ret
xchg
pushf
dec
mov
jmp
sbb
popl
scas
mov
push
sbb
jle
pop
jg
ljmp
stc
pop
pushf
jne
cmp
ret
pushf
pop
inc
rorl
mov
and
mov
jmp
fbld
sbb
sbb
fnstcw
xor
inc
cmp
imul
mov
mov
xchg
fnsave
jmp
pop
push
movsb
sub
cmpsl
js
subl
cltd
inc
xchg
mov
js
add
mov
ja
sbb
adc
add
xchg
popf
push
push
pop
gs
cs
push
insb
fs
lcall
dec
je
push
lret
into
pop
lahf
stos
scas
ud0
decl
jne
js
stos
mov
pop
inc
xchg
lea
add
loopne
decl
mov
dec
xchg
fdivrs
dec
add
mov
inc
insb
mov
fwait
cs
call
inc
out
jp
mov
cmp
aas
and
sbb
es
dec
sub
incl
dec
mov
cltd
sbb
fstpl
sub
adc
push
lret
arpl
into
and
loopne
fcompp
lea
lahf
and
jg
fstl
pop
adc
xchg
jp
cltd
js
ret
cltd
xlat
call
mov
push
inc
dec
jno
sbb
out
jae
inc
iret
call
mov
sub
divb
lret
idivl
data16
xor
enter
lcall
sbb
sub
ljmp
jo
sub
adc
sbb
cmp
push
fistps
out
decb
jnp
test
fcmovnu
adc
clc
fsubrp
push
jg
fwait
jl
incl
cltd
push
sub
ficomps
pusha
or
jle
sbbb
cmpsl
mov
inc
mov
mov
jo
dec
loop
push
xchg
inc
rcr
push
mov
jbe
mov
jne
incl
add
xor
imul
call
xchg
cmp
xchg
dec
clc
xchg
negb
inc
xor
es
insb
repnz
mov
insl
mov
inc
or
enter
cwtl
pop
imul
push
adc
push
xor
xorb
cmp
dec
xchg
push
xchg
icebp
ret
mov
inc
push
fcmovb
inc
push
dec
cmpsb
lcall
fldenv
and
mov
mov
or
dec
mov
pushl
lahf
lods
jae
lock
cmp
dec
xor
and
mov
int3
pop
sti
or
incl
sahf
jae
popf
jns
adc
sub
dec
repnz
adc
jb
test
xor
lods
mov
insl
and
call
pusha
shlb
dec
insl
mov
ja
push
adc
jle
and
pop
mov
ret
jmp
xchg
jl
cwtl
inc
popa
aaa
cmp
fwait
ret
xchg
test
inc
add
cmp
call
ret
loopne
test
add
dec
lock
imul
hlt
fwait
stos
and
pop
lret
cmp
dec
jge
jl
ljmp
cmp
sbb
push
es
mov
add
leave
jbe
xchg
lea
popf
pop
jae
push
addb
inc
push
push
jge
jae
mov
jne
pavgw
stos
cmpsl
fsts
data16
adc
jl
mov
mov
dec
cmp
lret
test
push
dec
jb
sbb
mov
sbb
incl
out
xchg
lods
inc
xorl
jae
jno
xchg
dec
sbb
dec
cmp
lcall
sbb
int3
push
xor
pop
lods
cmp
pusha
dec
mov
data16
fstps
lahf
inc
add
push
fwait
or
sbb
jg
inc
loop
dec
daa
adc
aas
jmp
adc
mov
xor
mov
rol
out
call
and
pop
cmp
fmuls
das
cmp
add
filds
xor
jnp
loop
mov
push
mov
add
imul
sbb
jnp
jb
pop
mov
jmp
bound
fstps
leave
sbb
cmp
add
sub
push
shll
in
or
into
decl
adc
bswap
push
sub
and
or
inc
andl
inc
mov
xlat
push
push
cmc
icebp
addr16
sub
sub
pushl
lods
xor
loop
xlat
or
sbb
stos
or
jmp
int
jns
enter
es
jmp
lock
jno
lret
cmp
pushw
data16
jecxz
pop
fmuls
inc
jmp
add
lret
jo
cli
mov
loop
incl
dec
ds
mov
stc
cmp
out
and
xor
popa
stos
outsl
stos
adc
push
lret
inc
shll
add
into
fs
leave
ds
and
mov
and
test
pushl
dec
je
nop
xchg
sbb
sub
add
shlb
rcrb
and
mov
jmp
adc
mov
shll
div
or
out
mov
jg
pusha
push
mov
sub
cmpsl
adc
xorl
fs
and
xchg
lods
inc
jmp
rorl
cmpsb
xor
xor
pop
xorb
scas
pusha
xchg
mov
cs
arpl
jmp
fnsave
shlb
mov
sub
jmp
cmc
adc
das
jecxz
call
add
aas
stos
xor
sbb
jnp,pn
pop
adc
iret
hlt
cs
mov
mov
xlat
leave
xchg
ljmp
jbe
sbb
adc
adc
sti
and
or
cmp
aad
cmc
adc
decl
out
jne
dec
sbb
cld
cmp
mov
call
jns
sub
jmp
mov
divb
pop
or
mov
ja
in
scas
cli
mov
out
outsb
add
inc
out
fdivrs
jns
andl
js
cmp
aam
clc
dec
mov
and
shlb
mov
decl
cli
mov
jns
add
mov
pop
xchg
fadds
daa
and
lahf
imull
mov
sarl
nop
and
cmp
xorl
add
in
add
and
or
mov
fnsave
leave
jg
inc
pop
jbe
test
outsl
or
and
mov
sbb
push
adc
hlt
push
pushf
aam
sbb
incl
ljmp
les
push
pop
rcll
out
int3
ljmp
cld
in
push
mov
in
filds
in
mov
fsubrl
fldl
jnp
ret
dec
fsubp
ror
add
fwait
testl
lcall
dec
fxch
pushl
mov
jnp
add
cmp
addl
clc
scas
ud0
lcall
subl
in
mov
sub
sbb
and
loope
push
call
test
sbb
cld
popl
cmp
sti
sbb
bound
js
stos
push
addr16
sub
sti
lahf
cmp
mov
cwtl
xchg
inc
push
add
pop
add
pop
loope
aam
incl
lods
inc
shll
or
out
aaa
jb
xchg
addr16
sbb
and
jmp
mov
out
push
outsl
jnp
push
mov
cmp
call
xor
cmpsl
jl
jns
test
aad
decl
insl
je
inc
cmp
add
jge
std
sub
push
clc
test
pop
xor
jmp
xor
xor
popf
adc
mov
inc
ja
jbe
sbb
cmp
sub
sbb
xor
adc
test
jmp
int3
hlt
cld
xchg
pop
divl
jne
adc
sbbl
dec
in
loopne
roll
jp
testl
fld
scas
fs
int
mov
arpl
cmp
cmp
pop
scas
xchg
pushl
mov
andl
jecxz
jmp
out
push
jmp
jns
fcoms
inc
test
imul
loope
dec
xor
push
call
rsm
lods
jle
and
inc
rcrl
dec
out
aad
call
cs
into
mov
int3
adc
mov
xlat
leave
hlt
inc
jecxz
jle
je
push
aam
loopne
pop
push
decl
jno
in
push
xchg
add
add
in
cmpsl
push
lds
adc
and
inc
pop
loope
cmc
decl
popa
jp
xor
clc
shll
fxch
pop
rcll
inc
mov
mov
outsl
movsb
fcmovnu
repnz
incl
cmp
xchg
outsb
mov
cmpsl
inc
lods
pop
add
mov
mov
fsts
lcall
arpl
xorb
sar
dec
cmp
call
mov
leave
push
xchg
mov
push
ljmp
int
add
cmp
jmp
mov
jno
ds
dec
mov
or
dec
and
fildll
and
cmp
stos
jbe
sbb
add
jne
dec
dec
xor
shll
sahf
cmpsb
incl
and
push
dec
scas
xchg
popf
cli
xor
adc
xor
clc
lret
lcall
pop
adc
shlb
adc
int
push
sbb
cwtl
icebp
repnz
jg
jmp
dec
adc
lods
and
stos
leave
pop
outsl
jl
push
inc
or
call
sbb
jp
or
andl
xchg
xchg
push
inc
cmp
bnd
jecxz
mov
iret
cmp
aam
fistps
aas
xor
sbb
out
mov
scas
fsubrs
loopne
sti
and
call
xor
fwait
inc
dec
stos
scas
movsb
shl
dec
pop
cmp
aad
adc
mov
dec
aaa
mov
fwait
out
jmp
dec
cli
imul
fiadds
fists
cs
aad
aam
and
decl
pop
int3
adc
inc
mov
daa
xor
psubusb
mov
mov
jo
sub
lcall
add
or
stos
xchg
mov
jp
jae
pop
inc
push
inc
push
pop
fwait
inc
xchg
lcall
mov
les
pop
out
or
cmc
dec
push
or
fbld
mov
push
lock
seto
lcall
insb
add
sub
or
pop
mov
les
in
push
test
lcall
rcll
les
xor
push
or
dec
addr16
pushf
rclb
call
inc
popf
das
mov
test
mov
pop
push
pop
pop
pop
cs
in
outsl
mov
mov
incl
sub
hlt
push
pop
inc
jg
push
data16
jp
jp
call
sbb
decl
arpl
es
cmpl
ret
jo
pop
and
in
jb
sar
incl
cmc
sub
push
imul
adc
das
mov
insl
fisttpl
movsb
push
out
call
mov
dec
ret
jnp
adc
ret
cld
and
frstor
testb
lcall
mov
lcall
popa
addb
je
fsubl
add
fists
dec
test
jae
adc
decl
test
ret
loop
test
popf
dec
in
adc
add
cmp
dec
lcall
dec
cmp
add
jo
push
fnstsw
push
aaa
mov
or
jge
sahf
lcall
int3
mov
je
subl
test
fldenv
push
jno
fsubs
sbb
decl
and
sbb
outsb
ds
loopne
jb
pop
decl
sarl
xchg
or
aad
imul
and
xchg
inc
push
decl
and
mov
xor
out
cmp
mov
xchg
popf
jmp
stos
icebp
and
decl
stos
insb
pop
aas
pop
scas
dec
adc
jl
cmp
cld
sti
xchg
sbb
add
int
xor
cli
lret
stos
mov
int3
push
sti
push
pushf
es
movb
mov
adc
mov
jmp
cld
inc
fdivrs
jne
sub
mov
sarb
call
jge
insl
pushl
jo
push
leave
je
mov
and
sub
sub
scas
push
push
outsl
push
sahf
push
dec
test
pop
out
insb
push
dec
scas
shrb
sub
and
in
mov
sub
rorb
pop
mov
in
dec
je
sbb
or
add
gs
ljmp
or
pop
fsubrs
inc
mov
fld
dec
in
cmp
or
lods
test
ljmp
mov
adc
fwait
lahf
push
inc
pop
and
inc
mov
je
fnstsw
lcall
jmp
test
mov
xchg
ds
sub
lea
jb
push
xchg
aas
mov
xor
lahf
cltd
xchg
leave
stos
xor
jg
cs
adc
inc
lods
icebp
push
jmp
imul
cmp
xchg
xor
rclb
xchg
pushf
ja
sbb
test
test
push
mov
cmpl
test
jmp
sbb
pop
cmp
lea
enter
cmp
rcll
cli
out
sbb
xchg
aam
in
insl
mov
call
cmpsl
out
jg
es
leave
adc
icebp
mov
pop
dec
ret
lods
pop
add
mov
add
mov
call
into
xchg
jbe
adc
mov
fistpll
add
fists
push
incl
fwait
inc
or
mov
sti
mov
jp
fiaddl
mov
mov
sarl
adc
mov
sub
icebp
ja
cmc
inc
pop
mov
push
ljmp
ljmp
sub
lods
aad
cmp
fpatan
mov
dec
xor
jle
ljmp
cmp
xchg
and
popa
adc
push
adc
popa
int3
les
movsl
aam
fidivrl
fdivrp
jmp
jp
imul
mov
jle
es
xchg
and
adc
jbe
daa
nop
decl
pop
mov
ror
pushw
test
loope
mov
f2xm1
es
lcall
out
out
jno
data16
sub
test
sarl
xor
ffreep
mov
ljmp
fwait
jnp
inc
nop
cmp
xchg
mov
and
stos
mov
lcall
int3
mov
pushf
or
jmp
pop
mov
mov
mov
addr16
and
jbe
loope
xlat
pop
dec
addr16
call
fs
sbb
inc
out
mulb
mov
or
gs
pop
imul
push
test
pusha
pop
mov
fstpl
insl
mov
pop
push
std
dec
in
mov
shl
jmp
or
fcoml
mov
decl
sbb
dec
cwtl
or
push
inc
mov
aaa
test
push
mov
in
incl
jno
shr
jnp
cmc
testl
out
mov
mov
repz
pop
test
decl
inc
mov
fmull
in
sbb
jbe
enter
ss
iret
in
xchg
sar
lcall
pop
adc
or
not
rcl
inc
sti
or
adc
dec
arpl
or
jle
decl
in
or
add
out
push
push
loop
repnz
fidivrs
jle
mov
pop
jle
mov
ret
test
test
and
pushaw
add
ljmp
or
das
xor
mov
iret
cltd
add
fadds
rcr
mov
adc
sti
stos
lcall
icebp
icebp
cwtl
dec
jns
mov
popf
aad
pop
loopne
sub
or
sub
incl
pop
sub
sbb
xchg
loope
into
push
xchg
sbb
imul
and
dec
cltd
inc
movb
ss
push
pop
out
popf
ret
ja
dec
xorb
incl
in
mov
inc
stc
mov
icebp
sahf
push
inc
lock
fs
sbb
jae
mov
insb
mov
ud0
call
out
sbb
test
add
add
and
cmc
cli
add
in
ljmp
push
and
andl
sti
sbb
fstpt
mov
adc
andb
cli
inc
arpl
ret
imul
push
cli
mov
mov
inc
ffreep
outsl
in
in
mov
jge
add
sub
inc
data16
xchg
mov
sahf
push
sbb
nop
xchg
mov
inc
ds
pushl
fisubrl
in
fisubl
jl
dec
popf
lea
fwait
loopne
or
cwtl
xor
dec
test
call
lea
inc
xchg
jecxz
jno
or
mov
mov
je
jmp
or
adc
jmp
scas
pop
fld
mov
lods
fwait
xchg
jge
fs
sbb
pop
push
incl
jge
cmp
rcrl
cltd
sub
push
inc
imul
cmp
clc
add
ficompl
sbb
es
mov
push
xorl
push
sahf
jg
jge
lret
dec
lahf
int3
push
push
sbb
dec
xor
sub
jb
icebp
xchg
xchg
mov
out
clc
jge
xchg
loop
mov
push
push
decl
sbb
inc
push
xchg
xlat
jo
dec
std
into
cmp
in
outsb
push
stos
mov
dec
clc
or
shlb
pop
dec
lea
cmp
pop
stos
push
adc
sbb
mov
cvtps2pi
and
xor
mov
dec
xlat
and
fnsave
andb
gs
rolb
xor
xor
dec
fldcw
shll
fxch
or
and
sub
decl
arpl
dec
adc
sub
test
fwait
movl
outsb
in
rcr
and
out
pop
loopne
cmp
xor
lock
scas
jg
cs
jmp
adc
push
or
data16
stos
test
pop
dec
push
sbb
idivl
push
cmpsl
imul
and
mov
dec
ja
in
or
pop
or
pop
in
jmp
jae
and
push
in
cmp
loopne
push
mov
mov
pop
mov
cmp
call
cltd
cmpsb
pop
jae
fs
pop
test
imul
mov
inc
gs
jne
xchg
in
stc
mov
xlat
mov
ljmp
mov
int
mov
xor
pushl
inc
out
cmp
add
leave
sbb
pop
popf
fsubl
mov
mov
shlb
jmp
push
adc
sahf
aas
push
test
adc
cmpsb
sbb
mov
jl
push
inc
lret
sti
mov
adc
xorl
sbb
push
fistl
xchg
inc
xchg
lcall
mov
push
lret
add
mov
pop
xchg
mov
lcall
mov
cwtl
sub
std
js
ja
xor
aaa
pop
pop
jl
dec
pop
aaa
hlt
cld
call
jae
sbb
cmp
sbb
inc
lock
andb
arpl
adc
call
fiaddl
pop
andl
push
out
push
mov
push
inc
or
in
adc
push
and
call
or
lahf
jne
mov
adc
dec
cwtl
arpl
cld
aas
mov
lea
lds
data16
dec
scas
out
jo
fwait
call
aad
je
mov
sarl
mov
pushf
test
inc
orb
jbe
mov
lcall
sub
clc
push
int
stc
std
std
adc
and
mov
sbb
mov
dec
dec
xchg
push
and
sub
or
les
js
sub
jmp
xchg
bound
xchg
leave
cmp
pop
sub
mov
aaa
sub
jmp
loopne
xchg
xchg
sbb
std
push
arpl
adc
popf
mov
xor
cmp
jmp
or
lcall
stos
and
sahf
xchg
xor
jp
adc
loop
insb
sbb
imul
test
push
cmp
lcall
cmp
xor
stos
rcrb
mov
aas
dec
add
push
fldenv
cs
clc
int
mov
and
lcall
mov
in
mov
add
or
lcall
jnp
and
pop
sbb
pop
push
arpl
xchg
push
fsubr
out
jb
dec
pop
hlt
ljmp
or
or
jmp
loop
jge
jge
pushf
daa
test
mov
lcall
aad
icebp
jae
mov
adc
push
push
dec
pop
fs
sbb
lods
push
je
test
incl
hlt
mov
fwait
or
pop
mov
xchg
inc
push
pop
push
aam
ret
popa
pushl
rorb
aaa
push
mov
insb
jbe
inc
sub
sub
push
pop
inc
inc
add
add
jno
or
inc
dec
cmpsl
stos
mov
or
xchg
das
push
pop
outsl
lcall
scas
lea
dec
pushf
aaa
lea
sti
in
and
out
push
jmp
fwait
inc
ljmp
in
dec
pushf
sub
adc
mov
adc
pop
mov
jae
mov
lcall
or
pop
push
pop
lods
and
rcll
pushf
loopne
iret
add
insl
add
dec
clc
call
and
cmp
movsb
in
lahf
orl
nop
pop
xor
mov
ljmp
jge
cld
adc
xchg
insb
push
test
lods
dec
mov
dec
fists
mov
idiv
fsubrs
loopne
and
xchg
movsb
or
subl
sbb
shl
pop
dec
loopne
jmp
out
mov
sub
test
lods
movsl
std
shl
stc
shll
dec
mov
cmp
into
nop
push
aas
iret
in
jne
fs
scas
call
aaa
cvtpi2ps
and
cmc
loop
or
jge
jg
sbb
sbb
sub
decl
out
mov
xlat
jmp
push
xchg
mov
cmp
pop
mov
and
sub
pushl
insl
dec
mov
jge
cmc
ss
js
scas
nop
movsb
pop
into
cltd
adc
inc
stos
xchg
xchg
mov
pushl
mov
movsl
jo
nop
cmpsl
cli
lea
test
jp
ljmp
jmp
adc
dec
ror
jo
out
inc
lods
lock
sub
and
ret
in
jo
out
xchg
or
ljmp
test
xchg
lahf
insw
out
fldt
fninit
call
ss
rorb
add
or
ds
cwtl
je
fs
lcall
das
jle
inc
mov
pop
or
aam
ud0
jg
mov
fisubrs
iret
dec
sbb
inc
lea
pop
scas
add
cmp
push
call
cmp
mov
movsb
les
and
jne
lcall
lcall
into
addb
and
loope
rcll
add
inc
push
outsl
add
aad
clc
inc
idivl
cmp
incl
cmp
dec
or
lcall
imulb
bts
sbb
test
cmp
sti
sub
dec
lock
lcall
loopne
mov
mov
add
in
daa
test
sub
mov
add
push
dec
icebp
ljmp
clc
in
push
jno
jnp,pt
inc
add
js
add
call
inc
stos
jg
adc
ret
inc
xlat
mov
add
incl
ss
fs
fcompl
shrl
fmull
xor
sub
sbb
add
cmp
ret
jb
adc
cmp
cs
xchg
cwtl
in
jmp
cmpsb
sahf
dec
rcrb
js
inc
ja
pop
adc
popf
xchg
bound
popa
divb
outsl
ljmp
lcall
push
mov
outsb
mov
mov
stc
pop
lret
pop
mov
lret
xchg
xchg
mov
lcall
aam
scas
sbb
sbb
test
mov
fildll
cmpb
jp
pop
outsb
cmp
jmp
sahf
fistpl
inc
jge
aas
shll
xchg
sub
cwtl
push
mov
decl
cli
out
or
in
dec
inc
mov
or
inc
movl
cmpsl
loopne
fcos
clc
jmp
test
rorb
inc
push
lods
jo
and
cmpsb
pop
shlb
cmp
xor
lret
fldcw
mov
mov
mov
cltd
dec
jb
xor
ss
dec
fdivrs
or
mov
stc
sysexit
jns
shlb
push
cli
jle
cmc
pop
push
cmc
jmp
dec
les
sub
jp
sti
movsb
cld
jl
sbb
in
pop
add
push
or
mov
ljmp
call
cmc
cli
cmc
cmp
and
ljmp
jp
push
aad
jecxz
dec
and
incl
movsl
xchg
or
push
jnp
mov
jg
jo,pt
js
jns
stos
iret
dec
ljmp
sub
sbb
push
jne
mov
cmpsb
shrl
adc
xchg
and
out
dec
imul
inc
jnp
cs
mov
mov
adcl
jle
push
adc
das
in
mov
cmp
dec
jo
sub
sbb
fwait
lock
cmpsb
lcall
mov
adc
cmpsb
mov
cmp
and
cmpsb
lds
dec
inc
ljmp
call
sbb
sbb
jbe
sub
iret
in
hlt
cmc
mov
js
cmp
mov
das
inc
xor
icebp
add
push
sbb
js
mov
and
or
rcl
mov
call
idivl
lods
loop
data16
pop
add
mov
ror
push
popf
loop
sti
jmp
mov
pushl
subb
and
ja
ja
test
mov
cmpsb
sbb
scas
mov
jmp
and
rcrl
hlt
sbb
loopne
pop
mov
push
icebp
mov
decl
mov
push
fucomip
lea
sub
stos
inc
inc
aam
xchg
outsb
cmp
pushf
push
call
dec
faddl
push
popl
js
fisttpl
scas
mov
xchg
and
jmp
enter
popf
xchg
inc
adc
inc
pop
mov
lods
bound
popa
incl
inc
dec
outsl
push
ret
outsl
cmpsl
pop
sahf
ret
in
mov
sti
jae
push
pop
inc
xchg
push
outsb
jne
call
orl
cmp
dec
fbstp
inc
inc
or
mov
xchg
jp
push
xor
dec
out
ljmp
in
mov
mov
lods
aam
cs
test
jle
add
jecxz
push
dec
adc
jae
pop
mov
frstor
out
cmpsl
outsb
push
inc
mov
jmp
or
mov
mov
arpl
sbb
das
cwtl
jne
push
xchg
or
sahf
cmp
data16
aaa
cmp
cmp
xchg
iret
icebp
mov
cwtl
lret
mov
sbb
call
mov
das
or
add
std
mov
pusha
xor
or
lea
vpcmpeqb
pop
incl
sar
mov
je
out
cmp
cli
rcll
insl
and
sbb
xchg
or
push
inc
or
jl
fimull
inc
lea
xor
loope
cmpsb
ret
push
imul
lcall
shl
pop
dec
pop
cmp
out
shrl
cmpsl
sub
and
xchg
adc
in
sbb
inc
jg
mov
test
push
adc
out
pop
scas
cltd
loope
lahf
stos
rcrb
and
jmp
gs
inc
rcr
in
dec
ud0
lcall
ss
adc
pusha
sub
add
sti
pop
cmp
mov
and
add
jmp
stc
push
das
jle
ja
test
mov
mov
jo
mov
pusha
pop
ud0
jmp
ja
fcoml
cli
and
fucomp
and
jne
sub
mov
sub
fstpt
xor
xor
ret
sbb
or
push
push
dec
not
jge
aas
out
fcos
incl
addb
dec
out
jns
shll
dec
lods
jl
ljmp
mov
mov
or
mov
sub
loopne
lods
sahf
outsb
bound
jne
sub
ljmp
movsb
pop
fwait
scas
rcll
jo
lcall
add
mov
jle
out
jg
inc
dec
pop
and
push
movsl
mov
test
call
int
ljmp
lea
pop
sar
xchg
mov
xorl
xchg
pop
dec
ficoml
add
jp
dec
mov
jl
sub
mov
xchg
fisubl
bound
jecxz,pn
and
call
js
pop
mov
xor
insl
in
push
cmp
popf
fs
pop
cltd
in
subl
cmp
xchg
adc
scas
jmp
add
ljmp
int3
cmp
addr16
icebp
clc
jne
xchg
mov
mov
inc
xlat
popf
aas
lds
or
push
adc
inc
sbb
in
push
dec
loop
out
in
push
cmp
pop
popf
nop
inc
frstor
decl
mov
mov
fisubl
pop
xor
push
jbe
pushl
ljmp
sahf
in
vpsrldq
std
scas
pusha
call
jbe
mov
cli
call
mov
daa
xor
jbe
mov
inc
push
mov
insl
mov
call
cmp
mov
fisttpl
test
shlb
fadd
cmpsl
icebp
fistpl
out
call
push
aam
xchg
es
xchg
jo
insb
test
int
mov
cmpb
mov
decl
push
xchg
bound
movsl
xchg
shlb
fistl
daa
or
icebp
and
lcall
push
push
jno
stos
pusha
inc
call
adc
clc
cld
inc
xor
repz
addr16
or
lcall
inc
loopne
sbb
or
dec
cmpsb
adc
iret
jmp
mov
call
pop
mov
xor
jae
scas
jle
add
pop
mov
jne
shll
push
mov
lret
call
fdivrl
lea
sbb
xor
cmp
or
lcall
lods
push
fmull
inc
gs
aas
cwtl
test
cltd
mov
jne
faddp
lcall
int3
call
ret
cld
aas
pushf
xchg
ds
leave
loop
push
or
and
in
lret
dec
cwtl
cmp
rcrb
lds
push
sub
iret
pop
pop
sbb
mov
jbe
incl
test
lea
imul
sbb
xorb
cmp
mov
pop
inc
in
fldt
scas
and
add
pop
lret
cmp
mov
cld
lock
call
mov
mov
and
outsb
shll
leave
inc
pop
das
and
jmp
add
in
jmp
popa
in
jge
jle
scas
int3
mov
or
and
mov
out
ljmp
lea
inc
xor
outsb
outsl
push
inc
xor
pop
fwait
push
mov
fimuls
das
inc
cmp
incl
pop
jb
daa
addb
pop
adc
pop
cmp
jnp
jg
mov
push
push
popf
xchg
lods
jae
xchg
mov
subb
add
push
insb
fiaddl
or
dec
clc
fimull
out
or
pop
rorl
dec
je
icebp
adc
adc
int
sub
lcall
cli
push
mov
push
orl
inc
lods
jle
pusha
divl
leave
fimull
add
incl
aas
mov
out
or
inc
and
sbb
jbe
imul
call
inc
cmp
decl
mov
scas
neg
fcomps
lret
cmp
adc
adcl
repz
roll
mov
ljmp
adc
fdivr
leave
pop
addr16
push
pop
out
xchg
addb
sub
push
mov
push
sbb
repz
xchg
fstl
lock
dec
sbb
nop
xor
incl
ja
int
call
mov
out
add
push
sub
jg
incb
xor
fsubr
jmp
sbb
pusha
lock
fiaddl
fsubr
in
lret
adc
lea
call
xor
inc
enter
xorl
outsb
pop
lock
mov
cmpsb
inc
sbb
gs
jmp
daa
or
sarb
icebp
or
push
stc
test
loopne
push
je
repz
and
in
ljmp
cmpl
inc
mov
imul
cmpl
push
mov
push
lret
or
push
fdivr
lcall
loop
mov
in
das
and
arpl
xchg
js
nop
imul
jg
jno
dec
xlat
cmp
sub
cmp
cmpb
ret
pop
push
mov
in
dec
and
bound
adc
mov
or
sub
movsb
push
int3
das
repz
mov
into
add
das
inc
xchg
jnp
inc
in
push
jmp
inc
lea
fwait
mov
ss
lcall
sbb
mul
lcall
repnz
pop
imul
mov
xor
inc
mov
aas
test
pop
out
inc
jmp
mov
movsl
or
xchg
jno
jae
mov
and
je
sub
pusha
mov
in
jmp
hlt
push
sub
dec
cld
xor
in
and
cmp
out
jle
arpl
push
decl
ds
mov
cli
add
in
rcll
movsb
add
sbb
xchg
sub
pushl
data16
sub
jg
lret
scas
or
push
jns
mov
push
and
fldenv
push
adc
incl
stc
std
mov
dec
movsl
in
jns
icebp
shll
adc
into
das
ds
stos
push
cmpsb
push
sti
shlb
jmp
mov
sub
ret
adc
xor
ss
aas
les
aas
js
dec
cli
add
lds
jo
decl
mov
add
or
mov
pop
mov
cmp
outsb
adc
ljmp
ret
jl
imul
mov
sti
dec
and
test
stos
les
decl
xchg
leave
mov
cmp
or
mov
mov
mov
lcall
or
test
enter
mov
sub
fiaddl
dec
inc
dec
pop
dec
jl
pop
jl
push
aad
sbb
cmc
push
arpl
push
jg
pop
movsl
push
repnz
and
pushf
sti
test
incl
sbb
mov
fcompl
adc
iret
jnp
mov
inc
pushf
cld
adc
dec
jmp
in
cmp
push
fistps
rcrb
jp
scas
movlps
xchg
imul
call
cs
ja
lret
dec
insl
xchg
ljmp
push
dec
cmpsl
jecxz
call
popa
add
mov
int3
dec
xabort
jl
and
inc
out
push
dec
imul
cmp
mov
mov
movl
jnp
adc
mov
add
and
jmp
add
or
jg
ljmp
cmp
cli
pop
dec
cwtl
or
roll
pusha
and
xchg
decl
pop
loop
mov
shlb
cmp
sbb
sbb
xor
push
or
jmp
mov
leave
lcall
jl
cmpsb
ja
add
push
test
jmp
mov
jne
data16
in
outsb
add
mov
mov
adc
mov
jmp
xchg
cmp
rcrb
pop
repz
or
mov
addr16
ljmp
xchg
enter
or
adc
cmp
mov
bound
mov
mov
push
cmp
pusha
jmp
jg
cltd
inc
xorb
add
lret
mov
xchg
xchg
sti
pop
mov
call
arpl
jmp
pop
xchg
inc
pop
shrl
mov
push
loope
inc
cmpsl
in
shr
lret
jae
out
shrl
insl
call
dec
lret
and
push
aam
jne
mov
popa
sub
clc
xchg
popa
push
ret
push
scas
lret
in
push
add
hlt
aas
in
sarb
daa
cmp
cld
cmp
decl
mov
pop
mov
sub
jp
cmp
jnp
jmp
xchg
stos
shlb
jcxz
xor
inc
decl
jae
outsb
cmp
out
jo
jle
jmp
adc
decl
xchg
push
daa
fdivr
call
les
mov
push
dec
push
pop
dec
jp
push
xor
jg
or
pop
mov
jns
push
popf
int
cli
xlat
test
fldenv
cmp
sahf
pop
les
and
sar
lcall
xor
or
xorb
cmp
mov
cmp
dec
fnstenv
jmp
pop
xor
ret
pop
fwait
inc
das
loopne
sbb
pop
dec
out
loope
bound
mov
inc
and
incl
out
cmc
rol
add
add
sbb
jg
and
call
or
jmp
lea
inc
adc
mov
mov
icebp
or
xchg
xchg
out
dec
call
fildll
idivl
jo
cmpsb
cmpsb
cmp
movsl
adc
jge
decl
sbb
lcall
mov
lahf
or
adc
mov
incl
pop
cs
subb
bound
incl
je
jge
jecxz
xchg
movsl
in
lcall
lods
je
or
aaa
mov
lret
arpl
push
ffree
adcb
aad
sub
call
inc
movsb
sbb
pop
add
divl
mov
pop
push
aad
daa
add
add
lcall
leave
ficoms
cwtl
jmp
jns
push
jp
int
mov
or
sar
ljmp
xor
push
jne
xchg
mov
xor
sbb
add
mov
icebp
sbb
ficoml
incl
adc
mov
cwtl
jb
mov
fs
dec
push
jge
dec
dec
movsb
sar
jmp
in
cmp
cmp
fiadds
inc
push
mov
lret
push
add
ljmp
mov
inc
cltd
jbe
cmc
lock
test
mov
das
sub
pop
imul
decl
or
sbb
fnstsw
hlt
jg
sarb
sub
cmpsl
jmp
sbb
inc
xchg
addr16
cmp
aaa
pop
rorb
sbb
scas
into
icebp
pop
jge
add
ljmp
test
mov
pop
jge
fisttps
int3
mov
hlt
int3
jg
xchg
sahf
sar
push
decb
pop
hlt
mov
pop
mov
mov
or
scas
loope
lcall
lcall
inc
testb
sbb
lret
and
push
test
add
fildl
scas
lcall
rolb
pop
arpl
addr16
in
lods
popa
inc
push
scas
push
dec
paddq
or
jmp
cmp
or
bound
fistps
cmp
xchg
push
push
popf
sahf
mov
xor
jp
or
stc
mov
xlat
pop
es
fidivrl
bsf
pop
idivl
add
stc
or
cli
xchg
push
adcb
sub
cmc
inc
aad
shlb
jg
push
mov
das
xchg
push
push
fs
incl
pop
mov
mov
bound
fimull
rcrb
rorb
movsl
push
iret
push
sarl
call
xchg
cld
pop
mov
movsl
and
and
outsl
and
jmp
xchg
cmp
xor
call
shlb
adc
push
dec
jo
add
aam
fucom
loop
cmpsb
mov
xchg
lcall
inc
dec
dec
sarb
shrl
xor
rcl
imul
jge
aad
push
test
inc
orb
mov
xchg
or
sub
mov
gs
popf
imul
incl
mov
dec
mov
pop
cmp
fldt
mov
jb
xor
fiaddl
mov
scas
das
ljmp
sub
mov
jmp
jl
es
cmp
xchg
test
je
push
sbb
inc
pop
lret
cmpsl
add
pop
pop
subb
insl
mov
decl
enter
pop
in
dec
shrl
mov
push
ljmp
pop
stos
lcall
test
cmp
and
sub
shl
sub
jle
lahf
imul
jg
pop
jae
aaa
or
sub
push
popf
outsb
jbe
xchg
stos
mov
xchg
lods
in
ds
ljmp
dec
cmp
int3
scas
sbb
cmp
sub
push
sub
sbbl
jmp
mov
pop
jns
gs
addr16
mov
pop
push
fisttps
jp
jo
ljmp
mov
pop
or
sub
pushf
scas
jp
loope
jl
fcom
adc
cs
jecxz
jae
inc
pop
mov
lcall
sub
jnp
jns
clc
imul
fcoml
imul
popa
xchg
and
call
imul
fnstcw
mov
sub
push
sbb
mov
mov
jp
mov
pusha
lods
xor
loop
pop
xchg
rcl
jo
repz
xor
mov
decl
xchg
outsb
add
enter
sahf
imul
mov
repz
dec
pop
push
xchg
xchg
fdivr
incl
lock
in
xchg
xor
cmp
xor
sbb
adc
and
daa
inc
xchg
and
dec
lahf
cmp
sbb
icebp
dec
dec
inc
cmpsb
mov
ret
in
mov
aad
call
dec
mov
fadds
xchg
les
xchg
and
psllw
cmp
stc
cmp
lea
fstpl
movsb
lret
xchg
dec
roll
inc
sub
add
jmp
fsubrs
inc
pop
aaa
imul
sbb
inc
push
adc
fidivl
push
in
inc
jle
test
push
call
xor
std
leave
das
dec
out
fiadds
inc
jns
jl
or
add
stos
ret
cltd
jmp
shrb
jge
jno
xor
stos
ss
dec
sbb
jb
adc
inc
mov
ljmp
roll
xor
jne
fimull
pop
jb
dec
repz
mov
lcall
nop
lock
xchg
mov
loopne
add
loope
xchg
test
cs
lcall
dec
aam
lods
test
imul
push
seto
jp
or
adc
xchg
lret
inc
mov
push
pop
and
and
mov
call
xor
sub
cmp
fsubr
add
mov
or
sarl
lret
clc
fistpll
out
mov
test
dec
xchg
pop
pop
cmpsl
mov
aas
push
sbb
push
ljmp
mov
jecxz
jle
xor
adc
fwait
adc
les
pop
inc
sbb
cmp
mov
fdivrs
pusha
push
xchg
or
mov
mov
ljmp
xchg
mov
das
test
mov
lahf
lods
inc
cmc
xchg
jne
leave
mov
xchg
mov
pushl
pushf
popa
leave
push
xor
popa
push
cli
repz
fldln2
ss
and
ja
incl
inc
push
fldl
call
jns
xchg
jp
stc
aam
pop
inc
out
xchg
imul
jb
filds
push
cmp
andnps
mov
repnz
incl
or
adc
das
adc
fstpt
insb
push
stos
bound
jmp
xchg
xorb
mov
dec
pop
fcos
decl
rclb
int3
push
jl
jno
into
roll
fdivs
dec
ret
fisubl
push
out
rclb
std
xstore-rng
cmpsl
inc
mov
loop
xor
aam
cs
jns
sbb
mov
jp
lds
xor
in
mov
push
sahf
jg
xchg
mov
pop
inc
decb
mov
sbb
incl
dec
xor
and
scas
aaa
pop
inc
xor
xor
sbb
inc
inc
cmp
jnp
mov
fiadds
pop
jnp
mov
cltd
insb
int3
jne
dec
dec
insl
inc
jl
xchg
xchg
ljmp
and
cs
ja
mov
fmuls
lahf
mov
pop
cwtl
out
dec
xchg
cld
loopne
loopne
pop
xchg
sub
xchg
sub
jp
add
add
dec
xor
iret
add
fs
subl
iret
jl
cmp
xor
jns
stc
and
fxch
inc
jle
popf
push
sbb
and
repnz
popa
jbe
lock
lods
mov
xor
adc
pusha
push
int3
sbb
iret
aas
leave
fwait
and
popa
aad
cmp
and
fsubl
push
sarl
add
or
jae
out
int
jnp,pn
mov
dec
lcall
push
aas
pop
mov
lret
mov
xor
popa
push
pusha
mov
jp
ret
iret
jbe
sarl
outsl
or
mov
inc
in
or
mov
fisubl
inc
in
cmpsl
sarl
xchg
insl
add
std
subl
mov
outsl
sub
lock
xor
lret
mov
push
dec
popl
sbbb
repz
js
fists
mov
ljmp
cmp
xlat
push
xor
es
sahf
insb
movsb
call
inc
or
rcrl
sub
stc
ret
mov
lahf
out
into
inc
loope
sarl
sub
and
lcall
cmp
mov
mov
pop
jbe
scas
aad
mov
cmpsb
pop
mov
std
leave
and
lods
in
jae
out
mov
add
jmp
dec
inc
sbb
mov
pop
xchg
mov
inc
push
mov
jae
ret
add
or
sub
test
jmp
adc
inc
shr
paddw
aas
cmpl
jns
div
pop
fsubs
xor
dec
xor
aas
rcrb
xchg
cmc
jg
sbb
aas
pushf
or
xor
pop
idiv
jg
aas
xlat
mov
or
xchg
mov
shrb
ds
sti
pop
mov
xchg
jl
mov
imul
in
outsb
dec
aas
ljmp
inc
inc
mov
fnstenv
push
pusha
pop
and
mov
sub
inc
or
mov
pop
fiadds
dec
cmp
arpl
push
inc
pop
push
inc
mov
dec
stc
in
fisubl
xor
xor
lret
pushl
mov
push
nop
mov
repz
cmc
lods
adc
sahf
mov
push
scas
in
xor
decl
push
lret
movsl
push
scas
aam
jl
roll
jle
lcall
imul
jmp
rcrl
mov
adc
mov
push
dec
and
mov
lahf
aas
sub
push
ss
in
leave
rolb
js
fwait
mov
pop
pop
mov
mov
mov
mov
jmp
xchg
jg
incl
aam
in
vpunpcklqdq
sub
dec
insl
add
add
push
hlt
push
outsl
push
xor
adc
xchg
cld
jmp
outsl
add
pop
fwait
loop
movsl
and
sub
sbb
add
adc
or
jmp
lret
out
imul
int3
imul
bswap
xchg
call
int3
int
test
test
inc
nop
pop
push
outsb
jne
jle
xchg
sbb
notb
inc
popf
mov
pop
sbb
popl
int
adc
push
aam
sahf
dec
notb
pop
xchg
pusha
push
push
sar
push
and
fistpl
adc
xor
loopne
jmp
jp
into
push
test
lcall
fdivrl
aas
je
push
mov
jns
aas
jge
jl
or
mov
ficomps
incl
negl
jnp
and
push
mov
mov
ror
fucomp
cmp
jae
jmp
cs
xchg
scas
pusha
push
cli
lds
repnz
fdivl
lcall
add
loopne
dec
loope
mov
test
pushf
pop
ret
push
mov
call
or
cmpb
add
xchg
fwait
out
pop
sbb
pop
jno
sbb
hlt
mov
xchg
jns
or
int
mov
sub
mov
and
aad
mov
sbb
lcall
jns
lret
aaa
pop
jnp
pop
lock
stc
out
fnstsw
ret
adc
dec
xor
incl
mov
pop
aam
push
imul
dec
sarb
les
stos
cld
imul
decl
cmpsl
mov
inc
lods
push
push
insl
cmp
push
mov
inc
cmpsb
and
dec
jg
hlt
adc
dec
lahf
pop
mov
push
ret
pop
or
push
inc
inc
js
popa
sbb
mov
pop
or
and
xchg
insb
jecxz
cmp
inc
fisubrl
jecxz
pushl
xor
add
xlat
arpl
push
into
popl
sub
dec
push
and
mov
dec
cld
jg
mov
call
idivl
mull
and
or
fcomps
in
mov
data16
mov
pop
cltd
and
jmp
and
sbb
cwtl
not
jmp
ljmp
push
fisubrl
mulb
cltd
fstps
stc
repz
scas
mov
in
and
aad
int3
jmp
dec
and
rolb
cli
sbb
lods
push
imul
inc
or
lret
or
mov
mov
incl
aas
mov
xor
in
xchg
cmp
inc
fsubr
shrb
sti
push
xchg
sub
decl
xor
mov
decl
sbb
pop
test
push
in
xchg
repnz
pushl
dec
into
int
stos
add
fistps
stos
mov
mov
iret
pop
adc
ljmp
lods
cmp
clc
xor
pop
push
call
mov
aaa
pop
out
lahf
loopne
out
leave
pop
mov
ret
mov
xor
sbb
jmp
xor
inc
fstl
mov
jmp
and
push
fimuls
sbb
ja
decl
incl
cli
inc
sbb
lock
mov
mov
jmp
fidivrl
mov
test
cltd
pop
jg
jbe
xlat
mov
xor
out
jge
jmp
jmp
sub
out
lods
mull
sarb
loope
xchg
dec
movsl
shrl
mov
adc
ja
jnp
pop
push
stos
in
stc
mov
add
iret
imul
call
bound
inc
lods
sti
add
adc
mov
movsb
sbb
jmp
mov
incl
sbb
mov
add
fwait
push
out
sbb
jbe
adc
pop
xchg
push
outsl
sbb
fmuls
mov
push
inc
pop
fists
pop
verr
adc
jmp
pushl
adc
add
jne
mov
xor
sti
push
je
dec
add
addr16
ljmp
xchg
cmpsl
lret
shrl
insl
fists
aas
cmp
out
inc
es
pushl
aam
loopne
test
test
jp
cs
inc
pusha
xor
vxorps
pop
or
decl
fildl
adc
pop
push
and
mov
jo
and
cmp
aad
pop
cmp
push
mov
aaa
addr16
loop
dec
fsubs
ljmp
decl
inc
pop
scas
hlt
leave
and
ljmp
inc
sub
mov
jae
dec
js
cmp
mov
pusha
sbb
xlat
or
dec
cmp
test
mov
and
movsb
stos
scas
xchg
inc
mov
or
jle
push
sahf
inc
inc
xchg
loope
jg
pop
aam
add
stos
xchg
wbinvd
xor
add
jmp
xor
jne
call
fbstp
or
xor
add
sti
ljmp
scas
mov
dec
leave
movsb
in
inc
lret
repnz
pop
adcl
decl
mov
popa
push
xchg
ja
push
add
xchg
int3
fsubl
mov
or
mov
sub
pop
or
nop
add
mov
pop
xor
pop
mov
pop
loop
mov
decl
add
pop
and
push
pop
mov
mov
aad
test
and
sti
xchg
mov
xchg
lods
fadd
jl
adc
fimull
dec
sahf
test
loop
ud0
pushl
aad
mov
xchg
sti
cltd
pusha
lds
push
cmpsl
add
dec
mov
pop
das
sbb
incl
cli
shlb
js
arpl
dec
jno
cmp
movsb
fstpt
mov
subb
xchg
in
pusha
cltd
xor
outsl
jge
push
jmp
jp
arpl
adc
mov
or
mov
rcll
pop
loopne
hlt
jns
negl
jae
lock
fcos
stc
lock
jbe
nop
cmpsb
and
mov
inc
shll
cmp
adc
mov
mov
lcall
xor
and
and
arpl
ds
sti
inc
test
sahf
in
or
mov
jb
in
insl
ss
int
fidivl
mov
cmovne
mov
fucom
push
inc
cmpsl
iret
int
cmp
flds
sub
pop
mov
mov
stos
mov
test
test
je
xchg
decl
mov
xor
iret
in
clc
sahf
and
mov
nop
sarl
fildll
cmc
mov
jmp
dec
xchg
hlt
xchg
cmp
mov
mov
shr
fimuls
jns
adc
test
pop
sbb
add
les
jl
mov
js
mov
cwtl
xchg
clc
cltd
push
stos
pop
xchg
fdivrs
lcall
adc
stc
lds
stc
sbb
cmpsb
xchg
ss
scas
add
mov
mov
push
fucom
dec
or
enter
inc
dec
sbb
test
jbe
lahf
rclb
mov
lahf
pop
push
loopne
pop
out
test
insl
xor
ljmp
fsubr
sti
stc
mov
dec
sbb
inc
cmpsl
cmpsb
cmp
add
call
das
ret
push
xchg
mov
mov
cmc
pop
imul
popa
xchg
mov
test
jmp
scas
arpl
mov
lcall
xlat
mov
jbe
sub
fdivrl
jmp
aam
in
repnz
loope
scas
adc
adcl
or
repnz
ficompl
repnz
mov
rcl
jg
popa
in
repnz
xor
cmp
bound
pushl
pop
cwtl
repnz
push
xchg
xchg
push
jge
lock
addb
roll
sub
inc
sub
cmp
jmp
outsb
xchg
pushf
fdivrl
cmp
mov
xchg
aas
xor
rol
dec
add
sbb
js
in
cmc
ljmp
mov
movsl
xchg
int3
sbb
jl
rcrb
shlb
xchg
pslld
cli
call
sbb
nop
adc
mov
out
or
mov
sahf
repnz
pop
push
dec
inc
out
inc
mov
loope
cmpsb
jg
inc
cmc
in
out
nop
xchg
popf
dec
mov
imul
pop
fiaddl
ljmp
adc
and
mov
jge
sar
aam
lock
add
and
repnz
xchg
mov
test
pop
mov
popa
and
push
bound
sbb
push
push
ret
xchg
fisubs
sbb
pushl
popa
dec
mov
sahf
test
sub
push
push
adc
inc
mov
inc
sbb
mov
mov
mov
roll
or
dec
add
mov
daa
out
orb
dec
cmp
fisttpl
test
sub
mov
xchg
mov
adcb
in
call
push
mov
lods
mov
cmc
cmp
movsb
xor
loope
rolb
push
insb
push
loopne
pushf
incl
test
and
inc
adc
repz
mov
bound
add
incl
imulb
and
add
jge
lea
jbe
imul
das
ljmp
cmp
push
jmp
das
aaa
scas
inc
lret
fisttpl
xor
hlt
jecxz
inc
inc
push
insl
lcall
leave
adc
mov
mov
pop
fidivrl
aad
in
mov
shlb
mov
incl
ds
cs
add
inc
xchg
jns
jne
out
adc
jne
adc
lcall
icebp
faddl
and
mov
inc
ja
and
jo
leave
test
scas
ljmp
aaa
add
push
cmp
or
pop
inc
or
in
cmp
sbb
xor
sbb
pushl
xchg
lret
cmp
adc
jne
adc
ss
ds
shll
pop
dec
dec
dec
hlt
or
repnz
in
mov
in
shrb
dec
add
pusha
or
adc
push
inc
icebp
lea
cmp
pop
incl
out
insb
and
insb
punpcklbw
fildl
or
mov
cmp
mov
and
test
nop
call
sub
xchg
int3
xchg
sub
mov
xor
add
jle
and
jo
inc
lcall
add
outsb
add
imul
dec
in
or
or
dec
xchg
rcrb
inc
push
call
loop
sahf
into
jae
mov
rorb
lret
gs
add
xor
cmpsl
popf
fiadds
lock
fimuls
cwtl
mov
stos
xchg
sub
xor
add
cs
movsl
jle
jns
jg
lret
mov
push
mov
and
adc
inc
outsl
mov
imul
and
and
test
or
xor
xchg
mov
inc
add
push
push
sub
jo
outsb
mov
dec
mov
ficoml
cmp
pop
orl
and
int
cmp
data16
jne
pop
outsl
lcall
or
aad
clc
or
pop
fisubl
andb
jmp
add
mov
sub
lds
divl
rol
test
out
scas
hlt
or
dec
ret
sbb
adc
fidivrs
es
pushf
mov
js
leave
xchg
xor
call
out
inc
js
test
push
cmp
scas
cmpsl
cmp
gs
pop
push
inc
enter
incl
daa
loope
and
sub
cmp
mov
and
sbb
adc
mov
sub
ret
push
scas
sub
pushf
imulb
mov
addr16
jne
stos
and
out
data16
or
jl
daa
jecxz
sar
decl
mov
pop
push
std
adc
and
cmp
mov
mov
jno
jae
xlat
fisttps
xchg
lock
jb
rorl
arpl
shlb
fiaddl
ret
cmpsb
movsl
jmp
cmp
cmp
xor
dec
xchg
imul
add
or
mov
arpl
and
call
push
lods
mov
shll
xor
pushf
jb
imul
xor
jge
fisubl
mov
cmp
pop
push
cmp
xor
mov
sub
sbb
movsb
fdivrl
mov
insb
sub
jmp
push
jns
cmp
sbb
aaa
out
loop
lret
psubb
inc
ret
jle
add
das
in
pop
cmp
mov
mov
mov
repnz
dec
mov
or
inc
dec
push
pop
adc
lea
rcrl
aaa
add
arpl
and
fsubs
ss
pop
sub
add
stos
sbb
rol
pop
jge
movsl
fnstenv
jmp
push
loop
fisubrs
pop
inc
inc
loope
lds
dec
mov
call
mov
mov
int
repnz
push
in
loope
mov
jnp
pop
mov
and
push
outsl
xor
jmp
out
jl
mov
les
mov
fistpl
jns
jecxz
subl
aad
arpl
push
stos
jbe
fwait
adc
cmp
les
or
fdivrl
fucom
sbb
rclb
jno
aam
hlt
lret
fs
inc
jbe
add
mov
jg
loopne
out
popa
adc
cmc
lcall
out
xchg
in
mov
cltd
or
mov
and
mov
cld
jg
iret
jne
xor
mov
cmpsb
es
fiadds
dec
sbb
or
sub
lock
push
or
dec
sbb
and
shlb
loop
imul
mov
push
xor
adc
jne
mov
dec
js
or
dec
sbb
ret
sbb
mov
lret
inc
call
shll
popf
mov
icebp
mov
inc
outsl
or
dec
call
cmp
or
pop
dec
call
cmp
pop
mov
fwait
sbb
push
nop
dec
mov
mov
inc
dec
add
jo
push
ds
jmp
dec
inc
or
mov
xor
and
dec
lock
imul
lret
call
jecxz
cmp
dec
or
fxch
lret
sbb
xlat
jge
cld
fildll
mov
mov
into
push
pop
movsl
lahf
mov
push
mov
jg
xor
rcrl
dec
aaa
aam
jg
cmpsl
push
sti
mov
mov
push
xor
adc
lods
pop
mov
jo
test
sbb
call
out
dec
mov
addb
jmp
ret
daa
out
jle
sbbl
mov
pop
mov
inc
pop
rcll
cmp
loop
imul
push
pushfw
mov
jg
in
pushf
popa
incl
fcmovu
xor
push
ljmp
cld
incl
dec
mov
pop
cmc
pop
scas
pusha
fimuls
lods
pop
xor
jp
cmp
mov
sbb
adc
jecxz
xchg
push
push
cmp
in
mov
or
popf
sar
call
xor
arpl
mov
fisttpll
lret
mov
scas
jle
pushl
dec
test
jne
sbbb
mov
sub
mov
pushf
mov
dec
jl
dec
jl
cwtl
push
or
sbb
mov
clc
rolb
fiaddl
movsl
sbb
ret
pushl
stos
lods
mov
push
pop
inc
pushf
push
pop
dec
in
jl
jge
or
incl
lcall
push
int
add
add
incl
fildll
decb
popf
nop
in
sub
adc
push
inc
pushl
jnp
fnsave
int3
push
mov
clc
cwtl
inc
push
mov
imul
jae
cwtl
hlt
aas
xor
cmp
andb
ss
pop
adc
push
dec
in
ret
es
into
push
jne
aam
inc
nop
repz
xor
adc
mov
scas
enter
data16
sub
and
lret
insb
mov
xor
clc
jg
fsts
or
mov
test
xor
fidivrs
mov
stos
add
outsl
push
xor
scas
or
bswap
xchg
movsb
mov
lcall
jnp
lods
jp
shlb
lahf
scas
bound
insl
mov
scas
inc
scas
shlb
jg
jle
scas
dec
dec
sub
hlt
sub
mov
pop
movsl
sahf
roll
jmp
dec
inc
aad
pop
mov
stos
add
add
out
hlt
jle
lret
jns
mov
std
pushl
loopne
mov
push
je
xchg
loope
testb
and
inc
adc
add
dec
mov
mov
and
lcall
push
jg
adc
test
sbb
es
test
sbb
icebp
stos
push
out
icebp
bound
iret
dec
incl
jo
notl
pop
pop
sahf
fnstenv
in
push
cli
push
lods
add
inc
aam
mov
shlb
call
stos
pop
pusha
cltd
in
mov
mov
sti
pop
insl
sbb
mov
jb
out
repnz
inc
sar
pushl
in
push
sbb
xor
scas
cmp
in
ljmp
push
outsl
stos
aam
ljmp
or
arpl
cmp
stos
sbb
xchg
push
mov
push
dec
fucom
inc
jge
lods
xor
and
fsubp
aaa
popa
aam
out
push
sub
inc
pop
stos
stos
fcmovnb
mov
mov
std
mov
lcall
mov
adc
mov
sti
xchg
or
adc
aaa
mov
aam
out
inc
xchg
shrl
popa
scas
pop
sbbb
pushl
mov
mov
mov
sbb
in
insb
lret
push
mov
les
stos
sbb
push
mov
or
pushl
sub
into
pop
mov
mov
test
dec
mov
sti
jge
xchg
dec
cmp
ljmp
xchg
ds
mov
dec
es
insl
cmp
cmp
fwait
sub
lcall
xchg
pop
flds
push
push
adc
jnp
adc
mov
daa
push
jmp
mov
pop
hlt
imul
xor
pop
repz
adc
inc
adcl
pushl
cli
cmp
negb
xchg
mov
jecxz
out
inc
sti
lds
daa
mov
jge
decl
pop
mov
xchg
adc
jecxz
mov
pop
outsl
cli
inc
xchg
and
xor
jmp
into
repnz
xor
xor
add
or
jl
das
add
iret
mov
lock
jmp
das
outsl
das
mov
add
mov
mov
push
adc
incl
packuswb
call
or
lret
call
sub
andb
lds
xor
cmc
pop
adc
cmp
pop
jns
and
sub
call
hlt
and
daa
add
cmpsl
and
hlt
sarb
movsl
test
orb
ljmp
add
jnp
leave
jmp
fwait
sub
das
mov
incl
xchg
outsl
aas
mov
sahf
sub
xlat
or
cwtl
bswap
mov
fnstsw
imul
pop
xchg
mulb
push
imul
out
mov
mov
sub
decl
ljmp
test
into
or
lcall
das
push
adc
inc
imul
scas
iret
decl
fdivrl
push
call
outsb
gs
cmpsb
imul
push
push
jbe
jns
mov
js
push
mov
jno
inc
and
hlt
ret
das
int
push
cltd
push
pop
add
cs
dec
imul
ljmp
inc
push
je
hlt
xlat
jmp
jne
pushl
xchg
cwtl
data16
fimull
pop
inc
je
pop
adc
data16
stc
inc
sub
mov
decl
sbb
jne
sub
lcall
mov
push
cmp
fisubl
xor
fdivrp
loope
mov
jl
mov
or
sub
xchg
mov
fwait
mov
mov
ficoml
js
push
push
aas
mov
push
jae
aam
mov
cmp
dec
cmc
inc
push
mov
xchg
mov
ffree
xchg
dec
sbb
inc
or
insb
out
push
idiv
decl
sti
push
push
aad
sub
je
jmp
lcall
jl
shlb
incl
push
daa
push
outsb
iret
sub
test
dec
fildl
mov
lcall
adc
pop
and
hlt
sti
aas
push
dec
loop
push
push
xor
add
jmp
movsl
mov
outsl
inc
jg
fdivl
push
loope
and
fisubrs
jb
jb
jmp
test
incl
xor
cs
dec
fistpll
dec
insl
js
popf
sar
inc
shl
pop
mov
fldt
call
lea
sbb
sbb
fdivrl
pusha
shlb
out
push
jecxz
fistpll
xor
pushl
fs
jae
ja
adc
lret
ss
aaa
sub
loopne
test
incl
scas
xchg
lldt
push
xor
push
jge
pop
aad
inc
std
int3
test
mov
or
push
sbb
bswap
and
nop
cld
call
lret
add
sbb
mov
inc
scas
mov
decl
call
sub
sub
adc
dec
in
sbb
mov
negb
mov
decl
mov
pop
gs
adc
cs
push
cmp
xchg
loop
xor
ljmp
ljmp
cmp
xor
shl
push
scas
fwait
adc
dec
inc
push
push
mulb
fxch
dec
rorb
aad
insl
jo
adc
sbb
inc
and
ljmp
mov
insb
notl
out
mov
jl
or
ss
into
cmc
xchg
outsl
mov
add
add
inc
lods
inc
outsl
jae
int3
mov
jle
jg
inc
dec
pop
cmp
inc
repz
mov
adc
ljmp
mov
add
pushl
mov
lods
push
loop
lcall
imul
jmp
arpl
cs
xchg
inc
mov
imul
lahf
mov
adc
mov
call
movsl
cmp
outsb
out
mov
sub
inc
std
add
and
inc
mov
jecxz
push
in
iret
push
mov
cmp
stc
push
push
mov
pandn
sub
pop
pop
shll
rorb
cmp
push
out
shll
push
mov
inc
jg
ljmp
adc
mov
cmp
ds
add
and
dec
dec
cwtl
pop
xchg
dec
cmp
or
cmpsb
popf
dec
sti
femms
inc
push
clc
daa
loop
push
xor
mov
jmp
push
insl
aad
mov
mov
aas
mov
xchg
loope
mov
adc
jmp
adc
insl
adc
or
push
push
jnp
add
fsts
xchg
aas
push
add
iret
sub
sub
ds
pop
nop
pop
mov
cs
call
dec
xchg
icebp
insb
add
adcb
pop
or
inc
imul
stos
fistps
mov
xchg
incl
jg
cmpsb
xchg
inc
xor
in
and
or
adc
xchg
cld
gs
xor
subb
inc
in
negl
xor
inc
push
lea
jbe
pop
popf
sub
push
fs
sub
sbb
sub
and
push
add
mov
dec
lods
fistps
cs
arpl
add
subl
pop
fbstp
inc
incl
ljmp
popa
jg
adc
mov
clc
jmp
ror
lods
stc
aas
push
in
fcompl
jmp
pop
into
jo
push
mov
mov
and
xor
clc
inc
mov
repnz
stos
loopne
jno
push
push
inc
imul
lahf
cld
sbb
shll
test
cmp
call
les
js
add
xchg
jp
out
push
std
push
sti
aas
in
cs
and
call
pushl
mov
inc
enter
add
cmp
push
shr
fs
insl
cmp
fwait
pop
addsubps
ljmp
in
pop
pop
or
mov
test
xchg
punpckhdq
mov
rcrl
jmp
pop
enter
xchg
shrb
add
scas
insb
lock
fucomi
xor
lcall
dec
iret
repz
jl
fldln2
mov
enter
ljmp
lds
xchg
dec
cmpb
mov
mov
jmp
rolb
ljmp
fwait
adc
cmpsl
gs
int
mov
clc
lods
jl
sub
dec
or
jae
cmp
add
pop
push
and
scas
sbb
iret
sub
test
dec
clc
call
popa
fcmove
repz
lock
cmpsl
leave
cmp
notb
mov
call
inc
inc
xor
mov
ja
adcb
cmp
mov
lret
push
in
pushl
push
and
push
into
js
outsl
mov
mov
data16
xor
jge
in
fisttpl
fadds
lcall
xchg
arpl
adc
mov
push
xchg
cs
jmp
jns
repnz
call
push
insl
mov
jnp
fldl
inc
movsb
lcall
push
sbb
jbe
and
daa
mov
mov
xchg
pop
das
incl
sub
sbb
mov
in
jmp
jmp
mov
mov
fwait
icebp
test
pop
in
xchg
mov
mov
lret
mov
loopne
call
lahf
test
iret
test
pop
jns
or
jmp
push
or
xchg
lea
decl
loopne
push
gs
gs
gs
scas
fwait
pop
loop
adc
pushl
and
adc
jb
xchg
and
into
icebp
adc
shr
jl
mov
iret
add
push
jns
insb
cmpsb
cmp
outsl
inc
cld
push
nop
mov
lods
ds
pop
gs
fwait
jmp
cmpsb
jg
cli
outsb
pusha
add
dec
scas
ret
leave
je
sub
dec
dec
in
dec
add
xchg
dec
push
lods
repnz
push
dec
sarb
jl
out
or
mov
call
ret
jecxz
jmp
lods
lcall
fldl
dec
mov
js
dec
mov
notl
inc
jmp
loopne
push
xor
imul
pop
push
mov
iret
std
jmp
dec
sub
fucomi
sbbl
js
dec
or
cmp
pop
xor
push
insb
inc
sahf
and
out
lcall
loope
fidivrl
sub
out
cmp
repz
cmc
xchg
shll
dec
lods
clc
bound
mov
mov
je
xchg
jo
sbb
push
jne
out
xor
jmp
add
mov
xor
inc
mov
xchg
lahf
push
mov
or
arpl
call
dec
inc
sbb
mov
and
addr16
insb
sub
cld
subb
test
jno
fidivs
sbb
fwait
sbb
loopne
push
cmpsl
fcmovb
out
mov
loope
lcall
sub
ret
test
leave
fstpl
xchg
and
roll
pushf
ljmp
jmp
jecxz
aaa
or
cwtl
adc
int
insl
push
mov
lret
jg
sbb
jno
decl
in
std
lahf
mov
stos
clc
xchg
cmpsl
mov
inc
xchg
test
nop
xchg
call
mov
pushf
clc
ja
sub
cmp
push
or
inc
add
adc
xor
fistpl
incl
movsb
mov
push
xchg
mov
leave
jl
or
xchg
aad
mov
in
call
mul
pop
dec
out
es
ficoml
test
xlat
je
and
push
sub
jmp
addb
ds
mov
pop
xlat
sti
gs
int3
inc
sbb
decl
xorl
fnstcw
movsb
push
lret
fwait
scas
dec
orb
ljmp
decl
jb
jne
inc
dec
mov
sbb
pop
fdivrl
push
mov
pop
movsb
cmpsb
push
iret
cmpsl
lcall
pop
cmpsb
stc
mov
inc
mov
shrb
mov
jb
mov
int
push
iret
sub
mov
fwait
pop
fisttpll
inc
or
loop
or
jmp
decl
and
popa
inc
mov
add
dec
pop
aam
xchg
xchg
scas
daa
dec
popf
outsl
add
rcrb
xchg
decl
xlat
push
and
cmpsb
fs
pop
push
mov
xchg
bound
inc
xor
push
jmp
or
lock
pop
pusha
inc
les
pop
iret
jmp
les
cmp
cld
mov
leave
mov
mov
ja
jb
stos
outsl
cmp
jo
test
incb
imul
cs
pop
xchg
sti
mov
pcmpgtw
ss
mov
jmp
mov
dec
cld
adc
hlt
lods
mov
xchg
push
add
ds
inc
adc
mov
pushl
xor
insb
sub
pop
xchg
mov
xchg
xor
scas
pop
addr16
enter
sub
lcall
outsb
clc
enter
ret
rolb
jmp
mov
xchg
subl
decl
mov
scas
rcrb
xchg
xchg
call
pop
or
xchg
xchg
pop
es
jmp
lret
or
pop
test
sti
les
sub
jne
jp
int3
js
scas
and
push
call
mov
ja
addr16
fsubs
jo
popa
mov
das
in
pusha
lock
std
decl
out
rcll
clc
jg
sarb
into
jmp
dec
pop
movswl
cmpsl
inc
and
mov
mov
and
pop
cwtl
mov
push
int3
pushf
lock
pop
dec
movsb
test
pop
jmp
ljmp
cmp
push
decl
push
push
push
jbe
sti
push
std
stos
inc
pop
push
in
fcomi
leave
movsl
insb
xor
fucomp
call
into
jle
push
or
fcomi
mov
inc
add
inc
pop
inc
test
jecxz
call
lret
incl
loopne
rcll
das
mov
xchg
data16
push
movsl
jno
push
sbb
cli
lods
inc
mov
fildll
incl
cmp
push
mov
subl
rorb
leave
xchg
sub
rorl
incl
mov
sti
aas
lcall
jmp
mov
lret
or
and
aad
incl
icebp
cmp
sti
fs
loopne
mov
push
pop
jmp
shlb
addr16
jmp
stc
xor
test
xchg
jo
xor
and
mov
push
or
sbbl
dec
cmpsb
mov
pop
sbb
add
lret
jg
push
out
icebp
popa
sub
mov
inc
sbb
ja
sub
pop
add
xlat
or
arpl
and
lcall
dec
push
fs
shll
mov
mov
mov
dec
jg
push
dec
ss
call
js
add
jmp
jne
sbb
adc
loopne
dec
dec
and
inc
fiadds
bound
add
mov
jecxz
int
or
mov
inc
sub
call
adc
stos
inc
dec
out
daa
pushf
xor
hlt
adc
insb
and
sahf
aad
pusha
sbb
add
mov
jmp
xor
jle
jns
add
scas
cmp
adc
cmp
mov
push
lret
stc
xchg
decl
out
subl
enter
das
adc
xor
and
dec
and
push
or
add
or
mov
and
pop
adc
push
hlt
aam
push
imulb
add
sahf
loopne
idivb
push
sub
mov
dec
inc
fstps
mov
rorl
dec
clc
dec
cmp
xor
stc
incl
jmp
mov
or
insb
push
jnp
cmpl
pop
lcall
mov
ds
repz
outsl
enter
sbb
inc
dec
mov
sbb
mov
sub
xchg
sub
mov
mov
add
adc
mov
clc
cmpsl
imul
decl
sub
sub
addb
sti
loop
jae
sub
pop
push
pop
incl
pop
movsb
or
adc
mov
popf
dec
or
shll
lods
pushl
jae
popf
or
lret
mov
mov
xor
pop
sub
mov
add
push
call
lcall
or
jbe
adc
test
lods
shll
aad
sub
inc
xor
popa
fwait
sbb
sub
pushl
add
xor
cmc
ja
aas
mov
adc
xchg
dec
into
stos
mov
test
ficoml
mov
aad
scas
mov
loope
add
push
into
shl
xchg
and
sti
or
push
mov
std
xor
push
mov
aaa
push
sbb
sub
inc
jl
adc
mov
ljmp
jmp
int
pushf
cli
outsb
dec
lock
sbb
sub
xchg
pop
cmp
sub
pop
jmp
inc
rcll
test
cltd
jmp
xor
cmc
call
les
inc
cmpsb
mov
lds
fildll
rcrb
movsl
stc
jae
daa
jne
push
inc
lret
or
loopne
xlat
fcoms
lods
add
mov
addr16
push
mov
aad
inc
insb
fisttps
decl
cld
call
test
pop
fstp
adc
filds
fs
hlt
pop
adc
decl
sarb
mov
imul
fdivrs
faddl
testl
mov
repnz
jne
pushf
cmp
into
das
xchg
mov
sbb
lcall
pop
sahf
push
sbb
inc
or
push
call
lret
scas
inc
jmp
in
mov
mov
pop
repnz
xchg
and
pop
xchg
add
inc
insl
andl
inc
pop
sarb
test
out
call
sarl
pop
ret
mov
mov
leave
xchg
jae
push
xchg
repnz
cmp
sub
cli
ja
jb
fwait
ud0
decl
or
cmp
mov
sub
push
mov
jb
dec
lcall
jle
repz
or
adc
imul
gs
or
lcall
je
fisttps
inc
push
push
outsl
sbb
mov
pop
inc
ror
rorl
fsubl
inc
cmp
jns
fstpt
test
shlb
lods
xor
mov
xor
xor
jmp
in
lcall
fstps
or
add
cld
and
popa
subl
mov
jmp
or
jbe
leave
or
sbb
aas
scas
faddl
cmp
mov
lcall
sbb
std
ja
jbe
addr16
pop
cli
cwtl
call
inc
fdivrs
cwtl
dec
push
mov
lcall
out
push
push
out
aaa
sub
xor
js
sti
dec
sbb
mov
xchg
pushf
ljmp
add
popa
sbb
inc
cltd
aad
out
cmc
pop
ss
and
rcrl
flds
xchg
mov
inc
mov
inc
mov
mov
imul
pop
mov
xchg
ljmp
iret
lret
cmp
lcall
sub
pop
decl
and
das
movsb
push
jg
or
mov
decl
lcall
call
shrl
clc
repz
mov
push
call
mov
mov
pop
xor
adc
mov
mov
xor
repz
pushl
push
jne
fucomi
push
fsubrl
leave
rcl
sub
and
xchg
sub
xchg
popa
ljmp
icebp
inc
sbb
hlt
mov
call
xor
jge
cpuid
xlat
cmp
leave
aad
push
push
outsb
lcall
add
cmpsb
jno
cmc
enter
mov
sbb
fdivl
push
pushl
mov
xor
rorl
lds
xchg
stos
jle
arpl
call
call
popa
lds
scas
scas
mov
cmp
add
clc
test
movsb
pop
popl
push
xor
mov
xor
inc
je
inc
imul
test
cld
cmpsb
fs
loop
clc
incl
push
test
lds
std
les
clc
xchg
mov
out
mov
repnz
jmp
test
divb
ds
pop
pop
cmpb
rol
stos
arpl
jg
jg
outsl
ffree
push
mov
sbbl
xchg
aad
and
jae
enter
lcall
addr16
or
xchg
and
jmp
cmp
lahf
pop
xlat
movl
cmp
cwtl
outsb
pop
ljmp
mov
xchg
and
jecxz
or
out
daa
xor
ds
fnstsw
fcmovnu
cli
pop
pop
push
je
pushl
xor
cmovp
mov
stc
mov
jle
add
xor
inc
int3
xlat
push
push
out
ret
jae
jecxz
mov
and
mov
into
insb
xor
cmp
loopne
inc
lcall
aad
xor
xor
jmp
arpl
xchg
add
mov
cmp
repz
mov
push
adc
movsb
mov
ret
add
out
push
adc
hlt
and
jmp
fcmovne
add
push
rolb
or
xlat
jb
push
push
outsb
leave
lcall
push
lea
incl
js
inc
xlat
mov
cmpsb
jns
loop
and
sahf
xor
mov
pushl
mov
pop
lock
xlat
jbe
cmpsl
aas
inc
pop
inc
mov
or
je
je
call
das
scas
lock
xor
mov
adc
lcall
rorl
js
pushl
lods
aam
mov
pop
push
arpl
jo
cld
aad
stc
lds
xor
cmp
dec
jmp
mov
hlt
xrelease
add
popa
in
inc
int
and
add
jo
mov
lcall
inc
lea
jne
pushf
pusha
pop
or
lods
jecxz
out
arpl
fisttpll
add
cltd
jnp
divl
decl
jo
xor
sub
dec
fwait
sbb
in
mov
lods
idivb
sar
jle
adc
imul
sbb
inc
add
scas
mov
xor
mov
or
repnz
lcall
cld
or
inc
jmp
repnz
jne
push
leave
cmp
jp
imul
inc
xchg
lcall
push
in
xor
ret
xchg
pushf
outsb
pop
fsubs
incl
imul
push
sbb
imul
jg
lret
insb
cmp
movsl
pop
mov
mov
call
push
mov
xchg
or
push
rolb
in
subl
jmp
pop
pop
pop
test
mov
jp
cmpsb
pop
rcr
add
inc
add
movsb
dec
fsubs
decl
fldenv
push
dec
adc
pop
or
adc
scas
sahf
push
les
pushf
lods
mov
movsb
cmc
mov
scas
std
cli
adc
mov
test
jne
sub
call
bound
stc
cmp
push
in
movsb
aas
fst
ret
inc
sub
push
pop
and
pop
nop
fidivl
mov
mov
add
mov
mov
mov
cmpl
std
lcall
repz
ljmp
in
sti
std
aas
sub
sub
ss
mov
call
rcrl
movsb
dec
mov
loopne
mov
call
mov
dec
add
xorb
xor
fwait
loopne
cli
movsl
jmp
sbb
pop
mov
sbb
cli
lock
mov
and
mov
xchg
jl
addr16
jmp
popa
into
test
imul
cmp
sbb
sbb
pop
int3
sbb
call
mov
rclb
xlat
movsb
pop
repnz
mov
pop
lea
or
inc
jb
aam
jle
push
add
lea
sbb
test
jecxz
push
push
decl
xchg
popa
mov
sti
lret
fdivrs
int
push
lock
inc
dec
clc
ret
jge
jmp
dec
scas
sub
outsl
arpl
push
jp
adc
sub
sub
aam
adc
sbb
outsl
lods
sbb
leave
xchg
dec
sub
push
cwtl
sub
test
adc
inc
and
mov
adc
mov
jns
inc
xlat
int3
andb
or
fisubs
int
decl
popf
subps
sbb
cmp
decb
out
mov
fiaddl
rcrb
push
es
and
orb
aaa
pusha
pop
out
scas
lret
sbb
rclb
imul
lds
and
clc
fmul
outsl
shrl
add
addr16
inc
cmp
push
outsl
arpl
or
jmp
jmp
push
jecxz
cmp
mov
sub
test
leave
and
jge
mov
test
push
stc
jmp
xorl
pop
pop
ret
mov
fsubs
inc
repz
add
mov
inc
jl
inc
mov
lock
or
int
mov
fldt
sbb
xor
adc
mov
sbb
pusha
add
inc
xor
jle
push
arpl
or
pop
lods
repnz
mov
arpl
sahf
aam
mov
pushl
dec
icebp
js
sub
stos
or
pop
mov
mov
addr16
pop
repz
inc
cmc
adc
jp
ret
mov
pop
mov
mov
loop
cmpsl
cmpsb
and
loopne
lcall
addr16
mov
pop
jnp
fidivrl
sbbl
mov
xchg
xchg
inc
aad
mov
incl
add
sahf
pop
aam
hlt
push
push
lods
lds
movsb
mov
pop
mov
call
pop
sbb
cltd
out
sbb
inc
jl
and
add
sub
psrlq
jge
mov
lcall
cmpsl
sbb
xor
cmpsl
xchg
repnz
test
arpl
mov
sbb
dec
std
pop
in
cmp
loope
jns
mov
inc
outsl
shrl
jle
lcall
add
lahf
or
movsl
lahf
or
lods
xchg
or
push
add
dec
sbbb
jnp
pop
push
cmc
aaa
pop
adc
cmp
mov
adc
js
adc
sub
subl
xor
jl
dec
daa
sbb
adc
jg
jge
mov
sub
jmp
into
out
inc
push
adc
aas
pop
imul
dec
cs
adc
pop
lret
cwtl
mov
mov
inc
inc
stos
mov
subl
push
fists
jmp
pushl
mov
rol
jl
push
jle
cwtl
out
xchg
push
sbb
pop
mov
inc
pop
test
cmp
push
lods
mov
jle
sbb
push
jp
scas
ja
bnd
mov
inc
mov
ret
xor
adc
loopne
mov
cltd
cmc
pop
out
popf
push
in
pushl
push
jge
call
adc
lahf
test
lock
insl
sub
push
and
scas
ja
xchg
fimull
pop
mov
adc
xchg
shl
adc
call
mov
insl
xchg
dec
outsb
pusha
pop
inc
jmp
push
xchg
and
sbb
or
fmull
pop
fs
mov
pop
in
fs
cmp
mov
cmpb
out
jge
pop
hlt
fwait
pop
testb
ljmp
and
dec
xlat
arpl
sbb
jge
mov
and
jmp
ret
int
cld
push
mov
add
cmp
mov
shrb
cmp
jge
jle
cmc
daa
call
mov
mov
xchg
and
dec
aad
popf
data16
gs
test
fisubrl
aas
sbb
int3
cmp
xor
sbb
or
xchg
sbb
ret
cmp
faddp
lcall
mov
pop
int
fadds
sub
aas
lahf
inc
stos
mov
pushf
bound
jmp
lcall
pop
mov
ror
xor
push
shrb
inc
loope
stos
call
int
adc
incl
ret
and
fwait
jo
fwait
cli
testb
mov
repnz
push
cmp
push
push
imul
pop
or
inc
xor
sti
or
mov
cmp
fdivl
iret
int
cmpsl
loop
sub
and
lcall
lret
cs
decl
roll
inc
cwtl
mov
and
mov
jle
push
ss
mov
lret
lcall
or
sbb
xor
out
mov
rclb
push
xor
clc
call
or
leave
fldl
mov
sub
jbe
xor
cwtl
mov
out
insl
icebp
incl
xchg
jns
add
push
faddl
dec
jo
sbb
js
adc
add
push
mov
push
inc
inc
mov
je
xchg
mov
loopne
cmp
pop
xor
aaa
shr
cmp
pushl
dec
mov
stos
mov
cwtl
mov
popf
imul
stc
out
and
mov
xor
inc
inc
ja
jecxz
popa
and
pop
mov
adc
dec
pop
sar
ljmp
dec
je
sub
shlb
ljmp
add
push
dec
add
mov
sahf
jmp
lods
inc
xchg
pop
shr
fsubs
mov
dec
pop
push
shl
cmp
dec
xor
cmp
jg
decl
into
in
mov
ret
ret
hlt
aaa
mov
or
testb
jnp
test
jge
testl
ss
pop
rcl
je
dec
inc
jge
in
xchg
and
pushl
sarb
inc
dec
sub
das
mov
mov
dec
scas
jle
test
mov
inc
jle
into
jl
and
inc
pop
das
mov
cmpsb
sub
pop
pop
sub
lcall
pop
adc
dec
mov
in
test
sti
lret
in
es
mov
ret
das
fstps
inc
in
pop
xor
popf
mov
std
adcb
decl
push
mov
mov
lock
addr16
and
les
pushl
enter
loope
nop
or
xchg
loop
dec
es
push
fisttpll
lret
pushl
stos
xchg
xorps
shll
ljmp
add
inc
sarb
mov
inc
jnp
xchg
cmp
call
inc
jae
lea
aaa
shlb
push
and
out
mov
dec
jnp
adc
bound
popa
xchg
lahf
dec
cmpsl
in
jns
sbb
mov
out
decl
pop
scas
pop
or
ret
dec
pop
scas
mull
bound
inc
pop
pop
inc
cmp
pop
cmp
call
enter
fwait
mov
enter
fucom
fs
jg
shlb
scas
mov
insb
xchg
adc
xchg
pop
call
int3
lea
pop
shrl
lcall
iret
pop
xchg
movsb
push
stc
xlat
push
sub
mov
jae
repnz
cmp
or
in
hlt
fdivrl
pop
sub
xchg
sub
sub
subb
push
enter
int
std
sub
incl
jns
add
or
cli
dec
movsb
std
pxor
lds
sub
ss
inc
add
xorl
push
cld
inc
pop
fcomp
ja
sbb
lcall
lcall
push
mov
sbb
cmp
inc
dec
lret
popa
mov
cmp
fldt
cmpsl
add
nop
rcr
lret
popa
movswl
shll
jmp
aaa
pop
cmp
sbb
adc
mov
es
cmpsb
jecxz
mov
shl
std
ja
js
pop
or
ds
xchg
cmp
pushl
jae
pop
cmc
xor
xor
cmpsb
inc
xor
inc
hlt
ret
mov
push
cmc
mov
push
jp
adc
inc
out
mov
pop
arpl
cmp
mov
incl
insb
push
xor
push
add
test
sub
jne
pop
xor
and
call
movsb
xchg
push
mov
fwait
rorl
sub
jbe
orb
add
rorl
add
js
jmp
cmpsl
fwait
xor
mov
addr16
pop
mov
stos
out
and
les
dec
test
inc
pushl
pop
mov
xlat
mov
cli
mov
aad
or
inc
rcrb
fwait
cs
decl
pop
or
cli
mov
inc
adc
push
xor
lods
iret
inc
cli
das
in
xor
bound
lcall
mov
inc
repz
sub
jle
xchg
inc
loope
inc
in
push
movsb
sti
adc
out
dec
sbbl
addl
xchg
mov
jo
pushf
test
fldenv
test
pushl
dec
fmul
movsb
xor
dec
cmp
jbe
add
sub
pop
or
int
rclb
ljmp
in
push
nop
das
or
cli
cmc
mov
inc
add
popw
lods
mov
jp
aad
incl
loopne
and
jg
repz
icebp
roll
cmpsl
pop
int3
pop
pop
push
ret
nop
pop
stos
shll
fdivr
test
repz
mov
jmp
pushf
xchg
fdivrs
imul
cli
fmull
in
call
in
aam
fmuls
adc
mov
inc
mov
pop
push
mov
lcall
sbb
push
push
test
daa
mov
rolb
or
imull
hlt
jmp
cmpl
sub
decl
pop
sahf
loopne
ret
xor
and
xor
outsl
pop
xor
push
bsr
incl
std
es
jmp
repz
pop
lahf
aad
lea
aam
test
inc
icebp
mov
incl
int3
fldl
test
notl
leave
mov
xchg
hlt
dec
daa
cmpsl
and
stos
arpl
std
jae
ja
cmp
jg
cmp
sub
mov
inc
pop
jmp
jmp
sub
notl
mov
and
push
dec
cs
xchg
sbb
and
ljmp
adc
adc
mov
dec
xchg
test
cmpsl
scas
jo
repz
call
pushl
mov
insb
xchg
gs
xor
ds
fcoml
insb
aas
aas
shrl
jg
movsb
xchg
pop
lcall
pop
cltd
mov
push
sbb
mov
in
pop
xchg
sbb
or
call
mov
mov
aas
add
inc
xchg
test
flds
imul
incl
or
mov
and
cmp
inc
repz
dec
adc
shlb
dec
or
push
push
pop
xchg
sbb
scas
testb
hlt
sub
test
movsb
jbe
xor
fsub
ljmp
mov
in
dec
lret
and
movl
fsubr
adc
iret
push
incl
outsb
cmc
add
mov
loop
xchg
mov
adc
cmpsb
jno
xor
xchg
sub
ljmp
and
negb
inc
mov
mov
xchg
pushf
jns
xchg
dec
dec
or
imul
dec
mov
push
pop
int
or
je
scas
icebp
loope
push
mov
adc
add
push
pushl
fidivl
inc
pop
loop
mov
rolb
sti
push
jg
test
push
out
daa
call
out
sbb
sbb
lcall
dec
mov
into
jb
adc
or
call
cmc
sbb
cwtl
pop
orb
mov
jecxz
dec
sbbl
dec
pushl
adc
dec
sbb
mov
mov
jg
xor
sub
subl
incl
mov
cmc
jp
lods
sbb
out
test
decl
mov
or
xchg
aas
pop
mov
add
adc
add
mov
mov
mov
jmp
ret
lea
and
ret
outsl
and
pop
int
cmp
outsb
xorl
incl
cli
dec
aas
and
dec
lock
fptan
inc
movsl
dec
or
push
scas
fisubs
sub
push
dec
mov
movsb
loopne
pushl
rcrb
dec
jge
aad
pop
aas
lcall
mov
lods
and
inc
push
push
push
or
jns
hlt
ljmp
sbb
into
daa
pop
xor
pop
pop
call
insl
push
mov
inc
push
shr
dec
add
dec
loop
xchg
push
pop
enter
xor
push
pop
paddb
inc
jno
sbb
sub
rcll
add
jmp
insb
cmp
sbb
sbb
pop
clc
cltd
mull
add
test
ret
jl
jns
pop
jnp
jmp
push
out
les
lea
sub
cmp
dec
inc
fnstcw
insl
lock
ljmp
push
ds
push
in
int3
inc
mov
jge
lea
ds
cld
je
inc
call
sbb
dec
test
adc
adc
push
cwtl
ds
cmp
fnsave
in
aad
sub
mov
sub
xchg
xchg
mov
pushf
sub
inc
sub
sub
iret
addl
mov
ljmp
stc
mov
cltd
jmp
mov
ficompl
and
loopne
mov
push
jl
push
cmpxchg
cmp
fsubl
pop
xor
mov
pop
sbb
int
std
std
sub
inc
mov
incl
dec
pushf
out
sbb
sbb
cmp
push
out
mov
mov
mov
lcall
inc
jg
push
imul
or
dec
xchg
addr16
icebp
sbb
ficoml
xchg
pop
mov
int3
jnp
incl
adc
les
daa
rcll
cmc
ret
push
sub
xchg
xor
decl
fidivrl
mov
data16
shll
pop
testl
push
js
push
cmp
lds
lret
xor
movsl
loop
fwait
pop
dec
pop
or
xchg
dec
xor
ljmp
xchg
pop
mov
push
aad
dec
bsr
pusha
stos
add
fstps
pop
test
std
jmp
lock
or
mov
mov
in
cs
scas
push
test
call
sbb
mov
rcl
push
movsb
push
xchg
popa
sbb
pop
test
das
mov
mov
adc
incl
mov
outsl
loop
rolb
mov
rol
adc
inc
jno
imul
push
cmpsl
cmp
repz
pop
pop
mov
addb
filds
pop
movsbl
pop
pop
loop
subb
jne
fucom
jmp
mov
outsl
mov
std
fmuls
push
dec
jge
add
add
ficoms
push
repz
mov
lret
iret
jg
rcr
lock
add
mov
inc
xchg
ss
sbb
ds
dec
push
mov
and
cmpsb
pop
pop
sbb
shlb
sub
sbbl
pop
push
push
cmp
in
cmc
sub
ds
pop
jns
sub
test
jbe
and
xor
adc
in
daa
out
mov
and
and
pop
cmpsb
call
and
mov
stos
data16
decl
sub
sbb
cmp
sub
or
cmp
out
pop
sbb
xchg
lcall
sbb
test
dec
jne
inc
inc
sub
xchg
out
fsubrl
push
aad
jmp
incl
jo
jecxz
negl
add
cmp
movsl
adc
jns
add
outsb
adc
jmp
xchg
mov
push
lods
and
sub
mov
jl
push
dec
sub
add
jmp
insl
test
inc
je
dec
or
fadd
scas
jno
iret
dec
mov
inc
iret
lea
test
decl
adc
aaa
mov
mov
mov
pop
aam
xchg
pop
xor
lcall
xor
icebp
andl
fcom
xor
aad
ret
add
leave
push
add
std
inc
ret
lea
cmp
add
fcmovnbe
mov
out
push
push
jmp
es
imul
pusha
cmp
add
mov
pop
ss
test
mov
incl
mov
aaa
add
jbe
or
loope
pop
scas
es
jne
fcmovu
mov
lods
mov
fnstcw
ss
lds
enter
in
sub
inc
aad
push
mov
sbb
xchg
enter
call
inc
jl
add
or
aam
loopne
pop
jp
test
out
xchg
fwait
push
xchg
iret
push
xor
decl
movsl
int3
repnz
into
ret
sar
rorl
ds
add
int3
in
and
fbld
sub
add
add
dec
mov
jp
xchg
fistpl
mov
cmpsl
sbb
and
aas
aas
adc
pop
outsb
cs
push
lret
pop
std
std
scas
lret
les
mov
sahf
dec
loopne
call
mov
out
adc
mov
cmp
push
inc
ja
lret
mov
sahf
jg
sub
push
push
adc
and
call
pop
shrb
dec
das
call
mov
sbb
leave
pop
loop
xchg
daa
mov
or
in
sbb
movsb
cmp
scas
lods
hlt
jo
xchg
mov
scas
lcall
mov
ds
push
in
jmp
mov
jmp
icebp
ljmp
cltd
neg
xchg
or
cmc
jg
add
adc
ljmp
add
hlt
addl
pusha
or
cltd
jnp
and
push
mov
mov
cmpsb
jg
add
push
mov
xor
loopne
push
mov
loope
je
pop
xchg
nop
inc
adc
aam
sub
push
test
lcall
fcoml
sbb
hlt
outsl
je
arpl
jns
mov
xchg
bound
idivb
dec
mov
pop
rorb
scas
jp
std
xlat
push
xlat
es
and
lds
ljmp
out
cmp
cmpsl
adc
push
jbe
pop
lahf
lds
push
stos
lods
sub
ljmp
js
lods
xchg
fisubrl
sbb
mov
xchg
jbe
in
gs
stc
push
add
arpl
push
pop
add
sub
or
push
int3
stos
dec
cmp
sub
repnz
jmp
mov
cs
sarl
loop
push
sub
jmp
push
call
and
lods
xor
dec
push
imul
cmpsb
jmp
ja
fldt
insb
adc
inc
call
mov
inc
mov
mov
or
pop
roll
ljmp
pushl
sbbl
daa
or
movsl
xchg
int
mov
mov
pop
mov
ljmp
push
dec
mov
sbb
sbb
inc
mov
xchg
sub
inc
jnp
icebp
testb
pop
or
call
jb
inc
int
pop
jbe
xor
int3
pop
rorl
pop
iret
jns
or
adc
aas
or
dec
mov
ret
stos
and
cmp
mov
jl
shrb
movsl
lods
out
cmpsb
sbb
jmp
cld
inc
adc
cltd
cwtl
movsb
mov
xchg
sar
xchg
add
xchg
mov
mov
ljmp
or
inc
les
rorl
sub
lret
mov
pop
into
lcall
in
lcall
push
imul
iret
add
pusha
ljmp
aaa
jo
and
mov
lds
add
in
out
gs
fwait
jae
mov
lcall
dec
lock
dec
add
int3
ficoms
mov
adcb
jo
addl
push
and
std
fdivr
ds
lock
push
into
addr16
push
pop
inc
cmp
in
addr16
inc
push
ja
dec
xchg
ret
mov
loopne
lcall
daa
std
lret
test
aaa
popf
or
lcall
xchg
pushf
lds
mov
jmp
inc
cmp
xchg
push
stc
jae
mov
cmpsb
outsb
mov
cmpsb
pusha
test
dec
mov
lcall
int
out
iret
test
xlat
iret
pushf
inc
push
std
cmpb
lock
add
cmp
push
jge,pn
dec
shrl
outsl
sub
mov
jae
sbb
push
popl
lods
pusha
adc
mov
xchg
jl
gs
iret
push
cs
cmpsb
es
add
xchg
fdivr
ljmp
sub
ja
call
lcall
sub
pop
xor
jmp
dec
pop
clc
sub
sbb
and
ja
movsl
sub
push
sarb
xchg
mov
decl
mov
loop
bound
hlt
xor
int3
aam
imull
dec
cli
fdivs
sbb
decl
dec
xchg
int
pop
dec
leave
pop
clc
add
outsb
scas
push
mull
rorb
test
push
call
xor
sbb
pop
in
jns
test
in
idivl
mov
dec
inc
stos
in
notb
decl
loop
je
int3
push
movsb
adc
mov
cwtl
fists
ljmp
clc
nop
add
sbb
lcall
test
mov
cld
pushl
out
xchg
es
iret
int3
lods
xor
jg
call
and
lods
and
sbb
nop
cmpsl
loope
out
add
popf
movsl
repnz
dec
sarl
add
incl
xchg
lods
or
lock
jns
xchg
mov
loopne
test
mov
push
adc
mov
inc
push
in
sub
xor
sbb
outsl
insl
push
cwtl
data16
fnsave
das
bound
ljmp
pop
hlt
mov
add
outsl
aas
push
adc
xchg
outsb
bound
sub
ljmp
es
or
dec
cli
cmpsb
and
stos
je
push
or
mov
mov
scas
push
push
cld
xchg
clc
or
repz
incl
int3
imul
push
cmp
pop
or
fisubrl
xor
pop
fsts
sti
lock
add
movsl
imul
pusha
stc
cmp
inc
ljmp
mov
decl
pop
cmpsl
fcmove
add
push
movsb
jp
mull
lds
or
mov
pop
ret
dec
in
mov
jmp
pop
sub
shr
lods
add
jns
clc
xor
add
mov
aad
mov
ljmp
or
inc
add
es
add
or
cmp
mull
incl
adc
and
jb,pt
and
mulb
xor
cli
jbe
sub
or
mov
incl
dec
fistps
fldenv
adc
pop
test
repz
div
jmp
clc
mov
dec
lods
push
js
bound
stos
test
dec
lahf
mov
shrb
mov
in
stc
ret
movsb
and
stos
pop
pop
mov
and
pushf
fcmovne
mov
idivl
insl
test
jmp
adc
in
loope
inc
mov
shr
lods
cmp
adcb
call
insl
xchg
add
adc
xor
fwait
mov
lahf
dec
in
hlt
test
pop
xchg
das
or
add
movsb
push
inc
xchg
inc
into
xchg
daa
fildl
gs
adc
or
sub
fisttpll
pushl
pop
loopne
jns
pushf
mov
iret
mov
pop
cmp
fadds
incl
and
idivb
mov
cli
push
inc
and
pushf
rorl
sub
push
decl
ljmp
loopne
jae
sbbb
mov
lret
cmpsl
add
stos
decl
add
pop
in
jb
movsl
push
inc
sbb
mov
scas
and
pop
mov
arpl
mov
jmp
jne
mov
lret
pop
mov
adc
xor
sub
inc
cli
lods
daa
call
hlt
fdivs
cmp
add
and
mov
pop
jnp
enter
add
lcall
mov
jmp
adc
jb
lds
cmp
xchg
adc
cmpsb
int3
in
pushl
popf
ret
xlat
inc
adc
lock
mov
movsl
ljmp
inc
cld
inc
pop
push
fwait
inc
jmp
jnp
hlt
pop
xor
sub
adc
ds
dec
cld
sbb
dec
dec
aad
xchg
pop
loopne
inc
jl
cmp
xor
or
ss
les
lds
stos
arpl
lea
pushl
sub
in
imul
daa
scas
jmp
dec
and
sarb
lea
ja
add
decl
pop
or
sub
fidivrl
sbb
in
aaa
or
call
out
fcom
enter
arpl
jnp
jnp
inc
cmp
and
mov
cmpsb
dec
jns
lcall
addr16
dec
repz
pop
ret
mov
or
jp
jmp
popl
jmp
call
mov
pop
repz
jp
out
inc
cmp
aad
sbb
lods
mov
sbb
incl
push
shl
imul
mov
mov
imul
sbb
ud2
stc
jbe
sbb
repnz
ret
js
repnz
sub
incl
sbb
sbb
daa
mov
lcall
imul
lcall
adc
xor
loope
jns
or
in
dec
je
js
sti
xor
loop
call
inc
out
ds
xchg
mov
adcl
lahf
xchg
lcall
ja
arpl
adc
stc
fsubrp
cmp
lret
sub
in
fadd
add
stc
divb
jno
test
call
shl
loope,pt
sbb
fisttps
lret
incl
int3
xchg
xchg
aam
mov
jbe
inc
dec
in
inc
and
push
sub
jbe
mov
cmp
incl
sbbl
mov
pop
inc
pushl
sbbl
jg
fistpl
push
iret
push
cltd
adc
rcrl
mov
mov
orb
cmc
inc
das
incl
arpl
add
cmc
xchg
les
mov
ret
sbb
decb
lahf
and
inc
inc
pop
or
call
lret
mov
cmp
hlt
lods
addr16
sahf
pop
xor
mov
pop
jl
jno
outsb
std
out
sbb
cmc
pop
addr16
decl
ljmp
int
dec
repz
decl
je
leave
jb
in
stos
push
pop
push
out
xor
adc
xchg
xchg
push
std
ds
push
sub
pop
cwtl
jg
add
incl
sahf
adc
icebp
lock
mov
dec
mov
imul
add
add
jnp
mov
imul
loope
lret
sbb
dec
imul
push
dec
dec
inc
push
add
loop
lods
into
sarb
pushl
add
into
ljmp
pusha
adc
scas
push
sbb
cmove
push
lods
push
pop
pop
imul
rolb
push
cmp
mov
push
mov
gs
outsl
adc
jmp
sbb
push
loopne
mov
or
sbb
cmpsb
jne
mov
mov
sarl
mov
ljmp
ret
mov
mov
addr16
pop
imul
inc
mov
lcall
push
or
stos
out
faddl
out
push
push
imul
push
in
sarl
cld
mov
dec
pushf
ds
call
pop
mov
and
out
xor
adc
inc
mov
loope
shlb
lcall
in
movsl
stos
imul
leave
mov
je
mov
jns
adc
adc
call
fimuls
jge
hlt
mov
shrl
sbb
and
fldcw
fwait
sbb
decl
xor
adc
mov
or
jno
nop
aam
adc
jmp
enter
incl
add
icebp
add
loope
sbb
inc
ficompl
pop
inc
incb
incl
arpl
fsts
daa
cmp
dec
xchg
xchg
mov
incl
pop
fistps
push
xchg
fwait
inc
addb
adc
push
sbb
incl
mov
sub
sub
inc
add
mov
scas
xchg
dec
mov
sub
push
insl
push
data16
mov
out
adc
movsb
loop
jmp
cld
pop
popa
lds
ds
push
push
pop
cli
adc
out
gs
mov
xchg
nop
cmp
enter
push
loope
pushl
xchg
popf
mov
fsub
les
ret
jl
clc
fwait
push
fisttps
incl
stos
stc
or
dec
ret
jo
jbe
or
push
inc
out
popa
jecxz
mov
aad
mov
jge
mov
shlb
fistpl
les
and
mov
add
cmpsb
fsts
call
mov
shll
adc
mov
lock
jbe
insb
pop
pop
andl
cmp
std
in
repz
cmpsb
sbb
ds
jb,pt
adc
mulb
stos
aam
hlt
arpl
repz
decl
dec
xchg
add
pusha
jecxz
gs
xor
mov
and
pop
mov
call
mov
fisubl
loop
push
dec
test
push
bound
inc
ljmp
dec
ljmp
mov
fistps
and
add
popf
ljmp
jbe
dec
mov
sbb
icebp
sar
push
cmpb
mov
enter
or
pop
dec
loop
fists
jmp
sub
push
and
pop
push
test
fnstenv
push
test
scas
in
jg
adc
scas
cmp
incl
sbb
jo
inc
fisttpl
stc
lock
push
or
mov
dec
jg
jmp
dec
jnp
jo
fildll
mov
xchg
cmp
in
mov
orb
incl
or
sarl
cmc
push
mov
pop
stos
hlt
inc
nop
dec
out
sub
jecxz
nop
iret
aam
dec
or
ljmp
xchg
mov
lahf
mov
bound
xchg
repz
popf
subb
push
insb
mov
adc
fs
icebp
imul
shll
push
cltd
mov
insl
and
int
popa
daa
repnz
inc
adc
pop
jo
mov
test
out
aad
test
pop
sbb
in
out
push
mov
minps
js
cld
lahf
mov
inc
fbld
insb
add
cmp
scas
imul
nop
lret
push
lods
test
jmp
int3
mov
or
xchg
fdiv
ficoml
mov
add
cmc
mov
cmp
xor
pushl
inc
lods
cmpsb
mov
out
xchg
jg
not
pop
repnz
jo
repz
mov
jbe
mov
cltd
and
dec
data16
push
jl
daa
mov
jmp
lods
into
ss
cmpsl
ljmp
sub
cmpsb
sbb
rorb
paddw
push
add
fcomip
jp
pop
shll
adc
in
call
push
sahf
adc
popf
xor
loop
jmp
ret
popf
ljmp
inc
fstpl
jmp
mov
notl
cmp
mov
add
cmp
outsb
push
push
xlat
xor
mov
rorb
xlat
sub
int
mov
push
sub
cltd
dec
mov
sbb
xchg
sub
stos
movsl
jno
cmp
repnz
push
clc
movsl
subb
iret
test
je
jno
test
call
insb
arpl
inc
dec
dec
ljmp
mov
cltd
adc
mov
mov
pop
pushf
in
mov
fistpl
sti
jecxz
pop
mov
pushl
adc
movsb
inc
sub
inc
loope
jp
out
pushf
adc
nop
mov
decl
lea
inc
es
sbb
stc
xchg
push
gs
fidivrl
and
push
cmpsb
movsb
cmp
out
adc
xchg
insl
jns
xchg
push
fmulp
sub
nop
push
mov
push
in
cmpsl
inc
push
aaa
loop
outsb
and
stos
sub
pop
adc
jg
cmpsb
mov
lahf
mov
in
lds
loopne
add
int
sbb
rolb
sbb
xor
jmp
data16
pusha
aam
ret
xchg
push
pop
mov
cmp
jl
outsl
dec
sub
or
inc
frstpm(287
ficoms
cmp
stc
push
cmp
shl
xchg
push
mov
jmp
insl
test
dec
jl
hlt
dec
das
leave
cmpsb
lcall
sbb
xorb
jle
jno
pop
lret
dec
sahf
out
and
ljmp
jmp
aad
lods
cmc
lods
ljmp
out
cmp
data16
dec
mov
das
cmp
inc
inc
lahf
mov
adc
adc
out
xor
xor
jecxz
decl
addr16
inc
or
rorl
into
adc
sbb
dec
mov
jle
dec
call
push
sub
test
cmp
std
push
pop
dec
mov
mov
jmp
mov
ret
push
rcll
mov
decl
and
pop
mov
popf
out
xor
iret
leave
cmpsb
adc
ds
xchg
jle
push
imul
out
xchg
fstps
dec
adc
lcall
imul
jg
int3
dec
push
or
pop
cmpl
xchg
xchg
jg
idivb
loopne
add
orl
mov
dec
int3
mov
enter
movsl
cwtl
lea
rorb
cmp
scas
es
jmp
sub
mov
fbstp
cmp
popa
bound
jmp
sarb
cli
push
ds
adc
cmp
arpl
insl
mov
jno
lock
rcl
jne
pop
fsubrs
and
lcall
and
mov
lock
sub
stos
cmpsl
jp
cmp
test
jmp
cwtl
cmp
ss
fwait
push
mov
fs
add
loop
decb
mov
ljmp
loopne
dec
mov
enter
cmc
and
jg
aad
cwtl
and
mov
xchg
inc
xchg
call
scas
and
push
cmc
out
lods
jns
popa
pop
test
sbb
shrb
adc
fldlg2
out
xchg
repz
mov
dec
or
sbb
bound
cmp
ljmp
pop
mov
insb
int3
ds
lds
sbb
mov
outsb
imul
add
call
add
ljmp
add
jmp
data16
ss
xchg
fistps
inc
add
mov
fildll
dec
pop
push
mov
push
push
stos
sub
cmp
push
imul
arpl
and
xchg
in
mov
ljmp
ja
add
add
test
inc
jmp
jmp
sbb
cmp
test
pop
dec
adc
jg
add
xchg
mov
xor
cmp
out
xchg
lahf
push
insb
xchg
push
sbb
pop
enter
das
stos
ror
xchg
xor
dec
jmp
add
cmp
imul
mov
mov
mov
jle
in
mov
jnp
jno
jmp
inc
push
loopne
mov
mov
testl
inc
push
mov
add
mov
push
inc
dec
inc
jle
pop
push
mov
fs
shl
ja
xchg
push
jnp
xchg
in
imul
adc
dec
mov
insb
es
pop
mov
xor
fs
inc
leave
fisubs
shll
sbb
mov
decl
dec
pushf
mov
lret
sub
pop
fisttpl
cmpsb
inc
and
xchg
in
sub
dec
leave
sbb
pop
sub
into
sbb
fcmovnu
xchg
pop
lods
pop
stos
inc
adc
ljmp
in
pop
loopne
std
push
or
push
cmpsb
xchg
mov
and
pushl
or
sub
sahf
mov
xlat
cmc
cli
xchg
test
outsl
mov
sub
bound
call
sub
sbbb
add
out
inc
ljmp
mov
sub
mov
in
idivl
jnp
enter
shlb
adc
jnp
pop
loope
push
push
fcmovu
sub
decl
popf
pop
pusha
cmp
cmpsb
jp
bound
cs
in
lock
pop
inc
xchg
or
sbb
incl
jae
inc
push
inc
xor
inc
pop
int
out
repz
xchg
mov
xor
pusha
add
pop
mov
lcall
sarl
std
xorb
popf
push
dec
push
mov
jb
nop
ljmp
pushl
mov
mulb
rolb
jle
fstps
mov
insw
pusha
dec
push
push
popa
mov
fcmovbe
push
and
sub
add
lds
pop
dec
movsb
ds
jb
es
decl
jae
test
pop
inc
xor
mov
push
adc
sub
xor
decl
pop
stos
pop
call
pop
push
outsb
jl
xlat
jae
or
test
scas
clc
test
mov
call
sub
sub
pop
outsl
dec
adc
cmp
jg
out
pop
jmp
lcall
test
mov
aaa
cld
les
shll
cmp
and
ret
fdivr
in
fs
andb
ret
data16
ja
outsl
xor
xlat
jecxz
mov
cmp
stc
sbb
sahf
or
test
lret
add
icebp
loope
sub
decb
jmp
add
pop
push
repz
aam
mov
in
adc
mov
xchg
jp
mov
push
stos
pop
and
pop
add
pop
fstl
rep
and
add
fidivl
incl
push
push
pop
sti
adc
pusha
or
inc
adc
push
xor
enter
ljmp
xchg
ret
add
lock
mov
rorl
lahf
jbe
jmp
lahf
add
jmp
fildll
dec
inc
leave
lods
or
out
in
js
gs
dec
lcall
push
add
pusha
or
les
js
sbb
aad
push
pop
das
mov
call
mov
xor
adc
or
out
dec
sahf
mov
sub
fcos
jl
jnp
xchg
push
add
fnstcw
push
adc
adc
sbb
data16
dec
lods
cs
fbld
lea
mov
jle
mov
pop
dec
nop
pop
fdivrs
lods
popf
add
jge
jmp
out
outsb
subb
mov
fwait
mov
sbb
jmp
loop
mov
sub
ljmp
ficompl
inc
clc
or
dec
outsb
mov
push
and
mov
cld
ds
mov
movsb
mov
push
mov
pop
lahf
cltd
sbb
repz
add
jl
cs
sub
iret
dec
and
int
mov
call
inc
add
adc
mov
cmpsl
inc
jne
cltd
out
and
sbb
sbb
inc
ss
adc
mov
es
lahf
fs
outsl
push
iret
movsl
addr16
jg
lret
xadd
jo
mov
lcall
shlb
test
mov
outsb
dec
xchg
xchg
clc
adc
mov
ret
inc
push
addl
jmp
sub
jbe
and
aad
inc
cmpl
xor
scas
pusha
jnp
cmpsl
dec
adc
adcl
jmp
mov
aaa
in
fnsave
ljmp
jne
xlat
sub
out
bound
pop
jg
insl
sub
adc
jg
jg
sahf
pop
lret
or
movsb
mov
jg
push
loop
sbb
and
inc
jno
pusha
push
push
pusha
aas
nop
cmp
dec
or
je
dec
ds
call
push
rclb
dec
xchg
pop
imul
aad
ret
lcall
sub
rorl
pop
lret
mov
das
scas
sti
and
xor
mov
push
xchg
test
add
xchg
rorl
sub
jmp
popa
insl
xchg
mov
xchg
jns
jmp
pop
arpl
sbb
les
fcompl
scas
push
and
adc
sbb
pusha
push
inc
sub
push
mov
inc
shrb
inc
addr16
lods
xchg
stos
jae
or
test
sub
fsubp
out
inc
pop
xchg
negb
push
push
and
dec
push
mov
icebp
push
pop
sbb
pop
je
jae
xor
mov
loop
xchg
sahf
popf
das
sbb
aad
lcall
push
mov
dec
jbe
aas
sbb
sub
mov
jg
or
mov
pop
imul
addl
aaa
xor
pushf
addr16
mov
lcall
idivb
iret
test
decl
push
cmpsl
mov
call
scas
enter
mov
mov
push
xor
popf
push
jl
xlat
lret
fwait
sbb
pop
xchg
sar
jbe
rcrb
sbb
push
push
repz
jmp
jo
out
rcrl
lcall
jo
mov
add
sbb
sub
push
lock
inc
imulb
adc
xchg
inc
mov
mov
dec
pop
push
out
int3
int3
cmp
call
sbb
sbb
jge
xchg
mov
add
push
test
nop
neg
cmp
sub
xor
push
pushl
add
in
bound
pop
xor
stc
mov
mov
push
repz
jmp
sbb
cmp
mov
roll
xor
dec
pop
inc
repnz
mov
shlb
shr
xchg
or
lcall
sahf
dec
cld
lock
xchg
add
dec
pop
push
ds
icebp
test
jmp
or
adc
jge
or
jmp
cwtl
mov
ljmp
mov
mov
mov
xor
aas
jp
dec
stos
decl
adc
xor
rol
in
nop
std
outsb
iret
mov
xor
stos
lds
neg
bound
jae
std
inc
fwait
test
mov
pushf
and
push
scas
push
jne
pushf
fxch
mov
call
inc
push
push
sub
push
jecxz
flds
fwait
popa
lods
push
cld
cmp
sbb
mov
daa
push
outsb
push
call
out
pop
or
mov
insl
xchg
hlt
or
stc
addr16
mov
mov
pop
or
call
test
rsm
jns
dec
insb
ja
cmp
leave
pop
dec
or
xchg
add
jmp
pop
push
mov
pop
cmp
add
or
jge
jnp
ret
cli
xchg
in
or
xor
pushl
and
push
pop
sbb
test
imul
adc
inc
adc
sub
inc
cwtl
cmp
lds
and
xor
lds
fisubrs
cli
cmp
mov
flds
jmp
cmp
int3
sub
add
mov
bound
imul
jmp
inc
push
test
jg
int3
repnz
test
adc
push
icebp
fs
push
adcb
xchg
ljmp
mov
cmp
add
pop
scas
mov
nop
aaa
cmp
pop
shrl
lods
in
incl
dec
sub
pop
pushf
shl
sbb
dec
repnz
mov
aas
cmp
pusha
pop
mov
test
xchg
and
mov
lea
cmp
jp
daa
ja
movsl
clc
jg
jb
or
orb
movsb
mov
add
fs
es
pop
sarb
pop
ss
decl
dec
int
in
es
rcrb
adc
rep
mov
dec
mov
dec
mov
push
sahf
push
or
mov
aaa
fcmovb
lret
add
enter
dec
xchg
mov
push
pop
dec
jb
sub
mov
stc
lock
loope
sbb
mov
sub
call
addl
push
or
jge
jge
cmpsl
mov
lret
pushl
imul
bound
jmp
and
push
ror
fwait
das
mov
loope
test
call
mov
sbb
mov
cmp
aam
out
add
jmp
es
mov
jecxz
aad
mov
jns
iret
lock
fcmovbe
js
mov
imull
incl
lret
xchg
cmp
insl
inc
cmp
jnp
dec
mov
shlb
decl
out
jmp
je
inc
xchg
inc
mov
mov
insl
pop
xor
cmc
jb
ljmp
cmpsl
mov
pusha
xchg
cmp
pop
xor
test
mov
pop
add
js
int
mov
adc
dec
and
dec
or
scas
roll
pop
testb
jnp
ljmp
repz
push
sahf
adc
xor
mov
xor
subl
sub
ljmp
jae
insb
scas
mov
incl
pop
aad
lods
xchg
fsubrp
into
push
dec
xor
popf
andb
push
sub
jae
mov
dec
fidivrs
jecxz
sub
data16
cmp
and
pop
xchg
sub
pushf
adc
sar
das
out
dec
ds
iret
adc
aas
daa
ja
inc
lahf
xor
lret
mov
sbb
aam
jne
and
not
incl
add
xchg
adc
xor
aam
inc
test
fwait
or
pop
push
jge
xor
decl
or
add
adc
test
leave
ds
fcomp
push
jp
bound
cmpsb
fadds
and
cli
lret
pushl
cmpsl
pop
adc
cmovl
ljmp
nop
cwtl
jbe
nop
push
cmc
xchg
sub
jg
pop
aas
sbb
lret
ss
cmpsb
xor
test
or
pop
in
cmpsb
pushl
cltd
neg
call
lods
lods
leave
push
dec
loope
ficompl
mov
fistpll
ljmp
aas
in
jmp
or
cmpsl
mov
nop
sysenter
cmpsl
push
lock
test
mov
xchg
inc
lcall
lret
fisttps
rorl
les
dec
mov
inc
popa
lods
stos
jo
sub
pop
sbb
clc
stos
sti
xor
sub
mov
cmp
dec
or
cmp
aad
cmpsl
jbe
sbb
out
daa
pushf
insl
jmp
sbb
aad
or
xor
sbb
jle
cltd
mov
in
mov
stc
les
incl
inc
cmp
je
dec
ljmp
ret
roll
mov
gs
dec
lcall
pop
fiadds
xchg
add
sub
sbb
movb
mov
sti
je
push
loopne
sbb
js
leave
mov
push
and
out
in
mov
sub
mov
out
inc
ljmp
adcl
fistpll
data16
push
ss
cmpsl
mov
sub
test
test
mov
js
int
fcoms
inc
sbb
std
mov
xchg
mov
dec
rol
and
push
outsl
jge
and
inc
xorl
rorl
jge
jp
mov
mov
fs
decl
fwait
sub
xor
sub
test
sub
pop
add
in
sbb
call
addr16
ret
data16
repnz
mov
sub
or
add
push
in
dec
jnp
ljmp
sbb
outsb
imul
aad
call
adc
jae
cmpl
cmp
incl
mov
pusha
cmp
pop
cmpsb
adc
mov
lods
mov
fsts
dec
adc
repz
cmc
incl
sub
jne
mov
loope
clc
sub
adc
sbb
mov
in
in
sub
imul
or
adc
or
and
dec
mov
hlt
and
cli
adc
mov
fwait
lock
pushf
jg
lcall
jbe
mov
shlb
dec
test
and
dec
xchg
cmp
adc
push
ljmp
dec
incl
cmovge
cs
lods
xor
cmp
mov
arpl
dec
push
push
inc
rcrb
in
adc
pop
mov
pop
ret
mov
fisubl
cmpsl
push
mov
push
jle
push
decl
mov
jnp
or
pop
push
fcoms
aaa
popf
loopne
xchg
xchg
pushf
sbb
pop
jmp
xor
dec
jae
inc
ja
jns
xlat
and
lahf
mov
dec
push
jns
or
enter
ljmp
mov
dec
xor
pop
movsb
xchg
ds
ret
shlb
notl
xchg
dec
cmp
push
pushl
mov
jecxz
mov
pop
adc
jo
xor
jmp
jmp
sbb
mov
mov
mov
push
sahf
cld
and
and
fdivrp
mov
mov
sbb
cmpsb
fsub
lret
jo
les
enter
xchg
mov
add
jmp
sub
repnz
fnclex
dec
dec
cmpl
sub
incl
jns
fcom
or
les
aam
sub
pusha
cmpsl
lret
pop
sbb
test
lcall
mov
sets
cli
mov
mov
and
cmp
daa
pop
popa
and
cli
je
mov
les
in
ret
incl
push
jb
xchg
push
xlat
mov
aad
ja
xor
or
push
outsl
jae
jg
insb
popf
in
add
inc
mov
sub
push
loop,pn
in
js
mov
gs
fidivl
xchg
pop
dec
test
clc
mov
pop
jbe
cmp
sub
xchg
negb
shl
inc
sub
inc
shll
mov
iret
inc
inc
dec
cltd
fsubrl
add
shlb
sbb
lods
xchg
ljmp
ja
or
push
mov
mov
hlt
addr16
sbb
push
outsl
inc
cmp
aad
mov
push
xor
fucomp
mov
push
cmp
loop
mov
dec
inc
jno
push
xor
push
gs
add
jg
stos
mov
jmp
sar
mov
loopne
js
xchg
bswap
add
mov
test
in
push
insb
cmp
decl
fidivrl
scas
jnp
call
push
sarb
sub
ret
inc
in
push
lcall
hlt
es
pop
das
push
cmp
ds
jbe
arpl
in
cmpsb
out
jns
inc
mov
call
leave
or
xchg
push
add
dec
sahf
and
fnstsw
shlb
gs
xchg
call
or
mov
lahf
mov
adc
ret
lret
fdivrp
adc
sub
or
jb
call
pop
andb
inc
hlt
jbe
lcall
lret
test
mov
call
jae
push
scas
mov
mov
out
scas
loopne
fldl
sbb
push
decl
dec
inc
cli
mov
mov
xlat
out
mov
mov
cli
lcall
mov
iret
sub
mov
shufps
sbb
cmp
push
shrb
inc
mov
jl
xor
pop
stos
pop
sub
adc
adc
xchg
je
xor
pop
push
test
ljmp
xorb
or
orb
mov
adc
pop
mov
push
pop
dec
lcall
jecxz
jmp
cmpsb
mov
clc
jo
inc
in
adc
pop
mov
jmp
sahf
icebp
mov
jp
xor
out
gs
inc
cmp
xlat
ds
dec
out
in
cmp
mov
addr16
dec
stos
mov
data16
mov
mov
mov
xor
scas
xlat
inc
ljmp
cmp
adc
aaa
dec
lahf
jo
ja
pop
push
pop
fadds
and
daa
rolb
mov
dec
mov
jge
stc
call
xchg
cld
cld
das
je
and
loope
push
shll
and
dec
daa
mov
dec
xchg
jmp
adc
jo
mov
xor
sbb
inc
cmp
addr16
es
sbb
push
mov
mov
push
and
xor
imul
dec
mov
and
incl
in
adc
dec
push
lea
mov
lea
sbb
ljmp
fcmovb
int3
xor
mov
xchg
pop
pushf
fdivl
mov
mov
dec
shr
dec
add
pushl
push
xor
mov
mov
cmp
jno
scas
decb
adc
push
dec
add
cltd
fdivr
stc
in
lret
insb
imul
aam
incl
lret
push
sub
ljmp
inc
dec
hlt
inc
inc
insl
push
xchg
popf
rorb
add
mov
call
setb
push
mov
mov
inc
sbb
xor
dec
std
out
mov
shll
aas
adc
xlat
orb
mov
add
test
fldt
xchg
int
xor
push
xchg
cmc
mov
test
mov
es
add
addr16
iret
pushf
xor
push
add
insl
jmp
cmp
mov
aaa
and
pop
shr
and
ja
incl
stc
or
test
dec
dec
jbe
dec
add
jns
out
mull
mov
jle
gs
jl
pop
ss
or
mov
adc
ret
ljmp
mov
ljmp
sbb
mov
rol
adc
out
push
and
jns
inc
mov
loopne,pt
push
incl
repnz
dec
fcoms
scas
shlb
pop
mov
fs
push
call
or
out
fcmovne
fsub
sti
pushf
jns
ds
mov
push
lcall
sub
mov
incl
xor
ds
movsb
jnp
push
mov
test
in
xchg
out
jns
xor
call
pop
mov
jmp
test
mov
or
push
lea
decl
inc
inc
cmp
push
insb
xor
xchg
popa
cwtl
cmpsl
fwait
pusha
sub
fistpll
rcr
out
call
jae
mov
arpl
mov
sbb
mov
bound
insl
cmp
es
call
mov
aaa
jg
cmp
insb
pushf
hlt
ficompl
push
data16
jg
cmp
sub
jmp
fcompl
cmc
xor
jns
std
push
jne
mov
or
and
mov
jmp
mov
ja
lcall
call
push
jbe
sbb
push
pop
repnz
xchg
scas
inc
dec
lods
xor
dec
subl
lcall
pop
sub
pop
mov
mov
lahf
push
rcll
push
jns
aad
pop
popa
in
cmp
sar
call
mov
adc
sbb
xchg
push
or
inc
xchg
loop
jle
test
clc
xchg
sub
adc
call
leave
sub
mov
jno
push
add
lahf
into
dec
gs
mov
or
in
cmp
incl
mov
xchg
in
fcompl
into
imul
stc
imull
fldcw
xor
jl
sub
and
adc
adc
adcb
fldt
out
push
jno
mov
sub
ljmp
std
mov
test
rorl
pop
jb
stos
fs
pushf
push
mov
inc
mov
xor
lea
sbb
push
xlat
cmp
std
mov
loop
jecxz
decl
mov
lretw
rcrb
pop
jns
dec
xor
rorb
add
inc
jne
call
test
in
sahf
sub
xor
or
sbb
mov
jo
pop
jle
andl
pushl
sbb
sub
mov
or
xor
dec
mov
cli
jle
adc
push
jmp
add
inc
insb
sbb
or
icebp
jle
dec
loopne
shrb
jecxz
enter
out
call
push
jno
gs
cmpsl
loop
in
gs
setno
dec
dec
fcomps
das
pop
jl
and
icebp
aam
fisubrl
fnstcw
mov
aad
imul
addb
int3
lods
jmp
inc
xor
dec
daa
sbb
sarb
cmp
movsb
shll
mov
sti
pusha
sti
mov
aas
js
xor
mov
sar
jle
imul
mov
data16
lock
decl
mov
loope
adcl
xchg
or
sub
fadds
fiadds
or
mov
je
xchg
shlb
mov
lret
pop
lcall
decl
dec
dec
jb
inc
sbb
aad
pop
cmp
xchg
mov
loope
cwtl
in
and
es
add
push
jb
aas
mov
imul
imull
repz
not
mov
incl
adc
push
call
xchg
push
cmp
add
fisubrl
movsl
ljmp
mov
jl
je
mov
xchg
mov
lret
loopne
mov
adc
pushl
in
pushf
mov
cs
sbb
loopne
mov
adc
enter
push
fists
xchg
call
in
decb
out
je
lods
xchg
jne
cmpsb
add
jno
notb
push
je
xor
inc
clc
arpl
lods
bound
incl
and
movsl
inc
mov
dec
push
jg
aas
out
pop
xchg
xchg
in
push
int
decb
cmp
adc
mov
ljmp
ja
adc
data16
lcall
mov
lret
jg
addl
push
sub
ljmp
mov
cld
test
jge
cmp
in
xchg
fdivrs
enter
call
pop
lock
mov
imul
mov
and
scas
decl
xchg
adc
jo
adc
das
ja
and
cmp
lcall
out
adc
xor
lahf
xlat
mov
jo
bound
mov
decl
in
cmpsb
dec
pop
or
ret
addl
test
push
aam
push
xchg
jnp
mov
call
outsb
cmp
out
ja
cmc
xlat
jmp
fwait
push
mov
or
sub
notl
add
sub
mov
mov
pop
loop
leave
jbe
jecxz
xchg
push
sub
aaa
xchg
call
mov
lock
xchg
test
stos
and
ds
mov
sarl
incl
loop
mov
jns
fwait
dec
dec
lock
xchg
mov
cli
lahf
mov
jecxz
jmp
mov
test
jle
jp
addr16
mov
adc
aam
in
loop
inc
popf
cltd
loop
jmp
mov
cmpsl
mov
adc
icebp
mov
push
adc
and
nop
out
loopne
cmpsb
test
decl
lret
fcomip
inc
mov
cmp
jecxz
lock
test
and
sti
sbb
lcall
hlt
cwtl
and
pop
loopne
aaa
fmull
int
inc
mov
aaa
mov
leave
cmp
pop
arpl
mov
push
call
xor
and
inc
sti
mov
and
mov
call
dec
push
into
mov
jmp
mov
sbb
push
call
in
sbb
into
and
mov
push
cmp
lret
lock
jae
cmp
lcall
sbb
inc
sub
cmp
popf
sbbl
cld
push
decl
mov
pop
push
xchg
addl
lods
jne
sbb
mov
sub
cmp
cs
mov
xchg
sti
sbb
mov
fs
adc
mov
out
incl
mov
arpl
or
xchg
mov
clc
push
xchg
and
ljmp
divb
bound
inc
test
ljmp
in
jmp
mov
dec
pop
mov
sbb
inc
insl
int3
dec
mov
fldcw
icebp
stos
add
and
inc
push
fucomp
popa
and
push
enter
cmc
daa
jmp
sbb
sub
adc
incl
xchg
ljmp
inc
mov
in
xchg
and
inc
inc
lret
in
les
mov
mov
pusha
call
jg
dec
ret
ljmp
jle
or
iret
xchg
lea
ficoms
shr
jge
rorl
xor
scas
mov
decl
push
test
fld
out
dec
stc
in
subl
out
dec
mov
mov
popa
pop
pop
incl
pop
mov
pop
je
jge
pop
dec
loope
sub
insl
mov
shl
pop
lcall
mov
xor
mov
daa
or
out
push
or
sbb
hlt
pushl
aas
cmp
sbb
sbb
in
loopne
add
xor
mov
pusha
mov
push
lea
call
xchg
dec
mov
cmc
inc
aam
lods
jl
sbb
pushf
mov
mov
mov
call
sbbl
jo
jecxz
cmp
stos
pop
or
cmc
movsb
ficomps
jmp
enter
sub
in
xor
xor
inc
adc
lea
addl
filds
push
push
call
stos
or
ss
rorl
jp
sub
xchg
push
cwtl
mov
cwtl
adc
pushl
adc
mov
and
and
xchg
lcall
sub
jg
stos
ljmp
pop
mov
lcall
jecxz
mov
pop
jo
orb
or
pusha
pop
cmp
imul
inc
lock
mov
fstpt
fsubp
es
jmp
lock
daa
adc
test
add
push
cli
repnz
popf
iret
jg
loopne
mov
int3
mov
sub
push
inc
in
push
clc
ss
stc
iret
pushl
mov
in
jle
enter
ret
mov
xchg
dec
loop
add
fildll
ljmp
mov
enter
xor
mov
or
push
jmp
sub
mov
jmp
gs
pop
dec
jnp
jg
pop
into
xchg
dec
mov
popa
in
test
jl
jecxz
lcall
test
xor
push
cmpsl
dec
pop
sub
inc
mov
sbbl
mov
inc
pushf
inc
lcall
cmp
xor
add
mov
mov
cmp
add
cmp
ja
and
repnz
jge
filds
je
add
arpl
daa
sbb
xor
inc
icebp
setne
push
pop
mov
pop
lretw
pop
jbe
or
lcall
cmpsb
xor
lret
decl
or
outsb
imul
pop
pusha
lods
imul
pop
rol
sub
mov
fists
push
push
xchg
in
and
jb
and
call
in
jle
xchg
add
xor
clc
decl
leave
call
jecxz
pop
out
pushf
push
adc
scas
xor
mov
or
xor
xor
push
sbb
jnp
inc
add
outsb
lret
ja
and
inc
or
cmp
in
push
sbb
js
and
das
stos
pop
dec
cmp
jl
jne
pop
pop
mov
mov
rcrl
sar
pushl
popa
call
dec
mov
pop
fcmovb
lods
mov
shll
lret
jbe
cmc
insl
xchg
call
mov
dec
sahf
push
aad
add
lret
test
adc
lds
aad
dec
ret
mov
push
vpshaq
mov
imul
jge
add
imul
sub
call
jmp
or
sub
in
and
mov
popf
dec
insb
lock
stc
decl
jnp
out
add
add
sbb
pop
jl
add
adc
leave
lahf
negl
dec
xor
mov
ljmp
sbb
icebp
add
adc
jp
fimuls
add
push
adc
sub
dec
ljmp
movsb
mov
aad
dec
scas
add
or
jmp
fidivrl
ljmp
mov
mov
aam
sti
adc
inc
xlat
les
frstor
popf
test
lcall
call
lahf
xchg
inc
dec
daa
or
mov
xor
mov
dec
dec
cld
mov
xor
idivb
std
cs
push
xchg
pop
in
out
nop
andb
fisttpll
testl
fadds
xchg
push
out
lcall
imul
or
jl
add
xor
cmp
arpl
loope
call
es
ss
mov
or
pop
insl
mov
jp
xchg
leave
mov
movsl
pushl
xchg
repz
adc
mov
cmp
jae
pop
mov
outsb
jg
pop
in
sbb
and
rcrl
xchg
mov
movsl
ljmp
lcall
jnp
stos
repnz
ror
in
push
xchg
xor
aam
dec
enter
sbb
sti
lcall
in
jl
pop
sbb
or
scas
jo
mov
push
push
lret
test
jo
call
ficoml
or
pushl
fdivrl
loope
jae
in
mov
push
adc
cmp
in
push
adc
ljmp
jecxz
cltd
mov
test
shlb
sub
leave
subps
jge
data16
incl
adc
lds
inc
mov
mov
rcrb
push
dec
leave
jnp
dec
add
jmp
std
dec
lds
cmpsb
add
call
jmp
sbb
adc
jo
lods
jmp
call
mov
fmuls
cmpsb
test
gs
xchg
mov
and
sub
fldl
cmpsl
fcomps
in
mov
leave
push
mov
sbb
mov
mov
rolb
mov
inc
decl
addl
jns
cs
add
push
sub
aam
fstpt
inc
popa
add
inc
je
or
jmp
xchg
insb
testl
fdivs
dec
pusha
data16
inc
mov
pop
dec
sbb
movsl
or
imul
ss
out
lock
pushf
rolb
je
pop
std
mov
xchg
jle
pop
cld
fisttpll
xor
jmp
adc
push
push
imulb
inc
rclb
lret
xchg
jl
in
addr16
insl
ljmp
pop
xor
sub
ds
dec
loop
pushl
xor
int3
call
pop
pop
xchg
loop
pop
pop
rcr
pop
rorl
sti
pop
mov
cwtl
fwait
sub
mov
dec
xor
jmp
cltd
dec
xor
mov
ret
loop
mov
adc
add
xor
cmp
jecxz
inc
sub
aad
inc
je
push
inc
push
and
fisubrs
jmp
cmp
mov
jne
xchg
lcall
mov
push
inc
jl
xor
push
cs
jmp
or
xor
and
cmpsb
scas
outsb
lret
addl
lcall
or
or
cs
aad
add
and
mov
cmpsl
out
pop
mov
incl
pop
outsl
mov
repz
sbb
xchg
pop
je
fdivrp
adc
sbbb
ljmp
ljmp
gs
aas
add
ret
pusha
into
mov
sub
mov
and
mov
call
lahf
jle
lods
jmp
mov
push
sbb
push
js
sub
rolb
lcall
call
xchg
jne
mov
test
popf
adc
pop
js
add
lcall
or
scas
pop
icebp
jecxz
fdivs
sbb
repnz
out
xchg
push
out
or
fs
sub
call
xchg
dec
ret
add
fadds
xchg
push
or
je
jb
cld
lahf
cmp
mov
jmp
pop
popf
aas
push
cmpsl
repz
in
ja
add
push
ret
mov
mov
cmc
jmp
lcall
loope
push
addps
jne
mov
or
aas
sub
xchg
bound
std
rep
pop
cmp
mov
adc
lcall
inc
bsr
call
lret
mov
mov
lods
mov
jge
repz
lret
inc
mov
push
pop
pushl
gs
gs
das
cs
enter
pop
push
je
sbb
inc
ljmp
cmp
incl
or
and
mov
inc
xor
pop
fidivs
iret
jne
adc
mov
mov
adc
fwait
pop
int
lcall
int3
pushf
inc
mov
loope
lcall
divb
sahf
mov
data16
mov
pop
dec
jle
or
decl
cmp
jo
orl
mov
dec
popf
fidivs
pushl
and
cmc
shll
pop
in
loop
mov
mov
xchg
fildl
sbb
in
jb
repz
ljmp
adc
sub
out
int
jge
xor
daa
rol
aad
sub
add
cmp
mov
jmp
mov
push
aaa
out
mov
jge
xchg
ja
fnstenv
sub
mov
call
or
bnd
jo
sub
xor
mov
xchg
pop
mov
mov
ljmp
push
aam
push
ficoml
test
or
xchg
bound
pushf
out
ret
std
or
jmp
test
call
ret
idivl
mov
shrb
adc
inc
lods
call
pop
jecxz
mov
movsb
les
scas
decb
pop
fcomi
inc
daa
mov
bound
incb
hlt
addr16
lcall
mov
test
or
or
mov
and
iret
mov
loop
cs
clc
add
xor
mov
stos
icebp
and
xchg
mov
icebp
incl
adc
sub
dec
in
jns
xchg
jecxz
sar
incl
in
shr
daa
adc
fimuls
push
nop
aas
incl
add
jge
cltd
cmp
pop
ret
insl
inc
dec
pop
adc
add
lcall
loope
mov
pop
jle
dec
mov
test
push
jle
daa
pusha
jecxz
nop
and
mov
cli
into
pop
arpl
mov
jae
repz
test
lods
sub
pop
jb
dec
dec
xor
ret
aaa
sub
push
enter
sbb
xor
adc
bts
push
scas
push
or
outsb
mov
lret
gs
decl
xchg
mov
popf
test
addr16
fwait
push
loope
fsubrl
pop
jmp
cmp
sbb
dec
push
xorb
bound
nop
push
adc
dec
inc
lahf
and
sub
push
cmp
cmc
aaa
lods
in
dec
les
arpl
mov
ds
jb
pop
xor
ret
lcall
push
pop
or
gs
cmp
xchg
adc
mov
fsubs
inc
imul
mov
insl
lea
mov
cmp
sbb
inc
inc
shl
ljmp
inc
lods
out
out
jg
or
into
les
sub
add
xchg
and
push
pushf
popa
icebp
call
cmp
push
sbb
adc
mov
test
dec
fisubs
and
shll
subl
inc
cld
pop
add
or
mov
xorl
clc
loope
sub
inc
sar
jg
call
xchg
mov
popa
mov
insl
xchg
jae
mov
aaa
loope
mov
incl
adc
outsb
sbb
adc
daa
or
adc
xchg
mov
pushl
cmp
jb
sbb
int3
adc
jb
cmp
mov
jns
fwait
inc
lcall
xor
std
inc
sub
imul
repz
fbstp
jge
jecxz
rcrl
cmpsl
sti
incl
das
fcmove
and
sbb
dec
xor
movsb
or
pop
stos
rcll
fstpl
adc
cmp
push
mov
shrb
mov
mov
inc
xchg
mov
ret
or
and
lret
jmp
test
movsl
mov
cld
test
in
pop
pop
fimuls
gs
in
dec
cmp
dec
popf
push
outsb
popf
jl
inc
mov
pushf
mov
out
dec
dec
dec
push
dec
js
orb
sub
xchg
push
icebp
mov
test
mov
add
ficomps
frstor
mov
jl
and
pop
sbb
jns
mov
data16
call
stc
pop
xchg
sbb
pop
aaa
and
dec
pop
sar
lds
jmp
sti
or
ficompl
push
mov
popa
cmovge
insl
adc
loope
movl
mov
in
in
imulb
imull
out
adc
daa
adc
push
mov
in
icebp
or
sbb
data16
lahf
push
pop
xlat
test
cmp
adc
or
lahf
es
idiv
jg
pop
sub
movsb
jno
rol
xchg
in
lret
cltd
mov
add
sub
cli
cmp
xor
es
jmp
in
loope
xor
data16
xor
scas
xchg
pop
movsl
flds
fdivs
mov
decl
notb
mov
pop
xor
fisubl
fiaddl
xor
cmpsb
adc
incl
ss
cmp
dec
pop
int3
mov
sub
push
add
je
test
call
push
lods
jl
sub
push
ljmp
sbb
mov
or
mov
ljmp
mov
popf
cmp
cmp
jge
frndint
clc
std
in
imul
pop
adc
lret
add
ljmp
fmull
or
cmp
cli
mov
movb
out
push
fistl
jmp
pop
xchg
xor
mov
ret
cmp
mov
mov
xchg
lds
cmp
ds
and
push
aam
pop
daa
mov
daa
bound
fidivrl
pop
mov
sbb
incl
sbb
jno
sar
pop
cmp
lret
xchg
or
aas
cltd
jp
dec
and
adc
call
push
stos
jmp
lahf
subl
dec
out
xchg
dec
sbb
mov
into
icebp
bswap
xchg
sbb
mov
pop
stos
add
nop
adc
lcall
sub
xchg
dec
movsb
cmp
ljmp
jmp
mov
int3
enter
sarb
rcll
ds
inc
mov
add
mov
decb
sub
adc
xchg
loopw
lods
ud2
or
idivb
sub
mov
lods
lret
mov
push
js
das
mov
dec
incb
loope
lret
inc
loopne
scas
sub
fmuls
dec
imul
inc
fsubrl
jne
ljmp
cmp
add
pop
inc
mov
stos
les
push
push
mov
mov
dec
jb
vpaddb
dec
jmp
adc
fiadds
pop
jg
int
pop
mov
mov
pushl
mov
lods
cmp
and
das
dec
stc
sti
and
aam
mov
sub
sbb
aam
jmp
loop
mov
fwait
sub
inc
test
lahf
sub
cmpl
aaa
sub
ss
cmpsl
pop
add
fwait
decl
xchg
adcl
movsl
lcall
shll
push
imul
cwtl
or
inc
adc
movsb
lock
pop
scas
add
jae
jb
addl
aas
pop
ror
xor
sbb
enter
test
in
cmc
cld
lret
fdivr
lcall
adc
push
lea
push
jns
shl
insl
data16
jg
loopne
and
popf
add
and
popf
addr16
and
fcmove
add
pop
repz
xchg
lcall
adc
je
aam
mov
fistpll
cld
incl
stos
mov
sbb
into
inc
std
cmp
jg
push
cs
and
int
push
scas
jmp
sub
jmp
mov
adcb
pusha
mov
push
std
sar
jnp
xchg
inc
adc
decl
mov
jmp
gs
cld
xor
push
jecxz
out
inc
xchg
daa
jge
imul
inc
adcl
insb
insb
ret
jmp
adc
push
push
in
xchg
stos
fidivrs
aas
sub
push
icebp
jno
dec
movsb
out
ljmp
sar
jg
outsl
xor
ss
mov
inc
push
fwait
out
push
mov
inc
add
incl
add
pushf
and
jnp
sar
incl
lahf
adc
xchg
rcll
inc
sub
mov
mov
cmp
adc
cmp
stos
les
add
push
push
lea
iret
inc
mov
push
mov
jbe
ljmp
addr16
mov
icebp
sub
pop
mov
mov
mov
cld
lret
negl
push
pushl
cltd
cli
aad
cld
das
dec
push
cmp
ljmp
cld
loopew
je
hlt
rol
sbb
aas
xchg
ljmp
dec
je
adcb
divb
jg
lock
aas
inc
jb
je
ja
outsl
fidivrl
adc
call
mov
ud2
jne
xor
jle
xchg
sti
sub
call
mov
int
pop
cli
mov
sbb
inc
cmp
in
mov
imul
dec
dec
std
popa
cmp
js
xchg
incl
fsubrp
loop
sbb
pop
mov
xor
sub
jbe
popf
inc
decl
sbb
dec
mov
mov
xchg
jge
aam
movsl
xor
jge
ljmp
mov
inc
add
fsub
sbb
test
push
test
jle
jmp
lahf
mov
jmp
or
shlb
pop
xor
stos
popa
movsl
in
xorb
pushl
sbb
push
stos
jbe
and
fisttpll
mov
pop
adc
subl
jmp
es
mov
dec
sub
jl
ret
or
mov
fs
divb
cmp
xor
incl
adc
mov
or
popf
cltd
pop
imul
icebp
adc
je
das
orb
decl
xchg
xchg
jmp
in
outsl
inc
xchg
add
rolb
int3
ret
int3
push
stos
push
andl
pop
sarl
sub
decb
in
lea
xor
imul
adc
in
lahf
ljmp
mov
movsb
je
adc
add
mov
orb
outsb
add
ja
ds
arpl
inc
sbb
nop
jne
jge
lock
fwait
shrb
mov
mov
push
or
imul
jmp
jae
cwtl
je
fcmovbe
loopne
xor
add
mov
xchg
call
ret
jmp
dec
jbe
mov
icebp
fnstcw
test
push
or
clc
jg
jnp
mov
push
inc
inc
or
ljmp
cmp
mov
inc
fsts
sub
jnp
mov
push
ror
cld
lcall
in
leave
xlat
sub
mov
cmp
repnz
xor
inc
ljmp
xor
lcall
out
shlb
frstor
add
mov
fldcw
lcall
cltd
mov
xlat
or
adcl
xchg
scas
loop
inc
mov
ljmp
sub
jle
jl
mov
push
inc
inc
cli
mov
push
pop
lcall
or
shlb
sub
lea
sub
mov
mull
inc
jecxz
jnp
dec
cltd
popa
jge
das
xchg
mov
mov
ja
lds
arpl
fdivrl
call
shr
dec
pop
aas
xor
fld
mov
adc
loopne
or
repnz
push
ljmp
lds
roll
cmpsb
or
fst
imul
cs
sbb
rclb
add
push
mov
popa
gs
enter
xor
popf
or
adc
movsl
xchg
mov
int3
xchg
push
loope
pushl
ret
add
dec
inc
push
rcll
xor
int3
test
jmp
out
lds
mov
inc
add
sub
xchg
xor
sbb
inc
pop
mov
nop
xchg
mov
xchg
jge
loopne
pop
mov
inc
test
rol
outsb
mov
push
fsubrs
lahf
cs
daa
aad
push
xchg
stc
jmp
test
scas
outsl
out
xchg
and
mov
clc
ljmp
jne
ljmp
sbb
adc
iret
cld
xor
decl
mov
sbb
sub
outsb
test
pushf
imul
inc
lods
pushl
mov
bound
jae
adc
adc
lods
sub
xlat
jns
mov
gs
mov
sbb
nop
adc
sub
clc
or
inc
pop
lret
repz
incl
or
ja
jle
fldlg2
scas
in
xchg
inc
ljmp
jo
mov
mov
scas
xchg
std
stos
fmul
pop
jne
fadd
and
jg
mov
out
add
sub
lret
ljmp
iret
mov
scas
mov
pushl
jecxz
push
xchg
repz
jecxz
dec
out
lcall
push
jg
stc
inc
dec
arpl
lock
cli
mov
mov
adc
sub
stc
aam
adc
sbb
fsubrp
stc
roll
imul
push
popa
mov
aam
pop
jl
dec
icebp
jecxz
fldt
adc
bnd
lcall
or
pop
fisubrs
cwtl
or
out
bound
push
xchg
jmp
jmp
repz
jb
lock
and
pop
scas
sbb
sub
stos
imul
insl
lea
in
insl
xor
les
jl
int
push
ds
sti
popf
xchg
sbb
decl
in
repz
rorb
in
xor
xor
cmpsb
jge
out
dec
pop
lahf
xchg
mov
jmp
mov
sar
call
int
xor
pop
cmp
icebp
and
mov
dec
xor
add
cmpsl
push
lcall
xor
nop
nop
test
or
pushl
push
add
jne
into
rolb
aam
xchg
push
ja
js
adc
ret
mov
xor
pushl
jle
pop
sub
mov
pushf
ret
xchg
jl
add
dec
push
xchg
jg
cs
jecxz
shll
mov
inc
bound
stos
sbb
adc
inc
scas
pushl
jge
pop
or
inc
sbb
lods
fsubrl
xchg
jno
int3
test
dec
lods
js
xchg
incl
shlb
xchg
insb
xchg
int
mov
ljmp
mov
fs
pop
call
mov
mov
mov
inc
dec
and
inc
lret
add
jl
xchg
leave
rorl
dec
ljmp
mov
std
xchg
ret
lcall
jge
inc
pop
xor
in
cmp
icebp
inc
jg
dec
sub
jle
pushl
roll
imul
mov
repz
clc
mov
cli
hlt
mov
lcall
stos
fldt
xchg
cmp
pop
outsb
adcl
xor
imul
or
ljmp
loope
lea
out
test
aas
mov
mov
jge
fsubs
ljmp
cmp
mov
fistl
sbb
xchg
aaa
pop
xchg
pushl
setns
sbb
sbb
dec
and
and
mov
mov
xor
dec
inc
add
call
xchg
imul
cmp
pusha
cwtl
fildll
notb
adc
xlat
inc
stc
cmp
movsl
mov
mov
fdivrp
rcrl
ljmp
cmp
decl
pushl
ja
add
gs
push
test
mov
jne
xchg
mov
mov
fwait
jl
popa
enter
sbb
ret
add
xor
xchg
lea
call
adc
pop
adc
mov
cmp
int3
mov
dec
pop
lcall
aas
repz
xor
and
or
cmp
push
xchg
mov
cltd
inc
lcall
push
call
xchg
test
sub
sbb
xchg
movsl
cmp
es
scas
and
cmpsl
mov
test
fstpt
push
sbb
xchg
mov
mov
pop
arpl
leave
sub
jmp
mov
or
xorl
shlb
fmull
stos
icebp
mov
decl
cmc
mov
push
xchg
pushf
pop
jb
pop
test
pushf
mov
sub
mov
data16
aas
incl
cmp
aam
jbe
sbbb
or
xor
lret
mov
xor
inc
xor
pusha
aas
mov
pop
dec
jno
jmp
mov
outsb
ja
das
lcall
repz
fcos
andb
cwtl
outsb
or
out
outsl
mov
mulb
punpckhwd
outsl
mov
dec
fmulp
push
cli
mov
mov
in
shrl
sbb
jecxz
adc
mov
jne
and
jmp
stos
sub
jecxz
iret
and
push
push
es
xchg
mov
push
pusha
roll
fisubs
xor
call
pusha
or
mov
pop
dec
in
push
or
imul
jecxz
fimull
ljmp
push
mov
cmpsl
and
adc
into
add
sub
inc
dec
sub
insb
pop
pop
dec
sti
int
clc
decl
shrb
jne
lods
inc
hlt
sub
xchg
stc
fsubl
das
xor
subl
incl
pop
pop
pop
iret
lahf
out
insl
sub
std
in
mov
out
mov
or
mov
cmp
adc
xchg
mov
leave
ljmp
in
pop
cmp
dec
in
and
jmp
xor
or
mov
lock
adc
decb
cmp
decl
imul
aaa
ss
sub
in
cmpsb
fists
cmp
mov
adc
jno
insb
out
push
clc
dec
push
js
lcall
dec
repz
mov
mov
jns
lcall
mov
xor
push
mov
jle
andb
test
loopne
push
pop
mov
xor
cmp
fmuls
aas
outsb
pop
sub
jg
inc
int3
loop
push
scas
or
pop
bound
mov
out
cwtl
out
fimull
rolb
add
cld
daa
adc
punpckhdq
pop
dec
adc
dec
call
frstor
and
pop
push
adc
adc
add
lods
cmp
hlt
add
dec
pop
rolb
lods
dec
jb
fcmovbe
rcr
xchg
mov
fsubrl
decl
and
pop
jo
out
stc
lret
pop
xor
repnz
hlt
ds
pop
xor
mov
sub
mov
push
pop
aaa
xchg
fstpt
les
add
gs
call
push
push
daa
push
out
jl
push
shr
clc
roll
mov
js
loopne
cmc
and
jg
scas
jge
and
xchg
fidivl
arpl
popa
mov
fldl
out
in
call
inc
push
sub
xchg
jg
lret
filds
push
pop
xchg
xor
push
daa
rcll
push
push
mov
lods
dec
lcall
out
arpl
mov
mov
cwtl
cmpsl
rorl
add
pushl
xchg
adc
push
daa
push
or
mov
mov
addr16
lcall
imull
ret
jp
mov
push
cmp
add
adc
cmp
inc
pop
sub
jmp
push
push
in
push
sbb
push
test
sub
stc
mov
pushl
adc
imul
stc
ss
push
test
daa
xor
sarb
ljmp
out
sbb
xor
popf
std
or
xchg
fs
scas
mov
in
cld
push
jb
dec
sbb
mov
lcall
mov
jp
xor
or
inc
in
inc
ss
fsubp
push
dec
inc
pop
movsb
sub
cmpb
jl
incl
xchg
inc
int
insl
mov
aad
sub
loop
or
sar
and
cmp
jmp
mov
mov
mov
push
push
out
lcall
stos
inc
lock
fisubrs
insl
jge
movsl
add
es
cli
cmp
out
aad
into
pusha
adc
jmp
fisubl
inc
dec
loop
aaa
cvtdq2ps
mov
xchg
rcl
add
mov
lcall
rolb
push
mov
loope
fcmovu
ja
int
cmp
jae
bound
adc
pop
ljmp
adc
xchg
mov
lahf
sbb
and
push
loope
out
out
decl
or
mov
cmp
add
xlat
pop
adc
inc
ljmp
aam
mov
pop
pop
lcall
mov
cmp
mov
push
sbb
or
int
lcall
jecxz
xlat
adc
sub
cmp
mov
sti
lret
sarb
data16
stos
aam
mov
mov
jg
insb
sti
js
mov
rorb
shr
or
jg
icebp
aam
inc
xor
test
fstpt
cs
es
xor
ljmp
pop
and
jo
cmp
xchg
jl
jmp
out
and
sub
jb
ljmp
xor
sbb
xchg
cmc
inc
cmp
lret
pop
imul
mov
std
addr16
pop
movsl
jb
inc
jl
aas
int
add
xlat
sahf
add
lahf
outsl
mov
push
mov
sahf
pushf
lcall
aad
inc
aam
in
jnp
sbb
sbb
dec
bound
mov
mov
shll
ret
adc
imul
fbstp
cmp
jmp
scas
cmp
rolb
adcb
lods
icebp
inc
mov
fldenv
inc
mov
dec
pushl
add
lods
or
xlat
or
mov
mov
dec
mov
push
movsb
aad
mov
dec
xchg
rol
aas
ror
aam
sti
and
movsb
in
or
call
icebp
ss
xor
jle
insl
adc
push
shrb
loopne
popa
out
ja
ucomiss
incl
clc
xor
mov
xchg
push
fucomi
or
aaa
outsb
lcall
or
addl
sub
dec
ljmp
hlt
inc
repnz
mov
fcoms
xchg
shrl
cmp
call
inc
and
notl
pop
pop
out
insb
jle
xor
daa
scas
out
sub
imul
pushl
lods
inc
xchg
mov
sub
bound
push
mov
push
sub
lahf
testb
cmpsl
loop
adc
jecxz
dec
nop
lcall
stos
js
sahf
mov
and
mov
gs
outsb
imul
mov
daa
xor
std
xchg
arpl
mov
ljmp
mov
cmp
imul
dec
push
loop
out
and
and
push
pop
sbb
push
fs
cwtl
push
es
sbb
sub
std
and
push
cmp
inc
inc
sarb
loope
mov
xor
lods
xchg
bound
nop
ret
test
xor
mov
test
push
cmp
aas
dec
cli
fs
incl
ljmp
inc
xchg
iret
nop
rclb
outsl
mov
adc
mov
add
push
data16
pop
roll
sub
pusha
push
adcb
sub
lret
fdecstp
inc
es
fsts
mov
mov
mov
add
push
pop
jg
push
inc
lock
inc
mov
hlt
leave
mov
test
lcall
cmp
dec
push
jmp
outsl
jg
jg
mov
push
mov
pop
loope
mov
ret
jle
xor
sub
lcall
xchg
mov
es
jb
pop
jae
rclb
adc
sub
and
inc
mov
mov
jecxz
sbbl
xor
enter
ljmp
ljmp
pushf
addr16
inc
and
push
sub
cli
dec
addb
test
call
int3
scas
add
repnz
stos
rcl
mov
fs
sbb
mov
sub
jo
pop
xchg
loopne
xlat
mov
lods
sbb
adcl
cli
wbinvd
adc
dec
jl
sub
dec
test
mov
push
lret
jb
mov
pop
add
add
sbb
inc
and
inc
out
insb
sbb
cltd
inc
ljmp
xchg
sub
dec
mov
push
add
dec
cltd
aaa
or
mov
pushf
roll
and
jecxz
lret
lods
xchg
xor
frstpm(287
decl
sub
dec
insb
xor
arpl
dec
push
mov
inc
imul
incl
xchg
inc
xor
or
stos
mov
lcall
dec
pmullw
jl
dec
pop
rolb
cmp
push
push
add
sar
call
lods
add
aam
bound
popf
mov
jae
or
xor
cld
call
cwtl
test
push
inc
repnz
in
xlat
pop
arpl
jmp
decl
sbb
adc
or
bound
adcl
sbb
and
aas
mov
dec
and
mov
or
aas
insl
insl
pusha
mov
jns
jbe
push
aaa
jnp
pop
pushf
sbb
sbb
fnstenv
jl
sbb
xlat
in
or
pop
pop
call
mov
or
aas
sbb
cli
test
jmp
fdivrs
lea
push
xor
fldenv
jge
rcrl
jl
test
decl
jno
lock
out
cmp
pop
lahf
lcall
cwtl
sbb
push
jecxz
pop
xchg
push
sarb
dec
mov
fisubs
mov
decl
push
sti
repz
push
repz
subb
ret
mulps
dec
andb
push
mov
sbb
lods
sub
xchg
dec
fisubl
jmp
ds
seto
xor
mov
sub
popa
xchg
lret
sub
lcall
and
inc
dec
cwtl
aam
cmc
fisubrs
or
decl
xchg
dec
movhlps
enter
in
lock
or
or
pushl
dec
leave
xor
push
bswap
pop
sub
inc
imul
rorl
pop
mov
mov
dec
loop
jl
dec
jmp
inc
push
inc
pop
and
scas
mov
xor
std
mov
jg
aaa
fidivs
sub
outsl
adc
test
lcall
push
jno
jl
sbb
shll
inc
sbb
xor
and
push
jns
and
pushl
sbb
iret
fstl
aam
push
popa
sbb
pop
dec
fisttpl
lods
lods
bound
rolb
jecxz
adc
stos
std
push
mov
xchg
cmp
or
dec
in
scas
addr16
movsb
pop
inc
insl
push
fdivs
pop
adc
adc
dec
or
add
cld
push
iret
ds
jle
scas
push
mov
popf
aas
jne
jo
adc
repnz
lahf
xchg
aas
cmp
ja
mov
insb
aas
std
mov
add
xchg
cmp
pop
popf
adc
ljmp
jecxz
mov
xor
inc
fwait
roll
clc
repz
inc
arpl
xor
jae
mov
gs
ficomps
pop
call
jmp
inc
movb
out
jmp
decl
xlat
dec
and
popa
mov
call
shrb
ljmp
sub
in
push
jmp
mov
xchg
ljmp
xor
pop
push
push
adc
jo
pushl
add
movsb
dec
push
cmpsl
jnp
pop
aaa
add
out
aad
mov
adc
pop
adc
mov
inc
pop
mov
sub
in
mov
popa
mov
fisttpl
add
xchg
call
pushl
jno
cmpsb
jle
rcll
or
adc
cmp
cmp
add
ljmp
iret
fisubrl
out
int3
cmp
mov
adc
mov
jmp
lcall
ljmp
scas
cmp
test
mov
hlt
ret
inc
test
incl
stos
dec
notl
notb
xor
push
cltd
mov
jp
lock
inc
hlt
cmp
push
fidivl
jge
clc
or
fistps
pop
aam
pushl
inc
nop
cmp
or
dec
jns
fstpt
mov
xchg
hlt
testb
lcall
stos
int3
sbb
cmp
iret
sub
mov
jae
daa
add
repz
incl
mov
cltd
inc
jl
loope
aam
lea
pop
dec
push
scas
lret
add
icebp
rclb
jmp
iret
loope
pop
fidivrs
in
cltd
mov
das
test
int
xchg
adc
sar
incl
pop
sbb
divl
daa
mov
repnz
sbb
hlt
push
adc
inc
inc
fdivr
push
incl
test
jp
outsl
mov
sti
popa
xchg
jae
test
xchg
clc
jl
xchg
icebp
call
mov
arpl
pop
andb
sub
mov
sub
dec
pushl
sbb
cmp
dec
sub
movsb
loop
js
inc
and
cwtl
inc
aaa
mov
pushl
xor
add
xor
push
xor
xchg
cld
sbb
faddl
xchg
int
dec
lret
sar
mov
or
push
and
movsl
ljmp
cwtl
lcall
or
push
pop
mov
and
stc
fs
mov
bound
jl
mov
dec
loopne
push
push
movsl
ret
dec
xchg
ja
jecxz
xor
jb
jmp
xchg
dec
add
cmp
jne
imul
push
or
sub
push
cs
jmp
xchg
fidivrl
pushf
ret
pusha
jbe
out
je
lock
insb
or
arpl
sub
and
lcall
les
pop
jmp
mov
shrd
cltd
insl
movsl
fistpll
lcall
and
stos
add
dec
and
in
cmpsb
inc
add
add
imul
call
pop
int3
shll
sbb
or
push
test
cmp
inc
lock
repnz
hlt
es
push
in
fiadds
jo,pn
jae
fwait
icebp
cs
popf
add
orl
cmpsl
addr16
call
adc
push
cmp
push
cs
xchg
pusha
or
xchg
scas
pop
js
or
push
js
cmpsb
imulb
bound
call
lds
push
fildll
jb
rcr
cmpsl
sub
mov
xor
sbb
sub
mov
daa
xor
sbb
call
popf
inc
push
push
jns
cmpsl
xlat
in
adc
lock
jge
fucom
jl
dec
icebp
inc
ja
inc
xchg
mov
jmp
push
sbb
lret
and
jmp
cs
arpl
into
push
sti
jp
test
mov
mov
mov
lods
cmp
shrb
ret
jmp
out
xor
mov
mov
decb
scas
movsb
loope
mov
xchg
popf
scas
insl
stos
jnp
xchg
call
jmp
adc
sbb
pop
arpl
xor
push
int
inc
mov
lcall
pop
pusha
inc
pop
inc
gs
test
incl
xchg
pop
lods
cli
jmp
lods
pusha
iret
incl
push
rorb
cltd
mov
sbb
sub
push
pop
inc
or
jmp
mov
aas
push
or
cmc
inc
cmpsb
hlt
cwtl
sbb
int
icebp
shlb
pop
in
adc
sbb
mov
ja
fldcw
sbb
dec
lcall
and
fs
cli
adc
aam
pop
mov
leave
mov
xchg
push
sti
dec
pop
inc
push
stc
cmp
decl
fmull
jle
in
push
mov
arpl
sub
jae
iret
sarl
loopne
sbb
fnsave
mul
lahf
mov
cwtl
jle
mov
sarb
ja
cmpsl
push
ss
mov
and
or
call
sbb
pop
jo
sub
icebp
pop
mov
mov
fwait
jl
in
sbb
into
testl
decl
sub
sub
imul
push
clc
and
xchg
incl
dec
scas
fimuls
xchg
cmp
or
pusha
jno
mov
mov
pop
pop
push
call
cmpb
stc
mov
dec
push
lods
dec
test
inc
incl
mov
les
inc
mov
cli
mov
sub
xchg
inc
ja
ljmp
bound
ret
sbb
mov
push
sbb
js
push
adc
int3
sbb
jmp
mov
mov
pushf
dec
mov
dec
sub
jp
and
aam
dec
fldt
dec
cld
cmpsl
push
aaa
push
sub
mov
push
aas
fs
xchg
mov
and
mov
ljmp
hlt
iret
sub
jne
ljmp
aaa
call
repnz
push
xchg
shl
pushl
loop
loop
icebp
sbb
loopne
enter
incl
in
inc
enter
pop
and
incl
xor
jmp
in
lds
cwtl
pop
sub
pop
xor
inc
out
or
hlt
pushl
das
sub
aas
adc
sbb
pushl
pop
pop
stc
ds
int3
out
xor
xchg
fwait
push
stos
test
push
scas
mov
call
mov
aad
push
jg
xchg
mov
aas
aaa
pop
jns
movsb
or
cltd
cmp
aas
xchg
dec
xlat
mov
jns
movsl
mov
mov
call
mov
bound
aas
cmpsl
push
dec
mov
mov
aas
sub
cmpsl
out
push
xor
adc
jbe
push
fs
xchg
es
scas
rorb
jmp
lahf
add
mov
insl
je
sbb
stc
arpl
pop
stos
loopne
ss
call
mov
inc
std
or
pop
cmpsl
xchg
sbb
aam
lock
xor
cwtl
incb
aas
dec
call
xchg
xor
sbb
faddl
outsl
loopne
jmp
addr16
xor
mov
in
popa
push
cmpsl
insb
jno
and
mov
mov
outsl
mov
cmpsl
push
stos
test
cs
jp
cld
sbb
jne
ret
pop
cs
roll
inc
or
mov
cmp
xchg
nop
addr16
lret
in
sbb
push
jmp
fsts
iret
out
int3
test
dec
and
jp
int
loopne
in
add
fildll
lcall
scas
fsubs
call
jle
sbb
pop
pop
dec
movsb
cmpsl
jle
std
push
pop
fstpl
push
xchg
inc
hlt
pop
enter
xchg
pop
xor
sti
xchg
pushf
dec
bound
aas
inc
pop
cmp
cmpsb
cmp
push
adc
lret
rol
fs
loope
scas
pushf
xchg
mov
mov
dec
xchg
xor
outsl
das
leave
mov
pop
xchg
dec
push
lods
or
repnz
mov
lcall
jg
pop
iret
sbb
mov
mov
xor
loope
jo
and
pop
scas
xchg
pop
sbb
pushl
pop
outsl
jl
in
and
dec
mov
test
pop
aas
xchg
xchg
ret
push
add
incl
sub
stos
cmp
mov
test
mov
sbb
shll
pushl
loopne
sbb
fdivrl
push
ds
mov
pop
mov
inc
or
lcall
or
xor
pop
add
pop
cmp
je
mov
insb
scas
je
jmp
and
xchg
xor
inc
jno
lahf
movsl
divb
sti
cmp
jae
les
jp
lcall
xchg
lret
cmp
cmp
clc
nop
int
dec
sahf
in
inc
xchg
jle
add
xor
lcall
lret
adc
jg
rol
clc
jge
lock
test
je
aaa
add
mov
decl
jecxz
cltd
push
scas
pop
loop
push
sbbl
fmull
test
fnstsw
stos
fisttpll
mov
adc
push
insl
addl
mov
xchg
dec
jge
scas
lahf
mov
decl
and
std
mov
lret
enter
les
and
inc
das
leave
xchg
jns
cs
out
jge
cmp
xchg
mov
shll
pop
pop
fyl2x
cmpl
cmp
test
mov
jg
mul
lea
jp
cmpsb
rcrl
inc
and
sti
mov
testb
rcr
pushl
fidivl
ss
xchg
inc
mov
mov
pop
rcll
inc
pop
jmp
mov
mov
xchg
mov
push
pop
mov
xchg
xorb
jg
add
mov
dec
mov
sbb
inc
sbbb
in
loop
ret
int
mov
or
mov
fwait
lods
decl
cmovns
mov
scas
idivb
xchg
call
sbb
jnp
aad
fwait
hlt
jbe
ffreep
nop
xor
xchg
push
pop
jmp
lea
cmp
decl
cmpsb
insl
inc
sbb
lret
adc
out
es
mov
sub
xor
cld
test
push
rcrb
add
push
mov
ss
lods
xchg
or
orb
clc
ljmp
or
das
stos
sbb
cltd
int3
xchg
or
xchg
pushf
inc
adc
aas
sub
jmp
push
into
sar
cmp
incl
sub
mov
jmp
mov
xchg
adc
js
pop
fwait
or
cmp
leave
xchg
inc
sub
sar
pushl
mov
mov
movsb
jae
dec
fstpt
or
add
jb
movsb
pusha
mov
lea
or
inc
negb
nop
add
rorb
pop
pop
fcompl
jmp
ljmp
inc
scas
cmpsl
sahf
fistpll
sbb
mov
xlat
gs
sbb
in
push
jp
hlt
lcall
push
out
xchg
jge
sub
cmc
es
pushf
repz
and
fiadds
mov
pushl
mov
cmp
or
leave
or
xor
jmp
jmp
sub
decl
and
test
cmp
pop
fs
sbb
negl
gs
movsb
decl
sbb
dec
adc
movsb
inc
out
dec
idiv
jmp
push
rclb
ss
rorl
xorl
cmp
call
sbb
in
sbb
lcall
sub
lods
xchg
pop
lods
sbb
pop
sub
fwait
and
inc
add
incl
je
in
xor
subb
mov
pop
cmpsl
call
sbb
xchg
je
push
cld
jnp
int
popa
xchg
sar
sar
push
sbb
iret
push
adc
jo
cmp
les
sbb
mov
xchg
push
imul
mov
inc
add
out
mov
push
imul
add
mov
mov
pop
add
clc
aas
and
lret
inc
enter
ljmp
fsubs
xchg
push
add
add
sarb
pop
jo
mov
gs
dec
mov
push
mov
push
test
add
popa
jle
add
out
jmp
inc
dec
pop
adc
call
inc
cmpsl
inc
into
mov
jecxz
sub
movsl
dec
or
iret
lock
jecxz
icebp
in
or
lcall
dec
sbb
xchg
lods
and
push
xchg
fistpll
leave
sahf
xor
cmp
into
call
pop
loopne
out
pop
rcrl
addb
cwtl
aad
dec
fdivs
push
pop
sbb
ljmp
aad
jno
sub
jp
imul
mov
push
pop
loope
push
ljmp
testl
jbe
or
lods
repz
aam
dec
lds
mov
push
lods
sbb
loopne
stc
xchg
jbe
or
mov
stc
add
ret
loop
mov
sub
or
jb
jb,pt
or
cmp
add
push
adc
outsb
ljmp
orb
mov
jge
idiv
incl
inc
push
jno
xor
push
xchg
movsl
movsb
ljmp
mov
and
mov
and
mov
mov
xor
aad
and
or
fmuls
xor
mov
sub
xlat
insl
mov
sahf
push
and
and
shr
inc
lods
xchg
mov
cmpsl
decl
sahf
xchg
aas
fdivrs
pop
outsb
mov
jo
mov
inc
inc
pop
stos
out
mov
ret
sub
or
mov
or
outsl
adc
lcall
adc
daa
test
cmp
xor
out
mov
insl
popa
daa
dec
sub
lcall
repz
xchg
stc
jmp
rorl
loop
insl
xor
xor
pop
or
cld
jnp
xor
add
fdivrl
push
enter
outsl
or
inc
push
or
dec
cld
call
test
mov
shrb
addr16
das
jmp
and
fdivs
je
inc
push
dec
inc
popa
lcall
xchg
xor
sub
fidivs
sbb
pushl
inc
xor
push
jno
and
test
in
and
fnsave
cmp
sbb
xchg
mov
and
inc
mov
and
push
pop
popa
fs
data16
test
icebp
dec
fsubrl
push
add
and
clc
into
or
ss
loopne
loope
ljmp
cmpsl
stos
mov
jo
mov
cmp
bswap
roll
decl
push
incb
add
out
and
xchg
mov
cli
inc
mov
sarl
rcrl
jnp
cmp
push
popa
dec
arpl
jmp
mov
or
pusha
jmp
lea
ljmp
data16
pop
or
addb
mov
sbb
les
push
cmpsl
jmp
imul
ret
lcall
dec
push
scas
adc
or
outsb
imul
push
jo
mov
ljmp
sub
lea
push
sarb
inc
lods
sar
jge
dec
mov
incl
scas
lock
test
sbb
out
fs
or
jmp
adc
test
dec
xor
mov
jns
sub
test
sbb
ja
mov
inc
cmp
pop
in
sbb
incl
inc
sub
mov
ljmp
data16
jg
cmp
mov
aad
fidivrs
xchg
mov
adc
lods
in
aas
sbb
push
es
outsl
and
addl
imulb
jmp
in
je
scas
jl
movsl
out
nop
das
pushf
or
call
sti
mov
add
incl
jb
xchg
cmp
out
jl,pt
cmp
in
ss
sti
inc
inc
add
xchg
mov
filds
inc
and
subl
cmp
cltd
mov
je
mov
into
sub
ljmp
xchg
fldl
xchg
push
popa
mov
sub
call
xor
icebp
loopne
ljmp
xchg
push
repz
jge
inc
fwait
mov
and
push
dec
imulb
dec
push
hlt
dec
sbb
ljmp
ret
push
push
call
jmp
mov
scas
mov
mov
sbb
das
cmpl
movsl
mov
int
scas
in
xor
cltd
decl
clc
orl
fwait
dec
add
cmpsb
ds
mov
xchg
mov
and
std
fistpl
addr16
inc
ffree
shrl
pop
or
adc
popa
add
add
mov
lret
movsl
xor
inc
addr16
mov
mov
or
cwtl
jl
aam
mov
push
shr
sahf
loope
iret
ret
aam
cmp
ret
push
loop
adc
test
test
stos
mov
lcall
mov
mov
inc
sub
fs
cltd
dec
push
jle
mov
sub
in
pushf
loopne
pop
lret
icebp
pop
lock
out
add
stos
test
cmp
decl
pushf
ret
xchg
iret
sub
mov
pushf
ja
jo
push
dec
hlt
cwtl
push
stos
sbb
icebp
orl
mov
popf
ss
lods
fmuls
lahf
mov
inc
cld
js
and
clc
or
call
in
movsl
jl
bound
dec
movsl
popa
push
push
idivl
push
mov
call
mov
jo
or
in
dec
in
fisttpl
cmp
in
ret
xchg
xchg
je
or
mov
and
ljmp
adc
pop
shrb
cld
outsl
ljmp
nop
test
dec
or
push
xchg
inc
mov
cld
sbb
sbb
enter
push
jmp
xchg
and
mov
mov
enter
jmp
sub
sbb
dec
jecxz
scas
lea
and
cmpl
mov
hlt
cmp
jo
movsb
test
push
push
testl
ljmp
popa
pop
in
mov
test
push
movsl
jb
mov
mov
decl
fcomip
lock
cmp
add
std
add
aas
stc
and
or
jmp
popf
in
ljmp
mov
mov
cmp
xor
jae
roll
test
mov
scas
int
sbb
insl
in
and
add
xchg
notl
pop
inc
mov
fists
call
enter
cmpsl
jl
push
mov
int3
mov
pop
icebp
aas
and
push
dec
mov
rclb
add
xlat
jl
ljmp
mov
mov
mov
hlt
mov
incl
dec
out
cmp
js
setne
xchg
xor
jo
pop
shll
sub
lcall
fsubrp
xchg
push
mov
inc
fwait
scas
adc
ja
rolb
in
gs
loop
mov
repz
mov
jle
push
ss
dec
enter
popfw
sahf
in
pushl
mov
mov
popf
add
bound
lahf
cmp
cmp
sti
loopne
loopne
in
incl
fadd
mov
add
loope
ror
jg
shlb
outsb
nop
test
mov
js
jecxz
cmpsl
lcall
adc
fcomp
loop
and
add
out
sub
insl
mov
int
or
push
call
jbe
push
dec
adc
rolb
lock
pushf
fs
mov
gs
out
jmp
pop
iret
sbb
mov
lcall
in
in
iret
mov
ljmp
sbb
cltd
lods
je
pop
adc
mov
mov
push
jle
enter
or
pop
mulps
repnz
mov
decl
and
mov
addr16
out
pusha
dec
fnstenv
imul
shr
mov
jne
cmp
pop
dec
cmpb
mov
inc
sbb
xor
sahf
aaa
push
in
movsl
pusha
and
flds
lds
lcall
dec
jo
or
push
inc
loop
movsb
add
je
push
and
dec
fadds
sbb
ss
pop
call
xchg
mov
sbb
lods
insb
mov
iret
pop
mov
mov
repnz
inc
lea
call
dec
push
xlat
test
mov
fadds
inc
aaa
jl
xchg
sub
repnz
decl
mov
mov
sub
mov
cltd
in
ljmp
loope
aad
decl
mov
sbbb
outsl
and
ja
fs
cs
decl
mov
push
inc
into
xor
sbb
popa
jb
fldenv
imul
fistpll
sub
fadd
incl
xchg
pop
faddp
bound
sbb
mov
mov
cmp
hlt
popa
adc
lds
push
sub
sub
cmpb
xchg
jmp
insl
jnp
int
out
mov
arpl
test
les
movsb
lcall
mov
shlb
js
jmp
or
sbb
jle
daa
add
mov
mov
push
sar
call
nop
xchg
and
dec
notl
xchg
shll
stos
add
sub
out
decl
decl
loopne
cmp
push
daa
and
ss
jns
cld
fisubrs
into
lds
ljmp
les
aaa
mov
decl
std
inc
xor
sub
lds
pop
or
rorb
push
mov
sti
mov
nop/reserved
pop
mov
loope
jl
push
addl
fistpl
sbb
xor
pop
popa
adc
dec
mov
add
jne
movsb
ficoms
xchg
pushl
int
push
xchg
jae
dec
add
jg
aaa
or
inc
out
mov
enter
jmp
and
cltd
push
icebp
pop
sub
ds
mov
xorl
jge
mov
or
or
cmp
stc
pop
mov
out
cmpsl
lods
cmp
xchg
bound
pop
shll
mov
ud0
clc
decl
lret
insl
add
jle
test
add
jo
pop
cmp
jmp
cld
pusha
jmp
cmp
gs
popf
out
pop
js
mov
sbb
jmp
idivl
pop
bswap
mov
and
add
lret
cld
outsb
icebp
xchg
pop
push
decl
or
mov
pop
sub
lcall
mov
in
aaa
mov
mov
fisubrs
and
scas
mov
pushl
push
lret
push
pushf
roll
test
out
les
pop
mov
ljmp
sub
ret
sbb
push
movsl
lods
aaa
pop
shlb
test
jnp
mov
popa
lock
jns
inc
jns
mov
jp
xchg
in
ja
call
scas
lea
add
fstpt
call
test
lret
bound
and
adc
loopne
popa
push
aad
lcall
cmp
push
cli
lcall
xchg
arpl
jecxz
imul
jmp
outsb
xor
dec
int3
decb
test
cmovns
mov
jg
js
decl
mov
add
dec
xchg
mov
push
test
cmp
jmp
cmpb
sbb
call
pop
aad
mov
or
leave
mov
pop
xor
sbb
sub
in
lcall
nop
mov
scas
lret
add
loope
jge
mov
dec
fs
xor
cmpsb
jg
pop
mov
call
inc
sbb
xchg
sbb
inc
ljmp
stos
and
clc
outsl
addr16
mov
mov
xchg
movsb
mov
insb
fstps
inc
enter
push
std
xor
int
xchg
lcall
fcos
jns
sbb
mov
mov
mov
lahf
inc
jae
or
mov
lcall
loopne
das
mov
push
nop
es
lahf
pop
ja
fstps
mov
sub
lcall
icebp
push
insl
loopne
xor
xchg
xchg
aad
or
cwtl
int3
daa
jg
push
pop
pop
inc
and
inc
sub
mov
adc
rorl
subb
notl
pop
jnp
test
dec
sahf
outsb
xchg
repnz
push
dec
les
add
or
adc
std
mov
cmc
or
lods
enter
mov
xchg
add
movsl
pusha
popf
in
push
push
xor
icebp
orb
ljmp
inc
mull
std
mov
mov
bound
mov
xor
sarl
lret
dec
mov
dec
ds
xlat
loope
xchg
adc
insl
adc
jecxz
or
push
xor
mov
push
sub
pushl
xchg
and
push
pop
int
xchg
mov
pushl
xlat
mov
imul
jmp
ficomps
mov
pop
jns
xlat
xor
cmp
in
pop
std
shrl
jmp
out
mov
jmp
dec
ja
mov
call
xchg
rcll
mov
call
mov
inc
xchg
and
scas
mov
add
testl
xor
data16
in
pushl
cmp
cltd
xchg
mov
inc
mov
fists
fsubrs
outsl
mov
sahf
inc
leave
cmp
jmp
cmp
mov
cld
push
inc
stos
int
cmp
sarl
pushw
popa
jg
test
hlt
mov
mov
adc
sbb
or
shrb
push
das
in
ljmp
popf
es
or
mov
inc
lret
mov
das
or
loope
add
cmp
dec
jg
fidivs
xchg
mov
jo
mov
sub
incl
bound
ret
sahf
adc
sbb
sti
inc
push
test
into
and
mov
loopne
push
add
mov
fwait
pop
or
push
inc
rorb
rcrb
jb
sti
les
fsubrl
loop
sbb
idiv
and
lods
gs
pusha
add
ss
jb
jle
call
lea
mov
pop
inc
repz
cmp
mov
lds
cmp
decl
cmp
cmp
jne
int
fmull
sub
div
cmp
cmp
incl
mov
mov
adc
or
fisubrs
mov
pushf
adcb
pop
sar
ljmp
and
jno
aad
and
movsb
movsl
mov
dec
sub
cld
dec
daa
cwtl
xchg
aam
stos
inc
in
mov
outsb
jae
lret
mov
inc
mov
sahf
add
jbe
mov
pushl
shl
adc
inc
adc
fwait
xchg
jns
sub
pop
or
add
inc
clc
xchg
daa
into
inc
and
movsl
stos
jns
cmc
ljmp
inc
push
int3
mov
cld
popf
inc
incl
test
inc
pop
cltd
dec
icebp
addb
out
mov
xchg
vsqrtps
fcom
sub
test
int3
hlt
gs
jle
sbb
mov
xor
jmp
xchg
aaa
cmp
int3
rorb
xchg
push
add
push
fldenv
cld
mov
inc
sub
push
pop
xchg
cmp
mov
shll
add
dec
lea
sub
fcomp
add
pushl
clc
mov
repz
adc
repnz
mov
outsb
decl
arpl
test
and
clc
pop
add
add
outsl
lret
ljmp
out
outsb
test
and
xlat
cmp
pop
cmc
push
ja
dec
leave
psrlq
call
push
in
jne
pop
loopne
push
pop
movsl
dec
iret
sbb
xchg
sbb
mov
ss
call
mov
ja
mov
xchg
adc
mov
mov
aaa
and
fwait
addr16
add
mov
inc
ret
scas
dec
mov
adc
pusha
mov
xor
add
ljmp
dec
mov
xchg
add
mov
fwait
ret
inc
movsb
pop
pop
push
adc
push
mov
cmpsb
call
xchg
mov
mov
push
push
inc
jg
xor
mov
loop
cwtl
jp
lret
in
call
lds
cmp
insb
test
jae
into
stc
mov
ficoml
fnsave
jecxz
dec
fs
dec
pusha
sub
call
cmp
mov
lea
imul
sub
or
rorb
ja
lcall
xor
popf
arpl
or
jmp
adc
adc
push
add
out
movsl
and
cli
in
mov
loope
lods
movsb
push
or
pop
push
or
mov
xchg
cmp
push
out
sbb
pop
or
mov
subb
xchg
adc
das
or
inc
mov
jo
inc
fidivs
ljmp
imul
dec
lods
cwtl
pop
decl
data16
int
cmp
int3
call
cmp
loopw
mov
inc
dec
std
inc
mov
sbb
mov
pop
aas
adc
pop
cmpsl
cmpb
jb
lahf
setge
scas
push
sub
scas
lret
jbe
jne
jmp
xor
fnsave
inc
addr16
loop
test
jp
add
pushl
scas
inc
adc
push
fst
scas
xchg
out
sub
iret
sahf
push
push
jo
incl
push
mov
mov
daa
push
sbb
sbb
push
loope
sub
jg
fiadds
sbb
and
cli
repnz
push
cmp
fmuls
cltd
and
pop
loopne
jnp
mov
decl
inc
outsb
hlt
mov
test
rorl
add
je
loope
sti
xlat
ret
and
call
call
call
xchg
inc
sub
cmpsb
xor
test
inc
jne
push
cmp
xchg
cmpsb
adc
jg
cwtl
arpl
arpl
pop
and
aas
lcall
dec
jecxz
mov
push
in
mov
push
jo
cmp
pop
pop
loop
jmp
das
out
loop
leave
lahf
sub
push
push
inc
iret
xor
out
mov
mov
call
push
sbb
addb
notl
int
test
inc
push
sub
pop
f2xm1
daa
xor
decl
inc
xchg
jle
jmp
repz
push
std
out
sahf
clc
cmpsb
and
sub
add
or
jmp
mov
fs
mov
notb
leave
sbb
dec
mov
jae
or
push
pop
or
ljmp
dec
lret
pop
test
ficompl
test
jno
lods
mov
and
jne
cmp
decl
adcl
push
sbb
sbb
in
dec
add
jae
shll
lods
jmp
pop
ret
fcoml
xchg
or
addr16
mov
fsts
jmp
adc
cld
fsubrl
jne
jg
sbb
fucom
pop
mov
in
test
rcrb
ja
stos
lcall
call
or
dec
divb
outsl
sub
rorb
shlb
pop
ljmp
in
mov
adc
sub
inc
out
mov
sbb
mov
scas
pushl
or
gs
out
loopw
xchg
mov
loop
nop
scas
nop
sub
call
mov
and
push
orb
fistps
shrl
sub
xor
jle
dec
mov
loop
pushf
cmp
loop
pop
out
imul
movsl
or
mov
sbb
in
pop
pop
jb
call
pop
andb
lods
repnz
stos
push
jmp
adc
andb
mov
sbb
xchg
aad
fs
sahf
movsb
outsb
ljmp
subl
jge
popf
xchg
pushf
and
enter
push
inc
clc
push
jecxz
pop
adc
sbb
pushl
push
push
mov
orl
jns
hlt
xor
sub
je
sbb
lock
jmp
and
cs
stos
push
in
sahf
cs
mov
ret
fdivrl
adc
scas
enter
jne
and
jmp
mov
test
idivb
jb
mov
out
jb
and
xor
jmp
xor
leave
les
inc
in
test
sub
shr
sbb
sarb
jg
add
jge
mov
out
or
int
inc
jne
outsl
imul
dec
adc
mov
cld
movsb
sub
dec
cmp
jnp
pop
xor
ljmp
pinsrw
mov
out
stos
rclb
adc
mov
and
cmpsb
or
pop
and
pop
fistps
in
dec
xchg
pop
test
divl
stos
push
or
sub
mov
add
mov
test
repnz
call
es
movsl
jnp
imul
leave
sahf
jbe
repz
mov
lcall
inc
ja
addr16
add
sub
rcrb
fisubs
sub
adc
lcall
lahf
loop
sbb
sarb
mov
mov
aad
movsb
xor
aad
ljmp
cli
dec
out
sti
div
add
call
cwtl
xchg
mov
mov
jp
decl
fs
xchg
jl
push
cmp
test
icebp
sbb
mov
adc
lock
sub
popa
icebp
sub
int3
aam
decl
add
pusha
mov
dec
dec
idivl
xchg
mov
dec
pop
shll
call
and
lock
fwait
cmpsb
fbstp
xchg
lods
repz
mov
inc
sub
jmp
push
inc
inc
xchg
scas
adc
mov
and
mov
lret
jb
xchg
dec
xor
push
dec
xor
sub
jecxz
cmp
movsl
jl
fdivl
pushf
mov
fstl
stos
push
imul
inc
pop
call
add
cs
testb
ror
xor
lahf
pop
sarl
mov
decl
dec
test
rolb
outsl
cmpsl
hlt
leave
add
adc
sbb
push
add
xchg
decl
sbb
lods
pop
inc
icebp
fs
push
cmpsb
and
pushf
push
mov
dec
mov
loope
jo
popf
movsl
call
adcl
hlt
loope
stos
imul
xchg
pusha
add
push
pushf
jne
xchg
enter
ljmp
rcrb
faddl
mov
xchg
adcl
push
mov
insl
in
xchg
push
fwait
ret
lcall
hlt
loopne
outsb
in
adc
std
dec
stos
test
mov
add
out
cmpsl
cwtl
cmp
incl
std
push
int
mov
xchg
cmpsb
cwtl
shl
lock
sub
int
push
roll
leave
es
ljmp
mov
sbb
into
xchg
cmp
sbb
xchg
jo
mov
pop
or
push
mov
jmp
inc
dec
xor
mov
or
ja
mov
sbb
inc
daa
dec
lds
ljmp
sub
ljmp
mov
test
sub
call
mov
stc
cwtl
pop
xor
in
aad
loop
dec
mov
pop
ret
dec
dec
aaa
xor
sti
lcall
jmp
fcmovbe
jmp
outsl
mov
push
sarl
mov
jmp
incl
mov
and
imul
in
in
add
jo
pop
adc
popw
sub
std
enter
dec
scas
sbb
fcoml
orb
loope
js
ficoms
sti
push
cmpsl
cmpsl
cmp
mov
insl
pushf
cmp
ljmp
insb
xchg
pop
xchg
stos
push
sub
xlat
mov
fadds
fisubrl
pop
dec
and
iret
out
incl
stos
leave
test
les
idiv
lods
mov
fdivrl
mov
mov
dec
clc
cmp
jo
add
xchg
mov
adc
pop
andw
fcmovb
mov
push
jmp
rcrl
inc
xchg
mov
push
sbb
sbb
inc
es
aad
or
inc
jne
test
cmp
xor
pop
push
xchg
pusha
dec
pop
in
xor
cmp
sbb
cmc
cmp
mov
repz
cmp
sub
ljmp
cmc
jl
jp
push
sub
addr16
pop
jae
cmpsb
stc
out
jae
popf
lcall
popf
repz
xor
imul
adc
call
aas
or
lods
scas
jno
cmp
shll
cmp
icebp
std
pop
ss
fldt
call
xor
or
int3
dec
movsb
lds
out
dec
adc
adc
incl
sub
lods
pop
inc
sub
lret
mov
push
pop
inc
sbb
cmp
push
sub
xchg
stos
int3
call
test
addb
jne
dec
adc
bound
cmp
js
hlt
fs
pushl
mov
push
xor
iret
mov
push
loopne
in
push
shlb
jg
pop
jg
clc
loope
movsl
adc
icebp
dec
mov
loop
xlat
add
sbb
jecxz
stc
pop
les
decl
pop
daa
mov
add
push
sbb
pop
das
imul
arpl
mulps
sbb
js
ret
add
sub
cli
stc
pop
cld
jmp
jmp
dec
push
pop
in
mov
inc
es
push
adc
adc
aad
xor
sub
stc
and
add
incl
jno
mov
xchg
push
jg
mov
sbb
ja
movsl
inc
aad
roll
and
out
add
incl
mov
insb
mov
fildll
incb
mov
into
outsl
xchg
loope
sahf
shrl
arpl
std
sub
xor
ret
mov
jns
dec
ds
xor
sahf
mov
cmp
cltd
lock
sub
sahf
aas
xchg
push
lods
inc
xor
push
and
call
pop
out
shll
ja
adc
mov
push
sbb
or
ljmp
lret
pop
push
call
mov
xchg
lea
in
loop
inc
dec
in
mov
fwait
outsl
test
call
adc
add
cmp
jge
pop
mov
xchg
out
ss
scas
mov
jl
sub
xor
daa
rcl
mov
xor
jp
or
mov
test
loopne
push
or
mov
push
out
jmp
outsb
scas
pusha
mov
bound
scas
lcall
dec
xor
dec
sbb
imul
pop
cmp
loope
pop
ds
push
testl
jae
orl
jmp
js
pop
cld
push
adc
mov
xchg
inc
fisttpl
call
mov
cltd
ror
push
mov
or
fiaddl
cmc
in
in
jae
movsl
repnz
mov
jmp
mov
insb
inc
pusha
out
out
mov
adc
mov
pop
or
call
push
dec
jl
add
or
pop
insb
dec
sarb
xchg
xor
and
inc
dec
sbb
decl
mov
int
push
mov
push
push
dec
sbbb
inc
bound
pop
mov
sub
mov
je
add
fildll
imul
add
cmpsl
cld
add
rorl
add
push
cmpsl
in
int3
call
push
fs
push
mov
inc
arpl
shll
add
xor
sub
mov
decl
xor
pop
mov
rcrl
mov
lcall
mov
sbb
call
rcl
loope,pt
gs
add
push
repnz
or
outsl
in
ret
add
mov
nop
ss
imul
sahf
push
push
xchg
es
mov
and
rcrl
jne
int
dec
pmulhuw
decl
pop
divl
xchg
cltd
sub
ret
aad
xor
shll
ds
stos
daa
das
clc
fdiv
loope
push
mov
decl
fbld
por
push
jecxz
inc
add
mov
cld
jae
jae
lcall
jb
pushl
or
inc
idiv
dec
nop
movsb
xchg
mov
inc
mov
mov
fists
mov
pushl
loope
daa
pop
add
out
xor
enter
push
or
daa
fcomi
sti
jnp
lret
imul
rcll
mov
mov
and
xor
push
je
scas
mov
sbb
jmp
dec
adc
aas
xor
test
dec
adc
inc
pop
mov
into
cmpsl
ss
scas
and
aam
decl
adc
xor
dec
je
loope
xchg
sub
lods
je
repz
je
fldt
inc
mov
js
pop
jge
mov
add
cli
decl
cmp
mov
mov
into
cmp
push
jl
inc
dec
xor
incl
mov
lods
js
pop
or
or
fisubrl
mov
out
cmp
les
push
dec
mov
popl
loopne
pcmpgtd
mov
mov
std
mov
pop
mov
jmp
out
and
lcall
mov
mov
lret
adcb
fidivs
jns
push
push
mov
testl
sub
cmp
bswap
mov
repz
xor
aas
adc
pop
ljmp
pushf
mov
and
pushf
sarl
inc
das
nop
popa
rcr
testl
aas
and
stos
cwtl
decl
loope
cmpsb
stos
jl
xchg
ss
bound
and
and
insb
stc
popa
lea
and
lcall
add
sbb
ljmp
fimuls
push
cmp
repz
pushl
jmp
mov
in
clc
cmp
bound
sub
sub
sti
repz
mov
pop
pop
xor
test
or
cwtl
lods
mov
pop
movsl
cmpsb
movsb
fwait
lcall
jno
ret
in
shrb
pop
inc
xorb
sub
push
stos
mov
arpl
pushl
mov
or
leave
cmp
sbbb
xor
dec
mov
mov
lcall
xchg
rcrl
push
in
inc
push
minps
insl
push
lds
fs
adc
call
jmp
stos
iret
mov
repnz
cmp
fcmovbe
fwait
jne
inc
or
lcall
call
aas
mov
scas
xchg
mov
arpl
daa
and
in
in
fimuls
inc
sar
decl
nop
mov
mov
push
loop
cmp
nop
shr
loopne
loop
insb
push
sub
mov
inc
sbb
jmp
out
push
sub
cmp
push
mov
jmp
scas
subb
mov
push
sti
xchg
xlat
xchg
cld
cli
imul
cmpsb
sub
jbe
sbb
cmc
and
push
or
sahf
loop
data16
sbb
ja
jge
popa
decl
jle
or
sahf
shrl
iret
mov
push
adc
cmp
jmp
and
xchg
dec
pop
inc
jecxz
or
xchg
jle
bound
push
add
lcall
xlat
xchg
adc
aam
int
mov
jbe
pop
aam
icebp
test
sub
dec
pop
call
jge
hlt
lock
cmpsl
cmp
repnz
fiaddl
inc
sahf
inc
lods
inc
xor
lods
aad
incl
aam
lds
inc
sbb
or
inc
pushf
shll
add
xchg
ds
lods
adc
out
cltd
cli
pop
mov
adc
es
dec
loope
mov
popf
xor
es
cmpsb
test
call
pushl
or
and
jp
push
xchg
inc
icebp
and
in
push
push
lcall
adc
lcall
rorl
or
clc
xor
adc
call
movsb
mov
popa
push
sbb
aaa
add
adc
scas
mov
cmp
pop
call
jno
push
or
scas
push
cmpsb
push
adc
orl
and
push
lahf
es
push
addr16
jbe
decl
mov
and
mov
nop
push
xchg
xchg
adc
push
in
aaa
push
stos
ljmp
cmp
mov
adc
mov
pop
idivb
jo
inc
popf
js
dec
jp
js
sti
mov
call
and
xor
fsubr
lahf
mov
xor
addr16
fimuls
mov
sub
scas
pop
dec
iret
or
call
div
jnp
sub
shl
les
mul
jb
iret
es
int3
out
sbb
call
sub
push
cmp
int
pop
mov
xchg
test
in
fwait
push
loop
loope
and
idivb
in
insl
clc
jnp
fcompl
out
and
call
and
in
aam
xchg
jp
int3
dec
insb
dec
cmp
hlt
pop
cmpsl
cmp
ljmp
lcall
sbb
mov
adc
les
mov
push
stc
adc
dec
adcb
inc
dec
push
xchg
int
inc
gs
xlat
repnz
test
cmp
xchg
push
aas
cmp
sub
mov
decl
lock
fwait
xchg
push
xchg
mov
je
rcrb
loop
clc
pop
in
mov
int3
push
ljmp
push
jp
fdivr
jge
mov
push
xor
rorb
or
add
gs
jp
push
shr
incb
jmp
or
or
xchg
fmul
xchg
aaa
inc
sahf
cmc
fdivl
add
call
push
das
sub
cmp
inc
stos
repnz
jg
cmp
adc
mov
dec
es
jnp
stos
decl
cmp
inc
add
mov
arpl
jecxz
sub
sbb
stos
rorl
cmp
incb
lahf
subl
inc
data16
mov
mov
mov
mov
pushl
int3
cmp
xchg
sub
in
fimull
inc
adc
mov
xor
gs
pop
popf
mov
incl
testl
je
int
mov
xchg
mov
pop
cmpsb
out
inc
repnz
pop
xor
decl
add
insl
dec
mov
test
int
adc
cmpsl
pop
add
xchg
inc
test
xchg
push
mov
incl
push
add
push
fdivrl
cli
mov
mul
fnsave
ffreep
rolb
decl
lret
inc
testb
lcall
or
cmpsb
jge
lcall
decl
jo
cwtl
lret
clc
mov
int3
enter
xor
fidivrs
stos
stos
orl
decl
int
sub
stos
xor
orl
push
xor
jp
lcall
xor
xor
ss
addr16
push
jne
jae
popf
std
cmpsl
xchg
ja
lcall
cs
cmpsl
jp
sub
mov
shlb
mov
repz
jecxz
push
clc
scas
add
ljmp
jae
ret
lea
push
ljmp
jle
or
inc
push
in
popa
fdiv
scas
cmp
lcall
mov
lahf
mov
fldt
out
jle
push
lcall
xor
cmp
decl
rolb
sbb
sub
les
mov
mov
pop
add
into
xlat
mov
push
std
cmp
xchg
scas
js
mov
xchg
and
mov
inc
mov
and
daa
nop
push
mov
jb
xor
in
inc
es
jge
ret
or
dec
jno
xchg
fstl
inc
idiv
shrb
incb
sahf
inc
fisubl
adc
pop
pop
mov
jmp
in
adc
pop
sub
xchg
mov
dec
icebp
xor
fcmovne
pop
mov
iret
mov
dec
test
movsw
loopne
mov
sahf
xchg
loope
stc
dec
dec
or
xchg
cmpsl
mov
adc
cmpb
xor
dec
add
inc
les
fdivr
cmp
out
push
call
sub
into
cmp
or
arpl
in
addb
and
bsr
scas
sub
mov
sub
test
arpl
push
outsb
leave
dec
xor
and
rorl
daa
ja
pusha
xor
cs
xchg
popa
test
xor
addl
popf
push
cmp
sbb
add
jg
enter
pusha
pop
rcll
ljmp
or
jp
sbb
inc
jge
rclb
jo
mov
and
jo
sbb
mov
jmp
xchg
nop
xchg
in
adc
push
and
shll
decl
or
idivb
add
xchg
fdivrp
fsubs
test
mov
shrl
lods
or
hlt
adc
ja
mov
incl
adc
inc
in
push
xchg
int3
jle
pop
push
jp
or
sub
mov
fdivs
pushl
aas
inc
cmc
and
inc
pop
mov
stos
lahf
arpl
sub
mov
rclb
xchg
insl
push
jmp
aaa
es
cmp
in
sarl
inc
push
fbld
fisubs
fisttps
mov
and
jns
adc
or
aam
sbb
cmpsb
and
inc
rcrl
mov
inc
out
adc
stc
mov
mov
xlat
jns
push
push
repz
xchg
fidivs
pop
push
dec
sahf
and
out
xchg
enter
adc
jp
lods
repz
aam
es
hlt
rcl
data16
xchg
pop
or
out
decl
out
or
outsb
add
out
mov
add
sbb
adc
push
sbb
lcall
pushf
jns
mov
jmp
lds
sarl
xchg
jecxz
fidivl
lea
inc
cltd
ljmp
inc
mov
icebp
jno
or
mov
xchg
dec
leave
test
jmp
add
je
aaa
xor
sub
sti
cltd
inc
mov
inc
mov
dec
arpl
push
push
hlt
sarl
rorb
cmc
mov
ror
daa
dec
adc
xor
xchg
mov
lcall
adc
xchg
adc
das
enter
push
mov
inc
dec
pop
das
xchg
and
jb,pn
adc
fimuls
insb
flds
mov
in
dec
imul
call
ss
push
or
in
test
and
jne
jecxz
movsb
shlb
fwait
lods
or
scas
push
dec
popa
outsb
divl
aaa
pop
cs
out
sub
shll
lds
lods
push
jae
inc
outsl
mov
jno
pop
jmp
inc
popf
scas
mov
or
jmp
mov
xor
pop
mov
stos
pop
or
outsb
xor
lret
adc
pop
mov
fdivl
add
mov
ret
or
ret
in
testl
lcall
ds
lret
mov
rcrl
cmp
std
shlb
or
sbb
ljmp
cmpsb
mov
cmp
out
or
add
aaa
inc
mov
mov
add
jmp
rorb
gs
lods
cmc
mov
push
mov
mov
jle
cltd
mov
icebp
jle
test
pop
add
dec
sub
fnstcw
pop
sub
mov
cmp
pushl
outsb
into
popf
insb
cli
clc
sbb
pop
push
scas
dec
jg
dec
into
cmova
cltd
mov
sub
insb
and
cmp
cltd
pushl
add
sub
mov
mov
jg
add
xchg
cmp
xchg
mov
sbb
decl
ret
push
jno
cwtl
fildll
mov
mov
outsl
add
push
iret
cmp
adc
mov
decl
es
call
movsl
movsb
bound
decl
push
dec
je
jl
out
mov
pop
repz
xchg
aas
mov
dec
fcom
into
lret
push
jl
aam
sub
inc
add
jne
xlat
cld
push
scas
mov
add
sbb
xchg
testb
dec
xchg
lret
cmp
decl
fiaddl
jmp
les
daa
and
push
loopne
jp
mov
icebp
shr
mov
xchg
lcall
das
push
push
mov
mov
sbbl
jp
inc
cmpsl
iret
fs
mov
push
jo
ret
icebp
push
mov
push
cmpsb
das
sbb
insl
cmp
inc
cmpl
cmp
add
fadd
insl
inc
iret
mov
shrb
push
cmc
arpl
jp
mov
arpl
dec
mov
enter
add
fnstsw
jne
add
add
cmpsl
and
les
decb
ljmp
pushf
mov
push
imulb
and
adc
icebp
aas
aaa
movsb
dec
dec
test
repnz
addr16
jns
sub
jle
jp
lret
jg
mov
fucomip
clc
mov
decl
xchg
mov
adc
mov
fs
call
out
mov
out
fucom
imul
or
xchg
cmpsb
andb
mov
mov
inc
decl
push
or
push
or
je
xchg
inc
leave
imul
mov
dec
mov
dec
or
out
mov
mov
cld
xor
dec
fisubl
mov
stos
mov
decl
lahf
loop
mov
rorb
push
pushl
jmp
push
popa
add
or
out
mov
pop
iret
lret
das
sarl
mov
mov
cmp
xchg
mov
outsb
pop
push
push
fsubs
jmp
loope
adc
cld
dec
adc
inc
aas
cmp
outsl
dec
push
adc
insl
dec
fwait
pop
aaa
push
jb
push
dec
push
daa
jg
rolb
scas
jcxz
cmpb
clc
cmp
pushl
xchg
push
int
add
lcall
jno
push
add
mov
pushl
sti
add
cmc
jge
fstl
dec
jmp
pushl
adc
xchg
add
stc
sarl
add
pop
dec
lock
xchg
add
and
call
int
pop
mov
xchg
movsl
sbb
mov
call
aaa
nop
jecxz
cli
push
ret
xchg
aaa
pop
es
loop
ss
in
cltd
stos
test
fcmovnu
nop
inc
push
imul
add
adc
dec
xor
add
inc
xchg
jmp
and
push
stc
fidivl
in
mov
xchg
add
pushl
es
dec
mov
in
ficoms
cmp
rcrb
aas
mov
jmp
jb
xchg
jb
popf
das
enter
ret
mov
mov
loopne
aam
lahf
aaa
adc
sub
xchg
jne
test
call
stos
ja
xor
das
mov
lahf
ds
sbb
jbe
inc
rol
mov
lret
xchg
xchg
and
add
mov
pop
and
pop
pop
nop
out
sarb
pushl
sti
ljmp
mov
imul
in
outsb
aad
sbb
cmp
mov
rcll
nop
cld
adc
xor
sub
xor
cmp
dec
decb
add
cmp
incl
mov
adc
dec
cmpsl
and
add
cmp
outsb
mov
sub
push
push
push
jp
out
stos
or
lock
mov
in
int3
imul
mov
adc
in
addr16
cmp
pop
or
mov
gs
jno
push
test
jg
fidivrs
cwtl
fsubl
xor
dec
lahf
scas
xchg
pop
scas
pop
sub
pop
shr
inc
sub
mov
movsl
inc
scas
outsl
imul
jne
shrl
jmp
adc
xchg
es
push
adc
bound
aam
cli
xor
or
repz
pop
and
hlt
leave
cmp
stc
outsl
mov
cmp
pusha
or
sub
pushl
cmp
xor
rclb
stos
in
incl
aad
leave
jmp
xor
or
pop
fstl
dec
pusha
movsl
leave
lcall
bound
mov
das
scas
and
jl
leave
push
shll
decl
cmp
dec
mov
aad
xchg
call
clc
ja
add
xor
cmp
ja
ss
aas
sbb
sub
xchg
scas
sbb
cmp
cmp
cmp
imul
lret
pop
xor
lahf
mov
sub
sub
popl
outsb
sub
lahf
filds
decl
and
mov
bound
cmpsb
aaa
mov
sub
incl
sub
fstpl
push
push
jbe
pop
mov
aas
insl
xchg
ficoml
add
das
xchg
pop
ja
xor
mov
aas
and
inc
inc
sbbb
jmp
sub
imul
aad
scas
into
pop
adc
dec
mov
mov
lcall
mov
sar
incl
loopne
dec
cmc
in
and
mov
lods
mov
xchg
popf
cli
adc
imul
pop
xchg
lcall
xchg
popa
test
movsb
sbb
adcb
sub
loop
jb
ret
add
or
outsl
jecxz
xchg
hlt
decl
mov
lret
test
cltd
lea
decl
arpl
pop
loopne
shrb
cli
inc
xchg
imul
iret
addl
sti
or
aas
adc
mov
stc
or
cs
jg
decl
cmp
outsl
scas
shlb
leave
and
pop
mov
push
nop
mov
mov
call
sbb
jl
inc
jl
rcrl
jne
dec
add
lcall
into
int
cmp
shll
call
ja
das
push
rclb
cmp
and
jmp
test
mov
je
in
xchg
call
mov
aas
mov
jle
lahf
andl
fidivrs
lret
call
xchg
stos
push
pushf
xor
pop
mov
lods
call
mov
ffreep
hlt
sub
call
stos
fs
and
popaw
xchg
sub
jo
adc
test
xor
sub
or
incl
pop
clc
xchg
inc
pop
pop
pop
shlb
aam
inc
push
in
xlat
dec
lcall
nop
pop
mov
scas
pop
gs
les
sub
push
loop
push
dec
mov
fdivr
dec
lcall
imul
pop
add
jmp
inc
aaa
xchg
sbb
scas
aad
xlat
adcb
xchg
jp
mov
mov
pushl
stc
adc
ficoml
movsb
cmpsb
shr
xorl
inc
bound
into
adc
or
inc
fs
lcall
mov
or
add
stos
in
test
cmp
pusha
push
adc
push
push
pop
jbe
and
push
in
cli
pop
dec
nop
jp
xor
adc
mov
jg
sub
xchg
push
dec
jge
add
mov
ret
xchg
push
or
push
mov
dec
lcall
cwtl
xchg
mov
orb
sub
outsb
movzbl
rcrl
pop
out
sbb
insl
mov
or
mov
ret
pop
mov
incl
lcall
ret
dec
add
scas
test
mov
and
fldcw
lods
cld
aas
lret
lahf
mov
sbb
push
sbb
stos
out
arpl
out
xchg
call
jns
xchg
roll
mov
xor
std
xor
push
or
dec
pushf
loop
out
scas
loop
xchg
jns
cmp
add
pop
test
fcmovne
xchg
lods
xchg
inc
imulb
pop
decl
jge
sbb
push
push
xchg
aam
sub
ret
inc
xor
sbbb
cld
arpl
incl
mov
mov
fldcw
clc
lahf
aaa
pusha
aam
aam
inc
adc
sub
xchg
das
popl
outsb
lds
lcall
xchg
and
xchg
sub
outsl
lcall
xchg
scas
fcomps
dec
cmp
stos
cmp
ljmp
jmp
adc
jl
push
stc
sbb
and
lods
or
fdecstp
dec
jmp
xor
cmp
ret
or
mov
xchg
fildll
popa
sti
fcmovne
test
push
push
or
lcall
adc
int
jecxz
repnz
adc
push
cmp
cltd
popl
lret
jmp
dec
ljmp
je
pop
sub
add
push
dec
cltd
pop
or
dec
pop
sbb
mov
das
jmp
cmp
dec
mov
repz
push
fcmove
repz
in
ljmp
mov
es
sarl
mov
sbb
xchg
iret
repnz
push
inc
ljmp
cmp
pop
sar
jmp
ret
mov
out
clc
or
test
popf
mulb
fsts
stos
jecxz
push
xchg
and
mov
aad
mov
nop
xor
and
mov
adc
xchg
mov
sub
mov
mov
jg
cmp
rcrb
jecxz
sbb
popa
cmpsb
movsb
clc
aam
movsl
mov
call
jle
test
bound
nop
pop
lahf
aas
fisubs
xor
call
jle
sub
mov
push
test
jno
pop
jmp
cwtl
mov
jle
mov
jl
mov
scas
subb
push
jmp
jns
insb
push
cli
ret
sub
mov
rorl
sbb
push
shlb
cmpsl
test
mov
push
or
sub
cmp
incl
repz
iret
mov
mov
inc
mov
cmp
xor
test
decl
xorl
push
out
lods
and
test
jp
into
test
jg
cld
scas
div
xchg
stos
sub
orl
mov
rorb
inc
lea
decl
push
loop
movsb
fs
sahf
ljmp
jae
xor
jmp
pushfw
leave
fisttpll
movsb
lods
mov
mov
cmp
pop
mov
pop
inc
and
sub
adc
sti
mov
cmpsl
jns
imul
push
mov
dec
push
adc
mov
xor
cli
call
push
sub
cltd
mov
xchg
call
fcmovnu
pop
aas
xchg
inc
or
inc
dec
fimull
aaa
stc
push
push
sahf
call
mov
int
decl
inc
xchg
gs
loopne
je
outsb
push
push
inc
pop
shlb
lock
in
jae
inc
popa
lock
mov
xor
je
fwait
movsb
lcall
mov
ds
mov
sbb
xor
sub
iret
cmp
dec
push
aas
mov
out
cmpsb
mov
adc
xor
pop
and
mov
rcrl
lcall
mov
mov
jecxz
push
enter
cmc
out
lods
loope
add
pushl
shlb
xchg
pop
scas
shlb
daa
push
call
movsb
shlb
loope
repnz
pop
inc
mov
fsub
inc
jmp
outsb
or
aaa
testb
imulb
push
cmp
icebp
cmp
sbb
gs
decl
or
push
pop
ja
repnz
sub
or
clc
imul
and
inc
cmc
sub
lea
test
aas
dec
aas
adc
das
mov
sahf
inc
add
imull
and
pushl
xor
rolb
dec
cmp
pop
jb
mov
loop
add
arpl
jg
icebp
mov
xchg
push
mov
or
mov
decl
enter
lret
pop
pop
cs
or
fdivrp
and
mov
jmp
jmp
dec
fildll
imul
cli
rcll
lret
sbb
add
jmp
and
gs
iret
mov
int
cltd
stc
xchg
loopne
or
xchg
arpl
aaa
loopne
in
add
push
incb
aam
shrb
jge
add
outsl
stc
cmp
push
mov
push
stc
test
mov
xor
pop
out
out
push
push
mov
icebp
cmp
add
call
pop
push
ror
jmp
xchg
fs
call
and
mov
sti
lds
sub
jmp
inc
inc
and
adc
das
fs
stc
sahf
fisubrl
fdivrl
sub
inc
bound
mov
nop
xchg
dec
mov
dec
daa
das
jge
pop
xchg
jg
test
jmp
inc
imul
pusha
and
pusha
xchg
pop
sbb
adc
std
call
mov
loope
sbb
push
mov
mov
inc
inc
jno
bound
sub
sbb
cmp
cmc
lret
fstps
clc
movsl
xchg
aad
or
jmp
mov
imul
stc
fwait
inc
lcall
gs
mov
aas
jmp
lods
loope
inc
shrl
xchg
out
mov
mov
or
pop
scas
clc
enter
jb
fs
push
repz
dec
inc
icebp
incl
popf
aam
mov
out
mov
iret
ljmp
xchg
jp
pop
sub
sti
pushl
jo
mov
sbb
mov
stc
pusha
adc
mov
in
mov
nop
push
and
lret
lret
adc
adc
mov
xor
sub
incl
jg
out
out
fbld
sbb
jns
aas
xor
aad
pop
movsl
fbld
xor
mull
jge
sub
call
mov
scas
jl
mov
and
mov
dec
cmp
testl
dec
iret
cmp
lret
into
decl
mov
mov
insl
pop
mov
lods
cmp
or
popa
jecxz
incl
mov
mov
or
pop
div
lods
inc
nop
in
shr
mov
mov
mov
sub
mov
push
dec
dec
add
lods
and
pusha
shlb
dec
adcb
or
pop
arpl
inc
mov
incl
xchg
clc
cltd
movb
sub
jne
add
jb
xor
std
and
lcall
loop
mov
stos
pop
je
loopne
cltd
push
xor
fprem1
inc
adc
fimull
pop
sub
stc
loope
pop
ds
adc
incl
ljmp
inc
lds
push
pop
rcrb
xor
hlt
les
in
enter
xor
lods
jo
jmp
or
rolb
sahf
loope
sub
mov
movsl
mov
push
inc
inc
dec
std
decl
mov
push
push
iret
scas
or
pop
lock
aas
xor
jae
or
ljmp
sar
lcall
test
pop
pop
sbb
fidivrl
arpl
dec
add
jmp
sbb
mov
test
inc
adc
addr16
nop
mov
pop
out
aad
call
jmp
in
iret
or
xor
or
sub
out
insl
jne
push
cmp
inc
and
add
add
incl
incl
dec
cmp
mov
insb
stos
enter
aas
and
fwait
jno
sbb
jb
sbb
add
pop
and
ljmp
adc
in
clc
sbb
jae
imul
jl
cmpsl
xchg
sub
jmp
jmp
adc
adc
mov
sub
cwtl
mov
or
iret
mov
inc
mov
fcoms
sub
pop
int
and
decl
pushf
fs
ja
mov
icebp
ljmp
imul
decl
sti
lods
xorb
lea
lods
bound
jo
aas
and
lcall
xor
mov
jl
mov
pop
pushl
pop
xlat
dec
mov
enter
pop
jl
es
push
jg
mov
sbb
aas
imul
xchg
test
xorb
inc
and
pushl
imul
mov
lahf
mov
decl
sbb
ljmp
mov
cmpsl
add
in
pxor
std
pushl
je
daa
lea
stc
dec
inc
out
incl
rcrl
jp
js
push
xchg
mov
addl
add
in
aam
xor
dec
out
push
push
mov
pop
int3
out
call
xor
dec
or
add
std
lcall
fists
ret
xlat
pop
aas
push
sbb
jge
call
push
or
jl
decl
in
jbe
daa
inc
inc
xchg
jle
inc
test
dec
push
mov
and
movsb
fidivrl
daa
xor
sub
adcl
and
add
dec
or
xor
das
push
enter
push
inc
lds
cmp
cli
pop
add
leave
loope
xchg
jmp
hlt
cmp
out
xchg
jo
lea
xchg
cld
cmp
int3
add
in
xlat
ud0
jmp
cwtl
insb
push
jge
movsl
iret
test
cmp
lret
fistps
test
jge
jmp
jmp
inc
stos
sbb
xor
sub
dec
lret
push
push
out
incl
xlat
test
mov
fs
fldenv
mov
repnz
mov
push
enter
jle
adc
in
jo
insl
xlat
adc
loop
cld
inc
mov
jl
pop
push
sub
adc
jmp
dec
in
out
lods
addl
fisttps
ds
fisubs
xorl
leave
adc
enter
mov
jp
ret
pop
jnp
sub
jge
into
lret
jmp
mov
mov
lahf
pop
jno
lea
pop
lcall
sbb
in
add
inc
movsb
addb
std
fcom
xchg
insb
adc
insl
movsl
jo
call
xchg
cld
popf
mov
mov
movsl
outsl
inc
pop
push
jns
sbb
decl
mov
adc
shlb
mov
shl
pop
imul
test
inc
inc
pop
adc
mov
xor
jno
rcll
jp
sbb
test
jge
push
lcall
jg
std
mov
lcall
rclb
call
shrl
je
xchg
ljmp
jnp
mov
pushl
pop
add
xor
out
je
pop
test
add
ret
push
pop
addr16
stos
pop
adc
xor
push
and
jg
jg
cli
cmpl
bound
mov
fs
rcrb
loop
pushl
add
mov
mov
sub
sbb
fwait
sbb
decl
aas
negl
mov
arpl
fidivrs
popl
cmp
es
jg
bound
jge
dec
testb
jg
out
xchg
call
es
out
sbb
push
pop
or
test
aas
gs
jg
les
push
jl
rorb
mov
stc
lcall
jl
outsb
or
cs
adc
ljmp
out
popl
cs
jmp
loopne
adc
mov
mov
inc
scas
sub
jmp
in
cmp
add
gs
ljmp
int3
inc
jmp
lods
inc
adc
rclb
sti
cmp
sub
push
stc
in
nop
adc
jp
mov
and
push
int
and
inc
int3
test
ret
jmp
rcll
pushf
lret
out
or
pop
pop
std
mov
add
fimull
sahf
sbb
mov
data16
fadds
push
repz
add
sub
mov
aas
sbb
ret
and
fistpll
mov
and
jmp
sbb
incl
ds
jns
aad
cltd
sbb
incl
call
adc
or
test
push
insb
jl
nop
adc
mov
aad
test
or
dec
incl
insl
dec
int
cltd
les
jae
mov
dec
or
pop
push
repnz
aas
mov
test
je
loope
jecxz
test
test
filds
mov
or
call
scas
pop
sbbb
incl
fs
pop
inc
jmp
adc
cmpsb
xchg
pop
xor
scas
xor
add
lcall
mov
das
lock
lret
das
dec
inc
sbb
jb
scas
stc
loop
call
mov
ret
pop
lock
adc
aam
lods
arpl
add
sahf
sbb
stc
outsl
ljmp
pusha
mov
pop
inc
repnz
ret
pop
dec
test
lret
sbb
sub
iret
pop
and
xlat
add
xor
xchg
adc
lret
xchg
mov
mov
cli
decl
dec
mov
xor
pushf
adcl
fmul
dec
fistps
aas
std
sub
aas
cltd
arpl
aad
pop
and
incl
lea
push
xor
inc
xchg
movsb
inc
push
pushf
stos
out
mov
and
pop
or
and
fsts
mov
loop
pop
out
ss
lods
fsubrs
sub
or
xlat
enter
popl
mov
push
jp
aas
dec
popf
sub
cwtl
xchg
lahf
imull
inc
dec
pushl
inc
pop
xlat
sub
jmp
out
mov
pop
jmp
in
dec
outsl
lds
gs
pop
incl
mov
ret
movsb
adc
fdivl
stos
jmp
sbb
or
inc
ds
xor
cmp
enter
fdiv
xchg
sbb
sarb
pushf
mov
daa
fnstcw
xor
outsl
push
iret
jg
icebp
lcall
cmp
pusha
popf
mov
pop
stos
mov
mov
movsl
mov
dec
or
and
dec
push
cmp
dec
and
icebp
shlb
pushl
and
mov
lahf
jl
aas
dec
xchg
add
icebp
sub
mov
and
aam
jl
sbb
test
arpl
mov
push
out
fists
filds
dec
fs
decl
ljmp
fbstp
je
scas
or
or
das
aas
dec
or
cltd
add
cmpsl
ds
repz
xor
popf
call
mov
mov
cs
mov
inc
daa
scas
inc
pop
popf
mov
xchg
xor
das
push
jno
les
in
shlb
mov
jns
aam
xorl
push
lock
cltd
pop
sub
out
out
daa
loope
sbb
add
jmp
lret
xor
mov
xchg
xchg
push
pop
stos
imul
not
aad
inc
ss
lcall
cmpsb
xchg
dec
arpl
fcmovne
pop
pop
loop
mov
movsb
test
sar
cli
out
clc
jae
fcomps
test
lds
mov
xchg
xchg
jmp
es
add
cmp
aas
or
call
push
jb
xchg
mov
sub
fidivrl
repnz
mov
mov
jp
push
outsl
pop
sbb
pop
dec
cli
pushl
or
and
xchg
push
sbb
or
call
add
jp
cmp
jmp
stc
fbld
jbe
inc
add
cltd
pop
gs
lcall
pop
out
shrd
push
or
jle
cmpsb
rcrb
aas
dec
std
lods
sub
fistpll
daa
test
sub
xor
ljmp
cmp
sti
inc
int
pop
mov
lock
pcmpgtd
jns
add
pusha
test
out
sub
cwtl
mov
mov
in
xchg
jmp
xor
leave
dec
fnstenv
in
adc
pusha
xchg
out
iret
xchg
sub
lcall
out
mov
xlat
or
loope
cmpb
sbb
mov
dec
cld
insb
cmp
nop
push
jo
sbb
incl
xor
pop
pop
inc
mov
jmp
xorb
cli
mov
cmp
into
sarl
sub
xor
pop
fcmovb
das
and
mov
xchg
shrb
jg
std
decl
jp
rorl
sub
bnd
mov
dec
sub
call
cmpsb
inc
into
jle
inc
int3
push
cli
mov
mov
pop
adc
cld
jl
push
adc
decl
movl
call
into
out
xchg
jae
xor
out
je
jg
adc
sbb
lcall
daa
data16
mov
rcrl
call
and
sub
inc
adc
das
mov
xchg
mov
fistps
and
outsb
pop
clc
scas
pop
aas
xchg
sbb
in
incl
lcall
sbb
mov
dec
insl
aas
clc
xor
inc
pop
xor
into
icebp
inc
mov
stc
rcrl
outsl
mov
pop
and
inc
jo
xor
inc
and
push
outsb
jge
leave
lea
scas
xor
lret
addr16
adc
mov
cmovbe
mov
pop
and
mov
jmp
mov
inc
shlb
repnz
sub
pop
lcall
and
sahf
jecxz
xchg
dec
shrl
fsubrs
mov
ret
test
sbb
insb
jl
lcall
dec
ljmp
out
jns
xchg
xchg
fiadds
decb
sub
cmp
fwait
inc
and
xor
shll
outsl
sbb
sbb
repnz
xor
push
bound
pop
and
lret
sub
incl
jle
pop
inc
xchg
hlt
pop
add
scas
pop
xlat
xlat
sbb
push
ljmp
push
or
lea
sbb
pop
adc
push
lret
mov
incb
push
movzbl
add
std
enter
pop
jg
jg
fucomip
je
aas
mov
sub
clc
xchg
or
inc
ds
hlt
push
xor
inc
addb
mov
mov
xor
mov
dec
add
sub
mov
lea
cs
jg
fisubrs
adc
cmpsb
sbb
test
call
fbld
pop
dec
mov
push
dec
insb
xchg
test
sub
push
pop
mov
rcll
dec
les
mov
or
mov
pop
or
or
or
lea
fstpl
pop
sti
scas
test
call
jno
pop
sbb
mov
rclb
and
test
xchg
adc
sub
outsl
xchg
call
call
shr
test
adc
pop
xchg
aas
push
inc
cld
ljmp
out
insl
push
xor
pop
lahf
and
in
inc
push
out
out
push
inc
dec
cmc
bound
fildll
and
pop
fistpl
pop
push
ret
fldenv
inc
sub
test
mov
dec
xor
jg
aas
push
and
or
mov
dec
jmp
sbb
notb
decl
mov
or
insl
cmp
outsb
push
xor
mov
push
mov
aas
lret
push
cmpsb
gs
push
lret
jmp
aam
call
or
mov
jle
xor
lods
fcmovnu
sarl
adc
mov
sbb
aas
decl
sbb
inc
sarb
jno
js
mov
mov
mov
jmp
stos
sbbb
xchg
pushf
push
mov
or
incl
in
xchg
jge
cld
out
test
inc
add
and
lds
in
dec
push
out
std
incl
push
js
push
ss
sub
lret
mov
cmp
pop
sbb
nop
adc
bound
scas
ss
cli
jecxz
lock
or
mov
dec
sub
push
pop
mov
std
cmpsl
jns
sbb
jnp
jp
mov
test
pop
and
lcall
aas
or
xor
mov
into
xor
scas
test
bound
and
fs
iret
outsl
sbb
out
pushf
inc
jmp
roll
jmp
idivb
test
orl
into
xchg
scas
aam
cltd
out
test
xchg
sub
add
lcall
enter
jecxz
arpl
andl
mov
lock
cld
jmp
inc
jp
mov
dec
fsubs
ds
and
push
stos
mov
jp
mov
jmp
sahf
aad
mov
jne
das
enter
lea
push
adc
or
repz
jle
add
aas
xchg
adc
rcrb
pop
jg
out
mov
mov
and
pop
loop
leave
lcall
ds
test
and
pop
lcall
lock
jno
pop
adc
jnp
push
inc
inc
fsubrl
cmpsb
inc
idiv
jp
push
mov
cmp
and
push
xchg
xchg
jg
mov
inc
pushf
ja
sarl
mov
mov
push
pop
jg
inc
lods
cmpsb
mov
inc
jle
in
call
sbb
and
adc
data16
jmp
repz
nop
mov
or
sar
jecxz
cli
push
inc
das
and
add
mov
incl
jle
or
daa
movsl
dec
xchg
std
call
aad
mov
xor
repnz
unpcklps
decl
sbb
jp
and
add
inc
or
inc
lock
jmp
push
sahf
sbb
xor
dec
add
cmp
cmp
lds
add
ljmp
and
iret
inc
loopne
ret
pusha
adc
test
mov
fcompl
jg
setns
mov
dec
sbb
repz
mov
loopne
scas
push
subb
mov
lret
mov
call
or
insl
cltd
inc
mov
int3
pop
fwait
jg
pop
mov
out
push
mov
lcall
bound
inc
ffree
ret
and
adc
xor
cli
aas
pop
pushf
mov
lcall
push
outsl
das
push
push
and
mov
pop
scas
xlat
ss
movsl
cmp
mov
sbb
sbbl
inc
pop
jg
enter
scas
or
lcall
push
pop
adc
pop
pop
pop
int
rcrl
imul
cmp
push
popa
xor
scas
adc
aas
ficoml
dec
sbb
out
and
push
jb
mov
bound
outsl
dec
incl
fsubp
adc
imul
sahf
loop
mov
pop
outsl
test
decl
xchg
push
xchg
js
inc
mov
pop
xchg
pop
sbb
mov
call
call
lods
insl
mov
cwtl
jmp
cmpsl
repnz
jb
pusha
mov
pop
add
dec
push
add
mov
mov
inc
sti
fs
sahf
jns
jbe
repz
sub
xor
inc
mov
xchg
call
add
pop
inc
dec
out
push
cwtl
sub
dec
out
movsb
adc
mov
sbb
push
mov
incl
fsubr
jecxz
test
cmp
divb
ss
cmp
popa
jge
clc
jns
ljmp
xchg
call
lcall
mov
dec
jnp
or
jbe
xchg
sbb
jecxz
popf
lods
dec
rcr
adc
incl
imul
and
xchg
pop
push
movsl
push
subl
insb
mov
outsl
inc
out
pop
dec
int3
lret
fwait
cmp
jl
loop
and
call
jno
pop
and
fsubp
jmp
sti
decl
pop
scas
cmp
scas
inc
push
lea
dec
popa
mov
lcall
jl
aaa
inc
push
test
jle
push
jae
repz
or
xor
call
or
xchg
mov
push
mov
xor
std
test
ret
test
add
gs
call
mov
dec
in
test
aad
fbld
adc
inc
fwait
outsl
movsl
cmp
push
cmp
ljmp
into
adc
aaa
mov
jnp
cmpsb
sti
bswap
mov
scas
inc
jbe
and
push
push
clc
or
inc
lods
pushf
push
xlat
pop
jl
aaa
addb
lods
hlt
cmpsb
xchg
orl
lcall
sub
and
xlat
pop
nop
mov
jb
fmul
xchg
pop
xlat
ja
lahf
xchg
test
decl
fs
mov
insb
movsb
inc
or
icebp
xlat
pop
mov
push
and
mov
sbb
sub
mov
dec
pop
jl
ret
jo
mov
dec
fstl
imul
decl
js
adc
jge
mov
dec
in
mov
inc
xor
pop
dec
mov
rcrl
mov
fnstenv
push
ljmp
cmc
jbe
xchg
fnsave
mov
loope
cld
mov
jo
push
insb
fwait
inc
or
popf
popl
dec
arpl
inc
in
add
repz
add
and
and
jmp
test
and
push
icebp
pop
imul
inc
pop
mov
ja
pop
mov
dec
pushl
dec
int
xchg
fnsave
pop
addr16
push
bound
shl
mov
in
lcall
xor
movsl
ret
popf
rcll
pop
dec
popa
imul
pop
lock
sub
decl
ljmp
xchg
inc
xor
push
xor
and
leave
jecxz
sub
push
cmpsl
dec
pop
adc
mov
jnp
jo
mov
sbb
ds
adc
ljmp
lcall
pop
cmpsl
imul
out
xor
shll
icebp
ret
mov
ljmp
mov
aas
pop
in
pop
inc
xchg
jnp
outsb
test
stos
cld
int
cmc
lea
sub
sbb
push
lcall
push
fists
and
jp
ss
out
shrl
sub
lcall
fbstp
pushl
insb
dec
sub
adc
jns
mov
lea
test
enter
push
sbb
jmp
out
push
push
dec
add
add
push
cmc
sub
das
and
call
push
popf
add
dec
cmp
mov
les
test
sbb
cltd
ss
fsubl
cs
dec
or
lcall
dec
xchg
pop
add
jnp
stc
js
sub
enter
iret
in
dec
es
mov
sbb
adc
dec
add
fldlg2
cmp
pop
int
jnp
push
cmpb
fwait
dec
jmp
cltd
addr16
out
push
or
push
dec
adc
xchg
mov
jbe
mov
mov
insl
ljmp
dec
int
jbe
andl
xchg
sub
jmp
outsl
cltd
out
add
jmp
call
xlat
dec
movsb
xlat
xchg
cld
shlb
loopne
je
xor
push
jecxz
dec
addr16
mov
lcall
pop
and
adc
add
popl
int3
es
xorl
pop
dec
sbb
jmp
sub
xchg
mov
adcl
adc
aam
mov
jo
cmp
adc
jae
mov
adc
shrb
push
add
lods
pop
cmpsl
cmp
nop
incl
sarl
jb
mov
adc
jl
rcrb
xchg
xchg
mov
out
sbb
incl
std
jg
ljmp
stos
daa
xchg
scas
dec
out
add
in
in
std
popf
cmp
fiaddl
jmp
call
cmp
xor
and
cmp
and
decl
or
dec
xchg
inc
xor
aas
mov
je
jns
ds
mov
lds
insb
mov
sbb
lock
fnsave
push
pop
pop
cmc
shl
pop
cmp
push
sub
fsubrl
flds
mov
jnp
or
cwtl
insl
adc
lahf
and
inc
jle
lods
decl
cmp
insl
je
outsb
jge
mov
stc
int
lret
xor
mov
xchg
movsl
push
fs
mov
push
cs
xchg
int
outsl
or
pop
cltd
ja
and
jmp
jns
sahf
xorl
lahf
outsl
arpl
je
and
bound
stos
mov
inc
decl
ljmp
push
cli
test
icebp
jns
pop
pop
dec
push
and
pop
mov
mov
mov
cs
aad
jp
mov
mov
rcrl
dec
mov
scas
data16
mov
and
inc
inc
pop
test
mov
mov
leave
jge
pop
mov
adc
hlt
fadds
sub
icebp
call
iret
add
aad
ljmp
mov
mov
xchg
in
aad
lods
lcall
jo
popl
aas
and
cmp
movsl
jl
pushf
enter
add
mov
jns
pushl
mov
flds
push
addr16
movsl
add
mov
inc
loope
aas
cltd
sar
call
les
hlt
cmp
inc
push
daa
mov
adc
sub
inc
loopne
jnp
xchg
orl
push
push
into
xor
pop
ja
gs
dec
mov
xor
or
sub
inc
or
call
lret
and
shrb
inc
cwtl
pop
test
cli
xchg
pop
ljmp
popa
filds
outsl
pop
push
add
aas
aaa
and
dec
mov
loop
jne
lret
xchg
or
mov
outsl
fwait
decl
jns
int3
clc
push
repz
loopne
push
xor
icebp
and
inc
movsl
test
jb
jnp
adc
sbb
mov
push
movsl
jo
cmp
and
inc
mov
mov
xor
ds
dec
test
pop
fbld
ss
fwait
call
lahf
xor
add
push
movb
cld
jae
adc
dec
insb
into
sbb
jmp
stos
int
and
push
punpckhdq
and
and
dec
lods
jno
outsl
jmp
incl
scas
xor
sub
fildll
xchg
in
lret
lods
pop
xchg
push
ror
decl
lods
shrb
in
cmpl
jmp
jecxz
ret
xor
lods
pop
lcall
mov
in
cmp
mov
push
pusha
push
frstor
mov
mov
mov
dec
jmp
and
int
push
jb
movsb
lea
lcall
jl
sub
jl
xchg
int3
bound
ret
sbb
cmp
lret
cmp
data16
mov
stos
and
xchg
pop
daa
and
jns
cmp
je
sahf
insl
iret
jg
shrl
sbb
xor
pop
inc
jle
adc
or
daa
int3
rorl
xchg
icebp
rorb
cmp
jb
mov
movsb
in
mov
decl
dec
aaa
push
incl
icebp
dec
mov
mov
lcall
jnp
jg
mov
mov
incl
xchg
in
ficoms
or
dec
fldt
cltd
orl
in
call
jno
lcall
mov
push
adc
inc
cmp
mov
rorl
test
jnp
jp
mov
adcl
aaa
data16
fscale
xchg
dec
xchg
sbb
decl
pop
fadds
adc
out
xor
shl
mov
fistl
call
inc
sub
adc
cmpb
sub
push
pop
pop
pop
cmp
bound
aas
lcall
or
decl
cmpsl
rcll
in
roll
sbb
dec
orl
stc
sahf
iret
push
je
push
call
dec
and
sbb
ja
jp
popa
sub
dec
cs
cmp
cmp
jo
or
ljmp
imul
jns
lcall
sub
cmp
add
lcall
aas
dec
loopne
push
mov
cmp
ret
cmp
call
xchg
xor
ss
jecxz
dec
xchg
push
popf
jg
mov
xchg
aaa
scas
dec
mov
aam
addr16
out
jmp
movsl
icebp
jo
out
pop
lods
ds
pop
shl
js
adc
lods
nop
int
adc
stos
xchg
mov
cmp
push
stos
clc
jl
testb
rcl
andb
minps
sbb
shll
ud0
incl
jmp
sbb
in
insl
jne
or
incl
in
es
mov
jp
in
int
mov
dec
xchg
hlt
push
cmc
pop
pop
mov
decl
and
sbb
jne
sub
lret
out
pop
and
leave
mov
mov
incl
jae
out
js
cmp
pop
int3
mov
les
mov
lods
or
div
js
jmp
incb
jae
rcl
and
mov
ss
aas
sub
inc
sbb
cmp
shr
lods
sbb
lods
jge
jmp
sub
aas
sbb
dec
loope
test
mov
jge
clc
inc
xor
inc
cs
insl
lret
xor
fucom
hlt
mov
cli
push
sub
fwait
inc
and
std
dec
mov
call
imul
xor
sub
sub
pushl
inc
cmp
push
push
fnstenv
and
cmc
and
sbb
cwtl
call
addr16
or
out
xchg
mov
push
pop
inc
push
sti
mov
mov
lcall
push
popa
mov
inc
int3
xchg
jnp
inc
sub
mov
jno
inc
xor
ss
enter
jmp
sub
and
pop
je
mov
stos
dec
mov
into
add
push
imul
sahf
xor
pop
gs
into
in
sub
mov
jg
jecxz
in
shrl
and
sbb
mov
pop
push
inc
movsl
dec
cmp
repnz
aas
pop
mov
rolb
pop
scas
push
sbb
adc
mov
in
inc
sub
xchg
int3
sbb
mov
decl
popa
mov
push
cld
out
pop
jmp
xor
inc
das
dec
push
jmp
push
cli
rorb
int3
or
add
cmc
pop
pop
bt
add
call
jns
jl
out
aaa
pop
sbb
pop
loop
in
pop
adc
out
enter
mov
inc
and
stc
pop
and
roll
jns
push
and
sub
sbb
insl
cld
and
or
out
jo
xchg
push
imull
call
call
ss
sbb
ud0
lcall
out
adc
push
out
and
mov
incl
add
jne
fwait
ljmp
dec
fadds
stos
mov
cs
xchg
dec
sbb
int3
dec
lods
int3
stc
adc
incl
out
in
dec
xor
cmp
int
mov
adc
sti
mov
sub
inc
inc
xchg
in
jmp
sub
mov
mov
test
fbstp
inc
shll
enter
lods
mov
leave
fisubrl
push
mov
sbb
aas
ss
sar
jmp
pop
stos
cmpl
push
mov
lea
xor
jmp
dec
adc
sbb
leave
push
shl
add
insl
xchg
mov
daa
add
hlt
in
test
call
js
cli
adc
bound
nop
jo
lods
xchg
and
leave
mov
sub
jecxz
in
mov
dec
lcall
sbb
lret
mov
inc
enter
xchg
jne
xchg
scas
ret
mov
cs
cld
je
popf
fstpt
sbb
and
lcall
mov
sbb
xchg
push
jge
ret
mov
ljmp
jmp
icebp
and
sti
jl
inc
or
pop
xor
lea
inc
mov
pop
repz
lds
inc
scas
inc
outsb
lods
mov
push
iret
mov
pushl
out
adc
lcall
mov
dec
mov
insl
xchg
and
bound
in
icebp
pop
lcall
jmp
insl
push
outsb
imul
sub
adc
push
mov
fdivl
cmp
jle
incl
pusha
into
adc
push
mov
je
jo
or
add
mov
decl
mov
sub
add
lods
les
sbb
push
mov
call
stos
scas
cltd
cmp
repnz
cmpsb
loopne
stos
jge
lods
xchg
cmpsl
test
push
xor
fldt
jno
sarb
in
outsl
lret
cmp
jecxz
imul
and
cmp
loop
cmpsl
orb
mov
ja
inc
pop
incl
lahf
incl
mov
jnp
adc
loope
rcrb
arpl
and
pop
add
call
xchg
mov
lds
mov
ret
dec
sub
arpl
xchg
outsb
push
das
mov
jne
outsl
lcall
sub
dec
test
ja
mov
test
insb
add
repz
out
inc
and
jb
pushf
int
shlb
imul
ja
mov
call
fs
repz
ljmp
rcrb
xor
sbb
test
push
sub
pop
imul
pushl
inc
inc
jns
movsl
ret
sbb
sahf
jbe
aas
ljmp
inc
cmp
mov
xorb
pop
and
pushf
and
aad
push
mov
rcll
aam
mull
icebp
cmp
cmp
lcall
mov
ds
jnp
aas
fisttpll
xor
mov
pop
dec
lock
call
or
xchg
inc
xchg
mov
jmp
sub
adc
or
xchg
jns
jnp
and
jle
jmp
mov
enter
jle
xor
in
inc
and
push
js
jae
mov
decl
push
mov
in
push
and
pop
and
mov
cmp
add
xchg
ljmp
outsl
mov
imul
or
sti
popf
add
ficomps
ret
push
or
mov
push
in
jge
fucomi
xchg
push
rcr
fs
lcall
pop
test
sub
jg
mov
mov
jb
lret
mov
lret
mov
ds
and
and
sarb
sub
mov
add
repz
repz
loope
imulb
cmp
push
push
xchg
xor
sbb
incl
jnp
add
pop
rorb
ds
push
js
xor
xchg
add
imul
xchg
jnp
mov
stos
outsl
mov
jg
or
push
rcl
or
jle
dec
test
test
in
lock
mov
cli
adc
inc
pop
das
sub
xor
test
enter
cmp
cmc
add
jae
imul
xor
inc
cmc
inc
mov
mov
xor
arpl
xchg
xchg
clc
and
inc
mov
cs
dec
jae
and
jp
out
in
shl
in
mov
shl
lds
cltd
dec
insb
movsl
fdiv
aam
xchg
loopne
int3
stc
mov
out
cmp
repnz
call
xor
inc
sbb
dec
or
inc
mov
jl
call
gs
push
mov
orps
adc
rcrb
mov
xchg
and
sub
xchg
xchg
shll
lret
rclb
jecxz
mov
out
mov
cs
xchg
adc
syscall
sbb
shlb
adcb
push
dec
dec
fs
mov
dec
mul
mov
sub
push
add
adc
fcomp
loop
or
call
jns
sbb
lds
xor
cmp
push
fdivl
jge
and
decl
xchg
cmp
icebp
mov
mov
jb
dec
mov
cltd
xchg
jae
movsl
movsl
insb
adc
add
incl
aam
pusha
shl
add
jo
pop
mov
jae
rcr
mov
add
decl
cmc
push
mov
cld
sbb
sbb
mov
fmuls
mov
sub
lcall
add
divb
or
pop
outsl
ljmp
xchg
xacquire
sub
loopne
mov
mov
stos
fistpl
jmp
divb
sbb
insl
mov
leave
inc
push
test
sbb
and
fstps
push
pop
and
push
fstps
call
mov
mov
in
ljmp
xlat
popa
push
cld
clc
sahf
push
jmp
call
push
xlat
fldl
clc
mov
mov
sahf
mov
inc
inc
aam
inc
fimull
into
enter
xchg
adc
movsl
push
add
ljmp
fisttpl
filds
out
pop
mov
cld
in
mov
and
incl
xchg
jbe
pop
jo
sub
flds
adc
ffreep
jg
xchg
push
adc
mov
jo
adc
dec
jg
call
shrb
cld
sbb
imul
ljmp
movsb
xor
fsubp
stos
ficoml
inc
out
pop
cmp
stc
lcall
xchg
movsb
jns
mov
lret
fucom
cmpsb
jl
xor
enter
jl
or
js
pop
aaa
shll
js
fucomi
incl
add
cwtl
push
push
std
sahf
inc
push
xchg
mov
push
popl
pusha
jl
mov
mov
aam
xlat
adc
or
xchg
cld
push
and
lahf
lds
mov
nop
pop
adc
adc
subl
cmp
dec
pop
scas
mov
sub
adc
call
jbe
push
fisttpll
mov
ja
pop
popf
xchg
jg
ja
popa
xor
lock
movsl
int
add
mov
jns
adc
or
jmp
push
adcl
dec
sub
sbb
or
pop
adc
sbb
and
jae
out
mov
lcall
cmpsl
scas
fs
cmp
imull
scas
insl
out
cmp
dec
mov
sahf
pop
fcoml
aas
sub
daa
inc
and
push
ret
mov
testl
js
and
aaa
adc
pop
jg
jb
pop
jg
aam
inc
cmp
nop
pop
mov
repnz
lcall
ljmp
aaa
inc
mov
insl
movsb
cmpsl
inc
or
jg
push
mov
or
dec
xor
sbb
inc
repnz
aas
jmp
pop
lock
push
xor
lret
pop
cmp
dec
decl
fiaddl
enter
in
fimuls
xchg
push
add
mov
dec
mov
pop
ljmp
sub
scas
jmp
ret
jecxz
loopne
fiaddl
lock
mov
aam
dec
dec
jmp
cmp
jbe
ja
iret
cltd
hlt
daa
cmp
pusha
mov
jl
fadds
sahf
jae
mov
sbb
aaa
fldcw
mov
incl
dec
je
test
mov
pop
iret
out
pop
pop
loopne
inc
rcrb
push
test
dec
pushl
add
mov
mov
loop
mov
sahf
dec
repz
jle
cmpsl
ja
dec
inc
push
dec
popf
fstpt
mov
add
out
loope
incl
cs
in
lret
xor
xchg
popa
cmp
cmpsl
push
xchg
aaa
in
movsb
mov
sbb
shlb
mov
sub
cld
cli
shlb
inc
cmpsl
imul
xchg
pushf
push
lcall
jmp
xchg
iret
push
add
and
lahf
mov
aaa
and
pop
fwait
clc
filds
dec
idivb
jle
rclb
or
sub
fnstsw
mov
out
jl
xor
jg
shll
incl
jno
icebp
call
or
fbstp
jmp
xor
mov
mov
sbb
dec
incl
leave
rcl
inc
mov
add
stos
cmp
pushl
int
jbe
sub
dec
nop
fcmovnb
sahf
or
mov
push
shl
and
cli
sub
jae
lret
dec
push
jo
stos
add
sbb
push
inc
rcrl
jbe
mov
ljmp
sub
mov
dec
int3
pop
in
xor
or
jo
sub
xor
jmp
movsl
clc
cmpsl
cmp
in
jmp
adc
add
rcrb
xchg
ljmp
hlt
decl
or
mov
rcrb
mov
and
xlat
jns
scas
lock
adc
lcall
out
or
rcr
pusha
movsb
ljmp
mov
es
in
movsl
and
push
add
cmp
in
and
and
cwtl
xor
scas
jmp
cmp
dec
fmuls
pop
sub
test
popa
push
addr16
xchg
into
sbb
mov
sbb
push
mov
in
sar
ljmp
or
jg
mov
cld
and
out
adc
ss
push
lods
loop
es
and
decl
or
mov
fs
loope
jnp
xchg
and
clc
jp
jb
cwtl
iret
movsb
jb
add
push
dec
fisubs
sbb
push
ret
jmp
icebp
xchg
int
stos
mov
mov
pop
lcall
fwait
cmpl
fstpt
pop
in
aas
xchg
iret
dec
fstpl
mov
push
pusha
aam
stc
das
mov
jg
arpl
push
pop
add
imul
mov
loope
ret
pushf
pop
push
and
ljmp
in
or
jae
adcl
insl
add
mov
fwait
or
out
ds
add
js
inc
inc
aam
pop
cli
xlat
add
jmp
jae,pt
add
mov
push
outsl
pop
adc
or
std
jecxz
lcall
or
addb
call
pop
mov
jl
xor
out
lret
sbb
mov
test
lods
aas
out
sbb
outsb
call
mov
cld
add
add
pusha
dec
xor
lea
call
pop
jno
test
rcpps
xchg
jne,pt
xor
jae
dec
pop
and
sahf
jbe
adc
lahf
test
decl
std
lea
lret
enter
and
lret
incl
je
ret
out
mov
mov
mov
sbb
or
testb
jmp
ret
dec
test
sub
loope
xor
stc
fwait
jge
mov
mov
jle
lcall
test
fsubrl
in
in
lret
jne
pop
sbb
stos
mov
in
jmp
mov
cmp
xor
pop
mov
ret
xchg
push
mul
sub
incl
popa
int
xor
jne
nop
jp
test
arpl
inc
rorl
dec
cmc
call
pop
lea
pop
jbe
jns
test
dec
into
dec
test
mov
pusha
loope
pop
inc
mov
fistpl
push
into
mov
gs
and
decl
into
adc
out
inc
jp
jns
rcl
or
dec
cltd
insb
xchg
rcr
cmp
leave
stos
mov
or
lds
out
or
fcompl
repnz
jmp
xchg
pop
lahf
stos
in
and
xchg
pop
ds
pop
add
out
les
out
test
sbb
inc
cmp
bound
adc
pop
mov
out
ret
stos
inc
in
in
push
stos
or
in
pushl
mull
jnp
jmp
nop
leave
mov
movsl
fisubs
inc
imul
fwait
incl
and
and
mov
push
stos
jmp
pop
lret
mov
pop
cwtl
stc
lea
push
mov
shlb
mov
push
insl
jns
mov
cld
pushl
push
or
adc
sahf
jno
add
aam
sub
xchg
adc
incl
mov
gs
out
dec
mov
xchg
imul
call
gs
pop
jle
add
or
push
inc
fs
test
loope
addr16
aas
adc
lods
test
stos
sbb
cmp
mov
call
jno
push
fcmovnb
sub
sbb
loopne
scas
lods
and
mov
in
mov
jle
rorl
testl
mov
adc
adc
lcall
iret
mov
xchg
mov
dec
sbb
xor
sbb
lcall
adc
or
jmp
out
das
pop
pop
cmp
lret
jne
xlat
mov
cld
es
add
decl
jmp
cmp
fldcw
scas
inc
dec
scas
imul
cltd
and
inc
push
test
mov
adc
lret
rolb
xor
clc
mov
out
mov
pop
fwait
pop
arpl
fsubrs
mov
and
pop
push
iret
mov
jge
jae
fstl
lret
and
add
xchg
movsl
xchg
fsub
movl
ss
fldcw
pop
xchg
je
movsl
sar
and
lds
fldenv
mov
sbb
jmp
or
mov
mov
imul
cmp
aas
and
fdivs
lcall
mov
lcall
inc
dec
xlat
jmp
jl
mov
xchg
hlt
mov
sbb
popa
mov
mov
cmp
test
mov
mov
js
andb
dec
add
xor
cmp
mov
mov
imul
jmp
and
arpl
or
push
dec
sbb
inc
cwtl
lcall
xor
cmp
mov
push
arpl
scas
call
pop
clc
mov
adc
iret
outsl
sbb
lds
mov
imul
out
decl
push
sub
test
jns
scas
adc
push
inc
shll
int
andb
fidivs
push
push
imul
xchg
cmp
sar
mulb
out
xor
mov
push
mov
adc
xchg
fwait
addr16
fisttpll
insl
pushf
pop
jnp
fdivs
fcomp
mov
jmp
scas
ljmp
xchg
fidivl
add
jns
stc
aam
pop
xchg
lods
dec
mov
fisubl
cli
jbe
dec
les
mov
pushf
pop
xchg
outsb
xor
ret
dec
sub
inc
mov
loop
cmp
mov
out
inc
push
adc
jge
lahf
sbb
lret
addr16
pushl
cmpsb
rcrl
ret
pushf
fidivrs
outsl
test
rolb
jmp
jae
out
xchg
into
les
imul
lock
gs
call
sarl
xchg
popf
jge
cmp
inc
daa
xor
fildl
std
sahf
shll
cmp
out
cli
stos
mov
shrb
mov
inc
out
inc
bnd
loope
mov
icebp
jg
xchg
dec
call
jmp
mov
or
pop
outsl
xor
iret
out
push
decl
push
sub
add
clc
loopne
rcrb
out
inc
cmc
jge
mov
lcall
test
sbb
sbb
into
popa
fildll
push
or
cld
add
cmp
lcall
adc
iret
nop
cmpsb
ja
xor
mov
lret
adc
lcall
mov
lods
out
jb
add
pushf
add
leave
scas
clc
dec
dec
decl
mov
inc
pop
std
es
pusha
shrb
inc
sarl
jnp
xor
push
dec
pop
test
pushl
push
lock
ret
xchg
mov
inc
adc
dec
cli
ljmp
and
outsl
cmpsl
stos
les
jo
pusha
mov
ret
adcb
cmp
mov
add
jmp
out
sbb
push
je
fsubrp
xor
add
and
mov
add
dec
insb
xchg
imul
mov
dec
jp
and
cld
inc
inc
lret
out
stos
and
int
lods
aas
mov
push
mov
cwtl
cmc
mov
dec
pop
shrl
jmp
pushf
push
das
fmull
aas
xor
jbe
lea
xchg
inc
mov
movsl
ret
lds
pushl
loope
xor
pop
adc
mov
jle
insb
out
jmp
jecxz
decl
sbb
pop
sub
stc
adc
jmp
movsl
sub
incl
pushf
mov
cmp
sbb
add
cwtl
mov
repnz
jns
pop
std
or
pushl
and
mov
mov
jle
lods
xor
jo
mov
and
ljmp
mov
mov
xor
pushf
rclb
repz
clc
dec
cmp
mov
and
pop
pop
adc
jecxz
leave
lea
jb
push
push
adc
aad
test
mov
lcall
pop
dec
rolb
lret
fcmove
pop
insl
and
not
jb
in
es
pushl
call
jbe
and
cmp
hlt
imul
push
mov
lds
in
and
clc
call
lods
fstl
test
scas
push
mov
ret
ss
mov
notl
xor
jle
mov
inc
adc
mov
stos
add
ljmp
rcr
and
bound
xor
hlt
sbb
mov
inc
push
inc
pusha
mov
sub
and
jge
mov
movl
lea
jne
and
mov
imul
pushf
jg
decl
mov
add
mov
and
push
lea
push
incl
adc
popl
mov
pop
or
and
cmp
loopne
inc
loopne
xlat
jmp
sbb
sub
loop
jmp
mov
xchg
out
ljmp
inc
fcoml
cmp
test
loope
imul
mov
js
xor
mov
dec
mov
inc
scas
jbe
push
cmp
sahf
push
arpl
push
push
or
push
mov
jmp
inc
jne
popf
sub
push
add
decl
les
cmc
les
mov
in
call
jbe
push
pop
pop
std
adc
nop
jg
cmovns
ljmp
dec
loopne
cld
push
outsl
mov
pushl
out
aam
aaa
out
addl
xor
in
loop
insb
mov
popf
clc
mov
and
clc
dec
sub
pushf
sub
jle
pushf
lahf
pop
out
call
push
orb
sub
aad
cs
lods
ffree
or
add
mull
xchg
pushl
test
pop
nop
jne
sub
pop
sub
fdivs
sub
mov
jno
call
mov
addl
fmull
test
xchg
fs
js
insl
xchg
jnp
sub
decl
adc
iret
inc
and
mov
mov
out
jge
sbb
adc
incl
adc
sub
xor
push
lea
cs
mov
fwait
lret
mov
add
pop
jmp
pop
ss
pop
daa
int3
push
leave
aad
sbb
cld
arpl
call
loopne
dec
adc
out
mov
adc
xchg
cmc
inc
cmc
pop
arpl
rol
dec
es
incl
mulb
xlat
mov
into
pop
outsl
fcomip
pop
scas
mov
aas
rcrl
arpl
push
xchg
adc
dec
and
inc
ss
test
mov
outsl
andb
aas
pushf
mov
das
xchg
cmp
les
addr16
xor
pop
arpl
enter
leave
aas
pop
xor
incl
aad
cwtl
or
js
xchg
ret
repnz
lock
aas
and
into
imul
imul
dec
push
sbbl
push
mov
mov
lea
lcall
adc
popf
jb
gs
xchg
or
sub
shl
mov
scas
arpl
call
push
pushf
sub
jo
xchg
mov
nop
loopne
outsb
shrl
fiaddl
jmp
pushl
hlt
adc
inc
lods
add
pop
push
ja
jge
adc
inc
iret
movsl
jge
aas
xor
aad
movsb
std
sbb
pop
outsl
insl
add
sbb
ss
imul
jp
shlw
push
addl
pop
mov
decl
cmpb
jge
in
in
cld
add
adc
sbb
out
fidivrl
and
into
mov
jmp
int3
jecxz
cmc
ss
cmp
push
mov
je
shl
add
lcall
sub
adc
cmp
mov
std
notb
mov
mov
dec
test
ret
push
cmp
sub
incl
sub
fistl
mov
jns
repnz
and
sbb
add
decl
xchg
dec
push
push
in
push
into
imul
add
in
xor
jmp
orb
jno
xchg
pop
dec
cmpsb
mov
or
ffreep
mov
or
xor
in
cmp
sti
or
mov
add
xor
outsl
mov
push
fcoms
or
ljmp
jo
push
push
add
data16
sbb
push
in
fwait
sbb
incl
lea
jmp
mov
push
adc
cmpl
dec
call
fists
and
aaa
shlb
mov
jmp
adc
arpl
mov
xchg
sbb
add
lahf
mov
and
xchg
scas
cmc
incl
jecxz
jmp
sub
mov
xchg
mov
repz
lahf
cmpsb
int
and
cld
lcall
dec
mov
cld
or
rol
mov
test
xor
and
push
lcall
fadds
cltd
pop
ror
pop
xor
aas
shrd
add
fs
test
pop
fwait
pop
xchg
test
add
cs
adcb
outsl
decl
or
punpcklbw
pop
addr16
cltd
push
jmp
ret
cwtl
inc
enter
les
sub
mov
sbb
sbb
mov
dec
and
andl
js
sub
push
imul
lods
xor
pop
mov
clc
jmp
jne
cmp
adc
pop
mov
ljmp
ljmp
inc
fisubrl
loopne
adc
aas
jge
xchg
sub
xchg
xchg
lcall
mov
clc
addb
in
adc
pop
addr16
adc
cmp
sarl
ds
fcom
push
testl
mov
lret
inc
addr16
es
inc
lret
mov
ficoml
fimuls
ret
xor
xor
inc
xchg
rcrl
adc
inc
jg
sub
mov
loopne
nop/reserved
adc
sbb
pop
sub
arpl
mov
lcall
inc
xor
test
cmp
dec
lds
das
push
bound
push
ror
lret
call
inc
aas
push
cltd
shrb
mov
inc
pop
mov
sbb
decl
sbb
xchg
je
pushf
adc
cmpsb
jne
add
inc
mov
call
mov
mov
popa
sarl
lret
sbb
jbe
lods
int
sub
ret
scas
insb
push
push
sub
inc
add
jmp
in
fisttpll
and
cmpsb
testl
popa
sbb
and
out
repz
pop
push
pop
into
fnsave
push
add
aas
push
mov
lret
icebp
js
adc
das
pop
lret
out
pop
jl
add
fdiv
arpl
sbb
mov
lea
push
leave
dec
cmpsb
ljmp
add
xchg
cmpl
imul
outsl
sbb
jo
push
dec
icebp
mov
mov
pushl
test
into
xor
sahf
mov
jae
mov
sub
jle
repz
mov
decl
xor
pop
movsb
sub
mov
bound
adc
aas
decl
hlt
pushf
adc
fisubrl
and
mov
dec
cmp
in
repz
mov
xor
ret
xor
jae
pop
sub
or
std
push
outsl
lods
jmp
rcll
and
dec
jnp
mov
sub
fdivrs
into
in
fwait
inc
loope
inc
enter
xor
push
add
fs
mov
jb
jmp
sub
icebp
fstl
push
dec
cmpsl
out
cmpsl
mull
icebp
mul
fsubrl
popf
in
pop
sbb
ljmp
js
and
outsb
lret
and
xabort
mov
sub
fsubrl
fsqrt
das
pusha
ljmp
add
mov
push
repnz
dec
stos
out
fisubl
sbb
data16
pop
lods
inc
add
jmp
lods
mov
cld
fcomps
incl
mov
into
arpl
out
dec
xchg
out
push
outsl
push
xchg
in
mov
sti
add
push
jmp
add
inc
daa
sub
sub
imul
insl
sar
push
sub
in
leave
pushf
push
out
mov
loopne
mov
add
les
jle
jae
mov
mov
popa
sbb
fwait
jmp
scas
add
push
lahf
fucomp
loopne
dec
testl
outsl
pop
dec
mov
inc
xchg
jle
xchg
mov
in
test
incl
sarb
lret
xor
or
in
add
pop
sahf
sbb
inc
std
ljmp
mov
int
gs
and
cmpl
arpl
push
jbe
add
mov
ljmp
lcall
jl
sub
ja
pop
dec
int
adc
jge
xorb
fs
je
cmp
sub
test
ljmp
push
mov
das
inc
leave
jmp
pop
aad
into
movsl
xchg
push
jecxz
jne
in
jg
add
outsl
xchg
mov
jg
aam
cmpsb
idivl
mov
das
ja
js
add
jle
sub
cltd
ja
out
push
mov
test
xchg
lea
mov
push
lock
cld
incl
adc
cld
insb
sarb
jbe
sahf
fwait
incl
mov
pop
adc
mov
mov
jmp
sub
je
data16
fists
movsb
scas
sub
dec
dec
sub
jne
pop
ljmp
pop
pop
aas
jne
ret
imul
or
sbb
inc
vcomiss
xor
outsl
mov
or
lcall
pop
pop
sub
xor
pushl
das
and
lcall
lret
xchg
mov
movsb
pop
jge
loop
je
mov
iret
sub
push
jae
xchg
xor
stos
aad
sahf
test
aas
and
outsl
data16
fiaddl
in
xor
push
jmp
push
lods
pop
stc
xor
aaa
lods
or
xor
mov
jne
sahf
out
or
push
mov
mov
push
adc
notl
or
nop
in
push
ss
je
pusha
or
adc
mov
mov
sahf
ret
push
mov
inc
lcall
daa
icebp
jg
iret
mov
mov
aam
fwait
test
adc
mov
int
insb
popa
mov
sbb
jmp
mov
pop
insb
call
decl
cwtl
js
pop
ss
pop
dec
int
stos
call
sub
cmp
test
pop
bound
add
mov
lcall
xor
jge
out
fidivrl
test
ffree
pop
inc
test
popa
add
lock
lret
mov
jmp
sarl
aas
jno
call
nop
push
cmp
dec
mov
cmp
jmp
rorb
xchg
dec
nop
cld
incl
sbb
jp
mov
pop
push
sar
sti
xchg
repnz
imul
push
aad
push
movsl
sub
cmp
xor
push
pop
inc
dec
pop
popl
mov
fidivrl
data16
fisubl
std
std
pop
adc
sbb
aas
out
mov
cmp
dec
mov
mov
ljmp
fadds
mov
pop
jmp
mov
mov
repz
mov
lret
or
rcl
insb
aas
imul
push
jg
or
lea
adc
or
adc
cmp
jmp
and
pop
inc
pop
xor
or
fstpl
cmp
call
dec
scas
sahf
jg
lcall
cwtl
xchg
test
test
stos
ss
pop
in
inc
loopne
and
push
and
dec
add
mov
mov
lock
push
cli
insb
popa
adc
mov
decl
jmp
fidivs
cld
nop
pushf
mov
jle
mov
mov
jmp
in
adc
pushf
aas
sub
mov
mov
cmp
roll
push
iret
mov
fdivs
fucompp
out
dec
xlat
std
adc
xchg
pop
das
in
enter
decb
push
pop
xchg
call
std
jp
pop
mov
and
insl
outsl
leave
imul
std
dec
daa
pop
dec
int
push
sbb
outsb
ss
popf
loope
inc
cltd
or
icebp
and
push
sub
sub
decl
and
andb
cmp
daa
aas
mov
dec
clc
mov
push
xlat
jecxz
jecxz
cmp
in
mov
jp
movsb
mov
ljmp
in
or
into
cmp
mov
mov
pop
aam
lahf
pop
in
jg
outsl
or
mov
dec
xchg
inc
shrl
test
call
inc
out
xchg
jmp
sahf
jl
aaa
std
add
stos
je
lret
adc
inc
adc
or
call
insl
in
sub
insb
lcall
pop
add
sahf
outsb
cld
xor
jns
mov
decb
aam
stos
stos
int3
xchg
mov
jg
test
pop
mov
inc
xor
idivb
decl
call
ficoml
dec
int3
scas
mov
out
mov
xchg
cld
or
jmp
repnz
shlb
leave
ret
inc
inc
push
pushf
stos
lret
hlt
into
jg
push
notl
pop
push
enter
stos
call
scas
jbe
out
je
shrl
scas
insl
mov
outsl
pop
incl
idivb
call
cmpsl
jbe
addl
mov
lds
sbb
lds
orl
jg
adc
mov
movb
int3
fsubrs
pop
daa
hlt
mov
out
inc
push
fucomip
push
test
aam
xchg
in
ret
incl
cmp
sbb
ja
cmpb
shll
mov
jl
and
pushl
aad
in
sbb
cmp
insl
pop
jg
outsl
or
incl
in
mov
cmp
cmpl
dec
lods
ljmp
loopne
jg
cmpsb
add
sbb
loope
xor
and
pop
jmp
mov
xlat
loopne
sar
lods
mov
loope
jg
push
pop
jg
rorl
sbb
sbb
push
mov
mov
aam
push
cmp
inc
jne
jmp
xor
adc
pop
adc
adc
scas
dec
loop
aas
out
mov
cmp
xor
fcomi
outsl
pushl
or
dec
mov
out
adc
js
ja
shlb
fwait
sbb
aad
incl
rcr
push
ss
pop
or
pop
mov
scas
or
or
inc
jge
test
incl
sub
cmp
mov
lahf
xchg
clc
decl
addl
and
lahf
fs
mov
mov
jno
mov
subb
cmp
mov
push
pop
xchg
icebp
xchg
inc
fmul
jl
imul
xchg
sbb
cmp
pop
xchg
sub
push
push
cmp
into
push
bound
jmp
fucom
mov
sub
jmp
push
icebp
jge
dec
imul
mov
dec
or
nop
adc
cwtl
pop
nop
push
pop
pop
pop
arpl
fucomp
mov
incl
idivb
push
outsl
sub
fmull
lcall
push
pop
test
jmp
shrl
push
lret
add
dec
leave
xor
sti
cmp
das
cmovne
adc
fidivrl
mov
loope
ljmp
xor
sar
aas
and
das
dec
cld
jno
fwait
sbb
fisttps
and
loopne
aas
fs
adc
push
fnstsw
push
adc
inc
incl
push
cmpsb
pop
lret
cli
xor
int
lcall
into
dec
addr16
sahf
mov
mov
enter
sti
pop
xchg
mov
cmp
pop
jg
and
inc
mov
je
or
shll
ret
nop
cwtl
out
add
sub
cmp
les
aas
adc
scas
mov
mov
movsl
inc
adc
pushl
loope
sbb
push
cmpsb
cmp
jbe
or
mov
adc
clc
mov
push
lcall
dec
mov
cmp
js
je
outsl
xchg
aas
xor
lea
sub
xorb
adc
dec
sbbb
popf
mov
vsqrtsd
popa
push
inc
and
mov
out
lds
incl
or
mov
clc
cltd
xchg
mov
xchg
repz
orl
xchg
push
outsl
outsl
push
andl
mov
out
xor
sbb
mov
jmp
push
add
xor
pop
sub
repz
jne
in
push
adc
jo
add
incl
xchg
xorb
movsb
and
jo
jb
push
lret
push
aas
push
and
pop
lahf
stc
jno
jl
out
xlat
sti
jno
and
loop
mov
outsl
idivb
in
test
lcall
xchg
nop
lds
adc
lods
loop
and
jmp
xor
jmp
lcall
incl
and
test
aad
xchg
ud0
lcall
mov
jmp
dec
push
bound
xchg
sub
ja
iret
mov
cmc
call
mov
jbe
cmpsl
pop
mov
xor
push
inc
mov
pop
cltd
outsl
loop
jmp
popf
mov
and
jg
cmpsb
dec
call
fmull
xlat
repnz
mov
ljmp
popa
clc
movl
mov
imul
or
rclb
iret
mov
add
aas
icebp
jg
jmp
lahf
adc
xchg
sub
outsb
incl
pop
out
add
lahf
mov
push
pop
dec
mov
push
adc
jp
sarl
outsl
jge
jmp
ja
pop
sti
icebp
dec
lods
sub
int3
repnz
push
subl
lea
call
cmpb
push
lock
lahf
xor
shll
xchg
pushf
add
inc
ret
inc
add
jp
xchg
add
decl
out
out
mov
sbb
lock
lcall
push
into
adc
cmc
mov
hlt
imul
mov
scas
cmp
mov
hlt
nop
in
xorb
rclb
jmp
inc
loopne
xchg
fdiv
sbb
adc
xor
adc
mov
mov
sbb
dec
int
inc
out
arpl
in
cmpsb
arpl
in
loop
inc
push
mov
xor
push
pop
cltd
int3
std
xor
mov
jb
pop
dec
nop
xor
fistps
aas
or
ficoml
rcrb
sbbl
lahf
nop
add
inc
add
ljmp
int3
stos
aas
lret
std
cmpsb
ljmp
outsl
orb
mov
cld
incl
jge
pop
mov
mov
fidivl
pop
push
int3
int3
push
or
out
enter
cld
incl
cmp
aaa
add
aad
roll
cmp
test
and
push
aas
jg
adcl
decl
mov
insb
scas
lret
dec
mov
mov
sbb
fldt
push
mov
adc
sti
mov
insb
iret
int3
mov
xlat
clc
adc
out
aam
aaa
lea
in
dec
xchg
lock
jle
mov
pushl
mov
cmp
pextrw
scas
pusha
sub
mov
out
popa
mov
pop
aas
sub
inc
mov
outsl
dec
xchg
cs
ljmp
mov
cli
pushf
inc
imul
fisttpll
jne
cmp
into
mov
lcall
jno
enter
sbb
les
fidivl
adc
bound
xlat
fst
decl
or
push
mov
leave
je
js
arpl
xor
dec
xchg
mov
in
xchg
stos
mov
push
insl
sbb
ret
inc
loopne
and
sub
and
mov
dec
mov
ljmp
jns
xchg
cmp
inc
fnstcw
enter
mov
inc
dec
fwait
jae
int
gs
jmp
movsb
dec
xor
jmp
test
imul
clc
decl
add
push
jnp
in
jo
or
cmp
xor
dec
rcrl
fwait
mov
lret
or
lret
sbb
add
sar
shr
sbb
sbb
dec
iret
or
mov
pop
adc
cmp
dec
out
gs
fcomps
jno
add
lcall
imul
out
idivl
into
jmp
add
or
lods
push
aas
and
jmp
jp
movsb
sub
xchg
dec
sbb
inc
in
ja
decl
and
xchg
lods
pop
xchg
or
sahf
pop
or
std
sbb
inc
xchg
push
loope
lret
xor
dec
cmp
push
add
lcall
dec
aam
pop
dec
lret
xchg
jecxz
cli
xor
shrl
xor
aas
xchg
filds
mov
push
sub
pop
mov
add
mov
mov
push
mov
fimull
dec
xor
cld
call
push
mov
mov
mov
pop
dec
mov
pop
jne
call
push
movsb
jmp
xor
inc
lock
es
imul
push
push
daa
inc
scas
or
call
dec
lock
out
mov
icebp
pop
nop
into
out
pop
xor
jmp
out
mov
mov
bswap
xor
adcb
inc
and
mulb
stc
jb
jmp
jns
iret
hlt
pop
insl
inc
out
xor
lods
push
je
out
sub
loop
xchg
cmp
ljmp
cli
inc
clc
int3
and
push
mov
icebp
nop
shl
dec
sub
loop
ljmp
cwtl
addr16
dec
shll
push
jno
sub
imul
cmp
jecxz
divl
fdivrs
inc
mov
pop
adc
insl
cmp
popf
call
pop
in
push
and
adc
mov
mov
je
fadds
push
movsl
mov
mulb
sub
add
jecxz
mov
cmp
aaa
ffree
out
enter
dec
jo
xor
lods
stos
pushl
outsl
out
mov
gs
imul
cmc
xor
sahf
jmp
inc
sub
shrb
rcr
inc
addb
lcall
or
iret
shrb
int
jae
popa
xor
xor
lret
adc
in
pop
xlat
jae
sbb
jmp
ud0
aas
adc
xchg
aam
pop
shl
call
sub
loope
jecxz
jns
loop
jmp
push
mov
sbb
jge
xchg
dec
je
mov
popa
jo
mov
pop
xchg
lret
loopne
incl
inc
sub
inc
lock
mov
add
call
sub
push
decb
cli
mov
pop
gs
push
xchg
ud0
jg
pop
cltd
lret
pop
ss
push
pop
cmp
push
icebp
or
xchg
xchg
mov
xor
call
sarl
stos
or
add
sar
addl
dec
js
loopne
scas
and
pusha
rcll
mov
stc
dec
mov
out
sar
xchg
test
jno
pop
call
std
add
pop
pop
push
das
mov
xor
jnp
inc
sarb
mov
push
in
inc
scas
lods
fwait
pushf
rolb
imul
adc
aas
std
jns
test
rolb
mov
shll
jnp
out
rcl
ljmp
es
mov
sahf
into
out
push
imul
test
divl
mov
inc
les
inc
push
je
cmpb
push
stos
mov
out
daa
mov
and
dec
add
cmp
jmp
pop
lret
xchg
xor
adc
aam
jmp
ud0
add
addr16
incl
pop
add
je
cmp
sub
adc
rcrb
xchg
push
wbinvd
adc
mov
xchg
pop
jmp
add
cmp
cmpb
test
jg
lahf
push
xchg
mov
pushf
ret
lcall
xchg
push
ret
ljmp
fdivl
cld
aam
xchg
mov
ret
mov
cmc
jg
cmp
jmp
fcoms
cmc
pop
or
sbb
pop
outsb
ret
nop
mov
outsb
js
lea
fdivp
call
xchg
sbb
cmc
adc
adc
dec
dec
in
jmp
sarl
addr16
ss
lock
sar
decl
leave
sahf
cmp
xchg
out
mov
adc
mov
daa
nop
fcmovbe
enter
iret
aas
adc
jg
mov
xchg
out
repnz
insb
lods
mov
pop
incl
in
popf
dec
sub
sub
fstl
mov
lret
cmp
mov
sbb
mov
mov
pop
add
adc
lcall
clc
push
sub
roll
aas
shrb
jb
adc
call
mov
insb
or
iret
sub
inc
jmp
aas
xlat
movsb
iret
jp
icebp
add
loop
mov
outsl
je
and
insl
inc
inc
xchg
sarl
lcall
dec
dec
cmc
je
pop
das
imul
aas
sub
in
mov
dec
mov
lcall
mov
push
les
ja
cmp
rcr
xor
incl
pushf
add
std
out
shll
je
rclb
ss
sbb
pop
mov
call
push
cmp
jno
mov
dec
cmp
lcall
xchg
lock
loopne
cmp
pop
dec
xorb
pop
sar
call
ror
xchg
adc
sub
dec
mov
or
clc
jle
xchg
mov
push
jne
or
dec
scas
mov
mov
dec
push
call
mov
scas
lahf
ds
add
add
fstpl
dec
loopne
aaa
lcall
or
fwait
push
cld
addb
xchg
jg
dec
decl
daa
insl
hlt
lock
cmp
leave
and
jbe
push
xchg
stos
or
int
test
pop
loopne
arpl
sbb
ljmp
mov
scas
adc
lret
or
jmp
test
fcmovne
cmc
test
mov
decl
in
mov
dec
data16
cmpb
movsl
dec
or
or
test
push
xchg
rclb
jnp
cmc
fmull
pusha
nop
mov
fcomps
fsubrl
pop
pop
data16
lcall
pop
rcll
xchg
movsb
loopne
sub
cmp
in
mov
call
and
mov
mov
mov
les
pushf
repz
test
inc
rcrl
ljmp
into
andb
enter
leave
lret
inc
icebp
jp
or
mov
push
and
and
decl
jae
inc
aad
sub
mov
xchg
insl
mov
lret
mov
mov
inc
sub
arpl
mov
jmp
test
lret
ffree
sbb
dec
popa
sub
xchg
mov
or
call
jmp
adc
pop
jns
outsb
enter
leave
shl
push
and
add
mov
jg
incl
pop
cwtl
cmp
and
dec
bound
mov
leave
push
inc
jno
mov
pop
aam
orb
repnz
push
sbb
in
loope
or
pop
push
adc
enter
fcoms
inc
lcall
call
popf
arpl
mov
lea
fcoms
xlat
insl
and
lods
add
push
insb
add
inc
das
iret
incl
out
cwtl
xchg
dec
add
xchg
lret
mov
js
adc
cli
dec
jns
int3
pop
mov
lock
xchg
cmpsl
in
std
jbe
lock
and
pushl
jp
mov
addr16
imul
mov
andb
fucom
data16
mov
add
inc
call
mov
rcrb
add
nop
xor
push
sbb
test
or
jg
stos
push
jmp
out
xor
mov
mov
cld
ja
lcall
pushl
test
pop
lods
cmp
cvtpi2ps
cli
sub
div
xchg
push
test
mov
xor
flds
cli
nopl
pop
cmp
ss
imul
incl
and
cli
push
dec
jnp
push
mov
push
mov
push
hlt
int
pop
pop
cmp
jmp
xchg
rorb
ret
jmp
push
and
ljmp
dec
imul
xchg
cmpsb
sbb
dec
xchg
xlat
push
sahf
pop
mov
fsqrt
pop
mov
push
pushl
idivb
fisubs
push
jb
jg
mov
mov
push
call
jp
and
int
xchg
pop
fsubrl
mov
lret
aas
iret
mov
bound
aas
sbb
and
mov
jecxz
fwait
adc
aaa
sub
sub
jo
cmpsb
jae
push
icebp
add
mov
and
lcall
aad
jns
mov
fsubp
cmp
and
decl
jo
jp
outsb
inc
add
xchg
movsb
jb
pop
negl
dec
jmp
aas
push
xor
mov
repz
lret
pop
push
lea
mov
mov
push
shrb
ljmp
iret
mov
mov
popa
sub
dec
lret
mov
xchg
push
xor
test
orb
jl
idiv
jmp
shrb
jle
jp
popl
sub
xchg
dec
aaa
lds
dec
xchg
add
mov
or
pop
dec
incl
adc
pop
mov
lcall
pop
je
hlt
scas
jle
mov
das
repnz
gs
repz
stos
adc
mov
shlb
enter
mov
mov
add
jg
add
cmp
jae
mov
ficoms
fisubrl
push
or
daa
aad
aaa
jae
andb
mov
sbb
xchg
sbb
ljmp
das
dec
or
into
xchg
inc
jle
cs
loopne
or
push
loope
adc
ljmp
mov
sub
out
cmp
lahf
inc
push
adc
stc
lcall
fs
shlb
movb
ljmp
add
rolb
inc
inc
gs
cwtl
vpor
cltd
call
call
test
shrl
pop
ret
sub
mov
mov
aam
and
adc
pop
pop
test
aas
test
jmp
fildl
inc
xor
push
mov
or
push
add
inc
mov
cmpb
xor
cli
call
sbb
shll
xchg
cmp
mov
lahf
add
adc
aas
in
jle
rcr
test
adc
orb
inc
decl
or
in
and
mov
in
sbb
inc
cs
ja
loope
cmp
jl
incl
dec
arpl
sbb
adc
sbb
mov
jp
fldl
vmwrite
sahf
test
repz
lock
add
dec
aas
fistps
sbb
loope
ljmp
inc
sbbl
adcb
sub
or
les
divb
arpl
ljmp
pop
fisttpl
dec
mov
notl
cmp
mov
mov
dec
rolb
data16
lcall
hlt
lret
mov
add
pop
out
xor
out
cmp
xchg
bound
arpl
jmp
sbb
cmp
mov
dec
aaa
data16
sarl
cld
lahf
imul
adc
jmp
fcmovbe
icebp
push
and
pop
or
push
pop
imul
dec
inc
out
popf
cmpsb
call
cmp
fsubp
arpl
loopne
sub
and
xchg
test
adc
lea
iret
scas
add
mov
and
and
xchg
out
sbb
call
jl
rcrl
stc
sub
push
mov
cmp
mov
incl
adc
leave
xor
xchg
mov
dec
push
xchg
jno
dec
fists
std
decl
jne
je
jb
call
or
and
inc
adc
incl
stos
movsl
inc
dec
rol
mov
cld
pop
mov
lock
jmp
mov
add
repnz
daa
movsb
mov
ljmp
jmp
or
stos
sahf
fildll
add
mov
sbb
incl
inc
iret
lock
lahf
mul
addr16
dec
push
adc
sub
or
movsl
push
lea
jnp
movsb
push
ret
xorl
aas
rclb
or
pop
pop
xchg
sub
lock
pop
cwtl
loope
add
aas
sahf
mov
adc
mov
lcall
int3
ljmp
cmp
or
out
iret
jg
sbb
jle
pop
testb
xchg
xchg
inc
lret
xchg
mov
pop
lods
cmp
mov
lea
js
cmp
inc
and
pop
les
rcrb
mov
daa
clc
pop
jns
mov
jg
cmpsl
in
rclb
jp
push
mov
testl
out
stos
into
lock
adc
dec
add
pop
cwtl
aas
pushl
sbb
push
out
lret
in
or
inc
cmpsb
leave
push
cmc
push
lcall
xchg
aam
inc
in
and
adc
in
ss
notl
jmp
jo
mov
push
push
das
fsubs
mov
jb
jmp
sbb
insb
mov
sub
dec
das
cs
lods
movsl
aaa
jg
sub
loopne
int
shrl
lea
enter
ljmp
and
addr16
scas
fdivl
addr16
inc
mov
or
mov
and
and
adc
ss
mov
sub
dec
push
mov
ds
xlat
sbb
fdivs
dec
mov
sub
add
jae
incl
fldcw
test
push
jnp
pusha
lret
and
roll
icebp
call
ljmp
repnz
lds
xor
jecxz
ljmp
push
movsb
and
dec
dec
in
outsl
pop
stos
stos
mov
pop
ret
xor
icebp
test
pushl
xor
xchg
jge
loopne
nop
loope
fwait
out
cmp
mov
mov
incl
jmp
and
mov
add
in
fdivs
cmp
incl
jbe
cmpsl
dec
xchg
inc
adc
hlt
shll
pushf
dec
lock
push
enter
fwait
xorb
incl
scas
jnp
xchg
mov
stc
das
pop
mov
fsubs
and
push
sbb
lcall
lcall
loope
frstor
dec
inc
icebp
in
call
icebp
xchg
xor
fistl
add
mulb
lcall
iret
repz
xor
cmc
adc
push
inc
and
dec
ds
sub
inc
icebp
jmp
call
xor
aam
push
clc
mov
nop
jmp
shll
jnp
mov
out
mov
ljmp
pop
pushf
mov
sbb
scas
fldenv
fxch
ljmp
out
jg
int3
and
jmp
aam
cmp
jg
mov
push
dec
lock
inc
adcl
rol
call
pushf
cmpsb
cwtl
push
or
mov
shrl
adc
daa
icebp
bound
jecxz
jmp
das
or
xor
nop
loopne
or
xor
add
test
mov
dec
dec
in
cmp
dec
int
mov
daa
cmp
test
fwait
push
cmp
lcall
adc
xor
int3
out
add
pusha
adc
imul
cmc
mul
cld
fs
ljmp
cs
and
mov
xchg
adcb
in
xchg
out
or
mov
pushl
jle
pop
out
loopne
xor
xchg
shl
mov
inc
inc
adc
lea
ljmp
jle
dec
fcomps
adc
in
inc
add
nop
push
ret
inc
mov
repz
mov
fs
ljmp
lret
xchg
add
xor
xchg
xchg
stos
stos
pushf
dec
mov
mov
ljmp
sub
jecxz
cmp
xor
int3
pop
dec
stos
nop
inc
lock
mov
mov
outsl
mov
flds
adc
xor
repz
decl
es
shlb
incb
inc
sub
std
stos
outsl
push
inc
andl
out
call
jnp
xor
dec
push
jb
jge
insl
push
dec
xchg
icebp
or
pushw
push
mov
call
inc
mov
xchg
and
mov
mov
and
fimuls
call
lahf
and
call
aaa
mov
xchg
addr16
push
pop
and
push
pop
gs
aaa
sub
fidivl
loope
call
scas
mov
jecxz
mov
repnz
sub
mov
push
ficoms
incl
mov
loop
xor
shrl
fiadds
ljmp
decl
cld
jb
push
push
mov
mov
pop
icebp
pushf
nop
dec
les
push
outsl
incl
aaa
adc
or
inc
int
mov
aad
fcmove
jecxz,pt
fldcw
rorb
jno
pop
pushl
fwait
add
cmp
pop
push
mov
or
sbb
mov
dec
mov
stos
mov
pop
fnsave
incl
push
dec
popf
push
add
shrl
gs
push
mov
mov
imul
pushf
cmp
jmp
negl
dec
pop
mov
out
push
push
jb
fisubrs
dec
lods
sub
sbb
dec
fidivrs
xor
testl
inc
jb
or
xchg
jmp
icebp
jmp
xchg
cmp
mov
fs
shrl
stc
add
sub
xorl
pop
lds
call
mov
test
insb
ja
mov
xlat
flds
push
or
cwtl
mov
mov
ljmp
testl
pop
lret
iret
mov
mov
scas
jle
add
out
push
outsb
icebp
jmp
and
adc
adcb
sbb
push
arpl
fs
andl
mov
push
jbe
test
ja
inc
inc
repz
push
mov
adc
xor
mov
xchg
pop
or
decl
mov
out
enter
fldcw
enter
lods
dec
inc
call
js,pt
inc
fidivrl
dec
xchg
xor
xor
lea
ficompl
in
mov
icebp
and
decl
lret
mov
mov
ljmp
mov
and
outsl
lods
jmp
andl
jae
aad
jns
jge
fisubs
push
xor
mov
jecxz
cli
push
pop
sahf
cmc
in
xor
inc
cmpsb
pop
ss
jmp
jbe
lods
pop
jbe
ret
mov
jb
dec
xchg
shll
push
enter
mov
scas
cltd
clc
repz
sbb
into
call
sub
pop
aad
cmp
jmp
add
test
jmp
xor
icebp
rcl
cmp
pushl
xor
sub
popa
imul
adc
fidivrl
aam
mov
ds
ljmp
sub
or
popa
push
lret
sub
push
fdivl
aas
cmpsb
incl
fcomip
fistps
push
dec
stos
jne
xor
pop
push
decl
sub
js
push
mov
ficoms
push
jbe
fwait
incl
call
xchg
push
in
jge
cmp
idivb
add
mov
mov
and
adc
sbb
int3
jns
popa
lret
inc
ljmp
pusha
push
test
hlt
mov
call
ljmp
mov
insl
movl
or
sbb
leave
lcall
ja
jns
leave
push
mov
ds
lds
lcall
out
loopne
push
cs
cmp
imul
nop
pop
test
dec
fnstenv
mov
xchg
bound
push
ret
lcall
inc
lea
cmp
scas
xchg
mov
inc
fcomps
adc
add
rorl
movsb
lods
ss
imul
cmp
xchg
mov
hlt
jg
fbstp
js
and
shrb
add
orb
cmpsl
add
mov
cmc
outsl
jb
lcall
mov
cmpsb
push
push
xor
lahf
jp
cld
mov
add
inc
mov
fs
jmp
call
pop
cmp
mov
mov
inc
jp
je
cmp
call
jb
jo
fucomip
push
cmp
or
test
insl
mov
mov
sub
push
call
loop
sbb
push
mov
xchg
adc
sbb
or
aaa
adc
jp
jle
jle
ljmp
jmp
fmull
xorb
fdivp
adc
pusha
xchg
pop
test
incl
xor
rcl
push
mov
lret
les
dec
cmc
lcall
jne
ljmp
inc
lock
pop
jmp
js
sub
mov
nop
adc
or
xor
jae
cmp
lcall
orb
out
dec
test
pop
mov
fistps
lahf
dec
fiadds
pop
cmp
jns
add
adc
pop
fmull
sbb
insl
fdivl
mov
fdivrl
sarl
lcall
out
cld
mov
pop
pusha
sahf
idivl
test
cwtl
loopne
and
scas
dec
inc
aas
lods
nop
adc
add
cmpsl
outsb
movsl
rcl
cmpsb
popa
xlat
jnp
lcall
adcl
dec
sar
das
stos
shll
and
outsl
or
sbb
sti
mov
decl
sub
jns
mov
or
inc
sbb
mov
jmp
xor
mov
outsl
lock
inc
dec
out
enter
movsl
fcmovu
cmp
inc
ljmp
cmp
out
pusha
mov
push
mov
or
sti
popa
call
add
pop
outsl
insl
cmp
cs
push
and
push
in
stos
adc
pop
adc
fs
pop
in
test
stc
xor
or
cmp
pop
sahf
inc
ds
xchg
sub
dec
icebp
add
and
es
add
inc
dec
out
xor
push
jmp
mov
scas
push
pusha
cs
push
pop
mov
out
xor
pushl
arpl
jnp
xor
sub
das
xor
movsl
cmpsl
pop
push
dec
sub
movsb
loopne
fsubs
call
mov
jns
mov
push
jb,pt
roll
xor
out
rorl
incl
sub
fmull
mov
in
sub
adcb
scas
stos
xchg
shrb
sub
stc
fsubrs
add
lods
rcrl
js
adc
mov
or
das
jb
pop
ret
jg
loop
stos
adc
sbb
pop
cmpl
imul
sbb
in
and
aad
outsb
xchg
popa
rcll
aaa
mov
xchg
cld
ljmp
shl
leave
dec
jne
push
loop
and
out
jb
incl
adc
scas
mov
clc
lea
movsl
mov
pusha
sbbb
popa
daa
leave
jmp
mov
jnp
dec
in
sti
es
lcall
adc
dec
jb
cmc
inc
dec
ret
dec
push
xchg
mov
push
add
cmpsl
cmpsl
sbb
mov
or
bound
incl
icebp
bnd
inc
notb
cmpsl
addb
lret
jg
je
sub
jnp
jmp
bsr
ljmp
mov
xlat
outsb
outsb
ja
in
insb
and
lods
pop
cli
aaa
inc
lcall
mov
inc
lods
aas
adc
stos
xchg
mov
jns
imul
cld
nop
sar
or
divl
push
ds
inc
nop
ret
data16
movsb
mov
xchg
leave
jbe
or
and
xchg
hlt
in
test
pushf
cmp
enter
outsb
fidivl
jle
cmp
pushl
dec
sbb
fistpl
insb
push
in
sahf
pop
push
hlt
push
fidivs
xchg
in
call
pop
dec
pop
push
aad
push
pushf
mov
sahf
arpl
xor
jb
stos
jmp
pop
xchg
jle
push
fildl
sbb
movl
aas
popf
cmp
xchg
mov
hlt
cmp
mov
xchg
je
repnz
jmp
xor
lods
xchg
mov
aam
mov
mov
mov
ret
xchg
decl
xor
imul
fdivrs
mov
rcl
adcb
cmp
lcall
xchg
mov
mov
dec
xor
ficompl
insb
loopne
inc
or
incl
jbe
gs
push
jno
pop
hlt
mov
pop
xchg
nop
sub
ret
cld
or
inc
xchg
pusha
pop
adc
push
mov
fmull
fidivl
cltd
xor
inc
data16
inc
out
jg
dec
sbb
inc
dec
sub
shrb
jbe
mov
and
add
test
inc
scas
pushf
loop
scas
jnp
cmp
push
lock
sarb
add
adc
frstor
outsb
test
jnp
push
add
add
cmp
pop
jl
call
pusha
mov
inc
xorl
popf
dec
sbb
in
or
mov
or
std
ss
arpl
incl
push
dec
icebp
pop
rol
jg
push
jge
mov
ds
push
cld
stos
test
incl
and
mov
outsl
dec
rorb
imul
pop
lods
mov
mov
enter
jmp
xlat
jecxz
xchg
fstps
repz
pop
ljmp
and
push
outsl
xor
decl
mov
loope
push
fldt
mov
je
adc
pop
cmpsb
out
inc
cmc
ljmp
and
decl
adc
or
shrl
sbb
jg
ja
jns
jae
fidivl
lock
jnp
xchg
gs
pop
push
inc
mov
jmp
push
mov
mov
add
xor
mov
mov
bound
cmp
bound
mov
sbb
jno
lret
std
or
push
js
inc
ja
cld
sub
dec
inc
pop
push
mov
loope
pushl
inc
repnz
sbb
push
cld
ret
filds
aas
aad
and
movsl
jno
push
roll
jbe
out
andl
dec
lock
mov
adc
fs
or
adc
cmp
fnsave
jmp
mov
sub
insb
lds
xor
fistl
sub
shll
fimuls
jmp
in
dec
cmp
mov
call
xchg
sub
scas
cltd
cmc
xlat
fiaddl
incl
and
sub
cld
in
push
add
jns
adc
stc
and
pop
das
shlb
stc
dec
into
lods
addr16
jbe
repnz
xchg
mov
popa
jle
in
sub
imul
enter
jbe
or
stos
rolb
ljmp
adc
sub
fs
xor
jmp
xchg
lock
sub
incb
outsl
ljmp
jmp
pop
repnz
mov
adc
dec
test
and
lods
rorb
roll
or
mov
xchg
sbb
inc
ficomps
je
xchg
mov
pop
lods
push
mov
decl
insb
out
lcall
pop
outsl
aas
or
aad
fnstsw
dec
fucomi
mov
mov
adc
mov
divl
and
pop
dec
mov
clc
mov
call
push
inc
dec
sbb
cmp
lcall
jae
sbb
xor
or
rcrl
decl
loope
jns
dec
dec
sbb
cmp
enter
aad
and
mov
lds
popa
mov
incl
push
xchg
pushl
stc
push
int3
dec
enter
cld
hlt
push
rclb
aas
fmull
xor
lcall
xor
sub
movsb
scas
stos
mov
dec
daa
pop
rcrb
jnp
sub
and
lcall
push
pop
sub
movsl
xchg
inc
fistl
call
push
test
cmp
jb
mov
lods
jl
adc
stc
cli
xchg
fldcw
push
adc
jns
cld
data16
jecxz
popf
xchg
adc
sahf
sti
lea
lods
lcall
adc
mov
enter
insl
mov
xchg
cmp
add
imul
jmp
xchg
pusha
push
jo
jmp
or
out
or
sbb
in
in
aas
and
aad
inc
sub
fnstsw
dec
out
arpl
jb
bound
push
adc
mov
cli
es
mov
push
sbb
push
cmp
sbb
outsl
call
aad
xchg
test
scas
sahf
pop
out
mov
fcomps
mov
repz
mov
int
push
jp
lret
int3
ljmp
mov
es
cmp
push
xor
dec
fmull
dec
jg
incb
fs
test
lods
mov
enter
scas
adc
or
popa
incl
shl
scas
push
mov
loopne
cmp
dec
add
lds
lea
call
loop
fsts
clc
inc
aaa
mov
sub
or
sarl
insl
sbb
stos
fmull
test
in
iret
lahf
sbb
ret
push
dec
mov
shlb
test
add
repnz
sub
push
dec
xchg
loop
decl
mov
mov
jl
insb
scas
call
cmc
std
lcall
shll
push
adc
pop
and
sub
push
ss
or
in
xor
jg
out
into
jmp
adc
lods
add
arpl
jl
and
sbb
add
jnp
jecxz
adc
fiaddl
aad
xchg
call
into
ficoml
mov
pop
xor
jmp
cmp
and
push
mov
cmp
loope
aas
fs
ljmp
stos
fisttpll
aad
aad
inc
shrb
iret
ret
xchg
fcmovb
xchg
cwtl
or
and
push
pop
aam
setge
sub
lcall
cmp
popa
add
mov
lods
add
sbb
sub
cld
pop
or
sbbl
incl
mov
adc
or
rorb
xchg
in
inc
es
inc
mov
lock
dec
and
or
xor
and
out
jmp
mov
mov
inc
in
mov
mov
dec
cmp
movsb
jno
push
stos
sub
test
pop
test
test
scas
les
scas
adc
lock
in
cmp
xchg
test
sbb
dec
loopne
jg
lret
pop
popa
arpl
push
pop
mov
sub
lcall
adc
or
lds
xchg
mov
ret
jmp
stc
mov
inc
enter
adc
jmp
sub
pop
and
jmp
aad
inc
imulb
movsl
cmp
aam
scas
ss
and
mov
std
arpl
pop
lcall
fs
fcmove
jg
and
in
add
inc
mov
dec
sbb
or
enter
stos
mov
loop
cmc
mov
jmp
stc
jnp
test
mov
pop
lahf
pop
sub
lods
in
lea
cmpsb
and
jmp
sarb
add
cmpsl
out
dec
xorl
pop
mov
aad
push
fldt
push
popa
pop
or
jle
test
es
dec
xor
xor
xchg
lcall
lret
cmp
xor
or
push
test
jg
clc
loope
cltd
lock
arpl
fadds
jge
mov
cwtl
mov
pop
adc
sub
lea
and
outsl
iret
divb
pop
xor
jge
insb
sahf
adc
jne
and
jbe
and
addb
cmpsb
outsb
jno
iret
xchg
sub
lahf
mov
fisttps
fucomip
stos
xchg
lock
mov
mov
pop
repz
pop
sub
stos
jmp
inc
jmp
insl
dec
movsb
andl
pop
mulb
and
pop
push
bnd
xchg
leave
fisubrs
lcall
pushl
dec
ss
mov
int
mov
aad
call
and
shlb
add
call
movsl
int3
int3
xor
aaa
shlb
mov
icebp
ret
pop
hlt
xchg
inc
sbb
ret
sbb
jns
sti
fs
nop
sahf
cwtl
rclb
sub
cmp
repz
mov
jmp
pop
mov
clc
loope
lea
in
adc
pushl
imulb
sarb
adc
add
xchg
inc
and
inc
sub
test
xchg
aas
jb
ljmp
ret
test
divb
sbb
xlat
xlat
ja
ja
dec
cwtl
mov
decl
xor
pop
jp
xchg
decb
cmp
idivb
cwtl
dec
jns
loop
inc
popa
push
call
aad
stos
mov
fistpll
pusha
pop
inc
adc
jmp
das
outsb
clc
cwtl
into
data16
push
popa
jg
or
popa
dec
mov
add
incl
dec
mov
pop
int3
mov
and
shr
incl
sub
fmull
dec
test
pusha
scas
scas
sub
decl
rcr
and
into
imul
cmpsl
leave
je
div
ss
mov
mov
loop
jg
add
and
rcr
fsincos
pushf
inc
outsl
test
inc
lret
decl
gs
arpl
or
inc
bnd
sbb
ret
sub
mov
cli
pop
push
push
pop
inc
enter
out
dec
fnstenv
ud0
mov
in
fs
ss
incl
std
loop
lret
ss
cpuid
or
mov
jae
lcall
subl
inc
and
repnz
mov
inc
les
push
xchg
add
push
push
mov
mov
mov
cmp
lahf
sbbb
xchg
in
or
or
decl
lret
rcr
jnp
mov
imul
push
enter
outsb
mov
lret
std
call
test
and
add
jecxz
dec
inc
push
lock
mov
ficompl
inc
and
mov
js
mov
and
setg
push
or
mov
xchg
push
jmp
and
sub
xchg
jns
dec
das
lds
popa
add
mov
sbb
dec
mov
push
jp
inc
inc
xchg
cmpsb
call
lcall
sarl
add
popa
fdivrl
aas
sub
add
ljmp
divl
and
sub
ret
sub
mov
testl
mov
dec
mov
push
xor
jmp
into
stos
adc
push
ds
mov
sbb
add
decl
push
push
dec
je
cmp
lds
and
lds
or
fistpl
jg
stc
ds
stos
testb
mov
call
pushl
mov
lods
inc
daa
push
lret
daa
add
xor
insb
test
std
ss
jns
push
and
adcl
inc
lahf
notb
stos
fdivl
lods
and
lcall
inc
repz
lcall
insl
test
lcall
adc
and
scas
ret
frstor
jge
rclb
adc
inc
leave
mov
sub
inc
out
jno
outsb
sbb
repnz
int
dec
xor
incl
fildll
mov
jl
xchg
in
mov
or
mov
ljmp
enter
cmp
mov
pop
testb
sbb
aad
mov
movsl
ret
xor
or
aas
add
sbb
push
mov
inc
or
test
cmp
jg
cld
lcall
sar
lock
daa
push
out
arpl
push
cmc
leave
jbe
push
mov
outsb
idiv
push
repz
shrb
xor
adc
push
push
mov
leave
adcb
scas
mov
pop
std
jo
idivl
jae
xor
xchg
sbb
sub
mov
cmp
pop
cmp
and
inc
jle
jne
arpl
mov
jg
aas
std
sub
or
int3
fnsave
mov
popf
sbb
and
jg
jg
adc
fucomp
xor
pop
arpl
ja
inc
andb
dec
adc
nop
cmp
add
loopne
stc
adcl
jg
mov
mov
sbb
mov
dec
push
jp
mov
sar
jge
sbb
daa
sub
jg
in
clc
call
mov
and
mov
popa
shlb
sbb
adc
lret
dec
dec
pop
daa
mov
inc
movsb
push
cltd
fisttpl
call
xchg
int
lahf
pusha
dec
or
mov
jmp
lret
pop
pop
rcrb
in
cmp
icebp
cmp
hlt
mov
sub
and
jg
in
enter
out
jns
stc
push
int
mov
adc
out
fs
mov
xchg
scas
lret
enter
lahf
aas
out
call
inc
movsl
daa
add
cmp
cmp
loope
dec
mov
repnz
ljmp
jmp
mov
adc
cwtl
sub
es
or
int
jg
jl
push
addl
fistpll
in
es
wrmsr
negb
aas
movq
jae
roll
fwait
cli
aad
sub
xor
jmp
sbb
push
mov
cmpsl
outsb
and
in
mov
add
fcomip
add
cmp
out
cmp
xor
mov
mov
ret
jne
sbb
dec
adc
add
pop
sub
adc
decl
mov
cld
int
sbb
lahf
xchg
dec
inc
dec
sbb
pop
mull
cmp
adc
lods
jb
cmc
aas
mov
jge
fwait
ljmp
adc
inc
loop
incl
dec
subb
addr16
scas
sbb
fiadds
fwait
pop
fdivp
aas
mov
stos
pop
jne
and
and
xlat
push
scas
loopne
incl
inc
leave
xor
mov
cltd
adc
dec
xor
les
mov
sarl
mov
and
add
out
bound
or
lock
clc
mov
mov
aam
lock
aas
pop
jae
scas
xor
aas
mov
adc
insb
push
sbb
incl
xchg
adc
stos
lea
dec
test
jmp
sbb
cmp
fisttps
push
jae
push
push
outsl
and
mov
out
and
or
push
test
call
fistpll
pop
or
jmp
pop
add
add
aas
jno
stc
cmp
aas
xchg
adc
lods
dec
dec
add
les
xor
incl
or
test
push
shll
xor
hlt
fdivrl
cmpsb
or
dec
decb
test
inc
rcrb
dec
or
mov
adc
pop
leave
lcall
pop
in
cmc
xchg
std
imul
push
push
pop
and
sahf
sbb
pop
cli
in
pop
in
jg
mov
iret
dec
iret
and
jmp
push
sahf
in
xchg
cld
decl
cmc
int3
inc
adc
or
decl
xor
pop
pop
cmpsl
fsts
dec
int3
into
inc
lahf
cmp
lea
fimuls
and
inc
cld
decl
mov
ficoms
loopne
and
mov
lcall
pop
mov
mov
fwait
mov
out
pop
jmp
lods
push
or
in
ljmp
out
pop
aad
testb
fisubrl
data16
out
push
pandn
incl
jle
xchg
mov
out
jmp
cmpsb
out
inc
push
call
push
bswap
mov
out
pushf
cmp
fcoms
ljmp
lods
out
xchg
stos
pop
pop
dec
xchg
scas
jl
ljmp
xchg
sahf
and
pop
leave
xor
cs
repnz
lock
mov
clc
jmp
cmp
jmp
mov
add
popl
mov
inc
out
int
rorb
fcmovnb
idivl
ret
push
sub
sub
xor
fsubrs
incl
sbb
xor
add
sbb
adc
inc
xchg
lcall
adc
add
lret
mov
sbb
data16
icebp
pushl
aas
stos
or
inc
mov
cmpsl
movsl
pop
popw
push
mov
imul
out
les
pop
hlt
pop
or
adc
scas
jne
lret
test
lahf
aas
push
inc
lcall
sub
cmp
and
jmp
pop
into
sub
movsl
je
sbb
aas
dec
sub
call
iret
fisttpll
popf
inc
iret
dec
xchg
push
sub
xchg
jge
pop
add
pushl
sbb
bound
jge
cmpsl
ljmp
daa
aaa
mov
call
mov
jbe
mov
inc
fiadds
outsb
pop
mov
imul
bound
gs
pop
inc
push
add
lahf
and
pushl
xlat
adc
or
scas
loopne
test
andl
jg
add
sbb
mov
stos
mul
cmpsb
call
inc
das
dec
jne
push
inc
jae
cs
loop
adc
subl
push
adc
int3
pop
popf
sub
pushl
subb
add
push
xchg
lea
mov
xor
in
jns
pop
es
sbb
mov
ljmp
pop
cmpsb
add
sti
jge
pop
adc
cmp
sub
inc
and
leave
mov
sub
call
sbb
cmp
ja
pop
clc
test
pusha
ret
mov
ss
and
mov
push
cmpsl
mov
dec
aas
xchg
fstpt
orl
outsl
pushl
dec
popa
mov
fistl
mov
repnz
mov
adc
mov
call
add
dec
inc
loopne
jne
popf
pop
mov
cmp
out
je
cmp
out
fadds
sbb
jno
inc
cmp
xchg
cs
push
cmc
pop
adcb
popf
mov
je
push
mov
popf
ror
lcall
icebp
fsubs
xor
mov
mov
pop
rcll
dec
aam
std
inc
stos
mov
add
sub
scas
dec
test
push
insl
imulb
adc
scas
filds
andb
icebp
ljmp
cs
adc
sbb
cs
jg
sub
pmaxub
enter
wbinvd
aad
fsubr
paddusb
add
and
clc
pushl
push
xlat
ret
jo
jecxz
sbb
pop
int
pop
cmp
out
xchg
mov
jne
dec
repnz
aas
dec
iret
shll
sub
es
xchg
jae
and
push
push
dec
pop
sarb
notb
cmpsb
dec
adc
mov
es
add
pusha
adc
lods
lcall
mov
pop
mov
aas
nop
and
in
xchg
xchg
cld
jmp
iret
sbb
add
ja
add
cmp
sbb
bswap
xchg
test
jae
jmp
call
nop
outsl
in
jbe
mov
int3
cmpsl
pop
in
or
adc
jp
pop
add
pop
pop
jmp
cmp
test
outsl
orb
dec
nop
mov
mov
enter
out
lcall
fdivl
cmp
lret
imul
test
inc
dec
jbe
mov
roll
cmpl
nop
adc
adcb
loope
dec
adc
push
xchg
or
test
in
enter
imul
pcmpeqb
lret
xchg
fisttpll
dec
daa
loope
mov
ljmp
sub
adc
and
pop
into
stos
jnp
lcall
stc
jge
icebp
and
or
sti
mov
es
xor
mov
out
mov
lea
stc
outsl
dec
fsts
dec
lcall
jb
adc
lock
outsb
pop
shlb
fs
mov
sbb
jnp
mov
lcall
cltd
popf
pop
jp
stc
lcall
and
mov
js
xor
movl
and
movsb
fbstp
pop
xchg
and
add
lcall
mov
test
shlb
movsl
stos
stc
jp
adc
and
pop
xor
incl
rorb
scas
es
pop
repnz
call
insb
arpl
mov
fistl
adc
outsb
ret
stc
xor
xchg
push
pop
enter
call
rorb
add
in
sbb
inc
adc
pop
das
push
jmp
jb
sub
pushf
adc
mov
xchg
lahf
stos
jge
clc
jecxz
stos
push
cmpl
sub
lods
or
hlt
cmpsb
pop
dec
sti
xor
decl
or
es
adc
jnp
imull
mov
lahf
adc
stc
cmp
cltd
jmp
dec
loop
ja
addb
jmp
std
incl
sub
xchg
mov
push
int
fdivs
call
push
pushl
enter
add
popl
mov
filds
cmp
mov
test
dec
push
and
dec
ret
sub
xchg
pop
or
cld
adc
test
dec
cmp
and
cld
call
push
xor
ja
inc
jns
sbb
inc
fildll
inc
stos
inc
decl
leave
jg
mov
inc
aaa
inc
aam
and
xchg
xlat
outsb
enter
sbb
incl
divb
stos
int
pop
pop
es
push
mov
cwtl
psllw
ds
jle
add
dec
or
pusha
ret
sub
or
ds
and
add
shld
jecxz
out
xor
scas
je
je
in
ret
dec
mov
cld
pop
xchg
stc
sub
dec
mov
ja
sete
enter
call
pop
cs
mov
arpl
lahf
ds
jmp
sbb
gs
inc
test
mov
fidivs
jmp
xchg
jns
pop
push
bound
cmc
lcall
cmpb
out
pusha
subl
sti
cltd
decl
inc
inc
repz
test
lock
pminsw
fisttpl
dec
clc
ljmp
mov
cwtl
icebp
iret
fbld
sar
jmp
sarb
les
mov
cmpsb
cli
pushf
xchg
xor
inc
sbbl
out
incl
out
pop
decb
sbb
arpl
idivb
sbb
repnz
dec
pushl
push
xor
fistl
rclb
hlt
ljmp
push
fst
pop
inc
fstl
or
loope
mov
jbe
mov
pop
dec
mov
incl
inc
sub
incl
popf
call
movl
call
adc
jg
in
cmp
sbb
sbb
mov
push
jg
sub
lahf
lcall
stos
mov
repz
or
decl
rcrl
and
pop
sti
andb
or
cltd
sbb
inc
sbbb
clc
decl
pop
pop
enter
nop
into
or
addl
adc
adc
aas
fs
imul
fsubl
out
mov
aas
scas
das
lods
pusha
push
dec
dec
mov
and
ljmp
ja
or
je
sub
or
lcall
filds
sub
stc
mov
inc
sbb
inc
call
nop
scas
ret
out
add
pop
int3
dec
adc
das
incl
pop
cmp
jo
and
jge
lods
pop
or
mov
mov
repz
mov
sub
loope
aaa
sub
and
mov
cltd
push
enter
cmp
std
or
incl
outsl
aaa
jl
xor
mov
shrb
push
sbb
sub
push
iret
incl
inc
ljmp
push
btr
jg
and
out
adc
jnp
adc
mov
adc
call
jmp
or
pusha
cmp
adc
mov
aam
daa
fwait
push
sub
sti
loop
lcall
ja
mov
imul
ss
cmp
in
push
xchg
cmp
add
lcall
xchg
mov
sbb
push
adcb
testl
out
repz
pusha
inc
jne
jae
push
rorb
sub
adc
loop
mov
bound
mov
xchg
push
psllw
pop
adc
jnp
mov
and
add
xlat
add
call
pop
lea
mov
incb
push
mov
mov
adc
movsb
lahf
add
add
and
loop
faddl
outsl
sbb
stos
push
aas
lahf
mov
add
xchg
pop
or
inc
ljmp
push
push
lds
mov
and
dec
push
or
jg
scas
cmp
mov
daa
test
push
divl
sub
xchg
hlt
cmpsb
sub
gs
add
sti
fists
shll
clc
lcall
roll
shlb
ret
out
outsb
testl
xchg
das
enter
inc
ret
or
subb
mov
std
out
daa
and
lret
pushf
pop
bound
dec
sub
inc
dec
cmp
add
in
lret
incl
pop
xor
ds
pusha
add
cmc
mov
pop
push
inc
mov
lods
dec
mov
nop
sbb
cmpsb
sub
lahf
push
popa
xchg
dec
inc
cmpsb
es
adc
les
test
sbb
movsl
adc
push
mov
stc
test
into
xchg
inc
lods
incl
incl
push
xchg
jne
test
lods
dec
loope
dec
or
add
stc
mov
stos
sub
adc
fwait
push
fidivl
xchg
das
add
pop
mov
pop
mov
jmp
xor
pop
xor
and
push
push
mov
inc
lcall
call
jecxz
sti
data16
jno,pt
shrb
shrl
xor
cmp
shl
dec
pop
cmp
add
sarb
mov
xlat
or
sbb
pop
sbb
adc
iret
test
outsb
out
cmpsl
lahf
leave
hlt
inc
sahf
jmp
mov
inc
push
icebp
aaa
push
cltd
dec
imull
push
jg
jmp
ljmp
mov
xchg
dec
and
pop
add
in
cmp
fists
ljmp
stc
aaa
cs
inc
aas
mov
jp
push
aam
jnp
push
add
loope
inc
scas
test
cli
jmp
fsubs
loope
and
in
mull
xor
inc
cmp
aam
push
enter
and
cmp
jno
sbb
std
pop
push
gs
test
call
mov
cmp
divb
lret
jno
adc
cld
decl
dec
jo
out
xor
not
decl
add
xchg
scas
incl
cmp
dec
or
imul
dec
mov
js
pop
lret
inc
xchg
mov
push
shll
add
jmp
mov
xchg
push
aam
imul
xor
loopew
dec
bound
dec
xor
clc
xchg
push
imul
unpckhps
test
pop
push
sub
mov
xchg
iret
stos
mov
sar
call
insb
imul
pop
cmp
push
imul
test
pop
xchg
pop
ja
jno
dec
mov
dec
fnstenv
jle
dec
and
out
wbinvd
aam
jg
sub
sub
jp
incl
sub
mov
in
out
sub
popa
mov
jno
je
rolb
sub
call
loopne
xchg
or
repz
push
lock
test
inc
mov
or
iret
push
in
fcomps
mov
jnp
mov
xlat
xchg
test
xchg
pop
fistpl
lock
sbb
fs
xor
test
mov
adc
daa
lea
addr16
test
and
dec
dec
adc
or
das
or
bound
mov
jns
fsubr
mov
cmp
inc
sbb
test
ljmp
xor
push
xor
sub
in
jl
xchg
lock
mov
insb
aaa
sbb
lods
outsb
test
cmp
inc
or
test
outsl
pop
inc
or
jmp
stc
ljmp
mov
loope
mov
adc
mov
int
lcall
and
leave
mov
jnp
testb
push
jmp
imul
outsl
orl
arpl
icebp
cmp
data16
dec
incl
psraw
sub
jl
dec
leave
loopne
jge
push
lock
lods
mov
and
adc
xchg
scas
decl
xchg
lahf
ljmp
xchg
sbb
adc
in
jb
aam
or
pushl
cmp
push
rcrl
scas
das
xchg
push
cld
incb
in
mov
dec
dec
mov
xchg
iret
jg
mov
mov
int
nop
pushl
lret
into
aas
mov
idiv
lcall
xchg
movsb
dec
test
mov
mov
cmp
das
mov
imul
inc
or
and
scas
sub
sub
jmp
xor
std
add
mov
mov
cmpsb
or
and
inc
xor
les
cld
decl
int
out
mov
inc
aaa
mov
mov
call
int
int
add
pop
out
add
dec
add
stos
push
popl
nop
jmp
fidivl
aaa
and
ljmp
imul
jmp
mov
mov
add
stos
bound
loop
aas
fs
test
adc
insl
xchg
sub
inc
repnz
lcall
adc
in
sti
or
enter
dec
dec
xchg
jns
mov
cmc
push
fisttps
nop
rcrl
jmp
andl
repz
pop
loopne
inc
int
ljmp
mov
cmp
imul
pop
push
push
out
fs
call
pop
push
out
aas
adc
mov
sub
scas
lahf
out
lcall
push
dec
mov
aas
cmpsl
and
scas
cltd
repz
pop
jle
mov
sub
or
pop
xor
aas
cmp
adc
pop
mov
pop
sbb
incl
or
mov
leave
lahf
imul
adc
push
or
push
adc
push
sub
lcall
xchg
stc
insb
lock
xor
jmp
adc
mov
iret
sbb
popa
xchg
sub
stos
call
filds
gs
mov
ss
adc
ljmp
ljmp
stc
scas
test
xchg
jmp
sbb
ficompl
inc
add
fldt
push
and
mov
pushl
rclb
sbb
movsb
adc
pop
int3
inc
popf
or
xchg
aas
cmc
into
les
ret
stos
sub
incl
nop
dec
add
dec
sub
sub
and
dec
push
xchg
jo
jo
cmp
ja
push
sbb
aam
pop
adc
das
cld
add
cmpsb
pushf
int
rcrb
aaa
aam
sub
mov
insb
pop
dec
and
push
int
adc
dec
aas
inc
cmc
dec
lcall
fdivp
jne
gs
or
imul
int
adc
dec
and
jmp
mov
lcall
inc
dec
sub
decl
adc
sub
mov
adc
push
cld
mov
or
cmp
push
xor
mov
and
bound
lcall
jnp
xchg
les
in
out
fiadds
dec
pop
and
cmc
aas
push
jecxz
imul
or
xor
and
adc
push
pop
jg
mov
loope
add
cmp
cltd
dec
adcb
incl
repz
arpl
cld
mov
mull
gs
lret
std
call
sub
or
cmp
xchg
mov
fs
dec
lret
mov
push
pop
xchg
mov
mov
aas
mov
in
mov
jl
imul
sbb
and
mov
movsb
push
fs
mov
lahf
pushf
movsb
or
mov
call
mov
lcall
cmp
or
push
mov
das
test
stos
inc
filds
add
fistps
mov
mov
pop
jne
xchg
dec
daa
sub
dec
aad
cli
mov
dec
sar
jg
sahf
xor
pop
inc
aad
mov
pop
pop
dec
incl
in
mov
pushf
cwtl
cltd
out
stos
mov
cltd
xor
jmp
into
test
push
add
rorl
sub
fcomip
lcall
mov
cmc
fcoms
out
dec
push
mov
jge
push
decl
sbb
add
dec
in
ret
push
pop
into
adc
or
inc
nop
pop
or
scas
ret
fistpl
inc
fsubl
adc
inc
jb
xchg
inc
pop
cltd
jns
mov
fimuls
inc
sarl
mov
iret
ja
rorl
sub
pop
mov
sbb
enter
and
aas
popa
das
jl
in
rorl
cmp
sbb
dec
inc
or
dec
jle
loopne
pop
fisubrs
stos
ror
movsb
lcall
dec
out
jo
int
leave
int
das
adcl
pop
bound
enter
mov
fnstcw
sbb
or
jns
and
push
and
jg
mov
add
aad
loop
cmpb
call
shll
in
mov
ljmp
push
fists
jg
adc
push
iret
sar
decl
cs
lods
sub
xchg
ds
nop
mov
incl
aam
ret
dec
pop
inc
in
mov
dec
gs
std
pushl
fxch
mov
pop
pop
and
pop
jne
inc
cld
scas
enter
out
jecxz
cmp
popa
adc
call
lret
into
and
out
mov
ror
xchg
outsl
incl
fnstenv
dec
cs
ljmp
das
mov
and
add
jmp
insl
mov
sub
leave
das
nop
test
push
lcall
jg
movsb
in
in
xor
jbe
das
movsl
in
push
out
push
nop
dec
jmp
dec
fldt
sub
ud0
sub
sbb
adcb
test
jmp
insb
test
xchg
data16
inc
subl
add
adc
decl
fistpll
sbb
fildll
lock
sub
repnz
mov
push
pop
repnz
xchg
cmp
fldt
lret
loope
outsl
sarb
push
inc
sub
inc
pop
inc
push
adc
dec
mov
stc
pop
mov
movsb
test
mov
jg
jle
in
pop
push
mov
aaa
fcomps
pop
or
bound
and
cmp
add
jmp
and
and
mov
mov
xchg
cld
decl
jns
shll
imulb
test
ljmp
std
sub
dec
push
hlt
pop
mov
stc
or
stos
adc
pop
xchg
pop
xchg
in
ja
xor
inc
popa
lahf
jb
mov
or
jae
xlat
xrelease
or
lcall
add
mov
and
lcall
pop
or
shlb
in
addb
jno
test
decl
dec
outsl
test
pusha
ss
jne
push
mov
neg
or
or
lcall
pop
movsb
mov
movsl
xor
js
sbb
adc
adc
lods
enter
cmp
push
cmovo
call
add
mov
inc
lea
or
push
dec
int3
out
das
xor
out
sbb
xchg
lcall
aam
cmp
loop
sub
int
jl
cmc
inc
jnp
test
test
or
decl
jle
outsb
popa
jne
outsb
mov
ljmp
jg
xor
sub
dec
cltd
mov
filds
mov
decl
or
push
inc
push
mov
js
aaa
dec
lea
decl
pop
adc
lea
je
dec
iret
sbb
test
mov
inc
push
std
mov
push
clc
or
pop
mov
and
push
jmp
jl
and
add
pop
or
std
clc
lret
shl
xor
out
es
add
mov
lcall
cmp
out
sbbl
jle
or
out
flds
stos
or
lods
stos
movq
repz
pushl
sbb
jle
iret
and
out
xchg
xchg
aad
xchg
mov
int
fnstenv
cmp
lahf
into
or
jns
ds
fidivrl
and
addr16
sub
pop
fbstp
out
xor
lcall
jbe
cmpsl
jmp
pop
test
add
out
rclb
data16
or
xchg
repz
mov
addl
adc
xor
repnz
in
jne
aas
jmp
enter
data16
out
dec
cmp
adc
incl
shr
aas
movsl
jl
adc
dec
aas
adc
stc
pop
jge
mov
lods
fdivs
incl
repz
push
lods
add
mov
jle,pt
add
sbb
cmp
incl
jnp
into
jae
into
outsl
adc
sub
popa
push
cmp
xorl
jb
adc
test
and
jnp
test
incl
test
add
and
iret
add
incl
cltd
mov
jge
adc
nop
and
test
aas
mov
movsl
push
repnz
les
cmp
mov
mov
repnz
mov
adc
fisubs
or
rolb
lods
test
imul
in
in
sbb
or
pop
mov
call
insl
push
nop
adc
mov
movsb
push
sbb
imul
cld
sub
push
out
lods
add
es
adc
scas
test
lcall
dec
sahf
dec
mov
jl
or
xchg
dec
adc
shr
test
clc
ljmp
retw
jmp
call
aam
pop
pusha
cs
bound
mov
jae
cmpsl
out
aas
adc
inc
cmpsl
subl
outsl
movsl
xchg
mov
ljmp
out
loopne
daa
pushf
lock
push
mov
das
adc
incl
insb
mov
fdivrs
pand
add
gs
inc
mov
and
sbb
orl
js
and
mov
inc
push
ja
jo
fisubl
pop
mov
lock
mov
add
cmpsb
mov
jns
imul
jle
cmp
mov
ja
pop
adc
jmp
inc
xor
jecxz
push
push
test
loopne
call
jmp
sbb
iret
bnd
add
xchg
push
mov
sub
push
ss
inc
and
call
mov
call
aad
mov
bound
pop
pop
lds
fs
xchg
add
lock
mov
test
test
scas
call
cltd
push
pop
dec
inc
push
popa
xchg
adc
jae
ljmp
test
fistps
sub
or
add
push
cli
rclb
dec
lcall
leave
add
or
shll
pop
mov
fldcw
add
decl
gs
jno,pn
pushf
outsb
cmpsb
inc
sbbb
int
pop
insl
cmc
cmc
add
pop
inc
inc
jl
inc
mov
decl
dec
das
mov
jns
ljmp
sti
adc
incl
and
bnd
test
jg
adc
cld
decl
test
das
pusha
xchg
or
out
jbe
cmp
inc
and
jp
mov
call
sub
ud0
jmp
data16
loop
cmp
push
aad
cmp
seto
lea
iret
cwtl
repz
popf
xor
xorb
call
pushl
cmpsl
jmp
je
push
push
lds
decl
mov
sbb
mov
dec
sub
call
adc
pop
es
pop
mov
mov
mov
or
mov
inc
jnp
adc
call
jne
jb
sbb
mov
pusha
scas
or
loop
movd
mov
lahf
jg
and
repnz
lds
lahf
jne
push
pop
decl
mov
push
inc
sahf
cmp
pop
adc
jnp
ds
aas
cmpsl
rorl
add
inc
pop
and
call
fstp
rol
aad
adc
mov
insb
fisubs
pop
popf
sub
ficompl
mov
and
dec
or
dec
cld
sbb
or
lea
hlt
jmp
imul
iret
lcall
lret
xchg
das
mov
test
cmc
decl
push
dec
mov
scas
xchg
addr16
stos
sub
out
cs
call
scas
pop
sbb
in
aaa
lds
in
mov
das
and
adc
inc
in
out
inc
push
cmovns
loop
out
inc
inc
shll
dec
sub
mov
stc
pushl
inc
fimuls
test
sub
nop
cmp
clc
jecxz
ja
or
dec
adc
out
shll
sbbb
xchg
inc
shrl
xchg
inc
pop
sti
cli
xor
pushl
pop
leave
pop
fdivp
mov
mov
xchg
dec
mov
lret
jmp
dec
mov
add
subb
adcb
and
sbb
pop
popf
mov
rolb
fwait
mov
add
into
fdivs
pop
xchg
push
dec
mov
or
adc
inc
fisttps
ljmp
ds
cmp
repz
ljmp
movsb
out
pop
pop
ljmp
mov
in
inc
loope
stos
fcomip
mov
push
movsl
sub
cmpsb
mov
adc
decl
inc
fnstenv
sarb
pop
mov
setge
incl
loopne
loope
xchg
in
push
push
pop
jecxz
and
addr16
inc
add
push
fdivl
scas
movb
cli
push
mov
sbb
jl
adcl
imul
push
xchg
aas
mov
shrl
out
movhlps
incl
xor
mov
dec
mov
aas
in
pop
rcr
jg
das
and
add
sub
push
stos
or
inc
cli
jne
test
in
dec
dec
nop
add
test
push
roll
sti
push
sbb
inc
inc
mov
dec
fistps
push
adc
sbbb
adc
test
dec
call
ljmp
dec
mov
imul
movsl
inc
pushf
enter
sub
sbb
inc
test
incl
lods
push
sbb
sub
inc
sbb
and
xor
leave
inc
hlt
add
outsl
in
stos
mov
pop
or
lods
and
jmp
out
and
jae
adc
pop
or
data16
sbb
mov
adc
push
stos
divb
and
lcall
push
inc
xor
in
cltd
jmp
cld
imul
and
pextrw
shll
pushl
mov
push
shlb
lahf
or
pop
shlb
fsubrs
insl
sti
stos
call
mov
jmp
mov
mov
adc
pop
bound
adc
lds
incl
scas
xor
jl
out
scas
mov
pop
cmp
jp
repz
lds
clc
jmp
mov
lds
cmpsb
int3
dec
inc
call
jg
inc
aas
scas
dec
push
dec
lock
jg
jo
lret
stc
sarb
inc
shrb
sbb
jmp
dec
cmp
pop
loope
gs
lcall
rcr
adc
and
and
xor
and
std
lcall
outsb
inc
cmp
add
lods
cmpsl
cmpsb
lea
cmp
incl
inc
add
jg
xchg
mulb
mov
and
ss
jmp
sbb
xlat
lahf
test
icebp
out
es
movl
dec
out
nop
adc
stos
pop
xchg
dec
or
incl
fildll
loop
jge
dec
add
and
mov
inc
adc
jmp
pop
outsl
sbb
adc
adc
or
incl
in
mov
dec
jmp
xchg
in
nop
adc
test
movaps
out
or
inc
sbb
xor
push
lods
out
cs
jbe
pop
pop
xchg
add
xor
out
fisttpl
lds
sub
xor
into
gs
les
pop
jb
jmp
xor
and
lcall
sub
mov
fwait
mov
enter
addb
jmp
and
jo
repz
add
dec
dec
std
mov
stos
adc
jmp
and
or
inc
mov
jg
lcall
sub
push
mov
push
cmova
fsts
xchg
push
push
cmc
incl
sbbb
sub
push
jg
lods
test
jae
push
xchg
ljmp
es
cmpsl
rorb
addr16
lock
push
out
inc
and
icebp
je
fidivrs
inc
shrb
or
dec
mov
sub
sub
out
and
jg
enter
idiv
into
scas
pushl
popf
mov
adc
call
test
pop
pusha
repz
jg
bswap
add
mov
xchg
cmp
loope
jecxz
inc
inc
sbb
call
inc
inc
les
sub
sub
push
pop
decl
lods
daa
scas
cli
xor
jne
xchg
and
inc
cmp
rcll
xchg
sbb
adc
mov
fidivrl
sub
fs
test
lahf
call
in
mov
aam
mov
and
int3
jge
pushf
add
jno
push
sub
inc
mov
sbb
cs
mov
inc
xchg
mov
inc
dec
outsl
adc
dec
ja
mov
xorb
and
push
and
decl
push
flds
stos
mov
add
add
jmp
cmpsb
iret
shrb
dec
dec
loop
int3
and
outsl
pushf
int3
divb
adc
inc
stc
leave
popf
cltd
leave
pop
sub
aas
dec
mov
int3
push
sbb
enter
and
mov
mov
in
out
and
incl
test
sub
in
and
cmp
mov
arpl
and
clc
mov
push
pushl
fildl
lahf
insb
dec
fs
pop
lods
inc
xchg
push
pushl
add
es
mov
pop
push
sbb
stos
ljmp
in
jg
fcom
and
icebp
and
out
fsubrs
pop
inc
imul
stos
imul
sahf
shrb
jmp
outsl
and
test
inc
in
packuswb
dec
insb
push
cmp
jg
mov
adcl
jb
mov
mov
pushl
icebp
std
jbe
dec
adc
jg
xchg
or
add
add
psubsw
jns
mov
aas
adc
push
loopne
arpl
les
xchg
or
jns
mov
neg
iret
lods
or
lcall
loop
mov
push
iret
hlt
pop
push
and
inc
inc
test
adcb
inc
and
mov
sbb
icebp
fwait
sub
mov
shr
pop
push
jg
test
sub
repnz
hlt
incl
pop
xchg
orl
jno
sub
jbe
rorl
mov
mov
or
test
add
sbb
insl
push
stos
outsl
inc
ret
jge
sub
stc
dec
repz
aas
arpl
ffreep
decl
mov
ret
jecxz
fsubrs
lods
aas
jg
pop
or
std
xor
cmp
inc
imul
and
test
mov
sahf
adc
ljmp
inc
rcrb
test
movb
jmp
jne
das
loop
mov
popa
fwait
in
sbb
int3
push
inc
test
nop
outsl
call
outsl
std
pop
stos
testb
mov
mov
lcall
xchg
mov
mov
mov
push
push
fstl
repnz
decl
popf
test
cmp
div
sub
and
sub
adc
jmp
pop
dec
loop
pop
pop
mov
pop
or
push
cwtl
and
fisttps
xlat
inc
pop
fs
aaa
or
data16
lcall
inc
cmp
movsb
xchg
inc
fstl
negl
sbb
mov
adc
lea
xchg
paddb
ljmp
or
ficoms
xor
aaa
cwtl
dec
fbld
push
jle
fiaddl
jecxz
xchg
in
jecxz
xor
jno
test
jae
mov
xor
jnp
add
adc
sub
idiv
call
dec
mov
xor
inc
in
inc
sarb
nop
insl
sub
insl
push
xchg
cwtl
pop
jge
clc
inc
rorl
mov
mov
mov
sarl
add
outsl
test
and
push
popa
push
jg
gs
cmp
movsl
mov
dec
jp
data16
scas
shlb
iret
sbb
aad
insl
aam
outsl
jmp
jle
sbb
pop
ljmp
jb
or
dec
inc
and
in
xchg
adc
movsb
sbb
push
in
out
rcr
inc
movsb
push
and
adc
adc
jg
mov
incl
into
pop
jl
je
mov
cmc
cmpsb
outsl
inc
or
stos
movsb
scas
sub
push
sbbb
icebp
lcall
or
mov
add
fs
adc
loope
imul
pop
out
pop
pop
test
or
xor
stc
jge
mov
call
test
pop
mov
inc
add
pop
jle
movsb
iret
std
bound
mov
addl
dec
or
ljmp
mov
movsl
cli
push
fpatan
ret
pop
decl
push
add
arpl
cmpsb
xchg
lcall
incl
fimuls
pushf
fisubrs
push
sub
fwait
in
aas
dec
jl
dec
iret
out
mov
call
leave
out
dec
fidivrs
push
in
dec
jg
cmpsb
lcall
mov
sbb
call
mov
mov
xchg
rorl
dec
loopne
fdivrl
gs
ret
arpl
test
enter
and
jb
sub
cmp
xor
pmulhw
sub
xchg
pop
sbb
dec
js
divb
xor
mov
xchg
ffree
leave
insb
add
push
scas
movsb
lcall
sarb
mov
xor
push
mov
add
insb
loop
dec
pop
cmp
mov
dec
imul
and
aaa
mov
mov
dec
loopne
sbb
lock
and
incl
inc
aam
imul
fisubrl
mov
and
adc
xchg
std
xor
lea
cmpl
pushl
out
mov
mov
jg
xor
inc
fs
inc
sbb
xor
cmc
movsb
add
pushl
cmp
fstpl
adc
or
jmp
push
lcall
mov
and
xor
out
mov
enter
ret
incl
push
xor
jo
push
mov
jecxz
aam
arpl
fistpll
pop
stos
aaa
pop
inc
idiv
pushl
adcl
adc
test
xchg
movsb
dec
mov
decl
fldcw
out
ror
adc
and
subl
pushl
clc
pop
andb
or
xchg
fstl
and
adc
shr
push
rorb
bound
ljmp
into
stos
andb
aaa
jge
loopne
leave
sub
xorl
fadds
outsb
jbe
mov
inc
decl
shrb
jle
lret
mov
dec
cmc
arpl
aas
and
sub
fdivrs
jo
pop
in
out
adc
lcall
cld
xor
ret
or
aam
pop
rcll
inc
mov
push
adc
imul
cld
or
decl
or
aas
sub
push
xlat
and
mov
sub
ljmp
repz
pop
stos
mov
movsb
and
or
incl
aad
pop
and
or
xchg
repnz
clc
or
ljmp
ds
sbb
fwait
les
sbb
sti
div
cmp
cmpsb
inc
pop
loopne
sbb
std
fwait
pop
sti
adc
ljmp
xchg
test
ret
inc
inc
and
xchg
push
stos
outsl
int
ud0
aas
pop
pop
jnp
daa
outsb
xor
ljmp
add
inc
xchg
add
into
call
cmp
jge
out
mov
pop
xlat
mov
dec
or
xchg
pop
test
aaa
jmp
mov
mov
enter
mov
xlat
add
adc
xchg
rolb
hlt
pop
addr16
add
mov
stc
add
in
and
in
add
out
std
test
pop
loop
rorl
sbb
jg
incl
pop
repnz
add
mov
adc
outsl
nop
adc
sub
mov
or
lods
andl
clc
mulb
lcall
pop
dec
sarb
sbb
pushl
jecxz
movsb
inc
jmp
in
push
cmpsb
mov
mov
fdivp
aas
ja
bound
xor
lcall
and
movsb
mov
mov
insl
outsb
icebp
roll
ljmp
stc
inc
pop
test
mov
test
mov
add
inc
fcos
dec
test
jns
lods
paddusb
mov
push
push
outsl
mov
and
dec
ror
xor
xchg
push
jno
mov
addr16
pop
sahf
mov
fwait
jle
dec
decl
pusha
lret
scas
mov
mov
ds
pop
dec
out
jl
pop
sub
test
imul
daa
lods
mov
lcall
mov
cmpsl
scas
add
repnz
addr16
fdivrs
xchg
mov
push
decl
gs
push
fwait
jnp
aaa
inc
ljmp
xchg
inc
call
ret
xchg
jl
add
lcall
jle
repz
push
mov
jle
sub
ret
int3
rcrl
dec
or
js
mov
nop
mov
lods
out
mov
stos
jbe
shrb
mov
dec
imul
sbb
call
cltd
sub
stos
dec
pop
add
sub
cmc
cmpsb
mov
cmp
mov
mov
cmp
mov
sub
cmp
pminub
lret
out
lret
pop
dec
test
sbb
stos
ljmp
sub
mov
imul
inc
jo
rcll
mov
dec
jns
test
xor
mov
or
test
push
xchg
test
fwait
bound
test
lcall
pop
int
or
loopne
mov
xlat
jg
daa
out
mov
dec
jb
leave
loop
add
xchg
incl
sar
xchg
fs
cmp
sbb
dec
sbb
dec
pop
in
pop
xor
dec
ficompl
sahf
adc
rcll
stc
aam
cmc
xchg
mov
inc
fdivs
ljmp
in
rorb
jle
cwtl
nop
fs
je
sbb
mov
fdiv
mov
jmp
faddl
cmp
jo
push
pop
or
push
pop
pusha
xchg
sar
pushl
inc
rcr
jns
cltd
mov
mov
std
arpl
fistl
lret
sub
fidivs
push
push
pusha
test
cltd
pop
cmc
jp
pushf
xchg
xchg
ds
sbb
cld
js
call
bound
scas
push
jb
rcrb
call
xchg
jmp
sub
pushl
daa
and
push
mov
dec
dec
mov
cmc
mov
sub
mov
fadds
jl
adc
shlb
ja
xor
stos
rcl
rcrb
xchg
data16
incl
shrl
pop
daa
mov
sub
push
mov
xor
ficomps
jae
lret
incl
jecxz
dec
popa
rol
dec
sub
jle
xor
cltd
mov
lcall
std
jno
push
lods
or
mov
data16
ret
in
sub
loopne
add
fcomip
decl
sbb
inc
mov
mov
pushf
xor
testb
loopne
fistpll
sbb
or
in
jbe
jae
pop
mov
xchg
xlat
addr16
push
int3
adc
pushl
and
add
aad
push
inc
or
mov
or
xor
decl
sbb
data16
popa
push
pop
test
in
mov
dec
outsb
cmp
ljmp
xlat
pop
int3
cmp
out
push
rol
add
lret
add
xor
xor
test
or
pushl
xor
mov
fistl
pusha
imul
adc
mov
and
aad
or
lret
mov
cmpsb
cltd
fwait
outsl
inc
sbb
cmp
js
scas
push
aaa
xchg
adc
mov
inc
rolb
xor
mov
mov
fistpll
pushl
inc
lea
adc
outsl
js
subb
add
and
ljmp
aam
jg
mov
ficomps
xchg
lock
and
sbb
int3
in
pushl
xchg
mov
adcb
sub
cs
shrl
loopne
push
cmp
cmpsb
pop
mov
lcall
mov
jge
addb
pushf
loopne
in
adc
mov
mov
cmp
fdiv
dec
hlt
xor
dec
jbe
xor
push
lret
sub
enter
add
adc
xchg
das
pusha
lahf
in
leave
cmp
lret
and
xchg
jle
push
sbb
subb
les
jl
imul
ror
test
das
imul
je
xchg
mov
inc
lock
cmp
cmp
outsb
ja
lock
call
mov
pop
push
lcall
rorb
push
inc
fimull
lods
ret
lcall
sub
movsb
mov
lahf
sub
pushf
sarb
in
inc
lahf
les
dec
pop
ljmp
daa
incb
or
pop
dec
sbb
in
sub
sub
sub
jbe
fistps
lea
jmp
movsb
dec
pop
cld
mov
les
out
aaa
adc
push
hlt
ja
in
stos
mov
pop
mov
decl
mov
or
mov
jbe
adc
lret
in
jmp
xor
pusha
pushl
decl
fcmovu
jp
adc
outsl
subb
int
jbe
mov
loopne
lods
adc
mov
ljmp
loopne
add
mov
cltd
arpl
or
or
pushl
adc
or
movsb
movsb
jge
les
push
xchg
addl
insb
dec
lcall
xor
sub
or
sbb
lret
and
inc
lock
leave
cmpb
call
fnstenv
popf
lods
ret
and
jae
push
dec
mov
sbb
leave
jmp
mov
in
incl
jae
loope
icebp
mov
dec
xor
jecxz
aaa
push
push
push
adc
or
or
daa
dec
pushl
in
repz
scas
push
ljmp
aad
aas
xchg
jo
test
mov
fsubrs
inc
or
outsl
push
rclb
sbb
fadd
ret
jg
sbb
ljmp
push
cmc
inc
mov
mov
mov
sbb
lahf
pop
sub
lcall
inc
pop
data16
pop
std
jnp
popa
jmp
enter
stos
ret
stc
in
repnz
in
decl
sbb
cli
aaa
mov
icebp
mov
adc
bound
insl
imul
je
cmc
out
pushl
gs
scas
xor
lret
ret
icebp
stc
and
inc
or
cli
pop
popf
adc
roll
ljmp
mov
stos
inc
dec
in
push
mov
mov
aaa
divl
xchg
cmc
sub
decl
cs
xor
dec
data16
push
sub
pop
lock
sti
sti
inc
and
mov
jmp
push
inc
cmp
inc
sbb
out
stc
xchg
cmp
call
pusha
orl
pop
sub
push
xchg
fldcw
pop
pusha
ds
sarb
dec
pop
ljmp
push
cs
nop
mov
sub
dec
inc
test
cltd
mov
inc
andl
arpl
pop
pop
inc
mov
adc
mov
lret
xor
pop
mov
and
in
rclb
pushl
or
inc
add
push
jl
popf
jne
xlat
data16
jbe
jg
outsl
dec
movsl
xchg
cmp
lods
cmp
mov
shlb
std
loope
test
mov
insb
and
movsl
or
gs
inc
mov
push
push
jno
xchg
ret
stos
jnp
in
in
xor
xor
out
mov
sub
adc
stos
test
test
rcrb
es
call
stos
cld
sti
push
sub
out
adc
mov
popf
jmp
fdivrs
jecxz
loop
or
xor
sub
incl
pop
in
pop
stos
imul
mov
nop
pushl
dec
push
sbb
adc
addr16
decl
cmpsb
pop
scas
mov
arpl
es
jecxz
and
cli
mov
cwtl
in
push
ds
call
mov
shll
ror
mov
aam
xchg
loopne
lret
icebp
orl
call
cmc
xor
jp
sbb
arpl
sbb
jo
test
cltd
push
call
pop
pop
adc
pop
inc
ljmp
and
xchg
dec
xchg
pushl
leave
arpl
out
cltd
lock
stc
lea
jne
in
xor
or
ljmp
shr
or
xchg
cmp
xor
mov
sbb
and
dec
dec
inc
mov
cmp
fisttpl
or
sarl
mov
lds
decl
addr16
test
cltd
sbb
pop
fisubl
sbb
loop
add
jmp
adc
jnp
std
dec
dec
lods
pop
jbe
adc
lahf
mov
or
ljmp
pop
jg
sarb
mov
into
xchg
inc
cmp
mov
jge
and
lcall
mov
insb
subb
and
cld
ret
sbb
jl
insl
ja
imul
cwtl
mov
decl
jmp
lret
jbe
add
adc
pop
jnp
push
and
lret
or
inc
xor
ljmp
mov
xchg
xor
lds
xchg
inc
fistpll
ficoms
popf
sub
daa
out
push
js
ds
popa
and
popa
push
fadd
mov
cmpsl
xchg
sahf
sbb
call
pop
mov
and
pop
lock
sbb
into
sbb
insl
pop
repz
cmp
int
ljmp
js
push
dec
int3
addb
cs
test
mov
leave
mov
jge
lods
je
incl
outsl
imul
mov
push
sub
arpl
in
in
dec
insb
pop
bswap
fs
pushl
push
and
lret
ja
inc
push
dec
jne
mov
mov
test
add
pushl
std
mov
out
adc
sti
adc
push
xor
cwtl
inc
insb
inc
scas
jle
xorb
xor
pop
sub
movsl
xor
sbb
mov
enter
lcall
stc
test
lods
add
addr16
inc
and
addl
cltd
aas
ljmp
pop
mov
ljmp
and
sub
dec
xchg
das
int
mov
movsl
sub
call
pop
inc
mov
push
out
cltd
xor
jl
mov
mov
sub
incl
sub
xor
pusha
sbb
aam
and
cmpsl
hlt
andl
les
mov
imul
push
dec
sbb
ds
xor
loope
mov
mov
call
in
add
cmpsb
adc
mov
pop
int3
pop
mov
stc
aam
loop
mov
pusha
out
fdivrp
decl
ret
sti
aas
jns
js
mov
in
stos
sub
cmp
in
in
adc
xchg
lcall
mov
jle
xchg
mov
pusha
nop
ficoms
sub
cmp
jmp
mov
call
push
push
lds
and
fdivrs
add
ret
xchg
js
cmp
pushl
js
lods
iret
adc
stos
ret
loop
push
adc
dec
lock
movsb
push
lods
ds
js
ja
std
shrl
lods
outsb
and
bound
ds
pop
int
jmp
jb
jge
push
mov
adc
popf
mov
push
dec
pop
or
fstps
in
test
loope
cmp
in
stc
mov
mov
shll
imul
mov
jge
xor
jb
push
int
or
lods
xchg
pop
and
cld
sub
jae
push
adc
inc
fsubrl
call
jmp
inc
addb
popa
jb
mov
xchg
outsl
mov
outsl
je
mov
lcall
mov
mov
stc
push
lods
add
lock
sbb
xchg
sbbb
inc
sahf
push
call
dec
mov
addr16
mov
pop
enter
cmp
pop
loopne
movsl
in
lret
jnp
test
xor
cmpsb
icebp
aam
jae
roll
xorl
lcall
rorb
sbb
xchg
jno
adc
jb
int3
cmp
sarb
push
stc
in
lods
dec
test
push
repz
in
mov
int3
jbe
outsl
mov
mov
call
inc
mov
push
incb
or
nop
mov
push
fld
jg
stos
jns
jge
cmp
iret
push
dec
stos
push
add
pavgb
test
sbb
decl
add
push
adc
lret
sub
mov
loope
fsub
xlat
test
sbb
mov
rcll
daa
adc
fs
xchg
out
push
inc
cwtl
int
and
lcall
sar
pushl
jle
popf
inc
and
inc
or
das
sbb
push
adc
or
mov
cmp
cltd
ljmp
arpl
fsubs
test
mov
loope
mov
push
sbb
loop
jmp
sbbb
fiadds
sub
aaa
xorb
and
cld
dec
or
loope
lcall
xchg
mov
clc
lods
push
cmp
js
push
ja
test
aam
in
xor
aam
jmp
pslld
mov
cmpsl
out
sbb
sbb
pushf
imulb
sbb
cmp
imul
xorb
decl
inc
dec
das
mov
pop
cmpsl
aad
cmp
inc
sub
pop
hlt
cmc
movsl
ljmp
repz
pop
pop
and
dec
pushf
loop
sbb
mov
loop
cli
mov
mov
call
subl
ficomps
sbbb
fstpl
push
jmp
push
and
xchg
add
inc
in
sbb
mov
pop
dec
mov
mov
push
dec
daa
adc
outsl
idiv
incl
adc
test
dec
fwait
movsl
sarl
js
arpl
adc
jl
cmp
mulb
or
aaa
mov
mov
jmp
inc
stc
jnp
fisubs
roll
popa
and
rcr
sbb
shrb
pushl
push
test
mov
dec
adc
xor
sub
and
lods
call
xchg
jmp
xor
jns
or
ficoms
int3
cmp
inc
das
mov
inc
adc
sbb
adc
lea
cmpsl
xchg
mov
lock
and
mov
lcall
mov
cwtl
push
adc
or
inc
jno
repz
xor
sbb
pop
mov
jg
add
ljmp
pusha
movsl
dec
stos
mov
ja
push
xor
xlat
mov
mov
jmp
cli
sub
pushl
cmp
sbb
jp
pop
test
mov
lret
inc
lods
in
sub
jns
aas
scas
movsl
psubw
scas
in
lret
in
cli
jnp
cltd
rcll
mov
lods
xchg
jmp
call
mov
movsl
outsl
lret
movsl
pop
fwait
lret
xor
inc
adc
ss
es
jmp
push
addr16
test
xlat
xchg
sub
cli
ror
daa
lods
jo
cmpsl
popl
cmp
incl
cwtl
das
mov
sbb
fwait
jnp
mov
test
inc
dec
push
pop
adc
incl
jnp
push
xor
inc
ja
and
add
xor
or
or
insl
nop
cmp
xor
ljmp
xor
xor
xor
es
fsubl
stos
push
and
stos
push
pop
or
mov
xor
shrb
subl
out
mov
ljmp
test
mov
cs
fisttpll
sqrtps
outsb
push
repnz
xchg
cmp
lods
imul
loopne
mov
mov
dec
scas
clc
sbb
decl
insl
xchg
mov
test
mov
jno
push
mov
jp
daa
inc
push
mov
call
mov
shll
add
push
mov
stc
cbtw
pop
aas
sar
xchg
gs
and
incl
loopne
and
inc
daa
dec
int3
xor
aam
test
or
pop
mov
mov
loop
sarb
ljmp
lods
shl
mov
mov
or
sub
jecxz
test
cmp
mov
in
jnp
into
pop
jmp
and
jmp
inc
xchg
sbb
jno
ficomps
ret
xchg
rcrl
push
xchg
roll
dec
pop
xchg
jae
jp
and
pop
lock
rcll
jbe
and
scas
bound
out
sar
incl
push
lret
jp
jae
pusha
aaa
xor
jne
sub
xchg
std
mov
in
mov
call
int3
adc
in
sarl
lcall
xchg
cltd
and
mov
add
out
dec
xchg
pslld
xorb
cltd
cli
dec
mov
sbb
ds
lods
pop
mov
addr16
sub
xchg
cltd
lods
fisubrl
and
cmp
mov
shrb
push
insb
dec
push
pop
push
notl
jb
decl
or
fidivs
and
xchg
dec
dec
and
xchg
lods
mov
fdivr
mov
dec
loop
sub
in
and
push
mov
jb
scas
inc
mov
in
push
mov
push
pop
insl
push
repnz
jns
adc
ja
mov
das
mov
dec
and
dec
mov
stos
les
push
push
mov
cmp
gs
into
add
aas
xor
ljmp
jbe
xor
mov
mov
mov
arpl
xchg
sbb
hlt
pop
pop
sbb
lods
outsb
or
incl
jl
push
xor
mov
rorb
popa
fidivs
clc
sub
in
fwait
pop
pop
lods
sbb
ja
lcall
adc
add
mov
or
jno
das
lock
rclb
lcall
loop
test
icebp
xchg
or
or
mov
jg
fistpll
nop
push
in
inc
ret
jmp
adc
scas
decl
push
mov
and
addb
sub
sub
sub
jg
test
pop
and
movsl
mov
dec
xchg
push
outsl
jnp
mov
lcall
mov
addl
cmp
push
fstpl
xor
cmpsb
imul
call
bound
outsb
push
lcall
cmpb
mov
fcmovnb
orb
mov
fcomip
rolb
movsl
clc
sub
imul
pop
inc
or
fidivrl
in
inc
mov
in
push
jb
push
clc
cld
enter
push
mov
sbb
into
lods
loope
pop
xlat
xchg
sub
mov
incl
enter
dec
popa
mov
icebp
pop
loopne
adc
fistl
enter
int
pushl
fisttpll
add
ret
jle
cwtl
mov
add
inc
inc
xlat
push
ljmp
pushf
icebp
add
sbb
adc
test
adc
ret
mov
mov
stc
add
jmp
mov
call
mov
mov
cmpsb
ret
cwtl
pop
sub
ds
or
addr16
in
test
incl
or
stos
fchs
or
pop
loope
add
insb
add
pop
and
jg
outsl
cli
addr16
inc
mov
sub
and
jmp
mov
xor
out
adc
movsb
ret
mov
push
aam
xchg
inc
divb
ss
cltd
mov
jl
dec
clc
nop
or
and
sub
add
cmp
push
test
pop
mov
decl
push
shrb
sbb
mov
xchg
mov
push
push
ret
lock
xchg
call
jg
adc
push
lahf
outsb
mov
sub
jmp
pop
jnp
cmp
icebp
push
sbb
jle
add
push
sub
xchg
mov
les
jo
mov
jle
xchg
gs
ja
sub
inc
mov
cmp
add
inc
in
mov
sbb
add
ljmp
icebp
ror
fiadds
jns
imul
inc
sbb
mov
cmpl
call
xor
fcompl
stos
out
inc
sub
cwtl
loope
xchg
xchg
cmc
aaa
mov
std
imul
dec
loopne
jne
mov
cmp
pop
push
lahf
ret
jge
out
xchg
ds
inc
rorl
xchg
add
out
movsb
movsb
adc
jnp
repnz
jecxz
pop
push
imul
sub
fbld
pop
jns
mov
ds
movsl
arpl
pop
loope
jl
idivl
stos
push
adc
pushl
sub
adc
outsb
bound
jbe
inc
aaa
push
dec
arpl
cltd
in
les
std
or
jmp
adc
pusha
jmp
mov
sar
rcrl
imul
xchg
add
pop
push
add
loop
xchg
lahf
push
mov
out
jae
jbe
icebp
jle
lret
dec
inc
inc
sub
ret
lods
fildll
lcall
adc
add
lret
xchg
outsb
adc
xor
in
mov
add
mov
aad
out
fiaddl
loop
int3
or
mov
pop
xor
es
rcr
movsw
lcall
das
mov
sub
pop
out
push
sub
dec
test
and
xor
in
mov
daa
cltd
ds
gs
dec
sbb
rcll
in
pushf
sub
repnz
ljmp
lcall
test
mov
jb
pop
arpl
cmpl
movsb
cwtl
xlat
or
ja
lcall
loopne
sbb
shll
out
jae
mov
lret
xchg
push
push
xchg
imul
jb
dec
fdiv
xchg
pushf
sub
mov
push
or
or
adc
cmp
adc
call
lods
mov
leave
push
pop
fisubl
push
and
push
outsb
and
inc
repnz
sti
pop
ficomps
lahf
jno
cmpsb
adc
leave
fadds
repz
inc
dec
jl
decl
inc
mov
stos
notl
adc
sub
lock
inc
xor
xorb
fsubs
test
cmc
repnz
or
inc
sbb
adc
negl
and
incl
in
push
fisubs
adc
addr16
les
jle
pop
rcrl
dec
lret
call
mov
push
lahf
jg
stc
popa
or
pop
xchg
shll
aas
aaa
cmp
mov
sub
mov
pushf
fisubs
or
aam
pushl
inc
lock
into
int3
adc
int
mov
mov
ror
movb
repnz
in
loopne
push
aam
and
aaa
sbbb
push
or
adc
scas
loopne
cld
and
xchg
jb
inc
push
idiv
dec
sub
aas
push
or
dec
cmpsl
jo
push
cmc
cmp
dec
aad
fimuls
xor
addb
push
xchg
mov
xor
pop
cmpl
cmp
push
in
shr
mov
out
cwtl
or
jl
push
jl
lea
add
cs
insb
mov
cmp
decl
inc
push
jl
and
mov
gs
pop
rclb
mov
inc
mov
push
out
movsb
pushl
divl
iret
xchg
shr
fsqrt
xchg
inc
outsl
inc
lock
jmp
mov
jg
adc
roll
inc
popf
fnstenv
mov
test
ljmp
inc
jl
inc
sub
add
sub
xorb
sub
cmc
ljmp
std
insb
sbb
std
pop
and
icebp
les
pop
cmp
jns
mov
incl
nop
and
mov
insb
fistps
jmp
sbb
call
push
mov
clc
popa
and
into
ljmp
lret
imul
cmpsl
inc
stos
cli
insb
int
push
pop
pop
push
cwtl
lcall
lcall
std
push
dec
add
xor
pop
xchg
shl
xor
bound
insb
into
xor
incl
sub
dec
pop
add
dec
sbb
cmpsb
pop
aas
push
int3
mov
push
push
push
test
ljmp
or
pop
divl
xchg
gs
mov
and
mov
scas
cmpsl
jmp
push
sarl
xor
or
shlb
or
lock
add
dec
sbb
lods
and
xor
pop
stos
in
hlt
cmp
test
addr16
out
fldt
pop
shrl
sbb
in
push
dec
nop
insl
xor
incl
xchg
xchg
sahf
scas
cmp
fs
sarl
or
out
sub
in
outsl
cld
mov
lods
mov
out
jg
std
lds
jg
add
add
ret
mov
int
jno
xchg
xchg
sbb
insl
cs
outsl
cmp
ljmp
mov
lock
inc
insb
outsw
jae
insb
fimull
mov
fnstenv
cmc
dec
pop
cmp
push
test
leave
push
rcll
rorl
outsb
pop
mov
mov
cmc
out
cmpsl
cmp
mov
aas
and
pop
pop
cmpsb
or
jbe
jae
xchg
jne
mov
ljmp
jge
fsubs
push
pop
fcomps
pop
cmpsb
sub
fcmovnu
mov
pop
jge
jmp
decl
mov
lret
xor
fs
sbb
jb
push
mov
inc
cmp
fs
dec
cmp
mov
hlt
lret
imul
mov
push
and
test
xchg
das
iret
inc
jecxz
movsl
fcompl
xchg
mov
push
test
cld
push
inc
imul
cmp
xor
push
bound
int3
pop
ljmp
incl
xchg
sti
inc
push
sbb
inc
push
inc
xor
test
sbb
sbb
pop
popa
insb
mov
cmpb
cli
jecxz
jmp
xor
cmpsb
mov
push
outsl
shll
out
stos
cs
sbb
push
adc
ljmp
dec
adc
and
lds
aad
outsl
incl
add
cmc
fcoml
hlt
out
push
sbb
or
xor
es
cmp
testl
lret
and
pop
divl
repz
fmulp
decl
xchg
adc
push
dec
clc
sub
cli
test
sbb
std
call
movsl
lahf
in
ljmp
dec
xchg
mov
lcall
ret
fisttps
in
sahf
sub
push
int3
outsl
adc
cld
lods
leave
int3
lea
test
inc
jmp
cltd
loop
rcrl
out
mov
mov
push
jmp
je
sbb
sub
cmc
aas
xchg
clc
mov
pop
push
xchg
fisttpll
int
push
fsubr
cmp
call
mov
imul
aam
push
push
je
adc
mov
dec
mov
decl
arpl
mov
stos
jecxz
imul
je
cmc
cli
inc
cmpsl
sub
mov
xchg
jmp
cmp
adc
push
insb
jb
loope
mov
push
adc
imul
xor
jnp
test
jg
lock
pop
adc
pop
dec
xor
mov
xor
jmp
loope
add
adc
jmp
pusha
mov
add
cmc
inc
shll
push
bound
push
ret
mov
add
jae
dec
clc
aas
xor
xchg
in
cmp
dec
test
mov
data16
xor
aas
xchg
scas
push
push
dec
push
fs
popf
mov
divb
xor
jmp
cmc
data16
inc
ds
jns
mov
fs
aas
shll
repz
pop
jnp
popf
into
xchg
enter
xchg
lahf
aaa
cmc
jg
xor
testl
je
mov
das
insb
incl
mov
mov
testl
mov
ret
cmp
mov
push
push
mov
aas
and
add
data16
cmp
jno
sti
dec
icebp
insb
imul
push
mov
sub
call
mov
adc
sub
dec
jb
jg
xchg
xchg
push
add
jmp
mov
popf
jnp
mov
lcall
cmpb
and
xchg
pop
pop
call
stos
pop
push
lret
mov
sub
aas
lret
icebp
out
scas
fisttps
das
mov
jo
lahf
jne
adc
ds
iret
and
jnp
orb
sub
imul
adc
push
idivl
push
mov
jmp
rcl
jo
add
mov
in
jno
jae
mov
ljmp
push
repz
icebp
pop
test
mov
popa
in
cmp
inc
sbb
ret
push
les
mov
lcall
rorl
inc
inc
adc
sub
jnp
ror
dec
lcall
sub
or
shlb
mov
adc
cmpsl
mov
jno
cmp
ror
or
and
incl
fdivrs
lods
mov
lea
aaa
scas
jne
test
addr16
movsl
jnp
ret
aam
jmp
pop
dec
cmp
mov
sbb
insb
push
jns
iret
test
lcall
jecxz
mov
mov
movsb
movsl
scas
pop
and
fadd
mov
es
pop
das
ljmp
mov
inc
cmp
in
fcmove
or
add
andl
aas
mov
push
pop
push
xor
fs
cmp
push
jge
and
jmp
pusha
fimuls
mov
test
mov
pop
jb
mov
sub
jg
jns
push
xorl
adc
pushf
out
xor
les
hlt
test
jecxz
out
mulb
mov
cmp
movsl
mov
xchg
jg
lcall
xorb
dec
xor
pop
mov
xchg
mov
loop
mov
in
push
not
cmc
push
inc
jno
orb
xchg
ljmp
push
das
mov
adc
pushl
subb
test
add
mov
pop
addb
sub
mov
pushl
fwait
nop
pop
mov
mov
jb
inc
incb
imul
cld
ljmp
or
xlat
xlat
repnz
pop
mov
jno
fsubrs
cmc
mov
pop
cmp
jmp
jno
fwait
cmp
push
pusha
xchg
xor
bound
xchg
jmp
in
push
fnstenv
ljmp
mov
jg
pop
mov
and
jno
adc
xchg
testl
jo
lcall
sar
pop
cmp
lret
xchg
or
test
cmpsl
arpl
mov
movsb
outsl
lcall
ljmp
pop
sti
jge
sub
pusha
sub
test
mov
fildl
jecxz
xor
mov
inc
ds
push
mov
data16
dec
jno
mov
es
lcall
mov
fnstcw
in
adc
dec
jmp
pop
pop
lods
lret
sub
lcall
or
inc
sbb
pushf
pop
cmp
je
in
jecxz
push
ror
clc
fiadds
call
jb
ss
mov
jg
jne
rcr
pop
shlb
pop
mov
ret
pop
incl
js
cltd
or
and
mov
cwtl
pop
sbb
adc
lcall
cmp
sbb
ret
movsl
mov
and
lret
adc
pop
add
das
mov
outsb
or
pop
ljmp
adc
add
insl
pushf
pop
xor
mov
pop
adc
decl
add
jg
jle
inc
btr
and
shrl
mov
out
cmp
sahf
pushl
jb
cmp
movsb
data16
push
addr16
das
jmp
push
sbb
fldl
mov
daa
and
ljmp
hlt
jmp
mov
iret
data16
mov
test
fwait
leave
pop
or
decl
in
inc
cmp
jmp
adc
jecxz
mov
jg
sub
cmp
decl
pmaddwd
pop
std
add
pop
jg
xchg
cmp
cmp
aaa
ret
push
ljmp
loope
sar
jmp
or
mov
popa
std
mov
adc
aam
js
sahf
fadd
push
jle
ret
pop
fsts
cmpsb
mov
out
bound
repz
push
mov
je
xchg
aam
cmp
inc
pop
fdivp
push
xlat
cmp
jmp
repz
das
lcall
test
mov
pop
pop
aas
enter
cmpsl
cmpsb
in
add
sbb
orl
mov
xchg
xor
jmp
scas
sbb
out
dec
xor
sbb
lahf
lret
sub
jp
xchg
test
lret
sbb
mov
leave
inc
dec
pushf
notl
std
daa
dec
cmp
arpl
sbb
cmp
xor
jle
mov
pop
add
mov
jmp
jne
inc
fisubrl
push
mov
cwtl
in
lock
lret
fnstsw
movsl
pop
jle
xchg
cmp
and
inc
lret
jg
mov
jmp
stos
sbbb
shr
dec
loope
adc
dec
test
lea
pop
lods
or
and
pushl
test
xchg
aas
cmpl
popa
jae
scas
inc
xor
sub
lods
lret
sbb
ljmp
add
pushf
lret
std
xchg
loope
pushf
cmp
hlt
xlat
pop
movsb
leave
sbb
das
mull
mov
pop
ljmp
inc
orl
xor
xor
cmpsl
hlt
sbb
and
adc
jge
sub
insb
jnp
sbb
adc
incl
psrad
lret
lods
shlb
int3
push
cmc
inc
mov
pop
iret
adc
push
fsub
dec
xchg
or
call
arpl
mov
shll
sbb
pop
mov
test
push
int
call
ret
mov
stos
mov
push
mov
push
aas
stc
or
iret
fmuls
in
rcll
xor
std
cmp
rcll
add
or
ljmp
enter
fmul
jbe
cs
dec
call
sbb
push
push
pusha
xchg
dec
push
ror
jns
loope
addr16
stc
jp
insb
mov
jl
jnp
cmp
loop
ficomps
clc
fwait
js
shr
sbbb
cmpsl
movsl
lods
cltd
ror
aam
incl
sub
test
sbb
stc
jo
push
rol
or
cwtl
jmp
lock
cmp
call
xchg
pop
mov
and
repnz
int
sub
push
sub
pop
sub
pushf
je
mov
inc
rorl
imulb
cmp
jmp
nop
fnsave
inc
mov
sahf
out
mov
sbb
push
divps
add
sbb
xchg
mov
lcall
push
clc
ljmp
push
dec
jnp
jo
push
fstpl
and
rcrb
mov
sub
ljmp
and
pusha
stos
psrlw
test
xor
mov
test
out
xlat
lahf
ljmp
sub
std
in
std
icebp
pop
dec
cmp
out
push
sbb
lcall
leave
dec
push
cmp
pop
adc
push
pop
sub
xchg
ret
cld
icebp
mov
cltd
sahf
andb
ljmp
js
mov
js
dec
dec
cmp
into
enter
fildl
stc
or
cmp
pop
fcomp
mov
lcall
in
aaa
mov
fsubr
in
sbb
push
mov
test
mov
lcall
dec
xchg
outsb
jae
pop
scas
jae
xchg
sub
sub
or
push
mov
js
jmp
xchg
out
lahf
mov
add
subl
mov
pop
dec
xchg
push
addr16
pop
push
loope
lahf
ficoms
lea
jmp
ffree
pop
sahf
adc
lods
xchg
mov
ljmp
add
jae
cltd
mov
jo
call
sbb
or
pushl
push
mov
hlt
cmp
add
pop
add
addb
and
loopne
roll
decl
negl
stos
outsl
mov
cwtl
aam
fwait
add
adc
cmp
dec
icebp
mov
xor
incl
cs
int
push
xor
je
insl
lahf
cltd
inc
pop
xchg
rclb
add
insb
mov
mov
incl
repz
adc
jecxz
sarb
sub
aas
dec
shl
or
fcmove
call
sbb
lea
testb
jne
add
xchg
js
push
push
decl
andb
movsl
loopne
cmp
mov
or
jnp
ds
xor
into
call
jmp
ror
imul
pop
fildl
ror
or
or
push
add
mov
mov
stos
sahf
mov
pop
sub
dec
jecxz
or
mov
ret
fistpll
pushl
rcrl
in
and
js
mov
loopne
jmp
jbe
data16
jmp
pop
adc
inc
movd
in
sub
pop
stc
sub
mov
cmp
mov
pop
push
pushl
jnp
jmp
inc
cmpsb
or
xor
out
call
test
jns
jmp
fdivs
aas
push
aad
sub
lcall
mov
push
or
or
imul
push
xchg
cld
es
xchg
fimull
fucomip
jp
dec
sbb
sub
adc
jecxz
ljmp
cmp
pop
pop
xlat
es
cmc
es
aas
pusha
mov
mov
call
dec
lahf
sbb
mov
add
jmp
pop
push
js
cmp
adc
push
shl
xor
daa
cmpsb
sub
sbb
lcall
pop
fsts
mov
xlat
fstps
dec
pushl
cmp
cld
or
sbb
fisubrl
jns
iret
push
dec
push
outsb
push
and
pushl
jbe
test
leave
shlb
pop
aad
enter
dec
push
mov
cmp
push
push
push
popa
ljmp
iret
cwtl
adc
inc
cmp
test
lret
push
ja
or
incl
add
cwtl
xor
cs
adc
nop
fldt
fs
pop
sbb
jmp
and
mov
sub
int3
push
addr16
inc
jbe
inc
dec
ret
insl
push
jecxz
sarb
mov
jmp
call
inc
test
adc
cmp
inc
enter
lahf
xor
dec
inc
mov
cmp
imul
pop
sbb
call
adc
in
aad
les
fisttpll
mov
add
incl
adc
xchg
shl
and
mov
repz
xchg
cld
xchg
dec
movsl
xchg
pop
rolb
call
sub
push
mov
fwait
and
sub
es
ljmp
adc
ret
push
inc
data16
adc
imul
inc
sub
data16
decl
add
cmpsb
fistpll
popa
pop
stos
jle
pop
mov
mov
sub
daa
aas
iret
mov
dec
push
dec
push
rcll
insb
pop
rcl
mov
dec
xor
or
cwtl
sbb
sahf
loopne
pop
decl
jnp
cmp
mov
push
ret
shlb
push
jnp
popa
push
push
cmpsl
lret
ds
cmp
ljmp
jmp
pop
pop
mov
lock
pushf
test
xchg
dec
into
mov
inc
or
dec
jle
jmp
arpl
cmp
fiaddl
xchg
lret
loopne
sub
sbb
or
decl
out
mov
mov
aad
xor
ja
add
rcr
add
mov
call
test
clc
cltd
xchg
lea
pop
jle
add
scas
dec
insb
test
xchg
sahf
test
mov
xchg
xor
jmp
sbb
jg
pop
lahf
cs
mov
sbbb
jmp
aas
sub
mov
pop
push
pop
add
sti
insl
lea
lock
xchg
and
inc
idiv
jmp
adc
pop
push
in
mov
cmp
lahf
lcall
xor
sub
sbb
dec
jl
mov
jbe
push
inc
or
cld
incl
cltd
es
or
test
jno
jns
dec
repnz
call
inc
lahf
cmpsl
data16
scas
xchg
jp
jp
push
js
nop
push
ljmp
xchg
add
pop
test
dec
add
leave
pop
stos
aaa
std
jno
xchg
lock
jg
mov
xor
push
mov
push
mov
mov
mov
mov
push
addr16
add
sub
xor
cmc
mov
or
jbe
jne
into
cmpsb
jmp
adc
mov
mov
pop
sub
or
push
dec
jbe
call
das
jnp
loop
jnp,pt
mov
mov
aad
repnz
xchg
lea
xor
inc
jp,pn
push
dec
cmp
int3
xor
push
in
add
rorl
xor
addr16
stc
js
insb
cmp
jmp
xchg
mov
push
jp
inc
xor
jb
int
fmulp
lret
decl
xor
loopne
shrb
jno
pop
mov
push
shll
cmp
in
cli
jle
mov
outsl
shll
pop
xchg
stc
xor
mov
int3
ret
mov
pusha
or
aas
lret
xor
sti
imul
pop
lret
daa
sets
pushl
repz
jae
das
add
sbbl
mov
fwait
leave
sbbl
ljmp
push
lcall
jecxz
imul
into
fistpl
xchg
mov
sub
incb
pop
cmp
cmp
or
imul
mov
xor
mov
jns
mov
lods
stc
hlt
cmp
in
or
push
sbb
jge
sbb
in
and
xchg
fisttps
les
dec
fwait
push
jae
aaa
scas
mov
loopne
cmp
movsb
push
ret
cmp
out
ud1
inc
sub
xor
xchg
adc
push
jg
dec
scas
repz
js
jg
add
mov
movsb
push
out
adc
ljmp
cmp
push
jp
clc
iret
jne
in
mov
add
mov
mov
mov
push
mov
in
sbb
imul
leave
lret
sbb
icebp
push
pushf
inc
xor
aas
or
adc
mov
ds
lcall
push
movsb
out
ret
je
stc
flds
jp
in
push
es
in
jo
movsl
imulb
dec
xchg
shll
insb
cmp
cmpsl
push
adc
xor
mov
loopne
jg
pop
repz
repz
int
cmp
xor
incl
dec
xchg
push
jnp
dec
clc
adc
adc
and
sar
lcall
leave
push
add
das
repz
cmpsl
xlat
movsb
sahf
faddl
lcall
incl
xchg
mov
rcrl
pop
clc
int3
pusha
aas
jmp
pop
sub
jne
mov
jno
push
pop
insb
ja
mov
rcll
or
cmp
lods
ror
lods
push
out
inc
rorb
add
push
and
mov
adc
sub
mov
test
adc
pop
into
inc
outsl
adc
jmp
je
loop
js
push
insl
sub
shll
scas
in
lahf
call
std
aad
or
cmp
lods
adc
jle
pop
jle
ljmp
repz
mov
test
pop
push
stc
lods
rorb
and
in
pop
inc
dec
test
dec
adc
mov
divl
fbstp
flds
sub
in
jg
pop
dec
mov
sub
sbb
incl
jp
ja
mov
stos
pop
iret
out
aas
enter
cmp
pop
in
repz
adc
jle
add
cli
call
mov
fsts
mov
rcrb
das
aas
and
out
ret
ds
pop
xlat
outsb
sub
out
or
xor
gs
movsb
sbb
sbb
xchg
arpl
std
fadd
cmc
mov
shll
inc
into
mov
jle
xchg
ljmp
mov
daa
sbb
test
in
out
mov
ss
mov
sti
out
ficoms
enter
jle
add
xchg
and
cmp
sti
pop
incl
nop
jne
mov
xchg
or
adc
pop
xor
fsubrp
mov
jmp
dec
xchg
fs
fiadds
fcoml
jb
popf
aas
into
es
sahf
pop
lret
mov
add
call
cmpsb
fwait
add
cmp
mov
xlat
rol
outsl
ljmp
mulps
inc
push
mov
lock
roll
mov
pushl
lds
aam
in
cmp
mov
outsl
mov
and
pushf
mov
pop
jl
call
incl
cmp
popa
adc
inc
insl
shr
fildll
pop
scas
popf
ljmp
cmp
cmc
xchg
dec
out
adc
in
cli
nop
scas
xchg
sar
stos
add
mov
repnz
dec
dec
scas
js
dec
cmp
out
adc
jmp
push
sbb
lcall
push
cmpsl
or
jnp
mov
loopne
push
add
cltd
rcr
sub
push
jb
mov
jecxz
iret
pushl
jno
es
sar
ljmp
xchg
pop
js
push
idiv
mov
adcb
push
push
push
incl
mov
addr16
js
call
cs
push
popa
shr
mov
aas
out
ja
mov
xchg
adc
ret
add
mov
ljmp
pop
rorb
pusha
mov
int3
repnz
xchg
sub
jo
add
xchg
mov
call
fninit
popf
ficoml
push
mov
inc
inc
push
inc
rclb
aas
or
lods
idiv
jmp
inc
imul
scas
sub
incl
pop
push
out
mov
dec
test
pop
mov
mov
adc
dec
lea
adc
jp
mov
lcall
gs
jmp
call
lods
mov
jnp
add
jmp
jno
xor
xor
cli
pop
xor
adc
bound
popf
and
daa
aas
lret
js
sub
daa
daa
mov
ds
fstps
cmc
pushl
std
xchg
pusha
rol
int
sub
es
clc
das
shlb
lcall
test
or
fidivl
aaa
sub
pushf
xchg
dec
sub
cmp
sub
call
sbb
rorb
in
adc
add
sub
adc
out
arpl
mov
add
pop
outsb
adc
ja
jae
lcall
xlat
push
lds
ret
fs
adc
decl
and
sub
adc
test
xor
std
push
dec
outsb
popf
shl
pop
into
pop
pop
cmp
sbb
fsts
sbb
ljmp
sub
inc
cmp
push
mov
rorl
rcrl
dec
jb
inc
adc
jmp
mov
sub
callw
dec
pop
test
enter
leave
cmp
push
mov
or
gs
push
xor
lahf
mov
repnz
lods
mov
mov
ss
clc
cmpsb
cmpl
jmp
lods
jno
icebp
xchg
cmp
xchg
fwait
sbb
push
sarl
cmpsb
mov
pop
jecxz
and
popl
sti
lcall
or
cmp
cmp
cld
pushl
gs
repnz
mov
mov
cs
call
icebp
ret
add
and
jg
sar
pushf
inc
sbb
jge
jae
movsb
cmc
mov
test
into
mov
xchg
push
push
mov
jg
cmpsl
sub
shlb
mov
mov
out
dec
jge
movsb
add
lock
je,pn
pop
dec
or
xchg
mov
lea
xor
jle
xchg
mov
insl
fcomi
mov
mov
sarb
sar
dec
jg
jb
fwait
jmp
loopne
loop
jmp
decl
and
sti
cmp
lcall
add
incl
add
fistpl
and
add
cld
jmp
mov
ss
aaa
mov
pushl
lret
icebp
mov
incl
scas
adc
icebp
cwtl
stos
test
sarb
pushf
jne
push
decl
mov
xlat
stos
fnsave
loope
fdivrp
cld
push
inc
cs
arpl
lahf
or
loope
inc
inc
xorb
inc
push
cmpsl
and
cmp
movsb
ficompl
xchg
inc
mov
pushf
rcll
movl
call
add
pop
inc
xor
jle
push
sbb
inc
popa
mov
icebp
and
rorl
out
mov
mov
decl
jne
mov
mov
loope
bound
sbb
hlt
push
or
mov
cli
repz
push
daa
add
xor
enter
addr16
cmp
jbe
and
mov
jmp
movsl
test
mov
call
and
and
mov
cmc
pop
sub
popa
push
inc
push
xor
sbb
push
sbbb
jne
decl
pop
xchg
push
or
aaa
mov
addb
aas
xor
lahf
enter
inc
xchg
hlt
xor
pop
jmp
and
inc
sarl
jb
lret
mov
outsb
mov
cmp
jg
lahf
imul
movsb
iret
shlb
sbb
mov
push
jle
fcoms
stos
out
or
jno
lcall
pop
mov
mov
cmpsl
repz
mov
test
jp
mov
shl
incl
iret
push
jne
sbb
fistl
setg
rorl
std
incl
ljmp
pop
lods
sub
test
pop
ret
xchg
test
or
mov
movsl
pop
lret
sub
dec
pop
gs
jmp
add
mov
ljmp
decl
sbb
xchg
push
pop
sub
sarl
pop
inc
fldt
out
sub
imul
jmp
dec
mov
addr16
test
jge
daa
mov
lcall
pop
pop
cmp
ret
jg
ss
daa
jl
je
inc
ljmp
xlat
lret
dec
lahf
mov
cli
decl
xchg
cmp
popf
ss
inc
xchg
add
cli
pop
push
in
jmp
fnstsw
call
mov
mov
sbb
dec
scas
or
stc
int3
add
mov
push
ret
mov
xorl
pop
int
aas
or
adc
test
sub
out
lcall
out
fwait
mov
mov
mov
pop
fwait
mov
xchg
or
lcall
enter
fsubs
iret
in
imul
sti
cmp
out
rclb
js
arpl
mov
cmp
lahf
fcomps
jmp
lahf
jae
pop
push
jmp
xor
bound
xchg
out
push
loop
push
dec
dec
test
call
jg
out
pushf
cs
mov
das
mov
sub
lea
mov
das
scas
cld
xchg
jl
data16
mov
mov
mov
ja
sbb
push
in
jmp
fistl
adc
cmp
insb
mov
test
cli
fsubl
jae
cltd
lcall
xchg
pusha
pop
dec
call
mov
adc
lcall
aas
inc
mov
leave
test
in
jg
xlat
add
mov
inc
pop
adc
xchg
jae
jnp
lcall
push
ja
xchg
insb
pop
stos
push
add
dec
test
mov
jg
std
push
add
in
shl
pop
sub
notb
xor
sub
decl
and
sub
mov
pop
lahf
decl
mov
movl
gs
enter
ljmp
lret
loopne
test
aam
mov
jo
xchg
mov
les
pushl
jle
xchg
xor
mov
xchg
mov
roll
sahf
xchg
into
gs
pop
testl
sbb
rcll
addr16
test
pop
loope
mov
sarb
inc
push
dec
icebp
lcall
in
fdivrs
sbb
imul
sbb
jp
dec
jne
jmp
mov
push
mov
in
fcompp
andl
mov
cli
jmp
sahf
push
adc
leave
mov
in
add
push
push
push
ljmp
dec
scas
ljmp
std
es
cmp
lcall
push
pop
mov
sbb
sar
sbb
sbb
xchg
fistps
int
clc
ljmp
test
mov
adc
out
jmp
cs
add
xchg
outsb
in
pop
decl
mov
in
cli
imul
insb
sub
jmp
fistps
je
cmpsl
cld
adc
jmp
dec
js
aam
pusha
adc
push
cld
inc
sahf
lcall
jae
mov
push
neg
pop
enter
cli
mov
jmp
cltd
sahf
ja
add
cltd
stos
gs
cmp
stos
mov
xchg
sub
pop
mov
imul
ja
mulps
dec
mov
stc
scas
popf
repz
ja
pop
jnp
clc
jmp
mov
push
xchg
mov
xchg
or
fcoms
loopne
data16
icebp
aas
mov
mov
jb
jo
lret
popa
xchg
mov
outsb
sti
inc
lcall
gs
dec
mov
aas
out
sti
xor
ja
dec
clc
jmp
add
jns
inc
xor
ret
push
dec
pop
mov
sub
push
mov
aas
daa
add
stos
test
sub
mov
push
or
rcl
jbe
inc
idiv
inc
rcr
fdivs
mov
fisubs
addb
iret
or
lcall
scas
divl
pop
scas
mov
repz
inc
xchg
int
scas
dec
jle
addb
jmp
jecxz
pop
push
test
sti
and
sbb
jg
out
xchg
or
mov
and
sahf
std
xchg
sub
lcall
adc
add
and
cltd
scas
mov
stos
mov
mov
dec
push
jg
cmc
js
cmp
and
mov
jg
xchg
mov
aaa
cmp
add
roll
xor
cli
fs
fldt
push
mov
sbb
jmp
roll
lea
mov
aam
jmp
nop
je
mov
pushl
dec
mov
sbb
push
push
lods
lret
or
fsubr
jb
in
aas
xchg
pop
push
rcr
xchg
aas
mov
sahf
push
mov
pop
mov
cmc
test
lahf
gs
pop
outsl
dec
sub
loopne
jmp
psubq
inc
ds
test
loop
test
movsb
mov
test
mov
pusha
xchg
scas
iret
call
aas
cmp
mov
push
xchg
out
clts
mov
jmp
sahf
dec
out
push
in
test
hlt
das
lods
xor
adc
mov
add
or
ljmp
mov
aas
arpl
xor
enter
xor
sahf
mov
rclb
scas
xor
xchg
lods
jae
pop
xor
popa
and
loope
je
push
push
aaa
sub
cld
adc
or
sbb
push
pop
dec
aas
sub
cltd
cmc
dec
xchg
mov
mov
push
push
mov
pop
fwait
pushl
aad
fisubrl
jg
cmc
xchg
mov
fldl
bound
in
cwtl
call
jno
outsl
sbb
in
dec
push
je
lods
mov
movsb
mov
xor
sbb
cmpsl
inc
rcr
dec
inc
add
int
shl
cli
dec
jg
std
pushl
fcomps
push
jae
xchg
lret
sub
and
in
decl
xchg
nop
fisubs
addl
es
fcomps
xor
sub
decl
push
mov
cmc
mov
cwtl
xchg
daa
imul
push
fistpll
mov
fdivr
jle
mov
call
push
dec
pop
xor
and
pop
lods
cltd
divl
mov
ljmp
enter
leave
lret
outsb
aas
push
xchg
aam
push
push
shlb
push
lahf
jmp
arpl
in
cmp
pop
add
inc
sub
incl
mov
out
mov
inc
cmp
jmp
mov
ljmp
stos
mov
out
repnz
leave
fisubrl
out
stc
push
dec
int3
imul
fcoms
mov
inc
dec
lcall
cmpsl
insb
fwait
xor
ud0
ljmp
adc
dec
rorb
jae
and
cmp
dec
jae
cli
pop
lret
dec
xchg
mov
andl
mov
xor
fmull
stc
add
dec
xchg
cmp
push
push
and
pushl
ja
xor
imul
mov
jg
or
cmp
push
mov
push
out
jg
push
shll
push
adc
outsl
fidivl
xor
adc
aas
mov
inc
scas
fbld
ja
cmc
dec
mov
mov
jmp
ret
lea
loop
push
fldt
lcall
and
in
pusha
imul
jns
xchg
dec
mov
aam
stos
or
mov
inc
enter
pop
adc
dec
mov
jmp
add
lods
and
cmpl
mov
es
inc
push
mov
lcall
jmp
push
mov
stos
jg
dec
mov
cwtl
lock
jns
insb
add
cmp
and
adc
push
or
dec
imul
xchg
sar
mov
cmp
xlat
pop
mov
push
xchg
setne
call
or
rcrb
imull
mov
stc
cmpsl
lds
add
mov
inc
movsl
mov
jmp
nop
fwait
sbb
add
call
xchg
adc
mov
adc
inc
adc
leave
scas
lcall
mov
sbb
scas
push
rcrl
ljmp
fimull
fnstcw
pop
mov
sbb
fstl
or
decl
push
mov
mov
adc
sbb
incl
xor
pop
lock
js
int3
pop
push
movsl
loope
add
in
push
push
jecxz
pop
mov
pushl
popl
sbb
mov
fldz
imul
jg
pop
mov
pusha
inc
scas
loope
in
mov
inc
fdivp
add
fucomip
push
dec
addr16
shll
cld
test
ljmp
ljmp
stos
cmc
sahf
push
fdivs
std
push
in
dec
xchg
push
jle
cmpsl
push
fiadds
cwtl
and
incl
sub
dec
cmc
jg
test
leave
push
xchg
mov
lcall
jge
movsb
inc
data16
lcall
insl
fucomi
inc
mov
jns
adc
scas
jmp
adc
jl
hlt
push
jmp
shr
rolb
aas
xchg
lods
shll
out
mov
arpl
imul
adc
cmp
or
clc
cmp
xor
sub
inc
pop
jle
les
xchg
stos
inc
sub
out
daa
fdivrp
test
decl
loop
shrb
and
into
pop
sub
mov
outsl
test
sub
dec
insb
mov
xchg
jle
add
aas
lret
notl
jnp
xor
push
and
les
mov
sbb
sub
daa
out
stos
es
int3
insl
lahf
mov
lcall
mov
popf
mov
xchg
mov
sbb
or
shlb
dec
addl
test
cli
mov
jg
lcall
mov
dec
adc
stos
xor
in
aas
fdivs
sbb
rolb
jbe
add
fistl
pop
mov
fwait
outsl
decl
sahf
cs
sub
mov
test
inc
sub
cwtl
test
call
or
xchg
test
jg
xchg
leave
das
xchg
dec
movsb
filds
call
cmp
xchg
in
ja
or
in
ror
mov
push
add
mulb
push
add
dec
xor
outsb
popa
cmp
sub
pop
ss
mov
xor
incl
mov
and
rcrl
xor
or
mov
dec
leave
in
notw
cli
lahf
movsb
out
dec
or
jmp
and
and
jbe
inc
ds
xor
add
jb
mov
fcomps
jg
cmp
shrb
push
out
and
sbb
mov
push
push
cld
dec
aas
pop
sub
ficomps
mov
out
pop
pop
cmp
and
push
xchg
movsl
cs
movsb
js
rolb
loope
push
cld
shll
fwait
outsl
mov
mov
push
push
icebp
cld
push
rcll
loopne
js
ja
pop
lret
xor
sub
mov
stc
xchg
sub
inc
aad
arpl
incl
cmpb
add
inc
in
jnp
out
sbb
jbe
pop
ss
setg
jge
mov
ljmp
mov
mov
jmp
hlt
in
mov
or
scas
push
add
pop
xchg
sar
mov
jl
int
push
add
iret
cmp
leave
jmp
jl
fdivr
ja
mov
hlt
lcall
sbb
jg
add
clc
aad
and
xchg
sbb
dec
mov
arpl
fidivs
test
incl
dec
cmpl
xor
fnsave
dec
popf
into
mull
hlt
ret
or
inc
xor
out
and
aad
xor
sub
mov
push
jmp
nop
std
pop
aas
sbb
inc
jo
nop
hlt
outsb
js
scas
and
inc
fiadds
popl
mov
decl
icebp
push
jcxz
outsl
fwait
pop
testb
sub
xor
test
fmuls
inc
icebp
insb
repz
cmp
idivb
incl
test
or
cwtl
jecxz
in
stos
sbb
push
mov
inc
jmp
bound
jge
decl
sarb
loopne
jne
jmp
bound
sahf
addl
rcl
mov
push
xchg
inc
lar
push
sbb
dec
addr16
sub
push
fnop
std
dec
mov
out
jo
arpl
sub
mov
insb
sti
enter
fsubrl
xor
shr
jg
push
nop
movsb
in
add
push
pop
push
jg
test
jle
repnz
popf
push
lods
nop
push
mov
outsl
jge
test
incl
arpl
std
pop
mov
bound
daa
jg
call
por
fisubs
daa
mov
lcall
ds
enter
mov
mov
xchg
imul
repz
lret
and
xchg
dec
ret
stos
cli
stos
mov
mov
incl
scas
mov
mov
dec
cltd
push
outsl
inc
mov
aas
xchg
out
insl
push
orl
push
push
scas
mov
int
cmp
mov
decl
incb
bound
and
popa
mov
jle
mov
sbb
inc
xorb
sub
push
js
sbb
mov
iret
mov
test
jg
and
xor
lods
cmp
xor
daa
jp
test
jmp
mov
jnp
leave
push
mov
dec
push
movsb
stc
jle
call
aam
mov
xorl
es
inc
aad
lret
mov
dec
mov
and
pop
aas
mov
fisttps
add
cmp
decl
add
push
mov
dec
repnz
fxch
or
sbb
cmc
jmp
xor
jae
mov
and
aaa
mov
jle
or
pop
adc
mov
fs
mov
hlt
decl
and
hlt
ds
mov
mov
insb
xchg
lds
add
push
lea
ret
pop
xor
out
hlt
jg
das
sbbl
jo
sahf
mov
in
inc
sbb
movsb
push
push
das
das
dec
dec
cld
incl
sub
shrb
jo
inc
stc
xor
mov
xchg
and
pop
test
sbb
pop
jg
test
lock
inc
xor
dec
decl
add
imul
dec
dec
push
mov
cmp
shll
or
dec
xchg
es
and
cltd
push
cld
decl
mov
gs
dec
ret
or
push
stos
cmp
call
aas
test
jne
and
push
test
nop
fisttps
incl
ret
xchg
int3
adc
pop
cltd
fcoms
push
mov
ror
mov
mov
lahf
iret
decl
mov
pop
jno
jp
sti
sub
cmp
icebp
mov
iret
bt
aas
xchg
clc
loope
ljmp
int
cmp
mov
aaa
jle
mov
inc
lock
ret
pop
scas
decl
mov
lret
ret
shlb
push
xor
lret
or
aas
xchg
adc
adc
pop
inc
dec
roll
lcall
nop
and
jne
add
test
decl
es
outsb
dec
stc
dec
divb
and
pop
mov
sub
lret
sti
adc
outsl
inc
push
out
inc
dec
cld
decl
ss
loopne
popa
ljmp
lahf
jb
push
pop
repz
fisttps
jns
jl
into
repz
dec
adc
pop
cmpsb
ret
adc
add
iret
out
jg
add
aaa
clc
mov
jae
mov
add
rclb
and
mov
sub
push
dec
leave
jbe
xchg
std
insb
lret
xchg
scas
push
mov
jae
pop
xor
jl
lods
inc
ret
sub
mov
std
cmp
jo
cmp
call
fistpll
int
push
testb
cmp
call
cmpsl
jae
and
nop
sub
dec
in
sub
inc
scas
scas
sbbl
ds
adcb
add
jg
cmc
out
int
xor
decl
test
sbb
hlt
add
or
decl
or
adc
fidivs
or
push
and
incl
imul
lret
test
dec
or
test
dec
movsb
incl
adc
cltd
sub
inc
clc
dec
pop
pop
out
aas
or
inc
lret
xor
fcomps
lret
mov
js
call
inc
inc
cli
sub
insl
inc
sub
jae
pop
paddsb
cmpsb
dec
sahf
push
xor
pushl
or
mov
cld
pop
sbb
ret
bound
in
push
pushf
out
dec
icebp
inc
or
jmp
add
cmp
jbe
push
adc
aas
cmp
or
pushl
pop
bound
inc
hlt
cmpb
lcall
pop
scas
lret
rclb
dec
xchg
pop
inc
mov
lcall
push
pop
sbb
add
sarl
add
cmp
lods
mov
insl
xchg
jo
clc
mov
pop
ja
aad
stos
fs
or
and
jecxz
adc
pop
jo
sbb
int3
mov
mov
inc
popa
scas
mov
inc
push
or
test
adc
mov
mov
pop
fildll
push
cmp
loopne
fcos
jmp
ja
dec
xor
sub
out
insl
add
fldt
outsl
clc
mov
es
mov
mov
mov
jmp
leave
out
xchg
fmul
push
fxch
xor
cmp
cwtl
lret
rcll
mov
sub
das
das
lcall
mov
jno
inc
inc
pop
lea
das
repz
fwait
xlat
pop
outsb
das
aam
push
hlt
daa
add
dec
mov
xchg
fwait
push
jmp
cmpsb
mov
call
jno
cmp
lcall
jecxz
imul
sub
sub
fldenv
fcmovbe
aas
frstor
repnz
incl
cmpb
in
movsl
inc
and
loopne
sbb
adc
add
scas
xchg
mov
cmp
adc
mov
push
inc
cmc
call
xor
inc
insb
ss
outsl
push
lahf
sub
cmc
cmpsl
cmpsb
test
leave
orl
int3
sub
outsb
lcall
incl
fisttpl
das
jo
leave
adc
lds
lock
sub
out
add
jns
hlt
mov
dec
lret
mov
inc
ret
jb
pushf
push
mov
mov
xchg
out
push
pushf
dec
dec
pushf
call
pushl
dec
xchg
jle
or
pop
aad
lods
ljmp
push
push
out
or
scas
pop
in
pushf
sub
subb
or
sarl
popa
sub
in
std
push
add
in
loope
pop
dec
jbe
xlat
ja
jne
add
cmc
in
wbinvd
dec
or
sbb
xchg
xchg
out
inc
pop
pop
jg
movsl
rol
sbbl
popa
leave
lock
lock
sbb
idiv
lcall
dec
adc
subl
mov
xchg
lds
dec
cmp
dec
rorb
adc
push
mov
xorb
ds
sbb
call
and
aas
dec
cli
decl
outsl
mov
pop
jnp
dec
testb
test
sub
test
call
bswap
and
push
adc
mov
divl
adc
jmp
ret
or
add
push
adc
in
jg
popa
push
addr16
xchg
jecxz
fstps
cli
sbb
imul
test
xor
xor
rorb
loopne
and
xchg
call
inc
gs
outsb
movsb
mov
cmp
jb
inc
add
mov
and
jle
les
inc
push
fildll
mov
stos
push
out
jmp
sub
sti
and
cwtl
insb
or
mov
push
mov
adc
sahf
popf
xchg
fwait
xor
push
sahf
and
arpl
inc
and
stos
cmp
pop
push
pop
cld
inc
sti
jp
sbb
jp
cmp
push
sbb
jmp
or
pop
sbb
pop
pop
int3
aad
cld
or
pop
mov
sbb
call
repnz
imul
mov
cli
jae
lods
and
xor
cmp
aas
mov
scas
hlt
mov
cmp
mov
test
pusha
lock
mov
hlt
adc
lcall
jl
sbb
and
ss
mov
shll
fwait
add
sbb
xchg
xchg
mov
call
xchg
xchg
mov
mov
pop
mov
incl
popa
loop
sub
mov
in
rolb
incl
mov
add
xchg
pop
sarl
mov
idiv
call
cmpsl
xchg
xor
inc
jns
shrb
jge
stos
mov
jge
das
es
inc
hlt
arpl
cmp
push
je
jnp
ret
push
data16
inc
pop
and
lret
pop
sub
and
rorl
jnp
xchg
lock
imul
sar
cmp
cmc
or
push
dec
lea
cmp
push
jb
cmp
incl
fistpll
mov
cmp
mov
dec
pop
mov
mov
stc
int3
mov
sub
dec
inc
scas
shlb
or
mov
push
xor
cli
or
xchg
push
pusha
push
pop
dec
add
push
sub
jo
incl
mov
sarb
insl
sub
je
push
cmp
jle
scas
pop
sar
addl
ret
mov
ficompl
js
sbb
out
sub
push
push
jb
pop
mov
test
jp
incl
push
and
mov
fmuls
out
cltd
lret
or
lcall
jb
mov
or
js
pop
xchg
out
push
not
fisttpl
out
ja
inc
push
lcall
and
xchg
arpl
cmp
jbe
and
clc
pushl
ret
sbb
and
pop
cli
fstpt
aaa
iret
dec
jmp
mov
and
sub
pop
push
jnp
push
xchg
lcall
mov
outsb
sub
xchg
push
imul
mov
enter
cmovo
decl
xor
into
fsts
push
cltd
xor
jmp
cmp
sub
cmp
cmp
lcall
incl
mov
shrb
sub
lahf
mov
bnd
cld
decl
in
repz
cli
rclb
dec
mov
pop
pop
test
xor
jge
repz
loopne
pusha
push
lcall
lcall
imul
xor
orl
aam
sbb
std
mov
adcb
lcall
sbb
dec
test
sbb
xchg
inc
test
xlat
mov
mov
push
int
clc
jmp
fcomip
lds
jbe
insl
and
push
pop
and
je
aas
iret
pop
cld
decl
xchg
shr
adc
mov
pop
das
lcall
rcl
adc
jno
mov
xchg
add
mov
aad
pop
aam
nop
cmp
decl
jo
jnp
rcrl
adcl
push
jp
lret
xchg
shrl
mov
clc
movsb
sub
adc
xchg
rclb
or
cld
dec
push
pop
inc
bound
jmp
scas
sub
mov
stos
pop
lret
mov
mov
movsl
or
call
cmp
adc
add
mov
push
or
mov
fldt
arpl
cltd
mov
dec
decl
or
push
in
jbe
fists
pop
int3
xor
adc
scas
incl
or
add
mov
test
jno
sub
cwtl
pop
ljmp
and
sbb
push
mov
mov
rolb
xor
push
xchg
addr16
stos
ret
int3
xor
jns
jbe
inc
pushl
not
push
jge
inc
scas
adc
popa
mov
loope
xor
add
stos
adc
sub
jp
js
and
xor
incl
shll
aam
jne
andb
aas
call
mov
gs
movsl
push
add
jae
inc
and
and
mov
sbb
jbe
jl
aas
add
ret
fstps
xchg
push
or
lahf
incl
jnp
fmulp
leave
popa
pop
imul
jne
xchg
aas
or
mov
ror
xchg
hlt
sbb
cli
and
ja
sbb
xchg
jmp
das
and
popf
arpl
adc
lahf
mov
jo
inc
shlb
inc
sbb
cwtl
jp
std
lods
mov
push
push
rclb
mov
sbb
das
loop
inc
das
jmp
xchg
js
in
lock
pop
sahf
jno
out
test
cli
insb
cmp
lahf
scas
sbb
cmp
out
rclb
rolb
call
pop
outsb
cmp
je
or
push
daa
sahf
aaa
xor
mov
dec
ljmp
and
cli
cmp
jp
inc
inc
push
jae
cmp
dec
jg
test
mov
mov
jmp
cltd
hlt
nop
push
rcrl
fnsave
aas
aad
out
mov
push
mov
add
push
xchg
dec
sub
push
hlt
pop
cmc
movsb
sub
scas
decl
mov
sub
fstpt
scas
arpl
adc
cmp
adc
rorl
add
xchg
sub
out
adc
aam
pop
dec
mov
popa
lahf
lahf
dec
sti
lds
adc
lahf
js
into
jle
pusha
fs
jmp
and
mov
aam
xlat
xchg
jne
cld
or
aas
iret
fwait
jmpw
incl
hlt
out
mov
test
repnz
hlt
push
ja
xchg
stc
add
and
decl
lea
out
bound
imul
sti
adc
sbb
xchg
dec
repnz
jmp
sbb
in
mov
lods
mov
sub
sub
je
ljmp
add
add
jo
aaa
dec
test
add
std
xlat
and
lcall
sar
es
lahf
jg
push
pushf
pop
mov
es
in
lret
and
jmp
cmp
sub
fsubl
movq
sub
in
test
mov
cmp
inc
pop
mov
loope
mov
pop
xchg
shr
cmpsb
add
idivl
lcall
sub
pop
in
outsl
sbb
jo
ljmp
js
subb
xor
popf
xor
dec
imul
cmp
fwait
jb,pt
add
in
dec
and
pop
xchg
cwtl
pop
dec
sbb
loopne
jecxz
inc
test
sub
lcall
adc
jbe
pop
addr16
mov
xchg
adc
outsl
into
mov
add
lcall
or
xor
je
stc
xlat
mov
xor
or
dec
nop
cmpsl
jnp
mov
jbe
clc
cmc
lcall
lcall
adc
cmpsb
fcoml
adc
ds
bound
std
mov
mov
aaa
jbe
mov
jbe
les
jecxz
lock
test
xchg
xchg
incl
cld
dec
push
add
xchg
sub
xchg
xor
in
dec
call
in
shr
je
icebp
subb
aas
mov
ljmp
or
call
mov
hlt
lea
call
or
push
xor
out
decl
jmp
pusha
mov
adcl
pop
shrl
xor
mov
mov
incl
push
xchg
push
xor
rcrl
stos
or
push
jb
cwtl
aaa
je
mov
aas
and
cld
dec
adc
mov
xchg
incl
xor
out
cs
xchg
cmp
cmpsl
lret
inc
mov
rol
push
push
push
add
repz
incl
mov
out
lahf
clc
insb
out
lock
push
aas
add
cwtl
dec
push
pop
sub
ljmp
test
mov
xor
dec
push
sbbl
and
push
mov
sbb
jmp
int3
xor
lds
mov
mov
sub
jl
leave
mov
movsb
and
jl
sbb
in
fucomp
inc
ret
jnp
mov
int
aaa
adc
pushl
out
xchg
jle
inc
les
orl
jae
iret
mov
loop
incl
mull
loop
push
mov
movb
arpl
in
daa
adc
fwait
pop
push
ret
pop
add
ficompl
shll
lods
loopne
dec
sbb
jg
stc
out
push
push
push
xchg
cmp
scas
lcall
inc
dec
xor
cmp
dec
movsl
dec
mov
push
es
mov
ss
call
dec
pop
loopne
fiadds
lcall
adc
cmc
loop
lds
jno
sbb
clc
pushl
insb
push
cmpb
xor
pop
sub
out
xchg
decl
adc
push
addb
fwait
mov
mov
fmuls
addl
dec
test
lods
sub
cs
fistl
stos
cmp
cmp
call
mov
mov
aad
mov
push
in
xor
mov
xor
pop
mov
scas
xchg
lock
add
and
orl
cld
pushl
jb
mov
sbb
mov
aam
dec
imull
mov
lock
xor
hlt
or
pop
ja
in
mov
sbb
lcall
xchg
sbb
adc
sub
sti
pushl
les
je
pop
loope
adc
add
push
jbe
inc
adc
and
pop
push
inc
adc
out
sub
pop
out
call
adc
mov
mov
stos
inc
cli
jb
push
imul
xor
dec
jmp
cli
jmp
lock
stos
dec
pop
test
movsb
aaa
mov
or
ret
cld
test
mov
fcomps
fbld
int3
xor
jmp
cmpsl
insl
dec
fwait
pushf
sbb
lcall
mov
mov
stos
jge
lret
cmp
push
pop
sub
or
imul
mov
repz
outsb
inc
lcall
or
inc
pushf
cmp
test
gs
sbb
call
std
sti
in
aas
ret
or
add
pop
bswap
clc
decl
roll
popa
jbe
push
outsl
xor
push
jbe
jb
aas
pop
dec
sbb
jg
icebp
fsubr
test
mov
lock
xchg
adc
jbe
out
xchg
leave
or
inc
in
sub
mov
mov
lods
dec
xchg
icebp
decl
mov
int3
call
pop
pop
roll
jge
push
xchg
aas
incl
fimuls
sub
push
add
addr16
movsl
addr16
cs
test
xchg
je,pt
inc
ret
test
push
repz
push
sub
addr16
cmp
inc
lcall
and
jbe
xlat
or
dec
lahf
cmpsb
pop
mov
cmp
loope
adc
movaps
pop
jmp
pop
loope
add
add
inc
and
leave
mov
rcll
or
out
out
pop
push
fadd
push
adc
push
dec
addb
cmp
mov
or
outsl
ljmp
cs
xchg
xor
mov
decl
stos
jge
dec
gs
dec
fcmovnbe
jns
test
fidivrl
pop
lcall
call
adc
arpl
mov
xor
adc
inc
mov
cmc
loopne
mov
adc
movl
lds
incl
fcmovu
movsb
mov
jb
push
dec
xchg
scas
movsb
imull
test
nop
xor
jmp
mov
ret
lret
lods
incl
mov
and
sub
sbb
decl
ret
mov
fwait
and
sub
addr16
nop
mov
or
mov
out
aas
es
lods
xor
inc
and
cmpsl
cmpsb
outsl
fidivrl
pop
xor
or
out
loopw
xchg
mov
arpl
jge
daa
push
push
test
int
data16
add
push
shrb
jmp
imul
leave
in
mov
mov
jg
ja
jbe
cmp
cmpsb
call
js
cmp
xchg
insl
ud0
ljmp
mov
icebp
sbb
ret
cli
add
sbb
das
add
sub
ljmp
cmp
subl
inc
test
or
int3
xor
sti
adc
shr
cmp
lcall
adc
mov
pop
pop
dec
js
and
leave
cwtl
or
andl
mov
and
inc
stc
shlb
dec
and
add
mov
sbb
daa
pop
adc
inc
in
or
jecxz
lcall
jno
cli
aas
inc
inc
in
cltd
push
pop
push
mov
or
push
pop
push
mov
inc
push
lret
mul
adc
incl
cli
icebp
push
jae
dec
out
out
jo
repz
cltd
clc
daa
push
adc
cs
in
cmp
jae
add
dec
adc
mov
inc
sub
das
lcall
test
dec
lahf
mov
push
cltd
mov
nop
decl
mov
inc
mov
xor
mov
ja
mov
hlt
decb
jnp
out
test
sub
imul
dec
inc
sbb
pop
lcall
dec
lcall
inc
aas
popa
pushf
fnstsw
int
mov
jge
and
mov
sub
jecxz
xor
inc
outsl
sub
incl
mov
mov
cmp
mov
inc
mov
xchg
les
dec
and
ret
pop
ret
add
dec
imul
pop
or
add
decl
cmp
and
clc
js
jno
sub
xorl
push
std
aas
inc
out
out
shrl
imul
and
mov
pop
mov
mov
test
fbstp
imul
jge
sbbl
jmp
sbb
jecxz
mov
repnz
arpl
fists
push
mov
call
ds
sahf
dec
mov
push
sbb
sub
fs
cmpsb
xorl
in
out
negb
in
sub
call
push
enter
jne
lods
int3
shl
outsl
fsubl
das
fcom
les
ret
andl
push
ss
mov
test
jbe
sqrtps
lahf
mov
sbb
fimuls
mov
mov
mov
movsb
mov
test
sarl
adc
out
lret
push
das
add
lcall
pop
sbb
sbb
dec
add
fldlg2
cmp
incl
out
adc
dec
mov
dec
pop
aam
pop
flds
or
jne
adc
test
nop
mov
decl
scas
add
push
xchg
je
add
sub
sbb
pop
or
addl
add
push
mov
push
insl
mov
aad
jmp
cld
xor
push
outsl
mov
jg
dec
xor
pop
into
fimuls
iret
inc
pop
iret
and
lods
sahf
jmp
or
jp
xchg
jl
movsl
ret
push
hlt
stos
sub
icebp
sahf
cs
xchg
gs
pop
xchg
mov
dec
mov
test
jne
dec
or
test
mov
dec
mov
xlat
pop
in
repz
jle
pop
inc
decl
pop
repnz
and
idivb
mov
mov
mov
in
cmp
mov
jecxz
cmp
test
and
pop
adc
xchg
rclb
or
fcomip
jno
call
fwait
mov
sbb
aas
mov
jg
cli
cmp
lea
data16
xor
lahf
cmp
lcall
xor
jns
int3
clc
push
repz
loopne
push
xor
icebp
jmp
pslld
fsubs
push
lock
or
les
mov
jmp
es
inc
cmpsl
add
sub
dec
mov
lahf
sbb
fnstsw
lcall
aas
in
out
mov
push
dec
adc
xor
test
push
inc
push
incl
push
ja
inc
clc
daa
insb
in
jle
mov
incl
das
mov
pop
pop
sub
sub
das
lret
add
or
and
pop
fistpl
cs
sub
incl
pop
sbb
jp
pushf
sub
jle
add
push
pusha
outsb
cmpsl
mov
imul
cmp
arpl
cmp
mov
cmc
sub
pop
sahf
cmp
mov
mov
mov
icebp
and
call
add
sub
xor
sub
or
aas
sub
mov
xor
decl
push
outsb
pop
inc
sbb
dec
insl
cmp
arpl
jecxz
cmp
icebp
cwtl
add
ljmp
je
adc
in
int3
push
fistpl
cmpsb
ret
mov
cmp
sub
sbb
and
stc
inc
dec
jmp
arpl
into
insb
pop
add
jge
mov
fs
outsb
data16
or
sar
inc
xchg
mov
faddl
pop
dec
mov
les
test
mov
or
out
into
cmp
push
mov
outsl
jp
xchg
popa
mov
mov
mov
fnsave
or
push
cmp
incl
jmp
jne
cmp
inc
cmp
rcl
sub
into
push
jmp
push
cltd
mov
and
fcmove
iret
ds
outsl
sbb
add
push
ret
cmc
pop
push
inc
test
lea
cmp
inc
fldenv
ss
lods
push
call
js
test
adc
repz
pushf
push
loope
aad
xchg
lcall
cmp
or
push
jns
cmpsl
pushf
xor
dec
xchg
mov
imul
gs
or
decl
es
xor
cmp
or
out
jge
xchg
push
jbe
loop
xchg
jecxz
ds
add
pushl
inc
adc
inc
test
jno
inc
mov
sub
jge
add
xchg
ret
ljmp
bound
adc
mov
jne
dec
data16
popf
mov
les
int
inc
inc
incl
inc
sbb
or
mov
das
push
push
push
mov
pushl
adc
xor
push
leave
jbe
jp
xor
jp
xchg
les
imul
negl
incl
je
hlt
imul
leave
mov
xor
ljmp
stos
xor
pushf
cltd
lcall
mov
adc
fstp
arpl
adc
testl
outsb
xchg
rcl
stos
jle
mov
sti
xchg
cmp
push
adc
xor
pop
mov
or
push
mov
insl
mov
testb
mov
pop
fsub
addr16
data16
and
pushl
in
int3
cmc
and
pop
or
stc
ficoms
pop
sbb
jbe
mov
dec
ljmp
shl
fiaddl
fs
push
mov
sbb
add
and
mov
fs
cmp
xor
fldenv
stos
mov
or
leave
bound
cmp
mov
cmpsb
mov
xchg
and
icebp
dec
or
lods
push
sub
jo
jmp
out
sti
xor
sub
mov
sub
arpl
ss
mov
cltd
pop
lcall
xchg
lock
mov
cltd
jne
aad
test
ljmp
mov
mov
cmpb
test
inc
insb
pop
or
adc
nop
sub
mov
inc
call
jmp
dec
or
adc
aas
out
call
jae
pop
dec
loopne
pushf
fldl
mov
push
fwait
pminsw
in
dec
cmp
stc
ljmp
push
in
js
mov
jno
add
js
repnz
loopne
sbb
in
nop
push
mov
push
addr16
decl
fwait
mov
out
js
insl
scas
jo
fldl2t
mov
lret
mov
jne
clc
jmp
aam
xor
pop
xor
add
jmp
mov
mov
sarb
out
scas
lds
sbb
mull
lret
mov
mov
fabs
xchg
dec
fildl
pop
sbb
push
dec
dec
push
sub
pop
aas
mov
andl
jp
pop
xchg
cmp
inc
aaa
cld
divb
gs
in
jne
rclb
dec
arpl
mov
jmp
or
dec
xor
mov
add
push
aaa
movl
test
sub
lcall
fldenv
pop
mov
std
jge
in
bnd
sub
jmp
mov
adc
lock
out
cmp
pushl
add
in
xchg
dec
adc
dec
sbb
out
dec
in
stos
dec
dec
mov
into
add
lcall
jbe
mov
outsb
or
andl
loop
dec
push
jbe
lcall
push
sbb
push
shrd
ret
xor
lds
and
inc
sbbb
ljmp
sar
ljmp
cwtl
xchg
or
push
popa
mov
cmc
jbe
fcomps
mov
scas
fdivp
mov
xor
inc
jg
mov
call
das
jae
or
fnsave
mov
or
xor
xchg
lahf
push
dec
js
in
lahf
fiaddl
jmp
cld
xorb
xchg
mov
dec
push
fcoml
add
mov
ret
mov
ljmp
in
mov
pop
mov
out
sbb
jo
cmpsl
xchg
mov
fdivrp
dec
jp
push
mov
sub
mov
adc
xchg
insb
or
das
inc
mov
sbb
gs
jge
push
push
insl
push
add
lods
lret
inc
pop
lods
inc
fsubrp
lret
scas
jg
xor
sub
fildll
xchg
in
call
std
sti
lods
pop
xchg
push
ror
mov
mov
icebp
test
pushf
xchg
jmp
rcll
ret
sti
xchg
inc
inc
decl
cmc
mov
sub
add
cmp
decl
push
pop
sub
gs
std
lret
mov
clc
cmc
mov
xor
aas
fstpt
inc
push
cld
incl
xlat
shl
dec
sub
dec
lahf
pushf
xlat
call
incl
sbb
jbe
push
mov
repnz
jmp
test
jne
inc
lods
test
mov
and
inc
adc
lods
push
ficoms
nop
mov
call
cmp
pop
pop
mov
and
sbb
jne
sub
lret
out
pop
jmp
leave
mov
mov
or
das
jb
dec
mov
cltd
xchg
iret
les
out
fdivr
pushl
cmp
xchg
push
enter
xor
ljmp
popa
jl
xchg
js
adc
jmp
xchg
lahf
fdivrp
mov
xor
and
ret
adc
test
decl
push
push
adc
rcrb
mov
xchg
and
sub
mov
jns
out
xchg
inc
fistpll
scas
sahf
jg
cld
incl
movsb
jmp
cli
or
jne
mov
wbinvd
adc
cmp
insl
add
ljmp
mov
sbb
inc
or
jb
lods
sbbb
in
testl
xor
xchg
lcall
xlat
lods
dec
fcompl
aaa
lock
xlat
ds
sbb
or
sub
sub
jne
add
adc
push
enter
cmpsb
xchg
jo
movsb
scas
pop
adc
or
movsb
lcall
mov
and
xor
inc
in
dec
mov
or
dec
aam
cmp
test
das
push
rclb
xor
lahf
and
mov
mov
dec
add
mov
cmpl
push
sti
add
sbb
sub
inc
enter
jg
call
mov
xorb
mov
jmp
sti
sbb
mov
lea
decl
dec
dec
xchg
adc
jmp
cmp
insl
rcll
mov
out
or
icebp
adcl
cmp
adc
int3
out
int3
dec
lods
int3
stc
adc
lcall
outsb
out
in
dec
xor
cmp
int
mov
adc
sti
mov
cmp
mov
inc
inc
xchg
in
jmp
sub
decl
test
sub
roll
sub
loope
pop
out
inc
call
adc
pop
popa
stos
test
push
in
xchg
mov
mov
mov
xor
lret
pop
push
adc
aas
inc
test
add
aas
adc
scas
clc
loope
dec
jecxz
jp
rcl
xchg
aas
adc
test
movl
fs
ror
bnd
mov
adc
mov
leave
rorb
in
ficoml
xchg
xchg
lret
data16
and
xchg
jmp
incl
es
lods
lock
pop
int3
loop
cmpsl
sub
popa
je
jmp
ss
decl
mov
xchg
sbb
mov
and
std
incl
sub
mov
fbstp
cld
mov
push
repnz
sbb
fs
jb
push
xor
mov
das
xchg
int3
sbb
xor
lock
repnz
popa
fstps
cwtl
cmp
adc
jmp
sbb
aam
in
cwtl
hlt
mov
cmpl
loope
adc
jmp
ljmp
cmpl
stos
sub
sbb
cli
inc
or
mull
push
inc
mov
mov
loop
and
mov
jmp
sbb
mul
std
cwtl
mov
cli
dec
lock
push
jge
outsl
dec
fstpl
iret
decl
popa
ret
pop
push
xchg
cld
jmp
push
and
ss
mov
and
xor
lcall
or
roll
ret
xor
and
into
mov
decl
dec
repz
outsl
int
or
cmp
dec
sbb
sub
decl
inc
mov
dec
mov
pop
sub
leave
sbb
or
arpl
cmp
jle
call
insl
mov
dec
cli
cmp
mov
mov
out
addl
icebp
shrl
frstor
incl
paddsw
daa
mov
in
add
and
dec
cs
lea
xchg
movsl
adc
ds
xor
insb
adc
push
adc
leave
jp
dec
adc
or
inc
out
cld
insb
inc
sbb
xor
repnz
jmp
sbb
lahf
jae
lods
aad
sbb
pop
inc
test
adc
repnz
mov
xchg
les
cld
call
xchg
inc
lahf
mov
xor
int3
imul
popf
scas
incl
cmpsl
mov
pop
lret
mov
test
sub
cmpsl
jg
pusha
push
dec
push
mov
ljmp
xchg
std
pop
jnp
or
sarb
dec
cmpsl
cmp
test
repnz
jnp
je
mov
inc
and
fldcw
pop
test
push
incl
ret
call
jg
or
add
outsl
mov
push
mov
decl
sbb
aaa
ds
scas
int
adc
sti
cwtl
push
inc
cmp
pusha
stos
inc
mov
pop
mov
lret
insb
gs
call
lret
gs
pop
mov
repz
test
and
aaa
push
hlt
aam
jo
pop
inc
call
sti
popf
add
xchg
repnz
ret
push
or
ljmp
push
mov
leave
dec
and
mov
jb
pop
mov
or
sbb
dec
dec
sarb
pushl
je
nop
adc
in
sbb
dec
adc
aaa
add
aad
ljmp
pop
cli
das
push
addr16
xchg
js
jbe
andb
jo
test
lcall
and
cli
jns
outsb
sub
lahf
jg
dec
add
popa
xchg
xchg
fdivrl
cmc
rclb
jecxz
aad
jmp
cmp
addl
adc
adc
adc
aas
stos
idivb
in
test
mov
and
add
jmp
test
sbb
jae
mov
addl
xlat
icebp
outsl
add
leave
gs
cmp
mov
popf
push
cmp
adc
lcall
decb
mov
push
push
loope
dec
push
adc
jg
shlb
inc
out
cmp
pop
xchg
test
out
and
xchg
pusha
dec
pop
in
pushl
cmp
inc
mov
js
cmp
mov
in
mov
jmp
call
popf
jns
pop
insb
sbb
inc
aaa
xchg
pop
repnz
push
cmp
mov
cmp
decl
loope
out
adc
les
add
jmp
dec
fldl2t
sbb
adc
push
push
test
incl
xor
stc
push
jecxz
addr16
nop
lcall
movsl
pop
aad
sbb
mov
mov
lret
mov
call
push
fstl
arpl
lods
cmp
shl
mov
sub
jp
fsubr
lahf
push
push
cmp
push
mov
mov
into
ss
sarl
call
dec
dec
es
sbb
adc
fcompl
incl
lods
sbb
incb
jbe,pn
jae
sbb
adc
and
xor
push
adc
mov
sti
dec
sbb
jle
push
scas
imul
xchg
jo
sbb
add
jmp
push
and
out
mov
xchg
adc
lods
aas
xchg
fistpll
daa
push
sbb
add
inc
ljmp
mov
mov
pop
dec
dec
sub
jmp
xor
and
xor
cmp
loopne
dec
xor
pusha
shll
jnp
and
in
ds
fidivl
decl
ret
sub
jno
das
sbb
sub
jmp
dec
mov
fsub
shll
arpl
popa
ljmp
jecxz
xor
push
mov
testl
ljmp
shll
lods
data16
xchg
mov
dec
jbe
inc
xor
mov
mov
mov
xchg
int
outsl
or
pop
cltd
ja
and
xchg
insl
out
sub
jns
or
sub
mov
mov
mov
inc
xchg
lret
loop
adcl
jg
ficomps
fcmovbe
test
clc
sbb
and
scas
cmp
sbb
pop
mov
xor
mov
or
dec
xchg
call
stos
dec
test
arpl
nop
daa
lock
xor
jno
xlat
cmp
and
aaa
insb
bswap
mov
inc
sbb
mov
dec
sahf
negb
fs
pop
jbe
call
scas
xchg
fiaddl
mov
xchg
lret
lahf
pop
ret
fs
lcall
cmpb
mov
or
and
and
imul
stos
inc
fistl
mov
aas
sub
enter
pop
cld
mov
jl
test
mov
pop
mov
jle
imul
jl
mov
push
or
push
xor
ret
int
push
pushf
adc
xor
dec
or
fbld
loop
add
inc
jnp
cli
ds
stos
xor
jmp
pop
cmpxchg
push
popl
rcll
xchg
cmp
vunpckhps
adc
jg
pop
jg
rorb
aam
ja
pop
mov
sbb
xchg
in
aas
incl
mov
add
pop
clc
jecxz
push
jnp
jmp
icebp
and
sti
jl
inc
incl
pop
adc
orl
sub
push
aam
xchg
nopl
movsl
orl
add
mov
pop
pop
xorb
jb
fimuls
movb
mov
push
es
jge
xorl
jle
inc
shr
jg
mov
push
sbb
jecxz
or
push
or
mov
push
scas
in
jle
lahf
enter
inc
xchg
jecxz
ljmp
inc
and
dec
addr16
cmpsb
xor
xlat
sarl
push
add
cmp
push
fmulp
adc
xor
mov
pushl
dec
insl
adc
inc
xchg
jno
sbb
cmp
stc
pushf
neg
lea
push
pop
int
aas
lea
jle
xchg
cmpsl
cmc
and
push
cmpsl
arpl
mov
cmp
dec
sub
push
in
fwait
pushf
fcompl
add
sti
xor
xor
movsb
or
call
stos
dec
fldenv
mov
cmp
xlat
fdivs
push
dec
pop
push
scas
fs
icebp
and
jmp
xchg
repnz
jmp
imulb
sbb
loopne
add
and
fisubrs
mov
cmp
jmp
call
mov
dec
push
adc
test
jle
call
lods
leave
cmc
addr16
das
mov
mov
ja
sbb
repnz
mov
std
pop
add
sarl
xchg
or
push
loop
jne
sub
sub
aaa
out
and
dec
pop
in
xor
mov
mov
lods
jmp
xor
dec
les
inc
in
test
repnz
pop
cmp
mov
scas
sub
fadd
push
inc
add
cmpxchg
lea
lock
adcl
ret
incl
pop
fdivrl
sbbb
rcrl
fsubrp
xchg
push
mov
inc
fwait
mov
inc
sbb
and
or
scas
sub
je
mov
dec
ret
decl
adc
out
sti
mov
mov
jne
aas
decl
leave
add
mov
out
mov
ret
cmovns
shrb
out
lahf
lcall
decl
mov
lods
fsubrl
inc
test
pop
sub
bound
and
iret
outsl
jg
mov
adc
test
shlb
cmp
sbb
stc
out
sti
hlt
jae
dec
pop
xchg
int3
punpckhdq
fnstenv
sub
mov
jmp
xor
decl
outsl
mov
aad
cmp
jne
inc
add
stos
in
dec
leave
mov
inc
ret
out
incl
fwait
push
insb
dec
icebp
jge
sub
cli
sarb
xor
test
imul
ljmp
rorb
push
jmp
adc
push
call
repnz
movsb
inc
movsb
repz
cwtl
nop
cmp
stc
mov
scas
mov
cwtl
imul
std
inc
pop
call
add
loopne
ds
lods
mov
push
push
dec
incl
xchg
xor
fs
call
xor
imul
push
push
jae
lds
ljmp
mov
out
cli
pop
movsl
cwtl
fistpl
add
push
hlt
sbb
decl
leave
inc
in
lahf
rorl
mov
js
dec
lcall
sbbl
inc
inc
cld
decl
inc
jns
lods
repnz
mov
scas
sbb
mov
in
movsl
sbb
push
adc
ret
xchg
xor
jo
call
loopne
mov
ret
clc
dec
rclb
iret
dec
test
ljmp
repnz
dec
call
lcall
mov
fwait
xchg
mov
push
loop
mov
sub
jge
lods
andl
cmc
outsb
lret
mov
fcoml
cmp
dec
movsb
ficoms
int
fcomps
mov
mov
jmp
mov
mov
add
lcall
scas
stos
dec
call
mov
sbb
mov
fldt
inc
enter
popl
mov
add
mov
leave
inc
loop
addr16
lcall
xlat
cmc
cmp
jp
add
lock
mov
aaa
in
jg
jg
fisttpl
lock
jns
mov
xchg
std
jg
push
js
insl
daa
es
and
repz
adc
or
insb
in
mov
and
movsl
mov
add
imul
daa
mov
enter
shll
out
mov
xchg
fucomi
mov
mov
sbb
ljmp
add
call
fadds
adc
leave
dec
outsl
xchg
scas
fldl2t
cmpsb
std
add
cwtl
repnz
mov
dec
decl
mov
push
inc
adc
lcall
shll
insb
mov
pusha
notb
jecxz
in
and
movsb
in
pop
xchg
mov
sub
lret
jmp
sub
inc
mov
push
mov
loop
lret
add
inc
xchg
jle
jmp
push
inc
push
std
out
sahf
cmpsl
sub
sub
in
movsl
loope
mov
daa
shlb
cmp
cmc
popf
push
incl
cld
test
jb
ret
invd
add
test
inc
mov
cmpsl
call
cmpw
push
cmp
sahf
or
arpl
out
mov
test
pop
xchg
xchg
dec
rcrb
addr16
incl
push
sub
dec
jge
adc
addl
pop
adc
sarb
aas
dec
test
scas
xor
imul
adc
inc
or
push
icebp
push
inc
xchg
popa
lock
aas
fistl
mov
mov
ljmp
xchg
test
mov
jmp
jns
repz
arpl
aam
jge
fiadds
push
loop
call
and
out
add
jg
imul
jg
js
out
call
ret
aas
xchg
xchg
xchg
cld
daa
ret
lock
nop
mov
push
imul
cmp
xor
std
xchg
in
mov
xchg
stos
leave
adc
xchg
xor
inc
mov
xchg
mov
lds
fadd
ret
in
mov
ret
pop
lds
mov
js
sbb
imul
sub
roll
mov
out
inc
loop
lahf
and
aas
mov
shll
add
sbbl
test
pusha
mov
or
ud0
jmp
jle
out
roll
xchg
push
push
nop
cmc
inc
add
out
mov
cli
adc
push
in
movsl
aas
and
fistps
and
cmp
inc
imul
dec
jg
jne
lea
jno
fistpl
dec
popa
jle
pusha
out
insl
lahf
push
push
adc
push
sbb
stc
lahf
aam
clflush
mov
ret
jae
cld
sbb
xchg
and
and
mov
pop
or
lods
scas
incl
incl
or
lods
shrb
in
cmpl
jmp
adc
enter
mov
ficomps
push
or
imul
pushl
gs
repnz
inc
fwait
push
lcall
je
popf
add
mov
popf
mov
leave
push
xchg
incl
or
mov
mov
repz
jl
mov
xor
fs
pop
and
mov
inc
inc
or
aas
repz
push
sar
sti
sbb
mov
dec
insl
in
aaa
cmp
dec
cli
lcall
cmp
in
xchg
ret
xor
mov
cmp
aam
jg
add
adc
pop
mov
xchg
pop
xchg
dec
iret
push
mov
daa
sub
or
dec
xorb
adc
mov
in
dec
nop
in
sub
cmp
outsb
push
xchg
lret
pop
adc
xchg
pop
cmpsl
sbb
jp
out
shlb
ljmp
mov
nop
out
jnp
pop
sub
xchg
mov
jmp
cli
roll
enter
das
loope
push
or
aam
in
inc
mov
cli
stos
popf
popa
movsb
mov
ljmp
mov
xchg
jno
sbb
adc
loop
insl
cwtl
divb
mov
jg
push
jg
sahf
add
repnz
decl
xlat
xor
decl
sar
and
push
pushf
push
in
or
lcall
jl
stos
orb
adc
jg
cmpsb
loop
enter
mov
pop
adc
push
push
hlt
mov
or
and
enter
sub
jb
shl
jb
subb
jg
adc
stos
push
add
insb
sti
mov
popa
iret
fsubs
aas
and
inc
inc
mov
pop
and
adc
add
popl
push
or
inc
inc
and
mov
incl
incb
int
test
lret
xor
sar
add
std
incl
repnz
insb
shlw
in
insb
dec
in
rolb
icebp
mov
clc
stos
dec
mov
push
push
fbld
enter
push
dec
adcb
inc
popa
push
pop
xabort
lock
jmp
push
pop
cmp
jp
in
int
mov
dec
xchg
mov
push
or
lret
jae
out
js
cmp
pop
int3
mov
jmp
mov
lods
or
div
js
ss
push
incb
xchg
outsl
add
inc
pushl
xchg
mov
cmp
aad
stc
ss
inc
gs
lahf
incl
push
sbb
stc
mov
mov
and
xchg
mov
mov
incl
mov
jne
cmpsl
es
mov
out
aad
xchg
rcr
shl
fisttps
push
cld
pushl
push
daa
cmp
mov
int
dec
xchg
pop
lock
adc
adc
adc
xor
mov
or
es
cmp
cmpb
fstpl
sbb
sbb
sub
aas
dec
sbb
mov
int
xchg
mov
mov
ja
jg
xor
cli
jmp
gs
adc
cmp
lods
in
mov
adc
xchg
fwait
cwtl
or
jmp
push
jp
dec
sub
mov
push
mov
scas
incl
mov
dec
fisubs
test
lcall
push
gs
inc
pop
out
out
orl
incl
pop
sahf
fists
cmp
fnstsw
mov
leave
aas
aam
pop
aam
jns
push
mov
inc
mov
pop
and
inc
adc
push
or
add
enter
in
xchg
leave
rolb
xlat
add
pop
adc
xchg
add
scas
incl
aas
adc
xchg
mov
in
xchg
add
xlat
js
imul
mov
icebp
or
in
jns
decl
inc
cmpsb
and
pop
xor
cmpsb
sub
js
sbb
sub
push
fisttpll
pop
xorl
mov
lcall
or
jno
in
pop
dec
and
shrb
sub
mov
and
sbb
cmp
out
xor
jns
xchg
push
in
add
lods
subb
decl
jb
push
aas
loopne
cmpsl
scas
lods
fistps
xchg
aas
push
inc
std
test
je
popa
pushl
mov
xchg
fwait
lock
sbb
loope
shlb
mov
mov
das
pop
call
test
out
or
xchg
insl
xchg
divb
dec
das
inc
test
mov
push
aas
and
outsl
adc
fdiv
test
add
incl
shrb
inc
das
insl
mov
test
jae
mov
xchg
out
push
mov
or
aad
incl
call
push
adc
jle
push
sbb
sbb
pop
inc
push
sti
mov
sbb
popa
mov
inc
int3
xchg
jnp
inc
sub
mov
jno
inc
xor
ss
enter
ljmp
test
enter
push
sbb
out
or
xor
sbb
ret
pop
mov
repnz
test
sub
iret
xchg
call
repnz
fdivs
dec
inc
xchg
ja
jb
add
aas
dec
mov
adc
std
in
aas
or
push
push
mov
adc
dec
sub
inc
push
lock
aad
outsl
jmp
scas
mov
sbb
lret
lret
mov
adc
rcrl
cmp
dec
jp
sub
jno
xor
cmc
push
fsubl
cld
ljmp
ret
push
movl
es
pop
dec
mov
dec
jmp
test
mov
cmc
mov
sbb
xchg
rcrb
jg
aas
or
test
xchg
inc
sub
and
cmc
hlt
mov
adc
xlat
add
lock
pop
rolb
inc
push
or
and
jmp
jle
ret
mov
add
outsl
jg
aas
xor
pop
mov
jb
xor
ds
enter
inc
int3
sub
adc
outsl
scas
call
pop
fdivl
xlat
mov
xor
insl
push
sub
sahf
lcall
adc
cmp
lahf
push
lret
in
shlb
cmp
push
and
jp
call
and
mov
call
jns
cltd
shrl
fs
xchg
lcall
jg
or
lcall
ret
loope
int
sbb
js
cmp
add
incl
test
jl
cmc
or
xchg
and
cmovns
jp
dec
pop
stos
jmp
ljmp
mov
cli
push
popa
outsb
inc
inc
mov
out
loope
shrl
ja
clc
clc
mov
call
cmc
cld
movsb
mov
xorl
sub
adc
lret
mov
imul
insl
adc
xlat
add
dec
in
fs
mov
int
xchg
aad
push
addr16
adc
decl
ds
stos
mov
push
xor
jb
icebp
lock
cmp
add
std
add
and
ljmp
cmp
mov
std
cmp
aad
rcrb
fimuls
rorl
jns
ljmp
push
popf
outsb
jbe
xchg
stos
mov
inc
mov
mov
cmpsl
cmpsl
lods
repnz
cmp
sub
sbb
inc
jae
das
jns
loopne
shr
int3
sub
rcr
rcl
or
mov
jl
subb
mov
mov
pop
fisubrl
mov
lahf
xor
es
mov
jmp
dec
pop
aad
inc
and
adc
fnstenv
int3
push
movsl
xor
jp
mov
sbb
sahf
cli
outsl
mov
mov
sub
aaa
pop
xchg
cmp
fs
xor
daa
fbld
test
mov
sbb
loope
nop
icebp
aaa
adc
imul
cmp
ljmp
adc
ds
jle
cld
jo
mov
sarl
sarl
mov
idiv
dec
mov
mov
mov
sub
mov
int3
inc
add
dec
ljmp
sbb
leave
cmc
clc
ljmp
jno
and
test
or
cmpb
pop
pop
ja
jmp
in
ret
or
pop
repnz
sbb
les
pop
jno
pop
test
lahf
ja
adc
sub
stos
arpl
cmp
jo
mov
sub
pushf
jne
xchg
enter
push
and
pop
fnstsw
lods
lea
jmp
mov
cmpsb
in
push
xor
cmp
aaa
cltd
mov
call
sbb
fidivrl
jmp
popf
mov
cs
and
mov
and
add
add
incl
mov
jmp
inc
sbb
ds
or
or
shrb
cmp
push
aas
aad
stos
cli
jb
ret
ret
es
into
push
jne
aam
inc
nop
repz
stos
inc
stc
imul
cmp
incl
out
jnp
push
pop
xchg
push
adcb
imul
pushf
pop
insl
and
out
pop
mov
jmp
popa
cmp
jb
fdiv
pusha
xor
adc
popf
in
outsb
pusha
jmp
jecxz
mov
in
push
mov
jmp
ds
inc
clc
lahf
push
pop
sbb
and
cmp
add
and
test
dec
sub
mov
and
sbb
pop
lahf
adc
push
and
push
gs
jmp
ss
adc
test
pushl
jno
jle
mov
pop
sbb
dec
push
daa
or
adc
pop
lods
xchg
push
call
pop
xor
rcrb
rcrb
and
adc
mov
orl
std
aas
adc
js
xchg
das
clc
loop
aam
ret
pop
sub
or
sbb
lods
jmp
push
jmp
dec
test
jnp
lods
xlat
pop
mov
incl
hlt
insb
sub
jl
dec
aaa
fisubrl
imul
mov
xor
push
cmp
lcall
andb
jmp
xchg
sbb
aas
movsb
mov
push
lods
arpl
incl
movsl
pop
xor
imul
jae
jecxz
cmp
cs
ljmp
mov
aaa
pop
adc
fnstsw
adc
and
cltd
loopne
xor
sbb
fisubrl
repnz
pushl
stos
cmp
xchg
movsl
roll
push
mov
lahf
pop
push
shlb
sbb
sub
cmpsb
inc
data16
pushl
dec
inc
xlat
mov
mov
push
test
mov
lds
fldz
pop
and
incl
cli
test
jne
mov
and
fcomp
sbb
pushf
inc
in
pop
dec
and
cltd
in
dec
xchg
std
jmp
or
fs
movsb
rolb
push
push
push
adc
mov
stc
ds
lcall
dec
pop
lock
mov
xchg
pusha
cld
dec
pop
or
roll
jmp
enter
in
aad
mov
inc
lods
in
sub
xchg
loope
jo
hlt
sub
dec
imul
pop
out
cld
ljmp
pop
out
fbld
mov
add
mov
push
push
xchg
or
lods
jp
and
pop
jg
lcall
test
aam
or
add
data16
sub
jnp
in
cli
cwtl
sbb
fs
mov
inc
ret
pop
rcll
add
adc
stos
insb
push
mov
xchg
rcl
push
push
lods
jmp
push
je
xor
inc
jge
inc
push
out
movsb
mov
cmp
aas
and
pop
pop
jno
addr16
fsubs
mov
mov
out
sbb
test
stos
je
fs
mov
jle
cld
cmp
push
pop
nop
lret
cmp
ret
adc
rorb
lock
in
mov
mov
decl
je
in
jns
push
lcall
scas
les
mov
pop
mov
cmp
call
sub
testb
std
push
mov
and
adc
ret
pop
lea
adc
xchg
jg
pop
xor
mov
pop
inc
in
rcrl
push
mov
in
mov
ja
cli
cwtl
vprotb
xchg
dec
mov
loope
xlat
push
mov
movsl
push
out
cli
fld
mov
add
mov
ljmp
dec
bound
sub
xor
loop
ficomps
mov
nop
and
mov
jmp
outsl
insl
mov
mov
jb
pop
xchg
lods
pusha
dec
and
cli
xchg
insb
add
adc
loop
fimuls
call
mov
push
inc
mov
lods
mov
das
fs
cld
mov
ljmp
inc
jbe
popa
into
out
outsb
lods
push
mov
jns
mul
movsb
xchg
outsl
out
xlat
push
out
xor
ljmp
push
cmpsl
adc
pop
xchg
push
es
or
jle
or
mov
ljmp
mov
imul
push
sahf
movsb
popf
cmp
xchg
jge
fldt
les
in
decl
test
cs
rol
in
gs
data16
jge
das
in
decl
mov
sub
or
sti
push
mov
adc
inc
call
sbb
lret
stos
push
mov
mov
fs
in
mov
decl
jnp
ret
mov
fsubl
sbb
out
fcomps
inc
test
mov
mov
dec
cli
push
inc
mov
and
sarb
mov
test
lea
cmp
xlat
fwait
jge
sbb
inc
cs
outsb
push
xchg
imul
test
fwait
inc
push
mov
dec
mov
pop
out
es
call
ja
mov
jnp
scas
dec
mov
jae
decl
cltd
sbb
enter
movsb
mov
or
sub
pop
pop
push
xor
lret
push
outsl
lcall
popa
lods
push
push
es
out
mov
stos
sub
jecxz
orb
xchg
divb
loope
ljmp
sti
mov
adc
stos
dec
pop
test
cs
ret
sbb
or
pushf
adc
lock
jle
xor
xor
jo
out
jne
fs
mov
nop
jg
cmc
out
pop
int
sbb
fcmovu
scas
aas
or
inc
xchg
jl
inc
xor
fsubrs
ljmp
bound
aad
lret
outsl
and
jmp
inc
jle
and
in
xchg
lcall
clc
gs
inc
mov
or
in
inc
jns
inc
adc
push
pushf
xchg
adc
aam
fistpl
mov
adc
aad
xchg
jle
shll
out
push
cmpsl
lret
mov
pop
mov
icebp
incl
sbb
out
jmp
jns
pop
dec
das
aas
mov
insb
test
jle
das
es
clc
jae
sbb
aad
mov
xchg
ljmp
mov
xchg
insb
mov
jb
and
add
pop
pop
cmpsb
mov
ljmp
push
data16
pop
iret
inc
dec
or
push
stos
cmp
pop
ds
add
mov
mov
test
mov
js
pushw
xchg
pop
push
out
mov
arpl
push
jg
adc
es
sub
or
sbb
cmp
dec
mov
lahf
mov
sub
dec
test
adc
push
std
icebp
scas
fldt
and
xchg
xor
sbb
es
mov
int3
xchg
cli
outsl
decl
and
lcall
fs
ret
adc
movsl
cld
incl
or
imull
in
jecxz
cmp
and
cmp
mov
test
jbe
adc
lret
ret
push
mov
fidivrs
stos
lcall
lcall
sarb
xchg
roll
sti
mov
add
addl
and
push
mov
add
out
mov
ljmp
push
sbb
js
mov
cmc
fldl
xchg
push
incl
dec
aad
pop
sahf
jne
jmp
or
paddq
ficoml
mov
sbb
jb
sbb
sahf
mov
jae
mov
sub
jle
and
jmp
shrl
mov
js
pop
cmc
mov
out
push
push
dec
add
add
push
cmc
sub
rorb
dec
mov
inc
andb
pop
ss
ljmp
loopne
cmp
mov
mov
mov
push
iret
fs
ljmp
icebp
or
mov
ja
dec
lret
insb
jmp
pop
jmp
test
inc
jns
mov
jmp
roll
or
pop
or
xchg
inc
xchg
mov
jmp
das
xor
sub
lock
xor
cmpsl
ret
jmp
lock
or
jmp
pop
ljmp
in
fimuls
mov
xorl
lcall
ds
mov
bound
stos
mov
inc
or
cmpsl
sbb
sbb
repnz
push
cli
incl
pop
pop
dec
push
and
pop
mov
mov
mov
dec
xor
lea
out
xor
dec
add
or
ljmp
ljmp
jne
cmp
movsb
les
sub
fdivp
cmc
inc
lret
mov
js
les
bound
lcall
push
push
mov
in
pop
cmp
sbb
loope
mov
fidivl
gs
pop
mov
adc
orb
sarl
push
pop
jb
imul
ljmp
sub
jecxz
cmp
fucomi
push
and
xchg
test
sbb
mov
sub
decl
and
popa
pop
fists
call
test
push
dec
xor
and
popf
pop
add
dec
cs
movsb
xor
dec
sbb
loop
std
mov
call
mov
mov
dec
lods
rorb
or
dec
and
pushf
stos
jnp
lods
pop
cmpsb
and
mov
inc
dec
fsubs
dec
movb
imul
add
aaa
adc
dec
push
mov
cmp
pop
shll
push
xor
stc
sub
lods
pop
jmp
cmp
sbb
sub
leave
aad
lret
ljmp
das
mov
popl
test
adc
and
push
test
pop
xor
iret
jg
incl
jb
mov
jmp
scas
mov
sub
push
cmpsl
mov
xor
dec
xor
jle
jb
cmpsb
cmp
xchg
cs
cmc
loop
in
push
xchg
out
pop
into
mov
inc
fstpt
es
ds
decb
xchg
xchg
iret
jg
mov
fyl2x
fcos
call
repnz
or
cmc
and
icebp
cmp
popl
bound
incl
cmp
lcall
pop
hlt
and
lret
in
xor
pop
testl
dec
les
ljmp
into
push
jp
out
mov
subb
mov
gs
jae
shll
lods
jmp
pop
ret
jno
push
pushl
jp
in
sbb
mov
in
andb
adc
movsl
test
push
cmp
dec
enter
cmpsb
adc
lahf
in
and
pop
jmp
sti
push
pop
aam
popa
in
and
decl
std
push
adc
aam
aad
or
xor
adc
push
push
cmpsb
sbb
xchg
jp
adc
pop
pop
add
push
pop
pop
test
adc
fistpll
sbb
popf
jle
mov
inc
jecxz
ljmp
in
mov
add
jae
pop
jae
or
push
xchg
outsl
aam
decl
shlb
aaa
rcl
mov
mov
incl
jg
adc
fidivrl
aad
inc
push
adc
add
pop
mov
incl
icebp
inc
in
fsubs
in
insb
mov
pop
cmc
shl
pop
cmp
push
sub
fsubrl
scas
mov
incl
outsb
mov
add
adc
ljmp
add
cmp
add
scas
pop
sbb
inc
stos
xchg
xchg
das
cmp
call
mov
pop
test
pop
mov
cmp
imul
out
cld
xchg
mov
ja
test
incl
push
push
mov
xchg
inc
decb
cmpsl
es
inc
fmuls
hlt
jo
incl
lock
jmp
outsb
sbb
mov
in
xchg
rorb
bound
decl
stc
cmp
in
cmc
test
xchg
mov
mov
xor
cmp
ds
lcall
imul
paddw
bound
fidivrl
pop
mov
sbb
pop
xchg
add
test
sbb
cltd
jp
dec
and
inc
loopne
repz
mov
jae
aam
or
pop
out
sub
out
rcrl
decl
mov
test
xchg
and
stc
popf
push
or
into
jno
ret
and
and
lock
jmp
push
clc
nop
loopne
fsub
call
mov
iret
jmp
mov
jge
sub
inc
xor
js
jo
call
rcll
cmp
pop
aaa
jb
and
ds
rep
sub
stos
lcall
nop
adc
add
call
inc
lahf
scas
mov
dec
or
fisubrs
call
and
mov
mov
shl
push
pop
decl
adc
cmp
jge
cmp
dec
and
xor
jg
jecxz
test
inc
jmp
repnz
insb
jb
sbb
rcrb
inc
push
cmp
lcall
sub
jne
dec
xor
subb
jbe
adc
packuswb
stos
aas
mov
iret
lods
call
outsb
jnp
push
pop
inc
int3
daa
add
push
cwtl
addb
adc
mov
cmp
aas
or
call
imul
cmp
in
mov
or
jno
mov
imul
jmp
mov
mov
jle
sub
adc
add
add
aaa
dec
ljmp
shlb
out
mov
ljmp
jl
lock
xchg
test
int3
mov
jns
leave
outsb
pop
popf
mov
adc
ljmp
jbe
inc
add
ret
ja
push
xchg
mull
mov
pusha
sbb
mov
imull
jmp
xlat
sbb
sub
mov
repnz
jns
mov
mov
imul
adc
adc
aad
push
jg
mov
jecxz
dec
xchg
push
popf
jg
mov
xchg
aaa
dec
and
sbb
jg
sar
jle
mov
call
popf
aas
hlt
dec
fists
push
les
aas
add
mov
dec
adc
out
mov
sub
mov
sti
and
sar
aas
adc
xchg
mov
or
iret
or
cmpsb
mov
ljmp
fnstsw
xchg
add
test
decl
aad
fs
mov
fwait
cmc
xor
and
push
or
sub
push
addr16
mov
mov
or
aam
mov
sub
push
inc
and
lcall
mov
xchg
xchg
dec
and
std
in
lods
jmp
xor
mov
sub
jb
sub
or
dec
jg
jg
inc
sub
mov
xor
in
rcl
insb
push
iret
bound
xor
sar
loop
mov
mov
push
rorl
dec
incl
es
bound
ljmp
insl
aam
push
add
lret
sbb
fldl
lret
hlt
cmp
mov
dec
in
push
add
xchg
push
loop
dec
fldenv
adc
pushl
xchg
ret
cmp
lds
push
or
mov
mov
push
sbb
add
rclb
stc
loope
or
into
jno
push
xchg
push
adc
jne
mov
cwtl
pop
stos
loop
lcall
out
fcmovnb
lret
cwtl
in
sbb
inc
fidivrs
mov
stc
scas
pop
out
jge
cmp
sarb
pop
scas
fimull
jg
rcrl
lock
sub
hlt
jl
cmpsb
repnz
fsubrl
dec
jne
jmp
mov
and
cmp
mov
ret
xor
in
xchg
std
testb
call
cmc
mov
pop
or
loopne
jecxz
loop
mov
jb
sub
cmp
idivl
xchg
or
out
hlt
or
inc
aam
jge
call
ljmp
les
jns
leave
loope
popf
push
or
inc
lock
lods
pop
hlt
gs
arpl
mov
lcall
addl
and
jnp
lods
insl
jno
pop
and
cwtl
aad
cmpsb
push
mov
dec
nop
push
mov
into
outsl
ds
movsb
jp
pushf
mov
cmp
add
jge
popf
sub
cmp
ja
sbb
xchg
cwtl
pop
pushf
or
dec
cltd
and
cli
sti
xor
decl
les
rorb
fcomps
pop
xor
push
popa
faddl
xchg
ja
nop
mov
xchg
in
incl
and
stc
mov
cmp
xor
repz
jno
mov
adc
movsb
dec
inc
int
inc
pop
push
fs
icebp
loope
aam
fisubs
inc
sbb
jb
mov
ss
mov
call
popa
mov
push
sbb
or
ljmp
add
push
lods
call
call
push
gs
das
mov
xchg
shl
jo
gs
mov
lahf
dec
cmpsl
arpl
lcall
jmp
add
mov
popa
push
or
daa
leave
sbb
ja
outsl
int3
loope
pop
lcall
inc
xchg
xchg
imul
mov
fldl
push
fimuls
jnp
inc
lret
fdivr
ljmp
sbb
cmp
jns
adc
iret
loop
sbb
push
in
push
push
mov
push
mov
or
jp
dec
iret
jbe
xor
dec
lahf
sub
adc
xor
inc
mov
or
incl
add
add
arpl
push
dec
lods
and
scas
scas
pop
mov
clc
mov
call
out
insb
sbb
jns
sbb
pop
test
inc
js
lea
or
push
pop
xor
call
xlat
pop
fiaddl
out
popa
inc
fxtract
rclb
or
lcall
or
xchg
and
jb
xchg
mov
dec
jp
xchg
cs
outsb
cmp
aas
pop
shlb
sahf
xor
dec
mov
inc
in
fsubr
inc
cmp
mov
in
xor
xchg
xor
fs
jle
imul
xchg
test
shrb
imul
decl
jg
movsl
or
ret
adc
bound
dec
mov
cmp
fcomps
or
in
inc
jne
psrad
cmp
pop
sub
addr16
stos
and
cwtl
push
idivl
call
cmpb
ljmp
loop
test
lcall
lret
xlat
mov
lcall
ja
dec
sti
pop
cmp
cmp
push
stc
jg
lea
fwait
enter
imul
sarl
fdivrp
add
pop
movsl
xlat
mov
or
stc
dec
sbb
sbb
jnp
push
inc
mov
stc
mov
xor
hlt
loope
cmp
inc
cmp
mov
lcall
and
imul
add
pop
sti
enter
sbb
xor
pop
inc
ja
lcall
cld
push
sbb
aaa
rcr
inc
dec
jp
stc
adc
and
or
lahf
add
imul
jmp
push
shlb
fistps
sbb
dec
arpl
adcb
in
popf
leave
js
leave
fcompl
call
int3
push
popf
push
adc
addr16
cmp
cltd
scas
and
cltd
negl
or
pop
cmp
jmp
xor
inc
aad
test
or
sbb
sbb
pop
jmp
xchg
dec
out
decl
dec
add
imulb
pop
add
sti
sbb
and
movsb
dec
mov
inc
iret
call
xchg
cmc
or
leave
lahf
xchg
xor
sbb
test
outsl
cmp
xchg
ss
scas
jle
js
ret
in
fwait
dec
adcl
mov
add
sar
adc
dec
mul
xchg
mov
je
test
mov
mov
fcmovne
mov
inc
popf
icebp
xchg
aaa
jbe
cmp
leave
addr16
mov
jmp
push
fisubrl
lods
das
es
cltd
lcall
jb
mov
stos
addb
jmp
lds
add
mov
int3
test
or
ret
cmp
inc
and
cmpsb
repnz
scas
xor
xor
jno
lea
in
aad
imul
xor
incl
pop
cmp
xor
ret
ret
daa
mov
dec
mov
mov
lcall
dec
sbb
sub
xchg
js
jnp
mov
rcl
iret
jge
gs
out
pop
ljmp
xchg
outsl
insl
mov
cwtl
mov
xchg
fldl
sub
jmp
xchg
adc
decl
mov
xor
xor
sarb
popf
aad
mov
stos
out
lcall
xor
pop
pushl
lds
punpcklwd
pop
xchg
lret
stc
pop
adc
push
mov
incl
inc
fnop
xor
cmpsl
and
subl
inc
insb
cmp
pop
xchg
push
clc
adc
sti
sti
jno
mov
cmpb
pushf
push
mov
sub
test
dec
inc
fcos
incl
out
fbstp
xchg
in
pop
ds
addb
lock
mov
ljmp
lock
stos
sbb
inc
hlt
push
sbb
mov
int3
addl
out
data16
lcall
fistpl
aaa
in
lods
mov
cmp
dec
pop
xor
loopne,pn
lcall
std
push
pop
jg
push
adc
mov
cld
sbbb
cmp
add
incl
outsb
cmp
adc
aas
dec
stc
adc
adc
cwtl
add
inc
cmpb
jle
imul
sub
ds
pop
jle
lods
and
mov
dec
data16
mov
xlat
pop
jnp
decl
jl
ficoms
in
ftst
lahf
inc
mov
adc
test
loopne
inc
pop
call
jg
xor
xchg
in
inc
inc
jae
inc
imulb
aaa
movsb
aaa
pop
gs
insb
jmp
mov
pop
test
mov
pop
and
flds
pop
dec
pop
adc
scas
out
mov
inc
mov
mov
roll
aam
jns
adc
push
add
ljmp
jmp
mov
xor
sbbb
inc
sbb
and
xor
fs
insb
sarb
push
ljmp
mov
lret
mov
test
push
or
fistpl
jnp
rcrl
cmp
pop
jle
mov
mov
les
stos
mov
jge
sub
cmp
xlat
fld
pop
mov
mov
out
xchg
shlb
loope
inc
pop
add
aam
or
call
push
fisubrl
adc
xor
lret
out
and
fsubrs
jmp
leave
dec
loopne
daa
call
pop
cld
jle,pt
pusha
mov
jnp
sbb
and
mov
mov
test
push
cmp
ja
push
call
daa
jmp
jmp
leave
lcall
mov
out
fstl
sbb
pop
or
push
ljmp
jge
test
lcall
and
mov
and
incl
loopne
aas
and
daa
imul
stc
sti
nop
ljmp
decl
dec
xor
sub
adc
mov
cs
dec
cmp
mov
pop
cmp
dec
std
movsl
jbe
jmp
rol
sbb
es
add
repz
cmp
cwtl
and
jle
decl
mov
dec
xor
sub
notl
test
adc
cmp
ss
sbb
lea
in
pushl
fcomip
ret
bound
push
sahf
fnstsw
dec
sahf
loope
sbbb
repz
mov
sub
aas
dec
pop
scas
inc
inc
cmp
xchg
jle
sbbl
stos
subb
test
jmp
xchg
inc
adc
adc
xor
insl
cs
fcoms
in
xor
pop
int
repz
cmp
add
test
jg
aaa
fstpl
bound
cli
dec
sbb
popa
cmp
pop
ret
stos
cmpsl
mov
ret
push
cmp
inc
insl
sahf
scas
lret
addl
mov
fdivrs
decl
and
xlat
lret
mov
loope
cwtl
bnd
dec
sti
dec
int3
pusha
inc
stc
pusha
mov
mov
jbe
pop
incl
out
cmc
xor
add
or
sub
pop
je,pt
mov
cmc
push
add
cmpsb
call
lods
insb
mov
out
pop
add
into
adc
call
push
cmp
fs
call
xor
sbb
dec
xchg
loope
xor
leave
js
lcall
mov
lcall
add
jmp
add
jp
sbb
popa
or
mov
adc
call
ds
addr16
in
ror
push
shlb
fistpl
inc
push
inc
adc
fildll
rcl
or
pusha
incl
xor
test
xchg
hlt
mov
lock
in
xchg
lods
dec
and
call
in
adc
in
and
js
mov
xlat
adc
insb
jmp
scas
popf
loop
lods
mov
es
imul
cmp
xor
int3
lcall
push
cmp
add
push
or
fwait
jae
loop
jb
dec
jecxz
lcall
notl
outsb
shll
sub
cmp
ljmp
mov
mov
dec
aas
lds
jecxz
sbb
sub
cld
jmp
into
hlt
movsb
cld
cmp
sbb
gs
lock
xor
xchg
cmp
push
cltd
in
mov
jmp
cmp
addl
pop
mov
xor
jns
lahf
adc
sbb
test
inc
and
in
out
jbe
pop
mov
pushl
cwtl
pop
dec
int
jno
pop
jbe
xchg
adc
ljmp
xchg
out
mov
mov
and
lret
add
cmpsl
pop
adc
sbb
flds
test
or
cs
lcall
mov
pop
dec
jle
out
lahf
or
jae
shll
jg
jns
pop
sti
and
inc
add
or
xorb
out
into
call
dec
jge
sub
jnp
jl
dec
push
sti
es
addr16
pushl
adc
sti
fdivrl
push
xor
push
out
repz
mov
mov
adc
decl
scas
sub
xchg
xchg
loope
cmp
cmp
mov
push
popf
sub
push
mov
add
pusha
out
sbb
stc
cltd
iret
hlt
stc
out
rcl
or
adc
xchg
jne
adc
xor
dec
ljmp
das
aam
push
mov
outsl
insl
pop
mov
sub
xchg
push
movsb
push
pop
imul
popa
or
xor
sti
das
bound
stos
loop
outsl
test
mov
nop
cmp
pop
xlat
cmc
call
sahf
cmpsb
mov
aaa
js
call
fnsave
jnp
popa
pand
lcall
pop
mov
fdivrl
lcall
xchg
sbb
lea
mov
and
call
push
mov
mov
movlps
adc
mov
adc
inc
out
pcmpgtb
inc
cltd
es
insb
mov
arpl
and
insb
jecxz
cmpsl
adc
enter
jmp
cmpsl
xchg
mov
loopne
mov
stos
xchg
and
xor
or
fsubr
test
jmp
rcr
sub
mov
adc
xchg
adc
mov
push
or
lcall
loop
xlat
xor
sub
xor
das
lods
jno
hlt
loopne
mov
xchg
lods
outsl
lahf
push
jmp
ret
dec
mov
xorl
scas
popf
cmp
stos
pop
sub
mov
insb
loopne
mov
call
pusha
lock
fistps
push
aad
jg
mov
inc
and
jp
mov
jnp
push
jbe
cltd
ja
es
xchg
xor
push
movsb
sub
inc
outsl
in
mov
daa
imul
push
cs
test
mov
andl
lcall
cmpsb
fbld
and
movsb
xchg
imul
jns
mov
jno
data16
sub
jae
add
jmp
adc
aas
ret
xchg
cwtl
pusha
dec
mov
pushl
pop
xor
jne
sbb
dec
dec
inc
sub
lds
cmpsl
mov
mov
lock
call
cmpsl
mov
lea
pop
push
xor
cmp
aad
imul
jae
daa
jb
xchg
andb
daa
outsb
subb
call
xchg
mov
cld
jb
test
sub
ret
les
lea
adc
sbb
fisttpll
jb
cmp
fs
pushf
jns
roll
jl
orl
lods
jl
pop
sbb
cld
xor
xor
mov
pop
sbb
inc
cmpsb
outsl
jg
and
jl
das
pop
mov
notb
je
mov
mov
insb
cli
or
call
xchg
jg
xor
call
clc
or
sub
fdivrs
jl
movsl
movsb
pop
dec
mov
jg
ljmp
lea
test
mov
sub
jmp
xorb
call
lock
out
fdivrs
cmpsb
repnz
and
adc
imul
imulb
lcall
imul
jge
movsl
inc
sbb
lea
clc
lret
test
and
dec
xchg
mov
mov
into
mov
dec
xchg
xchg
test
cwtl
sbb
scas
aam
pushf
ljmp
test
mov
xor
jp
inc
mov
lea
mov
test
lret
decl
dec
dec
cmp
adc
mov
mov
in
arpl
stc
outsl
jnp
pop
loopne
mov
punpckhdq
push
sbb
insb
dec
int
ffreep
mov
push
mov
leave
pushl
ss
xor
stc
pushf
cmc
xchg
xchg
mov
pop
out
ja
inc
mov
daa
sub
call
test
add
sub
scas
xlat
fmull
xchg
and
jnp
pop
mov
pushl
add
mov
or
adc
aaa
mov
inc
dec
sub
pop
sub
dec
out
sahf
ljmp
pushf
xchg
test
sbb
in
incl
into
sbb
adc
mov
or
and
stos
inc
adc
sbbl
jmp
cmpl
scas
movsl
je
and
jno
jp
push
mov
push
test
or
jle
and
sub
scas
or
mov
std
inc
fs
test
jae
or
pop
mov
jmp
cwtl
mov
and
mov
add
mov
imul
pushf
cmpsb
cmp
imul
test
call
bound
mov
push
out
adc
lods
das
popf
and
mov
jmp
sbb
dec
xchg
scas
sar
call
sub
fcomi
loop
inc
lahf
fdivrl
lret
xchg
mov
jo
and
adc
incl
mov
fnstenv
cltd
mov
in
xchg
lods
idivb
leave
push
ficompl
call
fcmovnb
test
or
mov
sub
inc
push
pop
xor
or
lcall
mov
incl
mov
xor
jmp
outsb
mov
rolb
lock
cmc
out
decl
testb
cmp
or
movsb
push
sub
gs
sub
std
aaa
push
mov
inc
sbb
jnp
fidivs
mov
or
das
add
jmp
stos
and
jg
add
inc
mov
xchg
ret
push
cmp
cmp
outsb
cmpsb
inc
out
mov
cli
xor
test
sbbl
push
sub
dec
hlt
incl
pushl
scas
call
mov
xchg
push
lock
cmp
insl
popf
fs
mov
lods
pushf
ret
loopne
popf
inc
or
sti
lock
jmp
std
inc
xchg
call
lods
xor
pop
dec
lock
lods
into
aam
add
mov
push
jmp
lock
mov
cld
sub
cmp
and
jno
push
clc
jecxz
mov
stc
dec
lock
cltd
cs
push
xor
ljmp
negb
into
inc
xchg
aad
out
mov
sbb
mov
xor
call
cmpsl
mov
cmp
jmp
xor
adc
dec
jnp
pop
jl
inc
jb
push
adc
aaa
popf
dec
ret
lret
and
incl
pop
je
filds
lret
rorl
add
push
xor
mov
mov
je
lcall
lds
push
push
cld
imul
xchg
adc
pop
push
int
repnz
insb
lcall
jl
daa
mov
scas
pop
push
jl
xchg
rcll
mov
xor
scas
jl
pop
push
daa
popf
ljmp
cmp
popf
fsubrs
ret
imul
jne
ja
daa
xlat
das
jle
mov
lcall
loope
inc
xor
icebp
out
xchg
mov
add
cmp
jb
jl
xor
push
das
push
and
sbb
jmp
pop
fisubl
repnz
add
cmp
incl
cmova
ds
in
mov
jno
test
hlt
popf
push
pop
pop
push
scas
test
cmpsl
outsl
lcall
ds
nop
mov
subb
je
mov
movsl
jecxz
push
push
jno
in
cmpsb
cmp
push
xchg
xchg
subb
or
sbb
mov
stc
mov
pushl
loope
fmull
enter
sbb
adc
or
dec
call
and
call
pop
xchg
pop
push
xchg
out
adc
gs
scas
popf
es
movsb
mov
inc
mov
jns
decl
push
add
mov
sbb
fdivp
and
es
add
mov
call
testb
xchg
pop
je
ret
push
popf
insb
adc
cmp
pop
pop
mov
ljmp
adc
icebp
mov
pushf
jo
jno
sub
cmpl
ret
push
xor
inc
mov
les
dec
dec
mov
and
mov
cmpsb
test
pop
insl
fsubrs
ljmp
and
orb
out
sahf
add
push
lods
mov
push
lret
jmp
int3
pop
jmp
mov
xor
rclb
xchg
xchg
push
push
add
popa
jmp
pop
lods
pusha
cltd
test
lcall
jecxz
push
aaa
dec
sbb
clc
push
test
mov
mov
popa
mov
decl
decb
js
xor
andb
cmp
inc
loopne
lahf
aas
sub
dec
xchg
adc
decl
stos
cmc
pop
scas
lret
or
xor
vsqrtpd
add
mov
pop
xor
xor
jmp
inc
pop
imul
push
xor
out
loopne
in
adc
pop
push
fiaddl
fst
cmpsl
loop
mov
je
mov
cmpsb
sub
int
cld
cmc
mov
hlt
pushl
pop
dec
sbb
movsb
adc
sub
idivl
pop
sbb
flds
test
sub
add
push
pushl
xchg
xchg
push
negb
add
cld
push
into
pusha
in
inc
and
mov
sub
lcall
getsec
inc
stc
cmpsl
mov
loope
repz
in
lret
xor
mov
lock
dec
jns
lcall
les
mov
fstl
sub
cmp
or
std
and
adc
movsl
enter
dec
test
aas
pop
iret
push
in
scas
leave
adc
mov
cmp
lcall
push
jno
inc
test
push
cltd
pop
je
mov
dec
popa
mov
ficompl
mov
jmp
adc
jge
mov
mov
xchg
cmc
sti
add
loop
aad
pop
imul
cmp
mov
mov
movsl
mov
xchg
test
dec
inc
fstl
out
inc
push
cmpsb
stc
mov
jo
rcrl
push
lods
sbb
xor
js
cmp
push
cmp
push
xchg
test
pop
and
fistpll
jmp
ret
mov
popa
xor
aas
stos
and
je
pop
int3
jmp
and
popa
inc
mov
ja
push
das
dec
inc
mov
mov
push
cmp
icebp
icebp
stos
imul
inc
ja
call
push
inc
dec
jp
cwtl
push
jg
fisttpll
js,pn
dec
sbb
ljmp
xchg
jo,pt
leave
inc
adc
dec
add
shrl
loopne
or
adc
int
add
incl
cmpsb
cmp
scas
pusha
or
testb
popa
inc
mov
stc
xchg
sub
ljmp
push
out
je
pop
cmpsb
pop
and
mov
sbb
prefetch
leave
loop
incl
push
sbb
mov
imulb
jne
mov
dec
push
inc
push
xor
sbb
ljmp
out
es
mov
jmp
and
jo
jnp
fdiv
clc
test
in
insl
cmp
call
cmc
rclb
push
push
sbb
test
sti
ja
mov
in
pusha
insl
cmp
incl
jbe
out
lret
out
sbb
int
push
add
idivl
mov
jmp
jae
shlb
sbb
dec
pop
cmpsl
scas
je
or
add
adc
pushl
scas
xor
nop
sub
inc
push
lods
push
repz
xchg
xor
incl
call
adcb
repnz
adc
xor
push
lods
mov
sub
pop
inc
inc
mov
lcall
push
or
add
icebp
arpl
loope
imul
insl
daa
gs
loop
ljmp
clc
pop
mov
ljmp
mov
push
sbb
cmc
pop
xchg
mov
inc
cld
pushl
enter
pop
adc
fsubl
popf
insb
cmpsl
test
jecxz
lcall
xor
incl
in
and
enter
das
mov
mov
ficompl
sub
mov
lcall
fists
out
xchg
stos
pushf
mov
jns
cmpsb
inc
pop
jmp
in
mov
lret
inc
inc
inc
mov
fnstenv
fwait
jnp
je
sub
push
gs
test
les
inc
dec
call
mov
divb
out
or
xor
mov
fildll
mov
add
cmp
call
add
popa
pop
clc
rcl
xchg
push
xchg
imul
roll
mov
lds
or
sbb
pop
fnstenv
leave
outsb
dec
mov
cmp
incl
lahf
ds
repz
inc
cmc
mov
shlb
ja
jge
and
or
psubd
popa
incl
pop
popf
add
xor
sti
mov
xchg
dec
vprotb
call
inc
cmpsb
pop
cli
add
das
sub
insl
repz
mov
insl
push
add
and
xchg
add
dec
cld
ljmp
xlat
cmpsb
out
test
ds
xchg
jne
movsb
inc
adc
push
clc
adc
das
sbb
xchg
inc
push
cld
mov
decl
loop
cmpsl
rorb
lds
divb
rcl
push
and
incl
sahf
lods
and
lods
inc
aaa
into
in
dec
mov
xchg
cltd
mov
push
insl
pop
ficoml
stc
cmc
dec
les
sbb
inc
dec
negl
mov
mov
imul
out
cltd
xchg
pop
das
cmpsl
out
jae
pop
dec
fdivs
repz
mov
outsl
ss
rorb
or
lcall
add
addb
jle
popa
jne
dec
mov
scas
out
xchg
ds
sub
lea
mov
call
pushf
inc
movsb
addr16
add
inc
mov
les
cmp
jb
mov
mov
dec
loope
add
fwait
xlat
aas
sub
aam
or
lcall
cmp
imul
stc
and
daa
popa
or
jnp
shrb
in
rclb
call
fdivrl
scas
hlt
mov
cmp
mov
mov
adc
pop
data16
inc
jmp
bound
push
inc
pop
fsubrl
cmp
in
add
push
fwait
sbb
mov
dec
imul
clc
ljmp
jnp
or
dec
adc
xchg
mov
mov
cld
addr16
mov
call
or
push
xchg
xchg
lcall
xchg
movsb
addr16
dec
cmp
jl
ljmp
test
add
das
cmc
lret
dec
pop
call
addb
mov
mov
xor
mov
inc
xor
add
sbb
mov
stos
pop
testb
and
jge
adcb
scas
fisubs
add
loope
sub
jmp
push
push
ss
bound
add
ffreep
stos
adc
jge
call
jns
jmp
subb
push
bound
call
xchg
xchg
adcl
cmpsl
jg
or
incl
mov
imul
scas
add
add
inc
dec
andb
in
pop
inc
adc
dec
inc
adc
xchg
out
sbb
lret
arpl
mov
addr16
subb
cmp
nop
fwait
pushl
add
leave
push
ja
cmp
data16
adc
sbb
push
xchg
test
arpl
call
push
sbbb
test
jo
aaa
std
and
push
dec
out
icebp
repnz
shr
xor
fnstsw
push
incl
cmp
aam
and
fadds
cmpsl
pop
cmp
enter
jl
pop
ljmp
push
xchg
sbb
mov
les
pop
mov
daa
cld
movsl
cmp
incl
mov
or
mov
push
out
fwait
jmp
jo
sub
fistpl
movb
outsl
sub
push
sahf
sbb
sub
xchg
adc
mov
sub
pusha
and
or
addr16
mov
mov
sti
push
xrelease
mov
pop
pusha
loop
and
pop
push
aaa
xchg
or
clc
mov
in
call
xchg
clc
scas
inc
inc
negl
ds
imul
push
xlat
cmc
mov
inc
repnz
fsubp
fistpll
ja
mov
repnz
mov
out
in
mov
cltd
scas
in
jmp
add
or
nop
mov
sub
outsb
and
add
add
xchg
mov
incl
cmp
cltd
sub
lahf
loope
jp
lcall
cwtl
add
or
clc
xchg
jmp
push
flds
or
adc
cwtl
test
repz
cli
cmp
inc
clc
fisubrs
stc
out
jmp
cmpsl
mov
xor
fmull
pop
fs
xchg
cmc
xchg
int3
aam
jl
mov
lcall
lahf
call
pop
mov
xchg
mov
subl
inc
cs
lret
inc
and
sti
fs
hlt
adc
pop
lcall
jmp
aad
icebp
pop
cmc
push
pop
mov
ljmp
xchg
mov
pop
pop
in
sbb
les
js
push
inc
xchg
push
dec
jbe
jmp
incl
or
inc
jmp
into
add
arpl
test
jmp
std
inc
dec
clc
adc
cli
xor
inc
stos
popf
push
fwait
test
cmp
inc
mov
sub
jo
ljmp
xchg
das
add
and
inc
xchg
cmp
stos
xor
xor
pop
sub
mov
xor
je
dec
xchg
test
mov
pop
inc
sahf
jp
xchg
push
pop
sub
sub
push
jns
cmp
es
mov
lret
mov
daa
inc
add
fildll
cmp
pop
mov
push
push
inc
mov
jo
je
das
adc
cmpl
mov
call
dec
push
popl
hlt
sbb
inc
ficomps
orb
dec
jns
insb
jp
sub
out
ds
test
movsb
mov
repz
ffree
mov
pop
adc
mov
fdivrs
dec
movb
cmp
hlt
jnp
dec
mov
out
stos
dec
jb
aam
frstor
xchg
xor
call
jo
push
das
adc
movsb
xchg
xlat
out
inc
lea
cmp
loope
lea
jb
js
addr16
mov
mov
or
das
push
inc
cld
mov
and
insl
clc
js
testb
call
pop
cmp
mov
adc
xchg
xchg
popa
cwtl
jb
cmp
imul
sbb
cltd
push
inc
push
xchg
inc
adc
mov
mov
repz
lret
cmp
push
jle
push
sub
stc
imull
popa
jo
fisttps
jb
mov
dec
neg
dec
je
push
mov
ret
popa
and
lcall
cmp
cld
xor
arpl
sub
ds
cmp
bound
adc
mov
push
ja
sbb
mov
and
xchg
in
addl
movl
call
aaa
mov
push
cli
out
push
out
clc
lret
lds
mov
fcmovne
push
jbe
xor
hlt
ret
inc
mov
push
mov
cwtl
nop
out
dec
cwtl
test
and
jg
loop
jae
or
ljmp
repz
cwtl
stos
sbb
mov
lret
orb
into
cs
jns
loope
mov
inc
call
mov
daa
das
fs
adc
sub
xchg
cmp
call
ljmp
push
js
mov
inc
ds
int
scas
push
mov
fcmovbe
lcall
jmp
int
out
jle
xor
jnp
jg
in
pop
movsl
mov
ret
xor
popa
jmp
popf
inc
stos
in
lds
mov
pop
pop
insb
push
mov
rclb
xchg
adc
pushl
jne
mov
inc
or
fiaddl
sbb
rorb
dec
pusha
ljmp
int
cmpsb
add
je
push
and
cs
xchg
and
jbe
push
movsb
leave
push
movsl
mov
call
mov
mov
lods
fstpt
sbb
inc
test
adc
mov
aas
sub
out
pusha
ficoms
jle
jg
jmp
jb
pop
arpl
xor
cltd
xor
or
xchg
enter
incl
xchg
pop
xchg
mov
cwtl
jecxz
mov
pop
outsb
shll
mov
fistl
call
xor
icebp
aas
or
add
push
mov
lret
mov
shll
decl
mov
push
stos
jge
push
ror
cli
jg
jns
ljmp
pushf
hlt
jae
inc
imul
xor
xor
mov
pop
divb
mov
pop
dec
lods
mov
shrl
ljmp
rcl
jl
lods
in
in
mov
sub
mov
stos
and
addl
push
std
lahf
dec
push
and
push
ret
fwait
imul
adc
or
lahf
inc
imul
jmp
in
push
xchg
lret
push
push
or
arpl
xor
adc
ljmp
lcall
stos
cltd
lods
in
in
xchg
sbb
adc
out
pop
lcall
jecxz
decl
imul
cld
iret
mov
arpl
loopnew
mov
mov
sub
ret
jmp
loop
or
loop
jae
and
es
daa
imul
push
andb
push
pushl
mov
adcl
pushf
fldl
stos
imul
sbb
lcall
xor
xchg
pop
jbe
mov
or
aad
bound
aam
ja
pop
inc
inc
not
mov
add
incl
dec
fs
jns
incl
mov
inc
movsb
jno
mov
out
push
out
cmp
jns
jmp
fcomip
test
mov
mov
xor
iret
pop
push
movb
pop
ljmp
jnp
mov
add
call
mov
adc
mov
and
add
out
call
dec
xlat
xor
push
mov
xorb
lea
cmp
mov
data16
inc
out
xor
jmp
sbb
push
jnp
sub
iret
jb
dec
pop
jge
or
pop
jmp
fwait
push
ss
dec
lods
dec
lods
test
mov
mov
aam
jb
idiv
fisttpl
sbb
push
mov
aad
lods
push
cwtl
stos
movsb
inc
xor
jo
outsl
repnz
lcall
sbb
or
mov
mov
loope
movsl
push
rcrl
les
ud0
jmp
lea
addr16
fs
and
into
lahf
dec
aad
push
lock
xor
mov
mov
cli
jb
lret
shr
arpl
dec
dec
les
icebp
add
inc
push
out
and
ljmp
fcmovnu
dec
cmp
pusha
adc
mov
jle
cmp
mov
jmp
loope
mov
jecxz
lret
jb
mov
add
adcl
dec
jmp
cmp
pusha
xor
rcl
sbb
inc
ret
adc
shl
ret
sbb
jmp
nop
jnp
jb
mov
dec
and
ficompl
mov
jmp
push
lahf
jle
push
and
les
incl
loop
push
aaa
lock
adcl
pushl
or
mov
loope
aaa
dec
xchg
nop
rcrl
inc
push
pop
sarl
jmp
lretw
sbb
xor
xchg
inc
fwait
lods
test
inc
in
xor
lds
loopne
dec
cmp
pushl
and
adcl
sub
rdmsr
jo
inc
xchg
cmpsl
dec
push
lret
mov
sbb
lea
lock
mov
adc
mov
arpl
and
ret
mov
sbbl
cmpsb
pop
pop
inc
imul
push
cmp
in
mov
pop
cmp
int3
scas
or
call
out
cmpsb
and
enter
fmul
mov
xchg
out
shrl
ljmp
mov
arpl
sub
xor
adc
push
cmc
cmp
mov
push
je
inc
shll
mov
je
cmc
jbe
inc
adc
ljmp
jecxz
hlt
and
fisttps
push
add
pushf
mov
dec
lret
and
call
cmp
jge
adc
out
insb
daa
mov
cmp
stc
test
out
adc
ljmp
subb
lcall
xchg
frstor
cmc
pop
sub
lea
add
jmp
mov
xor
sbb
jb
add
xlat
sub
ja
pop
pop
pushf
xchg
pop
fcoms
lahf
mov
mov
cmp
inc
test
les
xchg
repnz
adc
or
aad
in
fwait
cmpsb
or
adc
ljmp
push
cmp
push
or
lret
into
das
push
mov
add
jecxz
or
mov
jmp
movsb
movsl
and
cwtl
jo
xor
xlat
fistps
fadd
fnstsw
adc
sbb
aam
ss
call
aas
sbb
push
adc
inc
sbb
xor
sub
sub
lods
sbb
leave
rcrb
outsl
adc
frstor
sti
sub
jmp
jp
into
xchg
pop
les
dec
leave
add
test
adc
aas
int
rolb
push
adc
cmp
push
es
cltd
jge
imul
sub
pusha
pushl
xchg
adc
push
andl
xor
add
mov
mov
ss
in
lock
jno
aam
push
aam
out
dec
negl
sub
jnp
pusha
dec
xchg
cmp
dec
mov
std
in
aaa
cmp
mov
pop
in
inc
and
js
fwait
cmp
lock
sub
push
addr16
and
sub
add
popa
jle
xchg
leave
mov
in
lock
or
adc
jb
xchg
ficoms
lcall
mov
lods
dec
sbb
or
nop
stc
mov
movzwl
cmp
shll
xor
sbb
add
pushl
xor
in
jecxz
wrmsr
push
lea
add
mov
push
dec
jp
je
addr16
repz
pop
mov
cmpsb
push
clc
leave
adc
inc
push
add
jno
mov
jl
fcomps
jecxz
cmp
mov
daa
scas
or
test
pop
cmp
popf
insb
push
int
sti
inc
push
dec
cmc
dec
mov
push
ljmp
push
dec
std
mov
pop
push
dec
fisubrs
subb
std
addl
mov
int
aaa
test
inc
outsb
lcall
call
imul
les
pop
stos
shll
adc
dec
jns
jo
mov
lcall
flds
pushf
jmp
orl
fimull
mov
push
jg
jecxz
incl
movsb
cmp
mov
ja
lods
in
stos
cmc
pop
dec
orb
push
lods
ljmp
jno
test
popf
mov
jnp
ja
lods
push
adc
fsubrs
xor
scas
mov
or
and
pop
mov
call
scas
push
cmp
mov
iret
xchg
xchg
or
jecxz
adc
cmp
add
jo
aaa
cmp
and
outsl
clc
or
andl
add
out
dec
popa
sub
lret
jnp
push
stc
xor
scas
and
cmovns
ljmp
pandn
and
cmc
call
into
jbe
jp
cmp
fldl
stos
mov
mov
jle
lock
mov
push
dec
cwtl
lahf
pop
in
stos
lock
popa
cmpsb
lock
sete
pusha
mov
xlat
sar
cmp
loope
ds
lahf
cmp
add
jne
dec
xor
rcl
xchg
dec
lods
dec
push
sub
pushl
pop
sub
pop
mov
scas
shlb
sbb
and
iret
cld
decl
add
xor
ret
jb
mov
fwait
sti
fwait
sahf
aas
lods
jp
adc
fs
pushl
sbb
and
sub
inc
jl
inc
fisubl
adc
jg
imul
add
add
aaa
ss
int
sti
push
les
ljmp
jnp
pop
push
jb
lcall
mov
xor
mov
addr16
cmp
mov
call
ja
pusha
fmull
sbb
cmp
sub
mov
js
cmp
ljmp
aaa
push
sub
call
and
outsl
add
adc
and
loop
jmp
sub
xchg
out
lods
fwait
lcall
ud0
incl
jmp
mov
mov
mov
movb
inc
cld
jmp
or
or
daa
ljmp
xchg
test
mov
nop
dec
sub
cmpsb
arpl
mov
insb
incl
movlps
mov
xchg
loopne
mov
mov
call
out
call
in
xor
xor
add
gs
jle
pushl
lret
inc
out
adc
cmp
popf
in
adc
dec
mov
or
enter
iret
jmp
ret
or
hlt
xor
jmp
out
sahf
pop
mov
sti
mov
cmp
xor
pop
sub
cwtl
pop
jne
xor
mov
clc
adc
insb
fs
pushl
push
add
rep
add
inc
insb
xchg
mov
iret
ud0
decl
das
out
xchg
sub
cmp
lea
push
cmc
aaa
xchg
or
movsb
cmp
nop
adc
outsl
mov
sub
sub
decl
mov
pop
and
mov
loop
adc
xchg
ret
pop
pop
cmp
sub
inc
mov
mov
call
cmpsl
dec
sub
fistpll
daa
mov
push
mov
scas
ret
aam
fwait
adc
jmp
lret
jge
jns
pushf
sub
and
call
pop
hlt
sub
fsubl
jl
incl
or
xchg
mov
popa
adc
imulb
dec
xor
aad
jbe
hlt
jo
pop
call
inc
subb
aaa
mov
mov
clc
adc
cmp
ljmp
inc
icebp
fcompp
imul
enter
movsl
iret
mov
mov
int3
xor
pop
or
inc
sbb
fildl
test
aam
push
xchg
pusha
nopl
sub
clc
incb
dec
scas
mov
sti
jne
sub
test
pop
lcall
clc
lret
decl
fcmovbe
inc
dec
loope
fdivl
in
data16
decl
add
cmp
xchg
pop
mov
push
aad
add
and
sub
sbb
call
loope
pop
aas
je
in
icebp
cmp
pextrw
dec
das
scas
inc
push
inc
fstl
insl
in
xchg
mov
outsl
aas
push
test
xor
jns
and
sahf
mov
mov
loope
loope
je
leave
insl
jmp
decl
iret
cld
and
iret
subb
dec
int
loope
push
sub
stos
mov
or
xchg
inc
mov
imul
sub
push
sub
lods
jno
hlt
lods
fsubs
inc
mov
and
inc
imul
rol
pop
cmpsl
jne
adc
stc
or
add
jg
jl
es
std
cs
xchg
stos
jne
mov
bound
xor
lcall
in
repnz
loop
jne
push
push
mov
mov
fsubs
fstpt
lds
insl
dec
xchg
jns
cmc
incl
inc
or
das
cld
pop
push
xor
sub
push
movsb
jge
ja
mov
mov
inc
and
cmp
loopne
orb
outsb
mov
sbb
mov
sbb
mov
aas
aas
je
inc
lret
xor
notl
scas
adc
cmp
hlt
ret
pop
je
pushf
dec
mov
jp
call
sub
nop
lret
aaa
sahf
xchg
and
ret
sbb
cld
shl
xorb
jmp
sub
out
popf
movsb
pushf
inc
mov
dec
leave
ss
mov
dec
stos
iret
push
lods
pop
or
xchg
aam
lret
adcl
jmp
nop
aam
fists
pushf
pushf
icebp
adc
daa
mov
gs
insl
int
cli
mov
call
inc
sbb
pop
out
mov
xor
mov
xchg
sbb
pop
push
call
aam
cmp
mov
jne
pushf
adc
lds
add
sbb
or
ljmp
mov
ljmp
inc
shrb
adc
sub
ret
and
lahf
outsl
andl
incl
mov
add
add
mov
popf
popa
fdivrl
out
jbe
xor
and
cmp
movsl
xchg
imul
jmp
mov
xchg
pushf
idivl
movsb
inc
stc
inc
and
pushl
xlat
and
repz
repz
insb
xor
xor
hlt
add
cmp
and
inc
dec
mov
inc
andl
loopne
das
push
dec
push
and
xor
test
inc
fmull
mov
call
mov
call
jb
iret
add
cmpb
mov
fldl
ljmp
ss
mov
loopne
xchg
pop
std
cmp
adc
xchg
repz
aas
lods
jne
cmp
decl
int
insl
mov
in
fsubrs
add
int
inc
mov
insb
cmc
dec
decl
xor
xchg
je
ss
dec
sub
dec
imul
xchg
les
cmp
jns
mov
push
ljmp
push
aad
jnp
pop
cmpl
xor
and
mov
jmp
or
dec
roll
xor
cmp
cmp
lea
cltd
sbbl
adc
in
sbb
dec
push
mov
std
dec
pop
lret
sbb
or
jmp
sahf
dec
jg
int
div
jb
push
loopne
sub
add
jl
subb
fiaddl
in
pushl
repz
mov
loope
xchg
jge
xor
js
inc
jecxz
cltd
dec
repnz
call
mov
mov
push
imul
pop
test
adc
mov
lcall
test
cli
stos
xor
adc
xchg
movsl
sbb
mov
mov
mov
push
in
std
mov
cs
stc
jmp
mov
rcll
adc
cmp
sub
pop
jae
vmwrite
sub
lcall
notl
aas
aas
push
fistps
testl
push
inc
and
loope
call
daa
js
mov
stos
gs
outsl
cmp
fidivl
faddl
xchg
inc
lret
shrb
xlat
xchg
out
cs
inc
jge
ja
rcl
and
decl
xchg
mov
push
push
pop
les
jge
lcall
in
stc
das
lcall
idiv
jmp
dec
testb
fwait
xlat
add
jb
mov
arpl
jp
sub
ds
outsl
mov
in
jnp
dec
mov
and
pop
xchg
jp
sbb
aas
jecxz
or
lea
jnp
push
aas
dec
jnp
jmp
movsl
pop
lds
pop
pusha
inc
incl
dec
pop
mov
jnp
imul
fdivl
sbb
jg
xchg
decl
push
xchg
and
fldenv
pushf
test
mov
jmp
incl
mull
imul
popa
adc
xor
aam
lcall
fcmovnu
push
jb
xor
add
aad
xorl
stc
incl
xchg
xrelease
movsb
lock
cs
cmp
pop
fcos
pushl
mov
sbbb
outsl
rol
xchg
enter
incl
push
pop
mov
pop
in
fidivs
push
mov
gs
add
fwait
stc
push
fnsave
ljmp
push
out
ret
jge
fstl
add
shlb
cmc
adc
or
sbb
cmp
orb
sahf
mov
cmpsb
sub
xchg
and
add
cmp
cmpxchg
decl
mov
cmp
arpl
pmulhw
insl
cltd
clc
push
les
int
aam
imul
lods
cwtl
jmp
sub
mov
push
outsl
push
cwtl
push
movsb
jg
mov
or
enter
js
decl
mov
push
xchg
cmp
push
xchg
fsts
cld
pop
jp,pt
jne
mov
in
and
std
fdivrp
pushl
jmp
sub
or
out
test
dec
cmp
sub
call
call
imul
push
mov
in
add
jno
sub
in
lahf
sbb
push
stos
pushl
jnp
ds
inc
fbld
xor
scas
inc
lahf
xrelease
mov
pusha
xchg
jmp
mov
cwtl
fs
cmp
icebp
or
pop
sbb
std
cmpb
imul
sbb
icebp
testl
sti
dec
pop
movsb
shll
test
cmp
mov
subl
lds
cmp
dec
mov
mov
enter
jns
enter
or
inc
cmp
jbe
add
movsb
in
testb
or
and
fsts
mov
cs
push
aas
mov
lret
nop
ja
jnp
xchg
aas
cmp
hlt
adcl
push
xchg
cmp
aaa
jb
add
mov
call
je
pop
subb
cmp
jle
cmpsl
ja
dec
dec
mov
jmp
pushl
sahf
fs
shlb
std
jecxz
lcall
or
addb
pop
call
jge
stc
mov
loopne
sub
std
xchg
stos
push
cmp
xor
mov
sbb
cmp
push
insl
jge
xchg
icebp
call
cmp
nop
leave
push
stos
out
sbb
call
jnp
push
jl
aam
loope
xchg
int3
pop
movsb
iret
sub
mov
das
jo
mov
mov
cltd
stos
cmp
jno
addb
adc
xchg
loope
fmul
or
sti
es
lret
mov
dec
test
leave
sub
cmp
or
jmp
and
stos
nop
je
fdivl
js
frstor
addr16
xor
push
cmp
es
call
mov
push
sbb
adc
push
sub
push
repz
roll
or
ds
inc
and
mov
test
divl
fistpll
add
movsb
mov
aas
sarb
pop
lods
loope
inc
adc
xchg
adc
fnstenv
mov
decl
adcb
push
fidivl
mov
aaa
push
rcl
xor
mov
popa
adc
shll
push
gs
jl
out
mov
or
jbe
pop
pusha
lea
mov
jo
jmp
sti
dec
dec
loopne
xchg
jmp
jl
outsb
out
aaa
pushf
out
adc
push
bound
lods
lret
inc
lret
ljmp
call
jmp
jne
dec
in
dec
push
leave
xchg
das
and
nop
mov
loopne
sub
cmp
nop
cmp
cld
lcall
pop
nop
sti
xchg
jp
adc
pop
cmp
xor
mov
pop
imul
ljmp
fmuls
cmpsb
mov
xor
dec
dec
xor
push
fnsave
push
in
pushl
add
call
int3
das
push
jns
mov
fcmovb
mov
cli
insb
dec
pop
pop
ss
insb
test
cmp
lret
jae
inc
sub
mov
dec
mov
loop
mov
daa
pop
xacquire
int3
sbb
lods
xor
aaa
lcall
adcb
mov
push
inc
xchg
fidivl
add
jns
stc
aam
pop
rcrb
dec
fisttpl
push
mov
dec
and
icebp
das
xchg
add
push
subb
outsb
dec
or
lcall
decl
stos
sub
mov
jbe
into
cmpsl
pop
dec
loop
cmp
out
scas
out
xorb
incl
addps
push
lock
or
sbb
aas
out
jnp
add
mov
jecxz
mov
incl
je
jge
inc
mov
lcall
pop
popf
test
mov
loopne
mov
xlat
mov
daa
cmpsl
repz
and
lcall
and
cld
cmp
out
ds
or
mov
pop
pop
jo
in
lcall
jp
dec
out
cmc
inc
dec
mov
pusha
insb
insl
dec
inc
pop
dec
in
push
or
notb
stc
dec
mov
call
leave
or
lahf
std
add
dec
cmp
ljmp
mov
sarb
xor
sub
jmp
mov
outsb
pop
dec
mov
stc
fs
push
add
push
push
adc
aad
test
decl
je
cmpsb
pushf
loopne
adc
and
fstpl
jo
mov
adc
mov
call
push
arpl
and
repnz
repz
ds
dec
inc
cmova
push
out
jno
inc
iret
dec
inc
and
cmp
daa
test
addr16
lcall
int3
pop
pushl
rolb
dec
push
test
popa
aaa
inc
xorb
pop
int
jecxz
movw
fsubrp
movsl
mov
std
test
aas
nop
mov
xor
add
imul
xchg
je
movsl
sar
and
ljmp
mov
int3
addr16
movsb
rcr
into
jle
imul
incl
cmc
xchg
pop
xorl
lcall
cmp
jbe
ja
iret
cltd
hlt
daa
cmp
pusha
arpl
sub
pop
movswl
cmp
es
out
fs
jge
ficoml
pop
ror
mov
or
lcall
jg
jp
cmpsl
dec
mov
in
adc
and
cmpsb
lret
sahf
pop
loope
dec
std
decl
sub
stos
rcrl
jae
popa
notl
std
xor
and
pushl
int
inc
mov
mov
xchg
adc
sbb
iret
jmp
out
insl
or
push
push
mov
xchg
ret
and
push
inc
adc
push
outsb
lods
ljmp
enter
xchg
aas
jnp
or
aas
or
std
ljmp
in
pop
icebp
lds
lods
nop
test
jne
and
icebp
mov
je
cmp
jge
sbb
fnstsw
ret
nop
push
fnstsw
ds
cmp
lret
pop
aas
hlt
cmp
int3
loop
les
dec
cli
pop
nop
inc
gs
jg
mov
shrb
aam
pusha
pop
sub
and
call
dec
pusha
mov
loope
loop
jae
cmp
nop
lds
and
lcall
jecxz
jmp
sbbl
jecxz
mov
shrb
jae
push
pop
mov
incl
enter
lds
xor
cmp
dec
jecxz
das
aas
ret
dec
scas
mov
jnp
cwtl
adc
push
fstpl
test
cmpsb
movsl
or
imul
push
push
std
mov
lcall
sbb
xor
pop
xchg
and
std
ds
xchg
push
stc
xor
or
and
add
imul
ret
das
pop
call
lahf
sub
cmp
and
daa
xchg
inc
aas
mov
lahf
push
pop
dec
ljmp
cli
push
fisttpl
nop
idiv
inc
inc
sahf
fistpll
iret
adc
push
cwtl
push
jl
ds
mov
lock
aas
incl
cld
divl
cwtl
imul
out
xchg
aaa
in
movsb
mov
pushl
jno
xchg
mov
sub
cld
cli
shlb
inc
cmpsl
out
push
or
pop
enter
test
inc
adc
mov
push
mov
mov
dec
adc
push
adc
lea
popa
test
pop
movsl
jo
sbb
ljmp
lock
sbb
aaa
cmp
pop
jmp
pop
dec
pop
or
idivl
or
mov
mov
push
inc
pushl
pop
inc
mov
rorb
push
or
or
jg
test
adc
ljmp
pop
sbb
arpl
lret
decl
ficompl
jle
mov
xchg
mov
lock
fnsave
fidivrs
cmp
cmp
loop
call
jns
pop
call
sbb
mov
fucomi
jl
cmp
pop
sbb
sub
adc
push
cmc
adc
test
xor
gs
xchg
leave
mov
add
out
fidivrs
dec
push
cs
xor
mov
pushf
dec
jl
enter
lahf
les
jbe
lret
pushl
add
aaa
xor
jge
dec
into
jne
adc
fstps
loope
out
iret
xor
sub
adc
aam
sub
js
cmp
outsb
cmp
lahf
xchg
dec
inc
pop
insb
dec
cs
jbe
or
mov
fists
lods
mov
sar
mov
add
sbb
movsl
stc
sbb
push
movsb
das
adc
adc
xchg
filds
inc
idiv
mov
pop
pop
shlb
and
andl
pushl
xor
mov
cmpsl
dec
sub
pop
xchg
adc
out
incl
test
test
add
rcll
decl
cmp
xchg
jne
jmp
out
int3
movl
daa
sbb
mov
cmp
inc
adc
decl
aas
movsb
xchg
aaa
sbb
leave
into
mov
cmp
and
push
jp
and
std
and
popl
sti
dec
cli
insl
push
push
es
sbb
popf
mov
orl
mov
movups
mov
ja
and
and
ljmp
mov
lret
lock
dec
imul
jne
lahf
pop
icebp
mov
das
add
call
fwait
roll
ficomps
sub
lock
mov
add
insl
cmp
mov
sub
pop
jb
xchg
push
jmp
stos
in
pminub
xor
pop
jl
jmp
jg
pop
sbb
cmp
adc
inc
scas
dec
in
xchg
dec
int3
xor
into
lods
push
pop
mov
jmp
pop
mov
sbb
pop
or
jl
lcall
and
rol
mov
mov
stc
cli
out
add
call
pushf
std
add
das
jg
mov
cmp
xchg
ds
out
sub
inc
popf
sub
adcb
call
jle
test
push
movsl
jg
fdivrl
cmp
pushl
out
arpl
adc
daa
ljmp
scas
lret
jnp
inc
adc
cltd
pop
lret
aas
or
xor
adc
xchg
inc
repnz
push
fcmovne
fisubrs
cld
test
fwait
add
in
shrl
fmull
test
add
cli
and
aas
call
dec
out
xor
shr
mov
shrl
jmp
loop
add
gs
mov
divb
cltd
xor
fldl
or
jg
or
cli
stos
sub
in
push
repnz
aas
inc
ljmp
ss
adc
pop
push
add
mov
xor
lahf
pop
add
loope
and
rcrb
mov
test
mov
sar
jmp
dec
mov
inc
push
cmp
mov
add
mov
aad
push
xor
out
in
jg
cmp
popf
jae
pop
fsub
adc
test
out
jae
test
pushf
mov
aam
jns
pop
pop
mov
xor
decl
mov
and
popa
sbb
pushf
cwtl
and
ds
cmpsl
fcoml
aaa
push
sti
xchg
adc
incl
inc
es
mov
out
lds
shlb
push
inc
dec
mov
lods
or
clc
call
and
sub
add
ljmp
mov
int3
ljmp
mov
mov
add
cmc
xor
in
cmpsb
int
jmp
iret
out
sbb
pusha
popa
add
sbb
mov
js
js
out
adc
adc
arpl
mov
and
mov
mov
decl
out
pop
add
mov
loopne
jle
push
sbbb
or
test
mov
bound
outsl
fsts
dec
adc
bound
aas
pop
decl
fcompl
dec
test
or
pop
mov
inc
push
loopne
call
std
jg
inc
popf
xor
loopne
data16
aam
and
xchg
jmp
push
mov
pop
dec
jg
out
sbb
lea
subl
or
outsl
cmp
pop
xchg
push
dec
cmpsb
push
addr16
mov
jmp
pusha
icebp
mov
push
pushf
push
scas
icebp
xlat
subb
rcl
inc
adc
mov
sbb
and
sub
adc
iret
stc
decl
pop
lcall
pop
jae
add
shrb
jmp
sbb
pushf
popa
loope
pushf
adc
sub
sub
lcall
aad
jle
or
fs
subl
imul
mov
xchg
mov
aas
xchg
aas
push
mov
aad
mov
add
xlat
faddl
push
popa
repz
scas
sti
or
cld
mov
and
fcmove
adc
orl
dec
cmc
ljmp
mov
jae
mov
shrl
mov
ds
mov
jg
push
jmp
or
and
inc
mov
popf
mov
lcall
pop
jle
adc
lods
and
push
and
or
in
hlt
in
push
in
das
fwait
sub
incl
add
mov
xchg
push
jb
neg
incl
aam
sub
jp
sub
aas
xchg
out
mov
inc
scas
inc
das
ret
mov
bound
inc
gs
xchg
pop
mov
out
fcomip
lcall
or
pop
arpl
cli
outsl
addr16
push
adc
mov
call
leave
std
out
push
dec
lret
or
push
add
xor
clc
mov
iret
leave
loopne
jg
ret
push
inc
nop
jb
in
and
dec
mov
int3
jbe
fistps
incl
add
mov
insb
stos
sub
add
ror
cmp
mov
sub
and
popa
pop
fidivrs
xchg
iret
dec
cli
lcall
fidivrl
pop
inc
call
pop
nop
incl
les
cld
fmuls
imul
jl
icebp
adc
xlat
dec
js
ja
dec
test
filds
dec
sub
push
enter
aad
xchg
fwait
cmp
and
push
hlt
dec
pop
pop
sub
jg
dec
aaa
pop
jl
fstl
imul
lahf
es
loope
lcall
movsb
mov
pop
xlat
mov
test
arpl
ds
nop
out
sbbb
add
incl
mov
dec
cmp
shrl
dec
mov
shlb
cmpsb
mov
sub
cmc
push
lods
ds
dec
push
mov
sub
aaa
repz
fisttpl
filds
mov
sarb
fstl
cwtl
mov
pop
aas
decl
mov
insb
loop
test
or
test
movsl
and
cmc
outsb
mov
jnp
gs
cmp
mov
cs
mov
fiaddl
xchg
in
fistl
test
mov
jg
add
pop
cld
inc
mov
mov
mov
mov
lcall
stos
das
pop
dec
dec
push
clc
mov
paddq
cmc
cmp
incl
nop
adc
push
push
cmpsb
rcl
sbb
mov
push
cmp
cld
insl
mov
shll
sbb
popa
clc
sbb
adc
mov
sub
incl
aas
shl
lret
mov
in
and
fdivp
jg
jmp
test
cmpsb
cmp
fsubs
stc
jne
loope
push
in
xor
aam
popl
in
arpl
mov
mov
flds
lds
xchg
incl
das
hlt
movsb
outsl
xor
xchg
pop
incl
jle
mov
inc
test
jnp
ret
outsl
aas
dec
sub
cmp
jns
mov
add
push
ja
cltd
aam
jl
add
movsl
sub
repnz
pop
in
jg
out
inc
mov
or
in
mov
mov
aas
or
push
imul
mov
adc
adc
inc
or
cmp
call
mov
fwait
mov
ja
mov
pop
or
inc
jg
in
in
hlt
jl
addr16
das
or
data16
fldenv
mov
mov
call
lahf
pop
jmp
jb
mov
mov
push
inc
and
call
subl
je
adcl
pop
aaa
xchg
adc
inc
decl
jb
xor
inc
icebp
push
sbbl
fcomps
push
add
rolb
in
movsb
push
out
jae
xor
dec
imul
fwait
mov
pop
xchg
cld
decl
jb
xchg
sarb
dec
icebp
in
cld
xor
push
hlt
adc
stc
ljmp
and
rorl
enter
lahf
mov
pusha
movsb
xchg
bound
add
push
add
dec
int3
dec
push
fildll
xacquire
cmpsl
sub
daa
jl
fldenv
mov
ljmp
fwait
push
int
inc
sub
adc
js
sbb
js
dec
call
fists
jge
aas
andb
adc
sub
aas
xchg
lea
test
ret
mov
mov
xchg
inc
jno
pop
sbb
lock
das
mov
test
push
test
mov
add
call
mov
sbb
push
mov
adc
mov
test
or
outsb
test
stc
aam
test
inc
test
ljmp
imul
and
mov
xchg
popf
lds
call
jecxz
mov
std
stos
shl
ja
loope
aas
fs
movsl
cwtl
iret
jg
imul
sti
insl
cmp
fcomp
out
adc
mov
cmovb
aas
mov
ret
in
sti
sub
jl
mov
jmp
mov
in
insl
mov
and
jg
push
dec
repz
pop
stos
sub
sub
icebp
into
mov
xorl
mov
into
nop
call
scas
cmpsb
imul
and
sub
call
out
pop
jp
incl
or
popa
lret
push
iret
rcrb
stos
add
dec
cld
decl
adc
pusha
dec
and
iret
jnp
xchg
xor
inc
icebp
jg
mov
popf
push
repz
stos
or
aad
dec
das
call
sbb
jmp
pop
ja
je
and
adc
stc
sub
xor
jmp
cmp
shr
js
add
cmpsl
or
sti
or
mov
aas
or
out
mov
pop
add
mov
and
out
mov
lcall
or
jae
jmp
ljmp
mov
ja
rclb
sub
cmp
ss
pop
adc
sub
incl
pop
insb
or
dec
cwtl
mov
js
pop
xchg
add
pop
and
add
mov
pop
ds
adc
cld
jmp
sub
xchg
lds
call
cmc
sbb
test
mov
xor
push
mov
dec
lcall
adc
push
adc
lods
xchg
mov
push
and
mov
ret
mov
mov
pop
adc
jno
rorl
xrelease
adc
push
test
insb
incl
in
dec
push
lea
mov
mov
dec
popf
cmpsl
inc
add
and
mov
loopne
sbb
popa
push
add
call
ret
ss
arpl
push
cmc
out
jg
movntps
adc
jge
sahf
shl
shlb
or
xchg
mov
fsts
cmp
pop
push
jb
jmp
hlt
loopne
jl
push
and
stos
fists
lea
mov
cmp
out
test
repz
mov
mov
mov
xchg
push
mov
fisubrs
stc
enter
jmp
bt
or
adc
out
add
jmp
xor
push
inc
es
outsl
xrelease
iret
jg
add
lock
outsb
xchg
adc
adc
sub
adcl
inc
mov
mov
adc
lea
test
push
testb
shll
inc
jne
xchg
cmpsl
sub
add
inc
enter
mov
adc
das
aas
adc
xor
in
repnz
adc
pop
rcrb
setg
adc
movsl
jb
outsb
xchg
or
sub
xor
or
sbb
jp
sbb
aas
ljmp
cli
lcall
jp
dec
clc
call
cmpsb
je
adc
mov
fistpl
inc
imul
aam
ss
inc
add
jbe
cld
push
fstl
pop
lcall
sub
pmullw
std
mov
cmpb
and
orb
xchg
movups
lods
mov
stos
loopne
stc
jmp
addr16
call
aas
lock
clc
sbbl
mov
adc
add
jg
incl
nop
aaa
lods
stos
aad
aam
add
sbb
jecxz
je
fcomps
dec
jne
bsr
inc
in
clc
mov
push
push
pop
sbb
pop
or
cmc
outsb
cmp
inc
xor
fbld
push
jno
jp
ret
outsb
or
dec
decb
push
mov
ljmp
repz
xchg
fwait
mov
cmc
push
in
in
fbld
xor
or
nopl
xchg
sub
decl
and
out
adc
jg
aas
xchg
inc
pushf
sti
inc
out
push
enter
push
dec
loope
ret
aam
sbb
jmp
lret
adc
cld
inc
cmc
out
fsubrl
add
bound
das
xadd
jg
repz
xchg
roll
jg
inc
push
fbstp
lret
mov
in
jecxz
shll
adc
mov
fbld
adc
sub
pop
xchg
mov
sahf
into
add
or
mov
jecxz
push
mov
pop
or
lods
inc
xor
out
add
out
pop
decl
jmp
inc
addl
push
pop
cld
sub
xchg
int
pop
stos
cwtl
out
call
sar
movsl
decb
in
add
popf
js
mov
dec
jo
call
push
sbb
pusha
call
sub
adc
dec
seto
aas
xor
dec
lock
xor
fmull
movsl
orl
inc
sub
xor
cmp
push
push
out
pop
mov
ss
pop
mov
mov
mov
dec
in
dec
fistps
aas
xchg
outsl
mov
xchg
aam
iret
pop
and
movsb
jno
pop
fs
sbb
js
mov
aam
xor
shrl
or
adc
cli
decl
enter
loop
jo
push
out
push
in
inc
adcl
test
add
lahf
adc
pop
or
lahf
mov
sub
leave
sarb
call
sbb
fcoms
sbb
or
sub
bound
pop
adc
cmpsb
pop
xchg
push
push
cwtl
inc
shrb
jmp
stc
outsl
icebp
or
lock
daa
addr16
stos
inc
int
sub
and
push
in
xor
out
xchg
jge
das
inc
test
and
mov
fisttps
adc
jmp
push
sbb
push
adc
xor
add
adc
add
or
inc
jmp
das
popa
pop
and
call
movhps
xchg
push
cli
sub
mov
sbb
or
call
or
push
pushf
ljmp
pop
or
jg
xor
mov
pop
outsb
ret
decl
gs
pop
pop
sahf
outsl
repz
xlat
loope
xchg
adc
jmp
incl
movzbl
mov
dec
cmpsl
xor
jae
xor
mov
pop
cli
decl
add
or
fadd
or
add
jmp
in
push
xor
test
movsb
and
jg
incl
cwtl
dec
shl
push
pop
lcall
adc
push
inc
xchg
scas
xchg
and
popa
test
setg
mov
sub
push
unpckhps
jg
jbe
sub
pop
push
xchg
cmp
out
inc
test
sbb
out
test
adc
sub
mov
or
cmp
add
fdivl
lea
outsl
outsl
testl
call
mov
loope
ljmp
call
jnp
in
stos
xchg
rol
xchg
dec
add
daa
or
mov
fwait
das
cmpsl
push
sbb
jmp
dec
mov
mov
jne
xor
sub
loopne
mov
repz
push
mov
das
incl
inc
setge
ret
test
test
fnsave
dec
and
ud0
test
je
push
lahf
dec
and
jbe
xchg
xchg
test
pop
movsl
jnp
add
flds
jnp
scas
pop
shl
popf
mov
pop
or
jp
popf
shlb
lcall
out
std
fildll
or
loop
dec
or
xchg
std
jmp
mov
push
hlt
push
ret
jecxz
scas
sub
dec
jge
pushl
push
in
aam
or
cmp
popa
outsl
mov
cli
mov
xchg
fistpll
dec
popa
aaa
xor
cmp
fwait
add
cmp
mov
vpshlb
lahf
or
and
lcall
adc
pop
loopne
sti
add
xchg
mov
test
sbb
sbb
rcll
fwait
mov
incl
test
adc
arpl
sbb
lods
jmp
and
push
mov
addr16
add
hlt
leave
cmpsl
or
flds
scas
xor
pop
lods
or
sub
push
jge
cmp
fstl
sbb
push
test
repz
les
outsl
push
fistpll
jecxz
adc
pop
lea
sub
lahf
rorb
xchg
xlat
and
ds
xor
xor
in
pop
fwait
imul
call
add
ret
ret
pop
sbb
cmp
sub
pop
lret
sti
jno
mov
sub
int3
aas
adc
sub
or
sbb
pop
pop
jg
dec
sahf
inc
dec
dec
dec
mov
aad
fiadds
loopne
negl
push
and
xorb
out
mov
fimuls
shr
in
in
cmp
ljmp
or
mov
test
mov
stos
sti
fdivrs
xor
or
adc
ljmp
mov
mov
pop
jb
xchg
mov
bound
sub
pushl
fcoml
sti
subb
orb
sub
and
xor
popf
sti
mov
nop
mov
mov
in
sbb
add
repnz
stos
nop
mov
inc
add
xchg
out
push
adc
inc
out
call
fadds
cmp
and
jb
inc
inc
adc
sti
insl
shrl
dec
std
pop
test
and
or
cmpsb
mov
pop
sbb
pop
sub
nop
int3
es
lock
in
into
ror
and
sub
test
xchg
jno
xchg
mov
cmp
es
inc
fxch
dec
cmovns
xor
mov
incl
or
inc
or
mov
sub
or
jmp
push
sbb
cs
loope
stc
add
xor
lahf
push
icebp
out
or
iret
dec
push
ss
dec
incl
sbb
add
stc
add
lock
adc
mov
add
dec
in
jno
ss
fchs
push
mov
sub
jnp
fisubs
incl
xor
nop
xchg
xor
xchg
in
fucomi
popf
pop
adc
jo
ljmp
movsb
xor
gs
mov
add
adc
xor
pop
scas
lahf
ljmp
or
loop
jmp
imul
dec
std
decl
dec
jnp
or
xchg
mov
adc
sbbb
mov
mov
jns
dec
leave
and
lea
outsl
jg
add
rcll
mov
mov
cmp
inc
dec
mov
sbb
xchg
in
push
lds
dec
out
call
mov
scas
leave
push
pushf
jge
adc
call
hlt
sub
mov
outsl
stos
lods
or
int
mov
test
popa
sar
ljmp
into
lret
or
add
dec
sub
mov
lea
pop
adc
cmpsl
fstpt
ljmp
push
ficomps
pop
mov
add
out
or
dec
lcall
add
testl
call
cmpsb
out
mov
outsb
push
addr16
std
or
cmp
xor
aas
aas
pop
xchg
pop
jp
dec
sub
sub
pop
je
jno
dec
and
jmp
xchg
mov
xchg
lods
lahf
and
push
cmp
lods
out
pop
push
jle
rcrl
jecxz
xchg
lock
decl
flds
dec
sub
dec
sub
mov
jg
aad
test
adc
aas
movnti
push
shlb
or
outsb
dec
or
icebp
outsb
insb
pushl
roll
int3
and
jb
lahf
dec
mov
xchg
repz
enter
add
or
pop
pop
inc
ss
sbb
pop
ljmp
adc
xchg
repnz
fst
mov
insb
adc
cmp
and
decl
leave
dec
cwtl
jnp
in
pop
popa
mov
pop
out
cld
decl
cmpsl
std
fisubrl
fildll
and
sar
push
and
and
orl
adc
pop
test
add
sub
incl
ss
and
push
push
dec
leave
daa
jecxz
cmp
incl
seta
inc
push
pop
testb
sub
out
ljmp
adc
cltd
mov
push
ja
and
adc
xchg
push
pop
outsl
push
icebp
lcall
andb
imul
aas
and
push
mov
pop
nop
fs
shll
shrb
iret
pop
incl
test
pop
cs
iret
cmpsb
sbb
pop
adc
push
pop
roll
fs
ljmp
int
add
push
push
test
stos
imul
pop
push
adc
ljmp
outsb
mov
mov
mov
in
test
mov
adc
add
les
add
ret
loop
dec
inc
call
pop
call
aam
movl
inc
mov
xchg
aad
insl
sar
es
add
jmp
mov
adc
adc
mov
pop
xor
mov
mov
test
mov
mov
mov
sub
xchg
inc
out
popw
movsb
or
les
xor
mov
insl
mov
dec
loope
pop
sarl
push
mov
lods
in
scas
bound
test
aad
call
or
orl
orb
dec
xor
pop
and
pushl
jmp
xchg
and
mov
jge
adc
fistpll
incl
mov
out
and
inc
into
mov
clc
lods
and
pop
mov
dec
sbb
sahf
call
pushf
ret
mov
ds
dec
lea
rcr
dec
jbe
sub
test
push
jbe
cmp
lcall
shl
inc
mov
jp
inc
mov
mov
push
push
sub
mov
push
mov
inc
dec
push
aam
add
ficoms
fstpl
add
dec
pop
push
mov
fcmove
fstl
incl
das
les
cmpsb
mov
imull
outsl
push
jp
sbb
int3
push
insl
xchg
je
jecxz
jo
jmp
rcrb
sub
mov
adc
mov
iret
adc
mov
call
insb
loope
cmpsb
inc
add
mov
sub
jae
addr16
add
add
ljmp
cmp
in
mov
xchg
cmp
icebp
mov
inc
insl
push
fwait
in
test
decl
out
test
and
push
out
data16
cmp
jp
inc
in
inc
or
adc
pop
mov
jle
orb
rep
mov
jns
into
lcall
sbb
inc
rclb
mov
lcall
scas
les
xor
and
decl
lods
cmp
push
addr16
mov
xchg
cwtl
mov
ficomps
pop
xorb
cmp
decl
inc
rorb
inc
mov
test
fmull
int
subb
decl
pop
mov
sti
cld
add
push
out
inc
xchg
or
icebp
scas
adc
je
lahf
fistpll
sbb
filds
leave
dec
push
dec
xor
enter
sahf
pusha
dec
leave
xchg
call
dec
add
mov
sbb
cmp
fmulp
fmul
sbb
dec
lods
pushl
enter
out
xor
cmpsb
mov
sub
les
xchg
bsr
pop
and
ds
jp
ja
outsb
cltd
jno
test
test
pop
cmpsl
mov
sbb
xchg
movsl
push
inc
adc
jne
incl
xlat
cltd
fucom
scas
testb
fisttpl
fs
and
or
pop
pop
wbinvd
cmp
pop
incl
xchg
test
jp
enter
fwait
jns
push
mov
mov
mov
aas
fldenv
stc
cmp
cmpsl
loop
arpl
xchg
cmpl
sbb
in
icebp
ret
fidivrs
jmp
and
cmp
sbb
push
in
repnz
add
mov
mov
pop
jb
ljmp
mov
and
push
pop
adc
les
je
sub
mov
in
xor
decl
push
cmp
mov
and
arpl
out
inc
shll
xor
sub
cld
daa
inc
lcall
mov
popa
sub
pop
add
xchg
push
bound
int3
repz
adc
es
push
mov
cmp
jae
add
popa
popa
dec
pushf
loop
jb
pop
stos
cmp
jo
xor
mov
jmp
cmp
loop
call
inc
push
push
shr
pusha
sub
jp
xor
inc
fdivr
decl
jbe
out
and
jmp
aaa
daa
adc
sbb
stos
in
add
sbb
jmp
mov
mov
mov
pop
sbb
push
loope
mov
shlb
inc
test
call
add
jge
imul
or
sub
xchg
mov
mov
jmp
mov
mov
lret
cmpsb
adc
sub
lahf
or
subb
call
dec
cmp
jp
cltd
test
leave
mov
inc
and
jl
icebp
dec
aaa
or
decl
add
pop
int
cmc
mov
xor
stos
dec
lcall
jmp
je
sbb
dec
dec
jmp
jb
pop
push
jge
cltd
out
adc
in
adc
dec
test
pop
pop
lretw
in
mov
cltd
fimull
scas
or
or
lcall
mov
inc
mov
dec
das
inc
mov
aas
imul
jns
lcall
xchg
adc
pusha
xorl
das
fstp
inc
stc
adc
ret
jmp
mov
fnsave
shlb
aas
push
cli
dec
inc
mov
fwait
mov
lcall
stc
jo
mov
sbb
stos
fisubs
lahf
pop
lret
xlat
add
inc
mov
adc
mov
ljmp
cmp
sbb
ljmp
push
mov
loop
jae
cmp
mov
ljmp
push
mov
jmp
test
mov
sbb
roll
mov
or
ljmp
lds
loop
pop
mov
lret
clc
push
sub
xor
pushf
adcl
lcall
cmc
inc
imul
fcmovnu
int
pop
dec
leave
pop
out
rorl
out
fs
jl
outsl
addb
imul
sub
cmp
pop
xlat
adc
jno
cli
push
sub
insb
out
push
sarb
jl
push
cmpsl
repz
out
bound
aam
out
std
sbb
loope
xchg
jl
fdivl
pop
push
xchg
shrl
xor
mov
sub
cmp
mov
jmp
sahf
hlt
pop
sub
lcall
add
xchg
jmp
rcr
fs
decl
fldcw
mov
das
js
and
cmpsl
mov
aaa
pop
mov
push
sarb
inc
mov
xor
popa
lcall
pop
xor
cmp
ljmp
fs
inc
mov
mov
hlt
into
andb
dec
out
ds
lods
int
js
cmp
jae
aaa
mov
jp
cli
mov
imul
cmpsl
mov
pusha
decl
enter
or
lcall
pop
xchg
xchg
mov
push
fwait
add
mov
aaa
out
cltd
jbe
xchg
mov
loope
popa
ljmp
sbb
jmp
not
xchg
ret
jmp
lret
mov
adc
pop
lcall
ljmp
and
mov
jns
mov
lret
mov
scas
mov
inc
push
cmp
push
xchg
and
jmp
ret
jg
mov
repnz
or
icebp
stos
dec
es
nop
in
jmp
sbb
jl
pop
jle
dec
int3
cmp
sbbb
iret
mov
inc
xchg
xchg
pop
sahf
xor
sar
jmp
xchg
insb
push
inc
xor
ljmp
mov
addl
mov
xchg
xor
sti
dec
nop
or
adc
lret
xorl
ljmp
call
popf
xor
mov
add
adc
rcrb
test
shll
ret
pop
test
call
fwait
dec
pop
test
bound
inc
xor
jle
or
in
add
mov
mov
mov
pushl
xor
or
jnp
dec
jns
or
loop
aad
inc
call
fdecstp
lods
sub
add
fstps
and
pusha
subl
iret
lcall
fstps
jp
jp
out
cmp
ds
outsb
inc
mov
xchg
pop
ss
pop
leave
xor
fbstp
sbb
pop
mov
flds
cmp
ja
icebp
frndint
out
mov
cmpsb
ljmp
xchg
sahf
pop
mov
mov
push
loop
xlat
xchg
xchg
ret
adc
or
incl
push
push
test
xchg
imul
popf
test
in
inc
popa
add
es
test
lds
outsl
xchg
mov
sub
repnz
movsl
sbb
lock
in
arpl
push
mov
sbb
pop
push
add
inc
lahf
lret
in
pop
fisttps
cmp
mov
pop
out
lcall
and
xor
sbb
jno
insb
es
sub
pop
out
frstor
add
push
aam
test
decl
aam
rcrl
adc
jo
mov
add
or
dec
cld
inc
pop
sub
incl
push
stos
shrb
int3
add
les
enter
inc
sub
jne
rclb
lock
fcoms
add
repnz
orl
xchg
repnz
ljmp
add
mov
jmp
test
scas
push
or
xchg
leave
lods
cmp
xchg
lods
push
stos
call
stos
xchg
adc
sahf
mov
cmc
and
ss
inc
xor
imul
call
sub
in
xchg
pop
scas
and
inc
rcrb
addr16
test
sub
dec
jg
aaa
cmp
nop
mov
cwtl
ljmp
arpl
mov
ss
movsb
mov
movsb
ljmp
adc
jo
jmp
ss
scas
jne
fmuls
jle
mov
cmc
test
or
fimuls
rorb
sub
jnp
mov
dec
push
das
or
rcll
xlat
lret
push
and
ljmp
stos
cltd
xchg
add
xchg
mov
adc
cmp
or
aam
repz
sti
lds
sbb
out
sbb
push
aam
cmp
xchg
fstpt
loopne
je
mov
stos
repz
sub
es
jbe
shl
xchg
xor
ljmp
roll
std
cmp
lcall
inc
xchg
and
push
mov
add
jmp
cmc
popa
popf
push
adc
ljmp
mov
xchg
call
inc
ljmp
xor
call
jb
fisttps
popf
mov
dec
ds
stos
push
or
lods
lea
xchg
ljmp
sub
xor
daa
popf
movsb
stos
out
jge
pop
pop
jmp
cmc
psubq
xchg
push
dec
cmp
call
and
push
dec
xchg
repnz
ljmp
ret
xchg
mov
push
adc
inc
mov
mov
inc
pop
or
sbb
ljmp
lcall
add
int3
push
cmp
xor
lock
or
pop
mov
lea
mov
sbb
inc
adc
imul
insl
pop
cmp
lds
jp
daa
cmpsb
fcompl
shlb
notb
mov
mov
fsub
jl
in
into
push
gs
jl
dec
xor
inc
pop
xchg
jmp
ds
or
add
addl
ljmp
pusha
leave
push
shrl
sbb
adc
lods
nop
push
movsb
jg
stos
lea
in
xchg
es
dec
lcall
sysret
xor
adc
aaa
mov
rclb
dec
pop
jl
ljmp
inc
jne
inc
imull
cmpsl
test
arpl
fsubrs
mov
sbb
mov
mov
bound
sub
insl
js
in
dec
mov
mov
idivb
in
mov
and
repz
cmp
aas
mov
lds
add
mov
insl
into
mov
dec
jmp
push
ret
and
jecxz
data16
mov
xchg
lret
enter
incl
test
mov
xchg
call
dec
je
out
sbb
xchg
sub
call
rcl
add
enter
repnz
cmp
jns
in
push
icebp
cmp
push
add
movsl
push
jge
cmp
fldl2e
xchg
dec
adc
out
lcall
ljmp
insb
mov
pop
iret
repnz
mov
test
das
movb
mov
pop
cld
lret
inc
out
fwait
xchg
imul
ja
push
push
sbb
mov
adc
jmp
or
in
pop
es
adc
daa
fcomp
mov
mov
xorb
orl
outsb
into
ljmp
and
rdmsr
ljmp
mov
push
sbb
push
cmp
mov
jmp
jmp
out
push
mov
sub
ret
scas
mov
fcmovnu
outsl
jp
sbbb
jmp
jno
jp
push
and
test
jg
sub
in
bound
sub
jl
pop
call
mov
mov
push
cmpsb
and
testb
pop
mov
xor
jle
loop
adc
push
push
or
test
pop
jne
adc
orl
xchg
out
xchg
rcr
incl
xchg
pop
and
adc
xchg
mov
stc
xchg
dec
inc
jl
stos
test
or
xor
iret
push
or
cmpsl
data16
push
jae
das
xchg
dec
lahf
cwtl
jecxz
sub
and
cs
or
incl
cmp
pop
add
inc
xchg
jl
nop
xor
sub
or
lds
nop
push
fdiv
stc
filds
mov
push
dec
jae
fmul
enter
popf
pop
lret
sub
fs
lcall
fs
cmp
push
pushf
mov
lods
iret
hlt
orl
cmp
in
ljmp
fsubrl
sbb
pop
pop
aam
and
pushl
lret
test
incl
mov
loope
sarb
jbe
popf
cmp
adc
call
out
jno
test
push
sub
fdivs
insl
js
fwait
lret
push
xchg
enter
out
jmp
testb
or
pushf
mov
mov
and
jle
mov
ljmp
punpckldq
jo
mov
pop
cmp
pop
inc
inc
xlat
or
xor
lcall
stos
in
dec
fs
cmpsl
andl
adc
arpl
cmpb
decl
jno
jecxz
bound
inc
push
jb
pop
or
nop
cwtl
aad
add
mov
lcall
mov
add
mov
lret
sbb
jb
add
cli
out
mov
pushl
cmp
cltd
mov
mov
scas
xchg
fwait
icebp
nop
jb
lahf
cmpsb
das
fsubrs
jmp
xchg
outsb
popa
mov
call
aas
loope
adc
inc
js
jns
mov
dec
jbe
push
push
push
pop
sbb
ljmp
fdivrp
adc
repz
cwtl
add
cmp
fcompl
or
jp
fsubs
xchg
into
xor
pop
cmp
jo,pt
shr
jmp
and
jns
sub
insb
dec
jb
cmpb
sub
mov
pop
imul
incl
mov
and
cmp
mov
dec
cmp
adc
dec
imul
lcall
cmpsl
fdivl
jb
pushl
pop
xor
jne
out
insl
or
mov
pop
inc
popa
test
and
adc
mov
lret
xlat
dec
pop
mov
call
daa
or
pop
pop
ljmp
or
mov
std
nop
inc
sub
dec
stos
das
xor
lods
jns
push
jecxz
aad
stc
std
sub
shrb
cmp
andl
les
push
loope
loope
xor
push
popl
jg
mov
push
dec
aam
pop
icebp
or
in
sbb
scas
lret
mov
mov
cld
pop
add
cmp
pusha
test
jmp
cmpb
repnz
in
cli
xor
movsl
adc
sbb
cmc
cmpsl
cmp
push
decl
aas
dec
xor
pop
dec
mov
push
or
xchg
cmpsl
or
cmpsb
jecxz
jmp
iret
adc
clc
hlt
aad
sub
pop
aam
test
stc
push
push
push
mov
push
push
add
call
or
push
iret
mov
and
cmp
push
testl
out
adc
cli
add
mov
mov
arpl
jmp
mov
mov
mov
mov
stc
movsb
adc
scas
or
dec
add
jmp
sbb
push
stc
pop
test
and
or
testl
ljmp
and
mov
push
sub
test
mov
test
ljmp
ret
jbe
ss
test
mov
in
mov
jl
push
stos
out
lret
mov
jae
add
xchg
jmp
cli
lret
push
jne
or
lahf
out
inc
rcrb
xchg
insb
std
mov
jns
or
call
fisubs
xchg
mov
mov
sbb
cmp
sub
add
cmp
push
incl
pop
lods
pop
push
inc
mov
les
outsb
xchg
inc
and
pop
pop
xorl
xor
ljmp
arpl
add
jp
movsb
sub
cmp
popa
fldcw
adcb
mov
je
mov
decl
bound
fistps
dec
lahf
pop
loopne
and
gs
xor
sub
lcall
add
add
stos
outsb
aas
jae
and
cld
pop
pop
fildll
popa
into
sbb
rcll
jmp
xchg
add
add
add
sub
inc
inc
repnz
add
push
mov
ljmp
sub
fldl
fsts
or
notl
fcompl
sub
xor
jmp
out
popa
test
es
jo
addr16
ja
pusha
aam
mov
rcrb
mov
pop
ljmp
jmp
jbe
out
std
xchg
push
pop
call
std
scas
out
fs
fcomps
test
arpl
in
pushl
rorb
ret
or
loopne
push
mov
ror
js
aad
inc
or
add
cmp
inc
mov
int
inc
and
jg
cmp
testb
icebp
mov
push
and
cmp
aas
mov
jmp
jne
js
outsl
inc
bound
lret
jge
push
and
mov
xlat
sub
clc
jbe
jne
imul
ljmp
mul
lock
jnp
jge
dec
repz
stc
xorl
imul
call
pop
pushf
pop
lods
imul
xor
mov
cmp
fcomip
add
sbb
jl
dec
xchg
clc
scas
rcrb
mov
mov
pop
mov
xchg
pushf
jne
cmp
lods
sub
pusha
sbb
inc
ret
iret
mov
adc
lret
cmpb
nop
fwait
out
push
cmp
cmpsl
pop
ret
call
gs
and
je
aas
pop
and
xor
inc
scas
mov
ljmp
idivl
lock
pop
out
cmp
pop
les
hlt
outsl
mov
mov
or
mov
lcall
add
jae
out
les
test
fs
call
fcomps
adc
jle
jmp
mov
adc
pushf
sub
in
out
fs
xor
ret
icebp
jmp
inc
es
cmpsb
jge
xor
xchg
xor
into
xchg
add
inc
fwait
roll
and
push
pop
cltd
sbb
testw
adc
pop
adc
mov
or
ret
stos
and
jne
out
push
fsubrp
xchg
add
in
into
fsubl
xchg
jbe
jbe
call
fs
aas
lds
aaa
jae
mov
js
adc
mov
jl
push
jmp
sub
pop
je
loopne
jb
in
hlt
dec
adc
outsl
fiaddl
adc
ljmp
cld
push
out
lock
pusha
and
xor
outsl
jp
jmp
lcall
sub
inc
sar
pop
dec
sbb
jae
dec
pushf
mov
pop
aaa
mov
add
cmp
mov
pushl
add
insb
sbbb
xlat
or
push
add
ljmp
or
insb
mov
paddw
scas
xchg
cmp
mov
xchg
popa
stc
push
jmp
or
insl
cli
fnsave
inc
outsb
clc
popf
aad
jp
out
cmpsb
and
sub
ljmp
ret
jnp
adc
daa
cmc
in
test
andb
gs
add
jge
ret
cmp
fistpll
push
adc
mov
enter
mov
jne
stc
mov
ret
dec
add
lcall
and
cld
xor
or
and
outsl
aaa
jmp
fdivs
lahf
pop
lret
cld
decl
popa
shrl
sbb
sub
out
shrl
clc
je
cltd
jmp
sbb
or
stos
add
decl
or
iret
popf
push
gs
scas
out
pop
sub
xor
insb
fisttpl
pushl
pop
mov
cmc
in
or
fidivrl
mov
rcrb
call
jnp
or
xchg
sbb
and
sbb
xor
push
xchg
inc
lcall
dec
sbb
mov
cmp
ret
or
out
pop
inc
sbb
mov
call
mov
mov
loope
and
out
in
push
dec
int
xor
cmp
call
fcmovbe
push
hlt
push
pop
lret
lret
push
mov
lock
and
fs
mov
jmp
pusha
mov
stc
icebp
jl
dec
xchg
cmp
xor
xchg
fdivrs
mov
stos
xor
call
jg
inc
and
cs
mov
fbstp
cmpsb
mov
loope
call
jae
movsl
popf
cs
mov
jmp
bound
fildll
cmpsb
incl
dec
inc
popf
scas
push
out
shlw
pushf
cmc
imul
jg
and
pop
call
pop
push
repnz
jl
int3
daa
push
mov
pop
or
cmpsb
pop
sub
cmp
jge
lock
jo
pushl
push
lahf
pop
dec
dec
pop
ljmp
mov
pop
inc
test
rcll
outsb
mov
decl
mov
sti
push
test
in
inc
test
jns
pop
dec
out
pop
outsb
jmp
movl
mov
cwtl
cltd
mov
in
fldenv
daa
add
jp
fwait
inc
jae
pop
lea
xchg
push
xor
mov
out
lds
shll
addb
fimull
mov
ljmp
pushl
adc
mov
dec
xlat
dec
test
dec
dec
and
and
jns
incl
les
loopne
push
sub
inc
xor
pop
push
sub
mov
jne
push
lret
clc
out
fisttps
push
inc
xchg
mov
sbb
adcl
scas
mov
jp
jns
jmp
ljmp
jg
divb
outsl
push
popf
repz
test
sub
or
movsl
mov
aad
pop
rcrl
iret
jno
fildll
add
mov
out
icebp
mov
jne
std
cmp
out
inc
push
pop
cmp
dec
cmp
fidivrl
push
fstl
sub
and
or
sub
incl
mov
pop
push
int
hlt
test
movl
inc
cwtl
shlb
call
outsl
aad
lret
lcall
sarb
jg
push
xor
xor
std
jle
call
dec
lds
lods
push
dec
jo
data16
jg
adc
xor
pushl
test
push
mov
cmp
ss
fstps
call
jnp
sti
aaa
lret
cmp
mov
jp
pop
addr16
jae
add
shll
outsl
fsts
mov
cmpsl
std
mov
add
fidivs
icebp
fucom
and
ss
hlt
rorl
loop
adc
ljmp
or
movsb
ljmp
test
mov
imul
pop
jmp
sub
repz
insl
notl
lea
mov
stos
rolb
in
gs
cs
xchg
xlat
scas
xchg
jmp
inc
dec
in
pop
pushf
movsl
xchg
call
aas
pop
or
sub
adc
test
lcall
pop
or
cmp
scas
decl
push
or
xor
out
loopne
ljmp
add
pop
mov
jae
push
cmp
sbb
adc
jge
fisttpll
jmp
incl
lcall
dec
fst
jbe
mov
xchg
pop
rolb
xchg
stos
and
mov
jmp
ljmp
rcr
dec
testl
roll
pop
aas
cmp
adc
jmp
and
out
aad
inc
sub
mov
leave
into
jle
mov
inc
mov
jb
pop
cmp
or
add
mov
sub
in
jbe
test
jo
sub
sahf
je
mov
sbb
data16
mull
ja
dec
in
add
cmp
es
cmp
decl
call
and
nop
sub
xchg
outsl
in
push
ja
xchg
call
cmp
out
push
push
xor
cmovbe
or
pop
aas
cmp
decl
and
dec
pop
shrl
push
daa
lock
mov
xchg
popf
fisttpl
stos
mov
fdivrs
loopne
and
call
jl
add
pop
adc
dec
mov
dec
loopne
pop
inc
jae
aaa
sub
sar
pushl
ds
xchg
fistps
ret
shl
test
imul
in
mov
int
ja
mov
lods
and
incl
pop
push
jo
test
pop
xchg
cmp
sarl
adc
icebp
call
dec
cmp
cmp
mov
add
sub
mov
inc
jge
sub
and
or
arpl
mov
out
mov
popa
fldcw
jmp
jp
dec
mov
and
dec
xchg
jbe
popf
and
fcomps
mov
adc
cmp
add
je
pop
inc
sti
sub
jecxz
mov
jp
or
lcall
inc
mov
push
fdivrl
dec
pop
mov
sub
cs
jno
add
pop
mov
call
test
addr16
adc
jae
out
scas
xchg
or
adc
mov
add
inc
cmp
aaa
iret
pop
jno
daa
jo
call
call
pop
add
or
cmovl
cmp
push
rcl
pop
jecxz
iret
mov
mov
mov
dec
fisttpll
cmp
lcall
and
das
add
je
jnp
sbb
mov
pushf
sbb
pop
sbb
insl
pushl
sub
jp
lods
fs
cmp
mov
scas
or
outsl
mov
xor
test
jno
pushl
fwait
xchg
ljmp
addr16
fildl
outsl
mov
cltd
loop
mov
shrl
call
arpl
push
gs
push
or
lcall
fcoml
data16
decl
lock
inc
mov
xchg
or
imul
jb
xchg
call
js
in
cltd
enter
fwait
addr16
lret
stos
inc
xchg
push
and
lods
jns
pop
rorl
adc
xchg
inc
and
mov
mov
pop
shlb
test
mov
mov
enter
iret
insb
dec
lahf
popf
fisttpl
cltd
add
scas
mov
cmp
pusha
out
and
adc
jne
and
xor
in
sahf
push
call
out
fcoml
sbb
add
stos
ret
adc
mov
add
fwait
jecxz
je
hlt
lcall
cmovno
xlat
test
scas
cmpsb
outsl
jbe
xchg
test
jnp
arpl
push
mov
outsl
dec
movsl
sub
add
pushl
push
dec
or
call
adc
shrb
dec
in
testb
jae
sbb
jmp
sub
xor
xlat
inc
jb
cmpsb
orb
adc
fcmovne
outsb
jo
dec
push
jp
mov
ret
out
faddp
mull
push
mov
xchg
lods
cmpsl
ss
sti
adc
dec
ss
imul
lcall
sbb
arpl
xchg
enter
es
xchg
mul
fadds
cli
dec
fistpl
int3
fcmovnbe
jne
adc
mov
ljmp
repz
push
cld
movsl
mov
aad
cmp
cwtl
mov
fsubr
xchg
or
iret
orl
xor
sub
lcall
sbb
jno
inc
sbb
in
xlat
test
mov
dec
lret
in
lret
lcall
decl
mov
xchg
daa
mov
pop
mov
and
inc
push
lahf
push
adc
data16
lcall
inc
into
fcmovne
mov
enter
leave
daa
divl
xor
jle
mov
mov
ljmp
cmp
xchg
inc
adc
mov
mov
dec
inc
test
call
xchg
shr
push
jmp
call
jp
fisttpl
cld
repnz
cmpsl
movsl
daa
sbb
lahf
inc
sub
adc
mov
mov
add
jp
fstl
scas
dec
addr16
imul
sub
sub
iret
shlb
ds
jmp
cmc
push
ljmp
and
xchg
aam
pop
sahf
mov
stc
ret
mov
incl
popl
push
sbb
gs
cli
outsl
xor
mov
andb
ja
dec
repnz
dec
addr16
mov
insb
lea
cmp
fbstp
jg
xorb
hlt
mov
incl
shl
and
movsb
test
gs
roll
cmp
sbb
mov
pushl
mov
xchg
dec
mov
cmc
popf
sbb
mov
daa
lret
scas
push
cltd
int3
xor
shlb
decl
enter
mov
xchg
ss
mov
push
or
and
xor
aas
imul
out
cltd
dec
in
adc
push
mov
and
aaa
and
notl
xorl
mov
cltd
mov
jle
leave
sub
mov
fxch
loopne
or
cltd
cmp
es
mov
in
or
test
loope
pushl
sarl
mov
jno
add
jno
push
andl
push
out
mov
push
orl
loopne
daa
imul
rorb
and
incl
movsb
jae
enter
jge
sub
jo
fdivrs
xchg
clc
sub
rol
adc
jmp
out
push
sbb
cmpsl
int3
or
xchg
mov
lret
jmp
insb
loope
sbb
test
mov
stc
ret
push
in
clc
insb
stos
push
lret
sbb
icebp
jecxz
ljmp
sbb
outsl
sbb
pop
out
push
adc
stos
push
lret
test
xchg
pop
jmp
mov
mov
test
cs
fmull
cmp
gs
jbe
call
mov
mov
add
repz
insb
out
scas
jno
mov
in
push
call
mov
nop
jne
clc
ret
mov
pop
jge
sbb
and
adc
xchg
pop
shrl
imul
dec
cmp
and
inc
mov
jl
smsw
jno
dec
adc
call
fsubl
add
or
jns
fs
loopne
dec
jmp
xor
lahf
inc
int
ljmp
call
jl
dec
test
clc
add
mov
ret
mov
cmpsb
sub
inc
loop
and
mov
push
dec
lahf
out
pop
sbb
mov
sarl
decl
arpl
sub
adcl
sub
fcomps
lea
pushl
or
mov
out
je
cmp
mov
push
mov
cwtl
fistpl
call
push
or
fbstp
iret
cmp
lea
pop
std
dec
cmp
ficomps
jmp
loopne
decl
stos
out
clc
arpl
loop
xchg
dec
out
lea
push
xor
jmp
xor
lcall
outsb
cmc
lret
cmpsb
push
mov
ja
into
pop
xchg
sub
pop
popf
pushf
sub
fs
call
sub
jae
adc
fistpl
cmc
out
dec
call
out
mov
sub
mov
mov
mov
insl
add
push
das
jne
std
add
stos
fisubrs
pop
incl
push
out
cmp
lcall
inc
lock
xchg
push
mov
loop
cmp
out
cmp
jmp
inc
sub
rorb
pop
sub
adc
adc
and
pop
mov
enter
cltd
adc
das
mov
and
data16
test
movsl
test
jb
test
int3
mov
bound
outsb
pushf
dec
jmp
dec
and
adc
xchg
dec
scas
mov
shrb
jmp
sub
dec
mov
pop
push
mov
and
in
xchg
or
push
pop
lods
in
mov
fisttpll
xchg
sbb
pop
xchg
cs
and
pop
dec
push
dec
xchg
dec
adc
ds
mov
and
nop
adc
mov
jmp
push
adc
dec
std
out
stos
cmp
push
push
pop
or
stc
sub
xchg
dec
jo
out
pop
push
cmp
mov
inc
push
inc
dec
das
push
mov
mov
addr16
rorb
out
mov
jmp
pop
inc
xchg
pushl
xor
aaa
or
pushw
gs
outsb
fcompl
clc
dec
cmpsb
jae
lods
int3
fidivl
pushl
xchg
xor
test
sub
ret
dec
dec
popl
div
and
mov
decl
mov
xor
sub
sbb
jecxz
and
dec
inc
sub
jns
mov
xor
ja
mov
cmp
lods
mov
pushf
xchg
mov
decl
popa
ds
incb
jo
mov
cmp
stos
rorl
inc
cmpsb
and
movb
ret
push
push
cmpsb
outsb
leave
clc
insl
adc
pushl
jle
sub
lds
mov
das
pushf
mulb
pop
insl
imul
scas
inc
lds
jno
cld
scas
pop
lds
mov
imul
sbb
repz
aad
insb
mov
sbb
decl
mov
aad
popf
mov
mov
push
call
xor
sti
fisubrs
decl
lods
stos
in
cwtl
pop
stos
lods
pushf
mov
cmp
insb
or
sub
cmpsb
add
jmp
mov
and
xchg
adc
mov
shlb
dec
and
cmp
cmp
ljmp
shr
inc
fwait
test
rep
jbe
xor
andb
push
cmp
jecxz
ljmp
decl
dec
cmpsl
fadd
mov
mov
inc
push
sub
dec
lcall
imull
ds
lcall
repnz
jae
enter
loope
sar
pop
ret
dec
or
inc
and
les
leave
lcall
ljmp
imull
lods
test
out
rorl
inc
mov
mov
repnz
push
shl
cli
outsl
test
pushl
xchg
andl
scas
aaa
bound
mov
sub
dec
lret
adcb
ds
incl
inc
idivb
loopne
sbb
rcl
cs
jge
lods
pop
inc
push
or
ljmp
pop
jmp
gs
ficoml
es
enter
aas
loop
mov
lcall
jl
add
sub
clc
lock
int3
xchg
clc
xor
xor
jge
add
xchg
in
rorb
pop
jae
pop
mov
jno
lock
arpl
and
in
fs
mov
or
insl
sahf
pushl
scas
jle
fwait
pop
movsl
shrl
dec
pop
ja
add
rcrl
push
addr16
jge
test
sub
iret
iret
cmp
pop
and
std
subl
out
rolb
sbb
sbb
cmp
cmpsb
dec
loop
call
stos
or
aaa
pop
xchg
or
pop
jecxz
push
mov
call
push
roll
adc
test
xchg
add
and
aas
ss
lcall
jg
mov
sub
and
in
sub
adc
push
inc
jo
mov
sahf
lcall
lcall
mov
adc
inc
mov
ljmp
and
inc
cmp
pushl
outsl
cmp
mov
lock
xor
dec
dec
mov
scas
pushf
cmp
jge
ds
lret
movsl
mov
pop
mov
or
fimuls
in
add
pop
lcall
mov
inc
aas
xor
jno
cli
call
test
divl
sbb
subl
pop
imul
cmp
shrl
pushl
mov
xchg
cmc
call
push
or
into
jne
iret
mov
jb
decl
xor
stos
fldt
pop
jne
mov
ljmp
enter
jge
incl
ret
xchg
fwait
push
dec
lret
sub
scas
shrl
ljmp
push
repnz
dec
and
xor
push
mov
xorl
bound
mov
divl
xlat
xor
call
aad
jns
js
and
push
lcall
cwtl
bound
jne
jb
std
xchg
pushl
out
scas
pop
mov
mov
mov
mov
jmp
ja
lds
in
rcrl
sub
lcall
in
imul
xchg
pop
dec
cmpsb
xchg
lcall
mov
jp
andb
loopne
jnp
xchg
in
jne
pop
andb
xor
xchg
jbe
shrl
in
adc
push
int3
add
pop
scas
dec
jl
stos
lods
sub
std
scas
js
aam
test
xor
call
daa
lahf
in
mov
and
xor
cli
push
mov
insl
push
add
inc
jnp
bound
pushl
sbb
pushf
das
cmp
enter
sub
sub
dec
fcmovne
incl
icebp
fwait
cs
mov
lock
or
jne
gs
shll
sti
inc
aad
pushl
jecxz
xchg
int
mov
or
dec
pop
shlb
lret
mov
jmp
cmp
shrb
fwait
mov
fnstcw
ljmp
xor
or
mov
incl
and
out
ljmp
or
cmpb
shrl
xchg
iret
ds
incl
xor
or
sub
lahf
mov
ficoms
mov
fiadds
push
call
jg
loope
push
aam
push
jg
inc
sub
pop
pusha
outsb
imul
mov
pop
data16
inc
sahf
adc
adc
imul
bound
into
daa
arpl
aaa
dec
lea
lret
sar
call
insb
mov
xor
sbb
mov
push
popf
loope
sbb
mov
jecxz
mov
sbb
or
pusha
loop
fildl
or
enter
jno
mov
fstl
nop
into
jb
stos
sbb
ds
mov
xor
xor
inc
rolb
mov
push
push
jbe
call
incl
inc
rcr
outsl
popa
fists
xor
xchg
popf
cmc
ficompl
call
sub
movsb
int3
pop
rolb
xchg
add
mov
xor
jg
cmp
iret
or
ljmp
jecxz
out
pop
pop
lods
pop
daa
rcll
push
hlt
push
mov
imul
adc
cli
leave
cltd
jb
pushf
pop
sbb
push
add
add
cmpsb
jecxz
push
dec
mov
sub
jmp
mov
hlt
inc
mov
sbb
inc
push
xchg
popf
dec
imul
lods
inc
push
arpl
pushl
loop
rorb
and
sub
lods
and
mov
std
push
loop
inc
xor
jl
push
xor
ja
pushl
jb
fs
dec
pop
push
mov
add
lds
push
repnz
lcall
cld
mov
loope
cmp
int3
push
jp
test
inc
sbb
pop
out
fistl
cs
adc
sbb
cmp
leave
lahf
movsb
shlb
push
adc
pushl
divb
mov
mov
mov
lods
jp
sti
and
add
cmpsb
test
cmpsl
lea
dec
ja
cmpsl
lret
outsb
lock
pop
lret
nop
lret
out
push
push
jae
and
out
push
pop
int3
mov
jp
xchg
ja
insb
movsb
cld
jne
loope
dec
add
or
call
xchg
pop
mov
push
sub
push
inc
arpl
or
pusha
mov
jle
add
push
inc
jg
movsl
jge
lret
das
adc
cmp
push
por
in
and
sub
es
test
inc
inc
inc
or
popf
aaa
in
cmpsb
sub
lods
sbb
mov
mov
push
test
pop
jb
xchg
mov
jmp
fidivs
fwait
xorb
popa
js
icebp
data16
cmp
or
stos
shrb
decl
dec
xor
sbb
aad
call
xchg
mov
daa
sub
sbb
lcall
imul
jbe
mov
xor
push
adc
mov
call
out
aam
stos
ja
xchg
mov
xchg
sub
aam
cmp
stos
mov
incl
lret
pop
cmpsl
fcoms
push
cmp
rol
stos
jg
jae
insl
pusha
cmp
les
loopne
mov
or
outsl
inc
lods
adc
xor
ud0
jmp
fcomps
sub
lods
fmuls
xor
test
sub
add
pushl
adc
sbbb
jl
sbbb
pop
jmp
sub
incl
mov
and
jnp
add
jl
push
pop
inc
stos
pop
add
gs
cmp
incl
xchg
jae
int
lods
sub
push
movsb
sahf
rcrb
xchg
dec
inc
adc
jmp
ljmp
pop
inc
shlb
notb
scas
arpl
fists
ds
jmp
sar
push
dec
push
jno
pusha
adc
lock
or
jo
cwtl
popa
out
imul
inc
bound
daa
inc
out
cli
mov
in
addb
dec
jl
es
sbbl
ljmp
lret
lods
xor
mov
repnz
xchg
add
push
mov
mov
jp
adc
pushl
xor
cld
adc
shlb
dec
fsubrl
loop
int
mov
or
jno
cwtl
incl
popf
add
dec
inc
push
adc
inc
mov
sbb
xor
js
xor
add
ljmp
xchg
icebp
aad
into
cmpsl
push
sti
mov
and
sub
loop
xor
pop
ljmp
incl
jle
cs
dec
lcall
or
mov
test
cmp
leave
and
cltd
js
cmp
jmp
push
clc
rclb
or
iret
pop
mov
sub
outsl
lds
mov
cmpps
lcall
incl
ja
adc
sti
jmp
push
push
and
out
sbb
lcall
xchg
aad
shrb
test
je
or
or
in
das
inc
repz
mov
incl
cld
divb
divb
ljmp
sbb
sub
xor
cmp
popf
jp
pusha
cmp
mov
dec
sub
cmp
add
push
hlt
xchg
ds
decl
test
aam
loopne
push
cs
mov
cmp
cmpsl
fcompl
push
decl
sub
popf
pushf
testl
inc
xor
jge
int
xor
mov
push
dec
jne
idivl
and
test
adc
lds
xchg
xchg
mov
insl
cli
or
decl
cld
xor
add
fists
pop
inc
jns
sbb
xor
incl
jo
cld
adc
mov
pop
mov
aas
mov
test
sti
xchg
fistps
sbb
sbb
dec
mov
mov
imul
xchg
inc
insb
shl
shll
mov
mov
push
adc
mov
fldcw
decl
xchg
ror
gs
imul
imul
push
dec
dec
aaa
movsb
lock
adc
pop
fldl
dec
or
pop
jmp
cmc
outsl
cli
clc
ftst
mov
call
popa
dec
fnstenv
pop
rcll
incl
sahf
mov
dec
cmpsl
in
inc
fstl
or
and
jns
cmp
stc
mov
ljmp
xchg
push
test
sbb
arpl
into
test
inc
in
push
dec
xor
fmuls
shll
call
mov
add
push
imul
pop
xchg
stos
mov
pop
jp
ret
jmp
incb
mov
sbb
mov
lcall
push
xchg
mov
jecxz
mov
or
icebp
and
movsl
das
jg
and
xchg
data16
mov
cmpl
call
fidivs
mov
call
orb
jne
in
mov
mov
int3
mov
pushl
fincstp
jns
fistps
aam
push
out
mov
sub
jecxz
cmp
into
push
lods
adc
and
xor
xchg
cmpsl
in
int3
test
incl
add
mov
add
cld
pop
ds
cmp
test
inc
pop
arpl
jbe
insb
or
lcall
cwtl
dec
pop
sbb
inc
push
loope
mov
scas
lock
mov
jbe
imul
ljmp
add
push
lret
call
pop
jae
cmc
mov
cmpxchg
inc
stos
in
lods
adc
insl
inc
cmovno
ljmp
pop
dec
jl
push
adc
jg
aad
test
mov
or
in
cltd
mov
xor
incl
ret
xchg
dec
jo
xchg
jmp
mov
push
mov
mov
adc
add
xchg
lcall
cld
into
call
push
cmpsb
gs
cltd
cmp
push
shll
lahf
in
lcall
jl
cltd
cwtl
aam
into
ficoml
pushf
jl
xchg
adc
dec
sbb
insb
stos
xor
and
fidivrl
sbb
push
test
fwait
pop
popa
push
jb
push
loop
ja
mov
cmp
push
insb
into
movsb
addr16
inc
push
cmp
jo
push
popa
lds
mov
jns
es
dec
out
adc
ljmp
mov
xchg
dec
inc
jns
fwait
in
leave
dec
loop
xchg
cwtl
les
inc
add
jae
fisubrl
jmp
inc
aam
ror
xchg
add
cmp
js
test
pop
lea
addl
pusha
cmp
xlat
mov
mov
int
and
imul
pop
or
call
add
loope
dec
lahf
icebp
test
bound
lahf
inc
pop
xchg
inc
lret
pusha
aam
inc
jmp
mov
mov
mov
xor
imul
popa
insb
push
add
jnp,pt
pushf
pop
sbb
incl
adc
add
lahf
jg
outsl
push
adc
xchg
push
cmp
dec
enter
das
jmp
cmp
jge
inc
and
xchg
sbb
mov
ja
dec
mov
xor
mov
in
cmp
insl
mov
outsl
mov
jnp
pop
mov
cmp
ret
mov
mov
decl
jmp
movsl
push
xchg
sarl
xor
outsl
xlat
cld
xor
pop
std
shll
jecxz
lcall
and
mov
pop
push
inc
shr
and
icebp
repnz
add
mov
jns
int3
push
cmp
mov
pop
jbe
orb
inc
cwtl
mov
sub
and
push
mov
mov
or
mov
jge
xor
or
fs
mov
xchg
pusha
xchg
incl
dec
ljmp
in
push
mov
dec
add
xor
mov
push
sbb
call
or
data16
xchg
test
mov
jp
jecxz
imul
shlb
jmp
mov
gs
sbb
leave
mull
outsl
ljmp
cmc
add
cmpsl
push
call
sbb
movsl
stos
xor
scas
pushf
fadds
mov
sub
push
cli
iret
sub
xlat
nop
xchg
rclb
loope
push
gs
mov
js
sti
mov
dec
pushf
xchg
ds
jno
pushl
aaa
js
xchg
fbld
push
add
pop
in
xchg
and
push
dec
sub
dec
popa
pushl
add
add
in
out
mov
add
push
mov
dec
pusha
das
mov
jecxz
push
adc
push
cmp
mov
mov
mov
adc
add
mov
fimuls
jmp
aaa
inc
sbb
sbb
das
ds
mov
sub
fisubl
ja
imul
aas
jmp
loop
adc
dec
adc
les
xorb
scas
pop
cmp
jl
sarb
jl,pt
jne
div
jmp
in
popf
idiv
dec
mov
inc
and
dec
idivl
cmp
popa
mov
outsl
mov
mov
in
out
jae
mov
push
jl
dec
xchg
adc
lods
pushf
push
adc
call
pop
cmpsl
xchg
sbb
into
pop
es
mov
loope
loop
inc
mov
nop
sbb
imul
lock
push
sbb
pop
or
js
add
pushf
sub
mov
push
mov
push
and
inc
out
sub
cmp
outsl
cmp
inc
push
mov
add
and
mov
test
cs
incl
and
mov
cmp
sub
xchg
in
xlat
add
sub
negb
pushl
xchg
cltd
aam
jp
mov
pusha
gs
mov
ds
jnp
cwtl
scas
sbb
inc
mov
scas
popf
cmpsb
and
cld
testl
push
sarb
into
in
lcall
xor
sub
cmc
mov
addb
xchg
jae
fidivs
inc
std
mov
addr16
sti
jno
inc
andl
loopne
jecxz
pop
ja
mov
stos
fidivrl
out
call
lds
rcrb
mov
cmpb
lahf
xlat
ret
jle
fldt
jg
jmp
pop
inc
inc
dec
mov
insb
ds
addl
leave
and
mov
inc
inc
and
push
nop
daa
data16
in
jmp
xchg
push
dec
rolb
push
add
pushl
and
arpl
pop
sub
push
mov
leave
push
pop
and
hlt
or
jb
sti
data16
lcall
repnz
sbb
in
add
dec
rorb
stos
or
mov
jg
inc
dec
pop
cmp
incl
cmp
push
jne
inc
popf
xor
lahf
sub
cwtl
push
daa
mov
imul
jmp
cltd
mov
roll
mov
aam
and
adc
outsl
fwait
ss
pop
ds
call
dec
jbe
lahf
cmp
adc
fnsave
cwtl
jmp
ret
jg
xchg
jmp
mov
mov
push
push
cmc
push
test
shll
lretw
loop
test
inc
add
outsb
add
call
stos
push
and
enter
mov
and
xchg
jl
in
shr
pushl
add
pop
xchg
sub
cmpsl
mov
pop
cmp
fs
out
jno
test
decl
scas
lret
es
dec
cmp
dec
fiadds
mov
and
mov
ficomps
push
int3
mov
enter
fistpll
shl
fcmove
sbb
mov
js
inc
sbb
mov
push
int
adc
push
xlat
xchg
imul
mov
mov
jnp
ss
push
lds
inc
mov
psubq
lds
std
or
cltd
adc
sti
loop
add
jmp
aas
dec
rorl
sub
in
mov
xlat
push
fwait
push
mov
push
int3
sahf
or
and
mov
lcall
mov
and
cwtl
int3
xor
push
lods
and
lock
call
xor
repnz
lret
cmp
fnstenv
xor
and
movsl
jbe
jae
push
add
jmp
stos
push
lods
iret
push
push
add
add
jns
imul
pop
cmpsl
xchg
out
int
mov
fdivrl
pop
lret
jmp
lock
lods
mov
inc
es
leave
enter
push
mov
pop
sub
out
sbb
pop
jb
sbb
pushf
sti
stos
xchg
fwait
xchg
jne
data16
int
out
jns
jbe
sahf
js
in
shrl
xlat
jge
mov
and
cmp
call
testl
js
lcall
mov
xlat
add
jb
xchg
out
clc
add
test
ljmp
mulb
inc
mov
cmpsl
pop
push
adc
loope
movsl
popa
lea
lods
mov
sarb
jmp
xchg
dec
lods
xchg
push
arpl
push
repnz
or
cmpsb
in
call
or
orb
push
incl
dec
aam
mov
sub
fcomip
imul
pop
mov
mov
es
es
call
incl
adc
test
std
cmp
and
mov
cwtl
daa
sub
mov
decl
sbb
mov
xchg
out
orl
xor
jns
lcall
call
fwait
ror
adc
fcomps
fwait
sti
movb
push
shll
pop
ret
or
mov
jp
ret
dec
std
jmp
jp
cmpsb
loopne
sbb
add
mov
sbb
movsb
popf
test
dec
jbe
pushl
in
xor
stos
push
dec
pusha
lock
in
mov
pop
cmp
mov
pusha
inc
xor
push
decl
out
in
iret
scas
jno,pt
enter
movsb
add
loope
aaa
lea
cmpsl
daa
sub
imul
pop
ret
jp
add
pop
aas
movsl
lea
inc
hlt
jl
mov
add
adc
xchg
push
jp
ljmp
loopne
aaa
push
outsl
leave
pop
mov
incl
adc
and
ss
add
mov
mov
sar
pop
lcall
add
xor
add
adc
pop
sar
add
dec
test
cmp
decl
ja
call
mov
fldenv
push
dec
mov
or
test
push
pop
stos
cmpl
jns
test
xchg
inc
lods
cmp
stos
xchg
dec
mov
pop
call
test
fsubs
mov
repz
mov
jg
les
push
push
push
push
push
insl
add
mov
aam
jmp
lods
int
inc
cmp
out
mov
cltd
pop
sub
out
shlb
lds
aas
mov
clc
movsb
out
cld
jmp
fs
js
sbb
icebp
inc
fdivrl
jnp
add
sub
pop
imull
das
or
mov
pushl
mov
dec
add
and
int3
mov
mov
int
mov
push
decl
pop
sbb
sahf
dec
xor
inc
lcall
push
outsl
adc
ret
mov
mov
jnp
fsubrs
xchg
cmpb
incl
lcall
daa
in
sbb
jmp
sub
pop
mov
dec
fiaddl
push
xchg
jns
lret
inc
movsb
fs
pop
push
stos
adc
call
pop
pushf
fnstenv
inc
lock
stos
jle
int3
cwtl
add
pop
dec
dec
mov
jmp
or
mov
iret
pop
lds
inc
add
add
xchg
sahf
sbb
out
rorl
orl
shlb
lret
lea
fildll
cmp
inc
xchg
jmp
aam
addr16
ret
mov
ja
fcmovb
add
push
ret
rcl
dec
das
jae
test
lcall
sbb
out
test
mov
xchg
out
xchg
pop
pop
mov
jmp
ret
jno
or
push
adc
cmpsb
and
add
in
push
cli
mov
jae
adc
shrb
subb
push
cmp
push
incl
add
cmp
mov
or
xchg
jns,pn
movups
push
xor
dec
sbb
xor
push
lret
bswap
repz
test
dec
and
scas
cmp
idiv
mov
or
xchg
cmpsl
push
lcall
dec
and
cmc
fsubs
leave
out
cltd
adc
decl
roll
push
nop
out
sub
js
mov
mov
decl
push
xor
push
jp
cld
ficomps
xor
push
jmp
pop
fistps
mov
ljmp
and
push
mov
xchg
xor
repnz
add
jne
outsb
std
adc
jb
mov
cmp
mov
mov
push
mov
shll
jg
lds
fimuls
negb
jmp
jmp
adc
repz
int3
mov
cs
and
lock
pop
mov
pushl
orl
add
out
stos
and
jle
cmp
stc
stc
sub
sbb
incl
fwait
loop
dec
mov
dec
dec
sub
icebp
outsb
popa
sub
scas
push
pop
insl
stos
decl
cli
stos
sbb
lods
lret
adc
cmp
sahf
je
imull
pop
jmp
push
fsts
xchg
call
cli
xchg
ja
lods
mov
in
dec
inc
rclb
sub
arpl
stos
mov
fs
lea
frstor
test
ja
movsl
mov
dec
test
push
je
std
lods
lcall
ret
add
adc
icebp
xchg
pop
adc
aas
int
add
lock
das
std
jmp
cltd
rorl
adc
cli
aam
sub
movsl
jno
decl
xchg
aas
loope
jo
inc
sub
incl
ret
idivb
jns
inc
sbb
shl
sub
mov
pushf
mov
mov
push
push
lcall
loop
and
int3
xor
decb
mov
movsl
lahf
test
daa
aam
decb
cmp
sarl
inc
pop
pop
repz
dec
out
mov
das
and
mov
movsl
ljmp
pop
xor
sub
mov
je
mov
xchg
ss
int3
dec
stos
incl
mov
and
aas
inc
and
push
inc
sub
mov
or
movsl
cmp
bound
ljmp
xchg
dec
or
scas
fwait
call
sub
gs
dec
gs
push
das
out
pop
mov
adc
rol
jmp
dec
lock
and
add
sahf
jne
dec
repz
leave
lea
decl
movsb
mov
sub
fcoml
and
das
clc
outsl
add
dec
lahf
cmp
lcall
insl
pusha
cmpsb
pop
mov
push
addr16
xlat
mov
inc
pushf
cmpsl
in
xchg
pushl
scas
cmp
and
cld
mov
data16
inc
movsl
clc
leave
xor
dec
loop
pop
addl
call
rcrb
xchg
pop
and
es
sub
popf
or
movsl
aaa
pop
xchg
mov
call
inc
lds
cli
in
popf
sbb
out
mov
sbb
cs
xchg
incl
pushf
jl
mov
lea
movsl
insb
pop
leave
mov
xchg
adc
movb
incl
inc
outsb
pop
punpckldq
or
aad
ljmp
hlt
mov
lcall
lods
fdivl
or
xchg
fisubrs
xchg
nop
jmp
mov
jbe
sbb
ljmp
dec
mov
adc
cmpsl
jno
f2xm1
xlat
mov
std
cmp
stos
push
decl
call
pop
loope
xchg
and
icebp
jo
sub
jnp
movsb
jo
rol
pop
mov
jmp
sub
enter
das
cmp
push
fdivrs
mov
dec
jb
lcall
cmp
push
popa
mov
and
cltd
mov
movsl
mov
out
iret
aas
mov
xor
push
bound
pushl
dec
adc
adc
add
mov
insb
push
cli
cmp
cmpsb
movsl
insb
inc
call
mov
iret
or
and
xchg
and
jns
or
outsb
insl
loopne
xchg
lods
in
call
xlat
repnz
dec
bound
mov
ret
xchg
mov
mov
mov
inc
sbb
movb
inc
mov
jmp
dec
jge
cmp
pop
mov
and
popf
xlat
dec
pop
in
rclb
push
pushl
into
inc
lret
inc
mov
push
cmpsb
cmp
fstpt
outsl
inc
leave
icebp
mov
call
push
push
es
and
cmpsb
fstps
aam
and
inc
inc
aad
or
pushl
xchg
frstor
dec
mov
outsl
jmp
mov
cwtl
and
rcl
mov
clc
pop
push
push
lret
mov
dec
sbb
dec
cmp
pop
inc
xchg
insb
das
jo
jecxz
pop
xor
incl
imul
inc
mov
pop
imul
test
movsl
push
push
sbb
push
dec
mov
xor
insl
or
int3
jge
lods
addps
dec
dec
cmp
je
ss
ss
inc
pop
xchg
cmp
es
jmp
inc
bound
out
fldenv
jg
push
mov
imul
movsl
stos
pushf
dec
ja
jmp
jae
cwtl
daa
icebp
das
fwait
mov
icebp
pop
aas
cmp
test
repnz
incl
ljmp
xchg
lcall
xor
into
lret
roll
cmp
outsl
ljmp
and
add
mov
and
dec
or
icebp
xchg
or
std
std
sub
shll
call
sbb
pusha
sub
mov
dec
sbbl
xor
sbb
add
ljmp
or
dec
pusha
faddl
arpl
push
mov
and
adc
add
push
push
jb
test
mov
es
sbb
xchg
aam
fldcw
pop
cwtl
xchg
ljmp
insl
repnz
adc
insb
mov
adc
sub
shlb
sbb
ljmp
or
mov
cmc
aas
dec
jp
dec
es
cmp
xchg
mov
aam
cmp
inc
js
dec
push
scas
sbb
push
dec
and
shll
aam
pop
lock
aas
or
cwtl
insb
and
and
mov
hlt
mov
sarl
das
sbbl
les
incl
lods
ret
daa
std
ljmp
mov
mov
push
and
lods
push
call
lods
aam
out
jecxz
dec
sbb
lret
iret
lret
jb
loopne
cmc
icebp
mov
sub
ja
push
decl
data16
or
xchg
dec
mov
cmp
in
mov
ja
pusha
pushl
sbb
leave
ss
mov
lods
daa
adc
call
sub
push
lcall
outsl
adc
xor
add
in
add
inc
mov
mov
mov
incl
ret
imul
cmp
sbb
int3
pop
cmp
xchg
ljmp
or
mov
sbb
adcb
sub
hlt
je
lahf
int3
mov
jmp
clc
std
sti
stos
sub
xchg
add
jbe
gs
test
cmp
ljmp
dec
repz
das
icebp
lods
hlt
xchg
pop
lret
sahf
scas
add
movsb
push
mov
inc
pop
lcall
sbb
xchg
mov
fwait
adc
jp
stc
mov
daa
or
cmp
imul
incl
mov
pushl
div
add
cmpsb
dec
xchg
or
sbb
sarl
jne
push
pop
add
in
lcall
jmp
je
cmp
pushf
and
sbb
outsb
idiv
ljmp
jne
mov
insb
pop
repnz
xchg
incl
pop
mov
out
fbstp
enter
bound
scas
and
lcall
push
inc
je
gs
aad
cmc
mov
mov
data16
jl
or
sub
cmp
repz
mov
test
ljmp
pop
ret
out
movsl
iret
push
in
icebp
cmp
mov
test
stos
les
out
or
mov
jb
push
sar
filds
and
aad
sub
test
pop
ficoml
cmp
aas
sar
popa
cmp
ljmp
pop
cwtl
jnp
test
inc
pop
push
int3
ja
dec
dec
popf
daa
insb
fidivl
movsl
push
push
add
and
sub
add
out
mov
cmp
popa
xchg
xchg
mov
rcrl
ds
jmp
adc
xchg
dec
mov
mov
jnp
call
mov
or
movsb
add
jmp
xchg
xlat
roll
adc
sub
fsubrl
jp
das
es
cltd
cmp
fisttpll
mov
mov
cmp
cmpps
repz
icebp
into
jmp
cltd
mov
call
mov
dec
ficomps
addr16
pusha
sub
mov
pop
jmp
cmp
cli
jle
in
js
and
cli
cmp
dec
jo
xor
jl
lods
addr16
mov
sar
jmp
cltd
push
push
cmp
leave
in
jnp
bound
scas
test
addr16
dec
mov
data16
mov
call
push
mov
fs
mov
nop
mov
inc
sub
popf
mov
sub
sbb
pop
and
mov
xor
mov
popa
decl
mov
mov
or
jbe
xchg
sub
sub
addr16
decl
sti
mov
jns
movsl
adc
inc
mov
dec
insl
sahf
mov
jmp
jmp
sbb
mov
sbb
loopne
cs
aad
je
das
out
ja
add
cld
nop
pop
test
push
mov
in
xorb
dec
scas
xchg
gs
outsb
rolb
push
push
dec
incl
pop
hlt
insb
pshufw
cmpsb
sub
stos
mov
xchg
push
scas
gs
mov
mov
adc
ficoml
cmp
xor
xchg
add
pop
stos
jne
iret
add
call
or
push
or
push
cli
lea
jg
push
add
movsl
gs
dec
adc
hlt
pop
pop
test
cmp
sub
inc
and
push
stos
mov
mov
mov
sub
mov
inc
adc
add
test
loopne
push
imul
jmp
xor
addl
enter
mov
cmp
movsl
and
call
test
repz
cmc
mov
movsb
mov
mov
out
jl
jno
addr16
push
fnsave
aaa
push
popf
clc
and
lret
out
wrmsr
lock
xor
mov
popa
cmp
call
imul
inc
mov
scas
push
inc
cmpsb
std
cwtl
pop
mov
and
pushl
addr16
clc
roll
xor
std
fisttps
mov
cs
notl
sbbb
out
ret
pushl
dec
add
dec
inc
mov
fnsave
xor
mov
lcall
imulb
jno
pop
call
mov
inc
stos
sbb
lahf
and
jo
pusha
xor
jns
lret
incb
pop
mov
xor
sbb
fs
xchg
pop
sub
jg
sahf
xchg
sarb
and
decl
scas
pop
cli
sbb
arpl
lds
jne
arpl
xchg
movsl
dec
xor
dec
pop
out
js
hlt
add
push
jno
sahf
pop
sub
shrb
lods
add
aaa
test
dec
adc
mov
jp
pop
adc
inc
stos
sbb
adc
mov
push
lea
movzwl
ljmp
leave
movsl
adcb
inc
rorb
mov
movsb
fimuls
pop
xorl
add
cmp
mov
loop
jp
shrl
icebp
inc
dec
jp
leave
cmp
repz
inc
mov
jb
mov
icebp
mov
clc
pop
jecxz
mov
jmp
push
xchg
rorl
fucomip
dec
test
sbb
int
inc
xchg
scas
sub
flds
dec
xor
mov
add
test
jmp
std
and
mov
lret
ret
cltd
push
xchg
cmp
mov
fs
or
lods
mov
sub
xchg
dec
or
sbb
mov
fldcw
jns
pop
stos
mov
fimull
cld
imul
pop
jg
mov
or
dec
pop
or
xor
sbb
jno
sti
shl
mov
cs
push
and
xor
loope
lods
dec
cs
leave
mov
arpl
lret
pop
pop
lcall
mov
mov
mov
cmp
mov
shlb
mov
decl
jmp
std
dec
imul
test
mov
in
jp
inc
dec
loopne
mov
push
cld
out
cmp
popa
sub
shl
inc
popf
cld
dec
or
test
in
adc
test
jmp
aam
push
movsb
sbb
dec
xchg
jb
movsl
mov
xor
shll
out
jnp
data16
mov
popa
ja
out
xchg
inc
mov
shl
cmp
push
scas
ds
mov
pop
call
repz
out
inc
sahf
imul
or
xlat
sahf
mov
pushl
sub
roll
push
out
lods
ds
dec
xchg
daa
dec
xchg
test
incl
frstor
lea
xor
outsb
sub
lret
xchg
in
xor
test
aaa
jge
inc
lods
pop
mov
inc
and
outsb
sub
push
sub
sbb
mov
sub
imul
out
sub
pushl
push
pop
mov
push
fdivs
cwtl
adc
clc
ss
jp
fnsave
adc
decl
stos
ror
inc
cmc
jno
sbb
stc
fisubrl
rcll
sub
cwtl
xor
jle
sti
clc
xchg
xchg
jl
outsb
dec
push
je
js
adc
rol
pop
xor
and
decl
mov
pop
adc
shll
es
popf
dec
fwait
sub
pop
rcl
sahf
push
cli
ljmp
pop
sbb
xchg
cmp
lcall
in
push
mov
mov
pushl
leave
and
sbb
clc
repnz
arpl
test
in
xor
cmp
jmp
aam
sub
ss
bound
je
xchg
gs
mov
pop
shlb
je
ljmp
in
pop
out
cmp
addr16
push
leave
shll
arpl
mov
decl
and
movsl
mov
push
incl
xchg
sbb
inc
adc
lds
adc
lcall
ja
fwait
js
jle
jmp
pusha
jne
and
add
push
push
cmpsb
pop
sti
push
xchg
add
cmc
mov
ljmp
imul
orl
ja
xor
or
inc
pop
test
cmpsl
fs
call
loopne
xor
popa
imul
inc
push
pop
xchg
jmp
out
jb
out
sbb
xlat
push
shlb
mov
fdivr
cmp
in
test
jmp
xchg
inc
dec
jl
daa
dec
roll
push
mov
dec
repz
cwtl
jmp
cmp
xor
fcom
fsubs
cmp
loopne
es
sti
mov
leave
iret
lcall
ljmp
ja
jne
pop
clc
push
test
xchg
fcomps
int
fisttpl
sbb
xor
dec
mov
jmp
inc
fucomip
lea
push
sub
testb
pusha
gs
inc
sub
cltd
movsb
xor
add
inc
scas
aad
push
imul
stos
shll
cmp
xchg
js
mov
push
popf
cltd
lcall
incl
push
pusha
push
pusha
push
push
subb
pop
xchg
pop
ret
stc
mov
incl
dec
jns
scas
mov
jbe
fidivl
pop
fldl
cmp
cmp
mov
push
cmpb
jb
sbb
dec
adc
clc
scas
push
iret
sbb
inc
xlat
mov
add
inc
fisttpl
xchg
xchg
faddl
scas
push
gs
aad
sbb
lock
cld
mov
add
decl
mov
jo
daa
jmp
sub
cmp
out
cli
mov
out
add
bound
jae
jmp
addl
in
scas
inc
int3
xchg
xchg
movsl
add
mov
dec
mov
repz
jns
sub
sub
mov
in
into
out
je
mov
or
loopne
mov
jge
jg
repnz
call
cmp
and
fwait
dec
jp
stos
movsb
stos
test
fdivrl
adc
stos
add
push
ljmp
ja
jo
sub
jle
sub
pop
test
pop
add
enter
incl
or
push
inc
movsl
sbb
pop
lds
xor
gs
sbb
jmp
or
insb
xor
out
lcall
push
jle
icebp
shll
mov
pushl
movsb
mov
je
mov
cmp
cs
nop
inc
scas
scas
out
adc
outsb
nop
add
jmp
ret
adc
out
pop
call
int3
dec
cli
mov
jl
xor
mov
in
imul
pushl
les
sbb
push
ret
mov
lods
xchg
mov
sti
aas
lods
dec
jnp
push
jno
negl
call
and
push
enter
xor
scas
sub
inc
mull
add
cmp
cmc
inc
fstpt
lcall
xchg
dec
xchg
cmp
in
dec
sbb
gs
mov
imull
push
pushl
xor
mov
mov
jo
inc
data16
push
icebp
in
rcll
fcomi
pushl
jecxz
stos
inc
arpl
inc
fstpl
mov
ja
push
fcomps
mov
addr16
and
pop
imul
decl
xchg
shl
subb
and
lock
xor
movb
push
mov
xchg
sar
mov
jp
pop
rorl
inc
inc
push
xchg
cmpsl
fs
inc
decl
out
incl
mov
fisubl
pusha
mov
jl
jmp
cmp
jmp
std
lcall
pop
push
fmull
push
std
repnz
adc
xchg
sub
outsb
loop
jo
fisubl
aaa
xor
and
push
push
js
std
movsb
jns
int
xchg
loope
cmpl
call
je
cs
std
cmp
mov
xlat
bound
mov
sbb
and
dec
xchg
in
pushl
add
sti
mov
dec
push
ljmp
test
sbbl
pushl
aaa
in
inc
iret
add
cmp
jg
pop
push
cld
lods
mov
jo
xor
add
pushl
pusha
mov
inc
cmpsl
outsl
dec
cmpsl
imul
iret
daa
pop
inc
icebp
iret
mov
inc
mov
push
pushl
sahf
std
or
add
push
cwtl
out
test
or
popa
ss
jl
dec
sub
out
jno
add
jge
repz
fisttpl
push
xchg
ljmp
mov
aas
mov
xor
mov
fdivl
xor
xchg
inc
pop
cmpsb
jmp
mov
xor
inc
test
lcall
sbb
or
insb
int3
and
les
cmp
lods
mov
jmp
push
jl
mov
addr16
addr16
in
xlat
fimuls
repz
mov
pushl
jb
insb
sbb
mov
insb
inc
lcall
mov
and
pop
sar
incl
push
mov
adc
inc
adc
mov
adc
jge
cmpsl
pop
xlat
or
mov
sbb
ljmp
jmp
push
lret
sub
rcl
push
test
xlat
xchg
nop
ljmp
mov
push
mov
push
adc
addr16
lods
sub
call
jno
xchg
cmp
jmp
inc
imul
add
repz
push
push
imul
push
pop
xor
lds
adc
lcall
mov
movsb
stos
loope
and
aam
sub
mov
add
xor
cmp
incl
test
adc
mov
aas
push
pop
cltd
out
aam
pop
movsl
mov
sub
push
xor
fwait
xchg
or
xchg
push
std
jmp
mov
decb
js
cmp
jmp
mov
sbb
lret
lock
xchg
cwtl
sub
mov
and
popf
cmc
jno
test
decl
inc
add
or
mov
inc
pop
fsubr
push
xlat
leave
xchg
xchg
mov
ljmp
push
lock
imul
sub
int3
mov
stos
jne
cmp
jecxz
adc
lcall
add
jle
add
lcall
jge
jl
je
xor
sti
es
call
lret
add
dec
in
scas
dec
jle
cmp
je
stos
cmp
or
cwtl
mov
arpl
dec
lret
flds
or
sub
dec
adc
fs
inc
in
subb
dec
ret
push
add
lds
lcall
sahf
cli
mov
stos
xchg
inc
ss
sbb
inc
add
daa
xchg
push
out
jo
lds
mov
pop
in
mov
fistpll
jmp
int
call
loop
aaa
mov
test
xor
dec
andl
sti
xchg
mov
jl
das
fisttps
xchg
cmpsl
inc
es
pushl
add
dec
sub
sbb
jl
mov
je
aad
fnstcw
dec
cmp
dec
mov
xchg
ror
dec
mov
pop
in
ret
mov
lods
je
pop
sub
jmp
daa
inc
mov
fwait
in
jle
bound
xchg
inc
mov
popf
mov
or
inc
push
dec
outsb
add
lea
cmp
xor
cmpsl
lods
mov
fdecstp
sbb
cmc
pop
mov
or
clc
mov
inc
xchg
imul
cltd
cwtl
loop
mov
pop
aam
dec
cmp
sahf
ret
ja
jns
dec
out
inc
and
push
xor
pop
lret
xchg
dec
pop
into
je
add
jmp
xchg
fidivrl
aas
popl
push
je
lods
dec
push
xchg
xchg
sub
xor
lcall
mov
mov
pop
shrb
sub
xlat
repnz
sbb
xchg
lcall
jno
stc
pop
lods
push
cmp
dec
fdivs
xchg
outsl
gs
cmp
push
pop
stos
test
arpl
lcall
sub
in
and
out
xchg
repz
pop
mov
push
mov
dec
xor
push
xor
cltd
sbb
popa
push
mov
xor
mov
lret
scas
lock
pop
mov
sub
decl
cmp
mov
mov
push
xlat
mov
jmp
test
roll
inc
incl
push
mov
xchg
dec
and
push
and
dec
push
out
pop
mov
jo
inc
out
ljmp
sti
push
ret
arpl
mov
jp
dec
add
ret
or
inc
jmp
pop
adc
push
stos
aad
movsb
xchg
stos
test
int
pop
mov
jmp
ret
inc
shrl
in
incl
inc
or
mov
aam
pop
xor
pop
shrb
cmp
sbb
call
sahf
push
in
cmp
aad
rcrb
pop
pop
and
in
pop
xor
fcmove
cmp
pop
out
push
cmpsl
fincstp
cwtl
mov
rorb
test
and
mov
ret
lcall
push
mov
mov
lret
jge
lret
ret
mov
and
lret
fistpll
pushf
cmp
sahf
xor
std
in
or
push
dec
mov
out
cmpsb
mov
movb
xor
iret
out
pop
jmp
mov
or
pop
hlt
xchg
js
repz
xor
sub
fst
cli
and
dec
cmp
mov
adc
jle
ljmp
pop
push
jmp
gs
repz
jmp
jge
add
and
aaa
lea
push
mov
add
sub
or
pushl
and
dec
in
pop
cmp
cld
nop
arpl
adc
sub
cmpsl
cmp
jmp
push
jnp
pop
fstpl
mov
mov
shlb
cmp
enter
lock
aam
pop
cmp
and
xor
bound
shl
repz
pusha
rol
pop
popa
adc
sub
cli
cltd
call
mov
jno
iret
bound
pushf
aas
mov
mov
pop
mov
scas
jl
or
mov
xchg
add
xor
add
cli
push
jge
cmp
jbe
je
mov
pop
dec
push
sbb
mov
mov
lcall
movsb
jecxz
pop
loopne
test
dec
cmp
in
add
incl
addb
jne
sbb
xchg
pop
insb
stc
push
dec
iret
sub
pop
pop
dec
fistl
pushl
out
out
jne
dec
rcll
sbb
mov
mov
sub
scas
jg
mov
mov
jle
adc
mov
or
sub
dec
popf
mov
movsb
xor
xor
pushl
dec
cwtl
lods
insl
fldt
into
inc
fsubrs
sub
inc
sbb
test
pushl
sub
stos
jp
jo
xorb
pop
stos
sub
jno
mov
xor
pushl
shr
jl
and
or
add
popf
add
popf
mov
scas
cmc
icebp
lcall
inc
shll
cli
sub
xchg
jno
cmp
pop
dec
cmc
add
inc
fwait
xchg
int
lods
in
jle
jmp
jb
js
cmp
loope
xor
shrb
ja
mov
jle
dec
lock
mov
dec
jo
arpl
inc
ret
push
lds
ret
xchg
sub
aaa
xchg
xor
shlb
jae
xchg
gs
loopne
pop
hlt
ljmp
in
call
xchg
std
jbe
jmp
hlt
aaa
test
xor
mov
mov
jnp
pop
mov
jg
or
pushl
pop
pop
cmpsb
cmp
mov
mov
outsl
sub
dec
negb
out
xchg
test
repnz
fwait
xlat
in
push
add
dec
scas
je
add
stc
or
ss
push
jne
xchg
inc
dec
sub
and
and
dec
in
pop
dec
push
mov
adc
fists
decl
mov
cmp
and
adcl
jg
dec
xor
test
lcall
push
cmp
fldt
ja
repz
sub
in
lock
dec
inc
or
aad
mov
fsubrp
mov
sbb
imul
fucomip
cmp
leave
xor
xchg
inc
xchg
fwait
adc
ja
jmp
cmp
and
nop
je
loope
sbb
imul
out
and
inc
pop
aas
lret
leave
shlb
pushl
shr
and
stc
cmc
orl
mov
aad
flds
sub
mov
cmpsl
inc
call
or
test
insl
test
cmc
into
add
xchg
fcoms
jbe
jne
popf
dec
mov
jmp
test
enter
dec
stos
jae
xor
repz
pop
loope
dec
fdivrs
add
lcall
sbb
fstl
dec
pop
xchg
call
and
add
and
shrb
push
sbb
pop
sbb
xor
mov
repz
arpl
out
and
mov
cli
ret
xor
xchg
jge
call
fwait
pop
mov
loope
lods
mov
test
jmp
mov
fbstp
add
mov
ds
sub
push
inc
shll
add
mov
xchg
int
pushl
std
jmp
jne
sarl
repz
xchg
insl
push
enter
enter
cmp
loopne
call
xor
nop
sbb
out
mov
shl
mov
incl
jo
or
and
mov
and
sbb
pop
mov
inc
call
pop
lcall
in
mov
jge,pt
xor
pop
inc
sbb
jle
call
call
jmp
fiaddl
jnp
out
fdiv
dec
imul
rcll
stos
std
unpckhps
mov
push
lods
stc
into
sbb
fisttpll
imul
cmp
pop
inc
jbe
outsb
push
mov
call
leave
pop
or
popa
sub
push
push
stos
fcom
add
clc
jmp
into
pushl
lahf
fidivrs
out
jae
loop
lods
fdivs
testl
cmovge
push
xchg
inc
je
in
jbe
jns
movsl
gs
adc
add
push
dec
pop
adc
dec
mov
pop
push
inc
outsb
sub
push
push
xor
cmpsb
daa
lea
scas
push
movsl
or
cmpsl
and
ficoms
lods
jmp
sbb
in
and
rcr
dec
stos
int3
icebp
jb
inc
stc
jno
es
jnp
and
js
cmp
inc
fldt
xchg
ficomps
xchg
fs
push
cmp
je
pop
in
into
call
push
mov
test
dec
and
faddl
scas
popa
leave
xor
cmp
mov
jmp
in
mov
andl
in
insl
push
clc
push
jae
sbb
pop
sub
arpl
decl
into
callw
shr
mov
stc
push
pop
xor
repz
subl
and
fld
add
js
adc
push
adc
or
scas
jo
jo
push
push
inc
stc
push
xor
das
mov
mov
push
in
mov
lock
leave
push
inc
lcall
adc
inc
aam
sbb
cmpsl
and
adcb
sbb
ret
mov
lret
out
ds
cmpsb
inc
scas
jbe
std
cmpsb
faddl
in
xchg
xlat
fdiv
mov
add
or
out
adcl
mov
decl
cmc
rorb
sbb
inc
xchg
inc
push
jnp
jbe
dec
mov
in
jecxz
xchg
sub
out
pushf
dec
fsubl
ljmp
xchg
xor
dec
add
cmp
lcall
pop
dec
xchg
inc
sbb
std
sub
jge,pn
adc
push
push
push
xlat
lds
dec
fldenv
jl
dec
or
mov
cmp
pop
loope
dec
or
jns
loop
loope
lods
fs
add
pushl
xchg
es
xchg
fdivl
add
cld
pop
filds
mov
dec
fmuls
stos
dec
incl
fwait
and
pop
sbb
mov
or
fnstcw
mov
incl
fimull
sbb
mov
fcompl
shll
pop
push
mov
inc
sub
sub
repz
sub
xor
leave
notb
or
addr16
incl
pop
xchg
rcrl
pop
fsave
in
xor
js
bound
or
push
xchg
jge
lods
bound
sbbb
fwait
rorb
out
fidivrs
cmpxchg
bound
test
xchg
mov
cmp
mov
jnp
xlat
add
xorb
mov
adc
adc
sbb
push
or
into
js
mov
add
push
jge
in
mov
clc
sahf
jo
cmp
lds
fsubrs
jnp
and
aam
jmp
pop
cmpl
xor
pop
aas
ljmp
sub
pusha
fisubl
jge
fnstsw
es
scas
lret
push
jne
in
xchg
or
jmp
xor
adc
aas
inc
push
pop
scas
int
int3
dec
and
test
cmp
or
decl
dec
mov
dec
pop
movsb
dec
daa
imul
ret
mov
xor
push
daa
jno
imul
pushl
xchg
cmp
push
jg
mov
sub
aad
dec
lret
jne
dec
scas
test
mov
cmp
insl
mov
fdiv
inc
mov
rcrb
and
and
jno
dec
sbb
fisubs
ss
mov
lret
icebp
jge
je
add
mov
adc
jmp
aad
xchg
jae
loopne
mov
das
dec
cmp
push
shll
jmp
lods
and
je
push
cmp
push
jmp
enter
pop
lcall
test
movsl
inc
outsl
inc
stos
or
xchg
idiv
pop
daa
fwait
pop
or
sub
mov
inc
lds
mov
xchg
jnp
inc
outsl
aad
and
sub
inc
out
push
loope,pt
xchg
ud0
pushl
mulb
test
sbb
shll
mov
jp
addb
call
movsb
or
jmp
mov
arpl
test
mov
mov
pop
cmp
inc
pop
sbb
push
loopne
fsub
dec
daa
mov
sub
mov
mov
dec
adc
movsb
inc
movsb
inc
or
pop
dec
and
out
lret
mov
stc
cmp
sub
sub
cli
jp
jae
mov
jb
in
cmp
sti
sbb
jb
xor
sub
stc
inc
out
pop
testb
incl
ficomps
pop
mov
dec
stos
and
js
adc
and
ljmp
fwait
sub
mov
pusha
cmp
shlb
in
dec
and
fsubrs
call
aaa
mov
cmp
xor
cwtl
insb
loope,pn
jecxz
adc
or
ljmp
insl
stc
daa
ljmp
popl
mov
jbe
sub
and
mov
dec
push
mov
ljmp
sbbb
test
adc
push
insl
js
movsl
or
or
push
decl
ljmp
in
mov
test
xchg
test
jle
push
mul
xorl
fwait
and
int3
ret
fnstsw
fwait
mov
cli
cld
fcmovbe
fdivrl
push
mov
jecxz
jg
call
ja
push
or
mov
pop
out
test
xor
pop
das
jp
lahf
xor
dec
movsb
add
out
in
lcall
sti
inc
fisubrs
flds
mov
std
pushf
adc
mov
push
push
es
js
adc
test
xor
jecxz
adc
test
aad
test
sarl
mov
or
mov
pusha
xchg
pop
cmpsl
inc
mov
push
ds
pop
pop
je
std
jecxz
mov
scas
test
std
adc
push
cltd
or
ret
cli
add
out
sub
jmp
loope
sub
xor
stos
jmp
dec
xchg
jnp
lret
jl
lea
and
std
leave
enter
cmp
lea
lcall
pop
mov
cltd
scas
mov
dec
out
inc
mov
into
push
loope
ljmp
ljmp
jae
sub
ret
xchg
pushl
push
pop
jno
loopne
cmp
mov
jbe
pop
mov
sub
insl
ret
mov
incl
and
xor
pandn
out
cmpsb
mov
inc
call
push
jno
ljmp
mov
stos
mov
sub
idivb
or
mov
xor
mov
xchg
mov
in
mov
rcrl
ja
jb
scas
or
mov
xor
popa
and
decl
pop
adc
mov
sub
mov
cmpps
pop
push
mov
shlb
mov
cmp
fnstenv
pop
adc
scas
adc
push
xor
jle
in
or
cvtpi2ps
sub
fdivrs
jl
ret
xor
dec
jmp
sarl
xlat
mov
mov
dec
and
fisttpl
jp
dec
inc
loop
lcall
jge
mov
inc
out
sbb
xchg
arpl
inc
pop
std
push
daa
dec
xor
mov
filds
pop
movsl
mov
mov
les
movsb
imul
xchg
cltd
cmp
add
push
incl
jo
nopl
movsb
xchg
mov
push
out
test
mov
call
testb
aas
rol
adc
jno
test
movsl
rcll
ljmp
push
sub
cmp
mov
daa
xor
mov
sub
decl
cmc
cwtl
and
loope
sbb
push
popf
add
std
inc
lock
shl
cmpsl
cs
lcall
cmp
dec
mov
pop
xchg
and
testb
test
add
jmp
call
repnz
sbb
and
or
je
stos
insb
aaa
dec
add
mov
hlt
clc
dec
jmp
jne
jno
cltd
in
push
mov
inc
fisubl
lahf
xor
push
mov
sbb
xchg
mov
mov
pop
mov
dec
pop
stos
popa
xchg
inc
lahf
nop
jae
fistps
int
and
adc
call
inc
int3
mov
sub
and
fistpll
sub
push
js
and
data16
pushl
inc
cmpsb
mov
jg
ffree
outsl
mov
jmp
testb
arpl
call
pop
lds
xchg
pop
xor
inc
clc
dec
mov
dec
jmp
dec
outsl
in
test
cmp
push
jle
es
es
sub
ja
repz
adc
mov
sti
stc
push
pop
and
xchg
mov
shll
xor
pop
or
fnstsw
push
aas
lahf
fcompl
or
mov
popa
popf
sbb
dec
dec
sti
std
cltd
pop
inc
fistps
pop
xchg
xchg
repz
imul
bound
out
pusha
push
sub
pop
gs
add
mov
sbb
add
lcall
scas
je
movsb
or
mov
mov
and
pusha
std
cli
adc
inc
mov
jmp
sub
fimuls
push
inc
mov
cmp
xchg
push
sar
jmp
std
push
push
dec
or
fistps
icebp
jne
jno
pusha
mov
lahf
mov
cmp
ljmp
outsl
pop
je
jge
imul
loop,pn
or
adc
sbb
mov
lcall
or
pop
sub
fildll
and
pop
jns
and
inc
jle
pop
xor
pushl
inc
adc
mov
ss
jne
loope
mov
xchg
cmp
incl
and
mov
jo
shll
dec
cli
push
lods
popf
push
rcl
daa
stos
outsl
ja
xchg
incl
push
xchg
jbe
and
xlat
je
ja
xchg
sub
pusha
out
jmp
jg
cmp
cmp
int3
ror
daa
call
jl
inc
mov
xchg
in
subb
jl
test
addl
js
inc
mov
jl
pop
xchg
out
ret
out
cld
sti
loope
cmp
lock
imulb
fists
pop
sbb
call
xor
cmp
push
ljmp
adc
aas
xchg
jmp
xor
or
jl
cmp
sub
scas
sbb
mov
push
cli
test
test
cmp
lret
cli
insb
leave
inc
imul
cltd
test
in
nop
imul
call
leave
sub
mov
dec
ljmp
xchg
mov
mov
push
mov
cwtl
fiadds
ds
cmpsl
inc
cmp
dec
cmp
insl
je
xor
aad
mov
add
lret
and
icebp
outsl
incl
or
ljmp
dec
popw
mov
jl
aam
sahf
sar
jmp
dec
cmp
or
fsts
rcrb
jbe
mov
add
pushl
bswap
push
sbb
fmull
mov
xchg
sbb
and
jns
sahf
inc
jae
movsl
sub
incl
cmp
hlt
adc
fstpl
out
mov
out
mov
enter
imul
lcall
jo
mov
insl
lods
out
push
aaa
mov
cmp
lods
push
insb
repnz
pop
adc
mov
ljmp
ficompl
leave
cwtl
dec
int
nop
test
sbb
test
push
lret
lods
imul
mov
pushl
add
fwait
gs
xchg
fs
sarb
and
clc
sarb
jmp
js
adc
imul
arpl
test
cmp
mov
xchg
push
pushl
int
sbb
loope
pop
mov
shll
adc
sbb
inc
std
pop
sar
incl
shll
inc
push
out
ficoms
shll
and
or
pushl
ficompl
inc
mov
mov
inc
lret
xchg
add
cmp
decl
aam
faddp
push
test
xchg
push
adc
or
add
push
cltd
mov
les
lea
jnp
and
mov
aad
lds
pusha
pop
out
pop
xchg
cmpsb
push
cmp
out
mov
lret
pushl
mov
ret
adc
in
cmp
call
sbb
lcall
outsb
dec
cmp
ljmp
mov
imul
jns
test
jle
or
call
sahf
cmp
pop
jnp
dec
mov
decl
jmp
push
push
inc
mov
sarb
fimuls
imul
add
scas
nop
das
xchg
ljmp
stos
ss
jge
int3
fmull
mov
lret
jp
cmp
out
jl
stos
pop
lds
lock
xor
mov
lcall
sahf
jmp
rolb
lcall
sbb
adc
xor
jb
dec
xchg
aam
dec
stos
jecxz
sbbb
adc
lcall
sub
imul
nop
lahf
sahf
jnp
mov
stos
adcb
inc
mov
inc
dec
scas
xor
mov
push
ljmp
xchg
and
sub
mov
fadds
xor
pushl
add
or
cvttps2pi
mov
lret
jmp
clc
mov
fs
fcoms
lcall
or
fbstp
data16
xor
into
div
jl
cmp
call
jge
cwtl
mov
add
mov
repnz
stos
jecxz
xor
cltd
mov
lds
les
call
decb
pushf
cmpb
aas
mov
fwait
add
call
jle,pn
push
sbb
adc
scas
cmpsb
pop
pop
mov
adc
int
mov
callw
ljmp
lock
es
movsb
pop
loopne
and
adc
inc
nop
andb
ss
idiv
jmp
dec
pop
fidivrs
cs
out
mov
rorl
and
test
lock
jl
fdiv
and
in
in
scas
imul
jae
sahf
add
cs
ljmp
inc
push
movsl
js
mov
out
cld
sub
push
xor
add
movsl
shlb
decl
sub
sarb
add
push
outsb
div
sub
repnz
lods
icebp
mov
jno
shrl
ljmp
ja
sub
mov
mov
pop
stos
cld
jae
sbb
jmp
lods
movb
incl
sti
addr16
ss
mov
aas
mov
or
add
arpl
decl
mov
outsl
mov
pushf
add
vmovaps
fiadds
rorl
inc
in
movsl
ds
jmp
pop
push
sahf
push
pop
inc
movsb
imul
mov
mov
mov
arpl
fimuls
call
ljmp
push
mov
push
sub
insb
outsb
loop
sbb
cmp
call
add
jle
mov
shrb
aaa
sbb
dec
fwait
cltd
sub
xor
mov
lcall
sub
pop
pop
mov
pop
pop
mov
dec
repz
cmc
mov
rorl
inc
cli
fists
incl
jmp
or
push
push
jno
stos
sub
jns
jecxz
clc
and
lcall
add
mov
mov
sarl
mov
pop
sti
or
movsl
stos
add
dec
inc
cs
xchg
xor
ja
test
push
bnd
das
jnp
push
pop
mov
pusha
inc
mov
cli
fs
popf
push
popf
addl
xchg
jae
mov
ja
jmp
mov
sub
dec
sahf
mov
jge
sub
dec
sbb
xchg
or
stos
add
lods
mov
out
and
push
inc
jo
mov
call
fucomp
lcall
add
out
test
imul
mov
add
incl
fwait
repnz
or
pop
out
cmpsl
into
inc
dec
fcmovne
xor
aam
fcos
ljmp
inc
xchg
add
ret
insb
or
int
jmp
call
inc
arpl
mov
addl
xchg
xchg
dec
xor
sub
ficompl
and
ljmp
and
divl
repz
mov
jle
and
pop
imul
decl
mulb
dec
gs
push
dec
xor
cli
xchg
or
jmp
mov
push
add
clc
sbb
aas
dec
pop
call
xchg
ljmp
pushf
stos
push
pop
dec
xor
pushl
pop
dec
inc
ja
sub
sub
adc
mov
sub
out
pop
stos
jmp
hlt
adc
stc
xchg
mov
xchg
dec
arpl
adc
xchg
imul
jmp
mov
and
loop
mov
mov
sbb
sbb
and
jne
push
pop
and
mov
inc
sub
inc
out
ret
dec
cwtl
jmp
adc
movsl
je
jmp
in
frstor
adc
subl
in
mov
pop
cmp
sti
faddp
xchg
jmp
xchg
imul
movsb
cmp
in
jbe
mov
pop
xor
cmp
aaa
and
jbe
push
hlt
decl
fdivr
sbb
mov
fnstsw
push
inc
arpl
imul
loop
or
sbb
dec
jae
jne
aam
int
or
outsl
sbb
fistpl
mov
incl
sbb
clc
imul
mov
jne
outsl
sahf
jge
cmpsb
mov
sub
push
decl
cmp
dec
sarl
xchg
int
xchg
mov
cmpsb
aad
lods
mov
mov
jb
call
int
jle
rcll
cmp
imul
sub
push
insb
pop
sahf
xchg
out
adc
sbb
mov
mov
stos
xorb
xlat
fidivl
sti
scas
fnstenv
adc
xchg
pop
mov
cmp
ret
dec
mov
xchg
repnz
cmp
stos
adc
arpl
repz
lret
dec
loope
cmc
mov
call
xchg
into
pusha
xchg
adc
add
xor
subb
insl
loopne
inc
out
dec
jno
cmp
cli
movsl
jae
lock
lahf
xchg
mov
push
mov
cmp
mov
adc
in
neg
add
dec
sub
xor
pop
pop
mov
ret
ds
in
imulb
pop
loop
test
or
pushl
fidivrs
cltd
lcall
iret
jle
mov
jp
inc
xlat
and
ljmp
adc
or
jge
pop
mov
jecxz
pop
mov
pushl
fnsave
sbb
sti
jp
push
mov
mov
and
mov
call
push
shr
pop
inc
subl
rcrl
mov
cmpsb
push
inc
mov
push
add
lcall
push
inc
outsl
divl
int3
insb
mov
icebp
jl
int3
pop
aam
mov
jmp
pushl
pop
sbb
loope
pop
out
sti
sub
or
imul
push
mov
dec
inc
popa
testb
pop
jno
jo
pop
outsb
mov
inc
pop
rcrb
lods
jmp
int
mov
imul
addr16
into
pop
add
fsubl
mov
mov
aaa
mov
ja
cmp
mov
lcall
jmp
int3
hlt
adc
add
dec
incl
movsb
iret
or
jge
push
les
out
sub
push
sub
popa
cmp
fildl
movsb
add
aam
movsl
pushf
push
lods
xor
ljmp
and
mov
xchg
cmp
shrb
adc
inc
and
dec
dec
test
mov
push
fstl
push
popa
pop
xor
push
jg
clc
cmp
push
in
inc
sbb
decl
mov
clc
and
add
jne
lahf
or
nop
out
mov
jmp
test
cld
cmpsb
adc
mov
fldt
inc
mov
inc
outsb
mov
decl
push
sarl
scas
sub
sbb
dec
xchg
loopne
clc
push
xchg
push
push
sub
jmp
cs
xor
mov
and
adc
sahf
lret
jb
inc
repz
in
mov
daa
loop
in
movsl
call
inc
loopne
mov
inc
aad
or
pop
adc
push
mov
fst
inc
pop
jge
sahf
fwait
mov
sbb
lcall
or
pop
and
cmpsl
mov
out
dec
movsb
addl
pushl
rcrl
ss
adc
imul
mov
popa
mov
add
sub
pushl
mov
test
imul
mov
pop
int
mov
out
mov
loope
sbb
pushl
in
sub
xchg
pop
mov
addr16
jb
js
in
push
sub
adc
xchg
pushl
pop
outsb
xor
and
mov
mov
sub
and
xchg
test
es
inc
sub
xor
pop
in
js
add
jo
subl
inc
clc
shrl
pushl
dec
push
lcall
adc
push
xor
adc
sti
cmpsb
add
or
jge
leave
mov
inc
scas
adc
push
xchg
push
push
mov
push
jmp
add
jp
or
test
mov
jp
ljmp
addr16
in
push
cmp
pmaxub
sbb
loope
dec
adc
push
add
addr16
test
fsts
arpl
sbb
lods
jl
ljmp
sets
test
out
add
ret
push
in
jne
jno
and
jns
ja
pop
leave
decl
jo
push
aas
lret
aaa
psubq
cmpsl
cmp
adc
xchg
xchg
push
and
decl
pop
jmp
lock
inc
add
mov
les
inc
mov
xchg
fs
xor
ss
jge
ljmp
out
cmp
or
inc
rcrl
test
lods
ret
insb
fs
cwtl
sarl
sub
out
jmp
rcrl
xchg
cmpsl
pop
cmp
inc
ret
ja
xor
insb
dec
scas
shr
rorb
incl
cwtl
in
loope
inc
out
push
fadd
fwait
and
pop
jg
repnz
rorb
fildl
pop
incl
push
pop
inc
outsb
mov
cmp
inc
mov
add
pop
loopne
mov
push
stos
stos
inc
push
cmc
fdivrp
call
mov
pop
dec
add
xchg
out
xchg
sbb
push
push
lret
jbe
push
mov
xor
push
mov
decl
cmpsb
mov
mov
pushf
mov
cmp
cmp
mov
iret
adc
jp
dec
pop
rcrb
sub
xor
inc
adc
stc
mov
sbb
in
fnstcw
push
push
pop
arpl
lods
mov
pop
jmp
test
push
lret
loope
adc
pop
jmp
jno
jno
mov
daa
cmp
icebp
fdivrl
in
jae
lcall
mov
pop
push
mov
jp
pop
sbb
dec
mov
je
ds
or
paddd
call
movsl
std
mov
fmul
inc
in
mov
rolb
sub
stos
xor
incl
mov
cwtl
jnp
popa
into
sbb
xor
add
or
decl
js
mov
sar
inc
int
xchg
or
cld
arpl
test
ljmp
push
xchg
out
mov
jno
test
sbb
inc
xchg
add
jge
mov
pop
or
jmp
ret
addr16
repnz
mov
or
xor
sub
pop
jp
std
das
sub
cwtl
xchg
imul
imul
mov
outsb
testl
jmp
pusha
pop
popf
mov
imul
xchg
repnz
pop
test
sub
mov
lcall
jmp
sub
mulb
js
push
jg
cmp
cmp
jle
lcall
mov
push
ret
in
or
cltd
sbb
mov
idivb
xchg
mov
cld
sub
dec
sbb
mull
adc
pop
jns
lahf
mov
jg
movsb
fdivr
pushl
xchg
loop
aaa
out
pusha
idivl
stos
mov
xchg
adc
and
testl
fidivl
dec
data16
js
adc
pop
or
cmp
mov
lret
and
adc
call
sbbb
push
xchg
xlat
xchg
xor
add
pusha
fisttpl
imul
ror
xor
ljmp
sbb
mov
cmpsb
lds
sbb
in
xor
inc
xchg
jg
nop
sbb
movsb
jmp
addr16
mov
cli
les
mov
cwtl
jne
aaa
mov
sti
fstps
or
push
or
inc
addl
std
mov
adc
loop
xchg
jne
lcall
or
push
jg
enter
mov
and
mov
adc
cmp
cltd
lods
dec
sbb
dec
inc
xor
xchg
fcoml
xor
or
stc
jb
cltd
inc
fiadds
inc
jge
stos
ret
mov
mov
sub
cmpl
adc
sbb
or
xchg
lcall
insb
add
sar
add
xchg
jo
mov
test
push
sub
push
bound
dec
sub
out
inc
adcb
jae
mov
pop
ficoms
enter
incl
ss
xchg
sti
jb
loopne
out
icebp
test
les
jecxz
mov
ljmp
insl
call
data16
ljmp
sbb
adc
addb
ljmp
pop
cwtl
mov
scas
stos
loope
pop
mov
loopne
sub
pop
inc
dec
sbb
scas
arpl
decl
xchg
cmpsb
jmp
aad
mov
stos
fistpll
push
jno
outsl
fs
or
aam
pushl
out
add
mov
inc
xor
xlat
arpl
in
xchg
negl
popa
adc
sub
dec
or
jg
mov
cmp
and
cmpsb
mov
dec
pop
sbb
jmp
dec
nop
test
cmp
and
sub
pop
inc
sub
xchg
mov
fwait
std
aad
call
hlt
sub
sub
push
push
inc
decl
test
in
mov
stc
std
incl
loope
mov
mov
popf
ds
push
add
jno
xor
cmp
jo
adc
cmpb
lods
notb
shll
aaa
pop
jl
mov
cmp
inc
scas
xchg
dec
xor
addl
cmp
or
js
add
cmpsl
ja
aad
addr16
cmp
mov
lret
rcrl
sub
sti
sub
ja
cmp
fcmovnu
cli
ljmp
dec
xor
in
add
mov
sahf
mov
mov
out
inc
cmp
decl
or
add
movsb
push
sbb
sub
and
insb
cmp
jae
sub
push
movsl
decb
lods
ja
adc
cwtl
cli
xchg
push
daa
cltd
ss
fsubl
insl
xor
jmp
or
into
into
test
repnz
aaa
inc
dec
xchg
push
dec
inc
popa
sub
decl
lea
add
jg
out
bound
pop
js
test
pop
test
incb
mov
jmp
jno
push
lock
arpl
and
jg
loop
arpl
pop
stos
cld
insb
inc
sub
pop
mov
fsts
mov
mov
or
incl
and
frndint
shl
mov
pop
sahf
push
xchg
push
int3
jg
mov
mov
inc
cmp
lcall
jae
adc
xlat
push
cmp
inc
pop
jnp
xlat
sbb
pop
fcmove
testb
orb
inc
xchg
cmp
outsb
xor
movsb
repz
repz
push
mov
cld
push
jmp
ljmp
daa
ror
fstl
cwtl
adc
loopne
cld
jae
out
nop
sub
addr16
call
shrl
inc
push
inc
mov
outsb
sub
ljmp
mov
cmp
lcall
add
in
movsl
push
dec
xorb
push
sbb
and
imul
mov
push
cmp
insb
mov
push
imul
xor
fisttpl
xchg
sarl
push
inc
pop
addr16
mov
repz
call
inc
push
push
sti
nop
les
jb
and
inc
sbb
cmp
call
and
mov
add
les
cmpsl
testl
incl
push
fdivrs
inc
push
outsb
sbb
mov
scas
sbbb
fisubrs
and
lcall
xchg
xor
xchg
leave
add
mov
addl
sti
out
push
and
cwtl
adc
ljmp
lahf
call
mov
scas
mov
aam
pop
movsl
push
lock
ss
loop
or
lcall
jg
jno
and
jle
insb
xchg
push
pop
fimuls
pop
sbb
xchg
icebp
pushl
push
out
lock
push
pop
hlt
sub
push
mov
jb
xchg
mov
jmp
jp
lret
add
cmp
fists
popa
fmuls
stos
call
call
iret
addr16
fisubs
pusha
adc
dec
mov
das
mov
xor
sub
mov
jbe
lcall
jae
mov
aas
out
sahf
loope
leave
or
or
jbe
daa
testb
cmp
lcall
fcmovu
sub
mov
adc
popf
hlt
jbe
roll
scas
je
push
stc
mov
decl
push
fisubl
push
xor
lret
sbb
jl
btr
lcall
out
add
mov
lcall
push
push
dec
movsl
push
mov
mov
ljmp
sub
in
test
and
test
sbb
push
sub
lret
shrb
ljmp
mov
pop
xchg
aad
jbe
xchg
inc
mov
sbb
jecxz
repz
std
push
dec
out
aad
inc
in
xor
sbb
cmp
mov
inc
add
or
inc
and
pushl
out
push
fsubs
ja
jge
ret
mov
loop
or
adcl
jmp
inc
push
mov
orb
daa
pusha
movsb
leave
mov
das
add
mov
ret
call
or
push
fcoms
out
stos
sar
popa
in
cltd
loopne
push
int
inc
scas
cmp
decl
cmp
adc
cmp
jg
adc
dec
arpl
lock
dec
pop
fs
jge
and
in
fimull
mov
adc
insl
mov
lahf
lods
xchg
mov
jno
jae
pop
mov
in
incl
mov
sub
xchg
adc
pushf
aam
jmp
aas
cmp
adc
mov
flds
jmp
cwtl
inc
nop
mov
inc
adc
cltd
push
aaa
push
enter
mov
cwtl
push
incl
sub
mov
roll
stos
nop
or
jmp
mov
out
push
push
hlt
daa
fldt
ljmp
jo
pusha
sbb
ljmp
aaa
test
daa
imul
xor
jg
push
jmp
lods
xchg
xchg
andb
leave
outsw
in
test
jg
push
mov
add
and
insl
xor
repnz
pop
pop
dec
mov
mov
sub
fs
pop
cwtl
mov
sub
or
stos
mov
sub
daa
mov
sub
fdivrl
test
push
addr16
mov
mov
mov
sub
out
or
js
jl
int3
cld
xchg
pushf
outsl
and
dec
xchg
xchg
lea
xor
inc
in
leave
cmp
jmp
stc
pop
ret
pop
in
in
jne
mov
xor
adc
sub
and
push
cmp
dec
xchg
outsl
sti
pop
in
adc
mov
xchg
jge
push
mov
xor
and
adc
pop
sarl
adc
call
mov
xor
mov
mov
cld
lock
jne
sub
lret
cmpsl
loopne
faddp
into
ljmp
fs
flds
jl
dec
testl
sbb
popf
mov
push
lcall
testl
das
mov
push
ffree
insl
into
xor
ret
or
cmp
inc
dec
jge
cs
out
sub
add
sub
cmp
and
xor
pushl
pop
jbe
das
sbb
jnp
inc
add
sbb
fbstp
mov
lock
sarl
jmp
icebp
cmp
xor
shrb
xor
ljmp
mov
adc
mov
rcrb
pop
stc
ficoms
imul
pop
xchg
lcall
fnsave
adc
mov
push
and
inc
insb
cmp
and
or
pushl
inc
pusha
push
movsb
jecxz
outsl
mov
js
das
test
jb
sbb
lahf
imul
sub
add
call
add
dec
add
xor
ret
inc
add
mov
push
or
add
jmp
aaa
inc
adc
add
dec
xchg
sbb
leave
sub
frstor
xor
jae
decl
mov
aas
mov
leave
loopne
push
out
sbb
inc
je
ret
fsubl
adc
imul
xchg
lods
jecxz
xor
shll
je
mov
push
add
adc
std
loop
cmp
jmp
mov
movsb
lock
inc
mov
sub
movsl
out
rcl
cs
and
cld
in
jb
sbb
adc
inc
mov
sub
pop
and
push
mov
sub
call
popa
fldt
push
sbb
pxor
mov
scas
push
mov
adc
call
in
nop
lock
xor
das
jnp
jecxz
push
bnd
dec
mov
inc
cmp
pop
mov
jmp
adc
cltd
cltd
xchg
dec
call
lahf
cmpsb
sub
and
ret
outsl
sub
leave
add
mov
jmp
cmpsl
lahf
jo
xchg
lea
filds
pop
pop
jg
xchg
xor
pop
test
scas
pop
dec
mov
stc
out
es
iret
mov
push
ss
dec
pop
cmpsl
mov
push
cmp
mov
imul
movsl
outsb
push
int3
pop
xor
aas
jae
aam
adc
ljmp
push
fs
add
mov
fmuls
sub
into
fisttps
int
in
incl
fcmovnb
mov
mov
xor
inc
sub
sub
repz
xlat
sub
bound
cmc
fmuls
lcall
jmp
mov
dec
inc
outsl
push
ror
fs
int3
test
daa
xchg
decl
sbb
push
scas
rcll
add
add
std
push
cmc
cmp
inc
fdivrl
push
fs
clc
push
sbb
incl
bnd
dec
and
xchg
enter
aad
popa
jnp
add
and
ljmp
sub
aam
std
push
daa
pushf
out
add
inc
js
inc
xchg
subb
mov
push
fs
adc
sub
fwait
inc
rorb
int
ficoml
jo
xchg
dec
mov
ljmp
xchg
jecxz
bound
ljmp
aad
pop
push
fnsave
lcall
inc
lcall
cwtl
push
jp
lock
mov
xor
mov
xchg
jg
pop
lods
enter
repnz
push
xor
nop
ret
decl
shrb
mov
inc
and
push
into
movb
scas
jne
mov
ret
dec
mov
push
sahf
iret
decl
mov
sub
cwtl
mov
jmp
pop
jmp
popf
jle
or
movsb
jne
push
int
sub
sbb
and
fistpl
outsb
inc
xor
int3
cmpsl
mulb
cld
addr16
push
mov
jns
fisubrs
xor
add
fs
cmp
imul
pop
add
pushl
out
cmp
sbb
sbb
add
xor
sub
das
adc
decl
mov
mov
jecxz
repnz
sub
pusha
test
push
push
repnz
pushl
inc
sub
cmpsb
push
pop
jb
ret
mov
fidivs
dec
flds
in
sbb
mov
repnz
call
dec
popa
xor
xchg
sub
sbb
pop
es
push
ficompl
incl
dec
dec
sbb
jl
and
inc
or
or
dec
mov
pop
xchg
push
lcall
stos
mov
jo
cmp
repnz
das
push
sbb
dec
pop
mov
sbb
in
push
lahf
loop
cmp
jb,pn
push
loop
cmpsb
pop
mov
mov
cmp
addr16
jbe
add
xchg
push
inc
call
ljmp
mov
stc
or
xchg
outsl
inc
lock
dec
xchg
xchg
push
push
ljmp
cmc
iret
movsb
adc
outsb
adc
inc
or
int
cmpsb
and
cs
decl
pop
sbb
cmp
inc
lds
mov
aaa
xchg
popf
movsb
xor
jne
pop
or
fiadds
repnz
jne
xchg
or
popa
mov
cwtl
jmp
and
btc
ficomps
mov
call
andl
rorb
xchg
mov
fs
lock
sub
fidivl
mov
adc
popf
shlb
loope
les
or
sahf
repz
mov
or
sub
xchg
pop
or
je
clc
inc
pop
cmp
decl
sbb
ljmp
fsts
pop
adc
dec
push
mov
enter
js
out
dec
mov
leave
divl
outsb
shr
rolb
ror
mov
aaa
dec
in
jbe
add
jmp
addb
hlt
adc
and
nop
push
movsl
and
loope
insl
sbb
and
inc
incl
out
enter
stos
push
adc
ret
jg
add
fdivrs
fnstcw
popa
movsb
push
ficomps
in
jmp
xor
and
pop
push
rol
icebp
popa
mov
ss
bound
sub
dec
mov
call
shrb
arpl
ss
shlb
jle
mov
dec
sub
sti
std
shll
inc
mov
call
lret
or
stos
dec
push
pusha
xchg
push
adc
jbe
xor
xor
jle
mov
push
sbbl
pop
sub
insb
imul
sbb
xchg
fdivl
incl
fs
adc
sbb
out
cmpsl
rol
out
arpl
leave
jle
stos
xchg
pop
pusha
loope
cmp
call
popf
test
cltd
rep
or
fsubs
rclb
daa
sub
adc
lcall
jne
mov
fisttps
xchg
test
jns
xor
lods
dec
xchg
aas
push
sbb
add
jmp
adc
jb
xor
mov
ret
loopne
cld
inc
fiadds
in
push
xchg
sbbb
rcl
movsb
cmp
clc
iret
mov
lods
sti
aaa
lods
jl
dec
mov
jl
xor
pop
jbe
xor
dec
out
orl
mul
out
mov
in
imul
pusha
dec
pusha
fcmove
sbb
push
mov
adc
and
sbb
inc
pop
mov
or
inc
mov
dec
mov
ljmp
cli
cli
fstl
cli
adc
jo
push
sub
popa
movsb
pop
mov
inc
dec
add
incl
mov
jns
in
out
aam
loopne
pop
sub
dec
insl
mov
push
cs
sahf
xchg
decl
xlat
cmp
adc
fcomps
xchg
inc
ljmp
jmp
mov
lret
ljmp
sub
adc
cmp
cs
jcxz
mov
jno
scas
xchg
dec
call
adc
xor
out
jmp
repz
inc
cmpb
movsb
jne
jmp
loopne
pop
aam
ja
arpl
xchg
arpl
movsl
mov
mov
mov
data16
lcall
xor
push
xor
jne
dec
jns
fildl
mov
leave
call
push
pop
pop
jle
add
xor
cs
xor
jbe
stc
push
pop
push
insl
ljmp
test
pop
in
adc
mov
inc
cmpsb
jecxz
imul
jmp
arpl
outsl
cltd
iret
xchg
push
mov
popa
pop
adc
cmp
jns
pushl
jecxz
xchg
xchg
adc
jmp
mov
cmp
jl
into
bound
les
out
and
into
and
int3
inc
inc
jnp
call
and
movsl
out
icebp
ljmp
mov
nopl
into
popa
mov
out
jns
pop
popf
jns
or
mov
xchg
repz
fdivl
adc
mov
xchg
call
sbb
ds
test
mov
fsts
jmp
shrb
jae
shll
mov
outsl
in
xlat
arpl
or
push
in
push
decl
fcmovbe
fidivs
jmp
xorb
stos
enter
adc
loop
popa
incl
mov
sub
in
fst
test
mov
sbb
pop
addr16
ss
ss
decl
xchg
sbb
js
and
lret
fs
shlb
jne
push
add
enter
call
mov
stc
subb
adc
jle
push
in
push
cs
in
lods
dec
test
lcall
mov
mov
cld
mov
xlat
aaa
mov
mov
call
rolb
ja
xor
popf
add
ja
rcrb
icebp
cmp
or
in
psrad
sti
and
pop
add
add
add
mov
adc
pushl
jle
or
cli
out
adc
mov
xor
fcoms
cmpsl
xor
std
test
mov
push
sub
sub
sbb
inc
push
fsubr
out
inc
xor
sti
filds
cmp
jmp
and
insl
ret
ffree
insl
sti
aad
jne
add
popf
rcrl
mov
push
incl
jecxz
repz
testb
sub
adc
inc
fs
cmp
movsl
inc
and
cmc
mov
mov
sub
pusha
xchg
jecxz
push
je
cmp
mov
fmulp
bnd
out
mov
pushl
fwait
sti
stos
ret
or
subb
push
shlb
cs
aas
in
push
lret
movsl
js
cmp
mov
jmp
xchg
xor
loop
dec
sbb
in
into
push
xlat
add
cmpsl
lds
mov
mov
jo
ljmp
jnp
push
xor
fcoml
aaa
insl
mov
fs
mov
imul
jmp
jae
pusha
push
ret
loop
lret
scas
mov
aaa
imul
dec
push
or
dec
inc
sub
pushl
movsb
ficoml
pop
mulb
sbb
bound
add
push
rcll
clc
std
data16
jmp
incl
lock
mov
cmp
mov
fwait
movsl
mov
outsw
adc
call
cli
test
insl
jl
push
inc
sti
sahf
xchg
cmp
xchg
dec
js
dec
data16
test
sub
cld
push
call
insb
mov
or
stos
outsl
or
imul
in
adc
ljmp
push
mov
imul
scas
sub
pop
and
ljmp
inc
aas
sub
pop
outsb
shll
loope
test
mov
jbe
repnz
dec
in
pop
std
push
sbb
push
or
jmp
and
xor
lods
jno
mov
dec
adc
gs
dec
shrl
cmp
jp
cmp
push
mov
sub
out
or
call
push
and
or
aad
or
sbb
lret
or
sti
lds
mov
jmp
jbe
neg
jno
sarb
test
imul
adc
ljmp
jg
push
mov
mov
fs
icebp
jne
fdivrl
push
jl
xor
js
cmp
in
call
jo
rcll
sub
jnp
cltd
int
popa
mov
and
jle
adc
decl
pop
outsb
push
cltd
daa
xchg
push
pop
jmp
movsb
and
mov
aas
mov
insl
movsl
xor
adcl
inc
and
mov
pop
testl
adc
test
push
dec
dec
daa
push
push
sbb
mov
test
fadd
push
push
cli
out
fstps
xchg
jae
nop
sub
andl
ja
stc
lds
fwait
xlat
xchg
pop
mov
cmp
cltd
sbb
mov
pop
out
mov
movb
jmp
sbb
cli
rcl
jnp
xchg
shrl
mov
adc
cli
xchg
adc
cwtl
outsb
repnz
incl
outsl
inc
stos
sub
add
push
stc
stos
jle
orb
pop
aad
out
lods
mov
decl
inc
dec
mov
and
insb
mov
cwtl
jge
sbb
das
jg
je
dec
mov
incl
movsl
rcrl
jne
dec
outsl
sbb
in
dec
push
es
xchg
call
incl
adc
push
mov
jbe
jnp
push
jno
mov
ret
push
mov
in
cli
mov
xor
scas
inc
sbb
and
sub
nop
adc
mov
aas
lcall
or
js
pushf
adc
mov
adc
cmp
mov
fldl
dec
mov
push
adc
dec
mov
cmpsl
sub
and
jb
push
popl
lcall
add
mov
arpl
xchg
loope
or
mov
jecxz
gs
jbe
pushl
adcb
cmp
sbbb
mov
fstl
mov
repnz
pushl
lret
lock
je
mov
push
mov
sti
aad
aas
fldl
pushl
mov
jae
ljmp
pop
popf
xor
shrb
dec
and
pushl
pop
sbb
dec
loopne
xchg
adc
inc
jb
xor
outsl
lret
movl
ss
jge
aam
leave
or
pop
cmp
jne
leave
div
inc
jne
sbb
addr16
dec
popa
xchg
cmpsb
xchg
xlat
gs
test
dec
mov
popa
fcmovnb
test
scas
or
push
fbld
sbb
cmp
push
cmp
mov
mov
or
push
pop
mov
xchg
ret
mov
xor
aad
test
push
sbb
inc
push
stos
mov
mov
hlt
arpl
mov
xchg
pushl
dec
dec
mov
test
decl
dec
roll
dec
cmpsb
js
into
sbb
mov
call
mov
lcall
ljmp
notb
in
lcall
sahf
lcall
mov
call
in
ret
and
cld
lret
mov
out
in
push
and
mov
sbb
or
call
fisttps
hlt
test
cmpl
leave
jg
dec
arpl
push
into
cmpsb
inc
mov
ret
out
insl
je
push
mov
mov
sub
push
sbb
adc
incl
or
xchg
add
not
jno
inc
sahf
addr16
cmp
mov
lock
inc
flds
lcall
dec
add
mov
mov
mulb
shr
ljmp
ljmp
daa
imul
dec
cli
out
enter
sarb
jle
lds
and
decl
cwtl
stos
adcl
push
xlat
es
hlt
push
not
ficompl
mov
mov
out
lcall
mov
push
cwtl
out
subb
test
sarl
sub
js
int3
call
inc
cmp
addr16
lock
fbstp
loopne
inc
xchg
mov
fmull
test
call
inc
in
push
and
insb
adc
enter
fdivs
mov
popf
push
pushl
gs
pop
in
cmp
ret
mov
sub
mov
icebp
es
cli
je
sub
and
or
filds
or
cmp
dec
sbb
adc
sbb
inc
iret
mov
aad
out
jmp
pop
and
verw
inc
out
imul
fisttps
adc
or
ljmp
addb
scas
inc
fdivr
daa
scas
fcmovnbe
je
cli
mov
je
repz
push
and
push
sub
adcl
insb
and
dec
outsb
push
dec
aas
dec
or
mov
and
lods
icebp
xorl
std
xor
sti
mov
cmpsl
pop
aas
cmp
rcrl
mov
pop
or
stos
jne
and
jmp
sub
push
mov
in
mov
leave
adc
popf
inc
xor
movsb
loope
add
mov
xlat
adc
push
and
std
ret
adc
mov
sub
push
sub
sbb
decl
jmp
jmp
inc
addl
add
jl
xchg
cmpsl
lcall
jae
cmp
loopne
mov
dec
mov
dec
pop
push
adc
xorl
jmp
dec
scas
mov
incl
pop
cld
lahf
sub
hlt
cmc
pop
or
adc
mov
fmull
cmp
xchg
dec
loope
push
pushl
mov
pop
rep
ljmp
xchg
stos
inc
in
stc
pop
mov
jmp
js
lods
and
pushl
imul
out
mov
xchg
inc
push
pop
es
push
sub
jne
adc
ljmp
jle
cltd
bound
jle
fidivl
nop
mov
mov
aam
mov
ljmp
sbb
psadbw
add
stc
out
xchg
ja
jnp
ror
cmp
out
out
fdiv
repnz
xchg
int3
int
jmp
insl
call
adc
clc
dec
xor
add
loope
xchg
incl
fisttps
mov
hlt
xorb
aaa
push
xchg
mov
pushl
pop
leave
jmp
pop
outsl
ret
sahf
xor
scas
push
cltd
inc
ljmp
iret
into
stos
cmp
decl
jbe
mov
ljmp
insl
push
movsl
xchg
inc
ror
jle
lock
pushl
ljmp
dec
popf
sahf
xlat
mov
dec
mov
out
sbb
jne
jns
lds
lcall
or
dec
popa
jno
pop
movsb
sub
pop
fs
mov
mov
incl
jge
add
mov
scas
leave
cmpsl
lock
scas
dec
mov
aam
jbe
test
cmp
aam
or
lret
pop
movsb
fwait
sbb
lock
pop
and
jecxz
out
hlt
aad
mov
mov
mov
add
out
xor
shlb
mov
incl
dec
in
in
cmp
inc
sub
hlt
inc
dec
js
ss
adc
jb
xchg
xor
mov
jmp
sub
std
daa
pop
jge
adc
stc
imul
loop
xlat
lods
int
fst
stos
cwtl
xchg
test
loop
and
jge
mov
xchg
inc
sbb
adc
std
push
and
mov
fsubl
incl
sarb
popf
push
ror
jbe
sub
lret
mov
mov
into
loopne
jp
incl
cmp
push
pop
push
lods
add
mov
cmp
jl
add
xchg
fcoms
cmp
mov
mov
push
imul
js
mov
dec
push
push
push
cmp
incl
outsb
rcrb
sub
insl
mov
fildl
push
dec
pop
lock
cmpsl
push
popa
mov
call
inc
addr16
pop
add
mov
add
nop
fucomip
pop
orl
pop
mov
inc
test
stc
xchg
inc
in
lods
lret
in
jno
stos
sbb
mov
cs
xor
cmp
lea
decl
mov
and
lahf
and
pop
mov
push
faddl
pushl
test
and
shrl
adc
out
inc
cld
filds
mov
out
xor
pushl
fcoml
jg
mov
ret
movsl
jmp
pusha
pushf
xor
insb
xchg
sub
lcall
ud2
mov
inc
ss
jnp
stos
jo
in
fisubs
inc
mulb
ds
call
sbb
push
cmc
mov
pop
inc
inc
or
movsw
stos
xor
push
adc
addr16
or
jg
pushl
mov
aaa
fldcw
arpl
loope
sbb
or
and
fcmovu
jmp
or
sbb
aam
imul
pop
je
es
inc
fdivrl
mov
lcall
movsb
add
jno
mov
js
outsl
xor
dec
shl
jg
call
dec
scas
cmp
lods
inc
jne
sti
cs
push
add
adc
push
adc
jle
sbb
insb
and
outsl
pop
aaa
cmpsl
pop
adc
jnp
roll
inc
push
jle
lret
jmp
cmc
xchg
mov
les
add
in
pop
cmp
inc
pop
mov
std
and
or
push
cmc
jo
icebp
stc
in
or
pop
sub
ljmp
jo
rclb
imul
lods
pop
cmp
inc
sub
cltd
jb
ljmp
inc
cmp
mov
mov
inc
mov
das
subl
cmpsb
mov
rcll
call
xlat
andb
jl
shr
mov
icebp
mov
pop
pushw
dec
inc
inc
decl
pop
push
in
jl
mov
jecxz
repz
pusha
inc
sbb
jo
xor
jmp
jbe
iret
sbb
sbb
lods
movsb
adc
out
sbb
mov
fsubrs
jmp
aad
pop
nop
xor
mov
shrd
popa
push
xchg
inc
popa
and
mov
jmp
dec
sbb
popf
fsubs
or
push
pop
mov
or
adc
lret
call
pop
push
mov
push
mov
addr16
jnp
mov
jp
pop
xor
mov
push
mov
lds
loopne
aad
icebp
mov
xchg
inc
push
icebp
push
dec
fadds
and
or
lcall
dec
dec
aas
fisubl
pop
push
popa
jmp
xor
rorb
sub
push
lods
js
fcos
call
fdivr
sbb
addr16
loopne
int3
mov
lret
shlb
int3
xchg
pop
jmp
test
incl
xor
dec
outsb
pushf
mov
lea
sub
popa
in
jns
das
lock
js
pop
daa
lds
cmc
mov
ja
inc
in
xchg
or
into
addl
fsub
cmp
call
fidivrl
pop
stc
fdivs
sarb
add
clc
js
enter
call
lods
mov
pop
mov
mov
cld
aas
out
add
mov
add
sub
call
sbb
jb
cmpsb
jmp
arpl
dec
mov
ss
inc
and
jle
idiv
decl
mov
mov
rorb
arpl
and
cmpsl
pop
mov
leave
xchg
mov
test
gs
dec
loop
into
jmp
mov
clc
jnp
cmp
ret
jmp
add
cmpsl
jb
cli
out
cmp
pop
pushf
mov
lods
add
popa
rorl
mov
jmp
je
dec
loopne
add
mov
push
bnd
xor
inc
scas
out
mov
inc
xchg
dec
loope
pop
outsb
loop
inc
in
jo
xchg
sti
out
push
outsb
das
pop
mov
add
call
test
lret
jg
pop
out
outsb
xchg
mov
jnp
addl
mov
decl
btc
call
jbe
jne
sbbb
push
out
jecxz
pushl
inc
xchg
xchg
ss
in
imul
rclb
iret
pop
sbb
mov
decl
push
jmp
mov
test
sahf
inc
or
adc
mov
pop
add
ljmp
mov
fs
fcoms
aam
xchg
cld
push
loop
int3
or
jg
push
aaa
jle
in
popl
decl
sbb
mov
bound
push
cmp
xchg
pop
les
push
mov
ljmp
shr
adc
push
cli
or
leave
cli
push
jge
stc
sbb
aam
jl
movmskps
jo
and
jp
lcall
and
ret
sbb
and
xchg
out
lea
jmp
adc
adc
add
jle
movsl
and
pushf
sbb
mov
cmp
das
mov
jo
jge
fdiv
jmp
nop
lret
push
ss
cli
test
dec
jle
and
cmpsl
add
pop
cmp
fimuls
jmp
mov
jnp
sub
dec
sbb
imul
les
jno
add
ds
cmp
testb
insl
dec
xlat
and
mov
in
dec
push
jae
inc
add
add
sbb
mov
push
mov
clc
loop
xchg
cli
pop
xor
movsb
xchg
sahf
jae
xchg
je
mov
out
in
jmp
pushl
cmpl
test
lcall
movsl
cmp
push
push
mov
mov
or
push
idiv
mov
in
xor
vphaddbd
je
add
in
sub
pop
cmp
xorl
xor
ret
add
jge
addb
dec
negl
mov
ljmp
fs
xor
repz
mov
mov
and
push
adc
push
xchg
mov
ljmp
push
lcall
pop
leave
aam
cmp
xor
nop
outsb
inc
inc
in
nop
or
add
aas
aaa
pushl
xchg
mov
mov
jle
adc
mov
and
sbb
jp
hlt
daa
lret
decl
or
shll
sub
adc
push
xchg
inc
negl
cli
jl
arpl
jmp
adc
jae
je
in
loope
test
movsb
and
xchg
push
movsb
fcompl
stc
loopne
incl
scas
push
xlat
jge
lods
movsb
push
inc
dec
fwait
ja
and
dec
jp
inc
mov
mov
call
icebp
stc
scas
loop
cld
sbb
mov
clc
add
repz
in
cmpsb
dec
xchg
adc
jmp
or
imul
imul
test
push
lods
inc
repnz
movsb
xor
jnp
or
cmpsl
xchg
repnz
call
mov
mov
xchg
cmpsl
adc
adc
jle
decl
stc
scas
sarl
fmull
mov
and
aas
ss
dec
dec
jns
push
in
jmp
out
inc
jmp
mov
jle
xor
inc
sahf
pop
rcrl
imulb
int3
mov
ljmp
mov
cmp
add
outsb
outsl
cs
iret
addr16
sahf
jp
stos
jnp
repnz
gs
test
pushl
scas
fidivrl
pusha
mov
int
mov
adc
jge
movsl
jle
inc
ret
push
push
push
pushl
fucomi
mov
pop
pop
and
add
or
lods
adc
dec
cld
push
pop
cld
mov
arpl
daa
or
repnz
daa
leave
sbb
jns
mov
rcr
jo
adc
dec
add
jne
pop
mov
icebp
scas
adc
jmp
cmp
aaa
lods
test
jl
imul
cmp
add
scas
andb
jmp
xor
lea
cld
lods
scas
mov
xchg
inc
arpl
aas
mov
rcr
jmp
add
or
cmpsl
mov
ds
or
pushf
cmp
or
cld
push
out
outsb
call
push
or
sti
push
int
mov
adc
sbb
cmp
jecxz
dec
mov
fildll
fnsave
inc
dec
jae
test
daa
push
push
mov
dec
nop
dec
in
ja
adc
jnp
call
jecxz
jg
orl
ret
insl
adc
arpl
xlat
gs
push
cli
pop
inc
pop
xchg
ret
fadds
fcom
nop
mov
cltd
push
scas
lret
stc
sahf
pop
out
test
add
xchg
pop
cld
pop
push
lcall
stos
cmp
inc
dec
jae
hlt
das
sbb
pop
cmpsl
shlb
xchg
pushf
mov
inc
pushl
and
leave
lock
pop
or
pop
dec
sarl
dec
xchg
sub
inc
adcl
mov
imul
decl
or
mov
xlat
xchg
dec
sbb
pushf
inc
dec
fucomp
push
jmp
jecxz
aam
add
aas
sbb
out
lea
push
shrl
js
jle
pushl
sbb
adc
dec
mov
cmp
std
xchg
mov
dec
mov
incl
add
decl
sbb
dec
inc
rclb
cli
aas
into
popw
call
cmp
or
adc
mov
int3
test
xchg
sub
mov
cld
sbb
in
arpl
mov
add
aas
xchg
cmc
insl
jno
icebp
inc
popl
mov
hlt
mov
outsl
int
fadd
enter
decl
push
or
mov
cmpsl
int
es
push
std
sahf
xor
scas
inc
pushl
faddl
sarl
push
push
roll
dec
or
ss
mov
int
add
call
inc
xor
out
mov
popa
push
dec
daa
int3
sbb
in
push
lods
loopne
dec
or
jmp
loopne
cmp
inc
sbb
jg
aas
inc
jge
loope
add
and
decl
sbb
sbb
outsl
mov
xlat
sbb
std
lret
outsl
and
add
or
xchg
lcall
jecxz
jle
test
fstl
stos
movsb
pop
push
dec
ror
divb
fcmovbe
add
fs
shll
xchg
cwtd
cmpsb
test
sbb
hlt
adc
mov
add
push
call
xchg
dec
cs
out
cmp
cmp
int
xchg
xchg
cmc
gs
lcall
mov
faddl
ret
pop
push
adc
enter
sbb
in
sti
push
popf
out
sarb
sbb
lds
cli
xchg
push
or
sbb
adc
inc
push
sarb
jmp
adc
lahf
sub
loopne
dec
push
xor
and
dec
ret
ret
aaa
add
ljmp
add
dec
test
mov
cmp
jne
sbb
mov
push
sub
fwait
in
push
mov
jb
out
mov
movsb
push
es
mov
push
sti
inc
lods
pushl
ja
sbb
loope
mov
xor
lret
negl
mov
and
and
xchg
or
push
ds
xor
add
mov
push
loop
jmp
mov
pop
adc
jp
add
fisubrl
fwait
push
pop
fdivrp
pop
ret
inc
call
pushl
and
jo
lds
mov
add
and
xor
sub
push
push
test
lret
dec
and
pusha
and
sti
fiadds
xchg
jg
sbb
xchg
cmc
fiadds
call
shll
and
aam
scas
fdiv
inc
sub
dec
mov
cmpb
js
mov
jmp
pop
and
mov
sar
add
jb
mov
ret
in
cmp
les
or
mov
decl
mov
add
jbe
pusha
pop
hlt
movsb
xchg
fisubs
out
sub
ja
incl
subl
mov
lds
push
mov
testb
mov
data16
dec
adc
imul
jmp
mov
jns
stc
xchg
lock
test
shlb
les
lcall
pop
rorl
xchg
mov
mov
jae
fs
rol
lds
das
sbb
dec
cli
jb
enter
and
jmp
mov
jmp
dec
ret
mov
in
fmull
jb
lret
sbb
aad
jb
adc
outsb
pop
push
incl
xor
xchg
inc
xor
cmp
ja
data16
pop
push
jmp
dec
mov
push
sarb
xor
nop
and
cwtl
subb
jmp
das
push
inc
inc
idiv
mov
lds
outsb
pop
and
fidivrs
cli
loope
add
push
adc
mov
imul
int3
movb
add
xchg
pop
cld
leave
add
imul
xchg
cmc
pop
es
ljmp
in
call
decl
inc
cmp
pop
sub
lret
fwait
into
in
xor
inc
in
arpl
clc
push
and
loopne
xchg
loope
pop
xlat
fistps
mov
adc
call
std
mov
cli
add
mov
lock
aas
pop
mov
test
jle
test
pushl
sub
scas
pushf
mov
fistps
out
mov
cwtl
or
inc
dec
data16
jmp
sahf
stos
and
dec
test
pusha
cmp
test
insb
repnz
jo
cmp
call
xchg
ja
adc
fstl
je
fs
pop
lods
ror
mov
decl
lds
xchg
xchg
nop
push
es
jle
cmp
enter
sahf
roll
cmp
rorb
in
call
jp
lods
mov
adc
int
adc
sub
jae
add
call
jae
sub
xor
icebp
insb
out
adc
pop
mov
fwait
mov
scas
xor
and
sub
stc
dec
push
mov
and
dec
fimuls
push
mov
mov
push
icebp
pop
test
shl
mov
adc
xcrypt-cfb
cmpsl
movsb
loop
cwtl
push
arpl
mov
ljmp
xor
in
push
cmc
loop
cmp
ja
cmp
xor
jns
lcall
xchg
jg
inc
push
div
mov
push
xlat
nop
pop
lock
scas
and
cmp
scas
or
ljmp
and
clc
mov
lret
setne
test
lret
pop
or
jmp
dec
jae
scas
pop
mov
cwtl
or
ret
mov
dec
dec
dec
jp
loop
push
xchg
pushl
xchg
pop
mov
or
inc
subl
fildll
nop
ljmp
cs
loopne
cmpsl
jl
or
je
sahf
scas
shll
or
dec
mov
cld
inc
sub
decl
add
pusha
cmpsb
pop
into
xchg
aas
mov
xchg
lods
data16
jns
push
idiv
insb
xor
dec
sbb
ljmp
out
pop
fimull
push
cmp
pop
shlb
das
pop
jecxz
dec
xor
out
clc
cs
outsl
push
dec
ret
test
add
push
enter
leave
mov
pop
sub
inc
and
decl
in
mov
xor
mov
popa
push
dec
and
sub
jb
ss
out
push
decl
mov
sub
aam
dec
scas
xchg
jmp
ficomps
pop
or
mov
call
test
inc
add
adc
pop
and
sub
jp
mov
and
jle
pop
mov
mov
cmp
mov
mov
jecxz
std
mov
jno
out
xlat
inc
sahf
stc
xchg
insl
decl
mov
xor
cs
dec
mov
inc
inc
mov
icebp
cs
int3
jmp
jmp
push
call
aas
adc
shr
mov
and
pop
arpl
jl
rcr
xor
sahf
dec
daa
mov
fstp
and
mov
push
push
fistpl
jmp
inc
or
jmp
mov
jle
cmp
in
pushl
sbb
mov
call
jmp
jg
jns
jmp
aad
add
xor
sti
push
sub
cmpsb
xor
jmp
aas
sbb
data16
sti
xor
adc
lret
decl
sbb
test
es
loopne
outsl
inc
cmp
movsb
ficoml
lret
jle
push
mov
dec
push
decl
ret
sub
nop
loope
push
jmp
jle
pop
xchg
test
cs
jmp
push
scas
clc
stc
sbb
pop
fcomip
sahf
hlt
leave
ret
call
xor
add
push
movsb
adcl
jmp
pop
adc
rol
call
jl
cwtl
mov
mov
xorl
cmp
jle
mov
and
lret
sti
nop
sarb
les
bound
dec
push
pushl
aas
fistl
xlat
jno
imul
sbb
mov
push
in
xor
adc
mov
xchg
push
adc
mov
popl
push
mov
cmp
decl
mov
imul
bound
jns
xor
notl
into
je
jmp
and
mov
xchg
std
stos
push
lret
pushf
in
loop
mov
push
inc
or
push
out
cs
dec
popl
sub
lods
lods
pop
out
mov
lods
lock
pop
dec
lds
loopne
pop
ds
mov
sti
push
je
sub
ja
xor
sbb
pushf
stc
add
pop
pop
jge
cmp
call
mov
cwtl
mov
add
test
mov
cmp
ss
adc
jge
lcall
jecxz
scas
cs
in
shrb
nop
mov
pushf
je
inc
push
lfs
pushl
jbe
popa
out
mov
fs
out
fistps
mov
add
jp
es
xor
lcall
jbe
arpl
cmpsl
pop
jno
mov
pop
sbb
lods
hlt
and
inc
or
sub
push
ds
ljmp
jb
xchg
mov
mov
adc
cs
insl
imul
aaa
fadds
xor
mov
into
mov
repnz
xchg
fstp
out
lret
rcrl
xchg
pop
jb
lods
outsb
incl
mov
xor
add
inc
daa
test
jne
lcall
adc
cmp
fisubl
pushf
and
mov
dec
repz
into
jbe
test
sbb
lcall
sub
fists
iret
inc
flds
sbb
jnp
shll
or
pushf
cmp
ljmp
mov
rcl
ret
aas
in
test
xchg
add
xor
jae
mov
inc
pop
out
cmc
mov
aad
push
add
pop
out
jae
decl
xor
sbbb
ljmp
out
enter
stos
xchg
in
lds
fadds
shr
pop
pop
cmp
cmp
lods
popa
cmp
mov
jp
cmp
out
test
inc
or
inc
das
inc
xchg
push
mov
mov
pushl
add
inc
xor
test
ja
add
xchg
pop
cmp
adc
xchg
enter
cmp
fmulp
push
jle
data16
jmp
inc
iret
icebp
sbb
leave
mov
cs
lods
in
push
dec
sbb
or
call
xchg
jnp
sub
pop
dec
jecxz
lods
xchg
les
xchg
mov
sub
ljmp
insl
push
pop
jno
cli
jno
ficompl
rcr
addl
in
fisttpll
mov
xchg
inc
incl
pusha
pushw
incl
and
push
jb
jp
dec
test
in
fistps
mov
lcall
jmp
fs
lcall
addr16
push
dec
jns
xor
pushl
lods
movsl
cmpsb
push
or
push
mov
jge
xor
aas
in
call
outsl
xor
loopne
mov
pop
fnsave
ds
inc
adc
insb
lea
push
decl
mov
push
jb
fimuls
enter
clc
xor
iret
pop
ljmp
lcall
dec
rorl
repnz
push
adc
subb
test
xor
lcall
sbb
stos
gs
call
adc
cwtl
push
outsb
mov
decl
dec
xor
sub
dec
in
mov
pushf
scas
push
pop
or
xor
ja
mov
jmp
sub
fwait
outsl
pop
xlat
jnp
xor
xor
iret
cmp
out
rorb
or
jmp
fisubl
cmpl
inc
loop
bswap
dec
repnz
test
popl
mov
lcall
lcall
dec
iret
push
xor
and
pusha
incb
sar
push
cs
call
push
data16
clc
les
push
push
inc
xor
stos
ss
cmp
xor
fsubp
arpl
lcall
pushl
sub
xchg
es
xlat
pop
pop
movsl
xchg
mov
pop
imull
repnz
scas
mov
mov
decl
loope
add
cld
xchg
daa
add
or
mov
sahf
out
imul
xor
pop
je
cli
lods
stos
testl
scas
ret
push
jbe
dec
add
jecxz
popf
out
and
decl
mov
std
lret
pusha
sahf
loopne
movsb
loop
sbb
fcmovu
sarb
pushl
lods
xor
sbb
cli
ja
dec
and
dec
push
mov
jmp
xchg
aaa
dec
pushf
jmp
push
scas
xor
jp
cmc
cltd
das
cwtl
insl
adc
mov
fsubr
loop
movsb
fwait
mov
test
fisttpll
aad
aas
inc
pop
aam
or
pop
test
insl
sbb
inc
ljmp
incl
mov
outsl
das
mov
addr16
cltd
fst
xor
jno
cmpsb
pushl
jo
sbb
lret
iret
sbb
addl
cwtl
mov
loopne
fwait
sub
jmp
imulb
imul
xorl
movsl
and
xor
mov
decl
dec
xor
popa
jo
test
xor
mov
add
cmp
lods
outsb
stos
scas
lods
mov
inc
je
mov
dec
in
icebp
and
aaa
int
fcomp
imul
jae
cmpb
sub
test
inc
fnstsw
or
sub
fs
stos
ds
fucom
insb
out
loope
ds
jmp
mov
popf
movsl
addr16
arpl
fidivrs
xchg
in
jecxz
ds
incl
cmp
push
dec
and
scas
adc
loopne
jmp
jmp
and
daa
gs
lcall
in
in
sub
pop
and
bound
add
ds
jg
sbb
sbb
xchg
xor
jle
xchg
std
and
and
ljmp
xor
ss
mov
push
cmpsl
ljmp
icebp
adc
call
mov
int
enter
fists
jmp
std
pop
adc
popa
add
pusha
sarb
repz
sub
aam
dec
rcl
pop
pushl
xchg
pop
das
clc
rep
inc
cmp
pop
xor
lcall
stos
outsb
adc
fiadds
xchg
add
dec
or
xor
pop
stc
mov
xchg
sub
iret
jp
xor
dec
out
call
loope
mov
push
xor
cs
push
test
fbld
mov
ss
jmp
sbb
loop
mov
movsl
xor
scas
lret
lcall
adc
xchg
push
sarl
mov
sarl
fisttps
sub
dec
pop
sbb
jb
pop
daa
sbbb
pushl
aas
push
pop
out
out
sub
pop
xor
and
daa
sub
pop
inc
cmpsl
push
or
jns
sub
mov
jae
ja
adc
cli
out
ds
stc
xchg
jne
adc
mul
lods
stc
ljmp
mov
mov
sub
bound
cmp
aas
hlt
mov
out
jecxz
lcall
repnz
lret
lret
into
stc
adcl
and
mov
into
xchg
xchg
jae
into
xchg
aaa
jmp
test
jmp
xor
xor
push
xchg
out
cld
je
dec
cmp
cmp
xor
xchg
jae
push
int3
add
stos
xchg
pop
mov
push
stos
loopne
pushf
bswap
cmp
jmp
pop
jg
mov
jns
mov
ja
imul
movsl
rcrl
lock
jno
call
pushw
outsl
jmp
imul
and
pushf
icebp
icebp
push
jnp
call
and
decl
jge
test
mov
je
movsl
stc
ljmp
fisttps
sbb
ja
xor
incl
les
or
cmp
pop
orl
pop
jnp
mov
pop
mov
xor
xor
jge
lcall
xor
out
call
test
shrb
dec
adc
incl
test
call
push
sub
repnz
sbb
rcl
stos
mov
cmp
enter
mov
in
pop
dec
mov
outsl
outsb
push
jge
cmc
add
mov
ss
call
inc
inc
pop
incl
pop
or
fs
mov
lods
outsl
and
insl
or
ljmp
jo
push
push
out
mov
shl
sti
sub
ds
in
inc
insb
loopne
cld
fs
popf
mov
cmc
ret
push
mov
adc
repz
sbbl
daa
subb
dec
cwtl
call
cmp
jmp
jp
cld
nop
and
pop
push
in
aas
in
dec
jno
pusha
test
jo
mov
mov
scas
shlb
arpl
jg
pop
icebp
add
mov
outsb
xor
js
enter
mov
decl
test
aaa
push
pop
gs
xor
push
mov
sbbl
cmp
mov
or
lret
sub
imul
mov
mov
nop
repz
mov
mov
inc
repz
loope
movsl
push
sub
dec
dec
inc
mov
pop
mov
cltd
ret
lcall
ret
out
jno
xchg
pop
ficoml
bound
sarl
mov
xor
shrl
ljmp
xchg
stos
int
cmp
or
data16
push
dec
popf
add
shlb
lcall
jp
daa
inc
mov
mov
mov
push
fidivrl
dec
sbbb
in
jecxz
stc
mov
ss
adc
insl
repz
push
outsl
out
adc
pop
fisubrs
pushl
dec
sub
lret
stos
mov
lds
ficoml
mov
cmp
pop
bound
bound
loop
out
sbb
jnp
and
inc
xor
test
leave
add
xor
jle
cltd
jae
dec
fucomi
aad
out
cwtl
cmc
clc
and
pusha
jmp
mov
xor
inc
adc
lcall
sbb
inc
js
imul
or
mov
sbb
lret
loope
xor
ljmp
and
mov
jecxz
adc
xlat
mov
lret
cmp
jmp
add
test
je
pop
ljmp
cmp
stos
and
mov
repz
or
cli
icebp
and
add
decl
daa
push
add
mov
mov
xchg
pop
roll
or
sub
jl
out
sbb
call
test
rorb
xchg
pop
cli
outsb
ja
outsl
roll
adc
mov
fdivr
mov
xchg
inc
jmp
pop
mov
xor
sahf
push
push
nop
sti
xchg
jg
imul
jmp
cmp
in
sbb
testl
pop
jg
inc
loop
xchg
js
sbb
jmp
ja
mov
test
mov
pop
test
sub
lods
mov
inc
add
das
cltd
fnstcw
lock
shr
rcrb
sbb
lahf
adc
cmp
cmpsb
out
cli
mov
fisttps
xlat
iret
push
mov
out
rorl
xchg
xor
xor
scas
std
inc
aad
ficompl
mov
popa
sbb
sti
or
jo
out
arpl
dec
ljmp
test
loope
or
jns
add
jno
jge
sub
out
push
subb
lcall
sub
stos
iret
insb
cmpsl
add
push
pop
maskmovq
notl
lret
inc
adc
pushl
loope
dec
or
cmc
cmc
mov
pop
sbb
js
andl
sbbl
push
fsubrl
imul
shll
negb
mov
push
jne
and
mov
jmp
adc
add
add
incl
push
add
adc
jb
arpl
sub
icebp
or
rcll
push
pushl
dec
xor
and
loope
out
mov
mov
in
xchg
cmp
insl
dec
popf
fsubrs
movsb
jb
imul
pop
test
std
lret
cmp
in
xlat
push
stos
lods
push
enter
push
and
out
push
or
and
lret
pop
test
mov
inc
repz
mov
jmp
mov
movsb
rcll
lret
push
mov
and
mov
mov
jno
out
clc
pushl
lret
mov
or
dec
and
sbb
rclb
outsl
movsb
dec
push
and
test
incl
push
mov
sub
mov
popa
data16
mov
ret
jnp
and
lock
fimull
cs
ss
add
popa
mov
rorl
inc
pavgb
mov
cmp
mov
dec
inc
movsl
jle
mov
jno
jnp
addr16
adc
add
das
daa
leave
lret
enter
inc
inc
stos
push
popf
aam
cmp
mov
jl
inc
lret
add
out
add
rcr
adc
push
pop
arpl
mov
jno
les
fnstsw
sbb
lahf
sbb
sbb
clc
push
insb
jns
mov
cmp
jnp
mov
aad
int3
inc
int3
cwtl
addr16
rclb
and
cld
cmp
ljmp
push
xchg
mov
cmp
fucomip
and
xchg
jno
lods
int
or
mov
mov
decl
js
fistps
mov
scas
push
out
aad
js
shll
cwtl
loop
scas
incl
xor
and
mov
inc
jb
jns
add
jle
mov
call
ret
cmc
sbb
pop
mov
loope
pop
mov
gs
mov
or
adc
dec
push
ljmp
push
imul
shlb
imul
cmp
arpl
push
dec
lock
add
fwait
stos
xchg
jbe
stos
int
sub
test
mov
fcmovbe
add
lock
stos
fsub
int3
test
outsl
inc
sbb
jb
mov
inc
xor
sbb
cmc
movsb
add
mov
adc
lock
cmp
call
fwait
or
pop
addl
cld
subl
aam
cmpsl
xchg
call
xchg
pop
lahf
dec
push
inc
mov
fdivl
vmovlhps
and
or
jmp
mov
out
and
xchg
mov
daa
cli
cmp
imul
insb
mov
js
jne
loope
incl
shl
mov
inc
pop
sarb
sbb
push
in
pop
cmp
call
push
adc
mov
ret
pop
adc
movsl
jae
xchg
cmp
mov
pushl
add
pushf
inc
scas
repnz
hlt
and
negb
pop
popf
aam
xor
jge
jg
incl
sbb
dec
jnp
loope
push
sbb
adc
xchg
ret
xchg
jp
xor
sarb
ljmp
mov
nop
fidivrl
popf
jle
insb
imul
xorl
and
mov
dec
xchg
cmp
mov
test
mov
xor
div
das
mov
decl
mov
push
fildll
pop
loop
fmull
jp
repnz
mov
aas
stos
xchg
jb
xchg
lahf
sbb
in
fcompl
or
jl
movsl
cmpsl
insl
cmpsl
jmp
lcall
xor
cmpsb
lds
xchg
jl
out
test
xor
test
jmp
aam
arpl
je
shl
shrb
flds
sub
imul
cmpl
mov
cli
jl
push
arpl
rolb
dec
pop
out
ret
cmp
hlt
int
cwtl
clc
sarb
call
cs
enter
in
pop
inc
mov
cld
cld
xchg
in
pop
fnsave
pop
jmp
ljmp
addr16
bound
jb
pushf
jno
cwtl
mov
test
decl
inc
fs
cmc
arpl
dec
mov
ljmp
loope
mov
cmp
adc
jecxz
jle
cs
adcl
add
incl
cmpsb
adc
sub
or
cld
fimull
mov
mov
xor
lcall
dec
sub
xlat
lock
pop
outsb
loopne
sub
sub
leave
incl
sbb
inc
mov
fadds
enter
shrb
icebp
mov
scas
lods
les
mov
setg
inc
out
jns
or
jo
push
in
cltd
fsubrl
mov
clc
inc
and
ljmp
sub
mov
popf
add
cmp
hlt
sbbb
push
push
loopne
aam
push
lds
mov
push
pop
xchg
rcl
or
pop
pop
iret
popa
xor
xchg
or
fbld
outsl
push
call
add
mov
dec
jbe
sub
sbb
sbb
xchg
incl
nop
mov
and
xchg
push
cmp
adc
cmp
or
mov
ret
jno
dec
add
jmp
adc
je
inc
and
outsb
lds
jge
repz
js
xchg
and
adc
sub
jae
jmp
inc
jb
xchg
lret
adc
push
out
in
xor
movsl
cs
push
decl
int
pop
mov
lods
sbb
xchg
daa
mov
cmp
inc
leave
xor
lcall
or
cmpsl
xor
test
add
lods
sub
cmc
sbb
cmpsl
cmpl
xchg
loop
rcrl
mov
mov
push
icebp
ror
enter
or
aad
inc
push
mov
ljmp
or
outsl
movsb
enter
leave
add
aas
push
repz
mov
rolb
cmp
fptan
xor
sbb
inc
cld
test
pop
rclb
mul
sti
dec
jno
xchg
dec
cwtl
push
pop
arpl
lcall
dec
notl
sbb
cltd
test
fmull
adc
jnp
fcompl
decl
test
fcompl
pop
dec
adc
sub
std
andb
cmp
jmp
addr16
jmp
nop
cmc
mov
fsubl
fidivrl
xor
icebp
push
lcall
and
cs
mov
call
or
dec
daa
sarl
or
lret
stos
fcoml
jl
mov
mov
incl
push
cmc
movsb
push
loope
rclb
fs
sarl
inc
sbb
jae
pop
xor
rcll
jge
adc
cmp
adc
pop
inc
lock
stos
push
out
xchg
loopne
sbb
call
fnstcw
mov
rorl
lret
inc
fistps
mov
and
jmp
lods
add
mov
push
lret
pop
mov
xchg
mov
outsl
cltd
arpl
xchg
lods
mov
lcall
negl
sbb
enter
fs
sbb
and
mov
jb
sbb
mov
pushl
push
xchg
jne
pop
mov
imul
dec
repz
daa
push
xor
dec
subb
inc
enter
push
cmp
test
outsb
rol
incb
popw
mov
jge
rcll
dec
addr16
pushl
jo,pn
popf
inc
cmp
xor
iret
imul
daa
adc
add
mov
fwait
pop
pop
mov
into
push
or
sbb
insb
es
or
sti
daa
lods
je
sbb
test
pushf
mov
incl
and
cmpsb
sbb
dec
pop
inc
mov
mov
jmp
shlb
jmp
jl
insb
sub
push
push
test
je
imul
pop
xchg
mov
ljmp
jne
pop
push
pop
loop
lds
mov
adc
mov
insl
sbb
xor
and
js
es
incl
bound
into
xor
fildll
dec
xor
pop
fs
ffree
cli
lock
movsl
lock
jmp
cli
imul
xchg
pop
nop
int
xor
aas
mov
cwtl
iret
cmc
lock
push
sarb
call
hlt
mov
popa
pop
cwtl
adc
xchg
push
push
cmpsb
dec
clc
xor
and
imul
ljmp
cli
jecxz
sub
mov
ds
repnz
cmp
inc
or
push
aas
out
inc
push
xchg
sti
mov
decl
pop
adc
adc
ljmp
mov
jno,pt
test
lcall
xchg
mov
popa
add
inc
push
cmp
in
rcrb
je
xchg
pop
pushl
cmp
sbb
add
loop
inc
and
fisubrs
adc
and
outsb
dec
scas
mov
lcall
idivl
dec
cmp
ret
inc
ljmp
mov
and
loope
inc
call
incl
cmp
mov
lds
sub
or
ljmp
lret
adc
pushl
bound
mov
lods
das
inc
pushf
or
stos
mov
pop
xor
loop
std
mov
lcall
dec
add
mov
mov
repz
nop
jb
ja
adc
inc
test
mov
decl
mov
sbb
fildll
fiadds
das
push
jg
xor
lea
jnp
ljmp
decl
mov
clc
rorl
enter
out
mov
mov
xchg
movsl
out
subb
dec
pop
test
loope
lahf
add
or
cs
xor
pop
jp,pt
mov
pushl
mov
sbb
mov
xchg
repz
jb
jb
scas
pop
cwtl
jo
adc
loop
pushl
cld
sbb
push
jo
xor
sub
mov
aas
outsb
lret
daa
insb
add
jmp
das
jecxz
cmc
out
xchg
mov
roll
jbe
loop
mov
adc
mov
js
fldl2t
lret
adc
dec
push
mov
mov
shll
jge
inc
andps
mov
incl
int3
mov
ret
lret
xchg
js
cli
lret
jno
jne
in
bound
push
pop
into
scas
push
push
xor
lods
ret
push
shrl
mov
pusha
xchg
adc
out
fimuls
xor
pop
dec
sbb
sbb
incl
mov
push
pop
xchg
xchg
or
out
pop
sbb
jecxz
mov
mov
jmp
push
push
push
ljmp
ja
hlt
jl
push
or
fcoms
decl
xchg
dec
in
je
test
hlt
lods
jle
and
out
pop
inc
mov
dec
push
ljmp
add
movb
and
ret
pmaddwd
sub
cmp
in
jl
rclb
xchg
dec
mov
mov
mov
shll
lahf
aam
jp
inc
jmp
stc
cmp
dec
movsb
mov
xchg
jae
or
xchg
icebp
mov
inc
nop
mov
dec
pop
cmp
jbe
adc
lcall
mov
repz
sbb
add
fldl
arpl
and
aad
mov
incl
mov
insl
inc
mov
or
sub
ror
mov
sub
call
adc
push
push
inc
adc
pop
imul
and
or
shrb
push
ss
aas
ljmp
mov
mov
dec
mov
cmp
xor
sub
test
in
shlb
inc
sbb
dec
ljmp
popa
sahf
in
mov
cmc
push
lret
call
jb
out
repnz
add
xor
iret
dec
pop
add
xchg
adc
clc
lcall
filds
inc
out
ss
pop
push
les
call
xchg
dec
sub
fisubs
and
sbb
jb
out
xchg
xor
jge
cmp
call
mov
jae
cmp
leave
call
insl
mov
rcll
inc
cmp
xor
dec
cltd
jns
call
orl
push
cmp
daa
mov
test
call
bnd
nop
addr16
mov
divb
loop
dec
mov
int
lcall
mov
cs
decl
fnstsw
add
imulb
lds
test
push
push
push
xchg
inc
jge
add
es
jnp
adc
imul
repz
sahf
jmp
js
jno
pop
pushl
and
mov
loopne
mov
ds
and
sbb
aad
add
std
jnp
mov
cmp
xchg
jecxz
call
sbb
xor
ret
push
cwtl
in
loop
cmpsb
fildl
ljmp
bound
dec
or
fcmovnu
or
push
mov
pop
mov
repz
sarl
push
mov
scas
or
aaa
test
add
xor
call
das
mov
decl
ds
leave
popa
inc
add
xor
xchg
je
xchg
ret
pop
movl
in
adc
movsl
idiv
call
ret
add
leave
jns
in
jp
adc
stos
loopne
bound
rorl
jge
cs
ljmp
cmp
inc
stos
jle
pop
leave
xchg
das
js
pop
jo
xchg
xchg
cli
loope
sbb
cs
decl
mov
xchg
cmp
pop
aaa
sub
dec
shll
cmp
imul
call
jb
aaa
adc
sub
mov
jno
jp
insb
lds
fidivrl
jns
hlt
cs
pop
jae
mov
iret
insl
call
icebp
mov
pushf
stos
ss
movsb
xchg
mov
incl
lret
mov
jg
add
movsl
mov
fmul
idivl
adc
sub
add
nop
data16
les
jns
jmp
pop
andl
mov
mov
xor
pop
clc
xchg
push
lods
enter
lods
lcall
mov
cwtd
mov
mov
inc
call
outsl
jns
lods
mov
inc
stc
aas
inc
out
sti
xchg
cs
hlt
xchg
js
sbb
pushf
scas
call
cmp
pop
mov
sub
decl
add
jbe
mov
add
sbb
jo
jg
les
mov
push
lcall
outsb
xchg
adc
mov
cmc
mov
dec
mov
adc
pop
in
or
sub
jge
add
jmp
test
repnz
test
xor
cltd
adc
pop
dec
xchg
repnz
cmp
and
call
aaa
push
je
xchg
sti
add
xchg
les
dec
add
inc
movsb
pop
push
mov
dec
int3
sahf
lret
js
mov
sub
aaa
sbb
xlat
out
js
mov
dec
push
mov
push
cmp
cmp
sbb
adc
dec
int
mov
rorb
fbld
in
mov
decl
jae
lret
popf
fisttpl
and
adc
pop
push
inc
vminss
leave
mov
jmp
push
loope
insl
mov
sub
idiv
pop
pmaddwd
inc
subb
jle
lret
jmp
add
mov
outsb
sbb
popf
push
int3
dec
js
mov
push
cmp
pushl
sahf
pop
or
push
test
mov
stc
jo
mov
je
jecxz
or
jmp
leave
mov
cmpsl
test
pop
shrb
cmp
jno
les
adc
repz
push
sar
jmp
gs
sbb
sub
or
jo
inc
out
sbb
call
lock
xor
leave
xchg
cmp
and
cmp
into
push
ficoms
test
ljmp
out
shll
and
scas
mov
sub
jg
dec
sub
decl
orb
lcall
pop
jae
adc
adc
in
mov
incl
mov
out
in
adc
or
punpcklbw
pop
lret
jae
pop
xchg
in
sahf
je
jmp
or
and
out
loopne
fcoms
in
inc
lds
pop
inc
stc
jb
mov
mov
sbb
jmp
pushf
repnz
in
js
cwtl
and
out
xor
push
test
repz
add
pushl
popf
adc
mov
sbb
push
les
xchg
mov
jmp
stos
int3
aam
sahf
lret
loope
aas
cld
pop
mov
sbb
in
mov
arpl
cs
add
js
pushl
repz
outsb
add
pop
or
icebp
jne
jnp
push
xchg
addl
lret
jne
sbb
lcall
pop
adc
sub
ds
xchg
cld
jns
jns
pop
test
icebp
stc
out
jle
inc
xchg
jae
incl
xor
loopne
xor
fisttpll
aaa
ret
call
sub
push
and
pop
fldenv
jnp
fcoms
dec
aas
jne
dec
loope
jg
bound
jmp
dec
cld
pop
push
mov
rorl
mov
stc
dec
mov
outsb
ljmp
dec
xor
mov
test
xchg
mov
xor
sub
lds
ljmp
mov
pop
addr16
mov
imul
aaa
inc
sti
dec
xchg
lcall
mov
dec
push
sbb
add
or
mov
inc
imul
lcall
and
lret
and
push
out
loop
jo
test
fmuls
jp
jns
lret
dec
lcall
in
sbb
movsb
or
cli
inc
mov
jg
xchg
pop
adc
mov
jmp
jno
add
mov
int3
inc
dec
or
ljmp
lcall
ljmp
cmp
or
lods
xchg
add
mov
jae
or
adc
xor
pushl
ja
aam
ds
insb
xor
mov
iret
leave
push
jno
and
xchg
sti
jecxz
xchg
and
cmp
out
cmp
aas
adc
mov
ret
nop
dec
inc
jo
fcmovnb
arpl
mov
and
aas
inc
push
mov
repnz
out
add
mov
ljmp
or
adc
hlt
mov
push
scas
inc
xor
cs
nop
adc
xchg
testb
inc
fs
lahf
test
mov
out
movsl
xchg
subl
lcall
out
cmp
push
or
ret
sbb
xor
or
mov
pop
popf
nop
jo
jmp
testl
xchg
inc
cmpb
popa
jmp
shlb
fdivs
pushl
and
rorl
int
sub
mov
jno
arpl
add
ret
jmp
incb
arpl
cwtl
orb
fnstenv
fisttps
jmp
ss
adc
popa
ja
xchg
pop
dec
sar
cli
mov
out
mov
in
ror
push
cmp
outsl
add
sbb
push
sbb
cld
ret
pop
jecxz
call
jecxz
lock
jg
and
rorl
das
adc
pusha
pop
lock
push
imul
cmp
mov
push
mov
hlt
mov
sub
data16
sub
adc
mov
sub
cmc
sbb
push
inc
mov
xor
push
imul
and
cmp
pushl
push
fstpt
push
inc
lret
ds
cmp
testb
mov
in
sub
dec
cmpb
sub
lret
ja
pop
hlt
data16
jo
test
mov
cmpsl
in
xchg
lret
pop
sbb
mov
int
sub
mov
outsl
dec
and
mov
jns
jb
and
movsb
inc
cltd
jmp
fdivrs
pushw
cmp
pop
jo,pn
add
std
and
push
pop
sub
incl
ret
and
outsl
stos
int3
stc
xchg
test
pop
in
test
mov
pushl
pop
mov
sub
jne
dec
jns
stos
pop
inc
dec
imulb
int3
loop
into
jnp
decl
sbb
stos
cwtl
popa
ljmp
inc
pop
adc
push
and
add
jmp
imul
addr16
xlat
js
cli
fcompl
sbbb
jmp
jne
pop
ljmp
sti
lods
jmp
sbb
out
insl
sub
test
cmpsl
or
incl
mov
pop
cmp
mov
adc
cmp
fcoms
xor
lret
std
lret
cmp
sbb
cmp
sub
mov
dec
pop
lds
call
in
ds
jmp
sub
sbb
jo
pusha
cmp
mov
fdivr
insl
in
lock
sarb
mov
mov
push
shrb
xchg
pushl
sbb
lods
or
sbb
ss
push
xchg
push
lret
out
add
cmpb
ljmp
and
inc
icebp
cmc
mov
not
out
adcb
fs
jp
jge
sub
xchg
mov
mov
lret
jg
lret
aaa
stc
jmp
test
jae
jmp
repnz
sub
in
js
stos
movsb
mov
add
sarb
sub
clc
xor
dec
data16
dec
insb
cmp
fsubs
cmp
push
sub
adc
enter
push
mov
std
inc
sub
xchg
sti
outsb
aam
pop
call
notl
jle
mov
adc
mov
rol
ljmp
pop
iret
in
addl
std
in
movsb
mov
dec
pop
or
stc
xor
mov
call
rcl
lret
scas
fwait
bound
and
outsb
loope
cld
jmp
or
fiadds
cmp
pushl
mov
loopne
and
adc
je
dec
push
inc
inc
ljmp
jl
movsl
mov
ljmp
cmp
cmp
sarb
pop
ficomps
xchg
inc
in
xor
mov
pop
xchg
dec
popa
mov
jno
or
les
sahf
loop
mov
jmp
cmpsl
adc
pushl
popf
push
aaa
je
ret
cs
loopne
js
adc
sbb
cmp
cmp
data16
push
mov
bound
sub
lods
mov
cmp
fwait
jb
xor
pop
mov
das
adc
mov
jae
add
adc
dec
in
push
filds
incl
jp
mov
xor
paddusw
movsb
in
mov
dec
pxor
mov
incl
clc
cmp
insl
sti
mov
je
stos
jno
fwait
mov
push
pop
int3
sahf
push
push
fnstcw
decl
into
arpl
insb
adc
mov
cli
jg
push
cwtl
bnd
test
outsl
xchg
sbb
jnp
imul
mov
out
inc
rol
inc
add
mov
aas
and
incl
mov
nop
jno
cmpsb
into
inc
adc
jle
fisttpll
or
gs
push
xor
incb
xor
pop
sub
push
in
xor
push
pop
enter
ret
pop
lcall
ljmp
call
mov
cmp
pop
cmp
nop
cli
jne
dec
pushf
jns
loop
lods
fistpll
pushl
sti
cmpsb
pop
xor
push
repz
and
scas
scas
or
mov
ret
inc
lcall
inc
adc
cmp
jge
lods
test
lea
push
mov
test
jbe
or
push
ret
cmp
test
mov
sub
jp
mov
leave
sbb
out
mov
test
adc
dec
cmpsl
imul
sbb
and
jb
mov
stos
push
xchg
decl
xor
cmp
fstps
fwait
je
mov
shll
pusha
fisubrs
jmp
outsb
pop
mov
inc
xchg
mov
fists
in
in
sbb
xchg
jle
push
ret
iret
jae
movsb
inc
dec
outsb
sbb
insb
imul
dec
xchg
sub
sbb
dec
xchg
cmp
xchg
dec
sbb
sbb
fisttpl
and
adc
mov
mov
mov
call
cmp
sub
cwtl
aam
mov
xor
int
iret
or
or
dec
sbb
jge
cmpsb
jl
rcr
sbb
jae
sub
popf
mov
mov
inc
insb
or
push
incl
fsubl
ja
or
dec
adc
add
loope
test
mov
das
jmp
push
sti
and
nop
jns
pop
pop
and
mov
adc
jb
sub
jmp
mov
xchg
pop
repnz
mov
ret
or
lcall
cmpsl
ja
ja
jecxz
and
stc
loope
lods
dec
jae
sbb
shrb
movsb
and
popf
mov
mov
sub
cmp
call
js
dec
ljmp
dec
jle
jle
xor
mov
cmp
pop
aad
call
cmp
shrl
cli
cwtl
cmpsb
mov
fdivrs
xor
popf
cmp
lahf
push
mov
ljmp
out
out
out
push
mov
iret
xlat
mov
pop
sub
pop
xchg
call
loope
or
inc
pop
xchg
and
jg
imul
push
fsts
or
xor
lcall
or
adc
pushl
nop
cmp
push
mov
or
test
aam
adcb
inc
or
fdivr
xor
ret
lods
pop
mov
dec
inc
pop
push
xor
cmp
add
pop
ret
xor
call
inc
shr
or
xchg
cmpsb
es
sub
lcall
call
incl
mov
sub
adc
or
ljmp
mov
sub
push
push
dec
mov
sbb
mov
lcall
out
divb
add
sub
stos
mov
out
fwait
or
test
xchg
fiaddl
add
mov
sub
pushl
mov
std
cmp
fcmovnu
xor
or
enter
rcll
sub
std
pushl
mov
inc
ficoml
sub
or
in
mov
fnstsw
pushl
dec
sbb
sbb
test
xchg
imul
fldenv
add
xor
decl
jl
jne
mov
repz
movsb
cs
js
adc
adc
into
jb
aad
lret
jmp
test
mov
sub
mov
fmull
mov
aad
xchg
in
jmp
and
adc
mov
dec
jne
loopne
adc
sbb
jb
inc
popa
daa
inc
pop
cmpsb
sub
mov
inc
aad
decl
dec
mov
jnp
cld
pop
imul
jg
call
xchg
mov
xchg
lcall
xchg
pop
movsb
jecxz,pn
popa
xchg
pop
push
jnp
ret
xor
cmpsl
scas
xor
decl
push
lock
data16
pop
ja
in
xchg
pop
adc
outsl
add
stc
sub
mov
fdivr
lcall
mov
push
shrb
test
aas
xor
into
or
adc
fcmovnb
ds
sbb
outsl
lock
xchg
decl
out
mov
add
daa
cmpsl
mov
fcomps
inc
pop
and
sub
cmp
or
jmp
scas
cmp
xor
dec
mov
mov
or
int
lret
or
call
repnz
mov
ret
sub
sbb
aaa
push
push
mov
xor
ljmp
pop
sbb
std
cmpb
jo
jg
jmp
fwait
dec
mov
add
cs
xor
jmp
fsubr
adc
inc
mov
adc
dec
sahf
lret
xchg
inc
pushw
jp
ret
push
jp
add
cmpsb
pop
je
fninit
shll
inc
ss
mov
push
out
push
mov
xchg
dec
push
xchg
pop
push
pop
pop
ljmp
dec
addr16
loop
sub
mov
sbb
push
outsl
xchg
dec
arpl
out
jb
aad
dec
insb
sbb
inc
pop
mov
mov
ss
inc
jno
add
pop
xchg
cmp
inc
int3
daa
sub
push
push
fisttps
ss
es
cmp
cld
ljmp
clc
std
stos
xchg
mov
pop
mov
push
sub
and
outsl
xchg
vpmulhuw
cmpsl
pop
fisubs
jnp
loope
xor
mov
push
dec
int3
push
sahf
jp
lret
pop
jge
mov
sahf
cmp
dec
or
jae
add
out
pop
jae
outsb
xchg
fwait
jmp
sub
or
inc
jmp
jo
adc
adc
sar
pushf
lcall
addl
fldenv
call
das
xchg
mov
lds
inc
adc
bound
int
pop
rcrb
incl
sbb
inc
or
lret
add
jne
ljmp
sub
pop
push
xor
imul
ljmp
idivb
xchg
xchg
in
ret
insb
sti
test
mov
imul
inc
test
shlb
push
jmp
jle
data16
add
cmpl
int
cmp
aad
mov
mov
decl
mov
pop
mov
xor
out
call
and
lcall
leave
sarb
add
dec
cmp
dec
int
push
add
xlat
sbb
xlat
cmpsl
adc
stos
test
mov
in
jmp
int
jecxz
xchg
stc
idiv
jae
xchg
mov
in
fiaddl
icebp
and
test
call
cmp
aam
les
fwait
test
movsl
in
mulb
fiaddl
cmc
xchg
daa
je,pt
sarb
jnp
insb
push
sbb
lock
and
decl
fbstp
imul
in
add
or
pop
ret
sub
adcb
call
jne
gs
std
lea
mov
push
fwait
or
dec
imul
pop
pop
mov
lcall
das
dec
and
mov
pop
mov
and
adc
sbb
ret
mov
jmp
pusha
stos
sub
jecxz
scas
pop
inc
sub
sbb
cmpsb
shrb
jnp
repz
or
decl
mov
in
xchg
adc
fwait
les
sub
or
xor
push
mov
sub
jns
addl
mov
andb
stos
jo
jnp
movsl
sub
jmp
mov
aad
mov
lcall
push
gs
dec
or
or
dec
jmp
jmp
jmp
mov
int3
push
mov
sub
int3
pop
push
mov
lock
out
push
mov
fdivl
jne
movsb
shlb
in
xchg
jp
outsl
lock
jge
pushf
sub
cmp
cli
cmp
shlb
or
lods
mov
popf
aaa
pop
jl
jp
iret
mov
push
stos
dec
jg
mov
cmp
mov
pushl
arpl
call
pop
pusha
or
sub
cld
lods
ret
pop
adcb
in
test
xchg
add
clc
xor
subl
pop
add
mov
sub
jmp
lock
jp
fdiv
add
test
push
inc
aas
cmp
das
es
jle
mov
imul
in
test
inc
leave
ja
add
xor
daa
aad
pop
mov
cltd
pop
sub
jmp
adcl
popl
push
sub
cmc
mov
jg
pop
jbe
sarl
and
jmp
pop
cltd
fistpl
arpl
push
lods
movsl
xchg
scas
push
stos
adc
fcompl
or
call
sub
std
dec
out
js
mov
imul
adc
mov
mov
call
outsb
inc
lea
jne
and
xchg
pop
lods
xor
pop
cmpsl
xchg
adc
cmp
pushl
fwait
popa
mov
xchg
fisubrl
mov
pop
cs
or
insb
int
stos
mov
call
stos
xchg
fdiv
jmp
mov
xor
das
pop
sub
mov
clc
dec
cmp
sbb
xor
dec
mov
iretw
imulb
sub
jbe
cli
hlt
data16
in
push
in
movsb
xchg
pushl
xor
jo
mov
andl
push
xor
decl
cpuid
pushf
xor
aam
adc
cmp
jne
pop
xlat
das
lock
cwtl
mov
inc
in
lcall
lods
outsl
mov
out
cmp
popf
mov
jge
pop
sub
push
mov
dec
mov
das
xchg
sub
push
dec
cmpsb
add
jno
xorb
mov
cmp
call
loopne
lcall
mov
out
pop
lcall
test
mov
out
lods
jmp
lea
dec
push
andb
aas
notl
addl
outsb
mov
mov
or
aam
ljmp
adc
ljmp
bound
pushl
xor
stc
rcrl
sarl
dec
sar
sbb
imul
dec
cmp
jb
pop
sbb
fsubrl
mov
mov
inc
iret
adcl
arpl
pop
dec
fadds
inc
mov
sar
call
cmpl
orb
lock
out
jmp
sbb
mov
adc
sub
inc
xabort
sub
jge
mov
and
or
insb
mov
pop
xor
inc
ljmp
pop
ljmp
cmpsb
dec
dec
rcl
int3
jg
out
add
insl
scas
sub
jbe
jmp
sbb
add
inc
mov
inc
ja
sub
cmp
xor
sahf
imul
incl
mov
aas
lret
aaa
loope
ja
jb
and
mov
or
decl
sets
push
mov
jecxz
or
popf
push
mov
jge
inc
xchg
shrl
ljmp
movb
pop
inc
sti
lea
inc
mov
push
cmp
cltd
in
mulb
dec
push
ss
repnz
push
sbb
movlps
inc
outsl
inc
xor
mov
and
lcall
mov
xchg
popa
icebp
repnz
or
imul
push
and
mov
loope
decl
ss
mov
and
pop
in
jb
out
inc
fdivrl
dec
ss
pop
popl
decl
sub
xlat
test
idiv
inc
in
cmp
test
sub
fisubrl
adc
test
stos
push
push
mov
repnz
dec
cmpsl
dec
sub
stc
xchg
cmovb
push
ret
or
in
incl
pop
int
js
insb
aas
inc
mov
mov
xchg
stos
jp
fisttpl
cli
outsb
in
or
pushl
push
nop
rolb
sahf
icebp
or
out
dec
mov
aas
or
mov
into
or
pushl
jns
adc
sbb
xorb
movsb
and
pop
pusha
dec
jae
mov
shrl
incl
ljmp
cmc
lods
in
ret
or
js
rcll
and
imul
jmp
test
clc
pop
jbe
sub
dec
adc
cltd
out
in
aad
orl
xchg
or
in
incl
rclb
aaa
fcomps
xlat
pop
fistpl
shrl
subl
jmp
inc
test
push
sbb
ljmp
add
sub
mov
pop
out
in
frndint
push
sub
cwtl
dec
scas
cld
repz
fisttps
fistpl
sahf
cmpsb
insb
stos
repnz
jmp
mov
pop
movsl
or
inc
mov
out
adc
movsl
dec
xchg
outsl
inc
hlt
or
movsl
ret
dec
sub
fnsave
xchg
and
cmp
pop
jmp
jg
fidivl
push
cmp
ljmp
inc
add
enter
push
jb
rcrb
pop
pushf
cmp
jle
pushl
pop
jnp
orl
push
jnp
jnp
inc
and
sub
aad
pushl
ljmp
scas
in
testb
out
push
jae
dec
clc
outsb
and
xor
dec
xchg
adcb
movsl
popa
int
add
pop
out
xor
stos
in
in
enter
daa
lcall
jmp
imul
repz
dec
pop
andl
insl
sbb
imul
call
and
pop
jecxz
mov
loopne
fistps
pextrw
adc
repnz
pop
sbb
fldcw
jmp
imul
enter
cmc
add
icebp
mov
imul
call
ret
scas
xchg
pop
addr16
mov
dec
test
cmp
scas
ret
leave
mov
call
dec
adc
mov
jmp
loop
rsm
std
mov
or
dec
cmpsl
fwait
bnd
inc
test
push
in
mov
fwait
dec
cwtl
push
inc
pop
inc
pop
push
cli
cmp
pop
sahf
decl
add
xchg
enter
xchg
jle
jle
popa
lea
les
xlat
dec
and
add
ds
incl
inc
into
pusha
leave
hlt
scas
jne
fwait
icebp
iret
shrb
mov
and
pop
icebp
xor
lahf
mov
pop
sbb
dec
add
or
cmp
fdivrs
pop
test
pop
cli
mov
xchg
jmp
incl
enter
std
je
jle
mov
push
jb
aas
jns
xchg
pop
loop
push
roll
or
or
pushl
imul
cmpsb
sbb
icebp
sbb
mov
and
call
ljmp
or
movsl
movsl
push
ret
push
jns
or
push
add
xchg
xchg
push
mov
ljmp
loop
imul
push
ficomps
into
mov
lret
jp
scas
scas
add
xlat
or
pushl
pop
adc
enter
pop
andl
data16
push
int3
xchg
inc
mov
incl
pop
imul
fs
mov
mov
mov
rolb
sub
pushl
add
dec
adc
cs
addb
jl
bound
add
push
ljmp
jle
dec
mov
mov
call
out
cs
and
not
and
sbb
ljmp
sarb
dec
mov
ret
out
es
dec
inc
cli
pop
push
xchg
sub
or
decl
add
ljmp
out
iret
add
cmp
adc
inc
out
scas
xor
mov
jns
push
adc
adc
stos
xchg
sahf
test
pusha
orl
ljmp
call
dec
mov
mov
aam
movups
cmpb
cmp
pop
pusha
xor
push
pushl
fisubrl
call
mov
stos
mov
inc
ficoml
call
sarb
xlat
push
xchg
fcom
dec
pop
jo
or
sarb
bound
ror
ljmp
add
outsb
out
pop
rclb
mov
loope
ficomps
decb
pushl
je
xchg
mov
mov
inc
jnp
sbb
xchg
fidivl
xor
testb
in
push
xor
pop
xor
mov
xchg
or
inc
xchg
mov
fnstcw
sub
fcomp
lock
xor
push
lea
jmp
xchg
rcrl
and
stos
jns
sub
xchg
scas
jecxz
repnz
mov
incl
mov
daa
inc
rcrb
sahf
data16
scas
divl
push
popa
cvtpi2ps
mov
outsl
mov
sbb
jns
push
push
mov
jbe
jbe
stos
inc
fmulp
cmp
or
insl
sarl
cmp
or
cmp
call
mov
xchg
in
jno
or
sbb
xor
das
mov
sub
cmp
js
push
in
push
jmp
dec
and
dec
aaa
popf
out
jmp
in
sbb
insl
cmp
shl
incl
loopne
and
rcrl
mov
loopne
ficomps
xchg
sub
cli
inc
jae
cmp
arpl
ret
mov
pop
cs
decb
stc
mov
or
and
rcrb
mov
mov
rcr
mov
pusha
dec
sbbl
and
ja
mov
xor
cli
cs
push
adc
loopne
lret
lcall
or
adc
repz
repz
cmp
rclb
push
and
xchg
xchg
mov
pushl
push
add
push
and
div
pop
pusha
repnz
rcr
js
loop
incl
mov
pop
mov
test
int
pop
stc
or
sbb
int3
xor
ljmp
or
fadds
pusha
faddl
pop
fldt
adc
incl
rcrb
aaa
shlb
outsb
gs
sbb
jmp
sti
gs
mov
sbb
decl
add
mov
iret
mov
call
dec
pop
leave
cltd
insl
rolb
or
sar
pushl
push
adc
or
imul
xchg
mov
adc
xor
lret
in
decl
popf
cmp
mov
ds
cmp
ret
cli
inc
cmp
shll
mov
lcall
shrl
sbbl
dec
gs
outsl
sub
fldl
pop
cmp
shrb
incl
jae
fisttpl
int
push
insb
mov
adc
pop
mov
rcrb
int3
mov
mull
js
mov
dec
ficoms
pop
push
mov
mov
testl
mov
lds
pop
lods
ss
ljmp
cmp
nop
mov
or
mov
mov
xor
jo
sbb
sar
pushl
pmullw
clc
addb
xchg
xor
outsb
in
jle
shll
shll
inc
ret
lret
hlt
push
decl
fcomip
ror
mov
daa
jne
jo
cmpsb
stos
popf
call
cmpsb
and
cltd
dec
call
lret
pop
std
sbb
out
cmp
outsb
inc
push
cmp
int
push
stos
push
les
jnp
push
cltd
lcall
and
mov
out
mov
aaa
inc
fs
push
mov
das
fidivl
mov
pop
lock
jb
adcb
or
rcrl
pusha
push
in
xchg
xor
jmp
outsl
sbb
fstps
mov
mov
lods
pop
lret
ljmp
jmp
test
insb
sti
shlb
ja
and
mov
push
sub
fcoml
jmp
mov
cmc
mov
and
inc
addr16
fildl
or
jbe
call
pushf
pop
jo
imul
mov
jb
sub
scas
jb
loopne
cld
ljmp
push
mov
pop
xchg
xchg
mov
ja
les
cmp
xchg
or
sbb
ljmp
out
mov
add
push
mov
fnstsw
xchg
lea
mov
dec
test
mov
sti
movsl
shr
mov
mov
shll
sbb
or
push
mov
decl
dec
sub
cld
inc
and
sarb
out
dec
ficoms
inc
test
leave
fcmovnb
mov
cmp
jns
sti
imul
mov
pop
hlt
aaa
das
decb
ljmp
mov
fdivrl
adc
test
pop
cmp
dec
sub
mov
aad
les
nop
addr16
mov
aaa
aas
xlat
imul
cmp
jmp
jge
xchg
aam
loopne
out
test
mov
sti
jne
cmp
sbb
enter
dec
aaa
jmp
int
push
xor
bswap
pop
insb
into
push
jg
xor
mov
mov
decl
sub
sbb
cltd
jl
adc
jg
scas
mov
fldt
rclb
into
sub
movsb
hlt
jle
fwait
sub
jp
out
sub
mov
incl
les
push
pop
mov
pop
sbb
adc
mov
sbb
call
stos
pop
iret
cmp
int
xchg
jg
outsl
jb
into
cmpsb
adc
pop
sub
ljmp
xchg
movsb
lds
out
and
in
mov
mov
rcll
dec
ljmp
mov
dec
sbb
pop
ret
adc
adc
pop
mov
cmp
jno
cli
out
aaa
cwtl
push
decl
push
push
ds
cmc
cmc
xchg
pop
js
xchg
adc
adc
pop
repnz
test
inc
mov
jno
scas
inc
mov
sub
inc
jl
ss
jmp
cmp
notl
cmc
sar
popa
push
out
mov
mov
jbe
scas
or
xchg
or
push
mov
call
xor
pop
aaa
test
rol
mov
sub
sar
pop
mulb
call
out
lock
pop
pop
cmp
mov
dec
lods
mov
mov
jle
cmpsb
xor
pop
mov
scas
lcall
aas
scas
jae
xchg
into
jae
test
push
incl
add
sbb
mov
data16
shrl
aam
jbe
ja
xchg
add
mov
push
cmp
roll
sbb
and
loop
movsb
fstl
sbb
fsubl
mov
decl
cltd
daa
jmp
cld
cmp
xlat
xor
mov
jecxz
xchg
movsb
push
cltd
cmp
js
enter
pop
orb
rcl
aas
insb
fldl
out
xor
je
or
decl
aam
dec
fmul
ljmp
sub
sbb
pusha
ret
dec
jne
push
mov
dec
pushl
adc
add
test
test
lret
mov
jmp
sbb
notl
cmp
jbe
loopne
mov
push
inc
addr16
and
jg
repz
jmp
mov
jbe
mov
cmp
xor
push
int3
mov
imul
add
mov
push
in
cmp
js
es
les
mov
mov
popl
aam
or
sub
enter
movsb
daa
xchg
test
jl
adc
xchg
cmpsb
mov
adc
in
out
adc
jp
dec
xchg
lods
ja
clc
frstor
inc
mov
lea
cld
sub
out
fiadds
js
cli
mov
popf
pop
pop
lods
sub
mov
incl
mov
popf
hlt
pop
sahf
movsl
stos
adc
pusha
xor
xor
mov
pushl
mov
xchg
xor
adc
std
out
movsl
push
jo
jl
shlb
mov
orb
or
arpl
fsubl
rorl
mov
dec
sahf
push
sbb
jge
decl
int3
scas
mov
sbb
aam
mov
call
add
int3
add
decl
mov
adc
int3
and
mov
lret
dec
cmp
lods
pusha
sub
pushl
mov
mov
test
jecxz
and
dec
lds
xlat
pop
and
lcall
mov
xor
mov
jge
shl
es
mov
insl
jnp
mov
lcall
sbb
or
xchg
or
xlat
hlt
int3
inc
xchg
adc
popa
icebp
push
pop
std
pusha
sti
sbb
mov
pop
mov
jmp
xchg
test
pop
mov
popf
pop
test
and
das
addr16
cs
sbb
fld
ficomps
xchg
pop
incl
sbb
inc
sub
js
lock
jle
add
addr16
xchg
push
and
cmpsl
test
lss
pop
stos
mov
movsl
jae
xlat
es
and
test
push
icebp
decl
scas
xlat
leave
stos
aam
add
outsl
arpl
mov
div
imul
sub
pop
scas
insb
cmpsl
outsb
jle
and
lds
mov
mov
mov
cmc
mov
in
jne
out
lcall
sub
push
push
test
psrlq
lds
icebp
sti
loope
dec
mov
mov
mov
aaa
sahf
lret
adc
jns
or
mov
inc
fildll
sub
mov
ljmp
jb
out
in
stc
gs
imul
ja
cmp
lds
jg
scas
jmp
mov
cmp
add
jmp
ja
and
pop
test
rcl
xchg
pop
call
insb
jg
idiv
mov
lock
inc
movsb
aaa
ljmp
decb
push
xlat
into
mov
inc
jmp
xor
cmp
and
imul
jnp
pop
dec
icebp
cmp
mov
jmp
and
addr16
sub
xor
inc
add
repnz
int
add
mov
push
mov
inc
mov
or
scas
in
loopne
repz
repz
jbe
shrl
ljmp
mov
pusha
jp
ss
xchg
or
inc
and
xor
lret
nop
and
js
jmp
lahf
mov
sbb
imul
cmp
jb
int
loopne
cmp
movsb
push
add
test
push
add
cmp
es
lock
mov
ret
cmp
je
inc
jecxz
cmp
leave
arpl
ljmp
pop
add
shl
dec
fwait
jae
sarl
inc
xor
xchg
divl
fstps
pushl
sbb
shrb
lock
jbe
cli
daa
pop
xchg
cld
hlt
push
pop
jo
jecxz
lcall
clc
lods
pop
inc
aad
jle
xlat
cwtl
jbe
jp
push
mov
mov
mov
xchg
call
lods
jbe
pop
add
rorl
sub
iret
sub
xchg
xchg
or
mov
pushl
push
xor
sbb
lret
xchg
adc
imul
inc
jmp
js
add
cmp
insb
xchg
push
pop
dec
jecxz
xor
daa
mov
jo
jmp
call
inc
mov
jge
lret
shll
imul
ljmp
imul
cmp
stos
pop
push
cmc
loop
sub
stos
mov
ja
mov
push
call
and
xchg
sti
mov
aam
iret
pop
sbb
inc
pop
lahf
es
addr16
pusha
mov
mov
fiaddl
inc
jne
adc
cwtl
xor
xchg
adc
dec
lcall
lret
and
mov
in
test
sbb
into
jbe
test
or
sbb
ljmp
out
mov
inc
push
sub
mov
imul
jp
ja
ret
xchg
out
das
pop
pop
and
decl
mov
jge
inc
inc
sbb
or
xchg
jno
mov
and
jg
and
decl
add
mov
lds
cmpsl
sar
add
mov
popa
negb
or
stc
iret
icebp
adc
sahf
test
adc
call
dec
rolb
pushf
jmp
insl
push
aad
incl
pop
loope
xchg
add
adc
push
insb
mov
dec
xchg
lcall
decl
popf
and
pop
lret
mov
stos
push
sti
jp
lcall
test
dec
fidivrl
adc
adc
call
or
jnp
cs
dec
jae
mov
xchg
sub
sbb
imul
push
pop
lock
in
fcomps
pop
jg
jg
add
pusha
ja
dec
mov
xor
jmp
adcl
adc
insl
stc
imul
mov
fstpl
sbb
incl
enter
les
addr16
es
testl
mov
lret
jecxz
stc
ljmp
aam
inc
mov
and
push
addr16
push
insb
sti
test
idiv
loop
cmp
sbb
inc
addr16
mov
lahf
bound
xor
cmp
cmp
cmp
mov
inc
lods
adc
push
xor
pop
sub
xor
xor
leave
ljmp
xor
call
dec
pop
call
or
or
lock
pop
popf
movlps
imul
push
and
out
sub
mov
loope
pop
xor
xor
sbbb
jae
cli
adcb
mov
xchg
inc
jle
incl
ds
sbb
pop
xchg
shl
inc
xor
mov
and
mov
lcall
pop
int
sbb
daa
sarl
std
imul
cmp
inc
dec
sbb
push
xchg
jle
aam
decl
and
dec
cmp
mov
outsl
xchg
sarb
mov
push
lcall
cli
cmp
ja
and
push
scas
add
fimuls
ss
inc
subb
call
int3
dec
xchg
hlt
lret
add
dec
or
jl
fwait
into
dec
into
dec
jnp
jg
mov
fs
pushl
std
xor
cmp
jb
adc
sbb
jg
aam
push
test
hlt
call
xchg
loope
and
in
xor
clc
mov
mov
decl
int3
in
mov
mov
and
mov
jmp
push
dec
and
jmp
js
es
lods
lock
xchg
mov
dec
or
insb
xor
cmpl
pushl
lcall
push
push
sbb
sti
jno
push
push
mov
adc
cmp
sub
pusha
out
pop
push
xchg
sub
lret
sub
repnz
nop
fdivrl
push
adc
sub
scas
sti
dec
cmp
cwtl
jp
mov
and
dec
sarl
dec
dec
mov
pushf
jmp
mov
icebp
stos
sub
mov
fdivs
dec
add
decl
sub
push
jno
pop
repz
jg
dec
jge
cmp
sbb
mov
mov
pushl
es
sti
and
sti
sub
sbb
xchg
lods
sub
sbb
jo
sbb
call
js,pt
dec
xor
push
and
mulb
call
mov
cmpsl
push
or
ljmp
mov
ljmp
aas
insb
and
pop
push
out
and
fwait
mov
lcall
test
mov
xchg
xor
rol
cmp
das
stos
shlb
subl
xchg
mov
jo
mov
sub
mov
adc
add
push
lods
adc
das
adc
sbb
ud0
call
sub
fnstcw
push
cmp
sub
incl
and
test
or
fdivr
jo
push
mov
pushl
outsb
sbb
sbb
fstl
pushf
test
pop
jle
push
scas
add
call
int3
in
mov
sub
jecxz
int
push
and
and
shr
cld
jg
insl
lcall
xchg
adc
iret
jo
mov
xchg
mov
enter
popf
jo
aad
mov
cmpsl
cmp
fldcw
push
pop
mov
or
out
sbbl
xor
cli
xchg
imul
in
incl
repnz
sub
push
mov
insl
es
lcall
call
jbe
in
mov
cmp
pop
xor
lret
inc
or
mov
pop
pop
cmc
sub
add
mov
pushl
std
push
jmp
push
hlt
xor
fdivrp
pop
xor
lods
cmpsl
fidivrl
fdivrl
mov
mov
scas
cmc
pushf
mov
insb
pop
roll
clc
scas
sbb
inc
mov
lods
pusha
test
fldt
inc
or
inc
call
cmpsl
jmp
inc
inc
push
outsl
adc
ffreep
push
incl
ljmp
mov
jno
xchg
cmpsb
dec
jmp
cmp
addr16
lods
jns
sub
ret
call
push
arpl
sti
mov
adc
xchg
cmc
lahf
repz
and
dec
aas
dec
cmpsb
repz
aas
lret
and
movsb
inc
ret
mov
inc
push
stos
cmc
jne
mov
mov
mov
xor
lods
inc
lock
loopne
in
adc
mov
mov
inc
inc
push
sarb
adc
xor
jecxz
jmp
push
aas
rorb
dec
jp
cmpsb
loope
stc
jmp
repnz
xchg
inc
stc
clc
dec
mov
xor
ret
outsb
ljmp
movsl
mull
lds
adc
dec
sbb
sub
mov
inc
jecxz
xor
inc
lahf
cld
loope
inc
movb
dec
hlt
push
mov
pop
call
fstps
lahf
idiv
jp
pushf
jne
sbb
aas
jae
in
data16
scas
and
xchg
cld
and
dec
inc
stos
pop
xorl
call
fsubl
subl
shlb
push
mov
adc
adc
jg
shrb
or
cmp
int3
jo
push
in
jle
cmpsl
inc
or
adc
sub
jg
jmp
or
inc
sbb
push
xor
mov
push
decl
leave
pop
fiaddl
es
dec
sub
lahf
pusha
add
mov
inc
je
movb
ja
fstpt
adc
lea
movsb
cld
jno
cmpsl
rolb
rdtsc
in
jnp
test
pusha
and
adc
xor
mov
addl
dec
lret
hlt
dec
push
jge
add
fs
bound
mov
lret
pop
mov
push
jno
dec
cli
mov
nop
faddl
mov
fnstenv
decl
mov
xchg
mov
aas
std
in
not
popf
sbb
inc
outsb
pop
jnp
pop
xor
inc
jne
cmp
mov
cmp
mov
insl
movsb
insl
inc
cmp
xor
decl
add
outsl
in
xchg
mov
sbb
inc
cmp
out
mov
mov
pop
lcall
lret
mov
cld
shlb
push
jae
fimuls
ja
icebp
imul
jg
dec
into
push
sarl
or
das
jl
cs
aam
test
inc
mov
movsl
rorb
push
sahf
gs
jge
dec
decl
cmp
push
ret
xorb
popa
and
decl
xchg
pop
das
outsb
push
inc
cltd
mov
stc
mov
lahf
out
jecxz
out
add
xchg
call
push
or
pop
fidivrs
dec
pop
fldcw
mov
dec
out
inc
pop
or
push
lods
es
sarb
repnz
test
dec
push
inc
and
push
sbb
out
decl
mov
addr16
cmp
lahf
cltd
movl
stos
mov
cmp
jmp
fwait
ficoml
sbb
jae
inc
out
jns
std
xchg
xchg
lcall
push
out
jge
mov
dec
fistpl
cmp
mov
ja
rcl
and
xchg
js
rorl
mov
ljmp
jge
addr16
rorb
mov
dec
xchg
mov
ljmp
mov
mov
incl
jg
jbe
sahf
mov
cmp
cmp
in
and
fists
std
ljmp
sahf
xor
adc
and
pop
adc
jbe
jle
test
into
add
incl
and
add
outsb
sbb
mov
cmp
movsb
xor
sub
decl
adc
pop
pop
loopne
in
fdiv
popf
jmp
add
loopne
or
xacquire
and
jmp
mov
adc
or
lret
mov
mov
fimuls
or
repz
incl
pop
lds
jbe
push
mov
or
jnp
out
lahf
jnp
dec
or
push
rcrl
decl
mov
not
jp
sub
nop
jne
fildll
dec
movb
aam
loope
or
es
jmp
ds
or
iret
lahf
rcll
inc
test
add
dec
loopne
xchg
dec
cmp
cmc
ja
call
xchg
jne
or
in
call
adc
inc
popf
sub
fstpl
cltd
cwtl
test
jne
shlb
dec
xor
mov
push
cmp
jmp
pop
add
sub
mov
dec
mov
mov
sub
ljmp
les
enter
inc
and
in
fwait
std
out
cli
xor
mov
mov
cmp
add
jno
sbb
fwait
movsb
movzwl
mov
in
push
orl
iret
stos
xchg
or
inc
call
sarl
mov
add
inc
jle
sbb
push
and
call
and
mov
jl
mov
iret
sbb
inc
cmp
mov
add
xor
pusha
or
data16
dec
xor
push
out
inc
leave
inc
sub
icebp
insb
or
mov
sbb
sbb
repz
in
rolb
pushl
in
movsl
test
cmp
ret
cld
or
lahf
dec
icebp
pop
lahf
xlat
add
sub
ljmp
cmp
xchg
or
sub
repz
pop
lcall
fidivrs
fdivrl
mov
sbb
insb
aad
pop
adc
mov
jmp
adc
pop
xchg
movsl
sub
mov
loope
inc
mov
ret
cmp
pop
push
in
popf
dec
adc
push
repnz
into
cmp
fst
fisubrl
mov
inc
test
cmpsb
lret
ss
lods
xchg
adc
dec
adc
jecxz
cmp
jl
adc
test
inc
adc
daa
lds
decl
lds
add
sbb
inc
lcall
sbb
mov
cmp
cmp
mov
loopne
jp,pn
push
sti
lahf
push
and
xchg
add
dec
xchg
dec
in
sub
jmp
inc
call
lock
push
into
cli
mov
movsl
lea
mov
in
cltd
mov
mov
inc
and
dec
arpl
sub
pop
sti
dec
nop
lahf
pop
ja
sahf
jge
daa
in
inc
mov
incl
inc
mov
add
fcomp
adcb
adc
mov
jb
test
rcrb
pop
xor
cmp
clc
test
lea
dec
std
or
fsubr
out
cli
inc
ds
fidivrl
push
std
pop
or
decl
jnp
dec
add
push
cmpsl
pop
pop
and
std
dec
mov
sub
jno
incl
inc
loope
icebp
sub
or
jns
mov
xlat
scas
mov
jbe
and
jmp
mov
ljmp
out
pop
cmc
push
inc
or
mov
xchg
negb
mov
xchg
ljmp
jmp
push
xchg
push
add
pushf
sbb
mov
inc
xchg
jmp
sub
adc
int3
push
dec
cmpl
rorb
mov
mov
decl
test
mov
push
add
dec
insl
cmp
movsb
aaa
psubb
cmp
call
rcl
mov
dec
js
repnz
out
pushf
xchg
mov
sbbb
push
xchg
xor
inc
test
popf
imul
add
sub
jge
jno
popa
fsub
arpl
pop
test
push
sar
decl
mov
inc
and
into
cmpsb
mov
push
cmp
jo
lret
push
ja
inc
in
cmp
pushl
enter
xchg
lret
mov
stos
or
into
iret
fcoml
push
int
jmp
movsb
xor
loope
xor
inc
mov
dec
adc
pusha
xor
repz
incl
daa
int3
cmpsb
pop
clc
mov
xchg
mov
xlat
xchg
cld
mov
jns
mov
out
jp
add
xor
jle
lods
hlt
xchg
out
data16
sbb
mov
inc
dec
testb
dec
cs
daa
call
decl
hlt
popa
shrl
xchg
lds
std
mov
in
cltd
outsb
mov
jp
lock
into
mov
inc
jp
pop
push
cmp
nop
cmp
pop
shl
icebp
sbb
imul
dec
push
pop
ds
xor
cld
ss
xchg
add
in
dec
in
mov
dec
out
imul
xchg
inc
sbb
je
into
lea
mov
xor
dec
aad
lcall
cmpsl
pop
push
ljmp
cmpsb
cwtl
or
sub
dec
mov
pop
cmp
push
mov
adc
inc
sbb
jg
xchg
call
ss
int3
icebp
mov
insl
mov
ljmp
pop
imul
sbb
cwtl
cmp
std
mov
jbe
sub
mov
mov
decl
pop
sub
push
add
dec
jno
stos
adc
jmp
mov
cld
fcmovne
dec
cmp
mov
jmp
clc
adc
jne
mov
or
loopne
mov
mov
add
add
inc
push
inc
call
lahf
push
jmp
in
int3
sub
mov
cmp
insb
push
xor
out
aas
sbb
sti
into
adc
sub
jge
mov
push
call
outsb
mov
repnz
dec
cmp
mov
loopne
call
negb
lods
lds
jle
or
js
daa
fwait
loope
push
mov
call
fs
stos
or
mov
mov
rolb
jns
imul
incl
loop
sub
sbb
jmp
out
mov
jns
addr16
or
cltd
xchg
insb
in
jmp
fwait
cmpsl
xchg
xor
out
jno
or
test
mov
addl
mov
stc
adc
mov
sub
hlt
les
mov
out
inc
cmp
decl
cmp
xchg
ja
test
lcall
push
add
jno
xchg
and
lea
inc
mov
mov
inc
sub
fcomip
in
stos
dec
movsl
xchg
sbb
cmp
push
jo
fisubrs
sub
pop
sub
mov
aaa
sub
pusha
call
out
mov
lcall
mov
hlt
rcrb
cmp
mov
pushf
popl
and
pop
icebp
pop
pop
loop
aaa
test
in
outsl
xchg
push
aaa
jne
xchg
jne
xor
or
jmp
call
cli
repnz
call
out
lods
xchg
test
mov
jl
mov
mov
jge
lock
mov
out
push
imul
andl
scas
adcl
or
repnz
cli
int3
jmp
mov
sbb
or
mov
inc
sar
jmp
jne
repz
lcall
jge
movsb
outsb
xchg
adc
loope
cmpsl
mov
add
call
popa
inc
adc
inc
jl
push
mov
aas
movsl
bound
ss
add
xchg
cmp
pushl
in
lahf
fisttps
adc
cli
xor
or
mov
daa
or
fldt
incl
cmp
adc
cmpsl
jecxz
inc
test
push
push
test
dec
sub
shrl
call
loopne
fisubs
mov
mov
leave
roll
inc
out
dec
mov
dec
inc
lock
push
xchg
jns
xor
shrb
cli
or
mov
insb
jns
push
push
adc
rcrl
or
push
into
xchg
xchg
mov
pop
test
addb
dec
cmp
add
stc
xor
dec
push
lcall
notl
int3
dec
jge
inc
cwtl
pop
adcb
inc
sti
ss
jb
mov
scas
jmp
push
pop
pop
sbbl
inc
imull
notb
in
lods
lcall
iret
push
sbb
nop
ret
call
mov
jbe
scas
loope
add
test
push
leave
jge
test
jae
loop
imul
jp
sbb
movsb
insl
sbb
incl
out
stc
loop
push
notb
ss
and
es
jo
inc
pop
pop
shl
xchg
jno
inc
outsb
loope
fstpl
push
movntq
out
and
inc
push
ja
push
add
pop
mov
cmc
adc
push
jmp
lods
inc
inc
sbb
inc
repnz
cmp
mov
lret
push
push
out
sub
test
pushl
xlat
outsl
subl
sar
bswap
movsl
push
xchg
adc
jg
or
fwait
xchg
cmp
bound
lcall
mov
rcrb
nop
rorl
pop
mov
push
nop
imul
in
popa
fdivr
cmp
cs
or
stos
test
call
sbb
jmp
out
test
mov
sahf
jnp
push
sbb
filds
insb
jno
push
in
pop
pop
leave
cmpsl
ljmp
pushf
jo
mov
cmpsb
mov
add
mov
and
add
xor
xor
icebp
cltd
shlb
ljmp
loop
jo
test
xchg
mov
xor
popa
es
mov
lock
xchg
and
decl
lret
cmp
ljmp
int3
xor
mov
insb
mov
adc
cmpl
nop
push
jge
fsubp
xor
loope
addl
and
jb
out
ljmp
push
pop
inc
addr16
ljmp
repz
cltd
xchg
fwait
daa
popa
cmp
rcrb
roll
fadds
leave
sub
pop
stos
shl
inc
xchg
mov
sbb
pop
imul
dec
or
lcall
sbb
popf
outsb
or
ret
out
push
push
lret
scas
loopne
outsl
push
rclb
incl
cmp
sbb
mov
or
fldt
int3
mov
pop
enter
jmp
leave
mov
adc
addb
testb
adcl
setns
fsubl
cmp
addr16
scas
adc
mov
xor
jnp
je
call
aas
out
jecxz
cmp
jb
cmpsl
loopne
push
mov
dec
add
je
aaa
incb
int3
aas
xchg
adc
aam
outsb
int
decl
cmp
adc
push
mov
jo
and
scas
push
lods
data16
pop
fistpll
mov
xchg
mov
bound
jg
mov
leave
rcl
dec
fisubrl
add
xor
push
cwtl
inc
std
adc
and
lea
sub
fcompl
jp
add
jge
add
inc
stc
call
dec
xchg
inc
jb
loopnew
leave
jae
lret
loop
or
push
push
inc
dec
mov
sti
call
push
lret
inc
lods
mov
mov
test
mov
inc
icebp
pop
push
pop
dec
lcall
dec
and
pop
aad
clc
jecxz
popf
fsubrl
and
jg
jo
mulb
xchg
or
jle
jbe
arpl
ljmp
ljmp
stos
es
push
mov
xorb
cli
fs
lcall
adc
push
fldcw
add
in
or
enter
mov
ljmp
movsl
jmp
adc
and
jle
les
leave
ret
push
loope
cs
mov
dec
dec
test
or
xchg
out
xlat
add
mov
sbb
and
imul
push
pop
adc
adc
xchg
xchg
arpl
adc
mov
je
fcompl
push
xchg
aaa
add
jmp
dec
jg
push
sub
into
mov
xchg
jmp
test
mov
lcall
sarb
jnp
inc
aas
test
insl
inc
sub
iret
mov
push
jg
or
loopne
test
call
idivl
push
mov
and
repz
pop
add
icebp
adc
test
sub
jg
call
jp
or
push
dec
xlat
and
inc
add
rep
push
repz
mov
jbe
pop
dec
push
cmpsb
mov
imul
roll
jne
jecxz
fldl
push
or
test
pop
fbld
popf
push
pop
jmp
sarb
in
inc
push
hlt
pop
and
dec
stos
push
lods
sub
add
imul
ljmp
call
push
xchg
push
mov
xchg
inc
mov
ja
jae
mov
mov
xor
ljmp
scas
xor
andb
mov
inc
inc
pop
mov
lock
jnp
and
loop
call
mov
inc
push
pop
int
mov
mov
dec
inc
jae
xor
add
sbb
and
stos
mov
cmp
xchg
or
ret
inc
outsl
xor
jmp
xchg
adc
lods
popa
popf
lahf
mov
pushl
addr16
loop
stos
cmp
sahf
mov
test
add
out
add
aam
xlat
sbb
pushl
stos
jo,pt
inc
gs
mov
fcoml
jp
daa
cmp
push
in
std
call
and
clc
sub
inc
dec
push
or
add
add
pop
push
movsl
push
xor
add
jmp
xchg
cmc
dec
shll
cmc
lds
adc
jno
mov
popf
in
fiadds
lcall
jo
push
mov
pop
inc
out
push
stos
sub
call
pop
pop
pop
addb
xor
ljmp
xor
adc
or
cmc
push
add
mov
stc
pop
lret
cmp
call
sbb
nop
jns
and
adc
mov
cmc
fldenv
jge
or
je
mov
into
inc
cmp
ljmp
fiaddl
or
imul
jge
push
xor
xor
pushl
pop
inc
pop
xchg
je
ss
mov
push
add
xchg
dec
xchg
hlt
idiv
stc
clc
cmp
xchg
lret
mov
outsb
push
dec
je
push
je
fsubp
les
cli
movsb
jmp
mov
call
out
repz
sbb
test
inc
mov
sahf
xlat
mov
push
lods
pop
jo
loope
jbe
inc
jle
pop
scas
mov
inc
adc
push
xchg
pushf
cli
les
mov
movsl
push
inc
cld
mov
mov
shlb
sbb
test
mov
int3
fnstenv
inc
or
add
jecxz
fsubrs
loopne
movsl
cmpsl
xchg
sbb
ja
push
dec
imul
daa
fs
ljmp
mov
jne
sahf
dec
insb
mov
popf
adc
mov
aas
add
mov
call
ret
xor
mov
cmc
roll
mov
mov
call
pushf
cmp
mov
pop
mov
cli
sbb
add
and
push
cltd
mov
fwait
adc
lods
call
push
cmp
cmpsb
sahf
push
pop
and
insl
inc
das
daa
dec
sub
stc
arpl
pop
add
out
inc
push
sub
and
adc
loop
dec
ret
push
push
sbb
and
jno
mov
pushl
mov
xchg
mov
pop
xor
push
adc
adc
test
cmp
outsl
push
xor
mov
lcall
mov
repz
cltd
sbb
push
rolb
inc
movsb
pop
out
add
xchg
out
incl
mov
cmp
in
adc
ret
test
stos
pop
in
imul
incl
adc
daa
popa
xchg
into
or
push
jae
daa
dec
mov
cmpsb
fucomip
dec
jb
decl
inc
fs
imul
filds
ffree
pop
or
aad
ret
fstpt
shl
loope
dec
xor
xor
push
ret
xchg
lock
pop
incl
cmpsl
push
aam
inc
outsl
sub
xchg
push
and
sub
mov
stos
push
xor
jle
ljmp
gs
out
ds
insl
add
jg
push
mov
dec
xor
cmpsb
addb
ljmp
jmp
or
repz
sub
adc
lcall
call
cmc
cld
cmp
fcomip
mov
sarl
lds
adcb
add
jno
aam
call
mov
bound
xchg
imul
adc
test
iret
xchg
mov
dec
jmp
xor
movb
cmp
sbb
loopne
adc
xchg
mov
lcall
repnz
subl
jno
test
mov
loope
pop
pop
adc
cmp
xchg
jmp
lock
sahf
inc
xor
insb
sbb
sub
cmpsl
inc
dec
movb
lret
push
repz
and
jmp
adc
adc
xor
int
add
outsl
and
cli
xchg
cmpsl
lea
decl
jne
mov
inc
addb
shlb
lret
cmp
ss
sub
sbb
mov
ret
pop
xchg
in
insl
add
loope
adc
aas
and
aad
mov
and
inc
loope
cmpsb
shrb
jae
cltd
fiadds
sbbb
gs
pop
jl
andl
in
adc
dec
enter
jb
add
cs
lcall
ds
xlat
incl
lcall
xor
test
sbb
call
push
ljmp
or
cmpsl
push
mov
icebp
ret
lock
lods
insl
imul
movsl
mov
incl
pop
xor
ss
add
fadds
mov
push
mov
mov
jmp
frstor
mov
push
cmp
loopne
cmp
or
xor
dec
add
ds
lods
js
cmp
jl
xor
mov
push
push
cltd
xor
adc
mov
jo
int
ret
call
test
in
or
lock
sbbb
xor
scas
out
mov
call
cmp
out
jno
adc
push
jne
loopne
pop
cltd
add
mov
mov
add
out
push
push
in
xlat
icebp
call
aam
ljmp
adc
nop
cmc
nop
decl
ljmp
mov
mov
sti
icebp
addr16
loope
adc
outsb
std
mov
mov
loop
pop
out
cmpsb
and
xchg
aad
test
ja
add
out
cli
fs
addr16
push
push
xchg
or
popf
dec
lds
mov
ljmp
sbb
ret
pop
lret
fbstp
incl
icebp
inc
das
xor
xchg
jmp
pop
loop
sub
jne
loopne
stos
repz
stc
aas
mov
fistl
insb
gs
insl
xchg
cltd
in
jg
pop
inc
mov
sub
mov
ret
jmp
mov
sahf
pop
dec
nop
add
lock
add
pushl
inc
int3
pop
cmp
call
xor
jns
pop
jl
in
xlat
outsl
in
or
xchg
lods
jg
pushl
dec
mov
sbb
int3
cld
aas
repnz
pop
pop
pop
push
sub
int
pushl
test
lret
pop
add
popa
cltd
cmp
inc
sub
movsl
jae
jmp
xchg
pop
stos
call
push
add
dec
pusha
int3
gs
daa
jp
push
mov
push
insl
adc
pop
lods
lcall
push
stc
pop
push
lahf
add
jmp
cmp
jnp
in
jmp
call
xchg
inc
insb
arpl
pop
add
sub
jb
mov
pusha
call
nop
call
adc
addps
adc
mov
jge
mov
notl
adc
jl
push
incl
push
jo
outsl
adc
sub
cli
cld
cmp
dec
mov
inc
test
dec
icebp
ja
lahf
insl
fs
fwait
decl
and
add
and
fildl
leave
fcmovbe
pop
call
ds
adc
scas
inc
movsb
aas
out
adc
lock
pop
jl
inc
fucomp
out
pop
mov
xchg
mov
jns
cmpb
cmp
pushl
mov
out
add
imull
je
imull
push
jl
adc
decl
sub
int
mov
sbb
push
push
mov
fstpl
call
xchg
rcll
enter
pop
shrb
jbe
mov
shr
mov
mov
out
mov
jmp
jns
sbb
dec
pop
popf
popl
leave
xchg
out
cmp
xor
adc
loope
push
push
mov
test
sub
in
out
movsb
dec
pop
es
insb
iret
pop
test
lret
ljmp
inc
push
pop
das
push
cmp
aam
xlat
mov
dec
bound
out
ja
int
xchg
xor
pushl
mov
sub
pop
sbb
mov
int
pop
sbb
jae
mov
xchg
adc
jns
incl
cmp
repz
leave
jo
xchg
push
push
mov
ds
xacquire
call
daa
mov
jns
push
mov
pop
popa
js
mov
jmp
dec
insb
mov
out
movsb
out
sub
dec
or
stc
mov
ffreep
mov
out
out
nop
mov
push
fsubrs
xor
int
inc
push
mov
cli
iret
leave
sub
add
leave
mov
jmp
fs
mov
ljmp
mul
pop
mov
cwtl
loope
pop
lret
pushl
dec
test
adc
jno
jl
scas
cmp
lcall
jnp
inc
mov
cmp
mov
jb
inc
imul
jnp
lods
sub
lret
and
decl
inc
or
arpl
movsl
push
cmovp
jl
sbb
outsl
andb
pop
push
movsb
shrl
sub
lcall
int
int
mov
ljmp
in
dec
pop
mov
sub
dec
push
ljmp
mov
mov
lcall
insb
sub
lahf
jae
xor
xor
push
jmp
pop
jp
ja
repnz
and
xlat
push
mov
lods
cmp
sub
push
repz
fisubrl
ja
mov
test
jne
stos
aas
mov
arpl
push
leave
std
test
dec
xor
dec
fs
or
mov
adc
sti
loop
mov
stc
or
call
jl
stos
inc
out
jg
shl
insb
stc
hlt
jecxz
add
test
out
mov
fdivr
call
jnp
jl
inc
js
orl
push
push
pop
lcall
adc
lret
data16
ljmp
inc
sbb
fcoms
scas
lods
movsl
and
test
insb
and
mov
fidivs
mov
repz
dec
sbb
adc
dec
jl
in
lods
fisubs
aam
repz
mov
inc
sub
arpl
rcll
mov
mov
jg
inc
stc
mov
inc
dec
mov
mov
imul
ljmp
jbe
mov
in
or
shll
fisubl
xor
imul
filds
lcall
pop
mulb
in
mov
lahf
sti
clc
push
xor
push
cmp
inc
inc
loopne
jl
jle
pop
fimull
mov
nop
cmpsb
mov
hlt
loopne
inc
inc
cmp
mov
and
in
js
pop
adc
mov
sub
dec
xchg
ljmp
fisttps
int3
loop
insb
hlt
data16
add
cld
rorb
clc
loop
aam
jmp
add
dec
stc
jbe
pop
push
pop
push
leave
dec
ja
mov
pop
mov
ljmp
xor
xlat
pop
hlt
cmpsl
xchg
ljmp
jnp
or
ret
xchg
and
pop
jmp
insl
fdivrl
sahf
cs
loop
aad
sub
xor
inc
js
icebp
jbe
dec
add
filds
jae
ret
mov
sbb
les
ds
negl
mov
decl
adc
xchg
movsl
pop
jo
mov
xchg
mov
and
ljmp
mov
mov
repz
aad
nop
sbb
xchg
mov
xor
aad
sbb
jmp
inc
cmp
push
std
sbb
pop
pop
dec
xchg
sahf
xor
test
push
ret
xor
incl
mov
ss
xchg
pusha
test
into
adc
cmp
rcl
add
int
push
sub
inc
sub
jb
lcall
scas
repz
fcoms
add
mov
jbe
lcall
fimull
dec
or
mov
mov
dec
add
pop
arpl
repnz
sbb
inc
outsb
hlt
cltd
out
cmp
xchg
aam
scas
cmp
xchg
sub
test
fidivrs
xchg
mov
lock
mov
mov
jecxz
or
in
or
das
inc
jmp
mov
sarb
push
xchg
and
and
pushf
ret
xchg
andl
add
mov
ljmp
ret
dec
lea
pop
es
inc
cmpsl
nop
lods
cmpsl
and
xor
pushf
mov
lcall
in
gs
inc
cmp
stc
sbb
mov
pop
jno
addr16
mov
call
sarl
les
aas
dec
lds
xchg
inc
shrl
ss
add
outsl
cli
and
dec
stc
arpl
ja
xor
ljmp
and
ljmp
test
rcl
lods
pop
std
shrb
fstl
pop
jno
mov
jmp
sub
repnz
push
or
push
sub
dec
stc
or
ret
cltd
imul
jp
add
xchg
xchg
mov
adc
xchg
sbb
fidivl
fldt
cmp
call
xchg
adc
popf
pop
aad
pusha
cmpsb
loope
shrl
stos
push
adc
pushl
mov
test
scas
inc
insl
lea
mov
xor
mov
mov
out
fbld
leave
jmp
gs
lods
pop
jl
mov
dec
lret
mov
loopne
jg
sbb
adcl
ljmp
jmp
or
mov
push
and
mov
pop
cmp
lcall
nop
push
fldcw
call
sub
or
stc
jmp
jge
pop
cmp
idivl
mov
add
jge
xor
lcall
inc
push
jb
fcoms
ret
cmpsl
mov
mov
or
xlat
mov
fwait
jge
dec
fsubrl
xchg
scas
fists
popa
cmc
scas
xchg
jmp
jbe
mov
jns
jmp
call
lahf
jb
or
cwtl
mull
shlb
pop
cmpsb
daa
pop
and
js
push
inc
mov
push
add
pop
ds
or
sbb
jecxz
fucomip
mov
mov
decl
dec
fidivl
or
inc
jle
jge
cld
push
dec
jns
arpl
insb
scas
sbb
cmc
call
sub
xchg
cmp
xor
cli
std
out
inc
popa
jae
rol
mov
push
lret
in
arpl
das
sbb
mov
mov
mov
pop
arpl
popa
adc
jmp
aaa
sub
dec
xor
or
jnp
jg
add
scas
sub
es
ljmp
call
daa
or
xorb
andb
jmp
adc
sarb
cmpl
incl
and
lea
jo
mov
js
dec
sti
mov
pop
mov
decl
dec
cmc
dec
sti
xor
dec
cwtl
and
fisubrl
jmp
imul
cmp
or
or
popf
adc
lcall
xchg
mov
cmp
lods
sahf
xchg
cld
jb
jmp
jns
inc
xor
in
out
fdiv
shll
call
pushf
mov
nop
stos
or
dec
imul
push
xchg
add
xor
leave
mov
pop
push
inc
enter
lcall
jmp
mov
sub
mov
loope
push
sar
call
push
xor
inc
pop
sub
mov
aaa
push
sbb
sbb
jmp
sub
mov
test
add
pop
dec
push
mov
cmovg
xchg
leave
lret
mov
push
cmp
repz
enter
in
shrb
insl
cmp
lret
rcll
fidivs
fdivr
decl
int3
int3
sbb
jne
repz
jecxz
jl
out
jo
lds
cmp
inc
push
aam
cmpsl
cmpsl
mov
ja
arpl
push
sub
js
push
in
push
adc
sub
jmp
das
cmpsl
shrb
fld
sub
xchg
mov
dec
mov
imul
xor
inc
subb
nop
jl
add
popa
mov
adc
sbb
pop
mov
movzbl
fldcw
not
pop
push
push
dec
cmp
leave
inc
xor
dec
mov
lds
mov
dec
movsb
aas
out
stos
rolb
mov
or
scas
aam
nop
out
test
out
xchg
loope
cmp
jb
cmp
ljmp
mov
and
ret
fwait
or
sahf
sahf
adc
call
mov
decl
out
push
mov
or
inc
pop
in
lods
xlat
aas
and
jge
jbe
mov
jl
sbb
inc
xchg
das
repz
lahf
into
add
jae
fmuls
push
pop
xchg
jl
movsb
push
cmp
shl
dec
pusha
xor
arpl
sahf
sar
in
imul
lods
dec
mov
jmp
icebp
aaa
shll
push
cmpsb
xorb
inc
das
shlb
mov
adc
call
pop
jg
pushl
loop
leave
push
push
movsb
and
xchg
es
mov
mov
mov
jbe
xchg
bound
ds
outsl
cmpsb
pushf
stc
les
decl
adc
inc
inc
xor
notl
pop
outsl
mov
cmp
aad
stos
push
pop
int
insb
decl
into
sub
jge
cs
or
mov
notl
popf
push
decl
cli
out
xchg
adcl
aas
fistl
mov
sbb
lcall
pop
add
dec
push
rcrb
push
xor
pop
ss
mov
mov
and
outsl
call
iret
ret
inc
out
test
adc
inc
dec
inc
adc
je
mov
gs
test
jns
ret
mov
sahf
pop
push
divl
mov
lea
dec
pop
or
mov
decl
lds
rol
xchg
clc
mov
pop
push
lods
push
jp
mov
ljmp
jmp
sbb
stos
push
faddl
shll
mov
xchg
pop
das
mov
xchg
mov
inc
cwtl
ds
ss
rcr
ljmp
add
fwait
mov
cmp
rclb
inc
decl
std
jg
insb
push
dec
fwait
cmp
sub
aam
sbb
and
add
xchg
fs
pushl
xchg
push
or
jb
xor
test
xor
movsl
mov
push
movsl
mov
js
insb
push
sbb
ret
dec
pop
dec
add
push
pop
jne
jle
lcall
mov
ja
aad
std
xchg
push
cwtl
sbb
add
inc
ds
and
ja
xorl
mov
push
xorb
dec
xchg
jmp
push
stc
cld
xor
lods
and
incl
inc
mov
jmp
loop
mov
xchg
ja
mov
jmp
xchg
sbb
mov
stc
mov
ret
or
mov
popf
iret
push
mov
out
jmp
lcall
jecxz
xchg
xchg
dec
in
fistps
adc
incl
loopne
xchg
adc
insl
in
adc
dec
shl
and
in
mov
push
inc
stc
xchg
ljmp
push
pop
les
adc
movsl
filds
pop
repnz
mov
pop
scas
pop
pop
xchg
sub
incl
sbb
mov
xlat
fistl
mov
lea
popf
int
stos
mov
or
xchg
in
jmp
xchg
fidivs
in
and
dec
or
ret
pop
ret
and
push
popa
xor
jmp
push
adc
mov
call
mov
aaa
jl
aas
jo
test
cmp
fcoms
sbb
stc
pop
pop
or
or
in
dec
jmp
mov
pop
xchg
nop
sub
mov
out
mov
push
push
or
out
nop
data16
and
out
mov
sbb
call
ss
and
popf
int3
dec
fstl
pop
jl
ret
repnz
aam
mov
pop
push
iret
repnz
decl
inc
repz
mov
mov
xchg
sbbb
jmp
jg
subb
popa
xchg
push
lcall
je
adc
adc
add
or
jbe
push
mov
ds
dec
ljmp
loope
nop
cld
jmp
adcb
mov
insb
pop
xchg
sub
lcall
pop
daa
ljmp
add
ds
pop
bndstx
cmp
push
pop
ret
ljmp
popa
scas
mov
jmp
xlat
lret
jno
or
pop
addb
mov
mov
out
lret
cmp
imul
or
mov
mov
cmp
ret
add
ljmp
lods
aaa
jecxz
jnp
mov
insl
mov
dec
dec
stos
scas
data16
jo
mov
xor
lcall
mov
pop
sbb
in
push
push
push
or
pusha
outsb
inc
sbbl
xor
jno
fs
push
and
adc
add
push
call
sub
sar
xchg
xchg
dec
decl
nopl
in
pop
cltd
fcoms
pushf
xor
adc
mov
mov
jmp
ja
cs
test
pop
cmp
addr16
mov
jl
das
cwtl
lahf
les
pushl
iret
pop
fmuls
es
movsl
push
gs
sbb
into
cmp
xor
js
mov
call
in
mov
xchg
loopne
ret
mov
andl
jnp
fsubl
inc
jmp
fiadds
push
or
sub
leave
push
push
sub
jns
fistl
arpl
mov
lcall
mov
pop
cmp
pop
xchg
cli
xchg
mov
jl
out
inc
sub
push
pushf
mov
jmp
aad
cmp
das
jae,pt
xor
jmp
mov
inc
mov
ljmp
inc
jnp,pn
xor
mul
push
sbb
gs
rolb
mov
incl
jmp
cmpsb
push
test
ret
out
inc
test
or
or
jg
fsubrl
fisubrl
sbb
xor
cli
cmp
mov
jle
sbb
imul
lcall
int3
pop
es
mov
cmp
imul
xor
das
jo
int3
push
out
pop
incl
jne
dec
mov
push
adc
movsl
sbb
xchg
mov
insl
rcl
adc
pop
popa
decl
gs
ds
cmp
pop
push
dec
mov
mov
bound
in
pop
jle
and
call
outsb
ret
mov
ljmp
inc
adc
add
idivl
pushl
push
out
cld
inc
mov
inc
lcall
or
fistl
call
push
xchg
jmp
ss
xchg
sub
xlat
cmp
mov
lahf
roll
pushl
repnz
inc
mov
lods
out
jmp
xlat
mov
fnsave
dec
decl
cli
xchg
dec
js
push
cmp
and
mov
sahf
shll
pop
sbb
push
int3
adc
xchg
insl
fwait
testb
and
aad
add
inc
shr
xchg
sub
add
push
daa
call
outsl
push
sbb
xlat
pop
mov
or
push
insb
es
xchg
adc
xor
outsl
xlat
add
call
ret
push
nop
rorl
inc
lret
call
fimull
xor
add
aad
ljmp
stc
or
jbe
mov
aam
ljmp
sub
mov
xor
inc
mov
pusha
loope
dec
dec
cmp
dec
dec
sbbl
int3
inc
sub
add
mov
xchg
push
sub
sbb
movsb
push
cs
out
lcall
jae
cltd
je
cmp
nop
and
cli
pop
add
decb
mov
testb
stos
cmpsl
cmp
mov
mov
fnstcw
sub
vcvtsd2si
in
out
mov
mov
pop
insl
xor
mov
xchg
shrb
je
inc
inc
shl
mov
icebp
dec
jge
fnstenvs
mov
cmpsb
shlb
inc
outsl
pop
in
and
js
push
jmp
fnstsw
mov
data16
xlat
aaa
fsts
pop
aad
sub
sbb
xor
cmpsb
fsubs
mov
ljmp
dec
popf
inc
push
xor
imull
lea
fisubrl
dec
negb
add
jb
scas
decl
dec
scas
mov
cmpsb
rol
push
inc
lea
pop
test
popa
loopne
shl
sub
call
das
in
aam
mov
lods
mov
pop
movsb
xchg
and
arpl
lods
xchg
nop
dec
sarl
decl
fwait
loope
cmp
mov
mov
testb
cmpsl
push
punpckhbw
and
inc
pop
sar
lcall
ljmp
out
push
jbe
pop
sbb
sbb
pop
add
cmp
jmp
andb
sbb
jb
adc
jo
adc
xchg
pop
in
aad
js
inc
insb
cltd
mov
ret
inc
jno
sub
mov
fs
addr16
jecxz
xor
stc
test
cmp
mov
or
js
cli
out
jecxz
out
cmpsl
dec
jp
cmp
ljmp
nop
adc
xchg
xchg
adc
jl
fnstenv
or
pop
sarb
enter
jmp
mov
pop
outsb
fcompl
dec
arpl
gs
sub
mov
sbb
call
pop
and
push
lahf
pop
cs
fisttpl
add
ds
mov
mov
adcb
mov
mov
popf
mov
cmp
adc
cmp
inc
enter
mov
movsb
xchg
xlat
ds
fildll
pop
jp
dec
aam
cmp
fsubrs
adc
push
je
stc
xor
jmp
sbb
pop
hlt
loop
dec
test
mov
cmp
inc
ret
jle
ljmp
movsb
out
shl
bound
adc
mov
sub
cltd
sub
dec
cmp
out
stos
pop
stc
lret
mov
shrb
adc
jns
cmp
gs
and
mov
push
ds
lcall
mov
jb
sub
hlt
rol
sub
adc
cmp
sub
call
das
mov
sti
pop
inc
pop
pop
cmpsl
adc
sahf
pop
pusha
andb
fs
ss
idiv
lcall
popa
adc
add
addr16
sbb
add
mov
bound
in
test
call
mov
inc
and
or
jle
ds
dec
lcall
add
imul
sbb
inc
mov
shrd
mov
int3
inc
dec
jecxz
test
push
dec
cmp
lret
pop
add
jp
fcoms
mov
out
rorl
nop
mov
sub
push
pushl
ss
ret
push
dec
inc
fildl
fsubrl
scas
sarb
in
fcos
decl
orb
paddusw
lds
add
sbb
clc
fdiv
enter
aaa
jmp
cmpsb
dec
popf
outsl
cltd
sahf
inc
fidivrl
and
pop
mov
xor
jmp
icebp
pop
outsb
sbb
adc
shrb
jns
lea
pop
imul
iret
lahf
sub
ljmp
dec
pop
pop
dec
xchg
ja
faddl
adc
addl
jbe
out
es
ljmp
inc
in
fs
adc
inc
dec
jl
inc
movsb
push
lods
cmp
popf
bnd
pop
arpl
dec
decl
pop
or
cmpsb
xchg
jns
fnsave
and
jno
jp
dec
stc
mov
pushl
out
orb
ja
fimuls
inc
jnp
call
pop
dec
push
xchg
sbb
mov
pushl
fmul
mov
mov
dec
dec
add
enter
fwait
cmpsb
xchg
jb
mov
mov
mov
fcoml
add
les
fcompl
out
subb
jmp
fists
mov
jle
cmp
add
cmp
dec
pop
lock
into
fists
dec
data16
fdivl
dec
mov
outsl
push
inc
sub
repnz
push
lcall
dec
push
jmp
sub
sbb
ds
shll
imul
cmp
pop
sbb
sbb
xlat
push
stos
push
lods
jmp
incl
pop
incl
push
xor
jae
call
fcoml
xchg
in
sub
push
pop
add
incl
out
jmp
testl
sub
loop
cmp
cltd
and
mov
imul
xor
nop
adc
adc
hlt
jl
jge
sahf
loope
adc
out
incl
leave
mov
dec
ds
jae
jns
shlb
jge
js
decl
mov
ficoms
add
sub
cwtl
xchg
insl
lcall
push
lret
push
lds
pop
cld
pop
push
inc
lods
fbld
xor
insb
xor
adc
mov
test
cmpsl
cmc
cmp
inc
fldcw
jo
arpl
ret
mov
xor
ja
jns
adc
scas
fists
xor
shrb
lea
cltd
pop
out
inc
popa
dec
push
fdivl
jg
pop
dec
scas
sub
repz
out
cmp
xchg
mov
jecxz
fstps
outsl
push
cli
add
sub
fsubl
mov
shrl
jl
jo
js
stc
mov
and
iret
xor
call
push
cli
jmp
add
cmp
jg
and
sbb
pop
aam
sti
and
jns
insl
incl
sbb
add
movsl
out
mov
aas
mov
or
sub
incl
xor
and
add
cmp
sbb
hlt
mov
cmpb
aas
and
ljmp
jg
in
fdivs
pop
hlt
push
cmp
sub
mov
movsl
sub
mov
and
push
mov
and
rcl
adc
pop
int3
arpl
testl
int3
call
cwtl
xchg
pop
dec
or
scas
or
inc
xchg
sbb
stos
fst
pop
rcl
and
ljmp
leave
and
testl
gs
or
pop
sub
sub
stos
in
mov
push
inc
mov
mov
xchg
push
mov
ds
push
push
adc
jge
insl
inc
sti
cli
xchg
jbe
out
inc
add
push
icebp
mov
stos
pop
arpl
fcmovu
sbb
and
mov
mov
scas
add
sbb
pop
jg
ljmp
push
movsl
es
ljmp
notb
test
pop
cmp
lods
das
jge
fistpl
mov
ljmp
aad
lcall
shlb
pop
fimuls
dec
lcall
add
movsl
mov
fsubrp
cli
outsb
nop
and
dec
pop
push
movsl
out
mov
pop
mov
fildl
rorb
loop
mov
cltd
rcll
lcall
pop
gs
pop
or
in
leave
test
int
pop
fdivrs
je
push
clc
xchg
jge
decl
hlt
das
mov
xor
jns
int
jp
inc
mov
lock
mov
cmp
xchg
fwait
sbbb
push
outsl
rcr
pop
je
adcb
fs
push
nop
xchg
adc
lods
imul
dec
insb
sarl
scas
stos
jl
cmp
add
mov
jae
cmp
push
and
inc
decl
addr16
jmp
cmp
jmp
stos
out
lcall
out
push
pushl
inc
sarb
fildll
or
sahf
cmpl
clc
xchg
leave
inc
fld
test
lcall
test
xchg
lods
in
jmp
and
inc
dec
jnp
imul
call
sahf
mov
and
jo
ljmp
xchg
out
rcr
pop
sub
push
movsb
daa
sbb
sub
ljmp
pop
rclb
push
mov
out
es
dec
jb
sbb
sub
je
inc
push
sahf
popf
push
sti
sbb
inc
es
mov
pop
repz
mov
inc
add
jmp
ds
shll
hlt
jb
cmpsl
sub
js
inc
xor
mov
decl
aam
dec
xor
adc
movsb
jle
jmp
mov
jne
add
cmp
decl
out
test
mov
xor
ja
mov
ljmp
xchg
sbb
sti
ljmp
dec
sti
dec
add
mov
push
push
mov
sbb
outsl
les
adc
ljmp
push
inc
cmp
clc
jae
mov
mov
lret
sub
xchg
test
inc
mov
lret
push
enter
icebp
add
jl
and
mov
cmp
call
data16
adc
stos
mov
cmp
push
jnp
cmp
icebp
jecxz
incl
fsubrs
or
popa
pushf
jg
fucom
ss
lahf
xor
jno
mov
adc
adc
jmp
fsub
loope
pop
fsubrs
js
sarb
mov
stos
lcall
out
mov
mov
dec
mov
sub
fmuls
xchg
divb
adc
jns
fbstp
lcall
dec
pop
loope
inc
xor
cs
jecxz
or
add
xchg
paddd
testb
push
lods
shr
add
inc
xor
push
jnp
cld
outsl
fbld
mov
imul
fistpl
test
test
adc
mov
or
enter
incl
inc
movsb
inc
cld
dec
loopne
push
outsl
add
pop
ret
addb
ret
cmc
ficompl
icebp
cltd
inc
cmp
or
dec
add
cmp
add
mov
xor
inc
rorl
adc
std
ljmp
sub
stos
call
sbb
rclb
sub
mov
xor
cmp
ljmp
xor
mov
and
sbb
sbb
push
movsl
iret
xchg
repz
lcall
jl
mov
inc
cld
mov
mov
roll
jae
jb
js
cvtps2pd
pushl
xlat
and
pop
pop
scas
inc
mov
inc
testb
insl
clc
jo
jnp
mov
arpl
sti
jg
vmulss
es
push
dec
outsb
data16
push
adc
jle
call
je
test
cmp
xchg
jp
dec
cmp
adc
xchg
stc
pop
rolb
push
adc
or
ljmp
adc
daa
sub
sbb
dec
paddsb
jno
or
xor
jge
push
add
jg
pushl
dec
sbbb
rcrl
cld
cmpsl
loopne
std
dec
lock
dec
pop
xchg
add
fimuls
movsb
pop
rclb
jnp
leave
cli
fwait
enter
xchg
in
xchg
mov
mov
fidivs
jmp
and
pop
dec
push
or
jno
loop
mov
pusha
fwait
rcll
adc
lret
decl
push
pop
rcll
push
xchg
adc
or
shll
jp
pop
dec
sub
pushl
ja
inc
dec
xchg
push
xor
push
pop
jno
fnstcw
xlat
sub
in
cmp
cmp
pushl
push
std
jns
pop
loop
subb
into
test
mov
jle
scas
sbb
pop
insl
push
jg
jbe
das
mov
jp
push
ljmp
push
dec
and
mov
frstor
jl
les
movsb
or
sub
sub
movsl
sahf
outsl
or
inc
dec
adc
sbb
or
call
addr16
lea
in
pop
not
subb
pop
dec
scas
pop
jbe
sar
pushl
pop
adc
or
fstps
jl
call
addl
movsb
out
movsbl
mov
dec
addr16
sub
or
testb
and
inc
pop
mov
cmp
cmp
dec
sbb
dec
and
mov
cltd
mov
nop
int
mov
mov
mov
cld
js
dec
clc
jmp
stos
icebp
out
stos
cld
sub
out
mov
jl
pop
xchg
cmpsl
pop
cli
jmp
int
popf
fwait
rcll
sub
int
sub
ds
cmpsb
cmp
iret
adc
adc
mov
jmp
cld
adc
pushf
test
iret
mov
xor
insl
cwtl
xchg
pusha
stos
addr16
lar
call
adc
fisttpl
xchg
jbe
pop
out
sarl
cmpsb
in
xor
sub
jb
lds
and
xor
fdiv
shlb
in
ret
sbb
lea
mull
in
mov
pop
jge
adc
push
pop
inc
mov
mov
mov
and
dec
es
mov
lret
xor
ljmp
and
int3
mov
out
in
sbb
inc
cmp
add
orb
in
test
arpl
cld
sub
aam
repz
into
lahf
sbb
push
push
xchg
sbb
pop
insl
inc
inc
aam
fcomps
out
pop
jmp
ja
mov
lods
or
loope
shrl
test
clc
std
and
mov
je
insb
push
push
pop
sbb
jo
dec
mov
loop
daa
out
lea
jmp
push
cmp
xor
dec
dec
loope
sub
mov
dec
or
mov
in
je
insb
ret
ljmp
in
lods
stos
ljmp
in
lret
jl
push
outsb
and
les
enter
push
xor
call
fiaddl
pushf
das
xor
outsb
addr16
pop
xor
scas
out
sub
dec
popf
out
jp
out
dec
push
ficoml
out
dec
or
xchg
push
jle
rorb
lcall
sub
or
jae
sub
mov
js
or
int3
jle
cmp
cld
shlb
shll
jmp
push
pusha
outsl
or
sbb
push
les
pushl
mov
push
lcall
and
mov
hlt
daa
pop
mov
jnp
clc
dec
lret
rolb
lock
cmp
lods
xchg
mov
hlt
imul
test
lret
and
fwait
adc
call
jecxz
movb
int
ret
jl
lods
pop
roll
addr16
clc
lea
pushl
jge
jnp
pop
fnsetpm(287
mov
mov
repnz
enter
pop
jmp
jl
sbb
add
push
repz
mov
adcl
or
mov
inc
pushl
and
jnp
cmp
fbld
mov
cmc
or
mov
mov
sarb
xchg
cmpsl
and
jmp
fcomp
xchg
lahf
arpl
mov
mov
addr16
mov
cld
push
aad
stc
mov
fiaddl
add
mov
or
jmp
sbb
mov
jmp
mov
cld
xor
imulb
decl
lods
mov
pop
fdiv
stos
sub
cmp
mov
push
jp
xor
sbb
es
cld
and
jecxz
or
mov
in
dec
pop
repnz
adcl
push
dec
fs
arpl
stc
sbb
dec
push
cwtl
push
xchg
pop
jno
cmp
cli
cs
call
fwait
cmpsb
js
xor
scas
inc
fsubrl
fldl
enter
pop
test
inc
dec
add
arpl
fmuls
outsl
lret
orb
xchg
xchg
mov
xchg
sti
int
xchg
jbe
out
ljmp
lcall
dec
xchg
mov
in
mov
mov
movsl
jmp
out
cmp
in
ss
cwtl
fwait
ret
pop
add
xchg
push
jmp
decl
shll
mov
daa
xorl
push
inc
orl
cmp
pop
dec
sbbb
je
scas
or
insb
imul
mov
int3
enter
jo
push
loopne
fcom
mov
jecxz
pushf
adc
fwait
adcb
jecxz
push
or
xor
sub
adc
mov
jle
test
mov
insb
xchg
nop
jb
les
mov
negl
repnz
mov
sbb
decl
xor
jo
push
mov
mov
push
push
fdiv
push
hlt
or
clc
dec
sbb
stos
es
mov
addr16
subl
push
and
xorl
mov
decl
icebp
push
cwtl
cli
lods
or
out
ljmp
xor
int
push
nop
ja
lock
mov
decl
push
adc
mov
es
shlb
push
cld
sbb
xor
insl
popa
out
hlt
mov
addb
mov
xor
nop
fisttpll
pop
lahf
add
push
in
mov
aad
incl
fwait
xor
jle
dec
outsl
outsb
or
mov
inc
push
int3
clc
je
adc
pop
push
dec
pop
incl
aad
push
lahf
dec
mov
mov
fdivrs
adc
insb
int
push
test
js
adc
pushl
xchg
aas
jb
sbb
dec
mov
adc
mov
sbb
or
push
repz
ljmp
adc
pop
inc
out
mov
xor
enter
out
das
sub
call
add
xorb
int
ss
mov
xchg
xor
jle
popa
xor
and
call
loop
mov
dec
movsb
mov
cmp
and
es
xchg
mov
dec
inc
dec
lock
ss
pushl
lea
mov
hlt
pop
lahf
push
les
or
xor
ljmp
mov
imul
pop
sbb
jnp
pop
scas
mov
decl
mov
clc
push
mov
aam
add
or
das
das
cmp
loopne
adc
movsl
lods
lret
jmp
xchg
ret
or
gs
xchg
pop
movsl
sub
repnz
jb
mov
lcall
xor
mov
mov
fildl
pop
sbb
fcoms
out
incl
je
mov
adc
aam
and
fwait
test
loope
push
cmp
or
decl
fwait
int
les
out
inc
popa
inc
or
cmpb
mov
ljmp
and
bound
call
mov
ja
push
jg
out
icebp
cld
mov
mov
jno
add
out
data16
pushl
or
es
cmp
ss
jp
in
push
enter
inc
xchg
sahf
cmp
incl
int
jecxz
sub
jne
push
or
push
test
add
push
jmp
pop
sbb
lcall
test
in
or
mov
mov
ffreep
lea
inc
dec
out
incl
xchg
movsl
sub
xchg
je
mov
sub
les
mov
jecxz
dec
cltd
call
jg
xor
fidivrl
test
xchg
mov
mov
sub
or
call
xchg
pushf
mov
adc
rcrb
fwait
jmp
or
pop
sub
mov
mov
pushl
push
and
sub
rcr
test
xchg
add
js
mov
call
test
fstpl
leave
xlat
jp
sbb
and
sbb
scas
pop
lahf
inc
or
incl
adc
cltd
lret
out
cmpsb
inc
dec
in
es
ljmp
out
fwait
mov
call
lods
lret
imul
imulb
fisttps
mov
xor
fidivrs
ljmp
fidivl
loop
in
push
loopne
and
cmc
test
cltd
mov
sbb
mov
addr16
and
call
pop
or
pop
test
jo
mov
xor
test
pop
and
call
icebp
mov
das
xlat
incl
popa
cmp
inc
mov
xlat
jge
pop
shlb
or
icebp
xchg
call
bound
jnp
and
mov
xor
sahf
into
ds
push
mov
fs
pushl
dec
mov
and
fsubl
mov
and
lods
mov
xchg
dec
jae
repz
call
je
pop
push
mov
stos
or
loop
adc
jae
loopne,pn
cmc
stos
add
push
jmp
pushl
and
shrb
inc
cmc
mov
mov
and
adc
fsubs
pushl
test
sub
mov
dec
inc
mov
push
leave
sbb
xchg
daa
sub
adc
incl
testb
cmc
fsts
lods
dec
xor
test
pop
dec
fildl
data16
lea
push
sub
movsb
mov
sbb
inc
in
inc
and
sub
lcall
push
mov
push
push
roll
cmpb
or
xor
dec
mov
lods
pushl
add
jl
pop
iret
jo
jno
ja
xchg
scas
lods
pop
mov
insl
fcomps
pushl
ljmp
loope
xchg
aad
mov
test
test
cs
jmp
icebp
fwait
dec
leave
movsb
filds
imul
ds
pop
jno
jb
jmp
loope
fisubrl
imulb
mov
stos
sub
cmc
dec
shl
pop
fbld
or
mov
das
fsubl
incl
es
loope
sub
jnp
lcall
dec
test
xchg
and
decl
arpl
inc
mov
jge
cltd
jl
pusha
or
inc
mov
mov
pop
popf
or
call
rcll
and
pop
or
loope
mov
add
sub
push
ljmp
andl
xor
or
pop
sub
ret
inc
adc
push
lock
decl
xlat
add
aad
cmpsl
fcoms
arpl
cltd
daa
mov
stos
pop
add
test
decl
mov
mov
push
jmp
repnz
push
and
push
ljmp
ljmp
loopne
nop
adc
xchg
imul
xchg
jle
add
mov
shlb
xchg
fstpt
xchg
aas
lret
loop
pushf
inc
sub
repnz
cltd
mov
sti
cltd
sbbl
mov
dec
je
or
mov
out
jl
mov
xchg
sbb
jnp
loopne
ljmp
xor
lret
dec
sub
into
jge
sub
ret
pop
test
cmp
out
push
ret
insb
out
xchg
lcall
add
aad
mov
xchg
mov
xchg
xchg
sbb
in
jge
mov
in
ljmp
adc
xor
xchg
sarb
lret
push
pop
inc
cmc
inc
jl
into
jle
dec
push
cli
lcall
int3
clc
adc
push
add
adc
fbld
stc
mov
inc
aad
repz
push
repz
std
mov
mov
sbb
or
ficompl
cmc
dec
in
push
pop
leave
xor
and
jle
push
arpl
fiaddl
cs
call
cmp
ja
jle
dec
or
mov
inc
add
stos
in
repnz
adc
mov
cmp
incl
mov
xor
sub
add
lret
movsl
in
mov
hlt
lret
out
pushf
mov
out
fwait
sbb
jl
std
notl
fnstenv
lahf
pop
in
movsb
test
xor
dec
pop
lcall
adc
dec
jmp
push
push
sbb
push
and
test
int
sub
jmp
push
xor
dec
pushf
nop
sub
and
or
mov
pop
dec
mov
adc
cld
jns
lcall
xor
xchg
hlt
jno
ret
into
cs
shll
xlat
add
mov
mov
test
jp
xor
pop
inc
cmpsl
cli
dec
sub
xor
jmp
xor
dec
jae
dec
jno
leave
ljmp
mov
inc
push
cmp
bound
mov
push
sbb
jge
xor
sbb
ljmp
mov
fdivr
mov
pop
add
adc
decl
lret
mov
push
dec
fwait
aas
jno
fdivrs
aad
mov
scas
int3
call
call
jge
jnp
pop
mov
cmp
add
dec
jmp
jp
mov
fcoms
sub
xor
test
test
lods
add
pushf
add
std
pushl
lret
cmp
mov
mov
push
outsl
repnz
mov
or
jmp
mov
shl
jge
jl
adc
push
mov
mov
adc
pop
push
lret
push
ljmp
xchg
ret
jnp
jge
jmp
vrcpss
adc
test
adc
sub
out
and
push
push
cmp
bound
push
xchg
adc
mov
pop
mov
xchg
push
idiv
call
or
mov
nop
lcall
insl
jp
sbb
cmp
adc
sub
mov
call
shrl
bound
pop
sbb
ret
cmc
jl
ss
pop
or
adc
mov
pop
int
fisttpl
ljmp
out
push
xor
pop
int3
and
jno,pn
adc
mov
jmp
add
adc
or
jbe
mov
ret
cmpb
add
xchg
lcall
jnp
fs
mov
push
ja
cld
out
add
fldenv
dec
mov
addr16
mov
insb
pop
scas
pop
mov
fwait
and
and
repz
ret
or
pusha
pushl
sarb
sub
inc
push
cld
in
cmp
into
rclb
jecxz
ret
jg
repz
cltd
push
lret
xchg
aam
or
out
incb
xchg
inc
mov
mov
jmp
sbb
push
inc
out
fistpll
stos
aad
sar
pop
lret
adc
leave
pop
mov
jo
mov
jmp
push
or
mov
rol
imul
jmp
enter
adc
shll
insl
inc
addr16
rorb
jbe
dec
dec
or
or
ljmp
jp
mov
lahf
jne
or
les
inc
cwtl
pop
fs
incb
mov
test
mov
je
arpl
das
mov
arpl
push
cld
dec
or
lods
inc
push
jl
incl
add
and
std
call
subb
bound
aad
cmp
pop
inc
adc
jns
xchg
jmp
enter
imul
cmpsb
cmpsb
push
and
dec
dec
adc
pushl
push
stos
loopne
push
repnz
add
loop
std
pop
mov
stos
js
dec
xchg
lods
adc
aas
leave
cmp
mov
cmp
in
jae
imul
adc
lds
mov
inc
fistpl
dec
repnz
jno
addb
lea
mov
xor
push
lcall
test
ljmp
sti
or
push
daa
lods
inc
flds
add
fimuls
call
inc
push
or
pop
sti
or
sbb
insb
scas
repnz
push
scas
mov
mov
call
jle
pop
ja
rcrl
mov
adc
popa
sub
jns
arpl
sbbl
add
call
xor
xor
or
lret
add
lahf
mov
mov
decl
repz
call
daa
jge
aad
sub
add
or
aam
leave
aas
push
jmp
in
push
jle
mov
or
loope
xchg
jnp
call
jno
dec
xchg
or
fidivrs
jge
insb
lcall
push
adcl
lcall
push
dec
addr16
mov
mov
jmp
idiv
ljmp
mov
inc
int3
cltd
add
mov
daa
cmc
jg
pop
addr16
push
fwait
insl
cmp
cld
jge
imul
out
jl
cmp
xchg
sub
mov
jmp
mov
fsubrl
js
lcall
in
sbb
fs
lods
inc
mov
ja
push
scas
jmp
xchg
push
jmp
pop
push
call
imul
test
mov
add
mov
stos
bound
into
pop
clc
adc
push
out
mov
inc
jo
dec
lods
inc
mov
sub
sbb
mov
lea
xchg
test
xchg
adc
push
loope
rcrb
and
call
pop
fwait
push
dec
ret
cmp
jmp
and
lret
daa
mov
ljmp
jo
in
mov
push
popf
pushl
stos
xor
mov
ljmp
and
std
sub
inc
push
das
push
or
mov
lcall
cmpsl
pop
mov
add
push
and
dec
aam
aas
iret
call
mov
pushl
mov
push
xchg
dec
les
adc
rorl
mov
arpl
jle
ljmp
nop
xchg
dec
push
xchg
inc
test
int3
pop
sbb
cld
mov
fnstsw
addr16
loope
cmc
mov
outsb
pop
out
sbb
daa
sti
int3
popa
cmp
frstor
mov
rclb
hlt
mov
lock
sbb
prefetch
or
loope
sub
jno
adc
insb
and
ljmp
sub
dec
push
or
lock
push
sar
jnp
mov
out
xchg
sbb
es
ljmp
mov
inc
xchg
and
xor
into
inc
test
inc
xchg
add
aaa
call
jmp
jnp
gs
push
pop
arpl
das
sub
sbb
xchg
mov
bound
add
jmp
cmp
mov
and
fcomi
mov
or
mov
stc
mov
sbb
inc
ja
mov
call
incb
sub
add
add
jbe
mov
es
mov
test
decl
inc
sbb
loop
xor
and
test
cmp
xlat
xor
fs
mov
xor
andb
dec
ljmp
lcall
cli
xorb
mov
xchg
adc
mov
mov
enter
mov
dec
lcall
js
fstl
jecxz
in
jle
subl
div
shrb
decl
or
xor
out
sbb
mov
out
imul
push
lahf
add
jmp
sbb
in
stos
xor
popf
mov
jbe
sbb
xchg
push
clc
out
sub
mov
cmp
jmp
pop
pop
push
stos
aaa
or
push
loopne
mov
adc
add
cmp
jmp
jb
jp
icebp
je
stos
xor
es
cltd
push
push
cmpsl
in
cs
adc
ljmp
cwtl
dec
xchg
dec
mov
mov
sub
bound
stos
mov
mov
jmp
scas
pop
orl
mov
dec
mov
cwtl
aad
ljmp
jmp
xchg
call
xchg
xlat
pop
cmpsl
xchg
push
stos
ficoml
test
jno
fdivs
stc
mov
cld
scas
arpl
sahf
fstpl
mov
push
sub
in
pop
test
mov
mov
lret
cli
and
js
mov
decl
sahf
cmp
scas
out
test
loope
adc
cmp
das
dec
or
cmp
sti
cs
fldenv
fsubr
popa
sbb
inc
pop
jp
iret
mov
sbb
cmp
dec
or
pop
test
les
decl
aaa
lods
lret
dec
xchg
xchg
xor
adc
sbb
cwtl
addr16
mov
dec
pushl
sub
test
lds
jmp
add
pop
sarl
mov
adc
incl
gs
fimuls
mov
loopne
xor
or
btr
insl
cmp
decl
dec
scas
aas
mov
or
sarl
mov
cmp
lds
sbb
pushl
out
test
insl
adc
call
push
in
inc
inc
rcll
cli
loop
dec
incl
addr16
dec
cmpsl
dec
xchg
clc
ret
mov
mov
jle
push
frstor
icebp
bound
jns
test
leave
adc
out
inc
icebp
xor
mov
loope
jae
add
lods
movsl
call
inc
imul
shl
mov
pop
adc
scas
imul
out
aaa
ljmp
and
in
mov
add
push
sbb
sub
mov
jmp
push
jne
fmul
sbb
dec
sub
pop
pop
and
jp
cmp
sar
incl
jmp
push
in
cmpsb
adc
ret
shr
mov
shrb
or
and
scas
inc
mov
sbb
decl
inc
es
sub
iret
dec
sbb
lret
cmp
mov
xchg
and
mov
jle
mov
pop
outsl
movsb
notb
out
popa
lods
xchg
lods
xchg
rcr
cmc
call
enter
dec
sti
jecxz
loop
xor
lock
cmp
imul
insl
mov
cmp
cmp
or
shlb
dec
inc
nop
lcall
pop
dec
movsl
add
and
jmp
lods
enter
jg
shlb
sarb
mov
pop
push
out
inc
sbb
dec
push
dec
pop
ss
adc
adc
mov
mov
fisttps
enter
adc
inc
ret
jo
jl
repnz
inc
push
push
xchg
mov
loope
pusha
hlt
xchg
icebp
mov
outsl
or
sbb
dec
dec
int3
add
cmp
mov
or
jb
xor
je
push
or
push
dec
rorb
mov
sub
xchg
mov
ss
fiaddl
jle
xlat
and
xchg
lods
sub
ljmp
das
adc
repz
pop
jo
push
mov
mov
adc
mov
inc
icebp
rolb
add
inc
ljmp
dec
test
int3
xchg
std
and
dec
stos
sti
mov
jb
xchg
and
jno
in
mov
es
out
lcall
repz
jle
add
push
push
sbb
mov
xchg
movsl
daa
mov
dec
lcall
jl
xor
testl
xor
add
jae
inc
addr16
divl
jmp
cmc
ljmp
mov
jnp
repnz
fdivs
mov
fnstenv
add
dec
push
cmp
out
cmp
nop
inc
test
xor
lret
add
ljmp
test
sahf
lods
xchg
add
aas
ja
xor
xor
loopne
fdiv
jmp
mov
mov
ret
sbb
and
lock
adc
decl
pop
hlt
pusha
mov
loope
ds
cmp
lods
jp,pn
jmp
ljmp
xchg
and
jg
lcall
data16
lods
jmp
xor
shrl
ljmp
int
sbb
out
lret
xchg
mov
enter
cmp
out
fsubr
xlat
cld
or
cli
test
test
mov
call
inc
mov
ja
xchg
adc
ljmp
xor
adc
repz
or
lods
int3
xor
cmp
sbb
cmp
movsl
lcall
into
das
push
lea
dec
fisubl
mov
leave
mov
outsl
mov
mov
scas
scas
enter
ljmp
push
mov
scas
outsb
arpl
out
or
mov
mov
jno
inc
pop
jmp
ljmp
push
xchg
adc
adc
iret
out
push
in
xor
cmp
cmp
incl
into
dec
sbb
inc
mov
cli
or
push
mov
push
ret
push
fdivrs
lcall
sub
adc
in
mov
lods
or
je
add
outsl
cld
mov
ficomps
mov
jns
xchg
mov
sub
clc
jmp
pop
mov
jns
mov
mov
push
insb
cli
mov
push
movsb
xchg
inc
lock
push
cltd
shlb
mov
les
out
decl
mov
and
in
inc
jo
aad
test
fidivl
lcall
push
js
adc
mov
js
test
ja
inc
cmp
cmpsb
adc
call
inc
xchg
or
repz
decl
mov
jmp
in
add
jl
lcall
cmp
pushf
stos
push
sub
jnp
movl
js
lret
push
adc
mov
pop
pushl
sub
incl
mov
int3
dec
jmp
scas
mov
mov
dec
mov
and
out
mov
fcoml
pushl
sub
pop
inc
ds
jmp
lcall
inc
orl
dec
lcall
mov
push
lret
mov
loop
enter
dec
icebp
fldl
add
xlat
movsb
ljmp
pop
jb
or
shrb
adc
and
sbb
mov
incl
push
and
cmpsl
int
out
aam
sub
sub
mov
pop
push
xor
fcmove
clc
pop
ficomps
sahf
in
stos
push
repnz
xor
push
aad
out
frstor
in
shll
sub
incl
in
inc
or
sub
push
pop
loop
das
xchg
dec
adc
mov
call
inc
mov
imul
fldt
mov
leave
or
xlat
and
incl
lock
cmp
ret
sub
dec
add
faddl
mov
adc
add
aaa
mov
imul
rorb
adc
inc
xchg
das
mov
mov
jmp
jle
cvttps2pi
iret
fwait
jg
or
pop
jecxz
jno
adc
and
sbbl
test
mov
push
and
or
in
dec
clc
xor
cmpsl
ret
incl
bnd
fnstenv
out
insb
cmp
mov
les
push
ljmp
cwtl
pop
xchg
inc
aad
xchg
mov
addr16
insl
leave
pop
fwait
sahf
sub
stos
fnstenv
insl
jo
loop
into
decl
js
sahf
lods
or
pop
sbb
data16
xchg
test
xchg
sub
xchg
dec
jecxz
outsb
jb,pn
add
call
clc
aas
stc
dec
insb
inc
hlt
dec
add
sbb
andb
xchg
mov
mov
idivb
inc
sub
shlb
mov
out
cmpl
pushl
rclb
pop
push
cmp
xor
fs
xchg
out
mull
jg
sbb
inc
pop
add
fadds
fstl
cmpb
pushl
push
jne
sub
cmp
nop
jno
rorl
push
inc
push
xchg
pusha
cmp
mov
repnz
decl
xorb
test
cwtl
and
jne
inc
cld
jbe
mov
add
pop
lcall
xchg
std
out
cmp
daa
sbb
inc
scas
jne
or
mov
fildll
jmp
call
jo
and
in
sub
pushf
inc
mov
cltd
imul
fsubl
jmp
loopne
in
add
lods
pop
sbb
inc
push
aam
jmp
xor
xchg
lcall
inc
jl
mov
inc
xchg
rclb
sub
shr
mov
mov
ja
scas
pop
rorb
mov
dec
add
push
cmp
or
sahf
lret
jmp
lret
pushf
lds
ret
daa
lock
outsl
gs
mov
lret
sahf
or
cld
notl
aad
decl
cmp
daa
push
iret
cld
mov
mov
sub
mov
xchg
pop
pop
pushl
pop
or
and
in
push
nop
fwait
subl
mov
dec
arpl
lcall
lret
pop
rcr
or
sub
add
jl
inc
jbe
cmp
stc
mov
call
cmp
sub
fists
int
dec
cmpb
or
movsl
movsb
pop
sub
xchg
push
mov
add
mov
xchg
aaa
push
jmp
test
dec
ljmp
out
movsb
test
mov
sarl
imul
jb
push
mov
inc
lret
push
repnz
mov
test
aas
jle
sub
addr16
cwtl
lock
inc
in
imul
adc
sarl
daa
pop
negb
adc
arpl
mov
sahf
shl
add
xor
mov
xchg
cmp
jmp
in
xchg
mov
sbb
fsts
sti
dec
into
xor
fdiv
popa
test
push
sbb
and
ljmp
mov
enter
or
sub
je
mov
fcmovu
enter
mov
mov
decl
movsb
push
mov
add
jmp
jp
pushf
lcall
lcall
bound
mov
push
sti
test
jmp
les
xchg
xor
jl
xchg
or
push
xlat
call
jae
and
popf
sbb
mov
cmpsl
push
jg
add
jmp
ds
jmp
frstor
mov
repnz
movsl
and
xor
in
ret
mov
decl
mov
jecxz
daa
inc
cli
subl
js
and
xor
enter
ljmp
dec
sbb
mov
dec
aad
scas
ret
fs
movsl
ja
mov
int
ljmp
jl
aam
lea
and
add
push
inc
xchg
loope
roll
jmp
mov
es
loope
mov
xor
rcrb
jle,pn
mov
loop
pusha
mov
ljmp
cmp
push
rolb
jnp
sbb
sub
lahf
cmpsl
push
popa
adc
dec
test
push
data16
imul
call
movsb
push
dec
outsb
push
pop
lcall
call
mov
xorb
mov
inc
jns
xchg
push
pop
pushl
adc
stos
je
fbstp
mov
dec
mov
insb
adc
dec
push
inc
mov
add
pop
out
push
call
mov
cld
sub
cmp
push
cmp
in
popa
inc
fildl
loopne
and
in
mov
aaa
add
int3
decb
adc
jecxz
lea
sbb
push
cmpsl
cwtl
decl
jmp
and
add
shlb
scas
adc
inc
adc
lcall
fsubrs
rcrl
int3
ja
lahf
xlat
jmp
or
jb
jbe
xor
test
pushl
das
fs
mov
das
xlat
repnz
mov
xchg
jae
xor
jbe
push
sbb
and
push
testl
in
test
mov
stc
cmp
pop
lock
loop
ljmp
xchg
mov
cmp
jae
ret
lret
mov
push
int
xor
cmp
xchg
xor
sub
xor
shll
and
cli
inc
adc
mov
stc
incl
or
inc
sbb
addr16
jns
sbb
push
and
sbb
push
jbe
mov
mov
push
pushf
xchg
sbb
add
imul
and
cmpsb
mov
call
ljmp
sbb
xor
sub
je
aas
loope
sub
ljmp
sbb
cmp
mov
inc
idiv
cs
sub
jp
ret
int
or
scas
mov
pushl
pop
insb
pop
cld
cmp
jp
loopne
adc
add
mov
dec
repz
imul
cli
out
lcall
push
dec
out
push
icebp
or
pop
mov
mov
leave
test
jo
xor
ljmp
hlt
fadds
add
ror
cmp
push
xchg
fs
and
nop
in
mov
push
fsubs
call
in
cmp
pop
clc
adc
and
push
sbb
iret
call
call
fstp
sub
pop
inc
sti
lret
outsb
out
add
test
orb
fs
jl
jle
mov
mov
jmp
adc
popf
outsb
pusha
sbb
int3
les
sub
decl
stc
movsb
in
xchg
adcl
cltd
mov
sbb
loope
arpl
in
test
jmp
cld
adc
dec
addr16
ja
or
xlat
push
test
jge
es
mov
or
imul
cmp
js
mov
pop
pop
xor
mov
mov
icebp
xchg
add
outsb
mov
incl
rorb
into
jmp
sub
mov
jmp
aad
mov
incl
sar
lds
lret
stos
stos
dec
sbb
pop
cld
setl
jl
pop
flds
shlb
and
movsl
insb
cli
mov
mov
test
inc
int
in
popa
int3
pop
testb
es
pop
jo
xchg
and
in
lcall
cmp
dec
loop
lds
popf
mov
aas
ret
push
addr16
dec
scas
sub
push
cld
adc
push
cli
ljmp
loope
bound
loop
insl
xchg
inc
adc
mov
dec
iret
jmp
jo
clc
jge
nop
add
fdivr
lea
and
mov
pop
fnstcw
pop
test
push
lods
jmp
jb
test
arpl
clc
call
mov
out
adc
stos
sbb
daa
out
xor
jl
clc
fsubrs
xchg
test
ljmp
jmp
out
sarl
loope
jns
xchg
insl
mov
xchg
mov
sbb
xor
decl
lds
sub
xchg
lret
xchg
cmp
inc
fwait
hlt
outsb
mov
test
movsl
sbb
cmp
cltd
cmp
lods
adc
mov
pop
shll
xchg
jae
fcos
and
pushl
mov
mov
test
jo
mov
fsubs
cmp
jmp
dec
shrl
push
pusha
ja
and
pop
mov
or
out
lods
lcall
fs
call
pop
add
insb
in
popa
pop
jo
enter
testb
lea
mov
jmp
aaa
movsb
scas
jbe
xor
sub
rcll
or
js
scas
out
stos
add
pop
out
fbld
lahf
lahf
mov
mov
dec
mov
and
imul
in
sub
inc
dec
jo
mov
push
xchg
cmpsl
mov
mov
movsb
add
push
out
or
call
sbbl
popa
into
mov
add
test
mov
lcall
shlb
xor
stos
jbe
icebp
popa
mov
stos
jecxz
sahf
adc
cs
mov
push
xor
jge
and
insl
or
sti
cld
jae
xor
cmp
ljmp
mov
and
mov
inc
and
out
push
leave
dec
xchg
inc
repnz
call
test
push
popf
cmc
push
stc
inc
xchg
loope
lea
push
and
stc
push
add
pop
dec
push
lds
or
out
pop
push
aaa
icebp
or
stos
dec
jb
rorb
lcall
push
sbb
xchg
xor
clc
fmul
dec
test
pop
jmp
mov
repz
sbb
mov
add
xor
in
aad
mov
frstor
clc
inc
cs
mov
dec
mov
adc
push
adc
ja
add
test
mov
mov
inc
insl
and
xor
or
popf
push
dec
nop
arpl
fdivs
mov
xchg
out
adc
jmp
fdiv
mov
fcos
sbb
sub
popa
cmp
xchg
sub
decl
or
mov
jns
mov
insb
push
es
pop
imul
in
incl
mov
outsb
das
jg
ret
jbe
or
add
and
cltd
lcall
test
ljmp
shrl
and
inc
xor
inc
scas
test
sbb
or
mov
into
jae
incl
movb
add
cmc
jno
cmp
cli
jp
hlt
ds
shlb
decl
mov
mov
sub
inc
sub
pop
stos
lret
stc
test
incl
sbb
fbld
loopne
jg
hlt
aas
stos
shrl
sbb
ljmp
arpl
jbe
shr
jl
xchg
fbstp
lods
jle
loop
jecxz
xor
ret
lcall
sub
scas
add
mov
shrl
das
push
dec
xchg
dec
jmp
insb
push
sub
and
decl
add
xchg
faddl
sub
sub
inc
push
mov
pushl
nop
xchg
inc
pop
incl
and
int
call
fcmovb
sbb
les
incl
cmpsb
push
arpl
sub
loopne
pop
out
stos
test
sub
dec
adc
pop
cmc
adc
jmp
sbb
insl
cmp
cmp
push
sbb
adcb
sti
orl
sbb
cs
sub
push
stos
adc
sti
and
sub
sbb
mov
mov
decl
dec
push
xchg
incl
dec
jg
and
sub
and
sahf
xchg
xchg
pop
jp
incl
pop
in
push
or
addr16
loopne
lods
enter
scas
cltd
xchg
pop
aaa
xchg
ljmp
out
or
ja
xchg
push
insl
sub
add
rorl
mov
das
sarl
xchg
incl
sbb
jnp
repz
or
pop
das
or
xor
das
sbb
test
dec
scas
rorl
push
dec
lods
and
jge
xor
shrb
sbb
dec
ret
fincstp
shrb
pop
outsb
mov
out
cwtl
outsb
test
fsubl
movl
sti
movsb
mov
fbld
int3
xlat
arpl
jmp
push
testl
dec
fmul
lret
xchg
jne
fs
push
cmp
pop
jmp
decl
shl
cwtl
pop
cld
and
add
push
fisubrs
mov
inc
mov
add
cmp
xor
mov
jg
cld
js
mov
inc
adcl
inc
adc
jmp
mov
es
dec
loope
mov
nop
bound
les
fcoml
mov
adc
mov
insl
fwait
mov
mov
or
lahf
ret
je
push
incl
sub
sub
xchg
dec
push
sub
movsl
add
or
movsl
xchg
mov
pop
mov
mov
int3
or
and
pushf
repnz
cmp
scas
stos
fsubrs
or
repnz
insl
sar
inc
jg
adc
into
pop
jb
ficomps
inc
push
test
jecxz
and
add
jnp
decl
stc
mov
loope
jmp
jne
and
test
mov
cld
cmp
icebp
outsb
cmp
hlt
loopne
sahf
imul
adcb
subb
push
ljmp
in
out
and
repnz
lahf
ss
sbb
mov
test
decl
push
decl
sahf
fs
jp
sbb
repz
cmp
mov
into
and
call
mov
rclb
cmp
pop
fisubrs
sub
mov
mov
jne
or
mov
loop
dec
adc
out
or
adc
dec
jno
pop
sbb
in
test
nop
mov
jb
fnstenv
xorb
jb
mov
and
incl
rcr
repz
mov
xorb
cmpsb
arpl
xchg
lcall
cmp
sub
sar
in
in
outsb
mov
cltd
sti
cld
xchg
xor
test
imul
jbe
fisubs
mov
push
pop
adc
fnstcw
arpl
outsl
mov
in
lret
stc
rcrl
cs
add
mov
fidivrl
jge
pushl
push
arpl
dec
call
inc
jle
mov
into
lret
mov
dec
bound
pop
inc
inc
enter
dec
fwait
test
outsb
xchg
pop
scas
jmp
pusha
sbb
insb
gs
call
rcll
pop
push
sarl
test
inc
inc
test
jb
mull
jmp
fistpl
insb
fmull
and
xchg
repnz
sub
stos
cmp
decl
xor
popf
push
pop
out
mov
popf
and
mov
add
neg
out
decl
mov
or
pop
movsb
jl
sti
pop
push
xlat
cmpb
or
xchg
fcos
lcall
idiv
cmpsl
stos
jb
xchg
int3
dec
ja
das
mov
jge
pop
mov
dec
in
call
mov
mov
push
addr16
mov
add
push
mov
jp
lret
xchg
mov
call
add
mov
aas
xchg
divps
jmp
pop
es
xor
fisttpll
or
xor
jne
add
and
adc
loop
pushl
mov
das
int3
or
pop
dec
dec
lahf
jecxz
and
test
call
add
pushl
mov
test
frstor
xlat
pop
cmp
cmpsb
mov
call
scas
mov
notl
xor
xlat
inc
jno
cs
lds
fcoml
ret
lock
dec
pop
adc
jge
into
rorw
aas
imul
dec
dec
pop
cld
addr16
cmp
call
push
or
xor
das
out
imul
sub
pop
push
cwtl
cld
jnp
clc
jae
sahf
dec
xorb
mov
in
xor
outsl
sub
sbb
push
mov
int3
mov
mov
sub
push
mov
and
dec
popf
xchg
cmp
mov
sbb
jge
je
cwtl
incl
inc
inc
popa
fstpl
xor
mov
ds
mov
pushl
out
push
pop
cli
push
add
out
xor
fstl
arpl
fistps
lea
call
sti
jbe
xchg
mov
inc
add
push
push
dec
arpl
xor
dec
push
jecxz
mov
push
fmuls
cmpsl
or
jp
icebp
jae
pop
subb
outsl
daa
inc
mov
ljmp
push
dec
cs
loopne
jp
inc
sbb
mov
mov
shll
ljmp
add
les
jmp
loopne
push
adc
sub
inc
loop
repnz
pop
inc
decl
xchg
or
xchg
je
test
test
std
xchg
mov
jo
jbe
or
ljmp
mov
rcll
scas
call
xchg
push
mov
out
push
mov
incl
pop
cltd
push
cwtl
icebp
add
adc
jbe
pop
xor
jecxz
sahf
subl
or
decl
pushf
subl
out
cmc
fistpl
push
loope
inc
fnstenv
jmp
pop
test
lods
leave
push
aam
pop
popa
sti
testb
scas
cmp
cld
popa
push
and
mov
jmp
adc
jp
inc
or
aaa
shlb
loop
or
mov
out
cmp
pushl
pop
or
push
call
mov
mov
push
movntq
leave
ljmp
aad
and
xchg
and
push
int
data16
jg
and
cmp
or
sub
mov
xchg
sub
daa
push
aas
add
leave
jno
mov
lods
mov
jmp
xor
or
sbb
cs
dec
add
imul
ljmp
repz
loope
outsl
or
add
stc
dec
dec
insb
mov
add
mov
or
call
mov
je
jns
call
dec
fcomps
test
cltd
cmp
lds
sub
sti
rcll
stc
test
cltd
aad
mov
xchg
mov
mov
call
push
mov
sub
inc
mov
push
cmp
push
add
add
decl
and
xchg
xor
add
fmuls
in
jge
sub
or
jmp
dec
sub
cs
mov
jge
mov
inc
add
pusha
inc
cmp
jmp
xchg
cs
dec
and
add
xor
testl
mov
into
inc
dec
ss
test
nop
int3
jecxz
shll
out
bound
out
sbb
call
lcall
jge
pop
popa
mov
mov
push
add
lock
in
in
push
mov
sar
ljmp
imul
lods
mov
lods
sbbb
dec
inc
fwait
jbe
xor
xor
mov
push
decl
xchg
mov
jecxz
daa
inc
ss
cwtl
cmp
hlt
pusha
adc
lock
dec
and
cmp
into
shr
cmp
fucomi
cmp
mov
adc
lcall
jmp
lret
xor
xchg
mov
dec
insb
or
stos
notb
loop
dec
test
mov
shll
insb
mov
call
sub
pmaxub
and
dec
std
enter
movsl
imul
inc
out
ret
add
push
stos
cmpsb
jmp
push
stos
xchg
push
out
sti
loopne
loop
shll
cmp
orl
cmp
in
incl
fwait
in
dec
adc
dec
inc
pop
repz
clc
jae
jp
stos
add
xor
xchg
jecxz
jmp
in
ja
int3
sarb
ds
sbb
cltd
insl
dec
cmp
fcoml
not
repz
aaa
sbb
hlt
sbb
dec
leave
outsb
dec
das
aas
adc
jmp
xchg
movsl
lret
push
jae
xchg
mov
mov
inc
adc
sub
repnz
inc
or
leave
incl
das
xchg
popf
insl
mov
cmpsl
mov
jle
in
push
bound
and
orl
pop
adc
mov
jns
imul
lods
jl
loop
mov
shrb
call
shl
dec
xchg
cwtl
stos
push
out
in
or
aas
inc
mov
ds
mov
jmp
pop
test
fildll
xchg
inc
push
lcall
addr16
daa
inc
popa
outsl
jmp
xchg
push
ror
or
push
jo
out
mov
pushl
int
push
xchg
icebp
decl
hlt
mov
mov
scas
push
movsl
mov
sub
xor
xchg
and
fidivrl
mov
dec
jnp
pushl
jb
outsb
mov
jne
lcall
in
mov
leave
shrb
mov
jbe
and
popf
dec
mov
adc
arpl
push
pop
test
pop
mov
dec
test
dec
rcrl
jae
push
out
test
cli
ret
mov
xchg
mov
call
popa
xor
and
push
push
mov
adc
fstl
sbb
inc
loopne
push
cmp
adc
mov
push
scas
pop
cmp
sub
aam
sbb
xor
test
push
out
jge
add
xor
in
lcall
jecxz
rcrb
and
jno
in
repnz
ret
push
add
add
cmp
pop
pop
push
sbb
mov
pop
dec
xor
std
neg
mov
fsubr
scas
add
and
scas
bound
jmp
xchg
fcoms
out
and
loope
dec
in
sub
jge
push
shlb
faddp
and
sbb
mov
push
cmp
loop
xchg
mov
in
add
loopne
push
push
in
xchg
fsubs
loopne
decl
and
inc
add
mov
out
push
ja
std
aam
fiadds
xchg
pop
lcall
jns
adc
call
outsb
pushf
mov
mov
mov
rcll
ljmp
cmp
xchg
push
push
test
xor
jo
lahf
fisubl
ret
pop
aas
mov
mov
lds
sbb
aam
sub
in
fwait
xchg
in
out
sarl
out
inc
movsl
ljmp
inc
mov
add
fsubs
es
outsl
xchg
mov
fwait
enter
sbb
decl
into
pop
js
cmpsl
jo
add
enter
sub
sub
mov
call
out
adcl
sbb
mov
gs
cmp
mov
pop
adc
jmp
decl
mov
mov
pop
jne
insb
adc
fstpl
inc
stos
lock
popl
aas
jae
and
pop
js
push
jl
cmpsl
into
mov
andl
in
mov
lods
cmpsl
cmp
rcll
pop
incl
ja
loopne
push
cmpsb
add
dec
sub
mov
aad
mov
cmp
pop
in
adc
flds
pushl
outsb
push
out
or
push
mov
lret
sbb
ret
or
mov
jge
test
pushl
aas
iret
pusha
jb
push
inc
and
subb
xchg
enter
jmp
leave
xchg
pop
cmc
insb
mov
pop
sub
mov
xchg
je
pushl
nop
push
mov
test
inc
mov
dec
lret
push
stc
dec
inc
add
es
ljmp
lods
inc
jg
lock
pop
ljmp
jge
das
xor
je
movsl
jmp
aaa
xchg
imul
repnz
aas
das
mov
push
ret
shlb
lcall
ficoms
xchg
out
xor
push
fadds
lds
test
cmpsl
gs
ds
decl
negl
addb
push
mov
adc
fs
pop
jle
cltd
lcall
lcall
sarl
cmc
xchg
push
cmp
xchg
addl
stc
in
sahf
fwait
aad
insb
push
ljmp
fisubl
repz
adc
sub
lahf
adc
xchg
gs
pop
jmp
pop
repnz
decb
push
pop
lds
pop
fwait
push
popf
xchg
lret
icebp
and
incl
in
xor
and
xlat
jne
insl
cmc
decb
test
das
xchg
and
decl
pop
mov
ss
adc
dec
loope
xor
xor
cmovl
pushf
ss
inc
lcall
dec
dec
add
adc
pop
aas
addb
ret
loope
stos
popf
repnz
sarb
mov
jp
pop
repz
mov
pop
les
xchg
cmpsb
xchg
cmp
rol
or
decl
adc
bnd
and
jp
sub
sub
adc
mov
ljmp
les
mov
nop
dec
add
pop
lret
adc
mov
lock
incl
inc
into
test
cmp
adc
dec
out
lods
xchg
sbb
push
xchg
jbe
pop
xor
addb
inc
sbb
xor
das
add
mov
xor
imul
enter
out
cltd
sub
scas
loopne
mov
rcrl
dec
pop
cs
addr16
in
test
mov
pop
inc
cli
int3
pop
and
decl
gs
lcall
push
or
dec
xchg
and
nop
popa
das
mov
dec
pop
pop
test
lcall
leave
xor
jmp
ret
lret
adc
test
jmp
xchg
call
cmpl
sbb
xor
or
into
enter
icebp
shll
jmp
dec
insl
sbb
or
pop
push
lcall
xor
add
lcall
loop
incl
or
xor
and
inc
int
pop
sahf
push
filds
rcll
pusha
dec
and
pop
push
xchg
icebp
push
sbb
stc
mov
cmpsl
cmc
pop
push
ficomps
push
push
ss
mov
call
mov
mov
jb
mov
sbb
imul
dec
pusha
dec
lods
adc
pushl
in
fld
mov
testb
and
inc
push
mov
sbb
push
outsl
cmc
out
ljmp
mov
push
adc
xchg
push
push
leave
mov
shlb
cs
add
loopne
decl
stos
andb
das
popa
aaa
pop
lcall
out
dec
add
dec
mov
jbe
clc
or
decl
popa
sbb
fadd
push
bound
andb
je
add
popf
mov
jl
in
mov
push
cmp
pop
sub
jno
fcomi
mov
add
hlt
lcall
xchg
adc
jae
jmp
sub
or
push
movsl
popa
test
push
push
mov
inc
xchg
adc
dec
adc
stos
pusha
lret
and
adc
leave
dec
nop
jecxz
jmp
mov
sarl
push
int3
cs
pusha
js
arpl
push
mov
lar
test
and
decl
inc
mov
jmp
cltd
pop
mov
push
das
mov
ss
or
inc
cmp
mov
mov
push
into
sahf
sbb
mov
pop
stos
inc
loopne
push
das
loopne
adc
nop
out
decl
inc
cmp
fdivrp
jl
shrb
push
jo
dec
mov
jno
repz
aas
inc
shrb
mov
out
pop
pop
movb
mov
insl
in
mov
insl
or
or
in
xchg
nop
lcall
or
loop
dec
cmp
dec
les
sub
pusha
pop
jbe
pop
aas
push
ret
cmp
dec
data16
cld
test
mov
mov
jno
lcall
sub
xchg
decl
enter
mov
lret
inc
movsb
mov
pusha
sbb
adc
jne
incl
gs
fstpt
addr16
dec
or
xchg
push
jmp
sbb
cwtl
xor
decl
push
and
push
cmp
pop
outsl
dec
jno
out
push
divl
decl
in
add
orb
xor
mov
aam
sub
cli
adc
ljmp
mov
ret
aad
imul
or
test
test
jle
add
jbe
pop
add
push
mov
xor
pop
mov
xor
data16
sbbb
scas
cmp
mov
sti
jmp
mov
and
mov
or
daa
xchg
roll
fs
push
ljmp
xchg
jmp
loope
adc
mov
sub
bound
mov
lcall
fsubrs
and
inc
sbbl
je
fwait
inc
xlat
jge
or
int3
cmp
cmc
lods
pushl
jb
pusha
loop
in
inc
push
push
mov
lock
int
shrb
xor
xor
decl
inc
test
fcoml
loope
data16
aas
jnp
cwtl
imul
call
mov
cwtl
test
jmp
jge
fldl
or
ljmp
pushf
xchg
outsb
mov
push
mov
jmp
test
push
inc
stos
push
dec
xor
test
xlat
dec
pop
test
push
imul
sbb
mov
pop
jae
arpl
sar
ret
push
adc
enter
incl
push
cmc
lock
or
adc
hlt
outsb
ljmp
jg
pushl
jno
divb
cmp
jb
fcomps
repnz
lret
cltd
push
lds
incl
push
shlb
jns
pop
out
fstp
popa
jne
fcmovb
in
sbb
out
movsb
shr
push
call
or
pop
jecxz
popa
mov
outsl
sub
adc
sub
cs
jns
jmp
addr16
mov
cmp
test
mov
out
or
inc
xchg
loop
mov
rolb
andb
std
in
in
lret
inc
jmp
or
sub
hlt
scas
cli
mov
test
inc
mov
or
sbb
lea
int3
test
jae
loop
out
into
sbb
fsubl
xchg
push
ja
pop
cs
mov
and
je
je
sbb
js
sar
orb
inc
dec
insb
push
push
mov
inc
fldenv
dec
aaa
aad
cwtl
divb
cmp
mov
ljmp
mov
aas
les
leave
cmp
icebp
xor
stos
and
nop
jb
shr
cwtl
in
sahf
push
pop
pushl
in
add
add
enter
aaa
cltd
in
adc
lret
sub
repz
scas
lcall
loopne
inc
xchg
xor
sub
dec
inc
addl
jmp
xchg
jnp
stc
adc
test
incl
mov
lahf
jmp
xorl
inc
andl
loop
dec
int3
push
repz
lret
out
and
dec
xor
mov
rcrb
js
movsb
jmp
or
adc
mov
ss
nop
ret
add
mov
movsl
mov
pushl
xor
pop
out
push
popl
push
mov
rclb
mov
outsl
cmpsb
in
into
dec
cltd
pushf
push
fmulp
sub
aad
cmc
dec
scas
adcb
pusha
pusha
pop
pop
inc
shrl
mov
sub
jmp
pushl
fisubrl
inc
or
icebp
xor
mov
test
jg
sahf
add
lcall
andb
fisttpl
xchg
jecxz
mov
rolb
inc
mov
fdivr
jmp
test
std
fwait
clc
das
enter
popa
sub
inc
cmc
insl
add
cmp
xchg
call
iret
cli
shrl
jp
mov
add
push
or
cmp
repz
incl
sbb
popf
jge
out
loopne
daa
std
popa
icebp
stos
sub
fwait
adc
gs
decl
imul
leave
arpl
dec
or
sti
gs
shrl
fsubp
fbstp
push
jmp
sub
hlt
mov
popa
imul
jg
jmp
lods
inc
sbb
mov
ljmp
pop
sbb
sti
shrd
push
mov
loop
or
aad
iret
movsb
fs
call
cwtl
jecxz
cmp
xchg
jnp
inc
imul
and
adc
mov
imul
cmp
decl
pushf
xor
dec
out
rol
push
fbld
rclb
stc
outsb
pop
push
lret
lcall
jo
out
imul
test
int3
mov
lods
adc
sbb
fcmovu
jb
xor
dec
lcall
lock
clc
stc
push
test
sub
jae
clc
adc
idivl
test
scas
sub
ljmp
out
adc
aam
testb
iret
lret
cmp
jmp
mov
mov
inc
pop
dec
add
adcl
pop
call
or
outsb
fiadds
imul
mov
movnti
inc
imul
lods
mov
imul
cmp
pop
jns
iret
in
dec
mov
lret
stos
mov
xor
daa
push
and
xchg
lods
adc
push
inc
repz
ss
push
lahf
icebp
fstl
aaa
jge
testl
daa
jl
cmp
roll
pop
fsubrl
push
push
stos
repnz
push
jge
inc
pop
mov
push
inc
dec
mov
outsl
inc
jmp
out
xchg
je
lret
insb
rolb
adc
cmp
xchg
aad
fidivl
add
push
and
cmp
and
fsin
shlb
add
sbb
jb
inc
mov
jle
mov
inc
stc
adc
repz
sub
jp
shlb
aad
mov
xor
xor
jae
bound
fstl
adc
clc
cmp
dec
or
pusha
mov
sub
and
push
add
ss
cmpsl
test
sub
lcall
lahf
jno
in
call
pop
mov
mov
movsb
push
mov
jl
lcall
pop
jnp
push
xchg
stc
mov
xor
hlt
pop
jg
adc
or
dec
into
mov
ljmp
test
or
jns
add
push
into
add
xor
aas
call
adc
cmp
lcall
aam
pushf
pushf
pop
std
mov
fs
popf
pop
decl
xchg
rorl
inc
mov
mov
dec
cld
notb
sub
fdivs
pushl
push
ficompl
push
stos
loop
mov
ror
mov
sub
aad
inc
cli
ljmp
dec
dec
cs
dec
push
add
jl
push
add
sub
cmpsb
shl
pop
pop
dec
push
mov
lea
je
mov
lar
popa
frstor
and
call
mov
xchg
adc
mov
mov
inc
push
ficompl
xor
imul
call
or
data16
fidivs
divb
cmpsl
outsb
in
pop
mov
lds
xchg
mov
lea
sub
in
into
pop
repz
ljmp
addl
adc
push
enter
xchg
orb
test
fsubrl
outsl
outsl
and
jl
and
ds
sub
xchg
mov
ds
jge
outsb
pop
hlt
push
cmpsl
push
inc
addr16
lcall
jb,pn
sbb
jns
enter
daa
or
mov
jbe
xor
call
and
inc
imulb
fbld
mov
nop
jno
xor
push
jl
ss
adc
out
incl
out
fdivl
push
mov
mov
insb
cmp
dec
cmc
dec
das
jmp
dec
or
aaa
dec
out
out
int
stc
or
mov
std
dec
or
adc
decl
dec
faddp
mov
sqrtps
dec
sub
jle
jle
pop
icebp
pop
mov
add
inc
and
dec
rol
call
cmp
pop
add
lods
mov
idivb
xchg
pop
fs
pop
in
cs
ja
imul
std
lock
sti
add
fldenv
and
repnz
dec
pop
sub
inc
inc
push
pop
xchg
out
adc
pop
add
ja
mov
push
neg
insb
or
cld
and
jmp
bound
mov
popa
out
into
inc
jo
push
mov
cmpsb
fcomps
inc
sub
decl
cltd
push
push
pop
sbb
les
or
mov
jmp
clc
fsubs
call
sbb
ret
pusha
pop
mov
popl
inc
fldl
call
data16
stos
je
fstp
insb
insl
push
fs
lret
push
sahf
mov
dec
out
inc
sub
movsb
pop
xor
pushl
xlat
mov
int
movl
icebp
in
int3
fists
test
ljmp
mov
sub
inc
cmp
ret
repz
loop
fs
and
decl
out
adc
mov
test
icebp
loopne
icebp
adc
call
out
xchg
cltd
pop
test
daa
stc
icebp
scas
ds
test
sbb
leave
jmp
add
add
notl
jae
pop
sbb
fwait
imul
jmp
fisubs
mov
outsl
insb
minps
lcall
push
push
jb
push
ljmp
or
imul
push
inc
push
and
xchg
fdivrs
jne
into
pop
movsl
loop
cld
cmp
push
pop
decl
pushf
icebp
lods
int
mov
stos
or
stos
inc
pusha
es
push
pop
xabort
jle
mov
mov
das
add
ljmp
scas
and
xlat
xchg
sbb
movsb
and
aam
sarb
and
dec
mov
xor
adc
decl
in
mov
push
mov
push
mov
aam
wbinvd
mov
scas
or
jnp
mov
mov
repnz
movsb
xor
push
icebp
inc
dec
testb
das
in
or
pop
ret
ljmp
lds
jmp
int
xchg
arpl
addr16
in
pop
xor
cli
mov
dec
dec
or
cli
aaa
ds
pop
mov
sbb
xchg
hlt
jnp
movsb
and
jb
in
mov
push
push
jle
mov
jbe
push
imul
xor
jne
push
dec
jge
inc
rorb
in
out
sbb
jmp
mov
lret
sbb
iret
dec
sub
xlat
fnop
sub
movsl
dec
pop
lcall
decl
mov
enter
sbb
pop
dec
and
jp
fdivs
andl
mov
sbb
mov
xchg
and
cmp
dec
dec
mov
dec
add
push
jmp
stos
dec
decb
mov
add
dec
jne
sub
xor
shlb
incl
es
pop
movsb
lea
push
movsb
cld
outsl
ficompl
cmp
dec
fcmove
cwtl
int3
js
mov
testl
xchg
ss
mov
dec
jl
jns
lods
inc
cmp
icebp
andl
call
push
ja
or
jl
push
inc
aam
cli
mov
cmp
rcr
jle
jns
ss
cli
cmpsb
push
jbe
sbb
sbb
mov
aas
jecxz
addl
loope
mov
data16
incl
cs
push
push
repnz
ret
cwtl
jle
mov
dec
adc
fidivrs
call
push
jl
xchg
xchg
add
jecxz
dec
sahf
bound
mov
dec
inc
inc
add
jmp
mov
inc
sub
imul
cmc
cli
sar
stc
push
rclb
fcoms
mov
jmp
push
sbb
or
fs
aas
jo
push
lret
push
xchg
psubb
fwait
cmp
mov
pop
sbb
adc
bound
fcoms
pop
mov
stos
cmp
jo
xor
je
dec
mov
xor
stc
ss
test
and
mov
data16
mov
pop
and
scas
add
in
ret
dec
stos
ret
adc
sub
mov
add
aam
negl
jl
aad
or
cmp
pop
mov
mov
incl
sbb
or
rcll
mov
mov
cmp
xor
dec
mov
push
pop
js
pushl
xchg
xchg
fimull
lods
jno
movsl
loop
mov
push
sti
mov
ljmp
or
xor
test
cld
inc
test
test
sbb
cmc
mov
cmpsb
mov
stos
lcall
xor
sbb
jbe
xor
fstl
std
xor
popa
leave
cli
push
loope
test
mov
arpl
rcrl
ficoml
and
cld
in
scas
loope
cltd
sahf
xor
ljmp
lods
mov
rcrl
mov
inc
pop
ja
faddp
mov
inc
jnp
push
stc
incl
add
imul
add
sub
rcll
les
mov
mov
jbe
push
mov
push
xchg
sbb
sbb
push
fwait
into
les
dec
pusha
hlt
pop
or
or
call
hlt
js
stc
imul
xchg
sarb
mov
in
xchg
sbb
icebp
std
xchg
pushl
scas
fistpll
pushf
ret
pop
call
add
and
imul
mov
or
jns
dec
popa
popa
mov
movb
fbstp
cltd
in
mov
iret
xchg
adc
pop
sub
loope
jnp
pusha
jmp
out
xor
fisttpl
ret
lods
inc
ret
sbb
mov
testl
icebp
dec
sahf
add
or
cli
jmp
movsl
mov
outsb
dec
or
call
aad
push
adc
mov
mov
inc
xchg
jge
sarl
gs
mov
pop
fldcw
stc
pop
stc
ljmp
jno
jnp
scas
imul
adc
pop
hlt
jecxz
shrb
pop
in
scas
pop
sbb
ljmp
and
add
xchg
movsl
dec
dec
aam
sbb
jno
inc
xchg
push
gs
shlb
out
movsl
fisubl
add
test
add
ds
and
lret
mov
call
or
mov
cmpsl
xlat
mov
sub
ret
or
jmp
jns
popa
pusha
pushf
sub
add
loop
jno
sbb
enter
jg
adc
ljmp
jb
sarb
push
ret
inc
xchg
leave
jb
sbb
jmp
sub
ljmp
dec
push
iret
addb
cmpsb
push
and
out
mov
shll
dec
mov
movsb
lahf
add
decl
adc
sbb
stos
js
dec
adc
nop
repz
adc
andb
push
sbb
in
fdiv
dec
mov
mov
loopne
or
es
and
popa
jo
decl
add
ret
mov
mov
negl
orl
adc
je
sub
dec
and
cwtl
gs
shrl
movlps
dec
or
cmpsl
scas
add
inc
fistps
mov
decl
xor
mov
test
shlb
push
mov
mov
push
dec
ficompl
incl
call
loop
in
or
lods
fcmovnbe
mov
pushf
lock
mov
push
int3
int
outsb
out
add
fisttps
lock
and
aas
into
addr16
adc
decl
addr16
mov
adc
int
stc
xor
stos
mov
popf
rolb
dec
decl
ja
andb
dec
mov
je
inc
inc
cmc
xchg
mov
arpl
pushl
lcall
stos
jecxz
loopne
pop
or
loopne
ja
addr16
test
call
pop
jb
lcall
xor
push
push
rcl
mov
arpl
scas
in
xlat
jbe
dec
push
cli
lock
mov
addb
adc
addr16
pop
fisttpll
lcall
jl
call
and
sub
cwtl
xor
push
lods
pop
test
or
pop
cmp
inc
xchg
jo
test
lcall
test
rclb
mov
adcl
jnp
rclb
loope
ljmp
push
iret
or
imul
imul
mov
or
in
shr
out
cli
lcall
inc
sub
push
or
sti
cmovge
out
pop
push
fdivr
call
jo
xlat
shlb
and
xchg
lcall
aad
cmpsb
or
fimull
mov
sbb
int3
jl
lret
ljmp
mov
lods
or
daa
in
dec
js
pop
mov
and
arpl
add
setle
sub
dec
cmp
lcall
lock
mov
mov
or
insl
insb
out
repz
add
aad
enter
inc
loop
lcall
jle
xor
lods
sub
xor
or
xor
aaa
gs
nop
add
push
scas
mov
es
lcall
and
addr16
push
dec
sbb
cmc
sbb
lods
out
movsl
aaa
out
jmp
insb
outsl
or
push
hlt
pushl
stos
es
out
cmp
jo
pop
je
adc
mov
sub
mov
cmp
daa
jnp
xchg
jae
jle
fs
push
jmp
pop
test
cmc
inc
icebp
sti
cmp
jge,pn
jle
lahf
xor
push
test
call
fmull
mov
xchg
idiv
push
sub
outsb
les
cltd
push
push
fnstcw
sbb
mov
stos
or
mov
sbb
aad
xorl
orb
decl
dec
mov
sub
lret
sub
add
in
fnstenv
loope
add
lahf
pushl
mov
xlat
pushf
in
xorl
mov
pop
je
push
jnp
fsubl
in
dec
jl
loope
incl
out
dec
clc
test
int
pusha
sub
movsb
stc
sbb
mulb
adc
aaa
sbb
cltd
jecxz
pop
lcall
jns
rcl
das
push
idivb
inc
sar
sub
inc
jno
mov
fwait
dec
xchg
call
es
mov
sub
mov
xchg
fsubl
leave
into
test
sub
mov
lret
ljmp
mov
adc
orb
lds
mov
lds
daa
out
gs
push
mov
aas
mov
mov
loope
mov
rcl
jae
mov
mov
jmp
sbb
mov
pushl
fimull
or
enter
mov
xchg
inc
inc
outsl
leave
jnp
cs
jb
xchg
loope
sar
pushl
test
push
inc
in
push
jmp
mov
dec
pop
xchg
ret
and
fwait
jl
adc
rorl
dec
xor
hlt
into
loope
jnp
mov
jecxz
push
andb
dec
stos
shlb
jo
decl
sbb
or
jl
push
inc
adc
sbb
mov
adc
rorb
decl
push
cli
outsl
mov
dec
jo
jae
outsb
jne
jbe
aaa
out
push
xchg
movsb
shlb
jle
shlb
ljmp
aam
lods
adc
sbb
stos
test
jne
insb
mov
add
call
jecxz
lods
call
and
jecxz
cmc
sbb
aaa
call
fistpll
sbbb
stc
mov
stos
addl
es
sbb
xchg
mov
aam
repz
clc
mov
or
incl
rcrl
pusha
bound
mov
out
inc
mov
push
dec
clc
cmp
and
xchg
xchg
rclb
adcl
movsl
das
cmp
mov
inc
inc
daa
jnp
and
jbe
pop
mov
dec
adc
sub
repz
inc
call
fisubrl
and
test
fwait
or
int
lahf
cmp
out
mov
inc
dec
mov
test
add
pop
fsts
insb
insl
pop
xchg
push
lret
cmp
jmp
fnstcw
mov
hlt
test
push
mov
inc
sahf
nop
ljmp
aam
mov
xlat
cmc
adc
push
shlb
xor
pop
and
push
adc
and
ljmp
adc
iret
out
cmp
xor
sarl
push
cmp
cmc
and
xor
and
loope
push
dec
xor
add
push
jnp
les
hlt
in
ss
pop
xchg
xor
cli
loopne
mov
in
out
dec
inc
pop
jg
mov
out
push
push
cmpsb
adc
xor
sar
lcall
dec
aam
cwtl
inc
inc
pop
out
sub
inc
je
ss
ss
je
fsts
jecxz
add
sbb
push
pop
jbe
xchg
push
sub
in
in
rcr
fdivl
popf
xchg
mov
inc
cmp
cmp
enter
int3
lods
outsl
fs
gs
jno
mov
cmp
incl
cmc
jl
and
mov
movsl
shll
xor
mov
jle
xor
push
std
or
sbb
scas
fwait
ja
inc
push
add
pushl
sti
iretw
mov
inc
dec
add
test
outsb
ss
insl
out
sub
jb
push
es
cmp
pusha
add
fstpt
mov
cmp
pop
jmp
sbb
mov
mov
inc
test
mull
mov
bound
xchg
push
lea
ja
adc
daa
loopne
call
jbe
pop
ret
lahf
mov
sub
mov
lock
pop
lcall
push
jne
or
inc
cmp
fistps
cli
mov
mov
fwait
jg
mov
mov
pop
enter
inc
sub
adc
sbb
popa
push
mov
xor
pushl
xchg
popf
mov
outsl
xorl
iret
das
lret
sbb
xor
shll
rcl
data16
jmp
push
ret
fs
inc
xlat
mov
cmpsb
popf
mov
jmp
aam
xor
cmp
aaa
js
jl
stos
push
aas
ds
jno
inc
lcall
sahf
aad
mov
adc
mov
loopne
push
and
or
sti
cld
mov
ret
jmp
popf
mov
sbb
lret
rorl
or
imul
adc
cld
icebp
xchg
mov
jg
mov
aaa
aaa
xchg
xchg
pop
xor
nop
add
inc
mov
cmp
rcrl
push
call
imul
add
cmpsl
cmc
add
xchg
push
xchg
jbe
aad
call
jno
cli
fmull
lahf
mov
loop
ds
push
popf
stos
lods
lock
lcall
incl
xor
scas
adc
dec
mov
mov
movsb
lcall
mov
cs
call
clc
xorb
and
dec
cmp
out
pop
and
into
inc
xchg
je
cli
lods
repnz
lcall
pop
in
add
data16
jne
popa
in
mov
clc
scas
lahf
dec
ljmp
lcall
push
lret
test
xor
in
lock
sub
stos
mov
mov
iret
scas
or
mov
cmpsb
enter
mov
subl
cltd
mov
cli
repz
dec
sbb
jbe
sbb
jo
ret
xchg
dec
cs
clc
stos
in
xchg
daa
pop
push
or
or
fnstsw
cmp
add
and
loope
fdivr
iret
add
int3
mov
jle
pop
cmp
push
ljmp
aad
and
js
cmc
mov
dec
in
lock
call
and
push
sahf
jae
mov
mov
add
add
sub
xchg
lods
adc
addb
mov
pushl
fsubrs
out
leave
push
inc
repnz
sub
call
push
add
pop
mov
call
clc
hlt
fnsave
dec
insb
in
cltd
mov
jmp
sub
popf
mov
xorb
push
arpl
inc
xchg
stos
mov
ds
xor
nop
mov
add
cld
and
test
mov
pop
arpl
push
mov
push
jno
stos
stos
push
fs
xor
lock
into
push
jg
aam
and
jge
jmp
jmp
dec
push
aas
ss
push
ror
pop
out
jae
sbb
jae
loopne
stos
or
ljmp
inc
jb
outsl
mov
divl
in
pop
movsl
cmpb
test
pushl
pop
pop
mov
adc
mov
sbb
test
test
mov
pcmpgtw
lcall
lds
pop
xchg
fsts
ss
int
mov
sub
fwait
push
sub
incl
sbb
adc
aam
add
std
jo
xchg
inc
addl
pusha
stos
mov
push
xor
decl
sub
pop
stos
cwtl
lods
scas
push
xacquire
ret
mov
test
pop
jg
imul
dec
ds
hlt
inc
fldcw
inc
movl
cmp
adc
pushl
or
enter
or
shr
inc
dec
jmp
and
mov
lcall
cwtl
popl
aaa
and
and
cmp
jge
das
call
mov
subb
pushl
push
mov
sub
pop
flds
mov
pop
push
repnz
test
mov
mov
jmp
sub
pop
enter
cmp
xor
sub
lahf
push
dec
test
sti
in
cmp
imul
sub
push
mov
enter
inc
rorb
sub
mov
adc
dec
sub
sti
and
decl
lahf
stos
cmp
ret
ror
icebp
cmpl
push
test
int
je
jno
loope
cmc
icebp
jmp
outsl
mov
cmpsl
sub
dec
sub
je
ffreep
adc
into
push
mov
pushl
out
add
push
and
out
pop
dec
es
sbb
cwtl
sbb
dec
jmp
jmp
dec
and
sarl
into
frstor
mov
sub
mov
push
cmpsl
mov
ljmp
pushf
mov
add
pushf
lods
fimull
dec
and
repnz
mov
rol
add
pushl
ds
repz
ja
stos
lret
mov
push
and
jge
xchg
cwtl
call
cli
cltd
fistpll
adc
shlb
pop
mov
lods
jnp
data16
sub
fidivs
push
ret
pop
decl
movsb
psrad
sbb
in
mov
and
and
ljmp
decl
inc
mov
ret
fwait
xlat
les
mov
xor
dec
push
pop
xchg
jp
int
jle
nop
call
push
in
in
js
fsub
jne
inc
inc
fiaddl
cmpb
and
push
inc
adcl
incl
lods
jmp
inc
pop
mov
fnsave
lds
cmp
mov
push
lret
inc
insb
lret
push
aaa
fdivl
stos
inc
mov
mov
cmc
pop
fists
or
mov
lret
cltd
test
push
xchg
neg
mov
fxch
push
repz
mov
test
outsb
or
pop
jge
lret
ficoml
cld
flds
fdivrl
cmc
popl
lods
jae
outsl
movsb
call
nop
add
ljmp
and
jno
sti
adc
adc
adc
xchg
outsl
jl
pop
loop
cs
cmp
psrld
or
pop
mov
hlt
out
push
jne
icebp
and
lods
mov
pushl
pop
imul
mov
pop
xchg
cmp
push
push
aad
xchg
xchg
nop
push
loop
call
jo
adc
xchg
arpl
mov
cmpsb
mov
push
sbb
pop
pop
mov
fnstcw
mov
cmpsl
mov
mov
movsl
lret
sub
xlat
imul
decl
xchg
pop
add
aaa
scas
mov
fistpll
add
fcoml
mov
decl
push
leave
leave
adcl
xor
scas
push
inc
sbb
add
push
fnstcw
ret
pop
incl
xor
out
shll
push
jp
push
mov
cld
lret
js
fadds
adc
push
mov
jbe
push
sub
bound
iret
cmp
inc
das
std
adc
call
push
pusha
gs
jl
out
test
lahf
xchg
data16
js
aaa
cltd
outsb
xlat
inc
cmp
sbb
ds
in
and
sub
fidivrl
and
inc
sub
aaa
push
push
mov
lahf
mov
incl
in
lock
sbb
fidivl
divl
je
adc
fisttps
aas
repz
inc
insb
inc
insb
in
push
push
in
aas
sbb
int3
jle
inc
movd
incl
lcall
imul
push
outsb
into
pop
mov
call
mov
decl
roll
out
dec
ds
shll
int3
ficoml
inc
rolb
nop
or
xchg
sti
dec
cli
std
mov
sbb
sti
push
negb
or
inc
iret
enter
mov
aas
out
ud0
call
sub
and
push
fs
jmp
fildl
in
mov
xchg
sub
decl
jp
pop
sbb
and
inc
push
out
sahf
aaa
mov
movsl
repz
xchg
add
call
push
push
ficomps
xchg
cmp
fs
mov
add
cwtl
mov
decl
or
scas
lahf
iret
xchg
popf
ljmp
cli
out
push
insl
jne
in
adc
jmp
sub
ljmp
and
xchg
movsl
mov
push
pop
lcall
xchg
fimuls
add
cmpsl
incl
out
in
mov
mov
scas
jnp
fldenv
pop
cs
mov
cwtl
mov
xchg
xor
dec
lret
into
js
out
ljmp
and
pop
dec
lock
xchg
sub
jge
nop
cltd
loop
pop
repz
in
cmp
sti
lea
push
mov
decl
dec
cwtl
test
cmpsb
inc
add
mov
das
sbb
out
jge
mov
sub
incl
repnz
sarb
adc
pop
in
testb
xor
add
push
sti
mov
ret
cmpsl
in
sub
pop
sbb
punpckhwd
sub
adcb
push
call
out
add
jne
fmulp
fdivr
leave
jae
insl
stos
dec
mov
cs
pushf
stos
inc
pusha
inc
call
xor
jle
cli
and
imul
repz
jge
xor
and
xchg
data16
ljmp
movsl
pop
repz
add
das
mov
mov
adc
mov
incl
insl
mov
jns
mov
stos
and
push
and
fnstsw
adc
pushf
jmp
das
xchg
xsha1
cmpsb
iret
cmp
clc
mov
push
mov
lock
mov
mov
jnp
popf
lock
sti
rcl
iret
inc
rcll
adc
in
into
mov
sbb
sbb
mov
inc
adc
adc
incl
sbb
jnp
bound
xchg
adc
or
addb
and
int3
les
mov
inc
xchg
imul
popf
ss
stos
inc
jb
cmp
xor
lcall
jmp
mov
ret
int
dec
push
ficomps
mov
or
or
xor
jmp
lahf
jmp
jecxz
dec
jae
fisubl
nop
push
pop
mov
inc
outsb
pop
adc
mov
mov
lcall
inc
dec
adc
into
pop
sub
imul
insb
stos
jp
call
jmp
mov
sbb
jp
adc
adc
lods
clc
icebp
out
ja
xchg
leave
sarb
fnstcw
mov
mov
and
sub
test
imul
dec
cmpsb
or
out
and
cmp
xchg
mov
mov
in
out
inc
inc
nop
lds
push
popa
jmp
sub
and
jge
pop
and
enter
add
test
aad
xor
incl
cli
out
aad
shlb
cmp
movsb
mov
loopne
adc
pushl
sub
std
mov
jae
shlb
scas
dec
cmc
mov
push
jecxz
xor
adc
ss
icebp
pop
add
mov
cmpsl
je
mov
jns
imul
decl
inc
cmc
nop
jle
insb
inc
push
xchg
gs
adc
nop
cmpsl
cmp
popf
bound
fwait
mov
pushl
push
mov
mov
inc
pusha
pop
inc
add
ret
cmpsl
je
addr16
data16
leave
fisttpll
lret
mov
xchg
imul
imul
lds
lea
push
call
xlat
sbb
push
arpl
and
mov
ret
sub
fcos
fsub
push
in
std
dec
xchg
xchg
mov
dec
jbe
jecxz
sbb
js
and
jl
jmp
push
sbb
lods
mov
cmp
loopne
adc
cmp
inc
jl
jns
lret
imul
push
lods
jl
inc
pusha
adc
sub
mov
push
dec
jbe
mov
mov
loop
scas
mov
pushl
xchg
inc
hlt
adc
mov
in
lods
inc
dec
dec
daa
inc
lcall
cld
and
lcall
inc
push
mov
insb
jo
pop
loope
mulb
push
test
adc
test
incl
push
jnp
mov
xor
jo
repz
sbb
aas
push
cwtl
push
xor
push
out
loopne
jmp
imul
add
adc
pusha
leave
ficoml
jg
rorl
faddl
sub
cmp
stos
dec
out
mov
iret
pop
push
xlat
mov
mov
cmp
mov
dec
inc
push
mov
fists
mov
or
jno
ret
pop
push
lock
mov
call
adc
mov
outsl
iret
jne
aaa
add
sti
add
lcall
shrl
or
xchg
movsl
mov
bound
dec
into
arpl
inc
push
repnz
or
incl
das
mov
arpl
in
mov
in
dec
fstl
inc
mov
movsb
pushl
pop
enter
xchg
mov
inc
iret
cltd
rcr
pushf
adc
fnstsw
inc
cmp
jae
dec
movsl
imul
mov
gs
mov
loopne,pn
repz
jmp
lcall
pop
rorl
mov
aaa
jns
ja
pusha
fbstp
pop
and
inc
sub
popl
lret
cli
cmp
mov
dec
push
js
xchg
fimuls
or
jne
sub
adc
push
pop
inc
test
cmpsl
je
sbb
incl
aam
xor
jo
lcall
je
in
imul
int3
mov
sti
pop
decl
push
adc
hlt
jae
sbb
mov
dec
scas
xor
xchg
adc
aam
aad
sub
and
popa
repz
dec
jmp
mov
push
jo
orl
int
adc
and
frstor
call
mov
and
mov
mov
mov
mov
outsb
out
mov
mov
jmp
data16
sub
xor
jbe
test
and
mov
dec
aas
mov
call
ss
call
orl
mov
ss
test
jg
decl
lcall
dec
clc
lock
icebp
js
cld
jno
adc
adc
lret
paddw
lcall
movsl
scas
lods
jle
push
test
adc
sub
out
lds
in
insb
sar
ljmp
das
push
pop
or
dec
lods
adc
xlat
insb
xor
dec
fisubl
out
jo
pop
hlt
pop
xor
ljmp
add
or
nop
nop
out
fnstsw
mov
rcll
data16
inc
mov
hlt
push
pushl
fs
push
mov
pop
mov
sbb
jge
movsb
imull
mov
cli
mov
sub
cmc
cltd
movlps
xchg
adc
cmpsl
stos
jno
mov
push
std
jle
jmp
jae
cmp
add
fwait
sub
lods
lahf
push
mov
push
ret
loopne
sahf
mov
pop
pushl
lods
insb
gs
das
aad
lock
push
inc
fsts
adc
shll
mov
fstl
lods
jl
mov
pop
into
daa
lea
and
cmpsb
xchg
decl
aam
call
pop
mov
loop
leave
mov
mov
sbb
es
adc
mov
cmc
or
lcall
out
adc
xlat
int
fbld
popa
xor
and
fldenv
push
idiv
flds
sub
pop
mov
pop
imul
xchg
add
loope
cltd
loop
inc
push
ljmp
adc
sbb
pop
pop
inc
fstps
pop
sbb
loopne
cs
out
decl
ja
sub
iret
pop
cmp
mov
imul
mov
subb
lcall
jnp
mov
loope
ljmp
sub
pusha
xchg
cli
cmpsl
and
in
es
cld
fwait
jnp
jmp
xchg
shlb
or
xchg
int
dec
inc
sub
int
ja
inc
stos
fidivl
fdivrs
inc
lds
test
clc
sarb
push
mov
push
sbb
sti
outsl
pushl
mov
or
and
loopne
cmpsb
ficomps
shrl
mov
incl
lret
jge
xchg
fdivs
or
xchg
in
dec
rorb
dec
scas
and
lods
dec
xchg
imul
incl
cwtl
sahf
hlt
cmovge
inc
jo
cwtl
add
jecxz
outsl
test
test
inc
sbb
sbb
cltd
inc
mov
cmp
loope
loopne
cmp
mov
jnp
push
add
lods
lods
dec
mov
jno
ret
pop
sub
pop
test
push
std
sti
or
sbb
popf
add
call
xor
ret
and
ret
notb
lret
jecxz
lea
xchg
fwait
sub
movsl
inc
mov
push
int
xchg
fiaddl
icebp
lahf
mov
pop
and
inc
mov
push
dec
mov
lcall
pop
pushf
push
movsw
push
sub
daa
and
sarl
or
pop
in
cltd
aas
and
jmp
push
lds
std
push
inc
jne
popf
int3
daa
into
fmuls
or
mov
sub
es
push
daa
add
incl
push
rcrl
sub
mov
in
ss
outsl
loop
loopne
xchg
shrb
repz
ljmp
dec
xor
cltd
xorl
cmp
add
fs
into
shlb
jmp
dec
fwait
push
push
jae
scas
sbb
fwait
adc
mov
mov
sub
lcall
or
xchg
imul
ja
jns
push
cmp
push
incl
add
inc
in
es
dec
or
rorb
mov
and
dec
jbe
mull
call
sbb
scas
jl
cmp
sbbl
es
mov
jle
aam
jge
jmp
int
in
push
mov
negb
inc
inc
mov
and
rorb
mov
xchg
incl
clc
xchg
out
js
fistpl
std
sahf
dec
or
or
dec
jno
fwait
cmpsb
pop
pop
dec
cmpsb
pushl
cmp
push
dec
test
cmc
dec
add
inc
movsl
jno
pop
lea
leave
mov
mov
decl
add
xor
mov
sub
or
xor
pop
mov
pushl
cli
add
in
adc
jmp
and
rcll
xchg
in
and
sub
pop
cmp
dec
leave
fcompl
ja
mov
xchg
sbb
mov
inc
clc
stc
imul
push
jae
mov
fcoms
insl
jl
lcall
lods
movsb
lahf
pop
or
ljmp
ds
pop
stos
loop
rol
mov
dec
xor
pop
mov
aaa
mov
ficoml
jmp
in
add
mov
mov
clc
jno
imul
pusha
dec
mov
jg
call
sub
pushf
iret
lock
pop
cmp
cmp
dec
pop
xchg
cmpsl
adc
pop
scas
stos
xchg
inc
incl
jmp
aam
jb
xchg
inc
mov
addr16
frstor
into
inc
sub
pop
inc
adc
ljmp
push
shrl
test
inc
jo
jae
xchg
nop
sahf
out
sub
add
fcmovnbe
decl
imul
xchg
cmp
addr16
inc
lds
movsl
or
mov
shlb
clc
in
sub
pop
std
push
push
xor
sti
pusha
arpl
pop
sbb
inc
sbb
call
push
ss
insl
movsb
out
mulb
cmp
ja
or
mov
decl
pop
cmpsb
push
jp
jo
nop
js
mov
mov
movsb
cmp
mov
dec
pop
push
and
sub
inc
inc
das
jp
mov
std
movsl
push
out
cmp
pop
jp
test
cmpsl
aaa
sti
or
stc
cmpsl
mov
dec
insl
jle
movsl
push
cmp
sbb
hlt
stc
mov
jle
fdivl
pushl
dec
mov
bswap
ret
in
movsb
and
mov
ljmp
push
addr16
push
sbb
or
ja
mov
lcall
mov
inc
dec
test
xor
pop
mov
fldt
mov
clc
push
insl
gs
cld
sub
ja
out
pop
daa
fsubs
ror
jmp
dec
mov
sub
lahf
mov
push
sub
fsts
sub
fists
incl
lret
mov
test
subb
mov
jo
sub
pop
mov
incl
inc
jmp
mov
xor
cmp
fsubl
insl
loopne
cmpsl
pop
xchg
cld
iret
sbb
ljmp
subl
push
lahf
xchg
aad
push
xor
push
mov
fcos
ljmp
ds
jns
cli
and
mov
scas
cmp
pop
std
ret
dec
mov
pop
dec
loop
les
cli
dec
mov
cmpsl
insb
xchg
adc
fldt
stos
and
decb
outsl
jp
leave
lods
cwtl
in
xchg
das
data16
sbb
cmp
orb
jns
ljmp
in
adc
sub
and
nop
test
inc
lock
outsl
pop
lds
jb
arpl
fucomp
xchg
xlat
xchg
imul
adc
popf
orb
pop
scas
mov
adc
repnz
call
add
insb
outsb
ret
aam
xchg
sar
or
cmp
hlt
cmpsl
mov
mov
or
outsb
insl
mov
incl
insl
lcall
es
subl
imul
and
jmp
adc
mov
out
sub
cmpsl
sub
cmp
popl
call
xchg
jmp
xor
hlt
and
jae
scas
in
ret
add
or
dec
lahf
mov
xchg
add
ljmp
or
call
rcr
std
inc
mov
pop
fistpl
xchg
gs
mov
rolb
stos
jecxz
xor
bound
leave
mov
pusha
adc
jecxz
adc
sbb
push
dec
cmp
xchg
pusha
idivl
ljmp
jg
jmp
lea
hlt
mov
fucomip
out
cli
pop
xchg
jnp
out
decl
fiaddl
xchg
inc
pop
adc
inc
xchg
ss
and
sti
mov
mov
cmp
xchg
cmp
fcomp
lea
cmp
imul
sti
ljmp
test
xor
jmp
cmp
lret
int3
cli
scas
xchg
lret
or
hlt
push
pop
lcall
sub
xlat
inc
aad
sbb
inc
fxch
jmp
out
push
movb
pop
xor
cli
pop
cld
cmp
pushl
jg
cli
and
popa
mov
mov
push
test
aas
dec
incl
ror
test
and
and
pop
mov
iret
imul
nop
mov
imul
incl
and
xor
mov
js
mov
ss
cltd
inc
mov
les
loope
pop
es
lods
mov
sbb
pusha
pushf
push
cmc
repnz
test
mov
add
pop
lock
call
das
sub
mov
lret
cmc
out
out
add
push
xchg
mov
das
movsb
adc
out
cmpsb
testl
in
mov
arpl
je
sbbl
aam
mov
decl
call
mov
outsb
call
rol
push
mov
aaa
icebp
sub
mov
push
decl
roll
rcrb
add
shrl
testl
push
in
sbbb
fistl
dec
inc
jle
and
fs
jae
or
stos
out
stc
xchg
xchg
xchg
inc
mov
pop
add
cmc
jno
cli
pop
jmp
sub
mov
cmp
cmp
test
cwtl
jae
ljmp
test
cmp
jmp
sti
and
loope
insb
fdiv
mov
ret
lock
pop
lock
call
clc
sbb
scas
aas
cwtl
rcll
push
mov
nop
xor
mov
inc
iret
outsb
test
ret
sbb
rorb
call
xor
int3
or
adc
enter
jnp
or
fisubrl
sbb
mov
push
das
cmpsl
mov
cmp
lds
ret
lcall
lds
cmp
push
adc
cmp
mov
lods
xor
cs
xchg
xchg
negb
shlb
add
mov
decl
es
dec
jns
popa
fnstsw
push
pop
int3
loopne
lds
mov
xchg
xchg
jle
insb
push
decl
mov
xor
lcall
pusha
cmpsb
outsl
xlat
dec
clc
rcr
das
addr16
call
aam
into
aas
scas
nop
mov
cmpsl
push
addr16
mov
ficoml
lcall
or
xchg
and
pop
jmp
mov
xchg
outsb
shll
rolb
or
decl
add
pop
jb
stos
xlat
add
add
jl
adc
xchg
and
scas
and
call
jl
scas
into
mov
jns
jae
mov
gs
jle
and
xlat
adc
popf
cmp
mov
sub
mov
push
sahf
and
xchg
movsb
lds
loopne
xlat
dec
sti
mov
in
ljmp
cmp
mov
pop
push
xchg
std
or
adcl
cmpsb
ret
in
gs
call
dec
xlat
mov
pop
cltd
es
pop
inc
pushl
insl
test
sub
inc
cmp
call
cwtl
sbb
imul
mov
mov
jmp
pushf
jmp
into
inc
sub
scas
cmc
test
add
or
mov
loopne
adc
push
pushf
cmp
incl
mov
int
adc
mov
mov
jo
adc
rclb
push
stos
jmp
cmpsl
cmpsl
push
hlt
lea
aas
rcll
cwtl
in
mov
rcrb
scas
sbb
jns
sbb
push
test
rcr
push
add
lea
loope
stos
mov
decb
enter
jl
cwtl
xor
xchg
in
push
lahf
jl
loope
jno
mov
xlat
dec
loopne
mov
jg
es
pushl
or
push
mov
mov
cmc
pop
xchg
jae
adc
pop
ljmp
ja
je
and
xchg
mov
push
adc
cltd
jnp
jno
sbb
xlat
push
std
call
repz
cmp
mov
sbb
sti
rcrl
aaa
jbe
ljmp
movsb
adc
cmpsb
ficoml
or
xor
iret
fnstenv
add
out
mov
dec
mov
push
cmp
decl
imul
js
xor
mov
mov
insb
mov
stos
and
rdseed
call
seta
pop
push
inc
adc
test
xchg
cmp
rcrl
inc
in
add
cmp
loop
lock
mov
dec
pop
cltd
out
xor
pop
movsl
test
cmpsl
pushf
call
jae
adc
sbb
xchg
jns
out
test
lcall
push
or
sbb
int3
xchg
decl
and
xchg
rorb
hlt
popf
imul
arpl
les
xchg
sbbb
mov
pusha
inc
xchg
cli
mov
push
fdivp
ret
jae
aaa
jbe
test
inc
dec
sub
in
or
jge
push
push
jle
fstpt
cmp
jmp
hlt
loope
loopne
stc
inc
fisttpll
shll
xor
ret
cmp
adc
lcall
lahf
shlb
lahf
aad
sbb
leave
pop
cmpb
mov
push
aas
loope
add
push
inc
cli
pushf
incl
jecxz
lods
mov
mov
sub
mov
or
jno
jbe
and
mov
pop
cmp
imul
decl
loopne,pn
push
jp
mov
lret
dec
sbb
ret
add
cli
adc
lcall
sbb
sti
xor
jne
cmpsl
not
xor
xchg
xchg
rcll
lcall
jg
sub
rcll
gs
fisttpl
vdivsd
cmp
mov
jge
mov
xor
in
fs
pop
les
mov
movsl
pop
lahf
fistpll
call
mov
push
aam
popf
jl
or
adc
jp
nop
es
ljmp
out
out
push
loope
cltd
sarl
in
aam
mov
scas
rol
push
or
pop
decl
jmp
ja
lds
push
mov
xchg
dec
adc
xchg
xchg
mov
dec
incl
dec
lea
sbb
and
sbb
pop
pop
negl
call
adc
mov
pushl
and
adc
push
sbb
add
out
in
push
jae
rorl
sbb
cs
mov
sub
das
inc
sub
loope
mov
sub
jo
jnp
sub
inc
sar
incl
add
sub
ja
test
icebp
mov
repz
xor
lcall
nop
xchg
repz
mov
xchg
into
jmp
jp
push
push
arpl
outsl
pusha
inc
adc
add
or
sub
cwtl
xchg
lret
test
arpl
enterw
xchg
js
mov
stos
decl
jno
lods
ret
jge
sbb
lcall
or
int3
aam
jmp
stos
lret
incl
imul
lods
push
leave
lds
push
cmp
lret
adc
push
xchg
push
ficompl
mov
call
cld
or
dec
sbb
cmpsb
rcrb
dec
pop
mov
dec
inc
jnp
loopne
fwait
js
sub
jnp
mov
repz
push
popa
inc
ret
xor
pop
andl
cli
xor
sub
add
dec
pop
dec
sub
addl
fwait
test
ss
fstl
mov
xor
decl
cmpl
pop
pop
mov
inc
fdivrp
nop
add
je
or
mov
push
and
mov
mov
stc
xchg
jmp
cmp
jns
imul
pushl
js
xchg
jmp
jmp
andb
jno
mov
in
orb
mov
pushl
xor
ret
mull
ds
pop
scas
mov
arpl
cs
push
xor
jne
call
sbb
adc
jl
cld
mov
out
xor
out
dec
incl
jl
pop
mov
push
xchg
cmpsb
pop
add
cwtl
or
cmpb
clc
mov
pushf
jg
fisubrl
push
mov
push
jb
dec
mov
addr16
popa
addb
stc
sti
jge
insl
fcoms
mov
stos
pop
push
ja
outsb
xchg
jg
mov
pushl
call
cmp
dec
sub
cs
and
fimuls
imul
lcall
xchg
xchg
rorl
sub
outsl
xlat
mov
mov
mov
in
mov
loop
lcall
jmp
data16
insl
mov
xchg
je
cmp
jecxz
call
jg
xchg
mov
sti
jbe
cmp
push
loope
xchg
jge
fwait
push
and
jge
xor
jecxz
scas
test
sar
incl
mov
repnz
test
mov
jae
inc
xor
add
pushl
adc
mov
dec
je
inc
loopne
es
loope
sub
pop
and
or
jmp
shl
test
je
inc
or
std
out
pop
das
and
test
incl
insb
push
push
jmp
mov
inc
mov
imul
incl
ja
mov
mov
mov
xchg
jo
out
ret
fsub
xor
push
and
call
sub
inc
fisubrs
xlat
xor
jno
lock
enter
scas
mov
jg
popa
jmp
xor
popa
icebp
add
push
dec
movq
popa
dec
mov
ljmp
popf
ds
mov
cmp
sbb
dec
hlt
mov
scas
inc
ret
fidivrl
mov
dec
jecxz
pop
inc
mov
aaa
lahf
jge
dec
inc
adc
std
cli
enter
and
add
ljmp
pushl
inc
and
xchg
mov
inc
jge
test
sbb
mov
incl
loop
and
std
out
sub
jp
sbb
in
push
fs
ret
in
hlt
outsl
xchg
jae
fiadds
int3
rcl
mov
jle
repnz
and
mov
pop
push
les
push
repnz
sbb
mov
aam
cs
out
imul
faddp
push
movsb
pop
lcall
in
ljmp
sti
imull
sub
aas
add
lods
or
outsl
js
imul
mov
sbb
pop
fldcw
jne
repnz
stc
mov
xor
jns
stos
cmp
add
push
jmp
fdivrl
mov
push
pop
add
int
imul
cmc
shl
fisttpll
xor
dec
push
aaa
push
cmp
int3
fsubl
movntq
lods
sub
lods
push
cmpsb
fstp
lcall
movl
inc
or
int
out
ljmp
pop
arpl
dec
jge
ljmp
dec
test
pushl
cs
jb
push
cmc
and
in
push
mov
lret
pushl
fs
jge
or
mov
mov
xor
mov
inc
mov
jle
sahf
inc
fildll
cs
xchg
dec
inc
out
stos
push
lcall
clc
xchg
das
dec
lret
scas
jl
cld
out
jns
bound
icebp
fwait
xor
sbb
test
or
mov
out
mov
jmp
setb
addr16
fsubr
mov
cwtl
mov
lods
iret
sbb
jmp
or
cmc
xchg
xchg
repz
or
shll
fstl
dec
icebp
or
in
jne
je
int
lahf
and
jno
pop
mov
ret
rcl
incl
das
fsubrs
subb
add
fs
dec
mov
xor
sti
inc
xor
jno
dec
cmp
es
xor
fbld
stc
mov
int
mov
sbb
mov
sub
popf
mov
insl
and
incl
icebp
outsb
push
fisttps
adc
enter
popa
dec
int
ret
jge
mov
mov
xor
sti
insb
cmp
sub
sbb
mov
inc
pop
jle
out
mov
mov
dec
out
les
jl
mov
incl
fdivl
shlb
loope
ja
sub
and
xlat
mov
into
adc
mov
into
sub
jmp
out
jae
ds
xor
xor
push
pop
xchg
stos
repz
mov
dec
cltd
stos
imul
jmp
push
sub
inc
repz
aam
call
pop
cltd
stos
daa
dec
shlb
push
pop
pop
mov
decl
mov
iret
lods
rcrb
xchg
or
lahf
jmp
popa
gs
xor
decl
or
jle
sti
loope
sbb
add
mov
xor
test
jl
add
decl
xlat
std
dec
daa
or
mov
fnsave
out
sub
es
jle
cmp
jns
lret
decl
pop
mov
ret
jge
or
xchg
pop
and
pop
nop
incl
adc
stos
stos
test
push
mov
fisubl
xchg
mov
jmp
jmp
mov
xor
xchg
xlat
sbb
fs
jbe
lcall
jmp
call
mov
fisubs
orb
pop
xchg
repnz
mov
dec
add
lret
rclb
cmp
rolb
push
in
mov
loop
xorb
sub
lock
sbb
decl
mov
sub
test
movsl
testb
cli
add
mov
incl
fistl
push
jg
push
daa
test
in
sbb
call
aas
jecxz
mov
iret
jno
xchg
jo
pushl
push
or
sub
les
mov
aas
inc
loop
out
inc
popl
sti
cwtl
or
mov
sbb
in
psubq
int3
jge
fs
test
fistl
adc
ljmp
pop
call
add
cmp
xor
ficompl
xchg
jnp
nop
addr16
pop
jbe
mov
mov
jmp
sti
xchg
fwait
jle
xchg
aaa
adc
inc
pop
dec
shrl
enter
repnz
and
push
call
stos
inc
and
dec
jbe
mov
mov
fsubrs
frstor
dec
daa
shrl
jmp
inc
incl
mov
push
lds
pop
sbb
popa
mov
adc
stc
ljmp
cmp
jo
imul
sbb
xorl
mov
xor
cmp
incl
add
xor
mov
loope
inc
scas
push
xchg
daa
sbb
adc
mov
jnp
outsl
lret
jo
jb
dec
pop
and
negl
pusha
mov
out
jne
adc
mov
cmp
repnz
push
push
inc
out
out
or
dec
loopne
hlt
shll
notb
lods
push
shrl
stos
les
pop
daa
sbb
imul
call
fnsave
daa
jmp
nop
jmp
movsl
add
push
pop
inc
out
jno
aas
vpcmpeqd
and
or
ljmp
lock
xor
add
and
cltd
xchg
ds
push
test
cli
adc
cmp
jo
mov
dec
incl
aad
imul
mov
xchg
xchg
xchg
shlb
je
inc
sub
incl
mov
mov
aaa
not
inc
insb
sub
adc
xchg
mov
call
and
pop
xor
fdiv
or
std
or
xchg
push
pop
stc
iret
and
call
ja
lret
lahf
pop
or
lock
cmp
les
mov
or
cmp
mov
incl
cmp
mov
sub
adc
sub
pop
mov
xor
push
dec
sub
jmp
gs
out
dec
and
test
fnstsw
xchg
xor
je
testb
jmp
pop
jnp
pop
inc
les
cmp
pop
mov
push
or
and
adc
rcrl
incl
popa
lret
inc
aad
inc
mov
or
and
sbb
rcll
jmp
clc
stc
cmp
adc
loopne
das
imul
lods
stos
clc
daa
mov
pop
rclb
scas
sbb
pop
pushl
cs
in
test
dec
cltd
insb
adc
mov
or
sbb
clc
ret
incl
shll
mov
push
cmp
lahf
cmp
xchg
xor
mov
xchg
frstor
lcall
pop
fstl
inc
fsubr
lret
mov
lret
add
dec
pushl
sbb
jno
sub
incl
sbb
insl
or
xor
pop
dec
push
das
xchg
and
ljmp
outsb
js
push
imul
sbb
ljmp
not
or
inc
cmp
and
fdivp
jmp
ret
jb
jl
lret
test
cmp
popa
jp
ljmp
mov
or
insl
cmp
push
insb
xor
sti
cmp
js
pop
add
incl
push
stos
stos
shll
mov
cwtl
xchg
movsl
popf
in
dec
ds
push
mov
out
jno
ljmp
into
insl
sahf
jg
loopne
sbbl
or
xchg
sbb
pushl
mov
cmpsb
lcall
push
jo
lods
inc
lcall
add
mov
decl
inc
xor
or
cmp
jb
in
push
data16
mov
dec
push
ljmp
scas
jne
js
xchg
in
insl
test
mov
fsubs
call
fsubr
pop
push
mov
pushf
or
or
lea
cmp
inc
outsl
repz
push
scas
insl
pop
inc
stc
incl
xchg
roll
or
sub
jae
cmpsl
lahf
dec
mov
inc
dec
jmp
jns
shl
dec
lods
xchg
inc
and
mov
jp
push
hlt
cmp
out
mov
movsl
push
aas
xchg
mov
jmp
fisttps
lea
ljmp
push
cmp
pop
or
mov
add
hlt
incl
pop
out
lcall
dec
ret
pop
mov
lahf
sub
jo
add
mov
push
addb
ds
push
lods
fwait
movsb
outsb
xor
fsubrs
cmp
stc
mov
and
dec
aad
scas
and
mov
sbb
mov
sub
in
dec
mov
cmp
cmc
out
pushl
iret
pop
mov
in
or
and
and
sbb
int3
loop
ljmp
sbb
dec
add
test
push
insb
enter
idivb
rcll
pusha
lahf
dec
mov
in
mov
ds
cltd
push
jae
cmpsb
add
lock
int
pusha
dec
call
add
mov
pop
scas
fmull
insl
sbb
or
negl
notl
push
cmp
je
adc
fsubrl
adc
inc
fcompl
ficompl
lcall
in
xchg
inc
es
sub
aad
shlb
dec
mov
insb
lods
lret
aaa
lods
pop
out
repnz
nop
mov
outsl
in
push
jb
mov
fists
jl
pop
cs
cmp
inc
add
pop
dec
das
fsts
inc
sub
jne
ret
or
lds
imul
decl
prefetchnta
stos
cmpsl
testb
adc
movsl
sub
sahf
xchg
mov
xchg
jmp
loopne
repnz
imul
ljmp
pusha
cmp
pop
xor
bound
clc
or
pushl
adc
icebp
cmc
push
mov
jno
cmpb
mov
and
ss
call
mov
jl
mov
inc
repz
loope
push
xor
decl
jle
daa
xchg
cmpsl
in
pushl
fwait
and
loop
jecxz
sub
pushl
jl
inc
adc
imul
repnz
jecxz
lret
fldl
inc
arpl
lcall
or
ds
loopne
xor
jmp
cmc
es
shrl
lods
movsb
sbb
mov
call
dec
shll
inc
testb
pop
pop
aam
adc
sysenter
mov
sti
mov
out
adc
incl
push
divl
fdivr
sub
xchg
sub
pop
fnsave
or
push
mov
ljmp
mov
es
popl
sub
add
outsb
in
sarb
fnsave
decl
mov
sub
mov
xchg
loopne
inc
clc
outsb
and
xchg
aad
insb
jo
stos
dec
mov
call
stc
test
push
dec
pop
fsubr
sbb
push
mov
out
adc
lcall
in
or
mov
mov
fimuls
inc
ret
xchg
push
test
mov
call
mov
decl
mov
loope
adc
pop
outsb
sbb
call
adc
fisubrs
neg
jecxz
insl
fnsave
sub
add
daa
xchg
frstor
mov
jl
pop
scas
jae
cmpsb
clc
sarb
inc
pop
lods
or
aaa
inc
movsb
out
inc
jl
pop
mov
lret
mov
xor
xor
lcall
sbb
insb
das
negb
fs
dec
iretw
inc
test
pushl
and
mov
popf
xchg
ret
mov
cwtl
or
pop
jle
pop
jle
into
add
pushl
mov
rcrl
xchg
or
dec
pop
mov
sbb
dec
bound
cmp
xor
decl
in
shlb
aad
ficoml
lock
in
mov
sahf
mov
into
mov
lcall
mov
jbe
mov
and
adc
xchg
jno
jmp
std
movsb
ret
add
or
jmp
repz
push
adcl
hlt
sub
repnz
mov
and
and
ljmp
jne
icebp
cmp
cmc
mov
divb
test
dec
in
movsl
push
sub
inc
movsb
inc
pop
add
dec
adc
jg
lcall
cwtl
xor
xlat
dec
dec
es
test
pop
cs
bound
stc
out
shlb
pushl
or
cmc
rep
aad
int
pop
hlt
insl
fs
xor
test
sbb
incl
sbb
jecxz
stc
xor
mov
repz
test
push
loop
incl
outsl
inc
cmp
mov
sub
mov
leave
push
jbe
dec
in
jnp
mov
xor
mov
xchg
stos
xchg
cmc
xchg
lahf
out
test
nop
cli
movsb
or
mov
sub
jae
cmp
add
mov
outsb
cld
jmp
icebp
movsb
ljmp
mov
and
scas
cmc
loope
into
xchg
outsb
leave
sbb
push
fsubrs
ljmp
rorb
mov
sbbb
mov
mov
lahf
imulb
lcall
jnp
or
adc
push
mov
aaa
jl
ret
xor
adcl
decl
stc
lds
pop
pop
adc
jle
jle
xchg
jmp
cld
lods
mov
adc
aad
pusha
xchg
sbb
jnp
enter
and
shll
mov
cmpsl
dec
jg
xchg
call
xor
pop
mov
mov
jg
jmp
pop
andl
rol
push
jmp
dec
in
cmpl
mov
inc
mov
loopne
lcall
pushf
call
jno
pop
dec
and
mov
in
sahf
add
in
inc
fsubl
sti
out
loopne
mov
mov
test
icebp
pop
sbb
ja
mov
adc
movsl
fidivrs
fwait
push
rcrl
movsl
imull
lea
xchg
lcall
dec
cli
insl
mov
int3
cs
or
mov
sub
repz
jmp
pushf
lcall
fisubrs
in
inc
sub
xchg
push
ljmp
inc
pop
fwait
cmpsb
push
dec
movsb
cmp
sub
jge
out
pop
inc
aad
iret
aas
mov
mov
out
jmp
xchg
mov
xor
je
cmpsl
push
cmp
sub
inc
sub
xor
aas
out
js
inc
mov
pop
dec
push
daa
jbe
in
or
jle
or
sub
cli
les
or
push
test
scas
dec
test
push
sub
adc
pop
lcallw
clc
xchg
mov
aad
sub
add
into
mov
add
sbb
push
daa
or
jne
xchg
or
push
xchg
xchg
data16
cmpsb
stos
decl
ja
push
pop
insb
cmpsl
push
outsb
setbe
jns
ljmp
xchg
cmp
movsl
adc
movsb
outsl
xchg
loope
fisttpl
lea
adc
cmp
inc
fstpl
fildl
xchg
cmpsl
sbb
into
rorl
fisubrl
pop
pop
iret
fidivrl
es
in
in
push
sbbb
pushl
clc
xchg
push
movsb
xor
cmpsl
xlat
add
in
rcrl
mov
in
adc
mov
xchg
push
sub
mov
mov
cmp
pop
das
call
adcb
decl
xchg
shl
cmp
xchg
cmp
mov
div
int3
rolb
fimuls
daa
lea
lcall
scas
jns
sub
mov
and
sub
call
out
pop
in
mov
lret
imul
mov
das
popa
adc
xor
ja
pop
dec
mov
dec
add
xor
call
mov
scas
mov
mov
push
mov
and
pop
xor
arpl
mov
call
mov
mov
inc
xchg
jg
and
xor
push
loopne
jbe
jmp
ja
mov
add
std
adc
or
into
ja
rcrb
cltd
iret
adc
iret
movsb
lcall
mov
jns
cltd
inc
push
stos
lock
mov
nop
sub
xor
pushl
test
in
mov
cmp
add
adc
in
in
mov
das
cmp
in
jmp
jb
les
mov
outsl
das
iret
movsl
push
movsb
mov
sahf
lods
repz
push
mov
decl
cld
popa
inc
stos
insb
cmp
lret
mov
push
out
sarl
jge
xchg
inc
jns
mov
mov
out
sahf
mov
orl
call
clc
xor
push
dec
stos
aaa
cmpsb
lods
sbb
adc
iret
mov
mov
mov
mov
fisttpl
and
sub
xor
fdivrl
movb
jmp
std
push
subps
mov
sti
ror
mov
addl
cmpsl
add
inc
add
hlt
dec
ss
repz
test
lret
pop
lds
orb
mov
adc
cmpsb
movsb
add
ljmp
cmpsl
incl
stos
call
adcb
mov
flds
cmpsb
scas
add
incl
aad
cs
add
shl
inc
mov
and
scas
icebp
pop
push
mov
mov
mov
cwtl
add
push
mov
xchg
push
rclb
sbb
fimuls
or
cmp
js
sub
in
sarb
xchg
cltd
xor
daa
mov
lret
pop
sbb
and
mov
lret
mov
mov
decl
jl
mov
lock
cwtl
sahf
adc
pop
movsl
insb
and
ja
dec
pop
movsl
cmp
es
xchg
xor
or
jnp
adc
add
sub
jns
pop
mov
push
or
pushl
push
loop
sbb
iret
and
outsb
psadbw
je
je
ret
and
scas
std
in
decl
dec
jno
add
jp
mov
sbb
push
ficoms
inc
ljmp
mov
daa
ljmp
test
nop
cmp
ficoml
cmp
pop
cmp
nop
icebp
repz
fstpt
inc
jns
add
pushl
shrb
jmp
mov
push
dec
mov
mov
lea
jmp
aaa
sbb
xor
movsb
mov
cltd
jle
mov
dec
add
ljmp
aas
sar
test
popf
lds
es
push
psubw
push
jcxz
call
inc
add
stos
movsb
push
push
mov
mov
aam
or
jp
cmp
aaa
decl
inc
dec
pop
sbb
mov
ds
jbe
add
in
pop
scas
cmp
or
or
jmp
pop
xchg
cs
insb
cli
jns
mov
cmp
push
xchg
sub
cwtl
adc
into
ret
sub
call
fmull
rcrb
test
inc
fisubs
lods
shlb
or
call
add
and
dec
call
cmpsb
cmp
adc
adc
inc
pop
int3
xchg
cmp
cli
daa
cmp
aas
shrl
dec
xchg
fwait
out
jb
out
clc
lahf
mov
cmp
loopne
mov
sti
je
xchg
push
pop
lcall
mov
mov
sub
mov
pop
sbb
out
or
incl
mov
pusha
sbb
addr16
jmp
push
push
adc
rcrl
inc
ljmp
inc
xchg
clc
push
mov
mov
jbe
popf
push
loopne
mov
pop
cwtl
inc
xor
ficompl
push
out
hlt
insl
scas
in
sub
sub
mov
adc
push
push
jae
add
icebp
jecxz
push
cmc
mov
inc
call
and
test
inc
mov
and
les
or
decl
les
nop
stc
dec
inc
push
popa
lret
or
push
xchg
mov
mov
jmp
add
mov
mov
sub
call
adc
cmpsb
std
mov
pushl
mov
daa
dec
shll
add
xor
bound
mov
mov
pop
fld
mov
jmp
adc
in
sbb
mov
and
lods
xlat
sub
mov
addr16
sahf
dec
dec
xor
jp
call
jge
enter
out
sti
jmp
movsl
cmp
repz
dec
lcall
pop
mov
ja
lock
cmp
sbb
fsts
sahf
cli
in
in
lods
decl
xchg
mov
pop
scas
divl
shlb
adc
and
enter
fs
jmp
fldt
mov
xlat
cmp
es
mov
or
mov
das
push
pop
inc
and
adc
cmp
add
jb
nop
inc
int3
ja
push
dec
sub
decl
stos
jno
pop
lret
push
movsb
in
inc
dec
cmp
fiadds
jnp
and
lcall
jmp
or
pop
cmp
jae
fldenv
aam
xchg
subl
movsl
xor
ret
scas
mov
js
jns
push
mov
mull
cmc
mov
ss
mov
outsb
test
xor
decl
nop
mov
rorb
sahf
les
lods
fimuls
xor
rol
fstps
sub
sbb
decl
dec
inc
dec
ja
stc
jnp
xor
inc
enter
in
je
std
aam
lret
mov
decl
adc
push
pop
push
or
adcl
lahf
ficompl
xchg
inc
mov
jmp
jo
in
ljmp
xchg
popf
adc
shlb
lcall
incl
sub
sbb
xor
aas
mov
sti
pop
fs
xchg
shll
ljmp
inc
add
subb
hlt
sub
sub
jge
pop
or
outsb
cld
decl
dec
flds
xchg
xor
xor
mov
aas
cmp
hlt
ja
lock
push
xchg
adc
dec
jge
popf
sarb
dec
lret
lret
fdivrs
mov
adc
dec
push
xchg
push
es
leave
mov
lret
outsl
lods
dec
lods
nop
clc
out
data16
dec
js
or
xor
lcall
xchg
cmp
sbb
mov
inc
lret
push
aad
fidivs
cs
jne
lahf
daa
lret
popf
xchg
scas
out
mov
mov
lods
sbb
inc
mov
push
add
dec
inc
adc
jmp
shrd
dec
sbb
push
pop
sub
lcall
and
jmp
andb
loop
test
rclb
add
iret
sub
push
jb
lret
mov
mov
lahf
sub
and
test
popa
push
add
daa
jb
pop
dec
sub
ljmp
push
sbb
inc
dec
xchg
jecxz
push
outsb
or
mov
rorl
jg
xor
jl
fwait
enter
dec
ljmp
test
push
or
cld
jbe
mov
das
and
jmp
jnp
clc
adc
jae
pop
pop
dec
jo
out
push
call
sub
ljmp
push
je
stos
stos
jl
pextrw
jbe
add
and
pop
cmp
inc
push
decl
and
fsubrs
call
lret
pminsw
xor
les
and
sar
call
enter
sbb
cmc
lret
cs
pop
sub
loope
or
pop
xchg
push
fs
and
decl
jbe
mov
rclb
pop
sti
xchg
xlat
int
out
es
sub
aam
icebp
mov
lcall
jbe
push
lods
mov
mov
mov
dec
and
cld
mov
pop
lods
xchg
ljmp
lret
idivb
aas
inc
xor
xchg
xchg
or
push
mov
shrb
jp
mov
jmp
jbe
xchg
pop
pop
add
popf
or
sbb
push
push
leave
mov
push
repz
pop
test
fldcw
mov
pushf
xor
popa
and
popa
mov
in
add
mov
mov
incl
mov
sub
cmp
hlt
pusha
icebp
sbb
sub
rolb
jno
mov
movsl
arpl
pushl
xchg
and
stos
sbb
shl
dec
lcall
sub
insb
inc
divb
jp
pop
cmpsl
call
add
sbb
loopne
mov
mov
cmp
xor
and
daa
or
subl
stos
data16
jne
mov
mov
push
je
and
aaa
sbb
outsl
in
pop
jl
ud0
cmp
lods
xchg
xchg
out
mov
xchg
sahf
in
or
stos
das
std
pop
test
pop
dec
lea
iret
cld
aad
and
pop
rol
test
cmp
hlt
sub
jo
out
mov
pop
mov
arpl
jmp
pop
adc
adc
ret
je
sub
mov
int3
nop
rolb
xor
call
scas
outsb
cmpsl
adc
push
mov
lret
sbb
xchg
outsb
push
in
lds
scas
or
cli
popa
rorl
pushl
add
mov
sti
mov
push
or
jns
or
adc
cmp
cmp
inc
cmp
movsb
inc
fwait
popf
insb
dec
mov
or
repnz
mov
ret
jo
test
jmp
pop
jb
or
or
push
pop
pop
pop
cltd
dec
bound
lcall
or
add
xlat
pop
dec
pop
or
inc
push
into
jbe
jbe
push
cmc
add
lcall
add
jns
lcall
rcll
mov
push
mov
out
dec
fs
push
fs
imul
push
mov
cmp
mov
push
cmpsb
push
aaa
loopne
push
ja
push
je
jne
fisttpl
frstor
incl
rcll
aas
outsl
nop
cmpsl
mov
lcall
sbb
adc
inc
sub
mov
adc
add
sub
jp
xchg
sahf
jo
mov
add
daa
addr16
lcall
cs
sub
jne
or
adc
out
inc
inc
or
xchg
enter
decl
data16
jp
cwtl
xlat
mov
lds
pop
in
add
cmpsl
adc
js
add
mov
pushl
pop
mov
jo
jbe
inc
pop
popa
loop
mov
nop
test
jmp
mov
sbbb
add
jo
inc
lods
inc
mov
pop
stc
jmp
in
aas
cli
mov
fwait
in
in
vmread
repnz
cmp
pusha
jl
cli
rol
dec
insl
jl
fcom
pusha
push
lcall
int3
push
cmp
loop
jle
pop
icebp
push
jl
xchg
pop
in
aas
push
lcall
rorb
sub
jae
dec
jae
loop
gs
add
cmp
incl
lcall
or
sbbb
fst
add
pop
jge
mov
mov
in
jmp
outsl
xchg
hlt
mov
jle
out
pop
test
cmp
clc
lock
dec
sbb
mov
jmp
push
pop
shll
adc
je
mov
lahf
dec
jg
inc
lock
call
dec
jl
adc
mov
dec
addr16
leave
int
mov
inc
clc
in
jle
call
fists
inc
push
dec
loop
xchg
xor
mov
cltd
jns
mov
push
xchg
mov
call
icebp
xchg
orb
flds
jb
mov
scas
jae
pop
call
xor
ja
pushl
roll
lahf
mov
dec
in
icebp
loop
imul
cld
jg
xchg
hlt
repz
in
jmp
in
jo
leave
in
addb
add
cs
cwtl
push
data16
insb
jmp
xchg
stc
inc
movsb
jp
int3
arpl
mov
jmp
sub
ret
loope
incl
sub
ficomps
enter
call
fs
cmp
lcall
and
mov
out
shl
roll
mov
adc
pop
xchg
push
ret
and
enter
xchg
jo
add
or
inc
sbb
sti
cmc
jb
jno
call
sbb
push
ja
pusha
repz
push
pop
push
jo
and
out
icebp
sub
loope
pushl
fdivr
test
inc
stos
inc
cld
bound
and
inc
mov
data16
call
cmpsl
jo
ret
jnp
mov
cmpsl
out
xchg
dec
inc
mov
inc
mov
aam
call
or
movsl
je
stos
aam
and
sub
push
mov
pop
sbb
sbb
add
sub
pushl
adc
push
inc
xor
bound
xchg
xchg
mov
scas
inc
xchg
leave
movsl
xor
lods
cmc
loope
inc
sub
jmp
ss
cmc
cmp
movsl
dec
aaa
xor
inc
push
rolb
adc
call
lcall
sbb
cmc
xor
adc
adc
sub
xchg
xchg
jmp
add
or
rolb
mov
movsl
jb
mov
jl
shrl
mov
mov
andps
cmp
and
push
mov
jno
rorb
fnsave
inc
push
adc
jecxz
icebp
cmp
ljmp
ret
out
jg
xchg
lods
or
adc
nop
outsb
mov
mov
mov
adc
and
std
sub
lock
lahf
movb
fiaddl
push
dec
das
xor
lahf
lcall
sub
pop
push
inc
mov
hlt
cmp
mov
aad
ret
inc
jl
lea
pop
nop
mov
decl
les
rcl
cwtl
insl
inc
push
nop
stos
data16
inc
pop
test
jp
outsl
std
ret
lcall
jne
nop
pop
out
xchg
out
mov
into
inc
mov
popl
fdivr
lcall
or
outsl
pop
and
mov
int3
mov
lds
dec
inc
in
adc
call
dec
push
test
in
pop
cld
or
movsb
test
inc
std
cld
mov
mov
ficoms
ljmp
push
mov
cli
xchg
cmp
sub
pop
pop
shrb
aaa
pop
mov
xor
pop
mov
js
dec
in
aaa
adcl
push
ja
sbb
and
lods
std
nop
ret
push
daa
push
nop
je
add
imul
hlt
xchg
adc
cwtl
decl
fisttpl
mov
loopw
fdivs
push
lahf
mov
or
imul
or
sti
dec
or
and
pop
jbe
test
jle
in
dec
mov
mov
or
ljmp
scas
cli
xor
fwait
rorl
je
push
adc
lock
jge,pt
ud0
fcos
lock
ljmp
cmp
sahf
scas
loope
fs
jecxz
stos
adc
pushl
or
popf
out
pop
push
repnz
cmp
repnz
movq
addr16
pop
cmp
pushl
mov
dec
idivb
or
les
sub
jns
jmp
xchg
and
cmp
fdiv
decl
xchg
jb
sub
lret
pop
jle
cmp
xchg
scas
cltd
ja
sub
enter
pushl
xlat
mov
jo
ret
sbbb
and
push
xchg
lcall
dec
mov
pop
bound
mov
imul
int
and
out
adc
cli
or
mov
pop
push
cmp
lcall
adcb
dec
mov
nop
repnz
sbb
fwait
xchg
add
push
pop
call
loopne
xchg
jnp
push
lret
nop
int3
jb
bound
inc
dec
loop
adc
pushl
je
inc
mov
hlt
sbb
sbb
aad
pop
mov
test
js
dec
sub
pushl
enter
xchg
inc
push
test
leave
sub
outsb
aad
push
sbb
test
mov
cwtl
movsl
inc
mov
or
dec
scas
clc
int
lods
cltd
push
jae
aad
add
push
in
movsb
add
in
orb
pop
std
aas
lahf
out
lock
cwtl
xor
push
add
mov
mov
inc
mov
jmp
lret
jno
sub
sbb
andb
outsb
dec
in
cmp
or
add
ss
lcall
mov
add
pop
or
jmp
loope
jg
sub
push
or
fsub
push
or
bound
add
or
mov
pop
sub
pop
lock
ret
ficomps
sarb
lds
into
je
cmp
outsl
jl
add
data16
fsubp
arpl
insb
jb
loop
cmpsl
fwait
and
ljmp
xchg
inc
and
enter
stc
push
adc
mov
out
adc
in
jmp
pop
inc
test
cwtl
out
icebp
xor
and
movsl
cmpsb
jp
testb
aam
fs
pushl
xor
lods
les
clc
ss
aaa
and
cmpsb
cmpb
push
arpl
shl
decl
jno
jnp
or
jbe
lods
rol
xor
in
or
leave
loope
bnd
ljmp
adc
testb
popf
test
scas
shrb
cmc
int3
shlb
and
enter
clc
xchg
sbb
sub
incl
fwait
cli
mov
icebp
sub
jne
adc
pushf
push
icebp
sub
or
call
adc
ss
sti
sahf
pop
xlat
xor
mov
mov
add
icebp
cmp
fst
loop
sub
imul
loop
arpl
cmpsb
mov
dec
fdivp
jmp
xor
and
movsb
jmp
adc
mov
cmp
mov
incl
cmp
mov
arpl
ss
jne
mov
in
je
mov
jmp
cmpsl
sbb
cwtl
sub
movsl
mov
fisubrl
test
mov
xchg
lret
pop
push
roll
call
xchg
stos
dec
das
movb
push
sub
test
add
ds
out
popa
mov
ja
das
cmp
test
mov
inc
push
outsl
out
push
fldt
loope
sbb
repz
pushl
movsb
inc
iret
clc
push
mov
xchg
push
push
mov
mov
sahf
push
push
adc
cli
pop
pusha
pop
loope
notb
frstor
in
or
mov
pop
push
push
push
fdivr
out
mov
loop
sbb
cltd
jae
outsl
inc
jnp
jle
sbb
push
xchg
in
sbb
test
subl
decl
aaa
push
and
ret
mov
mov
out
test
les
sub
mov
mov
mov
dec
insl
add
lret
mov
xor
jp
stc
ja
ljmp
sub
loop
xchg
jle
adc
std
dec
add
sub
punpcklbw
cmp
lea
stos
jl
push
ja
icebp
mov
push
ljmp
cmp
repnz
pushl
push
add
jl
mov
aad
push
out
jb
inc
dec
pushl
dec
sbb
imul
jle
xlat
dec
call
mov
xor
mov
aad
mov
jl
push
mov
nop
mov
aas
adc
mov
andb
enter
das
aaa
pop
jecxz
sub
xorb
pop
inc
pushl
jmp
ja
repnz
inc
out
std
ret
popf
mov
mov
pushl
jle
arpl
pop
pop
mov
mov
or
mov
xor
int
incl
xchg
jp
mov
or
popa
inc
stc
cmp
and
je
xchg
mov
jbe
pop
and
jmp
icebp
iret
scas
iret
jbe
cmc
push
rorl
jb
std
jle
or
clc
xchg
lcall
fildl
inc
popf
cwtl
add
push
mov
push
das
xchg
push
enter
mov
mov
mov
inc
popa
mov
nop
ss
incb
std
pop
insl
mov
rorl
lea
sahf
pushl
push
adc
ds
ret
inc
add
popf
xchg
mov
jl
push
inc
jnp
call
and
push
xor
lea
add
push
inc
aad
and
inc
dec
sbb
sbb
push
add
xor
adc
stos
xchg
pop
cmp
sbb
cmp
gs
jmp
jge
dec
ficomps
pushf
push
sahf
pop
sbb
adc
and
and
pop
out
xchg
jmp
ss
jl
shrl
hlt
fnsave
lock
pop
bound
mov
xchg
or
jmp
addr16
fs
jmp
ja
cmp
sub
mov
cmp
jmp
scas
lcall
dec
in
imul
inc
stos
push
sbb
jbe
repnz
decl
jmp
jno
mov
xor
stos
adc
xchg
mov
adc
fidivrs
das
or
call
mov
imul
sub
jge
addr16
sti
sbb
adc
decl
sbb
add
add
jl
scas
push
dec
les
push
lret
sbb
std
or
dec
push
test
push
sbb
dec
sbb
in
adc
scas
add
decl
mov
movsb
mov
movsb
dec
xchg
push
icebp
gs
aas
out
push
jmp
mov
subb
fsubl
cmpsb
scas
or
jae
adc
imulb
cs
jmp
int3
sti
push
pop
stos
cli
jge
pop
leave
mov
aad
pop
in
mov
jmp
pop
pop
lret
dec
mov
add
mov
repz
jne
je
pop
bound
mov
mov
xchg
ret
pushl
adc
dec
and
mov
xchg
push
mov
lret
adc
inc
pusha
out
dec
hlt
hlt
jmp
adc
ljmp
push
push
inc
or
iret
push
fsubrs
lahf
mov
incl
mov
dec
hlt
aam
jl
xor
sub
rcrb
inc
or
push
jl
decl
mov
mov
bound
mov
add
xor
pop
mov
sbb
pop
adc
jns
rcll
mov
cmp
inc
imul
pop
push
mov
xor
str
call
cli
push
cmp
jne
jl
adc
lea
lods
test
mov
and
ds
pop
test
cltd
jb
call
dec
cmpsb
and
test
push
lret
sbb
popf
add
mov
mov
cmp
and
push
pop
dec
js
or
mov
sbbb
js
pop
lret
mov
cli
lcall
pusha
shlb
cmp
outsl
clc
sbb
movsl
sbb
iret
call
jp
dec
roll
ss
lcall
lret
insl
add
repz
push
andnps
aaa
orl
push
fxch
test
sar
mov
jno
dec
and
xor
pop
imul
mov
call
data16
sti
leave
xchg
xor
in
pop
pop
jns
sub
mov
mov
jmp
ds
push
dec
mov
repz
sahf
push
add
test
lcall
sbb
sbb
sub
ljmp
sub
push
into
sub
mov
ljmp
addr16
cmp
mov
lret
push
xchg
pop
fidivs
test
dec
aam
decl
lds
mov
jl
pop
je
mov
or
mov
ljmp
pop
movsb
fldt
sbb
adc
out
xchg
js
cmpl
xor
subl
lcall
xchg
nop
das
adc
or
jo
fcoms
adc
sti
imul
add
psubd
lcall
pop
mov
out
inc
fisubs
xor
movlps
dec
jge
add
jmp
repz
fsubrs
cmp
sub
aas
loop
movsb
pop
jmp
ret
scas
arpl
inc
lcall
aam
cmp
mov
jnp
in
push
xchg
or
adc
es
cwtl
cmc
mov
ljmp
dec
hlt
in
lahf
test
push
cs
cmpsb
or
stos
clc
jbe
jae
cs
jmp
dec
daa
js
lret
or
addl
mov
add
jno
call
ret
cltd
sbb
stc
push
inc
cmpsl
mov
fwait
adc
cmpsb
adc
mov
xor
pop
adc
dec
idiv
pushl
fucomip
or
inc
aad
icebp
mov
xchg
jp
push
in
popa
les
in
xchg
arpl
je
cltd
sbb
cmp
cltd
jp
xlat
mov
jae
aam
sti
fisubs
mov
push
mov
call
cs
xor
xor
push
test
sbb
push
sub
orb
cmp
lret
inc
fdivr
push
xor
and
or
jecxz
movd
xor
jge
std
testb
lcall
pop
out
insl
imul
jmp
out
or
imul
std
dec
dec
fcoml
xchg
fcompl
divb
insb
shlb
jl
nop
push
cmp
loop
mov
insb
push
mov
incl
out
pushf
mov
lods
fnsave
sub
fxch
loopne
scas
fwait
int
inc
push
inc
lcall
loop
sub
in
jno
jb
int
add
jmp
and
sub
jmp
idiv
decl
jbe
adc
in
pushf
xor
mov
add
jne
dec
ljmp
pushl
jns
push
std
mov
lods
sub
rclb
aam
xor
cs
jge
enter
cli
xlat
fs
and
pop
jno
mov
icebp
mov
in
xchg
leave
cmp
mov
push
fwait
adc
push
mov
pop
or
sahf
sahf
pop
jg
ljmp
incl
jb
dec
andl
pop
xchg
or
clc
cmp
or
scas
lcall
loopne
mov
adc
pushf
dec
xchg
fnsave
in
mov
mov
scas
idivb
mov
mov
xlat
adc
clc
jnp
ds
movsl
inc
lret
push
sbbl
incl
push
scas
mov
cli
outsb
lock
mov
adc
icebp
out
cmpsb
mov
mov
fistpll
fwait
cwtl
sub
xor
sbb
aad
push
fisttpll
cmp
push
mov
lret
outsb
push
and
dec
clc
sub
stos
enter
fs
mov
int3
enter
out
cmp
add
mov
inc
or
adcb
clc
scas
pop
stos
or
and
movsb
ret
jno
cmp
mov
jmp
and
mov
push
jmp
pop
push
xor
mov
aaa
loopne
cmpsl
jp
sbb
cld
mov
pop
fcmovbe
sub
add
fcoml
fwait
sbb
orb
mov
cmp
jmp
xchg
sub
out
push
jnp
inc
push
call
xchg
fcomi
push
arpl
cmc
push
jl
or
decl
insl
jno
and
and
insb
loop
test
dec
and
fst
test
dec
addr16
clc
call
stos
lea
push
mov
es
push
add
pop
push
jecxz
cmp
fwait
pop
decl
mov
jl
mov
inc
movsl
int3
add
mov
inc
shrb
push
cmp
lcall
lret
addb
and
scas
sub
les
mov
sar
pushl
xor
jb
mov
in
jns
sbb
jmp
pop
or
add
lcall
stos
test
leave
xchg
jae
dec
and
testl
decl
sbb
xor
inc
shrl
pop
mov
imul
incl
addr16
daa
in
jl
daa
push
push
and
and
sbb
xchg
pop
jb
pop
arpl
call
popf
inc
lret
call
xchg
fadd
jne
jo
sub
xchg
pusha
add
inc
sub
cmp
enter
decl
out
insb
jnp
sbb
shrb
ret
sub
jge
rcrl
add
fimuls
loop
jae
and
mov
mov
dec
mov
dec
incl
dec
mov
push
dec
xor
clc
sbbb
cmpsb
mov
mov
outsb
fidivrs
pushl
dec
jmp
mov
add
gs
sbb
fs
jbe
push
mov
cmpsb
sar
push
cmp
cs
sti
fsubl
mov
lods
sti
clc
ja
shl
sbb
dec
rorb
cs
ljmp
push
stos
jp
inc
imul
inc
adc
xor
iret
mov
repz
decl
inc
ret
dec
scas
popf
jno
lret
loope
pop
jp
stos
push
andnps
inc
mov
push
pushf
lcall
shll
arpl
enter
das
inc
inc
js
sbb
iret
pushf
mov
test
call
ljmp
xchg
sub
pop
in
out
jg
shrl
sbb
adc
cltd
adc
into
cwtl
rcll
in
movb
fisubl
scas
inc
dec
mov
mov
adc
xchg
inc
ss
and
jb
mov
fisttpll
inc
out
sbb
subb
out
cmpsb
add
mov
xor
outsl
sar
call
push
mov
div
insl
inc
out
bound
xor
add
add
rclb
jo
incl
test
pop
push
sub
lods
mov
pop
cmp
push
lods
std
into
xlat
sub
cli
sarl
enter
test
jno
shl
cwtl
popa
jg
add
lods
test
shrl
outsb
daa
cwtl
pop
incl
fnstcw
mov
mov
sub
iret
mov
jg
sbb
xchg
or
call
dec
jno
dec
xchg
mov
cmp
idiv
push
jbe
mov
mov
mov
jmp
scas
cmp
cld
xchg
mov
push
cwtl
xchg
cltd
inc
in
push
ds
out
xchg
dec
ja
imul
ljmp
mov
jmp
int
rorb
inc
pop
lret
adc
inc
daa
jl
sahf
and
jnp
ljmp
out
mov
add
lods
xlat
pop
mov
xor
stos
fcoml
or
xor
sbb
ljmp
dec
lods
aad
xchg
lods
sbb
out
sub
pop
aas
cltd
shl
mov
pop
nop
jns
bound
jmp
fwait
jl
and
xor
test
into
into
dec
xor
shll
mov
decl
push
adc
mov
pop
clc
and
push
sub
xchg
xchg
bound
inc
xchg
xchg
mov
shr
adc
mov
and
xor
inc
sar
jmp
lret
sarb
sbb
mov
cmp
mov
lcall
jmp
adc
idivb
addb
dec
stos
gs
xor
mov
adc
je
lcall
mov
outsl
xchg
pop
lret
lds
xchg
pusha
es
xchg
push
push
pushl
call
dec
fsts
or
fsubrl
add
push
mov
out
xlat
cmp
loope
adc
lods
inc
cli
xchg
sbb
xchg
jle
iret
ss
ljmp
inc
xor
mov
out
dec
lcall
insl
mov
ret
out
mov
push
iret
dec
int
stos
outsb
adc
pusha
cwtl
ret
push
xor
cmp
repnz
addr16
and
inc
je
ja
and
test
push
add
jmp
push
fisubrs
mov
jno
xor
jmp
add
popf
cmp
cmp
cmp
incl
ja
or
popf
cmp
and
lret
cmp
jp
push
sub
outsb
mov
mov
xlat
sub
mov
fstpt
sti
icebp
jp
xchg
cwtl
lret
testb
lock
mov
aas
pop
add
mov
xor
pop
scas
fnstcw
hlt
cmc
out
cmc
insl
inc
add
addr16
lcall
iret
cld
popa
cmp
mov
xor
or
nop
in
sub
push
or
lret
ljmp
xchg
cmp
std
test
adc
inc
adc
cmc
decb
out
lock
push
jge
call
or
pop
mov
test
fwait
lods
dec
pop
cmp
cmp
int3
shrl
roll
call
add
mov
sbb
xchg
jae
insb
mov
aas
xor
call
call
pop
jnp
pop
pop
cmpsl
and
mov
stos
dec
sarl
pop
cmp
jl
call
gs
jne
ficomps
cmc
clc
push
push
xchg
dec
cld
out
movsl
les
inc
cmp
inc
arpl
sbbl
fwait
or
and
pop
jne
stos
mov
push
iret
loop
mov
xchg
ret
pop
sbb
mov
push
daa
push
imul
incl
cmp
mov
popf
inc
leave
jg
scas
sub
testl
push
into
xchg
shrl
cmp
pop
mov
or
fsincos
ja
hlt
xor
pop
push
xchg
lods
add
inc
jo
dec
xor
out
sub
rcrl
jns
shr
out
in
repnz
cmp
cmpsl
inc
jae
jge
nop
gs
push
mov
push
fnstcw
push
lret
rorl
pop
mov
mov
call
bound
sub
lods
bound
sahf
pop
int3
cmp
out
xchg
clc
mov
sub
dec
push
ss
out
fnstcw
push
loopne
test
pop
xor
push
std
xchg
jge
pop
sbb
xchg
incl
pushf
mov
sbb
push
inc
out
push
adc
sbb
xor
sarb
jge
sub
add
call
pop
xchg
jno
nop
cltd
adc
pop
xlat
and
bound
daa
inc
mov
test
call
sbb
repnz
cli
into
dec
mov
sbb
repz
movsb
mov
test
push
pop
jmp
sbb
mov
xchg
jp
out
in
mov
pop
push
icebp
cmpsb
sbb
mov
decl
and
gs
cmp
inc
shll
call
cmp
subl
incl
or
pop
lods
adc
mov
sti
push
cwtl
notb
cmp
xchg
inc
decl
ret
test
push
cs
or
imul
mov
cltd
mull
inc
sub
aad
lcall
add
stos
sbb
or
mov
inc
sti
inc
addb
pop
xchg
scas
testb
push
sub
push
fisubrl
cmp
mov
cmp
lcall
inc
outsl
testl
mov
incl
and
push
sub
inc
frstor
iret
push
and
xor
push
loope
sar
jmp
inc
outsl
cmpsb
jne
pop
sbb
mov
pop
clc
jo
jae
nop/reserved
rcl
cld
cld
jmp
insl
add
xor
inc
xchg
aad
roll
xor
ljmp
test
sub
int3
xchg
mov
pop
mov
jle
sub
les
dec
jl
inc
bound
subb
cmp
les
std
cmp
test
decl
jnp
cmp
inc
ds
or
add
jge
into
sahf
outsl
leave
cs
fcompl
ljmp
ret
push
adc
cs
addr16
push
jl
subl
mov
cwtl
dec
cmp
in
cmc
inc
in
inc
cmp
xchg
push
xchg
mov
addb
call
mov
push
push
cltd
xor
mov
call
sbb
loop
mov
cli
and
xor
sbb
mov
xchg
push
xorb
pushl
add
jle
sbb
mov
push
scas
pop
push
into
fiadds
in
enter
imul
out
stc
jmp
sub
leave
data16
sub
push
in
repz
rolb
stos
jns
ljmp
pop
fmul
pop
sub
aas
icebp
out
outsb
mov
adc
mov
test
call
xchg
mov
xor
inc
cmp
sbb
fbstp
cwtl
mul
fiaddl
sbb
add
lea
cmpsb
jecxz
pushl
das
fwait
test
cld
push
arpl
pop
out
ss
cmp
in
out
mov
inc
rcrl
mov
out
push
mov
sbb
adc
or
into
cmp
test
cmp
ror
jle
ds
ret
adc
pushf
fwait
loop
cmpsb
inc
mov
push
xchg
scas
ja
dec
call
jge
shlb
jb
mov
icebp
aas
mov
bound
int3
test
jge
add
pushl
mov
mov
lcall
pop
icebp
fs
dec
mov
shll
out
inc
push
and
and
mov
call
mull
dec
addr16
jle
mov
inc
mov
jno
stos
xlat
outsb
fcmovnb
bswap
inc
idiv
decl
adc
jg
outsl
lods
leave
incb
xor
in
xlat
pop
jmp
jnp
cmp
cltd
in
jle
push
mov
decl
pop
and
pop
into
mov
inc
jo
fs
xchg
aad
cli
loope
inc
jmp
jmp
imul
and
xlat
or
out
sbb
fcomi
sbb
arpl
sti
push
leave
sub
adc
lcall
popf
and
rcl
cmpsb
mov
lea
push
sbbb
xchg
std
and
fs
jl
dec
imulb
jns
lret
push
aaa
jne
dec
adc
jge
mov
in
jg
jmp
sub
jp
pop
das
adc
pusha
hlt
cmp
lea
pop
hlt
push
addr16
sbbb
dec
cmp
jmp
enter
or
push
add
cmp
pop
loopne
sbb
rclb
xor
push
out
in
jns
insb
dec
xchg
cmp
sbbb
cmp
push
adc
and
decl
fisubrs
call
inc
and
adc
dec
gs
iret
xchg
lcall
adc
dec
or
mov
lahf
in
bnd
scas
call
ss
dec
mov
fdivr
dec
and
sti
fwait
mov
push
insb
jmp
pop
es
dec
xchg
adc
pop
stos
xor
xlat
ljmp
inc
dec
xor
xor
and
popf
repnz
mov
jmp
adc
and
jmp
fwait
scas
mov
jb
imul
jbe
mov
push
out
xchg
xor
dec
add
je
mov
xor
xor
xchg
and
adc
and
ljmp
fsts
or
in
sarb
add
insl
fiadds
lods
fbld
adc
xchg
jmp
mov
xlat
filds
bound
call
aad
or
or
and
jnp
loope
dec
cmp
decl
dec
xorb
push
mov
cld
jecxz
xor
adc
sbb
pop
popf
ja
jmp
push
rorl
mov
leave
mov
gs
sub
jle
mov
cwtl
in
cmp
call
hlt
repnz
push
in
mov
data16
push
mov
repnz
xchg
lods
std
lret
in
shll
push
add
mov
jmp
mov
lods
test
sub
jb
arpl
in
xor
pushl
shrb
push
adc
mov
or
aas
pop
xchg
in
sub
ljmp
addb
adc
inc
and
jp
mov
shrb
or
imul
dec
cmp
lcall
mov
mov
out
popf
adc
sarb
pusha
mov
mov
xchg
fimull
fsub
or
pop
push
cltd
dec
cmc
scas
push
mov
sbb
test
or
or
cmp
in
shrb
push
aad
add
and
mov
add
mov
jbe
push
dec
decl
push
cmp
mov
sbb
pop
jge
insl
sahf
popa
sub
fnstsw
push
popf
and
sbb
adc
stos
arpl
mov
ret
iret
pushf
mov
clc
in
adc
and
pushl
xor
cmpsl
adc
push
jp
xchg
xchg
shl
and
daa
pusha
lcall
call
call
mov
mov
jecxz
mov
dec
push
call
pop
dec
mov
incl
xor
es
jbe
lods
aas
dec
fisttpll
lds
scas
movsb
mov
xor
cld
mov
enter
movaps
jae
or
pop
mov
xchg
sbb
popa
xor
add
cmpsb
adc
mov
cmpsb
xchg
adc
xchg
outsb
push
xchg
push
dec
movsl
mov
aas
ss
loopne
fldcw
out
ljmp
movnti
sarb
jne
fstl
mov
inc
or
inc
push
scas
cmp
lcall
xchg
negl
test
test
cli
cwtl
or
adc
jnp
dec
jl
or
mov
cmpsl
int3
jle
push
push
push
cli
xchg
in
int3
mov
pushf
les
ret
sub
lahf
fsubrp
jmp
sub
add
test
out
imull
xor
sbb
jbe
repnz
decl
iret
xchg
cmpsb
aam
dec
xor
scas
sbb
sub
or
int
pushf
repz
dec
xchg
test
arpl
and
fcomip
xchg
push
movsl
pop
leave
adcl
inc
pop
clc
testb
fcmovb
cs
pop
cmp
xor
dec
xchg
fcmovne
jle
pop
dec
iret
cmp
mov
jmp
sbb
es
lods
push
test
lahf
push
scas
iret
cld
sahf
xor
jecxz
xchg
fidivrs
mov
jmp
lods
xor
push
fwait
imul
nop
dec
pop
push
adc
pushl
jnp
pop
sub
xchg
xor
add
outsl
push
inc
cmpsb
inc
mov
lcall
mov
mov
clc
xchg
mov
xor
or
data16
fildl
in
int
cmp
mov
daa
xchg
fcompl
aad
cmp
jge
aad
sbb
call
jnp
sarl
lcall
xchg
xor
push
ja
decl
mov
scas
iret
shr
test
dec
jb
mov
and
ljmp
mov
and
xor
aam
jecxz
mov
rclb
ret
xchg
fistps
xor
insb
aas
adc
aam
pop
sarb
rorl
lcall
nop
adc
cmp
aaa
adc
or
mov
sbbb
int3
mov
mov
incl
arpl
adc
testl
mov
fadds
sar
and
rcll
decl
and
jecxz
mov
or
cmc
icebp
sub
fst
imul
scas
cmpsb
mov
dec
dec
call
mov
pop
mov
adc
mov
cli
popa
fldcw
adc
test
out
add
add
inc
inc
lahf
aad
mov
pop
adc
andl
cmc
mov
out
clc
cmp
imul
jp
enter
push
cmp
xchg
push
mov
divl
daa
incl
mov
xchg
movsb
xor
adc
push
add
test
dec
fs
dec
mov
or
pushl
loopne
pop
fstpt
jmp
mov
stc
inc
ss
xor
mov
sub
ficomps
decl
out
fisubl
pushf
cmovo
push
int3
sub
subb
icebp
sub
xchg
mov
push
fstpt
adc
push
int
test
ficomps
movsb
imul
cmp
icebp
ljmp
repz
cli
ljmp
push
jl
movsl
inc
and
xchg
adcb
jmp
mov
xchg
aas
gs
jae
in
and
arpl
js
push
lcall
pop
xchg
pop
mov
push
mov
jecxz
in
jle
xor
mov
adc
out
inc
mov
adc
add
aad
cmp
mov
lcall
dec
pusha
std
mov
imul
rcll
divb
mov
inc
test
call
inc
test
and
imul
test
cld
ficompl
pop
push
cmp
decl
ljmp
je
push
cmpsl
pop
pusha
sub
das
mov
addr16
push
sbb
mov
decl
scas
nop
jecxz
xchg
dec
and
cmp
dec
fistps
and
test
inc
std
andnps
pushl
inc
ret
pop
out
push
xor
dec
dec
xchg
adc
sub
fdivs
fxch
push
incl
std
movsl
xor
xchg
xlat
sub
dec
inc
bnd
adc
xor
test
ds
incl
data16
cmpl
cmpsl
add
cmpl
lahf
test
xor
sub
and
std
push
ret
incl
pop
pop
clc
and
out
jns
out
xchg
or
ret
clc
fcoml
imul
leave
loopne
lock
lcall
andl
or
lahf
add
daa
jl
push
and
fisttps
or
add
add
stc
cmp
add
inc
pop
dec
ret
arpl
push
inc
and
xchg
lahf
pop
or
add
pusha
data16
ljmp
jbe
adc
call
hlt
xor
dec
inc
mull
adc
addr16
mov
test
cmp
mov
lcall
fsubr
out
mov
inc
cmp
push
mov
and
stos
clc
pop
push
and
call
inc
idivb
movsl
xchg
add
call
add
sbb
pop
cmpsb
sub
mov
jmp
fs
dec
aad
push
pushf
fs
lods
insb
fists
and
sub
inc
mov
dec
cmpl
pop
cmpb
add
xchg
cli
inc
mov
ss
mov
cmp
ljmp
pushl
mov
sbb
mov
mov
popf
inc
lcall
mov
add
jo
inc
outsb
lret
dec
xchg
mov
add
mov
decl
loop
enter
cmp
jmp
jns
add
je
out
xor
and
ljmp
daa
loopne
int
scas
and
aaa
sbb
jne
out
jae
repz
or
incl
imul
cmp
lret
push
mov
sub
outsb
jno
sbb
xlat
sbb
pushf
repz
les
test
inc
xchg
dec
outsb
movl
push
jb
mov
pushl
push
pusha
mov
lods
and
add
mov
ss
and
in
push
sub
call
rclb
sub
mov
sti
jno
jg
mov
pop
mov
cmp
out
into
mov
or
and
fistpl
sbb
ret
ljmp
ret
mov
fbstp
pop
mov
divb
inc
adc
loopne
mov
mov
andl
cmp
incl
and
lret
cmc
stos
sbb
cli
mov
cmp
rorl
push
sub
xlat
mov
pushl
lods
push
xor
xchg
pop
sub
aad
shl
sbb
push
xor
decl
jp
test
aam
in
fcoml
test
add
mov
stos
arpl
pushl
mov
lcall
adc
add
ja
mov
test
mov
push
popf
addr16
adcl
iret
out
or
xor
mov
fistl
jmp
pushf
xchg
dec
mull
mov
push
dec
jns
lea
imul
dec
cmp
mov
pop
jns
arpl
jnp
cmp
popa
xchg
inc
lock
fdivs
jne
rcrb
xchg
call
push
loop
addl
xchg
xchg
ljmp
cld
out
dec
jge
std
mov
fwait
xor
inc
clc
int3
leave
loope
sarb
mov
ret
lcall
call
sarb
push
and
pusha
pop
iret
or
push
mov
mov
movsb
or
dec
jp
lcall
pusha
stos
xorb
lahf
mov
inc
cmp
out
sub
repz
popf
lret
rolb
iret
test
or
pop
or
je
mov
pusha
gs
push
fsubl
and
ljmp
out
jmp
mov
dec
push
cmpl
sbb
xchg
sahf
dec
jl
sub
push
loop
fsubs
pushl
pop
dec
notb
xlat
jge
cmpsb
in
mov
adc
test
xchg
jnp
decl
push
xchg
lret
pop
sti
lock
lret
cs
xchg
sbb
stos
scas
push
fnstenv
jmp
sub
out
xchg
out
xchg
xchg
pop
idiv
daa
push
jno
shlb
mov
loopne
enter
call
rolb
mov
adc
loopne
add
leave
in
lcall
xchg
inc
lea
pop
push
jecxz
addr16
lods
dec
out
push
cmp
jecxz
out
pop
mov
mov
push
jne
jns
enter
and
xor
ljmp
fs
inc
xor
jp
push
stos
das
mov
jnp
push
outsl
jno
sub
sti
mov
push
lahf
in
mov
mov
in
mov
incl
repnz
dec
iret
push
lret
inc
imul
and
out
dec
or
jp
sti
sti
pop
inc
scas
test
inc
xor
stc
dec
cltd
fs
adc
xchg
and
xchg
push
jmp
cmp
insl
or
jge
mov
adc
movsl
sub
cli
and
bound
les
movsb
fwait
iret
sub
decl
dec
add
repnz
pop
xchg
aas
push
push
or
push
jecxz
out
xchg
lea
xor
fildll
stc
ss
push
cli
cmp
insb
pop
mov
mov
ret
xor
call
dec
dec
popf
add
call
loop
xchg
les
jae
dec
fcomp
test
jmp
call
clc
mov
pop
repz
pop
pop
and
aaa
mov
mov
insb
adc
ljmp
clc
loop
lock
push
sub
rcr
jns
out
sahf
js
and
mov
std
jg
vpsubsw
inc
lock
popa
xchg
cld
jnp
loop
fcmovu
xchg
inc
dec
stc
pop
jl
jmp
dec
pop
mov
in
sbb
cmp
xor
ret
les
fstpt
jmp
int3
sub
and
jbe
jnp
cmp
pop
test
adc
mov
ljmp
inc
and
push
popa
adc
stc
sbb
and
lret
jl
ret
fimuls
int3
out
dec
in
inc
mov
sub
push
dec
and
dec
lods
xor
sub
loop
sub
aad
jmp
pop
pushf
pushl
repz
xchg
dec
test
lret
test
mov
gs
cmp
mov
testb
aaa
mov
movsb
and
sahf
push
push
xor
shl
repz
xor
ljmp
and
sub
sti
sbb
dec
mov
push
repz
pop
add
pop
addr16
mov
dec
pop
adc
clc
jl
mov
clc
mull
dec
xchg
mov
incl
cmc
xchg
cltd
xrelease
cli
ja
std
add
arpl
xchg
jmp
adc
or
filds
sub
pusha
lds
outsb
xchg
cwtl
mov
pop
xor
ljmp
jmp
sti
cli
scas
sahf
rcrl
dec
scas
rorl
test
cli
dec
shr
xchg
xor
mov
and
ja
xor
xchg
loope
aaa
cmp
adc
sub
push
std
sbb
lret
scas
xchg
sub
lcall
dec
xchg
fmulp
mov
xor
jns
pop
sub
mov
mov
fnstenv
sbb
add
or
adc
jns
loope
imul
sbb
push
and
jl
push
popf
cmp
jmp
mov
ja
cmpsl
lds
data16
dec
jne
and
mov
sbb
sub
xor
jae
mov
or
fdivs
out
mov
fsubs
jmp
rorl
into
lods
fldenv
dec
sub
dec
insl
aam
push
add
or
mov
arpl
data16
pop
xchg
push
mov
std
outsl
popa
push
or
or
cmpsl
jmp
call
push
inc
push
in
cli
inc
mov
push
aad
aam
inc
jle
cmc
dec
push
frstor
cmp
pop
int3
xchg
fldt
mov
push
dec
pop
bound
pusha
mov
xor
and
mov
decl
aad
movsl
xor
mov
adc
sub
repnz
bound
mov
dec
rorb
ljmp
fnstcw
cmp
push
sahf
and
movsb
flds
orb
xchg
mov
das
inc
sbb
outsl
and
jno
cmpl
sbb
and
fdivrs
fbstp
pop
sub
sub
fildll
adc
adc
mov
incl
mov
sub
out
lds
jge
push
shr
cmpsb
push
jbe
ds
sub
inc
adc
call
fiaddl
enter
into
popa
es
in
xorb
jmp
cmpsb
sahf
shrb
jmp
xchg
mulb
jg
push
or
xchg
cs
cmp
mov
mov
ljmp
push
xchg
aas
ds
add
ss
leave
out
or
dec
mov
in
jns
pushl
lds
push
mov
xor
std
add
cmp
inc
push
dec
dec
add
shlb
test
fnstcw
incl
shl
std
test
addr16
pop
pop
xchg
fistl
and
mov
mov
lods
fadds
cmp
push
adc
xchg
mov
ljmp
xchg
xorl
loop
lea
xlat
add
icebp
imul
pop
push
lock
decl
and
xchg
or
mov
call
ljmp
mov
pop
gs
incl
cmp
or
mov
lret
push
test
inc
movsb
cltd
pop
outsl
cmp
ss
outsb
fcos
pushl
lret
xchg
inc
cmp
inc
shl
jb
adcb
pop
roll
push
push
add
dec
adc
jmp
or
cmc
sub
into
mov
pop
inc
test
mov
int
jmp
jo
out
mov
in
arpl
cmc
rcrb
pusha
cmp
and
jg
cmpsb
rclb
lret
sbb
lcall
outsb
in
or
inc
jnp
jno
mull
es
add
and
add
in
jne
cmp
ljmp
cmp
or
test
lods
imul
sbb
mov
and
mov
das
push
and
clc
cld
adcb
cli
xchg
in
enter
fidivl
inc
shrb
decl
xchg
pop
jg
lahf
test
dec
repz
test
pop
mov
or
sti
imul
int3
and
jns
out
in
adc
pop
xchg
cmpsb
rclb
xor
xchg
and
out
dec
rorl
insb
sbb
lcall
rcll
adc
lock
pop
fsubl
and
lods
fwait
test
fistl
pop
stos
es
subb
in
ss
mov
lods
fidivrl
adc
decl
leave
lahf
jl
sahf
xor
mov
sbb
sbb
sub
push
out
dec
mov
mov
ret
cmpsl
scas
sub
mov
fistpll
insl
xor
popf
roll
cmp
and
push
popf
push
mov
push
into
jnp
fsts
test
mov
sar
inc
std
cmc
dec
aas
hlt
pop
mov
fdivp
sub
or
repnz
cmp
adc
jmp
into
aam
push
outsl
addl
mov
aad
gs
out
or
mov
xchg
pop
cmp
lret
sbbl
lahf
enter
loop
push
ss
fstps
lahf
jle
cmp
mov
sbb
enter
and
fisttpl
call
movsl
daa
sbb
fsubs
add
mov
cmpsl
sub
enter
decl
xor
hlt
jmp
xchg
mov
adc
pop
sub
jl
mov
shll
push
jae
inc
decl
fldenv
pop
fldl
xchg
test
scas
jns
test
pop
stos
dec
mov
adc
sub
std
mov
inc
xchg
stos
lods
push
or
xor
inc
cmp
xchg
mov
and
inc
cmpsl
push
test
cmpsb
and
add
out
jmp
push
ret
cmp
xchg
sub
fcmovne
push
mov
imul
mov
inc
mov
mov
xchg
sbb
mov
jl
push
pop
out
lcall
lds
pop
xchg
pop
mov
add
xchg
rolb
mov
push
pusha
inc
jle
push
in
js
sub
jo
out
mov
divl
push
jg
lcall
in
outsb
aam
pop
inc
sub
lret
and
ja
insl
xor
mov
lcall
cmp
or
ds
jo
xchg
jg
or
jo
xchg
sbb
ljmp
adc
aam
xor
dec
repz
sahf
lds
jns
pop
or
pushl
jno
flds
cmp
stos
or
fstps
dec
outsl
loope
ja
packsswb
fisttpl
ret
jmp
lea
out
outsb
call
sub
movsb
xor
jmp
inc
mov
mov
jmp
imul
roll
sub
repnz
cmp
pop
cmpb
xchg
jns
xchg
fdivr
inc
mov
xchg
and
mov
adc
insb
and
pop
xchg
or
adc
jmp
jmp
xchg
mov
pushf
add
push
sbb
xor
icebp
aad
cld
add
cmp
mov
repz
jo
cmp
jno
mov
and
lret
faddp
lea
decl
lcall
push
push
sub
sbb
pop
outsl
or
iret
sahf
mov
inc
in
lcall
mov
mov
aad
and
fiadds
mov
fisubrs
add
call
divl
mov
or
clc
mov
repnz
cmpsb
repz
ljmp
sub
or
jp
lret
lds
dec
dec
cmpsl
stos
roll
inc
jmp
and
lcall
jl
lods
jmp
sub
mov
jle
outsb
xor
aaa
sbb
xor
sti
pop
incl
dec
xchg
leave
jbe
rcr
into
mov
stos
cmp
pop
jne
jp
hlt
adc
pop
xchg
fs
test
jmp
cmpsb
ret
inc
mov
sti
in
cmc
loopne
ljmp
fistps
mov
lcall
pusha
in
push
xchg
xchg
nop
cmpl
mov
push
and
xchg
gs
xchg
mov
out
lahf
adc
stc
fldenv
sarl
sub
mov
lahf
ss
jne
incl
stos
or
enter
jle
push
inc
ja
adc
mov
jnp
and
decl
inc
cli
lea
push
push
adc
inc
xchg
pop
movsb
in
je
xchg
popf
mov
mov
sub
icebp
aaa
lcall
icebp
int3
in
adc
pop
sbb
push
dec
outsl
cld
dec
mov
jns
mov
pop
call
mov
xchg
aas
rcl
xchg
ds
push
xchg
mov
ss
aaa
jnp
lcall
sub
pop
test
inc
nop
mov
add
shll
fdecstp
pop
sub
jmp
mov
movsl
subl
or
push
mov
jae
sbb
mov
scas
mov
jmp
sub
adc
mov
xor
push
add
jmp
jbe
subl
addl
xchg
aas
jns
out
or
jno
test
mov
jmp
xor
push
cltd
rcrb
mov
sbb
dec
rcl
data16
pop
dec
out
push
hlt
adc
incl
pop
pop
xchg
gs
ljmp
jl
rolb
dec
js
or
ljmp
insb
js
in
and
ret
ja
les
loop
jns
movsl
mov
cmp
jmp
xor
sub
mov
in
scas
lcall
lods
insb
out
loope
sub
inc
cmp
decl
mov
dec
push
ja
dec
jp
jp
push
shlb
xor
adc
ret
in
into
call
xor
dec
dec
sbb
stos
fsubl
mov
jnp
lret
ljmp
outsb
std
daa
cmp
xorb
shll
fdivrs
inc
inc
cmp
cld
pop
sbb
pop
and
xchg
inc
sub
sub
fs
sti
xor
mov
pop
adc
ljmp
imul
roll
repnz
push
cmp
subb
mov
cmpsb
push
add
xor
mov
fstl
scas
fucom
or
mov
lea
movswl
push
dec
xor
ja
js
lods
jg
cmp
cwtl
js
xchg
out
inc
test
rcrl
sbb
xchg
inc
es
incl
and
mov
inc
adc
push
das
cmp
lret
inc
inc
jp,pn
incl
aam
xchg
fwait
repnz
and
inc
cmp
loopne
cmpsb
dec
daa
leave
popa
lods
fsts
dec
inc
cmp
fsubrs
inc
mov
push
scas
xchg
or
test
repz
or
mov
ret
cld
nopl
pushf
dec
gs
pop
scas
pop
pop
and
les
and
cmp
cmp
les
aaa
fsubrs
rcrl
adc
inc
sbb
out
int3
movsb
and
sub
sbb
push
imul
es
aad
cmpsl
ret
mov
call
shlb
outsb
sbb
aas
ret
or
xor
xor
xorb
sub
hlt
lcall
cmp
dec
idivb
push
rclb
pop
aas
jle
fsubr
push
jl
dec
divl
add
xchg
jne
in
inc
mov
ret
jl
jmp
les
inc
in
push
enter
jns
sub
xchg
insl
insb
in
aad
insl
jnp
enter
fsubs
sub
inc
div
mov
imul
pop
aaa
mov
out
test
loop
mov
decl
rclb
scas
xor
enter
out
xchg
jle
loop
dec
ss
cmp
pop
lret
call
std
mov
fcoml
test
cmc
daa
daa
fnsetpm(287
cld
mov
adc
push
cmpsb
jg
fdivr
decl
scas
adc
adc
and
scas
insb
push
sbb
push
adc
jmp
mov
std
int3
sbb
out
int3
xchg
cwtl
fnstcw
cli
cmp
stos
mov
in
ljmp
jmp
not
mov
aam
mov
sub
mov
push
inc
sahf
dec
sub
xor
dec
out
loop
cmp
jmp
push
sbb
adc
jo
repz
imul
push
push
pop
cmp
call
jnp
or
sbb
sub
adcb
in
pop
xchg
mov
pushl
lods
sbb
cmp
lcall
mov
xor
jnp
xchg
call
push
or
mov
hlt
roll
aam
pop
scas
dec
sub
insl
xchg
sub
ret
mov
jmp
jge
pop
inc
lds
je
ret
mov
adcb
out
xchg
lret
sbb
inc
cmpsl
pop
repnz
out
cld
adc
in
rcrl
nop
mov
mov
das
fwait
lock
jmp
dec
sub
ja
mov
pop
xor
movsl
xor
shrb
mov
xchg
push
inc
xchg
cmp
jmp
cmc
bound
test
fsubrs
push
cli
das
and
lcall
cmp
adc
mov
call
lods
outsb
or
je
aad
fistpll
int3
repz
js
pop
xchg
mov
dec
sub
pop
pop
cmp
xor
mov
inc
cmpb
jae
jne
fcompl
ret
and
out
cli
pop
dec
xor
xchg
loop
add
andl
cmp
fs
jo
add
add
jo
sub
lret
push
movsb
movb
or
push
jmp
hlt
inc
ss
ljmp
ficompl
cmp
pop
xchg
aas
fbstp
cmp
pushl
loopne
popa
pop
aas
loopne
mov
sbb
outsl
sub
or
scas
inc
jnp
lcall
pop
loop
mov
addl
mov
add
jle
aaa
mov
pushl
mov
aad
out
gs
nop
fbld
lock
jbe
xchg
mov
roll
sbb
decl
mov
dec
arpl
mov
stc
xor
push
xor
imul
call
jns
popa
addr16
inc
ss
mov
sub
mov
mov
lcall
cld
cs
das
stos
lods
inc
dec
cmp
inc
cltd
pop
pop
jmp
push
inc
leave
mov
xchg
fisttps
or
mov
pop
clc
fildl
mov
adc
jmp
test
ljmp
mov
and
nop
mov
jns,pt
aam
pop
sub
stos
pop
andb
push
or
sbb
js
inc
or
mov
lcall
call
fdivrp
decl
mov
push
dec
adc
ret
pop
mov
pop
insl
leave
dec
sbb
stos
mov
ljmp
jno
sbb
lds
test
pop
test
push
jmp
fs
es
jmp
sbb
scas
pop
jae
push
daa
adc
loop
xchg
mov
out
mov
dec
mov
cli
test
jns
popf
mov
push
imul
add
jl
andb
or
clc
pop
call
incl
subl
xor
push
jno
xchg
xchg
xchg
aam
je
ret
fldl
or
stc
add
inc
adc
push
sub
and
pusha
mov
es
sarb
cwtl
insb
lahf
loopne
adc
aas
inc
xchg
shll
dec
into
jmp
cmp
add
add
lea
fcoms
sahf
ss
in
call
pop
movsl
out
stos
insb
in
dec
adc
hlt
cld
adcb
add
sbb
adc
stc
fs
mov
loopne
sbb
idivl
sbb
or
adc
mov
mov
jmp
pusha
lret
arpl
jmp
pop
fwait
int
push
add
lret
pusha
inc
mov
pop
je
sahf
icebp
jge
xchg
mov
xchg
test
push
and
dec
push
loop
pop
addr16
inc
pushf
push
mov
incl
and
aad
dec
mov
and
sub
push
popf
push
psrad
je
dec
jae
ficoml
pop
pop
jp
lcall
insl
push
incl
and
xchg
jp
or
mov
lds
inc
inc
or
ret
cmp
incl
aam
cwtl
mov
pop
mov
fldcw
in
nop
fs
mov
dec
outsl
enter
pop
mov
lret
and
test
sub
mov
adc
call
movsl
ja
push
and
dec
lcall
pop
jnp
loopne
inc
xchg
ficoml
cmp
decl
xchg
jno
adc
jnp
mov
rorl
popa
ret
lds
ret
clc
xorl
out
xor
loop
decl
and
rep
scas
aaa
call
cmpsl
fs
aas
jge
insb
mov
ljmp
jae
int3
add
adc
mov
mov
cmp
les
lea
lcall
xchg
dec
out
mov
shrl
hlt
decb
andl
decl
cltd
in
jecxz
pushl
lock
int
sub
test
sbb
jl
or
jne
xchg
mov
outsb
sbb
dec
sub
pop
arpl
mov
add
mov
inc
pop
xchg
nop
pop
ja
dec
inc
pop
push
call
addl
subl
popa
int3
add
lds
in
js
test
pop
add
daa
pmaxsw
push
mov
xchg
aas
stc
nop
fildl
sarl
sub
jle
data16
push
xchg
dec
push
shrl
or
jp
repnz
jmp
into
sahf
sarl
xchg
push
hlt
pop
and
inc
movsb
rcrl
out
notb
jo
mov
sti
sub
repz
add
jo
sbb
outsl
sahf
xchg
test
pop
adc
inc
mov
and
clc
ss
pop
mov
xor
adc
xor
mov
or
and
dec
decl
mov
test
jbe
xor
addr16
sar
cmp
and
or
adc
pushl
sub
aas
push
add
xlat
js
mov
nop
es
xchg
out
cmc
push
xor
arpl
decl
vmaxps
mov
add
aas
jmp
aaa
inc
add
stc
push
scas
jmp
lret
ret
add
outsl
popa
shll
lret
bound
and
fnop
sbb
stos
fistpll
decl
dec
pop
mov
cmp
bnd
int3
int
xchg
push
jg
add
jb
xor
jmp
lock
out
xchg
loopne
sbb
add
sbb
xchg
jns,pt
call
int3
adc
iret
inc
aad
pop
stos
inc
rclb
push
xor
cli
lret
jno
jmp
adc
ja
or
sub
lcall
mov
fmuls
cmpsb
mov
sub
push
loop
sub
bound
inc
cmp
popa
push
imul
push
sub
cmpsb
mov
fs
pop
dec
push
aaa
sub
xchg
test
or
nop
dec
mov
decl
in
cwtl
aad
clc
loope
mov
push
adc
imul
or
insb
decl
mov
insb
push
shl
xlat
cmp
gs
add
xchg
jmp
inc
dec
ja
and
jns
push
je
clc
pop
pop
adcl
or
sbb
pushl
std
xor
mov
add
roll
loopne
pusha
loopne
into
shlb
pop
cmp
mov
jne
push
testb
xor
lcall
test
arpl
jmp
push
jns
mov
lock
loop
sbb
mov
or
jge
mov
xor
sbb
addr16
aam
push
xchg
xchg
pushl
cmpsl
fldl
retw
xor
stos
scas
mov
repz
pushl
push
xchg
loopne
dec
xchg
xor
jnp
push
sub
cli
lret
movsb
mov
mov
jmp
sbb
lahf
fildl
aas
sti
fwait
mov
xor
sbb
imul
in
cld
incl
je
push
roll
and
in
xor
jb
cmp
pop
loope
xorb
in
out
icebp
lods
push
dec
adc
cmp
repz
fwait
or
xor
in
aam
lret
adc
mov
jb
call
incl
dec
rclb
xor
mov
roll
pop
cmp
and
mov
scas
inc
mov
call
movsb
les
inc
jg
std
lea
fbstp
lods
dec
mov
push
or
sub
out
jmp
fsubrl
mulb
enter
inc
lea
cwtl
sub
add
fimuls
jmp
mov
dec
and
cli
inc
dec
or
cmp
aas
arpl
iret
push
call
iret
cmp
cmp
sub
outsb
jge
mov
jne
mov
scas
ds
jge
mov
ljmp
adc
cmpsb
out
jmp
or
jno
mov
and
je
imul
dec
aaa
dec
sbb
mov
mov
jle
jo
in
les
ficompl
inc
mov
push
es
push
jmp
inc
sbb
cmp
paddsb
loope
sub
movsb
mov
jmp
ljmp
fcmovnu
cmp
aam
pop
add
jmp
scas
in
out
inc
xlat
lret
push
push
ljmp
int
ss
repnz
movsb
into
xor
xchg
outsb
imul
jmp
cmpsb
insl
jp
div
adc
sbbb
scas
sbb
in
jne
incl
sub
or
dec
dec
or
movsb
stc
call
or
or
push
inc
test
add
lcall
rcll
cwtl
fs
add
mov
aad
das
adc
mov
in
and
pop
push
sub
mov
into
and
jo
mov
jge
mov
cmp
jmp
cmpsl
mov
pop
push
stc
dec
pushf
pop
in
cmp
sub
test
ja
gs
dec
cmp
std
call
gs
cmp
cli
lock
add
xchg
push
push
in
push
fdivr
call
pop
xlat
bound
lret
outsl
in
xchg
and
les
jle
lock
sub
inc
clc
rcrb
decl
xchg
xchg
lcall
dec
dec
pop
lds
mov
out
movsl
pushl
addr16
adc
pusha
punpckhwd
imul
and
daa
repz
mov
jp
mov
call
cs
mov
addl
xchg
mov
aam
arpl
and
lea
inc
and
inc
sbb
aas
scas
sub
mov
movsb
in
sbb
jge
push
pop
lea
mov
scas
sub
incl
js
and
mov
test
xchg
sbbb
ficompl
loope
or
call
cmp
arpl
jge
or
movsb
mov
in
mov
leave
push
cs
aad
inc
int
sbb
ret
jl
loop
outsl
mov
cmp
pop
xor
ljmp
mov
sub
ja
or
daa
mov
sbb
sbbb
repnz
lcall
mov
in
rol
add
and
sahf
xor
or
mov
imul
or
mov
shrl
stc
mov
les
stc
cltd
adc
scas
in
scas
add
decl
and
mov
xor
mov
pop
lds
notb
aam
cmpsl
aam
push
adc
inc
ljmp
xchg
fstpt
sub
mov
lds
aas
xor
adc
leave
dec
test
jmp
xchg
stos
xor
inc
and
inc
or
sub
ljmp
fcomp
or
push
mov
and
jo
out
movsl
xorl
jg
ja
pop
push
repnz
decl
push
add
in
test
adc
call
and
cmp
mov
call
inc
pop
mov
in
ret
pushf
inc
cmpsl
mov
lock
adc
test
ret
ljmp
ret
adc
xor
mov
iret
jne
mov
add
call
xor
push
inc
data16
push
sbb
or
out
fcomip
mov
in
jge
decl
jno
shlb
shlb
cmp
mov
popf
psadbw
push
mov
and
jno
ret
movhps
js
lods
mov
cmpsl
out
cmp
jmp
test
push
cltd
and
mov
adc
setb
sti
ds
inc
cli
xor
jnp
enter
sbb
mov
mov
lcall
rol
fld
cwtl
mov
call
jge
into
jl
inc
imul
jae
mov
xchg
mov
mov
imul
incl
insl
fwait
cmp
out
or
out
repz
fnsave
mov
mov
icebp
pop
dec
call
daa
cmpsl
dec
dec
or
sbb
xchg
push
mov
adc
pop
mov
rcll
xchg
and
pop
mulb
add
arpl
repz
ljmp
mov
mov
test
mov
loop
repz
add
lods
jb
decl
pop
sbb
cmp
pop
sbb
jmp
pop
sti
mov
data16
add
incl
jnp
push
mov
mov
sbb
test
mov
xor
fdivr
inc
test
adc
shll
call
jno
mov
insb
and
incl
cs
xor
lock
sub
enter
inc
mov
cltd
push
pushf
call
int3
mov
xor
ficompl
divb
push
adc
cld
cmp
sbb
pusha
fmull
mov
and
add
pop
xchg
in
pop
call
push
adc
pop
fcomi
jbe
xchg
xor
jge
out
mov
nop
cmpsl
xor
inc
push
add
dec
inc
mov
dec
sahf
sub
adc
cli
ds
jg
sub
aam
pushl
xchg
popa
jo
mov
fidivs
std
mov
xchg
lret
xchg
jns
pop
mov
popa
enter
inc
cmp
jg
shr
fs
aaa
rcrb
ret
insl
aam
in
mov
call
call
sbb
addr16
and
popf
sub
dec
bound
decl
and
cmp
add
sbb
sbb
pop
xchg
insb
testl
fxch
mov
fcos
decl
push
cmp
sub
rclb
pop
daa
gs
pop
mov
lea
psllq
decl
arpl
mov
repz
pop
sbb
cmpsl
fcoms
js
fsubrp
xchg
ret
call
jnp
ljmp
xchg
pop
or
enter
mov
frstor
lcall
bound
cld
ror
and
popf
cmpsl
sbb
fdivrl
fwait
lret
sahf
adc
scas
cmp
mov
ljmp
ret
mov
ret
aad
adc
arpl
movsb
ss
jae
cli
int3
call
jo
lea
and
repnz
pop
test
or
enterw
sub
adcl
dec
xor
mov
sub
ljmp
aas
and
inc
push
stos
cmp
fidivrl
fwait
mov
loopne
fdivrs
and
jmp
adc
andb
arpl
pop
fdivs
push
add
lcall
dec
hlt
dec
ret
incl
js
push
stos
cld
pop
js
push
scas
xor
ds
inc
inc
sub
jmp
cmc
jbe
in
imul
dec
loope
dec
sbb
jno
mov
cmc
out
and
mov
jl
cmpsb
clc
mov
xor
sbb
dec
sbb
push
fidivrl
outsb
lods
inc
pop
idiv
dec
mov
add
jmp
adc
fsubp
jae
mov
xchg
jb
cld
aad
xchg
ljmp
jge
xchg
loopne
jae
jo
stos
test
and
fcompl
jns
pop
loope
fneni(8087
sbb
dec
sub
push
lret
aad
arpl
mov
jmp
mov
push
push
mov
sarb
fs
xchg
out
decl
test
sub
jecxz
fnsave
aaa
lock
pop
in
adc
sub
rcrb
ljmp
push
popa
mov
fs
xchg
pop
add
fnstcw
xchg
sbb
xor
jb
jmp
mov
ja
loopne
sbb
nop
or
add
out
pushf
fnstenv
ds
dec
in
add
incl
push
cmp
and
cli
mov
shll
hlt
call
sub
outsb
dec
mov
ljmp
andb
and
sub
lds
shll
ret
jecxz
lock
ret
pushl
xchg
cmc
xor
pop
push
decl
xchg
loop
addr16
loope
popf
mov
push
dec
lret
jmp
rcrb
adc
fwait
leave
jb
cmp
ss
jg
ljmp
in
push
adc
jmp
push
out
push
dec
ds
xor
cmpsb
shrb
enter
jbe
push
add
es
imul
sbb
test
test
mov
mov
ds
sub
jne
fstps
lcall
imul
dec
loope
leave
lock
test
aas
cmp
fs
out
cmp
pushl
ffreep
add
test
sub
mov
adc
xchg
ss
jb
push
bound
or
gs
mov
xchg
mov
push
push
neg
stos
clc
adc
lahf
dec
roll
call
cmpsl
repnz
aad
fsts
mov
pop
and
aaa
or
shr
inc
pop
mov
jmp
scas
mov
cmpsb
mov
repnz
cmc
int3
adc
and
pop
jnp
js
mov
popf
popf
pop
and
inc
or
incl
xchg
pop
or
addr16
jle
cmpsl
test
jmp
jns
movsl
jmp
adc
decl
stos
jns
or
mov
fbld
ds
fidivl
insl
and
pushl
cmp
lds
adc
rclb
sub
es
fbld
sbb
or
jnp
dec
push
addr16
fisubrl
mov
jbe
dec
rep
js
sbb
fwait
das
aas
shlb
cmp
xor
lods
leave
xchg
pop
ds
out
or
stos
mov
clc
push
jno
incl
cmp
stos
jge
push
dec
xchg
andb
xchg
mov
gs
push
add
lds
dec
adc
lahf
dec
int3
out
rol
inc
fidivl
repz
adc
popa
mov
les
sbb
sbb
into
fimull
daa
mov
xor
and
sbb
jnp
shl
mov
aad
push
notl
ljmp
test
test
sub
adc
add
push
fs
mov
ret
mov
and
lcall
sub
or
xchg
add
jp
mov
lock
mov
icebp
dec
inc
jmp
jne
gs
jnp
pmulhuw
fidivl
sub
lret
mov
jns
mov
push
mov
mov
cwtl
mov
and
sbb
inc
xchg
cmp
inc
add
decl
js
push
inc
mov
scas
mull
lcall
mov
mov
test
decl
jnp
pushf
add
adc
ja
xor
dec
xchg
mov
adc
ljmp
pop
dec
add
shl
out
and
inc
xchg
das
ljmp
xchg
add
lods
dec
sbb
popf
decl
daa
mulb
sub
add
popl
lahf
xor
and
testl
ds
pop
fldcw
ret
and
movsb
lret
push
xor
sub
mov
mov
incl
jns
fimull
fs
cmp
mov
cli
test
push
xchg
or
and
pusha
jne
repz
sbb
sub
mov
nop
call
cmp
mov
mov
xor
fildl
xor
rorl
cmpb
fdivrl
jnp
pop
xchg
orl
mov
popf
enter
pop
icebp
ljmp
or
fdivr
decl
lds
mov
or
pop
dec
mov
dec
aam
mov
pop
xchg
fsubrl
dec
cld
or
adc
arpl
ss
and
push
test
jns
cmp
imul
push
pop
cmp
and
pushf
push
test
dec
cmp
push
out
sbb
lcall
cmp
cmpsb
fdivs
sbb
in
testl
aas
fstpl
pushl
rcll
push
sub
scas
loope
mov
lea
jo
movsb
int3
fcmovnu
arpl
call
loopne
das
fwait
mov
fsts
inc
out
cmc
aas
sub
jb
daa
mov
mov
cmp
jmp
add
pop
mov
dec
and
repnz
scas
orb
ljmp
pop
lock
adc
mov
cmpsb
std
lcall
mov
cmpsb
js
sbb
punpckldq
mov
xchg
pop
and
out
sub
mov
push
jp
sbb
mov
fistl
jmp
push
mov
incl
in
decl
mov
test
int3
push
cmp
push
inc
lret
push
inc
jle
shrl
lcall
repz
inc
aam
inc
jo
xor
lret
cmp
cmp
test
mov
sbb
mov
aam
add
mov
jecxz
xorb
and
mov
mov
sbb
les
fildll
dec
mov
cld
cmc
jg
fs
ljmp
cmp
xor
imul
repz
int
push
in
fidivrs
call
ret
dec
sti
fwait
dec
sbb
fistl
xor
adc
lea
sbb
push
lret
and
adc
jmp
testb
in
test
sbb
xor
jmp
divl
movsb
jmp
mov
jno
fsubrl
lret
inc
mov
mov
dec
and
mov
push
std
decl
jbe
and
cwtl
dec
mov
insl
adc
jae
lcall
decl
insb
push
rcr
jne
cmc
lock
jno
jb
cwtl
aam
sti
xchg
jbe
mov
decl
rolb
lea
pop
jmp
sbb
or
inc
gs
jo
or
ljmp
and
xor
adc
mov
mov
call
scas
mov
lcall
cmpsl
push
cmp
in
xorl
jg
shr
mov
or
call
ret
pop
dec
lods
dec
nop
rolb
aad
xchg
or
sahf
inc
inc
pop
call
das
inc
ljmp
cli
into
sbb
lahf
iret
mov
test
pop
add
test
push
or
push
pop
adc
push
pop
sarb
inc
pushl
test
xor
dec
loope
stos
inc
aaa
adc
mov
jmp
add
pop
mov
push
or
mov
fprem
dec
jecxz
mov
stos
sub
ljmp
mov
mov
pop
int
aaa
in
jo
pop
mov
fsubrp
cmp
loopne
aad
ljmp
push
test
or
or
cmp
mov
in
bound
decl
std
cli
lods
xchg
xchg
push
nop
in
popf
xchg
not
mov
stc
aaa
sbb
lea
mov
outsb
clc
sub
mov
add
sub
xchg
xor
jmp
test
mov
jb
mull
mov
pusha
push
pop
push
add
dec
push
fisttpl
add
call
mov
daa
dec
pop
icebp
lret
bnd
test
lret
add
sahf
orl
incl
push
mov
sub
xchg
outsb
mov
cmp
lcall
ljmp
or
mov
clc
xlat
fcoml
cmc
scas
outsb
xor
push
in
mov
inc
call
dec
add
rclb
decb
into
fistps
cltd
lret
ret
incl
shll
aaa
mov
mov
dec
movsl
stos
lods
fwait
pop
lds
imul
pop
leave
push
mov
ljmp
ds
inc
mov
inc
add
sub
mov
sub
idivb
pushl
sub
loop
rorb
scas
mov
sub
dec
out
fcos
call
dec
xchg
jns
mov
mov
sti
push
popf
outsl
sbb
push
in
cmp
lret
dec
fisttpll
das
mov
or
int3
xor
and
dec
pusha
sbb
adc
mov
fstp
scas
jecxz
aas
call
sbb
dec
pushl
pop
pcmpeqw
sbb
test
decb
ja
outsb
jb
adc
ljmp
pop
cmpsl
jg
mov
jae
movsb
pusha
lcall
lods
mov
movsl
add
frstor
loop
xchg
pop
mov
test
fsubrl
sbb
repz
dec
mov
sub
incl
fadds
mov
and
push
leave
mov
decb
mov
in
push
bound
mov
call
jns
loop
pusha
lock
sbb
scas
add
jg
fsubrs
ds
call
or
lcall
and
cli
and
addr16
xlat
ds
mov
push
pop
pop
ljmp
or
inc
adc
mov
daa
js
pop
jb
ljmp
mov
and
call
fimull
test
shll
sahf
js
insl
push
lea
xchg
pop
lcall
push
add
xor
sbbb
adc
ljmp
stos
push
dec
movsb
jle
inc
decl
cmp
test
lods
sti
fwait
push
or
pop
aam
cli
xor
lret
add
je
cmp
inc
gs
aaa
mov
cmc
mov
xor
call
and
lea
daa
imul
imul
mov
sub
xchg
add
cmp
test
pushl
loop
jo
or
inc
dec
sub
push
cli
adc
and
add
incl
mov
jmp
cmp
enter
xor
movsl
clc
push
orb
sbb
jb
cmpsl
xor
pushl
out
sbb
inc
in
sbb
fistps
negl
push
test
cs
andb
jmp
push
and
test
outsl
lds
rcrl
nop
pop
loop
push
cli
sub
mov
jl
ljmp
push
dec
icebp
xchg
shl
and
jg
xchg
mov
popf
xchg
pop
enter
jmp
add
sbb
mov
adc
pop
fldl
sbb
test
inc
jecxz
mov
jmp
inc
insl
add
les
mov
sbb
push
or
leave
jecxz
mov
sbb
cmp
mov
xchg
out
out
pop
pushl
push
jle
repz
call
mov
dec
bound
fnstenv
lea
lock
lcall
mov
mov
inc
ss
arpl
ss
push
ret
sahf
int
stc
add
dec
in
call
mov
pop
mov
pushf
jno
outsl
mov
add
mov
xor
incl
stos
inc
sub
hlt
dec
dec
add
push
and
sbb
mov
mov
out
in
xchg
sub
decl
daa
pop
dec
push
xor
and
cwtl
cli
push
mov
mov
adc
cmpsb
call
call
hlt
icebp
je
sbb
mov
mov
out
ficoms
lds
notb
scas
mov
inc
cmp
dec
jns
xchg
arpl
mov
adc
aaa
lahf
push
sbb
mov
adcb
adc
lcall
mov
inc
sbb
iret
jmp
scas
dec
lods
push
mov
xor
mov
ljmp
lahf
stos
decl
jecxz
lcall
xchg
or
lods
cli
push
ror
out
fimull
decl
sahf
cli
decl
fimuls
jb
lahf
lahf
jge
adc
aad
add
sbb
or
cltd
adc
lcall
jg
out
cmc
mov
pop
lahf
leave
jmp
enter
mov
jg
fs
mov
lcall
rolb
xor
subb
sub
dec
insb
mov
push
sbb
mov
pusha
idivl
movsl
ud0
stc
fildl
out
filds
mov
mov
sbb
fsubr
mov
and
xchg
sbb
loope
mov
jmp
movsb
sbb
ljmp
in
hlt
mov
xchg
add
jbe
fld
push
decl
daa
and
xor
push
push
dec
adc
sbb
arpl
inc
ja
shlb
call
addr16
sahf
fldenv
repnz
lea
push
test
aam
fwait
addr16
xchg
cwtl
ljmp
lock
repz
jle
adc
jmp
out
xchg
push
insl
aaa
and
mov
lcall
sbb
iret
fsubs
sub
jb
lods
jl
test
pop
pop
jle
pusha
push
loop
pushl
inc
or
lcall
adc
or
sbb
mov
adc
ljmp
in
mov
loopne
xor
pop
test
jge
mov
jnp
fdivrs
cld
dec
cmp
incl
jbe
aad
scas
popf
dec
in
push
cmp
push
es
in
mov
add
pop
mov
fmul
mov
add
or
jae
into
jp
outsb
lods
insl
mov
or
lock
push
jae
repz
mov
jmp
mov
sbb
cld
sbb
or
lret
inc
xchg
add
decl
adc
push
adc
ficoms
add
dec
push
jnp
pushf
push
sbb
jmp
xchg
or
lret
cld
fists
out
bound
cmp
pop
xor
add
jl
adc
mov
mov
sbb
mov
add
sbb
cmpsb
outsb
xchg
lcall
lret
add
dec
in
mov
pusha
sub
out
xchg
shlb
jmp
jnp
int
mov
cmp
ljmp
jle
mov
jecxz
popf
cmp
arpl
call
xchg
sbb
in
outsl
inc
lahf
sub
push
inc
call
pop
mov
out
pop
add
inc
xchg
cmp
decl
inc
cmc
mov
mov
push
sub
cmp
adc
sbb
adc
pop
leave
shrb
pop
shr
cmp
push
sub
outsb
inc
mov
sbb
mov
sub
xchg
icebp
jmp
insb
cld
sbb
pop
fwait
cmp
arpl
aad
ret
jo
xor
faddl
jmp
lods
fistl
jle
xchg
addr16
cmp
xchg
imul
xchg
inc
call
js
fdivr
fisttpll
mov
cmp
dec
jno
out
movsb
xchg
mov
push
lea
mov
push
dec
cmp
decl
inc
pushf
test
or
xor
scas
out
push
xchg
dec
and
sar
call
push
adc
jge
push
cmpsl
data16
insb
mov
in
addb
or
stos
in
decl
loope
or
push
cmp
inc
popa
push
mov
lcall
pop
cmp
push
jmp
mov
mov
adcl
mov
xchg
lea
lods
xor
decl
dec
test
stos
adc
lock
cmc
mov
and
mov
jne
xlat
pop
mov
sar
pushl
pop
jecxz
ret
add
nop
push
call
xor
nop
aaa
int
pop
imul
incl
xchg
add
mov
add
sbb
test
jo
nop
sar
pushl
push
dec
mov
test
insb
imul
xlat
dec
xlat
add
insl
les
add
jbe
das
xchg
or
mov
sbb
aam
xlat
outsl
push
add
fucom
lcall
pushl
cs
xchg
jo
cld
xor
jb
sbb
in
mov
add
cmpb
incl
push
je
jno
in
sti
inc
rcrl
jecxz
pop
jns
cmpsb
out
mov
sbb
ljmp
or
insb
repz
cmc
adc
daa
sti
mov
mov
sbb
sub
out
fcomps
inc
cmp
decl
jnp
arpl
sbb
xor
mov
pop
pop
push
ss
cmp
mov
sbb
jb
incl
push
inc
ss
mov
add
loopne
and
das
lret
jns
stc
jg
mov
lcall
push
mov
std
stos
mov
dec
sbb
adc
iret
mov
in
addr16
push
mov
insb
push
cmp
xchg
cmpsl
add
jle
aas
mov
xchg
mov
mov
decl
in
and
mov
nop
jno
fidivs
je
sbb
pop
xchg
push
out
lret
dec
sbb
int3
rorl
in
ljmp
movsl
or
cli
xor
sub
sub
stos
cli
enter
fcmovnb
dec
icebp
lock
mov
mov
mov
in
loop
jns
ss
dec
sub
movsl
sub
ljmp
pop
ret
sub
inc
adc
sub
ret
or
imul
dec
sbb
call
dec
adc
stos
push
js
in
sahf
and
sub
shlb
mov
int
ljmp
push
or
mov
mov
inc
cmp
add
jbe
stc
cmp
ljmp
punpckhbw
aam
mov
fcoml
cmp
mov
mov
mov
lcall
sbb
shl
pop
lret
repz
les
ljmp
xor
inc
lcall
cli
in
loop
mov
mov
lahf
mov
cmc
lret
popf
jbe
fistl
mov
ss
lcall
and
add
dec
decl
mov
add
dec
insl
mov
int
rcl
mov
mov
icebp
pop
add
addr16
aaa
ret
je
jp
test
ds
jmp
mov
dec
pop
pushl
lods
test
cs
mov
and
push
std
jg
stc
mov
addr16
testb
cmp
ds
push
dec
adc
rcll
add
call
sti
dec
loope
mov
sbb
out
and
rorl
call
lret
les
ret
scas
int3
mov
imul
push
inc
nop
pop
dec
add
mov
ficoms
and
jns
push
push
cmc
mov
pop
fs
ret
push
mov
jns
cltd
mov
push
push
pushl
fidivrs
add
lahf
adc
or
push
adc
pusha
add
add
sar
js
mov
sub
inc
push
daa
sub
lea
lahf
sarb
jns
decl
movsl
sbb
mov
loope
repz
test
mov
mov
cli
aas
push
pushf
stos
push
lds
sub
shlb
lods
inc
sub
fmul
cmp
lret
sbb
call
jmp
inc
mov
or
data16
sub
decl
cmp
js
sub
stos
xor
mov
push
sub
push
addr16
loop
jmp
cltd
cmp
adc
jp
sbb
add
enter
push
mov
inc
rorb
dec
jmp
jo
popa
push
mov
cli
cmp
stos
aas
mov
jb
cmp
pop
daa
cs
inc
inc
sbb
cmpsb
aam
dec
sti
xchg
pop
lea
push
shrb
aaa
roll
daa
or
mov
ror
add
xor
movsl
dec
cmp
pop
push
pop
mov
enter
mov
int3
mov
fimuls
aas
lds
cmp
inc
cs
add
lahf
ret
sub
cmp
push
xchg
dec
ret
call
push
in
inc
enter
mov
popa
push
arpl
pop
sti
fstpt
push
fistpl
adc
push
cld
decl
pop
cmpsl
xchg
sti
ja
rorl
lods
xchg
sub
xor
inc
jecxz
decl
cmpsb
dec
icebp
pop
mov
psubd
sub
jl
call
mov
jl
vpsrld
test
decl
pop
mov
add
jb
inc
arpl
mov
push
mov
add
xlat
js
ljmp
ja
stos
jno
pusha
jg
mov
in
cmp
test
repz
xchg
cmp
incl
sub
and
fsub
lock
mov
les
add
xchg
pushl
cltd
adc
or
lods
stos
out
imul
out
sub
fcompl
cld
or
ja
icebp
mov
dec
mov
cmp
inc
lret
jnp
xor
mov
cli
mov
call
fidivl
ljmp
pop
fidivrs
dec
inc
repnz
sbbb
int
jb
jg
mov
or
xchg
out
push
jb
push
mov
outsb
xor
push
adc
dec
neg
jmp
test
mov
add
pop
clc
mov
pop
jne
or
xor
lods
leave
lods
jns
lret
test
dec
adc
inc
clc
call
dec
jge
and
mov
inc
fld
cmp
pop
loopne
aad
sub
orb
jne
mov
push
jb
or
out
mov
adc
in
aad
je
jnp
xor
pop
pushl
dec
aam
jl
stos
sti
and
leave
mov
and
fistps
jg
aaa
mov
pop
mov
push
rcll
add
gs
fadds
mov
shrb
inc
xchg
xorb
add
jmp
ret
jecxz
pusha
dec
sar
push
popa
mov
pop
adc
bound
rolb
out
in
cmp
int
sbb
lahf
sbb
rep
inc
popa
inc
cmp
mov
jl
cwtl
xor
xchg
incl
js
mov
adc
test
adc
sbb
mov
int3
decl
rcrb
xchg
int
lods
adc
in
jecxz
mov
enter
sub
inc
lds
outsl
mov
lcall
lret
iret
push
xor
push
jnp
sub
or
ficomps
call
mov
test
push
mov
xchg
inc
out
jbe
xor
jge
ljmp
pop
pop
inc
repnz
pushf
add
mov
lret
jns
cld
jle
inc
adc
popa
fdivr
call
push
aam
pop
rolb
mov
lds
lea
lock
ss
and
and
cmpsl
xchg
dec
mov
add
repz
mov
decb
mov
jmp
arpl
cltd
xlat
loopne
repnz
mov
incl
push
sets
pusha
pop
jb
cwtl
add
clc
and
pushl
mulb
add
and
sbb
xor
call
mov
jle
push
loopne
jle
push
testb
movsb
and
mov
xchg
cmpsl
and
or
jmp
fimuls
es
xchg
negl
gs
or
movsb
inc
ss
dec
ds
xor
xchg
mov
or
aam
insl
imul
test
das
push
jno
ja
adc
cld
jge
cld
loopne
cmc
sub
fidivl
icebp
pop
and
jbe
xor
les
xchg
pop
dec
sbb
mov
or
addr16
and
sub
stos
fisttps
push
xchg
pushl
and
daa
jmp
pop
and
mov
sbb
repz
sahf
nop
cmp
lods
pop
dec
xor
repz
cmp
sub
pop
sbb
or
lret
and
ficomps
jbe
lcall
pop
lret
cmpsl
imul
ficomps
add
xchg
cmpl
mov
call
faddl
sbb
cmc
pop
inc
adc
adc
sbbb
shl
push
mov
lcall
and
jno
cmp
add
jmp
jno
mov
fabs
jae
int
xor
jg
orl
pusha
mov
mov
jle
inc
or
ret
jecxz
sub
sub
call
enter
pop
movsl
push
adc
add
stos
xor
sbb
xor
or
mov
lcall
and
mov
mov
xor
loope
and
leave
inc
xchg
mov
pushl
dec
mov
sbb
xchg
adc
and
xchg
mov
aad
lret
or
arpl
incl
cmp
sbb
cmp
pusha
cltd
add
push
fsubrl
movsw
cmp
push
subb
jp
add
arpl
je
data16
dec
divb
mov
push
pop
into
lds
lcall
add
sbb
out
or
clc
outsl
arpl
fdivp
and
call
loop
and
adc
fucomi
and
pop
xorb
jmp
ss
or
xchg
lcall
dec
ds
inc
adc
pop
jl
cmp
push
aaa
jg
add
xor
and
jmp
scas
adc
out
out
leave
in
jge
shlb
pop
add
mov
or
movsl
mov
xchg
pushl
stos
xchg
pop
imul
aad
aaa
add
ret
pop
pop
push
mov
into
decl
test
xor
sbb
dec
inc
mov
insb
mov
test
popa
jmp
repz
lds
cld
mov
cmp
mov
dec
pop
lds
fdivrs
ljmp
loop
test
mov
jnp
mov
aad
stos
mov
int3
out
sbb
jmp
push
repnz
adc
pusha
jp
ja
fistps
jbe
popl
call
and
popf
lods
lods
stos
dec
pop
xlat
mov
push
add
lret
pop
lret
iret
push
bound
rorl
test
mov
call
ret
and
mov
xchg
and
mov
shll
xchg
push
or
pushl
test
popf
loopne
movsl
inc
outsb
je
or
add
cmpsl
push
pop
insl
push
ret
xor
inc
lea
pop
jne
stos
fimull
icebp
inc
cld
jp
loopne
jb
lock
out
sub
ljmp
xchg
sarl
mov
orl
push
jecxz
mov
call
scas
aad
cmp
movsb
jae
rorl
rorb
fisubs
mulb
pushl
pop
popf
pop
into
stc
pop
cwtl
sbb
inc
shrb
fists
insl
aaa
mov
cmpsl
subb
pushl
mov
sub
enter
nop
fadd
mov
xor
movsb
push
rorb
rclb
test
addl
inc
mov
std
and
jg
lret
ljmp
sti
xchg
ljmp
add
call
out
mov
ficoms
mov
or
adc
pushf
lods
pop
add
lcall
ffree
lret
clc
out
ljmp
enter
sbb
push
icebp
xchg
or
call
in
call
or
mov
pop
mov
dec
cltd
fwait
or
jne
pushf
lahf
or
push
test
xchg
jbe
aas
mov
push
lret
xchg
popa
sub
mov
aam
testl
rcrb
xor
mov
int3
or
mov
or
xor
mov
fbld
ret
xchg
push
add
sahf
mov
addr16
mov
int3
pop
addr16
ljmp
or
daa
out
je
je,pt
xchg
add
add
imul
and
mov
pop
pop
inc
cmp
ljmp
aas
aad
inc
add
xchg
popa
push
icebp
jp
lea
filds
clc
sub
sbb
pushl
mov
xor
push
push
out
add
cmp
push
add
pushf
cmpl
adc
mov
stos
int
mov
mov
lea
fdivr
lahf
fnstenv
pusha
ud0
call
stos
add
cmpsl
rclb
mul
inc
int
push
push
cmp
and
repnz
jmp
insl
fstps
mov
cmp
in
jl
push
mov
add
adc
inc
inc
incl
push
and
and
popl
mov
loop
push
pop
fwait
sub
movsl
lock
mov
fsubp
ljmp
fldcw
imul
shrb
xchg
pushl
movsl
jae
aas
cli
pop
push
iret
pop
push
ja
pop
lahf
push
dec
addb
sub
lret
pop
mov
push
ss
jmp
adc
jmp
dec
ss
fldt
xchg
pop
push
sahf
add
and
leave
in
push
mov
jle
pop
hlt
ljmp
mov
adcb
or
leave
leave
cmp
inc
enter
cld
shrb
inc
stc
xchg
push
mov
into
pop
fdivrp
pop
ror
adc
xchg
jl
xor
push
mov
mov
mov
decl
mov
push
jnp
notl
ss
cmc
pop
enter
cmpsb
mov
imul
sub
cmpsl
jecxz
incl
inc
mov
in
outsl
hlt
mov
or
jns
into
jecxz
out
and
mov
mov
decl
jno
iretw
xchg
dec
ds
xchg
mov
jecxz
lock
inc
iret
push
in
xchg
push
xchg
mov
mov
lcall
cmpsb
xchg
and
mov
mov
stos
xchg
inc
mov
adcb
and
lods
inc
pop
cmc
fisttpl
adc
outsl
cltd
mov
xchg
add
aam
ljmp
dec
xchg
aad
aas
into
jl
sahf
pusha
imul
ret
es
adc
loop
test
adc
cwtl
cmpl
jecxz
jno
dec
lods
sub
cmpsl
enter
data16
jne
mov
jle
test
movsl
popa
ret
push
lcall
ja
clc
cmp
jae
xchg
lret
cmpsb
mov
decl
mov
xchg
fistl
jne
fisubs
shrb
jp
cmp
mov
jmp
pop
dec
mov
adc
cltd
jbe
ljmp
shrl
jmp
and
call
enter
scas
int
in
jb
and
sub
pop
in
mov
sbb
incl
xlat
addr16
add
jle
xchg
cs
inc
add
mov
call
cmp
lock
sub
popf
popa
in
test
jecxz
adc
in
in
add
daa
lcall
inc
add
inc
lret
movsb
fldt
nop
into
cltd
dec
fwait
jno
jnp
addb
xchg
xchg
xchg
stos
pushl
iret
jbe
mov
scas
scas
mov
mov
imulb
sub
incl
mov
pop
mov
cmp
js
movsb
cmp
mov
push
enter
incl
data16
aas
cmp
lret
xor
dec
sub
mov
fs
push
lock
mov
pop
or
adc
outsb
mov
mov
ja
mov
xchg
idivb
push
adc
or
jb
in
loopne
stos
rcrl
pop
inc
stos
inc
in
pop
into
icebp
out
mov
clc
mov
cmp
mov
rclb
adc
fs
jae
jmp
mov
andl
push
cmc
popa
repz
sbb
push
mov
inc
jae
xor
push
enter
push
mov
xor
ljmp
ss
movsb
jl
std
xchg
sarb
push
fistpll
add
aas
push
sarl
lcall
cmpb
and
push
lcall
sbb
cmp
mov
or
fisttps
aas
mov
ja
jae
rorl
jnp
clc
and
or
stos
outsl
and
loop
add
fldenv
mov
push
jg
push
or
jp
lcall
mov
dec
inc
clc
insl
and
rep
pushf
lds
aas
adc
inc
pushf
jb
das
pushl
in
jge
dec
sub
or
popf
insl
aas
mov
mov
rcrb
pushl
jo
jmp
and
sub
cmp
enter
sub
lret
ss
test
aaa
mov
jmp
shlb
inc
clc
call
xlat
mov
adc
jns
sub
int
stc
cmc
aaa
lcall
mov
icebp
hlt
popl
cmp
outsb
push
adc
enter
aas
inc
les
call
popa
imul
scas
mov
stos
scas
je
jecxz
add
push
outsl
xchg
mov
imul
sar
lcall
pusha
xor
into
ret
mov
loope
out
inc
mov
enter
sgdtl
call
push
sahf
and
dec
sbb
mov
jmp
js
mov
pop
mov
jno
inc
jmp
or
jmp
jg
inc
xor
xchg
rdtsc
lock
loopne
popf
mov
test
or
mov
incl
ret
int
and
cld
xor
in
mov
inc
pop
sbb
faddp
lcall
rcll
mov
daa
inc
out
sbb
sbb
test
addb
inc
inc
out
inc
int
notl
decl
adc
test
cli
nop
push
jmp
jb
and
mov
jmp
cwtl
je
jmp
xchg
inc
mov
loope
lock
adc
lcall
cld
push
mov
in
xchg
cmc
pop
xor
dec
rcl
xor
aam
mov
enter
jmp
inc
dec
mov
cltd
fcomip
mov
ja
sbb
dec
or
mov
dec
call
mov
roll
test
sbb
and
jb
imul
and
rcr
aam
and
mov
sub
jecxz
lods
insb
sbb
scas
test
cmc
mov
pop
stc
cli
xlat
pop
xchg
xor
ljmp
xchg
imul
fdivs
jnp
mov
and
pop
push
test
push
mov
hlt
scas
ljmp
arpl
subb
insl
push
outsb
lahf
into
mov
int3
popf
cmpps
fxch
addl
sub
fldenv
pop
xchg
mov
xchg
roll
jmp
push
and
pop
or
in
out
jnp
mov
ret
mov
xor
jmp
cltd
lcall
pop
push
push
call
cmp
sub
mov
imul
ljmp
outsb
shrl
mov
xchg
jmp
rol
and
hlt
sbbb
adc
xchg
out
pushl
jecxz
lcall
or
loope
sbb
int3
lahf
push
dec
int
cli
sub
mov
xorl
call
out
shrl
movsb
add
shlb
xor
jnp
cmp
pop
lret
hlt
js
pop
push
popa
incl
scas
divb
push
aas
and
js
mov
lods
dec
les
lcall
mov
mov
scas
cltd
jns
into
mov
aaa
mov
loop
lds
pushl
push
push
imul
in
jbe
pop
loopne
pop
mov
insb
cmpsl
adc
pop
fs
decl
push
lahf
fiadds
fadd
pusha
jns
stos
xchg
pushf
pop
jo
xor
sbb
mov
call
sahf
je
and
mov
inc
out
test
and
pop
dec
and
pushl
xchg
adc
out
outsb
es
jae
mov
xor
add
pop
sbbb
out
jl
jmp
std
into
pop
lods
mov
fwait
dec
dec
outsb
icebp
and
or
mov
xchg
incl
mov
into
adc
jnp
popa
and
cltd
sub
xlat
pop
mov
sbb
decl
sbb
rcrl
and
push
mov
pop
imul
jl
push
mov
inc
scas
mov
clc
das
mov
out
inc
and
cli
jnp
ljmp
fldt
inc
arpl
inc
sub
subl
jmp
jmp
push
iret
stc
dec
jno
outsl
shll
sahf
pop
xlat
shlb
test
jp
lret
xchg
loope
dec
roll
loope
add
adc
mov
add
movsl
or
js
ljmp
into
cmpsb
inc
inc
dec
in
jnp
sub
cmp
push
loop
in
cmpsb
lcall
cmp
xchg
test
fwait
test
mov
iret
jmp
ficomps
or
push
pop
mov
ljmp
mov
repz
xchg
push
loopne
out
sbb
inc
cmc
loop
call
xchg
inc
add
cmp
mov
enter
das
adc
sub
push
or
adc
ja
iret
fldl
cmpsb
dec
mov
lcall
add
jae
xchg
pop
add
pop
lds
dec
or
ljmp
pop
and
ljmp
ds
mov
test
push
cmp
cmp
dec
adc
nop
adc
pushf
popa
xchg
fcoml
jg
call
inc
mov
sbb
insb
dec
pushf
jl
dec
mov
inc
aaa
mov
jb
or
repz
dec
mov
push
in
scas
js
inc
stc
ljmp
out
fisubrs
mov
cld
push
xor
jbe
mov
int
inc
test
xchg
push
cmp
jnp
inc
inc
fsubrs
das
movsl
pusha
mov
jno
icebp
pop
call
in
mov
mov
dec
xchg
shll
jecxz
and
pushf
and
les
jns
jbe
idivb
inc
test
pop
mov
push
aas
add
or
push
push
sbb
ljmp
sbb
pop
inc
insl
push
sub
xchg
jb
ret
fstpl
add
lcall
imulb
jle
mov
mov
cwtl
pop
dec
mov
mov
or
or
decl
cmp
into
cmpsb
shlb
mov
mov
push
add
adc
sbb
lcall
lret
lods
aad
inc
test
jno
out
pusha
xor
mov
cli
repz
js
aas
or
das
pop
loopne
arpl
jbe
and
mov
stos
mov
cmp
clc
dec
arpl
sub
call
mov
sub
out
sbb
push
hlt
cmc
out
dec
repz
mov
in
incl
pop
mov
pushf
les
cmp
icebp
push
dec
jns
sbb
push
mov
jmp
std
push
sahf
jb
pop
mov
sub
jl
mov
lods
cmpsl
push
mov
mov
sub
lcall
icebp
movsb
lods
insb
or
xor
enter
xor
mov
xchg
pop
data16
call
mov
lcall
jne
int3
out
aaa
jbe
ja
add
push
cmp
lcall
pusha
in
pop
mov
movl
addb
repnz
ret
mov
pushl
rclb
push
outsb
movsl
insl
cmpl
loop
stos
dec
xchg
adc
decl
jmp
lods
sbb
dec
pop
pop
pop
stos
daa
icebp
inc
ret
aam
mov
mov
ret
push
std
int3
or
add
incl
pop
xchg
sbb
in
imul
push
movl
loopne
cmova
aam
push
das
or
hlt
or
jle
add
or
push
out
fwait
das
mov
leave
in
mov
cmp
into
bswap
addb
out
dec
sub
xchg
adc
aas
push
das
inc
nop
iret
popf
xchg
cmp
lss
cwtl
nop
inc
sbb
mov
call
jns
add
push
pop
shrb
cmp
int
push
or
in
adc
mov
incl
in
jne
adc
adc
cmp
xor
jbe
jle
fmull
mov
rcll
addr16
aas
es
maxps
sub
add
out
pusha
dec
push
xchg
and
cltd
cmp
jg
fstps
test
adc
fisubs
push
daa
sbb
lods
mov
decl
ret
mov
dec
icebp
aam
and
mov
out
sub
push
pushl
inc
xlat
sub
xchg
movzwl
push
js
push
jge
bound
dec
aas
scas
call
mov
fwait
jae
and
jl
sub
lahf
repz
into
and
mov
testl
lcall
mov
iret
inc
sarb
and
cmp
cmp
jmp
popa
rcll
outsl
mov
mov
mov
xchg
cltd
sub
aas
cltd
mov
sahf
xorl
jne
jg
mov
or
xorl
mov
test
in
or
xor
dec
leave
add
pop
mov
add
push
jmp
jmp
cmp
outsb
jb
mov
sbb
mov
pop
dec
lods
pop
inc
je
std
and
or
stc
push
jmp
push
mov
mov
push
lock
into
pop
and
jmp
pushl
mov
adc
sar
xchg
shrb
mov
mov
xor
scas
cwtl
or
xchg
xchg
incl
jne
and
or
xchg
loope
jno
fs
in
dec
inc
nop
andb
lcall
mov
sbb
outsb
shl
fbstp
cmp
xor
cmpsl
aad
push
jbe
push
dec
dec
xchg
out
rorl
repz
lods
rclb
or
push
das
cmp
and
lcall
jae
loope
dec
cwtl
inc
cmc
mov
pusha
pushf
outsl
adc
jle
or
incl
pop
mov
and
and
test
loop
adc
js
xchg
push
test
cmp
lret
cmp
js
stos
negl
or
adc
cmpsl
sbb
and
ret
sub
jge
incl
ret
mov
or
xor
and
adc
xchg
lods
js
sbb
mov
ljmp
cmp
sti
mov
repz
scas
decb
push
mov
jge
push
int
ljmp
pop
test
sbb
lds
popa
int3
add
stc
pop
jne
mov
add
inc
repnz
inc
incb
push
mov
mov
pop
push
and
sub
call
addl
mov
push
push
cmp
jle
lahf
aam
lcall
call
popa
fwait
pop
mov
leave
lods
jbe
mov
and
fwait
sbb
movsb
cld
inc
aaa
jp
js
sbb
hlt
fdivs
adc
jns
in
fistl
add
xchg
cmp
mov
pushl
repnz
sbb
call
lock
bound
and
or
jmp
push
enter
mov
push
test
lret
sub
pop
pusha
int3
mov
scas
lret
cmp
inc
fcmovbe
mov
ljmp
push
iret
dec
adc
pop
fdivrs
fadds
mov
and
xor
insl
dec
mov
fistpl
mov
ljmp
fadds
dec
std
jmp
aam
es
fisttpll
ss
bswap
in
push
sub
inc
cmp
arpl
gs
dec
pushf
cmpsl
aam
add
stos
xor
in
jmp
or
ljmp
lret
dec
mov
sub
jo
pop
add
int3
aas
sub
push
pushf
mull
dec
or
movsb
in
adc
inc
pop
xchg
in
jo
mov
and
rcll
fadds
sub
lcall
or
jmp
xorl
dec
movsb
push
je
enter
pop
push
sub
es
jmp
enter
mov
imul
fmuls
xchg
outsb
aad
or
and
xchg
incl
sahf
es
jmp
in
jo
scas
test
lea
push
xor
pop
jno
repnz
jle
jle
xchg
mov
sbb
jno
pop
mov
pushf
jecxz
loopne
mov
fisttpll
incl
rorl
cmp
clc
sub
jne
mov
or
cmp
call
sbb
xorl
xchg
mov
in
pop
xorl
and
mov
pop
gs
lcall
push
inc
lea
mov
sub
insl
add
xor
lret
loope
pop
repz
pop
out
sar
incl
dec
pop
shr
add
dec
mov
repnz
incl
push
adc
sub
adc
jbe
mov
cwtl
sahf
sbb
ret
decl
and
sbb
jnp
mov
cmp
ds
iret
orb
cmp
out
ljmp
decl
jbe
xlat
lcall
sbb
loop
push
in
mov
imull
mov
incl
out
loopne
sub
ficoms
inc
lods
out
les
imul
call
xchg
mov
inc
je
push
jp
imul
mov
xchg
sub
mov
adc
sub
call
sub
jb
sub
cwtl
rcr
adc
lds
xlat
in
xchg
pop
xchg
jmp
cmpsl
lret
pushf
sahf
in
lret
fstpt
mov
xchg
mov
mov
sub
jmp
lret
lods
scas
jae
xchg
gs
loope
fimuls
int
in
ss
sbb
mov
out
sub
inc
xor
add
repnz
insb
mov
stc
je
stos
aad
scas
xchg
or
decl
pop
pop
stos
loope
add
sub
push
insb
clc
dec
jge
jmp
lcall
dec
dec
lcall
cmp
inc
push
sbb
fcoml
xor
cmpsl
jne
stos
ljmp
dec
push
cmp
push
clc
es
lods
aaa
std
loopne
xor
jg
mov
lcall
mov
mov
push
enter
mov
and
mov
sbb
std
and
out
call
push
mov
adc
push
sbb
cmp
repz
push
add
and
cmpsb
sbb
stc
push
fsubrl
push
int
test
ficomps
push
mov
int3
lock
mov
sub
xor
mov
sbb
xchg
mov
mov
arpl
and
les
dec
sar
jmp
test
movsl
in
xchg
pop
sarb
pop
inc
je
movsb
arpl
test
ds
shll
mov
jle
mov
ret
jl
push
jmp
outsl
pop
ja
std
jnp
stc
bswap
xchg
jmp
ss
decl
sub
ret
sub
pop
pop
or
mov
fsubrl
xchg
add
lock
popf
dec
fnstcw
incl
sub
and
jae
pop
inc
xorl
jb
add
cmpsl
sub
incl
pushf
lcall
pop
int
outsb
in
mov
popa
mov
xor
subb
ljmp
lock
jl
or
js
outsl
je
push
lcall
xor
jmp
popf
mov
sbb
inc
jmp
jg
shl
ja
sub
sbb
je
lcall
cwtl
popf
popf
es
imul
pusha
cld
fs
ja
sub
inc
pop
js
mov
mov
out
adc
ret
fnstenv
xchg
mov
es
push
xor
mov
mov
mov
fimull
push
fiadds
xor
dec
inc
inc
fucomp
cmp
jo
xor
pop
sub
lods
inc
mov
push
jge
into
lcall
pop
mov
push
sub
pop
or
adc
mov
decl
xchg
xchg
stos
mov
push
sub
stc
push
push
lret
in
fldenv
ret
ret
decl
mov
loopne
cld
xor
std
or
test
jecxz
push
incl
xchg
rcll
mov
lea
aad
sbb
int
dec
fsubl
call
jb
mov
jno
iret
test
subb
rcrb
and
decl
outsl
sbb
sbb
out
jne
aad
in
aad
call
adc
ds
mov
ljmp
out
jge
push
jg
jp
fs
notb
adc
xchg
js
xchg
xor
add
inc
stos
movb
ret
mov
sub
aad
retw
test
call
jg
stos
inc
icebp
rcl
scas
xchg
and
loopne
push
emms
out
mov
fldcw
roll
mov
fisttpl
into
push
imul
mov
xor
lds
js
andl
adc
lahf
mov
or
pop
push
pop
dec
mov
mov
aaa
lods
sub
mov
push
aas
les
cld
adc
icebp
ljmp
dec
sub
dec
fbstp
dec
std
movsb
aas
not
push
stos
inc
mov
sti
push
fidivl
fistpl
ret
cli
mov
xchg
fsubrl
ds
movsl
incl
out
rcr
scas
sbb
jae
mov
jns
sti
mov
sub
lcall
and
andl
cld
adc
ret
mov
or
aas
jmp
or
in
mov
inc
icebp
sbbb
rcrb
stc
fimuls
sbb
fldcw
in
sub
pop
in
jae
jnp
jbe
fsub
fnstcw
xchg
inc
les
sbb
mov
clc
sub
test
push
fmull
jbe
xchg
test
mov
sti
lods
xchg
xor
scas
fnstsw
sar
push
les
xor
mov
lea
jecxz
cmp
in
cmp
cmp
xor
incl
fnstenv
repnz
pop
outsl
lret
sahf
hlt
hlt
or
xchg
inc
push
out
mov
cmp
ljmp
outsb
mov
and
jb
ds
outsl
nop
or
shl
ds
test
ss
decl
xor
iret
mov
add
jo
cmp
inc
jmp
dec
movsb
lcall
daa
mov
or
cmp
enter
adc
push
mov
push
ret
adc
jmp
lods
cli
sbb
ds
jns
dec
xchg
mov
je
pop
out
data16
jecxz
cmp
out
sbb
shl
sbb
or
pop
mov
dec
mov
pop
aad
mov
fs
pop
repz
xor
jns
push
push
and
mov
cmp
cmp
ja
pushl
int
popf
sbb
inc
and
mov
push
cmpsl
idivb
out
loop
test
hlt
push
fwait
incl
xor
push
nop
stos
cmpsl
dec
mov
andb
mov
pop
adc
lods
aad
incl
mov
pop
sarl
or
into
movsb
mov
mov
hlt
or
stos
mov
jge
jmp
pop
inc
mov
inc
push
js
inc
jle
ss
les
push
rorl
ja
push
call
and
jo
jo
jle
pop
pop
ffree
jnp
imul
mov
je
lods
subb
ljmp
or
pop
dec
test
in
push
dec
filds
les
adc
add
jge
movsl
mov
lock
scas
jge
loopne
add
dec
out
dec
cwtl
cmp
jmp
mov
xchg
cld
ss
lock
xorb
dec
int3
cmp
les
arpl
pop
inc
xchg
in
jne
mov
or
fwait
cmpsb
inc
icebp
mov
mov
xchg
sub
dec
lcall
insl
mov
sub
push
shlb
mov
mov
loop
imul
jmp
jg
lcall
negl
and
clc
fdivs
xor
cli
sub
dec
sub
sub
call
aaa
and
data16
loope
dec
fistps
loop
repz
dec
mov
sti
out
lcall
nop
imul
xchg
out
mov
cmpsl
pop
pop
stos
push
adc
push
push
xchg
inc
sbb
repnz
dec
fwait
jmp
insl
aaa
fwait
jmp
aad
lea
lahf
hlt
jb
leave
pop
js
push
push
mov
pushl
mov
mov
push
sti
push
mov
xor
adc
mov
sti
pushf
dec
hlt
outsl
call
or
adc
jns
mov
mov
xor
cli
cwtl
ret
mov
in
and
add
lcall
xor
bound
sbb
mov
test
adc
js
mov
daa
sar
decl
test
mov
inc
inc
mov
adc
mov
xor
movhps
lret
iret
xor
call
imul
mov
jle
dec
mov
int
mov
imul
or
mov
mov
enter
cmc
mov
jge
lcall
popa
ret
jmp
pop
jnp
pop
fldenv
cmp
jmp
lock
rorb
add
jle
jmp
adcb
arpl
push
push
adc
bound
dec
mov
push
push
ret
adc
faddl
push
mov
mov
lcall
adc
call
ret
imulb
repz
sti
mov
popf
push
inc
popf
lods
dec
ljmp
jbe
and
loope
movsl
cmp
mov
push
mov
lock
stos
dec
pop
call
fsubrp
push
jae
xor
mov
push
fidivrl
xor
dec
fmul
push
ljmp
outsb
pop
outsl
insb
ret
fnstcw
mov
rcrl
dec
push
ds
ljmp
shlb
push
aas
xchg
cld
mov
ja
inc
push
pop
pusha
inc
fcmovbe
mov
ja
sbb
mov
call
jb
rcrb
jge
jge
pop
xchg
push
sub
stos
aam
xchg
pop
insb
sbb
sbb
adcb
add
repnz
lret
sbb
xor
sti
mov
jb
sub
mov
shrl
pop
add
jg
scas
stc
loop
push
lock
incl
jo
sbb
cli
sbb
ljmp
push
rol
sbb
into
in
push
pop
or
decl
or
mov
mov
jg
jmp
loope
cld
pop
shlb
jge
stos
rcrb
lock
imul
int
mov
ds
sub
xchg
pushl
mov
jmp
mov
jae
push
cmpsl
rcrb
aad
jns
dec
mov
test
jg
into
lahf
inc
or
push
addr16
adc
xor
mov
and
mov
mov
shll
sub
jmp
sbb
mov
xor
jns
test
adcl
dec
mov
imulb
decl
cmp
xor
ss
xorl
fwait
lcall
lret
lea
sbb
call
mov
pop
or
outsl
and
and
iret
test
mov
inc
pop
idivl
enter
incl
xchg
xchg
inc
adc
xchg
imul
push
mov
sti
test
hlt
xor
jmp
outsb
mov
inc
out
std
in
clc
sub
and
mov
popa
jle
lcall
jbe
mov
out
scas
pusha
movsl
adc
shlb
pop
or
cmpl
sub
dec
daa
cmp
leave
jg
fists
int
sub
cmc
jnp
pop
push
popa
xchg
adcb
xor
xchg
xor
sub
xor
rcr
and
adc
sub
jge
rorb
pop
sub
push
dec
ljmp
pop
pop
gs
mov
data16
pop
dec
lcall
outsl
aas
lcall
jmp
test
ja
cmp
push
imul
das
in
shrl
xchg
dec
sub
sahf
mov
call
cld
and
mov
push
aaa
loop
outsl
push
repz
not
iret
inc
add
add
pop
popf
mov
pushl
lcall
mov
scas
inc
add
pop
es
fstps
jb
lret
jge
stc
sbb
xchg
out
mov
aam
cmp
cmc
int3
cmp
mov
push
incl
loope
jecxz
cmp
cmp
outsb
mov
pop
shlb
pusha
jbe
mov
push
inc
aaa
add
movsl
sar
incl
jmp
test
addr16
popa
lds
mov
popf
xchg
lods
jge
pusha
lcall
insl
adc
inc
sarl
ljmp
add
fidivl
lods
jp
dec
adc
or
jmp
jmp
jns
pop
dec
cmpl
lcall
aaa
jb
subb
call
call
inc
sbb
es
pop
ds
aaa
xchg
cld
sti
shrl
stos
push
decl
jae
adc
stc
int3
mov
mov
into
jo
aas
addl
mov
or
and
jle
decl
sub
sbb
sub
push
das
aaa
jg
add
jg
mov
arpl
xchg
sub
scas
data16
push
dec
sbb
jne
inc
jl
push
insb
inc
xor
pushl
pushf
jo
adc
loopne
mov
mull
mov
rclb
decl
lret
add
rolb
ljmp
xchg
shll
cmp
adc
cmp
je
sbb
xchg
mov
out
cwtl
ficoml
jge
cmp
outsb
arpl
pushl
cld
jb
xchg
call
aas
dec
iret
lods
roll
inc
push
add
push
mov
mov
call
addr16
in
scas
inc
lods
adc
jecxz
mov
mov
mov
sub
xor
or
adc
adc
mov
subl
fldl
movsb
movsl
outsb
aad
loopne
scas
rol
std
cmp
jle
sub
push
cmp
mov
pop
sub
push
arpl
lods
mov
pushf
out
in
sbb
jmp
xor
scas
push
bswap
ds
pusha
insl
fwait
jge
aad
sarl
cmp
or
mov
decl
cmp
mov
inc
js
xchg
movsl
or
and
ljmp
arpl
insl
pusha
mov
sarb
rol
aam
jns
sbb
pusha
push
adc
movsl
mov
jbe
call
add
mov
inc
in
sbb
mov
jp
inc
cltd
mov
ja
mov
aam
fcompl
cld
mov
sub
sbb
inc
sub
jl
sbb
or
inc
fldl
les
pop
stos
and
push
lea
test
ss
push
pushf
mov
ljmp
mov
aas
fisubs
rol
popa
jbe
insl
xor
pop
add
outsb
sbb
sar
call
imul
mov
cmpsb
scas
imul
popa
jl
xchg
insl
lock
fsubs
lcall
xchg
bound
stos
lods
and
in
loop
arpl
and
outsl
jb
dec
lret
decl
scas
lock
pop
or
cmp
movsb
inc
es
jmp
jecxz
pop
push
pushl
movsb
or
sbb
jno
pop
ret
xchg
incb
icebp
jg
jge
add
decl
xor
incl
and
add
xchg
jo
out
inc
scas
mov
rolb
push
or
and
adc
in
clc
mov
mov
lea
push
add
push
int3
mov
or
jne
ljmp
inc
imul
sbb
mov
bound
cmpsl
in
je,pt
psllq
lds
jmp
pop
lods
pop
sti
std
dec
push
adc
or
hlt
outsb
xor
bound
outsb
adc
std
mov
lcall
cmp
movsl
test
mov
pop
lea
stos
ljmp
idivl
incl
testb
test
sbb
jg
insb
mov
push
add
sub
aaa
pop
call
sbb
std
add
sbb
pop
mov
jne
pop
cmp
decl
pop
cld
movsb
sub
mov
mov
test
mov
movsl
xchg
fldlg2
jmp
outsb
xor
iret
repz
and
dec
test
js
sub
fidivrl
add
testl
ret
sbb
aaa
arpl
out
lods
mov
xchg
add
ss
insb
movsl
pusha
jmp
pop
pusha
adc
inc
inc
push
dec
out
add
mov
push
xorb
idivb
ljmp
hlt
jle
cmpsb
daa
int
and
lret
hlt
jmp
in
inc
sub
das
decl
or
pop
aam
daa
mov
jecxz
aaa
ss
gs
arpl
or
stos
adc
mov
ja
push
mov
inc
or
lcall
in
mov
loope
sbb
scas
push
xchg
pushl
dec
pusha
jge
xor
pop
testb
sbb
stos
inc
push
mov
orl
call
ret
lock
fsubrl
jl
cmovb
mov
sbb
xor
jmp
xchg
outsl
sahf
pop
pop
mov
mov
xchg
push
push
mov
mov
iret
dec
jnp
mov
ja
rorb
xchg
stos
fld
es
sub
xor
imull
mov
jmp
inc
int3
jb
or
push
aaa
fdivp
cmp
lds
ja
ljmp
idiv
rolb
pushl
repnz
gs
push
xchg
mov
add
and
sahf
xchg
bound
ljmp
repnz
cmp
pop
aaa
pop
jne
gs
cmc
data16
sub
into
xchg
sub
cld
jmp
jl
adc
jmp
inc
cltd
movl
sbb
mov
push
inc
popf
test
push
fldenv
test
in
dec
pop
and
mov
adc
sub
sub
xchg
xchg
pop
mov
cmp
lcall
out
xchg
inc
sbb
shll
inc
test
push
push
arpl
push
incl
rolb
xlat
push
xor
pop
xor
mov
push
rcrb
push
test
jmp
fsts
and
jns
rorl
dec
add
sbbl
sti
int3
repz
adc
xchg
or
push
xorps
push
add
pop
mov
leave
scas
mov
call
mov
ljmp
pop
call
icebp
cmpsb
popa
adc
jns
fsubl
fdiv
test
daa
cmpsb
inc
mov
push
cmp
jg
in
test
std
iret
clc
xor
cmp
andb
stos
push
cmpsb
inc
incl
or
pushl
and
jp
jnp
adc
sbb
add
filds
mov
and
lret
pushl
xor
adc
adc
and
adc
aaa
mov
xor
cmp
fiaddl
ljmp
mov
adc
int3
inc
fs
sbb
rol
rcrl
aas
mov
divl
incl
cmpsb
bnd
pushf
push
mov
xorl
or
cmpsl
out
int3
inc
std
xchg
push
clc
mov
orl
inc
movsb
adc
add
in
nop
decl
lcall
push
and
movb
aad
pop
sbb
mov
in
pop
rorb
shll
ljmp
mov
scas
sub
mulb
jo
push
jno
lcall
sti
stc
and
incl
sub
dec
std
mov
and
hlt
pop
sbb
pop
push
or
in
in
jg
cmpsl
xor
push
int3
lds
shl
mov
mov
pop
sbb
lods
ud0
jmp
mov
jo
ds
pop
stos
out
push
std
push
push
sbb
shll
mov
mov
lcall
mov
and
mov
sahf
or
mov
cmpsl
inc
es
ljmp
sbb
inc
adc
inc
lret
scas
test
pop
cmp
out
out
xor
push
je
pop
insb
mov
ret
inc
loop
pop
xor
adc
int3
sbb
and
inc
sub
testb
lahf
adc
clc
andb
push
cmp
sub
std
pop
cmp
push
bound
jmp
into
jns
incl
xor
lods
jp
clc
adc
add
out
sbb
xchg
imul
push
int3
cli
sbb
push
ja
cli
cld
stc
fcoml
fisubrs
dec
inc
cmc
mov
or
push
pushl
mov
push
fnstenv
sub
arpl
inc
dec
and
or
push
cmpsb
mov
in
idiv
decl
inc
aad
push
cmp
adc
rcrl
jmp
xchg
sbb
sbb
fwait
pop
loopne
mov
lcall
push
ss
notl
push
cld
xor
jmp
xor
fldl
and
inc
push
and
decl
clc
fstl
xchg
adc
popa
cmpsb
push
adc
adc
aaa
in
and
loop
sub
std
pusha
inc
pop
jno
ret
dec
hlt
jae
data16
js
rolb
mov
sbb
fstpl
jge
repz
es
xchg
adc
mov
cld
jl
in
jg
les
inc
pop
and
dec
jb
xchg
xchg
shlb
fs
incl
jbe
stos
cwtl
and
shld
jecxz
jecxz
xchg
sub
jno
xchg
jnp
mov
test
fdivs
add
jecxz
jo
ror
inc
call
mov
jbe
jnp
cltd
xchg
aad
test
lcall
push
nop
and
dec
cmp
add
ds
or
in
cmp
lahf
out
xchg
gs
call
js
popa
cmp
jne
lahf
lret
ds
and
pop
jl
ja
jno
or
ljmp
ret
jbe
mov
pop
int3
add
xor
mov
xor
dec
inc
shlb
cmp
decl
rorl
jmp
xor
stos
mulb
lret
mov
xchg
loopne,pt
dec
mov
in
dec
xor
lods
adc
cs
roll
push
ror
test
mov
cmp
xor
xchg
inc
mov
xchg
je
pop
mov
cmp
enter
jnp
xlat
pop
lahf
repz
mov
out
call
out
bound
xor
call
insb
out
mov
dec
test
mov
repz
mov
jo
dec
pop
test
je
int3
outsb
popa
aad
lcall
push
jle
jle
mov
xchg
jnp
push
add
inc
inc
mov
mov
lcall
fstpt
sbb
test
mov
or
pushl
ja
add
sti
dec
ljmp
cmp
test
mov
lcall
icebp
inc
push
fstpl
pop
cld
lret
mov
clc
mov
mov
mov
adc
sbb
cmp
mov
outsw
cmp
pop
adc
dec
push
inc
mov
pop
call
push
mov
add
out
xchg
push
jae
loopnew
shrb
jae
cs
sbb
xchg
mov
push
rorl
dec
cmp
das
dec
sub
movsb
push
aad
pushf
add
repnz
pop
pusha
pop
add
dec
lcall
les
dec
dec
loopne
fdiv
test
and
popf
shlb
rorl
into
jmp
dec
push
in
jae
out
xor
mov
fistps
add
xlat
push
shrl
inc
and
cli
cs
cld
aaa
pop
mov
add
cmpsb
push
lock
ficompl
dec
dec
jb
out
sub
jg
icebp
lods
pop
jbe
insb
add
pop
sbb
rcrl
push
sub
jmp
mov
sahf
pop
inc
dec
or
imul
jmp
inc
outsb
xor
xchg
or
ljmp
addb
jnp
es
xchg
cmp
out
push
adc
xchg
data16
jne
ret
or
incl
clc
cwtl
cmp
mov
bound
push
adc
or
sub
call
xor
aaa
jbe
rcrl
fldl
mov
scas
aas
mov
pushl
lods
lds
movl
jp
xor
adc
insb
jns
and
push
lret
sarl
pop
pop
dec
popa
mov
loop
mov
cmpsb
test
arpl
out
jns
incb
or
pop
in
lds
repz
push
add
lret
add
xor
call
pop
aas
and
pop
movsl
mov
insb
orl
hlt
adc
or
or
mov
in
stc
push
sub
call
outsb
mov
and
push
adc
pop
pop
and
and
lcall
movsb
loop
add
insl
xchg
rcrb
std
inc
jge
xor
adcb
dec
xor
loope
pop
mov
cmpsl
inc
divl
lahf
mov
cmp
push
shll
arpl
out
ror
sbb
scas
fwait
push
xlat
add
notb
ja
call
aaa
add
nop
xchg
incl
ljmp
pop
inc
fdivrl
mov
sub
js
mov
pop
sub
pushl
ljmp
cmpsl
and
roll
jnp
out
jnp
sub
aam
and
xchg
mov
call
mulb
test
push
xchg
jl
xor
mov
fisubs
js
rclb
stos
fidivrl
in
loope
mov
ljmp
int
pushf
outsl
sub
imul
lcall
cld
mov
mov
mov
mov
test
cld
jmp
call
mov
andl
cmp
inc
dec
jns
scas
cmpsb
hlt
or
fmuls
pushl
and
ds
imul
mov
pop
jmp
into
jbe
lods
mov
hlt
add
xchg
and
mov
je
lret
push
mov
mov
lcall
ret
xchg
cmp
cld
stc
mov
popa
cmc
ret
cli
mov
mov
jecxz
call
popf
aam
ret
fbld
in
cmp
shrl
idivl
mov
icebp
push
scas
cwtl
mov
call
cmpsb
pop
mov
or
leave
add
jmp
mov
scas
in
gs
mov
add
inc
mov
dec
in
jns
ficoms
sarb
sub
jnp
push
bound
dec
pop
push
or
jmp
in
leave
xchg
repnz
cmp
sti
sbb
in
xor
adc
bound
ljmp
mov
mov
loopne
xchg
mov
ds
mov
aad
adc
jp
outsb
ds
sub
sbb
pop
xor
in
sub
ds
std
lods
sbb
cld
push
in
push
mov
cs
repnz
icebp
imul
mov
or
lcall
mov
adc
fldenv
mov
push
daa
xchg
fs
data16
popa
pop
je
shrb
decl
pushf
sti
cmp
loopne
add
sarb
push
out
xchg
jp
mov
and
test
decl
aam
lcall
imul
imull
cmpsl
jecxz
xor
sbb
dec
jle
std
mov
push
xchg
call
lahf
pushf
mov
mov
sbb
jbe
jmp
out
call
aad
mov
fnclex
push
call
xor
sbb
sbb
fs
int
nop
xchg
lods
scas
es
fstpt
sbb
push
push
and
and
imul
lcall
hlt
fistpl
inc
push
mov
or
ss
js
mov
mov
push
push
mov
repnz
out
out
sti
push
jmp
rcr
xchg
dec
sub
lds
and
inc
xor
dec
scas
jmp
lahf
jns
cltd
rorl
push
push
std
fucom
xor
xchg
inc
loope
cmpsb
pop
roll
sbb
gs
call
mov
movsb
aam
sub
test
ret
pusha
mov
sbb
sbb
test
decl
cmp
push
fwait
mov
adc
xor
mov
jl
pop
jno
fstp
lods
jbe
call
inc
mov
inc
xchg
or
into
jo
int3
rol
call
sahf
sbb
cld
pushl
sbb
inc
mov
lret
lret
int3
cmp
in
sub
mov
sahf
fdivr
ljmp
stos
addr16
sahf
int3
dec
stos
mov
in
add
stos
sti
loopne
into
push
sbb
cmc
lods
call
pop
aaa
or
pop
ret
xor
add
data16
xor
enter
xchg
in
pop
call
push
gs
insb
lds
imul
add
jo
xor
cmpl
lret
call
clc
add
lods
jp
push
mov
adc
mov
jmp
movsl
xchg
pusha
jge
out
jmp
pop
jns
dec
jo
int
cwtl
pop
out
xchg
mov
mov
pushl
es
in
sbb
imull
and
subb
hlt
hlt
mov
je
ljmp
jmp
jno
cmc
push
inc
and
jnp
shlb
jecxz
mov
enter
push
test
add
push
lods
sahf
out
add
cmp
fwait
loope
cmp
mov
cmp
push
sub
mov
or
or
jp
jae
lcall
decl
vpmuludq
dec
adc
mov
mov
xchg
jl
das
aad
push
push
fldl
cmp
and
jo
outsl
jnp
clc
fwait
mov
mov
fwait
into
sub
in
insb
bound
idivb
lret
fsubrs
xor
xor
mov
iret
aad
sti
xchg
mov
jmp
ss
adc
scas
push
jp
mov
orl
lods
repnz
negl
sbb
stc
push
outsb
aaa
les
sub
hlt
fidivl
mov
xchg
in
fsubrs
mov
lcall
lds
subb
sbb
addr16
out
mov
jo
jbe
aas
dec
es
add
push
xor
lock
mov
test
lods
repnz
arpl
cmp
mov
dec
pushl
out
xchg
rorl
xchg
add
xchg
xchg
out
arpl
sbb
leave
add
mov
pushl
sahf
stc
je
loopne
cmp
push
scas
mov
sbb
enter
call
popa
enter
or
push
imul
inc
jno
es
sbb
and
cmpsb
movsb
call
ret
cmpsl
cli
iret
jg
into
outsb
mov
lds
sar
fs
aas
in
mov
incl
xchg
daa
push
jne
adc
inc
and
arpl
adc
ret
mov
movsb
adc
std
insb
xchg
fdivrs
add
iret
out
xchg
or
mov
ret
in
cld
lcall
out
andb
push
out
mov
push
mov
jno
in
sbb
shl
jecxz
ficompl
ds
repnz
push
mov
adc
mov
cmp
sub
jp
push
sbb
jmp
sbb
inc
insb
mov
pop
inc
fnstenv
mov
or
ss
dec
sub
decl
icebp
cs
add
mov
js
mov
insb
in
jmp
ret
fs
inc
inc
out
adc
jmp
push
or
cmpsl
stos
mov
jle
push
jbe
or
sbb
hlt
out
ljmp
addr16
shll
push
xor
push
mov
mov
cmp
decl
fidivs
jbe
pop
push
mov
mov
inc
dec
std
mov
imul
push
mov
ficoml
push
push
lret
dec
lahf
scas
mov
and
inc
dec
cld
stc
push
mov
add
subb
cmpsb
mov
inc
sbb
jmp
mov
fld
mov
jp
jge
sub
mov
push
mov
adc
sahf
push
mov
jle,pt
xchg
imul
adc
cmp
pop
fbstp
lcall
jmp
push
dec
push
mov
dec
mov
je
pushf
mov
enter
jno
dec
or
pushl
lods
xchg
inc
in
dec
clc
outsl
xor
je
push
push
sbb
fistps
jo
lods
push
adc
ljmp
loopne
into
fadds
mov
fwait
xor
fs
mov
jecxz
pop
das
js
cli
mov
pop
sub
fiadds
test
pop
inc
popf
cmp
into
xorb
jns
jecxz
lret
call
dec
lcall
push
xor
outsl
ret
out
mov
cmp
movsl
test
aad
es
or
ljmp
push
fimull
push
outsb
sub
jmp
adc
inc
fsubrs
push
pushl
sti
mov
mov
add
ja
push
xchg
test
rorl
decl
loope
cmpb
scas
rclb
inc
pop
xor
aas
lods
adc
dec
popf
fcos
call
sti
out
inc
xor
sahf
xchg
mov
push
test
aam
fnstsw
cmp
lcall
repnz
shll
sub
divl
int
lret
cmp
push
in
fdiv
imul
mov
jbe
in
ljmp
xchg
ds
dec
push
lret
imul
add
dec
mov
jnp
ja
inc
aad
lds
mov
sub
sbb
jmp
cltd
mov
nop
push
add
sti
repz
push
out
jecxz
jo
add
mov
fwait
pop
inc
add
lcall
cmp
pop
ret
inc
lretw
sahf
jl
adc
jle
popf
aas
rcrl
xor
movsb
jnp
inc
jnp
ljmp
or
out
mov
and
rcrl
dec
pop
jge
add
fcompl
outsl
stc
dec
and
mov
pop
sub
xchg
mov
cltd
add
call
js
into
mov
sbb
xchg
cmpb
es
sbb
test
stos
mov
aas
shl
jl
movsl
pushf
scas
inc
leave
loopne
rclb
fidivl
imulb
and
add
fdiv
jne
push
arpl
inc
ret
sub
lods
jmp
sbb
adc
add
mov
addr16
call
ja
sbb
xchg
and
dec
pop
aaa
movsb
push
pop
jle
mov
cmp
fnstcw
enter
test
imulb
cs
les
bound
mov
ljmp
or
adc
mov
js
sbb
inc
pushf
fstpt
repnz
xchg
movsl
push
in
out
and
fcomp
fnstenv
inc
cmc
and
push
ret
cmp
sbb
jne
mov
mov
mov
jmp
push
mov
cmp
xchg
in
loopne
dec
insb
jns
pop
dec
mov
je
icebp
jb
call
fadds
pop
add
add
and
inc
xor
xor
sti
gs
lea
sbb
decl
add
aas
roll
pushf
jo
out
ret
push
mov
pop
roll
scas
mov
xor
push
icebp
jecxz
jle
movsl
sbb
test
cli
fwait
mov
rcr
dec
sbb
jo
stos
pushl
mov
mov
sbb
fwait
mov
in
movsb
cmpsl
jg
addb
adc
ficomps
lret
das
sbb
test
jge
subl
or
push
aad
cmp
call
cld
les
cltd
sub
mov
fsub
xchg
mov
fsubp
push
gs
sti
pop
mov
lret
fmul
mov
xor
jns
and
imull
cmp
sub
mov
aaa
push
mov
pop
popa
cld
pusha
movsb
push
dec
jg
sbb
dec
rclb
addr16
sub
cmpsl
loop
jge
incl
mov
lcall
adc
inc
sbb
adc
pop
add
addl
js
jno
pop
or
movsl
insl
push
mov
lds
outsb
mov
movsl
aaa
xor
jmp
pushl
mov
hlt
sub
fisttps
xchg
cmp
xchg
jbe
mov
sub
fwait
add
ljmp
mov
sub
sbb
push
jmp
cli
mov
popf
cmp
inc
fwait
push
decl
mov
jne
cmp
in
shr
jmp
in
jb
test
lcall
repz
mov
in
aaa
iret
and
mov
fwait
xchg
mov
adc
lcall
or
and
pop
test
mov
xor
jge
jge
shlb
sbb
push
ds
jbe
sbb
repnz
imul
pop
incl
xchg
fadd
shrb
sub
test
or
mov
ss
push
incl
les
sub
xchg
or
lods
push
cmpsl
ret
push
jmp
movsb
in
jae
call
decl
loope
stos
jle
lods
dec
xchg
or
xchg
lea
ss
push
fstpl
stc
mov
sti
jmp
lahf
ret
cld
inc
das
lods
loope
and
mov
ret
push
mov
into
lcall
push
rcr
mov
adc
addr16
stos
mov
std
cmp
jmp
xchg
mov
jmp
outsb
mov
jbe
adc
cmp
stos
mov
mov
fdivrp
dec
dec
fcoms
and
lcall
mov
and
mov
pxor
fwait
add
adc
loopne
sar
and
xchg
mov
add
mov
sub
and
cmp
sub
jmp
cmp
mov
add
ja
dec
outsl
pushf
cmp
lret
popa
inc
cwtl
mov
ds
lcall
ret
dec
sub
push
ja
pop
rcrl
add
xor
xor
jnp
jmp
pop
je
xor
outsb
fisubrl
or
and
and
jle
xchg
call
dec
into
inc
test
test
sbb
lcall
mov
mov
mov
incl
add
sti
add
pop
fisttpll
sti
fildll
mov
push
addl
sbb
jne
fs
mov
xchg
rcr
or
cmpsl
dec
mov
decl
mov
inc
into
mov
cmp
insl
mov
icebp
mov
or
out
jmp
fists
add
and
cltd
jo
add
popf
push
adc
mov
or
inc
pushl
hlt
int
lret
std
xchg
mov
jo
sahf
lds
ret
jnp
and
incl
nopl
mov
sbb
dec
hlt
adc
lds
cmpsl
sub
fcompl
arpl
sub
xor
sbb
ljmp
dec
mov
stos
insl
decl
dec
imul
aas
fdivr
sub
xorb
mov
dec
movsb
xorl
decl
cmp
pop
add
pushl
leave
scas
xor
mov
and
inc
cmp
push
shrl
addb
incl
sbb
scas
inc
xorl
das
bound
xchg
aas
xor
lcall
jg
inc
pop
xlat
insb
inc
inc
lahf
aas
add
leave
jmp
loop
je
dec
mov
call
pushf
aam
test
test
cmp
ss
lret
push
gs
out
push
imul
ljmp
pop
js
or
fwait
sarb
sbb
adc
lcall
and
jmp
rcrl
fsubl
fstpt
sbb
add
faddl
pop
insl
xor
decl
mov
std
sti
jb
lods
jge
push
mov
stos
cltd
add
mov
jmp
or
ss
push
mov
mov
pop
int
xchg
js
lds
nop
push
sbb
or
call
and
aaa
push
pop
loop
es
pop
bound
mov
mov
inc
shl
mov
call
sbb
in
loopne
loop
mov
aam
insb
inc
mov
mov
incl
aaa
sbbl
xchg
and
cli
jbe
addr16
pop
adc
jae
stc
fwait
push
jae
dec
cmp
cmp
lahf
jg
jmp
dec
aas
lcall
push
lahf
xor
pop
add
pop
mov
xlat
stc
gs
mov
and
and
ljmp
pusha
cmp
mov
loop
mov
aas
jp
and
ret
inc
mov
decl
inc
xchg
xchg
xor
push
leave
popa
cmp
repz
outsl
lds
mov
fildll
dec
scas
pop
jae
aam
aad
iret
insb
xor
mov
pop
sub
int
mov
incl
pop
ljmp
push
sub
data16
imul
mov
push
pop
mov
int
lcall
dec
cltd
lock
hlt
pop
cs
jb
mov
test
jb
or
stos
ds
or
cltd
repz
bound
pop
mov
mov
aad
iret
adc
enter
cmp
xchg
leave
or
sti
xchg
insl
ss
inc
sbb
jmp
mov
mov
jmp
adc
jo
shl
mov
xor
cld
mov
mov
sbb
arpl
inc
rsqrtps
cmp
xchg
ss
imul
aad
push
push
rorl
out
cmp
repz
jmp
cmpsl
sub
rcl
fisttpl
adc
or
scas
mov
cs
fldt
je
push
pop
daa
sub
pushf
push
decl
mov
cmp
push
lods
mov
push
incl
push
cmp
ret
movsl
cmp
fmul
imul
add
push
pop
mov
incl
stc
cmp
xchg
rcrb
cltd
cmp
jne
fnstenv
fdivr
stc
int3
in
and
and
mov
cmpsl
rol
inc
pop
movl
adc
jmp
push
mov
adc
sti
add
inc
xlat
dec
into
sbb
stos
push
mov
in
add
call
xchg
popa
icebp
push
cld
jg
mov
lds
in
out
mov
adcl
lcall
incl
cmc
fs
xchg
hlt
loope
in
loope
jp
cli
and
lds
sbb
dec
mov
incl
xor
clc
cmpsl
lahf
aad
sbb
jno
aad
insb
mov
pop
xchg
addr16
incl
push
add
jns
inc
xchg
or
jno
xchg
mov
stc
movsl
sub
sarb
call
addr16
and
push
imul
and
loop
loope
pop
sbb
mov
add
cmp
lds
movsl
stc
cmpsb
std
cmpsb
enter
fdivl
xchg
inc
mov
insl
or
push
ljmp
repnz
mov
adc
mov
jo
push
fcomps
cli
ljmp
add
adc
scas
cltd
xchg
neg
test
push
dec
cltd
jmp
scas
sub
call
mov
iret
jbe
dec
cmp
or
movsb
push
jbe
lret
test
scas
fwait
push
mov
adc
lcall
daa
push
lods
cmpsl
xor
stos
xor
notb
mov
stos
pop
push
and
roll
ffree
sbb
cmp
sbb
mov
stos
imul
inc
and
sub
jnp
push
pop
gs
lahf
nop
inc
push
loope
xchg
loope
lahf
xor
jg
push
add
std
test
mov
pushl
cmp
and
jg
iret
xor
les
mov
insl
jg
and
in
cmp
jo
mov
out
ud1
stos
sahf
icebp
pop
sbb
xchg
out
orl
lcall
mov
nop
sbb
mov
jae
mov
or
es
out
push
sbb
pushl
ds
in
leave
fcmovbe
adc
mov
xchg
inc
nop
sti
in
out
add
imul
lcall
loopne
mov
pop
in
push
fwait
int
cmp
sarb
out
add
inc
std
pushl
push
cld
jp
sbb
incl
inc
and
jge
data16
cwtl
nop
add
jmp
xor
repnz
cmc
dec
popa
vmwrite
mov
jg
pushl
push
in
decl
and
mov
int3
out
xchg
adc
out
dec
iret
movsl
cwtl
mov
jle
ret
inc
cs
shrb
lock
pop
cmp
lret
pop
jecxz
adc
js
lret
stos
xchg
jb
jge
xchg
ljmp
insb
push
test
mov
pop
push
or
and
xchg
leave
push
xchg
push
fs
jmp
pop
sub
cwtl
jnp
rcl
ljmp
ljmp
out
repnz
sbb
in
sbb
icebp
xchg
add
lock
add
call
jmp
into
adc
mov
jle
sbb
cmpsb
mov
dec
push
push
mov
incl
movsb
and
pop
or
inc
jbe
divl
or
jmp
inc
arpl
pushl
je
xor
push
insl
gs
add
fs
xchg
aam
movsl
loop
es
push
shll
loope
das
add
pop
adc
imul
idivl
pop
aam
mov
lret
rcll
adc
notl
and
cli
mov
movsl
pop
cs
cmp
pop
mov
sbb
ljmp
pop
adc
lcall
into
add
loopne
add
jle
out
ret
ljmp
pop
insb
fs
movsl
scas
mov
pop
sbb
pop
add
or
cmp
lcall
lods
jno
inc
cld
mov
mov
jbe
loope
or
loope
add
decl
movsb
push
cmp
adc
sbb
mov
sbb
add
sub
push
leave
fsubs
adc
call
sti
clc
mov
xchg
data16
sbb
jge
xchg
scas
into
femms
ja
adc
minss
enter
push
inc
mov
sbb
lcall
stos
and
in
div
cmp
cli
sbb
ja
xor
stc
aad
inc
rcl
fists
fisubrl
push
cld
sbb
inc
mov
call
dec
outsl
es
call
push
ss
int
lock
je
fdivl
push
insl
ja
ret
jmp
mov
clc
arpl
call
sub
cmpsb
scas
adc
lcall
sbb
sub
inc
sub
push
push
adc
adc
push
ljmp
mov
adc
or
insb
fadd
sbb
je
aas
mov
jbe
mov
jl
lcall
mov
popf
mov
xlat
pop
cmp
push
mov
test
jge
dec
test
test
outsl
pop
pop
add
ret
jmp
int3
mov
lods
shll
push
dec
jmp
push
cmp
sub
mov
mov
lea
lds
lods
and
push
sub
lcall
xchg
mov
stos
inc
pushf
xchg
ret
inc
sbb
out
loop
cmp
jmp
add
scas
stos
divb
pop
enter
lock
inc
dec
jp
jle
adcl
bnd
jmp
shrb
inc
mov
add
mov
mulb
mov
or
ljmp
mov
movsb
and
sub
pop
loop
sahf
adc
repz
sub
dec
ljmp
out
mov
outsb
movsb
dec
icebp
sbb
mov
rol
stc
fsts
int
and
push
mov
hlt
jge
jg
pop
data16
mov
mov
addr16
movsb
mov
sbbl
call
sbb
pushf
pop
mov
ds
pop
or
xchg
cwtl
jne
aad
loope
repz
xchg
fdivr
jmp
add
out
mov
pop
mov
rcrb
or
test
lods
sbb
jg
decl
inc
and
das
cmp
stos
roll
and
add
test
sbb
pop
xlat
pushl
and
ja
push
scas
mov
outsl
das
xor
push
push
dec
sub
pop
and
fnstenv
incl
dec
sbb
ljmp
in
mov
inc
popa
pop
and
pushl
icebp
push
je
mov
mov
xlat
or
mov
dec
xor
add
iret
call
lahf
mov
outsl
outsb
xchg
ret
pushf
adc
loope
xor
cmc
xchg
mov
push
lea
ljmp
jae
icebp
repnz
mov
jb
lods
inc
jns
add
xor
ljmp
xor
mov
jp
test
sahf
mov
bound
mov
decl
imul
push
push
aam
loopne
or
xlat
sub
ficoms
ficoms
movsb
cmp
jns
das
call
pop
add
out
sbb
mov
cwtl
cmpsl
in
addr16
push
imul
cltd
sub
std
or
xchg
push
inc
cmp
lret
roll
lcall
mov
in
out
into
jmp
inc
into
cmp
jo
pop
and
xor
loopne
sub
mov
and
lcall
xchg
mov
clc
mov
adc
cmp
bound
mov
mov
pop
incb
ss
mov
popa
cmp
movsb
xor
push
sbb
adc
call
adc
lret
inc
jle
sub
outsl
xor
icebp
jb
xor
das
push
loopne
lahf
int
pop
xchg
fsubl
out
shlb
mov
js
ret
into
sbb
shrb
mov
cmp
mov
push
aaa
sub
aad
arpl
pop
jge
call
xor
dec
clc
inc
jmp
push
mov
rorb
mov
mov
xchg
stc
and
les
inc
into
shll
sub
add
mov
mov
jne
jmp
sbb
mov
xchg
repnz
push
ret
loopne
cltd
out
cs
jmp
xor
fcmovbe
out
dec
adc
mov
fnstenv
jnp
pop
fidivrs
push
inc
loop
inc
pop
cmp
leave
ds
imul
enter
es
and
aad
idivb
xchg
mov
mov
lcall
sarl
pop
lods
jo
sub
or
jne
mov
repnz
jg
js
xlat
jl
pop
mov
mov
pop
jle
mov
sbb
int3
pop
xchg
mov
sbb
insl
cli
cmc
pop
shlb
out
out
rcll
sbb
ljmp
ss
jae
push
test
test
xchg
jl
and
dec
jne
sti
mov
jmp
or
inc
shr
add
xchg
push
in
xchg
sarl
jge
int3
stos
xor
insb
js
aad
aad
inc
jge
mov
and
subl
pusha
and
fcmovne
jp
push
insb
jne
and
out
popf
dec
dec
les
sti
cmc
dec
cmc
test
adc
cmpsb
cmp
icebp
pusha
fcmovb
stc
out
sahf
xchg
adc
stos
jmp
mov
mov
shlb
repnz
jge
fldenv
jo
jmp
pop
inc
adc
cmp
inc
cmp
bswap
dec
divl
gs
mov
mov
addr16
cli
imul
jmp
xchg
xlat
or
sub
mov
sbb
loope
xchg
rcrl
xchg
or
js
pushl
call
mov
mov
stos
fildll
or
mov
mov
mov
cld
rcll
testb
ss
sahf
and
cmp
cmp
movsl
cmp
sub
cmp
jae
sbb
jmp
es
jb
out
pusha
test
popf
rcll
cli
add
cmp
incl
ljmp
add
incl
add
ss
sbb
cmp
bound
mov
push
push
ret
cmp
lcall
pop
test
popl
cwtl
push
add
in
sub
imul
sahf
pushl
jbe
mov
cmpsl
sub
divb
popf
imul
adc
aas
inc
or
loope
sub
decl
mov
loop
adc
fadd
dec
xchg
sub
add
xlat
out
lcall
push
lret
sbb
add
add
loop
adc
add
mov
out
fsubl
dec
dec
xchg
cmc
xchg
shll
xchg
sbb
jbe
jecxz
xchg
jmp
mov
hlt
call
ror
dec
arpl
jae
jecxz
movsl
cmp
xchg
mov
lods
jmp
mov
aaa
scas
out
out
cld
jae
sbb
repnz
or
push
xor
sub
jle
or
in
fucomp
pop
out
js
push
andb
jno
inc
mov
es
cmp
stos
hlt
js
mov
jo
jp
mov
sbb
cmp
aas
in
jp
pop
push
sti
inc
mov
fmul
inc
xchg
xorb
addb
roll
push
push
jmp
mov
mov
dec
push
movsb
test
pusha
out
int
ljmp
add
lret
mov
addl
dec
sub
pusha
jmp
pop
decl
clc
pop
mov
pop
lcall
leave
lods
test
test
xlat
pop
loope
stc
inc
int
fcoml
std
decl
aad
jmp
pop
sbb
lcall
sub
int
mov
loope
decl
xor
fs
inc
mov
sbb
stos
jo
sub
aas
orl
mov
test
std
pop
call
cmp
cld
add
inc
js
jnp
pop
push
fisttps
shlb
clc
adc
jno
pop
jnp
lock
mov
dec
mov
pop
fistpl
ljmp
test
jecxz
lods
mov
jns
leave
xor
push
pop
jg
mov
daa
hlt
sbb
dec
xchg
mov
es
sbb
arpl
ud2
add
icebp
sti
cli
mov
jo
xchg
shlb
enter
fs
mov
lds
add
push
cwtl
incl
stc
cmp
decb
xor
data16
jl
repnz
lods
mov
add
push
adc
pop
fcoml
scas
xor
movsb
mov
ss
fistpl
mov
inc
mov
pop
xchg
decl
pop
push
fmull
mov
je
cmp
sub
and
xor
and
pushl
addr16
fcmovnbe
aaa
jns
mov
gs
adc
inc
mov
aad
mov
incl
pusha
out
enter
jo
push
pop
pop
mov
cmc
push
ja
addr16
xchg
ljmp
dec
inc
movsl
nop
out
pop
fmul
mov
lret
lcall
fdivs
imul
sub
pushl
in
inc
jle
movsb
mov
lret
stos
jl
xchg
outsb
and
xchg
pop
mov
fld
lods
jmp
int3
or
stos
arpl
hlt
push
push
das
or
mov
rol
icebp
lock
pusha
fdivrs
out
mov
mov
inc
inc
int
imul
mov
cli
repnz
call
repnz
jno
je
dec
mov
int
lcall
into
jo
add
out
call
fcomp
push
sub
adc
insl
jbe
mov
and
mov
dec
mov
incl
cli
mov
daa
lds
subl
ljmp
pop
sub
jmp
pushl
aad
loopne
subl
punpckhwd
add
imul
incb
lcall
push
cmc
xchg
add
dec
daa
lcall
pop
adc
jbe
sahf
sbb
jmp
add
sub
incl
into
sbb
xor
cmpsb
out
sub
cmp
lcall
leave
cmp
mov
fcompl
add
in
testb
imul
pushl
or
xor
lret
stos
adc
lcall
fcoml
jge
cmp
mov
cld
push
push
leave
cmp
add
pusha
sti
call
cmp
jne
jecxz
outsl
sbb
inc
stos
dec
cmp
cmpsl
inc
dec
arpl
loop
or
pop
or
sar
out
mov
in
loop
or
push
cs
pop
xor
nop
shr
loope
xchg
dec
and
xlat
sti
pop
push
je
decl
cmpsb
ficompl
adc
xchg
xchg
inc
insb
subl
inc
xchg
lcall
adc
mov
jns
pop
add
jp
jo
sub
imul
jmp
aaa
mov
xor
or
dec
or
fidivrs
cwtl
or
int
dec
decl
dec
loopne
push
inc
addr16
scas
sub
test
jge
xor
shrb
jmp
lret
cli
sbb
xor
xor
pop
cmp
adc
lret
incl
test
push
jecxz
cmpsb
orb
sub
popa
pop
cmp
mov
lcall
sub
add
or
ja
ret
into
jge
mov
cmp
cmp
incl
adc
push
ljmp
lcall
sbb
lcall
int3
jecxz
and
test
mov
sahf
jbe
xchg
jp
cmp
jg
ds
push
leave
mov
jp
int3
test
push
icebp
push
ds
add
jmp
mov
jae
lock
xchg
dec
lods
dec
sub
pop
jmp
mov
jne
or
imul
pop
imul
call
dec
push
mov
jo
push
mov
sbb
mov
pop
jnp,pn
aas
sub
in
cmp
out
pop
int3
lret
adcb
insb
cwtl
push
dec
fwait
fsub
sbb
xchg
scas
jl
mul
loopne
or
ret
arpl
sub
cmp
or
sub
loop
adc
addb
cmp
jo
lea
arpl
sbb
dec
push
push
push
scas
fsub
int3
jns
ret
add
les
shll
call
hlt
add
nop
mov
outsl
pop
mov
jmp
jae
cli
inc
add
push
mov
pop
shll
jns
cmp
mov
jmp
int3
mov
ss
shlb
cmp
mov
pop
into
in
xchg
jno
pop
incl
cmpsb
sub
std
daa
xchg
mov
outsl
sarb
cs
ja
scas
push
decl
cmp
cmp
inc
adc
or
mov
jle
sub
enter
jne
dec
decl
mov
jno
mov
jns
imul
shl
enter
add
mov
cmpb
out
je
pop
xchg
packuswb
loope
ficompl
outsl
addl
decl
rcr
inc
test
cmpsb
cmpsl
mov
outsb
ret
lcall
nop
std
inc
test
xlat
jmp
inc
sbb
cld
movsb
push
test
inc
cmp
aaa
or
mov
adc
jmp
iret
sbbb
shll
shrl
ret
mov
rorl
pop
pusha
test
dec
adc
lcall
xchg
roll
sbb
or
je
xor
mov
aaa
cmp
jle
push
addl
push
mov
jecxz
out
lods
inc
pop
add
lea
dec
cwtl
lcall
call
pop
or
cmpsl
mov
cwtl
imul
scas
jae
or
push
imul
ljmp
xchg
int3
lcall
and
sub
pop
jns
adc
pop
cmp
out
jmp
or
mov
divb
daa
aam
push
shll
in
inc
dec
outsb
xor
or
sti
fildll
or
decb
jecxz
adc
add
cmp
dec
mov
mov
sub
dec
call
pop
sub
fistps
decb
loopne
mov
sti
push
xor
dec
mov
das
push
popf
sub
jmp
inc
rclb
inc
push
and
mov
in
fldenv
jmp
dec
dec
pusha
or
lcall
test
bound
cmpsb
mov
dec
adc
lea
incl
stos
dec
jp
data16
add
mov
js
sbb
cli
sbb
adc
scas
leave
out
loopne
sti
push
lea
mov
push
cmpsl
iret
cmp
lret
loope
ljmp
addr16
adc
push
mov
je
test
rol
call
stos
stc
repz
fiaddl
dec
int
sub
cli
jno
lock
push
cmp
notb
jg
inc
ret
ret
mov
lcall
mov
xchg
jo
mov
mov
fiaddl
ds
cli
dec
push
sub
mov
sbb
loop
lods
pushw
mov
lods
push
mov
ret
inc
pop
or
ljmp
sub
out
cwtl
test
cs
cmp
adc
outsb
push
dec
cmp
push
cmp
or
nop
nop
lea
incl
push
dec
jnp
and
das
dec
sarl
leave
mov
sahf
sub
pop
shll
mov
xor
cmpsb
jg
push
loopne,pn
cld
push
or
test
push
xchg
sti
in
mov
pushf
or
jmp
jle
sub
cltd
popf
push
xor
push
inc
pop
repz
jle
fmulp
movsl
repnz
jmp
call
add
cmp
es
lahf
jg
pop
ret
jle
dec
inc
sub
lods
jae
adc
lcall
outsl
icebp
mov
pop
and
cmpsb
cs
adc
push
call
mov
jae
sbb
popa
iret
call
mov
jb
mov
pusha
shll
decl
ficoml
mov
test
dec
dec
daa
lods
mov
stos
inc
pop
jp
cmp
mov
imul
incl
mov
pop
movsb
sub
stc
push
dec
int3
mov
out
orl
and
jmp
push
std
mov
insb
or
idivl
pop
jecxz
lods
dec
cmp
insb
imul
lcall
push
mov
push
dec
cltd
push
fsts
adc
cmp
jb
jne
xor
mov
jge
jmp
mov
pop
aas
shrb
xchg
lds
mov
dec
call
push
mov
pop
jle
push
jne
std
cmc
clc
jo
jno
and
xor
mov
dec
cmp
sub
ljmp
cli
push
sub
or
andb
popa
jmp
pop
popa
dec
pusha
push
clc
adc
dec
into
fwait
fwait
mov
mov
int
lret
add
add
incl
add
ja
in
jge
adc
mov
idivb
sbb
inc
xor
scas
pop
xchg
outsb
imul
imul
push
sti
inc
mov
shl
adc
cmc
dec
mov
negb
test
cli
sbb
fldl
mov
mov
test
les
clc
cmp
sub
cmp
add
pop
push
fstpt
inc
movsl
push
jno
sub
fnsetpm(287
xlat
pop
mov
or
mov
lods
cltd
insl
pop
dec
mov
add
mov
mov
jmp
leave
dec
cmp
outsl
inc
test
xor
les
or
out
jg
or
mov
adc
nop
sbb
mov
fcoms
enter
or
out
ret
and
push
ljmp
jmp
sbb
cltd
add
out
adc
fimuls
add
js
ljmp
dec
jmp
dec
xor
jmp
bound
mov
sbb
pop
sbb
test
xchg
ja
rcll
push
stc
sub
iret
pushf
loopne
push
mov
pop
lock
or
add
pop
int
outsb
mov
mov
jo
decl
jl
loopne
call
mov
add
dec
inc
inc
mov
gs
adc
aaa
ljmp
mov
pop
lret
inc
in
push
add
inc
andl
mov
adc
adc
jge
lds
adc
mov
xchg
cmp
lret
cmc
mov
or
jmp
cmp
jns
push
mov
popf
inc
adc
mov
jns
push
mov
lret
xchg
xchg
into
je
aas
jle
lahf
pop
in
ja
cld
add
pop
or
lcall
insb
cmp
pop
lcall
xchg
dec
xchg
iret
push
and
std
fcomp
cs
adc
stc
or
shr
loope
add
jno
sbb
xlat
push
call
sarl
dec
xchg
loopne
decb
cmpsl
lods
sahf
or
sbb
cmpsl
sbb
add
frstor
add
adc
lret
mov
leave
test
xor
int3
sub
sbb
call
inc
pop
jno
enter
sbbl
or
loope
inc
push
mov
ret
pushl
ret
push
push
pusha
and
mov
and
or
push
mov
jmp
push
mov
xor
repnz
shll
adc
jmp
popf
push
cs
test
inc
dec
popf
dec
mov
enter
in
add
stos
scas
sbb
test
lods
xlat
inc
mov
xchg
call
retw
outsb
out
jl
daa
sub
mov
xlat
lahf
jns
sbb
push
std
xchg
in
andl
sub
sbb
pop
in
and
popa
jmp
aaa
sahf
in
dec
pop
movsl
mov
incl
dec
pop
orl
fimull
inc
adc
cmpsl
jns
xchg
movsb
testl
jge
aad
cmc
pop
ret
fldcw
movsl
ret
mov
negw
fmull
pushl
jae
push
stos
mov
aas
test
sbb
lods
push
test
mov
cli
mov
mov
ljmp
sbb
push
call
xchg
fsubr
jne
xchg
out
mov
xchg
jns
imul
mov
call
stos
cwtl
add
jb
fwait
push
out
repz
mov
outsl
lcall
shlb
push
in
leave
pop
sub
xchg
insb
mov
push
and
pusha
pop
jnp
jno
cmp
imul
inc
push
push
mov
outsl
call
sub
mov
fimuls
in
fdivs
and
xor
jns
pop
dec
int
pop
sub
xchg
ret
or
inc
aas
or
and
aam
scas
mov
inc
sub
jae
ss
popf
movl
cmpsb
adc
ljmp
cmp
lock
mov
shl
in
fidivrl
sub
cmp
jmp
sarl
imul
add
es
bound
ljmp
incl
out
pop
shll
stc
mov
xor
push
xor
mov
daa
jmp
pop
insb
call
adc
in
ljmp
xchg
arpl
dec
sub
or
ret
xor
in
cli
incl
mov
cltd
js
mov
aas
or
out
and
sub
flds
call
xchg
sub
inc
pusha
push
adc
push
inc
adc
jbe
syscall
arpl
lcall
push
inc
movsl
push
icebp
stos
jns
clc
xor
aad
push
fldl
out
lret
adc
popa
in
mov
xlat
jmp
das
or
dec
negl
std
xchg
cli
sub
pop
push
cwtl
push
out
xor
movsb
jp
push
dec
and
cmp
adc
fwait
in
pop
pop
jno
jnp,pt
jmp
fs
fidivl
push
push
mov
mov
push
and
mov
lcall
stos
outsl
test
sub
or
sar
mov
icebp
push
iret
sbb
sbbl
call
inc
popf
jmp
cli
push
dec
ljmp
jbe
out
in
pop
test
xchg
pop
or
mov
cmp
cmpsl
cli
mov
subb
push
imul
stc
rcr
inc
inc
into
jmp
lcall
popf
jae
idivb
sbb
aad
sti
bnd
fldcw
incl
dec
mov
jbe
scas
scas
flds
test
xchg
pushl
lret
mov
and
loope
mov
or
dec
incl
enter
jle
movsb
lds
jnp
pop
mov
in
xchg
in
hlt
loope
pop
sbb
mov
rorl
jg
and
aas
inc
dec
imul
jmp
les
shr
pop
aas
mov
mov
sbb
xchg
or
iret
mov
loope
popf
leave
jg
insb
iret
adc
mov
mov
cmc
sbb
popa
and
sbb
std
or
xor
pop
jne
cmpsb
xchg
stc
inc
repz
jmp
rcl
imul
dec
jb
adc
mov
mov
xchg
dec
pop
call
sbb
sub
pop
cltd
xchg
jno
mov
jno
nop
jns
push
push
mov
mov
pop
fidivl
fidivl
add
add
lods
or
fs
in
stc
int3
inc
mov
adc
xor
rolb
enter
mov
dec
pop
adc
lcall
xchg
pop
movsl
popa
and
rolb
int
les
cld
sub
adc
or
push
ret
xchg
and
push
jae
inc
inc
fsubrs
pop
xchg
lds
mov
push
jecxz
pushl
push
ret
jl
js
xlat
dec
cli
fbstp
cmp
xchg
ret
sbb
call
cld
sub
js
mov
mov
sub
inc
shl
xor
or
mov
test
jmp
out
adc
pushf
dec
inc
push
scas
int3
stos
call
std
mov
jge
dec
add
push
subb
sahf
arpl
int3
sbb
sub
cmp
add
mov
popf
dec
or
dec
add
pusha
jl
aaa
std
xor
inc
lahf
rol
imul
pusha
test
stc
add
stc
and
pop
les
movsb
aad
rcll
push
je
les
dec
jg
lcall
sub
push
adc
cld
in
xchg
jb
dec
fidivrs
inc
or
ja
or
jmp
or
mov
test
xor
pop
jnp
imul
cmp
pop
ds
mov
outsl
call
mov
xchg
jle
clc
movsb
addl
xor
psubsb
iret
pop
imul
dec
pop
les
outsb
orb
movsb
out
mov
cmp
out
cmpsl
add
aas
inc
aas
incl
xchg
push
sub
adcl
cmp
ja
or
add
enter
mov
ljmp
adc
adc
xchg
jmp
mov
jns
mulb
sbb
sub
inc
jp
in
mov
jl
xchg
inc
inc
jb
jne
mov
mov
jbe
in
dec
pop
in
mov
cli
test
sbb
jle
jb
lcall
or
push
ret
es
push
xorb
scas
ljmp
into
dec
popf
mov
lret
fildll
cltd
pushf
out
cli
push
jp
or
ljmp
xchg
test
adc
sti
loope
out
fisttps
pop
or
fistpll
ljmp
xor
lcall
sub
in
hlt
jle
jno
outsl
fisubs
push
fnstcw
cld
ljmp
mov
aas
jmp
out
xor
xchg
pop
sub
mov
mov
jge
cmp
ljmp
push
fnstenv
movsl
jnp
popf
lea
push
stc
fsubrl
adc
or
ds
cli
lret
mov
push
aaa
add
inc
cmpsl
loope
lea
dec
inc
mov
stc
sti
decl
cs
sub
lods
xchg
gs
inc
aad
dec
pop
xlat
lods
test
jle
inc
lret
mov
fildl
and
lock
mov
adc
icebp
lock
lcall
sbb
int3
xchg
xchg
loop
sbb
mov
mov
lret
push
addr16
decl
dec
dec
pop
sbb
add
jne
adc
sub
aam
pop
add
xchg
lcall
push
sub
mov
jnp
clc
shrl
inc
outsl
aas
pop
mov
pop
rorl
rcll
xor
jns
jmp
cld
xchg
loopne
adc
in
sarl
lret
sbb
xor
jmp
iret
clc
test
adc
sbb
test
outsb
dec
adc
push
add
mov
repz
lret
jmp
scas
jecxz
sbb
call
or
xchg
mov
fidivrl
test
mov
decl
jl
jbe
lods
and
mov
imul
jbe
fldenv
cwtl
dec
lcall
adc
inc
pop
mov
push
out
inc
inc
jmp
inc
pop
jns
cmpb
mov
sbb
loope
dec
fisubs
mov
sarl
pushw
push
push
mov
adc
mov
mov
aaa
or
or
subl
lock
or
repz
pop
ljmp
lods
inc
je
mov
int
js
shll
mov
cmpsb
enter
mov
xor
mov
pushl
movsb
mov
jle
jns
dec
fcompp
push
xchg
fidivs
cwtl
lret
stc
jle
pushf
out
mov
aaa
lods
lock
test
jo
mov
mov
push
sti
test
stc
dec
test
arpl
inc
sub
lods
xor
push
dec
cmp
and
jb
pop
pop
ret
cmp
xor
xchg
sbb
mov
iret
adc
mov
push
fistpll
jnp
add
into
xlat
call
and
pop
xchg
mov
and
pop
xchg
mov
xor
adc
lock
inc
xchg
sub
lcall
fistps
lret
adc
adc
push
and
inc
adc
cld
test
mov
incl
lea
and
int3
dec
xchg
jo
in
insb
int3
adc
or
stos
fwait
fs
jmp
dec
mov
inc
or
in
or
out
mov
repz
sub
mov
ljmp
lods
push
xor
cmp
cli
jg
dec
cmp
bound
pop
sarl
inc
push
in
push
push
rcll
xchg
test
xor
pop
dec
imul
fidivl
push
in
sbb
incl
sbb
stos
push
mov
or
cmp
dec
je
dec
sbb
mov
incl
mov
js
mov
lcall
lahf
lcall
mov
xchg
mov
cmp
or
ja
addr16
mov
addb
js
test
sub
or
lcall
dec
loope
mov
in
movsb
jb
inc
or
sahf
sub
orb
pop
add
shrb
decl
call
aam
sub
mov
cmovnp
lret
movsb
sub
dec
pop
xchg
int3
dec
push
in
mulps
or
sub
cwtl
dec
js
inc
push
ret
movsb
push
sub
lcall
add
mov
xchg
testb
push
dec
sub
cmpsb
das
pop
jae
test
call
xchg
or
jae
add
push
imul
mov
iret
xchg
das
ja
leave
cltd
jmp
inc
jg
or
pop
mov
enter
cs
sbb
ror
inc
incl
sub
adc
push
cmp
push
prefetcht2
arpl
xor
aam
jmp
inc
mov
push
sbb
jbe
jge
adc
jl
and
in
mov
ret
popa
or
decl
out
fistps
bound
push
cmp
pop
or
adc
outsl
test
sub
sbb
inc
cmp
loop
cld
shr
pop
lahf
jecxz
sarl
jmp
js
pop
popa
scas
dec
stos
daa
leave
loope
mov
mov
jo
and
add
jmp
pop
and
lret
je
into
popf
pop
pop
hlt
or
mov
push
fcomps
pushl
xchg
outsl
daa
insb
adc
pusha
in
jmp
bound
cmp
dec
cmp
in
mov
decl
mov
push
ja
or
mov
jnp
adc
test
sarl
jmp
ds
outsl
sbb
fs
push
and
pop
out
push
in
mov
mov
lcall
push
rcl
testl
dec
test
out
mov
sti
repnz
cld
pushl
jne
add
cmpb
jo
pop
and
push
cli
sub
sbb
call
sbb
fists
mov
jmp
lock
dec
test
xor
in
icebp
cmp
push
push
push
push
cld
cmc
push
lods
push
add
jbe
xchg
hlt
andl
push
dec
lods
loope
mov
call
jne
jo
lods
inc
add
pop
jmp
adc
fmulp
inc
into
dec
movb
adc
incl
xor
sbb
mov
mov
cmp
pop
das
mov
sub
in
test
inc
jmp
jb
mov
mov
and
push
es
dec
fbstp
dec
lods
popf
in
pushf
jns
lcall
frstor
leave
mov
repz
out
cld
sub
cld
dec
jbe
stos
sbbb
pushl
sbb
sub
daa
jle
mov
cwtl
xchg
out
cli
cmp
lods
cmp
add
pushl
mov
or
aad
insb
aas
sti
es
rclb
and
movsb
movsb
test
add
jne
fmull
call
je
sbb
jmp
adc
and
sub
pop
mov
sti
push
in
jmp
mov
dec
popf
imul
adc
mov
fsts
xlat
in
fsubrl
ljmp
pop
push
mov
fwait
sub
dec
pop
push
cmpsl
mov
cmpb
jge
mov
jmp
jns
jge
testb
mov
test
jl
js
std
cli
jp
cmp
mov
cld
push
jno
hlt
es
and
aam
push
pop
cmpsb
inc
mov
jl
repz
mov
cmpsl
dec
xchg
call
addb
int
mov
dec
leave
push
dec
lcall
jg
jle
imul
out
xchg
jge
push
in
dec
push
or
and
pushl
lahf
cltd
nopl
lret
lea
aam
and
pop
xlat
aad
or
decl
pop
mov
sub
aas
pop
movsb
push
push
jns
xchg
adc
jp
fnstcw
pop
cmp
xorl
imul
mov
outsl
add
inc
or
fimuls
cmc
xchg
or
js
jp
cmp
sbb
dec
inc
cwtl
cli
xor
loope
or
comiss
inc
cmpsb
call
mov
iret
mov
jno
and
and
adc
fisubrl
cmp
incl
lds
loope
test
or
mov
mov
jmp
lcall
mov
mov
sub
jae
inc
fs
add
test
add
cmp
push
hlt
jmp
pushf
outsb
adcl
sbb
ret
mov
push
xor
add
mov
pop
mov
pop
decl
sbb
xchg
cli
push
movsb
movsl
jle
pop
xchg
jno
in
lea
fstpt
push
das
pop
pusha
incl
push
outsb
rcl
mov
scas
sub
sbb
orl
into
lock
lea
imulb
cmp
subb
or
push
mov
sbb
fisubrl
lods
jmp
fwait
add
dec
xor
sbb
subb
divb
sbb
fidivrl
clc
fstps
loopne
jnp
call
inc
xchg
movsl
loope
addr16
in
loope
sbb
ret
repz
inc
xchg
ficoml
jmp
dec
popf
fcomps
into
xchg
pop
lods
sub
push
roll
es
lods
jbe
pop
jl
pop
jp
call
js
and
mov
sti
cmp
dec
xlat
dec
add
lods
mov
mov
jge
xchg
dec
push
aam
test
jle
addr16
iret
adc
and
fistl
cltd
popf
and
fcoml
call
ds
int3
aaa
mov
outsb
and
shll
loopne
lods
jae
popa
xchg
lcall
inc
xchg
aas
fcomp
pop
dec
xchg
cmpsl
push
out
rcrl
mov
rcll
sub
lcall
xor
jno
xchg
loop
int
mov
dec
inc
stc
cmp
or
push
inc
mov
call
mov
xor
iret
cld
mov
and
push
jecxz
add
cmp
popa
xchg
mov
shll
cmp
aam
add
insb
adc
or
and
das
xchg
dec
sbbl
testb
fsubr
inc
test
mov
mov
icebp
xchg
mov
test
push
jmp
sub
or
mov
inc
xchg
xor
gs
push
mov
das
jmp
cmp
sbb
mov
lret
pop
push
add
movsl
mov
leave
xchg
push
ja
jecxz
jo
and
movsb
mov
dec
mov
lcall
inc
pusha
jg
xor
movsb
push
mov
or
dec
mov
fcmovnu
scas
add
or
incl
inc
mov
stos
mov
int
mov
out
pushf
pop
outsl
leave
sbbb
jae
clc
movsb
shlb
out
jmp
adc
rcll
aad
cmc
ljmp
xchg
and
fwait
stos
mov
jmp
jge
cmc
and
push
pop
sbb
test
fbstp
sbb
mov
jns
push
add
ljmp
loop
in
cmp
sbb
xlat
jg
dec
mov
stos
pop
jmp
mov
dec
jns
shlb
mov
into
fidivs
fwait
mov
testl
adc
pop
pop
xchg
xor
fisubs
int
push
fmul
andb
aam
xor
idivb
les
adc
pushf
xlat
ds
sti
lret
pmulhuw
pop
ss
adc
add
out
jl
jo
add
dec
adc
jmp
push
popa
add
scas
jp
int3
and
sbb
or
in
xchg
xchg
hlt
js
pushl
or
or
rolb
cmpsl
ds
sub
xchg
mov
sub
lret
decl
subb
ss
adc
jge
pop
dec
and
leave
mov
insb
loopne
in
add
subb
pop
fcompl
ss
mov
fstpl
pushf
incl
mov
mov
rcl
lahf
xor
mov
dec
inc
bnd
sub
or
incl
outsl
xchg
cltd
pop
jae
push
jge
mov
je
mov
inc
es
outsb
xor
testl
push
outsl
mov
in
cmp
jle
test
iret
mov
lret
or
ljmp
xchg
dec
int
jle
bound
nop
rcr
jne
xchg
fldenv
mov
cmpsb
and
cli
lcall
pop
sbb
mov
dec
xchg
inc
vshufps
sbb
cmp
xchg
mov
out
addr16
adc
daa
mov
jmp
xchg
cmp
push
push
call
dec
icebp
rcr
iret
call
dec
cmp
jecxz
lea
in
adc
ja
inc
inc
xor
push
xchg
adc
repz
mov
mov
lods
shlb
cld
loopne
adc
xor
call
stos
shl
lods
ret
sbb
mov
lret
xor
enter
int3
add
pushl
aaa
jge
xor
cld
popf
mov
std
jo
dec
and
jmp
mov
jp
out
std
in
mov
adc
mov
dec
lods
xchg
incl
ret
addr16
dec
pop
jmp
xchg
adc
fsubs
ja
pusha
incl
jo
xchg
xchg
xor
enter
push
sti
add
sub
incl
in
push
inc
scas
inc
adc
fcomps
adc
int
cltd
add
pushl
mov
ds
loopnew
push
movsl
adc
dec
popa
ficompl
mov
mov
rclb
lods
push
cmp
adc
repz
call
jae
cli
fisubs
das
push
inc
jp
inc
imul
or
push
mov
in
in
mov
call
ret
movb
inc
rorb
xor
int3
jae
pop
mov
insl
mov
decl
add
lods
popa
add
jae
mov
dec
into
and
pop
sub
shrb
jmp
xchg
sub
jecxz
das
push
hlt
adc
jmp
and
mov
std
fmull
incl
dec
add
dec
jo
arpl
jnp
fisubl
or
mov
add
mov
push
mov
dec
adc
aaa
mov
push
dec
mov
push
xchg
mov
adc
out
lcall
lods
sub
mov
cmp
mov
pushf
push
in
call
mov
push
push
push
ja
adc
lods
call
in
into
mov
into
pushf
rorl
mov
cmpsl
mov
push
fldcw
popf
sub
leave
leave
jo
sub
incl
dec
test
push
mov
out
insl
adcb
and
jns
push
jno
call
sti
sub
or
idiv
sub
or
inc
xchg
shll
jbe
xchg
mov
int3
jmp
sub
leave
sbb
sub
cmp
mov
mov
jbe
or
mov
subl
lcall
test
and
repz
xchg
fdivrl
pushf
push
mov
add
dec
nop
and
std
shl
push
xchg
mov
xchg
std
push
or
jne
in
mov
fidivrl
and
push
lret
imul
or
mov
popa
mov
xor
dec
std
pushf
pop
rolb
cmp
xor
cmp
insb
pop
mov
mov
sub
jp
inc
fbld
or
and
jae
rclb
mov
outsb
rcrb
sub
pop
add
sub
incl
in
adc
push
jb
sbb
scas
fnstenv
repnz
mov
dec
stos
fidivs
ljmp
fnstsw
xor
loop
dec
xor
ret
xor
mov
mov
or
mov
iret
decl
dec
cmp
scas
cmpsb
mov
mov
pop
inc
push
lods
add
jns
mov
mov
cmp
sar
adc
es
dec
pcmpgtw
loopne
addr16
loop
fs
clc
or
jmp
jg
adc
out
pushf
adc
aad
jecxz
pop
aad
addr16
add
adc
nop
decl
jg
clc
fstps
xchg
ja
fistps
imul
lods
inc
stos
cltd
call
push
in
jae
ljmp
es
pop
dec
mov
int3
sahf
and
cld
jp
test
iret
je
popl
sarb
pushl
push
lcall
imull
outsb
outsl
jbe
pop
scas
and
dec
cmp
sbb
fmuls
iret
test
inc
in
dec
mov
adc
xchg
dec
push
ret
subl
cmpsb
inc
dec
jmp
test
jmp
fucomi
and
inc
mov
fmuls
mov
lahf
cmp
dec
push
mov
sbb
sbb
loopne
cli
jne
adc
call
jmp
inc
icebp
inc
inc
pop
dec
xchg
std
int
push
sti
das
rclb
mov
int3
xchg
int
add
lret
shl
or
stos
call
lcall
fimull
in
clc
jp
mov
mov
cmp
push
adc
call
mov
push
pop
imul
jmp
push
es
lock
mov
leave
ret
test
and
dec
scas
ljmp
sub
mov
decl
enter
repnz
xchg
pop
cmp
xchg
and
add
bound
inc
lahf
stos
in
sub
xor
jp
mov
mov
sbbl
incl
into
mov
leave
fistps
push
xchg
xor
andl
adc
aas
jle
sti
xor
out
xchg
loopne
mov
test
js
lods
mov
js
or
push
test
out
xchg
mov
mov
mov
cs
scas
int
rcrl
js
xorps
cld
call
jo
dec
in
ja
push
xor
sbb
mov
dec
std
test
ss
mov
dec
push
daa
push
out
jae
cmp
inc
jle
inc
dec
jns
sti
push
adc
pop
movl
pop
jmp
add
repnz
data16
cmp
cmp
sbb
xlat
cli
xchg
or
imul
decl
pop
or
lods
inc
andl
mov
or
icebp
jl
adc
movsb
imull
out
flds
and
ds
add
or
jne
sbb
jmp
and
dec
jmp
push
fs
scas
dec
jp
pop
mov
fmull
pushf
imul
aam
or
call
mov
pushf
lahf
femms
or
sti
jno
mov
xor
daa
hlt
add
movsl
cmp
decl
dec
push
andl
jl
hlt
push
add
test
mov
lcall
lds
into
jno
sbb
jbe
outsl
and
pop
adc
out
lods
sbb
lea
incl
mov
loopne
sub
adcb
decb
jl
test
gs
lahf
push
pop
pushl
xchg
mov
add
add
jb
inc
push
add
jo
jmp
iret
and
jle
lock
dec
ljmp
arpl
arpl
or
jmp
push
xor
mov
sub
cltd
pop
addr16
lock
mov
push
xchg
push
ret
pop
jns
push
sub
out
insl
dec
lcall
daa
in
pop
or
add
xchg
mov
or
cld
sub
sbb
into
lahf
adcb
mov
in
add
pop
cmp
and
add
lea
jmp
or
fsubp
xor
push
cmp
jo
sbb
pop
fimuls
loop
pushl
sbb
movsb
lock
adc
bound
scas
das
imul
jns
push
in
jl
dec
sub
movsl
loope
lods
lret
test
cmp
ficomps
push
inc
shrb
adc
push
dec
pop
cld
leave
int3
imul
push
sarb
and
das
loope
test
incl
jg
in
dec
fldt
aad
pushf
pop
mov
adc
sbb
lahf
mov
mov
lcall
in
mov
insl
xchg
fsub
or
cmp
mov
adcl
popa
imul
bound
xor
test
sub
adcl
lock
aaa
rcl
int
ljmp
jmp
std
test
out
sub
out
mov
adc
mov
fmuls
cmp
les
mov
add
fldt
aas
repz
xor
sub
jmp
pushf
sub
stos
out
dec
cmpsl
adc
pop
mov
xchg
or
and
sar
inc
stos
mov
jo
and
cli
lods
xchg
xchg
adc
jg
mov
filds
enter
jmp
sbb
or
clc
enter
mov
push
cmp
inc
jg
cmp
imul
push
enter
iret
stc
in
jmp
pop
fldt
adc
push
mov
jmp
sub
xchg
push
dec
jo
sbb
jae
lods
sbb
cld
std
sbb
jmp
mov
stos
aaa
mov
mov
push
mov
repz
aas
push
js
je
loop
mov
pop
push
out
lcall
int3
mov
gs
xchg
ss
sbb
cmp
cmp
movsl
enter
jg
jl
xor
loop
scas
out
cmc
call
and
jns
dec
repz
mov
incl
rep
push
ret
mov
sbb
push
jo
jl
lods
aad
jmp
pusha
xchg
addr16
inc
call
fcmovnu
movsb
sub
mov
popf
repnz
stos
shlb
imul
and
pop
adc
daa
call
insb
iret
push
in
aam
cmc
fldcw
push
js
dec
cmpsl
push
negl
xchg
dec
incl
mov
add
push
push
dec
push
scas
dec
xor
int
mov
pop
xchg
aas
mov
jmp
sti
orb
mul
out
sub
mov
sub
mov
dec
adc
ljmp
mov
pop
nop
mov
adcl
es
adc
push
insb
pop
fnstenv
mov
mov
jmp
mov
sub
dec
lret
gs
jle
mov
xor
adc
inc
ret
je
mov
bound
and
loope
cmp
je
js
sub
dec
or
jb
filds
dec
xchg
add
shlb
popa
out
hlt
inc
and
push
adc
mov
nop
nop
fdivr
aas
fisubl
dec
xchg
dec
loopne
lds
lods
mov
xchg
lods
mov
xchg
subl
cltd
ds
in
aas
out
call
or
test
xchg
push
fnstenv
lea
jae
pop
rcll
push
push
sub
dec
add
mov
sub
in
or
inc
mov
ljmp
icebp
cmpsb
data16
lcall
test
sysexit
rclb
pop
in
les
das
push
das
sub
das
push
jmp
jle
dec
in
subl
in
add
jecxz
lret
add
icebp
sarl
inc
decl
sub
push
pop
dec
jmp
mov
mov
pop
mov
out
aam
incl
push
or
sub
jne
call
or
inc
inc
cmp
ljmp
xor
push
clc
jmp
ret
inc
xchg
insb
scas
lcall
inc
jp
out
sub
incl
mov
iret
mov
cmp
mov
repz
sahf
jbe
xchg
pop
jno
decl
cmp
orb
or
xchg
ja
xchg
inc
push
in
test
fwait
incl
jge
rclb
mov
in
and
push
xchg
hlt
cs
xor
inc
xor
lcall
fdivrs
test
sbb
lret
pop
jmp
push
sarb
call
or
aaa
mov
dec
and
and
push
data16
sbb
enter
jmp
lds
sbb
mov
add
xor
or
les
jnp
push
addr16
es
push
movsl
or
ljmp
arpl
cmp
push
out
dec
cmp
testb
push
js
jecxz
sub
and
dec
insl
cli
cmp
daa
inc
mov
pop
pop
pshufw
mov
sub
shll
xchg
inc
repz
dec
bound
or
mov
cmp
insb
mov
popf
shll
jae
push
mov
outsb
mov
pop
in
xchg
xchg
movsl
adc
dec
inc
push
xchg
ss
push
stc
sbb
ljmp
out
shl
xor
jl
mov
dec
dec
cwtl
jo
cmpsb
pop
shll
roll
ret
jnp
xchg
pop
add
xchg
sub
pop
sub
cwtl
mov
ljmp
lcall
inc
cld
popf
lret
js
daa
imul
jae
cmp
insl
cmp
call
inc
sbb
xchg
dec
test
test
pop
jne
mov
mov
ret
jle
adc
jp
sub
mov
sbb
mov
shrl
push
cmp
pushl
jmp
lds
pusha
jno
cmpb
es
mov
xchg
jge
cli
mov
scas
jo
mov
or
fwait
sub
xchg
pop
shlb
xor
add
lds
popf
in
shl
call
inc
xorb
insb
xchg
fdivs
xchg
push
cwtl
imul
std
es
in
lcall
fistps
sub
jle
in
jle
cltd
inc
fimull
orl
mov
decl
sub
pshufw
ficoml
out
sub
jne
xchg
jecxz
xor
mov
cmp
and
daa
shlb
stos
into
jmp
dec
nop
cmpsb
pop
repz
fists
dec
vsqrtpd
ljmp
jae
pop
lahf
mov
sub
shll
sbb
imul
and
jmp
fdivr
push
mov
cmpsl
push
sub
lcall
mov
loopne
add
addr16
popa
addr16
jle
stos
xorb
and
fisubs
cmp
jg
clc
mov
lods
scas
dec
mov
push
fdivs
lea
push
call
stos
loopne
das
sarl
in
insb
imul
cwtl
in
clc
movsl
mov
imul
xchg
fsubl
mov
outsb
pop
fsts
ljmp
ret
pop
mov
insl
lods
dec
adcb
insl
lcall
xor
push
adc
incl
repz
jle
out
fsubrs
push
test
xorl
mov
push
incl
in
fwait
hlt
xchg
pop
enter
mov
inc
push
in
push
mov
sub
jne
sub
adc
dec
mov
sti
shl
cmp
aad
mov
lret
adcl
ja
adc
jmp
jle
dec
mov
sub
sbb
pcmpeqb
push
lds
pusha
leave
pop
dec
sahf
sbb
imul
push
cwtl
dec
sbb
or
sbbl
repnz
mov
lcall
push
xchg
mov
jge
mov
cs
cld
lods
addr16
adc
aam
push
pop
adc
bound
mov
cli
fcoml
frstor
fs
shrl
sbb
or
data16
rep
in
orl
enter
inc
mov
aad
mov
xor
mov
leave
xchg
out
adc
mov
and
jns
or
cld
stos
test
loope
scas
sarl
into
jl
sbb
loopne
int3
mov
es
call
jge
int3
inc
push
dec
xor
xor
jp
sbb
and
cmp
movsl
out
push
mov
mov
hlt
fisubl
dec
jnp,pn
stc
mov
je
data16
push
add
fcoms
cmp
mov
pop
gs
mov
push
push
and
das
fcoml
ds
pop
ret
insb
incl
lods
dec
mov
es
clc
aad
dec
les
movsb
cmpsb
or
testb
and
decl
mov
enter
scas
call
jl
xlat
lock
rorl
pushl
xor
jge
out
and
inc
mov
mov
push
jp
std
in
dec
mov
dec
or
call
ljmp
aas
pop
xchg
or
mov
dec
and
push
fidivs
loope
push
sbbb
decl
repz
test
inc
and
xor
push
gs
ficompl
ljmp
gs
xchg
out
jle
testl
sbbb
daa
dec
sbb
adcl
decl
cwtl
or
sub
xchg
xor
sahf
inc
mov
jge
push
add
incl
movsb
ficompl
jge
ds
mov
sbb
mov
adc
pop
dec
pop
jne
lcall
pop
rcrl
ljmp
lds
gs
mov
mov
fsubl
adc
popa
adc
inc
sbb
xor
pushf
sti
inc
sbb
dec
daa
call
push
ds
mov
out
cmp
jbe
push
aam
mov
xchg
shll
and
inc
cmpsl
loopne
xchg
es
pop
pand
inc
add
cwtl
jl
xor
push
fisttpl
sti
mov
jmp
imul
out
cmpsl
xchg
pop
jne
aas
or
pop
aas
cmp
mov
arpl
sbb
movsl
pop
xchg
adc
test
jg
and
lcall
or
shr
sub
sub
int3
and
stos
out
fs
xlat
insb
fadds
call
cmpsb
jo
dec
jbe
adc
test
mov
jbe
outsl
mov
roll
addr16
jge
jnp
sub
nop
aaa
pop
aas
xor
inc
pusha
cltd
or
popf
cmp
push
repnz
ds
jne
push
sarb
data16
divb
mov
arpl
jne
pop
inc
and
jns
jle
sbb
fnclex
mov
pop
fiaddl
pop
ds
aam
sbb
or
repz
xor
call
dec
sub
test
lret
sbb
pop
inc
ds
je
cmp
inc
push
frstor
push
mov
insb
out
shlb
push
cmpl
fimull
sub
jl
jns
adc
cmp
in
ljmp
push
stos
xchg
lods
mov
enter
dec
mov
dec
pop
or
aas
push
in
mov
aam
call
lcall
mov
lahf
out
xchg
imul
mov
out
mov
xchg
sbb
pushl
jne
xor
gs
mov
mov
dec
sub
std
sub
cmpsl
cmp
mov
call
icebp
enter
cmp
test
fdivrl
mov
pop
cmc
or
jbe
test
dec
call
in
stos
xchg
push
loope
popf
push
and
pop
cmp
movsb
lods
add
jecxz
shlb
outsl
sbb
push
int3
push
pop
inc
imulb
sbb
shlb
push
pop
xor
cmpsb
scas
pop
push
orb
arpl
jnp
cwtl
push
sti
lock
out
sbb
rolb
jle
mov
xchg
xor
enter
push
repnz
imul
pop
stos
sub
lahf
mov
shlb
xchg
lock
call
in
rcr
out
sti
and
mov
fildl
mov
push
mov
test
cmp
repnz
sbb
pop
jl
lock
das
push
outsl
xchg
jae
mov
pushl
or
jo
push
sbb
sub
add
fnstenv
js
addr16
call
stos
aad
cmp
decl
mov
mulb
pop
js
and
pop
push
pop
jg
cmp
lahf
mov
mov
mov
iret
pop
outsl
mov
jns
data16
mov
movntps
out
imul
icebp
cmp
stos
fcmovu
out
mov
pusha
call
rcll
mov
rolb
insb
cmp
test
pushl
repz
sbb
loope
movsb
test
scas
ret
stos
xchg
push
daa
xchg
decl
xchg
inc
cmp
in
enter
jno
adc
xor
rcl
sbb
jne
test
ret
rcl
xchg
ljmp
adc
pop
adcl
subb
adc
xchg
sub
inc
insl
in
call
mov
loope
icebp
mov
aas
inc
push
cwtl
andl
jge
cmp
jg
loop
das
lret
or
push
pushl
sub
sub
pop
or
dec
shll
fwait
out
insl
clc
mull
mov
lods
inc
mov
adc
jmp
mov
rorl
jmp
fsubrp
insl
mov
push
or
call
mov
test
push
dec
insl
cmp
je
hlt
jno
gs
adc
out
xchg
xor
mov
xchg
inc
mov
fs
or
enter
inc
cs
or
ljmp
mov
mov
mov
mov
sub
scas
fwait
xlat
adc
jmp
ret
and
mov
outsb
xchg
or
je
cli
es
mov
fisubs
cld
cmp
inc
sbb
push
dec
cmp
push
aas
add
cmp
cmp
call
clc
or
ja
xor
sub
je
cltd
arpl
ret
hlt
dec
in
mov
mov
sub
pusha
jno
aad
out
xor
mov
push
pop
cmp
inc
xchg
int3
stc
jmp
outsb
repnz
xchg
repnz
aad
movsb
cld
cmc
or
lods
imul
ljmp
lcall
mov
xor
push
fsub
arpl
push
or
lret
fdivrp
jmp
xchg
aas
sarl
dec
xor
mov
mov
mov
cmpsl
jns
mov
popa
adc
add
push
incl
in
out
xchg
add
mov
idiv
cltd
and
insb
dec
xor
jmp
imul
mov
dec
mov
test
mov
sahf
decl
or
and
rol
push
sti
shld
scas
push
xor
out
inc
movsb
adc
xchg
dec
push
pop
inc
adc
in
out
enter
jns
shrb
dec
pop
gs
imul
jmp
or
test
cmp
call
push
fsubs
out
inc
lods
cmp
jns
sbb
pushl
jo
lods
mov
or
cmp
jge
xorl
mov
pop
fidivl
mov
inc
jp
ja
data16
mov
xchg
xlat
lods
mov
push
xor
daa
pop
rcrb
daa
sbb
pushl
sub
jnp
cmp
inc
jo
call
filds
sub
ljmp
lcall
clc
sbb
cltd
sub
lods
jl
inc
mov
dec
repnz
and
in
xor
pop
pop
add
dec
mov
mov
icebp
cmp
xor
in
sbb
push
sbb
sbb
mov
repnz
mov
or
lcall
dec
in
je
mov
inc
cmpsl
aas
rcrl
add
ret
mov
sbbl
loope
pop
fists
push
rcrb
ret
mov
stos
stc
push
lcall
jle
pop
cld
push
sub
pop
sbb
sbb
js
aaa
xlat
add
dec
rorl
mov
decl
push
punpckldq
cld
add
or
lods
orb
mov
xchg
aam
decl
shr
imul
outsb
adc
rolw
cmpsb
mov
notb
test
jmp
and
push
jle
ja
dec
js
pusha
or
mov
sub
inc
lea
xor
call
push
pop
adc
push
pop
fwait
inc
xchg
imul
cmpsb
fisttpl
pushl
scas
enter
jmp
cmp
mov
adc
or
bound
xlat
adc
into
in
mov
call
push
or
sbb
rcrb
xchg
xlat
mov
add
aas
xor
ja
lcall
je
adc
xchg
push
sbb
pushl
dec
cmc
out
pop
or
scas
int3
ret
lret
call
push
sub
cmp
cmp
adc
mov
xchg
xor
ljmp
icebp
lret
aaa
xchg
jp
dec
push
push
fidivrl
sbb
es
adc
cmp
incl
sahf
insl
cmpsb
xchg
mov
or
loopne
fs
sti
mov
push
and
push
dec
repnz
lret
mov
dec
pop
xor
lea
lock
push
cmp
test
dec
push
or
xlat
push
sahf
inc
daa
fcmovbe
add
cmp
push
sbb
jae
jmp
out
shll
push
ds
sbbb
mov
and
sti
dec
inc
jecxz
fisubrs
incl
or
xor
jmp
sarl
fmul
fwait
mov
sub
jae
and
loope
or
pop
call
xchg
sub
and
adc
in
scas
push
mov
sahf
mov
decl
mov
pop
xchg
push
rsqrtps
addl
stos
xchg
jle
or
cmp
jmp
mov
call
mov
jno
adcl
dec
call
xor
xchg
leave
andb
push
push
jnp
arpl
inc
or
xor
jmp
in
sbbl
daa
aam
leave
push
inc
shll
subb
out
cmp
incl
clc
adc
or
ret
cmp
fstpt
stc
mov
clc
add
sahf
call
and
insb
xlat
addr16
cld
jl
inc
jae
add
mov
jmp
inc
and
dec
add
divb
cmp
gs
sbb
or
sahf
aam
ja
push
shr
les
decl
xor
jmp
xor
test
push
xchg
stos
and
sahf
xor
xorb
hlt
rorb
fcmove
mov
jmp
mov
mov
mov
pop
cmp
mov
mov
inc
imul
nop
nop
sub
and
or
push
nop
test
out
sub
incl
or
in
inc
adc
push
add
mov
imul
inc
mov
call
stos
jp
jmp
cmc
mov
mov
mov
inc
call
lock
dec
cmpb
fcoms
xor
in
cwtl
or
sbb
std
sbb
int3
jg
jl
push
push
or
mov
cmp
call
call
xchg
cmp
adc
iret
inc
sbb
pushf
pop
rcrl
dec
cld
cs
call
in
dec
mov
jae
mov
leave
jne
pop
cmp
inc
xchg
pop
xchg
jmp
inc
sub
out
push
cmpsb
out
stc
push
push
das
mov
daa
ret
sbb
lcall
push
out
mov
scas
jb
and
jmp
xor
leave
xlat
mov
mov
fldt
ss
mov
ja
rcr
js
pop
xor
adc
imul
pop
push
jbe
in
mov
xor
lds
jmp
push
push
in
mov
sub
jp
adc
or
pushl
inc
sbb
popa
push
movsb
xchg
pop
xchg
jp
scas
nop
out
cmp
ljmp
clc
ja
inc
mov
add
repnz
daa
movsl
outsb
mov
pop
jmp
stos
je
fadds
jmp
cs
dec
or
xchg
fchs
xor
inc
sub
imull
push
out
mov
xchg
ljmp
add
stos
popl
cmp
push
pop
repnz
push
rorb
dec
cmp
incl
push
xchg
dec
mov
inc
pop
mov
jb
xchg
rcrl
lret
xor
mov
jp
ljmp
pusha
addr16
les
jmp
scas
pop
mov
fldl
push
xchg
sbb
jmp
add
mov
ljmp
mov
sub
mov
stos
jmp
mov
mov
pop
adc
push
add
stos
out
stc
inc
lcall
call
dec
adc
andl
ja
mov
into
pop
dec
xor
test
cmp
adc
cmc
cltd
repz
cld
sbb
xchg
iret
test
test
xchg
push
outsl
clc
xor
push
sbb
xor
pop
xchg
inc
jnp
pop
push
inc
into
rorl
fs
adc
test
pushl
push
cmpsl
sbb
ret
rorb
xchg
fistpll
hlt
xor
cs
adc
incl
push
push
xchg
pop
adc
dec
fistps
cmp
int
mov
cmpsb
imul
xchg
inc
scas
jo
fmuls
push
mov
ds
les
daa
icebp
sub
mov
ljmp
les
mov
je
xchg
leave
in
stc
test
mov
cwtl
in
adc
jo
mov
leave
bound
les
in
xchg
cmp
mov
and
cli
adc
arpl
sbb
push
iret
sar
and
jecxz
nop
cmp
stos
loop
cmp
xchg
push
xor
lds
sahf
cld
scas
std
lcall
jbe
adc
or
mov
out
mov
xchg
mov
mov
add
jmp
cmc
and
fildll
cmp
pop
sub
ds
cli
mov
mov
sbb
xor
hlt
sahf
stos
lock
pushf
ret
mov
add
arpl
jmp
data16
xor
ja
addr16
movsl
stos
aaa
sub
sbb
mov
aas
out
jmp
fs
adc
adc
mov
jle
lcall
push
push
sbb
clc
xchg
inc
movsb
pop
lcall
jo
test
adcl
xchg
or
pop
jns
call
add
xor
jbe
sub
xchg
daa
xchg
mov
mov
lds
jmp
frstor
adc
pop
lahf
and
test
mov
mov
leave
pop
ljmp
lcall
aaa
test
fucomp
and
andb
xchg
jnp
or
popa
jno
data16
mov
rcll
mov
cli
push
test
or
data16
out
in
test
shrl
pushl
clc
insl
test
and
add
imul
stos
shll
push
push
xor
pop
pushl
out
lret
sarl
mov
push
xor
cli
jp
jbe
iret
shl
incl
adc
pop
push
cs
xchg
ljmp
pop
inc
push
mov
cli
movsb
out
jmp
inc
rcrl
push
cmp
in
sub
xchg
xor
arpl
int3
push
pop
lret
add
cmpsb
pushl
imul
ror
cmp
push
mov
and
xchg
xor
xchg
cmp
ds
lcall
and
push
xchg
testb
scas
push
mov
xchg
xchg
push
lahf
push
incl
cmp
ret
cmc
sahf
sub
inc
lods
stos
xor
mov
push
lahf
push
sbbb
lcall
or
out
push
stos
cmp
sahf
aad
icebp
lods
ljmp
bound
and
mov
call
inc
and
jnp
iret
sub
sub
popa
push
loope
cmp
adc
mov
dec
fcmovne
inc
mov
insb
hlt
ljmp
mov
addr16
mov
xchg
xchg
int
pop
ss
push
push
loope
mov
ds
pop
leave
jne
jb
jne
jns
rcll
lock
aad
dec
ljmp
xchg
mov
hlt
incb
mov
inc
push
clc
sbb
jmp
pop
ljmp
popf
xchg
mov
int3
and
repnz
sub
cmc
sbb
decl
shrb
stos
negb
dec
pop
outsl
fcmovu
into
or
push
in
inc
mov
inc
ja
inc
jne
popa
dec
sti
sub
xor
inc
mov
movsl
xchg
push
jle
jl
clc
stos
adc
jno
pop
ljmp
in
sbb
cmpps
dec
ret
mov
rcll
sahf
cmp
adc
push
cmp
lcall
ja
mov
out
mov
cmc
scas
mov
pushl
shl
pop
shlb
add
jmp
into
mov
dec
stos
jmp
bound
shr
xor
xchg
loope
arpl
inc
sub
jmp
into
push
inc
xor
scas
lea
jno
in
fs
sub
mov
mov
add
cmp
and
std
test
pop
add
in
adc
and
xchg
xchg
in
sub
sub
fcomp
xchg
js
dec
mov
cld
add
incl
pop
jns
out
push
dec
or
rcll
fildll
mov
imul
push
cmp
push
adc
hlt
out
xor
in
rolb
and
sbb
insb
dec
mov
sub
ljmp
repnz
push
mov
pop
fbstp
xchg
aaa
mov
dec
xor
push
movsl
insb
ja
incl
test
jp
sahf
push
cmp
jnp
adc
into
aaa
fstpt
mov
int3
or
sbb
sub
pushl
out
jl
adc
pop
mov
push
loop
test
jle
daa
popf
and
mov
adc
adc
ficoml
sbb
cs
sub
lahf
mov
adc
mov
add
icebp
cmp
imul
call
call
arpl
cwtl
imul
mov
in
push
xchg
pop
lret
es
jmp
daa
add
push
fs
cmp
xor
iret
es
pop
repz
xchg
cmc
or
mov
mov
or
cmp
adc
push
cli
dec
loopne
xchg
xor
mov
cmp
jb
cwtl
adc
xor
lret
sub
clc
ret
popf
aas
adc
mov
jb
in
inc
inc
in
lea
pop
mov
shll
js
ja
push
mov
aas
pop
push
jle
dec
insb
repz
add
out
xor
mov
adc
cmpsb
fldt
cmpsl
pop
adc
adc
mov
adc
pop
jg
pop
mov
or
push
ljmp
popa
hlt
pop
jmp
scas
test
push
cwtl
jmp
outsb
jl
lret
mov
push
cmpsb
ljmp
lcall
pop
rcr
push
imul
fwait
xchg
and
push
out
mov
loop
xor
sar
daa
sbb
lds
incl
add
out
sar
cwtl
push
pop
int3
sub
ja
ds
sbbb
aad
or
std
jge
sbb
fadds
int
push
hlt
adc
insl
in
decb
push
cltd
out
cmp
jmp
and
sti
imul
int3
iret
inc
icebp
jo
lcall
and
adc
cmp
cli
pusha
dec
das
pop
push
test
adc
mov
fistps
inc
cmp
ljmp
inc
push
add
ret
push
jmp
mov
sub
pop
adc
in
and
mov
incl
inc
testl
pop
pop
lret
test
fsubrs
loopne
aas
movsl
es
cs
incl
lahf
call
loope
mov
lahf
cmp
inc
or
in
mov
sub
cli
out
repz
xchg
adc
fucomip
inc
std
out
pop
fisttpll
out
and
outsb
imul
in
mov
les
mov
or
outsb
cwtl
and
dec
xor
lods
adc
add
ljmp
xor
adc
scas
mov
sub
xor
xor
inc
inc
pop
imul
jmp
push
mov
fucomip
xchg
inc
fisubs
push
jg
jg
stos
or
dec
dec
xchg
insl
xor
inc
add
jmp
movsl
or
or
leave
fwait
cmpsl
add
sbb
mov
fisttpl
das
incl
or
sub
fidivrl
xor
or
scas
out
adc
adc
dec
adc
add
pop
mov
imul
mov
out
push
dec
sti
jmp
jno
xor
xlat
emms
sbb
add
push
dec
les
out
es
pushl
pop
pop
adcb
sub
mov
mov
pop
jmp
fsubrs
sbb
or
incl
insb
ror
adc
adc
mov
cmp
or
loope
and
call
sbb
in
jecxz
das
sbb
orb
ret
cli
xchg
dec
mov
ljmp
cmp
in
idivb
je
movl
mov
mov
xchg
aaa
cld
pop
loopne
ljmp
pop
cmp
cmp
push
cwtl
xchg
in
mov
push
arpl
xchg
sahf
icebp
fdivr
incl
cltd
lods
sbb
cmp
insb
and
int
sbbb
popa
inc
mov
push
mov
jbe
ds
lcall
ss
and
loop
xor
add
pop
in
repnz
cmp
das
movsb
push
pop
or
xchg
pushl
mov
stos
add
fimull
xor
dec
and
int3
cmp
pop
sub
and
mov
mov
push
cld
sbb
rcrl
insl
mov
stos
xchg
popa
mov
inc
push
sahf
fistpl
jg
hlt
outsl
aad
jne
icebp
arpl
push
aaa
addr16
pop
ret
in
jb
sbb
jmp
mov
pop
cli
addr16
sub
push
pop
xchg
inc
flds
push
in
or
or
in
pushl
imul
xchg
mov
jnp
dec
mov
jp
sub
and
neg
enter
cmp
mov
dec
cld
stos
or
popf
cmp
popa
jne
sbb
mov
in
adc
lock
ds
decl
jno
fnsave
push
mov
push
inc
push
xchg
lds
clc
addr16
leave
xor
ljmp
dec
das
or
loope
js
in
pop
lods
stos
shrl
pop
jbe
fdivrl
lret
out
stc
push
ja
pushf
aaa
loope
inc
jnp
movsl
mov
pop
jno
aaa
cmp
iret
clc
jno
xor
out
adc
jmp
jbe
push
nop
push
enter
mov
pop
dec
mov
xchg
add
sub
sbb
dec
addr16
dec
adc
mov
dec
cwtl
lods
enter
bound
xchg
push
jnp
cmp
sub
call
dec
int
loopne
mov
aas
mov
mov
push
aad
out
sub
or
dec
xor
xchg
scas
pop
or
xchg
xor
add
add
adc
add
pop
sub
mov
jecxz
push
cwtl
js
fistpll
scas
sbb
dec
daa
push
jecxz
or
stos
ljmp
test
into
add
cmp
push
imul
push
adc
add
push
push
push
cmp
inc
sub
and
or
or
jo
add
movsb
add
idivb
vpmulhuw
mov
out
call
push
sbb
sahf
xlat
and
pop
aam
jbe
aad
mov
mov
loop
add
ljmp
xor
add
xchg
sbb
cmp
xor
js
loope
xchg
push
jne
mov
lahf
icebp
jne
movb
dec
inc
add
stc
mov
out
pusha
repnz
inc
pop
dec
out
mov
jg
adc
lret
mov
mov
rcrl
dec
jmp
je
cli
and
pop
mov
xor
sub
or
test
lcall
mov
out
and
fsubrs
inc
adc
cmp
fildl
push
jl
add
mov
ret
push
out
jnp
jnp
mov
loope
outsb
fs
lret
fstpl
ljmp
enter
mov
aas
mov
mov
or
adc
and
cmp
jmp
rcl
fdiv
mov
mov
and
mov
or
jle
je
mov
jecxz
cmp
in
fdiv
dec
addl
ret
into
ret
loope
pop
sahf
cltd
jnp
nop
inc
mov
cld
xor
std
incl
sub
pop
aaa
fbstp
adc
inc
dec
mov
jmp
aas
idivl
jg
imul
sahf
aaa
in
sti
aam
sbb
xchg
fldenv
lcall
xchg
sahf
aad
lock
addb
cmp
fsubs
push
pop
mov
call
cmp
popf
movsl
rcl
ss
cmp
gs
ds
dec
int3
decl
fcomip
sbb
adc
sub
mov
xlat
xor
xor
dec
fisubrs
add
pushl
cmc
icebp
fcmovne
cmp
out
cwtl
jl
callw
adc
dec
sub
shlb
jmp
mov
pop
mov
pop
or
ficomps
int
rolb
lcall
mov
lahf
out
add
bound
or
sub
data16
std
dec
lret
dec
leave
push
pop
cmp
into
outsl
out
dec
fcoml
aaa
ljmp
dec
out
out
inc
in
mov
dec
inc
icebp
nop
in
mov
sbb
ffreep
aaa
cmp
sahf
cwtl
incl
imul
push
xor
mov
pop
adc
add
popf
test
insl
xchg
push
and
incl
xor
test
add
stc
fists
js
mov
in
pop
call
sbb
sbb
cwtl
in
jns
mov
push
sti
imul
mov
imul
fmulp
ljmp
fcomps
add
dec
xor
xor
dec
push
ljmp
data16
cmc
xlat
dec
sbb
iret
leave
sbb
push
pop
pop
das
loopne
jl
add
cltd
test
cmp
incl
xor
push
adc
mov
out
jecxz
sahf
mov
movsb
sub
sbb
mov
fisubrl
inc
call
int
push
ficoms
ret
pop
and
gs
and
xchg
call
lock
pusha
vpshaw
out
push
in
iret
mov
pop
mov
fcmovnb
movsb
jp
dec
and
adc
push
xchg
ja
out
mov
push
xor
jmp
lahf
cmp
ljmp
add
jl
call
mov
fsubs
push
subb
stc
scas
imul
pmaxub
ds
leave
jmp
shlb
inc
xchg
mov
xor
ss
push
incl
daa
iret
lods
mov
repz
pop
and
repz
xchg
inc
inc
fiadds
gs
mov
jmp
cmp
adc
imul
lock
mov
cli
add
gs
sbb
data16
or
and
lods
cli
mov
cld
xchg
sbb
push
xchg
bound
jmp
sbb
push
jno
movb
fnstsw
test
stc
pop
loop
je
cli
or
lcall
outsb
clc
adc
cmp
dec
jb
scas
mov
push
imul
dec
push
pop
mov
cmpsb
push
cmpsl
mov
loope
jo
out
mov
adc
std
movsb
mov
xor
daa
repz
adc
xlat
in
adc
push
fnstenv
pop
incl
std
cmc
lods
decb
or
inc
jae
dec
dec
fidivrs
push
std
nop
js
dec
loope
insl
out
dec
daa
adc
lock
sub
stos
icebp
call
movsb
fsubrs
aad
sbb
jl
insb
add
pop
inc
jp
incl
or
mov
ret
cmp
notb
jo
into
dec
stc
inc
add
bound
aaa
aam
aam
mov
in
cmp
xor
lock
xchg
jp
call
mov
inc
test
mov
popa
arpl
je
xlat
ds
aad
popf
call
sub
flds
mov
lret
sub
arpl
jbe
mov
mov
fldcw
loope
aaa
xor
mov
push
xchg
popa
inc
push
pop
outsb
lock
call
push
xor
test
scas
aad
add
ficoml
loope
pop
movzwl
xchg
out
decl
enter
mov
jb
call
cmp
aas
fists
das
pushl
pop
push
xorl
fistps
pushf
orb
dec
mov
pop
sub
mov
ljmp
mov
xor
jle
test
push
lods
pusha
jge
clc
dec
jns
mov
ds
incl
inc
inc
int
push
test
cmp
popf
mov
mov
xor
ljmp
and
mov
mov
shl
bound
lods
push
outsl
mov
jmp
pop
xchg
test
sbb
add
jns
repnz
pop
push
outsb
aaa
pop
adc
or
and
jno
cmp
call
pop
mov
adc
aaa
fbstp
jmp
xchg
mov
es
mov
jmp
ss
jge
cltd
pop
leave
inc
jmp
mov
cwtl
lods
pop
mov
popa
imul
out
orb
adc
shlb
cs
xchg
call
jb
sub
loop
jmp
call
lret
xchg
sbb
ret
push
cld
sbb
dec
insl
rcrb
imul
pushl
cmp
and
out
cmpsl
pop
and
xchg
jno
scas
ljmp
jmp
dec
lcall
addl
push
xchg
mov
jl
cs
ds
rorb
mov
cli
jae
in
mov
dec
or
inc
mov
mov
or
mov
dec
incl
xchg
mov
or
cs
xchg
mov
sbb
je
pop
stc
inc
cwtl
fwait
jge
jnp
xchg
jge
push
rclb
lods
mov
insl
cmp
sub
jne
fsub
fwait
out
incl
std
sub
inc
mov
fstpl
mov
iret
xor
and
ljmp
testb
sbb
jnp
pop
mov
push
test
xor
gs
pushl
or
dec
mov
dec
adc
addb
and
and
xchg
incl
sbb
pop
push
out
lahf
sahf
dec
fdivs
jae
sti
push
mov
mov
addl
decl
scas
imul
sbb
mov
das
dec
hlt
xchg
lret
scas
inc
or
jmp
into
aas
and
pushl
fwait
xlat
bound
push
dec
push
in
loopne
shrl
xchg
lcall
fsubs
js
fs
pushl
add
movsl
jmp
push
idivb
shrb
icebp
call
inc
inc
shlb
dec
and
or
aas
xor
js
dec
add
icebp
add
fbld
xchg
dec
stc
pop
jmp
inc
xchg
xchg
test
mov
pushw
sbb
jb
popa
popf
fcos
call
and
jns
pop
aaa
inc
and
or
pop
popa
cmc
cmpsl
fwait
jge
push
adcl
je
fnclex
cmp
sbb
insb
or
out
rcl
jl
dec
cmp
in
es
cli
adc
out
stc
gs
idivb
loop
je
stos
stc
adc
shrl
loope
dec
cli
adc
sti
xchg
in
roll
rol
negb
fisttpll
test
jnp
idivl
in
in
adc
or
push
fiadds
xchg
js
xorb
arpl
in
inc
shlb
ja
ljmp
decl
loopne
add
inc
icebp
imul
or
or
leave
and
inc
inc
dec
sub
ljmp
mov
je
insb
call
push
ljmp
push
push
push
cltd
push
lcall
into
jbe
rcr
psllw
mov
bound
fcom
xor
in
mov
push
fld
lcall
fwait
js
add
inc
aaa
xchg
and
stos
lret
rcl
out
and
fstl
incl
lret
mov
push
xchg
mov
sub
in
or
in
loope
add
call
out
outsb
cmpsl
iret
lret
or
adc
sbb
and
push
stc
cmc
fidivl
aas
push
call
push
incl
loopne
jle
mov
jmp
shrl
or
pop
dec
mov
xchg
and
dec
fmul
fs
push
or
push
pop
cmpsb
ljmp
xlat
adc
dec
jmp
mov
push
aas
movsl
popa
daa
repnz
mov
lret
sbbl
popf
fs
data16
ljmp
adc
or
mov
xchg
inc
cli
test
and
movsl
ret
je
pop
jge
stc
rcll
pop
and
mov
inc
test
jg
mov
cmpsb
adc
sbb
ljmp
nop
inc
and
xor
idivl
sbb
mull
or
xor
mov
mov
fiadds
jecxz
subl
lods
out
in
das
subl
es
adc
bound
popl
mov
sub
xor
ljmp
icebp
dec
inc
or
lds
pushf
mov
call
push
in
imul
inc
jl
sbb
pop
idivb
mov
inc
dec
xchg
int3
mov
add
jmp
insb
cmp
pop
dec
ret
jge
xor
clc
rclb
pop
cmp
jp
iret
xor
mov
mov
call
dec
xchg
inc
test
cmp
fcomps
ljmp
add
popf
lcall
notb
cmp
inc
sub
mov
les
stc
cmpsb
cltd
sbb
das
jnp
call
pop
xchg
into
push
jle
or
mov
in
aam
hlt
pusha
and
xchg
ja
pushl
dec
cmp
mov
sub
cmpsl
mov
sbb
pushl
push
lret
xor
xor
incl
xor
push
xchg
xabort
aam
sub
jle
ret
repz
push
xor
in
add
sub
xchg
xchg
jb
int
rcrl
pop
loopne
dec
shl
test
dec
mov
mov
les
push
dec
push
pop
or
pop
cmp
jle
popa
mov
out
sbb
xchg
adc
pushl
pop
insl
out
and
add
jle
xchg
dec
adc
test
cmpsb
pusha
sub
add
inc
out
shrl
lds
ja
orb
lcall
jnp
decl
push
ret
pushf
stc
mov
or
cmp
ret
sub
mov
mov
fwait
arpl
xchg
movsb
xlat
fistpll
fsubrl
ds
sub
incl
and
xor
push
adc
mov
inc
jae
mov
ljmp
bound
pop
adc
fnstcw
jo
pop
imul
sub
rorl
adc
incl
cli
xor
dec
cmpsl
mov
or
ja
ljmp
jmp
test
mov
mov
test
or
lcall
repz
aaa
stos
es
ficoml
cmpsl
popa
and
dec
inc
aaa
add
pop
pcmpeqb
jmp
xchg
in
outsb
mov
ret
push
fisubl
inc
inc
push
flds
les
or
icebp
ret
divl
sub
pushl
out
dec
insb
enter
mov
or
mov
xchg
push
sub
pusha
iret
mov
add
js
notl
rcrl
sbb
aad
fistpl
mov
addr16
loopne
mov
lds
fmul
dec
mov
xorl
decl
addl
sahf
xor
push
mov
cmp
sbb
lret
lahf
in
add
lret
pop
mov
jne
pcmpgtd
mov
sbb
ljmp
mov
lock
fadds
pop
and
out
xlat
push
sbb
mov
data16
xor
es
or
adc
cs
mov
xchg
sbb
lea
insb
imul
incl
lods
cmpb
add
pop
out
inc
faddl
popf
adc
imul
pushl
xchg
fs
out
mov
jmp
push
mov
loope
xor
fisubrl
lret
pop
jmp
aaa
hlt
pushf
push
test
lea
in
xchg
add
dec
shlb
push
daa
pop
push
adcb
call
jns
and
mov
jns
add
fistl
outsl
sbb
rorb
rorl
push
xchg
xor
je
fildl
sbb
daa
adc
cmp
cmp
sarl
cmc
push
ds
jbe
xchg
jne
jge
push
cmpsl
leave
or
adc
lea
lds
jmp
decl
mov
sub
push
push
in
add
xor
cmp
lods
pop
fimull
stc
jmp
inc
mov
ret
mov
mov
ja
popa
push
rcrb
shrl
ljmp
daa
push
push
in
psrld
js
popa
push
aam
cmp
xor
cli
popa
add
jmp
rorb
push
loope
xor
jbe
xor
mov
jbe
push
pop
jbe
dec
xor
decb
push
clc
add
adc
cli
das
mov
xor
pushl
pop
xor
lret
pop
mov
or
les
or
mov
call
hlt
pop
sbb
inc
fsts
inc
sti
mov
pop
pop
ret
incl
ret
pop
popf
mov
cmp
in
mov
xchg
jmp
jno
mov
and
cltd
repz
xor
pushf
xor
ljmp
lret
rcrb
push
rcr
jge,pt
adc
mov
repz
lcall
and
clc
dec
mov
push
cltd
push
adc
xchg
test
jns
mov
jmp
dec
lea
add
mov
push
ficomps
stos
loopne
pop
sub
inc
roll
es
stc
stos
dec
and
pop
rcrl
cmpsb
mov
incl
push
mov
push
call
popl
push
jne
in
adc
ret
jmp
xlat
add
mov
xchg
icebp
xchg
mov
sub
in
ret
mov
insb
fistps
lcall
add
and
jnp
ror
in
jnp
dec
shrl
test
mov
jmp
shll
mov
jbe
sub
fcomps
mov
pop
lcall
fnstsw
lcall
sbb
or
or
inc
mov
xor
aad
jl
fsubr
sar
add
pushl
xchg
mov
xchg
or
mov
test
cmp
pop
dec
and
xor
fs
incl
push
cmp
mov
js
pop
pop
xchg
jg
jecxz
jecxz
jl
aas
popf
or
das
inc
mov
pushl
fidivs
sub
cmp
or
das
xchg
add
test
stos
lds
cmp
or
fs
pop
dec
in
inc
mov
stc
pop
xchg
sbb
mov
les
jp
push
inc
inc
mov
hlt
xchg
push
dec
rclb
sahf
mov
popf
pop
lahf
icebp
inc
mov
jmp
cmp
pushf
cli
dec
stc
orl
nop
ja
xchg
sub
incl
adc
jmp
dec
aam
mov
test
hlt
jp
shr
inc
or
xchg
fcos
push
push
data16
push
cltd
subb
sti
sbb
test
test
mov
je
xor
decl
pop
inc
popa
sbb
mov
cmp
mov
out
xchg
xor
sti
mov
push
adc
fdivs
xchg
jmp
fcompl
aaa
mov
xchg
cmp
das
mov
stos
test
dec
popf
in
clc
mov
dec
fmuls
or
add
adc
xchg
decl
mov
inc
xor
mov
lret
movsb
jmp
inc
add
and
sbb
push
mov
stc
jl
notl
into
mov
in
sarb
jbe
repnz
jp
scas
je
inc
mov
inc
lds
add
xchg
test
adc
jp
sbb
cmp
jge
push
rcll
scas
inc
mov
cld
sbb
mul
pop
add
xchg
pop
and
repnz
lock
xchg
cwtl
mov
add
cmp
daa
dec
mov
add
call
cmp
ja
ror
aaa
sub
iret
out
adc
lea
or
push
ljmp
repnz
mov
cmp
mov
sbb
jle
div
ljmp
jmp
test
jno
push
in
dec
ljmp
pop
mov
xchg
call
push
jno
adc
fwait
je
ret
loopne
aas
sbb
cmp
dec
test
in
data16
cmp
push
filds
jecxz
mov
inc
add
cld
xchg
sbb
std
outsl
and
cmp
notl
push
inc
add
mov
push
rcrl
stc
imul
jg
inc
popf
pop
shr
jp
jnp
inc
jns
andl
fsubs
aad
mov
dec
dec
enter
lcall
in
fcmovnu
fistl
mov
inc
sub
cmp
stos
sub
imul
shrb
mov
bound
aam
cmpsb
cmpsl
xor
js
and
clc
or
test
call
insl
xor
adc
mov
xchg
pop
or
lea
les
xchg
mov
out
sub
loop
dec
subb
and
and
call
int3
push
call
mov
lcall
sub
xchg
lcall
fistpll
in
pop
or
pop
inc
push
mov
aas
pusha
jns
repnz
pop
lcall
or
icebp
mov
xchg
sub
stc
lcall
ds
imul
or
fs
push
fsubs
jae
pushl
adc
mov
xor
mov
test
cmc
test
push
test
clc
mov
xlat
push
mov
lahf
test
xor
pop
ficoml
in
arpl
pushl
and
push
lcall
cmp
jecxz
lret
lret
lock
shr
cmp
insb
iret
adc
push
insb
ds
sbb
mov
pushf
xchg
xchg
dec
pusha
pop
ds
scas
sub
dec
std
sub
decl
subb
int
adc
jns
popa
sub
and
ds
sub
outsl
test
stc
xchg
sub
and
mov
in
push
inc
sub
int3
ljmp
in
ljmp
or
dec
push
sub
push
in
es
adc
lcall
popa
xchg
arpl
mov
test
mov
xchg
lea
add
addr16
dec
pushl
int3
push
xlat
aaa
shrl
adc
addr16
inc
rcll
aas
decl
xchg
dec
mov
add
mov
mov
fsts
jae
push
pop
cmp
pushl
cmp
mov
add
cmpb
fists
and
mov
inc
and
inc
add
xchg
cltd
loop
aaa
mov
jno
int3
mov
mov
push
fisubrl
pop
and
in
xor
cwtl
mov
jmp
pusha
push
dec
lcall
inc
lret
ret
ret
outsb
sub
jo
ret
adc
imul
call
fabs
dec
jp
and
xor
cld
mov
adc
adc
lcall
mov
jmp
jb
andl
test
cmp
xchg
push
push
inc
ljmp
xchg
cmp
pop
push
call
daa
shr
lock
or
stc
fldt
incl
jl
xchg
add
pop
lods
es
bound
jno
cmp
cmp
pop
aad
mov
out
into
pop
lcall
mov
jno
popf
bound
into
sub
jg
or
bound
jmp
hlt
mov
add
shrl
mov
pop
jns
mov
jnp
cmp
pushl
jl
data16
ror
cltd
aad
in
inc
rcl
sbb
push
outsl
rcl
mov
cmp
aaa
rolb
mov
scas
push
xchg
fsubs
jp
fidivs
xor
shll
ljmp
pop
gs
int3
sub
inc
cmp
test
pop
dec
notb
incl
test
pop
dec
leave
mov
lods
push
xlat
add
push
scas
dec
lret
push
or
pop
loop
add
decl
inc
sbbb
test
cmp
icebp
loopne
out
xchg
je
out
fisttps
cmpsb
push
enter
sti
pushl
push
addr16
scas
cmp
dec
add
push
push
stos
xlat
push
aaa
int3
mov
out
incl
ss
lods
rolb
inc
lret
sub
xor
int
imul
jmp
clc
test
push
sub
loop
js
repz
jp
outsb
ret
xchg
aas
jp
incl
out
pop
test
add
lret
stos
fs
xor
push
or
call
xchg
inc
adc
add
sub
repz
cltd
push
test
sbb
test
cmp
incl
rorb
sub
jno
push
xchg
add
sti
or
dec
xchg
stos
sub
jmp
ljmp
cmc
dec
ror
inc
mov
bswap
inc
push
jg
xchg
adc
mov
incl
cmpsl
jne
xchg
pushl
pop
and
inc
and
idiv
loop
push
ret
sar
cmp
sub
xorb
das
xor
pop
mov
loop
cmp
imul
and
call
add
pop
int
shll
pop
loope
inc
add
lret
scas
test
adc
mov
decl
icebp
cmp
int
lods
jp
or
out
push
jno
aam
mov
sbb
jb
imul
lcall
test
sbb
push
add
or
pop
push
sub
das
inc
ja
sub
mov
loope
xlat
decl
imul
into
not
mov
xchg
jecxz
dec
inc
adc
inc
stos
lret
ljmp
ja
fdiv
mov
sub
scas
bound
jl
add
inc
bound
mov
jmp
mulb
inc
push
mov
sbb
mov
outsb
dec
stos
jbe
push
xor
xchg
mov
push
sub
decl
jbe
out
sarl
sarl
cwtl
sub
shll
and
les
popf
sub
xchg
fwait
decl
mov
mov
lea
subl
rclb
and
jp
xchg
scas
ljmp
push
das
std
xchg
sbb
cmpsb
push
sbbl
push
dec
xchg
jl
bound
icebp
jecxz
fists
daa
mov
sbb
call
pop
xchg
mov
scas
push
sbb
or
call
call
and
and
insl
cltd
mov
insl
lcall
fldt
push
pop
jmp
sub
loope
cltd
jmp
xor
adc
dec
mov
lcall
cmp
sbb
rorl
mov
adc
pop
out
add
nop
push
arpl
cwtl
push
push
je
xchg
sub
aas
stc
cmp
int3
mov
push
cmp
lret
dec
lahf
jl
movsl
pushf
push
das
pop
out
mov
mov
jbe
std
sbb
fisubs
fnstsw
scas
jo
cmp
jmp
incl
mov
inc
test
ja
scas
sub
js
dec
ret
cmp
test
ljmp
mov
nop
fmull
and
mov
leave
fwait
push
dec
mov
xchg
dec
xchg
jno
repz
add
scas
mov
jmp
sub
sahf
sbb
into
adc
pop
stc
mov
fisubs
adc
lods
xchg
int3
movsb
nop
into
sub
push
rorb
xor
jmp
add
iret
pusha
enter
repnz
xchg
mov
out
sub
lods
cmp
out
lods
lret
dec
sbb
xchg
popa
add
mull
iret
hlt
sbb
jp
lea
adc
and
stos
jns
repnz
imul
imul
adc
adc
sbbl
test
xchg
mov
and
pushl
sti
mov
loopne
fcomps
mov
popa
inc
mov
fsubrp
cmp
lahf
add
jge
jno
inc
cmp
sbbb
xchg
cltd
xor
stos
popf
jecxz
mov
inc
cmc
mov
mov
mov
jmp
dec
leave
add
or
mov
gs
add
sbb
push
int
jnp
lcall
sub
movsb
les
out
jp
mov
jns
movsl
and
incl
in
xchg
adcb
adc
rclb
mov
lods
xchg
jmp
ss
dec
xchg
lods
mov
pop
or
sbb
test
test
data16
cmc
push
in
pushl
inc
sbb
test
xor
cmp
stos
sub
lret
or
enter
movsl
add
ficompl
loop
mov
inc
mov
into
push
cmpsl
lahf
pusha
pop
test
sub
incl
lahf
mulb
mov
das
jl
test
push
xchg
jecxz
cmp
jmp
adc
idivl
xor
jmp
or
push
test
lea
adc
sub
or
inc
pop
sar
fldenv
bound
pop
sbb
imul
ss
sbb
and
ret
xor
imul
das
stos
cvttps2pi
popf
mov
imul
mov
lock
lods
xchg
cmp
call
dec
repz
out
lret
mov
mov
dec
js
int
jnp
or
rcll
incl
push
es
pushf
pop
imul
pop
retw
and
jmp
pushl
mov
test
push
lds
sbb
pop
push
jle
call
lods
pushl
addb
jle
fst
mov
aaa
loopne
or
mov
mov
lock
jmp
mov
leave
or
aam
jns
mov
sub
ja
lods
add
pusha
decl
shlb
ror
iret
int
mull
lock
or
sbb
scas
cmpl
decl
inc
mov
es
insb
pop
inc
in
fadds
mov
mov
stc
insl
jno
popf
data16
sub
testw
inc
adc
sub
pop
sbb
mov
gs
call
mov
xor
mov
dec
dec
jl
lds
xchg
sbb
pop
or
movsb
pop
sub
push
jae
popf
add
inc
and
rclb
js
lods
in
lcall
or
and
pop
inc
arpl
mov
fdivrl
shll
testb
dec
imul
cs
push
push
xchg
lcall
pop
xor
jp
aaa
sbb
fnsave
mov
dec
xchg
xor
js
fcompl
pushl
add
pop
add
and
iret
pop
and
cmp
xor
push
cmp
inc
stos
ljmp
shlb
adc
dec
mov
test
fs
arpl
lcall
fsubrp
out
mov
les
mov
int
xchg
test
mov
int
into
fsubrp
nop
repz
inc
dec
lock
or
pop
mov
sbb
inc
pop
push
cmp
mov
push
loop
jmp
pop
test
add
ja
dec
inc
xchg
lock
sahf
mov
or
jmp
cmp
cmp
enter
or
sbb
dec
jae
pushf
fadds
mov
sub
decl
or
cltd
or
fistl
test
sti
mov
hlt
jbe
add
jmp
cmpsl
test
aaa
push
pop
sbbb
rcrb
fildll
push
sbb
call
arpl
idivb
or
mov
push
xchg
xchg
jne
xchg
cmc
fs
lcall
or
mov
stc
in
int3
lea
fs
add
repz
and
jmp
insl
andb
js
jae
cmpsl
xchg
in
bound
out
ds
in
or
out
lds
xor
mov
adc
xchg
or
sub
xchg
push
test
add
inc
repnz
pop
jno
jp
push
int
fs
call
add
incl
dec
in
out
add
out
add
add
pop
mov
scas
test
push
movsb
int
jmp
xor
sbb
stc
scas
cmp
cwtl
lahf
stos
push
out
mov
and
fucomp
push
es
decl
cmp
gs
scas
add
adc
cli
test
aad
std
ss
sub
add
inc
mov
fcmovnu
notl
push
sub
mov
inc
inc
mov
add
and
test
test
adc
and
in
ficoms
ds
pushl
push
fdivrl
sub
std
loope
scas
mov
pop
sbb
notl
mov
sbb
rcll
mov
adc
aad
std
std
pop
jbe
int3
int3
jp
push
push
mov
xchg
clc
aas
filds
pushl
stos
int
in
std
jmp
and
out
jb
push
pop
cmc
mov
adc
cli
xor
test
add
mov
adc
push
or
loop
incl
test
repz
rcll
test
cwtl
icebp
xchg
dec
sbb
inc
mov
outsl
xlat
pop
out
dec
pusha
pop
and
or
xchg
imul
sub
subl
mov
int3
out
adc
decl
repz
pushf
inc
push
jle
and
clc
sbb
mov
stos
or
push
shr
adc
pop
idivl
mov
inc
cmpsb
fs
mov
pop
and
clc
push
inc
lcall
add
pop
roll
and
dec
add
push
xor
rclb
pushl
push
jl
inc
jb
in
pop
mov
ljmp
inc
insl
cmpl
fxtract
sbb
dec
or
add
inc
mov
jno
lea
mov
lret
push
xor
inc
jle
jp
movsb
sub
rclb
imul
movsb
mov
notl
in
stos
jae
repnz
int
divl
bound
pushf
push
pop
lock
stos
cltd
je
xor
jno
or
lcall
arpl
inc
roll
push
mov
fcoml
dec
sub
mov
scas
ret
leave
push
jae
jg
cli
dec
rcrl
push
push
fisttpl
aad
imul
cld
xchg
call
push
les
pop
daa
dec
stos
ret
scas
stos
inc
jmp
mov
jo
push
xchg
mov
loop
outsb
mov
fiadds
iret
mov
imul
adc
ret
test
inc
call
jns
cmp
jae
add
lds
hlt
in
or
xchg
mov
xchg
fistps
lcall
idivb
inc
jnp
sub
cmc
cmpsl
lret
cmp
mov
cmp
add
scas
js
decl
idivb
xchg
out
outsl
jbe
daa
push
jl
leave
cmpsl
repz
jg
push
aad
jg
sti
imul
int3
push
sub
pop
push
and
and
xchg
and
addl
hlt
clc
mov
call
push
xchg
ja
push
push
push
pop
iret
xchg
movl
mov
and
jmp
pop
js
mov
fistpll
lcall
cmp
jl
sarb
ljmp
cmpsb
fsts
ret
lahf
ljmp
mov
pop
pop
subl
ret
mov
jb
xchg
sbb
ds
fcompl
sbb
xchg
mov
sub
push
dec
lods
lret
shr
add
mov
fdivrp
lcall
and
aas
sti
fiadds
dec
movsl
neg
mov
pop
sbb
cmpsb
in
dec
daa
call
ljmp
into
cmp
int3
sbb
in
lock
jb,pt
sbbl
jns
decl
lcall
shrb
dec
xor
xor
dec
mov
mov
dec
sub
jmp
shll
inc
imul
fs
test
push
inc
cmp
sahf
dec
pop
sub
decl
cmc
rclb
leave
inc
xchg
push
adc
adc
mov
sahf
pop
jo
sahf
shlb
jmp
push
aaa
sbb
icebp
xor
sub
pop
cmp
mov
push
jno
jle
stc
mov
lcall
test
mov
in
jg
mov
cs
fisttpll
arpl
mov
shlb
lcall
mov
push
jne
test
mov
push
push
jecxz
inc
push
mov
pop
cmc
movsb
lret
jmp
arpl
test
mov
xchg
sbb
es
mov
mov
in
pusha
lret
aad
mov
or
xor
lods
mov
loopne
push
mov
pushl
scas
scas
pop
std
inc
stc
sarl
jns
cltd
sbb
xor
or
scas
xor
sub
ljmp
add
out
cwtl
call
jo
mov
cmp
test
cmp
sub
test
arpl
sbb
dec
inc
push
jae
icebp
lret
movsb
enter
xchg
sbb
pop
xor
jmp
dec
or
bound
xchg
cmp
lret
dec
and
push
ror
pop
xchg
add
stos
lret
lcall
pop
or
movsl
shll
mov
cld
fwait
mov
xor
pop
addr16
decl
jle
add
xchg
add
cmp
or
mov
jg
pop
jo
and
pushl
fildl
adc
outsl
sar
xchg
add
ret
pop
arpl
incl
sarb
jno
cmpsl
iret
pop
push
xchg
sti
mov
test
loopne
sub
mov
stos
add
cmp
fmuls
and
sub
push
rcl
cmp
daa
push
aam
cmovb
rcrl
jnp
sbb
fwait
mov
out
into
out
push
out
add
push
movb
lcall
pop
and
fldcw
daa
std
mov
dec
mov
sbb
jg
fstl
mov
mov
push
push
mov
lahf
call
mov
lahf
or
shl
or
pushl
dec
cmp
lods
cli
sbb
pop
sbb
xor
mov
and
add
and
pop
int3
sub
mov
jg
dec
cs
incl
shll
shrb
test
jmp
loope
ljmp
or
pushf
mov
fwait
add
call
test
pusha
pop
xchg
jg
mov
jo
mov
jno
xor
sbb
lcall
xchg
dec
fimuls
das
cmc
lahf
fidivrl
pop
movsl
mov
dec
fneni(8087
cli
nop
sub
jmp
scas
loope
out
and
shlb
inc
fcomps
in
xor
mov
js
outsl
test
mov
arpl
sti
cmp
fstps
mov
push
dec
jns
add
std
sbb
fisubs
cmp
cmp
out
pop
sbb
cmpsl
sbbl
decl
hlt
out
cmpb
pusha
jmp
cld
subl
iret
or
xchg
dec
inc
mov
ljmp
adc
mov
pop
test
adc
cmp
sub
incl
jb
mov
jnp
add
test
lds
notb
call
adc
jae
dec
es
andl
sub
and
sar
xchg
jmp
jmp
cwtl
mov
aaa
js
mov
mov
ret
xor
fstl
into
repnz
aam
mov
lcall
push
mov
in
cmp
fisttpl
push
mov
pop
icebp
loop
gs
decl
mov
cmp
pop
in
jl
lret
movsb
test
inc
mov
push
insb
ds
xchg
sbb
inc
adc
in
cmp
insl
rcll
aad
aad
ljmp
movsb
push
in
dec
inc
shlb
int
aas
fs
push
inc
scas
pop
insl
xor
pop
ljmp
stc
xor
push
arpl
pop
dec
lods
ja
test
pop
scas
push
and
fidivrl
ss
mov
test
cmp
or
mov
outsb
mov
cmp
mov
add
fildll
fdivl
jmp
jno
pushl
fcoms
fs
cmp
cmp
adc
jl
fisubl
add
out
popa
ljmp
gs
fsubrs
mov
mov
aas
es
fs
inc
stos
push
sbb
jge
lcall
cmc
or
sub
nop
fsubrs
inc
dec
dec
mov
inc
test
clc
or
dec
mov
jmp
push
sarl
or
ror
in
sti
out
jae
jns
mov
repnz
inc
lahf
push
frstor
lcall
out
nop
mov
out
cwtl
xchg
or
popf
testb
sbb
lret
lea
js
xor
jmp
xor
test
or
dec
ljmp
gs
mov
ret
cwtl
decl
hlt
lret
imul
sub
sub
push
and
push
out
subb
cld
pop
cmc
cmp
negl
popa
clc
out
jo
call
sub
inc
js
lcall
adc
cli
push
test
lret
xchg
sbb
rorb
enter
lahf
or
push
call
std
push
movl
push
shrl
and
ret
rolb
pop
shlb
inc
pop
mov
push
imul
mov
sbb
xor
fcoms
pop
cmp
push
cltd
ds
jp
rcrb
pop
mov
icebp
jne
aas
cmp
inc
incl
mov
dec
and
shrl
insb
add
jb
scas
test
fisubrl
add
incl
ss
push
ret
cmp
mov
sbb
ds
cmp
scas
xchg
xor
and
sarb
mov
pop
push
mov
ljmp
xchg
movsl
call
dec
js
and
mov
xlat
cmpsb
cmp
adc
sbb
movb
enter
inc
ficompl
fisubl
int
sbb
sub
scas
ret
jnp
sub
xor
dec
jmp
sub
fs
mov
push
mov
jns
mov
jo
lods
or
loope
dec
decl
lcall
mov
jecxz
cmp
out
xlat
inc
pusha
jo
loope
jp
sub
jecxz
dec
push
incl
mov
and
idiv
mov
sti
in
mov
jg
fldcw
add
push
or
ss
add
sub
dec
xchg
in
or
incl
sbb
test
loope
cmp
jno
push
insl
jb
cmp
in
call
aaa
pop
jl
mov
push
mov
out
out
movsl
or
push
repz
call
in
pop
lret
pop
lret
add
dec
xchg
fdivr
enter
push
jne
enter
mov
imul
xchg
fsubrl
cmp
dec
xchg
or
jae
and
stc
shl
out
push
push
lds
ds
nop
add
mov
xchg
fildll
cmpsl
xor
js
bnd
stc
jo
push
divl
icebp
mov
call
inc
dec
mov
jae
xor
in
adc
mov
adc
cmp
cmp
inc
into
add
mov
mov
pextrw
ss
xor
mov
and
pushl
and
enter
leave
rcr
xor
and
xor
cwtl
jmp
ss
xchg
mov
ja
mov
xor
pop
rcrl
pusha
loope
into
loopne
lea
pushl
add
xor
adc
xchg
xor
jno
sbb
std
sub
lcall
popf
ss
insb
pop
or
std
test
stos
enter
or
mov
orb
pushl
in
mov
icebp
push
mov
pop
jp
fdivrs
cmp
inc
outsl
cmpsb
decl
cld
jae
jb
add
or
mov
das
lock
lock
mov
sub
push
pop
dec
mov
mov
cli
leave
test
add
push
test
stos
push
and
mov
pop
popf
inc
xor
mov
or
inc
addr16
loop
loope
in
std
lret
pop
por
fiaddl
dec
dec
mov
pushl
nop
lahf
inc
mov
jno
dec
pop
mov
cltd
and
lods
xchg
decl
adc
mov
stos
and
ljmp
sub
cmp
jmp
jae
icebp
jno
aas
dec
adc
sub
mov
jne
push
loopne
and
in
in
jmp
ljmp
ja
fdivrs
jns
push
aam
ljmp
cli
or
add
pushf
lcall
jbe
inc
loop
das
dec
into
clc
xchg
and
add
stc
and
dec
popa
sub
sub
xchg
jmp
sarl
out
lahf
shrl
enter
adc
nop
push
pop
mov
sub
inc
pushl
fisubl
xchg
mov
insl
sbb
inc
insl
insb
dec
or
xor
fidivs
out
int3
jp
dec
xchg
out
mov
leave
mov
push
cs
dec
rol
mov
in
enter
or
in
sub
dec
adc
or
and
push
fwait
push
xlat
and
xchg
mov
mov
flds
out
fnstsw
arpl
or
dec
aad
cmp
ds
sbb
ljmp
sub
cwtl
rcrb
mov
ret
stos
dec
or
cld
movsl
jb
push
push
fcomip
jbe
add
xorl
cli
fcmovnb
movsb
and
inc
loopne,pn
mov
jmp
aam
andb
sub
jae
sub
dec
or
pmulhw
sahf
xor
lcall
imul
insl
mov
leave
mov
inc
sbb
xchg
mov
call
cmc
mov
in
push
add
xchg
ror
jmp
arpl
pop
sbb
imul
add
and
fiaddl
call
rcr
push
push
pop
fstl
xchg
mov
pushl
sub
clc
pop
dec
stos
lods
iret
ficomps
add
clc
push
fadds
cmp
mov
pop
cmp
jmp
ds
testb
lods
mov
cmp
and
je
push
insb
jae
fcomi
sbb
clc
jbe
std
enter
lods
jno
lahf
jno
imul
jg
js
out
fs
adc
repnz
lcall
push
mov
mov
dec
imul
push
shll
stc
sbb
decl
push
test
mov
inc
add
xchg
sbb
rol
lock
fstpt
inc
fldcw
and
test
stos
pop
fdivs
test
jle
sar
jmp
add
mov
push
bound
xchg
jl
out
push
sti
shl
cmovnp
dec
mov
xchg
pushl
add
sub
dec
call
adc
jb
test
lods
fadds
adc
push
and
pushl
mov
jg
sbb
lahf
jo
mov
cmc
dec
rorb
add
rcrl
add
call
icebp
adc
sbb
test
sub
daa
loopne
push
push
mov
leave
call
mov
mov
pop
je
jae
pop
idivb
inc
lods
scas
lahf
fs
pop
in
comiss
jmp
jge
pop
lcall
push
jns
xor
xchg
sbb
or
push
fisttpll
mov
aas
push
scas
icebp
lea
imul
pop
xchg
pop
mov
sub
rclb
gs
cmp
cmp
add
inc
sbb
inc
jae
add
in
bnd
mov
jg
shl
dec
imul
push
mov
mov
adc
jecxz
cmp
push
pop
push
test
sbb
cmpsl
or
ficomps
popa
test
popa
aas
mov
xchg
test
mov
adc
cld
mov
push
xor
ficomps
jp
popa
pop
mov
scas
mov
imul
mov
aam
push
dec
or
xlat
xor
ljmp
push
cmp
in
test
jecxz
arpl
dec
cmp
es
cmp
outsb
sbbl
mov
lcall
mov
movsl
sub
mov
ret
push
rorl
aam
xorb
cli
repnz
decl
sub
dec
repnz
push
aaa
mov
mov
and
enter
cs
add
sub
decl
sub
lcall
jns
and
negl
push
ret
inc
mov
dec
aad
cmp
mov
inc
adc
mov
sub
sub
mov
pop
pop
popa
popf
dec
fdivl
and
push
sbb
sub
rcrl
loop
std
inc
mov
decl
mov
cmp
inc
outsl
in
es
daa
inc
mov
imul
sti
mov
mov
fisubrs
xor
jmp
jbe
add
lea
xor
nop
cmc
mov
jmp
and
movsl
outsb
sbb
scas
xchg
cmp
fdivrs
cltd
and
ds
pop
aad
mov
jmp
push
jns
stos
and
jg
dec
jmp
and
jge
jae
daa
push
pop
aaa
mov
pop
pushl
sbbl
lods
sub
int3
testb
out
in
jle
pushf
jle
mov
and
mov
add
clc
add
push
xor
repnz
push
push
out
js
add
jecxz
pop
fwait
jecxz
pushl
and
out
pop
lock
bnd
out
inc
jns
mov
loope
mov
push
imul
mov
jmp
add
rcrl
lea
xor
mov
adc
pop
movsb
divl
in
in
and
xchg
add
inc
iret
jp
mov
stc
insb
xor
lods
jae
push
sub
call
cmp
sbb
call
and
vpsubsb
cs
jo
xchg
cli
pop
push
mov
call
pusha
push
push
sub
push
or
jne
pop
fs
call
enter
leave
lret
sbb
fcmovnbe
orb
mov
cmp
stc
cmp
jmp
pushf
xchg
mov
xor
sti
xor
divl
lret
xor
nop
add
js
xchg
data16
dec
call
les
movsb
call
ds
mov
sarb
decl
push
or
in
jg
adcb
leave
in
or
sbb
out
jae
xor
lea
jmp
sub
adc
pop
jb
dec
cwtl
out
or
clc
popf
or
cmp
sbb
xlat
or
lock
call
fistpll
dec
out
or
aas
adc
std
mov
mov
int
std
inc
jmp
leave
xor
pop
scas
lock
test
and
pop
cmp
inc
cmp
xchg
jns
push
and
lcall
mov
cs
lea
jne
gs
in
jnp
mov
incl
dec
and
or
gs
mov
subb
inc
fsubrs
shl
adc
jg
clc
outsl
adc
addr16
cs
cld
ja
mov
lods
popa
out
fcoml
mov
pushl
inc
mov
mov
pop
mov
mov
xchg
or
sbb
fisubrs
push
pop
push
lods
std
stos
and
jge
mov
shlb
push
fidivrs
incl
and
scas
xchg
jb
xchg
cs
cmp
sbb
sub
mov
jmp
iret
cmc
jbe
repz
xchg
pop
mov
mov
aaa
inc
dec
jg
mov
xchg
incl
push
out
pop
mov
dec
sbb
push
out
imul
xchg
fstps
shlb
xorl
aam
call
test
adc
mov
popf
xor
dec
or
jno
gs
incl
mov
loope
push
adcl
arpl
jae
aad
mov
mov
mov
sub
je
dec
xchg
cmp
add
test
inc
pusha
adc
incl
jecxz
inc
inc
out
pop
rclb
pop
mov
cltd
dec
xor
and
jmp
inc
xor
pop
scas
push
push
dec
push
mov
dec
fsubrs
push
pop
xchg
pop
mov
mov
decl
cmp
xor
mov
adc
inc
call
jp
popa
rcrl
lods
lret
push
incl
and
mov
loop,pn
loopne
jae
mov
xchg
mov
sti
scas
mov
mov
frstor
adc
cli
lds
test
or
popa
cmp
lods
lret
inc
cmp
jnp
nop
andl
or
movsl
push
push
pop
fmulp
loopne
push
push
ljmp
jl
lret
push
jo
dec
add
xchg
int3
sbb
scas
stos
mov
adc
pushl
inc
mov
or
push
xor
or
sub
sbbb
xor
or
lret
pop
scas
xor
xor
movsb
fdivs
out
or
mov
das
movd
jo
inc
leave
sbb
mov
ljmp
out
jg
test
jae
mov
pop
out
jg
orb
lcall
fstl
push
mov
imul
pushl
js
jge
jb
jae
sub
in
call
mov
push
fstl
aam
mov
inc
pop
stos
ss
mov
sub
ljmp
dec
dec
push
cmp
testb
and
xor
push
mov
xchg
push
fisubrs
lcall
fsts
jno
cwtl
rorl
or
xchg
or
fistl
cli
mov
pushl
bound
mov
out
and
add
cli
gs
mov
pushf
incl
cld
ss
fadd
xlat
jo
out
pop
inc
xchg
dec
sbb
mov
and
into
mov
decl
mov
ljmp
and
adc
sub
jecxz
loop
cld
cs
inc
mov
arpl
mov
call
movsb
mov
cmc
add
imul
orl
lods
pop
imul
push
dec
sub
jmp
cwtl
fisubl
mov
loopne
fld
add
add
or
xchg
inc
cli
inc
lret
mov
cmp
iret
cmc
cltd
ds
outsl
lret
adc
push
stc
in
sub
arpl
jmp
lcall
push
add
adcl
pop
mov
fs
jge
cli
shr
dec
mov
jns
pop
mov
add
or
jnp
mov
mov
sbbb
sahf
mov
cmp
inc
inc
ret
shl
cwtl
mov
inc
sbb
jmp
nop
cmp
in
inc
into
pushf
cld
xor
dec
stc
call
mov
shll
push
in
sub
adc
loope
jmp
mov
cs
mov
mov
mov
xchg
lods
jae
mov
addr16
pushl
sbb
mov
jb
mov
lret
jecxz
fwait
jge
jb
mov
dec
cmpsl
sub
jmp
or
aaa
sbb
mov
mov
pop
repz
xchg
lahf
addb
stc
arpl
sbb
es
xor
subl
repnz
sub
cmp
xchg
mov
mov
xchg
xlat
ret
cmp
leave
addr16
lcall
in
std
pop
aaa
xor
dec
outsb
inc
jg
dec
ss
loop
cmp
arpl
jmp
lcall
pop
cmp
fwait
imul
jle
or
in
andl
jb
pop
aam
dec
and
incl
mov
dec
lods
sub
xor
jge
adc
push
sti
mov
jmp
imul
adc
cwtl
push
xchg
loop
jo
push
pop
jns
fisubrl
xchg
ljmp
daa
out
dec
lock
dec
lret
mov
cmc
sub
in
or
inc
outsb
or
decl
or
xorb
adc
mov
mov
jb
out
mov
xor
ljmp
insb
jno
nop
insl
pusha
aas
adc
imulb
test
les
mov
jmp
push
popf
aad
mov
sub
hlt
xor
lcall
jl
scas
idiv
inc
scas
out
push
mov
add
stos
pop
jp
push
fidivs
xchg
lds
jecxz
push
sahf
dec
jecxz
scas
xchg
push
and
pushf
rcrb
outsl
mov
outsl
les
mov
jp
jle
call
shl
clc
cmc
jne
or
jg
rolb
cmp
sbb
cld
push
mov
loope
movsb
les
adc
mov
xor
mov
decl
xchg
insb
and
andb
lahf
lcall
aas
js
jp
outsl
pop
shlb
cmp
jmp
sub
mov
movsb
sbb
addr16
orl
add
xchg
push
dec
push
repnz
cmpsb
imul
cmp
pop
sbb
stos
sahf
pusha
sub
call
push
ficomps
and
xchg
fs
mov
test
fs
inc
cltd
movsb
mov
lcall
jbe
outsb
mov
add
or
fiaddl
pop
cli
sub
cmp
lcall
cwtl
push
shl
movb
push
and
pop
je
std
nop
push
leave
ret
pop
in
pop
sub
jmp
je
arpl
repnz
rcl
push
ret
adc
add
fidivs
adc
in
out
push
std
mov
and
sub
cmc
out
sub
aam
push
or
mov
jae
push
add
call
adc
inc
and
mov
outsb
pop
jmp
inc
lods
cmp
stc
lea
pop
sub
xchg
rcrl
mov
add
adc
jle
aam
daa
push
mov
adc
test
in
jns
mov
rcrb
cli
mov
unpcklps
call
jmp
cld
shlb
ljmp
pop
jge
arpl
lahf
les
mov
adc
mov
mov
mov
in
xchg
ljmp
gs
dec
cmc
fcomi
imul
inc
subl
sub
mov
sahf
lds
jmp
jmp
push
mov
push
scas
jmp
mov
aam
ss
icebp
inc
lret
jmp
ret
aaa
cmc
ljmp
outsl
cmp
out
movsb
mov
adc
fdiv
arpl
or
sbb
pop
sub
aad
test
sbb
push
ss
lock
jmp
pushl
sub
mov
outsb
mov
pushl
push
mov
stos
dec
into
pop
pushf
cli
int3
movsb
aas
xchg
xor
mov
ret
loopne
mov
lcall
mull
jp
test
andl
inc
movsl
fiaddl
xor
sub
pushl
pop
mov
mov
out
mov
sub
sub
sub
outsb
enter
mov
clc
fcoml
int3
fnstenv
sbb
mov
sub
lahf
jae
rclb
add
pushl
sbb
mov
pop
cmp
test
pop
movsl
fsub
pop
repnz
mov
int3
mov
ljmp
cmp
and
or
mov
test
cmpl
pop
jno
lcall
inc
je
cmp
push
sbb
aad
pushf
subl
aas
pushf
out
nop
pop
push
es
pushl
mov
adc
imul
mov
imul
test
sub
jns
incl
sub
or
or
mov
call
jb
jg
sbb
mov
or
add
dec
test
jp
test
mov
jns
adc
call
pop
xor
mov
jge
cwtl
mov
adcl
out
inc
cmp
pusha
xchg
push
push
jnp
pushf
inc
adcl
pop
xchg
mov
loop
test
dec
ja
inc
push
sti
cmp
ret
dec
mov
cmpb
cs
pop
ss
pop
std
ja
cltd
pop
pop
cld
adc
loop
jmp
roll
push
push
mov
dec
dec
das
mov
iret
jnp
inc
add
jne
sbb
jmp
and
fisubrs
lahf
lds
pop
sub
mov
cmp
sub
fsubrl
lds
jmp
jg
dec
call
fcoms
pusha
pushf
inc
mov
lcall
cs
jne
mov
mov
das
arpl
lds
pop
jmp
and
mov
loop
jno
mov
aam
push
xchg
loop
ret
pusha
je
push
incl
pop
int
lods
jmp
jg
pop
jge
div
xor
or
js
call
and
pop
fs
ja
jmp
aam
xor
imul
sub
dec
ja
cmc
into
fucomip
inc
sbb
inc
mov
insb
repnz
scas
or
outsl
pop
dec
push
mov
jmp
popf
lcall
inc
fstpl
mov
pop
aas
cmp
pop
cmpb
mov
call
and
mov
rcrb
into
imul
pop
mov
test
inc
pop
cmpsb
lds
jg
decl
inc
xchg
rclb
push
call
cmc
in
out
adc
out
test
sbb
incl
mov
push
sbb
sub
testb
mov
ljmp
jmp
cs
sbb
inc
jmp
push
cltd
pop
icebp
jle
fimull
mov
in
sub
loopew
je
jmp
mov
insb
or
lcall
mov
sbb
inc
dec
cmp
mov
shl
fcom
sbb
cmpsl
pop
pop
cli
inc
addr16
ja
sub
test
inc
ffree
mov
push
incl
xchg
mov
stos
insb
mov
mov
adc
xor
jmp
xor
repnz
lds
mov
out
scas
cld
mov
rorb
sbb
pushl
add
push
push
nop
call
ja
call
js
or
loopne
pop
ljmp
sar
jbe
lods
sub
test
cwtl
imul
jecxz
imul
call
dec
mov
and
mov
cmp
daa
cmp
int
pop
pop
out
loopne
test
ljmp
jl
popw
mov
add
cmpsb
stos
push
push
dec
mov
scas
jae
incl
sub
sti
mov
mov
lret
cmc
xor
xor
push
mov
mov
mov
jnp
ss
stos
cmp
jle
xchg
pop
cmp
outsb
cmp
cmp
mov
in
cmpb
sub
pop
fimull
inc
mov
cmpsl
sbb
mov
fucomp
add
leave
test
fnstcw
sub
inc
fwait
push
jb
decl
push
or
test
andb
lret
sahf
xor
pop
mov
jmp
cmp
stos
rorl
xchg
filds
scas
jg
pusha
lods
push
mov
decl
lahf
inc
add
push
popa
arpl
adc
mov
add
ljmp
ljmp
add
inc
es
mov
inc
aaa
mov
xor
out
lods
mov
mov
repnz
mov
push
daa
jae
push
lret
lds
and
push
out
ljmp
lcall
fndisi(8087
dec
ret
out
push
mov
mov
pop
adcl
add
cmp
mov
incl
jns
subb
add
sahf
out
xchg
sub
add
jno
mov
and
xlat
mov
jmp
add
nop
aam
pop
adc
in
cmpsb
jmp
jne
xor
inc
sarb
loop
sbb
lcall
arpl
mov
pushf
imul
sar
mov
lret
xor
std
insl
sbb
incl
mov
mov
scas
lahf
xor
hlt
fsubs
xor
in
mov
call
or
xchg
out
aaa
pop
adc
mov
adc
icebp
daa
leave
push
imul
cmp
insl
push
incb
pop
and
jne
jmp
data16
mov
jp
loope
mov
into
ja
add
sub
pop
adc
mov
jmp
sub
sbb
dec
push
pop
test
loope
dec
clc
out
add
ret
push
mov
pop
std
leave
cld
pop
xchg
jl
paddw
std
mov
jno
inc
inc
cmp
flds
aas
rcr
or
ljmp
push
sub
out
mov
cmp
lcall
mov
incl
xchg
fbld
std
adc
adc
inc
callw
int
xchg
ljmp
ljmp
pop
out
lock
inc
mov
int3
jb
sub
daa
sub
repz
aad
jmp
sub
test
int
fsub
push
xor
inc
sbb
aam
insb
xchg
cmp
inc
dec
dec
mov
popl
fiaddl
daa
scas
sub
int
push
xchg
pop
cmpsb
jno
sub
adc
call
dec
js
mov
movsb
sub
popa
mov
mul
loope
icebp
xchg
out
cmpsb
sub
dec
inc
xor
lods
subl
filds
jno
sub
pop
std
mov
mov
jbe
jmp
push
dec
xchg
loope
mov
popa
sub
xcrypt-ofb
cmpsl
insl
or
mov
xchg
pop
lcall
cmp
stc
push
lcall
or
inc
int
enter
insl
hlt
decl
jl
cli
in
jg
push
sub
into
jmp
push
jbe
jnp
mov
jl
pop
inc
pop
dec
lods
cmpsl
jnp
jg
pop
ret
cmpb
jno
mov
ficomps
jnp
lret
mov
lcall
push
jge
cmp
jnp
mov
scas
jne
xchg
jo
jae
ret
mov
std
and
incl
sbb
add
or
pop
jg
dec
mov
nop
aaa
icebp
push
mov
imul
enter
lea
pop
cli
xor
adc
hlt
cmp
fcompl
jmp
dec
push
sbb
pusha
xor
test
xorl
jge
imul
jge
imul
sbb
icebp
jmp
mov
pop
dec
jp
hlt
push
cmc
cwtl
jmp
cmpb
int
adc
push
xchg
jne
imul
mov
xchg
stc
push
scas
roll
lcall
mov
mov
test
add
scas
cmpsb
pop
sti
push
xlat
push
cmpb
hlt
dec
or
xor
sar
push
adc
jl
cmc
jns
mov
or
icebp
adc
call
sub
jno
sbb
xorb
adc
xchg
dec
push
jbe
iret
pushl
imul
dec
hlt
in
repnz
stc
push
mov
lcall
and
aad
and
stc
popf
xchg
pop
icebp
pushf
or
jb
lgs
xchg
call
fldl2t
jp
push
movsl
shlb
adc
add
jae
add
sub
inc
pop
ds
adcl
cmc
jo
ficomps
je
inc
sbb
mov
jge
cld
push
push
pushf
loopne
lods
mov
pop
jb
decl
jmp
pop
imul
push
lods
push
mov
push
test
cli
data16
pushf
jne
jg
pushl
leave
push
sbb
mov
aad
sbb
add
out
nop
jmp
cmc
push
jge
push
into
insb
jmp
ja
xchg
ret
adc
hlt
jbe
daa
mov
lock
sahf
xchg
jge
xchg
rclb
stc
loope
mov
xchg
and
ja
shll
idivl
mov
lea
rcrl
jnp
fdiv
rorb
mov
inc
scas
push
and
int3
enter
add
aas
movsb
xor
push
push
loop
aas
push
jno
dec
mov
xor
test
popa
repz
decl
jbe
mov
aas
or
add
ja
scas
add
das
inc
cmp
ljmp
pop
add
imul
push
pop
dec
add
daa
in
jns
addr16
add
ds
mov
xchg
dec
sbb
outsb
cmp
call
push
add
pop
dec
stos
pushl
aad
int3
xchg
fsubp
lea
and
or
lea
pusha
lret
cmpsb
cmpsl
mov
decl
xor
add
ss
pop
das
jg
xchg
imul
rorl
jge
mov
andb
stc
xchg
shl
call
xor
push
aad
pop
or
iret
dec
pop
shll
xchg
lcall
test
mov
cmp
popf
pop
and
add
push
mov
push
mull
and
jp
js,pn
in
adc
dec
jecxz
ficomps
sbb
cmp
adc
mov
call
stos
mov
jg
icebp
push
aas
push
dec
inc
mov
push
sahf
mov
pushf
ficomps
sbb
or
xchg
aad
cmp
hlt
sahf
out
dec
cld
lret
mov
push
aas
sbb
fistl
call
ficoml
sbb
mov
int
xchg
int3
sbb
add
add
or
mov
idiv
jmp
pop
pushf
daa
sarl
int
cwtl
mov
test
sbb
out
sbb
push
int
iret
xor
jle
mov
push
xchg
sub
repnz
pop
push
xor
rcrb
xchg
mov
xchg
pushl
push
xchg
push
popa
jnp
jecxz
cmp
cmpsl
leave
pop
pop
or
ret
movsl
cli
fstps
dec
data16
loope
aam
push
popf
xor
jmp
pop
or
xchg
jo
sbb
jmp
adc
bound
shll
shrl
dec
sub
mov
pop
and
push
push
inc
fldcw
jmp
ss
add
push
fsubl
jle
out
mov
adc
sub
mov
leave
xlat
jno
in
ljmp
lea
movsl
popf
pop
mov
adc
jmp
leave
push
add
ret
mov
iret
jl
mov
xor
imul
and
loopne
add
pop
pop
push
lods
sub
lcall
sub
icebp
push
lock
outsb
sub
outsl
add
das
inc
xor
call
enter
js
and
inc
movsb
andb
xor
or
decl
xor
fnstenv
in
hlt
cmpb
mov
sub
xor
notb
add
mov
ljmp
mov
or
cmpsl
jp
ret
mov
sbb
imul
jmp
rorb
nop
pop
push
out
js
push
and
leave
mov
dec
jp
mov
and
jmp
push
adc
rcll
cmp
sub
or
xorb
cmp
shll
dec
pushf
pop
xchg
dec
xchg
test
decl
aaa
mov
testb
xchg
sarb
and
pop
ss
jae
mov
ljmp
add
xlat
xchg
jl
push
push
ror
dec
movsl
add
andb
stos
daa
dec
into
ss
ja
call
fisubrl
pop
or
and
cmp
or
pushf
cmp
into
inc
jmp
incl
cmp
mov
xchg
int3
js
push
xor
pusha
xchg
adc
inc
cld
cmp
xchg
xchg
in
jmp
mov
add
adc
push
dec
pop
cmp
jmp
push
sub
push
push
pop
cmpsb
pop
ret
sarb
inc
adc
xor
int3
in
cmp
bound
mov
lods
mov
pop
ret
pushl
test
pop
cmp
jbe
ret
xor
sub
ffree
mov
hlt
mov
cmpsl
mov
lock
decb
shl
mov
pop
mov
mov
scas
push
lcall
shrl
insl
sub
and
jbe
lret
test
loop
jns
lock
filds
repnz
inc
sti
sbb
icebp
sub
cmp
stc
or
daa
jp
enter
inc
sarl
mov
dec
mov
jne
cltd
fdivs
sarb
pushl
xorb
dec
jg
in
scas
xor
xchg
lods
or
fs
bnd
xor
loope
mov
call
and
aas
ds
jns
pop
jne
push
sub
xor
or
and
out
mov
or
call
test
nop
pop
jb
ljmp
popa
mov
dec
sbb
shll
lcall
add
push
aas
cmpsl
and
xchg
mov
and
add
popa
jmp
out
into
aad
decl
imul
dec
mov
pop
mov
sbb
inc
and
push
inc
jle
lcall
stos
je
scas
or
fsubs
rcrl
or
adc
jo
lahf
sub
dec
sbb
repz
lcall
xchg
movsl
movsb
into
sbbb
and
sub
jle
jnp
imul
jp
iret
push
mov
call
loop
stc
addr16
mov
adc
mov
pop
in
mov
jne
inc
and
fisttps
notb
push
movb
negb
hlt
add
add
sub
pop
add
call
arpl
fstpl
stos
outsb
test
push
and
fcompl
sub
sub
leave
or
pushl
aaa
adc
lea
cli
in
cmp
std
sub
mov
inc
add
rcrl
jmp
stc
cli
nop
mov
mov
aam
nop
push
adc
loop
lcall
mov
jecxz
scas
mov
push
jnp
ret
out
frstor
negl
or
cmpb
sbb
lcall
xchg
xlat
inc
inc
inc
fisttps
pop
cltd
dec
loopne
push
into
mov
pop
shl
and
cmp
jmp
adc
or
lods
pop
sbb
push
in
xor
icebp
cmc
inc
lret
ljmp
icebp
push
std
pushf
mov
adc
lret
sub
cli
decl
incl
mov
hlt
gs
cmp
fidivs
cmpsl
in
sub
push
lahf
mov
in
ljmp
xlat
pop
in
push
jns
lods
add
pop
bswap
fisttpl
data16
fldt
lds
ljmp
test
xchg
push
cmpsb
dec
adc
inc
stc
mov
stc
jge
cmp
jg
mov
pushl
inc
cmp
inc
rorl
xchg
pop
jno
loope
pop
jnp
bound
adc
decl
xchg
addl
rorl
movsb
mov
jle
sbb
adc
add
xor
fdiv
sahf
ficompl
lret
loopne
pushl
pop
jns
add
das
and
gs
and
loope
mov
dec
testb
lcall
xor
and
aam
mov
mov
je
cmp
out
das
lods
mov
xchg
out
sbb
call
mov
popa
ret
lods
into
push
dec
insl
das
ljmp
shl
or
mov
in
push
xor
and
imul
jo
test
pop
inc
push
es
xor
outsl
xlat
into
fdivr
test
decl
jp
push
xchg
cld
jg
sub
push
xchg
cmp
loope
mov
imul
call
lods
jne
jg
push
adc
movsl
sbb
lret
hlt
cs
mov
dec
aam
pushl
and
sbb
out
sub
imul
inc
push
push
mov
inc
sub
call
call
inc
jle
je
inc
je
lods
imul
mov
pop
js
outsl
sti
jmp
add
mov
jae,pt
lcall
outsb
sbb
cmc
mov
popa
dec
pop
pop
mov
pushl
hlt
mov
cmp
mov
sub
ja
xor
repz
inc
movsb
lods
and
pushl
xchg
and
xor
shlb
movsb
mov
and
push
popa
cmc
sub
cmpsb
imul
incl
cli
cmpsl
sbb
sub
icebp
pop
push
testl
or
jl
xchg
jmp
mov
divb
popa
and
ss
cmp
mov
add
in
dec
orl
icebp
test
imul
or
mov
test
jno
inc
popf
lds
out
dec
push
dec
movsb
outsb
std
xchg
mov
jno
out
jmp
add
push
dec
xchg
dec
jbe
decl
pop
rep
cwtl
add
xchg
dec
repz
add
dec
inc
pusha
iret
cmp
mov
adc
das
add
mov
decl
sub
jle
cmpsb
inc
ret
out
sbb
cmpl
or
iret
adc
pop
popa
and
roll
scas
push
jle
testb
add
sahf
cmpsb
fisubrl
cmp
icebp
jne
hlt
shl
or
mov
jmp
dec
sub
out
cmp
test
mov
sar
jno,pn
pop
pusha
inc
xor
rclb
inc
outsb
and
push
mov
dec
das
push
add
stc
pop
adc
lret
or
and
mov
ljmp
jne
dec
jb
adc
or
ds
jmp
push
pop
sub
push
xchg
inc
repz
xchg
ljmp
push
sub
popl
aaa
testb
push
and
and
mov
pop
sti
mov
sahf
sub
call
jae
inc
je
dec
dec
push
inc
stos
push
cwtl
xor
push
adc
cli
ds
incl
rorl
xchg
orl
cld
mov
push
stos
fs
decl
enter
pop
std
pop
jp
aam
jnp
adc
pop
mov
les
loope
call
dec
jns
xor
dec
ljmp
mov
into
and
dec
sbb
outsb
nop
adc
pushl
in
mov
fadd
pop
rcrl
cmp
fists
cmp
cmpsl
addr16
and
in
and
dec
pop
lods
pop
movsb
mov
lock
jb
rep
repz
scas
jp
test
aas
jne
popf
jecxz
push
mov
sbb
sbb
pop
sbb
into
imul
call
mov
pop
addr16
pop
movsb
mov
mov
repnz
pushf
test
jb
movsl
jge
lcall
push
pmaxub
cwtl
aam
sub
adc
bound
cmpsb
mov
cmpsb
inc
or
gs
dec
stos
pop
pop
xlat
push
cmp
adc
sub
cwtl
sbb
mov
lret
addr16
sub
in
repnz
cwtl
std
ljmp
cltd
jp
rorl
in
arpl
data16
mov
and
pop
ret
push
pusha
idiv
jmp
xchg
in
add
fistl
and
adc
jae
arpl
lahf
stos
mov
pop
loopne
imul
jmp
out
lahf
pop
into
dec
mov
push
mov
pop
jecxz
stos
sbb
pop
add
xchg
mov
out
cltd
adc
cltd
fnsave
sahf
pop
sbb
cmp
mov
jns
xchg
pop
xor
movsl
nop
insl
inc
ljmp
and
data16
xchg
insl
dec
fldt
mov
call
je
pop
and
call
daa
std
sub
mov
cld
fisubrl
xor
xchg
movsb
outsb
in
incl
ljmp
mov
dec
rorl
or
iret
and
in
mov
cwtl
jo
mov
mov
mov
cmpsb
movsl
mov
fisttpl
in
sub
fsubl
fistl
jmp
ss
nop
and
lods
jo
daa
dec
dec
add
xchg
icebp
je
inc
je
pop
rorl
dec
xor
call
sbb
out
xchg
xchg
out
shrb
mov
jmp
mov
cld
ja
mov
jmp
mov
mov
outsb
mov
pop
loop
stos
pop
aad
sarb
loop
sub
shlb
call
sarl
mov
lahf
test
lret
leave
jae
jbe
fsub
roll
mov
fsts
stos
cmp
mov
add
jle
inc
lods
xor
pop
clc
outsb
push
mov
iret
cmp
mulb
push
movsl
in
call
cmp
sub
mov
mov
xor
xchg
and
insl
mov
mov
bound
ljmp
in
sar
out
jnp
xchg
es
add
inc
xchg
push
sub
lods
les
ljmp
and
push
mov
orl
out
call
clc
cmp
push
push
adc
call
or
fdivr
ret
mov
sbb
xor
hlt
aaa
in
mov
dec
add
ljmp
lret
xchg
popa
dec
mov
pop
cmp
cmp
out
xor
mov
outsl
pop
mov
cmc
adcl
lret
mov
xor
mov
pushf
inc
repz
xor
mov
ljmp
cltd
shlb
add
lods
mov
pop
adc
adc
pop
rcll
jmp
cmp
jg
jb
sub
mov
xchg
mov
out
dec
pop
sbb
rcrb
lcall
lock
xor
inc
mov
push
out
jmp
xor
dec
out
jbe
movsl
dec
jb
push
pop
jl
pusha
push
aaa
movsb
mov
dec
mov
inc
test
adc
incb
xchg
js
jmp
inc
jbe
adc
lret
jbe
cld
and
mov
gs
jne
sub
fs
call
pop
scas
xlat
cmpsl
add
mov
mov
mov
dec
sarl
aaa
int3
imul
mov
fs
xchg
inc
jl
inc
push
ljmp
aaa
movl
jo
jg
cmp
inc
xchg
push
arpl
push
mov
xchg
insb
dec
mov
cltd
and
sarb
daa
fldlg2
or
mov
inc
cmp
jb
dec
enter
sub
popa
fs
fcoms
xor
pop
xor
clc
pop
lods
cli
arpl
into
cmp
mov
rorl
stos
pop
outsb
aaa
xchg
scas
ljmp
jmp
mov
outsb
scas
hlt
xchg
lds
xchg
push
adcl
pushf
pop
fisubl
mov
push
stc
sbb
adc
roll
jecxz
mov
sahf
mov
cmp
mov
mov
ljmp
pop
xchg
int3
sbb
fildl
pop
fstps
sbb
scas
sub
insl
test
es
jmp
add
decb
enter
bound
lods
push
add
arpl
pop
fadds
jp
mov
jae
mov
jb
dec
jle
add
decl
repz
shr
enter
data16
cmp
add
jl
dec
imul
fiadds
jmp
mov
int3
sbb
ret
divb
arpl
hlt
int3
lret
imul
hlt
push
mov
or
jmp
data16
push
inc
jae
addr16
inc
jbe
in
mov
out
ficomps
decl
pushl
icebp
lret
addr16
lock
sub
lods
into
cmp
jb
jae
inc
mov
mov
jmp
or
call
push
loopne
out
dec
ret
dec
mov
and
inc
inc
iret
cmc
loope
out
std
sar
fcmove
pop
movsl
faddl
roll
pop
cmpsb
cmp
sub
xchg
pusha
fs
adc
incl
repnz
and
lret
and
mov
jmp
fisubl
pop
adc
cmpsl
jo
into
inc
incl
sahf
and
imul
into
mov
inc
bound
inc
mov
je
out
inc
mov
bswap
mov
repz
sarb
clc
jo
mov
xchg
idivb
cli
add
cmp
cmp
dec
jb
or
or
arpl
adc
fs
shlb
push
mov
mov
mov
add
shlb
out
sub
dec
jg
pushf
or
and
jg
cwtl
mov
ljmp
mov
mov
jbe
xor
insb
test
push
mulb
in
sbb
test
iret
cmp
pop
sbb
dec
aas
sbb
lahf
jno
sub
pop
sub
hlt
pushl
in
push
dec
int3
fnstenv
cmp
sar
stos
or
sub
or
mov
jge
xchg
mov
jecxz
mov
dec
ljmp
cmpsb
inc
sbb
sub
and
out
call
cmp
push
inc
cwtl
jge
jg
inc
lcall
cli
push
into
subl
jmp
sbb
jns
jp
jmp
adc
pop
incl
inc
test
shlb
decl
xchg
sbb
mov
fst
fstl
mov
test
loope
push
mov
ljmp
xchg
mov
add
lds
es
outsb
dec
push
dec
shll
ljmp
cmp
mov
in
sbb
insl
cwtl
lahf
fildl
ss
mov
call
test
fdivl
movsl
insb
mov
ret
pushf
imul
out
pop
adc
mov
daa
sub
loopne
xor
jno
rol
addr16
out
icebp
jp
xor
xchg
lcall
dec
cmpb
mov
mov
bound
push
ljmp
jnp
dec
mov
jo
add
push
daa
sub
jle
scas
xor
jl
dec
cwtl
test
dec
call
je
stos
test
mov
mov
data16
lret
lods
mov
ret
cmpsb
cs
call
inc
xor
and
mov
xchg
sti
or
dec
mov
call
popf
out
or
js
jb
in
js
push
pusha
cwtl
insl
loop,pn
mov
and
pop
test
call
test
loope
pop
in
inc
ja
inc
xchg
mov
inc
inc
cmp
mov
and
call
and
mov
xlat
andl
cmp
or
mov
in
mov
call
sub
mov
cmpsl
fxch
cmp
and
fistps
divb
jmp
xchg
and
inc
pusha
cwtl
shll
mov
cmpsb
fldl
push
or
xchg
adc
cltd
pushl
ret
stos
mov
scas
movsl
nopl
adc
lcall
dec
decl
testb
xchg
aaa
arpl
imul
clc
mov
data16
xchg
adc
jns
pushl
jb
sub
add
popa
jnp
push
filds
icebp
cli
pop
dec
popf
sbb
cmpsw
fdivrs
ffreep
push
pop
xchg
sbb
or
loope
sbb
jg
pushf
jmp
enter
call
scas
sti
js
or
mov
mov
xchg
xchg
pushf
push
punpckldq
call
in
xor
data16
repnz
fsubs
out
iret
cwtl
div
aad
imul
or
pop
loope
pusha
pushl
dec
unpckhps
outsl
std
mov
jns
jmp
add
push
jne
push
cmp
imul
jmp
push
aam
lahf
ja
pop
jo
in
leave
inc
sub
cmp
loope
neg
mov
jmp
push
sbb
or
cli
pop
dec
push
ss
out
dec
xor
inc
sub
cmp
mov
mov
push
push
lahf
int
xor
adc
sub
xor
dec
cmpb
push
sub
jno
sti
mov
aam
ret
dec
pop
xor
or
icebp
or
xchg
lcall
add
mov
cmp
pusha
sbb
inc
icebp
and
sub
mov
test
lods
daa
xchg
lcall
add
sub
adc
or
cltd
dec
je
popa
push
out
test
ret
jnp
inc
xor
sub
cmp
xchg
or
ror
inc
imul
adc
incl
xor
out
inc
jbe
jg
jnp
jb
xor
adc
and
inc
dec
aaa
mov
dec
push
mov
aad
xchg
mov
outsl
es
push
test
lcall
dec
sub
in
inc
movsb
push
decb
pop
ror
sarb
jge
lock
incl
push
sbb
sub
fwait
add
out
add
addr16
jmp
jnp
mov
sbb
pushf
test
pop
pop
dec
repnz
mov
or
xor
decl
lock
inc
int3
fldcw
ret
ret
jp
xchg
mov
out
das
cmp
jbe
dec
insl
mov
pushl
add
or
jmp
fcoml
fildl
pop
sub
loop
pop
ja
lcall
lock
in
xor
clc
ljmp
add
mov
mov
incl
stos
jl
inc
xor
loop
std
fstp
insb
cmpb
mov
in
nop
xchg
inc
pushl
in
sbb
and
push
bound
out
xor
mov
mov
sti
push
aaa
inc
mov
xchg
scas
decl
and
sbb
push
cmpl
invd
cmp
test
cli
in
adc
jmp
repz
jne
cmp
mov
int3
or
inc
das
push
xor
insb
adc
stc
and
decl
lret
mov
or
and
je
jge
in
jg
popa
jns
stos
jp
mov
mov
test
sti
sbb
fimuls
pop
cli
in
xor
popa
cli
lods
jp
stos
and
mov
push
lods
dec
imul
addr16
outsl
inc
jmp
jmp
iret
lcall
cmp
repz
jbe
decl
adc
bnd
lods
test
sbb
pop
or
inc
mov
xorl
mov
xor
dec
or
jne
incl
lret
and
ret
das
jge
shll
mov
mov
pushl
enter
cltd
xchg
or
jno
add
cli
ja
outsb
ret
std
xchg
sub
add
incl
mov
inc
test
lds
xor
iret
cmp
mov
mov
ds
or
cli
jmp
lret
push
imul
sarb
mov
inc
cmc
mov
lcall
call
dec
popf
roll
jecxz
je
testb
gs
dec
idivl
jmp
lcall
adc
cwtl
jge
add
adc
shrb
or
cmc
out
fcompl
push
jmp
mov
dec
pop
nop
out
mov
xorb
rol
out
jnp
mov
sbb
jmp
sub
fldl
daa
cltd
or
xchg
cmp
push
add
cmp
xchg
cs
xorl
dec
cltd
hlt
pop
and
xchg
pop
xchg
push
es
out
pushl
sarl
jg
xlat
cmpsl
cmp
in
in
std
lea
mov
shll
pop
xchg
and
mov
loopne
stos
mov
stc
movsl
into
dec
xchg
popf
ljmp
insl
add
jmp
xor
push
sahf
push
movsb
out
sbb
inc
jno
xor
push
lret
xor
lret
pushl
fcomps
popa
inc
gs
push
shll
adc
inc
lldt
clc
mov
pop
aad
mov
pushl
iret
lods
adc
in
pop
or
movb
push
cmp
decl
sub
jg
icebp
fucomi
std
cld
jnp
lahf
test
add
mov
jmp
or
in
sub
push
lcall
out
ret
xor
lret
jmp
scas
or
sarb
xor
mov
inc
mov
enter
stos
xchg
xchg
push
add
push
jno
mov
movsb
lahf
andb
inc
sub
sub
inc
and
inc
mov
adc
cmp
fs
push
jge
mov
push
push
add
add
mov
cmc
mov
shl
es
jmp
mov
push
scas
aam
flds
sub
sbb
sti
mov
pop
gs
pop
xor
mov
xor
or
mov
arpl
fs
hlt
or
mov
or
mov
sbb
fbld
dec
push
mov
add
repz
lea
and
stos
pop
cmp
std
enter
ret
jmp
aas
dec
sbb
cmpsl
lcall
scas
adc
adc
mov
jns
mov
repz
jmp
pop
idiv
ljmp
jmp
cmp
out
call
lret
jno
in
int
dec
lods
and
xchg
mov
lret
decl
cmpsl
loopne
dec
pop
loop
push
pop
mov
loopne
sahf
int3
fwait
push
xor
dec
inc
in
ljmp
decl
mov
jmp
iret
loopne
inc
adc
cmp
pop
imul
ljmp
daa
js
aam
and
mull
mov
test
mov
mov
adc
lods
cli
push
lock
or
pop
lea
inc
imul
sbb
dec
add
mov
js
add
adc
ljmp
in
cvtpi2ps
xchg
sbb
clc
pop
pop
fidivl
fldcw
mov
dec
lock
out
pushl
inc
scas
mov
xchg
mov
push
lods
mov
fmuls
inc
fninit
adc
add
bound
push
dec
mov
insb
adc
lcall
jg
push
cmpsb
negl
clc
sbb
mov
pushl
push
mov
jmp
std
or
xor
mov
sti
fidivl
dec
dec
mov
call
xor
pop
jg
data16
sub
sub
fmuls
sbb
in
mov
mov
leave
jne
xor
sub
mov
and
or
in
jg
mov
sbb
jl
adc
in
adc
shr
rcll
test
jge
incl
cmpsl
push
movsb
fistps
enter
mov
mov
loop
xchg
jmp
sub
clc
push
mov
cmp
mov
in
or
inc
inc
notl
push
pop
xor
popa
scas
mov
stos
xchg
add
repnz
sub
or
nop
or
lcall
adc
jp
int
mov
loope
daa
inc
add
roll
xlat
lods
shr
pop
lcall
xchg
jne
add
out
xor
adc
inc
lcall
inc
adc
inc
add
pushl
push
iret
imul
add
icebp
int
sbb
mov
sbb
in
subl
scas
cli
push
stos
push
fwait
aam
push
bswap
xchg
ret
dec
imul
out
mov
push
fwait
inc
xchg
daa
cmp
dec
jnp
das
jb
scas
sbb
add
dec
sbb
mov
add
decl
push
dec
bswap
in
insl
dec
pop
roll
scas
sbb
xchg
or
in
in
cmp
je
mov
dec
xor
jg
fbld
mov
repnz
or
mov
xchg
cltd
movsb
and
jo
shrb
leave
pop
lock
dec
data16
pushl
pop
lea
lret
lds
pop
jae
sub
out
data16
xchg
jbe
fcoms
incl
lock
jb
aaa
push
setne
fadd
push
adc
sub
out
mov
jp
lods
daa
mov
jmp
push
push
mov
testb
and
and
imul
shrb
sub
jecxz
incl
xchg
sbb
test
out
imul
jmp
dec
inc
cmp
in
gs
imul
sub
aad
or
sti
rolb
mov
outsb
adc
jno
in
add
dec
addl
icebp
jb
cld
lret
inc
mov
in
data16
jg
or
ja
and
sti
push
adc
cmp
and
daa
fstl
int3
mov
xchg
dec
std
and
jns
pushl
cwtl
and
mov
aad
xlat
inc
sbb
dec
scas
push
fnsave
fldcw
stc
dec
push
arpl
iret
hlt
push
clc
test
fcmove
jp
out
mov
in
xchg
cmpb
mov
cmp
and
xchg
dec
dec
scas
int3
loopne
dec
push
jne
inc
push
stc
xchg
mov
jmp
sar
lahf
push
in
dec
or
std
add
inc
shrb
pop
in
sbb
call
pop
lret
pushf
loopne
scas
push
cmpsb
adc
mov
sbb
lods
adc
dec
idivb
push
lods
imul
push
testb
loopne
add
test
fwait
ljmp
jmp
jp
add
and
lcall
jg
sub
mov
jns
dec
xchg
mov
mov
das
and
loop
push
es
js,pt
push
jae
inc
data16
ficomps
fnstcw
sbb
dec
rcl
xor
lret
or
incl
loopne
scas
push
xchg
pop
push
xchg
or
fwait
pop
mov
mov
mov
jmp
fs
test
jns
loope
aad
fnstcw
shl
stos
add
lret
das
inc
in
ss
jns
jmp
iret
inc
jnp
sbb
std
push
in
xchg
shr
mov
add
add
incl
hlt
jp
lods
fcomps
push
jns
mov
or
or
leave
push
pop
dec
inc
ljmp
cwtl
cmp
cmp
add
fs
ret
and
cmpsb
incl
cli
mov
lcall
fsubr
and
fstp
aaa
sbb
sub
daa
call
or
lahf
mov
test
es
cld
and
sbbb
mov
sub
ss
pusha
cwtl
dec
jge
out
lcall
inc
xor
cmp
sub
sahf
dec
inc
cltd
pop
addr16
decl
pushf
addb
pop
and
popa
rclb
leave
xchg
mov
add
pop
or
ljmp
and
inc
dec
inc
push
das
out
xchg
inc
pop
xlat
imul
mov
pushl
xor
int3
sbb
add
stos
mov
sub
cmp
sub
jmp
push
xor
into
pop
js
test
and
jmp
scas
add
or
sub
jmp
mov
inc
shl
mov
arpl
push
daa
fbld
ret
out
or
sar
call
pop
inc
mov
fmull
sub
jmp
fwait
jp
or
inc
jnp
push
or
aad
cld
int
or
sub
mov
mov
inc
popf
xor
lcall
xchg
mov
test
xchg
in
scas
movsl
mov
lds
imul
incl
inc
mov
repz
es
xor
or
inc
add
mov
cmc
imul
ljmp
jp
or
ljmp
sub
es
sar
jo
sub
negb
add
jle
test
fucom
divl
lds
pop
jnp
lock
pop
mov
incl
out
scas
fistps
adc
xchg
enter
inc
in
pop
cmp
cmpsl
cmp
andb
cmp
test
inc
xchg
lods
adc
pop
movsb
int
jne
iret
and
xor
jl
xchg
arpl
test
pushl
sbb
aad
stos
xor
lea
cli
mov
jmp
data16
nop
sbb
jmp
dec
push
in
mov
sarl
mov
enter
adc
ljmp
lahf
add
sbb
loope
stos
push
sbb
xchg
mov
repz
add
xor
test
push
xor
and
or
test
and
testb
scas
std
or
jmp
les
mov
cmpsb
xchg
jl
ret
xchg
insb
add
jns
stc
mov
pushl
nop
sbbl
dec
inc
mov
enter
jbe
cmp
xchg
mov
orb
push
and
lcall
fimull
andb
not
lods
adc
xchg
sbb
ljmp
pop
sbb
jae
mov
lcall
dec
das
pop
or
pop
cmpsl
fdivp
in
aaa
and
ficompl
cld
adc
lret
out
pushl
sub
push
cmp
nop
in
jp
int
inc
sbb
ss
repnz
ljmp
jp
mov
std
dec
jo
xor
sahf
mov
shrl
lock
jne
shll
js
mov
xchg
and
or
lahf
jno
jnp
or
mov
mov
ljmp
ds
test
rcrl
adc
data16
out
call
shrl
enter
jg
cmpsb
mov
jbe
iret
fld
hlt
cmpsb
pop
in
add
test
jbe
enter
insb
adc
js
lods
inc
cmp
dec
lds
add
leave
dec
jmp
pop
mov
mov
lcall
push
xchg
pop
pushf
add
mov
cmpsl
in
mov
lods
adc
xor
int3
jno,pn
xchg
mov
inc
adc
lcall
lea
in
xchg
ret
lahf
ficomps
sub
mov
pushl
sub
mov
lcall
jnp
mov
and
xor
xor
gs
inc
sbb
fidivl
decl
mov
fildl
inc
and
cmp
lock
pop
push
stos
psllq
fdivrl
pop
ud0
decl
push
inc
sbb
lret
andb
add
mov
sub
incl
stos
adc
mov
jecxz
pop
xor
xchg
jecxz
cmc
sahf
xchg
lahf
push
nop
mov
cmp
pop
out
call
xchg
dec
popl
ds
outsb
and
insb
mov
icebp
jp
divl
xor
mov
jmp
push
call
sti
shr
popa
cmp
jg
dec
dec
mov
jp
push
mov
subb
xchg
sbb
out
lret
aam
repz
and
mov
xor
dec
adc
insl
add
sbb
lcall
inc
ljmp
mov
rol
test
adc
inc
mov
add
aam
fdivrp
push
stos
pop
jge
inc
movsl
and
mov
dec
adc
mov
mov
sub
pop
push
dec
cs
call
push
iret
aaa
inc
add
pushf
add
mov
pop
icebp
fsub
mov
inc
lods
aam
add
fidivrs
mov
dec
lds
and
jo
rorb
negb
jg
add
pop
xor
mov
lcall
repz
testb
pop
imul
pop
add
loope
in
decl
add
rolb
hlt
stc
cs
sub
scas
fisubs
sbb
xchg
ret
test
lcall
in
orl
cmp
pop
testb
lret
adc
repz
lahf
mov
pop
icebp
movsl
pop
out
pushl
mov
movsl
cmpsl
dec
rcl
ja
add
fadds
outsl
cmp
or
ljmp
into
push
pushf
enter
sub
dec
pop
or
scas
es
mov
pop
cmp
aam
jle
dec
cmp
adc
subb
or
mov
pop
mov
or
lcall
pushf
std
cmc
subl
xrelease
mov
jmp
out
ret
adc
out
lret
push
ficompl
rclb
insl
iret
outsb
lods
push
lcall
in
push
dec
pushf
inc
iret
scas
cmp
jo
inc
pop
push
xchg
dec
push
push
jmp
or
outsl
scas
decl
sbb
and
mov
mov
push
lea
adc
mov
decl
cmp
icebp
inc
sahf
insl
pusha
out
inc
cmp
xor
sub
cmp
aaa
add
adc
pop
inc
cmp
mov
out
dec
out
outsl
addr16
xchg
int
fs
fwait
es
cli
xchg
std
xchg
fisubrl
test
pushf
in
movsl
xchg
pusha
fsubs
push
jge
mov
mov
mov
fldenv
into
out
iret
xlat
mov
xor
clc
add
pop
inc
int
add
movsl
bound
decl
jo
xchg
imull
out
bound
mov
cld
push
or
inc
fstl
stc
cld
test
bndldx
call
cld
int3
out
movsl
inc
xor
or
mov
lret
out
dec
add
jmp
pop
incl
sub
movsb
repnz
pushf
sub
adc
dec
mov
andb
push
dec
flds
imul
call
clc
xchg
add
xchg
repnz
xor
push
stc
pop
pushf
jle
mov
or
iret
cs
xorb
push
scas
test
jecxz
in
arpl
cmp
pusha
mov
fs
out
mov
jge
aaa
lret
dec
mov
ljmp
mov
adcb
xor
test
leave
stc
jle
pop
add
pop
pushl
lcall
mov
mov
mov
dec
and
adc
jo
adc
add
pushl
dec
xchg
in
test
dec
mov
subb
inc
mov
xlat
xor
cmp
xor
ds
push
call
or
mov
xchg
and
mov
xor
jp
les
or
incl
sbb
mov
in
xchg
int3
mov
test
jne
and
inc
cmp
nop
push
mov
mov
or
mov
fisubrl
ss
mov
jno
pushl
mov
insl
aas
stos
std
aad
push
adc
sarb
inc
sbb
test
mov
decl
cmp
scas
aas
aam
fs
lret
mov
push
js
jnp
fstpt
pushl
mov
idiv
bnd
mov
pop
int3
xchg
mov
stos
mov
xchg
hlt
incl
or
fiaddl
out
or
push
fcomps
inc
sub
xchg
sbb
jle
dec
out
fs
push
jno
sub
xchg
sarb
xor
or
sbbl
sbb
call
loop
subl
xorl
js
daa
lret
mov
push
mov
dec
push
pop
mov
add
or
cmc
enter
add
adc
xor
hlt
jno
test
call
push
enter
iret
xor
push
je
inc
das
in
cmp
imul
cltd
xor
pop
test
push
shll
mov
out
mov
lahf
add
decl
into
mov
imul
int
loope
ficomps
sahf
bswap
adc
sub
ljmp
push
or
mov
jl
cmpl
and
pop
iret
incl
incl
push
push
sbb
inc
out
lea
pop
mov
dec
inc
cmp
xchg
cld
sbb
inc
mov
fadds
clc
adc
scas
iret
mov
add
roll
in
push
xchg
pushl
mov
lods
loop
aaa
fbstp
aaa
orb
xchg
sbbb
out
jge
lock
movsb
test
inc
aas
imul
adc
out
fisttps
mov
add
sti
mov
adc
jmp
or
pusha
xchg
ret
cmp
mov
sub
mov
int3
or
pushl
pop
xor
sbb
les
push
sub
daa
lret
js
out
jg
adc
dec
pop
add
jmp
gs
insl
inc
pop
push
loope
pop
and
xchg
fisttps
inc
dec
bnd
adc
adc
loopne
jle
or
aas
subb
cmp
int3
ljmp
xor
hlt
inc
sub
incl
jp
mov
adc
pop
mov
mov
dec
push
cltd
lods
frstor
call
push
pusha
fisubs
xchg
int
test
mov
cmp
imul
push
call
xor
sub
cmpsb
enter
outsl
mov
data16
shlb
in
jmp
pop
insb
lahf
jg
push
sub
sbb
lret
arpl
or
mov
les
loopne
add
push
push
add
arpl
push
xchg
insb
scas
sub
dec
push
sub
decl
or
pop
xlat
fldcw
push
xorl
loope
pushl
fstpl
cmp
out
imul
incl
push
sub
out
bound
repnz
out
aas
sbb
cmp
sbb
jle
pop
push
test
movsb
dec
dec
sbb
dec
jge
repz
loopne
pop
fildl
inc
jl
roll
jmp
mov
andb
mov
add
cmp
dec
add
inc
pushf
sbb
popa
xor
adc
and
lods
push
jmp
insb
stos
jmp
into
cmp
fdivrl
inc
pushf
jg
test
into
add
xor
fcomps
dec
push
mov
dec
divl
dec
cltd
nop
jl
dec
xchg
and
mov
dec
jnp
ja
or
and
add
addr16
jp
cmovp
ljmp
mov
adc
adc
sbb
in
aas
sbb
test
xor
call
add
pop
jno
sub
xor
mov
shrb
dec
mul
lcall
scas
mov
push
sub
ss
dec
sbb
fwait
push
jp
icebp
mov
add
fcomp
js
sahf
in
jmp
xchg
mov
push
aas
fdivrs
sbb
mov
push
les
mov
jmp
jb
testl
jb
cmp
lods
mov
cs
negl
jle
clc
sub
and
fsubrl
xor
ret
call
sbb
cmc
sub
filds
in
lahf
aaa
push
pop
xchg
push
mov
cmc
xchg
dec
ja
lret
fimuls
int3
pop
in
sti
sub
in
fistl
int
rolb
inc
call
pop
subl
lods
jge
dec
add
cltd
aas
dec
fdivr
sub
cmp
pop
repz
sbb
or
mov
pop
add
mov
push
mov
call
clc
push
and
add
xlat
movb
push
and
out
scas
pop
clc
mov
lcall
jb
rcr
inc
push
mov
out
xor
fdiv
pop
lods
pop
add
push
pop
lock
or
lcall
stos
roll
xlat
xor
movsl
clc
xchg
mov
dec
mov
mov
ljmp
pop
enter
mov
leave
lret
xchg
mov
xchg
pop
divl
inc
or
leave
and
mov
mov
dec
cli
add
push
test
ljmp
lcall
scas
std
adc
loopne
in
add
xlat
push
lods
mov
mov
lcall
sub
adc
ja
jle
rorl
pop
mov
jg
xchg
jbe
inc
loopne
ljmp
call
jmp
loope
loope
daa
push
cwtl
fistl
test
ret
pop
push
cmpsl
dec
mov
add
jo
push
jmp
idivl
cli
push
or
cwtl
push
cmp
fs
ret
mov
int
mov
push
ror
movsb
ljmp
and
insb
and
aad
inc
shlb
or
jno
inc
jmp
out
test
lcall
push
adc
and
cmpsl
xchg
xchg
sbbb
mov
bound
fisttpl
push
repnz
scas
iret
je
rcr
mov
push
xchg
cmp
fnsave
jl
iret
testb
jl
adc
sbb
mov
adc
out
fdivl
jb
nop
ljmp
and
jle
sahf
inc
ret
loopne
xchg
xchg
jbe
cmp
xchg
xor
decl
jno
das
stos
xchg
sub
jnp
jae
data16
repnz
dec
cmc
scas
mov
ss
pop
cmpsb
adc
jmp
cmpsl
sub
lret
in
in
jle
bound
mov
in
mov
and
arpl
xchg
jg
or
arpl
sahf
and
ss
orl
fucomi
outsb
iret
jns
jno
mov
ljmp
movzbl
sub
insb
sbbb
push
or
pop
xor
mov
in
outsl
popf
mov
out
push
add
inc
push
sti
sub
sti
les
inc
and
icebp
push
fmull
call
sbb
mov
shll
and
mov
mov
decl
outsl
jmp
inc
push
cli
mov
sub
ss
inc
je
jae
aad
sarl
incl
ja
lods
loopne
cs
sub
adc
mov
mov
int
pop
inc
flds
lcall
jmp
xchg
ss
push
push
out
lock
add
add
mov
pushl
out
add
daa
sub
stos
push
je
or
rcrb
adc
lods
imul
and
jmp
outsb
outsb
aad
addl
xor
sbb
dec
adc
aam
mov
mov
int
call
leave
gs
and
pop
mov
ficoms
dec
leave
fcoms
mov
xor
imul
repz
jmp
cmpb
inc
push
add
and
or
movsb
fucomi
clc
fwait
cmp
rclb
jnp
loop
and
lahf
cmp
decl
mov
push
mov
mov
and
in
das
mov
mov
cld
mov
outsb
mov
jne
std
ljmp
in
rcrl
push
pop
rcr
or
call
push
sub
and
loop
fsubrl
repnz
pushf
lds
mov
jmp
out
mov
push
add
das
sti
sti
mov
sbb
and
or
cmp
push
dec
pushf
pop
gs
shrl
insl
ret
pop
hlt
push
jae
pop
jmp
pop
jns
mov
mov
jg
sbbb
mov
and
aas
lcall
scas
repnz
add
in
xor
call
adc
cmp
or
inc
sub
sbb
mov
cld
fs
ljmp
call
and
sbb
fstpt
movsb
fcmovbe
mov
ds
movsb
aas
mov
pushl
cmp
jmp
loop
xchg
xlat
mov
nop
mov
push
dec
mov
loopne
lcall
add
repz
cwtl
test
cmc
sbb
lret
and
xchg
sub
cli
pop
sbb
dec
jl
mov
mov
push
in
imul
icebp
fs
sub
add
daa
cli
push
std
mov
out
push
mov
inc
rclb
sbb
xor
add
adc
ljmp
arpl
jo
data16
mov
cli
push
rcl
mov
or
iret
popf
aam
cmp
push
cmp
dec
mov
in
test
loop
bound
sub
sub
addr16
sbb
fisubs
inc
jns
call
es
sbbb
sub
cmpsl
jg
lods
iret
lods
mov
mov
mov
ret
andl
call
push
mul
mov
out
mov
dec
dec
and
adc
mov
pushl
cmp
dec
fdivs
repz
mov
iret
data16
icebp
in
add
clc
int
inc
jle
or
sahf
mov
add
int3
and
pop
in
insb
dec
mov
jmp
decl
js
shll
aas
mov
dec
inc
sar
enter
jmp
pusha
hlt
mov
push
pop
push
cmp
call
jge
inc
fwait
out
fwait
loop
adcl
sub
lods
push
xor
sbb
adc
loop
cmc
mov
sub
aad
lcall
sub
sub
in
shrb
adc
xchg
push
push
gs
mov
call
shlb
inc
jnp
repnz
cmpsl
and
add
mov
push
sti
pop
in
nop
insb
fmuls
ljmp
adcb
push
pop
xchg
sahf
fsincos
stos
les
sbb
data16
sbbb
add
decl
xor
jno
jo
jnp
outsl
shlb
repz
push
or
addb
call
data16
jg
call
mov
and
lods
adc
loop
jns
xchg
jo
ds
inc
or
xor
xchg
fimull
lea
frstor
dec
dec
fstpt
call
je
icebp
inc
cwtl
push
shlb
mov
cmp
fwait
insl
out
add
pop
out
xor
mov
ret
call
insb
dec
out
in
aaa
mov
xor
cmp
xor
adcl
leave
or
cmp
sti
es
icebp
outsl
clc
jle
imul
sbb
insb
mov
and
mov
out
xor
iret
pop
fmuls
ds
mov
cmp
cli
clc
movsl
data16
pushl
mov
pop
dec
in
xor
inc
in
ret
in
push
cmpsb
mov
mov
add
push
sbb
adc
in
mov
adc
add
xor
mov
decl
xchg
jb
mov
ljmp
pop
call
jmp
jmp
pushf
inc
add
dec
or
adc
daa
outsb
cmp
jg
jl
xor
inc
push
and
arpl
push
sarb
enter
mov
sub
jne
lock
xchg
pushl
popf
in
dec
enter
inc
out
push
mov
mov
xchg
dec
incl
or
mov
mov
push
lret
dec
xchg
mov
fwait
pop
cmp
ljmp
or
aas
and
cwtl
jg
bound
movsl
jl
pop
jno
sub
popa
icebp
jbe
fidivl
jns
mov
in
push
cld
mov
aaa
inc
bswap
sbb
and
aad
or
stc
in
and
sbb
xor
cmc
pop
sbb
imul
mov
push
mov
cmp
sub
dec
stc
lahf
xor
clc
hlt
sahf
jp
fs
in
inc
mov
test
aas
loop
sub
test
or
inc
vmovsd
adc
mov
mov
ret
in
sahf
push
stc
out
xor
loopne
xor
sub
add
add
sar
out
lods
fdivr
dec
pop
enter
lea
mov
xor
and
in
pusha
inc
inc
aam
and
incl
cmpsl
pop
mov
mov
dec
aam
cmc
mov
stos
or
test
fldenv
sbb
fnstcw
in
mov
ss
divb
inc
or
ljmp
cmpsb
mov
inc
aam
jns
int3
pop
pop
negb
in
ficompl
outsb
mov
incl
repz
jne
cmp
or
jp
cmp
inc
shlb
sbb
imul
call
lods
shrb
push
clc
call
or
mov
outsl
xchg
data16
cmp
inc
push
leave
and
lret
adc
push
mov
inc
inc
stos
mov
mov
jl
loopne
push
add
aad
mov
stos
outsb
xor
xchg
pop
lcall
push
movsl
popa
xchg
pop
hlt
jge
push
pop
push
pop
dec
les
add
ret
dec
mov
lahf
stos
stos
cmp
mov
mov
orb
push
mov
adc
mov
add
sub
sbb
jo
and
sti
push
dec
sub
incl
icebp
jmp
sbb
dec
out
aaa
pushl
shrb
push
mov
push
xchg
mov
incl
lcall
fs
insb
insb
lahf
or
dec
test
sub
enter
jp
xlat
std
cmpsl
int3
pop
fbld
loope
cmp
mov
cmp
imul
mov
ljmp
mov
push
pop
lcall
stos
xor
jge
jb
dec
push
push
push
cmp
fldcw
decl
sbb
mov
shrl
shlb
push
rcl
dec
setge
dec
push
xlat
lret
ret
fidivrl
push
or
in
rcll
mov
out
test
ss
push
pop
call
cmp
jmp
and
add
add
mov
mov
sub
mov
push
loopne
or
adc
push
mov
sub
jle
mov
pop
aas
mov
xor
jle
les
lds
adc
cmp
shlb
and
aaa
cmp
mov
mov
fdiv
popf
and
mov
lret
cs
jle
outsb
mov
cmp
jg
cmp
mov
inc
mov
jae
mov
fstl
sti
cld
leave
lcall
push
out
fwait
lods
mov
stc
jle
xor
daa
cmp
scas
pop
inc
push
inc
les
sub
lahf
lods
lret
jg
ljmp
inc
test
jnp
rcrl
push
out
je
adc
es
jbe
push
pop
jns
xchg
decl
pop
stos
add
jp
insb
mov
aas
out
fidivrs
mov
fldl
das
fcomi
loopne
bound
add
add
shlb
aas
xlat
add
sbb
icebp
adc
into
dec
cld
xor
clc
xor
jmp
dec
out
daa
out
pop
or
imul
push
and
repz
cwtl
int3
fnstcw
fcmovb
mov
lcall
cmp
mov
sti
cmp
lds
mov
xor
sub
addr16
push
into
add
cltd
and
xchg
inc
xor
loope
ljmp
jge
lods
sub
incl
fsubs
stos
xchg
insl
shlb
lret
pop
jl
dec
jb
adc
ljmp
mov
hlt
push
cmpsl
mov
inc
pushf
xor
loope
popa
test
iret
cmp
jmp
hlt
dec
test
das
add
je
cld
inc
sub
icebp
jmp
cwtl
mov
fnstenv
mov
decl
popl
push
rolb
add
pop
or
push
outsl
stos
or
cmpsl
and
pushl
and
adc
dec
arpl
adc
add
push
aas
pop
jbe
movsb
mov
gs
and
das
sbb
rcrl
inc
loope
jle
push
repnz
in
mov
outsb
popa
jg
xor
loope
xor
loopne
sar
lcall
cs
es
cmp
dec
pop
test
lcall
imul
push
inc
pop
adc
lods
sahf
jle
int
fistps
xor
push
add
cltd
ljmp
ljmp
push
adc
adc
jmp
or
push
xor
ret
mov
int
in
test
sbb
push
into
adc
or
adc
mov
jmp
filds
dec
bound
imul
inc
add
sub
inc
push
int3
xchg
and
xor
repnz
mov
shr
out
mov
stc
jne
clc
add
ret
cmp
call
int
arpl
pop
jno
lahf
mov
mov
fisubrs
cmc
int
push
cld
scas
das
ljmp
and
stos
repz
sub
inc
rol
inc
js
lea
mov
into
dec
mov
aaa
in
push
or
es
add
adc
iret
push
dec
fs
inc
inc
adc
or
dec
mov
sbb
incl
movsl
lret
test
ret
mov
add
cmp
test
pop
and
fisubrs
aaa
aam
test
pushl
clc
leave
and
mov
xchg
sub
adc
adc
xchg
dec
mov
incl
sbb
lods
movlps
add
ds
cs
or
icebp
and
push
pushl
jl
sbb
rcrl
rcl
lret
xchg
iret
jbe
or
mov
incl
das
in
inc
imul
cwtl
add
cli
mov
aaa
inc
rcll
mov
decl
push
mov
and
hlt
aad
jno
out
movsb
fdivl
notb
pop
mov
ljmp
sbb
xchg
xchg
xor
xchg
sub
inc
xchg
xchg
aad
inc
mov
divl
push
cli
and
add
mov
test
mov
std
nop
test
stos
push
lods
addr16
xchg
jbe
test
enter
loope
sti
inc
lock
inc
push
push
mov
pop
mov
je
fisubrl
push
xchg
sbb
mov
incl
call
insb
rolb
xorl
outsl
addr16
popa
fildll
cs
inc
push
jmp
pop
out
adc
pop
inc
cltd
dec
jns
xor
lret
movl
cmpsb
xor
dec
loop
add
test
mov
les
cmp
mov
mul
xchg
fildl
adc
lods
movsl
add
pushl
and
cmpsl
and
xchg
fwait
dec
or
dec
inc
das
xor
ss
call
int3
rol
pop
js
mov
pop
sub
je
addr16
push
bound
xchg
ja
decl
test
out
inc
lret
inc
lcall
movsl
mov
sbb
pop
mov
jmp
add
out
insl
icebp
pushf
mov
sti
push
cmp
jmp
lcall
jl
lock
nop
cli
push
adc
dec
inc
xor
in
lock
gs
pop
cmpsb
jne
jo
jg
pop
mov
incl
int3
mov
xor
test
sarb
shlb
movsl
push
xor
mov
inc
dec
jmp
push
pop
ret
pop
loope
in
jecxz
mov
mov
clc
push
cmp
scas
adc
xchg
fdivr
incl
stos
loope
js
ret
inc
pop
mov
test
pop
stos
adc
jno
outsl
subb
aaa
outsl
mov
sub
lds
push
mulb
inc
push
inc
adc
sbb
iret
sbb
icebp
xchg
sti
aaa
pushl
pop
imul
xchg
subl
fdivrs
pop
jne
dec
gs
iret
xchg
pop
jmp
std
loop
jb
loop
and
pop
sub
aaa
lcall
mov
cmpsl
mov
mov
sub
push
lods
dec
push
mov
adc
test
mov
xor
test
inc
xor
and
mov
movsb
out
insl
inc
pop
imul
fcmovnb
jmp
or
push
pop
hlt
das
cltd
lods
mov
pop
and
fisubs
and
loop
xchg
inc
mov
jmp
mov
xor
adc
sub
je
sbb
mov
gs
faddl
or
call
add
mov
pop
rolb
gs
jg
popa
xchg
cli
test
add
mov
cmp
bound
loope
jnp
sub
in
xchg
out
mov
lcall
dec
int
or
jnp
imul
std
xchg
pop
cmp
pcmpeqb
push
dec
jmp
inc
and
lcall
push
mov
dec
xor
push
jns
ljmp
jnp
adc
pop
jg
cld
jp
aad
cld
div
lods
decl
int3
lret
call
loope
mov
mov
dec
or
mov
idivb
push
cmpsl
and
call
xor
xchg
aaa
mov
lea
inc
lds
insb
pop
enter
int3
push
mov
cmp
call
fcomps
fs
leave
xlat
dec
push
xor
inc
and
cmp
mov
adc
test
sub
rcrb
jnp
ret
push
repz
int
inc
or
rclb
mov
mov
xor
int3
int
dec
mov
test
sub
cmpsb
fisttps
lods
fnstenv
cmp
pop
fwait
adc
bound
push
ljmp
sub
adc
sbb
and
inc
aas
gs
bound
mov
push
jne
adc
inc
repnz
add
sub
add
cmp
push
ljmp
or
ds
gs
push
mov
int
pop
data16
mov
dec
xor
inc
xor
xorl
adc
inc
jmp
dec
jnp
push
mov
mov
jbe
push
cmp
enter
mov
lock
mov
imul
dec
test
fidivs
jmp
mov
popf
mov
popa
mov
push
cwtl
gs
outsb
adc
incl
cmp
jl
out
out
add
sbb
cmpl
sarl
call
orb
into
fldz
push
sub
xchg
lock
cmp
pushl
stos
adc
mov
popa
insl
test
pop
mul
aam
push
or
cmp
ret
pop
rcr
dec
jmp
sbb
jecxz
std
mov
aad
lds
pop
lea
movsl
ds
not
mov
fcmovb
lea
std
ja
ljmp
lods
icebp
adc
xor
and
stos
outsb
cmpsb
fcomps
test
in
faddl
ss
xchg
pop
add
jl
mov
std
jbe
pop
dec
lock
dec
fcomip
jmp
mov
jg
cmp
insl
bnd
or
int
scas
nop
inc
xchg
pop
jg
mov
sbb
sub
and
scas
call
mov
out
jmp
repnz
and
repnz
xchg
shrb
scas
sub
mov
add
inc
cmp
fidivrs
jmp
xchg
pop
loop
sub
lret
call
mov
mov
xor
jg
mov
call
or
or
shrl
xchg
sahf
lods
mov
fcmovnb
push
xlat
xor
xchg
stos
sub
jmp
push
and
aaa
test
hlt
jmp
scas
inc
adc
div
out
add
aam
sahf
dec
stos
push
fstpl
push
pusha
mov
movsb
movsb
pop
hlt
cltd
add
icebp
push
outsb
or
or
incl
pop
and
or
dec
aam
mov
les
stos
fwait
or
fs
inc
test
dec
fwait
lcall
rcrb
sub
or
push
cmpsl
loope
xor
ds
stos
mov
sbb
lcall
pop
mov
push
test
into
dec
jle
loopne
xor
cltd
xchg
fs
mov
call
loope
fdivrs
fdivrl
pop
or
mov
subl
cltd
sbb
jecxz
pop
pop
xor
loope
pop
stos
pop
pop
bound
and
scas
jp
out
xorb
adc
jmp
lret
mov
and
mov
dec
mov
jns
sahf
call
and
inc
push
cmp
outsb
or
sbb
test
inc
dec
xor
incl
mov
subl
sbb
jmp
pusha
jge
fnstenv
in
mov
stos
data16
inc
dec
mov
mov
pop
jecxz
test
scas
adc
gs
cmp
pop
inc
pop
mov
out
inc
or
or
lods
mov
movsb
je,pn
shrl
out
cmpsl
fildl
jg
fldl
addr16
mov
es
mov
mov
lcall
lret
call
inc
dec
dec
xchg
loop
xlat
xchg
dec
or
mov
jg
jmp
xlat
cli
movsl
aam
pusha
mov
mov
xor
out
mov
divl
cmc
scas
call
rcr
sarb
adc
nop
div
fsubl
mov
stos
adc
dec
movsl
jmp
cmp
push
daa
dec
add
mov
sbb
mov
pop
pop
mov
jmp
xchg
sub
cmc
sbb
xchg
xor
push
push
stos
frstor
jecxz
ds
mov
mov
incl
push
mov
inc
push
imul
aad
xchg
xchg
pop
lcall
adc
gs
aaa
mov
cld
dec
imul
mov
mov
inc
mov
decl
push
inc
negb
push
rcrl
outsb
mov
pop
sbb
jge
ljmp
test
sub
fdivrl
xchg
fld
cmp
and
pop
movsl
and
call
push
enter
jb
cmp
jp
test
lods
es
inc
imul
jmp
mov
les
sbb
sub
xchg
repz
lcall
dec
xchg
mov
out
or
stos
mov
cmp
test
ljmp
adc
jmp
in
lea
insb
pop
movsl
push
and
outsb
mov
push
negb
ja
popa
cmp
into
das
addb
pop
sbbb
test
push
jo
push
scas
lret
push
dec
push
scas
lcall
stos
pop
in
xor
jmp
cmc
in
aam
vunpckhpd
shlb
jno
cmpsb
inc
pop
add
dec
push
push
das
pop
xor
imulb
mov
sarb
xchg
inc
test
and
adc
jecxz
nop
jmp
cmp
pop
out
cltd
inc
movsl
cmp
shrb
fstpl
je
leave
and
ss
xchg
jmp
iret
sti
hlt
sub
loope
ss
push
sbb
leave
pop
inc
fadds
incl
push
negb
push
in
mov
lcall
es
aam
roll
icebp
ljmp
repz
popa
pop
pop
pop
adc
test
test
jae
pop
pop
les
or
mov
call
push
int
stc
and
dec
shlb
imul
cmc
lret
push
lret
fistps
stos
push
push
mov
adc
int
mov
stos
sbb
lds
leave
aaa
ss
into
sub
aaa
push
nop
jl
xor
test
ljmp
scas
add
cs
incl
mov
pop
gs
dec
out
sub
or
pusha
adc
push
sbb
aaa
ljmp
cmp
je
out
xor
lahf
lret
roll
mov
xchg
push
call
cmp
mov
sub
add
neg
jb
cmp
sarl
imul
jmp
xor
insl
xor
mov
mov
dec
push
lahf
cmpsl
cs
push
xchg
pop
out
and
lcall
sub
rclb
cmp
iret
jb
lock
mov
push
in
ror
pop
pop
das
in
jmp
dec
fs
lcall
pop
sub
inc
testl
out
lret
sub
lcall
in
fiaddl
push
shrb
bound
sbb
es
sub
lods
fs
dec
adc
dec
cmp
lcall
icebp
xor
call
arpl
mov
loope
out
mov
pusha
jnp
lcall
test
sub
lods
sbb
jbe
stos
ret
and
jae
add
loop
jecxz
mov
decl
mov
les
inc
int
mov
mov
stc
mov
jmp
push
mov
ljmp
add
das
int
xchg
pusha
mov
mov
mov
inc
scas
shlb
lcall
jns
fs
add
out
insl
aas
push
rcrb
nop
int3
stos
pop
call
mov
cli
pop
scas
sbb
imul
adc
shrb
cmp
pop
jns
jnp
daa
cs
aaa
insl
out
jmp
in
cmp
je
cmp
pop
pop
xor
aad
cli
adc
bound
call
inc
adc
and
in
sub
inc
adc
sbb
push
and
push
decl
push
cmpsb
insb
pop
clc
mov
mov
mov
dec
mov
aas
or
push
int3
pop
lods
xchg
add
mov
and
jl
mov
dec
outsb
popa
and
mov
or
jg
mov
push
daa
xor
jge
sub
jmp
inc
std
jmp
adc
mov
addl
add
gs
roll
pushl
sahf
lcall
int3
data16
fisttps
and
add
cmpsl
lcall
adc
mov
and
jbe
mov
xchg
stos
dec
lds
jmp
call
mov
mov
adc
aad
lods
ret
sbb
fwait
mov
out
lods
loopne
pop
mov
repnz
addr16
add
imul
test
mov
call
in
ror
rol
in
mov
xchg
sub
fincstp
add
sub
jbe
jmp
jnp
xor
jmp
xlat
adcb
and
loop
mov
push
lret
scas
outsb
or
pushl
sub
mov
lcall
lock
hlt
ltr
lret
sub
dec
lods
in
cmp
sub
ja
cs
or
lcall
push
sbb
adc
mov
sbb
sub
inc
jl
jp
je
imul
xor
cli
mov
sbb
pushl
add
test
int
call
negl
pop
movsl
lods
popa
xchg
iret
cmp
ds
cmp
outsl
aad
imul
loopne
xor
dec
test
mov
adc
incl
repz
shrb
aad
scas
cmp
push
popa
fcom
movsb
rclb
pop
cs
js
lcall
push
fcoms
insb
adc
das
insb
push
lahf
sti
lret
push
stos
out
lcall
es
call
sbb
adc
in
jg
pop
in
pusha
push
pop
test
dec
cmc
adc
dec
mov
push
mov
lock
jmp
shrl
jmp
orb
loope
jmp
jne
adc
inc
cltd
jb
jbe
pop
xchg
pushl
jl
sbb
jo
fnsave
insl
sbb
scas
js
mov
pop
les
pushl
mov
add
and
adcb
mov
insb
cmpsl
dec
push
dec
ljmp
mov
sub
loopne
daa
jnp
scas
clc
sahf
sahf
repnz
add
loop,pn
jge
iret
subb
ljmp
push
or
outsl
jl
or
xchg
dec
push
sbb
cld
cltd
push
xlat
insl
mov
xchg
push
push
mov
push
inc
add
inc
jg
jl
fstp
sbb
sbb
cld
and
mov
inc
jbe
fidivl
in
xchg
dec
aad
cmc
mov
sar
iret
jle
les
scas
inc
mov
pushl
and
inc
sub
sbb
stos
pusha
ret
mov
stos
loopne
sbb
push
mov
mov
divb
shrl
popf
xor
int3
xchg
jge
sub
xor
call
ja
or
loop
mov
adc
xchg
sbb
mov
insb
sub
pop
shll
call
jmp
mov
lea
test
inc
xchg
jb
repnz
mov
add
out
shlb
add
incl
push
push
xor
out
gs
cmp
in
loop
stc
mov
outsl
adc
pop
mov
dec
stos
fcoms
sbb
fimuls
stos
movl
mov
outsl
cmp
push
outsb
xchg
xlat
jmp
mov
call
lahf
repz
or
pop
in
js
push
add
jge
inc
dec
jmp
or
jecxz
iret
and
cmpsl
push
dec
sahf
into
pop
jbe
loope
orl
ljmp
ja
mov
rcl
pop
popf
xor
cmp
add
std
xchg
sbb
push
repz
mov
dec
or
rorb
fcmovu
subb
pushl
clc
xchg
and
shlb
movsb
rorb
outsb
pop
aad
cld
jbe
cld
dec
jl
pop
add
push
pop
lret
sub
mov
jecxz
mov
decl
mov
daa
cmp
jl
inc
lock
adc
loop
xlat
cs
lcall
jmp
push
mov
push
mov
clc
push
ljmp
mov
lea
bound
sbb
dec
test
shll
cmp
add
aam
cli
icebp
pop
mov
cld
sub
jmp
cltd
mov
imul
jbe
mov
xchg
mov
pop
stc
jl
call
stos
enter
lods
iret
push
lock
mov
sbb
mov
mov
jbe
call
adc
sbb
sbb
cmp
sbbb
xor
fldenv
mov
lea
lcall
jae
mov
lret
testl
xor
addr16
shll
and
bound
sarb
mov
into
pop
movsl
sub
mov
mov
jmp
push
adc
push
ss
ss
out
add
pushl
loopne
enter
loopne
xor
shll
xor
mov
sbb
xchg
jp
outsb
jmp
out
ss
ret
mov
mov
popa
loopne
pop
frstor
idiv
decl
ljmp
sub
arpl
ljmp
adc
cmpsl
push
mov
ljmp
mov
psubusw
lret
lret
movsl
movsl
fwait
adc
out
cs
leave
push
repnz
cmp
ljmp
xor
mov
or
xor
arpl
mov
ror
call
or
inc
jb
cmp
pop
scas
jb
cmp
imul
and
cmp
test
pushl
adc
cmp
inc
popa
mov
mov
lea
loopne
in
outsl
test
movsb
add
inc
test
shrb
stos
mov
xchg
rcrb
inc
add
jmp
dec
in
add
push
adc
xchg
push
inc
jo
leave
push
insb
fiadds
popf
add
mov
in
fstps
and
jb
stos
lret
faddp
sub
insl
cmp
inc
aam
mov
lret
xchg
in
loop
aas
jo
loope
mov
mov
cmpsl
stc
arpl
popf
imul
mov
inc
int
jge
cmp
fimuls
cmpl
xor
mov
or
pushf
sbb
iret
push
pop
push
int3
cli
xchg
dec
ljmp
lcall
addr16
or
or
loopne
js
lods
adc
dec
cmp
lods
cmp
mov
pop
pop
add
or
ret
movsl
out
dec
xchg
and
jl
adc
in
lods
pushl
stos
fiadds
daa
cmp
mov
fwait
repnz
out
outsl
sbb
leave
xor
jmp
aam
dec
push
dec
push
cli
pop
gs
aas
std
es
ss
cmp
jbe
testb
xchg
ljmp
push
sub
ret
lds
push
jno
or
fnstenv
adc
and
sbb
pop
out
std
fldt
lcall
adc
xor
ljmp
icebp
jb
dec
jno
mov
pushl
mov
and
daa
sbb
sbbl
repz
adc
jns,pn
push
out
push
ficomps
ljmp
and
add
adc
out
sub
push
out
push
cld
stos
call
shrl
out
inc
mov
and
push
xorb
xchg
movsl
inc
fmulp
dec
call
or
pop
mov
sti
mov
and
xchg
cli
ss
call
add
and
sti
pop
test
mov
push
rcrb
aaa
inc
pop
pop
lock
mov
xchg
pop
scas
incl
or
mov
jmp
std
xor
ret
pop
sub
sbb
jmp
mov
mov
push
shll
adc
std
scas
sbb
out
out
add
sbbl
cmp
cmp
ljmp
js
fistpll
test
jmp
inc
adc
shll
xchg
mov
lcall
shrb
dec
bnd
fs
and
adc
pop
ds
call
ficoms
add
dec
inc
sub
fst
add
jae
int3
mov
or
xchg
inc
pop
mov
cwtl
cmp
outsl
pop
lret
fisubrl
and
out
xor
out
scas
sub
paddd
xor
xchg
shlb
dec
hlt
dec
rorl
mov
leave
outsl
push
movl
xchg
pop
fistps
or
incl
inc
in
in
adc
adc
inc
movsl
lds
sbb
dec
incl
movsb
sbb
repz
mov
push
push
js
xchg
ret
lret
pusha
jns
cld
lahf
pop
hlt
or
ja
incl
cmp
sahf
enter
cmpsb
lods
sub
leave
cmp
sub
xchg
sub
pop
add
cmp
in
decl
pop
mov
xor
sarb
mov
scas
and
loopne
dec
xor
loop
dec
add
fmul
and
nop
dec
outsb
mov
mov
dec
mov
daa
dec
aam
and
jmp
fwait
cmpsl
loop
ja
or
mov
in
mov
mov
mov
movsl
adc
data16
lcall
out
mov
mov
sub
push
nop
xchg
jbe
push
jle
aaa
pop
sub
incl
jnp
inc
push
outsb
inc
lcall
xor
and
push
ds
mov
incl
ret
xchg
cli
rorb
out
xchg
jne
adc
xchg
or
lds
jp
enter
call
lret
xchg
nop
insb
xor
mov
iret
pop
loop
sbb
ret
jbe
sahf
add
inc
add
es
sub
decl
loopne
hlt
mov
adc
iret
sbb
fisubl
push
in
lods
adc
mov
call
mov
push
or
loope
add
jp
or
lret
xchg
loop
cld
dec
sub
jmp
iret
xchg
es
imulb
les
dec
call
adc
dec
lea
cwtl
cs
xor
jmp
fnstenv
cmpsl
out
sub
cmp
out
add
adc
ficoml
and
incl
mov
adc
lock
sbb
and
add
test
mov
out
pop
jmp
dec
lea
jae
push
mov
xchg
adc
fadds
cld
xchg
in
or
cmc
clc
mov
in
shrb
xor
fwait
popf
inc
repnz
xor
mov
and
ss
xor
sbb
pop
adc
pushl
pop
sbb
lods
test
jne
jne
xor
dec
mov
add
push
sbb
out
mov
cmp
jb
mov
mov
aad
xor
call
popf
pushf
cmpsb
xor
pop
in
std
adc
lock
decl
in
push
mov
jge
into
clc
scas
sub
inc
ss
mov
fstpt
push
or
dec
das
mov
push
incl
push
int
enter
lds
push
out
cmp
xchg
jp
repnz
pop
cmp
pop
xchg
jmp
aam
fwait
stc
stos
xor
xchg
inc
cmc
es
scas
imul
push
cld
xchg
stc
sbb
inc
shlb
mov
adc
xor
int
cmp
lods
es
pop
xchg
mov
push
xor
call
pop
mov
loopne
fadds
shll
sbbb
jo
push
loopne
lods
incl
jle
int3
mov
push
scas
and
inc
mov
cmp
pop
repnz
test
pushl
cmp
or
mov
dec
xor
es
dec
jno
mov
inc
decl
mov
dec
insb
fucom
add
inc
inc
loope
fdivrs
push
lret
inc
in
and
jmp
addr16
adc
lret
adc
pop
test
pop
ljmp
cmp
dec
and
in
inc
daa
cli
cli
jno
sbb
mov
mov
popa
sti
push
ja
jo
xor
incl
pop
jo
out
push
subb
or
insb
xchg
out
add
int
mov
and
push
test
xor
fisttps
jg
jp
repz
stos
cmp
decl
out
push
push
cmc
mov
loop
ja
lods
lret
cltd
mov
jmp
jmp
xor
in
out
decl
les
rcll
push
inc
push
ja
xchg
jbe
mov
insb
out
pop
push
mov
call
sub
push
add
cs
cmp
addr16
cli
aas
into
movsl
scas
pop
push
loope
mov
push
pop
mov
push
out
je
jne
lea
mov
and
sub
add
xlat
decl
pop
loop
test
clc
out
cmp
mov
dec
adc
popa
hlt
jns
aam
pop
aam
in
out
or
mov
incb
pop
jecxz
in
fistpll
mov
in
push
loop
aam
inc
xchg
lcall
dec
sbb
std
xchg
push
ficoms
mov
ja
in
push
sbb
jnp
mov
clc
push
clc
jmp
inc
or
or
jle
mov
dec
mov
in
cmp
ds
sub
ljmp
and
popa
inc
loope
push
cmc
dec
adcl
movsb
scas
es
jns
add
cmpsb
inc
mov
jl
jp
pushl
sub
imul
adc
daa
mov
xor
fisttpl
incl
sub
mov
xor
adc
fisubrs
aam
ficomps
jae
ljmp
ljmp
pop
fistl
loope
sahf
adc
mov
or
dec
popf
imul
out
ss
out
notl
cs
lock
xorb
mov
lahf
out
inc
cmp
xor
sarl
mov
lods
das
adc
adc
mov
xor
pushl
and
in
sub
jecxz
sub
dec
pop
imul
call
mov
sub
xchg
lods
lods
and
std
cld
sub
movsl
and
pop
in
adc
incl
xlat
enter
sbb
mov
leave
mov
call
mov
add
ljmp
sub
imul
pop
loopne
inc
jg
pop
cwtl
inc
pusha
cld
rolb
mov
incl
xchg
cmc
xchg
jns
imull
cmc
popa
aam
mov
push
negl
jmp
jo
add
sbb
cmpsb
stos
je
add
add
mov
incl
repz
push
fs
int
fcmovu
push
mov
popa
pusha
les
in
add
cli
pop
lret
ljmp
ret
fs
and
mov
test
pop
or
mov
push
xchg
and
adc
add
pop
jge
jnp
lea
pusha
xchg
cwtl
enter
cmc
mov
xlat
xor
push
or
pop
setbe
jmp
push
sub
pop
cmp
mov
xlat
insb
mov
rcrb
jmp
jg
cmp
ljmp
pop
clc
xor
push
jecxz
test
fwait
sub
dec
pop
std
xchg
cwtl
cs
cli
mov
insl
push
jmp
arpl
shrl
lret
leave
notl
add
jle
sbb
divb
call
insl
je
mov
push
jnp
out
fwait
mov
add
fxam
pop
rcrl
pop
cmp
stos
test
and
push
pop
les
dec
jge
mov
divl
into
loopne
cmpl
push
jo
decl
outsl
gs
dec
mov
cmp
xor
leave
dec
dec
mov
lods
or
pop
movsb
jl
ret
mov
js
pop
mov
les
cmp
in
gs
aad
and
call
decl
jmp
lods
xchg
mov
loope
lds
mov
andl
lea
shll
jno
adc
ds
frstor
aas
sbb
jo
aaa
dec
cs
mov
sar
and
aam
out
push
sub
enter
stos
push
sub
into
stos
movsb
adc
cmp
push
dec
mov
test
xor
in
adc
sti
iret
jns
push
mov
fs
lret
ss
ljmp
xchg
dec
sahf
decb
pop
xor
outsb
pop
jecxz
fisttpll
clc
das
push
push
incl
push
xchg
cli
xchg
mov
js
adcl
adc
sub
cmp
dec
arpl
call
cmp
cmpl
mov
ds
pop
pop
and
cmp
fildl
mov
jl
aad
jle
push
or
mov
pop
shrl
xlat
add
sti
xchg
cmpsb
push
mov
mov
fsubr
test
mov
mov
mov
xor
fs
int
fcmovnb
fsubrl
mov
xchg
fistl
out
arpl
divb
repz
scas
mov
ret
dec
push
mov
sbb
jmp
mov
fsts
scas
cmpsb
dec
xor
inc
jns
sti
cmpsb
fdivrl
popa
pusha
add
mov
inc
jmp
dec
jp
orl
and
mov
push
call
mov
mov
mov
call
rcll
fistpl
rclb
cmp
cmpsb
adc
sbb
and
dec
aam
or
pop
into
xchg
inc
cmp
dec
scas
xlat
ds
and
xchg
addr16
mov
repz
sbb
test
and
test
daa
mov
and
fldcw
sti
pop
lock
push
dec
fdivrp
pushl
fsubrs
adc
sub
and
and
movsl
es
lcall
out
outsl
cmpsl
test
lret
neg
ds
test
push
push
sbb
cmp
inc
or
in
lcall
and
lret
dec
mov
push
sbb
daa
and
ret
pop
daa
pusha
add
or
out
jle
or
jne
sbb
fisttpll
push
movsl
jg
dec
lods
mov
lret
sti
hlt
mov
ffree
mov
ss
sahf
or
xorb
inc
mov
das
pop
jp
pop
push
jp
and
dec
cmp
movb
js
cs
in
cld
test
sbb
out
clc
das
mov
fstpt
adc
xchg
cld
xor
repz
pop
fidivl
call
call
or
ljmp
push
mov
sub
push
xchg
les
jmp
pushf
adc
cmc
mov
mov
xchg
and
and
mov
xor
aas
cmp
inc
xor
jle
ret
leave
rolb
mov
lea
add
adc
jmp
push
jnp
xchg
subl
pop
xchg
mov
cmpsb
icebp
xchg
jnp
rolb
cmc
mov
decl
movsl
rcl
adc
dec
iret
and
fsubl
jecxz
imul
addr16
call
in
jnp
cmp
xlat
jmp
sub
and
repnz
or
mov
inc
or
out
pop
push
pop
int
aad
pop
ss
inc
inc
sarl
out
push
mov
and
das
in
lahf
jmp
data16
scas
cmc
ficoml
int
adc
fistpll
insb
iret
pop
cmp
in
pop
mov
mov
and
nop
out
xchg
hlt
flds
cmp
ret
dec
neg
arpl
incl
sarb
jge
jp
push
pop
adc
xchg
or
stc
and
incl
scas
loop
je
pop
add
dec
loopne
sbb
test
movsb
cltd
ss
ret
sub
test
xchg
fisubrs
mov
xor
nop
aaa
and
dec
ja
mov
int
inc
sub
hlt
pop
loope
incl
out
inc
lcall
lret
and
jnp
sbb
cmp
orb
ljmp
mov
out
xchg
stos
test
xchg
fstl
and
pop
push
jo
xor
out
add
andl
lcall
push
push
cmp
fcomps
sub
and
xchg
adc
cmp
xchg
enter
lods
mov
lods
decl
push
test
sbb
test
add
jl
dec
sbb
inc
movsb
cld
mov
xor
push
inc
ret
cli
arpl
and
out
insl
xchg
call
fs
jg
mov
dec
xchg
mov
mov
mov
pop
sahf
mov
inc
dec
fildl
out
std
jle
sbb
ja
lods
push
in
jg
or
out
mov
xchg
and
in
jmp
into
mov
add
pushf
shlb
mov
fwait
out
jno
mov
add
ljmp
shll
negl
adc
fiaddl
pop
or
insl
and
cld
decl
negb
rorl
out
inc
inc
pop
sbb
add
lcall
dec
dec
inc
jge
jne
ss
or
js
shrb
push
aad
jmp
mov
dec
das
addr16
xor
lods
sub
out
push
in
nop
sbb
xchg
mov
mov
ja
mov
cmp
dec
jns
jno
fmull
jp
xchg
push
stc
subl
ljmp
xchg
mov
test
cmp
sub
fstpl
loopne
aaa
aaa
hlt
arpl
mov
je
shl
mov
adc
popf
aam
and
mov
es
aas
push
adc
and
roll
mov
dec
add
rcrl
pop
inc
pop
sbb
lds
decl
sti
add
jns
xorl
lods
dec
push
add
test
clc
fstpl
sub
out
pusha
xor
jmp
imul
fwait
imul
in
in
popa
sub
lcall
sbb
inc
roll
out
incl
mov
fdiv
lds
lret
loope
sarb
push
xchg
xor
or
ljmp
rcr
mov
mov
ret
adc
out
jbe
rorl
call
or
mov
pop
and
mov
add
in
xor
sub
incl
jb
jae
sub
push
cs
sarl
cmc
sbb
mov
sti
pop
fimuls
push
fstl
test
out
push
push
into
mov
pop
mov
adc
call
gs
dec
in
dec
mov
xor
mov
and
adcb
sbb
out
decl
test
jmp
jge
in
cmpsb
ds
cmp
lcall
stos
shlb
incl
out
sbb
jnp
add
clc
pop
out
insl
or
xchg
faddl
sub
cmp
bound
mov
es
insl
rcrb
sub
loop
idiv
bound
aam
mov
sarb
test
pushl
inc
cmp
sbb
test
in
xchg
sti
mov
push
mov
inc
mov
and
stos
sbb
pop
jmp
mov
sbb
clc
add
jae
pushl
fwait
pop
mov
xlat
insb
xchg
pop
jb
sub
mov
mov
mov
jmp
or
and
mov
xchg
movl
repnz
sub
xor
incl
jle
lret
fmulp
xchg
fwait
jmp
pop
jl
mov
shll
stc
mov
or
mov
inc
add
repz
in
cwtl
xorps
mull
cmpsb
inc
lcall
xchg
xor
fwait
push
int3
dec
decb
in
loope
mov
arpl
push
out
int3
lock
xchg
sub
incl
in
pop
jo
or
cmp
pop
push
in
jle
icebp
adc
outsl
fiaddl
ljmp
test
jl
push
mov
rol
mov
jecxz
jl
stos
cmp
sub
and
pop
cmp
add
mov
cltd
push
popa
jno
fwait
insb
fucom
sbb
mov
ljmp
pop
out
adc
dec
test
out
rcrb
push
leave
lods
je
jmp
pop
es
decl
hlt
fidivrl
xor
cmp
fisubrs
add
xchg
imulb
loop
push
sti
mov
inc
jo
ljmp
and
idivb
out
lods
dec
mov
mov
call
dec
add
popa
sub
decl
dec
mov
dec
idivb
loop
sbb
cli
jne
push
xor
aad
stc
call
das
inc
adc
adc
mov
xor
add
xchg
js
pop
fcmovnu
pop
jge
call
pop
cs
test
inc
pop
jns
mov
pop
jo
sub
rolb
jo
pushl
inc
fdivl
in
pop
rcrl
ljmp
andb
add
mov
jle
jmp
and
scas
jne
push
loopne
pop
cmp
sub
sbbl
iret
cmp
lcall
mov
cs
aas
sbb
mov
mov
outsb
xor
lret
ss
inc
mov
sbb
inc
pop
jb
jnp
or
inc
mov
cmpsl
xchg
and
pop
lock
out
data16
jmp
mov
cmc
push
inc
pop
dec
mov
mov
xor
mov
test
shll
es
jnp
rcr
lds
sbbl
aaa
xor
sbb
int
je
sub
sub
ljmp
jns
sub
js
or
clc
sbb
adc
pop
and
iret
clc
imul
adc
iret
add
in
bound
pushf
outsb
cltd
add
lret
addl
call
mov
jle
jg
push
loop
sbb
xor
fs
popf
mov
lcall
inc
push
mov
adcl
jecxz
add
pop
dec
sub
decl
mov
je
fwait
jmp
orl
ds
aas
mov
inc
mov
int
sub
in
jnp
mov
or
xor
fnstsw
cmpsl
jnp
xchg
dec
ja
cmp
fisttpl
int3
ss
lahf
mov
mov
pushf
nop
mov
inc
test
add
jmp
sub
fisubrs
cmc
push
add
mov
cltd
sbb
ror
in
pop
hlt
pushl
test
or
pop
ficomps
in
in
popf
xchg
aad
jae
jno
ljmp
lods
adc
jmp
push
push
xorl
repz
and
fwait
and
cli
imulb
inc
cmpsl
cmpsb
mov
lcall
test
mov
mov
or
ret
sbb
xor
outsb
in
or
jmp
mov
cmp
adc
mov
sub
std
mov
andl
clc
sub
call
ljmp
cmp
xchg
out
imul
push
loopne
cli
or
call
mov
ret
out
int3
adcb
outsl
adc
mov
sub
hlt
aad
ret
push
mov
push
push
insl
or
inc
loopne
jnp
pop
lcall
xchg
pxor
nop
aad
loopne
lcall
je
je
mov
ss
cs
sti
mov
loope
out
and
jge
pop
sbb
cwtl
push
inc
stc
xor
decl
ss
sbb
fwait
adc
cltd
lock
test
fcmove
pop
mov
xor
pop
aam
jle
lock
ljmp
mov
cmp
notb
mov
in
inc
mov
mov
and
jp
jnp
leave
scas
into
sbb
push
cmc
mov
xchg
mov
pushf
loope
popa
cmpsb
pop
mov
scas
pop
or
adcb
shlb
mov
xor
pop
cwtl
jo
or
out
ud0
aas
into
jnp
scas
mov
dec
mov
sub
imulb
adc
in
xchg
out
adc
push
sti
jb
mov
mov
sbb
xor
lahf
ret
sub
sub
cmpb
push
pushl
xorl
or
pop
cli
adc
jae
testl
cwtl
ljmp
sbb
enter
leave
inc
dec
jmp
lahf
bound
jge
cmp
ljmp
jp
insl
or
jb
icebp
xchg
jbe
fmul
fiadds
adc
incl
cmpsl
jg
adc
loopne
push
push
fstpt
rcrb
stos
jne
adc
cmp
jnp
call
xor
bound
xchg
out
mov
sbb
mov
dec
stc
nop
push
adc
mov
and
icebp
xlat
sbb
cmpsl
iret
push
mov
xor
decl
insl
aaa
push
inc
subl
cli
adc
cmp
push
out
and
push
pop
jno
mov
sbb
jmp
jbe
incb
or
xor
dec
push
xchg
pusha
leave
repnz
mov
inc
sub
mov
jmp
out
and
cmp
pop
dec
adc
addr16
sub
fidivrl
xor
jae
jg
inc
pusha
stos
push
sub
mov
dec
sti
sub
dec
popf
xchg
push
imul
xor
in
imul
and
adc
dec
add
sbb
mov
dec
jle
ljmp
in
add
mov
jno
add
mov
pop
mov
repnz
shlb
sub
decl
fs
mov
mov
dec
repnz
mov
shll
and
dec
andb
cltd
lock
rorl
jecxz
jnp
cmp
test
roll
inc
dec
inc
or
mov
jnp
cmp
stos
pop
in
cmc
adc
sub
jle
lahf
sahf
stos
aas
loopne
shll
push
clc
push
call
cmc
mov
mov
inc
push
rcl
test
fidivrs
cld
adc
loopne
lcall
divb
icebp
pop
xor
ljmp
out
xor
mov
or
decl
cwtl
repnz
mov
and
mov
aas
xor
inc
pop
addr16
incl
std
or
mov
inc
sbb
mov
adc
pop
adc
pushl
push
dec
jl
jmp
push
in
or
mov
ret
fildl
and
cwtl
cmp
jns
cmp
jnp
cmp
pop
cli
xor
shrb
movq
lds
mov
mov
jmp
push
add
les
dec
loop
mov
out
mov
in
subb
clc
hlt
ljmp
inc
jl
fists
sub
xor
in
shl
xchg
xor
loopne
or
cwtl
xchg
les
jg
mov
jae
push
mov
cmpsl
mov
push
fbstp
jg
jbe
lea
shll
lods
lcall
into
lds
mov
xor
or
nop
mov
jge
or
es
jb
dec
mov
ret
gs
mov
leave
mov
fistpll
lods
call
cmp
lds
decl
cli
inc
outsl
popa
jmp
push
push
icebp
pop
arpl
pop
xchg
jmp
jmp
jmp
jo
mov
pushl
mov
pop
lock
jbe
out
or
sub
movsl
incl
movsb
dec
adc
sub
pop
inc
mov
movsl
sub
lea
dec
insb
movsl
xor
movsl
jno
cmp
aam
int
les
popa
fbld
aad
jge
mov
dec
cmp
aam
rcll
inc
xchg
cltd
out
popf
inc
adc
and
and
adc
lcall
mov
fstps
hlt
popf
lret
ret
xor
push
or
mov
jge
in
cmp
push
sub
popf
and
data16
dec
inc
jge
push
adc
pop
ret
or
in
xchg
ljmp
mov
push
outsb
cwtl
dec
xchg
shrl
pop
adc
dec
sub
daa
dec
jmp
push
insl
gs
jne
jae
out
loope
mov
jecxz
call
inc
mov
leave
adc
bound
lahf
subl
jg
or
sbb
shlb
pushl
insb
lea
add
out
cmp
jnp
repnz
cld
mov
lret
popf
addr16
cmp
rorb
push
dec
fidivrs
aas
pop
dec
xor
cmp
jge
push
sti
fnstcw
cs
rcrb
add
jo
mov
test
sti
sbb
decl
mov
int3
pop
pcmpgtd
xchg
out
pop
mov
push
mov
pusha
dec
imul
cmp
sbb
js
sbb
adc
out
in
test
xor
mov
dec
lods
aam
aam
mov
jmp
stc
or
movsl
jmp
or
push
jb
mov
addr16
lea
aam
lcall
push
negl
cmp
imul
test
mov
inc
inc
in
sarl
cmp
lcall
test
lods
adc
and
mov
repz
lds
roll
xchg
sub
pushl
adc
out
enter
in
sahf
jmp
xor
in
out
dec
dec
scas
xchg
stos
jle
pushl
std
es
xchg
dec
loop
sbb
pop
pusha
leave
or
andl
std
xor
xor
push
push
sub
rolb
fwait
aam
pop
std
aaa
mov
test
fcmovu
sub
scas
ficoms
jno
mov
mov
sbb
rcrl
loopne
repz
jmp
shrl
pop
out
jb
std
jle
jo
mov
jecxz
inc
in
sub
call
xchg
ret
xchg
sub
lahf
mov
iret
xlat
insl
cmpsb
xorl
push
fs
sbb
incl
sar
sbb
dec
dec
push
mov
aas
in
enter
mov
inc
jae
in
pushl
aad
add
cmp
jns
sub
mov
loop
in
push
add
or
in
jle
sti
gs
sti
jno
mov
in
xor
movsb
pushf
std
pop
aas
sti
out
jl
mov
mov
jp
mov
je
jge
and
arpl
dec
pusha
imul
and
pushl
xor
push
inc
cmp
add
leave
jg
dec
nop
dec
test
das
dec
or
cmp
jecxz
xchg
in
jne
push
out
jb
repnz
adc
and
push
push
dec
mov
inc
nop
into
or
pop
int3
aas
push
roll
call
jb
lcall
lret
aaa
iret
fcomp
into
shrb
xor
xor
fstps
ret
cmp
sahf
lods
movsb
push
jg
xor
mov
jno
adc
dec
ja
sbb
mov
cmp
lret
call
insl
mov
mov
cmp
test
je
dec
and
sbb
outsl
int
in
ljmp
dec
pushf
sub
sub
jnp
into
and
in
xor
je
sbb
jle
add
lret
movsl
in
mov
lcall
ds
mov
cmp
jmp
dec
movsl
xchg
adc
clc
sub
test
incl
aad
fidivs
orb
pop
icebp
insl
sti
ss
or
lock
fnsave
jnp
sub
dec
adc
inc
dec
or
push
xchg
dec
test
arpl
out
in
lds
mov
xor
push
test
lcall
aad
dec
fisubs
cmp
mov
insb
jg
pop
js
adc
cs
xchg
pusha
pop
sar
dec
sahf
shll
iret
cs
addb
add
int3
cwtl
lret
pop
fbstp
ljmp
icebp
pop
inc
dec
mov
xchg
mov
data16
jg
jge
dec
jne
cmpsb
push
inc
nop
movsl
popa
and
decl
inc
cmp
push
xchg
sub
lea
or
shr
inc
popl
dec
aam
incl
lock
xor
bound
sub
mov
das
pop
mov
adcl
lcall
push
test
and
push
cmpsb
mov
fnsave
dec
mov
stos
sub
cmc
dec
push
sahf
test
arpl
sub
push
ror
or
push
sub
ret
and
ljmp
xor
shlb
fwait
pusha
add
jmp
movsl
adc
mov
imul
pushl
aad
lret
fsubs
shl
and
pop
push
ficoms
mov
and
ja
jle
outsl
incl
cli
insb
xlat
sbb
andb
jae
fistpll
cmpsb
fldl
xlat
jae
lods
adc
incl
mov
or
cmp
mov
lds
jbe
and
adc
xchg
in
out
outsl
mov
jge
cmp
clc
aam
add
sub
xor
in
cld
ja
scas
or
jg
aaa
mov
fldlg2
mov
test
and
xor
xor
stos
inc
or
mov
int
or
jae
mov
mov
mov
popf
xchg
sarl
mov
cs
inc
push
adc
mov
icebp
loop
xchg
loop
out
cs
mov
es
es
cli
push
jl
lcall
mov
xlat
xor
shrl
sbb
bound
js
add
lods
pushf
inc
les
dec
pop
fmuls
sub
jmp
scas
xchg
popl
add
decl
mov
push
jl
cli
sub
in
ret
pop
sub
lock
rcrl
sub
jmp
sarl
mov
inc
fistpl
leave
outsb
test
mov
dec
inc
mov
mov
jmp
and
xor
popa
in
in
and
fnsetpm(287
or
aad
adc
icebp
mov
loope
jge
pushl
and
nop
fucom
cli
addr16
cmp
inc
mov
shlb
inc
int3
repz
fsts
lea
push
movsb
mov
mov
sub
mov
mov
ljmp
add
adc
je
mov
mov
movsb
scas
mov
pop
dec
sbb
call
pop
iret
adc
mov
xlat
pop
xor
loop
dec
mov
insl
pop
test
fs
xchg
dec
fcos
ljmp
mov
mov
shll
sbb
sbb
movsl
and
inc
mov
add
mov
addr16
mov
es
cmpb
pushl
mov
in
or
test
cwtl
sbb
mull
rcpps
jecxz
ja
dec
loope
xor
jmp
jecxz
fcomps
insb
mov
mov
cmp
xor
test
dec
cmc
push
add
fdivr
jns
shl
sub
dec
push
cmp
sbb
cli
leave
cwtl
aaa
inc
mov
cmp
lcall
mov
js
lret
xor
jne
daa
stos
cmp
fcomi
lea
insl
pop
xchg
or
jg
pushl
xchg
cmp
int
jl
shlb
rorl
mov
ljmp
adc
ds
mov
lcall
mov
push
push
mov
inc
or
xchg
sub
sbb
lcall
jmp
cmp
and
mov
roll
mov
sbb
decl
jg
insl
jl
cmp
in
and
sbb
fimull
jmp
add
sub
addr16
jb
cmp
jl
repz
push
push
ljmp
les
imul
repnz
mov
les
cmp
test
dec
test
lahf
add
cmpb
and
daa
je
ds
jp
loopne
decl
inc
in
push
cmp
cli
xor
in
leave
out
mov
mov
cmp
mov
sbb
sbb
mov
fs
dec
into
les
aad
mov
movsb
and
lcall
into
int
adc
jns
cmp
dec
outsb
xlat
inc
repnz
icebp
push
pop
mov
adc
and
incl
mov
sahf
rorl
sti
in
dec
xchg
imul
aam
rcrb
decl
ffree
push
je
mov
dec
fwait
mov
ret
push
subl
and
jecxz
push
in
adc
stos
inc
cmp
push
lcall
fnstenv
in
mov
mov
dec
jo
xchg
and
xor
call
cld
inc
call
nop
adc
jns
xor
into
pop
in
lea
aad
int3
lret
cmpsl
or
incl
inc
or
les
or
cmp
xlat
push
cld
xchg
cmp
ljmp
fidivrl
cmp
cli
arpl
out
std
xchg
inc
or
mov
add
and
jmp
jnp
and
jae,pn
or
imul
mov
xchg
and
fstpt
bound
decl
mov
mov
mov
clc
xchg
lea
sub
jb
push
out
or
jmp
inc
push
or
test
jbe
mov
jnp
std
rolb
shlb
int
xor
jne
pop
lcall
adc
jp
or
int
xchg
jl
enter
inc
inc
out
dec
jmp
incl
loopne
push
movl
pushf
sbb
pop
jle
aam
aad
push
rol
cmp
ljmp
cwtl
fs
sahf
push
mov
xlat
fnsave
hlt
adc
aaa
mov
inc
inc
xor
mov
dec
idiv
aas
push
dec
out
jb
mov
je
and
imul
xchg
test
je
push
call
push
push
or
clc
sbb
arpl
sarl
mov
popl
sti
call
imul
call
movsb
push
int
mov
jbe
mov
or
in
pop
push
cmp
scas
adc
push
lods
imul
cwtl
loop
jne
and
iret
fs
dec
jmp
add
ficoms
or
jb
pushf
into
push
jg
pop
fadd
dec
rcrl
push
aaa
cmp
js
pushl
std
pop
push
xchg
lret
inc
xchg
insb
fldcw
dec
cmp
pop
sub
jp
outsb
pop
mov
incl
push
or
or
and
in
fistps
ja
fs
mov
jo
mov
and
rcl
incl
mov
pop
lods
pop
lods
cmp
pop
dec
sti
stc
cld
sbbb
icebp
ljmp
adc
decl
sub
in
mov
jecxz
jmp
xchg
cld
xchg
repz
push
cs
push
xchg
in
jmp
insb
jae
js
add
popf
scas
push
mulb
jmp
dec
stos
movsb
icebp
out
imul
adc
xor
xchg
xor
and
bound
dec
cmpsl
push
mov
call
test
stos
stc
test
das
sbb
addr16
pop
cmp
leave
movsb
cmp
jmp
mov
mov
mov
hlt
xchg
push
sub
xchg
ljmp
mov
mov
out
lahf
inc
dec
fs
imul
jne
jae
mov
xchg
jmp
dec
int
and
out
sub
xor
mov
sar
ret
shll
sub
ljmp
sbb
mov
lock
mov
adcb
ljmp
jmp
sahf
aaa
and
enter
stos
in
jl
fwait
out
lock
xchg
mov
push
idiv
jmp
das
mov
loopne
outsb
movsl
mov
out
inc
dec
gs
lret
mov
cmpb
decl
xchg
cwtl
popf
int3
adc
and
mov
je
sub
xchg
stos
cltd
sbb
lods
sub
decl
push
inc
mov
jp
and
adc
scas
push
mov
cmp
lods
repnz
add
lcall
pop
dec
jns
lock
or
out
mov
je
lds
fadd
out
test
fsts
push
fcmovbe
mov
jb
xchg
dec
jne
xchg
stos
mov
mov
adc
lea
xchg
in
aad
incl
movsb
aas
mov
pop
mov
mov
mov
imulb
mov
ljmp
adc
out
dec
scas
adc
xchg
push
bound
pop
mov
out
adc
je
int
inc
xchg
cmpsl
outsb
push
dec
fdivrs
cmc
sahf
leave
sub
xchg
pop
dec
jne
dec
call
call
jns
jecxz
jle
adc
fadds
sti
dec
jl
jno
sub
cmp
xor
enter
mov
call
pop
mov
jns
adc
outsl
int
call
xchg
fildl
or
pushf
cmp
jmp
jg
push
insb
fidivs
loop
mov
js
dec
pop
orb
std
mov
ljmp
out
jle
in
aad
aas
idivl
hlt
mov
jmp
cmc
mov
lahf
call
outsb
lret
enter
dec
lea
ret
out
sbb
jne
ja
lcall
loop
fldt
pushl
inc
clc
or
inc
out
jl
mov
stc
aas
cmp
aas
push
adc
hlt
and
cmp
jecxz
pushl
mov
sti
mov
mov
bound
mov
xchg
add
fs
jmp
inc
pop
push
test
movsb
xchg
ret
dec
scas
nop
movsl
add
xor
ret
or
fsubp
pushl
lcall
shlb
pusha
push
pop
nop
imul
clts
jmp
insl
ret
decl
sahf
cmp
mov
mov
push
inc
cmp
xchg
movb
jmp
lret
pop
dec
sbb
pop
mov
cld
or
xlat
inc
and
xor
cmpsb
push
enter
pop
movsb
stc
pushl
enter
orb
ror
stos
movsl
scas
push
cmp
add
shlb
andb
lods
mov
mov
out
notb
xchg
test
and
and
lods
and
mov
pushl
roll
inc
addr16
mov
xor
pop
lret
or
stos
iret
sar
jno
push
movsl
dec
and
fxch
add
push
dec
outsl
sbb
pop
push
rclb
push
dec
arpl
ficompl
fisubrl
push
inc
sbb
jg
sahf
sbb
ret
movl
jmp
data16
int
ret
dec
dec
push
xchg
mov
mov
push
ljmp
decl
movb
rclb
push
cmp
inc
idivb
push
and
lea
push
dec
in
sbb
xchg
mov
push
dec
mov
and
movsl
addl
aad
xchg
xchg
sub
and
les
mov
pushl
mov
stos
lods
dec
xchg
iret
sbb
adc
jns
sub
or
and
cli
decl
push
sar
sar
cmpsb
push
fs
mov
fwait
dec
dec
dec
or
or
mov
add
fldt
scas
mov
pop
int3
clc
jmp
or
shld
std
ja
xchg
mov
int
andb
jecxz
leave
pushl
mov
or
stos
imulb
add
adc
fwait
mov
jl
call
xchg
xchg
pop
rorb
fnstenv
xor
xorb
out
cwtl
mov
insl
adc
out
lcall
inc
add
jbe
mov
stos
lret
push
andl
jecxz
test
ljmp
insl
loop
pop
stos
fisubrl
jg
cs
xchg
mov
push
cmpsl
bound
mov
rorl
inc
xor
mov
dec
or
pop
mov
push
push
xor
dec
mov
sub
xchg
movsl
sub
dec
cmp
mov
fsts
leave
pop
inc
dec
test
sbb
lret
mov
add
jb
fwait
std
cmp
lcall
mov
call
sbb
stos
sbb
xchg
mov
mov
push
add
adc
call
push
and
inc
int3
or
inc
or
loope
push
dec
jmp
lsl
jae
stos
in
mov
movsb
test
mov
lods
aam
inc
in
int
fmull
incl
aaa
mov
xchg
ret
add
adc
mov
inc
popl
inc
inc
sbb
mov
lcall
mov
pop
xchg
xchg
push
sbb
pop
repnz
shrl
into
dec
cmp
pop
insb
clc
repz
out
imul
mov
jp
add
mov
or
inc
and
jge
mov
jb
push
push
sub
adc
sbb
fistpll
lahf
adc
ljmp
add
mov
mov
jmp
jnp
sub
nop
mov
lea
fildll
pop
and
call
pusha
xchg
aad
fnstenv
push
pop
xchg
mov
sbb
jmp
xor
addr16
mov
jp
mov
xchg
in
int3
pushf
sub
push
ss
push
outsb
in
cltd
or
add
push
mov
movsb
shl
imul
mov
in
sbb
shlb
jg
or
sar
rcrb
ss
cmp
inc
jno
and
xchg
ret
popa
push
incl
adc
or
pop
mov
in
ja
cmp
insb
or
in
scas
mov
sub
push
mov
jmp
xor
sbb
xor
cmpsl
push
sbb
mov
jmp
dec
adc
stos
mov
addr16
ljmp
dec
das
pop
ret
inc
es
sbb
test
sub
dec
jb
stc
data16
outsl
and
push
scas
sub
das
fiaddl
stos
mov
xchg
sbbb
lcall
jmp
les
movsb
out
xor
out
je
dec
aas
inc
and
sbb
into
adc
rcr
pop
mov
jg
adc
clc
push
push
cltd
sub
jg
decl
mov
mov
and
cli
mov
rolb
push
mov
pop
add
call
lea
add
imul
add
and
jmp
sbb
ljmp
inc
outsb
adc
cmp
mov
and
jg
lds
inc
decb
pop
dec
arpl
out
add
jno
sub
daa
inc
cli
jb
dec
clc
pushf
xor
repz
jnp
and
push
xor
add
pushf
push
sti
cli
rclb
fs
sub
dec
or
or
int3
test
fwait
pusha
in
jmp
stc
sub
incl
xchg
dec
mov
or
and
mov
in
aas
test
decl
lahf
mov
div
xor
mov
xchg
mov
lods
cmp
cli
imul
jmp
push
inc
je
push
cmp
mov
push
jecxz
xor
roll
call
lahf
or
pushf
jnp
xlat
hlt
lods
adc
add
test
cmp
inc
imul
mov
clc
rcl
xchg
mov
push
jecxz
mov
add
jmp
sbb
mul
cmpsl
and
sti
mov
std
cs
mov
push
jge
adc
call
mov
jne
pop
lret
mov
mov
ds
or
pop
inc
inc
push
mov
jbe
setae
mov
mov
inc
fists
popf
mov
in
fwait
xchg
or
call
aad
or
sub
xchg
aam
xlat
fisubrs
jae
mov
jmp
sub
daa
ss
xor
cs
pop
pop
jno
jmp
jg
cmp
inc
cmp
jmp
sarl
lahf
test
divb
ja
fmull
mov
adc
call
andb
ljmp
out
sub
pushf
mov
adcb
pop
pop
adc
movsl
roll
pop
bound
incl
sbb
xor
adc
sti
jbe
cmpsb
out
fists
cmp
call
or
pop
cld
or
clc
pop
and
out
sub
lods
push
push
repz
xor
decl
subb
clc
mov
arpl
add
out
or
cmc
sub
into
int3
add
mov
nop
add
xchg
adc
jae
xor
mov
sbb
cmp
pop
add
decl
dec
sub
stos
out
push
xchg
fiadds
sbb
mov
sbb
ljmp
cmpsb
sub
mov
jle
cmp
adc
or
sub
ljmp
aad
xchg
jg
pop
mov
push
sub
cmp
and
mov
cltd
adc
jmp
cli
dec
adc
and
aaa
jmp
arpl
xchg
adc
in
pusha
push
fdivr
in
call
lods
and
push
lock
mov
out
enter
lds
ljmp
decl
mov
xchg
mov
icebp
imul
nop
add
mov
in
mov
dec
mov
jne
mov
repnz
loopne
inc
stos
aam
negb
xchg
movsb
push
rorl
ds
push
pop
lcall
cmp
push
sbb
mov
mov
pop
test
jb
ret
add
or
sbb
lcall
imul
outsb
inc
aaa
sub
or
lret
rcr
cmpsl
jmp
dec
jo
test
mov
ljmp
daa
jmp
repz
filds
decl
in
daa
xor
in
pop
mov
stos
pushf
pop
test
or
fildll
lods
adc
jmp
mov
adc
push
and
movsl
and
and
inc
push
stos
ss
jmp
lcall
jg
les
inc
das
shll
or
nop
push
jl
push
cmpsb
xlat
sar
out
sbb
loope
repz
sub
pop
leave
movsl
pop
mov
fcomip
adc
jnp
sub
out
mov
or
xor
push
das
cmpsl
xor
xchg
std
adc
decl
inc
adc
nop
push
rorl
inc
nop
sub
sahf
adc
push
in
in
cmp
dec
jbe
shr
pushf
sti
scas
or
push
xchg
xor
mov
jbe
push
repz
inc
add
cs
daa
lret
add
add
popa
xor
sti
mov
out
fisubs
out
incl
in
stos
stos
iret
mov
push
popf
xor
xor
adc
std
mov
mov
cs
movsb
fstpl
cmp
out
dec
ret
push
cwtl
nop
cltd
shl
xchg
push
push
sbb
ljmp
fs
adc
test
cwtl
dec
lcall
iret
lahf
cmp
int
dec
mov
pop
incl
call
fnstsw
and
xlat
lahf
movb
and
daa
arpl
jp
and
decl
pop
mov
leave
ror
test
in
xor
imul
cmp
incl
push
daa
mov
push
cmp
cmp
repz
xchg
into
popa
and
arpl
fdivr
inc
pushf
mov
jbe
repnz
into
jmp
jno
ds
cltd
mov
in
pop
movsl
xchg
movsl
negl
pop
mov
pop
arpl
shrb
arpl
sub
jp
mov
pop
addr16
xor
fwait
int3
mov
test
jae
jne
popa
jge
ja
pushl
loop
pop
nop
or
xor
jnp
jle
add
inc
fcompl
cli
mov
cmpsb
sar
incl
inc
inc
ja
dec
push
mov
sbb
xor
outsb
test
cmp
jo
ret
call
out
ficoml
jb
or
lcall
sbbb
lods
cli
cli
xchg
pop
call
jb
inc
pop
and
std
mov
add
shlb
mov
cwtl
inc
sub
decl
in
lret
test
fstl
inc
ret
xchg
mov
push
or
rcrl
pusha
mov
adc
jmp
mulb
or
clc
mov
xchg
pop
outsb
mov
mov
ss
inc
ss
ljmp
push
aas
mov
adc
repz
in
xor
sub
jmp
ret
mov
je
daa
add
and
rcl
jbe
dec
sbb
fnstsw
mov
lcall
enter
popa
mov
lods
jp
adc
jns
out
push
mov
incl
cmp
pusha
out
add
jl
dec
ljmp
ror
mov
inc
pop
pop
test
rcll
sbb
aas
js
imul
dec
insb
mov
mov
loopne
jmp
popl
push
or
nop
cmp
fildl
into
add
leave
add
adc
shrb
pushl
mov
sub
iret
movsb
adcb
mov
js
lret
adc
xor
decl
test
mov
sbb
hlt
mov
cmp
sbb
pop
int
inc
add
pop
js
pushl
popa
test
or
sub
inc
pop
std
mov
leave
int3
movb
mov
adc
hlt
cmp
pushl
fsubs
cs
fmuls
cmp
test
dec
sbb
sbb
call
pushf
imul
ret
enter
bound
ja
shl
or
enter
mov
lcall
loope
sbb
dec
stos
xor
adc
fsubs
lcall
mov
sar
ljmp
mov
cld
popl
add
add
sbb
jns
xchg
dec
xchg
clc
cmpsb
jmp
sbb
add
adc
add
and
sub
int
dec
mov
jmp
pop
lds
aas
jg
mov
push
ds
inc
push
insb
ret
xor
pushl
ljmp
negb
xchg
and
pop
inc
add
jmp
pop
pop
adc
pop
dec
out
cwtl
add
ljmp
jecxz
jb
cmp
dec
inc
fdiv
test
xor
inc
and
nop
cld
addr16
decl
addr16
andb
pop
xor
shl
out
mov
jno
movsl
imul
fildll
mov
cmp
lcall
lock
adc
loop
daa
push
and
cmpsb
jbe
fdivr
mov
sti
std
mov
adc
pusha
or
psubusw
ss
les
xor
out
call
aas
int
testb
mov
mov
into
xlat
pop
iret
repnz
inc
movsb
pop
adc
sbb
jp
inc
push
cmp
mov
sub
push
add
fldenv
cmp
ljmp
fisttps
imul
jno
call
daa
xorl
popf
xor
test
pushl
cmp
xchg
ljmp
push
jne
repz
jns
test
lods
cld
in
lcall
and
lock
xchg
pop
fldenv
mov
fwait
in
inc
pop
insl
sub
lcall
notb
pop
push
fsubrs
dec
push
gs
in
inc
enter
ds
jbe
jo
popa
jmp
incb
sbb
push
jg
pop
lret
stc
pop
out
loopne
cmp
adc
jl
pushl
in
dec
les
mov
push
fildl
inc
cmp
clc
iret
jmp
pushf
cmpsb
or
inc
ret
decl
in
jl
dec
inc
ds
orb
dec
mov
inc
nop
fstl
xchg
dec
out
pop
jmp
jle
adc
xor
push
sub
out
loop
aaa
adc
xor
rorb
mov
lcall
aam
scas
fnstsw
and
or
xor
pop
cwtl
dec
movsb
jo
scas
out
jg
mov
incl
scas
mov
aam
cmpsb
sub
fadds
cli
mov
mov
cmp
ljmp
lahf
js
inc
scas
xchg
adc
xor
repnz
adc
div
pop
jle
dec
add
jmp
push
adcb
or
out
test
loop
sub
popa
stos
jl
inc
mov
call
mov
pop
push
sub
mov
andl
sti
push
mov
arpl
xchg
incl
std
or
push
adc
cmp
aad
shr
lock
sahf
sahf
shrb
in
call
inc
pushf
arpl
cmp
mov
aam
push
jns
cmc
and
xchg
xchg
and
call
lods
dec
lds
in
rorl
stos
sti
vmovsd
dec
or
jae
jmp
insl
pop
je
xchg
aaa
or
pop
ret
cmp
mov
xchg
lret
mov
lcall
enter
xchg
push
stos
xor
int3
frstor
adc
fbld
lcall
dec
aad
or
mov
ja
arpl
xchg
fnstsw
or
sbb
lcall
jge
ficompl
jae
mov
xchg
dec
call
xchg
mov
push
pop
call
xchg
mov
cmp
mov
inc
out
jl
push
rolb
mov
xchg
rcr
ljmp
inc
push
xchg
fcompl
call
push
jmp
ret
in
stc
sbb
cmpsl
call
lea
popf
gs
sub
test
aas
loope
sub
push
in
sbb
jmp
mov
clc
and
aas
push
lea
inc
fwait
push
sbb
lcall
pop
push
ss
js
xlat
sbbl
ja
mov
in
or
fdivrl
stc
jmp
push
add
inc
imul
ss
pushf
aad
jo
aas
sub
push
lods
movsb
push
arpl
out
push
xchg
les
mov
fistpll
subb
mov
in
cmpl
pushf
lock
cmpsb
test
push
ss
cmp
sub
into
psllq
jp
fisttpll
lock
stc
sbb
popf
jnp
xchg
loopne
or
imulb
popa
shlb
int3
add
incl
push
xor
cmp
loope
sbb
cmpsb
inc
int
or
inc
andb
aas
decl
inc
bound
imul
std
sbb
call
daa
pop
rcll
ljmp
mov
ss
stc
pop
in
cltd
xor
roll
and
mov
xor
xchg
aaa
cmp
and
xor
gs
call
mov
xchg
addl
dec
ja
fdivl
loop
test
xchg
or
test
xchg
jmp
inc
mov
loop
cltd
fistpl
sbb
sbb
inc
int3
and
dec
xchg
ljmp
and
fstl
push
bound
xlat
in
mov
test
mov
mov
pushl
aam
aaa
arpl
mov
jo
dec
and
add
es
arpl
pushl
sbb
xor
in
mov
fs
cmpb
ljmp
stc
mov
cmpsl
daa
insl
repz
loop
pop
push
push
jmp
mov
sub
cs
jmp
rcrb
pushf
ficoms
leave
lcall
pop
inc
mov
aas
jne
push
imul
mov
scas
dec
sub
xchg
xchg
mov
mov
dec
and
dec
iret
imulb
arpl
sub
movsb
cld
push
icebp
and
ljmp
arpl
arpl
cmc
mov
pop
jbe
adc
popf
subl
decl
dec
adc
loopne
jp
cmp
movsl
aaa
out
dec
negl
ffreep
call
ds
mov
xor
cmpsl
das
fisttpll
fisubs
mov
jecxz
jl
add
clc
xchg
incl
add
mov
repz
loopne
xor
push
xor
stos
call
xchg
push
mov
or
sarl
and
mov
xor
aam
mov
pushf
xor
and
stos
incl
call
incb
dec
add
stc
ret
in
pop
lahf
mov
pop
in
mov
lcall
xchg
bswap
xchg
fsubr
scas
add
dec
mov
or
outsb
mov
add
mov
adc
call
xchg
daa
dec
addb
and
push
pop
adc
jb
stos
faddl
in
add
lcall
add
pusha
lret
jae
clc
jae
jg
pop
push
fidivrs
clc
ss
pop
cltd
sbb
aas
call
popf
pusha
dec
fimuls
or
pmullw
in
fs
scas
arpl
incl
dec
pop
sahf
cli
in
push
aad
mov
out
bound
xchg
mov
dec
fs
push
xlat
xor
or
cmc
scas
xchg
dec
add
sti
jns
inc
push
mov
iret
sbb
adc
pop
pop
and
ljmp
mov
push
frstor
xchg
jb
lea
sub
push
dec
aam
cmp
lcall
call
pop
pushf
mov
jb
aam
push
aas
sbb
push
mov
incl
in
shll
push
incl
xchg
sub
lea
push
mov
les
inc
sar
mov
xchg
out
mov
jecxz
pop
cltd
mov
mov
pop
leave
xchg
push
test
sbb
add
jmp
jno
jmp
sbb
inc
inc
jno
pop
in
lock
std
cmp
sbb
add
jmp
dec
and
jp
ds
add
jb
lret
jo
lods
push
leave
mov
pushl
mov
sti
push
pop
xlat
push
pop
mov
int
ss
mov
scas
sub
test
incl
xor
out
mov
push
or
fld
mov
push
addl
pushl
mov
mov
mov
test
cmp
insb
fldcw
popa
in
or
fcmovu
mov
mov
push
xchg
cli
cmp
in
xchg
jno
add
xor
sarl
sub
scas
xor
sti
decl
push
sarb
cmpb
cmpl
test
pop
inc
lock
test
inc
jmp
out
ljmp
stos
push
push
cmp
dec
adcb
test
cmpb
pop
ss
dec
adc
mov
pusha
mov
popa
pop
aad
pusha
outsb
add
popa
adc
add
test
jmp
mov
lcall
jmp
jmp
inc
mov
sbb
sbb
lcall
xchg
aam
sbb
mov
xchg
jne
push
in
adc
jle
sub
xor
jmp
clc
insl
insb
or
div
xchg
push
addb
dec
sbb
xchg
movsl
popf
lret
and
fistpll
fprem
imul
xlat
sub
sbb
lds
sub
dec
loopne
call
scas
not
add
pop
mov
mov
jmp
insl
sub
push
xchg
insl
incl
lahf
in
or
jns
adc
xor
leave
bound
jge
adc
pop
ljmp
loopne
adc
mov
jo
inc
ud2
adc
dec
rclb
bound
jmp
dec
push
repz
fsubp
lea
popf
mull
jmp
jmp
push
in
or
out
and
pop
insl
inc
incl
mov
push
out
out
push
push
lods
add
push
add
dec
dec
je
push
or
mov
or
cmpsb
pusha
pop
or
xchg
clc
in
jmp
cld
ja
out
fidivl
xchg
inc
in
lahf
loop
mov
mov
mov
push
sub
popa
inc
aas
pop
sarb
pop
ret
push
xor
or
xor
int3
or
stos
pushf
and
js
jae
cmpsb
out
jmp
mov
pcmpeqd
and
out
cmp
lea
sub
mov
jno
pop
jmp
cmp
push
rorl
pop
arpl
push
pop
mov
in
shl
loope
popf
jns
cmp
js
add
imul
les
adc
xor
mov
clc
push
int
mov
movsb
les
das
out
add
or
push
ljmp
shl
add
inc
aaa
frstor
mov
mov
push
pop
push
fistpll
push
sar
and
shlb
or
xchg
dec
xchg
sub
pop
lcall
inc
aam
cmp
decl
xchg
test
or
jnp
test
sub
cmpsb
ja
pop
and
lcall
incl
lret
out
mov
mov
adc
sbb
shlb
mov
mov
enter
ljmp
rolb
test
sti
cmpsl
adc
mov
cltd
rorl
push
pusha
add
fstps
jnp
lret
adc
sahf
jnp
sahf
in
mov
adc
mov
xchg
mov
sub
rorb
adc
orb
pop
xchg
or
sbb
repnz
xor
cmp
nop
cmp
rorl
jmp
jg
xchg
movsb
xorl
andl
ljmp
push
jp
movsl
inc
xchg
xchg
pop
sub
add
loope
in
mov
movsl
sti
dec
mov
mov
cmp
jmp
call
sbb
loopne
add
shll
pop
imul
outsb
aad
and
dec
sub
jmp
inc
es
xlat
loopne
movsl
push
xchg
jo
rcll
lds
and
fs
into
jmp
and
cmp
inc
push
cmp
out
enter
pop
scas
mov
in
mov
xor
fcoml
jmp
jge
mov
adcl
das
pop
fisttpll
test
andl
fisttpll
test
mov
push
jmp
test
jmp
pop
xchg
cmp
xchg
push
mov
in
push
push
jle
or
adc
mov
cmp
mov
mov
mov
leave
push
pushf
enter
scas
addr16
jbe
clc
sub
sbb
dec
xchg
add
xchg
mov
jge
ljmp
adc
in
es
aaa
jnp
stos
stos
inc
int3
cmp
arpl
int
in
adc
mov
push
push
cs
iret
in
es
xchg
mov
mov
nop
pop
aam
add
popf
add
push
imul
scas
inc
fnsave
xor
inc
fidivrs
jmp
icebp
js
decl
out
inc
and
inc
push
fwait
iret
mov
arpl
xchg
pop
cwtl
call
jl
fisubs
mov
les
aam
mov
sarb
call
mov
decl
outsb
mov
jp
dec
cli
inc
jge
scas
imul
pop
dec
mov
loop
push
ljmp
mov
lea
pop
inc
jne
jb
sub
addr16
addr16
push
mov
jb
adc
jmp
cmp
call
xchg
fldt
or
sbb
mov
sub
lods
adc
ljmp
jp
add
subb
and
stc
sub
popf
push
ljmp
dec
and
inc
and
fnstsw
loopne
lret
sub
cmp
mov
ljmp
into
ss
add
xchg
jecxz
push
cmc
pop
add
pushf
jnp
push
inc
xor
or
inc
sbb
dec
stos
mov
stc
test
add
pop
push
clc
mov
and
std
push
ss
dec
idiv
jmp
sub
pop
lods
sbb
cmp
mov
cmp
cmp
inc
jecxz
outsl
mov
dec
nop
sub
insl
xor
ficoml
jecxz
in
adc
mov
xorl
inc
jmp
icebp
aaa
das
daa
adc
jne
mov
into
jb
lahf
inc
mov
daa
in
out
sub
sub
lods
dec
push
lcall
mov
jg
cmc
dec
movsl
adc
out
arpl
or
add
jmp
aam
cwtl
imul
std
mov
test
mov
lock
lea
pushl
out
stc
sbb
addl
lret
pushaw
sub
sbb
insb
xor
cli
xor
and
pop
out
mov
cld
add
mov
daa
bound
add
incl
mov
insl
cmp
jg
stos
inc
sbb
mov
or
inc
test
call
mov
lcall
push
cmp
add
sahf
fwait
out
incb
pop
mov
cmp
cltd
push
ficomps
and
dec
mov
jecxz
test
dec
jl
enter
cmp
ja
imul
fsubrs
fcompl
xchg
popf
imul
scas
hlt
xchg
mov
xchg
mov
push
mov
lcall
shr
ja
mov
sbb
pop
scas
pushf
pop
add
lahf
or
ljmp
mov
dec
add
test
xor
fnsave
fs
lods
in
nop
out
pushl
xchg
sbb
adc
cmp
movsl
add
aas
or
adc
mov
decl
mov
nop
mov
lahf
sbb
fwait
cmp
mov
jmp
mov
icebp
stos
mov
popf
sbb
fwait
nop
xchg
out
mov
dec
xchg
push
push
inc
xor
ss
shl
icebp
testb
push
scas
dec
loop
jmp
popa
in
mov
jnp
pop
jne
pop
repnz
lds
cmp
push
stos
xlat
das
dec
stc
insl
push
xor
jp
mov
fldl
lea
add
add
adc
iret
sbbb
mov
jp
dec
mov
adc
frstor
sub
jns
jbe
dec
jp
test
call
in
sub
lods
pop
adc
cmp
push
leave
inc
push
jno
jns
test
movsb
jmp
jl
jge
inc
sub
lea
xchg
pop
fs
cltd
xchg
mov
sar
incl
insl
pop
push
dec
scas
xor
ret
movsl
or
or
xchg
sahf
push
cwtl
in
push
mov
call
loope
pusha
add
lret
outsb
xchg
sbb
mov
fisubrs
mov
inc
loope
cmpl
call
xor
in
dec
es
sbb
pop
in
push
mov
mov
adc
incl
rcr
gs
dec
divl
scas
mov
insb
push
mov
arpl
int3
and
jmp
incl
xor
mov
lds
icebp
jecxz
dec
rcrb
jg
mov
pop
test
lcall
add
and
mov
push
adc
sub
fisubl
fdivrs
xchg
push
testb
imul
ljmp
add
xor
gs
add
cmp
dec
out
pop
mov
cmp
dec
xchg
jg,pn
call
inc
insl
divb
add
stos
stc
mov
inc
inc
cmpl
jmp
xor
push
sbb
es
jle
sarl
mov
out
out
movsb
mov
mov
pop
pushl
ljmp
inc
scas
lods
scas
jle
or
cmp
sub
mov
jns
mov
or
adc
insb
repnz
dec
imul
or
fisttpll
xor
jmp
dec
outsb
mov
pop
in
fldcw
xor
jae
adc
jae
sub
xchg
ds
insb
popf
xchg
mov
stos
sbb
pop
mov
sbb
imul
or
dec
mov
iret
inc
jmp
mov
imul
jge
mov
pushf
pop
sub
lret
paddd
leave
sub
sub
or
or
inc
xor
jae
pop
cmp
in
rclb
cwtl
gs
test
les
call
mov
outsl
mov
leave
aam
imull
sbb
cli
cmpsl
ret
and
cmc
loopne
jmp
je
mov
fildl
imulb
push
sub
shlb
call
insl
out
jne
divb
sub
jmp
jae
jl
clc
push
cmp
cmp
mov
dec
jecxz
shll
dec
dec
jne
pusha
js
out
sub
mov
jmp
movsl
jmp
dec
and
inc
movsb
ljmp
pop
stc
inc
mov
add
push
ud0
pushl
and
pusha
xchg
push
jne
or
lret
jl
test
ret
xor
pop
decl
adc
pop
xor
addr16
and
hlt
push
jne
add
cmpsl
pop
adc
sbb
incl
dec
xor
push
lea
mov
ss
fbld
insb
pop
pop
inc
push
push
rcrl
cmp
sarl
lock
fdivl
mov
xchg
int
mov
enter
dec
hlt
xchg
and
pop
push
addr16
jo
test
movsb
ds
or
add
stc
in
cmp
mov
adc
mov
loope
jne
insl
cmp
lods
push
add
ljmp
xor
jge
add
cs
cwtl
sub
and
inc
jmp
xchg
incl
dec
jg
shl
add
adc
ss
mov
stos
push
cwtl
icebp
dec
push
mov
lods
ret
jo
cwtl
sub
notb
jl
mov
pop
pop
mov
sti
orb
inc
lds
fldenv
iret
sti
repnz
add
sub
jae
flds
ret
lret
call
cltd
or
adc
cmpsl
sbb
xor
lcall
aam
mov
ret
fstp
call
fsub
and
les
fldl
dec
adc
push
outsb
das
add
push
sahf
lods
loope
in
push
pushl
sti
ficoml
fisubrs
cmpb
test
ret
mov
idiv
in
popa
in
scas
mov
aaa
mov
es
or
pushl
mov
pop
cmp
ds
jmp
in
adc
cmp
and
ja
push
jae
dec
or
cmp
add
decl
pop
pop
jbe
rcll
dec
nop
call
mov
push
pop
or
inc
push
mov
inc
popf
int
jmp
rclb
test
test
adc
je
and
test
cmp
shrb
rorl
jmp
sbbb
orb
push
inc
inc
lea
bound
xchg
pop
jbe
adc
push
mov
add
cmp
push
mov
sub
mov
mov
jle
jno
xor
sub
das
mov
hlt
add
or
mov
fwait
sbb
push
fbld
in
xchg
xlat
cmpb
fucomp
mov
repz
jnp
sub
xor
adc
dec
shr
lcall
mov
cmp
arpl
test
add
xchg
push
push
stos
sbb
jg
sar
inc
call
jmp
jle
jbe
clc
repnz
mov
pop
or
mov
in
sbb
push
daa
mov
pop
mulb
mov
add
call
mov
jecxz
movsl
repnz
push
add
add
jp
cmp
push
sub
push
push
cmp
roll
cmp
testb
jecxz
and
push
mov
dec
loop
out
incl
fbld
lahf
jge
sub
inc
cmc
pop
and
jnp
sub
iret
sub
loope
mov
or
arpl
push
std
std
sbb
cmp
arpl
ljmp
loopne
lret
xor
out
aad
idiv
ljmp
cwtl
das
js
aam
adc
fcoms
jmp
sub
aas
sbb
add
gs
dec
sbb
sti
pop
pop
push
inc
addr16
arpl
inc
jnp
shrl
push
cmp
test
cmp
ljmp
jbe
cmp
lods
fidivrl
mov
call
rclb
gs
into
push
xchg
and
adc
or
xchg
fbld
push
inc
cmp
incl
rcr
pop
jg
jo
lods
mov
nop
scas
dec
es
loop
inc
aad
mov
rcl
and
call
test
test
es
lahf
xor
mov
out
jg
cmp
into
scas
lock
in
lcall
cmp
jae
stos
push
xor
add
mov
nop
or
xchg
subb
jg
lcall
push
or
outsl
cs
adc
xor
mov
fnstsw
dec
aaa
dec
negl
cmp
ljmp
sub
dec
add
xor
cmp
or
in
out
hlt
repnz
xor
jge
fiaddl
mov
fisttps
jne
inc
sub
ds
fs
jae
adc
add
call
iret
jl
add
lods
adc
jbe
xchg
mov
das
lds
jecxz
jle
sbb
test
inc
adc
mov
lods
dec
fiaddl
sbb
sbb
into
into
mov
cmp
add
mov
push
adc
mov
pushl
shrb
push
mov
mov
and
aam
idiv
cmp
ds
mov
push
add
cltd
ret
jno
es
xchg
cld
inc
stc
pop
dec
xchg
jmp
sbb
mov
lock
mov
idivl
ror
sbb
mov
fidivs
subb
data16
aad
std
js
xor
cmp
inc
or
aaa
jno
ds
ljmp
pop
popl
icebp
cld
jnp
hlt
pop
jl
loope
push
adc
pushf
adc
andb
pushl
addr16
inc
pop
rcr
sbb
test
jno
xor
cmp
cmp
push
push
push
fidivs
mov
add
and
in
pop
mov
inc
scas
xchg
sub
push
and
inc
cltd
aad
jge
cmp
roll
daa
les
jne
in
mov
lods
push
lcall
jg
jmp
xor
cmpsl
xor
xchg
pusha
push
adc
push
in
mov
ljmp
add
and
rcrb
xchg
inc
mov
mov
ss
enter
pop
repnz
decl
dec
pushf
popf
sub
pop
imul
repz
sub
enter
cmp
je
into
mov
and
jnp
push
xor
mov
pop
mov
fists
xchg
xchg
jp
dec
lods
int
jecxz
dec
pcmpeqb
inc
sub
jbe
dec
push
pusha
xchg
popf
mov
int3
scas
cltd
shrl
incl
aaa
xchg
xlat
clc
loopne
mov
std
test
lea
loop
pop
cmp
fstl
fdivrs
fisttps
icebp
mov
adc
mov
pop
test
stos
or
movsl
cld
xor
cmp
shrl
fstpt
loop
aad
sti
faddp
movsl
mov
mov
clc
popa
icebp
adc
jne
mov
scas
add
dec
inc
push
inc
fisubl
push
mov
mov
aaa
in
add
adc
ljmp
jge
xor
sub
stos
adc
test
hlt
mov
lcall
add
loope
shll
mov
ljmp
and
mov
scas
loop
movsl
je
sub
cwtl
int
or
rclb
sti
clc
jmp
or
mov
or
aam
pop
fldenv
dec
imulb
mov
xchg
xchg
and
pushl
adc
nop
xchg
cmp
cmp
dec
jmp
or
inc
pop
ja
or
insl
jno
fbstp
out
push
push
pop
cmp
dec
lods
jmp
mov
ss
push
mov
and
icebp
loope
dec
xor
fwait
mov
insb
xchg
mov
loop
jne
pushl
jge
xor
cmp
push
fs
cltd
pop
xor
sahf
test
lcall
xchg
jne
paddq
je
sbb
in
fists
popl
push
mov
incl
mov
test
and
add
je
je
loope
xchg
sub
incl
stc
fdivrs
xchg
push
jmp
add
or
sbb
stc
lock
push
fstpl
arpl
shrb
aas
or
jle
push
mov
test
inc
inc
or
jmp
mulb
cmp
xor
loopne
das
jne
jno
cmpsb
jns
mov
inc
mov
push
cmp
cmc
mov
in
inc
mov
test
jmp
xchg
ljmp
jo
mov
xor
aaa
and
test
insb
scas
pop
ds
arpl
mov
fwait
test
dec
or
jp
jl
jo
pop
stos
lcall
cld
inc
repnz
pop
mov
mov
insb
imul
jl
inc
daa
pop
jecxz
outsb
push
ds
out
leave
adc
ljmp
jbe
and
lods
imul
cmp
xor
test
lea
jae
out
decl
insb
shl
aas
icebp
lds
adc
orb
shrb
and
imul
push
dec
out
gs
pop
jecxz
sbb
lods
std
adcl
incl
ficompl
jg
add
rclb
jnp
cld
inc
and
and
out
xchg
pop
xor
loop
xchg
xchg
adc
adc
inc
inc
cld
movsl
sti
mov
jns
and
cmp
stos
or
test
or
cli
xchg
xchg
in
sbb
xchg
movsb
mov
call
xchg
std
shlb
or
lret
and
jmp
push
xchg
mov
cmpsb
push
sbb
movsl
call
aaa
pop
in
push
cmp
lret
out
stc
not
stos
lods
popf
loopne
out
mov
rclb
es
lcall
mov
mulb
and
cmp
in
out
jnp
push
push
imul
jns
or
adcl
call
test
and
jg
gs
movsl
jae
jns
roll
aam
mov
add
or
inc
in
jp
imul
sbb
xchg
loopne
jb
inc
nop
or
mov
shr
mov
lcall
hlt
add
jle
or
rclb
or
fidivrl
dec
pusha
fdivr
jmp
sub
sbb
pop
imul
sub
cmpsl
mov
jbe,pn
inc
lods
adc
xor
cmovne
imul
decl
xchg
xorl
xor
adc
loopne
adc
lods
pop
je
call
lahf
mov
loop
cmpsl
pop
popf
xor
sub
push
cs
xor
xchg
dec
jb
test
loop
sbb
icebp
lret
bnd
dec
mov
icebp
ret
xor
xchg
sahf
add
xchg
xchg
inc
filds
or
push
lret
mov
mov
stc
xchg
in
mov
sub
lods
call
xchg
pop
inc
jecxz
pop
sub
shlb
bound
pop
je
lret
test
subl
cmp
push
lret
data16
adc
mov
mov
jbe
out
es
dec
pop
jmp
cmp
sbb
daa
mov
dec
lea
mov
das
dec
stos
or
sbb
mov
out
gs
and
stos
leave
out
xchg
lods
loopne
out
ljmp
lea
adc
inc
js
int
call
clc
push
push
mov
cmp
cmp
mov
fbstp
inc
test
decl
rcl
cs
xor
dec
ret
adc
fistpl
sub
arpl
popf
adc
pushl
scas
dec
pop
test
bound
push
sbb
xchg
inc
or
and
js
into
dec
push
sub
dec
xor
push
daa
mov
inc
push
sbb
sti
jnp
pop
cli
add
xor
mov
incl
jb
jb
dec
js
dec
sbb
scas
mov
cltd
fidivl
ds
or
decl
orb
in
xchg
push
icebp
add
sub
push
cs
repz
ja
mov
sti
fsts
movsb
mov
pushl
xchg
lea
push
dec
xor
sub
ret
and
and
loop
int
nop
add
inc
jmp
mov
adc
int3
mov
adc
xor
cmpsl
dec
into
xchg
add
movsl
cld
ret
cmc
sbb
dec
sub
xor
pop
inc
inc
movsl
aam
and
push
call
pop
mov
pop
add
fisubrs
dec
shr
fwait
jne
xor
jns
push
sbb
bound
inc
cld
out
dec
add
xor
and
mov
les
das
fldl
cmpsb
dec
mov
mov
incl
in
push
mov
or
aaa
aam
xchg
jns
loop
xor
fwait
ljmp
jmp
shrb
push
je
adc
pop
rcrb
push
and
call
or
stc
aad
or
xchg
rcr
notl
jbe
pop
xor
iret
out
mov
add
adc
mov
mov
lock
arpl
xchg
divb
mov
call
clc
gs
xchg
fimull
arpl
cmp
mov
pop
cmp
unpckhps
sahf
in
hlt
fimuls
incl
and
andb
and
stos
imul
loop
cltd
fwait
cmp
xchg
mov
mov
fisttpl
outsl
sub
clc
xchg
addr16
fs
add
sbb
pop
call
aad
fistpl
aas
jl
sub
ficomps
psrad
movsl
outsl
repz
adc
lock
call
negl
andl
xlat
xor
lahf
push
xor
push
out
and
incl
jbe
mov
jp
lcall
in
push
shll
outsb
xchg
sbb
cmp
scas
in
pushl
hlt
mov
mov
jl
xchg
cld
cwtl
shrb
push
inc
call
imul
jmp
and
add
jns
push
mov
ljmp
out
jns
andps
cmpb
push
ret
mov
sbb
cmp
jmp
in
sbb
or
mov
in
dec
inc
in
movsl
bnd
ljmp
ss
cli
cmp
push
push
movl
dec
shr
mov
ljmp
fldenv
call
push
jbe
sti
mov
imul
push
hlt
int
aad
call
xchg
xor
mov
fcomps
loopne
dec
in
std
and
shlb
testl
call
stos
and
jne
cmp
sti
out
fbld
inc
push
adc
cs
repnz
stc
xor
stc
rcl
out
jns
call
xchg
cmp
loop
push
jno
mov
pop
je
sub
gs
sub
jns
xlat
mov
push
mov
ffree
push
mov
xchg
cmpsl
in
mov
mov
xor
test
movsb
pop
pusha
addl
mov
scas
push
outsb
sbb
pop
add
add
add
mov
decl
inc
add
add
inc
add
add
imul
insb
gs
ljmp
arpl
inc
jb
popa
je
push
push
push
imul
jb
jg
gs
insb
insb
outsl
arpl
add
je
jb
arpl
fs
jae
add
pop
sti
incl
dec
outsl
popa
fs
imul
sbb
popa
outsb
adc
mov
dec
gs
jo
cmp
jb
imul
popa
rcrl
dec
sub
push
push
je
xorl
push
gs
outsb
push
jg
gs
js
gs
inc
inc
imul
fs
fcomps
insb
gs
and
inc
js
mov
fsubrp
jb
je
sub
adcl
das
pusha
aaa
sbb
popa
insl
lods
test
scas
loope
imul
je
je
and
push
cmp
ja
fsubrs
add
das
push
jne
fs
lahf
std
incl
popa
jb
outsl
dec
jne
je
inc
jns
jg
popa
jae
inc
jb
outsl
mov
out
ss
cmp
mov
inc
outsl
jne
cltd
jp
push
jns
inc
inc
gs
outsl
xor
je
inc
shrl
popa
insb
push
mov
insb
and
mov
insb
jne
or
loope
xor
or
scas
add
dec
outsb
aaa
jae
jg
lret
imul
outsb
arpl
jmp
cmp
lock
jb
add
dec
pop
xchg
add
adc
inc
gs
pushl
sub
add
inc
gs
jb
jns
cmp
decl
gs
push
gs
outsl
jb
arpl
jge
loopne
push
imul
inc
cwtl
push
push
frstor
jns
je
insl
push
imul
gs
jbe
inc
popa
je
or
jo
or
xor
pop
gs
imul
mov
add
js
jae
bound
addr16
sub
jb
or
inc
inc
outsl
outsb
jae
insb
je
dec
clc
gs
je
insb
ljmp
jle
aad
in
mov
outsb
imul
cmp
push
or
dec
inc
dec
std
sbb
dec
jae
imul
dec
push
insb
gs
pop
jecxz
jbe
gs
push
je
push
outsb
ja
outsb
xchg
mov
xor
fwait
push
add
xchg
push
jne
or
outsl
push
lods
pop
dec
outsl
pop
gs
aaa
jnp
fwait
dec
or
popa
jo
sbb
int3
pushf
sub
test
xor
mov
pop
incb
data16
push
jae
jb
gs
mov
lcall
inc
add
inc
outsb
jne
testb
repnz
push
pop
outsl
outsb
mov
sbb
int3
in
mov
jb
xchg
outsb
xchg
pmulhrw
mov
jle
popa
jb
outsl
shl
popa
bound
add
push
inc
add
dec
add
add
mov
out
dec
adc
add
add
add
add
mov
adc
fidivrs
cld
dec
push
or
add
in
ret
sahf
jmp
add
add
add
adc
xor
adc
add
sub
add
int3
lds
or
sub
out
jg
pusha
add
mov
adc
hlt
adc
mov
or
add
add
sub
je,pn
js
adc
xchg
and
jae
out
jmp
adc
and
fnsave
cli
add
jb
pusha
add
push
cmp
outsb
cwtl
jnp
push
add
inc
cs
pop
testl
push
cmp
pop
push
mov
daa
shrb
sub
xor
sti
inc
sub
add
divl
arpl
adc
pop
lahf
mov
add
jb
loopne
out
or
sub
add
adc
cmp
pop
dec
inc
add
adc
pusha
push
add
add
sub
adc
add
add
add
inc
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
inc
add
faddl
add
