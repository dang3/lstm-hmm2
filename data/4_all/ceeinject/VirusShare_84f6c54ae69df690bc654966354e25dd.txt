call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cltd
mov
stos
jae
and
xor
ljmp
orl
mov
mov
inc
mov
arpl
adc
and
xor
rorl
pop
ret
sub
sbb
dec
inc
jp
push
and
push
sub
push
sbb
sub
sub
push
xchg
dec
repz
cmp
cs
ss
inc
cmp
in
lret
mov
cmp
out
movsl
pop
push
outsb
call
cmp
das
hlt
mov
ja
addr16
mov
push
push
jp
xchg
fs
mov
adc
push
dec
inc
or
das
pop
sub
xchg
setae
adc
push
pop
arpl
and
jnp
int3
sbb
aam
movsl
rorb
jnp
push
gs
mov
pushf
aaa
xchg
and
jno
popa
xor
dec
mov
cmp
dec
push
andb
mov
arpl
cmp
repnz
ret
mov
fsubp
xlat
rcrb
out
pop
imul
add
sub
fistl
ljmp
push
repz
push
into
jb
push
movsb
jge
dec
ljmp
mov
pushf
sub
and
adc
out
push
enter
mov
scas
and
inc
mov
mov
xchg
push
mov
icebp
and
testb
fildl
stc
push
mov
adc
and
xor
ret
or
cmp
sub
pop
orl
mov
mov
arpl
adc
and
xor
ret
or
cmp
sub
pop
orl
mov
sub
js
push
adc
lahf
dec
stc
mov
stc
scas
mov
adc
mov
ja
sbb
xchg
aas
pop
jl
rcrl
inc
pop
movl
jns
and
scas
mov
scas
xor
pop
gs
rcrl
das
mov
out
ss
setg
into
dec
mov
aam
testb
aas
or
outsl
mov
add
add
dec
xchg
pushf
xchg
jo
add
pop
jns
pop
mov
in
popf
xchg
pop
xlat
inc
or
jae
pushf
sti
sti
clc
call
mov
int
xor
cmp
push
pop
mov
push
mov
xor
fwait
aad
dec
push
stos
ds
adc
push
aas
insb
jo
pop
rcll
outsb
leave
test
adcl
outsl
notb
jnp
data16
movsl
dec
das
add
repnz
or
js
or
cmp
inc
dec
jns
pop
sub
addr16
mov
std
xchg
and
sbbl
fucomp
bound
jecxz
mov
mov
xor
cmp
pushl
stc
movsl
out
xchg
or
ds
testb
jb
stos
push
fildll
dec
inc
je
cwtl
data16
add
cmpsl
push
or
les
imul
test
and
sbb
out
outsb
dec
aam
ficoml
mov
cli
je
popf
out
sub
jge
push
movsl
ljmp
cmpl
in
xchg
add
popf
in
xchg
push
lea
aad
jle
aaa
jo
xchg
mov
push
fsubrl
out
stos
inc
nop
push
cmp
int3
lea
xor
inc
sbb
pop
push
jge
xchg
add
adc
aaa
cs
repnz
inc
fisttpl
xor
fistpl
orb
push
sti
lret
fcoml
push
movsl
pop
xchg
std
xorb
mov
mov
push
jmp
dec
push
aad
loop
fdivrl
pop
cmp
cmpsl
mov
in
sub
mov
xchg
jge
push
pop
lock
inc
call
sub
leave
inc
push
xchg
lock
nop
push
ja
ret
cmc
mov
jge
jbe
or
pop
jnp
fwait
xchg
xor
mov
jp
test
fsubs
cwtl
dec
push
push
adc
jg
dec
nop
loope
fidivs
or
frstor
inc
lods
pop
mov
mov
frndint
or
daa
sub
in
adc
daa
jae
pusha
stos
int
pop
dec
xchg
jnp
movsl
add
push
cmc
rcr
sbb
or
sub
insl
popa
and
sbb
xor
in
cltd
or
fcmovne
enter
stc
mov
call
testb
jl
push
or
mov
jae
sub
adc
movsl
mov
roll
mov
clc
or
or
add
fistpl
jo
pop
dec
sub
push
nop
movsb
jns
inc
mov
mov
lahf
movsl
cmc
and
adc
jmp
mov
in
out
jbe
lret
subl
es
mov
mov
cmp
cmpsl
rcrb
xchg
xchg
jne
xchg
cmpsb
sbb
pop
test
lahf
jmp
add
push
lods
sti
rol
movsl
add
pop
sarb
sbb
mov
push
fdivrl
movsl
test
insl
add
inc
idiv
push
pop
inc
sbb
cs
dec
aam
push
fidivl
lods
jbe
movsl
xor
push
test
repnz
iret
out
push
test
stos
pushf
and
inc
pop
test
inc
pop
cs
fdivl
jb
gs
jae
pop
xor
shlb
inc
and
repz
xchg
mov
test
jl
mov
xchg
inc
icebp
in
ret
cld
and
imul
insb
ljmp
addb
nop
sarb
ds
dec
ja
das
fnstenv
in
dec
je
pushf
outsl
sbb
jl
mov
subb
insl
push
mov
sub
sahf
lods
loop
mov
pusha
enter
pop
es
mov
lods
mov
dec
imul
mov
ss
jg
sbb
jns
mov
ror
sub
xchg
mov
pop
pop
and
xor
fidivl
imul
sub
adc
fsubl
pop
xchg
pop
adc
xchg
sbb
cmp
ficompl
sti
fcom
and
into
mov
xor
stc
cltd
add
xor
cld
shlb
jg
xchg
inc
sub
or
fst
sbb
lcall
mov
pop
sub
fsts
int
mov
ja
add
pop
orb
xchg
dec
xor
test
ret
stos
mov
stos
rolb
int
xchg
cld
adc
mov
adc
fisubrs
xchg
fidivrl
pop
test
and
and
ss
bound
pcmpgtd
stc
dec
push
jno
je
xchg
xchg
cmp
adc
pop
and
mov
cmpsb
data16
mov
dec
sbb
add
mov
lea
push
cmc
cmpsb
xlat
push
add
dec
repz
xchg
ss
mov
add
das
jmp
fildl
mov
xorl
xlat
dec
scas
xlat
push
xor
lret
fisttps
decl
mov
jae
lea
mov
add
call
jo
leave
adc
data16
sub
push
dec
inc
or
mov
xchg
mov
loopne
pop
sbb
cmp
outsl
lahf
mov
add
lds
cltd
xchg
lcall
jns
pop
or
idivb
sbb
cltd
das
mov
gs
fistpl
iret
cmp
stos
pop
push
xor
adc
rorl
mov
in
ror
or
fstpt
loop
inc
and
inc
arpl
mov
jmp
xchg
clc
lret
push
into
xor
movsb
mov
cmp
js
popf
in
arpl
mov
xor
cld
inc
jno
call
xchg
inc
pop
cmp
lcall
inc
in
stos
xor
lods
jb
cwtl
into
test
js
inc
in
int
sahf
lahf
enter
dec
sbb
push
mov
sbb
push
mov
jae
lock
nop
test
mov
loopne
mov
xlat
call
adc
or
rep
sbb
fcmovu
lahf
imul
xchg
adc
jne
add
jmp
leave
fwait
pop
xchg
in
arpl
sbb
inc
jp
inc
scas
mov
push
cmc
gs
cmp
add
jbe
cmpsb
mov
out
jno
cld
cmp
dec
sbb
adc
out
das
xorl
pop
lret
enter
call
pop
xchg
mov
xor
push
movsl
push
pop
jb
out
jae
lahf
sti
out
imul
pop
jo
mov
in
movsl
je
xor
rdtsc
leave
and
stos
or
cld
leave
jo
xlat
xor
dec
gs
insb
cli
push
mov
push
in
jmp
push
repnz
mov
lahf
sbb
xor
outsb
inc
sbb
stos
dec
js
aaa
out
adc
jne
lods
sub
das
loop
mov
mov
sub
lcall
test
js
cmp
xchg
leave
movsl
sub
sahf
mov
data16
adc
cwtl
loope
fbstp
xor
adc
inc
stos
fistl
mov
dec
cwtl
and
mov
test
out
lea
and
lret
popf
mov
inc
xor
mov
insb
or
or
jecxz
adc
pcmpeqd
or
lock
dec
aad
data16
iret
inc
in
lahf
negl
into
or
dec
es
out
dec
dec
xor
sbb
mov
mov
or
fcmovne
nop
out
adc
rcll
fwait
inc
and
ret
es
push
ds
cs
sbb
cltd
nop
enter
adc
loopne
lea
inc
jecxz
add
hlt
inc
jmp
or
imul
sbb
xchg
out
enter
push
iret
sbb
bound
imul
es
mov
aad
js
sub
dec
jns
mov
push
pop
pop
out
sbb
mov
push
ret
fcmovu
xchg
aad
in
xchg
push
aad
mov
cmp
xchg
fptan
sbb
add
inc
pushf
inc
pop
inc
dec
in
dec
adc
add
xor
sbb
lret
sbb
lock
inc
and
cmp
push
mov
jl
jle
fdiv
out
inc
xchg
outsb
inc
mov
dec
mov
jnp
push
inc
lock
dec
fldenv
andb
xchg
aam
xchg
mov
lahf
and
add
in
orb
push
jno
pop
xchg
repnz
xchg
mov
idivl
mov
inc
xlat
xchg
mov
adc
or
int
cmp
cmp
daa
js
adc
pop
cmpsb
cmc
mov
ja
add
xchg
mov
mov
pop
enter
mov
shl
jecxz
push
mov
ret
fsts
iret
adc
inc
and
test
addr16
mov
xor
dec
push
cltd
pop
aaa
loopne
cmp
repz
adcb
add
ja
dec
jge
mov
pop
in
cli
xor
sub
push
pop
outsl
std
jo
adc
and
idivl
repnz
in
aad
jp
fcompl
push
sbb
je
add
xchg
pop
aas
cmp
adc
js
popa
mov
push
jo
ret
out
bound
aad
and
dec
xor
mov
xchg
mov
cmp
sbbl
imul
push
mov
cmp
sbb
inc
push
push
jge
das
xchg
loopne
and
jae
inc
dec
mov
push
dec
fsts
jmp
inc
inc
pop
add
and
dec
repz
insl
gs
xchg
sub
mov
pop
das
cltd
popa
add
jo
lods
clc
ret
jg
or
pop
repnz
ror
sarb
je
iret
and
es
sub
shlb
inc
fistpl
adc
jmp
loop
push
out
in
subl
cmp
aaa
mov
mov
ds
movsb
fs
mov
sbb
faddl
xor
push
in
fimuls
sahf
inc
sbb
icebp
jbe
mov
xor
out
nop
jl
pushf
in
push
es
lret
daa
mov
push
mov
movsl
loopne
cmp
clc
push
out
iret
rol
lret
mov
aam
dec
adc
movsl
dec
mov
ja,pt
stc
mov
dec
jne
adc
mov
test
add
add
in
movsb
sti
lret
add
cmp
cmpsl
cld
push
fisttpl
fbstp
cltd
pop
dec
shlb
pmuludq
xor
rcr
cmp
cmpsb
pop
aam
xor
pop
lret
das
in
stc
lods
mov
push
and
imul
inc
test
repnz
addb
adc
mov
or
sub
cmp
sbb
cmp
and
push
cld
lods
jg
mov
loop
inc
xor
adc
aas
cli
xchg
inc
cmp
adc
lods
xchg
cmpb
sbb
add
inc
push
push
xchg
sbb
sbb
sub
scas
jl
lea
fbstp
sbbb
jmp
mov
ds
and
outsb
in
leave
int
loop
inc
mov
loope
sbb
repnz
lock
xorl
mov
imul
push
push
mov
push
adcl
pop
mov
sbb
jp
leave
pop
pop
mov
and
lret
fsubs
ja
cmp
aad
lret
or
mov
loope,pn
in
dec
and
gs
pop
enter
jge
jmp
cmp
mov
aam
dec
pop
test
sub
add
pop
and
call
ljmp
repnz
pop
imul
test
lock
xchg
cmp
hlt
xchg
shrl
and
sbb
and
outsb
movl
sbb
xlat
lcall
pop
lods
add
insb
adc
push
jnp
int
xchg
jle
out
push
mov
pop
dec
ljmp
pop
pop
out
mov
lret
mov
xsavec
xchg
mov
es
enter
jl
add
sahf
lock
inc
push
mov
xchg
jg
mov
inc
sbb
mov
xor
sti
adc
sbb
aaa
es
roll
adc
jns
test
repz
popf
dec
in
and
shlb
xchg
sarb
pop
repz
and
adc
cltd
in
push
push
pop
jnp
insb
cmp
cmc
sub
dec
xor
inc
shrb
adc
arpl
cmpsl
mov
shufps
dec
mov
inc
inc
fisttpll
push
shlb
aad
shrl
jnp
leave
push
shll
popf
xchg
and
mov
cmpsb
orb
test
or
push
push
sbb
pushf
iret
inc
pop
lock
in
data16
test
sub
adc
xor
cmpsl
push
pop
mov
push
sbbb
push
shll
sub
fdivrs
xor
push
popa
xchg
in
lcall
xor
cmp
sbb
lea
int3
cmpsl
or
push
loope
iret
mov
xor
xor
movsl
cmp
in
je
and
jmp
jo
inc
jmp
adc
dec
ja
xchg
pop
cmpsl
xchg
sbb
fisubrl
inc
xor
push
jo
inc
cmp
es
pop
lahf
dec
add
ss
leave
stos
aad
dec
fstl
incb
cwtl
ljmp
inc
stc
out
jge
or
xchg
adc
inc
mov
push
add
sub
dec
pop
sbb
sbb
mov
add
pop
fs
adc
xlat
in
and
decl
shl
or
icebp
in
enter
or
sub
xor
scas
dec
cmc
push
push
rcrl
dec
into
push
hlt
mov
jo
clc
out
push
pop
aam
aad
stc
dec
xor
lods
jg
pop
test
inc
cli
xchg
dec
sub
mov
xchg
xlat
sbb
xlat
loopne
shlb
in
aad
mov
insl
stc
sub
pop
jmp
sbb
xor
jnp
or
sahf
inc
push
lods
sub
pop
faddp
lea
out
xchg
clc
outsb
cmp
imul
repnz
xor
adc
xchg
lahf
xlat
pop
xchg
mov
mov
fst
sbb
iret
stos
lahf
outsl
xor
inc
fistl
test
jns
cmc
mov
mov
xchg
mov
adc
pop
mov
cmp
mov
aaa
jb
fmuls
xchg
sbb
mov
inc
add
push
sbb
xchg
dec
outsb
pop
pop
jge
pop
ret
sbb
orb
cld
frstor
adc
imul
xor
pop
jle
stos
inc
or
sub
jae
lods
pop
sub
fidivrs
loope
clc
cltd
lods
andl
push
fstpt
xor
test
icebp
fucompp
insl
xchg
movsb
mov
stos
push
mov
inc
daa
sub
jnp
imul
jbe
stc
loopne
xor
inc
sbb
rorl
nop
notl
fwait
jecxz
pop
sbb
in
pop
push
stos
mov
lock
jnp
push
cmp
jo
dec
movsl
xor
in
sbb
sub
into
jns
jg
sbb
aam
movsl
lea
cmpl
gs
or
fs
repz
and
push
data16
ljmp
inc
stos
or
fst
xlat
and
xchg
lea
dec
xor
movsl
dec
bound
and
mov
or
dec
mov
and
xchg
jbe
dec
fwait
dec
dec
jge
cltd
sbb
in
pop
test
mul
lds
lcall
lea
sbb
or
adc
jne
mov
ss
jge
cmp
mov
push
jge
pop
jns
mov
stc
lret
clc
nop
jo
ja
popa
jl
push
or
cld
push
push
jo
sub
dec
mov
pop
rclb
jns
popa
stc
orb
scas
pop
mov
mov
ss
cmp
push
pusha
mov
popa
ljmp
or
in
sbb
bndstx
pop
dec
push
adc
loope
jge
fwait
lret
sbb
movsl
or
mov
cmpsb
jae
dec
mov
ficoms
mov
cs
lret
movsl
jo
push
addr16
sbb
inc
lret
push
jno
push
jl
mov
push
push
jbe
xchg
cmp
and
mov
xlat
lret
xor
jg
adc
inc
mov
hlt
jp
mov
push
int3
sub
pop
pop
cmp
je
sbb
and
or
xchg
sbb
push
mov
xor
in
jo
sbb
iret
jnp
in
aaa
push
sbb
mov
addr16
orl
clc
or
ja
popa
jae
gs
nop
lahf
cmp
ret
sub
xchg
jbe
push
pusha
mov
mov
aas
lods
je
dec
jecxz
icebp
inc
fsts
inc
xchg
push
pop
insl
lds
pop
sub
jg
fmull
cmp
ret
int
pop
push
movsl
push
push
add
dec
push
out
or
dec
cmp
cmovl
xchg
lods
call
cmp
mov
out
pop
xor
sbb
into
scas
cmp
aas
scas
jnp
mov
outsl
shll
ss
and
movsb
pop
jbe
xor
jno
push
pop
mov
adcb
sub
fisubs
inc
enter
push
mov
pushl
cwtl
push
push
movsl
jns
shrl
ret
jmp
out
adcl
clc
repz
xor
ds
fwait
or
and
jle
aad
push
and
xor
dec
shl
xor
fdivrs
ret
pop
ljmp
jb
je
repz
push
jp
push
movb
xor
in
adc
and
cmpsl
push
or
shrb
in
sub
sbb
sti
ja
negl
xchg
cmp
pusha
out
cmp
enter
mov
xchg
xchg
jo
push
sbb
rclb
aad
dec
jo
push
cmpsb
pop
pushf
cmc
sbb
ljmp
sub
inc
mov
fsub
fstl
sub
gs
rcl
aam
dec
push
shll
xchg
popa
sbb
jns
sub
adc
fnstcw
jl
mov
mov
aam
push
pop
arpl
stos
adc
cmpsb
enter
push
jae
push
pop
aad
outsl
mov
and
pop
jb
arpl
shl
adc
pop
sbb
cs
movsb
xor
cld
sbb
mov
lcall
cmpsl
outsl
loopne
cmp
movsb
lcall
lock
data16
test
sbb
xchg
or
pop
test
stc
or
test
xor
dec
insb
cmpsl
pushf
jle
pop
fisubrl
pusha
js
pop
jb
push
out
arpl
push
fdivl
pop
popf
mov
insl
sarl
movsb
shrl
outsl
pushf
hlt
mov
xor
sub
xrelease
sahf
adc
adc
jp
lock
mov
sahf
cmpsl
jne
adc
pop
adc
inc
mov
pop
sub
xor
sahf
cmp
in
stos
ret
loop
dec
xor
aam
cmp
push
add
pop
pop
rcrb
mov
in
adc
cs
adc
outsl
xchg
fdivl
flds
sub
xor
js
adc
cltd
loopne
jno
push
test
icebp
test
lahf
jp
push
sub
cmp
inc
jp
jo
icebp
mov
movsb
in
mov
mov
push
add
sub
dec
mov
popf
sub
sub
xor
adc
cli
in
lea
aad
arpl
hlt
inc
ficompl
mov
inc
and
cmp
daa
xchg
lock
pop
sub
cwtl
mov
leave
std
cmp
and
mov
hlt
insb
pop
aaa
cmp
jp
js
cli
inc
mov
pop
or
ljmp
pop
out
push
lret
xchg
push
loop
xlat
sbbb
pop
in
aas
rcrl
mov
daa
shll
scas
xchg
sti
adc
jo
cmp
push
jp
push
pop
test
or
mov
jmp
mov
ja
mov
int
push
pop
stos
lods
add
xlat
fsubs
push
fbstp
cmc
cwtl
pop
hlt
shrb
pop
add
sub
inc
fistpl
push
fimuls
mov
dec
int3
lret
jnp
and
and
add
ffreep
std
dec
fldenv
push
int
daa
jo
jl
movb
stc
xchg
push
scas
xchg
lret
dec
or
shlb
fs
mov
adc
mov
loop
jb
rclb
std
mov
adc
and
xor
ret
or
cmp
sub
pop
orl
mov
mov
arpl
adc
and
xor
ret
or
cmp
sub
pop
orl
mov
mov
jae
add
adc
and
xor
ret
or
lret
repnz
sbbl
mov
push
loopne
mov
add
adc
and
sbb
cmc
jns
jecxz
test
pop
xchg
dec
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
pop
stos
imul
cmp
leave
sbb
sub
cmp
dec
mov
imul
pop
stos
imul
cmp
leave
sbb
sub
cmp
dec
mov
imul
pop
stos
imul
cmp
idivl
test
pop
stc
dec
fldt
std
sub
adc
stos
or
mov
add
jo
ret
aad
mov
jmp
rolb
and
addr16
sbb
xchg
icebp
pop
and
xchg
mov
sbb
pop
adc
pop
icebp
pop
sahf
repnz
and
movsb
mov
cmp
mov
stos
call
mov
pop
push
or
mov
sti
imul
pop
les
sbb
pop
leave
xchg
push
lock
fcom
push
movsl
cs
sti
out
jo
or
lret
fcmovnu
xchg
test
jmp
xchg
push
push
sbb
jmp
dec
ss
enter
stc
scas
jbe
insl
lods
mov
fwait
pop
stos
imul
cmp
leave
sbb
sub
cmp
dec
mov
imul
mov
das
std
aas
scas
data16
test
jnp
jle
pop
xchg
int
sbb
push
sub
fdivr
or
adc
imul
aaa
scas
inc
mov
mov
mov
testb
adc
in
sbb
or
jmp
sti
cmp
leave
sbb
sub
cmp
dec
mov
imul
pop
stos
imul
cmp
leave
sbb
sub
cmp
dec
mov
imul
dec
ss
les
mov
ror
sbb
bound
lret
cmp
push
stc
jne
push
roll
popf
mov
cmpsb
cs
add
addr16
out
stos
gs
sub
out
icebp
es
add
icebp
not
cmpl
mov
lods
xor
lods
stos
pop
sbb
mov
cmp
mov
pusha
mov
sub
call
add
data16
push
and
mov
testb
imul
stos
mov
mov
jmp
cmpsb
cmp
into
pushf
mov
pushf
pop
mov
subb
lea
mov
orb
cmp
mov
jp
xor
pop
iret
mov
lahf
sti
fdivs
cld
pushf
movsb
inc
inc
and
mov
daa
movsb
lods
repz
cltd
add
mov
mov
and
pop
out
dec
xchg
pop
ffree
mov
stos
cltd
out
ret
lods
jbe
pop
mov
imul
jns
test
insb
dec
in
push
jmp
adc
mov
fidivrs
jbe
cmp
xchg
mov
inc
mov
or
xor
inc
adc
aas
nop
jp
and
je
in
adc
xchg
cli
mov
add
arpl
mov
sbb
out
add
sbb
int3
fs
jp
les
jmp
and
pusha
mov
cs
lcall
std
dec
fidivrl
xor
pop
rorl
iret
dec
dec
cli
test
cmp
bound
into
mov
ja
sahf
int
clc
cmc
int
mov
mov
xor
mov
push
loop
inc
lret
inc
xor
xor
mov
and
push
cld
or
aad
mov
ds
push
mov
sub
fs
and
add
mov
push
in
push
stos
aad
mov
mov
popa
mov
popa
push
jle
stc
mov
and
stc
scas
fists
in
jmp
push
jo
addr16
pushf
scas
daa
push
call
mov
and
in
push
ret
add
out
stc
dec
pop
in
inc
sub
mulb
std
pop
push
jno
aad
xlat
xchg
lods
add
sbb
adc
mov
or
insl
xor
mov
sbb
fildll
mov
push
rolb
xchg
add
xorl
inc
xchg
fnstenv
mov
sub
mov
sbb
clc
icebp
lret
pop
jmp
sub
pusha
jbe
enter
mov
adc
shll
jb
pop
mov
inc
inc
ret
pop
add
add
sbb
cmp
scas
popf
stc
cmc
ja
out
insb
jecxz
dec
aad
jge
jne
mov
cmpsl
cmpsb
ror
sbb
test
dec
cs
jne
enter
and
ss
sbb
pop
push
mov
in
inc
cmp
bound
adc
test
adc
stos
xor
push
aas
test
cmp
js
and
subl
leave
inc
add
hlt
fsubrl
xor
orl
es
je
fs
sbbl
out
sbb
call
mov
jge
fisttpl
adc
add
and
mov
lret
sub
jle
sbb
adc
mov
jae
or
add
fs
or
int
popa
mov
jno
mov
rolb
adc
arpl
imul
sbb
and
xlat
aaa
clc
xchg
mov
mov
fistl
mov
add
cmp
out
scas
lret
jp
or
addr16
add
cltd
xchg
call
popf
xor
push
sar
popf
shll
adc
shl
mov
sahf
mov
adc
lock
test
jne
push
dec
cmp
mov
add
add
xchg
jae
jg
and
and
mov
sbb
push
pop
jns
gs
xor
ficoms
lahf
rorb
inc
negl
mov
aas
call
jle
test
aam
xlat
and
and
in
and
js
adcb
fidivrl
imul
mov
imul
xchg
cmp
adc
and
mov
push
jne
and
adc
pushf
cmp
lea
mov
xor
xchg
cli
inc
aas
cltd
enter
movsb
jge
test
sub
fisttpll
pusha
aam
mov
xchg
call
test
clc
ljmp
ret
cmovns
sbb
inc
aam
cli
jno
lods
insb
sar
popf
pushl
jo
xor
push
push
cmp
into
into
test
mov
and
xchg
and
addr16
dec
insl
push
sbb
clc
test
out
mov
popa
xor
or
js
jns
pop
scas
xchg
push
push
test
sbb
ror
mov
xchg
shr
popa
mov
jnp
ss
cld
sarl
xchg
jae
add
inc
lods
outsb
in
imul
adcl
mov
dec
fcomps
pop
test
sahf
inc
mov
and
sahf
outsl
mov
mov
cmpsl
jno
enter
xchg
fwait
les
mov
jmp
dec
aam
mov
out
lods
mov
sahf
ss
mov
xchg
push
xchg
xor
sub
stos
xchg
dec
lock
shll
idivl
leave
xchg
sbb
fidivrs
pop
nop
cmc
test
adc
icebp
fsubr
push
cli
dec
sbb
add
in
pop
lret
in
fnstenv
push
roll
sbb
mov
dec
or
sbb
testb
lret
cwtl
pop
testl
and
popa
lret
jge
mov
mov
and
pop
mov
jp
jne
sahf
inc
ss
mov
imul
dec
cmp
push
mov
cmpsb
movsl
dec
ljmp
mov
sub
aad
stc
sbb
movsl
mov
in
mov
push
sbb
push
fwait
mov
adc
enter
scas
ficoml
and
push
negl
adcb
push
dec
cmpl
push
cmp
pop
dec
in
data16
aaa
fdivs
sbb
faddl
scas
jmp
rorl
shrb
cmp
daa
sub
mov
sti
nop
fwait
push
sbb
sub
out
or
xchg
push
nop
cmc
ds
xchg
xchg
iret
xchg
inc
leave
mov
pusha
outsl
mov
push
lock
xor
fsubl
sub
iret
pop
in
sub
mov
sarl
sub
stos
push
scas
ljmp
insl
enter
sub
imul
sbb
int3
inc
sub
or
cmp
and
push
add
inc
and
fwait
mov
lret
dec
add
jo
fbstp
scas
xchg
out
stc
cli
loope
cmpsl
sub
xchg
pop
test
and
fwait
out
popaw
and
push
and
test
xchg
aad
xchg
adc
addr16
ss
cmp
js
fdivrl
adc
stos
xor
pop
ja
dec
cmpsb
ljmp
cmpsl
add
jmp
add
pop
imul
data16
push
sub
push
dec
or
xchg
jns
xor
movsb
pop
cmpsb
xchg
mov
and
xchg
in
xchg
or
sbb
ljmp
lahf
mov
out
sbb
push
xchg
push
into
mov
and
outsl
sub
pop
outsl
mov
jg
mov
sub
lds
loop
or
roll
cmpsb
and
out
fcmovbe
lcall
fmul
jae
les
ret
ror
aad
out
popa
mov
add
sbb
dec
bound
xchg
mov
in
push
adc
xchg
lods
mov
test
or
subl
dec
cmpsl
popl
outsl
lea
iret
mov
jne
jp
push
insb
inc
sub
insl
cwtl
adc
jmp
mov
push
mov
imul
and
sbb
xor
sbb
subb
inc
cmp
in
pop
xlat
ficoml
mov
mov
or
sub
or
adcb
dec
leave
pop
stc
xor
push
jo
dec
lea
dec
jle
mov
or
rorl
adc
xchg
xor
mov
inc
lea
lock
dec
mov
inc
xchg
mov
loope
adcb
leave
popf
dec
mov
divl
hlt
adc
dec
aaa
sub
xor
fadds
lea
loopne
pop
out
fwait
imull
cmp
pop
mov
xchg
xchg
mov
lret
sbb
add
adc
enter
dec
dec
xor
inc
mov
xor
cli
subb
push
sub
insb
inc
je
xorb
add
mov
or
mov
ss
mov
cwtl
push
sbb
dec
cmp
adc
cli
jb
mov
les
xlat
push
push
in
mov
in
test
pop
notb
sbb
leave
inc
pop
ficomps
inc
loop
setno
and
loope
lcall
inc
stos
aaa
lret
pop
aaa
xchg
out
jp
adc
sub
sahf
nop
stos
xor
das
push
mov
stc
test
scas
xlat
jp
sbb
loopne
rclb
ret
out
lods
mov
cmp
test
je
sbb
insb
pop
pop
fistpl
lret
movsb
sbb
dec
movsl
jne
xor
or
xchg
fsub
jnp
pushl
aad
jnp
mov
jmp
lahf
mov
mov
fwait
cmp
out
sub
rorb
push
push
dec
seto
jl
outsl
jp
mov
mov
inc
cs
popf
gs
imul
inc
jno
std
ss
xchg
cli
cmp
aam
or
inc
test
push
mov
adc
dec
sbb
or
add
pop
mov
rcrl
xchg
loopne
sar
loop
fnsave
ss
imul
inc
std
in
sub
shl
sbb
bound
jecxz
push
mov
pushf
lds
sbb
rol
cltd
scas
aas
push
pop
mov
push
lahf
dec
stos
clc
add
daa
push
mov
cltd
das
aad
lahf
push
dec
cmp
movsl
imul
ljmp
shl
or
lock
aas
in
mov
sub
fucomip
popa
in
outsb
push
push
mov
mov
in
lret
loop
mov
js
fisubl
lahf
push
push
cltd
sub
jno
ret
sarl
cmp
jb
mov
out
test
sub
sbb
je
pop
dec
fldenv
dec
popf
inc
cmpsb
inc
lcall
sub
pop
in
pop
das
inc
xchg
add
std
and
xor
and
loop
movsb
sbb
cmp
clts
scas
inc
aaa
and
inc
outsl
cltd
lcall
aam
adc
pop
stc
out
pop
adcb
pop
adc
rclb
ss
xchg
out
adc
add
push
repz
cltd
imul
xor
mov
fildll
shlb
test
sbb
outsl
aam
pusha
sti
scas
stos
shlb
and
add
add
cmp
xchg
aas
movsl
inc
dec
cwtl
pushf
dec
rclb
in
fistps
mov
sarb
jo
xor
ja
pushl
je
push
ficompl
pushf
xchg
mov
mov
clc
cmpsb
dec
pop
xor
or
push
push
mov
pop
pop
sti
push
std
cli
int3
xor
ja
adc
imul
loop
sbb
mov
xorb
jo
ds
lcall
dec
gs
xor
xor
adc
mov
inc
jno
leave
sub
add
and
cmp
call
sub
test
jo
iret
xchg
in
in
adc
in
inc
xchg
addr16
sub
aam
bound
dec
bound
xchg
shrl
mov
sarb
aad
add
ss
mov
mov
popf
icebp
pop
lock
aaa
push
leave
push
inc
aaa
xchg
and
cmp
mov
outsl
inc
cmp
mov
sbb
adc
pop
rclb
sub
cmpsb
cmp
cmp
insb
nop
test
outsl
or
push
inc
jecxz
or
pop
xchg
movsl
fcomps
pop
adc
mov
jmp
dec
enter
rcrl
addr16
adc
ret
jl
and
pushf
das
in
mov
fisttps
enter
jle
mov
sti
sbb
loope
pop
and
push
fists
shlb
xchg
sbb
subb
lock
mov
add
sti
cld
push
divb
js
inc
loope
mov
jge
rclb
sbb
mov
mov
stos
mov
stos
loopne
mov
xchg
in
sub
ret
add
jg
pusha
fcompl
sbb
add
dec
cmp
in
cs
xor
push
add
je
push
jle
out
and
shlb
leave
mov
jp,pt
add
push
mov
mov
in
xchg
pop
loopne
andb
mov
cli
dec
or
movsb
mov
gs
jne
lret
cwtl
xor
mov
push
adc
cmp
cmc
das
into
out
insl
mov
mov
movsb
mov
dec
add
xor
add
dec
push
pop
mov
in
out
movsl
pushf
repnz
hlt
cli
push
iret
mov
jecxz
int3
inc
mov
push
scas
jae
jne
inc
sar
lret
xchg
add
addr16
popf
inc
push
js
in
mov
cmp
pop
mov
push
and
jae
je
push
insw
mov
inc
into
push
xchg
sbb
dec
and
ljmp
out
push
loop
cmc
xor
mov
pshufw
mov
cmpsb
cmp
jo
push
lea
fcomps
jne
mov
insb
sbb
fdivrl
push
inc
jae
fcmovne
and
sub
xchg
and
icebp
jo
out
mov
mov
sub
dec
gs
cmp
pop
xlat
or
mov
add
jp
dec
je
adc
lock
popa
pop
mov
sbb
xor
sub
jo
sar
fsubrl
int
add
cmp
mov
mov
les
cmc
mov
icebp
outsl
hlt
sahf
mov
jl
shll
inc
sub
or
rclb
popf
pop
dec
cmp
mov
test
xchg
jmp
pop
cmc
imul
pop
mov
and
ss
adc
or
jns
shrl
xchg
mov
and
ja
xchg
pop
aad
mov
orl
sbb
cwtl
xlat
mov
jo
pop
iret
xchg
jp
sbb
es
xlat
shrl
xor
push
inc
mov
cwtl
ret
aas
xlat
mov
int3
mov
pop
and
xchg
inc
je
dec
push
scas
sbb
mov
xchg
mov
pop
and
push
sahf
xchg
lods
inc
xchg
rclb
sbb
out
xchg
or
pop
xlat
pop
xchg
das
cmpsl
push
inc
pop
jo
dec
mov
push
cmpsb
cmp
push
sbb
mov
jb
and
popf
rcrl
sub
lea
repz
mov
mov
hlt
sub
mov
scas
sbb
inc
icebp
sbb
pop
pop
cmp
and
inc
sub
not
jbe
sti
sbb
xor
je
xchg
and
lods
xor
iret
lret
xchg
pop
cmp
sub
xor
loopne
in
push
fnsave
xchg
sbb
cmc
mov
lcall
mov
out
adc
icebp
iret
es
mov
push
ficoml
mov
out
pop
xlat
in
dec
data16
aaa
insl
mov
sbb
int3
cmpsl
sbb
mov
mov
dec
inc
and
and
jb
lods
fisubl
shlb
jbe
cmpsl
xchg
loope
pushf
pop
add
xchg
jae
push
mov
idivb
inc
aam
arpl
cli
movsl
push
xchg
and
ljmp
dec
js
or
cwtl
or
popf
xchg
in
pop
push
and
incb
ljmp
pop
pop
scas
cld
int
or
dec
push
lret
xor
addr16
loope
test
bound
ja
and
shrb
xorl
lret
and
bound
aad
or
push
loop
loopne
les
add
aas
add
xor
pop
add
push
jmp
pand
and
scas
movsb
out
mov
pop
xor
mov
iret
iret
push
aad
mov
shr
dec
adc
sbb
push
dec
jae
movb
das
mov
out
mov
cmp
dec
aas
and
xchg
xchg
loope
in
mov
xor
loop
rcrb
inc
pop
int
test
popa
xchg
dec
test
mov
jae
fisubrs
jne
inc
jecxz
xor
cmpb
push
test
sub
pop
xchg
jl
mov
push
push
cmp
loope
inc
cmp
pop
mov
andl
jo
mov
mov
lcall
aam
call
mov
iret
jae
movsl
or
push
push
fsubs
add
lret
repnz
push
jg
xchg
pushf
add
stos
ret
mov
mov
lret
ljmp
lds
lds
adc
fbld
sbb
mov
mov
int
imul
inc
arpl
or
sbb
xor
in
cmp
lahf
loopne
jae
sbbl
sti
std
fcomps
mov
notb
pop
rcll
xchg
pop
add
sbb
xchg
ret
pop
inc
les
ret
insb
ret
sub
push
cmpsb
jge
xor
mov
jp
shrb
dec
mov
push
or
in
xchg
out
int3
jno
fimuls
or
inc
pop
scas
xchg
pushf
imull
pop
icebp
and
pusha
and
decb
push
push
cmovb
es
hlt
add
push
and
into
add
ja
sub
jns
pop
add
cld
jmp
sbb
stos
imul
or
insb
hlt
adc
scas
add
outsl
adc
test
outsb
cmp
cmpsl
dec
mov
jecxz
pushf
inc
jp
lds
pop
lea
fs
xchg
xchg
push
inc
cmp
out
pusha
shr
xchg
xchg
and
xor
jl
cmpsb
jecxz
jecxz
mov
stc
daa
cld
ja
sbb
cld
pop
jg
testl
iret
in
je
mov
add
mov
shrl
mov
mov
les
jbe
ret
jmp
xorl
hlt
in
add
cs
sbb
cli
add
mov
out
sub
pop
aam
push
inc
adc
add
inc
mov
arpl
dec
mov
cmp
movsl
loop
sar
mov
sti
dec
mov
out
insl
out
rcrl
inc
repnz
call
hlt
mul
xchg
inc
cmp
xor
jb
and
xor
pop
xor
xchg
mov
xchg
pop
pop
inc
sbb
aaa
popa
aaa
cmp
jg
lods
into
sbb
loop
push
sub
or
push
fistps
jge
mov
push
das
pop
aad
dec
fdivl
loopne
pushf
pop
jmp
jae
hlt
mov
jae
sbb
rorb
ret
add
dec
xchg
xor
hlt
scas
mov
xchg
icebp
out
orb
andl
mov
out
test
xor
ret
int3
sub
pop
lcall
mov
lea
pop
imul
and
jecxz
mov
cmp
jae
mov
jo
jmp
pop
cmp
push
les
push
mov
lock
insl
test
mov
ret
ja
push
idivl
popa
add
xlat
adc
enter
cmp
sbbl
in
out
jb
adc
cmp
adc
mov
sbb
adc
sbb
das
mov
cmp
mov
std
sahf
cltd
add
pop
fcoml
lock
test
out
test
xchg
notl
mov
jle
dec
icebp
sbb
enter
mov
fsubl
push
scas
pop
add
icebp
adc
mov
aaa
lret
mov
mov
xchg
sahf
cltd
imul
subl
lds
int3
fcomip
test
pop
push
cmp
sahf
std
loope
in
xor
or
fs
pop
mov
cmpsb
mov
or
xor
pop
sti
scas
add
test
sbb
mov
orb
rcl
dec
adc
mov
int3
sub
jbe
cmp
cmp
xor
inc
mov
push
sbb
js
adc
shrb
mov
adc
and
adcb
jne
fs
pusha
scas
cmp
insb
xchg
push
outsl
xor
in
or
imul
call
imul
out
mov
movsl
push
addl
fnstenv
jno
or
xor
adc
sahf
dec
into
adc
bound
push
jecxz
inc
das
daa
call
or
xchg
std
stos
cmpsb
xor
fstl
add
flds
cltd
das
inc
jae
daa
push
jg
pop
bound
sahf
xchg
call
or
push
mov
addb
push
fistpl
jmp
sti
cmp
leave
sbb
sub
cmp
dec
mov
imul
pop
stos
imul
cmp
leave
sbb
sub
cmp
dec
mov
imul
pop
stos
imul
cmp
leave
sbb
sub
cmp
dec
mov
push
jnp
mov
pop
stos
imul
hlt
ss
sub
shll
push
addl
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
int3
das
fadd
in
lock
pusha
inc
pop
out
loope
hlt
mov
dec
push
pop
inc
insb
jo
pusha
or
sbb
sub
cmp
int3
rcr
shr
cld
loopne
nop
pushf
or
mov
aam
push
pop
pusha
insb
jo
pusha
int3
jg
add
cmp
int3
inc
fadd
in
pop
cld
loop
lods
pushf
mov
dec
jg
add
jl
or
jae
pop
inc
push
and
test
or
push
xchg
cli
in
mov
lea
cmp
pop
push
shll
xchg
pushf
jl
lock
loop
jne
adc
adc
lods
pushf
rcl
mov
pop
ret
jmp
sub
lds
in
pop
xor
dec
lock
int3
adc
rolb
nop
mov
sub
pop
shrl
pushf
repz
fmuls
jae
lds
or
add
mov
lds
mov
or
mov
pusha
pop
inc
jecxz
jl
cmp
jge
loope
fimull
outsb
add
lock
sub
adc
movsb
add
fdivl
in
je
ljmp
mov
xchg
sub
sbb
sub
cmp
lea
xchg
into
mov
out
out
enter
dec
push
cmp
or
jno
inc
test
xchg
nop
lds
out
int3
sub
jl
or
push
dec
dec
test
mov
pushf
subb
inc
insb
jo
pusha
or
sbb
sub
cmp
int3
rcr
shr
cld
loopne
nop
pushf
subb
inc
insb
jo
pusha
or
sbb
sub
cmp
int3
sar
pop
jno
ror
jb
sahf
mov
cmp
inc
lret
insl
adc
movsb
aaa
mov
leave
cmp
and
xor
mov
imul
lcall
ljmp
xchg
cmp
mov
dec
push
mull
scas
fisubrs
ja
sub
std
push
adc
dec
xchg
aad
loope
aaa
xrelease
sbbl
es
std
add
lea
das
lea
movsl
sub
negl
stc
in
jne
sbb
lods
fwait
insb
and
movsb
leave
push
cmp
or
pop
jae
outsb
aam
jle
jno
mov
adc
adc
in
jle
mov
fidivrl
mov
xor
clc
bound
mov
dec
enter
mov
pop
addr16
adc
ss
mov
icebp
jg
popa
mov
jno
mov
std
push
negb
sub
adc
scas
or
loop
shr
push
dec
sbb
test
test
push
outsl
xchg
jbe
inc
adc
adc
inc
popl
pushf
addl
xor
popa
fcompl
mov
and
fistps
jno
addb
out
negl
or
lds
mov
add
adc
dec
mov
popf
and
sub
lods
dec
sub
jecxz
mov
cmp
stc
outsl
loope
clc
add
fsubs
test
mov
inc
mov
lods
cmp
and
adc
sbb
ret
outsl
imul
scas
aas
cmp
add
and
nop
repz
mov
cmpsl
sarb
pop
pop
fwait
jnp
push
test
notl
adc
fs
push
push
inc
adc
aad
adc
in
cs
dec
sub
sti
movsl
das
adc
clc
aad
cwtl
push
mov
cmp
in
jnp
movsb
insb
scas
enter
cmp
sub
push
popa
insb
outsl
sbb
push
fs
push
sahf
movsl
aaa
push
xchg
jno
std
out
into
push
mov
test
lcall
fists
repnz
or
sqrtps
adc
xchg
push
adc
pop
or
dec
push
scas
hlt
fimuls
sbb
mov
in
mov
xorl
fcomip
add
jns
adc
add
sarb
and
inc
mov
pop
fildl
xchg
sbb
notb
popf
inc
subl
movsl
sub
mov
adc
fucomi
adc
in
scas
scas
push
in
jnp
dec
hlt
add
test
sbb
sbb
bound
in
and
pusha
repz
xchg
sub
lock
or
js
xor
sbb
cwtl
inc
popa
fnsave
lret
push
inc
and
push
inc
push
outsl
aaa
mov
inc
mov
cmp
out
pop
mov
imul
xor
scas
mov
bound
enter
xor
pop
mov
cltd
sti
es
scas
in
and
or
pop
adc
loopne
or
rcr
pop
sbb
mov
dec
aas
jbe
jns
xor
in
mov
sahf
pop
mov
mov
aaa
loopne
xor
mov
inc
lahf
das
and
dec
mov
cmp
pusha
and
mov
dec
adc
fs
jecxz
mov
push
out
push
mov
pop
out
ret
movsl
inc
mov
aas
pop
repnz
xor
movb
mov
jne
mull
mov
loopne
int3
fsub
push
out
mov
repnz
out
sbb
addl
jae
jno
out
mov
incb
je
rcll
fisttpll
push
mov
outsb
test
add
mov
push
sub
stos
iret
cli
pop
xchg
lcall
fidivs
or
dec
push
popf
jno
sub
mov
ret
fstps
arpl
adc
mov
fbld
xchg
pop
xchg
sub
imul
and
sti
cmp
xchg
out
fs
jle
mov
push
mov
cld
jg
xchg
push
aaa
adcl
dec
pop
adc
mov
pop
sub
test
gs
xchg
push
imul
push
idiv
jne
in
icebp
cwtl
in
push
jge
adc
fs
into
repnz
in
push
jo
fwait
mov
sub
lds
les
sub
test
lock
lahf
cmp
mov
inc
adc
roll
movsb
push
scas
out
xlat
nop
sbb
push
rcll
mov
mov
jnp
lret
outsb
pop
lds
out
mov
imul
aad
fwait
add
pop
or
adc
cmp
or
mov
aaa
aas
dec
push
xchg
ja
arpl
push
fistpl
test
cmp
test
lret
cmc
mov
pusha
cmp
add
mov
rorb
xchg
movsl
sub
push
call
add
and
das
cmc
das
insl
jno
dec
sbb
cmc
mov
xor
ds
or
ds
aaa
loopne
sbb
shll
stos
mov
dec
popf
out
sbb
lea
push
xchg
cmpsb
sbb
dec
inc
sahf
imul
scas
fildll
je
mov
add
sbb
xor
mov
andb
into
mov
cmp
sub
push
dec
sub
out
mov
mov
add
or
push
pusha
mov
pop
pop
jns
sahf
jae
clc
add
sbb
xchg
ds
sbb
in
pop
cmp
insl
out
and
mov
lds
sub
xor
mov
add
push
mov
mov
outsb
fisubs
cmc
jae
leave
or
jb
call
dec
adc
je
insl
mov
mov
sbb
xchg
adc
mov
imull
jo
mov
cmp
outsb
jl
xchg
daa
outsb
cmp
adc
mov
sbb
test
push
insl
jecxz
sti
push
lods
insl
dec
jne
dec
jnp
ljmp
sub
adc
ficompl
mov
sub
xchg
mov
pop
dec
fldcw
out
inc
or
cld
cs
xor
dec
jg
mov
dec
jecxz
shll
mov
pop
xor
pop
shlb
ss
adc
insb
in
out
push
xchg
mov
aaa
in
mov
addr16
arpl
iret
in
jecxz
and
call
jns
or
jb
cmp
lea
sub
js
cmp
aam
imull
mov
xor
pop
ret
xlat
lret
ds
and
fcmovnu
inc
cmc
lcall
xor
or
je
ror
and
cmpl
mov
xchg
outsl
jl
jl
std
das
xor
out
push
ficoms
inc
ljmp
xchg
aad
xchg
or
sbb
push
xchg
push
mov
inc
addr16
cmp
xchg
shrl
adc
lods
movsb
adc
outsl
cmp
dec
xor
stos
outsl
aad
sahf
ss
fidivl
cmp
sbb
lods
popf
mov
sbb
dec
mov
push
pushf
sub
jnp
mov
xor
mov
inc
cmp
scas
jnp
pushl
xor
scas
sahf
gs
dec
stos
ja
adc
and
bound
test
dec
adc
outsl
mov
pop
inc
gs
or
loope
shr
sub
pusha
inc
push
ljmp
mov
add
xor
jbe
and
cmp
xchg
orb
jne
dec
sbb
jmp
push
pop
jb
lret
and
mov
xchg
icebp
inc
sbb
mov
xchg
xor
enter
sub
ficoms
ljmp
and
dec
push
stos
dec
mov
cmp
sbb
lret
cltd
gs
jge
pushf
or
adc
sub
or
andb
add
in
ret
leave
sbb
pop
jg
push
dec
and
sti
dec
inc
addb
dec
adc
xor
adc
popf
in
sbb
jg
roll
mov
pop
lock
popa
ljmp
cld
sub
out
cmp
int
bsf
xor
test
mov
lea
cwtl
popa
out
mov
out
mov
psubsw
fadd
adcl
test
sub
add
loop
mov
insl
test
xchg
std
test
mov
movsl
fxam
adc
xchg
mov
adc
mov
dec
cmpsb
lahf
pop
pop
imul
arpl
pop
test
mov
cld
clc
xchg
ja
ror
mull
stc
mov
push
mov
xchg
popf
or
inc
pusha
inc
dec
push
and
in
aas
sub
scas
dec
or
add
adc
xchg
mov
mov
sub
leave
xor
push
adc
arpl
inc
je
mov
xor
adc
push
out
movsb
sbb
aaa
ja
and
add
mov
or
sub
loop
mov
xchg
and
addl
scas
imul
insl
or
xor
sub
sbb
xchg
imul
outsb
in
xor
inc
jae
xchg
sub
mov
hlt
jmp
cmp
or
cmpsl
pop
jnp
jl
mull
cld
sahf
shl
cmp
push
je
add
test
lods
test
loop
jge
sbb
scas
jnp
push
icebp
lods
movsl
sbb
mov
pop
imul
stos
jg
out
pushl
push
mov
adc
xchg
xlat
sbb
pop
pusha
push
fisubrs
mov
and
stc
loope
inc
sbb
js
mov
dec
in
add
dec
inc
or
inc
nop
inc
or
mov
jmp
sbb
mov
sti
jecxz
xor
in
cltd
adc
clc
and
jbe,pt
mov
mov
iret
icebp
ss
pop
xorb
push
jbe
in
jp,pn
stos
xor
lds
pop
decl
mov
mov
and
jp
mov
mov
repnz
inc
aaa
mov
jmp
adc
stos
add
je
cmpb
je
dec
fstps
je
mov
cld
sub
fdivs
or
js
pop
jecxz
les
push
pop
dec
mov
push
jns
dec
or
ret
pop
sub
sub
ja
and
mov
adcl
jecxz
movntps
cmp
mov
and
push
jnp
inc
or
stos
call
add
ret
pop
ja
enter
sarl
push
ja
xor
mov
stos
add
dec
fiaddl
push
dec
or
mov
pushf
repnz
daa
jle
lods
push
inc
push
call
repnz
sbb
fmull
jnp
nop
ret
push
fsts
pushf
sahf
int3
sti
lcall
mov
jge
mov
push
inc
dec
cmc
test
cli
cmp
dec
iret
imul
or
dec
lods
xchg
data16
jbe
push
lcall
icebp
stos
int3
jg
cmp
shll
push
movsb
int3
pop
jnp
rolb
push
mov
inc
or
dec
or
rorl
mov
jge
pusha
repnz
add
fmuls
popa
cli
cmp
stos
ret
adc
leave
sbb
and
stos
cmp
inc
adc
movsb
xchg
lahf
cmpsl
mov
push
jle
push
mov
js
imul
sbbl
push
push
cmp
out
jmp
jg
mov
bound
dec
popa
out
clc
out
jmp
jl
push
sub
subl
fists
rorl
fists
adc
lret
inc
mov
in
sbb
aaa
std
rcrl
dec
sub
cltd
jl
popf
dec
cmpsb
stos
add
and
cmp
lcall
dec
popf
fisttpl
jge
xchg
scas
mov
mov
cld
call
xchg
push
scas
cmp
into
sbb
sti
out
pop
or
mov
fstpl
sahf
andb
shlb
mov
sti
mov
call
inc
scas
jmp
sti
mov
jp
cmp
lret
adc
ljmp
pop
movsb
xor
out
and
pop
lcall
inc
sbb
fsubr
and
adc
mov
jns
xchg
pop
out
pop
movsb
xor
push
mov
push
cmc
in
fwait
xor
mov
shrb
fistl
adc
jae
pop
pop
in
pop
faddl
rep
push
sub
mov
imul
testl
andb
movsb
or
pop
enter
aad
dec
sbbb
or
pop
outsl
movsl
cmp
cmc
in
push
xlat
inc
mov
jl
movsl
adc
cld
out
lahf
outsl
xlat
sbb
sbb
lret
stos
frstor
inc
pop
and
adc
mov
rcrl
subb
xchg
ret
scas
das
movsl
mov
fists
mov
jmp
sub
cmp
out
push
push
arpl
or
std
xchg
cmc
mov
cmp
cmp
repnz
cmp
adc
mov
jo
push
rcll
push
hlt
push
out
mov
jno
mov
bound
aam
fnstcw
push
jo
push
mull
data16
dec
adc
or
mov
cmpsb
jp
std
clc
test
fisttps
xchg
mov
xlat
mov
or
lret
dec
jle
fisubl
mov
xchg
mov
rcll
fs
pop
mov
mov
mov
xlat
cld
push
mov
push
add
cmp
push
add
std
jmp
mov
dec
push
hlt
inc
and
inc
test
sbb
jp
sti
call
insb
fistpl
pushf
adc
mov
orb
adc
mov
push
xchg
rolb
mov
lods
inc
test
loope
pop
dec
inc
jmp
cmp
and
cmpsl
push
push
pop
mov
xchg
test
jbe
gs
push
or
into
in
add
mov
repnz
nop
and
fiaddl
cmp
add
sub
cld
jecxz
out
mov
add
cmp
jmp
jne
sbb
cmp
aad
aas
outsb
jb
adc
icebp
pop
enter
ror
sub
mov
int3
sahf
dec
test
mov
enter
daa
cmp
incb
jbe
dec
cmp
aam
jl
sub
pop
in
out
xchg
mov
xchg
sbb
sti
dec
out
push
jge
dec
sbb
lea
or
fisubl
cmpsl
stos
jmp
mov
test
ret
ret
xor
mov
pop
cli
pushf
xchg
and
jnp
sub
fsubl
test
pop
ds
xorl
out
mov
or
xchg
push
fldcw
adc
lcall
fisubrs
sub
mov
xor
stos
in
into
mov
aaa
xchg
insl
sahf
mov
inc
imull
das
cmp
test
aam
ljmp
xchg
dec
add
jno
dec
out
push
adc
dec
sbb
pop
add
mov
std
arpl
inc
mov
jl
test
mov
out
jg
ror
xchg
jnp
fstpl
add
cmp
mov
adc
call
iret
add
pushf
cmpb
add
jg
andb
ds
sub
sub
lds
xchg
inc
addr16
bound
aaa
push
repnz
dec
idivl
xor
das
fidivl
mov
inc
jnp
addr16
icebp
inc
pop
cltd
xchg
pop
stos
and
loop
movsb
cmp
or
xor
jmp
fdivl
stos
dec
lds
int
mov
jno
stos
lds
jmp
pop
mov
fwait
outsl
cmpsb
pop
mov
jo
js
push
andb
pushf
shll
data16
lds
popa
pop
cmpsb
adc
sbb
scas
cmp
insl
in
mov
mov
cmpsb
adc
ror
and
push
push
lea
and
out
inc
jl
popf
mov
inc
sbb
mov
sahf
cmp
sub
lock
outsb
push
sbb
push
dec
lods
adc
inc
mov
add
xlat
ja
pop
testb
xor
pop
adc
pop
test
cld
imul
xor
xchg
push
mov
dec
and
jle
mov
popf
test
dec
gs
repz
subl
stos
inc
mov
loope
mov
pop
jo
les
imul
je
jmp
rclb
je
jb
cmp
in
lret
ds
pop
xchg
sbb
faddp
cmpsl
ret
rcrl
loopne
lds
movsl
cmp
mov
mov
mov
jmp
mov
jo
loop
mov
jnp
adc
mov
jbe
outsb
cltd
push
xchg
push
dec
jl
fs
pushf
or
sub
mov
call
push
neg
vmulps
sahf
jb
rcrb
jmp
out
sbb
fisubl
xor
mov
aam
xchg
out
aas
xlat
xchg
ror
out
pop
jge
inc
scas
fs
in
loope
or
xor
cmp
ljmp
dec
sub
or
xor
push
pop
into
xlat
sub
pop
stos
adc
rorb
adc
imul
xor
xor
or
push
push
jp
inc
jmp
push
push
cmpsb
cs
sub
jecxz
push
out
mov
dec
cmp
push
inc
aad
mov
lahf
fldl
ffree
mov
mov
sbb
lret
pop
jmp
mov
xlat
decl
mov
call
pop
xchg
jle
mov
loop
sub
repnz
divb
mov
in
jge
push
lret
push
lret
mov
sbb
outsb
lods
sbb
mov
nop
int
js
std
decl
lcall
fsts
dec
xchg
pcmpeqd
shll
xchg
mov
repnz
cld
daa
xor
mov
inc
xor
push
cmpb
into
insb
cmc
mov
pusha
push
xlat
xchg
lahf
jle,pn
pop
xor
lcall
popl
adc
ret
loopne
jne
out
test
clc
bound
inc
mov
faddl
and
lea
pop
jnp
sub
cmp
sub
xor
clc
in
jmp
pop
jae
mov
inc
and
lds
arpl
outsb
add
mov
pop
nop
mov
sbb
push
jno
popf
pop
add
pop
or
pop
add
cmp
mov
sub
inc
cmc
jno
mov
or
ljmp
int
cmp
and
push
push
xchg
pop
lahf
cmpsb
push
icebp
lea
xor
inc
add
fstl
int3
pop
cmp
lahf
add
stc
in
repz
and
or
sbb
cmc
and
and
iret
ljmp
and
pop
or
jl
xor
mov
cmp
ljmp
pop
xchg
inc
and
inc
pop
cmpsl
std
test
push
inc
mov
xchg
fcoms
mov
xchg
ficompl
push
inc
cmpsb
mov
repz
fsts
pop
add
lock
idivl
aas
test
orb
and
popa
loop
xchg
fwait
test
pop
xor
out
pushw
sub
sub
pop
aaa
rorl
add
lcall
pop
jmp
mov
and
mov
sub
dec
test
data16
je
test
xbegin
xchg
inc
cmpsb
mov
dec
push
and
repnz
scas
call
clc
loopne
jmp
fcoms
jns
mov
mov
sub
inc
and
fcompl
jne
jmp
loopne
leave
cwtl
xchg
movsb
and
add
imul
mov
push
insl
repnz
pop
nop
cmc
sahf
push
je
mov
lret
imulb
push
xchg
lcall
add
push
test
inc
add
test
js
mov
push
popf
imul
xchg
sub
les
adc
inc
in
xchg
pop
fistl
mov
adc
stos
sbb
sbb
je
cmpsb
pop
inc
into
enter
enter
or
dec
shl
inc
inc
lods
xchg
ja
push
sbb
adc
and
mov
in
adcb
js
scas
xchg
bound
jg
popa
push
pop
mov
fistpll
xor
pop
fwait
ljmp
daa
in
or
push
jmp
loopne
ret
jne
hlt
and
xchg
fstps
mov
into
lea
inc
test
dec
push
dec
das
xor
and
sub
jo
pusha
xchg
subb
cltd
sbb
nop
pop
adc
ret
imul
icebp
std
scas
stos
pop
mov
cwtl
rclb
out
fsubl
fistpl
lods
xor
ficompl
dec
mov
shr
cld
loopne
nop
pushf
subb
inc
insb
jo
pusha
or
sbb
sub
cmp
int3
rcr
shr
cld
loopne
nop
pushf
subb
inc
insb
jo
pusha
or
sbb
sub
cmp
int3
rcrb
mov
loopne
nop
pushf
sub
pop
inc
insb
jo
pusha
or
sbb
sub
cmp
int3
rcr
shr
cld
loope
nop
pushf
subb
ljmp
insb
lcall
fists
call
jp
adc
test
cwtl
fidivrl
dec
ficompl
sub
cmp
call
jp
or
cmp
shrb
mov
pop
mov
stos
or
clc
jb
fcoms
test
mov
lret
pop
xchg
mov
movsl
jl
outsl
fldenv
imul
pop
mov
mov
out
sbb
ret
adc
mov
or
insl
data16
mov
push
int
in
fiaddl
and
cmp
sub
icebp
inc
or
dec
call
mov
cmp
jnp
int
ds
or
fistpll
add
dec
fmull
or
mov
xchg
mov
ljmp
ljmp
test
cwtl
push
push
pop
and
xor
loop
mov
pushl
fwait
cmp
or
stos
insl
pop
jne
fdiv
cwtl
mov
xchg
jo
adcb
xor
mov
dec
dec
sub
or
push
insl
fcomps
test
mov
shrl
js
dec
jecxz
xchg
sub
jno
in
aas
mov
outsb
int
shrl
into
push
int3
mov
sub
pop
iret
jno
push
dec
lea
shrd
jle
je
inc
loope
cld
enter
scas
sbb
cmp
pop
mov
mov
mov
sbb
lret
js
dec
cli
pop
mov
lcall
call
jp
or
cmp
ljmp
cmp
call
adc
and
pop
subl
mov
ret
cmp
mov
jns
and
scas
in
and
rep
sbb
cmp
arpl
loopne
cli
iret
stc
incl
xchg
push
add
aam
dec
movl
fimull
jp
cmp
adc
xchg
lea
xchg
mov
push
sbb
decb
fsub
mov
loop
cmc
sbb
aas
lock
in
test
adcb
jno
sbb
arpl
sub
xlat
enter
jecxz
cmpsb
dec
xor
mov
push
je
inc
inc
mov
mov
xchg
icebp
mull
scas
loope
mov
testb
fwait
lea
iret
loop
mov
ret
push
mov
add
cmp
mov
xchg
or
add
aas
jb
mov
mov
or
push
or
mov
xchg
scas
push
adc
xor
into
mov
push
sub
jne
dec
push
dec
in
adcl
xchg
mov
pop
pop
clc
subb
aad
add
mov
xchg
cmpsb
repz
jge
jl
sub
or
pop
pop
jne
ficoms
cmc
push
sbb
daa
mov
cli
push
daa
adc
jecxz
mov
jmp
xor
lods
xor
jno
or
inc
adc
dec
push
sbb
or
sub
or
icebp
adc
jg
mov
mov
lret
imul
addr16
mov
dec
lods
jp
test
cltd
cld
jne
jl
pop
mov
lcall
paddd
decl
adc
in
jno
adc
lea
mov
mov
pop
xchg
dec
cmp
mov
dec
ret
xor
fdiv
sub
lahf
mov
sbb
or
int
adc
adc
mov
fdivrs
aas
mov
stc
ljmp
sub
mov
dec
insl
int
xchg
test
mov
xchg
xor
push
daa
lret
sti
dec
jle
ficompl
mov
mov
push
test
fldcw
push
mov
jmp
push
dec
cmpsl
xchg
outsl
or
enter
or
cmc
mov
xchg
test
mov
dec
aam
sbb
inc
pop
sub
sbb
loop
push
stc
fdivrl
and
clc
js
loop
mov
xchg
cmp
stos
or
lea
mov
sub
or
jge
iret
inc
in
inc
and
jl
xchg
inc
out
pop
imul
stos
pusha
arpl
or
repnz
push
mov
dec
dec
sbb
mov
jno
in
movsb
out
mov
jle
pop
lea
sub
minps
f2xm1
inc
imul
and
cltd
fs
movsl
sti
movsl
subl
jbe
int
out
lret
push
loopne
clc
fcmovnbe
xor
mov
lock
or
xchg
jae
jo
daa
fidivrs
fwait
xchg
add
iret
mov
dec
jmpw
push
addl
cltd
mov
jbe
mov
cmp
inc
stos
mov
stos
leave
loop
push
fcomip
insl
inc
cs
dec
movsb
scas
fdivs
mov
pop
xchg
dec
adc
cmp
stc
cwtl
in
loope
divw
jmp
xor
ljmp
jle
pop
dec
or
mov
mov
sahf
ret
mov
cld
adc
jb
adc
mov
in
fimull
xor
pop
lret
xchg
arpl
les
mov
or
push
dec
inc
xchg
pushf
jno
push
sti
test
inc
inc
je
popf
out
mov
mov
dec
loopne
cli
ljmp
cs
dec
jl
fisttps
sbb
int3
or
leave
leave
adcb
lods
jle
in
push
shlb
and
popf
and
mov
into
xor
or
stos
xchg
aas
sbbl
xchg
pop
loope
lock
fsub
std
fistpll
clc
pop
pop
push
popa
mov
jae
jp
add
and
adc
jmp
cmp
xchg
iret
iret
cmpsb
mov
outsl
imul
and
mov
pop
pop
mov
jb
dec
sahf
mov
add
sar
adc
dec
test
popa
repnz
lret
mov
std
xchg
std
or
aas
lret
adc
sbb
nop
inc
or
adc
sbb
adc
ret
adc
push
das
jbe
fstl
push
sbb
enter
loopne
xchg
out
cmp
pop
add
jge
push
ljmp
jns
xchg
xor
call
inc
shlb
dec
fldt
lock
and
inc
jg
mov
aas
and
in
sub
or
pop
mov
jo
pop
inc
imul
fdivs
addr16
cmp
into
jle
mov
add
jle
add
shlb
std
pop
xorb
enter
testl
test
cmp
push
popa
adc
pop
cmc
mov
xchg
addb
and
pop
movd
gs
sti
into
pop
mov
jl
cmpsl
jno
adc
inc
int
pop
and
adc
fidivrl
pushf
mov
push
add
add
cltd
adc
call
jp
lods
push
movsl
or
ljmp
adc
outsl
inc
loop
lret
add
iret
fisttps
pop
ja
or
push
mov
adcb
fcmovu
mov
xor
jbe
test
inc
sbb
lahf
in
sahf
test
stos
xchg
jle
ljmp
lds
sti
imul
add
xchg
add
xor
inc
das
sbb
dec
pop
inc
xor
cmpsb
push
sbb
pop
and
loopne
xchg
jg
es
hlt
adc
out
dec
jmp
xchg
sub
lods
stos
repnz
sbb
mov
arpl
dec
shl
xchg
flds
xlat
dec
outsl
mov
dec
mov
rcr
in
pop
xchg
aas
pop
mov
leave
ds
jbe
int
fucomp
jo
jmp
jb
loop
cltd
push
sbb
dec
and
dec
out
xchg
test
lret
frstor
pop
lcall
imul
pop
or
outsb
jl
mov
or
mov
and
lret
not
jo
inc
push
imul
cmp
xor
sbbb
xor
cltd
int
aaa
test
in
lds
pop
sarb
sar
fwait
pop
xchg
push
push
cwtl
pushf
inc
jmp
mov
outsl
push
inc
into
add
shr
loope
sbbb
dec
and
cmc
mov
rolb
mov
jo
movsb
sbb
into
cmp
add
xor
mov
or
mov
mov
jae
jnp
add
mov
rcrb
adc
jae
jnp
xchg
js
jne
mov
push
adc
cmp
aad
es
xlat
xor
popa
pusha
sbb
aam
bound
and
shlb
push
jp
add
nop
push
jecxz
out
aad
jae
stc
add
mov
lahf
lahf
inc
sbb
adc
jge
inc
xor
movsl
movsb
cmp
and
out
dec
or
and
mov
cmpb
mov
sbb
or
sub
sub
mov
inc
jl
and
iret
aas
in
mov
pop
cmp
sbb
sub
int
test
push
xor
jmp
sbb
and
pop
xchg
lcall
sahf
les
fistl
pop
xchg
xor
mov
test
add
mov
ljmp
add
shlb
das
jge
xchg
fiadds
pusha
insl
pushf
dec
ljmp
cld
hlt
mov
pushf
data16
cmp
xor
sub
xor
jp
gs
cmc
add
xchg
pop
mov
dec
or
insb
dec
inc
jb
lret
loopne
dec
adc
ss
mov
mov
cmp
fdivl
mov
inc
or
push
fldt
lods
loope
pushaw
push
pop
and
aaa
dec
ss
push
pop
cmc
imull
cmp
pop
ljmp
gs
lcall
lock
insl
xor
inc
outsb
popf
mov
sbb
ja
jno
dec
jae
inc
jne
pop
mov
push
push
push
mov
pop
cmc
and
ja
sbb
sub
lea
rorl
or
xchg
push
and
and
adc
ljmp
or
add
add
inc
pop
loope
lea
imul
fmul
sbb
imul
adc
pop
mov
and
push
mov
add
jo
int
sbbb
outsb
outsb
icebp
shrl
jne
cmp
scas
add
int
adcb
imul
cmp
sub
adc
call
dec
mov
shlb
cld
arpl
and
add
adc
jbe
push
in
int3
notl
mov
xchg
sub
xchg
outsl
call
pop
out
mov
bound
xlat
xchg
or
mov
lea
push
pop
pusha
xchg
es
test
arpl
add
stos
rcrb
cwtl
add
fwait
and
or
popl
mov
fsubrs
out
mov
nop
lods
mov
adc
loopne
mov
divb
fmuls
cmp
in
mov
lods
push
jae
push
jmp
fisttpl
aaa
cmp
iret
inc
or
mov
push
inc
and
aaa
mov
adc
ret
int
cmp
sub
xor
xor
scas
addr16
movsl
cmc
popa
ret
loopne
cmpsl
shll
call
outsb
insl
pop
xchg
data16
incl
jbe
std
pop
ljmp
loope
in
popf
mov
lret
jno
in
fidivl
hlt
arpl
jmp
test
inc
je
outsb
cmp
imul
cmp
jno
xchg
push
aad
xchg
mov
push
mov
and
rclb
dec
xor
sar
jnp
fstpl
push
sbb
jecxz
and
dec
shll
rol
out
jge
jmp
rcll
adc
sub
lds
lds
rolb
aas
addr16
mov
jb
push
clc
xor
lret
push
cmp
sub
and
ja
insb
test
clc
cld
aad
push
dec
aas
jg
push
cli
addr16
mov
out
into
xchg
lds
imul
je
repz
adc
add
cmp
fldt
das
test
cmp
in
fstpt
insl
push
stos
cmp
mov
movb
mov
js
or
sbb
fisubl
daa
sub
dec
stos
inc
cmpsl
cmpsb
iret
jo
hlt
popf
add
adcl
aas
or
cli
mov
sahf
or
dec
mov
cmp
jecxz
test
inc
sarb
jg
in
dec
push
xchg
jb
nop
cmp
int3
or
aaa
sbb
cld
cltd
pop
cwtl
push
popa
sub
mov
pusha
ds
aam
cmc
setb
sbb
mov
cmp
xorb
sbb
pop
jecxz
idiv
mov
xchg
fdivr
push
imul
les
xlat
subb
lret
push
sahf
xchg
jbe
cmpsb
popf
enter
xor
adc
mov
call
loop
clc
xchg
or
mov
outsl
into
xor
pop
jbe
dec
or
push
iret
xorl
ret
add
pop
mov
and
lds
push
stc
in
jl
add
cs
fwait
pop
test
daa
imul
loope
add
dec
sbbl
jo
or
leave
dec
testb
xor
sbb
mov
xchg
mov
adc
jno
xchg
enter
cmp
add
inc
pop
dec
outsl
insl
add
pop
sarl
sub
jp
push
pop
lock
xchg
lahf
insb
pop
cmp
test
push
imul
pop
testb
xchg
push
pop
cmc
jl
les
loop
sbb
dec
xchg
sub
sub
push
xchg
pop
out
imul
sub
jne
leave
mov
mov
sbb
leave
call
out
js
mov
fstp
popa
movb
mov
xchg
in
sub
aaa
jbe
lcall
and
aam
movsb
mov
jl
loop
xchg
or
push
jno
mov
xchg
pop
xor
mov
shr
push
in
dec
pushf
sbb
in
into
xor
push
push
dec
int
dec
sbb
mov
mov
stos
mov
scas
repnz
cmp
enter
xor
in
imul
fbstp
push
mov
dec
mov
out
dec
out
lods
loop
dec
xchg
ret
cltd
mov
ja
cmpsb
out
out
jge
xchg
inc
imull
outsb
cmp
mov
loop
mov
lea
fldl
imul
xchg
xor
xor
push
cld
loop
loope
pop
push
inc
out
xlat
fldcw
sahf
clc
mov
scas
push
es
roll
insl
xchg
imul
into
push
or
loopne
divl
sub
clc
ficoms
push
js
loopne
mov
mov
filds
fildl
jmp
stos
lods
pop
in
cmp
pop
dec
es
cld
stc
out
xor
jo
adc
test
mov
and
cli
loop
or
stc
cmp
stos
push
mov
sub
mov
jns
or
cli
or
push
loopne
or
sahf
xchg
out
cmp
jns
pusha
int3
xor
sub
rorb
cmpsl
gs
cmpb
int3
cld
and
pop
mov
addr16
imul
mov
call
cltd
mov
cli
stos
repnz
dec
pop
pop
jns
js
mov
js
in
mov
push
ds
mov
add
cmp
aam
leave
fdivr
enter
test
in
cmpsl
push
lret
gs
pop
imul
rcrl
mov
nop
adc
adc
xchg
push
jns
add
dec
sub
out
cli
sarl
push
pop
push
sbb
jno
gs
mov
out
sub
fcomps
bound
test
mov
addr16
adc
test
pop
mov
arpl
pop
xchg
mov
enter
xchg
sub
dec
loope
or
pop
dec
imul
mov
jp
insb
jle
pop
cmp
loopne
insl
iret
add
cmc
out
call
jg
popa
fadds
stos
mov
cmpsl
out
fsts
xor
fstpt
xor
xchg
and
pop
sub
enter
adc
dec
adc
push
notb
sbb
aaa
subl
es
fptan
jge
sbb
fldenv
push
dec
jg
icebp
adc
cmp
add
mov
imull
and
loope
aad
shll
fcompl
lds
push
in
call
lahf
cmpsl
and
out
pop
mov
mov
inc
imul
mov
inc
stos
jae
icebp
sbb
cli
aaa
push
jb
rorb
jle
mov
sbb
ljmp
cmp
xor
push
aas
adc
inc
push
loop
fwait
mov
pushf
loope
js
cmp
xchg
push
and
dec
cwtl
movl
jnp
xor
out
xor
nop
pop
dec
loope
add
fadds
popf
sub
mov
jecxz
adc
mov
jno
inc
push
mov
test
adc
jl
divb
hlt
aad
mov
lret
mov
cmpsb
test
push
push
dec
fidivs
add
xlat
dec
xor
push
out
and
add
push
or
adcl
pushf
xor
and
or
mov
lret
les
xor
xchg
jp
xchg
xchg
lock
sbb
scas
and
inc
lock
loopne
loopne
cmp
dec
scas
inc
push
test
jl
ret
scas
ds
mov
adc
jp
fbstp
and
xlat
mov
sbb
mov
rclb
cs
sub
mov
push
lods
test
inc
jnp
ds
mov
jg
in
mov
or
test
repnz
int3
pop
cmp
push
jbe
mov
int
sub
cmpb
mov
mov
fsubrl
sub
pop
andb
cwtl
xor
or
inc
lods
add
outsb
fmuls
dec
pop
jmp
sti
testb
rclb
xor
inc
or
cs
add
push
out
xchg
xchg
fxch
inc
jmp
cs
test
mov
or
sub
cmp
xor
insl
and
test
pop
dec
outsl
pop
xlat
dec
in
dec
mov
hlt
in
fwait
mov
sbbb
dec
mov
cld
adc
pushl
adcb
dec
mov
repz
pop
call
arpl
out
int
dec
xlat
movsl
notl
stos
out
push
cmp
outsl
popf
into
xchg
mov
js
jne
cmp
shrb
shl
jge
jne
sti
and
icebp
ret
sahf
sbb
add
dec
inc
repz
and
jp
adc
mov
dec
in
stos
or
sbb
mov
push
add
movsl
xchg
xchg
adc
pusha
es
daa
outsb
das
pusha
stc
pop
dec
lds
push
test
mov
xchg
mov
mov
and
int
gs
iret
mov
lea
mov
hlt
pop
cmp
movsb
ret
or
in
sbb
adcb
pushf
imul
and
pop
in
ss
jo
push
sbb
dec
andb
push
inc
mov
sub
rorl
je
sub
or
xor
lds
push
inc
mov
iret
jns
xor
sbb
repz
mov
dec
shrb
aam
and
into
loope
sub
mull
in
stc
popa
xchg
hlt
mov
add
pop
jne
lret
adc
pop
fsubrp
dec
pop
xchg
pop
mov
fprem
gs
test
enter
mov
sbb
xor
push
movb
sbbb
push
icebp
repnz
test
je
nop
cmp
jne
aas
push
andb
mov
cmp
xor
push
and
fs
mov
sub
jne
lds
imul
mov
test
icebp
push
pop
mov
imul
into
sbb
inc
sahf
fiaddl
sahf
shl
cli
test
cmpsl
xchg
out
push
pop
mov
pop
or
decb
or
imul
add
rorl
or
stos
push
jmp
imul
add
fsubrl
loopne
xchg
rorl
mov
jg
idivl
lahf
and
test
or
roll
test
ljmp
sub
jbe
or
fisubrl
test
aaa
imul
push
dec
mov
dec
scas
vcvtdq2pd
jo
out
cmpb
stos
inc
fistpll
push
add
fsub
xchg
shrl
push
les
or
int3
ret
mov
test
xchg
xor
hlt
scas
sub
push
add
add
arpl
xchg
icebp
dec
xor
mov
subl
pushf
loop
xor
fcmovb
cld
jp
sbb
pushf
bound
in
imulb
pop
mov
adc
es
shlb
sbb
dec
sahf
insl
push
sub
fstpl
test
stos
fisttps
aas
cmpsl
stc
or
and
cmc
loop
inc
adc
ret
mov
dec
inc
roll
xchg
shrb
idivl
mov
xor
jnp
xchg
cmp
add
rdtsc
jnp
sub
negb
nop
out
inc
sbb
jns
imull
jmp
fbstp
cmpsl
add
outsl
pop
insb
scas
lea
aaa
aas
mov
iret
and
or
cmp
shr
cmp
test
scas
les
lds
mov
fidivs
mov
cld
enter
pop
jp
xchg
loopne
inc
shll
test
or
xlat
mov
lret
inc
ja
outsb
ds
sarb
xchg
mov
pop
pop
incb
outsb
adcl
ss
out
xchg
xor
pop
and
xchg
lods
mov
mov
inc
mov
loop
mov
jmp
stos
pop
inc
cmpsb
adc
jae
and
jg
xchg
or
sbb
ljmp
adcl
sbb
adc
cli
fwait
xor
jns
adc
sti
fsubrs
inc
mov
test
out
jne
jg
push
jle
fs
pop
int3
nop
jno
pop
lock
in
xchg
shlb
hlt
inc
cmp
out
lds
cwtl
xchg
pop
pusha
imul
rcll
ljmp
xchg
xor
mov
or
push
sub
rorb
cmpsl
inc
fiaddl
std
ljmp
sbb
dec
push
filds
mov
sbb
xor
rorl
jb
fdivrs
int
lret
xchg
jns
filds
mov
xlat
sbb
mov
test
out
addr16
les
pop
clc
outsl
stos
mov
cltd
clc
test
jp
or
cmp
ljmp
cmp
call
jp
or
cmp
ljmp
cmp
call
jp
or
cmp
out
dec
cli
pop
mov
sahf
cmp
call
jp
or
mov
rolb
cli
das
std
mov
inc
out
pop
aas
dec
vmread
push
cmp
mov
clc
lahf
call
fildll
aas
dec
vmread
push
dec
cmp
mov
stc
xchg
call
iret
mov
es
pop
js
push
push
cmp
mov
pushf
jmp
popf
out
out
ficoms
filds
push
cmp
sub
cmp
jg
mov
cwtl
sub
push
mov
std
pop
inc
out
insb
scas
pop
rcrb
mov
test
mov
mov
jae
popa
std
mov
add
stc
rorb
mov
stos
pop
scas
lods
push
sti
mov
lahf
jmp
fadds
mov
adc
out
add
fbld
das
pop
insl
cmp
nop
sbb
mov
pop
enter
aaa
mov
mov
push
jg
mov
addb
out
imul
call
xor
iret
dec
movl
loopne
nop
push
jge
mov
fdivs
int3
repnz
iret
pop
stos
mov
out
es
vmread
push
dec
cmp
mov
cmpsl
enter
call
aad
fucomip
inc
pop
pop
xor
imul
pop
sbb
pop
pop
scas
test
sar
stos
sti
cwtl
out
in
lcall
xor
and
xor
add
dec
dec
outsl
or
in
mov
fidivrs
mov
sbb
arpl
jg
dec
cmp
scas
fdivrs
call
iret
mov
aas
dec
vmread
push
dec
cmp
scas
fdivrs
call
iret
mov
adc
pop
insb
scas
add
sbb
int3
mov
call
arpl
stos
jecxz
add
hlt
outsl
adc
mov
out
rcrb
pop
pop
cmc
jno
dec
repnz
sub
add
mov
jmp
xlat
clc
std
adc
sahf
jl
bound
shrb
sub
mov
stc
test
pop
xchg
jbe
inc
pop
cli
mov
push
test
adc
int
loope
push
ret
mov
inc
aaa
sub
xor
mov
sbb
cmp
aas
mov
pop
push
jns
cmp
push
sbb
das
add
mov
loop
sub
inc
lock
pop
push
add
inc
push
mov
add
fwait
insl
inc
fistpl
lods
pop
out
jb
jecxz
add
loopne
rcll
inc
jge
xchg
cmp
int3
clc
xchg
outsl
dec
movsl
add
xor
cmp
push
divb
cld
jo
jb
xlat
scas
adc
push
pushf
fnstcw
cmc
add
les
movsb
jne
data16
in
xor
or
mov
dec
pushf
outsb
test
jne
lods
rclb
and
int3
test
push
nop
popa
mov
cli
adc
mov
into
adc
sti
call
dec
inc
mov
mov
or
sub
ss
dec
push
int
mov
cs
xchg
push
xor
js
and
test
sahf
and
lods
and
addr16
gs
xchg
add
jb
add
cmp
mov
out
mov
mov
insl
stos
imul
fisubrs
cmpsb
jge
mov
xchg
cmp
pop
daa
mov
repz
out
faddl
daa
mov
xor
sub
xchg
int
fistl
test
xchg
inc
and
jne
jecxz
cmc
stos
fbstp
push
loopne
cmc
add
inc
sub
fcomp
test
mov
sbbl
test
and
push
mov
gs
inc
cmpsl
jnp
xor
jl
sbb
push
cli
pop
inc
lods
adc
mov
sub
inc
xchg
push
fldl
out
add
and
cmp
mov
aad
mov
mov
test
push
and
out
lock
movsl
sbb
dec
xchg
add
jle
ds
push
or
xor
fadds
xchg
mov
add
movsb
adc
cmpl
dec
dec
cs
mov
sub
push
rolb
jno
pushf
std
pop
ret
in
cmp
subl
sub
mov
cmp
push
cli
ja
mov
cmpsb
in
jle
out
and
insl
mov
pusha
pop
xchg
sbb
aad
in
cmpsl
insl
add
or
xchg
cli
fidivs
shlb
mov
test
pop
sub
btr
add
mov
lea
push
jbe
mov
movl
mov
pop
cmpsb
push
lret
lcall
xchg
movsb
inc
lock
stos
xchg
shrb
push
cmc
fsubr
aas
mul
test
push
cmpsb
pop
push
mov
mov
jae
icebp
dec
mov
or
in
sub
jle
sub
mov
int3
adc
out
push
cmp
adc
dec
cld
inc
jp
repz
int
push
fiaddl
xor
jecxz
fisubrs
rcr
xchg
lea
scas
pushf
adc
stos
out
mov
call
int3
cltd
mov
js
push
jo
fldl
xor
divb
and
push
pop
gs
push
loope
dec
cwtl
or
jae
add
mov
push
mov
das
xlat
icebp
lret
sbb
int
dec
jnp
shl
jnp
push
push
inc
cmp
rolb
frstor
inc
fwait
jg
and
mov
add
add
inc
mov
out
insb
xchg
mov
jne
leave
sbb
mov
mov
xor
pop
sub
fisttps
imul
add
gs
fidivs
mov
dec
push
sbb
mov
adc
add
jp
mov
sbb
les
js
pop
push
mov
push
cs
cmp
cmp
pop
adc
leave
inc
aad
sbb
mov
inc
scas
jns
jge
adc
cmp
sbb
mov
ja
loopne
lahf
sti
cmp
lock
or
mov
push
jle
inc
je
dec
cmpsb
cmp
aam
inc
fsubrs
dec
inc
sbb
cmp
daa
ret
jp
push
mov
sarb
rorl
cmp
xchg
pop
pop
stos
mov
addr16
jb
dec
out
sub
cmc
pop
movsb
xorb
mov
mov
fildll
dec
into
in
adc
fimull
outsl
and
and
imul
push
imul
push
cwtl
mov
inc
pop
pop
ss
out
cltd
xchg
inc
sbb
sub
add
inc
imul
lods
pop
popf
mov
scas
dec
add
cmpsb
and
fdivrl
pop
fs
stc
arpl
adc
or
ret
inc
jae
inc
cli
jae
dec
repz
mov
data16
add
sbb
inc
adc
sub
mov
cmc
sub
jb
add
fwait
leave
jb
inc
jmp
lcall
pushl
jmp
push
push
mov
jnp
add
sub
pop
dec
inc
addr16
sub
mov
pop
fdivl
xor
mov
xor
push
iret
leave
out
fildl
scas
dec
mov
into
leave
lods
adcb
add
mov
pop
push
and
fadds
cltd
lret
add
jp
lahf
mov
in
nop
adc
and
test
or
int
movl
xorb
loope
jp
mov
loope
sbb
out
lret
imul
data16
mov
jl
test
in
pop
mov
sub
sub
pop
sub
sub
and
xchg
mov
lods
gs
xor
in
pop
fwait
sub
sub
test
mov
fnstenv
ds
cmpsb
sub
jmp
mov
fstpt
sub
xchg
jecxz
sarb
cmp
sbb
rcll
cmp
add
mov
xor
adc
pop
xchg
xor
jmp
ja
inc
mov
lock
jbe
and
lret
cmc
push
jne
fisubrs
sahf
cmc
mov
or
or
mov
repnz
jmp
cmp
xor
and
cmpsb
mov
andl
imul
push
or
dec
sub
mov
shlb
leave
inc
cmp
inc
push
fstps
push
cld
adc
push
sub
outsb
mov
or
pusha
test
lock
sar
xchg
shrl
mov
fistps
shrb
inc
cld
clc
push
jmp
mov
into
and
xchg
push
xchg
push
inc
adc
je
sbb
pop
xchg
aad
arpl
nop
add
xor
outsl
sti
mov
enter
pushf
andl
inc
repnz
mov
and
mov
subl
push
sub
call
movsl
dec
leave
mov
das
loopne
mov
pop
dec
xor
test
shll
mov
mov
push
setle
stos
in
adc
les
cmp
je
lods
mov
and
mov
into
push
mov
outsl
cmp
ljmp
push
sbb
fdivl
stc
scas
jle
mov
xchg
jne
nop
lea
pop
dec
and
and
cmp
sub
xor
js
pushf
jne
push
pop
cld
jo
rolb
jecxz
jbe
loope
mov
sahf
mov
js
rcrb
gs
std
adc
inc
inc
or
pop
xor
cmp
insl
sub
add
cld
inc
imul
cs
xchg
mov
sub
sbb
add
or
stos
idivb
js
xor
ret
je
xor
xchg
xchg
andb
dec
pop
sub
in
out
pop
ja
cmpsl
jne
jno
add
inc
xchg
push
xorl
idivb
test
aaa
sub
shrb
cmp
push
pop
push
jg,pn
mov
push
adc
jb
insb
xchg
xchg
stos
iret
dec
daa
mov
jae
push
push
cld
mov
insb
mov
jle
jns
cli
xchg
sbb
cmp
mov
adc
out
inc
push
cmp
push
pop
adc
sbb
xor
icebp
lods
es
cmp
test
cltd
dec
push
cld
fcoml
or
bound
push
mov
lock
cmpsb
adc
inc
inc
in
rclb
aam
and
ljmp
movsb
mov
sub
push
gs
jle
movsl
add
imul
aas
ret
cli
scas
rcll
add
nop
pop
dec
call
dec
in
mov
cmp
cwtl
leave
mov
test
mov
jb
shl
sub
and
fwait
test
push
dec
pop
dec
pop
jge,pt
cld
add
std
sub
lods
rorl
loop
pop
lret
xchg
icebp
xchg
xor
xchg
shlb
jle
mov
addr16
add
or
repnz
test
dec
push
xchg
loopne
mov
ficoms
jl
movl
mov
clc
mov
xor
test
rcll
aaa
jg
je
cwtl
or
nop
hlt
into
enter
lret
popa
es
jg
js
inc
mov
xor
cmpsb
lock
rorl
fimull
loope
and
mov
mov
sub
pop
jecxz
cld
mov
mov
hlt
xchg
cmp
addw
jle
call
outsl
das
repnz
imul
das
xchg
xchg
inc
es
ss
cmp
push
frstor
out
xchg
ljmp
lock
stos
adc
xor
aaa
mov
pop
mov
add
adc
push
scas
push
gs
aad
xor
add
ljmp
inc
mov
sbb
scas
push
call
sub
aas
data16
lods
inc
into
sub
js
lahf
mov
pop
loopne
mov
push
cmp
loope
pop
adc
stos
cltd
pop
or
mov
xchg
adc
gs
lods
loop
fdivr
inc
fldenv
and
inc
flds
or
dec
xchg
mov
ss
jmp
xchg
jl
dec
loopne
pop
popl
dec
test
mov
mov
stos
and
dec
loopne
rorb
cltd
ss
popf
rolb
inc
push
cmpsb
pop
jae
cmpsb
and
movsl
push
ret
popl
fidivl
adc
fcomip
adcb
jmp
sub
push
in
mov
xchg
mov
lahf
clc
int3
pushf
pop
cmc
notb
ds
rcl
cmc
cmp
dec
call
decb
addr16
push
sahf
inc
jle
inc
adc
mov
xlat
jns
inc
sub
std
sbb
mov
mov
pop
push
and
movsl
sbb
ret
ret
push
xor
mov
push
push
jo
xor
xchg
jns
pop
push
test
push
mov
insb
aad
leave
daa
movsb
mov
gs
mov
outsb
jo
pop
je
adc
mov
scas
xchg
and
xchg
push
ss
js
adc
fistl
add
ret
les
cmpsl
cmp
xchg
repz
jmp
movsl
adc
divb
ficompl
push
push
pop
jg
aam
push
shrl
sub
xor
push
add
ret
xchg
xor
idiv
pop
xchg
js
jo
jl
mov
sahf
fisubl
xor
dec
xor
rorl
mov
repnz
shr
out
roll
dec
xor
cmpb
pop
fmull
jle
mov
mov
leave
xor
dec
sbb
inc
loop
jg
mov
inc
xor
jp
dec
shll
divl
push
insb
mov
testb
dec
mov
pop
xor
fndisi(8087
fcomps
aam
roll
fwait
cmc
jle
loop
pop
out
es
loop
xchg
mov
cltd
inc
xor
into
pop
in
cltd
pop
dec
imul
shld
lds
fwait
mov
jnp
sub
rol
push
sarl
into
sbb
push
inc
inc
or
test
repz
mov
cmp
mov
cmpsl
xlat
mov
pop
cli
sub
mov
push
idiv
xlat
push
jae
or
sub
jmp
cs
fyl2xp1
sbb
dec
and
stos
mov
mov
gs
adc
movsb
xor
cmp
xor
cmc
fwait
jg
out
pop
loope
aad
daa
mov
and
or
dec
and
dec
notb
int
xchg
add
sbb
add
add
adc
mov
lahf
xchg
push
imul
out
xor
and
ds
or
pop
xor
es
aas
add
sbb
inc
mov
addr16
out
fwait
popf
testb
add
popa
rcll
or
jae
negb
je
push
cmpsl
test
stos
lock
dec
test
in
push
push
roll
cmp
mov
mov
mov
inc
cltd
cmp
jle
jne
xchg
sbb
and
jmp
out
in
aad
lock
dec
fimuls
mov
aam
sbb
mov
push
cmp
inc
add
mov
ret
mov
sbb
popa
imul
ret
add
cmp
adc
and
out
imul
rclb
cwtl
add
sbb
mov
stos
jl
cmpsb
divl
push
cltd
fs
add
and
ss
xor
push
push
jbe
out
mov
dec
dec
insb
fisubrs
or
xchg
or
lret
aad
and
shlb
loopne
inc
lea
sbb
cmpsl
hlt
push
mov
xor
dec
dec
mov
cmpsb
cld
xor
add
sbb
lock
arpl
xor
ja
hlt
pop
jge
sti
fisubl
xor
fiadds
adc
cmp
lods
popa
xorl
mov
xchg
jp
clc
int3
ret
es
push
mov
push
arpl
js
and
mov
icebp
mov
flds
push
clc
lahf
mov
and
sbb
push
sbb
into
scas
das
sbb
cmc
shll
mov
sbbb
jae
jo
loope
test
or
dec
or
repz
scas
testb
and
jno
out
cmp
or
shlb
sub
dec
xchg
int
popf
ret
push
pop
mov
cmp
lods
lret
jo
pop
fstps
loope
cld
das
sub
sbb
inc
fcoml
add
mov
push
mov
ljmp
mov
inc
pop
mov
scas
rolb
jp
xchg
popa
nop
loopne
push
bound
test
insl
std
dec
or
aam
addl
ja
cmpsw
inc
sbb
xor
aad
push
mov
in
inc
adc
mov
test
dec
push
movsb
das
cltd
jne
into
lahf
enter
aad
aad
insl
cmpsb
xchg
xor
out
inc
jmp
daa
mov
sbb
push
enter
push
xchg
mov
mov
mov
mov
sub
sbb
cmp
aam
orl
jle
inc
aam
sub
insb
cld
je
mov
jl
fsubrs
stc
shlb
or
push
inc
inc
orl
add
xchg
mulb
mov
sub
lahf
xor
stc
repnz
out
add
mov
out
add
int
add
arpl
out
cs
std
ja
outsl
and
mov
mov
nop
mov
and
mov
test
mov
pop
mov
cmp
loop
fadds
xlat
ret
jge
push
js
mov
fwait
into
data16
mov
out
dec
test
pop
loopne
sub
mov
adc
icebp
outsb
movsl
inc
sarl
cmp
push
imul
out
cmpsl
ljmp
xor
jno
fisttpll
test
jg
lahf
ljmp
add
arpl
sbb
push
test
push
jo
push
test
and
sub
test
dec
mov
out
dec
pop
fisubrs
aad
pop
dec
jmp
sub
xor
test
ret
xchg
inc
fbstp
pop
push
mov
scas
cld
aas
push
inc
jmp
scas
inc
fcoms
mov
dec
andl
or
imul
mov
pop
fcmovnbe
inc
daa
test
cmp
sbb
and
movl
mov
and
add
orb
sub
sub
lret
shll
or
clc
mov
xchg
push
test
jp
adc
movsl
popa
ficoms
imul
dec
mov
enter
jns
mov
aam
negb
cmp
jg
cmpsl
add
adc
mov
add
out
rcll
int
insl
mov
es
sub
dec
push
sub
leave
inc
cmp
lods
pop
push
aam
std
outsl
inc
push
xchg
xchg
out
iret
nop
call
and
inc
mov
lret
xchg
pop
push
pop
sti
es
fmuls
mov
sub
push
adc
add
jnp
sbb
mov
js
inc
imul
jns
push
test
das
dec
jbe
xchg
jp
cwtl
inc
fstps
scas
cmpsb
adc
imul
sub
fwait
push
sbb
jle
mov
fsubrs
cmp
stos
push
das
test
loope
or
inc
and
rclb
fdivl
xchg
mov
inc
dec
outsl
pop
pop
adcb
sbb
dec
add
out
and
aam
das
jb
pusha
loopne
leave
in
xchg
fdivp
sahf
cltd
xor
jo
fsts
out
in
mov
lods
nop
repnz
cmp
jg
mov
ret
pop
fsubrl
push
mov
mov
xchg
inc
add
test
lret
fcompl
mov
lret
icebp
jns
movb
rorb
cltd
mov
or
add
incl
mov
das
or
pop
shr
and
cmp
xchg
cmp
ret
stc
pop
adc
int
xchg
adc
cli
pop
lods
lret
sub
ret
add
jo
in
jns
in
jmp
add
lea
inc
jnp
lods
mov
test
xor
loope
inc
fstpl
adc
outsl
or
dec
pusha
loopne
cmc
stos
mov
ljmp
xchg
add
popa
sbb
out
hlt
out
cs
push
sbb
sub
xor
sub
arpl
out
xor
jecxz
push
inc
mov
icebp
out
dec
xor
jle
mov
repz
add
add
ss
js
push
decb
addb
mov
jne
mov
in
and
sub
push
add
ljmp
push
int
inc
ja
dec
fwait
addl
sbb
mov
dec
movsb
xchg
lds
arpl
push
rcrb
dec
pop
inc
jb
push
sti
bound
sub
xchg
lahf
jo
popf
call
and
xchg
sub
xor
jno
in
mov
mov
mov
fwait
rcrl
and
sub
sbb
adc
stos
mov
dec
roll
fs
sbb
inc
bound
in
xchg
adc
adc
pop
ss
xchg
es
cmpsb
sub
in
jno
imul
adc
jecxz
push
mov
mov
fwait
push
dec
add
mov
data16
and
lock
jns
pop
push
fsubr
ja
add
adc
lods
shl
cmpsl
faddl
lea
jl
sti
cmpsl
dec
sub
lret
push
sbb
frstor
or
icebp
arpl
sbb
add
leave
pop
popa
sbb
dec
shrb
loop
adc
into
push
sbb
lods
subl
ja
jp
xor
icebp
out
lret
setae
ds
add
fidivs
xor
scas
gs
mov
test
adc
xlat
cmp
jne
sub
mov
maxps
hlt
adcb
sbbb
sub
mov
xor
pop
out
imul
add
push
mov
jp
scas
aaa
push
sub
es
dec
call
pop
push
cld
loop
fcompl
divl
test
lret
mov
inc
in
out
jae
cmpsl
inc
or
jns
jg
inc
dec
sbb
sub
aam
scas
and
adc
mov
je
mov
gs
dec
imul
ljmp
push
cmpsb
cmp
fstpl
xchg
xor
mov
dec
std
in
mov
out
arpl
mov
mov
sub
movsb
call
mov
inc
push
inc
icebp
cmp
in
sbb
lock
stos
das
jle
loop
int3
scas
xchg
inc
xor
and
call
mov
mov
or
add
sbb
dec
cmp
scas
fdivrs
call
iret
mov
aas
dec
vmread
push
dec
cmp
scas
fdivrs
call
iret
mov
aas
dec
vmread
push
dec
cmp
scas
fdivrs
call
iret
mov
cmp
push
iret
cmp
call
and
adc
xor
push
jb
bound
cmp
push
mov
andl
sarb
sub
push
bound
xor
and
adc
add
sub
cmp
push
bound
xor
and
adc
add
repnz
cmp
pop
shrl
in
pop
cmp
call
jb
and
cltd
or
pop
xor
cmp
sub
cmp
mov
rcrl
xchg
ret
mov
adc
mov
hlt
pop
add
int3
out
js
dec
sub
orb
lret
inc
xor
outsl
fucomi
movsl
repnz
adc
sub
imull
cmp
and
ret
jmp
enter
pushf
push
bnd
in
dec
je
fstl
or
jp
mov
sub
loop
push
out
rorb
aas
dec
mov
std
lea
in
adc
inc
jecxz
in
jmp
mov
xlat
xchg
mov
mov
sub
bound
xor
and
adc
add
repnz
add
xor
and
jb
jns
mov
ljmp
imul
addr16
mov
scas
pop
xlat
sub
adc
loope
icebp
add
daa
xlat
je
dec
xchg
adc
jge
dec
xchg
xlat
cmp
pop
loopne
orb
push
cwtl
cmp
inc
std
xor
and
adc
add
repnz
sbb
sub
cmp
push
bound
xor
and
adc
add
repnz
sbb
sub
cmp
push
mov
das
mov
mov
es
in
xor
fwait
push
and
outsb
ret
lret
movsb
imul
xchg
dec
and
repz
repz
mov
xchg
pop
repnz
test
fcmove
jns
icebp
mov
xchg
movsb
cmp
ss
rcll
in
jecxz
cmp
cmp
mov
jnp
divl
insb
enter
test
xor
inc
repz
fcmovnbe
stc
les
cmp
icebp
adc
out
pushf
mov
ss
add
dec
fdivrs
jmp
mov
cwtl
and
cs
les
push
sub
push
sub
leave
insb
outsb
test
bnd
push
fwait
mov
cmp
push
repnz
or
lret
scas
adc
and
mov
out
xor
repnz
mov
push
std
add
inc
sub
stos
notl
pop
mov
into
adc
push
xchg
pop
mov
and
js
xor
adc
ror
sahf
sub
les
test
jecxz
pop
or
data16
add
scas
push
test
dec
movsb
push
adc
loop
data16
imul
inc
add
dec
out
into
es
mov
or
sbb
out
clc
inc
cmp
and
cmpsl
hlt
aas
insb
dec
pop
cli
xchg
cmp
push
jp
daa
xor
je
sbb
subl
loop
jl
sub
and
dec
jnp
ret
add
mov
jae
sbb
cmp
xor
mov
mov
movsl
ja
fldt
movsb
xor
mov
jmp
and
xor
cmpsl
mov
xchg
push
cmp
adc
xor
mov
scas
mov
mov
mov
mov
into
xlat
adcb
insl
jo
jge
xor
pop
mov
inc
adc
andl
jp
adc
or
pop
std
sbb
or
pop
or
not
call
inc
sbb
pushf
mov
push
enter
add
fbstp
pushf
xor
pop
inc
scas
std
jmp
push
hlt
lods
sbb
jnp
xor
loopne
aam
cmpsl
dec
loop
stos
adc
repnz
mov
and
push
jno
aaa
mov
arpl
movsb
mov
cmc
dec
dec
dec
dec
xor
out
mov
repz
dec
cmp
stos
lods
shll
mov
stos
xor
lcall
dec
sahf
ja
xchg
jbe
sbb
cmp
jge
pop
fisubl
subl
in
mov
dec
repnz
insl
ja
mov
outsl
test
xor
sub
mov
mov
push
repnz
or
rol
sbb
sbb
pop
test
flds
inc
push
jo
adcl
or
lret
mov
insb
add
sub
pop
dec
das
inc
mov
jae
insb
xchg
sti
loope
sub
ds
jae
and
jo
leave
inc
and
cmpsl
lods
aam
loopne
popa
cld
sub
das
jbe
xchg
or
ss
mov
xchg
cmp
jge
lahf
sbb
test
sahf
rorb
pop
push
pushf
dec
enter
or
pop
jae
mull
jge
and
sub
mov
popa
fxch
enter
mov
and
popa
incl
jae
imul
jmp
cmp
orl
repz
xchg
push
fdivrl
ret
repz
sub
mov
cmpb
dec
out
shll
mov
lea
mov
and
loope
push
sbb
dec
jecxz
and
gs
popf
les
mov
je
std
and
lea
out
cwtl
jge,pn
sarl
push
divb
rorl
mov
mov
mov
dec
cltd
data16
cs
pop
xchg
cmp
mov
or
sbb
pop
imul
sbb
rcrb
out
out
mov
jmp
push
jae
sbb
mov
pop
dec
dec
jae
add
stos
cmp
xlat
in
add
sub
cmp
scas
hlt
aam
push
sti
push
jo
push
jmp
xchg
pop
pop
mov
mov
lds
add
inc
int
imul
mov
fnstenv
cmpsb
icebp
in
jp
cltd
push
int
ja
adc
pop
test
xor
or
pop
scas
scas
mov
xchg
adc
mov
lret
jecxz
inc
dec
ljmp
test
stc
and
fdivl
add
sbb
xchg
aam
mov
mov
aad
mov
test
add
jg
stc
js
sub
mov
xchg
popf
dec
pop
hlt
or
stc
fdivrs
imul
dec
pop
mov
dec
adc
ljmp
fidivl
sub
aas
cmp
xor
hlt
bound
in
cmp
push
jno
out
or
push
adc
rcrb
pop
int
aam
insb
mov
lcall
loopne
push
int3
aam
ljmp
push
jb
dec
and
mov
out
adc
shr
imul
pop
stos
cld
mov
subl
mov
push
cmp
cmpsl
and
jno
out
aam
or
clc
mov
pop
inc
popf
pushf
mov
ror
fildl
imul
push
iret
addl
cmpsb
sti
ljmp
jo
test
cmp
cld
fstpl
movsl
pop
mov
sub
enter
or
mov
inc
cmc
in
lds
stos
loopne
push
inc
or
push
in
sub
in
sub
fildl
xchg
lock
das
jns
mov
ret
out
out
jbe
push
lret
cmpsb
pop
lock
mov
les
sub
or
cli
sbb
xchg
pop
cmp
sbb
in
xchg
cmp
es
ljmp
dec
mov
mov
inc
imul
add
testb
push
repz
mov
cmp
fmull
scas
cmp
repz
add
cmp
inc
push
jmp
jne
push
dec
lds
jno
pop
xchg
data16
pop
push
cmp
mov
xchg
sarl
fnstsw
inc
dec
lods
xor
adc
enter
cmpb
int
pop
stos
and
in
push
fwait
mov
cmp
sbb
fwait
mov
cmpsl
cmpsb
sar
loop
sbb
xchg
int3
mov
adc
adc
jmp
jne
mov
std
je
xchg
fisubrl
push
jns
nop
call
and
repz
outsl
ds
addb
mov
fsubr
xor
cmp
push
dec
out
aas
or
push
pop
mov
adc
lret
in
or
out
and
dec
push
push
in
jg
fs
stos
arpl
jmp
rcrl
aaa
mov
mov
cs
adc
push
fcomp
and
int
fwait
mov
mov
int
mov
sub
xchg
sar
scas
and
push
jae
mov
cmp
mov
mov
adcl
xchg
icebp
gs
out
xchg
jbe
add
shl
cmp
ljmp
negb
lods
xchg
call
adc
dec
jle
sub
lock
mov
jle
sub
psubq
lods
iret
pop
rclb
lds
pop
adc
xchg
leave
pop
sbb
insb
cmp
mov
mov
out
in
push
add
xor
pop
dec
adc
out
mov
scas
sub
rcrb
jno
push
lcall
mov
insl
test
iret
scas
addr16
mov
addr16
incl
cmpsb
incl
adc
loop
repz
and
xor
test
and
clc
sub
in
stos
jle
addr16
sub
in
mov
mov
stos
shlb
pop
push
in
or
fbld
pop
andb
lock
lds
cld
or
outsb
and
add
add
shll
idiv
movsl
inc
xorb
cmc
mov
push
pop
test
enter
pop
outsb
cmpsb
je
aam
pop
mulb
inc
mov
adc
add
and
pop
loopne
in
movsl
xchg
xchg
out
cld
divl
adc
aas
mov
pop
aaa
clc
mov
shrb
scas
popf
or
fcomps
add
hlt
inc
xor
pop
jecxz
jl
leave
fwait
dec
jo
inc
cltd
dec
out
lock
stos
jp
add
jnp
pop
inc
sbb
mov
dec
pop
push
dec
push
imul
fcmovb
mov
sub
or
ret
jnp
sub
loopne
lret
into
add
stos
icebp
outsb
sbb
push
in
inc
mov
orl
xchg
ja
inc
push
out
in
mov
insl
jno
add
xor
or
fbld
fwait
imul
and
adc
xchg
inc
std
sub
mov
lods
mov
xor
adc
mov
lret
push
inc
pop
pusha
popf
popa
lock
nop
jnp
je
inc
xlat
leave
jns
fdiv
inc
pop
adc
les
js
adc
xor
loope
mov
xor
cs
mov
subb
jecxz
lret
xlat
fnstsw
das
shl
xchg
call
fcomps
mov
lea
test
fidivrs
cmp
rorl
jg
enter
and
fldenv
sahf
in
mov
lcall
add
fwait
push
orl
sbb
sub
test
pop
jle
pushf
es
mov
sub
add
mov
jmp
nop
int3
add
push
mov
mov
shll
add
pop
jle
adc
xchg
ret
sub
jne
out
lret
adc
retw
cld
lods
and
lods
and
push
push
push
push
dec
mov
pop
repnz
xchg
int
add
xchg
enter
fisubs
addb
loope
fwait
je
xchg
jae
mov
xchg
sbb
testl
mov
stos
pop
leave
dec
movsl
mov
insb
movsl
push
out
mov
mov
in
mov
bound
jg
jae
and
xlat
mov
inc
mov
cwtl
pop
lahf
icebp
cli
aas
insl
lds
add
jmp
stos
fcmovbe
xor
icebp
mov
in
push
and
inc
insb
fwait
ja
in
das
sbb
test
mov
inc
sbb
out
lahf
dec
adc
mov
lcall
mov
xchg
test
add
call
loop
or
cmpb
pop
lahf
xor
pop
sbb
sbb
mov
stos
out
jl
out
xor
cmpsl
pop
adc
cmpb
mov
scas
in
xlat
jae
popw
pop
adc
push
sub
mov
gs
out
cli
push
xlat
inc
or
xor
fnstcw
jmp
and
in
imul
adc
push
and
ret
je
dec
ss
sub
pop
mov
cmp
pop
xchg
or
xchg
daa
inc
lret
mov
pop
add
fbstp
sbb
pop
jns
inc
push
cmc
mov
stc
xor
movsb
imul
and
and
and
filds
icebp
cmp
inc
mov
adc
dec
aas
repnz
push
mov
dec
orl
xchg
cld
icebp
xchg
adcb
xlat
out
shrd
in
popa
mov
xchg
push
sub
dec
in
xchg
cld
or
les
pop
test
adc
lods
cmp
sbb
pop
dec
lods
pop
push
enter
push
sbb
sti
ja
mov
rol
mov
aaa
or
xchg
pushf
sub
xor
fists
les
mov
add
stos
cwtl
pushf
jmp
xchg
fistps
jns
lcall
shl
dec
fcmovbe
call
pushf
xchg
dec
ss
insl
sbb
mov
ljmp
dec
or
pop
push
push
add
stc
or
out
cmp
inc
test
cmpsl
cmp
mov
sbb
scas
xchg
lret
pop
sub
mov
fs
add
ss
arpl
repnz
loopne
xchg
adc
mov
inc
mov
lahf
push
loope
jbe
imul
or
shll
xchg
push
stc
push
cli
outsb
add
dec
dec
or
cli
cmp
les
and
adc
xchg
dec
sbb
enter
int
push
shll
out
nop
pusha
xchg
sub
nop
int
push
or
push
dec
mov
int
mov
sbb
inc
cmp
mov
sbb
ffree
inc
shl
sbb
mov
cmpsl
repz
sub
sbb
inc
inc
pop
push
and
xchg
jae
jp
js
aad
ss
std
xchg
and
dec
pop
test
pop
testb
jle
mov
inc
or
push
inc
xor
mov
aad
jle
jle,pn
dec
jo
xor
icebp
xor
xchg
pop
adc
push
adc
inc
adc
jae
pop
leave
out
out
and
pop
jg
inc
movsb
and
cmp
test
pop
inc
dec
add
arpl
rcrl
repnz
test
fisubrs
pop
cmp
in
jbe
fs
ret
add
dec
add
imul
dec
add
inc
jp
pop
mov
pop
adc
push
daa
push
iret
out
fiadds
mov
dec
mov
dec
xorb
push
inc
mov
mov
pushf
aam
stos
xchg
addr16
fidivrl
mov
push
lock
je
xlat
inc
pushl
lret
stos
mov
outsb
sbb
into
imul
loope
xchg
push
sbb
cld
sahf
push
mov
mov
jns
ficomps
mov
and
cmpl
insl
ds
fcoms
rcr
shlb
sahf
push
xlat
push
adc
pushf
xor
mov
inc
jge
or
inc
pop
mov
out
pop
pop
and
clc
xchg
int3
xorl
cld
mov
and
out
pop
lods
xchg
lods
repz
les
mov
mov
xchg
adc
outsl
mov
and
ljmp
cli
fs
dec
int3
push
jbe
loop
shr
add
jnp
loop
sbb
out
or
mov
dec
pop
lods
jmp
lret
out
leave
and
andl
cmpsl
stos
fmull
loopne
xchg
bndstx
mov
jmp
mov
fadd
cmpsl
loope
dec
imul
iret
push
es
jecxz
loop
out
push
loop
cld
mov
add
inc
ljmp
mov
pop
dec
ret
jmp
push
pop
jo
into
fnstenv
jb
mov
xor
mov
lea
cltd
stos
or
ss
sarl
push
inc
mov
lods
enter
pop
push
ja
lock
jnp
popa
sub
add
dec
cwtl
repnz
jg
lcall
jae
add
nop
stos
or
pop
jne
ds
pop
gs
xchg
and
outsb
sbb
inc
nop
dec
lods
push
cld
mov
daa
xor
adc
sub
test
and
adc
repnz
and
hlt
lahf
mov
cld
aad
xchg
adc
rorl
jo
scas
mov
push
mov
mov
clc
adc
or
jbe
xchg
xchg
das
nop
movl
mov
cmp
cmp
cmp
dec
lret
sub
test
mov
pop
add
repz
ret
push
fisubrs
xor
and
imul
cmc
or
mov
leave
int3
sti
xlat
negb
sbb
push
shl
orl
adc
js
in
lret
pop
add
rolb
lds
sub
rorb
pop
and
cmpsl
outsb
dec
jle
lods
roll
sub
daa
inc
mov
pop
insl
push
xchg
int3
jg
not
in
cmp
add
dec
rcrl
das
jmp
loope
pop
jg
xchg
cmp
mov
lret
jle
and
and
add
sub
rorb
movsb
cwtl
xor
or
sub
mov
sbb
mov
xchg
andl
daa
scas
shrb
jo
or
aaa
es
ds
cmp
stc
loopne
adc
fstpl
xchg
into
imul
lret
push
pop
outsl
cmpsl
pop
xchg
dec
repz
cmpb
icebp
inc
dec
daa
cmp
cmpsb
aam
pop
jmp
dec
jbe
leave
out
mov
or
aas
cmp
or
pop
and
jnp
inc
cmp
ljmp
mov
lret
lea
addr16
imul
add
cmp
inc
nop
jecxz
cmp
or
jae
mov
fcompl
cwtl
repnz
les
addb
xor
lods
xor
cmpsl
xchg
ret
shlb
js
pop
jo
jae
mov
push
cltd
movsb
in
or
pop
test
sub
and
cmp
je
lods
or
icebp
arpl
pop
repnz
cmp
and
sub
shr
inc
mov
adc
lea
loop
mov
or
add
and
out
addl
inc
cwtl
inc
and
sub
out
and
aad
inc
jbe
xor
sbbb
push
mov
jb
icebp
xchg
pop
movsl
xchg
cltd
mov
je
and
imul
lock
ss
cmc
mov
je
icebp
mov
lock
mov
mov
repnz
xorb
or
push
cmp
in
testl
push
pusha
dec
cmp
fisubs
lcall
incb
loope
out
loopne
and
adc
shll
push
cmp
mov
push
cmp
add
test
xor
cltd
test
addr16
cltd
scas
sub
std
dec
je
lahf
xchg
push
sub
popa
fidivrs
xor
pop
test
outsl
mov
ret
and
push
insl
sub
cmp
mov
dec
jp
lcall
fisttps
and
imul
dec
push
sti
fimull
push
and
pop
loope
pop
jo
mov
pop
orb
insb
test
pop
push
jne
inc
add
dec
mov
inc
mov
outsb
xchg
or
add
sub
xchg
sub
in
popf
pop
inc
mov
shlb
es
mov
add
push
int3
mov
out
mov
lcall
dec
inc
pop
repz
jno
sarb
push
subb
fldl
arpl
jbe
popa
ja
test
cltd
xor
xchg
cs
sbb
mov
mov
and
sbb
xchg
mov
adc
fisttpl
aam
out
jo
cmpsl
int3
sub
les
push
jbe
xorl
xchg
inc
stos
push
cmpb
repnz
pop
aaa
ss
stc
inc
sub
mov
fs
outsl
inc
lahf
and
mov
pop
dec
in
xlat
sbb
sarl
inc
pop
inc
insb
lahf
ret
pop
pcmpgtb
dec
cmp
push
dec
mov
sbb
sbb
cld
cltd
lret
insl
or
cmp
aaa
sub
shlb
xor
jae
scas
stos
mov
stc
clc
pop
xor
sti
xchg
lcall
push
popf
adc
in
add
pusha
xchg
out
sahf
mov
cmp
addb
dec
jle
mov
cmpsl
xor
pop
and
je
je
lock
scas
cmpsl
subl
or
xchg
cmp
dec
pop
cmp
ds
fisttpll
mov
push
in
lods
sbb
outsl
jecxz
push
lea
xor
sub
adc
cmpsb
xlat
andl
ss
js
xor
xchg
fstp
iret
mov
repnz
rolb
out
and
loopne
mov
jns
add
xchg
jno
inc
mov
incl
push
cmpl
sahf
cwtl
dec
mov
hlt
scas
jl
outsb
pop
or
test
xchg
repz
xchg
push
mulb
push
std
mov
or
push
and
and
mov
cltd
imul
mov
adcl
sub
xchg
fnstenv
cmp
add
mov
call
cli
mov
sbbb
mov
movsb
fsts
jns
lcall
jnp
add
mov
jno
mov
mov
dec
sbb
xor
pop
xchg
xor
lods
cmpsb
loope
or
aam
push
popf
call
sbb
lods
push
mov
push
cmp
cmp
xor
mov
dec
aam
cs
pop
jns
ss
jne
pop
xor
xchg
cmpb
add
or
xor
xor
cmp
fidivl
popf
cmp
mov
mov
mov
push
xchg
or
mov
outsl
mulb
add
adc
test
clc
xor
dec
inc
xchg
cmpsb
outsl
jp
test
mov
jecxz
jg
iret
and
mov
xor
pop
loopne
add
sub
fsubl
fsubl
sti
jo
test
inc
ds
pop
pop
clc
and
lods
mov
arpl
mov
adc
add
repnz
sbb
sub
cmp
push
bound
xor
and
adc
add
repnz
sbb
sub
cmp
push
bound
xor
and
adc
add
repnz
sbb
sub
cmp
dec
mov
jl
mov
push
lods
inc
mov
adc
add
repnz
mov
sub
dec
daa
insl
pop
jge
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
lret
fcmovu
ljmp
hlt
enter
dec
dec
pop
pop
imul
or
sbb
lret
fucomi
jmp
sti
mov
mov
cmp
imul
or
sbb
imul
fucomi
jmp
sti
mov
mov
pop
or
pop
jnp
dec
jae
or
cmp
test
js
jno
mov
gs
push
int3
mov
lahf
popf
push
pop
lahf
lea
and
movsl
movsb
xor
div
jle
mull
jnp
push
xchg
fcmovne
in
fwait
xchg
mov
adc
jmp
push
dec
mov
movsb
cmp
test
test
pop
lret
sti
mov
mov
aaa
imul
cmp
xor
mov
mov
cmp
mov
or
xchg
jp
pop
sbb
scas
aam
mov
pop
fisubl
lea
push
push
push
push
fidivrs
mov
jnp
jp
push
sbb
sub
cmp
xchg
lret
fcmovu
ljmp
fwait
stos
stos
mov
pop
push
jp
or
sbb
sub
cmp
movsb
sahf
fildl
out
fwait
in
in
jmp
cs
cmp
inc
sub
xchg
lret
cltd
fstps
ret
ljmp
xor
adc
pop
adc
push
and
mov
mov
mov
push
jp
or
sbb
sub
cmp
lret
fucomi
jmp
sti
mov
mov
pop
push
jp
or
sbb
sub
cmp
lret
xchg
addr16
test
stc
inc
xchg
daa
fcom
dec
jge
test
daa
mov
xor
sahf
loop
lea
int3
scas
mov
stos
jle
xabort
std
or
mov
pop
fs
cmp
mov
test
sahf
out
xor
bound
or
fwait
jbe
xor
inc
lock
adc
dec
mov
popf
and
and
xor
and
rcrl
xor
adc
es
jae
ffree
or
out
jnp
scas
cmp
es
sbb
repz
mov
mov
loop
into
push
jae
hlt
dec
hlt
call
aad
cld
aam
out
sub
test
ret
or
or
loope
add
cmp
push
xchg
jb
inc
test
jle
shll
ds
pop
xchg
fidivs
push
imul
mov
add
dec
xchg
gs
ss
adc
gs
dec
pop
iret
lret
xor
mov
push
hlt
cmpsb
mov
dec
or
cmpsl
or
cmp
lock
popf
or
sbb
jmp
and
xor
imul
xchg
cs
ja
sbb
hlt
cli
jo
sbb
cli
sub
inc
cltd
sbb
movsl
lcall
adc
push
mov
out
push
sbb
add
pop
and
int
jae
jb
aas
jne
imul
pop
and
fidivs
lods
push
lret
daa
mov
xor
cmp
sbb
test
enter
and
or
sahf
push
fbld
lods
dec
or
fdivrp
push
cmp
sub
push
mov
fsubr
test
and
stos
repnz
jae
xor
and
sub
stos
dec
cli
lahf
adc
add
leave
rorl
push
adc
and
das
mov
push
out
mov
mov
or
push
repz
dec
out
xchg
int3
test
add
out
ficomps
jne
mov
in
nop
or
cwtl
xchg
nop
sahf
mov
inc
dec
cmp
inc
aas
inc
in
shrl
adc
pop
xchg
test
sub
mov
xchg
add
sarb
add
jmp
add
adc
out
xchg
cli
mov
jle
push
movsb
sbb
mov
mov
out
push
sbb
pusha
sbb
cwtl
sti
adc
shll
jno
pop
clc
test
dec
push
jecxz
out
data16
shlb
xor
iret
cwtl
and
mul
add
mov
lock
pop
jl
push
cmp
pop
adc
xchg
out
xor
inc
leave
or
mul
lods
jnp
lcall
xor
cwtl
repnz
outsb
jno
sbb
push
mov
inc
dec
aam
dec
lret
mov
jae
mov
or
popa
mov
cld
lds
cmpsl
cmp
mov
stos
push
adc
sar
test
push
pop
addr16
cmp
sub
rorl
sahf
testl
pop
hlt
and
cmpsl
push
aas
leave
xchg
adc
aad
imul
call
push
dec
jnp
test
enter
les
inc
loope
cmp
mov
repnz
fsubrl
push
add
jbe
pusha
sbb
xchg
add
pop
cmp
mov
add
mov
and
sbb
jg
js
outsb
out
cs
xchg
push
sbb
or
mov
aam
jne
xchg
add
mov
mov
adcl
vaddpd
lea
roll
sbb
sbb
cmp
enter
mov
movsb
leave
inc
jmp
testl
nop
mov
inc
insb
jo
and
imul
rep
xor
xchg
mov
test
or
hlt
rorl
gs
fldt
and
in
xchg
adc
cmpsl
mov
sbb
cmp
cld
sub
adc
idiv
aad
les
lods
ficomps
fs
mov
rcrb
adc
dec
mov
fdivr
xlat
movsl
frndint
xchg
dec
xchg
decb
push
pop
mov
sbb
push
faddp
out
gs
addl
movsb
xor
pop
sub
or
mov
ja
fistpl
pop
or
xchg
and
xchg
add
jecxz
mov
outsb
sbb
fists
pop
lcall
insb
shl
dec
cmp
mov
sub
inc
adcb
xchg
jle
mov
mov
add
pop
adc
dec
mov
adc
xchg
jb
sub
push
mov
icebp
hlt
ret
sub
xchg
fstl
mov
mov
xchg
pusha
stos
mov
push
jae
popa
and
pop
negb
push
xchg
lods
xchg
cmc
out
mov
mov
movsl
push
push
repz
xlat
inc
das
iret
xor
aas
cmc
shlb
xor
add
ljmp
das
cmp
cwtl
loopne
out
out
popa
adc
pop
add
push
lods
aaa
pop
mov
xlat
mov
in
and
lea
aam
adcl
or
repz
cwtl
insb
sar
or
das
pop
mov
or
das
sub
arpl
adc
jb
aad
dec
into
jnp
pop
and
lock
rcr
push
lahf
push
and
inc
aad
lret
push
repnz
dec
cltd
xchg
jecxz
mov
sub
sub
mov
dec
mov
out
mov
and
shrb
sbb
outsl
push
mov
xchg
add
jp
shlb
fildl
jp
or
cmp
inc
scas
dec
cmovbe
jle
shll
insb
add
xchg
scas
jp
xchg
cs
rol
aam
or
sbb
sbb
cltd
jle
xchg
mov
loope
stc
mul
mov
cld
mov
mov
into
cmp
lcall
and
add
ja
mov
movsb
mov
movsb
mov
addr16
lret
pushf
jb
in
pop
mov
pop
shl
rcll
loop
sahf
pushf
arpl
xchg
sbb
pop
sub
iret
sbb
lcall
sub
add
outsb
fldlg2
cmp
lahf
jnp
cmpsb
les
into
cmpsl
lds
fcompl
sub
or
outsb
sbb
enter
gs
xchg
xchg
sbb
popf
mov
mov
pop
push
cwtl
cmc
xlat
mov
lea
add
imul
sbb
testl
sub
xchg
cwtl
mov
cli
sub
loopne
lahf
popa
cmpsb
lods
data16
inc
aam
daa
ret
inc
das
jge
mov
push
enter
xchg
out
leave
mov
shlb
hlt
popf
negl
sub
scas
fidivrl
push
cld
in
add
push
aad
and
arpl
call
into
xchg
imul
pop
lret
cwtl
out
negl
and
add
sub
pusha
bound
adc
out
enter
mov
addl
repz
gs
stos
pop
test
xor
leave
arpl
or
mov
sub
push
xchg
xchg
lcall
dec
loop
decl
fildll
jg
jmp
jne
xchg
ss
sbb
cwtl
or
jle
mov
imul
mov
pop
inc
add
add
icebp
shl
aas
ret
mov
stos
lret
jge
push
sbb
mov
cmp
rorb
xchg
jb
xor
cwtl
push
repz
mov
data16
movsb
xor
jb
dec
jp
insl
lahf
jae
bound
imul
mov
mov
and
adc
jns
faddp
gs
fdivrs
add
sub
daa
xchg
and
push
pop
lock
inc
push
cli
into
pushf
pop
adc
cmp
jl
mov
loope
or
out
cmc
jle
push
insl
pop
pop
inc
pop
les
or
pop
sub
xchg
xor
stos
dec
aas
insl
stos
inc
rorl
xor
shrb
leave
mov
cli
sub
xchg
xor
das
out
jb
push
xchg
inc
mov
ja
pand
test
add
or
ret
mov
mov
addl
out
pop
cmp
mov
jae
cmp
sbb
in
pop
test
ficompl
sub
out
cli
add
pop
or
push
mov
orl
pop
repnz
ja
loopne
adc
sub
out
into
les
add
aad
addps
paddusb
popa
jns
mov
std
mov
add
push
outsl
pop
imulb
dec
ss
stos
xchg
rcr
cwtl
test
cs
cmc
jge
jno
cmp
jle
jle
fs
sub
lcall
sub
lods
mov
sbb
insl
adc
sub
and
fldenv
add
pop
inc
xor
fs
cltd
xchg
push
and
pop
jbe
adc
mov
test
dec
rorl
mov
mov
xor
dec
sub
fs
mov
cmp
inc
loopne
arpl
mov
in
sub
outsl
mov
stc
xor
pop
mov
dec
mov
fdiv
flds
jl
in
pop
push
leave
in
outsl
dec
mov
dec
stos
je
lret
adc
xor
sbb
gs
loop
xor
dec
data16
inc
sarb
cmp
pop
insl
stc
data16
xor
or
cwtl
test
pop
popf
xchg
out
ffree
mov
dec
jl
clc
insl
or
insl
add
addr16
hlt
cmpsl
jne
jge
adc
repz
leave
push
mov
or
xor
lahf
pop
push
out
mov
push
mov
push
es
pop
fisubrs
mov
sti
lcall
jl
xchg
pop
stos
scas
dec
js
shr
cmp
mov
dec
insl
push
sbb
mov
test
push
addl
aad
call
mov
dec
sub
fistpll
sub
lods
inc
push
push
sahf
xchg
ds
add
out
push
adc
jns
negl
loop
aas
mov
popf
inc
cmp
adc
push
es
rolb
adc
xchg
xor
test
lret
sti
mov
mov
int
xchg
ja
movsl
pusha
into
or
test
insl
xchg
cmp
push
push
lret
pop
push
sti
dec
push
mov
aam
stos
in
xchg
out
insb
push
xchg
sbb
push
inc
cwtl
jbe
mov
sub
push
push
mov
inc
push
jnp
popf
insb
icebp
je
mov
aad
es
mov
dec
xchg
add
mov
stos
xchg
loop
xchg
ret
enter
fcompl
jmp
push
fistpl
ret
sbb
ljmp
mov
aaa
int3
scas
inc
scas
mov
out
movsl
xor
test
mov
inc
mov
cli
jbe
clc
decl
jle
mov
hlt
loope
xchg
fprem1
lret
cmp
jle
test
in
dec
je
mov
inc
mov
ret
movsb
iret
add
xchg
cmp
adc
pop
popa
popa
push
dec
push
cmp
sub
pop
xchg
or
shll
xor
hlt
mov
std
stos
pop
cmp
leave
push
mov
and
sub
or
movsl
stc
test
lea
loop
and
outsb
mov
shrb
rol
sahf
subl
dec
fisubs
fdivrs
insl
ja
jmp
jae
stc
scas
push
rorb
es
ret
jne
jno
jae
fisttps
dec
add
pop
movsb
frstor
ss
xchg
cmpsl
in
sub
shll
and
xchg
jg
bound
jg
xchg
dec
dec
mov
sub
out
and
pusha
dec
mov
pushf
std
aas
aad
std
lret
and
dec
and
xor
mov
addr16
bound
cmp
mov
popa
pop
inc
imul
dec
ds
jmp
hlt
and
jecxz
cmc
mov
ds
in
dec
push
mov
mov
mov
jbe
je
or
xor
lods
movsl
dec
xchg
fbstp
mov
adc
push
lods
add
jno
aam
aas
sahf
imul
ja
fnstsw
movsl
inc
clc
lcall
sbb
cmc
push
sub
fs
shll
std
xchg
mov
ja
das
sub
mov
push
and
mov
cmp
mov
pop
popa
jo
adc
or
jne
dec
sbb
int3
push
outsb
stos
sbb
imul
out
movsb
add
jge
stos
dec
ja
lret
stos
pop
sub
xor
adc
xchg
andl
push
int
arpl
out
inc
mov
inc
or
shll
andb
sbb
aas
insb
or
loop
xorl
pop
jmp
push
xchg
pop
cli
sub
pop
push
fwait
mov
int3
cmp
shlb
cli
xchg
push
clc
mov
pop
mov
iret
repnz
mov
andb
ja
xchg
push
ljmp
movsb
push
mov
xor
outsl
frstor
jbe
mov
adc
fwait
lock
or
inc
pop
mov
inc
sub
inc
hlt
push
andb
ret
mov
push
movsl
rcll
jno
in
xlat
out
and
push
mov
push
cltd
ret
xor
sub
out
popl
push
decb
mov
mov
sbb
test
push
lods
ljmp
iret
aam
add
add
jns
shrb
in
fsin
sbb
loopne
lods
xlat
int3
cld
sub
lcall
jecxz
int
in
fnsetpm(287
mov
inc
lcall
and
bound
shrb
xchg
arpl
dec
pop
dec
dec
push
lods
aam
lds
jae
adc
daa
shrl
adc
xchg
push
pop
dec
cmc
roll
mov
add
mov
sbb
xchg
push
xlat
dec
and
add
stos
xor
sbb
sbb
adc
push
out
adc
and
dec
inc
add
pusha
stos
popa
dec
xchg
push
inc
jno
fstl
inc
add
cmp
dec
stos
mov
jmp
adc
sbb
jno
push
repz
add
add
pop
and
rorb
sub
and
jbe
push
add
push
mov
insb
jno
scas
clc
out
lods
dec
add
pop
stos
jg
orl
cs
out
jo
add
mov
inc
and
mov
and
lods
aas
or
in
cmp
xor
and
repz
xchg
mov
xchg
lahf
inc
mov
xor
xchg
inc
ss
jecxz
jle
je
inc
sarb
jmp
push
orl
push
clc
and
sub
das
and
in
inc
cltd
cwtl
or
mov
jge
or
mov
xchg
jle
aas
scas
test
xchg
inc
or
cli
sti
push
icebp
fstps
dec
clc
cmp
icebp
clc
mov
test
inc
or
fsubs
and
adc
push
cmpsl
imul
mov
loopne
push
push
fdivs
xchg
test
push
pop
and
pop
or
adc
fucomi
mov
mov
xchg
shll
hlt
push
push
incl
test
test
or
xlat
cltd
mov
rclb
cmp
movb
dec
sub
push
lret
jbe
pop
cltd
imul
or
movsb
lret
dec
pop
fimull
push
aaa
jns
sub
das
call
addr16
cld
pop
mov
mov
jg
fsubl
cmp
icebp
cmp
push
data16
stc
and
andb
add
or
sub
cmp
mov
movsl
int3
das
jecxz
jmp
mov
cmp
aaa
and
push
out
loop
js
clc
int3
push
jl
xorb
sahf
ja
shlb
add
mov
push
in
test
test
fsub
clc
icebp
popf
addr16
arpl
sub
addb
call
movsb
pop
xchg
cmp
cltd
movb
sbb
or
jecxz
outsb
rcl
arpl
in
shlb
pop
push
lods
inc
gs
lea
cmp
push
mov
sbb
jmp
mov
es
xor
fistpll
ror
lcallw
xchg
adc
ret
pop
inc
stos
sbb
sbb
addr16
xor
mov
mov
lcall
cmp
sub
pop
sbb
jne
mov
mov
jo
pop
nop
and
sbb
pop
mov
push
inc
pop
mov
cwtl
push
add
out
popa
shrb
jb
clc
lds
jle
mov
mov
cmp
sbb
push
and
or
fisubrl
fidivrs
rcl
enter
adc
int
ret
sbb
pop
adc
push
leave
or
insb
inc
and
xchg
jmp
sbb
clc
xchg
ret
inc
push
jne
cltd
ret
repnz
pop
subl
mov
in
outsb
or
dec
popa
insb
daa
mov
roll
pop
loop
test
push
popa
gs
fldt
or
rcrb
sub
fsubrp
cmp
mov
dec
xor
pop
push
xchg
iret
fdivrs
adc
sub
in
adc
sub
jge
int
push
negl
jno
ljmp
push
fnstenv
fidivrs
xchg
in
and
cmp
adcb
xchg
mov
int
icebp
outsb
mov
xchg
add
or
inc
add
or
fs
sub
mov
es
xor
arpl
push
mov
mov
fstpl
mov
aaa
cli
and
ds
ret
gs
xchg
cmp
xor
add
test
je
add
sbb
mov
jmp
xchg
div
cltd
aad
rolb
decl
aas
mov
pop
sbb
jle
rcrl
add
rcll
or
mov
or
sub
fwait
dec
adc
imulb
lcall
push
or
fistpl
popf
cltd
rcr
or
shll
xchg
lahf
ljmp
push
gs
fldl
or
scas
inc
pusha
sub
add
pop
inc
lods
sahf
jg
ljmp
adc
ja
repz
xchg
aaa
lock
mov
push
dec
in
add
insl
or
jae
mov
pop
lret
inc
jp
add
or
xchg
push
or
outsb
fmull
push
in
mov
mov
jmp
sub
adc
outsl
mov
inc
pop
or
outsl
jl
and
test
adc
jmp
or
xchg
inc
bound
sbb
mov
adc
cmc
and
jle
je
jecxz
xor
out
cmpsl
cmp
sbb
pop
das
fisubrs
loop
dec
rcrl
test
adc
dec
pop
out
pop
sbb
lret
push
and
cmpsl
xor
pop
cmp
inc
and
mov
in
loope
and
fiadds
sub
scas
iret
dec
dec
pop
sbb
int
icebp
cmpsb
mov
andl
or
adc
sbb
sarb
xchg
mov
popa
sbb
pushf
sahf
rol
xor
inc
sahf
sub
movsl
push
out
sub
xlat
cld
and
push
mov
out
in
sbb
jae
xor
mov
mov
sub
jnp
or
mov
xchg
loop
cmp
cmp
loopne
push
jns
adc
jae
xor
insb
and
lret
ds
or
xchg
cmpsl
shrl
xor
test
es
cmpsb
das
loope
psrad
xor
cmp
clc
xor
inc
jb
jb
daa
xor
push
mov
jmp
shll
dec
xor
sbb
mov
jecxz
jbe
mov
mov
aaa
inc
push
stos
mov
icebp
xchg
pop
push
and
aad
mov
add
fwait
xchg
jb
lods
not
imull
test
sbb
mov
test
cmp
imul
in
adc
in
fdivrs
in
inc
xor
pop
push
js
mov
dec
mov
jae
jns
jle
lea
xchg
xor
outsl
outsl
ja
cmpb
or
pop
push
in
aaa
xor
xor
jecxz
sbb
cmp
rolb
fwait
xor
dec
imull
xor
add
mov
arpl
cmpsl
inc
jecxz
mov
push
arpl
jge
xchg
add
pop
jnp
jl
out
fcom
add
bound
ficompl
test
ret
sti
xor
cmp
jg
fs
jmp
add
push
pand
push
das
mov
hlt
jg
call
jne
or
pop
scas
dec
lea
sbb
aas
cmp
dec
inc
fwait
popf
call
cmpsl
mov
mov
repnz
xchg
mov
cmpsl
jecxz
popa
ret
cmpsb
push
mov
mov
sbb
daa
fdivl
pop
jecxz
lds
out
mov
ljmp
inc
cltd
incl
pop
arpl
scas
sti
lret
inc
adc
loopne
cmpsl
cli
dec
imul
fmulp
xor
jmp
sti
mov
mov
pop
push
jp
or
sbb
sub
cmp
lret
fucomi
jmp
sti
mov
mov
pop
push
jp
or
sbb
sub
cmp
lret
pop
ljmp
sbb
lret
pop
pop
push
jp
or
sbb
sub
cmp
lret
lret
fcmovnu
jmp
cli
sti
mov
mov
icebp
shrb
jge
xchg
in
aam
out
add
in
xchg
fnstcw
lods
cmp
js
pop
outsl
sub
pop
sbb
enter
test
mov
jp
cmp
inc
sbb
push
push
cmp
pop
sbb
cmp
or
pop
scas
cli
cwtl
mov
out
and
insb
sub
dec
jnp
pop
cmp
lods
lcall
cmpsl
mov
pop
sbb
cmp
mov
aas
xor
imull
cmpsb
jmp
cmp
mov
pop
scas
xchg
movl
adc
cli
subb
bound
mov
imul
cmpsb
xchg
fcomi
les
call
iret
fsubr
mov
fcoms
sbb
js
pop
mull
add
adc
dec
xchg
fs
test
inc
jp
sbb
xchg
das
pop
mov
or
add
clc
and
or
jp
pmulhuw
cltd
fs
fsubr
test
mov
fsubrs
rcl
dec
add
or
dec
adc
sub
call
hlt
mov
or
mov
or
jnp
add
push
jl,pt
jno
scas
xor
cmp
ljmp
jnp
outsl
sbb
sbb
cmp
insl
sbb
fwait
mov
cli
movsb
mov
cwtl
sub
js
dec
sbb
sub
dec
or
stos
call
lcall
mov
cwtl
sub
js
dec
sbb
sub
dec
or
stos
call
lds
cmpsb
iret
xchg
mov
and
add
into
jmp
add
rcrl
push
jne
xchg
leave
xor
sti
ror
arpl
stc
ret
mov
adc
sub
loope
or
or
mov
aaa
imul
daa
and
fimuls
andl
jb
js
popf
xor
mov
cmp
clc
iret
push
es
xchg
adc
and
mov
xchg
nop
push
sarb
out
cmp
scas
mov
adc
adcl
sub
xor
lock
mov
aam
cmp
inc
push
jns
imul
scas
lods
repnz
jnp
pop
ret
mov
scas
out
shl
or
xlat
das
fisttps
adc
into
jbe
aas
sbb
loope
cld
loopne
push
js
dec
pusha
aad
adc
lret
pop
cmp
std
push
mov
inc
mov
cmp
test
inc
xor
repnz
inc
test
xchg
aad
clc
dec
out
addr16
push
push
mov
push
mov
mov
jbe
sbb
xor
out
sbb
mov
push
inc
mov
pop
fwait
xchg
insl
sbb
addr16
lret
and
ds
xchg
imul
cmpsl
and
in
mov
or
jp
mov
in
xchg
aam
pop
test
sbb
aas
lret
adc
and
pop
jne
cmpsb
or
pop
sub
pop
cmp
xor
sbb
xchg
add
out
out
xorb
mov
jnp
ret
cwtl
and
sahf
xchg
icebp
add
fcomps
in
inc
movsl
hlt
gs
ret
adc
shrl
lret
push
mov
jle
fsubp
adc
stos
popf
aam
mov
in
das
test
inc
mov
fs
adc
sub
test
xchg
jbe
and
loop
in
ds
sbbb
fcompl
fldl
pushf
xlat
adc
xchg
movsb
es
daa
rol
test
cmpl
mov
jbe
lock
stc
pop
xor
out
and
jns
mov
js
sbb
mov
or
ds
dec
addr16
jmp
add
fdiv
mov
negb
push
adc
icebp
xchg
jae
cmpsb
push
mov
push
ljmp
in
push
mov
mov
fld
andb
jmp
cmp
popa
sbb
in
mov
cmp
bound
pop
pop
lcall
and
push
add
xchg
ret
add
cmp
pop
fwait
jge
add
or
insb
arpl
fnstsw
lds
xor
mov
mov
sub
out
gs
sar
mov
jbe
push
and
addr16
imul
pop
mov
in
nop
sbb
aas
adc
outsb
jbe
lods
inc
sbb
pop
pushf
fistps
pop
aam
inc
jb
sbb
icebp
test
sbb
jae
test
pop
cmpsb
les
mov
je
pop
and
dec
outsl
sbb
add
pusha
mov
and
inc
lret
adc
and
out
and
xor
test
dec
and
xchg
leave
sub
xchg
repz
mov
push
cwtl
lea
sahf
jle
push
push
mov
mov
out
fsubl
sub
mov
inc
adc
lock
dec
cli
push
mov
orl
mov
mov
ret
sub
inc
in
mov
sti
lock
jge
test
add
mov
push
xlat
fnstenv
fstl
fwait
or
and
call
and
mov
xchg
xchg
mov
cmc
mov
shlb
or
dec
icebp
loope
in
sub
mov
add
mov
mov
movsl
loop
ds
scas
ffreep
mov
mov
daa
and
sarb
les
inc
jno
imul
adc
add
rcll
enter
into
jnp
out
dec
enter
dec
pop
outsl
cmp
je
or
fsubl
pop
std
push
subb
decb
ss
mov
sarl
push
cs
repz
or
repnz
pop
mov
add
lods
dec
fimuls
xchg
loope
mov
dec
sbb
dec
es
repz
mov
ja
mov
aam
cli
and
fsts
push
mov
xchg
bound
push
pusha
mov
xor
mov
sbb
aaa
je
jmp
mov
and
leave
or
sub
xlat
lahf
jb
lahf
shr
and
jno
mov
dec
rclb
pop
into
and
xor
mov
pop
test
push
jnp
mov
fwait
cmp
cmc
xchg
mov
stc
dec
xchg
mov
sarl
mov
pushf
int
out
pop
mov
push
mov
dec
negb
jge
insb
lock
jge
sbb
orb
inc
test
in
sbb
and
xor
in
in
adc
jl
addr16
push
cmp
cltd
sub
in
pop
fistl
cmp
mov
shlb
dec
pop
mov
loop
xor
jg
adc
and
repnz
call
pop
cli
jns
movsl
out
push
inc
sbb
xor
addr16
sarl
jbe
mov
cmp
pop
dec
int3
adc
sahf
outsl
lods
jo
lods
fs
sub
jmp
pop
or
ret
add
mov
add
mov
inc
out
rorl
cmpsl
inc
shl
iret
movsl
lret
enter
lret
movlps
inc
adc
push
jecxz
and
mov
lds
out
ja
fnstcw
mov
jle
sbb
repz
andb
and
jne
clc
paddsb
lret
inc
jnp
cmp
xor
cltd
cmpb
adc
sbb
lcall
sbb
stc
mull
call
outsl
scas
lods
mov
movsb
lds
mov
outsl
xchg
lods
sub
adc
lcall
ljmp
lcallw
pop
popa
jle
push
inc
std
imul
mov
mov
stos
cmp
push
add
out
je
in
stos
ret
in
or
mov
push
aad
addr16
out
push
cmp
xchg
mov
dec
popf
xlat
sahf
push
into
stos
cmp
es
insl
dec
add
hlt
clc
mov
and
imul
xor
lods
jle
pusha
mov
xchg
sbb
sbb
pop
int
jp
mov
mov
sbb
add
icebp
dec
pop
lahf
arpl
scas
lods
clc
enter
pushf
mov
inc
icebp
cltd
in
jmp
cmp
pop
adc
cli
sub
movsb
mov
rclb
jae
sbbb
cmp
scas
jmp
jecxz
pusha
pop
repnz
and
ljmp
push
jg
pushf
or
aas
cmp
in
mov
scas
xor
jmp
outsb
cmp
fsub
aad
mov
jae
aad
stos
adc
sub
nop
pop
sahf
gs
in
push
loope
lods
aam
adc
and
mov
sbb
shl
insl
je
fbld
lea
jo
out
mov
push
add
rorb
sub
popf
aaa
and
fprem1
cmpsl
and
pop
popa
cld
jmp
cltd
notb
dec
sbb
je
pusha
movsb
cmp
mov
mov
setno
xor
std
lods
adc
fimuls
xchg
jg
sub
jae
int
outsb
es
enter
xchg
jl
xor
int
aas
adc
out
mov
xchg
les
add
call
push
sarl
pop
mov
call
push
add
mov
xchg
ja
inc
mov
jle
adc
pop
sbb
inc
push
or
out
aad
mov
mov
loope
xchg
add
add
fdivl
cmp
add
inc
pop
jno
fcoml
into
fs
cmp
fstpt
aam
repnz
sub
aam
or
push
aad
dec
sub
mov
fs
loopne
cltd
xchg
cmpsl
loop
ss
pop
arpl
sub
pusha
mov
push
jnp
mov
lret
in
shl
popa
sbb
sbb
out
orb
std
fbstp
aaa
push
and
inc
movsb
mov
repnz
cmpsb
addr16
ss
sbb
ficomps
inc
adc
clc
dec
aaa
and
add
or
stc
stos
push
jb
int
out
dec
es
pop
in
xlat
shll
call
pop
mov
push
xor
add
inc
and
clc
push
hlt
sbb
stos
inc
into
fs
push
pop
mov
call
stos
call
jge
push
push
push
aaa
stc
mov
mov
push
cwtl
icebp
sbb
lcall
adc
lahf
fmulp
xor
cmpsl
lods
les
subb
and
mov
outsb
adc
xor
aaa
in
cltd
adc
pusha
cld
jns
adc
xor
mov
cmp
mov
cmp
jne
int
xchg
xor
hlt
cmp
jg
sub
mov
pop
xchg
sahf
pop
ficoms
sbb
iret
sub
dec
dec
or
rcll
arpl
and
lcall
in
out
stos
pop
and
push
je
pop
push
jns
mov
cmp
inc
pop
rclb
jbe
xor
movsl
dec
xchg
mov
cwtl
jo
lods
push
insl
ror
push
cs
dec
or
xchg
pop
pusha
cmpsb
cmc
bound
loopne
in
lcall
add
clc
movsl
inc
movsl
cwtl
jae
sbb
sbb
pop
jbe
inc
add
xchg
push
xchg
sbb
or
cwtl
push
iret
and
aad
cwtl
mov
push
adc
sbb
aas
push
das
mov
cwtl
and
mov
cmc
call
popf
and
dec
xchg
imul
and
mov
fldt
rcrb
insb
mov
xor
or
inc
add
loop
jbe
mov
fsts
jno
stos
push
sbbl
call
outsl
call
shl
jb
les
in
sub
xlat
inc
push
jle
sahf
hlt
loope
push
rcll
test
jmp
addr16
jo
mov
cld
rcll
inc
fld
add
mov
roll
xchg
xchg
sti
mov
vmovaps
outsb
clc
cmp
iret
cmp
daa
xchg
push
test
jae
idivb
xlat
fdivs
mov
pushf
inc
cmc
push
insl
dec
jmp
xlat
lret
and
pop
pushf
loopne
adc
mov
je
mov
dec
mov
sub
js
sti
push
jne
mov
jle
dec
dec
xor
pop
pop
inc
in
ret
dec
sub
enter
inc
jb
int3
cmpsl
xchg
mov
mov
sub
outsb
loopne
jecxz
sub
push
push
mov
adc
mov
jne
fnsave
jbe
sbb
leave
test
xchg
cwtl
in
cld
out
xor
shlb
das
mov
and
cmp
or
push
mov
xor
in
fadd
mov
js
pop
icebp
pop
or
in
shl
mov
popa
mov
cltd
jnp
insl
fldt
ja
sub
call
loope
mov
jmp
mov
and
jo
jns
icebp
repz
dec
xor
test
xlat
je
cmp
call
sbb
test
xor
sub
pop
xchg
pop
adc
fsubrs
loop
push
mov
and
popf
iret
inc
mov
mov
push
mov
jbe
mov
mov
or
bound
mov
inc
dec
ret
dec
cli
out
call
push
loopne
push
cmp
testb
ss
adc
mov
mov
adc
lea
xor
inc
mov
mov
cwtl
or
aas
mov
pop
mov
push
subb
mov
fildl
push
mov
das
inc
dec
dec
jmp
push
into
in
into
inc
mov
pop
cmpsb
ss
xor
int3
subb
mov
push
and
cmp
xlat
mov
xchg
or
or
dec
mov
inc
mov
add
and
mov
in
popf
mov
pop
or
shll
loop
push
mov
mov
movsl
gs
sub
xchg
daa
pop
loop
gs
out
and
sbbl
jg
popf
add
jne
push
call
mov
aam
jg
inc
inc
jle
sub
jge
or
je
sbb
in
in
sbb
pushf
add
push
aad
popa
jnp
pop
push
test
sti
push
sbbl
outsb
dec
out
imul
sub
mov
mov
jle
mov
gs
cwtl
lods
cltd
push
pop
into
jne
mov
mov
jns
xchg
and
les
lea
js
mov
sbb
cmc
repz
jp
les
rcll
cwtl
cmp
lret
test
in
data16
jno
jne
cmc
test
adc
inc
mov
fsubrs
sbb
out
sti
jne
jl
js
adc
sub
cmpb
lahf
jo
sub
mov
lds
push
push
addr16
jle
shld
sbb
xchg
das
fldcw
ja
mov
in
jecxz
mov
rorb
xchg
das
inc
adc
xor
ficomps
roll
cmpsb
into
lret
mov
scas
xchg
adc
push
sub
mov
movsl
sti
and
push
push
add
jge
imul
cmp
inc
jecxz
pop
repz
call
pop
ds
jb
insb
iret
inc
lret
cld
jbe
in
lock
das
enter
fsincos
std
push
sti
jp
loop
add
dec
inc
icebp
cmpl
and
push
adc
adc
xchg
movsb
inc
mov
or
call
push
aas
fstpt
lea
loope
pop
push
mov
mov
mov
enter
ds
insb
repz
jae
push
iret
ja
shl
or
add
fwait
lcall
les
pop
mov
out
fisttps
xor
dec
sbb
adc
pushf
mov
jp
fnstcw
cmpsl
push
je
sbb
xor
mov
loopne
test
jle
or
sub
add
inc
adc
lds
push
movsb
cmpsl
int3
xchg
ja
movsb
xorl
jp
jecxz
jns
pop
je
test
fisttpll
les
mov
add
call
hlt
adc
lods
sbb
mov
jo
jbe
and
inc
pop
mov
sub
pop
pusha
mov
dec
orb
pop
cli
jl
jbe
mov
mov
or
in
ret
out
pop
push
ret
xchg
xchg
mul
ljmp
xchg
and
sbb
jp
inc
call
add
bound
int3
mov
movsl
xchg
lds
add
sub
ret
pusha
push
push
mov
sbb
or
or
dec
hlt
enter
insb
lret
les
mov
xlat
jns
mov
ss
cld
je
and
lahf
std
xor
scas
fiadds
add
jge
mov
loopne
mov
jno
add
pop
iret
mov
and
xor
pop
sub
fwait
pop
mov
cmpsl
sub
lret
clc
cld
mov
enter
leave
and
adc
sahf
stos
inc
gs
rcrl
sub
xor
push
enter
sbb
jbe
ljmp
jge
popl
add
sub
jge
sub
push
test
lcall
ret
scas
push
shll
in
dec
and
lock
push
and
push
adc
push
int3
ffree
out
xor
push
or
fimuls
xchg
mov
mov
mov
pop
inc
ljmp
and
outsl
mov
pop
xchg
insl
lret
cmp
sahf
popa
xor
clc
push
lahf
xorb
mov
test
sbb
hlt
outsl
cmc
int3
je
std
pop
or
pushf
sub
xchg
addb
imulb
dec
pop
jno
sbb
push
lods
out
push
pop
fiaddl
aaa
cmp
cmp
aaa
cmp
lock
cli
jmp
mov
mov
or
xlat
mov
dec
iret
jmp
and
push
sub
jmp
lods
add
or
xchg
mov
mov
leave
into
dec
icebp
rclb
or
mov
enter
outsl
inc
push
jns
xor
in
mov
mov
cmp
push
sub
sahf
add
mov
inc
pop
hlt
mov
and
xchg
xlat
imul
dec
mov
mov
and
pop
cmpsb
xor
xchg
pop
dec
or
testl
lcall
aad
add
cmp
inc
mov
aad
pop
pop
ljmp
lret
hlt
pop
xor
mov
mov
fiaddl
jo
sarb
stc
loopne
test
push
rorl
cld
repz
mov
dec
mov
pop
xchg
fs
nop
fldt
jbe
lret
int3
loope
test
mov
cmp
faddl
adc
lahf
data16
and
in
sarl
xchg
or
outsl
fistl
xchg
neg
and
mov
pop
sbb
addl
push
ss
lods
mov
xchg
inc
outsl
out
cltd
add
stos
in
jge
mov
imull
jle
and
xchg
into
lods
jl
leave
lods
ret
stos
pop
negb
mov
jmp
call
sbb
test
mov
pmulhuw
inc
jecxz
shlb
rorl
movsl
ret
out
sub
sub
mov
mov
sbb
xchg
mov
aam
jl
inc
mov
xchg
imul
notl
loop
inc
out
pop
push
ljmp
xor
je
fcompl
mov
pop
add
or
xchg
inc
mov
mov
inc
mov
dec
test
mul
les
xchg
cld
mov
jns
mov
out
stos
lea
decb
gs
push
add
rcrb
dec
dec
imul
adc
fdivr
pop
xlat
inc
call
pop
jne,pn
mov
stc
cmp
adc
icebp
push
pop
add
pop
scas
and
movsb
or
inc
neg
mov
pushf
jle
cs
dec
fists
and
push
adcb
bound
data16
shlb
mov
adc
repnz
cmc
inc
jns
adc
pop
mov
in
test
cmpsl
outsl
add
fsubr
and
mov
xchg
jmp
outsb
lcall
aas
push
in
xchg
std
jmp
push
and
int3
inc
rolb
lods
inc
mov
mov
scas
out
scas
add
adc
jle
ret
xor
and
mov
mov
push
out
dec
in
mov
pop
or
add
fsub
xor
ret
cltd
cmc
in
inc
xor
in
push
adc
xor
jnp
mov
ljmpw
lcall
push
push
imulb
lcall
mov
stos
and
stc
xor
out
data16
sbb
sbb
clc
dec
arpl
jb
push
fistps
cmc
pop
mov
dec
out
dec
pop
add
mov
or
lds
adc
add
adc
frstor
push
in
mov
repnz
cmp
arpl
xchg
xor
inc
dec
push
xchg
mov
ror
sub
test
outsb
sti
mov
mov
xchg
outsb
mov
cmp
sbb
or
in
fimuls
add
jns
push
mov
xchg
pmulhuw
fdivl
ret
sub
jb
push
mov
push
push
push
and
jo
je
jmp
popl
sbb
mov
mov
test
nop
adc
movsb
adc
movsl
push
sub
mov
mov
frstor
mov
bound
enter
mov
sahf
pop
xor
jo
mov
lea
imul
push
popa
arpl
leave
int
pushf
xchg
cmp
aas
xchg
lods
testb
mov
in
stos
insb
jp
rcrb
or
cs
mov
imul
mull
sub
mov
dec
push
ficompl
cwtl
pop
int3
in
jae
sub
pop
xchg
pop
cmc
xlat
cld
add
daa
je
mov
push
mov
and
ud1
cs
shlb
and
in
dec
adc
dec
sbb
int3
xchg
mov
add
in
fidivrl
repz
cmpsb
cmc
jl
xchg
cmp
dec
hlt
fldenv
enter
cmp
cltd
and
mov
mov
clc
jo
inc
pop
dec
push
rorb
cmp
rolb
fnstsw
insb
pop
movsb
shlb
ss
xor
test
in
ja
outsl
pop
adc
jnp
mov
pop
in
mov
test
movsb
sahf
clc
jnp
xchg
ljmp
cwtl
sub
js
dec
sbb
sub
dec
or
stos
call
lcall
mov
cwtl
sub
js
dec
sbb
sub
dec
or
stos
in
mov
fsubr
test
ror
mov
cwtl
imul
push
push
arpl
dec
add
mov
xchg
sbb
sub
cwtl
ljmp
pop
sub
sbb
sbb
jo
pusha
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
stos
dec
enter
lret
loopne
push
jecxz
dec
inc
les
add
push
add
add
pop
push
add
add
cmp
mov
add
push
add
inc
add
add
add
add
add
add
add
out
pop
add
add
or
mov
add
add
or
aaa
add
mov
add
add
add
popl
add
or
inc
add
add
add
add
add
xor
sbb
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
jne
inc
add
add
add
add
add
inc
add
add
add
in
xlat
add
add
add
add
add
add
add
add
add
add
add
repz
nop
add
out
add
add
add
xor
mov
aaa
add
adc
aas
add
inc
add
add
add
add
add
add
add
add
add
or
cmpsl
add
add
add
add
scas
add
add
add
add
or
add
add
roll
add
add
add
add
add
add
add
add
add
add
add
sbb
xchg
add
add
add
add
add
mov
add
add
add
add
add
add
jb
push
add
add
add
mov
jge
pop
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
xlat
add
add
add
add
add
add
add
aad
inc
add
mov
add
add
add
or
pushf
add
and
imul
add
in
add
add
add
add
add
add
add
or
push
add
add
add
add
int
mov
add
add
add
aas
add
add
jge
addl
add
add
adc
verw
inc
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
dec
add
add
lret
add
add
inc
add
mov
add
add
add
or
mov
add
add
pop
add
add
add
add
add
sub
sbb
add
add
add
add
sub
popf
add
add
add
add
pusha
add
add
add
add
add
add
and
out
add
add
add
add
add
add
add
add
add
test
sbb
insl
add
add
add
add
add
dec
add
add
add
push
add
add
inc
add
add
add
add
add
add
push
add
add
add
sub
add
add
sbb
lcall
add
add
ljmp
add
add
mov
mov
add
xor
es
add
add
add
add
add
add
sbb
outsl
add
add
add
add
add
add
popf
add
add
inc
es
jbe
add
in
or
stos
or
scas
mov
mov
xchg
fiadds
lret
jne
adcb
in
xchg
aaa
or
out
out
inc
sub
and
mov
cmp
lret
pushf
incl
dec
outsl
aad
jle
sbb
arpl
inc
inc
or
lret
stc
inc
test
mov
jl
mov
rolb
ficompl
out
repnz
xlat
int
mov
adc
adc
jmp
movsb
clc
push
ret
sub
mov
out
or
rcll
push
popa
aas
cs
mov
movsl
out
jo
test
les
or
aam
test
out
sbb
into
jne
stc
pusha
sbb
jle
rcll
xor
lds
jne
adc
and
popf
lock
mov
ja
push
cmp
mov
repz
cmp
lret
mull
add
icebp
jmp
mov
jo
and
sbb
lcall
jg
test
int
aas
out
sbbl
hlt
jae
gs
mov
xorl
add
in
or
sub
xchg
imul
cli
sbb
dec
lret
insb
xor
shlb
sti
dec
jmp
fucomip
mov
inc
and
and
and
push
loop
shlb
outsb
shll
bswap
scas
and
sub
dec
imul
ss
aaa
sub
pop
subb
dec
fistpll
sbb
push
push
adc
cmp
jmp
lods
lock
dec
cltd
mov
cmpl
in
jne
lcall
xchg
cmp
sbb
adc
movsl
scas
pop
or
pop
in
lea
mov
push
loope
icebp
xor
cmp
adc
mov
jp
das
or
call
mov
pushf
or
fdivrs
pusha
pop
test
sahf
xchg
push
flds
stos
in
enter
iret
arpl
fidivrs
mov
mov
pop
push
lahf
addr16
mov
inc
sbb
leave
and
adc
mov
test
cld
out
ja
and
inc
aad
push
add
inc
addr16
pusha
sub
xor
out
lds
sbb
lds
adc
mov
xchg
mov
push
out
xchg
ss
push
mov
lods
xchg
das
mov
adc
or
sub
nop
lea
jecxz
das
mov
dec
inc
and
dec
adc
loopne
push
out
jnp
or
jns,pt
adc
pop
fs
jns
lret
pop
jmp
iret
sub
jl
lret
loop
dec
sub
dec
icebp
push
add
sub
ja
lret
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
