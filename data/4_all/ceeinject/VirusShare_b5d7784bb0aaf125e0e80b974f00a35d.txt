call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sub
push
inc
sub
pop
dec
jb
jnp
mov
imul
mov
ret
mov
adcl
inc
xor
and
adc
add
icebp
shll
xchg
cmpl
jle
sub
out
sbb
adc
roll
in
daa
jno
or
and
jae
add
cmc
push
aad
xchg
jge
repz
ret
insl
cmpsl
fisubrl
and
jle
fistpll
sub
jno
or
sarl
pop
xchg
sbb
mov
inc
push
and
jb
cs
cmpsb
je
and
insl
sub
cmp
and
push
popa
cmp
jno
adc
loope
dec
adc
repz
sub
sub
mov
xchg
sbb
jecxz
mov
fsts
mov
inc
inc
pop
add
jl
loope
xchg
aad
push
fnstenv
jle
jle
cmpl
sub
mov
lock
cmc
mov
mov
ret
outsb
xchg
inc
inc
cmp
xor
push
or
stc
push
enter
test
repnz
adc
popa
add
inc
dec
addr16
dec
adc
cwtl
mov
xchg
test
repnz
shr
or
popa
add
popf
inc
dec
inc
push
adc
gs
fimuls
mov
into
repz
xlat
in
xor
xor
xor
pop
and
adc
add
icebp
mul
rcl
shll
xchg
andl
push
inc
xor
and
adc
add
icebp
mul
rcl
shll
xchg
andl
or
or
inc
lods
jb
movsl
addr16
mov
pop
or
xor
and
sti
or
push
cwtl
fdivl
testb
fldcw
in
roll
and
aad
cltd
mov
jno
or
pop
and
addr16
fimull
dec
sti
inc
xchg
xchg
icebp
or
or
aad
mov
sahf
mov
sbb
xchg
mov
add
outsl
lods
repnz
out
xchg
test
cwtl
aas
dec
mov
and
icebp
xchg
jmp
sbbb
jne
xchg
lods
sub
out
outsb
in
cmp
pop
mov
incb
roll
mov
mov
loop
mov
or
jb
pop
add
mov
xor
or
jae
pop
jp
sub
xor
inc
call
aaa
aam
cwtl
mov
push
dec
push
jnp
sbb
cmp
outsb
jnp
insb
mov
bound
addr16
xor
inc
enter
xchg
out
add
sub
test
fwait
cwtl
xorps
sub
xchg
mov
loopne
mov
movsb
fs
lods
xlat
iret
jnp
push
out
adcl
lret
clc
ret
out
inc
adc
bsf
lret
pop
push
sbb
mov
dec
test
sahf
movsb
sbb
dec
clc
les
stc
mov
adc
in
cmpsb
jecxz
stos
jo
int
rol
add
inc
mov
test
jns
int
dec
and
or
and
ja
adcb
daa
flds
push
pop
or
and
inc
sub
lahf
mov
fnsave
out
cwtl
adc
pop
jns
ljmp
jno
xor
xor
in
scas
aas
jb
test
sub
addr16
cmpsl
rcr
push
notb
and
in
dec
xchg
mov
jg
mov
les
mov
das
mov
les
cmc
fabs
jbe
dec
imul
mov
sub
stos
lret
sbbl
out
adc
out
jne
rorl
jo
inc
repnz
ss
in
fnstsw
and
dec
adc
jmp
mov
in
xchg
fdivrl
ds
fmul
pop
ret
inc
fidivl
inc
mov
lods
jg
dec
and
cmp
xorl
pop
sbb
push
dec
roll
neg
push
lret
add
adc
lds
rolb
xchg
add
jmp
mov
add
xlat
movsb
mov
lds
sub
mov
repz
iret
or
imul
filds
fidivl
nop
pop
dec
mov
adc
fisubrl
xchg
and
aas
push
jo
jecxz
insl
xchg
push
repz
das
jne
adc
popf
dec
jecxz
sbb
lods
mov
lahf
sarl
pushf
push
cld
push
inc
push
data16
fldenv
ss
cmp
clc
inc
mov
jb
lea
mov
push
pop
cmp
sar
mov
mov
mov
sub
jbe
or
mov
dec
test
lods
or
add
sbb
popa
je
jg
lods
loop
mov
push
or
and
insl
data16
mov
jecxz
aad
and
incb
ds
xor
mov
xchg
sarb
iret
xor
lods
inc
add
fbld
mov
lret
xor
jae
ss
jg
lcall
imul
out
xchg
imul
mov
mov
popa
sarb
insl
lcall
cmp
cld
and
je
lret
rcl
data16
inc
dec
dec
inc
cmp
mov
jne
pop
cmp
adc
inc
dec
add
stos
aam
es
xor
inc
jmp
pop
cmpsl
cmp
loopne
daa
mov
fsin
jo
test
fnstsw
xor
adcl
mov
jl
xor
add
mov
jmp
cs
leave
addr16
push
adc
dec
push
jg
adc
dec
sbb
push
subb
pop
cli
jp
sbb
jns
inc
fisttpll
xchg
addr16
pop
mov
or
ljmp
mov
je
notl
jnp
repnz
add
jg
data16
je
jne
mov
and
fdivrs
push
dec
ret
add
je
push
js
pop
push
pop
lret
lret
pop
mov
fld
mov
and
inc
add
dec
sbb
popa
pop
adc
cmp
push
lahf
out
rolb
cmc
dec
xchg
mov
xor
mov
xor
xchg
push
divl
ret
sub
imul
xchg
mov
lcall
add
mov
adc
mov
cwtl
adc
negb
dec
lahf
es
cmp
sub
data16
mov
mov
out
dec
icebp
mov
cmp
imul
push
test
pusha
sub
loopne
pop
push
and
std
jg
adc
push
pop
push
out
aad
sahf
inc
aaa
or
data16
ds
cmpsl
xchg
pop
emms
dec
arpl
in
shll
xor
cwtl
xchg
enter
movsl
pop
sub
dec
xor
int
mov
insl
cmp
repz
cmp
jo
stos
sub
test
mov
adc
push
aaa
mov
cmp
imul
mov
arpl
xor
out
jp
mov
add
inc
mov
or
mov
adc
lods
cmp
repnz
dec
call
or
and
pop
ss
fstpl
rolb
xchg
in
ret
adc
and
fiaddl
or
or
scas
cltd
out
jge
enter
in
inc
pop
mov
add
mov
mov
xor
int
jl
mov
lret
jno
push
mov
dec
dec
pop
popf
icebp
or
adc
addr16
movsb
mov
and
cmp
fbld
pop
adc
imul
mov
jne
mov
loope
dec
push
mov
push
into
sbb
mov
adc
jnp
mov
or
mov
xchg
add
jle
cltd
lret
negl
adc
mov
jg
pop
pop
xor
xor
ja
xor
out
or
aaa
cmp
testb
sbb
cmpsb
int
movsb
mov
push
lcall
test
mov
sub
in
cmpsb
xor
push
jbe
sbb
out
outsb
mov
rcrl
iret
jmp
mov
add
ret
sbb
int3
xor
outsb
shl
sbb
lods
cmpb
push
lds
adc
test
sbb
sbb
dec
xchg
in
adc
movb
jg
ljmp
mov
push
dec
popa
loopne
daa
mov
dec
sub
cs
test
pop
pushf
fs
and
mov
xor
adc
iret
test
pop
adc
cwtl
int
and
cmp
sub
dec
mov
sub
aaa
rcll
push
fwait
add
jg
fidivrl
xchg
insl
add
sbb
in
sar
add
sbbb
sbb
scas
lret
lods
lahf
xchg
mov
lcall
cmpsb
es
mov
push
pop
loop
das
dec
stc
aad
and
pop
lock
mov
mov
imul
mov
sub
cld
loope
and
loopne
lds
test
jne
cwtl
arpl
mov
outsb
fs
mov
xor
pop
js
int
push
sahf
cmpsb
fcomi
pop
clc
fcom
pop
mov
dec
sarl
mov
adc
sbb
jns
popf
or
in
fcompl
mov
jp
push
js
xor
stc
fdivs
int
lahf
inc
loopne
fisubrl
stc
std
jns
push
popf
adc
repnz
aaa
sbb
cmp
outsb
jae
xor
lods
and
outsb
mov
stos
std
mov
jno
push
call
sub
xchg
in
push
sbb
add
mov
push
cmp
enter
pop
mov
mov
sahf
or
or
push
cltd
cmp
inc
je
bound
mov
in
mov
es
repz
mov
aaa
mov
inc
fidivs
shlb
cmpsl
iret
or
mov
ret
xchg
add
lea
mov
push
cwtl
fwait
mov
inc
scas
inc
stc
dec
mov
xor
or
sbb
stos
ret
imul
les
jne
mov
cmp
loope
nop
mov
adc
leave
stos
xchg
xor
xor
lods
push
js
les
xchg
and
scas
and
imul
lea
js
or
push
jl
lcall
notb
in
out
ret
in
adc
repz
aad
add
xor
push
mov
int
mov
push
sahf
sbb
arpl
ljmp
fwait
xchg
inc
inc
sbb
scas
push
adc
cwtl
jno
add
cmp
inc
gs
dec
pop
jmp
das
and
roll
cld
inc
jne
faddl
cwtl
scas
iret
je
shlb
mov
fucomip
jg
xor
pop
int
inc
pop
pop
sub
cmp
js
push
les
lods
or
and
pusha
jle
push
pop
xchg
js
sahf
pop
out
dec
cmp
shll
mov
popf
pop
movsb
popa
sarl
shll
in
sbb
mov
out
les
jge
mov
popf
and
es
or
sbb
inc
xor
jg
decl
mov
movsb
and
inc
stos
fistpll
push
frstor
sbb
mov
mov
scas
sub
fs
fisttpll
cli
stos
and
ret
adc
pop
mov
lods
out
dec
ljmp
fsubrl
jb
fsubrs
dec
sub
arpl
or
jge
aad
std
push
cmp
enter
fdiv
mov
lock
mov
lcall
int3
loopne
or
ret
sub
es
aas
inc
into
and
rclb
sbb
inc
in
fmul
cs
mov
or
mov
or
repnz
lret
in
sbb
jb
dec
es
jb
pop
pop
mov
inc
push
outsl
cs
sub
ss
ret
shlb
dec
pop
jge
inc
addr16
adc
lods
out
adc
repz
mov
jno
sahf
adc
js
dec
and
lcall
cltd
adc
mov
cmpsl
add
pop
imul
push
mov
jle
lea
lds
adc
outsl
daa
je
or
adc
sbb
jp
aas
loopne
cs
sbb
sarb
fwait
mov
test
in
xor
adc
int3
fidivl
les
sub
fadd
xorl
fsubs
sbb
mov
stc
fimuls
shll
mov
add
xor
mov
pop
jle
jo
push
inc
add
fbstp
pop
test
cmp
lds
in
lock
pop
pop
adc
repz
inc
pop
imul
movsb
mov
cmp
jbe
sub
push
or
je
jne
sub
faddl
insb
push
ja
lahf
stos
pop
jmp
jae
insl
xor
clc
out
addr16
dec
mov
mov
pop
mov
xchg
cmp
jnp
push
aam
jg
xchg
insb
jnp
outsl
push
mov
js
and
cltd
and
loop
movsl
add
pop
jne
jns
sub
je
insl
pop
movsb
outsl
mov
lcall
fnstsw
sahf
sbb
pop
sbb
or
xchg
and
lods
dec
pop
mov
les
push
mov
das
je
dec
test
mov
xchg
dec
pop
xlat
mov
shll
xor
fmull
xor
jb
xor
mov
jae
jg,pt
mov
pop
aam
scas
sub
sbb
jmp
add
sbb
cmp
sbb
xchg
cli
mov
jb
leave
ljmp
pop
lret
mov
mov
or
sbb
and
ss
xor
adc
push
aaa
mov
pushf
pop
cmp
add
loop
pop
div
jp,pn
inc
cmp
out
or
pusha
push
mov
mov
jne
xchg
cmpsb
sub
sub
mov
imul
push
outsb
mov
lock
or
cld
xchg
jns
pop
lret
fildl
psubsw
aad
cmp
stos
repnz
and
ret
jg
dec
insb
inc
cmp
cs
outsb
mov
jnp
and
pop
add
jbe
jg
mov
leave
sbb
stos
adc
inc
enter
sbb
aam
mov
add
pop
ret
sub
in
cmp
adc
sarl
add
stos
mov
aad
sbb
shll
sbb
fsub
sub
fwait
mov
xchg
push
xor
lds
push
test
xchg
shrl
push
or
popa
cmp
cmpsb
test
imul
in
pop
enter
fcmovne
jle
les
add
mov
das
out
mov
inc
lret
mov
test
push
sub
imul
aam
pop
inc
fidivrs
shlb
fisubs
push
adc
add
sbb
xchg
loopne
lcall
fcomps
lods
inc
mov
loopne
jmp
inc
or
xchg
push
ret
out
lea
xor
and
mov
cmp
lea
and
adc
rcrl
pop
fwait
outsl
sti
cmp
je
mov
mov
and
lods
inc
push
xchg
js
pop
xor
jle
push
mov
sbb
rorb
xor
stos
lea
or
sbb
mov
sub
sti
lahf
and
stc
pop
mov
jb
addr16
sahf
push
iret
in
fisubrs
in
std
in
rorb
lahf
cmp
sbb
mov
mov
nop
jb
mov
rcr
mov
push
dec
pop
ret
adc
mov
into
movsl
or
or
out
cmpsb
xchg
xlat
les
xor
mov
popf
cmp
mov
cmp
dec
loopne
pop
lcall
aaa
das
into
cmp
fsub
out
mov
mov
je
push
cmpsl
pop
orl
xor
test
or
mov
xchg
outsb
inc
js
xor
push
xor
jb
bound
inc
pop
movsl
shrl
les
jge
cmp
sbb
icebp
pop
test
pop
addr16
sahf
cmp
rcl
and
stos
iret
loopne
ljmp
aad
jmp
fldl
push
in
ret
in
xchg
dec
loop
les
sbb
int3
sub
sub
xchg
sub
xor
out
pop
sub
nop
nop
fdivl
lahf
movsl
out
push
cmp
or
es
xchg
shrb
repnz
push
into
popa
cmp
or
sub
xor
out
jo
fimull
xor
in
fcmovnu
inc
js
mov
cmp
loopne
pop
or
mov
lea
hlt
or
adc
cwtl
adcb
ss
dec
jbe
cltd
je
fmull
movsl
test
sbb
inc
mov
push
sub
mov
in
mov
and
sub
mov
or
test
inc
dec
test
mov
xchg
cmp
push
in
sub
ds
testb
inc
inc
ds
cmp
iret
xor
sub
cwtl
add
xorb
pop
xchg
mov
leave
jl
mov
mov
jae
cmpsl
out
mov
dec
call
fcmovnu
push
cmp
outsb
pop
jmp
or
cmp
aam
dec
rcrl
outsl
adc
testb
xchg
dec
push
popf
mov
repz
daa
out
arpl
lods
in
ret
add
cltd
loopne
ss
out
xchg
pushf
push
int
fcomps
add
mov
sbb
cli
xlat
xorl
cmp
adc
xchg
xor
jb
or
lcall
addr16
iret
ja
test
and
jnp
xor
pop
aam
mov
test
xchg
xchg
xchg
xchg
sarl
fcoml
cld
testl
sar
or
jecxz
popf
jp
in
pop
rolb
xor
or
nop
and
xchg
cmp
jno
or
push
jno
testl
mov
loopne
xchg
int3
sbb
lret
xor
imul
andb
rorb
pop
mov
mov
xchg
out
or
gs
ja,pt
pop
stos
inc
out
ss
sbb
aam
std
dec
pushf
sti
mov
ret
cmp
add
cmp
pop
cld
cmp
arpl
fstpl
adc
push
in
pushf
xor
in
dec
popf
dec
pop
jb
retw
mov
pop
xchg
pop
xor
les
daa
ds
sub
or
inc
add
daa
mov
cs
test
call
inc
je
int3
lea
jmp
std
inc
add
add
mov
inc
dec
push
and
lahf
jmp
xorb
negl
adc
sbb
pop
leave
ds
cltd
sti
adc
repnz
inc
push
fldl
popf
cwtl
push
or
ds
sti
add
push
cmp
mov
or
iret
push
xchg
jb
inc
add
sub
xchg
orb
mov
stc
out
add
mov
sub
mov
mov
fldl2e
jns
xchg
mov
dec
xor
push
imul
arpl
fidivrl
cmp
mov
xchg
and
mov
push
ss
mov
jne
pslld
lea
cwtl
jl
xchg
inc
and
pop
jg
cltd
push
js
pop
mov
xor
inc
push
add
popa
ds
lahf
mov
rcrl
xor
mov
js
adc
and
int
sbb
sbb
pop
mov
xlat
insb
adc
sub
mov
mov
pusha
rolb
mov
push
or
sar
fwait
push
popa
mov
xchg
pop
in
mov
aam
in
shlb
push
leave
add
ds
jnp
dec
cmp
aad
ds
pop
or
pop
mov
sbb
mov
inc
cwtl
in
adc
test
add
arpl
sub
test
mov
inc
xchg
mov
push
xchg
jne
out
in
jns
adc
bswap
lcall
mov
sahf
or
inc
sqrtps
fldcw
cmpsl
mov
inc
cmp
daa
movsb
fsubs
fiadds
pop
pusha
fdivl
sub
adc
rorb
js
sti
clc
pop
into
inc
cmp
fbld
pcmpgtw
nop
jbe
mov
loopne
inc
xchg
out
pop
jo
sub
dec
cmp
lahf
xor
and
mov
subb
loope
and
lea
xchg
pop
xor
fisttpl
pushf
movsl
icebp
cmp
lahf
push
cmp
jmp
mov
cld
jne
ret
sub
mov
mov
mov
xchg
mov
cwtl
xor
xchg
xor
stos
mov
mov
xchg
outsl
test
loopne
xchg
mov
sti
adc
lds
pop
sarl
test
xchg
xor
imul
fdivs
ret
ret
test
add
inc
cmpsb
bound
cmpsl
std
mov
jns
fadds
jae
gs
pusha
jge
xlat
jge
adc
inc
enter
stc
jb
xchg
sub
idivl
repz
mov
fwait
xchg
cmpsb
sbb
mov
and
bound
ss
add
sbb
mul
stos
cmp
repnz
dec
and
add
dec
xor
das
jnp
data16
ss
adc
adc
sub
adc
jmp
bound
or
in
lock
imul
mov
ss
jno
jbe
gs
out
xchg
scas
and
inc
or
xchg
data16
fidivl
or
push
fisubs
xchg
popf
loop
shl
pop
xchg
push
add
mov
pop
inc
and
pop
das
xchg
xor
sbb
movsb
subl
and
jae
mov
inc
test
cld
shll
mov
mov
psubw
mov
or
or
add
mov
leave
mov
push
test
ljmp
js
rorl
cmc
mov
dec
cs
mov
jnp
mov
test
aam
sub
sbb
or
mov
or
mov
in
jo
rcrb
xor
jo
xchg
sub
out
je
xor
in
push
and
sub
fildl
imul
push
cmp
movb
arpl
inc
add
rcll
sbb
test
stos
mov
ret
lahf
push
icebp
mov
and
adc
add
icebp
mul
rcl
shll
xchg
andl
push
inc
xor
and
adc
add
icebp
mul
rcl
shll
xchg
andl
push
inc
daa
xor
and
adc
add
icebp
mul
iret
rcl
shlb
cmpsb
cmpl
jle
xor
and
adc
dec
insb
rcl
mov
cmp
pop
jns
imul
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
addr16
push
pop
aaa
cs
cmp
lods
jns
fisttpll
xchg
xchg
fdivl
cmp
or
pop
jl
dec
daa
pop
push
lods
mov
imul
loop
xchg
int3
cmpsl
fdivl
or
sbb
insb
pop
jl
dec
daa
pop
aaa
lods
mov
cltd
pop
xchg
lret
in
ret
pop
or
inc
xor
adc
mov
outsl
xor
mov
push
jae
inc
mov
jns
pop
cli
insl
pop
jae
scas
sub
aad
adc
adc
and
test
mov
mov
dec
neg
cld
sub
lods
in
arpl
push
js
stos
dec
sub
inc
sub
lock
pop
lods
das
pop
xlat
mov
and
xchg
scas
ja
rcl
mov
xchg
test
cwtl
or
mov
jbe
aaa
les
leave
ret
pushf
idivl
iret
and
push
cmp
xchg
cltd
jg
dec
mov
mov
lcall
xchg
adc
cwtl
xchg
cld
int
fisttpll
inc
cmp
or
sbb
insb
pop
jl
dec
daa
pop
aaa
lods
mov
imul
xchg
xchg
int3
cmpsl
fdiv
pop
inc
js
pusha
es
ss
inc
sbb
inc
cmp
mov
into
jecxz
clc
xchg
aad
shlb
jg
js
push
adc
inc
sbb
jo
sbb
mov
stc
movsl
cmpsl
loop
add
adc
add
sub
daa
pop
aaa
lods
mov
imul
xchg
xchg
int3
cmpsl
fdivl
or
sbb
insb
pop
jl
dec
daa
pop
aaa
lods
mov
imul
xchg
xchg
int3
cmpsl
fdivl
orl
ja
jo,pt
sarl
xchg
shll
in
cld
rcrb
push
or
push
out
mov
inc
inc
incb
scas
mov
push
push
mov
es
pop
inc
mov
sbb
in
adc
outsl
and
int
nop
cmp
fs
shl
bound
movsl
mov
cmp
enter
pop
inc
mov
sbb
je
xchg
or
or
dec
cmp
jo
js
fcompl
stos
in
mov
inc
cs
mov
aad
adcl
cmp
push
xchg
out
lods
pop
ljmp
cmp
fs
outsl
icebp
sub
add
mov
xor
push
pop
mov
into
repz
loope
in
sbb
cwtl
inc
mov
dec
mov
cmpsl
ret
mov
push
jp
stos
add
push
pop
out
shll
iret
and
and
fiadds
gs
dec
or
fildll
mov
xchg
push
or
mov
sbb
xchg
cli
xchg
clc
dec
push
inc
jle
sbb
mov
sbb
test
or
test
push
dec
sbb
pop
jg
aam
call
dec
faddl
sbb
dec
ss
fcmovb
das
test
aaa
lret
pop
shl
mov
outsl
cmp
das
xchg
lock
scas
and
movsl
insl
dec
fidivs
sub
cs
sbb
jg
push
shl
xorb
sbb
add
out
pop
rorb
jne
clc
out
add
dec
aam
leave
pusha
dec
mov
jae
or
push
mov
sub
inc
leave
xchg
out
dec
xor
mov
xor
hlt
or
xchg
js
out
xor
test
call
outsl
lahf
xor
jecxz
pop
jns
movsb
adc
and
test
fnstsw
and
lcall
add
dec
sbb
mov
aad
les
dec
repnz
sbb
pop
mov
test
adc
in
pusha
das
sub
xor
and
rcr
and
js
pop
xchg
inc
mov
jno
adc
ss
ffreep
leave
fwait
pop
daa
pop
popf
cmpsb
lahf
mov
pop
lret
jecxz
jl
dec
movsb
mov
xor
mov
inc
jb
ret
mov
lods
pushf
data16
out
and
loopne
push
push
in
imul
dec
or
nop
dec
push
das
or
inc
cs
adc
cltd
jg
and
xor
loopne
mov
es
imul
imul
jle
popf
and
dec
jo
inc
fs
in
aas
mov
repz
mov
testb
das
andl
and
pop
shrb
lock
sbb
call
ret
xchg
sub
cmpsb
or
jbe
aam
adc
lretw
dec
or
ret
and
adc
jg
pop
hlt
aam
cmp
imull
mov
push
dec
push
push
pop
xor
xchg
pop
sbb
sbb
decb
daa
xor
xor
mov
out
mov
aaa
insl
das
lret
mov
jb
incl
fcmovnu
das
or
fisttps
xchg
jge
adc
xor
in
mov
stc
xchg
sbb
out
mov
mov
fs
fldcw
cwtl
xor
and
adc
add
bound
fisubrl
arpl
add
int
fsub
lods
add
jne
shrl
adc
push
sub
fs
subl
ja
push
ja
mov
stos
test
push
jns
cli
js
fistps
cwtl
scas
sahf
test
sbbb
ja
xchg
mov
ss
aad
insl
xchg
ret
arpl
dec
jno
jle
mov
inc
in
loop
push
pop
mov
mov
rol
iret
mov
mov
sub
nop
out
enter
test
ljmp
xchg
sub
loopne
pop
insb
lds
mov
loopne
hlt
testl
iret
lods
sahf
push
dec
xlat
js
or
inc
push
mov
or
mov
mov
mov
dec
jno
cmp
adc
xchg
mov
cli
stos
jbe
dec
call
inc
mov
push
call
in
rcrb
stos
mov
jns
repnz
fbld
out
xchg
cmp
push
and
gs
pushf
movsb
push
pop
sub
daa
popf
ffree
pushf
int
mov
enter
xor
into
jge
in
inc
xor
repnz
in
test
xor
dec
ja
mov
int3
or
dec
cmp
shl
jae
enter
data16
xor
out
icebp
sub
mov
sub
outsb
nop
and
jmp
xlat
sysexit
mov
cmpsl
add
xlat
jne
jb
jbe
pop
cmc
andb
or
jmp
mov
jmp
jge
outsb
clc
mov
adc
insl
cmp
or
pop
frstor
inc
test
popf
es
xor
cmp
push
pop
fsubp
sub
aaa
insl
jge
ds
add
call
in
sti
dec
les
scas
stos
js
push
lahf
fcoml
sbb
xor
push
bound
js
iret
sti
es
sub
cmc
aad
mov
sub
dec
in
lods
call
or
and
enter
pusha
adc
repz
sbb
mov
fdivp
loop
mov
and
sbb
jbe
js
shll
jbe
repnz
ds
loopne
and
inc
xchg
jle
sub
mov
and
dec
dec
push
aam
jg
mov
jp
dec
sarl
fnstsw
lcall
je
cli
mov
push
incl
std
lcall
cs
inc
lds
sti
sub
mov
push
sahf
popf
sbb
inc
loopne
adc
enter
adc
addr16
mov
push
enter
jp
xor
ret
cmp
sarl
push
out
movsl
movlhps
and
push
ja
jmp
sub
push
pop
aam
cs
jb
push
dec
cmp
jo
add
stc
xchg
roll
dec
push
ret
sahf
into
fmull
jns
mov
clc
sbb
int
add
pop
adc
imul
cmpsl
addr16
push
jae
daa
xchg
data16
loope
mov
jnp
lods
in
ret
cltd
add
jl
js
mov
or
jmp
push
fisubs
int3
pop
push
push
xor
xchg
push
add
push
stc
icebp
dec
sbb
jg,pt
sub
out
sub
pop
xchg
or
jno
mov
pop
sub
mov
mov
dec
jno
or
in
mov
sub
notl
ret
xchg
jns
push
or
aad
pop
daa
xor
sub
sbb
decb
pop
test
mov
mov
add
pop
and
sbb
xchg
jecxz
pop
pop
mov
or
dec
dec
xor
fnsave
mov
ret
lret
push
mov
xchg
rcl
push
roll
es
lds
jl
int3
lcall
xchg
sub
cmp
push
mov
les
int
cmp
lea
repnz
dec
dec
mov
add
sub
inc
int3
shll
loopne,pn
test
xor
pop
xor
data16
aaa
ss
shll
xchg
sti
inc
xchg
inc
les
in
jl
cmp
shrl
jmp
shrl
cltd
jecxz
pusha
out
xchg
xchg
inc
aaa
push
xchg
int3
daa
scas
inc
repz
mov
stos
jo
mov
mov
mov
jbe
inc
and
sbb
add
ds
fsubr
lea
fdivl
push
dec
cmp
cmpsl
icebp
iret
dec
jmp
lcall
mov
mov
dec
in
test
dec
mov
mov
mov
lret
pop
or
cmp
push
fwait
xor
inc
and
pop
mov
push
ret
shrb
mov
in
fnstcw
dec
aam
mov
ret
out
push
rolb
es
cmovno
mov
testb
or
aas
imul
inc
jge
push
add
popa
addl
and
leave
js
pushf
jge
rorb
jnp
dec
cmp
lock
mov
scas
xor
fcmove
nop
add
outsb
data16
popa
int
push
or
sbb
mov
dec
js
cmc
mov
jo
dec
mov
pop
push
roll
jns
pusha
imul
push
jae
mov
adc
push
xchg
punpcklwd
sbb
sti
and
cmp
ficoml
iret
rolb
push
cmpsl
mov
gs
mov
fldt
pop
ss
inc
jbe
inc
xchg
imul
popw
pushf
add
in
ss
cmp
ret
stos
in
xchg
and
jp
xchg
faddp
push
mov
pop
cmp
dec
cmp
xor
jmp
test
cli
int3
or
stos
pop
or
pop
lock
push
jmp
lea
push
fildll
call
out
std
shl
or
decl
lea
xor
xchg
inc
mov
jae
ret
in
imul
push
ljmp
mov
rcrl
xchg
sbb
enter
xor
ret
or
call
gs
add
xor
daa
mov
pop
jge
sahf
mov
xchg
test
xor
lahf
pop
jl
mov
xorl
ja
and
mov
and
leave
adc
add
adc
iret
push
repnz
inc
pop
cmp
xchg
sub
icebp
jns
nop
xchg
and
out
out
ret
add
pusha
pop
push
mov
notb
lret
mull
jg
mov
in
mov
dec
fs
insb
adc
test
or
or
mov
sahf
mov
xchg
pop
push
stos
mov
test
mov
fdivr
outsl
jmp
popa
andl
pop
lds
add
lods
jl
push
dec
jle
and
hlt
ss
adc
sbb
sub
loopne
repnz
adc
xchg
or
aad
pop
jb
sub
cmp
loop
in
mov
mov
and
xor
pop
mov
test
fisttpl
mov
ror
sar
push
mov
nop
sub
push
mov
pop
testl
int3
xor
cmp
inc
pop
xorl
push
mov
icebp
stc
shll
into
popa
popa
inc
repnz
and
popf
add
mov
test
jp
lret
test
fwait
stos
lods
gs
push
jp
ja
mov
insb
test
inc
loope
mov
sbb
out
dec
lds
les
sbb
fdivr
push
inc
scas
js
ja
shlb
add
inc
subl
push
arpl
nop
xchg
or
movsl
bound
xor
cld
and
jbe
pop
bound
stos
sar
lcall
sti
aad
addb
jp
or
fadds
sbb
mov
jle
inc
xchg
inc
frstor
inc
mov
dec
out
lret
or
jb
out
sbb
mov
jg
into
mov
std
inc
les
inc
inc
cmp
mov
push
adc
fdivl
ja
std
mov
cltd
hlt
sub
add
lahf
xchg
jmp
mov
sub
or
stos
es
sub
push
dec
popa
scas
pop
ret
xchg
clc
sbb
mov
mov
push
out
xor
jno
sbb
xor
push
iret
fstl
movsl
or
dec
rcrb
loop
imul
mov
bnd
adc
test
nop
ret
and
lods
lret
ficompl
add
jb
mov
inc
mov
sbb
push
cs
sub
dec
mov
cwtl
or
or
mov
into
pop
sub
xchg
push
jo
cmp
stos
adc
xchg
mov
sub
add
in
leave
push
xor
and
hlt
jmp
subl
xor
cli
mov
aad
dec
and
mov
test
les
cmp
pop
adc
inc
cwtl
in
aas
adc
std
xor
sbb
ret
insl
sbb
imul
ljmp
mov
mov
or
cs
hlt
add
outsb
add
push
cld
sbb
icebp
mov
push
inc
xchg
pushf
jnp
adc
int
out
lods
bound
sbb
jp
das
out
adc
into
shlb
xchg
pop
aam
or
pop
xchg
shlb
cltd
repnz
cld
iret
jl
mov
leave
sahf
out
xchg
insl
bound
ror
pop
sbb
xchg
push
in
mov
push
sbb
orb
sahf
mov
repnz
dec
inc
xchg
lds
bound
nop
sti
mov
jno
jl
cmp
xor
sub
fcoms
clc
xor
pop
inc
es
inc
iret
inc
jno
dec
or
or
sub
xor
xchg
dec
popf
push
dec
add
mov
faddl
and
scas
into
and
orl
mov
push
and
mov
fidivrs
lock
pop
sti
mov
test
or
jecxz
in
fsub
fildl
xchg
pop
adc
fiadds
mov
xor
outsb
test
lock
mov
pop
into
cmp
repz
pop
fdivp
push
and
xor
out
push
cmpsb
lods
add
in
ror
aad
jns
xor
scas
loopne
push
popf
sbb
nop
sbb
or
clc
xchg
sbb
in
cmp
jmp
fimuls
cmp
out
add
mov
dec
fldt
es
int
cmp
dec
add
mov
test
inc
rolb
jge
sbb
push
xor
nop
pusha
or
mov
pop
sub
add
cmpsb
xchg
mov
lahf
cli
je
pop
push
hlt
loope
push
sub
jnp
push
aad
out
pop
and
xor
insl
gs
sub
lea
jg
mov
in
and
pop
xor
lcall
out
or
mov
cs
les
jno
or
pop
mov
adc
fwait
icebp
jo
or
jecxz
mov
dec
add
inc
xor
pop
ss
xor
aaa
sub
shrl
sub
jne
shl
mov
adc
xor
std
xor
test
bound
orb
jne
or
inc
xlat
jo
push
pop
call
mov
cmp
mov
xchg
fnstsw
ss
or
xlat
aam
xchg
mov
mov
push
hlt
pushf
out
mov
dec
aam
clc
adc
mov
and
sub
sbb
int3
addr16
aam
xchg
jo
inc
inc
mov
or
js
mov
adc
pop
add
push
push
mov
jbe
nop
xor
fndisi(8087
mov
mov
imul
xor
lea
nop
mov
mov
scas
fs
or
push
mov
mov
mov
fstps
xor
jle
jae
xchg
sbb
iret
je
pop
push
lret
push
dec
xchg
xor
inc
push
pop
iret
lret
dec
sub
mov
mov
push
push
popf
push
stc
fnstcw
or
loop
cwtl
imulb
xor
les
push
jno
js
xor
gs
inc
loop,pn
enter
fwait
pop
pop
fnstenv
cli
mov
daa
mov
jne
aam
sbb
out
push
in
std
push
mov
mov
shrb
das
mov
repz
adc
ds
xchg
mov
jle
cmp
cmp
loopne
jno
dec
jge
mul
fsub
aaa
fldl2e
mov
mov
adc
jnp
sub
rolb
xchg
cltd
jmp
mov
ffree
inc
lods
jp
xchg
imul
dec
xchg
xchg
inc
sbb
lds
jae
in
or
imulb
mov
pop
pushl
mov
xor
rorb
sbb
push
dec
xchg
mov
out
mov
and
add
out
mov
aaa
insb
cmpsl
xchg
pop
add
inc
pop
push
cmp
shlb
push
pushf
pushf
pusha
jbe
lret
movsl
cmp
rorl
add
or
push
mov
sub
cmc
clc
loop
adc
clc
scas
gs
cld
aam
sub
into
xor
and
mov
ljmp
outsl
and
or
mov
mov
mov
pop
xchg
pop
sbb
shrb
inc
pop
push
idiv
xor
push
aas
mov
xor
ret
cmp
xchg
mov
ret
cltd
dec
cld
lods
cld
fildll
daa
mov
cmp
and
xchg
push
jg
and
daa
fwait
dec
adc
cmp
mov
add
enter
out
xchg
or
mov
push
rorl
mov
push
ret
sbb
js
pop
sahf
push
fdivrl
dec
jae
xor
loopne
into
dec
cmp
sub
add
lock
push
xchg
xchg
xchg
jnp
cwtl
out
pop
mov
lods
adc
pop
mov
nop
mov
gs
and
dec
in
xor
sarl
outsl
sub
inc
ficompl
xlat
mov
push
inc
insb
mov
ret
push
xor
dec
sbbb
cmp
mov
jnp
xchg
aaa
inc
and
push
pop
push
xchg
jns
jg
xchg
cmp
dec
mov
adc
sub
rcrb
stc
cld
aaa
pop
jg
addr16
lods
ljmp
jae
xchg
cmpsb
lcall
aam
jae
lds
les
xor
dec
or
jo
sbb
mov
xor
xlat
cmp
mov
ret
adc
pushf
add
sub
scas
sub
mov
enter
dec
mov
negb
xchg
clc
jmp
mov
in
add
xchg
fnstsw
ss
ret
ficoms
in
xchg
add
dec
mov
adc
out
and
pop
or
insl
jne
mov
mov
and
pop
lcall
mov
mov
repnz
scas
mov
leave
fbstp
mov
lahf
jecxz
mov
icebp
loop
jmp
addb
lcall
stos
xor
je
cmc
fdivs
cwtl
jg
out
pop
and
xor
scas
rcrb
sub
lods
mov
lcall
scas
push
inc
dec
xor
mov
mov
ljmp
lods
ljmp
fsubr
pop
hlt
idivb
add
cmpsl
xchg
or
jnp
push
mov
out
test
cli
cwtl
adc
xchg
mov
mov
iret
stc
and
add
jp
sub
dec
into
pop
push
inc
dec
or
in
add
and
js
shrl
mov
mov
xor
ret
adc
fbld
dec
jae
jl
dec
shlb
push
xchg
ljmp
mov
or
dec
fistpll
jp
sub
push
add
mov
out
pop
dec
test
outsb
js
in
mov
dec
je
push
pop
fnsave
push
mov
mov
adc
adc
sti
sbb
stos
push
xchg
lods
inc
pusha
je
imul
rcrl
aas
adc
jns
sub
push
adc
mov
or
pop
xor
popf
rsqrtps
or
add
adc
repz
lahf
adc
scas
adc
xchg
pop
fldt
andb
cmp
mov
jge
and
adc
int
les
sub
es
out
pop
pop
xchg
mov
and
sbb
jl
cmc
xchg
mov
add
mov
push
testl
and
aam
sbb
lods
and
cli
insb
jecxz
xor
inc
fdivs
xor
mov
dec
lcall
lea
incl
mov
cmc
sub
ret
out
inc
cwtl
cmp
push
inc
and
loop
push
push
push
orl
sbb
testl
sub
ja
inc
or
sub
pop
in
and
or
fldl2t
cltd
inc
sar
pop
pop
pop
mov
or
cmp
loopne
data16
adc
mov
not
cmpsl
cmp
inc
sar
add
dec
and
enter
pop
pop
pushl
dec
or
insl
pop
int3
lret
mov
ds
mov
imul
or
jmp
lret
scas
push
xchg
sub
xchg
pop
sbb
and
jmp
popf
cmp
ret
aas
or
cwtl
xchg
int
fwait
or
bnd
pusha
cmp
jmp
sbb
push
mov
jno
mov
adc
loopne
stos
push
and
int3
push
jne
xor
ds
xchg
cltd
cmpl
lahf
imul
sbb
insb
pop
jl
dec
daa
pop
aaa
lods
mov
imul
xchg
xchg
int3
cmpsl
fdivl
or
sbb
insb
pop
jl
dec
daa
pop
aaa
lods
mov
imul
xchg
xchg
int3
cmpsl
fdivl
or
sbb
insb
pop
jl
dec
daa
pop
aaa
lods
mov
imul
xchg
xchg
int3
cmpsl
fnsave
or
pop
jl
dec
daa
pop
imull
pushf
sbbb
and
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jge
aaa
addl
sbb
mov
loop
mov
test
mov
out
mov
jno
popa
xor
pop
mov
inc
icebp
push
xchg
lods
adc
and
testb
xlat
popa
add
sbbl
in
outsb
std
pop
pop
inc
stc
cmpsl
into
mov
push
enter
mov
mov
out
dec
les
outsl
out
dec
je
scas
cmp
mov
xchg
lods
or
iret
xor
aas
daa
sbb
sbb
mov
sahf
mov
js
lcall
jo
in
stos
nop
aaa
test
aad
sub
dec
push
pushf
dec
test
mov
mov
insl
mov
jno
push
daa
xchg
out
pushf
sbb
bound
xchg
out
fists
add
frstor
movsb
mov
movl
test
inc
loope
inc
dec
adc
add
inc
dec
pusha
das
sahf
push
aaa
cmp
mov
cld
inc
cmpsl
mov
sbb
js
xchg
cmp
push
out
daa
jno
in
xchg
aaa
jno
xor
insl
roll
popa
mov
and
mov
push
ret
push
andl
sbb
rcll
inc
cmc
inc
stc
dec
mov
xchg
xor
daa
aam
shlb
test
mov
adc
ret
inc
addb
or
dec
movl
roll
loope
adc
and
push
testl
xchg
aaa
addl
shll
inc
icebp
push
loope
adc
and
push
testl
xchg
hlt
push
pop
adc
dec
dec
pop
loop
scas
rsm
mov
les
push
mov
push
lret
fcomps
sub
int
popa
clc
in
xor
push
and
mov
or
cwtl
fdivrl
enter
lock
pop
sub
lods
test
das
add
xchg
out
mov
cld
xor
adcl
jno
outsl
xchg
cmpsl
jnp,pt
insl
xor
pop
ljmp
mov
pop
je
cltd
mov
scas
enter
sbb
and
pop
stos
push
cmpsb
out
ss
push
aam
divl
mov
jl
sbb
jg
jmp
ss
lahf
push
fmull
cli
popf
aas
dec
fadds
or
jnp
iret
add
and
mov
and
cmp
ja
pop
les
ret
add
in
loop
push
sub
sbb
mov
and
push
xor
pop
rolb
mov
mov
scas
stc
add
and
out
jnp
shll
and
jle
les
push
cs
push
xor
xor
jbe
lcall
ljmp
add
aas
mov
adc
sub
inc
push
mov
aaa
push
adc
es
in
push
aad
sbb
and
push
scas
push
xor
mov
sub
adc
jmp
pusha
xchg
ds
mov
aas
dec
ljmp
jp
fimull
je
int
xchg
push
test
pop
je
enter
out
xchg
rep
mov
out
xor
push
outsb
jp
inc
jne
into
sub
sbb
daa
cmp
or
sub
cmp
int3
and
or
shll
divl
addr16
xchg
pop
shr
insb
fistpl
std
jp
lret
hlt
cs
sbb
push
mov
inc
cltd
adc
stc
xlat
hlt
sub
push
cmp
lock
dec
xchg
call
mov
jg
out
ret
dec
in
jecxz
mov
fstpl
arpl
jge
dec
and
test
push
cmp
fs
push
push
inc
mov
sub
or
aaa
fstp
les
fwait
mov
jae
call
jge
nop
cld
sub
mov
addr16
loop
mov
test
and
or
imul
mov
xchg
mov
pop
dec
dec
imul
mov
out
adc
dec
push
pop
mov
seta
leave
push
mov
and
cwtl
sahf
frstor
das
cmpl
mov
xchg
push
inc
push
insb
lahf
or
lea
mov
cmp
sbb
test
out
outsl
dec
repnz
imulb
sub
adc
pop
cwtl
xorl
mov
test
notb
insl
add
mov
lahf
push
aaa
xchg
mov
and
jmp
xlat
sbb
dec
cli
popa
gs
sub
pop
jne
testb
stc
add
push
fnstsw
inc
push
subb
frstor
pop
push
push
dec
test
ds
stos
or
nop
push
jmp
cmpsl
imul
fmull
cmp
cltd
iret
fsubrs
outsl
pop
in
lcall
sub
sti
jl
scas
dec
stos
mov
fwait
mov
test
sbb
adcl
outsb
or
pop
sub
or
or
pop
push
fisubrs
out
insb
rcrb
ret
xor
sbb
add
fsubrp
std
punpckhwd
lock
int3
add
mov
add
addr16
mov
pop
pop
and
out
fiadds
nop
pushf
xchg
pop
xor
adc
pop
cmp
test
ret
mov
push
mov
add
pop
fadds
dec
jge
or
in
arpl
and
pop
ja
xchg
push
xchg
pop
cmp
mov
mov
sbb
int3
sbb
dec
dec
insb
jp
sbb
push
arpl
pop
adc
mov
xor
mov
mov
and
je
scas
add
fistps
inc
loope
or
insb
push
cmpsb
in
xcrypt-cfb
cmpsl
in
sbb
cmp
mov
andl
repnz
dec
dec
or
jmp
scas
lock
push
or
mov
fs
inc
cmp
sub
fsts
in
xchg
push
gs
in
test
mov
js
xchg
pop
xchg
int3
hlt
imul
cmp
aas
dec
mov
call
jne
and
pop
lret
ror
push
push
and
inc
ret
test
pop
enter
sti
sbb
xchg
aaa
ljmp
lds
int3
clc
inc
jl
sub
pop
js
cmpb
arpl
loopne
loope
jg
mov
jne
dec
jbe
and
push
sub
ficomps
ss
pop
xchg
arpl
mov
xor
loope
cmpsb
fsubrp
jge
out
fwait
sub
sub
stos
or
div
ss
pop
and
mov
loop
gs
lock
jae
fwait
cmp
iret
push
mulb
repnz
imul
jno
and
xor
mov
testl
mov
pop
out
in
sbb
pop
into
xchg
adc
inc
aad
jbe
in
insb
addr16
lods
scas
lds
in
xor
lret
lea
sub
and
dec
bound
xchg
jne
in
mov
cld
insb
adc
data16
add
lea
or
ror
lds
jg
test
arpl
repz
fldt
cmp
je
lret
int
mov
fdivs
mov
pop
xor
cmp
sbb
inc
push
cmp
xchg
jle
xchg
inc
adc
sub
mov
inc
xchg
push
lret
fldt
dec
mov
addr16
mov
lahf
addr16
ret
jnp
inc
mov
bound
jp
inc
shrb
add
add
scas
add
rdmsr
or
out
in
addr16
push
lret
mov
jg
out
add
gs
sub
add
adcb
jne
test
int
mov
in
xor
mov
push
dec
xor
push
shll
stos
sbb
dec
pop
lret
pop
pop
imul
dec
ret
sbb
cli
insb
inc
push
mov
sti
jp
inc
loope
jae
int
mov
push
cmpsb
and
dec
out
jae
inc
mov
in
imul
mov
cli
repnz
pushf
loop
lahf
and
and
pusha
mov
push
sbb
mov
roll
mov
ss
ficoml
sarl
add
jle
scas
cmp
or
sbb
ja
adc
std
mov
inc
xchg
cmpsl
mov
add
adc
push
test
sbbl
sub
push
pop
in
xor
xchg
fs
hlt
xchg
scas
cmpb
pop
xor
lds
mov
aad
test
xchg
xor
xchg
cmp
mov
or
idivb
pop
cwtl
notb
shr
int3
jnp
xor
nop
mov
cmpsl
imul
xchg
cwtl
or
aaa
inc
adc
cmp
dec
rcrb
popf
std
nop
inc
loopne
mov
in
lret
mull
sub
fmulp
out
in
loopne
inc
cwtl
xor
popa
and
push
add
ret
outsl
data16
iret
les
inc
pop
shlb
dec
mov
xor
stc
inc
or
lods
arpl
aam
imulb
inc
les
pop
mov
jge
jo
mov
and
lcall
or
gs
lret
push
cmp
mov
enter
pop
pop
aaa
fs
mov
cmp
popf
push
inc
mov
jns
stc
lock
xor
imul
mov
inc
mov
sbb
dec
inc
xchg
hlt
ret
fwait
inc
cs
mov
std
sub
push
cmp
sbb
push
pushf
gs
out
xor
xchg
jl
fisubs
ficomps
xchg
sub
inc
imul
sbb
cltd
andl
sub
push
gs
sub
adc
enter
or
mov
lcall
mov
add
jg
mov
cltd
fs
jnp
lret
aad
push
mov
pop
mov
inc
fidivs
arpl
inc
lahf
adc
push
subl
xor
imul
jmp
cs
out
in
jno
jno
out
repz
les
pop
jnp
decb
sbb
jecxz
out
hlt
packssdw
mov
xchg
dec
jl
or
addr16
mov
sub
fistps
inc
xor
imul
fistpll
mov
push
dec
mov
sub
or
mov
stos
aam
cmp
pop
push
cs
xchg
mov
sub
scas
sbb
int
cmpsl
push
ror
incl
enter
dec
or
sub
inc
or
shll
sahf
std
dec
ja
sbb
pop
js
inc
dec
test
test
les
pop
sub
scas
lods
jbe
out
js
fwait
inc
dec
dec
inc
jo
pop
sbb
outsb
cmp
cmp
loop
mov
inc
inc
in
add
sbb
into
or
mov
popa
or
push
shrl
push
dec
jno
push
insl
mov
jge
loope
inc
jle
rol
jns
dec
jl
xchg
iret
xor
push
mov
fcompl
mov
push
es
xlat
jecxz
xor
push
xor
aas
add
inc
leave
stos
ss
mov
jno
outsl
adc
push
jb
addl
inc
xor
scas
add
adc
sti
mov
aas
lahf
mov
jmp
push
mov
mov
sub
mov
out
mov
mov
mov
std
cmp
xchg
das
mov
cwtl
js
cmp
std
pop
add
sbb
ficoml
pushf
add
sub
adc
ret
sub
out
inc
inc
pop
push
fcom
jbe
push
xchg
sub
xorl
inc
pop
cwtl
push
lods
lcall
popa
inc
mov
fisubs
loopne
gs
dec
pop
push
and
ret
rcr
shrl
clc
lock
cmp
into
or
jae
mov
scas
leave
addb
out
ret
mov
cmpsb
jecxz
mov
sbb
jge
jle
movsb
test
sarl
lods
leave
dec
dec
addr16
jg
pushf
xchg
mov
ret
fwait
addb
pop
int
xchg
int
out
out
mov
jae
clc
shrl
mov
mov
leave
stos
fwait
jg
pop
and
sbb
rcr
cmc
push
xchg
enter
mov
fimuls
or
mov
add
insb
sub
outsb
add
push
jae
dec
cmp
rolb
stc
loope
mov
je
cmp
test
mov
pop
cld
mov
in
test
mov
daa
and
mov
fildll
or
ret
xchg
mov
gs
mov
sub
and
inc
xchg
out
sbb
aam
loopne
mov
and
mov
xor
mov
jg
inc
push
fstpl
jecxz
pop
enter
loop
xchg
cmpsb
fsubs
jmp
in
lods
test
cmp
sbb
mov
mov
inc
fbld
sbb
mov
andb
jnp
push
gs
dec
ret
pop
test
xchg
jnp
mov
lret
pop
ljmp
sbb
scas
xchg
in
iret
jl
lret
out
andb
xor
scas
test
dec
popf
test
cltd
lods
mov
test
arpl
faddl
jl
loope
push
mov
cmpsl
jecxz
inc
mov
insl
dec
mov
and
adc
jne
movsl
mov
push
and
cmp
lret
dec
aam
push
adc
fisttpll
dec
xchg
push
or
ds
pop
and
nop
iret
mov
inc
ret
lods
jmp
pusha
loope
cmc
mov
jp
or
mov
ds
lret
scas
scas
lahf
cmp
mov
push
enter
scas
bound
aaa
sub
xchg
add
lods
mov
les
cmp
xchg
outsb
das
xchg
iret
mov
xchg
es
xor
mov
or
cltd
cmp
lods
ret
mov
repz
jns
pop
push
fsts
lret
fs
inc
faddl
dec
stos
and
lret
sub
int3
movsb
in
inc
add
clc
pop
enter
into
js
sub
icebp
xlat
add
jl
out
scas
and
xchg
shrb
mov
js
inc
rcrb
incl
adc
mov
cs
neg
scas
mov
sbb
dec
pop
jmp
ljmp
jno
sbb
inc
inc
cltd
pushf
fstpl
lret
adc
mov
xor
shl
fcoml
shll
mov
push
ja
xchg
hlt
jmp
xor
sbb
ljmp
adc
test
aad
mov
ja
push
in
pop
leave
repnz
into
pushf
ljmp
and
push
mov
loopne
arpl
repnz
sub
push
loopne
rorl
mov
xor
rorl
imul
daa
sbb
add
arpl
pop
xor
pop
jns
mov
push
pop
imul
xorl
les
movsb
cmp
adc
outsb
outsb
adc
insl
and
sahf
xchg
mov
sbb
jne
and
lds
or
arpl
idivl
or
dec
xchg
fwait
insl
test
icebp
addr16
sub
clc
sub
and
in
mov
lods
dec
jge
shl
aad
insl
dec
test
mov
lods
jp
jl
shl
sbb
xchg
repz
outsl
sub
push
clc
pop
fnstenv
mov
xlat
adc
arpl
stos
cs
test
dec
lods
outsl
push
pop
mov
imul
and
add
vandnps
fwait
jbe
insb
lahf
add
fwait
lret
subb
dec
aad
or
xchg
add
jb
push
fdivp
movsl
insl
cwtl
push
loope
xor
mov
push
nop
fstl
scas
inc
sub
add
xor
and
int
mov
sarb
sahf
sbb
inc
xlat
mov
xor
aaa
cmpb
sbb
and
inc
push
jne
cmpsb
jb
jb
and
mov
rolb
push
icebp
jl
mov
mov
inc
in
add
iret
push
dec
xorl
std
fists
mov
leave
lret
inc
lods
fiadds
and
gs
movsb
mov
jg
imul
xchg
cmp
por
out
loope
dec
mov
mov
push
sbb
mov
mov
out
mov
jl
mov
mov
push
inc
or
jnp
imul
test
mov
test
les
xorb
test
xchg
repnz
mov
pop
scas
fimuls
lret
lret
xchg
xor
or
adc
sub
enter
xchg
pop
xchg
or
mov
gs
iret
sbb
xchg
cwtl
mov
sbb
imul
pop
xchg
shll
jnp
mov
icebp
mov
push
adc
sub
jmp
xor
push
ret
enter
mov
and
enter
outsb
outsl
idivb
stos
test
sbb
stc
lock
ja
popf
lahf
pushf
push
xchg
push
roll
mov
or
roll
sbb
mov
ficoms
push
popa
mov
mov
fmuls
cmpsl
cmp
sbb
decl
xor
or
aam
or
leave
xchg
jp
jle
mov
pop
insl
scas
lods
fsubs
mov
xorl
adc
std
fists
mov
mov
std
jecxz
sub
cmp
xchg
fsub
inc
jp
scas
cmp
pop
pusha
shrl
push
sbb
std
jne
jae
outsl
sbb
fisubrs
lock
jg
icebp
or
out
popf
orb
lods
mov
mov
stos
mov
jb
lds
mov
cmpsb
gs
jl
rol
in
orb
sub
adc
out
imull
adc
cs
add
out
leave
sbb
jno
call
xor
jae,pn
stos
push
out
jecxz
cltd
test
sbb
cmpsl
inc
shrl
arpl
ret
or
and
pop
and
imul
cmp
pushf
adc
jne
and
dec
or
outsb
dec
adc
pop
cmpsl
imul
sub
cmpsb
and
iret
outsb
fs
or
inc
jg
dec
ret
and
aas
pop
mov
push
mov
shl
jp
fisubrs
shrb
lds
mov
mov
push
in
and
xor
mov
push
sbb
leave
add
out
mov
jmp
push
dec
jge
sbb
les
inc
movsl
adcl
fdivs
test
pop
jnp
mov
ja
jp
int
outsb
mov
xorb
mov
cmp
call
mov
mov
sbb
lahf
ss
stos
mov
xchg
mov
bound
mov
jmp
sbb
inc
pop
ljmp
cltd
arpl
fwait
and
inc
lds
mov
jne
sbb
in
sbb
xor
mov
xchg
and
fldt
fisubl
fbstp
mov
xlat
test
cmp
mov
cmc
jbe
pop
sbb
fists
test
out
push
cli
adc
push
push
outsb
pop
push
jb
push
pusha
rorb
std
xor
dec
lcall
leave
mov
jo
out
stos
or
fs
dec
pop
std
inc
mov
dec
mov
inc
xor
je
jns
push
loopne
hlt
outsl
lret
scas
pushf
lcall
or
adc
incb
icebp
add
mov
push
mov
ljmp
mov
add
insb
push
jne
fwait
mov
lods
sar
data16
in
push
jecxz
xchg
add
mov
or
dec
cmp
or
cmp
sub
sbb
pop
mov
lods
jne
loope
pop
xchg
cmc
push
push
in
inc
daa
sub
leave
jnp
pushf
js
mov
mov
andb
icebp
bound
imul
xor
incb
repz
push
leave
loop
sbb
lods
adc
sbb
sub
bound
test
mov
in
sbb
pop
xor
inc
cmp
loopne
push
add
xor
movsl
and
in
pop
shl
add
aas
push
push
sbb
cmpsb
xchg
add
in
adc
ret
dec
xchg
std
imul
leave
stos
out
jb
pop
pop
jle
mov
sub
dec
push
push
push
stos
mov
sbb
xor
stc
and
add
popa
jae
sarl
mov
cltd
xlat
pop
and
jno
test
bound
popa
sarl
dec
shlb
push
dec
imul
sahf
aam
push
mov
lods
in
dec
push
sahf
mov
push
cmc
ret
sbb
sub
ljmp
xchg
push
pop
pop
xor
andb
cmpsb
push
lret
push
push
call
lea
hlt
and
pop
push
imul
out
cli
ret
jmp
cli
fistpll
pop
rorb
loop
mov
int
dec
insl
or
sub
xchg
xor
mov
ja
jle
adc
cmp
sub
mov
xchg
pop
mov
shl
inc
js
mov
and
pop
xor
call
xor
shl
pop
aam
popa
stos
push
int3
testl
xchg
movsb
mov
pop
bound
xchg
push
ret
mov
es
push
das
gs
test
cld
jg
xchg
andl
les
loopne
jno
or
push
push
test
fiaddl
or
push
lahf
daa
jecxz
mov
and
test
jle
xor
hlt
data16
movsb
xor
sbb
in
pop
jns
dec
mov
roll
mov
pop
mov
out
pusha
inc
lcall
lahf
mov
sbb
pop
incb
into
jg
fimuls
ror
and
popf
dec
scas
xchg
out
mov
test
movsl
stos
inc
cmp
pushf
notl
je
xchg
cmp
pop
sbb
pusha
jne
dec
js
mov
push
in
sub
lahf
lahf
push
mov
or
cmpsl
xor
push
pop
xorl
push
inc
cmp
pop
aas
subl
or
add
inc
mov
jecxz
addb
pusha
je
shlb
outsb
mov
lds
shll
pop
imul
push
mov
dec
jl
adc
in
mov
out
xor
mov
push
aam
mov
test
stos
cld
mov
jo
pop
fadds
or
stc
or
fs
or
lahf
mov
inc
jmp
add
pop
mov
inc
icebp
push
loope
adc
and
push
testl
xchg
aaa
addl
shll
inc
icebp
push
loope
adc
and
push
testl
xchg
aaa
leave
pop
leave
pop
mov
inc
icebp
push
loope
leave
mov
xorl
and
push
repz
push
out
adc
pop
mov
jno
loope
out
dec
stos
sub
fnstcw
cmp
aad
in
cmc
loop
sub
out
rcr
mov
inc
gs
add
xor
ret
cmc
loop
xchg
xchg
xchg
movsl
mov
inc
pop
push
inc
gs
bound
xor
frstpm(287
ljmp
movsl
stos
mov
inc
push
jbe
adc
pop
data16
inc
pop
dec
mov
mov
in
pushf
test
push
ds
lea
jb
mov
sahf
mov
int
pop
sub
sub
sti
or
pop
dec
pop
pop
stc
lods
fdivrs
jb
pop
jae
fidivrl
dec
mov
mov
outsl
sub
inc
jne
lock
add
sahf
mov
lds
mov
xchg
push
cld
mov
mov
fdivrs
cs
xor
or
mov
pop
mov
pop
mov
push
adc
cmpsl
stc
sub
or
sbb
daa
add
adc
xchg
lea
popf
loope
inc
loop
xor
and
vpsrld
jmp
loop
xchg
xchg
andb
push
pop
imul
or
and
xchg
mov
loopne
cli
jecxz
fidivs
xor
jbe
pop
xorl
inc
pop
inc
dec
mov
mov
loopne
fmulp
loopne
lock
aaa
xor
sbb
jne
repnz
dec
push
pop
push
mov
xchg
nop
cmpsl
shlb
mov
gs
bound
xor
ret
cmc
loop
xchg
xchg
andb
push
inc
gs
bound
xor
sarl
mov
push
sbb
cmc
jl
mov
pop
push
xor
sbb
imul
mov
pop
rorl
mov
sbb
dec
mov
xlat
add
scas
push
xor
jno
das
cwtl
pop
xchg
enter
jae
push
dec
test
push
lea
ror
or
pop
call
mov
cwtl
jno
sahf
inc
aas
xchg
push
iret
jne
out
test
add
pop
cmp
mov
enter
out
xorl
inc
or
cmp
push
push
add
shr
sbb
mov
sbb
add
push
xor
xchg
cmp
xchg
cmc
negl
out
sbb
pop
shrl
sub
adc
and
out
sub
cmp
jecxz
add
mov
dec
ljmp
add
scas
pop
std
outsb
scas
or
sti
jb
mov
stos
mov
jg
xor
test
push
sbb
gs
scas
data16
sbb
dec
pop
push
or
icebp
lds
out
popf
sbb
and
pop
pop
adc
shlb
mov
iret
sbb
sub
xor
mov
push
out
jno
enter
test
loope
stos
inc
sarl
or
out
cmpsb
mov
jne
imul
stos
push
jle
xchg
shl
adc
ljmp
loop
or
cmp
dec
sahf
push
add
fnstenv
push
adc
sbb
push
sub
jp
pop
dec
sbb
pop
dec
pushw
fnstsw
icebp
insb
pop
lods
ja
adcb
cmc
iret
cli
jg
out
clc
mov
aad
cmp
xchg
mov
pop
pop
and
cs
sbb
ja
fstl
mov
pop
mov
cld
push
mov
ljmp
sbb
sub
push
or
es
je
arpl
dec
pop
inc
xchg
daa
ja
lock
dec
imul
pop
push
cld
pslld
adc
loope
mov
jae
push
mov
iret
ret
push
sbb
mov
fidivrs
sahf
push
add
or
cltd
addr16
mov
sub
xor
xor
ret
dec
rorb
test
outsl
push
clc
dec
jb
pushf
sub
mov
xor
lea
jmp
fiaddl
repz
fsubrl
inc
jbe
fcomp
insl
fldcw
int
mov
jmp
jb
repnz
xchg
addl
inc
cmp
roll
jo
sub
icebp
orb
pop
mov
cmpsl
mov
push
mov
repnz
push
outsl
mov
cwtl
jl
jne
movsl
mov
int
addl
jbe
dec
bound
jmp
vpunpckldq
cli
xor
les
push
push
and
sbb
in
std
ja
adcb
mov
inc
and
cli
dec
sar
adcl
mov
out
cwtl
mov
jecxz
inc
xchg
popa
and
adc
call
fadds
movsl
fiadds
pop
pop
mov
mov
dec
dec
sbb
mov
sti
cmpsb
pop
push
icebp
stc
pop
mov
xor
imul
xchg
pop
add
inc
hlt
mov
scas
push
les
push
enter
divb
notb
mov
les
adc
sub
jge
mov
pushf
test
push
imul
adc
pop
loopne
les
push
repz
mov
jmp
dec
add
and
and
cmp
ljmp
pop
stos
in
out
jo
and
adc
arpl
adc
lret
dec
cld
cmp
arpl
clc
test
into
sbb
movsl
xchg
addr16
mov
push
gs
stos
loope
scas
ret
cmpsl
add
xchg
repz
jbe
repnz
push
sbb
mov
loopne
xor
fwait
loopne
andb
ljmp
bound
lods
cmp
or
lea
lret
rorb
pmulhuw
test
ljmp
test
lea
mov
push
sti
jae
push
js
js
push
fwait
loop
mov
add
adc
sarl
imul
sub
mov
ljmp
out
mov
xchg
insl
cmpsb
jns
jb
xchg
jecxz
test
lahf
bound
inc
cld
aaa
mov
stc
sub
cmpsl
pop
shrl
pushf
popf
arpl
inc
popf
mov
mov
sub
xchg
cmp
fs
sub
sbb
imul
jbe
sub
sub
mov
cld
lcall
jle
push
adc
mov
sbb
sbb
add
cwtl
fwait
dec
mov
ljmp
cmp
mul
inc
aam
outsl
ret
stos
mov
gs
mov
rorl
psllq
jns
dec
arpl
and
adc
int
mov
pop
paddsb
inc
lea
je
aam
cmp
aas
xor
pop
pop
clc
out
or
mov
pop
imul
jg
call
mov
xchg
cltd
cmp
push
mov
mov
push
je
imul
fimuls
jg
push
push
out
adc
add
add
and
mov
loope
fwait
test
into
fwait
pop
and
xchg
and
cmp
imul
xor
sub
inc
ljmp
or
cmpsb
jb
in
into
inc
out
sub
mov
idivl
das
popa
sbb
enter
jge
insb
inc
jecxz
add
and
mov
ret
add
lods
lock
cmp
in
jecxz
stc
cmp
aas
push
mov
fptan
test
mov
out
pushf
inc
mov
cmp
push
sub
add
rcr
xor
or
aaa
inc
push
mov
lahf
push
add
and
fimull
or
fdivs
jg
adc
mov
mov
lock
xor
adc
int3
pop
add
cmp
pop
sbb
mov
inc
mov
adc
sahf
sub
cmp
sbb
jno
enter
bound
scas
clc
sbb
cld
push
mov
push
adc
adc
je
and
pop
in
xchg
test
aad
or
out
movsl
call
nop
outsl
rclb
sahf
faddl
lret
sub
push
sub
push
adc
xlat
jne
or
rol
loop
pop
stc
mov
push
cmp
test
sbb
pop
xchg
cmp
cwtl
or
lcall
xlat
add
pop
imul
mov
dec
mov
shrb
ret
xor
stos
sub
imul
mov
iret
dec
xlat
push
adc
cmp
add
inc
or
xor
mov
fsubl
and
jg
pop
hlt
lret
push
sub
incl
dec
inc
cmpsb
sbb
mov
orb
sbb
into
mov
jmp
adc
shll
pop
jb
popf
insb
mov
daa
jnp
mov
lahf
sti
icebp
lahf
nop
insb
and
pop
cmp
fadd
cmp
jo
cmp
sbb
jp
ss
ljmp
in
adc
pop
fwait
iret
dec
andb
fisttpll
shll
dec
cmp
lds
aam
jg
jmp
mov
ds
fs
mov
lods
jae
je
aad
mov
rcl
aam
fldl
push
mov
aaa
cld
mov
popl
clc
or
fs
xchg
sbb
xchg
dec
cmpsl
jge
das
leave
jmp
pushf
push
mov
rclb
jno
pop
jb
push
jo
sahf
xchg
mov
push
mov
jge
or
pop
jae
push
loop
mov
jne
in
pslld
pop
outsb
mov
mov
add
andps
add
cltd
jp
loopne
dec
outsb
inc
arpl
aas
aaa
cltd
jg
jle
inc
aaa
data16
loop
xor
inc
cmp
or
adc
fcoms
and
push
stc
adc
aam
mov
inc
imul
pushf
test
mov
notl
pop
cmpsb
jmp
outsl
xor
aam
adc
dec
push
pusha
les
add
inc
scas
jno
xlat
fmull
andl
adc
mov
cmp
cld
clc
imul
jl
lods
jb
jmp
ficoms
dec
push
loop
stc
dec
daa
fadd
aas
outsl
inc
mov
pop
mov
leave
jno
sub
sahf
fwait
ret
pop
lcall
adc
dec
cld
and
call
daa
and
das
repz
push
add
pop
jno
jle
push
xor
push
ret
mov
jnp
repnz
or
add
mov
mov
lahf
gs
xchg
mov
xchg
xchg
mov
push
cmpsl
popa
jns
out
mov
lret
out
aam
out
js
mov
stos
xchg
mov
adc
movsb
push
les
mov
cmp
lea
pop
xchg
pop
mov
xlat
lret
addr16
lret
lds
and
or
shlb
inc
and
pop
out
lcall
movsl
sbb
lods
push
sbb
je
nop
mov
movsl
add
call
mov
aaa
xchg
add
sub
jle
xor
sub
divl
pop
movsb
out
xlat
int
xchg
inc
adc
outsl
repnz
and
cmp
fadd
jae
jl
lods
icebp
jns
push
or
aaa
xor
stc
inc
jo
imul
adc
mov
ljmp
scas
sbb
push
aam
and
sti
add
xchg
adc
ret
out
pop
add
sub
mov
roll
push
xchg
loope
repnz
jl
inc
add
addr16
push
sbb
sbb
mov
mov
xchg
lret
xchg
insl
add
inc
push
test
imul
lret
test
and
inc
sbb
push
shr
fsubr
inc
hlt
movsl
pop
ret
stos
and
bound
mov
xchg
and
dec
das
lods
mov
cmc
and
mov
call
or
daa
repz
jns
mov
or
mov
mov
push
cmp
mov
sub
fs
and
sbb
test
push
xor
jg
push
cmp
pop
sub
pop
hlt
scas
push
imul
sub
out
push
add
je
psubb
out
int3
xchg
inc
sbb
mov
adc
out
sub
cmpb
arpl
in
lock
pop
mov
addr16
arpl
xor
xor
ret
loop
jae
mov
mov
movsl
cmp
sbb
mov
push
fsubr
mov
daa
mov
fs
cli
mov
mov
mov
adc
rcll
xlat
out
xchg
mov
inc
fidivl
int3
sub
popf
pavgw
enter
pop
inc
repnz
cmpsb
icebp
imul
leave
pop
shlb
outsb
icebp
inc
sbb
mov
out
je
js
xor
fists
xchg
int
mov
mov
imulb
inc
pop
bound
int3
les
insl
push
stc
mov
pop
push
dec
fidivrl
test
xor
popf
je
scas
xchg
clc
mov
jbe
mov
mov
jne
jle
and
jp
test
inc
loope
in
and
test
ss
xchg
mov
jmp
imul
sbb
out
dec
add
imul
scas
adc
dec
out
gs
pop
xchg
xchg
scas
jp
xlat
cmp
dec
pmulhw
push
dec
lahf
mov
jnp
add
dec
and
mov
adc
mov
jne
loopne
push
test
add
adc
jne
mov
and
mov
enter
mov
sub
cli
arpl
cwtl
pop
mov
iret
cmpsb
lret
ja
les
or
push
dec
mov
popf
dec
mov
inc
cmpl
clc
repz
inc
and
mov
push
dec
arpl
xchg
mov
cmpb
cmpl
mov
testb
dec
xchg
int
mov
popa
pop
ret
push
jp
add
adc
mov
dec
dec
arpl
and
push
rolb
jecxz
mov
movb
stos
imul
arpl
lcall
pop
sqrtps
mov
jbe
and
xlat
rclb
sbb
push
pop
mov
bound
fs
jnp
and
inc
fisubl
popl
adc
sti
pop
jnp
push
pop
jne
adc
add
dec
pushf
sbb
push
ljmp
mov
sub
mov
or
shlb
test
repz
pop
adc
mov
ret
inc
imul
es
inc
add
xchg
cmp
push
dec
xchg
and
in
testl
shl
inc
mov
jmp
inc
sbb
push
xchg
jbe
add
imul
and
jge
xor
out
pop
data16
cmpb
cmc
sub
pop
push
aaa
inc
gs
pop
sub
unpcklps
shll
imul
in
adc
jmp
mov
adc
pop
sub
shlb
xor
xor
imul
adc
and
xchg
fmull
pop
sub
inc
clc
push
ss
push
test
xchg
insb
push
adc
cmova
fld
das
cmc
mov
pop
cmp
bound
ljmp
push
ds
inc
jbe
je
jns
lcall
mov
adc
je
sti
pushf
call
fsubrs
lcall
leave
jl
fisttps
jo
mov
add
pop
mov
jns
nop
or
outsb
in
addr16
mov
pop
or
fdivrs
in
xchg
pushl
push
mov
das
fdiv
adc
call
xor
cmp
rclb
cmp
loopne
or
gs
imul
jp
push
push
jp
dec
lahf
fldl
mov
call
jmp
add
jmp
jne
xchg
enter
xor
hlt
pushf
mov
or
shll
cmc
cmp
jne
mov
xor
cmp
dec
les
rclb
or
mov
inc
sub
or
fwait
sbbl
clc
adc
loopne
arpl
loop
movsl
ror
pop
jecxz
pop
cs
fwait
lods
fisttpl
xchg
mov
rcrb
test
adc
lds
bnd
pop
dec
xchg
mov
rol
sbb
mov
mov
inc
stos
cmp
dec
jl
add
lods
pop
sahf
out
xchg
dec
frndint
stos
popa
sub
jle
mov
into
sub
jno
std
fsubrl
dec
and
pusha
pusha
and
cli
outsb
cmp
push
int3
out
jns
sbb
mov
mov
aam
mov
jmp
pop
fadd
mov
push
xchg
sub
icebp
out
and
dec
jge
push
pop
add
imul
insb
shlb
mov
nop
pop
xor
push
es
sbb
jo
fwait
in
inc
push
sbb
pop
or
or
out
or
xlat
movsl
adc
into
stos
addb
inc
jp
mov
jb
jne
jno
push
cmp
jmp
push
or
push
in
sbb
ljmp
call
dec
jne
bound
testb
andl
pop
js
stos
loop
xor
or
nop
adc
inc
repz
mov
adcl
aas
push
pop
add
mov
inc
negl
mov
xlat
mov
cmp
outsl
in
xchg
cwtl
sbb
popa
call
mov
xor
test
inc
test
mov
or
or
inc
int3
and
jle
mov
ljmp
add
das
dec
dec
cmp
xor
sbb
mov
pop
fstpl
in
std
insl
sbb
cli
xchg
repz
mov
pop
xchg
xchg
xchg
mov
insb
lods
jno
clc
push
push
adc
aad
sbb
push
shr
mov
int
insb
rorb
dec
icebp
inc
lds
andl
jno
pop
pusha
lcall
sbb
in
fcomp
es
jmp
arpl
mov
in
rcrl
mov
in
push
push
imulb
push
out
push
stos
mov
jo
and
sbbl
lea
push
xchg
xorl
mov
mov
les
xchg
mov
jb
or
inc
pop
hlt
cs
stc
mov
jle
pop
mov
dec
pop
jnp
nop
fucomp
and
cmp
mov
sub
and
xchg
sub
adc
mov
cmc
lods
xor
je
sub
clc
in
filds
dec
inc
outsl
ror
mov
xchg
pushf
mov
mov
push
clc
in
cld
scas
and
lret
cmp
int
test
mov
or
popa
cmp
push
cli
inc
pop
aad
push
test
in
xlat
cmp
jae
aam
das
inc
lcall
call
into
iret
jno
cltd
lret
test
mov
inc
xchg
push
and
sti
pop
lret
mov
lret
lret
icebp
sbb
jmp
adc
bound
and
dec
sub
mov
pop
sub
ds
cmp
lret
jns
addr16
dec
xchg
add
sbb
jne
mov
sub
add
addr16
bound
inc
clc
mov
jg
sti
mov
addl
add
sub
mov
xchg
in
movb
push
pop
inc
cmpsb
test
dec
fldl
icebp
mov
sbb
test
cs
sarl
adc
je
cmp
cli
cli
fdiv
movsb
imul
mov
xchg
mov
js
push
sbb
mov
and
mov
hlt
pop
inc
xor
jne
es
hlt
rcl
js
in
in
or
out
xor
test
ds
inc
inc
mov
out
push
mov
out
cmpsb
mov
mov
push
pushf
mov
aad
mov
mov
cmp
jmp
cld
lcall
ljmp
xchg
pop
sbb
cmpl
mov
jno
dec
inc
adc
sbb
loope
xor
xor
aas
jp
fnstcw
leave
jecxz
adc
addb
stos
dec
cs
xchg
ficomps
mov
pop
shl
sbb
imulb
xchg
pop
sti
leave
mov
cmp
lcall
loopne,pt
std
adc
push
xchg
sub
xchg
iret
dec
mov
mov
and
xor
xchg
xchg
jmp
stos
push
xchg
cmp
push
inc
sbb
xorb
or
or
repz
push
sub
xorl
xor
dec
cmp
push
int3
mov
adc
mov
sbb
imul
add
mov
hlt
mov
clc
inc
rorl
mov
cld
lret
in
call
dec
in
out
ljmp
imul
push
jmp
push
jmp
lahf
jl
push
jg
lahf
pop
mov
test
pop
lods
jp
divl
mul
loope
jno
xchg
orb
mov
sub
push
lods
int3
mov
mov
cwtl
add
xchg
das
lcall
xchg
jae
sub
rorl
negb
mul
or
movsb
fs
cmpsl
adc
fcompl
cmp
jl
jae
xchg
pop
lcall
into
xchg
push
mov
add
imul
jmp
xorb
test
inc
movsb
out
movsb
jmp
inc
imul
loope
lret
lods
push
sbb
nop
mov
lods
push
ja
loopne
add
fimull
es
pop
sbb
dec
hlt
outsb
ja
mov
lea
stos
inc
inc
lret
jecxz
adc
and
idivb
pop
cmp
mov
pop
loope
jecxz
fldt
mov
repnz
addr16
inc
fwait
pop
incb
jle
lahf
fistpll
xor
cmp
mov
adc
adc
sbb
imul
jne
iret
or
adc
cs
in
push
test
scas
and
mov
aaa
dec
and
std
shl
cmpl
imul
mov
movsb
sbb
jbe
cmp
push
cmpsl
xor
out
xchg
pop
push
push
fsubrl
stc
push
jnp
into
sbb
subb
xchg
fwait
and
sub
mov
cmp
nop
int
or
out
je
xor
cmp
jnp
shr
xor
cld
pop
test
out
mov
lea
push
call
mov
pop
mov
jecxz
jno
adc
ret
xor
popf
pop
cmpsb
push
pop
mov
repnz
jne
stos
adc
add
lret
sub
add
das
js
cld
ljmp
insl
ljmp
stos
and
cmc
das
mov
cmc
loop
xchg
xchg
andb
push
inc
gs
bound
xor
ret
cmc
loop
xchg
xchg
andb
push
inc
gs
bound
xor
ret
cmc
loop
xchg
xchg
andb
push
inc
gs
add
add
xor
in
cmc
loop
xchg
xchg
andb
stos
call
jb
popf
jge
dec
int
test
fstps
mov
jns
imul
cmp
pop
sbb
test
fstps
test
cmp
imul
cmp
dec
sbb
mov
mov
leave
lock
push
sub
imul
or
stc
popf
mov
stc
push
scas
gs
pop
inc
push
popa
js,pt
xchg
xchg
push
test
ret
inc
stc
push
dec
xchg
dec
subl
imul
jp
fbld
inc
sahf
sbb
jle
xchg
xor
imul
pop
or
fdivrs
mov
mov
cmpsl
out
xchg
push
jns
out
sub
fs
add
jns
push
mov
sub
sub
push
xchg
icebp
jns
mov
dec
pop
inc
jl
adc
fsubs
push
jb
stos
cmp
or
xchg
sub
sub
dec
or
or
mov
leave
mov
rorb
pop
add
cmp
push
sbb
lds
lcall
stc
sub
jge
imul
mov
jmp
xchg
testb
or
pop
and
aas
insb
cmp
popf
in
icebp
mov
leave
cltd
or
dec
imul
pop
or
fstps
test
sub
imul
cmp
dec
sbb
test
sub
sbb
into
sbb
or
lods
in
add
xchg
pop
sub
push
insl
mov
push
sbb
outsb
cmp
lahf
pop
aaa
jne
mov
cmpb
lods
add
pop
xchg
add
leave
mov
sbbb
sbb
and
sub
pop
mov
add
scas
ret
inc
wrmsr
mov
hlt
test
cli
aam
pop
jge
mov
leave
push
in
out
mov
jecxz
adc
sub
dec
cs
cmp
pop
mov
pushf
push
pop
push
ljmp
mov
sbb
cmp
jne
mov
inc
gs
data16
psrlq
sub
dec
aad
or
pusha
xchg
repz
sbb
stc
mov
stos
mulb
mov
movsb
je
jmp
pop
push
in
adc
mov
into
push
cmc
std
nop
in
test
popa
dec
ficoml
jecxz
mov
and
cmp
and
xchg
test
push
stos
sub
or
test
in
add
mov
fwait
cwtl
orb
jl
movsb
imull
inc
ret
pop
cmpsl
jno
push
cwtl
inc
or
and
icebp
or
or
jge
and
adc
mov
mov
and
icebp
jecxz
popa
movsb
dec
mov
sbb
mov
xchg
mov
daa
dec
add
inc
ljmp
jg
push
sub
sti
dec
fstpl
outsl
push
inc
int3
pop
fcoml
aad
jne
in
into
cmc
sahf
in
outsl
out
lcall
push
push
js
xchg
pop
icebp
push
adc
cmpsb
out
jge
adc
ljmp
pop
pop
lahf
icebp
jne
imul
mov
sarl
and
cltd
aad
movsb
pop
push
cld
fnstsw
mov
jmp
pop
xor
test
out
lea
xchg
xchg
test
movsb
clc
xchg
push
ja
dec
cld
cmpsl
aas
jmp
add
inc
jnp
lea
jle
imul
loope
daa
xor
xchg
lods
dec
adc
std
pop
or
ja
rorb
sub
inc
shlb
mov
enter
or
jl
insl
mov
sub
mov
mov
mov
lret
cmp
pop
pop
add
add
adc
pop
fwait
push
xlat
cmc
and
int3
xchg
mov
adc
xor
lods
push
cmp
in
mov
sbb
mov
hlt
dec
dec
stos
sbb
clc
daa
shlb
xchg
xlat
pop
test
scas
or
pop
sbb
testb
adc
xchg
cs
dec
lcall
ror
jne
or
subl
inc
xchg
in
mov
lods
xchg
dec
push
dec
into
movsl
add
clc
movsb
push
xchg
fwait
daa
pusha
mov
xchg
rorb
mov
into
insb
sub
in
pop
dec
in
loop
ret
xor
xchg
mov
inc
inc
dec
imul
lret
nop
fidivl
test
test
into
aas
mov
fs
xor
out
push
cwtd
sub
adc
int3
xchg
decl
sbb
push
ret
shll
mov
adc
adc
adc
jl
in
jl
sbb
in
push
test
pop
jmp
cwtl
adc
xchg
mov
sbb
stc
or
pop
mov
cli
movsb
pop
jmp
pop
fcmovb
xchg
ja
adc
xor
lahf
jle
mov
ja
cmp
movsb
sub
testb
pop
lahf
lods
sbb
sbb
enter
add
pushf
fdivl
add
lock
sti
gs
pop
in
adc
pop
rorl
filds
test
mov
inc
test
inc
cmp
cmp
not
add
inc
ss
pop
dec
lahf
inc
sbb
test
sbb
cmp
sbb
test
cwtl
fldenv
mov
ffreep
in
lcall
cltd
xchg
xchg
lret
cld
inc
mov
cmpsl
pop
js
add
les
cli
cld
push
test
in
scas
or
cwtl
dec
scas
xchg
jbe
sbb
insl
scas
mov
rcll
jbe
mov
jnp
mov
add
stos
inc
ja
std
fbld
push
dec
push
leave
stc
cmp
scas
fistpll
or
stc
push
and
cwtl
xor
jb,pn
fcmovne
insl
in
sub
adc
dec
fbstp
xor
pop
mov
jp
push
pushw
js
shrb
add
xor
popa
fnstenv
test
sahf
insl
loop
cwtl
xchg
andnps
xlat
or
jno
les
inc
mov
add
sarb
jno
in
jl
adc
andb
add
push
add
push
jecxz
inc
cmpsb
cs
test
push
lahf
clc
fnstsw
cmp
add
jnp
mov
jbe
test
mov
cmp
add
aam
dec
lds
cmp
pusha
mov
arpl
out
jmp
stos
dec
add
pop
jo
jg
push
xchg
and
jbe
ss
mov
subl
jb
xor
mov
and
xorb
ret
lret
mov
or
hlt
fcoml
je
inc
and
and
inc
xchg
cmpsl
outsb
or
pop
stc
sub
testb
pop
xlat
es
or
dec
cmp
cmp
and
mull
and
mov
ret
push
out
inc
xchg
xchg
lcall
cmp
sub
andb
mov
xchg
mov
movsl
iret
jl
xor
dec
jnp
in
ds
btr
scas
shll
fsubr
cs
negb
cmp
add
popa
and
mov
outsl
pop
push
lods
mov
lds
ja
pop
sbb
inc
xor
fdivr
test
test
cli
mov
mull
push
pop
nop
inc
xchg
pop
mov
pop
lea
push
pop
dec
inc
inc
pushf
jl
nop
xor
test
fldcw
das
imul
mov
lea
das
pop
test
dec
push
fwait
mov
ret
fistps
mov
ret
cmp
test
and
sbb
jnp
add
mov
cmc
mov
test
mov
adc
pop
jecxz
and
int3
inc
jg
dec
mov
add
push
pop
mov
jnp
clc
cmpsb
pop
sbb
mov
adc
push
cmc
ficoms
xor
jg
and
adc
dec
aas
mov
mov
mov
xchg
jl
mov
xchg
jg
pushf
add
mov
dec
leave
dec
lods
inc
push
in
pop
mov
cli
sub
mov
clc
or
push
fnsave
outsb
nop
test
xchg
sbb
in
test
push
sbb
mov
mov
aad
cmpsl
inc
mov
pop
addb
test
aas
popa
dec
mov
out
jge
push
cmp
out
mov
lret
sub
aam
pop
clc
sbb
mov
lds
negl
pop
inc
mov
mov
ljmp
roll
scas
stos
jge
stos
jl
jmp
push
scas
mov
fldcw
inc
fldl
rcr
stos
xchg
jg
push
mov
scas
xchg
push
mov
std
orb
mov
in
sarl
lds
pop
or
stc
cmp
sub
sub
lods
inc
repnz
pop
pop
or
inc
sub
cmp
sub
bound
xor
cld
mov
adc
xor
data16
xchg
mov
fwait
int
jp
xor
mov
mov
bound
mov
jae
pop
adc
test
lahf
scas
in
arpl
push
ja
out
scas
mov
test
jb
pop
cmp
imul
dec
lds
pop
push
sub
ds
push
inc
es
mov
pop
and
nop
add
clc
stos
inc
popa
mov
xchg
cmpb
idivl
dec
data16
sbb
in
in
mov
loop
dec
cwtl
add
add
jo
mov
shl
and
ljmp
mov
imul
cmp
xchg
jns
jg
push
nop
push
and
sub
lds
xchg
aas
pop
xchg
loope
xor
xchg
xchg
dec
pushf
push
ret
loopne
js
jae
lods
popf
roll
lea
xchg
add
mov
dec
mov
mov
lea
and
inc
loopne
rcr
jne
je
sub
lret
mov
aaa
lret
jecxz
lea
push
and
scas
out
push
add
cmp
lea
and
in
inc
xchg
xor
cltd
xlat
fwait
mov
scas
gs
add
mov
int3
adc
sarb
push
mov
pop
dec
fdivrl
mov
aam
push
pop
sub
or
pop
mov
das
mov
cmp
adc
xchg
out
add
stos
jge
jle
call
cmp
adc
mov
bound
outsb
pop
loopne
adc
movb
xchg
std
mov
loop
push
xchg
or
cli
js
sbb
dec
adcl
pop
lahf
sbb
in
out
add
mov
and
lret
ret
test
int3
in
pop
jns
sbb
repnz
das
adc
notl
ret
js
pop
sahf
lock
and
jmp
pop
push
es
mov
jl
dec
mov
sub
iret
add
cs
cmp
pop
test
xchg
jle
mov
decl
xchg
call
movsl
push
subb
cmp
push
pusha
mov
int
mov
cmp
adc
lods
sbb
xor
sub
pop
jae
lfs
fstps
push
pop
mov
add
scas
mov
push
dec
dec
and
inc
repz
stos
ss
lds
cmc
push
jmp
pusha
fsubs
and
lahf
cmpl
jl
and
nop
xor
ret
jae
or
fidivrl
dec
mov
pop
xchg
dec
daa
mov
daa
lret
dec
and
sahf
outsb
mov
xchg
sbb
adc
jne
xchg
sub
or
shll
dec
pop
mov
mov
imull
test
inc
stos
mov
repnz
mov
in
mov
jecxz
mov
in
xor
cmpsb
out
cli
in
push
mov
setp
push
cs
cmpsl
in
dec
xor
lcall
int3
xlat
add
js
rorl
mov
and
jo
mov
popa
fs
imul
in
xor
lret
scas
andb
jno
pop
sub
jnp
inc
xchg
lcall
pop
mov
aas
daa
sti
sbb
sti
je
dec
js
clc
or
test
fistl
in
cwtl
jl
push
je
xchg
arpl
xchg
int3
cmp
adc
mov
lcall
test
hlt
setne
push
sbb
push
and
mov
and
cmp
dec
mov
arpl
fisttpl
iret
add
insb
mov
and
mov
jg
pop
add
jge
adc
call
and
shlb
pop
adc
hlt
or
sub
sub
orl
xchg
mov
jge
dec
xchg
cmp
stc
xchg
sbb
and
push
adc
mov
cmp
test
fs
dec
lahf
push
ljmp
addr16
push
mov
inc
xchg
mov
roll
cs
sarl
rclb
mov
sbb
aas
jns
dec
sahf
or
xor
and
movsb
and
das
hlt
cmp
or
mov
jne
mov
add
lret
out
cwtl
stos
inc
dec
popf
test
mov
loop
sbb
fcomps
inc
icebp
rorl
mov
je
out
fcomi
cltd
xchg
or
lea
into
fs
mov
enter
sub
sub
shll
add
or
mov
mov
in
js
stos
outsl
mov
lret
iret
dec
mul
dec
test
and
sub
jb
xor
out
fs
xchg
call
imul
pop
aad
cltd
pop
xor
inc
xor
sbb
movsl
add
fwait
in
mov
aam
cmp
sbb
dec
in
imul
mov
mov
sbbl
pusha
dec
fcomi
outsl
add
scas
sbb
out
pop
or
cmp
stos
mov
cltd
std
add
xor
data16
jecxz
dec
xor
movsl
cld
gs
or
cs
test
push
lahf
lret
dec
shl
test
movsl
into
movb
mov
mov
jp
lods
push
xchg
mov
mov
adc
jnp
lahf
popa
add
cmp
sbb
xor
sahf
scas
aas
adc
sbb
pop
imul
cmc
dec
sbb
mov
push
lods
xlat
in
push
push
imul
adc
or
mov
arpl
push
addl
inc
lds
mov
aad
fcoml
push
ljmp
dec
adc
jecxz
js
add
inc
pop
push
jmp
aam
repnz
sahf
cmc
push
fdiv
jl
mov
ljmp
jg
cmc
jb
push
std
push
sbbl
lret
cmp
xor
loope
add
adc
add
add
or
ret
repz
xor
sbb
or
mov
cltd
loope
test
or
cmpsl
pop
mov
and
mov
mov
sti
xchg
inc
xor
jns
test
iret
fs
jb
sub
aas
fsubs
sti
jno
lahf
dec
inc
xor
mov
lea
jbe
inc
mov
dec
mov
sub
pop
push
jl
out
mov
adc
push
jg
in
jbe
cmpsb
cmp
adc
or
and
roll
lahf
mov
xor
and
sbb
sub
inc
lods
jg
jb
jg
push
negl
out
cmpsb
gs
inc
popa
pop
movsb
roll
dec
jmp
cmp
dec
lcall
add
sti
les
mov
or
call
push
lret
pushf
dec
xchg
mov
xchg
mov
scas
xchg
jns
sbb
cmp
pop
shr
sahf
inc
hlt
fisttps
adc
jmp
push
or
add
push
push
jo
clc
lret
add
xchg
ret
xchg
in
cmpsl
cmp
ret
sbb
repnz
jg
ret
jno
in
js
loopne
mov
dec
enter
xor
mov
std
xchg
lret
aam
inc
cmp
ret
mov
lods
cmp
xor
or
xor
xchg
or
cmp
test
mov
cld
iret
jne
xor
inc
nop
cmovbe
fdivl
fmuls
inc
inc
add
inc
or
inc
mov
pop
movsb
cld
jo
rolb
push
fistpll
xor
rorl
add
outsl
inc
pusha
sub
fcos
mov
dec
jp
mov
std
add
and
adc
jne
mov
mov
stos
dec
pop
test
imul
cmpsl
leave
pop
mov
xchg
pop
movhps
pushf
into
ret
les
push
fnstsw
cli
jl
cwtl
outsl
aas
cmp
pop
adc
repnz
mov
inc
ficomps
xchg
mov
or
xchg
rcl
pop
repz
or
sub
clc
movsl
push
movsb
adc
xor
ret
mov
adc
lret
mov
jb
test
add
mov
flds
mov
xchg
ret
jne
push
call
push
filds
xorl
fs
cld
jae
cmpsb
xor
sti
stos
iret
stos
ss
push
fdivs
mov
clc
cmp
sub
xor
shlb
add
repz
loopne
ljmp
es
pop
jg
mov
cmpsl
cmpsl
test
cli
cli
orb
cmp
negb
mov
mov
sbb
add
jg
xorl
bound
sbb
ret
push
cmpsl
or
sub
xor
lcall
xorb
rorl
sti
jae
push
popf
mov
out
and
std
out
jne
mov
xchg
and
pop
pusha
icebp
clc
mov
or
pop
inc
mov
dec
fs
mov
xchg
jg
adc
outsl
out
cmpsl
mov
mov
dec
call
imul
sbb
mov
mov
movsl
jo,pn
cld
fcompl
add
inc
sti
repnz
pop
jnp
ror
sub
jbe
and
push
lods
mov
test
pop
sub
jle
bound
xor
or
and
pop
mov
cld
mov
mov
insb
imull
lcall
dec
xor
aam
jno
lods
xor
leave
jmp
xchg
push
mov
jmp
xor
pop
jae
clc
sub
inc
stos
cmp
pop
push
sub
stos
loop
pop
jno
mov
mov
call
sti
sti
pop
loope
xor
adc
in
hlt
jo
xor
pop
mov
cli
stos
fs
lods
sbb
jl
mov
add
and
add
adc
mov
data16
xor
dec
les
or
inc
mov
outsl
mov
imul
xor
dec
imul
fistps
and
dec
orl
mov
in
jmp
sti
ret
sbb
jle
ret
sub
sbb
ss
das
jae
lock
push
fsubs
scas
decb
cli
aam
add
and
cli
jmp
sub
sbb
dec
inc
sbb
insl
cld
add
pop
cmc
sbb
arpl
xlat
lods
jo
shlb
sub
push
or
daa
mov
in
dec
and
pop
popa
jo
mov
cs
jbe
jle
mov
scas
bound
das
movsl
cs
push
shrb
cmpsl
cwtl
int
jo
leave
mov
mov
push
adc
jnp
sahf
push
inc
add
mov
in
int
popl
jmp
sub
adc
jnp
fstl
inc
jge
xchg
inc
or
add
insl
or
push
xor
gs
cmp
aad
icebp
rol
push
test
lods
cmp
xchg
scas
xor
push
sub
loop
leave
inc
les
adc
push
out
mov
loope
shll
add
int3
pop
loop
inc
insb
dec
mov
adc
les
and
jg
ret
sbb
or
jmp
std
jne
mov
iret
lods
hlt
fisubrl
les
out
jl
push
inc
clc
add
xlat
cmpsb
shll
out
enter
imul
int
cld
test
fisttpl
push
xor
xchg
mov
inc
lds
mov
dec
sub
sub
push
daa
add
ja
mov
sarl
les
add
or
stos
cld
and
sub
mov
dec
mov
decl
pushf
in
pop
cmp
mov
enter
cmp
dec
and
mov
cmpsl
mov
pop
imul
pushf
sub
inc
scas
movsb
lret
or
insl
xor
sbb
stos
fnstcw
sahf
pop
mov
fisubrs
sbb
jns
adc
pop
sbb
mov
sub
je
arpl
dec
jle
xlat
push
aaa
stc
out
add
push
dec
test
jae
jno
outsb
and
adc
fstps
push
outsb
gs
into
int3
cmc
dec
cmp
push
test
sbb
inc
dec
inc
xchg
loopne
scas
sub
xlat
cmp
adc
and
push
loop
mov
cwtl
and
jp
jae
loope
xor
mov
pop
jge
test
xor
pop
jl
inc
daa
addr16
dec
pop
add
mov
lret
jmp
ds
jnp
daa
fsubs
in
jne
rcr
lret
jl
in
xchg
jae
shl
mov
dec
fbstp
aam
or
fldenv
cs
stos
mov
ds
imul
filds
sub
mov
out
rorl
cmp
sbb
out
mov
dec
loope
add
add
icebp
data16
call
gs
dec
mov
jne
and
inc
xchg
lods
cmp
cmpsb
xor
sbbb
sub
jae
daa
dec
repz
add
mov
cli
aam
mov
mov
cmp
inc
enter
xchg
jo
insl
or
fldl
test
loope
jle
adc
fdivrl
iret
ret
mov
or
sub
fcmovnbe
test
xchg
ss
lahf
dec
subl
lods
jle
add
mov
out
cli
jo
xchg
xor
enter
pop
push
mov
sti
add
sub
mov
movsl
pop
test
je
fimuls
addr16
jae
mov
mov
adc
or
pop
in
rolb
out
xor
in
jmp
jmp
cltd
or
dec
imul
pop
or
fstps
test
sub
imul
cmp
dec
sbb
test
fstps
test
sub
push
imul
pop
or
fstps
sub
pop
jbe
xchg
ret
mov
mov
mov
cmpsb
imulb
jns
dec
sub
daa
push
dec
cmp
jp
stc
lcall
mov
cli
imul
pop
cmp
dec
cmp
push
add
mov
lcall
mov
cli
imul
pop
cmp
dec
cmp
push
jp
mov
mov
rcrl
mov
jns
push
cmp
cmp
cmp
loope
icebp
sub
out
add
ret
test
movsl
loop
lds
add
filds
out
jo
xlat
gs
mov
lods
adc
or
pop
addl
fidivl
das
jmp
repz
or
xor
in
outsl
pop
inc
sub
js
aas
add
insl
sub
sub
add
jmp
lcall
lret
mov
fwait
sti
xchg
jle
dec
and
mov
ret
or
sbb
jne
fsts
mov
imul
inc
xchg
push
cmp
xchg
mulb
aas
mov
push
pushf
scas
xchg
lret
mov
icebp
out
aaa
or
dec
sub
sub
pop
or
jp
mov
lcall
mov
xchg
das
push
adc
sub
inc
das
jo
insb
sub
cs
std
fwait
stos
iret
mov
int3
mov
mov
push
or
dec
cmp
outsl
es
push
or
sbb
mov
sti
jecxz
stc
pushf
movsb
in
mov
sbb
pop
sub
or
jp
mov
lcall
mov
cli
imul
pop
cmp
dec
cmp
push
jp
mov
lcall
mov
cli
imul
jge
repz
mov
in
cmp
ljmp
dec
push
add
in
dec
xchg
push
sub
xor
js
jle
rcr
into
imul
mov
mov
mov
cmc
push
dec
mov
sbb
lea
pop
xor
adc
xor
jae
es
mov
in
ja
add
in
loop
or
mov
and
mov
repnz
inc
jne
repnz
xchg
shrb
mov
rcrb
mov
dec
out
sbb
inc
shr
mov
push
dec
cmpsb
mov
or
mov
lds
nop/reserved
or
lea
lods
push
inc
movsl
add
push
jecxz
xor
pop
clc
mov
jge
rcrl
addb
inc
gs
adcb
xchg
or
adc
lcall
sbb
fsubrl
in
test
and
test
shrb
mov
push
add
mov
es
dec
loop
lods
add
xchg
cmp
pop
int3
and
cltd
scas
cmp
adc
adc
stos
daa
sti
mov
mov
lcall
out
cmc
rol
sahf
gs
jns
arpl
lcall
xor
xchg
jne
fadds
ret
mov
fucom
movsl
lret
sahf
popf
push
pop
sbb
adcl
jge
fsubs
mov
jo
in
ss
sarl
push
jbe
lock
xchg
movsb
sub
cmp
xchg
bound
fcompl
xor
adc
or
pop
mov
shll
and
aad
insl
rclb
in
lock
mov
int
in
popa
into
cs
adc
pop
clc
lret
inc
mov
lods
sub
call
mov
aam
pop
pop
popa
je
lea
mov
mov
scas
in
sub
mov
xlat
jne
and
cwtl
inc
mov
jne
adc
and
insl
fsts
fbld
nop
sub
mov
sbb
sbb
inc
rorl
dec
pop
or
pushl
cmc
xor
les
jb
lea
inc
or
sti
or
inc
imul
je
and
xchg
add
rclb
lods
js
pop
cwtl
rcr
jecxz
popa
mov
mov
or
ss
call
xor
inc
push
push
fsts
pop
cmp
add
dec
inc
int
arpl
mov
jle
mov
mov
adc
or
jmp
gs
mov
les
insb
xor
aaa
es
mov
mov
fstpt
into
or
jp
loop
ret
int
mov
mov
jmp
stos
ja
pop
or
fstpt
pushf
xchg
cmp
xchg
in
xchg
adcb
mov
popf
adc
and
xor
or
aam
pop
gs
rcr
dec
add
or
out
sbb
xor
hlt
push
jg
sbb
fiaddl
mov
inc
mul
dec
sub
call
sub
cmp
hlt
push
cmp
dec
mov
push
jo
faddl
mov
sbb
daa
fildll
insb
loope
scas
push
mov
ljmp
dec
pop
imul
mov
es
out
mov
out
sub
lds
push
jl
ret
and
fsubs
push
jmp
enter
int3
dec
les
sarb
add
or
ja
pop
pop
lcall
lcall
xchg
and
inc
aad
or
xchg
jno
icebp
mov
loopne
lds
iret
cwtl
dec
mov
dec
rcrl
sub
xchg
mov
loop
jmp
fstps
cmp
aam
pop
xor
push
sub
cli
fs
cltd
cmc
gs
call
dec
rolb
push
cmp
inc
adc
xor
add
outsb
rorb
shlb
in
inc
std
js
push
mov
mov
add
sbb
lahf
mov
sahf
mov
xor
or
push
cs
shrl
outsb
test
xlat
mov
mov
push
fstps
inc
sbb
inc
and
xor
aaa
push
push
sarb
dec
call
in
mov
int
jg
fsubl
mov
xlat
or
dec
push
xor
and
cli
jns
out
and
in
lcall
mov
jb
jl
push
add
pop
add
pop
cmc
sbb
test
mov
add
repz
std
push
sub
xor
xchg
scas
mov
xlat
lahf
add
rolb
cmp
xor
dec
enter
dec
hlt
sarb
sub
sub
push
stc
pop
xor
dec
scas
push
test
lret
jo
push
pop
sti
bound
jle
les
jno
repz
pop
or
pushf
sub
mov
pop
mov
test
xor
inc
std
inc
aas
sub
xchg
aaa
jbe
jnp
mov
push
ret
shll
sub
dec
out
mov
mov
add
fmul
and
inc
addr16
cli
sbb
lock
test
adcb
push
sbb
in
jbe
sub
gs
mov
add
loopne
xor
add
mov
leave
js
xor
adcl
mov
adc
lea
adcb
movsb
cli
fstpl
xlat
ja
sub
pusha
xchg
sbbb
loope
clc
mov
mov
shll
dec
and
or
out
jmp
out
xchg
xchg
cld
stc
jg
adc
push
push
sarb
repz
cmp
aaa
add
movsl
mov
push
push
inc
stos
xchg
mov
inc
and
xchg
sbb
daa
fs
addr16
jle
cmc
mov
cmp
cmp
jp
xchg
ret
dec
push
out
add
push
mov
test
mov
cmp
pop
inc
sbb
sbb
ss
loop
mov
out
in
push
lock
mov
mov
jle
mov
hlt
pop
xchg
inc
rcrb
mov
mov
loope
jg
imul
mov
pop
dec
push
sbb
mov
mov
mov
int3
fnstcw
dec
xchg
mov
rcl
xchg
inc
jge
stos
ljmp
fists
mov
sbb
ss
fistps
movsb
or
add
aas
inc
xor
aam
je
or
les
or
int
sarl
sub
sub
aam
push
sbb
or
aad
mov
stos
pusha
dec
xor
jb
mov
cli
mov
jne
pop
push
mov
pop
inc
sub
mov
or
das
outsl
shr
aam
pop
inc
sbb
mov
jge
jne
pop
mov
push
outsb
or
mov
xchg
mov
cmpsb
cltd
xchg
cs
out
or
inc
xchg
mov
xor
in
std
adcb
mov
jmp
jns
xchg
pop
loop
jmp
adcl
std
mov
or
jno
imul
xorl
in
jle
pop
xor
ljmp
cmp
cmc
out
imul
rcrb
mov
inc
xchg
fnsave
sbb
dec
ret
adc
xchg
lahf
in
pop
push
sub
into
jnp
cmp
pmulhuw
out
xchg
mov
jge
aas
iret
push
popa
pusha
sbb
add
lods
pop
dec
iret
jno
stos
adc
fnstsw
adc
fldenv
mov
icebp
les
jne
lock
push
inc
inc
loope
inc
filds
sub
int3
or
xchg
insl
sbb
aas
jge
ret
xorl
xor
fidivrl
daa
std
in
push
inc
out
mov
shlb
in
mov
jbe
jp
mov
stos
mov
cmp
pop
inc
dec
js
stos
dec
jg
aaa
dec
jno
stc
aad
add
and
push
sub
stos
iret
adc
sub
les
lcall
sbb
fisubs
and
sub
daa
popf
add
stc
mov
push
into
jbe
cld
jb
movsl
imul
sub
sahf
movsl
leave
stos
int
dec
pushf
sbb
hlt
or
mov
dec
aas
pusha
mov
fmul
mov
into
cmp
fs
push
xchg
movsb
jb
mov
jmp
and
pop
clc
imulb
imul
xchg
xchg
mov
or
js
mov
mov
sbb
cs
dec
enter
xchg
int3
adc
xchg
loopne
stc
inc
add
mov
sbb
lods
out
ljmp
scas
cmpsb
mov
xor
push
imul
dec
lods
mov
leave
mov
imul
dec
mov
mov
mov
lock
imul
call
jg
jmp
jno
inc
ret
ret
pop
dec
mov
push
or
sub
mov
lea
mov
shufps
xor
xor
add
fmul
bound
jo
cs
in
cmp
leave
pop
cmp
sub
out
mov
js
stc
sub
stc
iret
in
nop
jns
pop
adc
mov
jp
leave
push
adc
out
stc
sub
push
mov
sbbl
push
pop
dec
cmp
mov
sub
lods
std
dec
push
jp
or
jecxz
sbb
stos
jo
push
js
and
jle
xchg
decl
stos
mov
into
mov
loope
addb
ljmp
imulb
sbb
push
rolb
cmp
pop
sbb
not
clc
jmp
jmp
jno
sub
add
stc
icebp
je
stc
out
pop
push
fdivr
inc
jl
test
jecxz
into
xchg
mov
lock
popa
push
jl
lods
repz
lods
lea
inc
subl
mov
or
fbld
jg
push
jp
jno
shll
or
jmp
inc
pop
sub
jo
inc
dec
dec
ja
enter
push
adc
rclb
push
cmp
ret
inc
ret
in
sbb
jo
inc
sub
push
out
popf
int
lcall
and
jnp
bnd
sbb
xor
dec
gs
jbe
outsb
cld
xchg
lock
sti
repnz
cld
jo
inc
test
jns
inc
mov
lock
and
xchg
cmc
ds
jecxz
cs
test
jecxz
sub
outsb
mov
fisubrs
les
lahf
cmp
push
pop
inc
push
jb
adc
or
jno
fbstp
inc
stc
scas
cwtl
pop
mov
ret
js
xlat
mov
inc
cmp
mov
cmc
jle
es
into
addl
gs
lock
sahf
xor
pop
push
sub
pushfw
aam
jle
mov
mov
cmp
nop
movsb
dec
and
dec
adc
aaa
ds
xlat
jecxz
paddw
sub
scas
inc
ret
jns
mov
pop
jns
dec
ja
into
outsl
push
sub
adc
mov
cld
cmp
add
stc
rcll
in
push
and
jle
xchg
push
idivl
lcall
pop
cs
es
push
pop
dec
inc
addr16
jne
lahf
mov
cltd
cmp
out
sub
inc
rcll
cmpsb
popa
lcall
adc
imull
dec
pop
ss
aad
stos
imul
jno
mov
jno
lods
in
in
pop
stos
andb
call
sbb
imul
inc
jp
cli
and
stos
add
into
mov
cwtl
out
mov
inc
mov
stos
ds
or
xlat
sbb
stos
fwait
insl
xor
and
pop
lahf
mov
out
mov
aad
mov
pop
pop
or
jmp
mov
leave
pop
mov
cltd
mov
cmp
in
mov
rcrl
lcall
mov
pop
xchg
mov
inc
fists
inc
jne
mov
jns
inc
sbb
in
imulb
addr16
and
mov
addb
adc
xchg
setg
add
cmpsb
jae
mov
das
lcall
inc
stc
push
and
mov
jl
mov
mov
sub
add
mov
or
pop
int
loopne
iret
call
lock
mov
sets
ret
pop
jns
int3
or
shll
adc
popa
mov
lods
dec
and
shrb
cltd
mov
xor
adc
icebp
and
repz
enter
inc
stos
fstpt
push
jg
ret
and
in
mov
mov
rcrl
pop
ficompl
or
cltd
adcl
in
jo
ret
inc
mov
add
cwtl
add
mov
sbb
pusha
mov
hlt
shll
hlt
fisubl
fiadds
xor
ja
cmpsl
unpcklps
test
xor
adc
sub
pop
iret
stos
testb
aad
sarb
pusha
mov
test
cmp
jle
sahf
leave
ljmp
inc
loop
or
add
inc
push
add
out
mov
sbb
fwait
lahf
in
movsb
nop
repnz
push
jbe
mov
andl
adc
scas
lods
sub
shrl
movsb
out
jb
je
std
iret
and
lahf
pop
dec
mov
in
fisubs
xor
shlb
rorl
cli
cmp
or
xor
jecxz
jno
int3
inc
and
xor
mov
lock
fldt
popa
jbe
push
jne
in
daa
jb
dec
add
jnp
shlb
push
inc
push
je
lea
inc
out
sbb
outsb
outsl
and
pop
ds
shrb
inc
mov
xchg
test
test
mov
pop
push
pop
out
scas
dec
xchg
inc
in
test
or
js
out
fnstcw
mov
call
ljmp
sbb
stc
lock
cs
call
mov
subb
xorl
out
inc
mov
lahf
mov
insl
xchg
sub
ret
pushf
js
push
aaa
cmpl
xchg
popf
cmp
or
mov
cwtl
std
sub
inc
ja
out
lret
js
dec
mov
cs
mov
test
leave
bswap
sbb
pop
lahf
mov
sbb
and
pop
movsb
xlat
stos
mov
dec
sub
ds
daa
inc
mov
sub
xchg
icebp
popf
and
scas
loop
test
shl
jb
mov
adc
cmpsb
or
push
dec
pop
test
insl
pop
mov
out
xchg
dec
andb
sbb
mov
jne
lcall
scas
cld
add
movsl
ret
inc
je
insl
mov
jecxz,pn
pusha
cli
in
movsl
cmp
sub
call
adc
das
mov
stos
pusha
push
adc
jb
test
lea
push
test
cmp
mov
leave
dec
test
popf
push
push
int
pop
xor
idivl
imul
mov
push
jae
stos
jp
bound
stc
push
cld
scas
or
scas
lret
popa
jae
hlt
outsl
mov
inc
mov
fs
and
pop
out
aam
in
cwtl
mov
jno
in
lcall
leave
in
xor
movsl
xor
popl
sbb
sbb
cltd
test
add
push
inc
sbb
js
movsl
je
testb
testl
icebp
out
insl
pop
mov
push
insl
out
sub
xor
loopne
push
jae
push
addl
xchg
ss
dec
sbb
fldl
mov
push
dec
outsb
je
ja
xchg
xor
cmp
mov
pop
cmp
out
leave
es
pusha
adc
mov
and
mov
nop
adc
adc
mov
jo
faddl
jl
sar
jg
shll
lahf
dec
jne
aas
cmp
push
sub
test
les
jp
sbb
mov
xor
mov
dec
test
jns
arpl
push
sbbb
int
ds
mov
push
jecxz
sbb
popf
jns
pop
cmp
mov
stos
jb
pusha
movsl
ret
lods
cltd
mov
xchg
xor
testb
mov
orl
test
push
push
jmp
xor
pop
lcall
xchg
fcmovb
popf
imul
sti
pop
inc
jle
mov
push
dec
es
js
or
lods
jne
mov
dec
movb
adc
jge
cmp
es
sbb
cmp
in
adc
add
xor
mov
push
add
or
ja
fadds
mov
and
sub
xchg
arpl
sbb
jo
loope
pushf
sti
mov
loop
xor
rorl
enter
enter
sbb
and
bound
inc
cwtl
cwtl
push
lret
test
sbb
xor
fcoml
lea
roll
mov
xor
xchg
mov
xchg
dec
or
clc
inc
or
icebp
shll
fucomip
imul
or
sub
adc
jnp
mov
push
adc
dec
sub
loopne
adc
push
loop
in
sub
aad
inc
stos
clc
cmpsl
or
xchg
ret
sbb
mov
xchg
test
lret
mov
nop
rep
mov
out
dec
and
insl
ja
fldlg2
rcll
pop
lods
loope
shlb
cmp
mov
leave
repz
and
lods
std
dec
andb
fmulp
pop
mov
add
test
push
xchg
pushf
test
mov
jp
mov
cmp
mov
dec
stc
das
mov
lcall
and
inc
pop
out
sub
pop
call
jg
stos
arpl
roll
sarl
mov
icebp
stc
jl
or
adc
jo
mov
outsb
out
inc
jae
or
icebp
es
pop
pushf
arpl
movsl
stc
sbb
pop
test
lock
push
xchg
or
das
testb
icebp
lock
push
test
sub
out
aad
cs
mov
shll
add
jp
das
pop
mov
inc
fmuls
pop
test
cmpb
into
push
add
int
add
insb
pop
dec
xchg
xchg
or
jns
cmp
pop
fdivs
xchg
in
test
rclb
push
cwtl
addl
dec
lock
cltd
jno
call
cmp
cmpsb
orb
clc
sub
mov
push
inc
add
mov
xchg
xchg
loope
jg
dec
jp
lea
mov
pushf
adc
xchg
subps
push
add
out
sbb
pusha
or
adc
jecxz
leave
mov
mov
add
add
or
ret
adc
rorb
xor
lods
jno
mov
adc
adc
push
fcoml
push
rcrl
mov
push
lret
push
cwtl
pop
xchg
dec
jno
add
jno
dec
aad
fsubl
sub
bound
cld
popa
xchg
cmpsb
movsl
sub
in
and
movsl
adc
inc
fsubs
push
lret
repnz
aad
xchg
cmp
or
mul
xor
ret
scas
decb
push
cltd
fidivl
adcl
xchg
mov
or
nop
inc
push
inc
fs
leave
popa
imul
shlb
imul
sti
sub
or
stos
sahf
cmpsl
push
adc
mov
movsb
fstpt
push
pushf
xchg
dec
fiadds
inc
xchg
aam
imul
in
adc
jp
out
jne
inc
negl
cwtl
lods
add
dec
fistps
and
mov
mov
inc
mov
pushf
dec
cmp
pop
aam
inc
leave
cmpb
and
jp
mov
sbb
push
jl
mov
fildl
dec
popf
icebp
into
daa
add
pop
adc
dec
and
lock
cmp
xor
sbb
jae
cmpsl
xchg
xor
repz
lahf
mov
cltd
jmp
adc
push
jns
jecxz
repz
xchg
dec
in
jg
mov
je
mov
aam
movsl
xchg
popa
sbb
out
push
push
add
or
sbb
pop
scas
shrb
data16
fiaddl
pop
sahf
aas
sbb
pusha
scas
aaa
xchg
stos
jns
xor
mov
lcall
jne
loope
or
mov
adc
cmpsl
cmpsl
mov
add
dec
adc
daa
pop
cmpsb
insl
sti
imul
push
movsl
and
dec
adc
xchg
inc
jp
fidivl
scas
in
pop
xchg
into
and
jo
cmp
push
in
test
sub
test
cmpsb
adc
mov
rol
mov
lods
jecxz
popa
negl
xchg
jne
and
iret
cli
lcall
mov
fiaddl
push
push
pop
pop
pop
shl
adc
xchg
cwtl
add
jne
push
leave
dec
scas
rcl
or
jne
cmp
lods
psubusw
fwait
addr16
out
lahf
add
je
xor
sbb
xchg
xor
inc
fistpl
sbb
and
or
inc
nop
dec
mov
les
xchg
inc
lds
inc
jae
outsl
movsb
scas
pop
cmc
gs
pop
nop
pushf
push
dec
sbb
dec
cmp
push
jp
mov
lcall
mov
cli
imul
pop
cmp
dec
cmp
push
jp
mov
lcall
mov
cli
imul
pop
cmp
dec
cmp
push
jp
mov
lcall
mov
cli
imul
pop
cmp
dec
cmp
push
jp
mov
xor
fxch
fiadds
and
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lods
movswl
das
lahf
aas
out
daa
lea
out
dec
icebp
jg
fistps
outsl
iret
jg
dec
out
dec
dec
movswl
jecxz
lahf
aas
out
dec
lcall
outsl
fistpll
aas
ljmp
pop
mov
dec
lods
pop
call
cmovge
sbb
dec
lahf
pop
shrl
jg
daa
sbb
addr16
jp
add
or
inc
psllq
inc
imulb
mov
mov
push
cli
xchg
cmp
or
dec
out
cmp
cmovns
rol
jg
inc
imul
mov
and
dec
mov
cli
or
es
das
in
xchg
jns
aas
pusha
sbb
inc
jg
cmp
xchg
arpl
sbb
pushf
push
jae
adc
pop
xor
filds
mov
out
nop
movsl
jg
dec
adc
push
out
mov
scas
stos
add
adc
dec
inc
jp
cld
mov
jg
fistpll
mov
push
jb
cltd
and
mov
adc
push
shlb
sbb
lahf
sbb
cmp
loop
sub
dec
sti
pop
hlt
psubsw
das
lahf
aas
or
pop
iret
outsl
jns
jmp
scas
das
mov
jge
pop
xchg
pusha
int
sti
inc
out
andb
pop
mov
ljmp
sbb
in
cmp
std
das
decb
pop
lcall
imull
bswap
rclb
mov
mov
scas
ret
inc
rorl
int3
pop
mov
outsl
fistpll
aas
lahf
imul
mov
dec
out
pop
ljmp
das
lahf
aas
out
dec
lcall
outsl
fistpll
aas
lahf
imul
mov
dec
out
pop
ljmp
popf
pop
js
adcl
mov
insl
int3
shrl
repnz
ficoml
icebp
cltd
ret
ljmp
cmp
mov
scas
jbe
jbe
mov
ja
fimuls
lar
daa
out
mov
aas
cmpsl
and
pop
lcall
dec
hlt
test
pop
push
ret
and
mov
and
loop
rcrl
bound
or
std
mov
lods
mov
dec
test
sub
nop
mov
add
cmpsl
aaa
pop
push
ja
sti
jmp
xbegin
jb
out
xchg
mov
xchg
push
push
add
rcrl
mov
inc
jge
inc
jae,pt
imul
pop
mov
daa
clc
adc
into
adc
outsb
cli
and
loope
out
push
test
bound
enter
bound
int3
lds
adc
jp
lods
xchg
inc
arpl
cmc
mov
in
xor
or
mov
push
jecxz
gs
pop
add
xor
mov
or
ja
add
xor
xor
popa
sbb
testb
inc
pop
add
and
mov
mov
fldenv
and
mov
jg
int
xchg
add
es
or
jb
cmp
in
sub
fbld
test
lret
je
dec
inc
fnstenv
cmp
mov
sub
cmp
out
jle
push
pop
mov
cs
and
adc
testl
mov
shl
inc
fdivrs
test
xor
lock
ljmp
xchg
fsubrl
subl
cmp
movl
jnp
fcomps
jns
cld
pop
adc
testb
cmp
or
stos
cmp
loope
pop
adc
push
cmp
call
outsl
rcrl
jge
inc
insl
push
incl
push
mov
mov
or
push
inc
popa
lods
jle
ds
mov
cs
adc
lret
cs
or
test
outsl
popf
test
sbb
xor
dec
push
add
es
inc
jne
jo
clc
inc
push
jbe
bound
ret
iret
mov
xchg
data16
xchg
xchg
sbb
mov
jg
hlt
das
inc
pop
mov
xor
pop
xchg
pop
nop
xchg
ja
jl
mov
out
xor
es
jne
test
cmp
call
mov
mov
fstps
js
pushl
adc
push
xchg
iret
xor
lcall
inc
in
jns
cmp
inc
mov
scas
dec
movsb
imul
sahf
lods
aaa
pop
mov
cwtl
or
add
push
push
push
cmp
mov
inc
jo
add
xor
int
jge
pop
imull
das
or
pop
cmp
mov
clc
js
movl
cltd
outsl
shr
mov
pop
call
xorl
imul
jo
jle
ret
xlat
push
mov
sub
sub
push
lock
jp
in
insl
jb
sti
test
lret
test
ret
sub
adc
add
movsb
mov
cmp
es
dec
inc
lret
mov
loop
adc
jno
mov
pusha
xchg
mov
repnz
xor
scas
test
jns
pop
movsl
sbb
cmpsb
orb
cmp
push
or
or
add
ljmp
adc
mov
inc
sub
push
jns
popf
dec
sbb
hlt
jmp
out
les
shlb
or
push
sbb
push
repz
je
add
mov
scas
hlt
cmpsb
dec
xchg
stos
test
mov
loopne
decl
jb
xchg
addr16
adc
sarl
add
addl
sbbb
lock
add
sti
cmp
jns
frstor
jecxz
pushf
inc
test
and
aas
sub
shrl
add
movsb
jmp
sarb
xchg
gs
outsl
mov
cs
inc
xchg
jecxz
scas
and
mov
stc
aam
dec
jo
shlb
and
aas
sub
inc
push
jmp
jecxz
jnp
mov
mov
sahf
js
push
push
daa
lret
sar
lret
and
repz
out
xchg
out
mov
jb
mov
dec
lock
mov
xchg
cmp
mov
sub
je
add
orl
jp
pop
adc
mov
pop
mov
mov
xor
stos
aam
fldt
roll
cmp
int3
test
mov
xor
push
push
repz
cltd
xor
jmp
outsl
jbe
push
lods
push
xor
lds
sub
cltd
pop
mov
insb
or
and
lret
jb
xchg
dec
push
std
add
and
push
lds
pop
mov
cld
sbb
xchg
sub
jns
adc
mov
test
mov
cmc
push
or
push
mov
dec
insb
loope
mov
and
xor
push
insb
ret
adc
mov
rorl
and
sarl
add
imul
insl
push
inc
pop
in
or
insl
insl
into
xchg
insb
mov
inc
and
in
testb
xchg
push
pop
rcrl
add
fistpll
leave
aad
and
dec
xor
lock
xor
cld
sbb
repz
das
xchg
test
and
dec
and
mov
pop
mov
jno
inc
fwait
mov
ljmp
mov
dec
hlt
mov
test
push
into
or
cmp
mov
leave
cmpsl
mov
inc
mov
xor
leave
push
mov
sbb
sarl
cld
lretw
dec
sbb
ret
fcom
pop
mov
push
rclb
xor
add
stc
arpl
psllq
mov
sbbl
mov
add
mov
mov
aad
dec
jne
push
inc
scas
addr16
and
pop
call
pop
pop
cltd
sub
adc
jle
pop
jne
xchg
inc
shrb
mov
adc
push
push
cwtl
xchg
cmp
push
and
jne
push
add
sbb
addr16
cmp
mov
clc
fisttps
sbb
inc
lods
cmp
test
gs
js
das
dec
scas
jne
jl
push
sub
imull
cmpsb
loope
adc
lods
repz
mov
xor
ja
cs
dec
xchg
lret
inc
xor
daa
push
insl
fs
lds
mov
divb
sub
mov
enter
cmc
pop
cmp
pop
rcll
push
loop
jo
pop
adc
fmul
ja
or
xor
mov
mov
jmp
je
xor
ss
subb
cmp
aas
cwtl
mov
push
push
or
mov
xchg
add
nop
mov
lret
sbb
hlt
cmp
xor
loopne
mov
orb
ret
int
mov
cmp
test
mov
and
lret
fistpl
inc
shll
cmpsl
xchg
cmp
and
xchg
outsb
daa
out
lock
xor
pop
mov
sub
imul
ror
mov
sbb
incb
push
mov
push
sbb
sub
in
mov
aam
jne
arpl
adc
ds
mov
dec
aad
popa
subb
test
sbb
mov
test
push
cs
sbbb
push
scas
inc
mov
or
je
sub
sbb
leave
iret
inc
pop
pop
inc
push
mov
mov
push
inc
inc
pop
call
or
inc
jno
push
sub
icebp
push
sbb
pop
outsl
push
dec
cltd
test
orb
pop
icebp
jmp
mov
jl
cmp
jnp
pop
dec
pop
xchg
movsb
sub
iret
std
sbbl
lods
sbb
xor
cmp
cltd
or
mov
jle
push
cmp
pop
shll
in
outsb
jle
outsl
daa
or
adc
xchg
popa
pop
jo,pt
lret
mov
pop
xor
fmulp
repnz
mov
shl
xchg
pushf
add
fidivl
jbe
push
out
jne
cmp
jns
xorl
mov
jmp
cmpsl
das
je
aaa
cmc
in
mov
notb
and
insl
adc
xor
push
pop
push
ret
cmc
sbb
mov
or
mov
pusha
pop
mov
mov
sarb
popf
in
add
test
pop
mov
jge
push
pusha
imul
sub
mov
jmp
or
and
je
mov
xchg
push
test
mov
pop
nop
lods
and
push
inc
lahf
and
inc
mov
and
cli
out
pop
jmp
not
out
jl
fsts
ret
mov
in
cmp
xadd
push
mov
xchg
pop
loopne
andb
adc
mov
add
pop
xchg
mov
aas
stc
mov
sbb
mov
dec
popf
dec
sub
xchg
add
pop
stos
dec
idivb
and
sbbb
out
je
mov
inc
adc
add
pop
pop
push
sub
imul
dec
sub
pmulhuw
sti
cmp
add
imulb
in
cs
add
mov
lret
mov
mov
lea
pop
add
xor
shlb
fstps
inc
test
or
xor
data16
stos
cmp
stos
push
inc
or
inc
push
xchg
movntq
jae
or
or
push
fnstenv
sbb
mov
and
repz
jg
cmp
add
mov
xor
lret
xchg
xor
pop
outsl
fldt
sub
div
and
enter
adc
incl
jl
shrl
lock
ffreep
adc
jl
pop
cmpb
andb
mov
push
mov
rclb
je
mov
sbb
xor
test
out
fists
lahf
rolb
push
mov
aaa
loope
sahf
push
dec
push
insl
xchg
cmp
loopne
repz
lods
xor
inc
jno
cmpsb
xor
in
and
in
jg
std
les
or
jle
stos
dec
push
adc
xchg
xor
xchg
repnz
sub
pop
sub
cmp
cmp
pop
popa
int
push
repz
jl
shl
dec
add
in
lret
movsb
int
cmp
mov
xchg
or
pop
int3
push
in
lds
shl
cltd
pop
mov
jnp
pusha
ror
or
mov
addr16
sub
gs
test
and
insb
jne
test
or
or
push
enter
in
out
out
mov
jns
fstps
outsb
jo
or
icebp
fidivrl
and
pop
pop
or
lahf
push
lcall
ficoml
or
add
ss
xchg
sbb
in
jb
jecxz
push
jg
xlat
ret
add
add
pop
cmp
subb
das
rcrl
mov
cltd
mov
adc
lahf
rol
xchg
push
xchg
push
dec
ljmp
sahf
out
test
mov
inc
mov
push
pop
bound
dec
mov
in
xor
mov
jno
sbb
lret
push
outsb
leave
pop
shr
iret
cmp
inc
mov
lock
xchg
mov
jae
fisttpl
mov
inc
pop
add
lahf
scas
adc
inc
add
rclb
es
fdiv
rorb
sbb
fmul
les
add
xchg
aam
hlt
bound
jle
outsb
sub
mov
cmp
adc
cmp
mov
adcl
mov
shll
sbb
mov
pop
sti
imul
or
xchg
fists
or
in
cmp
dec
leave
xchg
scas
lods
cmpsb
mov
popf
push
jecxz
push
shrl
outsb
loop
and
xor
into
mov
push
stos
jl
insb
fcmovne
xlat
jmp
cmp
into
cwtl
es
pop
imul
shrl
xchg
sbb
inc
mov
cmp
push
aas
aas
das
inc
xor
ds
sbb
dec
shlb
fmul
es
mov
vpaddw
mov
sbb
roll
shll
jmp
adc
cmp
pop
xlat
cmp
lret
add
rcrb
mov
push
mov
xor
cmc
sub
xchg
add
and
mov
dec
sbb
lods
stos
jmp
sbb
xchg
dec
setnp
cld
xor
fisubs
out
clc
dec
out
mov
push
in
scas
aam
cld
xchg
mov
fisubs
jle
mov
pop
xchg
jbe
pop
icebp
push
lahf
fidivrl
sbb
rcll
mov
or
mov
cs
push
cmpb
addr16
scas
in
lcall
fs
or
dec
shlb
addl
loope
stos
movsl
jo
pop
xchg
and
lahf
test
jecxz
divl
hlt
push
cmpsl
jecxz
popa
jle
cmp
and
sub
sub
mov
aaa
xlat
mov
pop
cltd
ljmp
fstpl
js
dec
adc
out
or
sarb
mov
pop
cmpl
lcall
mov
cmp
mov
out
inc
bound
into
pop
lcall
push
lahf
xor
test
lret
ds
xchg
idivl
jmp
push
add
cltd
mov
lcall
addr16
ret
ret
xchg
push
iret
stos
cmpsb
jno
adc
mov
cld
cltd
loope
jl
mov
hlt
mov
jns
int
arpl
scas
jne
and
adc
push
cmp
dec
mov
mov
pushl
mov
mov
push
push
add
int
mov
adc
jp
jmp
ret
pop
inc
rorb
gs
ss
mulb
pusha
stos
in
pop
ret
xchg
adc
adc
mov
cmp
ljmp
pop
lock
pusha
inc
in
mov
cwtl
push
in
push
popf
push
mov
xchg
pop
repnz
fmull
into
ja
cwtl
xchg
lds
pop
fstl
cmc
push
in
cmp
sub
repz
mov
andl
xor
jo
out
aaa
cmp
pop
lahf
lahf
nop
sub
xchg
inc
int3
or
stc
and
ja
into
ss
mov
push
xor
fstps
push
out
xchg
xchg
mov
jbe
cmp
loope
mov
sub
stos
add
or
sbb
sub
push
int
push
and
push
in
imul
dec
enter
and
mov
xchg
aaa
mov
cmpsl
mov
mov
sbb
imul
cmpsb
test
ljmp
push
sbb
frstor
push
sub
daa
and
bound
ss
adc
or
scas
inc
xchg
cmp
andps
adc
jae
roll
sub
cltd
das
cltd
insl
ds
cmpsl
push
mov
add
imul
rcl
stos
push
movsb
xor
addr16
push
pusha
push
sbb
mov
mov
and
jb
jmp
pop
pop
xorb
xchg
cld
sub
mov
in
icebp
arpl
fs
pusha
ffree
cmc
movsb
mov
ss
mov
xor
adc
aas
inc
xchg
shr
jecxz
outsb
pop
mulb
fwait
repnz
xor
mov
dec
mov
xchg
jle
aas
sub
and
incb
sub
add
adc
mov
pusha
data16
and
push
or
aas
jne
mov
cmpsl
lods
and
outsl
insb
and
and
popf
int
repnz
out
lds
ret
pop
pop
movsb
sarl
jns
dec
xor
add
inc
mov
cmp
lret
mov
lds
pop
jae
adc
negl
ret
std
pushl
subb
mov
test
jle
cmp
aaa
bound
add
mov
lock
insb
in
scas
dec
xor
lods
push
cmpsl
call
enter
icebp
pop
cmp
jge
mov
sub
ret
fiaddl
movhps
in
mov
shl
movsl
push
ja
cmp
aas
add
lods
jb
mov
jp
and
out
scas
or
push
mov
cli
jbe
fisttps
jmp
xchg
push
test
xchg
push
xor
fnsave
and
notb
and
mov
ds
mov
adc
mov
add
or
gs
mov
rclb
and
mov
enter
xchg
stc
jle
imul
lret
aaa
sub
scas
das
cmpsb
hlt
jae
dec
loop
cmp
dec
pop
sbb
cmpsl
pop
fildll
lock
or
mov
sub
fisubrl
push
aad
mov
cmpl
popf
cs
faddl
pop
push
mov
movsl
mov
and
jge
mov
jb
es
shrb
loop
lods
int3
mov
sub
fimull
and
or
movsl
fsubrs
dec
pushf
imul
push
imul
sub
mov
mov
sub
sbb
insl
pop
xchg
outsl
lret
loop
add
testb
xchg
add
xor
xor
ficompl
nop
or
cld
enter
pop
inc
leave
pop
int
ss
int3
inc
mov
xchg
mov
pop
adc
xchg
xchg
xchg
lahf
push
rcll
imul
orb
pop
dec
pcmpgtd
xor
inc
dec
stc
cmp
inc
sbb
outsl
icebp
imul
scas
aad
add
adc
insl
enter
lret
xor
dec
add
jp
pop
test
stc
xchg
pop
sub
jmp
adcl
rcrb
imul
aas
es
and
pop
inc
inc
stos
int
xchg
andb
inc
jbe
icebp
adc
inc
xor
aaa
je
xchg
ret
rcr
ja
sti
and
sub
rcl
mov
jmp
adc
inc
insl
in
jecxz
cmc
push
inc
sub
daa
xor
cmp
pop
das
cmp
data16
jmp
sbb
ja
mov
rcrl
add
out
sbb
xor
pushf
sbb
push
sub
std
fnstsw
mov
or
mov
cli
xor
inc
int3
xchg
jno
push
jns
xor
ret
jg
loop
loop
sbb
fisubrl
out
and
cmp
add
cmp
cmpsb
push
aad
dec
cs
and
ret
ret
and
or
add
add
sbb
adcl
inc
xchg
and
ret
mov
ret
add
push
fistpll
loopew
dec
int3
inc
mov
rorl
icebp
rorb
call
xchg
js
pushf
imul
sub
ds
test
mov
in
push
sbbb
sti
mov
xor
mov
arpl
mov
jno
addr16
cmp
xchg
cmp
aad
cwtl
xor
fwait
pop
xlat
bound
and
sub
add
frstor
cmc
pop
or
xor
pop
dec
pop
lret
or
comiss
scas
mov
inc
add
scas
adc
lcall
test
jle
neg
xor
rorl
outsb
mov
inc
insb
xchg
lds
push
daa
lods
add
mov
pop
xor
sbb
inc
fimuls
into
std
enter
or
mov
cmp
ret
jo
aaa
inc
insb
int3
scas
xchg
inc
fdivr
popl
sbb
in
and
out
mul
imul
jle
mov
ljmp
xchg
mov
stc
je
push
test
aas
pusha
cmp
adcb
adc
mov
pop
and
mov
jns
das
jp
repnz
xor
jecxz
inc
inc
lcall
pop
movsb
popa
fbstp
xchg
cmpsb
mov
lahf
xchg
cmc
rcl
loop
sbb
lcall
aas
cmp
outsl
lret
int
jnp
xlat
and
jns
mov
cmp
aam
out
jbe
sbb
dec
add
sub
push
add
cmp
sub
lea
jle
adc
adc
mov
cld
mov
xchg
dec
out
int3
pop
cli
aaa
clc
push
fs
data16
lock
rol
in
pushf
push
xchg
add
in
cmp
push
hlt
xchg
flds
mov
int
aas
mov
addr16
popa
push
mov
pop
loope
pop
xlat
bswap
cwtl
in
int3
and
arpl
pop
mov
pushf
sub
xchg
lahf
or
jns
push
in
imul
dec
inc
out
pop
fwait
xor
div
loopne
jbe
fildll
mov
adc
sub
push
and
sub
popf
aas
out
enter
out
dec
lcall
outsl
fistpll
aas
lahf
imul
mov
dec
out
pop
ljmp
das
lahf
aas
out
dec
lcall
outsl
fistpll
aas
lahf
imul
mov
dec
out
pop
ljmp
scas
lahf
aas
jg
outsl
pop
jg
lahf
ljmp
outsl
fisttps
mov
mov
das
mov
pop
iret
outsl
pop
jg
pop
xor
sbb
and
insb
xchg
pop
jecxz
repz
mov
push
xchg
cld
xchg
pop
fcoml
jae
push
lods
pushf
and
pop
jecxz
repz
sub
sbb
or
cld
inc
in
push
fsubrl
jae
sub
mov
jl
insb
adc
cmp
sub
sbb
or
cld
inc
iret
jo
add
add
loop
and
and
pop
and
jb
enter
and
pop
int
mov
shl
add
sub
loop
icebp
dec
add
and
lods
dec
lret
test
jle
stos
mov
cmp
mov
pop
push
push
push
call
fsubl
in
lock
stc
testl
sbb
or
jno
imul
pop
fdivrl
cs
mov
xchg
lahf
bound
adc
mov
sub
push
push
int3
jo
mov
lahf
xchg
and
int3
fisubs
rorl
stos
adc
and
and
iret
or
mov
insb
repz
xchg
dec
repz
sub
sbb
or
cld
inc
in
sti
fsubl
dec
mov
cmp
xor
es
js
push
hlt
cld
add
adc
push
lret
test
xchg
cmp
imul
cltd
and
inc
mov
inc
stc
inc
sbb
and
sbb
or
cld
inc
in
push
fsubl
jae
add
jl
insb
rcrl
repz
sub
sbb
or
cld
inc
in
push
fsubl
jae
add
jl
dec
test
sahf
arpl
testl
fcomip
cmc
out
in
test
jnp
and
dec
incl
push
mov
das
sti
and
lock
add
jb
popl
add
inc
stos
test
int3
cmp
adc
lcall
in
sub
test
notb
cmp
cld
mov
sbb
outsb
inc
inc
mov
push
dec
or
inc
and
and
das
lock
das
xor
mov
pop
jge
arpl
jmp
cmp
pop
stos
enter
fs
xor
lret
or
inc
lret
in
sbb
or
hlt
cmp
daa
test
inc
jb
popf
dec
imul
xor
adc
mov
icebp
lret
push
push
mov
roll
das
loope
ffreep
adc
cmpsb
pop
jns
dec
xor
gs
cmp
lahf
mov
adc
xchg
push
mov
loope
xchg
and
jb
enter
sbb
test
or
gs
fiadds
jge
sbb
sbb
push
push
aad
add
mov
cmp
pushf
popf
outsl
mov
xor
bound
xchg
xor
cwtl
in
leave
or
sahf
pop
or
cmp
testl
add
leave
or
mov
jne
mov
xchg
xor
std
adc
push
and
mov
or
inc
orb
lret
imul
cltd
out
lea
mov
imul
pop
jge
jne
test
hlt
push
mov
and
fld
or
rcll
inc
xchg
dec
movsl
adc
inc
out
jns
xor
and
or
cmp
jecxz
mov
insl
mov
inc
pop
mov
fcmovnb
hlt
xchg
jo
adc
imul
in
and
sbb
jle
call
sub
cmp
add
in
push
cmp
imul
sbb
mov
out
pop
push
jo
adc
dec
mov
sub
xor
mov
pusha
js
adc
outsb
pop
roll
enter
push
lret
addl
leave
fld
mov
pop
xchg
inc
xor
push
sbb
inc
sbbl
inc
daa
call
sub
in
xchg
aad
lret
inc
pop
lods
call
lods
inc
shr
rorb
bound
xor
stc
cs
pop
mov
push
lea
pmaxub
cmc
and
sbb
xchg
add
sub
cmp
outsl
sbb
and
in
sti
addr16
sbb
rcrb
call
xchg
xor
mov
push
push
push
mov
dec
out
pop
scas
inc
pop
dec
movsb
push
and
pop
test
fdivrp
fstl
aam
or
shrl
lcall
pop
lcall
out
fnstsw
stos
loop,pn
clc
fistpll
inc
inc
loopne
push
add
mov
aas
je
repnz
lock
push
pop
movsl
into
or
and
jbe
popf
fnstsw
mov
pop
pop
test
fstpl
pop
out
sbb
movsl
push
into
jae
and
mov
imul
push
xor
lods
jmp
outsl
in
jge
push
out
sub
pop
std
jnp
lret
subb
idiv
xchg
rcrb
xchg
je
xchg
jnp
movsl
or
fcmove
lret
leave
insl
in
push
sub
jno
sti
inc
rorl
add
int3
jp
pushf
rcrb
je
fldt
push
xor
mov
sub
movsb
xorl
loope
sbb
shlb
cmp
and
dec
pop
call
outsb
cmpsl
nop
mov
stos
sub
cwtl
pop
pop
mov
jecxz
lcall
sbb
adc
jnp
jmp
sbb
inc
fs
pop
add
scas
mov
jb
shll
and
std
aaa
cwtl
in
jno
mov
mov
leave
dec
mov
lret
xor
aad
testb
sbb
fs
xlat
add
jl
daa
mov
cmp
movsl
sbb
daa
sub
sahf
jecxz
mov
movsl
es
clc
loope
pop
mov
add
mov
jg
loope
mov
mov
aad
jmp
cmp
xor
jp
jo
shlb
and
cmpsl
outsb
xchg
adc
sub
jecxz
loop
cmpb
jns
push
sbb
cs
out
adc
cwtl
mulb
pop
jb
inc
fildll
adc
jg
or
mov
sub
mov
mov
sub
ret
out
inc
jb
call
ds
mov
scas
scas
cs
rcrl
mov
ficompl
jle
add
sbb
push
cmpsb
push
lods
push
jl
mov
mov
int3
imul
lea
shrb
cmp
ds
xchg
les
stc
stc
in
mov
ror
mov
jbe
add
das
and
rorl
arpl
iret
mov
xchg
js
adc
inc
ljmp
jno
lods
mov
sbb
cltd
sbb
sbb
mov
jo
mov
pop
or
jae
je
rorb
sub
xchg
cmp
ljmp
mov
repz
push
or
stc
and
pop
bound
or
test
loope
jns
mov
add
inc
xchg
inc
ss
subl
cmp
xchg
sarl
icebp
push
insb
sahf
mov
pop
out
mov
pop
adc
and
fldenv
jb
movsl
add
xchg
loope
mov
shll
sbb
sbb
inc
mov
push
lock
cmpsl
cmp
sub
mov
aas
cmp
out
push
rorb
pushf
fidivl
sub
ljmp
inc
mov
mov
mov
sbb
xlat
incb
iret
mov
cmpsb
adcl
or
or
push
jmp
das
notb
or
mov
scas
push
push
repz
sti
pushf
dec
int3
fisttpl
out
jae
and
in
int
add
les
icebp
dec
push
imul
in
hlt
popf
loop
testl
dec
test
dec
out
int3
adc
fistpl
dec
lcall
test
add
mov
aam
subl
sub
mov
cmp
cld
sbb
cwtl
jg
js
pop
stos
nop
jmp
adc
or
out
mov
mov
jecxz
push
push
sub
movl
jnp
imulb
sub
and
flds
movsl
shlb
or
cmp
lcall
sbbb
adc
rorl
mov
das
pop
jnp
ficoml
arpl
adc
xchg
data16
mov
mov
std
negl
push
clc
add
xchg
jmp
aad
je
ret
popf
mov
lock
gs
movsl
add
mov
testl
jmp
fldcw
aam
mov
std
pop
leave
fcmovbe
push
fnstenv
aas
adc
pushf
sub
ds
add
and
xchg
mov
cmp
iret
xor
testb
jecxz
dec
ficoms
pop
testb
lea
mov
cwtl
mov
dec
mov
arpl
pop
xchg
fildl
push
cs
jno
pushf
in
mov
push
addl
aas
push
lret
adc
mov
dec
sbb
shlb
outsl
pop
ret
and
es
stc
int
ret
adc
xor
pandn
sbb
cld
pusha
outsl
int3
mov
std
pusha
xchg
mov
mov
roll
or
jne
out
inc
fsincos
jge
aas
call
mov
and
ljmp
cmpsb
and
push
cld
inc
cmp
sbb
xchg
mov
inc
and
into
mov
mull
repz
fidivs
or
scas
lea
pop
inc
ja
add
mov
fstpt
mov
in
bound
lcall
shr
ds
pop
cmpsl
pop
sub
adc
dec
adc
sbb
and
test
mov
jbe
or
rcrl
and
stc
fdivrs
mov
fdiv
addb
filds
cmp
es
call
inc
lock
xchg
lret
push
xchg
pop
xor
mov
in
pushf
test
insl
addr16
jo
xor
ljmp
out
add
xchg
mov
out
mov
push
repz
jg
ror
and
cwtl
jmp
ljmp
outsb
es
into
data16
and
sbb
push
imul
ss
cltd
sub
es
add
cmc
dec
cmc
sub
call
pushf
sbb
cmc
lahf
jo
cli
lcall
mov
mov
pop
mov
loop
cmp
out
mov
inc
add
loopne
int3
adc
mov
aad
xchg
aaa
jns
and
xor
add
or
imul
addb
fistpl
and
sub
mov
cs
push
dec
dec
popf
in
dec
and
jo
mov
xor
inc
sbb
push
fxch
add
dec
jmp
scas
jne
shlb
fbld
sub
ljmp
mov
daa
jmp
mulb
mov
mov
mov
dec
pop
lods
scas
lock
pop
pop
push
fstpl
xor
inc
adc
and
lahf
dec
ja
leave
jno
aaa
sbb
ds
outsb
mov
imul
inc
xor
stos
jno
lds
iret
scas
out
cmp
lret
or
dec
add
aas
inc
mov
push
jge
lret
adc
and
inc
nop
gs
jle
roll
mov
fnsave
inc
fstpt
xor
adc
cmpsb
mov
ret
push
adcl
shrl
adc
aaa
cmp
cli
fdivp
jmp
shr
fnstcw
sub
xchg
sbb
divl
ljmp
das
mov
sbb
xchg
nop
jp
pop
sub
mov
xchg
orb
cwtl
jnp
popf
test
cld
fisttpll
mov
pop
in
add
mov
and
xchg
aad
sbb
mov
lret
and
mov
es
dec
or
enter
stos
daa
and
pusha
mov
mov
cltd
jns
and
mov
cwtl
jne
pop
in
lret
lock
mov
negb
mov
bound
xchg
pop
inc
lret
push
out
fdivs
sbb
clc
xchg
bound
lods
int
xchg
movl
out
or
push
cld
insb
xor
aam
xchg
hlt
loopne
xchg
mov
adc
push
jl
push
xchg
push
sbb
mov
arpl
test
or
das
ret
popf
adc
sarl
sbb
dec
fnstenv
and
inc
testl
jbe
and
aam
add
clc
pop
pusha
mov
pop
push
pop
out
popf
jne
idivb
addr16
insb
inc
into
cmpsl
mov
in
xor
fidivl
dec
lock
lods
scas
movsb
loopne
in
jge
decb
cmpb
xor
pop
push
cmc
or
cltd
pop
fdivl
adc
mov
rorb
inc
xchg
push
not
daa
out
xchg
mov
lea
subb
mov
pushl
sbbb
sbb
in
outsb
shrl
mov
pop
pusha
adc
outsb
jne
pop
mov
fidivl
add
push
pop
dec
movsb
mov
or
popf
shll
fs
fwait
and
aaa
aas
push
jb
notl
add
fcoml
sbb
test
les
cli
movsl
sub
rcll
lcall
xchg
adc
test
sbb
scas
loope
mov
data16
cmp
pop
test
cmpsb
movl
jmp
sti
sub
xor
loop
mov
mov
pop
js
add
repz
test
sub
cmp
mov
fwait
xchg
inc
je
adc
scas
pushf
ja
jg
sti
cmp
roll
hlt
push
cmp
mov
dec
or
out
add
nop
sarl
stos
fs
mov
mov
cld
incl
ds
push
push
mov
icebp
in
mov
mov
xor
das
dec
adc
push
je
add
lret
popa
aam
scas
test
xor
pop
push
xlat
mov
pop
pop
mov
jle
add
and
popf
fisubrl
inc
shll
push
ret
insl
xchg
or
in
iret
mov
shrl
or
push
fwait
es
popa
stos
das
sub
std
xor
jmp
dec
adc
push
mov
xchg
aaa
mov
mov
pop
push
loop
jb
sarl
test
push
mov
cltd
inc
div
or
push
xorl
mov
fisttpll
scas
lcall
pop
sub
cmpsl
dec
cmp
std
adc
in
jl
pusha
insl
loope
les
mov
pushf
js
into
and
or
ljmp
test
sti
mov
jbe
scas
and
imul
jle
stc
cmp
in
incl
rolb
sbb
and
int3
pushf
outsl
push
or
mov
jmp
popa
mov
or
xchg
push
push
cmp
bound
mov
push
lods
icebp
in
daa
mov
shll
push
in
cwtl
sbb
std
daa
and
push
mov
jmp
mov
mov
es
les
cmp
push
and
mov
adc
mov
xchg
popa
lods
lock
fnstsw
pushf
ja
pop
mov
inc
xchg
inc
or
ljmp
shlb
std
clc
and
and
pop
lahf
cmp
sub
enter
mov
mov
dec
push
lcall
lock
push
addb
mov
sbb
ficoml
scas
rol
mov
ljmp
gs
popf
mov
aad
popa
mov
pop
add
pop
mov
stos
lret
jae
daa
dec
es
dec
xor
xor
and
pop
adc
or
leave
mov
sub
dec
scas
xor
or
in
sarl
roll
test
push
leave
mov
loope
sbb
shll
pop
adc
stos
push
movsl
in
inc
cmpsb
sbb
jnp
xor
dec
sbb
cwtl
mov
test
lret
in
dec
loopne
sub
pop
rcl
cmp
fistpll
in
inc
push
push
fimull
xor
cmp
sbb
dec
inc
fistps
pop
adc
push
sub
mov
dec
fldl
leave
or
arpl
cltd
add
adc
cltd
mov
mov
cld
sub
aam
jnp
scas
add
or
sub
rcr
adc
sub
mov
cltd
cld
test
fistpl
and
sub
dec
out
in
popf
pop
out
xchg
imul
or
sbbb
pop
mov
popf
test
clc
clc
leave
cmp
jbe
sahf
inc
dec
lret
andl
sub
xchg
dec
push
sub
push
arpl
insb
add
orb
add
push
mov
jnp
andl
mov
inc
fstpl
pop
in
in
mov
in
adc
jae
mov
xchg
mov
adc
or
std
sbb
cwtl
xchg
aad
lahf
xor
sub
jecxz
insb
std
rcll
xchg
daa
sahf
inc
cs
jns
movsb
notl
arpl
inc
es
pop
pop
negb
sbb
and
add
ret
leave
mull
lds
mov
outsb
or
das
add
dec
das
xrelease
loope
cmovg
notl
test
sbb
imul
out
jp
clc
jnp
sub
insl
cmp
test
cmp
test
cltd
hlt
movsl
sarb
mov
and
aad
inc
push
sbb
fidivrl
dec
addb
pushf
jg
pop
les
pop
inc
pop
dec
scas
aad
add
repz
mov
testl
mov
inc
add
xor
lods
out
xchg
and
aas
jle
sub
cmp
adc
fildl
pop
dec
jnp
sub
leave
mov
mov
adc
iret
bswap
jp
and
mov
xor
mov
mov
cld
idivb
sbb
pop
cmp
lcall
push
arpl
mov
xor
sub
enter
test
or
xchg
lods
addr16
insb
stos
bnd
and
xchg
inc
adc
negl
mov
and
jp
imul
lock
push
stc
jp
int
sahf
clc
mov
inc
or
ja
cs
mov
or
hlt
sbb
or
push
jge
jecxz
enter
sbb
push
cmp
xor
mov
push
cwtl
or
or
mov
push
mov
inc
adc
cmpl
xchg
jae
pop
lret
lea
ret
xchg
std
mov
and
jo
fyl2xp1
or
out
push
iret
jae
pop
in
loopne
inc
xorb
outsl
clc
sub
movsl
or
fidivl
or
push
cmp
adc
in
jecxz
adc
nop
js
rorb
sti
test
cli
jno
and
test
clc
call
sub
xor
pop
and
mov
sbb
sti
push
push
js
mov
in
sahf
adcl
or
sbb
sub
fdivs
push
dec
arpl
sbb
pop
or
hlt
push
data16
loope
mov
jecxz
jmp
out
cmpsl
testb
in
adc
aas
pop
xor
dec
push
or
addr16
mov
add
test
test
dec
dec
pop
lcall
mov
xor
jmp
mov
mov
cwtl
cld
sbb
xor
add
mov
leave
sub
mov
and
xor
xchg
ret
lods
hlt
int3
xlat
insb
xor
dec
cmp
push
or
push
adc
add
rcrb
add
je
mov
std
hlt
mov
les
je
enter
in
popl
int
jmp
add
mov
rol
movl
xor
fldt
lods
cld
pushf
fs
insl
nop
mov
in
push
dec
adc
repz
cmpsl
lock
fimuls
push
jnp
mov
popa
int3
inc
sbb
call
loope
mov
insb
inc
bound
inc
outsb
out
enter
jb
push
adc
addr16
movhps
push
xchg
mov
outsb
pop
push
push
sahf
int
mov
push
sub
sub
mov
jmp
loop
pop
sbb
mov
jecxz
xchg
adc
enter
pop
add
push
xchg
push
nop
and
xchg
lahf
mov
xor
mov
sahf
lock
adc
cmp
mov
das
pop
cmc
mov
pop
mov
cltd
add
add
dec
jnp
mov
and
pop
xor
mov
das
xchg
or
ds
add
test
mov
test
jae
pushf
xchg
loopne
out
scas
cmpb
sbb
and
adc
das
sub
push
mov
mov
pop
aad
je
mov
push
sub
fidivrl
cld
mov
add
shlb
fnsave
ja
inc
cmp
cmp
push
cmpsl
dec
mov
mov
sub
xchg
jg
push
sti
pop
sub
sbb
scas
inc
inc
cmp
xor
jle
jg
push
jecxz
push
movsb
dec
in
scas
jne
nop
and
lods
imul
stos
pop
mov
jecxz
sub
pop
adc
mov
rcll
ja
jae
push
sub
mov
sub
sbb
pop
mov
sbb
in
add
pop
in
fwait
jge
in
sbb
inc
mov
lret
dec
pop
and
repnz
aas
lock
jle
sbb
addr16
sub
jecxz
push
movb
xor
ret
cmpsb
dec
xor
leave
dec
mov
cmp
test
cli
and
in
lea
xchg
push
pusha
inc
and
in
inc
and
jnp
int
and
pop
lock
mov
arpl
mov
andl
inc
sbb
xchg
fwait
rclb
pop
push
mov
sub
mov
movsl
xchg
cwtl
jl
and
adcb
ficoms
rep
test
xor
pop
add
mov
je
push
adc
outsl
add
adc
icebp
adc
repz
lcall
mov
popa
mov
mov
aas
sbb
popf
ret
jg
sbb
das
fwait
and
inc
or
push
inc
pop
jne
imul
inc
pop
pop
pusha
pop
dec
jne
push
mov
push
push
mov
push
mov
jne
push
scas
jle
xchg
pop
pop
jp
dec
mov
test
filds
fdiv
jns
jbe
push
sbb
hlt
into
jne
rcll
push
shl
negb
in
sbb
movsl
lcall
js
rcrl
dec
repz
sub
sbb
or
cld
inc
in
push
fsubl
jae
add
jl
insb
rcrl
repz
sub
sbb
or
cld
inc
in
push
fsubl
jae
add
jl
in
fstp
sti
dec
idivl
mov
fsubl
jp
pop
lods
adc
insb
aaa
pop
pop
dec
mov
subl
and
cld
mov
int3
add
jnp
imul
cld
dec
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
es
lods
ret
jnp
fisttpl
popf
jl
add
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
das
add
add
add
xchg
xchg
add
add
add
add
add
mov
test
dec
add
mov
incl
push
add
add
add
add
add
add
inc
add
add
add
add
add
and
mov
add
add
xor
inc
add
add
add
jge
jnp
mov
dec
add
add
and
push
add
stos
add
and
inc
add
add
jne
insb
add
add
inc
add
aaa
add
add
add
add
add
add
add
add
add
jge
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
movsl
add
add
add
mov
inc
add
incl
icebp
add
cwtl
add
add
sbb
dec
add
add
add
add
adc
js
incl
adc
add
or
or
filds
push
add
mov
push
pop
add
add
sub
add
dec
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
clc
add
cmp
push
add
add
add
stos
add
sti
add
add
add
add
pop
add
add
add
add
add
add
jge
dec
add
add
and
test
dec
add
add
add
add
fadds
dec
add
push
add
add
add
add
inc
add
add
ltr
add
add
add
testb
add
add
add
add
add
mov
jnp
add
inc
add
sub
dec
add
inc
add
adc
add
das
add
add
rolb
jmp
inc
add
push
add
add
xor
and
add
add
in
add
add
add
add
add
add
int3
add
dec
add
add
leave
add
add
add
add
add
add
mov
mov
test
js
mov
pop
add
cltd
add
add
add
add
sbb
imul
and
xor
mov
inc
add
add
jo
and
dec
add
add
add
add
add
add
add
iret
add
mov
inc
add
add
add
aas
add
add
add
add
sbb
mov
add
add
add
add
add
add
add
add
add
add
test
add
add
sub
stos
add
add
add
add
add
add
add
add
jge
enter
jno
int3
add
add
daa
add
xchg
add
add
add
int3
add
sub
in
add
add
incl
data16
xor
add
add
lods
shr
int
cmp
adcl
pcmpgtd
dec
mov
or
in
mov
mov
mov
or
mov
cmp
cmp
fisubrl
lcall
inc
jp
cwtl
mov
sub
sbb
cs
mov
jbe
jno
inc
cvtps2pd
mov
pop
pop
pushf
lcall
or
int3
cmpl
out
fnstenv
das
adc
cmc
fs
xchg
mov
jo
dec
iret
in
cmpsb
push
mov
aam
inc
test
std
loope
rcl
or
xor
sub
xchg
daa
lea
push
mov
ss
mov
adc
mov
jne
ds
icebp
lds
dec
jno
mov
xor
mov
xchg
add
scas
jbe
xchg
and
adc
jmp
aad
data16
mov
ret
cmp
jnp
in
outsl
adc
lret
negl
or
xorl
pusha
in
insl
popa
or
push
add
mov
mov
or
adc
xor
lahf
cmc
cmp
inc
ds
out
mov
aad
mov
push
incl
rcr
iret
pop
rol
adc
or
add
leave
movsl
xchg
hlt
mov
aaa
add
dec
aam
xlat
cwtl
mov
rorl
push
jno
push
jmp
inc
jg
jp
iret
sbb
add
stc
mov
adc
iret
jmp
in
int3
ss
and
sahf
insb
in
gs
ud0
pop
mov
imul
psllq
mov
lock
cmpb
loop
push
xlat
mov
div
cmp
and
sub
enter
arpl
pop
cmpsb
sti
sar
cli
fcoml
shrl
dec
aam
mov
idivb
push
lea
test
inc
cmc
mov
cmpb
cld
add
rcrb
jne
ret
in
jecxz
pushf
test
aad
or
jmp
jle
jmp
dec
stc
inc
or
xor
push
push
jb
pop
jbe
dec
cmc
cld
and
cld
movsb
insl
movsl
mov
xor
iret
leave
movsl
pushf
xlat
mov
cltd
test
fcompl
in
fisttps
dec
sub
insb
inc
cmpl
jl
jne
roll
xchg
mov
mov
mov
pop
fsubrl
loop
push
orl
mov
lea
adc
stos
imul
adc
mov
sbb
imul
push
out
mov
cmp
jo
adc
mov
hlt
cmpsb
mov
stc
push
aad
adc
jge
in
scas
ljmp
lds
data16
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
