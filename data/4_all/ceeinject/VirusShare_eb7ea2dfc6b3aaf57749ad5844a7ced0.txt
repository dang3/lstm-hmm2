adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
lcall
outsb
adc
and
sbb
iret
cmp
sub
pop
xchg
dec
test
push
lcall
ficoml
ljmp
hlt
and
pop
lock
jp
push
adcl
mov
adc
ljmp
nop
push
mov
and
shl
sbb
xor
mov
sub
cmp
sbb
lock
push
jne
ret
call
jg
jg
lahf
lds
cmp
or
lock
xchg
hlt
gs
jbe
dec
cmpsl
in
mov
jno
sub
dec
aad
les
repz
sbb
mov
jp
push
fcomps
xor
cmp
or
rdpmc
aad
movsl
test
icebp
shrb
xchg
pop
mov
and
sbb
cmp
mov
fnstsw
jb
push
std
lret
push
insl
and
mov
xchg
inc
cmpb
test
aad
mov
pop
push
push
xchg
inc
mov
adc
repz
and
xor
inc
xchg
push
test
push
notb
cmp
xor
and
push
lods
jno
push
ljmp
cmpsb
dec
xchg
pop
loope
ret
pop
shl
jmp
aad
fiaddl
mov
lret
bound
mov
xchg
imul
rorb
icebp
call
push
adc
sbb
cli
xor
or
cmp
sub
pop
xchg
dec
test
push
lcall
ficoml
ljmp
cmc
sub
pop
xchg
dec
test
push
lcall
mov
clc
bound
sarl
dec
fcmovnbe
xchg
xor
push
add
xchg
mov
aaa
sub
or
sbb
pop
mov
fstl
jge
cmp
repz
xchg
or
in
stc
cmp
inc
orb
jnp
sub
push
shld
push
sbb
xor
stos
enter
adc
cli
rolb
out
in
jno
rcrb
add
fwait
or
roll
xchg
mov
inc
cmp
lods
sub
in
out
mov
dec
loopne
and
sarl
xor
clc
lds
dec
or
push
dec
xor
jecxz
adc
aad
test
rcr
sahf
addb
out
pusha
out
mov
cwtl
cmp
ret
push
pop
cmp
xchg
jmp
push
push
cld
pusha
test
repz
movsl
imul
lea
and
inc
and
mov
xor
xor
xlat
insl
jle
pop
outsl
jecxz
adc
mov
xor
cmp
push
xor
or
test
andl
dec
fnstsw
push
repz
and
incb
jne
inc
pop
fwait
mov
cltd
iret
sarl
cwtl
cmpsl
lahf
jecxz
je
mov
sbb
and
push
outsb
inc
jle
fnstsw
cmc
mov
pop
ljmp
aam
mov
repz
add
mov
mov
mov
out
and
jae
hlt
mov
push
sbb
jp
imulb
int
sbb
mov
jge
cmp
or
push
pop
dec
mov
fcompl
cld
bound
push
add
mov
mov
aam
rcll
jp
mov
adc
lcall
xchg
jae
bound
pushf
xor
mov
je
cli
fidivrs
and
popf
cwtl
xor
imul
push
cmpsb
call
in
scas
jl
and
jg
lods
sbb
xchg
jmp
mov
jmp
mov
mov
or
out
xor
mov
jns
fldl
daa
mov
pop
addb
mov
ret
mov
roll
imul
repz
fisubrs
adc
aad
inc
ljmp
stos
sub
jmp
ficomps
cmp
loope
push
bound
cltd
aaa
adc
xchg
out
std
jmp
mov
pop
aad
imul
stc
sbb
cwtl
repz
lret
pop
inc
scas
jae
push
icebp
mov
push
add
sbb
pushf
lds
repnz
sub
cmp
fistps
test
aam
repz
data16
loope
pop
in
popf
test
jae
mov
cmpsl
add
fidivs
cld
insb
push
xor
adc
xchg
pop
into
xor
xor
sbb
sub
daa
inc
popa
fwait
push
mov
insl
push
ret
dec
test
mov
call
lcall
dec
xchg
sbb
and
push
inc
leave
add
test
cmpsb
mov
pop
pop
and
xorb
push
push
mov
dec
into
inc
push
imul
xor
jge
popf
cmp
adc
aam
push
jno
and
pop
mov
dec
mov
jl
ret
enter
scas
sub
outsb
inc
sub
fnstcw
push
cli
sub
stos
inc
jbe
out
ficoms
fstpt
mov
scas
mov
mov
mov
stos
dec
stos
lea
mov
pop
std
xorl
insb
ds
popf
popa
ret
test
dec
fcomip
push
std
test
cmc
xor
mov
std
add
cmc
outsl
xor
mov
add
add
lahf
jecxz
sub
arpl
cli
mov
sbbl
std
add
inc
adc
pop
mov
call
bound
fimuls
xchg
adc
js
aaa
subb
nop
push
loop
xor
fstpt
jmp
or
rolb
push
sti
pop
lea
pop
cmpsl
cmpsl
sub
lea
cmp
insb
mov
fs
iret
inc
xor
jmp
lock
jns
ja
inc
out
push
dec
jge
fadd
sti
stos
in
jl
test
bound
lods
in
pop
out
sub
cmp
pusha
or
sbb
aad
push
add
dec
jmp
sub
lods
push
hlt
pop
adc
sti
fs
arpl
jge
rcrb
pop
and
xor
mov
sbb
pop
sbbb
cmc
std
bnd
pop
popf
scas
rorb
add
loope
sub
outsl
add
insl
enter
mov
mov
imul
mov
dec
call
xchg
push
ss
mov
cmp
pushf
pop
das
dec
pop
cmp
rorl
fmuls
lret
outsl
xchg
mov
jae
xchg
in
xor
pop
or
scas
xor
out
adc
cmpsb
loopne
call
adc
cmpsl
dec
lret
jbe
add
ret
negl
cmpsb
xchg
pop
cwtl
repz
loopne
cmp
push
subl
into
pop
pop
xchg
dec
push
aaa
jae
or
inc
lds
add
lods
jg
ss
cmc
data16
out
movsl
mov
iret
lahf
mov
or
mov
jecxz
jecxz
ss
xchg
jne
jo
bound
push
mov
hlt
add
loope
fldenv
insl
cmpsl
cmp
lahf
mov
out
adc
imul
xorl
loop
bound
lds
fisttps
ja
out
add
push
in
add
jno
sbb
aam
mov
stos
pop
loope
mov
mov
int
sbb
sub
jb
cmpsl
mov
pop
add
xchg
dec
jmp
icebp
inc
pop
loope
and
jle
cmp
int3
pop
repnz
nop
or
mov
mov
call
out
sbb
mov
and
xor
pop
dec
lahf
sahf
xchg
push
dec
mov
shlb
ss
xor
test
and
js
enter
mov
fsubrl
lods
aaa
cmp
mov
cmp
jbe
sub
std
cltd
xchg
xchg
xor
cwtl
adc
xchg
push
sbb
sub
inc
mov
adc
adc
lds
or
push
das
lret
out
push
enter
cs
fisttpll
and
cmp
jecxz
mov
ficoms
out
inc
pop
pop
movsl
pop
cs
popf
cmpsb
fnstenv
mov
inc
cltd
jl
lea
push
add
inc
cli
fwait
movsb
add
mov
jg
or
fidivl
inc
into
inc
movsb
push
adc
and
test
mov
xorl
loope
rorl
push
enter
jg
insb
inc
icebp
jmp
xchg
lret
xchg
pop
ret
jp
mov
std
mov
pop
jbe
or
mov
add
jnp
movsl
stc
jae
les
sub
add
lret
cmpb
or
fsubs
mov
idiv
jp
sbb
out
dec
cmp
aad
cltd
fsub
call
xorb
mov
shll
filds
icebp
pushf
add
cmp
xor
out
jae
scas
lret
ret
testb
fmulp
insb
test
dec
push
inc
sbb
xchg
mov
xor
daa
jno
movsl
sbb
or
scas
arpl
mov
loopne
xor
in
and
clc
adc
dec
les
mov
push
adc
inc
jge
push
popa
inc
addr16
jbe
or
sbb
mov
jae
movsl
jmp
ja
je
mov
call
into
cmp
subb
xor
out
das
add
mov
cmp
push
mov
bswap
dec
les
repz
mov
icebp
lock
push
jbe
aaa
shl
xchg
stc
xchg
jo
jae
push
lods
pusha
cmp
sahf
lahf
push
add
xchg
in
dec
mov
mov
or
js
cmc
push
pop
mov
mov
lcall
mov
rorl
adc
mov
std
in
sbb
enter
iret
outsb
test
enter
cli
mov
sbb
insl
jle
or
adc
jne
jmp
mov
and
mov
mov
mov
or
mov
xor
imul
test
aam
inc
repz
out
fbld
cld
and
mov
and
or
pushf
out
cmp
or
xchg
mov
pop
mov
and
std
iret
test
cmp
xacquire
push
mov
dec
mov
mov
cwtl
icebp
and
pushf
dec
cltd
test
lds
and
inc
icebp
in
mov
sbb
or
xchg
xchg
aam
sbb
xlat
js
leave
add
cmp
pushf
dec
sub
inc
mov
scas
pop
insl
push
adc
pop
enter
sbb
aas
or
dec
cmpsb
mov
ret
cld
mov
fdivl
jbe
inc
lret
push
pop
sub
cltd
shrb
jmp
dec
ljmp
fadds
push
and
sub
sub
adc
inc
js
scas
aas
jb
in
sub
xchg
dec
cld
jne
loope
scas
mov
add
jae
nop
mov
push
mov
or
fstl
popf
stc
clc
inc
imul
or
sbb
das
iret
mov
mov
xchg
dec
or
adc
xor
daa
or
inc
sti
mov
iret
pop
jg
bound
out
je
mov
jo
popf
cmpsl
lock
xor
lods
adc
nop
js
rcrb
mov
dec
pop
sub
arpl
fnstcw
test
xchg
cmp
repz
mov
push
push
iret
dec
jmp
jnp
imull
pop
mov
test
in
ljmp
fs
pop
daa
jae
adc
ja
call
rcl
inc
in
inc
rorl
outsb
int3
xchg
addr16
inc
cwtl
loope
mov
ret
pop
sarl
xchg
inc
push
xor
xor
push
mov
or
test
lds
dec
leave
rolb
jl
leave
leave
adc
sbb
mov
adc
outsl
and
mov
push
jae
cmpsb
and
mov
in
xchg
xchg
mov
mov
xor
int3
rcr
cmp
mov
mov
sti
in
shlb
scas
bound
xor
add
lcall
ret
mov
negb
lahf
xor
push
out
push
mov
call
cmpsb
loopne
fimuls
je
pop
fidivrs
arpl
xor
loope
and
and
in
aas
pop
cmpsl
add
popa
push
adc
imul
xchg
std
aas
jl
and
jmp
xchg
dec
fstpt
sbb
in
push
leave
mov
add
and
fistpll
mov
rclb
fcomps
jns
das
xchg
sbb
sbb
xor
mov
bound
add
fwait
xorl
test
popf
sub
outsl
and
push
in
and
xchg
jb
jnp
in
rolb
pop
mov
sarl
andb
cltd
out
mov
push
sbb
mov
jl
das
pop
loop
mov
sbb
adc
ljmp
jle
mov
add
insb
dec
ret
pusha
xlat
fistpl
pusha
push
ret
ficoml
dec
imul
lds
frstor
inc
and
fimull
aaa
ds
sub
test
outsl
test
sub
mov
sbb
add
jl
add
xor
xor
jbe
pop
adc
stc
scas
sub
pop
mov
divps
cwtl
xchg
mov
dec
ljmp
lahf
and
xchg
nop
int3
xor
aad
mov
fwait
or
sub
push
fwait
mov
jns
arpl
orl
jne
cld
fwait
in
les
pushf
or
or
pmulhw
pop
add
jbe
or
rcrl
push
xlat
fildll
dec
inc
push
and
push
dec
fst
pop
out
insl
and
cs
movsb
and
inc
sbb
dec
psubusb
mov
mov
jb
or
pop
fildl
jns
in
imul
fistps
mov
jae
cmpb
lret
cmp
test
mov
sbb
imul
adc
lret
or
push
js
or
enter
into
movsl
inc
mov
das
lods
gs
sbb
mov
xor
add
push
xchg
sbb
addr16
std
scas
mov
popa
addr16
or
xchg
dec
add
not
mov
xor
sub
cli
cmp
and
insb
test
inc
imul
jle
and
push
xor
mov
push
es
xchg
test
adc
mov
stos
push
cmpsb
dec
add
pop
jge
sarb
xor
rorl
jecxz
pop
mov
jmp
sub
jmp
or
xor
out
xchg
aaa
push
clc
push
push
mov
pop
jns
mov
inc
mov
and
jmp
mov
outsl
shrd
je
aaa
ret
mov
imul
addr16
cmp
mov
mov
mov
pushf
xchg
fwait
lret
pop
pop
test
inc
adc
inc
xchg
push
movsb
bound
inc
in
xor
sbb
pop
adc
xchg
xchg
inc
and
in
xor
fistl
mov
call
jl
jb
incl
stc
lock
subb
push
shlb
pusha
push
inc
and
popa
stos
movsl
sub
mov
enter
outsl
mov
mov
mov
test
xchg
jnp
push
mov
fdivrs
sub
mov
idivb
cmc
fisubs
xor
ss
and
sti
mov
adc
das
in
lods
sub
jbe
dec
adc
sub
loopne
or
mov
notl
push
rcl
jmp
call
sub
sbb
jne
jle
leave
pop
xlat
mov
jp
mov
jnp,pn
xchg
iret
jnp
and
loopne
test
sub
ja
pop
and
lret
sbb
cmp
daa
inc
sar
or
popf
dec
inc
pop
cmc
mov
mov
jae
dec
leave
and
fiadds
daa
add
jmp
js
adc
adc
cltd
stos
mov
dec
mov
inc
rcl
pop
mov
sarb
or
dec
popf
mov
lahf
push
xor
jnp
cmpsb
ljmp
mov
pop
iret
pop
push
dec
jne
mov
mov
loopne
or
cmp
daa
pop
pop
rcl
mov
mov
imul
iret
xor
cmp
icebp
jg
jle
cmpsb
cmpl
pusha
add
movsb
lock
aas
mov
fcomps
cmpsl
cltd
jle
jb
pop
add
inc
push
and
mov
adc
ret
ficoml
mov
add
rolb
sbb
sub
lock
adc
mov
movsb
popa
jae
mov
add
and
dec
scas
push
mov
test
xchg
pop
mov
imul
add
repnz
adc
mov
push
lock
iret
and
lods
jmp
xor
push
imul
data16
mov
mov
and
xor
std
movsl
rol
fisubl
pop
and
loope
add
icebp
add
sti
or
fcoml
movsb
and
icebp
ret
add
inc
push
xchg
or
jl
pop
mov
inc
mov
add
adc
pusha
sbb
out
push
adc
rcrb
ret
bound
dec
imul
ds
sub
es
dec
paddw
push
mov
es
push
out
xchg
dec
fldt
daa
xor
scas
ret
xor
mov
int
push
lods
xor
pop
or
cmpsb
notl
cmp
lcall
and
fmuls
sub
test
test
add
push
xor
dec
pop
clc
leave
cltd
xchg
jnp
pop
xchg
jmp
xchg
mov
das
sarb
imul
popf
out
xor
test
cmp
stos
aaa
xlat
insb
call
mov
loopne
fsubrs
pusha
and
add
jbe
push
arpl
xchg
xchg
mov
arpl
and
xchg
add
xchg
test
pop
push
fldln2
int3
mov
lock
pop
daa
ja
inc
xlat
jecxz
cwtl
jl
push
test
icebp
mov
mov
bound
jecxz
cmp
mov
jns
icebp
push
addb
out
pop
int3
push
xchg
mov
sub
mov
xor
pop
stos
and
sub
test
mov
test
cmp
xor
cmp
aam
imul
lret
inc
mov
adc
mov
iret
dec
pop
push
mov
jns
jo
fsubs
test
cmpsl
dec
mov
lock
cmc
loopne
mov
cmpsl
mov
sub
mov
repnz
leave
mov
pop
stos
int
das
jmp
push
lret
jmp
mov
sbb
jns
decb
mov
repnz
dec
pop
dec
jg
push
lcall
sti
or
adc
aas
jnp
daa
mov
xor
mov
gs
addl
ljmp
ljmp
cmpb
jp
xor
xor
push
pop
je,pn
stos
rol
xor
inc
lea
jno
aas
dec
pop
mov
and
cmpsl
stos
sbb
aas
call
sbbb
addb
push
xor
mov
jp
xchg
mov
cld
push
hlt
jnp
mov
loop
adc
aas
xor
loope
es
mov
mov
push
fwait
cltd
ljmp
sahf
cmpsl
and
rorl
xchg
mov
mov
pop
out
cmp
mov
addr16
adc
js
out
cmp
shll
sbb
jne
test
jae
inc
pop
test
or
jns
jg
cmpsl
mov
cmc
sbb
xchg
push
imul
mov
push
imul
rcrl
sbb
cmpsl
test
iret
pop
movsb
in
jg
cmp
jmp
aam
in
dec
xchg
or
jae
movsl
int3
aad
lret
fdivp
mov
aam
xor
outsb
pop
into
or
scas
incl
jmp
in
lcall
sbb
adc
insl
ds
pop
mov
nop
sub
ret
cmp
jmp
adc
jp
push
push
test
loope
inc
and
or
cs
adc
inc
jb
and
ret
add
fcmovu
adc
lahf
rcrb
pop
in
scas
imul
add
lret
jno
inc
adc
dec
cs
mov
and
mov
lret
mov
and
shrl
push
push
dec
mov
mov
or
mov
addb
mov
jg
cmc
and
enter
jbe
cmp
imul
jne
mov
lret
imul
pop
sbb
lcall
push
mov
notl
mov
outsl
pop
fmull
xor
cwtl
ljmp
sti
push
mov
sti
out
xorb
xchg
mov
inc
pushf
xchg
fs
hlt
adc
repnz
jno
hlt
mov
dec
std
sarb
jne
out
loope
sub
testb
adc
sub
xchg
lret
loope
dec
clc
sub
push
jmp
test
cmpsl
sub
mov
pusha
cmp
out
pop
outsl
insb
test
inc
pop
dec
jb
pop
mov
fsubrs
insl
ja
in
cmp
aad
mov
in
jge
jae
push
das
lea
fmuls
jbe
int3
pop
jo
jno
adc
dec
mov
push
out
lods
jnp
sbb
jae
loopne
popf
pop
pop
in
fsubr
sahf
js
outsb
enter
mov
jp
inc
and
cli
or
cmp
mov
sbb
sub
xor
repz
out
in
add
lods
cli
leave
xor
scas
popa
dec
push
mov
xchg
jge
call
insl
int3
mov
popf
sub
inc
stos
and
cli
push
xor
test
pop
push
faddl
or
xor
cmp
stc
clc
push
add
mov
jb
inc
add
hlt
jnp
dec
lahf
push
push
popf
fs
movsl
xchg
xchg
hlt
push
jp
cmpsl
stc
ficomps
push
cmp
ret
dec
mov
daa
insb
adc
xor
push
inc
lock
jns
and
push
jmp
lret
aaa
push
pop
lock
leave
shlb
push
sub
rolb
repz
mov
mov
xor
pop
mov
sub
shlb
rcr
inc
cli
mov
push
mov
adc
jp
ds
repz
mov
gs
mov
xlat
xlat
dec
push
inc
cmp
mov
fs
inc
inc
daa
roll
nop
and
dec
add
or
push
jno
popf
clc
mov
shlb
insl
mov
jmp
lock
mov
repnz
pop
push
nop
jecxz
addr16
mov
mov
repnz
dec
js
cltd
test
push
push
mov
xor
std
mov
mov
jne
ficoml
ljmp
cmc
sub
pop
xchg
dec
test
push
lcall
ficoml
ljmp
cmc
sub
pop
xchg
dec
test
push
lcall
ficoml
ljmp
cmc
sub
pop
xchg
dec
test
push
inc
mov
adc
push
in
cmc
outsl
nop
cmc
sub
test
pop
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
mov
cmp
lret
jnp
pop
adc
outsb
jo
pusha
xchg
push
cs
ds
mov
lock
mov
scas
ror
inc
and
outsb
add
jl
sbb
cs
ds
mov
out
xchg
loopne
shlb
add
pop
add
jo
punpckhdq
add
nop
mov
cltd
cmp
pop
fisttpl
push
push
xchg
out
adc
mulb
inc
clc
into
sub
jg
paddd
insl
cs
cmp
mov
outsb
popa
inc
pop
fmulp
loopne
test
xchg
mov
pop
popf
sahf
jecxz
dec
je
adc
andl
cs
jnp
nop
mov
lods
xlat
mov
mov
sarb
scas
movsl
mov
xor
fwait
rcl
jne
dec
dec
inc
and
jg
test
cmpsb
test
fdivs
jge
and
push
add
mov
push
push
or
adc
pop
scas
shr
shlb
xchg
sub
adc
fldenv
lock
sahf
shrb
and
ja
addr16
pusha
push
push
xor
aas
icebp
into
aam
stc
mov
fwait
lock
and
adc
sbb
pusha
sbb
inc
push
push
aad
lds
lock
mov
jno
adc
add
push
push
cmp
xor
fdivrp
mov
mov
shrb
and
outsb
add
push
pusha
push
push
cs
ds
mov
lock
sahf
shrb
and
outsb
add
push
pusha
push
push
cs
ds
test
or
add
aaa
mov
adc
sub
call
fldl
decl
int
xor
dec
ficoms
xchg
push
rcl
jle
sti
xor
xor
jp
fldt
or
and
cld
or
fisttps
rcrl
mov
mov
xchg
or
jg
mov
sub
pop
repnz
and
std
in
jnp
jl
test
mov
sti
jns
rclb
push
mov
mov
fcompl
dec
push
fisubl
insl
mov
push
pop
clc
pop
jge
lds
fsts
aad
push
mov
mov
stos
int
insb
scas
fwait
push
sarb
cmp
mov
inc
push
cmp
cmc
fstl
jns
inc
icebp
andb
cltd
pop
addps
icebp
repz
pop
pop
enter
cmp
icebp
dec
fcmovnbe
dec
rorl
mov
mov
enter
popa
jle
pop
inc
push
fnstsw
imul
inc
pop
push
push
cmp
sti
pop
ficomps
mov
push
push
cvtpi2ps
int
jb
adc
fcoms
inc
test
loope
pop
jno
inc
pop
jge
test
fbstp
fistpl
mov
xlat
ret
pop
inc
xor
dec
fnstsw
add
push
int
ds
mov
ficomps
jae
jecxz
push
outsl
push
push
insl
mov
mov
jl
pop
adc
jl
imul
out
cld
fistpl
cld
mov
stos
pop
jmp
pusha
xchg
ret
in
orb
mov
adcb
pusha
sbb
pop
pmaxsw
jbe
mov
xor
roll
ss
push
pop
das
xor
scas
mov
dec
xchg
dec
ja
out
repnz
sbb
mov
and
and
mov
roll
fsubrs
cwtl
pop
ret
les
cld
call
and
enter
mov
je
das
sbb
dec
add
jns
cmp
inc
inc
notl
ss
xor
sbb
mov
jb
mov
in
add
repnz
push
in
ret
jmp
movb
aam
cmc
mov
ja
cltd
aad
pop
sub
mov
jg
outsl
sarl
xlat
xchg
sti
imul
pop
int3
mov
fisubl
push
loopne
adc
stc
pop
push
and
movb
pop
jge
lcall
dec
xchg
les
mov
testl
dec
and
loope
mov
lds
iret
outsl
inc
jp
inc
push
mov
xchg
sbb
cmp
add
repz
out
mov
mov
icebp
shll
sarb
mov
pop
stc
aas
rcll
ss
pop
adc
mov
pop
lret
imul
jnp
les
add
adc
fisttps
sbb
aas
mov
std
jmp
mov
cmp
fcompl
inc
push
repnz
push
test
scas
push
sub
add
mov
sbb
jb
mov
sub
fcompl
test
insl
lcall
cmp
jle
or
insl
xchg
mov
outsl
aad
outsl
fs
push
sub
cmp
imul
ja
mov
repz
lcall
mov
outsb
cmp
cs
add
pop
lods
dec
hlt
out
ds
dec
push
xchg
cs
jecxz
push
inc
les
ljmp
retw
sahf
mov
test
cmp
mov
dec
hlt
sbb
cmpsb
inc
roll
bound
jmp
adc
cmp
cmp
mov
push
jno
notb
mov
mov
mov
xchg
adc
mov
push
sar
xchg
xlat
push
mov
mov
or
push
pushf
or
int
fsubrl
aas
jg
xor
loopne
jmp
lods
dec
out
and
rcll
movsl
jp
int
adc
addr16
loope
mov
je
jp
cmp
xchg
sbb
xor
int3
subl
lds
mov
cmp
loope
mov
add
add
addb
cmp
mov
sbb
jno
mov
sub
inc
sbb
cmpsb
rcrb
lods
add
lret
rclb
arpl
mov
sti
imul
ss
shll
and
mov
out
dec
xlat
outsb
mov
test
mov
shll
fiaddl
cmp
gs
stos
inc
enter
push
idiv
in
xor
loopne
repz
cmp
shrl
je
xchg
scas
sub
ret
mov
es
ljmp
sub
popa
xchg
and
mov
mov
pop
cmp
loopne
push
mov
xchg
sub
sti
push
xchg
push
inc
hlt
jns
xlat
mov
icebp
and
repnz
rclb
aad
orl
in
push
xchg
jecxz
mov
ds
pop
ret
cmovl
xchg
cmp
inc
imul
push
lahf
ljmp
add
mov
mov
xchg
and
cltd
fmuls
test
popa
xchg
mov
dec
stos
push
dec
push
arpl
js
ljmp
push
ljmp
mov
loop
mov
jle
xchg
dec
mov
push
xor
out
imul
jo
jb
out
and
in
cmp
pop
test
in
push
insb
cmpb
test
mov
sub
sbb
cmpl
push
or
adcl
xchg
dec
in
xchg
mov
jnp
push
jle
sarb
ret
mov
gs
rol
out
xorl
es
xchg
or
dec
push
pushl
jmp
ss
mov
in
fisttpll
dec
das
sub
xor
fidivrl
shrb
sub
jl
push
mov
lock
add
into
insb
test
lea
inc
mov
jnp
clc
cmpsl
loope
push
sbb
std
adc
out
dec
frstor
in
pop
daa
sub
mov
ret
std
sub
adc
data16
adc
imul
popa
dec
sahf
loope
lahf
or
imull
jp
mov
idiv
add
sar
loope
adc
dec
dec
pop
mov
add
mov
das
pop
arpl
sbb
clc
push
cmp
jbe
imul
xor
cld
xchg
shrb
mov
call
rolb
push
andps
mov
xlat
dec
mov
mov
js
push
push
cs
test
adc
aas
push
popa
testl
push
inc
sbb
testb
push
xor
dec
lahf
out
sarb
and
pop
nop
lods
mov
fdivs
test
sbb
ret
scas
sub
or
jp
inc
add
stos
xor
or
subl
shr
sub
pop
jns
test
jns
fldt
popf
dec
inc
test
pusha
xor
clc
test
test
in
mov
pop
lret
icebp
into
rorb
lahf
push
ret
and
sub
in
dec
mov
aaa
imulb
push
scas
dec
ljmp
mov
mov
inc
ret
cmp
shl
or
repz
push
jo
cmp
nop
xor
jno
loop
out
incb
loop
daa
mov
sarl
lods
push
push
in
popa
dec
adc
sbb
xchg
gs
pusha
loop
lock
cmp
cli
iret
xor
ret
int
add
sbb
push
les
xchg
sub
mov
aad
mov
xchg
test
imul
adc
jmp
jle
or
cld
xor
push
sub
xor
push
aas
popa
movsl
sbb
inc
addr16
cmpsb
out
mov
sti
cltd
push
mov
es
es
or
push
mov
cmp
jecxz
dec
mov
daa
leave
dec
sahf
inc
add
popa
push
out
and
xchg
mov
insb
sahf
cli
mov
jnp
ficoml
cmp
ret
shrb
jb
inc
jmp
cwtl
xchg
ret
and
arpl
sbb
or
in
les
sahf
popf
lret
inc
in
pop
jb
cwtl
push
dec
call
sub
mov
mov
or
adc
loopne
inc
push
nop
aad
je
ucomisd
inc
int3
aad
stos
push
or
test
out
int3
jmp
nop
mov
dec
in
or
aaa
shll
jb
sbb
cmpsb
clc
into
pop
mov
sub
arpl
push
ret
lds
push
or
jnp
outsl
imul
out
sub
sarl
lds
shrl
jbe
lods
pop
rorb
lea
cmpsb
xchg
push
push
in
add
add
mov
and
lods
in
xchg
mov
test
xchg
in
ret
mov
jge
sbb
out
lret
mov
dec
pop
scas
pop
sub
cmp
mov
addr16
aas
cwtl
xor
rolb
dec
fstl
sahf
dec
test
out
test
xchg
pushl
jae
cmp
dec
sub
sub
fs
out
jmp
jmp
dec
pusha
mov
jmp
cmc
pop
fnstenv
jae
loope
bound
mov
push
movsb
mov
sub
xchg
fdivr
lods
clc
lcall
or
nop
in
adc
and
arpl
jo
dec
xchg
fwait
sub
fs
jg
setns
scas
and
xchg
jne
add
stos
push
add
or
jae
mov
add
add
das
xabort
in
ljmp
outsb
sbb
scas
loop
cld
adc
sbb
insb
dec
test
mov
in
jo
mov
pop
pop
sbb
fcmovbe
mov
imul
int
mov
add
pushf
mov
sbb
fistpl
add
jo
mov
ds
jne
xor
sbb
sbb
and
test
lahf
and
decb
lods
or
xchg
xchg
adc
xchg
sti
ret
clc
and
repz
sbb
out
ret
lahf
test
sub
ror
inc
mov
mov
icebp
out
lcall
cmpsb
mov
jmp
aas
aas
jo
out
xor
adc
jne
mov
adc
add
sub
mov
sahf
xchg
dec
dec
sbb
inc
icebp
jl
inc
test
xchg
push
fnstsw
push
adc
roll
ret
push
loope
adc
mov
pop
and
cli
push
dec
dec
enter
shll
mov
test
push
pop
jbe
out
dec
mov
or
dec
fdivrs
addl
ja,pn
sahf
add
cmpsl
test
cmpsl
pop
jg
push
pop
into
nop
int3
fildl
test
mov
mull
cmpsl
xorl
sti
lcall
inc
adc
fbld
cmpsb
fcmovbe
xchg
mul
inc
dec
mov
aaa
ret
sbb
mov
inc
std
xchg
lret
fistpll
jle
push
lret
mov
add
ficompl
loope
lret
jl
jp
out
ja
sbb
gs
inc
aaa
hlt
cmp
iret
rcll
subl
ja
ds
xor
loope
mov
lcall
mov
iret
dec
mov
dec
fimull
dec
jno
push
data16
and
stc
mov
xchg
nop
fists
ja
jbe
or
in
mov
mov
push
jb
leave
push
data16
stos
xchg
adc
pusha
cs
xor
mov
adc
lcall
pop
jecxz
mov
adc
lret
and
jne
mov
cwtl
push
mov
sub
test
loop
outsb
cmpsl
jno
inc
adc
leave
pop
sbb
movsl
sbb
push
xor
add
xor
test
or
movsl
push
adc
test
push
xor
cmp
inc
add
jmp
sub
adc
and
sbb
int
dec
outsb
mov
data16
mov
imul
cmpl
paddsw
pusha
push
push
scas
cmp
dec
push
and
jl
cli
push
mov
dec
fldenv
sub
lds
popf
outsb
xchg
xchg
into
pushf
test
sahf
aaa
pop
hlt
cs
fadds
stc
jnp
mov
cs
sub
adc
and
cmp
in
sub
mov
add
cwtl
cli
jg
jg
jo
jo
insl
sub
jns
les
and
mov
or
adc
adc
fstps
mov
pushf
nop
mov
add
jae
shlb
xor
cmpsl
pop
push
test
sub
or
pop
scas
push
jns
push
mov
mov
dec
in
mov
js
inc
mov
jmp
rsqrtps
and
xchg
mov
xor
sahf
lcall
cmp
dec
inc
mov
and
std
cmp
jns
pop
sbb
or
fnstcw
or
push
jae
out
and
jne
movsb
pop
popa
cmp
mov
pop
aad
mov
and
pop
insl
int3
push
adc
xor
mov
mov
call
out
shll
push
outsb
jmp
adc
mov
mov
lea
in
pop
or
jmp
iret
rorl
cs
mov
pop
jmp
adc
jge
inc
adc
or
out
pop
inc
dec
out
or
and
push
sub
gs
sbb
pop
sbb
xchg
mov
aam
push
aad
call
jge
pop
cwtl
mov
or
pop
push
or
fs
insl
cmp
jnp
hlt
lcall
or
popf
mov
cmpsb
ljmp
adc
push
lahf
cmp
pause
cmpsl
out
lock
jo
dec
lahf
mov
cmp
pop
inc
sti
or
inc
int3
aad
xchg
movsb
negl
movsb
les
imul
jo
sub
or
mov
lds
mov
mov
sbb
cmpb
movl
jge
outsl
xor
in
cmpsb
xchg
out
je
je
adc
xchg
loope
sub
jg
ja
pop
aaa
mov
push
xchg
addr16
ja
addr16
sub
scas
test
scas
inc
gs
push
rclb
ja
movsb
call
repz
sub
mov
mov
fsub
mov
data16
mov
xor
mov
in
sti
mov
sbb
jno
scas
dec
pushl
cmp
mov
cwtl
pop
ficompl
cmpsl
outsb
or
adc
stc
shlb
ja
mov
aaa
jp
mov
rcll
imul
mov
inc
and
push
pusha
and
sbb
inc
je
in
inc
dec
push
jmp
divl
mov
xchg
jns
mov
adc
mov
push
jge
jg
sbb
or
sub
cli
jle
je
das
jecxz
dec
in
adc
out
push
jo
movsb
insb
or
inc
adc
outsl
mov
inc
cmp
add
dec
push
mov
loop
lds
add
rol
jne
test
dec
inc
jecxz
cli
loop
xlat
or
dec
stc
dec
pop
sti
arpl
movsl
subb
jge
mov
popa
mov
push
inc
addr16
push
mov
es
and
pushf
add
adc
outsb
adc
fimull
mov
arpl
xchg
xor
push
dec
outsb
jg
push
add
scas
mov
int3
or
sbb
das
int
xchg
cmp
sbb
xorl
mov
rcl
cs
push
je
lahf
pop
bound
push
push
cwtl
inc
cmp
dec
js
nop
pop
sub
pop
mov
add
sbb
ficomps
inc
pop
arpl
daa
mov
add
ljmp
push
leave
sbb
mov
xchg
jge
scas
sub
insb
aad
jecxz
shufps
daa
ficomps
pushf
rcll
ret
mov
jg
sarl
push
mov
icebp
adc
in
rolb
lods
xchg
ss
adc
sub
xor
dec
mov
mov
mov
jecxz
inc
cs
mov
sbb
mov
mov
fdivrl
pushf
ret
dec
mov
addr16
shll
add
ficomps
jne
popf
das
push
xchg
out
daa
push
mov
dec
sbb
dec
mov
sbb
call
cwtl
mov
jae
gs
mov
lcall
ss
jmp
scas
negb
inc
lods
jae
scas
out
dec
pop
jmp
lods
xchg
loope
and
test
sub
test
inc
xor
imul
movntps
rdmsr
pop
cmp
mov
sub
repz
or
xor
hlt
cmp
mov
loope
xchg
aam
outsb
sbb
mov
or
jge
mov
inc
aam
lock
jmp
xlat
cmc
xchg
in
jecxz
addr16
mov
add
adc
mov
inc
jne
add
jecxz
jl
jmp
aad
dec
clc
xor
and
lods
push
or
popf
lret
fisttpl
pop
mov
and
sub
test
adc
dec
dec
sahf
ljmp
push
scas
mov
push
vpackuswb
push
lods
jae
lods
fstpt
inc
cmp
add
movsl
out
inc
aaa
adc
dec
xchg
fsubl
add
lcall
stc
shl
inc
add
int
fdivrp
cmp
pop
and
pop
lcall
jmp
mov
pushf
pusha
mov
out
fbld
addr16
jne
dec
adc
fistps
aaa
and
jecxz
stc
in
hlt
jmp
push
sarb
fcoml
hlt
out
lods
cltd
arpl
cs
repz
cmp
dec
mov
fsts
or
test
add
ret
scas
rclb
nop
cli
js
jge
rorb
or
lods
sub
xchg
cmp
mov
cld
ret
sub
jnp
sbb
cmpb
jecxz
pop
test
divb
jg
sbb
out
mov
mov
push
mov
jmp
sbb
push
fwait
pop
mov
test
or
icebp
mov
aad
and
inc
fdivrl
lret
std
arpl
inc
push
ds
out
fists
stos
mov
repnz
inc
out
arpl
mov
mov
pop
popf
ja
ret
or
nop
push
int
scas
push
sbb
jnp,pt
roll
jbe
mov
sbb
loope
loope
push
pop
movsb
lds
push
fwait
out
inc
popa
mov
stos
mov
loop
pop
sub
pop
dec
stos
or
and
cmpsl
into
outsb
adc
inc
pop
or
xor
test
mov
mov
pusha
frstor
aaa
push
pop
lret
cmp
stos
adc
adc
sub
xchg
mov
pop
and
andl
inc
xor
jb
xor
icebp
lcall
outsb
inc
and
jne
ret
and
jb
outsb
fists
dec
cmc
fcmovnbe
sbb
sub
and
aaa
inc
imul
push
pop
pop
lods
jbe
jp
test
dec
xchg
out
mov
movsl
mov
jl
sbb
jl
lcall
dec
xor
sbb
sub
jmp
ds
cmp
sub
xchg
xor
mov
inc
mov
jne
fwait
ds
xchg
js
and
lock
jl
loope
dec
aam
nop
push
shll
and
cmc
xlat
sub
mov
mulb
js
sub
cmp
sbb
jl
cmp
scas
and
cmp
xchg
mov
or
js
mov
pop
xorb
xor
or
adc
and
pusha
faddl
stos
push
mov
fwait
popa
pop
out
test
popf
int
test
daa
cltd
jp
stc
cltd
push
dec
push
nop
imul
mov
bound
test
pushf
test
stc
jbe
sti
cwtl
xchg
into
mov
into
je
cs
jns
addr16
lock
xor
xor
std
push
mov
dec
mov
inc
neg
stc
sbb
mov
ja
shrb
in
dec
insb
adc
scas
call
andb
shlb
push
out
push
mov
push
icebp
fisttpll
and
pop
pushf
iret
add
lock
out
add
mov
insb
sbb
bswap
or
ss
mov
add
cwtl
fisubl
je
fcoml
and
popa
inc
fnstenv
sbb
pop
outsb
xor
repnz
xchg
xor
xchg
lock
sahf
push
je
adc
cmp
stos
and
outsl
movsb
fadds
mov
xchg
movsb
pop
loope
out
cmp
dec
jecxz
sbbl
mov
jnp
xlat
mov
inc
sub
and
fisttps
in
je
pop
imulb
stos
adc
sbb
mov
inc
cmp
fmull
bound
xor
inc
in
inc
repz
mov
sbb
mov
ficoms
mov
sahf
shrb
and
outsb
add
push
pusha
push
push
cs
ds
mov
lock
sahf
shrb
and
outsb
add
push
pusha
push
push
cs
ds
and
adc
cmp
mov
sahf
shrb
and
outsb
add
push
pusha
push
push
sub
mov
mov
lock
sahf
shrb
and
mov
xchg
popa
and
inc
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
out
add
mov
fwait
sub
xor
push
lcall
outsb
fidivrl
dec
cli
pop
ljmp
fwait
sub
pop
sti
dec
lret
jp
push
lcall
imul
lret
pop
ljmp
pop
sub
pop
mov
out
and
xor
insl
fidivrs
dec
lahf
daa
movsl
cmp
sub
ljmp
jnp
popf
mov
outsb
sbb
addb
das
mov
ds
push
repnz
cmpsl
dec
in
mov
flds
scas
jb
jne
mov
ljmp
inc
stos
sbb
xlat
mov
imul
hlt
jp
push
xchg
fcomi
or
movnti
ljmp
xchg
ds
push
cli
out
jns
pop
add
inc
cmc
je
pop
aad
pop
js
outsl
xchg
jmp
hlt
inc
sbb
lret
sbb
mov
shll
add
dec
mov
shr
ret
mov
stos
sbb
push
out
dec
jmp
sbb
sub
pop
mov
push
lcall
or
gs
aas
sbb
int
iret
push
cmc
inc
test
mov
xor
cmp
jp
pop
sarb
add
sbb
stos
sbb
or
cmp
adcb
cmpsl
or
jp
outsb
sbb
sbb
sti
push
fimull
pop
sti
dec
lret
jp
push
lcall
imul
lret
pop
ljmp
fwait
sub
pop
sti
dec
lret
jp
push
lcall
imul
lret
pop
ljmp
les
xchg
xchg
imulb
js
aam
and
outsl
ljmp
call
xor
lods
ret
aaa
mov
test
ret
push
xchg
cmp
sbb
pushf
sub
xor
pop
aaa
mov
push
loop
dec
push
pop
repz
xor
adc
push
xor
xor
pop
jle
es
stos
mov
xchg
mov
std
xor
jae
xchg
mov
into
sub
aam
es
loop
scas
jne
and
mov
aam
mov
out
xor
push
lcall
sub
cmp
xchg
mov
push
lds
adc
int3
or
cmp
decl
std
mov
mov
popf
movsl
aaa
push
push
push
sbb
xchg
je
aad
aaa
sub
and
xlat
sbb
test
sub
negb
hlt
jl
cmp
pop
jmp
out
test
aaa
and
jb
repz
and
test
fidivs
pop
dec
imul
sub
cwtl
jnp
dec
mov
lahf
or
js
ret
sbb
cltd
aam
into
add
cwtl
or
std
in
dec
popa
inc
or
pop
adc
div
popa
test
inc
hlt
inc
pop
sahf
cs
jmp
jo
mov
xor
insl
in
sub
cmpsl
pop
jp
mov
inc
fwait
jmp
add
jne
cltd
cmp
ficoml
pop
xchg
sub
dec
push
ja
mov
xchg
sub
sub
stos
xor
xchg
or
cmp
inc
imul
movsl
fmul
xchg
pushf
je
addr16
in
scas
or
loop
sbb
mov
imul
fldcw
loop
out
mov
rcrl
push
or
cltd
xorw
inc
jno
inc
aaa
int
xchg
sti
cmp
loop
test
sub
stos
push
inc
ret
xlat
fsubrl
test
inc
loope
enter
mov
popa
js
or
dec
jbe
inc
sbb
pop
xor
mov
daa
out
cs
out
mov
shrl
cmp
mov
je
cmp
lods
cmp
popa
add
adc
mov
xlat
add
mov
sub
push
lcall
sbb
es
add
lods
mov
sar
dec
or
mov
inc
mov
mov
xchg
stc
int
xchg
andb
jns
mov
dec
xor
repz
pop
jne
sbb
cmpsb
add
sbb
sub
fwait
cmpsb
xlat
inc
test
mov
outsl
in
xor
addr16
jb
int3
adc
sub
popf
and
mov
and
xchg
sahf
cmpsb
fdivs
push
jns
clc
cmp
adc
jmp
nop
inc
shrb
jg
enter
sbb
or
jge
je
stos
out
add
jp
pop
xor
pop
push
pop
out
test
jl
hlt
cmp
rcl
mov
inc
add
stos
addr16
gs
aas
loopne
jno
mov
xchg
fistpll
push
mov
mov
sub
cltd
dec
cmp
lahf
imul
mov
xlat
loop
adc
shlb
xchg
push
push
xor
and
clc
leave
pushf
subb
ljmp
pop
xor
and
sar
sub
cmc
mov
sub
and
push
jne
sbbl
and
notl
lods
xchg
jecxz
cmp
lret
icebp
hlt
sub
xor
push
sbb
jmp
gs
inc
pop
out
lret
insb
pop
lods
xor
cli
rcrl
inc
jg
push
and
add
int
jbe
idivl
insl
pop
repnz
mull
lods
mov
bound
lret
data16
fs
test
into
iret
push
ficoms
sahf
mov
jl
xchg
mov
shlb
xchg
stos
sbb
enter
fmul
sub
xchg
jno
pop
test
push
out
mov
repz
ret
cbtw
jl
test
cmc
sbbb
imul
add
push
mov
adc
bnd
repnz
rcrl
sub
cmpsl
inc
into
mov
or
dec
mov
push
fs
inc
and
pop
rolb
adc
mov
xchg
cs
push
sbb
xchg
les
adc
mov
sahf
nopl
arpl
jb
xor
fwait
dec
shlb
add
iret
push
nop
aam
bound
fs
and
insl
movsl
pop
aam
pop
push
popa
jo
scas
mov
mov
and
andl
mov
data16
push
sbb
adcl
adc
mov
pop
testl
adc
ds
addl
and
sbb
cld
movb
popa
daa
bswap
cwtl
and
inc
mov
rcrl
inc
mov
mov
cmp
adc
enter
lcall
dec
mov
cmpl
ljmp
mov
lods
stc
daa
cmpsb
xor
shll
mov
mov
dec
pop
and
out
or
push
xchg
jl
adc
xchg
fistpl
movsl
add
repz
push
dec
mov
pop
mov
lods
mul
adc
test
sbb
sahf
sbb
js
or
enter
pushf
pop
mov
sarl
into
lods
jnp
ret
lahf
and
lods
movsl
mov
inc
imul
cmpsl
mov
std
out
cltd
stos
sahf
mov
popf
fsts
push
and
das
insb
xlat
mov
call
nop
push
cld
pop
mov
push
dec
jl
xor
or
push
dec
mov
int
adc
jbe
push
sti
mov
cmp
imul
ret
and
test
mov
jg
jnp
pop
jbe
out
push
push
xchg
nop
fs
mov
hlt
out
dec
inc
sbb
nop
cmc
jmp
xor
cmp
es
sar
sbb
and
data16
xchg
lahf
shrb
dec
xchg
jb
ja
iret
andl
jmp
incb
xrelease
fiaddl
jnp
mov
sbb
repnz
mov
lock
jbe
jg
aaa
sbb
inc
inc
aad
ret
pop
dec
jne
pop
xor
push
rcrl
ror
push
cmpsl
cltd
loop
clc
add
cmp
jl
mov
xchg
jb
or
cmpsb
mov
pop
addl
jge
packssdw
xchg
inc
xchg
out
lods
stc
aas
sbb
mov
xorb
push
imul
loope
lret
andl
inc
addb
lods
inc
xchg
cmp
dec
adc
mov
jo
mull
faddl
leave
in
dec
mov
xchg
push
mov
adc
xchg
gs
push
xor
sbb
aad
in
in
cmpb
mov
adc
xchg
shl
jmp
rorb
inc
in
cmp
loope
jmp
fcoms
mov
push
addl
cmpsb
mov
jno
mov
stc
and
ret
pop
inc
or
es
dec
pop
push
fsubs
push
sbbb
ljmp
test
jmp
xchg
sub
adc
and
cmpsl
inc
push
and
sub
rclb
pop
dec
lods
xchg
dec
sub
adc
dec
cli
fwait
pop
out
mov
js
dec
inc
imul
decb
rcrb
movsl
push
push
push
popf
sub
test
fcmovnu
daa
mov
cli
adc
xor
lods
push
insb
shll
jecxz
or
mov
je
inc
pop
pop
push
arpl
lret
add
pop
cli
inc
mov
jecxz
fmul
lahf
repnz
xchg
leave
inc
outsb
jg
cmpsl
testl
test
clc
les
mov
decb
add
je
outsl
push
cld
cmp
push
mov
push
sub
sub
mov
pop
pop
cmpsb
jmp
int3
mov
lea
fneni(8087
je
outsb
repz
pop
sbb
xor
jl
outsl
push
loopne
mov
push
pushf
mov
pop
dec
dec
xlat
inc
mov
out
rcll
and
and
out
fisubrl
stos
push
cmpsl
rcr
push
in
sbb
mov
pop
mov
iret
into
into
nop
jns
fucom
nop
xchg
icebp
adcl
scas
lds
js
and
cli
aad
iret
push
dec
mov
unpckhps
push
ret
mov
in
pop
and
add
cli
cmpsl
mov
pop
iret
sub
out
sub
jge
inc
and
cmpsl
stos
stos
insb
nop
dec
dec
xor
cmp
stos
cmp
std
cltd
inc
xor
clc
rcll
ret
xchg
pop
pop
pop
aaa
loopne
lcall
jb
es
push
es
or
cmpsb
sahf
xchg
outsl
add
outsb
loope
fadd
mov
fs
icebp
and
loop
mov
test
xchg
fisttps
std
pop
testl
bound
in
leave
mov
xor
mov
cld
push
xchg
fstps
popa
and
jge
inc
mov
call
dec
nop
dec
and
and
icebp
push
into
pop
movsb
repnz
xchg
int
iret
es
mov
or
dec
gs
pop
adc
sti
and
int3
ret
sti
jnp
or
rolb
imul
add
add
lock
adc
rcr
inc
dec
jge
jl
jg
adc
iret
adc
adc
jns
stos
xor
inc
je
dec
lods
fcomip
pop
sbb
xorb
call
and
shr
sub
or
stos
ret
lahf
xchg
push
ljmp
adcl
jb
leave
xchg
insb
sub
scas
and
inc
lret
testl
mov
outsl
mov
sahf
or
mov
shll
shrb
aad
imul
mov
mov
sub
mov
sarb
les
popf
ljmp
loope
pop
fldcw
mov
push
sub
mov
iret
sbb
pop
push
sbb
bound
add
cmp
push
out
ja
mov
jecxz
push
loopne
dec
push
adc
fisttps
jp
sub
lock
test
cmp
shrb
inc
mov
sbb
cmp
inc
add
push
adc
aas
mov
subb
add
add
adc
gs
and
pop
movsl
add
dec
daa
cmp
or
jno
push
mov
xchg
pop
cmp
sub
lcall
xchg
daa
inc
adc
pop
push
nop
lods
andb
sub
sbb
push
std
mov
push
mov
pop
pop
push
jno
push
call
insl
mov
mov
rclb
imul
inc
or
ret
push
jg
inc
imul
sub
and
sbb
ss
nop
mov
mov
int
inc
jle
ffreep
add
testb
or
in
sub
lea
das
iret
pop
adc
pop
cld
push
daa
mov
push
jp
int
adc
scas
mov
xor
rol
sub
out
scas
pusha
adc
jge
inc
icebp
loopne
cmp
or
sbb
jp
xchg
and
shl
push
sub
sarl
fisttps
in
adc
fisubs
shl
daa
cmp
repz
ret
jl
ret
jb
mov
dec
dec
sbb
cmp
inc
bound
cmp
call
std
nop
imul
dec
mov
addr16
in
xor
pop
loope
or
pop
test
push
mov
fldt
xchg
gs
fdiv
jo
lock
lods
add
push
mov
call
sub
pop
lahf
sti
dec
fwait
xchg
stc
js
sbb
inc
rcrl
jl
out
jl
fs
fisttps
jne
or
sahf
aaa
mov
fistpl
adc
lret
in
sti
leave
rol
xor
xor
pop
scas
stos
movsb
addr16
imul
xor
jb
jmp
sub
out
dec
cmpsl
mov
lcall
sbb
add
or
mov
shlb
xlat
mov
xlat
call
inc
enter
ret
out
flds
out
repz
ja
mov
jecxz
aam
sbb
xor
gs
cmp
sbb
pop
push
das
fbld
lret
sub
mov
roll
les
pop
stc
lar
cmp
and
jbe
adc
dec
sti
mov
jbe
pusha
test
insl
push
call
xlat
and
hlt
loop
pop
mov
jp
arpl
hlt
push
fisttps
mov
jge
pop
xchg
inc
xchg
out
push
insl
adc
pop
loope
repz
inc
inc
push
scas
mov
push
into
jns
inc
aaa
push
push
sbb
lea
mov
and
dec
vpsubusb
int
mov
das
ss
push
cs
inc
sub
and
pop
adc
and
and
push
add
add
call
aaa
mov
push
enter
push
aam
int3
jbe
push
dec
mov
pop
sahf
std
ja
movsb
lods
in
inc
popf
xor
sbb
fdivs
ss
int3
sbb
lret
jnp
add
nop
imul
and
xor
pop
mov
in
inc
lock
cwtl
xchg
mov
pop
sub
cmp
inc
or
test
xor
mov
and
add
pop
xchg
insb
out
mov
lods
adc
stos
faddl
call
pop
push
inc
add
mov
int3
daa
pushf
push
in
push
pushf
movsb
jle
push
inc
cld
mulb
sbb
sub
mov
push
add
inc
imul
mov
std
mov
cmp
idivl
cmp
jmp
or
jmp
sbb
mov
pusha
rorl
mov
les
adc
je
adc
in
call
aad
and
loop
jne
pop
sti
std
jecxz
popf
fdivrl
sti
mov
loope
pushf
xor
inc
xorl
enter
daa
add
adc
cmp
mov
ret
or
inc
jmp
jge
mov
fadds
aaa
dec
push
sub
sub
xchg
daa
xchg
ret
push
pop
and
mov
push
xor
push
test
loope
clc
mov
aad
xchg
mov
cmp
inc
or
cmc
repz
pop
cmp
sarl
in
jl
rolb
out
xchg
clc
add
popf
leave
adc
ljmp
mov
movsb
arpl
stos
sti
or
jle
sub
ss
jae
mov
add
repnz
imul
cmc
push
scas
xchg
addr16
jg
cld
es
call
movsl
jno
fldenv
xchg
xor
mov
mov
add
dec
in
mov
ds
in
jp
jmp
mov
jmp
jbe
je
xchg
xchg
popa
sahf
dec
fstl
out
fs
push
je
cmc
popa
inc
add
jae
loopne
xchg
push
fadds
dec
xchg
push
mov
sbb
mov
adc
mov
and
ds
push
repz
daa
cwtl
mov
push
loopne
adc
mov
andb
push
out
daa
push
jecxz
adc
popa
add
mov
divb
into
test
aas
andl
imul
or
push
pop
mov
das
not
data16
mov
pop
jp
jge
movsb
cmpsb
pop
jbe
dec
loope
push
popa
mulb
add
ljmp
fdivrp
es
xor
mov
add
push
mov
jb
movsb
xchg
imul
xchg
push
aam
imul
or
push
jle
pop
sub
sar
mov
inc
cwtl
jecxz
adc
pop
adc
sub
pop
inc
cmc
pushf
mov
call
cmp
call
stos
fdiv
and
cmc
mov
push
add
test
mov
sahf
xchg
jne
push
lds
sbb
insl
push
push
loope
jmp
shll
jl
loopne
pushl
cmpsl
xor
fnstcw
cwtl
aad
sahf
mov
mov
inc
xchg
imul
inc
pop
pushf
add
popa
js
andb
repz
push
int3
push
fstl
pushf
or
xor
adc
inc
outsb
push
xchg
sbb
je
or
dec
mov
iret
xchg
add
pop
sbb
aad
inc
iret
jne
xchg
dec
call
mov
test
pop
popf
adc
repnz
or
xchg
push
xchg
daa
mov
loope
imul
fsubrs
leave
testb
xor
dec
push
fsubl
dec
xor
lods
add
mov
dec
dec
or
mov
sub
jl
cmp
pop
dec
rolb
int3
dec
pop
cmp
jbe
movsb
je
jmp
add
add
ror
stc
push
ljmp
mull
jbe
dec
mov
bound
pop
sub
out
scas
or
sbb
add
ja
adc
fists
add
sets
jle
sbb
jmp
dec
loopne
outsb
sub
dec
mov
jne
fstp
push
call
es
arpl
fnstsw
inc
xchg
sbb
mov
test
xchg
xor
xchg
add
loop
adc
push
cwtl
lods
test
push
ficoms
das
xchg
je
adc
fidivl
or
repz
xchg
das
cmp
js
iret
in
cmp
sbb
jmp
nop
addl
ss
xchg
lock
loopne
sti
rcrl
dec
adc
cmpsl
stos
push
not
shll
sub
pop
pop
xchg
std
fisubs
scas
aad
aam
dec
cmp
int3
aad
adc
or
iret
push
jb
cmp
inc
lods
addr16
lahf
dec
shll
movsl
and
imul
mov
insl
test
xlat
out
adc
inc
pop
pop
or
inc
and
adc
jo
in
pop
imul
jg
and
clc
fmulp
out
lcall
adc
xchg
ja
out
push
cs
shl
add
leave
daa
gs
inc
daa
cmc
imul
xchg
gs
daa
mov
dec
mov
int3
pop
and
adc
mov
or
xlat
sub
push
sub
into
push
mov
xor
cli
jp
icebp
jge
iret
add
fbstp
fmuls
add
push
mov
cmpsl
int3
mov
push
cli
icebp
xlat
ficoml
dec
jno
dec
jbe
cs
loop
xor
xchg
in
mov
xchg
adc
add
fdivrs
xor
cmp
sub
xchg
repz
dec
ficoms
dec
fisttpl
cmpsb
jnp
lret
jge
mov
leave
in
cmc
pop
shll
jbe
leave
inc
sbb
mov
lahf
ficoml
adc
mov
sub
ds
mov
jb
inc
mov
push
and
jmp
gs
xchg
imul
push
mov
adc
lods
and
ds
rol
xchg
xor
outsl
pop
flds
fs
xchg
adc
rorl
test
lret
push
pop
inc
jecxz
sub
pop
leave
imul
dec
popf
fucomip
clc
jnp
aaa
adcb
cmp
ss
cmp
out
pop
xor
jp
nop
repz
sub
or
bound
mov
sub
mov
jmp
fstl
mov
pushf
push
pop
hlt
popa
pop
enter
add
mov
jbe
gs
lahf
shlb
inc
lret
stos
inc
adc
pop
popa
bound
lds
sbb
dec
fisubl
repz
sbb
push
loop
sub
push
sub
or
cmpsl
lret
call
or
cli
mov
sub
or
mov
pop
sub
cmp
xchg
addr16
je
or
add
and
dec
mov
jmp
out
xor
or
pop
mov
mov
pop
jle
aas
add
sub
pop
testb
push
aaa
sbbb
mov
in
loopne
jbe
dec
mov
sbb
add
sbb
push
sbb
mov
sbb
mov
push
add
dec
shll
sub
icebp
inc
cli
js
push
les
cmpb
repz
sti
jnp
and
icebp
or
jo
dec
fdivrs
cltd
setns
ret
lahf
or
jo
sub
pop
push
bound
and
stc
in
lret
out
add
jns
mov
pop
jmp
pop
and
sub
add
dec
jp
push
stc
shl
mov
test
sahf
add
sbb
adc
mov
lods
sbb
dec
cltd
enter
arpl
mov
rdmsr
std
cmp
mov
mov
icebp
in
jl
fcmovne
adc
out
add
pushf
mov
inc
or
sub
incb
out
push
xchg
push
mov
mov
jbe
add
aaa
hlt
ret
mov
test
and
mov
lea
mov
dec
xchg
pop
mov
mov
lds
fcomps
mov
mov
xchg
je
xchg
adc
inc
and
adc
mov
inc
inc
add
xchg
jmp
sti
dec
lret
jp
push
lcall
imul
lret
pop
ljmp
fwait
sub
pop
sti
dec
lret
jp
push
lcall
imul
lret
pop
ljmp
fwait
sub
pop
dec
lret
jp
push
sbb
mov
mov
lret
imul
sbb
sub
pop
jmp
lret
jp
push
lcall
sbb
repz
add
orb
mov
test
xor
imul
pusha
sub
stc
mov
mov
mov
add
jno
imul
pusha
sub
arpl
shl
loopne
adc
push
sbb
xor
outsl
push
dec
cmovge
popf
orb
xchg
loopne
or
shrl
rolb
mov
cmp
pop
rcl
daa
jmp
or
loope
rorl
push
cmpsb
pushl
lods
or
push
js
cwtl
fs
mov
dec
jo
dec
xchg
repnz
pop
data16
xchg
out
ljmp
push
flds
jmp
adc
and
fadd
test
mov
adc
movq
add
push
cmp
loopne
js
jne
pusha
cltd
and
cmc
push
movsb
push
mov
jp
leave
es
or
sbb
lods
add
inc
dec
jno
popa
inc
iret
push
sub
lea
mov
mov
add
xor
push
push
and
pusha
sbb
fld
cmpsb
fcoml
movsl
in
int3
test
js
mov
pop
faddl
pop
or
sbb
lahf
ret
pop
mov
test
rcrb
cmp
sub
sbb
or
pop
jg
out
scas
sub
xchg
addb
mov
add
jns
imul
pusha
sub
stc
mov
mov
mov
add
jns
imul
pusha
sub
test
pop
mov
adc
pop
push
pop
xor
call
mov
popa
les
cmp
in
jne
ret
data16
pusha
daa
sbb
adc
int3
ss
cld
cmp
mov
push
xor
das
dec
jnp
jl
sub
push
sbb
mov
sub
sub
fdivl
adc
sbb
xchg
xor
push
pushl
test
push
fildll
push
js
or
pushf
rolb
test
pop
or
and
xor
leave
scas
mov
mov
dec
cmp
cmpsl
adc
jno
xor
sbb
add
xchg
push
js
jb
out
mov
xor
sbb
aad
lock
adc
sbb
add
push
notb
fadd
push
test
xchg
rcpps
jle
mov
imul
mov
mov
adc
lods
aaa
out
or
nop
mov
add
or
mov
test
push
sbb
mov
pushf
shl
add
inc
jecxz
ss
dec
xchg
shlb
in
and
and
int3
call
sub
push
jecxz
jg
jbe
push
and
add
lock
jb
popf
lds
pop
lahf
imul
xor
mov
mov
xchg
negl
scas
scas
clc
sbb
jns
frstor
cld
and
and
adc
imul
loop
repnz
xchg
mov
mov
jecxz
jle
mov
sbb
nop
mov
push
pop
ljmp
ljmp
xchg
popf
int
push
inc
pop
aaa
and
sbb
jnp
sbb
or
mov
cmc
cld
xchg
jmp
outsl
mov
sbb
push
mov
lahf
mov
pop
mov
ret
adc
sub
dec
or
inc
add
jmp
and
ret
divb
jp
loopne
arpl
std
adc
mov
xorb
lock
std
scas
js
rorl
push
sar
and
cmp
cmp
cmp
sbb
int3
pusha
lea
lcall
testb
inc
bound
leave
inc
cmp
call
scas
call
dec
cli
out
xlat
mov
or
jns
mov
adc
fwait
lcall
inc
sbb
adc
inc
pop
pop
xchg
dec
jle
add
adc
pop
xchg
mov
sbb
push
push
repnz
xchg
jge
push
pop
hlt
add
jmp
add
ret
sub
xchg
fildll
stos
repnz
jnp
icebp
les
mov
and
out
test
repz
mov
or
je
icebp
mov
push
jne
dec
mov
ja
and
negl
jo
fmul
divl
icebp
in
or
add
xor
js
cmp
pushf
or
sub
test
xor
or
cs
mov
stos
pop
xor
pop
dec
and
and
shl
icebp
mov
gs
daa
xor
rolb
iret
mov
sub
jns
lds
das
dec
jp
fsts
sbb
mov
icebp
lds
aad
ja
cltd
outsl
and
pop
sub
fdivs
mov
fstpt
pop
lods
cmpsl
ja
jle
mov
dec
jle
rcr
pushf
dec
mov
push
std
and
sub
sahf
aad
lret
pusha
shrb
and
dec
mov
fldz
mov
mov
jmp
mov
cmp
pop
sub
leave
pop
icebp
es
fdivs
add
pop
bound
mov
negl
inc
adc
jle
jbe
and
js
fwait
cmp
into
mov
test
lahf
andb
jmp
fistpl
out
movzwl
fidivrs
jmp
mov
mov
in
inc
lcall
cmp
sub
xchg
mov
mov
fwait
mov
cwtl
inc
xchg
xor
cmp
add
hlt
ljmp
and
cwtl
mov
ds
dec
in
in
jae
mov
pop
cmp
mov
fcoml
pop
inc
jae
test
and
pop
xchg
int
push
sbb
pushf
pusha
add
or
in
lock
je
dec
jl
sbb
pop
xchg
push
and
aam
mov
jo
xchg
push
sub
gs
cmpsb
stos
jecxz
cmpsl
sub
subb
xchg
mov
jno
lret
fcmovnb
int
call
jns
xchg
xlat
sbb
inc
les
fidivrs
sbb
bound
sub
jg
pop
dec
jo
pusha
push
jle
xchg
add
repz
rcrb
mov
jne
sub
push
lret
push
pop
sbb
popf
mov
mov
pusha
mov
subb
inc
adc
popa
imul
ds
ds
adc
repnz
or
stc
into
popa
aas
scas
fwait
inc
adc
aaa
adc
add
or
loope
fdivrs
pop
into
aad
or
je
lods
sbb
push
cwtl
int3
out
lock
inc
sub
push
sbb
lds
shll
push
inc
mov
mov
cmp
pusha
cmp
bound
scas
sbb
pop
stc
fcmovne
ds
cmp
pop
pop
mov
je
pop
mov
push
dec
and
pop
inc
sahf
mov
jb
jmp
mov
mov
gs
fisttpl
inc
or
jp
movd
pop
popa
jp
fisttps
push
and
pop
scas
pop
roll
mov
les
lds
mov
inc
mov
sbb
mov
cmp
daa
cwtl
je
icebp
jbe
mov
arpl
ljmp
inc
dec
jne
popf
or
mov
enter
repnz
push
inc
jmp
cli
out
jecxz
movsl
adcl
aaa
lea
out
xor
xchg
mov
popf
pop
xor
xor
mov
jbe
dec
cmp
dec
mov
xlat
mov
push
sar
jno
sbb
js
push
in
mov
dec
in
sub
outsl
jg
xor
fldt
inc
leave
mov
pop
scas
out
adc
inc
icebp
fwait
lea
inc
and
call
jg
mov
in
and
jmp
push
arpl
ret
inc
mov
and
gs
es
or
stc
mov
cmp
nop
jg
ljmp
mov
bound
xor
hlt
test
mov
or
in
xchg
mov
xchg
inc
rcrl
rcr
inc
es
xor
cmp
iret
mov
cld
test
jp
dec
hlt
sub
add
mov
gs
cli
test
es
xchg
xchg
cltd
mov
std
or
xor
inc
sub
test
faddl
xchg
das
cmpsl
sbb
mov
movsb
mov
mov
push
pushf
sub
rolb
push
xchg
clc
mov
inc
mov
xchg
test
mov
sub
pushf
mov
xchg
das
insb
add
inc
stos
fldenv
xor
add
mov
mov
std
std
mov
jae
sbb
lods
std
add
push
xchg
xchg
clc
idivb
sub
out
sti
xchg
xor
iret
and
arpl
mov
jmp
imul
add
dec
push
ja
adc
cwtl
fs
rclb
in
fnstsw
mov
scas
mov
mov
xor
pop
sbb
xor
inc
or
imul
movsb
fs
sub
in
inc
mov
ret
jecxz
test
imul
pop
mov
sbb
jb
rol
into
mov
sbb
cli
lcall
flds
mov
pop
adc
jne
daa
repz
inc
inc
repnz
mov
push
cmp
sbb
lock
xchg
jbe
sub
pop
gs
sub
pop
lods
push
xor
inc
sbb
pop
jmp
mov
pop
mov
cltd
inc
hlt
jb
mov
mov
aam
das
cmpsb
mov
jecxz
push
nop
fwait
mov
sub
fildl
push
add
add
inc
stc
inc
add
lcall
mov
mov
out
sbb
adc
jnp
repz
sahf
mov
dec
in
lods
jb
pop
outsl
mov
test
mov
les
rolb
gs
add
rcl
es
push
fstl
sbb
pop
and
hlt
push
adc
nop
sbb
cmp
ds
push
cmpsb
mov
cwtl
imul
push
fbld
add
fsub
cltd
bound
sub
lea
pop
push
faddl
popl
cmp
jge
add
xchg
and
pop
dec
sahf
sub
dec
push
lea
mov
test
xchg
in
cltd
aas
test
rol
mov
das
lretw
jp
nop
and
and
sub
xchg
pop
cmpsb
imul
mov
xchg
xor
in
add
jno
mov
push
decb
je
inc
or
test
test
mov
nop
ret
cmp
rcrb
sbbl
xlat
sub
nop
mov
cld
pop
out
fnstenv
jbe
dec
jecxz
mov
sarb
mov
sbb
cmp
sbb
cmp
fists
adc
arpl
test
mov
lcall
pop
movsl
mov
dec
repz
push
ret
aaa
sbb
arpl
cmp
sub
adc
inc
shlb
jnp
lcall
movsbl
pop
lret
mov
cmp
lods
push
stos
and
inc
cs
sub
adc
pop
fptan
mov
clc
mov
push
mov
or
call
imul
in
outsb
pop
andnps
test
fwait
in
fldt
or
loopne
and
aas
lods
mov
jns
add
icebp
inc
sbb
into
pop
xchg
jbe
mov
fcompl
pop
inc
imul
add
lcall
mov
sub
pop
pop
dec
aam
pushf
jle
pop
ja
bound
dec
push
inc
adc
xor
mov
fiadds
fisttpl
xor
push
or
adc
test
das
push
xchg
bound
test
into
lds
push
fidivs
popf
jns
cltd
movsb
das
jmp
or
inc
nop
lret
ret
pop
lock
mov
leave
js
inc
sbb
lds
jmp
add
jmp
sub
rolb
test
fwait
mov
test
rolb
fdivrl
pop
testl
xor
pop
je
es
cmp
mov
xchg
mov
dec
arpl
enter
iret
dec
dec
push
jne
adc
cmp
fisttpl
pop
cwtl
and
outsl
ficompl
dec
mov
stos
pop
test
jl
add
inc
cmpl
inc
gs
lds
sti
jmp
jo
icebp
pop
xor
lret
or
jle
movsb
push
jmp
test
mov
dec
sub
sarb
jmp
ret
popa
or
xorb
gs
or
lahf
sub
stc
sbb
adc
loopne
xor
arpl
sbb
push
out
push
sbb
jecxz
push
mov
lods
dec
lods
insb
sbb
adc
flds
notl
inc
mov
and
notl
mov
clc
fs
jp
lods
rolb
scas
les
call
and
dec
and
mov
mov
sbb
jnp
stos
mov
lods
inc
cmp
fcmovb
mov
sbb
sub
xchg
pop
jmp
ret
int
idivl
pusha
mov
inc
mov
inc
and
loope
imul
fcoml
jecxz
mov
stos
jecxz
push
iret
pop
inc
inc
sbb
popa
pop
jge
fdiv
ja
divb
jae
into
xchg
or
push
pop
pushf
stos
cli
pop
dec
mov
lds
popf
lods
or
icebp
pop
jp
push
sahf
jmp
sti
inc
cmpsb
scas
xchg
push
insl
xor
jno
inc
insl
ret
xchg
sbb
orb
xchg
pop
inc
xchg
cmc
xchg
cmp
or
loop
sbb
popa
cli
add
jl
xor
loopne
into
in
je
mov
and
mov
or
xorl
fisubs
dec
push
pop
lock
fnsetpm(287
imul
enter
bound
mov
stc
dec
dec
outsb
negb
xor
pop
mov
imul
repz
sub
lret
lret
cmp
push
test
fsubl
mov
pop
and
pusha
add
ret
loopne
sahf
cmp
out
mov
push
sub
adc
mov
inc
inc
push
pop
out
xor
je
ret
lcall
dec
or
out
mov
gs
bound
out
mov
cmp
jo
js
push
jbe
push
xor
jb
mov
cld
stc
ret
add
ss
jb
daa
inc
sub
out
jbe
loopne
jle
mov
not
ret
push
cltd
jne
or
sub
ret
xchg
out
ss
cld
xor
or
push
push
adc
nop
loopne
mov
adc
mov
jecxz
mov
pop
mov
mov
sub
data16
cmc
inc
sbb
pop
pop
push
cmp
add
into
movsb
inc
xchg
push
imul
xchg
sahf
adc
xchg
add
shrb
jle
jb
inc
sub
dec
xor
cmp
fistps
xchg
push
cli
sub
outsl
mov
sub
je
jne
xchg
pop
cmp
cmp
lcall
ret
push
int3
inc
push
xchg
dec
notb
fs
push
mov
fimuls
arpl
jecxz
lcall
mov
cld
lods
repz
add
sbb
faddl
xlat
mov
mov
das
mov
cmc
mov
inc
fs
cmp
cmc
ljmp
dec
pushf
in
jecxz
cmp
leave
add
or
jno
fidivs
sbb
pop
mov
xor
sbb
ljmp
pop
cmc
lds
aad
adc
adc
cwtl
xchg
fimull
repnz
and
call
push
shll
sbb
add
out
ret
mov
mov
push
loope
push
push
divl
push
mov
shlb
cmp
or
and
adc
jge
sbb
sub
mov
xchg
or
cmpb
add
leavew
xchg
xor
mov
add
dec
clc
insl
repnz
sbb
cmpsb
push
push
int
fiaddl
fildl
icebp
adc
mov
push
stc
adc
push
sbb
or
popf
ret
jl
xchg
call
push
sbb
popa
push
and
ret
add
sbb
dec
and
sub
movsb
stos
gs
pop
pop
imul
mov
test
or
dec
dec
gs
adc
and
les
or
pop
ds
adc
arpl
in
fstl
iret
xor
jb
aad
daa
mov
sbb
daa
xor
push
or
pop
fidivl
pushf
inc
pop
nop
out
xchg
xor
in
push
push
mov
popa
loope
leave
stos
daa
fdivrs
or
arpl
mov
and
xchg
into
push
loop
adc
xor
subb
call
add
xor
cmp
xorl
mov
fwait
scas
shl
int
pop
jb
jo
stos
shr
movsl
aam
jle
into
adc
or
orl
mov
pop
testb
push
push
xchg
xorb
fmul
lcall
aaa
fcoms
sbb
pop
fmul
sub
mov
or
in
mov
push
jnp
pop
jmp
loope
xchg
popf
dec
lcall
xor
mov
insl
nop
hlt
fimull
lret
test
cwtl
push
sub
or
mov
inc
mov
icebp
cmp
xor
scas
lcall
mov
and
loope
mov
push
inc
jno
mov
inc
dec
pop
add
clc
iret
xlat
test
pop
mov
cld
cli
inc
inc
xchg
xchg
and
sub
outsb
into
pop
dec
jl
les
pop
sub
sarl
or
sub
dec
adc
pop
movsl
loopne
pop
jo
mov
fidivl
mul
dec
aaa
into
mov
insl
sub
jb
loopne
cmc
std
loop
pop
add
or
mov
cmpsb
inc
loop
insb
addb
xor
clc
repnz
jbe
pushl
ret
add
mov
inc
mov
adc
sbb
lret
dec
push
ljmp
out
inc
neg
aam
add
aam
add
pop
aas
sbb
shlb
in
testb
adc
data16
push
lea
jno
mov
gs
orl
dec
cwtl
mov
flds
out
outsb
pushf
dec
add
mov
enter
mov
loopne
popf
mov
faddl
sbb
loop
jb
sbb
mov
pop
or
js
cmpsl
imul
mov
and
sbb
jns
outsl
push
cmpsl
dec
pusha
sbb
ljmp
in
inc
cmc
int3
inc
in
enter
pop
cltd
pop
pop
cmp
inc
push
std
pop
push
mov
inc
jmp
into
dec
mov
inc
fwait
shlb
inc
dec
lods
mov
push
pop
push
outsb
adc
dec
adc
icebp
mov
push
out
nop
cmp
insb
dec
ficoml
fsubrl
test
cwtl
and
in
mov
jle
pop
out
outsb
pop
mov
push
loopne
jle
popf
push
mov
mov
lret
pop
push
jae
mov
dec
mov
cmpsb
not
push
rolb
inc
inc
out
mov
add
repnz
out
dec
jecxz
cwtl
mov
popa
mov
add
scas
mov
jne
pushf
cmp
cmpsl
dec
enter
mov
repz
pop
iret
fsubp
and
ss
test
insl
pop
imulb
lahf
cmp
adc
ret
test
jecxz
push
dec
ret
data16
lcall
sub
fstl
xlat
pop
divl
mov
rcrl
push
adc
stc
scas
jg
pop
lahf
jmp
addb
in
shll
xor
mov
ljmp
adc
mov
xchg
gs
loop
hlt
and
scas
dec
adc
xchg
cli
sub
pushf
out
jmp
mov
dec
inc
jne
mov
orb
xor
jmp
sahf
cmp
pop
jg
sub
inc
mov
movsb
ret
iret
dec
shlb
mov
outsb
adc
pop
cmp
adc
lahf
xchg
popa
loop
stc
adc
loop
mov
mov
mov
gs
jle
mov
push
pop
sub
or
movsb
sbb
or
sub
cli
inc
mov
add
pop
pop
cli
sub
dec
movsl
adc
dec
jge
xor
or
mov
pop
cmp
xchg
cmp
pusha
imul
pop
inc
lret
ljmp
inc
push
out
dec
mov
pop
jge
aad
fbld
jg
or
mov
fsubrl
mov
sub
mov
inc
add
pushf
stos
mov
inc
pushl
mov
aam
inc
xlat
adc
xchg
cmp
lret
xor
fdivr
rcr
jo
and
or
cmp
lock
out
movsb
sub
shlb
hlt
xchg
jle
imul
pop
push
xor
cmpsb
stos
inc
int3
xor
in
mov
xor
fiaddl
fstps
faddl
icebp
out
mov
out
test
stos
xor
mov
push
outsb
jo
cmp
push
adc
dec
mov
sbb
cmp
dec
or
adc
xor
push
sbb
jae
lock
inc
call
bound
xchg
scas
adcl
adc
scas
cs
in
push
arpl
or
popf
mov
into
out
mov
test
and
aaa
mov
and
cmpsl
in
fs
inc
jae
pop
jbe
adc
and
or
mov
inc
lds
cmpl
or
xor
mov
pop
push
or
inc
mov
insb
sarl
out
daa
out
xchg
jmp
and
pop
rcr
jge
xchg
sar
xchg
loopne
xchg
ficomps
adc
cmc
js
xor
inc
mov
xor
adc
mov
sub
inc
push
cmp
inc
or
pop
cltd
xlat
mov
inc
fwait
test
pop
mov
inc
add
addr16
in
xor
cmp
lods
test
pop
lds
rcrl
flds
insl
sub
or
in
pushl
xchg
sub
sbb
rcr
cmp
cmp
mov
mov
add
stos
ja
fsubl
shlb
push
lahf
ljmp
out
or
notl
or
dec
movsb
push
imul
rolb
adc
adc
or
pop
mulb
outsb
out
int
call
or
adc
cld
mov
mov
mov
add
jns
imul
pusha
sub
stc
mov
mov
mov
add
jns
imul
pusha
sub
loope
in
rcrb
loopne
adc
dec
xor
pusha
push
sbb
popa
int
cmp
mov
mov
cmp
imul
jns
push
daa
popa
enter
lahf
push
stc
insl
mov
orl
cld
jns
push
jecxz
mov
std
add
xor
arpl
push
popf
mov
mov
mov
xchg
pop
jecxz
repz
sub
xor
addr16
frstor
jb
inc
lea
mov
dec
mov
sub
les
outsl
mov
fnstenv
call
mov
iret
sub
mov
jmp
cld
lock
sub
fdiv
lret
test
int
mov
stos
gs
push
pop
push
mov
pop
andl
add
adc
cld
int
insl
and
scas
fisubs
js
stos
lret
xor
or
pushf
and
in
sbb
jmp
xchg
mov
dec
sub
sub
pop
ficomps
add
dec
and
and
add
mov
ficompl
xor
shl
ret
dec
sub
adc
leave
gs
into
mov
test
dec
push
sub
js
and
clc
cwtl
fcoml
int3
in
cld
leave
adc
mov
cwtl
push
popf
arpl
jge
dec
test
sub
lret
in
sub
sbb
or
jnp
imul
add
scas
out
negl
xchg
jl
push
xor
rclb
es
clc
mov
dec
xchg
or
bound
xchg
inc
fwait
data16
ret
xor
push
repz
or
cmp
cmp
and
xor
add
adc
arpl
push
popf
mov
dec
xchg
pop
jecxz
repz
and
xor
add
adc
arpl
push
popf
mov
mov
fildll
jl
mov
hlt
inc
cmp
xchg
and
filds
sub
outsl
sbb
lret
mov
rcr
shlb
out
jmp
pop
inc
andl
cmc
xchg
mov
pop
xor
call
adc
loopne
out
pop
xor
les
sahf
cld
lret
push
mov
mov
sbb
xchg
adc
jo
test
fidivrs
mov
cmp
push
inc
mov
sbb
aaa
pusha
rcl
mov
clc
mov
or
push
xlat
sbb
jbe
mov
jge
and
gs
shrb
stc
test
test
sub
cmp
and
sbb
out
and
lret
das
xchg
nop
lret
in
mov
push
push
xchg
or
stc
int3
dec
leave
js
popf
scas
pop
lock
adc
mov
leave
sub
cmp
pop
push
ja
push
loope
adc
ret
stos
in
faddl
lahf
sub
mov
mov
loop
xchg
add
cli
pusha
dec
sub
dec
push
push
push
mov
xor
loopne
das
mov
clc
jg
rorb
cmp
push
sub
stc
dec
jge
push
adc
sub
test
jnp
sahf
imull
enter
in
cmp
pop
stc
pop
rcl
je
ss
loope
inc
or
mov
pop
xor
inc
or
push
cmpb
sbb
push
sbb
mov
fst
ss
and
test
cmpsl
movsb
cld
inc
or
std
xor
ficompl
xor
mov
lea
inc
dec
push
rcr
shlb
orb
fiadds
lods
clc
leave
ror
fstpt
add
popa
jp
add
outsb
sbb
cmpsl
test
fsubrs
jp
mov
loope
jp
xor
movsl
xchg
pusha
stc
jp
xchg
pusha
jg
js
sbb
jo
mov
je
inc
sbb
insl
add
push
push
insb
scas
and
in
mov
dec
out
es
add
sbb
rorl
mov
push
push
jle,pt
cmp
lret
iret
cmpsb
stc
test
test
cmpsl
dec
iret
loop
xchg
popa
push
shrb
push
jo
push
mov
les
aad
dec
shll
fs
daa
jbe
lock
out
xchg
out
enter
push
sub
test
sbb
lret
test
jl
das
clc
adc
or
jp
inc
ror
pop
jne
xchg
pushf
pusha
dec
mov
add
xchg
out
out
loope
inc
lea
dec
addr16
xchg
cmp
push
push
or
push
sbb
test
sar
mov
stos
pusha
add
add
jb
add
out
push
xorl
xchg
aam
mov
ds
test
jp
aas
divb
and
or
outsb
inc
addr16
adcl
dec
arpl
cmpl
or
pop
ret
ljmp
mov
in
data16
pushf
pop
jmp
cli
sbb
jb
sahf
scas
lret
std
mov
xor
push
iret
push
shr
push
or
mov
es
sbb
add
or
sbb
subl
in
mov
or
je
jns
sbb
cmp
insl
mov
out
push
lods
sbb
xchg
or
test
popf
scas
fs
loopne
pop
and
mov
xchg
xlat
jbe
out
and
mov
out
dec
jg
sbb
rolb
inc
pop
popf
test
not
in
jns
lcall
leave
cmp
xor
adc
push
push
push
outsl
add
xchg
xchg
mov
jl
das
aaa
xchg
push
ds
test
sar
orl
out
subb
inc
lret
and
aas
shlb
es
cmp
or
pop
scas
dec
pop
ja
sbb
notb
push
push
pop
jns
inc
fdivrs
xlat
push
ja
xchg
adc
add
cs
xor
cwtl
repnz
push
pop
lret
xor
dec
jmp
or
rcrb
xchg
outsl
add
sbb
push
hlt
push
xchg
ret
xor
les
daa
inc
rolb
mov
fbstp
rcr
cld
mov
lods
push
jge
in
dec
mov
xor
dec
imul
pop
int3
je
clc
lret
add
cmc
cmpsb
mov
dec
fmull
jbe
pop
loope
aaa
dec
add
add
push
ljmp
aad
xchg
lret
aam
test
sysexit
mov
jno
outsl
sub
sub
mov
mov
mov
push
and
and
lds
loopne
cs
andl
fldcw
fsubrs
mov
dec
adc
lcall
jecxz
loop
jns
sbb
mov
pop
xchg
pop
loope
aad
es
jp
add
out
das
aas
addr16
test
jmp
cmp
jb
out
loope
xchg
repnz
dec
aaa
jns
and
inc
push
clc
pop
sarl
in
in
ffree
data16
dec
dec
mov
mov
mov
xchg
scas
xchg
jbe
mov
lea
xor
and
and
and
imul
int
or
sbb
inc
cmp
mov
sbb
jb
add
movsb
or
outsl
jne
sbb
iret
cmpsb
test
ljmp
aaa
aaa
xchg
push
dec
testb
lds
sub
pusha
stc
out
inc
dec
in
aaa
jbe
mov
push
jecxz
jp
xchg
lret
jnp
mov
fcmovnb
adc
adc
mov
xchg
xchg
mov
ljmp
mov
dec
data16
mov
push
cmpsl
insl
mov
stc
fcomi
mov
inc
or
popa
call
rcll
cmp
jb
leave
pusha
push
inc
push
int
sbb
pop
xor
jo
mov
fwait
jbe
push
cmp
inc
and
les
mov
popa
sbb
fwait
or
ja
dec
push
xchg
adcl
and
inc
ret
lahf
scas
movsb
lret
cltd
mov
or
xor
and
outsl
aad
xchg
mov
test
mov
cmc
xlat
add
adc
push
inc
dec
fstl
mov
mov
orl
filds
add
xor
cwtl
pop
jo
fmuls
pop
mov
xor
inc
repnz
add
push
in
sub
ret
negl
push
aad
sub
xchg
in
pop
sti
loope
push
int3
cmp
add
clc
fimull
mov
cli
call
jo
lods
call
dec
pop
pop
icebp
pop
mov
and
sti
sbb
loope
push
jmp
dec
add
imul
aaa
out
mov
pop
pop
adc
add
cwtl
mov
jmp
and
mov
inc
and
add
pop
xchg
inc
adc
jp
mov
cmc
rorb
pop
mov
fisubs
adc
mov
jo
cmpsb
add
fcomps
rol
sbb
cmp
ret
sahf
dec
pushf
pop
cs
mov
les
ret
mov
lret
sub
mov
leave
cmp
mov
testb
dec
cmp
cmpb
loopne
out
add
rorb
ljmp
push
stos
add
outsb
push
inc
or
fabs
nop
push
clc
pop
shrb
jns
push
pusha
pop
lret
scas
or
add
int3
ja
and
clc
enter
and
daa
std
adc
fisttps
xchg
cli
mov
neg
cli
test
push
subb
pop
and
cwtl
lahf
push
mov
in
mov
and
jb
in
mov
test
hlt
sbbb
lret
repnz
inc
fwait
jae
mov
sub
dec
adc
dec
sbb
lret
gs
cltd
xor
jae
mov
addr16
or
or
add
loope
imul
adc
and
rcl
add
repnz
pop
imul
xchg
nop
bound
jb
pop
push
sbb
sbb
cmp
stc
and
rcll
iret
add
lret
xor
push
lods
inc
es
lods
push
fistpll
push
push
les
bound
push
pop
psubsw
mov
mov
cmpsl
enter
sub
sbb
push
nop
mov
xor
loope
cmp
dec
mov
lret
mov
es
sub
jmp
or
add
stc
outsl
sti
shll
lcall
data16
sub
jne
dec
sub
into
clc
outsl
in
cmpsb
pop
mov
jns
rclb
scas
sub
dec
loope
in
cmpb
hlt
andl
or
stos
lahf
pop
cmp
xchg
dec
ret
sbb
jmp
inc
arpl
pop
xor
adc
jp
outsb
and
cmp
scas
add
jl
scas
pop
or
js
das
xchg
bound
jno
sti
xchg
jns
dec
imul
inc
cmp
pusha
or
ret
test
ds
in
pop
jmp
add
cmp
fwait
sti
sbb
loop
and
cli
lcall
sbb
add
push
lods
and
cmp
hlt
lock
leave
dec
jns
cmpsb
inc
or
pop
jnp
gs
test
icebp
jmp
xchg
pop
nop
add
stos
mov
inc
out
sbb
sbb
cld
dec
cmp
andl
gs
pop
into
mov
jmp
push
dec
pop
sbb
pop
insb
xchg
aaa
xor
scas
and
lahf
xor
loop
push
jmp
inc
sub
mov
popa
int
sub
jbe
xlat
movsb
jp
int3
sbb
psubw
xchg
sub
add
ret
int3
xor
or
clc
jns
pop
pop
mov
mov
jns
xchg
cli
dec
cwtl
cld
orl
ret
fisubs
pop
sbbl
test
add
pusha
inc
mov
add
fcompl
mov
dec
xor
or
and
outsb
sub
sar
outsb
ljmp
mov
sbb
mov
push
nop
addr16
sbb
mov
jl
int3
div
pop
adc
or
xchg
and
fisubs
and
sub
sub
and
negl
jle
stos
and
mov
dec
sbb
jmp
push
cltd
cmpsl
sub
loop
mov
lcall
sub
sbb
add
stos
pop
aas
rolb
stc
mov
nop
pop
mov
jg
int3
inc
xlat
pop
cld
sub
int3
popa
cmp
push
lods
pop
mov
sbb
scas
shrb
cmp
iret
insl
lcall
movsl
int3
push
mov
aad
fisttpl
lcall
dec
cwtl
scas
or
mov
movsb
cmp
cwtl
dec
inc
aas
and
call
in
and
inc
mov
pop
xchg
mov
fld
xchg
imul
jp
adc
adc
push
sarl
xchg
pushf
cmp
mov
hlt
xor
sub
push
xchg
mov
div
jle
xor
inc
ret
jbe
fwait
pop
cmpsl
cmp
lcall
inc
test
dec
dec
jnp
jo
adc
adc
imul
mov
sub
dec
ret
mov
cmp
cmp
sahf
clc
fnsave
int
add
gs
add
dec
or
aam
adc
pop
xor
or
xchg
out
ror
jae
ds
outsl
pop
fiaddl
mov
rorb
or
sub
test
shrl
aam
pushf
dec
jnp
ds
clc
enter
sub
dec
mov
mov
filds
push
lods
pop
test
inc
loopne
lods
loope
push
sub
cmpsb
repnz
inc
xor
rorl
jns
and
xlat
inc
mov
add
clc
fsts
pop
or
jnp
lret
and
adc
clc
cld
xchg
jl
enter
stos
ljmp
sahf
std
mov
pop
jne
xchg
push
testb
jb
fisubs
pop
sahf
stos
call
jmp
fwait
mov
outsb
ret
dec
cmc
fiadds
cmp
out
mov
add
jbe
or
fisttpll
hlt
cmpsb
ret
icebp
pop
sbbl
in
pop
shlb
pop
outsb
or
out
mov
push
pop
loop
add
push
scas
xchg
mov
negl
adc
adc
loopne
jg
mov
push
lods
xchg
mov
xor
ror
je
fcomps
cmp
xchg
pop
add
or
sub
lods
adc
sub
mov
or
lret
nop
in
mov
cmc
mov
xor
in
arpl
shl
push
push
pop
jp
adc
inc
mov
pushf
mov
call
leave
pop
push
lret
pop
cltd
adc
sbb
sbb
mov
and
mov
addl
orb
jns
sub
pop
imul
lds
iret
pop
popf
subb
aaa
call
jb
and
cmp
test
rcrb
fdivs
pop
std
in
mov
adc
inc
sbb
adc
jmp
mov
jl
add
pop
aam
nop
push
dec
lods
jmp
iret
push
jmp
or
xor
or
xchg
mov
sbb
cmp
sub
js
xor
pushf
sti
xchg
daa
out
popf
jl
lds
jns
stos
push
xor
mov
mov
insl
rep
push
scas
dec
in
leave
mov
sbb
mov
jo
and
aas
pop
inc
xor
ja
stc
int
int
insl
mov
leave
cmpsl
fsubrs
mov
pop
xlat
icebp
iret
outsl
pop
sbb
jo
inc
push
rcrl
jo
pop
imul
test
rolb
repz
dec
dec
cmp
xor
cli
subb
in
cmp
mov
lods
sub
mov
popa
loope
cmp
mov
int3
out
dec
inc
into
cmp
adc
pop
leave
in
xlat
pop
movsl
rcr
pop
je
xchg
sub
shrb
mov
sahf
mov
icebp
repnz
jmp
pop
dec
nop
aas
js
imul
or
fsubrl
cmp
cltd
ret
and
push
lcall
mov
xor
imul
push
push
and
push
out
jnp
fs
pop
pop
pushf
movsl
cmpsb
cmpsb
adc
and
sub
mov
sbb
pop
pop
mov
hlt
in
mov
mov
sbb
sub
mov
sub
dec
mov
andl
push
xchg
xchg
stos
jp,pt
inc
js
repnz
xchg
pop
shrb
data16
jmp
mov
mov
mov
inc
mov
in
mov
test
int3
xchg
fucom
adc
lahf
movsb
add
pusha
das
ljmp
sub
mov
jbe
fcomps
data16
add
sub
iret
push
sti
sahf
and
shl
jns
movsb
ds
mov
dec
je
and
test
or
xchg
shlb
add
out
incl
xchg
xchg
int3
stc
movsl
out
fistps
push
push
ss
dec
or
es
inc
daa
pop
std
or
lock
jo
pop
pushf
ljmp
sub
fwait
xchg
adc
inc
mov
test
sbb
jns
inc
xchg
enter
aad
stos
cmpsb
ret
lods
ds
mov
dec
mov
addr16
dec
fcompl
inc
out
outsb
test
loopne
dec
orl
ret
enter
insb
jne
jmp
jno
incl
mov
push
icebp
in
mov
jo
mov
js
dec
xor
xchg
and
test
push
pop
fstpl
lcall
std
fbstp
sub
push
sub
adc
les
mov
lret
out
add
mov
pop
sub
jg
or
aad
dec
add
inc
fsubrl
movsl
sub
or
icebp
jl
mov
lcall
mov
push
ret
dec
inc
mov
sub
sbb
pop
mov
lahf
dec
xchg
xor
mov
push
inc
sub
xchg
in
fucom
cmp
fstpl
adc
test
push
sbb
lret
dec
stos
sbb
sub
pop
call
and
push
push
ja
mov
push
push
mov
push
outsb
mov
xor
push
pop
iret
and
xchg
fistl
and
fs
scas
daa
mov
mov
mov
xchg
xor
mov
push
pop
and
pop
outsl
dec
aad
inc
or
dec
sub
ds
std
js
cmpsl
xor
mov
lcall
in
lods
fnstsw
or
pop
idivb
jae
mov
inc
sub
or
xor
push
sub
out
mov
xor
mov
int
cmp
sbb
lock
fildl
cmc
xor
fld
scas
loopne
stos
jle
add
sbb
push
sub
xchg
je
pop
xor
dec
push
adc
clc
xor
lret
shlb
aaa
in
add
xor
popa
test
mov
lods
adc
pop
pop
adc
xchg
xlat
xor
pop
push
mov
adc
xchg
pop
sub
lret
inc
pop
ret
sub
sbb
lock
repz
sub
int
jl
cmc
adc
push
mov
lcall
aad
adc
dec
and
sub
adc
fmuls
and
sahf
jge
lods
iret
popf
mov
rcr
fimuls
popa
movsl
push
ja
mov
dec
outsl
imul
xchg
into
aad
test
sub
les
enter
jmp
in
repnz
stc
pop
adc
lods
ficomps
mov
add
pusha
or
in
mov
dec
inc
xor
bound
mov
dec
mov
out
or
adc
and
mov
xchg
fistps
and
addr16
and
push
xchg
lret
push
out
insb
imul
sbb
push
mov
mov
test
jbe
dec
popf
repz
int3
shrl
jb
xor
enterw
in
leave
jl
dec
dec
jp
add
test
lret
push
xchg
clc
loope
fcoms
imul
repz
gs
dec
sub
mov
sbb
int
aam
pop
mov
push
inc
or
ret
out
dec
push
and
out
mov
mov
push
mov
jecxz
lods
mov
adc
cld
sub
dec
out
and
dec
mov
jp
outsb
inc
mov
loop
mov
pop
mov
mov
mov
xchg
insl
mov
sbb
js
std
cmpsb
out
imul
jno
ja
pop
mov
or
enter
dec
add
outsb
iret
cmpsb
insl
and
push
mov
xchg
or
mov
or
jb
push
and
push
xor
dec
push
mov
scas
cltd
push
and
fdivl
and
in
mov
mov
mov
sbb
cmp
popa
nop
shll
and
notb
pop
jmp
iret
mov
lods
loope
sub
jno,pn
fidivs
out
sbb
fistpl
jp
shrb
ja
shrl
add
je
aas
push
and
mov
jp
or
xor
hlt
adc
icebp
push
aas
dec
push
mov
xor
mov
scas
cwtl
jge
inc
mov
fdivs
ja
push
add
ss
sub
outsb
dec
jg
in
leave
xchg
cmpsl
je
les
lret
dec
mov
cmpb
fildll
icebp
fdivs
adc
mov
lret
cld
mov
and
sarb
aad
sbb
lret
or
or
pop
sub
push
jg
push
pushl
jns
xchg
cmp
adc
push
movsb
repz
scas
cld
add
pop
lods
enter
cli
add
imul
cmpsl
std
mov
sub
mov
out
mov
mov
add
push
js
gs
repnz
jmp
pop
repnz
mov
jp
mov
sbb
cmp
or
jp
cmp
call
int3
arpl
das
push
sub
fsubl
dec
testb
les
shl
pop
pop
mov
and
mov
arpl
dec
cmp
stc
xchg
inc
fldl2t
inc
clc
jl
and
jmp
and
pop
mov
mov
sbb
pop
pop
imul
mov
dec
outsl
mov
cmp
inc
ret
jno
outsb
jmp
mov
fcompl
adc
movsb
adc
repnz
jae
mov
mov
pop
pushf
mov
mov
sahf
loopne
pop
fdiv
test
jae
xor
fcomp
dec
adcb
jle
or
not
movsl
mov
aad
fldl
js
out
jno
xor
or
cltd
push
lahf
sbb
std
shll
jo
rorl
mov
xchg
jns
dec
adcl
push
rolb
cmpsb
rclb
cmp
jae
xchg
enter
mov
test
pushf
mov
ja
aam
es
sti
mov
push
in
in
jge
sbb
jbe
call
out
fwait
stc
lcall
das
inc
xchg
adc
jmp
dec
pushf
pusha
call
pop
adc
dec
xchg
pop
jecxz
repz
and
xor
add
adc
arpl
push
popf
mov
dec
xchg
pop
jecxz
repz
and
xor
add
adc
arpl
push
popf
mov
dec
xchg
pop
jecxz
repz
and
xor
pop
int
frstor
ja
inc
lea
xchg
insl
xchg
dec
xchg
pop
jecxz
repz
fcoml
int3
push
test
and
lods
bound
jae
inc
rcll
sub
mov
and
repz
push
roll
xor
add
jae
inc
rcll
and
adc
jecxz
repz
pop
mov
adcl
add
jae
inc
rcll
and
adc
mov
std
and
shlb
jge
jo
xorb
mov
xor
and
cmpb
jbe
xor
cwtl
rcrl
iret
imul
mov
or
fstpl
xor
push
fwait
repz
out
mov
and
jle
std
jecxz
cltd
out
cmp
mov
and
xchg
push
mov
xor
adc
mov
jecxz
jecxz
dec
xlat
cmc
mov
sbbl
add
imul
cmp
add
adc
shrl
and
xchg
pushf
jbe
outsb
add
mov
cwtl
mov
cltd
xor
stos
xchg
push
lahf
xor
push
cmp
rcll
and
adc
ret
push
roll
xor
push
negl
mov
dec
jp
data16
xlat
mov
ss
inc
push
dec
pusha
xchg
add
fistps
add
adc
xchg
icebp
sbb
pop
out
icebp
inc
xchg
insb
or
push
cmpsb
and
adc
ret
push
roll
xor
add
jae
inc
rcll
and
adc
ret
push
roll
xor
add
mov
ja,pt
stc
lahf
dec
mov
lcall
sub
add
js
popa
xor
xchg
inc
or
add
cli
dec
scas
das
out
cmpl
add
push
inc
mov
out
mov
push
lea
push
leave
inc
jo
sbb
mov
rcll
push
sbb
test
pop
in
mov
xchg
mov
je
jge
pop
and
sbb
outsl
mov
stos
adc
sbb
jmp
ja
leave
lock
ret
adc
push
lock
mov
roll
mov
push
mov
gs
inc
jno
and
int3
repz
add
lret
pop
das
mov
pushf
iret
pushf
bound
pop
es
mov
out
mov
mov
mov
push
inc
push
mov
ljmp
jo
aam
xor
adc
fpatan
pushf
jbe
out
stos
repz
mov
fistpll
bound
xor
sub
in
mov
pop
out
loop
push
aam
cmpb
call
enter
ljmp
int3
mov
and
pop
sahf
jmp
mov
cld
mov
cmp
xchg
adc
inc
adc
dec
inc
mov
xchg
xor
inc
hlt
xchg
adc
test
xchg
pop
push
sbb
or
dec
cmc
pop
ljmp
pop
or
sub
fcomps
inc
movsb
ffree
test
scas
stos
cli
cld
es
dec
pop
xchg
adc
daa
iret
fisubs
pop
aad
inc
mov
dec
sbb
flds
jo
sti
mov
sub
out
mov
loopne
fistl
stos
ja
mov
stos
xchg
push
cmc
enter
out
inc
mov
add
inc
testl
jl
push
push
mov
lea
popf
neg
sub
mov
rcl
test
imul
mov
mov
mov
rol
loop
cli
fisttpll
sub
add
imul
mov
sbb
cmp
push
jge
lret
adc
add
int3
popf
or
stos
aad
test
inc
jmp
mov
pop
jae
or
shlb
movsl
add
push
ret
inc
push
mov
pop
in
imul
mov
in
dec
xor
xchg
cmpsb
mov
push
aaa
subl
das
mov
jno
and
cmp
out
adcl
pushf
sbb
scas
test
inc
incb
inc
movsb
mov
push
nop
cmp
inc
sbb
sti
mov
pop
cmc
sbb
push
sub
or
dec
popa
mov
inc
outsl
xlat
push
jmp
jg
xor
or
xor
shrb
mov
out
hlt
pop
adc
cs
sub
fwait
jg
mov
jp
adc
mov
and
loopne
sbb
add
sub
lods
inc
aas
sub
fidivs
adc
outsl
sbb
jle
push
orb
int
rcl
loope
sbb
aas
cmp
sub
push
xor
jg
fwait
push
mov
aad
sub
lret
rcrb
jb
daa
cmc
sti
mov
stos
lret
sub
hlt
in
aas
adc
pop
fstpl
ret
scas
loop
aad
xchg
pop
jl
inc
pslld
jge
xchg
xlat
popa
aad
sahf
add
mov
sub
shlb
js
inc
dec
mov
pop
xor
jmp
cmpsb
or
sarl
pushl
and
out
pusha
les
inc
or
mov
and
fistl
or
pop
fsubl
sub
sbb
pushf
push
in
mov
mov
sti
xor
add
mov
lock
lret
popa
aad
cs
jb
jecxz
or
lods
dec
inc
dec
sbbl
jo
insb
jl
sub
jns
je
scas
ss
sbb
mov
mov
rclb
nop
sub
mov
into
push
pop
es
lret
cmp
sbb
enter
lds
repz
fdivs
inc
aaa
stc
cwtl
and
gs
out
add
adc
scas
mov
dec
leave
lock
dec
add
sahf
push
lcall
mov
stos
mov
out
lret
lds
cmpsb
jle
neg
adc
add
inc
arpl
mov
jl
ret
pslld
dec
testb
hlt
sub
daa
pop
fldenv
add
loop
mov
mov
scas
dec
mov
out
inc
jbe
clc
out
mov
and
mov
sub
pop
cmc
lea
xchg
rcl
popa
inc
pop
loopne
lret
adc
mov
or
mov
add
dec
sub
test
arpl
jno
in
cmp
mov
icebp
dec
gs
pop
lock
pop
pop
out
out
mov
rcl
cmc
shrl
jp
jb
dec
dec
cmp
arpl
aas
jle
and
pop
hlt
cmp
and
out
jno
int3
cld
inc
dec
pop
mov
addr16
xchg
lret
sub
jp
fldt
inc
enter
js
outsb
rcl
in
imul
arpl
jmp
clc
cmp
popf
mov
push
sub
xor
or
das
cltd
jle
push
pop
jl
mov
or
mov
add
jae
ret
pop
icebp
cmpsb
push
inc
loop
xor
push
inc
filds
shrl
jecxz
and
fidivrs
inc
or
adc
ja
bt
cmc
mov
pop
mul
fstpl
fidivrl
loop
adc
in
gs
pusha
sti
jmp
fs
les
pop
int
pop
ljmp
jg
sub
or
incb
sbb
loopne,pt
bound
nop
test
sub
rclb
push
pop
push
inc
mov
push
fists
xchg
xor
push
xchg
mov
data16
or
scas
pop
fwait
enter
ja
mov
push
sub
push
sahf
dec
test
inc
cld
jne
sbb
jo
or
jg
adcl
mov
jp
mov
in
shrl
xor
xor
jno
mov
mov
popf
loopne
sub
cmp
xchg
loop
es
add
sti
aam
ds
xchg
rol
xlat
sub
xlat
loope
mov
into
xchg
mov
sbb
jg
mov
mov
scas
hlt
sbb
sub
fsubrs
and
rcrl
test
ret
leave
inc
subb
mov
pop
mov
adc
pop
mov
int
add
sub
mov
lret
in
sub
aas
or
add
mov
sub
sub
xchg
add
lds
mov
sub
je
leave
mov
int3
jae
and
pop
jp
pop
movsl
push
in
push
fcmove
push
adc
test
jp
xchg
jno,pt
sub
inc
or
clc
in
imul
sbbb
mov
aad
fstl
sub
call
nop
cmp
inc
jae
ds
subl
and
jb
ja
sbb
lods
je
mov
addr16
js
xchg
adc
add
add
gs
adc
sahf
stc
pop
test
test
cwtl
or
dec
cld
clc
jmp
adc
out
addb
rcrb
and
inc
sub
mov
rclb
mov
sbb
mov
mov
movsl
fs
or
jecxz
outsl
icebp
imul
sub
pop
jg
ja
ror
sub
lds
dec
push
mov
push
std
xchg
popf
inc
clc
lods
xor
insl
popf
add
sbb
jge
clc
test
mov
xchg
fstps
push
or
dec
in
lcall
mov
xor
stc
add
out
dec
frstor
mov
jbe
mov
jno
ja
sahf
pcmpgtd
orl
scas
pop
push
ja
mulb
ret
dec
pop
dec
scas
into
sahf
push
push
fs
mov
clc
or
fimull
stos
inc
fdiv
or
adc
cltd
outsb
xchg
fsubrl
pop
mov
jl
mov
cs
pop
mov
jns
movsb
mov
out
lods
or
insb
or
pop
scas
push
lcall
stc
and
repnz
shrl
inc
cmc
mov
push
testl
int3
iret
dec
push
out
mov
daa
int
sti
adc
cmp
add
lahf
fisubs
aaa
lock
enter
les
cmp
or
in
int
in
xchg
addr16
ss
popa
jg
mov
gs
aas
jg
outsb
xor
push
mov
les
inc
daa
cs
test
xchg
xchg
push
nop
dec
sbb
inc
push
inc
xchg
mov
lret
arpl
push
or
cmpsb
cmpsl
pushf
nop
mov
nop
sbb
movsb
dec
pusha
push
adc
mov
sub
cmp
inc
rcr
add
pop
mov
pop
or
pop
jecxz
mov
leave
cmp
push
cmp
mov
inc
test
stos
les
or
add
adc
daa
sbb
lods
in
lock
sbb
mov
xor
xchg
mov
cmp
js
je
sbb
dec
inc
inc
cmpl
repz
mov
ret
pop
int
aaa
sarb
rcrb
mov
and
xor
sub
cli
out
cwtl
jnp
xchg
xchg
out
xchg
xchg
aas
adc
mov
cmpsb
jno
and
cmc
mov
push
mov
cmp
mov
test
push
lret
loop
sub
xchg
imul
dec
or
and
xchg
mov
fwait
and
sub
in
or
arpl
push
outsb
sub
lcall
lret
in
aam
mov
xorl
popw
jne
sub
cs
mov
sbb
out
xor
in
push
rcrl
xlat
fsubrp
cmp
jo
mov
stos
jle
in
lods
imulb
pop
push
pusha
mov
sub
and
out
fwait
subl
cmp
mov
inc
jmp
je
add
popf
aas
pop
lods
mov
mov
and
dec
or
pop
movsb
dec
inc
in
stos
mov
xchg
mov
pop
and
cmp
cmp
sbb
rcl
sbb
popa
aas
ljmp
pop
in
imul
rcll
insl
lds
add
lahf
les
in
pop
xchg
jb
in
push
lds
data16
add
sarl
lret
cwtl
sub
out
movsb
cmp
inc
mov
stos
jle
std
push
loop
imul
cmp
jmp
and
dec
inc
lock
std
outsl
adc
jo
and
pushf
jne
cli
sarb
data16
je
mov
and
mov
lods
fiaddl
adc
mov
mov
sub
mov
fnstcw
sub
sahf
mov
inc
adc
xchg
sbb
jl
out
mov
jmp
and
imul
dec
outsb
mov
xor
pop
adc
xor
jns
sbb
jl
out
and
stc
stc
adc
push
pop
subl
adc
mov
ja
out
inc
outsb
mov
inc
cli
xor
adc
mov
mov
or
ljmp
mov
sahf
dec
or
data16
int
xor
pop
inc
repz
sbb
movsl
xor
add
xchg
je
aam
arpl
xor
and
push
mov
sti
js
add
or
in
pop
sti
scas
sub
jl
mov
gs
in
lcall
pop
mov
xor
push
aam
shl
sti
aaa
push
fnsave
repz
dec
cwtl
stos
rcll
inc
outsl
decl
jle
popl
xor
sahf
or
jg
idiv
add
test
push
push
out
bound
mov
sahf
or
jb
mov
adc
cmp
mov
std
lret
xchg
dec
sti
jp
into
aad
test
mov
pushf
stos
push
add
jp
ficoms
jbe
xlat
sbb
out
insb
add
push
popa
cs
rolb
stos
pop
inc
jae
inc
call
outsl
mov
inc
push
dec
mov
push
daa
imul
mov
rcll
dec
out
xor
sbb
cli
loopne
gs
and
test
add
xor
or
stc
add
mov
fsubr
pushf
loopne
hlt
mov
dec
and
scas
das
ret
cltd
adc
adc
dec
mov
cmp
xchg
insb
push
inc
sbb
je
repz
sub
decl
in
pop
adc
xchg
inc
mov
arpl
jne
adc
inc
bound
les
mov
pop
fisttps
mov
or
ljmp
cmpsb
mov
jecxz
out
stos
leave
sub
mov
int
aad
test
ficoml
add
add
and
add
or
aas
inc
xchg
es
push
stc
add
sbbl
xchg
repz
pop
and
sub
push
hlt
push
mov
sbb
mov
fwait
dec
rorl
mov
fdivr
out
cmp
inc
cmpsl
lea
cltd
shlb
lcall
mov
adc
jo
mov
rclb
daa
in
mov
pop
mov
imul
and
add
jmp
jmp
sbb
and
leave
pop
popl
outsb
xchg
and
xor
and
inc
sub
dec
test
les
sub
or
nop
ljmp
inc
cmp
clc
lds
lock
ja
push
mov
or
ds
in
mov
and
mov
andl
push
loopne
adc
mov
sbb
fwait
add
inc
lods
cli
push
add
call
inc
shlb
and
lods
adc
mov
xchg
adc
inc
xchg
cmpsb
jecxz
mov
adc
pop
mov
int
call
dec
arpl
pop
inc
insb
jg
sbb
mov
enter
cmpsl
invd
push
stc
push
loopne
dec
push
aaa
inc
xor
cld
sub
test
jbe
jae
pop
dec
inc
add
and
in
ret
int
pop
outsb
pop
mov
fcmovb
push
test
mov
enter
lock
mov
pop
xchg
in
movsb
add
in
cmp
push
and
or
mov
inc
in
push
je
std
pop
xor
xchg
cmp
inc
sbb
mov
shlb
pop
data16
pop
inc
jo
xchg
ljmp
sbb
push
mov
or
jo
mov
out
or
leave
mov
out
enter
imul
mov
mov
add
xchg
out
lea
test
push
xor
cmpsl
orb
mov
xchg
cmpsl
ret
xor
das
cmp
stos
clc
and
lret
jbe
addl
mov
jp
pop
push
movsl
sbb
insb
add
dec
movsl
mov
mov
inc
fidivs
imul
xchg
in
call
insb
sub
jo
mov
int
loopne
cmp
jbe
push
fistps
hlt
mov
mov
adc
loop
nop
movsb
loop
xchg
cmp
loop
jge
mov
fnstsw
push
negl
inc
adcb
ret
dec
lock
mov
fsubl
lods
repz
add
lret
jb
mov
fcomps
jno
fbld
xchg
jl
inc
mov
leave
pop
pop
test
mov
cmp
cmp
xor
cmpsl
daa
fnsave
inc
cmp
loop
cwtl
add
adc
dec
adc
lcall
and
jo
imul
ss
mov
or
xlat
sbb
orl
pop
push
outsl
lods
xchg
in
xor
push
aad
pop
mov
stos
mov
ficompl
mov
xchg
xor
mov
dec
popl
sub
mov
or
repnz
insl
push
mov
push
or
lods
addr16
and
push
hlt
mov
call
inc
dec
stc
jb
lods
push
xchg
mov
aas
push
hlt
shll
ret
in
popa
test
jge
mov
sub
in
sahf
out
addr16
xor
addr16
loopne
push
out
pop
fcoml
add
subb
in
pushf
and
cmp
movzwl
mov
or
dec
pop
xor
mov
push
sbb
popf
push
jnp
push
fwait
daa
mov
cmp
jl
mov
mov
mov
ficompl
mov
stc
dec
mov
iret
bound
fdivrs
scas
inc
call
mov
nop
push
into
test
outsl
frstor
mov
scas
xchg
xor
jns
lds
pop
dec
cmpsb
jmp
leave
insb
mov
ja
or
fs
call
stos
inc
dec
stos
incb
out
leave
add
mov
fptan
mov
pop
mov
pop
cwtl
mov
and
xor
inc
scas
jne
xor
mov
dec
xor
scas
stc
pop
and
nop
imul
mov
dec
lahf
repnz
add
cld
enter
mov
xor
repnz
sbb
mov
fbld
or
stos
mov
sub
insl
aaa
int3
pop
je
inc
adc
js
je
rorl
pop
mov
dec
rorb
xchg
mov
inc
push
mov
lcall
pop
push
cmp
aam
and
push
push
cs
dec
insl
aam
sbb
cmp
sbb
or
andl
lds
add
jl
bound
mov
lods
mov
pop
lods
repz
jnp
in
cmp
insl
sarl
jb
or
sbb
ret
adc
mov
jae
cmpsb
dec
or
cmp
mov
aam
std
mulb
hlt
mov
je
xchg
adc
mov
orl
pusha
arpl
popf
cmp
fnstsw
ds
mov
in
fisttpl
jl
mov
mov
repz
pop
in
cld
and
in
lock
mov
jne
loopne
lcall
js
ficoml
cltd
jmp
sub
jo
pop
push
out
pop
arpl
imul
xchg
fimull
stos
loopne
jb
mov
mov
mov
movsl
dec
dec
movsl
aam
add
cmpsl
jnp
pop
incl
mov
into
imul
xor
sub
movsl
and
arpl
nop
push
loope
jno
adc
jp
dec
test
add
xchg
mov
mov
mov
stos
sbb
lods
or
add
push
jbe
fnstcw
mov
int3
inc
leave
arpl
pop
inc
inc
push
repz
mov
daa
ror
stos
and
in
mov
int3
dec
pop
insb
shl
push
frstor
ds
sbb
inc
popl
add
repz
jno
stos
rolb
mov
xchg
inc
jl
mov
test
fildll
xchg
lods
js
pop
mov
popf
jmp
push
mov
rcrl
lret
sbb
xchg
xchg
ja
lea
mov
cmpsb
xor
mov
inc
push
ja
stc
adcl
xchg
inc
pavgb
jl
push
fwait
movsb
xor
dec
lock
mov
lcall
pop
jge
push
pop
int
loope
sbb
scas
mov
sbbb
out
push
rolb
mov
push
fnstsw
mov
int
test
or
jg
repnz
sub
in
movsb
push
jmp
jecxz
cmp
mov
inc
dec
xchg
dec
mov
out
or
inc
mov
xor
xchg
mov
jge
cmp
repnz
gs
cld
mov
pop
jmp
and
inc
mov
das
mov
test
scas
sti
sti
test
and
int3
icebp
call
add
cmp
mov
cld
xchg
cmpsb
mov
leave
mov
je
and
popf
cmp
fistpl
ffree
enter
jo
add
push
lds
ja
out
cwtl
xchg
inc
mov
dec
icebp
mov
jl
jns
dec
jp
xchg
mov
int3
xchg
mov
cli
xchg
jo
add
sub
test
movsb
ds
cld
cwtl
cmp
or
into
push
sub
in
xor
xor
inc
cmp
add
aas
xchg
inc
scas
lcall
xlat
lret
data16
adcl
inc
popa
fwait
xor
fstl
cmp
jne
push
or
adc
in
repz
pushf
ja
out
pop
pop
or
arpl
sub
ljmp
fs
pushf
daa
pushl
pop
sar
mov
lcall
add
mov
pusha
push
out
pop
outsl
js
push
clc
or
cmp
ljmp
pop
and
pop
cmp
sbb
add
sub
imul
cmpl
fs
sub
adc
pop
xor
dec
adc
cmp
adc
push
xchg
xlat
lret
cmpsl
jecxz
rcll
and
adc
ret
push
roll
xor
add
jae
inc
rcll
and
adc
ret
push
roll
xor
add
jae
inc
rcll
and
adc
ret
push
roll
xor
add
jae
inc
rcll
and
adc
imul
fdivrl
cld
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
das
jp
xchg
shld
mov
in
mov
lods
add
lahf
aaa
out
inc
call
jne
jne
test
xchg
shld
mov
lds
dec
in
cmc
scas
pop
mov
xor
iret
fbstp
pushf
aas
xchg
bsr
lods
outsl
fdivrl
dec
std
pop
out
scas
out
das
call
xor
mov
mov
pop
test
psrlw
pusha
sub
or
jnp
xor
mov
bound
cwtl
cs
fadd
aam
sub
jg
mov
mov
adc
pusha
xor
cltd
mov
sarb
adc
push
sarl
xchg
lods
aad
xchg
add
adc
sbb
dec
fbstp
aad
xchg
int3
movsl
sbb
push
mov
xor
outsb
lds
mov
out
push
pop
jl
mov
push
nop
in
sub
mov
xor
xor
mov
mov
jne
movsl
loopne
inc
push
xor
fisttps
call
xor
and
or
aas
orb
pop
scas
outsl
lds
dec
cld
pop
in
scas
sbb
lahf
sub
pop
incl
fists
dec
loopne
xchg
dec
movsb
pop
mov
xchg
adc
fildll
cld
jo
pop
imul
scas
sbb
dec
xchg
insb
aad
mov
mov
out
sbbl
je
push
lahf
jbe
aaa
lcall
les
lock
les
sub
pop
cmc
scas
add
lahf
xor
iret
fbstp
test
xchg
shld
mov
lds
dec
in
cmc
scas
add
lahf
xor
iret
fbstp
test
xchg
test
mov
pop
rcrb
scas
repnz
aas
into
jl
dec
outsb
dec
inc
clc
add
push
mov
lahf
movsb
fimuls
mov
idivl
cmp
pop
pop
imul
movsb
pushl
mov
into
and
cmp
jge
cmp
jecxz
sub
cmp
jle
jbe
btr
push
pop
repnz
pop
lea
push
andl
std
fwait
rolb
xchg
add
lret
sub
inc
lret
dec
sbb
lahf
or
cmp
out
push
lahf
pop
decb
gs
xor
push
cmp
movsl
mov
mov
je
dec
into
sbb
mov
pop
dec
adc
insb
int3
sub
pop
jge
adc
scas
mov
cwtl
xlat
pop
push
lods
push
out
iret
bound
ss
xchg
xor
arpl
dec
sub
test
sbb
imul
loop
rolb
push
cmp
mov
xchg
sub
dec
and
xor
xor
pop
adc
push
je
nop
xor
dec
mov
test
add
and
ljmp
shrl
movsl
pop
mov
sub
cmpsl
inc
dec
inc
in
pushf
cmp
int
or
jns
mov
vucomisd
and
xchg
es
outsl
mov
fnstenv
lods
gs
jb
stos
mov
in
insl
rorl
sub
sub
roll
add
mov
inc
lea
push
inc
gs
aas
cmp
ds
xchg
jo
hlt
lcall
loop
cld
fmul
mov
inc
xchg
cmpsb
push
in
push
repnz
insl
nopl
jmp
cmc
or
sbbl
cmpsb
popf
nop
and
js
in
sar
sbb
cmpsb
sbb
aad
scas
push
xor
dec
mov
inc
sbb
add
add
movsl
mov
pop
pop
mov
xchg
mov
mov
int
mov
ret
inc
xchg
call
mov
and
dec
gs
mov
jne
rcrl
out
push
test
hlt
cltd
cmp
scas
enter
mov
iret
cmc
icebp
daa
jg
mov
lahf
clc
imul
mov
cmpsl
fwait
into
or
fwait
adc
fcomps
push
xchg
inc
jo
pop
cmp
mov
dec
cmp
int
ror
outsb
aad
aaa
test
cmp
xor
inc
jge
loopne
outsl
push
hlt
cltd
sub
ja
add
pop
out
mov
cmp
and
subl
fisubrl
sbb
movsb
mov
and
or
ret
test
xor
cli
incl
ljmp
fadds
shrb
xchg
aas
bound
imulb
pop
sub
in
jge
push
fcompl
sbb
xor
push
lea
xor
dec
mov
mov
sub
jb
mov
stos
loopne
loope
pushf
popf
mov
and
sub
adc
imul
mov
orb
sub
inc
mov
addr16
xchg
mov
adc
cwtl
aaa
mov
ret
pop
insl
popf
dec
push
mov
inc
add
push
scas
jnp
push
dec
and
dec
cmc
loope
sub
push
mov
jg
push
push
xchg
sbb
cmp
pop
lcall
pop
pop
lahf
and
mov
xor
std
pushf
cmpb
push
cmp
or
mov
mov
insl
scas
mov
xor
xchg
push
mov
or
fldl
mov
mov
rol
inc
insl
std
sbb
lret
insl
and
bound
xor
lea
mov
aas
xor
loopne
fldl
push
in
push
xchg
push
add
jmp
cmp
xor
pop
mov
pusha
push
pop
stc
mov
fadd
mov
repnz
fstpl
icebp
cs
out
gs
and
pop
aas
push
mov
sbb
sub
in
push
sub
andl
cmpsb
scas
dec
jae
mov
aam
idivl
in
repnz
dec
jae
xchg
mov
cmpsl
ror
xchg
movsb
std
xchg
mov
test
sbb
jb
cwtl
fs
insl
imul
arpl
aad
mov
rorb
sub
imul
push
sbb
adc
fcmovbe
inc
push
pushl
test
pop
es
rcll
xchg
mov
ds
sbb
cmp
dec
lcall
or
push
mov
and
into
sub
clc
cs
dec
roll
add
pop
xor
repz
pop
adc
outsl
pop
sub
in
les
addr16
adc
adc
mov
fs
aad
les
push
mov
cmp
cmp
add
sbb
adc
outsl
dec
add
rcr
jecxz
bound
pusha
aas
out
adc
sub
mov
icebp
icebp
push
ja
cld
jnp
daa
cmp
outsb
mov
sbb
cmp
dec
sbb
jg
cmp
ret
not
aas
push
in
cmc
outsb
loope
pop
xor
iret
cmp
das
std
loopne
mov
imul
lret
adcb
sub
call
lahf
aad
mov
push
pmaxub
outsb
jp
xlat
jecxz
or
mov
pop
mov
inc
adc
adc
mov
enter
xor
pop
ss
popa
shl
imul
andb
fsubl
lds
xor
pop
or
test
mov
lcall
mov
popf
add
sbb
mov
mov
pop
movsl
roll
push
hlt
scas
repz
rcrb
sbb
aam
inc
fimuls
mov
repnz
inc
xchg
imul
inc
inc
pop
dec
aad
xor
adc
loopne
mov
mov
xchg
sub
jle
sub
shrl
mov
or
pushf
adc
or
mov
loope
addr16
cmp
xchg
or
jns
data16
imul
pop
jle,pn
mov
sub
mov
jb
xlat
mov
insl
xor
dec
dec
sub
aaa
cmp
jge
js
repz
mov
mov
pop
xchg
jbe
aas
sub
ja
or
add
sub
icebp
fs
jmp
pop
fisubs
test
repz
ljmp
jae
sub
gs
or
jmp
jmp
push
cmp
sub
mov
pop
aaa
sub
inc
pop
cmpsb
dec
aaa
out
mov
pop
into
sub
jns
test
lods
test
or
sbb
ja
cs
fdiv
or
dec
inc
test
pop
inc
addl
cltd
lcall
loopne
mov
xor
sbb
roll
aam
mov
adc
add
icebp
or
xchg
lock
sub
push
xor
xor
loope
popf
jp
jb
or
aaa
xchg
fnstsw
outsb
adc
dec
mov
adc
leave
push
mov
sub
test
dec
push
pop
popf
and
icebp
fwait
mov
mov
ds
cmp
dec
mov
fstpt
pop
stos
lods
add
add
mov
cmp
cmp
in
and
mov
cs
jno
jp
add
dec
or
fucompp
lds
scas
in
hlt
or
fcmovnb
sub
and
xchg
shrb
dec
scas
mov
ja
pushf
xor
aam
and
xchg
mov
push
mov
mov
push
cld
push
jo
mov
loopne
inc
mov
std
jl
push
roll
inc
fisubrs
xor
clc
jmp
xor
and
pop
iret
lahf
fsub
inc
cmc
sarb
pop
es
inc
xor
jbe
mov
xor
lcall
push
out
push
mov
sub
lahf
pop
mov
push
and
sbb
and
jae
mov
inc
mov
popf
leave
pop
push
cmc
and
or
fidivrl
and
xor
mov
out
cld
sbb
icebp
inc
shlb
jl
imul
sub
sub
lods
sub
ror
out
iret
sbb
insb
jb
dec
shrb
dec
dec
push
pop
leave
xchg
movsb
cmp
scas
movl
inc
push
insl
sbb
xchg
lret
push
push
mov
jns
dec
pop
mov
and
pushf
in
ds
xchg
cmc
sti
jg
mov
mov
inc
mov
stc
xlat
lcall
xchg
dec
cmp
xor
xlat
mov
xor
pop
adc
aaa
jl
xchg
jns
pop
mov
and
push
lret
xlat
mov
mov
xchg
push
arpl
iret
xor
and
or
mov
fdiv
pop
inc
in
or
mov
int
cltd
jle
rol
inc
out
mov
sub
cmp
mov
mov
sub
fimull
pop
sbb
leave
testb
jle,pn
sbb
xchg
nop
mov
gs
lcall
cmc
test
and
and
int3
or
bnd
cltd
mov
or
add
or
ljmp
mov
sbb
cmp
inc
addb
cmp
dec
jne
xor
stos
fdiv
mov
loope
mov
mov
leave
push
sbb
push
es
sub
add
stos
dec
lods
inc
loope
cld
test
or
std
incl
cmpsl
arpl
mov
jge
jae
cmpsb
sub
leave
pop
push
and
push
and
pusha
cmpsl
cld
or
mov
lret
mov
rolb
addr16
mov
subb
jo
pop
ret
dec
adc
popf
mov
jns
push
mov
mov
out
mov
ds
lret
fsubr
mov
daa
in
add
mull
out
pop
scas
iret
je
pop
fs
sti
jae
cmc
mov
fcompl
jne
ret
gs
pop
mov
mov
pop
cmp
fwait
push
mov
nop
jg
add
jle
add
pop
push
aam
inc
clc
shlb
mov
iret
ss
lret
or
mov
push
push
cmp
jg
sbb
test
inc
inc
dec
ja
inc
sub
mov
jo
fnstenv
and
jo
imul
and
jae
loop
mov
push
xor
push
stos
inc
std
outsb
mov
and
loopne
fiaddl
mov
outsb
push
fcomp
jmp
add
mov
mov
sub
dec
dec
out
mov
cs
aaa
cmp
dec
std
jne
sub
and
adc
jno
in
jp
lock
jne
sub
sbb
ret
popf
arpl
lock
aad
ret
loop
push
out
sarl
lods
fldenv
inc
push
push
sub
orb
push
dec
call
and
or
mov
xchg
xchg
push
rcrb
mov
sbb
sbb
cltd
pop
or
sti
lock
sbb
or
in
jbe
dec
dec
xchg
std
pop
stc
jmp
jg
std
mov
sahf
mov
dec
jle
push
sbb
dec
cmpsl
ss
xor
and
pop
out
aas
out
loop
cmpb
orb
insb
xchg
ja
movsb
push
test
xor
push
sub
add
mov
mov
lcall
cmpsl
rorl
idivb
jae
xchg
sub
xchg
or
or
lds
loope
out
inc
cmp
addb
xchg
cmp
adc
stos
lods
add
dec
mov
xchg
mov
jge
mov
test
sub
scas
sub
cmp
jg
add
arpl
adc
shl
das
inc
mov
sub
cmp
nop
mov
adc
in
cmp
dec
invd
add
add
mov
fadd
pop
pop
clc
ficomps
aas
mov
mov
mov
ja
push
test
sub
xor
out
mov
dec
sti
add
pop
jg
dec
and
inc
les
pand
jne
out
mov
inc
xor
out
or
stos
das
xchg
add
insl
jl
fidivrl
addr16
movsl
movlps
dec
lock
cmp
test
lds
mov
mov
and
and
cmp
je
in
lret
jo
das
jno
dec
in
gs
jl
ljmp
bound
addr16
sub
shll
js
mov
in
stc
push
sub
xchg
out
adc
out
lret
xor
arpl
sbb
int3
shl
xor
xchg
xchg
xchg
shrl
dec
enter
cmpsl
push
std
mov
insb
addl
dec
ret
adc
stos
or
arpl
cltd
mov
daa
inc
jb
mov
jb
iret
scas
movsl
cli
pop
cmp
test
arpl
filds
xor
add
scas
push
jae
das
lahf
sbb
fwait
adc
xlat
addb
xor
int
or
movsl
add
stc
testb
leave
aad
int3
adc
sbb
ja
stos
and
ret
fcoml
js
mov
rol
sbb
xlat
pop
outsb
xor
and
jbe
sbb
inc
pop
mov
mov
cmp
push
leave
test
inc
fistl
ss
cmp
mov
sbb
shll
xor
repnz
andl
jmp
cmp
mov
dec
jne
mov
fimuls
enter
sti
aam
jle
adc
fidivs
mov
sbb
fcmovu
cmp
sbb
rorb
cmc
push
jle
mov
adc
movsb
and
pop
sbb
jg
shll
lcall
jb
jecxz
xchg
and
and
cld
fadds
adc
lods
dec
push
sub
jb
xchg
xor
add
adc
nop
loop
push
xor
insl
imul
pushf
ds
sahf
ds
jb
push
test
sbb
sahf
xor
movl
lret
aaa
mov
adc
jg
mov
or
sub
xor
mov
push
mov
pop
add
mov
push
in
aam
and
int3
push
aas
mov
stos
cmpsb
push
mov
data16
xor
lahf
jae
mov
fs
push
push
mov
mov
add
int
mov
mov
ljmp
std
gs
sti
pushf
shrl
inc
cltd
pop
icebp
push
mov
xchg
ror
mov
mov
or
xchg
arpl
jb
insb
out
test
fs
outsb
iret
addr16
push
jnp
clc
fcomps
add
push
xchg
rcl
js
sbb
jns
mov
dec
mov
int
pop
fwait
pop
adc
inc
pop
loope
mov
insb
adc
stos
dec
lcall
mov
push
xor
xchg
test
clc
mov
cmp
fcompl
pop
bound
pop
mov
stos
push
lahf
data16
push
in
mov
jge
adc
xor
mov
inc
jae
shrb
inc
sahf
mov
sbb
std
in
and
aad
add
cmp
stos
inc
jae
pop
out
mov
lahf
addr16
jl
xchg
nop
negb
cmp
add
push
jo
es
push
mov
xor
pop
incb
dec
aad
stos
in
push
out
out
push
inc
jne
outsb
scas
add
sti
push
sub
jne
jnp
sub
mov
cmc
mov
das
rorb
sbb
rorb
in
push
pop
and
popa
jbe
aaa
popa
mov
or
rclb
sbb
test
lahf
sub
xor
push
mov
and
xor
decb
mov
push
loop
sub
mov
sbb
js
movsl
mov
sbb
xchg
mov
push
mov
pop
scas
popf
pop
pop
cmp
push
sub
fldenv
dec
xchg
popf
test
leave
jnp
xchg
cwtl
jmp
push
cmp
aaa
add
rcll
and
mov
jno
enter
out
daa
and
push
popa
cmp
imul
mov
loope
and
xor
aam
jp
test
mov
pop
js
insl
sahf
push
push
repz
enter
mov
outsb
xchg
movsb
mov
mov
add
and
mov
push
repnz
mov
jbe
cli
mov
test
push
stos
hlt
and
push
push
pop
cmpsl
push
repnz
ja
xchg
xor
andl
cmp
imul
movsb
popa
ljmp
ja
inc
imul
gs
cmp
test
es
dec
test
push
fisttps
jb
call
out
idivb
loop
mov
loopne
hlt
lods
push
jo
stc
push
pop
hlt
inc
or
mov
mov
roll
faddl
add
adc
xor
ret
into
xor
test
jo
or
adc
stc
push
adc
fsubs
sub
push
cmp
push
stos
aas
mov
jae
in
push
sub
data16
mov
in
xchg
sbb
repnz
adc
in
repnz
and
in
dec
mov
lret
aas
mov
addr16
and
in
xlat
movsl
insb
xchg
and
ret
push
daa
orb
lea
mov
push
sbbl
fimuls
jae
jmp
jbe
jbe
fwait
enter
icebp
xor
leave
jg
and
dec
and
and
les
adc
and
jno
mov
cli
idivb
and
push
xchg
push
cmp
pop
negb
ljmp
push
lea
cli
mov
or
jb
jo
mov
daa
ljmp
mov
in
or
je
xchg
mov
xchg
repz
fimull
fidivrl
xchg
inc
lea
lock
add
mov
jnp
insb
ljmp
or
adc
and
mov
outsb
nop
mov
jge
fucomip
and
icebp
or
iret
cld
pop
enter
jno
sti
xlat
inc
ljmp
and
add
hlt
ret
js
jo
mov
xlat
jae
das
ja
fisttps
sbb
xchg
mov
add
ljmp
sub
andnps
and
add
pusha
ret
add
stos
shl
lea
inc
cwtl
movsb
mov
cmpsb
and
loop
outsl
arpl
jb
imul
sbb
addb
push
int
jo
mov
insb
fcoms
push
arpl
insb
mov
add
test
sti
xor
xchg
pushf
cli
mov
fidivs
xor
push
cmp
push
jle
cltd
push
pop
xlat
mov
out
gs
cmp
shlb
mov
push
shrb
fucom
cmp
mov
mov
push
aaa
adc
add
push
pop
subb
or
std
mov
sbb
nop
cmp
and
ss
cmp
push
jno
inc
daa
jns
dec
ja
loopne
movsl
ja
pop
pop
int
fmulp
xchg
jo
push
clc
xor
insl
add
mov
jno
add
mov
shr
sub
mov
jns
lods
movsl
mov
push
into
xchg
clc
xor
sub
inc
sarb
test
lahf
mov
stc
lahf
xchg
xchg
inc
mov
pop
cld
or
lret
mov
xchg
mov
xchg
outsb
fisubrs
test
sub
data16
incb
push
rcrl
ljmp
scas
rolb
xor
sbb
ficoms
xor
roll
repnz
aam
icebp
idivl
shl
aaa
mov
rolb
jg
ss
mov
repz
stos
add
test
aas
pop
test
aaa
fs
fcmovne
mov
sbb
rcrb
and
jmp
arpl
std
pop
loope
cmpsb
icebp
inc
xchg
sbb
leave
mov
push
cmp
dec
or
ficoms
addl
sbb
mov
in
add
cld
ret
pop
ret
mov
pop
pop
lds
cli
cli
popf
xchg
pushf
mov
pop
dec
adc
cmpsl
into
adc
xor
push
inc
aad
push
shll
or
arpl
xor
or
mov
mov
stc
push
xchg
aas
xchg
mov
popf
insl
div
mov
daa
sbb
cmp
sub
into
xor
pop
lahf
mov
mov
cwtl
xor
jne
call
xchg
mov
pop
std
sbb
xorl
push
arpl
xlat
push
ljmp
mov
enter
pop
adc
leave
pop
jnp
inc
jnp
add
jl
aam
testl
sbb
rorl
xchg
enter
sahf
scas
push
sub
inc
test
imul
mov
push
rolb
movsb
mov
xor
push
cmp
pop
cs
std
mov
xchg
cltd
xor
mov
out
scas
cs
idivl
clc
js
pop
je
imul
xor
jmp
push
jg
add
repnz
xor
mov
lds
dec
in
cmc
scas
add
lahf
xor
iret
fbstp
test
xchg
shld
mov
lds
dec
in
cmc
scas
add
lahf
xor
iret
fbstp
test
xchg
shld
mov
lds
dec
in
cmc
scas
add
sahf
xor
inc
call
fbstp
test
xchg
shld
mov
lds
iret
in
cmc
push
add
lahf
inc
cwtl
int
stos
aaa
lcall
push
jp
or
fisttps
lret
xchg
jle
dec
cli
pop
mov
lcall
out
pop
incb
into
jp
or
cmp
lret
pop
mov
pop
lret
ds
dec
mov
clc
data16
xorb
xchg
adc
push
jp
push
and
push
nop
push
adc
lock
adc
insl
jmp
push
iret
rcrb
inc
cmpsb
cmpsb
out
ljmp
inc
cmpsl
into
mov
cmp
scas
outsl
es
dec
jne
std
stos
cmovne
pop
aam
lock
std
pop
xchg
sub
adc
inc
cli
rcrl
into
xchg
xchg
cs
ficoms
aad
cmp
xchg
fisubrl
outsb
jnp
mov
stos
out
dec
mov
push
push
dec
popf
out
testb
sahf
ljmp
pop
iret
jge
aas
push
pop
mov
mov
movl
jmp
punpckldq
outsb
ficoms
arpl
leave
shrl
or
push
jp
out
scas
bound
or
inc
mov
ret
cwtl
push
mov
push
lea
lock
out
sti
lret
cmp
inc
hlt
dec
ret
dec
fistpll
stos
aas
mov
arpl
jg
fnstsw
outsl
repnz
or
cmp
jle
jb
outsl
sti
jne
mov
sub
sub
fidivrl
dec
cli
pop
mov
lcall
out
pop
push
jp
or
cmp
ljmp
ds
push
mov
sub
aaa
repnz
inc
rcrb
push
mov
shl
pop
dec
jle
jae
sbb
and
xor
adc
pop
aaa
faddp
repnz
or
or
fists
sub
repz
rcl
popa
inc
pop
jge
pop
lea
enter
pop
adc
out
fmull
mov
fs
mov
call
hlt
je
in
test
mov
or
ds
daa
cli
rorl
xor
mov
push
or
sbb
cld
aas
push
je
pop
fidivl
mov
aaa
sbb
shll
decb
xchg
add
mov
pop
insb
jg
dec
pop
mov
add
in
mov
add
outsl
daa
mov
cwtl
xchg
enter
imul
sti
cmp
jg
out
jb
enter
shll
cmpl
inc
outsb
fisubs
and
loopne
cmp
lods
fistl
std
sbb
stos
inc
sahf
and
shl
push
xchg
xchg
sarl
and
fistps
int3
or
es
fwait
lods
popa
popa
pop
in
arpl
jmp
sub
cwtl
push
cmc
jl
cmp
dec
mov
or
cli
or
loop
xchg
out
push
adc
pushf
sbb
incl
sarl
les
pop
dec
ds
push
mov
dec
mov
ret
jge
pusha
ret
add
rcrb
ret
pop
ret
mov
or
es
and
das
inc
or
out
adc
cmp
fiaddl
rdpmc
jmp
mov
pop
fldcw
aad
insb
cmp
add
xor
loope
movsl
out
test
sbb
cmp
repnz
xor
jmp
inc
mov
jge
jp
cmp
add
sar
xchg
outsl
sub
hlt
aaa
scas
fldcw
mov
fsubrs
cwtl
push
inc
inc
mov
sbb
add
jmp
sbb
ficoms
fmulp
and
xchg
aad
sub
sbb
test
mov
popf
fcompl
push
pop
pop
xor
aad
decb
jg
xor
and
mov
add
pop
movsb
bound
cmp
in
sti
imul
outsl
or
xor
fwait
lcall
jl
and
popf
and
cmpsb
sbb
inc
aas
dec
xlat
or
js
test
pop
sbb
lcall
or
daa
imulb
add
sti
insl
test
insb
push
out
das
inc
xor
fnstcw
decl
sub
cmpsl
cwtl
mov
fs
or
mov
xchg
and
das
push
insl
test
or
bound
adc
cltd
lods
fsubl
out
inc
sbb
inc
imul
fwait
push
mov
arpl
cmpb
sbb
enter
jg
cmp
mov
pop
cmpsl
rep
and
fsts
mov
xor
sbb
aad
cld
aaa
shll
scas
call
out
aas
out
movsb
sub
sbb
aaa
lret
jmp
cwtl
pop
pop
movsl
iret
in
xchg
outsb
into
loop
or
or
and
sub
inc
jmp
in
adc
enter
sub
mov
mov
jb
adc
addr16
setb
mov
add
aas
stc
pop
jge
cmp
out
out
cmc
jl
add
adc
lret
adc
cs
ljmp
mov
or
mov
or
pop
lcall
pop
and
fwait
lds
xchg
in
jmp
jl
lock
pop
and
aam
jl
inc
lea
or
xorl
jle
fwait
xor
xor
mov
daa
sti
or
xchg
cmp
and
mov
fadd
in
dec
js
pop
push
pushf
cs
dec
nop
pop
shrl
int3
jae
or
mov
sub
fbstp
inc
leave
aaa
stos
shrb
mov
or
pop
ljmp
pop
cmpsb
mov
lcall
loop
add
or
jge
lods
call
roll
and
sbb
push
mov
ret
lea
shrl
ds
and
mov
bound
or
mov
je
ja
lea
out
in
lods
or
shl
dec
addr16
dec
add
pop
dec
cmpsl
mov
sub
aad
fcmovnb
push
aas
mov
inc
inc
lcall
sbb
mov
or
leave
xor
xor
mov
ret
lcall
jnp
xchg
add
inc
pop
xchg
cmp
inc
iret
dec
stos
xchg
sahf
inc
xchg
shl
dec
mov
and
xor
mov
jb
sub
jae
imulb
iret
movsl
lock
adc
fists
arpl
cwtl
cld
insl
pop
orb
scas
ljmp
mov
jns,pt
sti
inc
in
or
xchg
mov
sbb
jmp
push
cmc
mov
push
int
arpl
mov
sub
cmc
lds
in
lahf
popa
mov
cmp
mov
xchg
cmc
cmp
mov
or
paddw
mulb
outsl
cmp
sbb
fists
push
xor
jge
xor
mov
push
xor
sub
pop
sbb
gs
mov
cmp
mov
mov
ror
aas
or
or
and
cmp
sahf
ficomps
loope
adc
jle
ja
xchg
repz
test
and
xor
in
stos
xor
imul
add
cmp
cmp
repnz
in
add
fcom
pop
in
movsb
adc
lods
add
sbb
jb
mov
rcll
popf
cwtl
fs
loop
repz
push
jo
jge
notb
and
std
gs
add
add
addb
lods
es
mov
int
cmpsb
in
popa
adc
xorl
aad
movsb
xor
mov
mov
adc
push
fwait
andl
imul
pushf
testl
add
test
ds
stos
js
mov
js
orb
shll
push
inc
xchg
mov
xor
jp
sub
mov
mov
negb
nop
push
mov
aam
dec
pop
push
fdivs
xor
cvtdq2ps
and
test
lods
bound
fistl
pop
das
xchg
cwtl
add
ljmp
je
and
push
data16
sbb
jnp
icebp
jne
sub
scas
mov
cmp
gs
mov
adc
adc
push
outsb
dec
fwait
add
add
push
ret
cmp
lds
push
int
sbb
popf
dec
loope
push
loop
push
xlat
leave
out
lcall
xor
in
pop
mov
int3
xchg
sbb
fwait
mov
mov
jb
scas
ret
outsb
jno
jae
int
inc
test
mov
sub
pusha
cmp
and
and
fnsetpm(287
ljmp
xor
push
xchg
rol
shlb
add
addr16
sub
inc
bound
and
lds
sbb
imul
sahf
std
mov
mov
mov
out
das
fstpt
dec
push
loopne
int3
aaa
mov
in
jbe
pop
jno
dec
scas
mov
aam
data16
popf
mov
mov
add
out
movsb
sub
dec
imul
or
dec
cmpxchg
mov
lds
xor
xlat
outsb
push
pusha
mov
call
sbb
mov
and
rorl
dec
mov
lods
mov
lahf
push
push
push
loopne
push
pop
add
aad
pop
jle
fstl
mov
sub
jl
xchg
push
cmp
pop
test
repnz
mov
imul
nopl
lock
test
fmulp
mov
out
mov
xchg
push
push
ret
out
push
sub
mov
adc
pop
jl
into
xchg
push
mov
fildl
out
movsb
rep
xlat
or
mov
pop
pop
inc
mov
jl
ja
lods
jbe
xchg
stos
pop
push
pop
jns
jnp
dec
popa
add
pop
inc
mov
push
dec
cltd
add
fidivl
xor
pand
lea
sbb
popf
mov
dec
fstpt
jp
jno
push
popa
xchg
lahf
mov
cli
lret
cld
sbb
inc
mov
push
xor
jae
xchg
rcr
cld
test
mov
test
mov
test
mov
out
mov
push
add
sbb
mov
aam
decl
insl
rorb
dec
adc
je
jle
dec
pop
out
daa
mov
call
xor
cmc
lods
inc
out
jo
mov
fmul
inc
das
inc
jecxz
enter
pop
add
les
push
add
or
adc
mull
aas
xor
push
mov
mov
adc
inc
jns
out
inc
dec
lcall
or
ds
sbb
loopne
adcb
subl
jmp
jl
add
mov
inc
lea
adc
out
pop
mov
sbbl
xorb
call
xchg
sub
jb
adc
dec
cmp
scas
dec
out
mov
mov
into
dec
jne
add
sahf
popf
call
mov
mov
dec
cs
mov
lahf
mov
arpl
pop
int
movsl
rclb
sarb
xor
push
push
sbb
int3
push
or
xor
jecxz
mov
push
dec
cmp
ja
in
push
sbb
shll
fisttps
push
out
cld
mov
mov
lret
pusha
or
cmp
push
mov
dec
cmp
sbb
push
jnp
fbld
jb
out
xchg
out
and
jo
cld
push
lods
insl
leave
jo
outsl
rcpps
aaa
in
xlat
test
jle
arpl
shl
test
shrl
orl
test
out
mov
shlb
jmp
stos
lods
outsb
cmp
push
xor
mov
adc
adc
adc
adc
sub
aas
jbe
mov
adc
sbb
push
adc
jnp
pop
or
pop
jnp
and
xchg
push
fcoml
sub
mov
xor
xor
jmp
xchg
cli
das
mov
scas
pushf
xchg
xchg
popa
loope
cmp
pop
and
idivb
inc
scas
incb
in
lods
std
outsl
aad
mov
jmp
fwait
roll
cmp
cmp
dec
inc
movsl
pop
into
jnp
xchg
sbb
das
lcall
icebp
roll
sub
mov
ret
aas
xchg
lods
mov
add
aas
jmp
jo
pop
inc
cmp
fstl
cmp
jb
xchg
xchg
push
hlt
and
in
rcrb
xchg
sub
pop
jl
cwtl
sbb
mov
dec
push
and
mov
aas
test
push
testb
cmpsb
pop
jo
inc
gs
pop
rcll
in
enter
and
or
shlb
jecxz
mov
pop
jnp
or
jg
sbb
xchg
fwait
pop
js
cmp
out
or
je
ret
subb
aaa
dec
jge
mov
jae
and
mov
aad
mov
in
push
andl
mov
push
xor
bound
xor
xchg
add
add
jecxz
jg
adcb
test
wbinvd
dec
sti
loop
repnz
mov
mov
dec
mov
mov
inc
add
inc
aad
cmp
pop
rcll
or
repnz
mov
mov
stos
mov
jne
in
lock
filds
fisubrl
test
stos
sub
pop
cmc
push
shll
or
dec
adc
cmp
cwtl
inc
into
sub
jge
pop
adc
sarl
stos
sbb
into
push
mov
and
repnz
jo
jne
testl
bound
sbbl
movsb
dec
fstp
sub
mov
lea
push
cli
mov
out
in
xchg
sbb
jl
rol
add
pop
push
mull
loopne
mov
inc
and
sbb
mov
push
add
sub
call
stos
jns
and
add
cmp
mov
cmp
lock
dec
cmp
test
jg
jnp
out
rcrl
mov
mov
insl
and
jb
aam
push
dec
aaa
and
adc
repnz
test
sub
mov
fucomi
mov
test
aaa
or
ret
mov
imull
sbb
mov
push
imul
mov
push
movl
cmp
jb
ds
loope
out
jle
fnstenv
ja
push
or
xchg
mov
pop
sub
push
pop
and
sub
pusha
add
je
jecxz
adc
jo
push
or
mov
jo
xchg
pop
pop
adc
in
pop
outsb
push
mov
cli
inc
xchg
lahf
push
hlt
sar
jo
in
out
sbb
mov
push
sub
xor
mov
in
jle
xchg
mov
sbbl
cmp
popf
cmp
lcall
push
out
test
inc
mov
loope
xchg
add
punpckldq
xor
in
and
in
push
xchg
cli
loopne
lods
ucomiss
lret
jb
aad
outsb
xchg
outsb
notb
pop
fsubrl
clc
push
and
inc
push
mov
popf
jle
and
sarl
mov
cmp
pop
out
fistpll
lock
or
ret
sti
jo
sub
and
loope
mov
orb
mov
int3
pushf
filds
ljmp
sub
ja
xor
mov
ss
cs
inc
push
addr16
sbb
mov
cmp
mov
sbb
dec
and
fimull
dec
rcrl
mov
insl
rcl
lcall
push
jle
addr16
sbb
jae
dec
inc
jle
test
inc
scas
xor
inc
adc
push
in
lock
jno
pop
mov
loop
enter
sti
fisubrl
ljmp
insb
std
cmp
out
cli
bound
in
mov
xadd
or
les
mov
add
push
push
outsl
xchg
jo
jp
mov
mov
push
push
iret
cmp
xchg
mov
andb
pop
add
outsb
cmpsb
adc
push
sub
addr16
mov
push
ds
lea
add
adc
pop
mov
xor
ss
push
dec
stos
mov
pop
pushf
sbb
push
adc
inc
rclb
repnz
jmp
pop
xchg
call
daa
test
cmp
xchg
ret
xor
mov
xlat
fsts
cmc
les
and
sub
sbb
adc
mov
cmp
pop
aaa
dec
jl
insl
adc
outsb
test
mov
sbb
enter
imul
mov
mov
mov
fsubrl
frstor
mov
es
out
or
stc
cltd
sub
xor
adcl
or
adc
arpl
or
sahf
ja
add
mov
mov
mov
pop
add
xchg
roll
push
clc
lahf
push
sub
pusha
leave
adc
xor
cwtl
iret
mov
jb
shl
pop
add
adc
cld
adcl
pop
fwait
sbb
in
xchg
test
jl
mov
mov
lahf
mov
ret
idivl
mov
in
iret
add
jge
xchg
outsb
inc
sbb
movb
inc
pushf
xor
xchg
add
pop
pop
enter
imulb
std
mov
push
out
xchg
scas
pop
stc
mov
push
std
mov
stos
xor
std
jns
in
in
mov
push
or
jnp
dec
divb
loopne
inc
inc
pop
jnp
add
pop
dec
dec
pop
arpl
inc
roll
mov
cmp
or
scas
jl
lcall
pop
scas
fcomp
mov
movsb
jle
jmp
mov
sbb
push
jns
int3
xor
xchg
das
sti
fisttpl
movsb
or
ret
sub
mov
movb
push
sub
repnz
shrb
adc
jne
movsb
les
fidivrs
test
jbe
out
sub
loop
pop
jmp
mov
fs
push
lret
dec
jle
mov
mov
pop
cltd
add
js
mov
inc
add
pop
mov
mov
xor
insb
sub
inc
pop
dec
and
fwait
lret
sub
fidivs
pop
addr16
add
fsts
fwait
movsl
in
or
outsb
mov
add
mov
pop
inc
negl
mov
mov
int
into
sbb
and
jg
or
sbb
and
jl
or
ja
inc
sbb
push
aaa
imul
push
addr16
xchg
loop
and
dec
mov
lret
jmp
xlat
pop
popa
adc
lret
or
mov
test
or
loope
xchg
or
mov
mov
jne
jp
cmpsb
fs
inc
inc
mov
mov
jle
mov
out
sbb
test
cmpsb
xor
cmp
or
rorl
jge
dec
jo
push
sub
mov
push
faddl
int3
push
push
cwtl
add
out
add
or
xor
push
dec
inc
ljmp
pop
pop
lret
repnz
xchg
add
mov
adcb
lock
out
mov
cwtl
shrl
mov
pop
test
xlat
xchg
sub
decb
inc
rcll
adc
jbe
add
or
outsl
shlb
cs
pop
adc
movsl
loop
enter
sahf
or
jne
mov
sbb
adc
dec
inc
mov
and
cld
cli
addr16
arpl
and
inc
mov
inc
addr16
orl
jnp
sub
and
sub
pushf
and
popf
jae
in
mov
ja
and
jle
jmp
or
outsb
movb
pop
je
dec
sbb
dec
sub
fdivrl
testl
orb
aam
sbb
int3
and
push
ret
mov
in
mov
out
shrb
fcoms
shlb
mov
jb
cli
dec
mov
mov
xchg
jno
fmuls
fldenv
mov
xor
and
or
push
mov
add
out
jecxz
loopne
sbbb
insb
dec
bound
mov
sarb
ss
stos
loopne
iret
mov
out
adc
xchg
inc
jmp
inc
push
orb
cmp
pop
sbb
add
jnp
add
sub
sti
imul
andb
adc
lods
and
xchg
shrb
add
jl
jbe
push
fwait
scas
inc
cli
cmp
dec
pop
lods
dec
iret
mov
enter
push
in
leave
int
stos
cmp
adc
outsl
pop
sbb
in
shrl
mov
mov
push
adc
movsb
mov
mov
clc
xchg
arpl
in
outsb
sub
imul
dec
cmpsl
iret
sub
cmpsb
cmpsb
xor
push
movsl
or
leave
hlt
xchg
xchg
sti
dec
je
mov
imul
xlat
mov
xor
adc
adc
cmp
mov
je
cwtl
popf
loope
jl
stc
jne
sbb
pop
adc
out
mov
dec
in
cmpsl
mov
repnz
imul
cmp
cs
jg
pop
cs
xchg
push
daa
and
rclb
rorl
mov
sti
nop
inc
xchg
adc
sbb
mov
add
in
inc
mov
rcrb
dec
add
push
cmp
scas
mov
cmpsl
notb
insb
cmc
test
push
cs
fwait
pop
cmp
iret
ds
fmull
in
jbe
inc
arpl
pop
aam
pop
cwtl
jle
inc
sarb
setnp
jge
cli
adc
aaa
stos
mov
cmp
xchg
xor
mov
insb
leave
inc
jecxz
orb
xchg
inc
or
lods
sbb
cmp
std
add
or
imul
add
inc
fidivrl
out
shrl
adc
inc
fwait
push
imul
insl
ret
jnp
ffree
push
jno
mov
adc
imul
or
mov
cltd
int3
sub
ja
loopne
andb
mov
sub
scas
sbb
lret
jle
dec
cli
pop
mov
lcall
out
pop
push
jp
or
cmp
ljmp
ds
push
mov
mov
mov
ficomps
mov
sahf
lret
jle
dec
cli
pop
mov
mov
stos
cs
push
pop
out
push
xor
pop
fisttps
scas
or
lret
aam
dec
cli
sub
cmpsb
adc
push
icebp
inc
loope
mov
sub
loop
arpl
or
pop
add
add
or
add
add
add
add
add
add
adc
jb
inc
add
pop
add
filds
pushf
add
lock
add
cmp
int
sbb
sbb
xor
add
popf
add
jae
fildl
add
movb
add
add
add
sbb
or
sahf
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
adc
add
add
add
pop
add
add
add
add
cmp
jmp
add
add
add
add
add
or
popf
add
adc
dec
add
add
add
add
add
add
gs
add
add
add
inc
add
add
add
add
add
add
dec
add
mov
add
add
add
scas
add
mov
add
inc
add
add
add
add
sbb
dec
add
add
add
add
add
add
add
add
add
lods
add
add
dec
add
add
imul
xor
adc
push
add
add
xor
push
add
inc
add
sub
add
add
inc
add
add
sahf
add
add
add
add
add
add
adc
ret
add
lea
xor
add
add
dec
add
add
cmp
add
and
jno
mov
xchg
enter
lods
add
add
add
add
add
add
jbe
inc
add
or
add
add
add
add
xor
lea
and
pop
add
add
mov
pop
add
add
or
cmp
add
push
add
add
add
add
or
add
add
add
add
add
lock
sbb
sbb
pusha
add
add
add
das
add
add
testl
xor
add
or
flds
add
add
mov
add
add
add
add
xchg
push
add
add
add
add
sbb
mov
add
add
add
add
test
and
movsb
add
dec
add
push
add
and
xor
add
add
add
jmp
add
add
add
jle
adc
add
push
add
add
add
add
adc
jae
nop
add
add
pop
add
lcall
add
jmp
aas
add
add
add
add
add
dec
add
add
add
sub
sbb
dec
add
add
xchg
add
sahf
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
int
testl
popf
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
add
push
add
add
add
add
add
add
cmp
push
cmp
add
sub
movsb
cmc
aad
add
test
inc
outsl
mov
inc
repz
push
fadds
jo
cltd
sub
int
sub
pop
loopne
andl
aam
add
dec
in
enter
pop
push
push
push
adc
jmp
fwait
pop
pop
adc
aaa
nop
loope
inc
inc
mov
nop
ljmp
xchg
mov
mov
or
pop
xchg
ret
mov
push
outsb
mov
pop
xchg
push
pop
ss
ficomps
inc
xor
inc
push
adcb
aas
in
sbbl
in
fdivp
test
aaa
cmpsl
cltd
ss
jb
cmpsl
ljmp
mov
fdivrs
popa
xor
pop
movsl
or
clc
mov
scas
inc
jne
add
xchg
mov
aaa
shlb
xchg
dec
out
ljmp
push
dec
jnp
cmp
out
es
lods
loopne
xchg
das
cmp
cmp
int
or
inc
lret
mov
mov
loop
gs
out
dec
rolb
pusha
rolb
pop
divb
or
jmp
pop
outsb
add
jne
clc
and
stos
lods
sub
pop
sbb
or
jae
int3
jbe
sub
dec
pop
out
stos
mov
lock
leave
push
iret
fistl
inc
adc
insl
push
pusha
adc
bound
xchg
dec
subb
or
ss
cwtl
mov
cmp
push
out
sub
jle
sbb
or
mov
pushf
ret
jmp
jae
and
popa
and
aas
and
movsb
jge
ss
pop
packsswb
mov
test
ds
ret
cmc
dec
fcoml
nop
mov
sub
inc
xor
dec
sub
dec
lcall
lcall
fidivrs
repnz
jne
iret
aaa
movsb
dec
sbb
mov
icebp
or
nop
stc
in
mov
movsl
cmp
in
mov
push
into
xchg
in
movsl
mov
mov
jp
mov
stos
dec
shl
negl
pusha
mov
cmpb
sbb
mov
mov
cmp
stos
sub
dec
push
int
adc
or
out
in
mov
jnp
mov
push
xor
int
ja
inc
loope
sar
mov
mov
push
add
mov
jp
xchg
mov
jae
inc
dec
mov
cmp
aaa
cmp
stos
cmp
cmp
push
cs
test
push
and
fdivrl
lcall
sbb
test
and
cli
jmp
mov
insl
and
sahf
sub
adc
mov
outsb
xlat
insb
jge
out
cltd
stos
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
