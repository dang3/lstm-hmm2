call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
pop
insl
mov
xchg
xchg
or
std
es
cmp
push
int
mov
push
lea
cmpsb
insl
mov
xchg
cmp
or
ss
add
lea
mov
dec
cmp
fimuls
or
jae
push
fisubs
les
mov
cmpsb
insl
fists
repnz
das
out
ds
jl
out
mov
mov
cmp
mov
loopne
sub
or
cmp
and
xchg
dec
js
mov
inc
push
inc
jecxz
and
pop
insb
xor
sub
cmp
js
std
mov
xor
push
mov
insl
mov
xchg
ss
sahf
or
leave
fsub
and
mov
sahf
xchg
push
push
jns
jbe
and
xlat
xchg
stos
cwtl
lea
push
out
push
inc
jb
test
enter
in
in
lret
pop
add
cmp
test
inc
push
leave
xor
mov
cmpsb
insl
mov
cmp
fisttps
fstpl
int
mov
inc
lea
or
sub
jle
dec
cwtl
pop
stos
push
dec
mov
test
and
and
cs
testb
sbb
pop
adcb
test
notb
sbb
sub
sarl
out
jecxz
mov
std
es
fldl
int
mov
inc
lea
cmpsb
insl
mov
xchg
cmp
or
fldl
int
mov
inc
lea
cmpsb
push
test
es
outsl
jp
ds
sbb
sub
fstps
fisttpll
xor
loopne
movsb
inc
cmp
sub
pop
int3
xlat
sbb
mov
inc
mov
sti
sbb
daa
imul
add
dec
lret
mov
push
mov
test
loopne
loope
stos
xor
inc
cmpb
sub
dec
push
daa
shll
fbstp
dec
ss
les
pop
das
ljmp
inc
scas
push
pop
add
rorb
jbe
stc
or
loope
inc
pushf
ds
mov
cld
push
mov
or
xchg
push
sub
sbb
popf
test
decb
dec
mov
sbb
dec
push
in
dec
les
sub
fwait
sub
jge
loopne
ret
jle
hlt
pop
test
stc
push
pop
adc
cli
arpl
xor
and
jle
hlt
mov
mov
repnz
enter
cltd
jb
mov
out
push
stc
and
sub
addb
sbb
push
jl
das
sub
sub
outsl
hlt
adc
loope
lret
incb
dec
je
jecxz
push
add
out
cmp
test
fwait
push
sbb
pop
sbb
dec
leave
sbb
jmp
ljmp
ljmp
gs
pop
adc
and
dec
and
or
pop
add
xchg
js
xchg
lods
cld
sahf
pop
popa
bound
jb
adcl
mov
jns
cmpb
xor
aaa
loope
stos
jmp
add
pop
scas
nop
xchg
jle
xlat
sub
subb
push
mov
jne
divb
iret
sub
in
das
loope
ss
mov
push
lahf
jnp
pusha
sarl
or
popf
xor
mov
cmpsb
sbb
test
xchg
shlb
adc
ss
loopne
mov
cmp
scas
add
xor
insb
push
cs
xor
sbb
dec
dec
sbb
mov
mov
sub
shr
sbb
rolb
call
jnp
aad
incb
loopne
ret
outsb
adc
ds
popa
jo
add
fistpl
xchg
in
add
cli
fs
imull
sbb
pop
cmc
jae
scas
test
xchg
xor
ljmp
call
insb
xor
rcr
in
xlat
or
mov
inc
push
push
js
lcall
int
loopne
jle
mov
or
decb
js
inc
orb
mov
mov
adc
inc
xor
sbb
repnz
lea
scas
or
mov
lahf
dec
fs
mov
fwait
or
pushf
sub
test
mov
mov
ret
sbb
dec
mov
inc
cwtl
add
rcll
out
fldcw
push
popf
xor
jecxz
inc
sbb
cmp
lcall
push
daa
pop
fstpl
or
cld
cld
mov
nopl
jb
aam
imul
cmp
xchg
inc
mov
add
xor
mov
sti
sti
dec
xlat
dec
or
enter
jns
xchg
mov
push
lock
aaa
lret
xchg
or
add
jl
test
in
inc
aam
cmc
inc
lcall
ljmp
adc
scas
in
jmp
out
xchg
mov
xchg
cmp
mov
ret
push
pop
xchg
jmp
pop
mov
push
inc
and
and
push
xor
fisttpll
adc
test
fwait
pop
movsb
iret
xchg
add
mov
andb
jbe
pop
adc
xlat
lds
jb
in
xorb
into
push
mov
aaa
testb
lock
jge
mov
mov
adc
sahf
add
mov
mov
xor
out
popa
dec
jo
push
or
xor
movsb
movsl
or
test
mov
lret
repz
jl
addr16
dec
js
test
call
shl
cmp
jl
repz
xchg
or
imul
stos
cmc
cs
test
sub
mov
stos
mov
jb
add
fs
shlb
push
repz
shll
addr16
mov
mov
test
fprem
sub
andl
pop
xchg
mov
adc
push
ja,pn
in
push
jg
cmp
mov
rcr
inc
pop
pop
push
xchg
rclb
inc
addl
xor
and
in
add
mov
dec
add
push
jg
lea
inc
mov
push
xchg
mov
in
push
mov
pop
xor
xor
repnz
fs
rcr
iret
js
negb
inc
inc
sbb
nop
xchg
jo
or
push
dec
cmpsb
data16
push
mov
ret
test
idiv
je
inc
leave
ret
add
movsb
in
fistps
in
pop
ret
repnz
add
sub
mov
das
das
jl
cld
fwait
outsl
outsb
mov
adcb
jl
and
bound
std
ret
das
push
sub
mov
add
sahf
leave
sub
in
enter
sahf
popa
ds
hlt
pop
out
mov
fldcw
cwtl
aas
and
lret
push
into
sub
mov
jae
aad
or
bound
mov
clc
lds
sbb
das
les
mov
cmp
dec
push
lock
mov
js
idiv
rol
out
sub
sti
jno
push
jg
stc
push
lods
outsl
dec
hlt
adc
adc
ss
pushf
pop
jnp
enter
fisubs
out
jg
cwtl
dec
jno
mov
cmpsl
inc
push
lods
add
mov
subl
cmp
inc
and
cmpsl
cld
xor
in
xchg
int
adc
loop
stos
adc
mov
mov
push
leave
scas
sub
and
mov
outsb
dec
je
es
xlat
and
xchg
lahf
stos
nop
in
cmp
push
mov
pop
cs
or
sti
and
inc
mov
push
cld
push
jle
push
cltd
inc
imul
mov
out
pop
int
inc
ja
jns
inc
mov
aad
popf
push
jbe
add
xchg
adc
fldl
loopne
inc
sti
ljmp
cs
push
mov
mov
push
cwtl
out
repnz
sub
jmp
fcoms
sub
xchg
inc
popf
fstpl
and
insb
push
fs
imul
into
fisttps
sti
repz
mov
insb
jecxz
aad
inc
mov
out
push
pushf
mov
adc
hlt
jmp
adc
and
nop
sti
mov
mov
inc
je
testb
fwait
or
inc
xorb
sbb
jmp
shr
jge
or
mov
pop
sahf
mov
rolb
lods
arpl
jp
xchg
sbb
out
loop
fcos
push
into
out
push
xchg
pop
and
mov
mov
and
les
xorl
push
or
xchg
ss
adc
push
fwait
lods
dec
cmpsl
pop
pushf
mov
xor
out
cmp
xchg
jp
jo
xchg
int3
xor
outsb
push
sbb
mov
ja
xor
mov
mov
jne
add
jg
roll
adc
js
les
fbld
sub
pop
hlt
or
cmp
xchg
sub
inc
cmp
or
in
movsb
sbb
enter
xchg
arpl
pop
lahf
loopne
repnz
icebp
fnsave
dec
cld
popf
data16
fcomip
xchg
pop
das
jmp
shrb
fcoml
inc
or
dec
mov
pop
dec
mov
sbb
repz
fsubrl
aad
loop
and
fidivrs
fs
roll
cmp
je
cmpsb
xchg
scas
or
test
daa
mov
dec
and
xor
cwtl
lods
roll
call
push
adc
es
scas
pop
dec
fs
cwtl
jp
inc
pop
jbe
sbb
xchg
push
mov
jg
mov
xor
jno
outsb
sub
or
pop
fdivs
or
dec
xchg
pop
cld
movsl
aaa
sbb
sbb
gs
jns
mov
rcrb
jp
xchg
add
cli
adc
jmp
and
aad
adc
scas
lock
bnd
test
cmp
popf
push
dec
cmp
xchg
sub
pop
xor
mov
idivb
rorb
xlat
jg
jmp
mov
pushf
jo
jl
movsb
mov
dec
sbb
push
ror
lods
xor
repnz
cmp
push
sub
mov
dec
fsub
ljmp
test
or
das
mov
aaa
outsl
dec
rcrl
outsl
js
test
jb
push
jno
mov
jg
mov
cmc
sub
pop
aad
xor
jp
stc
mov
pop
lcall
cmpsb
cld
jmp
jmp
and
ja
das
in
fxch
fisubl
idiv
ds
pop
in
lock
add
ret
lret
pop
sbb
arpl
outsl
sub
and
xchg
sbb
or
cmp
mov
inc
or
sub
into
jp
lds
and
insb
rolb
adc
push
in
lods
out
add
jge
cs
cmp
dec
or
xchg
fisttpl
mov
into
adc
push
sbb
out
cmp
jmp
add
sbb
outsb
push
mov
sub
shlb
in
mov
std
xchg
pop
xlat
push
pop
enter
and
popf
push
sbb
add
adcl
or
xchg
pop
leave
push
pop
stos
not
fdivl
nop
sub
mov
pop
repz
ret
jl
pop
xlat
ds
mov
sub
adc
sub
mov
std
mov
add
xchg
imul
and
adc
sub
leave
in
out
xchg
dec
mov
mov
in
push
fldl
jns
inc
aad
or
push
and
fs
ds
push
cmp
test
fmuls
cli
loope
inc
jg
and
imul
mov
cmpb
divb
dec
bound
dec
pushf
xchg
dec
adc
jae
adc
icebp
incb
popa
cmp
scas
out
stos
push
cltd
sub
fldlg2
in
add
and
lods
fistpll
xchg
loopne
stos
lds
xor
xlat
push
xor
add
xor
aas
adc
dec
lahf
sti
mov
mov
rolb
das
push
and
lods
in
and
fisubrs
xchg
into
push
sub
mov
pop
mov
loop
call
pop
lcall
jmp
push
add
push
cltd
imul
repz
sub
jbe
push
or
lds
sbb
das
add
stos
jae
fsubp
and
stc
push
xchg
das
jmp
or
data16
add
inc
notl
and
or
dec
jmp
fadd
jns
inc
int
mov
hlt
lock
push
xor
pop
pusha
jno
dec
pop
in
pop
or
repnz
push
dec
roll
mov
js
in
gs
mov
icebp
shlb
mov
ds
in
sahf
jbe
dec
pop
cli
gs
pop
test
inc
jb
mov
mov
iret
inc
xchg
lock
pop
std
mov
arpl
inc
roll
sahf
jp
not
dec
jl
adc
and
and
mov
fnsave
mov
lcall
sbbl
cli
dec
jp
and
loope
lea
mov
add
dec
iret
ret
xor
mov
shll
jbe
ja
push
sbb
mov
and
or
lahf
and
sub
xchg
xor
mov
add
xor
adc
ljmp
icebp
popf
mov
and
pop
in
aas
shll
fucomi
dec
divl
stc
popa
icebp
js
jmp
test
mov
sub
xchg
sbb
push
mov
fiadds
pop
popa
fsubrl
xor
sbb
loopne
sbb
jecxz
mov
inc
and
cmp
fdivrs
mov
inc
pop
lds
inc
fsubs
jmp
dec
inc
pop
push
inc
arpl
cmp
jns
dec
push
jnp
mov
aaa
jne
subb
lret
aam
push
ror
lahf
cltd
in
cmp
stos
cmp
cmp
cli
shlb
loope
cltd
int3
fnstsw
mov
gs
and
inc
push
add
add
jne
sub
ret
out
adc
xchg
lods
and
call
in
mov
xorl
cmp
cmpsl
imul
mov
jb
xchg
pop
out
int
cmp
ret
cmp
int3
out
mov
push
jl
daa
add
jae
lock
lea
sbb
jnp
jge
stos
nop
fildll
lock
loopne
shll
popf
test
lock
jns
pop
pusha
nop
jl
jl
and
ljmp
sbb
scas
xchg
movsl
loopne
adc
fmuls
movsl
inc
bound
bound
inc
outsb
fmull
add
outsl
mov
inc
pop
cwtl
add
and
es
flds
jns
lret
jnp
inc
loop
add
add
inc
pop
lret
jno
mov
movb
hlt
xchg
pop
outsb
xor
dec
and
je
add
or
inc
cs
cli
je
jp
rclb
jbe
dec
rcrb
repz
scas
sbb
out
aas
push
sub
xchg
popf
dec
mov
in
mov
xchg
aam
int3
mov
sbb
dec
jle
lock
sub
aas
mov
lock
adc
dec
imul
mov
aaa
sbb
fisubl
push
pop
inc
jae
jmp
ret
mov
outsl
xor
mov
shlb
testb
xchg
jns
cmp
sub
lcall
xor
in
mov
dec
filds
dec
fwait
xor
mov
cmpsb
mov
xchg
in
mov
ss
aam
inc
cmpsl
loope
pop
fidivrs
xchg
add
cmpsb
cmp
test
sbb
xorl
ds
mov
dec
pop
call
movsb
imul
les
dec
cmp
sbb
lock
data16
aas
js
stc
jg
jo
adc
test
or
pop
xchg
mov
aas
pop
ljmp
es
icebp
fcmovnbe
nop
push
or
lods
mov
xchg
xchg
lret
push
push
loope
and
loopne
jo
ret
inc
push
push
neg
loopne
jbe
sbb
jl
mov
mov
sub
fimull
jge
rol
pop
int
pop
push
movsb
daa
cli
push
loope
int3
xchg
or
les
inc
pop
aam
test
imul
dec
cmp
test
sti
jl
out
hlt
push
ja
imul
fistpl
movsl
pushf
clc
sbb
jl
or
extrq
sbb
mov
xchg
shlb
jmp
push
test
test
daa
in
xor
inc
lret
push
fsubl
mov
in
ds
mov
cmp
divl
or
fimuls
push
or
sub
mov
out
mov
dec
in
leave
dec
sbb
sbb
ljmp
cmp
outsl
js
and
subb
xchg
les
scas
ljmp
push
lea
xor
outsb
gs
mov
shlb
in
inc
inc
pop
sub
leave
ret
mov
xor
xchg
or
ficoms
test
rcrb
cmpsl
fstpl
and
push
pop
mov
cmp
fstpt
dec
mov
xchg
and
xchg
jbe
cmp
cltd
mov
dec
push
imul
push
movsb
dec
movsb
fsubrs
jno
inc
mov
cmp
insl
out
rorl
ljmp
xor
jmp
pop
cmp
mov
ss
xchg
ficompl
jmp
call
movsl
outsl
pop
or
add
addb
in
mov
ret
inc
fistpll
inc
mov
inc
xorb
lea
out
in
jne
ror
das
aam
lret
sahf
sbb
in
lret
fs
ss
and
subl
movsl
ds
mov
add
test
jp
clc
and
xchg
fsubrl
or
and
mov
or
lahf
push
sub
lcall
sti
cld
in
inc
jp
cmp
lcall
ja
and
in
fwait
popf
push
movsb
add
inc
pop
cmpsb
sub
ss
into
mov
jnp
shll
mov
fwait
cmp
movsb
push
dec
lods
add
xchg
mov
jb
mov
mov
fdivl
xchg
nop
cmp
addr16
inc
mov
xor
xchg
or
mov
push
out
aaa
add
xor
lods
lahf
cltd
sarb
insl
int
sub
xor
or
pop
dec
cli
pushf
mov
mov
je
lahf
jl
jg
popa
cli
ficoml
jno
sbb
or
or
sub
popf
in
jb
xchg
ficomps
jbe
movsl
xchg
pop
mov
and
stos
mov
clc
in
xchg
push
out
sbb
std
jmp
fdivl
leave
jmp
dec
das
inc
mov
mov
inc
lahf
cmp
cli
nop
push
jg
jne
jo
dec
inc
enter
ficoms
mov
int3
hlt
add
lret
mov
cltd
adc
in
push
pop
pop
xchg
subl
insb
popf
daa
mov
add
movsl
mov
clc
xchg
and
fcompl
es
popa
xchg
daa
divb
sbb
jo
cmp
jp
adc
dec
insl
std
bound
or
outsb
add
and
in
lods
xchg
push
loopne
pop
xor
inc
sbb
out
cmc
jo
out
mov
fs
and
inc
aad
cltd
xor
movsl
cmpsb
mov
insl
stc
mov
adc
xor
pop
cli
out
inc
xor
sbb
mulb
add
push
outsb
sti
inc
bound
inc
inc
mov
inc
jl
loope
mov
dec
insb
clc
ret
sahf
dec
dec
inc
scas
out
sub
pop
xor
xor
ljmp
rolb
inc
or
dec
lods
mov
and
jne
imul
jl
xchg
les
adc
in
mov
neg
or
test
rorl
icebp
add
ds
sbb
test
movsl
cmpsb
and
sub
rorb
loope
stc
sahf
or
sar
das
or
ds
mov
outsl
pop
mov
in
push
pusha
pop
js
sub
push
push
imul
add
xlat
je
mov
inc
imul
insb
sub
mov
int
xor
push
xchg
xor
xlat
iret
test
push
insb
ljmp
cmc
mov
adc
pushw
push
fstpl
jg
daa
or
and
push
cwtl
jae
mov
les
mov
inc
test
ljmp
rolb
aam
push
lea
nop
sub
movsb
add
mov
mov
add
push
add
mull
in
add
stc
pop
add
sub
sbb
leave
mull
ljmp
mov
out
mov
mov
cmp
sub
jg
cmp
sbb
cmp
sub
ficomps
rcrb
mov
sub
mov
pusha
add
cld
xacquire
repnz
dec
insl
imul
insl
les
das
cmpsl
sub
mov
shll
push
aaa
push
test
cltd
jecxz
sbb
mov
mov
les
dec
add
js
vmovhps
data16
mov
xor
mov
outsb
cmc
popa
push
push
pushl
mov
mov
sbb
sbb
mov
sbb
lcall
sub
sbb
jae
mov
jl
insb
repnz
imul
sbb
lea
adc
and
mov
xchg
lret
rorb
lret
mov
sbb
ljmp
inc
lcall
xor
outsl
mov
mov
lds
jl
push
inc
daa
pusha
cltd
mov
add
fildl
cld
ret
mov
xor
cmp
add
je
inc
out
pop
mov
pop
mov
jae
fisubrl
loope
loopne
in
jne
insb
jmp
sahf
adc
xchg
je
cs
adc
push
repnz
jnp
sub
mov
cmp
inc
in
insb
ljmp
adc
mov
cmp
xchg
je
xor
fs
test
push
in
fbld
outsl
fsubl
mov
xor
fsqrt
repz
jnp
das
mov
aam
pop
and
out
xchg
in
sbb
ss
leave
ljmp
cmp
cld
incb
fnstsw
arpl
pop
clc
loopne
pusha
inc
xchg
lahf
xchg
jbe
stos
cltd
aam
dec
sbb
mov
mov
jl
push
mov
outsb
hlt
xchg
fwait
cld
mov
mov
loope
mov
pop
aas
xor
std
es
imul
sti
loop
jne
into
adcb
jno
mov
cltd
lcall
or
movsl
aaa
gs
xchg
ljmp
mov
imul
sbb
es
fldl
int
mov
inc
lea
cmpsb
insl
mov
xchg
cmp
or
fldl
int
mov
inc
lea
cmpsb
insl
mov
xchg
cmp
or
fldl
int
mov
inc
mov
cmpsb
insb
mov
xchg
cmp
or
pushf
ja
int
lret
mov
jb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
lods
lds
cmc
and
sti
mov
inc
cmp
or
add
pop
xor
in
cmc
in
test
xchg
int
fnsave
or
add
pop
xor
in
cmc
in
test
xchg
int
fnsave
popa
adc
adc
inc
xor
lea
jbe
cmpsb
and
add
cmp
sbb
pop
cld
in
ss
shl
bound
adc
push
test
mov
je
lds
and
mov
mov
call
push
inc
mov
imul
sub
pop
xor
cmp
loope
test
test
fucom
mov
fwait
ja
xchg
push
cmp
adc
pop
pop
sub
bound
mov
std
push
pop
cwtl
jecxz
add
mov
adcb
pop
gs
inc
inc
sub
das
dec
setbe
fnsave
jp
int
repnz
xor
loope
xor
xor
in
cmc
in
test
xchg
int
fnsave
or
add
pop
jae
test
push
in
hlt
mov
ljmp
sub
or
insb
push
sbb
test
lahf
call
loopne
mov
dec
add
xor
jp
push
sub
xchg
mov
andl
inc
cmp
jne
add
pop
xor
in
cmc
in
test
xchg
int
fnsave
or
add
pop
xor
adc
mov
adc
andl
sub
pop
pop
or
push
ds
jmp
aam
jno
pop
ljmp
push
aaa
icebp
ljmp
lcall
es
ja
idivb
jl
push
pop
shlb
or
ljmp
inc
cmp
mull
jno
mov
mov
std
add
insl
sti
mov
jle
push
mov
jbe
push
pop
aad
fnstcw
xor
fs
scas
mov
dec
xchg
dec
lret
jb,pn
and
inc
cltd
or
aaa
ljmp
xor
in
jg
bound
fwait
mov
addr16
jnp
nop
insl
es
test
sahf
mov
pop
gs
int
cmp
cld
push
dec
sahf
in
enter
loop
cli
cmp
out
ljmp
js
pop
pop
call
gs
xchg
in
lods
in
cmpsb
mov
pushf
sbb
xchg
bound
arpl
cmpsb
dec
jo
sahf
or
push
sahf
adc
cmp
xchg
pop
inc
sarl
lds
lret
loope
je
mov
sbb
sahf
lods
arpl
ficoms
adcl
loop
add
jp
cmpsb
xor
or
fs
jo
sub
hlt
test
cltd
add
dec
pop
mov
adc
pop
inc
loop
cmp
addr16
mov
sbbl
fcmovb
push
loope
out
int
pusha
mov
lods
and
frstor
outsl
inc
and
xor
call
xchg
loopne
add
pop
mov
sbb
push
popa
into
pop
adc
sbb
lret
mov
movl
mov
and
popa
cmc
fdivrs
add
rcrb
into
gs
in
add
scas
test
dec
in
dec
jne
pushw
es
scas
mov
pushf
fsubr
mov
xchg
rcll
pop
out
jl
jb
out
scas
jge
jecxz
mov
dec
lcall
inc
jb
and
xor
nop
repz
mov
ljmp
cld
cmp
das
out
xchg
push
aad
inc
jo
psubsb
movsb
stos
or
mov
xor
fs
call
in
push
in
cmp
in
mov
sub
stos
jge
cmc
das
lock
pusha
mov
adc
cmp
jnp
jle
or
xchg
mov
subl
jo
bnd
xor
adc
call
add
cmp
sbb
outsl
push
aam
andl
mov
sarb
dec
or
push
fld
xorl
out
repz
cmp
andl
aas
jl
inc
xor
out
sbb
lahf
je
inc
or
cli
addr16
mov
bound
xorl
xlat
pop
stos
mov
pop
push
and
pop
aam
clc
cmp
aaa
pop
imul
mov
fimull
cwtl
je
imul
in
lret
dec
in
add
aad
mov
enter
push
mov
in
cltd
jno
shll
fisttpll
stos
pop
and
test
mov
lock
cmp
dec
inc
sub
sarl
sysenter
and
dec
imull
arpl
in
shlb
cmp
dec
xchg
sbb
imul
sbb
sub
xchg
jnp
lds
mov
data16
add
xchg
out
pop
mov
hlt
fmul
push
repz
insb
les
xor
dec
cs
xchg
mov
lcall
and
mov
es
jne
mov
xchg
xor
push
add
jno
xchg
test
xor
stos
imul
push
mov
dec
add
movsb
xor
sbb
imul
rolb
idivb
mov
rolb
sbbl
xchg
sbb
and
aad
dec
sub
mov
mov
xor
jg
or
gs
daa
xor
into
lea
cmpsl
and
test
hlt
add
sahf
xor
mov
fimuls
mov
or
sbb
into
and
aam
ret
xchg
mov
pusha
fidivrl
aam
push
cmpsb
les
and
pop
jbe
sub
mov
xchg
subl
push
shlb
add
sarb
das
jae
out
xchg
sub
xor
subb
or
or
dec
loope
xor
and
inc
adc
sub
ret
fstps
dec
jle
xor
jns
aas
xchg
pop
popa
add
adc
sbb
stos
add
addr16
xor
xchg
dec
cmpsl
pop
pop
cmpsl
dec
aaa
outsl
jl
jo
xchg
add
aas
jbe
shll
jmp
pusha
cmp
pop
in
lock
lret
jecxz
pusha
imul
adc
addr16
test
inc
add
sahf
mov
or
fsubp
sarb
xor
or
dec
sub
mov
js
cld
faddl
stos
in
xchg
adc
jg
xchg
mov
ret
cmp
test
lea
mov
stc
mov
test
push
adc
fstl
push
jnp
jle
mov
cmp
xchg
sub
pop
mov
stc
iret
push
out
mov
push
in
mov
sub
push
sbb
mov
dec
adc
dec
std
mov
jae
lea
stos
push
leave
fldt
in
mov
in
movsl
pusha
in
dec
mov
adc
fwait
loope
cmp
inc
ss
mov
mov
jmp
and
mov
mov
xchg
and
nop
jl
mov
sub
arpl
data16
aam
outsl
stos
pop
mov
mov
test
scas
fwait
jb
pop
iret
mov
loope
sbb
sub
pop
push
mov
loop
repnz
stos
es
nop
jo
ss
scas
add
pop
sub
loopne
inc
test
shrb
test
out
hlt
arpl
mov
in
test
xchg
sub
cli
rcl
mov
mov
js
mov
sbb
push
orb
mov
inc
xchg
mov
or
add
cltd
pop
xor
sbb
cld
pop
cmc
enter
push
sbb
adc
aaa
jno
cwtl
cmp
lods
and
std
into
ljmp
shrb
jns
je
movb
add
daa
addl
cmp
clc
sub
cld
add
inc
das
pop
pusha
fwait
data16
fildll
movb
ret
sbb
push
insl
int
jnp
dec
ret
push
fwait
movsl
lcall
mov
xchg
mov
xchg
out
sbb
push
fcomps
hlt
mov
inc
in
lret
cwtl
movsl
lds
jmp
mov
imul
out
mov
jns
jno
mov
icebp
out
xchg
lcall
jae
test
push
lahf
xor
loop
dec
andl
dec
mov
cmp
adc
adc
push
jl
dec
icebp
xor
mov
and
cmp
data16
mov
push
dec
mov
imulb
xchg
test
or
hlt
lods
jb
testb
jno
cmp
cs
pop
add
mov
imul
fsubrs
cld
fbld
inc
lods
mov
fisttps
xchg
pushf
and
mov
jl
sbb
or
mov
pop
test
mov
sbb
push
scas
xor
and
cltd
mov
push
dec
jecxz
popf
jo
push
adcl
sub
sub
addr16
and
xchg
imul
insb
mull
mov
lcall
scas
sbb
xchg
jp
std
sti
xchg
stc
data16
lret
cmp
stos
mov
and
ret
mov
addr16
xor
xchg
adc
test
out
loop
xchg
mov
icebp
insb
jnp
push
gs
jecxz
xchg
jo
fdivrl
mov
ja
fistpl
sbb
rolb
xchg
xorl
add
add
fisttpl
mov
imul
das
add
add
iret
xchg
mull
fs
push
loopne
push
in
aam
mov
and
adc
xor
lods
les
mov
push
or
sub
hlt
sahf
orb
mov
xlat
sbb
fs
stc
and
and
add
adc
mov
mov
loope
subb
in
add
mov
fimuls
gs
fidivl
sbb
into
mov
enter
or
js
or
scas
mov
mov
jb
jecxz
into
std
loop
and
add
jle
adc
clc
addb
dec
std
dec
int
int
dec
add
cmp
dec
lahf
shrl
pop
int
jb
aas
in
and
push
ret
mov
jne
movsb
stos
mov
hlt
mov
or
ds
push
jecxz
mov
insl
lahf
or
adc
inc
nop
imul
jp
lret
mov
lahf
cld
fisubrl
pop
xchg
shl
or
iret
sub
jb
sahf
dec
inc
cmp
in
mov
xchg
push
lcall
inc
ret
lret
xchg
loop
lea
cs
lcall
test
add
push
mov
cmp
or
mov
and
mov
repz
fwait
lea
mov
int
dec
mov
and
mov
arpl
push
mov
in
nop
jecxz
js
push
in
imul
adc
pop
ds
cmp
sbb
adc
cli
add
loopne
mov
sbb
mov
lea
sub
mov
mov
in
dec
jo
int3
cmp
and
inc
fs
inc
repnz
xor
int3
daa
mov
push
cmp
cmp
adc
notl
jl
insb
das
lea
nop
es
xchg
aaa
mov
adc
fnstcw
jecxz
and
sbbl
test
loop
loop
push
roll
ret
cmc
adc
bts
ja
mov
lret
test
ss
push
sub
rolb
pusha
mov
adc
sub
loop
pop
iret
mov
mov
jnp
mov
in
lret
pushf
inc
cmp
sbb
js
add
int3
dec
pop
cmp
xchg
cmpsb
mov
push
xchg
bound
sub
xchg
shl
jmp
mov
jmp
pop
xchg
cmp
dec
add
imul
fldl2t
out
pop
inc
nop
dec
jb
or
add
adc
sub
lock
pop
mov
data16
jnp
mov
push
call
push
sub
xor
push
jno
cmp
mov
mov
daa
jnp
stc
imul
add
mov
jae
push
pop
rol
movsl
ss
dec
sbb
jmp
sbb
int3
sub
ds
frstor
pop
cmc
roll
xchg
sbb
cli
gs
xchg
mov
aam
and
fwait
aaa
cmp
add
or
repnz
sahf
jbe
test
xchg
cmc
mov
adc
push
andl
mov
cwtl
jne
and
jbe
scas
mov
inc
stc
outsl
test
adc
adc
jg
icebp
sbb
jp
test
mov
push
out
jge
or
mov
sbb
inc
cmpl
and
loop
mov
jnp
cmp
mov
push
in
add
push
jecxz
imul
adc
push
pop
sub
rcrb
in
sbb
sbb
je
xchg
int
mov
scas
jbe
adcb
sub
sti
js
mov
xor
inc
leave
and
mov
dec
ja
mov
hlt
lods
dec
dec
pop
inc
jecxz
jle
jne
push
fmuls
pop
cwtl
or
jp
stos
sti
pop
mov
pop
add
push
in
pop
roll
shlb
sbb
adc
adc
ret
add
jno
mov
stc
pop
insb
push
pop
pop
rcrl
stos
mov
int
add
loop
ja
jmp
insb
and
or
jb
in
outsb
icebp
xor
and
push
je
fdivl
or
sbbb
ret
ja
add
jg
ss
xor
outsb
jne
in
not
adcb
fwait
push
test
lea
jmp
pop
lret
push
inc
adc
aad
repnz
mov
fnstenv
pop
push
and
cs
xor
loope
es
add
push
rcrl
sbb
sarl
push
int
sbb
popa
dec
pop
adc
imull
cs
xchg
mov
mov
xlat
pop
jle
int3
outsl
repnz
ret
movsb
sub
cmc
sbbb
mov
or
repnz
xchg
punpckldq
push
imul
mov
push
testl
and
jbe
push
es
mov
dec
sub
lret
pushf
push
outsb
mov
repnz
fbld
rcr
out
in
jno
sbb
push
stos
jb
idiv
shlb
pop
aaa
jb
ret
popf
sub
mov
out
outsb
cmpsb
mov
pop
pop
mov
pmullw
les
fidivl
leave
loopne
mov
jno
jl
jb
nop
rcr
push
iret
mov
xchg
jne
sbb
jbe
jg
lds
adc
mov
jg
push
and
dec
pop
dec
pop
adc
cmp
in
jns
es
int3
adc
jmp
push
jne
xchg
sub
mov
inc
rcl
pushf
add
dec
cwtl
sbb
cmp
jecxz
xlat
adc
sarb
test
cmp
xchg
repz
jg
cmp
sbb
pop
pop
mov
loop
mov
pop
ss
ficomps
aad
adc
push
data16
ss
insb
in
sub
xchg
inc
cmp
push
adc
inc
sbb
or
mov
leave
ljmp
loope
add
push
and
fildll
mov
enter
mov
shl
popf
pop
cmp
or
loopne
and
pop
roll
mov
addr16
dec
pop
clc
jmp
mov
fbstp
cmp
arpl
arpl
fdivrp
lret
in
push
mov
xor
cltd
lcall
pop
les
ds
int
jmp
xchg
or
fistps
push
sbb
add
or
mov
sbb
or
xchg
push
jge
shl
fisubrs
leave
movsb
sarb
test
shll
cwtl
testb
adc
out
mov
int3
jo
cs
stc
pop
das
sub
jmp
fwait
jmp
dec
dec
push
xor
and
adc
inc
les
ret
aas
test
rolb
or
rdmsr
mov
sbb
push
icebp
mov
jns
das
sahf
pop
adc
mov
shll
repz
sbb
mov
add
cwtl
pop
ds
sahf
mov
add
add
add
incb
imull
xchg
and
cmp
fmul
mov
fsubrp
sbb
or
dec
in
mov
pop
cld
mov
xor
push
sbb
arpl
mov
call
ss
dec
push
popf
jb
and
into
loop
add
loopne
push
xchg
and
ret
movsl
xor
adcl
dec
sbb
sbb
fldcw
lcall
das
push
shr
inc
cli
aam
mov
mov
push
in
and
cmp
adc
mov
rol
pop
sbb
push
stos
cltd
pushf
mov
shr
cmp
jecxz
push
cmp
or
outsl
lcall
stos
mov
cmp
pushf
hlt
fs
pop
or
pusha
push
mov
lods
aaa
leave
add
mov
pusha
dec
pusha
insl
mov
popa
sbb
inc
cmp
pop
and
jp
push
push
testl
push
mov
cs
out
fidivrs
inc
scas
lods
xchg
push
push
mov
jg
rolb
push
addr16
out
pushf
push
add
fisubs
xlat
jg
test
out
repnz
fucomi
push
stos
pop
fdiv
lods
lret
xor
xor
fwait
cli
sub
mov
call
sub
xchg
repz
mov
mov
mov
dec
sarb
scas
inc
aaa
scas
aam
cmc
inc
add
adc
mov
mov
cmp
stos
add
lcall
imul
mov
mov
xor
inc
out
jmpw
test
or
outsb
pop
mov
jecxz
sub
cmp
sub
js
bnd
popa
cmp
xorl
jl
or
shrb
or
sbb
mov
lock
fs
xlat
aad
mov
das
push
jnp
loopne
lahf
dec
fbstp
mov
xor
mov
push
xchg
sahf
hlt
sub
aam
xor
sub
shr
or
sbb
inc
mov
dec
dec
mov
out
xchg
adc
cmp
inc
imul
inc
rcl
sarl
dec
sbb
cmp
xchg
hlt
pop
jge
xchg
or
fwait
mov
dec
push
xchg
mov
stos
repz
ja
lods
std
mov
imul
xchg
mov
mov
fisubs
mov
loop
jg
add
inc
dec
sub
jl
outsl
or
sbbl
dec
inc
jo
pusha
shl
dec
in
mov
hlt
xchg
xchg
fiadds
cmpsl
pop
jae
push
repnz
sub
push
sbbb
xlat
ss
ficompl
jae
mov
cmp
leave
jae
sahf
jl
add
cmp
xor
je
jp
movsl
sub
cmp
mov
add
mov
scas
ja
push
insb
nop
icebp
mov
pop
pop
and
aas
test
mov
stos
xor
lods
popf
mov
lea
mov
add
jge
xor
repz
pop
cmp
fistl
pxor
or
fcmovb
out
jno
in
inc
scas
lds
xchg
or
outsl
push
adc
leave
or
jle
pop
stos
and
movsb
test
in
and
add
mov
pop
in
cmpsl
adc
push
pusha
jb
adc
adc
xor
lret
in
xchg
xchg
test
in
mov
xchg
or
xchg
out
xchg
sbb
mov
or
loope
fucomi
sbb
sbbb
mov
sbb
das
lods
push
mov
aam
repz
decl
lahf
arpl
mov
mov
adc
dec
mov
mov
dec
pop
sub
pop
mov
dec
xchg
rorb
dec
lahf
call
jo
and
add
lea
or
inc
incb
add
stos
les
mov
call
stc
push
mov
push
push
not
out
push
adc
mov
mov
adc
push
div
sbb
lds
inc
popa
lcall
xchg
mov
pop
jmp
lahf
add
stc
adc
dec
adc
cmp
push
loop
inc
popf
ss
mov
sub
xor
pop
adc
stc
jmp
mov
push
or
or
in
push
stos
pop
or
xlat
leave
fwait
jg
xchg
stos
push
inc
jns
fsts
mov
dec
sbb
in
dec
test
std
push
fs
into
push
xchg
dec
inc
in
add
inc
bound
push
incb
cmp
fbld
enter
adc
mov
and
jb
outsb
scas
mov
or
jle
adc
lds
xchg
call
adc
stos
jno
jl
enter
jecxz
push
lahf
fs
lret
rclb
call
jo
fwait
test
cld
lods
out
push
add
cmp
andb
js
adc
lods
inc
jno
lods
int3
ret
lock
repz
imul
pop
cwtl
mov
addr16
vpmullw
out
add
add
rcll
les
in
addr16
jp
nop
pop
dec
sub
fcmovu
push
jne
jno
pop
cmp
int
mov
or
push
lret
in
ffreep
and
jge
leave
adc
testl
rcll
test
int3
lock
sbb
push
shrb
push
in
fadd
push
xchg
xchg
roll
test
push
pop
push
imul
daa
rol
xchg
sub
lahf
push
mov
shlb
lcall
xor
aaa
bound
js
jl
clc
fisubrs
dec
inc
ffreep
mov
ljmp
movsl
ja
pop
or
cmp
xor
iret
ds
cmpl
and
sub
outsb
imull
fcoml
jb
and
sub
push
or
push
push
xchg
js
fsubrs
andl
hlt
movsb
outsl
iret
loop
out
fidivrs
pop
cmp
mov
pop
push
jbe
mov
jae
jnp
out
cmc
aaa
mov
jge
cmp
xor
mov
popf
cmc
in
test
xchg
int
fnsave
or
add
pop
xor
in
cmc
in
test
xchg
int
fnsave
or
add
pop
xor
or
test
xchg
int
pop
mov
inc
cmp
jne
add
adc
lods
lds
icebp
in
test
adc
sub
gs
ljmp
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
fwait
and
stos
adc
mov
push
sbb
sub
imul
aad
and
stos
adc
sti
inc
jmp
or
and
cmc
jnp
imul
and
mov
ret
jne
inc
jmp
add
push
xchg
pop
mov
cmp
repnz
fldl
lret
xchg
cmp
lock
push
and
mov
jae
mov
arpl
ljmp
jle
sahf
dec
and
test
sbb
nop
pop
sbb
xchg
test
daa
dec
repnz
jns
call
sub
add
push
jnp
imul
mov
leave
adc
add
ljmp
jp
lds
imul
push
lret
dec
ljmp
sbb
sbb
loop
jp
push
mov
cmp
jae
imul
arpl
adc
clc
or
jecxz
in
xchg
push
lock
jnp
imul
and
stos
adc
sti
inc
repnz
add
xor
popa
lds
testl
jl
or
add
dec
in
dec
rcrl
xchg
movl
aaa
aam
sub
mov
sarb
push
pop
xchg
sahf
or
insb
out
xlat
insl
ret
jo
gs
jne
inc
jmp
sbb
sub
jnp
imul
and
stos
adc
sti
inc
jmp
sbb
sub
jnp
imul
and
fcoms
test
cs
cmp
jmp
sbb
push
mov
mov
mov
mov
cmpsb
mov
mov
xchg
out
or
popf
or
dec
mov
repnz
xorl
mov
pop
daa
in
sbb
jp
lcall
lds
mov
jno
add
call
push
push
xor
mov
repnz
inc
and
ficoms
xchg
mov
mov
fmulp
add
gs
or
in
add
sbb
push
cmp
mov
fwait
inc
lahf
sbbl
mov
int
out
lret
scas
stc
pushf
sub
je
pop
dec
scas
mov
pop
cmpb
push
fdivl
incb
jle
add
push
mov
loope
jl
hlt
test
out
sub
in
ja
fucompp
pop
cld
lcall
shlb
cmc
repz
cmp
lods
adc
cli
stos
addr16
xchg
std
scas
adcb
mov
cld
out
in
test
pavgw
out
push
mov
jmp
dec
inc
fdivrl
test
xor
imul
call
iret
in
lods
ljmp
mov
pop
add
jb
fistpl
out
cmp
insl
push
push
and
enter
xchg
shlb
lock
dec
xchg
fwait
or
or
jle
out
sbb
mov
xchg
pusha
jne
dec
mov
push
mov
xchg
and
xchg
sbb
test
add
mov
push
jns
push
lret
xchg
jmp
sbb
cmp
dec
adc
and
mov
fistps
push
mov
pop
repz
pop
cmp
adc
out
and
push
xor
test
cmpsl
and
cmp
mov
cmp
push
add
popf
stc
push
push
or
test
push
lock
cltd
and
rcrb
cmpsb
dec
rcrl
pop
aad
in
cld
dec
ret
enter
rcrl
mov
js
iret
aas
js
adc
imul
leave
inc
scas
repnz
stos
inc
in
xor
xor
dec
movsb
ret
in
mov
jb
loop
lahf
sbb
mov
int3
sbb
pop
lods
mov
outsb
push
push
daa
mov
mov
jl
insl
xlat
cmp
or
inc
mov
cmpl
jmp
aad
sub
cli
insl
dec
and
pop
add
arpl
xchg
repnz
jg
lcall
pop
push
fisubl
jae
pop
or
cmpsl
push
xor
subb
loop
je
jnp
divl
rcrb
mov
add
pop
imul
and
lret
mov
in
xor
mov
test
js
push
into
out
xchg
pop
insl
inc
cmp
mov
ja
cvtdq2ps
dec
sbb
push
xchg
dec
inc
enter
negl
lahf
lods
into
inc
dec
inc
add
lcall
scas
imul
mov
addl
sbb
pop
dec
inc
cmp
jno
mov
rcr
lret
fidivs
loop
out
in
aad
les
mov
inc
xchg
mov
test
mov
mov
inc
sbb
fwait
into
rorb
push
aaa
in
mov
popa
nop
or
mov
stc
push
andb
jns
sahf
jg
adc
rcrl
cmp
jnp
push
cmp
inc
roll
dec
std
cmp
dec
add
pop
or
jmp
insl
adc
sub
lahf
aam
cmc
adc
mov
imul
pusha
mov
ret
lret
adc
inc
nop
stos
popa
add
loop
add
test
cmp
jns
fcompl
push
pop
mov
sbb
inc
sbb
cmp
cld
cmc
push
xchg
int
mov
hlt
fs
stos
insl
fisttpl
mov
enter
jbe
clc
vshufps
dec
data16
in
cs
popf
pop
jbe
or
cmp
mov
bound
mov
jns
mov
cli
shl
js
cmpsb
les
xchg
daa
subb
addr16
push
repz
pop
mov
hlt
push
shrl
cmp
sti
jmp
int
movb
lahf
add
hlt
mov
push
jle
negb
inc
cmp
dec
cmp
or
stos
stos
inc
pop
mov
movsl
xchg
leave
sub
mov
dec
sub
inc
mov
hlt
mov
mov
xchg
repz
jge
xor
cwtl
push
andl
aad
test
daa
inc
xor
sub
or
add
adc
loope
cmp
movsl
jae
lcall
push
or
xchg
ljmp
mov
dec
js
aad
movsl
mov
cmc
cmp
leave
sub
lea
and
fincstp
dec
imul
dec
pop
jno
sub
xor
lods
dec
cltd
xchg
cmp
movsb
mov
xor
sbb
aas
loop
xchg
mov
push
data16
mov
mov
hlt
iret
imul
push
jnp
inc
lret
int3
xor
pop
fadd
outsl
arpl
xchg
jae
repz
sub
pop
les
and
lds
int
fstps
frstpm(287
sub
shrb
stos
mov
add
inc
fcos
or
scas
lret
cmp
pop
cs
fisubs
push
mov
insb
lcall
cltd
insl
sub
fidivl
mov
movsl
sysenter
pop
outsl
push
mov
aam
mov
movsb
hlt
leave
enter
sbb
xchg
popf
mov
cmp
daa
adcl
out
sarb
iret
sub
sahf
cmp
out
xor
shrb
adc
fisubs
es
leave
imul
jns
xlat
dec
in
and
mov
jns
orl
jle
arpl
mov
in
push
pusha
pop
cld
movsl
mov
dec
shll
nop
cmpsl
xchg
testl
cmpsl
add
push
mov
stos
mov
shlb
pop
les
js
xchg
push
add
xor
sub
repnz
test
fucomip
loop
mov
adc
push
mov
dec
inc
out
mov
pop
jge
pop
lods
or
add
mov
incl
mov
rcrl
lds
xor
clc
jg
adc
xor
jo
outsb
ret
imul
call
xchg
mov
adc
xchg
or
pop
std
cmp
rorl
notb
negb
or
jg
add
mov
fsubrs
jns
pop
shll
mov
repnz
ficompl
data16
shll
and
xor
lcall
or
vandps
xor
mov
fdivp
xor
into
xchg
pop
push
idiv
testl
inc
jle
mov
jno
dec
jne
and
ret
sub
mov
push
and
out
ror
add
push
adc
dec
dec
push
mov
fimuls
rcr
sbb
dec
mov
xchg
adc
mov
mov
sub
cmp
daa
test
out
jg
int3
loopne
bound
xor
xchg
loop
sub
ljmp
sbb
mov
insl
inc
xchg
add
xchg
jecxz
popa
mov
leave
lds
jg
jmp
jae
jno
jle
test
cmp
jl
xor
adc
daa
mov
stc
mov
push
ret
popa
or
je
rcl
cmp
mov
inc
jg
and
add
addr16
or
inc
loopne
mov
movsb
inc
jno
ret
lcall
jnp
xchg
dec
dec
xchg
cltd
mov
loope
sahf
pop
ss
lds
les
xchg
jp
rolb
dec
gs
adc
in
jb
jg
push
or
repz
inc
into
fmuls
scas
mov
push
pop
xor
in
jne
pushf
fs
rcrl
mov
mov
test
fdivl
cmp
and
jo
mov
bound
mov
cs
jae
xor
fiadds
out
das
jo
mov
cmpsl
in
jno
daa
sub
fcmovnu
testb
jle
mull
push
or
in
cmp
adc
cltd
je
pushf
mov
cmp
loopne
mov
or
sbb
aas
pop
test
imul
shrl
inc
mov
mov
sub
cltd
repz
gs
test
repnz
push
mov
fmull
mov
imul
and
pop
sbb
js
inc
clc
scas
inc
ret
or
lahf
dec
lods
stos
ficomps
xchg
out
out
sahf
fscale
inc
adc
xchg
out
or
decl
in
and
ljmp
int
outsl
out
mov
outsb
inc
pop
mov
roll
add
pop
jbe
leave
lock
xchg
push
cmp
pop
sarl
ds
inc
xor
out
imul
adc
ljmp
mov
je
imul
pop
scas
outsb
push
mov
cs
sbb
inc
rclb
mov
mov
cmp
outsb
out
push
xor
bound
add
add
cmp
or
mov
inc
and
stc
push
push
mov
fs
pusha
inc
mov
dec
jecxz
push
fcoml
sti
cmp
sub
enter
dec
xlat
in
aam
orl
insb
es
push
sub
xchg
rclb
aas
mov
mov
out
fucomip
ds
cwtl
inc
pop
mov
call
stos
push
psllw
imul
outsl
or
push
push
xchg
pop
lea
repz
cmpsl
sbb
lods
mov
add
xchg
and
or
sbb
mov
out
daa
add
mov
movsl
stos
xor
push
jp
ds
bound
out
dec
xchg
and
lcall
sbb
ss
push
fsubl
mov
xor
pushf
or
aaa
pop
jb
push
sbbb
cmc
fmul
js
mov
jle
xor
push
pop
sbb
adc
jge
xor
out
pop
cmp
outsl
repz
cmpsl
adc
jnp
addl
inc
scas
push
xchg
cmpsb
filds
dec
inc
pusha
scas
dec
ds
imul
into
inc
dec
pop
and
push
cs
add
push
je
jb
fisttps
mov
lahf
ss
xchg
fwait
scas
inc
jmp
stc
ss
sub
aad
arpl
push
xchg
inc
imul
popf
sti
ret
inc
lret
mov
mov
std
les
daa
add
push
iret
and
xlat
pop
mov
pusha
or
sub
xchg
and
cltd
adc
jge
es
mov
test
nop
xor
jno
cmp
push
ja
mov
cmp
or
sbb
fisttpl
pop
jb
cmp
enter
mov
dec
or
sbb
or
clc
jae
mov
adc
mov
aam
pop
mov
dec
jp
repnz
and
xlat
jl
cmp
push
test
loopne
and
jb
lods
std
in
popf
and
into
cmc
repz
lret
fmulp
mov
push
inc
xlat
popf
aaa
dec
clc
xchg
mov
iret
insb
xorl
xchg
and
sub
fisttps
aaa
lods
mov
and
mov
loope
add
shrb
mov
mov
mov
leave
dec
test
mov
and
adc
cmp
lret
sbb
ret
cmc
pop
popf
into
jg
inc
shl
inc
in
xor
ss
mov
or
movsl
push
mov
stc
je
mov
add
out
test
cltd
push
dec
ret
int
sbb
fistpl
lock
mov
push
mov
push
push
and
or
jnp
fdivrl
add
jle
push
dec
sub
stc
push
mov
jne
insl
inc
and
and
cmp
adc
bound
mov
lock
or
ja
js
ficomps
or
iret
in
push
inc
mov
jecxz
xchg
test
pop
xchg
xor
in
sub
subl
jnp
shlb
fists
pop
fwait
mov
clc
lods
or
lcall
cltd
mov
mov
arpl
or
inc
ficomps
sti
jle
rolb
mov
push
xchg
push
fsts
cmp
inc
popf
mov
outsl
movsb
aas
xchg
inc
dec
sub
js
mov
fisttpl
pop
jl
out
adc
and
jnp
sbb
adc
icebp
ret
int
sub
xor
sub
push
xchg
ds
daa
pop
int3
dec
je
addr16
bound
and
and
push
or
pop
and
out
add
out
add
sbb
xchg
icebp
mov
mov
mov
hlt
sbb
fistl
outsl
mov
xor
dec
fcomps
mov
adc
pop
pop
cmpsl
inc
mov
dec
dec
std
mov
mov
xchg
fldcw
vpconflictd
add
mov
inc
push
inc
gs
pop
adc
jmp
daa
jecxz
push
fldenv
push
xchg
sbb
mov
lret
mov
scas
mov
int3
lret
mov
xchg
fcom
xor
sbb
rclb
xchg
cmc
push
out
imul
jmp
in
test
test
pop
notl
push
mov
and
aam
dec
fcomps
fnsave
into
jae
pop
mov
jecxz
cld
inc
xchg
loop
or
cmpsb
xor
stc
and
cltd
ja
sub
lea
sub
xor
out
ds
push
pop
enter
je
fwait
and
ljmp
out
mov
and
mov
loope
movsb
jnp
sbb
mov
test
jb
push
loopne
and
xor
scas
repz
les
int3
and
stos
pop
lret
ror
popf
push
mov
in
sub
adc
push
enter
jle
in
and
lock
mov
jge
dec
popf
pop
cmpl
xchg
xor
or
ljmp
addr16
push
enter
daa
jae
gs
cld
decl
sti
xor
paddd
loop
push
push
mov
inc
popa
cmp
fildl
mov
in
mov
popa
add
add
rclb
ret
jmp
cld
mov
popf
stc
adc
test
xor
inc
sar
out
pusha
and
lea
int
out
ficoml
inc
jo
hlt
neg
sbb
sub
dec
dec
shll
das
subl
pop
mov
fisttps
xchg
jbe
sub
lea
test
sbb
pop
ja
js
scas
cmpsb
jb
mov
lock
sub
sub
sti
ljmp
scas
dec
mov
and
mov
inc
push
add
ficompl
add
jecxz
insb
mov
xchg
addb
roll
push
ss
ret
sub
jbe
mov
jecxz
pop
push
and
les
imul
jmp
xchg
clc
insb
sub
jb
fwait
stc
es
lock
adc
mov
jge
inc
cmp
data16
sti
jb
fcoml
das
and
pop
rclb
movsb
test
jp
and
jns
fwait
imul
cmpsl
mov
dec
shrl
ret
push
in
dec
sbb
pop
mov
into
sbb
sbb
mov
iret
mov
enter
cmpsl
mov
adc
scas
and
into
sbb
pop
arpl
jbe
lds
xor
dec
or
fdivrs
lods
dec
popf
pop
xor
lods
fwait
mov
or
packssdw
std
imul
xchg
jnp
inc
stos
pop
pop
add
cmp
and
ret
mov
cmp
gs
stos
and
negl
mov
xchg
cmp
pop
or
movsl
jb
sub
and
and
xor
add
mov
mov
xchg
pushf
mov
jo
fcomps
adc
and
adc
pop
int3
repz
mov
movsl
xchg
sti
sbb
inc
mov
lret
mull
out
in
xor
insl
xor
je
jl
mov
jb
cmp
or
repnz
stos
fldenv
dec
rolb
inc
sub
pop
popa
scas
jns
scas
xchg
test
dec
cld
dec
jae
lods
mov
sbb
in
push
pop
imul
loopne
pop
jnp
mov
aas
inc
test
shll
mov
sub
in
cmp
movsb
pushl
loop
stc
fsubr
xor
imul
and
cwtl
and
mov
mov
cmc
stos
or
addb
lret
xchg
rcll
adc
dec
xor
ret
loope
adc
out
inc
pop
mov
add
sbb
dec
xchg
adc
and
sbb
in
into
push
cmp
and
ss
dec
sub
push
lea
rol
add
mov
sbb
mov
mov
sbb
push
movsb
dec
pop
mov
inc
je
xchg
ret
cld
fldl
sub
inc
push
dec
xor
xor
or
in
jle
and
mov
icebp
orb
dec
lods
cmpsl
jmp
mov
sub
daa
aam
fwait
inc
std
sar
pusha
inc
lea
lock
es
mulb
hlt
faddl
sub
push
or
lock
cs
in
cmp
xchg
daa
ret
push
sahf
pop
pushf
xchg
les
out
push
fninit
jmp
mov
xchg
mov
popf
int3
test
mov
movsb
adc
imull
adc
leave
pop
inc
sbb
shrb
outsl
mov
mov
orl
xor
je
sbb
cld
jo
jno
lcall
push
cltd
inc
cmp
mov
inc
fcom
mov
mov
out
rclb
mov
push
pop
jns
inc
fldcw
mov
mov
int3
roll
call
js
jne
xor
and
pop
stos
cmp
mov
xchg
out
jne
loope
pop
mov
icebp
jecxz
outsl
out
inc
lea
inc
lcall
dec
and
or
dec
aaa
push
data16
mov
mov
xchg
dec
add
mov
push
addr16
je
inc
jmp
mov
and
cs
push
shll
jge
mov
dec
popf
jae
push
xlat
cli
subl
sbb
sbb
dec
mov
mov
fcompl
cmp
mov
mov
loop
dec
or
fldcw
and
mov
into
sub
and
shlb
xchg
xor
daa
or
lret
push
and
popa
cmpsb
xchg
pushf
mov
orb
out
and
xchg
and
dec
mov
jle
test
aam
movsl
push
test
mov
sub
stc
jecxz
sub
and
inc
sbb
das
xchg
pop
out
cmp
outsb
jbe
rcll
or
dec
cli
ret
pop
add
cld
mov
or
subb
outsb
je
popa
sub
ljmp
cld
pop
mov
mov
xchg
xchg
or
push
jg
mov
xchg
or
jae
pop
popa
pop
lret
ret
xor
cmp
cmpsl
lods
cld
iret
pusha
sbb
pop
jae
sub
jmp
pop
gs
lock
jne
mov
movsl
nop
pop
ret
or
dec
mov
sbb
and
aam
push
jne
loop
mov
push
addr16
xor
int3
popf
mov
cli
paddq
push
add
jnp
pop
push
jge
xor
and
cwtl
cmpsl
test
or
rcll
or
repz
and
mul
xor
xchg
jge
pop
mov
sbb
mov
repz
mov
repnz
daa
insl
fists
aas
sbb
lret
adc
imul
dec
iret
lock
inc
fcoms
mov
popf
mov
pop
ss
adc
mov
popa
stc
xlat
mov
cwtl
mov
pop
inc
cs
adc
iret
jl
pushf
scas
mov
js
cmp
pop
scas
adc
scas
xor
sbb
or
mov
incl
sbb
push
xcrypt-cbc
cmpsl
push
mov
mov
leave
clc
mov
mov
adc
push
scas
call
sub
sbb
jno
inc
cltd
stc
mov
push
insl
inc
setnp
mov
sbb
mov
sbb
lahf
jne
inc
jnp
xor
fisubrs
lea
push
out
push
int
jge
sbb
js
jnp
mov
lods
mov
push
jl
fwait
xor
jne
inc
jmp
sbb
sub
jnp
imul
and
stos
adc
sti
inc
jmp
sbb
sub
jnp
imul
and
stos
adc
sti
inc
jmp
sbb
sub
jnp
imul
mov
gs
jne
inc
imul
hlt
pop
xchg
test
loop
insl
ret
or
sub
jns
imul
sub
stc
mov
cli
cltd
ljmp
pop
sub
jns
imul
dec
push
mov
stc
mov
cli
cmc
ljmp
pop
sub
jns
imul
dec
sub
mov
xchg
xlat
movsb
fidivl
sub
imul
push
shll
jo
push
xor
xchg
jno
cli
cltd
push
xor
shr
xchg
push
sbb
mov
mov
ss
in
jge
fstpt
mov
outsl
and
jnp
daa
lret
mov
mov
arpl
jg
sub
push
mov
jp
jp
movsb
push
and
mov
jge
or
xorb
enter
pop
sbb
xor
rcll
or
push
add
ja
call
push
les
ljmp
xor
insb
ljmp
cld
cltd
jmp
fidivrl
sub
jns
imul
dec
sub
stc
mov
cli
cltd
ljmp
pop
inc
or
outsl
imul
jg
jge
mov
out
lahf
fiaddl
out
cmp
sub
sbb
imul
test
fldt
mov
push
sbb
or
aaa
push
pop
cmp
mov
stc
mov
cli
cltd
ljmp
pop
sub
jns
imul
dec
sub
stc
mov
cli
cltd
ljmp
pop
and
insl
out
mov
imul
fstl
mov
pop
or
add
jg
push
and
and
aad
fidivs
mov
jb
fwait
cmp
ljmp
rcr
pop
and
out
sub
mov
les
adc
imul
bound
int3
ret
loopne
enter
xchg
out
and
push
lods
mov
sbb
dec
aaa
cmpsl
outsb
mulb
lahf
sbb
inc
fnstenv
add
sub
out
pop
inc
cmp
push
dec
inc
push
in
dec
sbb
xor
cwtl
insb
mov
divb
aam
jl
push
adc
mov
stc
xchg
or
int3
fwait
inc
push
pop
mov
imulb
jp
push
jl
sarb
jb
mov
mov
push
inc
clc
out
addb
std
and
test
jge
test
lcall
mov
in
mov
loopne
jg
mov
cltd
icebp
mov
push
push
xchg
and
into
out
add
int
pop
jl
jle
mov
or
shrb
and
jle
je
push
add
cmpb
sbb
aam
push
sbb
push
das
jbe
sbb
add
sqrtps
fwait
shlb
cmpsl
aas
mov
xor
rcrb
das
pop
and
pushf
inc
sbb
jp
adc
push
pop
sbb
mov
push
and
mov
icebp
das
jb
sbb
sub
rorl
je
xchg
cmp
push
pop
pop
pushf
stos
sbb
sub
push
add
dec
call
dec
sbb
rolb
iret
ja
cs
mov
es
xor
lods
pushf
in
jecxz
xchg
in
inc
mov
lea
mov
stos
std
stc
cmp
clc
or
push
push
movsl
ficoml
inc
icebp
dec
push
insb
xchg
ja
addb
mov
xchg
and
jno
sbb
mov
lods
enter
or
inc
jnp
mov
fisubrs
or
lret
daa
sub
iret
jl
lcall
aaa
rcrb
xor
sbb
xchg
inc
out
in
out
jae
fsubl
pop
pop
push
push
lock
inc
enter
ljmp
std
roll
orb
cs
imulb
adc
data16
rorl
mov
nop
push
js
js
shll
ss
xor
sti
mov
arpl
mov
scas
fwait
lock
and
lea
shr
mov
pop
ds
mov
lds
adc
pop
mov
imul
and
push
mov
mov
dec
icebp
dec
enter
cmpsl
mov
pop
imulb
cmp
pop
push
add
inc
cld
sarb
jp
jae
hlt
popf
ss
rcrb
jmp
sbb
pop
scas
and
xchg
adc
into
nop
fwait
repnz
mov
jnp
lods
sbb
insb
adcb
leave
lret
fdivl
inc
test
enter
into
es
imull
mov
icebp
dec
loop
les
or
push
xchg
js
mov
inc
loop
jae
test
cmpb
dec
sbb
movsb
xchg
jmp
cs
xor
xor
ret
cs
rorl
mov
in
lahf
arpl
jne
cwtl
aam
cwtl
loop
notb
shlb
mov
adc
mov
jge
cmp
int
sahf
imul
cli
ret
push
cmp
shrl
push
std
leave
xchg
cmp
idivl
pop
cmp
jl
push
mov
mov
aam
insl
or
inc
mov
pop
push
or
jp
adc
notb
push
repz
inc
mov
mov
mov
mov
daa
adc
mov
cmp
dec
scas
sbb
rcrb
lods
jne
cld
fmuls
jb
cmp
ljmp
sub
iret
sbb
add
and
jnp
shlb
lock
fistpl
sbb
or
in
sub
adcl
pushf
push
cltd
cmp
adc
or
mov
movsb
rolb
fdivr
sub
xchg
mov
add
sub
roll
movsb
or
not
xlat
adc
lock
aad
dec
or
jge
testl
cmpsl
xor
fdivs
jb
mov
insb
and
ret
xor
inc
adc
pop
adc
stos
lret
xchg
dec
or
cltd
inc
bound
push
dec
fsubrs
int3
fimull
jg
dec
arpl
add
and
jge
push
test
out
mov
inc
in
ja
int3
outsl
sbb
insb
and
pop
jno
icebp
and
jno
xor
loope
adc
xchg
adc
gs
loopne
outsb
jge,pn
jnp
lret
lods
into
je
inc
enter
jmp
stos
bt
or
pop
popl
leave
mov
loopne
mov
adc
sub
pop
jns
pushf
mov
add
cmp
aad
jle
shl
jg
jns
push
jmp
cmpsb
dec
jecxz
sub
adc
add
mov
xchg
mov
pop
rorb
mov
pop
test
or
push
iret
scas
fildll
lods
jnp
or
outsl
in
mov
movsb
mov
repz
stc
adc
lds
arpl
divb
loopne
lods
xchg
hlt
cli
cs
jne
pop
js
add
inc
push
movsb
xlat
dec
mov
lds
inc
xlat
cmc
ret
xchg
cmpsl
sub
mov
stos
in
sub
or
cmp
mov
jb
sbb
dec
adc
mov
cmpsb
daa
push
mov
lds
pop
and
cmpsl
inc
sahf
push
outsl
loop
xor
ds
sub
dec
xchg
add
dec
sbb
push
jmp
or
push
test
mov
mov
fisttpl
adc
cmp
or
cmpsl
adc
sub
mov
gs
xchg
mov
xchg
or
sub
mulps
sarb
inc
mov
sbb
call
inc
pop
loope
daa
push
repz
adc
jp
sub
xorl
mov
adc
add
push
lea
push
adc
fnstcw
dec
jecxz
sbb
mov
mov
ret
dec
xor
and
push
push
stos
xor
pop
hlt
adc
push
and
fsts
popf
cmp
dec
arpl
push
in
inc
adc
test
inc
movsl
pop
int
pop
xlat
pushf
ret
ja
and
hlt
pop
aaa
sub
sub
mov
nop
les
leave
mov
fnstenv
adc
shll
cmp
ss
mov
and
repnz
ljmp
xchg
cmp
into
imul
inc
jmp
xchg
jnp
arpl
ljmp
inc
jl
cmc
inc
in
jg
insb
loope
and
push
inc
sbb
and
and
push
arpl
test
jo
adc
enter
pop
rolb
icebp
dec
loope
loope
cmp
scas
mov
test
inc
cmc
cmpsb
loop
sub
xchg
dec
insb
and
pop
std
ret
jne
xchg
jbe
scas
cwtl
std
lea
mov
jns
stos
scas
shrb
jge
cld
cmpsl
out
cmp
add
inc
imul
sub
fs
xor
cmovp
pop
dec
adc
stos
fadds
sbb
je
mov
jb
lods
inc
dec
pop
pop
add
dec
xchg
xchg
call
xchg
xor
in
call
scas
lret
mov
jmp
jns
movsl
jne
mov
movsb
stos
loopne
loop
jo
pop
dec
pop
loope
ja
jge
add
push
inc
xchg
cmp
clc
pop
adc
dec
into
lds
insl
dec
push
negb
mov
ds
iret
lret
imul
out
adc
in
push
and
or
clc
adc
movb
imul
loopne
add
push
stos
inc
xor
push
push
rcl
movsl
dec
stc
bound
mov
loope
jae
pusha
mov
ret
ror
mov
or
call
sbb
push
ror
icebp
lods
setg
mull
aas
loop
cmp
pop
movsl
sbb
ljmp
push
jg
loope
dec
in
and
hlt
ret
out
addr16
repnz
lret
and
mov
outsb
shrl
sub
inc
out
ds
pop
mov
insb
adc
dec
and
test
pop
outsb
adc
test
mov
pop
in
sbb
adc
ss
mov
hlt
cwtl
ret
sub
ds
mov
xchg
xchg
mov
in
stos
out
ja
add
pushf
testl
ret
inc
inc
add
inc
rclb
movsb
jo
push
clc
mov
xchg
leave
fists
sbb
scas
mov
push
cmp
dec
xchg
test
fcomps
jo
int3
ds
cmpsb
subb
jle
push
repnz
jmp
int3
lock
push
movsb
add
adc
sbbl
int3
aaa
adc
sbb
scas
sub
xor
ljmp
lret
xchg
icebp
add
push
lods
and
shll
sub
test
inc
stos
stos
in
dec
shll
pop
lods
das
sbb
pop
xor
test
adc
pop
sub
scas
aad
mov
push
pushf
dec
xlat
push
int
and
cmp
xlat
and
mov
or
out
jb
push
lret
and
out
pop
inc
fs
movsl
popa
enter
fistpl
cmc
adc
push
insb
mov
pop
or
test
jnp
push
jl
mov
bound
or
addr16
testb
jb
add
stos
xchg
cmp
lcall
or
imul
cmp
lods
mov
sbb
in
dec
and
loop
iret
rcl
dec
sarb
jb
daa
jno
sahf
roll
jns
aaa
scas
pop
pop
jo
jns
loopne
ss
in
cmpsb
bound
call
pop
mov
imul
xor
in
mov
pop
sub
fst
push
in
adc
push
xorl
push
ret
nop
jae
mov
xchg
sbb
mov
movsl
xor
push
cmc
jb
jo
or
dec
addr16
xlat
fisubrs
rorb
arpl
add
mov
aad
mov
pushf
or
pop
stos
sbb
ljmp
ss
mov
ljmp
in
adc
mov
mov
xchg
dec
pop
pusha
xchg
mov
adc
dec
lea
dec
jge
push
cmpsb
mov
sbb
nop
or
push
sub
in
cmpsb
push
out
out
int3
jp
cmp
leave
mov
sahf
outsl
pop
inc
outsl
pusha
adc
imul
mov
outsb
pushf
cwtl
fists
popf
outsb
iret
jecxz
sbb
cmc
dec
cwtl
dec
movhps
jae
push
int3
ret
xchg
pop
or
push
cmp
in
adc
mov
incl
and
or
insb
daa
jmp
or
sbb
mov
jb
dec
leave
data16
es
fisubs
leave
xor
cmpsl
loop
aas
jno
shlb
ret
dec
add
sub
cmpsl
jecxz
sbb
aaa
stos
mov
inc
jl
push
les
ficoml
dec
adc
pop
push
mov
cs
outsb
into
lret
jns
sbb
outsl
cmp
cmp
icebp
sub
mov
jl
std
inc
sbb
ljmp
push
mov
arpl
adc
lcall
and
push
dec
jp
outsl
xor
cmp
int3
orb
push
sub
test
cmpl
mov
cltd
mov
mov
mov
inc
fidivs
out
out
nop
cmp
jle,pn
mov
push
jle
sbb
in
mov
ss
sbb
cmp
pop
imul
mov
or
xchg
fcompl
in
stos
and
int3
and
mov
pop
add
xchg
mov
cld
cltd
bound
and
or
pop
dec
aaa
call
mov
jb
adc
testl
call
leave
sub
cmc
ja
sar
mov
cmpsl
sbb
xor
jecxz
cmp
fwait
ret
xchg
sbb
stos
xor
out
add
pop
outsl
lret
ja
pop
sti
pop
movsl
lea
inc
pop
pop
inc
ds
das
iret
push
out
filds
jb
jecxz
movsl
sar
add
cli
xlat
sarl
roll
jecxz
dec
mov
pop
daa
push
shlb
in
fisttpll
fwait
popa
lret
stos
cmp
cmc
cmp
mov
adc
cmc
jo
jle
scas
fnstcw
xchg
cmp
pop
xchg
xor
insl
repnz
iret
gs
xlat
mov
aad
es
cmc
xor
adc
add
add
cmp
out
dec
fdivs
sbb
mov
dec
jae
xor
cld
add
push
cli
das
and
dec
xorl
outsl
mov
xlat
push
mov
montmul
cmpsb
inc
cmp
jge
inc
cltd
bound
loope
sub
cmpb
inc
inc
cmp
or
les
or
or
rorl
jns
cmpsb
scas
mov
mov
stos
jb
outsl
pop
pop
arpl
or
push
jne
lds
jmp
gs
add
test
cld
lret
mov
inc
js
sarb
dec
dec
push
data16
push
xor
mov
imul
sbb
dec
or
mov
fiaddl
mov
bnd
cli
lea
inc
outsl
cmpsl
pushf
jecxz
insb
push
dec
scas
movsb
and
arpl
lock
loopne
add
pusha
stc
cmp
sub
adc
arpl
int
sub
jmp
aad
daa
imul
test
xchg
sbb
imul
int3
and
or
pop
push
mov
xor
mov
sbb
xor
cmp
int3
loope
notl
test
fldt
aas
idivl
or
jge
jae
sbb
push
aad
popa
pop
xor
js
pop
sbb
mov
mov
shrb
xor
dec
out
or
mov
in
mov
sbb
les
sbb
scas
stc
cmp
mov
dec
jnp
fsubrl
stc
pop
push
jno
xor
xchg
hlt
mov
movsl
ret
pop
mov
dec
inc
out
icebp
jle
fstl
dec
mov
mov
mov
movhlps
xorl
in
daa
test
lock
pop
stos
shr
mov
aas
push
lods
inc
inc
jne
enter
push
jne
aad
mov
mov
cmp
ficomps
daa
pop
pop
dec
dec
ret
mov
addr16
or
push
jns
push
add
pop
jle
inc
xchg
test
in
arpl
adc
pop
fs
js
jl
aas
xlat
xor
sub
or
xchg
dec
mov
add
xor
fs
sub
jae
mov
pusha
adc
mov
xor
push
cmpsl
add
in
xchg
xchg
push
inc
mov
push
lds
xorl
xchg
dec
mov
sub
cmp
frstor
jno
aas
loopne
xchg
fdivs
inc
jp
push
sahf
push
or
xlat
or
call
ret
or
push
jb
add
add
mov
mov
sub
pop
pushf
inc
inc
movsl
je
jecxz
pop
xchg
push
out
and
icebp
sbb
imul
inc
outsl
jg
jp
cmpl
pop
mov
cmp
pop
addl
sub
int
pop
cld
and
mov
push
stos
mov
cmp
imul
aas
jl
rcr
xor
cltd
inc
sbb
enter
gs
test
jl
std
mov
cmp
add
jecxz
adc
mov
mov
incb
cmp
fbld
mov
mov
lods
test
fists
inc
or
inc
int
dec
pop
adc
test
mov
gs
sub
sub
sub
idiv
pop
add
mov
into
cmp
int
pop
push
push
mov
ja
aam
push
aam
jle
cs
mov
leave
inc
mov
enter
lahf
popf
fstps
xchg
xchg
push
cmc
mov
loope
mov
cld
cmp
fists
or
pop
xlat
or
sbb
jnp
mov
jb
mov
lods
inc
and
std
dec
pop
jl
mov
jnp
lods
push
pop
add
inc
leave
sti
mov
inc
hlt
push
aaa
aas
push
add
test
mov
aaa
dec
into
jbe
sub
jge
dec
mov
add
test
pop
clc
movsb
sub
cmp
xchg
or
and
mov
lods
in
addl
sbb
arpl
xor
pop
mov
xchg
in
bnd
rcrb
jbe
inc
mov
push
add
inc
loopne
aaa
or
sub
push
icebp
jl
xor
mov
cmp
das
xchg
dec
push
push
push
push
push
xor
pop
dec
push
sti
es
sti
fwait
out
ret
or
add
pop
les
jle
dec
or
das
push
push
mov
inc
jge
sbb
dec
xchg
insl
jmp
hlt
testb
iret
mov
sub
in
dec
gs
daa
jl
out
add
inc
or
pop
mov
js
or
out
iret
cmp
sub
cmp
and
lods
xor
iret
scas
pop
inc
rcrb
pop
pop
sar
js
mov
jno
dec
mov
sub
pushl
testb
cltd
mov
es
enter
rclb
inc
mov
popa
sbb
add
pusha
std
icebp
pop
movswl
icebp
cmp
sub
mov
add
pushf
sub
and
pop
call
sub
jmp
cmpsl
dec
push
mov
push
cmp
lock
jb
inc
mov
in
add
xchg
xchg
inc
xchg
inc
daa
scas
cwtl
xchg
outsb
adcl
test
push
dec
mov
jae
lods
bound
sti
loope
outsb
or
push
mov
or
xor
pop
xchg
cmpsl
sub
xchg
fs
inc
and
int
ficompl
fsts
sbb
push
push
sub
popa
xor
xchg
fucomp
mov
adc
inc
and
test
test
fistl
xchg
aad
lahf
xlat
and
aaa
shll
jne
lar
push
mov
insl
mov
jae
push
ret
add
sub
pusha
fisttps
cwtl
cli
mov
aam
insb
cmpsb
loopne
rorl
jb
or
xor
push
add
xchg
jecxz
jb
rorl
inc
lods
cltd
cmpsl
stos
cmp
not
dec
int
loope
je
cli
fstpt
add
xor
sbb
xchg
jg
rcl
or
scas
pop
orb
xchg
mov
lods
jle
test
loope
dec
push
out
push
or
int3
loopne
loop
popa
clc
mov
jno
push
sbb
aaa
nop
sbb
or
ret
adc
cmp
mov
xchg
pop
jbe
xchg
insl
and
icebp
lods
add
mov
rcll
lods
mov
ja
lret
push
push
lods
je
movsl
sbb
cmp
and
sbb
inc
lods
push
adc
jmp
mov
xchg
add
mov
clc
js
cli
and
mov
or
aaa
shrb
repz
lahf
loope
jp
ja
push
or
add
add
xlat
cs
push
pusha
or
sub
dec
hlt
pop
pop
fcoms
fmul
aaa
and
out
in
sbb
inc
push
roll
adc
xor
andl
push
test
mov
mov
mov
testb
push
mov
insb
mov
sbb
push
mov
cs
lods
std
cmova
xchg
sub
daa
pextrw
mov
lret
push
push
xchg
shrb
mov
mov
cld
outsb
test
add
dec
add
decl
das
push
in
dec
xchg
sbb
adc
repnz
mov
lods
mov
mov
sbb
fcom
push
push
and
xchg
cltd
fs
pushf
xchg
lcall
dec
arpl
movsb
push
mov
pop
sbb
mov
xor
adcb
repz
lret
inc
xchg
add
mov
leave
test
xlat
pop
pop
jg
mov
pop
adcb
je
fidivs
cmpl
adc
scas
enter
lret
sbb
inc
mov
xchg
cmp
sbb
mov
arpl
fcomps
jno
sbb
movsb
dec
pop
mov
imull
fdiv
stos
loopne
shl
mov
pop
dec
cmc
add
fadd
sbb
push
ljmp
or
loope
and
lds
sub
sbb
xchg
cwtl
je
lahf
rorb
pop
cmp
pusha
lods
int
roll
mov
lods
mov
or
jno
lahf
mov
test
cli
es
mov
out
adc
push
inc
pop
test
fstp
repnz
inc
stos
inc
mov
jae
mov
and
daa
adc
testb
scas
jp
mov
mov
pop
adc
sbb
or
sbb
pop
cmp
mov
stc
mov
cli
cltd
ljmp
pop
sub
jns
imul
dec
sub
stc
mov
cli
cltd
ljmp
pop
sub
jns
imul
dec
sub
stc
mov
cli
cltd
ljmp
pop
sub
jns
imul
dec
sub
stc
mov
and
adc
add
xor
and
in
mov
fs
mov
xor
hlt
jno
mov
add
xor
and
push
rcll
icebp
adc
adc
cmpsb
xor
in
or
ja
rorl
pop
int
or
xchg
jge
inc
int
shll
or
mov
pop
mov
in
movb
xchg
test
xchg
repnz
dec
adc
cs
cmpsl
lcall
popf
lea
mov
and
mov
mov
test
jp
in
pop
les
sbb
mov
jnp
fbld
cmp
out
test
fmulp
pop
mov
hlt
mov
fmul
in
rclb
add
loope
je
jp
dec
into
sub
call
mov
add
insb
sti
pop
lret
jno
ds
push
xor
push
xor
xor
xchg
jo
int3
adc
dec
fisubrs
loope
jne
xor
cld
jmp
pop
cld
push
and
mulb
mov
xchg
adc
sub
xchg
inc
loope
dec
jge
xchg
sbbl
dec
fsubl
adc
jbe
push
filds
push
movsb
and
pusha
sti
push
test
push
shrl
aas
adc
jge
insl
out
jp
test
mov
lea
adcb
push
loope
rcrl
xor
nop
repz
add
push
lock
test
inc
loope
icebp
add
movsb
inc
aam
les
jno
adcl
and
push
roll
icebp
add
movsb
inc
aam
les
jno
adcl
fiaddl
or
out
repz
ret
mov
mov
push
or
cmp
jecxz
mov
fidivrs
aad
out
push
jge
push
sbb
adc
cmp
xchg
jge
fdivrl
dec
sub
popa
loop
cli
add
ss
push
mov
sti
cmpsb
jl
sub
mov
ss
sahf
push
xchg
mov
test
andl
xchg
subl
cwtl
xchg
push
add
data16
lea
mov
jne
in
test
bound
insl
xchg
sti
inc
rolb
add
mov
mov
cwtl
inc
add
insb
data16
jp
cmp
mov
mov
lahf
test
ja
add
fsubrp
out
dec
mov
test
lds
jmp
push
and
mov
mov
cmp
mov
into
loop
repnz
jnp
mov
push
and
push
insl
jp
ret
sub
jae
fstpt
inc
pop
in
out
mov
and
hlt
repz
je
sahf
pop
int
test
adc
stos
repz
aas
dec
jns
pop
mov
int
xlat
dec
fcompl
mov
shr
pop
mov
fsubrs
out
mov
lods
mov
mov
out
dec
push
sarl
sub
mov
repnz
lahf
dec
xchg
lea
call
repnz
call
ret
daa
and
jp
je
stos
mov
leave
xor
les
lock
cmp
adc
xchg
insb
movsl
push
jle
js
jns
jb
inc
fld
mov
jl
icebp
inc
lock
mov
lcall
iret
cwtl
mov
popf
es
mov
mov
push
insb
stc
adc
fmuls
xor
jg
das
rcll
cli
jno
pop
lret
inc
mov
loopne
adc
inc
in
data16
jne
jo
in
aas
fiaddl
pop
cmp
sti
jp
test
hlt
pop
dec
cmp
jno
adc
pop
sbb
jl
sub
lods
fs
cmp
jae
lea
and
inc
daa
pop
into
insl
xchg
mov
shlb
aaa
mov
mov
pushf
mov
inc
mov
movsb
pop
outsl
xor
cmp
pop
out
or
jb
jns
loope
jae
fildll
pop
pop
mov
scas
repz
and
idivb
test
inc
movsl
adc
jb
cmp
jno
in
outsb
leave
aaa
or
xchg
shlb
iret
mov
sbb
cmpsl
add
jl
xorb
popa
ljmp
repz
inc
jg
mov
jge
sub
jmp
pop
xchg
inc
mov
jbe
sub
aas
push
lahf
sarl
fucomip
push
fimuls
stos
fsubs
test
and
pop
mov
mov
fdivs
mov
xor
mov
add
xchg
inc
inc
pop
ds
mov
push
int3
add
outsb
call
adc
or
cmp
add
aam
xchg
int3
addl
outsl
inc
in
stos
sbb
int
daa
sub
je,pn
xor
dec
int
sbb
insb
jp
cld
ret
inc
push
and
xchg
out
stc
ja
aas
pop
pop
repz
jae
pushf
dec
aaa
imul
mov
add
sbb
and
or
mov
fisttpll
mov
xor
orl
fwait
subb
sbb
arpl
js
leave
je
jnp
add
sbb
mov
mov
and
add
dec
xchg
cmp
jae
mov
dec
or
insl
imulb
int
inc
push
or
pop
imul
movsb
adc
imul
mov
jo
daa
jns
daa
aas
fimull
pop
pop
repz
jno
shll
lret
xor
loop
or
xor
fs
or
outsb
fstl
push
sub
cs
push
fdivrl
push
sbb
xchg
iret
mov
xchg
mov
icebp
push
imul
arpl
mov
popa
jg
sub
mov
dec
xchg
mov
inc
fidivrl
sub
iret
jne
jns
dec
jo
sub
sub
mov
xchg
adc
jle
lahf
leave
push
gs
adc
sbb
or
iret
or
jns
lods
jb
sub
mov
and
adc
inc
cmp
test
subl
into
pop
pushf
jp
sub
std
popa
popf
xchg
mov
xchg
dec
das
cld
imul
cli
sub
adc
rcrb
add
ljmp
clc
xor
stos
call
pop
pop
mov
jl
push
pushf
mov
mov
inc
or
fs
mov
cmp
clc
lahf
pop
pop
inc
inc
inc
xchg
int
movsl
test
xchg
mov
cmpsl
ret
hlt
loopne
xchg
ds
jl
dec
xor
arpl
lds
fs
stos
lret
sbb
icebp
sub
leave
push
out
adc
negl
cmp
clc
xchg
mov
add
sub
imul
xchg
xchg
pop
mov
std
mov
mov
in
roll
fidivrl
xor
in
cmp
inc
cmpsl
cmpsb
xor
cmpsl
mov
mov
inc
adc
and
push
push
stc
xchg
add
mov
fldenv
js
mov
mov
pushf
push
daa
insl
pop
hlt
and
mov
mov
xchg
mov
jo
jo
xchg
mov
mov
ret
inc
ss
stos
movsl
jl
addr16
dec
inc
mov
outsb
sar
repnz
shll
sbb
jp
test
inc
and
mov
sub
pushf
pop
mov
mov
cmp
enter
mov
jle
push
pop
lret
cmp
inc
mov
inc
setp
and
xchg
js
int3
push
int3
inc
or
leave
outsl
rcrl
stos
cmp
dec
adc
outsl
ret
push
daa
inc
lock
lahf
or
jo
scas
cmpsb
pop
scas
out
into
lret
movsb
xor
and
vorps
jg
inc
jae
mov
outsl
inc
ret
negl
test
mov
jle
add
jnp
iret
icebp
dec
pop
pop
stc
pop
aas
or
mov
and
mov
mov
dec
dec
in
dec
sbb
jg
push
lcall
mov
mov
enter
sub
popf
test
sbb
or
ret
or
push
inc
xchg
inc
pop
inc
xor
mov
mov
dec
das
lods
jp
push
jno
dec
inc
dec
jle
cmp
popf
cli
sub
mov
out
daa
mov
xchg
insl
je
adc
cmp
adc
repz
test
push
or
push
sarl
mull
cmp
mov
mov
mov
stos
rorb
push
adcl
xor
push
push
push
xchg
cmpsl
imul
pop
orl
and
lss
mov
fidivrs
sbb
scas
divb
push
loopne
mov
pop
push
add
popf
movsl
sbb
arpl
push
dec
loop
jae
mov
scas
test
sbb
and
into
rolb
adc
push
pop
pop
and
mov
in
adc
push
dec
clc
sub
daa
stc
fidivrl
mov
dec
adc
add
jmp
dec
adc
lret
arpl
adc
mov
xor
sbb
sub
test
pop
mov
mov
mov
das
pop
push
inc
cmpsl
int
adc
jecxz
jae
movsb
aas
sub
shrb
push
stos
scas
mov
jnp
adc
or
xor
sub
andl
sub
xchg
push
in
mov
popl
js
or
pop
and
lods
and
popf
in
push
mov
jne
popa
cmpsl
out
movsb
inc
pushf
std
lods
aas
adc
xorb
mov
aad
jge
mov
mov
cltd
nop
xchg
clc
sbb
push
subb
push
pop
das
push
cmpl
fnsave
sbb
push
clc
xor
repz
testl
pop
popf
adcl
pop
pop
sbb
dec
mov
sub
add
repz
cmp
loop
mov
push
les
add
int
bound
cmc
pop
push
iret
xor
fldenv
jp
push
dec
mov
sub
cltd
fstl
loopne
jl
inc
adc
jl
add
sbb
sbb
dec
jecxz
and
xorb
dec
inc
idiv
mov
sub
add
inc
into
cmpsl
dec
add
sub
push
inc
test
and
addr16
in
sub
adcb
jne
hlt
ljmp
or
mov
dec
pop
nop
jae
xchg
hlt
xor
and
clc
sub
and
fwait
or
aas
call
es
add
and
int
sub
hlt
js
in
pop
test
and
popf
out
dec
cli
jns
orb
inc
aaa
ds
jbe
aaa
notb
sub
loope
pushf
lods
aam
and
xor
int3
adc
jae
adc
sti
adc
dec
jmp
out
pop
jl
ja
popf
icebp
js
mov
imul
or
mov
xchg
fldt
jecxz
popf
loope
loopne
test
mov
mov
movsb
inc
fistps
pop
inc
insb
scas
dec
sbb
out
das
adc
pusha
pop
stos
orb
and
push
dec
mov
test
sahf
or
dec
hlt
in
sbb
mov
jo
sbb
out
jecxz
mov
mov
adc
cmp
cli
test
rorb
push
sub
mov
lret
lcall
in
cmp
rol
enter
add
mov
arpl
jbe
sbb
je
bound
repz
jns
push
bound
and
push
mov
jmp
lods
clc
ljmp
iret
xchg
cs
push
out
push
xchg
jno
lods
fistl
or
test
imul
xchg
sub
pop
jge
out
mov
inc
fcoms
mov
add
xor
in
mov
push
in
int3
bound
and
cmc
jge
xchg
int3
test
lds
aaa
mov
mov
sbb
inc
mov
lock
fcomps
lcall
jno
and
xchg
stc
movl
xor
add
pop
cmp
xor
lret
mov
dec
and
cwtl
push
mov
push
jp
dec
popa
popf
in
test
sbb
add
and
mov
jae
pop
jae
shll
sbb
fildll
int3
gs
or
push
mov
or
cmp
mov
cmp
ret
push
xchg
mov
jne
dec
fucom
push
dec
mov
cmpb
jmp
fcmovne
lahf
int3
add
push
int
jo
cwtl
shrb
dec
aam
pushf
pop
dec
inc
test
loope
mov
cmp
jmp
pushf
pop
xor
sub
out
andb
and
leave
push
jns
imul
cmpsl
out
lods
mov
or
shlb
fdivp
enter
hlt
xchg
movsl
sahf
dec
pop
es
inc
jecxz
pop
aas
leave
in
cld
inc
test
jnp
cli
ja
mov
into
add
add
xor
arpl
mov
fidivrs
je
mov
outsb
and
mov
bound
and
xchg
xor
mov
pop
pop
addl
and
lock
fst
xchg
test
mov
enter
xlat
jbe
mov
mov
mov
mov
jle
xchg
or
popa
mov
sti
or
mov
mov
inc
lcall
xchg
ret
mov
pop
pop
fadds
fsubl
notb
mov
sub
add
sub
ret
mov
xor
orb
adc
or
cmp
xchg
jecxz
mov
pop
and
jns
pop
or
loop
fimuls
call
push
std
cli
stos
les
aad
lcall
roll
jg
in
fisttpll
lock
pusha
inc
test
adc
leave
dec
icebp
jae
jge
lds
mov
pushf
scas
xor
sbb
or
add
out
pop
cltd
rol
test
rcll
mov
jae
dec
scas
cmp
fs
xchg
loopne
mov
jmp
fmull
ja
pop
pop
sbb
jg
sbb
jo
loop
ds
rcll
mov
xor
lea
and
cmpsb
inc
jge
out
mov
scas
gs
shlb
mov
loope
nop
xor
fisttpl
dec
test
fbld
push
xchg
xor
push
hlt
js
loopne
nop
js
out
out
sub
clc
cmp
mov
sarl
jno
inc
push
ret
push
sarl
jmp
adc
pop
int
fdivrl
adc
pop
sub
sub
movsb
xchg
pop
loopne
dec
and
rol
es
rcll
hlt
in
push
scas
dec
xor
stos
mov
sbbl
mov
push
iret
adc
adc
popf
in
fists
loopne
adc
push
cmp
sbb
cmp
mov
fld
jno
lods
mov
rcrl
cmc
lret
sbb
jo
les
cmp
dec
std
pop
mov
jl
and
jnp
cmc
mov
repz
movl
or
sbb
iret
inc
inc
dec
inc
jmp
test
push
popa
inc
cmpsb
xchg
es
aam
lods
std
jnp
cmc
fwait
and
leave
in
ret
sbb
mov
cmpsb
shll
fdivrs
enter
scas
aam
out
cmp
dec
lds
leave
mov
mov
xchg
scas
test
nop
icebp
sarb
mov
adc
lods
push
scas
mov
mov
jbe
mov
jns
sbb
clc
mov
in
ja
test
or
movsl
jns
sub
insb
or
mov
mov
or
sub
out
add
sarl
daa
nop
sub
ljmp
sbb
add
sbb
int
faddl
dec
lret
pop
push
jb
clc
push
in
enter
push
clc
push
sqrtps
popf
inc
ja
jo
sbb
imul
lods
pop
hlt
push
js
pushf
sub
adc
rorl
inc
fwait
cwtl
bound
mov
pop
jmp
dec
sub
pusha
mov
ljmp
fs
std
and
push
xor
push
push
inc
add
inc
jo
movsb
call
mov
lods
mov
out
add
outsb
lret
int
cmpsl
fsubrs
mull
pop
add
dec
push
adc
cltd
out
inc
pop
movsb
push
sub
ja
mov
cmp
lahf
add
bound
or
loope,pt
cs
setle
mov
imul
push
or
test
push
aad
enter
inc
fimull
mov
ret
inc
lea
jl,pn
int
lcall
jge
stc
mov
sub
xchg
sbb
add
inc
pop
cltd
es
and
scas
jecxz
testb
xor
mov
add
loop
pop
aam
sub
sbb
mov
mov
out
add
push
frstor
jecxz
je
out
xchg
pop
jb
out
addr16
sub
cmp
and
movsb
push
push
orl
xorl
lods
mov
jmp
aaa
mov
sbb
pop
iret
das
out
cmp
dec
hlt
out
movl
mov
mov
mov
adc
shlb
data16
sti
lods
adc
jo
popa
jae
hlt
cli
push
or
popf
push
cld
adc
movzwl
and
divb
sub
dec
and
pop
push
xlat
fsubs
fsub
cmp
jb
in
frstor
stos
dec
int3
in
mov
push
sbb
push
inc
pop
xchg
fs
out
pop
fistpll
jmp
pop
movsw
fwait
pop
mov
pop
fsubr
inc
fadd
js
dec
mov
sub
and
insl
xchg
or
jmp
out
xor
cs
pop
mov
sti
out
cld
aas
pop
test
loop
mov
jmp
movb
pop
dec
stos
sbb
pushf
mov
addr16
incl
pop
and
scas
push
and
rol
mov
cmp
scas
ja
ret
sub
sbb
push
jne
stc
lret
sbb
sub
test
dec
arpl
xchg
inc
sub
jge
jbe
lret
or
cmp
jnp
mov
scas
mov
xchg
push
ret
nop
push
fildll
xchg
sbb
scas
fiadds
lods
jge
fbstp
rorb
mov
out
mov
lods
cld
dec
jno
push
dec
mov
push
mov
ss
out
mov
aas
dec
inc
jecxz
or
test
insl
ret
add
ds
les
aad
out
xchg
ret
ror
xor
and
mov
xchg
and
dec
or
shrb
loope
cmp
or
int
hlt
fstl
push
fdivl
cmp
lahf
lock
add
mov
dec
mov
insb
test
lret
test
sbb
out
lock
mov
xor
mov
leave
mov
adc
scas
mov
ss
inc
adc
dec
mov
testl
cmpb
fisttps
inc
pusha
pop
dec
add
fwait
push
cmc
out
xor
or
fwait
xor
loope
mov
inc
movsl
adc
sbb
lea
lret
sahf
jp
int
adc
or
adc
pop
sbb
testl
adc
stc
and
cli
rorb
pop
repz
dec
mov
dec
add
clc
xor
fs
xor
es
xchg
inc
lahf
cmp
jb
stos
pop
jmp
bound
sbb
clc
pop
lds
sub
rolb
jae
adc
std
xorb
ja
arpl
sub
cmp
mov
roll
in
into
pop
inc
xchg
lea
pop
adc
bound
adc
ljmp
jno
aad
int3
add
xchg
xchg
jmp
in
jle
je
push
adc
mulb
mulb
ss
add
jnp
mulb
cmpsl
push
add
jl
ja
jo
xchg
sbb
ljmp
repnz
jmp
jbe
outsb
pop
xchg
add
xlat
addr16
or
fmull
cmp
inc
adc
popf
push
adc
mov
push
iret
out
or
incb
pop
sbb
add
adc
out
mov
shrl
imul
fs
loope
sahf
aaa
add
adc
jl
mov
test
push
lahf
int
xor
add
xor
dec
ja
frstor
pcmpgtw
sub
sub
loope
in
lea
addr16
std
or
mov
div
push
dec
sahf
mov
out
ficompl
xlat
mov
movb
jo
divb
xor
jl
pop
add
lcall
ret
xchg
aaa
cmpsl
inc
aad
stos
add
jl
inc
enter
push
adc
shlb
out
lret
pop
popa
mov
les
jle
add
jg
jl
nop
test
sub
fistps
imul
ror
xchg
fst
mov
dec
fdivrs
lods
movsb
mov
loope
sub
push
xor
sarb
add
push
ss
ds
jmp
bts
subb
xor
and
mov
and
mov
in
data16
adc
rorl
mov
test
mov
and
lea
ljmp
les
dec
loope
hlt
sbb
push
fidivrl
pusha
mov
ffreep
pusha
idivl
aaa
or
sbb
jg
mov
sub
add
lret
dec
mov
inc
jecxz
mov
neg
sbb
mov
scas
or
or
sbb
push
aam
push
loope
sbbb
shll
or
sub
adc
ss
jbe
popf
push
cmc
pushf
mov
lret
mov
cmc
mov
jns
pop
dec
sbb
push
lcall
xchg
aas
push
or
ja
sub
daa
push
pop
mov
cmp
pop
lods
mov
adc
push
jo
mov
xchg
mull
int
rcll
movsl
add
pushl
lock
out
outsb
out
cli
scas
xor
into
push
divb
push
cmpsl
push
dec
ret
jle
sbb
push
push
lods
fidivrs
shrl
or
sbb
dec
xchg
mov
sbb
outsb
sar
in
mov
adc
jno
mov
push
mov
testl
push
inc
push
adc
jle
pop
jle
cmp
insl
or
ss
jmp
cld
ss
sbb
fs
mov
mov
jae
btc
push
roll
aas
test
out
insw
mov
mov
rcl
xorb
mov
sbb
mov
ds
add
jle
push
jg
mov
mov
sub
test
fidivrs
sub
vandpd
push
dec
xchg
rcrl
mov
movsl
jns
sbb
xorb
loope
icebp
add
movsb
inc
aam
les
jno
adcl
and
push
roll
icebp
add
movsb
inc
aam
les
jno
adcl
and
push
aad
loope
lock
mov
mov
gs
loopne
adc
and
push
roll
movsb
add
shll
pop
fnstcw
push
mov
pop
jbe
lcallw
ret
inc
imul
aad
fcomip
out
out
xchg
popl
mov
jbe
data16
clts
xchg
ss
es
iret
push
out
out
xchg
loopne
lahf
mov
cmpsb
mov
jbe
data16
xor
and
shll
adc
mov
xchg
fdiv
div
fcmovne
mov
jbe
cvtpi2ps
cmp
fnsave
lods
out
int3
in
gs
sub
or
loope
les
ret
push
push
push
jecxz
outsl
into
jge
ljmp
rorl
xor
jne
push
inc
pop
aam
cld
mov
push
bound
xchg
scas
or
scas
push
popa
dec
mov
popa
jle
stc
ja
aam
shlb
dec
pop
ficompl
add
mov
in
add
cmp
cli
jmp
daa
lods
aas
xlat
pushf
into
iret
jnp
insl
inc
faddl
sahf
dec
mov
mov
inc
cmp
outsl
ss
xchg
iret
xorl
mov
pusha
jno
movsb
cmp
jmp
jne
clts
pop
ss
es
idiv
out
xchg
mov
cmpsb
shll
sbb
and
jnp
jo
inc
mov
lcall
jmp
out
fisubs
or
push
adc
pusha
dec
sub
inc
arpl
stos
mov
cwtl
popa
rcr
into
int3
aam
sbb
xor
add
imul
ss
es
iret
fcomip
out
out
xchg
popl
mov
jbe
data16
clts
pop
ss
es
iret
fcomip
out
out
xchg
popl
mov
jmp
sbb
xchg
hlt
cmp
jno
je
unpckhps
mov
cmp
cmp
mov
push
outsb
fcomps
iret
jg
sti
jno
pop
notl
arpl
rcr
inc
movsb
mov
mov
xchg
or
adc
popa
out
push
stc
sbb
inc
sbb
jb
lods
out
fmull
xchg
movsb
jae
push
xor
jb
std
jnp
cmc
sbb
rcll
xchg
cmpsb
in
stc
pop
inc
cmc
ds
stos
mov
int3
dec
cmpsl
inc
sub
and
pop
aam
dec
xchg
popa
je
sub
inc
xchg
pop
shrb
out
dec
push
push
insb
jg
in
out
dec
aad
sbb
jae
xchg
add
lock
cmp
dec
cmp
adc
movsb
sbb
cmp
mov
jmp
enter
test
incl
pushf
mov
fstp
popf
dec
mov
jmp
lcall
adc
sbb
mov
inc
sbb
icebp
shr
mov
xchg
inc
stos
jns
sti
cltd
enter
das
inc
mov
push
mov
push
pop
lods
shlb
clc
popa
adcl
pop
mov
mov
cld
jge
ret
mov
ret
and
aam
mov
mov
test
fiadds
mov
sub
sbb
test
pushf
jno
mov
xchg
jnp
and
popf
loope
or
imul
dec
daa
not
push
test
pop
mov
aaa
cli
cs
cmpsb
sbb
nop
xchg
lcall
and
int3
push
add
adc
add
arpl
xor
cs
jmp
fnsave
lahf
push
xor
push
loopne
stos
out
in
das
js
and
adc
shlb
out
dec
out
sahf
jne
call
add
rcr
mov
out
fldl
cld
xchg
data16
xchg
sbb
lock
xor
and
xor
fimull
sub
cltd
stos
scas
mov
aad
pushf
xchg
and
js
adcb
adc
jg
rclb
cltd
test
jp
mov
sbb
mov
dec
mov
and
sahf
adc
ja
jecxz
int
pop
cwtl
pop
sbb
push
aam
mov
cltd
jnp
inc
int3
orb
add
mov
outsl
jl
jecxz
fsts
mov
jg
pop
mov
and
cmpsb
aaa
or
push
out
inc
ljmp
jl
daa
std
mov
test
ja
popl
stos
xor
dec
mov
pop
fadd
mov
movsb
testb
imul
movsl
test
arpl
dec
or
out
daa
jne
push
xchg
nop
or
push
call
lods
jae
inc
cmp
imul
xchg
pop
aam
or
xchg
imul
ds
outsb
test
test
ljmp
mov
mov
cli
sbb
mov
arpl
sbb
sub
mov
xchg
cld
aam
xchg
data16
cwtl
adc
jg
and
push
lcall
ffreep
cmp
adc
sbb
pop
std
dec
sub
inc
enter
mov
and
xchg
ljmp
test
test
lods
and
jmp
mov
add
pop
shl
jne
ret
pusha
xchg
sub
xchg
inc
adc
jns
addr16
fwait
cld
jns
or
and
adc
dec
jecxz
push
xchg
enter
and
mov
push
push
loope
aad
aaa
std
xchg
das
hlt
leave
ss
mov
xchg
addl
imul
mov
jecxz
daa
xchg
popl
mov
enter
xchg
outsl
adc
daa
mov
mov
das
icebp
loop
in
insl
rorl
xlat
pusha
call
pop
ftst
test
and
mov
cs
movsl
mov
jae
rclb
add
mov
dec
xor
test
cmpsb
mov
dec
cmp
push
sbb
jne
inc
mov
and
js
or
push
pop
xor
lahf
sub
or
movb
sbb
cmp
mov
mov
jne
sub
inc
mov
lret
pop
shl
add
push
push
sbb
mov
xlat
jmp
test
test
or
sbb
and
dec
stos
xor
pop
mov
add
aad
dec
lret
pop
inc
les
rcrb
sub
cmp
notb
push
jo
or
ss
lea
out
out
sti
sbb
sub
in
jp
sar
inc
adc
loope
pop
mov
mov
stc
out
inc
movsb
shl
cmp
xchg
and
jg
lahf
jne
xchg
cmp
shlb
mov
cltd
jmp
je
mov
sarb
fsubs
ret
loope
mov
mov
jp
sub
mov
jns
fiadds
fistps
aam
call
pop
adc
inc
jnp
mulb
fstpl
push
insb
insb
lcall
les
and
jl
inc
xchg
cmpsb
test
jecxz
rcll
ret
push
sub
imul
push
jnp
xchg
ja
fsubrl
lock
adc
push
pop
faddl
mov
mov
and
and
jo
dec
mov
push
mov
in
imul
inc
ss
test
mov
pusha
dec
or
xchg
clc
push
stc
pop
loopne
inc
pop
cmp
outsb
iret
mov
mov
outsb
mov
rol
mov
or
dec
pop
pop
xchg
inc
adc
data16
outsb
xlat
sbb
jle
jl
mulb
je
psubsw
pop
sbb
cmpsb
push
and
bound
cmpsb
outsb
in
clc
dec
xlat
test
je
leave
adc
dec
aaa
fwait
loope,pt
mov
aaa
sti
leave
add
jb
fistl
mov
scas
cmpsb
add
rorb
mov
sbb
std
xor
ret
aam
pop
cld
aas
add
pop
sub
loopne
pushl
sub
sbb
sub
scas
jg
add
jne
sbb
mov
inc
pop
add
cmp
lcall
in
adcl
je
push
inc
aas
xchg
mov
or
sti
inc
cmp
movsl
cmp
es
call
fprem
subl
pop
clc
loopne
mov
mov
test
popa
pushf
arpl
sub
adc
cmp
jns
and
mov
pop
dec
pop
inc
iret
push
xlat
aad
sbb
aad
stc
mov
add
add
and
cwtl
lds
lock
pusha
pushf
shll
jno
or
mov
int
jns
add
repnz
ficompl
adc
clc
aas
outsl
or
add
lods
adc
daa
mov
ret
inc
addr16
out
add
jge
dec
and
enter
test
inc
xor
sbb
push
jge
test
sbb
lods
pop
mov
jmp
cmp
add
test
popa
mov
jecxz
push
xchg
clc
mov
ljmp
mov
xchg
pop
sbb
das
cmovo
ja
jno
xchg
push
dec
cmp
add
mov
inc
dec
out
stos
enter
fs
sar
insb
test
aaa
stc
in
mov
outsb
and
sbb
adc
call
push
adc
dec
jg
inc
mov
cmp
jnp
hlt
imul
or
je
cmp
sbb
push
cmp
sbb
je
scas
adc
ljmp
push
push
mov
inc
mov
dec
ficoml
or
inc
adc
jns
aas
outsl
in
popa
dec
sub
shll
jnp
je
jge
push
js,pt
or
inc
add
and
mov
xchg
adc
mov
and
lods
push
xor
push
mov
sbb
cmp
or
sub
push
cmp
imul
and
int
xchg
adc
pop
stos
mov
sub
loop
mov
cmc
or
ret
repz
and
mov
ret
idivb
push
repz
leave
dec
sbb
int
add
sbb
cmp
hlt
pop
ffree
mov
dec
inc
adc
mov
add
push
xlat
fs
mov
aad
aaa
test
add
daa
std
or
call
idiv
push
jbe
cld
or
cmp
sbb
xor
ja
jecxz
adc
lds
mov
cmp
daa
lahf
gs
andb
loope
jmp
xchg
loopne
push
mov
cmp
mov
iret
push
gs
push
inc
mov
mov
jbe
scas
jl
cmpsl
ret
dec
sub
outsb
jnp
pop
cmp
dec
fsts
mov
rcrl
lods
pop
notl
movsl
or
es
icebp
add
out
jns
in
adc
cmp
leave
push
mov
ljmp
inc
rcrl
std
pop
stos
lahf
cld
aam
adc
dec
loope
pusha
pop
es
test
or
imul
shlb
data16
push
repnz
andl
ror
pop
xchg
inc
pushf
enter
cmp
dec
sbb
lea
jmp
and
adcl
inc
leave
popa
sbb
lods
movsl
inc
mov
mov
es
aas
rcpps
clc
stos
jl
clc
sub
call
nopl
cmc
adc
fdivl
loop
mov
cmp
loopne
sbb
xchg
scas
leave
out
sbb
call
iret
sbb
test
pop
outsb
mov
fxtract
xor
sbb
insl
mov
push
lcall
in
leave
fs
add
cmpsb
enter
jl
loope
je
lds
mov
cmp
dec
fs
pop
shrl
fcompl
push
dec
aam
ret
cmpsb
mov
xchg
inc
mov
fisttps
mov
and
aad
mov
sub
cmp
sti
outsl
shl
pop
or
jmp
jmp
insb
pop
in
jge
cmp
stos
or
sahf
cmc
sbb
fdiv
sti
frstor
sub
lcall
icebp
lcall
sahf
pop
jne
imul
lods
xchg
out
rorb
cmpsl
addr16
add
sbb
cs
shrd
cmp
sbb
jmp
mov
jecxz
inc
sbb
jno
out
lret
jecxz
test
outsb
nop
mov
jecxz
push
fisttpl
xchg
sar
mov
or
inc
inc
mov
or
adc
insl
ljmp
push
js
mov
xor
inc
adc
xchg
mov
push
push
sbb
adc
leave
cmpsl
adc
pop
cmp
in
pavgw
sbb
and
stos
lret
incl
add
bound
sbb
leave
jge
dec
sahf
imul
cmp
xor
hlt
cs
mov
mov
inc
push
fprem1
mov
outsb
add
jmp
popa
in
push
cld
push
inc
push
scas
in
inc
sub
mov
xor
subl
stos
xor
mov
mov
pop
lea
movsb
int3
mull
hlt
inc
mov
shr
pushw
push
lods
in
pop
pop
test
stc
je
adc
sub
les
push
dec
stos
jbe
imul
jecxz
out
xlat
push
pop
ljmp
iret
sbb
fnstcw
fdivrl
xor
fs
insl
mull
fadds
mov
lcall
stos
push
and
inc
jge
mov
sbb
fwait
cmp
pushf
scas
out
aam
ljmp
mov
mov
ljmp
mov
add
push
rcl
icebp
sub
and
stos
jo
sbb
pusha
hlt
and
xchg
and
bnd
into
sbb
or
pop
dec
jmp
lret
daa
clc
and
lahf
rcr
adc
movb
and
mov
adc
mov
sbb
and
cli
clc
inc
je
mov
js
sahf
les
ds
jmp
pop
mov
push
sar
lods
jg
xchg
aad
out
mov
lcall
and
dec
sub
pop
gs
filds
insl
inc
cmpsl
cmp
adcl
cs
rcrb
jmp
into
mov
or
cmp
adc
push
inc
mov
scas
fnstsw
shl
fsubs
fistl
icebp
xchg
fstpt
out
icebp
inc
push
fs
call
add
adc
aas
fbstp
adc
sub
out
mov
xor
cs
xor
pop
aad
sub
dec
sub
aaa
shrb
loop
mov
fstps
popf
mov
sub
jecxz
xchg
cmc
mov
jl
xchg
sub
imul
cli
cmp
icebp
mov
or
mov
sub
mov
into
call
lods
mov
aaa
cmc
dec
fidivrl
mov
rcl
pop
lret
loopne
sbb
pop
addl
leave
sbb
inc
iret
int
add
mov
or
stc
jo
test
dec
gs
sub
jg
mov
out
jmp
lods
xlat
cmp
stos
clc
mov
adc
sbb
in
das
sub
js
xchg
mov
cmpsl
enter
cmp
inc
inc
std
fwait
loopne
sbb
movsl
cmpsl
lock
fidivrs
out
decb
jl
iret
cmpsl
rcll
out
cmp
mov
pop
mov
mov
dec
cs
lea
add
or
int
mov
inc
xchg
cmpsb
jmp
inc
in
int3
pop
add
in
push
lods
xlat
mov
ds
scas
test
cmp
xchg
push
lret
jl
push
adc
ret
or
mov
or
jbe
push
push
lea
iret
aas
js
mov
into
es
in
pop
mov
adcl
es
aaa
push
pop
lock
mov
mov
inc
or
das
int
ds
push
lds
inc
sbbl
nop
mov
push
aam
dec
jbe
js
lock
sbb
xor
sahf
jecxz
imul
sub
cld
out
adc
outsb
push
cmp
out
popf
outsl
jmp
push
out
inc
sbb
out
repz
xor
lcall
push
xchg
push
adc
dec
int
imul
push
lahf
xor
push
xor
ljmp
sbb
sub
aad
pop
jle
jl
cmc
int3
test
sbb
mov
pop
nop
xchg
cld
inc
imul
mov
gs
push
mov
mov
lea
pop
pop
loope
xchg
out
jp
je
add
push
mov
int3
xchg
fwait
jge
mov
push
lods
scas
cmpsl
mov
mov
jnp
mov
mov
mov
mov
add
push
cmp
add
push
inc
jg
push
aad
cld
loop
lods
inc
cmp
sbb
lds
or
das
dec
pop
ror
lret
adc
js
adcl
and
lss
fsubrl
scas
inc
insl
popf
rcll
push
or
sbb
ret
and
push
in
fstps
mov
addb
add
scas
repnz
and
leave
inc
mov
icebp
mov
jns
xchg
xorb
into
cmp
sbb
cli
repz
rcl
push
cmpsb
xchg
loope
rcrl
adc
or
movsb
xor
out
leave
push
pop
cmpps
rcrl
cmp
inc
adc
xchg
mov
xor
and
lods
clc
xchg
push
lods
mov
inc
adc
gs
ljmp
inc
in
mov
mov
popa
lea
sbb
and
xorb
rcrl
int
lods
out
mov
lcall
mov
ret
push
stos
frstor
ljmp
ja
mov
inc
mov
xchg
test
clc
push
outsb
cmp
pop
les
stos
fadd
pop
sub
cmp
mov
rol
inc
mov
jno
decb
icebp
loope
repnz
inc
leave
xlat
int
xchg
out
lret
xchg
pop
test
sub
pop
stos
mov
cld
inc
addr16
push
std
sbb
sarl
inc
mov
add
loop
cmp
dec
cmpsb
lret
iret
add
sbb
cs
inc
jns
and
or
jns
xchg
call
scas
mov
loope
xor
mov
test
pop
movsl
stc
sub
fistpl
movsb
icebp
out
mov
bound
inc
xor
xor
or
aad
aaa
insb
pushf
pop
je
out
push
imul
mov
inc
pusha
je
imul
lods
pop
mov
fwait
pop
jns
mov
hlt
lahf
xor
std
and
pop
fstps
jns
sbb
jnp
loop
xchg
aaa
cli
mov
sbb
stos
enter
add
lcall
mov
adc
lahf
jg
out
xor
mov
aas
das
pop
das
dec
cltd
leave
mov
dec
lahf
outsl
sahf
push
push
jg
push
cwtl
or
dec
mov
pop
sbb
fimuls
jb
jecxz
adc
dec
dec
int
jbe
call
xor
ss
pop
mov
sbb
aad
jbe
xchg
repnz
cmpl
jne
xorl
gs
adc
and
cmc
mov
or
mov
push
cmpsb
movsb
lcall
aam
lret
mov
int3
xchg
sub
mov
push
push
les
xor
out
lret
cmp
ret
popf
fbld
cmpl
mov
clc
cmp
test
cmp
arpl
mov
xor
jl
pop
fdivrl
mov
mov
xorl
aaa
mov
cmpsl
cvtps2pd
mov
cmpsl
in
xchg
addr16
rcl
dec
sarl
repz
pop
lcall
and
mov
push
insl
popl
or
push
lcall
mov
pop
fcomip
roll
jae
jns
push
mov
sub
mov
subb
sbb
in
mov
sbb
and
mov
and
push
divb
mov
dec
js
lcall
mov
jns
cmp
pop
test
loop
push
jb
or
popf
lahf
mov
movsl
or
and
cmp
fistpl
mov
mov
pop
push
pushf
mov
pop
in
cmp
ja
or
call
cmp
fnstcw
div
adc
push
pop
ret
fistps
pusha
jge
xlat
jae
add
hlt
int3
gs
imul
pop
outsl
icebp
ss
out
jp
mov
bound
xor
pop
pop
lods
sub
pop
xchg
xchg
nop
outsb
sub
cltd
in
mov
je
into
jg
sub
test
mov
cwtl
push
dec
adc
adc
mov
test
sbb
pop
btc
jmp
mov
and
xor
arpl
mov
and
popa
jle
out
dec
mov
and
mov
or
sbb
mov
test
push
dec
in
sub
mov
adc
lds
mov
push
out
mov
fwait
int
subb
mov
inc
and
sbb
adc
call
jne
mov
jbe
inc
repz
inc
inc
loop
lahf
xchg
out
clc
and
pop
lods
repnz
adc
in
setge
push
inc
xor
mov
jge
call
xchg
daa
cmp
jge
jg
jle
xchg
jp
lret
jge
add
jl
js
pop
fstpt
aam
push
push
rorb
push
mov
shlb
lods
out
pop
daa
ret
xor
sub
cmp
out
int
daa
sbb
imul
mov
idivb
jmp
clc
loopne
scas
in
jo
cltd
sub
jl
iret
sbb
pop
aad
mov
aaa
sti
fwait
aam
out
sbb
cmp
and
int
adc
pop
jns
aad
adc
xchg
mov
and
mov
outsb
loope
ss
cmp
adc
fisttps
mov
jecxz
mov
test
inc
and
test
adc
movsl
dec
jns
aaa
cmp
dec
mov
lods
rcrl
test
and
adc
push
and
push
dec
lcall
lods
aad
cwtl
scas
outsl
mov
jl
cmc
fwait
rorl
lret
add
dec
adc
cmpsb
iret
xor
and
add
push
jl
mov
ret
insb
xchg
dec
je
addps
sub
inc
pop
xor
mov
lret
cmp
lret
cmp
mov
pusha
lds
and
popa
dec
cmp
das
lret
mov
jbe
mov
call
fwait
xorb
add
sahf
pop
setb
push
push
jne
jne
mov
xor
cs
subl
js
add
pop
scas
das
mov
popf
mov
dec
cmpsl
add
bound
in
orl
mov
out
sbb
repnz
xchg
iret
sub
push
push
popa
les
pop
add
popa
dec
ret
cmpsl
mov
gs
pop
dec
add
push
clts
pop
ss
es
iret
fcomip
out
out
xchg
popl
mov
jbe
data16
clts
pop
ss
es
iret
fcomip
out
out
xchg
popl
mov
jbe
data16
sysret
mov
das
es
xlat
pop
fcomip
out
out
xchg
popl
mov
jbe
data16
clts
pop
mov
cmpsb
aas
sub
cmp
out
out
loope
push
pusha
dec
push
pop
inc
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
rcll
xchg
divl
out
mov
out
xchg
sbb
dec
mov
adc
daa
adc
divl
out
xchg
push
xchg
jb
mov
inc
jg
addr16
pop
loop
repnz
sbb
add
insl
sub
jp
gs
adcb
into
push
adc
xchg
inc
fwait
inc
jb
adc
dec
cwtl
scas
jle
xor
data16
push
imul
or
enter
aam
add
andl
test
mov
mov
jle
test
mov
adc
or
push
jle
inc
push
adcb
bnd
cltd
cmp
jecxz
loopne
xlat
add
ret
out
addl
ja
sub
mov
inc
add
pop
loop
in
cmp
inc
sbb
movsb
xchg
xchg
bound
je
adc
jge
adc
or
insl
cmpb
add
cmpsb
jge
insl
pop
pop
mov
ret
fcomi
dec
ret
out
andl
bound
mov
mov
sub
jmp
jno
ja
inc
fwait
push
mov
xor
ljmp
xchg
aaa
rcl
faddl
push
mov
xchg
dec
add
xor
push
fidivs
xchg
xorb
xor
and
mov
push
imul
cmp
push
xchg
jb
adcb
mov
pop
rolb
loop
repnz
add
adc
and
xor
inc
xchg
push
xchg
jb
adcb
mov
pop
rolb
loop
repnz
add
rcll
insl
lock
fstpl
sub
pop
out
repz
bound
xor
imul
notl
jno
adc
sbb
push
sub
ret
push
ja
add
or
clc
mov
adc
xchg
mov
not
scas
adc
lret
loop
add
sti
jbe
lcall
push
and
jmp
lcall
mov
jp
xchg
call
popa
add
jns
xor
push
dec
push
mov
bound
test
cmpsb
dec
movlps
dec
out
mov
ffreep
cmpsl
xlat
mov
dec
sbb
nop
mov
and
and
aaa
daa
rorl
jle
cltd
fldt
cmp
push
fcmove
fidivl
cmp
add
test
push
mov
jle
subl
scas
hlt
mov
sbb
out
or
inc
into
sbb
jecxz
fwait
gs
cmp
out
cmp
jl
push
lods
subb
mov
mov
xchg
addr16
mov
fisubrs
inc
dec
out
cmp
in
xchg
les
es
cmpsb
dec
pop
mov
cmpsb
pop
shlb
mov
out
popf
movsb
mov
scas
inc
sbb
pusha
sub
inc
adc
test
adc
scas
add
int
xchg
rcl
xor
xor
lods
xchg
mov
add
stos
scas
aas
pop
mov
cmpsb
test
imul
dec
cmpl
inc
rcrl
js
sub
xchg
add
pushf
inc
jge
fsubl
lret
je
and
js
scas
lea
dec
jge
dec
ret
incl
jp
sbb
sbb
sarl
dec
mov
testb
sub
int3
shr
sahf
sbb
xor
repnz
mov
push
std
dec
push
imul
cmpsl
fldenv
fpatan
jmp
out
int
inc
das
dec
inc
add
sub
xor
fucomp
mov
pop
push
push
scas
jae
lcall
mov
jge
cs
fsub
ret
imul
loope
xor
into
cmc
cmpb
rorb
cld
ret
inc
dec
jns
dec
fdivs
mov
mov
xchg
adc
aaa
add
cmp
adc
fmull
sub
adc
jle
andb
xor
ds
fistps
rol
les
mov
push
adc
lods
push
jns
dec
jns
adc
jnp
mov
mov
bound
lahf
xchg
push
lret
sub
in
sbb
dec
mov
movsb
mov
jmp
inc
sbb
data16
popa
sbb
aad
jne
repz
xchg
mov
or
sub
push
sub
xor
lret
mov
jl
cwtl
sbb
xor
out
out
js
arpl
jmp
sti
push
aam
adc
or
or
jmp
das
or
sub
outsl
or
push
lea
loope
leave
rcr
out
adc
insb
mov
call
pop
in
and
pop
jle
inc
sub
movsb
mov
mov
sbb
inc
push
xor
push
mov
testl
cmpsb
repnz
es
sub
cmp
test
mov
int
push
rolb
mov
out
and
shl
rcrb
pop
fs
jp
xchg
repz
lods
jnp
fdivl
dec
jp
mov
sub
fchs
adc
into
and
sbb
movb
stos
movsb
insb
xchg
lcall
cld
jae
xchg
repz
lret
es
jg
mov
test
xchg
das
inc
xor
popa
sbb
in
nop
inc
daa
into
repnz
adc
shll
sub
push
dec
inc
cwtl
out
mov
nop
or
adc
stos
fwait
jnp
sub
not
into
clc
inc
nop
loopne
or
popf
inc
pop
sub
stos
sarb
nop
ret
in
arpl
pop
pop
cmpsl
call
std
cmpsl
adc
mov
adc
mov
or
lods
adc
sahf
push
cmp
sub
lret
movsb
rcrb
adcb
add
push
xchg
sbb
xlat
jo
xchg
aam
mov
sbb
mov
dec
daa
mov
mov
testb
sbb
lret
mov
jns
lods
mov
xchg
inc
xchg
dec
mov
sub
fiaddl
rolb
test
shll
movsb
icebp
scas
mov
loop
cwtl
add
stos
out
sbb
sub
data16
stc
or
or
enter
xchg
or
fisttpl
adc
push
imul
cwtl
and
scas
test
cmp
stos
test
add
les
mov
push
ja
sbb
push
mov
push
mov
or
mov
gs
imul
outsl
mov
es
dec
aam
inc
jge
mov
daa
rcrb
jge
pop
push
sub
das
xchg
mov
mov
xchg
lock
inc
dec
lret
cmp
add
in
inc
test
stos
cmp
jl
xchg
mov
pop
lahf
sahf
jl
push
or
popa
daa
iret
leave
cmp
add
loopne
xor
sub
adc
mov
push
out
jp
ss
into
mov
push
iret
lret
pop
push
jmp
int
aaa
insb
adc
mov
push
mov
dec
popa
shll
fnstenv
subl
adc
sub
stos
cmp
das
dec
vcvtsd2ss
xor
jb
fisubl
mov
leave
xor
inc
mov
xor
ljmp
inc
cs
sbb
aam
mov
push
andl
ds
inc
nop
dec
roll
mov
imul
addr16
add
in
xor
mov
outsl
mov
xchg
enter
and
not
mov
fidivl
rcrw
jl
inc
xchg
sbb
mov
pop
std
je
xchg
ret
lock
jle
adc
movsl
mov
insb
dec
jmp
cmpl
fsubl
jge
sub
cltd
mov
fldt
dec
rolb
jae
ror
stos
jbe
cltd
jl
pop
daa
pop
rcrb
test
xor
push
mov
jns
push
fistl
lods
mov
lret
out
sti
rcrb
jb
dec
jns
into
pop
mov
jns,pt
mov
mov
fwait
rcrl
dec
jne
lret
jne
jnp
cmpl
dec
dec
shlb
jae
sub
pop
push
inc
xchg
pushf
addr16
ds
subl
push
jmp
aaa
push
das
rcll
fdivl
sub
scas
adc
pop
imul
leave
sbb
push
jl
dec
sub
pop
jae
mov
dec
push
clc
int
push
or
inc
mov
and
cltd
dec
loope
mov
mov
mov
cmp
jle
add
xchg
into
shlb
leave
dec
lea
mov
mov
es
rcrb
fdivs
test
and
sbb
popa
adc
cmpsl
sub
dec
and
jmp
xchg
fstpt
inc
les
inc
loopne
cmp
jbe
pop
fnstenv
adc
pop
mov
imul
es
sti
pusha
out
icebp
out
sub
dec
mov
cltd
fimull
mov
jnp
push
bound
fstpt
jmp
dec
inc
pop
cmp
je
mov
insb
jns
jge
das
mov
push
stos
imul
mov
pop
jecxz
mov
adc
clc
and
cmp
mov
inc
test
int3
bound
loop
pushf
jp
jle
test
adc
sbb
pushf
lods
lcall
test
lret
inc
pop
insb
xor
out
lods
push
xchg
fcoml
push
cmc
into
test
insl
xchg
mov
xchg
shrb
lods
insb
xor
stos
cwtl
jb
inc
sbb
push
aam
sub
shrl
mov
mov
jnp
push
jmp
jb
and
ret
mov
mov
jecxz
push
dec
or
adc
adc
lock
dec
cmp
sub
xchg
repz
lahf
add
jmp
movsb
dec
sub
sub
push
mov
sarl
cmp
cmc
mov
pop
cmc
adc
mov
shrb
das
pop
ss
out
pop
cmpsb
xor
push
or
aaa
lods
bound
jecxz
mov
adc
jecxz
push
pushf
dec
rol
loopne
lahf
mov
mov
loop
mov
jge
jge
mov
mov
lcall
rclb
iret
push
sahf
adc
stos
sarb
xor
jecxz
testb
fisttpl
xor
lret
or
popa
test
mov
adcl
cltd
xchg
xor
push
aad
mov
dec
jg
test
sub
lea
push
out
bnd
insb
nop
sub
sbb
fcmovnu
fsub
pop
xchg
test
js
push
pushf
arpl
jae
xchg
pop
mov
out
cmc
mov
std
jbe
sbb
xlat
pop
loopne
adc
push
out
fldl
jg
std
cmp
mov
cld
rcll
arpl
adc
dec
sbb
add
inc
pop
cmc
sbb
xchg
inc
jmp
enterw
xor
xor
arpl
fadds
xchg
mov
lea
or
pop
mov
outsl
xchg
xlat
rolb
stos
jg
xchg
ror
dec
pop
or
scas
ret
add
mov
fcmove
mov
or
testb
lods
add
sub
jle
jae
rcl
jp
xor
in
cmpsb
and
and
inc
mov
jle
sbb
xor
inc
in
clc
out
test
pop
cmp
xor
sbb
xor
jno
dec
mov
pop
mov
mov
test
push
icebp
pop
in
jle
add
jecxz
jle
push
cmp
pop
or
mov
lock
fisubrs
pop
xlat
or
mov
ss
es
cltd
xchg
xchg
and
orl
das
hlt
adc
jns
fs
int3
lods
xchg
jns
add
ficoml
jo
int3
cmp
js
pop
test
ljmp
flds
icebp
js
movsl
fdivr
add
mov
pop
aad
adc
imul
xchg
dec
xor
add
adcl
inc
inc
mov
cmp
xor
pop
xor
mov
mov
jg
cmp
pop
test
data16
ja
lahf
adc
leave
test
mov
dec
aam
int3
pop
pop
daa
loope
ret
insl
repnz
push
jae
mov
cmp
inc
add
mul
sub
cmpsb
xor
dec
push
lea
or
mov
mov
stc
sub
mov
lods
fisttpl
inc
and
xchg
cmc
imul
inc
add
push
aaa
sbb
cmp
out
inc
mov
cmpsl
xchg
dec
cmpsl
and
outsl
scas
loopne
and
sti
popf
mov
jle
fisttps
movsb
ficomps
sbb
jmp
or
jo
movsl
push
jns
mov
enter
cmp
sub
push
scas
jne
sub
cltd
in
push
and
and
mov
dec
and
add
daa
int
push
ja
rcl
jl
mov
mov
ds
adc
jne
jl
std
std
xor
mov
mov
sub
das
mov
dec
adc
sti
ss
add
dec
xchg
mov
pop
mov
pop
loop
cltd
out
loopne
lods
sti
cmpsl
sub
pop
sub
sub
dec
mov
dec
sbb
negb
add
jge
cwtl
pop
mov
mov
jno
iret
addr16
dec
arpl
pushf
jbe
jge
bound
nop
dec
and
xchg
push
lock
sti
ja
mov
xchg
and
fwait
cmc
insb
xor
sub
out
fildl
adc
and
mov
pop
outsl
iret
jle
jecxz
aad
push
sbb
mov
in
pop
cmpsl
cli
xchg
repnz
lret
sbb
mov
fs
dec
sahf
push
push
sub
xchg
ja
std
adc
push
adc
xchg
mov
inc
cmp
push
aad
inc
push
popa
xchg
and
pop
test
rol
push
sbb
pop
pop
jns
loope
lods
and
inc
repnz
inc
dec
mov
mov
or
and
test
lock
cli
jmp
jmp
lcall
push
cmp
repz
jne
sarl
std
add
je
cmpsb
and
sbb
cmpsb
lret
fbstp
ret
mov
gs
scas
add
push
stc
fsubrl
push
mov
mov
lret
outsb
dec
dec
fucomip
fwait
clc
cmp
cs
sub
cmp
jmp
push
rcr
mov
int3
sbb
push
popl
mov
cwtl
inc
clc
paddsw
add
or
mov
xchg
cmp
out
mov
add
pop
inc
mov
in
dec
aas
jmp
dec
stc
sti
xchg
out
inc
fs
enter
jg
lods
mov
addb
aaa
mov
cmpsb
js
push
xchg
lret
pop
fcmove
hlt
sub
mov
int3
dec
mov
loope
fsub
jns
mov
leave
mov
cmpsb
and
cli
push
dec
ljmp
jbe
outsl
jl
fimuls
mov
fimull
add
in
rolb
mov
mov
xchg
inc
adc
or
lahf
sti
pop
int3
cs
fcompl
pop
cmp
xchg
cmpl
xor
out
in
or
or
ss
pop
push
jb
lock
inc
mov
insl
cld
popa
xchg
insl
rorb
cmp
sbb
and
mov
add
pop
mov
lret
int
addr16
fwait
mov
pop
dec
clc
std
or
ss
mov
pop
sbb
mov
push
leave
push
mov
pushf
cld
mov
hlt
inc
mov
inc
xchg
cmp
add
jo
loop
pushf
adc
sub
push
mov
movsb
iret
aam
popa
jle
jg
push
jp
fisttpl
int
xchg
sbbl
out
pusha
rcrb
nop
inc
push
out
jne
cltd
jno
pop
xchg
out
mov
je
push
mov
mov
lahf
mov
push
stos
xor
jmp
out
lea
sub
jne
test
cltd
sbb
mov
sarb
lods
mov
imul
in
jle
dec
push
cmc
or
test
mov
call
xchg
loope
fwait
cmp
fidivrs
mov
dec
dec
mov
and
call
and
jo
mov
xor
xor
clc
push
push
pop
loopne
jmp
out
cmp
ret
pop
aas
in
in
mov
adc
jns
jnp
adc
dec
or
add
repnz
and
pop
mov
cli
mov
push
sbb
rclb
stos
inc
inc
fcmovnb
push
mov
lahf
sub
xor
or
rorb
into
out
cwtl
xchg
movsb
sbb
jmp
add
ret
outsl
cmpsb
nop
adc
sub
not
push
dec
push
mov
sub
jb
rcr
popa
adc
adc
mov
inc
repnz
popf
es
xchg
std
frstor
mov
or
aas
pop
or
adc
int3
xadd
sbb
cmc
or
sarb
mov
gs
rcrb
add
loopne
xor
sbb
push
inc
or
lcall
lea
test
push
in
popf
add
and
sahf
inc
sub
or
neg
ja
sbb
into
bound
xchg
out
mov
jmp
or
stos
add
jns
hlt
inc
pop
add
jle
sahf
daa
pop
out
sub
mov
imul
imul
sbb
imul
jp
jno
mov
sub
mov
lods
push
xchg
daa
iret
sub
add
cmp
push
xor
aam
adc
mov
cwtl
data16
loope
addr16
mov
gs
mov
adc
xorb
outsb
loope
mov
mov
push
dec
rcrb
and
pop
js
enter
mov
cmp
imul
sub
pop
add
inc
ret
mov
sbb
mov
or
scas
xchg
and
dec
mov
jno
pushf
dec
inc
call
ljmp
popa
sub
dec
in
push
lods
jp
cmp
lret
sub
or
cmp
ds
xchg
les
inc
mov
arpl
xchg
cs
xchg
push
lods
andb
push
sbb
fidivl
push
xchg
inc
dec
pop
dec
outsl
push
cltd
sbb
lret
outsb
fwait
sbb
fsubrl
mov
jns
and
pop
fisttps
loopne
sub
sub
mov
dec
outsl
adc
aam
fisttpl
mov
and
ljmp
lret
mov
shlb
call
dec
idivb
and
out
pop
fisubl
fsts
mov
into
jae
out
pop
loope
sbb
dec
mov
add
push
rcrl
or
mov
pushf
loop
dec
add
sub
cmp
add
out
sub
sbb
pop
shr
push
pushf
add
jb
rolb
js
ret
cmc
in
shl
push
test
mov
or
or
shl
cltd
dec
push
fucom
ja
lcall
push
mov
push
push
jb
sub
cmpsb
sahf
fists
test
ljmp
pusha
sbb
cld
or
push
test
ljmp
jle
call
popf
pop
xor
mov
or
test
jl
pop
lret
popa
cmovg
lret
ret
loop
jl
js
loop
adc
push
out
fstl
push
or
aad
lds
mov
stc
push
popf
pusha
ret
loope
xlat
int
mov
jp
subb
das
xchg
pusha
xchg
or
mov
or
cwtl
jmp
arpl
cmp
mov
sbb
and
sub
shr
cwtl
sbb
xchg
iret
fs
lcall
gs
push
cwtl
negl
xchg
fadds
cmc
mov
cmp
popf
lea
in
or
or
adc
enter
daa
cmp
push
push
pop
add
pop
jns
in
dec
or
xlat
jne
les
push
pop
lret
popf
cli
jne
jbe
or
mov
fidivrl
mov
das
hlt
inc
dec
xor
ror
in
dec
mov
push
mov
push
flds
aas
testl
push
ss
sub
mov
pop
sbb
pop
subb
push
mov
and
das
sub
icebp
push
jno
cmpsb
fimuls
pop
sbb
mov
sbb
arpl
insl
mov
fldl
sahf
xchg
and
push
aaa
ljmp
dec
sub
in
aad
mov
clc
inc
push
cmp
sbbb
xor
imul
out
and
xor
scas
mov
mov
sub
sbb
pop
mov
push
fwait
lret
fisttpll
cmp
jge
aam
enter
push
mov
popa
sahf
mov
xor
mov
xlat
cmp
rcrl
jl
sub
sbb
shll
push
push
xor
mov
cld
add
icebp
add
sbb
icebp
scas
mov
adc
insl
xchg
inc
shll
mov
enter
shrl
insl
loop
fstps
aaa
sub
cmpl
insb
add
sbb
rorl
dec
fldcw
mov
icebp
dec
jae
fdivs
lds
test
mov
lods
fbstp
jle
jmp
and
xor
aad
xor
shll
cli
cmp
jne
mov
jb
or
mov
pop
pop
test
scas
sub
loope
out
jle
hlt
and
cltd
ficomps
add
imul
out
cmpsb
mov
add
pop
sbb
push
sbb
scas
mov
inc
dec
adc
rcr
icebp
loope
in
push
cmp
adc
jge
stc
or
jle
popf
outsb
jns
cmp
lahf
loop
push
xchg
roll
faddp
pop
pop
clc
enter
mov
push
push
xchg
add
loop
cmpsb
and
andb
aad
pop
sbb
lar
push
fcomp
or
push
stc
pop
js
push
adc
xchg
outsl
inc
out
push
xchg
mov
mov
mov
addr16
pop
cmp
lods
popf
loope
jb
dec
pop
fistl
sbb
aam
idivb
jno
cmpsb
fidivrs
push
sarb
stos
mov
dec
dec
jae
out
and
std
rorb
or
ja
mov
mov
pop
ljmp
cmpsb
cwtl
jb
push
in
jb
fldl
fldl
aas
scas
xor
jl
cmp
mov
mov
inc
cld
mov
insb
pop
xor
rcrl
or
xor
inc
xchg
push
xchg
jb
adcb
mov
pop
rolb
loop
repnz
add
adc
and
xor
inc
xchg
push
xchg
jb
adcb
mov
pop
rolb
loop
repnz
add
adc
and
xor
inc
xchg
push
in
bound
xchg
inc
cmpsb
ja
outsb
ret
pop
loop
ret
ret
xor
and
xor
loop
bnd
insl
in
or
adc
dec
or
gs
push
addl
jnp
add
adc
add
jno
popa
movsb
push
test
aad
mov
inc
icebp
xor
shll
and
jo
add
xor
popa
movsl
push
xchg
inc
test
jne
add
inc
out
xor
roll
mov
stos
sbb
adc
add
cmp
adc
cmc
loope
or
ljmp
mov
push
push
inc
pop
jne
jne
aas
add
fbld
dec
pop
in
sbb
cmp
aam
gs
in
xchg
cmpb
mov
addr16
and
add
add
popa
dec
and
cltd
sbb
insl
clc
leave
jo
inc
insl
adc
xor
and
xor
and
xchg
adc
inc
mov
inc
test
lods
lcall
imul
adc
mov
lds
popa
mov
std
dec
gs
sub
jae
jmp
dec
push
jp
scas
cs
hlt
mov
cmc
and
cmp
movsb
xor
push
xchg
inc
jp
jne
gs
push
addl
adc
mov
lds
mov
movsl
arpl
rcrl
jb
push
movsl
jo
jno
test
je
fs
rorl
cmp
and
cld
sbb
or
sbb
test
inc
xchg
sub
jae
adc
push
xor
lock
fnsave
cmp
rcll
and
adc
add
jno
popa
movsl
push
xchg
inc
test
push
addl
adc
and
adc
add
jno
popa
movsl
push
xchg
inc
test
cmp
rorb
mov
in
sti
jb
sub
in
test
mov
out
cltd
ljmp
rcll
inc
push
cmp
sbb
mov
fldenv
mov
mov
fstps
push
xor
nop
ret
sbb
inc
lret
inc
mov
sub
test
pop
mov
pop
mull
inc
call
test
mov
mov
fwait
mov
push
cmp
out
pop
push
inc
push
push
nop
mov
cld
fstps
leave
inc
jno
or
loope
mov
out
mov
aaa
sub
test
push
icebp
push
jo
sbb
aas
inc
adc
and
arpl
lahf
pmulhw
bound
gs
js
jb
out
test
ss
out
cltd
sbb
or
out
clc
cltd
and
inc
inc
mov
in
mov
jbe
push
dec
out
mov
lock
insl
jle
adc
mov
popf
xchg
outsb
enter
aas
jge
sub
std
popa
jbe
aas
call
lods
fdiv
add
xor
jecxz
ret
adc
adc
push
repz
aas
add
inc
adc
cltd
pop
adc
add
push
enter
cmpl
mov
jo
dec
jb
lret
sbb
ja
adc
out
call
add
push
jecxz
jg
mov
daa
test
cmp
adc
rcrl
jmp
int3
adc
cmp
aad
pusha
jl
jnp
es
decb
mov
pushf
dec
iret
lock
inc
out
cld
sahf
pop
inc
fcomps
js
ja
sbb
repnz
sti
jae
in
mov
and
adc
or
aam
movsl
ficompl
cli
sub
lcall
sub
imul
leave
out
lahf
mov
xlat
gs
cwtl
or
in
xor
inc
scas
imul
fsubrl
call
mov
push
adc
and
popf
dec
add
pop
mov
push
into
fisttps
cmp
pop
je
shll
sbb
jmp
cld
pop
enter
inc
inc
push
push
ja
xor
cmovns
ret
arpl
jmp
dec
cli
xor
gs
les
adc
loope
pop
mov
cmc
xchg
add
cld
cmpsl
mov
sbb
mov
fildl
cmpsl
hlt
in
mov
out
fs
jns
sub
push
fstpt
inc
push
arpl
push
in
inc
cmp
shrb
ja
arpl
sarw
jecxz
pop
xchg
stos
xchg
ja
clc
mov
cmp
nop
arpl
cltd
mov
or
movsb
jl
xor
ss
mov
mov
insl
jo
in
imul
adc
push
sti
into
ljmp
fstpl
mov
mov
dec
push
inc
jo
out
sbb
ds
mov
or
dec
xchg
inc
cmp
cmc
push
mov
cmp
sub
jb
daa
pushf
aaa
push
jecxz
xorl
es
lods
das
sub
scas
sbb
rol
push
fsubs
rcr
adc
inc
and
add
rcr
and
jmp
sub
and
fs
icebp
imul
sub
xor
orl
jo
inc
pop
popl
add
sahf
mov
push
pop
sbb
adc
mov
sbb
xchg
sbbl
mov
sub
ficoms
adc
sbb
adc
inc
add
sub
enter
sub
data16
xlat
mov
popf
cwtl
jno
lcall
ljmp
shrb
cltd
cmp
idivb
test
insl
out
lcall
xor
loopne
adc
dec
dec
pop
xor
adc
add
sub
test
dec
jns
mov
rorl
sbb
mov
out
jmp
mov
es
das
add
pop
in
sarb
push
push
inc
sub
jmp
push
mov
fstl
nop
dec
add
adc
lock
adcb
imul
adc
insb
adc
hlt
mov
mov
sub
mov
roll
pop
add
sub
sbb
push
dec
popa
push
fldcw
push
jae
xchg
fwait
repz
dec
adc
mov
add
or
pop
or
jne
dec
xor
mov
xchg
mov
imul
lock
dec
push
mov
fcmovnbe
cmpsl
jmp
fildll
scas
rclb
push
icebp
xor
mov
out
jo
sbb
xchg
push
lret
pushf
pop
inc
out
test
push
cmp
inc
mov
movsb
mov
mov
int3
jle
dec
out
jge
jmp
mov
mov
sbb
xor
or
test
fcompp
and
and
enter
push
rorb
ds
adc
pop
repnz
jg
cmp
push
mov
popa
xor
jge
xchg
mov
enter
clc
mov
repnz
xor
fisttpl
cli
js
xchg
or
jmp
sbb
faddl
adc
lcall
fsubrs
pop
test
stos
mov
mov
insb
push
dec
jle
mov
mov
jns
ja
insb
and
adc
push
xor
or
sbb
loop
js
loope
push
xor
cmp
mov
jl
lods
call
jbe
pop
mov
mov
nop
imul
cmp
repz
data16
adc
imul
mov
fwait
push
dec
xchg
push
lock
mov
js
xchg
mov
call
enter
js
repz
xor
mov
pop
jae
popa
inc
fldenv
adc
add
shrb
jbe
cltd
mov
mov
or
xchg
fwait
subl
sub
mov
and
mov
fcomi
jb
pop
xchg
imul
xchg
nop
into
rorb
leave
jo
ja
pushf
ljmp
ds
pushf
push
fidivl
mov
dec
je
imul
sbb
sbb
addr16
or
cltd
inc
cmpsl
jp
lods
xlat
hlt
jp
jmp
ror
xchg
shlb
rorb
in
mov
out
xor
fcoml
cmp
loop
push
test
mov
pusha
mov
mov
lock
and
xchg
push
shll
stc
dec
in
popa
adc
pop
cmp
cmp
lcall
push
ljmp
popf
push
inc
pop
push
loopne
test
mov
fistpl
mov
fs
iret
dec
pop
mov
int3
imul
push
jno
xchg
pushf
cmp
push
add
cld
js
dec
dec
jp
ja
push
loop
cltd
out
aam
aaa
shll
ljmp
clc
add
sbb
jge
mov
cmpsl
jo
push
cmpsl
popa
leave
subl
fwait
pop
lret
adc
xchg
jg
cs
jmp
testb
pop
xor
inc
lods
pop
movsl
les
aam
cmpsb
adc
push
push
jge
imul
jbe
sahf
jnp
pop
jb
hlt
loopne
rcll
loope
insb
inc
cs
enter
dec
fsubs
popf
xor
adc
mov
int3
mov
and
out
cmpsb
fidivrl
fmuls
cmp
rcr
and
in
mov
rol
fsub
jns
jle
inc
mov
push
fcompl
mov
push
mov
add
ds
mov
ficompl
stos
lods
push
xchg
xchg
test
imull
xchg
int
ret
jmp
jne
loope
sub
lock
fsub
jecxz
in
pusha
push
cmpsl
mov
out
cwtl
and
mov
lahf
dec
mov
and
fldcw
test
ljmp
inc
add
stos
sti
jnp
mov
lahf
inc
in
mov
lahf
rcrb
scas
out
pop
imulb
stc
and
and
ret
dec
dec
test
int3
icebp
or
lds
mov
lret
and
add
lret
lcall
xor
mov
rorl
rolb
pop
or
fisubs
mov
inc
push
cmc
pop
mov
sahf
xchg
mov
cmp
popa
jmp
fcmove
shrb
ret
sub
sub
cmp
jle
xlat
sbbb
fwait
in
imul
imul
xor
mov
insb
mov
push
fcompl
in
fdivl
mov
test
lods
add
pusha
movsl
mov
std
sub
out
dec
outsl
out
push
or
adc
jns
mov
outsb
pop
rorb
xlat
imul
nop
and
test
sub
mov
in
fcomip
jbe
mov
adc
aam
rol
cld
lret
insb
push
cli
jno
out
jo
cmp
mov
mov
inc
mov
dec
or
add
das
test
mov
mov
lahf
cmpsl
xlat
fnstsw
arpl
push
xchg
xchg
lds
insb
int3
shl
push
sbb
jle
enter
ss
fwait
cmp
fsts
or
idivb
inc
pop
fdivl
les
xchg
pop
xor
xor
push
rclb
shll
sub
inc
pop
dec
mov
dec
mov
nop
mov
sti
sbb
dec
xchg
sbb
cmovo
mov
outsl
and
adc
push
testl
cmpsl
repz
xchg
out
push
lock
je
ljmp
les
lret
leave
push
adc
daa
out
adc
push
dec
sbbl
mov
dec
hlt
push
jmp
pop
and
mov
or
lea
cmp
sti
or
fstpt
pop
es
ret
into
fldcw
pop
ss
lret
add
adc
fs
xchg
inc
adc
add
hlt
pusha
mov
je
incl
aad
pop
inc
pop
mov
aaa
jb
mov
cli
enter
cli
dec
push
mov
sbb
daa
cmpsb
ja
xor
mov
push
jnp
cmp
out
sbb
scas
pop
and
mov
or
jle
inc
mov
cmc
cltd
fldt
xor
push
sbb
orb
cmp
mov
mov
xchg
test
dec
out
pop
shlb
mov
push
scas
jl
ljmp
push
mov
pop
addr16
icebp
aam
pop
lret
daa
xor
jae
cmp
pop
mov
repz
jb
xor
ss
push
push
mov
inc
ss
jne
hlt
fmull
out
sahf
addb
ja
bswap
and
push
jb
mov
insb
xor
jg
pushf
fsubr
or
or
or
bound
inc
or
das
xchg
inc
jge
jmp
cmp
lcall
cmp
aaa
cmp
jbe
scas
pusha
inc
jnp
cmpl
iret
ss
into
or
mov
sbb
adcb
xor
sbb
imul
in
pushf
stc
jno
push
mov
aam
dec
ror
adc
cmp
sbb
cmc
pop
dec
xor
sub
sub
dec
xor
cmp
sahf
xor
sub
data16
xor
cmp
pop
pop
mov
push
aam
call
fs
cltd
movsbl
cli
pop
iret
int
dec
mov
loop
add
iret
das
xor
mov
mov
in
sub
fndisi(8087
add
jg
movsl
fldenv
adc
add
ret
push
adc
pop
mov
mov
inc
sbb
lea
mov
pusha
and
jge
mov
iret
pop
adc
cltd
fs
les
xor
repnz
filds
sbb
sahf
pop
jnp
lock
or
xchg
test
ljmp
xor
popf
daa
sbb
mov
xchg
sub
inc
shlb
lods
mov
loop
out
das
cmp
adcl
aaa
and
add
cmpsb
mul
dec
pop
mov
and
cmp
sahf
mov
fdiv
rorb
xor
mov
mov
pop
and
cmp
xor
dec
sbb
clc
add
pop
jl
add
sbb
imul
inc
test
out
repnz
xchg
and
es
arpl
outsb
fs
iret
push
cmpsl
stc
popl
and
test
xor
hlt
movsb
pop
lcall
sbb
lret
pop
das
leave
and
mov
loop
pushf
mov
mov
mov
popf
inc
adc
and
rcr
xor
jmp
dec
fidivrl
pop
adc
pop
jl
repnz
mov
jns
sbb
rclb
xchg
push
xchg
push
or
sarb
pop
lcall
lock
in
scas
mov
lret
orb
push
cmp
mov
fimull
dec
sub
mov
fistpl
fidivrs
mov
xchg
push
push
clflush
jge
mov
mov
xor
ja
into
scas
out
add
leave
sbb
ja
shll
xor
cmp
cltd
mov
test
fld
aas
push
sahf
std
pop
fmull
push
and
test
in
loop
insl
test
jno
arpl
or
in
mov
sbb
xor
cld
lea
or
sti
fwait
daa
mov
loop
cmp
mov
jnp
add
pop
and
inc
adc
adc
mov
stos
loopne
loop
push
push
mov
jno
xor
sti
and
hlt
rcr
adc
push
sbb
sbb
xchg
xchg
mov
jl
shrb
xlat
pusha
and
dec
or
inc
movsl
lret
shrl
push
ret
shl
sti
xor
ja
into
pop
sti
outsb
xlat
cmp
adc
pop
mov
sbb
std
arpl
sbb
push
shr
pop
popf
call
ficompl
xor
insl
mov
adc
mov
clc
idivb
mov
push
xchg
sbb
loopne
jmp
icebp
stos
pushf
jns
push
std
and
dec
jbe
push
mov
or
into
icebp
cmp
mov
mov
pop
fwait
out
push
ds
mov
repz
je
mov
clc
mov
jecxz
loop
pusha
ret
lea
cld
mov
addb
mov
push
xor
dec
dec
ret
pop
es
inc
fldl
pop
lds
subb
andb
inc
mov
fisubrl
aad
mov
fcomip
icebp
and
cmp
push
or
stos
mov
stos
ds
push
pop
pushf
cmp
shl
mov
push
jo
or
shll
push
sbb
pushf
cltd
dec
sub
daa
add
jecxz
and
mov
outsl
repnz
sbb
xor
xchg
mov
sbb
and
lcall
sbb
stc
cwtl
adcb
movsl
test
jg
sub
mov
pusha
into
je
nop
mov
out
stc
stos
test
adc
push
aaa
inc
mov
mov
es
test
push
mov
out
pop
addr16
pop
popa
fiaddl
inc
mov
sbb
fwait
insl
and
fildl
push
stos
out
dec
repz
mov
jecxz
int
int3
sub
sbb
test
ss
aad
xor
es
lods
add
outsl
ret
test
stos
jmp
shlb
xor
mov
mov
mov
ds
aaa
pop
mov
pop
loopne
pop
fdiv
fisubs
orl
inc
dec
add
insb
sbb
push
test
div
iret
daa
pop
cmp
adc
xchg
loop
sub
jecxz
jmp
imul
lods
jnp
loopne
rorb
dec
cmp
mov
stos
scas
sbb
lock
out
jno
sub
dec
inc
movsl
sub
dec
jne
out
pusha
sahf
and
psubw
into
ljmp
add
adc
repz
jae
pop
inc
pop
adc
adc
cmpsl
xchg
fsts
inc
lcall
or
outsb
movsl
sarl
jns
lods
imul
pop
sub
pextrw
sub
mov
fmuls
cld
adc
adc
js
push
push
test
mov
das
cwtl
daa
out
add
ljmp
jb
mov
into
sub
scas
sbb
push
push
sahf
mov
fiadds
push
fwait
into
ljmp
in
jnp
std
mov
cli
ret
sbb
mov
cmp
std
mov
movsb
in
sbb
push
sub
mov
mov
negl
ds
mov
out
pop
dec
testb
sbb
push
jmp
push
push
das
xor
fildll
xchg
dec
imul
cmpsl
stos
pop
adc
dec
mov
addr16
cmpsb
adc
mov
je
fwait
push
push
vmovups
mov
clc
pushw
jmp
dec
mov
cli
and
clc
mov
out
cmpsb
stc
jge
icebp
cli
in
pushf
fstpt
movb
movsb
lock
cmc
mov
movsl
xor
test
cmc
dec
fdivrp
cmpsl
scas
icebp
mov
xlat
push
rcrb
pop
fsubr
or
xor
adc
xchg
add
clc
in
pop
rcrl
pop
popa
push
stos
ret
test
popa
mov
ss
or
adc
into
push
and
pushf
mov
ds
cmpsb
mov
les
mov
sbb
add
rcl
mov
aas
xor
xchg
gs
or
xor
sub
fisubrl
adc
and
mov
and
and
jns
xchg
push
ret
out
mov
xor
icebp
sbb
sbb
xchg
lods
pop
inc
cmp
in
mov
fwait
push
daa
ss
mov
aad
inc
pop
ret
lret
sahf
xchg
dec
bound
and
ljmp
mov
inc
ret
sub
xchg
xor
lcall
xlat
adc
clc
cmp
les
cmpsl
cmp
pop
fstp
dec
idivl
fnstenv
cpuid
inc
icebp
sub
xlat
loope
js
sbb
out
in
adc
stc
repz
sahf
ds
les
and
dec
lcall
lods
pop
pop
subl
push
pop
xor
sbb
cmp
popf
or
sub
xchg
dec
ss
and
in
jle
sti
mov
bound
outsb
pushf
inc
mov
and
cli
fwait
data16
jl
clc
cmp
push
dec
jns
loopne
xchg
std
xchg
icebp
dec
cs
shl
std
loop
leave
mov
push
mov
sbb
cs
push
dec
rcrb
mov
inc
rcll
inc
inc
sub
pop
jmp
jg
pop
cltd
mov
and
add
sbb
das
shlb
sarl
mov
sub
fs
lahf
cmpsl
jp
lods
cmpsb
sbb
test
fsts
cmc
insl
loopne
cmp
outsb
mov
ja
les
insb
stos
stc
or
icebp
sbb
call
decl
loopne
out
sbb
add
das
mov
fs
rcl
jo
jns
xchg
stos
mov
cmpps
sahf
jne
push
push
int3
loopne
pop
stos
jg
outsb
iret
fcomp
mov
test
stc
adc
sbb
pop
jno
mov
jp
fnstsw
and
leave
pushf
adc
mov
es
adc
in
sbb
hlt
insl
push
in
movsl
arpl
lret
fwait
iret
cli
int
xor
jnp
xlat
fwait
sahf
pop
das
adc
aam
cmp
cmp
sub
addr16
mov
mov
clc
insb
fwait
and
int3
hlt
adc
xchg
mov
inc
dec
outsl
push
fldl
stos
fs
push
test
jl
pop
pop
icebp
insl
inc
adc
mov
mov
stos
mov
imul
cmpsl
clc
push
mov
cmpl
add
push
fcomip
xchg
mov
mov
jl
rcr
bound
sub
insb
sub
xchg
fs
inc
ja
pop
mov
sbb
xlat
push
sub
loope
pop
add
dec
inc
in
daa
adc
push
xchg
pop
or
lods
lcall
mov
and
sbb
stc
jmp
jmp
inc
in
test
int3
or
mov
lock
cmpsl
pop
std
int
cmc
out
jns
das
sub
call
push
inc
andl
pop
fs
popl
adc
add
cmp
xor
cmpsl
or
sub
rcll
iret
push
or
sar
out
add
orb
hlt
xor
pop
lea
jp
in
xor
mov
cmpsb
lods
mov
out
xor
inc
lock
adcl
aas
rcrl
shll
insl
cld
xor
inc
push
cltd
push
loop
or
and
dec
jl
xchg
cmc
hlt
pop
sbb
and
xlat
pop
sbb
cmp
sub
push
push
addl
adc
and
adc
add
jno
popa
movsl
push
xchg
inc
test
push
addl
adc
and
adc
add
jno
popa
movsl
push
xchg
inc
test
push
addl
adc
and
loope
add
jno
jno
push
xchg
test
gs
push
mov
and
xor
fimuls
aad
mov
cmp
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
addl
push
stos
fistps
lret
sub
add
add
add
add
sbb
push
add
add
add
add
add
add
cltd
add
adc
add
add
add
add
add
jae
addb
add
add
add
test
mov
mov
sbb
jge
jae
jb
test
lret
add
add
add
fldl
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
addl
arpl
sbb
xor
add
iret
add
add
add
mov
mov
test
xchg
add
add
mov
add
add
add
add
add
ja
nop
add
add
add
add
add
xor
pop
add
add
mov
pop
add
add
add
sbb
popa
add
out
ret
add
add
add
add
add
add
addb
add
add
add
add
add
push
add
add
dec
add
popl
mov
clc
add
adc
add
add
add
add
add
cmp
jmp
jecxz
add
mov
add
add
add
add
add
add
sbb
mov
add
dec
add
add
add
add
add
add
and
add
add
pop
add
pusha
add
add
add
add
add
add
add
add
addb
add
sbb
int3
add
add
add
add
xor
clc
add
fadds
jge
rolb
sbb
das
add
add
adc
das
add
add
add
add
add
add
pusha
add
add
add
add
add
pop
add
rolb
add
add
add
add
icebp
add
repz
add
add
addl
jmp
pushf
add
add
add
add
add
mov
push
add
cs
add
add
add
add
add
add
pushf
add
add
add
add
mov
add
add
add
add
adc
add
aaa
add
add
adc
add
add
add
sub
add
add
add
hlt
add
add
add
add
add
add
sti
add
add
add
adc
adc
add
mov
add
add
jae
add
add
add
arpl
addl
add
roll
addl
push
add
mov
rolb
add
add
add
and
add
out
add
add
fwait
add
add
add
add
add
sub
pop
add
add
add
pop
add
cltd
add
add
add
adc
out
add
mov
popa
add
cmp
and
mov
imul
dec
add
add
jb
mov
xor
les
push
add
add
add
lret
add
add
aam
xchg
mov
fildl
sarb
test
xchg
mov
gs
or
lea
cmpl
xchg
and
add
cltd
dec
std
push
imul
jmp
pop
leave
push
std
rcr
stc
lock
nop
ret
push
cmp
add
push
and
loope
or
and
jl
cmp
test
icebp
jmp
mov
fs
jl
pop
rcrb
movsb
aaa
dec
cmpsl
and
pushf
cmp
fwait
xchg
andb
ss
xor
cli
pop
ds
mov
or
aas
fsubp
and
pusha
into
sub
outsl
leave
mov
in
sub
lods
add
stc
cmpsl
shrb
lods
addr16
inc
or
cmovl
xchg
outsb
sahf
mov
mov
jae
add
mov
push
fsubs
inc
sbb
dec
inc
mov
mov
jbe
int3
fists
shrb
js
inc
dec
adc
sbb
push
pop
stos
ljmp
in
jecxz
add
ljmp
or
repnz
adc
inc
mov
stc
push
sbb
and
jae
mov
add
xor
or
push
lds
insl
fwait
push
sar
ss
loopne
sahf
fs
je
in
test
stos
sbb
ljmp
sti
cmp
scas
nop
mov
or
mov
aam
pushf
aaa
mov
popf
imul
pop
mov
add
pop
jne
in
out
int
je
and
pop
xchg
cld
shll
push
rclb
push
rcr
movsl
in
push
sbb
mov
call
ljmp
lea
or
sbb
bound
movsb
or
cmpsl
push
cmp
fstps
jne
jg
nop
int
movsl
sub
into
dec
mov
sbb
loopne
das
cmp
divl
scas
cli
push
xchg
or
iret
in
mov
ss
ds
mov
popf
ljmp
xchg
data16
jb
loop
je
dec
scas
dec
adc
lock
xor
sar
ss
ret
jnp
rol
movsl
scas
stc
dec
mov
pop
out
dec
shll
jge
mov
dec
xor
arpl
cli
pop
neg
mov
sub
xchg
cmp
scas
push
fistps
dec
andb
in
clc
jne
xchg
stos
popf
lcall
mov
cli
sub
mov
insb
xchg
and
cmp
sbb
mov
call
adc
icebp
sub
out
int3
pop
inc
mov
inc
fidivs
mov
fdivl
inc
cmpsb
addl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
