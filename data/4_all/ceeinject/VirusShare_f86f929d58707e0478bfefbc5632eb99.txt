call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
andl
outsl
cmpb
popa
fidivl
das
push
fistps
outsb
out
jle
or
ds
pop
fimuls
jg
outsl
mov
sahf
clflush
mov
iret
inc
fistpll
push
cld
jp
cs
pop
dec
push
push
pop
andb
xor
or
inc
loope
jmp
es
or
stos
mov
pop
inc
popa
sti
cmc
mov
imul
ret
push
divl
ficoms
cmpsl
lret
daa
xchg
out
xchg
out
mov
fisubrl
mov
jle
push
dec
out
pminub
ret
push
pop
mov
push
xchg
fldl
scas
mov
cmpsb
dec
xchg
jg
pop
aas
popa
iret
scas
addr16
xor
adcl
cmp
and
jno
sbb
mov
iret
xchg
mov
push
add
dec
push
dec
push
fisubrs
add
inc
mov
outsl
ljmp
imul
std
pop
ficomps
outsl
xchg
jne
pop
fimull
scas
es
ss
out
imulb
add
mov
jle
outsb
loopne
jmp
mov
mov
mov
stos
pop
andb
fcompl
jns
into
daa
push
dec
test
insb
cmp
jbe
pop
scas
or
jnp
pop
sarl
mov
push
mov
clflush
mov
iret
outsb
jle
push
lahf
push
cs
fimuls
jg
outsl
mov
sahf
clflush
mov
iret
outsb
jle
push
lahf
push
cs
sbb
inc
pop
mov
push
sbb
or
jne
jecxz
in
cmpsb
inc
xchg
lea
mov
add
fstl
sbb
movsb
or
bound
push
lret
in
xorl
dec
ds
xor
push
dec
testb
mov
int3
push
add
fdivrs
push
nop
out
faddl
ret
push
pop
sbbb
test
and
ret
stos
sbb
jge
fsubl
lcall
jbe
xor
roll
cltd
fldt
clc
jle
xor
pop
das
inc
jl
mov
iret
subb
bound
mov
shl
lret
dec
xor
fs
into
push
test
int3
xchg
sub
dec
inc
sbb
dec
mov
ja
sahf
inc
outsb
or
mov
pop
iret
pshufw
or
mov
mov
sub
lds
mov
or
inc
add
sbb
or
add
mov
rol
stc
xchg
movsb
addr16
fcomip
lods
das
out
in
adc
popa
loope
push
dec
jecxz
daa
push
add
jb
daa
push
movsl
xchg
push
mov
xor
and
stos
movsl
and
mov
xor
mov
pop
iret
push
mov
adc
xchg
lods
and
out
fdiv
xor
xchg
pusha
mov
loop
popf
int3
ss
and
jnp
and
lds
insl
or
sub
xor
xchg
mov
cmc
sbb
leave
push
mov
mov
xchg
mov
in
mov
add
xlat
mov
cld
push
add
and
pop
ja
xor
add
adc
enter
pop
sbb
jb
xchg
shlb
push
mov
lock
dec
ret
aad
decb
cmpsb
gs
aad
aas
stos
jmp
mov
inc
inc
mov
push
cs
int
iret
mov
jnp
insl
adcb
cmp
cli
addr16
mov
add
push
push
ret
stos
sbb
adc
jmp
cld
jnp
movsl
lahf
shl
push
push
fsubrl
dec
sub
insl
mov
push
or
jle
dec
jle
pop
mov
out
insb
rorb
push
jmp
sub
cmpsb
loope
xchg
push
lds
outsb
inc
idivl
ljmp
adc
inc
cwtl
mov
xlat
ds
push
popl
xlat
adc
sub
jmp
pop
xor
shr
jmp
add
jae
add
shrl
scas
fs
dec
mov
jno
dec
jbe
mov
add
fimuls
hlt
dec
loope
adc
js
out
ds
pop
jmp
xor
pop
and
in
das
jbe
push
inc
sbb
fbstp
pop
xor
int
cmp
insb
sbb
lahf
mov
sar
cltd
dec
cmp
jnp
add
fmul
push
adc
mov
cmpsb
imulb
or
xor
pop
add
jns
pop
pop
sbb
scas
ss
xchg
inc
ja
xor
lods
je
and
push
inc
pop
cmp
mov
dec
fistpll
add
add
jno
inc
and
shrb
hlt
arpl
mov
mov
mov
push
lret
mov
jg
mov
testb
ficoml
or
shll
push
orl
and
outsb
mov
out
imul
rol
rorb
lahf
das
jl
xlat
gs
mov
cltd
ret
test
and
jge
scas
dec
add
scas
mov
loop
lock
pop
sub
inc
sbb
sbb
test
mov
pop
mov
inc
xor
daa
adc
fcoml
lods
push
jae
daa
jecxz,pt
inc
in
nop
icebp
fdivrs
loopne
in
bound
ret
dec
out
mov
sahf
mov
sub
pop
fstpt
xchg
push
cwtl
jp
adc
mov
sbb
dec
gs
sub
or
scas
mov
push
loope
inc
iret
nop
and
into
je
shlb
inc
bound
fldt
mov
pop
sbb
lock
and
fwait
into
hlt
dec
mov
dec
dec
test
push
cmp
pop
and
jne
mov
imul
pop
out
imul
in
and
cmp
pushf
and
push
mov
adc
outsb
mov
btr
subl
push
jnp
xor
aaa
ficoms
add
sti
ja
rorb
insl
sub
and
inc
jns
mov
out
sub
stos
xchg
mov
sub
dec
sub
inc
pop
mov
wbinvd
xchg
adc
out
pop
jae
mov
ds
cmp
mov
mov
lahf
lret
adc
aad
mov
pop
outsb
add
jl
cmp
cwtl
xlat
mov
jmp
and
outsb
pop
bound
mov
or
mov
loop
push
inc
or
negl
and
push
push
or
adcl
cmp
icebp
push
push
dec
sub
or
cltd
test
mov
fildll
call
pop
test
in
jns
xorl
movsl
out
arpl
cmp
int
dec
xlat
sbb
fnsaves
push
cld
xlat
xchg
cli
xchg
mov
pop
test
jecxz
mov
int3
xchg
subl
out
fnsave
in
adc
scas
faddl
sub
mov
inc
les
add
loope
adc
or
and
push
dec
into
and
dec
or
fstp
ret
sub
pop
lahf
ret
ds
pop
jno
pop
lock
add
mov
adc
stc
popa
cmpsb
loop
cmp
in
icebp
into
arpl
sti
mov
jns
out
in
subb
pop
dec
push
test
fidivrl
jp
pop
adc
loopne
pop
movsb
cmp
sbbb
mov
ds
cmp
xchg
xchg
test
mov
ret
fsubrl
or
je
and
pop
or
inc
test
push
sbb
imul
outsl
popf
outsb
xor
mov
or
mov
cmp
mov
push
in
add
out
dec
in
cmp
adcl
inc
test
cmp
shl
dec
scas
insl
cmpsl
push
xchg
mov
mov
push
add
xchg
fstp
daa
add
popf
push
adc
and
mov
out
jp
ret
dec
rolb
or
mov
or
in
mov
test
pop
push
xor
jns
dec
inc
mov
mov
sarb
and
mov
xor
jecxz
addb
mov
xchg
fisttpl
gs
mov
clc
imul
ja
arpl
pop
mov
xor
cltd
xor
cli
negb
mov
aam
scas
aam
es
sub
sub
fidivs
or
mov
decl
push
pop
dec
js
sti
xchg
ret
pop
and
and
pop
sarb
test
sub
stos
test
dec
cmpsl
fwait
xchg
mull
pop
and
testb
inc
pop
adc
mov
ljmp
mov
jne
jl
dec
stos
mov
cltd
test
bound
imul
out
sbb
add
jnp
sub
jae
dec
push
jle
hlt
push
aaa
insb
fdiv
pop
add
jb
sahf
mov
addr16
adc
xchg
cmp
arpl
not
sub
mov
daa
or
shlb
dec
aam
lods
cmp
popa
jp
insb
mov
sbb
cmc
pop
xlat
scas
cmpsb
iret
in
pop
lahf
lods
sahf
setnp
enter
gs
add
mov
in
psubsw
dec
mov
push
pop
xchg
or
icebp
jne
test
push
xor
mov
fdiv
xor
cmp
in
ljmp
jne
mov
jb
jmp
mov
cs
mov
loopne
sti
ljmp
aas
loope
inc
icebp
mov
mov
in
push
mov
adc
aam
mov
ss
roll
pop
sub
mov
out
cmp
add
xlat
stos
lret
stc
dec
adc
jb
divl
ret
int3
outsb
push
cltd
hlt
stc
jmp
das
sahf
xlat
push
mov
jmp
andl
pusha
sbb
mul
insl
mov
lea
data16
or
or
push
mov
sarl
or
aam
jmp
shll
mov
mov
ds
pop
lds
cmp
xor
outsl
ds
and
ficoml
jmp
fildll
adcb
xchg
repz
push
fidivrl
aam
pop
add
xchg
scas
stos
mov
mov
and
jle
pop
xchg
jl
hlt
push
jne
or
in
sub
sub
mov
outsl
leave
xchg
xchg
aaa
xor
dec
ja
das
pushf
aam
out
adc
mov
sub
scas
sub
xchg
leave
sub
insl
imul
push
and
xchg
xchg
xchg
daa
ss
imul
idivb
mov
lret
sub
jo
xchg
js
adc
movsb
jns
and
adcl
call
test
andb
out
cmp
pop
pop
lret
mov
cmp
enter
push
push
ficomps
add
cmpsb
mov
mov
dec
sbb
popa
lret
movsl
or
sub
or
lea
int3
cs
out
mov
jno
jl
lret
iret
aad
dec
aaa
adcl
stos
shlb
aam
and
aas
xor
xchg
push
xor
mov
adc
incb
pop
ds
sub
daa
test
jecxz
js
hlt
cmp
or
mov
dec
mov
mov
mov
imul
pop
pop
ljmp
mov
add
xor
xor
sub
push
xchg
test
lret
jb
mov
shll
cmp
sub
into
xchg
jge
jp
xor
sub
inc
inc
leave
sbb
inc
xor
sbb
sbb
dec
jge
or
and
cmpsb
pusha
pop
pop
dec
js
mov
roll
stos
mov
pop
je
das
iret
pop
mov
daa
push
jge
mov
out
clc
out
out
adcl
xchg
xor
bound
out
or
adc
repz
lfence
push
fldcw
arpl
shrb
xchg
or
pop
cli
sbb
and
jmp
bound
jo
jg
stos
cmpsl
addr16
int3
fstl
andb
cmpsb
jecxz
popf
push
sub
dec
pop
push
lahf
push
sbb
add
call
mov
mov
jae
pushf
js
add
sbb
hlt
shl
push
repnz
pop
push
mov
mov
xchg
cmp
icebp
mov
dec
inc
mov
and
add
call
lods
inc
shll
je
cmpsb
arpl
and
dec
stos
aam
int
mov
add
rolb
xchg
dec
fstp
out
lods
dec
push
mov
xchg
stos
fnstenv
mov
dec
aad
fmull
add
and
arpl
scas
jnp
dec
aam
pop
mov
jp,pn
inc
cmp
mov
pop
or
insb
adc
je
jo
pop
lods
xacquire
push
int3
adc
push
call
scas
xor
mov
and
stos
mov
and
jge
inc
fnstcw
mov
inc
jle
xchg
add
lds
push
sbb
div
repnz
bound
out
mov
cs
pop
fisttps
movsb
rorb
pushf
aas
push
dec
cli
xor
sbb
rcr
xchg
test
cmpsb
ss
mov
dec
sub
les
in
xchg
mov
mov
arpl
dec
in
nop
shrl
enter
jecxz
xor
dec
sarl
lea
add
outsl
les
imul
lcall
jp
sbb
aas
dec
dec
orb
inc
and
pop
nop
aad
xchg
out
out
pop
aas
loop
out
out
add
test
mov
xorl
jl
fidivl
push
cltd
mov
push
cli
in
int3
mov
cmp
sarl
cmp
aas
or
xchg
imul
leave
jne
fwait
or
add
sahf
movsb
lret
loopne
lea
lods
pop
rcr
mov
ficoml
sub
cmp
loope
gs
movl
push
jl
imul
cmp
dec
add
out
mov
xor
popa
cltd
jns
scas
xor
in
sahf
rorl
mov
and
mov
out
mov
test
mov
xchg
inc
or
daa
sahf
sub
call
xchg
popf
cmp
cmp
push
inc
lahf
xchg
mov
add
adc
jl
imulb
loope
mov
repnz
inc
fstpl
mov
es
mov
in
or
cmp
jg
ror
pop
mov
push
xorl
fcoml
cwtl
cld
jmp
mov
push
imul
xor
ds
loopne
dec
push
sub
cmp
xchg
clc
popa
inc
out
int
and
push
sbb
xor
roll
push
das
fwait
mov
or
ret
ja
ret
push
cmp
test
inc
cmpsl
xor
add
xchg
push
sti
mov
test
jne
inc
enter
test
pop
mov
sahf
jecxz
sbb
xchg
dec
test
ljmp
decb
ds
in
movsl
cmc
mov
mov
or
add
lret
mov
loopne
into
jnp
cmp
das
pop
lea
push
mov
arpl
pushl
movsl
mov
mov
popf
dec
mov
fmuls
aas
pop
jo
adc
push
add
push
out
inc
add
jns
hlt
mov
xor
fisubrs
mov
xchg
mov
xchg
push
mov
xlat
stos
sub
in
sub
and
test
jecxz
jmp
out
outsb
out
ficoms
cmp
leave
or
push
call
inc
das
mov
or
ljmp
loop
push
jo
cmp
lock
push
mov
ret
mov
loopne
mov
movsb
or
rcrb
lock
out
push
sbb
xchg
mov
xchg
xchg
aas
cli
xchg
sub
pop
add
in
mov
aaa
shufps
ja
sti
inc
mov
xchg
ljmp
ret
int3
push
sbb
or
sar
and
int3
movsl
out
loopne
stc
lret
pop
popa
test
shr
scas
add
call
lods
mov
insb
pop
insb
push
fildll
mov
pop
xlat
loopne
outsb
pop
jl
mov
sub
fisubrs
ficoml
xor
ret
xor
out
xchg
xor
xchg
sahf
leave
mov
inc
leave
sbb
cmp
dec
in
dec
ret
jb
or
cmp
and
dec
xchg
in
push
ror
sub
xchg
xchg
add
lahf
inc
testb
inc
scas
jg
lods
out
push
mov
mov
xchg
fldt
hlt
les
push
lods
cmp
incl
cmp
jno
push
or
das
pop
sbb
xor
rorl
aas
test
sub
xchg
pop
mov
stos
jns
das
stos
ret
cltd
inc
sbb
add
out
jb
add
or
jo
inc
or
rcr
mov
data16
cltd
cmp
iret
idivb
add
adc
pop
pusha
cmp
dec
hlt
inc
jl
lcall
clc
decb
fwait
mov
dec
notb
sbb
jle
lea
lahf
or
push
mov
divb
xchg
sbb
push
popa
lahf
sbb
adcb
or
loope
add
loope
in
mov
push
lret
pop
decl
fisttpll
iret
in
ljmp
inc
pusha
sbb
aaa
jo
adc
xor
sbbb
not
sub
loop
add
movsb
cmp
cltd
out
mov
add
xorb
outsb
inc
cmpsb
push
cmc
aam
adc
dec
cmp
out
outsl
mov
push
mov
imul
mov
es
arpl
add
mov
fisttpl
aas
mov
add
lret
jb
pop
sbb
mov
mov
mov
in
add
mov
cld
test
iret
cmp
and
pop
jmp
adc
ds
lods
enter
shrl
mov
stc
arpl
mov
out
int3
out
mov
in
ljmp
cld
sahf
mov
enter
rcrl
jns
cmc
lret
jg
jns
pop
pop
out
inc
xchg
es
std
sub
pushf
outsb
pop
or
push
stc
jp
jmp
movq
fs
sbb
inc
adc
daa
outsl
ja
jle
xchg
and
and
xor
mov
mov
mov
int
pusha
xchg
roll
pop
hlt
ja
insl
sub
and
pop
adc
cld
les
insl
data16
dec
and
icebp
mov
cwtl
in
in
cmp
dec
movsb
js
sub
cmp
lret
cwtl
inc
arpl
out
push
negl
adc
fimull
push
test
jle
or
cmp
push
cld
enter
push
add
inc
add
adc
lcall
inc
lods
test
out
inc
cmc
sti
hlt
pop
outsl
sbb
ret
pop
or
fst
imul
in
arpl
xchg
js
pop
add
add
int3
mov
dec
mov
mov
mov
inc
dec
mov
outsl
test
es
cli
rolb
fisttps
dec
push
rcrb
imul
lret
cltd
mov
das
cmp
pop
sbb
in
jbe
inc
fisubl
cmc
lcall
cmpsl
mov
test
in
sahf
popa
cmp
mov
xor
xchg
adc
jp
setne
sub
push
fcmovnbe
jb
push
fadds
clc
xchg
jns
sub
xor
sbb
aaa
pushl
ds
fcoml
in
pushl
add
out
stos
adc
jns
cmp
dec
sub
xlat
into
xchg
cmp
daa
adc
xchg
into
fwait
mov
leave
int3
add
jl
jno
push
jp
push
int3
and
addr16
gs
jmp
imul
outsl
pop
and
cmovbe
mov
sbb
cmpsb
sub
mov
in
push
leave
lret
add
push
leave
mov
sbbb
fnstcw
fistps
ljmp
loope
mov
or
leave
mov
cwtl
cmpl
ljmp
cmp
movsb
inc
mov
in
mov
dec
adc
hlt
mov
aam
xchg
add
frstor
pusha
std
aaa
push
jno
push
xchg
mov
jmp
repz
inc
push
outsb
stos
repz
push
arpl
pop
movl
faddl
pop
ljmp
or
jne
mov
mov
pop
int
std
test
mov
hlt
cltd
mov
int3
pop
jno
repnz
mov
bound
lock
cmp
dec
pop
push
sbb
sub
push
imul
xchg
sub
jmp
jle
xor
inc
cmp
mov
rorb
scas
push
js
ja
filds
mov
xor
ret
insl
jne
aaa
js
lds
roll
lret
add
pop
mov
jno
inc
pop
out
xchg
clc
cmpsl
out
mov
jle
cli
lock
mov
fdivl
sarb
inc
test
in
push
or
scas
mov
jg
loopne
mov
fsubp
lahf
push
popa
push
lret
mov
fdivrl
das
xor
mov
mov
xchg
jmp
sbb
andb
loop
adc
sbb
mov
mov
cmp
les
clc
adc
and
out
ror
xchg
mov
xchg
loop
ljmp
aam
imul
jge
xchg
jg
shlb
cmp
adc
xor
or
sbb
xchg
fisttpll
popa
pop
test
outsb
dec
les
push
cmc
xorb
das
xchg
in
lds
mov
arpl
icebp
imul
cmpsb
cwtl
cmpsb
out
xor
fnstcw
pmaxub
push
xor
inc
pop
addr16
inc
repz
mov
lret
and
lock
xor
fisubl
jp
insb
data16
push
xchg
push
or
stc
push
out
fnstenv
loopne
inc
dec
mov
jnp
add
roll
lds
or
sub
adc
pushw
daa
push
xor
outsb
test
push
mov
loop
xlat
mov
inc
mov
movl
lea
out
pop
js
push
mov
jg
sub
mov
icebp
out
push
ret
out
add
mov
shlb
stos
mov
or
test
popf
sbbb
or
aad
stos
push
xor
xchg
mov
push
dec
xchg
sub
add
lret
jb
jp
dec
mov
pop
sahf
clflush
mov
iret
outsb
jle
push
lahf
push
cs
fimuls
jg
outsl
mov
sahf
clflush
mov
iret
outsb
jle
push
lahf
push
cs
fisttpll
jg
outsl
pop
lcall
fistps
addr16
jp
push
lahf
pop
scas
pop
repnz
data16
outsl
mov
mov
scas
aas
ds
dec
fbld
cwtl
jns
xchg
jo
inc
rcll
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
dec
inc
pop
ja
addr16
fs
jae
or
cmp
int3
fdiv
in
out
xchg
mov
mov
jbe
addr16
or
sbb
sub
cmp
int3
mov
xchg
mov
mov
ja
addr16
or
sbb
sub
cmp
fs
fcoml
leave
out
repz
fmulp
mov
cmp
aaa
sub
int3
notb
push
push
aam
mov
adc
loopne
sub
add
lret
or
adcl
or
mov
and
and
stc
js
mov
adc
dec
js
push
adc
orl
and
lea
xor
loop
nop
pop
inc
fists
mov
sub
mov
add
ja
aam
cmpsl
push
lods
xor
jmp
wbinvd
aaa
cmp
mov
cmpsl
adc
cmp
pushf
out
pusha
xor
xor
or
test
jns
xchg
iret
pop
loope
sub
push
jecxz
xchg
mov
inc
pop
ja
addr16
or
sbb
sub
cmp
int3
fdiv
in
out
xchg
mov
aad
and
pop
sbb
bound
bound
mov
test
out
fisubrl
add
add
jb
arpl
pop
pop
cmp
mov
test
fsubr
hlt
mul
leave
mov
unpcklps
sbb
pop
sbb
sub
cmp
int3
fdiv
in
out
xchg
mov
mov
ja
addr16
or
sbb
sub
cmp
int3
fdiv
in
out
xchg
mov
mov
cli
fidivs
mov
shrb
xorb
xchg
jg
cltd
test
outsb
je
enter
mov
mov
cmpsl
add
fisubs
push
adc
add
xchg
inc
arpl
adc
or
popf
push
sbb
pop
ja
jo
jecxz
sub
or
test
push
sahf
jle
pop
imul
rcll
adc
mov
out
jb
mov
mov
cmp
fs
push
xchg
stos
sti
sub
push
inc
jg
js
pop
js
xor
pop
pushf
add
outsl
out
jmp
mov
bound
add
arpl
mov
xchg
jecxz
fidivrs
and
out
and
imul
and
pop
jmp
cmp
push
add
dec
adc
jae
outsb
ljmp
cmp
frstor
xchg
dec
add
mov
cmc
shlb
add
dec
mov
mov
in
stos
add
out
xchg
dec
add
jg
jae
shl
movsl
or
daa
xchg
sahf
add
add
add
sub
and
nopl
pop
lret
push
and
aas
call
xlat
mov
fldenv
pop
xor
xor
jge
xor
inc
sub
sarl
mov
jne
pop
in
imul
pop
jecxz
cwtl
mov
xchg
push
scas
pop
mov
daa
or
dec
outsl
push
out
adc
lcall
imul
xorb
mov
pop
test
pop
pop
stos
cwtl
rclb
insb
pushf
mov
jecxz
mov
ret
and
add
rorl
outsw
adc
jae
arpl
mov
push
sbb
push
cli
xchg
mov
jg
jns
lds
fnsave
out
stos
mov
inc
sbb
xchg
mov
pop
mov
xchg
shrb
inc
dec
test
pop
into
mov
stos
fnstenv
pop
jecxz
in
cmpsb
or
icebp
mov
xchg
rcrb
xor
adc
cmp
adc
cmp
and
cltd
insl
dec
aam
inc
call
test
test
stos
add
cltd
pop
xlat
lcall
push
xchg
add
mov
insb
mov
hlt
xor
mov
xchg
or
fdivl
data16
lock
xorb
dec
push
cmp
sbb
inc
mov
dec
jnp
sarb
cmp
jb
and
jl
dec
sbb
and
pushf
cmp
clc
ret
mov
dec
push
imul
sub
sbb
xchg
psubsb
cmp
scas
push
push
mov
cmp
sbb
or
loope
cmc
adc
sbb
sub
xor
or
fxch
xchg
shl
cmp
js
push
mov
rorl
sbb
cmp
push
sub
push
loope
imul
jno
inc
push
dec
daa
xchg
pop
mov
adc
mov
out
mov
insl
std
rorb
push
leave
and
push
dec
xor
cmp
jb
test
jle
out
sahf
cmp
mov
xchg
int
ds
cmpsb
popf
call
cmc
xchg
sbbb
dec
out
imul
sbb
mov
sbb
mov
fstps
stc
add
add
push
popa
mov
mov
inc
jp
mov
shrl
or
sti
gs
cmp
add
adc
mov
dec
in
cmpsb
push
xor
movsb
and
enter
jnp
inc
outsl
inc
test
cmc
mov
mov
ja
push
sub
scas
adc
jge
mov
icebp
jns
test
adc
std
xlat
mov
push
pop
lea
repnz
mov
jnp
in
mov
mov
xchg
daa
add
mull
lea
imul
sub
test
xor
in
lret
jmp
push
pop
addr16
mov
jno
jecxz
mov
pop
push
out
mov
xor
inc
cmpsl
mov
or
pushl
mov
jge
push
inc
mov
das
fs
cld
mov
inc
sar
dec
xchg
xchg
addb
pushf
inc
xchg
out
pop
div
cmp
xchg
add
aam
mov
jge
dec
pop
fidivl
shrl
imul
mov
xor
inc
mov
add
add
mov
scas
leavew
inc
sub
or
mov
cmpsl
movsl
clc
mov
fwait
insb
push
cwtl
push
mov
xor
jp
dec
cmpsl
add
std
pop
stos
and
fsubr
push
sbb
jo
pop
mov
incl
jo
inc
push
insb
sbb
push
xchg
jns
sarb
mov
mov
les
inc
sbb
repnz
sbb
add
addb
sub
and
xor
aaa
ret
jns
cmp
cmc
mov
push
fidivrl
cld
sbb
outsl
inc
imul
popf
mov
sbb
imul
outsb
xlat
jg
mov
xchg
jle
inc
aam
push
push
adc
insl
and
xor
lahf
add
ds
rclb
jle
repnz
dec
test
sub
in
mov
dec
pop
cli
push
out
inc
sbb
mov
sbb
in
fs
mov
adc
push
mov
push
fildl
scas
pop
call
xchg
dec
or
cwtl
cmp
aas
addl
enter
cmpsl
fiaddl
sbb
lods
mov
mov
mov
jge
and
xlat
fwait
aaa
sub
mov
cmp
sbb
in
xor
mov
mov
cmp
push
push
lods
push
pop
popl
imul
xchg
xor
xchg
lods
add
adc
arpl
leave
lds
test
dec
or
pop
fwait
push
cmpsb
js
hlt
xor
cmp
inc
xchg
sbb
mov
in
mov
cltd
in
dec
lea
cmp
insb
xor
jne
pop
jp
cmp
in
xchg
repz
push
iret
shlb
add
icebp
jnp
dec
dec
push
cli
mov
fs
cmpsl
movsb
jne
mov
inc
xchg
and
popf
faddl
mov
into
jbe
inc
fwait
arpl
popa
leave
ret
orb
in
iret
inc
xor
fidivs
out
push
in
hlt
ds
pop
out
repz
push
and
mov
imul
cmp
jmp
popa
adc
lds
pop
push
and
mov
adc
mov
das
jg
cwtl
daa
aad
loop
in
push
pop
mov
not
icebp
xor
inc
sbb
iret
popl
sahf
dec
cld
push
movsl
push
add
sbb
inc
cmp
inc
push
xor
mov
insl
mov
cld
cmp
xor
sbb
cmp
dec
or
icebp
out
jl
ljmp
mov
cmp
pop
cmc
jg
scas
adcl
mov
cmp
cld
decl
movsb
bswap
inc
in
jg
mov
mov
jns
adc
inc
enter
arpl
push
adc
mov
cmp
inc
shlb
sub
sub
into
jnp
insl
add
pushl
dec
jne
rorb
sbb
push
das
loop
jbe
xchg
clc
dec
movsl
dec
mov
inc
xchg
repnz
or
out
cmp
stc
jl
push
fdivs
and
jo
fsubs
xchg
inc
push
dec
and
into
dec
aas
cld
jns
push
pop
inc
xor
push
pop
loop
sti
cmp
or
lods
out
or
push
ror
pop
dec
scas
subb
adc
imul
int3
je
int
cs
repnz
sub
ss
adc
filds
ret
push
outsb
cli
pop
sub
mov
mov
movsb
or
aam
mov
adc
jg
fs
insb
out
dec
add
out
fnstcw
cmp
mov
in
fstl
and
imul
mov
add
fwait
nop
mov
aas
out
sahf
sub
imul
mov
cmp
xchg
mov
cmp
inc
faddl
jb
lods
test
add
sahf
ja
xchg
sbb
push
sti
les
ja
pop
in
jle
mov
pop
rolb
outsb
adc
mov
xor
pusha
outsl
adc
sub
pop
jmp
mov
pop
inc
pushf
jl
mov
fnstsw
adc
cmpsl
fldt
outsl
rclb
fcmovnb
call
mov
xchg
cmpsl
fwait
sub
mov
jmp
inc
dec
fmulp
add
gs
xor
push
or
jle
or
pusha
adc
scas
or
popf
adc
dec
mov
push
add
fisubl
loope
shlb
add
sbb
ret
ljmp
dec
rcl
cmp
int3
add
pop
push
mov
daa
aam
push
insl
jmp
add
sub
sti
stos
loopne
sbb
in
scas
enter
loop
insb
fldcw
inc
mov
pop
xchg
cmpsl
inc
cmp
and
push
sbb
pop
or
dec
sub
cli
push
push
mov
in
inc
aam
lods
and
jl
sub
mov
push
hlt
ficoml
adc
mov
mov
insb
les
addr16
imul
out
add
ret
mov
in
mov
push
mov
rclb
cs
sbb
mov
lock
addr16
cmp
mov
jno
lahf
jo
rcrl
jbe
mov
arpl
ja
cmpsl
cltd
popa
inc
insl
loope
mov
lods
xchg
outsb
sub
adc
jb
outsl
push
pop
mov
dec
movsb
cmp
xor
xchg
pop
repnz
pop
jecxz
inc
push
into
ffree
das
or
xor
cltd
outsl
adc
int
ja
outsb
fcoms
xchg
push
sbb
cmp
mov
push
test
xor
les
mov
test
scas
mov
cmc
stc
sti
pusha
lcall
pop
push
cmpsl
repz
push
pop
and
and
lahf
xor
adc
and
mov
sub
addr16
and
movsl
fsubs
or
mov
lret
xor
jae
imul
popf
adc
push
into
add
mov
aaa
imul
mov
test
pop
leave
add
sub
add
arpl
dec
mov
cmc
out
inc
inc
xor
dec
clc
xchg
test
imul
fstps
stc
orl
xchg
data16
std
add
enter
or
or
xor
jb
push
lcall
cld
fstpl
mov
pop
or
stos
arpl
imul
cmp
push
jp
ficompl
cmp
jae
xor
xchg
mov
add
sub
orl
std
sbb
lret
fucomi
arpl
cwtl
setns
std
ljmp
mov
push
hlt
daa
je
nop
rcll
pop
movd
mov
cmc
fimuls
mov
or
pop
dec
cmovle
mov
push
push
les
test
push
sbb
sub
jmp
divb
sar
xor
in
mov
addr16
in
movsb
das
rcrb
xlat
mov
jbe
das
les
std
lods
push
jmp
and
xchg
adc
cli
cld
adc
jns
stos
mov
pop
xchg
loopne
mov
leave
inc
rorl
mov
adc
in
das
lds
fcoms
cli
xchg
pop
mov
ss
adc
test
aaa
push
call
test
add
lock
push
xchg
adc
pop
push
jg
push
and
sub
fsubs
call
ss
adc
lods
sbb
pop
test
movsb
mov
das
cli
and
imul
enter
andl
sub
mov
lea
jnp
xchg
and
inc
mov
cmpsb
pop
fcmovne
stos
inc
or
aam
and
ret
iret
sub
lret
insb
mov
test
add
lret
xor
test
inc
cmp
rclb
jno
in
lcall
inc
adc
cmp
mov
aaa
adc
out
ror
fucom
inc
or
sub
sbb
mov
fidivl
or
dec
out
mov
push
cltd
mov
clc
or
idiv
mov
jne
cltd
mov
pop
and
out
dec
jo
and
pop
and
shrl
aad
stos
xlat
jecxz
jg
xor
aaa
outsb
out
mov
sub
dec
xchg
js
fidivrs
jg
pushf
gs
mov
pop
xor
xor
mov
outsl
mov
mov
jae
inc
outsl
lret
lret
cltd
pop
xchg
push
mov
add
addr16
ljmp
xchg
mov
es
mov
jno
push
out
jg
popf
jne
pop
inc
push
xchg
inc
sub
mov
mov
or
mulb
inc
pop
mov
cmp
jnp
mov
mov
js
icebp
and
jne
mov
icebp
mov
mov
and
cs
pushf
movsl
sti
add
push
loopne,pn
mov
pushf
mov
xor
mov
push
jns
and
mov
pop
or
test
xor
xchg
jl
movsl
adc
pop
mov
mov
inc
inc
testb
int
cltd
mov
popf
mov
add
mov
daa
inc
push
sub
cltd
inc
jbe
sub
ja
cmp
mov
mov
jp
data16
scas
bound
pop
lods
inc
hlt
dec
push
sub
jno
fwait
das
std
stos
xor
idivb
dec
mov
push
and
pop
imulb
xchg
movsl
aam
hlt
out
in
cmpsl
bound
mov
adc
data16
in
adc
mov
ret
hlt
jbe
in
dec
add
sarl
call
in
out
insb
inc
mov
sbbl
or
jb
xchg
lret
mov
xchg
add
push
cmp
repz
jecxz
rclb
bound
jecxz
sti
jmp
clc
sub
cmc
shr
dec
movsl
jle
addr16
sbb
int
adc
dec
cwtl
sub
in
fisubl
lea
and
movsb
jae
cmp
and
sbb
push
lea
test
mov
sub
je
xchg
icebp
mov
xchg
into
ss
dec
mov
fcomp
leave
lret
adc
nop
mov
test
mov
loop
sbb
inc
loop
hlt
pushf
inc
sahf
ljmp
push
jmp
and
pop
sub
mov
pop
sbb
fcompl
mov
cs
mov
adc
aas
push
push
aas
xchg
sbb
popa
xchg
mov
xor
xor
xlat
add
xchg
mov
lcall
xchg
xchg
jns
loop
dec
orl
stos
test
jb
push
and
es
jno
imul
mov
outsb
out
js
imul
loopne
stos
adc
lods
sub
pop
push
fldl
lahf
mov
mov
xor
lods
mov
popl
subb
pop
nop
push
in
and
inc
lock
sahf
js
and
sti
lea
or
jge
lock
xor
or
pop
ret
lods
mov
dec
dec
fidivl
cwtl
fwait
or
xchg
pop
mov
mov
jnp
xchg
jge
decl
loopne
arpl
call
mov
cmp
adc
sub
mov
xor
daa
inc
mov
cmpsw
adc
jbe
mov
sti
mov
scas
mov
cli
in
push
in
mov
ds
jno
aad
and
push
mov
inc
dec
nop
pushf
data16
lahf
leave
das
jne
mov
jg
mov
out
dec
daa
add
in
aaa
jne
lds
sbb
inc
mov
push
mov
push
pop
ss
loopne
fcompl
xchg
sbb
pop
lds
jp
mov
fimuls
push
popa
xchg
fimull
in
jg
xchg
lahf
cld
loopne
mov
jge
ret
sarl
or
ds
cld
push
mov
leave
fldt
scas
ljmp
sub
out
fdivs
shr
sub
scas
stos
xchg
out
mov
sbb
and
mov
jno
daa
imul
xchg
add
sti
jge
incl
lcall
adc
ret
or
sub
int
jp
cmp
pop
dec
popf
sub
cmp
outsb
movsl
std
pop
adc
jmp
repz
lods
adc
add
outsl
aaa
mov
decl
mov
xchg
fmulp
cmpsl
loopne
mov
movsl
adc
jg,pt
xchg
dec
stos
arpl
pushl
jmp
fisttpll
sub
fsub
testl
aam
pop
xchg
loop
icebp
xorb
mov
psubusb
mov
xor
in
shrb
push
xor
lahf
test
mov
push
mov
mov
testb
cld
mov
es
fsubrs
dec
dec
adc
int
push
cmp
in
cli
cmpl
ficoml
lret
or
xor
pop
outsb
lahf
jg
or
mov
pop
jecxz
lret
cmc
xchg
pushf
add
xchg
inc
push
scas
xchg
and
push
icebp
leave
mov
add
mov
inc
cmc
cmp
dec
pop
arpl
xor
gs
adc
adc
cs
outsl
or
xchg
sub
inc
cmp
gs
pop
leave
sub
sub
dec
je
imul
test
mov
and
negb
xchg
ret
lret
sub
lock
jmp
lds
mov
sbb
push
ss
repnz
add
mov
add
jmp
pop
push
lret
jge
imul
ret
pop
inc
adc
adc
fcoml
lahf
dec
sbb
das
lret
sub
stos
movsb
push
lods
push
cmpsb
inc
aam
fmuls
pop
and
inc
cmp
and
cmpsl
popa
adc
xchg
add
and
out
xchg
addr16
add
shlb
decl
dec
addr16
fwait
xchg
mov
enter
ds
adc
mov
fdivrl
int
clc
dec
gs
or
outsl
stos
scas
pop
jge
add
xchg
lock
cmp
movsb
xchg
add
ret
pop
mov
pop
cmp
pop
and
imul
add
out
lahf
pop
icebp
jp
add
xchg
push
mov
xchg
cmp
inc
adc
mov
int
popa
in
pushf
jle
push
fmull
pop
loop
or
push
test
jo
fmull
flds
xchg
xchg
loop
fnstenv
jecxz
and
sub
sbb
pop
lcall
cmp
shrl
scas
cwtl
cmp
mov
sub
scas
add
sub
jno
xchg
push
jne
sub
push
lds
xchg
out
in
fistpll
iret
leave
negl
cmc
inc
xchg
imul
push
inc
ret
stos
iret
out
mov
bound
out
movsb
loop
adc
mov
dec
xor
clc
pop
dec
and
clc
cmp
pushl
es
pop
out
adc
lret
pop
or
je
mov
cmp
push
test
ret
test
ds
mov
out
or
inc
scas
lea
imul
les
fs
aaa
xchg
add
jbe
addl
repnz
daa
jns
jno
lods
ds
daa
and
adc
hlt
out
xchg
lds
fistpll
mov
add
mov
mov
dec
outsb
jmp
fs
sbb
xchg
pop
cwtl
push
xor
pusha
xchg
inc
mov
sbb
popa
mov
lcall
loop
dec
movsl
stc
pop
dec
mov
pop
fidivs
and
push
insb
dec
sbb
cmc
or
gs
lcall
mov
icebp
stc
scas
dec
push
repz
js
sub
push
add
xlat
pop
leave
xchg
pop
popf
mov
push
lret
sub
in
xchg
adc
dec
jmp
popa
ror
loopne
sahf
icebp
or
xor
mov
jns
out
sbb
clc
xchg
adc
xchg
popf
push
iret
sub
jmp
ret
test
adc
inc
daa
arpl
xor
xchg
xchg
push
popf
xchg
cltd
loope
lods
xor
jmp
mov
mov
fwait
and
and
inc
int3
inc
xchg
lcall
lds
scas
xchg
and
imul
iret
inc
xor
add
into
and
mov
jbe
jle
cmp
fs
pop
mul
dec
sahf
xchg
arpl
cmp
gs
xlat
dec
out
add
jg
push
gs
jbe
imul
pop
sbb
pop
mov
pop
xchg
sub
mov
cs
int
in
mov
fs
xchg
or
bound
sub
pop
dec
or
mov
adc
ficompl
push
mov
data16
addr16
or
sbb
sub
cmp
int3
fdiv
in
out
xchg
mov
mov
ja
addr16
or
sbb
sub
cmp
int3
fdiv
in
out
xchg
mov
mov
ja
addr16
or
pushf
aaa
sub
cmp
dec
fdiv
in
out
xchg
mov
mov
jbe
addr16
or
sbb
sub
cmp
int3
jbe
in
out
loopne
packsswb
pop
inc
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmc
jl
insb
aad
lds
aad
lock
loopne
jne
gs
push
faddl
xor
pushf
add
insb
aad
lds
movsl
sub
sbb
or
cld
gs
and
inc
int3
xor
pushf
add
insb
aad
lds
movsl
sub
sbb
or
ret
lods
imul
out
inc
enter
mov
mov
cmc
cli
movsl
in
push
pop
jle
mov
mov
fwait
mov
pop
inc
inc
jle
pop
sub
dec
dec
mov
les
rcrl
inc
dec
mov
fadd
int
jl
daa
adc
sti
jo
imul
jmp
mov
call
cmp
adc
mov
lds
mov
cmp
in
pop
jne
jne
fsubs
arpl
lret
out
dec
cld
adc
loope
nop
mov
cmp
rcll
cltd
in
inc
and
mov
popf
adc
or
fstl
mull
xlat
push
mov
fadds
int3
or
pop
adc
jl
insb
aad
lds
movsl
sub
sbb
or
cld
gs
push
faddl
xor
pushf
add
mov
fsts
insl
lock
jl
nop
popa
test
mov
mov
push
push
push
jmp
test
repz
leave
add
mov
add
addr16
sbbl
mov
movsl
sub
sbb
or
cld
gs
push
faddl
xor
pushf
add
insb
aad
lds
movsl
sub
sbb
or
cld
gs
push
faddl
xor
pushf
add
jns
scas
loope
outsl
stc
or
sub
lcall
xchg
mov
pushf
imul
lods
sub
mov
xor
mov
scas
cs
lock
xor
clc
and
jmp
mov
insb
inc
add
jbe
add
lock
call
in
cli
shr
fldt
pop
jno
sbb
test
mov
jo
push
xchg
clc
and
cmpsb
push
imul
xor
xchg
mov
fidivs
inc
stc
test
adc
lret
inc
popa
add
imul
insl
fiaddl
jle
mov
sub
dec
das
inc
mov
jns
popa
int3
orb
and
xchg
lahf
and
or
test
pop
lods
sbbb
xor
cli
adcb
lret
or
jmp
pop
or
fldl
cmp
or
fadds
dec
loopne
mov
mov
pop
je
ljmp
rcrl
outsl
push
add
fnstenv
mov
jecxz
sbb
mov
sub
repnz
dec
loopne
shlb
mov
fcomp
dec
mov
ja
sti
lods
pushf
xchg
icebp
clc
sahf
push
adc
jo
jnp
jo
imul
or
mov
and
data16
push
imul
mov
loopne
lods
cmp
jno
decl
cmpb
sbb
mov
jle
in
or
dec
push
into
insl
dec
cmp
fwait
aaa
pop
xchg
mov
lock
fucomp
sbb
sbb
pop
inc
ja
int
stos
sbbl
scas
or
pop
inc
outsl
dec
push
movsb
push
rcrb
ds
jecxz
fs
mov
sub
loope
cmp
test
jne
mov
imul
aaa
mov
cmp
mov
sahf
inc
aad
mov
std
std
lahf
inc
mov
mov
fs
push
mov
pop
mov
lcall
cs
scas
or
add
enter
in
xor
into
std
repnz
mov
add
sub
jp
shl
aas
test
arpl
out
in
pop
fs
sub
add
mov
xlat
in
mov
cltd
mov
shl
dec
stos
jp
mov
inc
xor
int3
lret
fstpt
mov
mov
cmp
adc
dec
or
or
and
push
sbb
or
xor
imul
add
add
lahf
scas
push
xchg
dec
adc
mov
sbb
test
sbb
in
outsl
mov
hlt
dec
xchg
cmpsl
jb
or
andb
call
jecxz
fldt
aas
xchg
pop
jbe
loop
inc
push
lahf
jg
jne
add
les
jmp
jmp
fists
jbe
push
imul
dec
or
push
mov
fiaddl
scas
cs
ja
cmp
repz
aas
mov
cmpl
push
jmp
pop
rorb
outsb
bound
lahf
outsb
ret
mov
xor
mov
adc
test
out
xchg
outsb
jg
mov
and
pop
ret
xor
stos
xchg
pushf
jnp
sub
pop
cmp
gs
mov
ret
insl
or
jle
xchg
pop
push
pop
loope
ss
cmp
filds
hlt
adc
or
adc
inc
stos
sub
sub
inc
xor
repnz
jmp
mov
es
aaa
mov
cmpsl
mov
repz
jno,pt
push
jecxz
mov
frstor
pop
push
fwait
dec
test
out
psllq
std
push
adcl
out
lods
xchg
add
popf
jp
lret
lods
daa
push
in
mov
call
cmp
fisttps
cmpsl
mov
lea
xchg
sub
mov
push
xor
dec
push
test
cltd
mov
push
js
push
ja
outsl
in
out
pop
adc
int3
repz
loop
xchg
mov
stos
outsb
xor
jnp
and
leave
stc
xor
or
scas
xchg
into
push
ss
sbb
pushf
pop
addr16
or
mov
and
cli
mov
and
in
dec
ljmp
jle
mov
scas
sbb
bound
aaa
mov
sbb
xor
insb
lcall
sbb
mov
push
dec
out
hlt
dec
fmul
gs
jl
sahf
pop
ss
sbb
test
adc
sub
mov
sub
add
ja
adc
fidivs
dec
push
sarb
rcr
ret
dec
imull
out
pop
out
xchg
sub
call
lahf
mov
jmp
jp
xor
popa
jb
mov
push
fnstcw
cmp
sbb
sub
adc
ret
mov
cmp
hlt
arpl
shrl
cwtl
sbb
adc
fwait
outsl
push
add
clc
inc
push
int3
iret
mov
loopne
ret
xor
int
int3
mov
push
cmc
fldt
arpl
xor
loope
iret
mov
jle
je
jmp
xchg
sub
push
insb
pop
cmp
or
or
rclb
sbb
ss
xchg
dec
inc
or
pop
daa
xor
popf
sub
cmc
add
sub
mov
add
dec
cmpsb
mov
into
push
lahf
push
cmp
mov
sbb
bound
outsl
or
call
sub
xchg
mov
adc
jo
xchg
test
cwtl
aad
jnp
xchg
rcl
ret
jmp
movsb
in
pop
fldenv
data16
sbb
cmp
jae
pop
jg
call
outsb
fisttpl
adc
xor
mov
aad
std
addl
or
adc
push
and
pop
pop
xchg
scas
or
mov
sub
push
adc
pop
rclb
xor
push
cmpsl
or
add
or
jno
in
nop
cmp
cli
cmp
fs
int3
aas
sbb
sarl
mov
and
mov
orl
cltd
aas
cmp
loop
test
sub
xor
mov
push
cmpsb
stc
bound
jg
imul
push
cld
cltd
roll
cmp
stos
out
sti
xor
jo
sbb
sub
xchg
pop
out
fisubrl
jbe
loope
lret
stc
clc
jns
sub
push
mov
pop
popa
push
mov
insl
xchg
loop
mov
ja
jb
aas
mov
popa
xor
and
inc
inc
adc
and
insb
bound
fistps
inc
cmp
iret
add
rcrl
jne
stc
jne
cmc
jl
jg
sarl
dec
sbb
push
ret
aam
test
push
mov
bound
call
mov
mov
xor
add
sar
arpl
shlb
or
pop
mov
pop
addr16
cmpsb
adc
dec
and
leave
loopne
sbb
mov
add
stos
daa
or
movsb
mov
cli
insl
push
jae
loope
roll
jle
push
jecxz
mov
adc
out
enter
pop
xchg
push
xor
push
fidivs
outsl
lahf
xor
mov
nop
jp
out
dec
es
sahf
and
pusha
ret
jecxz
sbb
lea
sbb
mov
push
cwtl
dec
repnz
inc
jnp
pusha
test
out
bound
fmul
jle
mov
and
mov
int
std
pop
adcb
mov
push
roll
xchg
arpl
and
cmp
in
jmp
ljmp
out
sbb
jb
movsb
adcb
pop
aaa
inc
jecxz
insb
xlat
in
pop
cmpsb
inc
sbb
mov
jp
out
notl
arpl
pop
outsl
lret
lds
push
notb
outsl
ret
iret
ret
mov
dec
lea
adc
in
test
shll
sbb
pop
add
out
push
fwait
push
out
aad
stos
imul
mov
xchg
pop
fsubs
test
in
icebp
sbb
cmp
data16
jge
add
cmp
mov
xor
cmpsl
in
pop
cmpsl
inc
gs
fdivrl
jo
cltd
ds
out
nop
adc
jb
inc
mov
out
jle
sbb
ror
cmp
pop
mov
add
cmp
add
xlat
cmpsl
js
shr
mov
mov
mov
jnp
int3
addr16
in
push
dec
jno
dec
lret
or
xor
fwait
dec
dec
lret
fimull
fcompl
imul
dec
shl
mov
sbbb
pop
divl
xor
test
add
imul
mov
in
lcall
adc
cmp
enter
out
aaa
add
adc
pop
lea
adc
mov
xchg
mov
cmc
xor
cmp
aas
pusha
int
shlb
cmp
sbb
or
mov
sub
ljmp
xorl
mov
jp
incb
xor
xchg
icebp
mov
jnp
lcall
jg
js
cmc
test
or
pop
sbb
testl
jo
push
or
enter
jle
jp
ljmp
inc
xchg
pop
inc
mov
xor
shll
hlt
jmp
xlat
stos
fidivs
sbb
test
gs
sub
ljmp
outsl
repz
jnp
addr16
movl
in
or
xor
and
ljmp
or
dec
cld
inc
repnz
cld
stos
test
sub
and
sub
jge
dec
fs
rolb
and
mov
mov
add
ret
addr16
push
jle
dec
ja
inc
fs
call
xchg
mov
repnz
lea
push
adc
adc
js
leave
pop
lock
jge
inc
test
and
outsb
push
outsl
pushf
sub
xor
js
lods
enter
push
push
push
mov
dec
mov
cli
imul
push
add
and
dec
mov
leave
add
in
dec
mov
jge
xchg
loopne
icebp
push
fsubrl
test
movsb
pop
leave
xlat
xor
aam
sahf
mov
ficoml
jb
and
fimuls
mov
icebp
enter
mov
xchg
adc
mov
cwtl
and
mov
scas
xchg
cs
and
and
stos
sti
loope
push
add
jg
cmp
mov
pop
aas
cmp
sub
mov
sub
inc
sbb
lods
jg
aam
and
xor
loop
mov
rcrl
inc
fstpt
push
in
xor
outsl
stc
fs
adc
xchg
repz
sbb
nop
sbb
or
fistps
push
push
pop
mov
ljmp
cmp
pop
cmp
movsl
jp
sub
dec
add
dec
hlt
jo
ljmp
jp
push
in
xor
retw
push
or
mov
push
inc
incb
clc
int3
add
adc
in
popa
int3
fidivrs
push
inc
jecxz
fs
push
in
lret
dec
repnz
push
das
arpl
insl
mov
jae
les
rcl
xchg
jbe
dec
lds
adcl
flds
shlb
jnp
sub
ss
xchg
aaa
or
cmp
lret
ljmp
push
push
push
sbb
mov
adc
out
cwtl
dec
cmp
adc
call
movsl
ret
mov
jno
leave
mov
daa
sub
lret
mov
loope
faddp
les
xor
mov
mov
repz
add
clc
out
xchg
test
add
pop
adc
cmc
adc
or
mov
out
add
xor
mov
lret
call
dec
push
sub
iret
cmp
out
lret
orl
xchg
jg
popf
jo
movsl
insl
jmp
sub
add
fs
test
dec
sbb
in
jae
and
push
xlat
leave
cmpsb
and
mov
adc
sbb
pop
sarb
shrb
xchg
adc
lea
inc
mov
test
pop
jecxz
out
ljmp
inc
iret
xor
sub
dec
leave
int
push
push
mov
xchg
and
test
sahf
cld
mov
push
ret
xorb
aad
mov
cmp
dec
xorl
jnp
sub
ret
dec
push
or
mov
leave
cld
in
push
int3
shlb
add
xor
ficoms
insb
mov
or
mov
movb
cltd
jmp
xorl
mov
dec
jo
xor
shll
mov
sbb
das
dec
mov
mov
in
cmp
loop
std
jecxz
je
lahf
js
mov
popf
mov
repz
adcb
out
dec
lea
xor
inc
out
ret
jno
rorb
sub
xor
out
mov
and
nop
lcall
int3
stos
iret
jbe
jl
mov
jb
cmp
rcrl
sti
adc
and
test
mov
das
adc
sub
mov
push
jno
push
aam
and
ds
fldl
cmpsl
pusha
les
bound
pop
mov
adc
add
nop
push
lods
jp
mov
dec
cmpsl
mov
pusha
mov
mov
xchg
and
scas
in
mov
repnz
gs
insl
call
pusha
movsl
add
pop
ret
nop
rolb
push
sbb
fdivl
fistl
cmp
test
lea
das
data16
and
sub
adc
aam
jns
adc
daa
lods
jb
gs
mov
rcll
dec
cmp
clc
mov
sbb
pop
stos
arpl
add
ret
dec
dec
das
popa
sbb
mov
inc
sbb
ret
ljmp
adc
add
clc
push
leave
cwtl
outsb
jg
pop
inc
xlat
cmp
test
mov
aad
test
bound
fs
sahf
adcb
xchg
adc
adc
mov
push
rcr
imul
cli
lea
mov
xchg
xor
xchg
popf
sub
sub
pop
ret
shll
sub
pop
or
in
popa
out
xchg
or
jo
sbb
mov
dec
imul
sub
hlt
loopne
sub
movsl
sahf
mov
lcall
ret
jo
jmp
pop
fnstenv
and
mov
into
add
dec
mov
and
jle
dec
cmp
cmp
repnz
mov
mov
inc
push
scas
and
mov
ljmp
sub
mov
push
or
shl
and
scas
pop
xlat
clc
mov
cmp
mov
dec
pop
bnd
das
outsb
lock
lret
fnstenv
mov
adc
dec
sti
enter
iret
mov
lds
jb
outsb
pop
rorb
xchg
bnd
mov
rcrl
fucomip
and
xchg
inc
lds
mov
stos
cmp
push
xlat
sub
mov
pop
flds
pop
mov
adc
mov
fistpll
inc
and
test
nopl
and
xor
mov
mov
repz
iret
xor
in
push
mov
fs
out
pop
inc
rcl
cwtl
sub
or
in
int
mov
sarl
jno
inc
sbb
stos
out
in
add
shrl
ret
mov
ret
into
and
mov
pop
add
enter
nop
cmpsb
push
xchg
xor
sti
out
inc
sbb
sub
mov
or
push
mov
mov
outsl
cmp
divb
sahf
insl
jo
inc
sub
jne
ficoml
mov
push
inc
ret
or
ja
rol
ret
bound
mov
push
pop
dec
mov
popf
push
dec
add
movsb
cmp
jmp
ss
sti
mov
mov
xchg
je
fbstp
xor
arpl
or
xchg
mov
or
mov
ret
fstpl
adc
std
movsb
add
jne
pop
xor
jno
dec
adc
mov
rorb
flds
outsb
sub
int
addr16
fcmovu
xor
std
pop
js
mov
cmp
sub
or
or
dec
lret
mov
sbb
or
lods
nop
decb
lahf
outsb
ds
sbb
hlt
in
pop
push
subb
mov
repnz
pusha
lods
lds
js
or
sbb
fwait
in
not
sbb
inc
test
arpl
repnz
add
pop
stos
clc
dec
movsb
adc
sahf
cmp
dec
out
outsb
loop
mov
cli
and
push
pop
pop
mov
mov
fldl
mov
add
pushf
cli
jmp
pop
mov
pop
add
pop
lds
sub
mov
jle
int3
push
fwait
pop
rolb
mov
xchg
movsb
imul
daa
add
xchg
incl
cmp
sbb
movsl
push
clc
adc
scas
in
add
xchg
mov
out
add
aas
push
mov
nop
jmp
xchg
cmpsl
add
les
sub
add
mov
dec
clc
lods
or
jbe
cwtl
js,pt
shr
adc
out
push
scas
mov
pop
imul
sub
sbb
xor
sbb
aas
adc
sbb
xor
push
sub
rcrl
shlb
cmpsb
pop
jge
mov
adc
pop
mov
xor
mov
aaa
sarl
inc
lahf
repz
and
sub
adc
btc
adc
je
jmp
ficoml
fisttps
or
jmp
popa
mov
or
repz
fcoml
pop
xchg
pusha
or
repnz
jle
leave
mov
cmp
and
int
daa
negl
mov
aad
inc
out
push
inc
sbb
ret
sub
aas
sarb
jp
xor
or
call
xchg
sub
mov
in
je
or
sub
enter
in
lahf
mov
daa
and
stc
popa
scas
sarl
mov
sbb
ljmp
arpl
push
mov
add
dec
ss
scas
outsl
aaa
xor
repnz
loop
and
js
sti
out
xchg
aam
xchg
test
adc
addr16
stos
mov
cmc
mov
adc
ret
add
add
cmp
adc
testl
insb
aam
cmp
jle
pop
sbb
xchg
add
out
addl
arpl
dec
repz
hlt
adc
out
inc
popa
decl
gs
jnp
pop
out
in
jle
mov
int
scas
and
dec
test
inc
cmp
test
sbb
sub
xorb
cld
rcrb
mov
test
cwtl
iret
fidivl
repz
adc
mov
in
in
fstpl
sub
rolb
pop
sub
bound
stos
xchg
adc
mov
insl
pusha
sti
mov
std
xchg
inc
cld
mov
and
sub
aas
xorb
xlat
fwait
ret
and
jbe
push
xchg
fcom
xor
xchg
xor
rclb
lret
or
add
dec
cmp
push
fnstsw
das
cmp
ja
lods
fwait
jne
aam
pop
cmpsb
mov
or
divl
xor
aad
insb
in
xor
subb
cmp
repz
sub
es
mov
arpl
jbe
flds
pusha
pop
mov
cli
fldenv
xor
das
fiadds
int3
pop
push
inc
es
aaa
nopl
test
add
sbb
dec
xchg
nop
addb
repnz
inc
jns
sbb
xchg
mov
imul
in
mov
je
in
xchg
sub
fcoml
mov
jb
jg
popf
or
inc
add
sar
pushf
loop
jle
jbe
pop
sbb
andl
aam
in
mov
pop
std
lret
es
jbe
ret
mov
stc
int3
cmp
lret
push
push
mov
push
mov
mov
pop
stos
push
push
push
je
insl
jo
and
into
adc
xor
test
fdivs
mov
inc
gs
ja
mov
outsb
lds
add
leave
inc
mov
and
jle
dec
xor
xchg
sarl
cmpsl
leave
or
mov
dec
mov
xchg
and
mov
mov
sbbb
les
jp
pmuludq
bound
sti
idiv
and
mov
xchg
jmp
gs
mov
push
andl
mov
push
cmp
arpl
sub
push
sbb
dec
jmp
lcall
mov
pop
jns
adc
shr
cltd
mov
xor
pop
loop
xor
addb
adc
sub
fsubrl
mov
rcll
mov
sub
popf
jge
rcll
stos
xchg
inc
xchg
fs
bound
repnz
inc
ret
in
sbb
aam
aaa
outsb
arpl
insb
js
lds
movsl
sub
sbb
or
cld
gs
push
faddl
xor
pushf
add
insb
aad
lds
movsl
sub
sbb
or
cld
gs
push
faddl
xor
pushf
add
insb
aad
lds
cmp
sub
sbb
gs
push
faddl
xor
pushf
add
insb
aad
lds
cmp
lods
xchg
pushf
test
jne
gs
faddl
inc
xor
push
ljmp
outsl
sbb
iret
mov
sbb
pop
inc
ud1
test
cltd
fisttps
lods
fstps
sub
pop
or
aas
imul
cltd
fisttps
scas
leave
cmp
sub
testl
adc
dec
pop
mov
orb
lods
jmp
data16
add
sub
mov
loop
push
add
push
adc
lods
and
hlt
mov
xrelease
imul
inc
fisubrl
data16
filds
mov
inc
add
and
inc
jl
repnz
sbb
sarb
std
push
push
dec
inc
test
pop
leave
lahf
cmp
or
pop
aas
jl
fsub
dec
lock
sub
addr16
pop
ja
fadd
push
xchg
or
lret
imul
lods
lcall
hlt
iret
stos
in
push
scas
mov
rcr
dec
xorb
fwait
lods
aam
dec
repz
lcall
data16
push
pushf
lahf
dec
or
jg
lahf
sbb
or
aas
imul
mov
iret
mov
fstps
pop
outsl
jo
pusha
popa
jns
sbb
jbe
push
mov
icebp
cmpsb
clc
shr
fstpt
cmp
ds
push
sub
and
arpl
lcall
clc
out
xchg
mov
mov
sub
gs
pop
imul
mov
fisttps
scas
fstps
sub
pop
or
aas
imul
mov
fisttps
scas
fstps
or
test
arpl
inc
mov
xchg
fstpl
fmull
dec
add
in
mov
es
scas
cs
add
call
popf
mov
addr16
shl
stos
jb
fwait
sarb
mov
aam
testl
cltd
or
sub
pop
push
out
repz
lahf
xchg
cwtl
out
adc
flds
je
fdivl
xchg
sub
sub
roll
mov
pop
inc
cmp
add
lret
pop
ja
sub
outsb
jg
jb
inc
lock
xor
jns
add
pop
dec
xlat
sbb
in
ret
scas
fistl
jno
cmp
stc
pushf
ret
mov
push
lods
and
loopne
jmp
dec
and
mov
out
cs
pop
lret
jbe
in
je
cmp
mov
fimull
out
inc
sub
push
mov
test
push
mov
repz
in
mov
das
sub
push
cmp
rorl
jno
aas
adc
sub
jmp
fisttpl
mov
outsb
movsl
add
add
shr
xor
loopne
jmp
ret
test
leave
sub
lock
jle
mov
sbb
mov
sub
clc
cs
push
lods
push
das
leave
inc
les
enter
pop
pshufw
mov
mov
jno
ror
fisubrl
adcb
dec
loopne
push
add
dec
lcall
adc
cmpsb
pop
sub
loopne
adc
push
popf
jnp
mov
sub
jno
orb
neg
sub
stos
mov
mov
inc
ret
adc
mov
pushf
scas
movsl
pop
inc
cmp
sbbb
xchg
stos
pop
sub
imul
mov
jns
mov
stos
in
mov
mov
inc
mov
mov
insb
xchg
cltd
loopne
in
enter
mov
les
outsb
sbb
orl
movsl
jo
addr16
jmp
lcall
data16
pop
add
mov
xor
mov
das
xor
ds
stc
stc
pop
ret
cmp
jg
iret
cmpb
lock
insb
fs
scas
xchg
fsubp
cmpb
jle
sub
pop
jg
sub
mov
sahf
loope
mov
push
scas
lea
in
fadd
jb
dec
hlt
pop
mov
sbb
push
mov
adc
inc
movsl
inc
mov
cltd
xchg
cs
jne
dec
cli
repz
adc
ja
dec
outsb
inc
jnp
dec
in
pop
cmpsb
xor
lods
ss
out
in
xchg
into
pop
cmp
movsb
jle
xchg
rep
shrb
push
and
cmp
lea
lods
icebp
xchg
loop
js
sub
mov
std
jcxz
or
je
lret
fsubs
lods
jo
outsl
mov
bswap
xorb
and
and
mov
mov
outsl
dec
daa
int3
loope
push
out
mov
mov
mov
xchg
cmp
adc
imul
pop
mov
jnp
ja
inc
mov
sbb
sub
js
sub
mov
lea
and
out
add
push
ljmp
cmp
into
mov
xchg
rol
lret
loope
shrl
cmc
jp
outsb
leave
nop
jl
add
or
push
pop
nop
ret
cli
lret
pop
mov
sbb
sahf
or
fiaddl
fiaddl
xor
and
repnz
mov
inc
popa
sub
test
test
js
int3
add
sbb
cmp
iret
shlb
ss
cltd
gs
std
mov
ss
and
mov
jne
xchg
and
sub
push
push
pop
mov
notb
outsl
dec
stos
cltd
outsb
scas
jae
test
push
inc
xor
popa
dec
arpl
xchg
call
push
cli
and
lock
lret
or
jmp
mulb
push
int
jle
inc
sub
lods
ret
and
lret
out
jle
xchg
push
cltd
rcl
push
test
jp
repnz
or
xor
fs
mov
test
in
sub
xor
jmp
in
xchg
push
and
xchg
mov
icebp
fwait
mov
mov
clc
fdiv
ret
add
imul
xchg
imul
pop
ljmp
cwtl
and
daa
movhps
rcll
cmpsl
out
repz
lret
pop
dec
dec
and
gs
push
jecxz
imul
mov
call
outsb
out
filds
pop
mov
xchg
xchg
jl
xor
jmp
lock
push
xchg
mov
vpunpckhqdq
xchg
divl
jae
movnti
inc
adc
and
xor
loop
lcall
inc
cmc
xchg
int
ds
mov
sbb
int
xorl
aam
into
sar
jbe
inc
aas
sbb
push
mov
inc
inc
mov
test
enter
pop
pop
pop
mov
dec
mov
jp
cltd
pop
ss
divl
jge
lcall
aas
scas
and
lods
sbb
or
jmp
mov
insb
add
cltd
lahf
loop
adc
insl
xorl
push
xchg
into
inc
test
loop
inc
mov
bound
lret
repz
dec
imul
dec
ss
mov
stc
push
iret
inc
outsb
idivb
adc
popa
data16
ss
pmulhuw
sub
enter
outsb
enter
add
xor
cmp
test
mov
inc
mov
roll
out
std
mov
jg
lea
dec
lahf
xchg
daa
mov
jno
es
sbb
outsb
jnp
loope
mov
mov
enter
stos
or
xorb
imul
pop
call
mov
aas
and
jae
and
inc
adc
sbb
sub
push
nop
or
insb
push
cmp
leave
lods
dec
adc
mov
cmp
sbb
loope
fcmove
xor
inc
push
jge,pn
decb
inc
xor
aam
ficoms
cmpsb
pop
and
and
es
push
sbb
cmp
popf
in
sub
jg
pop
outsl
add
and
lods
inc
jg
mov
mov
insl
lahf
mov
push
jb
addr16
icebp
shrl
dec
fs
sub
xchg
iret
sub
icebp
lea
or
cmp
jp
lret
fs
sbbl
loopne
mov
int3
mov
daa
jge
fimuls
cmp
leave
pop
aam
jge
fcoms
or
jns
dec
cmp
pop
mov
cli
insb
mov
rol
push
add
mov
sub
mov
nop
or
sbb
xor
pop
mov
inc
xchg
cmp
sarl
nop
outsw
adc
imul
shll
cmp
js
shr
dec
push
and
add
pop
lds
out
mov
or
clc
mov
xchg
rclb
push
aad
pop
fisttps
xchg
inc
adc
aam
jl
je
js
in
jge
inc
push
cmp
cltd
movsl
pop
mov
cmpsb
insl
or
sbb
lcall
xchg
sub
mov
mov
lock
xlat
mov
cmpsl
dec
and
fs
pop
pushf
rcl
inc
sub
out
fiaddl
xor
faddl
inc
lock
andb
mov
stos
gs
xor
xor
test
dec
pushf
xor
lods
pop
cltd
sbbb
loop
dec
mov
sbbl
inc
cmp
inc
inc
inc
pop
add
movsl
inc
dec
stos
adc
sahf
mov
movsb
xor
mov
jl
bound
mov
mov
mov
jo
mov
dec
movsl
add
push
dec
dec
psrad
jmp
pop
inc
push
cmp
js
test
xor
sbb
je
scas
or
mov
mov
and
mov
adc
push
push
mov
xor
push
icebp
rolb
sub
roll
adc
jmp
mov
and
insl
lcall
es
adc
aaa
xor
fsubs
pop
xchg
and
popa
jle
xor
fists
fsts
inc
or
mov
fiadds
xorl
mov
insb
adc
rol
cs
imul
mov
aaa
xor
mov
loope
add
mov
out
sub
add
cli
pop
scas
xchg
inc
fwait
fs
and
dec
sahf
addl
mov
mov
push
clc
mov
jae
push
popf
mov
mov
fiaddl
add
pop
push
fldenv
hlt
nop
cmp
pop
add
shlb
adc
adc
loope
inc
xor
scas
xchg
movsb
jg
inc
adc
jg
lcall
mov
insb
push
fs
push
out
inc
ds
mov
inc
add
mov
pop
test
fldenv
les
andl
pop
jbe
and
fldenv
mov
pusha
mov
cmc
mov
les
loope
and
and
mov
rcrb
roll
cmp
scas
stc
pop
gs
add
or
test
bound
fcmovb
out
mov
pop
mov
sub
jle
mov
addl
ret
hlt
cmp
in
mov
xorb
inc
push
test
ret
cmpb
pop
and
xorl
pop
leave
div
push
int
imulb
pop
xor
test
iret
cwtl
data16
xor
and
out
push
out
jp
jnp
jnp
loopne
push
pop
ds
inc
cmp
or
lods
or
adc
push
gs
scas
enter
xchg
test
mov
leave
mov
mov
test
aam
xchg
das
test
jp
out
ret
xchg
xor
ljmp
pusha
cmp
in
mov
cmp
gs
fdivrl
test
jno
push
pushf
inc
aaa
nop
push
in
scas
cmp
aaa
mov
dec
sub
outsb
cmp
jg
pop
push
lea
mov
cltd
sti
cmp
mov
add
loope
cmc
sub
lods
rep
les
jnp
xchg
mov
xlat
mov
aad
pop
fiaddl
subl
dec
adc
sbbl
enter
fists
push
jns
in
bound
into
sbb
mov
mov
rol
and
out
pushf
pop
out
and
push
xor
xor
faddl
push
jb
mov
daa
scas
dec
cmp
mov
pop
jecxz
int
fisttpl
jle
mov
popa
stos
and
in
adc
decb
fisubl
out
pop
xor
xchg
inc
testl
or
or
lock
dec
mov
sub
sbb
xor
xchg
loope
lock
mov
out
mov
dec
aaa
test
sub
inc
loope
jg
inc
movsb
xchg
push
stc
push
stos
rcrl
dec
lea
cmc
pop
inc
and
gs
dec
repnz
lret
mov
fs
inc
xchg
cltd
mov
in
sub
push
lcall
jbe
fmul
pop
insb
mov
add
les
xchg
jo
mov
xor
dec
jo
lcall
xor
lcall
add
jbe
call
hlt
imul
or
adc
je
pop
out
adc
jg
mov
sbb
popa
in
or
mov
jno
mov
iret
js
sub
arpl
push
popa
lcall
xchg
dec
dec
add
mov
aam
cmp
pop
mov
imul
adc
and
push
test
and
cld
adc
cmpsl
in
dec
sbb
int3
aad
xor
in
outsb
jb
movsl
push
jle
jge
xor
or
xchg
sbb
mov
es
inc
adc
imul
popa
sub
mov
stos
or
pop
stos
add
inc
cmp
testb
jae
cmp
les
fnstsw
pop
imul
cmp
jb
inc
pop
lock
cmp
jbe
cmp
loopne
call
cli
sti
xor
xchg
stos
inc
popf
cmpsb
out
scas
in
cltd
bound
insl
push
jmp
lea
inc
rclb
xchg
sub
mov
cs
push
in
jmp
lret
inc
sbb
fcomip
lea
cmp
or
add
repz
push
cltd
lret
sub
or
negl
mov
dec
mov
and
stos
sahf
lahf
jg
scas
seto
inc
movb
imul
inc
fiaddl
xchg
push
ffreep
movsb
and
dec
dec
or
push
ficoml
sub
rcr
imul
jp
or
mov
lret
sub
or
jge
mov
pop
mov
shll
pxor
movsl
imul
xchg
xchg
sbb
xchg
push
pop
pop
rcr
add
out
dec
mov
jae
mov
jns
enter
mov
mov
lea
lcall
xor
pop
pop
mov
jl
push
sub
pop
inc
enter
sub
into
sbb
and
mov
mov
mov
xchg
xchg
mov
sbb
fsubrs
pop
pop
icebp
jne
out
and
repnz
sub
pop
mov
fmuls
iret
dec
xchg
mov
adc
and
lret
ret
xchg
stc
pop
mov
inc
cmp
inc
jle
mov
clc
dec
add
and
jecxz
mov
int
ds
test
cmpsb
push
test
xor
loopne
lcall
test
dec
data16
aas
out
lcall
mov
cmp
fcomp
push
push
out
xor
ficompl
adc
rcl
mov
sti
push
cmp
add
loope
jmp
in
aad
movsl
ja
inc
jp
cld
ss
js
mov
add
jg
cmpsl
adc
jl
and
lahf
sbb
lods
pop
push
inc
sbb
imul
lds
loop
outsl
out
ljmp
and
xor
dec
mov
mov
aaa
data16
movl
push
sub
push
xchg
and
add
inc
cmp
mov
pop
push
mov
lock
pushf
or
int3
jnp
xorb
popf
pop
jb
and
add
ljmp
or
xchg
je
scas
arpl
pop
pushl
adc
out
fistpl
test
add
mulb
mov
pop
sbbb
adc
out
jns
cltd
mov
mov
sub
scas
lea
in
ljmp
jo
pusha
jp
and
jns
ja
inc
mov
push
mov
pop
sbb
mov
push
and
dec
out
and
xchg
jbe
mov
and
mov
in
inc
dec
cmp
mov
sbb
jl
xchg
outsb
les
out
insl
xor
xor
outsl
cmp
pop
test
xchg
pop
call
lods
fnstsw
scas
dec
xor
push
jae
push
popf
xor
mov
inc
nop
in
sbb
mov
jno
fnstcw
push
adc
mov
popa
in
cmp
push
test
cmp
xor
stos
addb
mov
aas
insb
inc
loope
cltd
test
mov
adc
and
or
sti
add
stos
pop
pop
xor
xchg
sahf
mov
mov
aas
xor
jmp
popf
xor
movsb
lds
pop
cld
leave
cmp
sub
add
sbb
in
lods
dec
lods
negl
mov
add
es
push
sbb
add
test
push
roll
imul
loop
ljmp
add
jp
cs
sarb
cmp
out
dec
scas
imul
add
dec
or
add
add
roll
sub
add
cltd
cmc
aas
pop
das
mov
shll
xor
push
rclb
dec
fsubl
or
or
fdiv
mov
insl
fs
xor
ret
lods
enter
jl
lds
js
sbb
sar
cltd
dec
arpl
fildll
int3
pop
fidivrl
sbb
sti
adc
into
aam
sbb
mov
mov
out
shrb
bound
push
and
std
xor
jae
xchg
mov
lcall
pop
or
iret
es
push
and
imul
fbld
lock
repnz
mov
push
sub
and
cmp
jmp
jle
call
fimuls
mov
jecxz
pop
sbb
insb
xor
aad
imul
sub
les
mov
dec
xor
and
je
ja
enter
jl
ficoms
mov
repz
jns
or
sub
jmp
ds
lcall
pop
and
dec
xchg
dec
nop
mov
mov
movsl
fsub
push
and
push
xchg
gs
push
or
xchg
repnz
les
pusha
mov
xorl
lcall
adc
push
inc
mov
ds
aam
imul
cli
push
aas
in
pop
lret
hlt
push
divl
fildll
cwtl
cmp
push
inc
inc
jp
ret
add
sbb
xchg
cwtl
scas
jl
push
cltd
lea
push
lock
push
test
sub
pusha
add
inc
mov
inc
je
insl
movsl
rcrl
stos
rorb
lods
cs
cli
cs
fisubrs
mull
and
arpl
xchg
test
xor
add
cld
call
mov
xchg
fsubrs
in
jnp
les
pop
xchg
xchg
mov
neg
je
pop
lods
pop
push
cmp
mov
jb
insl
dec
mov
inc
pop
loop
pop
or
push
daa
cmp
mov
arpl
cmpsb
in
jg
movsl
jle
mov
cmp
jnp
push
testb
xlat
je
push
repz
dec
jle
gs
in
popf
push
inc
fcmovnb
into
mov
dec
jle
pop
pop
ljmp
test
push
aas
arpl
cmpsl
inc
clts
lods
out
nop
push
mov
xchg
xchg
mov
xchg
aam
mov
push
hlt
mov
mov
mov
push
int
arpl
sbb
sbb
mov
sahf
inc
sbb
imul
jle
and
addr16
cmpsl
or
mov
sarb
cmpsl
xchg
sub
test
pop
push
or
sub
rcrl
int3
sbb
sbb
sti
ljmp
ret
add
push
adc
pop
and
cmpsb
jle
dec
movsl
into
sub
sbb
jnp
jns
add
sti
out
mov
fstps
or
aad
cmc
aaa
icebp
mov
jmp
dec
int3
out
rol
sub
mov
push
mov
or
call
test
adc
int3
ss
jno
in
or
jae
pushf
and
and
dec
push
cwtl
sbb
mov
jae
cs
imul
xchg
adc
xchg
xchg
sbb
int3
in
dec
sti
cwtl
mov
dec
mov
iret
das
or
jle
push
mov
aad
xchg
sarb
push
or
add
xchg
push
inc
xor
jecxz
mov
popf
nop
mov
cwtl
fidivl
fs
jg
mov
imul
xor
bound
flds
lods
outsb
cmp
jge
insb
xchg
iret
sbb
push
mov
mov
sub
cmp
pop
cmp
inc
mul
icebp
pop
mov
push
xor
pop
movsl
inc
xchg
or
push
add
int
jo
mov
into
adcb
aas
out
inc
dec
test
bound
fwait
add
xlat
into
jecxz
incb
sbb
inc
mov
inc
cmp
popf
inc
jl
lret
outsb
leave
bound
xchg
les
dec
mov
cmp
mov
in
jne
adc
cld
movsl
mov
xchg
test
out
mov
inc
cmp
outsl
sub
push
add
in
pop
mov
fimull
lods
mov
sbb
push
addl
jl
sti
mov
ret
mulb
xor
jne
inc
in
scas
xlat
aaa
add
cmp
jmp
xor
pop
popa
dec
push
adc
mov
jbe
sub
mov
outsl
stos
stc
mov
js
addl
mov
push
movsb
in
cmp
nop
adc
std
xchg
adc
popf
js
jl
imul
xlat
sbb
aam
sbb
iret
mov
xchg
sbb
lock
out
cli
out
add
xor
in
cmp
dec
inc
repz
sub
mov
cmp
pop
aas
stc
mov
mov
sub
cs
in
fs
cwtl
insl
outsl
fs
add
repz
sbb
or
aas
imul
mov
fisttps
scas
fstps
sub
pop
or
aas
imul
mov
fisttps
scas
fstps
test
dec
stc
aas
imul
cltd
fisttps
scas
fnstcw
sub
pop
or
aas
imul
mov
fisttps
push
test
mov
adc
xor
mov
orl
sbb
jnp
in
pop
rorl
mov
adc
inc
fistl
mov
mov
sbbl
or
or
imul
mov
or
pop
ret
push
sarl
jmp
jecxz
pushf
pop
lahf
sub
add
gs
xor
jae
cmpb
and
loope
data16
lret
or
xor
sbb
and
scas
fisttpl
jae
and
xor
les
hlt
mov
jecxz
ret
stos
sub
fsubl
iret
shl
push
aam
jo
ror
xchg
xchg
hlt
cmp
jno
hlt
jecxz
psrld
pop
rorl
and
and
aaa
fcomps
push
dec
sub
mov
mov
insb
xchg
repz
dec
movsb
rcrl
ds
lcall
mov
aam
jecxz
mov
jns
jnp
or
into
lret
inc
rcr
inc
arpl
add
pop
fwait
pop
push
ds
in
hlt
cmpsb
push
mov
dec
ljmp
mov
jmp
fisttpl
mov
add
jae
inc
rorl
mov
addr16
adc
adc
scas
mov
pop
imull
push
xchg
imul
call
jae
inc
scas
add
loopne
dec
cmpl
jecxz
cwtl
imul
pop
stos
outsl
jnp
sub
jae
inc
fistl
mov
sbb
imul
rorl
mov
adc
inc
fistl
mov
sbb
imul
rorl
mov
pusha
mov
jo
jne
adc
repz
outsl
add
test
push
mov
mov
dec
pushf
dec
sub
push
scas
insl
ja
mov
sbb
push
nop
dec
jmp
js,pn
je
sbb
repnz
mov
imul
adc
cmp
out
sbb
push
jb
aad
aas
imul
add
push
sti
push
in
in
dec
cli
jle
ds
inc
test
iret
dec
xchg
lds
sbb
lea
pushl
das
jno
push
jo
push
mov
in
lret
jl
sub
repnz
add
mov
fstl
dec
or
jo
loope
adc
mov
xchg
mov
popf
cmpl
add
iret
sub
loop
mov
in
inc
sub
push
sub
popf
test
sahf
add
jns
cltd
jne
cmp
mul
fisubrl
call
push
sbb
jb
clc
insb
daa
inc
or
or
adc
push
jge
inc
pop
sahf
outsl
xchg
adc
insb
fucom
int
filds
imul
out
out
call
jl
add
rcrb
mov
cltd
fs
push
xor
fcomps
jo
mov
sbb
scas
sbb
pusha
mov
mov
xchg
adc
arpl
arpl
call
cmp
negl
shrb
mov
out
jne
push
push
in
fiadds
iret
js
or
inc
fwait
ss
fsubs
popa
hlt
in
dec
lock
mov
cmp
mov
out
mov
mov
push
mull
sub
inc
push
adc
push
pushf
and
push
ret
mov
adc
cmpb
add
adcb
adc
sbb
mov
cs
pop
push
mov
push
outsl
or
jae
inc
sub
repz
pop
addb
xchg
addl
mov
std
xchg
xor
test
push
mov
xor
push
in
mov
imulb
pop
jp
scas
sbb
pop
jl
or
cmc
mov
sub
mov
push
mov
loop
inc
and
cmp
push
popa
jle,pn
jp
xchg
xor
std
dec
mov
mov
cmp
test
mov
in
pop
shrb
mov
xchg
and
out
mov
inc
negl
xor
jno
xchg
jb
mov
cli
add
incl
inc
sbb
push
xor
cld
push
dec
inc
test
roll
loopne
fcmovnbe
outsl
es
insb
loopne
xchg
push
push
xchg
ds
mov
lcall
or
inc
fmull
arpl
sub
jl
jnp
popf
pushl
jno
in
cli
xchg
sub
ss
fists
jecxz
cltd
mul
add
xchg
aas
cmp
mov
iret
xchg
xchg
jae
adc
pop
push
cmp
mov
pushf
push
repz
cmp
loopne
inc
mov
cmp
pop
jbe
loope
sub
leave
repz
ret
xchg
or
push
mov
cs
sbb
ljmp
testl
cmp
pop
mov
cmp
mov
and
outsl
test
xor
add
leave
das
fiaddl
sbb
sub
jecxz
push
nop
mov
jmp
jo
arpl
test
aam
es
cmp
sub
es
push
pushf
test
in
ret
std
pop
data16
rolb
loop
dec
movsb
mov
push
pop
dec
inc
pop
sti
inc
xlat
cmpsb
fldenv
add
test
mov
sbb
fs
inc
mov
pop
mov
adc
btc
cmpsb
and
in
fcoml
je
flds
pop
andl
les
lahf
out
outsw
adc
jno
push
push
pop
sbbl
movsb
or
and
mov
in
xchg
jne
aas
xchg
xor
out
pop
iret
dec
push
mov
mov
aas
cltd
jnp
add
addl
daa
add
movsl
cmpl
imul
pushl
inc
xor
push
loope
repnz
mov
add
jbe
sbb
fs
mov
aas
dec
cmp
dec
arpl
mov
pop
int3
and
inc
scas
push
movsb
push
js
mov
xchg
dec
fcmovne
cmp
jge
xchg
rclb
cwtl
mov
xor
jp
mov
xchg
or
push
popa
aaa
inc
faddp
aam
fcoml
aad
xchg
test
loopne
gs
push
mov
cmc
jae
dec
dec
imul
data16
bsf
mov
enter
xor
cmpsb
xchg
push
mov
sub
outsl
out
decb
notl
dec
sub
clc
inc
jb
fidivs
adc
inc
cwtl
sarl
inc
leave
lcall
std
push
xchg
hlt
xchg
mov
and
lods
hlt
dec
xor
mov
out
imul
sub
mov
scas
inc
iret
sub
sbb
es
sbb
push
dec
mov
dec
cmp
sbb
pop
out
sub
fildll
enter
fldl
mov
cltd
push
fisttps
jle
mov
mov
sub
or
push
xor
pushf
pop
das
std
inc
movsl
ficoml
xor
hlt
icebp
push
dec
mov
xorb
pop
fstl
pushf
mov
insl
cli
fdivs
leave
mov
lock
adc
jb
dec
dec
popf
shlb
and
mov
and
cmc
mov
jne
sub
pushf
sub
cs
movsl
lock
mov
add
mov
aam
xor
movsl
and
xor
and
cli
into
mov
nop
pop
adc
leave
pop
mov
stos
fidivrl
fcoml
stos
add
xor
xchg
je
dec
pushf
and
sub
mov
cmc
lcall
cltd
test
in
cmp
aad
sbb
mov
cwtl
inc
aas
sti
sbb
push
dec
aad
test
mov
add
mov
stos
and
mov
out
sbb
mov
adc
inc
dec
stc
aam
mov
gs
fsubr
jae
popa
les
cli
sbb
test
ja
mov
and
inc
and
mov
lcall
mov
sbb
loopne
call
call
cli
add
cmp
movsl
sbb
fxch
mov
fistpl
pusha
jnp
adc
popa
sti
push
add
mov
xchg
test
out
out
dec
pop
ja
testl
xor
add
inc
pushf
mov
jno
mov
lds
fnstcw
mov
sbb
sub
xor
int3
push
adc
jne
inc
sbb
jp
jp
ljmp
pop
sub
sbb
inc
xor
sahf
pop
xchg
cmp
adc
arpl
ljmp
pop
repnz
les
pop
mov
lret
lret
sbb
jmp
push
push
std
xor
out
pop
push
push
aaa
xchg
outsb
sub
gs
cli
dec
cs
stos
ret
insl
in
mov
sbb
adc
ret
pop
aad
and
sti
xchg
je
aam
lahf
mov
jg
xchg
jmp
sbb
and
flds
cmpsl
sarb
xchg
pop
push
jp
or
aaa
xchg
dec
rcrb
ja
or
mov
xor
xchg
aas
out
lcall
addr16
call
les
push
shlb
mov
lcall
sbb
xchg
sub
fiadds
cmp
mov
int3
out
mov
fsubl
mov
and
leave
mov
cmp
add
xor
inc
mov
sub
xchg
dec
insb
jecxz
pop
mov
mov
cmp
add
pop
out
xchg
mov
and
stos
iret
and
mov
das
mov
hlt
sbb
jne
iret
scas
loop
mov
xor
sbb
out
fwait
dec
sbbb
xchg
test
movsb
inc
lods
test
fldl
push
scas
mov
ret
pop
xchg
shufps
add
and
cmp
aam
stc
and
mov
negl
pusha
pop
decb
jge
jp
or
ret
shrb
cli
and
cmpsl
push
insb
and
jnp
adcb
xchg
mov
dec
popf
sbb
jg
mov
xchg
faddl
fdiv
mov
push
mov
jecxz
fs
hlt
es
mov
adc
nop
testb
aad
push
insb
mov
dec
faddp
mov
pop
cmp
jbe
xor
and
jle
js
test
ret
xchg
or
adc
lds
mov
imul
sbb
mov
jle
daa
jmp
ret
mov
xchg
test
insl
push
pop
mov
jns
fidivl
lea
xchg
mov
mov
std
xor
dec
das
sbb
xchg
dec
and
mov
enter
push
cmp
mov
mov
icebp
test
cmc
jg
mov
hlt
in
fneni(8087
fildl
mov
movsl
pop
or
push
jae
mov
imul
inc
imul
mov
divb
fcomps
shrb
shll
js
dec
int3
push
push
cmpxchg
mov
jecxz
int
ljmp
dec
jmp
sarb
mov
testl
xlat
sbb
and
sarl
loope
leave
lahf
in
dec
shlb
jp
mov
pop
cmp
in
cs
dec
imul
fldenv
push
das
mov
nop
xorl
sub
jge
out
leave
cmp
pop
cmpsl
mov
les
mov
dec
inc
push
mov
and
mov
or
jb
dec
loope
jg
xchg
test
adc
mov
inc
mov
mov
imul
xor
push
dec
in
insb
push
sub
mov
sub
mov
test
mov
jmp
into
pop
je
insb
sub
fiadds
cmp
arpl
dec
call
sub
and
dec
adc
mov
xchg
sbb
pop
ss
jg
roll
insb
in
loop
cmpsl
es
mov
sarl
mov
ret
pushf
cmpsl
negl
jns
les
mov
lds
adc
mul
mov
movsb
mov
repnz
in
cld
dec
push
test
mov
pop
movsl
push
mov
mov
int3
iret
and
int
xchg
ljmp
mov
jp
sub
and
out
push
pusha
int
add
dec
stc
in
fcompl
fdivr
xor
cwtl
mov
stc
sub
fstpt
xor
movsb
stc
and
dec
xor
cmp
push
pop
pop
shlb
adc
js
inc
push
sbb
dec
add
lret
cmp
push
pop
loop
and
cmp
xor
pop
or
push
mov
sub
cld
and
rclb
cmp
mov
pop
xchg
mov
sbb
decb
dec
jg
mov
xchg
aaa
mov
imulb
sbb
out
jo
faddl
scas
sub
xor
fcompl
ret
adc
pop
sub
pop
jb
daa
mov
hlt
pop
xor
adc
fldl
xchg
pop
fwait
leave
test
mov
fcmovne
xchg
sub
les
pop
jnp
out
push
mov
cmc
pop
pusha
clc
scas
lods
jl
dec
adc
and
mov
add
cmp
mov
out
pop
fcmovnb
and
mov
and
sbb
pop
sar
pusha
pop
lods
fisttpl
sbb
cmp
add
jno
jb
add
call
dec
push
test
push
outsb
xor
push
dec
inc
or
outsb
jmp
mov
or
sbb
xlat
pop
xor
loopne
mov
fadds
loop
popa
outsl
adc
dec
lods
test
dec
pop
iret
es
mov
lcall
mov
xchg
js
sub
mov
ss
add
hlt
cmc
jp
aam
inc
bound
or
mov
bound
lock
std
fidivs
and
mov
inc
mov
xor
push
inc
inc
lea
test
sbb
lcall
in
pop
jb
push
push
pop
lods
push
or
fisttps
popa
and
adcb
std
sbb
addl
xor
xchg
adc
les
fdivrp
sbb
decb
cmp
lods
adc
and
or
fistpll
pop
dec
cwtl
fmuls
test
pop
jo
test
addr16
test
stos
sbb
inc
add
push
jge
and
or
dec
mov
mov
cwtl
sbb
lds
jno
insl
dec
xor
pop
out
jge
lcall
cwtl
push
fwait
std
stos
dec
xchg
jo
inc
jle
andb
popa
leave
lcall
and
std
mov
dec
push
leave
inc
inc
push
or
push
xchg
jno
std
pushf
inc
inc
rcrl
int3
push
fstp
cmpsl
dec
and
cmc
ret
sub
push
int
jno
cmp
inc
fwait
cli
jle
cmpsb
push
or
cmp
cmpsl
test
cmp
sbb
jnp
stos
cmpsl
jl
mov
pop
imul
in
sub
mov
pop
je
cmp
mov
adc
nop
cmp
inc
or
lods
fs
mov
aas
mov
inc
xor
dec
aas
ljmp
test
and
jno
push
push
xchg
outsb
mov
retw
popa
sbb
mov
cmp
insb
rcr
pop
clc
outsl
lods
sub
mov
inc
call
scas
ljmp
mov
inc
inc
iret
adc
shlb
dec
mov
add
inc
mov
in
orl
sub
aas
inc
es
inc
ljmp
xchg
xor
mov
dec
leave
jno
cmp
mov
pop
test
inc
jns
adc
adc
dec
cmp
push
in
xchg
leave
cli
mov
and
xor
or
subl
xor
and
mov
test
test
int
adc
mov
xchg
mov
push
dec
mov
and
insl
mov
aaa
cmpsb
or
cmpsb
sbb
mov
popa
out
aad
adc
stc
and
mov
cli
jno
imul
movsb
cmc
pop
loop
pop
pop
xor
xor
in
pop
xor
pop
and
cmp
icebp
pop
in
mov
xlat
cld
jecxz
jle
pop
loopne
push
jae
out
jne
inc
js
enter
cs
in
sbb
add
insb
xor
inc
push
fsubl
mov
lds
addl
aas
pop
or
stc
jp
and
dec
dec
popa
add
jb
sbb
push
cmc
xor
adc
jge
jg
push
fdivrs
or
xor
pop
sbb
xor
push
pushf
les
lret
in
or
movb
mov
add
mov
jmp
ja
pop
cmpsb
out
jge
xchg
push
scas
lock
xchg
mov
and
enter
lahf
movsb
lret
mov
xchg
mov
mov
jns
aaa
je
out
mov
ret
invd
inc
in
or
xchg
and
daa
mov
xor
xchg
out
sub
inc
scas
hlt
fxch
add
ror
add
fistps
mov
je
or
adc
inc
add
pop
bnd
dec
mov
mov
adcb
push
lea
lods
inc
movsl
mov
sahf
sub
mov
orb
cmpb
xchg
xor
cs
gs
sub
popf
pushf
pop
out
shr
pop
jno
cltd
data16
outsb
cmp
jae
repnz
mov
inc
fildl
jns
xorl
xchg
pop
adc
fstl
inc
inc
mov
xchg
adc
sbb
push
cs
xor
xchg
dec
push
sbb
jnp
or
cmp
cmp
rorl
push
mov
sbb
and
xchg
hlt
mov
stc
mov
shl
iret
cmp
add
mov
xchg
dec
add
leave
mov
jbe
sbb
pop
mov
repnz
stc
cwtl
cmp
add
add
add
inc
sbbl
cmpsl
popa
movsl
clc
or
mov
hlt
out
adc
add
add
pop
mov
mov
or
push
and
and
fadds
dec
in
stc
cmpb
fwait
xor
add
mov
jae
push
test
jp
jo
fwait
dec
rorb
pop
cmpsl
gs
lahf
repnz
ret
stos
fdivrs
cmp
xor
add
cmp
sbb
je
xchg
loopne
test
aas
inc
or
je
imul
imul
push
stos
adc
push
push
jecxz
jmp
lods
dec
mov
imul
xchg
jp
jecxz
shl
movsb
aaa
fs
adc
mov
fisubs
sahf
push
and
mov
push
sbb
fmull
loop
adc
push
jne
inc
add
daa
in
sub
adc
jo
or
push
add
faddl
test
push
ds
sub
mov
mov
sbb
aad
test
es
rolb
insl
outsl
je
data16
push
outsb
push
jmp
push
jb
pop
push
mov
out
lods
adc
cmc
xchg
xor
into
std
pop
out
ljmp
add
addr16
or
sub
xchg
pop
adcl
out
in
ljmp
jl
imul
stos
jnp
dec
inc
cwtl
cmc
jns
imul
push
mov
or
in
loopne
push
aad
jb
jmp
inc
out
in
sub
inc
add
mov
inc
je
mov
enter
vpacksswb
std
das
push
dec
mov
push
mov
cs
sbb
inc
outsl
adc
jmp
movl
mov
out
xchg
push
ja
inc
push
lcall
cmp
xor
popa
or
jp
repnz
fwait
pusha
sar
jns
mov
pop
insb
or
and
insl
addl
add
add
fwait
call
mov
lea
mov
loopne
jnp
sub
cmp
fstpt
jne
int
dec
xchg
out
push
xor
xchg
in
mov
jns
mov
mov
mov
mov
imul
xor
jne
sbb
xlat
inc
fimull
sar
aad
jns
pop
add
dec
mov
in
jecxz
imul
mov
cmp
inc
pop
and
ficoml
lea
sub
leave
fwait
inc
sbb
popa
fs
addb
xchg
js
insb
push
cltd
cs
inc
shlb
jge
add
into
jmp
lcall
sub
or
pop
xor
xor
add
rclb
insb
cmp
xor
sbb
loopne
sbb
aas
cmp
xor
dec
cmp
je
adcb
roll
inc
out
inc
das
xchg
test
movsb
aam
pop
fsubrl
enter
test
xorb
xchg
jno
xchg
ljmp
push
dec
pop
fisubs
xchg
ss
and
fcompl
mov
fwait
pop
sbb
jnp
outsb
iret
add
nop
repz
sbb
jbe
je
or
xor
je
adc
jmp
fdivrs
mov
loopne
stc
push
cmp
mov
aad
adc
or
xor
xlat
pop
sub
push
das
inc
or
adc
popa
lea
lret
movsl
iret
jmp
decb
mov
xchg
js
add
xor
adc
fimull
lahf
mov
xchg
and
jge
es
popa
js,pt
and
mov
mov
loop
enter
outsl
xchg
or
lock
xchg
inc
scas
dec
inc
aaa
mov
std
fnstcw
gs
mov
daa
repnz
xchg
add
ds
rclb
fidivs
mov
clc
cmp
and
push
popf
or
xchg
push
xchg
ja
or
decb
and
out
movb
push
bound
sarl
jmp
pop
dec
jp
cmp
rolb
in
repnz
fimuls
test
mov
lcall
mov
lea
inc
and
imul
mov
js
fidivl
out
and
les
pop
out
repz
mov
mov
sbb
mov
inc
lret
jns
stos
mov
aaa
adc
mov
outsb
or
jge
jl
stos
or
jae
inc
fistl
mov
sbb
imul
rorl
mov
adc
inc
fistl
mov
sbb
imul
rorl
mov
adc
inc
fistl
mov
sbb
imul
rorl
mov
adc
ret
fcmovnbe
or
subl
repz
cmp
sub
loop
repnz
ret
jb
dec
aad
testl
jo
inc
loop
repnz
adc
ret
jb
add
dec
jb
inc
loop
repnz
xor
loop
repnz
ret
jb
add
xor
push
icebp
xor
inc
lds
jnp
xchg
xor
jb
and
pop
imul
push
mov
sub
push
adc
mull
sub
fidivs
lods
xchg
jne
xor
mov
cwtl
pop
test
fwait
je
or
dec
ror
fcoml
push
mov
mov
or
pop
aad
add
and
fisttpl
int3
xchg
cmp
lods
adc
xor
cltd
mov
ss
inc
xor
lcall
xchg
fwait
jle
sbb
arpl
fdecstp
jb
mov
std
mov
or
clc
jb
xor
sub
xorl
mov
repnz
ret
jb
add
xor
jb
inc
loop
repnz
adc
xchg
adc
fnstsw
fs
data16
pop
xchg
cld
xchg
daa
xchg
mov
outsb
stc
pop
dec
xlat
push
adc
push
xchg
aad
push
xchg
imul
fldl
adc
adc
ret
inc
loop
repnz
adc
ret
jb
add
xor
jb
inc
loop
repnz
adc
pop
lods
mov
jbe
std
shrb
mov
xchg
or
sbb
sbb
repnz
or
int
dec
jnp
jne
xchg
jecxz
ficoml
push
out
pop
or
rorl
mov
lods
les
push
dec
leave
aad
and
pmulhw
roll
gs
sub
adcb
jbe
call
lcall
cmp
xchg
lods
xchg
push
dec
ljmp
lods
dec
jo
out
jg
adc
push
out
addr16
addr16
movsl
jmp
push
out
xchg
mov
push
adc
lods
jle
dec
or
iret
bound
insb
xlat
push
stos
cmp
lahf
movsb
dec
aas
dec
insl
and
adc
mov
inc
jb
lret
mov
and
cmp
cmp
xor
sbbl
repz
aam
dec
ss
and
push
aam
push
outsl
jne
push
mov
enter
jnp
js
xchg
fsubl
cmp
cmp
pop
cmp
loope
xor
popf
je
dec
addr16
lret
xor
dec
fwait
out
push
test
inc
xchg
cmpsl
shl
bound
pop
leave
shll
jo
mov
dec
test
sub
stc
xor
sub
imul
jbe
mov
repz
xchg
lret
lds
insl
mov
les
xchg
or
mov
enter
idivb
sbb
pusha
test
push
jo
rcll
add
add
ret
mov
mov
leave
xchg
pop
pop
shrb
push
xchg
dec
push
in
or
arpl
scas
adc
imul
mov
fcompl
gs
in
leave
rcrb
bound
stc
repz
mov
sub
and
addr16
adc
out
dec
fwait
mov
arpl
sub
xchg
adc
and
xchg
adc
inc
ret
cmc
adc
cmpsl
mov
imul
mov
jne
add
fidivs
lret
fadd
and
xchg
ljmp
mov
es
push
add
popa
cltd
insl
scas
mov
repnz
test
cmc
xor
cltd
dec
pop
add
adc
sbb
add
xchg
outsl
or
xchg
push
cmp
nop
scas
push
add
add
jbe
add
cmpsb
adc
jb
popa
rcrl
ficomps
jge
jl
fldenv
leave
dec
insl
push
push
inc
int
ljmp
dec
cmp
dec
sbb
incb
inc
inc
jp
cmp
mov
das
data16
imul
dec
adc
adc
sbb
pop
es
add
repnz
jg
ret
jl
mov
movsl
sub
rolb
xchg
mov
lret
fnsave
in
sub
fwait
call
xor
cmpsl
cmp
iret
pop
and
jb
ret
inc
nop
lcall
or
out
in
adc
sbb
ret
enter
jmp
notb
rcll
mov
add
fs
cmp
aad
sbb
sar
pushf
nop
jmp
sbb
mov
frstor
outsb
xor
clc
cmp
mov
cmp
dec
push
lea
and
out
ss
cmp
mov
inc
loop
sub
and
mov
pop
shl
push
lcall
and
push
or
xlat
fwait
outsl
cld
and
fwait
cmp
test
mov
lock
adc
inc
mov
cld
leave
sarb
popf
movsl
pop
fidivl
sub
cld
bound
cld
ds
pop
roll
fldlg2
sbb
cmp
xchg
insb
inc
outsl
or
movsl
fiaddl
pushf
dec
xor
mov
mov
stos
xchg
xchg
insb
imul
sbb
imull
pop
and
or
cs
push
inc
fiaddl
jns
sti
xor
popf
xor
andl
aam
in
fs
popa
std
sub
sub
sbb
icebp
add
fcompl
add
popf
push
push
aaa
rcrl
inc
addr16
mov
inc
loope
enter
mov
imul
push
lret
fsubr
xlat
lds
jbe
push
out
sbb
das
in
cwtl
fistps
stos
movsb
pop
scas
shl
cmpsl
cmp
inc
shlb
into
or
sub
sbb
popf
mov
movsb
je
out
add
xchg
pop
dec
lds
dec
push
pop
adc
out
fnstenv
andb
pop
in
push
sub
xlat
mov
xchg
and
aad
pop
loope,pn
jmp
les
xchg
inc
pop
add
icebp
arpl
loop
int
jl
inc
into
call
stos
sahf
mov
jp
test
outsl
data16
adc
into
push
loope
push
cmp
sbb
sbb
push
fmull
push
mov
repnz
ljmp
sbb
cli
popf
fwait
push
call
loop
cs
sub
cmp
outsb
setbe
ss
inc
pusha
dec
mov
and
cltd
std
xorb
xchg
inc
push
fwait
push
test
mov
mov
adc
mov
jle
insl
adc
xor
or
add
add
and
push
jno
lret
push
mov
mov
dec
scas
in
scas
imul
mov
ja
adc
push
sub
mov
pop
cmp
data16
les
out
and
loopne
and
xchg
xchg
cmc
cmp
xor
add
pop
loop
mov
xchg
mov
lea
popa
cltd
sbb
push
pop
jmp
add
adcl
jnp
fisttpll
fwait
leave
inc
frstor
stos
into
add
add
incb
push
mov
cmp
loope
es
pop
cmpsl
repz
jno
mov
mov
mov
push
jns
mov
mov
mov
lea
xchg
scas
push
xchg
lock
cmp
mov
mov
mov
xlat
jge
jbe
xor
arpl
xchg
ljmpw
jo
xor
dec
pop
ss
data16
jle
lea
xor
lret
ret
iret
and
add
add
inc
jmp
xchg
out
jmp
ret
inc
icebp
mov
lret
and
xor
pop
test
sahf
enter
int
aad
movsb
mov
jnp
stos
mov
test
lret
cmpsl
mov
ds
dec
jle
out
sahf
out
into
popf
dec
mov
fidivrs
pop
mov
cwtl
push
cltd
mov
fstpt
cld
sti
pushf
jecxz
or
cmpsb
dec
jp
clc
movsb
mov
mov
sbb
dec
adc
jns
mov
loope
fcomps
add
bound
push
adc
test
xchg
insb
fnstenv
rorl
es
adc
mov
xchg
clc
leave
pop
sub
pop
leave
cwtl
sbb
mov
das
fisubs
jmp
insl
movsb
in
xor
les
in
gs
dec
mov
loope
aaa
shlb
andb
stos
adcb
adc
filds
das
imul
xlat
lret
push
push
popf
inc
fnstcw
aad
in
lock
mov
push
adcl
fldl
ret
loopne
pop
pop
mov
xchg
sbb
aad
pop
icebp
mov
dec
gs
popf
int3
test
loop
loopne
inc
lret
jp
jecxz
add
or
fidivs
and
imul
mov
inc
sbb
jl
sar
adc
xlat
fdiv
dec
adc
rep
movsl
pop
daa
icebp
aam
xchg
xchg
mov
or
call
and
stc
fidivs
adc
jle
xchg
push
xchg
xor
inc
jp
nop
in
test
adc
sbb
jge
clc
cmp
jmp
and
rcr
sbb
jmp
mov
or
xchg
add
rcll
inc
jne
sbb
pop
xor
and
mov
mov
dec
mov
hlt
imul
inc
pusha
xlat
sti
stos
mov
add
or
adc
mov
hlt
rol
gs
pusha
out
sbb
loope
jmp
or
mov
dec
lods
jg
pusha
out
inc
add
daa
lds
and
and
add
inc
add
aam
int3
xchg
cmp
loopne
ret
dec
xchg
mov
mov
stos
cld
fs
popa
shl
jnp
test
loopne
sub
outsb
test
inc
cwtl
xor
mov
cmp
cwtl
cmp
sti
sbb
mov
flds
sbb
pop
mov
mov
inc
insl
movsl
push
mov
aas
inc
or
in
sub
sub
ljmp
adc
or
imulb
jle
mov
pop
out
push
mov
test
sti
inc
call
pop
pushf
popf
push
adc
jb
fnsave
sbb
jno
push
sbb
mov
leave
in
pop
movsb
add
jmp
sbb
lahf
fs
es
and
or
pop
stc
or
sub
repz
lcall
mov
out
jle
push
rclb
sar
cmp
scas
mov
fcmovu
inc
lret
push
xchg
and
adc
into
adc
mov
idivb
ret
rolb
aaa
cmp
es
push
inc
popf
in
jmp
lods
mov
loop
adc
mov
mov
icebp
shlb
and
jmp
ljmp
add
xchg
test
cmp
dec
rcll
test
xchg
jno
jmp
ret
ret
repz
jecxz
xor
or
fcmovnbe
mov
push
jae
fs
add
pop
cmpsb
sbb
xchg
rcll
clc
ret
cmp
fbld
adc
cmc
repnz
sbb
xor
sbb
push
ret
iret
jne
lret
pop
dec
pop
mov
cmp
mov
xlat
movsl
dec
push
xchg
adc
mov
loop
push
fisubrl
sbb
orl
movsl
daa
sbbl
scas
xchg
frstor
aad
fs
loopne
orb
pushl
sub
push
imul
ja
inc
jne
adc
push
shl
sahf
and
int3
movsl
fs
cmpsb
sbb
fdivl
out
mov
push
data16
shr
cmp
jno
mov
push
cmp
push
xchg
mov
daa
pop
scas
mov
jp
xor
mov
jg
imul
negb
dec
pop
shlb
push
xchg
inc
xchg
cwtl
sbb
sarb
push
xorl
aad
mov
push
fadds
ret
sub
addl
sbb
ljmp
inc
lods
mov
pushf
sub
rcrb
test
and
xchg
and
sub
and
push
jmp
cmp
pop
cmp
dec
dec
sbb
fstpl
test
sub
lahf
cli
dec
mov
fstpl
or
imul
mov
cmc
lock
mov
sub
shl
in
sbb
mov
and
dec
inc
movsl
or
into
in
push
fdivr
stc
pop
fldcw
push
fdiv
sbb
lret
push
lock
mov
fstps
add
sub
jae
push
int
jbe
xchg
jo
enter
adc
push
dec
dec
icebp
dec
popf
or
dec
notb
popa
adc
push
xor
sbb
fcmovne
loop
scas
sahf
adc
pop
push
mov
shll
dec
cmp
sahf
idiv
stc
cwtl
addb
test
das
and
push
and
jns
mov
pushf
xchg
les
lahf
inc
dec
roll
ret
imul
pop
mov
ljmp
sbb
stc
cmp
mov
xchg
sub
repz
popa
mov
jge
xchg
mov
pop
mov
adc
mov
outsb
xor
pop
cmp
jge
popa
fcompl
icebp
icebp
jmp
pop
int3
in
and
sarl
fsubs
jb
ja
insl
mov
out
fstl
dec
and
ret
xchg
xchg
lds
sti
xchg
pop
cli
in
fsubs
mov
out
mov
sbb
imul
andb
push
mov
pop
fidivl
sbb
loop
jecxz
push
lods
ljmp
gs
push
mov
xor
or
cmp
or
cltd
push
arpl
cwtl
lret
jl
jp
jns
dec
xchg
in
push
lock
push
out
inc
imul
add
xchg
ss
dec
cmp
int
inc
pushf
mov
cli
iret
sbb
push
xchg
xor
inc
repz
ret
push
jae
and
shlb
scas
shrl
add
xchg
out
xchg
mov
mov
sbb
cmpsl
xchg
jle
subl
mov
cli
or
xor
scas
bound
mov
popa
ds
or
mov
inc
mov
xor
cmc
cs
clc
sar
mov
clc
shrd
std
bound
ja
test
jmp
cmp
rorl
or
sbb
aam
insl
pop
aad
mov
lret
mov
xlat
add
clc
pop
arpl
jbe
sub
aas
mov
mov
out
cmp
xchg
add
das
ds
in
popa
sbb
icebp
shlb
inc
xchg
ljmp
sbb
cmp
int3
imul
shll
jb
fldcw
mov
int
sub
mov
icebp
adc
sti
cmp
cs
aas
clc
dec
outsl
fildll
or
lock
sub
add
sub
mov
push
pop
adc
jge
lods
pop
inc
and
fisttpl
push
stos
inc
dec
pop
ds
mov
out
push
add
adc
jns
push
cmpsl
shl
xchg
insb
or
and
shll
ljmp
push
mov
and
incl
inc
cmp
mov
xor
push
test
aaa
sahf
sahf
rcll
adc
or
xchg
lcall
cmp
push
out
into
cld
stos
push
scas
fsubl
lcall
test
pop
test
icebp
jns
and
jbe
arpl
xor
imul
xchg
sbbb
mov
xlat
into
dec
pushf
gs
daa
cmc
or
jg
sbb
lods
and
sub
jo
shr
push
jnp
ds
push
xchg
or
or
data16
push
nop
and
dec
mov
cwtl
mov
lock
cmp
stos
and
push
test
testb
loop
cmp
jno
out
jae
int
mov
into
or
test
nop
lock
sbb
adc
push
add
stos
popf
add
and
mov
arpl
cs
daa
out
xchg
data16
in
cltd
sub
imul
lahf
mov
jne
mov
notb
mov
stc
hlt
icebp
pushf
insb
andl
cwtl
and
movsb
mov
jo
inc
pop
shll
lds
fcoml
adc
ja
ja
push
ret
gs
outsl
jecxz
pushf
pushf
je
inc
pop
pop
cli
insb
add
or
pushf
add
pop
or
cmp
dec
lahf
sbb
push
stos
pusha
lret
jmp
scas
dec
clc
mov
lcall
mov
ror
add
cltd
push
lahf
insl
repnz
pop
sub
cmp
inc
out
shrl
je
xor
pop
jnp
jg
ficomps
jo
xchg
icebp
pop
ficomps
push
out
push
test
xchg
xor
stos
jae
or
jmp
fcomps
mov
and
nop
rolb
fwait
mov
adc
jo
inc
insb
fisubrs
adc
arpl
nop
ds
andl
xchg
jns
sub
fs
pop
sbb
xlat
pop
loope
mov
int3
cmp
inc
push
sub
in
sbb
mov
lahf
inc
xor
inc
sarb
fsubr
dec
fcmove
jl
insb
inc
ds
mov
mov
mov
enter
mov
jl
scas
cs
scas
addr16
pop
adc
call
test
stc
sub
ds
maskmovq
notl
pop
dec
dec
bound
xchg
fldenv
into
dec
out
mov
mov
aam
cwtl
sti
test
xchg
push
popa
adc
outsl
nop
addl
loopne
in
or
fwait
popf
mov
push
mov
enter
jl
pop
jle
mov
aas
adc
adc
fistpll
xor
add
xchg
mov
jnp
rcrl
lret
test
cmpsb
add
rorb
pop
dec
and
ss
mov
inc
nop
add
jmp
jg
inc
fcmovnu
mov
add
pop
mov
loope
push
mov
rol
add
out
out
sti
call
add
pop
push
sub
clc
dec
repnz
add
test
adc
inc
inc
and
push
xor
adc
sub
dec
inc
into
mov
and
mov
out
in
sbb
fistl
movsl
in
xchg
inc
shr
and
mov
xchg
fiaddl
xchg
nop
inc
xor
lcall
das
xchg
mov
fisubl
push
jne
mov
test
xchg
jnp
faddl
mov
andb
cwtl
repnz
pop
mov
sbb
popa
or
ja
ljmp
and
stos
add
jp
dec
fmulp
mov
push
dec
pop
pop
fcmovu
sub
push
mov
jo
clc
ljmpw
outsb
ss
mov
xchg
cwtl
jae
lods
aas
jge
push
pextrw
xchg
cmpsb
cmp
rcrl
cltd
ja
inc
fcom
ret
dec
scas
xchg
mov
mov
pusha
push
test
xor
cmp
adc
jecxz
mov
mov
xor
xor
stc
lds
int
movsl
int3
mov
push
rcrl
mov
out
iret
int3
sub
sbb
ja
mov
inc
adc
jl
loop
insl
xor
dec
jp
in
scas
cli
push
aad
shrb
sbb
dec
sub
cltd
mov
not
out
adc
add
addr16
cwtl
repz
mov
js
dec
ficomps
in
out
xchg
xor
data16
lcall
sbb
sbb
xor
cs
xchg
pop
sub
inc
mov
mov
jb
sbbb
cmp
inc
out
scas
dec
int
push
ret
inc
popf
cli
dec
aaa
add
pop
das
mov
stos
sbb
inc
lock
stc
cmp
sbb
clc
and
in
shlb
aam
icebp
mov
rolb
in
insb
xor
sti
pushf
pop
movsl
pop
and
inc
cs
jmp
ret
or
enter
xchg
pop
mov
mov
xlat
add
rol
dec
xor
in
mov
test
stos
stos
mov
dec
mov
lahf
outsb
mov
not
daa
xor
sub
push
and
add
push
cmp
inc
mov
dec
popf
sahf
out
inc
gs
shll
arpl
push
addl
dec
sbb
leave
out
mov
arpl
push
flds
dec
push
adc
aam
aaa
add
mov
jl
jecxz
mov
repnz
fstp
stos
xor
or
cmpsb
add
movsl
jmp
iret
lds
int3
popl
mov
call
jae
imul
stos
mov
hlt
das
test
out
shr
leave
add
push
scas
push
adc
scas
movsl
roll
outsl
outsb
jbe
fcompl
test
sbb
test
push
push
in
mov
jg
mov
inc
mov
gs
ja
push
adc
sub
std
mov
lods
and
and
insl
inc
fnstsw
pop
ret
pop
and
add
lea
leave
jae
loope
insb
sbb
adc
sub
out
cmpsl
popf
jne
pop
inc
stc
fcoml
aad
ret
add
ret
fs
int
xor
ret
in
cmp
or
jne
xorl
mov
sub
in
mov
xchg
repz
mov
jae
es
push
movsb
add
sub
adc
jle
lds
or
mov
jp
shlb
and
les
clc
xor
int3
aaa
or
sub
adc
movsb
dec
inc
sub
sbb
popf
lret
cwtl
sti
addr16
push
arpl
jp
imul
pop
jne
pop
mov
inc
mov
loope
out
dec
mov
sbb
imul
mov
and
out
push
inc
std
jmp
arpl
nop
jb
mov
ret
call
adc
pop
call
mov
div
and
xchg
notb
sbb
repz
inc
into
sbb
mov
lret
int3
sub
inc
aad
into
ret
xor
mov
sub
xor
dec
or
int
and
mov
es
cmc
and
dec
ret
adc
aad
push
repnz
test
mov
mov
inc
cli
dec
repz
xor
inc
add
filds
outsl
aas
xorl
lea
notb
popa
int
push
std
jb
add
xor
jb
inc
loop
repnz
adc
ret
jb
add
xor
jb
inc
loop
repnz
adc
ret
jb
add
xor
jb
inc
loop
repnz
adc
ret
jb
add
xor
loop
test
mov
dec
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
out
lret
int3
ljmp
lods
les
push
dec
push
jp
or
or
or
mov
cld
fisubl
mov
insb
dec
jl
sub
outsl
cmp
or
sbb
push
lret
pop
ljmp
xchg
stos
pushf
mov
and
cmp
dec
dec
inc
pop
dec
inc
dec
addb
lahf
test
mov
mov
adc
shll
imul
add
dec
sbbb
lcall
lcall
outsl
rcrl
pusha
inc
or
jecxz
adc
mov
cmp
test
jns
dec
jl
pop
insb
pop
test
and
xor
iret
sub
xor
mov
jl
enter
rcrl
cmp
or
or
and
push
add
dec
mov
dec
dec
xchg
sbb
pop
cmp
hlt
inc
adc
adc
and
push
lds
jae
test
pop
lds
test
mov
sub
lds
ljmp
mov
out
cmp
jp
or
sbb
sub
test
mov
ret
int
out
clc
iret
pushf
into
insb
cmp
inc
sub
cmp
pop
jle
pop
gs
jns
mov
mov
jns
leave
xchg
or
sub
sub
push
mov
pop
outsb
orb
cmp
mov
mov
dec
push
jp
or
or
sbb
in
lret
int3
ljmp
mov
jl
dec
push
jp
or
or
sbb
in
lret
push
test
loop
ds
add
sbb
mov
fdivs
xchg
mov
scas
add
ljmp
mov
xchg
test
xor
jns
and
jb
xor
adc
xchg
fwait
inc
jo
sbb
xor
push
cld
push
mov
pop
leave
mov
jnp
add
popa
mov
add
cmp
mov
int
mov
ret
push
sub
in
stos
adc
and
insl
jae
jbe
lret
mov
andb
in
push
rcpps
mov
insb
jbe
pop
dec
and
out
fmul
arpl
leave
add
xchg
mov
cmpsb
mov
mov
pusha
dec
mov
imul
aas
xor
cmpsb
test
fisubrs
sarl
push
adc
dec
dec
inc
sub
jg
in
cmp
das
ljmp
inc
mov
or
mov
shrl
and
dec
rcll
rcrb
or
push
aas
inc
and
cs
subb
pop
sbb
adc
cltd
adc
inc
test
or
out
xor
jecxz
mov
and
les
cmc
pop
cli
xchg
xchg
lret
sbb
aaa
add
or
pop
sub
movsb
orl
mov
xchg
shrb
bound
popa
jp
sbb
test
cli
cmp
push
in
inc
push
ss
jno
pop
mov
jbe
mov
jl
xchg
jbe
adcb
mov
mov
outsl
ss
jecxz
pop
jl
dec
cli
sarl
leave
push
into
int
pop
sub
test
pop
mov
pop
or
clc
fwait
adc
jnp
int3
dec
outsl
gs
cwtl
pop
sahf
push
fsts
js
test
xchg
jno,pn
fmul
xchg
xor
mov
pushf
push
imul
and
ljmp
dec
add
mov
pop
mov
ret
movsl
adcl
xchg
bound
and
sub
ret
das
mov
pop
in
push
xchg
cmp
push
mov
xchg
outsl
roll
test
and
addl
cmp
lret
adcb
mov
movsl
fnstsw
scas
push
test
add
jle
mov
cmpsl
sarl
jns
mov
mov
pop
lods
fs
or
in
mov
jg
leave
arpl
push
rcrl
fs
mov
out
out
aad
or
mov
mov
addr16
imul
test
outsl
ja
loope
sahf
mov
xchg
rcll
mov
cltd
stc
leave
imul
mov
cwtl
sbb
out
fnstenv
inc
pop
ja
cli
loop
bound
dec
ficompl
stc
lahf
pop
movzbl
jno
jge
mov
jle
popa
int3
ret
scas
adcl
pop
out
lea
mov
test
xor
lret
add
and
mov
jmp
fcomip
lock
call
push
jae
in
lahf
lahf
sbb
mov
pop
cmc
pop
push
sbb
adcb
mov
mov
out
in
scas
int
inc
push
movsb
test
daa
stc
cmc
ret
push
in
add
pop
sbb
or
arpl
mov
push
mov
mov
xchg
xor
les
xor
xchg
push
ljmp
and
pop
cmpsl
push
or
sbb
pop
std
pop
lret
cmp
clc
pop
dec
aad
adc
enter
and
add
cmc
xor
in
and
bound
adc
sbb
jae
xchg
xorb
repz
in
shll
aam
movsb
adc
mov
jmp
test
cmp
out
sarb
shlb
arpl
mov
arpl
idivb
in
push
outsl
adc
xchg
in
jge
adc
pop
xchg
popa
bound
ror
cmpb
nop
and
test
mov
std
stos
arpl
inc
or
mov
out
nop
xchg
js
and
repnz
int3
lods
cwtl
jo
pop
adcl
or
sarb
add
loop
and
ljmp
int
xor
adc
lods
mov
jnp
out
pop
das
sbb
sbb
pop
mov
daa
mov
lret
nop
popf
and
sbb
inc
mov
sub
sub
clc
push
cmpsb
fildll
jge
int3
sbb
pop
pushf
shlb
out
je
in
mov
outsb
push
sbbb
adc
pusha
nop
xchg
xchg
xorb
movl
bound
mov
iret
addr16
fildl
int3
out
pop
push
push
inc
sbb
sti
flds
push
pop
push
loope
push
push
add
cmp
pusha
mov
andb
cltd
arpl
add
xor
in
sub
dec
popa
mov
aam
inc
in
or
mov
xor
loope
mov
cwtl
pop
xchg
mov
hlt
bound
repnz
imul
rorb
enter
pop
fisttps
je
scas
mov
mov
jmp
ss
shrl
add
push
pop
out
shlb
mov
push
aam
notb
mov
jne
cmpsb
mov
sbb
lea
pushf
cmpsb
les
decb
pop
sbb
adc
sbb
lock
lods
and
push
les
out
aad
push
pop
mov
lea
jae
sub
mov
mov
inc
xchg
adc
js
shrl
pop
xchg
or
jb
cwtl
imul
dec
mov
in
sbb
sub
hlt
scas
jp
lock
adc
cwtl
push
ja
and
shr
in
test
cld
rclb
mov
cmpsl
movsl
in
mov
dec
cmp
push
cltd
sarl
adc
mov
fdivs
or
mov
movb
dec
bound
stc
adc
cld
addr16
mov
mov
push
mov
lods
notb
es
rcll
pop
add
adc
mov
mov
pushf
or
mov
repz
mov
mov
push
jle
sbb
sbb
leave
dec
adc
cmpb
sbb
ja
xchg
push
or
push
inc
adc
push
mov
add
subps
fwait
mov
cmp
xchg
aaa
cmp
outsb
cmp
sbb
pushf
push
test
movl
int
int
or
mov
sbb
push
aam
pop
js
xchg
inc
adc
in
xchg
push
add
pop
pushl
outsl
rcrl
enter
push
testb
dec
inc
xchg
mov
xor
movsl
out
sub
ficomps
aaa
mov
in
jmp
rcrl
dec
adc
xor
or
dec
mov
cmp
mov
int3
sbb
in
inc
cmp
enter
rorl
inc
scas
gs
adc
inc
mov
je
xlat
mov
xor
ret
mov
test
data16
mov
push
xor
dec
inc
adc
or
addl
scas
inc
rcll
mov
add
push
jmp
and
mov
aad
cmp
pop
xchg
adc
lds
cmc
jl
mov
push
xchg
mov
mov
or
adc
sbb
mov
movsl
push
xor
mov
lret
nop
stos
xor
xlat
xchg
fdivr
fidivl
dec
push
ss
xchg
clc
icebp
aaa
push
adc
push
aam
dec
loop
je
pop
cmc
pop
xchg
cmc
jge
sub
rorl
add
mov
sub
add
lods
in
daa
loope
out
leave
cld
dec
gs
mov
jne
sub
and
mov
sbb
stos
mov
sbb
shrl
ret
clc
or
flds
imul
dec
and
xchg
pop
lcall
cmp
ja
cmc
mov
jnp
enter
gs
mov
pushf
dec
dec
mov
push
pop
insb
movsl
mov
test
out
add
stos
mov
mov
call
rcrl
mov
in
push
push
or
sbb
mov
aas
lds
xchg
mov
das
popa
xor
icebp
add
push
fisubrs
loope
insl
ds
clc
mov
cmpsl
xchg
sahf
ret
icebp
jns
mov
mov
cmp
xlat
aas
std
and
test
shll
mov
cmp
cltd
add
je
sbb
in
in
lock
sub
and
nop
jns
sbb
dec
in
cltd
stc
pop
ret
nop
ret
jl
imul
adc
dec
sti
dec
aas
fcmovbe
movsb
mov
mov
sti
insb
loop
jmp
sbb
add
push
add
xor
popa
sbb
dec
sbb
repz
jle
shl
and
in
xor
xor
adc
ret
mov
pop
jno
mov
out
and
sbb
std
jge
adc
nop
sbb
fnsave
out
add
mov
jnp
mov
andl
mov
dec
pop
sbb
ljmp
hlt
cmpsb
push
mov
stc
pop
enter
int3
mov
insb
gs
xor
pop
sub
hlt
push
and
xchg
xchg
in
mov
ds
shlb
ret
cmpsl
inc
lea
sbb
sbb
dec
notb
sarl
mov
mov
out
mov
out
and
pop
push
cmc
into
inc
lret
pop
dec
sahf
or
xchg
and
cltd
cmc
dec
mov
faddl
add
mov
sub
lods
cmp
and
adc
push
jmp
insb
cmp
fwait
push
pop
mov
mov
test
fs
scas
fistps
jge
cmp
fst
and
cmp
sub
cmp
dec
cmpsb
mov
inc
jae
orl
popa
jmp
ljmp
inc
adc
and
xchg
mov
fistps
add
push
push
rcr
pop
mov
cltd
pop
add
cmpsb
mov
leave
xchg
nop
mov
adc
jle
repnz
call
movsl
ret
push
es
testl
mov
repz
cmpsb
inc
xor
mov
cmc
sahf
shlb
push
dec
rcrl
ja
icebp
inc
ja
mov
idivb
enter
cmp
mov
es
arpl
sbb
push
in
inc
repz
fwait
mov
mov
adcb
scas
sbbb
dec
xor
lock
outsl
mov
je
mov
xchg
mov
sub
sbb
or
bound
int3
push
scas
shlb
and
push
sub
outsb
or
inc
adc
je
xchg
or
enter
add
jle
cmp
or
sub
add
mov
stc
mov
movsl
push
mov
push
fists
jns
ret
rcl
jp
dec
rcll
js
ret
push
inc
fiaddl
mov
cmpsl
sbb
popa
loop
das
mov
stos
incl
adc
cltd
pop
mov
addr16
mov
sub
ss
inc
jns
pop
jbe
fimull
push
mov
aas
hlt
pop
cmc
push
push
pushf
add
or
inc
push
add
dec
push
dec
hlt
adc
pop
dec
imul
jns
push
jg
testb
push
idivb
fisubrs
neg
mull
in
xor
repz
sub
add
notl
sbb
sub
mov
mov
popf
mov
lret
jno
pusha
cs
jmp
push
insl
cwtl
xor
shl
dec
loopne
add
sub
mov
cmpsb
pop
push
and
mov
inc
lret
sbb
jl
gs
pmullw
xchg
test
adc
xchg
cmpsb
jns
les
aaa
and
mov
lret
pushf
adc
fsubr
and
ljmp
adc
pop
out
and
pushf
or
loop
mov
adc
pop
hlt
out
scas
adc
shlb
cmp
mov
mov
and
cwtl
cmp
jbe
mov
and
jnp
dec
or
pop
xchg
jno
bound
loope
pop
lock
cmp
aas
mov
inc
cli
xor
xchg
es
sti
dec
mov
lahf
add
daa
add
adc
sbb
mov
push
out
popa
lret
inc
arpl
shlb
loope
inc
fistpll
aam
insb
cmp
loope
sub
push
cs
xlat
xor
jle
add
insl
dec
arpl
sbb
add
dec
out
stos
jne
popa
jne
cltd
xchg
mov
sbb
add
ret
push
cmp
cli
mov
mov
aas
mov
mov
mov
cmp
loope
js
adc
xchg
aaa
ss
dec
and
fnstenv
mov
sbb
sub
sbb
cli
test
movsl
repnz
mov
in
addr16
cmovbe
sbb
test
cld
aam
popf
call
lods
or
adc
mov
jb
loop
shl
cs
mov
stos
mov
sub
shlb
loope
sti
enter
std
les
dec
leave
jge
loopne
jmp
push
xor
jle
or
and
jne
add
jmp
aam
and
or
mov
mov
out
ljmpw
sbb
mov
xor
arpl
stc
sbb
jmp
test
xchg
in
aaa
add
push
nop
negl
int3
cltd
jnp
cmp
dec
push
sbb
add
push
push
mov
inc
outsl
xor
push
lods
push
movsl
mov
mov
mov
jbe
mov
mov
jle
add
stc
xchg
add
mov
mov
push
jnp
mov
add
icebp
dec
rorl
rcrl
sub
cmpsb
inc
mov
and
mov
cmp
mov
xchg
loope
cmp
rcrl
xchg
and
inc
push
sub
ret
inc
and
sub
dec
std
pop
and
loopne
sti
icebp
stos
mov
gs
cltd
push
xlat
sub
pop
imul
loopne
mov
mov
in
shl
push
cwtl
jl
loop
inc
jne,pt
test
repz
sbb
mov
xlat
shll
nop
xor
push
sub
fidivs
pop
fs
inc
mov
jecxz
push
mov
jne
int
aaa
xor
fildll
enter
push
gs
mov
add
das
pop
jo
addr16
rol
cmp
push
repz
iret
fwait
test
jmp
sbb
repnz
mov
inc
or
rcrl
lods
jge
dec
inc
mov
mov
pop
mov
dec
inc
mov
lds
int
out
imul
mov
xor
xor
in
sbb
iret
popf
les
dec
aad
filds
sub
xchg
ljmp
neg
aad
repz
sahf
and
push
cmp
movsb
mov
fisubrs
ds
nop
sub
movsb
dec
lock
cs
popf
push
mov
out
dec
rcrb
cmp
mov
js
jge
repnz
mov
fisttpll
iret
loop
test
xor
call
sbb
or
push
or
xchg
jo
lock
icebp
scas
lods
rcrb
aaa
and
jae
lret
sbb
pop
pop
adc
movaps
mov
aam
ds
pause
dec
rclb
pop
cmc
pop
push
mov
pop
sahf
adcl
pop
std
aad
pop
pushf
push
xchg
out
sar
mov
icebp
xor
pushf
cmp
jns
sub
jmp
and
lea
out
addr16
mov
push
add
xor
shl
je
jecxz
xchg
negl
test
adc
add
mov
gs
fstpt
les
test
pop
loopne
addr16
ljmp
mov
data16
pushf
xchg
inc
movsb
fs
in
jmp
gs
push
rcrb
mov
dec
notb
push
js
mull
mov
movsb
mov
int3
mov
mov
or
lods
xor
mov
jecxz
fs
pop
fcoml
call
mov
arpl
jne
sbb
jo
dec
mov
xchg
hlt
mov
pop
xor
add
popa
mov
faddl
incb
and
outsl
dec
ja
gs
jb
push
movsb
into
mov
repnz
mov
or
push
xchg
rclb
push
jno
dec
xor
fcomp
stos
imul
ss
mov
and
sbb
lret
std
clc
test
inc
popa
aas
push
jl
dec
push
lcall
mov
stc
pop
lods
mov
lahf
sub
icebp
dec
lret
sub
mov
dec
xchg
out
xor
push
ret
inc
dec
and
pop
mov
imul
jl
mov
popa
or
repnz
cli
and
test
fwait
int3
mov
xchg
xor
mov
xor
fwait
mov
adc
mov
movb
xlat
push
iret
pop
cli
inc
adc
cmc
or
jp
mov
rcl
icebp
cmp
lds
cmp
cs
add
lods
push
mov
mov
mov
cmp
add
pop
outsb
pop
cmp
sub
xchg
loop
adc
and
jo
dec
jmp
xor
out
shll
mov
jae
das
arpl
mov
insb
sbbb
add
mov
mov
es
push
inc
xchg
and
push
stc
adc
add
jne
xchg
ss
aas
loop
movsl
std
adc
enter
scas
jle
sub
inc
push
dec
stos
into
iret
stos
cmp
jl
pop
and
mov
add
clc
mov
inc
xor
xchg
adc
outsl
inc
pop
daa
sbb
mov
xchg
or
xor
add
mov
jns
cmp
je
in
push
jmp
pop
leave
push
lahf
and
dec
push
js
bound
pop
inc
sub
pop
rorl
fwait
push
aas
mov
rcrl
or
xchg
test
bswap
push
ljmp
rorl
xorb
mov
jp
in
dec
daa
fs
sahf
dec
fisttpl
sub
repnz
jecxz
inc
adcl
xor
dec
adc
gs
adc
add
inc
pop
fisubrs
out
insl
push
cmp
or
push
lock
lock
into
inc
out
jecxz
scas
mov
outsl
imul
pop
xor
cs
dec
ja
add
fbstp
pop
pop
jle
cwtl
push
push
pop
mov
fdivr
sbb
push
mov
pushf
mov
popa
push
inc
pop
ret
aad
sub
loopne
mov
and
scas
push
cltd
in
fs
fidivl
aam
iret
adc
push
jb
shl
pop
or
adc
in
xor
and
imul
lcall
sti
jmp
fsubrl
dec
clc
rcr
nop
xor
lret
or
push
test
hlt
aam
or
sub
mov
cld
lea
jno
dec
outsb
mov
js
cmc
sbb
mov
in
mov
popa
ja
fwait
rclb
xchg
cmc
out
xlat
sahf
add
pushf
inc
adc
push
mov
and
in
and
push
mov
and
fisubrs
cld
cmpsb
sub
in
aam
xchg
inc
lods
adc
test
or
in
sahf
arpl
pushf
dec
fwait
shll
jle
daa
in
aas
mov
xchg
push
cmp
cs
push
mov
mov
sbb
stos
jno
lret
mov
jb
daa
or
out
mov
adc
cmpl
dec
sub
daa
inc
mov
adc
stos
pop
call
iret
jnp
in
pusha
popf
popl
pop
push
xchg
xor
jge
std
cli
mov
push
aad
in
flds
bound
mov
ret
pop
lods
mov
lret
or
inc
adc
pop
mov
into
sti
lods
adc
mov
sub
xchg
mov
jne
sub
sub
scas
pop
mov
cmp
push
les
push
stos
insl
mov
pop
outsl
ss
outsl
mov
fwait
adc
into
cmp
cltd
inc
int3
cwtl
aad
cmpb
cmp
popf
mov
add
and
add
fcompl
push
aas
dec
aam
movsb
mov
aaa
or
arpl
jecxz
pop
cmp
or
cltd
add
cli
js
mov
mov
cltd
adc
jg
scas
jae
js
pop
pop
iret
mov
adc
mov
xor
cli
popf
divb
ficoms
ss
jne
das
sub
lea
inc
adc
add
iret
stos
push
push
mov
xor
insb
sub
leave
stos
test
loopne
push
stos
pop
xchg
mov
mov
jo
inc
inc
int3
jne
sbb
add
push
xor
xor
aad
push
ljmp
sbb
rorb
xor
push
mov
out
jns
fisubl
mov
outsl
stos
daa
scas
in
jle
stc
dec
add
cmp
mov
mov
scas
jo
and
scas
int
or
and
inc
je
pop
pop
repnz
cmp
push
std
stc
fiadds
push
and
fcoml
push
jg
pop
gs
jecxz
push
inc
jno
out
mov
fdivr
lods
mov
insb
dec
jl
dec
push
jp
or
or
sbb
in
lret
int3
ljmp
mov
jl
dec
push
jp
or
or
sbb
in
lret
lods
ljmp
mov
jl
mov
or
or
hlt
cmp
lret
xchg
ljmp
mov
xor
push
or
repz
lds
xor
jge
add
bound
mov
subb
loop
mov
ret
or
fcoms
enter
test
cwtl
push
cmpsb
test
mov
out
push
dec
loop
repz
sbb
or
pop
sub
sbb
mov
pop
xchg
inc
mov
out
cmp
cmp
imul
push
mov
jl
push
mov
sbb
xchg
dec
sbb
xchg
loopne
and
out
inc
and
mov
aaa
movsl
lods
lea
mov
fwait
ja
xchg
jge
lahf
sbb
movsl
ja
xchg
pop
inc
scas
nop
xor
sub
jae
push
push
dec
js
pop
insl
mov
lret
mov
push
clc
and
loop
cltd
enter
cwtl
stos
pop
push
add
andb
movsl
and
je
cs
pop
and
mov
push
pop
inc
je
pop
dec
aas
xchg
mov
repz
ret
pop
dec
lods
lahf
sbb
idiv
pop
mov
sub
jge
xchg
and
push
loop
and
shlb
je
enter
enter
test
cwtl
dec
sbb
pop
mov
ljmp
clc
push
xchg
jbe
push
sbb
aas
iret
cmp
sub
insb
mov
and
adc
icebp
pop
mov
or
js
ja
sub
mov
or
adc
cwtl
push
mov
pop
xchg
dec
loop
repnz
sbb
or
clc
xor
add
adc
bound
push
mov
pop
xchg
dec
loop
repnz
sbb
or
clc
icebp
mov
dec
fistps
std
xor
mov
aaa
rcll
leave
movsl
fcompl
inc
xchg
iret
inc
jg
test
mov
insb
pop
int3
popa
out
and
adc
nop
test
cmpsl
into
and
xorb
sub
mov
popa
data16
ret
jb
je
sub
mov
ret
jne
lods
rorl
pop
jg
in
push
cltd
iret
sub
add
jo
cmp
sub
cmp
mov
cmc
xchg
jmp
push
dec
vpmullw
xor
dec
dec
loop
pop
jecxz
pop
inc
dec
xor
movsb
in
cmp
dec
jl
ja
or
jp
daa
push
test
cmp
aaa
sahf
int
insb
cli
pop
cltd
jo
xchg
jb
xor
mov
sub
adcb
mov
popl
pop
push
pop
test
push
mov
cmpsb
repz
xchg
cmpl
jle
mov
push
push
fstpl
out
and
adc
and
dec
xchg
bound
xor
out
inc
imul
jp
dec
clc
scas
and
in
push
adc
cmovge
shll
xor
dec
jb
cmp
sub
stos
add
adc
pop
sub
push
xchg
sbb
stc
mov
out
movsb
mov
jbe
stos
aam
and
adc
enter
push
sbb
mov
ss
pop
mov
out
adc
cmp
int
xchg
and
push
xchg
adc
mov
pushf
xor
sbb
add
sahf
xor
call
in
push
inc
mov
cmpsl
clc
cld
gs
mov
imul
in
pop
test
stos
arpl
cmp
mov
outsl
sbb
mov
into
in
sub
pop
and
jno
jbe
cmp
jne
push
dec
insl
cmpl
jns
inc
adc
push
addr16
fidivl
pusha
popa
xor
xchg
xlat
pop
xor
pop
lret
ljmp
loopne,pt
fnstsw
stos
ja
jnp
mov
imul
movsl
ret
imul
mov
cmp
push
fcompl
or
push
push
leave
xor
repz
ret
mov
pop
add
add
xor
xchg
iret
repz
repnz
inc
adc
jae
or
xor
loop
push
sbb
int3
aas
jb
push
cli
cmp
add
cmp
jns
jb
push
loope
sahf
inc
fisubrs
aad
add
outsb
pop
repz
scas
sub
mov
jp
inc
jg
or
mov
push
mov
out
out
aad
je
pop
movsl
push
ficoms
je
inc
inc
pop
test
sahf
fnsave
aam
sbb
repnz
in
insl
adc
int
mov
imul
and
pop
sub
bound
jl
cwtl
inc
js
aam
xor
jae
push
jno
les
insl
call
sub
stos
cmp
movsl
mov
xchg
mov
xchg
mov
pusha
cltd
lods
cs
decl
sub
mov
pusha
rcrl
adc
call
pop
int
add
test
repz
lret
adc
inc
imul
xor
shlb
jle
and
lret
fdivrl
sbb
ret
fdiv
push
icebp
cmpsb
in
pop
lds
mov
and
gs
je
movsb
mov
std
ja
or
add
xchg
fildl
sbb
mov
xor
xlat
shll
arpl
push
xor
sbb
xchg
xchg
insl
jmp
inc
dec
mov
mov
pop
clc
stos
jno
lcall
cwtl
push
inc
scas
xchg
adc
dec
push
xchg
shr
jp
add
jnp
mov
mov
cvtdq2ps
jbe
pop
shrl
mov
movsb
xlat
ss
ficompl
cmp
stos
neg
cld
inc
adc
cltd
push
in
mov
aad
das
imul
imul
sti
jae
pop
jp
xor
mov
sarb
or
gs
or
cmpsb
sbb
cmpsl
mov
jle
sub
mulb
dec
adc
push
or
fwait
push
ljmp
loop
cmc
aad
hlt
pushf
sbb
fisttpll
lret
or
daa
insl
mov
ljmp
adc
push
aam
and
adc
mov
inc
mov
in
or
jne
inc
daa
add
push
out
jl
xchg
or
jnp
add
push
dec
lea
push
sbb
inc
outsl
inc
cwtl
mov
ljmp
shrl
outsl
xchg
dec
mov
jg
and
and
shll
ds
frstor
loop
inc
xchg
pop
fidivl
ret
jp
jo
fisttps
push
inc
pop
lods
pop
stc
prefetch
jmp
adc
sub
movsb
or
sub
js
dec
mov
xchg
jecxz
mov
in
inc
pop
or
dec
xlat
std
ret
or
addb
add
xor
and
dec
aaa
pop
dec
ljmp
jnp
les
enter
out
jg
or
xor
lods
xlat
xchg
or
es
sbb
test
adc
insb
cmpsl
adc
loopne
data16
add
les
sbbb
jne
icebp
int3
sbb
jo
push
xor
sbb
dec
gs
repnz
sub
testl
and
adc
ds
push
add
pop
pop
cwtl
cli
mov
cs
mov
jecxz
sub
mov
push
ds
sub
or
mov
cmp
hlt
pop
xor
sub
fistl
je
sbb
push
mov
out
das
ret
lds
ss
inc
test
daa
fidivs
push
pop
or
rcll
scas
cmp
inc
sub
int3
testl
mov
outsl
mov
xchg
sub
repz
lods
and
add
setnp
neg
popf
and
push
lds
shlb
jecxz
dec
mov
call
imul
jno
push
jecxz
jle
adc
sub
xor
pushf
lahf
adc
iret
push
inc
inc
fldenv
cld
inc
hlt
dec
test
jae
pop
fdivp
mov
pop
push
aad
cmc
pop
hlt
mov
adc
cmp
rcll
cmp
repnz
call
dec
lret
pusha
ja
cmpsl
sub
mov
adc
or
call
ret
xchg
inc
sti
and
bound
int
sbb
lret
pop
cli
lods
mov
dec
imull
mov
jo
lock
adc
inc
jl
cmp
add
mov
mov
push
iret
and
cmpsb
bound
sbb
pop
rorl
fsts
mov
mov
aad
js
lock
sti
test
sub
or
aam
int
aad
mov
leave
mov
push
jae
test
loope
inc
movsl
add
pop
scas
pop
jmp
dec
repnz
xchg
jg
rcll
les
mov
popa
xchg
in
fs
mov
imul
add
or
mov
insl
scas
xchg
int
and
sbb
jno
stos
lret
pop
dec
pop
sbb
push
sub
loop
sbb
push
inc
pop
push
and
frstor
fwait
sbb
sbb
movsb
les
into
loope
pop
lahf
adc
shl
jae
das
jno
aas
shl
pop
test
and
fiadds
lock
cld
int
xchg
sti
pushf
push
xchg
add
cwtl
sbb
dec
scas
jp
push
sub
push
loope
lret
cmp
or
cmp
xor
adcb
sbbb
push
aaa
addl
mov
adc
lock
mov
jne
jo
cmp
lods
ja
js
movsl
xchg
pop
add
aaa
test
cltd
test
pop
loope
into
es
imul
fsubrp
push
cmp
and
sbb
xchg
xchg
rcll
pop
pop
clc
outsb
or
repnz
gs
adc
xchg
pop
and
insb
xor
sbb
movsb
daa
lret
test
sbb
inc
cld
insl
data16
or
imul
aaa
or
jecxz
dec
mov
mov
imul
lock
push
in
xor
loopne
fcoml
out
cmp
ja
iret
cld
lahf
lret
add
push
les
cs
lds
mov
jl
fsubp
stc
inc
test
in
outsl
orl
cmpsl
xlat
push
sub
lret
sbb
add
jno
adc
std
mov
fiaddl
in
pop
paddw
push
ss
pushf
cltd
add
xor
int
cltd
sub
adc
js
push
and
in
xor
lock
fstpt
fisubrs
xchg
test
ret
dec
jns
push
jge
in
adc
jecxz
cmp
mov
pop
mov
add
mov
enter
js
or
movsl
mov
cmp
mov
iret
out
sub
cmp
pop
and
je
mov
loopne
not
repz
loopne
sti
pop
fs
xor
mov
pmullw
push
inc
mov
cwtl
pop
sbb
push
push
xchg
adc
push
stos
push
push
fld1
mov
roll
stos
push
stos
fisubrl
js
mov
push
sub
mov
cld
push
add
sbb
adc
loope
in
sbb
cltd
push
jge
ljmp
icebp
pop
cs
es
push
insb
ficompl
lret
jle
cmp
xor
loopne
adc
push
fldl
mov
xchg
or
popl
test
test
cmp
cs
shll
and
adc
sub
xchg
dec
mov
jb
daa
mov
sbb
popf
fstpl
dec
icebp
jmp
fistpl
inc
or
cmc
inc
mov
mov
jne
cmp
mov
daa
xchg
mov
push
push
pop
out
jne
insl
xor
stos
sub
popf
filds
and
push
sub
test
push
aad
cmc
add
movsl
jnp
fiadds
inc
fdivs
cmp
xchg
mov
push
jae
test
out
xchg
adc
imul
mov
out
scas
add
test
inc
arpl
cld
pop
mov
mov
xchg
lret
xchg
mov
out
cmp
in
push
lcall
test
xlat
shlb
das
mov
pop
pop
xor
pop
sub
xor
cmpsl
mov
xchg
and
imull
cwtl
adc
adc
xor
into
dec
loope
jecxz
loope
mov
cmp
xchg
dec
cmp
dec
data16
lock
std
pop
xor
movb
mov
clc
inc
push
xor
lock
jl
dec
jno
les
sub
clc
push
enter
loop
mov
outsl
jge
mov
xchg
movsb
cmp
arpl
jp
mov
lret
fildll
pop
xor
cmpsb
inc
outsl
rcl
movsb
push
inc
xchg
jmp
gs
add
sub
mov
or
repnz
dec
in
sti
sbb
divb
aaa
shll
adc
enter
arpl
enter
and
cwtl
sbb
das
scas
cmp
xchg
xor
xorl
cli
inc
sub
pop
mov
sbb
add
mov
in
test
push
push
inc
stos
aam
push
imul
int
mov
frstor
add
fistpl
icebp
cli
adcb
ja
jo
cmp
in
push
ljmp
iret
cmp
addr16
xchg
das
hlt
push
insl
lret
lods
lcall
xlat
fnstsw
in
mov
jbe
testl
in
fbld
mov
je
adc
out
push
loop
repz
push
aad
imul
fadd
mov
scas
int3
add
xchg
mov
jno
test
js
sbb
xor
ret
outsb
pop
ret
mov
in
inc
push
popa
shll
push
mov
loop
mov
mov
cli
not
sarb
inc
xchg
fst
cmp
in
jg
pop
mov
mov
mov
inc
or
dec
jmp
repz
mov
jecxz
movl
rcll
mov
sub
shll
lock
test
pushf
nop
mov
inc
out
mov
and
imul
sti
test
in
gs
inc
cmp
ja
push
jno
adc
fwait
out
push
xlat
into
cmp
cmp
xchg
lahf
push
addr16
and
testb
call
jno
xchg
adc
pop
outsb
xchg
movsl
jne
call
cmpsl
stos
daa
cmpsb
add
jge
jae
lret
lock
sahf
jae
pusha
pop
and
push
pop
adc
pop
dec
into
dec
stc
std
rcr
cmp
push
rcrl
rclb
push
push
sahf
cwtl
jnp
es
mov
in
int
sbb
test
imul
push
negl
mov
cmc
pop
mov
xor
sbb
ds
dec
add
mov
imul
aaa
rcl
mov
ja
lods
lea
icebp
jg
nop
arpl
and
jbe
loopne
push
push
mov
pop
jnp
cmp
sub
push
stos
in
ror
sub
jmp
leave
sub
mov
leave
cmpsb
pop
js
imul
and
enter
xor
call
and
ficomps
hlt
sbbl
adc
loopne
or
cli
push
jae
xor
and
test
sbb
inc
in
fstpt
fisubs
jp
mov
adc
neg
pop
outsl
das
sbb
insl
xchg
leave
es
insl
sti
add
adc
in
jecxz
inc
ljmp
cmp
dec
xchg
enter
xchg
lret
push
fwait
popf
test
into
sub
fnsetpm(287
es
mov
sub
lds
arpl
inc
xor
pushf
pop
push
xor
fs
jns
mov
bound
xchg
mov
or
loopne
test
gs
fwait
mov
inc
cmp
or
inc
inc
push
nopl
nop
out
xchg
xchg
jle
xor
cltd
lods
icebp
arpl
mov
push
insl
cmp
loopne
push
push
jns
xor
insl
push
xchg
jne
arpl
fucom
mov
fsubs
in
in
fidivrs
adc
xlat
xor
lds
dec
outsl
push
adc
js
int3
sti
scas
inc
jg
or
lock
sub
into
outsb
pop
jg
and
cmp
lds
or
jno
ss
push
mov
mov
add
mov
mov
sub
cltd
in
lods
mov
mov
jmp
subb
clc
cmc
mov
lcall
adc
sbbb
push
out
loopne
rorb
out
sub
push
jecxz
cwtl
lahf
jg
movb
add
cmpsl
and
pop
xchg
out
and
in
sbb
jnp
sub
in
sbb
and
mov
mov
addl
jp
xor
int
clc
adc
push
cmp
lahf
mov
icebp
or
repnz
add
push
mov
push
push
lods
push
data16
dec
incl
out
push
mov
cltd
xor
enter
clc
sub
and
insl
dec
xchg
xor
insl
dec
inc
xchg
xor
mov
dec
xchg
int
mov
dec
test
aaa
cmpsb
inc
mov
lret
sub
xchg
or
jns
daa
mov
lret
jecxz
xchg
add
adc
lods
push
xor
sarl
popa
mov
xchg
sbb
popf
push
js
push
fcmove
ljmp
dec
fsts
lahf
ficompl
cmc
clc
inc
hlt
sub
xor
pop
or
and
ja
cltd
movsl
imul
dec
jns
sbb
lea
std
xchg
mov
mov
cmc
lret
stos
inc
movsb
xchg
test
sub
fwait
dec
aam
fcoms
mov
mov
adc
ja
mov
movups
in
adc
jmp
cmc
jns
in
dec
dec
outsl
jno
cmp
aas
mov
pop
xchg
pusha
add
sub
mov
or
mov
push
imul
push
mov
ja
xchg
inc
test
lcall
pop
fistl
dec
scas
loope
movsb
adc
lock
cmpsl
sub
lcall
les
fistps
xchg
arpl
mov
cli
xchg
pop
mov
mov
xchg
mov
enter
and
inc
cmp
icebp
js
sar
pop
inc
jo
mov
orl
xor
mov
cmp
outsl
loopne
mov
into
xchg
ja
jns
and
mov
xchg
push
scas
jp
lock
outsl
mov
mov
cli
and
jmp
aam
inc
push
ret
push
xchg
out
fidivs
lret
out
xor
ja
adc
repz
leave
cmpsl
pushl
mov
sbb
lea
andb
fmuls
popf
daa
lods
jae
add
cmp
ss
xor
xlat
jbe
in
push
mov
push
mov
out
cmp
lods
popf
pop
js
push
mov
test
or
jg
inc
push
mov
hlt
push
jge
jb
aaa
jae
inc
cltd
jae
pop
xchg
mov
imul
jno
dec
pop
sbb
xchg
stos
sbb
loop
mov
rcrb
js
adc
lock
fiadds
pop
roll
push
pop
call
pop
scas
xchg
xchg
push
adc
push
inc
mov
mov
lret
ljmp
test
xchg
test
clc
arpl
scas
test
ret
aaa
pop
and
repnz
icebp
pop
mov
das
sub
jecxz
out
push
imul
hlt
add
xchg
push
push
xchg
mov
mov
push
das
and
sub
mov
leave
mov
cmpsl
and
pusha
imul
adc
rol
dec
cmp
cmp
frstor
push
scas
pop
mov
movsb
mov
and
sbb
outsl
and
icebp
mov
call
dec
arpl
pop
mov
lods
and
dec
pop
mov
fidivl
push
xchg
aam
adc
jmp
add
cmp
xorl
or
adc
movsl
shr
mov
xchg
mov
dec
and
mov
cmpl
pop
sarb
out
adc
pop
mov
push
dec
movsb
or
xchg
mov
xchg
loope
decl
mov
loopne
stc
xor
xchg
mov
mov
sbb
out
adc
aad
push
mov
jmp
inc
mov
test
insl
iret
inc
les
scas
das
leave
into
fwait
sub
sbb
xor
sarl
repnz
sahf
pop
call
leave
rclb
jb
scas
lcall
popa
test
pop
push
push
add
adc
push
in
fldt
push
mov
add
xchg
stc
xchg
repnz
mov
push
fcom
notl
push
push
xor
mov
outsb
ret
shll
jae
ds
jle
test
jmp
push
lret
mov
popf
push
mov
add
pusha
jl
sub
aam
mov
push
test
stos
fisttpll
sub
loopw
xchg
cmp
push
or
loop
and
sti
insb
xchg
movsl
jo
mov
push
popf
addb
xchg
sbb
gs
jle
sub
or
pop
xchg
push
daa
jl
ret
aad
scas
out
cmc
adc
lock
push
add
xor
test
imul
sub
jne
xor
inc
mov
sub
mov
fstl
jae
push
popf
pop
test
mov
mov
xor
stos
or
scas
es
add
jl
cmp
pop
xor
dec
xchg
add
pop
dec
xchg
ljmp
sarl
movsb
mov
inc
push
popl
rolb
andl
stos
sbb
sub
and
dec
mov
mov
or
add
fsubrl
xor
jg
test
scas
sbb
add
adc
sbb
mov
out
cmp
adcb
shlb
icebp
push
nop
cmpsl
nop
les
push
and
movsl
inc
pusha
dec
push
push
mov
data16
or
dec
mov
pop
rorb
fwait
mov
or
fwait
mov
das
inc
inc
out
xor
inc
lea
add
sub
shll
orb
xchg
test
je
lahf
mov
loop
xchg
sahf
loop,pn
popf
mov
xchg
stos
stos
mov
loope
push
adc
xchg
mov
test
mov
les
xchg
call
pmaxub
mov
sub
mov
ds
dec
enter
sbb
outsb
fstpt
ret
daa
push
mov
or
scas
fsubl
outsl
inc
push
dec
mov
mov
dec
push
and
dec
mov
fstpt
repnz
adc
jns
dec
jne
pushf
xchg
loope
jae
loope
sar
mov
inc
out
aas
fs
xchg
mov
sahf
dec
test
xorb
dec
sub
jns
sbb
enter
test
cwtl
push
mov
pop
xchg
dec
loop
repnz
sbb
or
clc
xor
add
adc
bound
push
mov
pop
xchg
dec
loop
repnz
sbb
or
cld
xor
add
adc
bound
push
mov
pop
xchg
inc
loop
imulb
ret
in
push
sbb
or
cmp
mov
jb
ret
dec
pop
xchg
sub
aas
xchg
inc
jp
cmp
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
into
and
call
mov
dec
jae
jb
add
add
pop
add
pop
push
add
add
ja
pop
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
les
inc
add
add
dec
add
add
inc
add
add
add
movl
jne
call
add
stc
add
add
cwtl
add
add
jne
daa
add
add
add
addl
add
add
add
add
add
add
add
add
add
add
push
add
add
jns
mov
loopne
lods
add
add
lret
add
add
push
add
inc
add
or
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
sub
mov
xor
cmp
ja
push
add
jecxz
in
adc
sbb
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
mov
inc
add
add
add
int3
add
add
add
ss
add
int3
add
add
mov
leave
add
add
add
add
add
add
add
add
add
add
or
add
mov
fiaddl
adc
add
add
xchg
add
add
add
add
xchg
add
xchg
mov
add
adc
add
add
mov
lods
add
add
add
add
add
add
add
xchg
add
add
add
add
mov
add
cmpsl
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
repz
add
xlat
add
add
add
and
jns
arpl
mov
leave
add
mov
add
arpl
xchg
lea
insb
add
jge
push
add
add
add
push
add
push
add
add
add
add
add
add
add
leave
add
add
add
push
add
add
mov
or
add
add
push
add
dec
add
add
mov
rolb
clc
add
add
add
add
push
add
add
imul
push
add
add
add
jo
lods
add
add
fildl
xchg
add
add
add
add
add
dec
add
or
dec
add
add
mov
or
add
add
add
mov
or
add
and
mov
push
add
add
add
add
cltd
add
add
add
pop
add
add
add
add
cwtl
add
push
add
add
mov
leave
add
add
push
add
add
add
add
add
add
push
add
add
dec
add
add
movsb
add
add
add
jl
push
add
add
add
fldl
movsb
add
cmc
add
mov
int3
add
dec
add
add
inc
imul
cmp
into
gs
ror
push
movl
ret
adc
pop
adc
push
fiadds
popf
mov
xchg
jle
add
dec
cltd
jecxz
fbld
cmp
cmp
rcr
jno
imul
leave
push
stc
mov
repnz
data16
out
cmpsb
dec
lock
and
fs
fists
call
addr16
dec
rcl
dec
test
inc
jmp
and
mov
adc
xchg
sbb
in
inc
and
dec
dec
mov
adc
addr16
jp
mov
xchg
adc
nop
popa
ret
add
xchg
or
aam
mov
roll
rcr
clc
jo
xchg
rolb
popf
or
in
jecxz
popf
ficoml
mov
jmp
cmpsl
sbb
cmp
mov
das
add
mov
push
jo
push
jbe
das
loop
movsl
inc
leave
mov
sub
int3
sbb
bound
in
gs
jnp
notl
imul
cltd
pop
fcompl
push
insb
std
loope
inc
mov
push
mov
ret
jge
bound
cld
jno
mov
cmp
jb
iret
mov
cmpsb
xchg
fwait
cs
and
lea
ror
fbld
jg
cmp
cmpsb
stos
dec
scas
xchg
xchg
adc
icebp
test
xor
in
shl
sub
mov
repz
shrb
gs
mov
ret
push
inc
test
stos
cmp
adc
mul
movsb
mov
dec
pop
int3
xchg
sub
jb
inc
test
push
cld
fsubr
mov
clc
outsl
mov
repnz
push
mov
fs
arpl
xchg
scas
push
jmp
fdivrl
xor
popf
xchg
pop
mov
repnz
daa
imul
cwtl
lds
or
into
and
and
clc
ror
mov
roll
cli
sub
sub
sbb
jo
pop
jb
ret
cwtl
adc
pusha
jg
push
insl
ja
test
pop
dec
les
cmp
pop
insb
sub
aaa
idivl
imul
cmp
pop
sub
pop
stc
pop
mov
cs
loopne
out
push
and
cmp
inc
sbb
aam
fucom
aas
sbb
mov
bound
push
insl
mov
inc
test
push
pop
mov
xor
mov
jl
lock
cmp
rcll
mov
jl
repz
mov
mov
sub
xor
sbb
xchg
mov
inc
pop
orb
pop
gs
leave
aad
push
out
jp
push
mov
daa
jne
lret
ret
vsubss
inc
mov
cld
clc
enter
jbe
xchg
push
jl
dec
fucomp
lret
into
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
