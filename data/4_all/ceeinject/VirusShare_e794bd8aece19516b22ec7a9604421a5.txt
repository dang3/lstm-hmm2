call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
cli
mov
mov
leave
shrl
jp
dec
adc
sub
and
push
sbb
mov
mov
stos
icebp
mov
shll
and
adc
popa
or
inc
repz
mov
mov
mov
shrl
jge
popa
add
xor
inc
lcall
insl
mov
shlb
xchg
sub
mov
pop
jbe
mov
ljmp
jle
or
jp
push
leave
mov
adc
xchg
mov
ljmp
cli
ja
data16
in
mov
inc
push
adc
rcl
jg
mov
dec
ljmp
lock
icebp
bound
lcall
out
push
scas
and
dec
scas
repz
or
jl
icebp
jp
lcall
and
pop
xor
push
loop
or
pop
test
xor
push
mov
xchg
into
test
mov
pop
add
mov
xchg
ljmp
mov
mov
roll
and
inc
add
jno
popa
or
pop
cltd
fcompl
into
sahf
xlat
mov
push
pop
jp
cmp
outsl
inc
sbb
sbb
jg
ljmp
ficoms
shrl
dec
cmova
insl
dec
push
dec
push
jp
sbb
and
aad
in
cmc
rcrb
lcall
adc
sub
popa
or
inc
ljmp
subl
xor
dec
adc
sub
popa
or
inc
ljmp
push
test
divl
sub
in
dec
insl
inc
xchg
pop
mov
pop
mov
push
and
insl
out
jbe
or
aam
movsl
in
dec
sub
sub
push
ljmp
and
xchg
sbb
repnz
jmp
push
add
add
sbb
sub
sub
push
stos
push
and
stos
jne
pop
fnstcw
fsubrs
cmp
test
cmpsl
and
xchg
rcrb
inc
xchg
jbe
sbb
test
icebp
imul
dec
out
push
mov
insb
pop
add
and
ss
or
pop
rorl
or
mov
in
test
cwtl
xor
push
xor
jae
jl
loopne
jae
mov
mov
test
cmp
fisttps
push
nop
enter
sub
cmp
mov
xchg
jle
push
pop
xor
adc
lods
sub
fs
push
dec
inc
mov
and
add
fdivrp
pop
out
xchg
cmp
jg
pop
pop
inc
xchg
fcoms
mov
pop
test
mov
pop
inc
lret
lods
push
mov
enter
sbb
xchg
inc
mov
sarb
push
sbb
shlb
sub
jg
lahf
adc
lret
push
invd
std
nop
push
xor
xchg
pminsw
xchg
and
cmp
or
inc
and
fs
imul
rcll
mov
xor
inc
scas
outsb
in
xchg
insb
mov
dec
lods
insl
sbb
inc
lds
sub
mov
cmp
xor
sbb
cld
pop
jl
fimuls
mov
imul
sbb
fwait
pushf
dec
sub
jno
cmp
out
add
shlb
test
inc
sbb
ds
andb
xor
inc
rcl
shll
push
fdivrl
outsl
jb
sbb
jge
cmp
sarb
sbb
in
jl
dec
add
inc
and
push
dec
dec
pusha
ror
inc
mov
shl
pusha
les
sbbl
jo
stc
stos
cmpl
ljmp
cmp
bound
fcoml
aam
xchg
rclb
mov
inc
fwait
or
and
mov
test
call
jg
push
sti
push
xor
sub
pop
dec
cmc
and
pop
sahf
or
mov
lea
movsb
xor
daa
dec
lret
negl
sub
adc
int3
stos
int
cmp
fadd
dec
xor
mov
loopne
stos
pop
jle
jge
mov
jl
lods
imul
out
negb
hlt
cmp
cmp
call
dec
push
mov
cmpsb
sub
into
cmpsb
pop
decl
outsl
xchg
sub
adc
and
mov
sbbb
mov
lods
repnz
fistpll
movsb
sub
adc
aas
shrb
lahf
mov
inc
jp
mov
lea
inc
jp
insb
ljmp
imul
and
fstps
xor
inc
adc
subb
mov
dec
mov
negb
fsubs
leave
xchg
sahf
jle
fisubrs
ds
jb
jle
mov
enter
popa
sbb
jl
imull
aam
pusha
and
pushf
push
push
jge
dec
or
sub
inc
sbb
movsb
xor
sub
jo
stos
dec
fcomps
pop
mov
insl
faddl
popf
negl
inc
fstpt
push
jg
pop
pop
mov
add
dec
cmp
or
lods
lods
sbb
stos
loopne
fwait
or
movsl
xor
add
fsubrl
mov
fbstp
pusha
pop
imul
inc
push
shrl
aas
sub
fildl
push
mov
dec
cmc
dec
call
cwtl
out
xorl
jl
jmp
mov
pop
xlat
pusha
and
pop
mov
and
pop
incl
mov
sbbb
aam
xor
cmp
pop
loop
mov
add
gs
and
nop
insb
pop
sub
sbb
xor
and
adc
scas
notl
or
lock
or
xchg
bound
fs
jbe
mov
push
mov
stos
sbb
jecxz
mov
pop
xchg
dec
or
inc
clc
movsb
call
sti
fsubs
mov
inc
cs
test
shlb
sbb
xor
pop
mov
dec
pop
mov
inc
pop
je
mov
enter
and
add
lea
add
pop
sbb
lret
cmp
mov
pop
out
out
fdivrl
inc
mov
jmp
scas
sbb
xchg
fincstp
lds
jle
daa
rclb
cld
xchg
shrl
and
xorb
mov
mov
pop
xchg
mov
add
sahf
int3
mov
jb
sub
jp
jae
cmovp
cwtl
mov
fdivrs
fcoms
arpl
in
mov
dec
push
inc
cmp
pop
stc
xorl
int3
and
lret
outsb
pop
jmp
imul
je
call
cmp
or
sbb
aam
mov
sub
jge
shll
fwait
scas
rolb
data16
lock
ret
jae
push
mov
sub
mov
cld
aam
cmp
xchg
cmpsl
dec
pushf
dec
jl
lods
in
cmp
cmp
and
imull
mov
xchg
shlb
inc
sub
pusha
push
mov
iret
les
cmp
adc
xor
push
bnd
push
subl
sub
or
jno
aam
cmp
icebp
sub
lret
add
jns
pop
mov
pop
out
lcall
and
pop
pop
loope
andb
dec
repz
cwtl
nop
dec
aad
xchg
les
jo
xchg
addr16
fiaddl
mov
or
scas
jns
push
pop
inc
or
dec
mov
dec
lahf
flds
lret
test
xchg
inc
in
pop
push
mov
sub
dec
and
xor
cmp
mov
sub
and
movsl
or
out
lcall
les
js
das
and
jne
jg
aad
jne
dec
inc
mov
sub
or
sbb
mov
cmp
jne
inc
adc
cmc
sbb
std
inc
int
adc
out
or
dec
cmp
data16
cmpsb
cmpsl
cmp
sub
imulb
in
jle
mov
imul
inc
repz
cltd
int3
mov
mov
mov
adc
pop
push
push
add
xor
shll
test
xlat
add
dec
scas
pusha
mov
lods
add
sar
lret
push
xor
dec
jge
sbb
lock
outsl
cs
rorb
cli
mov
sub
lret
cmp
jmp
pop
lahf
mov
lock
cmc
mov
or
jne
adc
jne
fwait
popa
push
pop
inc
xor
cmp
clc
cmp
adcb
sti
jg
mov
cmc
jmp
cmp
pop
das
xorb
dec
leave
sbb
xor
mov
pushf
dec
or
jo
pop
mov
sbb
mov
testb
cmpsb
pop
dec
sub
ret
in
int
jo
aam
mov
cltd
xor
push
jmp
mov
stos
jl
pop
fbstp
and
test
lahf
fs
inc
cmp
cs
clc
pop
fwait
ret
sub
xchg
add
jne
dec
pop
lds
dec
add
test
jle
jbe
cmp
cmp
mov
or
xacquire
js
or
inc
int3
inc
cld
sbb
imul
outsl
push
sub
lock
test
rolb
and
int3
arpl
fimuls
sahf
sub
sub
add
sub
dec
jle
jecxz
jl
pop
sbb
mov
pusha
ja
mov
outsl
sbb
dec
mov
and
fdivr
stos
ret
imul
inc
adcl
out
repz
dec
cmpsl
iret
and
enter
in
cpuid
fadds
sub
sub
jns
sbb
push
mov
scas
xlat
addr16
ds
dec
or
xchg
jo
sub
inc
mov
xor
sti
cld
int3
les
rcrb
mov
push
mov
sbb
jbe
mov
loop
mov
pop
call
sub
mov
lret
inc
clc
xchg
cmpsb
add
sub
dec
add
ljmp
insl
xchg
ror
call
lods
add
test
push
bound
cmp
arpl
lods
aas
xorl
insl
mov
cld
jnp
daa
cmpsl
mov
call
cltd
clc
jl
jge
or
test
jnp
jecxz
int3
pop
scas
ss
loop
push
cs
scas
sarl
das
jae
sub
ja
test
divl
add
pop
nop
lret
dec
push
mov
pop
or
jmp
icebp
mov
ds
ds
add
bound
push
push
push
mov
shl
or
imul
outsb
aam
nop
xor
sbbb
insl
mov
out
ss
cwtl
pop
xchg
arpl
mov
jne
icebp
mov
stos
loop
mov
test
dec
testl
rcrb
sub
mov
leave
push
sub
pop
push
lahf
pop
stos
mov
add
adcb
xchg
ljmp
push
push
cmp
das
dec
ror
pop
pusha
out
and
xchg
fs
leave
mov
mov
xor
dec
lods
mov
xchg
mov
push
lea
push
dec
adc
jns
cs
add
pop
mov
pop
add
lcall
pusha
arpl
cs
push
jo
jae
cmp
adc
adc
inc
dec
mov
inc
bound
adc
adc
cmp
mov
js
cld
sarb
mov
outsl
jnp
outsb
mov
popa
in
jae
int
iret
jecxz
push
pusha
adc
lahf
jmp
fs
xor
xchg
int3
cmpsl
shlb
sbb
pop
mov
cmp
in
sbb
mov
cmp
sbb
mov
lods
inc
xor
dec
push
fstpt
add
inc
dec
push
insb
push
push
dec
call
add
cs
fists
outsl
mov
fdivr
insb
scas
in
shll
sbb
xor
leave
iret
or
cmp
mov
sar
xchg
bound
loopne
or
push
jmp
mov
or
scas
popa
jne
xor
adc
test
outsb
in
fs
mov
cld
jno
nop
sub
jne
in
pop
push
fsin
adc
xacquire
mov
jns
fldl
into
pop
dec
sbb
inc
adc
xor
in
pop
stos
sub
mov
cmc
loopne
jo
jo
or
int
sti
inc
mov
mov
clc
mov
lahf
xor
mov
inc
ja
mov
lods
mov
rol
inc
mov
add
push
inc
cwtl
rorl
cli
and
push
mov
lods
pop
inc
fstps
jae
jns
and
cmp
mov
push
adc
jmp
cltd
sbb
test
xchg
repz
mov
imull
sbb
sbb
pop
add
pusha
scas
push
out
pusha
push
iret
pop
inc
sti
stc
mov
loopne
jl
and
xlat
push
outsb
ja
cmc
leave
sub
mov
mov
sub
je
xor
sbb
fwait
inc
xchg
push
stc
sbb
gs
lret
lods
sbb
dec
jno
arpl
aad
mov
dec
into
add
jb
push
shl
aam
out
sahf
push
lahf
dec
lock
fbstp
dec
icebp
xchg
xchg
cs
xlat
push
sti
jns
bound
add
out
inc
adc
scas
popl
mov
js
mov
rclb
cltd
loopne
loop
pop
aad
negb
inc
pop
pop
imul
inc
jb
push
add
cmpl
pop
outsb
inc
dec
push
sub
add
prefetcht2
inc
pop
inc
imul
cmp
js
stos
ljmp
je
popf
jp
les
aad
mov
jno
xor
jmp
push
pop
out
jae
fnstcw
je
pop
je
cmp
outsb
mov
xchg
les
push
mov
mov
pop
jno
xor
xchg
pop
adc
add
jl
repz
sbb
std
sbb
arpl
adc
and
sub
ret
push
loop
xlat
jno
fidivrl
jp
sti
adc
inc
inc
in
loope
sbb
pop
jbe
adc
jp
rcll
add
rcll
push
frstor
pop
addr16
rcr
xor
xchg
addr16
mov
dec
into
pop
call
aam
cli
dec
push
xor
test
adc
inc
xchg
cmp
gs
aas
push
mov
jae
pop
cmp
repnz
lods
shl
inc
push
adc
movsb
sbb
movsb
adc
je
push
bound
outsb
jno
or
stos
sub
xor
xchg
and
pop
dec
push
mov
lahf
or
mov
test
jl
adc
clc
shll
or
xor
add
fcoms
sarb
push
dec
in
shl
adc
ss
xchg
mov
pushf
int3
notl
aad
scas
lods
mov
mov
data16
je
mov
movsb
dec
jecxz
mov
cwtl
clc
jns
call
add
mov
mov
mov
jmp
insb
popf
out
xor
incl
scas
adc
lods
adc
sbb
outsb
sub
call
fs
movsb
mov
cmc
jecxz
push
ljmp
loop
cmp
cltd
mov
scas
mov
or
lret
arpl
cld
mov
push
cmpb
repnz
jne
lods
push
or
jbe
mov
fsubs
aam
lfs
jmp
cmp
ficompl
out
push
fidivs
leave
xor
out
sub
scas
xchg
adc
jmp
popa
cmp
mov
sbb
in
pop
loopne
fidivrl
repnz
movsb
stos
nop
rcrb
push
mov
inc
enter
loope
js
xor
pop
addr16
in
mov
aam
and
in
xchg
jl
stos
enter
test
mov
mov
pop
cmp
inc
sbb
fnstsw
lea
sub
mov
adc
inc
ficoms
or
pop
cli
addr16
nop
mov
cwtl
adc
jmp
mov
imul
in
inc
xchg
cmp
xchg
and
cli
call
push
mov
sub
push
dec
imul
adc
cwtl
xchg
addr16
mov
je
xchg
gs
lods
sbb
inc
insl
cmp
or
mov
sub
dec
jns
ficoml
loope
shrl
push
in
pushf
push
adc
pop
jbe
pushf
imul
inc
xchg
iret
enter
adc
or
out
pop
hlt
jp
insl
add
dec
ret
xor
lahf
mov
stc
push
push
imul
sub
mov
pop
jle
add
push
push
jmp
mov
daa
icebp
jge
test
mov
mov
fnstcw
imul
sbb
aaa
mov
aam
mov
jp
imul
mov
js
test
ret
dec
sbbb
mov
xor
inc
push
nop
jnp
push
arpl
inc
fnstcw
insb
outsl
cltd
adc
mov
mov
mov
test
das
mov
dec
sbbl
or
data16
adc
cmp
shll
fwait
dec
mov
fisttpll
js
orb
in
push
push
in
popa
mov
stc
jp
push
daa
bound
sbb
mov
push
push
adc
cmpsb
movsb
js
mov
cmp
fists
ljmp
cmp
add
popf
sti
scas
mov
cmp
xor
adcl
dec
adc
pop
cmp
pop
push
inc
in
outsb
mov
push
cmpsl
bound
add
clc
in
std
clc
psrad
mov
cli
xor
or
jg
push
test
test
jnp
push
aas
cmpsl
imul
cmc
sub
xchg
inc
adc
test
jno
mov
jnp
loope
dec
and
add
adc
jl
int3
lods
or
mov
inc
push
sub
jae
mov
cltd
jns
pop
movsb
cmp
dec
icebp
pop
jne
push
lret
ficomps
and
jno
in
aad
lods
dec
dec
shrl
sbb
xchg
sbb
shr
sub
mov
inc
out
lret
mov
push
andl
test
movsl
push
fbld
and
mov
push
addb
bound
or
sbb
pop
cmp
pop
push
into
dec
cwtl
cmpl
or
iret
xchg
iret
adc
arpl
jno
mov
xchg
adc
cld
push
mov
int3
cmp
jnp
and
or
xor
dec
or
and
pushf
fwait
arpl
adc
xor
mov
mov
push
insl
xor
xor
mov
fs
jae
mov
sbb
jae
cld
sbb
jae
or
add
aam
mov
and
pop
add
cwtl
test
add
in
push
jecxz
inc
mov
pop
int3
xchg
cmp
out
sub
popa
outsl
aas
dec
dec
pop
movsl
mov
inc
sbb
lret
test
xchg
call
sub
ret
jecxz
iret
xor
jmp
cmp
mov
test
and
insb
adc
mov
inc
movsb
jmp
add
xchg
pop
inc
int
jns
cmp
inc
lock
xchg
mov
push
jg
into
mov
pop
push
fs
mov
mov
mov
adc
inc
pusha
pop
xor
movsb
fwait
imul
pop
push
pop
mov
cmp
mov
mov
xchg
mov
xchg
std
lods
cmp
xlat
xor
push
iret
fsubs
or
scas
jmp
call
scas
sarb
cs
jnp
lcall
ja
sbb
and
xlat
out
repnz
popa
or
movl
mov
sbb
mov
es
add
jmp
cmp
sbb
repz
lods
pop
adc
mov
xor
js
xchg
mov
pop
mov
xchg
mov
je
lret
ja
cmp
pop
setl
dec
testl
scas
mov
stos
aaa
aas
bound
add
xchg
mov
test
cmc
ret
xor
sahf
jg
push
cmp
int3
push
jo
cmp
and
test
es
faddl
popf
insl
cs
rcrb
lcall
jno
sbb
jbe
cld
icebp
dec
jp
imul
push
mov
dec
out
daa
lds
adc
loope
jnp
jne
inc
test
push
xchg
cmp
dec
xor
call
enter
in
mov
std
inc
sub
outsl
cwtl
mov
popf
sub
and
test
pop
out
pop
int
push
outsl
orl
xchg
or
xchg
scas
and
in
pop
push
add
xchg
lods
mov
shll
roll
int3
loopne
sbb
or
and
hlt
dec
and
cmp
jg
ljmp
xchg
adc
outsl
lock
push
insb
loopne
rclb
or
mov
adc
push
clts
roll
pop
push
sti
cmpsl
mov
inc
pop
sub
cmpl
sbb
jbe,pn
cltd
lea
push
popf
pop
sbb
stos
jne
pop
stos
and
jle
test
mov
imul
mull
popl
arpl
xor
leave
sub
stos
xchg
lock
jbe
or
xor
in
subb
push
push
fcomps
out
sbb
or
lret
or
aad
jae
das
hlt
imul
add
icebp
mov
jbe
xor
insl
cmpsl
push
data16
and
daa
dec
stc
cmpsl
push
cmc
mov
pop
incl
leave
sub
jp
mov
sub
add
adc
mov
popf
push
imul
xchg
xchg
rolb
es
jge
scas
loope
add
outsl
lahf
repz
stc
and
adc
insb
pop
jno
dec
pop
in
data16
pop
pop
test
stos
bound
ja
dec
jp
loope
mov
ja
push
cmc
mov
xorb
mov
mov
popl
lret
cltd
repnz
data16
frstor
cmpl
jmp
scas
xlat
ljmp
adc
mov
mov
and
stos
int3
cmp
insb
mov
cmp
mov
pop
jns
xchg
pop
add
or
add
push
xchg
push
mov
pop
sbb
push
sbbl
inc
scas
in
push
call
rclb
ret
or
push
and
ret
aas
and
mov
stos
icebp
mov
shrl
and
pop
add
jno
popa
or
inc
ljmp
subl
xor
dec
adc
sub
popa
or
inc
ljmp
subb
lcall
adc
sub
popa
or
inc
fidivs
fiaddl
or
ds
into
test
pop
stc
mov
cmc
scas
in
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
daa
vpsubb
adc
cmc
xchg
mov
cmpsl
cmpsl
out
out
pop
jne
gs
daa
inc
push
xor
addr16
cmc
xchg
aad
movsl
not
out
pop
out
gs
std
daa
inc
push
or
ja
addr16
mov
mov
loop
int3
xlat
loope
test
pop
or
ja
faddl
scas
mov
push
fstl
testb
dec
push
sub
decb
stc
push
xor
fscale
push
adc
sarb
out
mov
cmp
xchg
pop
or
dec
inc
imul
sbb
xchg
js
pusha
loope
pop
dec
imul
pop
jne
inc
lret
std
push
xor
addr16
xchg
inc
mov
loopne
cmp
mov
pop
out
in
ljmp
sarb
addr16
out
cmpsl
lds
sbb
mov
fdivrs
jb
cmpsb
push
mov
ret
frstor
xchg
out
dec
jne
xchg
aaa
shll
dec
push
xor
test
and
cltd
pop
notl
inc
gs
push
imul
jl
pusha
pushl
ret
lods
mov
aam
in
xor
xor
pusha
xor
push
ja
pop
imul
mov
mov
cmpsl
hlt
clc
out
popa
and
and
es
push
inc
and
xchg
cmc
xchg
mov
cmpsl
movsl
notl
pop
gs
push
daa
inc
push
xor
addr16
mov
cmpsl
movsl
notl
add
and
dec
push
add
xor
cli
outsl
xlat
nop
mov
add
xor
push
dec
jge
cmc
or
mov
mov
pop
pop
push
rcrl
sahf
cmpsl
inc
addr16
push
inc
mov
jbe
lods
lret
cli
imul
xchg
fnstsw
jecxz
ljmp
xor
push
fldcw
lea
push
fnsave
adc
cmp
push
push
or
or
inc
mov
xor
adc
inc
shlb
mov
cmp
js
stos
insb
arpl
inc
mov
scas
lahf
push
repnz
aad
xchg
dec
xchg
mov
sbb
popa
insb
xor
mov
mov
push
test
inc
lods
jbe
inc
shrl
xor
hlt
xchg
call
nop
lock
lea
jbe
sub
and
mov
pop
push
in
out
cli
jecxz
imul
dec
mov
jno
int3
out
enter
rorl
test
lods
int3
lahf
pop
lds
adc
aam
and
sbbl
inc
pop
mov
pop
rclb
frstor
push
lods
add
xchg
pop
dec
loopne
sub
int
adc
jge
adc
test
movsb
mov
push
jl
ja
adc
jg
lea
stos
leave
pop
sbb
pop
bound
sbb
je
push
cmpsl
cs
jae
adc
cmp
pop
out
cli
jl
lret
mov
jle
or
cli
mov
pop
daa
sarl
push
sub
dec
jp
imul
adc
movsb
jae
push
cmpsb
int
js
lret
dec
popa
stos
rol
sbb
push
ret
push
ss
out
inc
mov
xchg
adc
mov
cmp
xchg
adc
jb
scas
jecxz
cltd
sub
in
icebp
and
jg
mov
insl
cmp
jo
shlb
or
sub
mov
push
ljmp
pop
sub
dec
or
pop
lea
xchg
jae
lahf
stos
fucomp
or
add
xchg
sbb
scas
cs
outsb
repz
add
jo
lock
and
fcmovnbe
and
aas
sbb
pop
roll
jbe
jp
lock
insb
inc
cmc
mov
mov
test
scas
test
sbb
mov
lods
jbe
cs
das
jp
push
jo
sub
fcmovbe
pop
movsl
aaa
or
mov
je
and
cld
and
repz
add
negl
pusha
jbe
pop
cwtl
jbe
push
dec
into
das
or
mov
cmpsl
inc
in
and
iret
add
ds
mov
sub
in
scas
and
pop
cmp
stos
xor
test
mov
xchg
xor
rcl
leave
loope
sahf
std
sbb
gs
out
aam
add
push
xor
add
pop
fcoms
lcall
in
hlt
stos
mov
xorb
cmpsl
dec
pop
jp
lcall
push
push
aad
rolb
xchg
rolb
xchg
jle
mov
fdivrl
jge
dec
xchg
adc
cli
clc
mov
cs
push
mov
and
daa
mov
aam
fcomps
fwait
adc
aam
iret
add
ret
aam
xlat
ficoms
aas
in
cld
out
frstor
ja
pushf
jne
dec
in
loop
sub
push
gs
ja
jb
andl
cmp
adcb
ljmp
sbbl
or
push
sbb
xchg
lahf
sarl
jmp
in
ret
in
mov
in
out
call
shll
push
scas
and
push
mov
jg
xor
cs
cmp
jo
lcall
cmp
mov
xorb
pop
add
fnstcw
mov
push
inc
decb
mov
shll
sub
shl
adc
mov
mov
or
aam
xchg
mov
incl
mov
cmpsb
dec
out
xchg
dec
mov
sbb
adc
enter
ja
fidivrl
push
jno
test
lahf
cltd
shlb
int3
and
lods
in
mov
sub
mov
mov
xchg
dec
adc
sbb
push
sub
or
inc
push
cwtl
sbb
cli
add
inc
or
cmp
sti
push
shrl
pavgw
lret
cmp
fnstcw
add
xor
leave
mov
push
test
lods
jmp
inc
push
ljmp
dec
push
in
inc
jb
inc
pop
test
sub
sbb
pop
cmp
inc
pop
outsb
test
js
mov
sbb
cmp
jecxz
cmp
neg
ret
test
scas
out
fsubrs
jle
push
popa
mov
fdivl
mov
das
jbe
jo
gs
cmp
lahf
xchg
in
sub
scas
pop
push
mov
inc
lea
mov
mov
mov
pusha
data16
dec
sbb
mov
fstp
or
add
lcall
outsb
mov
dec
stos
jbe
cmpsb
cltd
lds
daa
push
pmaxub
jb
cmp
mov
or
repnz
jnp
into
stos
fwait
mov
cmc
pop
adc
imul
sbb
cmpsb
dec
add
jbe
xor
push
jo
mov
dec
sbb
mov
pop
sbbb
push
pusha
movsl
cld
jno
jbe
arpl
rcrl
and
push
subl
jle
add
imul
lea
adc
negl
pop
je
lods
adc
push
movsb
mov
aad
sub
jg
xlat
push
js
cwtl
fcmovnbe
clc
rclb
xor
ja
shrl
idivb
int
sub
idivw
mov
movsl
inc
mov
or
jbe
outsl
cmp
mov
lock
adc
loop
xchg
enter
and
lock
mov
cmp
jp
mov
pop
sbb
dec
xlat
sub
or
rorl
sahf
enter
push
leave
in
sarb
loope
mov
ret
jg
bound
mov
adc
push
cmpsb
dec
fs
adc
add
mov
jno
sub
ret
adc
mov
pop
xor
add
mov
dec
scas
and
mov
cmp
jge
ja
mov
std
jbe
fsubrs
push
pusha
sub
pop
and
scas
arpl
mov
arpl
imul
mov
mov
mov
fidivl
cli
xchg
pop
lret
xlat
sub
ljmp
mov
addr16
test
inc
mov
add
mov
nop
sbb
das
pop
sbb
push
sub
sub
mov
aad
test
mov
dec
and
scas
mov
cmc
fwait
mov
mov
shlb
in
push
mov
xchg
call
scas
enter
mov
sub
or
aad
les
cs
jae
test
ss
mov
dec
shl
or
imul
shlb
and
dec
sbb
iret
push
lret
push
les
xor
cmp
jge
xlat
cmpb
sbb
test
adc
mov
sub
xor
mov
cmp
adc
cmp
push
lds
inc
rolb
mov
aad
xor
and
clc
rcr
data16
scas
roll
adc
mul
fimuls
sbb
or
test
or
test
es
loope
test
and
jecxz
cmc
mov
addr16
out
mov
xlat
jmp
or
rcrb
push
mov
jl
popa
js
arpl
sbb
xor
mov
sub
clc
roll
repz
out
jg
mov
inc
sbb
ds
sti
rorl
ljmp
dec
or
inc
sub
push
shlb
ds
or
adc
ret
push
shll
push
xor
mov
pop
adc
mov
cmp
mov
push
pushf
mov
or
fstl
enter
insl
data16
inc
xchg
arpl
not
pop
icebp
or
pop
lret
clc
inc
dec
push
pop
in
into
into
push
mov
pop
jo
sbb
cld
sub
arpl
push
fdivl
inc
mov
jg
mov
inc
les
xorb
mov
inc
jg
dec
repz
and
insb
icebp
xchg
cwtl
stos
pusha
xchg
sbb
cmp
test
pop
cld
xchg
out
icebp
adc
in
mov
loop
jge
sub
pop
jnp
inc
rorb
mov
inc
or
or
shrb
sub
add
jns
cltd
repz
shll
popa
push
aas
pop
jne
fildl
jae
or
xchg
add
scas
cwtl
insb
lods
dec
sti
cli
jnp
xor
aas
pop
lds
mov
test
testb
fwait
sahf
sbb
inc
ljmp
gs
into
rcrl
test
mov
rcll
sub
push
mov
mov
loop
xor
mov
js
cmc
cmp
nop
stos
mov
xor
xchg
fisttpll
fstpt
add
addb
daa
mov
push
add
je
ja
xchg
pop
and
mov
jne
push
xchg
or
push
push
lret
cli
xor
xor
mov
lahf
rorl
adc
or
loope,pn
sahf
mov
sub
xor
cmpsb
adc
ljmp
add
adc
lock
scas
movsl
adc
cmp
sbb
and
xchg
and
sbbl
pop
mov
repz
aam
sub
les
jmp
mov
push
in
lock
sahf
mov
fwait
es
xor
in
adc
jns
cmp
dec
outsb
mov
mov
inc
dec
jg
xchg
scas
jmp
inc
xchg
jnp
in
jge
shrl
fst
stos
sub
shll
add
in
add
sub
push
inc
loope
mov
mov
cli
clc
ret
and
jo
xchg
cmpsb
popa
out
pop
sti
mov
mov
mov
jo
ljmp
mov
dec
mov
jo
dec
data16
repz
divb
sub
inc
add
xor
jl
lods
push
aam
jo
jle
sub
cwtl
fnstenv
adc
add
sub
inc
fidivrs
arpl
sbb
mov
scas
adc
ds
fdivrp
add
movsl
mov
or
jmp
sbb
lods
and
or
cmp
or
and
sbb
mov
mov
and
dec
xorb
push
sbb
fnstenv
testb
dec
in
shlb
loope
mov
cmp
cmp
stos
test
or
mov
ss
stc
or
out
mov
dec
ret
aam
loopne
push
cmp
cmp
ss
in
jno
sbb
mov
scas
mov
sub
adc
inc
mov
in
roll
clc
or
cmp
out
cmp
mov
and
cmc
mov
ret
es
xchg
in
loope
xchg
test
xchg
sbb
cmp
adc
pushf
leave
or
out
or
cwtl
xchg
or
and
pop
dec
adc
ret
sbb
sbb
fpatan
leave
push
test
and
or
lahf
les
test
mov
cmp
sub
out
inc
dec
mov
push
xchg
sbb
fsts
loop
cwtl
sbb
add
in
mov
frstor
loop
ret
xchg
pop
mov
add
dec
rorl
sub
jmp
mov
mov
adc
aam
xchg
jmp
sbb
ficomps
fistps
xlat
cmp
sub
sbb
orl
jnp
push
dec
mov
fimuls
add
cmpsb
pushl
fisubs
aaa
lods
gs
mov
hlt
in
fisttpll
shlb
mov
in
and
icebp
cli
jbe
jmp
pop
mov
leave
jbe
and
repz
cld
add
jbe
mov
imul
bnd
xor
or
call
stos
sbb
lods
xchg
add
fcoms
bound
int
sbb
std
popf
pushf
or
add
das
xchg
mov
cli
fmul
inc
ss
shrl
sub
fcoms
and
adc
jg
aad
pop
xchg
push
add
xchg
fmull
jne
je
shll
out
sahf
mov
xor
leave
scas
mov
jg
test
shl
pop
push
es
pop
mov
inc
stos
dec
and
xor
je
mov
out
sub
in
fisubrl
add
dec
push
rcl
jecxz
lock
cmpsl
loopne
cmovae
int
adc
and
movsb
cmp
cmp
pop
in
cmp
push
movsl
jnp
pusha
push
or
ret
scas
sbb
dec
adc
pop
ret
mov
test
outsb
lods
xor
cmp
in
inc
into
jmp
jmp
mov
fwait
sbb
sub
and
js
aad
and
pop
lea
lahf
daa
ja
push
mov
fwait
cld
ds
sbb
call
xchg
mov
imul
pop
into
add
mov
push
lods
xchg
mov
movsb
insb
sub
sub
fs
mov
mov
dec
or
sarl
bnd
mov
shrb
xchg
mov
add
inc
jnp
bound
mov
fdivrs
inc
push
inc
inc
je
mov
jp
pop
gs
sub
pop
adc
out
sbb
mov
call
sti
lret
and
aas
leave
or
jbe
cmpsb
inc
sbb
int3
test
clc
jb
in
adc
adc
enter
push
mov
xchg
icebp
into
xchg
or
push
fsub
push
test
stos
pop
pop
das
test
push
imul
call
sbb
popa
data16
jae
add
mov
and
sbb
sbb
in
jnp
sbb
loope
in
fs
jmp
mov
call
push
push
dec
js
xchg
in
and
dec
jbe
icebp
ljmp
xor
and
mov
jp
and
mov
andb
mov
pop
rcrl
lea
inc
lahf
out
call
inc
out
pop
nop
dec
imul
std
test
mov
filds
lret
insl
adc
push
xchg
cmc
sub
sbb
and
dec
xchg
mov
mov
xchg
in
sbb
stos
mov
pop
mov
push
push
jl
neg
out
xor
mov
mov
movsb
adc
cmp
adc
ffreep
out
cmp
ffreep
fdivrl
pop
ret
cs
scas
and
sub
outsb
push
sbb
insl
xor
inc
js
sar
lock
ja
inc
sbb
pushf
mov
or
mov
test
xchg
push
in
pop
mov
lods
fsubrs
repnz
pusha
into
push
in
adc
or
xchg
cmpl
inc
lret
and
add
xchg
ja
xchg
inc
std
dec
repnz
lds
inc
aam
sub
lea
xor
xlat
xor
dec
pop
repnz
js
movsb
jae
and
jle
mov
iret
or
mov
inc
inc
cmc
jl
lock
dec
or
into
out
or
push
jnp
fstp
mov
scas
dec
jo
xlat
mov
loopne
lods
lods
mov
jl
shll
inc
out
fiaddl
add
test
test
mov
bound
mov
fisubrl
mov
aad
arpl
outsl
push
arpl
fimuls
sub
insl
pop
mov
out
dec
mov
inc
ljmp
cmp
jge
mov
jns
cmp
sbbl
repnz
mov
push
pop
das
fbld
and
imulb
fidivl
mov
movsb
mov
popf
shrl
daa
dec
jmp
fcmovb
ds
pop
inc
aad
addr16
mov
jge
push
push
push
add
or
and
mov
loope
mov
das
outsl
cmpsb
sub
cmp
mov
decb
stos
out
lods
sbb
jae
int
movsb
insb
xchg
push
fucomi
imul
mov
adc
mov
mov
and
adc
mov
out
and
inc
je
ss
mov
xchg
sub
test
mov
jns
dec
fisubrs
xor
aaa
lahf
inc
and
out
popf
cld
test
inc
stc
dec
stos
clc
mov
shll
xchg
fcompl
sahf
lea
mov
add
sub
and
push
xchg
ss
in
or
test
sti
push
add
dec
loop
pop
mov
adc
sbb
das
sahf
dec
hlt
std
std
xor
int3
pop
and
jle
xchg
jae
push
flds
lret
adc
and
dec
mov
lea
adc
pushl
addl
mov
cld
fsubl
cmpsl
lock
xchg
rorl
int3
jp
push
adc
inc
xor
xor
add
and
inc
pop
xor
sub
mov
push
test
cmp
dec
pusha
dec
lock
insl
js
jnp
iret
adc
leave
hlt
inc
inc
push
fdiv
mov
pop
in
mov
int3
dec
mov
and
mov
dec
push
jbe
xor
xchg
adc
addl
fwait
xor
icebp
push
pop
orb
jb
pop
stos
cmp
or
push
add
sbb
jo
loope
lret
in
arpl
and
jnp
cmc
lods
push
add
ficomps
sub
clc
test
in
mov
adc
enter
outsb
pop
pop
xor
mov
push
pop
or
sbb
fstpl
push
out
and
adc
loopne
jne
mov
fbstp
mov
jno
shlb
push
jmp
add
mov
add
sbb
add
aaa
aam
pop
shrl
pop
lret
or
jmp
rcl
cmp
adc
mov
xchg
jp
daa
xor
dec
cmp
shll
mov
cmpsl
xchg
rcr
mov
inc
mov
pop
pop
dec
cltd
sbb
leave
fs
inc
shrb
pusha
mov
scas
add
out
xor
adc
add
mov
call
fbld
pop
scas
repz
pop
clc
stos
jmp
aas
mov
jb
divb
and
jge
rcrb
out
lods
push
xor
sub
xchg
adc
cmp
lds
add
fmuls
mov
inc
fwait
icebp
ss
cli
es
mov
das
push
xorl
out
fucom
popa
cmpsl
push
rol
mov
arpl
add
mov
test
mov
mov
jnp
aas
and
ss
dec
adc
in
fimuls
inc
out
jecxz
imul
aam
imul
adc
into
pop
ret
ss
pop
je
fwait
addb
idivl
mov
jns
jns
jecxz
out
dec
fwait
call
push
daa
orb
mov
sahf
daa
mov
into
xor
out
insl
or
cs
dec
mov
fisubs
fcoms
stos
mov
mov
lock
dec
fists
int
jb
pop
jle
push
inc
or
sub
dec
dec
je
xor
lahf
jge
jge
lret
jmp
jo
ret
ret
mov
fwait
aaa
hlt
inc
or
pop
and
add
xlat
push
test
sub
mov
cs
mov
pop
mov
das
pop
test
adc
insb
cmp
test
cmp
mov
mov
jp
ret
xchg
or
stos
cmp
scas
lahf
push
xlat
cmp
cwtl
daa
push
cmc
mov
inc
sub
jne
sub
push
filds
std
lds
mov
pop
sbb
cmp
pusha
les
pminub
mov
fsub
jb
jno
cmp
fs
cmp
clc
push
lret
pop
adc
aas
pop
sub
leave
cmp
lea
leave
mov
outsl
push
addr16
add
pop
push
inc
outsl
mov
or
mov
in
mov
and
sarl
sahf
add
adc
scas
nop
mov
adc
movb
inc
jg
push
adcb
dec
mov
or
ficoms
and
ljmp
inc
fs
pop
jo
mov
mov
fcomp
pop
inc
push
jecxz
in
jmp
aam
sahf
ja
stos
mov
mov
and
dec
adc
inc
inc
cmpsl
cmpsl
and
jno
fisttpl
mov
ss
fisubrs
lods
loop
sub
imul
daa
or
sahf
lcall
les
jle
insb
lret
nop
cld
daa
pop
pop
push
sub
cmp
lcall
lcall
repz
adc
inc
aam
push
adc
lock
imul
push
pop
loop
sbb
daa
inc
push
xor
addr16
mov
cmpsl
movsl
notl
pop
gs
push
daa
inc
push
xor
addr16
mov
cmpsl
movsl
notl
pop
sub
push
xor
addr16
mov
cmpsl
movsl
divl
push
gs
daa
inc
push
xor
addr16
sbb
cmp
sbb
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
std
test
xchg
frstor
hlt
clc
mov
hlt
jge
insl
push
pop
and
xor
inc
sub
je
test
xchg
frstor
aam
in
xchg
jge
insl
adc
and
sub
je
test
xchg
frstor
aam
in
hlt
jge
insl
aaa
cs
arpl
add
push
add
mov
in
in
idivl
cmp
out
icebp
mov
jg
jg
int
and
test
sub
inc
cmp
insb
jnp
mov
jmp
fcmovne
and
push
cmp
sbb
repz
adc
mov
jge
pop
adc
popf
mov
int
mov
mov
loop
lds
adc
clc
jge
shl
imul
adc
je
inc
cltd
imul
cmpsb
cmp
xchg
add
les
pop
das
inc
std
or
xchg
add
aad
lcall
pop
bound
jge
add
adc
push
sub
sbb
test
xchg
frstor
aam
in
hlt
jge
insl
adc
and
xor
inc
sub
xor
in
cmc
roll
int3
cmpb
or
pop
xor
push
pop
adc
call
test
sti
xchg
xchg
popf
mov
ficompl
popa
outsl
data16
or
and
outsl
add
mov
int3
int3
mov
in
hlt
jge
insl
adc
and
xor
inc
sub
je
test
xchg
frstor
aam
in
hlt
jge
insl
adc
and
xor
inc
sub
je
test
lretw
jmp
push
and
xchg
adc
sbb
iret
push
pop
jecxz
daa
pushf
aas
xchg
hlt
pop
xor
xor
das
addr16
jns
sub
fnsave
in
pop
and
sti
test
inc
fnstsw
and
cmp
push
jle
push
push
dec
std
mov
mov
clc
lret
xchg
and
ja
inc
and
xchg
dec
mulb
cli
cmp
lods
push
dec
mov
in
test
sbb
decl
fs
call
aad
pusha
fdivrs
repnz
fadds
out
lret
jg
stc
add
div
dec
mov
pop
pop
pusha
cltd
or
cmp
mov
mov
sbb
outsl
incl
xchg
pop
cli
mov
dec
into
je
adc
rclb
jbe
mov
aad
ds
nop
pushf
imul
bound
mov
insl
es
adc
ljmp
pop
frstor
add
arpl
pop
pop
je
cmp
lea
iret
cwtl
filds
arpl
sbb
imul
leave
mov
int
jl
fistl
dec
or
shrl
aaa
out
rcl
xor
cld
fldt
cld
fdivrs
lea
inc
adcb
jg
jne
call
aas
or
jecxz
ds
fs
pushf
imul
push
inc
cmp
shrb
scas
push
inc
pushf
mov
shll
jmp
aas
xchg
je
fcoml
push
fxch
aaa
ret
cld
out
iret
rol
dec
inc
or
cld
je
mov
das
xchg
fbld
jp
hlt
fnstenv
mov
push
jl
fists
test
lahf
inc
mov
pop
int
mov
shll
and
or
imul
nop
or
add
xor
mov
push
lret
ret
repnz
pop
mov
sub
cmp
mov
add
sub
add
int
call
orb
loopne
xor
pop
test
and
lea
test
mov
push
insb
movsb
dec
pop
adc
pushf
scas
xlat
ficompl
jecxz
out
imul
out
sbb
mov
pop
push
adc
xor
mov
pop
cltd
aas
cmp
sub
in
add
les
stc
pop
arpl
mov
adc
xchg
in
fs
ficoml
mov
in
jge
mov
jae
loopne
mov
scas
and
addb
ja
pop
cli
test
divb
push
in
sbb
je
ja
fisttpl
das
insb
pop
or
mov
lret
cli
jge
jmp
daa
dec
jb
jl
push
xchg
test
adc
adc
xor
inc
arpl
sbb
dec
and
stc
and
cmp
repz
imul
dec
mov
adc
in
sub
xor
jnp
mov
jne
or
mov
pop
dec
sub
jnp
xchg
ljmp
push
test
cltd
inc
adc
inc
add
or
in
psubb
cmpsl
ljmp
pavgb
fisubl
pop
lret
jl
ret
sbb
aas
jecxz
out
sbb
insl
jbe
lret
xor
xor
pop
jns
arpl
lods
inc
lock
pop
sarb
mov
divl
fdivrl
sbb
hlt
mov
rorb
data16
inc
lods
xor
test
or
pop
aam
jo
sbb
ja
push
jge
aas
fs
ljmp
and
or
push
pushf
xchg
fiaddl
pop
cmp
out
jnp
aad
les
or
adc
shrl
movsl
pop
sbb
aam
dec
fnsave
push
cmovl
and
or
mov
cmp
cmp
jle
jmp
cld
xor
ja
out
mov
cmc
dec
fadds
push
and
xchg
add
fisubrs
jl
call
in
dec
pop
push
daa
mov
jns
adc
mov
xlat
add
pop
mov
popa
call
xchg
clc
sbbb
push
dec
shll
pop
imul
add
cmpsl
adc
dec
push
fdivrl
mov
cmpsb
jb
and
loop
add
xchg
or
or
dec
scas
pop
cli
popf
jne
and
mov
xor
stos
lret
cltd
pushf
adc
adc
pop
pop
push
out
jecxz
dec
jle
rcrb
imul
imul
jp
or
cld
ds
jp
std
outsb
mov
sti
inc
jnp
push
fstpl
xchg
pop
pop
popa
jae
dec
xor
ljmp
jns
ret
unpcklps
or
xor
jbe
mov
into
inc
cmp
sbb
mov
push
mov
ret
into
jne
orb
dec
sahf
bound
sub
mov
xchg
aaa
lret
das
inc
sub
popa
orb
in
mov
xchg
dec
decl
rorl
mov
xor
insl
dec
inc
sbb
fnstenv
outsl
addr16
inc
pop
jno
dec
inc
ds
daa
sbb
add
fcompl
lahf
dec
cwtl
inc
mov
imul
stc
xchg
push
sub
inc
addl
xor
add
jecxz
arpl
std
cltd
cs
mov
movsl
xor
push
lods
mov
mov
and
adc
mov
movsl
movsl
std
icebp
cld
arpl
inc
loopne
xor
fistps
xchg
lds
push
push
testl
mov
pop
fs
push
xchg
mov
cmp
and
aas
jnp
dec
imul
push
jo
es
sbb
outsl
in
daa
mov
pushf
xor
shlb
into
xor
ret
sahf
jmp
xor
mov
mov
push
sub
mov
adc
or
scas
iret
mov
insb
xchg
ret
mov
push
mov
adc
mov
mov
pop
daa
sahf
test
mov
arpl
inc
sub
sub
push
imul
dec
or
push
sbb
jecxz
mov
fmul
shll
or
jecxz
adc
jp
je
sbb
fwait
cld
das
int3
repz
sub
inc
mov
rorl
inc
clc
push
pop
adc
jecxz
xchg
dec
mov
sub
inc
je
cwtl
outsb
lds
mov
repz
cmp
std
push
mov
rcrl
jge
dec
mov
dec
iret
fisubrs
pop
addr16
out
popf
xor
adc
pop
nop
lds
stc
aaa
loopne
mov
aas
mov
leave
std
inc
add
jle
das
jg
and
jl
int3
adc
jno
in
jge
mov
xchg
pop
mov
pop
sbb
push
adcb
xchg
xor
or
jbe
xor
push
adc
in
push
es
enter
jle
js
pushf
cmpl
sub
adc
jns,pt
jg
adc
push
mov
cld
adc
aam
mov
or
xorb
ds
pop
gs
fisttps
scas
adc
dec
cmp
cmc
shrl
add
in
lods
stc
out
pop
push
imul
divb
leave
push
push
sahf
sub
pop
shlb
loop
xchg
xor
insb
cmp
mov
fisttps
mov
iret
push
pop
adc
icebp
cmpsb
dec
clc
clc
hlt
dec
js
int3
sbbb
push
adc
fsubrp
sub
mov
xorl
jo
or
pop
aam
ficomps
fs
adc
xchg
stos
pop
pop
pop
clc
pop
sbb
mov
pushf
push
sub
xchg
icebp
push
sub
sub
pop
faddp
je
aam
mov
add
fs
sub
mov
and
push
xor
movsb
test
ljmp
xchg
ss
addb
aam
cmp
gs
sub
adc
call
daa
xchg
and
push
push
sbb
adc
jo
inc
cmpb
das
pop
xor
outsb
pusha
inc
mov
mov
cmp
sbb
enter
in
leave
movb
push
aad
cs
push
inc
out
in
jg
mov
movsb
lock
icebp
enter
pusha
add
idivl
or
pop
push
in
or
jb
and
dec
out
add
mov
cmp
out
push
stos
pusha
pop
mov
hlt
pop
mov
sarl
xor
dec
int3
in
leave
or
dec
popf
orl
test
push
adc
test
or
adc
test
jns
pushf
clc
sahf
iret
sub
je
inc
push
out
aad
inc
dec
xlat
imul
pop
daa
mov
and
shlb
xchg
sub
test
add
shlb
inc
dec
ret
dec
mov
orl
addb
and
cmp
fiaddl
jecxz
jecxz
or
adc
std
push
mov
aaa
adc
repz
adc
inc
push
pop
repnz
push
int
xchg
cmp
inc
lret
mov
repz
pushf
or
mov
in
sbb
cwtl
lahf
pop
cmp
jge
mov
lcall
stos
cld
int3
dec
dec
mov
sbb
xor
add
add
stos
je
notl
ss
std
test
iret
pop
fildll
xor
mov
cmovs
mov
lret
std
ret
out
push
cltd
xchg
adc
sub
inc
shll
imul
jmp
push
int3
out
popf
add
push
xchg
push
jbe
pop
jbe
push
cld
mov
stos
xor
loopne
int
pusha
push
in
cmpsb
inc
jns
arpl
fisttpll
call
in
rolb
sbbl
pop
mov
push
scas
cmc
cltd
fcompl
pop
cmp
and
jmp
stc
xor
xchg
add
jbe
sar
ss
mov
je
movsb
jne
adc
jne
xor
rcrl
cmc
xchg
cmpsb
mov
and
pop
cmp
mov
testb
icebp
dec
fbstp
push
lcall
push
mov
dec
out
sbb
clc
xlat
lahf
push
testb
outsb
scas
int
add
lock
pop
jg
pop
jnp
out
stc
mov
fnstenv
negb
add
mov
xor
xor
loopne
jne
pop
int3
dec
jno
mov
mov
dec
lahf
hlt
mov
pushf
lcall
loop
lcall
mov
data16
in
dec
int3
push
mov
mov
push
test
enter
es
test
pushf
popa
cmp
inc
xchg
xchg
or
push
pop
rol
movsb
adc
test
das
and
loope
mov
cmc
test
in
in
arpl
inc
fwait
mov
add
cwtl
dec
mov
or
outsl
pop
jae
adc
data16
idiv
mov
test
cmp
pop
add
or
cmp
xchg
stos
nop
xchg
sbb
out
lea
hlt
xchg
fidivrs
push
das
jbe
jge
xor
or
mull
rorb
and
mov
dec
xor
jno
fcomps
pushf
in
inc
xchg
dec
movsb
das
test
lock
mov
pop
aad
pop
shl
add
decb
aam
cmpsb
mov
sti
or
mov
push
mov
cmpl
mov
push
jecxz
or
mov
icebp
in
repz
jmp
xor
sbb
loopne
cmp
testb
popa
shrl
lcall
push
jne
fsubr
push
dec
sub
ret
adcb
xlat
jbe
dec
mov
into
mov
ret
int3
enter
jb
loopne
add
cmp
scas
lcall
ret
or
add
in
sahf
mov
sbb
jl
lock
pop
lret
mov
cmp
push
imul
jp
ljmp
mov
dec
es
out
cs
loopne
dec
rcrb
ret
movsb
push
add
jno
push
test
and
push
lret
adc
add
jnp
int3
cld
push
stos
mov
call
fbld
mov
in
add
and
jno
rcll
inc
pop
mov
fstl
ja
rol
in
push
and
push
stos
pop
add
dec
insl
loop
les
jge
adc
into
aas
scas
inc
dec
data16
jo
sti
lods
push
cmp
out
hlt
adc
mov
repz
ljmp
imul
sbb
pop
add
inc
inc
test
xor
mov
add
into
lcall
push
mov
xlat
rolb
outsl
outsb
test
lret
dec
testl
mov
inc
push
jae
popf
pop
in
fdivrp
lods
rcr
adc
in
jnp
and
xchg
pop
inc
repnz
iret
popf
rol
or
cmp
in
mov
mov
daa
jmp
xchg
insl
shl
sti
sub
les
ret
in
cmp
pop
cld
aas
or
int3
les
and
adc
shlb
mov
jae
fs
push
lahf
scas
iret
dec
or
les
mov
push
xor
pop
loopne
pop
or
xchg
stos
sarl
add
mov
jecxz
int
cmpsl
subl
sub
lods
xchg
mov
iret
fbstp
pusha
adc
imul
add
dec
pushf
xor
sub
pop
enter
bound
aad
pop
es
cmp
jp
and
pop
fstps
xor
call
aad
push
mov
inc
test
adcl
mov
addr16
adc
inc
aaa
ljmp
ljmp
std
cs
ret
xor
cmc
pop
jmp
xlat
and
jns
xor
push
ja
lret
dec
clc
sub
dec
fstpl
lock
jle
dec
cld
aam
add
mov
aaa
add
out
ljmp
mov
push
pushf
mov
adc
lds
inc
pushf
imul
inc
push
rcrb
les
jecxz
and
cmp
jge
add
das
push
negb
mov
in
pusha
mov
add
inc
ja
mov
cmc
xor
mov
aas
insl
orps
cmp
cmp
xchg
jo
frstor
lcall
dec
in
push
pop
outsb
out
repnz
jns
dec
xchg
xor
fidivrl
ret
punpckhdq
mov
in
test
stos
pop
daa
xchg
les
stos
sbb
sbb
pushf
mov
into
scas
mov
shll
mov
mov
lret
fs
cmpsl
hlt
jmp
cmpsl
push
outsb
adc
xchg
sbb
mov
mov
cmpsb
scas
fistps
rolb
jno,pn
insl
xor
int3
loop
fst
pop
add
xchg
lock
test
rcrl
arpl
stos
xor
scas
sbb
jmp
test
cmp
out
movsl
movsl
movsl
int
sbb
xchg
pop
cmp
cmp
addr16
loope
and
xchg
jno
je
mov
test
mov
adc
jb
out
scas
psraw
xchg
mov
add
mov
cwtl
and
nop
inc
jne
jne
adc
sahf
jmp
mov
adc
cmp
in
mov
ficompl
iret
les
cmpsb
cmp
mov
lahf
ljmp
cmp
or
cmp
pop
pop
inc
out
xlat
fidivs
push
cmp
jb
push
ljmp
ffree
add
rorb
push
jo
sub
mov
aad
ficoms
sub
push
in
jmp
push
push
test
cli
mov
cmp
sti
les
push
mov
clc
sub
jecxz
popf
pop
adc
xor
and
pop
nop
jl
loop
stos
cmc
jne
xor
cmp
xchg
popa
xor
push
cmp
pop
or
mov
or
inc
pop
push
jae
iret
mov
cmp
or
sub
incb
packssdw
stc
jo
loop
add
leave
inc
cmp
pop
pop
ss
dec
stos
fldl
in
mov
imul
push
iret
xor
int3
mov
pop
in
inc
addl
jns
iret
roll
ret
xrelease
in
icebp
cmp
xchg
mov
movsb
push
dec
or
sbb
arpl
or
jbe
xor
fistpl
and
out
aam
and
cmp
ret
lcall
lahf
mov
mov
aam
in
or
cs
fs
sub
and
lcall
xor
add
push
mov
out
jo
mov
sbb
mov
test
clc
push
sahf
js
test
mov
mov
pop
fbstp
and
sbb
out
dec
dec
mov
jne
pop
aad
mov
scas
sbb
aad
mov
inc
xchg
jae
movsl
mov
cmpsl
dec
or
sbb
aaa
test
xchg
imul
xchg
test
jge
das
jecxz
or
imul
push
stc
add
mov
mov
jnp
loope
lret
rcll
icebp
pushf
addr16
lcall
cmp
insb
fadds
jbe
sar
out
outsb
cmp
push
inc
mov
loope
iret
fisubrs
pop
lcall
sbb
xchg
shll
add
les
cld
int
xchg
test
ds
lods
cmp
orb
push
lods
andb
sub
mov
or
add
mov
imul
jp
int3
fstpl
or
mov
mov
mov
rorl
std
insl
gs
insb
xor
loop
dec
jne
lret
arpl
stc
or
loope
inc
lea
adc
pushf
stos
shlb
add
xor
in
imul
add
mov
int3
push
ss
ss
adc
mov
inc
push
inc
int
pop
jbe
sbb
or
mov
push
push
cmc
mov
inc
fs
xchg
or
lods
int
cwtl
xor
xor
cld
ljmp
jmp
nop
or
and
dec
cmp
mov
lods
ja
or
outsb
fucom
jo
mov
jp
sbb
cmpsl
icebp
in
inc
iret
mov
dec
sbb
jecxz
std
mov
xor
pop
loope
inc
xor
and
dec
mov
add
or
cmp
pop
rcl
je
xchg
std
lds
sbb
cmp
push
mov
push
and
push
cmc
hlt
jp
dec
mov
iret
add
mov
or
or
jae
dec
sbb
pop
loopne
mov
or
add
jmp
dec
inc
lods
iret
xor
push
js
ja
xchg
insl
add
mov
bnd
sbbb
pop
out
fldcw
jg
push
fbld
out
adc
imul
arpl
lcall
push
adc
aam
push
ja
xchg
shll
and
jge
mov
sub
dec
dec
fs
add
loope
pushl
xchg
jecxz
push
ficomps
push
sub
call
stos
push
int3
pop
test
into
fcmovnb
and
ret
cmc
jecxz
dec
jns
and
fnstsw
cld
xor
jg
stos
stos
pop
bound
test
lds
cmp
push
cmp
dec
push
loopne
jne
and
lods
mov
fbld
inc
shlb
cmp
lock
das
repnz
mov
jb
mov
lds
and
and
in
inc
loope
jmp
pop
and
imul
fimull
hlt
mov
and
mov
loope
xchg
leave
dec
push
add
mov
fcompl
lds
and
movsl
mov
and
xlat
in
hlt
push
mov
add
cli
es
xor
pop
aam
push
lret
movsb
add
sbb
sbb
add
mov
lret
pushf
inc
or
sub
pop
pop
adc
mov
mov
push
mov
in
mulps
mov
mov
frstor
and
loope
mov
inc
mov
inc
leave
adc
add
jle
lahf
notb
pop
xchg
xor
jmp
dec
test
mov
fnstsw
fwait
lea
mov
ja
fs
dec
lods
jne
cmp
and
inc
test
fildl
cmpb
dec
push
or
jge
sub
sti
xchg
mov
jmp
mov
cltd
dec
jae
push
adc
xlat
cmp
sub
cmc
push
flds
cmp
es
or
or
scas
leave
pop
iret
pop
or
test
stos
mov
and
les
iret
push
xor
shrb
dec
jge
leave
mov
fwait
xor
pop
fbstp
testl
ret
xchg
fmuls
mov
cld
insl
pop
mov
test
or
iret
xor
call
test
adcl
add
xchg
xchg
jb
int
mov
in
hlt
jge
insl
adc
and
xor
inc
sub
je
test
xchg
frstor
aam
in
hlt
jge
insl
adc
and
xor
inc
sub
je
test
xchg
frstor
aam
in
hlt
jge
insl
adc
and
xor
inc
sub
je
test
xchg
frstor
aam
in
xor
add
mov
dec
int3
movsl
stos
loop
repnz
dec
sarl
insl
mov
loop
mov
ret
add
xchg
sub
xor
arpl
xchg
adc
or
fstp
add
adc
lea
arpl
push
out
cmp
fwait
and
sub
xor
adc
xor
xor
add
jge
add
sbb
or
xor
popa
pusha
fcomp
fwait
lea
pushf
test
push
std
xlat
call
pop
mov
mov
out
js
adc
push
rorl
jmp
lret
jnp
aam
dec
sub
add
add
and
int
mov
scas
jne
xchg
mov
andl
loop
or
jle
xchg
repz
adc
bound
fidivrs
inc
outsb
pop
pop
lock
loope
test
mov
cmpsb
paddw
dec
inc
std
ret
test
fsubrs
lea
xor
insb
jl
xchg
arpl
mov
and
xchg
sbb
out
push
leave
inc
je
sbb
sub
push
mov
bndstx
stc
ret
jne
cmp
add
mov
fisttpll
aad
xchg
xor
aas
cld
or
adc
mov
fldl
arpl
add
cmp
pop
enter
sub
or
je
push
sarb
xchg
add
or
push
aam
in
add
lock
iret
fisttps
or
repz
int
std
and
xor
arpl
xchg
jge
insl
mov
ret
or
repz
int
std
and
xor
arpl
lds
movsb
in
push
dec
int3
mov
imul
cmp
test
mov
ret
push
mov
cmp
jno
out
push
cmpsl
push
imul
xor
mov
fldenv
fdivrs
dec
int3
jb
data16
ja
add
mov
cwtl
out
fistl
cltd
aaa
fadd
pop
out
jo
mov
aad
sbb
mov
jo
dec
clc
leave
cmpb
movb
jge
pop
cwtl
orl
movsl
mov
mov
fildll
adc
or
fwait
mov
xor
inc
out
mov
cmpsl
stos
mov
repz
jp
push
stc
add
cmpsb
xlat
neg
je
and
or
xor
and
outsl
xchg
pusha
push
lret
mov
add
pop
nop
movsb
mulb
mov
out
pop
or
in
fs
mov
pop
jo
xor
dec
sub
jno
or
cmc
mov
in
fistpll
pop
sbb
enter
aam
pop
pop
jns
jp
outsl
pop
add
mov
call
aad
xchg
or
dec
add
xchg
sbb
movsb
iret
arpl
push
cmp
add
and
das
mov
imul
test
insl
int
xor
fs
pop
sbb
out
stc
mov
mov
and
inc
insb
or
inc
dec
das
stc
mov
test
ret
ss
loopne
rcr
add
cmp
and
ss
xchg
cmc
call
adc
fstl
sbb
pop
int
out
inc
in
adc
cmp
fs
mov
pop
in
push
push
mov
in
dec
or
outsl
das
push
in
adc
stos
mov
fwait
xchg
push
aad
rcll
test
leave
cmovae
repnz
pop
test
pushl
cmc
nop
bound
add
push
xor
jae
mov
pop
inc
enter
ds
mov
pop
push
mov
stos
sahf
jecxz
xor
cmc
inc
js
ljmp
and
inc
cld
xor
and
push
jns
lahf
leave
cli
fdivl
mov
adc
add
mov
std
lea
sbb
lods
xchg
jb
stos
popf
push
xorl
mov
dec
fcmovne
stos
sbb
cmp
sub
push
js
lahf
add
jnp
mov
aad
negl
ret
fisubrs
ret
lret
stos
loop
sbb
jge
fmuls
dec
test
xchg
les
movsl
adc
adc
xchg
mov
sub
scas
fidivs
ret
out
mov
pop
mov
mov
pop
push
mov
cmp
xchg
out
add
sbb
sub
sub
jns
jne
daa
xchg
jle
ret
mov
out
add
mov
data16
jmp
cmp
xchg
in
pop
sarl
inc
jne
fucompp
pushf
mov
daa
pop
sub
lea
xchg
cmp
cmp
sbb
jl
popf
out
clc
xchg
daa
hlt
gs
cmp
add
cwtl
mov
sbb
aaa
dec
iret
jmp
cmp
mov
mov
cmp
adc
or
jecxz
dec
inc
jno
pushf
xor
add
sub
jns
out
xor
fsubs
and
lret
outsb
frstor
int
or
sub
adc
frstor
icebp
lods
mov
imul
push
scas
cmp
icebp
pop
pop
pop
data16
adc
outsl
or
lahf
pop
stos
roll
mov
fcmovu
mov
pop
xor
adcl
outsl
push
test
dec
adc
sub
popf
mov
xor
test
adc
add
mov
jb
insl
mov
xchg
imul
mov
je
cmp
adc
mov
dec
mov
jmp
bound
inc
fdivrs
mov
cld
or
mov
pushf
bound
mov
pop
pop
call
in
adc
xchg
adc
mov
ret
mov
call
dec
cltd
xor
fcompl
dec
fidivrl
in
std
sbb
pslld
inc
shll
nop
je
leave
adc
out
mov
sub
lcall
jo
or
xor
ror
pop
rolb
pop
mov
xor
dec
inc
jecxz
jmp
jno
cld
lods
xchg
jns
lea
jge
mov
jecxz
mov
fimuls
or
mov
sahf
adc
neg
bound
and
lock
inc
sub
call
xor
cmp
push
daa
mov
xor
adc
loop
cmp
or
ss
bound
lds
lcall
pop
inc
shrb
nop
mov
push
es
shrb
or
in
icebp
das
pop
mov
mov
sbb
adc
fwait
scas
loope
out
sbb
popf
pop
xor
lahf
mov
popf
das
adc
test
mov
and
jns
jge
add
and
push
mov
bound
inc
dec
mov
mov
outsb
sbb
mov
dec
inc
movsl
cmpsb
push
int
insl
pushf
dec
add
stc
jg
pushf
repz
mov
push
cli
push
andb
cwtl
mov
shlb
cmp
mov
cmp
mov
ret
into
cmp
fnstsw
dec
jmp
in
inc
or
add
rclb
pop
shlb
inc
das
lock
in
ds
push
or
enter
jb
loopne
sbb
dec
lahf
and
xor
add
pop
xchg
test
ret
dec
or
push
jecxz
dec
repnz
mov
in
sub
mov
xchg
cltd
sub
cmp
push
mov
mov
enter
cmpsb
out
stc
cmp
add
out
dec
add
dec
fwait
fs
icebp
or
cmp
dec
inc
and
xor
push
je
test
and
mov
mov
sbb
lods
lods
shlb
or
imul
dec
dec
mov
lods
ds
mov
inc
xchg
aaa
daa
or
mov
add
cmpsl
cvtps2pi
cmp
js
jmp
enter
movsl
sub
data16
mov
orl
mov
inc
popf
sbb
outsl
loope
or
xchg
adc
xchg
mov
and
mov
adc
shll
das
xor
cmp
adc
push
out
or
mov
adc
xchg
shll
adc
insl
push
adc
xchg
push
fs
sahf
sbb
mov
or
jecxz
int
mov
stos
cmp
lods
mov
and
jnp
in
and
mov
fildll
add
pop
mov
jp
mov
mov
fidivs
add
outsl
add
xor
scas
push
sbb
daa
addr16
dec
pushf
lds
pop
inc
jmp
stos
xchg
jl
sbb
test
lahf
dec
xchg
push
pop
mov
aas
adc
cs
xor
stos
outsl
lods
stos
jnp
shll
xor
pop
xchg
test
push
out
mov
jp
stos
pop
stc
or
add
sbb
mov
cmpl
mov
xchg
je
jg
out
add
mov
add
or
iret
les
dec
shll
pop
mov
inc
daa
lret
movl
call
lret
mov
inc
out
inc
cmpsl
sub
icebp
and
jge
sbb
xchg
aam
pop
scas
test
test
adc
repnz
lret
push
fmuls
outsl
fcomps
addb
and
iret
push
in
push
mov
cmp
mov
cmc
leave
dec
xor
pop
lret
fadd
lds
mov
mov
jp
cwtl
inc
in
dec
aas
xchg
sbb
mov
inc
movsl
mov
or
cwtl
rclb
jle
scas
sub
pusha
jnp
fidivl
popf
imul
stos
sahf
les
or
jge
xchg
bound
pop
outsl
aad
shl
sub
jo
pop
xor
mov
jecxz
rcll
mov
test
out
inc
mov
cli
ret
jecxz
cmp
push
mov
jne
imul
xchg
adc
adc
lahf
mov
sub
popf
scas
daa
loope
stos
xor
xchg
clc
sbb
aaa
dec
pop
mov
add
adc
cmc
and
xchg
jno
icebp
int3
imull
int
outsb
add
push
sbbl
icebp
in
in
mov
or
cmp
sbb
mov
testb
lret
xlat
mov
push
adc
xor
dec
clc
sbb
addr16
pop
mov
cs
ss
xor
mov
lcall
pop
cld
mov
pop
mov
adc
xchg
out
cmc
jl
sub
outsb
lods
pop
push
loopne
in
push
bound
pop
in
notb
push
mov
xchg
addr16
cmpsb
cltd
addb
cmp
jno
dec
adc
and
mov
jle
fidivl
insl
cmpsb
or
aad
popf
es
aas
dec
jge
jbe
sub
inc
leave
cmp
cmp
out
test
hlt
insl
inc
fstpt
inc
dec
enter
xchg
ss
mov
test
mov
loopne
dec
or
test
cli
idivl
arpl
lods
adc
lock
je
mov
dec
je
inc
sbb
pop
shr
inc
mov
add
cwtl
dec
mov
jmp
movsl
mov
cmpsb
imul
pop
out
mov
push
idivl
pushf
mov
xlat
lcall
dec
dec
push
or
xlat
cmpsb
adc
popa
das
loope
outsl
pushf
pop
push
sub
into
rcr
mov
inc
jno
orl
adcl
lahf
xchg
cmpsb
cmp
xor
pushf
sbb
addr16
pushf
mov
pop
hlt
mov
and
andl
imul
insb
test
cmp
cs
popa
xlat
pop
lds
sub
push
mov
sub
and
out
lret
mov
stos
add
je
dec
inc
repz
mov
sub
jmp
fcomps
stos
mulb
fwait
mov
gs
and
loope,pt
cltd
inc
adc
and
pop
aas
jge
arpl
daa
xor
adc
xchg
lret
add
test
sbb
add
sub
push
jae
mov
push
adc
mov
in
sub
dec
mov
and
pushf
aas
or
data16
mov
rorb
lock
int
sbb
in
ds
ficomps
idivl
fwait
sarb
cmp
jg
mov
aaa
mov
loope
aam
out
mov
xchg
and
cmp
imul
in
or
and
jns
mov
lahf
mov
cli
mov
scas
pushf
add
pop
dec
mov
xchg
push
push
clc
incl
mov
pop
or
sbb
cmpsl
notb
mov
out
pop
stc
pop
sbb
lcall
push
mov
test
dec
jb
add
adcl
inc
scas
pop
jle
jnp
xchg
push
xor
dec
rolb
sahf
mov
mov
int3
pop
push
push
pop
add
xor
cmc
sbb
gs
sbb
push
das
sbb
xor
adcb
adc
lret
adc
into
inc
mov
push
dec
lods
fcoms
cmp
adc
mov
mov
test
push
jne
cld
ret
movsl
inc
mov
mov
imulb
inc
mov
add
aam
lock
inc
jmp
hlt
fisubrs
popa
mov
xor
mov
jbe
int3
lods
out
lock
stos
dec
imul
int3
fistpll
in
add
cmpl
rcrb
repz
adc
mov
dec
outsb
repnz
clc
das
bound
mov
mov
mov
lods
fmuls
nop
mov
push
icebp
push
inc
das
xchg
fdivrs
xchg
movsl
out
jnp
imul
and
adc
jecxz
jno
mov
repnz
push
stos
mov
inc
jecxz
cli
sub
jmp
xor
jmp
and
xor
sub
addr16
fwait
daa
pop
leave
sbb
pushf
lea
repz
pop
lods
daa
bound
repz
dec
popf
mov
sbb
cwtl
dec
inc
xor
xchg
pushf
sub
inc
mov
cwtl
jb
hlt
leave
pop
inc
add
or
jmp
je
xchg
fdivrs
pop
push
mov
into
mov
cmpb
ret
ljmp
fcoms
dec
cli
wbinvd
mov
mov
inc
cltd
loope
fcompl
div
lods
cmpsb
sbb
mov
xor
repz
insl
mov
movsl
adc
mov
fld1
ljmp
cmp
dec
ret
aas
movsl
cmp
add
add
sbb
aam
add
and
jge
lahf
in
fdivs
stc
mov
inc
ds
outsb
popa
pop
jmp
adc
sbb
xchg
inc
lods
sbb
test
mov
adc
ss
jae
test
mov
jo
sbb
push
sti
adc
insl
jle,pt
adc
xor
jp
sbb
cld
inc
and
fsubl
cmp
in
inc
pop
popf
bnd
fwait
test
pop
shll
ljmp
xor
cmp
xor
or
xorl
lret
mov
mov
push
xchg
and
incl
sarb
add
sbb
lret
dec
xchg
xchg
sar
pop
dec
dec
push
movsb
jno
add
fsubs
popf
mov
adc
das
sti
cwtl
add
xor
ja
loop
mul
jo
sub
lods
and
leave
xor
pop
sbb
or
stos
dec
cld
push
inc
pop
fiadds
inc
js
xlat
not
in
shll
jle
xchg
xchg
cmp
mov
jl
or
mov
mov
arpl
jmp
xor
mov
mov
push
rcll
clc
enter
sub
sub
and
mov
push
mov
popa
jle
pop
mov
ds
push
js
inc
push
push
adc
xlat
sub
push
mov
ret
xor
lock
lock
push
jl
sub
jnp
pop
out
cltd
loop
xlat
inc
pop
inc
push
xor
jmp
bound
test
lret
xor
cmpsl
sahf
jno
imul
xchg
xchg
mov
icebp
rorl
stc
pop
movsb
and
outsl
fisubs
jnp
popa
xor
jo
jecxz
insb
enter
outsb
jg
lret
ljmp
inc
rorl
sarb
je
shlb
or
daa
inc
push
ljmp
mov
lcall
adc
or
enter
lret
mov
in
rcrb
insl
test
pop
movsl
or
jmp
sbb
rcl
test
push
psubsw
and
jmp
cltd
push
into
or
cmp
test
inc
repnz
fisubrl
std
fnstcw
lret
sub
and
sub
mov
lods
daa
sbb
mov
hlt
sub
mov
cli
int3
and
push
mov
imul
xchg
sub
mov
mov
adc
xchg
jno
inc
pop
xchg
sbb
mov
pop
ds
or
lods
fcomps
pop
cmp
push
hlt
cmc
cmp
mov
mov
cld
dec
xlat
and
shr
dec
loop
and
push
test
leave
or
ljmp
add
push
cmpsl
jp
jmp
insl
cmp
test
pusha
ds
or
mov
push
in
mov
cmpsb
test
mov
sbb
pushl
mov
push
xor
imul
stos
imul
hlt
dec
inc
and
rclb
pop
out
push
xor
icebp
popa
repnz
mov
cmp
inc
xor
ss
nop
lock
push
js
sbb
mov
push
add
sbb
cltd
pop
insl
inc
jg
or
jnp
sub
mov
fwait
fldenv
push
mov
dec
cmp
mov
and
cwtl
and
ja
repnz
pop
sbb
imul
add
xlat
std
fdivr
jle
arpl
loop
add
push
push
sub
xchg
sbb
fwait
mov
xchg
lcall
xchg
icebp
stos
jg
data16
fst
cltd
xor
mov
sbb
iret
ret
test
jmp
imul
inc
fsubrs
sub
push
xor
js
and
mov
flds
sti
sarl
lods
aam
or
push
xor
adc
sbb
pop
push
ret
arpl
sub
stos
iret
repz
inc
dec
sub
sbb
push
iret
enter
cs
int
add
xor
mov
rolb
cmp
jns
xchg
mov
xchg
out
jge
int3
cmp
arpl
sbb
xor
pushf
mov
ss
dec
rcrb
stc
mov
aas
and
and
mov
adc
sar
xchg
in
cmp
mov
dec
jge
loop
jp
icebp
cmp
mov
and
hlt
add
mull
shrl
insb
inc
push
dec
hlt
pop
mov
inc
push
add
out
jae
fstpt
jns
hlt
into
or
sub
mov
dec
stos
inc
enter
mov
xchg
clc
leave
add
loopne
pop
test
out
addr16
and
pop
mov
cmp
adc
repnz
imul
ds
and
mov
lahf
mov
into
clc
pop
mov
jnp
sbb
je
or
mov
iret
pop
push
lods
dec
jbe
xchg
cmp
adc
ror
stos
jmp
jns
push
mov
cmp
sbb
pop
xor
push
mov
cmp
and
fcmovnb
out
inc
inc
mov
leave
or
push
outsb
in
mov
mov
js
je
adc
xor
inc
mov
mov
dec
mov
sahf
jno
out
xchg
or
jmp
adc
pop
push
inc
xchg
jb
add
adc
add
push
push
adc
stos
mov
dec
ret
loope
xor
insl
and
mov
subb
shll
stos
or
or
ror
dec
test
mov
xor
xor
inc
int
push
stos
rorb
in
xor
enter
and
fwait
pop
jmp
push
jp
mov
jge
ror
lods
adc
sbb
mov
add
sub
pop
xor
sahf
cmp
fiaddl
inc
jl
push
stc
jl
adc
mov
jne
pop
add
movsl
mov
xchg
leave
push
pop
sbb
test
outsl
mov
mov
stc
movsw
lcall
cmp
in
jae
dec
or
adc
ficompl
icebp
mov
mov
push
test
xchg
loopne
or
or
add
aad
test
cltd
or
repnz
dec
mov
movsl
pop
push
push
outsb
inc
dec
mov
leave
mov
push
mov
push
and
loopne
and
and
in
cmp
dec
jnp
test
std
jle
negl
adc
jns
xor
ror
pop
adc
xor
fstps
call
sbb
or
or
test
pushf
and
xor
sub
mov
inc
adc
or
shlb
cld
ss
push
push
rclb
or
inc
pop
mov
lds
xchg
xor
lcall
adc
lods
jecxz
out
jle
enter
test
imul
xor
int
pop
cmpsl
sahf
and
aam
ss
adcb
ss
add
mov
xor
mov
and
add
addr16
mov
sbb
aas
jl
pop
ficoms
jnp
out
nop
and
in
push
mov
inc
scas
push
mov
data16
lret
adc
add
lahf
call
fildll
push
out
mov
sub
push
push
push
or
leave
and
and
jge
ljmp
pop
xchg
mov
out
fiaddl
lea
jge
sti
out
stos
loop
push
pop
xor
jne
or
add
roll
loopne
pushf
sub
dec
add
or
sub
cmc
cmc
inc
cmp
or
mov
sbb
gs
mov
cmp
inc
ret
nop
dec
scas
and
or
out
jl
add
incb
push
mov
mov
stc
rclb
mov
insb
mov
jb
popa
addl
test
jg
enter
enter
rolb
out
andl
lcall
ja
mov
lcall
mov
xor
sub
adc
dec
fwait
jmp
fucomip
mov
jnp
hlt
xor
mov
shlb
mov
into
pop
jecxz
sbb
xlat
xor
add
push
outsb
pusha
sub
fildl
sbb
sar
lcall
xchg
mov
push
cmp
and
jmp
and
xchg
pop
fwait
pusha
xor
das
clc
ss
in
fwait
sarb
addr16
xchg
cmp
or
repz
int
std
and
xor
arpl
xchg
jge
insl
mov
ret
or
repz
int
std
and
xor
arpl
popf
sbb
ret
or
repz
int
or
inc
popf
push
mov
adc
inc
dec
repz
arpl
mov
ljmp
or
jnp
dec
and
lahf
andps
jns
push
jae
int
xchg
lret
mov
mov
repz
adc
pop
xor
inc
cmp
arpl
or
cmp
lret
mov
mov
mov
fwait
repz
bound
push
and
xor
push
adc
jae
sbb
xchg
shll
test
int3
addb
adc
dec
dec
sub
push
lret
clc
insl
pusha
add
inc
push
lret
mov
push
test
add
mov
jns
not
insb
aaa
mov
xlat
sti
ret
stos
sbb
add
xor
adcb
push
repz
push
jecxz
inc
rorl
inc
imul
or
aam
cmp
or
lea
cli
insb
daa
and
push
ret
mov
repnz
inc
jae
mov
inc
or
push
jmp
cmp
mov
nop
mov
or
or
movsb
jae
inc
cmp
adc
jbe
mov
mov
mov
fwait
out
add
dec
and
cmp
sub
arpl
jae
and
shll
mov
lcall
das
xor
pop
cmp
sbb
jmp
xchg
xchg
mov
sbb
stc
lcall
and
sub
inc
das
cmp
or
dec
pop
test
sahf
ljmp
rcl
std
mov
pushf
push
inc
pop
pop
daa
push
xor
insl
cmp
arpl
jae
cmp
lret
mov
mov
repz
adc
pop
xor
inc
cmp
arpl
jae
cmp
lret
mov
mov
repz
jnp
into
sub
inc
aaa
pop
mov
lret
or
jecxz
push
sbb
cmc
cwtl
mov
repnz
adc
lds
scas
cmp
nop
pop
int
cmp
mov
hlt
cld
or
mov
fidivs
xchg
pop
mov
add
cltd
or
in
pop
add
or
shll
call
cmp
push
cmpl
cli
ret
pop
xchg
jns
daa
sbb
jo
insb
stos
cmc
loop
dec
add
sub
inc
pusha
popl
imul
hlt
inc
das
sahf
rcrl
outsl
cmp
js
push
loopne
xchg
jb
or
xchg
cltd
xor
cmpsb
cltd
add
cmp
push
into
arpl
test
cmp
push
lcall
mov
dec
rcr
mov
mov
jno
add
test
ds
nop
addr16
push
sbb
adc
jmp
sub
inc
jns
jge
mov
jbe
sub
std
lods
mov
cmp
mov
jle
cwtl
pop
aaa
mov
sbb
loopne
lcall
push
pop
or
push
stos
rcl
xchg
sbb
mov
loop
icebp
xchg
sub
xor
or
iret
dec
add
xchg
lea
push
push
out
test
mov
in
inc
inc
sub
mov
adc
add
repz
je
nop
pop
ret
push
clc
jb
fistps
addr16
and
subb
mov
pop
sbb
sub
icebp
lahf
push
inc
mov
iret
dec
popf
fdivl
mov
dec
js
data16
icebp
out
aad
pop
dec
rcll
les
dec
int3
arpl
or
mov
push
fistps
int3
sub
mov
push
jnp
or
dec
test
lret
outsl
inc
mov
mov
and
dec
jae
xchg
xor
enter
call
cmp
insl
test
fwait
cmpsl
fists
jmp
inc
sub
sbb
sbb
inc
ror
sub
inc
or
pop
ret
pop
lcall
push
or
mov
lods
andb
ja
daa
out
push
jns
rorb
push
outsb
ljmp
pop
add
shll
fisttpll
cmp
adc
dec
cmc
pop
aaa
andl
adc
pop
or
fistps
fiaddl
dec
adc
sbb
filds
mov
mov
adc
leave
inc
cmp
cld
cmp
adc
cmpsb
mov
add
and
or
out
inc
stos
push
cltd
push
jae
scas
adc
dec
sub
sbb
cmc
jle
mov
arpl
sti
adc
sub
and
loop
jge
mov
adcl
jmp
lret
jno
popl
into
dec
loopne
in
mov
lods
mov
jae
clc
in
fisubs
adc
or
inc
mov
sbb
dec
mov
std
mov
call
shlb
inc
jecxz
push
mov
test
or
jbe
add
lods
and
cmp
shrb
ffreep
mov
rcrb
sub
gs
pop
ljmp
sti
stc
jl
jns
iret
jecxz
lret
imul
stc
clc
xchg
sbb
insl
ja
xor
pushf
test
mov
jno
cmp
dec
mov
daa
mov
int3
decl
ret
lret
rcrb
pop
mov
add
ljmp
into
cmp
outsb
loopne
sarb
movl
or
push
dec
ja
xchg
add
adc
mov
pushf
in
inc
shr
inc
dec
jo
mov
leave
xor
xchg
mov
mov
mov
jge
and
jne
out
sarb
fcmovbe
popf
pop
iret
cwtl
mov
adc
inc
jno
jae
cld
ret
and
fdivs
pop
fs
mov
or
adc
inc
insb
lahf
popf
jnp
cltd
cmp
dec
out
adc
dec
or
repz
mov
test
rclb
jp
mov
cmp
mov
add
fcomps
xchg
sbb
cmp
lock
push
mov
adcb
pop
cmp
dec
xchg
lds
xchg
adc
rclb
stc
pop
push
mov
adc
add
adc
iret
add
hlt
and
xchg
fucomip
push
mov
fmul
icebp
mov
xchg
loop
jnp
pop
xchg
adc
mov
cmp
push
ljmp
pop
xchg
cmp
ss
jns
mov
pushf
pop
cmp
xchg
jns
push
pop
cmp
mov
sub
cmp
cmp
push
addl
dec
mov
shr
sti
faddl
xchg
mov
ss
jmp
outsl
dec
scas
push
aam
mov
cmc
js
addb
mov
pop
cmpsl
push
xchg
sbb
and
jge
xor
pop
imul
in
inc
cwtl
enter
daa
stos
scas
cmp
insb
in
lods
push
inc
xchg
rcll
data16
push
test
stc
inc
mov
stos
test
mov
sbb
in
jae
adc
fstpt
mov
push
adc
lock
inc
jl
scas
add
ss
mov
push
sub
mov
push
push
mov
sub
cld
sbb
lahf
adc
xor
xchg
popa
movsl
mov
mov
add
pop
clc
outsl
mov
nop
ret
mov
pop
data16
inc
push
out
out
aas
mov
stc
dec
in
andb
add
test
fisubs
ss
sub
imulb
lods
repnz
jb
in
mov
shll
ret
adc
call
mov
in
and
mov
ret
dec
adc
shrb
out
jl
cwtl
jnp
cmp
cltd
adc
or
push
xchg
stc
mov
xchg
enter
pop
out
fwait
pop
xchg
jno
cmp
cmp
lock
cmp
push
inc
adc
fisubs
fiadds
xlat
mov
or
jp
xor
call
fs
nop
aaa
adc
or
sub
fisubs
xchg
addr16
pop
pextrw
push
inc
fcmovnb
xlat
or
imul
jmp
sub
imul
mov
mov
test
jmp
jge
jge
test
mov
andl
loope
xor
fistpl
loopne
mov
repz
jmp
lods
cld
cmp
xchg
pop
xlat
sub
lret
inc
mov
test
add
pop
es
outsl
fcoml
xchg
adc
cld
add
loopne
xchg
bound
les
arpl
jns
jp
pop
and
adc
push
inc
loopne
xchg
cltd
mov
ljmp
push
lock
mov
cmp
sub
xor
adc
int3
jo
inc
inc
push
xlat
ret
or
pop
movsb
mov
lret
gs
sub
add
nop
sbb
sub
sub
lcall
mov
mov
lret
leave
adc
cmpsb
insl
shlb
sbb
scas
mov
sbb
cmp
repz
mov
jmp
cmp
shlb
xlat
cmc
daa
sub
subb
mov
mov
insb
mov
in
sbbl
mov
sub
in
movsl
mov
cmp
mov
adc
jae
adc
aad
jmp
jb
fwait
push
lods
lcall
xchg
add
mov
inc
mov
jno
inc
mulb
stos
push
dec
rorl
fildll
mov
int
icebp
or
test
xor
sti
clc
outsl
add
test
imul
loope
fmuls
pop
and
das
jae
xor
and
or
lret
scas
mov
cmc
xchg
in
cld
push
sbb
mov
mov
or
int3
pop
cmp
and
repz
fisttpll
test
ljmp
push
in
rclb
mov
lods
dec
dec
sub
mov
mov
xchg
mulb
sub
and
mov
test
popf
push
cli
jnp
push
dec
subps
push
fsubrp
jmp
jo
popa
cs
movsb
mov
adc
call
jmp
mov
dec
mov
call
shrl
or
repnz
test
pop
push
jns
mov
sar
mov
aad
ds
daa
subl
das
mov
mov
jge
icebp
lock
mov
mov
lods
nop
xchg
push
mov
and
xor
out
std
out
js
insl
les
cmp
pop
lods
loop
bound
adc
cmp
cld
push
addr16
cld
fistpl
xchg
int3
repnz
test
xor
mov
daa
leave
jno
pop
jo
insl
movsl
mov
pop
mov
stos
mov
jb
inc
push
or
push
sar
lcall
aas
mov
repz
aad
and
lock
cmp
pop
push
cmp
in
imul
addr16
pop
repnz
stos
in
int3
push
xor
xchg
imulb
data16
inc
repz
in
sahf
pop
mov
mov
mov
nop
rolb
nop
pop
loop
jb
cmp
leave
stos
ss
jb
xchg
cmp
fpatan
add
loopne
mov
test
inc
cmpsb
inc
jle
fwait
xchg
push
mov
push
dec
lds
adc
push
sub
mov
xor
fisubs
jnp
add
or
pop
arpl
rolb
sub
or
movsl
xchg
rcll
insb
mov
and
pop
push
test
cmp
push
in
jp
arpl
out
xor
xor
test
sbb
pusha
xchg
ljmp
out
lahf
jo
push
adc
mov
gs
jae
dec
add
movsl
test
jbe
dec
push
xor
push
lea
inc
out
adc
xchg
pop
dec
cmp
pop
mov
ljmp
adc
test
sbb
sub
std
jns
inc
out
pop
inc
ret
mov
stc
or
call
add
testb
push
bound
imul
fwait
xor
mov
sub
fwait
out
add
hlt
in
xchg
ffree
ss
dec
stc
xchg
pop
inc
and
ror
popa
mov
test
ret
xchg
aad
pop
and
mov
shlb
dec
cltd
test
rcrb
rcll
xor
stos
jmp
push
jns
fsubrl
dec
std
adc
popf
fsubl
push
ljmp
or
and
push
mov
movsl
repnz
mov
jo
addb
dec
cmc
mov
xchg
xor
pop
outsl
rclb
cmp
or
jge
pop
jmp
sbb
std
inc
mov
dec
ja
arpl
decl
mov
fisttpl
or
mov
sbb
and
popf
setne
mov
stos
ficoml
sar
xor
outsl
das
sub
jg
notb
out
mov
inc
mov
sahf
in
cmp
out
loop
or
dec
jo
mov
aam
xchg
jge
cltd
and
arpl
sub
inc
jg
out
jae
fdiv
out
mov
hlt
std
dec
lock
out
fnstsw
fs
andl
paddsw
push
and
insb
cltd
mov
lds
sub
or
mov
clc
xchg
add
bound
push
sbb
xor
adc
mov
test
adc
xor
jae
mov
sahf
daa
jp
ljmp
push
xor
sbb
insl
int
dec
fnsave
sub
rcrl
xchg
cmp
mov
push
cmpsb
repz
and
inc
xchg
or
jns
sbb
gs
cs
push
and
pop
inc
mov
addr16
push
shlb
cmp
cmpl
or
sub
push
icebp
and
out
lret
cmc
inc
vorps
gs
stc
inc
sub
push
dec
xor
loopne
loope
cmpw
adc
ret
in
mov
pop
pop
xor
cmp
xchg
pop
test
rcll
lds
mov
fwait
pop
and
fistl
jo
lods
pop
fdivrs
incb
fs
add
nop
pushl
mov
loopne
inc
xchg
leave
cmpsb
mov
inc
rcll
ss
xor
shll
jge
fidivs
xchg
test
dec
sbb
xchg
cs
outsl
push
out
jmp
pop
insb
dec
sbb
dec
test
or
pop
sub
aad
or
sub
iret
fstps
cmp
leave
aaa
dec
dec
mov
nop
push
push
xchg
jmp
dec
hlt
cmc
cltd
rol
jb
movsl
icebp
mov
jp
and
adc
insb
int
mov
cmpl
xor
ja
mov
mov
mov
cmp
stos
scas
mov
xchg
mov
xchg
frstor
xor
jmp
popf
cmp
cmp
movsb
jle
push
push
popf
mov
or
dec
dec
mov
je
cmpsb
or
stos
or
cmp
lea
jp
rorl
stos
repz
out
int
push
sbb
mov
xchg
pop
movl
insb
shlb
mov
jle
mov
mov
ds
inc
daa
popa
inc
lret
ds
lret
outsb
jnp
inc
sbb
out
or
movsl
iret
pop
xor
ss
mov
or
shll
mov
pop
add
inc
mov
jle
cmp
xchg
jmp
push
andl
adc
push
jge
inc
push
jp
or
das
push
push
mov
loope
imul
jb
rcrb
xor
mov
and
and
outsl
mov
rcr
ljmp
inc
fdivrl
dec
pop
in
push
and
mov
fidivrs
popa
push
xchg
sahf
leave
stos
dec
mov
or
xchg
je
add
repz
mull
jecxz
dec
imul
ja
mov
jno
jle
push
cmp
mov
lret
cmp
into
or
adc
sub
loopne
call
fildll
push
add
sarl
addb
inc
orb
pop
pop
lret
fstpl
inc
cmp
pop
mov
xchg
sbb
decl
scas
xchg
xchg
pop
pushf
ficomps
and
push
add
loope
push
leave
addr16
push
loope
or
lahf
cmp
cmpl
adcb
xchg
pop
and
inc
push
xchg
jge
and
cmp
cwtl
xchg
test
ret
dec
xchg
adc
and
ret
or
fdivl
add
enter
sub
jmp
lock
xchg
inc
jbe
sbb
push
popa
call
sbb
jle
jecxz
lods
js
sahf
stos
pop
sti
scas
ss
roll
fs
cli
and
rorl
inc
fadd
ds
fincstp
xor
ljmp
mov
or
or
jl
shrl
jnp
js
fiadds
mov
mov
push
subl
popf
test
mov
push
enter
lods
cmp
adc
add
mov
inc
or
fidivs
jns
movsl
or
xor
notb
pop
pop
push
push
sub
or
out
andb
sbbl
mov
popf
js
aad
jmp
jb
cmp
jg
xchg
loop
dec
dec
test
jb
test
testb
movsb
scas
ss
mov
add
mov
xor
adc
dec
mov
cwtl
cmpsb
inc
cld
ret
cmc
addr16
or
movsl
and
inc
push
jnp
enter
mov
repz
call
pop
popf
add
rorb
ja
push
lds
jnp
mov
or
sbb
int3
pushf
fldenv
inc
mov
sbb
mov
mov
inc
hlt
ficoms
aas
adc
jbe
jns
jne
popf
iret
inc
cmc
push
jno
adcl
xchg
cmc
sbb
popf
cmp
mov
sub
stos
sti
jle
jp
pop
rol
hlt
leave
cmp
xor
sbb
mov
loope
lods
mov
jl
dec
push
mov
push
xor
jns
enter
shl
mov
xchg
rcr
adc
xor
sub
fwait
pop
pop
lahf
sub
pop
les
jg
pop
mov
pop
fdivrp
addr16
mov
adc
jno
mov
das
push
cmp
stos
mov
stos
repnz
adc
mov
cs
xor
xchg
sarb
aad
push
ret
loope
pop
repz
test
outsb
push
xchg
mov
push
mov
lret
decb
jae
push
inc
dec
gs
adc
repz
mov
cld
gs
adc
inc
int3
xchg
mov
enter
sahf
adc
incb
cld
cmp
xchg
xor
outsb
lods
cmp
andb
enter
das
popa
ja
mov
aas
int
je
aam
scas
xchg
xchg
lahf
add
sbb
call
inc
add
xchg
adc
push
adc
and
mov
sarb
push
push
cmp
loop
mov
mov
push
mov
cmp
movsb
outsb
xor
push
pop
shrl
jle
cmpsb
add
inc
push
sub
scas
jle
push
in
mov
shlb
call
int
mov
sbb
push
jecxz
movsl
pop
leave
add
loope
mov
ds
jl
dec
cmpsl
repz
inc
mov
shr
inc
mov
daa
nop
popl
test
adc
sub
insb
add
shl
outsl
and
mov
sbb
cltd
pop
test
lea
add
add
mov
rcr
jnp
pop
and
ss
inc
add
ret
hlt
mov
je
sbb
add
add
stc
sti
add
add
test
fld
popa
cmpsl
jg
xlat
mov
pop
mov
cmp
fildl
lret
cmp
push
out
and
stos
aaa
ret
loope
adc
ret
data16
push
sti
stos
mov
xchg
mov
loopne
out
lods
xchg
pusha
inc
sbb
sbb
xchg
popf
xchg
sbbl
push
repnz
dec
mov
adc
jne
int
loope
dec
inc
inc
movsl
push
aaa
lods
jmp
sub
pop
cli
jl
mov
shll
sbb
or
out
insl
and
mov
jb
pop
outsl
repz
mov
dec
mov
fs
jg
sbb
push
cwtl
xor
push
fcomps
sub
cltd
add
or
jns
and
pop
les
lea
fwait
and
fdivrp
loop
pop
jmp
loop
cmpsb
add
pop
rorb
xchg
xchg
xor
inc
dec
fsubr
repnz
divl
cmpb
sub
mov
dec
arpl
gs
lret
and
dec
nop
das
cs
stos
mov
inc
or
andl
imul
arpl
cmpl
in
cmp
jg
xor
in
ret
and
jmp
xchg
mov
and
jp
stc
stc
aas
and
inc
dec
outsl
push
gs
mov
dec
sbb
jp
jns
jnp
daa
dec
je
sbb
repz
lods
jno
push
in
mov
decb
and
sub
pop
inc
sub
test
xchg
bnd
dec
jno
sbb
fmull
jecxz
jno
push
pshufw
xchg
jle
ss
jbe
dec
mov
sbb
mov
pop
imul
imul
push
and
insb
or
orl
push
xorl
adc
in
popf
aaa
xor
inc
je
dec
cmp
scas
outsb
movsb
loop
mov
push
cmc
fstpt
pushf
ljmp
mov
cmc
sbb
sub
sub
inc
sub
xchg
mov
sti
and
or
fcomps
mov
out
sub
out
dec
pop
out
das
push
xchg
popa
push
ss
out
scas
dec
sbb
outsl
xor
xchg
adc
loopne
jp
adc
and
faddl
lcall
push
mov
push
int
push
or
cmpsb
lcall
sbb
push
cmpsb
mov
push
icebp
frstor
adc
addr16
xchg
out
into
lock
fidivs
sti
xor
jg
cmp
sbb
sub
inc
xor
rcrl
sbb
mov
aam
xchg
movsb
leave
rcrb
cmpsb
dec
ja
shlb
rcr
push
in
pop
stos
iret
cmp
jno
rep
pop
pop
jl
les
aas
lock
push
popf
push
cmp
mov
insb
xor
mov
adc
pop
xor
inc
cmp
arpl
jae
cmp
lret
mov
mov
repz
adc
pop
xor
inc
cmp
arpl
jae
cmp
lret
mov
mov
repz
adc
pop
xor
inc
cmp
arpl
jae
cmp
lret
mov
mov
repz
adc
pop
xor
inc
cmp
arpl
cmp
fcmovnb
fmull
sub
sbb
or
sub
arpl
jae
into
add
dec
imul
ret
stos
sarb
sub
jle
lret
mov
inc
sub
arpl
jae
add
jnp
dec
xor
stos
rcr
jecxz
repz
inc
jmp
sti
mov
sub
arpl
jae
add
jnp
dec
xor
add
mov
subl
fistpl
aaa
arpl
lret
cwtl
sub
sbb
push
xor
sub
jo
ret
mov
or
mov
cld
call
into
sbb
inc
push
inc
sbb
or
jl
xchg
pop
hlt
fwait
mov
jae
sub
ja
out
stos
test
insl
mov
push
xchg
xor
ljmp
inc
ds
mov
and
push
jnp
les
movsb
dec
jo
xlat
sbb
adc
push
mov
mov
mov
push
test
data16
pop
sar
insb
pop
repz
push
mov
insl
clc
loop
push
loope
scas
xor
sbb
fistpl
out
xor
sub
arpl
jae
add
jnp
dec
xor
stos
sarl
sub
sti
mov
inc
daa
cmp
bound
jb
pop
popa
jnp
add
mov
jecxz
mov
orb
lcall
pop
imul
cmp
pop
cmpsb
roll
hlt
orb
mov
bound
or
pop
jle
imul
and
pop
ret
stos
sarl
sub
sti
mov
sub
arpl
jae
add
jnp
dec
xor
stos
sarl
sub
sti
mov
sub
mov
adc
enter
mov
loop
loopne
lret
sbb
jae
mov
inc
inc
xor
jno
mov
jg
mov
mov
or
rcll
mov
mov
dec
xor
mov
jle
fisubl
xor
inc
sbb
ljmp
shll
push
shlb
fwait
xchg
aas
loop
mov
inc
adc
xchg
xchg
mov
pusha
shll
jo
lahf
jl
sub
push
mov
pop
ds
xchg
or
aas
sbb
shlb
pop
cli
in
loop
das
fisubl
gs
test
outsl
sub
fldcw
xchg
add
inc
xor
jae
out
jno
inc
orb
fdivs
dec
sub
push
jmp
dec
dec
cmp
repz
cltd
push
stos
mov
mov
out
or
das
push
mov
cmp
arpl
ljmp
add
dec
push
ds
lret
or
rorl
mov
dec
frstor
push
ret
faddl
xchg
dec
movsl
fistpll
pop
shrl
mov
pushf
jno
xlat
fsubrp
mov
mov
stos
nop
xor
mov
xor
mov
rorb
fmuls
xor
sbb
fdivr
cltd
lods
test
mov
inc
or
xchg
xor
cld
inc
mov
fiaddl
call
mov
dec
pop
setb
mov
xor
inc
xor
push
mov
push
and
mov
push
add
test
jno
gs
inc
or
test
xchg
ret
loopne
and
xchg
push
lcall
cs
icebp
jmp
scas
mov
repnz
mov
test
cmp
pop
pusha
popa
jmp
das
fcmovu
xchg
stos
adc
pop
sub
or
jl
sub
or
dec
push
lret
dec
add
cmpl
test
lea
push
xchg
jg
in
adc
cmp
pushf
icebp
rep
insl
inc
add
xchg
test
sub
pop
or
or
sub
sti
add
je
hlt
and
popa
cmp
dec
cmp
adc
inc
iret
sbb
jno
xor
adcb
push
mov
clc
in
adc
and
pfmax
inc
cmp
sub
dec
stos
xchg
mov
mov
xor
imul
popf
repnz
test
dec
imul
pop
dec
rolb
push
fcompl
jp
loopne
rep
dec
or
sbb
jecxz
adc
aad
dec
mov
pop
dec
inc
andb
into
and
bnd
in
sub
fiaddl
or
dec
inc
mov
push
mov
cmp
loopne
pusha
fwait
cmp
adc
push
test
dec
mov
pop
enter
aam
lea
and
addr16
mov
das
dec
push
sbb
out
and
or
stos
add
lea
pop
out
into
ret
jne
cld
imul
cmp
dec
adc
sahf
and
imul
fs
mov
imul
xor
add
repnz
xlat
mov
rol
mov
mov
aas
lock
inc
test
mov
fwait
aam
mov
fdivrs
add
inc
sti
mov
add
mov
xchg
out
loopne
in
test
inc
jno
or
jle
xchg
cmpb
mov
outsl
and
repz
xchg
fsubrl
pop
nop
repz
scas
xor
push
push
pop
arpl
xchg
xor
out
mov
ret
dec
sar
mov
fsts
sub
mov
outsb
push
addr16
cmp
das
out
cmpsl
cmp
sarb
cmp
push
xor
addr16
pushf
call
add
cli
inc
stos
inc
pop
call
gs
lcall
and
hlt
mov
sbbb
sti
mov
lods
rcrb
arpl
lret
stos
stos
sbb
xchg
dec
loop
jbe
sbb
int
adc
fwait
xchg
mov
mov
fidivl
js
pushl
push
es
cmp
jne
ret
stc
cli
mov
mov
sarb
in
mov
inc
xchg
inc
ffree
loopne
mov
push
sub
mov
jbe
cmp
repz
out
pop
dec
inc
ret
aas
mov
adc
stc
ret
hlt
push
jae
shrl
xor
sub
fbstp
loop
mov
add
adc
jle,pn
mov
fsubl
mov
sbb
mov
mov
push
int
xor
cmp
aad
and
fs
cmp
or
rorl
sub
and
lock
mov
sub
out
clc
arpl
cmp
into
mov
push
push
popf
push
pop
jmp
push
repz
dec
mov
jle
inc
lods
pop
flds
jne
hlt
fldl
lods
mov
ss
add
sbb
push
add
push
ret
pop
es
std
pop
pop
cltd
dec
scas
shll
mov
dec
xchg
dec
imul
es
mov
in
jp
sbb
ss
mov
scas
lds
popl
std
loopne
lea
in
lods
jno
jge
push
imul
sbb
add
pop
inc
shrl
mov
or
and
iret
out
inc
sbb
xchg
inc
inc
inc
dec
mov
jmp
and
push
outsl
mov
in
xchg
test
mov
add
nop
jge
mov
xchg
jmp
jl
or
out
jns
out
inc
and
or
int
enter
pop
and
cmp
roll
sub
adcb
out
xor
jne
pop
inc
fwait
cmp
xor
es
push
ficoml
cmpb
not
int3
inc
mov
jl
cmp
or
mov
mov
jnp
out
ret
lods
leave
psadbw
push
sarl
ret
bound
push
mov
lret
pop
clc
mov
test
mov
ja
xchg
out
sbb
stos
xchg
mov
jbe
inc
mov
test
and
fiadds
lds
xor
nop
dec
enter
add
stc
mov
and
inc
mov
cltd
fsubrs
iret
mov
add
movsb
mov
cmc
loope
or
jae
or
mov
dec
mov
mov
movsl
daa
or
jae
jnp
adc
jmp
subb
rorb
in
mov
push
xchg
add
mov
test
pop
xchg
mov
sbb
push
js
adc
push
pop
test
push
lock
out
xor
sbb
push
lahf
mov
fisubs
push
popl
sbb
testb
xchg
fcmovnb
dec
add
sbb
xchg
or
dec
or
jns
int
les
push
mov
xchg
xchg
xor
xchg
pop
xchg
shll
movsb
lock
lret
repz
scas
jne
das
fsubrl
popf
xchg
adcl
mov
mov
insl
or
dec
mov
mov
aaa
mov
adc
xchg
repnz
and
push
xor
enter
je
cmp
testl
fistl
scas
jg
outsl
imull
sbb
xchg
lods
mov
mov
push
jb
popa
jns
jge
adcb
sub
inc
pop
aam
fisttpl
cld
cld
cmc
jae
xchg
add
int
in
lcall
jne
test
fildll
int
cwtl
and
push
pop
adc
or
std
xchg
mov
scas
lea
push
fsubs
orb
push
mov
loop
ja
cltd
xor
bound
xchg
daa
add
jb
cmpl
jl
imul
jecxz
ret
dec
sub
sub
sub
jecxz
pop
jl
out
push
fwait
and
dec
negb
movsl
lahf
scas
pop
cltd
data16
dec
gs
xchg
fldcw
cltd
fcoml
xchg
and
scas
cmp
clc
cmpsb
mov
ljmp
cmc
out
bnd
pusha
mov
movsb
mov
push
into
les
repnz
bound
jg
lods
mov
in
xchg
inc
imull
inc
cwtl
and
inc
and
sahf
jp
test
pop
sub
stos
test
mov
sbb
xor
repz
xor
push
cmpsb
jg
mov
call
inc
sbb
sbb
call
test
or
push
outsl
mov
bound
pop
cmp
lret
or
pop
fisttpll
stos
push
cmp
add
sub
jmp
flds
add
inc
sub
es
sbb
cmp
mov
pop
jl
ss
rcll
sbb
lods
mov
imull
loop
adc
aam
sarl
sub
insl
mov
adc
in
aam
movsl
mov
iret
ret
xchg
cmp
les
inc
sbb
dec
fldl
add
adc
add
add
sbbl
add
mov
jg
lret
inc
scas
sahf
sbb
sbb
push
push
xor
xchg
cmpsb
mov
mov
xchg
mov
dec
pop
xor
push
jmp
out
clc
test
sarl
xor
fdivs
pop
mov
or
jecxz
jne
inc
adc
sbb
fldenv
dec
cmp
daa
mov
not
pop
mov
sbb
and
ret
jbe
outsb
cmp
outsl
js
sbb
mov
sbb
pop
aaa
pop
mov
imul
adc
sti
lret
and
sub
mov
push
lcall
mov
test
push
mov
cmp
xchg
out
pop
xor
cmp
jae
xchg
pushl
inc
mov
iret
imul
pop
and
mov
mov
pop
movsb
pusha
sbb
dec
or
push
add
xlat
mov
xchg
xchg
lret
pop
pop
push
jae
fidivrl
popa
sbb
sbb
shl
sub
cmp
inc
xor
dec
xchg
les
faddl
jno
orb
into
xchg
icebp
xor
rolb
cmc
mov
daa
xor
inc
push
clc
sub
inc
lcall
cltd
std
jb
in
jl
mov
jnp
div
lock
push
negl
ss
xor
and
xchg
data16
add
adc
call
mov
jmp
jns
fnstsw
adc
sub
adc
call
xchg
pusha
xor
mov
orb
sub
xchg
sbb
ret
sub
jmp
out
xchg
or
out
out
push
jp
lds
lock
shr
and
push
fninit
inc
negb
cmpsb
or
clc
lods
xorb
sub
fnsave
sbbb
and
shlb
sbb
test
dec
call
fsubl
jp
cmp
nop
or
cli
xbegin
mov
aad
xor
fisubs
push
mov
mov
shlb
pop
xor
mov
lcall
xchg
loope
fisttpll
dec
pop
xorb
rorb
mov
out
push
dec
shrl
mov
dec
or
ljmp
aam
dec
mov
std
fcomps
push
mov
in
pushf
mov
imul
fdivl
stos
cmpsl
or
dec
out
les
jo
sahf
aaa
pop
jmp
pop
cmp
jns
xor
sbb
mov
nop
loopne
adc
cmp
or
aaa
add
test
insb
mov
sbb
adc
pushf
and
scas
hlt
popa
icebp
ffreep
mov
xchg
mov
lods
or
js
lret
stos
mov
push
mov
sub
ds
test
adc
sub
xlat
mov
xchg
sbb
inc
lds
xchg
and
lods
hlt
gs
imul
lods
cmp
sbb
sti
aad
enter
jcxz
inc
adc
stc
sahf
mov
jb
mov
rolb
xchg
sub
and
jg
push
cmp
jmp
int
add
add
mov
push
add
rcrl
add
arpl
stc
mov
sub
xor
daa
ret
jbe
test
fnstsw
hlt
mov
stos
fwait
xchg
mov
adc
es
mov
add
xchg
and
cmpsl
jo
lea
fs
out
push
push
daa
into
cs
sub
inc
sahf
mov
dec
insl
jg
movsl
xchg
mov
jmp
cltd
nop
inc
xchg
jmp
loop
sti
pop
jle
sbb
cltd
aaa
jecxz
or
push
das
imul
sub
mov
repnz
hlt
pop
push
nop
addr16
fadd
mov
cltd
mov
inc
les
add
sub
roll
call
mov
je
les
aas
rcr
dec
push
cltd
inc
sahf
mov
xchg
adc
sbb
lret
out
sub
inc
fisubrl
or
ret
arpl
ret
and
repz
in
pop
gs
push
inc
in
in
jge
dec
adc
xchg
loop
mov
imul
ret
in
dec
push
cmp
addb
push
xchg
adcb
test
xor
push
lcall
mov
cs
dec
mov
sbb
and
std
sahf
je
movsl
cmp
mov
sbb
push
xlat
pop
cwtl
inc
rcl
inc
mov
pcmpeqb
pop
gs
jb
sbb
cltd
mov
dec
push
push
arpl
mov
loop
or
or
mov
pop
int3
andl
ret
inc
out
jg
lcall
cmc
imul
lods
imul
sbb
mov
into
or
mov
and
push
add
mov
push
dec
lret
jl
jbe
jl
jne
test
xor
mov
push
and
std
cmp
lea
mov
add
sete
inc
inc
cmpsb
jmp
ror
js
imul
cld
fwait
ret
mov
bound
test
sbb
loop
stos
mov
xchg
push
inc
sahf
mov
stos
dec
jle
test
in
pop
lods
test
jae
sub
fdivrs
subb
jbe
int3
jno
and
repz
in
push
andl
addr16
xor
sarb
movsl
rorb
mov
push
push
push
fsubr
in
repnz
test
pop
sbb
outsl
movsb
inc
pop
pop
mov
loop
and
testb
mov
push
cli
dec
cmp
mov
sbb
dec
mov
iret
sbb
hlt
or
fistps
aas
notb
movsb
mov
xor
popf
push
les
mov
adc
data16
push
pop
ret
cs
push
or
int
xlat
inc
push
movsl
cmpb
mov
sbb
sbb
cmp
test
mov
or
add
pop
inc
in
xchg
jmp
and
rorl
test
jne
lods
movsb
inc
ror
mov
pop
pop
test
adcb
in
add
adc
clc
sub
jb
test
jae
push
jmp
add
mov
add
andl
pop
sub
std
sub
fisttpll
popf
sub
dec
fidivrl
mov
xorb
sub
sarb
pop
sti
pop
lock
lahf
sar
ficomps
push
and
fwait
mov
mov
cs
frstor
jp
int
pop
cltd
repz
push
xchg
int3
pop
add
jle
jmp
xor
mov
xor
bound
sub
cld
loope
pushf
adc
ficoms
dec
loop
jp
or
jno
pop
out
pop
adcb
pop
mov
sarb
in
iret
mov
popf
das
decb
mov
loop
inc
insl
cs
ljmp
mov
jae
outsl
leave
xchg
xchg
pop
xor
jno
rolb
adc
and
ror
push
ds
or
bound
mov
mov
jmp
and
mov
mov
daa
int3
int
stos
mov
pop
loope
sbbl
test
dec
jge
and
sub
mov
xchg
cmpsl
mov
mov
lods
mov
pop
mov
push
data16
add
movsl
cltd
lcall
sahf
push
cld
fldenv
xchg
bound
inc
ret
push
cmp
push
pop
addr16
enter
std
icebp
adc
int
jp
add
bound
jmp
xchg
jmp
and
rcr
fst
je
mov
sbb
mov
or
mov
xchg
mov
cmp
iret
jbe
sti
test
pop
push
in
mov
cmp
popa
imul
shlb
subl
les
mov
add
aam
sub
mov
fldt
adc
in
pop
sbb
dec
or
je
popf
outsb
pusha
add
mov
pop
pop
cmpsb
scas
and
mov
and
push
mov
loope
push
ja
cmp
movsl
xorl
imul
movsl
push
ss
mov
outsb
clc
inc
pop
popf
cmpb
jle
in
dec
jmp
dec
xor
push
andl
mov
fnstenv
stc
or
mov
mov
lds
inc
jno
sbb
xrelease
ds
and
push
imul
in
stc
pop
int
jmp
inc
jp
jmp
xchg
cmp
inc
icebp
mov
mov
insl
inc
push
mov
sbb
rclb
push
cs
imul
xchg
cli
lahf
into
pop
fxch
sbb
xor
jge
sbb
mov
insb
jns
hlt
jmp
fidivrs
mov
test
lahf
insl
xchg
cmpsb
push
testb
cmp
add
xor
and
aaa
add
aas
movsb
mov
movsb
mov
int
adc
and
or
out
lods
add
push
and
rcr
rcll
sbbb
fisubs
sub
xchg
enter
ljmp
scas
xlat
cli
sub
icebp
cmp
test
js
pop
and
xchg
xchg
movsb
ds
and
sub
mov
and
dec
jo
or
mov
pop
int
test
rcrl
data16
scas
fisubrl
cli
fnstenv
mov
cli
mov
xchg
cmp
dec
mov
ljmp
mov
push
cmp
push
adc
xchg
in
dec
das
mov
push
aam
test
xor
aad
ficompl
xchg
jo
ds
cwtl
ja
xchg
adc
nop
out
sbb
adcb
lahf
incl
xchg
aam
jne
adc
aad
push
pop
mov
or
dec
pop
push
arpl
push
mov
jl
xor
lods
clc
push
mov
cmp
mov
push
cmpsb
sbb
lahf
imul
imul
pop
lods
out
pop
mov
mov
les
pop
sarl
nop
cmp
push
lea
popf
jne
test
sbb
cmp
iret
gs
fiaddl
fisubrl
sbb
loopne
jb
lcall
cli
add
imul
cmp
movsl
mov
dec
mov
sub
lds
or
popf
pop
ljmp
dec
inc
loopne
roll
jnp
mov
sub
pop
lcall
mov
mulb
lods
pop
sarl
lret
cmp
adc
push
in
hlt
into
add
lods
pop
inc
jbe
add
dec
sahf
cmp
push
sub
mov
jmp
pop
xor
cmp
adc
dec
clc
mov
mov
push
in
cmp
push
mov
leave
xor
jns
adcb
addr16
xor
mov
test
pop
xor
jb
lret
push
dec
test
and
sub
popa
cmpsb
adc
out
cmpb
adc
aam
aam
ljmp
lcall
and
out
movsl
stos
xchg
sahf
sbb
cmp
ljmp
aaa
pop
repz
jbe
pusha
imul
cmp
insl
movsb
xor
jo
xor
sbb
mov
sbb
dec
xchg
rcl
mov
xor
add
dec
inc
mov
subl
cmp
les
scas
jge
push
jecxz
gs
jp
dec
xchg
dec
in
xor
ja
mov
ds
pop
mov
mov
stos
push
jl
cltd
fdivs
cltd
test
test
mov
insl
pop
call
pushw
push
dec
push
jo
enter
inc
ja
negb
mov
jne
lds
pop
push
mov
cmc
aas
scas
inc
ret
push
das
movsb
incb
xor
out
xchg
lahf
push
dec
push
repz
cld
je
jl
in
cs
scas
int
cmp
xor
xor
add
or
stos
jp
xchg
outsl
push
xor
loop
adcl
and
ss
sub
popl
jl
mov
cmc
mov
mov
loopne
imul
pop
sarl
bound
jae
add
jnp
dec
xor
stos
sarl
sub
sti
mov
sub
arpl
jae
add
jnp
dec
xor
stos
sarl
sub
sti
mov
sub
mov
subl
and
pop
ret
sub
mov
sub
sti
mov
sub
arpl
jae
add
jnp
dec
xor
stos
rcll
dec
mov
in
repz
add
xor
and
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lret
dec
ljmp
arpl
jb
sub
push
jp
or
cmp
ljmp
or
dec
fistps
push
jp
or
sbb
mov
fimull
gs
je
add
adc
dec
jns,pt
sbb
imul
mov
or
aam
mov
jno
pusha
stc
jge
xchg
mov
inc
jge
add
xchg
mov
push
movsl
negb
and
pop
sbb
fdivrs
loopne
mov
mov
fisttps
or
hlt
pop
dec
or
or
cmp
sub
pop
loop
gs
gs
xor
into
sbb
aaa
mov
cltd
gs
lods
outsl
addb
jne
mov
sub
push
push
int
mov
lcall
push
and
mov
pop
stos
mov
lcall
clc
in
inc
cmp
ljmp
or
dec
lds
push
jp
or
cmp
scas
cmp
insb
out
dec
cmc
arpl
push
ds
cmp
orb
sarb
push
out
pop
incl
movsb
cmp
scas
std
out
jg
inc
rcll
lods
sbb
sub
lcall
fstpl
push
jp
or
cmp
ljmp
or
dec
fstpl
push
jp
or
cmp
ja
test
and
cli
andl
loope
out
movsb
push
nop
mov
shlb
cmp
push
out
addr16
xor
mov
in
xchg
and
mov
out
jns
xor
add
aaa
insb
fisubs
jnp
push
adc
hlt
sub
fcoml
das
lock
push
mov
fisubrs
leave
push
add
jmp
stos
inc
inc
test
fwait
shll
fildll
inc
shlb
mov
sbb
lods
and
mov
mov
jb
aad
push
pop
cli
mov
sub
out
xchg
cltd
outsl
pop
push
dec
js
nop
xor
lret
in
inc
clc
bound
imul
pusha
cmc
shr
or
leave
test
cmpsl
mov
fisttpll
pop
or
xchg
jbe
in
and
ss
shrl
in
adcl
dec
fnstsw
call
test
sbbb
inc
xor
cmc
jp
sarl
jge
xchg
sub
or
popa
pop
fnsave
mov
push
adc
int3
iret
pop
push
cli
outsl
movsl
cmp
adc
mov
outsb
cld
addl
push
and
mov
and
fwait
into
xor
xor
inc
dec
arpl
pop
pop
lock
fcomip
pop
int3
rsqrtps
sbbb
enter
bound
dec
fisubrl
sbb
popf
std
pop
push
cwtl
xor
clc
sub
ds
js
dec
mov
lea
sar
cs
adc
dec
mov
out
lds
cs
insb
jmp
icebp
imul
cmp
outsl
leave
jae
inc
sbb
fstp
into
in
sbb
mov
mov
pop
subb
mov
sub
ret
jg
push
xchg
ror
mov
dec
loop
loopne
sbb
cmc
lcall
or
ror
jb
xor
sub
test
adc
push
rorl
je
adc
out
mov
dec
pop
fwait
insb
push
xchg
ss
mov
xchg
dec
sbb
pop
movsl
cwtl
nop
mov
xchg
inc
and
insl
lods
push
mov
jo
pop
out
dec
bswap
les
mov
adc
pop
mov
ret
fisubl
sbb
pop
xor
push
call
jg
arpl
sahf
mov
rcrb
push
lret
cmp
xor
enter
xor
mov
add
xorb
mov
out
in
sbb
push
cmp
ja
push
xorl
cltd
cltd
mov
insl
xor
aas
in
mov
jo
add
out
push
xor
sbb
in
aaa
mov
and
xor
jo
and
pop
xchg
jae
aad
out
xchg
xor
jmp
scas
push
clc
sbb
popf
inc
mov
jl
mov
sbb
mov
adc
push
sbb
cmp
out
loopne
mov
sbb
inc
test
les
out
push
inc
sti
jmp
addr16
sub
mov
adc
cmc
push
test
pop
pop
or
std
sub
jo
pop
mov
imul
insb
cmpsb
sarb
sub
mov
in
push
pop
fcmovne
pop
xor
out
adc
popa
cld
jae
stos
mov
add
xor
outsb
xorl
mov
jb
adc
jge
jecxz
jge
sbb
icebp
jmp
mov
ja
scas
js
and
or
lods
or
imul
fstl
sbb
cs
subb
hlt
or
sbb
out
mov
sub
test
sbb
ja
incl
lcall
loope
add
loopne
xchg
mov
inc
in
insl
ror
leave
and
cmpsb
cld
adc
cs
push
mov
orps
add
cmpsb
inc
dec
repz
mov
loopne
pop
gs
insb
xchg
and
scas
hlt
bound
lock
cmp
addr16
and
mov
cmp
in
adc
push
ds
mov
leave
push
movsb
or
xchg
adc
repz
adcb
xor
outsl
std
pop
sbb
ret
jmp
ror
xchg
mov
xchg
or
sub
shll
adc
das
lcall
emms
faddp
sub
sbb
mov
hlt
cli
in
lahf
cmpsb
lods
mov
mov
inc
xchg
dec
lock
insb
lahf
pop
loop
push
repz
adc
daa
add
es
cs
sub
mov
fmuls
fcmovb
push
pop
lods
into
mov
insl
ljmp
call
dec
mov
and
iret
aam
or
into
stos
ss
and
pusha
popf
xor
pop
and
cmp
adc
ret
ss
gs
arpl
xor
jne
sahf
sarb
shll
pop
mov
pop
xor
shrb
insb
ror
fstpt
lea
aam
add
rcrb
xchg
dec
repz
inc
mov
pushl
lcall
fwait
iretw
mov
dec
cli
jno
xchg
sub
sbb
push
xchg
cmp
mov
adc
in
sub
xchg
mov
adc
nop
push
iret
pop
jge
pop
in
in
aaa
push
jl
ja
jl
cld
adc
cs
add
dec
mov
rclb
test
xchg
cmp
cmpsb
orb
mov
fstpl
push
mov
fld1
sub
clc
mov
popf
rcll
pop
add
popf
mov
mov
cs
xor
jne
jmp
es
mov
add
clc
dec
int
int
sub
hlt
movsl
lret
xor
stos
ljmp
icebp
xor
add
movsl
push
stos
lahf
cmp
push
cmpb
lock
sbb
sarb
aas
cmp
cmp
xchg
pop
push
mov
es
jge
mov
ljmp
pop
insb
or
add
out
mov
sbb
inc
jg
stos
mov
and
mov
mov
jmp
xor
cld
loope
mov
sub
push
cmp
inc
and
lret
push
mov
inc
maxps
dec
mov
rcrl
and
je
mov
sub
or
fsts
jno
mov
adc
sbbl
icebp
xchg
repnz
jne
pop
adc
jo
inc
fbld
in
stos
out
xchg
test
into
and
sbb
mov
mov
lahf
int3
sub
or
das
mov
pop
add
lds
test
ret
mov
dec
push
aam
cld
pop
ret
add
xchg
add
jecxz
leave
cmc
mov
popa
rcll
push
popf
dec
loop
lret
mov
popa
lret
shlb
xor
iret
jp
mov
inc
sub
icebp
insb
inc
mov
inc
test
push
fldt
push
push
cmp
xchg
push
pop
call
daa
xchg
add
pop
aad
add
leave
mov
inc
add
mov
mov
orb
mov
lods
sub
push
in
arpl
mov
push
pop
bound
push
adc
out
orl
pop
into
subl
jo
iret
lret
nop
roll
pop
and
fcoml
add
inc
mov
or
fnstsw
lds
push
shrb
cltd
fwait
mov
testl
add
mov
daa
shlb
jns
add
pop
xchg
lods
mov
xor
cmpsb
jb
faddp
jne
popl
mov
sub
inc
inc
or
xor
pop
push
call
aaa
lret
pop
or
jno
dec
lods
adc
mov
mov
xchg
out
sbb
lods
and
popa
std
jmp
rorl
in
pushf
adc
scas
pushfw
rol
es
mov
mov
or
cmpsl
pusha
nop
lahf
aad
mov
movsl
pop
ljmp
sti
ret
and
ret
es
xor
jne
test
into
pop
shrb
sbb
cmp
sbb
sti
lods
sub
je
insb
lea
pushf
mov
call
leave
xchg
roll
ljmp
mov
jo
and
cmp
dec
test
mov
or
icebp
inc
jb
jg
mov
jnp
test
cmp
push
fisttps
sbb
jbe
mov
lret
or
cmp
xor
repz
mov
push
fdiv
and
push
sub
loopne
mov
test
jne
ljmp
sbb
mov
jb
add
push
cmc
push
or
push
jle
stos
cltd
lret
jg
scas
jns
fnstsw
in
into
outsb
mov
aaa
cld
ss
push
testl
cmp
dec
addr16
loope
arpl
aam
pop
movsb
daa
xchg
movzbl
push
es
test
mov
jo
mov
and
jl
jnp
xchg
ret
and
adcb
and
inc
pushf
or
mov
xchg
adc
cmp
outsb
push
ds
push
insb
ja
mov
popf
xchg
fidivl
repz
jb
in
dec
lea
bound
into
sahf
push
out
dec
add
mov
xorl
mov
push
enter
jecxz
mov
loopne
mov
fsubrs
pop
dec
or
es
mov
adc
push
jp
in
lods
mov
mov
test
push
sbb
push
dec
push
cmpsb
call
cwtl
lret
mov
mov
dec
cltd
hlt
daa
mov
mov
repz
loop
inc
and
mov
or
lock
adc
es
push
jp
cmc
in
cmp
int
rcll
sarl
cltd
rol
sbb
adc
jnp
rcl
mov
ljmp
xchg
xchg
lods
or
in
test
inc
arpl
popl
fucom
in
sub
xchg
sub
mov
mov
mov
test
int
jecxz
dec
push
ds
mov
sbb
popf
mov
mov
mov
rorb
add
arpl
lock
fistpll
or
push
mov
adc
pusha
mov
aas
sti
jne
cs
sub
call
inc
adc
mov
add
in
repz
or
stos
add
jae
dec
or
pushw
hlt
je
push
jns
mov
aas
fcmovbe
jle
cmp
pop
mov
repz
nop
mov
test
sbb
dec
push
testb
inc
mov
insb
inc
lods
and
sub
in
imul
mov
mov
aaa
ja
xor
jp
or
cmp
jno
leave
and
mov
cmpb
lds
mov
fimull
cmpsl
data16
imul
or
test
or
loopne
lahf
sub
mov
and
adc
int
imul
jae
out
jge
jae
repz
cli
sahf
xor
lcall
enter
rorl
sbb
clc
int
inc
cwtl
pusha
pop
pop
iret
mov
or
cmp
adc
fsubr
mov
mov
imul
mov
loope
adc
sub
dec
pusha
cmc
arpl
push
jo
mov
out
into
lock
lea
les
imul
dec
pop
push
xchg
repz
enter
shlb
aad
das
inc
sub
jnp
and
add
cmpsl
xor
fdiv
cltd
stos
push
sbb
ss
fs
sbb
gs
mov
ret
notb
and
xchg
mov
sarl
add
pushf
cmc
test
sbb
ficoms
ljmp
xor
sarl
mov
sub
and
fwait
push
add
add
cmp
add
push
shr
sbb
outsb
pop
jecxz
leave
lds
xor
fimuls
data16
cmpsb
dec
xor
jae
into
push
das
das
bound
mov
xor
testb
stos
jecxz
ret
je
push
ret
jp
pop
adc
jne
addl
pop
lea
cwtl
fisttpll
in
movsl
hlt
insb
pop
int
sbb
or
negl
xor
loopne
adc
mov
iret
cltd
out
fwait
and
jp
xchg
mov
add
and
pop
dec
mov
sbb
test
fstpl
mov
dec
gs
dec
pop
dec
push
repnz
mov
pop
mov
xorl
pop
push
lcall
push
nop
jg
loope
xor
pop
and
xor
cli
fld
xchg
push
icebp
sbb
and
jp
mov
xor
inc
lods
adc
xchg
fisubrl
mov
mov
pop
xlat
repz
les
out
sbb
cli
jmp
ds
mov
mov
out
inc
hlt
inc
outsb
sbb
imul
mov
mov
xchg
ficoms
push
cltd
xchg
dec
jge
bound
leave
popf
mov
sarl
pop
movsl
adc
pop
push
lcall
push
rorl
andb
xor
adc
aad
ljmp
shlb
sahf
sub
outsb
ret
push
fs
loop
cmp
dec
cmp
xor
imul
loopne
add
push
mov
xchg
lds
mov
jg
dec
mov
mov
add
ror
pop
in
ja
leave
xorl
movsb
incb
xchg
mov
xchg
sub
inc
mov
cmp
dec
adc
data16
xor
call
add
imul
fs
in
hlt
data16
jg
sub
jecxz
repz
shll
sub
cmpxchg
cmpsb
mov
lret
sbb
cmpsb
scas
dec
cmpsb
push
inc
mov
cmp
fs
decl
push
nop
into
cmpl
mov
cs
outsl
or
ljmp
movsl
sbb
and
push
test
add
jl
lret
mov
mov
add
lods
fstl
imul
and
mov
repnz
push
and
aad
xchg
cmpsb
in
orb
test
loop
and
subb
inc
loop
aaa
int
sub
clc
fmul
fnstenv
jb
cmpsb
push
and
jo
cltd
mull
xchg
movsl
les
sub
cli
imul
lret
cwtl
push
push
out
lret
and
pop
jns
push
pop
jae
ds
int3
negl
iret
add
pop
mov
ds
sti
inc
nop
popa
inc
xchg
inc
ss
jle
add
sub
xor
xor
dec
jae
test
xor
in
dec
inc
in
dec
xchg
push
jnp
jp
inc
rcrb
mov
jbe
sub
addr16
adc
lret
add
pop
mov
dec
jae
lret
pop
fstpl
pop
mov
mov
pop
addr16
inc
lock
xchg
in
jae
dec
ret
push
insb
in
jns
dec
mov
pop
outsl
insl
in
xchg
test
inc
add
nop
enter
mov
sub
and
call
inc
pop
std
fcompl
mov
jge
sbb
push
stos
adc
add
mov
pop
mov
xorl
mov
repz
stos
scas
popf
mov
xchg
paddw
ss
jge
and
stc
pop
xchg
aam
or
nop
xchg
das
mov
xor
loope
clc
dec
cld
push
dec
aam
and
testb
dec
daa
pop
repz
aam
sbb
or
mov
repz
push
stc
mov
fnstcw
jmp
xor
jp
aas
dec
iret
lret
cld
jmp
jb
cwtl
addr16
push
dec
cmp
jno
mov
push
es
cld
stos
mov
sahf
or
aas
push
push
dec
mov
pop
sarb
xchg
xchg
xchg
mov
pop
das
clc
jmp
shll
and
rcrl
cmp
adc
loopne
test
jecxz
or
in
sbb
mov
dec
cmp
mov
stc
fstps
or
lods
pop
sub
jae
cltd
jle
push
dec
aaa
aaa
dec
add
mov
jge
xchg
or
and
repz
sbb
stos
and
dec
jns
fimull
cmp
fwait
popf
fdivs
enter
outsl
movsl
jbe
test
add
push
std
xor
je
pop
popf
sub
adc
aas
add
je
dec
into
push
cld
sub
jg
sub
jae
jmp
enter
dec
dec
jg
push
bound
sbb
cmp
fcomps
ret
ljmp
sbb
adc
in
sbb
pop
mov
push
repnz
jne
inc
mov
adc
lret
or
and
push
adc
cwtl
test
inc
cmpb
aad
cmp
test
mov
mov
jle
xchg
lret
les
dec
leave
sub
sarb
xor
pop
data16
pop
fdivl
imul
and
pop
jl
enter
xchg
mov
stc
stos
adc
sub
pop
push
imul
and
call
ret
inc
pushl
das
fisubrl
inc
lret
icebp
fcompl
loopne
nop
ljmp
divb
repz
out
adc
loope
nop
mov
xor
ljmp
sbb
inc
push
sub
sub
xchg
lods
nop
jl
jno
sub
cmp
fidivrl
js
dec
pop
mov
sub
std
pushf
in
mov
addr16
sti
and
std
enter
ror
stc
ljmp
js
mov
xlat
ret
pop
mov
sub
sbb
push
aaa
cmp
dec
push
or
mov
xor
leave
negb
pop
pop
add
repnz
lret
out
push
lahf
xor
pop
inc
ret
pop
mov
add
cmp
sahf
das
sahf
leave
cmpsb
jae
xchg
sbb
roll
sbb
lods
xchg
mov
lahf
xor
pop
out
sub
cld
dec
sub
test
shl
sub
adc
or
mov
out
lcall
daa
test
dec
push
push
jmp
aaa
out
mov
call
mov
popf
pop
out
fdivrl
aam
jne
or
add
les
and
add
int3
pop
jnp
test
cmpsl
and
pop
jmp
aad
xchg
or
fisttpl
add
or
push
repz
pop
es
push
sbb
cmp
mov
ljmp
jnp
mov
sbb
loope
in
out
sbb
jo
mov
jg
pop
loope
xlat
mov
imul
lods
jge
in
lcall
sub
adc
mov
stos
movsb
sahf
stos
fmulp
jno
mov
fwait
addps
test
xor
xor
jle
lea
test
xlat
ljmp
jge
leave
cs
dec
xchg
out
cltd
rolb
jbe
stc
pop
mov
mov
sbb
mov
jns
int
lcall
pop
sbb
lret
fwait
jno
sbb
cmp
push
mov
test
loopne
adc
pop
sbb
mov
mov
inc
push
sbb
xor
sub
imul
mov
repnz
dec
call
lock
nop
movlhps
push
popa
pop
inc
mov
fwait
rcr
jg
lea
jne
xchg
sub
jge
lock
jl
xor
pop
andl
test
push
cmp
mov
mov
add
mov
popa
mov
adc
dec
pop
pop
sub
hlt
outsl
mov
cmp
push
xlat
mov
ja
xchg
xor
fstps
fists
insb
popa
out
or
xor
pushf
mov
jl
sbb
in
jmp
out
jg
out
sahf
fldl
test
adc
gs
or
jb
xor
insb
arpl
inc
insl
mov
outsl
insb
fmuls
clc
arpl
or
lret
fiaddl
aad
dec
cli
sub
aaa
fs
insl
mov
les
lahf
pop
leave
shlb
and
jns
mov
jl
sub
call
repz
adc
out
icebp
enter
rorw
repnz
shr
stos
adc
inc
sub
shrl
ficompl
addl
xor
and
cmc
dec
into
pop
addl
or
add
daa
mov
push
je
mov
imul
mov
mov
imul
add
adc
xchg
popa
sub
movsb
xchg
cmp
lock
jns
pop
adc
xchg
mov
daa
xchg
inc
jo
out
out
ljmp
xor
aam
adc
mov
add
xor
aad
test
pushf
xchg
mov
mov
cltd
push
and
out
push
and
cmp
jg
bound
jle
nop
mov
inc
es
daa
mov
leave
cltd
aam
and
cmp
push
inc
negb
mov
cwtl
cmpsl
xchg
inc
imul
sbb
mov
int
std
jp
or
cmp
ljmp
or
dec
fstpl
push
jp
or
cmp
ljmp
or
dec
fstpl
push
jnp
or
cmp
ljmp
or
mov
movsl
addr16
lcall
ret
lods
fwait
mov
jge
or
jecxz
mov
or
insb
jecxz
rorl
cmp
pushf
jae
arpl
push
int3
inc
test
and
sbb
push
xchg
dec
ret
pop
jmp
xchg
lds
aam
mov
iret
pop
cmc
jne
imul
ds
jb
add
push
jmp
es
xor
jno
or
pop
sub
and
sub
pushf
vmread
and
rcrl
insb
pop
push
and
dec
movsb
arpl
xor
adc
adc
daa
jnp
repz
cmp
data16
or
outsb
lds
dec
pushf
sbb
pop
inc
outsb
jae
iret
jb
pushf
in
push
mov
lock
jl
jle
loope
mov
dec
mov
fiadds
jae
call
pop
les
mov
shl
ret
insb
hlt
andb
pop
mov
mov
and
in
je
push
data16
pop
int
mov
pop
push
xchg
repz
inc
jecxz
xchg
dec
rcrl
mov
outsl
pushf
jae
daa
cld
push
int3
sti
lds
xor
adc
std
rcll
pop
inc
lods
push
into
push
jmp
push
popf
inc
mov
loop
ret
or
jns
or
xor
lds
repz
add
mov
pop
imulb
push
sbbb
cmpsb
sub
mov
fbld
push
int3
inc
fdivl
or
sbb
insb
jecxz
rorl
xor
pushf
jae
arpl
push
int3
inc
fdivl
or
sbb
insb
jecxz
rorl
xor
sahf
aas
addr16
xor
daa
ret
lock
shlb
mov
arpl
xchg
repnz
pushf
aad
push
sbb
lods
into
addl
sub
test
shll
lret
cmp
adc
sbb
jae
in
pop
sbb
xor
cmpsb
xchg
ss
movsb
stc
inc
jl
or
lret
popf
popa
xchg
inc
cli
inc
leave
ret
mov
push
adc
inc
cld
fisubrl
inc
xorl
add
hlt
push
mov
jmp
jecxz
mov
adc
pop
fbld
adc
dec
ret
cli
lret
flds
and
outsl
sbb
mov
jl
insb
leave
adc
add
mov
jne
ja
arpl
sar
lods
inc
in
ja
cmp
cli
mov
mov
into
call
dec
ret
xchg
mov
mov
and
outsl
popa
rep
jae
mov
mov
inc
push
aad
aad
in
push
or
and
xor
add
aam
into
push
push
scas
mov
movsb
add
mov
cld
in
xor
insl
cmp
cli
rcl
add
xchg
mov
mov
push
outsl
and
xchg
les
pop
add
inc
subb
rcl
cs
jns
jo
mov
ret
dec
cmc
out
cmp
xchg
cli
insl
std
mov
mov
mov
call
push
cmp
pusha
out
out
mov
mov
sbb
xchg
inc
int
mov
mov
enter
sub
jp
dec
ljmp
inc
cltd
add
push
pop
cmp
cmpl
call
and
pop
and
mov
arpl
iret
daa
rcrb
inc
xor
mov
xchg
jl
dec
bswap
xor
test
dec
add
cld
test
jno
test
inc
scas
xchg
pop
cmp
dec
pop
fucomi
xor
sub
lea
enter
dec
mov
addr16
xchg
add
push
popa
fisubrl
or
sahf
cwtl
and
mov
ljmp
jg
sbb
add
mov
hlt
xchg
jmp
xchg
scas
push
ljmp
sbb
sub
sub
sti
jae
ljmp
xor
repz
sbb
rorl
mov
inc
les
imul
xchg
sub
imul
cltd
addr16
sbb
adc
xchg
jmp
mov
xlat
into
ja
scas
fldcw
lret
jmp
cli
shrb
pop
mov
jb
or
bnd
call
nop
xlat
jle
sub
scas
jecxz
les
ret
mov
jl
pop
call
sbb
outsl
popa
xchg
shrl
mov
push
test
adc
scas
inc
loope
daa
sahf
test
pop
leave
test
addl
enter
fcomps
xor
jns
dec
mov
in
mov
xchg
sbb
adc
or
dec
test
leave
loope
fadds
add
xor
push
out
inc
inc
iret
jle
push
insl
cmpsl
jns
jmp
xor
dec
push
push
mov
push
arpl
and
adc
outsb
xor
pop
mov
mov
fwait
sbb
adc
inc
inc
adc
and
and
out
fiadds
pop
out
xor
dec
lds
or
les
xchg
cld
sub
mov
mov
xor
cmp
mov
xchg
popa
pop
cmp
or
roll
cmp
arpl
stos
ret
ret
das
jmp
fcmovu
or
xor
insl
dec
lods
es
sbb
je
std
iret
push
push
aam
dec
pop
jecxz
cmp
fcom
mov
xchg
pusha
fcmovu
mov
aad
mov
jbe
leave
push
les
cmpsl
xor
and
push
mov
in
test
sahf
outsb
cmp
ljmp
mov
and
jb
imul
lods
sahf
lea
outsb
popf
add
and
iret
mov
js
pmullw
dec
fsubrl
pushf
or
dec
out
cltd
mov
cmp
aam
repnz
fists
lods
cmp
or
or
ja
sub
rol
lret
add
lcall
xor
movsb
das
test
and
sti
jge
out
outsb
aam
sbb
xchg
push
sub
cltd
arpl
mov
cmp
jo
popa
inc
mov
push
mov
and
bound
jno
sbb
push
out
or
jmp
mov
and
and
pcmpgtw
sahf
iret
push
iret
add
and
inc
push
ja
loopne
sbb
loop
sub
xor
jecxz
xchg
jp
adc
fwait
sahf
hlt
orl
cmp
or
fcompl
stos
or
jb
mov
mov
cmpsb
jne
pop
repz
push
sub
lock
and
adc
loop
jns
dec
mov
dec
loope
pushf
fsubl
test
push
push
and
inc
push
call
ss
daa
cmp
mov
fcompl
dec
ja
test
or
mov
dec
dec
repnz
xchg
mov
jae
add
cmp
xlat
movsl
clc
imulb
pop
pop
push
movl
dec
or
mov
push
add
dec
add
sbb
jne
jmp
das
int3
push
push
aam
stc
and
out
inc
mov
cmp
cmc
lock
scas
add
add
sahf
sbb
pop
fistl
inc
sbb
std
imul
add
aaa
jns
mov
fidivl
jmp
clc
shrl
push
inc
mov
sub
call
repz
sarl
and
aad
push
mov
inc
and
mov
add
and
xlat
rol
jge
sbb
push
in
test
aam
sarb
mov
popf
dec
call
int
adc
jecxz
add
mov
ds
jnp
push
jg
mov
mov
cmp
aam
repz
cmp
in
sbb
fisubs
dec
sbb
sub
mov
maxps
mov
dec
and
xchg
mov
popa
pop
cld
ret
leave
cltd
mov
outsl
adc
rcrl
push
fstl
dec
cwtl
mov
push
cs
dec
aam
lcall
push
pop
out
sti
popa
mov
dec
or
hlt
and
lcall
adc
lcall
fistpll
in
xor
scas
xchg
outsb
clc
fsts
dec
jg
repz
adc
aam
fwait
cltd
inc
iret
pop
inc
cmp
imull
inc
xchg
sbb
out
fbstp
lahf
pop
pop
lret
repz
inc
arpl
cltd
stos
adc
and
cmp
in
loop
xor
inc
mov
mov
repz
imul
xor
ret
add
popf
xchg
dec
mov
outsl
int3
sub
pop
jmp
push
cmc
adc
adc
jecxz
xchg
xchg
pop
addr16
and
sub
push
stc
in
aad
pop
in
ror
jnp
loop
rclb
add
mov
or
pop
fwait
dec
mov
and
and
jg
test
fldlg2
movsl
mov
pop
rorl
sub
add
ljmp
add
ds
pop
add
out
cmp
pop
je
jg
mov
fistps
cltd
movsb
outsl
pushf
lret
adc
shlb
fsubrs
popa
mov
call
mov
mov
dec
flds
js
out
leave
xchg
dec
jmp
es
push
pop
out
lcall
mov
cmp
enter
jl
pop
sub
xchg
fidivrl
sahf
fsubrl
mov
lock
sarl
int3
enter
loop,pt
pop
sbb
movsl
fnstcw
lods
sbb
ss
jmp
mov
movsb
cld
sbb
mov
dec
lcall
push
ja
xor
fldt
repnz
push
mov
cmp
test
jno
jp
xchg
add
outsl
test
push
fistpl
pmaxsw
and
movsl
cmp
lret
setns
sahf
or
inc
ficoml
cmp
les
mov
loop
dec
mov
pop
sbb
cmp
adc
dec
pop
lods
sub
cmp
pop
or
ret
pop
mov
imul
inc
hlt
les
jne
in
testb
mov
sbb
jb
dec
andl
mov
mov
into
pop
mov
inc
jmp
jmp
add
xorb
addr16
dec
neg
out
push
leave
je
push
mov
xlat
dec
test
mov
sub
mov
xchg
xor
push
ljmp
xor
je
add
jne
xor
sbb
mov
arpl
or
xchg
lock
xor
loopne
pop
mov
mov
and
adc
dec
jl
negl
hlt
pushw
and
pop
incb
add
dec
inc
push
in
ret
or
push
lock
push
inc
sbb
stos
inc
xchg
pusha
pop
jle
out
lock
add
mov
mov
jmp
movsb
int
fsubs
mov
mov
aam
adc
mov
in
xchg
in
and
aaa
aas
sbb
mov
sbb
arpl
xor
adc
sbb
ret
adc
outsb
icebp
xor
ret
scas
dec
lcall
or
test
pushf
inc
pushf
xchg
into
test
icebp
cmp
lods
stos
dec
push
ret
sbb
or
scas
rcrl
test
arpl
mov
jle
idivb
mov
cmc
call
in
inc
gs
cmp
lock
shll
ja
js,pn
mov
and
jbe
xor
add
mov
pusha
pop
push
cmpsb
xchg
cli
inc
notb
andl
fidivrs
dec
add
sub
lds
fildll
sub
dec
sub
lea
mov
or
enter
out
loop
movsb
pop
push
shll
movsb
jo
cli
cmp
jg
aad
fildl
or
enter
lahf
mov
or
movsl
xchg
add
fs
mov
inc
or
fstpt
xlat
fistps
mov
cmp
rolb
loope
aad
xchg
add
std
cmpsl
orb
cld
inc
imul
in
lods
xchg
xor
test
subb
or
jnp
out
jmp
ss
mov
iret
push
xchg
and
sti
movb
fdivr
and
ja
rcll
and
adc
into
cmp
jecxz
adc
ljmp
lods
jge
inc
adc
popw
in
sbb
mov
fidivrl
xor
fldl
loop
stos
std
adc
xchg
fbld
pushf
lods
es
mov
gs
imull
push
sub
push
popf
ret
or
add
mov
cltd
rcll
mov
xchg
testb
imul
dec
dec
cwtl
sbb
adc
loop
xchg
ret
xchg
hlt
lds
cmp
mov
push
sub
cmp
and
cld
mov
xor
stc
lcall
xor
mov
add
mov
fisubrs
fldl
xchg
mov
push
mov
xor
aam
adc
loop
pop
mov
loope
popa
repnz
cmp
pop
mov
mov
subl
movsl
pop
gs
fcomps
loope
movsb
jns
or
aaa
decb
push
push
ds
pop
in
mov
mov
sbb
mov
push
shl
lock
je
adc
mov
orb
das
add
push
mov
inc
and
imul
sbb
jno
es
imul
mov
push
arpl
jl
mov
xchg
movsl
imul
popf
mov
jle
xor
sbb
addr16
and
insb
lock
je
cmpsb
xor
jmp
test
sbb
ret
and
iret
fidivrl
out
jb
mov
enter
pop
popl
jmp
test
out
xor
sub
scas
mov
dec
add
pop
adc
cmp
or
lahf
scas
jle
test
mov
jge
shlb
jno
iret
js
sbb
or
xor
xchg
and
adc
cmpsl
sub
sbb
sub
mov
add
cmp
shrl
and
lock
daa
jg
or
dec
mov
in
xor
aaa
or
pop
xchg
lods
mov
sbb
inc
xchg
call
outsl
jbe
cmp
ret
arpl
repz
and
cmpsl
mov
or
lds
pusha
jp
ret
into
scas
das
cltd
lret
rcll
cs
movsb
lcall
imul
jno
sub
mov
adc
f2xm1
lcall
inc
sbb
push
movsl
vmovsd
push
sbbb
shlb
sbb
jecxz
inc
test
js
rcr
adc
add
test
mov
aam
scas
cmp
lods
xor
jb
xor
popf
enter
jmp
cli
and
mov
mov
inc
movsb
and
xchg
daa
stc
sub
mov
mov
stc
xor
daa
xor
outsb
add
lock
mov
dec
fimull
scas
hlt
out
add
roll
xchg
mov
or
arpl
aam
dec
mov
adc
lods
sbb
gs
in
test
or
int
cmp
clc
inc
dec
mov
bound
addb
sub
jl
cmp
adcl
icebp
xor
fwait
pushf
cltd
and
aaa
sahf
sbb
outsl
mov
into
and
xchg
gs
jge
out
imul
mov
fcoml
ds
pop
adcl
imul
ja
repnz
sub
pushf
jns
lahf
hlt
test
popa
jae
adc
adc
pop
push
in
outsb
fmuls
push
add
cmc
in
in
push
dec
popf
incl
cmp
sbb
nop
inc
fcompl
icebp
rclb
dec
popf
scas
lret
scas
dec
or
xchg
cmpsl
sub
ret
add
lods
xchg
sub
loopne
pushw
xchg
pop
pop
int3
jmp
mov
mov
stos
fiadds
jg
insl
test
lods
out
xor
pop
ds
aam
jb
xchg
cs
into
and
mov
iret
and
jmp
and
xchg
stos
and
stc
arpl
jb
fdivr
dec
loopne
mov
clc
cs
and
outsb
ficoml
shrl
dec
and
xor
and
and
bound
cld
add
mov
fwait
pop
popf
sbbl
dec
aas
xlat
dec
in
cmp
sbb
icebp
ja
repz
add
inc
int3
mov
jge
mov
mov
xlat
push
ret
daa
shll
or
mov
in
adc
sahf
xor
mov
or
push
push
or
mov
fiaddl
sbb
jmp
test
mov
push
or
sub
jl
or
cmpsb
cmc
jp
testl
fdivl
aad
fld
scas
pop
cmp
or
outsl
in
adc
push
cmp
in
jle
mov
mov
push
in
call
cmp
mov
hlt
inc
outsl
repnz
pop
call
shl
jbe
std
rclb
ficoml
sub
cmp
addr16
ret
push
xchg
mov
push
adc
sbb
ficomps
sbb
or
lret
sahf
ret
cli
and
adc
loopne
jg
pusha
lods
and
pop
insb
or
shll
fs
mov
lds
rcll
jg
adc
fmuls
push
movl
push
jecxz
inc
fstpl
loop
mov
scas
enter
inc
mov
push
inc
flds
dec
jns
das
fdivrl
mov
pop
xchg
testl
pop
fidivrs
out
adc
inc
mov
push
int
mov
imul
lock
xchg
cmpsb
mul
in
iret
scas
xchg
xor
mov
pop
sbb
mov
inc
mov
pop
icebp
mov
mov
jns
andl
dec
cmp
subl
test
mov
and
dec
lods
mov
in
mov
les
js
dec
jp
cmc
mov
int
loopne
mulb
in
adc
cltd
mov
pop
xor
push
cmc
xchg
je
divl
push
or
adc
cmp
push
lea
push
fs
hlt
or
loopne
cmp
mov
lahf
scas
and
xchg
arpl
xchg
push
cmp
lea
iret
js
add
aas
call
out
lock
cmp
jno
movsl
cld
or
xor
mov
xchg
in
sti
adc
icebp
mov
sbb
xchg
push
sub
fwait
or
mov
scas
ja
mov
xor
mov
and
ret
adc
or
imul
cli
popf
loop
dec
orb
adc
xor
mull
xchg
roll
mov
pop
add
es
aam
push
arpl
push
scas
sbb
and
dec
leave
repnz
cwtl
mov
dec
pop
push
xchg
and
fidivl
sub
fcmovnu
inc
xchg
push
ret
imul
dec
sahf
fcmovne
or
mov
xchg
jbe
cs
jnp
sub
fldt
adc
lahf
loopne
loope
sub
mov
std
mov
cmpsl
mov
repz
cmc
pop
fcmovnbe
arpl
ss
push
sub
std
adc
inc
shll
adc
in
jae
push
fs
or
push
jnp
adc
pusha
pop
js
xor
loope
stos
pop
jg
mull
cmp
imul
fs
pop
lods
ret
ja
pop
pop
jne
mov
shll
sbb
dec
dec
jecxz
mov
not
mov
mov
dec
jge
out
push
xlat
lcall
outsl
push
ds
mov
xor
xor
push
mov
mov
shlb
sarl
inc
mov
popf
xor
dec
xchg
mov
adc
vmovd
loop
push
lock
test
and
pop
cltd
push
ljmp
je
adc
sub
and
push
xchg
data16
fwait
inc
out
cs
ljmp
adc
push
mov
push
cmp
fwait
jo
repnz
and
sahf
ja
rcrb
out
fisttps
pop
lret
fldl2t
adc
mov
or
jo
int3
pop
sar
dec
pop
popa
push
mov
jp
sub
push
add
mov
inc
add
and
jnp
ss
cmp
scas
insb
jmp
dec
inc
push
decl
test
fwait
sub
shll
and
inc
les
cmp
pop
lea
mov
jecxz
add
or
outsl
out
jno
pop
xchg
sbb
jb
jo
cmp
mov
rcl
mov
or
cmp
call
leave
add
and
mov
push
mov
jae
pop
iret
jmp
xchg
enter
xchg
sbb
push
mov
or
aas
je
sub
in
xlat
not
stos
stos
outsb
stos
and
mov
pop
add
add
xchg
bts
lods
pushf
or
adc
and
adc
inc
push
sbb
sti
mov
xchg
xlat
push
pop
adc
inc
add
push
pop
pusha
push
cli
push
inc
jp
mov
in
pushf
mov
iret
and
repz
mov
pop
aad
jae
call
jecxz
stos
dec
sub
iret
test
addr16
rolb
popa
dec
arpl
jge
push
bound
lret
push
sbb
hlt
loopne
jae
dec
push
cmpsb
loope
mov
pushf
mov
sbb
outsl
sub
pop
and
lods
daa
xchg
sahf
cltd
leave
aam
adc
aam
xor
adc
adc
dec
cmp
pushf
pop
mov
jns
cmp
nop
sub
sbb
cld
sub
lods
lret
cmp
sub
repnz
mov
lahf
dec
mov
mov
or
mov
pop
scas
fdivrp
iret
mov
inc
mov
jo
push
jp
mov
loope
rol
subb
pop
cmp
xor
aaa
les
fs
inc
fwait
in
aaa
xorb
inc
dec
cmp
add
inc
mov
fs
movsl
push
lahf
aaa
lret
xchg
pop
lea
movsl
cmp
lahf
es
xor
aam
pop
call
stos
leave
ret
dec
jle
mov
shll
mov
test
mov
mov
pop
push
mov
ljmp
pop
test
movsl
cmpsl
je
mov
inc
lcall
cmp
ss
xor
mov
repz
pop
popf
push
push
lahf
mov
bound
add
sbb
cwtl
lods
movsb
ret
out
sbb
and
in
cmpl
aaa
fxam
mov
scas
jo
jp
or
and
ret
frstor
sbb
sub
das
and
or
andl
pop
jbe
mov
pusha
stc
insb
shll
fimull
ja
dec
loope
out
pop
into
mov
cwtl
mov
pop
push
dec
lds
ja
pop
cmp
jne
add
jno
scas
cmpsb
adc
roll
sbb
in
arpl
push
int3
inc
fdivl
or
sbb
insb
jecxz
rorl
xor
pushf
jae
arpl
push
int3
inc
fdivl
or
sbb
insb
jecxz
rorl
xor
pushf
jb
addr16
push
int3
inc
fdivl
or
sbb
insb
cli
jl
dec
repz
sub
sub
int3
ret
sbb
sub
xchg
cmp
imul
and
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xor
adc
inc
mov
mov
add
add
xchg
sub
cmp
int
int
xchg
add
add
scas
add
add
aas
add
add
add
xchg
add
add
roll
sbb
ret
add
add
add
lods
add
or
pop
add
add
and
add
aam
lods
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
jo
inc
add
add
add
mov
add
add
inc
add
scas
add
add
add
lods
add
add
add
add
add
dec
add
push
add
add
add
xchg
add
testb
add
add
add
add
add
bound
xchg
add
lods
add
add
add
add
add
or
lret
add
add
add
or
xor
mov
add
add
add
lods
add
lahf
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
dec
add
add
add
add
xchg
add
add
jge
verw
jecxz
je
aad
cmp
add
add
add
mov
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
lret
add
add
lods
add
in
add
add
xor
add
add
add
add
add
add
add
add
out
add
xchg
add
add
or
jl
add
or
adc
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
lahf
add
push
add
add
or
das
add
daa
add
add
cmp
mov
add
add
add
add
add
add
add
add
add
lea
or
test
dec
add
add
add
dec
add
add
add
stos
add
add
add
add
mov
data16
add
add
sti
jle
cmovno
call
mov
icebp
sub
lods
mov
cmp
scas
xchg
add
sar
in
sbb
sbb
sub
dec
faddl
lret
sub
cmpsb
xor
or
push
adc
xchg
andl
test
in
add
dec
cmp
into
outsb
pop
shlb
insl
es
ret
sub
mov
es
cmpsb
mov
fldenv
lock
rorl
and
xchg
inc
dec
xchg
negb
int
testb
jmpw
push
imul
or
inc
or
loopne
cmp
cli
jmp
bound
xor
rorb
mov
pop
hlt
sbb
rclb
jecxz
aaa
and
sub
ds
dec
mov
mov
mov
fcoms
pop
mov
addr16
push
xchg
mulb
adc
sbb
sub
inc
sbb
pop
sbb
dec
adc
add
enter
jae
fdivp
adc
lcall
arpl
iret
jecxz
mov
fisubl
sub
test
xchg
cmp
stos
test
enter
ds
push
sub
and
xor
mov
push
add
xchg
cwtl
jecxz
inc
les
stc
in
cmpsl
ror
out
insl
dec
sti
pop
mov
or
and
mov
jbe
scas
in
jbe
enter
cmp
dec
stos
push
adc
nop
shl
out
and
mov
repnz
in
mov
add
xchg
in
je
shll
add
sbb
test
negb
lock
inc
xchg
out
frstor
xchg
mov
jb
cld
lcall
popa
push
cmc
xor
movb
dec
inc
jmp
rclb
jnp
in
and
jle
mov
ljmp
jge
or
sbb
jno
mov
outsb
inc
dec
mov
mov
pop
and
add
sub
inc
mov
xor
mov
xchg
lock
push
sub
pop
xor
or
pushf
ljmp
jns
sbb
mov
pop
jecxz
loop
and
movl
xor
lods
lahf
aad
into
loop
inc
cmp
icebp
xor
mov
repz
mov
into
aas
cltd
scas
sbb
mov
inc
movsl
dec
call
add
mov
xchg
dec
cmpsb
inc
lret
leave
jg
push
xor
mov
rorl
mov
mov
pop
sbb
mov
cld
xor
jle
fiadds
pop
or
pushf
out
xor
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
