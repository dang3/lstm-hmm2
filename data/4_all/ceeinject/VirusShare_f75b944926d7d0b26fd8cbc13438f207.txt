call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
push
mov
mov
cltd
jmp
loop
das
sub
pop
or
cmp
jp
dec
addps
test
mov
mov
enter
sub
jno
dec
sbb
pop
dec
js
or
pop
and
and
lcall
ja
jg
add
push
imul
jae
push
test
fwait
std
mov
jae
aam
add
adcb
pop
in
push
pop
or
mov
and
jmp
or
mov
imul
mov
aaa
mov
mov
aas
movsl
nop
mov
rorb
in
mov
mov
cwtl
lcall
xor
push
mov
sub
or
adc
fisttpl
sbb
fcmovnb
fdivrs
iret
dec
sbb
cmp
jns
pop
jp
jp
out
add
xor
jbe
xchg
xchg
push
pop
testl
pop
dec
pop
fmul
test
dec
fisttps
xchg
mov
adc
pop
lea
push
push
pop
inc
xor
cli
cltd
mov
rcrl
mov
jno,pn
pop
inc
or
or
in
addr16
cwtl
jmp
into
lret
repz
cld
mov
dec
outsb
cmp
jg
cmp
push
dec
xor
fmuls
clc
lahf
enter
sub
pop
or
aas
push
addps
test
mov
mov
enter
sub
pop
or
aas
push
addps
test
outsl
ja
nop
mov
jno
xchg
jmp
cmp
ficoms
outsb
nop
mov
or
xor
sti
ds
jmp
pop
cmp
jmp
add
lds
stos
repnz
or
pusha
outsl
xchg
andb
jmp
mov
je
mov
fwait
out
icebp
out
loope
sbb
mov
or
shlb
jbe
sbb
mov
mov
sarl
fbld
add
pop
xchg
jo
mov
test
jb
adc
std
leave
aad
jno
mov
jne
aas
mov
out
sub
push
jmp
or
xchg
inc
out
jg
dec
out
repnz
cmc
rolb
in
adcb
mov
inc
int3
out
inc
mov
or
mov
pop
pop
test
dec
sub
jbe
push
lea
loop
test
mov
loop
cmp
cmpsb
mov
jb
dec
shrl
dec
out
and
imul
rcll
sbb
std
mov
mov
fwait
push
and
in
ja
mov
test
sarl
les
out
dec
fisttpl
sub
addr16
push
movsl
stos
les
cmp
pop
xor
sub
sbb
ljmp
mov
test
dec
icebp
cli
sub
insl
pop
dec
xor
pmaddwd
outsb
leave
push
lcall
scas
aad
loopne
das
mov
fimuls
test
mov
mov
sbb
dec
mov
mov
pop
dec
daa
push
leave
out
dec
ljmp
cli
mov
or
jp
sbb
ss
push
mov
dec
scas
fstps
addr16
push
mov
xchg
faddl
or
movsl
xchg
andb
std
sbb
ljmp
push
into
mov
sbb
jo
push
push
pop
mov
dec
inc
imul
push
mov
es
fildl
popf
repnz
out
pop
mov
into
dec
rcll
jp
stc
arpl
mov
out
cmc
mov
aam
lds
xchg
cwtl
adc
cld
ficompl
jge
inc
test
lods
xor
jmp
inc
dec
sub
jp
dec
push
mov
loop
pushf
or
fldt
fildl
lock
jo
sbb
mov
and
adc
and
loope
pop
pop
and
dec
int
lahf
fwait
mov
adc
and
mov
adc
cmp
and
mov
mov
lea
in
dec
add
daa
and
das
jns
lock
cli
mulb
mov
push
fucom
jbe
repz
inc
push
mov
mov
les
add
jo
fsubr
ja
adc
xchg
mov
push
cmp
test
test
sbb
clc
cmp
sbb
test
lcall
repz
and
mov
jno
jg
fisubl
push
into
pop
fwait
testl
xchg
and
loope
int3
fsubr
push
push
xchg
add
xchg
imul
mov
stos
sbb
leave
xor
pop
or
sti
in
leave
ret
js
mov
stc
lock
out
ret
popa
sarb
stos
subl
xor
pop
inc
mov
adc
cmp
inc
jmp
adc
mov
xchg
mov
arpl
jae
push
cmp
xlat
sub
sbb
repz
int3
dec
xlat
jne
out
jb
or
mov
mov
in
or
in
sub
sbb
sbb
ret
xchg
nop
test
pushf
andl
add
int3
and
testb
xchg
xchg
lret
negb
jb
sbb
nop
adc
jb
cli
lahf
jo
mov
icebp
xchg
int
in
imul
and
std
jp
data16
push
inc
jmp
adc
mov
push
movsb
ret
xor
jno
enter
mov
pop
std
push
or
mov
xchg
lods
test
xchg
mov
mov
push
or
idivl
loopne
pop
shll
scas
inc
and
xchg
inc
sahf
xchg
scas
jnp
pop
cmp
mov
js
sub
repnz
mov
faddl
push
faddl
jge
outsl
xor
pop
out
nop
andl
out
mov
or
mov
icebp
hlt
mov
cwtl
stos
inc
xchg
rorb
cmp
cmp
adc
inc
adc
lcall
and
inc
sbb
add
repz
cmp
cmpsl
and
jbe
mov
xchg
push
adc
pop
jmp
lock
dec
add
lahf
sbb
mov
and
xlat
xor
lcall
or
fs
pop
push
imul
xlat
jg
std
sub
jno
push
fidivs
mov
xor
pusha
mov
movsb
jle
rorb
cwtl
loope
out
jmp
lret
repnz
add
test
lods
mov
sbb
loope
sbb
push
mov
or
lret
xor
adcb
ljmp
pop
js
cmpsl
add
mov
mov
add
mov
pop
je
inc
jl
pop
movsl
sbb
data16
push
adc
sbb
test
fadd
outsl
xchg
stos
out
push
push
mov
out
or
or
xlat
add
stos
rcrb
fidivrl
testb
fimull
nop
leave
fdivr
inc
adc
decb
in
daa
das
dec
mov
mov
es
scas
loop
xchg
mov
arpl
xchg
add
mov
sub
xor
xorb
xor
xchg
push
loope
and
and
lods
adc
xchg
lahf
je
je
mov
adc
mov
stos
xchg
in
dec
enter
lods
mov
lds
addr16
or
test
add
cmpsb
insb
xor
pop
insl
xor
js
mov
sbb
inc
xchg
lcall
out
inc
mov
pop
pop
jbe
aad
sub
add
aas
push
mov
lcall
ret
int3
adc
adc
lahf
nop
aam
ds
loope
xchg
mov
or
pop
dec
mov
adc
sbb
xchg
out
std
cmp
movups
cmp
lods
inc
pop
je
pop
mov
cmpl
push
adc
aad
jnp
gs
sbb
in
rol
mov
push
int
mov
data16
mov
xchg
ret
nop
mov
add
mov
stc
fimuls
dec
inc
sbb
data16
add
shll
add
int3
jecxz
jl
cmp
stos
hlt
movsb
aam
lods
jne
repnz
cmpsl
adc
jmp
xor
add
cmovo
addb
scas
in
sbb
frstor
push
and
adc
mov
mov
pop
int
push
addr16
or
out
sub
sbb
arpl
cwtl
inc
or
call
inc
repnz
shl
stc
adc
movsl
insl
add
jns,pn
jg
inc
lock
arpl
inc
sbb
xchg
movsb
jmp
jp
fstl
inc
xchg
sbb
xor
mov
pusha
or
xor
inc
into
scas
xor
adc
cmp
out
cmc
sbb
sti
je
idivb
testb
dec
xor
push
dec
test
mov
frstor
test
mov
rcll
cs
out
mov
sub
mov
or
xor
sbb
mov
push
pop
cmp
inc
fistps
inc
inc
mov
dec
in
iret
mov
inc
pop
xor
push
dec
pop
or
sbb
pop
hlt
dec
push
lock
daa
loop
ja
cli
jo
jbe
dec
inc
cmp
test
cli
jns
orl
xchg
mov
test
mov
fwait
mov
xor
outsl
fnstsw
es
sub
mov
pop
push
push
insb
dec
xchg
sub
in
inc
fsubrl
mov
xchg
jo
push
in
ret
ss
xchg
sub
cwtl
xchg
xchg
dec
iret
cmp
cmpsb
je
testl
pushf
pushf
xor
lahf
inc
je
xor
jecxz
and
int
dec
fwait
mov
push
sbb
or
aaa
int3
sbb
sub
inc
cs
hlt
lea
push
adc
imul
or
xor
sbb
xchg
data16
sub
mov
dec
std
fwait
xchg
jb
aaa
add
push
mov
cli
push
es
enter
push
loopne
loope
add
jns
add
jmp
mov
stc
jno
loope
sbb
lods
adc
add
xchg
add
or
shlb
cld
xchg
mov
cmovg
std
add
shll
cltd
cmp
cmp
adc
xor
jmp
es
gs
pop
xor
and
outsl
mov
in
xor
out
test
jg
or
push
jb
pop
sub
sbb
testb
scas
and
cmpl
mov
roll
daa
or
jo
mov
pop
les
add
iret
sub
leave
push
aas
jns
and
mov
dec
scas
lret
sub
jns
pop
jnp
inc
mov
sbb
or
and
loop
mov
lcall
test
sahf
cmp
iret
repz
inc
dec
iret
insl
pop
jmp
out
std
mov
mov
xor
cld
push
into
mov
scas
push
xor
or
push
dec
dec
movsb
int
cs
mov
adc
jns,pn
mov
or
add
sub
dec
add
call
inc
pop
inc
loop
add
inc
lods
pop
int3
xor
pop
inc
imul
xchg
fucomi
add
std
int3
add
lods
movsb
aad
push
mov
lds
fisubrl
nop
xchg
mov
sahf
mov
cmp
mov
jae
packssdw
sahf
mov
je
or
xor
inc
push
in
fwait
repnz
push
orl
mov
test
ret
dec
sub
dec
add
push
lods
imul
call
mov
xchg
popf
std
mov
cmp
cmp
add
jae
adc
fadd
pop
enter
jnp
push
arpl
mov
lret
xchg
mov
pop
dec
xchg
stc
or
lods
call
cmpl
rcl
lret
inc
adc
cwtl
dec
adc
shlb
mov
adc
inc
mov
pop
mov
xchg
adc
and
xchg
stc
fincstp
mov
adc
inc
roll
add
mov
or
cmp
popf
daa
nop
rolb
sahf
push
js
shrl
adc
dec
cmp
dec
mov
or
jns
adc
mov
jnp
mov
dec
movsb
insb
or
insl
iret
xor
sub
shlb
aam
and
pop
and
leave
inc
aaa
xor
aam
pop
popa
xor
xor
inc
in
adc
dec
or
and
out
sbb
inc
data16
hlt
jmp
dec
push
and
shlb
inc
or
mov
insl
xchg
pop
cli
mov
dec
movsb
mov
popa
xor
xchg
pop
insb
fst
mov
lock
int3
or
lods
addb
fnstsw
outsl
inc
fs
lret
insb
sbb
add
aas
cli
fbstp
les
insl
nop
test
mov
data16
sar
mov
adc
jecxz
jle
sbb
sbb
je
sub
out
loop
jecxz
sbb
dec
jmp
mov
xor
add
or
adc
push
popa
sub
test
ds
xchg
sbb
and
cs
mov
inc
mov
sub
jns
cmc
sub
arpl
push
cmp
test
cli
fwait
mov
imul
lods
push
dec
daa
pop
cmp
repz
jp
jge
andl
push
aad
out
pop
push
mov
xchg
cmpsb
and
xor
sub
mov
movsb
inc
pop
cs
jae
sub
out
popa
lds
pop
cltd
sub
insl
mov
xchg
aas
sbb
fs
test
lcall
test
xchg
mov
jecxz
pop
fisubrs
mov
cmpb
adc
push
xchg
or
cld
push
arpl
insl
pop
push
js
jae
divb
xchg
dec
pop
cmp
push
and
or
mov
stos
and
or
jge
cmpsl
adc
test
fcomi
inc
mulw
aad
mov
mov
ja
arpl
cmp
inc
pop
mov
pushf
cmp
mov
xchg
jl
xor
xchg
daa
push
jge
xlat
fistpl
aas
sbb
mov
mov
cmp
hlt
icebp
inc
sub
or
dec
lds
scas
mov
xor
xchg
add
rorl
ss
js
lahf
sti
test
decb
push
mov
pop
clc
shlb
in
push
iret
fistps
lea
push
xor
fisttps
loop
mov
push
ljmp
test
mov
pop
xchg
insl
popf
xchg
jb
test
inc
xor
or
insl
inc
cmp
pop
inc
or
sahf
arpl
out
aad
sbb
inc
std
in
es
in
rcrb
mov
jge
sbb
mov
or
aaa
mov
repnz
fsubrl
xlat
pushf
mov
sbb
adc
sti
pop
mov
test
jecxz
dec
pop
repz
dec
or
aad
mov
ret
dec
inc
jg
push
in
mov
inc
jmp
xchg
xbegin
add
les
stos
pop
push
fldl
add
mov
in
bound
mov
push
imul
xor
lret
or
clc
sbb
push
cmc
pop
les
xchg
or
loope
inc
pop
ljmp
sbb
mov
jmp
stc
data16
std
fwait
insb
clc
mov
lahf
jge
inc
cltd
adc
pop
mov
jbe
rorl
hlt
xor
lret
jns
addr16
out
inc
ja
lret
pop
ret
push
add
jne
stos
lret
and
cltd
loop
aaa
cs
dec
xor
daa
les
decl
xor
push
and
out
push
sbb
or
jl
rcrl
mov
jmp
in
and
fsubr
arpl
jbe
cli
icebp
aas
or
mov
jne
flds
add
addr16
pop
cld
icebp
test
insb
xchg
mov
push
popl
sub
sub
mov
jb
fisttpll
sbb
out
xor
add
push
add
sahf
scas
popa
add
pop
mov
mov
xchg
sar
pop
mov
adc
adc
ret
adc
addl
sub
test
imul
mov
stos
mov
gs
jg
arpl
mov
aad
pop
mov
mov
out
outsl
mov
mov
imul
inc
dec
mov
pop
mov
jge
imul
jp
adc
stc
sahf
gs
jge
bound
and
testl
adc
ljmp
pop
xor
or
leave
into
sub
adc
nop
or
push
push
lahf
mov
adc
cmc
lock
mov
test
std
ss
xchg
popa
fldenv
lods
rcll
mov
pop
jnp
int3
xchg
push
sbb
lcall
jne
dec
data16
shlb
roll
mov
loop
inc
sbb
aad
fcmovnu
xor
push
add
icebp
sbb
insb
push
fisubrl
stos
subl
and
aad
pop
test
jg
sbb
or
sarb
mov
jmpw
jmp
nop
mov
cmp
sarl
fsubrs
ja
mov
outsb
sub
mov
rolb
cld
adc
cmp
js
dec
fwait
in
cmp
inc
mov
pop
cmp
xchg
jp
push
mov
gs
mov
adc
hlt
out
or
rolb
test
xchg
lret
or
dec
cmp
dec
push
decb
nop
repz
inc
out
cwtl
nop
xchg
cwtl
sti
adc
xchg
pushl
pop
int3
in
inc
mov
insl
mov
add
stos
or
ss
xlat
jno
outsl
stos
sub
pop
into
pop
ja
inc
sbb
dec
insl
jo
mov
xor
insb
xor
jo
je
mov
ret
cmp
out
dec
js
pop
inc
jae
loopne
andb
dec
or
mov
mov
inc
insl
fidivrl
inc
mov
sub
aas
add
dec
mov
push
sub
mov
lds
xor
push
jle
cltd
jmp
adc
jns
iret
cmp
shrb
inc
mov
nop
xchg
pop
aas
cmc
test
lea
test
pop
jb
lods
idivl
test
mov
or
mov
jp
negl
xor
call
inc
out
repnz
add
push
mov
jns
ds
xchg
mov
data16
leave
cwtl
push
es
dec
negb
xchg
and
push
jne
mov
fsts
js
and
ljmp
mov
inc
bound
hlt
jmp
inc
adc
xor
xor
gs
mov
sbb
daa
and
out
pop
xor
xor
push
xchg
mov
dec
jbe
aas
xchg
mov
push
imulb
in
lcall
mov
inc
out
test
pusha
in
mov
jecxz
push
xchg
sbb
sbbb
jmp
lods
adc
ds
jo
sbb
dec
xchg
push
mov
cwtl
sete
mov
add
sbb
mov
cmp
jecxz
cmp
in
push
lea
mov
xor
push
push
jae
or
sub
mov
sub
cmp
push
jns,pt
leave
out
mov
cmp
adcb
rcrw
shrl
dec
sbb
and
push
in
lods
lea
push
daa
adc
stc
lods
sub
stos
mov
lock
pop
cmp
push
inc
mov
imulb
add
lretw
stos
sub
xchg
push
data16
or
or
andl
jmp
add
pop
insb
xor
ret
pop
cmp
jp
ret
push
and
add
roll
fmul
in
xchg
mov
dec
cmp
outsb
mov
sub
push
mov
jecxz
sbb
adc
push
rolb
lret
mov
mov
dec
or
scas
or
sbb
mov
lea
pop
add
and
adc
adc
test
hlt
cwtl
add
or
dec
hlt
push
in
daa
jae
cmp
or
cmpsb
mov
icebp
sub
mov
pop
xor
xor
clc
imul
aad
pop
inc
in
jmp
push
and
call
mov
pop
std
sub
mov
inc
sarb
push
jbe
rcl
arpl
jae
adc
inc
lods
jmp
jecxz
cmp
or
lret
ds
pop
jns
mov
popa
jb
jnp
out
test
mov
or
jo
xor
test
mov
addr16
cmc
and
ret
sbb
dec
xor
sub
es
mov
push
popf
push
and
xor
rolb
imul
ret
stc
pop
dec
mov
daa
mov
jne
popa
mov
cmpl
inc
and
roll
add
jge
orb
cs
jg
xorl
ss
call
out
bound
push
sub
mov
ret
adc
cwtl
mov
xchg
and
ret
shll
adc
out
mov
std
leave
push
mov
test
movsb
cmp
inc
mov
sahf
pop
loop
repz
sub
jne
sbb
push
xchg
sar
gs
pop
sub
pop
sahf
add
mov
push
loope
insl
push
mov
cmp
adc
pop
mov
nop
adc
sub
push
xor
xchg
xchg
imull
jecxz
rclb
jecxz
add
mov
pushf
xor
in
sbb
ficoms
mov
push
leave
and
and
push
ds
loopne
popf
jle
iret
flds
out
push
dec
es
xor
es
xor
test
sbb
pop
mov
mov
push
pmulhuw
test
in
mov
test
sub
jmp
mov
xor
aas
je
mov
lods
cmpl
or
leave
push
int3
mov
sub
movl
dec
sub
popf
dec
cmp
or
ret
ret
icebp
out
rcrl
inc
shrl
mov
scas
mov
push
mov
xchg
out
cmp
xor
or
push
testl
adc
movsl
clc
lret
cmp
pop
fsubr
mov
ret
jne
fcmovnb
fisttps
mov
mov
dec
cmp
adc
stos
inc
stos
and
out
test
mov
in
cmpsb
cmp
add
pop
sbb
negw
and
daa
ljmp
ss
ficoms
shl
orb
xchg
aaa
ret
repz
mov
enter
sub
pop
or
aas
push
addps
test
mov
mov
enter
sub
pop
or
aas
push
addps
test
lock
lock
cwtl
mov
enter
lock
cmp
dec
sbb
push
aas
pop
out
ret
mov
mov
dec
psubusb
nop
xchg
cmc
or
dec
loopne
xchg
mov
cmpsl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
jle
dec
arpl
xor
dec
jge
insb
jno
stos
ret
repz
icebp
scas
cmp
mov
jle
jle
pop
jae
add
adc
and
xor
sar
stos
ret
sbb
scas
loopne
inc
mov
addr16
push
jnp
push
sbb
or
cmp
sub
and
jmp
add
divl
add
xor
es
ret
mov
push
pop
pop
out
movsl
fisubrl
scas
xchg
call
dec
jmp
vphaddbw
test
add
xor
shl
adc
jmp
jecxz
jle
pop
cmp
pop
pusha
push
aas
adc
push
fucomip
inc
add
sahf
pop
and
xchg
sti
xchg
and
pop
mov
adc
scas
arpl
inc
or
sub
out
push
int3
ficoml
orb
in
insb
into
sub
mov
mov
pushf
sub
push
jae
xor
dec
add
mov
dec
mov
add
mov
out
sbb
xor
outsb
shrb
mov
dec
jae
imul
cmp
sub
lret
cli
ljmp
xchg
sbb
bound
jb
push
push
jge
dec
jae
lcall
pushf
ret
shr
sti
fisubrs
jle
sub
pop
jbe
jo
and
pop
pop
in
mov
stos
mov
icebp
int
dec
sahf
pop
add
add
push
outsl
adc
and
xor
ret
ror
jecxz
repz
cmpl
outsb
inc
jle
dec
arpl
add
adc
and
xor
ret
ror
jecxz
repz
cmpl
outsb
inc
mov
pusha
add
adc
lahf
inc
fcmovnb
push
lea
adc
push
mov
sbb
ljmp
push
daa
pop
popf
dec
stc
imul
push
sbb
sub
out
scas
imul
lods
les
test
and
sbbb
pop
lods
ljmp
ds
cmp
dec
scas
adc
or
push
or
sub
ds
inc
xor
pop
lret
subb
or
mov
scas
cltd
push
daa
shlb
cs
fnstcw
cmc
jne
or
fwait
mov
pop
lahf
clc
xchg
cmp
and
and
mov
inc
imul
out
aam
stos
scas
push
mov
insb
test
into
adc
dec
pop
std
mov
pop
loopne
lods
testl
fnstsw
movsb
sti
pop
inc
insb
mov
dec
test
xchg
lcall
out
mov
mov
pusha
loop
inc
sub
mov
pop
adc
orb
fcmove
sbb
imul
mov
loopne
mov
dec
sarl
cmpsl
inc
inc
lret
into
movsl
sbb
loop
shll
jecxz
sti
mov
xchg
notl
pop
sbb
push
inc
adc
sub
popa
sub
sbb
popa
dec
jns
jp
in
push
sahf
dec
add
daa
xchg
inc
ss
cmp
mov
add
inc
dec
popa
xchg
mov
cmp
addr16
xchg
loopne
push
popa
hlt
out
dec
divl
fbstp
sti
stos
mov
pop
lahf
out
ret
and
dec
add
push
and
pop
cmpsl
jg
lahf
iret
cwtl
mov
adc
lea
std
daa
adc
test
je
movsb
test
pop
mov
xchg
repz
cli
inc
lea
sbbl
daa
cmp
rolb
scas
pop
mov
jbe
in
mov
add
cmp
push
dec
sub
and
lods
arpl
and
and
and
mov
imul
lea
mov
adc
dec
pop
jne
imul
pop
mov
sub
clc
hlt
dec
push
or
xor
addr16
in
sub
in
test
test
iret
mov
xchg
movsb
lock
fwait
cmc
cmc
test
and
and
push
cmp
jg
inc
adc
leave
mov
in
sbb
push
inc
pop
mov
imulb
mov
and
cmp
loopne
jge
insb
sbb
mov
mov
xchg
lea
insb
popf
adc
jp
xor
jb
test
imul
dec
add
leave
jg
fldcw
or
cmp
ja
push
lahf
inc
push
leave
sahf
stos
repz
ljmp
fmuls
and
and
mov
fisttps
push
lret
pop
mov
iret
pop
sbb
les
pop
dec
add
popf
jb
out
sub
sub
fnstsw
xor
add
pop
mov
cmpsl
movsb
fistpl
add
xchg
inc
or
add
sub
andb
dec
cld
xchg
dec
test
test
in
mov
dec
inc
cmpsb
iret
into
fcoml
mov
dec
xor
sbb
jecxz
stos
push
mov
mov
js
mov
mov
arpl
movsl
ret
mov
out
insl
xchg
pop
xor
sub
sbb
pop
inc
out
jno
ret
inc
mov
cltd
es
xchg
int
dec
rcrb
jne
mov
jmp
or
mov
jmp
sbb
dec
in
inc
and
cmp
jae
add
cltd
scas
mov
pop
dec
inc
push
sub
xlat
leave
xor
in
cltd
cs
cmp
std
add
add
sbb
and
jle
pop
mov
pop
addr16
lret
inc
icebp
lea
iret
dec
pop
cmp
sbb
adc
es
pusha
jae
push
out
movsb
xchg
clc
fpatan
stc
mov
sub
hlt
icebp
mov
int
mov
push
cmp
and
push
cmpsb
add
jno
outsl
push
xchg
roll
jne
and
sbb
das
loopne
pop
mov
cmpb
loope
adc
cltd
mov
test
lcall
or
push
mov
xchg
lahf
flds
mov
and
or
cltd
ret
movsl
pop
sub
push
stos
mov
mov
fs
adc
addl
loop
xlat
filds
adc
out
mov
and
jnp
sbb
in
inc
mov
cmc
cli
sbb
pcmpgtd
pop
cmovge
ficompl
jno
cld
pop
sti
mov
popa
test
aam
pop
cmp
ror
push
xchg
xor
in
dec
jbe
push
adc
pusha
push
dec
scas
mov
cli
mov
sub
xor
adc
addr16
rorl
movsl
jecxz
add
dec
add
aas
xchg
test
mov
jne
push
inc
fwait
adc
aad
in
push
mov
sti
daa
pop
out
mov
and
test
out
movsb
jmp
sbb
scas
fdivrl
aaa
fwait
cmpsb
mov
jl
arpl
rcll
scas
or
leave
mov
arpl
sti
mov
aas
fsubr
sbb
pop
xchg
fmull
in
in
cmp
mov
mov
ret
or
stos
int3
mov
cmp
repz
test
xchg
or
pop
inc
outsl
adc
loope
sub
sub
xchg
lcall
fs
mov
push
aas
mov
and
mov
popa
loop
adc
aam
mov
pop
push
lods
dec
add
jno
xor
cld
push
inc
aam
loop
sub
lret
mov
jle
pop
cmp
sti
dec
fcoms
popa
xor
fidivrl
xor
jle
mov
rcll
xchg
addl
nop
cmp
dec
xchg
cs
pop
adc
clc
mov
std
in
jecxz
push
popa
mov
mov
scas
inc
cli
inc
repz
pop
pop
cltd
xor
std
jecxz
test
or
xor
or
sbb
jae
pop
lea
pushf
lea
cmp
sub
insb
clc
movsb
decl
cvtdq2ps
sub
xorl
sub
inc
jl
adc
addr16
adc
test
stos
jmp
cmp
lods
jnp
iret
nop
stos
xchg
cmp
outsl
idivl
stos
inc
insb
std
jp
lds
jne
inc
out
insl
add
or
sub
out
lret
lds
test
push
push
mov
scas
sahf
fcmovu
mov
pop
insb
int
cli
cwtl
lahf
popa
sbb
imul
or
lods
add
lret
fldt
push
inc
mov
lds
sahf
outsl
fldenv
cmc
pop
sbb
fidivrl
jle
dec
pop
imul
fisttpl
or
roll
pop
notb
cmp
adc
pushl
adc
or
adc
mov
mov
mov
add
add
in
or
push
insl
jmp
lods
mov
lods
push
and
test
cmc
mov
sbb
or
daa
mov
test
xchg
in
or
sbb
push
mov
in
push
aaa
ret
stc
xlat
fcomp
scas
lods
insb
dec
pop
fadds
xorl
scas
insb
loope
mov
mov
out
mov
cld
insb
pushf
jmp
in
sub
mov
sbb
dec
mov
leave
and
push
loope
xor
lahf
in
ja
sbb
xchg
test
int3
sub
add
stc
sub
fildll
lods
mov
push
into
loopne
mov
jl
icebp
ret
jle
sbb
jnp
cmp
sub
insb
fnsave
mov
xor
out
dec
bound
mov
dec
sub
imul
lea
xchg
adcb
cs
adc
faddl
cmp
inc
push
pop
jp
aaa
dec
imul
pop
and
lock
pop
rolb
dec
shlb
incl
mov
cmp
insl
inc
add
rorb
xor
xchg
sub
lds
cmpsb
or
cmpsl
xchg
js
xor
mov
scas
stos
adc
pop
pop
subb
push
loopne
jp
sbb
std
mov
jge
jp
shll
push
mov
addr16
daa
test
leave
dec
mov
xchg
dec
cmp
and
xor
mov
xchg
mov
imulb
popf
rolb
or
cmpb
xchg
xchg
fcoms
inc
xchg
in
mov
in
cmpsb
jle
fcoml
cmp
or
into
stc
or
cmpsb
jb
cmpsb
mov
shrl
cmp
mov
inc
pop
aas
inc
mov
int
cltd
movsb
stos
movsb
push
clc
cmp
aas
fwait
mov
stos
jl
frndint
add
add
cld
insb
xor
es
pop
sbb
lret
xor
xor
push
out
lret
adc
adc
adcl
leave
and
sub
jl
or
pop
pop
xor
ja
lds
and
xor
mov
sbb
or
pop
sub
or
jle
in
in
repnz
push
jmp
sub
outsl
and
or
inc
data16
lods
nop
lret
fstps
jmp
fisubrl
shl
lret
lds
fcmovnb
test
pop
pop
pop
aad
push
mov
pop
xchg
sub
cli
nop
jnp
cmpsl
out
fsubs
adc
into
xchg
jae
and
cld
pop
push
push
jns
push
add
push
sbb
in
ror
pop
sbb
add
mov
cmpsb
pop
add
cmp
jnp
or
fistpl
leave
dec
jge
sbb
jmp
int3
pop
and
adc
jp
cmp
ret
adc
or
scas
xchg
cmpsb
mov
push
dec
enter
pop
jno
add
sbb
jb
sbb
pop
and
test
shll
mov
sbb
cs
jp
loop
nop
lods
std
mov
jp
arpl
cmp
cmp
adc
cmp
mov
xor
add
insl
cltd
stos
sbb
jle
jle
add
push
push
scas
ljmp
and
jae
push
mov
fmuls
or
push
sarl
and
inc
clc
mov
mov
sub
stos
mov
stos
fs
pop
in
push
mov
loope
fisubrs
test
inc
inc
adc
xor
std
sbb
fs
inc
or
loope
xor
push
push
in
dec
add
inc
into
cmpsl
mov
subb
xchg
or
fcoml
dec
int
dec
insl
loopne
sar
and
int
pop
aam
mov
and
inc
mov
pop
adc
stc
jne
inc
call
mov
fiadds
aas
aad
xchg
test
jb
sub
sbb
sbb
jg
rolb
repz
arpl
outsb
nop
clc
testb
mov
pop
sbb
pop
out
movsl
cmp
xchg
xchg
xchg
inc
testb
test
dec
mov
jo
ds
pop
dec
cmp
jle
scas
pop
push
movsl
cld
repz
sbb
mov
jp
lret
in
in
dec
ret
iret
pop
aaa
pop
xchg
negb
sti
punpckldq
push
fadd
in
xor
mov
xchg
orl
xlat
pushf
pop
inc
pusha
xchg
xor
aas
inc
adcl
or
adc
cmp
and
push
sahf
icebp
pop
pop
cmpb
push
mov
pop
movsb
add
dec
push
xchg
inc
or
mov
repnz
push
add
aas
add
in
aam
pushf
push
pop
pop
clc
xchg
aad
push
jo
aam
xor
push
pop
jns
jg
dec
imul
out
and
enter
clc
int
mov
das
aaa
xor
mov
or
leave
lea
pop
inc
loop
test
inc
popf
dec
sbb
sar
jmp
and
ret
fldenv
divb
int
popa
mov
js
movsw
xchg
adc
adc
add
dec
in
outsb
in
and
mov
jb
and
out
lea
sbb
in
cmpsb
cmp
sbb
out
ja
movsb
mov
pop
icebp
jb
outsl
adc
sbb
mov
fcmovnb
imul
rorl
sbb
sbb
out
jnp
pop
jne
stos
dec
xchg
add
dec
cmp
pop
mov
test
jmp
andl
cli
ss
out
movsb
into
in
inc
mov
sarb
sti
sub
rcll
adc
cmpsl
lahf
cmp
xlat
rol
jg
push
in
mov
adc
lcall
cmp
mov
movsb
jg
stc
or
mov
jo
dec
push
push
jb
and
mov
adc
roll
inc
mov
adc
popa
jbe
orb
jge
loope
mov
rolb
mulb
test
jl
aam
or
xor
adc
cld
or
mov
sub
arpl
in
aas
sarl
into
das
out
or
inc
cli
xor
push
fisubs
adc
outsb
push
and
aaa
inc
movsl
xchg
or
icebp
pop
sti
or
imul
and
dec
mov
mov
and
movb
lret
adc
lret
nop
ds
pop
add
ljmp
sub
cmp
or
push
gs
cmp
aad
cs
xlat
add
je
push
add
inc
loopne
push
lcall
in
cwtl
pop
adc
inc
imul
mull
aaa
jl
pop
cmpl
push
dec
addb
sahf
jae
sub
push
sub
xlat
push
or
mov
scas
leave
mov
xchg
loopne
push
adc
mov
pop
mov
hlt
fmuls
mov
xor
mov
aad
xor
adc
mov
cmp
outsl
shrb
inc
mov
pop
xor
mov
pop
loop
je
mov
mov
das
cmp
jbe
pop
imul
movsl
setne
cmpsl
in
mov
test
xchg
jge
cmp
inc
inc
mov
push
xor
push
cmp
jb
and
popa
cwtl
or
je
out
push
movsb
in
mov
jns
fs
pop
addr16
jne
lcall
add
push
and
cmp
push
stos
mul
arpl
cs
bound
sub
pop
subb
adc
cwtl
sahf
inc
dec
fs
mov
test
cmp
add
inc
adc
addr16
push
lods
sub
mov
mov
xlat
out
mov
or
adc
lods
repnz
jae
adc
loope
jo
das
xacquire
jae
jns
jge
jmp
mov
ljmp
sbb
jae
xor
sbb
loope
shll
dec
ret
adc
mull
lods
push
das
and
repnz
jne
xor
fimull
pop
or
cmp
cli
add
pop
inc
xchg
aas
ljmp
aaa
inc
add
or
icebp
repnz
pop
mov
repz
push
mov
fsubrp
push
mov
test
mov
outsl
jns
loope
aam
ficoml
inc
push
inc
jnp
lahf
cmc
sbb
into
int
mov
push
mov
xchg
es
xchg
cmpl
bound
cmc
push
jo
jns
push
push
pushf
fnstsw
jns
sub
cmpsb
shrl
jge
mov
jmp
pop
sbb
push
xchg
test
mov
mov
or
dec
in
pop
add
jl
jmp
cmp
xchg
fmull
out
ljmp
mov
push
jb
jns
push
adc
or
mov
std
add
push
pop
pop
push
aad
int
xor
scas
scas
cmpsb
jns
dec
jge
xor
cmp
sub
js
in
int3
cmpsb
scas
mov
test
das
mov
push
pop
ja
cmp
xor
out
fwait
dec
push
xchg
pop
sbb
and
aam
push
pop
xchg
shl
dec
pusha
int
lcall
pop
lods
rol
fwait
dec
pop
div
lcall
rorl
mov
inc
sbb
jecxz
das
sbb
or
stos
mov
push
xor
cwtl
xor
xchg
xchg
push
test
cmc
add
mov
jbe
stos
push
imul
pop
ret
sbb
in
fdivl
stc
mov
push
inc
leave
stos
mov
inc
dec
and
adc
sub
xchg
mov
cli
add
mov
movsl
lret
icebp
out
sub
hlt
add
ret
cmc
sbb
loop
lea
cmp
cmpsl
mov
lock
aas
mov
ret
cmp
fs
mov
cmp
add
arpl
jge
push
outsb
adc
mov
ffree
cli
xchg
lret
les
pop
dec
cltd
xchg
aam
repz
test
movl
and
mov
add
xchg
mov
les
cltd
ret
mul
or
nop
lock
data16
cmc
fsubrl
or
adc
loop
ret
cli
in
stos
xchg
idivl
lahf
mov
sbb
adc
cmpsl
cmp
jle
repnz
mov
ja
hlt
pop
cmpsl
xor
aad
subb
pushf
dec
imul
mov
sub
shl
adc
lcall
jne
mov
fld
pop
adc
mov
pop
out
imul
dec
mov
cld
imul
cmpsl
rcll
cmpsb
leave
push
xchg
cmp
cli
pop
mov
lahf
xchg
inc
int
push
sbb
sbb
ror
and
jmp
movsl
es
mov
sub
es
dec
insb
insl
push
push
mov
mov
mov
cmp
sbb
push
inc
int3
xchg
dec
push
cltd
pop
pusha
add
mov
inc
push
popa
mov
pop
fs
mov
lret
mov
jmp
sub
adc
and
les
push
jno
ljmp
mov
sbb
push
daa
and
push
and
sbb
mov
jp
pop
jb
mov
sahf
or
pop
int
nop
fwait
adc
jnp
adc
movsb
sarl
inc
mov
rcrb
xor
inc
and
pop
adc
jo
xor
xchg
popf
test
shlb
leave
rol
or
es
cld
cli
push
call
insl
cltd
sbb
mov
sbb
dec
pusha
mov
dec
mov
cmpsb
aad
inc
mov
stc
push
pop
subl
shl
in
test
rcrl
adc
clc
mov
mov
hlt
imul
inc
jnp
out
outsl
dec
rorl
mov
add
jmp
fiaddl
jne
fisubs
hlt
push
bound
rcrb
dec
mov
pushf
xor
test
push
decb
push
lahf
pop
add
pminsw
pushf
dec
into
stc
test
and
add
jl
push
push
jo
inc
fistps
lret
mov
test
int3
push
jno
cmp
movsl
outsb
jl
dec
leave
dec
popa
push
pushf
sbb
adc
arpl
sbb
in
mov
pop
pop
imul
push
cs
sbb
int3
sbb
xchg
repnz
dec
das
arpl
push
jmp
addr16
decl
sbb
cmp
mov
jecxz
stc
jne
out
je
dec
mov
push
mov
sub
push
repnz
das
add
div
cmpb
movsl
pop
sarb
mov
xlat
push
mov
sti
test
jmp
rorb
aad
scas
cmp
adc
and
pushf
dec
jle
mov
jp
pop
fsubrl
or
dec
jae
scas
rolb
lods
out
movsb
add
aad
ja
inc
fdiv
pushl
xchg
fisubl
add
or
jne
add
cmp
sbb
push
add
rcr
and
sbb
cwtl
jge
inc
xchg
push
add
stos
jmp
push
add
in
sbbl
rcll
cmp
ss
fs
mov
adcb
push
stc
stos
push
rep
int
mov
das
inc
jecxz
adc
inc
lea
sub
out
pop
add
push
xlat
enter
pop
adc
push
fildl
hlt
cmp
mov
inc
and
mov
add
lods
sub
xchg
push
xlat
ret
xchg
test
inc
subb
lock
test
cmp
fldt
imul
push
loop
pop
loop
jg
scas
inc
shlb
or
int3
sub
push
test
jge
and
dec
repz
cld
pop
movb
scas
adcl
sbb
das
mov
clc
int3
iret
sub
mov
lret
xor
imul
loop
test
xor
aaa
addb
cmp
pop
push
js
test
popa
je
stos
test
movsb
in
push
fisttpl
adc
and
xor
ret
ror
jecxz
repz
cmpl
outsb
inc
jle
dec
arpl
add
adc
and
xor
ret
ror
jecxz
repz
cmpl
outsb
inc
jle
dec
arpl
add
adc
and
xor
ret
ror
jecxz
repnz
cmpl
pop
inc
dec
push
js
pop
jae
add
adc
ret
add
jecxz
test
or
insb
jno
popa
dec
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jge
std
repnz
fst
pop
sbb
xchg
insl
push
jge
dec
push
pop
inc
sub
cmp
sbb
loop
repnz
ret
lods
mov
popf
out
outsb
jge
sub
pop
push
sub
add
jmp
fcmovu
lret
mov
mov
jge
sub
cmp
dec
insl
push
inc
sub
scas
std
addb
popf
jae
popa
scas
jge
mov
or
and
test
imul
pushf
subb
insl
sbb
shrb
add
jle
cltd
ret
lea
mov
iret
insl
bound
lods
xchg
xchg
mov
mov
xor
insl
negb
mov
push
outsb
mov
std
pop
add
add
sahf
cmp
mov
lea
or
jle
push
and
sbb
pop
pop
dec
sub
jne
pop
ret
stos
sbb
mov
cmp
adc
cmc
std
loop
fcmovnu
shrb
sbbb
dec
pop
pop
dec
sub
sbb
andb
fcom
lret
testl
inc
jno
pusha
insl
imul
mov
mov
mul
mov
xor
push
dec
xor
add
loop
repnz
cmpsb
std
xchg
in
xchg
mov
xchg
insl
bound
dec
inc
pop
push
sub
add
repnz
fst
lods
mov
popf
xchg
insl
bound
dec
inc
pop
push
sub
add
loope
inc
rcr
sub
lea
and
into
pop
add
adc
sub
xlat
dec
mov
fidivs
xor
cmp
enter
shll
adc
push
call
ss
mov
pusha
mov
push
fs
sahf
test
imul
mov
add
dec
out
in
cltd
dec
mov
mov
rorl
hlt
mov
rorb
out
mov
std
loopne
push
mov
xchg
ljmp
add
cmpsb
push
dec
inc
jg
push
rcrb
addl
repz
jp
mov
pop
nop
scas
mov
adc
sbb
fdivr
fistpll
and
jnp
mov
jp
stc
pop
lcall
subb
lcall
jmp
out
add
adc
aad
ja
fst
xor
push
adc
fcompl
adc
mov
cmpsb
arpl
mov
pop
push
arpl
xchg
lahf
xor
ja
cmc
adc
add
les
cmc
imul
or
mov
jo
jnp
push
push
push
lods
mov
xchg
frstor
mov
pusha
or
fwait
push
arpl
dec
push
cmp
jae
add
mov
mul
push
inc
stc
or
xchg
jns
push
ds
xor
push
sbb
mov
push
sub
mov
jmp
sbbl
sub
jbe
rcrb
or
inc
xor
dec
push
sahf
popf
rorb
pop
leave
in
mov
and
mov
or
andb
mov
inc
lods
or
lea
jo
pushf
cmp
call
mov
mov
cmp
lcall
pop
mov
movsl
adc
push
pop
xchg
orb
mov
mov
push
rol
pop
jbe
add
test
cmp
sub
in
adcl
gs
cmp
dec
cmp
mov
xchg
sub
inc
inc
sbb
repnz
adc
cmc
sbb
js
lock
lods
cmp
lock
cld
push
xchg
xchg
pop
cmovnp
mov
out
and
cmpsb
imull
pop
jno
jge
subb
mov
mov
or
mov
shlb
dec
mov
pop
and
pop
mov
jo
adc
cmp
dec
pop
int3
sub
lods
jmp
out
jle
pop
and
shll
jmp
or
mov
or
orl
push
xchg
jp
cmp
xchg
adc
mov
add
daa
orl
dec
mov
popf
sub
lods
sbb
pop
fdivs
repz
add
or
lahf
adc
test
ret
and
out
loopne
movsl
cltd
fldcw
fsubp
or
mov
fcomp
cmp
sbb
mov
call
daa
call
lret
repnz
test
sub
es
stos
hlt
icebp
adcb
clc
inc
aas
jmp
mov
ret
das
or
and
xlat
or
in
test
inc
push
push
repnz
nop
or
inc
jbe
dec
or
or
mov
pop
cli
bound
int3
sbb
inc
scas
jno
out
push
scas
add
imul
mov
gs
jbe
xlat
lret
jp
pop
xorl
pop
daa
cmp
mov
loopne
divb
mov
xchg
jne
sub
inc
jle
add
movsb
inc
mov
mov
ret
inc
jl
aas
iret
and
outsb
xchg
sub
jecxz
adc
fs
cmc
mov
dec
cmp
loopne
ss
push
sahf
arpl
adcl
xchg
clc
subb
inc
pushf
cmp
sub
push
mov
cmp
pop
iret
popa
and
mov
clc
xchg
cld
pushf
cs
daa
jp
lcall
and
cmc
icebp
inc
add
fstpt
push
addb
mov
xchg
into
xchg
lea
xor
ljmp
rorb
pop
test
jbe
divb
mov
mov
pop
sub
leave
pop
jle
lds
shrl
paddw
push
push
jns
fldt
imulb
add
mov
add
adc
add
push
mov
std
pop
out
mov
idivb
dec
aas
js
jns
add
mov
inc
je
mov
lods
sub
cld
aam
push
int
mov
outsb
dec
push
pop
lods
push
call
cmp
std
and
xchg
push
push
lods
ficompl
push
lahf
mov
jl
popf
mov
xor
jns
jo
out
pushf
stos
scas
in
xlat
cmc
cwtl
decb
push
lods
xor
sub
popa
mov
or
mov
in
imul
xor
in
push
sti
out
jge
jp
cli
insb
enter
push
mov
call
sub
imul
lock
fbld
roll
sarb
fildl
mov
int3
xchg
xlat
inc
outsb
arpl
aas
mov
rorl
ja
lock
mov
push
mov
clc
cmc
addr16
adc
cli
scas
test
arpl
mov
xchg
nopl
push
mov
xor
push
aaa
bound
mov
and
stc
popa
lcall
dec
out
and
jae
jg
sub
ret
sbb
inc
mov
gs
test
loope
push
cmp
or
ret
add
lret
adc
push
aad
xor
scas
push
dec
adc
ret
orb
push
cmp
fldcw
dec
cmp
std
jnp
out
inc
mov
mov
push
mov
sub
icebp
lods
es
mov
and
nop
cmp
int3
xor
je
sbb
jle
loopne
popa
aad
mov
xor
pop
mov
sub
test
mov
aas
lds
insl
push
pop
xchg
adc
cmp
out
xchg
jb
mov
mov
mov
mov
sub
inc
lcall
push
hlt
xchg
mov
cmp
stos
or
dec
ja
into
mov
mull
pop
lcall
pushf
and
mov
rorb
cmp
subl
inc
sbbb
xchg
mov
rcrb
rorb
mov
mov
and
cmpsb
test
dec
aad
jg
adc
lcall
iret
xor
push
sbb
dec
data16
sub
xor
std
push
pop
out
int3
mov
sahf
xchg
or
inc
insb
aaa
mov
jecxz
inc
jecxz
mov
cmpsl
out
invd
jp
and
cmp
jg
mov
ds
pop
lcall
or
pop
outsb
inc
jp
cmp
out
add
jnp
xor
ss
jmp
int3
loope
cmp
cwtl
push
cld
aas
pop
or
stos
addr16
ljmp
push
pop
stos
out
mov
push
mov
pop
cmp
sbb
push
mov
sbb
sti
xor
xchg
into
outsb
cwtl
rclb
fsubl
add
dec
iret
and
push
mov
adc
jns
movsb
cmpsl
das
scas
aad
por
xchg
sub
adc
cs
arpl
loop,pt
lahf
icebp
jge
bnd
cmpsl
mov
cmp
adc
xchg
sub
aad
scas
adc
lods
mov
mov
out
add
test
add
mov
in
cmp
cltd
cmp
mov
mov
insb
lods
les
xchg
xchg
stc
loope
out
cs
in
adc
mov
or
test
dec
push
mov
lahf
inc
in
aam
test
fwait
subl
das
cmp
divl
sahf
or
iret
out
addr16
test
add
sbb
sbb
mov
sub
jne
mov
mov
adc
aam
scas
out
stos
inc
test
jbe
pushf
lret
jns
mov
mov
outsl
into
pop
adc
std
int3
push
xor
cmp
xchg
cmp
pop
js
dec
stc
mov
fistl
inc
xor
sub
push
fsubl
push
pop
push
and
and
popf
das
mov
fwait
adc
out
adc
inc
push
push
sti
sub
xor
mov
clc
cmc
subl
or
adc
add
mov
or
cmpsl
cli
enter
fistpll
xchg
lods
adc
cmp
inc
cmp
pop
cmpsl
enter
adc
xchg
insl
clc
and
add
pop
mov
scas
lods
ljmp
jecxz
fsubp
stos
vmovss
insl
arpl
push
push
xor
sar
sub
mov
cmpl
nop
pop
sbb
bound
push
mov
mov
enter
push
jg
add
not
jno
dec
dec
xor
sti
out
fstpt
andb
and
and
cs
cmp
f2xm1
popa
out
mov
clc
and
pop
lret
dec
or
xchg
mov
lods
jp
pop
lods
lods
aad
das
lret
inc
or
lock
in
dec
xchg
sub
cmpsb
dec
push
bound
movsb
fldenv
push
int
pop
mov
lahf
mov
dec
dec
sar
sbb
fmull
pop
mov
lock
sbb
mov
mov
cmp
fmull
adc
push
push
lods
pusha
inc
fwait
xor
sbb
push
lea
std
mov
mov
inc
stc
incb
dec
rorl
fdivr
push
stos
mov
jp
test
sub
jno
loopne
pop
and
fcmovnu
mov
js
mov
push
or
xor
mov
inc
mov
jge
popf
sbb
mov
push
insl
sbb
mov
mov
pop
ss
xor
test
mov
aaa
and
cmpsb
das
out
dec
sbb
les
in
mov
xchg
inc
in
mov
mov
cld
sub
stos
sbb
gs
test
fstps
dec
mov
fmull
mov
jg
enter
adc
std
scas
gs
jge
or
mov
and
aas
loope
out
jp
xchg
cld
in
mov
add
adc
push
mov
or
or
cmp
mov
push
adc
mov
mov
adc
loop
push
dec
adc
and
cmc
xchg
into
sbb
mov
ljmp
pop
test
iret
or
bnd
xor
mov
test
or
push
and
jbe
aad
insl
outsl
pop
clc
pop
hlt
inc
mov
daa
fsubrp
xor
pushw
inc
test
popf
std
push
adc
call
lret
aad
lahf
mov
int
ret
jne
arpl
sub
and
lea
cmpl
mov
or
xlat
das
aam
xor
or
xor
fimull
cmp
and
pusha
cmpsl
repnz
inc
repnz
outsb
cmp
jle
movsl
and
xor
cmpsl
out
inc
hlt
dec
je
lea
mov
pushf
jle
outsb
jecxz
pop
scas
add
enter
cltd
pop
sahf
xchg
lcall
test
enter
jae
adc
stos
jb
pop
mov
or
mov
mov
jb
popf
cmpsl
mov
adc
mov
add
fwait
popa
fnstenv
xchg
leave
in
adcl
popf
sbb
test
outsb
aaa
push
cwtl
int
mov
push
insl
xchg
cli
add
add
adc
cmp
jecxz
pop
inc
loope
dec
jno
add
push
lret
cmc
scas
movsl
leave
jae
lock
test
cmpps
add
push
cmp
jle
test
add
push
into
mov
ljmp
push
sub
ja
test
adc
stos
jnp
jecxz
das
sub
in
addb
aad
xor
sbb
mov
adc
pop
sti
push
and
push
mov
fisubrs
adc
fldl2t
mov
xchg
arpl
and
cmc
dec
lds
push
xchg
aaa
enter
divb
or
pop
in
orl
rcrl
shl
mov
xchg
rorl
inc
std
jbe
mov
push
out
mov
mov
pop
jo
stc
sarl
pop
adc
das
and
fldcw
cmp
test
iret
push
dec
jecxz
ja
int
mov
and
fdivrp
mov
push
cmp
jp
jno
pop
clc
aaa
lret
cmp
ja
cld
xor
fsubrs
es
stos
adc
sub
xchg
scas
inc
data16
mov
cmp
pop
xlat
lahf
xchg
xor
ljmp
out
mov
jmp
or
lcall
js
stos
jns
movb
cmp
rcrb
lret
pop
mov
dec
cmc
xlat
test
dec
and
icebp
lret
inc
mov
xor
sub
fildl
push
push
sbb
stos
aaa
aad
rolb
jae
clc
ret
leave
arpl
inc
ror
and
add
mov
cwtl
dec
sbb
in
jmp
push
in
int
rclb
xor
clc
mov
nop
loop
add
xchg
pop
push
inc
lods
jecxz
sti
inc
cmp
push
test
push
sahf
cmp
xchg
adc
pop
push
sub
adcb
pop
ret
xchg
xchg
cltd
or
pop
xor
js
fists
addr16
dec
enter
sahf
imul
and
scas
ljmp
call
out
jns
lock
repnz
lahf
icebp
add
fmuls
push
push
inc
jmp
xor
imul
mov
dec
test
push
xor
push
cwtl
fnstcw
fistpl
shlb
push
pop
pushf
rcll
jo
pop
pop
xor
mulb
jl
add
mov
int
nop
adc
jno
ljmp
mov
dec
popa
or
call
cmpsl
or
add
repnz
jle
mov
xchg
mov
inc
pop
pushf
subl
xchg
in
in
push
repz
hlt
ss
insb
lock
ds
mov
es
out
icebp
xor
mov
lock
sub
push
or
ret
or
pop
pushf
out
and
push
out
stos
add
aas
imul
pop
or
pop
test
jl
add
dec
in
ret
loope
movsl
rorb
push
jle
inc
dec
sub
bound
mov
aam
hlt
add
shll
subb
in
inc
outsl
out
mov
sub
pop
rol
and
inc
out
mov
mov
sub
pop
lea
inc
push
data16
and
and
lcall
mov
pusha
inc
pop
sbb
test
add
inc
push
push
sarb
cmpsl
inc
fsubs
gs
fwait
xorb
mov
lds
jle
imul
aad
ljmp
fisttps
stc
mov
cmp
dec
imul
and
push
das
mov
push
dec
hlt
das
adcb
mov
and
jl
dec
xor
pop
push
pop
mov
aad
stos
pusha
jecxz
inc
stos
lods
jo
push
lea
push
cmpsb
sub
cli
cmovl
pop
pop
mov
mov
fld1
mov
test
dec
jge
cmp
push
sub
pusha
call
loopne
jle
mov
add
dec
fs
insl
cmp
cld
and
cmp
push
or
add
inc
inc
in
mov
xchg
in
cs
xchg
xor
lods
rclb
push
mov
jbe
sbb
rcll
mov
into
cltd
fcompl
inc
xor
cltd
push
xchg
rcr
mov
lods
popf
hlt
push
fsubr
xchg
push
aam
ror
inc
in
test
inc
mov
out
repz
xchg
sti
push
movsl
shl
das
ss
xchg
leave
rcl
xor
dec
push
cmp
scas
leave
adc
or
adc
add
andl
shufps
cmpl
clc
mov
cmp
std
xorb
in
insb
add
leave
cmp
xor
sar
es
shrb
cmp
inc
pop
into
fildl
pop
push
insl
xor
pop
jb
hlt
cmp
cli
aam
not
xor
push
cmp
pop
les
or
adc
mov
pushf
adc
jno
cmpsb
adc
adc
out
mov
push
xor
rol
jb
lods
mov
dec
sbb
fldcw
cmp
sahf
clc
pusha
xlat
repz
inc
into
sahf
or
ret
movsl
push
lahf
mov
in
in
fistl
sti
fwait
stos
jae
xor
hlt
mov
sub
or
adc
out
outsb
fcom
add
repz
mov
inc
popf
inc
push
out
jg
cmp
roll
mov
push
jge
fwait
cmpsl
faddl
lret
loop
push
out
mov
pop
xor
aas
ja
dec
add
out
pop
test
ret
ja
mov
cltd
xchg
out
lds
xchg
dec
cmpsb
test
adc
pop
mov
add
out
addl
lea
sahf
mov
inc
dec
mov
add
outsb
mov
adc
pop
gs
lods
jae
pop
subl
sti
inc
mov
mov
ret
jmp
and
orb
outsb
mov
pop
or
shll
cmp
xchg
sub
xor
inc
pop
outsb
cli
fidivrs
adc
stos
jo
aaa
int
movl
fs
inc
cmp
sbb
out
rcll
pop
and
stc
sub
aas
push
push
fldenv
cli
pop
cwtl
pop
mov
adc
push
out
cmpb
dec
xor
pusha
mov
testl
loop
dec
push
mov
sub
or
sbb
es
pop
push
hlt
xor
leave
popf
xchg
fcomip
mov
xchg
into
aaa
add
stc
or
std
push
sti
loopne
inc
mov
pop
jo
adc
stc
popa
clc
scas
and
int3
enter
sub
jo
mov
repz
push
addl
mov
filds
cmpsb
push
test
roll
addr16
dec
out
imul
sub
fsubrs
xlat
test
jae
dec
mov
jmp
or
push
sub
ret
out
sbb
mov
dec
mov
out
push
xor
mov
inc
loope
je
hlt
aaa
mov
mov
in
xorb
fiadds
mov
mov
fsubrp
mul
or
enter
lock
dec
mov
scas
pop
push
ror
lret
cmc
pop
jno
and
mov
aad
or
push
or
lahf
push
clc
lea
xchg
jnp
cli
add
push
jle
and
in
xorb
cmp
jo
cltd
sbb
lds
dec
fiadds
les
data16
mov
pusha
popf
int3
loope
enter
int
add
push
pop
xchg
fld
and
sbbb
fisubs
sbb
les
jp
cmp
jo
mov
mov
fwait
pop
mov
xchg
xchg
cvtps2pi
inc
inc
push
mov
jae
std
jmp
lods
jl
aam
subl
or
shll
adc
jns
push
out
arpl
jbe
pop
repnz
decl
es
and
sti
adc
add
sub
cmp
repnz
ret
or
ret
add
cltd
push
fsubl
fidivs
mov
adc
fistps
mulb
out
or
mov
rcrl
xchg
dec
pop
pusha
push
test
in
movsb
mov
stc
pop
dec
mov
fimull
mov
inc
push
lret
dec
loopne
loopne
test
mov
mov
inc
arpl
in
aad
dec
scas
sar
test
or
les
cmp
dec
loop
cmp
insb
rorl
movl
push
inc
out
outsl
lcall
pop
mov
dec
mov
jo
faddl
les
and
sbb
sbb
dec
lea
imul
fsubrl
cwtl
and
sbb
aas
sbbb
mov
xchg
add
inc
push
jo
ficoml
addr16
jb
fisttpl
icebp
mov
testb
dec
adc
push
xchg
fstl
pop
inc
lahf
jg
rcl
fs
mov
lods
int
in
inc
loope
sub
lgs
popf
sub
je
sub
xchg
push
insl
xchg
call
push
test
stos
iret
xchg
cli
lcall
ja
divl
stos
mov
adc
std
iret
xor
add
mov
sub
outsb
mov
jge
xchg
aaa
in
lods
mov
mov
sbb
test
rcrl
pop
mov
icebp
loope
rol
fst
lods
mov
popf
xchg
insl
bound
dec
inc
pop
push
sub
add
repnz
fst
lods
mov
popf
xchg
insl
bound
dec
inc
pop
push
sub
add
repnz
fst
lods
mov
popf
xchg
insl
bound
dec
inc
pop
push
sub
push
sbb
in
out
test
fst
lods
mov
popf
push
insl
bound
out
pop
and
bnd
insl
sub
jge
dec
sbb
jns
push
cmp
sbb
mov
lcall
ficompl
or
pop
push
jp
dec
or
mov
fucomp
lods
lret
ficompl
adc
pop
jae
bound
mov
cltd
mov
ljmp
popf
inc
insl
push
or
sub
jmp
cld
mov
popf
sub
inc
test
int
mov
stos
sti
adc
jmp
stos
lds
inc
aad
ret
iret
adc
jbe
fdivrl
lea
stos
stc
mov
mov
or
add
lods
push
mov
jb
pushf
sub
ds
xchg
sub
sub
and
mov
and
jae
mov
xchg
dec
stos
test
cld
mov
push
adc
clc
xor
call
in
xchg
out
ds
adc
in
test
test
popf
jecxz
and
dec
sbb
sub
inc
sbb
xchg
int
lods
loop
rorb
pop
scas
outsl
or
sbb
jl
push
xchg
stc
mov
lahf
les
sub
aaa
gs
push
push
dec
jp
dec
bound
sbb
mov
xchg
sarb
push
or
jb
and
cmp
stos
in
mov
fucomp
lods
cli
mov
sub
jge
dec
sbb
sub
pop
sbb
mov
lcall
ficompl
mov
imul
hlt
cli
cmp
xchg
cmpb
es
ljmp
xor
sub
xchg
jo
lea
imulb
fsubrs
xchg
inc
fldenv
adc
mov
rcr
cmp
jns
dec
cmpl
in
outsl
gs
jle
jae
jmp
pop
xchg
lahf
xor
scas
outsl
or
mov
dec
scas
icebp
mov
fsub
hlt
ret
cmp
and
mov
icebp
and
daa
in
inc
jl
stc
mov
pop
dec
lahf
rcll
jo
hlt
lret
push
insb
push
jge
mov
pusha
adc
in
sub
scas
in
inc
inc
adc
dec
mov
scas
ret
test
pop
orb
xor
int3
mov
push
test
aas
xorb
fisubrs
add
add
loop
mov
repnz
fistps
xor
sub
xorl
cmp
cmpsb
lahf
das
test
jl
cwtl
fwait
loopne
outsb
imul
xor
push
rol
aam
mov
and
jb
lods
inc
pop
or
xor
cld
push
pop
daa
aam
shrb
scas
lds
xchg
loop
aad
out
or
stc
sbb
lods
ret
cltd
dec
pop
dec
jp
cmpsl
in
pop
outsl
scas
ds
xchg
stos
mov
add
dec
mov
icebp
cmc
xlat
pop
pop
sbbb
cmpsl
sbb
fxch
cmp
inc
jle
into
cmp
lock
lahf
cwtl
mov
pop
arpl
nop
fisubs
cld
push
jl
jg
popf
movsl
in
cmp
mov
xchg
shrb
mov
fs
jl
jle
mov
fxam
or
lret
xor
enter
sahf
and
push
add
or
test
pop
outsb
push
xchg
in
lods
pushf
sbb
imul
mov
js
push
ror
clc
add
loopne
sbb
jp
in
or
push
fdiv
lcall
sbb
clc
divb
pop
dec
fldl
orb
sahf
mov
aas
dec
add
pop
std
push
sahf
add
and
adc
loop
jno
ret
mov
cwtl
ret
jae
xor
int
aas
rcll
repnz
loopne
mov
test
mov
cmp
xor
out
dec
fld
sbb
jmp
aad
sbbl
jge
mov
sti
pop
or
pushf
cmp
sub
sti
inc
int
jns
xchg
cmp
and
or
mov
cmpl
addr16
inc
inc
mov
jmp
leave
pop
loopne
and
mov
add
push
mov
add
inc
subl
cmp
clc
lds
daa
sub
inc
int
frstor
mov
loop
fldl
lret
movsl
cmp
mov
fs
pop
frstor
xchg
fdivs
repnz
adc
sbb
mov
adc
negb
popf
pushf
pop
and
fisubrl
movl
push
repnz
lahf
xchg
out
fstpl
push
jp
mov
lcall
fsubrl
and
xchg
pop
inc
inc
jo
enter
imul
pop
lret
mov
xchg
pusha
fidivrl
or
inc
pop
mov
push
shrl
sub
insb
cmp
aas
stc
mov
das
cmc
jb
sub
imul
shlb
sub
sbb
aaa
cmp
ret
ds
out
inc
ljmp
mov
shl
xor
mov
adc
sub
jecxz
xor
push
xor
jb
adc
or
cmp
dec
push
in
jmp
xor
dec
enter
insb
adc
rcrl
adc
lea
mov
cmp
mov
and
cld
mov
inc
mov
mov
inc
ljmp
daa
mov
insl
das
data16
incb
push
es
push
addr16
adc
push
sbb
adc
bound
std
mov
lret
mov
inc
enter
xchg
lea
insb
stc
daa
movsl
call
scas
jbe
loopne
mov
sub
sub
cmp
cmpsb
pop
js
jo
cmpsl
lret
fwait
sub
lods
data16
ljmp
in
xchg
pop
jns
push
mov
or
into
adc
jle
mov
dec
test
sahf
push
push
jmp
into
add
out
sub
repnz
mov
mov
fmuls
push
int3
push
das
add
fsubrs
mov
sub
fdivrs
loopne
dec
stos
loopne
dec
push
aaa
js
aad
inc
push
and
aam
push
cli
test
fildl
fdivrl
sbb
aad
pop
int
mov
mov
pop
add
addr16
test
push
loope
clc
cmpsl
in
pmaxub
push
aam
adc
push
mov
outsb
xor
in
ret
lret
inc
push
test
and
mov
xchg
or
cmpsb
and
mov
test
fisubl
ljmp
jae
clc
jle
loope
repz
ficoms
fildl
inc
iret
loopne
imul
mov
test
pop
push
test
mov
push
mov
loope
ficoml
icebp
mov
sub
inc
push
lret
es
decb
xchg
movsb
jnp
cmp
push
shll
pop
jecxz
divl
jp
push
or
and
inc
sbbl
fildl
or
and
lods
mov
iret
js
or
inc
push
xor
movsb
fimull
adc
pop
jge
inc
mov
xchg
fs
int
and
bswap
stos
jg
imul
and
fisttps
lcall
add
push
lcall
mov
mov
xchg
adc
mov
add
sub
and
xorb
stos
fs
lea
out
pushf
push
lahf
popf
push
fwait
repz
loope
daa
and
mov
mov
ss
mov
sarl
repz
mov
out
xchg
mov
fmulp
fldl
fldenv
mov
push
and
dec
inc
lret
scas
mov
cltd
ret
adc
push
lret
nop
adc
jbe
and
mov
loop
in
and
jae
add
jg
out
repnz
or
mov
repz
add
dec
jg
mov
cmpxchg
sub
lcall
daa
aam
movsb
mov
dec
sahf
in
stos
jns
cmc
xchg
pop
xor
stc
enter
std
stos
jae
pusha
loop
or
mov
sub
aad
repz
xchg
imul
jno
cltd
sahf
lock
mov
call
cwtl
mull
roll
jae
cmp
sub
shrb
xor
enter
aas
fldcw
shlb
cmpb
and
jne
jae
or
sarb
inc
pop
int
movsl
mov
jns
adc
mov
pop
in
mov
in
xchg
adcl
jg
cwtl
mov
cmp
ljmp
xchg
xchg
inc
pop
out
xor
mov
cmp
and
mov
xchg
pop
or
out
ljmp
mov
outsl
popf
jl
icebp
xor
mov
je
mov
and
jno
jmp
sub
outsl
iret
and
mov
or
push
dec
jp
mov
test
sbb
ljmp
mov
sub
in
sbb
je
mov
pop
int3
jae
imul
mov
jge
sbb
sbb
not
push
test
cmp
dec
push
add
mov
sbb
dec
jp
and
negl
aas
je
imul
jecxz
mov
xchg
lock
xchg
push
int3
xchg
loope
adc
pop
sub
mov
xchg
jmp
mov
xchg
jnp
mov
sub
clc
ja
dec
push
xor
fildl
adc
les
dec
xor
lods
daa
mov
mov
data16
xchg
cmpsb
inc
and
insb
pop
pmuludq
rolb
cmp
sbb
sub
test
xchg
fistpll
imul
or
mov
pop
int
lods
pop
jno
cmp
mov
cmp
js
scas
push
add
pop
cld
mov
rorl
fidivl
push
insb
mov
scas
mov
fstpl
pop
adc
out
jge
mov
and
in
inc
aam
xchg
xchg
data16
std
push
inc
lods
lods
jne
jae
mov
pop
jecxz
je
mov
cs
mov
popf
add
dec
xchg
ds
adc
mov
mov
sbb
imul
js
xor
add
in
adc
clc
mov
hlt
sbb
dec
mov
xor
add
pop
aad
mov
and
cmpsl
and
movsb
div
and
lahf
fs
push
mov
nop
mov
sbb
dec
jg
das
lock
sub
gs
adc
cmc
pop
add
jge
xchg
pop
int
or
cmovp
scas
clc
mov
adc
mov
mov
mov
cmp
pop
faddl
or
jbe
add
dec
mov
loopne
rep
loopne
push
ljmp
je
mov
push
sub
add
gs
loopne
stos
imul
out
pop
add
xchg
pop
fwait
ret
push
shl
pop
or
xor
jg
pop
fnstcw
es
jo
pusha
add
lock
dec
iret
jl
mov
std
inc
ss
lds
cmpsl
dec
mov
cmp
nop
out
or
test
loopne
add
ret
mov
test
sbb
xchg
push
inc
and
xchg
cs
push
jbe
rcll
sti
mov
movsb
inc
test
or
inc
push
jae
ss
pop
and
jb
inc
push
jp
mov
sbb
xchg
sub
jl
xchg
xor
sbb
ljmp
sub
lods
adc
add
mov
adc
enter
je
mov
in
repz
cwtl
ss
sub
ret
sbb
js
jne
sbb
mov
jbe
movsb
stos
out
or
lret
cmp
push
push
xlat
or
ret
xchg
fs
js
or
pop
push
nop
test
out
dec
ret
pop
orb
dec
mov
mov
es
xor
iret
or
jae
lahf
xchg
sub
decl
outsl
jl,pn
out
int
es
and
add
xor
and
jecxz
js
outsl
into
adc
in
push
jno
cld
pop
and
int3
outsl
andps
sub
std
icebp
and
add
nop
sbb
mov
mov
inc
inc
lcall
dec
mov
sub
adc
push
cmp
lock
aam
lcall
repz
ds
sub
pop
cmp
addb
sub
pop
in
sbb
cltd
js
xor
ss
inc
test
icebp
and
cmpsb
xchg
cmpsl
rolb
in
dec
mov
ficompl
jle
fwait
dec
inc
imul
mov
das
inc
sbb
les
scas
cmp
mov
loope
sti
mov
dec
xor
lods
cmpsl
int3
movsb
cmp
roll
push
fisubrl
jl
insb
out
adcl
scas
xor
add
cmp
cmp
sbb
out
mov
imul
sbb
sbb
xor
out
inc
jns
fwait
sbb
gs
adcl
push
mov
inc
xor
xor
jmp
xchg
inc
and
shrb
cmp
out
inc
dec
pop
mov
adc
out
xor
xchg
cmc
js
int3
cmp
testl
mov
fsubrs
adc
mov
mov
pop
jge
push
bound
fldenv
jo
out
inc
pop
lret
adc
jg
adc
cwtl
push
pop
adc
and
xor
push
ret
imul
ret
xchg
pop
out
pushf
lret
shlb
push
lods
add
xchg
bound
add
rcrb
arpl
movsl
mov
xchg
cmp
and
inc
inc
cmc
pusha
cmovg
mov
xchg
out
pop
push
sbb
cmc
ror
or
xchg
neg
sub
push
sub
dec
aad
fwait
adc
fcoms
mov
out
push
jle
clc
mov
push
arpl
pop
adc
in
jns
mov
add
mov
mov
dec
pop
mov
sub
inc
cmp
arpl
ljmp
mov
sub
inc
mov
adc
mov
rol
fwait
jge
add
and
sbb
icebp
xor
inc
and
jns
in
enter
push
add
add
add
call
cmp
mov
pop
and
cmc
jecxz
lods
pop
xchg
mov
mov
pusha
out
cmp
pushf
sbb
sbb
sub
aad
push
imulb
cmp
jns
xor
jne
pop
add
call
ret
xchg
xchg
mov
mov
xchg
xchg
iret
xor
add
outsl
jbe
movsb
mov
adc
rcll
stos
in
push
and
aad
pop
and
dec
cmp
xchg
outsl
les
and
inc
clc
xchg
xchg
jne
push
movsb
sbb
idivl
or
aas
sub
dec
inc
loopne
pop
pop
xchg
lds
mov
bound
test
sub
mov
mov
and
mov
jns,pn
mov
mov
add
adc
cs
negl
mov
loop
inc
pop
push
sahf
xorb
inc
loope
or
xor
fs
adc
mov
int
fisubrl
mov
adc
faddl
cli
or
xchg
rorb
jo
xchg
cld
xchg
dec
push
xchg
xor
addr16
sbbb
dec
jnp
sbb
filds
adc
mov
das
jmp
jp
pop
push
push
ret
lods
das
add
or
ret
adc
mov
fmulp
mov
out
movsl
inc
lock
shl
cwtl
or
lcall
js
xchg
lahf
dec
jge
inc
roll
decl
push
jae
adc
push
ja
ret
jl
pushf
jae
xchg
xor
and
ss
mov
mov
adc
and
jbe
data16
lret
inc
adc
add
imul
cld
push
hlt
outsb
inc
sub
mov
jne
in
xchg
lret
in
fldenv
lret
dec
sub
push
lods
pop
adc
ret
or
movsb
lock
mov
dec
loopne
ret
dec
add
push
loopne
and
push
popa
test
mov
insl
xor
ds
jo
aad
insb
mov
fisttpl
adc
push
insl
mov
sub
int
fists
jnp
aad
ljmp
mov
cmc
mov
icebp
add
mov
xor
repz
outsl
jge
cld
insb
jo
stc
push
leave
xor
sub
dec
pop
xor
jmp
inc
sub
popf
lahf
test
push
inc
cmpsb
adc
jle
inc
ret
pop
and
imul
sub
cltd
repnz
fprem
ss
xchg
xchg
cmp
in
xchg
adc
ja
jnp
mov
outsl
or
push
xchg
cltd
add
mov
pushf
cmpl
inc
push
push
in
mov
adc
mov
pop
pop
outsb
dec
ret
xchg
loop
addl
push
mov
fldcw
pop
pop
inc
adc
inc
push
shll
mov
negl
mov
into
out
push
aam
mov
sarl
aas
ja
ljmp
xor
sub
dec
jns
xchg
mov
repnz
fstl
hlt
inc
and
mov
mov
imul
pop
mov
pop
jo
outsl
add
cmpl
adc
sub
subb
sarl
mov
cmpsb
adc
cmp
dec
sbb
call
pop
add
inc
adc
push
mov
clc
jns
stc
stos
inc
fldcw
out
jne
inc
cwtl
push
push
push
xor
shll
fimull
jo
loopne
dec
inc
ljmp
xchg
mov
push
cltd
pusha
push
xor
loope
pop
sub
scas
xchg
cmp
sbb
sbb
mov
andl
xor
ret
rorb
pop
xorl
incl
idiv
leave
inc
out
and
mov
mov
fdivrl
mov
arpl
dec
mov
dec
clc
jp
push
or
add
or
inc
xchg
pop
test
sbb
pop
dec
sbb
arpl
arpl
loope
aad
iret
or
out
dec
pop
fnstcw
fs
inc
mov
fdivl
and
pop
push
xor
aam
xchg
popf
sbbb
leave
mov
popa
movsl
fwait
enter
jge
jnp
and
sub
add
jecxz
xor
cs
leave
imul
stos
mov
jmp
sbb
mov
add
xchg
fimull
fistps
add
pop
daa
xlat
xor
pop
popa
push
add
cmp
mov
imul
sub
imul
imul
outsl
je
outsl
fcmovb
shlb
mov
add
pop
xchg
or
xchg
int
inc
cmpsl
lcall
jecxz
cli
cmpsl
push
idivl
aam
pop
pusha
adc
lods
add
push
or
in
xchg
pop
daa
test
loope
outsb
push
loope
ss
clc
sbb
loopne
aad
inc
add
mov
call
mov
flds
icebp
and
pop
bound
pop
in
shl
stos
mov
fdivr
mov
add
pop
adc
jnp
mov
in
xor
jge
popa
daa
data16
outsb
mov
mov
and
unpckhps
in
and
dec
mov
push
jmp
and
cmp
cmp
jbe
sbb
cmp
dec
das
out
cmp
sub
fbld
je
inc
enter
xchg
inc
addr16
inc
jne
mov
cmpsb
mov
dec
dec
cmp
sub
sti
xor
dec
and
lret
xor
add
mov
jmp
arpl
ja
mov
fildll
std
push
add
jne
xlat
sbb
mov
and
in
sub
xchg
loopne
mov
scas
int3
add
int3
and
mov
push
add
xchg
loopne
inc
cmpsb
ss
add
pop
scas
xchg
loopne
in
mov
aas
in
push
adc
in
scas
jb
fldl
push
daa
nop
sti
xor
xchg
icebp
aam
lea
or
sbb
shlb
dec
fwait
push
out
in
push
nop
mov
and
aam
mov
adc
mov
mov
out
stc
push
jp
jle
test
mov
mov
push
shlb
and
mov
sub
rclb
das
ret
divl
cmp
movhps
sub
outsb
loopne
mov
cli
fnstcw
mov
pushf
mov
leave
adc
cmp
xlat
adc
xor
push
pop
sub
cmp
mov
jbe
or
pusha
lcall
push
mov
repnz
daa
sbb
fimuls
sbb
sbb
jae
fimuls
les
movsb
mov
jecxz
sub
mov
pop
adc
divl
hlt
rclb
or
out
jmp
dec
lock
push
sbb
cli
cs
push
mov
insl
std
inc
jae
ds
ljmp
dec
cs
mov
mov
xchg
lret
lds
and
cltd
test
in
fidivrs
xchg
jmp
sbb
ficomps
adc
add
cmpb
pop
cmp
in
mov
lcall
loopne
jns
xchg
cli
jge
ds
and
mov
mov
pop
ss
out
jge
test
cmp
xchg
das
stos
loopne
testl
divb
dec
clc
out
test
and
icebp
out
and
and
rcrl
push
sub
cmc
adc
rorb
mov
fistps
mull
sbb
cmp
push
jge
add
cmp
xchg
push
icebp
lret
add
out
xchg
loop
xchg
mov
xorl
xchg
cmp
imul
popf
movsb
cmc
gs
mov
sbb
add
jge
outsb
popf
jno
insl
push
push
xchg
pop
cmp
mov
jl
pop
xchg
in
push
mov
adc
cmc
jmp
xchg
pop
shlb
shl
shlb
in
leave
jle
je
movsl
mov
pop
or
mov
jl
insl
jbe
mov
pop
sub
mov
or
pusha
xor
fcmovnu
xchg
xchg
js
fwait
dec
data16
mov
subb
shll
mov
into
sbb
daa
add
repnz
push
mov
pop
mov
push
inc
imul
sbb
sti
push
jle
mov
add
in
cwtl
rorl
mov
pop
push
jp
dec
or
mov
fucomp
lods
cli
mov
sub
jge
dec
sbb
sub
pop
sbb
mov
lcall
ficompl
or
pop
push
jp
dec
or
sbb
mov
lcall
fcomps
or
pop
push
push
adc
and
lcall
jb
lds
aad
in
cmc
aaa
mov
ja
or
popf
cmpsl
jne
add
divl
pop
in
cmc
aaa
test
push
movsl
addr16
inc
xchg
cmpsb
jne
add
out
test
daa
cmc
aaa
test
push
movsl
addr16
inc
xchg
adc
andl
mov
mov
in
pushf
push
mov
ret
fs
add
imul
cld
mov
mov
sub
sub
sbb
mov
pop
out
pop
std
stc
xchg
fsubrs
pop
mov
jae
cmpsb
cmp
mov
lock
inc
cltd
outsl
mov
inc
xchg
jne
lock
add
sahf
jmp
push
cmp
mov
add
xor
popa
in
inc
push
cld
outsl
mov
mov
fsubrs
popa
mov
push
xlat
adc
notl
fmuls
cmp
mov
pop
ss
js
sub
mov
xchg
xchg
fimull
sub
aas
scas
or
faddl
in
movsl
incb
xchg
xchg
xchg
rcrb
dec
loope
inc
xchg
out
or
pop
aad
in
cmc
aaa
test
push
movsl
addr16
inc
xchg
cmpsl
jne
add
out
mov
pop
mov
mov
add
and
add
add
hlt
xor
xorl
xchg
mov
mov
push
loopne
ficoms
loopne
lock
aaa
loop
in
shlb
mov
pop
mov
mov
jne
push
movsl
addr16
inc
xchg
cmpsl
jne
add
out
test
daa
cmc
aaa
test
push
movsl
addr16
inc
xchg
cmpsl
jne
add
out
test
dec
mov
push
mov
aam
xor
xchg
notb
sbb
movsb
and
sbb
mov
fisttpll
insl
sbb
and
or
test
mov
sbb
mov
sbb
je
and
inc
pop
ds
aaa
jp
mov
ljmp
test
adc
adc
test
iret
jp
mov
aaa
jecxz
jge
xor
fwait
fs
nop
stos
sbb
or
dec
enter
gs
int
lea
or
mov
sbb
pop
fwait
push
in
mov
test
dec
inc
stos
push
les
bound
jae
ret
dec
and
std
aam
sti
in
gs
sub
mov
push
cli
lahf
xchg
push
lret
arpl
pop
enter
adc
inc
out
and
cmpsl
test
jg
clc
rol
fnstsw
inc
jmp
cmc
test
out
testb
mov
stc
shlb
aam
mov
insb
imul
in
adc
xchg
pop
icebp
pusha
adc
adc
push
mov
xor
fisubrl
or
sahf
test
fwait
adc
sbb
lcall
mov
in
jge
mov
sub
push
rclb
fs
jl
lock
or
inc
jp
divl
dec
add
subl
pop
sub
fimull
mov
mov
mov
loopne
subb
mov
xor
jp
sub
rorb
iret
int
dec
test
dec
out
lods
lea
pop
xlat
jae
ret
es
adc
push
ds
fdivrl
xchg
dec
mov
sub
nop
paddb
clc
pushf
fwait
leave
sarl
fnstsw
stc
data16
mov
mov
sbb
xor
sti
inc
add
adc
in
xor
jns
inc
push
daa
cmp
mov
dec
jno
cmp
pusha
aas
and
and
int3
add
mov
sub
sahf
sti
repz
out
mov
inc
ja
loopne
stos
movsb
jb
lea
adc
cmp
aas
rcll
data16
pop
ljmp
inc
popf
out
stos
adc
int
xor
add
pop
push
jns
mov
inc
mov
add
rorb
mov
jmp
scas
pop
repz
and
fnstenv
mov
sub
xchg
jae
out
and
jb
xchg
in
movsl
movsl
inc
inc
push
jge
sarl
jbe
roll
cld
sub
sbb
pop
jns
fsubs
sarb
insl
cwtl
rcrl
xchg
loopne
mov
pop
push
pop
and
xchg
mov
xchg
daa
mov
pusha
sbb
sub
mov
jne
mov
inc
jle
xor
shlb
adc
push
inc
cwtl
sub
jle
xchg
subl
in
shll
sub
aam
add
xchg
push
or
rol
scas
lahf
dec
xlat
dec
pop
xchg
int3
dec
adc
gs
mov
cmpsb
dec
lret
movsb
cmp
cwtl
test
sub
ljmp
jns
jo
mov
pop
mov
aaa
push
push
mov
pop
mov
xlat
aam
adc
cmovl
test
push
pop
xchg
shrb
add
jns
mov
and
mov
adc
nop
mov
sbb
imul
stos
pop
inc
mov
sbb
arpl
daa
movsb
lret
mov
mov
lods
dec
dec
xor
pop
lds
shlb
xchg
mov
or
jne
into
frstor
add
pop
push
add
test
cmp
push
iret
xchg
xor
fst
sub
lret
sub
or
test
shrb
sub
shlb
test
popf
int3
mov
out
jp
push
cmp
xchg
mov
xchg
test
inc
std
dec
clc
mov
mov
dec
dec
mov
adc
popa
sahf
ja
sahf
movsb
ja
xor
shrb
dec
push
and
gs
cmp
stos
add
and
add
mov
sub
pop
xor
fdivr
xchg
cmp
cmc
or
mov
popa
lock
sbb
inc
add
add
sub
test
test
xchg
scas
jb
aas
mov
mov
test
sub
psraw
in
ljmp
clc
in
xchg
or
or
mov
mov
mov
xchg
fucom
pop
cmpsl
ljmp
sbb
cli
jno
push
sub
adc
inc
shlb
adc
ret
inc
jmp
push
nop
notb
loope
outsl
pop
jo
and
incl
xor
daa
jb
cld
std
es
mov
sbb
or
es
mov
fmull
nop
sbb
dec
mov
xchg
xchg
gs
jle
scas
jecxz
cs
pop
add
cwtl
lods
enter
dec
xor
add
lret
mov
data16
cwtl
pushf
add
stos
scas
jmp
xor
push
push
cmp
pop
outsb
xchg
or
sbb
mov
dec
pop
or
lods
fisubrs
pop
lret
inc
jl
sti
incl
cwtl
cmpsb
movsl
xchg
jmp
mov
leave
aaa
sbb
pop
push
dec
inc
aaa
push
push
aam
outsl
divb
andb
xchg
leave
lea
cld
in
mov
sub
or
add
jnp
cmp
jl
and
movsb
lods
jnp
lds
push
stc
cltd
cmp
mov
enter
lods
push
adc
xor
xor
loopne
sub
rcr
jg
cwtl
repz
add
idivb
insb
imul
daa
fidivl
mov
aas
test
mov
dec
xchg
sub
dec
into
jo
mov
das
adc
cli
stc
and
push
hlt
adc
imul
sbb
jbe
mov
orb
or
mov
push
sbb
push
xor
jno
mov
jbe
cli
and
leave
aas
push
out
fstps
or
cmp
scas
in
cmp
cmpsb
or
push
scas
pop
fnsave
int3
out
test
outsl
je
jge
mov
stc
sub
and
fistps
sbb
dec
mov
repnz
ja
hlt
insl
rcll
lea
call
cmc
enter
scas
or
pusha
mov
shr
push
sub
mov
xor
inc
test
ds
ret
mov
xlat
and
iret
xor
and
xchg
push
pop
push
outsb
arpl
pop
or
xchg
loope
imulb
xchg
mov
jmp
jp
in
jp
shll
call
lods
lea
test
dec
ds
cmc
or
fldl
out
mov
jle
or
cmp
add
xchg
pop
std
icebp
ljmp
into
nop
and
cli
inc
xorl
pop
cwtl
stos
bnd
jle
loop
lds
dec
xor
add
bound
cmp
xchg
sub
cmpsb
jmp
aam
xor
or
shrl
xor
push
xchg
mov
ja
ficomps
jbe
daa
dec
add
lahf
into
mov
mov
mov
xchg
mov
push
stc
or
jg
jb
test
sbb
stos
stos
lock
push
int
and
inc
sbb
inc
mov
inc
push
jg
call
orb
adc
aam
imul
test
bound
pop
dec
rorl
and
xor
add
and
cmp
jl
ret
push
cltd
subl
xor
subb
gs
mov
popf
mov
jns
sub
adc
popf
pop
lret
fcomp
cld
jo
xchg
mov
jecxz
mov
je
add
push
ret
cld
insl
ds
sub
mov
dec
notb
outsl
pop
mov
pop
cmpsb
fcompl
jae
dec
lock
inc
sbb
adc
sub
mov
cmp
ja
xchg
inc
sub
lock
popa
enter
adc
xchg
in
insb
cmpsl
mov
lds
popa
loope
mov
push
testb
sbb
push
cmp
es
je
dec
pop
cmpsb
mov
xchg
mov
repnz
add
mov
pop
je
jb
cmp
fld
sbb
adc
pop
dec
nop
repz
inc
mov
mov
aaa
jmp
mov
xchg
adc
jle
or
sarl
pop
inc
cmp
gs
data16
loope
jae
push
inc
stos
outsb
test
lcall
les
adc
push
data16
int3
mov
div
mov
or
jle
call
or
sub
imul
movsb
fistps
or
mov
push
ficomps
sbb
xlat
sbb
jge
mov
lahf
outsl
incb
and
sub
push
cmp
mov
mov
pop
and
inc
out
fcmove
pop
and
or
movsl
push
lret
fcmovu
xchg
insb
sbbl
arpl
mov
aam
movsl
xor
imul
mov
mov
das
or
clc
imul
push
in
ss
cmc
mov
mov
pop
daa
into
js
loopne
dec
out
push
movsb
aas
nop
xchg
pop
mov
cmpsl
pop
mov
and
test
cmp
push
mov
rcrb
pop
pop
push
inc
mov
push
aad
add
test
add
fidivs
out
pusha
paddb
jmp
sub
pop
lret
negb
fcoms
outsl
lret
push
push
adc
into
push
fdivrs
in
xor
loope
jl
fcoml
insb
test
mov
push
jmp
pop
mov
fldt
cwtl
xchg
jae
test
push
xor
xchg
xor
pop
fwait
ljmp
xor
mov
ss
cmpsl
xchg
cmp
jne
pop
in
je
in
inc
jb
inc
js
repz
add
mov
push
rcrb
mov
pop
pop
in
xchg
pop
loopne
lds
adc
mov
push
xorb
loop
pop
add
inc
pop
dec
les
add
xor
dec
and
xchg
push
ljmp
dec
push
fcoml
aam
push
cmpsl
add
in
test
adc
add
mov
mov
int
mov
outsl
aam
xlat
adc
insb
xorl
sub
stc
nop
dec
mov
jne
inc
rclb
movsl
fdivrs
test
out
imul
lcall
xor
imul
insb
dec
or
mov
adc
pushf
ret
mov
into
cmp
push
mov
jno
cmp
cwtl
sub
test
insb
je
pop
mov
mov
je
xchg
push
mov
mov
mov
ror
aaa
xchg
mov
jle
or
testl
push
mov
imul
adcb
pop
dec
dec
in
mov
mov
into
xlat
pop
aad
mov
inc
push
cmp
sub
inc
sub
mov
sbbl
pop
jo
daa
jecxz
lret
add
fsubrl
lods
je
cmp
inc
jo
mov
std
sub
ss
lds
lods
outsl
xor
jp
inc
dec
stos
pop
cmpsl
movsb
add
push
jbe
cmc
inc
fimuls
mov
mov
decl
addr16
mov
inc
ret
addl
push
push
inc
dec
stos
sbb
sahf
inc
inc
fcoml
pop
cmpsb
push
push
mov
call
dec
pop
mov
and
fdivrs
xchg
cmp
insl
fmuls
in
pop
jl
inc
mov
push
and
xor
ss
rorl
cmc
add
jmp
test
sbb
cmp
hlt
incl
out
add
and
jl
xchg
sti
dec
and
mov
pop
stos
sbb
sbb
hlt
inc
outsl
push
xchg
pop
xlat
dec
cltd
or
add
aas
jns
and
jmp
stc
dec
test
mov
mov
ja
adc
or
jns
lea
fsubr
sub
repz
adc
inc
sbb
and
stos
dec
stc
xor
jecxz
jg
push
insw
push
cwtl
inc
shrb
cld
les
sbb
loopne
mov
add
mov
pop
xchg
rcrb
iret
in
mov
xchg
aad
sti
addr16
ret
icebp
cmp
lea
xchg
push
or
test
xchg
nop
js
pushf
ljmp
mov
xchg
inc
aam
repnz
mov
xchg
scas
mov
mov
xchg
push
out
jno
mov
fisubrl
jmp
sub
inc
stc
xor
mov
ffreep
cmp
xor
outsb
daa
jmp
mov
sbb
lods
jno
inc
stos
dec
popa
cs
mov
gs
cmc
jl
ret
and
leave
insl
push
leave
pop
std
dec
pop
mov
xorl
sti
fadds
and
sub
pop
pop
and
scas
push
std
mov
addb
jbe,pn
jo
lods
into
adc
jo
aam
cmp
xchg
outsb
lret
addl
pop
mov
aas
mov
scas
jp
xor
std
mov
ss
push
test
pop
and
mov
cltd
push
mov
cmp
sub
repnz
xlat
mov
outsl
dec
jnp
repz
loop
inc
pop
pop
mov
pop
and
jns,pt
xor
int
insb
or
jno
or
dec
fdivr
sub
cli
cmp
push
icebp
sub
les
inc
popf
gs
pop
cwtl
add
xor
push
imul
push
jle
xchg
cmp
in
fsts
in
mov
insb
les
push
aam
fiaddl
adc
outsl
mov
pop
leave
shl
pop
inc
mov
cmpsl
nop
adc
mov
push
add
sbb
les
sub
dec
inc
xor
out
pusha
dec
jb
push
mov
xor
scas
or
subl
orl
fdivp
mov
adc
jnp
xor
movsb
jl
pop
dec
jmp
sbb
lds
pop
inc
xchg
push
adc
inc
cmc
add
xor
mov
inc
out
add
faddl
insl
icebp
pop
push
lds
lea
sub
cmc
imul
mov
push
cmpsb
out
xlat
stos
mov
xor
push
adc
jo
add
pop
push
sbb
adc
and
push
and
cmp
rcl
div
lcall
cltd
xchg
sub
pop
and
push
cs
and
add
pop
sbb
and
xchg
sbb
mov
movsb
jp
adc
incl
in
jns
pop
mov
outsl
popl
sbb
xchg
pop
push
outsl
std
andb
lahf
xlat
int
cs
ss
out
repnz
add
lahf
or
jmp
add
fadds
dec
push
aas
xor
jl
or
xchg
mov
xor
lcall
loopne
push
jne
fucomip
setae
mov
imul
fwait
hlt
ds
enter
sahf
popf
sub
push
movsl
and
or
jg
out
arpl
shrb
pop
test
and
out
imul
je
ja
mov
xchg
pusha
daa
add
or
shrb
jmp
cmc
fsts
mov
sbb
mov
daa
cmp
cld
inc
sbb
or
add
push
ror
mov
ja
insl
adc
lret
inc
pop
mov
adc
shrl
jno
jbe
sbb
jno
push
test
pop
dec
enter
add
stos
sbb
leave
sub
fistl
pop
lcall
cmp
arpl
add
pop
cmc
push
xchg
insl
sub
push
or
leave
and
gs
jnp
mov
fsub
mov
rclb
and
jno
xchg
jmp
jns
bound
or
popa
out
add
sbb
inc
incl
lahf
jp
or
adc
insl
inc
adc
faddl
pop
loopne
mov
jne
sahf
fxch
jl
and
mov
xchg
ret
xchg
lods
cmp
out
out
xor
movups
adc
pop
shlb
lds
and
jge
pusha
sub
test
mov
aad
mov
bnd
cmpsl
sub
scas
add
pusha
adc
mov
xchg
sub
pop
jp
leave
xchg
dec
xchg
jg
ret
push
sub
push
and
pop
adc
bndstx
mov
cmp
mov
mov
rep
cs
jno
ret
sbb
jmp
pop
addr16
stos
popa
stc
cmp
sti
mov
fcoml
sbb
lahf
xor
mov
sub
lea
fidivs
data16
cmpsb
jb
fnstcw
add
das
dec
mov
mov
push
mov
dec
mov
add
xchg
fisubrl
loop
aad
test
sti
or
xchg
add
sbb
je
inc
mov
adc
sbb
adc
aaa
outsl
push
push
adc
cmp
mov
cmp
aaa
push
push
inc
mov
in
in
push
lock
movsl
addl
cmc
pop
ja
fs
adc
lahf
pop
ljmp
addl
xchg
sbb
scas
roll
adc
sub
jmp
pminub
mov
les
xchg
lods
xor
loope
and
mov
mov
sbb
shrb
pop
stos
outsl
jno,pn
scas
sbb
out
int3
in
daa
xchg
add
ret
les
aad
and
repz
stos
mov
shl
fisubrl
inc
nop
lret
je
push
add
js
xchg
cwtl
popa
insl
cmp
xor
lock
dec
add
icebp
insl
pop
push
fstl
inc
xchg
mov
pushf
cs
push
nop
mov
sub
pop
inc
mov
enter
dec
jae
xchg
cmc
fnsave
fsub
mov
jno
enter
mov
mov
xor
aad
push
test
ss
daa
clc
mov
cld
xchg
fucom
sti
pushf
adc
and
jno
ret
out
or
testb
jle
rcrb
push
xor
pop
loop
mov
int3
mov
ljmp
jae
jo
in
test
inc
or
inc
and
mov
test
es
js
movsl
iretw
cwtl
sub
hlt
add
jno
pminub
pop
dec
xchg
or
nop
loop
dec
mov
fistpll
stos
cwtl
lds
gs
cld
test
clc
pushf
arpl
jne
in
xchg
ljmp
sahf
pop
std
cmpsl
jo
lret
mov
xchg
mov
push
push
or
out
scas
pop
pop
add
ror
stos
andl
cld
add
sub
jo
jmp
push
dec
xor
fs
ljmp
outsb
mov
or
dec
fs
jno
in
inc
jmp
movsb
dec
mov
mov
xor
lods
xchg
insb
push
data16
lret
or
jmp
xor
aas
aas
insl
dec
leave
int
iret
aas
jg
xchg
loopne
pop
sub
sbb
and
sub
popf
adcl
add
rolb
pop
jo
je
cltd
cmp
cmc
cmp
ret
pop
mov
jo
cld
pop
mov
push
push
push
or
insb
out
mov
imul
aas
out
cmpsb
dec
xor
mov
pop
or
cmp
sub
fdivrl
add
jecxz
rclb
sub
and
push
add
hlt
cmp
adc
adc
data16
jnp
ss
mov
and
lret
icebp
rcr
mov
scas
int3
cmp
adc
dec
or
mov
insb
xchg
mov
mov
in
ja
fildl
sarb
pop
mov
jp
push
ret
or
enter
lahf
dec
sub
shlb
call
scas
jg
imul
pop
mov
inc
sahf
movl
lret
push
aad
into
xor
inc
mov
data16
aaa
movb
adc
xchg
push
imul
lods
inc
jb
stos
adc
mov
pop
rcl
jle
popa
fstl
xchg
cltd
js
test
scas
mov
xor
inc
cmp
out
adc
cmpsb
iret
std
xchg
xchg
sbb
xlat
or
sbb
push
stos
repz
pop
xor
ljmp
push
add
xlat
test
pop
push
mov
jbe
insb
ret
cmp
fimuls
cli
scas
movhps
cmc
sub
fildl
and
mov
cmpsl
inc
call
aas
aad
rcr
jnp
mov
dec
jnp
sbb
jecxz
xchg
add
into
jecxz
inc
imul
repnz
addl
mov
decb
mov
aam
rcll
insb
and
jno
fdivrs
pop
out
xor
mov
jl
mov
enter
nop
inc
movsl
stc
dec
push
adcl
or
pop
sbb
dec
mov
outsl
das
les
adc
pop
fisubl
cmc
aaa
test
push
movsl
addr16
inc
xchg
cmpsl
jne
add
out
test
daa
cmc
aaa
test
push
movsl
addr16
inc
xchg
cmpsl
jne
add
out
test
daa
cmc
aaa
test
push
movsl
addr16
inc
xchg
cmpsl
je
add
out
test
daa
cmc
aaa
test
push
and
xchg
shlb
sub
sbb
or
enter
rorb
cs
push
pop
outsb
sub
dec
or
scas
call
sahf
fsubr
test
mov
cs
push
pop
outsb
sub
dec
dec
pop
sbb
enter
test
mov
sarb
jge
xor
insl
sbb
sbb
call
in
mov
push
and
jo
sbb
outsb
mov
add
fisubl
scas
adc
les
jp
lds
adc
xchg
pop
imul
pop
mov
ljmp
out
imul
mov
sub
clc
sub
sahf
xchg
jmp
mov
fsubr
test
mov
cs
adc
mov
or
negl
or
pop
in
cmpsb
daa
push
test
fistps
ds
ret
mov
cwtl
jecxz
jl
scas
testl
leave
scas
jle
push
fnstsw
xor
jle
push
js
pop
pop
pop
push
cmp
ss
call
sahf
fsubr
test
mov
cs
push
pop
outsb
sub
dec
or
call
mov
mov
stos
lahf
enter
or
and
or
dec
or
or
call
sti
stos
test
xchg
fmul
ficomps
dec
sub
or
push
cmp
pop
dec
mov
lahf
mov
into
mov
cwtl
cs
push
pop
outsb
sub
dec
or
scas
call
sahf
fsubr
test
mov
cs
push
pop
outsb
sub
dec
or
scas
call
mov
add
test
inc
mov
pushf
rorl
fcmovne
cmp
das
push
ja
or
adc
xor
nop
mov
scas
rcl
cmp
dec
dec
xor
scas
fbstp
out
jne
xchg
cmp
stc
lcall
js
rorb
lret
inc
adc
insb
xchg
cmp
testb
outsb
lret
push
inc
inc
aad
loop
sahf
ret
push
dec
les
out
std
sub
xor
int3
es
or
jge
sub
xor
xor
inc
adc
xchg
sbb
fdivrl
or
pop
adc
mov
sbb
dec
cld
adc
jmp
inc
out
pushf
push
jmp
ljmp
dec
jb
mov
bnd
in
loope
repz
and
scas
repnz
mov
nopl
pushf
out
xchg
push
jp
mov
push
xlat
sti
jne
test
cmpsb
enter
mov
add
pop
xchg
idiv
inc
movsl
mov
push
subb
dec
xchg
std
sub
test
jb
and
popa
mov
pop
leave
in
jg
xlat
inc
or
inc
cmp
lods
and
mov
aaa
icebp
leave
push
push
out
ret
ret
icebp
pop
jne
cmpl
aad
pcmpeqb
aad
adc
outsb
sbb
inc
xchg
add
xchg
cltd
mov
mov
and
ret
or
cvtdq2ps
jae
daa
xor
pop
pop
push
push
xchg
rclb
lcall
cmp
xor
xor
mov
fisubrs
mov
repnz
shlb
movsl
in
popf
lahf
and
int
adc
ret
imul
negl
xchg
xor
adc
fwait
lahf
mov
mov
mov
adc
das
aad
pop
mov
and
push
test
ljmp
in
jp
outsl
daa
pop
popf
cmp
fstps
xlat
or
loope
dec
xchg
out
inc
aad
mov
test
dec
mov
int3
pop
add
pusha
mov
jecxz
cmp
mov
dec
repz
call
adc
dec
test
mov
fidivrl
subps
inc
push
icebp
lea
xchg
lock
paddw
ret
aaa
call
sub
sub
push
cli
out
js
mov
int3
pop
repnz
in
push
xlat
xchg
clc
les
popf
dec
mov
adc
icebp
cmp
push
adc
outsl
inc
lcall
imul
add
or
mov
or
or
iret
popf
roll
iret
repz
cwtl
andl
addb
imul
int
in
xchg
imul
aas
fisubrl
test
out
adc
movsl
imul
std
lea
nop
lret
push
push
jnp
pop
mov
mov
mov
jnp
xchg
test
mov
and
repz
sub
jne
scas
inc
mov
sbbb
addb
push
icebp
or
divb
adc
sbbb
sti
xchg
inc
sub
iret
in
sub
in
mov
mov
add
cmc
or
clc
fnstenv
pop
nop
push
aaa
test
pusha
addr16
mov
mov
adc
and
adc
cmp
push
out
pop
add
pop
mov
cmp
movsl
je
pop
push
mulb
push
mov
jae
inc
es
cmpsb
push
stos
repnz
lods
fdivl
insl
pop
xor
out
mov
negb
mov
and
sbbl
mov
enter
lret
sbb
out
call
xchg
jp
ret
sub
xchg
psubsb
mov
mov
mov
sub
scas
xor
mov
shlb
test
pop
orb
sub
xlat
or
and
inc
push
dec
adc
fwait
sbb
mov
outsl
fs
sub
dec
jl
mov
lock
ljmp
popf
xchg
out
lret
jg
push
shll
xchg
ds
cmp
sti
rorb
ljmp
jb
lret
imul
repz
xchg
call
pop
mov
andl
pushf
scas
fwait
sti
int3
adc
dec
xor
ret
je
push
popa
dec
jp
cmp
imul
mov
add
cwtl
xchg
pop
xchg
inc
push
hlt
xor
cmp
pop
insl
sbb
xchg
pop
xor
xor
ljmp
cwtl
and
cmp
mov
out
repnz
std
lods
pop
cs
sub
add
loopne
jg
test
clc
out
test
jb
push
sti
es
int3
cmp
xor
dec
outsl
xchg
leave
test
pop
cmp
lods
cmp
sub
xchg
cmpsb
cli
and
sbb
imulb
jns
in
out
mov
outsl
scas
adc
xchg
xor
fbld
test
or
shlb
data16
fcmovnb
lock
sub
adc
aad
fimull
call
cmp
xor
jge
js
lahf
pop
ljmp
das
mov
aas
sbb
cmp
imul
nop
inc
fmulp
adc
sbb
sar
fwait
ja
shlb
mov
mov
aad
push
fcmovne
pop
xor
insb
push
or
call
mov
mov
ds
push
and
xchg
lea
sbb
pcmpeqw
and
pop
dec
addr16
mov
dec
jmp
lret
xor
out
mov
dec
fcompl
sub
inc
ficompl
adc
stos
stc
outsl
dec
insb
mov
push
jb
test
aad
pop
pusha
int
test
hlt
push
out
and
cmc
and
aam
not
hlt
pusha
leave
lods
je,pn
adc
stc
mov
xor
jle
fcom
inc
cmp
sarl
test
out
cmc
stos
test
ds
lret
xchg
repz
adc
pop
mov
jmp
or
cmp
cmpsb
dec
dec
sub
cmpsl
loopne
pop
xchg
xchg
mov
shlb
push
pop
sub
mov
adc
push
push
or
push
jecxz
pushf
jle
or
cmpsl
pop
stos
outsl
push
adc
inc
mov
sarb
jge
fsubl
jb
js
fwait
iret
aaa
pop
icebp
dec
outsl
mov
adc
cmpsb
cli
adc
mov
out
inc
xchg
orb
mov
add
push
xchg
scas
cmp
das
xchg
iret
movsb
inc
jecxz
lahf
test
das
ret
repz
cmpb
popf
jmp
sbb
mov
mov
fmul
inc
dec
mov
mov
popf
dec
jmp
push
repz
xchg
xchg
jb
pop
fcmovnb
jle
adc
push
lret
adc
lods
mov
cmp
insl
aam
aas
sub
mov
shll
sbb
inc
mov
ds
push
fwait
out
pop
dec
jnp
dec
gs
je
call
daa
jae
dec
fwait
push
mov
out
xchg
sub
pop
pop
mov
aad
roll
and
pop
xchg
ljmp
ds
les
xor
pop
xchg
mov
rcll
repnz
in
add
push
stos
inc
iret
sub
ss
adc
aaa
push
int3
jl
mov
aas
jmp
in
mov
mov
mov
push
sbbl
sbb
in
mov
push
mov
cli
orl
add
popf
shlb
mov
jno
cmp
push
ffree
pop
add
cltd
mov
xchg
mov
inc
test
mov
shrb
ret
xor
insb
loope,pn
and
push
xor
mov
or
imul
popa
daa
xor
push
ljmp
data16
jp
adc
pop
mov
fbstp
xor
sub
or
fwait
pop
lods
lds
inc
mov
iret
jl
jae
push
pop
xor
mov
cwtl
mov
or
cmovs
xor
and
rorb
pop
add
not
mov
fistps
nop
ds
aaa
fwait
xor
mov
mov
sub
repz
aad
push
inc
cmpsl
scas
sbb
adc
xor
call
loopne
jae
and
cld
push
jp
dec
fldl
mov
mov
icebp
and
fs
ret
fstps
rcll
jecxz
aad
hlt
push
add
out
cmp
pop
xor
jmp
scas
ds
cld
pop
xchg
in
mov
mov
data16
push
jp
push
add
gs
adc
pusha
dec
stos
pop
test
pop
icebp
dec
es
js
test
rolb
fldt
clc
je
and
or
ljmp
fdivl
pop
ds
ss
add
xchg
add
rcr
enter
xchg
pop
cmp
test
xchg
lds
out
sbb
bound
jb
xchg
testb
sub
in
es
aaa
int3
pop
add
lea
in
dec
fldt
sub
jae
in
shl
mov
push
dec
sahf
scas
cmpb
add
xchg
mov
xchg
jne
lods
mov
mov
mov
cwtl
inc
ss
pop
nop
cs
scas
cwtl
orb
pop
out
xchg
imul
outsb
repnz
mov
and
fcomps
cwtl
cltd
dec
orb
mov
adc
jne
popf
ja
cmpsb
pop
inc
cmp
adc
mov
stc
sub
dec
push
jg
dec
push
fsubrl
ss
mov
xor
ficompl
shll
inc
sbb
dec
cwtl
movsb
jle
fucom
adc
add
fstps
std
repz
push
repz
pop
jae
jo
fsubs
ret
cli
mov
repz
cmc
shrb
outsl
xchg
dec
and
add
cmpsl
push
jne
ja
fistpl
mov
adcb
shl
addb
int3
adc
into
test
popa
cmp
xchg
mov
mov
mov
sbb
inc
scas
popf
inc
imulb
adc
mov
test
inc
outsl
push
jg
mov
lret
add
mov
cwtl
jge
push
out
addr16
loope
pop
jne
notl
jns
pop
fnstsw
pop
sbb
fmuls
in
cmp
jo
rol
inc
lret
test
mov
mov
mov
jo
inc
in
adcl
fiaddl
push
add
test
sub
rol
fmull
gs
loopne
xchg
fs
lret
sub
js
sbb
sbb
popf
outsl
inc
pop
insl
mov
cmc
fwait
iret
mov
xchg
pop
push
cmpsb
test
decb
in
fwait
dec
loop
insb
insb
out
or
test
mov
xchg
shr
ss
in
mov
popf
and
xchg
push
scas
jno
xor
and
or
pop
lds
xchg
mov
mov
fcompl
push
dec
rcll
out
or
imul
sub
jge
adc
out
shlb
cwtl
fdivr
loope
mov
mov
lret
dec
jno
fucomi
pusha
jnp
xor
inc
sbb
or
aad
icebp
xchg
mov
sub
add
leave
push
jp
hlt
js
pop
jo
inc
cld
stc
sbb
fcomp
inc
push
mov
scas
sti
lds
or
cmp
sbb
mov
pop
scas
pusha
ret
ja
push
cmp
add
fnstsw
lcall
mov
push
xchg
inc
dec
add
in
pop
lea
fwait
dec
cwtl
jmp
aam
das
pop
scas
jecxz
pop
int
rcll
and
inc
das
pushf
inc
mov
sub
jl
out
mov
fldt
jmp
test
ret
aad
xor
adc
xlat
push
lret
sbb
mov
inc
cmp
gs
loop
ss
jle
sub
jb
mov
pop
or
jo
testb
cld
xor
mov
lods
test
or
pop
add
sbb
adc
inc
jmp
repnz
inc
pop
or
es
enter
adc
jg
xchg
mov
dec
pop
in
ror
ret
push
push
add
loop
xor
pop
in
xlat
dec
cmc
push
jae
movsb
dec
inc
or
loopne
jecxz
shl
data16
mov
into
outsb
orb
sbb
cmpsl
sbb
sbb
mov
adc
mov
sub
jnp
int
mov
sub
mov
shll
aaa
loopne
jno
sbb
in
ret
jno
sahf
sub
xchg
outsb
push
mov
std
or
outsl
cmp
bound
mov
sarl
xor
cmpsl
push
sti
clc
mov
insl
popf
pushf
rcrb
mov
add
arpl
jge
in
mov
push
mov
rcr
pushf
aam
cltd
push
or
inc
iret
ss
mov
cld
arpl
add
rcr
cmp
cmp
mov
inc
lea
or
icebp
dec
ds
adc
push
cmp
int
sub
aam
gs
xlat
test
hlt
test
mov
cs
fcmovnb
test
sbb
xchg
gs
iret
add
lret
inc
sub
pop
add
sbb
inc
lahf
dec
fcoms
es
mov
andl
movsl
xchg
xor
stc
push
sarl
mov
cmp
mov
xlat
lds
test
xor
dec
xchg
xlat
insb
iret
push
or
lock
adc
sahf
js
les
push
stc
sbb
ret
inc
lods
push
int
movsl
push
xchg
jge
pop
xor
repnz
adc
jl
or
sub
pop
arpl
sub
mov
mov
push
fsubl
loop
inc
inc
add
mov
aam
shrb
or
test
xchg
jb
xchg
mov
xor
movsl
jl,pn
out
cmpsb
push
sbbb
adc
dec
jnp
mov
cmp
stos
adc
adc
or
inc
jg
jle
inc
pusha
mov
mov
adc
je
push
fstpt
mov
mov
stos
pop
ret
iret
xor
js
mov
jle
or
dec
popa
add
push
or
insb
pop
xor
xchg
insl
rcll
daa
jne
lods
sbbb
mov
push
pusha
fmull
cmp
push
or
cs
hlt
mov
cmp
popa
sbb
bound
mov
push
pop
test
mov
or
add
iret
lcall
loopne
jmp
pop
bound
loopne
icebp
ds
xor
cmpsb
or
push
outsb
mov
mov
jnp
jl
lods
dec
adc
stos
pop
cmp
sti
mov
mov
jp
loope
in
scas
ja
dec
jbe
or
bound
in
divl
add
fsts
sub
frstor
inc
lret
push
xor
bound
loopne
data16
rcl
into
cmp
or
outsl
push
in
add
mov
iret
mov
rclb
jnp
xchg
iret
addr16
pop
lret
fcmove
push
dec
push
fisubrl
rolb
dec
xchg
xchg
push
sahf
inc
ret
int3
push
adc
cs
cli
mov
xor
repz
aam
mov
sti
dec
dec
mov
mov
flds
pop
xchg
cltd
add
inc
stos
pop
push
ljmp
cmp
aaa
scas
sub
push
fwait
cmp
out
nop
adc
jnp
jp
std
sarb
aaa
in
stos
popl
addr16
push
xor
add
fwait
loope
adc
loopne
or
xor
cmpb
fsts
fmul
dec
push
sbb
or
jle
pusha
push
mov
in
lcall
add
push
repnz
cmpb
dec
mov
inc
or
xchg
pop
std
push
ljmp
les
mov
adc
mov
ffreep
and
xlat
sbb
into
pop
mov
jbe
mov
push
xor
sub
stos
jge
adc
jae
test
nop
fistpl
ja
jnp
or
imul
adcb
and
xchg
jno
mov
mov
adc
pop
mov
cmp
enter
and
lock
icebp
popa
sbb
adc
adc
jae
test
mov
fdivr
sbbl
or
jns
adc
out
nop
cmp
insl
es
int
push
jmp
pop
inc
pop
cli
std
inc
test
and
shrb
or
js
testb
cmp
imul
adc
rcr
fisttpll
sub
lahf
mov
or
scas
nop
jle
cmp
xchg
mov
daa
cmp
clc
in
push
scas
inc
and
jne
cld
mov
packuswb
add
mov
add
xchg
jp
call
lods
or
mov
dec
in
cmpsl
jl
and
ss
or
mov
cmpsl
inc
addr16
pushl
pop
inc
mov
fimuls
xchg
jne
mov
jmp
nop
mov
mov
jo
sub
sbb
ficomps
add
ja
jecxz
loope
jo
add
int
sub
popf
aam
or
mov
in
packuswb
jecxz
and
mov
push
or
push
mov
add
mov
lret
in
pop
inc
popl
int3
insl
fs
insb
sbb
push
rcll
jg
sub
jmp
popf
cld
push
ret
add
sti
imul
lret
shrb
out
lret
pop
mov
dec
test
pop
cmpsl
mov
test
mov
cmp
or
mov
out
push
and
out
ja
pop
push
add
sub
movsb
cli
sbb
ljmp
cmp
or
gs
xor
dec
mov
es
or
shl
sbb
loopne
xor
std
jle
mov
pop
mov
fcompl
sbb
and
test
add
sar
aad
inc
sbb
stc
and
fcomps
mov
lret
test
das
daa
shl
cmp
mov
fdivl
sahf
add
ljmp
and
popa
inc
mov
xchg
call
cmpl
pop
sbb
mov
mov
mov
shll
mov
lcall
adc
daa
jo
xor
cli
mov
adc
scas
jns
mov
les
aaa
pop
jnp
cmc
stc
mov
loope
and
into
jg
in
shll
cs
rcrl
jge
aaa
insb
es
mov
aaa
mov
fidivl
dec
jp
pop
rcrl
pusha
push
lcall
mov
aaa
out
pop
dec
jmp
xor
xchg
lcall
cmpsl
mov
outsb
add
push
jmp
hlt
mov
inc
sub
jne
cmp
cmp
sub
xchg
xchg
and
mov
mov
jge
nop
icebp
mov
mov
cli
mov
jo
pop
loope
jge
cmc
ljmp
incl
dec
pop
mov
in
pop
in
cmp
jb
and
int
mov
mov
sub
mov
pop
cli
subl
test
dec
mov
pop
cmpb
gs
pushl
insb
mov
div
jp
cmp
in
cmp
ret
mov
call
outsl
shrl
insl
inc
mov
push
std
stos
es
and
mov
mov
sub
jge
xor
icebp
pop
in
xchg
lock
mov
inc
jle
mov
enter
data16
add
loope
dec
mov
mov
fdivrl
sbbl
mov
cli
scas
fs
dec
cwtl
es
inc
repnz
repz
int3
and
mov
les
push
stos
xchg
dec
sbb
fildll
xchg
inc
ss
fisttpl
cltd
inc
xchg
ret
push
or
pushf
mov
inc
and
scas
and
test
test
sbb
or
popf
in
cltd
jbe
loopne
enter
shll
das
jbe
sbb
or
fldcw
pusha
sti
jno
xchg
pop
ss
scas
popf
in
cmp
mov
add
push
adc
ret
movsb
xchg
stc
sbb
rcl
jbe
adc
and
jno
inc
mov
xchg
sub
jg
cwtl
imul
fcmovbe
int
fisttpll
jecxz
jle
lock
lret
movsb
push
faddl
popa
scas
or
push
stos
jl
shr
rclb
scas
push
ret
in
inc
rcr
fucom
insl
jb
pop
in
inc
push
xchg
std
lds
mov
inc
pop
mov
jne
xor
mov
loope
inc
push
bound
cmp
je
div
push
push
xor
dec
pop
mov
jbe
mov
jbe
mov
leave
and
push
push
ss
and
out
fnstcw
ds
notb
pusha
inc
movsb
xchg
std
jo
iret
jl
pop
adc
mov
into
iret
mov
in
imul
leave
cmp
loope
pop
mov
ljmp
cmpb
movsl
add
sbb
call
xor
pop
das
fcomps
mov
mov
clc
ror
sahf
fsubr
test
mov
cs
push
pop
outsb
sub
dec
or
scas
call
sahf
fsubr
test
mov
cs
push
pop
outsb
sub
dec
or
scas
call
sahf
fsubr
test
cmp
mov
cwtl
cs
push
pop
outsb
sub
dec
or
scas
call
sahf
fsubr
test
mov
cs
push
das
sbb
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
enter
call
cmpsb
ljmp
sbbl
push
jns
or
sbb
sub
cmp
enter
call
xchg
cltd
dec
inc
pop
push
push
sub
pop
sub
cmp
enter
call
mov
fildll
inc
jnp
add
js
or
pop
push
push
push
xchg
cmpl
mov
outsb
mov
int3
xchg
test
and
pop
sbb
cmp
add
adc
xchg
pop
or
cwtl
sbb
pop
inc
dec
mov
notl
sbb
lods
mov
cwtl
scas
rorb
add
outsb
and
in
dec
inc
or
push
hlt
gs
repz
enter
and
imull
addr16
mov
cwtl
adc
adc
stos
fmuls
sub
sbb
or
mov
xchg
sub
dec
mov
xchg
add
cmp
sub
push
and
adc
pop
xchg
mov
sbb
insl
lret
mov
imul
xchg
clc
testl
inc
pop
ljmp
js
or
sbb
sub
cmp
orl
mov
daa
push
inc
sbb
push
jle
lods
cmpl
ljmp
xor
jbe
inc
inc
dec
inc
lods
mov
aaa
xchg
cwtl
xchg
test
mov
push
push
pop
sbb
sub
cmp
enter
call
xchg
mov
inc
pop
push
push
pop
sbb
sub
cmp
enter
jne
xlat
sbb
lcall
or
imul
jecxz
loope
lods
clc
jg
aaa
xchg
push
sar
sti
or
dec
sub
data16
xchg
test
mov
into
sbb
rolb
mov
mov
iret
or
xchg
mov
loop
scas
adc
push
test
outsb
cmp
adc
pop
sbb
lock
pop
out
dec
pop
mov
cmc
movsb
mov
inc
aas
int
cmp
fcomps
sbb
inc
and
fwait
dec
popa
in
mov
fildll
dec
inc
jnp
ret
loope
and
and
adc
xor
pop
fbld
decb
and
rcrb
aaa
mov
loopne
movzbl
adcb
ret
inc
mov
shl
mov
xlat
lds
add
addr16
and
push
or
lret
dec
sub
push
ljmp
or
imul
mov
and
and
xchg
lods
into
cmp
ret
push
pop
fwait
mov
je
inc
shrl
sub
pop
cmp
xor
ljmp
imul
pop
pop
orb
pusha
daa
dec
sbb
cld
lds
cmpsb
outsl
ja
aad
xor
pop
int3
icebp
sbb
in
xor
cli
mov
cmp
adc
cltd
pop
mov
adc
mov
sbb
dec
jns
push
je
or
lcall
add
lcall
or
add
out
inc
test
scas
stos
stos
xlat
stos
leave
xchg
cmp
ljmp
into
cmp
push
cmpsl
inc
adc
xlat
mov
mov
das
iret
repnz
cmpsl
insb
jle
popa
call
or
pop
mov
cmc
push
xchg
sbbb
xor
arpl
mov
inc
mov
xor
cmpsl
add
xor
and
and
xchg
or
xchg
sarl
or
jns
xor
sub
inc
add
mov
mov
in
mov
fadd
push
mov
inc
rclb
xchg
pop
adc
mov
fwait
add
jno
aad
scas
push
add
push
pusha
in
inc
test
mov
divl
movsb
mov
mov
dec
push
hlt
mov
lcall
lahf
mov
movsl
and
push
pop
cmp
xchg
std
into
loop
les
imul
inc
aas
or
push
lahf
cmpsb
inc
xchg
push
ret
jp
aaa
or
popa
gs
fimuls
mov
lods
sbb
adc
jl
lods
pop
mov
add
or
pushf
mov
dec
jb
gs
daa
cmp
sub
pusha
jns
loop
test
push
push
imul
adc
jecxz
push
lahf
add
inc
inc
xchg
mov
notb
js
movsl
andnps
addr16
sub
das
roll
loopne
test
inc
cltd
jne
insl
xchg
repnz
sarl
fwait
clc
mov
inc
jg
xchg
push
movsl
iret
fistl
dec
outsb
gs
pop
cmp
repnz
inc
stos
jo
jmp
inc
push
jp
xchg
pop
lock
mov
inc
call
mov
scas
push
out
xchg
loop
mov
jle
iret
les
cmpsl
mov
orl
enter
sub
or
fisubs
xchg
out
scas
ror
mov
pusha
pop
adc
adc
add
mov
shrb
es
pop
es
jl
mov
mov
nop
imul
pop
xor
dec
lds
xor
cltd
fwait
or
jg
std
cld
push
mov
and
inc
dec
add
xchg
cmpsl
shlb
movsb
and
movsl
mov
mov
xor
test
mov
pop
inc
int3
pop
lahf
and
inc
mov
mov
repz
insb
dec
jae
sub
andb
outsl
mov
jmp
add
out
xchg
cmp
lcall
mov
cld
aam
xchg
sahf
ja
mov
pop
int3
dec
and
mov
and
adc
popf
inc
ret
stos
jle
les
sbb
ret
jle
mov
cmpsb
mov
mov
insl
movb
ja
mov
push
inc
sub
icebp
rcrb
push
xchg
push
in
loopne
jmp
and
sbb
push
pop
sbb
mov
inc
jl
ja
pusha
fsubr
cld
shll
add
int3
and
addb
dec
jge
repnz
lret
mov
notl
and
mov
aas
mov
ret
lods
jns
and
popa
jp
leave
je
repz
dec
dec
movsb
dec
jmp
pop
mov
push
add
mov
dec
pop
cmpl
mov
ficoml
push
loopne
dec
pop
inc
xchg
adc
add
pop
fyl2xp1
aaa
repnz
aad
adc
jmp
sbb
pop
ss
lcall
mov
in
je
test
mov
loope
data16
add
jo
movsb
or
stos
dec
add
inc
addl
rorl
mov
mov
inc
sarl
aas
xchg
fisubl
or
jmp
ljmp
out
mov
and
inc
xchg
mov
mov
mov
inc
xchg
rol
sbb
cwtl
rcrl
pop
scas
imul
rorb
jne
pop
repz
mov
mov
cmc
testl
pop
mov
fdivl
out
in
mov
or
mov
mov
test
pop
jbe
lahf
pop
pop
scas
jp
sub
jne
jae
mov
pop
jae
arpl
fsubs
mov
pop
cmpsl
pop
jo
je
and
xchg
lret
xchg
xor
xor
pop
and
and
jle
and
aad
cmc
push
popl
stos
scas
call
inc
xor
xor
dec
cmp
pop
data16
int
sbb
leave
adc
mov
imul
int
push
mov
push
inc
inc
lock
jp
out
fmuls
in
sub
fimull
and
gs
xchg
add
aaa
xor
lods
enter
aam
insl
or
push
flds
pop
fistl
data16
adc
pop
jnp
stc
fcomps
and
sbb
in
test
cwtl
dec
inc
in
shll
mov
lcall
enter
jg
xchg
inc
js
lods
les
and
jp
inc
in
adcb
pop
mov
dec
or
mov
push
xor
rcrl
andl
cltd
add
mov
in
data16
movsb
in
pop
push
adc
inc
pop
mov
ja
or
adc
sbb
out
out
mov
les
outsl
rorb
aaa
add
sbb
insb
or
jne
inc
pop
call
xchg
scas
loope
ret
or
push
sahf
or
or
mov
dec
sub
push
enter
lds
repnz
rol
push
fisubl
imul
fdivr
cmp
lock
aam
jge
dec
adc
mov
xchg
imul
push
xchg
leave
xchg
mov
loop
jno
sbb
dec
fimuls
ficomps
daa
lea
int
mov
cwtl
sbb
cld
inc
jo
sub
mul
mov
or
fsubs
shlb
into
dec
xchg
mov
jno
ret
and
lods
data16
lods
jno
popa
cmp
add
xor
jp
jbe
or
mulb
inc
das
mov
movb
adc
pusha
outsb
les
rorl
pusha
cmp
adc
xchg
insl
aas
shrb
lcall
xchg
fwait
jb
add
and
js
jmp
shl
lret
out
lods
jnp
arpl
pop
xor
insb
pop
addr16
clc
cmp
dec
xchg
xor
in
push
ljmp
lret
outsb
stos
lret
xchg
hlt
push
lahf
mov
fisttps
or
pop
in
or
lea
pop
jno
mov
clc
adc
stos
outsl
push
jns
push
jle
ficoml
es
je
fidivl
inc
and
dec
ljmp
push
and
push
rolb
insl
or
pop
sbb
divl
or
sbb
push
sbb
sarl
add
mov
orl
cmp
pusha
cmp
xchg
push
xor
mov
ljmp
sbb
pop
mov
xor
test
mov
lods
or
scas
jecxz
stos
mov
ret
lds
dec
cmp
popa
sub
sub
sub
out
and
imull
andb
out
sbb
ljmp
fsubl
dec
gs
aad
mov
sub
lahf
inc
cmp
dec
movsb
sbb
jl
push
mov
pop
adc
in
add
xor
das
aas
in
push
xchg
or
scas
pop
jnp
outsb
flds
popa
repz
pop
popw
rep
pop
pop
sbb
pushf
jmp
inc
adc
mov
sahf
call
movsb
xor
dec
dec
sub
sbb
movsb
add
mov
and
sbb
fbstp
clc
and
enter
adc
jmp
sbb
aaa
and
int3
mov
push
mov
dec
cwtl
pop
sub
cmp
popf
xor
inc
add
jno
push
mov
out
lods
lret
mov
dec
leave
enter
mov
jbe
dec
hlt
pop
xchg
jnp
xchg
mov
into
pop
inc
add
cmp
sbb
ds
adc
das
pop
sbb
mov
les
fdivrl
mov
sub
jmp
push
pop
inc
sar
xchg
mov
fldt
mov
pop
lock
cwtl
dec
daa
out
xor
outsb
cmp
pop
push
xor
loope
iret
insb
cmp
xlat
and
mov
aas
aaa
sahf
mov
and
stos
jmp
addr16
in
andl
jno
scas
nop
loop
sub
or
cwtl
sbb
jmp
dec
std
adc
or
mov
pop
pop
sub
pusha
sbb
jnp
sub
gs
fdiv
pop
or
fcomps
je
mov
outsl
leave
ror
in
out
call
jae
fiaddl
mov
fcmovb
xor
movsb
int
push
call
mov
push
xlat
aas
inc
adc
xchg
insb
test
bound
insl
imul
addl
shlb
orl
pop
ss
push
fimuls
mov
mov
sub
mov
add
cmp
xlat
ret
dec
imul
divb
push
icebp
pop
icebp
ds
and
fwait
push
lods
xchg
mov
push
vandnps
ja
jl
mov
mov
lea
aad
outsb
adc
sub
pop
adc
push
repz
iret
push
daa
jno
int3
int3
roll
scas
enter
inc
adc
push
push
sahf
mov
push
repz
or
inc
out
into
insl
aaa
fimull
insb
lret
bound
fdivl
add
scas
repnz
add
fsubr
lods
nop
fists
xchg
insl
jmp
mov
leave
arpl
shrb
add
insl
mov
subl
mov
and
enter
add
mov
fs
push
fisubs
or
push
ficoms
xchg
lods
call
jae
call
jns
arpl
cmc
shll
adc
lahf
adc
out
xor
xchg
or
adc
ja
stos
mov
aam
andb
xor
sbb
or
sub
rcrl
jp
mov
loop
mov
movsb
scas
fcomi
or
mov
push
xchg
jge
adc
or
sub
outsl
inc
test
or
fdivs
adc
rcrb
jg
pop
shrl
xchg
jge
cli
arpl
inc
dec
mov
clc
xor
cs
xchg
in
sbb
es
push
jo
inc
mov
lret
insb
or
sub
jge
mov
clc
cli
into
je
push
into
mov
inc
xchg
add
pop
push
mov
mov
sbb
adc
mov
in
mov
mov
call
xchg
push
cwtl
dec
push
adc
in
sahf
daa
push
mov
sbb
subb
dec
out
xchg
xor
fcmovne
aad
sahf
imul
fiadds
sbb
push
movsl
mov
je
mov
push
dec
cmp
xchg
pusha
sti
mov
mov
adc
int
outsl
pop
add
and
mov
mov
out
cmpsl
and
xchg
jne
into
out
lret
test
jae
jne
and
inc
mov
sbb
aam
aas
aaa
push
loope
scas
jbe
adc
and
fidivrs
stc
inc
xor
or
in
pop
cli
pop
and
test
loopne
jle
jb
jmp
inc
cmpb
test
popa
arpl
loope
mov
bound
leave
jg
test
je
lock
or
test
out
pop
sbb
jl
test
loopne
ljmp
hlt
mov
jno
jl
ds
insb
jno
mov
sbb
and
or
lret
adc
cmp
ds
aas
jge
std
jecxz
pop
cmpsb
addr16
lods
and
mov
sbb
push
xor
stos
mov
and
aad
shrl
mov
pop
pop
and
mov
aas
push
mov
cmc
lahf
sub
push
mov
mov
push
jmp
mov
cltd
je
push
lcall
shll
sbb
je
gs
imul
sub
push
or
insb
cmp
mov
loope
fnstenv
outsl
sbb
popa
mov
cltd
sbb
leave
and
insb
fcmovb
xchg
sub
test
out
xchg
inc
add
cwtl
add
pop
fsubs
xchg
push
subb
aaa
pop
call
hlt
cmp
lods
pop
in
lods
cmp
sub
pop
aas
mov
jbe
sbb
lcall
xor
je
push
insb
out
pop
cmpb
add
push
lret
push
sbb
or
dec
cmpl
cltd
cld
or
adc
mov
gs
sti
and
dec
mov
cli
pusha
aaa
aad
sbb
pop
gs
pop
add
leave
dec
pop
cmp
sbb
nop
icebp
loop
push
ja
roll
int
cli
into
and
inc
mov
sbb
pop
fistpl
mov
pop
inc
cmpsl
mov
pop
mov
jnp
or
or
stos
or
movsb
mov
mov
sub
pushf
testb
add
inc
or
jnp
mov
mov
daa
xor
daa
fisubrs
repnz
cs
add
int
aaa
inc
sti
cmp
iret
sbb
mov
ljmp
xchg
out
test
iret
inc
xchg
mov
push
std
fistl
dec
and
jge
stos
adc
push
xor
add
addb
mov
inc
adc
jne
dec
scas
test
mov
add
loop
jnp
pop
movsl
jge
lea
loopne
cpuid
inc
xchg
andb
pop
or
movsb
bound
mov
movsb
lea
imul
fsubr
fs
push
pop
adc
xor
lret
out
push
ss
xor
std
inc
ja
fldcw
xor
push
aaa
cmpsb
int
jae
jge
mov
add
ret
push
fdivl
loope
mov
mov
xor
cltd
fwait
mov
adc
xchg
jo
mov
stc
daa
xor
aaa
pop
pop
addr16
jne
add
inc
and
cwtl
jnp
inc
and
adc
es
jbe
jne
ret
adc
mov
and
sarb
xchg
cmp
leave
pop
mov
lret
jge
loop
adc
dec
push
movsl
and
xchg
jbe
and
xorb
xchg
frndint
aaa
sub
jg
rorl
dec
loope
sub
mov
sub
xchg
dec
xchg
sub
adc
popa
adc
sbb
sbb
adc
imul
rcrl
adc
inc
hlt
dec
jnp
mov
test
pop
lock
test
movsb
jne
pop
inc
fisttps
mov
jmp
and
std
sbb
mov
xchg
jo
addr16
xchg
outsb
js
jge
imul
add
push
jge
dec
dec
pop
test
imul
lahf
xor
shrb
cmp
xchg
aas
aaa
insb
or
les
xor
sub
mov
fnstsw
loope
cmp
in
jae
aam
xchg
ret
gs
mov
bound
enter
jmp
enter
fbstp
mov
fbstp
insl
push
js
sub
scas
mov
setne
nop
rorl
out
lds
xor
dec
mov
testl
movsl
adc
les
mov
popf
mov
xchg
push
incl
aaa
bound
fcomip
rcll
add
mov
ret
and
aad
and
loop
out
dec
mov
cmpsl
xor
scas
ror
daa
jmp
ja
sbb
inc
jno
inc
jge
cmp
sub
cmp
and
pop
ja
repz
gs
mov
dec
aas
jnp
test
jbe
fwait
adc
mov
or
or
cmp
mov
cmp
es
sbb
mov
inc
out
push
andl
addr16
ret
inc
addr16
push
cwtl
adc
stos
stos
mov
out
push
insl
loop
and
or
cmp
imul
pop
jmp
dec
int
xor
stos
stc
push
cmpsb
sbb
clc
das
cmc
sub
mov
push
ret
inc
and
mov
jp
mov
stos
mov
pop
loop
insl
or
pop
jns
xchg
pop
jne
push
mov
pop
sti
arpl
adc
fs
mov
loopne
xchg
mov
jl
cmp
adc
fcomps
dec
leave
add
pop
scas
call
ret
cmp
in
out
div
pop
mov
fwait
mov
adc
lock
dec
mov
xor
in
adc
jo
movb
mov
int
cmp
pop
aam
pop
push
push
in
fxch
mov
ficompl
bound
adc
lret
pusha
inc
and
push
outsb
sbb
fstps
or
in
aad
cmp
je
clc
lock
into
dec
js
jge
and
fnstenv
pop
int3
xchg
hlt
xchg
les
stos
jae
add
testl
imul
insl
push
sbb
adc
xor
jecxz
cmp
xchg
pop
fildll
shl
add
push
cmp
lret
out
dec
bound
cmp
inc
pop
icebp
sahf
push
jbe
pusha
or
sub
loopne
sbb
lock
lret
bound
lret
sbb
jne
adc
imul
inc
ret
pusha
int
scas
imul
inc
push
out
arpl
sbb
adc
loop
ds
or
pop
cwtl
or
fdivp
jo
adc
xchg
jb
cmpsb
loop
jne
dec
push
ss
add
inc
shr
inc
mov
jg
nop
fbld
inc
sarb
nop
fnstsw
or
push
outsl
inc
int
mov
fwait
out
jle
cwtl
fisubrl
mov
fdivs
sbb
dec
fsave
push
fnsave
call
pushf
cmp
in
cmp
mov
xchg
or
push
sarb
xor
jl
lret
repz
inc
mov
es
push
mov
lret
xchg
rcl
fmul
cs
stos
xor
popf
lcall
jns
cmp
dec
xchg
pop
cltd
push
int
mov
leave
lock
das
jmp
in
mov
nop
sbb
mov
dec
popa
int3
xor
mov
push
scas
in
addb
popf
mov
pop
push
hlt
and
pop
ret
xorb
ja
jecxz
adc
insb
fists
fstl
adc
push
mov
fistps
sarl
xchg
test
nop
push
loope
cmc
js
iret
int3
inc
arpl
imul
mul
mov
pushf
push
popa
dec
ficoml
outsb
clc
sub
push
sahf
andl
lret
outsb
inc
sahf
adc
xchg
jp
pop
mov
sub
sbb
mov
inc
call
push
pop
js
lahf
decl
mov
cmp
cmp
sub
inc
inc
dec
scas
popf
xor
rclb
mov
mov
imul
loope
loop
sbb
adc
or
sti
xchg
popl
cmp
xlat
and
inc
pop
ja
push
dec
jo
cmp
repz
adc
in
dec
xor
sub
or
push
push
mov
popf
adc
int3
sahf
gs
ficomps
movsl
or
lock
lods
mov
notb
lcall
dec
lret
js
fimull
mov
test
fistpl
lea
sub
push
mov
test
xor
xchg
mov
out
popf
mov
xlat
jmp
xchg
mov
inc
pop
push
push
pop
sbb
sub
cmp
enter
call
xchg
mov
inc
pop
push
push
pop
sbb
sub
cmp
enter
push
xchg
mov
inc
pop
push
push
add
pop
sub
cmp
enter
call
xchg
ja
mov
js
js
push
dec
mov
cmpsb
mov
mov
divb
iret
push
pop
es
jg
outsl
push
pop
pop
jbe
xchg
mov
out
iret
mov
push
das
push
jle
aas
sub
pop
dec
jbe
xchg
or
shl
negb
or
ja
push
adc
sbb
add
lahf
into
out
sti
out
roll
in
arpl
orb
outsl
inc
pop
in
dec
sub
push
push
pop
cli
or
rol
outsl
push
push
out
inc
cld
leave
jb
jmp
addb
pop
data16
inc
xchg
fwait
ljmp
push
xlat
adc
das
fwait
or
outsw
push
sub
jecxz
into
arpl
mov
mov
add
xlat
and
jmp
addb
pop
insb
dec
ja
repnz
cmp
dec
addr16
push
mov
stc
lods
pop
pop
cmp
inc
mov
xor
sahf
mov
testb
push
push
and
cli
mov
pop
sub
fdivrp
and
inc
cmp
pop
dec
arpl
xchg
xchg
lahf
cmpsb
mov
xchg
imul
imul
gs
insl
dec
pop
sbb
jmp
divl
stos
mov
jl
jp
push
or
pop
sub
repnz
repz
ret
out
mov
stos
mov
pop
dec
jge
pop
jne
push
push
sub
push
xor
sbb
ret
aam
shrl
iret
idivb
push
das
push
pop
es
jg
outsl
push
pop
dec
jbe
xchg
mov
out
iret
idivb
push
das
push
pop
es
jg
outsl
push
pop
dec
jbe
xchg
pop
dec
dec
je
mov
cmp
out
fmull
loop
mov
xchg
jmp
bound
test
imul
sub
in
cld
inc
popf
cld
dec
cmp
outsb
xor
mov
outsb
hlt
xlat
lahf
inc
inc
cmpl
arpl
and
cmp
or
scas
xlat
push
jno
setbe
jno
cld
inc
enter
mov
adc
movb
add
jg
xchg
outsl
pop
push
out
mov
add
mov
mov
mov
jo
cmpsb
xor
pop
shll
xor
push
dec
cmp
daa
out
imul
cmp
push
mov
orb
out
inc
add
push
sbb
mov
xchg
and
sub
mov
add
xor
cld
jmp
sbb
imul
sub
sub
cmp
dec
adc
mov
lcall
adc
xlat
mov
pusha
jle
fdivs
inc
fs
lds
lahf
out
loopne
aas
cmp
adc
and
inc
test
int
mov
inc
cmp
imulb
lret
hlt
test
pop
and
aam
push
xchg
gs
jb
shlb
negl
inc
jp
add
sub
cmp
inc
in
pop
mov
xchg
xchg
add
mov
add
mov
sbb
rclb
fnstsw
jmp
push
mov
mov
sub
cmpl
subb
xchg
xchg
mov
aaa
add
add
inc
cmp
xlat
push
cmp
clc
add
xchg
inc
scas
and
and
or
lods
movsl
adc
push
fisubrs
lret
lahf
lcall
mov
jbe
fsubrl
cmpsl
sbbb
sbbl
inc
jp
sub
add
cmp
jecxz
xor
dec
sub
and
outsl
int3
cmpsl
push
movsb
fcoms
dec
dec
popf
out
dec
add
pop
mov
jae
movsb
xchg
daa
pmullw
rolb
dec
pop
mov
in
mov
mov
cmp
xlat
mov
out
add
xor
imul
xchg
mov
popa
sbb
std
and
sti
or
adc
mov
repz
mov
mov
int
xor
hlt
adc
into
cmp
in
jle
xor
lock
ret
dec
or
bound
sub
int
pop
adc
mov
xchg
dec
mov
add
fbld
mov
pop
sub
daa
add
pop
push
mov
outsl
add
xchg
iret
in
cmp
movsb
xor
mov
sahf
orl
mov
sbb
cmp
fldl
adc
into
sbb
mov
inc
adc
cmc
adc
push
pop
jnp
or
mov
aam
adc
sti
xchg
mov
dec
dec
enter
mov
jns
hlt
int
iret
bound
jo
inc
sbb
pop
xchg
ret
out
call
inc
pop
sub
adc
cmc
aam
push
xchg
popa
or
jl
cwtl
jl
scas
pusha
jle
gs
pop
roll
cmc
out
mov
jge
sbb
xor
pushf
notb
ss
adc
mov
mov
dec
fnsave
ja
and
ljmp
insl
xor
adc
loop
sbb
out
and
fs
add
sub
orb
push
pop
aam
addb
dec
push
pop
test
ljmp
adc
fisttpl
push
insl
loope
pop
cli
pop
sbb
cmc
mov
mov
mov
aam
inc
mov
cwtl
mov
sti
push
cmp
cmpxchg
inc
fs
adc
pop
enter
dec
push
sahf
add
test
push
enter
cmp
mov
mov
arpl
cs
dec
mov
insl
aaa
lea
xchg
jle
dec
sub
add
comiss
ljmp
add
arpl
loope
lret
dec
dec
xchg
or
rcrb
and
xchg
loopne
pop
mov
outsb
test
mov
pop
adc
insl
xchg
out
mov
pop
das
jbe
xchg
push
out
mov
test
mov
jb
ret
je
sbb
mov
fwait
or
pop
scas
mov
cltd
orb
push
push
inc
jae
pop
push
imul
add
dec
mov
push
out
jecxz
mov
push
push
sub
xchg
push
push
and
xchg
subl
outsb
in
push
mov
cmpl
xor
stc
icebp
rclb
aaa
imul
out
jmp
dec
mov
lock
adc
push
jp
icebp
lret
cmp
mov
add
mov
js
or
add
negl
rclb
xor
jne
xchg
jp
cmc
out
add
lods
test
imul
movsl
dec
push
mov
sahf
scas
cwtl
es
xor
dec
aaa
lock
frstor
addl
dec
mov
add
ds
leave
das
dec
scas
fdivr
repz
mov
cmp
aam
push
inc
pop
jecxz
and
scas
ljmp
pop
mov
xor
jbe
push
in
clc
push
cmpsb
and
sahf
je
lds
shlb
clc
lds
cmp
fisubs
imull
adc
scas
adc
sbb
testb
add
xchg
fs
mov
or
sahf
aam
and
lea
xchg
fimull
sub
sub
sti
call
or
and
jge
ljmp
adc
out
xchg
and
vmovdqu
or
bnd
das
and
cmp
sub
mov
pop
pop
fdivr
xor
ja
cmpsl
aaa
insl
mov
push
test
push
addb
add
out
shlb
sbb
out
in
sbb
and
add
je
ljmp
xchg
inc
pop
ss
sbb
xchg
test
in
mov
mov
or
loop
mov
call
sar
out
daa
mov
jp
jbe
in
pop
iret
push
inc
movsb
mov
xchg
pushf
sahf
incb
add
sub
data16
fdivs
pop
add
je
rorl
and
and
xchg
out
sarl
repnz
mov
divl
dec
pop
gs
mov
mov
stos
inc
sub
or
jae
sub
inc
cmc
andb
jnp
mov
or
pop
lahf
sub
pusha
out
mov
mov
and
or
cli
or
cli
xor
stos
stos
pop
jb
sbbl
rorl
mov
fistps
jne
nop
push
push
aad
mov
dec
stc
xchg
mov
or
push
sbb
xor
mov
or
pop
pop
nop
cmc
mov
dec
and
push
mov
test
inc
jecxz
outsb
icebp
mov
loop
add
pop
inc
lods
into
jl
das
in
pop
pop
adc
mov
xchg
lret
in
jmp
pop
xchg
xor
push
mov
jbe
push
jbe
xchg
inc
lds
or
mov
sub
push
test
scas
mov
ror
push
lds
cwtl
and
sbb
and
pop
pop
int3
sbb
xlat
cmp
jne
mov
in
test
dec
loop
mov
pop
pop
adc
daa
jl
mov
lods
jae
sbbb
hlt
int
scas
test
sub
ds
daa
mov
or
roll
fidivrs
dec
mov
mov
in
jns
test
int3
outsl
xor
nop
fwait
sahf
mov
hlt
mov
sbb
jno
dec
xor
cmpl
adc
xchg
mov
mov
out
xchg
pusha
or
ret
inc
cmp
sub
dec
sbb
xor
test
xchg
fisubrl
rcll
jge
sub
cltd
add
lret
mov
out
push
rol
xor
add
andl
sbb
out
ljmp
inc
out
sub
out
ds
test
adcl
icebp
shll
mov
in
movsl
add
roll
xlat
pop
jne
aaa
push
sub
movsl
sbbl
xchg
pop
movsb
loope
push
bound
jecxz
dec
imul
cli
pop
daa
jle
push
ja
movsb
jo
ret
int
loop
shll
add
test
cmp
repz
out
sbb
loope
shlb
mov
dec
mov
add
push
push
enter
ret
sub
lock
mov
aad
test
sbb
shlb
call
add
out
push
aaa
jmp
test
jmp
pop
mov
sbb
je
sbb
mov
aam
sub
negl
jg
cmp
lret
mov
pop
cmc
cmpsb
mov
xor
call
sub
daa
popf
xor
arpl
inc
push
ljmp
xchg
adc
inc
in
jg
repz
adc
cmp
dec
lret
mov
sbb
cmp
orl
push
iret
add
hlt
les
test
aas
mov
ret
inc
aaa
push
out
mov
and
jne
add
pop
test
movsb
stc
mov
jge
pop
mov
inc
fnsave
loope
outsb
cltd
xchg
jno
add
test
test
pop
in
mov
xchg
add
mov
ja
movsb
daa
fucomip
xchg
mov
rcrl
mov
iret
shr
out
int3
add
leave
pusha
stc
test
movsl
xor
adc
xor
push
cmpsb
cmp
push
and
std
pusha
cmpsb
imul
icebp
add
adc
cmp
pusha
js
dec
ficoms
add
xor
call
enter
ficomps
push
insl
xchg
cwtl
mov
sbb
xchg
push
ret
xchg
prefetch
subl
jmp
jnp
mov
push
jmp
pop
shr
and
mov
ror
jp
subb
subb
mov
ds
imul
pusha
ret
insl
ret
inc
dec
push
inc
mov
xor
idivb
pop
cmpsb
hlt
popf
mov
push
call
sbb
pop
loope
fnstcw
ja
and
inc
cli
leave
push
jno
add
push
push
adc
sbb
cmp
arpl
or
scas
adc
mov
or
jl
popf
pop
sbb
lcall
fucomip
enter
std
repnz
jbe
outsl
ror
inc
imul
sbb
adc
sub
sarb
clc
jge
pop
push
add
jmp
mov
jo
aam
pushf
cmp
cmp
xor
pop
je
inc
dec
cli
cltd
sub
xchg
xor
outsb
push
test
pop
imul
in
fs
cmp
repnz
jl
pop
shr
push
dec
in
push
jb
pop
mov
rcrl
sbb
add
mov
push
push
out
lds
cmpsl
cmc
push
test
jl
inc
mov
pop
movsl
push
test
lods
in
pop
pop
mov
or
aad
inc
sahf
mov
dec
loop
push
pop
fs
mov
mov
int3
loope
sub
jo
push
and
aad
mov
xor
or
jecxz
mov
inc
jl
jmp
ficomps
jns
mov
push
and
jb
cmp
out
iret
mov
xchg
imul
insb
xlat
or
jne
jno
pushf
pop
fisttps
jns
push
outsb
lea
inc
negb
sti
cmpl
cld
pop
data16
and
sahf
sub
jo
add
enter
repnz
mov
and
mov
add
test
dec
ret
ja
in
in
xor
test
outsb
xor
dec
imul
pop
mov
cld
inc
shlb
cld
mov
mov
dec
xor
arpl
push
lret
jp
ret
nop
gs
scas
jb
sbbb
insl
std
movb
movd
call
mov
or
cmp
pop
mov
jmp
dec
xchg
lcall
inc
push
cmpsb
or
jne
loope
add
fucom
in
push
out
shll
mov
mov
orl
daa
sti
push
or
mov
hlt
mov
fadds
frstor
in
ret
and
das
cmc
mov
mov
jl
cmp
cmp
lock
mov
ficompl
fwait
and
lret
cmpsl
push
xchg
cmp
aaa
xchg
div
mov
mov
xor
fnsave
dec
aaa
cs
imul
or
and
lock
cmc
scas
ljmp
inc
fbstp
mov
imul
mov
cmp
je
cmp
xchg
sub
cmp
outsb
in
movsl
ds
jmp
push
cmp
adc
and
pop
xlat
out
cmpsb
xorl
sbb
inc
scas
xlat
adc
and
or
pop
sbb
adc
scas
int
popf
bound
mov
mov
out
pop
pop
mov
pop
lret
movl
jge
sbb
sbb
xor
jae
stos
cltd
roll
int3
xchg
sub
movsb
aad
xchg
sti
mov
ffree
pop
or
sarl
jecxz
sbb
adc
pop
jnp
nop
out
jge
out
scas
js
and
pop
mov
mov
clc
mov
adc
repnz
and
and
in
push
add
notb
or
adc
pop
aam
dec
adc
mov
int
or
and
outsb
xchg
test
mov
add
jae
jnp
add
loope
sub
stos
pop
out
das
stos
hlt
add
icebp
test
and
js
shll
loop
mov
fildl
jmp
mov
cmp
xchg
out
ja
inc
push
dec
cmp
xchg
shlb
jne
push
adc
arpl
or
ss
push
push
scas
lahf
xchg
pop
sbb
add
inc
lea
hlt
and
xor
push
cmpsb
mov
inc
and
fs
dec
xchg
test
cltd
sbb
sbb
cmpsb
adc
sub
mov
enter
inc
xor
xchg
xor
out
mov
rorl
scas
cwtl
seto
pushf
daa
lahf
xor
jns
pop
inc
fmul
jl
pusha
jge
testb
xor
jge
jmp
and
add
nop
fbld
and
pop
inc
sbb
mov
dec
xor
push
push
popa
ja
bound
js
pop
insb
dec
push
popa
sbbb
xchg
inc
outsl
inc
mov
pop
xchg
fwait
mov
or
les
loope
pop
in
mov
mov
inc
mov
js
and
adc
jge
add
arpl
sbb
pusha
inc
or
dec
cmc
aam
mov
addr16
movsb
cmp
imul
cmc
mov
mov
xchg
shl
stos
insl
jb
push
dec
fidivrl
insb
and
jbe
icebp
decl
rorl
jecxz
push
out
in
out
insb
out
mov
imul
adc
pushf
xor
push
call
jo
mov
inc
pop
xchg
push
call
push
loope
iret
iret
pop
pushf
xchg
mov
xor
add
pop
loope
add
jno
inc
mov
sbb
in
popa
sub
mov
mov
xor
movsl
push
mov
in
idiv
js
cs
pop
add
hlt
mov
sub
cmp
pop
pinsrw
or
test
lret
inc
addb
cmp
int3
ret
stos
inc
andl
inc
mov
das
mov
mov
xorl
add
sub
mov
ja
mov
dec
pushf
stos
int3
subb
add
xchg
aad
jle
mov
sarl
mov
sahf
xor
pop
test
jp
inc
xchg
jb
shll
jnp
nop
test
shlb
sub
and
sub
stos
inc
mov
add
mov
negb
jnp
int3
fbld
jns
cmpsl
repnz
cmp
mov
ljmp
push
out
inc
push
add
mov
push
or
sub
pop
fbstp
imul
xlat
aad
xlat
add
arpl
loopne
je
pop
push
outsb
mov
add
movsb
enter
mov
std
lret
dec
sub
push
sub
cmp
mov
leave
sbb
xchg
ror
mov
ss
push
daa
ret
cmp
dec
pop
ds
repz
mov
add
fadds
add
mov
rcrb
xlat
repz
xchg
push
sbb
or
jbe
cmp
mov
mov
mov
or
jbe
adc
subl
out
jne
or
adc
xor
incl
test
shll
mov
callw
jns
movsb
mov
lahf
iret
pop
xchg
iret
xchg
adc
mov
cmp
mov
enter
sahf
sbb
psllw
or
insl
scas
lock
jge
lock
lret
into
out
iret
sarl
shrb
inc
pop
push
pop
loope
les
inc
sti
movsb
adc
pop
inc
cmp
pop
jle
pop
pop
dec
or
sbb
mov
adc
sbb
mov
sbb
pop
sarb
xor
mov
mov
jle
mov
mov
push
mov
add
mov
adc
dec
dec
lahf
ss
and
push
inc
in
orb
cmc
sub
pop
out
mov
xor
pop
adc
repz
cmpb
mov
jge
dec
daa
nop
pop
mov
xchg
cmpsl
gs
inc
dec
adc
inc
shlb
pusha
jns
rcll
pop
bound
or
arpl
rclb
rcrb
dec
dec
jp
push
ljmp
and
pusha
bnd
inc
dec
les
loop
faddl
pop
repz
push
les
cs
insl
inc
mov
shrl
inc
int3
js
ljmp
sub
mov
mov
fwait
dec
test
arpl
test
insb
stos
adc
mov
rolb
and
xor
rorb
stc
add
in
cmp
push
stos
mov
loope
cli
push
sub
leave
mov
pop
scas
mov
aad
das
imul
xchg
xor
nop
pop
orl
std
insl
sbb
pushf
jno
adc
es
pop
mov
mov
push
sbb
mov
xchg
inc
idivb
int
out
push
data16
dec
xlat
test
sahf
scas
push
adc
je
push
sahf
jns
pushf
rclb
fistpl
in
popa
cltd
or
ret
adc
cmp
mov
sbb
sub
xchg
cmp
xor
xchg
xchg
fldl
dec
jno
call
mov
test
sub
mov
insl
inc
xchg
cmp
pusha
mov
ja
push
adc
and
dec
jo
movsl
lret
pop
push
jne
or
xchg
incl
es
inc
into
fiaddl
push
ret
jecxz
or
faddl
cwtl
mov
dec
pop
dec
sbb
pop
dec
sbb
lds
int3
adc
push
lcall
mov
lret
cmc
mov
icebp
out
and
jae
inc
and
pop
data16
popf
xor
stos
fs
aas
shlb
pop
dec
ror
mov
cmc
xchg
push
xchg
pop
mov
stos
subl
lock
pop
repnz
sbb
cld
orl
out
push
add
mov
adc
mov
mov
aad
push
data16
in
in
pushf
cmpsl
pop
adc
add
sbb
adc
push
push
mov
icebp
addr16
cwtl
aas
jno
cmp
sbbb
stos
mov
lods
mov
sub
mov
sub
lret
push
fisubs
lock
in
insl
jecxz
push
sub
sahf
push
lock
fsubp
pop
lds
sub
stos
xor
pop
iret
movsl
out
lods
jmp
fstpt
out
mov
inc
cwtl
dec
orb
addl
fisubl
cmc
cmp
test
scas
or
orps
out
push
jmp
stc
cltd
rorb
and
dec
mov
sahf
into
dec
jae
sub
cmp
je
fdivrl
mov
and
xor
xlat
fildll
ss
test
xchg
pop
push
xor
lds
fdivrs
sbb
aaa
outsb
movsb
mov
icebp
push
xor
inc
out
iret
idivb
push
das
push
pop
es
jg
outsl
push
pop
dec
jbe
xchg
mov
out
iret
idivb
push
das
push
pop
es
jg
outsl
push
pop
dec
jbe
xchg
mov
out
psadbw
push
das
push
out
es
jg
jg
pop
cmpsw
jbe
xchg
xchg
lds
call
dec
idivb
push
sarb
into
out
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
ljmp
lods
mov
jmp
lea
add
or
or
add
scas
add
add
add
add
add
add
add
add
jb
fadds
out
add
dec
add
add
enter
and
cmpsb
add
add
add
pop
add
add
sbb
add
add
rolb
mov
sub
addl
push
sub
add
mov
sbb
add
add
add
add
pop
mov
add
outsb
add
jne
mov
add
add
insl
add
add
add
add
popa
add
jb
add
imul
bound
add
add
add
add
sbb
aas
add
adc
sub
mov
add
add
add
mov
test
add
add
or
push
add
add
mov
add
fadds
scas
add
add
add
add
add
gs
add
add
add
add
add
add
mov
add
sub
fildl
inc
add
fiaddl
mov
add
sub
cmpsb
add
lcall
add
sbb
inc
add
add
add
popf
add
add
add
add
add
scas
add
add
add
add
add
xor
add
add
xchg
add
into
add
add
outsl
add
add
mov
or
nop
add
imul
add
add
add
push
add
add
add
dec
add
imul
add
insl
add
add
add
add
ja
into
add
add
add
add
add
add
add
add
add
or
sbb
add
add
les
push
add
add
add
add
sahf
add
add
add
inc
add
add
add
add
add
add
enter
cmp
add
sub
lahf
add
mov
and
test
xor
addb
add
add
add
add
add
add
add
add
add
inc
add
add
add
sub
add
add
sub
movb
add
dec
add
cmpsb
add
and
adc
inc
add
add
and
sbb
add
add
add
add
add
add
add
add
fwait
add
add
fiaddl
rolb
pop
add
sbb
add
add
add
add
adc
jg
insl
add
add
add
add
fildl
aas
add
push
add
and
inc
add
jg
fildl
inc
add
inc
add
jecxz
in
add
jae
lea
les
icebp
add
or
sub
add
mov
add
in
add
add
add
inc
add
push
add
add
add
add
mov
add
add
add
add
xchg
add
add
jno
je
push
push
test
add
mov
add
add
stos
in
sub
lret
mov
or
ljmp
inc
mov
loopne
xchg
fisubs
dec
lea
cmc
mov
pop
or
pop
lret
cs
or
popf
push
sarl
sbb
cwtl
shrb
add
pop
aad
pop
mov
aas
jno
inc
aas
sbb
jno
loope
adc
iret
call
xor
pop
fs
cmc
fdivrp
pop
mov
fstl
push
mov
je
push
inc
fdivr
xor
adc
or
lods
test
jae
shll
dec
inc
sbb
adc
bound
leave
shrl
repz
dec
pop
xchg
lock
in
popf
lcall
rcr
adcl
push
push
inc
cmp
pop
repnz
adc
mov
ss
add
inc
aad
sub
jb
aad
mov
sbb
mov
enter
add
shrl
lcall
call
and
and
and
pop
cmc
out
push
sbb
enter
lcall
inc
enter
sbb
scas
pop
jp
adc
cs
mul
mov
in
imul
out
test
push
stc
and
adcl
xchg
mov
fwait
add
lret
mov
push
outsb
in
enter
jp
inc
lret
orb
and
mov
ds
mov
push
test
movsb
or
xchg
xor
fwait
sbb
into
jnp
jbe
divl
ss
mov
shrl
insb
inc
scas
ror
jp
mov
cs
sub
mov
js
clc
xor
push
call
ret
out
test
sarl
jp
mov
cmpsb
xlat
sub
mov
jns
mov
mov
fcoml
imul
cmp
add
out
fsubl
dec
and
sahf
sti
jle
mov
shlb
inc
jnp
addr16
bound
lds
cmp
out
in
daa
insl
adc
mov
cmp
fisttps
sub
lea
aaa
and
sub
pop
dec
inc
dec
sbb
push
push
ja
lcall
mov
add
mulb
cmp
push
adc
ds
sbb
dec
adc
add
xchg
orl
fadds
nop
test
sbb
mov
imul
push
lret
pop
adc
mov
pop
jle
aaa
sbb
aam
insl
out
jg
push
lret
push
push
xchg
or
loop
insb
jge
outsb
sub
inc
inc
test
cmp
out
imul
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
