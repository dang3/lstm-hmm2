call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
movsb
int3
out
in
into
cld
mov
ret
cmp
outsb
push
pop
insb
outsb
jl
or
push
cmp
int3
out
fsubr
in
into
cld
mov
lods
mov
je
outsb
pop
cmp
jl
imul
cmp
int3
neg
in
cld
cmpsl
mov
mov
xor
cmp
adc
inc
insl
dec
addr16
mov
mov
jae
scas
ja
test
xchg
mov
dec
test
imul
int3
arpl
fiadds
push
adc
inc
ss
xchg
mov
sbbb
repnz
subl
out
sbb
ds
lock
jl
xchg
pop
push
push
add
imul
mov
dec
ds
inc
stos
fwait
lea
pop
dec
mov
mov
mov
pop
out
push
or
and
pop
outsb
jae
std
sahf
mov
dec
xchg
dec
jl
pop
das
or
inc
neg
push
xchg
out
lret
inc
hlt
add
and
xor
mov
sbb
push
ret
ds
out
in
frndint
scas
mov
addr16
jbe
inc
insb
push
jl
or
sbb
sub
jp
int3
mov
fcmove
ret
call
or
inc
sub
and
js
pop
jnp
imul
out
mov
movsb
int3
lahf
lret
fptan
sti
lret
xchg
jl
outsb
sbb
cmp
pop
imul
xchg
fmull
mov
mov
insb
dec
jl
or
sbb
sub
cmp
int3
out
in
into
cld
mov
lods
mov
insb
dec
jl
or
sbb
sub
cmp
int3
sub
cmp
sti
pop
push
pop
sbb
stos
subb
adc
push
fisttpl
cmp
and
outsl
xor
mov
adcl
mov
sub
push
lea
loope
jp
sub
and
sbb
lea
inc
test
mov
mov
pminsw
cli
std
fldcw
mov
std
sbbb
push
fwait
mov
xor
fisubs
push
ss
movsl
inc
lret
add
xchg
ret
imul
scas
in
shlb
pop
cmpb
mov
lods
push
cmp
test
pop
add
mov
sti
cmp
in
test
xor
inc
inc
and
enter
and
in
xchg
inc
fmulp
test
push
sub
dec
xchg
cld
mov
or
adc
lods
and
outsl
lea
insb
jge
xchg
adc
pusha
or
js
cmp
xor
repnz
sti
lahf
push
ds
jns
daa
daa
es
and
repz
push
pop
dec
into
mov
inc
pop
cmp
ret
cmpsb
sub
sarl
sub
nop
andl
repz
mov
test
mov
sub
scas
out
inc
push
int
lds
mov
clc
xchg
jecxz
pushf
push
aam
mov
add
xor
mov
movl
push
or
out
sbb
and
lea
mov
js
imulb
sub
clc
push
dec
or
ja
and
mov
mov
inc
je
notb
sub
into
push
and
orb
jp
mov
jp
lcall
cmp
pusha
mul
loopne
or
sbb
cmp
insb
insl
imul
loopne
inc
push
xor
scas
inc
cltd
das
ret
pop
xchg
sbb
cmpsl
ss
xchg
mov
jo
and
pop
je
sbb
ljmp
and
rcrl
mov
push
cltd
add
cmpsl
pop
add
subb
cmp
outsl
out
cmp
adc
ret
pop
rorb
sub
mov
es
rcl
js
sub
push
dec
int
jb
mov
sbb
add
rcr
xchg
cmc
das
pushf
icebp
call
mov
dec
inc
cmp
xor
or
push
scas
inc
xor
mov
sub
js
pop
pop
push
push
mov
negb
sahf
sub
dec
lds
movsb
arpl
movsl
faddl
addr16
je
xchg
adc
mov
mov
ljmp
mov
adc
xchg
xchg
push
fsubrs
mov
jo
fs
test
vpmacsswd
aaa
fdivl
cmpsb
jb
insb
sbb
clc
int
mov
cmpsl
stos
fs
xchg
or
loope
repnz
jg
out
push
jns
iret
or
and
dec
imul
les
test
mov
xor
insl
in
xchg
mov
out
push
xchg
lods
leave
cmp
repnz
test
adc
jl
push
sub
cmpb
pop
sub
inc
add
jne
sbb
mov
cmp
clc
mov
std
cmp
icebp
int
lret
incb
shl
in
fadd
aaa
aaa
movsb
shlb
pusha
pop
inc
add
sub
jns
cmp
mov
push
add
lret
ret
jl
pop
xor
dec
nop
dec
mov
sbb
xchg
outsb
pop
enter
mov
jle
sub
inc
sbbl
call
jns
or
lds
rorb
and
mov
mov
mov
jp
or
mov
cmp
jnp
jp
mov
cmp
inc
and
cld
push
inc
sub
inc
test
loopne
lret
fs
scas
push
jne
pmullw
inc
stos
ds
cmp
push
ret
push
daa
icebp
adcl
imul
push
int3
jns
mov
xor
pop
sub
cld
pop
jmp
dec
in
adc
test
jge
cmp
mov
outsl
inc
sub
cmp
sub
lea
and
imul
scas
rolb
inc
pushf
arpl
mov
sub
pop
aam
mov
sub
out
mov
sti
ja
mov
xor
and
dec
mov
inc
mov
lds
mov
ja
add
xchg
pop
sub
dec
xor
sub
clc
and
sbb
dec
mov
imul
cld
pusha
sub
inc
mov
test
fwait
lcall
test
mov
sub
addr16
lcall
mov
adc
inc
call
notl
push
adc
insl
jl
mov
pusha
and
fistpl
dec
out
xor
aas
sti
out
jne,pt
fldl
test
adc
dec
jl
sub
adc
cmp
inc
push
les
adcl
int
xchg
push
pop
fcmove
jge
addr16
idivl
sub
mov
inc
or
test
xchg
aad
push
shrl
fsts
std
imul
add
push
push
cli
lods
in
push
movsb
mov
xor
mov
pop
jmp
rorb
enter
dec
fsubs
lret
push
ret
xchg
insl
xor
and
iret
cs
xchg
xchg
xchg
jns
lahf
and
fsub
roll
daa
fisttpll
xor
gs
insl
adc
mov
jb
test
scas
sbb
inc
or
sarl
dec
jmp
lds
out
sbb
int
jge
inc
sbb
sbb
inc
dec
pop
in
mov
fistl
push
pusha
icebp
mov
pop
mov
xchg
fcomp
or
xchg
jecxz
or
popf
lcall
fnstsw
adc
pop
pop
jl
adc
repz
test
cmp
shrb
dec
jp
jns
fimull
cmp
nop
add
std
fs
rcll
jle
ds
jne
mov
lea
lcall
inc
pop
lds
sbb
fldcw
mov
aam
test
fsubr
rcll
and
mov
sti
out
cmpsl
xor
cmpsl
lahf
call
jge
imull
jns
xor
sub
or
int3
mov
xacquire
pop
shrb
dec
cmp
adc
movsb
xor
orl
sbb
cmc
sub
sbb
sbb
mov
aam
xor
add
mov
or
mov
cmp
aaa
in
jmp
push
mov
xlat
push
sub
daa
shr
repz
stos
movsl
popa
ret
scas
dec
xchg
inc
jo
adc
cmp
or
in
jge
mov
dec
mov
das
jb
jo
jmp
push
fisttpl
fdivl
pop
and
sub
dec
dec
jno
xchg
mov
out
movsl
into
push
jmp
ja
jo
repz
jle
das
addr16
xchg
nop
arpl
add
adc
adc
mov
push
jl
ror
mov
or
mov
and
or
inc
xor
cld
add
xchg
push
negb
out
aas
mov
or
pop
dec
jmp
in
gs
mov
dec
enter
cmc
sub
pop
sub
xchg
mov
ss
inc
mov
outsl
sbb
ret
mov
shlb
test
xchg
rorl
loop
xor
xchg
cmpsb
shll
lea
fstpt
cld
loope
mov
inc
adc
mov
xchg
mov
and
test
add
test
mov
cmp
pushf
dec
mov
sub
mov
stos
sub
bound
push
xor
push
add
rcrl
push
jl
adc
ljmp
cwtl
and
fistps
cltd
rcrl
in
arpl
push
add
or
jne
or
rcrb
adc
jecxz
xor
mov
negl
mov
js
or
outsb
sbb
ror
lret
inc
jo
es
clc
and
clc
ljmp
dec
xor
pop
mov
fcmove
push
xor
pop
and
test
out
sub
call
inc
ret
int3
in
je
mov
nop
cmp
outsb
loope
lret
mov
sbb
mov
pop
cmp
sahf
stc
pop
mov
pop
clc
push
xchg
xchg
mov
mov
adc
pop
mul
adc
xor
jg
ret
inc
in
jge
addr16
pop
jmp
shll
ljmp
mov
cmp
dec
bound
test
and
mov
leave
lret
cld
sub
xor
pop
ss
popf
jp
js
inc
add
movsb
sbb
loopne
push
xor
dec
insb
je
pusha
jge
add
stc
jo
or
loop
ja
outsl
adc
sub
xchg
stos
leave
xlat
sbb
aaa
rclb
mov
sbb
rorb
out
je
rorl
mov
popf
test
adc
pop
lea
xorl
jl
or
je
xor
fsubrl
adc
rcrl
inc
jl
jb
int3
xchg
push
int3
mov
pop
cmp
hlt
nop
test
mov
cmp
mov
out
lods
loop
ret
adc
insl
jle
popa
sub
sbb
cmp
push
mov
dec
clc
inc
mov
mov
repz
pop
dec
adcb
inc
loopne
ja
ja
cmpsl
fnstsw
imul
jle
cmpsl
mov
xlat
add
xor
inc
xchg
xlat
mov
sub
pushf
mov
sub
std
push
int
insb
fnstenv
sub
adc
aad
movntq
add
rorb
jno
pop
pop
lds
xor
mul
xchg
adc
mov
adc
call
scas
ss
movl
jne
call
nop
pop
test
into
lds
or
std
mov
push
fdiv
push
hlt
in
adc
popa
adc
mov
mov
cmp
mov
xor
fidivs
fcompl
popa
gs
rolb
inc
xchg
inc
push
or
xor
mov
pop
cmp
dec
sbb
pop
and
fcomps
out
sub
xor
bound
lock
jb
lock
cmp
and
jle
push
mov
mov
mov
mov
vunpckhps
movsl
addb
or
cmp
cli
mov
mov
sbb
cld
xchg
adc
cs
adcl
mov
mov
jns
mov
into
fcoms
mov
xor
push
lds
lret
je
data16
out
mov
xor
sbb
dec
mov
mov
sub
inc
xor
sub
inc
mov
aad
rcll
inc
xlat
push
dec
arpl
add
outsl
dec
jbe
int
mov
xchg
ss
push
jne
xchg
scas
push
out
dec
popf
jne
xchg
push
pop
negl
jg
xchg
pop
arpl
inc
jnp
icebp
cpuid
push
mov
leave
leave
jno
outsl
adc
push
or
inc
cmp
cld
es
mov
mov
lock
add
cmp
pop
aam
mov
dec
scas
popf
jnp
subl
lret
lds
lock
and
call
cmpsl
dec
mov
adc
sub
and
adc
addl
fucomip
fcomip
xchg
push
sub
jecxz
cld
mov
xchg
mov
dec
adc
adc
bound
add
push
push
inc
fistl
mov
mov
adc
mov
mov
cmc
mov
jg
push
into
icebp
js
mov
sbb
loop
xchg
clc
test
xorb
insb
adc
or
cmp
mov
pop
or
add
test
iret
or
mov
mov
lret
xchg
or
add
outsl
hlt
pop
cmc
and
imul
and
push
lret
jg
fwait
int
sar
call
push
xchg
jb
aad
push
xchg
stos
fiadds
and
mov
mov
push
dec
xchg
jmp
cmovo
push
dec
inc
repnz
dec
xor
adc
scas
pop
adc
adc
imul
add
or
sbb
in
pusha
scas
xor
xchg
mov
pop
jno
lahf
push
jns
sahf
mov
insl
push
test
int
adc
cmp
or
cmp
xor
outsl
mov
xchg
xchg
clc
cmp
fisubs
in
adc
aad
imulb
sub
adc
insb
push
stos
jecxz
ret
lods
in
scas
xchg
ret
fwait
mov
fbld
adc
nop
mov
or
inc
lock
loope
dec
stc
and
jge
bound
fstps
int3
mov
cmp
jo
xor
inc
mov
jbe
mov
call
mov
inc
mov
or
xor
das
loop
ljmp
imul
js
push
mov
dec
into
aaa
mov
mov
mov
rolb
pop
ret
sbb
mov
xchg
hlt
lods
stc
add
sbb
jecxz
dec
inc
loope
cld
aam
push
and
fwait
sub
ja
mov
jb
les
jae
js
push
mov
jecxz
shlb
mov
and
mov
ret
mov
mov
jmp
stc
xor
pop
divb
adc
pop
sub
sub
test
dec
push
ficomps
aam
test
pop
jno
sub
or
lahf
stos
mov
pusha
xor
pushf
jae,pn
mov
scas
xor
mov
pop
test
into
push
xchg
adc
inc
add
fmuls
out
fdivl
push
scas
push
adc
aas
dec
in
sub
xchg
xor
bound
nop
dec
lods
movsb
icebp
sbb
clc
fsubr
popl
sub
mov
push
pushf
jmp
loope
push
dec
xchg
and
pop
out
scas
aam
sbb
mov
mov
sbb
mov
hlt
xchg
mov
mov
sub
jae
outsb
fscale
mov
cmp
push
xchg
adc
repnz
icebp
je
push
ss
jb
jo
pop
pop
pop
cld
fildl
lret
xor
movsl
inc
lret
mov
sbb
jg
xor
dec
addr16
call
lock
add
sbb
out
insl
divl
adc
push
pop
test
mov
mov
negl
xchg
sub
adc
out
and
std
adc
dec
fdiv
out
imul
jb
jns
into
cmp
xchg
mov
fwait
rclb
jp
pop
pop
inc
and
insb
cmp
jno
inc
inc
in
popa
adc
inc
mov
pop
xor
cmp
in
mov
mov
jnp,pn
add
mov
in
stos
in
fwait
or
and
enter
cs
fldl
js
inc
repnz
jecxz
adc
cmp
mov
mov
hlt
lret
lcall
pop
cmc
mov
ljmp
xorl
add
clc
lret
test
push
aad
loopne
xchg
outsl
push
inc
cs
movsl
inc
dec
test
or
mov
int
or
test
dec
mov
pop
cmpsb
and
sbb
inc
test
pusha
mov
pop
mov
stc
fmuls
inc
into
push
ret
mov
and
mov
jne
jne
out
mov
mov
iret
sarl
sbb
fs
lret
push
add
fisttps
mov
sbb
mov
cmp
cwtl
inc
fadds
pushf
mov
subl
dec
jno
mov
and
jecxz
adc
inc
loopne
stos
sub
mov
cwtl
and
imul
aad
xor
fisttpll
negl
mov
popf
and
sub
inc
enter
ja
test
mov
jnp
inc
out
into
or
pop
in
jg
in
or
mov
hlt
xchg
push
push
subl
pop
mov
inc
lods
das
lea
or
aad
addr16
lret
or
cltd
dec
jmp
pop
cmpsb
pop
mov
adc
mov
loop
dec
and
sub
arpl
popf
push
push
scas
aam
adc
sbb
mov
jae
dec
jp
out
sub
lods
add
imul
sbb
xor
ljmp
cmc
lods
cmp
pop
cmp
mov
ja
and
icebp
out
and
xchg
outsl
bound
stos
outsb
inc
push
pop
adc
jbe
cmp
xchg
add
jb
imul
callw
add
lods
lds
or
cld
pop
or
lahf
ret
icebp
and
adc
pusha
dec
jg
cmp
mov
and
mov
push
xchg
xchg
lahf
fisttpl
loope
fcoms
ljmp
lcall
inc
and
jecxz
bound
and
out
test
js
js
inc
mov
jmp
jmp
or
push
cmp
add
jbe
arpl
pop
fmuls
xchg
adc
jb
add
pop
xor
xor
cwtl
inc
xchg
pop
mov
sub
jne
jle
sbb
repnz
pusha
inc
mov
push
inc
lcall
mov
data16
or
adc
subb
std
inc
inc
jns
sbb
test
xchg
int
fmull
cmpsb
cmpsl
dec
add
adcl
hlt
mov
mov
mov
mov
sbb
mov
mov
jnp
or
jbe
mov
ja
cmp
mov
dec
push
jb
mov
add
arpl
push
or
mov
push
scas
mov
int
and
add
shrb
mov
sbbl
xor
mov
ljmp
aaa
int
sbb
jp
scas
mov
push
cmp
in
cmp
jecxz
pop
hlt
mov
mov
leave
jl
loop
and
fs
jnp
ljmp
pop
aas
int3
mov
mov
push
xor
pop
movsl
push
scas
stos
scas
pop
imul
mov
pop
cld
ljmp
xor
cmp
push
or
inc
pop
mov
sysenter
xchg
dec
dec
aaa
jno
iret
sub
xor
or
icebp
add
movsl
mov
mov
les
mulb
mov
cmpsb
push
sbb
xor
mov
cmpsl
aam
push
notl
insl
lods
add
and
cmp
popf
not
fbld
push
movl
xor
sbb
and
xchg
out
and
xchg
and
sbb
fs
push
mov
test
mov
rcrl
cmpsb
out
daa
mov
mov
adc
xchg
jmp
dec
data16
mov
ljmp
in
inc
loopne
nop
insb
movsb
xchg
dec
sti
lock
xchg
mov
push
loope
call
lock
push
js
lea
xlat
lcall
sahf
mov
cmp
inc
and
rcl
xchg
sbb
jae
jg
cli
mov
push
scas
movb
jae
cmpsb
fbld
mov
push
cltd
scas
std
pop
cmpl
jmp
nop
mov
loopne
je
dec
push
enter
test
jmp
mov
sahf
cmpb
add
sub
popa
test
es
sbb
push
cmp
push
and
cmp
fildl
push
dec
in
popf
push
adc
add
xor
ss
dec
pop
xor
inc
test
fcomip
lock
add
add
test
test
sub
inc
and
ds
loope
sbb
lret
mov
mov
xor
mov
and
dec
xchg
das
jb
pop
addr16
aam
jge
inc
mov
std
insb
pmovmskb
in
out
mov
inc
pop
popf
out
fcompl
xchg
lcall
les
cli
js
cld
shl
sbb
aaa
ja
push
add
stos
das
loope
jns
rcrb
fcomi
jmp
clc
push
or
fsubl
shr
insl
out
inc
mov
xchg
sbb
sub
mov
adc
js
dec
sbb
sub
mov
outsl
or
ret
xchg
mov
orl
insb
and
lahf
mov
test
loopne
lcall
test
pusha
int3
dec
push
mov
pop
push
mov
popa
ret
xchg
adc
shll
outsl
push
pop
and
ficompl
les
les
cld
mov
lods
mov
insb
dec
jl
or
sbb
sub
cmp
int3
out
in
into
cld
mov
lods
mov
insb
dec
jl
or
sbb
sub
cmp
int3
out
in
into
cld
mov
lods
mov
insb
dec
jl
or
sbb
sub
cmp
int3
fcmovu
call
mov
jl
dec
xchg
div
insb
dec
or
cmpsb
jecxz
shl
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
int
in
cli
std
push
push
in
jmp
fsubrs
insl
jp
push
sbb
sub
fcmovu
lret
std
ljmp
mov
push
jp
push
jne
or
dec
in
push
std
call
lods
push
mov
sub
and
jle
arpl
sub
mov
cmpsb
inc
jb
pop
xchg
movsl
mov
or
je
push
popa
fistpl
mov
sbb
cli
dec
call
loopne
clc
jp
sbb
leave
sub
ret
cmpsl
xor
loopne
ror
mov
dec
xlat
aaa
iret
xchg
notl
out
cmp
mov
fwait
ljmp
push
inc
aad
dec
movsl
dec
sbb
dec
pop
xchg
repz
sub
iret
test
outsl
ss
mov
pop
jge
hlt
push
dec
pop
or
sub
aad
sbb
ja
jmp
shlb
pop
or
ss
sbb
test
jb
sbb
xchg
fcmovu
cmp
jle
loopne
lcall
dec
fcompl
insl
push
and
cmp
lret
cwtl
in
sar
iret
or
pop
femms
push
adc
push
jnp
dec
into
lahf
scas
mov
cmc
icebp
mov
sub
pop
sbb
pop
cmp
pop
pop
cmp
lea
popf
mov
pop
pop
dec
insl
jp
push
sbb
sub
fcmovu
lret
std
ljmp
mov
dec
insl
jp
push
sbb
sub
fidivrl
push
pop
fld
push
add
test
and
sub
lcall
rolb
in
cmp
mov
pop
ror
push
pop
and
dec
inc
push
hlt
push
fistpl
cmpsl
stos
in
jno
leave
fnsave
adc
xlat
mov
out
jg
mov
sub
inc
sti
lock
xor
pop
lcall
sbb
mov
mov
aad
sub
pop
push
dec
and
aam
jl
sarl
lret
iret
xor
mov
pop
add
xor
das
fcmovnu
mov
in
xor
popf
testb
cmp
xchg
inc
gs
mov
aaa
mov
inc
adc
mov
in
imul
inc
cs
insb
mov
dec
sbb
arpl
call
cli
mov
xchg
pop
jae
push
or
das
dec
and
psubusw
int
add
xchg
lcall
mov
xchg
dec
sbb
mov
adc
sub
mov
fwait
int3
je
pop
movsb
xchg
jbe
movsb
add
push
ret
sbb
fnstcw
into
xor
jmp
fsubr
rcrb
jbe
or
lods
adc
negl
jl
icebp
push
adc
out
je
cwtl
test
cmpsb
push
imull
push
out
sahf
or
jnp
jns
addl
mov
push
xor
mov
in
stos
cmc
outsb
lahf
mov
push
inc
xchg
dec
xchg
xor
add
xor
mov
lcall
and
dec
fcom
imul
add
ss
inc
lret
icebp
scas
dec
lret
jb
in
hlt
je
push
cld
jl
dec
ret
add
subl
dec
xor
pusha
roll
add
xor
dec
enter
mov
adc
and
push
call
xchg
jge
aaa
xor
add
sub
xchg
cmp
lock
stos
cmp
jl
loopne
mov
fistps
mov
subb
mov
adc
mov
loopne
sbb
push
mov
scas
xor
test
rcrb
or
sarb
mov
fwait
dec
cwtl
and
mov
xor
push
aad
outsl
add
fucomi
test
xchg
inc
out
cmp
roll
call
stos
pop
mov
shll
jnp
inc
adc
mov
or
dec
lods
pop
adc
movsl
arpl
sub
add
rorl
push
aad
fistpl
adc
jbe
lods
lcall
dec
sub
arpl
inc
jmp
add
sub
or
mov
jb
xchg
insb
fisubrs
pop
gs
push
inc
cmp
mov
pop
lret
imul
jge
adc
mov
mov
stc
mov
mov
mov
xor
clc
and
sbb
adc
fnstcw
mov
testb
daa
and
stos
mov
xor
shlb
int3
and
jo
mov
xor
mov
xor
or
mov
cs
lock
dec
pop
and
push
push
jmp
add
xchg
cmp
in
fwait
push
out
push
inc
or
dec
cmp
jge
jg
clc
cmp
add
daa
pop
adc
in
push
je
cmovp
test
sbb
fists
addr16
add
xor
cmp
adcl
xchg
xor
dec
dec
scas
add
jp
test
mov
xor
test
inc
pop
bound
jmp
mov
cmpsb
sub
jecxz
faddl
imul
adc
mov
es
test
inc
ret
mov
nop
sbb
sub
out
sti
mov
pop
rclb
mov
push
mov
je
sub
int
jb
inc
fbld
mov
mov
jo
add
xor
int
inc
fnsave
or
mov
in
in
adc
add
cmp
cmp
xor
mov
sbb
add
mov
pop
adc
loopne
push
lock
lret
cli
push
enter
ret
addl
cmpsb
mov
mov
adc
ljmp
sbb
stc
xchg
test
out
xor
movsb
cmp
sahf
pop
insl
inc
cmpsb
xlat
xchg
std
sub
dec
pop
sub
insl
es
test
pushf
pop
in
and
dec
aas
add
or
mov
in
cmp
or
push
dec
jae
repz
test
je
lock
int3
int
mov
push
jns
decl
movsl
inc
std
sbbl
mov
addr16
or
dec
jnp
or
sbbb
jmp
sub
pmulhuw
std
bound
xchg
lret
push
jns
int
push
add
adc
insb
movsb
xor
outsl
dec
dec
mov
in
aad
daa
xchg
add
cmp
std
mov
test
lret
shlb
imul
mov
test
push
cmp
ret
inc
cmp
out
sbb
jle
mov
add
stos
cmp
mov
cmpsb
scas
add
dec
xor
scas
ret
scas
xchg
movsl
push
pop
jo
out
icebp
or
es
push
in
movsl
ja
int
addr16
cmp
mov
and
cli
mov
jecxz
jae
xor
lret
int3
sahf
and
sbb
loop
dec
out
sub
sub
pop
push
jecxz
incl
pusha
pop
xor
xchg
inc
pop
daa
inc
sarb
in
daa
cmp
jb
je
lock
xor
ja
test
push
cmc
movsl
andl
rcr
cmp
decl
lds
cltd
push
adc
aam
adc
sub
push
xchg
mov
inc
sti
popf
mov
cmp
mov
xor
cmp
mov
into
sbb
jbe
lahf
ds
bound
jbe
lds
pop
dec
mov
push
push
add
loopne
dec
xchg
mov
imul
add
push
push
or
stos
pop
lret
push
jge
outsl
xchg
dec
hlt
daa
dec
push
ss
fdivr
int3
or
xchg
mov
in
dec
decb
inc
push
cli
xchg
mov
shl
or
aad
in
cmp
shl
lock
xchg
movsb
mov
outsl
lods
idivb
adc
addb
dec
out
stc
lods
inc
push
scas
push
push
mov
shrl
mov
sub
data16
add
movsb
or
mov
clc
in
cld
rolb
pop
cmp
dec
cltd
out
push
lcall
insb
je
xor
push
and
xor
ja
stc
fstl
call
xchg
and
out
popf
mov
jb
ja
or
mov
aas
jg
rolb
xchg
pusha
dec
xchg
cmp
lcall
mov
sub
scas
shll
cmp
aam
das
sbbb
je
xor
or
xchg
fsub
add
pop
lret
in
mov
sub
call
out
sub
adc
movl
mov
adc
cmpsl
ljmp
imulb
imul
pushf
rolb
addr16
sbb
aaa
aas
aaa
mov
pop
xchg
jmp
stc
arpl
mov
aad
mov
push
fs
sahf
lret
add
pushf
clc
inc
add
leave
jo
cmpsl
lcall
dec
inc
xor
lcall
aad
jae
mov
sub
xchg
into
mov
cmpsl
sub
cmpsb
pop
jbe
dec
adc
xlat
enter
loope
and
negl
mov
sub
fistps
loopne
subl
sarb
push
insb
ret
adc
sbb
sarb
fcmovne
outsb
lock
aad
into
mov
iret
pop
ret
fidivl
sbb
xorl
inc
xor
dec
inc
inc
mov
mov
js
dec
dec
cmp
sbb
hlt
cmp
arpl
jbe
test
xor
dec
cmp
testb
or
push
icebp
inc
idiv
mov
jg
pop
orl
nop
and
sub
js
mov
iret
loope
int3
mov
xlat
mov
in
iret
aaa
jge
incb
adc
sub
insb
cmp
test
jae
push
add
fiaddl
inc
stos
addr16
cmpsl
fdivrl
inc
push
leave
push
adc
cmpsl
test
adc
in
mov
shrl
or
ljmp
jge
mull
out
daa
call
cmc
jae
jmp
jns
imul
mov
pop
ret
xchg
arpl
dec
sub
jge
and
mov
in
in
jbe
shlb
movsb
dec
aas
xchg
lods
xor
test
lcall
pop
adc
jb
sub
cmc
fisubl
mov
mov
adc
scas
jb
push
xchg
int3
mov
in
lods
fcoml
push
lds
xor
fcoms
push
bound
enter
into
add
mov
ficoml
loope
add
mov
xchg
aas
out
add
adc
cmp
pop
ucomiss
sbb
mov
mov
mov
repnz
cmp
lea
stos
movsb
adc
mov
dec
adc
testl
shl
fsubs
pop
lret
shr
imul
jno
and
cmpsb
add
mov
or
adc
jle
sahf
adc
into
add
in
mov
lods
lahf
sar
fs
dec
lods
in
cmpsb
or
insb
fldt
decl
popa
jmp
in
xchg
seto
and
shlb
pop
and
mov
popf
xor
xor
jne
dec
push
jb
and
pslld
out
aam
gs
cmp
movsl
jo
iret
rclb
mov
push
cli
inc
and
ret
dec
repz
test
mov
in
es
dec
adc
inc
dec
dec
dec
lret
or
fdivs
inc
loopne
push
hlt
sti
scas
ret
dec
pop
push
jnp
sbb
cmp
outsl
cli
movsl
mov
call
pand
push
cmp
and
dec
fsubr
push
mov
sbbb
cmp
dec
mov
rcll
sub
sub
push
inc
xchg
test
dec
push
or
xlat
cmp
shl
pop
daa
daa
sti
shl
pop
pop
xchg
enter
jle
xchg
cmp
jl
in
loop
push
mov
lods
add
jg
xor
mov
sub
outsl
idivl
mov
pop
repz
rcrb
cli
jb
sub
xor
leave
arpl
adc
cmp
sub
xchg
pop
jle
lods
mov
and
xchg
pop
lods
cmpsb
mov
cmc
data16
lret
lcall
sbb
cmp
cmp
pop
lods
adc
sarb
sbb
or
std
pop
fsubrl
inc
and
cwtl
jle
cs
pop
jmp
call
daa
insl
out
push
jl
pop
jnp
lds
fldl
jb
inc
or
in
adc
push
jg
jl
mov
fmul
sbb
call
fmul
das
popf
mov
sti
or
cld
sub
repnz
popf
xor
neg
xchg
mov
push
dec
in
int3
addr16
mov
add
mov
sbb
js
lock
and
inc
or
sub
aad
testb
movsl
push
cmpb
shrl
loopne
js
stc
sbb
in
mov
mov
loope
ds
scas
push
fbstp
jb
lods
test
aaa
inc
loop
test
dec
adcl
cmpsb
mov
xor
in
clc
pop
in
pop
xchg
in
das
bnd
fstps
sub
mov
out
mov
adc
pop
mov
fwait
je
or
pop
mov
cmp
jno
repz
aam
mov
aad
divl
xchg
in
adc
mov
lods
addl
lock
dec
and
cwtl
push
mov
scas
rclb
add
jnp
insb
not
scas
lock
lock
jp
sti
lods
mov
xchg
jnp
dec
loop
popf
rorb
cld
adc
pop
push
sbb
je
push
fiadds
cltd
or
ja
mov
pop
lods
xchg
aas
daa
jle
nop
pushf
hlt
sub
popf
rorb
pop
in
mov
xchg
aas
cmp
push
loop
pop
mov
push
nop
aas
loopne
cmp
aaa
mov
cmp
pop
pop
lahf
push
cld
and
push
xchg
or
mov
sub
inc
aam
aaa
mov
dec
and
fwait
aam
int
jle
push
sub
xchg
std
cld
mov
or
push
test
jnp
inc
mov
sarl
imul
and
pop
cmc
shl
or
movl
sub
stos
ja
xor
adc
jl
roll
mov
push
adc
pop
jne
pop
jmp
paddsb
pop
shlb
jg
mov
les
inc
adc
adc
lods
sub
test
arpl
aas
add
call
jge
int3
cld
fcoms
shll
push
fucom
outsl
iret
inc
int
les
arpl
push
sub
sti
into
add
xchg
fadds
lcall
mov
negl
push
xor
push
mov
ds
sub
and
jg
jnp
outsb
clc
ja
fdiv
lea
icebp
and
cmp
inc
xchg
jl
ss
mov
and
int3
icebp
outsb
imul
std
jmp
push
pusha
mov
pop
sbb
aam
cwtl
add
and
inc
adc
ljmp
cli
addb
dec
ret
dec
leave
push
rcll
shlb
stc
sub
push
jns
ljmp
xchg
adc
xchg
cmp
jnp
shll
mov
test
mov
clc
sbb
fcmovnu
sbb
mov
test
cwtl
lods
js
ja
jne
sysexit
push
sbb
jp
outsb
ret
stos
stc
test
pop
jne
lret
ds
add
mov
mov
lahf
ss
fcmovnu
cmovbe
or
rolb
iret
and
add
inc
lea
loope
pusha
jbe
in
sbb
fstp
pop
cld
adc
jmp
and
scas
nop
adc
mov
xchg
fisubrl
lea
nop
jg
inc
mov
pop
mov
jp
inc
mov
int3
cmp
push
aam
scas
ja
mov
lcall
enter
pop
mov
mov
pusha
inc
and
mov
test
out
push
sahf
les
jle
push
add
hlt
ja
push
pop
insb
lret
adc
cmp
cli
shl
imul
and
jg
and
lcall
mov
addr16
jne
cmpb
and
aas
fwait
adc
loope
mov
fs
sbb
dec
bound
in
test
lahf
scas
mov
pushf
daa
push
imul
out
push
push
aaa
or
cmpsl
push
xor
xlat
jns
add
push
clc
mov
int3
or
lods
out
push
mov
mov
mov
popa
je
out
incl
mov
pushf
pop
leave
xlat
in
inc
mov
stc
jo,pn
push
xchg
subl
push
push
jge
lahf
jb
shrl
add
inc
fst
insb
daa
call
push
mov
sub
add
mov
push
icebp
mov
dec
xor
add
in
adc
dec
fucomip
push
cmp
insl
xlat
cmp
aam
sub
pop
or
cwtl
stc
pop
cmp
mov
xor
mov
rclb
xor
inc
mov
clc
and
add
adc
in
out
imul
iret
xchg
adc
xchg
jmp
add
pushf
jne
xchg
jg
movlps
pop
rorl
cmp
shll
popa
in
dec
xor
mov
jbe
sbb
xor
lods
divl
add
int3
pushf
stos
mov
push
lret
mov
lret
xor
test
int
shr
pusha
dec
outsb
fs
dec
lds
or
lcall
adcl
mov
xor
lods
lods
daa
cmc
adc
add
and
repnz
sub
inc
cmpsb
repnz
shrb
mov
pop
or
sub
loopne
cli
cld
pop
in
jnp
pop
in
out
cmp
lret
int
xchg
loopne
outsl
pop
pop
push
mov
dec
pop
cmp
pop
cmp
dec
arpl
dec
test
ds
jp
or
sti
sar
mov
shlb
and
loop
in
pop
pushf
add
sti
dec
fdivp
cmp
mov
mov
fucomip
jnp
or
add
mov
rcrl
in
cli
std
and
ss
sarb
repnz
inc
dec
mov
addr16
stos
mov
jnp
mov
int3
pop
xchg
mov
je
sub
adc
push
lds
cwtl
ja
int
fidivrl
popa
sbb
sbb
lea
das
rcrb
cmpsl
fldl
and
adc
movsl
jbe
fildll
add
fcom
xor
dec
fisttps
or
dec
gs
jecxz
das
and
test
jns
in
pushf
mov
pop
jno
dec
xchg
sbb
mov
adc
push
inc
lret
rcrb
pushf
mov
hlt
push
add
inc
push
aaa
add
cld
rcrb
outsb
das
inc
jmp
jbe
mov
pop
pop
fisubl
push
stc
jns
pop
fsts
sahf
rcll
adc
mov
cmp
mov
sbb
lahf
call
jae
mov
mov
scas
idivl
test
scas
mov
inc
in
sbb
int3
in
je
push
imul
ficomps
stos
ds
sub
addl
dec
mov
cmc
dec
in
je
or
sub
std
es
clc
mov
cltd
adc
sub
icebp
lods
and
js
lock
jp
and
inc
dec
sub
mov
jns
inc
jl
fsubl
mov
in
fnsave
push
sub
jg
or
sbb
dec
fsubrl
je
cld
push
loopne
or
les
mov
and
push
xchg
iret
mov
sub
or
push
jbe
inc
cmc
insb
call
xor
xor
xor
fbld
mov
subl
mov
adc
push
push
jecxz
jns
push
lret
popa
andl
pop
push
jle
inc
arpl
ds
mov
ficomps
mov
lcall
orb
sub
test
test
lret
xchg
xlat
mov
test
push
mov
test
inc
mov
repnz
imull
cmpsl
aas
in
lret
test
sbb
xchg
test
xchg
test
daa
pop
xor
sbb
test
push
das
inc
inc
rep
inc
test
lods
dec
call
pusha
xchg
icebp
pop
addr16
jne
jge
mov
lds
inc
adc
iret
adc
cli
sub
lods
dec
ss
aam
sbb
cmpsb
mov
sbb
sbb
mov
pop
xlat
or
or
push
sbb
fwait
movsl
push
mov
pushf
aad
movq
pop
mov
jl
aas
lahf
mov
pop
repnz
dec
pop
add
mov
loopne
out
stos
or
mov
scas
pop
sti
mov
lds
or
dec
pop
dec
mov
mov
push
or
icebp
jle
jmp
dec
ja
pop
test
out
pop
lret
stos
mov
pusha
hlt
clc
xor
cmc
cmp
mov
mov
cmc
ret
pop
push
lods
mov
mov
inc
es
mov
pop
jb
movsb
jb
pop
in
ljmp
shl
mov
xor
std
lret
sub
jmp
push
cmp
aad
inc
in
pop
jl
imul
sahf
jle
std
and
fwait
cmp
imul
insb
mov
push
sti
popf
sbb
xor
rcrl
lea
ss
push
xchg
popf
xchg
jmp
push
inc
shrb
popa
xchg
stc
xrelease
push
push
and
push
cwtl
dec
clc
int3
aam
xchg
dec
repnz
xorl
push
mov
cwtl
loopne
sub
push
xchg
or
cwtl
push
js
cmp
inc
jb
and
scas
fsubs
call
lcall
inc
sarb
mov
lods
hlt
and
jmp
lock
comiss
push
sub
jge
test
add
and
or
inc
lock
cmp
insl
adc
insl
test
jmp
lret
scas
sbb
sub
popf
and
pop
fstpt
add
inc
pop
lea
mov
inc
xchg
add
ffree
dec
sbb
sub
aaa
sarl
xchg
pop
in
push
hlt
pop
popf
jmp
mov
mov
mov
sbb
xchg
jg
nop
or
enter
ds
scas
dec
fbld
inc
lds
lds
movsb
mov
jno
pop
jmp
mov
adc
jge
out
cmp
sbb
repnz
ss
popf
inc
jmp
jl
loop
fbstp
enter
or
mov
and
out
std
ljmp
mov
dec
insl
jp
push
sbb
sub
fcmovu
lret
std
ljmp
mov
dec
insl
jp
push
sbb
sub
fcmovu
sub
std
ljmp
mov
dec
insl
jp
push
sbb
sub
fcmovu
lret
std
jmp
lcall
dec
movsl
pop
loopne
jp
sbb
rol
ret
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
outsl
loope
icebp
ffreep
iret
roll
call
outsl
jo
push
dec
inc
and
mov
jmp
out
icebp
faddp
iret
sarl
orl
push
aas
push
das
xor
add
adc
clc
out
call
mov
cltd
mov
outsl
push
cmp
and
outsb
inc
inc
aas
jae
jle
lods
out
adcl
bound
push
inc
push
push
xor
mov
push
stos
enter
shll
outsb
or
ret
inc
shrb
icebp
imul
jp
out
lcall
and
int3
jg
aas
jno
sub
mov
out
push
and
jg
adc
subl
mov
incb
push
mov
fisubl
lahf
mov
mov
mov
inc
and
push
out
test
dec
pop
pop
sub
orb
or
scas
dec
or
rcrl
add
pop
mov
fmul
sarl
orl
dec
aas
cmp
sub
sbb
adc
movsb
xorl
push
fnsave
inc
sub
inc
arpl
jb
jnp
mov
mov
mov
lahf
cmc
mull
daa
and
push
je
pop
xor
adc
loope
icebp
mov
xchg
scas
mov
orl
push
aas
and
xor
add
adc
loope
icebp
ffreep
iret
sarl
orl
push
aas
and
xor
add
adc
loope
loop
inc
popf
ror
sub
push
pop
adc
sarb
add
wrmsr
je
cltd
and
or
test
push
out
pop
xor
lds
xchg
stc
test
outsb
lret
and
ret
sub
leave
cmp
mov
std
cmp
popa
xchg
mov
jecxz
test
adc
jns
jle
aas
fs
pop
mov
pusha
adc
repz
in
sbb
xor
je
add
shlb
lock
xlat
nop
or
inc
sti
ret
mov
xor
add
cltd
adc
or
pop
hlt
mov
xchg
ja
divb
mov
adc
iret
xor
jg
shlb
imul
pop
xor
push
paddd
fwait
lods
cs
scas
mov
fwait
inc
mov
out
cltd
sarb
push
bsr
into
ljmp
sbb
xchg
jg
mov
sub
dec
ja
out
pusha
xor
aam
popf
loope
and
test
into
jg
scas
add
or
je
insl
xor
jecxz
sbb
lahf
cld
mov
roll
cmp
in
cmp
xchg
xor
push
lcall
jno
sbb
loope
movsb
mov
xlat
jae
push
push
xchg
and
push
mov
into
inc
jge
xchg
xor
iret
push
cmp
pop
cmc
inc
pushf
shr
jnp
pusha
jecxz
jns
xchg
sbb
sub
outsb
ss
lods
xor
push
int3
loope
icebp
outsb
nop
sub
xor
fisttpll
jmp
imul
add
or
test
push
das
pop
and
loop
mov
add
xor
jmp
mov
testl
xor
mov
dec
mov
fwait
rolb
out
lret
jge
xorl
ss
cmp
sub
jno
dec
out
pop
fcmove
pop
push
aas
lret
jge
adc
in
movsl
stos
lcall
ret
pop
stc
add
pop
je
fs
cmp
ss
scas
in
insb
sub
add
addr16
inc
jg
lahf
sub
int
push
or
adc
in
loopne
repz
add
pop
out
or
mov
imul
and
xor
mov
fs
pop
or
fistps
js
push
dec
and
loope,pt
out
inc
hlt
pop
jae
ss
push
fidivrl
xorl
jne
sub
and
ljmp
test
jne
xor
push
mov
repz
sub
sbb
pop
sub
arpl
cmc
mov
add
inc
xchg
sub
lock
stos
das
push
mov
fs
inc
cmp
or
xchg
bound
sub
cmpsb
std
sbb
lods
push
push
data16
ljmp
or
in
lods
test
test
std
jne
rcrb
js
push
pop
rorw
jmp
push
cmp
loopne
xor
int
fcmovu
jge
xchg
dec
pushf
xchg
mov
sarl
in
xor
lret
dec
jp
or
mov
mov
out
pop
ret
pushf
jb
shrl
imull
dec
jg
push
pop
and
dec
call
adc
dec
inc
lods
rorb
icebp
ret
int
shrb
sahf
test
insl
ror
call
adc
aas
sbb
xchg
rolb
andl
loope
mov
jb
mov
notb
sbb
into
or
inc
out
dec
es
inc
xchg
push
xchg
mov
ss
pop
outsb
jg
mov
loope
push
inc
test
push
jno
pop
fsubs
lods
xor
pushf
push
mull
stos
outsl
xchg
dec
cmp
icebp
test
ret
mov
ret
jae
rorb
push
inc
hlt
cmpsb
repz
stos
add
xchg
mov
pop
es
lock
hlt
pop
inc
sub
ds
fisubrs
or
jno
mov
pop
add
std
mov
aas
hlt
push
lods
rcl
aam
mov
adc
jle
test
fdivrs
adc
test
arpl
adc
dec
xchg
outsl
ljmp
js
test
mov
xchg
inc
sbb
dec
xchg
mov
mov
scas
insl
test
push
mov
xchg
out
aas
push
adc
pop
push
jb
sbb
nop
xchg
gs
sbb
cmp
stos
sbb
aad
push
cmpsl
in
inc
cmp
int
test
and
adc
mov
ds
lret
push
shlb
inc
xchg
adc
dec
add
push
sbb
mov
mov
mov
inc
push
xchg
idivb
pop
fsubrs
mov
call
pop
lret
hlt
jmp
jecxz
sub
loopne
lods
shr
fcmovnbe
dec
fiaddl
mov
incb
mov
cli
repz
xor
adc
xchg
hlt
push
cmp
push
ret
pop
pop
loope
jl
inc
pusha
mov
mov
lret
sub
stc
sub
inc
jns
jge
inc
pop
jne
cmp
fsts
pop
adc
insb
inc
std
mov
jp
adc
add
lock
mov
pushf
dec
mov
lret
sub
jg
mov
dec
arpl
enter
lret
sti
xchg
xor
jg
sub
addr16
fstps
js
sub
mov
sub
loopne
ss
mov
cmp
cld
inc
outsl
adc
pop
adc
inc
add
add
aad
or
add
cmp
fsubl
dec
pop
jle
loope
aad
mov
push
sub
jmp
inc
fnstsw
xor
pop
push
add
fnstenv
mov
shrb
or
fsubrl
mov
jmp
ret
mov
insl
clc
ja
mov
xchg
outsb
sub
cmp
cs
cmpsl
incb
xlat
sub
or
movl
rorl
pusha
test
and
ret
sub
push
sub
imul
inc
pop
test
jns
mov
add
scas
xchg
cmp
xchg
roll
mov
data16
outsl
ja
mov
sbb
aad
shll
pushf
shr
ret
sub
stos
lea
rclb
jbe
and
add
lea
cmpsl
dec
push
insb
dec
add
push
fidivrl
adc
cld
sti
sub
in
push
pop
test
in
add
cmp
fxch
xor
mulb
and
aam
or
dec
aam
xchg
push
push
mov
cld
outsl
in
repnz
push
scas
pop
shrb
rol
mov
fucomi
xchg
sub
dec
mov
in
test
xchg
jmp
and
cld
pop
test
mov
pop
mov
mov
jo
repnz
mov
outsb
lret
call
jge
imul
push
clc
clc
and
cmp
xlat
loop
test
imul
daa
mov
test
shl
lret
in
das
sub
xchg
les
push
xchg
clc
mov
pop
dec
or
xchg
movsl
mov
insl
orb
and
out
in
lods
fisubrs
add
pop
sbb
lcall
ljmp
mov
in
fidivl
and
in
xor
xchg
imul
mov
xchg
sub
daa
inc
sbb
mov
cmpsl
inc
push
jp,pn
jo
adc
adc
loop
lock
dec
cwtl
xor
lods
std
and
or
jbe
xlat
or
cmc
mov
pop
cwtl
sub
or
lea
lcall
out
inc
mov
mov
push
inc
cli
cmc
sub
pop
aaa
pop
push
xchg
aam
xor
pusha
xor
push
adc
jp
das
sahf
mov
adc
dec
sarl
ss
sbb
mov
mov
adc
push
xchg
cmp
lcall
mov
mov
ljmp
push
sbb
xlat
mov
loope
add
or
sub
jp
insl
add
mul
cmp
lahf
nop
hlt
adc
aad
dec
add
and
xor
out
mov
xchg
jecxz
popa
sbbb
stos
stos
xchg
sub
cmpsb
xor
add
xchg
hlt
ss
sub
scas
fsubrs
jbe
cltd
je
ret
push
inc
xchg
cmp
xor
lret
push
pop
out
lods
sub
out
rorb
in
inc
sub
mov
shll
adc
xor
ret
push
mov
imull
daa
and
scas
gs
mov
dec
shll
mov
bound
or
cmpsb
xchg
sbb
ret
enter
cld
jb
adc
sbb
mov
ljmp
aad
adc
adc
insb
lcall
mov
mov
sub
adc
mov
mov
mov
lcall
les
sub
sbb
cmpb
jp
mov
sbb
in
lock
je
inc
adc
add
jecxz
outsb
cmp
les
jmp
jae
pop
jge
cltd
adc
loop
je
or
mov
push
cmp
push
adc
pop
add
lods
dec
and
push
arpl
out
inc
stos
mov
ret
add
test
divl
pushf
sbb
pusha
dec
sbb
out
mov
out
not
push
cmp
mov
loop
ja
add
mov
push
push
adc
sbb
and
jnp
repnz
sub
nop
es
jmp
sbb
adc
cmp
popf
mov
sbb
xchg
loopne
mov
push
or
clc
aam
push
sbb
cmc
pushl
insl
int3
shlb
mov
xchg
lods
cmp
into
lret
dec
cld
or
inc
xchg
ret
or
dec
aas
dec
jb
xor
pop
cmp
outsl
cmp
jle
mov
adc
jae
inc
loope
push
and
lea
pop
add
and
out
mov
and
cmp
fldenv
nop
push
mov
rcrb
mov
push
in
iret
pop
mov
sbb
mov
xchg
jnp
or
lea
lock
popa
xor
xor
mov
test
cmp
xor
push
popl
jns
repz
imul
cmpsl
aam
dec
sahf
test
aaa
insb
mov
mov
and
pusha
mov
shl
scas
add
lea
ss
lock
xor
nop
arpl
mov
dec
mov
addb
xchg
inc
out
cmc
dec
fsubs
shlb
or
add
inc
jecxz
mov
lods
sahf
das
mov
xchg
sub
push
mov
fcomps
or
arpl
inc
cmp
stos
pop
loop
fldenv
jno
dec
xor
sbb
mov
add
xor
movntq
jle
mov
gs
push
subb
aaa
push
aam
xlat
fcompl
sub
call
dec
sub
outsl
jno
jo
fimuls
stos
inc
push
sbb
mov
push
shll
call
out
cmp
sub
xor
cmpsb
add
test
push
xchg
out
push
pop
and
lea
mov
scas
cmp
push
and
ret
aas
test
les
mov
enter
ret
stc
mov
incl
mov
jne
out
lret
xorl
xchg
je
or
nop
pop
pop
gs
sub
aad
adcb
stc
sub
mov
pop
in
sub
inc
insl
or
out
xchg
add
fwait
sbb
sbb
out
add
test
int3
mov
fadds
into
fs
mov
int3
sbb
aaa
in
std
cs
fbstp
lret
in
xchg
jle
mov
lahf
adc
popw
ljmp
jmp
fs
adc
push
andb
and
sub
add
in
xor
ficoml
lock
xor
push
pop
xchg
pushl
decl
arpl
in
jp
pop
or
mov
fstpl
mov
sbb
dec
dec
int
and
push
lea
sub
add
inc
mov
or
or
call
push
fstpt
out
roll
add
pushl
mov
xor
lret
pop
aaa
mov
call
sub
movsb
push
call
lds
mov
push
cltd
cld
testb
push
popf
aas
mov
push
mov
mov
repnz
mov
outsl
sbb
inc
xchg
mov
arpl
fdivp
fldl2t
insl
sbb
iret
aas
lods
xor
push
fwait
pusha
inc
fstps
jle
mov
scas
mov
fcoms
sbb
stos
cld
cmp
inc
push
in
mov
sbb
sbb
int
mov
sub
cmp
and
pop
push
enter
rcrl
in
enter
into
test
pop
loop
xchg
sub
dec
inc
frstor
insb
pushf
ljmp
or
loop
jmp
dec
mov
insl
xchg
fsubp
inc
repz
repz
add
lods
mov
mov
xor
outsb
push
or
adc
push
mov
mov
sti
imul
cmpsl
mov
enter
add
inc
add
stos
lret
gs
inc
mov
mov
inc
push
or
sbb
jnp
or
cmp
sahf
push
mov
addr16
arpl
pop
mov
les
into
jg
and
inc
aas
add
sub
mov
btr
pusha
mov
pop
push
fcmovne
mov
push
mov
xchg
xlat
int
ss
push
cli
push
movsb
inc
jle
push
dec
ret
push
pop
mov
sbb
and
cmp
sbb
jg
cwtl
sarb
rol
push
cmp
jmp
ljmp
sti
repnz
mov
scas
dec
push
xchg
popf
jp
sub
int3
xor
out
jns
leave
in
fwait
iret
mov
popf
mov
or
pop
cltd
push
cmp
in
pop
enter
inc
mov
xchg
sbb
aas
sub
push
jg
mov
pop
flds
fs
test
pop
fwait
mov
shll
cmpsb
imul
cmpsl
jbe
cli
mov
cmpsl
pop
mov
jge
pop
mov
jno
add
add
inc
repnz
mov
or
rol
pop
ficoms
imul
ret
jne
mov
out
dec
ds
movsl
nop
xchg
pusha
push
aam
cwtd
push
pushf
pushf
jmp
inc
sub
lcall
jbe
insl
mov
lock
pop
sub
xor
loopne
adc
aam
inc
jns
cmc
mov
outsb
push
lock
data16
sbb
cmp
cmp
mov
xchg
jecxz
add
pop
push
pop
faddl
leave
mov
jmp
addr16
jno
xchg
popf
mov
aas
adc
test
cmp
inc
dec
sbbb
dec
pop
ljmp
mov
inc
out
fstpl
lea
jne
je
mov
sub
push
push
cmc
pop
ror
inc
jp
push
pop
outsb
inc
mov
push
outsl
loop
fistps
mov
dec
repz
lcall
jae
adcb
iret
adc
mov
fimuls
xor
fcoms
adc
sub
and
mov
mov
popa
jge
jne
dec
jge
ljmp
mov
pop
jmp
xchg
adc
add
enter
dec
sbb
mov
popf
mov
dec
fsubs
bound
xchg
js
fidivrs
and
test
dec
call
enter
push
cmp
pop
dec
hlt
lret
stos
fwait
popf
icebp
adc
mov
mov
insb
xchg
sbb
in
and
sahf
cmp
jmp
mov
call
push
push
mov
cmc
mov
jns
into
in
iret
sbb
clc
cs
faddl
aad
cmp
mov
incb
jnp
test
test
mov
gs
mov
jae
in
popa
les
fiadds
stos
mov
xchg
sub
add
std
fisubrl
jle
scas
mov
add
cmp
data16
fdivrp
fiaddl
cld
iret
jae
pop
mov
dec
lods
aas
mov
cmp
cmp
in
mov
mov
insb
ret
adc
in
pop
int
lret
hlt
jno
out
lea
clc
popf
je
jmp
sarl
mov
pop
clc
and
stos
add
fs
lret
pop
addr16
add
fs
movsl
ljmp
add
pop
xchg
jbe
mov
lcall
rorl
mov
insb
cli
sbb
int
push
push
pop
and
inc
popa
bound
in
mov
data16
lods
xor
fldln2
dec
loop
jno
int3
movsb
insl
popl
movsb
mov
xchg
inc
sbb
cmp
pop
xchg
pop
gs
jle
pop
and
inc
mov
push
mov
enter
push
jo
out
mov
jae
fidivrl
nop
gs
andl
movsl
shlb
pop
sbb
xor
loopne
std
add
test
inc
xlat
test
mov
pop
inc
adc
popf
cmp
mov
test
test
jbe
mov
fbld
jnp
jae
pop
pop
dec
dec
jns
cltd
dec
pop
fidivl
in
arpl
stos
jb
loop
add
dec
out
scas
leave
mov
sub
adc
outsl
mov
out
scas
jge
mov
dec
xchg
out
in
dec
jnp
push
adc
es
popf
jne
sub
lahf
sub
int3
dec
enter
jae
iret
mov
pop
repnz
mov
inc
fimull
iret
adc
daa
outsb
pop
ja
push
add
dec
mov
sub
es
add
jns
into
in
rcr
mov
call
sbb
mov
cs
mov
jg
mov
jmp
push
mov
adc
mov
xor
xor
pop
iret
mov
mov
jg
adc
add
add
or
and
data16
test
sarb
xchg
mov
repz
fnstcw
sarb
out
dec
pushf
mov
and
mov
push
cmpsl
sub
mov
xchg
scas
jmp
aad
ficoml
pop
iret
sbb
movb
movsb
pop
push
mov
mov
jl
add
push
loopne
outsb
loop
lods
or
sbb
dec
stos
sbb
lea
adc
mov
cld
push
mov
test
add
sbb
mov
test
dec
dec
mov
add
data16
jb
adc
dec
adc
cmpsb
inc
xchg
xchg
or
dec
pop
test
movsl
pop
rorb
inc
adc
pop
bswap
enter
push
lcall
and
leave
fwait
outsl
xor
clc
outsl
add
jg
adc
pop
ror
jb
imul
std
lret
lret
pop
pop
es
decl
cwtl
inc
dec
scas
xor
addr16
push
int3
xor
scas
add
jge
adc
dec
lods
in
and
dec
cmp
xor
movb
mov
jb
pop
push
dec
jle
and
xchg
jo
push
frstor
push
mov
lret
icebp
pop
das
stc
mov
xchg
xor
sbb
xor
push
daa
into
shll
cmpsb
es
mov
mov
inc
ja
shlb
fsts
cmpl
push
ret
mov
mov
fadds
adc
cmp
mov
pop
ss
lcall
jne
mov
sub
push
add
mov
add
dec
jg
sbb
test
mov
cmc
insl
push
add
add
fbstp
cmp
sub
sub
dec
pusha
sbb
xchg
push
aaa
jb
xchg
add
outsl
int3
addr16
pop
arpl
xchg
mov
mov
adc
call
nop
mov
test
imul
repz
sahf
das
lret
cmp
push
sbb
ret
mov
xor
xchg
add
outsl
shlb
pop
or
jp
jbe
int3
mov
fwait
jne
movsl
aas
mov
movsl
shlb
fs
and
jo
push
aas
push
ljmp
imul
test
popa
mov
ss
push
or
push
fsubr
fsubrp
cld
fwait
negb
cwtl
adc
and
fwait
rcll
and
mov
push
xchg
ret
sti
jb
movsl
xor
in
bound
arpl
inc
bound
ret
lret
mov
push
jecxz
adc
xlat
std
int3
pushl
push
movsb
sbb
scas
cmp
sarb
pop
movl
hlt
popf
jb
ja
aam
xchg
mov
js
xchg
pop
call
and
sarb
out
push
mov
call
sahf
push
and
lcall
xchg
push
popa
call
scas
cld
pushf
pop
push
xor
jo
shll
bound
xor
sbb
mov
lods
shrb
fisubs
arpl
lahf
push
psllw
iret
sarl
orl
push
aas
and
xor
add
adc
loope
icebp
ffreep
iret
sarl
orl
push
aas
and
xor
add
adc
loope
icebp
ffreep
iret
sarl
orl
push
aas
and
xor
add
out
cmc
faddp
iret
sarl
orl
es
test
lock
add
adc
and
xor
inc
fsubs
repnz
lcall
iret
dec
jae
mov
or
pop
jecxz
jecxz
addr16
adc
dec
in
xor
inc
mov
arpl
pop
ret
jl
or
sbb
sub
cmp
int3
loope
mov
jmp
pop
mov
pushf
jge
jae
out
mov
lret
sbb
jl
pop
mov
cmp
int3
pop
test
mov
inc
dec
push
pop
mov
push
mov
sub
cmpsl
div
out
out
pushf
mov
je
arpl
mov
out
es
dec
jge
int3
xchg
jecxz
or
std
fsts
push
sbb
pop
imul
mov
rorl
das
sub
iret
cmp
in
fucomip
mov
inc
jae
cmpb
daa
xchg
dec
cmpl
dec
loop
repz
add
scas
add
push
clc
ljmp
testb
rcrl
sub
mov
in
int
mov
addr16
cmp
push
sub
cmp
cmp
int3
inc
fsubl
in
xor
cmpsl
mov
pushf
arpl
pop
aad
cmpl
sbb
sub
jp
mov
dec
mov
pop
leave
jae
andl
xor
mov
mov
pop
dec
lea
push
in
push
stos
sub
ss
ret
es
mov
arpl
outsl
pushf
jg
inc
cwtl
pusha
mov
loopne
pushf
arpl
pop
mov
or
sbb
sub
cmp
int3
adc
and
xor
inc
mov
arpl
pop
mov
or
sbb
sub
cmp
int3
mov
loope
repz
or
push
pusha
cwtl
shlb
cmp
aaa
dec
cmp
push
pop
sub
mov
add
std
xorps
mov
roll
jb
sbb
es
fnsave
popa
mov
mov
jbe
pop
sbb
daa
addl
les
and
pop
or
movb
and
out
adc
fwait
push
cltd
pop
dec
and
mov
jp
sub
test
mov
fimull
lret
clc
outsl
add
shr
dec
push
pop
adcb
add
jo
jge
frstor
push
push
sbb
cs
insb
push
test
cmpb
mov
jns
cmc
pop
xor
xor
mov
adc
jge
sbb
popf
nop
push
mov
adc
xlat
enter
rcr
in
mov
ja
pop
jno
dec
sub
pop
mov
push
andb
les
push
stos
shll
jl
adc
jge
cld
and
pop
mov
ljmp
push
xchg
iret
in
push
aas
mov
dec
cmp
movsb
mov
in
imul
cmp
fcomps
cmp
push
cli
sub
stos
inc
cmp
cmp
ret
inc
pusha
ss
cld
cmp
add
mov
and
or
rcrl
orl
in
and
pop
push
out
or
jl
pop
aaa
ss
pushf
mov
sbb
push
sub
and
test
fcoms
psubb
pop
cmc
cmp
psrld
adc
lea
push
xchg
or
sbb
sbb
hlt
lcall
or
ds
cmp
fwait
je
inc
inc
adc
jbe
repnz
inc
mov
and
dec
push
daa
cmpsb
lds
jne
jbe
iret
sbb
repz
cmp
bound
je
dec
out
jne
push
in
sub
lods
scas
xchg
fbstp
xor
pop
push
jo
xor
xor
pusha
cli
inc
sbb
rcll
pop
push
arpl
into
mov
mov
mov
aam
out
push
jg
push
pop
emms
addr16
sbb
fidivl
jbe
loop
sahf
jb
or
pop
fldt
mov
xchg
xor
sub
xchg
inc
ja
in
inc
out
mov
aaa
cmp
data16
adc
outsb
lret
lcall
lahf
orl
fistpll
aam
or
sahf
sub
iret
loop
or
movsl
mov
add
push
js
repz
addr16
clc
in
in
inc
sahf
hlt
popf
fstl
inc
fwait
xchg
add
cwtl
fs
ja
inc
inc
nop
fwait
xor
jb
es
test
push
xlat
add
test
leave
sbb
mov
sbb
mov
inc
das
les
mov
jge,pn
jle
jmp
adc
jb
aam
sti
imul
pop
mov
insl
jne
push
repz
cmpsb
insb
test
addr16
and
or
popf
cmp
xchg
test
pop
stos
xlat
test
repz
inc
and
mov
das
out
cwtl
jno
jl
jne
and
cld
lret
outsw
mov
imul
and
xchg
gs
ljmp
jle
pop
push
jp,pn
xor
ljmp
orb
adc
add
fwait
cltd
mov
mov
cmpsl
sub
js
sahf
jno
les
jmp
xchg
and
add
das
dec
adc
sbb
pop
mov
in
mov
pop
shlb
mov
jp
lahf
enter
aad
stos
lock
mov
inc
imul
inc
scas
inc
mov
push
mov
cwtl
push
or
jg
sbb
jle
adc
sub
mov
scas
jp
xlat
out
pushf
es
pushf
mov
mov
or
cmc
or
adc
in
int3
clc
jnp
add
arpl
bound
lret
sbb
ja
jp
lahf
insb
ss
clc
xchg
shl
loope
andb
mov
mov
adc
and
fwait
mov
mov
adc
cmpsl
push
out
aad
mov
ljmp
dec
fmul
mov
cmc
repz
test
and
mov
aaa
sbb
xor
xor
mov
and
pop
or
test
ljmp
nop
cmp
lcall
addl
mov
out
adc
mov
mov
xor
mov
das
jo
jo
ja
mov
dec
sbb
loope
fs
pop
mov
lods
lea
ljmp
push
pop
aad
cli
aam
test
push
sbb
aam
repnz
or
adc
mov
mov
and
mov
mov
fxch
lock
hlt
daa
sbb
push
and
adc
jbe
repz
jle
sbb
pop
ret
imul
js
addr16
ds
movl
jmp
mov
jnp
push
shll
lods
stos
adc
enter
mov
mov
xchg
mov
or
push
enter
inc
es
cmp
inc
or
cmp
rclb
xlat
mov
pusha
insl
addb
rolb
mov
repz
inc
insl
or
inc
xor
lcall
dec
sub
jne
popf
inc
sahf
fisttpll
sbb
stc
shl
ljmp
in
jno
dec
das
cltd
inc
std
ss
cmp
andl
inc
dec
nop
sbb
push
push
orl
dec
add
icebp
dec
sub
fdivs
sub
adc
fimuls
inc
jmp
inc
push
cld
es
btr
not
adc
lock
add
insb
jo
insl
lds
cmp
dec
movsl
clc
in
inc
outsb
dec
inc
in
outsb
cmpb
das
adc
mov
mov
lea
fnstenv
or
lahf
inc
js
ret
xchg
das
xor
adc
mov
cltd
cmp
and
mov
inc
pop
mov
cmpsl
mov
and
shrb
jl
push
das
and
test
andb
jmp
pushf
jle
rcrl
add
stos
aas
je
setge
jecxz
outsl
fs
ja
add
sub
or
ss
cwtl
pop
fiaddl
mov
repnz
orl
cmpsb
hlt
push
add
and
adc
and
push
pop
add
and
mov
add
cmp
or
mov
inc
add
and
call
jbe
iret
xor
push
mov
mov
inc
inc
mov
pop
outsl
pop
xlat
adc
push
ljmp
cmp
ljmp
sti
push
ds
lock
js
dec
loop
mov
lahf
mov
sbb
fwait
sub
out
lds
jnp
movsl
jecxz
xor
outsl
in
jg
lcall
cmp
push
jo
es
sahf
repz
mov
lds
insb
sub
lcall
pop
leave
dec
cwtl
arpl
xchg
push
mov
push
xchg
loopne
rol
icebp
sub
adc
push
xchg
rcll
call
xchg
or
mov
mov
rcr
pop
fnstcw
push
mov
push
cmpsl
out
jbe
jge
int
leave
aam
push
gs
test
hlt
mov
sahf
enter
mov
in
lock
lds
push
or
out
rolb
adc
inc
loop
aam
out
mov
fs
pop
loop
xor
outsb
and
push
xchg
ret
or
adc
push
mov
idiv
test
push
mov
dec
repnz
movsl
aas
inc
xlat
xchg
jnp
add
or
fwait
movsl
fisubrs
insb
dec
sub
add
jg
cs
inc
sub
mov
jp
lock
in
mov
mov
jp
mov
adc
cmp
int3
movsl
push
ja
push
mov
loope
cltd
mov
inc
push
les
sbb
add
sbb
or
js
inc
add
mov
pusha
cmc
shl
pushf
dec
jnp
pop
scas
aaa
fsubr
fcoml
adc
adc
pop
adc
negb
cmp
mov
and
sub
adc
or
cmp
mov
into
ljmp
mov
fldt
and
pop
lods
loope
jb
jne
pminub
hlt
cmp
sbb
xlat
enter
outsl
cld
stos
pop
mov
cmpsl
or
mov
iret
jbe
je
pop
adc
call
jl
inc
bound
rcr
adc
ficoml
test
push
stc
inc
repnz
jne
and
xor
push
inc
sub
lods
ds
mov
into
lock
or
fistl
or
imul
daa
jo
neg
sbb
adcl
dec
cmp
mov
push
lea
lds
xchg
arpl
inc
out
jb
fwait
addb
je
addb
std
xchg
call
fdivl
dec
fadds
add
out
jb
mov
add
ja
cmp
push
inc
sbb
dec
loopne
add
xor
mov
mov
daa
xor
rol
pop
and
add
popa
ja
xlat
push
out
aas
inc
std
or
call
std
test
and
dec
mov
int3
cmp
push
mov
sti
cltd
test
push
shrb
cltd
sbb
sub
push
inc
and
jae
dec
lock
rsqrtps
or
inc
cs
repnz
jecxz
ds
pop
and
addr16
mov
test
cmc
dec
inc
aaa
and
pop
xor
cwtl
stos
adc
int3
xchg
lock
movsb
inc
paddusw
orb
stos
push
stc
loopne
insl
rolb
mov
sbb
stos
dec
inc
add
imulb
out
loopne
mov
adc
and
call
ror
inc
mov
negl
inc
inc
lcall
mov
or
sub
xor
test
bound
ret
inc
and
pop
out
jne
imul
push
xchg
sub
les
insl
ret
or
dec
pop
mov
push
mov
neg
out
sbb
jmp
pop
pop
js
jnp
jno
sub
mov
ss
pushf
mov
lea
dec
push
ds
dec
xchg
dec
xor
inc
sti
mov
pop
push
mov
xor
sbb
lds
scas
xor
repnz
jne
mov
sub
jmp
mov
sbb
imul
xor
pop
addr16
dec
xchg
add
outsl
ss
int
movsb
lret
sub
lret
loopne
mov
aas
in
rorb
fstpt
sti
outsl
mov
arpl
push
push
cmp
lret
xor
in
cwtl
mov
int
imul
pop
mov
sbb
xor
mov
mov
dec
mov
cmpsb
pop
dec
jl
insb
pop
inc
jp
jecxz
data16
sbb
jo
dec
push
jle
sbb
bts
dec
push
inc
gs
or
int3
xchg
dec
push
div
sti
or
cmpsb
push
icebp
push
or
call
cld
inc
inc
cmpb
sbb
pop
pop
jg
dec
mov
nop
inc
or
xor
pop
test
push
jne
mov
push
movsl
inc
fistpl
pop
daa
andb
jmp
and
fimuls
cmp
shll
and
scas
ja
fdiv
out
mov
outsl
cmp
fstp
dec
stc
add
int3
mov
call
iret
jne
testl
sti
push
pop
lahf
movsl
sub
das
jo
lcall
mov
cmpsl
cmp
lds
out
loop
jae
mov
mov
out
push
and
lock
cmpsl
orl
or
enter
stos
pop
jge
clc
loop
cmp
adc
imul
outsl
mov
jg
mov
lea
sbb
mov
adc
out
aam
mov
jno
or
jg
fadd
clc
jbe
movsl
imul
les
repz
sub
repz
pop
jae
xchg
adc
jae
out
bound
xchg
fdiv
in
into
mov
lcall
dec
jnp
xor
mov
ficoml
cmp
mov
or
pop
pop
fnclex
cs
cs
fimuls
stc
cltd
pop
inc
ds
arpl
repnz
cmp
xchg
adc
push
ja
xchg
add
lret
cmp
addl
push
adc
lret
out
dec
aas
mov
or
sete
push
push
les
sti
sub
and
cmpsl
and
mov
and
xchg
imul
push
ljmp
push
test
inc
mov
jbe
cmp
inc
imul
jle
flds
lahf
mov
dec
push
sahf
jl
jg
adc
rol
sbbb
enter
or
push
fnstsw
cmp
repz
int
stos
adcb
dec
jne
jg
in
jo
xor
int3
push
fwait
cmp
mov
push
lock
leave
or
and
push
jns
repnz
xchg
sub
mov
mov
xor
xchg
xor
iret
leave
outsb
add
lahf
mov
push
fisttpl
cmp
pusha
aad
je
mov
jae
fs
test
jg
mov
scas
std
les
jne
insl
repnz
or
and
or
scas
cli
dec
lds
sti
push
loope
daa
lea
out
push
sbb
pmulhw
mov
dec
sbb
sti
jne
jle
rorl
stos
jbe
adc
fdivrl
and
sbb
out
cmp
sub
inc
les
or
aam
xor
and
decl
jnp
cmp
rol
push
dec
mov
std
mov
into
inc
xor
mov
xchg
mov
movsl
or
pop
lcall
cmp
stc
pop
xchg
mov
aam
mov
pop
subb
adc
inc
pop
in
xchg
xlat
sbb
lret
cmp
loopne
jge
lret
jge
mov
sub
lahf
repnz
rcl
inc
sti
aaa
loop
lock
jl
enter
pop
rorl
jg
cmp
xchg
fcmovne
cmc
mov
inc
lcall
and
xor
loop
iret
mov
lahf
test
aaa
add
hlt
pop
pop
sbb
push
sub
iret
ficompl
pop
in
mov
mov
pushf
ds
cmp
sbb
xchg
rclb
mov
rol
jbe
xchg
or
enter
aad
mov
loope
lods
cmp
shrl
call
jno
out
ret
lret
sub
xchg
mov
cltd
andb
dec
leave
shlb
mov
scas
cld
jb
pop
loope
aaa
mov
add
cmp
inc
sub
xchg
out
je
std
es
shl
or
insl
mov
or
nop
mov
pop
mov
jns
mov
out
xchg
sbb
leave
xchg
add
pop
xchg
push
push
sbb
loopne
xor
daa
xchg
je
lods
scas
jmp
push
cmp
jp
jecxz
aas
or
inc
pop
sub
sub
or
clc
int
lret
or
stos
cltd
cwtl
call
jl
call
mov
cmp
int
gs
movsb
test
test
cs
rclb
mov
fcmovnb
call
and
pushf
fdiv
xor
mov
or
push
dec
sub
addr16
lock
pop
cmp
loope
sub
adc
fcomps
or
ja
es
dec
pop
xchg
cli
sti
dec
jb
jmp
daa
adc
lcall
lea
adc
sbb
push
pop
mov
movsl
add
or
ss
adc
mov
out
dec
sub
jns
in
xchg
pop
xchg
hlt
xchg
out
sub
aam
pop
xchg
mov
cltd
fisubrs
mov
xchg
ss
les
pop
clc
das
subb
dec
and
lods
pop
outsl
lret
xor
ds
xor
cmc
push
in
cmp
add
xchg
out
adc
xchg
and
outsl
sub
dec
sahf
jae
out
hlt
push
fadds
insl
gs
jne
repnz
mov
lock
dec
adc
push
cmp
dec
pop
fsubp
jne
pop
loopne
pop
pop
into
mov
cmp
lret
jae
xlat
bound
das
push
add
jae
jae
pop
mov
pop
mov
das
or
push
dec
pop
push
cmp
cltd
test
jg
ret
mov
mov
jbe
in
sbb
xchg
cmp
std
xchg
mov
jae
ljmp
lahf
add
icebp
ljmp
or
stos
sbbb
dec
add
out
push
int
loopne
repz
mov
inc
sbb
jp
mov
mov
mov
and
sbb
xchg
xor
fxch
xchg
mov
sbb
inc
rep
pop
adc
dec
xchg
lea
mov
shl
vunpckhps
cmc
adc
inc
inc
pop
mov
scas
dec
movsb
js
testl
xchg
xor
and
mov
xchg
repz
sub
sbb
mov
in
shlb
cltd
test
xchg
mov
movsl
pop
test
cmc
inc
nop
xor
xor
dec
mov
add
xor
in
lds
xchg
pop
int
mov
xchg
mov
sbb
lock
cwtl
test
lods
nop
pop
addr16
dec
aam
in
fdiv
sti
fs
mov
adc
ja
xor
ljmp
or
bound
xchg
daa
out
adc
mov
jge
fisubrl
xor
mov
mov
and
mov
pop
scas
xor
cmp
cmpsl
or
or
lock
sub
push
aaa
and
jae
add
push
std
sub
mov
sub
leave
sub
add
mov
lods
or
adc
stc
fisttpl
std
push
jne
add
imul
xchg
js
and
mov
and
inc
fnstcw
lods
xchg
jl
in
fsts
stc
jae
pop
ja
jae
jo
ret
sub
sbb
jecxz
repnz
data16
push
mov
sbb
xchg
mov
xor
xor
fsubrl
mov
popf
cmp
mov
arpl
stc
xchg
mov
test
or
leave
pushf
sbb
add
push
push
lret
pop
lods
repz
mov
mov
outsl
xchg
cmp
lock
in
inc
outsl
push
fwait
loope
in
cltd
stc
fbstp
dec
cmc
dec
aaa
lods
or
stos
insl
sub
inc
cmp
movsb
adc
aam
or
daa
mov
push
pop
add
xor
lret
jo
cwtl
inc
repnz
fcmovu
mov
sub
test
aas
or
daa
and
jecxz
pop
enter
push
lcall
cmpsb
mov
xor
imul
insl
orb
out
and
pop
xor
jle
out
inc
loope
fists
in
dec
ret
or
test
and
rorb
inc
cmp
sub
mov
adc
xchg
lds
in
in
jnp
hlt
adc
mov
xor
fsubrp
fisubrs
icebp
outsl
lret
addl
fidivrl
mov
sub
mov
or
test
in
sub
push
pop
and
add
and
fldz
adc
sti
addr16
scas
mov
fnsetpm(287
inc
mov
and
sbbb
ja
add
adc
out
lret
or
leave
adc
cmp
int3
shll
or
mov
xor
jno
movsb
lcall
test
xor
mov
enter
aam
lds
xor
in
xchg
or
cli
test
jmp
enter
out
in
lahf
hlt
jg
xchg
xor
and
inc
lcall
aas
mov
sbb
popa
lahf
lods
jmp
arpl
lods
inc
mov
xor
sbbb
push
bound
sub
out
or
adc
sbb
mov
cwtl
incl
or
mov
icebp
push
and
jno
pushl
aas
push
xchg
push
sub
loope
out
sub
xchg
pop
xchg
xchg
inc
es
sbb
pop
xlat
mov
dec
icebp
fisubs
sub
pushl
repz
and
push
xchg
mov
sbb
xor
add
mov
pop
xor
imul
mov
cmp
or
das
lds
andb
adc
pop
rcl
testl
clc
xchg
jo
in
in
sub
jmp
or
and
jg
cmpsl
dec
mov
pushf
sahf
js
popf
and
mov
pop
js
push
jmp
or
and
or
push
xor
les
aaa
shll
mov
lds
xor
lahf
add
ljmp
je
aas
dec
cmpsb
xchg
sbb
mov
pop
inc
scas
lret
xchg
int3
rolb
dec
in
insl
xor
repnz
xchg
scas
or
sbb
gs
xchg
out
cwtl
adc
fsubl
cld
inc
mov
arpl
pop
mov
or
sbb
sub
cmp
int3
adc
and
xor
inc
mov
arpl
pop
mov
or
sbb
sub
cmp
enter
in
xor
rorl
mov
push
insb
mov
ret
or
sbb
int3
dec
fdivrl
adc
inc
mov
arpl
inc
xorl
or
or
mov
test
fisubrl
lret
or
sbb
sub
cmp
dec
jnp
imul
dec
mov
mov
jmp
lret
or
sbb
sub
cmp
mov
pop
mov
mov
mov
repz
fdivrs
adc
cmp
dec
cmp
add
mov
aad
add
xor
inc
add
push
pop
clc
pop
or
cmpsl
jge
shl
ljmp
fsts
hlt
mov
or
pop
hlt
push
flds
scas
int3
out
inc
lods
lods
jmp
scas
cmpsl
daa
or
stc
mov
imul
movsl
jns
mov
cltd
stos
ret
fwait
mov
sub
xor
imul
sub
xchg
ljmp
dec
dec
fs
imul
mov
sub
cmpsb
out
pop
js
je
dec
push
xor
shrl
fs
inc
pop
cmp
aas
push
adc
sbb
aam
sub
stc
pop
inc
mov
mov
jmp
ret
or
sbb
sub
cmp
dec
arpl
imul
stos
rcrb
test
push
jl
sub
fs
push
pop
cmp
pop
aas
es
ret
cld
stos
int3
jmp
mov
mov
insb
inc
dec
dec
sub
dec
dec
or
add
aaa
or
in
cli
cltd
into
cli
aad
test
stc
lret
or
sbb
sub
cmp
dec
jnp
imul
dec
mov
mov
jmp
lret
or
sbb
sub
cmp
dec
jnp
imul
dec
mov
xchg
cwtl
aaa
fisttpl
jle
sub
xchg
add
int
sub
jbe
adc
sbb
xor
test
sbb
sti
jb,pn
jg
loope
sbb
xor
jl
jnp
push
sbb
inc
imul
pop
pop
nop
mov
xchg
popf
jbe
outsb
loopne
push
mov
loope
add
lods
inc
in
cmp
sarb
add
pop
push
xlat
sbbb
mov
lcall
pop
inc
add
aad
xor
out
pop
mov
adc
idivl
mov
rcl
into
fistpl
out
arpl
outsb
xor
cwtl
addr16
daa
in
xchg
pop
mov
cmpsb
mov
into
jns
cmp
or
jle
int3
repnz
outsl
mov
mov
pop
lcall
idivl
sub
mov
scas
sbbb
mov
pop
int
fimuls
mov
rcrl
mov
js
fwait
inc
cmpsb
mov
ss
ljmp
fadd
or
mov
out
lea
sahf
pop
xchg
out
cld
mov
inc
mov
push
mov
adc
bnd
je
insl
push
sbb
sbb
movsb
adc
lret
dec
enter
sbb
pop
repnz
or
sub
adcb
shrl
xor
pop
push
icebp
adc
or
loopne
xor
push
xor
xor
jmp
in
jne
xchg
gs
sub
jae
pop
inc
cmp
add
subl
mov
loope
mov
pusha
jo
mov
fstps
pusha
xchg
stc
jo
push
loopne
pop
loopne
loopne
pushl
xchg
adc
out
lahf
fstl
xchg
or
cltd
jle
xchg
inc
cs
outsl
pop
leave
inc
mov
repnz
pop
stc
test
mov
lahf
out
mov
inc
cmpsl
je
adc
sbb
sbb
push
sbb
es
frstor
dec
sbb
fsub
cmp
mov
add
xor
mov
xchg
out
cmp
inc
jbe
sub
jbe
inc
out
addr16
lock
mov
sbb
pop
push
mov
or
loop
add
aad
dec
pop
jle
and
xor
hlt
cltd
aaa
enter
inc
add
pop
cmp
push
cmp
cmpsb
sbb
cmp
lods
int3
pmaxub
outsl
sub
fwait
push
xor
scas
dec
cmp
jge
jmp
pusha
rol
ss
outsb
dec
scas
push
into
add
lds
mov
ja
jns
mov
push
mov
xchg
mov
js
push
pop
cmp
hlt
loopne
icebp
shll
adcb
enter
outsl
mov
pop
and
or
sub
xor
stos
xchg
adc
nop
and
int3
cmp
inc
mov
dec
test
sub
mov
loopne
mov
adc
cli
iret
sbb
test
mov
jns
cs
cltd
ret
pusha
test
ja
fdivs
scas
and
loope
idivb
data16
cmc
pop
pop
pop
mov
inc
push
fcoml
outsl
addr16
sarb
inc
daa
inc
and
iret
add
lea
ret
lret
cmp
ror
xor
arpl
rcr
mov
sub
xchg
nop
cmp
insl
daa
out
dec
fcmovb
xchg
jmp
mov
popa
in
xor
cmp
push
xchg
loopne
jae
mov
mov
in
fdivr
data16
xchg
pop
adc
lods
add
test
push
mov
pop
inc
stos
call
or
push
lods
mov
andb
and
sbb
and
ret
push
pop
push
cmp
jp
pop
mov
out
xorb
enter
pop
aad
je
stc
xchg
pop
lcall
or
inc
push
push
jns
cmp
push
jns
inc
ret
lret
add
mov
xor
lea
mov
icebp
call
add
sti
cltd
not
in
xchg
call
clc
xor
jbe
lcall
fsubr
pop
inc
mov
clc
in
and
test
sbbl
fisubrs
scas
mov
push
leave
add
shl
cld
repz
scas
inc
mov
lods
movaps
lods
sbb
push
cmpl
adcb
in
add
shr
add
fwait
ja
mov
fldenv
add
mov
pop
je
pop
notb
jle
pop
add
inc
imul
adc
jo
sub
inc
xor
fwait
pop
jne
mov
cld
jno
pop
data16
std
xor
jno
outsl
ljmp
pusha
sub
out
in
dec
mov
mov
loope,pn
fstpl
jge
jo
mov
les
xor
cmpsl
dec
stos
arpl
fisttpl
inc
sarl
xor
rcrb
xlat
mov
fs
movlps
add
sub
imul
int
lds
ret
pop
ret
cli
les
out
mov
push
xchg
xchg
cmp
movsb
es
sub
pushf
insb
sub
dec
outsb
sbb
mov
in
cmp
std
cmp
jmp
int3
sbb
fdivs
sbb
dec
fldcw
cmp
das
cmp
sub
lock
mov
push
shll
adcl
aas
push
cmpsl
xchg
call
ret
ss
je
inc
fwait
sub
dec
push
scas
mov
dec
call
inc
stos
xor
aaa
push
int3
cmpsb
and
jecxz
lock
setb
mov
inc
test
ret
cmp
stos
mov
mov
cmp
out
cmc
pop
xor
jmp
mov
outsb
mov
cmp
cmp
pop
pusha
jbe
xor
jmp
push
fidivrs
pop
pushf
lahf
cmp
shrl
sub
iret
lock
jp
gs
push
mov
das
jle
out
jecxz
mov
push
mov
movsb
push
pop
out
shlb
or
cmpsb
sbb
or
stos
insl
repnz
loop
fists
sbb
jns
sub
sbb
xor
and
loop
scas
outsb
pop
lods
dec
into
mov
xor
fimuls
jecxz
je
xchg
dec
sti
xchg
dec
ds
sti
inc
cmp
and
daa
xchg
sbb
and
test
fsts
imul
stos
repnz
dec
jae
push
mov
movsl
mov
lret
mov
dec
decb
mov
xchg
fidivrs
in
lds
fnsave
xor
les
cld
jns
jp
popf
adc
mov
aam
and
inc
les
nop
and
sub
fwait
sub
cmp
sub
inc
insl
stos
lahf
pop
xor
xor
cli
cli
mov
xor
jnp
inc
sub
push
dec
mov
popf
mov
fiaddl
jns
adc
fimull
or
icebp
pop
mov
mov
ficoml
add
xchg
push
int
cmpb
mov
fadd
cmp
subb
mov
fs
das
jmp
insl
negb
addr16
fldcw
cmp
clc
jecxz
add
cwtl
pop
push
sbb
push
in
mov
pop
and
clc
pop
ds
lods
mov
mov
imull
in
xchg
pop
ss
sub
xlat
pop
jge
loopne
stc
mov
daa
push
test
pop
dec
lcall
dec
mov
mov
cmc
mov
stos
sub
jnp
mov
sub
jg
shll
adc
cmp
in
mov
test
stos
cmc
or
add
xchg
push
dec
cmc
sub
call
mov
es
leave
lcall
jl
cltd
scas
sub
fsubl
lods
fwait
push
bnd
incb
pop
sti
in
stos
cmp
jmp
push
adc
fdivrl
sahf
std
lret
lea
scas
jg
cmp
xchg
push
pop
xchg
adc
lahf
push
or
pop
cld
dec
mov
and
shlb
scas
lahf
out
scas
cli
outsl
push
ja
mov
mov
cmp
addr16
ljmp
sub
jle
jmp
lods
idivb
out
add
jmp
inc
sub
ljmp
loop
xchg
inc
cmp
aad
adc
push
aad
roll
test
cmp
xchg
fists
pusha
mov
push
xchg
mov
jne
clc
jne
loop
or
ja
fisubl
pop
jp
fwait
jbe
ja
insl
pop
dec
je
int
arpl
fistpl
ds
aaa
sub
sbb
loope
rcr
nop
pushf
icebp
cmpsb
pop
clc
jns
add
mov
mov
cwtl
xor
movsb
jp
xchg
sbb
out
xor
mov
mov
scas
adc
mov
inc
sbb
cmp
insb
mov
shl
pop
test
aam
xchg
inc
fisttps
ret
ret
popa
idivl
subb
dec
cmc
push
loop
mov
call
outsb
cwtl
shrb
cmp
movsl
loope
fcmovbe
out
push
shlb
pop
mov
adc
clc
push
pop
ja
mov
and
jo
pop
jp
das
sahf
stos
imul
iret
pop
mov
inc
ljmp
je
sub
dec
mov
in
notb
mov
movntq
out
push
pusha
mov
mov
loopne
ret
mov
cmp
or
orb
mov
pop
xchg
adcb
leave
pop
insb
push
fs
pop
push
mov
test
push
aam
js
out
xlat
clc
jge
sbb
stos
lods
xorl
fistpl
pop
adc
mov
outsl
xorb
gs
in
popf
xchg
add
lret
inc
les
and
call
dec
cwtl
in
andl
pop
les
pop
mov
mov
pop
adc
sbbb
jns
add
aam
aad
shr
inc
dec
and
enter
jge
scas
in
rcr
xlat
dec
and
xchg
inc
jecxz
mov
mov
mov
inc
mov
insl
aad
xchg
andb
das
push
xchg
sbb
test
pop
jg
sub
jno
cwtl
xchg
adc
mulb
push
mov
cmpsb
sbb
push
cmpsl
les
or
into
out
arpl
subl
jno
test
inc
lock
test
push
adc
and
in
mov
lods
daa
out
pop
bnd
push
mov
loopne
add
inc
mov
mov
mov
sub
mov
lret
testb
repz
loopne
popa
hlt
fs
pop
pop
xchg
sub
sub
xor
cmp
mov
push
add
add
lods
fadd
fists
push
jge
sahf
and
inc
push
dec
xchg
pop
sbb
push
ficoms
mov
gs
add
mov
repz
pop
iret
cmp
adc
push
inc
cs
pusha
sbb
dec
es
pop
aas
mov
xlat
sub
xchg
jecxz
loope
flds
fsubrs
mov
sbb
mov
mov
inc
mov
cmp
cltd
add
jbe
lahf
cmp
lds
int3
out
cmp
mov
cmp
mov
and
jmp
sti
push
imul
mov
sub
sahf
repnz
mov
dec
ljmp
pop
sub
push
sub
aad
movsb
add
fbld
and
in
pushf
xchg
lods
bound
pushf
or
inc
lcall
insb
scas
loopne
mov
cs
int
cli
sub
loope
mov
js
data16
lods
cmpb
fisttpll
xchg
sbb
inc
adc
cmp
jo
pop
mov
sub
sysenter
xor
push
in
add
cmp
ret
repz
test
inc
aad
mov
push
push
imul
adc
aad
and
scas
xchg
mov
cmp
stos
xor
adc
jmp
jg
jo
pop
ljmp
dec
xchg
xor
fscale
push
jmp
xor
testl
inc
dec
out
xchg
or
cld
sbb
lahf
sub
cs
ljmp
mov
fildll
jo
mov
fcompp
mov
clc
jg
stc
inc
rcr
sbb
int
pushf
in
dec
inc
jne
mov
add
test
pushf
sbb
sub
hlt
lahf
mov
ret
pop
out
pop
mov
rol
in
jp
adc
jp
ljmp
or
push
jge
pop
je
and
out
lods
mov
bound
addr16
mov
jns
iret
stos
imul
mov
addr16
out
in
cmp
fwait
and
adc
add
test
xchg
fsts
pop
mov
ds
adc
jle
stc
arpl
mov
outsl
adc
dec
cs
testl
int
fwait
cmp
out
popf
gs
rcrl
cmp
inc
fnstenv
fmuls
fwait
lds
pop
cs
xchg
xchg
add
push
sbb
les
mov
mov
es
sub
idiv
lea
rcrl
fstpt
out
sahf
adc
cmpsb
push
adc
jno
cmc
adc
ds
add
and
insb
js
das
xor
lock
scas
mov
in
and
xchg
addr16
jmp
lret
pop
mov
push
icebp
in
and
std
lahf
adc
jne
inc
push
xor
dec
adc
pushf
mov
xor
dec
in
push
jmp
int3
push
adc
pushf
fists
shlb
nop
mov
fbld
lret
xchg
push
shrl
cmpsl
fs
xlat
sub
sbb
andl
push
inc
cmpsb
sub
add
leave
lea
hlt
fs
mov
addr16
xchg
icebp
sub
data16
and
jecxz
js
mov
pusha
in
xchg
and
insb
mov
xor
mov
jmp
mov
jno
enter
lahf
add
mov
adc
sbb
sarb
fs
cmc
and
pop
pop
push
push
jg
mov
dec
push
ss
sti
scas
mov
addr16
jae
jmp
daa
sub
mov
mulb
std
int3
inc
sub
inc
or
pop
sbb
xor
push
add
mov
mov
mov
inc
das
js
int
inc
ljmp
stc
mov
es
fs
inc
test
cld
xchg
pop
jbe
add
inc
fcoml
mov
ljmp
scas
mov
xor
and
mov
and
andl
pop
pop
sbb
xchg
mov
in
pop
pop
jg
xor
ja
jne
inc
dec
mov
and
xor
dec
xchg
xor
outsl
lret
mov
rolb
inc
lret
xchg
ret
add
sbb
or
add
pop
sbb
jmp
lahf
jbe
inc
or
mov
adc
ret
push
clc
or
movsb
fiaddl
jmp
cwtl
pop
cmpsb
mov
mov
xor
add
repz
push
in
adc
sbb
popa
movsl
jne
in
pop
add
jp
add
ret
push
adc
js
mov
or
add
sub
jae
inc
jne
jae
lods
inc
push
mov
mov
push
cltd
popf
ret
mov
das
in
mov
push
xor
imul
mov
nop
dec
jle
aam
pusha
dec
push
mov
mov
ret
fs
mov
stos
ljmp
pop
out
sub
mov
push
icebp
ljmp
mov
js
jnp
pusha
xchg
insl
fstps
mov
mov
sbb
ds
inc
call
out
aas
fcmovbe
cmp
pop
pop
les
xchg
lahf
push
ss
out
shlb
pop
mov
add
sti
icebp
sub
fisubs
aad
xchg
enter
mov
in
shll
icebp
sbb
inc
sti
xchg
sbb
stos
xor
push
arpl
jbe
push
loopne
dec
dec
popf
xchg
jnp
fcomps
call
mov
adc
and
push
mov
je
ja
jbe
sbb
cmp
pop
lcall
mov
test
jbe
pop
and
xor
lret
fcmovnu
xorb
outsl
xlat
jmp
call
push
cmp
dec
aad
xor
mov
cmp
or
dec
enter
shrb
push
mov
rolb
bound
js
xchg
enter
jecxz
push
and
adc
and
jp
pop
add
fdivl
outsb
cld
mov
jp
jae
xor
jp
ja
jle
pop
loop
ja
push
js
pusha
outsb
clc
xchg
insb
out
das
test
sub
cmp
popa
add
in
jg
fnstcw
cmp
pop
xchg
push
sbb
add
and
lods
push
mov
out
and
je
mov
xor
mov
xlat
in
pop
adc
movsl
pop
out
loopne
adc
ud2
lea
pop
xor
xlat
adc
sbb
dec
sub
jmp
nop
stc
adc
enter
cmp
das
cmp
or
imul
mov
scas
icebp
loopne
xorl
xlat
cmp
and
mov
push
out
mov
enter
mov
mov
adc
lods
push
iret
sub
push
shlb
push
cmp
arpl
insl
sub
insb
dec
sub
mov
add
or
lahf
push
lret
jns
rcll
or
fistl
shlb
clc
xor
nop
int3
adc
mov
push
scas
imul
jl
fstpt
lret
pop
hlt
lods
jmp
arpl
ffreep
in
jnp
mov
ret
inc
popf
arpl
rclb
inc
pop
or
movsb
add
sar
xchg
loope
push
push
int
dec
outsb
cs
and
sub
sahf
push
sub
mov
gs
ret
cmp
arpl
scas
mov
jnp
xchg
push
add
push
in
and
sbb
rol
add
mov
cwtl
inc
pop
shlb
pop
lds
jne
loop
dec
or
cmpsl
dec
jnp
dec
movb
scas
in
or
jecxz
mov
ficomps
dec
fcmovb
int3
movsb
adc
sbb
fs
jbe
inc
jne
js
xchg
iret
mov
int
imul
dec
int
mov
mov
push
adc
and
mov
lcall
js
mov
imul
or
stc
mov
fdivl
sahf
or
sub
test
test
std
pop
cmc
insb
jle
lea
jecxz
cmp
dec
test
icebp
mov
mov
dec
gs
lock
outsl
mov
js
jg
dec
jle
dec
jp
nop
push
jae
ss
movsl
mov
in
sbb
dec
in
pop
pushf
loop
pop
cmpsb
adc
jnp
mov
jge
push
and
sub
ljmp
add
adc
jg
leave
in
cwtl
fists
scas
fcompl
xor
icebp
lods
xor
push
dec
sbb
cmp
ljmp
inc
xor
pop
mov
leave
in
lods
pop
mov
push
xchg
jecxz
cs
inc
push
mov
jb
gs
std
inc
mov
mov
aaa
mov
test
sti
sub
out
xchg
push
xor
cmc
jnp
add
adc
dec
adc
pop
dec
sbb
and
int
push
push
rclb
jne
inc
xchg
out
rcl
push
xor
arpl
std
or
mov
dec
cmp
das
and
dec
leave
cli
xor
enter
mov
xchg
mov
lahf
mov
lahf
dec
sub
and
xchg
jle
add
add
outsb
lods
mov
mov
movhlps
loope
bound
add
push
jecxz
iret
mov
imul
pusha
and
sbb
inc
cmpsb
rcrb
je
imul
sbb
adc
es
leave
inc
mov
in
std
in
cltd
add
and
out
jg
sub
stc
push
addr16
inc
and
adc
push
bound
jmp
fidivs
pop
arpl
adc
jge
sbb
jbe
stc
push
mov
adc
push
jl
inc
sub
shlb
cmpsb
aaa
inc
push
ljmp
mov
aaa
out
cmc
in
sub
jge
sarl
sbb
xlat
pusha
fwait
sbb
ficoml
aaa
cwtl
adc
mov
mov
adc
fnstcw
jp
pop
mov
sbb
repnz
scas
dec
cmp
lods
cmp
sbb
aam
sbb
scas
fisubl
mov
pop
pop
lods
adc
scas
adc
adc
ds
test
mov
scas
lods
cmp
cmp
das
xchg
adcl
mov
sub
sbbb
mov
push
lea
push
shrb
pop
test
push
dec
adcb
pop
mov
adc
test
mov
jmp
lret
or
sbb
sub
cmp
dec
jnp
imul
dec
mov
mov
jmp
lret
or
sbb
sub
cmp
dec
jnp
imul
dec
mov
mov
jmp
fstpt
or
sbb
sub
cmp
dec
jnp
imul
dec
mov
mov
jmp
lret
or
sbb
cmp
sub
push
testb
arpl
adc
ret
inc
repz
jecxz
xchg
ss
push
mov
mov
jae
arpl
xor
mov
es
aaa
addl
push
mov
jae
arpl
xor
ret
ss
xor
es
inc
in
inc
sarl
push
xchg
sbb
sbb
xor
jmp
pop
lret
dec
cmpsb
push
stos
push
mov
popa
or
sub
xor
sti
cmp
repnz
outsl
push
jecxz
repnz
pushf
push
lods
test
rorb
iret
fsubrs
arpl
xor
push
daa
xchg
mov
sub
inc
rol
add
adc
fistpll
scas
cmpsl
or
mov
stc
ss
dec
popf
cs
jae
inc
imulb
pushf
pop
adc
mov
lret
or
and
mov
stc
dec
push
cs
push
mov
lea
mov
inc
xchg
and
cmp
ret
inc
shll
inc
jae
arpl
xor
ret
inc
repz
jecxz
xchg
addl
push
lret
xchg
inc
sbbb
or
jg
add
jge
jae
mov
mov
fwait
adc
arpl
addb
xchg
adc
pop
std
addr16
inc
shll
adc
adc
shl
push
call
sbbl
mov
jecxz
mov
xchg
xchg
and
jbe
inc
repz
jecxz
xchg
addl
push
mov
jae
arpl
xor
ret
inc
repz
jecxz
xchg
addl
push
mov
pop
shrl
dec
or
aad
movsl
popf
jns
cmp
punpcklbw
xchg
lds
int3
cld
push
jmp
cs
sbb
dec
ss
jle
inc
ja
shlb
xchg
inc
pop
jne
jns
cmp
xchg
les
int
ja
add
out
or
add
scas
pop
mov
pop
aas
mov
cwtl
movsl
mov
mov
int
mov
xchg
xchg
stc
pusha
sbb
and
pop
pusha
js
lret
cli
ds
pop
nop
cmp
xchg
sbb
xchg
call
cmp
fimuls
adc
cmpsl
dec
and
sbb
inc
or
mov
dec
insl
and
add
inc
jb
arpl
adc
pop
mov
jo
xor
jecxz
fisubl
clc
mov
mov
push
mov
sarb
aam
mov
pop
lret
pusha
pop
xor
jbe
mov
ret
repnz
dec
xor
in
cmpsl
dec
fstps
mov
data16
push
insl
sub
scas
cmpl
rcrl
rcrb
cld
les
or
jp
mov
insl
mov
loope
mov
in
xchg
ja
add
xor
enter
pop
adc
out
cmp
add
jne
leave
call
mov
cmp
hlt
jg
bound
mov
mov
aas
std
nop
adc
pop
jb
jnp
mov
into
and
out
and
mov
es
je
lcall
aaa
dec
vmwrite
sub
loopne
mov
pop
dec
and
mov
movsb
mov
data16
push
jge
pushf
jp,pn
clc
in
and
ds
xor
ja
pop
fimuls
addr16
aaa
cmpsb
sub
jbe
fstps
push
push
jecxz
mov
and
jle
xor
outsb
shrb
in
pop
add
cltd
dec
sub
sub
dec
push
pop
jo
pop
and
sbb
push
mov
pop
add
pop
jbe
push
xor
cmp
jge
push
fisttpl
fs
repz
mov
test
inc
aad
sbb
inc
or
mov
xchg
push
mov
sti
pop
arpl
xchg
xor
sub
sbb
sub
daa
sbb
nop
fisttpl
jne
xchg
dec
ds
adc
les
pop
ficoml
arpl
jno
cmpsl
cmp
or
in
sbb
or
roll
fbstp
hlt
test
pop
sub
mov
jo
mov
sub
pop
xchg
add
mov
jge
and
loopne
adc
push
nop
sub
xor
jle
inc
imul
fiadds
and
jge
sub
outsl
cmp
pop
xchg
pushf
fld
gs
pop
out
push
or
add
test
aad
lahf
jmp
ds
pop
mov
adc
pop
jno
leave
loopne
in
push
outsl
lods
fistpll
inc
inc
pop
popf
mov
leave
ljmp
adc
inc
fnstcw
les
cmp
pop
cltd
xor
je
insb
dec
cmp
loope
aam
add
add
movsl
adc
push
repnz
sub
adc
popf
mov
std
inc
lods
or
sub
sbb
push
mov
jg
xchg
outsb
lock
inc
sub
stos
mov
lds
mov
rcl
mov
and
xchg
cmp
xchg
or
outsl
ljmp
cmp
push
pop
in
gs
popa
clc
jmp
loope
lea
dec
push
xor
jle
cmpsl
insl
xchg
inc
emms
in
fldcw
or
cltd
push
scas
mov
mov
inc
pop
jno
aas
and
pop
pop
adc
and
mov
scas
popf
sbb
or
js
repnz
xor
out
loope
leave
out
out
lcall
xchg
dec
jge
ret
jae
mov
sbb
les
jb
lds
iret
or
lret
and
shlb
push
fnsave
ja
jo
in
fsubr
imul
xor
js
mov
hlt
ljmp
shlb
xchg
push
adc
imul
pop
test
out
addr16
jne
popa
movsb
inc
je
adc
jns
mov
movsl
push
mov
mov
scas
or
js
pop
push
cmpsb
dec
int3
in
push
pop
jecxz
scas
sub
xor
out
mov
repz
out
pop
add
pop
dec
sub
lahf
addr16
cli
push
mov
push
adc
push
fstpt
and
adcb
xchg
sbb
xchg
cwtl
aas
inc
jle
xor
je
and
pushf
push
lret
rol
cmpsb
cmc
or
popa
add
lds
dec
jp
inc
xchg
jb
inc
iret
fists
xchg
arpl
mov
push
lea
push
add
ss
insb
push
dec
ret
mull
lcall
dec
or
icebp
pop
push
xchg
mov
xor
mov
push
aad
in
sub
xor
bound
cmp
dec
js
pop
mov
in
pop
ret
mov
sbb
nop
or
xor
mov
jecxz
xchg
repnz
test
ds
add
pop
lea
cmp
call
popf
enter
std
lret
fbstp
xchg
push
cmp
inc
mov
mov
pushf
lods
cmp
pop
andl
imul
sbb
mov
shll
inc
aad
addb
mov
pop
push
mov
xor
or
sbb
loop
inc
mov
pop
dec
dec
sub
lock
aaa
lret
and
cld
and
sti
loop
loop
sub
pop
and
test
insb
mov
xor
dec
fs
xor
in
xor
sub
mov
fistps
mov
into
fsubrs
mull
mov
fwait
popf
vorps
xchg
or
xchg
aad
sub
addr16
ja
mov
fld
mov
in
mov
pop
aam
pop
mov
clc
xor
mov
mov
and
cltd
pop
enter
or
push
test
lret
sub
les
mov
cltd
mov
dec
test
pop
lahf
mov
mov
sahf
in
mov
sbb
mov
and
pushf
mov
rcll
sbbl
out
in
push
xchg
flds
sbb
jno
roll
cwtl
popf
adc
push
es
push
xor
inc
fmull
jg
lret
xlat
or
out
and
pop
pop
fistps
mov
lods
outsb
sbb
cmp
cmp
add
sbb
inc
sub
cli
bound
stos
mov
or
lahf
dec
sbb
jns
stos
dec
test
push
sbb
jae
xchg
aam
add
cmc
aaa
mov
push
lods
dec
mov
imul
mov
xor
repnz
jb
xchg
dec
ret
test
sub
lods
pop
push
jecxz
add
pop
arpl
bound
leave
pop
fldt
jnp
add
inc
sub
mov
mov
mov
pop
sub
nop
loopne
inc
aad
shlb
xor
push
inc
fildl
bound
daa
insb
pop
sub
out
in
push
dec
jle
scas
dec
xchg
mov
mov
xchg
int
arpl
inc
or
push
pop
fcompl
out
aad
cld
into
fwait
outsb
lret
mov
cmp
dec
push
jne
push
movsb
ljmp
les
movsl
test
sbb
xor
in
inc
mov
mov
addr16
mov
pop
sar
rcr
lock
shlb
mov
adc
sbb
pop
ljmp
mov
inc
pop
stc
lcall
aam
sti
mov
adcb
xor
ds
rcl
shlb
std
fdivp
cmp
jp
push
add
std
xchg
push
mov
sarl
cmp
mov
pop
jno
or
in
adcb
xchg
xchg
repz
bnd
jb
les
adc
cltd
cld
scas
andb
mov
xor
mov
leave
iret
sbb
jbe
mov
xchg
icebp
push
xor
cmpl
hlt
xor
pop
ss
sub
cmc
dec
mov
push
pusha
pushf
sub
imul
xchg
sub
in
xchg
out
int
imul
sbb
nop
sbb
sbb
and
std
pop
lcall
cmpsb
or
cmp
adc
pusha
mov
mov
or
cmp
lods
adc
sarl
or
scas
mov
mov
lcall
xchg
cmc
mov
add
jbe
test
in
adc
add
pop
dec
or
inc
cmp
divl
ret
shlb
dec
gs
cltd
or
ds
sub
icebp
int3
sub
pushf
mov
mov
mov
je
mov
mov
mov
mov
test
sub
sub
adc
mov
imul
mov
xor
aas
pop
jo
outsb
cli
push
ret
inc
add
adc
xchg
ja
repnz
jp
pushf
addr16
inc
mov
stos
das
jb
aaa
jne
mov
in
into
dec
in
xchg
cmp
scas
cmc
xor
inc
insl
jl
orl
pop
das
loope
outsl
lods
jle
fcompl
jl
sbb
cli
cmp
pop
sti
jle
and
xor
jge
rol
push
mov
in
cwtd
cs
adc
fldl
inc
daa
sbb
sbb
adcl
popa
mov
pop
scas
hlt
mov
jae
inc
xchg
stos
ja
cli
sbbl
pushf
pop
lea
out
out
pop
mov
xchg
scas
cmp
and
dec
pop
jns
adc
push
sahf
mov
mov
sub
mov
dec
call
and
fwait
pop
add
or
mov
and
xchg
cmpsl
jecxz
or
scas
mov
add
and
test
mov
dec
lock
jne
adc
cs
cmp
mov
xchg
inc
dec
sbb
push
jg
jp
or
mov
scas
in
xchg
clc
cmpsl
or
ficoms
cltd
mov
cmpl
push
ds
repnz
pop
js
jns
loopne
jl
js
mov
jns
mov
mov
or
insb
lret
inc
es
cmp
mov
rclb
insl
or
jns
mov
test
push
adc
notl
shlb
add
mov
movsl
fildll
sbb
lahf
push
or
mov
sub
movsb
ljmp
fiadds
test
sub
add
mov
popa
in
sub
xor
add
addr16
xlat
or
lcall
cmp
outsl
pop
nop
shlb
mov
mov
sub
adc
mov
inc
pop
inc
andl
fsubrp
aas
fwait
mov
dec
sbb
pop
fdivrl
or
popa
fidivrs
leave
mov
das
or
dec
icebp
cmc
inc
xchg
inc
inc
and
lret
fwait
call
adc
mov
data16
sub
cwtl
fwait
mov
dec
sbb
cwtl
cs
ja
cmpsl
xor
jns
gs
push
xchg
xchg
insb
jnp
subl
xor
lea
and
loopne
mov
rolb
xor
por
xor
adc
mov
mov
xlat
or
ret
push
sub
loop
mov
pop
lret
xor
pop
and
or
insb
mov
std
and
test
call
ficompl
mov
out
in
pop
inc
jp
clc
fs
fnstcw
cwtl
add
cmp
dec
bound
jp
pushl
inc
dec
mov
pop
cld
push
lahf
out
les
pusha
pop
fdivrl
mov
dec
mov
in
add
mov
xchg
movsb
push
cmpsb
xchg
mov
mov
fwait
call
jg
pop
pop
popf
mov
jg
rorb
and
adc
mov
pop
adc
sbb
gs
push
les
mov
add
outsl
std
nop
pop
daa
mov
arpl
fnstsw
cli
icebp
movsb
popa
aaa
mov
pushf
cmc
lahf
fidivs
pop
dec
lcall
ret
imul
mov
mov
loop
lock
add
cmpsb
fidivrs
jns
fsub
das
jle
mov
inc
or
inc
push
mov
add
dec
nop
aas
inc
movsl
cmp
pop
ljmp
cmp
das
add
or
pop
xor
push
mov
movsb
mov
cwtl
add
cs
push
cmp
mov
mov
mov
outsb
loope
xor
outsl
xchg
stos
call
adc
mov
xchg
mov
push
adc
movsb
sub
inc
outsb
fs
cltd
jnp
add
lds
or
xchg
pop
push
sub
lea
pop
inc
ret
push
push
das
push
dec
testl
jle
sbb
call
inc
divb
fwait
scas
pop
mov
inc
push
xor
cmpsb
xor
mov
fstpl
outsl
add
sahf
mov
push
xor
add
pop
mov
xchg
adc
lret
inc
stos
sar
or
pop
test
fs
shlb
pop
mov
insb
push
pop
pushf
mov
inc
lods
mov
add
push
inc
push
arpl
adc
and
in
mov
popf
fs
iret
iret
sub
mov
lods
sub
icebp
ljmp
jp
pop
cltd
push
lods
daa
stos
mov
push
dec
lea
shlb
or
add
mov
lods
loop
add
sti
pop
xchg
cmp
xchg
add
movsb
sub
sub
scas
pop
dec
ret
inc
aad
or
xchg
add
daa
xchg
jecxz
jp
insb
xor
daa
lcall
jne
jl
ljmp
fsub
push
mov
sub
mov
adc
mov
fnstcw
fdivr
mov
jp
cmp
int
in
and
and
outsb
dec
out
es
lahf
fcomi
dec
pushf
inc
rcrl
jmp
and
rorl
push
cmp
in
xchg
or
ret
cmp
sub
xchg
mov
hlt
jns
cmp
sub
push
push
jns
xor
arpl
ds
jne
mov
xchg
imul
vzeroall
call
and
add
sub
jb
lahf
jle
pop
add
dec
push
cmp
and
mov
pop
and
push
pop
jl
cmp
inc
repz
hlt
push
movsl
out
pop
sarb
fucomi
js
lods
push
cmp
mov
push
int3
mov
pop
hlt
push
packuswb
les
dec
dec
mov
mov
mov
sub
mov
insb
testb
push
cmpsl
pop
mov
inc
ja
xchg
sub
outsb
mull
or
jle
icebp
pop
mov
cld
sbb
ss
out
outsb
std
fidivrl
push
push
jne
outsb
jmp
out
lods
xchg
cmpsb
test
cmc
pop
testb
pop
popf
adc
xor
xor
pop
mov
repnz
mov
lret
inc
or
sub
and
imul
fisubrs
or
lcall
dec
or
aas
fstpt
jbe
pop
and
pushf
inc
fmulp
mov
or
repz
mov
xchg
and
sbb
in
sbb
repz
inc
call
ljmp
movsl
imul
mov
aad
inc
push
mov
jnp
sahf
dec
or
sbb
popa
lods
push
mov
sub
push
mov
fs
fsubrs
lret
out
insl
loopne
out
mov
dec
or
inc
frstpm(287
adc
push
mov
cmp
xchg
lcall
jae
push
xor
stos
pop
mov
repz
shlb
jecxz
pusha
insl
mov
inc
cmp
add
test
xchg
mull
jl
mov
sbb
imul
sub
mov
fimuls
fcmovnb
psrld
push
adc
ja
inc
loope
out
dec
sbb
inc
xor
pop
cmp
ret
mov
fimuls
push
mov
mov
push
fwait
addr16
inc
push
cmp
int
fsubp
push
adc
mov
cmc
and
popf
pop
cmp
insb
mov
mov
cmpsb
inc
mov
add
fistps
add
add
cmp
xchg
cmc
call
ret
mov
pop
out
out
add
xchg
push
imulb
idiv
rorl
sub
push
pop
push
sub
jnp
push
or
push
and
insb
add
jae
xchg
pop
aaa
insl
nop
jmp
stc
pop
mov
mov
aaa
mov
cmp
test
inc
aam
sub
fwait
ja
js
sbb
outsl
push
dec
push
into
int
pop
loopne
lahf
aas
sbb
lods
xor
repnz
cmc
dec
mov
mov
es
cmp
fisttps
jmp
loope
xchg
or
dec
sbb
clc
repnz
and
shll
aas
insb
push
push
or
cmp
popa
out
jmp
mov
and
outsl
mov
stos
clc
push
xchg
arpl
mov
mov
pop
lods
pop
dec
imul
mov
mov
aam
adc
in
xorb
push
push
push
sub
scas
int3
add
mov
and
das
and
xor
addr16
cmp
rcl
lock
ret
dec
shlb
xchg
lret
adc
pop
inc
sbbb
mov
je
inc
les
cmpl
push
add
enter
leave
iret
js
add
test
jo
cmp
adc
das
pop
push
push
and
cld
lds
sub
dec
or
subl
shrl
jg
jge
xlat
sbb
outsl
es
adc
jns
test
inc
std
cwtl
xor
pop
lret
pop
pop
dec
ljmp
pop
int3
loop
es
dec
enter
or
loop
lock
push
imul
out
lahf
sbb
subb
in
and
push
sub
cs
shlb
clc
scas
scas
xchg
xor
inc
mov
mov
into
out
test
jl
aam
jecxz
test
out
add
pop
sub
inc
sahf
sub
setae
or
mov
xor
jno
decl
mov
or
dec
imul
adc
sar
sbb
or
push
out
stc
aaa
sbb
clc
pop
insl
in
lret
popa
or
mov
outsl
jnp
xchg
in
add
pop
and
aad
fadds
mul
cltd
movsl
sub
ficompl
addr16
mov
sbb
fcoms
mov
and
jae
mov
cmp
sub
hlt
stos
mov
nop
lea
jnp
sbb
push
mov
ja
scas
pop
or
mov
jae
test
pop
imul
fcmovnb
aam
rcrl
leave
scas
data16
jae
and
mov
clc
xchg
inc
push
mov
fwait
adc
mov
mov
test
arpl
dec
fs
push
push
sub
push
outsb
cld
inc
popf
ljmp
subl
out
xchg
jb
cmp
xlat
mov
fldcw
out
loopne
inc
jae
sarl
mov
fcomp
add
es
adc
xor
xor
inc
inc
jno
adc
lds
fsubr
xor
insl
lods
bound
out
pop
clc
popf
idivb
nop
clc
mov
mov
adc
or
mov
mov
flds
mov
fsts
rcll
xchg
sarl
daa
stos
pop
sti
shr
cmc
cmp
out
adc
loopne
push
pusha
lea
adc
imul
jbe
pop
jl
int
mov
cmp
or
fwait
mov
mov
je
in
in
popl
or
adc
ret
mov
das
jmp
and
or
jl
fsub
lods
lds
or
pop
rorb
aad
ljmp
cmp
insl
adc
xchg
shlb
dec
inc
test
test
imul
jge
sbb
push
push
out
icebp
incb
jns
test
jle
ret
jne
jnp
and
push
dec
pop
rorb
inc
rclb
shll
mov
cmc
jbe
pop
in
sub
fdivrl
add
shlb
mov
ljmp
pop
adc
in
sub
jmp
mov
negl
cmp
js
add
xor
jbe
loope
out
xchg
mov
mov
jecxz
inc
push
sbb
test
cmp
in
xchg
popf
movsl
push
stc
int
and
scas
aas
mov
jle
add
mov
sub
push
aas
xchg
mov
lods
int
and
xor
mov
cmp
jns
sti
dec
xor
cmpsl
push
jnp
adc
stos
add
bnd
sti
push
xchg
mov
arpl
xor
ret
inc
repz
jecxz
xchg
addl
push
mov
jae
arpl
xor
ret
inc
repz
jecxz
xchg
addl
push
mov
repz
arpl
xor
ret
inc
repz
jecxz
xchg
addl
push
mov
jae
arpl
xor
and
repz
xchg
push
sbb
pop
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
rorl
shrb
sub
inc
jge
outsl
and
dec
add
rorl
mov
sub
push
add
pop
pop
and
dec
add
xchg
ret
in
cmc
mov
and
push
inc
inc
and
jge
add
sbb
add
popf
mov
in
cmpsb
sbb
or
mov
lcall
test
push
imul
xor
mov
es
fwait
pop
mov
inc
repz
sub
adc
out
outsb
mov
imul
push
shr
and
es
and
dec
mov
push
sti
test
mov
mov
sub
sub
repnz
sbb
in
xchg
mov
subl
cmp
sub
mov
das
sbb
std
inc
test
and
jbe
outsb
fcmovb
jb
add
vcmpss
pusha
stos
pop
push
cmp
jo,pt
adc
je
mov
popf
rorl
mov
and
xor
inc
xor
inc
adc
shl
enter
stc
ret
mov
mov
nop
aad
xlat
cmp
imul
das
push
dec
rclb
std
ret
xchg
fucomip
out
sahf
out
cmp
sbb
pop
push
and
inc
sub
shrl
popf
in
mov
cmp
push
or
and
dec
add
rorl
mov
cmp
push
or
and
dec
add
incb
xchg
dec
fistps
rcrl
clc
icebp
adc
es
cmp
sbb
cltd
or
and
sub
cmp
and
cmp
adc
inc
lock
or
push
jmp
push
stc
shr
dec
in
test
inc
cmp
es
mov
inc
inc
and
sbb
mov
push
mov
push
and
mov
xor
jae
arpl
fistpl
test
out
negb
fistl
push
jecxz
and
xorb
popf
ret
cmpsl
rcl
sbb
sahf
mov
fs
push
xchg
add
cld
and
daa
dec
int
add
inc
sub
leave
mov
cld
push
jnp
nop
or
pop
adc
mov
imul
push
test
push
repz
cmp
std
aad
adc
cs
add
cs
shlb
cmp
sub
cwtl
pop
sbb
cmp
fwait
imul
cmp
outsb
xchg
add
into
imul
sub
xlat
adc
inc
repz
pop
pop
lcall
fs
ret
mov
push
ja
movsb
ds
xchg
xor
pop
stos
dec
mov
sbb
ljmp
std
pop
dec
push
shl
or
das
add
lret
lock
and
mov
mov
lcall
cmp
cmc
andb
fiaddl
insl
or
xchg
loop
add
sub
icebp
out
outsl
andnps
jns
bound
popf
jmp
outsl
jp
mov
or
push
sub
dec
mov
sti
xor
fimull
imul
fsubl
cwtl
mov
or
inc
insl
sahf
and
push
jbe
dec
fimull
push
push
mov
dec
push
pop
mov
hlt
out
scas
mov
outsb
dec
xchg
lock
cld
dec
sbb
repnz
xchg
addr16
push
popaw
and
lahf
sub
xor
leave
icebp
pop
mov
xor
repnz
repz
cmp
mov
mov
stc
xor
loopne
mov
shlb
leave
scas
and
cmp
xchg
cmc
mov
sti
mov
jecxz
fnstcw
stc
inc
out
outsb
clc
jns
loope
lcall
cmpsl
push
dec
rolb
cmp
lods
repnz
or
iret
aaa
mov
add
jecxz
ds
mov
je
test
sbb
sbb
mov
xchg
mov
adc
push
andl
lret
ret
popfw
cli
movsb
mov
test
in
lcall
repz
sub
es
lods
es
int3
lock
mov
and
stos
fistl
stos
leave
sbb
add
mov
jb
xor
outsl
cmp
mov
pop
adc
jp
ljmp
test
pushf
sbb
jg
or
push
jo
jnp
lock
xor
ret
ljmp
nop
je
fwait
in
inc
or
xor
aas
imul
ret
push
add
popa
mov
in
lods
mov
in
hlt
pop
adc
mov
imul
je
cmpl
fs
mov
adc
inc
insl
lods
mov
xchg
out
adc
insl
lods
xorb
pop
int
icebp
iret
fyl2x
aas
push
jecxz
loop
mov
arpl
cltd
mov
dec
shrb
add
cli
ficoml
rcl
insb
iret
lds
jnp
shl
lea
ja
orl
cmp
pop
fiaddl
xor
dec
stos
push
mov
xor
sbb
arpl
stc
stos
nop
adc
arpl
mov
pop
xor
scas
xchg
out
imul
sub
sub
lods
test
mov
sarb
jno
ror
in
pop
in
and
mov
sbb
pop
inc
out
sub
jp
push
fidivs
fnstsw
je
xor
inc
push
mov
lcall
and
jno
pop
test
pop
lcall
gs
mov
enter
mov
insl
jnp
lret
outsl
fists
mov
mov
cmp
adc
scas
mul
lock
test
sti
push
add
mov
repnz
fcoml
lock
testl
push
and
aam
mov
addl
jmp
aam
clc
test
pop
sub
lds
push
cmpsl
js
out
sbb
cs
ds
fwait
cltd
mov
inc
pop
mov
fbld
rcll
fwait
scas
and
fsubs
in
repz
pushf
std
lcall
aaa
test
mov
pop
mov
mov
das
add
rorb
xor
popa
cmpsl
cli
cmpsl
push
jl
add
loopne
insb
es
rcl
xchg
sbb
repnz
ljmp
and
inc
xchg
mov
sbbb
pop
and
movsb
imul
mov
ss
sub
xchg
mov
imul
xor
fdivl
popf
mov
je
mov
das
dec
push
stos
stos
cmpsb
in
std
cs
sbb
shrl
sarl
add
jne
fstpt
pop
mov
pop
cmp
lret
popa
or
jle
sti
pop
push
sub
pop
daa
push
sbb
cmpsb
dec
inc
cltd
sbb
test
rcr
mov
mov
movsb
faddp
xchg
mov
adc
movsl
cmc
mov
mov
jle
lds
sub
hlt
add
popa
dec
or
jae
sahf
aad
ss
lret
mov
loope
add
sub
mov
cmpsl
iret
cltd
jg
rclb
mov
test
call
ljmp
inc
insb
incb
cmpsb
sbb
xchg
sub
pop
inc
mov
lods
sahf
lcall
ja
jle
xchg
inc
sbb
adc
mov
fildl
shll
lea
pop
add
in
aas
gs
enter
pushf
sub
mov
push
in
and
mov
jbe
inc
int3
incb
mov
jns
ret
jmp
pop
jo
xor
fisubs
rcrb
sbb
jae
cld
loopne
jecxz
call
fiadds
mov
push
shl
mov
mov
cld
loopne
aaa
jnp
out
aas
mov
insb
adc
jl
es
iretw
ja
jg
inc
jge
lock
lcall
or
in
xchg
cwtl
and
sti
fmul
mov
mov
out
ss
mov
std
mov
push
hlt
loopne
imul
fnstsw
rolb
mov
pop
sub
fsubp
icebp
cld
mov
cmp
push
inc
cmpb
cmp
mov
in
pop
lods
push
mov
push
mov
sbb
xor
inc
cmp
jns
or
into
fwait
loop
fs
popa
pop
stc
mull
sti
cmp
lret
shrl
cltd
sbb
int
rorb
out
imul
xlat
sahf
pushf
and
mov
inc
lods
push
addb
in
sub
pop
test
pop
insl
nop
jecxz
mov
test
xchg
leave
sub
add
cmp
addr16
push
das
jns
arpl
xchg
xlat
movsb
mov
push
ret
lret
ss
iret
fmull
cmc
fucomp
rorb
fadds
fsts
cs
inc
jne
lock
cmp
jl
add
inc
add
xchg
xchg
cli
and
shrb
xor
mov
call
sbb
les
and
mov
and
imul
or
mov
rcrl
jmp
pusha
outsl
pusha
fucomi
ficompl
rorl
mov
gs
xchg
insl
mov
adc
subb
push
sub
iret
and
add
lods
repnz
add
les
fisttps
xorb
jbe
mov
jmp
xchg
sbb
add
pop
push
inc
int3
mov
lea
adc
mov
fdivs
pop
mov
add
out
int
xor
fwait
cmp
dec
mov
sarb
inc
lods
sbb
add
jecxz
incb
call
xchg
sbb
cmc
jno
xor
std
int
imul
andl
lock
outsb
push
arpl
sub
xor
mov
into
fidivs
jbe
shrl
divl
aad
out
mov
or
int
fistpl
and
scas
imul
jp
out
roll
cmp
jmp
ja
outsb
or
mov
mov
bound
mov
xor
and
mov
mov
stc
xchg
scas
dec
push
cmp
clc
loopne
push
out
adc
mov
mov
mov
or
insl
push
jge
adc
add
fs
dec
dec
mov
mov
je
pushf
mov
inc
mov
pop
xor
repnz
mov
add
out
push
xchg
daa
and
test
push
js
cwtl
out
jb
rorb
jg
and
mov
jl
stos
xlat
cli
pop
sub
fisubs
cmpsl
loope
jno
insb
gs
leave
xor
cmp
int
pop
les
jnp
inc
mov
dec
pop
inc
push
xor
mov
scas
lea
js
dec
and
and
pushw
nop
out
mov
jle
daa
mov
sti
cmp
sbb
mov
mov
out
ss
gs
inc
repnz
sbb
nop
fdivrl
xor
jno
test
and
or
xchg
popf
ds
dec
ret
or
enter
add
repnz
lods
pop
pusha
cld
pop
bound
aas
scas
xor
cli
adc
mov
in
mov
jo
jns
cmp
sbb
outsb
pop
or
pop
or
and
cwtl
popf
or
jecxz
lcall
or
test
in
in
pop
decb
cld
inc
sbb
decl
test
in
inc
loope
xor
inc
std
cmp
adc
sbb
mov
mov
and
rcll
sub
jbe
leave
icebp
rcll
daa
scas
out
cmp
ja
adc
add
sahf
or
rcrl
mov
stc
out
adc
imul
adc
push
lods
je
js
adcl
pusha
or
sub
mov
jb
mov
rcrl
mov
aas
subl
data16
fdiv
mov
push
test
and
outsb
xchg
sbb
fildll
lahf
push
movsl
mov
into
xchg
idivb
bound
addr16
inc
icebp
fcmovb
xor
jbe
cmp
sbb
add
lret
cs
pop
imul
cwtl
cmp
push
mov
pop
ljmp
or
andl
mov
mov
push
mov
dec
addr16
mov
aas
push
mov
pop
andl
push
cmp
out
testb
stos
mov
push
mov
and
insb
mov
dec
movsl
jns
jecxz
inc
pusha
inc
vpmaskmovd
testb
inc
das
push
xchg
push
jl
or
fildl
dec
and
xlat
outsb
and
sbb
es
mov
ljmp
iret
xor
daa
scas
inc
or
jl
stos
sysret
mov
mov
sbb
sbb
outsb
idivl
pop
ret
outsl
sub
stc
and
loopne
movsl
or
pop
add
mov
pop
pop
add
jge
adc
pop
adc
mov
jae
and
pop
outsb
lcall
in
adc
leave
sbb
out
xor
outsl
jge
mov
mov
dec
lahf
setae
popf
add
pop
loopne
add
incb
jb
xchg
cmp
pop
mov
cmp
adc
stc
bound
pop
dec
dec
add
mov
and
dec
mov
mov
xor
gs
das
mov
sarl
xlat
or
inc
ror
test
or
sub
and
xchg
sub
adc
or
test
pop
std
arpl
lods
lcall
or
dec
jno
shlb
scas
or
mov
test
mov
cltd
dec
std
push
mov
cli
lret
mov
sub
cld
test
lock
out
jne
hlt
cmp
fwait
jmp
jo
repz
addl
cmp
jg
lcall
faddl
jp
outsl
mov
dec
cld
jmp
shr
dec
or
cld
sub
test
testb
push
sbb
add
lahf
insb
mov
mov
mov
roll
jo
sbb
je
ja
xchg
into
dec
push
and
mov
pop
jp
lcall
out
push
subl
mov
add
adc
adc
movl
fxch
sbb
cmpsl
hlt
fisttpll
outsl
adc
add
xchg
std
scas
sbb
gs
sbb
pop
xchg
lea
stos
sbb
test
mov
cmpsl
mov
shll
addl
cmpl
mov
jo
and
jno
negl
data16
and
iret
sub
mov
and
or
jecxz
fnsave
gs
xchg
mov
daa
sbb
and
cmc
sub
xchg
sub
andl
clc
and
fisubl
lock
fidivrs
push
sub
jl
js
xchg
shrb
inc
movsl
or
cmp
mov
test
scas
je
fistpll
test
mov
push
cltd
sbb
cmp
dec
xor
sub
rcr
fwait
out
ret
outsl
dec
adc
std
mov
xor
dec
inc
sub
arpl
pop
push
xchg
aam
ljmp
dec
aas
and
xchg
dec
pusha
and
ja
cmp
lock
aad
aam
add
push
add
std
popf
cld
mov
and
shlb
inc
jae
sbb
jecxz
add
nop
jnp
gs
nop
cmp
xchg
scas
cli
out
sub
inc
inc
scas
mov
inc
lds
pop
inc
js
not
inc
mov
out
push
outsl
out
jg
stos
lcall
sarl
dec
mov
or
fmull
push
std
outsb
mov
into
leave
lcall
adc
add
pushf
mov
repnz
outsb
lods
dec
dec
push
aad
lods
xor
cmp
nop
cmp
xor
push
les
xchg
inc
push
fidivrs
data16
outsb
ja
divb
xor
push
pop
out
testl
rorb
or
int3
dec
sbb
dec
xor
lods
or
pusha
xchg
out
bound
push
adc
pop
sub
cmp
out
cltd
aaa
in
lds
js
mov
out
and
dec
loop
inc
and
sbb
cmc
hlt
mov
loop
clc
iret
test
xchg
fistpl
xor
js
shlb
mov
loop
movsb
pop
push
or
ljmp
cmp
jns
leave
test
addl
and
stos
jbe
cmp
std
jge
cltd
or
int3
mov
jmp
cmpl
dec
repz
gs
lds
outsb
or
adc
movb
out
push
push
rclb
cmp
push
into
mov
shrb
push
repnz
iret
bsr
fwait
ret
inc
jg
sub
xor
push
mov
xchg
addr16
push
ret
xor
ret
cli
pop
mov
pop
push
insb
lahf
pusha
adcb
and
out
test
mov
int
jle
cmp
push
addr16
cmp
icebp
pusha
xchg
repz
inc
mov
aam
repz
sbb
jae
insl
ja
loopne
js
stc
sbb
fwait
cmp
pusha
pop
sub
js
jecxz
out
test
push
inc
mov
add
mov
mov
decl
or
lock
divps
lret
mov
and
loop
mov
leave
push
jge
lret
push
movsb
mov
push
xor
push
rcrl
pop
push
out
cmp
mov
nop
addr16
add
add
pop
add
mov
in
xor
and
inc
cli
popf
das
popa
cmpl
pop
imul
test
add
jne
jle
jne
and
stos
fidivrs
cmp
cmp
cmp
imul
xchg
hlt
cmp
test
jne
test
test
ficoml
cmp
sub
fs
jl
mov
push
mov
daa
fldl
mov
adc
stc
ret
orb
and
xor
jecxz
add
lock
aas
pop
dec
dec
mov
out
pusha
jnp
or
into
or
jecxz
sti
inc
xchg
stos
xchg
lock
stos
test
xchg
mov
add
xchg
shll
cwtl
aas
dec
dec
loopne
xor
cmp
dec
xor
xchg
popf
mov
in
jmp
pop
fdivs
or
mov
cmp
add
lahf
ficoml
fistl
push
mov
shr
mull
iret
mov
dec
lock
and
push
out
pop
dec
sti
lods
lret
leave
pop
icebp
sti
sub
iret
jne
and
xchg
push
inc
scas
aam
push
cli
inc
sbb
add
repz
das
fistps
icebp
test
cmp
lret
pop
in
pushf
pushf
jge
gs
rorb
movsb
lds
mov
push
repnz
fsubl
es
adc
cmp
and
loope
and
ds
pop
jns
and
fadds
cmp
lcall
hlt
dec
gs
mov
add
sahf
pop
loope
mov
pop
out
inc
pop
inc
mov
pop
cmp
pop
in
int3
sbb
sbb
sbb
and
data16
xor
pusha
push
cld
lea
mov
sbb
xchg
xchg
sub
imul
addr16
fwait
lds
sub
inc
aam
mov
cld
movsb
push
sarb
ret
mov
mov
pushf
sub
push
dec
add
scas
mov
mov
stos
fcomps
cld
mov
jne
test
fdiv
mov
pop
dec
movsl
jnp
mov
repnz
leave
mov
test
xor
notl
mov
shl
shll
or
lahf
pop
mov
cmp
push
xchg
mov
jne
int3
das
leave
push
negb
ja
imul
mov
ja
xor
aaa
pop
shl
aaa
push
ljmp
xor
nop
inc
in
test
pop
daa
in
shl
clc
pop
ljmp
mov
jp
add
pop
cmp
filds
or
jo
into
add
jp
fcmovnb
test
ror
sbb
in
lahf
lcall
inc
mov
rorb
loopne
dec
jl
ret
fs
hlt
ror
ds
pop
inc
mov
xor
and
jp
push
daa
je
adc
addb
imul
mov
push
dec
xchg
sbb
dec
leave
pop
mov
pop
xor
ds
sub
stc
pop
fwait
pop
pop
adc
sub
lea
push
cmc
mov
push
int3
adc
testb
ds
lods
fdivrl
ljmp
mov
push
dec
iret
andl
int3
dec
push
outsl
jmp
cmc
fldenv
sti
and
aam
rorl
int
ljmp
addr16
push
out
pop
adc
push
adc
pushf
or
leave
icebp
jmp
les
xchg
jp
insl
fwait
mov
aaa
shrb
in
xor
fadds
mov
frstor
mov
jmp
mov
fidivs
jecxz
adc
cmp
ja
arpl
mov
lret
or
cmp
sahf
and
fisubs
test
testb
mov
rol
cmp
fcompl
adc
xlat
inc
push
dec
and
inc
ret
sbb
out
xchg
push
outsb
mov
das
pop
call
adc
or
out
inc
stc
gs
jmp
in
pop
mov
pop
ss
cmpb
pop
and
xor
sub
adc
movsl
lret
mov
fstps
lahf
and
test
xor
cmc
jp
mov
mov
les
pop
dec
or
push
dec
push
loop
add
insl
test
scas
into
addr16
cwtl
xchg
jbe
out
xchg
scas
jb
aaa
lret
push
ret
adc
sbb
push
mov
fcmovb
subb
hlt
mov
mov
xor
fldenv
in
add
push
dec
dec
push
xor
jmp
imul
fs
in
mov
jae
icebp
cs
jns
and
adc
add
ds
jmp
adc
push
xchg
add
and
xor
daa
and
xchg
outsl
mov
push
jp
and
mov
aam
mov
push
xchg
jecxz
add
imul
cmp
out
push
fdivrs
gs
sarb
fimull
loope
mov
jnp
jae
fidivrl
stos
scas
dec
imul
cmc
pop
out
stos
clc
sub
push
cmc
mov
jge
aad
dec
pop
sub
jl
mov
jecxz
rorl
mov
cmp
push
or
and
dec
add
rorl
mov
cmp
push
or
and
dec
add
rorl
mov
cmp
push
or
and
dec
add
rorl
mov
ret
leave
mov
or
fsubl
jmp
inc
lcall
fdivrl
mov
in
sbb
or
sbb
sub
cmp
dec
mov
jl
fdivrl
imul
mov
or
pop
pushf
sub
pop
mov
inc
xchg
test
lret
cmp
push
outsl
dec
mov
dec
scas
mov
push
push
lock
xchg
mov
jecxz
daa
test
clc
dec
sub
mov
sbb
mov
je
test
push
movsb
push
sbb
dec
je
nop
jno
pop
xchg
or
sub
mov
push
sbb
ror
jp
jnp
pop
inc
mov
enter
iret
mov
jmp
fildll
dec
scas
mov
push
cltd
dec
mov
fisubs
mov
cld
xor
mov
stos
sub
ja
pop
int3
cmp
mov
fdivrl
mov
add
adc
scas
cltd
sbb
hlt
movsb
pop
jmp
sub
lea
test
ja
lret
sub
push
lret
dec
mov
les
jle
push
ret
je
mov
cwtl
cmp
push
push
push
sub
jg
sbb
sbb
movsl
jl
inc
cwtl
outsl
mov
lods
imul
stc
add
mov
fstpl
leave
or
jnp
je
sub
mov
or
cmpsl
or
pop
stos
insb
fwait
jl
mov
imul
sub
sbb
or
sbb
sub
cmp
dec
mov
jl
mov
imul
sub
sbb
or
fdivrs
add
xor
iret
xor
adc
fisttpll
addl
insl
cmpl
xchg
jg
inc
cmp
mov
mov
add
xlat
inc
inc
mov
outsb
std
and
dec
add
mov
push
repnz
leave
subl
rcrl
pop
sti
sahf
lret
in
mov
cmp
sbb
pop
mov
or
pop
fsubrl
mov
jmp
ret
fldl
cmp
pop
mov
mov
mov
xor
pop
repz
sub
or
cmp
cs
leave
sarb
push
pop
out
shlb
mov
icebp
bound
lock
popa
les
int
xchg
lods
and
clc
aas
jnp
cli
test
icebp
push
pop
stc
pop
inc
cmp
test
add
inc
adc
mov
xchg
enter
mov
xchg
and
mov
popf
pushf
sub
jmp
stos
sbb
adc
fisubrl
pop
jne
xor
lahf
ja
pop
ja
addl
mov
pop
or
cs
xor
stc
jae
std
jne
mov
lcall
les
fs
add
xchg
or
adc
insb
mov
cmc
das
xor
ret
and
and
scas
push
xchg
mov
pop
pop
in
loop
pushf
hlt
scas
por
stos
jnp
or
aaa
test
mov
jbe
fldenv
cmp
xchg
jae
xor
xorb
lahf
xor
lret
sub
xchg
xor
imul
mov
jl
push
inc
popf
pop
dec
pop
push
ja
sub
push
dec
mov
sbb
stos
into
pusha
bound
dec
xor
mov
pop
in
or
orb
int3
addr16
cmp
adc
icebp
mov
mov
adc
mov
xlat
jl
pop
call
sbb
jl
mulb
or
and
mov
and
sahf
push
mov
sarl
sub
pop
and
or
testl
int
fwait
out
mov
mov
repnz
es
dec
rclb
sbb
mov
mov
aaa
mov
test
add
push
lret
sub
mov
les
scas
push
mov
or
mov
fisubs
test
mov
in
fiadds
mov
or
xor
data16
addl
jmp
dec
fwait
lods
xor
mov
dec
repnz
cs
push
xlat
sub
sbb
scas
lea
pop
fcompl
mov
mov
loope
push
dec
int
push
fldenv
pop
cmp
stc
aam
jne
cmp
xor
int
push
fildll
lea
out
pop
or
xchg
pop
inc
imul
nopl
pop
in
call
xchg
stos
data16
mov
repnz
out
or
and
cmp
fbld
jmp
sub
sarl
and
xchg
outsb
mov
cmpb
test
mov
dec
lods
jbe
xor
mov
rcl
lahf
jo
inc
aas
mov
sub
and
xor
out
sub
mov
adc
daa
push
ficomps
out
lahf
fisttpl
shrd
sbbl
sbb
mov
push
xor
lods
aad
jle
mov
pop
or
mov
insl
or
mov
pop
les
add
sbb
out
out
mov
mov
outsl
and
movsl
into
mov
mov
out
les
and
out
mov
jae
mov
sbb
adc
xchg
jnp
jb
add
imul
push
push
or
mov
add
cmpsb
xchg
cmp
xchg
jmp
mov
cmp
mov
mov
mov
adc
jle
and
push
mov
aad
sarl
push
ja
mov
in
clc
lea
add
adc
jmp
jns
das
data16
pushf
enter
clc
insl
ljmp
pusha
sub
dec
xor
movsb
and
push
jnp
mov
aam
pop
movsl
mov
outsl
aaa
xor
outsl
and
lret
std
adc
push
add
mov
repz
or
cwtl
sbb
in
mov
cmpsb
xchg
and
xor
sub
stc
mov
int
int
xor
adcl
in
mov
in
stc
insb
insb
add
pop
push
movsl
mov
inc
popf
mov
push
clc
mov
imul
mov
adc
popf
test
pop
sbb
loope
lock
stos
fmull
cmp
add
clc
sub
mov
in
cmc
arpl
int
add
mov
sti
std
not
mov
out
or
cmp
imul
adc
shrb
add
sbb
and
cmpsb
xchg
jle
dec
jle
push
pop
and
xor
outsb
mov
push
inc
loope
lds
add
mov
push
xor
jns
push
jge
sub
push
pop
repnz
test
popf
repz
js
xchg
mov
or
dec
fsubl
test
xor
xor
jbe
jb
and
fists
or
sub
je
xchg
inc
mov
xchg
mov
psubb
popf
xor
pop
push
imul
lret
loop
imul
xchg
or
jl
jmp
or
lcall
outsl
cwtl
mov
std
lock
cmp
cmp
dec
push
jge
fdivrs
xchg
xor
jbe
sbb
rcll
cmpsl
xchg
xor
mov
adc
lret
fdivrp
icebp
cmp
jb
jo
jl
int
adc
sti
pop
arpl
adc
pop
es
lret
mov
inc
mov
aam
push
orl
fstpt
dec
iret
mov
or
and
dec
fnstsw
mov
repz
mov
mov
or
pop
mov
xchg
lret
aas
add
push
inc
mulb
push
xlat
xchg
das
and
sub
stc
in
loope
loope
push
add
mov
mov
mov
scas
ja
arpl
wbinvd
addr16
mov
mov
mov
dec
dec
data16
loopne
add
mov
jnp
adcl
jb
jle
cmp
add
mov
sub
xlat
roll
push
sub
call
pop
test
dec
sbb
sbb
xchg
out
xlat
leave
and
add
jae
adc
aam
lret
push
mov
addb
mov
adc
add
mov
in
xor
xor
test
inc
loope
scas
xor
fwait
inc
xor
push
stos
pop
mov
int3
dec
mov
sarb
lods
add
jns
sbb
popf
mov
test
mov
insl
sbb
pop
inc
jecxz
mov
jp
cmpb
movsl
sub
mov
mov
data16
pusha
fisubs
fistps
xor
jo
mov
xor
clc
in
lods
pusha
popa
imul
adc
mov
loop
movaps
fcmovu
dec
lods
imul
lock
push
mov
xchg
ret
xchg
sub
testl
bound
pop
jmp
inc
mov
adc
add
cmp
push
xchg
outsb
aas
xchg
sarb
sbb
mov
inc
push
aam
jnp
shl
lods
jg
hlt
arpl
loop
cltd
mov
push
mov
sub
mov
mov
sub
inc
call
mov
push
xchg
stos
adc
xchg
stos
jge
lock
push
shlb
aaa
mov
fldcw
popa
or
je
ljmp
push
or
out
pop
ja
adc
xchg
jb
add
mov
jge
gs
add
div
stc
mov
das
xchg
jge
xlat
mov
leave
add
fldpi
nop
mov
lretw
mov
je
push
out
test
or
cmp
push
lahf
or
and
arpl
adc
cmpl
or
cmc
cli
movsl
mov
add
jo
mov
mov
fbld
jecxz
pushf
cmpsb
dec
pusha
xchg
xchg
pop
je
imul
mov
jns
into
push
sub
add
out
in
dec
cwtl
insl
mov
add
pop
xchg
xchg
lahf
pop
add
out
push
addl
pop
imul
outsl
push
shrd
cs
xchg
ds
push
push
xchg
aad
push
pop
scas
cmp
mov
sub
lock
out
ret
adc
lods
cltd
xchg
dec
repnz
cmp
push
fcmovnu
out
shlb
adc
aad
dec
xor
std
movb
cmp
jnp
inc
adc
dec
or
fwait
cld
lcall
arpl
xor
inc
adc
xchg
jo
rol
loope
popa
push
or
cmp
mov
orl
jp
cmp
sarl
cmp
jae
or
sub
jnp
xchg
int
and
cwtl
insl
imul
clc
xor
cmp
adc
test
jge
xchg
scas
scas
push
and
add
outsl
xchg
std
shll
cmp
cmpsb
push
roll
clc
jae
mov
pop
mov
fsubrl
mov
orb
mov
jge
pushf
sbb
leave
cld
pop
pop
push
lods
lret
mov
pop
arpl
fisubs
pushf
mov
rcr
cmp
repnz
mov
test
aam
stos
xchg
hlt
imul
mov
int
imul
cltd
mov
mov
and
fistpll
inc
mov
pop
addr16
mov
pop
arpl
fs
jge
addb
mov
dec
aam
aas
and
pop
loope
pop
cmp
test
push
mov
xchg
shlb
mov
dec
xor
jae
loope
lock
push
rcrb
jae
xchg
pop
and
cmp
shl
sbb
fsts
popa
push
mov
dec
and
insl
in
loope
and
fsubrs
xchg
loopne
mov
ficompl
adc
ljmp
xor
pushf
inc
imul
insb
ss
pop
sarb
xchg
imul
daa
repz
mov
jne
popf
mov
sti
or
cmpsb
int
dec
mov
lea
xor
mov
jno
mov
pop
xchg
adc
mov
push
sbb
xor
dec
sub
jb
or
and
lods
enter
hlt
inc
lret
decl
and
scas
push
adc
jmp
xchg
adc
mov
imul
jmp
mov
and
mov
xor
roll
jecxz
pop
or
dec
pop
cld
ja
xor
jecxz
jmp
mov
sub
adc
jp
jmp
mov
jmp
mov
mov
cmp
les
xchg
push
pop
pop
and
mov
stos
xchg
dec
movsb
dec
adc
sbb
hlt
mov
lret
ftst
pop
cltd
inc
inc
and
insl
xor
and
ljmp
jns
ljmp
out
call
int3
dec
loope
push
cmp
sbb
push
jecxz
in
cmp
push
sub
pop
dec
pop
push
and
insl
leave
mov
call
or
ja
daa
sub
gs
hlt
or
iret
lahf
movhps
cmp
imul
adc
sahf
sbb
push
ret
filds
scas
dec
ja
hlt
or
in
pusha
cwtl
outsl
cltd
or
movsl
test
fstpt
aas
in
cmp
adc
lret
out
pop
jmp
jle
adc
mov
cmp
mov
adc
push
test
lock
leave
ret
xchg
je
pop
mov
lock
cs
jle
data16
push
data16
jae
pop
adc
in
jne
dec
data16
pop
js
scas
xor
push
pop
ret
stos
cltd
out
fldt
jbe
jns
mov
xor
sti
jne
or
inc
mov
enter
mov
int
cmp
xchg
xchg
jmp
iret
out
in
lock
sbb
jl
sbbl
adc
or
mov
pop
addl
pop
rcr
mov
cmp
sbb
adc
pop
pop
pop
xor
es
or
xor
push
insb
adc
fcomps
outsl
or
mov
mov
subl
xor
pushf
repz
dec
pusha
clc
mov
jne
cli
pop
hlt
cs
mov
jb
ffree
xchg
push
jg
jmp
mov
out
ret
xchg
xor
mov
shrb
jnp
in
aam
sbb
dec
and
and
xor
outsb
add
outsb
push
add
mov
ds
idivl
arpl
lock
int3
push
sub
lods
loop
ret
inc
shr
and
xor
mov
fcomps
mov
cmp
sahf
jle
mov
inc
pop
adc
jp
ret
bound
repnz
mov
movsl
ret
in
or
inc
aas
test
push
jbe
push
mov
jo
pop
push
sub
adc
fnstsw
pop
dec
lret
push
push
mov
sbb
mov
fcoml
cltd
enter
jo
leave
fadds
in
lods
sbb
sbb
inc
push
loopne
push
pop
in
mov
stos
data16
cltd
and
leave
test
cmp
xchg
jp
sbb
add
repz
dec
std
popa
pop
test
ljmp
sbb
inc
push
push
sarb
push
fsubr
push
idiv
push
jae
je
or
mov
insl
in
cmc
mov
adc
divl
add
es
sbb
into
or
movsb
arpl
mov
dec
rcl
mov
sahf
push
sarb
test
adc
stos
clc
scas
cmpsb
mov
mov
loopne
shll
test
pop
or
cmc
mov
push
push
lret
jle
stos
mov
sub
out
fdecstp
clc
cmc
fistps
and
pushf
dec
cmpsb
or
mov
dec
mov
mov
sub
jg
and
add
sub
cmp
xchg
enter
arpl
mov
adc
jp
leave
dec
jge
mov
in
scas
pop
pop
cmc
inc
mov
fnstsw
add
mov
mov
xor
mov
pop
pop
jp
xchg
inc
mov
mov
test
sub
cmpsl
shlb
das
pop
jo
sar
in
jne
and
pop
out
pop
xchg
insl
xchg
sub
arpl
sbbb
lcall
cmp
and
mov
xor
adc
scas
and
jmp
jmp
mov
sub
jo
in
and
addr16
sbb
add
fldcw
and
repnz
and
add
fisubs
clc
jmp
pop
inc
sbb
pop
hlt
adc
mov
out
sarb
push
outsb
push
pop
lcall
sarb
enter
lret
and
popa
jns
pop
jb
mov
subb
repnz
popf
inc
sbb
xorl
and
add
push
jo
les
pop
cmpsl
jns
sahf
mov
mov
jb
stos
add
fiadds
dec
or
stos
cli
test
clc
pop
ljmp
loopne
int
in
mov
movsl
add
mov
mov
test
adc
mov
lds
mov
ficompl
xor
lcall
jns
cmp
mov
xor
pushf
popa
stc
lea
sti
xlat
jo
bound
lods
je
sarb
cmp
fildll
stos
lock
jle
mov
inc
fiaddl
cmp
cmp
notb
mov
imul
gs
mov
dec
xchg
mov
sbb
int3
push
xchg
outsb
jns
enter
icebp
inc
ret
push
roll
hlt
cmpsb
int3
mov
hlt
movsb
and
inc
mov
push
pop
mov
sbb
and
jno
mov
adc
cli
inc
mov
mov
push
inc
lea
rorb
pushl
pop
mov
inc
pop
aam
loop
leave
pop
sub
mov
inc
outsb
add
xchg
inc
sub
aas
iret
pop
aas
into
mov
fwait
lods
fxch
std
shll
in
cwtl
imul
sub
pop
inc
lock
and
jg
push
jne
out
mov
in
dec
or
test
aas
lds
jmp
push
enter
pusha
sub
inc
push
sahf
inc
js
pusha
jne
aas
jg
in
xchg
xor
pop
sub
xor
les
inc
aad
jns
pusha
mov
out
hlt
arpl
lret
insl
aad
sub
push
roll
int
xchg
push
adc
jbe
bound
movsb
arpl
icebp
imul
xchg
dec
mov
adc
mov
and
push
or
shrl
and
in
cmpsl
in
pop
stos
addr16
scas
jmp
mov
add
int
mov
mov
xchg
jg
adc
fildl
lods
inc
dec
cmp
xor
mov
into
dec
cmpsl
shrb
jp
imul
sbb
rorl
je
out
mov
fisubl
xchg
incb
incl
mov
jo
stos
jg
fs
es
mov
ret
sub
jmp
ds
dec
gs
mov
jecxz
or
imul
pop
cli
push
push
nop
jno
enter
and
mov
in
or
out
mov
daa
add
jp
mov
push
cmpsb
dec
sub
xor
aad
subb
push
cld
test
xchg
ds
addr16
scas
and
cld
dec
add
jmp
push
fldl
push
dec
xchg
mov
mov
or
clc
xor
mov
mov
xchg
cmpsl
xor
inc
pop
xchg
in
jmp
xchg
add
mov
push
xlat
push
push
shl
mov
scas
mov
fldenv
idivl
sub
mov
sahf
aaa
add
pushl
add
add
or
lds
test
out
and
addr16
jb
aad
sbb
out
xchg
xor
xchg
add
aam
or
insl
sahf
int3
fnstcw
ds
xor
repz
mov
data16
test
cmp
bound
or
jae
inc
sbb
mov
push
dec
sbb
stc
push
adc
bound
or
cmpsl
out
daa
stc
addr16
bound
inc
js
xchg
imul
ret
aad
jg
mov
test
cmp
insb
adc
js
lea
mov
dec
pusha
push
call
dec
jno
cmc
rorb
pop
out
inc
xlat
dec
cmpsl
jl
sbb
adc
mov
in
cld
loopne
mov
push
jg
cmp
les
xor
or
dec
xchg
push
stos
cmp
push
mov
gs
cmc
lds
sub
daa
jecxz
mov
daa
mov
sub
outsb
pop
sub
mov
adc
inc
mov
hlt
pusha
xor
inc
vcmpps
call
fstps
pop
sbb
pop
call
dec
inc
or
fisubs
dec
imul
pop
aad
dec
dec
les
pop
xor
xor
pop
cmp
inc
cmp
out
jecxz
repnz
out
std
arpl
push
mov
arpl
aaa
ds
push
sarb
mov
lahf
outsl
push
lods
inc
push
loope
xchg
push
icebp
jo
jge
ds
jae
test
das
or
ret
cwtl
outsb
sbb
dec
pop
je
cmpsl
or
jmp
ficomps
pop
jecxz
ss
xor
xor
and
and
ljmp
into
push
fmuls
loop
movsl
cmp
in
xchg
jge
adc
nop
mov
and
cltd
cmp
xor
sbb
leave
lret
xlat
push
dec
or
dec
andl
sbbb
out
mov
and
cmp
rcrl
sbb
enter
movsb
mov
cltd
xchg
and
push
idiv
pop
xor
notl
jmp
lds
fstl
adc
sub
inc
divl
cltd
xchg
stos
push
jmp
out
ljmp
pop
cli
addr16
imul
es
lret
mov
push
pop
or
mull
aaa
pop
mov
outsl
add
adc
push
movsb
mov
pushf
faddp
mov
or
lret
cmp
int
fcomi
jne
lahf
xchg
dec
lea
adcb
fwait
dec
mov
mov
mov
pop
fimuls
cli
bound
scas
cmovb
mov
lock
push
test
mov
cmp
ror
test
hlt
sar
sub
mov
jp
popf
vpaddb
in
add
jb
rcl
mov
mov
rclb
adc
adc
dec
push
push
cli
sub
icebp
js
or
jns
enter
fidivrl
mov
aaa
data16
and
outsl
das
out
das
das
stc
out
fidivrl
dec
test
cmp
aad
stos
in
xchg
mov
dec
in
divb
mov
sbb
neg
and
dec
mov
jl
mov
imul
sub
sbb
or
sbb
sub
cmp
dec
mov
jl
mov
imul
sub
sbb
or
pop
in
ret
cmp
dec
mov
jge
mov
outsl
movsl
pop
mov
sub
adc
out
adc
xor
movsb
aas
adc
dec
mov
cld
dec
mov
cmp
inc
push
push
adc
jae
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
or
std
into
pop
mov
xabort
mov
pop
or
add
add
push
add
add
add
pop
add
add
inc
add
add
add
add
pop
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
inc
add
sub
inc
add
add
xchg
aas
add
add
str
mov
filds
adc
int3
add
cmpsl
add
add
add
add
add
and
mov
dec
add
add
pop
add
add
add
add
add
rolb
movsl
add
sub
push
add
add
adc
addl
add
add
add
add
add
addl
in
add
daa
add
add
xchg
dec
add
add
add
add
add
in
add
add
add
lret
add
or
mov
sub
inc
add
add
add
add
mov
add
add
add
mov
add
add
add
add
xchg
je
mov
mov
cwtl
add
inc
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
roll
xchg
add
or
test
mov
add
add
add
add
xor
pop
add
jmp
add
sbb
loop
sub
test
add
add
xchg
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
cwtl
add
add
pop
add
add
add
add
add
add
adc
add
add
add
add
aas
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
mov
add
add
pop
add
add
inc
add
nop
add
inc
add
add
add
add
add
add
add
add
add
popf
add
add
add
add
add
adc
mov
add
sbb
add
add
add
add
add
add
add
imul
pop
add
add
in
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
movsl
add
add
cmp
add
add
add
loop
sti
add
add
add
add
add
add
add
add
roll
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
movsb
add
push
add
rolb
add
add
add
add
jl
pop
add
faddl
pop
add
add
add
and
test
enter
jmp
add
roll
add
test
sahf
add
add
add
add
add
add
cltd
add
add
add
add
add
add
add
add
add
adc
fldcw
divl
mov
mov
ret
icebp
pop
jecxz
repz
test
or
push
test
sub
repz
ficomps
outsl
mov
fdivl
movsb
inc
imul
in
sub
push
gs
mov
es
rcrl
scas
inc
push
loope
int3
xor
and
fists
mov
mov
loope
inc
pop
inc
leave
sub
jbe
sar
xchg
lods
dec
sahf
lds
scas
add
jo
push
mov
push
jne
push
mov
xlat
mov
stos
dec
and
lret
xchg
and
les
cmp
outsb
push
lods
cmp
pop
xor
ds
cld
shrb
pop
xchg
lock
cs
out
mov
sub
jae
into
cld
xchg
or
imul
push
fnstcw
shll
rcrb
cmp
dec
outsl
xchg
out
cmpsb
sbb
cmp
cwtl
push
push
fs
popa
in
sbb
cmpsl
push
push
cmpsl
mov
stos
sbb
xchg
lahf
out
jns
loopne
aas
cmp
iret
xchg
pop
mov
addr16
rorb
dec
jb
mov
and
notl
jecxz
and
xchg
sub
xchg
sbb
int3
test
into
dec
fdivrs
push
mov
inc
and
jns
xor
mov
push
add
fucomip
fldl
pop
adc
mov
aas
cld
xor
xchg
aad
adc
adc
popl
push
cli
lret
jne
inc
loope
sub
outsb
jle
adc
cmp
mov
in
fisubrl
pop
push
pop
sub
and
loop
mov
lcall
enter
push
and
stos
repnz
js
pushf
jne
push
mov
xor
shl
jne
lds
mov
mov
or
inc
cltd
mov
nop
call
hlt
sbb
cmpsl
in
and
test
lds
inc
jmp
cmp
mov
aas
xor
cmc
sub
mov
mov
lock
dec
push
out
mov
pushf
xchg
xchg
mov
fdivs
lret
lret
imul
daa
mov
faddl
addb
jle
xlat
ja
in
imul
and
jmp
loop
inc
mov
inc
aaa
cmp
vmptrst
push
sbb
adc
punpckhbw
jecxz
push
dec
jns
sbb
or
arpl
sub
dec
jno
pop
push
cmp
jge
inc
outsb
daa
jne
sahf
jg
push
mov
push
pop
jl
sbb
mov
dec
repz
jg
dec
insb
dec
cs
rorb
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
