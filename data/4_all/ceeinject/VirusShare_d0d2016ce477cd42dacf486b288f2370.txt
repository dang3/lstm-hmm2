call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
pop
imul
add
insb
push
cmp
call
fwait
lcall
pop
pop
imul
or
sbb
enter
call
lcall
xchg
fcmovu
pop
in
sarb
pop
mov
lret
pop
mov
lea
icebp
enter
jnp
das
sbb
pop
xchg
das
xor
loopne
lret
fsubs
sub
push
je
adc
inc
ret
or
push
xor
les
in
add
jp
in
mov
adc
push
mov
pop
sub
dec
pop
imul
sbbl
pop
mov
mov
inc
and
adc
add
cwtl
pop
push
and
js
rorb
in
sub
cmp
fidivs
mov
push
mov
jmp
pop
cmpsb
mov
cmp
pop
outsl
and
or
clc
clc
js
fwait
cltd
sti
mov
pop
in
jns
inc
xchg
fwait
scas
push
and
push
mov
cmp
dec
pop
test
in
pop
jb
or
sub
cmpl
clc
in
jmp
test
test
cmp
sub
push
gs
ja
inc
pop
pop
stos
mov
xchg
loop
cmc
in
fucomip
cld
rcrl
sub
mov
bound
sub
dec
push
rep
lcall
fdivr
aam
leave
cli
sarl
push
push
sbb
sbb
sub
cmp
lret
enter
call
fwait
cwtl
stos
test
mov
imul
or
sbb
sub
cmp
lret
enter
call
fwait
cwtl
stos
test
mov
ret
lret
and
inc
xchg
je
dec
jbe
jae
or
int3
mov
pop
ljmp
push
sub
clc
ja
add
lock
fldenv
inc
jne
divb
ret
xchg
repnz
lcall
add
movsb
das
lret
stos
push
jmp
adc
xor
addl
push
pushl
rcll
fnstsw
testb
imul
push
cmp
xchg
roll
ds
stos
mov
fldt
repnz
xorl
fsubrs
clc
orb
push
inc
test
imul
inc
test
dec
das
or
push
sub
adc
mov
shrl
mov
scas
adc
jecxz
lahf
sbb
push
push
popa
pop
mov
je
dec
push
int3
mov
or
pop
xchg
imul
movl
inc
shrb
pop
pushf
cmpsb
outsl
in
das
outsl
add
stos
pop
ret
or
add
ds
or
jne
mov
xor
out
loop
popa
jbe
xchg
xchg
cmp
clc
push
sbb
mov
dec
lcall
pop
jnp
loop
rcll
pop
fcmovnu
aas
aam
gs
jno
enter
xchg
cmp
testb
mov
movsb
jmp
icebp
cmc
sbb
insb
fisubl
lods
or
mov
icebp
adc
mov
mov
jmp
push
push
pandn
mull
mov
cmp
xchg
nop
sub
sbb
mov
adc
push
push
lds
fwait
sbb
pop
mov
dec
pushf
int3
xlat
dec
inc
leave
add
stos
incb
andl
adc
mov
pop
das
jno
jno
add
push
icebp
pop
sbbb
rcll
sub
dec
hlt
inc
leave
stc
dec
sub
cwtl
jns
cmp
sub
faddl
pop
outsb
dec
add
mov
pusha
mov
popf
pusha
data16
mov
subb
jmp
inc
inc
fsubrs
mov
fimuls
nopl
sub
sbbl
test
push
bnd
pop
pop
sub
mov
sti
cmp
adc
mov
cmp
out
scas
cmp
mov
add
mov
cmp
sub
out
cli
pop
loop
cmpsb
clc
fwait
loope
xor
fmul
and
jge
imul
scas
fidivrs
push
pusha
dec
inc
mov
inc
and
pop
fs
test
insl
popf
pop
jns
movsl
nop
bound
jb
scas
insl
orb
mul
mov
push
fidivs
push
into
jo
ds
push
lods
cli
inc
les
jge
dec
imul
ds
in
jb
rcrb
mov
sub
lcall
les
stc
xor
lods
hlt
mov
pop
decl
or
aad
loop
mov
pop
push
es
sarl
pop
aam
popf
xchg
lcall
nop
lret
icebp
lret
or
add
inc
nop
mov
stos
jae
adc
cmc
call
cmp
js
jmp
adcb
jmp
inc
mov
mov
in
mov
insb
pop
lahf
divb
mov
popf
imul
sbb
push
out
jg
add
jl
outsl
ss
pop
xor
jle
and
mov
mov
cmp
jle
mov
insl
mov
ja
test
sub
jns
jl
jecxz
xorb
ljmp
shlb
adc
add
sbb
add
fstps
cmp
inc
dec
jns
mov
mov
sbb
sub
in
sub
je
adc
aaa
mov
sbb
mov
dec
frstor
nop
sub
fdivrs
sub
arpl
sub
inc
cmc
scas
push
mov
lret
fdivrs
mov
outsl
lcall
sbb
mov
sbb
ds
dec
mov
mov
jns
sub
paddw
fistpll
mov
cltd
sub
cmpsb
lret
jle
shr
push
imul
je
int3
lret
xchg
in
jnp
out
movsb
lods
pop
xor
mov
jo
call
repz
add
pop
cmp
or
enter
sbb
mov
xor
daa
repnz
aam
call
mov
aad
ret
inc
into
pop
push
loope
mov
mov
stc
lcall
mov
jb
mov
lock
jo
insl
shlb
adc
jle
xchg
mov
sub
cmp
js
pusha
push
push
xor
pop
adc
cwtl
jge
out
adc
outsb
add
cltd
dec
fwait
in
movsl
pop
je
lock
push
das
lret
popf
je
cmp
xchg
sub
cwtl
int3
pop
mov
popa
sbb
popf
or
push
scas
mov
or
movsl
jmp
add
out
je
jg
inc
cli
mov
adc
and
pop
inc
sub
mov
aam
jbe
cmpsl
xchg
and
pop
loop
das
icebp
fwait
rcrb
or
inc
in
xchg
pop
ljmp
ja
testb
mov
subl
xchg
push
out
adc
aaa
movsl
lret
jbe
lods
inc
jg
cmp
adc
dec
add
ds
leave
das
insl
inc
ss
shlb
sub
inc
and
es
fsubs
stos
fistl
sub
add
lcall
cli
lds
mov
and
scas
jle
sub
mov
test
cmpsb
pop
lcall
fwait
shlb
js
sbb
mov
out
add
lcall
lret
icebp
push
inc
lods
adc
fisubrl
ljmp
ja
repnz
scas
lock
mov
jmp
mov
push
aaa
mov
popf
fisttpll
les
dec
sub
inc
adc
mov
ss
push
xor
jmp
and
sbb
pushf
ja
push
movsl
ljmp
stos
cltd
test
lods
pop
incb
pop
data16
movsb
jl
xchg
cwtl
mov
mov
shl
fldl
cmpsl
cmp
push
sbb
movsb
xor
int
fscale
ja
inc
repnz
std
mov
cld
test
xchg
loopne
add
push
outsb
scas
push
dec
movsb
bound
mov
and
orl
lret
loope
or
ljmp
add
notb
inc
jge
aas
push
pop
push
mov
jnp
sub
hlt
adc
jle
stos
aas
mov
pop
cmp
les
push
xchg
sbb
jnp
fucom
jle
fstps
xchg
push
xchg
stc
lods
dec
xor
cld
add
dec
mov
adc
sbb
dec
out
sbb
lods
or
in
push
mov
push
in
jnp
inc
pusha
and
pushf
repz
je
sub
daa
cmp
mov
lret
or
stos
scas
jp
and
mov
xchg
mov
lea
stos
pop
adc
xchg
divl
push
addr16
imul
xor
les
inc
movsb
and
das
sar
fisttpll
lcall
test
pop
pusha
in
jae
and
into
scas
shll
cmp
ret
pop
es
stos
jle
inc
push
inc
int
mov
push
adc
ficompl
jmp
cmp
mov
sarl
or
frstor
add
add
fs
add
jmp
in
and
jnp
dec
call
cmp
leave
ds
in
ror
add
rorl
sbb
sbb
xchg
mov
jne
shrl
xlat
push
add
cwtl
fs
mov
shrl
or
mov
ret
pop
aaa
cmp
push
add
jbe
mov
decb
subl
mov
add
es
adc
lods
cmp
add
loop
sbb
and
in
pop
xchg
insl
stos
idivb
inc
pushf
add
scas
push
gs
js
gs
aas
fwait
xor
jae
push
xor
mov
sub
fs
inc
in
dec
cmc
push
xlat
scas
push
je
fdivl
test
data16
pop
mov
cmp
xchg
repnz
dec
repnz
repnz
xor
fcoms
add
jge
mov
sbb
rcrb
cmp
push
xchg
and
sub
mov
ja
mov
mov
inc
adcl
aad
sar
dec
adc
ja
mov
and
lcall
jno
in
xor
enter
ret
lahf
les
add
mov
mov
and
pop
fcoms
repz
imul
in
pop
mov
jno
imul
mov
mov
xor
push
xchg
mov
bound
sub
insl
xchg
add
push
shl
or
int
mov
sti
stos
arpl
fcomi
mov
jle
cmc
xchg
xchg
mov
cmpsb
fbstp
js
dec
mov
aad
and
std
enter
clc
scas
push
movsb
mov
icebp
stos
fisttpll
adc
imul
movb
pop
cmp
subb
pop
cwtl
adc
mov
pop
lods
xor
push
mov
jge
out
push
and
sub
adc
xchg
dec
data16
sbb
push
jb
xchg
add
iret
pop
gs
cmp
movsl
add
sub
pop
repnz
lahf
iret
add
rcrl
inc
gs
sarb
mov
jo
movsb
in
jne
inc
mov
out
fdivrl
add
sbb
jns
pop
stos
mov
push
xchg
mov
jbe
add
fnstcw
mov
mov
sbb
mov
push
movsb
add
jb
sbb
and
stos
adc
fsubr
mov
inc
mov
addr16
jp
cmp
mov
pop
in
pop
xlat
bound
out
addr16
and
fbstp
pop
mov
lds
add
inc
pop
movsb
out
xchg
xchg
push
mov
mov
lods
cmpsl
xchg
xor
mov
jbe
push
push
push
fstpl
daa
jo
imul
inc
sub
icebp
notl
mov
inc
xchg
int
or
nop
mov
cmp
test
sub
pop
lret
leave
push
les
inc
xchg
fs
mov
pusha
mov
lock
pop
cwtl
xor
shrb
sub
int3
stos
sub
ljmp
or
add
mov
sbb
icebp
push
mov
add
adc
std
mov
xchg
push
jle
jl
pushf
or
fisubrl
mov
lret
fstps
and
pop
sbb
or
lret
sarb
mov
xor
mov
jp
add
sub
push
push
add
lock
rclb
hlt
push
mov
pop
mov
or
mov
pop
adcl
cmpsb
loop
add
push
sbb
movsl
inc
cs
test
cs
xchg
out
insb
rolb
and
xor
push
fidivs
cltd
test
loope
insl
ljmp
sub
stos
lea
push
call
pop
mov
or
jmp
stos
add
fisubl
insb
and
popf
gs
into
xor
pusha
loope
push
or
test
add
cltd
jle
xor
shll
bound
clc
push
shrl
lds
clc
inc
les
arpl
popa
jae
xlat
dec
jmp
in
pop
aad
test
fstpl
je
and
js
add
int3
mov
popa
mov
pop
movsb
dec
mov
mov
leave
xchg
add
stos
mov
push
fiaddl
in
xor
out
mov
and
scas
icebp
mov
sub
fsubs
sub
and
loop
adc
jns
test
and
mov
insl
inc
mov
mov
pop
les
gs
out
xchg
test
ret
jns
and
incl
lock
es
inc
repnz
dec
mov
sub
mov
or
jne
xor
testb
sub
mov
je
cli
xlat
or
inc
fcoml
mov
in
outsl
cli
xchg
mov
pminsw
add
jl
mov
xchg
fsubs
popa
push
mov
jae
jecxz
and
loopne
sahf
xchg
mov
adc
mov
push
js
dec
jmp
orb
or
stc
push
mov
clc
int
dec
jno
dec
xor
mov
mov
je
shl
push
xor
cmp
jmp
dec
fadds
or
out
jne
cltd
mov
dec
xchg
test
mov
xlat
cwtl
sahf
shll
push
push
int3
lcall
movsb
aam
mov
adc
js
xchg
out
add
dec
leave
cmp
mov
lds
nop
xlat
dec
add
xor
pop
jp
lahf
jl
or
loope
push
mov
pop
popa
popf
jle
or
imul
xchg
xchg
adc
push
push
ret
ret
rclb
in
sbb
push
repnz
repnz
icebp
hlt
or
push
xor
or
and
mov
fisubrs
cmp
sub
stos
xor
idivb
dec
jo
ds
ret
cmp
jo
test
dec
mov
dec
in
loope
lcall
fwait
sub
movsb
jne
jecxz
add
daa
stc
lahf
pushf
fcmovnu
es
clc
lds
xchg
in
dec
daa
insl
test
sub
rorl
jns
clc
sub
nop
mov
mov
shl
mov
xchg
dec
int3
jecxz
fwait
lcall
cmc
inc
dec
inc
je
mov
shrb
rolb
xor
subl
xor
lods
testl
and
repnz
inc
sub
add
ss
pop
jecxz
inc
mov
and
cmp
and
sbb
es
loop
aaa
jo
fwait
pop
inc
outsb
add
push
ficomps
lret
pop
lahf
ljmp
dec
mov
xchg
and
xchg
test
pop
sub
xor
push
test
mov
scas
xrelease
cltd
icebp
dec
xor
inc
insb
arpl
test
out
or
push
sbb
adc
repnz
outsb
icebp
sbb
lds
sbb
cwtl
cmp
jp
lds
fistpll
jb
addb
aam
adc
mov
repnz
jl
mov
sbb
dec
and
out
mov
filds
stos
mov
or
gs
iret
and
arpl
lahf
in
cwtl
aam
mov
bswap
decl
ljmp
cmpsb
dec
xor
push
mov
push
ds
lahf
fimuls
je
in
sub
mov
ss
std
fwait
sbb
push
mov
les
cmpsl
cmp
mov
pop
in
adc
jecxz
mulb
scas
pop
adc
add
js
dec
js
dec
push
lret
sbb
enter
adc
push
mov
stc
mov
stc
test
lods
sub
into
orb
push
repnz
stos
pop
rcrb
out
out
subb
loopne
xor
xchg
int
pop
loope
imul
call
jmp
outsl
or
addr16
mov
andb
mov
bound
mov
inc
shll
xorb
mov
cmpl
xor
or
pop
mov
push
jno
cmp
in
cld
repnz
das
in
mov
dec
loope
add
aaa
mov
xchg
jg
ja
mov
and
cmp
or
in
imul
xchg
jmp
clc
test
int3
pop
sahf
mov
and
outsb
mov
mov
cmp
adc
adc
es
or
scas
sub
inc
cmpsb
out
imul
lahf
mov
adc
ja
sbb
add
dec
jle
jp
mov
jb
inc
mov
jbe
fs
xchg
negb
sbb
dec
xorb
sbb
adc
dec
adc
dec
mov
xchg
xchg
addl
cmp
fs
aas
repz
mov
loope
cmp
or
in
out
int
daa
popa
int3
xor
lods
sbb
inc
lret
jge
sub
loopne
sbb
enter
adc
cmp
pop
jne
cli
xchg
sbb
repnz
das
ret
and
jmp
pop
dec
es
popl
call
mov
push
shr
std
push
or
pop
inc
inc
sahf
and
addr16
sti
or
lcall
movsb
aam
push
dec
jnp
xchg
and
dec
in
cmpsl
xchg
out
and
and
cmp
stos
mov
dec
sbb
mov
cmp
pop
sub
cmp
cmpsl
je
or
push
inc
jle
inc
rcl
dec
sub
scas
mov
dec
xchg
xchg
mov
in
pop
dec
xlat
loopne
arpl
or
cltd
and
fsubrs
add
mov
movsb
cmpsb
pop
std
push
rcrb
out
mov
xchg
sbb
cmp
xchg
push
lret
fwait
lcall
mov
mov
jbe
aad
jbe
push
ret
imul
fwait
fs
test
xchg
ss
pop
xchg
out
inc
arpl
fidivrs
clc
xor
mov
outsb
push
jge
cltd
push
sbb
sarl
push
bound
fistl
fs
mov
outsb
idiv
fbld
cmp
sub
sete
mov
scas
adc
popa
fldcw
orl
shlb
in
aaa
sbb
imul
outsl
les
xor
pop
jb
dec
icebp
outsb
lock
stos
clc
mov
xor
pop
and
adc
and
pop
aad
push
push
daa
sub
add
push
stos
clc
in
rcl
pusha
inc
arpl
inc
aad
jne
and
ret
inc
aaa
pop
add
pop
pop
ja
mov
iret
mov
sub
cli
pop
lret
dec
popf
fwait
stc
inc
mov
mov
stos
and
dec
pop
sbb
stc
sub
pop
mov
dec
ffree
xchg
and
lret
cmp
dec
sub
int3
xor
pop
fmull
ljmp
data16
int3
adcl
fbld
pop
push
pop
push
and
xchg
aam
push
testb
cli
sub
les
rcr
xor
jno
daa
xor
jbe
into
in
mov
test
dec
fcoms
push
out
cmp
repz
loope
or
sbb
repnz
int3
ss
aad
leave
or
xchg
dec
es
out
cmp
iret
cmpsb
roll
inc
sub
adc
or
subl
push
lar
xchg
lea
jno
ja
mov
in
jne
lds
xchg
mov
dec
pop
lret
fidivl
fsubl
mov
sub
cs
daa
xor
inc
dec
adc
sti
mov
adc
enter
or
jl
arpl
icebp
sahf
ljmp
inc
dec
adc
test
cmp
jo
lods
cmpsb
sbb
adc
inc
inc
mov
inc
sub
imul
cmp
daa
lds
mov
dec
ljmp
lds
adc
adc
ret
daa
xor
jle
stc
cmpsb
test
fbld
fs
pop
insb
adc
lods
fiadds
sub
dec
outsb
notl
ficompl
xchg
out
jmp
adc
sub
adcl
enter
pop
lods
add
and
adc
inc
stc
dec
and
imul
add
xor
in
loop
mov
movb
sbb
pop
mov
adc
push
push
sti
aad
cmc
inc
loopne
jae
lea
mov
dec
jecxz
sub
mov
mov
jns
cmp
push
das
cmc
popf
cld
in
xchg
mov
jmp
fdivrl
adc
shrb
adc
mov
mov
mov
dec
jne
mov
jae
pop
dec
dec
add
in
clc
ja
xor
sub
and
inc
cld
mov
movsb
jle
pop
sbb
inc
std
adc
xchg
imul
das
addr16
pop
and
cwtl
cmp
mov
mov
nop
pusha
pop
lea
ret
out
pop
ja
popf
fnstenv
movsl
fisttpll
push
inc
leave
pop
fidivl
push
imul
test
pop
inc
daa
mov
mov
rorb
mov
cmc
mov
arpl
mov
sub
xor
sti
in
popa
aad
cld
push
test
dec
fsubs
enter
arpl
push
inc
pop
movsl
pop
dec
mov
test
inc
inc
adc
xor
lret
jp
fwait
ret
mov
cmp
sbb
mov
mov
mov
mov
push
lea
sub
ds
sbb
mov
jbe
mov
lcall
xchg
mov
mov
repz
in
jmp
mov
in
cld
sbb
mov
cmp
ja
test
fdivs
fcmovb
movsb
das
adc
fwait
mov
fmull
jno
jmp
mov
cld
pop
out
mov
add
js
or
sbb
sub
cmp
enter
call
fwait
cwtl
stos
test
mov
imul
or
sbb
sub
cmp
lret
enter
call
fwait
cwtl
stos
test
mov
jnp
jnp
or
pop
mov
sub
cmp
adc
fsub
call
sbbb
dec
ja
jecxz
push
jns
or
sbb
test
cmp
aaa
and
inc
call
adc
push
inc
inc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
pop
aaa
mull
out
adc
sbb
addr16
pop
movb
aaa
out
pop
xlat
pop
mull
out
xchg
inc
xchg
fists
inc
ja
xlat
jnp
pop
divl
out
pop
xlat
pop
aaa
mull
out
xchg
inc
xchg
cmpsl
xchg
push
xchg
ret
inc
scas
push
xlat
pop
mov
pop
mov
ja
fdivl
push
sub
mov
xor
push
push
pop
mov
test
bound
dec
add
mov
js
out
bound
add
pop
cmp
pushl
pop
jbe
xlat
push
lret
inc
loope
lahf
int
cld
inc
adc
xchg
add
lret
pop
aaa
imul
mov
jecxz
mov
xor
xchg
test
mov
aaa
pop
xchg
stc
out
in
es
push
pop
dec
push
ja
addr16
test
or
mov
pop
jb
sbb
out
push
pop
dec
mov
xchg
dec
mov
push
adc
pop
push
divb
out
dec
xlat
pop
aaa
mull
out
xchg
inc
xchg
cmpsl
xchg
push
xchg
ja
xlat
pop
movl
arpl
inc
xchg
imul
xor
add
ljmp
xor
adc
dec
xchg
imul
outsl
out
sti
and
ja
pop
ret
lds
ds
and
add
clc
dec
popa
xchg
sub
push
mov
cmpsl
xchg
push
xchg
ja
xlat
pop
movl
pop
xlat
pop
aaa
mull
out
xchg
inc
xchg
cmpsl
xchg
push
xchg
ja
xlat
pop
movl
pop
xlat
add
and
dec
push
cmpb
add
leave
nop
test
lea
out
fisubs
cli
mov
movsb
push
inc
push
jecxz
in
push
hlt
mov
mov
mov
je
outsb
idivb
in
jae
mov
ret
iret
dec
cmp
pop
mov
jbe
and
xchg
je
imul
jbe
in
popl
int3
mov
test
and
jns
shrl
ret
fwait
daa
inc
mov
or
loope
mov
and
aas
xchg
sarl
add
or
rcl
adc
je
cltd
cld
insl
pop
loop
iret
pop
mov
popa
push
cmp
pop
into
scas
mov
xchg
push
pop
or
fcmovu
mov
push
leave
sti
rcll
data16
scas
movsl
jle
fs
or
mov
aad
orb
dec
mov
xchg
ljmp
mov
addb
nop
and
icebp
mov
jmp
shlb
xor
cmp
loope
arpl
sub
add
adc
popa
xor
imul
xchg
fisttpl
xchg
mov
test
xor
sbb
imulb
xchg
jg
dec
or
dec
sbb
sub
jb
mov
or
out
das
sti
in
fucom
adc
jp
mov
test
add
pop
or
lods
out
xchg
int
fcompl
xchg
leave
mov
fwait
adc
lock
sbbb
sahf
cmpsl
fldenv
dec
jae
nop
test
lahf
pop
test
incb
arpl
pop
test
cltd
mov
cmp
or
cmpsl
out
stos
sbb
mov
stc
loopne
repnz
ret
and
sti
ljmp
jg
push
and
cmc
pop
sub
leave
gs
cld
movsl
jecxz
hlt
lds
lahf
jne
js
mov
popf
movsb
jae
push
mov
lods
ljmp
out
jmp
bound
jo
pop
jmp
xorl
outsb
js
out
in
push
cmpsl
mov
xchg
jp
push
push
push
inc
push
nop
outsb
and
or
or
jo
dec
stos
mov
mov
or
addr16
into
push
push
dec
mov
and
insb
pop
adc
cmc
divb
or
rdpmc
push
dec
jne
cmp
dec
popl
inc
xorb
std
stos
pop
dec
fisubs
push
dec
add
pop
in
filds
outsb
pop
pop
xorb
xchg
push
add
pop
mov
cmpsl
adc
popa
add
lods
sub
out
jns
add
pop
cmc
ret
cmp
add
repz
stos
ds
shll
push
cmp
popf
sub
sub
daa
xor
push
in
mov
in
ret
jl
jno
and
and
roll
adc
imul
sub
push
mov
test
mov
out
xchg
mov
mov
cmpsl
test
inc
incb
jne
mov
cltd
xchg
push
incl
inc
mov
jno
cmp
loopne
imulb
repnz
incl
or
fnstenv
pop
movsl
cmp
mov
mov
jle
les
jl
fdivrs
mov
mov
xchg
addr16
dec
test
cltd
pop
cld
test
daa
dec
dec
rcl
cwtl
mov
fcomip
insb
int
insb
lea
jmp
jg
xchg
and
adc
aaa
dec
xchg
jecxz
pop
jl
subl
arpl
sbb
dec
jle
das
iret
mov
mulb
sub
mov
in
xor
adcb
inc
outsl
xchg
sub
push
or
test
mov
mov
das
sbb
sub
pop
mov
mov
push
pop
add
jl
mov
arpl
xchg
lea
push
dec
addb
jns
inc
add
out
gs
rep
insb
and
pop
pop
mov
in
xor
mov
in
dec
inc
rolb
sub
mov
mov
or
cs
push
mov
jo
pop
sbb
push
fwait
adc
scas
enter
daa
jecxz
dec
pop
xor
lahf
jns
mov
loopne
xor
ret
dec
out
push
std
xchg
mov
scas
push
inc
push
and
out
sub
dec
shr
xchg
test
repnz
out
xor
inc
push
adc
xchg
movsl
ljmp
lods
dec
aad
mov
js
xchg
mov
lret
xchg
adc
xlat
pop
iret
or
lahf
hlt
push
repz
js
pop
pop
mov
cmpsb
lret
xor
push
pop
mov
xlat
xchg
jno
movsb
int
dec
sub
test
arpl
inc
pop
jae
push
cs
fwait
repnz
and
xor
repz
mov
add
dec
inc
mov
pop
cltd
mov
jmp
cmp
loop
jge
add
push
add
insl
lret
push
aas
scas
nop
lret
fbld
cli
xorb
lret
and
orl
sub
push
ja
out
xchg
adc
mov
sbb
sbb
shlb
dec
movsb
pop
imul
movsb
movsb
mov
mov
jno
add
push
rcll
inc
stc
sub
fcoms
xor
fucomip
lahf
inc
jl
movsl
in
mov
loope
insb
in
pop
jle
es
dec
pop
xchg
adc
mov
sbb
mull
add
inc
and
pop
ljmp
aam
sti
ret
inc
cs
pop
incb
sahf
shl
jne
andl
cs
and
fst
leave
enter
jnp
or
out
dec
ljmp
mov
xchg
imul
pop
pop
out
or
add
add
stos
fcomps
push
push
cmpsl
or
aaa
mov
mov
cltd
movsl
enter
xor
xlat
leave
or
adc
mov
sub
mov
pop
mov
ficomps
in
cmp
cmpsb
mov
or
dec
loop
xchg
push
mov
js
inc
fiadds
outsb
les
jp
jle
test
xor
jp
stos
sub
fs
dec
add
jnp
imul
imul
lock
jge
cli
fsubrs
xlat
mov
inc
mov
push
jbe
clc
insb
dec
sti
push
ret
out
rcrl
mov
les
insb
mov
xchg
xchg
push
inc
and
leave
xlat
cwtl
jb
sub
clc
push
sbb
daa
xchg
lcall
and
jnp
in
or
mov
jg
add
bound
nop
scas
and
arpl
andl
popf
in
push
xor
shll
stos
ret
and
dec
sbb
loop
xor
scas
cmp
push
push
inc
mov
std
inc
cmp
pop
adc
mov
jp
addb
aaa
mov
sub
decb
lock
movsl
push
xchg
mov
or
dec
movsl
insl
push
xchg
push
lcall
sahf
test
inc
testl
dec
xchg
mov
mov
mov
dec
pop
idivb
push
dec
lahf
ja
inc
loope
cmp
adc
xorb
cmpsb
xorb
sub
into
in
stc
xchg
jnp
insl
push
ja
pop
dec
test
lea
push
movsb
popa
xchg
adc
push
imul
push
adc
loope
lds
xchg
clc
cmc
test
cmp
xchg
loopne
loope
ret
inc
pop
and
xchg
inc
aam
filds
clc
rolb
pop
je
push
push
outsb
lea
cli
aam
push
inc
mov
idivl
mov
daa
dec
xchg
dec
out
int3
imul
push
scas
xchg
jmp
inc
clc
mov
sarl
das
movsb
jne
add
lea
mov
lock
mov
data16
sub
mov
stc
sub
call
dec
mov
fildl
adc
xchg
dec
movsb
cwtl
and
rcrb
jmp
fisttps
movups
jbe
mov
sbb
inc
bound
mov
mov
fstpt
adc
ror
xlat
out
lret
mov
ljmp
add
fbstp
xor
mov
sbb
xor
pop
sti
add
push
hlt
or
xlat
push
sbb
iret
add
cs
xlat
sahf
or
fdivs
aaa
call
push
popf
ret
add
das
repnz
add
decb
xor
aad
out
and
xor
mov
jp
mov
and
mov
mov
xchg
mov
rcll
in
jno
mov
or
xchg
and
xchg
ret
mov
push
inc
fistpll
ror
fwait
lret
loope
inc
decl
adc
leave
inc
pop
clc
dec
and
mov
shl
inc
xchg
sub
pop
xchg
mov
pop
adc
andb
jle
into
push
mov
in
loope,pn
xchg
mov
mov
and
or
movsl
enter
or
out
cli
ljmp
mov
pusha
pop
push
push
jmp
pop
shl
shll
bound
push
outsb
fnsave
sahf
mov
jb
push
mov
in
clc
mov
mov
data16
sub
icebp
adc
sub
cmp
insb
fdivl
jmp
pushf
test
int
jno
push
xor
nop
stc
cltd
imul
ret
dec
lds
fnstcw
add
fcompl
int3
das
cmc
orb
and
cmc
xchg
in
fwait
inc
repnz
mov
dec
dec
pop
pop
mov
je
inc
add
imul
orb
mov
xchg
shll
sub
inc
sbb
mov
push
ss
icebp
or
mov
aaa
pusha
pop
ret
out
pop
lret
movsb
mov
test
lcall
call
lods
push
lods
push
pop
fistpl
jmp
cld
xchg
addb
ss
aaa
push
or
jo
jle
lret
cwtl
mov
clc
push
xor
or
arpl
imul
xor
xor
push
orl
movsb
sbb
pop
pop
and
stos
or
movsb
sub
xor
push
sub
add
mov
mov
push
mov
loope
cmp
jae
xor
lods
fdivp
out
fwait
dec
jl
lds
mov
lds
dec
ffreep
aas
int
hlt
pop
arpl
popf
pop
mov
xchg
aaa
pop
xchg
and
push
out
jnp
jle
jp
aas
fmuls
xchg
ret
icebp
mov
push
push
xchg
push
aaa
in
adc
add
and
fwait
pop
mov
dec
aam
mov
mov
les
cmp
sets
sbb
int3
cli
mov
iret
push
stc
std
adc
push
mov
ret
pop
push
fadd
test
mov
jle
fdiv
push
rcr
in
or
cli
shll
arpl
dec
imul
mov
or
pop
pop
inc
push
mov
cwtl
mov
dec
call
xor
dec
es
mov
daa
jb
or
shrl
jmp
dec
push
adc
and
movsl
adcl
push
push
lcall
sti
or
scas
jb
pop
ret
cld
inc
xor
push
inc
push
xor
inc
mov
xor
jl
adc
sub
and
pop
shlb
xchg
adc
rcll
sbb
inc
push
pop
mov
push
add
sbbl
clc
jmp
rorb
dec
repnz
ja
mov
fidivs
enter
fwait
push
jecxz
testb
repnz
gs
sub
daa
insb
adc
movsl
sbb
gs
ss
mov
push
testl
fwait
popa
sti
je
out
add
pop
and
push
loop
cmp
fnstenv
mov
lods
fstps
mov
jb
adc
jge
mov
xchg
mov
add
dec
inc
out
cmp
lahf
lret
push
mov
pop
sub
loop
aas
cmpsl
stos
xchg
nop
inc
or
cmc
mov
pop
jg
gs
push
adc
and
mov
cmp
mov
add
inc
jmpw
subb
cwtl
sub
movsl
dec
push
and
in
enter
sbb
xchg
mov
sbb
aam
inc
jecxz
push
call
dec
jle
dec
xchg
loope
xlat
mov
mov
cmpps
lds
jns
jmp
push
inc
ficoml
jecxz
pop
inc
pop
and
or
jnp
jno
js
in
mov
pop
pop
in
jmp
test
pop
inc
add
mov
lret
cld
lock
sbb
in
shrb
popa
das
inc
ret
stos
aad
stos
add
pop
pop
xchg
iret
mov
adc
insb
mov
adc
fsub
stos
or
and
lret
leave
cmp
ja
dec
mov
push
data16
lret
subl
rolb
dec
fs
sbb
lods
int
xorb
push
push
movsb
inc
or
mov
mov
cmp
or
int
loop
popf
and
inc
cmp
fnstsw
adc
pop
mov
mov
out
mov
test
fistps
mov
mov
add
mov
fcoms
jbe
or
mov
dec
shlb
inc
and
push
mov
sub
lods
repz
xor
pop
jg
loopne
ficompl
lret
loop
fs
push
sbb
mov
lds
out
adc
fidivl
ret
xchg
mov
xchg
lret
push
in
loope
test
and
inc
mov
movl
dec
and
cmc
and
sbb
enter
ds
xor
ss
xchg
push
lret
dec
lret
mov
fisubrl
ret
les
repz
mov
sahf
stos
iret
sti
or
jne
mov
test
psrlq
add
mov
out
mov
xchg
test
ljmp
adc
inc
jge
loopne
jmp
jno
xorb
xor
pop
adc
mov
sub
fisubrs
sbb
clc
rcll
dec
sti
pop
sbb
inc
jnp
imul
adc
sbb
sub
ljmp
adc
jns
negl
in
xor
movsl
mov
daa
clc
std
and
xchg
fisubrs
push
adc
push
mov
ficomps
test
popf
fdivrl
scas
sub
mov
sbb
jmp
xchg
jecxz
xor
outsl
mov
xor
or
mov
or
push
adc
lret
jg
add
cmp
in
into
pop
lret
push
ds
adc
mov
jge
dec
call
scas
inc
lds
insl
lret
push
push
popf
mov
fldcw
insl
pusha
inc
mov
xchg
sub
outsb
and
jg
lahf
mov
xchg
out
popl
inc
and
mov
dec
les
pop
cwtl
mov
pop
pop
or
adc
mov
outsl
pop
rcr
add
sbb
lods
cmp
mov
aam
cmpsb
jne
in
xchg
pop
cmc
outsb
xor
popa
mov
call
jne
lds
stc
test
jbe
lods
fidivs
add
aad
enter
and
vpsrad
je
ret
imul
pop
loop
fildll
jmp
lods
xchg
mov
das
loopne
adc
shll
or
push
adc
fcoml
adc
xchg
subb
adc
add
aad
pop
xchg
loope
std
lods
mov
pop
sbbb
fsubrs
cmp
xchg
insl
or
ss
cmp
or
or
push
push
shll
jnp
addr16
shrl
dec
xchg
rcll
dec
test
jge
sbb
sti
add
jno
xor
adc
and
mov
aad
movsb
sub
sub
jp
xor
les
leave
jg
repz
fmul
sbb
outsb
sbb
imulb
loop
repz
add
mov
sti
pop
int
push
cmc
xor
add
mov
test
pop
dec
adcb
dec
das
cmp
adc
sub
es
xchg
outsb
push
rolb
jle
mov
imul
jecxz
shrb
mov
jb
lcall
jl
mov
je
loope
test
inc
lock
movsl
daa
hlt
mov
mov
add
ror
std
addr16
sbb
mov
js
add
jg
add
jmp
in
add
pop
js
into
test
sub
adc
mov
aas
pushf
jmp
fbstp
xor
jbe
push
mov
and
rcrl
adc
addl
out
pushf
ja
aas
push
addr16
mov
and
lahf
loope
pop
cmpsb
test
xor
jp
mov
divb
or
test
call
mov
stos
andl
in
adc
test
les
jns
inc
add
adc
mov
jb
push
movsb
xlat
and
movsl
test
sbb
add
inc
repnz
and
loope
cli
psubb
push
or
popf
stos
mov
jb
cmpsb
stos
fiadds
jb
cli
adc
jo
sub
movsl
rcrl
jb
inc
stos
cli
stos
cwtl
pop
fidivrl
dec
lds
arpl
rorb
frstor
outsl
and
rol
xor
add
sub
fstp
divb
nop
jno
mov
dec
sub
lret
inc
adc
jl
std
addr16
out
cmp
push
imul
in
mov
mov
jb
xor
or
jns
mov
lods
andb
mov
mov
cmp
sub
insb
test
repnz
insb
sub
or
add
out
sbb
jae
incl
add
push
movsl
mov
mov
xchg
inc
lds
jnp
or
jge
xchg
sub
xor
lods
dec
sub
mov
jp
sti
mov
add
jge
or
mov
inc
add
mov
lahf
cmpsl
adc
addl
pop
and
and
inc
pop
dec
fcomps
dec
rorl
xor
cwtl
mov
xor
std
xor
repnz
fs
pop
outsb
enter
rcll
fimull
sub
or
arpl
adc
loopne
jne
sub
faddl
xchg
into
dec
push
fcmovne
cmc
insb
clc
orl
jo
shrb
mov
add
popa
loopne
test
push
imul
or
mov
pop
dec
push
inc
xchg
test
shll
sbb
inc
pop
loop
inc
mov
jb
add
sbb
pop
fwait
xchg
mov
rolb
mov
pushf
jb
mov
fucom
jmp
inc
sub
add
aaa
fidivl
imul
mov
cmp
jle
popf
push
in
push
inc
adc
inc
fcompl
xchg
cmp
xor
mov
jp
stc
pop
leave
lods
ret
jb
imul
cmp
adc
mov
and
jb
add
add
sti
cmp
insl
push
ror
xchg
cli
fisttpl
into
xlat
jecxz
mov
pop
sbb
jae
mov
aas
stos
jp
fwait
shll
jno
mov
sbb
xchg
aas
mov
dec
into
fbld
xchg
jae
inc
out
mov
bnd
jge
inc
jno
xchg
or
jns
jnp
cld
inc
mov
jp
shr
into
out
sub
pop
scas
scas
xchg
push
testb
jle
add
hlt
pop
pop
mov
outsl
daa
sub
adc
mov
mov
and
bnd
mov
cwtl
mov
test
and
push
bound
fucomi
pop
loopne
leave
pop
adc
popf
bound
sub
sbb
mov
pop
mov
mov
pop
loope
ret
add
inc
les
xor
jmp
mov
cmc
mov
and
cmp
lea
pop
js
aaa
pop
lret
push
clc
ljmp
addr16
push
xchg
addr16
notl
mov
decl
cmp
loopne
push
and
pop
add
insb
jg
test
clc
jnp
andb
iret
cmp
bound
jne
xor
insl
mov
loope
imulb
push
mov
jmp
repz
jg
add
out
dec
jnp
or
clc
push
xor
mov
and
xlat
adc
test
loopne
aaa
add
sub
test
or
test
outsb
mov
cmp
mov
jle
or
push
or
mov
mov
ds
push
xor
in
in
push
test
sbb
std
dec
ds
es
mov
inc
jmp
imul
mov
clc
outsb
cmp
clc
add
popa
xlat
pop
popa
and
push
sbb
push
push
mov
jo
out
dec
aas
and
fwait
jmp
inc
fcompl
iret
dec
or
addr16
lahf
xchg
rcrl
out
ds
out
pop
adc
push
or
test
rol
xorl
js
add
mov
mov
mov
sbb
dec
xor
sbb
imul
add
cld
fisubs
pop
mull
out
xchg
inc
xchg
cmpsl
xchg
push
xchg
ja
xlat
pop
movl
pop
xlat
pop
aaa
mull
out
xchg
inc
xchg
cmpsl
xchg
push
xchg
ja
xlat
pop
movl
pop
xlat
pop
aaa
mull
out
xchg
inc
xchg
cmpsl
xchg
push
xchg
ja
xlat
pop
movl
push
xlat
push
mull
out
xchg
inc
xchg
cmpsl
xchg
push
xchg
sbb
lahf
dec
clc
or
sbb
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
in
push
std
fs
fisttpll
adc
push
popf
les
jl
pop
hlt
dec
test
mov
inc
in
push
std
fs
fldl
xor
les
jge
dec
hlt
pop
test
aas
movsb
or
push
in
aad
lds
adc
and
xor
les
pop
xchg
xor
sub
testl
mov
push
mov
scas
outsb
iret
jb
mov
xor
cmpsl
pop
pmullw
iret
in
call
lea
fstl
bound
xchg
cli
subl
mov
movsl
std
dec
in
jno
xchg
lods
cld
sbbb
xchg
pop
mov
mov
mov
rorl
add
xor
mov
pop
sbb
les
jp
cld
mov
mov
xor
insl
pop
enter
cmc
aam
sub
or
xchg
sub
mov
xor
aad
fisttpl
pop
sbb
mov
mov
paddusb
sbb
push
in
fs
fldl
xor
les
gs
hlt
inc
test
mov
add
cmp
mov
inc
loope
clc
test
sarb
dec
cwtl
cmp
dec
std
aas
loopne
loopne
inc
test
xchg
xor
adc
and
xor
mov
sub
cmp
sub
test
adc
and
xor
les
jge
dec
hlt
pop
test
mov
inc
in
push
std
fs
fldl
xor
les
jge
dec
hlt
pop
test
mov
inc
in
icebp
out
fisttps
es
subb
cmpsb
or
inc
sub
jo
mov
mov
lcall
jnp
movsl
bound
scas
add
pop
and
cmpsl
out
std
or
xchg
add
jge
or
int
lahf
jne
add
popa
mov
hlt
std
mov
mov
out
ss
cmp
push
pop
aaa
pop
outsb
jge
xchg
pop
push
mov
cli
jge
repnz
jno
sbb
leave
and
add
xor
inc
mov
mov
icebp
xchg
loope
aam
xchg
roll
iret
xchg
das
shll
mov
repz
mov
adc
xor
mov
lahf
loopne
and
dec
in
repz
cmp
or
inc
sti
repnz
lret
sbb
mov
out
lods
ljmp
jns
hlt
shrb
and
and
jl
cs
std
dec
fyl2x
scas
popf
add
movsb
add
fs
repnz
into
cltd
sub
sarl
std
imul
or
pop
push
ret
aad
jb
sarl
cmp
mov
sbb
pop
adc
sbb
testl
loope
jle
sti
pop
add
pop
inc
icebp
fs
mov
xlat
xchg
cmc
pop
mov
rcrb
orb
adc
inc
pusha
cmp
js
jmp
mov
movsl
in
pop
cltd
dec
inc
jle
push
mov
mov
cmc
scas
add
stc
in
lret
addr16
mov
gs
mov
lea
jns
add
pop
fwait
xlat
mov
mov
test
ljmp
or
pop
loope
sbb
dec
inc
sbb
xchg
lock
ds
inc
sbbl
xlat
mov
or
fwait
in
stos
xchg
repnz
and
and
xor
addl
push
mov
lock
mov
stos
dec
jp
fadd
popa
je
stc
inc
lea
imull
test
ss
lds
int
popa
sbb
add
lahf
ret
cmp
lock
pop
cltd
fsub
push
cmp
ret
cmp
je
xor
sbb
ror
dec
mov
adc
insb
jle
cmp
mov
pop
sub
xor
aaa
jnp
pop
mov
arpl
xor
mul
cmp
push
decb
or
pop
xor
test
gs
xchg
sub
and
fs
jge
inc
jae
ja
dec
in
mov
subb
sub
out
xlat
jmp
rorb
mov
jp
popf
sub
into
xchg
ja
jecxz
in
sub
dec
cs
push
xor
iret
mov
stos
movsl
cmp
jno
mov
mov
push
xchg
popf
or
call
mov
enter
fdivrp
adc
mov
mov
imul
and
clc
pop
sub
xchg
icebp
mov
insl
std
push
aad
mov
jp
sbb
xchg
mov
js
cmp
lods
jmp
jnp
mov
mov
push
mov
or
xchg
out
mov
arpl
mov
xchg
rcll
pushl
or
adc
lret
xlat
scas
iret
sbb
cmpsb
loopne
testb
ficomps
jg
ficomps
lret
or
pop
or
mov
repz
adc
inc
sub
call
out
xor
push
xor
push
insb
aam
sahf
ret
fmull
cmp
mov
mov
cld
cld
out
xor
add
cmp
mov
push
ret
sbb
cmpsl
in
pushf
pushf
jl
les
ret
movsl
or
fisubrs
sbb
fldz
push
das
add
scas
ds
popa
inc
out
xchg
das
loopne
push
adc
push
js
stc
call
je
xor
adc
pop
mov
into
arpl
pop
mov
mov
pop
mov
pop
xlat
xchg
pop
xchg
ja
scas
in
push
jmp
rol
das
leave
out
mov
mov
pusha
fsubr
mov
cld
aaa
jg
mov
push
push
add
popa
adc
mov
add
fisubl
clc
in
add
sbb
dec
push
inc
sub
mov
ljmp
mov
fwait
xor
jns
xor
mov
push
inc
dec
cmpsl
inc
sbb
cmp
mov
push
and
mov
dec
aad
push
inc
imul
mov
and
adc
dec
adc
dec
icebp
loop
or
pushf
push
ja
xchg
jp
lret
dec
dec
sbb
out
fsubrs
icebp
xchg
sub
shll
jmp
cltd
sahf
add
add
ss
jno
pop
cltd
fimuls
shll
mov
js
aam
out
sbb
dec
icebp
cmp
mov
push
lock
shr
inc
jmp
dec
ret
xchg
jae
cli
jge
repnz
cld
std
cmc
jl
xchg
xchg
mov
sub
mov
repz
push
push
mov
loop
ret
sub
in
push
push
rcrb
jns
ljmp
lea
stos
in
xchg
mov
mov
fistl
ficoml
jbe
ret
xchg
mov
es
mov
jo
shll
push
cld
mov
or
sbb
or
rcrb
repz
add
clc
lea
adc
mov
jp
ficomps
xorb
popl
mov
stos
pop
shr
push
gs
adc
cmp
mov
imul
jae
cmp
les
dec
jecxz
inc
cwtl
push
mov
cli
jp
pop
jns
mov
push
add
mov
mov
clc
nop
cmpsl
fsubr
xchg
lods
mov
dec
dec
mov
add
outsl
mov
push
xor
mov
out
inc
pop
insb
jle
movsl
stos
out
insb
pop
jb
xchg
in
mov
pop
adc
inc
lods
push
lcall
imul
fnstcw
xlat
dec
lock
sarl
sub
push
out
inc
sti
dec
xchg
cli
mov
leave
pushf
inc
jne
daa
adc
dec
xor
add
lret
or
pop
jmp
dec
xchg
js
popa
inc
xchg
sbb
out
xchg
push
add
mov
pop
inc
xor
lea
sub
call
jbe
mov
xor
push
add
add
js
jp
jae
jge
es
stos
dec
inc
es
inc
add
icebp
ss
cmp
out
or
movsb
mov
aaa
inc
mov
aam
and
andb
arpl
lods
or
xchg
pushf
jle
cmp
call
insb
lret
cs
je
push
pop
sbb
popa
dec
xor
lea
mov
leave
inc
cwtl
sub
insl
pop
jge
dec
jmp
daa
jo,pt
push
leave
popf
adc
xchg
movsl
jb
and
sbb
gs
xchg
daa
xlat
jno
jl
in
dec
jge
push
inc
les
mov
mov
call
cltd
xor
in
addl
add
sub
jb
pushl
pop
mov
sbb
dec
lcall
scas
ss
or
adc
outsb
jnp
push
cmp
xor
and
sarb
int
add
and
xor
inc
jnp
mov
adc
jbe
fiaddl
sbb
js
jp
inc
adc
push
jge
lea
and
hlt
cmpsb
xchg
adc
add
pusha
outsb
into
out
daa
cmp
outsl
negl
mov
add
xor
in
dec
push
dec
mov
jns
fcmove
cmp
aaa
scas
ficomps
mov
outsl
dec
fstl
rcrl
cmpl
mov
push
mov
movsb
mov
cmp
push
decb
in
fimuls
and
fildl
push
fidivs
test
add
sahf
adc
adc
sub
les
cmp
sti
dec
sarb
xor
push
popa
lret
pop
ret
and
mov
test
bound
jge
orl
xor
inc
movsl
test
out
mov
jl
ds
in
xor
test
aad
lods
je
pop
dec
add
xor
sahf
mov
jo
mov
enter
inc
dec
jne
push
inc
mov
sub
cmp
aam
push
push
push
mov
mov
push
push
and
int3
test
aam
push
jp
sub
cmpb
popl
pusha
pop
das
int
stos
add
fiadds
push
inc
test
and
and
aas
in
jns
add
or
fnsave
sahf
lret
not
repz
adc
jecxz
test
movsl
loope
mov
ljmp
lret
dec
sbb
loopne
and
clc
in
sub
pushf
ss
jle
jmp
fwait
es
cmpsl
jle
mov
repz
xchg
cmp
push
xor
sub
jns
loope
fdivrl
xchg
or
scas
neg
ret
mov
sub
cmp
sbb
adc
data16
push
ja
les
cmpsb
movsl
dec
xlat
and
xor
lcall
je
ja
addr16
xor
push
iret
addb
outsb
cmp
nop
hlt
or
add
jo
mov
pop
call
lock
cld
into
gs
add
les
xor
push
lret
xchg
dec
adc
aaa
push
xchg
lcall
test
mov
ss
cmpsb
xor
mov
inc
push
sbb
in
scas
test
xor
mov
insb
pusha
sbb
idivl
movaps
dec
aam
mov
call
movsb
cmp
push
in
or
hlt
test
mov
lock
mov
call
mov
stc
or
or
lahf
out
mov
add
pushf
clc
add
jb
adc
push
hlt
sub
sub
repz
insb
lahf
stos
imul
out
stc
sbb
fs
mov
or
pop
pop
or
dec
mov
inc
xor
fwait
sub
and
xor
cltd
shl
sbb
cwtl
sub
push
push
outsl
push
add
mov
fidivrs
dec
push
jns
test
mov
jnp
pop
jno
insl
or
out
sbb
pusha
repnz
inc
les
ficomps
stc
pop
insl
mov
fimull
cld
xchg
cs
and
aad
push
jge
mov
add
add
loop
xor
je
out
sub
inc
insl
cmp
iret
shlb
push
fadds
sbbl
and
mov
xchg
or
rorl
push
cmp
repz
adc
loope
push
sbb
mov
inc
into
and
mov
mov
or
jns
inc
mov
ret
xchg
sub
mov
pop
fdivp
aaa
mov
js
cli
sub
fistpll
out
dec
daa
push
jmp
xchg
jp
rcll
jl
dec
out
repnz
mov
aad
stos
icebp
and
cmp
jnp
or
cmp
jmp
or
or
sub
xchg
ds
cmp
xchg
push
or
xor
adc
or
sub
or
testl
push
je
and
imul
adcl
out
or
push
cs
gs
xchg
push
out
and
cmp
xor
ds
setg
in
xlat
and
push
mov
xchg
nop
sub
ftst
lods
jl
icebp
lahf
cmp
sti
xchg
enter
xor
sub
aam
adc
pop
mov
pop
and
mov
rorl
xor
dec
dec
adc
imul
pop
fs
add
xchg
xor
fs
imul
push
mov
adc
add
test
mov
jecxz
jle
ret
dec
mov
xchg
or
mov
popa
ret
nop
push
xor
lret
push
add
call
es
pop
ds
or
sub
mov
out
mov
loope
ror
subl
jge
sarb
pop
sbb
sbb
movsl
repz
sbb
push
in
repnz
cmp
imul
cltd
std
hlt
in
mov
adc
sbb
mov
push
mov
mov
lret
mov
subb
sti
movsb
or
sahf
xor
loopne
and
or
jp
popf
xchg
or
jno
jge
push
int3
mov
pop
cmp
fdivrs
aad
sti
push
movsl
add
scas
cmp
pop
fidivrs
jg
out
imul
dec
lret
addr16
pop
jge
int
arpl
dec
sub
rcl
jb
jnp
mov
mov
fisubs
out
int
int3
in
xorl
fistl
inc
xchg
jecxz
inc
push
sbb
push
sub
mov
add
mov
mov
flds
push
adc
fisttps
nop
xlat
jns
xchg
rorl
ret
cmpsl
imul
lea
sub
mov
jge
scas
add
bound
aas
or
cmp
push
in
sub
jne
add
push
inc
lock
xchg
push
test
adc
xor
mov
add
dec
aam
lret
push
pop
push
ds
sub
xchg
movsl
mov
dec
movsb
push
clc
aad
xchg
js
jle
scas
sub
sbb
xchg
fs
out
rep
pop
sub
lock
fs
pop
mov
icebp
inc
pusha
in
mov
leave
adc
shr
jge
shr
inc
out
push
out
pusha
xor
inc
addr16
mov
jae
es
lods
and
or
cli
xor
ljmp
in
cmp
popl
push
outsb
jo
int
pusha
icebp
sbb
inc
mov
push
mov
in
mov
jbe
lock
lods
aaa
sub
leave
cltd
sub
mov
mov
jmp
rcrl
sarl
pop
out
adc
inc
test
dec
lcall
xchg
push
add
mov
aas
inc
loop
adcl
push
inc
scas
and
ret
loopne
loope
cmp
stos
les
sub
movsb
mov
mov
hlt
fstl
test
xchg
cmp
jecxz
mov
mov
in
enter
inc
adc
add
or
add
lahf
push
dec
das
insb
xor
fs
push
jno
pop
mov
add
and
and
inc
mov
mov
push
sbb
testl
mov
xchg
or
or
subl
clc
repz
fldcw
arpl
cli
dec
iret
sub
cmp
pushf
fcmovne
adc
lret
push
loopne
sub
fdivrs
loope
fnstenv
jno
popa
mov
call
adc
lea
inc
shrb
rcll
dec
dec
repnz
or
js
add
loop
pop
mov
sarl
dec
jnp
sbb
lea
ljmp
push
out
pop
mov
add
xlat
data16
dec
fidivl
and
int
loope
les
mov
dec
pop
lea
fsubr
mov
in
and
int3
push
imul
xchg
ljmp
sub
jp
or
sub
jne
or
stos
pop
popa
sbb
pop
or
ljmp
jl
testb
xchg
jecxz
insb
push
pop
mov
repz
xchg
adc
sarl
stos
mov
lcall
in
enter
lock
adc
lcall
inc
mov
and
data16
ss
mov
orb
sub
int
sub
les
ja
insl
out
mov
dec
mov
mov
xchg
or
and
push
mov
addr16
jmp
mov
pop
leave
lds
sbb
lds
mov
in
push
in
pop
js
in
lods
bound
jbe
ss
inc
scas
mov
fwait
cli
push
in
xchg
push
jb
pop
or
mov
or
push
adc
fnstenv
dec
movsb
scas
jecxz
push
test
inc
pop
test
dec
jb
loop
lea
les
or
jbe
sub
jno
popa
loop
push
stos
imul
mull
pop
sbb
push
pop
or
incl
pop
test
movsb
inc
shll
sbb
mov
push
out
dec
fmull
ljmp
loop
xchg
sbb
xor
in
ficoml
jb
dec
inc
outsl
cmp
fdiv
sbb
cmp
loopne
pop
lahf
out
xchg
lret
xchg
adc
dec
out
pusha
add
xor
or
jl
lret
sbbb
xlat
popa
jbe
and
jle
mov
adc
out
adc
fists
aam
decb
je
pop
popa
gs
es
clc
gs
ret
xchg
stc
lcall
add
stc
in
push
jmp
pop
out
sub
std
pop
aaa
cmp
push
dec
jmp
add
inc
jo
xor
test
xchg
test
fisttps
cmp
or
add
or
call
mov
shrb
adc
xor
and
scas
scas
cmpsb
add
lret
push
dec
and
in
mov
and
sbb
inc
dec
lock
and
xchg
and
xor
aaa
cmp
call
filds
mov
mov
xor
adcl
mov
insb
clc
sub
dec
pop
mov
jnp,pn
cwtl
in
add
mov
dec
xchg
data16
imul
mov
xor
pop
scas
push
das
pop
popf
lods
sbb
hlt
int3
imul
and
push
adc
xor
pushw
inc
dec
pop
js
add
dec
dec
cltd
daa
popa
out
out
cli
xorl
mov
inc
lds
adc
repz
cmp
test
xor
pop
ret
dec
in
outsl
pusha
enter
leave
bound
mov
mov
sti
gs
bound
scas
pusha
aam
mov
rolb
imul
push
sbb
mov
jns
in
loopne
jnp
and
jne
ds
aas
mov
pop
rol
hlt
addr16
or
cmp
repz
repnz
sbb
pushf
pop
xor
pop
loop
xchg
aad
fnclex
imul
mov
jle
sarb
int
aam
cs
cmc
jae
jp
loopne
push
inc
out
xchg
outsb
adc
fbstp
adc
shrb
data16
and
cmp
pusha
push
in
cmp
mov
cmp
pop
movsb
aas
test
xchg
xchg
xchg
xchg
cltd
push
sub
rolb
mov
outsl
gs
je
adc
addr16
test
inc
lret
call
arpl
add
or
shlb
cmp
mov
and
jl
xchg
rolb
int3
add
sub
push
cmp
loope
mov
loopne
iret
inc
out
paddusw
add
cmp
sbbl
in
lock
ds
mov
aaa
xor
sbb
out
ds
lods
inc
les
pop
call
lret
jo
dec
out
add
hlt
movsb
addr16
mov
mov
mov
lret
mulb
push
fnsave
and
or
mov
ss
sub
shll
fcmovnu
xchg
jae
movsb
sub
push
mov
mov
repnz
ret
sub
jb
or
jge
rclb
push
cmp
mov
push
test
push
test
fsubr
dec
test
dec
leave
iret
sbb
push
out
or
mov
mov
or
push
pop
icebp
mov
in
cs
adc
mov
neg
mov
or
xor
sub
push
xchg
or
pop
adc
rorl
xchg
sub
adc
das
add
xor
not
or
int3
inc
icebp
adc
or
xchg
inc
cs
aam
push
in
xor
scas
sbb
inc
push
mov
mov
andb
add
sub
add
mov
gs
mov
xchg
mov
sub
jbe
and
xchg
sub
mov
cmp
jb
sub
cmp
inc
insl
mov
pushf
idiv
in
mov
test
aaa
mov
mov
xor
xor
fistps
jl
mov
inc
cmpl
loope,pn
rcrl
leave
std
adc
dec
aam
into
aam
xchg
ja
fldt
rclb
sbb
fdivrp
or
je
loope
cmp
sub
mov
jo
and
lods
mov
mov
out
ljmp
jbe
jb
enter
mov
fsubl
and
pop
sbb
test
stos
and
fsubl
in
fildll
in
cmc
push
xchg
shrl
in
popa
fwait
inc
sub
pop
test
pop
mov
dec
cmp
inc
cli
lods
pop
insl
mov
cli
pop
xchg
daa
lret
sbbl
push
cmp
ja
repnz
lods
or
jo
adc
test
gs
push
push
or
sbb
arpl
adc
je
cmp
xchg
fldl
xor
les
jge
dec
hlt
pop
test
mov
inc
in
push
std
fs
fldl
xor
les
jge
dec
hlt
pop
test
mov
inc
in
push
std
fs
fldl
xor
les
jge
dec
hlt
pop
test
mov
inc
jmp
je
add
adc
and
xor
les
xlat
dec
dec
hlt
sub
movsl
sbb
pop
jb
bound
mov
in
mov
or
or
cmp
sub
pop
pop
leave
das
jl
insb
fcomps
lods
fcompl
in
inc
sbb
insb
or
dec
das
ds
insb
pushf
mov
mov
xchg
mov
test
dec
mov
or
pop
or
sbb
pop
push
push
insb
mov
rcll
das
pushf
es
call
cmpsb
imul
scas
iret
lret
out
push
dec
pop
pusha
xor
jbe
xchg
mov
mov
ret
sub
cmp
cmpsb
dec
cmp
sbb
dec
loope
repz
cld
adc
pop
pop
mov
mov
pshufw
mov
inc
jae
adc
aaa
pusha
outsl
ret
and
dec
mov
adc
das
jl
jae
cmp
fnstcw
loopne
pop
jp
jg
movsl
dec
push
mov
add
das
or
jae
fidivl
xor
xchg
or
imul
mov
push
fisttps
faddl
in
push
sbb
or
cmp
sub
pop
pop
dec
das
jl
add
mov
fwait
repnz
lods
mov
mov
sbb
cmp
pop
sub
mov
test
mov
in
dec
fs
jns
pop
or
aas
insb
daa
pop
sbb
cmp
aad
fisttps
fcompl
in
dec
sbb
or
cmp
sub
pop
pop
dec
das
jl
insb
iret
pushf
fisttps
fcompl
in
dec
sbb
or
cmp
sub
pop
pop
dec
das
jl
insb
iret
pushf
sbb
mov
xchg
jmp
adc
sub
sub
xchg
movsl
dec
jmp
and
xchg
mov
iret
lea
mov
ss
lea
hlt
dec
push
push
mulb
imul
pop
arpl
sub
mov
push
shlb
push
scas
mov
nop
push
mov
cwtl
jb
jg
cltd
inc
push
shll
scas
arpl
xchg
and
jmp
push
push
psubw
adc
or
or
dec
pop
lock
dec
repnz
movsb
std
sbb
mov
xor
jb
int3
or
inc
pop
inc
inc
pop
test
lods
xchg
cmp
fsubrl
adcl
icebp
sbb
gs
sub
or
filds
sub
stos
out
push
test
sbb
fimuls
cwtl
pop
lcall
or
daa
loopne
xchg
and
mov
mov
lods
or
mov
aam
clc
jns
and
aaa
insb
mov
jg,pn
inc
cmpsl
movsb
inc
in
popa
leave
xor
loope
iret
imul
pop
aas
pop
sbb
sbb
divl
sub
arpl
aam
inc
sub
imul
sub
sbb
dec
adc
add
imul
jmp
pop
idivl
std
jmp
add
adc
enter
pop
lds
sub
mov
and
mov
push
pop
fs
fwait
push
xor
or
or
aad
and
bound
imul
or
test
cltd
cltd
mov
sahf
leave
inc
imul
or
insl
aaa
dec
flds
push
inc
sar
sbb
xchg
rcll
icebp
dec
push
jae
inc
push
and
mov
adc
inc
ljmp
enter
ficomps
gs
xor
out
pop
arpl
loop
push
sub
aad
cmp
push
ss
mov
pop
rclb
inc
mov
enter
scas
jne
mov
add
and
sbb
xor
sbb
and
addr16
cmova
or
cwtl
lea
insl
cltd
fcmovnu
pop
add
imul
pop
cmp
dec
dec
pusha
flds
cmp
clc
lods
imul
cmp
icebp
cmp
mov
fistps
pop
movsl
xor
out
push
in
dec
inc
jbe
cmp
push
sbb
jge
jp
test
xchg
cmp
aaa
xchg
add
mul
xchg
push
push
pop
cmp
test
push
cwtl
cmp
add
sub
pop
lock
mov
push
push
push
lods
cli
data16
push
push
fmulp
stos
fwait
push
cld
push
and
int
fs
loop
inc
inc
les
mov
fnstenv
clc
adc
push
inc
sub
lods
ss
lret
xor
jmp
xchg
outsb
and
push
push
fs
inc
and
push
rcrl
ja
xor
xchg
imul
bound
push
sub
jbe
adc
and
mov
mov
pop
cmp
outsl
xchg
jle
jge
sbb
iret
jg
iret
jl
into
jo
pmulhuw
gs
mov
sub
testb
mov
int
out
mov
ret
ds
push
and
mov
pop
outsl
loop
and
or
sahf
mov
cs
pop
int
mov
jle
nop
push
fdivrp
jo
jmp
aaa
mov
iret
sbb
push
and
sub
gs
movl
scas
out
outsb
js
mov
ja
jns
and
cmp
xchg
sahf
test
movsb
cmpsl
cltd
sbb
add
clc
loopne
cmc
push
adc
std
sub
jne
push
andl
pxor
test
jge
outsl
xchg
push
in
inc
ljmp
adc
repz
divl
shrb
jne
repz
jb
xchg
mov
in
jo
or
repz
rolb
aam
xlat
jbe
mov
and
xchg
hlt
outsl
mov
add
aas
ja
xor
and
inc
push
add
dec
xchg
mov
data16
test
in
mov
fcomi
sbb
ljmp
lcall
lahf
js
xchg
cmpsl
sub
jmp
data16
sub
push
loopne,pt
lock
pushf
jle
mov
jg
and
push
mov
imul
mov
insl
mov
test
dec
cmp
ja
jno
push
test
jne
pop
insb
sarb
mov
push
or
xchg
jb
pop
mov
xor
xchg
jne
clc
jle
sarl
sbb
ja
mov
push
add
lods
jae
pop
mov
cmpsb
cmp
jmp
pop
in
add
ret
push
pop
and
cmovo
popf
and
faddp
pop
lahf
mov
pop
jecxz
shlb
mov
stos
lods
sub
sbb
mov
imul
inc
ds
scas
leave
into
lret
scas
xchg
adc
test
je
addl
push
adc
add
pop
sahf
xchg
rorl
pop
out
sbb
xor
add
int3
cmc
ljmp
adc
jbe
xchg
mov
test
jecxz
and
xor
xchg
mov
stos
adc
and
lahf
rorl
jmp
cltd
sbb
or
xor
and
shrl
les
cmp
push
pushl
imul
insl
testb
or
repnz
inc
add
in
call
add
or
imul
jae
aad
sub
outsl
inc
cli
andb
daa
sti
inc
xchg
mov
push
mulb
mov
inc
cmp
jecxz
inc
xchg
jo
stos
mov
sub
cmp
xchg
adcl
sbb
repz
mov
xchg
cmpxchg
adc
mov
inc
mov
xchg
in
mov
int3
fstpt
mov
xor
xchg
popf
or
fcomip
jbe
xchg
fnstsw
loopne
mov
outsb
sbb
popa
sahf
lahf
clc
mov
inc
mov
outsl
mov
test
clc
mov
or
lock
movntps
push
fs
enter
dec
xchg
sub
ret
mov
loopne
inc
inc
popa
loopne
mov
pop
xor
push
pop
pop
mov
inc
and
dec
orb
imul
or
jb
lcall
and
aad
std
pop
or
cmp
pop
aad
inc
mov
and
scas
mov
xchg
or
mov
lock
mov
jnp
orb
stos
out
pop
out
into
das
int
int
arpl
in
int3
jns
sbb
add
ds
lds
data16
adc
mov
call
jo
jecxz
aam
mov
push
sub
xchg
loop
mov
lahf
xor
add
mov
jge
inc
push
xchg
jbe
out
loop
sbb
iret
jge
mov
ss
jb
add
mov
icebp
shrb
and
ficoml
cmp
xchg
mov
cmp
fstpt
int3
push
icebp
mov
outsl
mov
xchg
movsl
out
test
into
adc
rcrb
ret
fsts
fcomp
daa
adc
call
mov
mov
jg
pop
test
mov
ljmp
xlat
test
popa
les
repnz
dec
cmpsl
pop
cli
add
stc
jnp
js
fisubs
pop
mov
dec
movsl
cwtl
sbb
cs
or
xchg
cmp
sarb
jecxz
mov
xlat
fldl
mov
out
sub
popf
xchg
mov
sti
jmp
inc
pop
movsl
mov
and
je
sbb
lods
sbb
cmp
mov
xor
pop
mov
xchg
test
cmpsl
push
sub
fadd
add
push
dec
int3
shlb
xor
inc
jbe
ja
or
mov
mov
jmp
mov
in
mov
ja
cmp
jp
test
imul
mov
bound
js
call
imul
jl
cltd
mov
lds
ror
hlt
jecxz
push
repz
fcoms
fisubrs
jge
nop
xchg
cmpb
add
outsb
push
jmp
stos
push
push
mov
jnp
push
xchg
xchg
addb
fs
mov
or
xchg
shlb
mov
mov
rcl
cli
sub
imul
xchg
xor
mov
arpl
sub
dec
and
pop
jno
sbb
sub
in
mov
push
and
shlb
loopne
fs
insl
ja
or
mov
sub
std
or
pop
test
mov
jb
mov
nop
mov
mov
shld
addl
xchg
adc
ret
inc
inc
xchg
inc
cld
sub
fcoms
or
pop
adc
jl
call
xchg
popa
aam
jnp
leave
fsubp
adc
jp
cltd
adc
sbb
jb
xchg
xchg
rolb
jle
push
stos
xchg
std
push
adc
jnp
jmp
xor
push
pop
sub
jnp
mov
lods
mov
dec
pop
movb
mov
lret
or
mov
inc
arpl
les
imul
iret
add
xor
sub
cli
add
dec
sbbl
loopne
jae
iret
xor
push
mov
xchg
mov
inc
stos
in
pop
sbb
movsl
addr16
push
clc
jno
das
sub
sub
jg
and
inc
xor
xchg
lods
sbbl
push
mov
jno
lahf
and
popl
add
jp
push
icebp
leave
and
push
addb
lret
pop
push
xchg
push
xor
imul
icebp
scas
pushf
sbb
data16
ljmp
add
test
aad
sub
divl
cmpsb
sub
cmpsb
push
addr16
js
mov
cwtl
pop
push
enter
add
rcrl
jmp
imul
push
jns
pushf
cmpl
inc
push
mov
hlt
popa
div
das
ljmp
lret
mov
es
mov
jmp
push
add
shrl
jg
scas
rorb
push
mov
cld
mov
or
push
mov
incl
mov
fnstcw
sbb
jp
nop
fstl
int
cmp
aad
dec
xorl
ficomps
pop
imull
ret
xor
cmp
arpl
mov
sbb
inc
mov
xorb
and
mov
fisttpll
and
sub
mov
outsb
and
loope
mov
xlat
xor
adc
aad
push
sahf
push
in
sti
stos
ret
mov
jnp
sub
stos
sbb
lret
loopne
out
repnz
jl
mov
fisubs
incb
or
js
lahf
addl
pop
inc
push
add
xchg
xchg
call
rcll
call
roll
push
into
or
lcall
cmp
jb
icebp
cltd
sub
aaa
lahf
pop
std
les
std
test
mov
inc
push
pop
test
in
divb
jbe
sub
daa
push
mov
dec
dec
in
inc
xchg
push
mov
std
fsubrl
dec
outsb
inc
or
out
gs
sub
aad
int
in
subl
loope
aad
shrb
push
and
aam
lods
lret
jne
push
sbb
stc
les
and
clc
ss
mov
mov
add
sbb
jae
imul
out
and
into
or
aas
mov
leave
adc
shl
mov
and
jecxz
xor
pop
mul
jmp
adc
dec
sub
stc
ret
or
lret
sub
lret
dec
rcl
ds
jne
xchg
rorl
inc
in
cmp
out
xchg
add
in
jb
dec
jbe
call
xlat
shlb
popf
stos
insb
adc
cmpps
lea
lds
flds
sbb
mov
aas
sub
sbb
lret
dec
pop
cmpsb
pop
lea
out
int
cmp
in
cld
in
xchg
add
popf
pop
cmc
or
jne
loop
mov
and
pushf
int3
pop
xchg
cmp
inc
insb
insb
outsb
inc
cmp
jae
orb
mov
sbb
mov
sbb
mov
ds
sarl
test
xchg
repnz
sahf
lock
cld
cmp
xorb
push
dec
adc
rorb
fwait
adc
and
push
and
jo
and
jg
push
dec
jb
adc
add
leave
rcr
push
mov
cli
and
es
stos
rcr
pop
js
lock
cmp
lret
ja
out
pop
lock
jne
rep
sbb
xor
and
push
outsb
push
dec
iret
dec
movsb
adc
lock
mov
pop
pop
inc
cwtl
mov
ja
nop
insl
jb
adc
xchg
and
and
xor
sbb
fildl
addl
imul
out
lds
dec
test
stos
imul
mov
movsb
xchg
lods
imul
lahf
sub
and
xor
int
and
mov
sub
int3
test
mov
popf
push
push
test
js
ficoml
mov
sbb
int3
cmp
int3
xor
pop
in
sbb
in
rorl
stos
dec
and
jmp
stos
lds
cmp
inc
jmp
icebp
or
add
cli
icebp
mov
dec
enter
adcb
lret
xor
jmp
rorb
test
addr16
inc
xor
lods
pusha
or
push
pop
sub
adc
mov
push
mov
pop
ret
jle
mov
push
push
das
cmpsb
jmp
mov
jb
and
test
add
ds
sbb
aam
in
notb
pop
and
scas
imul
cld
cs
shll
enter
add
adc
outsb
push
mov
lods
ret
add
mov
push
ret
in
jno
mov
arpl
inc
aas
scas
mov
inc
ss
pop
add
xor
aaa
xchg
mov
pushl
xchg
adc
pop
add
sub
dec
xchg
mov
lcall
push
sub
sahf
push
in
pop
jl
add
clc
movb
es
pop
sbb
sahf
mov
mov
ljmp
jmp
fistpll
sub
inc
mulb
cmc
jae
aam
sbb
mov
mov
lea
mov
jae
and
inc
cmpsl
or
daa
and
push
les
lods
dec
add
jg
movsl
or
movsl
xor
or
in
repz
cltd
movd
jae
pop
add
jge
jnp
addr16
and
daa
dec
adc
sbb
sbb
stos
cs
into
inc
jg
mov
xchg
or
shl
daa
inc
or
repnz
ja
lret
mov
pop
push
xchg
out
push
sub
push
sbb
mov
inc
mov
sub
pop
ja
aad
xchg
xor
push
fstpt
mov
xchg
push
int3
push
aaa
and
ret
push
pop
sahf
in
adc
dec
popa
test
jo
scas
jl
test
decl
ljmp
inc
cmpsb
push
stos
insl
pop
int
scas
es
movsb
not
inc
mov
insb
push
shl
or
and
cwtl
sub
imul
mov
lods
and
xor
push
xor
pusha
out
add
mov
mov
gs
sbb
xchg
inc
mov
xchg
add
movsb
rcrl
fisttpll
mov
xor
adc
cmpsl
jge
or
loopne
push
insb
inc
in
divb
test
xor
jp
stos
and
inc
lret
jb
push
bound
divl
call
outsl
cli
jp
arpl
sahf
call
dec
mov
mov
mov
or
out
into
or
or
icebp
cli
jo
adc
xor
jle
test
mov
jno
rorb
fisttpll
out
push
jg
or
enter
jb
mov
test
imul
add
and
out
sahf
loopne
mov
ljmp
pop
cmp
xor
ja
adc
ret
add
stos
lahf
insb
testb
mov
mov
arpl
dec
stc
es
imull
dec
cmp
and
push
xchg
das
imul
into
sbbl
adc
sbb
xchg
add
fnstcw
in
shl
cli
dec
in
sub
add
pop
out
andb
aam
aas
into
enter
mov
xor
lea
jmp
stos
testb
pop
sub
scas
mov
jns
fs
out
push
jge
js
test
jnp
or
rcl
clc
mov
mov
mov
fistpl
and
mov
push
into
mov
rcrl
inc
dec
cmp
sbb
sbb
test
aaa
insb
test
mov
mov
mov
and
cmp
mov
adc
shl
mov
sti
outsb
xor
jecxz
faddl
loopne
and
add
fbld
std
push
and
dec
imul
mul
mov
mov
in
pushw
shll
jne
ficoml
mov
lods
out
int3
shr
mov
insb
les
add
xor
add
jns
jae
and
test
mov
xchg
sbb
push
adc
out
mov
ret
call
and
stos
mov
push
inc
jo
sbb
xchg
xchg
pop
sbb
fadds
xchg
scas
stos
nop
cltd
add
insl
cmp
out
fldcw
sbb
cmpsb
fcomps
stos
sbb
push
nop
mov
jo
mov
das
test
pop
xor
adcl
arpl
dec
movsl
call
insb
mov
push
and
mov
jne
pop
popf
test
jp
cmp
cmp
mov
out
ja
lret
das
stos
aad
dec
jle
cwtl
rcll
or
mov
add
pop
sub
push
or
loop
mov
mov
scas
mov
in
jnp
mov
imul
sbb
movsl
movsl
xor
inc
enter
mov
mov
into
ret
aas
push
fcmovnu
call
or
pop
cwtl
mov
cmp
adc
add
mov
shlb
imul
lods
mov
ficomps
inc
ljmp
dec
push
or
pop
cmpsb
loopne
ret
jb
ds
push
xchg
xchg
jl,pn
bound
dec
sarb
sub
xor
mov
movsl
fdivs
cmp
and
push
in
push
mov
jmp
repz
add
adc
xchg
jb
jl
and
popf
out
dec
imul
sub
movsl
aad
aaa
cmp
sbb
sbb
mov
ja
cwtl
rcl
es
mov
dec
pop
call
in
push
adc
xchg
xor
div
mov
dec
xchg
cmpsl
sub
orb
jae
pandn
repnz
scas
mov
jae
dec
scas
cmpsb
repz
pop
pop
jnp
push
sbb
in
push
mov
sbb
loopne
add
aaa
mov
shl
lods
outsl
and
lods
pop
lock
mov
xchg
or
popa
mov
mov
loope
in
rolb
lods
adc
sub
sti
pop
dec
stos
xchg
and
loop
int3
aas
sub
mov
mov
in
cmpsl
jo
and
mov
mov
cltd
addr16
cmp
lock
rolb
out
rcr
mov
cmpsl
jo
pusha
sub
es
aas
mov
mov
dec
rclb
enter
mov
mov
or
cmp
inc
fsubrs
xchg
rcrl
enter
and
movsb
aad
add
pop
loop
cmp
mov
ror
in
pop
and
xor
and
lods
xorl
adc
or
jno
add
xlat
stc
daa
push
cmp
jecxz
ja
cld
lahf
mov
pop
test
ds
mov
jno
js
rcl
mov
in
push
add
mov
addl
aam
jnp
sub
ss
cltd
jb
cmp
sysexit
int3
movsl
fldl
pop
and
mov
sub
xor
sti
or
andl
test
dec
mov
shl
jno
dec
insl
jmp
mov
cmc
cmp
into
popa
xor
js,pt
pop
out
mov
fcmove
and
out
test
lea
push
dec
repnz
call
lock
in
int
jmp
cli
jmp
sbb
call
aad
test
xchg
test
mov
mov
lahf
int3
scas
cld
mov
or
cmp
sub
pop
pop
dec
das
jl
insb
iret
pushf
fisttps
fcompl
in
dec
sbb
or
cmp
sub
pop
pop
dec
das
jl
insb
iret
pushf
fisttps
cmp
lods
fcompl
in
dec
pushf
pop
or
cmp
sub
pop
sbb
push
insb
sti
pushf
jmp
fnstcw
int3
das
cld
aas
in
mov
mov
pop
js
xchg
mov
add
mov
mov
xchg
cltd
in
lock
sbb
sub
adc
popa
pop
cltd
jnp
jnp
mov
xchg
lret
in
hlt
jmp
sti
cli
sbb
xor
or
adc
dec
imul
push
xchg
add
loop
aam
mov
adc
pop
je
inc
dec
aaa
xor
aaa
ss
loop
hlt
cmc
stos
xlat
int
cwtl
jmp
or
lea
arpl
inc
mov
dec
pop
or
pop
imul
fstpt
cmp
mov
xor
xlat
sti
lds
dec
sub
test
je
addr16
pop
or
pop
or
pop
and
mov
dec
xchg
cmpsl
mov
jnp
mov
xchg
xor
fcmovb
adc
cli
pop
andb
adc
loopne
jnp
dec
es
imul
cmc
cmpsb
add
frstor
in
in
push
pop
popa
xchg
pop
imul
pop
jnp
in
icebp
inc
inc
xor
flds
sbb
fs
shrb
push
or
xor
jnp
inc
sub
xchg
fsub
lret
hlt
jmp
loop
adc
pushf
xor
and
push
pop
inc
lcall
fcmovne
call
mov
xchg
or
inc
pop
mov
sbb
xor
cmp
test
cmpsb
jmp
test
dec
inc
jle
sub
and
sub
je
and
daa
out
xlat
notl
sar
subl
aam
and
xor
add
adc
fs
je
inc
jnp
mov
xchg
lret
in
hlt
jmp
sti
aam
and
xor
add
adc
fs
je
inc
jnp
mov
jp
cmpl
sub
dec
xchg
xorb
adc
cmpsl
push
dec
mov
popf
outsl
mov
sarb
jae
arpl
sbb
mov
fidivrs
test
cmp
jg
dec
fcmovnb
mov
pop
mov
jge
stc
or
xchg
fcomip
xor
das
stc
dec
outsl
jnp
in
xchg
inc
movsb
insl
lret
adc
lcall
pushf
push
test
jle
mov
push
mov
xchg
mov
out
add
addr16
lock
pop
inc
inc
fwait
leave
cmc
clc
shll
sub
xchg
in
push
ljmp
cmp
int3
jne
dec
aad
out
push
xchg
xlat
repnz
jle
jp
imul
mov
push
and
xchg
stc
faddl
jbe
jo
inc
faddl
lods
jne
rcr
or
pop
xor
cmp
pop
lret
outsb
test
ja
or
mov
mov
idivb
cmc
add
push
cmp
adc
push
mov
andl
and
mov
push
pusha
gs
pop
xchg
fsubl
xchg
ret
or
pop
mov
xchg
iret
sarb
pop
ss
mov
int
and
mov
jne
add
insl
negb
pop
fcoms
jge
push
adc
inc
stc
pop
popf
or
sbb
gs
sahf
jmp
lds
pop
push
fsubrs
cmp
mov
popa
xchg
pop
add
fildll
jge
in
fs
add
push
jns
and
inc
negb
pop
push
loope
lods
pop
pushf
lods
xchg
in
sub
scas
cwtl
push
push
mov
in
lock
mov
mov
andl
lea
mov
mov
adc
lcall
cmc
push
ss
cltd
mov
lea
sub
xchg
aas
aam
mov
xchg
push
adc
lcall
loope
cmp
popa
mov
std
push
call
cmc
mov
rorl
call
call
dec
pop
insb
cmp
das
sbb
enter
xchg
in
js
jl
adc
and
insb
mov
icebp
insb
js
arpl
cmpsl
push
inc
dec
pop
cli
push
adc
push
out
movsb
mov
in
ret
pop
shrl
loope
dec
mov
aad
dec
imul
jl
dec
in
pop
clc
mov
mov
gs
fisubs
add
ss
nop
or
push
idiv
decb
fistpll
xor
fcmovnbe
in
jmp
ret
xor
push
mov
adc
lods
lcall
call
popf
je
xchg
imul
repnz
dec
scas
mov
and
filds
icebp
test
and
push
add
rclb
push
xchg
add
rol
pusha
sti
fistpll
mov
in
gs
jne
call
mov
lret
jo
adc
lret
decb
and
xor
xlat
arpl
cltd
roll
adc
and
cmc
fcmovnb
and
subl
call
dec
mov
test
lret
mov
adc
mov
xlat
jbe
jo
pushf
mov
sbb
adc
adc
shll
stos
out
out
js
xlat
jecxz
arpl
stos
inc
jmp
bound
iret
cmp
daa
stos
xor
and
pushf
jl
adc
aam
inc
leave
es
movsb
sbb
movsl
inc
call
mov
jb
inc
mov
sbb
scas
pusha
adc
outsb
jecxz
pop
mov
xchg
mov
std
sub
pushf
arpl
push
ret
lds
imul
lock
incl
jbe
sti
push
repz
test
pop
cmpsb
mov
mov
mov
call
cmp
decb
pusha
imul
or
fdivrp
push
mov
imul
xor
jns
bound
mov
push
loope
mov
dec
jae
int
xlat
push
pop
imul
xor
aad
adc
lret
cmp
imul
repz
xor
inc
push
inc
mov
pop
pop
loop
fdivrs
mov
adc
js
mov
sarb
mov
aad
push
cs
mov
jnp
mov
pusha
in
sbb
jb
cmc
sti
pop
xchg
add
mov
xchg
mov
and
or
pop
scas
bnd
add
cmpsb
ljmp
push
movsb
mov
mov
movb
and
cmc
jle
pop
inc
scas
add
mov
les
jp
dec
cmc
adc
stc
pop
out
dec
mov
iret
xor
adc
and
jb
xchg
loop
sub
pop
inc
dec
movsb
js
enter
jecxz
pop
ja
xchg
loop
adc
inc
sbb
push
out
lret
xor
es
mov
mov
xor
fmuls
fmuls
inc
add
int3
mov
add
lods
fwait
xor
lea
lods
dec
xlat
mov
push
push
in
mov
add
dec
les
cmp
dec
pop
sbb
sbb
cs
push
adc
les
nop
scas
xchg
mov
dec
mov
push
cmp
fdivl
pop
lods
sbb
mov
and
repnz
je
mov
addr16
jge
out
sub
pop
pop
int3
ret
dec
std
xchg
mov
xor
mov
std
cmc
shll
and
mov
lcall
cmpsl
fstl
pop
hlt
call
mov
mov
push
mov
fldcw
fs
mov
leave
adc
mov
out
jge
outsl
mov
sbb
outsb
mov
inc
int3
xor
lret
dec
xor
sbb
mov
jno
jp
sub
xchg
or
je
or
inc
fmulp
loop
mov
pop
shlb
test
cmp
fstps
sbb
scas
insb
mov
jecxz
sbb
and
mul
ret
mov
and
or
loop
mov
es
insb
fcom
and
xchg
test
orl
push
pop
push
mov
jp
adc
sbb
jge
pop
sarb
jo
and
and
cwtl
inc
jge
cli
les
ret
nop
jae
sti
mov
sub
movsl
cmp
outsb
loop
adc
fistl
out
in
addb
cmp
imull
ret
mov
lahf
enter
push
mov
dec
pop
jecxz
and
out
push
and
adc
mov
push
mov
inc
sbb
inc
mov
cmp
pop
les
lea
cmp
test
and
and
mov
int3
pop
mov
pop
jg
cld
xchg
adc
add
jns
or
cmp
int3
inc
xor
jle
popa
lcall
sbb
xchg
fnsave
scas
sti
sub
or
enter
mov
lret
xchg
mov
xchg
or
mov
add
mov
xor
add
rcll
lret
aam
push
add
and
mov
int
and
xchg
xlat
pop
inc
imul
in
in
ror
dec
scas
jecxz
xchg
ljmp
movsb
jo
push
sub
xchg
xor
in
int
dec
pop
cmp
and
aaa
adcl
mov
arpl
dec
scas
repz
fimull
and
dec
mov
scas
enter
adcl
cmc
in
and
sub
sbb
sbb
mov
repnz
jns
aad
or
lret
lods
into
fs
inc
loopne
mov
aam
cmpb
mov
push
xchg
push
lock
push
in
in
push
stc
fs
or
popf
jmp
xchg
push
mov
aaa
add
shll
adc
test
or
sbb
mov
test
movsl
mov
inc
inc
pop
sbb
mov
sub
stc
call
enter
cmp
xchg
rcrl
xor
fsts
shlb
int3
into
mov
movsl
pop
adc
jg
fisttpl
mov
mov
shll
sub
push
or
in
in
xlat
sub
int
xor
sub
loope
fnop
fs
out
mov
dec
sbb
xchg
shr
push
mov
push
insl
sub
in
pushf
pop
or
jp
pop
lods
cmc
loop
rep
pop
xor
subl
inc
mov
push
in
xor
in
test
jae
cwtl
loop
lock
lcall
adc
add
jbe
int
ja
es
loope
sbb
ret
cmp
mov
xchg
pop
test
mov
xchg
sahf
lods
jnp
and
les
add
rcr
pop
push
push
test
mov
xchg
and
ds
mov
mov
mov
xor
jp
pop
pop
cmc
sbb
xor
jmp
test
pop
xchg
hlt
je
or
push
dec
leave
dec
push
xor
test
daa
and
inc
test
fldl
stos
cli
shr
lods
cwtl
mov
and
fdiv
das
mov
mov
movsl
push
mov
jg
insb
int
adc
push
out
sbb
cld
loopne
sub
movsl
bound
push
inc
inc
and
test
out
imul
lret
mov
testb
out
mov
xchg
cmc
stos
xor
pop
dec
outsl
inc
add
xchg
rorl
lods
xchg
divl
inc
lcall
cmp
or
loop
cmp
orl
add
mov
inc
mov
push
dec
daa
pop
pop
rol
dec
jne
inc
mov
adc
clc
fmul
dec
xor
xor
je
and
inc
inc
sbb
or
imul
push
mov
ret
sbb
fwait
ret
and
fucomip
aam
and
in
fidivrs
xchg
mov
xor
xbegin
push
dec
xchg
xor
xor
loope
push
daa
daa
jb
add
adc
add
out
cltd
add
out
out
js
sub
xor
pushf
repz
dec
aaa
jl
push
push
mov
enter
inc
in
xor
mov
setp
aad
pop
pop
roll
adc
xchg
sbb
cmc
mov
jb
jmp
cs
push
das
xor
lret
cld
test
popa
ja
mov
push
loopne
xlat
iret
sbb
push
push
aam
and
flds
daa
sbb
insl
ret
cmp
and
test
mov
mov
fnstenv
add
cmp
std
xchg
ja
lds
mov
lds
and
in
ficomps
lret
sub
je
pop
pop
aad
adc
fcompl
xchg
repz
adc
out
adc
xchg
xor
stc
or
pop
das
pop
cmpsl
sbb
add
cmp
rcrl
sub
in
jecxz
movsl
xchg
push
mov
sti
jb
lods
outsl
cwtl
mov
das
jge
roll
loopne
ja
mov
inc
pop
jae
pusha
and
mov
fwait
or
jge
cmp
add
insl
mov
ret
aam
xor
adc
int
push
fisttpl
sbb
mov
mov
push
ficomps
pop
pop
sbb
test
lea
dec
and
mov
cmp
xchg
lret
push
outsl
jo
adc
sub
pop
inc
jno
leave
das
das
insb
sarl
inc
aaa
es
push
xlat
push
mov
push
ja
or
mov
cli
mov
xchg
sarb
test
mov
jns
inc
and
ljmp
movsb
push
mov
das
cs
in
pop
adc
in
or
je
xchg
xchg
in
mov
xor
and
int3
sub
sub
pushf
out
test
fucomip
mov
nop
adc
stc
scas
dec
push
mov
adc
rolb
in
stos
xchg
inc
jmp
insb
imul
fidivrl
aas
dec
push
daa
insl
negl
cmp
jle
jg
lea
icebp
xor
and
int
testb
mov
cmpsl
aaa
xlat
sbb
in
cmp
ret
xchg
loopne
sbb
sbb
mov
jbe
mov
adc
sbb
arpl
dec
sbb
enter
add
pop
in
xchg
ja
adc
outsl
cld
fsubrs
push
mov
pop
sahf
xchg
nop
inc
imul
je
mov
mov
ffree
imul
fsubl
rcl
bound
repnz
stos
ror
push
add
gs
fistpll
cld
les
outsl
insl
jmp
divl
popa
bound
xchg
xor
sub
hlt
loope
movsb
es
sti
addl
test
lods
test
jnp
pop
mov
repnz
jns
mov
cwtl
sub
xchg
imul
mov
sub
loop
xor
push
stos
in
in
xchg
lods
jp
imul
dec
pushf
push
dec
subb
test
stos
inc
sbb
pop
sbb
mov
push
sbb
push
jo
xchg
sub
adc
lret
lahf
push
sbb
js
test
inc
stos
dec
pop
cmpl
sbb
xchg
into
dec
adc
repnz
mov
mov
add
and
and
into
or
pop
xor
push
rcll
cmp
pop
leave
lret
imul
jg
mov
fldt
pop
or
std
push
mov
imul
and
push
test
enter
imul
push
cmp
stc
jnp
xor
repnz
popf
xabort
add
mov
dec
push
imul
mov
cld
and
mov
pop
movsb
pushf
pop
inc
fwait
mov
adc
aaa
ljmp
mov
jmp
icebp
aaa
and
cmp
pop
outsb
gs
fisttpl
cs
jae
roll
sarl
jb
addr16
adc
stc
jo
aam
loop
cmp
sub
std
pop
jmp
cltd
orl
mov
cmc
sbb
xchg
push
inc
sub
clc
rcll
int
outsl
lods
leave
push
js
into
mov
pop
xchg
xchg
push
daa
filds
xchg
jge
int3
xor
adc
mov
lahf
mov
fcoml
or
mov
and
add
jae
aas
test
add
sti
inc
adc
lcall
outsb
mov
jp
sub
gs
pop
icebp
icebp
mov
lds
mov
repnz
sbb
lahf
sbbb
mov
adc
xchg
add
pop
std
mov
pusha
adc
clc
in
mov
loop
out
or
pop
push
mov
leave
ficoml
xor
mov
push
popf
inc
popa
cltd
test
xchg
mov
lea
fwait
aad
dec
mov
loope
pop
push
mov
lock
ds
scas
cmp
je
scas
les
and
mov
mov
sbb
add
cld
iret
push
cmp
sub
aam
and
rclb
mov
inc
movsb
push
or
xor
test
adc
mov
adc
enter
cmp
cmp
mov
sbb
jmp
dec
cmp
pop
sub
xor
stos
repz
aad
xchg
shll
jl
lcall
lea
or
repz
ss
inc
scas
adc
or
out
mov
loope
mov
mov
inc
out
out
repz
sahf
adcb
and
mov
mov
pop
in
lea
in
movsl
xchg
bound
jns
mov
xchg
bound
pop
sbb
xor
shrl
jl
pop
or
out
mov
mov
adc
mov
jge
sub
jp
dec
mov
addl
jne
ja
in
jb
fld
int3
xchg
dec
in
dec
lods
dec
adc
xor
xchg
ret
mov
push
movsl
inc
mov
leave
or
inc
adc
fistpl
push
ljmp
mov
insb
jae
bswap
jnp
mov
mov
push
pcmpeqw
cwtl
aaa
cmpsl
fisubs
ficomps
fildl
inc
cld
push
in
je
lods
lods
add
pop
in
mov
repnz
cmp
ret
pop
mov
or
inc
pop
cmc
out
or
add
adc
sbb
inc
or
lock
idivl
adc
pop
jg
pusha
aad
popf
mov
out
stos
xchg
jmp
pusha
push
adcl
fdivr
gs
cli
pushf
mov
in
in
add
add
mov
rolb
xor
jle
lcall
push
cmp
ljmp
mov
out
fwait
cli
push
jne
xchg
add
adc
cltd
mov
shll
push
mov
xchg
fidivl
push
push
loopne
stos
mov
sahf
inc
outsl
xchg
sar
dec
outsb
arpl
test
xchg
mov
or
add
mov
scas
aaa
inc
xor
das
push
pop
inc
and
cmp
popf
inc
or
leave
rclb
cmp
mull
lret
test
sub
notb
and
repnz
cmp
and
jmp
das
dec
push
inc
add
icebp
enter
cmp
repnz
cld
inc
clc
out
cli
lret
sbb
inc
pop
mov
jae
icebp
jg
js
mull
sbb
mov
add
test
fwait
xor
test
push
pop
pop
fnstcw
js
adc
jg
sub
cmpb
inc
push
sbb
or
push
jl
adc
out
xorl
jmp
insl
mov
loop
imul
clc
cmpsb
out
inc
cmp
cmpb
xor
mov
ror
neg
ja
arpl
xchg
idivb
test
aas
mov
sbb
push
sbb
jg
test
scas
mov
loop
push
or
adc
mov
xchg
fucom
add
scas
or
imul
fsub
mov
add
adc
mov
sub
cwtl
mov
out
fiadds
xor
js
jecxz
push
lock
mov
mov
loopne
out
mov
sbbb
push
mov
cmp
xor
scas
and
cwtl
inc
outsl
lock
int3
loop
xchg
push
or
repnz
xchg
inc
jbe
inc
in
jg
scas
outsl
jns
stc
jmp
mov
inc
int3
dec
mov
mov
in
push
cmp
movsb
push
loope
add
and
mov
rorb
dec
sbb
ja
push
push
std
lds
jmp
fidivl
cmpsb
jnp
arpl
je
jae
cmp
sbb
dec
int
dec
test
jbe
aaa
push
dec
push
jl
stos
andb
push
mov
pop
mov
pop
or
mov
call
je
mov
inc
sub
mov
les
pop
ljmp
or
sbb
mov
ficoml
mov
jne
jmp
push
pushf
push
add
pop
add
adc
inc
fbld
xor
loope
cmp
in
jb
jo
leave
stos
testb
repz
pop
push
ret
mov
daa
jg
inc
outsl
or
outsb
push
sbb
rorl
loope
movsb
cmp
fisubrs
arpl
xchg
mov
pop
mov
lds
into
mov
dec
daa
gs
push
int
pop
loopne
mov
lcall
push
add
sbb
xchg
popa
dec
inc
pop
pop
scas
negl
xlat
add
adc
or
fdiv
jmp
cltd
xor
data16
in
lea
paddb
fcoml
mov
dec
sbb
lea
push
mov
cmp
aas
pop
fisubrs
dec
lcall
push
cmp
xchg
sbb
jg
in
jmp
imul
lods
in
cmpsl
outsb
sbb
add
in
loopne
jnp
test
stos
inc
inc
lods
push
imul
dec
aam
aam
push
jae
mov
into
push
mov
lret
mov
jnp
cltd
jmp
cmpsl
xchg
cmp
adc
rolb
ret
push
xchg
xchg
push
cmpsl
clc
andb
mov
jle
repz
lahf
cmpsl
mov
xchg
cmp
jg
adc
ljmp
mov
scas
jnp
cs
iret
dec
inc
push
jnp
hlt
or
aam
jp
fsubrs
sti
stc
aam
loope
imul
ja
xor
inc
lsl
mov
loopne
lret
retw
dec
or
or
pop
fnsave
mov
loop
iret
pop
lret
data16
mov
lcall
dec
xchg
sbb
mov
push
add
adc
add
adc
imull
imul
xor
xchg
jge
sbb
in
mov
sub
ss
ss
inc
sbbb
mov
sahf
fcomi
test
xchg
sbb
lcall
push
mov
push
cmp
data16
ret
xchg
imul
inc
pop
out
xor
insb
lods
cmp
hlt
push
cli
jo
or
jge
popa
mov
sbb
aam
pop
mov
out
insl
lret
mov
cmpl
aam
and
xor
add
adc
fs
je
inc
jnp
mov
xchg
lret
in
hlt
jmp
sti
aam
and
xor
add
adc
fs
je
inc
jnp
mov
mov
lahf
jmp
sti
aam
and
cmp
imul
mov
push
stos
pusha
mov
hlt
imul
fnsetpm(287
sahf
addl
or
cmp
sub
cmp
sub
sbb
or
or
stos
outsl
fwait
jg
psubq
stos
das
fstpt
lret
iret
cmp
sub
sbb
or
pop
mov
stos
outsl
fwait
jg
psubq
jmp
fstpt
lret
iret
cmp
sub
sbb
or
pop
mov
negl
jmp
mov
test
push
lret
mov
jg
out
mov
xor
xchg
js
cmp
xor
push
js
and
and
or
hlt
popl
push
inc
repz
ror
xchg
fwait
orb
fldt
xor
mov
test
mov
fisubrl
lret
dec
push
jg
cli
dec
push
sti
xchg
fsubrs
clc
sub
clc
pop
out
pusha
jnp
mov
sbb
xorb
mov
pushf
cmpsb
pop
xlat
push
add
jo
mov
sbb
loop
hlt
mov
rcr
aas
fwait
repz
add
mov
push
or
lahf
lahf
adc
pop
call
cmp
sub
sbb
or
pop
mov
stos
outsl
fwait
jg
psubq
jmp
fstpt
lea
pop
mov
sub
cmp
aas
xlat
cmp
sbb
cmp
mov
dec
scas
mov
sbb
inc
ljmp
adc
jg
clc
xchg
jp
inc
scas
push
movsl
test
fistps
outsl
lcall
pop
mov
stos
outsl
fwait
jg
psubq
jmp
fstpt
lret
iret
cmp
sub
sbb
or
pop
mov
stos
outsl
fwait
jg
psubq
jmp
fstpt
lret
iret
cmp
ficompl
insl
jge
or
xor
push
rclb
es
mov
iret
mov
or
push
jb
jo
mov
dec
shl
pushf
jno
mov
and
or
jne
loopne
pop
and
push
gs
subl
shrl
jmp
or
in
outsb
insl
xlat
mov
jno
mov
jno
incb
xor
stos
dec
inc
and
les
dec
inc
pop
push
push
sarb
lods
pop
mov
fldt
lahf
jecxz
enter
sub
fdivrl
inc
int
out
in
stos
sahf
daa
and
scas
dec
pop
add
xor
mov
sbb
pop
pop
jp
adc
out
mov
add
and
sti
push
or
cmp
fwait
mov
fistps
imul
mov
xor
cs
rclb
repz
testl
jno
lods
dec
outsb
jbe
xchg
mov
rorb
aam
ljmp
sub
popf
iret
adc
xchg
jbe
push
sbb
add
mov
lret
inc
adc
fsts
enter
aam
stc
aas
hlt
popf
psubsb
lds
movsb
dec
push
sahf
das
mov
out
clc
pop
test
es
mov
xlat
mov
out
mov
loope
lods
std
les
decl
adc
xchg
shlb
clc
aaa
or
mov
fistpll
sti
loopne
std
sbb
mov
jbe
cmpsb
in
or
jp
es
and
mov
cs
mov
outsb
test
mov
mov
lahf
fs
filds
cltd
mov
xchg
mov
adc
fs
paddsb
pushf
lahf
mov
pop
flds
push
movsb
sbb
add
dec
xchg
cwtl
in
push
stos
leave
sub
dec
mov
xchg
cld
enter
mov
fidivrl
cwtl
leave
add
sbb
xor
xor
sub
fwait
jecxz
push
mov
es
mov
xor
fimull
stos
dec
scas
ja
jae
cwtl
or
push
fldcw
outsl
loop
subb
xchg
jmp
jg
or
fldt
ss
jl
lods
stos
repnz
push
sub
or
fdivrl
ret
push
ljmp
jnp
cltd
test
sahf
jae
mov
cmpsl
sub
mov
inc
ss
push
push
jp
clc
ffreep
dec
ds
je
xchg
cmp
dec
adc
or
std
ss
mov
or
stc
leave
xchg
adc
xchg
shr
dec
arpl
sub
je
inc
cwtl
popf
stos
repnz
jb
rcrl
repnz
stc
and
mov
shl
inc
dec
inc
dec
mov
roll
pop
pop
addr16
in
ds
dec
jg
jb
inc
sbb
into
les
xor
test
pop
push
jl
test
jb
sbb
dec
mov
xchg
push
mov
gs
test
adc
pop
roll
or
and
rclb
in
out
ljmp
jle
pop
add
xchg
jmp
pop
dec
les
sbb
ja
jecxz
xor
and
insl
xchg
xor
aas
insl
sbb
ds
int3
les
adc
stc
incb
xchg
inc
xor
push
push
or
xchg
cmp
mov
and
out
sbb
jo
insl
stos
lea
xlat
push
or
pop
cld
fcmovnu
test
bound
in
adc
mov
sbb
cmp
sub
mov
dec
pop
mov
jb
in
test
jns
sbb
mov
mov
adc
xchg
leave
std
mov
pop
leave
cmpsb
in
push
xchg
mov
je
xor
cmp
sbb
and
pusha
and
ds
cmp
repz
stos
push
rorb
mov
sbb
mov
jl
and
mov
push
xchg
add
sub
pop
mov
arpl
sub
sti
das
jae
inc
cmc
out
inc
dec
int3
sbb
ja
data16
test
mov
or
movsb
fwait
aam
lods
mulb
jns
xchg
stos
js
xor
aam
push
aas
push
stc
rolb
ja
shrd
popf
stc
jecxz
dec
mov
jl
push
cmp
adc
sub
or
pop
pop
push
lods
pop
fwait
inc
cmp
sub
and
jb
hlt
xchg
sbbl
mov
outsl
mov
mov
cmpsl
mov
test
in
jae
enter
iret
or
and
daa
repnz
pusha
mov
push
fdivrs
pop
divl
in
sub
cmc
xchg
pop
xchg
int3
push
mov
leave
hlt
sub
pop
in
cmp
inc
mov
push
pop
push
dec
cmc
popa
test
dec
in
push
cmc
adc
leave
cmc
cmpsl
in
int3
cwtl
int
jg
in
cmp
jb
or
addr16
fists
xor
fisubs
or
popa
idivb
adc
mov
inc
jns
jecxz
and
pop
sbb
leave
jmp
femms
aaa
sbb
imul
outsb
cltd
stc
lcall
outsb
inc
dec
mov
ficompl
fsts
lock
sub
fbstp
jge
ja
cltd
pusha
or
sbb
adc
loope
cwtl
jle
jae
shlb
popf
or
mov
dec
jl
pop
sub
lea
mov
inc
nop
mov
leave
loop
inc
dec
ljmp
incl
imul
xlat
push
xchg
pop
sahf
loope
jle
jp
pop
clc
mov
lock
fdivrp
outsl
in
xor
inc
call
inc
adc
sbb
mov
xchg
sbb
push
push
fcmovne
adc
mov
lods
out
mov
loopne
repz
pop
dec
jne
arpl
loope
adc
inc
dec
push
gs
pop
divb
cli
and
shll
popa
jno
mov
or
insb
or
and
lret
loope
stos
sbb
stc
jbe
jp
pop
test
mov
xchg
bound
aas
das
out
pop
add
push
es
add
mov
sbb
cmp
test
push
shlb
adc
mov
push
lock
cmp
xchg
imul
add
das
bound
mov
rcr
mov
into
pop
arpl
cmc
pop
add
jle
lock
mov
inc
pushf
cmp
clc
sub
ljmp
sub
mov
pop
pop
xchg
pop
and
add
jae
popa
pushf
aaa
lahf
push
or
test
insl
cmpsb
push
or
push
jl
sti
ret
mov
lret
cmp
stc
sahf
pop
xchg
in
mov
das
push
sbb
loop
mov
dec
ljmp
mov
mov
push
mov
push
hlt
ret
aam
fwait
dec
push
or
lcall
push
shlb
lret
ret
outsl
outsb
int
ficoml
repnz
popf
add
test
pushf
test
cmpsl
cmpsb
orb
sub
pop
or
pop
dec
mov
loope
and
ss
les
mov
into
repnz
outsl
jp
pushf
into
lds
jno
add
adc
out
jbe
insl
pop
xor
pop
fs
or
jo
pop
inc
jno
xchg
mov
inc
push
fsubr
shl
and
jb
sub
cld
aad
jb
mov
leave
pop
cmp
cmp
stos
orb
js
mov
addr16
pop
jns
addr16
addr16
mov
xlat
and
std
scas
fisubl
push
jae
nop
cmp
in
push
mov
mov
push
push
push
ret
sbb
rcl
fiaddl
outsl
or
iret
or
rorb
fidivl
repnz
xchg
dec
daa
push
add
pop
lret
lahf
dec
je
mov
filds
stos
pop
icebp
jg
stc
daa
or
add
je
ret
pop
gs
pop
mull
repz
nop
lods
or
mov
test
mov
pop
sbb
and
cmp
ss
jo
push
jo
mov
sub
je
test
imulb
inc
cmove
sbb
in
loope
mov
dec
sbb
mov
xor
je
sbb
cld
mov
push
dec
dec
dec
inc
nop
push
enter
pop
xor
or
mov
lea
xchg
push
jno
fbstp
mov
popa
adc
xor
test
and
pop
push
lock
lcall
ss
mov
and
mov
sbb
add
out
stc
addr16
pop
popa
clc
dec
rcl
adc
lods
testb
scas
pop
jmp
mov
filds
mov
test
sbb
cltd
xor
or
xchg
adc
dec
and
testl
daa
cltd
in
int
mov
mov
outsb
addr16
add
push
stc
mov
popf
out
fistpl
mov
cmpb
xor
cmpsb
les
mov
fidivrs
repz
lret
xchg
jle
loop
lret
inc
setb
in
pusha
cmp
aad
adc
gs
dec
iret
iret
fsts
mov
data16
cwtl
jo
jno
fcmove
xchg
popa
mov
sbb
fdiv
push
mov
popf
or
dec
rcrl
jle
ja
push
dec
int
scas
mov
repz
adc
imul
cmp
adc
mov
or
add
push
js
inc
mov
add
push
dec
pushf
push
xchg
in
mov
mov
pop
mov
xchg
cmp
sub
jecxz
loopne
insb
gs
test
mov
xor
sub
out
fs
and
push
jb
adc
std
repz
into
cmpsl
dec
scas
or
lret
xor
mov
fistpll
inc
lret
push
mov
sub
shrl
sbb
outsb
std
xchg
rcll
jecxz
mov
pop
fwait
addr16
mov
call
idiv
mov
pop
pop
pop
lret
or
jb
add
adc
pushf
inc
pop
pop
inc
pop
push
gs
cmc
xchg
es
push
fs
cmp
push
jae
jo
lds
jne
jle
inc
xor
xchg
cs
push
ja
pop
xor
push
in
stc
imul
or
dec
loop
lds
ljmp
adc
mov
adcl
sbb
test
xchg
jnp
pop
dec
sub
dec
inc
jmp
stos
lahf
jo
in
aas
test
and
loope
sub
scas
sbb
jmp
mov
cmp
pop
sbb
dec
imul
dec
mov
inc
pop
and
testl
sti
mov
fnstenv
shlb
jmp
aas
xor
xor
and
push
jno
adc
jo
imul
mov
add
sub
mov
popf
jns
jle
nop
xchg
pusha
popf
ret
xchg
sub
add
dec
fwait
xor
add
push
pop
mov
and
rcr
test
mov
jge
js
popa
push
push
mov
and
mov
jle
adc
inc
test
orl
rcll
dec
int
adc
cmp
inc
je
in
add
aaa
out
mov
xor
xor
jmp
add
dec
sub
shll
adc
lret
int
pop
ret
push
out
sti
insb
cltd
and
paddusw
mul
cmp
int
mov
push
je
fucomi
jae
pop
or
fs
in
or
loope
in
scas
xchg
sub
outsl
push
loop
int3
into
pop
jo
sar
cmc
test
cld
or
fwait
das
mov
bnd
inc
stc
pop
imull
and
pop
cmp
inc
sub
in
aam
add
pop
inc
aam
test
add
jno
adc
aaa
incb
jle
scas
loope
or
dec
dec
outsb
jle
jnp
jg
adc
popf
pushf
jmp
sub
push
xchg
into
jl
jmp
rcrl
xchg
stos
lcall
cmp
xchg
mov
cltd
aaa
pushl
jge
mov
or
xor
or
negb
out
into
pop
sbb
and
insb
aas
fmull
add
fcoml
fsubs
fnsave
xor
divl
or
in
fsubrs
mov
xor
es
pop
xor
cmpsl
add
dec
jle
in
cld
rcrb
cs
movsl
test
sti
fwait
xchg
sub
mov
imul
loop
xor
clc
mov
ljmp
jle
adc
sub
add
jge
movsl
mov
cmp
pop
sar
xchg
sub
lods
push
mov
push
sbb
mov
mov
and
stc
inc
pop
scas
sub
mov
pop
daa
out
push
sub
pop
dec
or
or
mov
scas
in
xchg
sub
sbb
sbb
mov
jb
in
sbb
out
push
inc
dec
jmp
lahf
push
xchg
jno
cmc
xchg
push
mov
ja
lea
cmp
and
scas
jns
mov
cwtl
insb
sarb
jg
pop
dec
int3
hlt
add
inc
mov
cmp
cmp
je
data16
into
jp
test
lock
inc
xchg
or
push
mov
loop
pop
jae
xchg
xor
mov
call
inc
inc
cmc
addl
out
add
and
push
xchg
clc
cmpsl
fwait
lea
push
repz
pop
mov
lock
icebp
xchg
or
flds
pop
lods
ret
jp
adc
decl
pop
mov
ret
xor
jae
fabs
test
add
adc
sbb
loope
xchg
dec
cmc
insb
cwtl
in
mov
pop
test
mov
pop
popa
and
fisttps
int
mov
xor
jl
arpl
dec
mov
dec
es
cli
shl
hlt
out
sarl
sbb
add
test
and
daa
scas
bound
mov
scas
push
daa
xchg
ds
cmpl
push
push
xchg
mov
push
adc
xchg
dec
mov
inc
movb
gs
std
shlb
jge
sub
loope
jmp
cmc
popa
inc
jbe
imul
repz
ss
clc
sbb
adc
inc
mov
std
adc
lds
repz
cmp
fildl
and
or
dec
shll
sbb
in
lahf
ror
inc
out
out
xor
mov
pop
out
and
arpl
or
pushl
jmp
fwait
aaa
pop
loop
pop
adc
sbb
push
lds
popa
add
adc
mov
lret
fs
mov
jecxz
or
cmpb
bound
jbe
push
testb
or
cmpsl
in
lock
add
fwait
cmc
adc
test
lahf
mov
xor
jle
rep
test
popa
push
cld
sti
scas
sub
pushf
es
sbb
in
ljmp
adc
addr16
mov
xor
dec
dec
add
mov
xchg
cmc
fwait
sub
jne
imul
sub
xchg
shlb
test
and
push
movsb
dec
loopne
in
insb
xor
scas
pop
push
inc
pop
sbb
cmpsl
jp
inc
scas
jmp
jle
inc
dec
daa
mov
in
and
pusha
push
adc
decb
add
int
sarb
subl
cld
repz
add
dec
in
call
and
popa
push
adc
sub
das
and
popa
and
outsl
cmpsb
out
mov
scas
adc
addr16
mov
ja
push
dec
xchg
into
xor
iret
lcall
ljmp
sbb
aad
pop
in
test
add
pop
insb
xor
mov
lods
adc
fwait
sub
sub
movsl
mov
mov
lcall
int3
pop
dec
pop
shll
mov
sahf
mov
xorl
aad
or
or
std
data16
sti
adc
movsb
or
cmpl
or
ret
inc
push
outsl
xor
lahf
fs
call
dec
fildll
shlb
out
mov
mov
cs
fwait
or
mov
cmpsl
movsl
repnz
push
test
les
pop
adc
jno
sbb
cmpsb
jle
jle
push
dec
xchg
lods
in
gs
inc
xchg
add
or
or
inc
arpl
or
imul
setl
inc
out
fildl
clc
fwait
mov
mov
insl
fists
sub
xchg
mov
xlat
dec
cmc
cmp
jmp
aam
call
push
out
stos
push
ret
xchg
iret
push
pop
dec
jb
mov
jmp
repz
lahf
ss
andb
jno
fdivs
inc
int3
lods
mov
sti
fwait
inc
xchg
xchg
repz
mov
sub
lds
das
out
stos
loopne,pt
sub
jmp
fisttps
push
jnp
xchg
xchg
jg
push
mov
push
jp
into
aaa
ret
sub
and
in
arpl
mov
xor
stos
pop
data16
add
jge
rcll
push
out
jge
iret
pop
in
shll
inc
push
jno
loopne
xchg
ror
lods
dec
xor
cmp
add
dec
shll
inc
mov
mov
mov
cmpsb
push
pop
insb
jle
and
cs
jl
fldl2t
mov
xor
push
and
or
adc
stos
push
xor
cli
bound
dec
lahf
push
and
adc
xchg
xchg
andb
test
lods
out
mov
mov
cltd
dec
xchg
enter
xor
xchg
out
mov
and
movsb
nop
sti
std
in
cmpsl
push
popf
xchg
rolb
jb
xor
jnp
pop
movsl
inc
adc
jns
cmp
sbb
sbb
xor
or
mov
loopne
xchg
jle
mov
mov
cmp
adc
scas
pop
mov
daa
jo,pt
ret
xor
add
pop
xchg
lret
pusha
call
repnz
fdivrs
xchg
push
add
or
fldln2
or
test
push
dec
add
insl
sbb
dec
and
inc
cltd
insb
mov
addl
sarb
sbb
jmp
and
std
rcr
xchg
fcompl
dec
jnp
icebp
xor
js
mov
mov
icebp
outsb
or
jbe
addb
mov
fiadds
aas
xor
sub
stos
dec
jno
test
mov
xor
push
xchg
inc
mov
cmp
lods
xchg
loopne
mov
push
arpl
lock
jle
scas
andb
std
and
test
negl
aaa
sbb
dec
insl
pusha
mov
mov
push
in
call
cmpsl
fidivl
mov
ret
or
sbbb
adc
sub
cmp
mov
xlat
pusha
ds
cmpsl
cmpsb
mov
sub
jle
lret
xor
insl
shll
cmpsl
cmp
cmc
xchg
inc
inc
arpl
xchg
sti
xchg
push
adc
xor
fiadds
mov
stos
mov
rcpps
repz
inc
lahf
pusha
pusha
lock
in
rolb
loope
dec
sub
sti
jo
lds
lds
inc
add
jnp
loopne
enter
hlt
pop
lods
fptan
lahf
call
js
xchg
aad
pop
movsl
inc
mov
inc
dec
dec
mov
push
add
xor
out
mov
jg
adc
sbb
out
sub
js
adc
lcall
or
inc
inc
lods
mov
mov
les
jmp
int
pop
push
sbb
push
lock
mov
into
jecxz
out
mov
lahf
xor
push
push
movsl
add
and
sbb
sarb
push
sbb
lcall
dec
mov
jno
sub
into
jle
lods
or
jle
push
clc
mov
dec
aas
rcrb
xor
inc
aad
cmpsl
mov
test
pop
pop
pop
stos
push
mov
ja
fsubr
jnp
test
idivb
gs
inc
jae
jns
push
movsl
jae
jno
pop
pop
xchg
in
jno
mov
movsb
popf
pusha
add
xchg
jl
push
lea
or
popf
mov
scas
mov
sarl
jp
repz
std
mov
cli
pop
jo
js
inc
or
std
adc
mov
inc
jg
fcompl
jp
or
pop
daa
pop
movsl
sti
dec
lock
mov
shll
movsl
fimuls
dec
cwtl
ja
mov
nop
mov
ljmp
jl
mov
ds
and
sub
push
xchg
mov
adc
pop
aaa
jle
lds
pop
jae
push
rorb
mov
pop
xor
call
in
test
adc
sahf
sbb
imul
scas
xor
adcb
pop
push
xchg
jmp
xchg
mov
hlt
cmp
mov
ss
into
pop
pop
dec
adc
sbb
cmp
push
xchg
pop
mov
xchg
xchg
repnz
stos
mov
in
inc
into
jg
enter
pop
sub
stos
mov
popa
out
subl
adc
inc
and
cmp
push
cmp
or
outsl
jmp
dec
push
push
mov
fisubrl
xchg
lret
mov
js
adc
test
or
ss
cmp
xchg
adc
decl
jnp
imul
pop
stos
outsl
fwait
jg
psubq
jmp
fstpt
lret
iret
cmp
sub
sbb
or
pop
mov
stos
outsl
fwait
jg
psubq
jmp
fstpt
lret
iret
aas
fildll
out
sbb
or
pop
mov
stos
outsl
fwait
jle
psubd
jmp
fstpt
lret
iret
cmp
sub
sbb
jg
fstpt
mov
inc
mov
cld
js
xchg
adc
and
xor
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jns
imul
hlt
pop
pop
pop
ja
add
mov
enter
test
leave
jns
imul
cmp
imul
mov
leave
mov
test
leave
jns
imul
cmp
jno
inc
or
pop
lret
in
leave
mov
out
cmp
xor
mov
mov
popf
or
std
adc
aad
and
loop
add
repnz
add
insb
inc
mov
mov
test
into
flds
sub
popa
scas
pop
inc
cmp
mov
pop
imul
and
aam
cld
daa
mov
jns
imul
push
pop
cmp
pushf
add
mov
jmp
mov
push
sbb
mov
mov
pop
sub
adc
test
ljmp
test
xchg
leave
lcall
mov
sbb
jmp
es
mov
imul
cmp
imul
mov
leave
nop
mov
sub
sbb
or
das
pop
pop
jge
or
rorb
mov
fxch
movsb
sbb
or
cmp
and
pop
popa
cmp
mov
lret
movl
ss
jl
adc
or
mov
leave
mov
sub
dec
or
jns
imul
mov
leave
mov
scas
les
data16
inc
sub
in
mov
ficoml
lock
hlt
cmp
mov
data16
and
jecxz
push
jge
sub
lds
sub
add
in
jl
jl
fisubs
mov
pop
fistps
adc
test
xor
dec
mov
fnstenv
pop
pop
shrl
lahf
cltd
sbbb
xchg
push
lret
add
stos
cld
outsb
gs
lret
sub
or
dec
cli
lret
fbstp
adc
inc
dec
das
imul
and
xchg
std
mov
aad
sbb
or
sbb
jmp
into
das
stc
jb
inc
pop
push
xchg
out
or
dec
shll
nop
jmp
pop
cmp
xor
xchg
insl
loop
adc
data16
aam
ficoml
xchg
push
adc
jge
jne
in
fiadds
jbe
jb
cltd
dec
ja
mov
add
mov
add
js
xor
pop
test
or
jecxz
std
pop
add
outsl
jle
dec
cmc
sub
adc
sbb
stc
nop
sbb
mov
sub
push
dec
lods
pop
jnp
rcrb
stos
outsl
call
push
pop
jmp
mov
add
rcrl
push
mov
sub
dec
test
rol
pop
in
adc
fdivs
xor
push
mov
clc
sti
add
or
test
lret
mov
adc
lcall
inc
fmuls
mov
cmp
lcall
push
data16
lods
or
test
adc
pushf
imul
or
pushf
sub
cmp
stos
xchg
push
xorb
int
pop
bound
aad
aas
push
mov
movsb
push
pop
mov
in
mov
in
mov
mov
xor
lds
jno
scas
xlat
cmpsb
mov
fst
gs
inc
and
int3
xchg
mov
movsl
scas
js
imul
fadd
movsb
push
int3
mov
add
loopne
mov
lods
inc
fildl
in
mov
es
ret
mov
nop
sub
mov
mov
adc
adc
iret
xor
outsl
scas
jae
xchg
shll
mov
push
icebp
loopne
or
cmp
xchg
jno
or
sub
test
aam
ret
or
dec
jg
aam
inc
sarb
std
or
dec
adc
mov
sub
pop
fwait
xor
faddp
xchg
xor
das
enter
aaa
repz
cmc
jmp
rol
dec
cltd
fsts
in
jns
gs
test
adc
inc
rcll
adc
out
add
xchg
leave
pop
xchg
jbe
jecxz
adc
mov
cmc
shll
loop
outsb
les
and
jecxz
sub
pop
mov
test
xchg
dec
call
ds
mov
and
arpl
je
callw
mov
rcr
mov
dec
loop
bound
insb
dec
xchg
fcomip
bound
adc
or
pop
out
push
xchg
aam
push
sti
mov
out
xchg
mov
idivl
paddsb
xor
jge
fists
sahf
stos
dec
jnp
fldl
cmp
in
and
cmc
scas
idiv
mov
add
repnz
aad
push
or
push
popf
and
jno
out
pop
dec
mov
cmp
addr16
mov
and
ljmp
jg
std
jp
push
sbb
int
jle
push
xchg
mov
popf
xchg
xchg
cli
inc
sbb
sub
sub
nop
hlt
pop
add
inc
cmc
sarl
arpl
imul
dec
pop
stc
push
fsubr
inc
fdivrl
mov
in
push
js
dec
clc
test
sub
addr16
xchg
frstor
cmp
inc
into
xor
push
push
cmovs
fbld
jmp
loope
jmp
mov
dec
rorb
add
jge
pop
out
mov
mov
mov
bound
in
ret
push
bound
push
dec
mov
push
or
push
js
stc
or
adc
mov
int
xlat
or
lock
js
call
pusha
ds
leave
scas
push
mov
mov
inc
pushf
hlt
add
hlt
pop
mov
pushf
push
aam
aaa
cmp
repnz
mov
xchg
mulb
repnz
sub
insb
clc
fs
call
and
fistl
outsl
or
or
lahf
shr
outsb
pop
sti
hlt
sbb
mov
fs
sub
cmp
gs
lcall
sahf
jmp
jne
fisubs
fdivrl
pop
inc
sub
mov
nop
movsb
fs
push
lods
shll
inc
pusha
pushf
scas
inc
mov
or
mov
mov
icebp
mov
in
xchg
and
xchg
sti
fcoms
rorb
into
insb
fildll
adc
rolb
in
repnz
movsl
mov
addr16
mov
pop
inc
xor
clc
std
dec
sub
cs
in
add
mov
xchg
imul
xor
insl
clc
in
repnz
mov
gs
fidivrl
lcall
jl
push
and
loop
xor
cmp
les
mov
das
fwait
pushf
add
xchg
popf
adc
cmpsb
xor
jno
xchg
aad
dec
fwait
pop
and
jbe
push
and
mov
movsb
jle
das
imul
xchg
sahf
addl
cmp
aad
xor
pop
enter
lods
fdivl
mov
setle
adc
adc
fldl
ljmp
push
adc
mov
cmp
lcall
dec
mov
mov
insb
lds
aas
xchg
cmpsl
into
and
into
imul
addl
hlt
fs
cwtl
cmp
xchg
pushf
jbe
std
jg
lods
sbb
push
lret
jp
ret
push
je
int3
xor
push
xchg
in
popa
sbb
mov
lahf
dec
je
scas
xor
push
jnp
lock
ljmp
push
lahf
sub
enter
lods
subl
jae
stos
xor
stos
cmp
push
stos
fld
pushf
adc
adc
sti
or
sub
or
mov
mov
lea
loop
adc
dec
ficomps
loopne
sbb
int3
loopne
int
push
mov
shrb
fimuls
icebp
sbb
sbb
cmpl
sbb
test
jp
xchg
mov
stos
mov
or
test
pop
or
adc
mov
in
arpl
mov
in
cltd
add
rcr
shlb
pop
cmp
icebp
fwait
pusha
sbb
xchg
repnz
mov
adc
pop
lea
mov
nop
dec
outsl
inc
sbb
or
fwait
test
repz
adc
int3
testl
xchg
in
adcb
or
or
lds
mov
addr16
sti
pop
iret
adc
in
inc
into
out
fcoms
mov
xor
popa
jo
add
leave
mov
sarb
cmp
jmp
jo
gs
add
arpl
push
pop
push
scas
lods
fucomip
add
outsb
addr16
add
adc
out
jge
xchg
mov
sub
and
in
jmp
dec
bound
cld
sub
dec
call
js
mov
jge
mov
jnp
sub
jo
xchg
jl
rolb
sbb
ss
in
or
xchg
dec
add
ret
jmp
dec
es
sahf
jbe
cmc
gs
sub
xlat
loopnew
push
test
sbb
data16
or
dec
adcb
push
pop
inc
int3
jns
push
fcompl
mov
out
stos
xchg
inc
mov
xor
adc
clc
cmp
repnz
push
mov
inc
xor
jle
test
dec
jge
adc
movsb
push
movsb
fistps
daa
pop
lods
stos
lds
mov
push
jmp
das
cmp
je
das
movsb
sub
cmp
pop
sbb
dec
leave
sub
fidivl
movsl
xor
imul
jecxz
xchg
fadds
cli
int
lock
enter
dec
rol
arpl
inc
scas
icebp
dec
adc
xor
pushf
push
stos
imul
aam
sarl
nop
push
push
arpl
and
mov
out
test
popf
push
lret
sahf
popf
cmc
mov
pop
fmull
mov
mov
lcall
xchg
mov
lea
sub
out
aad
inc
add
sti
cmp
ret
inc
and
jecxz
ret
mov
imul
pop
or
adc
jo
push
mov
insb
test
out
loope
jmp
cs
lar
arpl
popf
pop
std
inc
mov
inc
aad
mov
sub
add
pop
jb
sbb
lock
xchg
ret
out
dec
xchg
or
jge
and
mov
jo
add
cmp
clc
inc
xor
dec
mov
pushf
je
add
into
hlt
cmp
loopne
inc
push
lret
xchg
pop
mov
sub
jmp
nop
dec
in
jecxz
mov
stos
jg
cmpb
mov
lods
jb
pop
mov
or
cld
add
out
fwait
bound
dec
xchg
cmp
xor
push
into
lcall
or
scas
jge
addl
and
mov
jno
xor
enter
jbe
andb
add
jnp
fs
scas
mov
test
and
inc
not
or
push
push
imul
mov
xorb
push
jmp
pop
mov
shll
push
ret
loopne
bound
aam
addr16
out
add
cmpsb
bound
jno
mov
dec
mov
aam
fst
cld
pop
dec
or
push
dec
pop
outsl
xchg
push
lcall
mov
sbbb
and
out
push
mov
xchg
xchg
imul
lahf
enter
mov
push
scas
xor
test
movsl
ss
sub
mov
jmp
dec
cli
mov
sbb
push
stos
das
dec
xor
xchg
jae
push
inc
in
add
or
sti
cmp
xlat
mov
cmp
repz
out
mov
or
xor
shll
pop
push
sub
and
dec
jmp
cmp
sahf
scas
pusha
nop
xchg
icebp
and
or
or
xchg
ftst
scas
out
lcall
js
jmp
push
scas
sub
call
xchg
xchg
cmpsb
mov
dec
in
enter
xor
mov
out
cli
fbstp
ficoms
pop
adc
jno
dec
xchg
sub
jmp
mov
sbb
cmp
in
add
ja
pop
push
fildl
push
add
ficompl
adc
in
imul
into
in
push
pop
inc
gs
push
or
pop
data16
push
jb
sub
call
outsb
daa
inc
addr16
pop
ja
pop
mov
daa
das
sub
rolb
sbb
push
sub
in
out
nop
fisttpll
xlat
pop
xchg
adcb
push
and
pop
mov
dec
cli
cmpsl
jb
outsb
mov
rorl
out
add
sbb
push
xorb
shll
inc
ret
ret
outsl
pop
pop
add
sub
jmp
and
dec
mov
mov
incl
insl
insl
and
rorb
fcompl
mov
adc
adc
mov
out
lahf
lcall
jge
andl
cmc
into
in
dec
dec
faddl
sbb
dec
pop
jae
addr16
mov
or
je
sbb
mov
cli
je
cwtl
mov
mov
inc
rolb
add
out
mov
xchg
mov
rcll
xchg
mov
rorl
push
mov
ja
loop
pushf
xchg
jp
mov
ret
lods
testb
xchg
jecxz
xchg
ficompl
or
repz
pop
mov
push
push
sbb
popa
stos
mov
cld
movsb
mov
stos
jno
enter
fisubs
dec
push
repz
imull
dec
loop
jne
add
xor
testb
lock
scas
popf
aaa
popf
ja
dec
xchg
mov
in
or
jl
clc
and
mov
jns
xor
aad
inc
jg
push
cld
pop
shl
dec
pop
dec
rcr
cmc
mov
out
out
int
fs
adc
pop
cld
popf
mov
cmp
aad
or
test
enter
hlt
inc
stos
adc
adc
repnz
or
xchg
mov
jo
jecxz
js
jmp
cmp
inc
jbe
mov
mov
cmp
hlt
inc
inc
shll
sbb
jne
popf
adc
popf
shlb
mov
aaa
lret
or
push
mov
sti
movsb
test
push
outsl
jp
sbb
sahf
mov
xor
push
lahf
mov
adc
mov
call
and
push
or
clc
inc
ljmp
insb
mov
fsubrp
jo
mov
das
pop
xchg
sbb
imul
test
mov
adc
sub
push
add
rol
push
mov
add
insl
fdivs
mov
xchg
and
add
sti
xchg
dec
xor
sti
cmpsl
out
cs
lcall
int3
mov
and
xlat
mov
adc
adc
sbb
enter
out
xchg
es
lds
cwtl
sub
lcall
mov
jl
sbb
imul
movsl
pop
outsl
cmp
stc
lock
push
ret
fucomi
out
in
or
mov
stos
cmp
int3
pop
aad
popf
xchg
or
fnsave
sbb
sub
pop
fs
sub
push
stos
xchg
je
and
mov
dec
sbb
mov
aam
or
fldcw
mov
push
dec
push
jp
subl
xor
mov
lcall
push
add
out
pop
mov
cltd
sub
sbb
pop
sub
push
or
das
dec
fs
popa
fdiv
push
sub
movsl
jo
cmp
pop
aas
inc
jle
data16
sub
fwait
push
fmuls
loopne
jnp
push
push
lea
cmp
sub
push
push
daa
test
push
test
inc
repz
pop
inc
pcmpeqw
lretw
mov
jae
pop
mov
mov
jns
add
dec
or
std
and
sub
int
adc
out
adc
in
mov
pop
inc
and
popa
leave
dec
lahf
je
repnz
lea
sbb
icebp
imul
rolb
lahf
add
cmpsl
mov
in
fistpll
shrl
flds
fcomp
sahf
lods
leave
sub
jmp
pop
shl
pop
or
adc
enter
push
fldenv
pop
outsl
push
insl
lret
fs
or
and
xor
cltd
out
or
mov
cmp
enter
mov
mov
enter
stos
inc
ja
loope
outsl
or
fidivrs
daa
sahf
in
inc
sahf
inc
shll
fisubl
mov
sub
mov
fbstp
pop
shl
movsl
dec
mov
mov
test
xchg
ja
inc
mov
xchg
addr16
cmpsl
cmp
aad
stos
mov
cmpsl
insl
out
xor
xor
sbb
mov
adc
cmpsb
pop
or
test
aaa
pusha
or
adc
addb
sbb
popf
jo
pop
shl
jb
or
stos
push
scas
xchg
add
mov
andl
fisubrs
orb
mov
adc
mov
or
jne
jl
popl
ja
jmp
mov
shrl
mov
imul
push
dec
jmp
adc
orb
pop
fldenv
outsb
into
xor
in
pop
add
lods
adc
push
adc
cltd
mov
bound
dec
cli
shrb
jg
leave
sub
pop
xchg
outsb
inc
fsubp
sbb
xor
dec
mov
cwtl
inc
jp
xchg
sub
mov
push
xorl
mov
sti
jo
int3
rolb
pop
push
out
push
add
popf
jnp
in
movl
into
addb
mov
shll
xchg
rorl
xchg
mov
push
sar
shl
lea
mov
roll
repz
ret
mov
sbb
add
adc
xor
xor
in
repz
cltd
shrl
into
or
pop
repnz
xchg
and
sub
stos
in
xchg
jge
and
sub
call
mov
mov
or
js
test
nop
fsubrl
daa
mov
jmp
sar
cmc
imul
adc
outsl
mov
dec
jns
js
push
xchg
lods
adc
lret
sar
fst
xchg
push
addr16
xchg
rorb
cmp
inc
das
push
push
sarb
jmp
es
cmpsl
sub
in
sub
pushf
mov
cmc
dec
nop
sub
xor
adc
nop
pop
andb
pop
xlat
out
jae
dec
out
sub
sti
scas
push
mov
sub
push
js
repz
aas
jg
pop
pop
cmpsb
mov
mov
mov
hlt
pushf
push
push
iret
mov
btr
push
pop
dec
push
insb
lret
cmpsb
cmp
loop
lods
add
pop
sub
adc
push
add
div
scas
mov
mov
jle
daa
in
or
push
and
cli
loop
add
push
cs
cmp
in
adc
notl
repz
xor
stc
jno
jmp
js
int3
xlat
push
shll
cli
lret
push
adc
xor
scas
pusha
mov
mov
sbb
inc
out
dec
lcall
adc
mov
adcl
adc
ja
insl
dec
je
pop
fcmovnbe
cwtl
inc
and
aas
push
mov
mov
cmp
sti
loopne
xchg
mov
sbb
adc
xchg
jbe
fisubrl
adc
sbb
popa
cs
mov
lock
jle
sub
xor
daa
imul
rclb
lret
adc
addr16
lods
mov
popf
add
pop
and
nop
dec
dec
loope
ucomiss
andb
or
outsl
shlb
mov
jp
or
sub
jae
call
and
mov
mov
mov
stos
pop
popf
cli
jbe
mov
dec
jo
jmp
popf
dec
lea
fbstp
repnz
test
lds
sarl
adc
js
mov
push
add
push
xor
jns
ds
orl
repz
mov
pop
out
add
cmp
and
xchg
movsb
inc
and
xor
js
cmp
push
add
mov
jnp
push
sub
push
xor
inc
lock
outsb
jbe
xlat
adc
or
sahf
stos
fisubrl
mov
lret
scas
push
insl
adc
mov
sbb
cltd
aad
or
jmp
loope
and
push
mov
mov
xor
fiadds
fcomi
jnp
imul
loope
hlt
mov
cmpsb
test
fsubp
lahf
pop
mov
sbb
push
movl
rcl
push
sub
int
jp
lods
lds
jge
pop
dec
sbb
pop
sahf
pop
jle
push
pop
adc
gs
mov
cvttps2pi
xchg
jge
mov
mov
fwait
test
aaa
in
lcall
mov
push
inc
pop
mov
ret
ss
add
fsubrl
pop
lods
insl
fcmovnu
jne
mov
das
dec
in
sbb
adc
push
mov
pop
add
in
pop
inc
cs
xlat
cmp
or
mov
cltd
push
pop
mov
clc
movsb
test
jmp
mov
dec
and
hlt
xchg
lahf
push
vmwrite
and
jno
mov
add
inc
shll
mov
or
push
inc
pop
or
cwtl
outsl
push
pop
jb
inc
sti
pop
out
fnsave
sub
outsl
cwtl
lret
mov
dec
bnd
imul
push
xchg
xchg
mov
xchg
stos
add
pop
mov
out
pop
pop
lcall
daa
add
jne
and
push
rcl
jae
aaa
jecxz
push
arpl
repz
cmp
sub
insl
pop
adc
mov
push
push
push
gs
adc
or
push
or
jp
jno
into
mov
and
cmp
sub
or
push
push
mov
push
push
push
xor
adcl
inc
scas
and
mov
xchg
imul
xchg
or
aad
jns
clc
jle
ds
or
pop
sbb
popf
test
jp
jae
cmp
cmpsl
lret
std
decb
and
jp
daa
and
sbb
in
jmp
mov
icebp
mov
dec
movsb
mov
xchg
insl
inc
iret
and
xor
pop
jnp
dec
mov
push
popf
popa
out
mov
mov
orl
fsubs
popf
push
loop
es
popa
imul
xchg
mov
inc
add
jnp
bound
adc
push
and
ds
loope
movsb
addr16
cmp
fcmovnb
das
pusha
aaa
scas
jne
jmp
sbb
clc
dec
inc
sub
dec
or
jns
imul
mov
leave
mov
sub
dec
or
jns
imul
mov
leave
mov
sub
sbb
mov
pop
mov
mov
leave
mov
fmuls
sub
dec
or
jns
imul
mov
leave
dec
jno
push
jmp
call
idivl
leave
cmpsb
mov
stc
mov
addr16
ja
push
sub
sbb
sbb
pushf
call
idivl
cmpsl
mov
js
push
ja
bound
pop
sbb
or
inc
sbb
dec
out
mull
cmpsl
mov
xor
sub
dec
dec
inc
push
inc
xchg
mov
mov
movsb
mov
stos
pop
cmp
cmp
mov
bound
or
adc
adc
pop
lea
xchg
xchg
sub
adc
push
sbb
fstpl
je
sbb
lods
pop
lods
xor
jmp
je
inc
push
mov
clc
insl
sub
stos
xor
and
add
repnz
inc
xchg
push
jns
push
repnz
pop
sub
sbb
aaa
pop
pop
in
clc
sbb
inc
or
js
testb
pop
mov
or
pop
loopne
add
pop
sahf
jne
fstps
incl
inc
sbb
sub
insb
push
rcll
mov
inc
sbb
or
mov
out
negl
xchg
cwtl
cmpsl
cs
inc
repnz
addr16
jo
and
sub
or
lcall
rol
in
ret
js
cmp
xor
pop
dec
jae
push
jno
insl
push
mov
lea
rol
int
insl
lock
pop
add
and
jno
dec
arpl
fwait
jmp
test
cwtl
cmpsl
mov
pop
addr16
ja
pop
sub
sbb
or
clc
call
idivl
cmpsl
mov
pop
addr16
ja
pop
sub
sbb
or
clc
dec
lcall
mov
xor
inc
adc
lock
push
fwait
dec
cmp
int3
jl
pushf
scas
pop
or
sub
out
and
movsl
push
in
push
fsubr
pop
shrb
adc
dec
lret
ljmp
testl
dec
cmpsl
mov
cmp
sub
push
cbtw
rcl
jb
xchg
or
and
xchg
push
push
dec
int3
mov
ss
push
into
or
mov
sbb
clc
pop
mov
push
loopne
adc
inc
xchg
outsl
fistps
adc
or
lcall
jp
sub
or
scas
fs
pushw
idivl
fisttpl
push
cmp
in
inc
popa
sub
clc
bound
into
outsb
cld
cmp
xor
push
fsubrl
aam
iret
repnz
inc
inc
jg
aaa
aad
mov
test
adc
addr16
mov
xchg
outsl
test
scas
mov
mov
mov
out
add
cmpsb
pushf
shl
js
inc
dec
ljmp
lock
push
inc
ja
pop
nop
les
rorl
test
pop
cld
mov
stos
rcrl
jb
inc
and
fwait
lahf
scas
or
outsb
mov
mov
pcmpgtw
scas
or
inc
andb
mov
popf
test
pop
lcall
add
mov
add
repnz
scas
subb
pop
jno
sbb
dec
xchg
pop
ja
and
sub
cs
sub
mov
lahf
push
pop
in
jecxz
mov
pushf
lahf
or
adcb
cmp
and
imul
mov
xor
push
fldt
loope
pop
loopne
out
dec
sbb
jb
jns
sbb
lahf
mov
cld
insl
dec
fstpt
test
mov
dec
sub
aam
lahf
popf
jl
mov
dec
aaa
pop
adc
fldl
sbb
and
bound
mov
sahf
adc
mov
cli
fstp
scas
popa
bnd
aaa
outsl
lds
push
popf
mov
popf
test
nop
stc
fwait
repz
push
inc
loopne
push
adc
daa
mov
leave
or
xchg
in
jae
daa
mov
mov
adc
mov
xor
add
mov
push
pop
or
cs
clc
leave
xor
scas
or
jle
xor
inc
cli
aad
add
mov
cs
ret
pop
inc
mul
into
mov
imul
test
sbb
xchg
pop
lret
ror
push
sbb
fneni(8087
sub
das
jle
hlt
sbb
fwait
adc
jae
decl
les
and
jno
clc
fnstcw
or
std
std
in
mov
mov
mov
cmp
pop
cli
mov
cmpsb
out
sbb
ja
mov
cmp
mov
aas
pop
add
xchg
daa
cmp
or
push
pop
push
dec
add
rcrb
test
js
cmp
push
jns
std
cld
adc
ret
sub
fwait
es
mov
cbtw
stos
mov
jle
inc
cmp
inc
jge
add
fnstcw
push
jne
movsb
call
shlb
fs
int3
and
xor
pop
je
mov
sbb
sbb
xlat
dec
and
into
add
out
and
sub
aaa
mov
insb
js
faddl
dec
push
inc
sub
xor
sub
mov
xchg
mull
ret
lods
pop
loope
jmp
lods
dec
ss
xorl
fidivrs
dec
mov
xor
or
xchg
fabs
repnz
adc
lods
test
mov
mov
jl
mov
jbe
mov
movsb
stc
xchg
js
in
mov
jmp
sbb
mulw
jecxz
jns
retw
sub
mov
and
mov
xchg
scas
add
sbb
cmp
pop
push
push
xchg
js
jge
daa
test
call
jnp
jmp
lcall
mov
ljmp
out
mov
ss
jmp
pop
push
outsl
test
lods
dec
das
xchg
lds
gs
adc
setl
sub
loopne
lahf
push
popa
mov
jp
push
loopne
push
mov
fists
mov
cmp
sahf
mov
or
subl
or
out
adc
out
and
adc
or
fdivl
inc
fbld
imul
outsb
clc
movsb
adc
out
and
daa
sbb
pop
xchg
je
and
jb
add
and
push
inc
jl
fs
scas
add
xor
jg
lea
xor
lds
fwait
mov
inc
popa
cmpsb
inc
mov
jp,pn
mull
mov
xor
xchg
rcll
mov
inc
pop
or
test
mov
sub
or
cltd
mul
sub
rcr
lahf
test
ret
mov
cmpsb
fstl
mov
cwtl
dec
add
les
test
idivl
push
mov
sub
lea
test
sbb
jg
sbb
push
xchg
ljmp
cltd
cmp
sbb
lods
mov
addr16
fbstp
dec
push
inc
fsubr
jne
and
push
fisttpll
push
mov
pop
mov
cwtl
xchg
dec
adc
adc
or
div
pop
adc
in
mov
mov
xor
sub
sub
fldl
mov
jb
add
in
dec
ret
dec
ds
jnp
les
das
jl
pop
dec
sbb
xlat
clc
sub
loope
dec
mov
xor
dec
push
outsl
pop
es
aad
adc
mull
pushf
pusha
mov
outsl
jmp
xor
inc
les
add
sub
sub
or
push
add
xor
jnp
sahf
movsb
xor
pop
rcrl
cmp
popa
aam
dec
cmp
aad
out
jecxz
dec
insb
mov
negb
addr16
cs
cmp
pop
xchg
fbstp
mov
add
or
enter
pop
dec
cmpsl
jns
jbe
addr16
mov
push
or
pop
or
lcall
xor
sbb
dec
sub
push
cli
push
test
mov
jb
lret
pop
mov
dec
mov
stos
mov
mov
test
dec
sbb
push
hlt
fcoml
dec
pop
test
push
sarb
popf
shlb
inc
ds
movhps
idivb
xor
or
repnz
add
rolb
xchg
clc
dec
inc
leave
xchg
mov
dec
xor
cmp
xlat
or
mov
jl
push
jl
ret
lcall
lahf
dec
cmp
xor
mov
mov
cwtl
pcmpgtd
add
dec
and
jle
push
fsub
pop
add
mov
jle
enter
jp
push
ja
jmp
fs
clc
jno
sbbb
or
adc
sahf
dec
inc
or
adc
pop
bound
icebp
pop
jle
jbe
mov
xor
out
pusha
fs
jo
mov
pop
or
out
sbb
pop
aaa
inc
clc
in
push
dec
xchg
and
ret
push
add
jg
cmp
arpl
add
cld
fsubrs
dec
stos
popf
addr16
cmp
add
sbb
push
insb
adc
scas
inc
xor
lods
roll
xor
rclb
pop
outsb
adc
das
mov
or
pop
adc
imul
pop
fwait
push
jmp
jmp
jb
jecxz
lods
cli
add
daa
mov
push
jb
sbb
add
test
pop
pop
pop
cmp
fs
ret
xchg
dec
jl
popa
les
fnstcw
call
jb
adc
out
push
in
mov
add
testl
out
leave
cltd
shlb
push
pusha
nop
inc
jg
and
xor
dec
insl
test
shl
push
dec
inc
sub
push
pop
rcrb
xchg
call
clc
xor
sbb
pop
outsb
mov
add
mov
dec
dec
lds
lret
test
aas
adc
xchg
push
jo
cs
push
lock
xor
dec
dec
hlt
mov
cld
jmp
lock
mov
sub
add
insb
dec
sub
stos
jmp
add
xchg
push
pop
stc
out
aas
cltd
aad
fsubr
sahf
cmpsl
lahf
cli
and
mov
in
outsb
add
sub
lock
or
mov
or
out
add
pushf
cld
and
lret
mov
push
out
pop
out
dec
cli
out
mov
je
or
mov
cmpsl
push
scas
lock
dec
shll
mov
mov
xor
mov
adc
jecxz
hlt
call
xchg
cmp
push
pusha
pop
es
jne
negb
push
sti
or
repz
dec
cs
xchg
sub
mov
out
bnd
or
sarl
cmp
xorl
mov
or
out
push
cmp
pop
out
je
call
das
std
xor
jg
xor
or
js
mov
popl
push
nop
and
adc
dec
repz
mov
popa
rorl
call
ss
popa
add
xor
add
dec
lahf
mov
dec
mov
adc
call
cmp
and
pop
outsl
and
and
dec
ret
rorb
or
or
dec
sbb
stos
or
xor
popa
aaa
cmpsb
push
jle
mov
sbb
shlb
out
stos
ja
push
jbe
sbb
mov
sub
xor
jg
cld
xor
xchg
mov
or
clc
icebp
arpl
popa
jl,pn
sub
mov
or
xchg
cmp
sbb
xchg
sub
push
mov
sub
rol
pop
es
mov
mov
daa
and
mov
shlb
loopne
out
add
dec
cmp
or
add
or
cmp
rorl
push
and
je
lods
scas
rcrb
loop
cmp
das
adc
je
ficomps
jnp
fbld
xchg
mov
shlb
pop
mov
and
data16
test
lcall
lock
out
fbld
add
clc
or
and
xchg
fnstenv
call
aaa
or
jp
cmp
in
sub
fcmovb
pop
das
push
sbb
shr
xchg
cmc
inc
enter
jo
notl
movsl
push
dec
xchg
push
jbe
cmp
dec
jecxz
jmp
push
es
xlat
xchg
int3
dec
popf
in
gs
cmp
add
push
in
inc
or
xchg
pushf
jl
mov
and
xchg
xlat
mov
pop
pop
adc
inc
cmp
push
sub
jb
out
in
xor
jmp
cmpsl
ja
adc
xor
repz
mov
imul
int3
rcll
fiaddl
and
leave
jg
jnp
ja
mov
inc
test
ffree
outsl
shl
jge
inc
sbb
sbb
mov
popa
xor
sbb
repnz
mov
cld
movsb
mov
dec
push
xor
jg
mov
sub
clc
jg
je
push
xchg
cmp
jns
imul
loope
sahf
jae
pop
test
out
pop
cmp
cmp
dec
dec
cmp
cs
ja
fistps
mov
fisubrl
xor
xor
xchg
aaa
in
and
dec
scas
sbb
jns
mov
pop
aaa
add
add
mov
lahf
mov
sbb
and
nop
dec
mov
sbb
mov
sub
pause
dec
cmpsb
out
arpl
inc
sarl
fmuls
xchg
out
mov
outsl
jno
mul
adc
sbb
cs
fbstp
inc
popa
add
push
ficompl
cmc
jno
aam
dec
scas
jns
arpl
sahf
sbbb
out
cmp
lcall
mov
mov
andl
jno
xchg
mov
or
out
cmpsb
dec
stos
mov
push
adc
mov
sti
mov
xchg
and
mov
push
sti
add
dec
in
loop
enter
inc
sbb
push
jg
int
xor
jmp
sahf
inc
push
pop
sub
hlt
fisubrl
pop
add
adc
lret
sti
and
sbb
jle
stc
dec
xchg
adc
hlt
xor
shl
pusha
mov
jno
aas
lock
fs
je
mov
or
int
xor
pop
mov
add
das
sti
insl
jns
pop
andl
outsb
roll
cmp
pop
dec
fwait
push
enter
add
aam
sub
sbb
das
fmuls
push
cmp
push
mov
xor
add
roll
outsb
pop
scas
cmpsl
jge
lds
xor
sbb
mov
xchg
aad
addr16
or
xchg
push
sarl
lcall
and
push
shrl
xorl
xchg
rclb
lret
sub
outsl
js
es
push
into
out
adc
mov
outsl
shlb
mov
popf
push
pop
cmc
int3
xchg
sbb
adc
sbb
xchg
push
adc
imul
sbb
xchg
sbb
or
mov
in
mov
test
in
addr16
sahf
repz
xlat
or
jg
pop
scas
repz
faddl
ss
push
loopne
mov
jmp
jp
fdiv
push
outsl
repz
stos
popa
pop
xchg
add
ljmp
fimuls
cmp
test
mov
add
add
xor
data16
movsb
mov
movsl
orb
popf
xchg
add
fnstcw
jecxz
mov
xchg
cmp
lret
inc
and
jae
and
adc
bswap
enter
hlt
mov
dec
jl
jle
push
jmp
int
insl
lds
dec
ja
dec
mov
stc
outsl
cli
imul
ret
enter
pop
mov
ret
ret
pop
sub
out
inc
pop
lret
push
imul
inc
cltd
dec
int
pop
pop
das
inc
xor
sbb
loop
popf
pop
in
push
xchg
ss
inc
es
cli
adc
repz
int3
push
mov
dec
push
popa
iret
dec
dec
je
cmp
jnp
push
pusha
dec
data16
push
push
adc
das
scas
ss
jno
lods
cmp
stos
adc
clc
insl
iret
in
movsl
xor
mov
popa
jns
les
imul
pop
incb
pop
icebp
jecxz
xchg
jecxz
jp
xor
inc
or
jno
pusha
inc
dec
fnstcw
dec
dec
je
lods
ja
push
pop
mov
push
inc
in
xchg
mov
or
loop
mov
inc
sub
mov
add
sahf
imul
mov
clc
cmp
call
jne
xor
pop
sbb
fidivl
pop
push
jo
shlb
sub
and
sti
stc
ret
pop
pop
pop
jbe
imul
movsb
xchg
sub
pop
scas
cli
xchg
and
out
lock
dec
mov
and
mull
dec
jmp
imul
fistpll
movsb
pop
in
cli
mov
scas
lret
adcb
xor
jl
pushf
aad
push
out
jp
gs
mov
add
push
mov
fcmovu
jp
xlat
mov
pop
fdivrp
scas
mov
into
aad
sub
xor
pop
es
addr16
js
movsb
das
outsb
out
adc
xor
pusha
clc
rcrl
jnp
sahf
and
or
bound
cmp
xchg
sbb
cmp
and
jge
inc
lods
daa
test
xor
mov
push
clc
test
or
cli
add
add
or
outsb
xchg
xlat
and
fiaddl
testl
jae
cmpl
and
mov
mov
daa
shlb
lret
outsl
mov
data16
jo
xchg
lret
punpckldq
cmp
adc
push
xchg
mov
push
cltd
cmp
std
fstpl
fprem
pop
and
lds
push
fwait
movsl
imul
or
cmp
xchg
cld
push
loope
cmpsl
daa
lods
std
jmp
std
add
popf
cwtl
mov
push
int3
sarb
add
out
or
dec
and
cmp
ret
nop
jb
mov
sarb
jmp
test
add
stc
fmulp
push
xchg
stos
jle
hlt
inc
sub
rcll
jl
lods
and
insl
andb
sti
cld
pop
push
lock
mov
repnz
test
lds
jnp
cmpsb
xor
pop
test
mov
adc
out
mov
cmp
add
frstor
ret
inc
jno
pop
xchg
test
cmc
movsl
sub
cmpsb
xchg
push
in
jns
decl
jp,pn
shrl
jge
rcl
dec
pop
jae
fs
ficoms
xor
pop
movsl
sub
out
jmp
in
mov
mov
movsl
lock
jo
je
or
and
clc
inc
aad
aas
sub
lret
jo
or
das
push
rcll
xor
loopne
dec
outsl
adc
pusha
xchg
call
mov
inc
out
movl
mov
mov
andl
inc
inc
inc
loop
mov
cmpsl
shll
leave
mov
fs
fidivrl
insl
jge
mov
dec
mulb
in
inc
lahf
add
mov
lcall
fidivrs
jecxz
pop
daa
nop
ljmp
jne
mov
fidivrl
and
fnsave
imul
xor
push
cmpsb
mov
out
imul
out
xor
movsl
jge
cs
or
ss
bound
lret
adc
pushf
jecxz
push
xor
mov
pop
and
inc
es
test
into
sete
and
mov
cld
lods
jle
cmp
sahf
lods
or
xor
mov
mov
or
addl
repz
xchg
sub
adc
jne
lock
addb
popf
les
mov
adc
xor
mov
pop
cltd
out
call
xor
es
jnp
call
in
dec
mov
adc
ljmp
mov
xor
push
outsb
mov
out
lahf
add
adc
pop
or
dec
sbb
dec
movsb
inc
icebp
mov
lods
sbb
dec
or
dec
popa
leave
bound
icebp
adc
aam
repnz
ret
and
call
sub
add
adc
and
fiaddl
adc
cmp
shlb
stos
push
lcall
fucomp
pop
inc
pop
cmp
iret
push
sbb
push
xchg
sub
aaa
je
lahf
sbb
cmp
mov
xchg
aam
add
lret
out
mov
push
mov
lcall
xchg
lahf
cmp
rol
ficoml
or
mov
imul
cmp
mov
test
cmc
sub
pusha
dec
jne
loopne
pop
leave
and
fcom
jmp
jle
xchg
in
movsl
testl
sub
and
and
sbb
xor
pushf
xor
pop
dec
pop
adc
mov
mov
mov
notl
mov
xchg
es
xchg
mov
jb
mov
xchg
push
je
xchg
jne
fs
lock
sbb
ret
ljmp
mov
xchg
gs
imul
pop
cmovg
cmpsl
bound
inc
inc
jnp
aas
dec
fs
ds
mov
push
mov
mov
loop
shl
push
ja
mov
dec
jnp
or
fsub
xor
in
test
movsl
pop
adc
or
int
addr16
adc
scas
int3
sbb
sbb
movsl
or
ljmp
push
in
mov
pop
test
or
sub
fstps
pop
mov
loopne
xor
data16
sbb
sub
xchg
int
pusha
leave
push
mov
cmc
push
cmp
cltd
or
outsl
add
pop
imul
xor
addr16
mov
popf
fistps
lahf
movsb
pop
divb
xchg
dec
imulb
pop
outsl
push
cmp
mov
jo
lock
or
negl
mov
test
xchg
sbb
pop
pop
pop
adc
repnz
mov
pop
dec
mov
or
mov
insb
pop
sub
pop
pshufw
add
ja
mov
mov
imul
xor
jb
cmp
push
mov
mov
sbb
and
sub
pop
xchg
xlat
int3
or
xlat
repnz
sbb
sahf
ljmp
mov
dec
subl
add
addr16
loope
lock
cmp
inc
xchg
lea
aad
cmp
scas
mov
je
fcoml
lods
aaa
xchg
js
mov
lret
jne
lock
mov
outsb
shll
dec
sti
outsb
mov
push
sbb
repnz
mov
out
push
and
xchg
pop
and
dec
xchg
imul
mov
faddp
add
je
out
dec
lods
and
aad
cmp
cltd
cmp
repz
fs
push
vpmuludq
ret
push
test
pop
fstp
scas
movsb
int3
cmpl
outsb
adc
or
add
mov
lcall
jb
jnp
xor
xchg
outsl
xlat
lahf
out
idivl
cmpsl
mov
pop
addr16
ja
pop
sub
sbb
or
clc
call
idivl
cmpsl
mov
pop
addr16
ja
pop
sub
sbb
or
clc
fcom
mov
xchg
mov
inc
push
ja
pop
cmp
sbb
loopne
in
mov
and
idivl
cmpsl
or
inc
xchg
std
repnz
add
mov
enter
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
dec
into
adc
jle
in
faddl
xchg
add
add
add
or
add
push
add
add
add
sahf
add
add
add
add
add
add
add
add
dec
add
add
add
mov
add
add
test
ret
add
add
add
add
add
in
push
add
add
xchg
add
xor
xchg
cmp
add
add
faddl
push
add
add
add
inc
add
add
add
add
add
add
add
filds
insb
add
add
add
add
stc
add
add
add
and
mov
add
add
push
lods
add
add
add
add
add
cmp
add
lods
add
add
dec
add
add
add
lret
add
add
add
add
add
stc
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
inc
add
dec
add
fldl
inc
add
imul
add
add
add
imul
pop
add
arpl
cltd
add
add
xor
pop
add
add
add
add
mov
sub
add
add
roll
add
add
outsl
add
lea
in
add
add
add
add
inc
add
add
add
add
add
add
add
adc
add
add
add
add
or
sbb
xor
lods
add
call
add
add
aas
add
add
xchg
add
add
push
add
add
xchg
add
add
add
mov
add
add
add
mov
or
add
aas
add
add
add
add
add
add
add
pop
add
cmp
add
lea
adc
push
add
add
sbb
sub
xor
sub
add
lods
add
add
add
add
add
add
jno
lock
add
add
add
add
add
add
add
lods
add
movsl
add
pop
add
add
add
add
jns
add
outsb
add
add
pop
add
dec
add
add
add
add
sub
add
add
aaa
add
add
add
roll
add
add
add
add
add
lock
or
add
lods
add
xchg
add
cwtl
add
add
add
add
add
popf
add
add
outsb
add
add
add
add
add
xor
add
add
aas
add
add
add
out
add
add
test
outsb
add
add
add
add
add
dec
add
add
add
out
add
add
add
add
iret
add
stc
add
push
add
add
add
add
add
add
add
add
xor
pop
add
add
add
add
push
inc
sti
adc
inc
cmp
mov
jnp
dec
mov
add
movsb
jae
xchg
cmp
lret
push
or
jno
scas
jnp
jo
lea
lahf
cld
add
out
pop
sub
jo
insb
pop
ja
scas
adc
or
jnp
and
fidivrl
sub
popf
cmpsb
sub
ja
mov
repnz
sysenter
mov
popf
dec
repnz
mov
mov
pop
pop
xchg
into
adc
fs
cmpsb
mov
mov
and
and
in
sbb
arpl
dec
adc
push
adc
mov
cmc
mov
shrb
ss
mov
jo
pop
cmp
mov
jo
xor
shll
add
sbb
xchg
movsl
jl
pop
or
icebp
pusha
add
and
out
pop
and
into
cmp
mov
stos
pop
lret
push
in
mov
popf
xchg
repnz
adc
outsl
pushf
sub
push
loopne
sbb
mov
mov
lret
jmp
pop
mov
mov
aas
int
mov
lods
or
cmpb
jnp
sbb
lret
lock
push
sbb
cmc
and
icebp
cs
jmp
xchg
xchg
mov
fcompl
jbe
movsl
out
and
jo
fs
mov
jl
xchg
inc
cmp
inc
mov
adc
sbb
xor
test
xor
lock
jnp
es
mov
int
enter
cmp
jl
xchg
jns
addr16
fbld
call
scas
bound
mov
mov
movsl
push
andl
push
pop
cwtl
pusha
scas
inc
and
jb
outsb
inc
sbb
rol
and
xchg
shl
in
ret
in
xorl
push
pop
mov
push
mov
mov
movsb
xchg
sub
outsb
je
push
xlat
insl
aaa
cmp
cmp
popf
mov
sub
pop
test
sbb
push
sbb
clc
xorb
mov
pop
aaa
xchg
and
enter
mov
std
ret
add
popa
insl
repnz
cmpl
adc
add
xchg
mov
sbb
adc
imul
pop
lea
addb
xor
and
popa
std
inc
imulb
push
cli
pop
mov
inc
out
fwait
mov
int3
xchg
jo
out
test
cld
mov
xor
cwtl
std
fucomip
faddl
lock
push
mov
pushl
shl
sub
xchg
push
movsl
inc
das
sbb
popf
ljmp
dec
sub
or
je
scas
xchg
cs
push
clc
outsb
sub
je
js
cld
movsl
subb
dec
test
pop
imul
pop
push
pop
lret
cwtl
mov
or
inc
loopne
dec
inc
dec
fldt
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
