call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
pop
inc
push
jno
popa
xor
bound
inc
inc
sub
rolb
cwtl
icebp
xchg
loope
xchg
movb
push
add
jno
popa
xor
inc
add
arpl
pop
roll
loope
xchg
in
adc
jecxz
repz
movsl
inc
aad
mov
add
xor
inc
roll
test
xchg
nop
repnz
xchg
enter
and
jo
push
push
dec
push
stos
stos
mov
or
insb
sti
loope
pop
sbb
or
pop
sbb
mov
mov
int3
adc
fmul
pushf
leave
mov
dec
outsl
subps
jecxz
orl
jp
ret
inc
scas
shrl
outsl
adc
loope
fs
nop
xor
das
xor
mov
adc
push
arpl
and
and
dec
jae
pop
push
mov
sbbl
aad
out
hlt
ficomps
int
stos
shlb
push
shrl
jle
cld
mov
jecxz
or
mov
xchg
rolb
jne
rclb
xchg
popl
jno
popa
xor
inc
add
arpl
loope
add
icebp
mov
cmpl
aaa
dec
daa
pop
je
outsb
ds
push
movsl
xor
shlb
test
mov
daa
inc
xor
pop
je
dec
add
inc
mov
icebp
loope
mov
rcr
xchg
xorb
inc
repz
dec
add
push
lgdtl
arpl
jae
add
icebp
mov
adc
push
add
jno
popa
xor
inc
add
arpl
jae
add
icebp
mov
adc
push
add
inc
in
pop
push
ffree
and
pop
popa
lret
int3
adc
into
xor
lea
movsb
xor
mov
ret
adc
lret
or
or
sti
fdiv
pop
pushf
pop
push
movd
popf
inc
outsl
insl
dec
inc
cwtl
adc
imul
fdivrl
adcl
ds
sub
pop
rorl
test
sahf
ret
int
jp
sub
pop
sbb
mov
xor
push
stc
call
jle
loop
into
xchg
fcomps
fisubs
pop
mov
stos
push
xor
dec
out
inc
enter
sub
adc
and
clc
or
xlat
mov
jno
inc
inc
xor
add
popaw
pushf
je
adc
mov
outsl
mov
mov
or
mov
ja
or
and
sbb
std
cli
cltd
iret
jno
ds
in
xor
orl
repz
mov
outsb
pop
or
ror
adc
movq
adc
jo
repz
insb
test
cltd
xor
cmp
cmpsl
aaa
inc
ret
rcl
rcrb
add
fsubrl
xchg
and
sub
and
dec
lea
into
fdivs
out
icebp
lods
add
mov
lods
cltd
push
pop
jnp
xchg
sub
cmp
jmp
mov
adc
int
rcll
rcrl
push
xabort
mov
adc
mov
mov
in
arpl
out
xor
and
xor
test
sbb
dec
xchg
les
mov
sahf
adc
xchg
leave
xor
adc
lods
insb
hlt
outsl
repz
cwtl
jp
jmp
js,pt
shlb
cmp
jne
add
sbb
add
adc
cmp
es
test
sbb
insl
jnp
xor
shll
or
xor
mov
jge
dec
lcall
inc
daa
fdivrs
xlat
test
js
loopne
lcall
and
neg
inc
sti
rcrl
cmp
loope
pop
xor
jbe
jl
xor
scas
jecxz
cmp
ja
loope
sub
test
sub
xchg
inc
fwait
out
cmpsl
add
dec
pusha
call
cwtl
ss
sbbl
sbb
icebp
mov
test
pop
sbb
sbb
sub
rcr
xchg
je
adc
repz
mov
ret
mov
push
add
rorb
xor
xor
mov
dec
lcall
call
cmp
push
push
cmc
inc
clc
mov
fnstenv
leave
ja
std
push
aam
aas
arpl
and
and
push
fisubl
fxch
int
pop
daa
push
mov
fimuls
loop
popf
fists
mov
lahf
or
inc
pusha
std
test
mov
stos
inc
lret
add
sub
mov
clc
dec
rcl
push
out
push
sub
gs
data16
stos
xor
dec
adc
inc
xchg
dec
fists
cwtl
rcrb
mov
xchg
push
cld
popf
data16
shl
jmp
mov
repnz
xor
pushl
jae
std
inc
out
adc
iret
xchg
test
xchg
movsb
pop
stos
leave
inc
out
in
jl
shlb
dec
test
push
fidivs
js
int3
mov
int
test
mov
out
and
shr
mov
mov
in
mov
scas
cli
jle
lods
outsb
out
push
filds
mov
div
scas
test
mov
call
dec
dec
sbb
xchg
add
dec
mov
cld
cltd
aas
fwait
dec
mov
mov
out
cli
xor
dec
sbb
loope
xlat
dec
push
add
lock
pop
lods
call
icebp
sub
ljmp
mov
lret
pushf
sbb
arpl
jmp
push
in
and
pop
pop
push
add
and
jmp
cmp
and
pop
mov
mov
mov
rcrl
mov
sti
mov
mov
inc
add
je
fwait
insb
scas
xor
mov
jno
dec
xor
jl
xchg
repnz
and
mov
mov
add
cmp
repz
inc
inc
fstpl
outsb
add
dec
rcll
push
int3
or
mov
or
lret
dec
sub
push
cs
je
dec
mov
popf
pusha
daa
sbb
sub
lods
inc
push
push
ds
pop
push
cmp
mov
sub
mov
and
lcall
mov
movsl
cmc
pop
outsl
lods
ret
shl
arpl
rol
xor
ljmp
mov
dec
les
cmp
sub
jmp
cmp
inc
hlt
ret
fmulp
sub
cltd
sbb
mov
insb
insl
lds
mov
cmp
push
fnstenv
leave
sbb
sbbl
mov
into
aam
in
push
inc
inc
xor
mov
ja
jg
ret
or
loop
lcall
test
mov
jle
pop
mov
icebp
sub
lcall
pop
add
stos
inc
movsl
cmpsl
gs
add
rorl
add
lock
aad
inc
fldt
inc
jnp
bound
cmp
and
lods
pop
jp
xchg
clc
mov
fs
xor
rolb
jl
jae
xor
in
dec
sbb
adc
xor
fucomip
cmp
push
out
loop
or
adc
sub
cmp
cmc
std
jae
shlb
mul
adc
flds
aaa
pop
daa
dec
popa
je
test
arpl
or
pop
or
dec
jne
push
lods
sbb
int3
das
cmpsb
scas
loop
sub
lret
test
mov
and
jge
mov
orb
test
xlat
data16
sbb
push
dec
cmpsl
mov
pusha
cli
outsb
out
jnp
ficoml
mov
fsubl
cmpsb
movsb
jmp
fstl
push
lods
mov
addb
push
or
inc
fistpl
xlat
cmpsb
stc
cmpsl
pop
aas
repz
stc
push
xchg
or
shl
adc
les
ret
jmp
js
lods
les
adc
insb
xchg
ds
lods
and
xor
pop
adcl
xchg
inc
iret
dec
test
xchg
dec
xchg
movsb
sarb
fsubr
cmpsb
fldl
outsl
push
push
lret
enter
jl
inc
scas
popa
hlt
loope
jmp
mov
adc
xchg
dec
jo
push
mov
sbb
push
xor
adcl
movsb
dec
and
or
shlb
add
dec
sub
mov
scas
xchg
movsl
cmp
jb
mov
jbe
sub
push
push
pusha
mov
push
rorb
and
in
xchg
fsubp
pop
out
sbb
dec
mov
adc
sbb
mov
push
sub
sbb
dec
sti
or
cmp
fisubl
clc
rolb
mov
das
lock
nop
test
push
mov
lods
xchg
repz
andb
ret
out
mov
push
in
mov
pop
mov
pop
xor
add
xor
insl
stos
inc
faddl
repz
and
mov
xor
lds
out
sbb
xchg
or
fs
sbb
dec
cmp
adc
xchg
out
js
push
lods
push
adc
pop
push
inc
repz
or
jle
in
mov
roll
cmc
pop
mov
aad
data16
jge
int3
leave
decl
mov
fcoml
aas
gs
or
inc
ret
lahf
jl
cmp
push
pop
add
xchg
outsl
outsl
mov
inc
or
or
lahf
push
add
cmp
cmp
inc
push
bound
cmp
push
sub
sti
mov
out
cmp
sbb
jno
jb
popf
pop
enter
shl
imul
ljmp
addl
xchg
pop
int3
mov
pop
insl
inc
scas
lods
xchg
jecxz
mov
xchg
shl
mov
js
js
inc
aaa
xchg
add
jne
aad
xchg
inc
mov
fidivl
jle
mov
scas
into
scas
out
std
movsl
leave
daa
sbb
inc
push
add
stos
push
or
dec
inc
fisttpl
jl
sbb
jmp
mov
mov
int
xchg
sbb
push
in
fsubs
mov
and
or
hlt
mov
sub
inc
xchg
inc
es
inc
xchg
sub
mov
jecxz
sub
and
sahf
sbb
fwait
mov
xchg
pop
sbb
gs
sub
jle
mov
ret
push
ds
je
xlat
mov
movsb
push
rcrl
or
pushf
imul
fisttpl
add
sub
shlb
ja
or
je
incl
add
cmp
dec
mov
mov
adc
popf
orb
inc
not
mov
cmp
adc
dec
outsl
repz
cmp
sub
scas
add
pop
jp
fmuls
jno
movsb
inc
sub
in
call
adcb
in
repnz
mov
push
ret
sbb
add
je
push
pop
cmp
or
mov
adc
aas
push
loopne
sub
sub
fsubr
mov
mov
jg
fisttps
mov
lods
outsb
fnstenv
xor
inc
orb
sahf
lods
or
pop
mov
popf
aas
xchg
in
repnz
in
nop
cli
cld
pop
dec
and
shrl
or
pushf
sub
sbb
mov
insb
or
add
lea
cli
dec
dec
jnp
aad
pop
clc
ds
outsb
add
rcr
mov
repnz
push
mov
lret
jnp
jb
push
or
int
into
xchg
test
stos
mov
pop
cmp
movd
mov
icebp
pusha
ds
int3
xchg
icebp
push
icebp
outsb
addr16
stos
or
enter
and
mov
xor
fnstsw
wrmsr
loop
sub
mov
imul
mov
adcb
dec
aaa
roll
push
push
pop
sbb
inc
and
and
jbe
dec
popf
shrd
jbe
das
rcrl
pop
popa
sbb
dec
inc
adc
andb
sub
adc
jae
jmp
iret
push
mov
outsl
bound
jbe
ret
mov
inc
mov
dec
fucomip
mov
xchg
mov
inc
in
jp
add
bound
out
mov
adc
sub
cmp
pop
nop
mov
dec
lahf
inc
iret
scas
mov
xor
inc
call
lahf
popf
imul
imul
aam
ret
inc
xor
in
xchg
fmul
add
or
aas
sbb
cmp
mov
push
mul
add
cmpsl
imulb
rcrl
lahf
insl
and
pop
xchg
xchg
mov
int
mov
loope
test
inc
aad
fstps
scas
mov
rcl
push
push
addr16
inc
mov
inc
stos
push
jbe
out
ljmp
mov
imul
or
adc
pusha
addr16
enter
lret
shlb
shrl
lcall
pop
mov
cmp
pop
cmp
mov
stc
es
popf
aas
rcr
inc
je
mov
xchg
ljmp
lods
fs
or
jo
shl
int
sbb
mov
mov
pop
call
add
mov
jge
add
hlt
sbb
enter
mov
push
stos
push
pop
inc
movsl
out
jne
testb
dec
in
aam
popf
loopne
sbb
int
dec
test
xlat
push
sub
aaa
jo
shrb
nop
mov
sub
iret
pop
loopne
sub
pusha
sbb
inc
push
ficomps
sbb
scas
dec
les
inc
into
mov
sub
outsl
lock
adc
pop
inc
xchg
orb
dec
mov
ret
cmc
jns
icebp
jo
xchg
leave
mov
adc
mov
xor
repnz
sti
shll
out
mov
xlat
cmp
in
stos
enter
mov
pop
xchg
enter
pop
jns
daa
or
pop
mov
das
or
mov
stc
fidivrs
xchg
xor
movsl
fwait
push
inc
lods
cmp
mov
sub
sbb
sbb
jb
mov
sbb
adc
mov
xchg
fisttpl
std
popa
lds
cmp
add
pop
xchg
loop
test
nop
mov
or
push
push
push
lret
int
or
lods
inc
and
es
mov
insl
fistps
pop
xorl
cltd
or
and
push
or
xorl
sti
xor
mov
jp
inc
pushf
popf
xchg
cmpsl
and
adc
leave
or
add
shrb
push
aam
push
sbbb
and
nop
pop
orb
xchg
push
mov
mov
xlat
stos
and
mov
jns
in
mov
xor
nop
fst
dec
imul
sti
add
das
in
xchg
pop
lret
arpl
add
push
icebp
push
mov
or
pop
sub
xchg
xor
dec
stos
psubw
rcrl
stos
push
in
jns
fwait
jno
push
inc
inc
idiv
das
jmp
push
loopne
mov
push
into
enter
jbe
les
add
jl
pop
mov
lods
lret
jae
dec
stos
fadd
xor
lock
sub
fiadds
sub
loop
adcb
cmpsl
ja
shll
jo
test
clc
or
push
dec
andw
or
test
rorl
fistps
test
xor
dec
mov
outsb
nop
cmp
iret
jns
loop
mov
push
mov
fwait
xchg
rcpps
roll
test
inc
fwait
mov
and
adc
rorb
and
bnd
inc
cmpsl
test
push
shl
es
cmpsl
jge
clc
bound
sub
sub
sahf
jg
ret
mov
mov
es
pop
rcl
mov
pushf
jno
pop
or
mov
dec
test
int3
stc
lahf
sbb
push
lahf
popa
inc
aas
mov
pushf
lods
subb
stos
in
jg
xor
inc
mov
jmp
lea
and
push
in
push
loop
sti
repnz
and
jnp
fisubs
adc
push
lods
xor
mov
and
stos
lds
cmp
add
push
pop
dec
jae
xlat
inc
xchg
xchg
cltd
stos
popl
jo
enter
xor
call
test
jl
and
push
push
movsl
mov
cmc
test
pop
pop
xor
mov
xor
enter
jo
and
jmp
sarb
dec
mov
sub
inc
jl
or
xchg
cmp
cmp
pop
enter
and
inc
xchg
dec
push
das
fcomi
test
xchg
dec
call
inc
add
movb
hlt
adc
jle
xchg
in
pop
xor
cmpsb
mov
imul
ret
xor
sub
pop
sub
ror
jnp
inc
mov
fsubrs
push
lret
nop
in
pop
dec
pop
push
test
or
cmpsb
push
mov
ss
pop
cwtl
fs
sbb
enter
xchg
push
jle
sti
push
cmp
ficoms
xchg
imul
push
out
icebp
mov
outsl
in
push
sarb
adc
int3
fwait
dec
pop
mov
addb
xchg
call
ret
mov
jmp
arpl
xor
loope
cltd
pop
mov
mov
daa
rolb
dec
xchg
push
xchg
mov
jmp
jge
adc
and
aam
in
jnp
mov
es
xchg
cld
addr16
notb
iret
pop
cmp
adc
ds
inc
insl
jecxz
lcall
inc
ja
push
mov
outsl
call
or
mov
test
fisubrl
into
pop
repnz
sbb
lods
push
out
pop
sub
fildll
cmp
xor
push
into
adc
in
or
xor
mov
inc
mov
dec
push
lds
pop
add
fistpl
repnz
mov
and
and
push
imul
sub
bound
push
ror
aas
jns
adc
push
dec
add
insb
push
leave
lret
dec
in
mov
aaa
pop
jecxz
loopne
adc
cld
imul
das
adc
and
sub
xor
jb
inc
xor
pcmpgtd
jl
pop
pop
mov
mov
rclb
idivb
dec
inc
jnp
in
xchg
cmc
cs
test
clc
push
nop
insl
insl
sbb
test
xor
inc
dec
sub
push
inc
push
pop
jg
lret
inc
mov
lods
xor
repnz
cmpsl
dec
adc
imul
dec
xor
inc
insl
pop
lds
lods
pop
jnp
mov
dec
xchg
pop
adc
push
pop
xor
cmp
popf
xlat
aaa
addr16
fsubrl
ss
and
dec
xchg
xchg
nop
dec
popa
mov
hlt
push
sub
xor
fiadds
loopne
imull
dec
mov
push
jns
jo
sti
dec
imul
aam
clc
out
int3
jns
or
jl
insl
test
jns
shl
or
fsub
mov
movsl
aaa
fidivrl
enter
repz
fidivrl
push
sub
jge
push
add
dec
fst
cmpl
mov
fistpl
xlat
sahf
movsl
and
xchg
fildll
mov
push
popf
divb
rcrb
sbb
fwait
in
mov
sub
mov
hlt
sti
mov
lea
iret
adc
jp
and
push
push
cmpsl
enter
pcmpeqw
adc
lds
xor
add
out
mov
push
mov
adc
stc
std
les
ret
fs
xchg
icebp
arpl
and
sub
jl
hlt
pop
or
insl
and
pop
cmp
int3
add
in
iret
arpl
cmp
cmc
mov
aad
jecxz
ds
push
sarl
mov
cmpsl
xor
pop
pop
sub
fwait
dec
cmp
loope
push
jne
pop
pop
jecxz
popa
movb
push
subl
add
pop
inc
testl
neg
dec
xlat
push
pop
movsl
pop
ret
fcoml
xchg
jns
mov
pop
std
jae
adc
xchg
push
and
adc
push
sbb
repz
std
jne
les
dec
and
push
icebp
int3
jmp
or
lahf
push
ret
and
cmp
cmp
aam
mov
push
sbbb
push
and
jb
jp
pop
add
lret
shrb
sahf
sub
icebp
mov
movsb
popa
jno
je
cwtl
push
loop
nop
stc
insb
pop
pop
loope
or
xchg
sbb
je
test
fstl
push
and
adc
rcrl
aas
jge
out
dec
insb
fidivl
xor
pop
sub
jo
inc
adc
xor
or
rcrb
sarb
fsubs
adc
xlat
push
sbb
int3
add
jb
xchg
int3
cmp
mov
mov
pop
das
loope
pop
fs
sbbb
decb
jecxz
jecxz
xchg
xor
aas
shlb
in
xchg
lahf
arpl
mov
subl
cmp
divl
cmpsb
in
popf
cmp
cld
mov
cmpsb
scas
mov
pop
pop
faddp
mov
add
adc
out
push
orb
movsl
js
scas
push
in
xchg
push
popa
sbb
fdivrl
push
out
sbb
rcll
std
ss
fdivl
inc
xchg
dec
mov
sbb
mov
xchg
push
dec
mov
push
cmpsl
or
lods
in
fwait
sbb
test
jl
out
pop
mov
mov
push
or
addr16
rcl
dec
mov
es
mov
clc
cmpsl
out
sar
pop
xchg
pop
push
mov
cltd
gs
aaa
call
sub
lds
js
sahf
dec
jnp
xchg
in
icebp
jo
out
sbb
push
sbb
mov
cmc
xchg
test
jns
outsl
sti
mov
cwtl
frstor
pop
fistl
xor
mov
push
push
addr16
cmp
aaa
scas
pop
pop
test
inc
dec
out
add
daa
sbb
xchg
xchg
int
and
and
es
pushf
std
push
imul
sbb
lock
push
adc
push
cli
jge
pop
jle
ret
adc
sub
fcmovne
in
mov
push
add
jmp
scas
clc
mov
xor
xchg
add
in
repz
xchg
dec
push
stos
lods
notl
iret
dec
imul
pop
pusha
loope
cs
imul
imull
and
leave
push
in
adc
adc
fmuls
gs
ds
mov
mov
scas
inc
sub
pop
mov
adc
cs
xchg
out
fcompl
xchg
mov
and
repnz
adcb
fcoml
fists
insb
movsl
mov
stc
mov
dec
mov
hlt
fld
lret
cmp
sbb
int
arpl
std
push
adc
popa
xor
inc
add
arpl
jae
add
icebp
mov
adc
push
add
jno
popa
xor
inc
add
arpl
jae
add
icebp
mov
adc
push
pop
inc
sbb
adc
cmp
and
add
icebp
mov
adc
push
out
divl
popa
jae
inc
add
jecxz
mov
jl
cmp
loope
out
or
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
fistpl
lret
push
sti
ds
xchg
pop
sti
outsb
ficoms
into
outsb
pop
and
jnp
imul
out
sub
fistpl
lret
push
sti
ds
fwait
pop
mov
jle
or
dec
mov
mov
or
cmp
sub
fistpl
lret
push
sti
ds
fwait
pop
mov
jle
outsb
pop
sahf
dec
lods
or
inc
shlb
xchg
jne
inc
cltd
xchg
push
lret
jle
insl
cltd
dec
fnsetpm(287
mov
cltd
sbb
cmp
nop
push
sbb
push
push
ja
push
push
mov
mov
pop
in
mov
testb
in
push
xchg
cmp
mov
xor
arpl
lds
lcall
sahf
and
mov
jae
and
sub
fwait
pop
fwait
dec
inc
jbe
mov
pop
jno
js
sub
into
arpl
cmp
mov
and
aad
mov
dec
popa
mov
imul
xchg
lea
xchg
ds
and
repz
dec
lds
out
sahf
and
daa
iret
or
test
lret
push
sti
ds
fwait
pop
mov
jle
outsb
pop
sahf
dec
mov
imul
sub
sahf
jg
outsl
negl
ret
sbb
sbb
out
dec
xchg
sbb
pop
fidivrs
bound
fdivs
bound
sbb
stos
inc
ds
dec
cld
cmp
cs
jle
pop
pop
dec
fwait
sub
xchg
pop
ljmp
jle
outsb
pop
sahf
dec
mov
imul
sub
fistpl
lret
push
sti
ds
fwait
pop
mov
jle
outsb
pop
sahf
dec
mov
imul
sub
fistpl
outsb
es
push
iret
jmp
add
mov
xor
cmp
mov
mov
or
adc
lods
add
mov
loop
or
subl
or
inc
sti
xchg
dec
filds
push
fsubl
xor
mov
xor
push
add
cwtl
jnp
fs
aad
add
mov
pop
jle
ja
in
lret
mov
je
arpl
out
push
lock
dec
sbb
rorl
divb
fwait
dec
mov
pop
dec
in
cs
xchg
ljmp
add
in
fsubrs
lret
adc
mov
faddp
sbb
adc
stos
xchg
or
xlat
sub
mov
sub
push
jle
pop
out
out
mov
jno
int3
adc
jnp
or
sub
es
pop
ret
sti
mov
sbbl
lock
mov
hlt
fsubl
mov
add
and
jae
popl
jnp
cld
leave
sbb
xlat
aam
andb
rorl
add
mov
iret
dec
xor
cld
daa
fdivp
fisubs
rolb
add
jle
pop
inc
mov
pop
lock
call
out
decb
xor
jne
stos
out
iret
xlat
repz
xor
in
xor
sub
or
getsec
fs
sub
mov
adc
inc
adc
xchg
cli
jg
lock
inc
jecxz
xor
sub
pop
lret
add
mov
nop
push
scas
bound
pop
fisttps
push
cli
mov
cwtl
pusha
jmp
mov
mov
mov
out
mov
stos
xchg
fadd
gs
mov
inc
inc
push
in
sbb
aaa
adc
push
loopne
testb
dec
xchg
shrb
gs
dec
mov
inc
push
outsl
inc
out
inc
pop
dec
adc
dec
and
dec
xchg
rclb
or
or
xchg
aaa
notl
mov
pop
js
pushf
sub
cwtl
bound
jo
mov
jmp
movsb
jnp
sbb
lock
cmpsl
cltd
add
imul
les
dec
int
inc
cmpsb
mov
shlb
fidivs
cmp
jne
cmp
jbe
dec
add
or
and
cmpl
pop
stc
divl
dec
sbbb
xor
in
mov
sti
fbld
ljmp
cwtl
sbb
push
stc
call
out
das
mov
in
dec
aas
jmp
dec
pop
mov
push
pop
push
cmp
jno
test
inc
add
push
jmp
decl
mov
jmp
std
jp
sahf
cmc
insb
sti
adc
ret
repnz
push
aas
inc
das
sbb
into
insl
stc
inc
loop
into
orb
clc
inc
inc
ror
lret
movsb
dec
rclb
lea
push
mov
jp
mov
repnz
adc
int3
jp
outsl
mov
and
std
ljmp
adc
iret
jg
inc
lea
sbb
fstps
sbb
fsubl
sbb
jle
dec
test
mov
pop
xor
lods
jno
hlt
sarl
add
xor
xchg
in
mov
pop
pop
xchg
cmp
enter
xchg
cmpsl
inc
out
insl
jmp
or
sbb
pop
push
mov
sbb
retw
dec
mov
push
dec
sub
sub
stos
mov
movsl
xchg
icebp
scas
rclb
adc
int3
ret
lock
jge
jg
cmp
and
cmp
inc
inc
jmp
out
push
and
mov
jne
mul
dec
fidivrl
ret
adc
scas
inc
ret
pusha
and
mov
stc
test
loope
imul
fcmovb
out
mov
mov
andb
pop
daa
sbb
pop
sbb
push
stos
push
jecxz
int3
sbb
pop
sahf
lds
ret
lds
sbb
mov
outsl
fstl
pop
imul
shl
fimuls
shll
pushl
adcl
int3
loopne
shll
subl
jmp
clc
mov
dec
lret
addr16
les
mov
add
mov
js
xorb
push
aaa
arpl
stos
rclb
xchg
in
cmp
inc
mov
push
mov
dec
movsl
lea
mov
int
adc
stos
sahf
movsb
out
cmpb
and
in
daa
sbb
push
subb
xor
cmp
lds
mov
or
add
push
shl
xchg
adc
dec
ds
xchg
test
out
je
and
xchg
pushf
pop
cmp
mov
sub
xor
stos
dec
add
or
mov
loopne
ret
sti
aas
lret
mov
dec
jle
mov
and
xor
and
addb
xor
sahf
dec
out
stc
mov
lock
sub
jno
dec
test
rcll
aaa
xor
mov
mov
lcall
rorb
cmp
pop
insb
lahf
push
mov
xchg
imul
enter
push
out
mov
add
mov
inc
insl
aam
or
ret
cltd
sbb
jle
pop
push
cmp
das
es
mov
sub
decl
inc
push
arpl
mov
xor
bound
push
cmpb
test
sbb
lods
pop
adc
stos
out
xchg
push
mov
movsb
loope
lret
movsb
mov
js
sbb
imul
push
pop
cmp
mov
inc
mov
mov
mov
lcall
jmp
cwtl
pop
xchg
out
and
adc
loopne
sbb
mov
in
scas
pop
mov
popa
out
inc
ja
insl
lods
push
ja
fstpl
and
idiv
inc
int
adc
cmp
push
movsb
or
inc
sub
adc
inc
cmp
mov
jle
cmpsb
shlb
ds
lahf
jnp
sub
sbb
arpl
ja
mov
push
lock
aad
pop
pop
jbe,pt
mov
iret
cli
shrb
xlat
nop
test
bound
pop
jno
into
xor
or
xchg
inc
outsb
add
lcall
sbb
jb
jmp
lcall
sub
rcll
xorb
cmpsb
ja
bound
xchg
push
pushl
jmp
cmp
or
sbb
scas
pop
pop
mov
js
sbb
daa
cltd
pop
in
out
sbb
mov
daa
rol
mov
hlt
sub
push
xchg
sbb
jmp
iret
xchg
mov
insb
mov
pop
lcall
pushf
hlt
je
fcompl
cmc
ljmp
sub
in
xchg
scas
sarl
leave
into
cmp
cmpsb
jno
fs
insb
pop
mov
or
jne
shlb
mov
aam
and
inc
sub
sub
in
inc
loopne
or
pop
inc
imul
push
cmpsb
sbb
stc
mov
inc
push
and
cli
out
mov
inc
mov
adcl
loop
xchg
sbb
mov
sti
mov
xor
sbb
pop
cmp
rorb
jns
int3
bound
or
movl
je
xchg
repz
fidivrs
ret
int
push
pop
pop
fstpl
scas
andl
sahf
rol
add
fdivrs
mov
aas
scas
cmpsb
ja
shrb
inc
out
cs
jg,pn
or
icebp
mov
and
or
fistps
push
enter
mov
dec
mov
sub
mov
push
outsl
push
ljmp
jmp
jl
stos
add
cs
cld
adc
loopne
insl
xor
in
or
outsb
sarb
mov
lret
push
je
pop
sbb
fidivrl
mov
sbb
adcl
xor
ss
pop
pop
outsb
adc
cwtl
into
xchg
jo
inc
mov
jl
rorb
add
push
shlb
inc
fcomps
insl
cmpsb
xchg
inc
jbe
jno
push
jae
ds
frstor
pusha
pop
sbb
leave
filds
push
rorl
xchg
fsubrs
jmp
and
add
pushw
cmpsb
pop
and
inc
sti
sub
orl
shl
inc
mov
out
mov
fwait
inc
push
imul
cmpsb
aas
mov
shlb
and
adc
mov
mov
sub
mov
outsl
out
bound
inc
insl
sbb
out
xor
fdiv
sub
ss
xlat
sbb
xlat
fwait
clc
push
sub
xor
insb
xchg
movsb
iret
xor
cli
nop
mov
lret
cs
sahf
mov
sarl
mov
into
out
popa
push
jp
adc
pop
test
fcmovnb
adc
test
jnp
enter
cmpsb
dec
mov
mov
decl
aaa
bound
aad
fs
out
ret
mov
stos
lods
ss
xor
das
pop
jmp
in
in
sbb
cli
mov
mov
jg
nop
daa
loop
push
mov
mov
jbe
bound
mov
add
or
xor
push
pushl
mov
sahf
or
mov
push
lods
pop
aam
adcl
dec
cmp
pop
mov
fldcw
and
mov
pop
mov
dec
cmp
mov
adc
rcrb
sbb
out
inc
dec
sbb
jnp
cmpsb
inc
insb
call
push
imul
pop
jge
es
mov
mov
hlt
and
push
jb
cmp
push
mov
call
mov
enter
push
mov
mov
lea
adc
roll
rcrb
scas
clc
mov
cmp
xchg
xor
mov
pop
sub
jnp
enter
es
xor
into
fildl
sarb
ljmp
xchg
cs
lcall
sub
ret
jle
jg
mov
sbb
sti
pop
add
loopne
fisttpl
lea
gs
xchg
fnstsw
xlat
sbb
jb
scas
sbb
sbb
out
cmp
aas
pop
aam
add
jmp
adc
or
pop
mov
jns
clc
adcb
xchg
pop
in
jmp
daa
mov
inc
xlat
xlat
aaa
loope
out
mov
and
outsb
addl
jbe
pusha
and
or
ljmp
in
sub
mov
cld
jle
sub
pop
mov
incl
inc
sub
pushf
lods
pop
loopne
push
sar
mov
push
inc
loop
inc
and
cmp
cmp
and
addr16
insl
adc
mov
decl
std
sbb
sbb
jge
mov
xorb
loopne
stc
fcmovnbe
shrl
aas
adc
rcll
lea
sbb
bound
pop
pop
and
lret
mov
addr16
pop
mov
xor
mov
xor
cltd
xchg
fs
or
xchg
push
test
sub
cmp
fnstenv
popa
je
fnstenv
mov
mov
sub
sub
dec
repz
cmpsl
ljmp
adc
inc
loop
insl
js
mov
movb
dec
sub
fnstenv
fwait
jecxz
fsub
sahf
mov
add
outsl
cmp
arpl
movsb
add
sbb
shlb
sub
or
fs
daa
test
adc
or
xchg
cmpsl
jge
dec
rcll
lods
xchg
test
push
or
inc
fadd
add
clc
jge
or
pop
clc
mov
jno
mov
xor
dec
movsb
repz
or
sub
mov
shl
arpl
mov
or
or
mov
inc
test
scas
and
jg
lock
jnp
roll
dec
sti
mov
fiaddl
cmp
gs
lret
inc
jmp
pop
jnp
jo
std
je
mov
push
lret
push
in
cmp
cs
push
push
inc
add
cmp
gs
in
or
aas
xor
push
mov
dec
inc
inc
push
scas
and
cwtl
or
mov
mov
inc
mov
inc
fs
js
pop
xor
das
sub
mov
add
mov
stos
xchg
ret
cmc
xor
sub
pop
fstpl
test
mov
dec
mov
in
xchg
popf
fcmovbe
pop
mov
lret
push
fcoms
xorl
imul
outsl
jg
add
mov
int
pop
arpl
xchg
iret
lret
pop
mov
leave
adc
jmp
dec
mov
push
xchg
in
adc
push
xchg
sar
cs
in
fwait
lods
scas
pop
xor
jge
push
fiadds
adc
mov
pop
mov
lret
jne
inc
sbb
repz
dec
sbb
push
jo
jnp
push
shrb
fldt
sbb
arpl
mov
sub
pop
lcall
dec
mov
mov
es
ljmp
push
pop
shlb
or
jbe
push
lods
int3
inc
inc
cwtl
lret
adc
imul
or
roll
cmp
imul
xchg
cwtl
and
jbe
inc
add
add
jg
lcall
test
out
adc
sub
icebp
in
lret
cmp
popa
and
mov
pop
in
push
mov
adc
push
punpckhbw
xor
dec
push
jo
jnp
negb
dec
xor
xor
jp,pn
fisubrl
call
mov
sbb
cltd
fidivrs
lahf
inc
adc
iret
jle
iret
stos
jl
pop
enter
mov
pop
and
and
negb
or
cwtl
adc
out
pop
add
enter
mov
dec
jbe
sbb
test
xor
sbb
imul
movsl
pusha
aam
rolb
inc
or
test
ljmp
adc
jp
xor
sub
or
pusha
xor
or
xor
loopne
xor
orb
inc
cs
add
int3
sub
push
jbe
aas
addr16
cmp
mov
icebp
push
jne
fsubs
add
das
ror
pushf
push
addl
in
jno
dec
push
icebp
or
sti
mov
cld
push
and
jno
es
mov
out
insl
jbe
les
lcall
jo
test
xor
leave
mov
mov
jne
pop
inc
scas
stos
jno
shll
popa
les
dec
sbb
repz
test
xchg
push
ret
cmp
imul
ljmp
popa
add
add
jecxz
mov
out
pop
jnp
test
push
fldenv
push
mov
sub
pop
pop
mov
in
inc
pop
dec
sub
ss
sbb
pop
or
sub
in
fwait
push
push
sahf
popa
xchg
mov
into
in
pop
stc
sub
xlat
aad
jne
inc
cltd
lcall
mov
pushf
mov
push
xchg
sub
pop
sbb
cmp
mov
mov
aad
ret
sarb
fists
jae
xor
loop
sub
sbb
cs
pop
dec
cwtl
inc
inc
cmpl
push
dec
movsl
repnz
daa
pushf
and
mov
test
dec
nop
mov
xor
andb
insl
inc
in
lock
adc
ret
jo
mov
mov
jbe
mov
mov
orl
adc
std
insb
das
int
out
mov
adc
fwait
inc
imul
sbb
mov
push
icebp
pop
in
push
adc
mov
clc
push
in
sti
xchg
les
mov
in
push
aam
mov
or
sbb
loop
lods
mov
mov
testl
daa
sub
sub
cmp
sbb
and
inc
int3
pop
and
outsl
repnz
sub
movl
pushf
dec
and
adc
in
xchg
mov
inc
pop
inc
ret
idivl
icebp
pop
sbb
arpl
popf
popa
popl
or
xchg
xchg
in
mov
dec
mov
in
rolb
inc
xchg
lods
repnz
pop
cmc
js
push
popf
jle
lods
mov
ret
fimuls
dec
fcompl
cmpsl
pusha
out
fbstp
push
js
cmpsb
mov
mov
xchg
int3
and
mov
xor
xor
pushl
add
bnd
xor
add
mov
pop
bswap
or
nop
xor
jbe
sti
mov
call
push
dec
mov
sub
pop
push
mov
ljmp
lret
icebp
cmp
jo
aad
inc
inc
mov
cmp
outsb
xchg
inc
fcmovnb
push
pop
lret
or
xchg
sbb
xchg
xor
adc
add
jbe
xor
mov
lret
push
test
inc
lock
pop
ss
sarb
insb
lcall
xchg
int
xchg
push
cmp
xchg
ljmp
jecxz
cli
les
and
mov
daa
andl
xor
sbb
dec
inc
inc
adc
mov
jns
fistpl
dec
pop
ret
jge
cmpsb
inc
jb
sahf
std
cmp
inc
sbb
add
insl
imul
rcll
cwtl
sbb
shll
lret
push
je
lea
inc
push
adc
cmpsb
ror
sbb
push
or
dec
mov
popf
lahf
mov
lcall
lret
sbb
enter
cmp
lcall
data16
stos
dec
sbb
jmp
mov
lods
jnp
hlt
jp
cmp
xor
ds
loopne
mov
lods
lcall
loop
adcl
decl
loopne
pop
inc
insb
adcb
clc
int
enter
mov
in
shr
mul
inc
dec
je
movb
sbb
test
adc
push
sub
mov
mov
in
jle
mov
rclb
mov
mov
xlat
repnz
nop
ljmp
push
mov
ret
lret
mov
push
xor
adc
mov
mov
aam
jle
test
sbb
add
mov
jnp
jecxz
or
ss
xchg
jo
mov
cmp
rorb
adc
out
enter
xchg
cmp
pop
pushf
cmp
sbb
ret
pop
stos
or
fimuls
iret
sub
sbb
nop
or
fstl
xchg
pop
shrb
lds
or
call
fdiv
rorl
sub
jmp
add
arpl
lods
inc
mov
push
clc
in
je
fiadds
sbb
mov
flds
repz
repnz
les
lods
repnz
jge
xchg
xor
push
and
or
adc
and
push
shlb
ficoml
negl
jmp
xor
mov
add
aad
js
jle
push
mov
shll
cmp
nop
or
inc
dec
out
pusha
mov
rorl
dec
push
and
ret
jecxz
inc
in
jmp
fcompl
scas
inc
int3
and
data16
push
push
mov
jnp
push
fstps
xor
mov
mov
dec
sub
aad
mov
add
push
mov
adc
dec
adc
mov
xor
cmpsb
dec
xor
stos
fisubl
mov
incl
add
and
xor
jp
das
and
outsl
gs
out
xchg
push
jmp
cmpsb
adc
or
aad
aas
xchg
jp
jle
push
lods
rcr
js
cmc
insb
and
jae
fs
movsl
add
jge
cld
fs
mov
mov
push
aaa
jo
cli
stc
subb
jb
test
jo
test
adc
pop
shll
in
aam
mov
mov
lahf
dec
push
arpl
je
clc
inc
jne
xchg
inc
mov
or
ds
mov
arpl
jnp
int3
add
cmp
cmp
in
clc
sub
repnz
fistl
in
mov
cli
sbb
inc
sbb
xchg
mov
xor
fnsave
adc
bound
mov
jno
add
and
lret
bound
out
xor
inc
cs
push
movsb
insb
cmp
mov
test
xchg
mov
xor
lret
enter
adc
enter
imul
subb
push
push
popf
movb
jnp
sbb
mov
xor
pop
sbbb
scas
fcmovu
xchg
mov
sub
aad
fsubrs
push
push
mov
cmp
clc
sahf
imul
xchg
push
mov
idivb
xor
push
sti
idivl
cli
loope
cmp
in
adc
ja
es
jecxz
outsb
inc
push
cltd
mov
jb
push
inc
ret
push
mov
cli
enter
jge
or
sahf
inc
or
mov
pusha
js
ja
pop
xchg
and
sub
int
fisubl
roll
push
cmp
hlt
movsl
pop
xchg
sub
clc
out
inc
cli
push
jno
jmp
fwait
pop
mov
jle
outsb
pop
sahf
dec
mov
imul
sub
fistpl
lret
push
sti
ds
fwait
pop
mov
jle
outsb
pop
sahf
dec
mov
imul
sub
fistpl
lret
push
sti
ds
fwait
pop
mov
jle
outsb
pop
sahf
dec
mov
imul
sub
fistpl
lret
push
sti
ds
fwait
pop
mov
jle
scas
pop
sahf
dec
and
mov
xorl
add
adc
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
sbbl
mov
das
mov
leave
ss
adc
inc
pushf
fsubr
arpl
jae
sbbl
mov
pop
ret
insb
jecxz
xchg
and
int3
xor
push
in
arpl
jae
lcall
push
fiaddl
je
imul
add
inc
jecxz
xchg
daa
lahf
adc
jecxz
push
aam
or
sbb
fldenv
daa
push
xor
pushf
repz
xchg
sbb
sub
mov
mov
inc
cld
arpl
push
jae
int3
jo
mov
sbbl
in
add
clc
jle
fs
mov
arpl
cld
dec
inc
int3
xor
cltd
ljmp
or
int3
pop
mov
imul
jl
mov
fsub
mov
lods
pushf
adc
insb
jne
dec
sbb
pushf
cmpsb
jl
insb
fwait
test
arpl
mov
inc
fldl
xor
in
jl
out
pop
mov
icebp
dec
xlat
jbe
loop
mov
push
fdivrl
mov
popa
cld
jne
xchg
sbb
sub
sub
insb
jecxz
ljmp
movsl
sub
pop
les
jns
jb
cmpl
pop
sub
xor
clc
insb
pushf
adc
daa
rclb
es
pop
or
sbb
dec
sarb
fdivrl
ret
xor
mov
jbe
inc
leave
xor
add
pop
subl
dec
cmp
xor
pop
shrl
repz
pushf
adc
fcoml
arpl
jae
sbbl
mov
pop
shrl
repz
pushf
adc
fcoml
arpl
jae
sbb
jne
push
mov
dec
jo
shrl
out
out
push
cmp
nop
loope
push
and
push
daa
mov
pop
cli
andb
xchg
movsb
jns
fs
sbb
ljmp
sbbl
xchg
xchg
es
out
jb
or
mov
sbb
pop
xor
aam
out
out
mov
add
hlt
mov
ljmp
push
pop
pop
loope
push
leave
mov
inc
scas
sub
push
push
mov
add
call
inc
mull
pop
sbb
pop
inc
mov
lret
js
fsub
push
xchg
inc
add
xchg
xlat
xor
loop
imul
add
insb
cmp
mov
in
push
cltd
xchg
push
xor
ljmp
push
push
jnp
data16
sbb
fstpl
xor
iret
xchg
mov
or
imul
cwtl
orb
out
mov
fs
inc
dec
or
inc
jmp
mov
out
or
ret
xor
or
int
cld
xor
push
sbb
mov
inc
sub
out
pusha
inc
mov
stos
push
sub
pop
clc
mov
mov
jae
adc
lcall
sub
lods
ret
jge
jo
xchg
mov
inc
adcl
mov
inc
adc
out
mov
inc
pushf
sahf
xchg
dec
stos
push
in
test
les
jb
loope
sbb
and
sar
das
sub
into
mov
mov
xor
mov
js,pt
popa
sti
jp
mov
cmpsl
hlt
xchg
and
sbb
lcall
add
out
nop
xor
dec
out
inc
dec
gs
pop
negb
jae
lea
lock
pop
aaa
insb
inc
cli
lcall
dec
inc
push
aas
outsb
ja
and
fnstenv
daa
jecxz
or
sub
xchg
mov
bnd
mov
push
loope
mov
sbbb
xchg
std
aam
mov
aaa
inc
dec
lcall
jmp
hlt
rorl
in
inc
push
xchg
mov
push
cmpsb
loopne
jo
cld
or
lds
inc
icebp
nop
sbb
mov
push
dec
mov
outsl
lods
mov
aad
in
mov
or
daa
adc
sbb
out
jae
loop
les
lret
sub
xor
shrl
sub
jae
mov
mov
mov
movsl
sbb
jle
pop
gs
cmc
sub
repz
movsb
pop
rol
push
mov
push
fs
push
jbe
ret
das
dec
xor
mov
pop
loop
cmp
inc
outsl
pop
sahf
test
in
dec
xor
iret
movsb
add
and
aaa
xchg
dec
les
flds
test
sub
pop
daa
pop
jne
je
fadds
jl
inc
rep
fcomps
iret
sub
mov
or
add
or
sbb
sbb
std
push
call
push
xchg
fdivrl
mov
aad
repz
movsb
mov
imul
es
stc
enter
xchg
jp
in
lods
test
mov
jo
inc
mull
pop
xchg
jle
sahf
or
and
jns
cmc
stos
or
insb
nop
stos
hlt
pop
js
mov
stos
xor
addr16
jp
movsb
pop
sub
stc
movsb
cs
jns
inc
xor
or
and
adc
mov
inc
jecxz
lea
add
xor
rcl
or
sub
adc
cld
sti
cmpsb
cs
cmp
add
dec
mov
mov
and
cmp
mov
pop
movsl
jb
movsl
xchg
adc
shll
and
repz
in
iret
mov
data16
adc
jmp
mov
outsl
enter
adc
lock
pop
dec
dec
mov
jno
dec
add
dec
adc
mov
sub
adc
cmp
dec
jne
sub
lcall
daa
test
aad
push
call
push
mov
jae
and
pop
jbe
in
xchg
les
shl
enter
ja
mulb
push
push
std
push
call
pop
sar
andb
xchg
mov
and
mov
test
lds
jnp
sub
popf
ret
rolb
insl
inc
jg
rorl
add
outsl
inc
loopne
es
enter
dec
ret
mov
test
mov
in
es
or
mov
mov
add
in
pop
dec
fistps
cmp
ficompl
jae
dec
jl
scas
in
inc
push
bound
sbb
mov
push
pop
repz
movsb
test
loope
pop
insb
addb
inc
test
mov
push
das
gs
iret
into
mov
sbb
fcomps
xor
dec
out
mov
ds
outsl
in
sub
lods
inc
pop
int3
xchg
movsb
adc
aam
inc
push
sbb
rcrl
adc
roll
aad
fwait
dec
cmc
xchg
mov
gs
outsb
jnp
dec
js
adcb
iret
fsubrl
jp
mov
inc
ret
repnz
xchg
popf
sbb
je
test
shrl
pop
loope
adc
aas
das
lds
xchg
repnz
cmp
xchg
push
xchg
dec
xchg
test
bound
cwtl
xchg
or
xchg
jecxz
jmp
ss
fisttps
push
cmc
or
mov
push
mov
jae
data16
jb
arpl
sbb
stos
cli
dec
adc
lods
and
or
pusha
cmp
sahf
hlt
xchg
push
adc
push
dec
and
xor
out
inc
mov
mov
mov
push
dec
daa
xchg
jae
cmpsl
adc
imul
and
lret
or
or
lods
test
jne
xchg
or
imulb
inc
xor
cbtw
pop
dec
and
stos
fisttps
mov
loope
mov
leave
cmpsb
or
movl
repz
arpl
sub
xchg
stos
and
out
mov
sub
xor
shrl
xor
out
push
inc
dec
rcrb
loop
arpl
adc
pusha
jg
sahf
xorb
pusha
out
lahf
adc
sbb
jp
mov
dec
bound
leave
cmp
cmp
aam
xor
gs
out
faddp
add
mov
add
imul
loop
xor
inc
aad
add
stos
fisttps
push
fistpll
mov
leave
or
popa
cmp
pop
movsl
lahf
imull
adc
icebp
fisubrs
jp
inc
into
or
fmul
mov
movsl
push
cwtl
out
mov
ja
cmp
lcall
outsl
aas
sbbl
mov
xchg
ss
cmp
outsl
add
inc
lods
ds
xor
or
je
les
ja
add
sub
lods
sti
mov
cmp
push
cwtl
mov
add
arpl
mov
iret
and
aas
mov
jl
sbb
shll
mov
in
rol
rorl
mov
leave
and
fmull
inc
xor
push
add
imul
and
xchg
pop
add
mov
xor
sub
cmp
sbb
dec
int3
rcr
loop
and
inc
sbb
cmpsl
cmp
xchg
jne
cmpsb
jge
ret
loop
and
mov
fmulp
xchg
cmpsb
cmp
movsl
xchg
mov
and
popf
push
xchg
push
xchg
inc
cltd
or
or
jge
mov
jnp
loopne
je
inc
fstpl
cmc
mov
xlat
arpl
sbb
rcll
pop
daa
sbb
ret
lret
pop
mov
sbbl
adc
push
scas
sub
xchg
xor
repnz
jmp
fdivs
pop
add
or
scas
jl
pop
test
js
mov
mov
je
insl
push
lahf
sbb
or
ret
leave
mov
stc
in
shl
inc
cmp
jmp
mov
sahf
dec
lret
push
push
mov
inc
aad
mov
std
mov
jno,pt
loope
int
xchg
call
inc
sub
cwtl
jns
xchg
movsl
jmp
push
pop
data16
inc
mov
dec
shlb
scas
sarb
mov
pop
mov
pop
push
pop
roll
enter
push
add
int
sbb
lret
cli
cld
pop
mov
jp
dec
into
cli
adcl
loopne
icebp
mov
push
cmp
cs
js
pop
loope
jecxz
push
push
lea
pop
testl
daa
xchg
jg
push
inc
pop
jecxz
jg
xchg
test
daa
dec
adc
sub
mulb
push
pop
cmp
cs
in
cli
jg
mov
and
fs
jp
or
test
cltd
adc
orb
insl
rolb
push
out
das
scas
and
mov
jo
sbb
adc
int
mov
les
add
sbb
jmp
rorb
rolb
or
jg
sbb
fdiv
mov
lcall
dec
ja
decb
jno
jns
addl
xlat
mov
in
data16
or
aam
scas
jno
sbb
jnp
or
cmp
inc
add
iret
push
in
fmull
pop
mov
push
sbb
insl
lds
lock
xchg
push
scas
out
cwtl
jo
hlt
fists
pop
push
insl
loope
psllw
fsubr
insb
lcall
add
popf
and
stos
shl
pop
js
cmc
add
and
adc
lret
lods
cmp
loop
jne
xor
mov
inc
jns
out
test
out
mov
rcl
mov
mov
mov
jne
pop
cmp
mov
aas
and
imul
mov
aad
add
xchg
jbe
add
imul
jle
ds
mov
out
xchg
cmc
sub
cltd
and
jmp
out
fdivrp
shll
xor
enter
popf
pusha
jle
sbb
addr16
cmc
out
mov
xor
jns
test
adc
ret
sub
cwtl
popf
inc
fisttpll
xor
fdivl
jl
outsl
add
mov
inc
repnz
adc
in
leave
mov
xchg
rcll
cs
shll
stos
sub
dec
sbb
lods
imul
cmp
push
sub
cmp
stc
xchg
fs
ljmp
pop
jb
cmpsl
enter
cmpl
mov
test
das
out
inc
iret
xchg
inc
sbb
push
repz
enter
fimull
idivb
mov
mov
jmp
dec
ljmp
sbb
sbb
mov
or
jb
xlat
rclb
mov
xor
andb
push
scas
xor
test
dec
sub
ficoms
ret
movsb
sbb
decb
lock
call
mov
inc
and
xor
push
mov
mov
and
inc
call
daa
mov
lods
imul
cmpsl
pop
cmp
arpl
adcl
mov
loope
daa
mov
in
xchg
ljmp
je
shl
out
cmp
test
fucomi
cmp
mov
les
mov
sbb
push
xor
stos
repz
sbb
jb
xor
icebp
jmp
cmpsb
push
enter
daa
dec
and
xchg
scas
pusha
popa
mov
dec
or
aam
mov
lods
out
lock
xchg
xor
arpl
xchg
sbb
sbb
insb
insb
inc
push
repz
fadd
jp
sbb
insl
inc
xor
cmp
insb
push
mov
xchg
add
xchg
pop
lock
xor
xor
jecxz
jo
insl
ljmp
fisubrl
mov
fpatan
xchg
iret
inc
mov
repz
push
xchg
dec
sub
das
sub
add
xorb
inc
loop
inc
or
cmp
insl
ljmp
mov
faddl
iret
cli
movsb
jo
xor
xchg
sbb
gs
insl
lods
jno
lcall
fcmove
xchg
sbb
cmp
nop
dec
xor
mov
dec
pop
push
mov
sti
fiadds
cmc
jb
xchg
imul
cmp
mov
les
stos
notb
sbb
gs
dec
inc
mov
jg
add
mov
mov
mov
pop
pusha
pop
and
loop
ja
lret
pusha
xchg
scas
rolb
xor
js
fwait
and
popa
cmpsb
pop
xlat
ds
in
cld
sub
rclb
or
cmp
xchg
fstpl
cli
add
andb
daa
push
xchg
or
int3
cwtl
cmp
mov
imul
mov
cli
and
mov
or
xchg
test
or
xchg
jb
imul
jnp
push
cmp
aas
cwtl
jecxz
and
fwait
out
jl
xchg
sbb
in
mov
push
orb
cwtl
ljmp
in
jae
xchg
mov
testb
and
lock
std
aad
test
lahf
add
addl
arpl
add
shr
mov
jbe
or
mov
cmp
out
dec
cmp
jl
jg
adc
inc
pop
pop
push
sbb
test
dec
jno
xor
sub
jp
es
dec
mov
mull
mov
xchg
xor
mov
or
cwtl
icebp
push
sub
outsb
cmc
xchg
mov
sub
ret
mov
ret
sahf
cmc
adc
push
push
ja
inc
push
repz
scas
mov
jae
idiv
xor
jo
and
and
dec
stos
lret
aam
outsl
mov
xchg
imul
loop
test
iret
or
mov
mov
pop
push
pushl
xchg
or
roll
pop
mov
or
into
mov
dec
mov
fisubrs
into
jl
mov
xchg
sub
adc
js
mov
or
mov
fstps
mov
popa
jmp
cwtl
add
add
std
int3
sti
jecxz
inc
frstor
out
jge
lret
fcomps
xchg
movsl
stos
ret
inc
xchg
les
pushl
mov
adc
rol
gs
xchg
lods
xor
jno
push
adc
flds
mov
ret
and
dec
fisttps
jne
push
xchg
int3
xchg
shll
inc
mov
dec
dec
push
push
mov
hlt
mov
icebp
into
mov
stos
fxch
inc
in
mov
out
movsl
adc
repz
arpl
lods
adc
push
shrb
out
xchg
dec
xchg
jns
lret
ja
push
call
sub
std
sub
push
xchg
out
push
mul
dec
pop
adc
popf
sti
add
in
sub
in
sarl
lods
adc
cmp
lock
push
and
jg
pop
rol
repz
jl
or
mov
dec
adc
mov
pop
pop
cwtl
aad
sub
mov
lock
push
daa
movsb
call
sbb
sbb
mov
fs
mov
push
ds
sbb
stos
mov
out
sbb
test
test
test
push
dec
jle
ret
in
fwait
loope
jg
arpl
leave
inc
xchg
sbb
adc
or
mov
mov
xchg
lahf
xchg
test
dec
cmp
or
fdivs
arpl
adc
ss
cmp
add
jg
inc
loopne
sbb
xchg
xor
lret
or
mov
imul
pop
out
fnstcw
dec
jecxz
pop
xchg
mov
shrl
inc
cmp
xchg
mov
aaa
dec
pop
sub
sub
lcall
ja
push
jns
xchg
inc
lcall
mov
xchg
int3
subl
and
fisubs
mov
aaa
mov
push
fdivl
push
sbb
dec
mov
sbb
test
loopne
dec
lock
and
loop
xor
aam
repnz
xor
xor
inc
push
xchg
fimull
pushl
adc
mov
aad
aam
mov
cmp
in
hlt
nop
in
idiv
les
out
das
pusha
jl
cmp
mov
mov
mov
jmp
cmpsl
and
sbb
mov
add
dec
lea
mov
cmc
adc
scas
or
into
mov
lock
test
aaa
pop
aaa
jl
inc
mov
cmp
xchg
daa
inc
ficoms
lcall
int3
popa
roll
sbb
sub
mov
inc
adc
out
sub
sbb
and
sti
sbb
aaa
add
or
cmp
push
imul
lock
gs
mov
push
sbb
push
sub
fistpll
popf
adc
push
jge
xchg
movsb
or
es
popa
sbb
sti
clc
jp
dec
cmp
sub
inc
shr
mull
rcrb
xor
mov
aad
sti
mov
and
out
cmp
pusha
jne
mov
xchg
push
mov
add
pushf
push
jge
insb
and
imull
push
loope
mov
std
into
dec
jmp
loopne
arpl
insl
jne
cmp
into
push
jbe
arpl
cmpsl
aas
mov
mov
mov
aad
arpl
cmp
mov
mov
cmp
jbe
test
int
fcoms
pushf
xor
lret
cmpsb
sbb
movsl
cltd
mov
xor
cmp
jbe
addb
popa
push
popa
loope
adc
addr16
mov
and
and
sub
pushf
inc
aas
imulb
jnp
in
push
scas
lret
cltd
bound
imul
push
cmp
push
inc
xchg
shll
ss
jl
xor
mov
out
jno
adc
mov
fcoml
push
and
stos
mov
add
sbb
adc
lcall
out
xor
loope
mov
push
dec
mov
mov
jb
dec
cmp
pop
pop
pop
shll
pop
jg
jmp
scas
dec
or
or
scas
jmp
ss
stos
lcall
push
pop
mov
cmp
mov
aaa
incl
nop
jp
mov
push
into
mov
addr16
adc
or
in
push
sbb
insl
int3
in
arpl
add
mov
adc
mov
sbb
inc
jo
xchg
mov
int3
test
mov
jns
adc
cltd
cmpsb
mov
or
std
inc
mov
sbb
das
push
add
lock
and
sub
mov
xor
push
rolb
mov
cmp
mov
cmp
fs
push
nop
outsb
xor
orb
jle
shlb
addr16
mov
leave
test
mov
pushf
les
loop
int
dec
int
cld
out
mov
xchg
fists
inc
xchg
pop
das
adc
or
stc
fcoml
les
cmp
push
mov
inc
insl
jp
shr
je
inc
or
jge
shl
mov
inc
sub
or
std
mov
repz
jl
fstl
fsts
jo
fidivl
insb
aam
out
mov
xor
adc
mov
orl
jl
jo
and
out
xor
popf
and
jne
jecxz
divb
ret
popf
scas
sbb
popa
lods
fwait
cltd
fnstcw
add
cld
pop
dec
inc
inc
rcr
pop
xchg
aad
xchg
xchg
pop
push
flds
xlat
sarb
pop
push
jne
sarb
push
push
js
popf
pusha
xchg
xor
inc
mov
mov
jns
adc
lcall
popf
ds
imul
fldt
sarb
jge
sbb
mov
cli
and
mov
nop
fmull
scas
pusha
loopne
pop
cmp
lret
pop
hlt
push
push
add
adcl
fwait
pop
lret
cmpsb
mov
pop
adc
mov
mul
data16
dec
xchg
andl
pop
cwtl
xchg
xchg
fwait
dec
push
xchg
pop
lret
mov
adc
push
sub
dec
rol
test
push
testl
mov
jmp
nop
adc
arpl
add
je
sarb
in
mov
xchg
das
dec
stc
add
xlat
fstl
out
shll
cmpsb
and
bound
pop
pop
mov
rcrb
clc
fwait
mov
dec
daa
enter
jp
jmp
int3
jmp
in
mov
add
nop
imul
xor
pop
push
sahf
cmpsb
sub
mov
cli
mov
into
inc
stos
inc
movsl
mov
aam
jns
pop
nop
mov
pusha
jnp
nop
std
push
pop
aas
imul
mov
sarb
sahf
mov
ja
add
mov
lcall
inc
js
mov
aaa
and
push
mull
cmp
leave
inc
icebp
aam
jecxz
mov
jb
arpl
jecxz
sub
inc
movsb
inc
cmpsb
inc
fs
call
adc
pop
add
mov
movsl
fnstsw
dec
cltd
arpl
int
add
rcrl
cli
pop
in
in
push
or
rcll
mov
lahf
fsubl
mov
lret
push
xchg
pop
out
shll
and
mov
push
fnstsw
das
mov
mov
jg
andl
shrl
repz
pushf
adc
fcoml
arpl
jae
sbbl
mov
pop
shrl
repz
pushf
adc
fcoml
arpl
jae
sbbl
mov
pop
shrl
repz
pushf
adc
inc
fcoms
addr16
cmp
cmp
dec
ret
pop
shr
jecxz
xor
arpl
mov
sbb
or
and
lcall
cmc
mov
jp
cmp
push
push
dec
sub
mov
cli
lcall
mov
cmp
pop
sbb
jns
fimull
pop
sub
cmp
or
pop
repz
xorl
sub
jnp
dec
pop
es
ficompl
popa
popa
jne
push
into
and
imul
cmp
add
icebp
aas
shufps
xchg
mov
adc
and
push
push
lahf
jmp
lret
cmp
addr16
and
sbb
mov
ffreep
mov
in
xchg
or
or
mov
lret
iret
mov
fcoms
or
sbb
js
pop
mov
inc
das
loop
sub
pop
or
ljmp
cmc
aas
sbb
jb
xchg
cmp
aad
aad
sub
aas
and
add
andb
rcrb
pop
or
jp
dec
jp
pextrw
dec
cmp
ljmp
lret
mov
inc
test
shlb
jae
add
cmp
dec
fdivrs
hlt
jmp
int3
in
mov
xor
jnp
add
pop
cmp
lret
push
out
sub
mov
adc
jnp
outsl
push
jbe
sbb
gs
push
sbb
fwait
mov
scas
idiv
mov
mov
cmp
jp
push
sbb
dec
cmp
stos
fidivrl
ljmp
fisubrl
or
push
sbb
dec
cmp
stos
fidivrl
and
cmpsl
xchg
out
stos
push
mov
and
pusha
jmp
test
ret
lods
lea
cli
subl
jle
decb
inc
stos
cmp
push
ror
xor
lds
shlb
cld
or
adc
xchg
push
stos
jp
lods
ljmp
scas
xor
shrl
xchg
pop
testl
bound
or
test
int3
cli
fcmovnu
sbbl
imul
sub
dec
leave
add
and
xrelease
into
add
dec
and
stc
jne
push
ljmp
lods
push
cmp
out
inc
xor
aas
in
imul
and
jg
dec
sbb
add
jmp
mov
sahf
adc
mov
arpl
sub
cmpsb
jge
in
orb
mov
push
sub
std
cmpsl
sub
xchg
sub
pop
stc
fs
fisttpll
adc
dec
in
nop
insl
cmp
adc
mov
add
scas
outsl
stos
xchg
ljmp
ljmp
inc
test
in
inc
mov
sub
pop
pop
jle
ret
outsb
or
cmp
mov
daa
fs
push
clc
out
lret
inc
outsw
ja
outsb
bound
jg
ljmp
push
mov
push
in
xlat
jp
in
xor
push
iret
loope
jl
sbb
pop
pushf
inc
lea
jmp
cld
pop
jg
adc
pushf
pop
mov
add
dec
ljmp
mov
push
fwait
pusha
push
xlat
xor
fnsave
xchg
rcll
sti
jb
mov
mov
push
pop
push
mov
xor
or
cmp
sbb
jns
mov
mov
or
stos
repz
mull
rolb
pushf
cmp
insl
push
push
das
rcl
cmpsl
cmp
xchg
mov
das
inc
sub
add
lret
in
in
mov
jmp
inc
cli
cltd
cld
subl
mov
and
fdivs
out
cmpsb
es
sti
mov
lahf
mov
dec
fisttpll
push
shll
mov
jae
jnp
jecxz
xchg
cmp
iret
push
xlat
add
cmpb
lret
sub
out
repz
lods
ss
push
adcl
scas
das
add
insl
andb
lret
loop
cs
or
std
pop
sarl
jo
popf
pop
cmp
xorl
iret
lock
icebp
hlt
xlat
stc
xor
pusha
add
mov
int
inc
lahf
jecxz
push
in
mov
inc
aad
int
xchg
add
imul
pop
mov
pop
insl
sub
or
jno
xor
push
jp
sti
fwait
pusha
outsl
mov
bound
pop
jmp
and
mov
jo
xchg
hlt
mov
mov
jle
jl
lods
mov
dec
push
xchg
out
push
or
adcb
add
mov
add
cmp
lds
pushf
adc
daa
test
mov
mov
pusha
xchg
push
dec
outsb
jns
sub
dec
fldenv
dec
dec
sbbl
repnz
das
push
push
in
pop
filds
cmc
in
ss
sub
lods
sti
mov
xchg
push
and
jp
pop
das
shlb
ret
test
mov
push
jo
pop
jno
and
pop
jo
ficoms
sbb
push
inc
add
mov
push
add
ret
jmp
push
hlt
fistpll
movsb
mov
leave
ljmp
into
out
ljmp
adc
adc
test
popf
test
fnstenv
cmp
mov
push
rclb
rcrl
sbb
dec
mov
jge
outsb
dec
pop
mov
mov
mov
mov
nop
push
inc
sbbl
out
sub
mov
dec
fs
fldl
pop
sbb
out
sbbl
push
mov
xchg
adc
mov
rorl
psubw
jne
inc
andb
mov
cmp
push
test
xchg
into
inc
mov
pusha
repz
out
jp
loope
inc
jecxz
xchg
jo
leave
lods
add
push
mov
and
jb
pop
mov
adc
jnp
ljmp
mov
pop
jecxz
pop
ret
fsub
push
gs
and
arpl
imul
cwtl
inc
shll
cmp
xchg
cld
pop
jbe
add
ret
repz
cli
data16
out
fildll
push
loop
out
lahf
mov
dec
js
cmp
inc
scas
fisubrl
add
out
mov
vcvttsd2si
inc
sbb
xchg
out
xchg
pop
cmp
fisttps
mov
mov
jne
loope
jmp
push
ljmp
lahf
jle
iret
add
std
fmul
outsl
xchg
sbb
cwtl
or
push
rcll
push
aad
or
roll
test
imul
aas
or
xor
or
in
sub
pop
ljmp
dec
sbb
mov
int3
mov
call
imull
lret
outsl
insb
test
jmp
adc
mov
rcrl
test
cmpsb
xor
sbb
adc
lods
inc
or
lock
sub
popa
push
jl
mov
jae
adc
add
lods
and
outsb
mov
sti
xchg
jne
sbb
xor
repnz
or
sub
pop
and
xchg
and
stos
jne
mov
cmp
shlb
push
test
test
or
or
adc
test
lahf
sbb
xchg
loope
in
xchg
jmp
loope
xor
xchg
xor
sti
jo
lcall
nop
clc
push
push
xor
push
jmp
sbb
sbb
xchg
mov
fnstenv
xor
aaa
inc
clc
roll
sbb
and
mov
inc
push
ret
jge
out
mov
xor
rorb
sub
sub
pcmpeqd
out
add
aaa
cmp
cwtl
mov
push
loop
push
lods
add
cmpsl
cmpsl
and
inc
inc
rcl
mov
les
push
mov
xchg
in
stos
mov
not
clc
repz
insl
roll
stos
and
shlb
into
gs
add
aad
inc
mov
popa
ss
mov
push
mov
pop
int
mov
mov
xchg
and
push
ror
jae
sarl
shlb
movsl
jno
rol
fsubp
xchg
push
fwait
out
imul
das
mov
lcall
xchg
clc
jb
imul
or
pop
adc
xor
sub
push
out
dec
sbbb
jmp
cmp
scas
add
jnp
inc
mov
test
push
cmp
leave
lock
fs
notb
fisubrs
jnp
mov
and
xor
pop
in
iret
push
dec
insl
mov
push
mov
les
adc
stos
aad
adc
and
por
aad
daa
sub
inc
rcrl
adc
scas
push
decl
and
rcrl
lea
xchg
mov
xor
icebp
pop
mov
pop
stc
aad
enter
movsl
testl
out
inc
mov
ret
jl
sbb
push
lods
ljmp
mov
sub
out
jl
jnp
push
jge
add
fidivs
sub
pop
xlat
push
jecxz
mov
rclb
pop
bound
xor
sbb
test
mov
mov
aaa
jne
ja
icebp
fsts
jmp
sbb
icebp
rclb
cmpsb
pcmpeqb
dec
mov
and
xchg
js
xor
lock
dec
pop
lcall
lods
mov
arpl
mov
ss
pop
lods
push
push
xchg
int3
mov
jl
loope
mov
push
mov
cmp
stc
jo
mov
popa
pop
mov
cmp
pop
cmc
xor
shrl
add
fidivrl
sti
xchg
xor
pop
lods
dec
xor
add
inc
into
mov
or
lret
push
mov
imul
jbe
test
xorl
and
sti
dec
adc
pop
idivl
push
sub
mov
pop
and
push
jo
shlb
lret
ret
jbe
fistpl
push
xor
ljmp
movsl
xchg
jae
sbb
call
cmp
popf
xor
std
and
pop
mov
fimull
inc
mov
and
push
mov
repnz
or
roll
xor
insb
mov
fwait
addr16
xor
mov
js
cmp
mov
add
rcr
jl
movsb
loopne
push
lahf
aam
popf
or
stos
js
test
inc
or
mov
std
push
aad
adc
mov
repz
push
xchg
mov
jns
jp
inc
and
push
mov
rol
es
das
inc
jmp
sbb
mov
add
sbb
and
pop
aam
fisubrl
dec
sub
stos
push
push
dec
jge
add
dec
lods
hlt
frndint
test
imull
mov
in
je
aam
stos
stos
sbb
jl
mov
cli
and
jge
shll
scas
adc
mov
popf
leave
daa
dec
popa
rorl
mov
fisttps
adc
stos
or
xchg
in
aad
xchg
repz
xchg
frstor
mov
andb
ja
inc
adc
sub
test
fcmovnb
dec
leave
pusha
push
imul
rcr
jb
mov
inc
add
pushl
aad
and
fsubrp
movsl
cmc
jle
pushf
icebp
outsb
pop
fbld
in
cwtl
and
add
mov
fs
mov
sarl
data16
data16
loop
push
stc
push
push
dec
test
push
push
dec
pusha
jb
sub
mov
lret
xchg
js
sbb
xlat
xchg
sub
add
add
fcompl
sti
push
jbe
movsb
jbe
and
in
cmp
xchg
nopl
or
cs
mov
fistpll
jl
les
pop
outsb
mov
imul
test
je
mov
inc
pop
cwtl
push
int3
jb
adc
addr16
dec
outsl
mov
test
push
inc
mov
ja
jl
adc
inc
jp
pusha
mov
add
xor
cmpb
add
xchg
mov
repz
jl
imul
jg
lret
loop
pusha
mov
jns
loope
insb
rcll
hlt
in
dec
cmovne
dec
pop
stos
sti
sbb
jb,pt
es
push
arpl
aaa
jno
jne
sub
sub
mov
mov
jnp
insb
fistl
jne
mov
mov
xchg
inc
sbb
pushf
fisttpll
inc
cmc
outsb
jo
loop
push
movl
and
insl
stos
push
add
enter
xor
sti
fstl
push
add
insb
push
xchg
xchg
xchg
hlt
sbb
data16
or
adc
dec
movl
xor
xchg
icebp
and
xchg
mov
iret
cmpb
push
test
loopne
pop
sbb
jl
inc
sbb
clc
jl
repz
arpl
out
test
jl
cmpsb
push
cld
mov
cmp
out
js
aas
leave
movsb
pop
out
dec
gs
fs
scas
jae
mov
push
scas
test
lea
stos
xchg
hlt
xor
xchg
comiss
xor
mov
jae
jge
inc
xchg
jo
ljmp
push
mov
cld
cmp
out
mov
xchg
mov
inc
sub
adc
cmp
ss
ret
or
xor
and
and
jecxz
jp
push
cmpsb
push
xchg
push
call
push
mov
xor
xchg
jp
aas
xlat
fcoml
stc
mov
shll
leave
stc
cli
and
add
dec
jp
ljmp
fnstcw
arpl
lea
aad
mov
aam
inc
sub
out
icebp
lcall
lods
icebp
add
mov
insb
xor
leave
idivl
imul
push
dec
or
arpl
dec
xorl
push
js
dec
jns
and
aas
hlt
call
adc
out
add
mov
ret
add
inc
jo
push
and
enter
mov
fwait
loope
imul
cli
sub
push
pop
push
xor
fucomp
or
imul
jl
xchg
roll
xchg
aad
cmpsb
and
loopne
jp
les
nop
mov
sti
push
lods
out
insl
inc
jae
out
or
push
dec
lret
sub
jecxz
adc
adc
loop
add
jb
or
sub
push
test
bound
or
int
jg
mov
popa
out
les
mov
fcomps
mov
stc
jns
mov
insl
clc
push
cmpsb
lahf
ds
fdivrs
cmpsb
fldcw
in
xchg
pushf
stos
inc
jecxz
adc
mov
roll
inc
movsl
mov
mov
mov
sbb
shll
mov
ljmp
jno
mov
pop
sarb
mov
repz
pop
dec
ret
enter
bound
sbbb
lds
sub
push
mov
mov
imul
mov
leave
xor
flds
mov
mov
adc
dec
pop
cmpsb
andb
out
outsl
icebp
addb
test
sahf
sbb
gs
add
jmp
inc
cmp
sbb
fmuls
mov
fdivl
out
aad
mov
xlat
sahf
cld
cld
or
add
push
pop
nop
sbb
pushf
cwtl
mov
xor
sahf
clc
sub
adc
out
cs
jne
ficompl
adc
jle
test
xlat
mov
jns
fsubs
stos
cmp
pushf
movsl
adc
inc
jae
inc
add
loopne
lret
jp
dec
in
add
ror
mov
add
mov
das
bound
pop
push
push
mov
jmp
mov
or
repz
ds
out
cmp
jbe
shlb
push
aad
into
cmp
sub
fwait
inc
adc
js
imul
stc
ficoml
into
gs
pop
repnz
stc
cwtl
mov
add
sbb
lock
mov
test
mov
fistpl
sub
outsl
cltd
jecxz
loopne
aam
loopne
adc
shlb
icebp
push
scas
pop
mov
jle
lret
lock
jle
add
xchg
daa
fisttpll
and
aaa
pushf
push
sub
or
cmpsl
push
dec
push
adc
jmp
push
pusha
sahf
fstps
stc
shl
enter
inc
shl
in
cmpsb
stos
fwait
xchg
or
daa
cmp
or
pop
or
push
jb
xor
es
dec
pop
daa
mov
push
iret
or
push
adc
nop
mov
jecxz
fdivp
mov
sub
movsb
sbb
push
lds
in
mov
pushf
sbb
xlat
inc
or
in
enter
lock
gs
sub
and
add
xchg
scas
scas
shll
and
call
aas
mov
stos
imul
mov
test
xlat
js
test
das
in
push
add
sub
push
mov
mov
fisubl
sub
lds
shlb
lret
gs
scas
movb
mov
iret
lret
hlt
enter
sub
int
sbb
dec
movsb
push
add
mov
jecxz
js
push
inc
mov
mov
les
and
out
repnz
insl
inc
fs
xchg
mov
xchg
fists
lcall
xchg
jo
push
loope
inc
roll
push
mov
pop
inc
cmp
push
sti
jl
sub
shll
add
pop
jge
add
ret
gs
jo
leave
mov
arpl
mov
aam
idivb
add
dec
out
aaa
sbb
je
ja
push
sbb
arpl
or
out
fdivl
shlb
std
push
sysret
xor
sbb
lret
fisttps
mov
ljmp
push
inc
pop
mov
sub
mov
ret
int
ficomps
movsl
fidivl
mov
sbb
mov
mov
or
fstps
repnz
push
aas
cld
mov
in
dec
jg
cld
push
push
dec
frstors
bound
or
mov
cmp
push
stc
mov
enter
hlt
add
bound
lcall
mov
sub
mov
lea
test
xor
adc
aaa
inc
loope
mov
out
icebp
sbb
add
adcl
mov
jbe
pop
jo
push
loop
lods
push
pop
pop
xchg
xor
scas
cmp
adcl
mulb
cld
daa
inc
imul
subb
mov
arpl
inc
dec
js
sbbl
sbb
movsb
push
mov
vmptrld
stos
jmp
mov
pop
pop
jmp
cmp
hlt
movsl
mov
into
cmpsb
jecxz
stos
pop
out
pop
push
jp
call
adc
push
enter
ret
jne
push
enter
int3
je
and
add
push
imul
or
inc
mov
jg
add
imul
fisubrs
jae
mov
cmp
mov
fsubs
out
push
aam
jo
lret
mov
lahf
fstl
push
xchg
lret
stc
push
shlb
pop
mov
sbb
cltd
aam
sbb
ds
adc
xchg
shrb
jge
push
jl
jp
mov
cmp
repnz
outsb
je
sahf
es
cmp
lds
std
mov
xor
fisttpl
and
pushf
mov
cmc
jno
sbb
xchg
fistpl
sub
add
push
imul
push
aaa
repnz
imul
pop
inc
mov
push
cmp
data16
sub
jne
and
cmp
xchg
jb
lret
jle
or
test
xor
mov
sbbl
lds
sbbb
add
out
divb
aam
sbb
out
and
outsl
lahf
cmp
mov
cmpsb
clc
xchg
in
mov
cmpsl
jmp
arpl
adcl
bnd
mov
pop
jns
in
repz
in
fistpl
xchg
xchg
test
xor
pop
push
sbb
in
xchg
scas
push
push
xchg
jns
inc
rolb
jb
mov
dec
aaa
cmc
gs
pop
pop
es
sahf
inc
pop
cmpsb
mov
pop
sub
jne
fcoml
pop
ja
mov
and
popf
popl
scas
leave
xchg
cli
bound
push
in
pushf
pop
into
mov
test
xor
int
pushf
fisttpl
stos
sub
xchg
out
xor
movsl
mov
push
adc
data16
adc
ds
pop
in
pop
enter
rolb
pop
sub
fnsave
mov
inc
call
adc
cs
pop
dec
dec
add
inc
hlt
scas
add
mov
cli
mov
xchg
fcmovne
and
jl
leave
lahf
ror
orb
hlt
dec
or
ret
gs
xchg
mov
mov
scas
add
hlt
cmp
inc
xchg
es
push
mov
xlat
jp
addr16
icebp
repz
loopne
pop
rcl
out
push
mov
mov
arpl
fadds
and
idivb
lahf
les
in
dec
gs
out
xchg
push
cmp
mov
mov
fsubrs
ret
mov
aam
cs
push
dec
out
fs
mov
test
mov
dec
cmp
sahf
jns
xor
repz
xor
pop
cmp
scas
push
outsl
int3
and
std
mov
jle
mov
sbb
data16
out
dec
outsl
inc
jge
pop
adc
popf
imul
xchg
lods
add
pusha
fisttpl
mov
xor
cld
jp
or
dec
or
aad
mov
mov
mov
pop
xchg
cltd
popaw
cmp
outsb
repz
or
adcb
aas
cmp
mov
pop
pusha
cmpsl
mov
xchg
cli
dec
or
mov
adc
and
pop
ja
fdivrl
xchg
xor
inc
jge
into
cmpsb
arpl
bound
and
cs
sbb
sub
sbb
hlt
sub
das
mov
mov
cmpsb
push
je
mov
into
fldcw
cltd
int
mov
dec
jl
hlt
push
cld
sub
mov
cmp
mov
mov
sub
xor
cmpsb
imul
ret
mov
inc
bound
data16
push
loope
aaa
jbe
ds
in
in
mov
mov
sti
jbe
in
es
pusha
mov
fstpl
pop
and
mov
sbb
pusha
incl
mov
push
aad
jg
incb
test
aam
decb
lret
xchg
ljmp
stos
sub
dec
or
push
sbb
dec
cmp
stos
fidivrl
ljmp
fisubrl
or
push
sbb
dec
cmp
stos
fidivrl
ljmp
fldt
add
imul
or
push
mov
xchg
lret
mov
ljmp
stos
sub
loopne
jp
sbb
mov
movsl
aad
int3
out
imul
xchg
in
xchg
dec
data16
insb
push
sbb
mov
cmp
sub
int3
mov
imul
xchg
lods
inc
pop
push
sub
jl
insb
inc
sbb
or
jle
sub
fsubl
je
cs
cwtl
pushf
testb
jne
push
sbb
insb
insl
pop
arpl
push
test
lcall
pop
xchg
outsl
jl
popf
test
ret
cmp
sti
jmp
and
out
sub
jae
test
push
jae
mov
and
stc
imul
cmp
orb
pop
scas
cld
test
mov
jbe
push
sbb
or
add
sbb
jns
xchg
mov
mov
inc
xchg
loop
mov
jbe
repz
ret
mov
jns
adc
push
cltd
sub
mov
xor
ret
cmp
out
or
pop
leave
orl
dec
out
insb
subb
inc
lret
sub
int3
out
imul
bound
lods
sbbb
jl
insb
dec
sbb
or
cmp
inc
scas
mov
int3
xchg
xchg
mov
shl
mov
inc
cmp
sub
jg
ds
insl
mov
mov
xchg
cld
xchg
sahf
out
aam
call
and
cmp
push
add
jns
dec
pop
ja
stos
xchg
mov
mov
pushf
xchg
mov
pop
push
dec
data16
insb
push
sbb
or
cmp
sub
int3
out
imul
xchg
lods
inc
pop
push
dec
data16
insb
push
sbb
or
cmp
sub
fdivl
and
ss
dec
push
jle
enter
das
mov
pop
test
decl
xlat
aas
and
jg
jecxz
test
mov
sub
xchg
push
stos
aam
sahf
xor
push
scas
adc
ds
push
pushf
add
fsubl
popa
dec
mov
or
idivb
sbb
cld
lock
ja
ret
lret
cmc
lods
xchg
lret
mov
pop
sbb
push
mov
sub
sahf
out
pusha
popa
negl
jmp
cmp
jns
jbe
mov
loope
loopne
sbb
xorl
push
in
iret
insl
mov
std
mov
mov
cs
add
jge
into
xchg
sub
lea
add
push
sub
add
pop
mov
insl
cmp
push
je
push
mov
fbld
out
je
mov
leave
inc
adc
fwait
pop
lock
jne
dec
mov
jmp
sbb
jne
jne
stos
pop
lea
aaa
roll
mov
lds
iret
and
lea
imul
or
insb
shlb
or
jae
ret
jl
shl
inc
dec
inc
cli
lods
pop
aad
push
dec
movsb
mov
sub
jp
mov
pop
push
mov
ss
push
les
or
int
cmp
fsubl
sbb
mov
sti
icebp
es
in
cmp
std
lahf
leave
subb
xchg
out
cmp
fs
sub
or
cs
das
int3
jbe
sub
push
shll
jae
xor
mov
lea
aam
les
pop
push
lcall
push
repz
add
loopne
jo
popf
das
jnp
jge
pop
mov
lcall
incb
fidivrl
loopne
jns
rcll
pop
push
sub
pushf
out
push
dec
mov
int
faddl
or
xor
aaa
icebp
fistpl
mov
dec
or
sub
cmc
in
popa
push
mov
jo
shlb
mov
xchg
hlt
or
sti
add
sub
xlat
mov
call
push
inc
pop
fcmovb
xchg
push
cmc
stos
rclb
hlt
aas
push
shrl
imul
jnp
popf
imul
ret
dec
fcmovnu
sub
add
jp
pop
mov
mov
push
notb
sbb
jnp
cmp
loopne
inc
arpl
mov
lret
mov
scas
xchg
int
push
sub
add
pop
and
aas
xchg
out
nop
ds
sub
push
xor
das
pop
enter
mov
testb
cs
dec
mov
pop
mov
sbb
ja,pt
lds
movsb
mov
shl
imul
negl
add
and
in
jecxz
xchg
mov
xchg
fsubrs
insl
pause
addr16
iret
mov
or
mov
ljmp
mov
push
pop
xchg
mov
pop
adc
lds
fldcw
sub
popa
push
cmp
loop
pop
xchg
orb
mov
or
lea
dec
ror
imul
push
cmc
mov
insb
xchg
imul
dec
mov
pop
mov
add
in
dec
cli
mov
imul
or
push
pusha
out
bound
sarl
test
sub
rclb
aas
mov
and
xchg
ja
gs
std
out
fisttps
inc
mov
jge
pop
add
add
aaa
add
ss
jbe
imul
pop
pop
push
cli
fucom
pop
xchg
push
jno
lods
jl
mov
aaa
lds
mov
and
fdivl
or
pop
mov
outsl
pushf
add
inc
stc
sbb
lods
outsl
imulb
pop
negl
jae
popa
sbb
sbb
into
ljmp
push
shlb
shl
and
addr16
and
or
mov
mov
rcrb
mov
rcl
les
mov
mov
leave
or
lret
mov
stos
ljmp
clc
dec
loopne
pop
jnp
ss
mov
sarb
xchg
jno
push
jnp
jns
xchg
dec
mov
insb
pop
pop
cmovle
aad
jne
inc
je
mov
dec
dec
andl
inc
cmp
or
mov
movsbl
mov
dec
ja
ljmp
fwait
shrb
jl
movsl
int3
sub
sub
cmp
das
xchg
jb
sub
xor
out
jno
or
adc
xchg
mov
jne
xlat
out
xor
imul
sbb
push
sub
ja
pop
frstor
sub
sub
sahf
cmp
cmp
lds
jmp
or
jg
popf
jg
rorb
pop
push
sub
inc
jbe
scas
jge
mov
loope
add
icebp
mov
inc
push
xchg
std
daa
mov
inc
stos
lahf
and
sub
ret
jno
out
sti
ds
icebp
fstps
mov
cli
iret
stos
outsb
div
test
push
ret
or
scas
jo
cmp
jns
aaa
mov
sbb
fisubrs
push
sub
jns
and
mov
xchg
xchg
pop
hlt
test
and
push
lahf
outsb
add
icebp
or
int
push
xchg
sbb
push
pusha
cli
jns
push
cmp
sbb
imul
push
sbb
fildll
imul
adcl
or
xor
in
test
shl
in
xchg
outsb
jmp
or
out
xor
mov
and
add
dec
out
sbb
lds
push
aas
xchg
push
lea
repz
add
ja
jge
clc
xor
xchg
aam
fcmovne
cmc
push
loope
pop
xchg
push
adc
ds
aas
mov
mov
ss
lahf
cmp
push
cwtl
jbe
sbb
cli
or
int3
cwtl
xlat
xlat
xlat
mov
xchg
adc
inc
xchg
add
xchg
jle
pop
sarl
inc
xchg
jae
push
xchg
pop
inc
repz
xchg
jnp
imul
mov
outsl
cmp
pusha
rclb
daa
leave
or
das
call
xor
sarb
fld1
pop
jb
mov
stos
rolb
mov
fnstenv
pop
pop
into
bound
xchg
xchg
in
mov
mov
pop
aam
fidivs
insl
test
mov
call
lret
fidivs
out
mov
add
adc
rorb
mov
ret
clc
stc
jmp
fadd
imul
push
pop
xor
add
enter
popa
ret
inc
movsb
jbe
dec
mov
sahf
add
dec
stos
es
inc
push
testb
add
cmpsl
clc
imull
inc
in
mov
add
pushf
mov
scas
mov
bound
xor
lahf
dec
sbb
sahf
and
cli
dec
fwait
push
es
mov
and
sub
jb
js
jns
orl
adc
ret
sub
jns
movsb
lcall
stos
mov
out
sti
arpl
sub
adc
fildl
pop
sbbl
lock
dec
lahf
fistl
add
xor
loopne
and
out
lods
lods
lcall
pop
aas
mov
adc
xchg
sbb
and
pop
pop
sbb
xor
loopne
outsb
imul
rcll
xchg
mov
lcall
sub
lds
ret
push
sub
in
aad
jo
rolb
mov
leave
inc
idiv
jg
ror
dec
scas
xchg
cs
les
cmp
cmc
outsl
xchg
lock
add
add
mov
repz
lret
es
sub
ret
gs
test
pop
sub
je
mov
shll
pop
cli
inc
inc
pop
orb
xor
shll
and
aad
xor
mov
ficompl
fs
bound
hlt
lods
mov
cmpsl
ds
cli
push
xchg
inc
jne
sahf
jecxz
xchg
in
mov
xabort
sbb
jle
and
or
mov
daa
mov
xlat
flds
mov
fdivrl
rcl
repnz
jmp
fiaddl
mov
mov
push
or
nop
adc
inc
rorl
push
sub
ss
daa
add
and
jp
std
xchg
fisubrl
std
daa
loope
int
ret
rolb
aad
repnz
mov
cmpsb
ja
mov
sub
and
dec
std
dec
inc
or
push
sarl
push
mov
xchg
sub
lahf
pop
sbbl
pop
subb
in
js
insb
jp
mov
stos
sbb
stos
jl
lock
fs
fsubr
dec
scas
lods
lcall
iret
dec
adc
pop
test
push
push
mov
rorb
mov
adc
xchg
notb
pop
pop
cmp
cmp
sub
cltd
xchg
mov
adc
test
das
clc
repz
or
xor
aaa
mov
mov
mov
in
cmp
cltd
stos
lret
mov
outsb
sbb
xchg
mov
adc
mov
push
jns
cmp
lock
fcomps
aad
dec
push
hlt
pushf
cmpsl
mov
mov
movsl
leave
out
pop
adc
sbb
mov
cmp
pop
push
test
adc
sbb
sub
or
js
cltd
sbb
adc
jmp
popa
inc
mov
xchg
popf
xchg
sbb
addr16
lods
xor
fwait
pop
sub
scas
int3
push
pushf
movsb
clc
dec
adc
dec
inc
cs
scas
or
shr
out
aaa
les
inc
push
cltd
xchg
insb
sub
jl
dec
loop
in
dec
loopne
dec
cmp
pop
std
lcall
jecxz
xchg
mov
jbe
hlt
dec
loop
movb
and
push
imul
mov
jp
cld
cmp
cld
cmpsb
xchg
jle
in
in
pop
int3
xchg
mov
rcll
cwtl
fcmovnb
test
add
mov
jb
dec
inc
psrld
mov
jae
sbb
pop
mov
pop
cs
xchg
test
push
dec
aam
adc
sub
adc
dec
ds
in
cmp
lret
sbb
outsl
imul
mov
jne
and
leave
or
sub
ds
adc
insb
dec
jnp
imul
nop
jae
inc
cs
jb
sbb
leave
or
pslld
sbbl
jp
scas
inc
pop
mov
das
imul
daa
lret
mov
push
mov
daa
mov
and
xchg
mov
push
movsl
inc
xor
pop
je
mov
icebp
iret
adc
ja
mov
cmpb
xor
imul
lock
jbe
fidivrl
cltd
mov
aas
mov
int3
inc
jno
push
scas
jnp
push
cmp
mov
outsl
aam
lds
call
cmc
daa
aaa
shl
adc
mov
xchg
jl
pop
stc
nop
incb
mov
jmp
hlt
lret
in
xchg
or
in
and
jl
sbb
fidivl
divb
xor
pop
test
sub
sbb
mov
int
inc
dec
in
cmpsl
ljmp
iret
gs
pop
es
int
mov
pushf
mov
sbb
lock
cmp
testl
xchg
sbb
sub
jg
jle
dec
shl
xchg
add
sub
scas
jne
adc
xchg
mov
int
and
jns
popa
popa
movsb
les
sahf
mov
xor
mov
stc
out
add
xlat
cltd
xor
push
inc
dec
in
test
mov
sbb
lahf
pusha
jg
popfw
cli
cmp
xor
lock
fldln2
loope
sbb
mov
or
nop
outsl
jno
or
dec
fwait
xchg
mov
dec
sbb
cmpsb
pop
les
pop
mov
jno
mov
mov
xor
dec
pop
outsb
aas
inc
sub
inc
add
mov
push
pushl
in
pop
mov
popl
push
and
cld
outsl
adc
lock
scas
xor
mov
cmp
ljmp
mov
nop
xchg
mov
lret
iret
out
jecxz
hlt
mov
icebp
mov
fistpl
cmp
int3
rcr
jbe
xchg
leave
aaa
dec
mov
adc
inc
mov
or
pusha
pop
push
cmpsl
aam
dec
sbb
or
imul
push
aas
and
outsb
sti
jle
cmpsb
sbb
cmp
out
and
and
pushl
rcl
fcoml
clc
pop
out
push
push
push
aaa
inc
imul
out
mov
add
xchg
pop
pop
cmp
movsl
or
and
dec
in
dec
cmpsl
xor
sti
repnz
mov
ret
xlat
nop
ror
mov
fimuls
popf
mov
movsl
and
outsl
int
ljmp
xchg
or
in
shlb
xchg
mov
js
cwtl
sbb
loope
hlt
cmp
mov
pop
push
pop
push
add
mov
sbb
dec
mov
push
xchg
out
call
jns
inc
xchg
imul
test
or
push
pop
xchg
leave
pop
int3
das
xor
pop
sub
jecxz
add
mov
sti
cwtl
jnp
and
dec
daa
das
pushf
jb
and
cmc
inc
xchg
cmp
in
incl
cwtl
lods
je
fucom
insb
in
adc
shll
iret
sub
cld
dec
jns
clc
cmc
mov
into
mov
pop
negl
dec
sarb
push
jo
pop
pop
jne
dec
mov
xor
xor
daa
les
adc
mov
and
int3
test
fsts
sbb
push
pop
xchg
ds
pop
sub
cmp
mov
outsl
imul
arpl
sub
addr16
std
pop
mov
push
sub
inc
int3
inc
cmp
pop
inc
dec
addr16
fs
mov
pop
out
pushf
jp
mov
adc
add
mov
cld
pop
rorb
bound
stc
in
dec
inc
popa
stos
mov
push
fwait
or
pop
xchg
or
push
cmpb
xchg
call
js
popa
mov
pop
popf
sub
jp
dec
cmp
or
lods
outsl
jae
mov
dec
jl
pushf
add
imul
jbe
fidivs
mov
sub
add
push
sti
lock
pop
xlat
or
lret
push
stos
je
adc
cld
push
cmp
pop
xor
xchg
in
sbb
adc
sbb
cs
es
or
mov
test
push
adc
xor
hlt
dec
shlb
dec
lea
xor
cmp
adc
push
adc
inc
pushf
or
push
xchg
cmpsl
dec
jo,pn
xor
mov
sbb
loop
in
andl
dec
xchg
out
jns
inc
mov
and
jl
fldt
jb,pn
je
pop
lcall
pop
sbb
push
icebp
xor
mov
sub
and
adc
xor
adc
mov
jb
lds
or
lds
mov
and
in
outsl
fs
cwtl
push
imul
pop
enter
jb
jle
shlb
loope
or
xor
xor
shll
cmp
mov
inc
or
cmp
push
jecxz
jl
jmp
and
cmpb
cld
xor
ds
or
cmpsb
and
aaa
dec
scas
rcrl
jno
negl
jne
cli
pop
cltd
adc
or
js
mov
jb
iret
mov
xorl
addl
or
cmp
stos
orb
jnp
outsb
out
int3
test
fisubl
jnp
aas
push
mov
subl
cmpsl
imul
fs
mov
add
fs
fiaddl
adc
jl
pop
sbb
pop
pop
push
push
out
mov
pop
mov
add
cmp
ret
sub
jne
stos
cs
cmp
pop
jg
mov
pop
sti
cmp
aad
cmc
fisttpll
shlb
jae
ret
mov
movsb
adc
jb
cs
fwait
mov
and
mov
xchg
je
jns
sbb
fwait
es
incl
dec
leave
push
mov
adc
fcoms
insb
push
cmp
lahf
hlt
jecxz
imul
add
gs
and
jae
stos
inc
dec
sbb
or
fstps
shl
or
xchg
mov
es
push
mov
popf
cli
pop
jns,pt
push
hlt
push
aam
xchg
push
mov
out
add
repz
mov
inc
ss
jmp
sahf
out
mov
lret
mov
mov
rorb
mov
fnstcw
lock
lds
aam
push
loope
int3
std
mov
cli
arpl
pop
lods
pop
sub
add
int3
push
push
jle
loopne
mov
dec
cltd
repz
aaa
and
and
cmp
cltd
mov
enter
sub
repnz
in
mov
or
xchg
and
mov
mov
sbb
adc
xchg
enter
nop
jo
pushf
subb
cmp
push
testb
or
inc
jb
jecxz
cmc
xchg
sub
pop
jno
loop
inc
pop
lret
outsl
or
lahf
mov
push
testl
sbb
lock
push
repnz
mov
addr16
aas
repnz
hlt
cmc
mov
dec
pop
dec
cmpsb
jecxz
add
mov
rorl
mov
push
pop
js
mov
in
les
rcrl
sub
iret
inc
xor
sbb
enter
sub
inc
adc
add
dec
jno
pop
cmc
es
fnsave
mov
push
push
push
in
cmp
xchg
adcb
lock
sahf
sbb
pop
sbb
and
mov
or
pop
sbb
call
pushf
es
xchg
dec
js
dec
cmp
cmc
mov
mov
stc
sbb
xchg
dec
pop
ret
jecxz
jnp
rcl
int
lds
xchg
test
push
pop
loope
xchg
mov
xor
ret
ljmp
pop
adc
xchg
lret
jne
test
mov
movsb
and
mov
push
pop
cld
jle
les
jl
lcall
and
or
dec
xor
push
les
outsb
out
gs
sub
inc
clc
dec
xchg
cmpsl
push
inc
push
cmp
ret
stos
sbb
adc
and
add
sbb
pop
cltd
or
test
aam
cli
aam
pop
sbb
imul
xor
dec
xlat
out
int3
aad
xlat
cmp
enter
mov
mov
jg
bound
cmp
mov
sbb
inc
movsl
add
dec
and
push
mov
push
aad
gs
lods
cs
icebp
sbb
insl
in
insb
lods
into
ficomps
xor
xchg
lds
cmp
mov
call
mov
jecxz
bound
pop
jnp
mov
adc
adcb
mov
stos
mov
iret
sbb
mov
push
jo
dec
pop
movsb
or
aad
jl
xchg
fwait
hlt
jl
cmp
push
in
cltd
dec
jecxz
fs
push
sbb
dec
adc
into
mov
and
pop
aas
lahf
ficoms
add
jno
xor
sub
adc
ret
adc
aas
in
int
pop
sub
xchg
jmp
sahf
adc
cmp
fldl2e
arpl
das
adc
daa
xor
mov
in
icebp
cmp
mov
aam
mov
inc
lret
adc
loop
ljmp
mov
loop
jecxz
xorl
pop
add
lcall
adc
addr16
pushf
clc
out
push
lock
dec
pop
and
jge
pop
stc
cmp
call
negb
ljmp
out
fidivl
cmp
push
add
adc
ret
mov
add
stos
setge
add
push
jbe
insl
push
outsb
jge
xor
pop
gs
dec
xchg
adc
test
int3
mov
fisubrs
pop
sbb
push
inc
jo
pop
dec
enter
cmpsl
out
clc
aam
dec
dec
decl
loopne
sti
push
addr16
dec
out
jne
sub
je
push
das
pop
jg
imul
mov
je
shl
sub
enter
cmpl
inc
frstor
push
or
xor
pushf
pop
inc
mov
inc
lds
nop
mov
inc
aad
pop
movsb
inc
mov
push
adc
cmp
fs
mov
dec
shl
xchg
insl
popa
outsb
pop
and
and
xor
in
pop
ret
mov
cmp
xor
outsl
out
sbb
clc
dec
adc
inc
mov
xor
dec
sbb
mov
rcl
pop
inc
or
xchg
push
mov
dec
jns
or
lahf
fcoms
scas
cli
add
dec
push
lods
cmpb
sbb
lds
clc
sub
inc
mov
les
int3
pop
add
lea
jecxz
cmp
sub
andb
cmpsl
inc
xchg
int3
mov
pushf
xchg
mov
pop
push
dec
data16
insb
push
sbb
or
cmp
sub
int3
out
imul
xchg
lods
inc
pop
push
dec
data16
insb
push
sbb
or
cmp
sub
fsub
dec
xchg
push
pushf
xchg
or
mov
push
dec
xchg
jl
insb
push
sbb
or
cmp
sub
fmull
in
xchg
lods
inc
pop
test
sbb
sahf
repz
leave
rcrl
push
or
cmp
sub
je
enter
mov
pop
stos
dec
fstpt
lret
sub
sbb
or
stc
or
cmp
sub
pop
mov
imul
jns
dec
mov
push
lret
sub
pop
jmp
sbb
jmp
pop
test
jnp
imul
push
stos
cmp
outsb
movsb
inc
mov
or
xchg
lods
inc
pushf
xchg
mov
and
xchg
push
cli
jp
shll
fwait
push
lahf
lds
push
push
jb
clc
addr16
movsb
mov
xchg
lret
pop
push
cmp
pop
and
lret
sbb
dec
clc
add
cmp
pop
out
ljmp
fwait
hlt
fucomip
mov
sbb
sbb
cmp
stc
push
leave
sub
mov
imul
push
cmp
shll
icebp
ficomps
in
jmp
fisttpl
dec
in
clc
xchg
mov
fnstsw
sahf
dec
mov
sub
cmp
push
clc
enter
mov
jne
jns
add
push
mov
inc
mov
stc
or
cmp
ret
pop
mov
imul
decl
add
adc
jmp
pop
stos
jg
push
lcall
pop
lock
mov
push
lret
pop
cwtl
pop
lods
push
pop
mov
push
lcall
fidivrl
mov
imul
scas
push
mov
pop
fisttpll
jnp
imul
pop
stos
dec
fstpt
lret
sub
sbb
or
stc
or
cmp
sub
pop
mov
imul
pop
stos
dec
fstpt
lret
sub
sbb
or
stc
cs
jp
in
and
nop
pushf
ret
mov
jecxz
pop
mov
cltd
xor
push
outsb
sbb
subb
popf
mov
ja
fildl
daa
cmp
int3
adc
cmp
sbb
jmp
cmpsb
add
mov
ret
cs
lret
jmp
mov
fdivp
daa
out
jl
jg
mov
xchg
imul
jae
xchg
shr
adc
cli
push
lcall
mov
cmp
xlat
rorl
sub
mov
divl
in
jns
pushf
faddl
aaa
push
inc
xor
test
mov
shll
inc
repnz
mov
pop
sub
push
sbb
or
xchg
insb
jns
outsl
mov
jns
clc
jmp
in
scas
ret
std
jl
sbbl
in
mov
mov
adc
jg
test
add
adc
add
xor
inc
or
xchg
mov
inc
aam
pop
mov
lock
mov
rcrb
shrb
out
xchg
popa
mov
mov
dec
xchg
or
stos
fwait
push
sbb
xor
cld
cmpsb
xor
or
pop
dec
add
add
pushf
andb
sti
mov
adc
or
mov
xchg
jecxz
aaa
cltd
pushf
dec
testb
sub
add
shrb
adc
stos
jp
xchg
pushf
bound
xor
jle
or
lds
add
or
test
push
movsl
pop
iret
cmpsl
push
jecxz
pop
push
jb
lret
inc
adc
dec
out
jns
pop
mov
jle
cmpsl
pop
add
stos
dec
rclb
call
jns
sbb
loope
and
xchg
pop
pop
pop
pop
jge
outsl
pusha
xchg
inc
mov
sahf
adc
rol
fistpl
xor
popa
in
fidivl
lahf
dec
orl
sub
xchg
sub
out
sti
subl
sbb
sahf
sarl
es
sbb
ret
mov
push
jg
pop
imul
mov
jne,pt
fdivl
mov
push
dec
pop
inc
cmp
cmp
js
jmp
hlt
push
inc
mov
int3
shlb
repz
das
jmp
lods
jnp
subl
pop
inc
ja
and
cmp
iret
pop
daa
out
pop
xchg
sub
mov
nop
lods
or
ss
push
int3
jae
dec
jmp
in
mov
stc
lcall
mov
aaa
shl
mov
xchg
adc
lea
mov
inc
test
or
xor
je
push
jecxz
lcall
push
sub
rorl
add
stos
fs
sub
leave
mov
push
adc
icebp
push
pop
push
shr
sub
or
xor
xchg
leave
sahf
mov
mov
xorb
xor
pop
xchg
mov
push
pop
mov
repz
dec
mov
dec
insb
ret
icebp
xor
fcomps
pop
aas
repz
push
xchg
cltd
pop
mov
sub
scas
mov
adc
adc
pop
xchg
incb
adc
sub
and
push
popf
jecxz
scas
jnp
gs
leave
cmp
jnp
arpl
cld
lods
jl
sarl
push
add
rcll
mov
ret
cwtl
nop
bnd
jnp
or
cmpsl
ret
lock
cmc
je
test
pop
nop
stc
add
dec
jge
sub
push
cwtl
fbstp
xchg
dec
mov
sub
and
cmp
jo
mov
mov
inc
and
loopne
int
gs
inc
int
pop
pop
enter
sub
or
fnstsw
idiv
lea
sbb
std
out
sbb
je
and
lock
fistpll
xor
jmp
add
mov
adc
fisttpll
adc
cmp
jge
dec
sbb
pusha
divb
pop
mov
shlb
push
and
push
xchg
and
mov
push
in
xor
push
push
lret
mov
inc
or
jno
std
mov
mov
jl
mov
push
pop
mov
cmp
sbb
enter
lret
test
pop
push
dec
fiadds
je
fsubrl
test
mov
addb
mov
mov
outsb
xchg
push
shl
mov
or
jp
ret
cmp
shll
mov
inc
stos
cmpsb
leave
lods
mov
inc
sbb
pop
mov
mov
fdivrp
xor
pusha
mov
pushf
push
mov
lahf
jnp
sahf
int
pop
das
aas
xchg
push
pop
into
pop
cld
adc
andl
pop
mov
aad
imul
lret
test
inc
lahf
mov
aaa
xor
shrb
loop
ret
push
mov
leave
and
dec
inc
sbb
das
jns
stc
add
pop
inc
push
out
insb
ja
iret
cltd
fmul
push
test
or
ss
out
test
push
clc
shl
push
inc
add
push
cmpsl
leave
stos
fldenv
push
mov
sbb
ss
sbb
jae
pop
out
andl
movsb
sub
out
mov
or
mov
repnz
mov
jg
stos
stos
sub
and
lods
mov
sbb
cmc
out
repnz
adc
test
adcl
outsb
xchg
fldcw
sub
shlb
cmp
jne
clc
adc
mov
jecxz
jmp
lret
sub
pop
or
fsubl
push
xchg
xchg
dec
js
mov
pop
call
lret
aas
aam
sbb
cmpsl
adc
ss
cld
add
into
mov
adc
jg
or
pop
movsl
xchg
mov
daa
aas
or
jb
mov
in
fwait
cmp
inc
adc
sub
cmp
aam
loopne
push
xchg
jle
pop
add
ljmp
int
xchg
mov
jae
fisubl
addr16
aas
cwtl
push
pop
int
push
add
xchg
xchg
cli
pop
rep
sub
test
outsl
xchg
cmp
mov
mov
cs
push
test
mov
ret
push
loopne
cmp
or
jb
pop
fmuls
sbb
lcall
arpl
stc
loope
pop
inc
adc
and
rcrb
aad
stc
jle
sbb
inc
inc
dec
mov
xchg
in
dec
fimull
rcrb
xchg
jg
outsb
or
icebp
push
pusha
out
shl
add
xorb
and
mov
mov
inc
push
pop
and
jecxz
and
test
xchg
scas
add
and
sbb
and
mov
xor
aas
shl
add
add
and
inc
jmp
stos
in
ss
dec
fs
mov
insl
xor
xor
sbb
clc
rep
stos
and
inc
repz
jge
cmc
pop
mov
pop
stc
cmp
add
cmc
ror
adc
lods
sbb
jmp
into
rcr
loope
aad
insl
sub
or
adc
into
addr16
fcoms
rcl
cmp
cmpsl
mov
xor
push
cmp
dec
xor
jnp
jno
stc
sbb
pop
mov
jae
test
cmpsl
mov
loop
filds
les
or
push
and
adc
pop
add
mov
gs
lcall
dec
test
xor
pop
stos
mov
and
inc
adc
fmul
enter
outsb
fadds
or
lods
cmp
pusha
cmpsb
sub
in
push
fstl
pop
and
or
aaa
int
hlt
cwtl
pusha
adc
mov
inc
insb
push
shlb
addr16
xchg
shll
sbb
out
adc
mov
pushf
mov
mov
xor
push
jl
xor
aaa
je
cmp
push
aad
xchg
scas
pop
jecxz
xchg
imul
xchg
fs
ficompl
lret
mov
push
fwait
in
or
xchg
out
pop
cmp
decl
mov
push
xchg
adcl
adc
test
adc
stos
jp
daa
and
lds
sarl
push
dec
clc
xchg
lods
push
je
lods
insb
sub
dec
iret
inc
mov
inc
lret
sub
loop
mov
xorb
insb
xchg
add
popa
loop
and
outsb
pop
mov
dec
push
mov
cs
outsl
adc
ficomps
xchg
xchg
test
mov
and
in
stc
jne
shl
jmp
jae
pop
xchg
test
xor
mov
xor
cmpsl
pop
addr16
or
outsl
cmp
xchg
mov
testl
or
cmpsb
and
jne
mov
mov
cmp
popf
int
aaa
push
cmp
inc
xor
mov
call
loope
add
push
fwait
jne
insl
mov
push
pop
cmp
jmp
mov
test
add
hlt
adc
repz
pop
inc
pushf
and
push
int
xchg
pop
and
mov
in
outsb
loope
sub
daa
in
shrl
inc
jno
jle
or
fucomip
test
or
mov
jno
lea
in
adc
sub
ficoml
mov
jbe
dec
inc
sub
insb
xor
push
mov
jae
inc
push
jbe
into
insl
addr16
mov
and
mov
adc
dec
pop
cli
mov
sub
popf
jb
movsb
and
and
xchg
cmc
jle
push
xlat
gs
cmpsb
insl
and
adc
insb
vpcmpgtb
add
rcr
xchg
inc
lret
sbb
addr16
adc
push
lods
mov
xchg
in
int3
push
push
add
movsb
fidivrs
cmc
lcall
lcall
or
leave
stos
in
push
shlb
cmpsl
hlt
xor
dec
inc
jmp
sub
sbb
xchg
cltd
aad
sahf
test
jecxz
sbb
adc
jle
ds
dec
push
push
jo
jb
jle
pop
int
out
notb
pop
movsb
dec
and
cli
or
jae
mov
inc
cmpsl
mov
loope
jo
addl
loopne
add
inc
lahf
rcrb
cltd
push
lock
inc
lcall
mov
pushf
dec
aaa
pop
pop
into
adc
jbe
jnp
ret
mulb
lea
call
mov
mov
mov
push
inc
xchg
pop
push
adcb
test
xchg
push
loope
sub
hlt
push
cmc
loopne
icebp
out
ljmp
xchg
push
scas
cmp
push
add
fisttpll
inc
mov
inc
add
imul
pusha
xorl
jle
ds
outsb
pop
and
inc
mov
cmp
aas
leave
ret
nop
cmpsl
hlt
add
insl
pushf
ret
stos
movsl
enter
js
test
pop
pop
mov
dec
gs
in
add
lea
xorl
sbb
movsl
les
aaa
loopne
mov
in
lods
mov
push
dec
dec
jge
out
and
cmp
shl
fcompp
cwtl
mov
jnp
arpl
js
pop
sub
cmp
imulb
jae
andb
lods
jl
stos
ret
sbb
testb
fsts
mov
clc
pop
lods
jge
dec
mov
dec
stc
add
popf
ret
jbe
xor
cmp
sbb
jecxz
fistl
scas
dec
dec
and
addl
repz
pop
popl
cs
mov
jle
in
leave
mov
cmp
cmp
in
stos
sahf
adc
das
mov
call
pushf
insb
adc
fsubrl
mov
cmc
sub
mov
push
mov
jle
mov
addr16
push
stc
mov
dec
cwtl
mov
mov
pop
and
out
mov
jge
scas
mov
adc
in
je
sahf
mov
stos
mov
inc
sbb
int
cmc
int
shrl
adc
inc
rorb
adc
inc
xor
rcll
mov
inc
movsl
push
mov
test
mov
inc
xchg
imulb
out
and
sahf
pushf
mov
jb
cmp
pop
jg
cmpsb
mov
insb
cs
dec
jne
mov
out
jge
push
ud0
int
push
pop
ljmp
push
pop
xlat
jge
jge
pop
pushf
xchg
mov
cld
enter
push
xchg
fcom
xor
sbb
mov
in
lahf
aaa
int3
je
dec
je
ficoms
pop
pop
cmp
scas
xchg
push
sbb
je
add
and
lock
ds
insl
mov
sar
jns
sbb
mov
jmp
sbb
xchg
jmp
cli
lods
xchg
repnz
and
popf
push
mov
divl
aas
test
fstpl
or
stos
leave
mov
fstps
pop
pop
ja
mov
jecxz
or
xchg
negb
aas
jo
loopne
cmp
out
sub
inc
js
aas
inc
sub
aam
mov
cld
lret
jne
jns
push
push
xadd
xlat
cmp
mov
add
xchg
pushf
sub
test
mov
xchg
jb
mov
fdivrp
fs
sbb
lds
out
pop
mov
xorb
bound
xor
pop
xor
mov
insb
adc
lods
pushf
pop
stc
sub
or
pop
mov
cmp
out
sub
loope
adc
sub
or
mov
arpl
or
push
mov
test
cmp
cmp
stc
jge
cld
fcoms
imul
loop
jbe
pmaxub
imul
pushf
lret
decl
pop
pop
popa
int
dec
jge
push
inc
stos
pop
inc
repnz
es
or
scas
mov
pop
outsl
xchg
jnp
rorl
cli
mov
and
sti
pop
out
pushf
jle
inc
xchg
jle
xchg
add
sub
in
xchg
lret
xchg
or
stos
adc
insb
push
add
xor
cmpsb
fisttps
in
adc
or
mov
shrl
mov
jmp
mov
sbb
aas
fistps
jl
sbb
mov
jl
fists
pop
xchg
lods
add
xchg
repz
and
cmpsl
fstpl
cmp
test
je
jo
or
cmpsb
loopne
mov
pop
lret
es
fnstcw
neg
mov
mov
into
negb
push
fdiv
jmp
rorb
ret
inc
sub
push
movsl
lahf
mov
out
inc
jo
pop
dec
fsubs
xchg
mov
push
or
pushf
sbb
cmpsl
pusha
in
sahf
xchg
je
je
iret
stc
xchg
sub
popa
out
enter
dec
test
jbe
xchg
scas
pushf
cmc
dec
lock
inc
xlat
mov
pop
jg
outsb
jg
clc
jb
imul
adc
loop
mov
or
insl
xchg
or
xor
pcmpeqw
test
testl
sub
incl
push
sbb
and
sbb
movsb
add
or
ret
rol
out
mov
mov
daa
dec
stc
outsl
pop
jl
sbb
call
or
cmpsb
inc
mov
cmp
gs
test
ljmp
in
mov
push
mov
lods
dec
sti
out
pop
lock
xor
xchg
push
aam
aaa
or
mov
and
dec
fisubs
out
cld
mov
mov
int
mov
stc
jl
jmp
cmpsb
jp
das
jp
test
cs
aad
sarb
test
mov
std
adc
sub
push
cmp
fbld
xorb
mov
add
pop
pop
imul
cld
adc
leave
adc
push
out
popa
dec
inc
adc
imul
adc
sbbl
and
out
xchg
lret
and
jo
sub
jp
jo
xlat
add
shlb
mov
or
lahf
sub
fdiv
sbb
push
shrl
inc
dec
insl
mov
hlt
pop
mov
aaa
dec
mov
fwait
adc
push
lahf
inc
nop
imul
push
lea
in
pushl
adc
dec
mov
sbb
mov
xchg
nop
or
xchg
xor
xor
mov
mov
inc
icebp
fisubs
ljmp
dec
stos
lea
push
pop
iret
cmp
xchg
and
imul
shrl
pop
mov
xchg
sub
jbe
sar
mov
jg
jae
sub
addr16
push
sbb
test
scas
xchg
test
jnp
xchg
out
mov
or
mov
push
push
stos
lods
jg
dec
cmp
add
push
mov
lahf
std
add
stos
and
xchg
jg
xchg
loopne
cmp
je
jne
cmpsl
sub
mov
mov
adc
movsb
sub
lds
repnz
je
test
jbe
cmp
mov
pop
mov
add
jo
inc
flds
add
mov
inc
add
pop
fistl
mov
xchg
ss
mov
imul
xlat
dec
add
call
mov
jge
andb
in
cwtl
jne
add
xor
pop
bound
mov
cli
fisubl
mov
cmc
test
sbb
and
push
std
rcll
jg
xor
mov
mov
and
cli
test
pop
mov
in
and
mov
and
dec
lcall
sar
jle
imul
cmp
cld
arpl
movsl
cld
rclb
imul
sarb
loope
pushf
xchg
int3
jae
fidivl
mov
lods
mov
dec
jbe
shll
dec
jns
and
xchg
nop
int
and
ret
sbb
cs
das
cld
sti
popf
mov
mov
mov
rcr
mov
ljmp
aas
add
js
ss
repnz
jg
out
inc
inc
fwait
and
sti
imul
sbb
stos
insb
xor
bound
sub
jbe
xchg
lods
pop
repz
or
mov
bound
push
dec
cmpsb
cmp
cli
pop
xchg
push
lds
jge
lret
push
add
mov
mov
mov
jmp
mov
push
repnz
rcrl
aad
or
or
pop
pop
jl
sbb
shrl
mov
dec
adc
mov
pop
jp
sbb
push
push
ret
cmpsb
loop
icebp
test
cmp
mov
jne
xlat
popf
xchg
jmp
sbb
popa
repz
ret
in
add
fs
ja
sub
adc
jg
xor
xor
js
xchg
and
cmp
mov
adc
xor
mov
adc
and
push
andb
xor
in
jl
out
ret
jbe
iret
cmp
mov
ljmp
push
pushf
mov
int3
jno
lea
or
sbb
inc
shlb
inc
mov
or
jno
dec
add
mov
pop
cmp
lret
jle
inc
or
cmpsb
pop
jae
stos
es
add
imul
pop
rcrl
xchg
sbb
xlat
lcall
ss
lods
sub
and
push
pop
cmpsb
sbb
ret
sub
inc
adc
mov
jl
aaa
in
icebp
sub
mov
fldenv
xchg
xor
fcmovnu
lds
addr16
jae
sbb
xchg
std
xor
in
xor
cmp
aam
outsb
rorb
xor
xor
movsb
outsb
push
pushl
inc
test
in
mov
cwtl
imul
mov
xchg
test
pop
fisttpll
xor
je
insb
jns
add
mov
pop
rcl
mov
add
imul
mov
push
xlat
dec
imul
loope
test
adc
mov
push
push
sub
lds
int3
pop
outsb
push
dec
inc
shlb
stos
and
mov
imul
jle
dec
xlat
add
data16
mov
mov
outsl
in
lock
push
cs
insl
shl
xchg
test
xchg
mov
jnp
push
jns
mov
and
mov
push
test
clc
cmp
xchg
dec
push
adc
jle
shlb
leave
hlt
xchg
mov
sahf
test
mov
adc
adc
sti
out
test
xchg
inc
cmp
sub
lcall
stos
imul
inc
decl
mov
cmpsl
add
jecxz
or
sub
fidivs
sub
xchg
jmp
addr16
lea
into
push
adc
icebp
out
xor
sub
faddp
stc
inc
dec
flds
cmp
ret
ja
add
fdivl
mov
mov
or
movntq
pop
iret
mov
lods
xchg
pop
adc
cltd
xchg
addps
xor
or
mov
fcompl
hlt
cltd
sahf
test
dec
jp
int
lea
sarb
or
or
adc
out
stos
cli
cmpsb
test
cmp
dec
test
fwait
jns
imul
sbb
or
stc
or
cmp
sub
pop
mov
imul
pop
stos
dec
fstpt
lret
sub
sbb
or
stc
mov
fstpt
jmp
fwait
mov
stos
dec
fstpt
lret
sub
cmp
or
stc
or
cmp
sub
pop
mov
imul
pop
stos
ds
mov
mov
fwait
notb
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
dec
mov
insl
stos
jge
mov
mov
fstpl
in
sub
cmp
push
jp
mov
insl
stos
jge
or
ljmp
in
sub
cmp
push
jp
mov
stos
gs
xor
xor
inc
mov
test
lea
repnz
pminsw
mov
out
insl
into
or
or
sbb
jmp
es
sub
xorb
mov
andb
daa
xor
repnz
mov
jp
sub
cmp
mov
xchg
pop
cmp
into
popf
cltd
push
cmpsb
in
std
jnp
lret
aad
jo
lea
imul
stos
pop
scas
repnz
sbb
rolb
cmp
inc
cmp
psubusb
add
jb
popf
or
xchg
mov
data16
popf
inc
repnz
pusha
adc
sbb
in
or
pop
push
imul
sub
pop
and
or
mov
scas
lods
jg
jp
mov
stos
jge
sbb
or
cli
aam
lds
cmc
sub
cmp
push
cmp
out
dec
or
or
jle
jnp
pusha
cmp
jae
inc
cltd
push
lea
clc
and
call
cmp
add
sbb
cli
mov
jbe
jl
push
lea
fsts
fidivl
out
add
adc
fisubrl
or
sbb
sub
cmp
push
jp
mov
insl
stos
jge
or
ljmp
in
sub
cmp
push
jp
mov
rcrb
imul
int3
das
mov
popf
fiadds
jno
jl
fs
or
fwait
shll
cltd
xchg
je
fisubs
js
jne
leave
mov
sub
cmp
stos
xor
out
addb
mov
push
inc
fs
gs
aas
mov
add
popl
fcompl
or
bound
addr16
xor
jns
dec
scas
popf
pop
cli
lock
sbb
or
jp
out
sbbl
push
fs
fsubrs
cmpsb
cmp
pop
dec
das
enter
sbb
inc
ret
inc
flds
ret
push
fnstcw
aam
mov
inc
push
jp
test
or
mov
xchg
cmp
add
data16
subl
rol
sbb
mov
mov
dec
jge
cld
jne
pop
push
mov
repz
ja
jns
jno
mov
mov
icebp
sub
les
ret
cld
lods
mov
insb
push
fbld
loop
or
mov
and
sub
incl
hlt
push
dec
addr16
xchg
pop
cmp
ret
pop
xor
sub
stos
ds
and
jo
xchg
rcrl
or
inc
push
das
add
hlt
daa
nop
xor
cli
lods
repnz
shll
jecxz
jmp
test
lret
stos
iret
and
ds
out
adc
xor
cli
jmp
inc
cs
xchg
add
or
rcrl
orl
fcoms
mov
lock
outsl
xor
loope
lcall
xorl
pop
pop
xchg
mov
pop
out
mov
or
les
insl
js
cmpsb
pop
sahf
cmp
mov
cmp
dec
and
int3
std
push
scas
and
cmp
or
sbb
mov
into
and
mov
jne
lock
inc
icebp
xor
leave
hlt
movsb
xchg
mov
icebp
fimull
jno
mov
repnz
sub
gs
jbe
int3
fldcw
pop
xchg
push
outsb
mov
pushf
xchg
out
adc
jae
add
lcall
rorb
loop
jl
dec
inc
icebp
inc
mov
mov
mov
clc
push
out
outsb
jg
pop
not
out
out
mov
out
sbb
rol
sahf
lock
dec
ja
sti
insb
xchg
mov
dec
pushf
ret
jle
push
ret
nop
outsl
cld
xor
inc
cs
inc
xchg
js
in
or
xchg
dec
push
xor
xlat
icebp
dec
leave
inc
xchg
xchg
in
mov
bound
out
xor
xchg
mov
dec
js
std
jmp
xorl
xchg
je
movsl
repnz
sbb
sbb
xchg
hlt
nop
aaa
imul
lea
and
cmp
stos
push
adc
test
xor
and
ret
mov
rorb
pusha
out
mov
enter
pop
mov
jbe
cmpsb
fcoms
out
addr16
dec
mov
xor
call
out
jnp
js
mov
dec
pop
scas
paddusb
lock
repz
data16
sub
sub
or
insl
test
dec
adc
pusha
aas
jae
cwtl
cmp
aas
add
daa
out
inc
pop
jb
mov
sub
pop
push
shl
pop
or
xchg
les
addl
push
rcl
push
jnp
push
movsb
cs
push
adc
mov
jae
and
jo
ja
les
popf
xchg
xor
mov
add
pop
lret
pop
lret
loope
adc
rorb
xchg
adc
push
sbb
cmc
inc
lock
fisubl
loopne
and
gs
mov
aad
push
loop
sbb
lods
leave
test
pushf
dec
mov
push
sub
or
cmp
mov
addr16
mov
inc
lcall
mov
lods
vpaddq
sbb
mov
xchg
jmp
test
movsb
xorl
cwtl
pop
lret
arpl
leave
add
add
rorl
lret
imul
cs
pusha
mov
and
inc
sti
cmp
or
stos
mov
pop
pop
into
shl
push
in
push
inc
xor
daa
add
repz
sbb
sub
outsl
push
pop
fst
cltd
call
movsl
je
cmp
scas
scas
cmp
aam
mov
pop
bound
jmp
jb
test
mov
out
or
inc
pop
pop
aas
sub
and
mov
loop
nop
loopne
xchg
xor
test
fistpll
test
shrl
fdivrs
jecxz
cmp
fimull
icebp
orb
shll
add
repnz
and
cld
movsb
out
mov
or
and
lods
rcll
sarl
in
outsb
sbb
jnp
es
mov
xchg
pop
pop
je
push
adc
clc
dec
adc
jae
push
cmp
repnz
sahf
rolb
insb
jge
pop
cmpsb
mov
out
fst
iret
sbb
orb
cmpsl
inc
ljmp
lcall
sub
into
jo
inc
fdivr
adc
pop
sub
repnz
fst
inc
lods
push
daa
mov
inc
push
ja
sbb
rcll
dec
imul
sbb
insb
test
icebp
fists
cmpsl
pushf
xchg
pop
dec
cmp
push
stc
fisttps
jmp
repnz
lds
imul
sub
add
outsl
movl
adc
test
push
mov
mov
xorb
push
cmpsb
stos
sub
pushf
das
dec
jg
and
adc
aad
jge
lods
inc
ss
rclb
jno
push
pop
fisubl
jno
stos
and
dec
test
push
fs
daa
cmp
jae
mov
daa
push
in
sar
mov
lods
xor
xlat
inc
sub
jo
xor
or
test
cli
mov
pop
pop
gs
fwait
pusha
xchg
dec
icebp
mov
sti
jbe
das
xor
push
jno
jge
sti
movsb
incl
xor
scas
sbb
pusha
xor
stos
push
xchg
rorl
addr16
es
inc
dec
jnp
cmpsl
jp
imul
mov
add
cld
cmpb
pop
mov
xchg
icebp
in
xlat
sbb
loope
adc
add
scas
test
inc
int3
sbbl
or
shll
cli
imul
mov
pop
mov
add
jno
dec
mov
cmp
fs
mov
sti
inc
push
jmp
xchg
push
fbstp
int
mov
ss
xor
cmovo
lods
stos
and
test
dec
and
mov
pop
pop
test
pop
pop
sub
pop
mov
push
add
cmp
mov
sar
out
fdiv
loop
jle
mov
pop
and
dec
push
pushf
mov
xor
ss
sub
adc
mulb
push
outsl
add
inc
adc
mov
call
lcall
sbb
stc
push
adc
lock
add
cmp
xchg
sub
outsl
mov
ljmp
adc
cmpsl
es
mov
jo
pop
jns
xchg
arpl
test
mov
nop
nop
push
inc
test
xchg
mov
add
cmp
addr16
xchg
mov
xchg
mov
test
hlt
jecxz
cli
push
mov
mov
movsb
imul
scas
call
xchg
loop
sbb
movsl
xchg
add
pop
push
jle
mov
sbb
cmp
test
leave
cmpsl
insb
sub
dec
std
mov
lock
scas
mov
or
push
sti
push
fs
rcrl
test
sub
insl
test
jg
subb
test
sbb
hlt
pop
daa
sti
imul
dec
sub
inc
mov
or
pusha
aam
mull
cli
fwait
ror
add
mov
mov
int3
ds
pop
inc
add
add
lret
mov
ds
daa
adc
cld
js
or
xchg
pushf
sbbb
cmpsl
sub
hlt
lahf
push
pop
push
scas
or
out
or
mov
jmp
fwait
test
out
shl
lods
xchg
fisttpll
andl
jge
insb
fisubl
mov
mov
sbb
dec
dec
add
out
mov
fucom
xchg
xlat
jge
and
test
lea
fdiv
mov
nop
std
nop
cmp
icebp
jl
out
std
and
fcoms
sbb
inc
and
jge
xchg
push
inc
or
push
xor
jg
fwait
cs
outsb
out
int
addr16
add
int3
or
sbb
add
cs
rcrb
mov
test
test
cmp
nop
or
hlt
andl
out
pop
or
push
push
daa
dec
or
jbe
pop
testb
test
pop
sub
cmp
sub
ret
or
jns
xchg
pop
les
icebp
popa
rol
mov
mov
repnz
cmpsl
mov
in
xor
pop
insb
outsl
sbb
mov
jo
push
pop
movsl
mov
mov
inc
sub
jae
xchg
outsb
mov
in
fs
mov
dec
push
daa
incb
andb
data16
jnp
or
dec
mov
dec
mov
insl
test
inc
test
fsubrl
sub
push
hlt
lahf
xchg
add
ds
pop
jp
iret
mov
das
les
xchg
pop
cmpl
sbb
xchg
in
mov
jns
adc
mov
addb
fs
popa
inc
orl
repz
pop
lcall
and
add
add
push
pop
test
jg
loop
mov
jne
xor
test
jno
sti
pop
sbb
inc
fwait
mov
int3
es
call
lahf
ds
fucom
adc
ds
jg
fimuls
xor
dec
xchg
add
hlt
jecxz
jmp
enter
aad
mov
pusha
les
into
cs
jp
and
push
mov
lods
mov
mov
fs
out
stos
push
xchg
aaa
mov
sbb
sarb
inc
mov
mov
das
cmp
lock
mov
mov
pop
stc
cltd
div
aad
cmp
mov
and
test
cmp
jne
pop
in
pop
in
sub
sbb
test
mov
cld
dec
and
fidivs
add
clc
xor
fcmovnu
subb
jl
cmp
jmp
jns
stos
arpl
mov
mov
mov
sti
daa
and
hlt
mov
stc
mov
lahf
arpl
cltd
inc
xor
jg
testb
push
mov
mov
and
and
jbe
das
mov
or
jb
insb
leave
xchg
repnz
and
aaa
mov
lods
mov
pop
repz
aam
jecxz
inc
lods
call
and
sub
int
cmpb
jne
xor
imul
mov
or
or
dec
bound
add
sub
pop
push
rorl
mov
hlt
inc
jo
out
movsl
mov
xor
jge
sbb
inc
shrb
stos
repz
int
aam
icebp
push
into
add
mov
js
stos
sbb
jmp
ror
in
dec
je
cli
lods
call
cwtl
adc
ss
dec
xchg
cli
mov
mov
and
adc
popl
ja
mov
gs
pop
sbb
leave
fstps
popaw
fs
and
and
scas
fldl
rorl
add
inc
in
xchg
lret
popf
movsb
aas
out
and
xlat
idivl
movsl
inc
mov
sbb
mov
aas
push
mov
sbb
sub
inc
lods
mov
sar
icebp
xchg
push
in
mov
mov
mov
cmc
movsl
jne
stc
cs
shrl
inc
jo
ficoms
std
xlat
scas
adc
xchg
movsb
cmp
clc
inc
or
hlt
sarb
cmp
jecxz
loop
mov
and
fwait
arpl
mov
adc
out
mov
push
into
xor
sub
xor
into
or
ljmp
imulb
fiaddl
cmpsl
cli
into
stos
inc
daa
lahf
lods
sahf
push
cmp
jmp
scas
inc
jge
movsw
dec
sahf
pushf
mov
das
pushf
gs
dec
dec
fucomp
rcl
cli
sub
xchg
push
xorb
icebp
sub
cmpsb
xor
jne
cmp
fcmovnbe
cmpsl
adc
enter
test
and
into
mov
mov
push
loopne
jo
dec
push
rcrb
ficomps
ds
xor
lods
adc
enter
mov
xchg
jge
aam
rcrl
mov
xchg
js
pop
fwait
pop
sub
mov
shlb
pop
pop
and
sub
push
cmp
in
loopne
cmp
or
stos
sbb
inc
aaa
sub
into
imul
lods
leave
loope
repz
scas
sub
daa
fsubl
lret
loope
cmp
sub
xchg
cmp
cmp
stos
sub
stos
or
icebp
add
add
dec
enter
pop
stc
lods
sbb
test
in
push
or
hlt
shrl
push
dec
shlb
adc
xchg
and
xor
sbb
push
js
xor
rcl
stc
movsb
call
mov
mov
movsl
mov
cmp
jnp
fcomps
adc
fisubs
mov
xor
int
lret
sbb
inc
and
jle
lock
push
or
cmp
cld
sub
mov
mov
inc
xlat
and
pop
stc
repz
pop
insb
xchg
lods
mov
leave
pop
pushf
cmpsb
out
in
pop
ljmp
stos
or
sbb
clc
push
les
and
xor
or
jnp
jb
cmp
mov
mov
loopne
cmc
mov
jb
inc
cmpsb
xor
mov
into
ljmp
cmpsb
std
xor
dec
es
pushf
sub
test
mov
cmp
and
cmp
xchg
xlat
ss
inc
cmpsb
push
mov
lret
arpl
adc
pop
cmpsb
adc
push
pop
adc
clc
push
mov
fiaddl
loop
push
adc
pop
push
sub
push
xor
dec
xorl
push
movsb
pop
cmpsl
lret
rclb
push
xorb
jb
jno
cli
stc
cmp
pushw
mov
pop
cmp
les
xor
ljmp
arpl
pop
xchg
js
mov
cld
dec
cmpsl
sbb
pop
or
mov
std
pushf
jle
popf
aas
add
out
xor
lcall
pop
xchg
test
in
iret
push
movsl
daa
je
cmp
xchg
jmp
xor
pop
add
int
sbb
mov
repnz
xlat
pop
dec
sub
mov
fiadds
daa
insb
ret
cmp
add
pop
xor
repz
repnz
inc
stos
out
mov
cmp
mov
sub
xor
pop
xor
jecxz
adc
aaa
inc
add
scas
frstor
jne
cwtl
out
inc
sub
pop
mov
push
xor
jno
rcr
cmp
inc
sahf
push
mov
out
mov
push
psadbw
imul
std
in
push
neg
popf
sbb
mov
scas
push
xchg
fnsave
fwait
icebp
xor
dec
scas
mov
sti
cmp
jmp
pop
xor
scas
imul
sbb
test
sbb
test
scas
add
jp
fcom
fmull
pop
test
sub
mov
xchg
cli
sub
pop
jnp
or
pop
ret
and
cmpsb
pushf
fsubs
mov
add
push
repz
lods
dec
cmp
adc
sahf
shlb
scas
lods
test
mov
push
mov
mov
lds
in
mov
pop
and
ljmp
sti
rclb
sub
sbb
jmp
push
ljmp
xchg
jbe
sub
and
pop
mov
xor
jno
aam
addr16
test
sub
sbb
xor
jge
mov
cld
sahf
mov
push
sub
mov
scas
faddl
dec
sbb
jl
adc
cltd
pop
jno
push
ja
inc
and
inc
jb
fiadds
test
mov
dec
inc
lret
cmp
int3
push
lret
xchg
xor
jno
insl
pushf
push
fidivrs
mov
pop
xor
ljmp
mov
fisubrs
fdivrs
mov
pop
jecxz
repnz
fnsave
pop
mov
xchg
mov
jb
fnsave
pusha
ljmp
jae
movsb
adc
mov
sar
cmpsb
aad
mov
fidivrl
out
add
cwtl
lods
repz
sbb
movups
aaa
je
xchg
mov
sub
sub
mov
or
and
sub
add
jo
lcall
sbb
clc
inc
xlat
out
adc
or
js
mov
pop
loope
jnp
inc
cmp
mov
or
leave
lods
adc
arpl
neg
dec
push
push
or
mov
inc
into
sbb
fdiv
fcom
aad
rol
mov
cli
subb
dec
sbb
sbb
xchg
pop
pusha
pop
mov
add
mov
das
cs
lea
mov
mov
pop
test
add
hlt
mov
inc
lret
mov
les
xor
fldt
leave
insb
push
ret
pshufw
sbb
xchg
xchg
clc
inc
push
xchg
push
fimuls
aas
xchg
xchg
imul
push
lret
sub
stos
dec
add
scas
pusha
adc
mov
sub
iret
es
data16
mov
std
mov
fistl
insl
sbb
xchg
add
jb
sbb
popf
arpl
mov
add
mov
sbbb
movl
mov
push
cmp
jae
mov
dec
arpl
cltd
adc
pop
pop
dec
and
inc
into
add
cmp
pusha
push
jge
jecxz
addb
dec
push
scas
xchg
divl
into
mov
mov
sbb
mov
stos
or
and
lds
or
push
test
or
inc
cmp
fsubr
int3
fisubs
loope
push
iret
andb
and
and
mov
ret
iret
rcr
sub
fiadds
inc
daa
out
dec
movb
jmp
shlb
mov
or
lods
xchg
jecxz
mov
dec
sub
pop
insb
or
insl
add
popa
lret
stc
cld
add
mov
inc
sahf
jae
in
lea
mov
movsb
idivb
decb
in
jmp
sbb
in
inc
or
jge
scas
icebp
xor
lods
or
jbe
sbb
stos
cmpsl
arpl
lret
sub
aam
mov
pop
dec
jecxz
cmpsb
es
addb
loop
xchg
fadds
jns
ja
cmpsb
jae
loop
push
push
ss
ret
push
outsb
popa
adc
or
jbe
push
test
xchg
or
jmp
and
xor
mov
lea
out
dec
int
les
addr16
sbb
cmp
pop
jo
lret
ficomps
fildll
jle
dec
aas
nop
out
into
push
mov
sbb
lret
add
mov
xchg
mov
sub
pop
or
enter
mov
jne
or
aad
sbb
xchg
into
cs
jl
insb
mov
push
cmp
pop
adc
cwtl
cmp
sbb
mov
xchg
dec
lret
or
push
fcomps
ret
xchg
aaa
push
fidivrl
jns
cmp
lret
mov
orb
ja
imul
fdivs
ljmp
pop
xor
hlt
mov
inc
or
dec
call
and
push
lods
pop
ja
sub
xlat
and
cltd
lock
mov
mov
adc
daa
addb
sahf
and
jae
add
std
sub
xchg
ljmp
pop
xor
add
test
ret
stos
mov
inc
imul
aaa
pop
jg
adc
lea
cwtl
jno
bound
and
jp
outsl
mov
fimuls
inc
je
xchg
adc
jo
clc
or
inc
mov
sub
rorl
lret
cmp
sub
imul
clc
inc
push
sub
fcmovb
fiadds
push
push
rcrl
mov
jbe
movsl
xor
mov
sub
data16
cmp
xchg
dec
dec
mulb
pop
mov
movsl
iret
arpl
call
call
loope
popa
lock
jp
xlat
xor
lcall
lods
fnstcw
sub
pop
dec
lahf
lcall
sub
stos
arpl
or
dec
or
es
mov
pushf
daa
dec
push
clc
sub
in
pop
notb
cmp
pusha
mov
lahf
fxtract
push
test
clc
jno
jmp
lcall
sbb
cli
int
fstpl
in
sub
cmp
push
jp
mov
insl
stos
jge
or
ljmp
in
sub
cmp
push
jp
mov
insl
stos
jge
or
jmp
cli
int
fstpl
in
sub
cmp
push
jp
mov
insb
stos
jge
bswap
sbb
add
inc
sub
dec
cli
ret
push
xchg
inc
test
notb
pusha
jo
dec
xchg
jae
add
xor
jbe
inc
loopne
lock
xorb
push
mov
notb
pusha
jo
add
dec
data16
loopne
lock
ss
push
mov
notb
pusha
jo
add
xor
jbe
daa
xchg
xor
es
jns
xchg
xor
sbb
and
mov
dec
sub
mov
lds
out
mov
jnp
mov
xchg
cmc
cmpsl
add
cmp
mov
das
pop
cmc
fistl
mov
negl
or
nop
or
xchg
es
adc
notb
and
cmp
cmpsb
mov
xchg
into
jbe
mov
inc
fs
outsb
push
stos
sbb
sbb
add
mov
adc
aas
add
rcrl
andl
fisttpll
xor
jle
jle
push
jne
shll
in
xorb
pop
mov
notb
pusha
jo
add
xor
jbe
inc
loopne
lock
push
mov
mov
stos
pusha
cwtl
jo
sarl
repz
mov
xor
fldenv
mov
add
rcrb
out
push
xor
sbb
insl
out
inc
xchg
push
testb
nop
add
sbb
cs
xchg
xchg
xor
jbe
inc
loopne
lock
push
mov
notb
pusha
jo
add
xor
jbe
inc
loopne
lock
push
mov
repz
test
hlt
scas
bound
sub
dec
lds
popa
adc
sbb
lods
pop
pop
shl
gs
fsts
cmp
inc
adc
mov
sub
pop
fsubrs
sarb
loope
mov
xor
add
and
cmpsl
add
iret
mov
dec
jl
je
adc
jecxz
out
test
popa
xlat
dec
and
lea
ret
jbe
pop
mov
lea
adc
xchg
pop
or
mov
int3
negl
sub
mov
into
out
xor
pusha
and
rcr
sub
loop
mov
stos
xor
movsb
jno
negl
outsl
mov
call
or
das
das
adcb
outsb
xchg
cmpsl
jp
cmp
push
loop
inc
fsubs
mov
aaa
outsb
and
pusha
not
pusha
or
testb
or
ret
into
jle
inc
cmp
pop
cmp
jb
pop
test
mov
sub
nop
sub
xor
shl
push
sahf
aaa
dec
or
jecxz,pn
pop
nop
and
or
mov
cmpsb
imul
mov
ljmp
scas
jnp
cmp
or
mov
lret
test
std
add
mov
cli
incl
cmp
aad
sub
sub
fdivrp
sub
inc
out
cli
sub
xchg
cmp
sbb
xor
fdivs
fnstenv
das
les
jmp
mov
cmpsb
les
dec
dec
push
lcall
push
fwait
int3
or
push
fildll
mov
mov
stos
rcrb
aad
ss
mov
jb
cs
es
push
fnstsw
das
pcmpgtd
arpl
fldz
std
xor
test
pop
push
xchg
lock
jle
dec
cltd
mov
push
and
adc
jns
sub
loopne
aad
into
mov
mov
cmpsl
xchg
enter
iret
adc
lret
xchg
xchg
mov
arpl
sti
cmpsl
ret
je
jp
jnp
roll
hlt
dec
imul
jnp
xor
and
xchg
dec
mov
pushl
rcrb
cmp
dec
iret
cmpsb
mov
sub
int
pop
jg
mov
mov
loop
loope
ret
dec
cltd
fmuls
fidivrl
icebp
iret
cs
push
add
int
iret
repz
clc
lds
pop
pop
iret
in
add
jns
fstp
cmpsb
sbb
jge
movsl
imul
enter
pop
sbb
cmpsb
push
add
int
outsl
pop
jne
ret
enter
in
xchg
outsl
iret
or
shl
xor
dec
and
gs
adc
mov
add
lock
or
gs
sub
xchg
jecxz
and
out
ficoms
cltd
mov
sub
ror
data16
push
cmp
pop
stos
xchg
dec
mov
add
xchg
push
xor
loope
rcl
es
jge
popf
out
xor
sub
aas
jns
push
leave
pushf
pop
sub
out
fistl
aaa
daa
jo
shrb
and
mov
dec
sbb
jb
fcmovnu
mov
rcll
mov
jno
lds
cmp
mov
fldl
lds
loope
cmp
or
movsb
pop
sbb
in
int3
add
xchg
stos
sub
push
insb
fldcw
sbb
add
loopne
sbb
icebp
mov
add
jmp
push
mov
bound
lods
data16
popa
pop
mov
fmul
inc
mov
push
jno
mov
and
loop
sbb
jb
jecxz
xor
adc
sahf
mov
pop
sbb
add
lcall
loope
mov
insb
stc
xor
dec
mov
nop
std
push
imul
mov
dec
cmp
pop
sub
mov
jb
fsts
xchg
mov
mov
pusha
out
mov
call
mov
fldl
xchg
inc
lret
cmpsl
fs
or
sbb
nop
inc
xchg
dec
bound
sub
xor
mov
adc
xchg
mov
adc
adc
xor
pop
lret
test
add
imul
je
mov
push
mov
adc
cmp
jnp
addr16
out
cmp
push
dec
ljmp
sbb
sbbl
cltd
jns
shlb
lock
adc
and
mov
cli
mov
lret
aas
test
mov
adcb
or
shl
xchg
pop
loopne
imul
in
mov
lods
scas
mov
popf
mov
test
pop
fcmovnbe
je
cli
lods
lods
icebp
testl
jmp
jecxz
outsl
sbb
dec
mov
fninit
inc
cmp
orb
cmpsb
inc
iret
addr16
and
cmp
mov
and
aaa
cmp
mov
mov
push
jno
arpl
mov
cmp
add
fs
pop
dec
mov
mov
xlat
or
sub
ret
outsb
sub
cmp
mov
test
sbb
cmp
mov
xor
aam
dec
fisubrl
mov
fcoms
aaa
lds
shrb
sarb
lods
xchg
test
pop
cmp
shlb
mov
pop
std
in
cmpsl
loop
enter
std
push
arpl
out
inc
cmpb
fldt
in
lret
inc
cs
test
mov
stos
call
pop
mov
inc
mov
repnz
cmp
cmpsl
xchg
fdiv
xchg
mov
aad
mov
rcl
js
push
push
sbb
fld
cmp
hlt
mov
nop
out
mov
mov
cmp
jb
cwtl
jbe
pop
int
pop
mov
ret
pop
inc
sbb
push
fwait
push
sub
push
adc
pushf
lods
mov
and
cs
cs
adc
cmp
ljmp
inc
jne
rclb
fmuls
and
gs
stc
jo
jbe
int
sub
in
dec
sub
jns
or
add
mov
cmp
nop
mov
ret
icebp
xchg
mov
test
jbe
std
gs
sub
jo
dec
jb
inc
int
lcall
das
or
mov
adc
pop
shrl
xchg
xor
xchg
in
inc
testl
movsb
or
push
mov
or
mov
jmp
dec
jns
orb
xchg
fisttps
and
mov
lret
dec
and
xor
imul
rorb
sbb
lods
xchg
push
xchg
cmp
push
sbb
fisubl
add
xchg
push
clc
cmp
adc
adc
imul
dec
cmpsl
rclb
or
out
sub
lret
sbb
out
lahf
popf
idivb
idivb
call
shll
aaa
inc
mov
push
in
rcl
add
cmp
jecxz
sub
mov
das
js
jo
lods
mov
je
out
jl
sti
dec
or
popf
ficoms
jnp
pop
mov
test
aaa
sub
inc
jecxz
nop
sbb
adc
mov
adc
mov
or
inc
lea
lret
aad
out
popa
dec
xor
jbe
or
xor
imul
push
pop
fisubrs
popf
xor
pop
dec
addr16
xchg
enter
fstps
cmpsl
mov
in
es
popa
movsb
sti
call
mov
cmc
stc
mov
lods
adc
adc
cltd
push
push
mov
mov
inc
mov
cmp
cmp
mov
imul
scas
pop
outsl
stc
mov
cmp
loop
rcll
aad
insb
sub
adc
scas
inc
sahf
out
div
lret
sahf
hlt
leave
mov
jl
std
mov
adc
push
in
fcoml
xchg
sti
andb
mov
jl
addl
inc
adc
into
rclb
mov
nop
inc
cltd
sub
clc
mov
shlb
jecxz
loopne
mov
jmp
movsl
rolb
mov
jb
dec
out
mov
lods
out
imul
mov
pop
test
mov
mov
jp
mov
lret
push
ss
shll
ret
movsl
cmpsb
xchg
popa
out
addr16
lret
addr16
add
add
mov
sbb
pop
icebp
xor
sti
loop
xchg
rcrl
jb
pop
xor
dec
cli
push
lahf
xor
dec
imul
or
fcoml
mov
pop
adc
jne
pop
xor
stc
and
les
dec
pop
ja
out
stos
inc
adc
outsb
or
scas
pop
flds
insl
inc
pop
jb
test
mov
rorl
jmp
lret
add
sub
popa
testb
add
je
xor
pop
aad
jno
daa
aaa
hlt
movl
pop
push
add
lock
inc
arpl
push
into
mov
push
sbb
jle
dec
xlat
es
int
stos
xchg
xor
push
or
call
mov
into
int
inc
mov
int
push
inc
arpl
mov
sub
repz
pop
stos
adc
rcl
push
xchg
pop
xorb
xor
leave
fistl
subl
xchg
sbb
aas
mov
dec
or
xor
sahf
pop
add
mov
dec
cmp
insl
xor
insl
sti
stos
pop
js
insb
stos
cmp
pop
fsubl
xlat
out
aaa
fcomi
cmc
add
mov
jns
mov
or
mov
mov
jnp
cltd
pop
adc
gs
jle
sub
sub
xlat
add
sbb
stos
sub
inc
pushf
clc
and
inc
xorb
daa
repnz
addb
mov
sahf
and
fildll
pushf
xchg
pop
lret
lret
test
xorl
pop
data16
je
into
andl
mov
es
je
push
lret
add
rcll
mov
sahf
sbb
in
neg
dec
aad
aad
lock
xchg
push
jne
sbb
xor
addr16
jecxz
rcrl
adc
scas
out
and
mov
xchg
add
jns
pop
adc
jns
imul
and
add
pop
sarb
sub
lret
push
sahf
das
out
fsubp
shrl
dec
loopne
movsl
icebp
xor
xor
lret
lahf
adc
xchg
mov
mov
daa
jb
mov
addr16
mov
inc
sub
jae
pop
jne
mov
movd
imul
mov
fdivrp
popfw
push
in
add
loop
mov
sbb
lcall
arpl
int3
rclb
stc
mov
mov
repnz
jno
sub
or
das
push
test
js
lea
jle
pop
loop
pop
imul
lgs
dec
daa
fstps
dec
dec
mov
sahf
jae
pop
mov
fstl
jb
jmp
mov
cmp
or
push
iret
sarb
add
neg
adc
les
push
mov
or
jb
mov
ljmp
sbb
andl
jp
cmp
idiv
lahf
outsb
or
mov
sbb
lock
jecxz
insl
cwtl
clc
psllq
mov
adc
mov
jns
inc
ret
sub
arpl
pop
popf
or
divb
out
add
pop
movsb
test
adcl
adc
aas
cmp
xor
mov
idivl
orl
xor
mov
mov
mov
popf
lret
imul
adc
mov
and
dec
xchg
xchg
pop
out
cwtl
xchg
add
dec
ja
xchg
mov
xor
movsl
addr16
dec
sub
insb
mov
icebp
test
jp
mov
cwtl
xchg
adc
mov
push
and
lcall
call
sub
jp
popa
int
xchg
int
cmp
jl
mov
mov
fisttpl
pop
js
aam
cmp
sub
outsb
add
inc
repnz
xor
jo
inc
mov
jecxz
inc
movsb
jno
int3
or
cld
pop
in
jns
inc
lods
push
cmp
out
mov
call
fldt
jg
push
xor
clc
sbb
xor
mov
dec
incl
sbb
jmp
lods
and
mov
sarb
xor
fmuls
ljmp
cmp
loop
sub
leave
cmp
xchg
jmp
and
xchg
ss
cmp
mov
adc
jp
mov
and
adc
add
in
es
lret
pop
inc
jecxz
lock
jae
push
fidivl
fs
pop
pop
pop
xor
jp
jmp
popa
rclb
mov
fsts
std
add
or
dec
dec
movsb
sub
xlat
add
imul
icebp
aas
insb
adc
mov
loopne
sbb
jno
and
xchg
dec
jbe
bound
pop
push
adc
xor
cmp
int3
cwtl
gs
bound
and
sbb
loopne
mov
dec
je
sub
mov
daa
les
mov
scas
fsubl
pusha
pop
aaa
loope
cmpsb
popf
jo
js
movsb
adc
and
arpl
adc
mov
sbb
sbb
pop
repnz
jbe
dec
roll
outsb
loop
mov
mov
or
cld
adc
outsl
inc
test
xor
push
mulb
pop
sub
sbb
push
imul
scas
add
pusha
pop
in
lods
and
out
fucomip
jbe
jmp
cmp
sub
xchg
pop
test
dec
lds
mov
jno
xchg
mov
repnz
nop
xor
xor
jns
add
insb
orb
cmp
and
xor
mov
iret
lods
nop
sub
or
jge
dec
and
and
mov
test
enter
stos
rcll
ss
das
mov
icebp
xor
aam
sub
pop
sbb
xchg
rorl
iret
adc
orb
mov
push
mov
inc
in
insl
imulb
rcr
dec
push
test
add
mov
push
mov
insb
das
cmp
in
sahf
xor
shrl
call
movl
add
mov
push
flds
mov
das
cli
mov
sbb
mov
xor
jno
ret
xchg
sub
add
faddp
aam
or
in
lods
xchg
push
push
mov
je
aaa
push
mov
sub
jg
sub
cmp
js
std
imul
cltd
shrl
sti
repnz
adc
pop
mov
inc
repnz
ljmp
or
and
sub
sti
push
and
mov
or
xchg
addl
fisubl
fxtract
dec
cmpsl
mov
push
xchg
int
mov
test
fmull
jmp
mov
orb
pop
add
pop
cmpsb
iret
in
outsl
jno
jns
jae
out
add
pop
icebp
jmp
adc
mov
push
dec
in
xor
xchg
pop
popf
pushf
in
ds
pop
lret
inc
daa
cmp
stc
psubsb
sub
or
test
add
push
push
fiadds
and
arpl
sub
aaa
es
pop
mov
pusha
pop
adc
enter
push
shl
cwtl
in
xor
call
push
and
cmpsb
test
gs
test
add
lods
stc
iret
or
rorb
push
fmul
bound
and
rol
jmp
pop
movsb
sbb
jp
cltd
negb
daa
ss
cltd
adc
inc
iret
push
push
in
cmp
adc
push
stc
xor
andl
rcr
mov
loope
xor
leave
add
sub
cltd
notb
dec
dec
push
pop
dec
ficoml
xchg
jge
fwait
cli
test
sbb
out
jle
and
jecxz
push
xor
mov
add
cmp
push
pop
incb
mov
mov
gs
inc
ret
cmp
xchg
jnp
pop
aas
xor
xchg
cmp
jbe
out
insl
inc
insl
shll
loope
fs
test
pop
push
cs
cmpsb
pop
ret
jnp
push
lods
sti
push
adc
adc
sub
scas
lahf
pop
pop
fidivl
and
mov
aas
out
mov
stos
pushf
mov
dec
jb
adc
pop
icebp
jo
cmc
lahf
mov
and
cmp
cmp
mov
xor
xchg
mov
cli
jg
add
mov
fstps
scas
out
adc
icebp
popl
or
mov
pop
xchg
xor
pop
dec
push
fsubrs
mov
pop
shll
push
push
gs
jae
iret
out
lcall
icebp
insl
mov
cmp
mov
push
in
mov
lret
inc
pop
andb
jmp
jne
add
aaa
jb
sti
shl
push
adc
subb
pop
push
or
sarb
mov
mov
iret
pop
fstl
pushf
ja
xchg
ss
push
adc
cld
adc
xor
fdivrl
xor
in
push
lcall
lea
fistl
mov
or
adc
int
sarb
cmp
lahf
and
xor
pop
xor
ret
inc
mov
mov
int3
mov
adc
pushf
inc
mov
adc
push
ds
mov
mov
test
cltd
xchg
pusha
scas
add
cltd
call
imul
push
fisttpl
xchg
rclb
add
xchg
icebp
pop
loopne
adc
mov
or
mov
jne
divps
sbb
xchg
inc
arpl
arpl
sarb
cs
jg
pop
or
imul
test
enter
inc
add
inc
push
testl
insl
pushf
dec
adc
call
rorl
xchg
sbb
lock
movsl
or
push
xor
jae
movsl
shll
xor
pop
inc
popa
or
adc
popa
sbb
mov
xchg
imull
mov
sbb
jae
imul
test
sub
jp
or
pop
clc
mov
xor
push
push
adc
jnp
xlat
xchg
clc
inc
push
pop
dec
test
int3
call
ds
gs
mov
push
inc
push
cmp
stc
or
es
rcr
or
pop
sub
and
xor
sbb
test
jnp
xor
and
leave
sti
and
mov
jg
sti
mov
mov
dec
insb
cld
push
cmp
sbb
dec
and
scas
and
add
cli
into
pop
adc
mov
adc
adc
cltd
stos
scas
sbb
cmpl
seto
lea
mov
or
fwait
xchg
sbb
cmp
mov
leave
lcall
fnstcw
xor
or
das
mov
cs
jl
sub
dec
mov
std
push
dec
add
mov
jo
pop
cmp
outsb
shlb
in
xor
inc
lock
stos
insl
adc
dec
scas
mov
imull
pop
mov
testl
fsts
popf
lcall
pop
add
adc
into
lock
shll
in
out
lock
icebp
push
loop
imul
ljmp
sub
mov
psllq
cmpb
xchg
add
frstor
and
test
cmp
repz
mov
mov
mov
outsl
or
adc
movl
adc
aas
insb
int3
adc
jns
jge
cld
sti
sbb
stc
lods
jg
cmp
push
addps
push
xchg
push
rol
in
out
pop
xlat
mov
test
jns
ficoms
sbb
xchg
add
shrb
mov
sbb
mov
fwait
mov
pop
ds
mov
push
fisttps
sbb
adc
fistl
or
mov
imulb
push
fdivs
mov
pop
lret
mov
xchg
sbb
mov
adc
movsb
pop
pop
push
leave
in
xchg
movsl
hlt
inc
inc
push
cmp
loopne
lret
test
and
js
aaa
mov
sbb
inc
test
in
aas
pop
adc
in
push
test
push
ds
adc
in
bound
popf
aaa
add
jno
jae
lret
jnp
jle
movsl
mov
popf
xchg
mov
cli
mov
pop
ljmp
and
push
xchg
lcall
sbb
pop
mov
jo
out
mov
jnp
or
ret
jecxz
dec
into
adc
pop
cmp
push
jmp
push
addr16
test
pop
cmp
xchg
fstpl
je
iret
mov
rolb
xorl
shlb
inc
inc
mov
sub
jecxz
neg
lods
push
add
jo
add
xor
jbe
inc
loopne
lock
push
mov
notb
pusha
jo
add
xor
jbe
inc
loopne
lock
push
mov
notb
pusha
jo
add
xor
jbe
inc
loopne
lock
push
mov
notl
pusha
jo
add
xor
jbe
in
loopne
xchg
mov
dec
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
stos
or
push
sbb
mov
cmc
xlat
test
add
or
add
add
or
add
add
mov
ljmp
add
add
sub
add
add
add
add
add
mov
push
add
add
add
add
xor
add
add
add
or
xor
push
add
add
jmp
add
add
mov
or
cld
add
add
add
sbb
in
add
or
testl
faddl
fildl
xchg
data16
mov
and
inc
add
add
add
add
sub
mov
add
adc
mov
add
add
or
add
inc
add
add
add
add
jl
inc
add
and
dec
add
add
cld
add
add
add
add
add
nop
add
push
add
dec
add
mov
mov
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
cmpsl
add
lea
cmp
fwait
add
and
xor
add
add
pop
inc
add
add
add
in
pop
add
add
push
add
add
add
jmp
mov
add
and
sahf
add
add
add
add
aad
push
add
add
or
pop
add
add
add
and
add
push
add
add
nop
add
filds
jl
push
add
add
add
add
add
add
add
add
add
add
add
add
push
and
add
cmp
jmp
add
add
add
add
add
add
push
inc
add
add
add
or
cmpsb
add
add
add
add
add
add
add
add
add
sbb
cmp
jb
rolb
sbb
add
add
add
push
inc
add
lret
add
push
add
add
add
add
push
add
add
add
add
add
add
add
push
add
lret
add
imul
push
add
add
add
add
add
jl
popf
add
xor
add
add
add
sbb
je
jns
mov
add
imul
add
push
fadds
add
sbb
sbb
inc
add
add
add
pop
add
aam
cmp
pop
add
add
add
add
mov
flds
mov
or
add
add
add
fiaddl
sbb
push
add
je
mov
add
add
add
add
push
add
add
add
add
add
add
add
add
aaa
add
inc
add
sub
or
dec
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
sbb
testb
add
add
add
add
add
add
lret
add
add
add
add
out
add
add
pop
fwait
add
insb
add
add
add
add
xchg
pop
sub
ficompl
rorb
int3
fcmove
fsubrl
push
push
inc
mov
cli
scas
cmp
insl
popa
insb
stos
out
lahf
setb
lcall
std
pop
push
jo
mov
jo
pusha
pop
adc
dec
sbb
inc
dec
mov
fcompl
pop
in
test
in
and
push
fldl
aad
cmc
jle
cmp
mov
gs
inc
mov
stos
xchg
xchg
gs
movsb
inc
test
cmp
ds
pop
test
pusha
add
mov
or
add
daa
adc
ljmp
icebp
cmpsb
ss
sub
test
jns
push
rcrl
push
sub
mov
push
xchg
mov
mov
stc
es
xchg
xchg
or
fcmovnu
sbbl
data16
loopne
leave
mov
int3
push
mov
and
in
adc
and
mov
jnp
mov
int3
or
pop
scas
push
cltd
xchg
scas
lods
adc
add
mov
int3
sub
pop
lahf
cmpsb
cld
cltd
iret
mov
mov
pop
push
arpl
inc
push
mov
ljmp
fimuls
repnz
pop
out
xchg
loop
mov
test
adc
cmpsl
sub
cmc
jge
mov
push
mov
add
in
add
add
add
aad
inc
sub
jne
inc
push
dec
das
push
dec
ffree
loope
inc
jno
add
push
test
mov
xor
sub
jne
mov
xor
cmpsb
lock
out
pushf
addr16
mov
test
cmp
jl
inc
inc
fcomps
nop
sub
xor
xchg
mov
ja
mov
add
out
xor
adc
jge
inc
xchg
sbb
jmp
fbstp
sbb
nop
push
es
lods
mov
jo
in
jno
and
sbb
jmp
sbb
insb
aas
ss
add
jmp
inc
adc
add
sub
xor
ficompl
xchg
inc
stc
ret
lds
add
or
sbb
sti
pop
in
pop
fbld
ljmp
cmp
xchg
mov
enter
scas
jp
adc
cwtl
xor
cli
pop
push
pop
rcll
scas
pop
push
lahf
js
add
lds
int
push
and
pop
fsubr
cmp
and
mov
ljmp
jecxz
roll
push
outsl
jae
std
lcall
and
test
in
rcrl
mov
outsb
cmp
negb
jp
push
pop
sub
flds
push
or
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
