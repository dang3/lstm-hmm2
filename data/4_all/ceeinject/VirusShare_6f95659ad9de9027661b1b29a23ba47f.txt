call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xchg
movsl
adc
and
xor
cmp
jne
sub
mov
lds
hlt
stos
add
adc
and
sbb
cmp
fcoms
stc
aam
in
hlt
stos
add
adc
and
xor
inc
add
and
cmp
cmpsl
fstpt
stos
je
adc
push
cmc
je
lahf
movsb
inc
jmp
push
xchg
inc
stos
in
enter
mov
jg
push
pop
cltd
or
jne
inc
xchg
pop
hlt
out
mov
mov
std
ljmp
in
mov
adc
push
inc
dec
fimuls
out
dec
add
test
or
inc
dec
outsl
jp
adc
addr16
mov
ret
or
add
fcomps
cmp
test
aad
mov
movsl
sbb
leave
xchg
xor
sar
jmp
ja
and
fs
sub
push
loope
hlt
mov
mov
push
cld
push
adc
scas
jp
mov
pushf
add
out
cmp
mov
aam
in
cmc
mov
and
xor
inc
sbb
and
ret
movsb
jecxz
repz
hlt
into
jo
push
dec
dec
jnp
imul
xor
adc
mov
mov
scas
rolb
mov
push
dec
push
or
imul
inc
mov
shrl
mov
jmp
jb
cmp
inc
sbb
add
cmp
ficoml
les
hlt
stos
add
adc
and
xor
inc
sbb
cmp
ficoml
les
hlt
stos
add
adc
test
daa
pop
outsl
push
xchg
mov
mov
add
andl
pop
or
cli
push
idivb
js
aam
xor
outsl
iret
jle
adc
cmpsb
cld
int3
mov
and
test
and
xor
test
rcr
mov
jne
adc
imul
adc
and
loopne
dec
pop
xchg
lock
jnp
ss
jno
xchg
in
imul
movsl
jecxz
pop
cltd
outsl
cmp
or
jmp
cmp
cmp
push
insb
jb
ficompl
xchg
pop
cmpb
fsubrl
divb
in
sub
jnp
in
sbb
inc
push
cwtl
mov
dec
add
jl
dec
push
push
push
stos
lahf
rcrl
push
xor
ficomps
sbb
fisubrl
outsb
pop
imul
fdivl
lcall
das
cmp
mov
outsl
cmp
inc
mov
or
push
sbb
mov
xor
mov
jno
mov
sbb
push
cmpsl
sar
popa
movsb
xchg
cmp
or
adc
inc
pop
xchg
sub
inc
xchg
mov
inc
or
jmp
xchg
jmp
inc
sbb
push
inc
insl
rorb
sub
inc
lea
fcoms
or
inc
aad
jne
push
mov
lock
inc
and
loopne
sub
in
ja
adc
repz
mov
mov
movsb
mov
and
jecxz
mov
loopne
adc
xchg
jmp
pushf
inc
or
outsb
dec
and
cli
lock
dec
fwait
cli
jae
pop
push
pop
and
inc
push
sub
xor
rolb
outsl
xchg
ss
dec
ljmp
cltd
push
mov
lods
iret
div
jns
pop
out
mov
cmpsb
test
sub
dec
sbb
mov
inc
test
dec
mov
sub
jo
movsb
or
ficoml
js
js
xchg
mov
pop
mov
sti
sbb
push
gs
ja
sub
mov
inc
repz
and
lods
rclb
mov
call
rol
pop
mov
popf
inc
pop
sbb
outsl
cmp
repz
jno
and
mov
xchg
xchg
ret
mov
shl
inc
pop
aad
jnp
jl
aas
jns
jbe
clc
cltd
or
gs
addb
rcl
mov
and
dec
pop
push
push
fwait
clc
fistpl
inc
jne
inc
pop
addl
and
enter
loope
jmp
dec
clc
mov
testl
test
cmp
movsl
pop
pop
mov
lea
stc
adcl
jmp
inc
push
lds
or
push
icebp
xchg
xchg
out
les
mov
addr16
dec
jns
xchg
pushf
jmp
lret
pop
push
cmp
or
add
or
xchg
jecxz
xor
jecxz
das
test
test
shr
in
in
sbb
mov
and
outsl
or
ss
jne
cmp
ljmp
push
pop
jle
lahf
mov
pop
jle
push
pop
add
addb
mov
popf
sbb
ljmp
jbe
and
add
nop
and
jp
in
xchg
mulb
movsb
pop
mov
jae
inc
imulb
sub
mov
fwait
mov
jl
sbb
pop
test
push
sub
xchg
movsl
mov
sbb
test
and
mov
sti
mov
pop
adc
sbb
leave
or
mov
leave
lea
ja
pop
and
pop
jp
cmp
out
pushf
xor
sub
inc
jb
lret
add
fimuls
mov
mov
call
mov
loopne
lret
addr16
popf
pop
push
xchg
cmc
roll
movsl
lods
jnp
cmc
push
aam
lods
ss
sub
push
jmp
jecxz
jo
pop
adcl
popf
push
repz
sub
js,pt
xchg
in
ficoml
cmp
imul
mov
mov
dec
popa
aam
std
xchg
xchg
movsl
mov
xor
rcrb
xchg
pop
lods
sub
or
popf
out
rclb
pop
add
mov
mov
mov
xchg
add
jo
xor
outsl
imul
jg
xchg
repz
pop
sar
lea
clc
lock
push
lds
int3
add
popf
sub
lds
aaa
stos
cli
int
adc
cmp
xchg
test
outsb
into
daa
add
xor
jle
cltd
add
lcall
cmpsb
jecxz
dec
xor
cmpsw
mov
mov
pushf
push
inc
xorb
lds
outsb
ret
pusha
dec
lock
loop
cmpsb
call
test
xchg
inc
rclb
jle
dec
lahf
inc
lea
inc
sub
repz
dec
sub
movsl
xchg
push
jbe
pop
loop
ljmp
jb
and
lret
cwtl
enter
in
sbb
push
mov
jne
fbld
fidivrs
cs
xchg
adc
pop
cltd
es
daa
xlat
and
cmp
inc
cltd
adc
and
and
lcall
mov
add
lods
lcall
mov
sbb
sbb
icebp
add
movsl
cld
int
bound
mov
mov
push
pop
pop
outsb
lret
mov
dec
dec
lea
popf
es
std
mov
test
imul
fsubs
and
sbb
inc
jg
pushf
push
jl
out
nop
jae
fs
cmp
mov
jns
xchg
hlt
jle
das
addr16
mov
mov
pop
jno
arpl
out
dec
dec
xor
lods
push
xor
fwait
xchg
adc
call
and
mov
sar
mov
inc
inc
xchg
xchg
or
ret
add
call
pop
sbbl
sbb
ret
imul
mov
push
int
xor
scas
cmp
mov
adc
jbe
push
adc
jne
test
shl
jg
int
dec
int
mov
push
pop
push
insb
in
mov
cmp
mov
cmp
sbb
dec
insb
fwait
pushf
loope
xchg
das
cmp
push
push
ret
lret
sub
dec
jmp
push
leave
stos
mov
push
push
mov
push
jno
ret
jae
or
pop
inc
mov
stos
xor
imul
add
push
cld
lahf
lods
jne
fisubl
or
mov
sub
dec
popf
mov
mov
subb
add
out
les
mov
repnz
adc
bound
popa
jl
mov
cmp
jge
mov
ret
xchg
add
dec
sbb
mov
add
dec
pop
and
cmp
test
movsb
ss
add
mov
push
icebp
cmp
push
bound
fbld
sbb
pop
lcall
fwait
aad
push
loop
cmp
push
or
jae
adc
xor
test
or
mov
loop
cmp
pop
mov
cs
cmp
test
and
lret
push
mov
jo
test
jns
xor
push
jb
mov
imul
lret
xchg
mov
fs
xchg
loopne
popa
out
cmp
xor
inc
push
jg
call
cmp
jle
movsl
lds
fwait
sub
addr16
cmp
pop
push
incl
jne
pop
xorb
mov
mov
mov
mov
sbb
int3
add
pop
inc
jle
hlt
inc
push
xor
pop
jg
xchg
movsl
push
add
popl
mov
loop
call
int3
imul
daa
mov
loopne
jmp
fstpl
jg
push
pop
mov
lods
cmp
mov
jo
adc
mov
jp
adc
or
jge
lret
and
mov
sub
xor
repz
add
mov
push
inc
out
sub
pop
adc
mov
mov
call
push
outsl
std
add
mov
dec
dec
ret
jne
ja
and
les
cltd
test
and
and
dec
jns
iret
push
jo
dec
push
jbe
das
dec
xor
adc
push
jmp
or
adc
dec
mov
gs
adc
fistpl
test
dec
xchg
cmp
jb
arpl
sub
inc
inc
rclb
sbb
enter
sub
cwtl
test
idiv
aas
mov
js
cs
and
add
cs
scas
or
push
mov
xchg
inc
mov
inc
sbb
xchg
sbb
mov
xor
incl
fs
push
repnz
sub
int3
sbb
insb
dec
mov
dec
push
mov
add
ret
mov
daa
cmp
std
cltd
push
sub
or
add
push
cmp
stc
push
inc
cmpsb
add
mov
iret
or
pop
sbb
lret
daa
jge
mov
pop
dec
xor
lret
mov
arpl
inc
mov
mov
adc
insl
cmpsb
mov
inc
mov
loope
cltd
mov
icebp
jecxz
cld
xchg
pushf
mov
test
lcall
sub
loope
sub
enter
push
cmc
pop
mov
sub
jecxz
mov
dec
rcr
dec
mov
jbe
cmc
cmp
pop
stc
mov
cmp
imul
add
cmp
ja
mov
xor
cld
jns
leave
xchg
pushfw
mov
mov
or
xlat
sbb
mov
mov
mov
dec
jmp
cld
int
stos
sub
int
fisttps
adc
pop
imul
add
sbb
mov
xchg
xor
xchg
sub
and
cmp
sub
mov
cmp
popf
out
xlat
jl
fstpt
mov
mov
ljmp
fiadds
fcoms
pop
or
lahf
jae
lret
test
inc
and
adc
cwtl
sub
lods
mov
add
test
mov
notb
sub
movsl
mov
cmp
mov
test
mov
cmp
lods
or
mov
shll
inc
adc
mov
mov
sub
and
mov
fst
mov
inc
mov
dec
andl
push
dec
lcall
add
fstpl
lahf
sarb
es
popf
push
loopne
and
fcomps
fwait
lock
mov
dec
sti
pop
xchg
dec
inc
repz
nop
loopne
pop
dec
cmp
arpl
sarl
or
inc
out
loopne
and
ret
mov
cli
inc
jl
test
add
inc
lcall
leave
sahf
add
jns
add
xor
mov
shlb
mov
add
aad
andl
ret
lods
lods
roll
mov
add
push
addr16
iret
sbb
andl
jmp
xchg
lods
fstpl
push
push
push
movsb
mov
dec
cmp
in
icebp
pop
adc
pop
je
testl
out
imul
dec
ljmp
clc
mov
test
lock
les
jecxz
or
out
jecxz
bound
cmc
pop
sub
das
sub
sarl
hlt
push
fcmovnbe
out
std
in
iret
into
fimull
pop
cld
pop
jle
daa
mov
xor
cwtl
lods
js
adc
bound
stos
insb
scas
adc
dec
mov
xor
jge
dec
fcompl
jbe
enter
scas
and
stos
arpl
aas
push
test
xor
sbb
jge
popa
mov
frstor
iret
add
pop
fs
lods
cmp
cmpsb
call
mov
mov
into
idivb
mov
pusha
adc
test
pushf
repnz
adc
pop
stos
pop
scas
or
fidivrl
dec
pusha
sub
das
xor
xchg
stos
xor
mov
fmuls
repz
jmp
sbb
mov
shlb
xor
sub
inc
mov
push
addr16
xchg
xor
mov
push
push
mov
mov
aad
pop
testb
mov
mov
mov
in
popf
jmp
or
xorb
shll
ja
push
jbe
mov
pop
insl
call
push
xchg
lret
add
xlat
pop
adc
or
sbbb
aas
lods
pushf
or
or
lds
es
stos
scas
fnstenv
jl
in
add
cmp
sub
and
ja
xor
lret
addr16
fildl
in
dec
loope
jns
les
jns
out
aad
mov
lods
add
fldt
jne
push
pop
pop
cmp
mov
pop
jle
mov
mov
cmp
subb
cli
xchg
xchg
fisubs
inc
ret
scas
adc
mov
xlat
or
enter
mov
sub
pop
jg
fwait
pushf
cs
mov
iret
pop
call
hlt
sbb
in
repz
jl
jne
pop
jmp
cs
cwtl
dec
and
fucomi
nop
mov
jne
int
sub
xchg
stos
xor
inc
out
cwtl
sarl
push
fsubs
xor
fdivr
xor
mov
ret
pop
fnstcw
pop
inc
cld
arpl
add
cmp
cs
xchg
add
xor
aas
add
jno
arpl
mov
test
jo
shlb
or
xor
int
into
lds
sub
sub
and
cmp
adc
sub
das
lcall
mov
pop
xchg
data16
push
xchg
sbb
cmp
aas
cwtl
mov
rolb
decb
fisubl
arpl
jecxz
jle
js
insl
cmp
push
or
pop
je
sub
inc
lods
adc
sub
hlt
mov
add
mov
mov
jo
in
not
or
out
sti
mov
ja
sbb
fmull
mov
jmp
xchg
mov
push
adc
call
popa
mov
inc
lds
jle
dec
jo
test
shl
mov
hlt
jecxz
sti
mov
or
clc
cmp
repnz
push
mov
hlt
arpl
popf
arpl
sub
aas
sti
cmpsb
ret
pop
cmp
sub
mov
cmp
inc
mov
and
push
inc
mov
or
adc
and
je
ds
fistpll
mov
push
into
lods
cmp
xor
test
mov
dec
cmc
or
cmpsl
dec
ds
outsl
pop
dec
imul
mov
addr16
lahf
mov
push
in
lea
in
pop
dec
pop
mov
popa
fidivrl
xchg
add
mov
pop
or
mov
fisubs
adc
or
dec
mov
cmp
hlt
mov
xchg
xchg
in
outsb
and
inc
cltd
mov
ret
pop
fsubl
inc
push
push
push
mov
push
mov
jp
fs
inc
adc
mov
loopne
dec
rorb
mov
mov
paddusw
rclb
or
test
shlb
xlat
into
in
xor
ss
into
push
xor
cli
sub
and
add
fstpt
inc
cmp
jp
outsl
xchg
mov
mov
jp
cmp
arpl
mov
enter
or
test
or
cmpsl
xchg
negb
jl
imul
std
in
push
test
mov
xchg
cmc
mov
xchg
mov
push
out
add
or
cmp
ds
and
jge
push
jge
cmp
mov
popf
daa
push
cmp
adc
scas
int3
inc
xor
fisubrl
loope
or
mov
ret
mov
and
push
and
xchg
fidivrl
pop
jg
pavgw
cmpsl
call
jnp
jns
hlt
jp
notb
outsb
call
or
xchg
stos
fs
push
pop
mov
out
dec
pusha
ftst
push
cwtl
cmp
in
andb
jo
ljmp
inc
inc
lods
jge
mov
ljmp
mov
mov
mov
out
aad
jle
inc
js
sbb
cmpxchg8b
das
cmc
push
inc
jbe
rolb
push
inc
add
orl
pop
and
pop
xchg
xchg
dec
adc
insl
ja
in
mov
sbb
mov
call
dec
dec
sub
pop
loope
xor
jno
mov
hlt
ljmp
mov
dec
rorb
jno
xchg
xchg
mov
and
out
dec
lods
inc
lea
les
xor
fwait
inc
mov
clc
fs
push
in
or
lret
repnz
mov
and
and
jle
cwtl
fisttpl
and
mov
mov
and
or
sbb
test
or
cmp
mulb
mov
jmp
xor
sbb
adc
pusha
fmulp
pop
mov
dec
in
push
dec
mov
xor
fldl
aas
notl
fldlg2
je
adc
xchg
scas
and
sub
jnp
dec
or
mov
in
sub
sbb
test
jbe
inc
and
cli
push
sbb
mov
daa
jge
lahf
rorb
scas
stc
inc
test
xorb
sub
js
outsb
mov
jns
roll
int3
icebp
sub
push
jb
pusha
xchg
inc
je
xchg
xchg
cltd
sub
mov
fisttpl
push
dec
pop
pop
loope
jb
mov
sahf
js
jmp
sbb
or
inc
cli
jle
sbb
sbb
cmc
scas
xchg
dec
aaa
sub
mov
adc
and
in
fdiv
or
pushl
fidivs
mov
das
in
mov
xchg
gs
rcll
js
addr16
je
dec
and
fdivrs
pop
xor
xchg
dec
mov
push
movsl
jbe
enter
in
je
inc
xor
cld
xchg
xchg
lods
push
fidivs
add
mov
xor
imul
je
mov
in
push
push
aas
outsb
out
pop
sti
xor
mov
adc
iret
cli
aas
cmpsb
mov
mov
dec
mov
lcall
scas
mov
sar
divb
jmp
push
pop
and
mov
xor
push
idiv
mov
rcl
test
xchg
adc
lds
dec
lds
insb
inc
push
cmpsl
pop
add
dec
in
push
mov
add
and
icebp
or
nop
push
xor
stc
je
ljmp
mov
pop
rcl
jl
out
es
int3
mov
adc
cmp
mov
call
iret
leave
aad
ds
aad
outsb
mov
mov
xor
jb
mov
ret
dec
lods
lahf
pop
psubsw
mov
or
and
inc
xor
xchg
and
mov
fnstcw
mov
stos
mov
roll
lds
inc
test
test
mov
scas
push
push
in
dec
mov
add
clc
sub
and
ja
pop
sbb
add
je
lcall
loope
test
push
or
std
enter
test
jmp
shll
inc
shl
sub
mov
xchg
jne
inc
push
mov
and
adc
pop
xchg
out
sbb
aas
imul
or
or
xchg
cmpb
call
mov
mov
in
dec
aad
xlat
dec
inc
mov
and
test
push
lods
arpl
ljmp
or
cmc
leave
and
stc
ret
fsubrl
cmp
push
jmp
inc
fsubl
adc
je
movsl
xchg
cwtl
and
jne
insb
dec
icebp
dec
out
insb
mul
xor
jmp
pop
pop
push
dec
push
xorl
imul
xchg
xlat
mov
cli
add
stos
lods
xor
hlt
es
sub
inc
repz
fildl
push
pop
sub
add
stos
lahf
jbe
ljmp
add
pop
lods
or
xor
mov
lret
jbe
loop
mov
out
enter
scas
cs
ret
xor
jecxz
mov
mov
jne
mov
rolb
xchg
fnsave
nop
stos
pushl
scas
mov
mov
scas
or
cltd
icebp
lea
pusha
push
lock
sahf
jp
imul
inc
mov
cmp
jmp
jno
adc
call
jl
das
test
pop
inc
jbe
jne
jecxz
cmp
cmpl
pushf
sbb
fcmove
pop
push
movsl
mov
or
rorb
leave
and
sarb
jbe
lods
out
mov
mov
shll
or
mov
jae
dec
int
inc
and
bound
mov
or
adc
int
push
mov
sbb
cltd
xor
dec
es
out
mov
imul
popf
dec
movsl
xchg
xor
inc
sbb
cmp
ficoml
les
hlt
stos
add
adc
and
xor
inc
sbb
cmp
ficoml
les
hlt
stos
add
adc
and
xor
inc
sbb
cmp
ficoml
les
cmc
stos
add
jp
push
sbb
cmp
ficoml
mov
pop
jne
inc
or
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
adc
and
push
scas
dec
rcr
lahf
arpl
mov
mov
jo
push
repz
ja
add
push
loope
icebp
jae
arpl
add
jno
inc
jecxz
stos
mov
sti
xchg
dec
loope
icebp
insl
shll
and
jg
daa
mov
cmpsl
and
es
dec
shll
dec
hlt
push
pop
inc
push
test
mov
cs
xchg
call
out
jmp
cmpsb
sbb
icebp
ret
jl
dec
out
pop
gs
into
ss
pop
add
jno
sub
stc
sbb
in
mov
jno
push
xor
aas
jnp
push
adc
and
out
ret
sahf
xchg
int3
fistps
xchg
iret
lods
loopne
icebp
mov
arpl
xchg
fldl
xchg
sub
ret
xchg
repnz
push
in
popa
push
dec
adc
pushf
scas
push
push
clc
nop
call
and
out
xchg
xor
popa
or
out
mov
clc
sahf
cmpsl
xor
fstpl
mov
pop
mov
je
out
pop
jo
and
inc
loopne
dec
mov
and
jae
vandnpd
sbb
lds
xchg
adc
inc
jecxz
jp
jno
inc
rcrb
cmpsb
sub
movsl
xchg
push
shrb
push
popa
mov
xor
fldl
inc
repnz
ss
inc
roll
data16
add
out
and
add
push
in
jmp
jae
arpl
xchg
and
adc
popa
ret
jno
inc
jecxz
adc
and
jae
arpl
xchg
and
adc
popa
ret
jno
inc
jecxz
adc
jecxz
pushf
adc
jb
xchg
shll
jae
dec
add
sbb
cli
inc
inc
sbb
adc
fimuls
mov
sub
add
out
data16
sub
xchg
mov
div
sbb
cltd
clc
cmp
std
or
lock
sbb
add
ds
mov
int
mov
push
jnp
push
aaa
push
fldl
dec
and
add
or
push
and
add
sub
adc
subb
ss
fdiv
in
insb
pushf
or
scas
mov
xchg
fs
bound
jno
addr16
lahf
sbb
test
jmp
push
aam
or
cmpsb
insb
mov
mov
imul
dec
push
out
sbb
adc
adc
jg
insl
test
aam
push
data16
add
mov
rol
mov
and
adc
and
lods
psrad
ret
out
loop
jae
xor
sbb
inc
out
push
aad
cmpsb
clc
jge
fstps
add
inc
scas
fldenv
movsb
inc
pop
rol
lret
stos
in
add
xchg
pop
cltd
pop
loope
addr16
xchg
jmp
je
mov
shll
fldcw
ljmp
lock
sub
sarb
ret
popa
xchg
faddl
movsl
push
inc
mov
xor
pop
iret
cmp
push
xchg
ljmp
loopne
inc
rcll
lahf
fs
pop
mov
sti
add
cwtl
xchg
enter
stc
pop
ds
cs
bound
imul
inc
xchg
adc
xchg
pop
mov
call
clc
cmp
jp
sahf
mov
sbb
mov
mov
push
mov
lret
out
pop
push
or
xor
sbb
aaa
popl
cmc
adc
push
or
lcall
jge
add
xor
shrl
pop
insb
jne
out
jp
jecxz
mov
not
push
lret
mov
sub
aad
out
fidivs
push
and
imul
lcall
adc
mov
ljmp
sub
shrb
push
xor
mov
cmpsb
test
test
out
xchg
fstpt
sub
pop
pop
lods
cli
cs
mov
dec
lods
mov
or
pop
mov
lret
arpl
and
dec
push
cmpsl
clc
dec
aad
addr16
cmpsb
sbb
test
int3
sub
cmpsl
mov
fcomp
iret
or
mov
inc
jge
jle
les
test
out
in
cmp
xchg
cmp
push
jle
rcrb
aaa
or
push
mov
jge
cmpl
cmp
mov
cwtl
dec
arpl
outsb
dec
test
roll
jp
mov
xchg
cld
jnp
in
cmp
sub
jns
sahf
dec
xchg
cli
in
or
inc
and
nop
mov
fimull
jmp
arpl
scas
mov
arpl
js
sahf
cltd
sub
push
jb
cs
fsubrl
scas
shlb
pushf
xchg
inc
push
mov
cmc
sub
fcoms
push
xor
cmp
xlat
add
popf
push
cs
imul
mov
movsb
leave
rcll
sti
mov
in
call
pop
mov
xlat
sbb
ja
push
pop
push
outsb
mov
ds
scas
xchg
std
rorb
call
mov
cmpl
int3
cli
int
sub
and
add
mov
sub
outsb
jmp
lret
xor
mov
mov
mov
test
pop
xchg
scas
sub
push
iret
lahf
mov
mov
push
imul
mov
hlt
ds
mov
push
pop
jno
mov
out
jp
cmp
inc
movsl
sbb
or
dec
jns
into
add
loopne
aas
cmp
inc
bound
sbb
dec
inc
push
and
jl
sbbb
add
xlat
sub
push
cmp
movsb
adc
ss
pop
add
out
imul
jae
int
hlt
cmp
test
fiadds
push
ret
cwtl
fdivs
into
loop
arpl
outsl
push
push
mov
push
bound
and
in
clc
and
mov
add
jae
lea
mov
sbb
sbb
mov
mov
outsb
inc
icebp
inc
aas
sub
stc
jo
popa
clc
jge
mov
mov
dec
inc
data16
rol
mov
es
dec
jp
pushl
push
mov
int
jnp
jnp
mov
mov
mov
jg
xchg
push
shrl
fidivs
push
daa
out
sti
dec
lahf
lret
cld
pushf
and
xchg
sub
std
jns
push
add
std
mov
lahf
inc
push
outsb
jb
cld
lods
and
out
popf
fmuls
push
xchg
sub
xor
mov
or
shlb
adc
fdivl
aas
xor
les
pop
mov
jecxz
inc
lds
data16
xchg
and
inc
rorl
jecxz
add
rorl
push
pop
xlat
mov
xchg
fisttpll
aad
inc
pop
mov
cmpl
adc
scas
ljmp
jge
mov
shrb
lcall
pop
shlb
sub
jp
add
iret
outsb
and
test
ja
nop
fsubrs
loop
fcomps
xor
sahf
or
int
shl
mov
jno
adc
or
mov
mov
rcrl
inc
mov
mov
inc
shlb
fsubrp
mov
xchg
pop
mov
addr16
clc
push
adc
lret
mov
insb
out
pop
inc
fcomi
jg
cs
outsb
pop
pop
es
jmp
push
inc
or
in
test
jo
xor
and
jecxz
clc
dec
ret
jp
movsl
mov
out
mov
mov
stc
jnp
mov
ljmp
mov
movsl
fildll
cs
xchg
xchg
xlat
mov
lret
int3
arpl
out
fwait
mov
orb
faddl
pop
in
mov
sbb
or
andb
push
fistl
sbb
and
and
out
mov
dec
stc
mov
mov
imul
ss
scas
in
push
jno
mov
cmpsl
sbb
push
mov
test
jnp
add
sarb
jae
lods
push
cs
add
aas
jns
adc
sahf
fldenv
in
int
add
and
fistpll
aas
movsl
mov
xlat
out
mov
fs
fadds
bound
ret
lret
insb
push
repz
pop
popl
mov
add
dec
pop
cmp
and
mov
xor
push
lret
inc
hlt
loopne
push
cmpl
xor
xor
or
or
lret
mov
popf
adc
push
xlat
mov
outsb
cld
adc
bound
xor
push
sub
mov
or
decl
mov
stos
scas
test
mov
mov
add
sub
mov
xor
clc
std
movsb
or
icebp
test
mov
cs
jo
out
adc
out
sub
ja
xlat
fnstsw
bound
sbb
xchg
cmp
sbb
inc
sbb
test
mov
xor
xchg
mov
sbb
cli
les
addl
xor
adc
push
xor
sbb
inc
sbb
int
inc
push
mov
data16
adc
rcr
imul
lods
fcoml
cli
fadd
add
mov
pop
sub
cld
stc
icebp
sub
cmovs
mov
xor
hlt
xor
in
std
pop
dec
push
aad
cmp
mov
aaa
inc
sahf
dec
cmpsb
int3
dec
shrb
les
hlt
mov
icebp
cli
dec
jp
adc
pop
sub
pop
cmp
rcl
cli
lar
out
cltd
xchg
jge
add
dec
clc
jae
xor
xchg
mov
test
push
ret
xchg
call
or
imul
adc
lret
and
mov
mov
dec
and
and
lods
or
in
mov
mov
and
outsb
arpl
sbb
js
bound
jb
jns
xor
sub
popa
cmp
mov
sbb
xchg
mov
rorl
adc
repnz
psraw
cli
or
cmp
inc
xor
pop
add
movsb
ret
ljmp
push
and
adc
repnz
push
inc
jp
push
cmc
in
sti
jle
pop
enter
loopne
imul
rcll
add
roll
adc
and
ljmp
inc
cmp
addr16
mov
xchg
inc
inc
sarb
andl
call
jnp
jae
xlat
xor
mov
cmp
mov
ljmp
mov
jge
sbb
fstpt
sub
aas
aad
lds
xor
mov
cltd
test
add
add
pop
iret
xchg
cld
scas
hlt
and
mov
cmp
popa
lods
fadds
pop
cs
and
push
stos
aad
imul
stc
xor
add
jmp
mov
push
jb
xchg
xlat
cmp
or
add
lock
es
and
repz
inc
xor
sub
popa
pop
inc
cli
xchg
mov
daa
xlat
jmp
add
pop
scas
adc
sub
add
xchg
test
outsb
nop
aad
mov
or
push
dec
adc
lret
adc
jecxz
sbb
shll
pop
xchg
mov
adc
aas
lcall
jno
fdiv
lar
icebp
fcom
and
dec
sbb
arpl
rcrl
daa
adc
fwait
and
pop
dec
add
orl
js
dec
scas
mov
inc
cltd
fwait
aam
adc
scas
cwtl
cmpsl
mov
jle
mov
xor
lea
sub
pop
out
xchg
xor
jg
fwait
inc
loopne
je
mov
rorl
mov
and
pop
push
mov
cmc
jmp
push
xorb
pop
mov
jns
vmovmskps
mov
cmp
mov
add
clc
data16
and
movsl
or
es
shlb
jb
pop
jo
iret
pop
sti
mov
pusha
rcll
pop
sahf
mov
jns
roll
mov
sbb
movsl
or
cmp
add
adc
sbb
lea
or
ss
loopne
dec
js
mov
push
cmpsl
in
add
cmp
stc
insl
iret
or
xchg
sub
loope
cltd
push
mov
cltd
push
repnz
push
xchg
gs
enter
dec
mov
push
fldenv
dec
mov
or
adc
jmp
inc
lock
cmp
mov
mov
mov
inc
sub
or
or
bound
addr16
dec
push
test
jge
aaa
adc
cmc
sub
pop
outsb
xor
sbb
or
enter
hlt
leave
jae
loopne
and
or
push
pop
out
mov
adc
add
pusha
gs
in
int3
push
mov
dec
xchg
test
jle
or
add
cmp
dec
iret
dec
adc
imul
pop
loopne
cli
lret
xchg
adc
fmull
fldl
sahf
loopne
mov
orb
cmp
jbe
das
fidivl
pop
dec
stos
lods
pop
bound
inc
in
popa
sahf
lretw
mov
xchg
mov
aaa
loopne
fldcw
jle
dec
pop
stos
xor
mov
std
adcl
in
xchg
adc
lret
or
fs
stos
pop
daa
push
mov
stc
adc
inc
mov
dec
add
and
cmp
and
imull
test
cmp
add
lea
push
push
cmpsb
push
mov
inc
mov
fiadds
rep
xchg
or
insl
pop
cmp
scas
out
cld
shll
push
xor
jo
mov
add
cld
push
xor
fldenv
cmpsl
loope
in
mov
subl
pop
ss
xchg
int
pop
add
aas
sub
adc
pop
mov
out
mov
pop
push
cmp
dec
inc
cmpsb
scas
into
icebp
cs
test
scas
xlat
xor
sub
dec
sub
ret
dec
mov
aaa
out
jmp
mov
scas
into
inc
pop
push
movsb
hlt
loopne
test
out
adc
dec
and
shll
xor
pop
mov
rcl
xlat
cmp
mov
jecxz
cmp
outsl
ds
cmp
mov
mov
mov
jg
jge
cmp
adc
xorl
gs
cmp
jcxz
ss
pop
pop
fistpll
add
sbb
add
in
lcall
xchg
nop
loopne
and
mov
arpl
push
lret
imul
xor
neg
pop
mov
movsb
imul
ret
inc
inc
pop
std
rol
mov
inc
ret
push
adc
push
das
sub
in
and
jo
cmp
rcl
ljmp
cmp
sbb
ds
mov
jg
and
mov
inc
xchg
cs
jg
and
insl
fbld
mov
cmp
and
aad
rcr
testl
nop
push
add
add
adc
and
loopne
in
dec
jmp
inc
stos
dec
aas
mov
movsb
cmc
daa
mov
sbb
push
inc
fucomi
adc
dec
daa
aam
push
adc
sar
ljmp
jae
cltd
add
fiaddl
sti
dec
xchg
xchg
inc
out
shll
bound
mov
dec
test
jecxz
leave
xchg
testb
faddl
int3
cwtl
shlb
imul
xchg
or
mov
mov
xchg
stos
sub
sub
scas
xchg
out
push
dec
outsb
lahf
movl
aas
loop
iret
sbbb
mov
mov
call
jbe
into
mov
xor
sub
or
dec
cmp
mov
pop
lahf
push
nop
adcl
dec
pop
fidivs
fidivs
cmpsb
je
fxch
xchg
dec
int
add
mov
mov
daa
jo
mov
xlat
mov
cli
mov
loop
xchg
loop
and
cld
sahf
into
push
aaa
imul
pop
imul
test
cmc
sub
mov
fisttps
sub
nop
insl
aaa
iret
dec
jmp
and
pop
enter
imul
pop
cmpl
mov
cmpsl
bound
xchg
jbe
mov
and
inc
jle
and
movsl
sbb
shr
xor
stos
inc
test
test
jg
push
stc
ja
ss
jle
lds
je
sbb
cmp
insl
out
mov
dec
or
sbb
push
iret
sub
adc
xor
add
dec
orb
or
iret
xor
pop
shl
pop
loopne
push
cmp
push
les
inc
pop
je
dec
loop
pop
iret
pop
fmuls
mov
fmull
jg
jne
dec
xchg
fbstp
hlt
push
pop
sti
jge
push
sbb
jae
mov
xchg
push
fstps
insb
fidivrl
pushf
cmp
stos
mov
mov
movsl
es
aas
dec
pushf
lret
clc
xlat
jne
xor
sbb
ljmp
jnp
xlat
scas
xchg
std
push
addr16
cld
pushf
scas
dec
scas
js
xor
int
ss
sbb
jp
sbb
mov
mov
fnstenv
mov
pushl
pop
rolb
inc
dec
mov
cmpsl
push
cmove
aam
push
flds
add
jns
jae
imul
sub
mov
in
sti
sbb
mov
push
pushf
fwait
push
in
jae
rcrl
sub
sahf
fcomp
repnz
ret
loopne
jo
shl
xor
scas
xchg
or
movsb
xchg
ret
lods
lock
stc
xor
xchg
sahf
lret
nop
dec
inc
mov
lea
lods
std
out
nop
pop
adc
fstpt
cltd
or
mov
hlt
mov
popa
inc
xchg
rolb
mov
pop
mov
lahf
xor
sahf
push
test
ret
cmp
lods
shr
add
hlt
push
data16
mov
adc
and
add
and
hlt
sbb
test
push
scas
in
or
mov
mov
in
pusha
imul
into
dec
push
mov
subb
icebp
push
imul
cmp
and
into
test
xchg
jle
cmp
and
mov
fiadds
pop
daa
pop
fldt
xchg
fistpl
insl
call
fcoms
and
loope
loope
mov
repnz
xchg
loop
and
cs
mov
dec
cmp
cmp
sub
sbb
add
icebp
jmp
sub
jo
mov
inc
test
inc
xor
or
in
out
movsl
push
push
dec
hlt
addr16
dec
cmp
dec
test
movsl
cmp
leave
adc
ret
sbbb
jnp
cmc
es
sub
std
jmp
ss
jno
inc
jbe
scas
movsb
cmp
add
popa
aaa
movsb
imul
dec
fistps
mov
pop
in
jnp
ret
shll
in
sbb
mov
mov
icebp
mov
insb
fsub
in
fists
incl
cltd
adc
leave
into
pushf
ret
nop
add
xor
sbb
loopne
iret
shlb
and
cmpsb
pop
cltd
jo
movsl
and
push
add
mov
pop
mov
lods
jl
xchg
add
push
fimuls
sub
dec
pop
xor
pop
inc
dec
mov
inc
sub
cmp
dec
pop
xor
dec
daa
sub
out
jne
jns
push
cld
pop
lret
fldl
push
cmpsb
pusha
sub
cmp
pop
cmpsl
mov
pusha
or
test
adc
sbb
mov
pop
xor
mov
mov
stc
xchg
ficoms
cld
lahf
xorl
mov
ss
cmp
or
dec
out
xchg
jle
in
mov
mov
lea
out
dec
in
cmpsl
fwait
std
sbb
rcrl
sbb
xlat
fs
frstor
jecxz
loopne
xchg
adc
mov
dec
jg
daa
into
repz
sbb
ret
pop
jnp
addr16
arpl
push
out
adc
or
mov
mov
jo
std
sbb
lret
dec
xchg
test
inc
inc
push
mov
shlb
test
mov
mov
cmp
mull
push
cmpsb
adc
sub
sub
decl
or
dec
idivl
pop
test
xchg
adc
pop
shlb
mov
add
in
inc
andb
sbb
cmp
stos
outsb
mov
jns
out
loop
ret
pop
push
mov
inc
pusha
addr16
outsb
out
inc
outsb
fdivr
push
and
xchg
mov
or
jns
lock
mov
xor
sub
fcmovb
std
cmovne
inc
jae
call
mov
and
lret
cmp
sub
cld
mov
mov
testb
movb
and
jle,pt
jle
aas
mov
arpl
icebp
hlt
jne
pop
push
das
adc
xchg
std
push
inc
dec
fucomi
sbb
cmp
test
bound
ja
or
push
sub
daa
xor
jne
scas
scas
adc
stos
aad
add
ss
inc
jecxz
jb
jb
sub
cmpl
mov
sahf
aas
std
sbb
add
dec
xchg
sahf
mov
xchg
mov
mov
add
test
cwtl
jae
xchg
ret
ss
jl
mov
or
mov
in
fadd
xlat
or
jnp
sbb
enter
lret
fstl
push
call
jb
cmpsl
std
sbb
lret
sub
mov
pop
repz
movsl
inc
mov
mov
jmp
adc
adc
and
xchg
es
mov
lock
dec
fists
pusha
test
movsb
mov
mov
jo,pt
hlt
loope
cmp
loopne
pop
ss
mov
lock
out
outsl
xchg
outsb
loop
and
nop
add
aad
and
mov
pop
inc
ss
mov
inc
gs
lahf
fistps
clc
into
shr
fmul
adc
ja
inc
lahf
fbld
mov
jns
xorb
xchg
mov
xchg
and
mov
jae
adc
pop
test
test
pop
mov
std
mov
fpatan
out
jnp
popl
imulb
mov
adc
int3
mov
int3
sub
adc
xchg
repz
sub
imul
sub
mov
add
daa
push
cli
ss
out
stos
aam
xor
sbb
notl
fcompl
je
mov
lahf
mov
popa
ficompl
inc
adc
jae
jge
fidivl
push
les
sbb
cmp
repz
push
pop
or
mov
sub
or
fdivrs
or
clc
pop
add
cmp
fwait
dec
daa
xor
mov
dec
leave
or
cmp
lret
sbb
xor
dec
push
fidivs
daa
lret
push
and
fstpl
int3
aas
mov
andl
icebp
jae
arpl
xchg
and
adc
popa
ret
jno
inc
jecxz
adc
and
jae
arpl
xchg
and
adc
popa
ret
jno
inc
jecxz
adc
and
jae
mov
xor
mov
jno
inc
or
mov
add
jae
jecxz
xchg
and
add
mov
sbb
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sbb
sub
in
in
pop
or
sbb
leave
test
fsubrs
call
jns
dec
sub
sub
js
push
fnstcw
xabort
clc
leave
call
jns
loope
pop
inc
adc
push
lcall
cmpsl
shlb
addr16
cmp
or
push
dec
mov
adc
jae
xor
lock
rclb
xor
int3
fld
cltd
loop
push
jb
dec
std
pop
sbb
mov
fdivrs
mov
adc
push
outsb
ja
jp
add
scas
test
iret
fs
addb
mov
clc
dec
call
imul
sub
xchg
imul
cld
push
and
jae
call
xchg
mov
enter
push
jl
add
jmp
and
enter
clc
lock
jg
xlat
arpl
dec
pusha
in
jmp
clc
rcrl
call
mov
int
push
dec
sub
js
jno
subl
xchg
rolb
divl
jns
or
pop
cs
xor
scas
in
lret
mov
lods
int
enter
sub
cmp
pop
jl
inc
dec
or
cmp
mov
scas
mov
stc
mov
bnd
fs
sbb
adc
cmp
push
stc
mov
test
call
jns
dec
sub
sub
js
push
stc
mov
test
call
scas
xchg
pop
jne
mov
sbb
lods
push
mov
scas
mov
and
pushf
test
mov
cmp
pop
in
and
es
mov
mov
dec
add
push
push
hlt
mov
addr16
fcmovnbe
shll
test
sbb
sub
mov
jbe
jecxz
popa
inc
inc
lods
lds
xor
movsb
ret
jns
mov
xor
aaa
pop
std
cmpsl
cmp
pop
and
cwtl
jnp
addr16
dec
sub
or
sub
jno
out
out
aam
in
gs
sbb
and
inc
xor
inc
outsb
jmp
jp
repz
push
stc
push
sub
xor
sbb
inc
push
popf
xchg
js
xchg
lret
push
outsb
pop
cld
out
cmpsb
dec
jo
sub
cli
xor
addr16
outsl
sub
mov
push
xor
mov
cmp
gs
sub
or
fwait
mov
or
in
dec
pop
xchg
sbb
mov
sbb
push
jmp
inc
outsb
mov
fwait
xor
incb
xor
scas
xchg
jmp
xchg
pushf
mov
inc
cld
adc
jbe
jb
mov
and
leave
inc
cltd
cwtl
sub
arpl
jno
and
repnz
inc
pop
fdivrl
scas
rcll
push
mov
notb
mov
mov
daa
jge
add
sub
pop
and
jl
add
add
xchg
sbbb
pop
xchg
and
es
dec
mov
pop
xchg
push
xlat
fcmovne
cmp
mov
dec
pop
repz
in
pop
fidivrl
cmp
push
inc
ret
call
popa
out
divl
repnz
adc
add
push
and
mov
movsl
and
cmp
ds
push
filds
jmp
rolb
jle
xchg
insb
jle
les
xor
jae
push
mov
arpl
push
fcmovnu
mov
add
push
hlt
pop
jmp
sbb
subl
jnp
xlat
cmp
ficomps
sbb
fistpll
pop
sahf
sub
in
cmp
xchg
dec
insb
xchg
sbb
inc
aam
pop
xor
xchg
sub
jns
mov
ret
dec
gs
inc
pop
xchg
push
in
add
sbb
push
inc
cld
lea
daa
xor
movsb
ror
mov
sahf
mov
and
xchg
arpl
mov
ret
adc
inc
ret
mov
or
adc
adc
jle
cltd
loop
lcall
repnz
or
inc
scas
or
jo
mov
call
std
adc
inc
xor
popf
test
pop
pop
jle
lcall
shrb
arpl
add
adc
int3
fstps
ja
loopne
xlat
mov
jg,pn
sbb
movsb
aam
inc
and
dec
nop
cmc
push
loopne
orl
pop
out
or
mov
loopne
inc
push
fwait
out
or
lea
enter
lret
and
inc
xchg
mov
inc
inc
jns
gs
mov
mov
ss
xor
inc
daa
xor
cli
adc
outsb
jbe
xor
ja
fwait
xor
dec
push
icebp
pop
in
and
lea
sbb
repz
pop
mov
out
jae
loope
jno
fbstp
pop
popaw
sbb
in
mov
xchg
loop
sbb
sub
bound
pushf
jo
xor
xchg
out
ss
sub
xchg
push
push
cli
push
xor
fs
shll
mulps
clc
fsubs
dec
mov
ds
in
xorl
das
lret
xor
lods
mov
cwtl
xchg
repz
test
adc
jae
test
les
leave
aad
jne
mov
pop
lret
loope
daa
in
push
in
mov
aaa
insb
ret
jno
fwait
test
lcall
sbb
cmpsl
mov
jl
adcl
in
pop
imul
xchg
jle
fbld
subl
push
aad
icebp
shr
pop
xchg
xor
mov
pusha
hlt
cmp
xchg
jne
loope
das
aad
pop
jbe
mov
fistpll
inc
pop
push
push
xchg
into
sti
sub
subb
repnz
sub
leave
enter
sub
lret
adc
adc
insl
xchg
mov
repz
xchg
add
out
jecxz
inc
push
adc
lds
jb
or
dec
lcall
and
js
or
xchg
sbb
lea
inc
test
jmp
jp
and
mov
int3
iret
ret
add
pop
mov
mov
les
xchg
aas
inc
fwait
js
sbb
sarl
movsl
xor
fwait
xchg
in
pop
mov
call
in
push
and
cli
mov
cwtl
mov
fdiv
shrb
aam
aam
push
arpl
mov
xchg
adc
pushw
in
xlat
dec
push
aad
cmp
scas
mov
mov
push
shll
and
jp
in
cs
fsubrl
adc
cmc
shll
mov
sub
dec
fcoml
jmp
cmpsl
loope
adc
daa
inc
pop
add
es
jle
jecxz
std
loopne
add
push
out
jg
jp
out
jmp
cmp
sub
icebp
push
fcomp
pop
insb
mov
dec
push
xchg
stos
movsb
insl
xchg
imul
xor
mov
and
mov
leave
inc
out
js
ja
mov
insb
dec
push
xchg
aaa
cmp
dec
cwtl
cmpsl
push
xchg
stc
cmp
jns
push
mov
inc
mov
fists
scas
outsl
addr16
jae
jl
insl
xchg
jne
mov
adc
dec
jmp
sub
in
insl
push
stc
push
ja
ror
adc
push
sbb
subl
dec
mov
xlat
inc
jecxz
mov
push
rol
insl
rcll
push
sub
jl
pop
movsl
test
pusha
sub
pop
cli
cwtl
add
xor
lea
bound
pop
mov
fnstsw
lds
aas
imul
cmp
xchg
aad
xchg
mov
lds
iret
loopne
cmp
call
stc
insb
rorb
cmc
fidivs
cmc
repnz
repnz
ja
sub
std
cmc
sbb
fsubs
adc
or
lea
mov
fimuls
loope
sub
dec
cmp
jb
lock
stos
ss
fstpt
lods
ja
rolb
add
test
or
add
dec
lods
rep
xchg
nop
mov
pushf
jg
mov
decb
sti
cmp
jmp
push
arpl
xor
inc
and
rol
test
jle
in
lahf
pop
dec
xchg
divl
repnz
movb
aam
aam
ss
daa
test
xchg
xorb
or
cli
pop
mov
insl
push
dec
in
scas
xchg
ljmp
mov
sbb
mov
test
outsb
mov
add
imul
insb
cli
mov
in
sti
cmp
push
out
inc
add
fistps
xchg
aad
scas
fidivl
mov
imul
inc
mov
sub
mov
mov
mov
fisttps
cli
jae
dec
mov
out
cwtl
es
in
cmc
ss
roll
dec
jge
adc
adc
es
add
xor
out
loope
xor
aad
and
xchg
or
js
xchg
adc
inc
test
shrl
push
hlt
repnz
out
mov
ja
adc
les
jmp
sbb
int
icebp
in
xchg
je
mov
iret
maxps
push
pushf
inc
jmp
popf
in
mov
xchg
push
cltd
aad
sbb
push
pop
jb
jnp
movb
push
pusha
jp
aas
mov
popa
rcll
adc
adc
sub
adcb
or
std
xchg
lock
in
pop
mov
inc
xor
dec
pop
xchg
mov
rorl
adc
sbb
push
or
in
mov
pop
add
lods
dec
mov
in
stos
je
jle
int
push
mov
jbe
test
mov
or
and
clc
outsb
aam
pop
mov
cmp
mov
add
test
pusha
xchg
loopne
aam
arpl
cmp
in
dec
dec
inc
cmp
iret
jnp
jo
jno
std
jae
out
in
xor
in
xor
and
hlt
test
bound
orb
mov
push
mov
jns
jmp
lret
clc
cmp
in
jp
sbb
fwait
inc
or
cmpsl
push
fstpt
xchg
and
ljmp
mov
test
loopne
adc
sub
rolb
es
inc
aaa
jmp
pop
popa
rcr
or
imul
push
inc
shr
jae
add
dec
adc
out
notl
mov
outsb
xor
es
inc
mov
xor
inc
xor
fsts
push
mov
jl
sub
shr
int
cmpsl
dec
dec
mov
int3
ret
or
jmp
mov
jne
mov
mov
pop
imul
push
jle
adc
insb
xchg
adc
and
and
dec
push
cmpsl
mov
mov
ret
test
mov
stos
mov
repnz
rclb
lret
xchg
jne
pop
dec
dec
push
xchg
cmpsb
push
xor
loop
adc
mov
mov
dec
mov
sub
cwtl
data16
lds
jns
dec
mov
pop
pushf
inc
sbb
stc
adc
pop
xchg
clc
mov
dec
jle
jns
push
mov
std
arpl
stc
pop
mov
pop
pop
sub
outsb
sub
sbb
sbb
mov
pushf
add
pop
out
jo
into
test
sbb
push
aaa
aam
insl
dec
mov
inc
adc
aas
and
out
aad
mov
adc
scas
scas
cmp
andl
lahf
add
sbb
movsl
dec
mov
jmp
cmp
adc
xor
xor
out
sbb
enter
pop
imul
mov
mov
gs
push
shll
mov
mov
cmpsl
mov
addb
xchg
push
add
pop
adc
push
and
cli
repz
mov
leave
push
xor
jp
cs
lret
aam
lahf
mov
xchg
mov
stc
insl
repnz
lock
sahf
je
push
rcrb
mov
cs
mov
mov
int3
das
idivl
data16
popf
inc
mov
pop
add
mov
enter
jmp
mov
lods
jbe
pop
fidivl
int
out
push
cwtl
push
mov
or
sub
les
addr16
sbb
jbe
jl
mov
ffree
inc
inc
sahf
addr16
aam
push
adc
faddl
loopne
xor
cmpl
mov
fistps
push
push
popa
daa
mov
push
nop
lret
and
hlt
push
mov
push
xor
adc
adc
push
jo
notb
push
sbb
mov
inc
mov
iret
sbb
int3
inc
imul
jl
repz
daa
xchg
mov
outsl
xchg
push
scas
push
es
divb
lret
in
in
adc
popa
or
es
fcompl
mov
pop
push
push
roll
add
adc
mull
cmp
pop
orl
jle
les
or
dec
je
push
adc
out
insl
and
mov
add
sarl
mov
xchg
shrb
xor
aas
cmp
cltd
or
or
sbb
sub
loopne
out
fcoms
cmp
inc
pop
jae
ja
push
mov
clc
jo
xchg
or
pop
aad
sub
jg
in
dec
lret
out
pop
jmp
add
into
xor
add
mov
add
mov
jle
sub
loopne
frstor
std
push
pop
mov
pop
pop
xchg
das
notl
lods
mov
mov
sub
rorl
roll
loope
int3
push
push
xchg
stos
int
mov
mov
mov
push
mov
cs
mov
out
sub
pusha
pop
in
push
xchg
aad
test
daa
sahf
je
jnp
es
xchg
fxtract
cli
lods
rcll
cmovbe
and
mov
loop
test
xorb
pop
inc
and
xchg
push
ds
mov
cmp
aas
jp
pop
lahf
lahf
test
or
push
pop
cli
into
dec
or
iret
inc
popa
xor
sarl
mov
mov
add
jae
dec
imul
pushf
xchg
adc
out
ret
notl
sahf
decb
bound
mov
xlat
sahf
fadd
aas
dec
cmc
ret
mov
dec
mov
xor
test
ss
or
arpl
pop
aam
and
push
ja
int
je
inc
mov
cmp
lods
test
jne
test
int
cmc
shlb
pusha
cmp
xor
aad
mov
mov
adc
xchg
loop
enter
fwait
mov
aaa
sub
pop
mov
push
sbb
in
movsl
lods
fildll
jae
cwtl
mov
dec
cwtl
sbb
cmc
cwtl
shlb
ret
pushf
lds
push
hlt
dec
pop
leave
fists
jp
sub
inc
iret
fs
je
mov
or
dec
js
nop
mov
push
adcl
pop
shl
ret
out
loopne
addl
jo
mov
jne
pop
sbb
xlat
movsl
fimull
icebp
scas
pop
xchg
xchg
sbb
test
jmp
lds
test
mulb
xor
mov
cmp
lea
push
in
add
inc
jae
stc
dec
mov
dec
jecxz,pt
lcall
fwait
pop
push
push
fimuls
lea
cmpb
cmp
test
in
rclb
mov
add
dec
aam
push
cmpsl
jge
les
sub
enter
ja
aad
sub
enter
sahf
mov
sbb
and
out
push
movsb
and
push
and
movsb
sub
pushf
push
pop
pop
jno
shlb
sub
push
or
push
movsb
out
sbb
or
repz
out
clc
fildll
jp
inc
in
sbb
stos
push
popa
scas
xchg
imul
orb
mov
lods
pop
lret
fmull
cmpsb
push
cld
add
js
stos
xchg
push
sub
pop
fsubrs
insl
mov
sub
adc
lods
xor
jns
jp
popf
pusha
xchg
insl
dec
inc
dec
mov
xor
inc
xchg
pop
call
enter
loop
or
addb
fidivs
push
mov
ret
adc
add
mov
inc
scas
mov
lock
mov
xor
mov
or
mov
and
pop
sbb
cmp
gs
and
test
lea
fnsave
pop
xlat
cltd
divl
fimuls
loope
cmp
mov
xchg
ja
das
sub
or
xor
mov
push
in
sub
push
jp
in
rcrb
dec
aas
push
adc
jo
sub
xor
fiaddl
fs
in
push
mov
sbb
pop
mov
sbb
xchg
lea
dec
or
rorl
or
arpl
xchg
lahf
add
xorb
jne
je
out
or
je
test
mov
xchg
movsb
in
or
xor
add
sub
std
jnp
and
cmp
decb
arpl
pop
std
lds
stc
xchg
mov
mov
dec
and
adc
add
mov
or
je
cmc
cmc
mov
mov
adc
scas
mov
ja
mov
cs
std
sbb
xchg
aaa
out
fs
sbb
pop
sub
mov
int
orl
pusha
shlb
lret
les
and
fdivl
stos
dec
stc
cld
sahf
mov
aas
outsb
push
jmp
mul
enter
insb
inc
push
cs
shll
dec
pop
test
or
push
imul
sbb
mov
inc
bound
add
or
and
in
aaa
ret
jb,pn
sub
imul
inc
sbb
pushf
sub
ljmp
mov
imul
stc
add
cld
addb
sar
aaa
shll
out
jbe
inc
repz
cmp
popa
lock
imul
cmp
ja
js
movsb
insl
xchg
mov
dec
adc
mov
cmpsb
mov
cmp
je
fwait
lcall
cmpsb
and
cltd
inc
xchg
repz
cmp
add
test
xchg
imul
pop
or
jmp
cmpsl
movsl
scas
icebp
mov
cmpsl
popa
sub
xchg
aaa
mov
push
ss
repnz
or
push
xchg
mov
jae
pop
inc
repz
fidivrl
stc
cwtl
aaa
add
adc
stos
adc
pop
insl
mov
push
clc
or
jecxz
es
jns
mov
rorw
jnp
lret
stos
mov
cltd
cld
push
pop
adcb
test
adc
popf
repz
prefetchnta
add
dec
dec
xchg
pop
loopne
push
leave
mov
or
or
push
cmp
testb
adc
subl
insb
push
pop
push
xchg
push
mov
rolb
xchg
call
push
or
out
cmpsb
aad
mov
test
into
jno
neg
push
pop
jbe
cmpsl
pop
mov
xlat
adc
push
sub
mov
in
nop
imul
jno
and
int
jne
mov
sbb
add
call
mov
or
sbb
push
jl
xor
fidivrl
mov
sub
sub
push
mov
and
add
xchg
shlb
loope
add
xor
gs
hlt
movhps
repnz
outsl
mov
mov
loopne
and
int
je
fsub
movsl
add
js
outsb
mov
pop
push
mov
push
out
xchg
or
and
adc
mov
sbb
cmpsl
cmpb
hlt
mov
sub
ss
inc
enterw
sub
loope
cmp
xchg
out
mov
imul
jb
repz
std
mov
lret
inc
adc
gs
lds
add
mov
cmp
mov
pop
notb
push
aad
and
push
loope
data16
dec
push
sbb
rclb
icebp
addr16
xchg
cli
jb
and
ja
mov
lea
sub
imul
shr
xchg
xchg
adc
test
xchg
sbb
int
insb
xchg
mov
lock
jb
sahf
mov
cltd
sbb
aaa
ret
mov
jecxz
adc
cmpsl
dec
clc
bound
jge
insl
mov
cmc
dec
mov
jb
jno
pop
or
add
out
lret
mov
mov
insb
mov
or
int
xor
ret
and
mov
scas
xlat
shll
adc
pop
push
outsl
cld
pop
in
mov
inc
cwtl
ss
pop
dec
aaa
xlat
loop
out
test
add
adc
inc
push
aaa
push
inc
or
mov
ret
cmp
push
jg
pop
lret
jo
xlat
push
dec
mov
jge
jbe
pusha
bound
mov
cmp
gs
mov
or
push
cs
fs
cltd
mov
shrl
dec
mov
or
sti
imul
in
xchg
fisubl
push
jno
dec
or
or
sbb
jne
xchg
mov
clc
repz
mov
lahf
sti
push
mov
adc
xlat
negb
fnsave
fucom
push
ret
stos
adc
mov
pop
pop
orb
push
and
sbb
aas
das
push
dec
dec
je
mov
dec
push
push
pop
mov
jb
gs
fs
adc
pop
push
or
pop
mov
test
jge
lds
lea
iret
pusha
loopne
rcll
pop
and
push
pop
pop
mov
imul
xor
cmp
sub
popa
in
cmp
xchg
sbb
xor
cmp
out
pop
xchg
inc
aam
les
rorl
cs
cmp
pop
dec
cmc
jb
lea
fnstcw
lcall
xchg
insb
cmp
jbe
nop
pop
fdivrs
push
mov
pop
cli
mov
add
mov
pop
push
adc
ljmp
movsb
push
xor
xchg
popa
pop
xchg
xchg
adc
nop
inc
out
lret
pop
aam
fldcw
and
mov
incb
pop
push
pop
jo
pusha
adc
js
rorb
cmpsb
test
xlat
sub
xchg
mov
pushf
adc
fbstp
inc
sub
aam
sbb
in
mov
adc
movsl
dec
scas
dec
cmp
popf
or
xor
mov
or
iret
cmp
and
dec
cmp
push
stc
mov
test
call
jns
dec
sub
sub
js
push
stc
mov
test
call
xor
xor
pop
pop
sub
js
push
stc
mov
test
ljmp
dec
sub
sub
clc
mov
sbb
ja
adc
test
scas
and
pop
jbe
data16
cwtl
ret
mov
in
lea
sbb
jb
bound
pop
xchg
js
mov
cwtl
ret
mov
sub
clc
mov
pop
jb
bound
pop
add
js
mov
cwtl
ret
mov
sub
clc
mov
pop
push
push
bound
push
cmp
inc
push
and
rcrb
mov
push
fsubs
push
ret
daa
imul
aad
mov
cmp
loopne
test
pop
xchg
xor
jge
mov
loop
mov
mov
out
imul
shlb
xor
xchg
repnz
dec
or
push
lahf
call
int
stos
int
cltd
inc
fidivrs
cmp
enter
push
cmp
or
movsl
lea
xor
int
scas
ja
in
cmp
jae
rcll
sbb
mov
lds
pop
decb
inc
mov
sbb
out
jae
pop
daa
jb
shlb
arpl
lds
adc
rcrb
loop
xchg
fadds
or
inc
sub
bound
pop
add
js
into
mov
fisttpll
cld
mov
ss
sbb
jae
jno
xor
mov
ljmp
fidivl
insl
sub
aaa
imul
or
sbb
jb
fwait
cld
xchg
rcrl
sub
clc
mov
sub
bound
pop
add
js
mov
cwtl
ret
mov
sub
clc
mov
sub
bound
pop
add
js
mov
cmp
movsl
adc
ds
int3
out
popa
mov
sbb
jmp
cmpsl
shl
pop
test
mov
xchg
push
fiaddl
addr16
inc
testl
test
daa
cld
push
xchg
fwait
sub
push
sbb
sbb
cwtl
jno
push
jecxz
inc
es
jp
mov
test
arpl
pop
xchg
pop
test
xchg
jns
xor
icebp
adc
popf
jno
out
pop
ds
push
and
push
push
pushf
push
or
fs
pop
andb
add
js
push
inc
sub
cmp
pop
lret
push
outsl
inc
lret
dec
add
dec
push
cmpsl
int3
testl
cmpsl
repz
dec
or
lret
adc
add
xchg
aaa
mov
dec
out
sub
outsl
scas
dec
mov
xchg
inc
ds
push
push
mov
das
int
dec
sbb
enter
mov
bound
xlat
dec
xchg
mov
jno
pop
dec
mov
lds
cmp
dec
push
mov
in
inc
mov
loopne
out
shll
ja
xor
in
xchg
xchg
sbb
push
dec
mov
sbb
inc
inc
out
inc
jno
mov
je
jne
in
lock
mov
loope
dec
testb
lret
mov
xchg
sbb
dec
and
es
mov
das
scas
sub
out
sar
in
lret
adc
pop
not
test
push
rcll
out
jmp
sbb
pop
rcl
dec
pop
xchg
mov
sbb
sbb
bnd
jl
pop
inc
out
aaa
mov
ficoms
icebp
and
xor
mov
mov
arpl
dec
xchg
cld
incb
mov
aas
xchg
or
in
push
imul
jbe
mov
std
jae
stos
fiadds
push
cmc
inc
sub
cmp
sub
mov
mov
int3
jmp
adc
aam
push
notb
arpl
add
xchg
mov
mov
pop
aam
lock
or
jge
je
popf
lcall
insb
mov
push
pop
add
push
les
and
inc
sbb
cmp
fcomps
dec
pop
pop
adc
dec
mov
sbb
vpcmpgtd
movsb
rcrl
into
je
cltd
bound
pusha
das
call
sahf
fs
sbb
push
sbb
outsl
inc
mov
cli
push
fimuls
rcl
xor
bnd
adc
enter
jno
daa
mov
inc
je
fisubl
inc
jle
and
scas
lret
lods
shll
sbb
push
imul
aas
cwtl
std
leave
fnsave
dec
ds
fstl
and
push
xor
push
scas
sub
jg
cmp
mov
or
lds
add
imul
push
fstpl
sub
xchg
insl
push
lret
mov
dec
test
mov
xchg
ja
in
out
sbb
or
sbb
mov
ret
mov
mov
cmp
ss
fldcw
jmp
push
pop
out
mov
daa
pop
dec
push
mov
aas
xor
int
mov
jnp
imul
out
lcall
sbb
or
dec
int
stos
pop
insb
jb
push
loop
ss
nop
sbb
sarb
sbb
xor
int3
in
xor
cmp
ljmp
or
push
push
aad
je
es
lea
jno
and
dec
jo
push
imul
jns
and
or
push
cmp
js
ret
mov
inc
mov
cwtl
in
aad
incb
mov
test
push
movsl
push
fucomi
int3
mov
in
loopne
mov
addl
adc
inc
in
lahf
in
jecxz
out
cltd
pushf
leave
add
sub
fidivrs
and
add
shll
mov
stc
xor
mov
sbb
mov
jnp
outsb
and
das
sbb
mov
mov
dec
js
xor
pop
mov
or
add
imul
rcrb
int
icebp
jo
lcall
dec
xorl
jg
push
dec
and
lahf
hlt
adc
sbbl
mov
mov
xchg
adc
cld
fwait
push
pop
adc
add
loop
and
negl
sbbl
stos
outsl
cmpsb
mov
dec
inc
gs
xlat
das
adc
cmp
mov
cmc
fcoml
aam
jae
jae
or
dec
in
bound
xor
xchg
mov
sub
jecxz
rcl
sub
popa
loop
popa
push
cld
push
iret
cmp
add
push
aas
dec
movsb
frstor
xchg
fisttpl
cmp
xchg
cli
mov
jno
inc
scas
or
in
cltd
adc
add
popa
mov
mov
dec
jbe
pop
mov
add
sti
mov
adc
cmpsl
pop
dec
xor
test
rol
fs
outsb
loop
daa
into
std
idivl
add
shl
mov
push
in
in
ljmp
jmp
shll
stos
test
rorb
cmp
int3
push
sbb
cmpsb
or
fbld
inc
dec
xchg
in
mov
push
cmpsl
loope
aaa
jmp
movsb
xlat
cmp
fisttps
cli
xchg
scas
xorb
sub
push
xchg
inc
rcr
repnz
out
hlt
cmc
pop
xchg
pop
mov
cmc
sub
repz
mov
lret
cmp
xchg
push
adc
stos
in
push
shrb
adc
pop
xchg
insb
clc
js
and
js
cld
xor
and
jg
pop
xlat
outsb
xchg
divb
push
inc
fmul
push
movsl
xchg
fildll
aas
mov
pushw
in
fsubrs
fwait
xchg
sbb
mov
jne
stos
packuswb
call
sub
lcall
test
mov
pop
insl
leave
xchg
xchg
xor
subb
loopne
mov
ret
stos
sarl
out
lret
xchg
add
jbe
push
les
mov
lret
pop
sahf
cwtl
mov
daa
test
and
add
shrb
mov
mov
xchg
jmp
cmp
outsl
dec
nop
lds
or
test
loope
aaa
dec
mov
adc
sbb
ret
cmpsb
shrb
icebp
cld
jb
sbb
push
sbb
jns
fcomi
ret
jp
dec
mov
pop
mov
fwait
sbb
pop
rcrl
das
mov
hlt
sub
aad
push
inc
inc
loope
hlt
iret
test
cmp
lcall
mov
and
fldenv
pop
sbb
pusha
add
movsl
adc
call
aam
popf
xchg
sahf
inc
stos
adc
mov
ljmp
sub
in
mov
xor
fld
loop
mov
adc
or
cli
enter
mov
dec
push
mov
popa
cmc
iret
jl
sbb
inc
cmpb
mov
adc
mov
and
push
push
pop
or
pop
and
in
stos
xor
outsl
mov
dec
xor
adc
aas
icebp
fmuls
repnz
dec
lahf
pop
and
mov
add
jmp
mov
xchg
and
imul
fstpt
jb
sub
test
mov
mov
fwait
and
cmp
movsb
mov
push
add
dec
lret
or
sbb
ret
cld
stc
sub
mov
and
adc
pop
loope
inc
dec
ficompl
push
push
sahf
mov
jmp
sahf
pop
nop
adc
incb
xor
aaa
inc
push
js
rorb
insl
stc
in
scas
inc
sub
inc
mov
les
testl
or
mov
sbbb
mov
popa
lahf
pop
xor
dec
push
pop
int
cs
scas
ret
push
jge
jns
cmp
scas
repz
js
xor
loop
pop
push
lods
fnstsw
jno
icebp
in
sbb
jne
mov
sahf
push
jae
adc
mov
dec
hlt
pop
mov
xor
xor
jae
in
fidivl
ds
lahf
gs
xor
xchg
mov
inc
mov
hlt
dec
sbb
negl
imul
es
maskmovq
divl
hlt
add
and
mov
cmp
lods
es
movsb
call
ja
pop
inc
mov
pop
push
popa
daa
clc
push
fwait
xchg
sbb
jge
subl
dec
outsl
xchg
test
mov
test
add
jecxz
mov
mov
mov
adc
ret
pop
repnz
dec
or
pop
dec
gs
pop
push
in
data16
xchg
add
xor
aad
xchg
imul
imul
push
xor
adc
sti
das
jmp
jne
popl
aam
in
insl
sbb
out
pop
dec
push
cltd
mov
lret
divl
push
out
pop
add
adc
inc
push
mov
in
dec
cli
data16
jecxz
mov
icebp
pop
jp
ror
jns
and
sbb
lds
jecxz
cmp
icebp
dec
sbb
mov
fldl
std
inc
stc
sub
fldenv
push
fstl
aaa
lahf
sbb
mov
and
and
xor
les
daa
lcall
cmpsb
fisttps
ljmp
jp
pop
test
xor
mov
xor
clc
cmp
add
leave
sub
inc
je
sbb
mov
adc
jno
sbb
mov
aam
xchg
ljmp
mov
enter
inc
cmpsb
movswl
cmp
mov
insl
sub
or
xor
gs
lods
dec
insb
in
cmpsb
enter
jno
jmp
cmpl
xchg
int3
hlt
cltd
jle
cmp
fadds
insb
das
icebp
xor
pop
and
out
push
jp
push
das
xor
xor
xchg
sub
jl
fisttps
ret
test
mov
mov
iret
pop
imul
xchg
jno
pushf
imul
iret
loop
or
ljmp
dec
sub
mov
mov
jmp
dec
fadds
jae
ljmp
ficoml
or
mov
data16
jbe
push
dec
mov
dec
and
mov
and
xchg
push
lahf
push
popa
inc
sbbl
out
inc
sbb
xchg
call
push
stos
out
icebp
sarl
fwait
xchg
or
cld
fwait
push
je
xor
add
jno
cmp
dec
mov
loop
sahf
xchg
and
sub
test
shll
sbb
and
mov
adc
jns
add
icebp
pop
outsb
loopne
push
imul
jle
in
pushf
lods
push
imul
sahf
mov
adc
insb
jge
es
ss
daa
or
pushf
out
scas
jb
dec
fwait
mov
rorl
inc
stc
dec
and
cli
sarb
je
movsl
fs
push
and
lea
js
push
data16
pop
mov
mov
ja
das
into
in
cmpsl
in
gs
dec
push
add
leave
xchg
cltd
test
mov
ljmp
mov
jle
pop
mov
dec
add
cmp
jae
mov
mov
push
mov
dec
pop
arpl
mov
fisttps
mov
xor
inc
popf
add
push
scas
fwait
jle
add
imul
sbb
xor
and
xchg
dec
jecxz
jmp
in
cs
xor
pop
adc
ljmp
fwait
ss
clc
or
pushf
mov
and
mov
jbe
or
arpl
mov
xor
dec
lods
push
fwait
rcr
loope
lods
fisubl
lock
int3
cmp
push
pop
mov
cli
and
test
test
push
pop
pop
call
leave
mov
stc
insb
leave
mov
or
xchg
adc
xorb
fimull
das
data16
mov
stos
sub
xchg
xor
in
xchg
imul
sbb
pop
mov
push
dec
push
das
cmpsb
in
clc
clc
aaa
std
sti
mov
push
pop
lock
outsl
std
arpl
cmpl
push
pop
lcall
and
fistpll
xchg
repz
or
adc
dec
imulb
push
mov
aaa
xchg
jbe
and
out
sti
std
xchg
lcall
xor
push
xchg
dec
mov
mul
insb
lods
lock
scas
dec
xor
imul
pop
fs
negb
lock
mov
out
cmp
mov
test
enter
ja
movsb
loope,pt
orb
mov
addl
jge
add
mov
xchg
scas
adc
ljmp
clc
push
nop
sbbb
sub
pop
inc
loop
xor
sub
adc
jl
pop
rcrb
sbb
enter
pushl
mulb
push
daa
mov
lods
out
sub
jp
inc
mov
jecxz
add
aaa
es
insl
outsl
cs
cltd
cltd
dec
clc
mov
cmpsl
outsl
mov
rorl
stos
out
out
inc
dec
jb
add
pop
jno
out
fs
inc
pop
les
mov
push
pop
ficompl
lahf
mov
mov
pop
pop
loopne
cmp
mov
cmp
nop
jno
mov
push
pop
gs
adc
xorl
push
jae
jg
fwait
sbb
add
mov
cmpsl
ja
popa
xchg
orl
add
or
mov
or
dec
stos
scas
addr16
sbb
pop
mov
jae
lcall
fnstenv
jecxz
iret
xor
mov
inc
jns
mov
hlt
iret
inc
imul
add
pop
test
jmp
mov
lods
jg
ds
mov
int
in
divb
xchg
test
xlat
xchg
mov
inc
fsubl
lret
ror
mov
dec
test
insb
push
jae
repz
out
in
dec
loopne
pop
es
pop
and
jmp
ja
popf
sub
jmp
dec
out
and
push
enter
std
adc
aaa
adc
mov
cmc
cli
mov
sbb
mov
dec
or
cld
movsb
add
testl
fidivrs
pop
inc
leave
mulb
push
jb
jns
in
cmp
iret
nop
mov
inc
jno
xorl
pop
sti
or
add
lea
fnstenv
lods
add
jle
xchg
pop
repnz
lea
push
adc
and
js
jne
icebp
outsl
mov
or
push
jno
cli
nop
cmp
leave
sbb
jecxz
popf
pop
xchg
ss
sub
mov
cli
xchg
insb
shlb
xchg
and
jnp
mov
fists
sbb
hlt
cmc
dec
push
jmp
mov
stos
icebp
mov
inc
xchg
xor
inc
pop
imul
pushf
mov
movsl
call
jae
mov
sbb
xchg
sbb
push
idivb
push
inc
in
rcrl
lret
and
sbb
fiadds
sar
ret
jae
inc
cwtl
cmpsb
es
push
jle
jecxz
test
push
fs
cmp
or
cmpl
sbb
push
popf
lcall
sub
sahf
or
cltd
jne
mov
jl
addr16
pop
cs
fsubs
dec
pop
jp
mov
add
mov
jb
push
jns
aad
jmp
fldl
jo
in
mov
sbb
outsb
xchg
sub
popf
fcoms
and
mov
mov
adc
push
addl
mov
mov
imull
adc
and
nop
push
inc
xor
lea
or
ret
stos
cmp
shrb
mov
movsl
les
test
pusha
test
pop
jge
and
pop
hlt
cli
lods
and
movsb
lea
scas
rcr
and
std
lock
lret
aaa
clc
cmp
pop
cmp
inc
xchg
into
pop
in
xor
movsl
das
shll
popf
imul
bound
stos
andl
js
out
sub
mov
and
add
jle
lcall
ljmp
addl
or
lods
mov
addr16
xor
rorl
ficoml
xchg
mov
loopne,pn
inc
adc
outsl
repz
sti
push
sbb
scas
dec
stc
jns
rcl
add
mov
add
sbb
stos
jno
adc
fwait
mov
xor
mov
testl
pop
call
push
ffree
lock
xchg
imul
insb
clc
mov
arpl
rep
out
in
imul
add
pop
jno
mov
rclb
fs
adc
push
fs
inc
shlb
pop
arpl
sub
cmp
mov
dec
push
sbb
nop
add
in
std
jb
ss
dec
test
and
out
int3
popa
rcll
xchg
jo
cmpsl
fists
aad
jge
nop
sarb
into
adc
pusha
dec
xor
cmpl
dec
jno
stc
jle
leave
into
test
add
ljmp
push
and
popl
je
sbb
rorl
pop
sbb
or
in
jge
jns
pop
inc
outsb
es
push
push
inc
cmpsl
mov
loopne
iret
sub
or
and
scas
lahf
loope
mov
leave
test
jb
lock
lock
dec
xor
ds
inc
arpl
jl
mov
add
jmp
cmp
mov
xchg
mov
outsl
xchg
stc
pop
mov
push
jo
jnp
add
ficoml
push
stos
xchg
or
test
inc
es
sbb
mov
icebp
jge
add
push
cmpsl
sbbb
daa
outsl
into
xchg
jbe
or
xchg
fiaddl
fwait
inc
mov
test
shrl
ss
pop
rorb
pop
sbb
dec
insb
inc
fisttps
fwait
dec
push
sbbl
pop
scas
sbb
dec
dec
sub
xchg
mov
mov
test
inc
pop
rcll
pop
sub
mov
dec
jmp
jb
cld
xchg
lcall
dec
in
mov
xor
jbe
jmp
mov
imul
scas
sbb
fcoms
or
mov
jle
push
xlat
mov
jae
inc
mov
xchg
and
jae
arpl
in
dec
add
rorl
pop
nop
xor
dec
jb
pop
in
add
ficomps
pop
jge
jg
push
xor
lret
mov
push
jmp
add
in
sbb
mov
mov
test
or
faddl
and
xor
cmp
icebp
arpl
imul
data16
dec
cmpsl
dec
and
or
pushf
fstp
add
or
xor
fs
cmc
add
sahf
lock
in
jae
rcrl
mov
int3
sub
or
dec
hlt
test
dec
into
cmpsl
and
cmp
aad
mov
ret
sub
lret
dec
xor
cmc
addb
push
push
cmp
js
pop
jmp
je
popl
push
aad
std
sbb
jl
cmpw
leave
cmpl
mov
push
sbb
mov
mov
popf
mov
mov
push
inc
sub
jmp
jle
loopne
xor
stos
das
rcrl
data16
out
out
leave
addr16
scas
mov
xchg
xor
lds
push
mov
fwait
push
faddl
lret
rclb
mov
sti
arpl
cltd
test
rcl
cmp
jbe
pop
inc
pop
inc
mov
sub
icebp
jge
pop
int
mov
and
inc
add
xor
or
imul
and
mov
pop
sub
pushf
mov
fildll
and
push
mov
sti
sti
xor
xchg
hlt
mov
fdivs
pop
inc
mov
pop
andb
pop
mov
sub
xchg
cltd
xorb
cmp
dec
std
inc
shll
lds
cs
add
dec
imul
lea
es
mov
xor
dec
mov
pusha
mov
push
movsb
add
push
or
dec
les
jmp
xchg
pop
mov
xorl
negl
push
or
cld
mov
push
jecxz
bound
lock
sahf
xlat
lods
xor
test
leave
mov
insb
pop
sti
fwait
rcr
mov
adc
mov
daa
pop
pop
insl
lea
jo
inc
inc
inc
pop
sbb
faddl
lahf
xchg
sub
jns
repnz
inc
sbb
aad
mov
dec
movswl
add
and
push
outsl
cs
daa
push
aas
jp
shlb
xchg
cmp
push
outsb
cmp
pusha
fwait
cmp
ja
mov
jge
out
idiv
jo
add
inc
and
jge
aad
aam
mov
inc
lahf
js
pop
cmp
pop
sbbl
push
pushf
enter
and
adc
pop
cmp
xchg
aad
inc
inc
or
xor
addb
popa
xor
jp
xchg
lock
or
mov
and
in
adc
dec
mov
and
mov
cmpsl
test
cmp
xor
out
pop
stc
jns
outsl
dec
sub
lods
dec
ss
frstor
or
pop
cmp
gs
fldl
cwtl
dec
ljmp
imul
sub
sbb
pop
cmp
test
cmp
insb
aas
popf
testb
loopne
ret
mov
sub
clc
mov
sub
bound
pop
add
js
mov
cwtl
ret
mov
sub
clc
mov
sub
bound
pop
add
js
mov
cwtl
inc
test
mov
add
mov
mov
sub
bound
pop
add
js
mov
cwtl
ret
mov
sub
clc
mov
xorb
aas
lcall
jnp
imul
dec
insl
testb
jne
add
lret
popf
stos
int
mov
imul
dec
insl
cmp
or
lret
in
jnp
stos
lea
pop
imul
dec
insl
cmp
or
mov
lret
in
mov
fsub
lods
and
pop
sbb
xor
ds
lcall
mov
lret
xor
or
in
repnz
mulb
and
xor
inc
pop
stos
push
int3
mov
arpl
mov
pop
xchg
sbb
or
incb
lods
jnp
imul
jns
sbb
sbb
jbe
outsb
fsubs
into
jmp
sbb
mov
mov
bound
dec
jnp
cwtl
mov
fsubrp
push
push
enter
std
xchg
xchg
mov
jl
sbb
xchg
testb
lods
and
fsubl
jecxz
jmp
es
test
lods
mov
imul
dec
insl
cmp
or
lret
in
mov
mov
pop
sahf
xor
and
cmp
dec
jg
or
mov
movsb
fistl
stos
hlt
clc
aas
int
push
sbb
pop
jge,pt
cmp
js
and
pop
sub
fldcw
enter
or
daa
sbb
sub
sti
fucomp
int
std
lret
in
mov
mov
imul
dec
insl
cmp
or
lret
in
mov
mov
dec
pop
fs
lock
push
mov
fimull
fsubs
fcmovu
dec
dec
cmpb
lcall
loope
push
ss
push
lods
mov
xchg
clc
mov
jno
iret
mov
int3
push
sbb
xor
icebp
push
push
jge
fiadds
cmpsb
jg
lret
push
stos
pop
in
pop
in
and
sub
pop
addr16
xchg
cld
out
add
mov
jp
test
into
xor
or
or
inc
mov
push
sub
and
add
mov
xor
pushf
cmp
test
inc
jne
mov
int3
std
insl
jg
ficomps
stc
cmp
fwait
sbb
mov
rclb
sti
or
leave
sub
dec
mov
adc
daa
loopne
fucomip
cld
int
add
push
mov
paddusw
adc
and
lds
push
pop
outsl
mov
mov
outsb
jns
or
add
xor
add
ret
xlat
adc
xchg
sub
cmp
sbb
and
mov
leave
push
int
mov
pop
cmp
mov
lahf
shr
or
aas
aaa
jecxz
shlb
or
sub
jno
aas
ja
lahf
icebp
pop
aaa
sub
push
cmp
cmp
ret
fildl
inc
iret
lret
out
insb
imul
fiadds
push
mov
nop
dec
outsb
dec
aam
ds
pushf
lock
sbb
outsl
sbb
call
fxch
dec
inc
add
cmpsl
inc
mov
adc
fldcw
or
mov
es
lds
in
fnstcw
mov
push
jno
imul
ja
mov
clc
sbb
shll
iret
test
fildll
xor
int
jle
push
push
mov
xlat
dec
push
enter
lahf
and
sahf
and
out
sbbb
mov
lret
cmpsl
or
jl
nop
jo
stc
aam
push
aaa
ljmp
lret
mov
pop
or
fisubl
jg
fists
mov
inc
pop
sub
or
or
mov
movsb
mov
adcb
sub
xchg
cli
inc
push
testb
xchg
and
pop
out
or
fs
out
lcall
cmp
rcrl
push
stos
mov
mov
mov
daa
imul
lret
fmul
hlt
mov
cmp
hlt
lcall
mov
xlat
fisubs
aas
inc
in
sahf
and
push
cmc
and
push
das
jns
or
and
ss
push
lods
lock
sti
inc
into
fiaddl
repnz
mov
orl
push
insb
shrb
xchg
sbb
fldt
xor
xchg
cwtl
inc
mov
int
xchg
sbb
push
and
rcl
mov
pop
cld
ss
fdecstp
popa
imul
ja
fistps
ja
add
jno
mov
add
into
jecxz
in
xchg
lods
outsb
push
enter
push
pop
xlat
xor
into
and
cmp
lret
and
cmpsl
aas
ret
inc
lret
pop
fwait
push
cltd
mov
push
mov
into
dec
xlat
lcall
popf
mov
mov
push
cli
push
shl
xchg
rcrb
stc
or
mov
popa
and
outsb
dec
out
cwtl
pmulhw
xchg
add
add
lods
sub
mov
aam
mov
push
push
je
pop
jne
and
sub
incb
and
push
ss
jb
pop
std
xchg
in
and
jae
inc
loope
adc
mov
aam
sub
sti
loop
push
push
xor
inc
or
jp
sub
add
push
fsubrs
jno
je
mov
dec
arpl
jp
jno
mov
div
or
enter
jl
push
in
insb
jge
jl
cwtl
or
mov
dec
addr16
test
sub
lahf
cmp
pop
cmp
ret
xor
into
mov
sub
pop
adc
imul
dec
xchg
outsl
rolb
imul
pop
idivl
adc
dec
mov
popa
fwait
test
ret
fs
sub
loopne
pop
sahf
aas
adc
ljmp
test
test
mov
sub
aad
clc
iret
rclb
add
daa
loope
lods
jge
test
push
das
jbe
addr16
or
sbb
jbe
pusha
test
xchg
jnp
in
mov
jecxz
add
mov
test
test
in
inc
icebp
rorl
xlat
xor
sub
popa
push
jb
inc
mov
xor
movsb
mov
fsts
push
stos
jae
or
pop
jo
push
sub
sahf
cmp
fbld
int3
sub
dec
push
mov
or
add
mov
xchg
xor
push
jl
pushf
aad
iret
pop
adc
dec
lea
push
and
int3
mov
sub
jmp
out
xor
cwtl
lcall
mov
push
lcall
or
call
add
lods
and
dec
and
sub
cmp
pop
mov
pop
push
movsl
cmp
dec
mov
lret
sbb
pop
sahf
dec
pop
xlat
add
arpl
in
lret
dec
stos
cmc
lcall
jae
repnz
mov
icebp
sarl
ja
mov
mov
push
dec
inc
add
pop
mov
jmp
jmp
pop
outsb
stos
inc
xor
mov
lods
add
inc
mov
fwait
hlt
mov
cmc
lahf
mov
js
arpl
movsb
push
arpl
pop
mov
outsl
or
cmp
or
push
jb
ljmp
sbb
mov
and
into
cmpsb
mov
rcll
mov
ds
add
test
mov
movsl
mov
mov
repz
sbb
in
xchg
pop
push
pop
sbb
fcomp
xchg
fwait
jae
aas
lock
js
int3
popa
pusha
jne
add
test
adc
repz
loope
loope
test
mulb
lods
mov
dec
cmp
fisubrs
sarl
clc
dec
mov
icebp
sbb
cld
push
mov
dec
sub
popa
fcmovne
xor
iret
inc
push
xor
adc
xchg
mov
sub
jmp
ljmp
jmp
lock
dec
bound
hlt
xchg
addr16
push
into
fcompl
dec
fdivl
aam
jno
test
mov
add
and
roll
sbbb
push
inc
iret
lea
jnp
add
cwtl
xchg
push
inc
push
and
inc
sub
dec
and
rep
dec
lret
push
inc
fadd
je
and
cmp
inc
add
or
dec
pushf
dec
in
xchg
xchg
popa
outsb
pop
or
mov
lods
xor
sub
test
mov
movsb
add
mov
imul
insl
mov
int3
out
inc
shlb
std
movsl
sbb
jne
cmp
add
add
add
sub
das
pushf
lret
jb
mov
mov
mov
flds
movsb
in
ret
js
seto
push
ret
repz
or
or
das
cld
mov
push
add
mov
pop
sbb
lods
repz
sub
sahf
add
cmp
and
mov
out
pop
lret
or
leave
dec
daa
mov
int
shll
mov
pop
ljmp
fidivrl
ret
jb
mov
std
movsb
xchg
mov
cs
loop
sub
xchg
sub
pop
icebp
imul
sbb
scas
ds
pushf
mov
jg
jbe
push
dec
in
fwait
mov
xor
xchg
jl
repz
lock
clc
inc
jmp
scas
aaa
or
adc
out
xchg
sub
sbb
lcall
cmpsb
sub
push
xchg
jp
xchg
fstpl
imul
cmp
add
jl
pop
push
dec
or
sub
movsl
push
jo
xchg
dec
dec
repnz
push
cmp
adc
sbb
push
pop
or
pop
enter
ret
mov
js
daa
pop
dec
push
scas
adc
mov
loope
pop
xor
aaa
out
imul
mov
int3
sarb
and
loopne
xor
lahf
mov
adc
push
test
aam
lahf
dec
and
jp
push
vaddsubps
dec
ja
ds
xor
push
jb
cmc
mov
sub
xor
inc
inc
mov
jmp
push
popa
repnz
lods
cmp
mov
call
push
orl
lret
and
addl
test
into
mov
insb
or
or
cwtl
xor
adc
mov
dec
push
xchg
shlb
rcrb
xor
fmull
fbstp
adc
pop
add
add
int3
add
and
jbe
xchg
push
push
add
lret
lds
shrl
push
aaa
cmove
push
cmp
sbb
imul
dec
cwtl
mov
dec
mov
insb
xor
mov
ja
movsl
iret
lret
xchg
insl
xor
cmpsl
test
xchg
psubd
in
pop
das
pop
pop
outsb
pop
dec
bound
jmp
adc
scas
insl
test
xor
mov
sub
jmp
mov
stos
push
dec
mov
movsb
and
inc
push
push
mov
lret
scas
push
sub
mov
lods
orb
sbb
clc
in
iret
sarb
and
sbb
push
inc
sti
mov
lret
sbb
subb
imul
dec
pop
test
push
xchg
sbb
rcr
mov
rcrb
test
mov
lods
cli
sub
ljmp
push
mov
xchg
sub
mov
lods
addr16
push
outsb
test
out
iret
pop
or
fucomp
repnz
cmp
fiaddl
pop
mov
gs
ljmp
jnp
xchg
and
inc
xchg
and
and
sub
pop
int3
stc
jns
mov
in
ljmp
jecxz
clc
push
dec
ljmp
mov
outsl
jno
mov
push
in
ss
data16
mov
xor
push
loop
je
mov
mov
jmp
add
inc
cli
push
test
xor
int
inc
rolb
sahf
xchg
bound
test
maxps
sbb
pushf
and
enter
in
add
inc
stc
mov
stos
mov
xor
dec
out
fstl
loop
decb
incb
and
push
mov
mov
sub
packssdw
mov
out
in
lret
sti
add
leave
sub
les
push
int
adc
or
jmp
mov
add
xlat
xchg
adc
scas
mov
imul
scas
sbbl
pusha
rclb
add
pop
xor
ret
dec
popf
shlb
inc
test
inc
jmp
aas
add
mov
sub
xchg
cmpsb
push
sub
stos
aas
mov
sbb
cmp
sbb
dec
fisubrs
mov
jp
inc
fistps
es
std
xchg
mov
pop
lock
mov
push
cwtl
sbb
fistpl
arpl
jnp
sbb
stos
or
into
aam
inc
sbb
jmp
pop
push
mov
xchg
jmp
sub
div
ja
stos
test
lahf
inc
jle
negl
dec
jp
sub
iret
sbb
mov
push
bound
mov
dec
mov
jmp
stos
por
test
fcompl
jns
mov
iret
or
in
push
outsl
int
repz
loopne
rolb
cmc
pop
lods
cmp
and
mov
aad
cld
cmpsl
fwait
pusha
and
push
es
sub
pop
pop
inc
push
inc
mov
out
adc
notl
xor
jb
adc
cmp
adc
aad
insl
outsb
xchg
mov
dec
xchg
scas
mov
dec
xchg
hlt
clc
icebp
jno
adc
jp
cmp
int
loop
xchg
arpl
orl
daa
pop
fistpll
jne
jmp
pop
mov
jne
inc
das
adc
pop
bound
je
dec
in
xor
pop
ljmp
or
sti
and
clc
jae
arpl
push
pop
cmp
add
mov
add
loop
pop
mov
jne
repz
mov
subl
icebp
hlt
add
movsl
inc
lods
adc
scas
mov
sarb
adc
or
and
imul
sti
cmpsl
jo
cmp
andl
fmuls
mov
or
mov
dec
xchg
push
or
pop
insb
lahf
push
loope
pop
dec
ljmp
xchg
loope
imul
shlb
sbb
sbb
outsl
sub
sub
push
mov
std
repnz
jno
jge
stos
loopne
mov
mov
sub
sbb
insl
push
and
add
loopne
aaa
xchg
push
lret
ds
xor
imul
cmp
xor
mov
jbe
jmp
dec
aaa
fnstenv
jle
sbb
sub
dec
mov
mov
mov
jbe
mov
insl
pop
addb
sarl
xor
clc
daa
mov
or
into
push
fidivrl
das
dec
xlat
gs
pop
xorb
push
roll
push
subb
and
xchg
push
lods
xchg
mov
add
ret
push
repz
mov
loope
sub
mov
aas
cmpsb
adc
sbb
jno
jg
repz
dec
jo
jecxz
mov
fs
pop
subb
lea
jmp
orb
jns
push
mov
pushf
xchg
loop
insl
jge
xchg
fbld
pop
pop
filds
jae
iret
mov
xchg
sub
xor
stos
pop
fdivrl
xor
add
daa
shlb
rclb
and
and
test
push
add
pop
ljmp
test
adc
mov
test
push
push
inc
cwtl
cli
shl
jns
xchg
xor
fldt
daa
jb
out
aas
fcoml
movswl
test
xlat
sbb
pop
leave
inc
inc
subps
out
dec
inc
adc
test
push
pop
add
adc
push
add
jns
lock
mov
cmp
add
rolb
jo
leave
mov
bswap
cmp
cltd
adc
jl
scas
push
jge
out
push
mov
or
sar
jecxz
add
inc
or
aad
sbb
sahf
fiadds
and
shlb
in
mov
lahf
pop
add
push
mov
fmuls
sbb
fs
xchg
fsubs
push
sub
ja
in
lret
outsb
mov
cld
aaa
jmp
dec
push
pusha
cmpb
lds
mov
pop
or
add
xchg
inc
addb
xchg
sub
call
sub
pop
in
adc
mov
testl
or
adc
lret
std
test
in
lcall
or
sbb
jne
lock
jp
pop
cmp
or
insb
or
negb
sub
mov
xchg
bound
in
xchg
add
and
sbb
test
push
call
sub
in
ret
mov
call
push
or
cmp
add
in
fnstenv
mov
mov
adc
pop
jp
dec
xor
and
or
out
jmp
push
push
mov
push
push
mov
push
insb
stc
dec
mov
mov
pop
out
and
cmp
dec
xor
imul
pop
orb
add
test
ret
xchg
rcll
test
xchg
push
mov
shll
roll
push
sar
jmp
or
lock
add
xor
mov
int
push
jmp
shlb
popa
loope
jl
cmp
insb
cmp
and
xlat
fsubrs
inc
xchg
dec
push
data16
rcr
scas
imul
fsubrl
push
bound
leave
pop
sbb
ds
adc
out
and
xor
add
add
es
shr
loope
or
jge
stos
add
cmp
mov
dec
fcompl
and
push
mov
xchg
mov
dec
and
popa
shlb
cltd
rorl
jp
sub
adc
xchg
pop
and
addl
lret
sarb
cld
xor
jns
lods
sbb
lods
mov
add
mov
add
nop
mov
sub
or
out
aam
push
xlat
pop
insb
outsl
mov
test
inc
xlat
in
repnz
stos
mov
jmp
push
aaa
ljmp
icebp
mov
pop
push
lods
outsl
test
sub
inc
imul
push
sbb
lock
sarl
test
adc
push
xchg
pop
jp
lea
add
mov
pop
add
xor
and
mov
xchg
dec
mulb
dec
incb
mov
mov
fists
mov
fstpt
test
sub
jns
cld
outsb
push
push
mov
movl
xlat
pushf
inc
popf
rcrb
xchg
pop
or
repz
adc
cltd
sbb
sbb
out
pop
test
jno
ljmp
popa
jne
cld
push
into
add
flds
xchg
adc
xchg
sahf
inc
dec
out
es
or
fildll
xchg
enter
cli
call
pop
mov
fs
out
sub
adc
add
cmp
test
lock
push
push
xlat
pop
cmpsl
out
in
pop
pop
pop
aam
popa
movl
add
cmpsb
xor
inc
push
push
movsl
addr16
out
push
repnz
imul
scas
test
jge
xor
mov
sbb
dec
jo
in
fstpt
add
xor
sbb
mov
and
fisttpl
ficomps
daa
sbb
mov
out
xor
xor
push
xor
adc
push
addl
popa
pop
push
out
adc
popa
int
jmp
ficompl
js
mov
add
aam
push
push
pop
adc
aam
movl
cmp
mov
in
int3
int3
call
push
in
ror
xchg
test
pop
loope
cmc
daa
jle
mov
inc
ds
pop
bound
icebp
out
lods
sub
call
mov
pusha
bnd
lds
or
or
inc
ficoms
push
cmp
icebp
add
int
sbb
pop
std
call
xor
enter
mov
pop
sbb
std
test
sub
fdiv
mov
xor
inc
imul
incl
push
scas
out
push
mov
pop
leave
xchg
inc
imul
cs
daa
inc
jecxz
sbbb
jmp
push
pop
ret
fistpl
shr
test
popf
movsb
cmpsl
hlt
cmp
icebp
cmp
pop
pop
dec
out
jne
in
push
fmuls
aas
sub
sbbl
inc
ss
or
cmp
sbbl
cmpl
je
and
mov
addr16
mov
arpl
movsb
xchg
cmp
push
clc
loopne
loope
pop
jl
pusha
in
aaa
push
mov
sub
nop
push
rcl
inc
add
lret
push
pop
push
xor
ljmp
and
mov
jle
les
adc
lcall
sub
dec
ficoml
loope
cwtl
push
jg
cmpl
mov
ss
push
mov
leave
lret
es
insb
add
nop
scas
fsub
lds
and
pop
jle
repnz
xchg
add
mov
addr16
sarl
fmull
in
sub
mov
mov
xchg
les
les
testb
dec
lahf
fwait
int
push
xor
sub
add
add
lods
das
lret
test
xor
dec
dec
loop
mov
arpl
cwtl
movb
cmp
push
mov
mull
mov
mov
push
sbb
repnz
ficoml
mov
aas
sub
or
add
std
test
fdivrs
ds
dec
mov
les
and
shrb
mov
std
ljmp
sahf
and
xchg
test
dec
mov
jbe
and
inc
cwtl
and
fstpt
adc
sbb
push
or
mov
ss
aam
test
sub
sbb
xchg
outsb
cmp
and
ret
es
cmp
sti
mov
mov
fidivl
and
dec
jecxz
rcll
imul
mov
push
or
pop
sub
hlt
fldenv
dec
inc
decl
fists
mov
pusha
dec
adc
push
jge
popa
ret
lods
test
orl
add
mov
add
mov
cli
fmull
dec
mov
jl
jle
pop
sub
cwtl
mov
cmp
cltd
mov
stos
js
hlt
shlb
jmp
push
dec
cmp
fldcw
jl
insl
cmp
or
lret
in
mov
mov
imul
dec
insl
cmp
or
lret
in
mov
mov
jmp
fstpt
insb
mov
cmp
sub
lret
in
mov
mov
imul
dec
imul
mov
jmp
jno
lret
lcall
sti
push
xlat
xor
notl
out
sahf
push
loopne
ret
arpl
lods
ja
xchg
repnz
or
xlat
daa
xlat
aaa
daa
notl
out
xchg
ja
addr16
cmpsl
imul
xchg
flds
out
xlat
daa
xlat
xchg
loope
out
xchg
inc
xchg
mov
cmpsl
jne
mov
test
testb
pop
movsb
je
je
dec
mov
testl
pop
aam
xchg
aad
insb
lcall
mov
xor
in
arpl
clc
xchg
bound
mov
mov
xlat
inc
loop
mov
sub
jle
dec
scas
test
cmpsl
clc
sbb
mov
mov
xchg
loop
push
add
sbb
loopne
xor
loopne
jmp
push
out
xchg
cmpsl
lret
lret
push
pop
push
sub
jb
sbb
push
xchg
sub
push
xchg
dec
lock
ja
ja
popf
xchg
enter
jmp
aas
fmul
bound
xlat
mov
daa
mov
adc
add
xchg
in
repz
push
mov
adc
movl
xchg
ja
addr16
cmpsl
aad
mov
emms
xchg
addr16
aaa
iret
daa
cmc
mov
movsb
dec
mov
mov
or
and
add
hlt
and
add
and
xchg
mov
mov
push
scas
mov
cmpsb
imul
int3
xor
and
lds
loopne
out
mov
mov
inc
mov
sarb
xchg
push
cmpsl
inc
push
mov
cmpsl
ja
xchg
testl
xlat
aaa
daa
notl
out
xchg
ja
addr16
cmpsl
inc
push
mov
cmpsl
ja
xchg
testl
xlat
aaa
cmpsb
jno
push
jmp
out
cmp
clc
xchg
fisttpll
or
adc
pop
or
dec
cmpsb
popf
xor
je
mov
jb
cmp
push
cld
cmpsl
movsb
imul
and
frstor
mov
xor
ds
push
dec
fsubrl
dec
je
mov
aas
shrl
adc
ret
addr16
js
pop
leave
sub
sbb
jne
inc
add
loop
cltd
dec
popf
inc
scas
stc
test
lds
jl
mov
push
ret
adc
add
lds
cmp
adc
mov
and
scas
popa
dec
cmp
adc
sar
cmp
movsb
mov
fildll
jno
je
test
or
xchg
sub
jp
outsl
fidivrl
mov
jg
add
ds
test
in
and
mov
inc
iret
ds
jmp
inc
lret
push
sti
jg
mov
pop
notb
movsl
je
cmpsl
cli
add
lea
xorb
cmp
xchg
dec
xchg
add
mov
or
out
fisttps
cmpsl
sbb
or
loop
mov
mov
aad
mov
negb
xchg
cmp
pop
xor
adc
dec
out
push
testl
and
pop
jecxz
sti
stos
adc
or
call
filds
jo
aas
jno
fld
fbstp
rcll
loop
mov
push
mov
imul
pop
and
or
sub
mov
dec
mov
cwtl
xor
lods
pop
adc
leave
add
gs
lahf
jne
xorb
jmp
imul
fbstp
adc
les
repz
xor
std
cmp
add
push
adcb
out
cmp
mov
xchg
jae
les
or
push
es
rcrl
xor
aad
jmp
or
adc
cli
loope
or
movsl
or
rolb
inc
add
jp
out
push
daa
jl
add
inc
test
jne
or
xchg
mov
and
jae
or
xor
shrl
or
outsb
jb
push
icebp
dec
in
inc
pop
dec
and
int
sub
mov
fwait
jmp
add
ret
push
xor
xchg
mov
movsb
test
mov
xor
neg
sbb
mov
xor
movsl
pop
test
push
mov
int3
jno
xchg
cmc
outsb
imul
lds
jge
xchg
push
ljmp
or
or
ljmp
mov
les
popf
xchg
add
lods
decl
les
enter
insb
or
inc
mov
outsl
pop
test
mov
and
cmpsl
dec
ret
sbb
sbb
pop
push
pop
xlat
inc
lret
jecxz
jno
sub
int
aas
inc
or
inc
mov
pop
pop
jecxz
icebp
sub
out
dec
sub
push
xor
push
ret
xchg
xor
dec
ss
scas
cwtl
sti
pop
or
jae
cmp
jge
fbstp
sbb
jno
insb
rcll
and
lea
xor
and
popa
std
mov
push
adc
dec
xchg
cli
imul
mov
shrl
lods
iret
mov
jl
test
dec
lods
cmp
mov
mov
cmp
cs
push
scas
shlb
and
push
jecxz
popf
and
pop
mov
mov
loope
test
iret
or
setl
cwtl
fisubs
cmp
outsb
dec
dec
xchg
and
add
test
dec
insl
daa
mov
jmp
jl
dec
dec
push
fs
adc
xor
push
or
mov
rep
sahf
cmp
xor
lods
push
mov
lods
xchg
xor
test
int
sti
fiadds
pop
add
jmp
cmp
popf
mov
sub
stc
xor
push
pop
sbb
mov
ljmp
ja
je
dec
sti
lcall
test
test
roll
mov
jb
pop
scas
lret
paddw
enter
out
int3
int
cmp
loop
cld
xor
hlt
aaa
divb
subb
rolb
jmp
insb
cmp
das
jp
test
sti
and
cmp
outsl
xor
lahf
jno
negb
add
xchg
adc
cmc
fnstcw
inc
pop
push
aam
cmp
movsb
cmp
rcr
push
fiadds
pop
fs
in
fldl
xchg
std
jns
enter
and
cmp
fwait
hlt
lahf
or
mov
mov
inc
sbb
lahf
adc
add
in
fs
sbbb
push
rolb
xorb
out
or
xchg
lcall
inc
mov
mov
stos
ljmp
or
cmp
adc
cmp
mov
and
or
mov
ror
test
cmp
xchg
scas
or
gs
shll
mov
mov
mov
mov
pop
int3
call
mov
fistpll
imul
add
ss
mov
aad
pop
and
test
xchg
jl
mov
add
mov
inc
mov
xor
xchg
lods
mov
cli
mov
ret
xchg
adc
cmc
icebp
adcb
rol
lods
and
les
push
push
mov
out
ret
in
bound
mov
ljmp
mov
adc
adc
icebp
jnp
mov
push
imul
fs
cmp
lock
in
pop
xlat
mov
jp
dec
dec
repz
ret
fsubrl
mov
mov
mov
dec
and
add
mov
mov
pop
xlat
sbbb
sbb
and
lahf
sbb
addr16
neg
stos
inc
jo
or
adc
sbb
cmp
vandnps
inc
xchg
fmull
cmpsb
mov
mov
push
xchg
std
sti
stos
or
outsb
frstor
loop
add
int3
mov
or
mov
xor
and
cltd
cmp
les
push
ss
pop
cmp
inc
sbb
mov
loopne
jne
dec
insl
adc
shll
fidivrs
fldl
negl
push
cmp
ret
xchg
aam
add
mov
lods
sbb
repz
dec
mov
mov
mov
adc
adc
sub
fsubl
cld
xor
int3
in
dec
mov
in
fsubrl
lds
mov
gs
push
push
fldl
outsl
mov
data16
and
or
xchg
jne
test
ja
aam
push
es
rolb
fsubs
sbb
das
hlt
icebp
push
push
ret
in
adc
xchg
dec
out
cmp
push
pop
aam
xor
in
addr16
mov
movsl
je
lahf
mov
jle
daa
sub
scas
or
lods
lods
add
lcall
inc
xchg
inc
insb
movsb
adc
push
xchg
lret
or
inc
adc
mov
cmp
mov
fsubs
cmpsl
mov
and
loopne
rcll
inc
sub
test
xchg
xchg
mov
pusha
aaa
xchg
xchg
call
nop
pop
out
dec
stos
sar
ret
lock
mov
popf
xchg
aam
shl
test
aam
jns
test
and
loop
cmc
push
xchg
cmpsb
hlt
jnp
cmpsb
xchg
daa
je
rep
movsl
jb
push
mov
shrl
aad
pop
add
xor
sbb
sub
aas
ljmp
inc
pop
xor
lock
negl
sbb
leave
jecxz
call
add
shl
fdivl
jg
aas
inc
add
ret
jnp
fsubrs
clc
and
xchg
jg
aad
cmpsb
shlb
xor
arpl
cmp
push
xchg
or
jno
fwait
lods
fisubl
rol
xchg
cmpsb
ds
or
sahf
in
mov
mov
push
jns
push
xchg
mov
cmp
or
or
call
xor
out
dec
push
ror
cwtl
loope
jp,pt
xchg
aam
test
mov
leave
and
fs
pop
sbb
gs
pop
xor
std
aaa
orb
sbb
imul
mov
lods
lahf
popa
in
cltd
into
xor
jl
sbb
xor
cmp
jnp
xchg
popf
test
negb
lahf
add
pop
fistpl
or
fcmove
and
pop
int3
mov
push
aas
mov
cmpsb
xchg
sub
lea
pop
iret
sub
mov
ljmp
lods
push
cltd
jne
mov
cltd
mov
sub
ret
or
es
arpl
lahf
pop
lahf
sti
lahf
push
and
jge
push
jbe
mov
mov
mov
out
xor
pusha
lods
add
cmpb
or
dec
jl
pusha
test
scas
fsubrl
adc
movsl
je
sti
jl
lock
jmp
push
xchg
pop
mov
fsts
cwtl
scas
lea
pop
or
aaa
xor
jecxz
lahf
icebp
fwait
push
scas
ljmp
mov
mov
inc
repnz
xor
imul
inc
adc
push
lock
push
nop
mov
push
sbb
mov
xor
pop
addr16
jmp
sbb
dec
pop
dec
pop
rcrl
pop
dec
sub
dec
iret
outsl
mov
xchg
in
adc
pop
ficoml
xor
mov
ljmp
arpl
add
cmpsb
mov
or
adc
rorl
in
xchg
mov
repnz
cld
out
add
add
jnp
mov
mov
jb
dec
out
icebp
adc
push
push
popa
std
or
pop
pop
sbb
mov
leave
cld
lahf
mov
pop
sub
in
faddl
xchg
jge
push
js
push
lret
and
and
sub
and
imul
gs
inc
mov
inc
mov
dec
test
adc
clc
sub
inc
push
fsubrs
movd
mov
cmp
fildl
ja
push
loopne
xor
ss
aam
popa
sahf
inc
insl
mov
into
pusha
push
mov
mov
leave
cmc
aad
sub
and
js
jno
loopne
lds
and
insb
out
push
mov
xor
jl
in
and
pop
addr16
out
or
pusha
mov
jne
push
mov
movlps
fcoml
fbld
pop
movsl
icebp
jecxz
pop
mov
rolb
les
adc
pop
out
pop
jmp
dec
mov
bound
cmpb
les
orl
pushf
add
inc
fldenv
mov
add
add
or
jns
cmp
movsb
jno
test
outsl
xor
aas
aad
cmp
test
out
mov
cmp
bound
sarl
adc
and
and
mov
imul
cmp
push
mov
out
cwtl
xchg
add
xor
push
push
leave
das
xchg
lret
add
into
and
scas
cmp
insl
mov
jg
push
push
jge
sub
rol
jno
inc
je
sbb
addr16
mov
mov
mov
out
mov
out
rcrl
hlt
sbb
call
cltd
stc
jp
popf
xlat
das
cmpsl
inc
dec
out
lahf
mov
stos
outsb
mov
xchg
insl
xlat
fwait
push
cmc
das
repnz
dec
dec
sub
repnz
mov
mulb
xor
mov
addb
fcoms
stc
add
jb
outsl
mov
shlb
jmp
dec
aaa
xchg
mov
push
xor
add
push
mov
push
jecxz
outsl
bound
lret
cmpsb
adc
push
adc
xchg
mov
outsb
cs
inc
hlt
nop
int
adc
out
mov
test
xchg
aaa
push
incb
cs
pop
push
push
cmpsb
lods
push
adc
aas
jo
adc
pop
xchg
sub
xchg
pop
arpl
cli
xor
push
sub
and
gs
je
imul
jp
testl
enter
mov
dec
adc
les
xlat
push
popf
sbb
sbb
push
jge
xchg
leave
xor
xchg
or
ret
cmp
cmpsl
push
pop
sub
or
pop
icebp
add
mov
push
xchg
hlt
in
xor
or
in
jmp
sub
mov
mov
hlt
mov
push
inc
not
hlt
out
in
fnstsw
cli
pop
xchg
cmpb
hlt
add
jecxz
cld
pop
test
fcmove
add
enter
movsb
insb
rolb
mov
outsb
int3
mov
mov
cli
push
icebp
jnp
dec
and
mov
push
hlt
xchg
pop
xchg
xchg
dec
sahf
sub
decb
cmp
push
jge
rcr
sbb
stos
inc
jl
fimuls
dec
pop
xabort
push
ret
push
out
rolb
pop
scas
jmp
sub
jae
mov
testl
pop
cli
outsl
shll
and
lcall
xchg
popa
cmc
sbb
or
stc
add
sti
add
mov
hlt
outsl
cltd
xchg
lock
icebp
xchg
push
or
fs
lret
pop
aas
and
inc
lcall
mov
jae
addr16
add
jp
jbe
mov
mov
jbe
cmpsb
xchg
and
cmpsb
mov
fucomi
xor
xor
out
cmc
pop
and
adc
push
fbstp
ret
pop
sub
mov
imul
lea
bound
and
mov
xchg
in
sti
jmp
mov
or
pop
lds
mov
add
jle
fmul
sbb
jecxz
or
mov
pop
lods
push
imul
imul
cmp
mov
push
pusha
test
pop
and
lret
popf
pusha
sub
pop
incb
and
mov
adc
repz
imul
sti
jne
mov
in
xchg
jo
sarl
push
sbb
mov
push
imul
adc
xchg
push
inc
std
inc
adc
push
jecxz
repz
repnz
or
mov
arpl
bound
or
repnz
and
fwait
sub
and
or
sbb
iret
dec
in
mov
ret
cmp
lds
xchg
sub
push
scas
dec
jno
mov
add
mov
roll
add
cltd
std
xchg
or
xchg
mov
mov
dec
or
out
sbb
lock
out
rcrl
aaa
xor
addb
das
bnd
mov
inc
gs
leave
fcoml
inc
jle
bound
inc
divl
or
lret
push
es
jne
sahf
sub
mov
test
adcl
push
arpl
sub
xor
fsubrs
mov
or
out
push
sbb
fnstenv
inc
and
sbb
push
das
out
out
movsl
add
inc
add
inc
cmc
test
out
fs
and
faddl
mov
push
xor
cs
jecxz
mov
call
xor
popa
outsl
jecxz
lock
fisubl
cmp
push
jmp
mov
cmp
imul
lret
mulb
rclb
jo
mov
push
xchg
push
push
lahf
inc
add
adc
cmpsb
mov
adc
test
cmpl
xor
jge
pop
imul
subb
sarb
js
cmp
mov
hlt
testb
dec
arpl
xor
in
add
shrl
adc
int3
xchg
dec
xor
xor
lahf
mov
or
fadds
fnsave
jns
xchg
test
test
lcall
sub
mov
shlb
push
xor
in
lock
ret
sub
add
jb
pop
int
sub
mov
punpckhwd
aam
push
loopne
and
pop
shl
mov
push
inc
add
test
xor
xchg
cmp
repz
jg
sbb
push
sbb
in
imul
in
cmc
pop
jnp
mov
mov
sub
repnz
outsl
cmp
inc
inc
inc
mov
inc
xor
jmp
cmp
das
xchg
inc
divb
test
add
xor
cli
fwait
inc
inc
inc
push
add
xor
addr16
daa
push
fcomps
addb
aam
pop
arpl
scas
sub
addr16
scas
inc
xchg
into
sub
sbb
testb
cmc
mov
cs
outsl
mov
mov
out
repz
lea
mov
mov
mov
out
push
sbb
sbb
dec
jle
in
rolb
test
mov
insl
adc
mov
fs
test
int
in
jo
filds
insb
sub
xor
xchg
sub
xchg
aas
cli
mov
pop
in
cmpsl
dec
pop
dec
fiadds
jmp
cmp
and
xor
popf
into
je
int3
add
out
loope
or
pop
test
pop
aas
and
xor
push
xor
or
pusha
lret
insl
aas
push
mov
push
popf
sahf
adc
cmpsb
int
push
adc
imul
les
scas
push
mov
cmp
popa
inc
or
clc
xor
ret
pop
sbb
ds
das
dec
dec
xor
jle
cmpsb
xchg
pop
ja
or
jno
mov
test
adc
pop
adc
imul
rcrb
and
shl
repz
test
inc
jle
adc
jp
lcall
repz
sub
js
dec
dec
adc
mov
add
jns
push
ljmp
push
cli
cmpl
leave
dec
xlat
jl
std
scas
ret
fstpt
arpl
loopne
xchg
pop
mov
inc
sti
imull
or
jmp
adc
jnp
scas
syscall
mov
xor
cmp
fimuls
ret
jle
loopne
mov
jg
sbb
cmpsl
mov
xchg
add
inc
hlt
pushf
cmp
mov
stc
loope
leave
int3
dec
mov
dec
xchg
cmp
jns
rcrb
mov
in
cmpsl
loope
js
and
lods
or
insl
adc
lds
in
dec
dec
stc
jp
in
pop
pushf
cmp
fstps
icebp
cmp
fisttpll
dec
or
or
xchg
cmp
mov
sub
ds
push
and
dec
ljmp
add
push
inc
in
adc
dec
outsb
or
decb
enter
xlat
mov
ja
mov
sbb
dec
cwtl
cmp
data16
sbb
lds
mov
lret
pop
xor
push
lea
jbe
xor
gs
push
addr16
pop
or
push
arpl
add
cmpsl
and
pop
cmpsl
mov
xchg
btr
xchg
in
jne
adc
es
in
xchg
mov
xor
out
das
clc
cmp
pop
xchg
in
mov
xchg
test
lahf
lret
dec
cmp
sarb
out
leave
mov
enter
std
adc
cmp
dec
out
sub
dec
aas
dec
sub
jle
cltd
fs
cmc
dec
ljmp
cwtl
add
lea
inc
jbe
add
jo
jmp
push
enter
add
gs
xor
mov
clc
dec
lret
les
mov
fsubr
pop
les
lea
push
rorb
mov
push
mov
cmp
in
sbb
mov
cmpsb
pop
sbb
mov
ljmp
repnz
fwait
mov
sbb
pop
or
dec
mov
out
outsl
jnp
push
inc
jne
pop
sbb
sarl
jge
stos
lods
xchg
addr16
in
adc
xor
add
mov
sbb
push
mov
cmp
inc
push
xor
push
cmp
cs
add
jg
fidivl
pop
es
jne
and
xchg
sub
dec
mov
mov
sub
push
sahf
outsl
das
lahf
adc
sub
xchg
sbb
push
cmp
push
jl
sbb
insb
mov
push
cmpb
jae
lods
testb
dec
xchg
mov
fnstsw
in
idivl
inc
data16
dec
pop
fldz
mov
or
and
aaa
xlat
loop
mov
aaa
pop
repz
mov
xchg
cltd
and
shlb
adc
jbe
jg
ja
mov
dec
cwtl
push
out
sbb
mov
mov
jne
mov
aas
test
jmp
add
prefetch
or
or
cltd
mov
pushf
mov
push
rorb
ja
leave
aam
adc
lret
shll
cli
scas
xchg
subb
mov
shrl
jmp
scas
repz
daa
enter
xchg
ja
addr16
cmpsl
inc
push
mov
cmpsl
ja
xchg
testl
xlat
aaa
daa
notl
out
xchg
ja
addr16
cmpsl
inc
push
mov
cmpsl
ja
xchg
testl
xlat
xor
sub
movntq
xchg
ja
or
push
cmpsl
inc
push
mov
mov
pop
repz
out
fisubs
and
rol
ret
div
out
xchg
ja
addr16
xlat
daa
xchg
xchg
addr16
lahf
iret
scas
fistpll
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
sbb
inc
cmp
lahf
sub
outsb
adc
into
rcrb
lret
cmpsl
fwait
cmp
xchg
xchg
sbb
sbb
inc
cmp
daa
pop
daa
imul
arpl
jns
lret
aad
mov
xchg
xchg
adc
outsb
xor
dec
push
ds
das
jae
insb
or
mov
xchg
ret
cwtl
cmc
xchg
clc
jnp
sbb
and
inc
out
cmpsl
negb
cmp
cmp
push
aam
pop
daa
cmp
js
out
or
std
sub
pop
mov
les
sbb
xchg
mov
ja
mov
pop
ja
outsl
xchg
sbb
je
or
xor
dec
mov
fs
lods
inc
sub
sahf
push
inc
xchg
fstpt
or
outsb
daa
dec
daa
xorl
mov
cmp
pop
dec
fwait
mov
stos
js
xchg
loop
mov
dec
and
out
inc
jnp
imul
or
movsl
fisubl
jmp
sbb
fs
rclb
je
fs
push
cmp
push
or
sbb
pop
sub
pop
daa
inc
aaa
imul
push
xchg
out
out
mov
mov
scas
jmp
loop
js
jle
dec
and
das
and
push
jb
mov
mov
ret
mov
sahf
sti
or
sbb
dec
xor
cmp
daa
xor
and
out
mov
test
fwait
loopne
jecxz
sub
and
adc
adc
aaa
imul
pop
mov
fwait
imull
cmpsl
or
ja
inc
cmp
daa
pop
aaa
imul
pop
mov
fwait
imull
cmpsl
or
fs
push
push
lods
ja
aam
and
movsl
jle
or
mov
out
push
pop
adc
push
pop
rcrb
out
inc
cmp
rsqrtps
mov
incl
mov
cmp
shlb
sbb
shrb
pop
insl
or
movsl
inc
testl
mov
push
adc
js
inc
cltd
xlat
mov
mov
in
popa
out
inc
enter
jg
ds
call
mov
xlat
mov
or
decb
enter
sbb
and
stos
cmp
imul
jo
add
mov
mov
jne
xchg
data16
jo
push
cld
hlt
mov
aaa
mov
js
mov
and
push
pop
aas
sbb
dec
jns
sbb
shlb
jb
popf
push
cmpsl
addl
sarb
sti
je
xchg
jne
inc
inc
int
data16
mov
fldenv
dec
pop
inc
hlt
xor
push
bound
fistps
jb
xor
sub
lret
mov
test
inc
xchg
xchg
aas
and
xor
sub
cld
push
fiaddl
dec
nop
aam
sbb
sbb
push
outsl
jl
lods
mov
push
mov
aas
sbb
insb
jmp
das
inc
mov
test
shlb
and
mov
mov
or
dec
pop
mov
es
mov
mov
dec
adcl
outsl
inc
mov
dec
inc
xor
push
sub
xor
pusha
loope
xor
std
add
insb
pop
loope
xchg
jne
in
push
out
mov
mov
addb
jb
jecxz,pt
jo
or
mov
lret
inc
scas
js
gs
arpl
aaa
in
into
rcll
sbb
push
shrl
jns
fadds
xchg
and
mov
jnp
popa
push
fisttpll
out
in
loope
mov
lock
out
loop
sbb
fsubrl
pop
cmp
repz
cmc
cs
outsb
pop
lods
fwait
insl
les
push
mov
popf
mov
mov
daa
popf
jmp
push
pop
repnz
mov
sbb
repnz
push
pop
ds
add
gs
push
lret
jne
rolb
cmp
adc
pusha
xor
js
push
cmp
fisttpl
add
mov
adc
push
enter
inc
dec
cmpsb
andl
mov
jecxz
fstps
jg,pn
repnz
adc
jno
pop
ja
jl
xchg
lea
lcall
mov
outsb
mov
adc
pop
or
in
adc
pop
dec
in
fwait
mov
dec
lock
subl
xor
or
mov
ss
or
mov
sti
fwait
xlat
add
push
pop
cmp
xor
inc
cwtl
cs
std
inc
mov
sbbl
mov
insl
xchg
cmp
test
xchg
adc
xchg
mov
push
fiadds
arpl
xchg
pop
xorl
rcl
jno
sub
jbe
repnz
movsl
push
pop
sbb
pop
rcrb
add
sub
sub
mov
out
push
or
les
pop
sahf
and
int3
adc
ja
fldpi
aaa
js
add
sbb
mov
pop
outsb
fcoml
bound
icebp
push
outsl
lds
std
outsb
mov
roll
pushl
mov
push
das
lret
lret
into
ja
or
outsb
rcr
jnp
fimuls
cli
adc
jb
in
lcall
mov
sub
mov
nop
xor
push
loope
jnp
inc
cmp
rol
mov
outsl
into
orl
mov
push
jo
in
mov
stos
xchg
nop
mov
pushaw
les
push
push
mov
insb
cmp
fnclex
cwtl
shlb
sub
jcxz
rcl
in
inc
test
jb
cltd
cmp
or
mov
cmp
test
add
or
mov
test
dec
adc
sbb
jle
scas
xchg
sub
and
push
fistpl
and
dec
sbb
inc
lods
lods
and
js
test
insb
imul
sbb
mov
pop
fdiv
push
jo
call
pop
adc
adc
pop
popf
shlb
xor
pop
pop
outsb
ss
out
sub
push
push
push
into
fsubrl
aas
or
mov
ret
ficoms
push
inc
js
cmp
div
dec
xor
rorl
xchg
or
mov
ss
pop
iret
jle
mov
in
xorb
das
or
add
js
sti
mov
pop
fs
add
fdivrl
xchg
mov
sbb
xchg
cwtl
divl
sbb
mov
sub
sub
or
sbb
jb
cmp
cmp
insb
repnz
add
daa
jnp
push
mov
cmpsb
or
pop
dec
paddsb
push
adc
fucomip
ficompl
cli
loopne
mov
jbe
mov
xchg
cmp
inc
enter
pop
push
jge
popa
pop
xchg
outsl
ffreep
mov
enter
enter
test
aaa
dec
out
into
faddl
inc
pop
sub
inc
mov
popf
out
or
into
bnd
ret
mov
pop
lret
cwtl
inc
rorb
lds
jne
lahf
enter
pop
cli
aam
clc
cli
aad
ret
hlt
sbb
pop
or
add
in
sub
inc
dec
stc
fs
sbbl
rcll
add
sbb
cltd
mov
cltd
mov
jmp
mov
and
adc
les
mov
jb
outsl
add
out
mov
dec
psubw
pop
mov
mov
gs
pop
lock
popf
cmp
xor
fst
sbb
out
push
je,pt
xchg
insb
repz
xlat
ffree
push
xchg
dec
add
clc
es
add
xor
xchg
cmp
xor
mov
jb
cs
fbld
jecxz
lods
jg
addr16
aam
jp
scas
aam
sahf
pop
shlb
decb
bound
sub
lcall
lcall
fdiv
aaa
repz
fcoml
push
push
sub
stos
sar
mov
mov
call
mov
xchg
cltd
cmp
lret
fcoms
dec
sbb
scas
push
sti
insl
mov
and
mov
sbb
rclb
data16
jmp
mov
inc
jle
ljmp
lcall
mov
mov
adc
adc
inc
sti
mov
rorb
jb
adc
sbb
push
in
add
fldcw
arpl
sub
pop
fisubl
dec
jmp
jno
jecxz
add
sbb
fmuls
inc
cmp
lods
repz
ds
xor
loopne
lods
lods
add
jge
fisttpl
sarl
mov
xor
mov
adc
or
out
add
jae
mov
or
dec
jns
adc
nop
jne
imul
fs
addr16
out
push
fdivl
jns
push
and
jb
cmpl
mov
loope
std
jge
orl
or
divb
rcr
cmp
scas
xor
gs
mov
mov
decl
xchg
in
rcrl
jbe
loopne
lret
add
jae
enter
cmpsl
out
xchg
inc
jmp
aad
pop
adc
sbb
push
mov
rorl
ds
dec
lahf
add
adcb
stc
sahf
icebp
fldl
xchg
dec
inc
loopne
mov
rorb
xor
or
dec
aad
lahf
icebp
dec
mov
movsb
sub
imul
nop
cmpsb
jbe
ret
ja
push
mov
sti
outsb
loop
cmpb
sub
pop
pop
and
jge
lods
rol
adc
shll
xchg
add
out
test
subb
cmp
cmpb
add
dec
mov
mov
popa
gs
out
inc
push
fs
push
add
cwtl
mov
ljmp
add
and
fs
pop
ljmp
xchg
adc
mov
dec
mov
sbbb
mov
ss
adcb
shlb
sbb
dec
push
dec
test
in
xor
inc
mov
popf
xchg
and
cmp
fcmovnbe
loopw
xor
pop
addr16
aas
ret
fildl
jge
and
ror
adc
dec
push
aas
lret
mov
xchg
adc
cmp
in
mov
xor
dec
dec
cmpl
sbb
adc
int
push
jno
pop
cmp
ret
popf
iret
sbb
jmp
insl
or
lret
push
jp
xor
lock
cmp
mov
push
pop
adcb
adc
pop
sbb
cmpsl
push
and
mov
lret
or
andb
ret
or
mov
pusha
je
test
add
add
pop
lds
stc
adc
adc
fistl
and
fistpll
jge
cmp
mov
pop
bound
addl
in
gs
sbb
subb
in
add
sub
sub
into
sbb
xor
or
roll
pop
int
xchg
xor
dec
mov
jnp
dec
nop
out
outsl
test
daa
sub
ljmp
out
dec
push
imul
adc
adc
push
pop
fdivl
inc
sbb
adc
sbb
mov
sbb
cltd
sub
mov
out
cmpsb
jmp
add
xchg
mov
lahf
outsl
xchg
int3
out
add
mov
push
jb
addb
cmpsl
mov
jns
outsl
idivb
mov
cmp
movsl
or
or
pop
xor
sub
repz
addr16
jno
dec
xor
sub
and
xchg
jno
add
jge
repnz
mov
inc
and
lds
xchg
fnstcw
dec
loop
idivl
pop
inc
xor
pop
push
imul
ret
mov
das
ja
jb
packsswb
pusha
sbb
xor
dec
pop
jno
outsl
dec
fs
adc
cmpsb
mov
aad
cs
lret
lahf
stos
es
pop
int3
jae
adc
mov
fidivrl
push
mov
xor
inc
xor
loop
outsb
addr16
push
mov
adc
mov
es
cwtl
cld
dec
fadds
sub
rcrb
pusha
adc
cmp
dec
cmc
mov
jno
sub
bound
adc
lea
mov
xor
inc
push
aam
test
cmpl
pop
mov
lock
adc
or
fmuls
xor
cld
add
or
ljmp
enter
daa
jg
andl
push
imul
icebp
xor
in
fwait
sbb
dec
loopne
js
jo
add
icebp
inc
adc
stos
add
int
jle
jns
pusha
mov
inc
cmpsl
or
das
fiadds
sbb
pop
jle
fldcw
stos
outsb
out
xor
addr16
lods
xor
jb
movsl
popa
repnz
sub
movntq
clc
push
aam
jl
sub
sbb
pop
sub
mov
pusha
sbb
shrb
je
mov
out
test
shrb
sbb
stos
pop
popf
rolb
adc
cmpsb
rorl
movsl
pop
lds
lea
jg
cmc
loope
fnstenv
cli
cmp
addb
incl
push
in
in
lods
mov
call
mov
dec
gs
popa
mov
outsb
out
push
mov
cmp
sbb
addr16
or
and
ds
inc
mov
test
adc
sbb
fdivrs
push
xlat
or
fcmove
sub
add
xchg
pop
hlt
inc
adc
jo
aaa
iret
inc
push
int
xchg
ret
div
cmpsb
scas
jo
mov
scas
pop
adc
xlat
mov
scas
js
hlt
rol
stos
in
xchg
xor
push
pop
xor
lds
stc
adc
mov
das
fs
xchg
ficompl
adc
lcall
cmc
out
sub
push
sbb
out
jmp
jle
pop
int3
push
mov
divl
mov
inc
mov
adc
les
xor
mov
dec
pop
push
int
pop
mov
cmc
pop
frstor
add
sbbl
push
push
loopne
aaa
push
inc
movsb
lcall
jle
push
mov
inc
dec
and
mov
cli
leave
mov
popa
xor
mov
mov
add
rolb
ror
mov
xchg
pop
xor
pushf
sub
push
push
mov
cmpsl
push
mov
pop
shlb
lahf
popa
mov
shl
sub
push
push
adc
mov
dec
cld
in
int3
mov
xor
cld
hlt
sub
mov
push
outsl
arpl
or
adc
insb
sbb
pop
leave
pop
push
add
add
xor
lea
enter
lds
pop
pop
xchg
adc
lret
xchg
inc
sub
jnp
movsl
into
pop
dec
sub
mov
cwtl
push
sub
cli
addb
sub
mov
es
mov
lock
pop
mov
push
cmp
jb
test
aad
mov
loop
mov
cld
xor
mov
sti
stos
dec
or
out
jb
dec
test
lods
add
jmp
push
jmp
mov
rorb
jbe
jp
lret
sub
add
sbb
mov
fst
pop
cmp
aas
scas
mov
and
jnp
inc
or
call
add
push
testb
in
movsl
dec
in
or
sbb
mov
lret
push
mov
cwtl
fldt
mov
cmpsb
mov
loop
xchg
sbb
xchg
cmp
lahf
xor
shlb
test
inc
and
add
mov
bound
jecxz
mull
jg
jge
leave
cmp
adc
arpl
ret
aad
sti
cmp
lock
jmp
lea
shlb
push
pop
je
decl
jbe
mov
shrb
cmc
dec
lds
or
cmp
out
decl
data16
mov
ja
mov
add
icebp
insb
xchg
inc
out
imul
sub
lods
and
mov
rcll
mov
into
je
sub
pop
les
test
mov
sbb
lock
and
sar
xchg
jmp
xlat
jbe
outsl
shr
bound
inc
mov
or
xchg
aas
mov
fists
loope
xor
and
mov
test
call
decl
bound
jne
in
jo
jno
push
mov
rcr
out
mov
mov
lea
mov
cli
jp
mov
leave
ja
addb
cld
mov
dec
xchg
add
inc
fimull
sub
imul
les
dec
leave
mov
and
xchg
mul
dec
lret
adc
dec
aam
or
sub
pop
sub
sub
rcl
out
nop
out
addr16
lods
ja
lock
lods
jmp
xchg
inc
dec
dec
stc
add
mov
ss
fwait
adc
insb
adc
pushf
mov
mov
mov
mov
sub
cmp
push
rolb
popa
push
icebp
mov
js
bound
mov
jnp
sbb
mov
mov
inc
insl
push
out
push
and
adc
push
pop
or
xlat
outsl
imul
imul
xor
sbb
and
subb
out
pushf
lret
into
pusha
sbb
jno
dec
dec
push
or
loopne
roll
jge
aaa
cs
sbb
jnp
inc
lods
insb
or
jl
fisubs
dec
adc
lds
sub
or
add
dec
shlb
xlat
push
popf
lds
rcrl
dec
pop
pop
lods
lcall
call
or
idiv
cmpsb
dec
es
arpl
call
dec
rolb
shll
fwait
pop
lea
cwtl
jo
xchg
loope
andl
mov
popa
scas
mov
insb
addr16
push
jg
xor
push
jmp
sbb
les
xor
mov
mov
push
repnz
lods
fiaddl
dec
xor
lods
push
dec
adc
js
dec
and
test
fdivs
outsw
sahf
xchg
mov
mov
jno
iret
rol
pop
into
push
mov
push
lahf
loop
xchg
cmp
out
xchg
and
imull
xor
mov
addr16
out
mov
rclb
repnz
dec
stc
pop
fidivrl
int3
daa
dec
loopne
roll
lods
mov
mov
loope
or
xor
arpl
mov
jnp
inc
shrb
incb
mov
int
imulb
xor
xor
lds
test
pop
jp
mov
fcoml
pushf
outsb
sub
xchg
sbb
loope
loopne
mov
xor
pop
aas
xor
hlt
rcrl
lcall
pushl
imul
mov
lahf
push
mov
mov
sub
inc
or
cli
xor
loopne
inc
call
cmp
aas
jo
cwtl
subb
inc
in
ja
push
aas
stos
scas
xor
lods
jle
mov
clc
xchg
mov
sub
mov
daa
xchg
das
orl
xchg
sbb
rcrb
aas
jmp
add
jmp
mov
test
pushf
dec
orb
inc
cmp
repnz
dec
jg
add
mov
ret
fucomi
rorl
mov
dec
rcl
pop
pop
cmp
mov
loop
xor
xchg
mov
lods
xchg
cltd
xchg
sbb
fimuls
mov
sbb
push
sub
fidivl
jae
xchg
pop
inc
inc
popf
jns
dec
outsl
movsb
xor
lahf
push
and
andb
mov
rcll
in
test
fnstenv
sti
mov
out
aad
popa
and
cwtl
dec
pop
imul
rep
jno
and
outsb
std
jmp
cli
in
enter
into
push
imul
mov
cmpl
push
add
jae
or
rcrl
arpl
push
test
jnp
pop
cmp
in
cmpsb
lahf
cs
cwtl
pop
push
bsf
xor
and
xor
in
insl
cmp
xchg
mov
cmp
movsl
push
lds
add
xchg
xor
mov
cmpsb
push
push
leave
push
mov
jb
pop
data16
pop
cltd
xlat
es
dec
pushf
dec
out
movsb
rolb
arpl
sub
dec
ljmp
sub
dec
adc
xchg
or
push
xor
push
push
and
inc
insl
repnz
mov
pop
push
jae
cmp
cmp
dec
int
inc
xlat
sbb
lock
pushf
scas
les
jo
insl
adc
sub
das
push
mov
movsl
push
icebp
push
cs
sbb
xorb
add
js
ja
cmp
push
mov
xchg
inc
repnz
rolb
inc
fldenv
jmp
inc
stos
test
mov
cmp
daa
jle
mov
scas
jno
scas
inc
popa
add
pop
inc
xor
or
pop
cmp
mov
xchg
push
push
mov
push
movsl
push
out
push
push
arpl
and
pop
pop
sub
scas
insl
lds
pop
mov
xor
push
into
push
adc
push
xor
jmp
in
mulb
pop
shrb
int3
sub
ret
and
out
pop
push
pop
lea
cltd
xor
enter
testl
fnstsw
les
fwait
push
rolb
and
and
cmp
pusha
dec
inc
lods
and
ss
outsl
and
adc
in
cmp
or
fsubrl
lcall
dec
cli
or
or
cmp
inc
or
inc
iret
aad
jecxz
adc
loop
adc
or
mov
mov
js
mov
push
test
lret
sub
pop
stos
add
dec
mov
and
xchg
dec
inc
imul
mov
stos
mov
aas
ret
icebp
mov
and
jne
pop
nop
andb
mov
jno
jnp
pop
push
sub
sbbb
loopne
and
push
cmp
adc
add
mov
lret
mov
popa
mov
jmp
insl
inc
push
mov
adc
repnz
jl
in
xchg
mov
in
adc
push
in
ljmp
jl
sbb
xchg
cmp
cli
and
outsw
leave
xor
or
cwtl
pop
cli
mov
aam
sub
shlb
xchg
inc
mov
dec
cmpsb
or
int
xor
xor
lods
ja
inc
cmp
daa
pop
aaa
imul
pop
mov
fwait
imull
cmpsl
or
ja
inc
cmp
daa
pop
aaa
imul
pop
mov
fwait
imull
cmpsl
or
ja
inc
cmp
daa
pop
aaa
imul
pop
mov
fwait
imull
cmpsl
fbstp
aas
arpl
jae
inc
cmp
daa
pop
aaa
jmp
sti
xlat
je
fs
add
mov
enter
call
mov
movsl
sbb
lods
sbb
in
mov
push
ljmp
popf
sub
sbb
push
jp
dec
in
inc
stos
add
lcall
fimull
add
sbb
push
jp
dec
sbb
cltd
push
clc
inc
sti
jne
sbb
aam
movsl
jae
sbb
cmpb
out
es
push
iret
cmp
loop
scas
add
xor
test
push
sub
test
fiadds
push
xchg
fdivrp
inc
lret
shr
aam
hlt
lret
lds
xchg
aaa
mov
and
cli
cmpl
fcmovne
stos
dec
cli
xchg
shrb
push
enter
aam
cmp
and
movsb
add
inc
and
ljmp
adc
push
pop
gs
sub
inc
repz
lods
jp
push
push
test
es
cmpsb
mov
adc
scas
test
pop
imul
in
mov
and
test
cmpsb
sub
sbb
push
jp
dec
pop
pop
out
xchg
mov
xor
lret
out
repz
or
sbb
or
push
je
inc
mov
cmp
sub
xchg
dec
or
sbb
xchg
ds
test
sti
add
jb
js
jg
inc
lds
dec
in
adc
mov
cli
jne
ficoml
or
jp
dec
in
adc
mov
cli
jne
ficoml
out
fcomps
lds
and
lret
shll
sbb
push
ret
out
adc
fnstsw
sbb
icebp
or
sub
enter
xchg
xor
mov
scas
xor
pushf
add
leave
mov
push
rcl
xchg
or
scas
inc
ja
pop
outsl
jne
cs
daa
dec
dec
pop
pop
pop
mov
xchg
xchg
sub
pop
shr
les
add
or
rcll
or
mov
adc
or
fcom
std
xlat
lret
fsubr
lcall
cmpsl
sbb
pusha
jg
mov
and
sbb
dec
xor
xor
cmp
jmp
gs
mov
mov
xchg
lret
xor
out
fistpll
pop
add
mov
push
loopne
sahf
pop
pop
mov
mov
jmp
std
stos
repz
clc
lods
cmp
mov
jl
lock
cmp
je
cmp
outsl
insl
xor
fnstsw
pop
mov
xchg
movsl
mov
jp
int3
push
sbb
lds
mov
xor
aaa
cmp
or
cwtl
in
cmpl
add
stos
pop
jp
mov
xchg
fists
lcall
andl
mov
loop
js
gs
out
sbbb
add
lret
out
out
cltd
mov
sti
scas
cmp
inc
jbe
cmc
clc
push
test
cmpsb
scas
sbb
pusha
add
pop
popa
mov
inc
or
adc
jne
mov
outsb
jmp
xchg
insb
fistpl
fcompl
cltd
pop
fldz
pop
lahf
repz
jge
fwait
and
andl
sub
push
jg
dec
jae
shl
sbb
repz
fists
push
icebp
jae
into
jns
outsl
mov
or
sbb
mov
inc
test
out
push
fsubs
sahf
or
test
jecxz
sti
sub
fucom
insl
rorb
imul
lcall
mov
test
dec
jle
mov
pop
adc
pop
lahf
lret
loop
ds
notl
jmp
ret
cmpsb
mov
std
sub
popf
push
cltd
mov
or
lods
in
scas
xchg
fwait
outsb
inc
sahf
fs
push
pop
pushf
insl
out
les
mov
dec
cmp
mov
das
adc
mov
push
push
pop
lock
lea
push
cmovle
f2xm1
sbb
nop
orl
pop
push
xor
xchg
cmp
or
xor
pusha
lods
push
mov
andb
rclb
iret
imul
pop
repz
mov
mov
cmp
imul
out
pop
das
icebp
idiv
adc
mov
and
xor
clc
fisubl
hlt
or
adc
aas
lods
in
xor
mov
inc
pop
je
mov
cmp
xchg
and
leave
pop
daa
les
in
dec
decl
stos
push
ds
and
pop
xchg
mov
push
pop
clc
mov
daa
push
xor
imul
push
adc
adc
add
dec
cmp
imul
ret
iret
scas
inc
push
arpl
pop
fidivrl
jb
pusha
xchg
out
int
xorb
or
fistl
push
pop
incl
loope
inc
and
jp
ss
lcall
xor
loopne
mov
add
shrb
movsb
jecxz
xor
mov
push
loop
xchg
in
sbb
xlat
stos
mov
test
loopne
lea
mov
sub
inc
das
sub
dec
or
and
cmp
scas
push
fidivs
fdivl
mov
xchg
sbb
mov
dec
out
cmp
sti
orb
pusha
or
ljmp
dec
inc
mov
push
sub
inc
clc
out
into
cmpsb
dec
imul
add
loop
mov
ds
call
repz
imul
loop
lahf
or
lahf
insl
dec
dec
lcall
test
xchg
aad
fldl
inc
dec
dec
add
jp
popa
jp
fidivs
or
mov
sbb
dec
jae
dec
out
mov
insb
mov
pop
cwtl
mov
xchg
mov
lret
mov
mov
addr16
mov
aas
xchg
xchg
aam
aad
sub
push
mov
add
mov
lods
ja
adc
adc
cmp
cmc
ja
fcoms
push
stos
test
jb
mov
jno
stos
mov
sub
jp
xchg
add
sub
add
jecxz
ljmp
add
adc
fcmovb
mov
xor
and
data16
pop
pop
mov
sbb
pop
xor
sbb
outsl
dec
sub
xchg
fistl
out
fwait
popf
out
sbb
sub
cwtl
adc
mov
push
adc
jg
push
inc
call
jle
mov
nop
lahf
adc
stos
arpl
movsl
sti
pop
outsl
js
loope
xchg
imul
adcl
adc
adc
adc
aam
xchg
add
add
xor
cmp
mov
lret
dec
cs
mov
xchg
mov
inc
in
hlt
sub
push
ja
cmp
aaa
cmp
jmp
int
jnp
cmpsl
adc
loope
inc
mov
lock
cld
jecxz
xchg
aam
outsb
int3
mov
shll
cmovs
xchg
dec
stc
jl
or
shrb
cli
mov
mov
sub
fists
rorb
sub
je
jne
clc
push
rorl
ret
adcb
xor
mov
jo
mov
aam
inc
aaa
jno
and
adc
loopne
pop
repnz
popf
xor
or
mov
xchg
jne
dec
mov
jg
out
cmp
pop
hlt
out
jmp
inc
xchg
adc
mov
int3
aaa
pop
mov
mov
ret
rcrb
outsb
in
or
std
xchg
pop
sbb
push
outsb
iret
mov
mov
mov
mov
inc
popa
scas
pop
mov
pop
or
pushf
in
adc
adc
test
fimuls
mov
push
mov
or
mov
scas
xchg
and
ja
pop
scas
repz
addr16
ja
xor
les
shlb
les
cmp
jbe
bswap
arpl
push
push
xchg
mov
sbb
push
orb
call
inc
stos
icebp
insb
fs
psubusb
insb
lods
js
imulb
cwtl
inc
pop
xchg
push
imul
push
nop
and
jns
mov
mov
mov
jle
dec
inc
stc
fbld
inc
lods
mov
mov
aas
mov
mov
mov
call
mov
cwtl
ja
mov
xor
jg
pop
xchg
cmp
sbb
mov
push
jno
addr16
pushl
xchg
dec
push
in
icebp
imul
or
dec
cmp
cmc
shlb
xorl
mov
mov
cli
sbbb
je
das
jge
js
dec
in
sahf
sbb
pusha
dec
lods
dec
insb
jno
mov
xchg
repnz
mov
dec
lea
cmpsl
test
pop
fldcw
mov
call
and
or
or
jl
push
sub
xor
push
jmp
mov
cmp
adc
je
out
jecxz
ret
and
call
ret
jne
clc
mov
movsl
testl
sub
lret
scas
sbb
push
ja
imul
subb
inc
push
or
dec
or
test
xchg
loope
push
mov
dec
xchg
gs
mov
hlt
mov
outsb
les
push
outsl
ds
je
test
sub
xchg
sbb
mov
scas
and
sbb
imulb
pop
mov
movsl
fldt
or
repz
lea
ret
and
mov
repz
dec
movb
aad
pop
dec
mov
test
pop
inc
adc
dec
sbb
xor
dec
sub
ficompl
roll
mov
insl
adc
sub
movsb
loop
adc
das
into
cmpsl
pop
cmp
pop
inc
ss
push
jge
mov
jns
push
xor
daa
iret
xlat
lret
into
test
mov
dec
cmp
xor
and
mov
pop
sub
pop
xor
out
call
push
mov
daa
xchg
pop
js
mov
test
add
fs
sub
bnd
popf
enter
mov
orl
adc
adc
mov
lret
setae
scas
mov
out
push
sub
xchg
sub
push
test
cld
iret
dec
xor
roll
ds
cld
nop
mov
inc
mov
repnz
mov
shlb
cltd
xchg
adc
clc
in
fistpll
leave
das
lahf
push
shl
and
enter
ss
and
sub
test
fcoms
mov
aas
dec
mov
fistps
cltd
jle
mov
sbb
pop
loopne
cmpsb
jle
mov
push
mov
cwtl
xchg
xor
mov
mov
xchg
fsubs
pop
arpl
xchg
in
adc
dec
cmp
cmp
inc
ret
sarb
dec
fldt
sbb
push
ds
xor
xchg
pop
lds
xorl
cwtl
dec
sti
in
stc
es
xchg
sbb
lea
test
outsl
inc
orb
into
xchg
mov
mov
mov
arpl
mov
arpl
jns
bswap
dec
cmp
movsl
sub
and
sarl
neg
ja
pop
repz
arpl
repz
cmpl
not
cmp
push
push
movsl
out
cmp
jbe
xor
jnp
xchg
add
out
jo
mull
jns
dec
mov
sbb
push
dec
and
out
loop
mov
ret
dec
mov
rcll
sub
loopne
mov
add
fcomps
push
adc
push
movsb
xchg
cmp
aaa
js
call
dec
or
push
scas
std
js
push
out
and
nop
push
mov
daa
cmp
negl
mov
mov
stos
adc
pop
inc
fucomp
mov
addr16
mov
jne
jns
int
arpl
or
pop
jl
jae
loope
test
cmpb
xor
out
push
fisttpl
rol
incl
js
mov
bound
andb
cmp
xchg
in
ficoms
fsubl
push
imul
cmpsb
popa
test
mov
dec
pop
jecxz
push
hlt
icebp
das
aaa
mov
xchg
push
ds
add
mov
dec
ljmp
loope
jno
stos
pop
rcrb
negb
inc
sub
ja
pop
fsubl
jp
xchg
add
les
push
ret
pop
cld
test
out
jge
std
push
int
jnp
dec
or
cli
or
out
lods
cmp
xor
mov
and
push
mov
out
pop
test
sbb
std
inc
lds
lods
mov
jl
ror
and
add
out
ret
mov
movsb
push
jl
push
cld
add
out
outsb
mov
lods
mull
pusha
jl
pop
mov
push
cmpsb
or
das
js
push
jg
push
jecxz
aam
pop
fbstp
int3
mov
data16
out
insb
sbb
mov
cmc
ljmp
test
cld
rclb
dec
mov
fistps
jo
in
stos
addr16
stc
adc
dec
add
aam
icebp
loope
jne
sub
xor
add
add
rcrb
push
into
cmc
cmp
jmp
push
test
std
js
cmp
ficoms
add
lods
mov
imul
push
bnd
std
or
mov
lds
dec
popf
cmc
jle
fwait
mov
ds
adc
out
movsl
in
leave
sbb
push
or
mov
cwtl
xor
sub
adcb
sti
hlt
mov
ror
mov
popf
pop
cmp
orb
cmpsb
and
repz
cmp
out
push
sbb
cs
mov
sbb
in
fwait
mov
cmp
jns
mov
aad
mov
popf
pop
int
or
mov
jb
repz
jns
mov
loop
dec
mov
lcall
je
and
add
int
push
xchg
outsb
mov
add
sub
es
stos
pop
or
mov
stos
rorl
les
gs
xchg
xchg
fdivp
cmp
dec
cmp
cld
sbb
pop
mov
mov
addl
dec
imul
or
mov
cmp
adc
enter
and
loopne
clc
mov
bound
sub
mov
or
ds
ljmp
mov
loop
adc
mov
mov
orl
xchg
int
imul
ffreep
cld
int3
push
jmp
cwtl
inc
test
mov
lods
out
jnp
pop
dec
mov
lods
lret
push
jnp
movsl
sub
pop
imul
lods
mov
lods
add
int
mull
sti
xchg
inc
scas
push
jl
call
test
mov
xchg
xchg
inc
idivb
fcoml
xchg
fisubl
pop
outsb
mov
je
lods
sbb
mov
dec
addr16
test
aam
repz
push
pop
push
xchg
inc
push
into
jle
xchg
and
jmp
mov
fsubs
push
xchg
lret
scas
xor
dec
xlat
or
ss
mov
inc
cmpsb
in
xor
dec
leave
insl
push
adc
inc
mov
and
rclb
sbb
outsb
inc
and
rcrb
cmp
adc
vpackuswb
outsb
cwtl
sbb
mov
xlat
lods
mov
in
lods
xlat
aad
jge
sbb
sub
out
das
and
cmp
dec
xchg
dec
bound
sub
fdiv
xchg
or
pop
xor
jp
ds
fcomps
or
lds
cmc
nop
enter
push
repz
and
scas
hlt
ret
xor
xor
xor
push
mov
dec
xlat
test
inc
dec
mov
fwait
push
lea
fldl
ja
jnp
data16
push
xorb
jg
adc
stc
mull
add
cmpsl
enter
xchg
outsb
jb
test
dec
mov
les
and
xor
int3
movsb
push
ss
xchg
fidivs
jg
pop
dec
pop
pop
fsubrs
lock
ds
lea
sbb
out
pushf
lahf
adc
adc
cmp
mov
adc
test
jmp
aas
or
and
les
xchg
stos
pop
pop
dec
add
pop
cmpsb
ret
or
mov
dec
jns
mov
mov
xchg
inc
ljmp
stc
mov
mov
xchg
fs
sysexit
dec
jae
repnz
xchg
jecxz
inc
out
jmp
pusha
or
lret
xor
push
mov
lds
mov
les
out
add
push
jbe
insb
and
mov
mov
inc
inc
jb
lret
test
dec
mov
cmpsl
aaa
dec
pop
fstpl
inc
and
xor
and
icebp
insl
ss
sahf
mov
hlt
mov
jle
xchg
dec
iret
lret
pop
je
adc
imulb
movb
outsl
sub
mov
xchg
mov
jae
jbe
icebp
mov
test
jp
push
fstps
dec
xor
xchg
pushf
clc
dec
fbld
call
in
aam
xchg
mov
insb
jbe
es
call
out
std
dec
mov
mov
iret
cld
mov
mov
sbb
push
xchg
in
and
loope
pop
lret
cmp
mov
mov
push
xchg
into
jl
sti
cmp
mov
popf
adc
into
stc
dec
roll
add
xor
aaa
hlt
shlb
fcmovu
std
imulb
ficoms
push
mov
xchg
push
stc
cmp
xor
aam
cmp
ret
jge
dec
pop
out
ljmp
xchg
cmp
xchg
mov
jae
out
jnp
mov
dec
mov
adc
popf
in
sbb
sub
out
pop
push
add
lock
add
repz
sub
sarb
lcall
adc
push
orl
jbe
mov
add
jne
sub
mov
sbb
test
lock
xor
adc
xchg
aaa
leave
jbe
mov
jae
lock
loop
pop
and
in
pop
fsts
mov
loop
cmp
sub
lcall
xor
ss
or
hlt
subl
xchg
mov
sbb
rorl
lcall
loope
js
inc
cmp
jecxz
xchg
popf
mov
push
fwait
add
jp
mov
cmp
lods
add
je
xchg
dec
ss
in
lret
and
sub
jo
lahf
outsl
jecxz
repnz
cmpsb
or
ds
leave
inc
jo
jne
mov
sti
xchg
mov
loop
xchg
and
sti
imul
loop
aaa
sti
lods
inc
ja
fsts
xchg
pop
push
in
mov
lahf
test
nop
shlb
out
xor
incl
jno
rcll
inc
imul
cmc
xor
pop
lret
xorl
shlb
push
sarb
rcr
pop
out
sub
and
daa
movb
xchg
jno
int
daa
lods
insb
insb
pop
pushf
divb
mov
add
int
add
jg
out
cmp
pop
cli
jns
push
ret
xchg
mov
mov
pop
fidivrl
daa
adc
or
sub
lcall
insl
sbbl
fwait
mov
movsb
pop
outsb
sub
cld
ret
jae
lcall
lock
inc
inc
jp,pt
aas
rcl
adc
test
test
jle
lds
outsl
mov
icebp
adc
jns
sub
arpl
xor
pop
sbb
testl
inc
js
sub
aaa
xor
sub
stos
lods
mov
test
pop
inc
fdivl
mov
sub
icebp
ret
sahf
inc
ja
xchg
nop
and
fbstp
imul
mov
movsl
adc
data16
adc
fldenv
jge
data16
sbb
add
ss
adc
lret
arpl
sbb
cwtl
sub
xchg
adc
cli
and
popf
mov
push
inc
inc
mov
fwait
xor
dec
push
jle
pop
pop
push
adc
lahf
lret
add
xchg
popf
add
jmp
adc
imul
jnp
std
addl
xor
dec
sbb
ja
cmp
decb
sub
mov
push
xor
add
popa
ljmp
add
addr16
scas
js
jne
jecxz
fsub
xor
push
dec
cld
mov
cmp
push
mov
pop
shrb
cmp
add
ds
xchg
sbb
and
cmpsb
adc
icebp
inc
and
xor
out
push
int3
mov
pop
push
mov
outsl
mov
push
sub
test
sbbl
outsb
lret
pop
inc
sarl
faddl
push
push
adc
jl
das
lcall
mov
jecxz
pop
pop
fdivr
idivb
rolb
cmp
xchg
imull
loope
mov
cmc
incb
int3
sub
mov
xchg
xor
push
arpl
jns
inc
mov
jns
sub
sahf
lcall
mov
cld
fcomps
ficoms
jle
in
or
fnstcw
pop
icebp
addb
push
insb
inc
out
stc
pushf
push
cwtl
mov
lock
dec
push
push
and
out
aad
das
push
in
scas
movsb
cmp
lret
push
popf
add
sbb
cmpsl
clc
into
out
xchg
mov
sub
push
mov
rcl
out
push
push
fwait
pop
fisubrl
hlt
inc
loop
inc
sarl
mov
add
je
cmp
ficoml
mov
sbb
je
mov
add
aam
lds
pop
push
xlat
dec
inc
and
push
jbe
in
mov
aaa
mov
cmc
and
xchg
stos
jns
jnp
xor
lea
pop
clc
mov
adc
pop
jbe
or
xor
or
stos
jp
mov
push
mov
shrl
hlt
sub
out
adc
rcrl
cmpsl
xchg
bound
ret
aam
stos
cwtl
movsb
enter
icebp
sbb
mov
cmp
add
or
mov
mov
xchg
xchg
into
das
jne
stos
dec
jecxz
dec
adc
daa
add
testl
aad
xchg
cmp
lods
push
cmpsb
and
movsb
popa
dec
dec
jb
hlt
pop
xchg
pop
ret
lods
cmp
out
pop
sub
pop
dec
jb
fistpll
xchg
inc
mov
push
fxch
imul
push
pop
inc
icebp
stos
adcl
mov
test
loopne
dec
jle
push
cmp
dec
mov
ret
jecxz
sbb
cwtl
orl
data16
lret
repnz
das
sahf
fcmovnu
lcall
sbb
push
jp
dec
in
adc
mov
cli
jne
ficoml
or
jp
dec
in
adc
mov
cli
jne
ficoml
or
jp
dec
in
adc
and
jno
push
fimull
or
jp
dec
gs
adc
mov
add
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
or
mov
sbb
stos
and
push
fisttpll
pop
add
add
add
add
add
add
push
inc
add
add
nop
add
add
add
add
add
jmp
pushf
add
add
lret
add
add
and
filds
stos
add
add
xlat
add
add
add
inc
add
add
add
add
add
jg
sbb
dec
add
add
pop
add
add
add
add
and
add
pop
add
out
add
xchg
add
add
add
ja
ja
filds
ret
add
push
mov
dec
add
pop
add
add
add
add
add
add
add
add
sbb
add
add
add
stos
add
add
ja
mov
add
add
add
add
add
popl
pop
add
add
add
pop
add
dec
add
add
add
pop
add
add
add
movl
pop
add
mov
cmp
add
jne
movl
mov
xor
hlt
add
add
add
add
add
add
pop
add
and
pop
add
add
inc
add
add
add
ja
add
cmp
or
cmp
pop
add
add
add
mov
and
sub
jle
and
aam
xchg
add
faddl
jo
mov
add
add
add
add
add
in
add
mov
mov
pop
add
xlat
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
mov
add
cmp
ja
out
add
add
pop
add
add
pop
mov
add
add
add
add
add
mov
stos
add
add
add
add
add
repz
add
add
pop
add
jae
scas
add
add
inc
add
dec
add
add
mov
add
add
xor
add
add
xor
add
add
add
add
jne
pushf
add
add
add
add
mov
add
add
add
add
pop
add
add
scas
add
outsl
add
add
add
pop
add
inc
add
add
testb
add
stos
add
add
add
pop
add
add
add
add
ja
in
add
add
add
add
ljmp
add
add
add
add
add
add
mov
add
ja
pop
add
dec
add
sbb
jbe
jmp
xor
adc
add
mov
add
and
dec
add
ja
rolb
add
add
stos
add
add
add
inc
add
add
add
dec
add
sbb
fiaddl
dec
add
add
add
and
test
test
ljmp
add
sub
jl
cmp
mov
xchg
dec
stos
lods
ss
mov
cs
adc
push
sahf
add
lahf
adc
xor
sbb
dec
cmp
xchg
mov
and
jne
xlat
pop
inc
aam
mov
rcl
js
aaa
mov
add
dec
psllw
push
clc
push
push
psubsw
fldl
test
test
sbb
loopw
add
mov
filds
and
aam
push
jnp
fimuls
jne
mov
cltd
xor
xor
sub
call
clc
push
jnp
jecxz
xor
xlat
popa
push
and
aad
rorb
int3
xchg
push
dec
gs
lock
cmp
into
cmp
adc
movl
les
out
push
inc
cmp
jbe
xlat
lock
mov
shl
or
pusha
mov
in
nop
lods
arpl
aam
jle
out
or
sub
int3
repnz
repnz
enter
cs
pop
fcmovu
xchg
aam
jecxz
dec
int
pop
rcrl
add
pop
add
fucomi
jp
repz
les
jb
mov
add
dec
pop
std
cmp
cmp
popa
cld
in
imul
add
cli
pop
cltd
xchg
ja
lods
mov
nop
push
js
iret
fsubrp
in
nop
pop
ja
cld
sbb
mov
cmpsl
cmpsl
into
out
adc
mov
and
sub
and
jb
call
pop
repz
add
sbb
out
cld
push
insb
inc
es
mov
enter
popa
mov
push
dec
aaa
filds
divl
test
loope
xchg
xlat
adcl
cmpb
jnp
or
or
mov
outsl
movsb
mov
lds
je
mov
mov
jp
jbe
or
es
and
push
dec
insb
or
rclb
add
mov
push
movsb
inc
push
push
sbb
repnz
imul
adc
jp
xor
pop
dec
inc
jae
mov
and
in
idivb
cmp
or
outsb
pop
hlt
mov
outsb
and
add
jb
fs
push
rcll
push
pop
inc
jnp
cmp
mov
leave
push
lret
jo
das
insl
mov
cmp
movsb
cmpsb
mov
xlat
fldl
cmpsl
xlat
movsl
jle
mov
mov
jnp
fwait
lret
push
mov
scas
mov
test
push
ffree
in
pop
mov
mov
sti
fsts
sahf
xchg
jecxz
pop
loop
and
xchg
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
