call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
testb
addr16
ja
es
clc
pop
mov
jbe
fcoml
inc
divl
andb
push
cmpsl
push
mov
inc
out
addr16
ja
pop
cmpsb
pop
xchg
daa
xchg
jbe
data16
push
out
inc
div
test
push
mov
loope
xchg
std
movb
aaa
cmpsb
pop
xchg
sub
inc
hlt
cmp
dec
icebp
arpl
push
push
xor
adc
sub
notb
dec
test
sbb
pop
arpl
mov
adc
mov
cmpsb
pushf
push
cmp
sub
xchg
daa
enter
cli
cmpsb
das
out
push
sarl
mov
cmp
xlat
fsubrs
xor
push
out
or
pop
imul
jo
inc
out
mov
adc
mov
test
sub
leave
xchg
data16
xchg
push
stos
ss
adc
in
adc
cmp
gs
flds
or
dec
cmpsl
je
push
in
push
xchg
and
popf
out
stos
rclb
xchg
cmp
out
adc
ja
pop
cmpsb
pop
xchg
daa
xchg
push
in
lret
ss
push
test
or
jp
push
test
test
cmpsl
push
inc
ds
aaa
shlb
jne
inc
ficoms
adc
sbb
dec
aam
adc
inc
aaa
enter
ret
xchg
xor
mov
or
pop
xchg
daa
xchg
jbe
data16
push
out
divl
xchg
xchg
push
cmpsl
push
mov
inc
out
addr16
ja
pop
cmpsb
pop
xchg
daa
xchg
jbe
data16
push
out
divl
xchg
xchg
push
cmpsl
push
mov
inc
ret
add
jmp
push
jge
jno
add
jg
mov
push
sub
decl
xchg
popa
cli
jmp
icebp
stos
div
pop
dec
lods
scas
or
and
faddl
ljmp
lahf
std
lret
pop
mov
or
sar
enter
dec
jge
popa
xor
outsb
stos
jae
test
out
mov
and
test
and
push
mov
popf
out
call
repz
fistpll
cmp
pop
andb
pop
xchg
xchg
push
mov
mov
and
add
cmc
pushf
mov
ds
push
sbb
jle
imul
and
iret
outsb
out
fucompp
mov
jno
test
mov
and
cmp
inc
scas
adc
fisttpll
adc
es
cmp
call
and
jae
sti
and
sub
mov
rorl
popa
js
lret
cmpsb
mov
xchg
fmul
jle
xor
test
push
aam
mov
sbb
and
push
ret
sub
subl
mov
lods
pushf
pusha
jecxz
in
mov
xor
and
dec
mov
lret
into
xchg
jno
mov
push
pusha
aas
out
or
stos
xlat
dec
pop
sbb
pop
rcrl
fwait
sarb
jns
adc
mov
popa
sbbl
imull
dec
icebp
out
arpl
ret
cmc
movsl
and
jns
cmp
in
xlat
mov
or
push
ljmp
jg
jne
sahf
xchg
cmp
gs
dec
outsl
mov
lcall
inc
dec
xchg
jno
and
or
aam
fsts
jmp
add
inc
adc
sbb
testl
lret
inc
insb
xor
nop
pop
popa
mov
push
or
mov
inc
pop
nop
xlat
inc
push
aam
movsb
cld
mov
enter
mov
mov
sbbb
mov
sarl
pop
jg
arpl
inc
or
lock
inc
jmp
mov
push
stc
in
enter
jb
clc
add
push
cmp
xor
in
cmpsl
popa
inc
sub
testb
int3
xor
pop
mov
scas
test
push
adc
jge
xchg
mov
jae
adc
leave
and
das
data16
pushf
out
mov
mov
mov
out
stc
outsl
decb
out
iret
sahf
jecxz
push
dec
test
push
pop
jns
icebp
jge
in
xchg
push
imul
dec
sub
jmp
mov
leave
test
cmp
pop
xor
xor
or
es
sub
cs
iret
xor
cmp
cmp
iret
cmp
xor
cmp
mov
cld
lcall
lcall
or
add
pop
stos
jne
test
roll
sub
pushf
push
sti
fwait
xchg
sub
adc
mov
mov
lret
sub
out
xor
shrb
loope
fldl
daa
sub
in
inc
mov
popa
mov
add
aas
lds
lods
mov
pop
andb
pop
mov
pusha
xchg
int
sub
jg
icebp
pusha
adc
dec
imul
sbb
stos
sbbb
stos
scas
jmp
push
loopne
mov
adc
inc
xchg
adc
mov
inc
cmpsb
inc
mov
movsb
minps
dec
sarb
lret
pop
add
mov
imul
mov
movsb
fiadds
push
mov
mov
lods
adc
fwait
dec
nop
ljmp
into
pushf
jecxz
rol
dec
jo
outsb
inc
pop
js
bnd
jl
xchg
adc
mov
xorb
imul
dec
jns
pop
push
sbb
int3
push
sbb
ja
in
and
cmp
dec
stc
enter
sarb
sbb
mov
insl
jp
and
xor
fwait
adc
les
or
push
pushf
inc
cmpsb
out
add
or
fisubl
cld
xchg
inc
sarl
andl
out
mov
rorb
push
mov
dec
cltd
popa
in
push
sub
add
pop
mov
sbb
daa
add
loop
or
mov
pop
pushf
xchg
fwait
sub
addr16
std
hlt
adc
scas
pop
fstpl
xor
jge
pusha
lock
js
pop
ja
or
pusha
cwtl
or
xor
push
mov
lahf
xor
push
addr16
insb
subl
adc
data16
cmpsl
test
mov
loopne
stos
xor
or
movsl
rcrb
out
stc
cmpsb
mov
mov
mov
add
adc
orb
test
repz
mov
andb
testl
xorb
movl
sub
and
ss
out
push
mov
dec
lds
and
cli
mov
iret
imul
addr16
leave
out
jo
cmp
aad
dec
pop
inc
jl
push
sbb
push
das
adc
les
arpl
cli
cli
stos
out
clc
push
cli
jnp
sbb
sub
popl
add
and
push
shrl
lret
mov
shll
lea
jg
out
pop
mov
fdivr
aad
pop
addr16
int3
xor
shrl
adc
jo
in
sbb
repz
push
push
repnz
loopne
cbtw
push
and
mov
and
orb
clc
dec
and
inc
pop
lret
aas
mov
mov
xor
sub
clc
xor
push
mov
pop
aad
mov
xchg
scas
xchg
sub
mov
in
lret
addr16
in
cmp
in
in
inc
ds
sbb
gs
aad
sub
loopne
pmulhw
adc
xor
aad
push
mov
push
loop
dec
adc
mov
jecxz
inc
call
mov
jg
mov
cltd
sbb
rcpps
pushf
mov
mov
stc
fld
loope
loopne
pop
xor
enter
jnp
push
pop
in
and
dec
icebp
xor
les
shr
dec
enter
mov
sbb
pop
int
jnp
mov
jb
loope
mov
push
hlt
or
in
jbe
pop
xchg
imul
sbb
mov
add
rorl
mov
sbb
jge
test
jno
js
or
loop
outsl
xchg
outsl
ss
adc
and
dec
js
jl
stos
iret
sahf
sbb
cltd
and
jns
insb
test
cmp
mov
in
or
push
xchg
mov
bound
std
pop
sarb
adc
nop
sbb
lds
mov
dec
imul
cmp
mov
lock
jmp
jns
dec
mov
and
loope
sub
daa
xchg
adc
div
cmp
and
sarl
push
les
insb
hlt
mov
pop
imul
adc
lahf
lods
aas
mov
xchg
dec
out
cmpsl
mov
rorl
xor
outsl
in
hlt
sysexit
aad
adc
hlt
or
sahf
add
xor
pop
pop
sub
inc
mov
mov
inc
int3
push
sub
rclb
pushf
jae
xor
mov
enter
and
loopne
add
xchg
xchg
xor
xchg
push
xchg
push
shlb
push
sub
mov
ds
mov
pop
fcomps
test
in
cmp
add
xor
mov
mov
sbb
fdivrs
and
addl
sbb
dec
add
mov
pop
mov
sub
xchg
add
lahf
push
add
jle
rcrl
xchg
mov
mov
hlt
mov
and
rorb
dec
push
test
inc
das
scas
mov
std
fldl
adc
ss
insl
scas
and
das
sub
push
outsl
push
sarl
dec
mov
ret
popa
stos
xor
les
push
sbb
pop
out
scas
push
loop
dec
fistpll
neg
adc
adc
fwait
push
inc
mov
inc
outsl
or
lds
xchg
or
xchg
insl
out
loop
mov
adc
sub
ret
jge
lds
and
or
mov
sbb
rolb
push
push
xor
mov
es
movb
push
pop
in
idivl
aam
dec
xchg
out
xchg
shll
lret
xchg
inc
outsb
adc
push
add
aam
xchg
subl
push
jmp
insl
bound
or
xchg
cs
dec
ret
sbb
push
sti
mov
movsl
int
cmp
loop
fstps
mov
cltd
lahf
pop
in
ljmp
inc
push
popf
and
jge
subb
dec
data16
scas
cmc
jmp
dec
pop
stos
insb
stos
push
insb
inc
shrb
stc
xchg
repz
fimull
ja
in
jge
not
adc
std
sbb
xchg
mov
jb
cmp
aas
les
xchg
pop
shr
shl
sbb
repnz
xor
fildll
adc
std
out
add
add
arpl
repz
jge
scas
repnz
rorl
or
mov
and
adc
rorl
mov
js
mov
out
dec
arpl
mov
les
mov
sarb
test
scas
jle
lods
pop
adc
movsl
ja
sub
jae
fdivl
int3
out
stos
sbb
sbb
shl
roll
mov
jns
cli
mov
jmp
subl
xchg
in
cmp
xchg
lcall
cmp
dec
cli
cmp
sbb
popa
ss
loopne
aad
mov
jnp
dec
xlat
gs
mov
dec
and
je
scas
ja
add
lahf
js
push
jbe
jmp
pslld
mov
jl
add
out
addr16
fnstcw
sub
popa
jo
ret
add
add
rclb
adc
adc
jo
lret
or
aas
dec
mov
xchg
mov
pop
fwait
pop
pop
and
fyl2x
leave
cmp
loope
jecxz
and
mov
xchg
sbb
and
xor
js
gs
pop
lods
aam
je
pop
mov
in
ja
enter
lock
jmp
inc
xor
cmp
sbb
stc
dec
cmp
sahf
sub
xor
cld
sti
and
imul
sti
loope
jmp
or
out
ds
sub
jns
pop
mov
das
or
adc
jle
push
cld
jno
mov
jp
mov
lods
into
push
cmp
out
notb
xorb
leave
out
lahf
sti
lcall
lods
push
sub
in
xor
adc
jmp
lcall
dec
or
xchg
inc
mov
mov
out
push
or
mov
mov
hlt
arpl
fiaddl
push
test
test
je
lret
xchg
sub
xchg
jns
pop
or
pop
idiv
vlddqu
xor
test
xor
fnstcw
push
push
or
out
add
dec
cmc
sbb
pop
iret
in
xchg
or
cmp
outsb
out
mov
jge
andb
mov
jne
cs
daa
ljmp
jb
mov
out
icebp
push
jl
imul
jecxz
xchg
add
adc
or
xchg
imul
jne
lea
dec
pop
dec
rclb
push
pusha
xchg
pop
pop
cmp
mov
mov
jb
mov
cmpl
popa
push
in
cmpsb
cwtl
pop
sbb
addl
aad
faddl
stc
sub
push
loopne
cmpsb
or
jne
js
dec
fistl
mov
mov
inc
add
test
xor
add
outsb
mov
jecxz
lahf
pop
cli
shr
pop
mov
fwait
adc
sub
stos
repnz
in
adc
cmpsl
push
cmpsl
fildl
sub
mov
std
push
loope
fdivrl
repz
fs
mov
aad
test
xchg
add
xchg
arpl
js
dec
pop
push
mov
cmc
addb
fidivrl
sbb
daa
lcall
lret
dec
and
or
flds
xchg
jle
inc
ficomps
or
in
int3
push
inc
sbb
cwtl
dec
add
mov
push
loop
into
or
jle
push
in
xchg
pop
shr
pushf
pop
mov
ljmp
cmpsl
lock
fs
mov
sti
fistpl
push
cmp
frstor
mov
sub
fimuls
gs
lret
or
das
into
out
pop
ret
push
lds
mulb
loopne
jge
ds
rclb
lret
add
sub
mov
mov
repz
cld
dec
pop
repz
jecxz
fsubl
push
mov
into
sbb
enter
mov
jg
iret
mov
jp
aam
and
in
out
arpl
cmp
pop
push
fists
rcrl
ss
faddp
ret
loop
push
cmp
lahf
test
mov
rorl
fs
push
jbe
data16
adc
jne
int
stos
mov
inc
adc
ja
jae
mov
pop
push
mov
mul
cmp
in
adc
jns
mov
add
popf
xor
int3
outsl
adc
add
mov
sbb
cmpsl
in
add
ficoml
adc
jbe
xchg
scas
fstl
xchg
cmp
loopne
ret
into
imul
in
fdivs
movsb
mov
stos
adc
cs
adc
xor
xor
pushf
sub
jnp
sbb
cmp
mov
mov
pop
repnz
adcl
mov
mov
jns
pop
insb
pop
testl
les
push
lock
push
js
mov
scas
or
and
sarb
sar
cltd
and
repz
jb
sub
imul
iret
subb
outsb
ja
pusha
decb
xor
inc
das
pop
cmpsl
mov
jmp
sbb
ds
jne
or
adc
and
bnd
sbb
jl
enter
xor
fstp
aaa
cmpsl
xchg
mov
fdivs
stc
add
cmp
call
cs
push
stos
mov
add
ret
incl
insl
dec
cmp
inc
jne
idivb
and
cmp
or
iret
jno
arpl
mov
std
inc
loop
adc
ja
xchg
xchg
cli
lea
fwait
popa
sbb
jge
xchg
int
xchg
scas
std
mov
xor
in
add
dec
mov
xor
fistl
add
and
push
mov
outsb
mov
mov
stc
push
movsb
in
dec
and
jmp
push
inc
call
mov
ret
les
jns
xchg
cltd
hlt
icebp
repz
mov
rorl
inc
xchg
fs
push
ret
jecxz
push
mov
xchg
mov
cmp
mov
out
sbb
inc
lcall
ret
cld
mov
mov
rcll
jl
ret
fstps
push
dec
mov
dec
int
mov
mov
cmp
and
lods
cmpsb
fisttpll
test
loop
ret
pop
cli
inc
repz
popf
push
inc
cmp
pop
enter
dec
enter
inc
jmp
mov
push
jno
jnp
and
mov
lods
aam
fildl
repz
pop
pop
movsb
pop
rorl
mov
sub
xor
cmc
ljmp
icebp
outsl
push
leave
cltd
sbb
out
sub
adc
cmpb
aaa
fucom
pop
rclb
push
and
pushf
sbb
xor
arpl
add
subb
jl
lcall
pop
xchg
push
das
dec
mov
lret
sbb
and
jge
push
mov
mov
and
dec
test
addr16
or
sbb
test
adc
insl
testl
fcompl
mov
fsts
insb
loop
pop
cmp
aaa
sbb
dec
inc
push
enter
mov
insl
repnz
or
aaa
cmc
fists
pop
mov
insb
and
cli
add
pop
outsb
out
push
loope
jae
cmc
mov
aas
jnp
jge
popa
pop
aaa
or
adc
or
push
dec
mov
jl
dec
mov
test
add
or
xchg
les
jbe
cmp
push
fwait
lcall
notl
pop
ljmp
daa
dec
push
adc
sbb
mov
push
clc
outsb
rolb
push
scas
adc
fwait
xchg
mov
jecxz
jnp
dec
mov
mov
add
push
mov
test
jb
and
adc
inc
pop
or
call
fiadds
daa
mov
aaa
jo
rolb
sub
mov
fsubrl
cmc
int
ds
js
test
jo
cmp
int
mov
les
cmpsl
subl
adc
mov
adc
jae
sbb
lret
outsb
mov
fisubrl
adc
rolb
mov
mov
xor
jbe
pop
or
ds
and
sub
sub
pop
sbb
sub
jns
push
and
std
mov
mov
mov
jno
dec
or
inc
ja
cmp
pop
movsl
fdecstp
sub
jns
push
movsl
and
push
xchg
call
in
repnz
inc
push
sub
stos
mov
mov
insl
outsb
and
bnd
mov
jbe
dec
mov
xchg
addr16
test
ror
pop
xchg
adc
lds
cmp
add
aam
and
outsl
into
jne
xlat
or
divb
or
pop
push
stos
dec
fs
xor
and
inc
test
out
xchg
daa
push
jle
xor
call
xorb
adc
xlat
inc
js
es
movsl
inc
or
cld
xorl
repnz
dec
mov
outsb
fimuls
adc
xchg
outsl
int3
in
aaa
inc
mov
int3
and
pop
lahf
pushf
xor
test
call
xor
add
test
xchg
bound
cli
insl
adc
mov
aam
or
mov
je
push
and
outsl
aam
add
push
nop
xchg
ss
aaa
push
add
jnp
pop
mov
insb
rclb
xchg
ret
add
push
cld
mov
pusha
pop
cmp
arpl
jbe
int3
adc
pusha
jo
shlb
jmp
outsl
lock
adc
test
push
jne
lods
aam
andb
addr16
dec
dec
repz
imul
or
sarl
push
lods
adc
sub
mov
and
cmp
cli
dec
jecxz
in
cli
fincstp
mov
aam
sub
or
fmul
fcmove
add
push
mov
sbbb
ret
push
leave
dec
enter
ss
leave
in
xor
and
sbb
jmp
push
insb
fsubrl
punpckldq
ficoms
pop
imul
frstor
pop
dec
xchg
clc
pop
inc
pop
mov
iret
mov
fwait
test
jb
inc
push
repz
lret
movsl
mov
adc
xor
inc
ljmp
repz
sbb
xchg
xor
jg
shlb
add
hlt
cmc
sub
cltd
xchg
adc
fcomps
push
jae
test
push
add
push
sti
into
daa
mov
cmp
in
pop
push
divl
mov
sbb
out
test
pop
or
subb
xchg
jle
in
jecxz
ds
loopne
xor
je
jle
imul
sti
mov
jns
lods
fidivs
push
clc
mov
push
movsb
out
jo
loop
movb
dec
pop
inc
jle
push
xorb
jl
jae
cld
fwait
ja
or
imul
sti
hlt
rolb
aaa
mov
push
adc
lods
popf
xor
test
ficompl
jmp
xor
push
test
inc
clc
les
mov
and
sub
or
cmp
mov
dec
sti
inc
sub
xchg
push
xchg
in
jnp
xchg
bound
sub
mov
push
mov
scas
mov
push
fs
mov
adc
cmp
ror
mov
lret
dec
nop
jge
imul
pop
dec
movl
or
sub
out
mov
js
mov
mov
sub
dec
test
test
mov
data16
pusha
add
mov
push
fists
scas
cmp
out
adc
rcrb
loop
lds
adc
je
add
add
lcall
lret
xlat
ja
pop
cmpsb
pop
xchg
daa
xchg
jbe
data16
push
out
divl
xchg
xchg
push
cmpsl
push
mov
inc
out
addr16
ja
pop
cmpsb
pop
xchg
daa
xchg
jbe
data16
push
out
divl
xchg
xchg
push
cmpsl
push
mov
inc
pop
push
jg
jae
pop
cmpsb
jl
and
aaa
jbe
rclw
inc
andl
push
scas
push
push
mulb
aaa
mov
cmpsb
pop
xchg
cmpsl
xchg
jbe
data16
out
addb
out
data16
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
and
xor
add
adc
imul
in
xchg
pop
cmpsb
mov
jbe
data16
repnz
ret
es
xor
add
adc
bound
push
fisubs
jbe
data16
repz
ret
es
xor
add
adc
bound
push
cmpsb
mov
add
pop
loop
adcl
movsl
push
popl
sahf
jnp
insl
mov
subl
cltd
xor
push
jns
sub
int
std
stos
out
arpl
jb
mov
and
mov
mov
repnz
xchg
xorl
pop
lret
push
sahf
mov
repz
cmpsl
lret
xchg
das
pop
ss
jns
inc
mov
sahf
and
adc
xchg
fcoml
push
test
insl
xchg
cmp
daa
jno
mov
xchg
push
movsbl
flds
jns
jb
cmp
push
lret
out
cmpsb
dec
xchg
stc
dec
out
inc
jecxz
inc
notl
push
push
mov
xor
xor
add
adc
bound
push
cmpsb
mov
jbe
data16
repnz
ret
dec
inc
rclb
inc
notb
repz
repnz
xlat
inc
icebp
adc
adc
arpl
mov
mov
pop
cli
cmp
pop
fists
ret
aad
jmp
xchg
pop
stos
pusha
mov
mov
andl
jb
inc
mov
cmpsb
mov
jbe
data16
repnz
ret
es
xor
add
adc
bound
push
cmpsb
mov
jbe
data16
repnz
ret
es
push
scas
lahf
sbb
mov
subb
int
adc
incl
lret
enter
mov
mov
mov
and
lds
outsb
lahf
mov
lock
push
jecxz
mov
or
leave
leave
inc
or
or
out
movsb
xchg
mov
in
enter
mov
shll
and
shlb
dec
addb
test
push
inc
sbb
pop
adc
cmpb
push
pop
sahf
mov
loopne
dec
or
stos
jnp
and
mov
rcll
out
xor
repz
mov
dec
sbb
jp
mov
incb
sub
hlt
jmp
add
add
flds
sbb
leave
sarb
pop
jge
iret
fcoml
iret
lahf
aam
pop
jmp
nop
cmp
add
out
push
mov
insl
xor
rcll
out
mov
out
fsubrl
add
data16
inc
fwait
cmpsl
jae
je
or
shlb
scas
push
cmpb
or
lahf
mulb
cmp
rorl
js
push
push
cwtl
scas
xor
push
mov
jne
sub
push
gs
pushf
and
mov
fbstp
mov
je
scas
sbb
mov
xchg
adc
ja
lcall
and
pop
dec
mov
mov
and
pop
daa
bound
mov
gs
daa
out
sub
xchg
xor
cmpsl
mov
scas
add
xchg
enter
sar
enter
aam
jno
fwait
push
mov
cli
pop
nopl
and
cmp
lea
add
jl
sbb
push
sbb
jne
sbb
outsb
call
sbb
jbe
ret
lcall
aam
mov
ret
out
pop
mov
push
jo
cmpsb
repnz
pop
out
dec
fstpl
loopne
lcall
int3
jp
imul
fs
push
adc
cmp
xor
and
mov
add
movsl
lcall
fcmovnb
mov
adc
pop
idiv
sbb
ds
loope
mov
adc
and
or
mov
loopne
int
inc
jge
mov
andl
cmp
shr
pop
inc
adc
movsl
fistl
repnz
stc
adc
mov
dec
mov
movaps
xchg
jbe
dec
sahf
and
insl
js
sti
xor
jle
pop
ss
push
add
lds
sbb
vsqrtsd
xlat
mov
mov
adc
mov
ss
and
clc
adc
add
xor
stos
push
adc
shrb
mov
xor
sbb
sbb
push
mov
adc
shl
dec
push
pop
lahf
push
adc
scas
inc
int
cmpsl
jle
cltd
cmp
adc
xchg
mov
push
test
dec
xchg
mov
xchg
inc
loopne
movsl
sti
rcrb
call
repz
or
mov
xchg
lods
cmpsl
jb
sbb
ret
iret
lock
sub
imul
jb
test
mov
mov
push
xlat
sub
test
add
pushf
push
test
adc
push
mov
pop
js
cli
mov
int3
xor
cmp
mov
push
rcrl
vlddqu
or
adc
hlt
je
xchg
or
cmpsl
push
xchg
outsl
xor
test
gs
jecxz
je
int
mov
sub
pop
and
jno
adcb
and
dec
jle
scas
mov
or
pop
test
repnz
cmp
test
xchg
test
sub
adc
in
jl
xchg
cmp
or
test
popa
pop
movsb
mov
loopne
bound
fbld
xor
and
mov
mov
jge
nop
cld
pop
ja
pop
fs
sbb
adc
xchg
mov
out
mov
and
xchg
mov
xchg
jle
loope
push
sub
jecxz
stos
mov
xchg
dec
add
xlat
mov
decl
push
mov
es
out
cmp
mov
xchg
push
push
mov
adc
neg
mov
rclb
dec
clc
dec
and
les
mov
push
push
xchg
stc
data16
fidivl
imul
insb
repnz
xor
lret
int
aad
in
sbb
xor
sbb
in
xlat
sarl
insb
sbb
out
addr16
js
mov
cmp
std
sar
shl
outsb
cli
aas
adc
pop
add
inc
cld
out
aas
or
call
sub
std
mov
in
repz
sarb
adc
sbb
dec
adc
ljmp
adc
push
or
and
int
xchg
shll
outsb
movsl
adc
xor
cmp
outsl
jo
stos
icebp
mov
xchg
xchg
repz
sub
xor
movsb
sbb
jo
faddl
mov
jb
out
push
dec
imul
imul
cmp
insb
data16
mov
or
mov
ja
lahf
jge
jne
fimuls
add
mov
sbb
xor
mov
frstor
imul
hlt
cmp
rolb
inc
pop
std
jmp
lock
test
imul
fcmovnu
jns
jbe
lret
imul
pop
jge
add
out
sahf
sub
ds
sbb
mov
mov
mov
cmp
adc
adcl
mov
fcoml
in
aas
sbb
loop
shll
out
add
push
cs
jb
out
sub
xchg
jmp
mov
jno
push
lods
idivb
fdivrs
sbb
sti
jge
sahf
in
fisubrl
mov
gs
jl
insl
int
and
jmp
gs
mov
jl
mov
and
sub
mov
inc
aad
daa
push
xchg
xor
popa
mov
jo
icebp
pusha
stc
or
mov
ljmp
add
das
mov
xchg
jle
dec
mov
sub
or
add
lcallw
shrb
mov
enter
rolb
xchg
pop
adc
dec
adc
xchg
addr16
dec
xchg
pop
imulb
mov
fwait
ret
sbb
inc
rolb
sar
insl
movsb
or
pop
xchg
adc
add
jmp
aad
pop
lods
sbb
cmpb
imul
ss
icebp
stc
icebp
jmp
push
call
inc
das
mov
loopne
into
lret
pop
cmp
out
filds
push
and
insb
rclb
mov
jb
daa
inc
xchg
lea
cmp
icebp
fs
in
imul
stc
arpl
arpl
ds
stos
scas
cltd
mov
dec
or
jb
jle
cld
add
mov
ljmp
dec
xor
es
lea
or
jae
icebp
sbb
in
stos
sub
out
cs
js
xor
push
fdivs
aam
test
loop
dec
movl
je
adc
cli
fnsave
add
pop
mov
push
xlat
mov
sbb
pop
or
daa
movsb
mov
icebp
ja
daa
fwait
and
cltd
adc
jmp
aas
aam
daa
into
mov
js
and
scas
add
cmp
jecxz
lods
aad
pop
rolb
andl
mov
sub
cmp
aas
shrl
xchg
and
inc
outsb
dec
lret
clc
sub
roll
jmp
cld
daa
mov
iret
clc
inc
add
mov
cmp
lret
jno
iret
jno
stc
scas
sar
jle
mov
lea
cwtl
mov
daa
jne
add
repz
adc
repz
iret
outsl
pop
inc
ret
lahf
lods
cmp
jmp
es
inc
imul
in
arpl
pop
cmp
aaa
cmp
ss
insb
test
fdivrl
je
jg
jle
inc
mov
mov
add
add
sarl
pop
sbb
sbb
jecxz
jle
push
in
sub
sbb
ljmp
and
sti
push
xlat
lods
sbb
out
popa
pusha
jp
cmp
cld
stc
push
enter
cmpsl
out
in
cmp
jecxz
mov
loopne
dec
stos
mov
or
push
loop
jp
test
test
mov
sbb
or
xchg
icebp
or
pop
xor
push
imul
cmp
inc
cmp
inc
pop
lods
pushf
xor
ss
test
xchg
sbb
dec
or
aad
addr16
xor
or
xor
fiadds
aad
loopne
ja
loope
hlt
xor
pop
xchg
pushf
je
cmp
inc
ljmp
pop
adcb
shlb
jnp
xchg
addr16
das
adc
icebp
mov
pop
push
cld
and
mov
pop
int
jno
rorb
pop
mov
hlt
jge
ja
sbb
es
sub
sti
add
and
in
add
imul
inc
or
sbb
int
xchg
cmp
mov
popa
lcall
cmp
push
adc
vcmpps
and
pop
and
inc
lock
jne
add
addr16
lret
push
imul
stc
dec
sbb
hlt
jbe
stc
fwait
jmp
dec
ret
out
dec
xlat
cwtl
inc
loope
dec
fwait
pop
sub
mov
sbb
lcall
repz
inc
xor
mov
xchg
sarb
scas
fnstenv
or
mov
cmpsb
lods
inc
jns
mov
lods
xor
cmp
mov
mov
adc
sbb
imul
mov
rcll
xchg
jno
lea
fs
shl
subl
and
pop
jno
shlb
int3
add
sbb
mov
mov
mov
sub
mov
in
jecxz
xchg
xor
fucomi
cmp
lea
shll
add
mov
and
leave
mov
xor
mov
sti
enter
xor
pushf
push
inc
inc
sbbb
aaa
lahf
jnp
pushw
dec
fwait
aam
nop
int3
pop
cmpsb
lahf
adc
mov
push
lock
aaa
sahf
das
pop
lds
dec
stos
pop
adc
xlat
adc
shl
push
and
int
lods
jbe
cmp
push
or
add
add
xor
xor
enter
shl
or
dec
mov
sti
inc
jbe
lcall
adc
ss
std
xchg
jb
adc
sahf
jl
fnstsw
leave
out
cmp
scas
mov
lahf
aas
pop
add
jnp
arpl
pop
and
push
jne
hlt
shrl
dec
dec
call
and
and
pop
movsb
and
sbb
xor
in
pusha
xchg
fsubs
xchg
nop
sub
sbb
test
push
cmp
fisttps
jne
fnstcw
jnp
add
loopne
pop
popf
mov
data16
lret
mov
xor
repnz
stc
xchg
sub
call
cli
outsb
out
mov
pusha
xor
dec
mov
and
add
iret
es
addr16
and
xchg
test
pop
das
dec
jnp
imull
mov
aas
in
bound
clc
loope
sub
fmuls
and
and
lcall
in
xchg
xor
adc
data16
jg
inc
add
inc
ret
xor
loop
cmp
stc
jg
test
xor
mov
cmp
pop
pop
jp
inc
or
dec
shlb
movsl
jecxz
or
jle
xor
fsubl
inc
push
mov
js
inc
jnp
test
mov
jno
adc
cmp
xor
push
in
xor
jmp
idivb
push
pop
out
add
aad
jnp
mov
adc
add
lret
xor
sbb
cmc
xchg
in
fsubs
xchg
dec
je
or
rolb
scas
mov
mov
aaa
repnz
pop
dec
test
mov
out
dec
dec
lret
add
and
sahf
xor
adc
xor
push
push
lahf
lods
int3
mov
int3
xor
xchg
jecxz
mov
add
jo
mov
data16
in
add
pop
sbb
add
dec
sti
inc
inc
xor
dec
popa
mov
xchg
push
stos
dec
test
mov
mov
mov
mov
xorl
mov
inc
mov
xchg
and
xor
mov
pop
pop
cli
sbb
sahf
mov
xchg
sub
lret
cmp
fidivrs
push
pop
cmc
test
and
iret
scas
into
les
arpl
or
test
and
push
in
jae
rorb
je
in
sub
sub
inc
push
das
je
xor
jmp
xor
in
repnz
or
mov
push
nop
out
test
imul
loopne
stos
fidivrl
aad
lds
rcrl
insb
push
add
cmc
test
pushf
cmp
dec
lret
lds
adc
hlt
xor
lods
dec
int
jbe
xor
aad
sarl
mov
pop
or
mov
cmp
sbb
lods
lea
adc
mov
ja
push
mov
ret
notl
sbb
gs
sbb
test
push
mov
sbb
or
jle
std
add
sahf
pop
out
or
pusha
insl
add
das
or
sarb
push
out
mov
js
aam
aad
cmpsl
push
pop
mov
icebp
stos
out
out
aaa
fsubrl
add
jbe
jp
fs
mov
lods
xor
andb
scas
xchg
cmp
mov
orb
ja
mov
dec
dec
or
js
pop
bound
jg
aam
lret
jno
and
loopne
mov
push
and
sub
sbb
jns
xchg
xchg
push
pop
sub
test
push
and
pusha
repz
mov
or
js
xchg
movsb
xchg
sbb
movsb
sub
mov
or
lret
out
stc
cmpsl
jl
popf
shl
sbb
lds
and
rorl
sbb
pop
addb
xchg
jecxz
inc
iret
ljmp
jmp
stos
dec
sub
pop
lds
jno
cltd
adc
add
sbb
pushf
insl
imul
add
mov
js
test
ljmp
mov
xlat
xor
adc
cmpb
or
cmp
adc
lret
or
enter
xor
sbb
inc
add
xor
cmp
and
cli
mov
std
push
je
lcall
cs
hlt
mov
cmpsb
mov
fisttps
xchg
fwait
xlat
or
pop
mov
pop
dec
cmc
scas
adc
xor
icebp
mov
jl
sbb
dec
cmp
test
push
inc
cmp
scas
sbb
adc
rcrb
outsb
mov
fcmovnu
ljmp
push
rorb
movntq
xchg
pushf
inc
mov
lods
jmp
mov
mov
and
mov
push
mov
repz
pop
push
pop
je
dec
lods
pcmpeqd
repz
sbb
clc
pushf
or
lret
stos
xor
push
add
iret
js
pop
repz
test
leave
filds
xchg
aas
mov
cmp
mov
xchg
mov
cmpsl
jmp
xchg
adc
ret
push
xor
repnz
std
add
adc
mov
xchg
sbb
cld
mov
mov
inc
pop
mov
popa
or
aaa
mov
out
and
es
mov
push
fistpll
or
notb
stos
mov
jno
inc
scas
jne
stos
jmp
and
and
xchg
mov
cmp
shlb
jl
loopne
cmpsl
rcrb
mov
cmp
mov
aaa
rcl
sub
ljmp
jae
fsubs
int3
loop
fsub
xchg
jl
sbb
jo
jle
xor
and
rcll
in
pushf
lods
pop
loope
lods
add
repz
fwait
or
dec
cmp
cmp
mov
das
cli
loope
mov
inc
mov
es
mov
test
and
stos
enter
and
push
jg
pop
outsl
daa
mov
or
js
add
mov
mov
popa
inc
insl
mov
mov
fwait
xchg
sub
rol
out
frstor
mov
fcompl
fldcw
aas
jmp
insb
fldcw
mov
add
loope
jp
add
and
hlt
xchg
loopne
stos
pushf
adc
sub
mov
xchg
add
inc
jno
pop
xchg
out
out
scas
mov
sbb
repnz
add
lahf
ss
sub
adc
icebp
shlb
js
cmpsb
jle
stc
or
adc
dec
sbb
scas
sbb
outsb
int
mov
and
lahf
hlt
push
sub
mov
les
mov
jg
fwait
mov
mov
and
jmp
repnz
cmpsb
pop
cmpb
in
rcll
xor
lods
and
pop
loopne
stos
aad
push
sbb
enter
add
test
inc
sahf
jno
addr16
lahf
insb
or
jg
push
mov
mov
jmp
in
movsl
jecxz
fwait
or
ficoms
lods
data16
mov
sbb
pop
shll
fdivl
jl
in
fdivs
filds
aad
int3
inc
rcl
xchg
pop
loopne
imul
push
and
mov
stos
rorb
mov
inc
orb
jno
loop
ss
outsl
sub
addr16
int
mov
jo
pop
inc
adc
or
cmp
arpl
push
dec
or
mov
push
xchg
sub
mov
lock
ds
sarb
mov
dec
jp
outsl
popa
in
arpl
sbb
in
mov
mov
mov
lods
popa
xchg
roll
push
lods
push
mov
dec
es
mov
push
jb
std
dec
test
ss
pop
adc
inc
sti
mov
dec
int
xchg
cmp
movsl
test
loope
sti
mov
push
cltd
data16
dec
adc
cmp
pop
icebp
test
daa
nop
inc
inc
cmpsb
dec
cmp
or
cld
cmpsl
adc
mov
call
popa
xor
mov
dec
cli
xor
sbb
scas
out
cs
sbb
movsl
add
repz
pop
push
je
stc
arpl
mov
sbb
shlb
jle
mov
pushf
imul
xchg
int
mov
das
test
adc
sbb
aas
neg
sub
sbb
cmp
sub
stos
push
loop
push
stos
arpl
and
fimull
into
jo
jb
mov
sbb
adc
lods
mov
aam
push
mov
xor
or
mulb
adc
not
jmp
ds
and
adc
ficoms
or
stc
stos
rcrb
xor
xchg
jae
push
out
mov
pop
cmp
adcl
repz
and
cld
stos
lret
test
inc
daa
ss
or
in
cmp
xor
jne
aad
xchg
add
cmpsl
jb
cmp
sub
data16
scas
pop
nop
inc
imul
lds
adc
cmp
and
xlat
adc
popa
push
jp
inc
gs
dec
pop
cmp
pop
jb
stos
leave
push
add
cld
mov
or
repz
jnp
ja
xchg
add
inc
cmc
decl
xor
add
mov
bound
int
add
pop
das
add
ds
sub
dec
add
cmp
enter
add
gs
add
sub
movsb
inc
shll
fs
fcomi
xor
dec
in
filds
or
in
mov
lret
pop
add
xchg
test
sbb
mov
ficomps
or
lahf
push
jbe
cmpsb
mov
cmp
mov
lcall
push
mov
sarb
push
sbb
into
push
mov
sbb
outsl
push
xchg
in
or
mov
insb
outsl
call
lock
push
outsl
int3
or
sub
cld
jecxz
rcrl
pop
push
ret
ljmp
rorb
stos
pop
jnp
sbb
mov
lods
stos
lods
dec
lret
push
mov
icebp
je
test
imul
mov
mov
lock
sbb
dec
clc
mov
sub
pop
loope
mov
bound
imul
xchg
vpsrlq
mov
out
lods
call
sbb
jb
sbb
cmp
adc
mov
sbb
flds
mov
push
test
push
adc
out
add
xlat
mov
iret
pushf
or
loopne
adc
cmp
xchg
jb
inc
mov
cmpsb
mov
jbe
data16
repnz
ret
es
xor
add
adc
bound
push
cmpsb
mov
jbe
data16
repnz
ret
es
xor
add
adc
bound
push
cmpsb
mov
jbe
data16
repnz
ret
shlb
and
xor
add
adc
bound
shlb
sub
adc
leave
sub
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmpsb
cmp
roll
dec
xchg
mov
inc
ss
push
arpl
jae
add
inc
and
cmpsb
ret
mov
xchg
xchg
repz
negb
mov
ss
arpl
jae
insb
jbe
inc
arpl
cmpsb
push
mov
xchg
icebp
out
imulb
es
xor
cmp
push
push
adc
xor
ret
mov
cmc
xchg
in
cmpsb
mov
sbb
sub
jmp
in
jmp
lret
pushw
insl
sub
mov
jb
int
and
shlb
add
add
inc
and
dec
stc
push
fnstsw
add
pop
stc
out
jl
and
adc
jecxz
and
add
dec
out
out
cmp
dec
es
xor
inc
lret
push
pusha
pop
ret
mov
jbe
cmpsl
std
stos
xlat
mov
adc
inc
push
movsb
lahf
jae
push
je
cmpsb
xor
pop
add
leave
push
les
adc
jecxz
dec
jbe
pop
cmp
pushf
push
imul
in
inc
and
mov
ret
mov
xchg
stc
out
notb
lds
xchg
push
jae
cmp
jbe
inc
and
loopne
jecxz
repz
lret
addr16
jp
add
add
push
movsl
xchg
xchg
xor
mov
int
filds
xor
inc
push
push
adc
push
and
inc
push
pop
iret
xchg
rclb
out
xchg
mov
ss
push
arpl
jae
add
inc
and
cmpsb
ret
mov
xchg
xchg
repz
notb
es
ss
push
arpl
jae
add
inc
and
cmpsb
ret
adc
sbb
jg
leave
clc
dec
addl
add
movl
jmp
and
cmpsb
lret
and
pop
cmp
out
add
je
pop
and
inc
add
imul
mov
jns
sbb
xchg
mov
dec
sub
je
xor
inc
jbe
outsb
stos
iret
notb
jns
subb
add
xor
aad
sbb
cli
add
push
roll
sahf
in
aaa
xchg
sbb
out
mov
leave
lcall
test
jbe,pn
adc
push
imul
add
dec
setle
pop
push
movsl
hlt
out
in
xor
xchg
test
fwait
rorl
shrl
mov
xor
dec
fs
int
cmp
cmc
xlat
xor
sub
push
test
in
cli
jae
or
in
xor
call
syscall
js
shrl
xor
stos
mov
or
ret
negl
in
or
cld
jae
cmp
xor
inc
jge
push
lret
sbbb
mov
test
push
mov
push
clc
imulb
jae
test
test
leave
scas
adc
push
or
lret
in
xchg
inc
mov
xor
xlat
aas
cli
mov
cld
mov
repnz
xchg
sbb
les
and
adc
inc
push
loopne
test
xrelease
sub
lahf
call
add
adc
nop
xchg
les
and
insb
pop
jle
inc
dec
sbb
rclb
and
es
xchg
cmp
pushf
test
cli
cld
mov
loope
pusha
mov
dec
mov
insl
lahf
xor
xchg
xor
push
popf
cmpsl
lods
and
rorl
les
adc
cmpsb
lcall
or
in
xor
sbb
popa
sahf
pop
cmp
fldl
inc
mov
xor
aad
sbb
fcoms
iret
sbb
scas
divb
push
mov
jle
fnstsw
les
and
movsl
sub
lods
mov
into
jle
int
cltd
pop
xor
jns
mov
lds
testb
mov
mov
cmp
sub
scas
sahf
jl
sti
adc
les
call
loope
daa
test
leave
pop
in
sti
lds
jecxz
fs
iret
cmp
testl
popf
cs
les
test
sbb
imul
add
xor
adc
cs
dec
out
aaa
mov
sti
ja
inc
in
sbb
sbb
or
fwait
das
sahf
out
adc
and
xchg
pushf
adc
leave
add
das
out
repz
adc
xchg
cmp
push
cltd
lds
sub
jbe
jnp
pop
push
loope
cld
mov
dec
add
dec
lea
ret
in
daa
lahf
cmc
sub
mov
hlt
lret
dec
popa
sub
cmpsl
jmp
aad
mov
and
inc
shlb
adc
jg
mov
lods
andl
sar
xor
mov
inc
fwait
pop
jbe
dec
sbb
jo
mov
mov
stos
xchg
sub
mov
sbb
shr
and
or
cld
jp
cmpsl
mov
xchg
add
adc
daa
cwtl
cli
cmpsl
shll
adc
jmp
mov
lahf
push
stc
mov
mov
fcomps
es
jne
pop
push
xor
mov
pop
push
fcoms
add
xchg
cmp
xor
icebp
ror
mov
or
xchg
sti
shll
cltd
xor
int3
xlat
and
popf
out
cltd
cwtl
idivb
cltd
inc
add
dec
fisttps
push
fsubrl
or
enter
sbb
lret
iret
mov
pop
jp
add
add
adcl
xchg
call
fists
mov
fldl
push
xchg
xchg
test
out
and
add
mov
sbb
outsb
loopne
xor
adc
stos
mov
inc
push
add
add
adc
loopne
out
jb
mov
xor
pop
roll
ja
jb
mov
and
fisubrl
mov
shrl
aas
cmp
sbb
push
sub
mov
nopl
mov
in
mov
adc
mov
fs
sub
jno
sbb
dec
mov
xchg
jp
inc
pusha
fs
adc
out
popa
flds
dec
mov
stc
std
pop
les
xchg
cmp
sub
push
cltd
aaa
inc
dec
pop
sti
xlat
in
pusha
mov
call
adc
add
pop
inc
xchg
shll
sub
xchg
addb
add
push
mov
cmp
mov
mov
in
daa
adc
rorb
aaa
dec
sbb
sub
mov
xchg
dec
push
dec
stc
jb
pop
aam
aam
mov
es
inc
jbe
lahf
push
push
insb
and
sub
push
jp
ljmp
andl
sbb
mov
fistps
sarb
es
jmp
mov
sub
movsb
mov
sti
pop
dec
push
es
add
nop
shlb
jnp
add
inc
mov
mov
inc
jnp
mov
xlat
sub
cmp
mov
or
add
pop
repnz
xor
xchg
xchg
iret
xlat
rolb
jne
hlt
and
std
sbb
push
fldenv
mov
pop
adcb
rcll
test
das
xor
test
add
push
std
cmp
adc
es
adc
in
ja
inc
push
mov
dec
pop
mov
mov
xor
fwait
negl
xor
sub
mov
lods
pop
ret
mov
xor
jnp
movsl
popa
gs
and
iret
mov
push
iret
mov
test
cli
pop
mov
call
sub
repz
mov
test
dec
jae
cmp
dec
cmpsb
sbb
mov
cmp
leave
lret
jns
addr16
xlat
clc
repz
inc
out
mov
mov
daa
fldt
cmc
cmp
cs
jns
fisubs
std
rcr
clc
daa
dec
aad
fidivs
inc
lcall
fwait
movsb
leave
loope
jnp
mov
sub
xchg
frstor
cmp
mov
add
aam
ficoms
shlb
mov
hlt
pop
sahf
sarb
das
jbe
mov
jecxz
push
nop
sbb
adc
testb
adc
cmpsb
jns
les
mov
lahf
jo
test
xlat
pop
mov
out
mov
cmpsl
inc
out
jl
cmp
xchg
mov
addr16
lds
mov
bnd
negl
push
lret
cltd
pop
idivb
mov
arpl
lret
jo
jns
jno
fcmovbe
jmp
mov
imul
jecxz
stc
cltd
sahf
ret
and
mull
lea
inc
add
addb
imul
adc
jmp
cmc
roll
lret
lds
mov
xchg
add
pusha
movsl
sti
sti
and
popf
imul
stos
enter
cmpb
push
xorb
xchg
jo
cmp
inc
cmpb
lods
fstpt
xor
je
inc
stc
sahf
mov
rorl
jbe
cwtl
mov
xor
push
outsl
xor
shlb
xor
add
imul
inc
dec
enter
subl
pop
mov
xlat
nop
test
mov
cmc
inc
cmp
cli
shll
adc
inc
les
mov
shlb
stos
inc
adc
push
sbb
push
or
or
xlat
stos
mov
cmc
scas
push
les
test
mov
imul
cmp
pop
call
sbb
xor
adc
test
and
mov
in
cld
outsb
adc
xchg
pop
add
push
mov
movb
loop
data16
fistps
daa
dec
and
movsb
fildll
cmpl
data16
add
aas
mov
xchg
int3
call
mov
or
push
xchg
inc
lret
xorb
repz
testb
jo
mov
insl
xlat
neg
mov
push
sbb
movsb
sub
inc
adc
adc
lods
mov
adc
jno
push
or
mov
fnstcw
cmp
sub
add
mov
repz
aad
fwait
ret
js
cmovne
pop
addb
nop
push
add
je
mov
inc
mov
mov
and
das
push
popa
mov
xor
aad
outsb
je
jmp
pop
pop
mov
pop
sub
roll
dec
adc
xlat
mov
and
cs
sub
jge
movsl
and
into
in
pop
cld
mov
xchg
or
gs
cld
mov
jecxz
in
adc
inc
xchg
ficoml
dec
decl
fwait
mov
clc
dec
mov
fsubrp
cmpsl
xchg
popa
mov
push
inc
lcall
mov
lcall
testl
jae
rcr
dec
out
repz
add
sar
es
sbb
xor
scas
jne
jbe
scas
arpl
mov
decb
out
push
mov
sbb
inc
mov
sti
clc
stc
mov
mov
test
or
imul
push
out
xchg
fwait
mov
mov
jo
ret
inc
pop
outsl
xor
jbe
lahf
call
roll
mov
mov
aas
jmp
xor
shrb
mov
dec
dec
jmp
add
movsl
push
lret
loope
xchg
inc
mov
jg
hlt
cwtl
mov
add
outsb
and
inc
jno
xchg
fisttps
mov
repz
and
adc
pop
or
cmpsb
lods
mov
in
inc
daa
je
sub
seta
outsl
scas
mov
aam
jo
push
out
push
pop
push
ja
mov
popf
mov
pop
adc
mov
or
out
stc
adc
xor
stos
pop
adcl
hlt
sbb
in
rolb
dec
adc
pop
sbb
or
addr16
in
movsb
sti
adc
insl
mov
andb
jp
jne
cmpsl
frstor
outsl
mov
pop
xchg
cwtl
xchg
fsub
stos
sti
push
pop
test
into
pushf
pop
lcall
and
mov
and
das
xor
add
lods
shlb
or
push
sbb
cwtl
dec
adc
inc
sub
mov
addr16
mov
jne
xchg
mov
push
mov
call
js
push
mov
mov
ds
les
mov
pop
je
xor
and
out
insb
loopew
popa
je
js
adc
lret
pop
scas
sub
dec
inc
out
ret
xlat
popf
pop
inc
roll
push
fwait
or
jle
pop
mov
push
fidivl
fistpl
sub
xchg
add
rorl
pop
or
jmp
dec
sbb
ficoml
sarl
add
cs
pop
sub
mov
or
sbb
pop
scas
jno
push
cmp
jb
cwtl
test
ret
test
push
adc
jmp
cmp
mov
jne
jb,pn
mov
pop
lahf
pop
inc
sub
fadd
sbb
ljmp
fcomp
int3
mov
add
cld
ds
shlb
jge
xchg
sub
rcrl
xchg
dec
addl
pop
jns
fisttpll
jmp
mov
dec
mov
out
ret
dec
push
mov
mov
push
imul
xchg
leave
punpckldq
dec
add
rcll
aaa
add
lahf
push
sbb
lcall
push
cmc
imul
fs
jae
mov
xorl
push
pop
jge
pop
sub
dec
es
stos
stc
imul
cmp
int3
sbb
test
inc
icebp
jne
add
std
gs
bound
mov
dec
scas
and
adc
stc
inc
test
into
notl
mov
movsb
jb
cmp
push
cmpsl
js
fnstenv
cmp
add
add
mov
outsb
pop
jg
and
pop
or
sbb
sub
jmp
notl
adc
in
sti
jle
pop
lock
flds
mov
mov
gs
cmpsb
mov
jno
sbb
pushf
push
xor
in
or
xor
movsl
mulb
pop
mul
push
or
insb
mov
mov
sti
test
imul
sub
xor
lahf
push
inc
mov
mov
cmpsb
fwait
test
scas
xchg
rcrl
push
dec
monitor
push
push
mov
stos
adc
pop
aaa
lahf
jnp
mov
popa
pop
aad
popa
mov
cmp
and
push
inc
dec
push
sub
popaw
dec
shlb
testl
shr
xchg
or
jmp
inc
cs
push
aam
mov
jle
xor
and
or
add
add
inc
adc
adc
or
clc
mov
xor
pop
xchg
aam
ds
shll
in
in
fadd
sbb
mov
xchg
ss
inc
aam
std
imul
cs
mov
fists
icebp
cwtl
pop
mov
nop
cmpsl
popf
notb
inc
pop
and
out
gs
cmc
xchg
jmp
outsl
mov
mov
jge
pop
rcrb
mov
aad
mov
jnp
sub
push
mov
js
lahf
pop
negb
lock
nop
sub
addr16
dec
shl
ret
adcl
sahf
out
fldcw
je
push
loopne
aam
aad
int3
or
subl
in
xchg
push
dec
inc
lds
in
daa
inc
in
call
repz
jnp
sbbb
jno
aas
mov
xor
jl
sub
jmp
leave
dec
jecxz
mov
into
sub
cmp
int3
sub
and
jbe
mov
sub
cmp
jmp
fldcw
cs
dec
cmp
mov
cmp
inc
into
adc
xor
scas
shll
es
ret
das
xchg
into
sub
cmc
inc
mov
xchg
in
add
out
lea
in
xchg
jle
inc
in
std
dec
xchg
xchg
dec
ret
repz
test
ret
and
fwait
ljmp
cmp
in
mov
xor
lret
push
dec
ja
je
or
push
enter
iret
fcompl
push
xchg
cmpsl
rcl
xor
imul
push
jecxz
insl
gs
fdivp
jno
es
in
jno
mov
loopne
pop
cmp
test
push
or
sub
and
sbbb
pop
and
or
push
hlt
sub
xchg
push
cli
call
add
nop
aaa
gs
hlt
cmpsb
ljmp
inc
popf
ja
iret
shrb
pop
shr
ret
insl
sbb
cmp
xor
out
in
mov
lret
jl
dec
mov
mov
mov
mov
movsl
in
sub
std
or
pop
out
sub
adc
hlt
mov
lods
jne
stos
jno
nop
adc
out
stos
and
repnz
rcl
or
gs
xchg
repz
mov
mov
pop
int3
push
fcoml
rcrb
andb
es
dec
jns
test
sbb
lret
sub
fnstsw
lcall
sub
jbe
xchg
xchg
cmp
aaa
out
test
dec
rcll
add
repnz
test
xor
add
btr
and
movsb
movb
dec
stos
test
popf
je
jecxz
int
into
xlat
or
jnp
lcall
daa
jbe
jp
pop
nop
or
stos
shl
mov
lock
dec
mov
or
dec
push
pop
mov
popa
dec
cmp
and
pop
arpl
mov
sarb
mov
pop
cli
push
cld
aad
jge
ljmp
lret
and
inc
inc
xor
lahf
pop
jne
jmp
mov
cli
daa
push
repnz
jp
jne
mov
adc
mov
in
int3
jg
pop
or
pop
js
adc
add
jmp
xchg
xchg
nop
mov
inc
adc
pop
push
pop
mov
es
mov
jmp
filds
fldcw
leave
ficompl
hlt
add
cwtl
cwtl
in
dec
inc
pop
sbb
bound
xchg
ret
jle
add
enter
cli
xchg
lea
ffree
test
dec
jae
mov
stos
inc
std
inc
add
fs
push
xchg
xor
mov
inc
sahf
andw
les
jle
pushf
in
mov
and
std
lcall
add
cmp
add
push
repz
pop
and
mov
push
iret
repz
inc
mov
loopne
pusha
daa
or
fmul
push
xchg
cmpsl
daa
pop
ror
mov
sub
fmuls
in
pop
xor
ret
mov
pop
popa
lret
push
jmp
cwtl
dec
pusha
jne
sbb
mov
mov
and
mov
lock
cli
mov
sti
repz
je
je
add
lret
mov
adc
mov
pop
int
dec
or
add
andb
movsl
jle
orl
loop
repz
adc
loop
icebp
mov
cwtl
xchg
ja
ljmp
loopne
and
and
out
cmp
mov
popa
mov
pushf
mov
mov
jp
inc
daa
sbb
adc
mov
int3
adc
adc
push
xchg
pop
xchg
nop
push
lret
add
popf
dec
in
addb
dec
jns
dec
jl
in
xorl
mov
pop
loop
adc
push
push
jb
movsl
negl
nop
mov
cmp
inc
or
pushf
inc
mov
fs
jb
jnp
push
sub
je
ss
movl
mov
dec
jae
and
arpl
data16
jne
sbb
dec
ljmp
shlb
push
mov
jge
dec
push
or
sub
push
jmp
outsb
add
jo
jno
push
inc
testb
adc
mov
jbe
sub
inc
xchg
loope
xchg
xchg
pop
adc
mov
pop
sti
movsl
sarb
add
jns
mov
outsl
out
mov
lods
repz
pop
push
pop
arpl
push
mov
cmp
fisubrl
je
fs
push
or
mov
lea
adc
in
inc
push
test
shlb
add
fdivl
out
xlat
push
lock
jmp
out
sub
push
inc
ret
aas
pop
mov
pushf
loop
aas
stos
lahf
and
push
jle
cmp
in
jae
imul
push
dec
andl
push
mov
push
in
adc
jbe
push
cmp
test
je
inc
xchg
sub
mov
popa
or
int3
lock
dec
lahf
and
les
mov
mov
adc
lea
ja
adc
adc
mov
pusha
and
jl
test
pop
xchg
dec
jl
adc
shlb
sbb
into
push
inc
aad
add
cmpsb
dec
lods
adc
adc
mov
cmp
sahf
add
cmp
inc
jl
repz
in
in
mov
scas
imul
mov
lahf
loopne
xchg
int3
nop
push
jo
mov
lret
lock
inc
ds
fwait
pop
fisttpll
popf
xor
jno
xchg
outsb
addr16
lahf
mov
fisubl
mov
mov
cmp
push
jo
pop
inc
in
cmpsl
ror
pop
je
repz
or
cwtl
divl
jb
mov
cmp
sti
adc
out
popf
lret
cmp
idivl
out
cmc
test
mov
insl
ret
out
xor
in
cmp
insl
in
xchg
fcmovnb
fwait
push
adc
mov
xor
add
adc
into
cli
lods
push
mov
std
stos
popa
adc
pop
add
adc
sub
std
sbb
subb
inc
pushf
in
arpl
mov
scas
mov
dec
scas
jbe
xor
or
dec
psadbw
je
pop
sub
fldenv
fidivs
sub
rclb
outsb
ror
push
jl
dec
lcall
fists
rorb
dec
inc
adcl
in
imul
outsl
fstpl
pop
xchg
xchg
fsubr
add
rcrb
fiaddl
mov
sub
xor
out
mov
arpl
adc
xchg
mov
and
jae
daa
xorl
sbb
test
lret
or
mov
aad
push
addr16
xor
enter
jle
dec
inc
mov
xor
fyl2x
ds
sub
xor
shrl
push
mov
pop
popa
mov
and
fmul
jp
add
scas
push
inc
jns
je
arpl
notb
es
ss
push
arpl
jae
add
inc
and
cmpsb
ret
mov
xchg
xchg
repz
notb
es
ss
push
arpl
jae
add
inc
and
cmpsb
ret
mov
xchg
idivb
mov
ss
push
arpl
jae
add
inc
add
cmpsb
ret
mov
xchg
xchg
repnz
notb
es
push
add
mov
in
mov
pop
cmp
xchg
insl
les
fwait
insl
mov
loope
pop
cmp
gs
jne
push
int
dec
movsl
cmp
xchg
insl
in
cmc
dec
lds
lods
daa
mov
adc
int
fstl
mov
lds
fstpl
leave
sahf
pmulhw
adc
cltd
adc
fmull
or
xchg
pop
jbe
ljmp
inc
test
std
dec
leave
mov
shl
or
std
or
dec
rcrb
movsl
leave
fisttpll
adc
mov
sbb
pop
js
js
or
movsb
mov
cmc
inc
mov
cmp
mov
popf
nop
std
jne
jne
mov
push
mov
test
movsl
xchg
lds
mov
pop
sub
arpl
adc
std
mov
iret
fnstsw
rcrb
xorb
cmc
or
xchg
aam
test
xor
test
std
clc
xor
stos
mov
pop
xchg
fists
sahf
and
and
imul
jbe
imul
in
cmc
dec
fdivr
int3
imul
or
jge
incl
xor
mov
test
add
pop
mov
call
or
cmp
pop
mov
cmc
jl
add
sbb
mov
pop
out
push
lea
push
xchg
pop
xchg
sbb
push
shrb
loopne
mov
dec
lds
lods
and
popf
adc
int
fstl
movsl
cmp
xchg
insl
in
cmc
dec
lds
lods
and
popf
adc
int
fstl
movsl
fwait
xor
movsb
fldl
and
cmp
out
mov
jo
sbb
jnp
add
in
dec
sub
je
mov
jmp
faddl
das
rorb
jns
cmc
ret
jns
scas
pop
dec
ficomps
sbb
outsb
mov
jno
push
pop
test
aam
in
lret
mov
jp
sbbl
insb
aam
movsb
imul
sbb
out
inc
popa
hlt
adc
aad
and
aas
ss
xchg
xlat
and
inc
pop
mov
int3
add
inc
add
pop
sti
mov
outsl
mov
fs
sbb
xor
iret
jo
call
pop
dec
insb
adc
into
leave
shl
shlb
loop
inc
jl
ret
call
aas
out
xchg
ds
jmp
sub
adcb
add
fcompl
jge
pusha
decl
pop
in
outsb
sub
xchg
mov
adc
lods
push
incl
js
es
test
in
xor
stos
cmp
mov
jne
in
popf
addb
cmpsb
jecxz
call
data16
imul
xlat
je
cltd
jno
aam
insl
ret
sbb
insl
cmp
loop
fcompl
orl
mov
bnd
jnp
jg
jb
xor
fwait
inc
lret
sti
mov
dec
iret
stos
jo
sbb
or
pop
or
xlat
test
cli
add
inc
xor
mov
aad
add
mov
lock
cwtl
push
ret
shrb
fsubrp
dec
mov
cmpsb
inc
xor
rclb
sub
fildl
pusha
mov
adc
and
dec
add
cmp
cltd
inc
mov
xchg
popa
push
out
js
or
out
adcl
jg
sub
mov
lcall
xor
ret
cmp
sbb
push
cmc
mov
xlat
mov
lahf
jmp
ret
push
dec
inc
lret
rorl
sbb
pop
pop
inc
xchg
or
ret
lahf
push
aaa
ljmp
pushl
pop
xlat
inc
adc
sbb
dec
nop
or
in
out
or
mov
iret
pop
outsl
or
xor
xor
mov
mov
xchg
dec
pop
in
dec
loopne
in
jae
jp
pop
push
push
sub
xchg
mov
aaa
stos
push
ret
popf
imul
jnp
pop
xchg
ljmp
mov
inc
xlat
or
les
xor
or
movsb
pop
mov
push
fdivl
adc
ficompl
lock
mov
cmc
js
push
sbb
mov
cwtl
clc
cmp
ja
mov
cltd
rcr
push
popa
mov
bound
add
and
sbb
lods
mov
and
adc
int
add
int3
mov
lock
sub
xchg
add
adcl
rcll
mov
imul
imul
push
testb
push
jecxz
das
lods
mov
test
repnz
sub
xor
je
cmpsb
jle
push
nop
loope
push
inc
inc
xorl
push
outsl
cmp
and
push
add
xchg
xor
pop
sbb
cltd
roll
aaa
push
aaa
inc
sub
pop
out
scas
daa
loope
pop
jmp
je
rcrl
loope
mov
push
xlat
mov
xchg
fstps
lret
or
lret
call
test
out
arpl
aas
lods
sbb
mov
cmp
mov
and
fs
pop
insl
xchg
enter
iret
inc
cs
insb
jge
addr16
cli
mov
or
xchg
sub
and
out
enter
jmp
adc
xchg
ljmp
sub
mov
or
mov
ficomps
in
sti
mov
movsl
mov
icebp
arpl
in
inc
sub
xor
xor
or
sbb
sub
cmp
or
jnp
adc
mov
rolb
fidivrs
mov
clc
pop
mov
xchg
iret
cmpsl
mov
insb
add
shrb
neg
mov
dec
mov
loope
adcl
mov
xchg
in
pop
adc
mov
and
sbb
aam
lea
lock
ret
daa
adc
dec
jmp
or
fs
addb
ss
push
mov
int3
test
inc
inc
pusha
aam
cmp
xchg
jle
xchg
jae
les
andl
sbb
cld
das
or
in
fcmove
xchg
dec
jnp
das
pop
or
xor
lea
addb
or
or
and
ffreep
adc
dec
add
rorl
inc
mov
out
adc
mov
cmp
pop
out
mov
ret
out
jmp
lea
pusha
sbb
push
jae
xor
xor
mov
xlat
push
or
testl
pop
cld
cmp
inc
lcall
scas
dec
lock
adc
insl
ficomps
pop
in
cmp
mov
inc
dec
test
shl
gs
push
into
mov
or
mov
js
xlat
push
fxch
adc
out
mov
adc
mov
in
sbb
cltd
dec
loop
sbb
lret
cltd
xchg
xchg
cmp
and
cmc
rcl
cli
fbld
test
inc
sbb
je
pop
pop
into
cmp
pusha
cmp
and
adc
test
cmp
sarl
dec
pop
mov
pop
insb
bound
mov
sub
cmc
lods
adc
pop
push
idivl
mov
lcall
sub
ljmp
and
mov
mov
adc
daa
sti
push
cmp
call
mov
lods
gs
push
repz
stc
xchg
in
mov
movsb
fnsave
pop
and
mov
inc
fucomi
adc
pusha
push
jmp
ljmp
iret
cmp
shrl
js
scas
pop
mov
push
mov
jnp
cmp
add
adc
lock
lea
fstl
pop
stos
dec
pop
and
push
jecxz
aad
pop
add
sahf
clc
ret
imul
fwait
jecxz
inc
mov
nop
push
cmp
xchg
outsb
stos
or
stos
inc
dec
or
stc
dec
negb
inc
xor
shll
mov
pop
cmpsb
mov
adc
lahf
in
pushf
adc
pop
leave
mov
xor
mov
push
xchg
mov
jno
sub
cmp
jne
imul
insb
rcll
add
adc
mov
adc
out
sbb
mov
aas
test
cmpsb
sbb
div
xchg
sub
fidivs
mov
mov
sbb
lds
add
bound
jb
sbb
movsl
dec
movsl
push
in
cltd
or
clc
cmp
lahf
cmp
cmc
subb
lea
das
fwait
in
fdivs
or
adc
sub
sub
in
loopne
sub
cwtl
cmpsl
aad
jp
sahf
xor
jns
stc
sub
dec
cmp
daa
cmp
lahf
out
popf
jg
mov
fisubl
cmp
mov
jbe
fs
imul
sti
out
scas
sbb
xchg
mov
pop
out
je
jle
es
sub
popl
sbb
xchg
jl
lea
sub
fs
or
iret
xor
push
sub
cld
inc
lods
or
shll
xlat
movsb
stc
out
jp
lea
pop
xchg
adc
daa
es
and
js
repz
push
sub
mov
push
pop
inc
mov
sub
dec
cli
xor
andl
outsl
int3
leave
iret
mov
call
call
jp
popf
or
jne
or
dec
lcall
jb
sub
cltd
sub
xchg
loope
or
pushf
dec
int3
lock
dec
iret
mov
nop
dec
ja
testb
mov
push
jb
xchg
pop
stos
lahf
lahf
or
xchg
ret
mov
test
fistpll
aas
pop
leave
lds
mov
sbb
jg
outsl
jmp
cmpsb
bound
addr16
jne
mov
repz
enter
xor
lahf
dec
inc
inc
push
xchg
sub
fdivrp
cmp
dec
pop
pop
stos
adc
cmp
push
ret
in
shl
loope
dec
bound
jae
hlt
or
mov
aas
scas
sbb
pop
mov
lods
dec
mov
mov
mov
test
movsl
shl
dec
sub
xlat
adc
xor
das
loope
jns
add
mov
pop
cmp
pusha
xor
mov
jbe
push
iret
jmp
inc
push
pop
clc
int
mov
test
gs
mov
cmp
push
test
jne
dec
pusha
mov
mov
outsl
in
dec
mov
clc
inc
xchg
rorl
xchg
mov
adc
sub
aas
ljmp
fisubs
pop
cmp
mov
cli
out
daa
iret
jmp
xor
roll
shll
pusha
scas
cmpsb
hlt
add
imul
push
lods
sub
push
lea
int
sbb
lods
xor
push
loop
jnp
and
pushf
mov
xor
jb
fstl
out
je
sub
mov
jp
mov
sub
sub
pop
xor
fildl
pop
push
xor
xor
mov
dec
mov
sub
mov
push
cmp
push
pushf
jbe
cli
into
jl
adc
xor
lahf
imul
insb
ss
sbb
or
in
andl
or
mov
pusha
lahf
pusha
sbb
mov
lock
into
xchg
jmp
push
jle
enter
hlt
fisubs
sub
enter
push
cwtl
jp
arpl
aad
push
cmp
and
mov
jbe
sbb
je
subb
aas
push
cmpsl
xchg
loopne
ret
and
add
shl
mov
cmpl
out
adc
stos
xchg
lock
cli
test
les
ficomps
sub
sti
es
test
pushf
test
sbbl
lock
in
fnstcw
dec
inc
sub
mov
pandn
icebp
ljmp
subb
mov
pop
mov
movsb
gs
cmp
fisubrl
add
sbb
test
pop
bound
out
lods
jno
push
sbb
push
scas
imul
stos
in
xchg
add
mov
cmp
mul
inc
or
pop
leave
mov
ret
inc
fldenv
enter
jns
xor
adc
sahf
sbb
je
lahf
out
inc
and
cmp
dec
mov
insb
test
ret
loope
mov
out
js
loope
mov
mov
sbb
inc
mov
ds
outsl
cmc
cmpsw
sahf
frstor
in
xor
jns
es
mov
pushf
push
pop
out
data16
cmpsl
sub
aas
dec
mov
rorl
mov
rorb
test
mov
popf
pop
ret
cs
jo
adc
loope
mov
inc
dec
jbe
stc
or
pop
jne
pop
es
pushf
mov
jmp
push
mov
cmp
outsb
mov
cli
shufps
int3
xor
jecxz
into
imul
mov
and
adc
in
jae
sub
int
test
out
fcoml
cli
test
rclb
fnstenv
mov
lahf
call
mov
xor
or
enter
loopne
dec
outsl
ss
xchg
mov
sahf
add
xor
lods
jge
std
loopne
cmp
add
fcmove
icebp
cmp
pushf
pop
jns
push
mov
loope
mov
shl
mov
push
out
cli
mov
push
mov
push
push
or
xor
out
adc
mov
adc
in
scas
xor
jb
clc
adc
mov
clc
call
sub
push
or
mov
xchg
fcmovnbe
arpl
insb
insb
mov
shrl
jp
push
sbb
daa
jbe
repnz
add
cs
xor
lock
mov
sbb
cs
sbb
js
movsl
aaa
adc
aad
or
push
out
or
mov
sbb
cld
aaa
xchg
dec
int
dec
add
in
mov
dec
add
enter
xchg
loope
insl
mov
les
xchg
jmp
iret
sbb
stc
mov
jne
jb
shll
imul
sub
push
adc
cmp
mov
cmc
xchg
loop
sbb
add
adc
ljmp
call
imul
sbb
daa
fildl
mov
ljmp
add
mov
lahf
sub
and
cmpxchg
leave
in
fiadds
pop
mov
popa
dec
xor
xchg
sti
movsl
loopne
jne
mov
jmp
jae
xlat
mov
push
cmp
out
cmp
or
sahf
mov
test
clc
jl
imul
mov
xchg
push
fcomi
pop
sbb
push
or
mov
popl
decl
mov
sar
mov
mov
pop
mov
adc
movsb
outsl
adc
mov
jb
ss
inc
inc
dec
aam
xor
pushf
jo
scas
xor
adc
movb
test
or
jle
dec
mov
cli
mov
cli
stc
inc
jnp
sub
mov
addr16
fstps
mov
mov
cli
sub
test
jnp
dec
and
test
mov
aad
push
pop
cmpsb
decb
icebp
ret
outsb
sbb
pop
jae
into
mov
leave
rcrb
jb
xor
mov
cmp
stc
xchg
ret
fs
in
inc
inc
jno
sbb
jl
fadds
jmp
cmp
cmp
cmp
xchg
fisubs
adc
xor
lock
jbe
mov
cltd
loop
mov
into
and
rcl
ret
inc
ds
ret
inc
icebp
cltd
cwtl
repz
pop
repz
stos
push
mov
rorb
mov
adc
dec
sbb
fists
rcrl
notl
sbb
das
int
xchg
adc
add
add
or
adc
les
mov
mov
inc
lds
mov
xchg
bound
inc
inc
in
dec
loopne
mov
addr16
or
pusha
imul
aad
leave
push
into
xchg
mov
nop
repnz
pop
popl
push
jns
loope
jge
inc
movsl
orl
xchg
les
pop
mov
fsubs
xchg
jns
vsqrtss
jno
push
mov
ret
sub
push
sbb
pusha
jp
xor
cltd
jl
add
jecxz
xchg
sbb
ret
jns
test
fs
rorb
mov
sbb
pop
add
ret
dec
insb
pushf
leave
loopne
xlat
pop
pop
sub
sub
movsl
sbbl
aam
lods
int3
sti
rorl
push
mov
stos
hlt
xchg
mov
push
lods
into
cmp
pop
loope
or
leave
or
pop
pop
pusha
xor
mov
jae
pop
add
sub
xchg
xchg
pop
xlat
sti
call
cli
inc
xchg
mov
test
inc
in
aas
js
adc
je
mov
mov
mov
mov
sub
pop
push
shll
iret
addr16
mov
jp
sub
cmp
push
movsb
mov
dec
and
jnp
cwtl
cmp
or
jp
iret
pushf
mov
push
pop
xor
cld
mov
mov
sub
insb
inc
cmpsl
test
lods
xchg
sti
test
gs
xchg
in
lret
xchg
add
cli
je
sbb
testl
mov
icebp
sahf
jnp
inc
pop
pop
xor
and
push
mov
jno
jle
stos
jmp
mov
out
push
dec
add
pop
mov
add
pop
cwtl
mov
inc
in
adc
outsl
cmp
cs
ljmp
dec
mov
push
push
mov
popf
stos
fsubs
mov
adc
or
stc
mov
dec
bnd
andl
scas
enter
cli
in
sbb
loopne
lea
jg
push
cli
jp
daa
mov
mov
ret
dec
mov
xor
in
pop
mov
testb
adc
add
aam
ljmp
cmp
mov
jmp
test
rclb
int3
mov
stc
add
sbb
inc
or
cmp
stc
addl
cli
sbb
test
add
jno
stos
loopne
dec
int
bound
push
inc
adc
shll
cmc
aad
push
adc
and
pop
xor
lret
add
sti
stos
jae
adc
xor
call
jne
movsl
push
dec
jne
jns
mov
arpl
mov
pushf
rcl
outsl
into
shlb
adc
mov
jl
outsl
dec
shll
in
and
bound
xchg
sbb
mov
cwtl
xor
jecxz
out
jmp
xor
xor
add
call
out
orl
lods
fnstsw
mov
mov
mov
mov
int
out
ja
dec
xor
push
xor
daa
aas
inc
les
sub
imul
pop
adcl
addl
lds
dec
je
enter
jge
lods
hlt
scas
pop
test
mov
lods
cmp
pop
pop
mov
push
xchg
or
in
rclb
and
bound
pop
inc
fmuls
test
insb
loop
adc
mov
inc
pushf
pop
cmp
jo
xchg
int
mov
inc
js
test
or
cmpsl
cmp
sub
stc
adc
cmp
jo
or
xor
jle
decb
pop
addr16
lods
cmp
ja
fisubl
inc
fwait
inc
test
xchg
outsb
push
ret
jo
add
xchg
call
lret
pusha
pop
out
stc
pop
test
lock
ret
sbb
inc
and
inc
mov
jle
jae
jo
scas
fs
shlw
in
in
dec
xchg
imulb
xchg
mov
cmp
incb
stos
pop
imul
jae
ds
mov
push
sub
ds
add
push
or
xor
mov
xchg
cmp
mov
cmp
fwait
cld
fwait
dec
mov
fs
pop
addb
mov
paddb
fimull
cltd
lret
inc
inc
int3
mov
mov
popf
pop
pop
repnz
clc
lods
adc
data16
adc
adc
jmp
mov
test
push
jge
out
pop
fisttpl
out
insb
push
notb
inc
andb
jle
pushf
lahf
mov
xor
fldenv
mov
xchg
jl
cmpl
mov
movsb
pop
pop
test
sbb
ja
arpl
leavew
xchg
cld
dec
push
popf
cmp
sbb
dec
sbb
cmp
or
fcmovb
jl
popa
ret
jge
and
aas
cltd
sbb
ljmp
andl
xor
icebp
inc
imul
adc
pop
cltd
or
icebp
sbb
jbe
loope
pop
inc
icebp
insl
test
inc
gs
das
jae
sti
jecxz
push
push
jge
insl
in
jmp
mov
fstl
and
outsl
testl
sub
xlat
push
sahf
cmp
pop
icebp
pop
mov
jns
jmp
dec
shl
stos
out
xchg
iret
iret
div
inc
movsb
or
pop
push
jno
inc
into
ss
sbb
in
add
pop
ficoms
out
lea
jnp
mov
inc
lock
setne
add
daa
imul
mov
adc
mov
fucomp
ljmp
lret
and
push
adc
xor
fdiv
mov
sahf
lds
fcomps
and
xchg
and
int
mov
sub
test
aam
outsb
insb
mov
loope
xlat
mov
cwtl
incl
insb
mov
imul
inc
nop
push
mov
imul
popf
cmpsl
stos
or
dec
jg
nop
cmp
aas
mov
outsb
pop
jp
je
test
jecxz
lods
addl
dec
push
cld
faddl
rorb
inc
insb
push
cmp
int
negl
lret
mov
xchg
cwtl
jg
lods
mov
inc
mov
lods
mov
push
in
fstl
in
sub
inc
insb
test
inc
inc
inc
leave
mov
aam
sbb
lods
mov
dec
mov
addr16
jb
lret
ss
dec
and
pop
in
frstor
cmp
push
lods
cmp
loop
xor
and
mov
fcomps
cmp
addl
dec
xchg
sti
shrl
inc
fs
icebp
enter
or
sbb
add
mov
in
jns
ficompl
jbe
dec
push
xchg
insl
in
cmc
dec
lds
lods
and
popf
adc
int
fstl
movsl
cmp
xchg
insl
in
cmc
dec
lds
lods
and
popf
adc
int
fstl
movsl
or
xchg
std
in
cmc
dec
lds
xor
in
gs
jne
inc
xor
mov
test
cmc
dec
vpmullw
add
jne
xor
xlat
push
out
imull
xor
clc
and
pop
mov
mov
ja
pop
ficoms
out
push
xlat
push
out
imull
xchg
dec
cmpsl
jle
outsb
push
sahf
push
out
addr16
daa
into
daa
mov
into
push
ds
cs
pop
dec
mov
ss
cmp
fxsave
fwait
js
jnp
pusha
out
scas
push
mov
jg
cltd
xchg
lods
data16
jo
roll
xchg
jmp
sub
sbb
inc
push
push
sub
dec
sub
lods
fstl
cs
jno
mov
pop
and
scas
enter
sub
leave
mov
inc
rcll
lahf
sub
ja
adc
jno
jle
push
pop
fucomip
push
daa
add
addr16
or
lea
repnz
js
xchg
dec
pop
icebp
mov
int3
inc
push
loop
inc
mov
clc
mov
xor
pop
icebp
push
pop
sarl
pop
ljmp
fldenv
xchg
into
pop
xor
add
arpl
mov
icebp
mov
sub
mov
scas
daa
scas
inc
lret
inc
or
ljmp
out
imull
nop
pop
xchg
jle
outsb
pop
sahf
dec
mov
outsb
scas
pop
fimuls
into
cmp
jno
push
adcb
hlt
xor
dec
ljmp
cli
adc
adc
pop
mov
pop
scas
test
mov
mov
xchg
xchg
sub
out
sti
fbstp
mov
push
mov
mov
dec
iret
pop
xchg
dec
cmpsl
jle
outsb
inc
sahf
push
mov
ja
pop
ficoms
into
daa
aaa
out
push
xlat
push
out
imull
xchg
dec
cmpsl
jle
outsb
inc
sahf
push
mov
ja
pop
ficoms
into
daa
aaa
out
push
clc
inc
pop
mov
movsl
add
data16
rorb
sub
pop
ret
adc
inc
shll
in
jne
push
push
mov
scas
mov
stos
mov
in
nop
xchg
insb
sbb
lretw
xchg
ja
stc
push
popa
mov
sbb
lods
jge
push
and
xchg
inc
fildll
imul
fnstcw
adc
mov
int3
mov
push
fdivr
jb
imul
test
ficoms
fcoms
or
rorl
mov
xchg
push
pop
cltd
or
adc
pop
ss
ficoml
jecxz
bound
inc
jno
or
mov
das
pop
adc
loopne
mov
bound
pop
lret
dec
mov
negl
loopne
jns
imul
mov
in
cmpsb
jecxz
cmp
xchg
in
adc
mov
iret
shll
mov
push
inc
jge
scas
xchg
adc
jnp
mov
and
jb
das
jmp
xlat
xorb
add
xchg
sub
jo
mov
sub
pop
outsl
cmpsl
sub
jb
inc
or
inc
das
cli
xchg
mov
and
and
push
cmp
push
mov
lock
add
cmp
and
scas
or
xor
cmp
or
sbb
mov
sbbb
jg
jmp
sbb
aad
pop
into
das
adc
ror
jl
gs
call
jne
pop
xchg
mov
adc
push
sbb
xor
mov
cmpsl
dec
insl
adc
add
push
mov
and
in
fisttps
lods
outsl
mov
jb
add
pop
das
iret
sbbl
repnz
xchg
insb
dec
insl
dec
iret
out
fwait
jb
insb
pop
ret
shl
daa
mov
jns
scas
rolb
cmp
fbstp
ja
je
or
xchg
das
or
mov
hlt
mov
lods
mov
outsb
ljmp
push
sub
test
mov
js
imul
or
sbb
sar
sub
mov
fwait
mov
test
fildl
cmc
ds
scas
fs
aam
clc
mov
mov
pop
fisubs
std
sbb
dec
call
jmp
mov
rcll
aaa
jle
inc
or
push
push
pop
clc
adc
add
cltd
sti
loop
xor
stos
int3
push
xor
sbb
add
jno
mov
mov
jb
popf
jp
pop
and
adc
add
cwtl
insl
enter
xor
push
pop
test
ret
dec
jbe
es
out
in
and
flds
lret
push
icebp
imul
inc
mov
sbb
adc
push
or
mov
inc
push
fstpl
pop
fs
mov
cwtl
pop
inc
loope
shrl
inc
jmp
xor
mov
xchg
jl
pusha
mov
repnz
adc
test
cli
mov
or
dec
imul
rcrl
push
call
fs
cmp
dec
arpl
shlb
or
ds
pop
jnp
add
dec
pop
test
fcomp
popf
sbb
xchg
adc
cmc
movzbl
mov
pushf
ljmp
jns
lea
aad
rcll
adc
jl
mov
mov
ret
sbb
test
lea
jmp
fwait
jae
pop
int
imul
lcall
adc
ret
fwait
xor
jle
sub
or
shlb
pop
pop
push
pop
mov
cmpsb
jb
test
pop
bnd
inc
cmove
mov
mov
data16
fsubl
push
repz
mov
jne
scas
xchg
mov
sar
push
lods
lret
xor
mov
scas
mov
repnz
icebp
sub
mov
or
mov
mov
mov
pop
lcall
cmp
inc
les
pop
sbb
sbb
icebp
inc
fisubl
in
xchg
xor
fcoml
cmp
enter
jns
in
insl
lahf
test
xchg
jb
or
fstpt
push
cmc
or
int
int
cmp
mov
in
mov
xchg
mov
loop
mov
aam
ljmp
xchg
xor
push
insl
add
mov
mov
jo
outsl
rcrl
std
xor
hlt
xlat
xchg
push
jno
and
sub
or
aaa
addr16
or
mov
leave
or
pop
sbb
inc
lods
or
jl
sahf
addr16
test
mov
das
mov
cld
mov
dec
imul
cltd
push
das
loope
mov
pop
or
je
jbe
pop
mov
pushf
mov
pop
stos
xor
sbb
jno
aas
sub
fs
movsb
cmc
ret
pop
insb
imul
cmp
cs
jge
push
lea
aam
mov
out
out
xchg
popa
push
sub
dec
rorb
xlat
xor
into
testl
pop
addl
add
dec
daa
sbb
push
mov
sub
inc
scas
call
cmpsl
out
cli
mov
pushf
jmp
mov
pop
mov
push
mov
fsubl
xor
rcl
adc
dec
jle
mov
fnsave
and
sbb
cmc
scas
in
ljmp
xchg
out
cmp
orb
test
cmp
cli
nop
pushf
sub
mov
push
inc
je
ds
mov
lret
mov
and
negl
test
pop
leave
cmp
out
sub
ljmp
lret
cmpsl
loop
addb
cs
lret
cs
aaa
pop
mov
adc
icebp
add
jmp
outsl
cmp
mov
or
jnp
push
sbb
mov
dec
inc
sub
clc
cmp
sbb
jo
adc
adc
shr
sub
dec
mov
add
fdivs
dec
inc
out
mov
shll
xchg
and
jbe
xchg
in
xor
or
adc
push
jmp
pop
xchg
add
stos
sbbl
in
frstor
orl
inc
icebp
ret
ret
loope
sbb
mov
ja
mov
dec
icebp
mov
mov
push
mov
push
int
xor
push
mov
inc
sahf
orb
dec
dec
jp
push
cli
loop
add
aam
aam
xor
xor
mov
testl
adc
imul
push
sub
int
mov
test
notl
fsubs
cwtl
pop
std
add
push
cmpsb
iret
icebp
jae
mov
lds
pop
leave
jne
xchg
sub
xchg
cmp
mov
add
pop
cmpsl
inc
jg
call
push
xor
jg
stos
mov
jle
jl
push
push
fsubp
dec
btc
mov
clc
pop
xchg
mov
popf
mov
push
jno
push
div
test
push
cmp
mov
inc
push
in
push
lods
jno
pop
cmp
dec
add
fxam
shrl
gs
loopne
stos
and
lret
aas
xchg
inc
mov
daa
cmp
push
mov
push
jnp
or
adc
idiv
xor
push
hlt
mov
movsb
jmp
movsl
mov
lea
pop
lea
mulb
fsubrp
or
jle
popf
and
dec
repz
sub
stos
arpl
xchg
fsubl
xor
sbb
xchg
add
imul
and
adc
push
mov
inc
popa
and
cmp
push
mov
ljmp
push
sbb
push
sti
mov
dec
cmp
loop
pop
inc
fcoms
mov
repz
add
pop
mov
and
nopl
ficompl
jae
mov
xor
pop
cld
and
rcl
fmulp
popa
ljmp
push
push
mov
add
pusha
rcrl
cs
and
mov
adc
sbb
mov
mov
jg
call
xor
push
sub
inc
fsubl
cmp
shrb
sbbb
call
out
cmp
ret
mov
sub
xchg
inc
sbb
movsl
imul
shrl
cmp
sub
push
aam
jo
pop
in
add
mov
in
mov
arpl
sub
xor
out
mov
adc
cmpsb
sti
mov
and
fwait
idiv
xor
and
push
push
xchg
inc
inc
das
pop
in
popf
jp
cld
pushf
imul
test
ficomps
inc
cs
fcomip
or
lock
arpl
cli
dec
fidivl
pop
push
stos
loope
jecxz
sub
pop
test
inc
pop
loopne
cmp
sub
xchg
lret
bound
dec
sarb
or
jns
jb
jl
iret
jne
jns
fcoml
pop
cmp
xlat
push
andb
stos
pusha
cmpsb
es
mov
adc
shrl
xchg
mov
int
dec
shl
xor
add
push
adc
pop
loop
mov
dec
xchg
jg
push
mov
iret
shlb
mov
insl
sub
push
and
mov
ret
cmp
cmpsb
xor
push
dec
sbb
fwait
cmp
je
in
mov
mov
fst
movsl
sahf
push
insb
outsl
testb
mov
imul
cltd
cmp
sub
mul
sbb
jg
and
roll
inc
pop
rorl
cmp
push
rorl
cmp
cmc
out
bound
mov
xor
jnp
sti
jg
xchg
jb
sbb
push
push
fs
ret
push
mov
mov
push
int3
mov
push
lret
add
xor
incl
push
sarb
dec
jp
jo
cmp
xchg
cltd
xorl
mov
mov
xchg
jo
push
mov
hlt
and
or
mov
or
int3
push
hlt
inc
hlt
out
daa
adc
push
cmc
lahf
es
sahf
testb
sarb
testb
mov
aaa
repnz
movsl
cmp
inc
int3
into
in
cld
add
xchg
enter
pusha
mov
lods
dec
push
lcall
cmp
adc
mov
dec
testb
jbe
addb
inc
loope
push
or
aas
dec
dec
xor
jle
stos
adc
dec
xchg
or
std
jae
xchg
ljmp
mov
mov
aas
dec
les
sub
lret
in
add
jg
ja
push
js
cmp
cmp
jmp
adc
adc
xor
sub
add
out
data16
pop
pusha
int3
xchg
out
outsb
jle
sbb
dec
icebp
dec
ds
adc
jb
mov
mov
jge
in
shr
pop
ja
xchg
rorl
shll
mov
sbb
pushf
add
dec
mov
imul
enter
push
test
repz
push
clc
lret
and
int3
mov
repnz
add
mov
jnp
cmpsb
popf
mov
xor
fs
inc
pop
sbb
shlb
cli
insb
jnp
mov
test
adc
fidivrs
imul
xchg
fsubr
fsubr
mov
jo
add
andl
sti
mov
dec
rolb
lods
and
jmp
add
inc
sbb
inc
mov
jge
mov
sti
inc
ret
mov
or
cs
int
mov
ret
int
lahf
pop
cmpsl
xor
dec
orl
pop
jo
add
out
aad
imul
fistpll
cmp
mov
cld
test
pop
xor
sub
ja
orb
icebp
mov
rclb
js
out
aad
outsb
cli
loop
add
mov
push
or
and
mov
jo
ret
lahf
sbb
mov
jno
xchg
lret
ret
xchg
aad
outsl
jecxz
insl
mov
add
mov
scas
movb
push
mov
cmp
sahf
push
mov
or
sbb
js
das
sbb
mov
fwait
scas
popf
jnp
adc
xor
jo
inc
or
xchg
add
imul
fbld
sar
repnz
ljmp
mov
cmp
jo
enter
mov
add
xor
dec
int3
mov
xorl
dec
int
arpl
sbb
pop
daa
ja
adc
andb
mov
roll
out
adc
aas
mov
push
push
iret
mov
lods
arpl
xchg
aad
leave
mov
sub
cmp
test
and
scas
je
out
iret
test
mov
scas
sti
ljmp
fnstsw
jae
adc
cmpsl
push
mov
fwait
push
mull
cmp
nop
mov
cmp
adc
mov
push
pusha
lret
jne
fwait
pop
iret
dec
mov
lock
push
inc
mov
out
sbb
dec
int3
xchg
stc
pop
and
inc
pusha
xchg
sub
mov
push
int
imull
sti
insb
push
cmpsb
pop
iret
mov
pushf
lret
lds
add
sbbl
lea
idivl
push
push
pushf
scas
xchg
fdivrs
and
or
data16
rol
mov
dec
pushf
movsl
je
mov
shll
sti
add
fcoms
scas
xchg
mov
mov
xor
jne
outsl
mov
adc
sbb
shr
add
andb
shrb
lods
fisubrl
mov
xchg
lcall
lock
fsts
push
cmpsl
pop
ret
scas
loope
xchg
stos
popa
pop
xchg
adc
jg
dec
pop
and
int3
jecxz
cltd
xor
shl
pop
and
cmp
and
fsts
andl
dec
mov
pop
mov
pusha
and
sub
fcomps
das
ss
lret
ljmp
in
rcll
sahf
jl
cltd
or
lret
adc
jb
loope
popa
or
arpl
mov
loop
cmp
jo
arpl
int3
repz
test
pop
mov
shlb
sbb
inc
sub
inc
shll
push
sbb
sbb
stos
dec
stos
sbb
lahf
mov
sbb
or
outsb
jp
jecxz
es
fadds
pop
add
add
xor
pushf
lret
or
inc
add
rclb
cmc
imull
das
aad
add
mov
or
popa
fst
sub
stc
sar
and
call
jp
and
inc
repnz
pushf
dec
in
jecxz
xor
xor
mov
gs
in
sub
cs
push
call
adc
fcmovu
jbe
pop
mov
sub
aam
adc
xchg
fwait
mov
push
push
and
add
xlat
iret
cwtl
cmc
jo
aam
xchg
lret
xchg
dec
outsb
pop
scas
fists
inc
scas
fsts
xchg
ljmp
std
sbb
and
out
cli
adc
lret
jo
mov
pushl
sub
mov
jne
mov
inc
jge
jns
push
sub
pop
movl
frstpm(287
test
dec
leave
sub
cmpsl
aaa
dec
xor
xchg
mov
add
cltd
ja
pop
sub
pop
jmp
mov
xchg
incb
mov
inc
sub
mov
lods
stos
dec
lods
shrb
dec
cmp
insl
sbb
lock
dec
fldt
and
leave
std
cmp
pop
dec
sbb
pop
adc
loope
inc
sub
mov
aad
repz
xchg
pop
stc
jns
add
out
mov
cmp
fwait
mov
mov
cmp
fidivrs
mov
call
mov
cltd
sub
aaa
fwait
imul
repz
in
mov
ret
das
lret
repnz
push
fs
arpl
mov
leave
roll
sarl
mov
mov
sarb
cli
sbb
insb
ret
dec
push
xchg
loope
lock
jle
iret
sbb
inc
pusha
add
push
push
lret
int3
lock
dec
gs
ljmp
or
mov
fildl
sub
es
ja
fcmovbe
mov
das
mov
xor
aaa
shlb
loopne
inc
fdivl
sub
jmp
scas
int
or
sub
adc
cld
andb
mov
and
hlt
adc
xchg
cmp
push
dec
pushf
sub
inc
xchg
lahf
xchg
lret
cmp
xchg
dec
jge
lods
out
call
sbb
inc
xor
inc
in
xor
mov
dec
loop
es
dec
pushf
jg
push
aas
inc
or
cltd
cmp
pushf
mov
jae
inc
mov
cmp
jp
out
mov
sti
popf
xchg
in
push
mov
jbe
imul
inc
popf
pop
stc
add
in
jle
cli
sarl
adc
test
fs
bound
add
mov
sahf
cwtl
std
dec
push
and
into
adc
ja
call
push
lret
in
fsts
jnp
jmp
sub
cli
fldt
dec
pop
popa
jb
addr16
fidivl
pop
out
mov
mov
mov
mov
incl
mov
jae
sti
dec
in
nop
cwtl
js
mov
pop
into
xchg
jae
sahf
xchg
jmp
dec
pop
xor
test
pop
lret
nop
push
adc
push
addr16
jnp
pop
mov
cltd
sbbb
push
testb
xor
scas
inc
ja
mov
enter
sti
into
iret
test
out
test
jle
adc
cltd
sub
mov
and
push
push
jmp
add
add
xor
xchg
xchg
in
push
rcll
or
fnstsw
jb
dec
adc
push
stos
das
je
xchg
ret
mov
push
out
dec
pop
gs
int3
in
pop
push
or
sbb
ficompl
jne
cmp
inc
enter
adc
mov
call
pop
mov
in
jg
das
pop
imul
push
inc
js
movsl
dec
jg
stos
and
jns
jno
lahf
adc
pop
in
sbb
cmp
js
jge
jae
xchg
and
lret
cltd
rclb
scas
mov
sbb
pop
mov
popf
call
test
xorl
push
testl
and
cltd
cmp
outsb
fcomip
outsb
or
jp
repnz
pop
or
out
into
stc
movsb
xchg
out
xchg
in
mov
adc
stos
les
and
lcall
je
in
jo
jp
pop
xlat
and
push
fistpl
jecxz
or
add
sub
imul
and
jae
ret
idivl
outsl
out
dec
mov
movsb
cltd
lcall
lods
inc
faddl
xor
jp
cwtl
test
xorb
add
inc
push
and
adc
pop
inc
xchg
cmp
jne
push
clc
xchg
push
repz
mov
xor
lcall
sbb
aas
cli
pop
pushf
or
adc
outsb
lock
inc
mov
jp
test
nop
adc
xchg
jo
cld
jg
testl
pop
stos
fidivrl
orl
mov
in
cmp
xchg
test
fisubl
cmp
int
and
pusha
cmc
mov
insl
pusha
xchg
or
orl
insb
rcll
test
cs
dec
scas
cmp
sahf
pop
lods
xchg
cmp
jne
ljmp
add
mov
rorl
sbb
test
jp
movsb
sbb
add
arpl
sbbb
pop
push
cmp
sarl
sub
pushf
js
jmp
push
lods
cltd
fnstsw
lds
pop
rcrb
sub
scas
test
daa
inc
stos
sbb
adc
sub
faddl
mov
xchg
sub
ss
jmp
sub
or
jecxz
fucomi
add
ds
add
push
xor
std
aam
jae
sub
out
lret
and
enter
repnz
movsl
mov
jne
ss
addr16
cmp
aas
inc
and
testl
pop
call
mov
cwtl
mov
std
pop
pop
cltd
out
pushf
pop
scas
mov
mov
gs
add
xor
push
scas
xchg
sbbb
fs
outsl
mov
fcmovb
jecxz
rolb
and
mov
add
call
mov
xchg
xor
cmp
push
dec
push
and
inc
in
js
icebp
aaa
sub
mov
test
pop
mov
lcall
dec
into
mov
fcmovnbe
shrl
je
clc
cwtl
in
add
push
lods
ret
stos
mov
adc
pop
ss
gs
mov
xor
cmpsl
stos
lods
xlat
xor
or
xchg
pop
sub
pop
data16
shll
int
xchg
xor
xor
inc
shr
repnz
sub
mov
xor
mov
sub
popf
test
nop
adc
repz
xchg
adc
add
jns
cli
and
jg
mov
int
jo
loop
arpl
inc
xchg
loopne
sbbb
faddl
or
data16
incb
jne
mov
push
jl
imul
je
sub
jmp
out
mov
lods
pop
push
push
push
orb
test
sub
pushf
and
and
and
jle
and
enter
insl
inc
imull
loop
lahf
mov
les
stos
mov
cwtl
stos
add
push
in
imull
xchg
dec
cmpsl
jle
outsb
inc
sahf
push
mov
ja
pop
ficoms
into
daa
aaa
out
push
xlat
push
out
imull
xchg
dec
cmpsl
jle
outsb
inc
sahf
push
mov
ja
pop
ficoms
into
daa
aaa
out
push
xlat
mov
mov
xchg
into
cmpsl
jle
outsb
inc
push
push
mov
ja
pop
ficoms
into
daa
xor
push
out
imull
test
dec
daa
jle
outsb
mov
mov
lahf
xor
add
adc
mov
inc
mov
mov
mov
das
repz
jecxz
ret
outsl
xor
add
push
incl
mov
mov
das
repnz
loop
sarb
outsl
xor
add
push
incl
mov
mov
das
xchg
or
lods
outsl
inc
lahf
and
pop
fistl
stc
sbb
test
add
js
pop
jbe
test
dec
cmpsb
addr16
scas
iret
scas
inc
push
jae
insl
xor
repz
out
mov
ucomiss
lahf
sbb
xchg
mov
and
dec
arpl
jbe
call
outsb
mov
repnz
les
jge
dec
pop
and
xchg
pusha
and
jb
dec
fbstp
sub
sbb
or
pop
ret
dec
iret
add
jae
imul
xor
inc
mov
ret
sbb
xchg
mov
push
jle
aas
lret
ja
mov
stos
int3
stos
xor
push
loopne
push
out
comiss
push
outsl
insl
lahf
and
jb
iret
push
incl
mov
mov
das
repnz
loop
sarb
sub
pop
jle
dec
jmp
adc
jae
data16
push
out
xchg
scas
ss
fisubs
mov
pop
mov
cmp
loopne
iret
arpl
imul
and
iret
or
jno
and
xor
inc
out
mov
mov
das
repnz
loop
sarb
outsl
xor
add
push
incl
mov
mov
das
repnz
loop
sarb
outsl
xor
push
jle
sbb
and
sti
lret
adc
repz
sbb
or
add
mov
repnz
cmpsb
std
sub
mov
cli
dec
add
imul
sub
and
mov
bound
sub
ja
sbb
daa
sbb
rol
das
fmull
fwait
cmpl
jno
loope
jl
sti
xor
and
xchg
fstpl
cli
mov
mov
xchg
dec
hlt
jle
imul
pop
and
les
stc
imul
jmp
push
les
out
jle
aas
sbb
inc
fdivrp
xor
or
pop
mov
aam
push
shl
pop
and
fucomp
out
dec
popa
das
outsb
mov
xchg
mov
add
stos
push
jmp
push
lret
sarb
lcall
dec
xlat
mov
and
adc
adc
adc
jp
sbb
cmpsb
testb
cmpsl
and
mov
mov
imul
pop
std
sbb
into
ret
les
repz
popf
lret
mov
fwait
addr16
sub
imul
sahf
sub
mov
xor
cmp
test
xchg
jl
sti
adc
and
outsl
cmp
mov
xchg
scas
inc
add
cs
cwtl
adc
xchg
lods
cmp
or
sbb
xor
adc
mov
add
shll
inc
lods
or
xchg
into
adc
sub
lods
or
adc
stc
mov
mov
jp
enter
mov
push
pop
arpl
mov
push
clc
sbb
and
and
pop
loopne
pushf
scas
sbb
inc
cmc
add
rorb
mov
mov
push
iret
fwait
cmp
jl
dec
or
xchg
adc
shrl
inc
and
mov
mov
lret
and
jmp
aas
sti
popf
pop
movsb
add
mov
insl
test
push
push
iret
filds
cmp
fiadds
jne
pop
ljmp
pop
adc
and
sub
sbb
xchg
push
mov
push
into
int
insb
jmp
mov
mov
mov
arpl
int3
mov
mov
imulb
cmpsl
sbb
pushl
vsubps
pop
arpl
push
ja
push
sub
rcrl
mov
std
in
fldt
enter
adc
sbb
jl
pop
mov
in
cmpsb
lods
fucom
inc
cwtl
xchg
outsl
out
push
push
inc
stos
flds
or
jl
and
mov
adc
out
mull
cs
jle
mov
pop
cwtl
je
enter
rclb
mov
dec
lods
xchg
jl
movsl
fcmovb
jno
adc
sub
mov
mov
pop
xor
sub
xlat
adcb
xor
test
shll
mov
push
mov
test
pop
es
or
neg
mov
imul
cmp
and
xchg
js
xor
shlb
cmpsl
cld
jle
scas
pop
push
fwait
mov
mov
sub
push
xor
lds
adc
dec
imul
cmovl
jg
call
jbe
xchg
or
and
push
mov
sub
stos
lods
insl
cmp
mov
sbb
std
sub
clc
cmp
jb
ret
dec
inc
lods
adc
iret
pop
loopne
pop
jns
stc
cld
loopne
mov
mov
insb
push
adc
scas
mov
pop
dec
xchg
icebp
enter
jp
jae
in
dec
test
mov
ret
out
mov
fwait
mov
scas
xor
mov
inc
rcl
and
repnz
loop
and
dec
test
mov
pop
mov
cltd
mov
and
sbb
add
movsb
pop
sbb
pop
inc
cltd
push
cwtl
mov
mov
add
or
je
lret
ficompl
loop
push
jbe
inc
cmp
push
cmp
jmp
xor
jecxz
xchg
dec
out
xchg
cmpb
add
sarb
mov
test
pop
sub
push
loope
add
stc
add
fsubl
aad
xor
jle
popa
pop
fwait
mov
sbb
mov
hlt
dec
or
inc
jmp
stc
inc
xchg
adc
xor
or
fs
loope
push
mov
add
mov
loopne
jb
xchg
pop
add
roll
icebp
enter
mov
cld
jbe
dec
mov
dec
dec
cmp
hlt
push
lret
cmp
add
xor
or
jnp
punpcklwd
in
pushf
xchg
pushf
or
and
push
xlat
sbb
mov
push
cmpsl
clc
bound
xorl
pop
inc
je
popf
stc
pop
xor
inc
in
stos
xor
les
lods
pop
incl
sub
mov
mov
scas
pusha
or
xor
sti
es
jg
out
push
mov
mov
fcom
xor
nop
pop
outsb
add
pushf
pop
jo
xchg
pop
pushf
inc
sbb
lods
and
sbb
testb
loop
and
movsb
data16
stos
jecxz
fsubr
xor
shlb
mov
dec
push
and
adc
ja
dec
fstl
add
lahf
test
imul
dec
in
add
data16
repnz
popa
decl
pop
mov
imul
xchg
test
dec
cli
add
cltd
fnstsw
and
and
aad
gs
xchg
jns
push
lahf
mov
push
sbb
pop
dec
outsb
or
sub
push
or
lret
xchg
push
popf
or
rorl
sbb
popf
fildl
faddl
test
sarb
mov
lds
jl
shr
ds
and
xor
fsubrl
jo
icebp
rcrl
adc
sbb
orl
rcrb
cmc
enter
sub
pop
pop
hlt
scas
subl
pushf
lods
sbb
pop
xor
pop
pop
stc
add
fs
xchg
jecxz
ret
cmp
lret
bound
mov
mov
mov
xchg
iret
pop
pop
mov
adc
ds
adc
mov
mov
shl
inc
cmpsl
in
mov
push
sbb
or
pop
pop
adc
push
mov
sub
sbb
je
pop
out
inc
pop
sti
jb
dec
push
jg
adc
xchg
in
jl
inc
les
subl
push
ret
cmp
outsb
mov
test
aas
or
fisubs
or
shrl
xor
inc
jnp
sarl
sub
inc
jo
imul
lret
das
arpl
adc
lahf
inc
inc
push
mov
push
xchg
shrb
mov
and
jnp
inc
push
xor
pop
test
adc
imul
aaa
ret
sub
fldenv
lods
cmp
insb
loope
adc
in
pop
cmpsb
loop
jo
pop
pop
enter
fcompl
push
push
lcall
sub
mov
pop
jae
fs
push
push
inc
add
test
das
and
push
dec
lds
clc
sbbl
js
lods
insb
jmp
xor
sbb
lret
jo
mov
scas
inc
ja
jg
fwait
mov
xor
xor
sbb
mov
fisttps
sub
loop
jo
inc
movsb
fdivrl
sti
dec
and
cltd
inc
iret
push
xlat
mov
mov
addr16
add
shr
test
ja
or
push
mov
mov
es
fildll
sbb
push
sbb
fld
jnp
gs
std
or
sbb
pop
dec
push
nop
push
fcompl
inc
xorb
fistl
mov
imul
clc
xchg
jns
or
es
adc
jno
sarl
xor
lret
arpl
ficomps
inc
jnp
cmp
iret
outsb
lds
push
pop
nop
sub
sub
loop
and
lret
pop
push
inc
scas
sub
cmp
adc
xor
push
mov
pop
cmp
sti
push
jmp
push
into
stos
mov
sub
stos
cltd
push
fiadds
or
mov
dec
fwait
ret
adc
not
inc
pop
in
pop
fidivrl
xor
jo
mov
stc
mov
mov
mov
dec
cmpsl
ret
push
mov
or
adc
repz
cmp
imul
stos
adcl
cmp
mov
test
inc
pop
dec
or
fnstsw
dec
mov
jns
push
mov
push
sub
out
push
jl
push
inc
jnp
mov
mov
pop
fucomp
sahf
test
aam
jle
test
cmp
inc
push
sahf
cmp
cmp
and
in
gs
cmp
push
pushl
pop
enter
pop
sti
jecxz
aam
cmp
in
sbb
mov
rcrl
xor
lahf
icebp
test
push
sub
mov
xor
inc
and
loope
jne
pminub
movsb
outsl
scas
stos
pop
push
sub
es
dec
add
daa
lds
jecxz
lcall
and
inc
adc
xchg
outsb
ror
dec
movsl
pop
mov
pop
lods
sub
adc
ret
xor
jmp
in
icebp
sbb
aas
jmp
pusha
aas
aaa
cmp
shrb
jne
nop
pop
aas
jnp
into
dec
inc
aam
mov
jno
shrl
jne
imul
test
test
testb
std
aad
ficomps
pop
or
mov
lds
and
xchg
sub
dec
and
sbb
cs
xchg
dec
push
insb
pop
dec
repz
push
mov
into
movl
push
push
cld
std
pushf
roll
movsb
sub
jne
sub
es
or
mov
ljmp
mov
insl
enter
shrb
push
pop
iret
mov
out
jp
push
icebp
mov
repz
add
pop
add
lods
lods
mov
shlb
fidivrl
cwtl
mov
fdivl
lahf
pop
or
cs
addr16
test
jo
xchg
push
push
pop
pop
arpl
cs
jns
movsb
jno
cld
inc
negb
jp
jg
insl
xchg
stos
inc
pop
xchg
mov
sbbl
push
push
je
xorb
ja
mov
pop
outsl
fwait
pop
aas
xor
push
dec
sbb
call
push
xchg
loope
mov
add
insl
jns
movsl
xor
mov
sub
inc
xchg
movsb
xchg
call
aad
push
loope
test
stos
push
adc
fcmovnbe
insl
xchg
xor
pop
xchg
outsl
mov
out
cmp
push
out
inc
mov
test
aas
ja
fwait
jo
sbb
imul
inc
test
jae
test
cmp
and
xchg
push
push
pop
fisubrl
xor
sbb
ret
adc
movsl
or
loop
cmp
sbb
shlb
mov
mov
add
lret
pop
xchg
sbb
test
push
inc
pop
hlt
jbe
push
iret
lret
inc
add
cmpsl
outsl
call
mov
inc
mov
jle,pt
xor
or
xchg
mov
mov
in
xchg
xchg
xor
ja
xchg
cmpsb
in
gs
or
sbb
mov
aad
mov
rcll
jge
jg
lods
stos
lods
dec
ret
jbe
std
scas
or
fxam
scas
push
pop
dec
es
xchg
imul
jmp
mov
pop
stc
push
adc
insl
inc
repnz
cltd
jmp
mov
push
call
push
aas
mov
jp
fs
pop
push
dec
xor
sbb
aas
adc
jae
leave
pop
outsb
repnz
pop
cltd
lret
ficoml
add
mov
sbb
ret
divl
mov
xorl
into
outsl
pusha
and
mov
push
dec
adc
fwait
or
nop
rclb
loopne
mov
mov
mov
dec
pop
mov
push
and
mov
jmp
add
mov
and
aam
lds
pop
test
js
inc
fs
out
sub
leave
in
insb
adc
rolb
xchg
jle
mov
lea
cmp
push
movsl
cwtl
cmp
push
daa
out
jae
jb
sub
jecxz
push
mov
add
push
adc
push
or
dec
lret
inc
dec
ret
jle
sub
push
fildl
jle
mov
gs
repz
sub
adc
frstor
std
dec
fs
fsub
ret
mov
ss
inc
and
ss
out
outsl
pop
jne
je
mov
stos
outsl
mov
aas
xor
inc
add
gs
lahf
jecxz
cwtl
xchg
inc
push
mov
dec
jns
insl
ret
andl
adc
flds
inc
xor
push
clc
dec
adc
mov
in
sbb
popf
jmp
sub
clc
or
jmp
push
sub
add
mov
adc
mov
pop
xchg
icebp
sti
or
dec
pop
dec
lret
loop
or
pop
test
aam
pushf
pop
loopne
enter
dec
js
aaa
fwait
mov
push
stos
mov
pusha
inc
divl
loopne,pn
jmp
sub
mov
mov
insl
cmp
lret
neg
jg
inc
rclb
adc
testb
in
imul
insl
mul
and
fdivrs
lret
mov
mov
push
loope
lods
mov
movsb
adcl
mov
shlb
jnp
imul
pop
mov
std
jle
xchg
mov
or
xlat
das
insl
in
popa
insb
xchg
pop
out
jge
mov
jbe
xchg
adc
sbb
mov
xlat
insb
fs
mov
ret
mov
stc
xor
test
push
outsl
jne
push
mov
push
inc
inc
popf
add
int
mov
lret
rep
hlt
repz
dec
popf
sub
jo
scas
cli
dec
inc
jle
mov
adc
fstl
push
or
jecxz
mov
sub
lcall
cmp
cld
aam
pop
iret
xchg
or
push
ljmp
jbe
and
mov
xchg
in
push
div
or
ljmp
ljmp
push
and
push
pop
fisttps
and
fimull
fdivrp
inc
adc
adc
push
sbb
jmp
adc
fs
and
mov
ds
mov
cmp
imul
test
jp
cmp
das
cmp
jp
in
scas
pop
jecxz
mov
cmc
lret
leave
fdivrl
mov
add
repnz
pop
inc
inc
leave
adc
mov
mov
outsb
sbb
add
gs
or
cmp
ja
fldenv
push
fdivp
and
mov
into
or
push
insl
push
repz
xlat
or
test
out
lock
insl
ss
movsb
adc
inc
cmpb
ljmp
xor
and
add
xchg
fdiv
popa
mov
out
in
dec
test
cli
out
or
mov
das
clc
add
xor
iret
mov
into
sbb
mov
jo
sbb
imul
lods
popa
movl
loope
in
fisubrs
lret
and
mov
dec
xor
imul
ja
mov
sar
out
adc
jbe
mov
lods
push
xchg
add
cmp
xor
push
cmp
push
jb
je
sbb
mov
xchg
mov
stc
cmp
and
pushf
dec
daa
ret
test
push
test
lods
testb
mov
sub
mov
sbb
mov
xchg
loop
ret
mov
je
cmp
or
xor
rcll
jo
pop
cs
xorl
test
jae
lock
pop
jmp
lods
movsb
jmp
int3
xor
int
imul
movsb
pop
movsl
add
ret
dec
bound
mov
push
inc
mov
repnz
lahf
popa
sub
std
cmpsl
xchg
repnz
roll
push
sti
enter
xor
arpl
ret
jg
push
int
loopne
hlt
or
push
jl
sbb
mov
jg
pusha
cmp
iret
jge
adc
arpl
xor
or
imul
cmp
arpl
add
or
sbb
nop
mov
adc
loop
int3
cwtl
mov
or
loope
outsl
mov
push
das
scas
orb
sbb
mov
dec
pop
test
lahf
cmp
xchg
repz
in
cmp
or
sahf
xchg
repnz
jmp
pop
dec
jb
push
sar
mov
mov
mov
push
test
push
pop
out
lret
fsubl
push
je
loopne
push
leave
in
add
daa
shll
loop
pop
popa
rcrl
fwait
in
jbe
fadd
arpl
test
push
jp
mov
nop
nop
jecxz
mov
and
xchg
add
mov
cmp
ja
cmpsb
pop
xchg
dec
out
mov
out
out
and
adc
mov
or
ret
xchg
loopne
in
insb
fisttpll
outsl
in
cmp
adcb
movsl
sahf
add
out
sbb
iret
ds
xchg
movd
in
fwait
and
in
pop
int
push
mov
adc
cmp
fisubrs
xor
mov
movb
cmp
adc
fs
jl
inc
pop
cmc
cmpl
aaa
pop
sub
fcmovbe
or
addl
leave
lea
xor
cli
mov
jnp
dec
icebp
push
rcl
imul
dec
cltd
mov
stos
pop
add
repnz
popfw
xor
mov
and
arpl
addr16
cld
movl
or
movsl
pushf
das
xorb
out
int3
aad
insb
test
lock
jle
inc
mov
push
mov
ljmp
outsl
rcr
das
ss
push
dec
cmp
push
push
dec
cmp
lret
sub
jmp
mov
or
sub
dec
jnp
nop
lods
lret
jns
and
test
and
test
setae
cmp
lcall
lret
rcll
fwait
out
mov
dec
lods
jnp
dec
xchg
jo
mov
iret
repnz
arpl
sub
lcall
popl
jnp
mov
xchg
push
repz
adc
mov
xor
std
mov
add
dec
xor
cmc
push
subb
push
sarb
jecxz
sbb
sbbl
dec
rclb
inc
mov
sub
inc
loop
shl
sahf
adc
in
jne
sbb
xor
dec
jb
data16
shld
ret
lret
xchg
xchg
inc
push
cmp
shll
repnz
mov
xor
sub
xor
idivl
add
mov
and
xlat
or
cmpb
popf
xchg
orps
lods
bnd
cmpsb
push
sbb
call
dec
xlat
xchg
fnsave
mov
mov
stc
je
mov
shlb
or
inc
in
or
scas
sub
insb
sbb
pushf
pop
mov
mov
scas
sbb
pop
lods
xor
xor
xchg
xor
frstor
inc
lahf
ret
icebp
idivb
int3
es
stc
subl
lret
test
loope
mov
inc
mov
das
ds
mov
testl
cmp
inc
rorb
dec
cmp
sub
dec
xchg
in
mov
sub
xor
push
loop
or
mov
jecxz
filds
mov
es
leave
mov
push
out
and
jno
fxch
sub
sub
jns,pt
xlat
mov
in
in
in
xchg
pop
lods
pushf
js
mov
call
pop
decb
loopne
testl
out
mov
and
jae
jne
ss
mov
cmpsb
insb
sbb
andl
fwait
test
xor
push
addr16
mov
in
aaa
sbb
mov
inc
cmp
push
lods
xor
push
push
sbb
out
xor
add
addr16
adc
push
inc
shll
and
stc
cmp
outsl
repz
lahf
add
xor
inc
pop
les
push
loope
ljmp
pushf
dec
pushf
xchg
push
rclb
cmpsb
hlt
mov
cmpsb
pusha
rorl
stc
mov
scas
cmp
inc
sub
enter
fcoml
push
cmp
shrb
aas
ret
lret
sub
dec
fists
clc
repnz
adc
into
out
add
pop
jae
mov
testl
pop
outsb
mov
jb
loopne
es
ljmp
xchg
stc
jp
sub
es
push
pop
std
jge
fsubrl
xchg
fldenv
jp
test
fsubrs
jb
fs
dec
and
cmp
call
xor
xchg
jae
mov
and
out
push
fbstp
leave
mov
xchg
fldt
mov
pop
add
mov
dec
cmp
rorb
push
jecxz
push
dec
cli
adc
push
dec
add
jb
das
mov
dec
out
adc
je
jnp
mov
pop
sub
clc
cli
push
inc
mov
add
lcall
sub
add
push
incl
mov
mov
das
repnz
loop
sarb
outsl
xor
add
push
incl
mov
mov
das
repnz
loop
sarb
outsl
xor
add
push
incb
mov
mov
das
repnz
loop
sarb
outsl
xor
add
push
jg
adc
aas
sbbb
push
sub
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sti
lcall
fildl
ljmp
xor
popa
pop
xor
push
push
lcall
loope
icebp
lret
rorl
gs
sub
jo
inc
jp
push
lcall
clc
lret
ljmp
gs
dec
sbb
push
xor
cmp
int
dec
jmp
stc
sub
ficompl
std
popa
adc
test
mov
rolb
inc
xor
pusha
call
lds
fisttpll
adc
mov
insl
scas
xchg
lock
and
sub
sbb
or
out
aad
movsl
xor
jmp
xchg
cmpsb
jno
mov
cld
fnsetpm(287
lret
rorl
adc
cld
dec
scas
in
and
inc
pop
dec
jne
inc
in
mov
xor
sub
into
pop
adc
adc
lret
or
int3
adc
pushf
into
add
mov
and
arpl
sbb
push
decb
aad
dec
popa
sbb
lcall
icebp
lret
enter
sub
sbb
or
jns
imul
lcall
test
mov
adc
jg
or
or
mov
repnz
leave
xchg
cltd
lahf
lods
lods
xchg
les
jg
js
pop
fs
aas
add
xor
push
ds
in
xchg
rcrb
cli
shr
and
xor
add
adc
popa
pop
jno
inc
jp
push
lcall
loope
icebp
lret
shr
and
xor
add
adc
popa
pop
jno
inc
jp
push
lcall
into
das
fisttpll
lods
mov
inc
adc
dec
es
fnstsw
shll
sar
in
fisubrl
scas
push
inc
fcoms
cmc
orl
adc
add
or
fstpl
add
sub
or
shld
inc
incb
xchg
add
mov
xor
jge
push
push
dec
push
mov
clc
rorl
test
dec
fldcw
push
pop
popa
call
push
cmc
fs
sahf
loope
xchg
or
in
add
push
pushf
xor
std
push
ret
daa
adc
adc
or
je
sub
mov
mov
sub
pop
add
ja
jns
pop
xor
stc
test
xor
out
xchg
inc
jns
fldl2e
mov
inc
mov
call
push
jecxz
aad
mov
test
dec
pop
fwait
jle
enter
or
mov
idivl
xchg
and
sbb
jnp
pop
repz
int3
push
add
leave
stos
jmp
movsb
cmp
adc
shll
jmp
sub
outsl
rorb
xchg
rclb
inc
mov
in
add
ds
ret
movsb
in
push
mov
aam
cmp
leave
and
add
jmp
pop
fwait
xchg
test
or
add
adc
push
inc
loopne
push
and
jno
aaa
jmp
inc
xchg
fdivl
inc
or
fdivrl
ret
mov
mov
ds
loope
std
xor
jno
out
rolb
xorb
xchg
addb
dec
je
mov
ja
add
push
mov
adc
xlat
push
hlt
outsb
cwtl
ret
insl
or
lods
mov
xchg
int3
sbb
in
adc
adc
int3
sbb
inc
sahf
out
daa
mov
rclb
shlb
idivl
add
aaa
jg
pop
mov
jl
push
add
clc
inc
js
cmpsb
iret
icebp
stc
mov
dec
adc
jmp
jg
adc
dec
dec
in
scas
out
fiaddl
sub
test
adc
push
mov
lea
push
lock
popl
pop
in
or
and
pop
mov
mov
aas
cmp
in
int
cmp
mov
and
jb
jp
repnz
push
or
fsubrs
and
mov
scas
addl
ja
popa
cmp
jo
dec
repnz
mov
popa
sahf
xor
pop
inc
js
dec
sar
clc
add
or
ds
inc
les
sbb
ss
aam
push
xchg
rclb
inc
push
mov
incl
lret
cmp
or
adc
push
enter
call
jae
xor
test
inc
out
daa
js
aaa
subb
addb
clc
jmp
cmp
sahf
out
or
aad
inc
out
inc
push
test
aam
int3
inc
pop
or
scas
shll
mov
dec
sti
in
mov
cwtl
fsubl
enter
pop
nop
jae
add
test
xchg
imul
pop
mov
push
jnp
pop
andl
mov
dec
jne
pop
imul
rolb
notb
dec
mov
daa
inc
mov
cmc
mov
leave
sub
movl
sub
mov
arpl
jae
xchg
insl
pop
js
sbb
andb
jb
cmp
out
push
xor
mov
pop
in
ja
adc
push
imul
cmp
dec
insb
mov
sub
imul
mov
xor
or
icebp
xor
int
call
xor
add
sub
inc
cwtl
cmp
push
arpl
std
cmpsl
mov
test
push
fsts
jb
or
adc
xchg
xchg
and
stos
push
das
or
rol
cmpsb
and
cld
jecxz
inc
pop
fsubs
adc
jmp
jp
cld
dec
sub
push
pop
aam
push
mov
arpl
hlt
cmpsl
sbb
pop
dec
out
imul
sub
inc
add
fstpl
notb
cmpsl
adc
imul
pop
sbbb
iret
pop
xor
ss
scas
xor
dec
cs
and
dec
in
flds
scas
cs
movsb
loope
or
popa
test
inc
ljmp
movsb
stc
mov
sbb
out
inc
pushf
inc
insb
loope
repnz
adc
inc
mov
cmpsb
lods
inc
push
imull
stos
into
dec
repz
jle
and
out
mov
cmp
das
add
dec
and
jbe
cmpsl
jle
cmp
ret
loop
std
ret
mov
xchg
je
jmp
or
mov
jo
test
jnp
ret
jle
add
sub
sar
or
xchg
jecxz
lods
and
aad
enter
subl
movsl
cli
pop
pop
mov
icebp
mov
scas
addb
out
mov
dec
and
inc
movsl
dec
insb
inc
sbb
mov
xchg
jae
sbb
mov
int
imul
adc
cwtl
jle
aad
push
leave
ljmp
aas
out
push
mov
push
mov
icebp
mov
les
push
lahf
fcmovne
repz
jb
out
mov
test
js
mov
adc
mov
gs
inc
cwtl
add
sbb
lds
ret
dec
ret
adc
push
mov
out
repz
jecxz
test
adc
mov
add
dec
pop
out
xor
cltd
and
fildl
movsl
fisubrs
dec
push
les
aam
cli
lods
xor
xlat
and
jl
push
nop
mov
pop
cwtl
jecxz
rcrl
ja
cli
movsl
mov
inc
or
mov
mov
sbb
imul
push
pushw
and
push
jmp
pop
push
jne
fndisi(8087
sbb
inc
jmp
cmp
popa
hlt
insb
pop
test
int3
lds
push
xchg
dec
test
ds
mov
push
mov
or
lea
or
jg
push
loopne
ret
arpl
adc
pop
fisttpll
push
out
adc
cld
data16
das
aas
mov
mov
sub
mov
inc
or
mov
sub
test
add
fs
in
sub
fnstenv
mulb
icebp
mov
adc
fldl2e
std
mov
dec
mov
rcrl
ljmp
out
push
pushl
or
pop
je
or
xchg
or
out
or
iret
pop
mov
xor
scas
jbe
mov
out
xchg
and
xor
pop
lret
fnstsw
incb
std
test
shll
les
adcb
faddl
xchg
xor
cmp
or
push
roll
fldenv
sub
push
add
lods
fwait
cli
enter
or
pop
insb
push
xchg
jle
je
shrb
and
movsl
mov
fidivs
sub
lret
add
xchg
inc
mov
loope
cltd
push
incb
loop
sub
shrl
inc
bnd
cmovno
pop
pop
ja
mov
stc
adc
gs
adc
jne
daa
cwtl
mov
jecxz
mov
jecxz
dec
push
cli
pop
xchg
lds
push
repnz
cmp
and
sbb
nop
adc
dec
xor
movsb
shrb
out
xor
and
ljmp
sahf
outsb
xchg
and
push
test
xchg
jge
mov
repz
shlb
fwait
aam
shll
sub
in
jmp
shrl
mov
sub
add
xor
divb
ds
cmp
lahf
xchg
inc
out
scas
push
popf
lea
fiadds
in
inc
jns
loope
mov
fwait
lods
mov
jl
sub
push
aam
mov
mov
les
ljmp
mov
dec
stos
dec
imul
xchg
inc
xor
lds
negb
or
aad
int
or
dec
xor
push
fisttpl
cmp
paddsb
call
imul
add
or
imul
test
xchg
in
push
rcrl
mov
lret
push
mov
add
cmp
and
jecxz
shr
cld
inc
mov
out
mov
mov
aam
popl
hlt
or
rorb
icebp
and
lcall
push
leave
cmp
adc
fcompl
stc
mov
or
fwait
xor
or
dec
aas
push
scas
mov
bound
mov
xor
addr16
testb
std
jns
jne
mull
dec
loopne
cmpsb
cltd
inc
sub
out
inc
mov
cmp
movntq
out
jmp
xor
push
stc
adc
sarl
je
inc
loope
pop
inc
push
fcmovb
sbb
aaa
jge
dec
xchg
jbe
movsb
or
pusha
pushf
outsb
fsubrl
lret
xchg
orb
movlps
mov
pop
xchg
adc
inc
add
cmp
ja
mov
push
xlat
clc
push
inc
lahf
loop
jns
push
jmp
jecxz
rorb
xor
testl
sbb
cld
jp
adc
out
mov
loopne
clc
pop
lods
mov
insb
add
movsl
loope
jae
xor
inc
ds
pop
dec
fwait
ret
lahf
pop
inc
loopne
shlb
pop
xchg
arpl
ret
or
outsl
sbbl
stos
nop
inc
mov
pushf
inc
dec
mov
ret
xchg
movsb
push
xchg
xchg
and
xchg
mov
xchg
sub
insl
inc
xchg
leave
mov
mov
cmpsl
sub
das
push
dec
repnz
mul
push
jbe
mov
push
xor
notl
clc
jb
shlb
shr
int
enter
fcmovne
rcll
inc
fstpl
mov
pop
jb
xchg
or
lods
mov
push
pop
inc
mov
dec
adcb
ds
or
xlat
lods
mov
pop
adc
rorb
movsb
add
fstpt
outsb
data16
cmp
mov
sub
pop
add
mov
add
mov
mov
bnd
dec
std
into
clc
or
data16
lret
or
or
adc
stos
xor
add
sbb
jle
sbb
jae
pop
dec
push
fnsave
or
pop
sub
repz
pushf
add
int
xor
add
stc
inc
add
and
mov
jne
inc
adc
sub
pop
jp
test
add
leave
fdiv
in
das
push
js
add
inc
je
or
inc
pop
sbbb
sbb
pop
out
pusha
fsts
ja
gs
imul
adc
add
sbb
mov
and
jge
std
aas
pushf
xchg
push
sti
mov
sbb
mov
movsb
int3
insl
or
stc
ret
int
pop
into
inc
mov
sbb
rcll
sti
mov
aaa
pop
xchg
stos
mov
pop
lcall
loope
cmc
ds
mov
movsl
mov
pop
cwtl
xchg
cmc
sub
fsubs
mov
dec
inc
insl
or
jbe
enter
ja
cmp
push
outsl
daa
pop
pop
or
fists
jge
cmp
mov
and
adc
and
les
push
sbbl
pop
jmp
cwtl
sbb
sbb
or
ret
lcall
dec
jmp
test
lea
insl
in
insb
out
mov
mov
mov
popf
push
mov
push
sub
cld
adc
xor
lahf
xchg
test
dec
inc
shrl
xor
es
lretw
test
sub
push
xchg
fstp
das
fnstcw
jge
add
and
mov
xchg
std
sub
cmp
sub
inc
push
les
jecxz
jge
cmp
bound
testb
in
and
xlat
sbbl
popa
cltd
xor
mov
ret
mov
and
mov
sti
push
lds
push
xor
sbb
stos
jne
ret
aam
push
push
rclb
or
xor
and
jle
loopne
mov
ret
mov
cmp
sbb
icebp
xchg
rorl
push
jb
sbb
sahf
fisttpl
push
outsl
jl
pop
cmp
cmp
add
cmp
sbb
repz
and
jbe
pop
or
stos
je
mov
frstor
aaa
mov
pop
jne
test
punpckhwd
or
cmp
pop
dec
dec
not
jp
cmp
loope
xor
mov
mov
pop
lcall
sub
cbtw
lock
xchg
jge
enter
daa
ss
dec
xchg
pop
jb
and
xchg
test
jl
push
imul
xor
pop
cmp
xlat
mov
nop
dec
in
mov
enter
shl
adc
pop
push
and
adc
jb
cmp
insb
addl
inc
mov
or
dec
jno
sub
fdivrs
test
pop
adc
mov
xlat
xor
xor
cmp
jb
push
jne
push
mov
cs
sub
lahf
sub
repz
push
out
mov
call
xor
sbb
rcl
jbe
inc
lcall
mov
lods
insb
mov
aas
lods
or
mov
and
ret
push
ss
push
xchg
mov
cmc
or
and
jb
rcr
push
lds
sub
adc
mov
push
or
jecxz
addr16
mov
sahf
outsl
and
jbe
lock
je
adc
test
mov
sub
cwtl
es
inc
and
imul
jno
mov
repz
out
lret
jae
cmp
adc
pop
sub
mov
pop
ljmp
xchg
xchg
mov
movsb
movsl
add
fadd
fldt
sbb
out
dec
shll
popa
xlat
insl
push
test
sbb
add
sbb
in
mov
and
pop
fiaddl
mov
and
and
out
imul
pop
xchg
scas
gs
push
mov
arpl
repz
dec
sbb
sbb
je
xchg
ret
xor
xor
lahf
sbb
cltd
lahf
xchg
lock
popa
lret
pop
adc
sbb
loope
ja
out
xor
xchg
sbb
mov
ret
lock
out
mov
xchg
ds
push
shlb
push
push
inc
lock
in
add
cs
aam
and
sub
and
les
out
xor
or
mov
inc
cmpsb
fwait
pop
inc
pop
add
pop
sbb
xor
mov
mov
in
mov
cmpl
xchg
loope
cmpsb
dec
popa
ds
mov
rorl
std
jmp
fisubrl
add
pop
jl
pop
in
adc
jg
repz
loopne
mov
inc
jae
std
dec
bound
rorl
jbe
cmc
outsl
push
dec
mov
push
push
push
mov
lret
test
mov
sbb
mov
sub
mov
out
inc
xchg
je
add
or
mov
fiaddl
test
pop
enter
stc
jp
jecxz
scas
sub
daa
mov
fbld
imul
xor
icebp
out
sbb
mov
and
outsl
push
stc
mov
cmp
ror
loopne
aad
add
push
jmp
and
les
popa
dec
inc
pop
les
push
mov
mov
in
jg
xchg
or
xchg
icebp
lret
fimull
and
fdivrs
push
mov
inc
rorb
aam
sti
dec
scas
mov
in
bound
icebp
js
pop
inc
cmc
rcll
or
xchg
nop
jp
xorb
call
fmull
pop
pop
lods
icebp
sbb
jl
adc
lods
gs
mov
cmpsb
mov
and
push
push
or
xorb
pop
into
cs
lock
repnz
fisubl
inc
out
jnp
cmp
popa
cmp
add
sar
add
cmp
repnz
mov
cmp
scas
pop
setne
and
mov
mov
sub
push
test
sub
mov
in
mov
scas
adc
xchg
mov
and
inc
mov
xchg
xchg
pop
xor
stos
stos
out
push
jmp
enter
mov
dec
push
sub
xor
push
sub
insl
and
movsb
daa
lds
sti
jp
mov
mov
cld
ja
lea
icebp
int
daa
push
fwait
cli
out
mov
scas
mov
pop
mov
and
mov
xorl
cmp
sbb
out
jp
jl
push
mov
adc
jmp
dec
scas
sub
add
jle
push
pop
mov
out
xor
loope
orl
dec
inc
dec
ja
mov
shr
inc
pop
jp
notb
or
pushf
add
je
jne
mov
xlat
sbb
and
mov
adc
add
or
int3
cmp
or
outsl
outsb
insb
xchg
mov
or
addr16
jge
movsb
cld
sbb
xchg
push
jg
sbb
adc
lret
mov
jg
adc
ret
xor
loopne
mov
insl
dec
iret
in
shll
sahf
and
mov
mov
mov
rorb
movsb
cld
add
mov
mov
sub
out
xor
inc
int3
adc
cmc
movsb
lods
arpl
out
dec
add
xchg
mov
and
lds
cmpsb
cmp
loope
mov
sbb
xor
mov
adcb
aas
incb
mov
mov
cmpsl
mov
fmul
cmc
dec
imul
mov
rorl
xlat
setp
cs
popf
inc
jmp
dec
ret
div
pop
jns
movsb
out
in
std
out
xchg
dec
push
add
jne
mov
sti
stc
sub
hlt
mov
push
xchg
sub
mov
cmpsl
push
add
call
sbbb
les
mov
push
scas
push
push
pop
and
test
dec
sub
les
inc
xlat
lret
lcall
sub
sub
arpl
aaa
loop
push
mov
rol
mov
shl
jecxz
cmp
loop
rcll
inc
out
xor
sub
movsb
cmpsb
sahf
shlb
fimuls
jno
shrb
xor
dec
loop
add
or
push
dec
dec
nop
pop
mov
ljmp
jno
fnstenv
push
out
fisubrs
push
mov
call
cmp
shr
mov
aam
orb
data16
adc
fdivrl
lods
push
les
mov
inc
stc
in
xor
jns
pop
cld
into
sub
sbb
cmp
xchg
mov
or
adc
adc
loopne
out
add
call
mov
jmp
fdivs
aaa
in
xchg
inc
stos
cs
push
outsl
in
ljmp
ret
push
sbb
popa
xchg
push
dec
inc
dec
rolb
xchg
jno
lret
jno
jnp
aad
lock
das
dec
adc
test
adc
std
scas
mov
ss
pop
pop
xchg
out
sub
sbb
lods
xchg
sbb
arpl
cld
and
fmull
gs
push
mov
cmp
cmp
jecxz
jmp
jg
xor
or
sub
pop
testl
jg
push
sub
outsl
shll
cli
orl
das
xchg
cli
mov
div
mov
push
hlt
xor
es
add
rclb
out
mov
divb
dec
dec
sub
aas
mov
cmp
mov
push
inc
adc
iret
push
adc
add
imul
dec
push
xchg
shr
mov
enter
fsin
mov
bound
in
inc
push
adc
movsb
sub
jmp
cmp
sbb
mov
and
lcall
lea
ret
call
lret
mov
aam
mov
daa
jge
mov
and
idiv
aad
jne
imul
shll
mov
xorl
aam
dec
ret
cli
and
add
jp
pop
dec
inc
xlat
fisubs
test
aaa
and
mov
fsub
or
lahf
dec
adc
test
add
jecxz
jmp
xchg
vdivpd
je
and
aas
cmp
js
jbe
pop
imul
mov
decl
sbb
out
xchg
xchg
adc
push
fwait
test
jl
mov
push
xchg
jge
cmpsl
subl
jo
mov
imul
push
mov
scas
in
nop
cltd
out
push
pop
adc
subl
cmc
add
cmp
test
sbb
adc
pop
les
repz
pop
sbbl
pop
daa
out
jl
mov
mov
rcll
test
loope
add
dec
mov
call
lret
shr
and
xor
add
adc
popa
pop
jno
inc
jp
push
lcall
loope
icebp
lret
shr
and
xor
add
adc
popa
pop
jno
inc
jp
push
lcall
loope
icebp
lret
shr
and
xor
add
pop
jne
inc
jp
push
lcall
loope
icebp
lret
push
sub
sbb
mov
push
sar
mov
test
lea
gs
in
push
sub
or
sub
cmp
addr16
insl
popf
xchg
lea
fst
fucom
std
negl
or
xor
jge
insl
pop
test
xchg
and
lahf
aad
in
testl
inc
push
pop
adc
cmp
add
shll
lret
xchg
or
push
hlt
add
adc
sub
mov
and
rolb
mov
std
xchg
lods
sub
int3
add
and
repz
rol
cmp
cli
xchg
xlat
add
repnz
push
cmpsb
out
into
iret
mov
sbb
leave
sarb
jge
sub
ret
out
jb
inc
loop
fucom
mov
push
aaa
ret
lret
enter
jge
sbb
pop
inc
ja
cmp
mov
repnz
xor
mov
push
pop
aaa
cs
add
stc
pop
inc
adc
dec
push
das
push
pushl
addr16
ret
lods
and
imul
lods
fstl
hlt
cmc
sbb
sub
inc
dec
push
addr16
popf
loope
jecxz
fxch
test
xchg
xchg
mov
push
or
cmp
dec
adc
xor
xchg
pop
in
into
jl
scas
fnsave
fistpll
imul
xor
xor
sbb
sbb
popf
movsb
xlat
fdecstp
call
out
imul
pop
sbb
aaa
sub
addr16
insl
xchg
mov
fst
int
std
imul
pop
sbb
aaa
sub
addr16
insl
xchg
call
push
xchg
xchg
repnz
test
jp
lods
les
js
insl
ljmp
mov
jmp
cmp
lahf
jnp
sbb
fldl
pusha
call
cmpsl
fstps
jbe
push
push
cmp
xor
cmp
xor
lret
push
insl
mov
std
fdivrl
mov
decl
lcall
cmc
push
sbb
sbb
inc
add
add
ss
jbe
inc
mov
dec
mov
inc
xor
pop
aaa
or
add
cmpsl
and
je
push
imul
push
xchg
pushl
mov
and
xchg
sub
roll
xchg
popa
shrl
dec
adc
xlat
cmp
lods
testb
or
insl
jecxz
out
inc
repz
pop
shl
jae
scas
lds
cltd
xchg
push
loope
push
mov
ja
jns
test
int3
mov
rcrb
out
xor
xor
iret
out
or
in
clc
fcmovbe
mov
xchg
testl
push
add
mov
or
xor
push
mov
inc
jmp
out
into
push
push
nop
aaa
dec
loop
pushl
xchg
fistpl
fiadds
dec
xor
je
or
rorb
faddl
scas
mov
lds
xchg
jno
and
adc
shlb
test
push
mov
inc
out
push
int
mov
sahf
dec
daa
or
mov
clc
insb
sbb
insl
sub
cmp
imul
jl
mov
and
mov
test
outsl
imul
mov
arpl
mov
dec
lea
mov
movsl
testl
cmp
adc
xchg
xchg
mov
jbe
rcr
movsl
in
mov
pop
cmpsl
cmpsb
adc
jmp
cmp
pop
fists
adc
or
sti
ljmp
mov
xor
sub
sbb
filds
jp
fmull
pusha
out
movsl
mov
dec
sbbb
das
in
das
mov
ret
int
mov
rol
sub
movaps
sti
add
and
push
dec
out
fdivs
ljmp
add
das
sbb
pop
adc
dec
adc
ja
aam
xorb
cld
mov
sbb
push
ficoms
imul
xlat
ljmp
fisubs
rcrl
in
add
clc
cltd
jg
pop
cs
jecxz,pn
cwtl
cmc
gs
sti
popf
sub
out
scas
in
sub
repnz
shl
fsubrp
pop
xchg
insb
jle
fsts
cld
fs
mov
clc
adc
scas
mov
jnp
lcall
pusha
and
sahf
out
fwait
mov
dec
mov
test
in
mov
ret
and
mov
int
xor
fidivs
sarb
and
push
adc
dec
ror
test
push
push
jbe
cld
jl
fdivs
repz
adc
adc
lahf
insb
mov
insl
roll
or
pop
sbb
in
stc
js
xchg
fwait
sbb
lea
jb
push
mull
mov
sub
enter
xchg
mov
pop
xchg
into
and
aaa
xor
mov
jnp
mov
dec
stos
lods
mov
popl
repnz
mov
aaa
out
jbe
lret
addr16
aam
loop
mov
mov
movsb
dec
xchg
push
add
cmpsl
in
lret
aad
jno
leave
lods
je
rcrb
push
xchg
adc
jg
jle
mov
push
xor
aas
sbb
test
cmc
fs
test
clc
gs
mov
call
sub
fmuls
out
ds
inc
cmp
out
and
sub
xchg
bound
repz
scas
movsl
adc
aas
out
sbb
jno
mov
mov
cwtl
cli
mov
mov
mov
testb
jne
jmp
sbb
pop
movsb
and
xchg
insl
mov
push
xchg
push
push
dec
mov
divl
pop
aad
or
insl
int
outsl
and
add
xor
call
xor
jb
cmp
xor
push
cld
insl
mov
pusha
pusha
adc
xorl
sub
xor
dec
iret
idiv
mov
ret
dec
xchg
pop
cltd
mov
sbb
mov
or
popf
testb
mov
or
stos
sahf
pop
cmpsb
fcompl
mov
lock
test
gs
or
add
pop
dec
add
movsl
std
cmpb
mov
sub
dec
cmp
sahf
shlb
or
in
mov
jae
or
test
xlat
xor
mov
sub
dec
jle
push
push
xor
pusha
push
pop
das
mov
lea
lods
out
lret
ja
mov
lahf
cmc
push
sbb
mov
add
add
inc
outsl
xor
inc
std
xorb
lret
and
mov
sub
ret
mov
out
xchg
mov
cwtl
sti
mov
dec
inc
nop
sub
fidivrs
aam
icebp
cltd
ss
cmp
jle
inc
pop
push
add
scas
lds
pop
pop
notb
pop
xchg
xchg
jecxz
frstor
mov
int
adc
imul
insb
rol
rorl
aaa
movsl
out
or
fwait
movsb
sub
ja
inc
das
jg
outsb
iret
push
addl
mov
imul
outsl
icebp
icebp
xchg
adc
mov
adc
rcr
int
push
pop
out
fisttps
xor
lcall
adc
insl
iret
adc
pop
xor
nop
push
sbb
pusha
dec
out
mov
pop
fnstenv
xor
and
dec
mov
cmp
lret
out
or
shr
in
mov
mov
pop
xor
stos
and
scas
loop
mov
dec
les
nop
mov
stos
cwtl
dec
jb
inc
subl
call
jne
stc
int
lea
out
adcb
or
adc
jle
int
xchg
pusha
lods
xchg
stos
xchg
icebp
sub
ds
daa
push
push
movsb
add
fisubl
pop
xor
mov
jbe
int
in
inc
mov
push
cmp
orl
fpatan
xor
cmp
xchg
in
xlat
pop
mov
mov
cmc
xor
in
aaa
push
sbb
jns
pop
repnz
lds
inc
inc
pushf
out
sar
movsb
jo
movsl
or
gs
fnstsw
xor
adc
jl,pn
adcb
or
xlat
imul
inc
scas
lea
cmp
mov
dec
mov
xchg
sti
enter
fsubr
daa
rol
add
daa
pop
gs
mov
ds
nop
mov
out
sub
jge
in
mov
inc
repnz
mov
mov
lods
lds
or
in
in
loop,pt
scas
adc
xor
add
stc
add
inc
adc
xchg
fidivrs
adc
mov
sti
push
daa
xlat
push
aaa
addl
negb
dec
leave
rcrl
xchg
lds
loope
cld
mov
pusha
cltd
lds
and
and
jnp
and
fdecstp
xchg
pushf
lods
sbb
out
push
into
hlt
in
ficoms
add
nop
fsubr
mov
aaa
jno
stos
mov
xor
jmp
jg
out
lahf
nop
add
and
mov
mov
dec
bound
mov
pop
aad
fadd
mov
mov
xchg
mov
pop
inc
or
jae
mov
adc
mov
ret
cmp
sar
pusha
pop
fcomip
pop
outsb
rolb
into
insb
push
into
bound
fcomps
cmp
pushf
leave
pop
push
push
cmp
push
pop
pop
xchg
and
adc
mov
adc
fwait
inc
mov
mov
js
mov
cs
es
lahf
add
mov
add
sahf
daa
mov
xchg
dec
shrl
in
cmp
xor
pop
fdivl
fisttpll
xor
aam
sbb
pusha
jge
stc
aam
mov
jge
sbb
jg
sbb
call
jecxz
clc
es
fldenv
sub
push
push
out
sbb
inc
mov
mov
out
and
push
hlt
cmp
inc
inc
outsl
out
inc
ja
pop
dec
xor
add
pop
mov
lds
pushf
cli
xchg
bound
xchg
outsl
jmp
into
lods
push
mov
rorb
fsubl
outsl
nop
dec
sub
lret
jmp
les
and
push
push
xchg
jle
and
sbb
push
sarl
lock
in
add
ret
dec
mov
decl
push
or
insl
mov
shrb
mov
rcrb
fadds
outsb
mov
loopne
mov
insb
mov
push
push
and
xlat
arpl
pop
adc
mov
leave
imul
cmc
cmp
lock
jns
add
cvtdq2ps
push
aas
jnp
movsb
shl
inc
cmpsb
mov
inc
dec
mov
xchg
sub
fsts
xchg
xchg
in
fildll
and
xchg
push
ret
lock
fdivs
pop
mov
imul
inc
xchg
sahf
into
cli
pusha
aad
push
rcrl
loop
xlat
pop
loop
mov
fwait
js
in
imul
mov
mov
and
xchg
aas
ss
icebp
xor
push
pop
or
in
pop
dec
insl
in
adc
imul
gs
out
push
dec
stos
clc
cmpsb
sahf
xchg
nop
mov
seto
ss
inc
repz
mov
daa
cwtl
in
jg
inc
cmpl
lret
mov
pop
in
xchg
dec
fidivrs
adc
inc
out
inc
loop
inc
loope
test
lret
xchg
out
pushf
arpl
or
xorb
mov
pusha
jno
adc
and
dec
jne
mov
repz
push
mov
cmpsl
in
xchg
pop
mov
pop
shrd
sarl
pop
in
int3
loopne
ret
popa
mov
negl
cli
negb
in
popf
pop
les
sbb
xor
sbb
stos
or
cli
and
imul
adc
addb
mov
bound
jne
dec
dec
pop
sub
rcrb
mov
out
mov
xlat
xchg
enter
sbb
mov
xor
sub
pushl
xor
sub
add
mov
pop
lret
insl
sub
mov
jmp
mov
pusha
add
mov
aas
sti
mov
insl
jecxz
loopne
imul
xor
test
jae
cmpsb
shlb
rolb
dec
bound
dec
mov
int
fiadds
es
sbb
fdivl
lods
lret
orl
inc
cmp
adc
push
inc
es
addr16
adc
mov
adc
pushf
xchg
lds
mov
int3
xchg
negb
shrb
inc
or
mov
and
out
cs
pop
pop
xor
add
rcl
and
push
pop
dec
xchg
lods
insb
lcall
in
xchg
call
stc
cmpsb
lret
pop
adc
push
dec
mov
xchg
or
into
dec
jmp
push
aas
push
mov
jbe
jg
fcmovne
scas
idivb
test
push
ljmp
pop
idivb
adc
mov
or
pop
add
or
in
popf
xor
movsl
jg
sbb
jg
aam
add
popa
jb
and
test
stos
pop
adcb
jno
add
rol
push
xor
jecxz
xor
mov
push
mov
cs
xchg
stos
cli
lcall
push
imul
jne
enter
rolb
fistl
sbb
pop
out
stos
outsl
fldenv
out
jmp
in
inc
pusha
je
and
test
and
xlat
das
sub
ud2
dec
add
stos
pop
into
jg
sti
sbb
mov
mov
adc
shll
sub
in
movsb
shll
iret
inc
mov
mov
gs
adc
or
adc
loop
mov
in
jb
out
imul
mov
mov
add
sub
js
sub
xor
cmp
inc
test
sti
pop
movsl
add
add
inc
shrl
mov
sbb
lahf
test
inc
scas
cltd
inc
pop
aas
pop
pop
mov
cmp
insb
pusha
cwtd
add
sbb
adc
cltd
add
cmp
repz
in
out
and
and
mov
scas
aas
adc
aam
sub
push
xlat
inc
lahf
dec
jae
adc
mov
sub
out
lods
fimuls
adc
add
cmp
xchg
jne
mov
outsl
xor
jge
or
data16
push
insl
daa
repnz
repz
xchg
cwtl
pop
inc
cmpsl
push
push
xchg
lret
into
andl
adc
insb
adc
fmuls
jmp
stos
repnz
call
es
mov
mov
xchg
loope
adc
or
adcl
inc
dec
roll
pusha
mov
dec
stos
repnz
push
fildll
xchg
and
out
in
mov
cli
inc
push
js
xor
xchg
jno
loopne
cmpsl
xor
fnstenv
and
pop
outsl
or
jmp
cmp
sbb
mov
sub
pusha
sub
and
sbb
inc
or
ja
rcrb
shll
pop
data16
push
jno
mov
and
enter
movsl
mov
push
inc
fwait
out
mulb
mov
into
xor
stc
mov
mov
icebp
cld
jae
lds
xor
popa
mov
cmp
push
xchg
ret
mov
push
push
or
orl
lahf
mov
repnz
cmp
mov
dec
mov
icebp
add
addb
mov
fisubs
lods
ds
and
sti
cwtl
cltd
out
lahf
bound
push
add
inc
jmp
jbe
or
scas
pusha
roll
ljmp
pop
dec
mov
pop
add
outsb
ret
pop
pop
mov
jl
movsb
test
pop
mov
and
or
xchg
pop
mov
fdivl
movsb
mov
shr
pushf
jecxz
push
mov
out
das
ja
aaa
push
mov
lods
push
dec
das
lret
fstl
test
dec
and
xor
lret
dec
xchg
out
sahf
hlt
xor
in
jmp
sbb
dec
outsl
ffree
jg
lods
mov
das
adc
jecxz
scas
jne
mov
dec
outsl
sbb
adc
mov
sub
add
sbb
and
repz
jbe
clc
mov
inc
sbb
sahf
mov
shll
sahf
adc
sub
cmp
mov
cli
shrb
cmp
xchg
sub
pop
inc
pop
test
and
jl
mov
push
mov
nop
push
inc
es
js
and
and
xor
test
fstpl
out
cli
xchg
pop
shrl
bound
fimull
sub
mov
dec
mov
test
mov
and
scas
push
in
mov
fs
mov
in
in
push
and
push
adc
rep
adc
cli
and
xchg
fwait
testb
lahf
inc
dec
adc
inc
pop
pushf
outsl
stos
into
test
pop
inc
xchg
aad
add
lret
lea
pop
xor
fs
cld
out
mov
lea
xchg
fsubs
and
add
mov
lret
cli
mov
adc
js
ja
push
rcll
add
push
out
int3
pushf
sbb
mov
mov
cmp
dec
test
pop
sti
jae
mov
cmpsb
bsf
fbld
ljmp
lahf
out
sarb
pop
test
in
jge
mov
or
ret
jno
loopne
sub
adc
loopne
xor
push
mov
inc
addr16
add
pop
and
popa
adc
fsts
call
popa
pop
jmp
rcll
sub
stos
repnz
jae
dec
sarb
jg
int3
jecxz
cwtl
xorl
adc
rcl
jns
repz
push
xor
daa
jns
dec
sbb
mov
lock
sub
lret
lea
int
cmp
mov
push
xor
test
jae
mov
loopne
xchg
fsubr
test
add
imul
push
mov
icebp
les
add
jecxz
lds
ja
mov
dec
mull
push
pop
les
push
jo
dec
sbb
das
adcl
push
mov
aam
push
lret
mov
push
or
mov
xor
or
mov
lods
inc
or
bound
mov
sub
int3
mov
std
jge
scas
out
iret
js
sub
rolb
pusha
xor
notb
call
imul
sub
cmp
jle
mov
mov
dec
testl
or
dec
jnp
sub
mov
popa
dec
loopne
aad
jg
mov
stos
cmp
in
nop
pop
addr16
push
jbe
jae
lods
fcomps
mov
xor
mov
xchg
xor
cli
imul
ljmp
sbb
test
popa
xchg
shlb
lds
test
out
in
cmp
inc
test
aam
mov
sub
lods
dec
bound
lock
not
adc
jge
push
sti
int3
push
or
lcall
imul
fcompl
add
inc
pusha
or
or
jnp
inc
sbb
sub
push
stos
iret
dec
in
dec
sub
popa
dec
test
pop
pop
jno
lods
cmp
test
pop
and
mov
pusha
or
and
shlb
push
push
bound
mov
fsubs
mov
xchg
test
mov
lcall
aaa
sbb
cmp
cmc
mov
xchg
jb
dec
inc
xchg
sbb
sub
mov
sub
xchg
add
jb
ds
std
fsub
loope
sub
xchg
imul
insl
or
ljmp
jp
ja
outsl
mov
and
mov
or
lcall
rcrl
mov
mov
sub
fistl
sub
push
mov
cld
jno
mov
fwait
lea
dec
cmpsb
cmp
jno
dec
xor
adc
fs
pop
loope
pop
adc
in
sti
lods
mov
movsb
out
push
aad
aaa
sarb
jnp
stos
fwait
bound
in
clc
fildll
sahf
js
and
cmp
ss
rcll
add
les
pusha
not
mov
jb
and
xchg
push
jle
mov
xchg
pusha
xchg
fsubs
mov
or
scas
cmc
pop
and
cmp
outsl
fwait
out
and
dec
faddp
push
aaa
lea
add
or
push
add
jb
and
add
in
mov
and
test
inc
bound
xor
int
cmp
imul
sub
xchg
dec
lret
out
and
xchg
in
rclb
lret
or
push
imul
jmp
repnz
adc
adc
jo
inc
bound
or
inc
enter
add
pop
push
xor
mov
loop
leave
into
lock
out
xchg
out
dec
dec
shlb
lcall
cmpl
push
fwait
xor
inc
rcrl
lock
jb
ret
jl
xchg
out
sbb
xchg
cmp
popf
insl
popf
dec
cwtl
xor
andl
mul
dec
call
cmpsl
inc
inc
fldcw
ds
bound
xchg
jae
sub
or
jg
sub
dec
popf
and
mov
fs
jge
test
loope
cli
sub
aam
dec
inc
cmpsb
movsb
popf
out
mov
outsl
push
inc
mov
jl
jnp
mov
faddl
sti
xlat
data16
mov
fsubl
xlat
pop
sbb
jge
dec
stc
cld
sbb
inc
rcl
lret
clc
lds
sbb
mov
pop
mov
loopne
xor
hlt
iret
adc
or
pop
cmpsl
fxch
pop
mov
inc
popa
loop
dec
scas
sahf
add
shlb
mov
xor
in
js
popa
xchg
cmpsl
fwait
outsb
js
movsb
xor
scas
shll
rorb
pop
mov
push
and
sub
adc
cmpsb
xchg
daa
enter
xchg
xchg
jns
sti
ret
jg
sub
mov
andl
jmp
ds
test
leave
cmpsb
xchg
gs
push
adc
jecxz
inc
jne
outsb
movsl
movsl
mov
mov
daa
push
or
fstl
sahf
sar
pop
mov
or
outsb
and
cmpsl
cmp
xchg
sahf
pop
mov
push
lea
fst
int
std
imul
pop
sbb
aaa
sub
addr16
insl
xchg
mov
fst
int
std
imul
pop
sbb
aaa
sub
addr16
insl
xchg
mov
fst
int
std
imul
add
xor
inc
pop
dec
dec
arpl
imul
ffree
int
std
ja
pop
sbb
aaa
pop
xor
fbstp
cwtl
add
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
and
dec
xchg
nop
test
adc
pop
push
add
pop
add
add
add
xor
inc
add
sub
js
flds
or
sbb
add
jns
pop
add
add
fldl
sbb
cmc
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
or
sbb
pushf
add
add
add
add
add
add
mov
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
jno
xor
add
xor
inc
add
push
add
push
add
fs
add
add
add
add
outsl
add
add
enter
inc
add
add
xor
sbb
add
insl
add
add
jbe
inc
add
movsl
add
add
aam
int3
add
push
add
add
add
add
add
add
add
add
dec
add
add
add
testb
add
add
add
add
add
adc
add
sub
add
add
add
add
add
add
add
in
add
xor
inc
add
add
or
add
int
cmpsb
add
add
add
add
iret
add
pop
add
add
add
add
add
add
cmp
icebp
add
inc
add
add
add
add
add
add
cmp
add
add
add
jl
jge
cmc
add
add
int3
add
sub
jns
aam
outsb
add
add
add
and
mov
add
add
or
outsb
add
lods
add
add
add
inc
add
add
add
add
add
add
add
add
loope
add
js
outsb
add
add
pop
add
add
add
push
add
jno
cmpsb
add
add
add
add
adc
cmpsb
add
add
add
add
add
add
add
enter
incl
inc
add
add
add
mov
pop
add
add
dec
add
outsl
add
add
add
add
add
add
dec
add
add
dec
add
add
add
jecxz
dec
add
add
lcall
add
pop
add
add
mov
add
xor
mov
add
mov
mov
add
add
add
add
add
add
dec
add
push
add
add
xor
int3
add
add
add
add
add
add
add
add
add
xor
cmp
loope
jecxz
stos
add
add
add
lcall
add
out
add
add
outsb
add
add
add
adc
cmp
xor
sub
jecxz
sub
add
sub
add
cmp
cmp
ds
add
push
add
add
add
add
add
inc
add
add
add
add
add
add
int
xchg
add
add
outsb
add
add
add
dec
add
add
add
sub
and
dec
into
int3
pop
mulb
popf
orl
pop
mov
lahf
mov
test
xlat
push
pop
push
jp
pop
out
sub
in
jb
mov
push
pop
pop
pop
in
adc
je
out
ret
das
push
movsb
mov
push
lahf
jbe
xor
mov
roll
sbb
add
je
jae
pop
cmp
insl
mov
aad
in
adc
insw
sub
stos
sar
push
shl
loop
adc
int
sbb
sub
mov
xor
cli
adc
pop
scas
mov
sti
fisttps
xchg
push
adc
shrl
inc
cs
xchg
push
and
cmp
mov
mov
mov
sti
leave
pop
js
lahf
lds
or
les
inc
push
and
orl
add
test
dec
sub
and
push
and
sbb
push
inc
fmul
push
loope
test
sbb
xchg
mov
push
shlb
push
movsb
mov
leave
lret
mov
mov
fs
cs
jp
sub
stos
gs
xor
stos
out
cld
xchg
xor
add
xchg
movb
call
cmpsl
inc
sbb
push
cs
jecxz
lret
imulb
inc
add
cmp
mov
call
xor
push
xchg
gs
cmp
pop
cmc
adc
imul
sti
aaa
shrl
aaa
mov
add
test
test
and
push
jnp
adc
mov
cmp
fidivrs
sbb
add
mov
jo
outsb
stos
sub
push
adc
or
in
dec
push
mov
mov
and
lods
roll
sub
push
scas
inc
mov
sub
pop
lret
push
fs
xchg
cmp
aam
mov
dec
stos
repz
or
addr16
lret
out
adc
jnp
push
stos
xchg
insb
jle
mov
outsl
sub
scas
xchg
or
cmp
das
push
roll
jle
lret
daa
mov
outsl
dec
cmpsl
inc
push
push
repnz
clc
pop
pop
and
cmpsl
pop
ds
out
push
faddp
cs
adc
les
adc
inc
aam
jb
pushf
addl
bound
push
cmp
ret
cmp
fs
inc
jmp
jmp
pop
inc
adc
jbe
scas
adc
adcb
data16
xor
lods
and
sbb
add
lods
adc
daa
test
sub
sbb
fnsave
outsl
ret
cmp
sbb
xchg
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
