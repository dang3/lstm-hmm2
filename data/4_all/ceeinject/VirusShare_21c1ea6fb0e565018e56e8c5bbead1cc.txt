call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
popf
pop
xlat
mov
xor
nop
xchg
push
xor
push
adc
popa
push
jae
inc
aaa
push
shlb
notl
cmpsl
shll
add
mov
pop
push
push
jno
add
push
fidivs
into
mov
sub
xchg
sahf
fisttpll
leave
inc
pop
push
or
bound
ss
sbb
push
mov
xlat
fildll
imul
dec
or
fwait
push
jae
jmp
das
add
xsaves
pop
mov
inc
loopne
or
mov
popa
cwtl
imul
lret
inc
mov
mov
fwait
xor
leave
mov
scas
pop
inc
lods
test
aaa
mov
jno
xor
mov
mov
cmp
popa
addr16
in
andb
addr16
sub
rolb
mov
leave
cmpsl
rorl
test
jb
ja
lods
xor
jo
push
iret
scas
daa
popa
xlat
or
nop
jp
cmp
pushf
sub
cwtl
jbe
pusha
pop
mov
inc
aaa
aad
mov
loopne
xchg
loope
icebp
cmpsl
sbb
idivl
outsb
pop
pop
dec
jns
mov
mov
add
mov
movsl
test
mov
addr16
je
jne
js
push
jae
inc
add
in
lock
mov
mov
ret
repnz
and
bound
fs
scas
mul
testb
xchg
icebp
cmpsl
shll
add
pop
popa
pop
jno
inc
aaa
push
mov
notl
cmpsl
shll
add
pop
popa
pop
jno
inc
aaa
push
mov
lahf
mov
sbb
and
cltd
addr16
mov
sub
lcall
ret
lret
ret
sub
ja
jns
lcall
xor
dec
outsl
dec
into
js
int3
insb
and
sarb
popf
xlat
xchg
insl
movsb
inc
lret
daa
imul
daa
loop
add
stos
pop
rcl
pushf
jnp
jae
negl
rcll
lret
push
std
mov
lods
push
int
cmpsb
rcrl
xor
jmp
adc
aas
inc
sbb
out
xchg
jg
ret
test
xchg
mov
jmp
mov
cmp
aaa
cmp
dec
mov
movsb
incl
xchg
fnstcw
dec
xchg
xchg
cltd
enter
outsb
mov
mov
xchg
pop
mov
dec
cmp
xlat
xchg
shlb
pop
clc
xchg
push
fbld
and
cmp
push
mov
imul
movsl
sbb
data16
fs
adc
sub
dec
notrack
divl
hlt
test
movb
outsl
ja
push
pop
push
mov
addr16
decb
sub
dec
aas
rcr
int
push
test
in
mov
inc
sbb
ret
add
cltd
mov
jno
clc
in
das
in
shrb
or
sub
imul
mov
sub
imul
sub
insl
out
pop
mov
inc
std
push
or
gs
pusha
lcall
rcl
mov
dec
cmp
arpl
ljmp
jno
jb
and
adc
loopne
fadd
rolb
xchg
cwtl
mov
push
jle
dec
dec
shr
mov
dec
jmp
rcll
out
aas
jno
mov
out
and
adc
jnp
aas
jae
pop
push
xchg
sbb
jecxz
out
movsl
pop
mov
adc
imul
sbb
arpl
xchg
mov
jb
sub
sbb
sub
mov
xor
pop
push
mov
jg
push
push
jmp
adcl
and
fldt
incl
lret
xchg
dec
ret
pop
mov
into
dec
jbe
and
xchg
adcb
push
mov
dec
jmp
push
xor
xor
call
rolb
mov
push
lahf
movsb
inc
in
add
adc
dec
filds
std
cmc
jecxz
loope
mov
imul
jmp
popf
pop
mov
pop
notb
rclb
in
out
dec
fs
and
mov
add
scas
xor
push
xor
sbb
scas
sub
and
jo
outsb
inc
ljmp
mov
sbb
inc
xchg
js
dec
frstor
lods
out
push
jp
xor
mov
pushf
or
divl
xchg
clc
test
mov
mov
cltd
loop
shl
inc
mov
icebp
cmp
adc
pop
pop
mov
stos
mov
sbb
mov
pop
mov
push
in
enter
adc
out
repz
cmpb
es
testl
data16
jmp
sub
sbb
mov
aad
nop
movsl
mov
pop
pop
push
outsb
cmpl
aad
rcrb
scas
dec
mov
bnd
or
shrb
shr
movsb
imul
inc
cld
sub
jp
add
lods
daa
inc
dec
fcoms
pop
xlat
dec
mov
push
shrl
xor
aam
adc
and
push
jmp
or
pop
mov
sub
sbb
push
lahf
xor
mov
add
push
stos
inc
pop
int3
lret
and
loopne
mov
sbbb
jae
sbb
or
jge
enter
imul
pop
hlt
pop
push
aam
sbb
xchg
adc
cmc
call
pop
push
jns
dec
das
push
sbb
stc
ret
adc
jb
lea
lea
popf
xchg
or
fsubrs
shr
or
adc
fimuls
push
jmp
jg
nop
mov
out
or
push
int
or
adc
aam
pop
setbe
or
add
mov
cld
cmp
ss
ljmp
mov
subb
int
fisubrl
scas
and
icebp
add
mov
iret
mov
push
mov
mov
xchg
mov
fs
enter
mov
dec
mov
mov
push
hlt
pop
pop
stos
mov
insl
lret
push
pop
dec
adc
data16
sub
push
insl
cmp
fsubr
mov
mov
outsl
ljmp
or
popf
fwait
sub
sbb
inc
push
inc
repz
stos
mov
or
clc
or
fwait
mov
push
mov
mov
mov
int
lock
fnstsw
fnstcw
rcll
sub
xchg
cmp
cmpsb
sub
jg
jne
push
loope
cld
faddp
cs
inc
mov
out
sub
and
in
insl
rcr
xor
ficoml
mov
fists
mov
push
jp
push
popf
out
mov
popf
in
pop
lock
lret
outsl
cmpsl
xor
mov
pop
and
mov
xchg
cmp
je
push
inc
cmp
loop
jbe
jae
sbb
es
xchg
mov
mov
dec
mov
cmp
test
cld
and
pop
adc
push
rcl
xor
ja
incb
mov
lea
pop
inc
cli
dec
inc
xchg
jecxz
loop
sbb
hlt
arpl
fwait
ljmp
cmp
test
enter
in
mov
and
inc
inc
mov
aas
lahf
shl
iret
and
jns
imul
cld
sub
mov
sbb
mov
inc
push
js
adc
xlat
fdivs
pop
jmp
cwtl
push
ljmp
add
fld
lods
jecxz
lods
bound
cmpsb
orl
mov
repnz
fwait
or
in
fmulp
mov
mov
inc
inc
mov
mov
xlat
lcall
loope
ja
push
mov
bound
pop
jle
lret
sub
mov
js
fs
aas
mov
push
or
jae
aaa
push
ja
push
dec
fcomip
sbb
daa
fldcw
xchg
hlt
outsl
loope
cmpsb
push
xor
xor
std
or
push
adc
test
cmp
sub
out
aaa
sub
pusha
movsb
push
push
add
sub
in
leave
test
stc
xchg
imul
hlt
test
int
push
popa
dec
inc
and
into
or
push
push
js
fisttpl
sub
loope
inc
sbb
lahf
fidivrs
add
and
sbb
hlt
inc
mov
ret
mov
push
pop
xor
ljmp
xor
sbb
lret
sub
std
sahf
push
hlt
mov
xchg
mov
subl
sbb
leave
addl
clc
incl
push
clc
cwtl
xor
movsb
fwait
dec
push
iret
cltd
repz
xchg
repz
jge
dec
arpl
sub
outsb
mov
pusha
dec
mov
and
lret
movsl
xchg
call
push
sbb
pop
push
mov
nop
int
lret
xor
mov
lahf
js
divl
pusha
jbe
stc
rcrb
jmp
jb
es
mov
inc
and
sbb
clc
shll
sub
or
repnz
leave
rcr
xchg
lock
mov
inc
or
stc
popf
inc
mov
pusha
mov
and
inc
std
andb
adc
aad
xchg
cwtl
mov
loopne
sub
dec
ja
rclb
sbb
pop
inc
pop
dec
in
xchg
clc
sbb
add
das
call
int3
call
ret
imul
mov
shll
imul
dec
ljmp
ret
xchg
sbb
xchg
dec
rolb
addr16
dec
dec
ficompl
adc
out
lea
and
out
push
adc
scas
mov
push
inc
adc
mov
out
xor
into
popf
add
xchg
push
sub
cmpsb
and
xchg
popf
inc
adc
aaa
sbb
out
mov
cmp
push
and
dec
inc
sub
cmp
cmp
std
inc
push
int
pop
mov
adc
in
loopne
in
add
cli
sub
pop
in
add
mov
xor
iret
push
add
mov
subb
pop
stc
js
cli
test
inc
insl
ret
lcall
jp
push
sahf
ror
cmpsl
jl
pop
iret
or
pop
inc
fistpl
mov
movsb
mov
dec
and
adc
xchg
data16
dec
mov
sbb
pop
jne
push
jge
sub
mov
ljmp
dec
jae
push
pop
mov
ret
xchg
test
push
fstps
shl
xchg
xor
xchg
test
into
sub
jp
push
jl
push
inc
dec
pop
push
nop
jns
sahf
inc
mov
orl
test
js
inc
xchg
inc
lcall
jle
aad
inc
add
addl
gs
and
jnp
push
loope
cmp
mov
sbb
xor
insb
push
push
mov
sbb
flds
dec
inc
mov
mov
shlb
mov
add
ss
filds
and
dec
mov
icebp
sbb
mov
push
jmp
imul
or
sbb
sub
xor
fidivs
pushf
mov
gs
ljmp
in
push
js
jne
sbb
mov
dec
or
repnz
ja
test
xor
mov
jo
sbb
xchg
cli
mov
inc
inc
lea
data16
lods
aam
add
jno
cmp
push
icebp
mov
or
pop
sub
xor
daa
xchg
or
xlat
add
mov
ljmp
in
mulb
movsb
inc
pop
cltd
push
xchg
aam
cmc
push
push
xor
mov
inc
je
lret
rclb
mov
in
mov
inc
jb
fnstcw
iret
jnp
out
pop
lahf
loopne
xchg
dec
mov
lahf
mov
roll
mov
pusha
imul
push
subb
into
push
hlt
cmpsb
stc
data16
pop
mov
mov
mov
push
push
es
stos
xor
incl
mov
xchg
cmp
xchg
mov
sub
int
lcall
or
push
das
jno
xchg
xor
sha256msg1
rcr
insl
jae
xchg
jecxz
cmp
mov
addr16
xchg
aaa
outsl
sub
clc
mov
dec
rcl
das
nop
cltd
mov
test
pop
jns
xchg
sti
fstpt
xchg
or
push
xor
cmp
scas
xchg
inc
dec
loop
or
out
cmc
dec
enter
cmp
xchg
push
mov
sbb
iret
ret
and
rcrb
push
sbb
push
push
fldcw
push
pop
jecxz
ds
inc
push
int3
pop
fucomip
cwtl
int3
or
rcl
jp
fmuls
adc
fstps
mov
shll
fcoml
and
push
jns
xor
loope
mov
jge
icebp
fsubr
inc
jo
mov
aas
in
xchg
sar
push
xchg
dec
add
jbe
lcall
fcomp
data16
dec
aas
mov
pop
pop
push
add
and
std
ss
inc
xchg
out
fistpll
pop
sahf
cwtl
loop
test
stos
repnz
das
dec
lahf
popf
loopne
or
decb
lods
fldenv
out
and
jmp
sar
mov
xchg
or
pushf
adc
sahf
push
jge
enter
sbb
arpl
lcall
mov
andb
mov
and
aad
mov
ficoml
inc
adc
jne
fs
add
add
push
jl
out
dec
or
cmc
pop
sbb
fisttpll
push
inc
repz
lret
movsl
shll
dec
leave
nop
xchg
xor
scas
xchg
xchg
fwait
stos
in
sub
and
pop
sbb
add
mov
lods
mov
mov
imul
hlt
rcll
lahf
mov
jnp
pop
mov
xchg
lds
mov
xchg
cmp
repz
sub
adc
push
arpl
sub
in
inc
stc
ret
daa
sub
dec
mov
mov
push
addr16
add
loop
and
adc
lock
ffreep
xchg
xorb
xor
cmpsb
lret
jg
push
dec
or
and
dec
push
xor
fcom
cmpb
mov
lods
or
dec
fs
cmp
into
adc
adc
mov
sub
and
add
enter
xor
dec
mov
adc
scas
std
scas
jo
cli
cmc
cwtl
repnz
pop
add
mov
mov
out
popa
mov
mov
add
xchg
pop
addr16
jecxz
pop
ds
rcrl
sub
or
pop
pop
adc
pop
or
popf
cli
jecxz
adc
cmp
mov
int3
xchg
cltd
mov
out
mulb
and
and
sub
and
arpl
imul
xchg
jecxz
cmp
mov
js
mov
movzbl
int3
sbb
push
lods
scas
cmpsl
cs
ret
bndldx
mov
cmp
push
fwait
cmp
call
subl
cmp
jo
jmp
dec
scas
out
std
inc
fldenv
cmp
jg
mov
sbb
mov
test
out
xchg
arpl
mov
jmp
pop
xor
rcl
push
out
scas
enter
mov
fidivrl
fbstp
dec
cmp
imul
dec
sbb
xor
icebp
xchg
dec
mov
sbb
imul
int
nop
sbb
or
jne
out
or
xlat
sub
mov
cltd
cmp
push
push
xor
lcall
icebp
jg
rolb
mov
cmpsl
jns
and
gs
push
lods
sub
pop
mov
rcrl
push
sbb
imul
jb
inc
push
addb
jb
cmc
push
jbe
icebp
loope
sub
cld
popf
orl
and
fisubrl
dec
mov
dec
mov
xchg
xchg
std
cmc
and
fwait
and
insb
add
push
out
pop
mov
xchg
push
jb
mul
and
push
inc
xor
adcb
pop
leave
jp
push
shlb
xor
in
sub
js
sbb
add
add
aas
jns
ret
in
jnp
out
pushf
repz
sbb
imul
popf
dec
subb
popf
cs
or
jl
pusha
cld
int
ljmp
and
dec
pop
enter
lret
cmp
cmp
pop
cmp
xor
in
sub
mov
int3
xchg
iret
cmp
cmp
push
out
xchg
or
cmp
movsl
std
bound
cmp
jecxz
mov
in
cmp
ss
in
mov
mov
add
add
jne
xchg
icebp
push
popa
add
pop
es
xchg
sbb
and
mov
xor
mov
jo
lods
jno
pop
sbb
adc
inc
pop
sub
mov
arpl
push
add
or
int3
lea
lock
push
jae
cltd
repz
and
lea
in
dec
enter
sbb
or
stc
add
into
push
outsb
mov
rcrb
push
cltd
outsl
mov
ljmp
mov
mov
insb
push
adc
sub
push
and
adc
mov
mov
xlat
gs
out
or
lret
hlt
push
push
pushf
notb
or
sbb
cld
es
dec
out
jb
add
push
js
xor
cwtl
lds
push
inc
mov
jbe
pop
and
nop
bnd
fdivl
scas
mov
jle
rcrb
or
xchg
into
adc
xor
sbb
or
rol
dec
and
mov
inc
lcall
mov
dec
gs
mov
push
mov
call
and
arpl
sahf
sbb
pop
cmpsl
sub
cs
mov
mov
push
pop
pop
mov
or
mov
in
insb
jo
cmp
jg
xor
outsb
dec
push
jbe
test
out
mov
mov
pusha
pop
xor
stc
test
dec
mov
scas
fsubrl
dec
fstpt
jbe
sub
pop
add
adc
mov
push
inc
in
xlat
or
sub
mov
xlat
mov
add
push
call
lock
fdivrl
cmpsb
jo
sub
div
jbe
loop
movl
mov
movsl
test
xlat
and
lahf
lods
mov
and
or
xor
adc
pop
fildl
mov
mov
bnd
jg
and
sub
sub
scas
xchg
pop
adc
push
cli
pusha
loopne
mov
in
fwait
and
test
adc
inc
xchg
xor
mov
push
scas
add
outsl
std
dec
das
fimull
mov
imul
mov
loop
jge
or
add
add
frstor
or
pop
mov
mov
loope
mov
cmp
imul
hlt
lods
dec
add
jb
and
popa
out
push
xor
sub
xchg
in
cmp
pop
sub
sub
push
addr16
or
out
dec
dec
mov
or
xchg
lret
or
and
adc
cmp
adc
pop
loope
xchg
cmpsb
mov
pop
inc
xchg
inc
push
dec
inc
adc
push
sbb
pop
xchg
mov
inc
sbbl
dec
dec
ret
popa
insl
sbb
and
sahf
out
cmpsb
jae
adc
sub
shll
rcrl
sti
push
ret
pop
xchg
int3
fcoml
xchg
mov
lcall
pop
aam
dec
mov
mov
cmp
jo
mov
cli
sub
inc
jns
pop
add
in
mov
xchg
jle
stos
leave
xchg
mov
pushf
lahf
pop
push
cltd
pushf
mov
mov
dec
cmp
lods
int
sahf
mov
sub
jl
rcrl
xor
int3
and
lods
call
out
mov
jp
mov
in
rcrb
fdivrl
push
add
mov
outsb
pop
pop
xchg
jg
aas
lock
xchg
ret
jmp
and
add
and
xor
arpl
and
add
in
popa
int3
gs
fisubs
ja
cmp
jg
int3
sahf
adc
xlat
dec
stos
xor
dec
stos
mov
fcmovne
cmp
add
xchg
push
orb
mov
sub
add
or
sbb
mov
js
xor
int3
aaa
mov
or
test
push
lds
sub
jbe
insl
arpl
mov
dec
scas
sbb
xchg
lcall
scas
pop
iret
push
push
pop
adc
adc
ljmp
cmp
jmp
push
push
stos
xor
cmc
movsl
out
push
add
cli
jb
adc
in
inc
dec
out
aad
outsb
fnop
movsb
pop
add
bound
cmp
daa
scas
push
rorl
inc
insb
test
and
popa
sbb
out
test
add
xchg
cltd
xor
inc
and
push
and
adc
clc
add
fstpt
jb
mov
test
cmpsl
xchg
add
cmc
cmpsl
mov
scas
dec
sub
sub
xchg
lret
or
and
and
push
mov
popf
fldl
add
hlt
xchg
loop
outsl
or
imul
clc
out
cli
mov
and
jo
push
sbb
dec
sub
arpl
lahf
fnstsw
int
mov
push
and
xor
stos
lods
loop
cltd
mov
lods
xlat
insl
fldcw
aad
notl
mov
ds
ds
outsl
push
test
inc
imul
adc
stos
loope
jbe
and
inc
mov
push
dec
sub
xor
sub
jge
xor
in
push
add
iret
lahf
xor
pop
inc
pusha
int3
pop
or
loop
je
inc
ja
es
into
sub
xchg
aam
test
rep
insb
mov
mov
shll
cld
movsl
and
lahf
inc
repz
dec
xchg
inc
sbb
dec
jo
and
and
cs
or
xchg
fwait
shlb
mov
dec
bndldx
jbe
rcrl
in
xchg
ret
aas
cmpsl
and
inc
jns
out
add
push
cmc
cmp
inc
and
dec
std
lods
mov
dec
add
mov
dec
aas
insb
inc
xchg
pop
mov
scas
enter
sub
cmpl
jae
lahf
pop
frstor
cmc
in
les
movsb
test
xorl
ja
lock
loope
jl
sbb
inc
sti
test
call
dec
fstl
out
jmp
rclb
push
mov
in
notl
cmpsl
shll
add
pop
popa
pop
jno
inc
aaa
push
mov
notl
cmpsl
shll
add
pop
popa
pop
jno
inc
aaa
push
mov
notl
cmpsl
shll
arpl
ja
pop
popa
adc
popa
push
push
repz
notl
daa
inc
aaa
sarl
add
jo
lahf
mov
mov
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
les
hlt
xor
inc
rcll
inc
push
lcall
adc
and
xor
les
aam
in
hlt
xor
mov
inc
adcl
out
adc
and
xor
les
hlt
inc
test
sbb
push
mov
rcrb
xchg
ja
push
pop
xchg
lea
push
xchg
jb
push
les
test
loop
mov
or
pop
sbb
dec
add
adc
into
scas
push
adc
scas
sahf
inc
mov
pop
icebp
loope
aam
mov
imul
fisubrl
pop
sub
sbbl
xor
aad
xchg
and
test
mov
inc
jno
pop
push
mov
aam
pop
and
lea
xlat
mov
into
aas
jb
push
movsl
mov
test
je
std
inc
mov
and
in
out
mov
push
push
mov
adc
rcrl
xchg
and
pop
fwait
lcall
xor
mov
inc
adcl
std
adc
and
xor
addb
jle
dec
xchg
pop
call
adc
ss
add
shlb
jge
pusha
xchg
pusha
cwtl
movl
pop
ret
add
push
in
repz
push
test
lods
jb
icebp
lea
pop
test
mov
inc
adcl
rcll
loope
icebp
les
aam
in
hlt
xor
mov
inc
adcl
rcll
loope
icebp
les
jno
pop
pop
rcr
pop
cmp
enter
into
and
divb
es
in
lods
inc
mov
jecxz
sarl
int3
scas
ja
xlat
scas
push
cltd
push
test
mov
cmpsl
pop
pop
jl
idiv
cmpsl
jnp
cmp
mov
in
mov
cmpsb
mov
ss
jmp
adc
sbb
and
xchg
lods
ret
js
xor
add
dec
add
sbb
fwait
scas
aas
pop
stc
mov
push
mov
arpl
jne
pop
sti
and
adc
arpl
arpl
push
xchg
pop
les
dec
sub
fwait
mov
sub
cwtl
xor
inc
subl
jge
hlt
orl
xchg
add
jnp
roll
adc
jge,pt
mov
pause
xchg
push
je
jns
or
fcomps
mov
adc
pop
pop
icebp
aam
sbb
mov
ret
stc
lods
clc
jl
clc
lock
xchg
jae
lret
push
clc
mov
inc
jne
leave
mov
fbstp
sbb
popa
mov
scas
mov
mov
das
shll
mov
pop
add
movb
in
add
lret
pushf
loopne
repnz
test
jmp
test
leave
sub
push
jmp
cli
cwtl
and
es
pop
lret
data16
scas
cld
mov
add
fnstsw
xchg
xlat
out
test
cmp
fsubl
or
repnz
aas
lret
cmp
hlt
pop
test
add
jecxz
sub
es
loopne
pop
adc
out
lret
inc
adc
or
fdivs
cs
adc
out
shl
into
mov
jle
pusha
pop
push
mov
test
dec
inc
lret
hlt
push
xor
stos
imul
push
dec
decl
sbb
das
js
je
iret
xor
or
or
mov
hlt
lds
fwait
sub
dec
lods
jbe
loopne
pop
popf
and
jne
inc
adc
mov
les
fisttpl
jns
testb
repz
mov
das
mov
or
ja
addb
dec
and
or
xor
mov
pop
jb
add
jae
pop
das
pop
mov
nop
test
loop
iret
js
scas
jae
aaa
shlb
mov
popa
imul
leave
ljmp
mov
icebp
sub
jne
aad
insb
loop
inc
cmp
pop
hlt
dec
lock
jno
in
popa
pop
mov
aaa
lods
in
mov
xchg
and
sub
testb
add
xor
dec
add
sub
leave
stos
jmp
dec
mov
mov
daa
push
dec
push
xchg
iret
fildl
fdivl
or
push
adc
cwtl
insl
mov
dec
mov
lods
mov
mov
flds
rolb
fcmovnu
cli
jmp
jo
mov
dec
dec
mov
fdivl
fdivl
sti
into
dec
dec
incl
sti
lea
cmp
dec
jns
inc
jno
pop
mov
ret
test
adc
push
jb
jle
inc
dec
adc
dec
sbb
test
xor
jno
fdivp
popa
ds
jns
out
inc
xchg
pop
xor
out
xchg
call
fisttpll
cmpsl
fs
daa
das
mov
or
adc
cmc
or
mov
mov
call
aam
das
inc
lcall
aas
das
jmp
repz
and
and
mov
outsl
ss
outsl
fdivl
call
fwait
jno
or
xor
xor
adc
jg
into
jmp
or
iret
fnstenv
jo
cmp
mov
aad
lret
or
xchg
mov
cs
insl
cmp
lods
jge
mov
xchg
jmp
push
xchg
popa
movb
ret
sub
pop
pop
pop
scas
sar
aas
jle
and
mov
testb
mov
lret
andl
jmp
cli
or
jmp
sub
mull
js
mov
je
jbe
adc
lds
out
popf
pop
mov
ret
mov
es
jns
xor
xor
sti
fists
orl
enter
lret
loopne
das
insb
pop
sbb
xchg
cltd
mov
cmpsb
rcrl
scas
inc
pop
mov
xor
inc
jge
ret
mov
test
aad
mov
sub
stc
xchg
fisttpl
and
pop
mov
push
dec
test
gs
inc
xchg
add
jo
cmp
sub
sub
xor
mov
push
push
loope
divl
call
cmpsl
pop
xchg
mov
ss
das
mov
cli
xchg
mov
pop
out
fcoml
xchg
shl
clc
or
push
stos
push
xor
jmp
mov
dec
pop
push
push
ljmp
loop
xor
ret
inc
and
sub
inc
arpl
pop
stos
add
xor
data16
jno
pop
imul
mov
outsl
lcall
pop
jbe
loope
jo
pop
ja
nop
pop
imul
sti
popa
mov
loope
call
shlb
adc
test
mov
xchg
pop
cmp
loop
in
adc
iret
dec
mov
stos
and
jp
aad
pcmpgtd
nop
push
jne
pop
mov
mov
ja
stos
mov
mov
push
xor
dec
cmpl
jns
andl
insl
dec
or
mov
fcoms
cli
pop
popa
jb
aad
data16
sub
dec
mov
mul
mov
lea
out
aaa
mov
xchg
mov
mov
imul
aad
ljmp
sub
cmp
dec
into
lods
mov
inc
xchg
adc
nop
mov
dec
xor
mov
mov
insb
cli
pop
add
jecxz
or
dec
pop
pushf
adc
or
pushf
add
push
in
fcoms
mov
aam
clc
mov
sub
fwait
cs
cmp
mov
add
enter
inc
movsb
adc
cmp
jno
ja
sbb
jl
bound
repz
jo
sbb
adc
hlt
cwtl
je
or
mov
outsl
adc
adc
push
repz
iret
mov
mov
hlt
adc
in
pop
inc
daa
shrb
mov
aam
das
mov
fsts
jbe
icebp
aam
aaa
push
out
lods
mov
shll
mov
or
dec
push
xor
xchg
aam
mov
cmpsl
mov
lcall
in
mov
xorl
sub
fnstcw
xchg
in
mov
cmpsb
jne
cmp
ficoml
rcll
xchg
cmp
mov
stos
mov
xchg
icebp
sarb
pushf
add
rol
in
inc
add
loop
mov
js
sub
push
pusha
aaa
pop
addr16
push
aad
in
jbe
scas
andl
cmpsl
adc
mov
bound
jmp
out
enter
fiadds
in
popa
lods
sub
jp
imull
lahf
mov
mov
jbe
not
inc
cmp
add
push
bnd
inc
sbb
push
scas
pop
lret
imul
scas
stos
push
push
pop
jns
xor
jl
jg
rorl
push
or
cld
xor
lock
scas
in
push
jnp
rorb
pop
jne
mov
into
mov
scas
xor
xchg
call
cli
xorb
sbb
int
jbe
pusha
movsb
push
and
into
fistpl
jne
xor
dec
inc
roll
inc
xor
decb
out
mov
sbb
jbe
call
scas
sub
data16
int
sbb
jle
push
aam
jbe
in
pop
push
mov
in
popf
outsl
jmp
sahf
add
stos
sahf
pop
jmp
xor
xchg
or
aam
subb
cmp
sbb
imul
pop
test
rorl
loopne
fildll
dec
fistps
adc
cmp
rcrb
sti
dec
repnz
andl
add
out
adc
push
aaa
nop
mov
lea
inc
mov
xor
dec
mov
xchg
arpl
shlb
in
mov
mov
adc
cmp
dec
or
push
cmp
iret
push
pop
pop
lret
jl
adc
mov
ret
jns
out
jmp
mov
dec
mov
pop
adc
loope
jns
add
xchg
js
shl
xor
ret
lret
sbb
xchg
cmp
stos
in
into
pop
xor
sub
mov
out
subb
loopne
cmp
or
add
orl
mov
adc
mov
adc
mov
cmp
add
push
iret
call
js
cmp
pushf
iret
mov
outsl
icebp
sbb
mov
out
cmp
adc
aad
loopne
nop
iret
movsb
ja
daa
pop
cmp
test
xchg
jmp
and
mov
loop
push
inc
icebp
cwtl
cmp
inc
fimull
or
jge
mov
addl
pop
fcmovnb
add
and
sub
push
mov
mov
or
adc
add
ljmp
cmp
cwtl
scas
adc
lods
inc
out
xchg
outsl
ret
sbb
cld
mov
fwait
subl
lahf
sub
push
mov
xchg
adc
and
inc
push
adc
push
mov
push
xchg
mov
mov
mov
sub
popf
mov
cmpl
lock
sbb
loope
fwait
mov
xchg
sub
xor
xchg
movsb
xchg
sub
dec
adc
and
add
xlat
mov
and
dec
cli
push
pop
pop
mov
hlt
xchg
pop
add
xchg
imul
dec
xchg
sbb
jne
cmp
sub
fisttps
mov
aaa
inc
jge
mov
jl
mov
jns
sub
rcl
dec
push
cmp
xor
sub
or
xor
sub
repz
ficompl
cmc
mov
cmpsb
adc
and
js
jb
mov
fistpll
addr16
sub
inc
repz
fcomip
sbb
jne
repz
jb
dec
nop
xchg
pop
sbbb
mov
loopne
jge
popa
shrl
call
or
out
pop
push
pushf
movsb
jp
fucomip
add
cmc
add
add
push
push
and
mov
inc
xor
and
out
jb
insb
sbb
push
rcll
in
lds
lods
adc
adc
mov
arpl
xchg
jp
dec
scas
scas
popf
jmp
add
insl
sbb
jge
out
xor
sbb
dec
jb
adc
or
cltd
popa
in
ret
xchg
ret
and
ds
ret
jo
and
bound
outsb
sti
pop
pop
mov
outsl
mov
mov
jle
push
in
testb
ds
dec
rorl
fiaddl
jmp
mov
push
not
adc
xchg
push
xor
push
mov
xchg
fsubp
xchg
push
jg
dec
lea
ljmp
ja
sbb
int3
test
dec
or
add
add
into
mov
inc
repnz
jns
and
push
cs
cwtl
jmp
jp
imul
in
mov
rcrl
mov
das
das
aaa
int
fcomps
sahf
add
scas
lds
das
in
fidivrl
dec
xor
pop
xchg
cmp
xor
mov
std
scas
push
mov
loop
lahf
mov
mov
je
fdivr
and
mull
popf
test
push
sub
mov
or
mov
movsb
fisttpl
ret
stos
push
int3
adcb
stc
xchg
out
vunpcklpd
sbb
test
xchg
adc
lds
xor
mov
inc
xchg
cld
mov
shlb
add
dec
int
sbb
jnp
push
pop
adc
and
jbe
mov
jo
mov
jbe
sub
mov
mov
jecxz
aas
lock
dec
loope
addr16
sub
rorl
pop
mov
in
pushf
testl
sbb
add
out
and
ljmp
xor
je
mov
jmp
call
inc
xchg
inc
pop
mov
push
lcall
pusha
addr16
pop
xor
addr16
pop
push
mov
xchg
fwait
mov
mov
loop
shll
clc
inc
jne
sbb
push
dec
xor
mov
sub
daa
xor
stos
es
aaa
mov
sub
sbb
shlb
dec
dec
out
std
enter
cmpb
mov
mov
idivl
xlat
mov
cmp
pop
push
inc
sbb
sti
cmp
xchg
cmc
jns
mov
popf
dec
sbb
push
repz
mov
dec
jge
daa
out
lods
jns
addr16
cmpsl
stc
xchg
mov
imul
arpl
scas
scas
sub
xchg
push
xor
call
mov
sub
dec
imul
inc
inc
sbb
stc
cmp
cmp
dec
movsl
popl
test
int3
mov
sbb
and
and
mov
dec
pop
clc
or
mov
add
mov
push
xchg
hlt
stc
xchg
xchg
cmp
das
add
add
sbb
push
and
xchg
and
sbb
push
inc
cs
push
add
mov
or
mov
pop
clc
adc
or
xor
xor
mov
in
loope
push
rclb
mov
insb
out
enter
dec
negl
and
push
fmul
jmp
mov
dec
mov
dec
mov
cmpps
lahf
cmc
daa
out
cwtl
jmp
xor
ljmp
jb
pop
cwtl
repz
pushl
sub
rorb
pop
mov
div
fxch
repnz
mov
jge
ficompl
inc
cmpsb
scas
sbb
loop
jbe
rclb
lea
xchg
cmp
stos
mov
mov
lret
cmc
and
int
mov
inc
xor
sbb
cltd
lods
xchg
fsubl
mov
jmp
enter
repnz
lods
lret
fsubs
jge
shlb
xchg
add
cltd
xor
rcrb
repz
sbb
je
movsb
in
fsubrl
add
je
leave
push
leave
mov
inc
lret
out
dec
push
mov
outsl
xchg
repz
bound
insb
jb
loop
add
lods
std
mov
out
pop
mov
mov
add
jae
push
outsl
popf
xchg
pop
test
mov
sub
pop
cmp
divb
ret
aad
dec
fidivs
lret
push
and
inc
jle
inc
inc
in
lods
stos
inc
cmpsl
loope
sbb
push
test
jg
or
aam
mov
loop
insl
inc
xchg
hlt
call
fstpt
push
dec
fidivs
in
std
in
or
jp
rclb
int3
dec
aaa
cmp
int
push
roll
sbb
stos
mov
int3
data16
enter
sub
mov
es
push
cmp
and
pop
adcl
inc
xchg
or
or
inc
nop
mov
loopne
mov
sahf
fadds
push
out
les
clc
cmp
js
outsb
jbe
loopne
js
dec
xor
jmp
pop
imul
and
jo
addr16
dec
push
sub
dec
bound
es
out
es
cmp
cmpsl
sbb
data16
stos
mov
mov
clc
dec
cmp
mov
test
cld
dec
popf
lods
add
aam
imul
xchg
jnp
mov
idivl
jae
and
add
sbb
mov
mov
ret
pop
add
out
cli
lods
cmp
xchg
addr16
jo
ja
xor
fildl
or
incl
xchg
gs
out
mov
mov
jae
cmp
pushf
jae
mov
add
repnz
popa
subb
out
daa
pop
testb
imulb
ret
push
cmpb
pop
out
mov
push
push
cmp
fs
mov
in
push
mov
push
pop
ja
mov
jle
sahf
rolb
sub
xlat
push
cmpsb
push
out
jp
push
sti
pop
cmpb
mov
fistpll
sbb
sub
add
push
mov
sbb
pop
ljmp
ja
cmp
test
arpl
daa
fcoms
push
or
gs
inc
xor
push
scas
mov
js
jno
lret
bswap
scas
cmp
leave
mov
xlat
dec
jae
sarb
mov
cmc
jle
push
add
mov
dec
outsl
lock
in
data16
in
pop
pop
insl
ljmp
pushf
mov
or
ljmp
ds
aaa
mov
add
imul
xor
dec
lock
in
bound
mov
cwtl
xor
jno
sti
push
pop
aaa
std
mov
adc
outsl
push
imul
icebp
sbb
xchg
xor
push
in
sub
push
mov
pop
leave
sbb
aaa
test
push
or
fstpt
filds
jecxz
sub
ja
ficompl
in
cmp
adc
pusha
jp
in
xor
mov
pusha
adc
xor
xor
rol
popf
stc
lods
test
mov
inc
mov
push
test
sub
shrb
adc
xor
orl
add
cmpsl
push
push
push
out
lds
inc
pop
sub
jnp
push
mov
add
mov
adc
enter
mov
mov
mul
imul
clc
inc
sbb
imul
jg
jns
shr
cmp
test
hlt
popl
and
incb
stc
jp
ja
scas
outsl
and
stos
out
and
inc
imul
aaa
jbe
xchg
femms
js
les
mov
inc
iret
pop
and
add
sbb
jmp
push
outsl
dec
lods
xchg
je
xchg
hlt
test
push
push
stos
stos
push
dec
or
lods
add
adc
sub
out
outsl
pop
cltd
fsubs
sbb
sbb
sbb
inc
fcomps
lea
ljmp
dec
sarl
sahf
mov
or
outsb
test
imul
mov
leave
xor
aas
pop
iret
fistpll
cmp
cmp
xor
adc
jns
loopne
inc
into
cld
inc
sbb
sub
dec
xor
int3
in
sub
test
stos
pop
add
out
push
sbb
cmp
adc
dec
cltd
std
cltd
push
xor
dec
mov
xor
shlb
cmc
stc
push
mov
fidivl
insb
cmp
jle
jo
lret
and
scas
sub
ja
lahf
rcll
pop
inc
pop
mov
testb
xchg
mov
and
outsl
dec
adc
bound
sub
sahf
xchg
adc
jnp
push
sbb
lret
jcxz
in
adc
xor
sbb
stc
jbe
xchg
mov
je
xor
in
inc
mov
dec
out
mov
orb
xor
xchg
rcrb
mov
mov
push
mov
ja
insb
mov
mov
xor
push
jbe
je
mov
sub
or
fcomps
push
inc
jecxz
pop
mov
ljmp
and
subb
int
pop
cmp
pusha
pop
cmpsb
out
test
scas
jb
stc
push
fs
mov
push
cmp
pushf
and
addr16
outsl
es
leave
sub
mov
sti
jp
mov
cmp
cld
push
jbe
insb
mov
adc
sbb
jne
movsb
or
pop
mov
in
test
sbb
lret
pop
ljmp
dec
adc
dec
push
nop
dec
adc
mov
inc
fiadds
pop
mov
and
iret
popa
mull
push
aas
dec
in
and
imul
xchg
test
stos
jge
inc
adc
cmp
jnp
into
dec
dec
mov
jb
test
and
push
jbe
push
adc
test
pop
std
mov
cld
or
inc
das
hlt
das
lea
div
push
xlat
xchg
js
inc
xor
popa
mov
mov
out
add
call
cmp
aad
idivb
movsl
test
xor
out
sub
call
xor
lret
lods
call
popa
je
jp
fcmovne
in
cs
sbb
dec
lcall
mov
icebp
mov
mov
enter
add
adc
jmp
inc
repz
sub
or
sbb
aam
inc
stos
shrl
in
adc
push
gs
cmpb
movsb
fcmovbe
mov
xchg
jecxz
fistpll
xchg
dec
jne
cmp
outsl
xchg
push
mov
icebp
jbe
data16
add
pushf
xor
adc
stos
cli
adc
mov
jl
popf
push
leave
notl
data16
or
cld
psadbw
mov
add
fs
inc
shrb
iret
movsb
ljmp
je
out
xchg
mov
flds
pop
negl
xor
adc
mov
and
jns
fstpt
push
ds
inc
cld
pushf
pop
xchg
pop
into
dec
sbb
call
pop
andl
scas
xchg
dec
repz
jl
and
scas
lret
jl
inc
mov
notl
negb
dec
sbb
cltd
and
xor
mov
inc
adcl
rcll
loope
icebp
les
aam
in
hlt
xor
mov
inc
adcl
rcll
loope
icebp
les
hlt
xor
movsb
gs
inc
adcb
je
add
adc
and
xor
in
cmc
in
hlt
jno
inc
xchg
push
movsb
loope
mov
jle
cmp
mov
pushf
test
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
aas
push
das
inc
pop
jae
arpl
pop
inc
and
repz
call
iret
mov
pop
jae
arpl
outsl
add
dec
inc
mov
repnz
jecxz
imul
sbb
iret
mov
pop
jae
arpl
outsl
add
dec
and
xchg
call
sbb
mov
xor
and
mov
in
push
xor
aas
push
test
test
sbb
addr16
movsb
push
inc
sbb
out
addb
mov
ret
sub
or
testb
out
fmuls
inc
daa
sbbl
jp
hlt
pop
sbb
aam
adc
mov
cmc
dec
sbb
insb
xchg
mov
aas
fisubrs
push
jne
sysexit
pop
adc
fidivrl
dec
ret
xor
sub
xor
scas
arpl
mov
decl
in
fsubl
and
stc
sbb
jecxz
rclb
fcmovne
inc
ret
push
fmul
test
pop
popf
mov
mov
pop
pusha
xchg
rcrl
push
das
inc
pop
jae
arpl
outsl
add
dec
and
repz
jecxz
xchg
out
sbb
iret
in
push
pop
cmp
data16
sbb
push
mov
mov
out
les
dec
das
jp
arpl
jg
sub
fs
mov
xchg
mov
testb
pop
adc
adc
arpl
xor
outsl
add
dec
and
repz
jecxz
xchg
out
sbb
iret
mov
pop
jae
arpl
outsl
add
dec
and
repz
jecxz
xchg
out
sbb
iret
mov
sbbb
and
mov
fstpl
sahf
call
and
sub
fcoms
or
inc
xor
rcr
mov
jo
mov
in
sbb
mov
lods
jo
mov
sub
cli
jg
loop
hlt
xchg
xorl
push
lock
repnz
cmp
fisubs
fcomip
push
sbb
xchg
test
push
or
iret
sub
mov
in
fwait
add
inc
xchg
xchg
add
cmpsb
subb
push
push
divb
int
xchg
push
test
gs
test
fisubrs
jmp
dec
popa
sbb
fisubs
pop
aas
jne
aam
adc
movsb
imul
or
repnz
cmp
mov
inc
jo
or
dec
in
in
pushf
jp
js
jge
or
add
cs
pop
jmp
push
or
pop
leave
jle
inc
clc
lock
ja
repz
cmp
in
shlb
test
popa
xchg
sbb
mov
int
mov
das
inc
xchg
cmp
mov
xchg
xor
aad
iret
lcall
and
cmpsb
inc
out
cs
lcall
sbb
pop
sbb
sub
jbe
subl
cmp
jecxz
push
int3
jge
sub
mov
sahf
test
push
insb
ret
rolb
sbb
adc
mov
addb
inc
mov
dec
mov
mov
sbb
add
gs
shl
xor
pusha
push
jmp
xchg
xchg
xchg
pop
mov
push
lcall
aam
insb
addb
mov
mov
dec
filds
addr16
sub
mov
dec
fnsave
jo
or
add
in
stc
xchg
outsb
add
sbb
orl
xor
sbb
inc
mov
fadds
imul
xchg
or
dec
mov
and
lret
fisttps
mov
cli
pop
scas
out
xchg
xor
jno
lcall
leave
cmp
int
out
or
outsl
or
mov
aaa
dec
pop
sub
clc
adc
mov
jle
lahf
push
sbb
xchg
inc
xor
out
lahf
xchg
mov
data16
dec
int
dec
or
fdivs
sbb
xchg
jg
clc
mov
add
dec
repz
arpl
sub
mov
andb
push
fdivrs
testb
ja
out
outsl
pop
xchg
adc
inc
cltd
out
cmc
xor
inc
scas
repnz
xchg
inc
aam
push
je
xchg
xor
cmpsb
cmp
mov
lret
dec
in
int
dec
jecxz
or
xchg
add
xor
xchg
mov
sub
rcll
pop
arpl
push
mov
sbb
lahf
repz
xor
sti
into
shl
and
sub
ds
lret
test
inc
les
sub
pop
mov
out
dec
mov
out
fisubl
popa
aaa
jnp
dec
mov
sarl
xchg
lahf
fsubrl
je
arpl
andb
int3
clc
mov
lea
adc
sbb
cwtl
push
rcrl
adc
je
aad
ret
rcll
sbb
pop
inc
pop
inc
cmp
push
xchg
xor
dec
pushf
jne
icebp
imul
bound
pxor
adc
mov
cltd
roll
dec
jl
mov
insb
in
stos
jb
dec
movsb
add
gs
arpl
jmp
addr16
inc
push
nop
adc
add
and
testb
js
das
int
les
lds
iret
cmp
mov
push
addr16
int
dec
adc
icebp
add
pop
add
sub
es
inc
wrmsr
arpl
lds
and
xchg
out
decl
jmp
ja
sbb
mov
fists
adc
hlt
mov
std
mov
repz
xchg
stos
mov
lods
ficomps
movsb
xor
test
add
xor
xor
sub
mov
add
movb
sub
cmp
lcall
sbb
mov
sbb
das
or
sti
in
pop
notb
fistl
sub
filds
xchg
mov
into
dec
inc
repz
add
in
jg
xor
mov
aam
call
fadd
jne
dec
cmp
fildll
push
pop
dec
push
fs
mov
sbb
xor
xor
dec
in
sbb
decl
enter
pop
dec
xlat
call
pop
pop
mov
pushf
xchg
and
push
rcrl
adc
popf
mov
xchg
out
xchg
add
dec
ret
mov
adc
xlat
out
les
iret
test
aaa
push
pusha
mov
mov
pop
inc
xchg
fwait
popf
xchg
inc
inc
aaa
aas
sti
pop
repz
push
cli
lahf
or
xor
repz
mov
ret
les
stc
xchg
sub
pop
pop
push
inc
xor
cmpsl
cmp
mov
in
sub
cmp
dec
dec
cmp
repnz
sbb
inc
adc
push
xor
mov
cmp
or
sub
xchg
mov
mov
int3
adc
scas
loopne
sbb
and
pushf
outsl
cli
push
dec
push
decl
xor
xchg
lahf
mov
mov
test
push
xchg
cwtl
and
mov
lahf
bound
in
sti
push
inc
adc
xchg
xlat
cmp
stc
mov
or
dec
sub
vmread
sbb
popa
test
sbb
mov
push
pop
push
mov
sti
jno
fdivrl
aaa
cli
lahf
push
cmpsl
push
fs
mov
repnz
nop
je
sahf
mov
sti
cmp
cmpsl
mov
add
loop
ret
lock
mov
ljmp
mov
out
mov
xlat
add
call
mov
inc
pop
xchg
ljmp
or
test
fwait
dec
sub
push
dec
popa
sti
adc
insl
cld
mov
and
into
out
lea
aad
sahf
jne
jae
out
mov
xorb
adc
pop
mov
inc
cmc
cli
fldcw
mov
mov
jnp
lret
fs
leave
int
out
je
mov
mov
or
dec
push
repz
jg
fdivrl
adc
jp
fwait
mov
imul
hlt
cmc
lods
movsb
and
and
imulb
enter
ret
xchg
sbb
addr16
ja
int3
mov
adcb
cmpsl
pop
adc
sub
enter
pop
ret
sbb
dec
aas
or
lock
cld
lock
rclb
addb
pop
push
inc
daa
lret
rcrb
xchg
adc
les
fildll
data16
cmp
lcall
iret
sti
push
iret
stos
sub
cmpb
inc
movsl
aad
add
jbe
xchg
imul
mov
xor
inc
sub
subb
and
mov
daa
mov
test
into
sub
sahf
and
mov
scas
lahf
inc
loope
sub
dec
lods
fdivrs
nop
cmp
and
xchg
pusha
cwtl
ror
cwtl
ss
jns
jnp
adc
sub
addb
stos
push
push
leave
mov
in
popa
mov
jge
in
repnz
mov
data16
push
loope
aam
lods
add
sahf
mov
cltd
xor
in
jbe
mov
adc
mov
jg
mov
xorl
mov
adc
and
jns
fs
lea
cmp
xorl
adc
out
pop
pop
mov
sub
and
pop
push
or
xor
xlat
jbe
popa
rcrb
jmp
push
ret
pusha
out
sub
sbb
in
push
mov
mov
lds
sti
das
jmp
mov
pop
add
xor
mov
rcrl
mov
fidivs
cpuid
pop
lock
and
sar
les
fwait
add
add
dec
enter
jmp
aad
rcll
in
inc
sub
or
mov
nop
jle
add
mov
mov
pop
pmullw
mov
in
and
jae
enter
dec
lcall
shrl
sbb
scas
cmp
jge
test
add
test
adc
fistpl
sub
fildl
rol
test
out
lret
enter
push
lahf
repz
push
pop
and
mov
call
mov
mov
shrl
mov
gs
mov
mov
pushf
xchg
jl
fwait
sbb
add
fistl
pop
fstps
call
mov
mov
pop
fcmovne
pop
dec
fisubl
xchg
pop
mov
pop
nop
pop
clc
push
add
xchg
das
stc
sub
mov
lcall
inc
jae
inc
lds
sbb
jl
xchg
mov
lcall
mov
xchg
push
jge
fchs
aad
push
pop
lcall
mov
add
dec
add
mov
mov
fwait
jp
push
xor
enter
pop
push
dec
jl
add
sbb
mov
pop
addl
mov
mov
add
add
addb
fmuls
out
test
dec
cmpsb
inc
incb
sbb
in
pop
lock
fidivrs
and
outsb
das
aas
xor
in
int3
or
popf
scas
sbb
dec
cmpb
cmp
std
xor
and
ds
xchg
xchg
orl
push
or
add
faddp
xchg
cmp
andl
dec
arpl
popa
mov
rcl
insb
and
xor
mov
int3
ds
pushf
sub
pop
xor
fcmovb
adc
daa
ret
lods
lods
xlat
dec
dec
gs
mov
and
cltd
mov
pop
and
push
xor
mov
sub
jb
lds
jae
stos
add
imul
push
scas
movsb
scas
sbb
adc
popa
adcl
mov
in
ret
pop
cmp
add
inc
lret
push
push
sub
testl
sub
mov
add
les
add
call
scas
int3
mov
cmp
outsb
int
mov
scas
outsb
test
xor
data16
jb
dec
mov
xchg
lahf
sub
imul
xor
adc
aam
lahf
sarl
add
sub
mov
mull
outsb
lcall
fidivl
subl
pop
xor
push
mov
in
cmp
and
and
movsl
cmp
jae
jp
outsb
mov
cltd
cmpsl
jmp
and
sbb
xlat
mov
dec
push
popl
int3
mov
pop
mov
out
sbb
cmc
push
mov
inc
loope
mov
sub
xchg
sarl
mov
add
loop
repnz
push
sub
enter
sahf
js
adc
or
pop
mov
or
cmp
xchg
aam
hlt
frstor
shlb
or
fisubrl
in
icebp
add
mov
xchg
dec
jmp
outsl
in
or
and
stos
sbb
test
mov
fcom
test
stos
dec
pop
push
cmpsl
out
call
pop
pop
int3
xchg
xor
jmp
xchg
popa
hlt
push
sarl
sbb
dec
imul
pop
repz
inc
iret
sbb
pop
mov
adc
test
test
xor
enter
push
pop
and
add
cli
inc
jno
mov
xchg
jmp
aaa
rcrl
cltd
xchg
js
stc
mov
mov
or
sub
fwait
cmovnp
inc
dec
leave
sub
in
adc
ljmp
cmpsl
push
imul
inc
cmp
xchg
dec
add
into
xor
clc
sahf
ror
icebp
mov
xchg
push
or
push
add
add
pop
mov
les
sub
cmp
push
and
inc
leave
pop
in
iret
mov
fdivrl
lods
lea
dec
sub
jb
xor
pop
inc
sbb
fwait
inc
lock
pop
loopne
sub
js
daa
and
xor
mov
orb
adc
lcall
mov
pusha
out
jne
push
sbb
jg
ficoml
push
loopne
push
je
add
pop
pop
push
push
push
lcall
outsl
stc
sbb
mov
in
imul
mov
sub
aas
adc
jbe
fidivl
xchg
xorb
push
push
pcmpeqb
mov
lahf
push
adc
loopne
popf
xor
cmp
inc
dec
mov
add
push
or
lret
rclb
sbb
aad
xchg
push
push
imulb
sahf
jbe
sub
sub
sti
cs
inc
int
or
jno
decw
push
insl
test
addb
mov
div
inc
ret
xor
fnsave
xor
sub
in
cltd
and
pop
push
insb
mov
ss
add
outsl
cltd
mulb
pop
xor
repnz
mov
aaa
shrl
mov
es
add
lret
in
xchg
fnstcw
mov
out
lahf
ss
dec
adc
cmpl
mov
lods
push
cmp
insb
lds
adc
mov
push
and
inc
iret
into
pop
clc
mov
xchg
sub
jmp
enter
jp
lock
sbb
mul
jge
sub
mov
mov
or
sbbb
mov
cmp
ret
mov
in
lods
test
enter
mov
daa
imul
int
imul
sbbl
and
dec
pop
bts
imul
xor
jg
out
and
movsl
pop
and
loope
lods
dec
pop
aas
mov
adc
icebp
movsb
push
icebp
pusha
js
sarb
push
add
stc
jno
dec
jbe
mov
pop
mov
cs
mov
nop
jl
in
lahf
cwtl
and
lahf
fdiv
and
add
inc
test
andb
cltd
sub
loopne
arpl
push
fwait
in
pop
fldl
pushf
xchg
das
popa
rorb
imul
mov
std
inc
xor
frstor
arpl
lds
jb
pop
sbb
mov
cmpxchg
sub
add
dec
inc
das
stos
inc
fnstsw
mov
pop
leave
push
or
nop
mov
imul
mov
pop
pop
mov
xor
push
xchg
int
call
dec
sbb
insl
add
notb
fs
and
insb
int
xchg
jg
dec
xchg
call
adc
imull
xrelease
mov
and
cs
cmp
dec
data16
and
mov
cmp
imul
or
fdivrs
mov
jle
xchg
sbb
jno
lea
dec
shrl
cli
mov
loope
xor
push
addl
test
sti
movsb
xchg
xor
sbb
fbld
mov
adc
rcl
mov
les
scas
adc
scas
push
ficoms
xchg
sub
popf
push
fdivl
mov
daa
sub
cmpb
aam
mov
pop
push
shrb
push
jne
adc
mov
dec
push
imul
das
pop
in
mov
movsb
push
data16
in
dec
cmp
jb
adc
sub
in
mov
mov
sub
jg
sub
inc
cmp
nop
push
aas
mov
out
xchg
out
pop
jns
add
int3
jne
or
ret
and
pusha
push
inc
scas
scas
aad
jmp
fldenv
pushf
jnp
rcll
cwtl
cmp
jg
pop
add
mulb
jns
or
inc
in
xchg
outsl
stos
jecxz
push
icebp
es
adcb
sbb
bnd
sbb
inc
outsb
and
insb
leave
xchg
cmp
sti
jno
cmp
xchg
mov
mov
or
xor
outsl
add
sbb
xchg
sub
jb
and
and
pushf
test
notb
push
testl
cmp
loop
mov
and
adc
and
fwait
jle
inc
les
movsb
les
inc
mov
dec
int3
lds
insb
clc
outsl
push
pop
movb
pop
aam
in
cwtl
inc
cmpb
in
insb
add
and
ds
sub
cmc
std
sti
rcrl
push
sbb
add
xor
mulb
cli
scas
push
repz
aas
fwait
pop
dec
clc
xchg
int3
push
mov
repnz
push
add
sub
xor
cld
inc
mov
xchg
sbb
push
shrb
scas
jecxz
sub
jp
or
dec
ret
jo
mov
ret
fdivr
nop
jge
or
xchg
xchg
aas
pop
mov
cwtl
push
lods
scas
push
mov
or
xchg
cmpsb
cmpsb
mov
push
sub
sbb
rcll
jmp
pop
pop
stc
cmpsl
sbb
push
ljmp
sub
push
popa
out
xchg
in
jne,pt
jne
cmp
adc
dec
dec
scas
dec
imul
fisubl
adc
imul
nop
repz
in
mov
sbbl
sub
scas
icebp
cmc
repz
mov
xor
mov
mov
adc
xor
jo
push
mov
xorb
sbb
mov
cmp
test
js
xor
test
xchg
daa
cmpsb
cmp
push
mov
fst
cmpsb
int
imul
pop
jbe
cltd
jp
aas
sbb
xor
cli
outsl
dec
lahf
jne
inc
scas
lea
lret
xlat
xchg
shll
dec
mov
mov
pop
lret
aam
xlat
fimull
pop
addr16
push
add
xchg
cmpsl
inc
mov
push
cmp
sub
pop
mov
push
lods
call
repnz
in
lret
and
cltd
cmc
aam
xor
insb
fwait
out
int
mov
push
into
xor
stc
lret
aad
sbb
popf
dec
pop
mov
push
jo
ficoml
mov
adc
mov
mov
dec
push
ret
lds
push
out
add
xchg
shl
repz
pop
gs
jecxz
xor
and
lds
and
testb
loopne
test
arpl
das
mov
fwait
sub
cmpb
stc
stc
outsl
mov
xchg
sbb
push
outsb
push
mov
and
push
and
pop
gs
add
and
push
dec
mov
cmp
sub
pop
push
add
xchg
movb
sahf
cltd
flds
inc
insl
or
dec
mulb
daa
addr16
pusha
push
daa
lods
cmpsb
xor
fwait
call
mov
into
fimuls
jle
ja
pop
rep
in
in
cmpsb
push
jae
cmpsb
mov
das
jno
lahf
addr16
movl
sbb
pop
mov
subl
fbld
fwait
pop
mov
outsl
mov
cmp
pop
rclb
dec
inc
push
add
or
faddl
cltd
ljmp
loop
aam
inc
cmp
dec
in
ja
test
xor
pop
int
xor
pop
fists
or
bound
aam
aaa
xor
xchg
call
clc
sbb
jmp
xchg
enter
lahf
lods
mov
and
test
lahf
jbe
insl
mov
dec
mov
js
repz
aaa
push
int3
mov
push
shrl
bswap
mov
in
push
out
lret
adcb
sbb
iret
xchg
xor
in
dec
xchg
arpl
mov
mov
mov
xchg
cmpsb
pop
outsl
sbb
and
sub
arpl
popa
call
scas
imul
shlb
mov
repz
cmc
repnz
jle
add
aam
mov
and
dec
mov
mov
nop
pop
pushf
mov
mov
xchg
arpl
iret
jle
jecxz
add
out
sbb
xchg
mov
je
int
out
das
pop
pop
sti
pop
xchg
iret
mov
adc
rcll
pop
ljmp
push
adc
mov
stc
mov
and
cmp
sbb
insl
daa
into
pushl
mov
push
in
push
xchg
inc
out
lret
push
xchg
mov
mov
lds
in
test
adc
dec
daa
adcl
adc
sub
mov
sub
add
mov
imul
mov
ret
dec
sbb
mov
jle,pt
dec
cmp
sub
sub
lods
stos
pop
cmp
mov
call
cmpsb
fidivl
inc
mov
sbb
xchg
pop
mov
in
add
int3
int
dec
xchg
mov
jne
int3
push
lods
mov
leave
nop
cmp
mov
mov
cmp
fisttps
xchg
test
incb
lahf
or
mov
ljmp
push
jae
arpl
outsl
add
dec
and
repz
jecxz
xchg
out
sbb
iret
mov
pop
jae
arpl
outsl
add
dec
and
repz
jecxz
xchg
out
sbb
iret
mov
lahf
jae
arpl
adc
pop
xor
and
repz
jecxz
xchg
out
sbb
iret
mov
pop
jae
arpl
outsl
add
dec
jecxz
shrl
xchg
sbb
pop
into
jl
xchg
out
mov
icebp
mov
dec
add
outsb
xor
push
inc
sbb
jae,pt
jae
sbb
out
mov
sahf
shrl
add
outsb
add
push
and
subl
jae,pt
lcall
xchg
fiaddl
jmp
xor
xor
add
jb
imul
xlat
mov
or
jns
enter
out
es
test
outsl
negb
and
xchg
sub
movsb
dec
sahf
sub
lret
xorl
xor
push
cs
xor
sbb
xchg
sbb
and
xchg
mov
push
loop
cs
jae,pt
ror
xchg
daa
mov
lahf
adc
mov
in
pop
ret
or
movsl
jmp
push
jb
pop
push
push
jno
xchg
jecxz
dec
repnz
mov
xor
sub
arpl
mov
mov
jae
mov
pushf
xor
mov
mov
roll
adc
and
dec
es
arpl
add
out
mov
test
scas
cli
cmpsl
ljmp
sub
inc
xor
ds
mov
mov
clc
mov
dec
push
imul
jnp
pop
arpl
mov
rorl
loope
xchg
lahf
or
push
aas
jo
xor
pop
cvtps2pd
stos
ret
add
mov
sahf
shrl
add
outsb
and
push
inc
push
push
arpl
jae
sbb
out
mov
sahf
shrl
add
outsb
and
push
inc
push
push
arpl
jae
xor
push
orb
lods
pop
jnp
outsl
xchg
push
js
test
dec
jp
dec
push
loop
mov
push
dec
lods
pop
pushf
arpl
sub
cld
addl
push
insb
int
fisubrs
mov
jbe
je
xchg
xchg
and
ret
mov
xor
xchg
je
mov
stc
iret
js
inc
lret
dec
add
mov
iret
xor
mov
mov
shrl
jmp
out
xchg
ret
mov
pop
mov
dec
bound
and
daa
fmull
shrb
sbb
mov
hlt
add
shlb
or
cmp
or
sti
dec
test
dec
ret
in
pop
inc
imul
pop
popw
rcrb
mov
jbe
cmpsl
out
inc
jnp
dec
imul
cmp
xor
cmp
pop
jo
sarb
aad
jmp
loope
adc
push
scas
mov
xchg
testb
loop
in
test
sub
clc
adc
mov
sar
mov
bound
daa
cmp
add
xchg
cld
mov
push
rcrl
cmp
pop
lea
or
or
push
int
mov
sahf
adc
int3
xchg
mov
add
push
add
ja
test
xchg
jp
scas
or
dec
jno
or
adc
or
cli
add
nop
orb
pusha
sbb
push
popf
push
cs
rcrl
mov
stc
dec
lcall
pop
pop
pop
fbstp
lea
ja
adc
and
mov
push
adc
aam
cmp
jg
ljmp
cmp
jae
fists
jp
mov
inc
cmp
push
sub
cmp
ljmp
push
mov
int3
test
lods
stos
xchg
icebp
pusha
push
std
push
mov
loopne
inc
push
or
xchg
push
push
rcl
ljmp
jb
jno,pt
mov
dec
movl
rol
dec
adc
jmp
adc
test
mov
mov
ret
xor
rcrl
dec
sahf
xor
and
xchg
dec
mov
call
pop
ret
sbb
or
cwtl
loop
add
mov
ss
cmpb
dec
shr
orl
add
xor
sub
lods
sti
or
xchg
fdivrl
pop
cmp
dec
pop
xchg
mov
push
xchg
jo
adc
fbstp
inc
enter
jge
lret
xor
orl
rcr
cmp
cwtl
jmp
and
fmulp
adc
pushf
xchg
fdivr
xor
cmp
lret
jl
inc
add
xor
test
push
mov
dec
fldl
addr16
jge
rol
push
pop
xor
xor
jecxz
mov
and
cmp
jne
cwtl
pop
mov
push
or
cli
std
inc
push
lret
adc
aas
or
sub
add
fisubl
icebp
outsl
sub
xlat
iret
mov
push
imull
rep
stc
pop
dec
mov
js
add
es
add
nop
nop
xor
lret
ljmp
push
or
sub
mov
and
into
push
ret
mov
jbe
ds
push
push
testb
and
push
or
loop
jb
mov
scas
fildll
mov
movsb
popa
out
jg
xchg
pop
imul
fsubrl
mov
rcll
bnd
mov
add
push
or
pop
push
dec
xchg
int
es
add
sub
cmp
mov
inc
sahf
and
scas
data16
shlb
icebp
push
andb
shrb
lea
and
or
adc
cltd
movl
test
sti
xor
dec
xchg
outsl
or
femms
es
mov
scas
pop
mov
push
push
cmpsl
inc
pop
jmp
or
leave
int3
jp
sahf
mov
push
movsb
push
loopne
ds
push
loop
xchg
das
add
icebp
jl
js
sbb
add
jo
push
add
jne
xchg
fildll
pop
mov
jmp
fnstcw
hlt
ret
push
mov
sub
test
test
addr16
mov
rclb
or
xor
aas
les
cs
push
cmp
in
cmpsb
pop
jae
mov
popf
sahf
and
push
data16
cld
repz
cmp
cmp
xchg
jnp
outsl
scas
scas
xlat
mov
mov
inc
in
sarb
sbb
gs
pop
insb
lds
xchg
jb
xchg
dec
push
js
scas
push
rolb
lods
xchg
pop
add
scas
jne
pop
rclb
and
jae
dec
lcall
jle
push
divb
cmp
push
out
rolb
and
sub
std
mov
int
dec
ja
xor
or
push
pop
sub
sub
jge
test
mov
add
fdivs
cltd
and
test
add
cmc
jmp
test
mov
lcall
mov
cmc
std
ljmp
ljmp
xchg
ss
arpl
dec
fistpll
jge
cld
jle
icebp
cld
test
not
jl
jmp
cmp
mov
outsb
dec
push
dec
fwait
popf
lret
lds
xlat
pop
out
add
pop
test
popa
jg
mov
int
xor
push
mov
sub
mov
psrad
push
push
and
and
jns
ds
cmp
dec
shrb
imul
pushf
mov
outsl
aaa
pop
hlt
mov
fsts
cmp
enter
xchg
test
mov
jp
shrl
inc
lcall
jle
loopne
pop
les
and
fdivrl
xchg
sahf
cmp
fwait
push
add
mov
lock
cli
lret
insb
stc
int3
ljmp
pop
out
test
inc
xchg
push
ret
push
push
push
mov
mov
icebp
push
mov
xchg
sbb
xchg
sbb
jno
push
dec
xchg
push
jg
fisttps
lock
outsl
repnz
mov
cld
scas
mov
inc
ret
nop
mov
fcomps
ret
dec
push
into
subb
adc
pop
les
inc
lods
std
cmpb
xlat
sbbl
jecxz
into
add
aaa
in
or
orb
pcmpgtb
pop
jmp
popa
sub
adc
andl
mov
pop
cmp
fcmove
imul
add
fdivrs
test
adc
cmp
dec
sub
pop
int
fsubl
dec
dec
cmpsl
pop
stc
pop
jbe
mov
fdivr
fs
enter
jecxz
ret
ja
das
outsb
scas
jge,pt
add
aam
jmp
lock
leave
cmpsl
iret
dec
dec
lret
cmp
mov
into
in
dec
push
xor
cld
mov
inc
sarb
push
int3
sbb
jno
xor
pop
push
xchg
into
test
cmpsb
sub
fcomps
jb
pushf
inc
xchg
mov
adc
fs
dec
xlat
stos
xchg
andl
pop
mov
dec
adc
lret
test
inc
push
cmpsb
sub
push
pop
cmp
cmpl
imulb
mov
lock
movsl
popa
push
outsb
movsb
xlat
push
sarl
jae
xchg
sub
cli
icebp
mov
adc
jecxz
jp
xorl
mov
xchg
sub
jno
sbbb
push
jbe
fistl
mov
add
inc
push
mov
jle
arpl
mov
inc
sbb
dec
mov
dec
inc
and
jno
ret
mov
mov
jmp
addb
mov
dec
and
movsl
shl
punpcklbw
and
mov
or
in
loop
xor
js
aas
fdivl
aaa
or
in
rorb
jo
inc
xlat
adc
stc
inc
mov
cld
or
jae
mov
ljmp
stc
xchg
addr16
dec
mov
das
push
arpl
js
mov
adc
cmp
push
xor
ret
test
dec
jns
outsb
pop
pop
mov
fcoml
lods
sbb
adc
jns
into
push
test
mov
xor
mov
aad
pop
pop
jmp
imul
test
dec
cltd
lahf
sti
js
js
adc
lcall
ret
imul
jne
push
or
pop
dec
test
jno
lret
mov
mov
gs
pop
jge
push
pop
frstor
pop
xchg
cmp
pop
pusha
pop
arpl
mov
jl
push
adc
add
and
xchg
lock
mov
xlat
cld
jnp
jmp
in
mov
sbbl
ret
adc
add
adc
repz
xor
jmp
icebp
enter
adc
xchg
insb
ficomps
or
in
and
cmp
jge
dec
xlat
pop
ljmp
sti
sti
out
xchg
jecxz
dec
or
aas
incb
jbe
pop
shll
jmp
and
pop
jecxz
lock
pop
mov
mov
xor
jae
jmp
imul
pop
sbb
repz
cmp
stos
add
in
sub
fisubl
ret
fs
notl
sub
mov
lcall
mov
inc
call
enter
cli
jbe
sarl
push
inc
shll
insb
mov
dec
in
pop
andl
shll
sbb
pop
push
xchg
pop
mov
dec
inc
fidivl
leave
jle
test
mov
add
mov
cmp
rep
mov
push
mov
ja
jl
lret
subb
aam
insl
adc
xor
sar
sub
or
xchg
inc
outsb
ficompl
stos
sbb
push
sbb
jecxz
push
inc
pop
jb
cmc
in
cmp
mov
dec
add
cmp
stos
or
aam
mov
xor
outsl
xchg
stos
popa
jae
sarb
shll
mov
dec
push
pushf
pushf
xlat
mov
inc
mov
out
sti
fistps
rol
fs
in
test
cmp
sbb
mov
inc
dec
fisttpll
cmpsl
xlat
loopne
mov
push
gs
pushf
and
xchg
xchg
mov
adc
outsl
popf
jmp
roll
and
fwait
xchg
pop
fnstsw
filds
adc
in
imul
pop
sbb
adc
das
add
fstl
out
addl
xchg
cltd
das
clc
cmc
fnsave
movsb
shlb
imul
sbb
dec
cli
mov
mov
scas
data16
cmp
adc
mov
mov
sti
pop
mov
fsubl
enter
fsubr
pop
cmp
sbb
dec
mov
aaa
xchg
push
add
sbb
or
sbb
mov
xor
shlb
jl
sub
ret
cmc
push
imul
push
sbb
xor
cld
mov
xor
jle
sbb
add
lret
pop
sbb
pop
push
and
ffreep
in
sub
cmp
jg
js
stos
lods
mov
fcomi
pop
iret
mov
jns
xlat
fmuls
push
mov
sti
add
push
loope
stos
dec
push
fwait
inc
cmp
dec
es
xchg
xchg
or
iret
and
aad
add
pop
add
adc
leave
adc
pop
test
mov
mov
or
neg
sub
sarb
push
sbb
js
jl
jg
out
ljmp
aad
sub
sbb
adc
js
xchg
cld
xchg
pushf
or
nop
stc
stos
xchg
sub
popl
fildl
jg
push
lret
mov
mov
adc
push
push
push
enter
lods
es
je
xchg
lods
push
test
frstor
sub
mov
sahf
ret
rcrl
cli
cmpsl
stos
ret
inc
lods
jbe
dec
adc
gs
add
notl
sub
fmulp
add
sub
icebp
lds
sub
jnp
std
jae
fisttps
in
cli
lds
lods
sbb
jl
mov
mov
imul
cmp
add
fimuls
sbb
cmp
push
cmc
mov
xlat
push
lods
nop
push
push
dec
mull
shl
push
mov
xchg
mov
pop
push
cmc
sub
insl
mov
mov
lock
test
mov
sub
adc
insl
lret
cmpsl
sbb
cmpb
insb
addl
jae
test
je
enter
into
cmpsb
das
dec
or
or
cmpsl
cmp
punpcklwd
pop
mov
mov
cmpsl
mov
test
sub
xchg
bound
and
sti
stc
dec
out
inc
sbb
pop
push
ds
mov
xchg
pop
test
mov
mov
jge
sbb
mov
sarl
inc
inc
mov
test
add
cli
jne
push
cmp
arpl
sbb
add
dec
popf
push
inc
inc
negl
inc
es
cmpsl
out
loope
push
mov
mov
mov
jmp
enter
pop
test
es
cmp
jecxz
xor
mov
inc
dec
rcrl
inc
add
stc
out
xchg
arpl
pop
adc
jle
dec
mov
notb
insb
add
and
out
pop
test
mov
js
nop
pop
enter
lods
pop
popf
ja
test
xchg
pop
outsl
in
sub
and
sub
inc
clc
jge
scas
fistl
pushl
lds
push
sub
xor
mov
jmp
orl
js
xchg
dec
push
sbb
ds
stos
cmpsl
cs
out
jbe
cmpsb
aaa
pop
xor
push
in
rcr
pop
cmp
sub
out
sbb
rcrl
popf
shrb
inc
cmpsl
jge
pop
sahf
adc
loope
icebp
lock
js
ljmp
pop
pusha
call
dec
imul
pop
mov
js
outsl
adc
or
xchg
cmp
dec
pusha
jnp
add
test
dec
or
sub
mov
push
xchg
ret
insl
lock
js
xor
dec
lods
push
cmp
jnp
cld
stc
dec
repnz
xor
rol
sub
aaa
fisttpll
fstp
inc
jg
rcll
loop
cmp
add
addr16
loope
leave
jnp
enter
pop
adc
js
adc
bound
movb
xchg
idiv
sahf
arpl
xor
mov
test
fcomps
cmpsl
je
pop
icebp
jnp
mov
dec
sbb
dec
repnz
mov
daa
call
hlt
int3
les
xchg
rcll
jle
in
pop
inc
or
std
stos
adc
sbb
divl
push
push
iret
inc
decl
lods
xchg
sub
and
je
int
imul
subb
pop
sub
sbbl
push
nop
and
adc
push
mov
mov
fiadds
pop
out
push
std
roll
into
clc
inc
js
mov
jb
lds
or
mov
lods
xor
adc
sar
add
pop
xchg
and
cld
addr16
sti
push
push
fidivrl
lahf
push
out
push
mov
inc
inc
mov
sbb
jno
scas
test
lods
mov
xorl
in
jno
fildl
roll
cmp
cmp
sub
mov
lods
movsb
sbb
int3
mov
mov
adc
leave
es
enter
or
sbb
fisubl
inc
loopne
in
cmpsl
dec
xchg
outsl
hlt
repnz
add
pop
cmp
cltd
mov
iret
sbb
imul
loop
pushf
insl
cmc
inc
arpl
push
mov
mov
inc
ficoms
sub
push
jecxz
mov
loopne
inc
mov
mov
incb
pop
cmp
xchg
test
pop
sub
fidivl
dec
push
insl
xor
mov
sub
fs
pop
xor
notb
push
out
in
mov
into
ds
sarl
stc
inc
and
nop
cmpsl
into
adc
xchg
dec
jae
mov
xor
dec
cld
clc
loop
pop
lret
and
cmp
cmp
stc
pop
in
into
push
or
add
xlat
xchg
mov
and
adc
mov
iret
xorb
mov
add
addr16
das
cmp
xor
jne
lret
cmpsl
ja
insl
adc
fldt
out
adc
ds
or
shl
jp
cltd
add
insl
or
sbb
xor
sub
xchg
int3
cmp
cmp
inc
repz
loopne
int
mov
adc
mov
mov
outsl
mov
int
jbe
jb
repz
iret
cmp
cmp
not
or
jns
inc
out
test
lret
js
stos
push
inc
mov
add
push
add
mov
sarl
fidivs
mov
incl
xor
mov
mov
pop
call
insl
push
out
sbb
outsb
jae
inc
sub
jno
xor
cld
ret
sbb
mov
push
pushl
js
cmpsb
jne
mov
xchg
movl
ljmp
sub
ds
fildll
test
xor
mov
sub
sub
insb
push
rcll
push
push
sub
pop
push
pop
test
push
push
xor
push
ss
mov
rolb
push
push
mov
pop
movsl
sti
inc
mov
jnp
pop
pop
int
je
out
out
enter
inc
push
xchg
inc
mov
and
xorb
mov
xchg
mov
lcall
mov
lcall
inc
sub
mov
xlat
mov
rolb
mov
leave
hlt
loop
outsb
and
jbe
jne
jle
inc
dec
xchg
xchg
or
lods
sub
out
push
test
xlat
pop
xchg
mov
clc
sbb
cmpsb
cld
lcall
jae
jg
mov
pop
out
dec
sbb
sub
xchg
loopne
or
sti
inc
out
sbb
jg
or
pop
xchg
inc
dec
inc
and
jbe
test
rcr
or
and
shlb
test
fsub
pop
add
cs
xchg
movsl
adc
xchg
add
rcrl
jnp
fmulp
mov
mov
push
lea
pop
inc
xor
xor
fdivs
in
xchg
outsl
mov
loop
stos
pop
sti
sub
das
xrstors
xor
enter
push
dec
mov
inc
and
or
jbe
dec
stc
dec
lods
ljmp
mov
mov
jo
andb
mov
ficoms
enter
test
inc
mov
ja
xor
icebp
nop
aad
js
fistpl
fldt
icebp
inc
sbb
in
sub
clc
inc
loop
lahf
jb
jno
sbb
das
jne
adc
rcr
les
clc
sbb
gs
in
leave
enter
mov
sbb
inc
add
pop
push
ds
mov
jbe
add
dec
enter
data16
idiv
popf
xor
add
cli
add
aam
popf
test
sub
loop
mov
mov
mov
pop
inc
push
cvtps2pd
movsb
lea
sahf
sub
mov
test
data16
mov
cmp
jp
sbb
xchg
dec
pop
comiss
fdivp
cld
inc
add
pop
pusha
pop
jne
fidivs
jbe
fs
adc
stos
and
adc
xor
sub
and
inc
sahf
xor
jl
xchg
cmp
fsubrl
xor
in
mov
xchg
push
mov
rcll
push
adc
scas
cltd
mov
sub
out
sbb
arpl
imul
jge
jns
mov
inc
jne
mov
adc
adc
sahf
sub
inc
add
imul
mov
sub
aaa
loopne
lret
or
dec
mov
mov
fistpll
lret
fs
jo
fstpl
ds
jmp
sbb
or
adc
add
xor
xchg
cmpsl
xchg
adc
adc
mov
loope
fnsave
dec
imul
in
mov
adc
jb
mov
xor
push
aaa
mov
xchg
insb
stc
sahf
clc
cli
fstps
ror
arpl
add
jb
aas
add
fwait
xor
jbe
or
mov
or
outsl
mov
mov
cmp
gs
lcall
out
leave
aad
sbb
mov
jae
dec
cmp
inc
ja
cmp
repnz
cwtl
ret
sbb
cwtl
inc
mov
addl
cld
cld
jmp
push
testl
jg
jbe
mov
xchg
xor
popf
icebp
orb
sub
adc
sub
dec
fistpl
in
push
add
sub
mov
sub
or
fisttpll
cli
pop
mov
adc
mov
xlat
cmp
mov
mov
insl
cmpl
jno
mov
cmpsl
jg
cmpsb
cmp
mov
sahf
shrl
add
outsb
and
push
inc
push
push
arpl
jae
sbb
out
mov
sahf
shrl
add
outsb
and
push
inc
push
push
arpl
jae
sbb
out
mov
sahf
shrl
add
outsb
and
push
inc
pop
push
bound
into
sbb
out
mov
sahf
shrl
jecxz
repz
mov
inc
jns
xchg
lods
rcrl
imul
cmp
or
mov
jmp
pop
mov
insl
mov
pop
lods
dec
fnstsw
int
std
sbb
jno
stc
or
leave
pop
aad
test
popf
jns
imul
sbb
or
stos
dec
test
in
ds
testl
mov
sbb
adc
es
aaa
adc
mov
cld
mov
jno
jb
inc
add
int
add
add
push
ret
int3
shrb
sub
out
xlat
xor
dec
mov
pop
test
mov
subb
sbb
xor
jno
push
mov
xor
movsb
jae
imul
push
adcb
pop
shrb
or
xchg
out
into
or
push
les
mov
mov
sbb
add
int
ljmp
mov
dec
push
or
cmp
pop
adc
dec
pop
call
inc
fdivrl
cltd
outsl
pushf
pop
jns
imul
sbb
or
fldcw
test
clc
jge
sub
pop
jmp
mov
pop
imul
mov
or
sbb
sbb
or
cmp
dec
mov
jo
insl
outsl
mov
nop
inc
mov
test
iret
pop
out
cmp
enter
int
std
sbb
or
fldcw
test
popf
jns
imul
sbb
or
fldcw
test
popf
jns
add
mov
mov
xchg
jb
scas
adc
jb
cltd
inc
lods
je
jl
inc
and
push
push
shll
mov
sahf
stc
adc
mov
adc
adc
stos
out
sbb
ficompl
daa
cli
xchg
dec
sub
lahf
xor
lret
iret
push
sub
cmpsb
fsubl
jo
js
pop
or
mov
sbb
adc
mov
mov
push
ret
mov
sbb
or
nop
mov
test
xor
pop
adc
hlt
adc
adc
imul
fldz
jo
push
inc
dec
jle
movsb
out
add
sub
jp
mov
clc
pop
in
out
xchg
sbb
xlat
std
mov
loope
cmp
cltd
jo
divb
dec
mov
repnz
clc
les
push
adc
lock
mov
cli
ja
fptan
and
xlat
push
cmp
mov
popf
jnp
jns
adc
xchg
loop
sbb
inc
mov
jno
ret
cmp
push
std
mov
sub
sbb
pop
test
lods
jns
cmp
repnz
scas
imulb
cmp
shlb
xor
cmp
lret
add
cmp
push
icebp
mov
ret
sbb
cmp
in
movsl
bound
enter
outsb
ficomps
icebp
add
sub
or
mov
rcll
jns
cs
jmp
call
mov
test
data16
in
cmp
cmp
or
cwtl
sbb
dec
push
lss
xchg
push
cmp
xchg
imul
push
test
in
xor
rcll
lret
jns
repnz
add
inc
mov
cmp
daa
jnp
xchg
or
hlt
adc
and
fmuls
or
jnp
js
dec
imul
inc
loop
mov
xor
sbb
aam
mov
jmp
mov
outsl
jae
lea
test
pop
mov
into
in
jecxz
push
xlat
add
aad
inc
addr16
hlt
ljmp
push
jl
arpl
lret
add
add
add
ror
call
xchg
xor
fldcw
xor
adc
inc
adc
ja
mov
or
js
mov
fwait
clc
aas
dec
mov
jns
rorb
push
pop
mov
shll
xor
lret
ss
jge
imul
test
gs
arpl
xchg
out
out
hlt
scas
cwtl
sbb
shrb
push
dec
jecxz
and
sbb
inc
xchg
mov
les
je
movsl
xor
cld
popa
cmp
fwait
lock
iret
mulb
scas
and
lods
push
or
dec
jecxz
iret
xchg
pop
hlt
mov
mov
pop
insl
sub
mov
cmp
pop
jo
lods
mov
ja
xchg
and
inc
pop
mov
adc
xchg
add
out
push
pop
mov
lds
mov
pop
push
fcoml
out
xor
jns
ja
pusha
cmp
fildll
in
repz
mov
fstp
sbb
in
adc
cmp
out
bound
or
add
xor
jg
add
out
jnp
lds
cmp
repz
loope
dec
out
lret
dec
fidivrs
push
cmp
in
int3
outsb
add
pop
pop
mov
cltd
pop
pop
divl
add
sahf
mov
fwait
int3
rcrl
in
dec
xchg
sbb
push
rol
jbe
adc
data16
lret
out
fiaddl
fs
inc
out
push
cwtl
mov
dec
hlt
inc
mov
sub
xor
test
add
cs
daa
aad
cmpsb
popa
and
icebp
imul
mov
in
push
or
stos
outsb
mov
inc
sub
add
loope
les
addl
inc
xchg
or
dec
dec
leave
inc
xchg
ss
pop
pop
mov
xor
or
loopne
faddl
xchg
loop
imul
or
add
outsb
mov
fistps
imul
loope
fidivl
and
sbb
mov
push
js
popl
fistps
ljmp
jecxz
xorl
push
push
sub
add
stos
js
mov
mov
sub
adc
add
fdivrs
rorb
loopne
mov
aam
fptan
lock
mov
lret
adc
dec
jg
push
orl
jne
shlb
lcall
pop
popa
ret
mov
in
jae
gs
mov
stc
jle
xor
psraw
das
or
ja
inc
out
adc
sahf
pushf
sub
xlat
out
hlt
mov
lret
aas
out
aas
sahf
jl
jmp
or
push
mov
daa
js
mov
mov
fwait
outsl
xor
aad
js
adc
adc
xchg
mov
rcrl
push
mov
mov
jge
stc
fwait
jo
mov
fs
xchg
dec
mov
ds
xchg
aaa
dec
push
sbb
cmp
es
push
jle
or
push
leave
ss
fcmovne
mov
dec
clc
cmp
rol
cmp
fcomp
mov
popf
cs
inc
xor
inc
sub
push
jbe
mov
jge
sbb
inc
fistpl
push
xchg
rcrl
xchg
cmpsb
dec
pop
jnp
gs
xorl
push
jnp
std
mov
sbb
repnz
jbe
mov
mov
subl
add
addr16
repz
sub
and
mov
clc
je
movsl
inc
push
push
ljmp
mov
shll
dec
push
xor
into
push
mov
mov
mov
mov
pop
mov
ss
jmp
shlb
jb
jge
loop
pusha
test
out
les
ror
test
mov
push
add
mov
pop
inc
enter
adc
test
mov
pop
sub
repnz
lea
arpl
push
mov
mov
pushl
roll
push
mov
sbb
scas
in
lahf
aaa
lods
lret
jp
enter
sub
scas
or
ret
or
lea
hlt
push
jbe
ja
mov
pop
in
inc
jo
inc
pop
in
test
push
mov
mov
xor
lods
lock
xor
ret
test
icebp
and
add
cmp
mov
test
pop
jbe
pop
jnp
arpl
ja
jns
jb
xchg
mov
fs
cmp
sbb
jns
xorb
inc
fcmovb
sub
cmpsl
rolb
adc
mov
cltd
xor
push
sahf
movsl
xchg
xchg
loopne
xchg
xorl
push
adc
mulb
fwait
mov
xor
inc
mov
push
push
pop
cld
mov
xchg
shll
jno
loop
cwtl
pop
mov
in
cmp
jle
push
rclb
push
add
ljmp
cmp
cmp
push
xchg
jo,pt
pushf
jb
pop
aam
in
xor
jge
jnp
ret
aam
pop
push
push
mov
dec
mov
add
addr16
sub
sarl
out
fidivl
xchg
or
and
rcr
sub
xor
jp
out
pop
loop
mov
sbb
push
or
adc
jl
cli
mov
sbb
inc
lret
iret
clc
loopne
out
jecxz
in
insl
mov
mov
mov
ret
ror
movsb
xchg
lahf
stos
adc
sbb
pop
xchg
fdivrl
adc
imul
xchg
cmp
pop
jl
push
jno
enter
test
jns
fnsave
pop
xor
jmp
cmpsb
and
push
mov
outsl
out
dec
ja
mov
nop
jnp
insl
xorb
mov
imul
jno
stos
inc
scas
mov
dec
or
push
add
ja
gs
popl
or
out
sub
sti
in
pushf
arpl
stos
lcall
shl
or
fwait
and
repz
fisttps
in
sub
cmpsl
into
ret
ret
sti
daa
and
cmpsl
mov
pop
xor
in
push
or
push
enter
mov
int3
andb
les
or
jno
cmp
mov
aas
in
rolb
clc
ss
jae
dec
inc
nop
xchg
inc
sbb
addr16
loopne
adc
mov
adc
lods
mov
das
xchg
in
xchg
rorb
push
addb
in
xchg
test
sbb
out
fs
cmp
inc
ret
adc
clc
xchg
sarl
lret
mov
movsl
pop
mov
dec
mov
ja
dec
shr
scas
js
mov
xchg
movsl
push
sbb
or
icebp
fadd
push
dec
or
push
mov
cmpsb
scas
dec
and
cli
add
iret
enter
xor
mov
mov
scas
fldt
std
xchg
sub
adc
lcall
dec
pushf
ret
add
jae
push
xor
mov
pushf
scas
adc
nop
add
fsubrp
ja
nop
sbb
lds
insl
call
cld
mov
add
push
push
pop
jmp
cmc
inc
rolb
adc
push
pusha
add
cmpsb
aas
outsl
repnz
xor
push
int
mov
outsl
lcall
scas
mov
jp
out
in
sbb
clc
cmc
or
push
outsb
cld
repnz
jg
xlat
mov
dec
iret
pop
lock
cmp
std
xchg
fs
ljmp
test
ljmp
lods
loop
pop
mov
aad
jae
xchg
cmpsb
jo
xchg
out
pop
dec
mov
movsl
setle
push
pop
xchg
ja
jns
or
xchg
xchg
or
test
push
es
lea
mov
jecxz
repz
and
daa
push
mov
jo
lea
movsb
aaa
or
mov
dec
mov
jb
push
mov
js
loopne
leave
push
jo
inc
jne
ret
add
cmp
mov
lds
inc
fsub
inc
mov
gs
ss
mov
xchg
addr16
sbb
pushaw
push
lcall
jne
push
or
cltd
jne
cmovs
lret
cmpsl
ds
addb
jb
push
shr
pop
mov
mov
jnp
subb
pop
xchg
jmp
jns
jecxz
movsl
xor
in
iret
sti
jae
in
or
stos
inc
ja
mov
adc
dec
jecxz
imul
mov
movsl
scas
or
aad
or
jae
fwait
jge
adc
leave
iret
inc
ret
mov
test
add
sub
dec
cmp
lcall
rcll
cmpsl
push
pop
into
sti
or
outsl
dec
adc
arpl
mov
xor
xlat
enter
sbbb
mov
loope
mov
stos
aaa
cwtl
fstl
or
pop
jmp
movsl
daa
popf
outsl
lcall
jge
orl
jmp
pop
cs
inc
inc
sub
int
cld
fisubs
mov
xorb
bound
xchg
lock
and
ljmp
and
cli
lea
ror
or
mov
cld
xchg
mov
xorb
adc
stos
cmc
cltd
pop
add
inc
sub
movsl
sbbl
sub
rorl
jae
inc
xorl
xchg
mov
jmp
lods
sub
out
jp
stos
adc
xchg
nop
imul
aam
ret
aas
test
insb
fimull
mov
imul
dec
mov
shrb
push
or
jo
push
aas
cmc
cmp
jp
mov
push
mov
mov
lock
cmpb
xchg
cmp
ret
ret
data16
jns
js
adc
bound
pop
andb
push
xor
dec
pop
out
call
out
cmpsl
sbb
and
xor
cmp
push
js
flds
jns
int3
cltd
add
push
popa
fidivs
mov
mov
fmull
sub
jae
and
push
inc
mov
out
and
outsl
and
dec
repz
mov
movsb
push
rcrl
add
loopne
aaa
es
imul
cmpsb
aaa
jl
push
sbb
jne
mov
push
cmp
les
jne
sarb
stos
mov
lea
in
aam
insb
and
push
mov
imul
sub
lret
stc
sbb
push
rcrb
ds
int
push
add
testl
sbb
test
in
out
pop
mov
shll
pushf
les
cli
outsl
inc
jb
test
mov
xchg
iret
jge
rcrl
iret
cmp
and
bound
insb
pop
sub
add
push
xor
scas
fisubrl
inc
movsb
xchg
arpl
inc
push
or
adc
push
sub
out
js
movsl
cmp
sbb
sbb
sbb
arpl
sti
lock
xchg
xchg
mov
popf
cmpsl
lds
xchg
dec
sbb
xchg
sbb
rcrb
push
cmp
cwtl
jne
dec
addr16
fiaddl
xor
mov
push
mov
dec
gs
dec
add
sbbb
mov
dec
nop
jae
and
add
mov
jno
xchg
mov
out
mov
cmp
xchg
adc
sub
fsubp
add
dec
pop
movl
mov
cmp
movsl
jecxz
xor
loop
fcmovnbe
scas
xchg
mov
mov
sbb
pop
sti
cs
clc
push
sarl
js
mov
xor
outsb
cmp
das
add
shlb
sti
mov
sub
div
imul
pop
popa
daa
add
ret
subl
cwtl
test
sbb
mov
in
out
in
inc
out
stc
push
cld
jnp
pop
ret
adc
jmp
cmp
jne
inc
or
cmc
mulb
mov
push
int
es
dec
loopne
mov
shl
mov
std
cmp
stos
fwait
cltd
pop
adc
bound
mov
pop
push
mov
and
int3
dec
xor
test
fisubl
mov
incl
jb
push
jmp
bound
rdtsc
gs
push
mov
mov
dec
adc
push
addr16
adcb
ljmp
sub
into
stc
mov
sti
insb
in
jns
testb
inc
push
das
mov
mov
push
xor
sti
and
clc
push
pop
or
and
movsl
pop
jl
in
push
repz
mov
aad
aam
test
hlt
inc
and
cmp
sbb
cmp
xchg
jnp,pn
or
mov
mov
xor
faddp
outsb
xchg
xchg
xchg
stos
dec
stc
or
shrl
jbe
and
lahf
sbb
mov
movsb
fdivs
push
mov
xchg
outsl
scas
sbb
xchg
arpl
aam
inc
ljmp
leave
arpl
push
xchg
es
lret
incl
mov
int3
xchg
pop
xchg
ret
lock
or
repz
loop
pop
in
adc
pushf
xor
xchg
lcall
jb
out
sbb
inc
xor
jno
pop
adc
add
lcall
cmp
imul
add
fcoml
sbb
cmp
test
mov
cmc
jle
dec
cmp
outsb
aam
psubd
loop
dec
je
sbb
jmp
xor
lret
xchg
xor
mov
inc
mov
repnz
fcompl
xchg
out
dec
ret
call
aad
sbb
sbb
sbbl
adc
incl
lods
dec
pop
mov
xor
notl
aaa
push
mov
add
sti
std
cmp
icebp
js
jle
das
or
sahf
cli
or
lock
cmc
test
mov
push
mov
mov
cmp
ljmp
sub
dec
mov
mov
inc
hlt
ss
xchg
sahf
in
bound
ret
and
pop
mov
cmp
sti
adc
fmull
out
jne
mov
test
inc
pop
leave
push
imul
shrb
dec
adc
lea
fwait
sar
idiv
push
shrl
daa
and
push
dec
pop
add
clc
xchg
mov
xlat
nop
out
mov
xor
loopne
int3
mov
push
sub
js
dec
mov
cmpsb
xor
jle
inc
lods
mov
adc
fldcw
imul
push
jo
adc
repz
dec
sub
cli
rolb
xor
mov
shll
jp
xlat
shrb
in
add
inc
fcomp
jg
jle
dec
add
xchg
fs
add
mov
and
std
std
and
pop
mov
xchg
sbb
mov
push
and
and
aaa
cld
sub
jnp
es
jle
lahf
mov
pop
inc
fnstcw
sbb
sbb
jo
mov
movl
dec
push
xlat
in
dec
sti
pop
push
out
lods
add
mov
nop
mov
mov
sub
popf
mov
cmpl
mov
ds
jne
shll
js
aam
cmpsl
pop
in
xlat
rorb
mov
fidivrl
adc
lea
faddl
ret
adc
andl
pop
es
or
jge
insb
pop
sub
xor
cltd
xor
pop
sbb
ret
bound
aaa
ds
out
cmpsl
in
or
mov
pop
mov
inc
add
push
mov
mov
cld
lcall
fstpt
xor
cmc
mov
pop
mov
rcl
adc
cmpsb
or
in
cmp
jp
in
seta
xor
or
stos
push
comiss
aaa
push
inc
ret
mov
ss
cmp
cmpsb
cmp
inc
dec
jb
jae
ja
fnsave
in
mov
adc
das
popa
dec
lar
outsb
bound
push
add
icebp
mov
rolb
orl
mov
or
in
add
mov
shrb
pop
push
fisubrl
daa
mov
das
push
cltd
jge
insb
xor
movsl
icebp
fld
in
daa
dec
jecxz
pop
data16
mov
lcall
rcr
js
loope
lret
mov
outsl
cltd
dec
adc
lret
test
popa
jns
ds
cwtl
jb
fcompl
popa
xchg
cmp
mov
jmp
cld
shrl
mov
loope
mov
cli
je
push
enter
es
idiv
sub
out
outsb
cmp
dec
insb
ds
es
and
cli
dec
imul
push
cmp
insl
rcrb
push
clc
jns
adc
pop
add
cmp
mov
leave
cmpsb
movsb
fwait
leave
inc
sbb
mov
adc
shl
outsl
or
lcall
je
aad
push
rclb
inc
dec
cmp
stos
pop
stc
mov
mov
enter
add
push
addr16
xchg
in
cmp
in
jbe
or
dec
mov
push
les
xchg
cli
enter
scas
add
bound
fistpl
nop
and
test
jno
jb
in
or
das
ss
stc
sub
das
movsl
lcall
imul
insl
add
das
int3
lods
cmp
lret
xor
mov
push
outsb
fcoms
cmp
ljmp
fwait
scas
jle
pop
ds
les
popa
jg
js
push
aas
movsb
dec
fimuls
mov
shl
int3
mov
dec
mov
xor
dec
es
add
adc
or
mov
fsubrp
cmp
cmpsl
push
xchg
xchg
movsb
popa
jae
lahf
jmp
mov
fldt
cltd
dec
stos
dec
ss
icebp
mov
jmp
mov
ljmp
inc
mov
dec
sbb
divl
mov
fst
hlt
mov
inc
xchg
cmc
jge
aad
loopne
jl
pop
mov
push
ss
out
inc
enter
or
pop
xchg
mov
pop
pop
sahf
cli
into
or
cmpsb
stc
xor
push
push
and
jbe
test
jp
or
in
ljmp
or
cmp
stc
das
stos
adc
subb
out
test
test
aam
inc
fwait
jmp
adc
xor
mov
mov
rcrb
xor
add
cmp
lret
jecxz
mov
xchg
sub
popf
imul
mov
outsl
rcll
jl
jns
sbb
push
xor
mov
jge
fistpll
into
cmpsb
test
enter
add
rorl
dec
xchg
dec
lret
push
cmp
sar
decl
int3
sub
jle
mov
sub
or
cmp
bnd
into
push
mov
je
sub
enter
push
into
rcrl
test
imul
int
aad
xchg
mov
jo
sub
faddl
pop
jmp
imul
sbb
or
fldcw
test
popf
jns
imul
sbb
or
fldcw
test
popf
jns
imul
sbb
or
or
leave
pop
mov
insl
mov
pop
lods
dec
fnstsw
int
jge
insl
or
stc
repnz
xchg
fldcw
push
test
jbe
mov
jno
pop
js
push
mov
cmp
icebp
or
mov
mov
jno
add
adc
and
xor
xchg
cmp
icebp
or
mov
mov
mov
adc
pop
in
or
add
or
cmp
dec
add
push
popa
mov
push
sub
fidivs
cs
js
sbb
aam
in
addb
clc
jb
add
mov
inc
subb
mov
cmp
adc
icebp
loope
stos
pusha
push
fimull
dec
cmp
bswap
jle
sbb
push
mov
sub
cld
out
std
and
popf
aam
cmpb
jecxz
repnz
xchg
cmp
les
lods
push
sahf
dec
mov
std
xchg
adc
jns
add
sub
loope
jb,pt
xchg
sub
pop
les
sahf
pushf
aam
mov
jmp
dec
cmp
sub
sbb
or
in
mov
lods
popa
popf
sbb
in
and
mov
xor
out
or
mov
shlb
jle
fistpl
lret
outsl
xchg
lods
xor
nop
inc
mov
nop
arpl
adc
adc
fcomip
sub
es
mov
ret
dec
mov
int
js
inc
test
popa
repnz
add
sub
and
in
fsts
jmp
adc
and
xor
sarl
or
mov
mov
jno
add
adc
and
xor
sarl
or
mov
mov
cs
dec
cmp
inc
mov
andb
movb
adc
lods
add
add
fcoms
jbe
dec
mov
cli
je
sbb
fbld
cmpsl
pushf
les
jmp
fcom
cmpb
mov
jmp
or
leave
jnp
sub
adc
mov
shrl
jg
pop
dec
xchg
out
mov
test
lock
test
loop
dec
inc
mov
scas
jl
in
push
xor
mov
jnp
arpl
xchg
sbb
dec
push
xchg
push
sub
cs
lret
pop
mov
dec
xor
pop
fs
lret
stos
bound
xor
dec
sbb
dec
jae
popf
das
jmp
ficompl
jns
xor
fcmovnu
shlb
pushl
add
sbb
or
push
cmpsl
test
ret
enter
movsb
jbe
jg
test
out
or
or
shlb
sub
aas
clc
xchg
shr
push
xor
xor
fwait
mov
sub
or
adc
cltd
sbb
scas
push
push
or
imul
lahf
fnstenv
sbb
mov
sub
test
push
out
fnsave
dec
iret
nop
mov
loopne
hlt
negb
mov
xlat
adc
lret
outsl
int3
sub
popf
sbb
and
push
call
mov
cmp
pop
shlb
frstor
insb
or
dec
pop
scas
sub
push
mov
push
pop
jb
xchg
loop
sub
sbb
cmc
push
lea
add
in
or
add
xchg
push
int
xchg
mov
mov
arpl
jae
xchg
fcmovb
inc
scas
leave
xchg
pop
mov
js
or
mov
movsl
scas
divb
pop
adc
pop
shll
adc
push
mulb
jecxz
lods
sbb
sub
inc
pop
cld
flds
fimull
xchg
push
jbe
loopne
push
and
icebp
lcall
rcr
xchg
out
lds
add
lret
adc
xchg
div
dec
inc
mov
push
adcb
les
into
xchg
cmpl
xor
scas
sub
xchg
addb
xchg
fldenv
adc
pop
fldenv
mov
xchg
sub
adc
sub
cli
or
test
mov
ret
and
cmp
lds
lret
aad
cmp
insb
xchg
sbb
out
shl
xchg
icebp
pop
and
jno
lods
lea
js
dec
pushf
aaa
mov
test
iret
jae
ljmp
adc
pop
mov
fidivrl
in
fcmovnu
ret
fdivrs
clc
movsb
lods
iret
push
enter
push
jo
push
mov
mov
pop
pop
insb
jne
sbb
out
in
sbb
shrl
lods
shll
push
sbb
jge
push
clc
stos
fs
sahf
iret
roll
loop
push
or
sbb
jnp
dec
push
jb
and
subb
loop
sbb
dec
push
jae,pt
mov
test
scas
test
fsubrp
bound
int3
mov
insb
xchg
dec
xchg
push
jmp
push
shll
dec
cmp
cmp
xchg
sbb
ja
std
popf
and
dec
push
sub
clc
scas
nop
jmp
imul
stos
mov
jg
adc
mov
sub
lods
std
dec
inc
pop
out
xchg
pop
sbb
insl
clc
mov
sbb
or
test
dec
adc
outsl
cmp
mov
or
std
add
jb
lea
bound
push
leave
sub
nop
movsb
bnd
jae
loopne
test
shll
popa
clc
xor
or
loop
pop
push
lret
mov
or
and
popf
sti
sbb
sahf
mov
pop
pop
push
push
xchg
mov
enter
push
dec
out
imul
cmp
fbstp
push
xor
into
cmp
sub
cmpsl
cmpl
adc
pusha
lret
inc
pop
push
inc
jp
sub
test
je
and
sbb
notl
adc
mov
push
cmp
sub
xor
add
lods
outsb
pop
cmc
mov
sub
mov
pop
divb
in
jmp
roll
or
jle
mov
movsl
mov
movsb
nop
jb
sbb
ja
test
out
js
popf
sbb
rcrl
nop
mov
andl
jle
stos
cltd
sbb
loop
idivl
neg
jp
fwait
and
inc
cmc
and
push
pushf
mov
mov
insl
lock
jmp
mov
push
mov
mov
ds
cmp
movsb
mov
jl
xorb
fnsave
ljmp
jo
rol
ljmp
outsb
add
sub
mulb
in
lock
jmp
rorb
test
mov
mov
aad
xchg
push
jg
lahf
insl
ja
inc
iret
push
int3
stos
and
push
in
das
push
pushl
jb
icebp
mov
sti
and
xchg
fdivr
inc
arpl
mov
jae
adc
jb
imul
rorb
mov
scas
mov
cmpsl
sbb
fs
cld
test
or
repnz
jae
xor
push
int3
dec
add
jbe
xchg
adc
addr16
fildll
data16
cmp
jb
push
xchg
je
push
inc
jp
sbb
pop
inc
mov
jnp
jns
mov
jg
aas
adc
cmp
loope
mov
xlat
adc
xlat
jp
or
mov
adc
push
or
cmp
mov
mul
or
xor
jnp
out
xor
or
fcmovu
sbb
test
push
imul
rcrl
sbb
out
in
stos
int
push
mov
stos
test
scas
or
stc
sub
mov
push
sbb
xchg
iret
aas
adc
inc
push
aad
add
lock
lret
pop
xchg
push
bound
loopne
xchg
sbbb
cmc
in
xor
je
aad
in
insl
xorb
cmp
xlat
push
xchg
sbb
repz
push
jns
xchg
cmp
sub
filds
adc
aad
loope
mov
pop
cmc
push
mov
divb
mov
inc
cmc
mov
or
pop
call
add
sub
dec
lret
jmp
cmp
call
fld
mov
mov
cmp
fdivrs
out
outsb
iret
add
fsubrl
test
push
dec
icebp
pop
xchg
cld
and
mov
scas
pop
cmc
cwtl
jbe
cmp
or
andl
push
mov
add
test
out
outsl
jge
testb
scas
sbb
xchg
or
dec
mov
push
sbb
mov
inc
inc
int
pop
inc
sub
mov
out
clc
frstor
xor
ljmp
and
inc
xchg
dec
sub
lods
lcall
xor
dec
push
call
repnz
mov
and
and
mov
jp
xlat
in
and
jns
int
testl
gs
inc
jl
or
out
movsl
sbb
sub
sbb
pop
xorb
call
mov
cmc
ret
inc
into
arpl
int
fsubr
jle
dec
inc
lea
mov
jp
ds
lcall
sbb
add
inc
daa
fwait
push
xor
mov
adc
or
or
not
stc
in
ljmp
jp
mov
dec
ljmp
push
adc
mov
xor
sub
sub
enter
pop
ds
inc
aaa
lds
adc
sub
decl
xor
push
in
jg
jne
pop
popa
lcall
lock
xor
sub
mov
fldcw
dec
jb
mov
sub
cmp
aas
push
pop
outsb
add
scas
adc
sbb
dec
or
push
enter
mov
mov
test
out
lods
cmp
pushf
mov
ljmp
mov
mov
xchg
daa
push
xor
das
jmp
inc
cmp
adc
punpckhwd
sub
and
push
shlb
mov
iret
sar
mov
jmp
jns
mov
sbb
xchg
leave
push
scas
lret
cmp
pop
sub
stos
hlt
jns
adc
ret
push
movsl
and
sahf
mov
shl
movsb
dec
loope
and
push
call
and
std
hlt
add
sbb
inc
adc
sbb
add
push
push
inc
push
sbb
add
outsl
lock
outsb
in
sbb
shrb
stos
orb
push
test
ret
shlb
rolb
testl
clc
xlat
shrb
adc
cs
xor
cs
fs
cmc
mov
in
cmc
mov
ja
into
cmp
push
mov
mov
jo
jne
jae
and
cld
cmp
jnp
aam
outsl
ds
out
in
mov
mov
cld
or
mov
ss
in
mov
fcompl
arpl
mov
jae
lahf
push
movsb
jo
fs
xchg
adc
pop
xchg
dec
stos
pop
ja
lock
cmpsb
jecxz
lods
lods
push
adc
jnp
dec
pop
in
lods
inc
mov
cmpsl
das
rorb
enter
mov
add
xor
dec
jo
cmp
xchg
aam
cltd
hlt
enter
movsb
out
in
sarb
aam
test
fists
sbb
sbbb
mov
sub
movsb
int3
insl
mov
xchg
stos
mov
hlt
loopne
add
or
jae
stos
insl
fwait
jecxz
cmp
pop
pop
jnp
mov
les
cmp
adc
int
xlat
outsl
and
pop
xor
bound
sbb
les
jbe
or
iret
sbb
mov
or
hlt
cmp
jne
cmpb
cmpsl
lods
iret
nop
dec
test
sbb
loop
btrl
inc
ror
sub
sbb
pop
dec
sbb
ret
xchg
or
test
pop
pop
and
cli
fidivrl
jno
in
pop
aam
sbb
jg
adc
sub
data16
jp
xchg
out
push
mov
shrl
cmpsl
pop
out
sub
mov
outsb
movsb
cli
cltd
cmc
gs
add
aas
cmc
shll
mov
or
sarl
dec
mov
mov
add
mov
arpl
les
insl
fnsave
das
push
jo
sub
pop
mov
icebp
idiv
or
lret
or
jp
push
jl
jl
outsl
mov
repnz
pop
jb
aaa
or
call
in
out
adc
shlb
mov
jnp
sub
xor
adc
shll
shll
and
sar
cmp
insl
out
mov
pop
push
or
mov
loop
lods
xchg
lcall
ret
pop
jb
es
inc
add
inc
or
js
pop
add
enter
loop
dec
imul
mov
or
and
aas
xchg
mov
pop
push
hlt
fildll
clc
insb
push
scas
pop
inc
imul
mov
ds
jecxz
sbb
sbb
mov
stos
mov
sarl
xchg
xchg
mov
sub
int3
sub
hlt
lahf
xchg
loope
movsb
push
add
xchg
sbb
fsubl
loope
adc
and
add
loope
cli
inc
idivb
xchg
scas
jns
jp
and
iret
lock
xor
add
cltd
push
aaa
daa
inc
inc
cmp
stos
mov
cs
shlb
sub
push
sbb
cltd
lods
repnz
pop
xor
xor
in
mov
out
adc
ja
and
mov
sahf
in
lahf
mov
mov
jmp
movb
xor
add
mov
icebp
mov
aas
rcll
xor
fbstp
xchg
dec
call
outsb
out
std
imul
lods
stos
pop
cmpsb
mov
out
aam
arpl
pop
neg
test
push
inc
jbe
jecxz
ret
enter
mov
rep
aaa
aaa
call
inc
push
sbbb
and
sub
adc
hlt
or
andl
cwtl
inc
repnz
fsubrs
cmpl
sbbl
mov
sbb
test
xor
sbb
jge
jno
scas
jo
test
and
xor
mov
mov
or
hlt
jb
pop
cld
leave
outsl
sbb
cmpsl
ret
sub
mov
scas
cwtl
mov
xchg
jl
jmp
out
jmp
pop
lcall
xlat
push
xchg
cmpsb
push
pop
rclb
cmp
inc
cmp
scas
xor
or
fdivl
je
dec
jmp
loop
xchg
add
mov
negb
xor
xor
pop
dec
cmpb
mov
dec
mov
xchg
scas
bound
jg
xchg
fistpll
mov
shll
ds
dec
sbb
fstl
inc
daa
and
cmp
mov
cmp
mov
sub
movsb
popa
cltd
ja
sub
ficoms
loope
out
dec
fmull
jmp
scas
test
arpl
pop
and
jae
mov
cmp
pop
adc
xor
and
leave
or
sub
push
aaa
sbb
ret
repz
nop
lock
cli
loopne
xchg
mov
dec
flds
ljmp
test
add
popf
imul
loopne
outsb
imul
clc
movsl
jb
mov
lea
push
dec
fsubs
nop
popa
xchg
shlb
and
lds
push
mov
jbe
fstps
or
stos
jbe
fdivrp
adc
push
adc
xor
adc
sub
jg
inc
jno
sbb
push
int3
mov
scas
das
cli
lahf
lcall
imul
ss
mov
cwtl
mov
cmp
jns
or
and
mov
mov
or
sbb
out
punpcklwd
jbe
add
and
ret
test
push
int
mov
pop
jp
or
mov
bound
mulb
mov
leave
enter
and
cmc
mov
mov
cltd
adc
ds
rorl
in
adc
enter
mull
lcall
lock
dec
ds
aam
shl
imul
lods
call
push
int3
mov
mov
push
or
and
rorl
mov
mov
int3
push
dec
and
hlt
mov
out
sbb
iret
add
movsb
popf
mov
sbb
xchg
lcall
out
sub
stos
ja
cmp
jmp
inc
adc
fldcw
jecxz
in
daa
test
mov
cmp
cs
gs
aad
xor
and
xor
xor
shll
xor
aas
imul
mov
cs
daa
out
shll
mov
add
adc
rol
xchg
negl
inc
xor
or
mov
jle
inc
jp
lret
and
pop
add
loopne
and
dec
mov
movsl
add
mov
mov
mov
adc
add
movsl
inc
movsb
mov
mov
insb
imul
or
inc
mov
icebp
nop
sahf
mov
in
and
pop
cwtl
loope
rorl
mov
lds
icebp
bound
test
pop
cli
call
lods
cli
cmp
aad
lcall
int3
mov
mov
sbb
add
jecxz
sbb
in
in
in
sub
push
les
or
pop
jno
in
scas
pop
pop
xchg
repnz
jmp
xor
xchg
movsb
es
insb
pop
cmp
cmp
xchg
mov
push
test
cmc
xor
push
leave
rorb
out
out
ret
xchg
cld
pop
data16
jnp
frstor
in
mov
and
or
leave
mov
pop
loop
mov
std
mov
inc
imul
inc
xchg
hlt
loopne
xchg
test
dec
lcall
mov
dec
mov
cwtl
sub
push
jno
jo
and
fdiv
je
cli
jno
sub
add
inc
cmp
fmull
xchg
adc
lahf
scas
mov
mov
mov
leave
push
lahf
sbb
sbb
fsubp
std
sub
pusha
test
out
mov
pop
xor
adc
push
fbld
adc
adc
jge
mov
das
xor
inc
and
cltd
mov
in
inc
add
es
pop
fisubs
les
or
add
xorb
push
test
and
aam
lods
imul
and
ror
arpl
imul
cs
imul
fadds
lods
pop
cmp
pop
shr
sbbb
insl
test
dec
loope
jmp
or
loope
test
inc
push
mov
mov
cwtl
mov
insb
jg
imul
mov
shll
in
in
push
sub
inc
outsl
pushf
lea
pop
mov
add
pushf
and
cmp
es
or
pop
lods
subb
stos
xchg
or
xlat
or
lods
cld
insl
or
jb
mov
out
sub
loopne
stos
or
stos
mul
push
xchg
das
mov
mov
jbe
sub
jae
ss
repz
dec
jp
in
push
in
sbb
mov
jecxz
loope
mov
int3
cli
pop
mov
lcall
adc
mov
fsubrl
lds
std
stos
ljmp
sbb
lea
push
jp
pushf
mov
int
addr16
mov
push
insl
cmpsl
insb
mov
popf
sbb
scas
aam
lret
inc
add
or
addr16
insb
mov
mov
jno
ffreep
in
cmp
cmp
popa
inc
fstl
adc
sbb
push
xor
xchg
push
xchg
inc
arpl
lds
testl
jne
fsts
push
jo
ret
dec
clc
mov
rorl
out
sbb
or
mov
mov
adc
mov
in
lret
or
cmp
mov
sub
ret
cwtl
add
mov
xchg
mov
and
pop
cltd
and
popa
mov
es
pop
test
mov
lock
out
and
rol
loope
aad
stc
jge
jns
out
mov
movsl
in
mov
adc
mov
mov
into
cmpsb
inc
sbb
std
mov
insb
jne
inc
sub
inc
cltd
mov
xchg
test
sbb
mov
and
adc
insl
cmc
shlb
push
ljmp
mov
push
aaa
push
sti
addb
cmp
add
dec
lahf
sbb
pop
stos
fimuls
insl
push
rolb
mov
lea
lret
scas
xchg
push
popa
fistl
cwtl
mov
addb
dec
shll
dec
test
sbb
jae
sbb
sbb
test
pop
ds
stos
test
rolb
clc
fcom
and
sbb
out
jg
mov
inc
mov
lods
adc
jno
sub
jo
mov
ljmp
sbb
inc
iret
enter
and
adc
sbb
test
out
inc
mov
fdivr
lahf
and
movsl
mov
pop
loopnew
addr16
xchg
cmp
mov
pop
dec
jnp
cld
xchg
repz
mull
xchg
inc
fmulp
loop
mov
or
dec
jg
lret
fidivrs
pop
jge
loopne
lcall
sbb
out
sbb
movsl
es
cmp
dec
push
sub
leave
pop
or
xor
jl
aam
mov
xchg
mov
pop
ljmpw
test
pop
imul
add
cmc
xor
jle
rcrb
outsl
adc
inc
add
jnp
cmp
pop
cmp
cwtl
test
leave
sti
repz
pop
lods
add
ret
mov
enter
popa
or
in
mov
dec
fisubs
push
push
push
test
sbb
add
insb
dec
out
es
lahf
xchg
aam
sub
aas
mov
push
into
dec
lock
and
pushf
sub
xor
out
xchg
jg
mov
mov
mov
stos
out
jne
push
loopne
popa
stc
lock
sbb
iret
lock
cwtl
jg
pop
imul
in
outsb
xchg
or
das
ret
mov
pop
mov
and
vhsubps
jns
sbb
fbld
push
out
es
sbb
mov
mov
gs
imul
js
xor
xchg
sbb
cmp
into
shll
mov
pop
inc
lods
pop
fidivrs
insl
cmpsl
sbbb
sub
jne
loopne
lret
jns
adc
out
fstpt
or
call
or
sar
or
dec
mov
mov
outsl
lea
inc
add
inc
daa
bound
add
adc
and
xor
sarl
or
mov
mov
jno
add
adc
and
xor
sarl
or
mov
mov
jno
add
adc
int
cmp
cmc
or
movsl
pop
orl
popf
pop
mov
std
add
pop
mov
rol
xchg
icebp
jp
cmc
sbb
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
adc
aad
lds
xor
push
mov
test
jne
gs
cmpsb
inc
xor
testb
aad
lds
inc
movsl
jbe
test
push
cmpsb
inc
xchg
xor
out
scas
cmc
hlt
in
aad
lds
movsl
push
frstor
inc
mov
addr16
mov
push
jb
inc
lods
dec
dec
adc
add
rclb
loop
cli
mov
mov
pop
sti
xchg
jmp
pusha
popf
repnz
lcall
lods
inc
testl
pop
je
aad
imul
xchg
cmpsb
mov
ds
rcrl
lret
mov
movsl
mov
data16
scas
xchg
xor
ljmp
push
push
mov
mov
sub
mov
add
test
ljmp
aaa
mov
cmp
shrb
movsl
add
inc
pop
and
add
cmc
push
in
aad
lds
xchg
rolb
push
xchg
inc
sahf
xor
out
jg
je
inc
mov
sub
xchg
adc
adc
cmp
test
lahf
pop
addl
out
aad
mov
std
and
and
test
or
fisubrs
scas
push
test
push
jp
push
push
mov
inc
movsl
jbe
test
push
cmpsb
inc
xor
out
push
cmc
push
in
aad
lds
inc
movsl
jbe
test
push
cmpsb
inc
xor
out
push
cmc
mov
sbbb
les
xchg
jne
aad
lea
das
arpl
cltd
es
xchg
jge
mov
adc
push
loope
mov
ljmp
jle
pop
adc
push
lret
popf
mov
sub
cli
daa
testb
jle
rclb
cs
ds
sub
pop
lahf
fstpt
mov
fldt
add
xchg
addr16
jmp
je
fcmovbe
mov
jmp
or
xor
xchg
inc
mov
or
daa
aas
jae
push
call
out
fisubrs
mov
lea
inc
dec
sub
imul
xor
dec
outsb
push
sub
test
push
push
stos
es
dec
std
jecxz
mov
mov
and
sub
fldcw
xchg
push
mov
adc
dec
gs
out
push
mov
sub
lea
and
jecxz
mov
push
mov
std
sub
sarb
gs
fsub
mov
cwtl
or
leave
lods
mov
cli
hlt
shlb
repz
mov
aaa
and
clc
jp
inc
pop
or
loopne
lret
xchg
sarl
adc
nop
cli
stos
cmp
push
cmpsl
inc
inc
adc
sub
out
mov
mov
insl
pop
out
out
jmp
fwait
jmp
jl
ss
push
mov
cmpw
js
inc
xor
pop
jbe
mov
aas
test
push
mov
ds
or
pusha
or
mov
and
cmpl
ret
mov
sarb
cwtl
out
arpl
dec
dec
sub
adc
cmp
call
xchg
jl
mov
popf
adc
add
nop
popf
mov
xchg
pop
push
fucomp
dec
ret
inc
and
in
sbb
cmpsl
pop
int3
mov
stos
in
addb
push
pop
insl
cld
push
fiadds
cmpsb
jp
add
push
or
fisttps
mov
lods
jle
sub
push
adc
out
out
adcb
cmp
push
rol
inc
inc
push
inc
les
pop
mov
jp
lds
push
dec
nop
fdivrp
aas
in
clc
shrb
adc
and
pop
imul
xchg
popf
outsl
and
repnz
dec
in
push
rolb
sub
cs
push
inc
xlat
repz
inc
jae
aaa
ficoms
mov
add
pop
sarb
fistpl
repnz
mov
lds
xchg
cmpsb
bnd
mov
aaa
stc
fildll
sbb
ljmp
add
xchg
mov
push
jecxz
add
jo
popa
jge
adc
ret
lret
mov
aam
pop
das
push
and
or
dec
js
push
int
mov
mov
cmc
or
in
and
push
ljmp
inc
inc
hlt
jbe
jbe
pop
loop
jns
lcall
jb
mov
loopnew
inc
xchg
addl
into
frstor
xlat
xchg
mov
dec
lea
adc
push
and
lods
xchg
and
stos
repz
inc
sbb
in
fsubrs
xchg
mov
cltd
xchg
add
in
jae
jmp
lods
mov
insb
fcmovne
scas
inc
es
int
or
ficompl
repnz
pop
lds
in
lea
jle
jmp
push
inc
inc
lock
and
cld
dec
xor
nop
mov
mov
xchg
movsl
fnsave
xchg
add
sbb
repnz
das
bnd
sub
mov
adc
dec
cli
aad
loop
std
pop
outsb
pop
jp,pt
ljmp
push
adc
cmp
sbbb
adc
mov
call
out
jnp
fs
and
and
outsb
int
movsl
sbb
add
jecxz
dec
cltd
dec
aad
decb
dec
xor
lods
xor
loope
lds
xchg
jo
mov
or
inc
popf
xchg
or
push
lock
mov
dec
mov
insb
and
push
jb
iret
pop
jb
sub
mov
jb
pop
popa
repnz
add
inc
repz
xor
sub
gs
jmp
jne
lcall
mov
loop
fbstp
pop
jp
setne
shlb
sbb
imul
xchg
dec
mov
xorb
sbb
pop
sub
arpl
sar
mov
mov
xchg
mov
mov
xor
sti
push
cs
inc
or
cltd
outsl
jge
sahf
jmp
xchg
jmp
lahf
insb
test
mov
negb
mov
das
aad
add
add
pop
sbbb
mov
pop
cmp
push
std
stos
push
cltd
push
adc
xor
jecxz
cwtl
sub
loope
mov
push
dec
xchg
cmc
inc
push
xlat
std
mov
in
ds
fnstsw
iret
ds
movsb
add
mov
cmpsb
and
pop
pusha
jbe
jmp
jb
push
cmpsl
dec
cvtps2pd
loopne
xchg
popa
mov
and
pusha
or
mov
mov
mov
xor
xchg
cmp
sbb
rep
xchg
das
xor
xor
lods
fisttpll
cmc
pop
mov
xor
adc
add
jno
inc
mov
arpl
icebp
or
sbb
add
mov
push
shll
mov
mov
aad
repnz
loope
fidivs
inc
dec
xchg
in
fisubrs
xchg
add
cmpsb
sbb
mov
cld
or
mov
aaa
in
mov
pop
xor
mov
push
push
call
enter
in
stos
inc
out
insl
pushf
aam
mov
cmp
rolb
decl
adc
cmp
xorl
subl
insl
inc
pop
lds
shll
sub
scas
add
into
mov
jne
sbb
daa
inc
insb
dec
hlt
or
call
and
mov
xor
je
scas
pushf
lods
jle
dec
inc
inc
xchg
pushf
daa
xor
movsb
repnz
xor
pusha
cmp
cmp
jmp
lea
jmp
or
inc
or
clc
pop
push
or
push
xor
scas
pusha
test
cwtl
dec
aam
je
inc
dec
lret
movsl
scas
es
addr16
or
gs
pusha
mov
push
or
and
xor
xchg
es
stc
xorl
mov
jo
jg
popa
dec
iret
mov
lock
mov
ficoms
add
dec
xchg
enter
mov
insb
inc
inc
adc
mov
jno
or
pop
adcl
adc
jmp
mov
sahf
pop
ss
lahf
jbe
pmaxsw
mov
sbb
cmp
cmpsb
fwait
js
xchg
lods
adc
stos
sub
adc
ljmp
and
rcll
popa
dec
jle
xchg
iret
add
movsl
push
testl
or
into
dec
sbb
aas
cmp
addl
outsb
or
xchg
sahf
or
jecxz
call
or
cmp
aam
mov
xor
inc
sbb
jb
jae
lock
test
pop
jg
in
fs
add
ret
xchg
or
xlat
add
sub
xor
lret
stos
jne
icebp
and
cmc
pop
insb
xchg
mov
jmp
xchg
into
mov
insb
cmc
jle
orl
notb
movl
gs
jb
and
or
sub
mov
js
cmp
mov
sub
rcrb
or
xchg
incl
fnstsw
cmp
insb
mov
sbb
add
pxor
mov
out
add
adc
push
ja
hlt
aad
fxch
pop
pop
push
xor
aad
shrl
rep
popf
push
idivl
mov
in
int
sub
test
adc
push
mov
fs
adc
jge
mov
lahf
adc
enter
jnp
fwait
shl
ret
sub
fdivl
adc
fisttpl
sub
mov
adc
fsubp
inc
adc
mov
pop
pop
loope
xchg
dec
mov
mov
aam
into
cltd
add
cs
imul
jns
ret
sahf
lock
enter
adc
mov
xchg
cmp
das
iret
in
inc
push
cli
and
pop
sub
push
push
aam
fs
dec
in
in
and
call
arpl
push
mov
push
mov
fdiv
pushf
js
das
aam
movsb
jno
cs
pop
lods
jo
xchg
rorb
mov
push
adc
mov
add
leave
cld
clc
sbb
sbb
or
sbb
dec
lods
mov
cmc
sahf
out
mov
jo
xchg
fmull
push
jl
idivb
lret
gs
push
loopne
in
sahf
js
xor
iret
mov
ret
push
add
dec
imull
jp
dec
sarb
mov
mov
jae
imul
pop
outsl
push
cmpsb
cmp
lods
clc
scas
inc
adc
xlat
mov
lret
iret
push
lods
fmul
scas
adc
imul
add
cs
mov
add
lds
dec
sbb
mulb
fimull
mov
dec
sub
mov
ja
fwait
jl
mov
cmp
and
lock
and
mov
jnp
add
les
scas
in
sub
pop
or
sti
xor
sbb
shll
icebp
sahf
xchg
test
add
loope
push
and
mov
aam
imul
nopl
xchg
mov
pop
jb
rcll
movsb
jns
stc
ds
or
jno
dec
fidivs
mov
gs
mov
mov
inc
sbb
sahf
mov
aas
dec
sub
test
ds
out
pop
mov
cltd
adc
mov
dec
mov
mov
fs
or
and
bound
das
iret
inc
add
inc
adcb
fisubl
mov
push
sar
lcall
lock
lcall
fbld
loopne
iret
inc
push
testl
fwait
sub
jl
test
adc
mov
sub
mov
mov
jmp
dec
orb
lds
test
mov
cwtl
leave
jo
jns
cmpsl
jo
xchg
lods
inc
sub
inc
gs
movsb
mov
jp
data16
or
jno
in
push
mov
or
subl
in
adc
add
stos
dec
inc
xchg
push
sbb
ss
mov
push
push
push
fidivrs
dec
fs
jae
xchg
hlt
cld
jmp
int3
lods
in
fldl
ljmp
pushf
jge
inc
mov
ret
mov
sbb
and
pop
pop
mov
mov
adc
ds
or
lahf
clc
inc
arpl
pop
int
cmc
sbb
xor
adc
cmp
mov
stos
or
int
sub
je
xor
jl
ds
sbb
popf
addb
data16
fcompl
addr16
es
fnstcw
inc
repnz
add
mov
lret
xor
cmc
data16
add
shr
sbb
dec
inc
mov
arpl
faddl
fistl
dec
cmp
mov
loope
sub
push
fisttps
ja
andl
jnp
lret
out
ljmp
sti
test
jl
scas
test
xchg
scas
sub
js
fcmovbe
mov
jnp
mov
xor
cwtl
push
xlat
jo
cwtl
or
test
cmp
push
fs
out
xchg
das
fcmovnb
mul
inc
inc
daa
mov
or
cmp
int
mov
imul
ret
bound
sbb
or
ja
cltd
xchg
jmp
mov
test
aad
loop
std
sub
js
ljmp
push
ja
fs
push
lods
xor
mov
xlat
gs
inc
pop
mov
lahf
add
int3
data16
push
xchg
mov
test
shrl
mov
xchg
jnp
sti
data16
inc
xor
and
fsubrl
mov
add
cmp
jb
and
and
inc
stc
rolb
adc
outsl
fstpl
pop
mov
xor
mov
dec
xchg
mov
call
mov
loope
push
std
jmp
sbb
xor
enter
insl
dec
cltd
sbb
enter
scas
mov
jecxz
sub
ret
mov
push
leave
pop
cmpsb
nop
xchg
int3
cwtl
push
and
adc
outsl
pop
shlb
cmp
arpl
mov
jnp
xlat
xchg
jb
xchg
fwait
rep
mov
dec
lea
sbb
sbbb
mov
mov
mov
push
and
scas
cmp
enter
and
in
imul
add
or
adc
jle
push
and
cltd
push
xchg
popa
cmc
addr16
icebp
sub
sti
adc
arpl
in
imul
sti
cmpsb
cmp
mov
jns
mov
hlt
aaa
fists
test
mov
out
pop
aaa
mov
addr16
push
push
jmp
sbb
daa
das
or
dec
or
imul
rcr
iret
push
cmpsl
sub
jmp
lahf
bound
fists
popf
lea
push
in
cmpl
stos
inc
stos
ss
add
test
add
into
lods
mov
pop
andl
sbb
pop
and
add
repz
setbe
shll
sar
imul
data16
add
loope
push
dec
out
pop
scas
and
pop
cmp
cwtl
adc
std
mov
and
cld
jmp
jbe
aaa
outsl
and
inc
cmp
mov
pop
repz
ljmp
dec
dec
enter
popa
lahf
lea
std
es
mov
push
xor
adcl
popf
and
jl
or
in
movsb
xlat
rcr
pop
dec
pop
lods
ret
push
jae
sysexit
xor
inc
mov
lahf
pop
rolb
mov
lds
mov
sti
mov
mov
adc
push
addb
repz
outsb
jecxz
xor
xlat
outsl
push
cwtl
inc
into
rcl
and
sbb
outsb
imul
add
jns
inc
push
in
jo
mov
call
test
pop
leave
push
jg
cmp
notl
scas
mov
clc
add
mov
sbb
mov
data16
and
cmc
xor
je
lcall
dec
jmp
xor
in
pop
jl
mov
mov
scas
sahf
pop
mov
iret
pop
jge
sub
xchg
pop
add
adc
in
push
ret
mov
and
jb
xchg
inc
dec
popa
test
int3
std
dec
jo
rcr
test
les
adc
xchg
test
les
dec
push
es
mov
push
cmc
repnz
mov
mov
ljmp
sbb
mov
mov
mov
sub
cmp
mov
ljmp
popa
imul
dec
jl
sti
inc
inc
subl
pop
nop
sbbl
mov
adc
jae
sti
sbb
out
xchg
push
aad
push
xchg
out
js
push
popf
add
lds
repnz
addl
pop
sub
decb
adc
fs
and
mov
and
cltd
push
jmp
jb
cmp
pop
cmp
push
sarb
pop
dec
push
outsb
cmp
cld
or
mov
cmp
pop
mov
pop
sub
insl
cmpsw
rcrb
stos
cmc
or
fstl
in
leave
dec
jl
jmp
jae
lods
call
adc
xchg
adc
dec
push
fmuls
pusha
lods
test
loopne
and
lods
jmp
out
loope
out
cmp
out
adc
add
pop
popf
jecxz
pop
ja
loope
sbb
mov
and
nop
cmp
cmp
cmp
ret
inc
inc
sbb
adc
push
mov
pop
mov
lret
dec
jae
pop
mov
ss
iret
dec
stos
adc
sub
outsb
jl
popa
xor
lahf
push
jno
call
pop
mov
inc
leave
mov
dec
clc
jae
push
mov
push
out
mov
cli
ljmp
add
out
dec
jno
mov
outsl
ret
adcb
push
mov
jmp
or
sbb
enter
sub
lds
std
jno
mov
arpl
adc
pop
jmp
outsb
jno
xchg
cmc
sub
or
movsb
dec
cmp
adc
push
jns
out
loope
add
imul
sub
cld
push
ret
rcl
into
mov
xor
xor
rcr
lds
cli
scas
test
and
lods
mov
mov
and
shr
mov
ja
mov
mov
scas
dec
xchg
call
adc
enter
or
xchg
cmc
in
xchg
out
jbe
dec
jl
aam
out
test
test
hlt
mov
jo
loop
test
mov
lcall
test
mov
mov
xlat
popa
inc
mov
fistpll
and
scas
mov
mull
int
leave
add
rol
cmp
or
adcl
xor
mov
shl
lea
dec
cld
lea
mov
pop
lret
lahf
jecxz
aad
repnz
orb
and
pop
fs
mov
out
dec
dec
loope
and
add
rorb
adc
pop
mov
je
mov
jo
test
rorb
xor
pop
test
xor
lods
push
and
push
loopne
out
test
lock
imul
fwait
call
pop
or
jp
mov
xchg
xchg
inc
fs
inc
pop
cltd
std
sti
or
test
inc
push
in
mov
clc
pop
or
pop
push
adc
andb
mov
inc
xchg
xlat
repnz
add
rorl
lods
pushf
lret
push
pop
jns
xor
int
arpl
stc
fdivs
cmc
xchg
xchg
xor
ljmp
es
stos
loop
cmp
stos
fiadds
sbb
sbb
add
mov
add
cmp
jle
and
inc
pop
cmp
xchg
cmp
ja
inc
lods
sti
pop
sarb
mov
pop
and
jle
sub
and
mov
fistl
inc
fidivrl
outsl
inc
push
out
dec
pop
sti
inc
notl
into
das
jno
je
inc
icebp
insb
iret
decb
lods
fidivrl
mov
les
movsl
lahf
add
xor
fs
in
ss
arpl
cmc
int
lret
in
notb
imul
or
mov
xchg
fimull
pushf
xor
sahf
sti
lahf
sbb
pop
sarl
xor
mov
daa
cmpb
xchg
bound
add
xchg
sub
cs
fdivrs
imul
xlat
push
pop
iret
out
not
xor
pusha
jo
shl
icebp
push
test
movsl
std
jns
xor
xchg
xlat
xchg
mov
or
mov
add
int
pop
ret
pop
sarl
mov
ds
inc
xchg
loope
jge
test
das
jl
push
repnz
daa
hlt
or
xor
cltd
xor
pop
pop
jae
call
shlw
jge
inc
std
cmp
xchg
fbld
dec
mov
inc
shr
mov
out
pop
rorl
add
scas
cmp
fnstsw
or
pop
sbb
jo
jge
fstp
mov
dec
ds
jb
loop
out
test
push
notl
jnp
jno
inc
cli
cmc
lea
adc
lret
add
xlat
das
cmp
cltd
xchg
fs
adc
stos
mov
dec
aam
dec
sbb
fwait
adc
ret
jo
xchg
mov
loope
popa
jb
in
push
sub
lahf
jnp
mov
and
test
inc
jno
xorb
add
inc
out
push
loope
mov
ret
sbb
pop
or
add
push
add
xchg
ja
arpl
jo
mov
adc
imul
push
dec
xorb
pusha
cmp
jb
sbb
dec
cmp
pushf
pushf
jg
cmp
mov
cmp
iret
add
jge
mov
or
lock
mov
sbb
add
testb
subb
ficomps
jmp
popf
xchg
stos
cmp
scas
mov
mov
sti
addr16
sub
stos
cmp
ret
mov
in
test
iret
xor
add
add
sub
imul
test
int
xor
mov
inc
stc
call
pop
sub
ds
in
or
jns
js
popf
pop
mov
fbstp
push
int3
inc
aas
cs
addl
cmpsb
scas
xor
test
ss
insl
push
adc
imul
lea
cltd
ljmp
inc
mov
jno
bound
movsb
pop
rorb
lds
inc
movsl
jbe
test
push
cmpsb
inc
xor
out
push
cmc
push
in
aad
lds
inc
movsl
jbe
test
push
cmpsb
inc
xor
out
push
cmc
ss
push
es
inc
and
xchg
cmc
xchg
push
cmpsb
inc
xor
push
add
insb
aad
lds
push
movsl
jbe
out
xchg
jne
iret
sbb
cmpsb
xor
ljmp
out
mov
mov
jmp
cs
or
jg
push
pop
push
les
jnp
imul
fisttps
fistpl
lahf
dec
pop
pop
or
cmp
movaps
dec
das
jnp
imul
fists
pop
lahf
shrl
sbb
push
inc
sbb
adc
aas
wbinvd
push
add
xlat
mov
adc
add
rcrl
sub
mov
mov
lcall
sti
mov
lret
in
cmc
ss
repnz
adc
dec
pop
fsubp
loopne
sahf
hlt
mov
loopne
enter
sbb
or
push
adc
fcomip
lods
jnp
cs
fbstp
adc
outsb
pop
sti
cltd
cmc
outsb
les
into
aas
test
je
inc
ljmp
repz
hlt
aas
ret
jg
pop
pop
ja
stos
sub
out
aaa
fs
gs
jp
outsl
push
push
outsb
push
cli
jns
mov
mov
repnz
jae
stos
jns,pn
insl
nop
mov
fwait
out
mov
lahf
lret
scas
sti
mov
adc
jg
cmovae
push
das
popa
aas
push
fwait
fwait
stc
sbb
into
int3
fsqrt
stos
call
je
or
aas
sbb
ds
dec
inc
adc
pop
nop
repnz
loop
enter
test
outsl
xor
pop
sbb
inc
sub
sbb
pop
mov
out
into
call
mov
or
jg
cvtdq2ps
dec
das
jnp
imul
fisttps
fistpl
jmp
sbb
outsl
cmp
cvtdq2ps
dec
das
jnp
imul
ficompl
cld
push
xchg
push
fnsave
push
imul
and
jl
stos
dec
mov
ss
cli
sarl
dec
sub
insl
pop
pusha
stos
add
adc
je
sbb
xchg
xor
loope
inc
cmp
jp
or
or
mov
leave
lods
sbb
push
repnz
pop
push
in
mov
mov
mov
and
pop
jno
cmp
pop
inc
ret
inc
das
data16
jno
or
cld
xchg
push
jmp
lret
or
sbb
adc
daa
xchg
sbb
xlat
fimuls
pop
std
lock
fs
ljmp
daa
cmp
push
inc
ret
pop
inc
xchg
jns
test
rcll
rorl
xchg
mov
addr16
jle
add
inc
sti
insl
jne
push
daa
lret
inc
jno
mov
ljmp
addl
cltd
lahf
cmc
sub
sbb
scas
push
xchg
andb
scas
jle
in
lods
aam
lock
ljmp
mov
arpl
testb
hlt
fwait
inc
scas
pop
cmp
jne,pt
mov
fnstenv
test
enter
or
push
fildll
dec
lret
adc
or
jnp
or
jmp
mov
jae
dec
cmp
sti
cmp
imull
adc
int3
shlb
and
inc
and
push
add
leave
and
into
inc
inc
cmp
pop
fmull
dec
pop
mov
inc
in
jbe
sbb
xchg
clc
or
xchg
adc
adc
cld
inc
and
cmp
jb
add
dec
sub
ficoml
movzbl
aaa
je
mov
push
repz
pop
cmc
sub
stc
pop
insl
imul
mov
orb
repz
test
pop
mov
das
sbb
inc
xchg
sarb
inc
loope
je
test
test
int3
cmp
mov
mov
fwait
add
aaa
inc
fwait
inc
push
fdivrl
aam
mov
cli
enter
out
aaa
std
jae
stos
mov
mov
adc
adc
test
add
cmp
lret
fs
cli
mov
inc
mov
cmpsl
jns
inc
daa
not
out
lea
push
es
mov
add
aas
outsl
xchg
insl
loop
inc
jno
cmc
rorl
cmp
ret
ret
dec
mov
mov
movsl
cmp
arpl
jle
daa
sbb
adcl
cli
pop
xchg
add
push
and
outsb
jbe
rcl
push
inc
mov
jecxz
clc
adc
mov
jl
push
imul
outsl
in
test
pop
push
mov
lret
jo
add
jns
test
fdivrl
and
or
rolb
nop
aad
sub
imul
mov
pop
mov
mov
pop
mov
inc
roll
adc
pop
sub
outsb
mov
fsubr
cmp
iret
inc
pop
sbb
inc
push
stos
jne
xchg
loopne
xlat
cmpb
cld
fidivrs
nop
aad
fwait
rorb
sarl
add
fildl
sbb
add
mov
pop
std
xchg
inc
stos
prefetcht0
xchg
pop
sbb
or
mov
mov
or
pop
and
mov
notl
fadds
mov
add
test
sbb
mov
aad
clc
out
push
pusha
xchg
incl
xlat
mov
in
push
pop
out
lret
sti
lahf
sbb
cwtl
xchg
pop
jae
mov
jns
jbe
push
sub
in
lock
int3
in
jle
sbb
inc
cmp
addr16
adc
roll
add
sbb
push
xchg
jle
in
mov
and
push
lods
loope
sbb
mov
or
or
cmpsb
xor
push
clc
sti
ss
sbb
loop
adc
packuswb
push
sub
pop
xchg
xlat
fdiv
orb
aam
enter
mov
es
mov
adc
dec
loope
mov
mov
push
into
jb
mov
jmp
and
das
push
jl
outsb
mov
mov
jno
mov
pop
jmp
jmp
jle
mov
inc
sub
aaa
adc
add
stos
jle
gs
dec
cmp
enter
insl
gs
sub
rclb
lods
pop
and
jnp
movsl
dec
jbe
inc
or
loopne
cmp
and
inc
insl
push
inc
inc
jnp
adcb
orb
cmp
mov
lds
mov
in
push
cmp
test
out
mov
leave
xchg
pusha
sbbl
call
ds
mov
mov
jbe
in
sub
mov
inc
jmp
pop
ror
mov
mov
pop
pop
mov
pusha
xchg
pop
repnz
xlat
pushf
adc
scas
dec
outsb
jnp
icebp
lahf
clc
sub
repz
negl
jno
jo
mov
and
lret
push
out
mov
movsl
sub
jno
push
gs
andl
out
inc
xchg
pop
icebp
sbb
mov
pop
dec
inc
lods
pop
xor
add
cs
lea
lock
lods
mov
fcmovnb
mov
xor
test
mov
lret
lods
jmp
sbb
ret
cmpsb
aas
jl
mov
xchg
or
lahf
je
divb
inc
xor
loope
test
jbe
outsl
cwtl
inc
scas
jecxz
add
insl
out
mov
jecxz
cmp
ror
ret
and
pushf
das
leave
enter
mov
aam
or
add
inc
pop
bound
outsb
stos
inc
pop
inc
fistpl
fs
cmp
bound
mov
cmp
mov
stos
xor
xchg
xchg
jns
cli
stos
adcl
add
xor
je
int
cli
popf
inc
lods
nop
insb
push
adc
sbb
loope
sbb
fdivrs
lea
lcall
jbe
and
rcl
sbb
dec
xchg
lods
int
cli
lods
inc
lds
xchg
jne
outsl
cmp
jno
in
call
int
lods
or
and
or
daa
xor
iret
dec
ljmp
pop
add
insl
push
push
sub
or
ror
cmp
gs
loopne
fcom
push
jb
lret
xor
cmp
test
in
mov
or
jge
pop
ds
aaa
mov
repz
mov
ret
pop
loopne
jmp
cmp
mov
and
fnstsw
pop
cmp
push
mov
leave
sub
daa
pop
pop
decl
push
dec
mov
mov
cmpsb
movsl
mov
jnp
add
jno
fwait
into
push
inc
pop
dec
test
ljmp
and
inc
out
xchg
dec
mov
mov
imul
sbb
lret
nop
jmp
push
out
adcb
xchg
jbe
lods
enter
jns
aad
inc
dec
inc
xlat
out
scas
or
test
mov
in
int
leave
outsl
cld
jg
cs
jns
enter
or
jne
cmp
push
loop
ss
add
negb
dec
inc
andb
cmpsl
lea
ljmp
push
dec
mov
inc
sbb
bound
bound
push
test
add
das
mov
jp
out
dec
imul
adc
nop
pop
pushf
aas
jb
and
push
xchg
mov
push
push
ss
cmp
icebp
xor
dec
jo,pt
sbb
pop
push
loop
inc
out
jle
or
jge
ret
mov
sub
adc
aam
push
mov
fdivr
jb
outsl
outsl
jl
enter
push
and
xor
adc
jne
nop
cltd
dec
lds
inc
xlat
jns
or
xor
jecxz
push
movsb
cmpxchg
repnz
mov
or
cltd
push
pop
jg
mov
aam
and
jne
push
arpl
lods
lods
sub
jg
jae
xor
push
fcmovbe
sti
stos
aam
pop
jo
xchg
xor
lock
nop
lahf
sbb
push
inc
xor
jl
sub
inc
mov
bsr
pushf
mov
xchg
push
push
dec
das
imul
adc
lods
jecxz
test
lahf
sub
lock
leave
fs
ja
pushf
andl
add
out
jb
xchg
adc
test
or
fwait
sub
push
mov
dec
out
mov
jbe
out
movsb
adc
test
mov
adc
jns
push
pop
nop
mov
or
or
insb
mov
pushf
imul
cmp
jecxz
sbb
and
and
adc
adc
iret
jae
in
xor
ret
scas
ljmp
push
stos
sbb
fldt
adc
and
xchg
adc
je
aad
sub
pop
cs
xor
jecxz
in
mov
imul
mov
xchg
xchg
mov
inc
inc
int3
and
pop
imul
mov
jg
mov
mov
and
jecxz
mov
xchg
xchg
in
mov
jno
lret
jae
inc
mov
out
inc
test
ljmp
push
cmp
xor
push
arpl
out
inc
popf
lret
inc
inc
xorl
push
mov
ljmp
in
arpl
inc
adc
and
sbb
xor
dec
push
mov
mov
mov
in
or
push
jmp
and
jl
sub
repz
dec
movsb
sub
int
xstore-rng
cmpsl
add
inc
ficomps
and
iret
imul
push
pusha
xchg
pop
outsl
xchg
test
jp
mov
mov
jmp
jl
shlb
bound
mov
xchg
sbb
jns
hlt
and
jnp
adc
xor
fsubrl
leave
mov
sahf
mov
push
repz
scas
cmp
out
aaa
out
lahf
pop
imul
mov
lods
push
ret
adc
sub
jle
sub
stc
xchg
add
cmp
mov
xor
repnz
push
adc
mov
push
jnp
mov
pop
sbb
or
icebp
fucomp
leavew
dec
ja
xchg
flds
lods
xchg
cmp
push
push
popf
or
push
call
push
scas
cmp
idivl
dec
push
pop
clc
rolb
ja
cli
inc
jnp
scas
aaa
vpsrld
arpl
or
xor
mov
test
mov
cmc
lock
push
xchg
sbb
and
mov
bound
pop
pop
xlat
cmp
add
mov
jl
xchg
cmp
jo
out
jns
ljmp
je
addl
ficompl
jl
and
inc
and
mov
movsb
and
outsl
xchg
xchg
fisubs
lahf
mov
popa
adc
mov
shlb
sbb
jl
inc
jl
jns
loope
jecxz
fwait
lcall
pop
fs
aam
hlt
es
cmpsb
cmp
repz
jae
shll
lret
pusha
repnz
cmp
mov
mov
cmpb
rclb
inc
fisttpl
jecxz
popf
mov
js
jno
and
aas
sti
cmp
pop
fdiv
jle
push
xchg
and
shr
popa
sbb
out
jg
stc
push
stc
cmp
sti
jmp
aam
push
sub
xchg
sub
cmp
inc
test
cmp
add
xor
jle
adc
push
rcl
loope
mov
fistpl
inc
inc
and
lcall
inc
in
dec
rcll
pusha
jge
lret
ljmp
xor
lea
lahf
xchg
pop
fcomps
mov
outsb
push
rcll
inc
xchg
jg
push
ds
sbb
xchg
insb
out
inc
in
je
loop
and
inc
sbb
sbb
pop
subl
out
sti
pop
leave
dec
cmpsl
fxch
cmp
push
and
and
push
gs
adc
jb
mov
in
leave
cmpsl
arpl
adc
mov
test
pop
xchg
mov
lret
pusha
pop
xchg
xchg
cmp
sar
jo
jmp
inc
push
clc
arpl
pop
mov
test
mov
cmpsl
lock
gs
dec
dec
aaa
sub
in
and
jae
sti
jecxz
sbb
rcl
mov
add
pop
pushf
pop
xchg
push
cwtl
inc
loop
popf
xlat
imul
out
fbld
lcall
scas
arpl
shrl
or
imul
call
push
xchg
imul
mov
std
pop
mov
inc
mov
mov
inc
cmc
jg
pop
adc
loop
pop
cmp
pop
arpl
lret
sahf
xchg
sub
xchg
push
cmp
add
cmp
xchg
dec
cmpsb
cwtl
outsb
lds
aaa
out
adc
repz
scas
cmp
in
in
aas
sti
enter
test
inc
div
mov
enter
icebp
push
out
push
int3
das
test
xchg
dec
xor
iret
pop
xor
cmpl
test
push
inc
xchg
lcall
xchg
pop
rorb
lahf
cli
mov
xchg
cmp
mov
leave
mov
push
jnp
lods
inc
mov
xchg
ret
xchg
pop
ror
nop
xor
cmp
jbe
add
insl
and
sbb
stos
mov
xchg
pop
mov
icebp
cld
enter
sub
loopne
cmp
mov
js
sbb
std
dec
out
pop
jge
xchg
sahf
repnz
or
jl
jns
shlb
fadds
mov
add
xchg
call
pop
js
das
inc
fdiv
mov
rorb
inc
xlat
pop
fisubrs
sub
sub
xor
movsb
enter
test
xor
sbb
ljmp
test
outsl
xor
jl
push
fdivrl
test
dec
xchg
aam
push
xor
sahf
or
data16
data16
push
imul
add
sahf
dec
jae
pop
sbb
mov
xchg
lcall
dec
and
fldenv
and
and
add
sbb
mov
or
and
sti
fistps
or
flds
mov
cld
mov
cmpsl
insb
sarb
dec
push
scas
inc
andl
xor
xchg
lcall
ja
add
sub
pop
cmp
dec
cmpsl
je
addr16
in
rcrl
jno
jp
fmuls
mov
outsb
mov
adc
ljmp
or
test
xchg
adc
sub
push
lcall
hlt
push
or
andb
sbb
cmp
aad
push
sbb
scas
mov
xlat
and
push
xchg
or
lret
cwtl
rcrl
add
mov
cld
fs
pop
test
in
aaa
adc
mov
in
sub
in
hlt
in
daa
inc
xchg
mov
shlb
mov
rorl
mov
jne
mov
cmp
popf
sbb
fimuls
fldcw
push
and
sub
and
adc
pop
sbb
cmp
aad
xor
gs
mov
xchg
enter
lahf
rcr
cmc
repnz
pop
push
pop
jmp
mov
inc
jb
xor
test
xchg
or
fcoml
pop
aaa
add
rcrl
neg
push
sti
jnp
dec
ljmp
pop
mov
int3
dec
mov
popf
gs
xchg
inc
jbe
jnp
addw
stc
shll
clc
inc
push
pushf
jle
aad
rclb
sbbb
push
leave
in
mov
mov
mov
sahf
in
cmpsl
pop
sub
pop
pop
fsubs
pop
pop
bound
out
jmp
mov
addl
inc
sbbl
enter
jmp
xchg
and
push
xlat
test
ret
lea
mov
shlb
sub
cmp
loope
pop
pop
adc
mov
xlat
sub
pop
std
loop
add
sbb
xchg
fcoms
sbb
int
std
cmpsb
scas
cmp
and
jmp
pop
sub
add
push
or
fwait
dec
and
xchg
xor
enter
fwait
mov
arpl
dec
and
into
sbb
dec
push
mov
jns
repz
pop
in
shrl
cmp
sub
stc
fidivs
dec
cltd
jl
popa
out
enter
in
cmp
je
fisttps
mov
arpl
arpl
insb
or
jl
or
mov
sbb
push
sub
movsl
xchg
mov
fsts
ds
sbb
add
xor
jl
adc
sbb
es
fildl
sbb
iret
cmpsl
xorl
shl
jae
invd
aas
loop
xchg
jns
sub
or
call
dec
cmp
fsubr
inc
jmp
pusha
lds
pop
aaa
fsts
and
or
fcmovb
push
pusha
rorl
cltd
dec
push
ret
out
jg
dec
fcomp
int3
xor
xor
fadds
lods
jnp
imul
xchg
mov
xorl
rcr
out
repnz
hlt
mov
cmpsl
lret
mov
loopne
ret
out
icebp
adc
mov
cmp
sub
inc
loopne
cmp
daa
mov
xchg
movsl
xchg
jns
adc
popa
test
sub
test
mov
int3
xchg
loope
out
aaa
cwtl
mov
mov
dec
push
fildl
pop
out
cmpsb
xchg
das
pusha
mov
push
push
popa
xor
ret
ja
push
stos
xor
dec
dec
sbb
movsl
jge
out
repz
loopne
jl
daa
jb
adc
outsb
pop
push
push
shrb
dec
jns
mov
mov
lock
push
xchg
push
nop
leave
add
enter
mov
leave
movsb
mov
xor
push
cmp
add
repnz
pop
in
jb
shlb
pop
mov
aaa
xor
xchg
mov
pop
mov
sbb
jg
les
jl
adc
mov
pop
test
inc
test
decl
jae
or
outsb
outsb
push
jo
jbe
lret
and
imul
movsl
lret
mov
push
nop
pusha
pop
sbb
aas
jmp
and
ret
shl
jns
adc
inc
dec
xlat
mov
push
aas
scas
mov
daa
and
mov
push
fucomp
push
pop
mov
ret
out
sbb
mov
xor
xchg
xorl
shlb
push
lock
imul
test
loopne
and
cmpsw
out
cld
daa
jle
lock
inc
lret
lods
xchg
lock
and
cmp
xchg
dec
dec
mov
rcll
xchg
mov
mov
test
add
jb
je
lods
cmpsb
mov
jmp
aad
sbb
lcall
ja
pop
push
push
pop
jne
sbb
cltd
push
sbb
hlt
add
pop
das
jecxz
mov
je
xor
cmc
std
ror
add
adc
jns
mov
dec
cmp
scas
mov
add
dec
sbb
mov
cmpsl
pop
stc
js
pop
iret
sub
test
mov
push
cmc
mov
xchg
fldt
dec
sbb
mov
inc
push
push
inc
imul
movsl
inc
pop
xchg
pop
movsb
mov
jle
cmp
je
push
inc
mov
clc
inc
sub
loop
fidivrl
add
popf
imul
sahf
or
inc
insl
or
arpl
into
xchg
or
lret
ljmp
mov
ds
and
insb
dec
push
scas
push
or
test
mov
gs
or
stc
dec
stc
sarl
jno
stos
out
rorb
sbb
clc
jl
lret
fmull
mov
and
sub
adc
mov
insl
sbb
mov
out
shll
lock
jmp
jle
out
dec
jp
addr16
mov
test
movsl
mov
xchg
ljmp
sub
jbe
cmp
xor
and
in
dec
mov
insb
sub
and
xchg
and
xchg
add
xchg
into
adc
jge
lds
cmp
cmpsb
mov
jecxz
mov
mov
mov
aaa
sbb
mov
lds
jnp
xchg
mov
stc
dec
fcmovne
js
mov
int3
scas
or
mov
mov
loope
shl
pop
mov
std
mov
mov
je
mov
push
stos
fsub
and
lods
push
arpl
xchg
out
enter
scas
dec
rorb
sahf
jo
inc
std
add
lods
and
jno
jno
mov
mov
jo
push
test
ljmp
pop
es
and
insb
imul
mov
push
pop
gs
sbb
call
loop
lcall
add
pushf
or
test
leave
rol
pop
aad
lret
faddl
pop
sub
adc
and
pushf
in
mov
cli
fmul
xchg
pushf
lods
test
fsubrl
pusha
inc
and
scas
add
imul
and
dec
sahf
xor
push
dec
pusha
inc
lock
xchg
lcall
xchg
xchg
lahf
es
movaps
pop
push
fs
xchg
ds
lret
lds
dec
pushf
subb
je
xor
mov
inc
insb
daa
rolb
fldl
cmp
iret
sub
sbb
test
arpl
sbb
repnz
mov
lea
test
and
dec
out
fidivrl
lods
and
xchg
stos
and
xchg
mov
mov
lahf
lret
scas
sti
mov
or
jg
cvtdq2ps
dec
das
jnp
imul
fisttps
fistpl
jmp
sbb
outsl
cmp
cvtdq2ps
dec
das
jnp
imul
fisttps
fistpl
jmp
sbb
outsl
cmp
cvtdq2ps
dec
das
jg
outsl
into
lahf
fimuls
fistpl
sub
pop
mov
js
xchg
xor
add
adc
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
inc
int
adc
fwait
cmp
xchg
pop
jb
mov
add
add
add
or
add
cmp
arpl
test
xor
add
add
add
add
add
pop
add
add
add
add
pop
add
inc
add
add
add
addl
lahf
add
add
add
add
add
add
add
mov
fadds
inc
add
add
add
add
inc
add
add
add
add
add
add
add
cwtl
add
add
add
and
dec
add
pop
add
add
add
mov
add
add
pop
add
add
add
ret
add
add
jae
test
mov
push
add
add
inc
add
add
add
dec
add
add
adc
cmp
sti
add
add
add
xchg
add
xor
add
jnp
cwtl
add
add
imul
lods
add
mov
add
add
add
xchg
add
add
inc
push
pop
add
out
add
dec
add
add
add
jmp
add
add
inc
push
and
mov
add
loope
lods
add
add
add
add
cmp
add
xchg
add
lahf
add
add
inc
add
add
add
add
add
inc
add
add
cmp
jecxz
or
add
add
add
add
add
add
add
mov
lods
add
aaa
add
pusha
add
add
add
mov
sahf
add
add
lret
add
add
lods
add
inc
add
add
add
add
filds
add
fiaddl
pop
add
add
add
dec
add
add
pop
add
xor
sti
add
inc
add
add
add
loope
lods
add
add
add
cmp
cmp
data16
add
inc
add
xor
add
inc
add
add
cltd
add
pop
add
aaa
add
aaa
add
add
add
imul
inc
add
stos
add
add
inc
add
add
add
add
push
add
lret
add
add
add
pop
add
add
add
add
lods
add
add
add
addl
adc
dec
add
add
add
add
add
add
cltd
add
add
sub
dec
add
sti
add
add
add
xor
sbb
inc
add
or
add
popa
add
push
sbb
sbb
roll
add
push
add
pop
add
ret
add
add
add
push
add
add
add
pop
add
add
add
jno
aaa
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
inc
add
cmp
mov
add
add
add
mov
addb
add
cltd
add
add
add
add
test
push
add
push
insb
add
add
add
add
add
add
lods
add
inc
add
add
test
add
pop
add
xlat
add
add
add
add
add
xor
mov
add
add
add
add
add
add
add
adc
and
stos
push
jp
enter
cmp
inc
andb
jmp
inc
mov
push
cmc
cmc
sahf
xor
dec
test
lahf
cmpsb
push
lret
push
jno
test
arpl
push
fstps
jno
and
pop
in
mov
push
push
fstps
adc
pop
iret
fldt
nop
xchg
aad
xchg
xor
lods
and
mull
stos
mov
jns
mov
mov
mov
fcompl
mov
leave
jmp
out
sbb
cmp
cld
lods
stos
sub
and
mov
int
cmpsb
sub
in
cmp
call
scas
push
fmuls
imul
hlt
xlat
movsb
inc
and
divb
push
xor
aaa
sub
in
ljmp
cltd
repnz
jecxz
ret
into
cmpsb
add
out
mov
cmp
jl
jb
mov
adcl
xor
in
push
cs
mov
aas
leave
lret
inc
jae
popf
mov
arpl
and
jmp
sub
sub
je
hlt
lahf
and
mov
into
xor
gs
xchg
aad
add
ja
clc
lods
jns
es
or
push
leave
pop
add
daa
push
in
std
test
xchg
into
incb
cwtl
lahf
fiaddl
and
cs
scas
ja
std
aam
mov
pop
and
call
inc
add
test
pop
scas
xor
roll
cmp
xor
sub
in
push
push
pop
or
mov
mov
das
fwait
sarb
pusha
hlt
xlat
js
push
test
add
shrb
dec
xor
jmp
lcall
das
push
xor
divb
xchg
pop
imul
inc
subb
sub
pop
fs
mov
cs
sahf
out
cmp
insl
aaa
out
lock
test
dec
ja
dec
mov
jle
sbb
xchg
pusha
cltd
rolb
dec
imul
xchg
push
outsl
mov
pop
and
call
hlt
push
lcall
leave
mov
xchg
shrb
adc
data16
in
mov
sbb
test
xor
insb
std
pop
in
and
roll
fists
jecxz
jle
cmp
inc
mov
outsb
icebp
pop
mov
xchg
sbb
sbbb
jno
lahf
aam
jle
lret
lcall
movsb
imul
mov
les
pushf
xor
push
push
rorb
dec
jecxz
pop
mov
xlat
outsb
jge
mov
aaa
cld
fisubl
adc
in
jle
subb
pop
in
enter
inc
roll
pop
mov
cmp
and
cmp
push
dec
inc
out
adc
out
push
jbe,pt
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
