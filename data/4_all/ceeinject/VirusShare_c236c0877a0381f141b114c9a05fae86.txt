call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
gs
push
inc
inc
xor
add
cmc
dec
in
aam
mov
movsb
test
gs
push
inc
inc
xor
adc
in
mov
shlb
test
gs
push
inc
inc
xor
adc
in
mov
mov
stc
mov
ljmp
push
adc
lret
add
sbb
mov
ret
inc
and
jne
aas
add
xor
sub
and
sbb
pop
popf
sub
movsl
pop
xchg
xor
jmp
into
jo
cmc
cmc
mov
adc
cmp
dec
gs
push
sbb
dec
mov
gs
inc
test
and
in
and
aam
sub
inc
test
popl
push
stos
push
dec
fnstsw
add
lock
vcvttpd2dq
int
adc
jp
lea
dec
aad
in
scas
in
lahf
ret
mov
cmc
xor
mov
movsb
movsl
cmc
xchg
xchg
test
jne
gs
push
inc
inc
xor
adc
in
aad
mov
movsl
xchg
xchg
test
add
sbb
adc
add
jb
push
push
jo
jno
test
mov
shr
clc
out
loopne
sbb
or
sbb
inc
pusha
adc
nop
mov
rcl
xor
lock
xor
je
and
add
aad
mov
movsl
xchg
xchg
test
push
push
inc
inc
xor
adc
in
aad
mov
movsl
xchg
xchg
test
fdivrs
pop
addb
cmpsb
addr16
icebp
loope
in
sti
push
cmpsl
cwtl
adc
and
xchg
jnp
xchg
dec
mov
loope
das
xchg
fbstp
ret
and
aad
pop
jns
adc
pop
cld
xor
dec
dec
leave
int3
push
rcrb
stos
inc
inc
ret
mov
xchg
in
rorl
incb
mov
sbb
dec
lods
out
pop
xchg
in
push
test
into
push
and
dec
jecxz
push
xchg
aaa
ss
in
fdivr
mov
push
push
push
out
mov
mov
jge
adc
in
arpl
js
jnp
cmpsl
in
inc
jmp
fs
sbb
daa
in
or
add
and
mov
mov
ret
data16
mov
push
xchg
fldcw
dec
mov
loop
outsl
std
sub
xchg
or
movsb
mov
test
sbb
popa
push
das
in
bound
pop
fwait
insl
inc
lahf
aaa
add
sub
push
loope
jno
ja
stos
push
repz
and
push
loopne
loop
sub
lods
and
xchg
pop
rcll
mov
sub
xchg
dec
cli
cmp
jns
pop
sbb
je
out
inc
ficoml
xor
xchg
mov
jne
jbe
mov
mov
mov
inc
and
or
push
mov
ficompl
nop
jmp
rcr
push
insb
test
mov
in
loope
jmp
cmp
xchg
lods
ss
mov
sub
jnp
xor
stos
cmpsb
je
xchg
call
daa
stos
insb
popf
push
mov
inc
testb
and
ficomps
arpl
mov
push
test
cli
dec
push
xor
andnps
or
das
cmovbe
stc
je
pop
and
orb
lods
mov
mov
xor
adc
add
ja
mov
push
lcall
jecxz
mov
add
addr16
xor
jle
dec
xchg
sbb
dec
icebp
add
sub
ss
rcl
sahf
inc
mov
sub
jb
dec
in
dec
orl
call
stos
insb
jne
lods
adc
aaa
repz
test
notb
loop
xor
shl
addb
and
sbb
pop
sbb
mov
nop
sub
pop
inc
es
add
pop
outsb
jmp
aam
jns
dec
mov
inc
mov
enter
push
inc
mov
daa
stc
ret
add
lods
mov
shrb
xor
or
stos
push
sbb
test
adc
pop
cmpsb
and
pop
cwtl
pop
test
stos
adc
pop
adc
sbb
lcall
shl
jo
js
push
mov
data16
push
push
loop
shll
sti
icebp
push
lds
mov
lret
std
subb
xchg
mov
cwtl
xchg
lcall
fs
add
sti
sbb
orb
les
bound
jns
jp
imul
cmp
jl
xchg
fidivrl
repz
adc
xchg
test
mov
push
xchg
cmp
cli
add
call
into
stos
icebp
xor
inc
mov
mov
out
test
test
mov
inc
mov
call
cmpl
dec
and
out
and
cmpsb
fnsave
int
lea
push
pop
loope
js
in
fisubrl
ror
dec
add
cmp
jo
fidivs
out
pop
mov
scas
iret
pop
clc
sbb
mov
rcrl
scas
xchg
fsub
test
adc
cli
sbb
lcall
pop
fcoml
xor
addr16
jge
mov
add
movsl
pop
push
cs
or
out
or
popa
pop
int
ja
lcall
daa
cmp
pop
cmc
lea
adc
xchg
shll
gs
inc
xchg
cmp
mov
dec
scas
xchg
mov
add
sbb
std
into
fwait
jl
ffreep
mov
pushf
add
jmp
das
pop
loop
movsb
outsb
mov
lret
add
cmp
popa
push
push
push
and
push
ret
sbb
icebp
popa
and
lock
decb
mov
psubusw
mov
adc
xchg
push
fistpll
loop
gs
sbb
cli
xchg
sbb
dec
mov
mov
pushf
sbb
xor
shrl
std
sbb
mov
test
aad
inc
add
es
push
jno
imul
insb
repz
cmp
pop
jbe
xor
cli
arpl
cs
or
or
jne
fnsave
push
cli
lods
jo
enter
cmc
lcall
out
and
cmpsl
test
mov
mov
jb
jmp
loope
xchg
cmp
mov
xor
and
and
cmp
xchg
pop
ror
outsl
sbb
inc
bound
cltd
pop
xor
mov
xor
adc
push
and
pusha
dec
jne
xchg
lds
jne
jnp
out
push
inc
jo
cmp
pop
mov
clc
xchg
ja
mov
std
test
insb
sub
pop
jp
sti
jge
fistps
mov
hlt
and
cli
scas
fdiv
add
les
enter
push
cmp
mov
inc
cmp
popf
add
xor
iret
insb
inc
mov
xor
pop
mov
dec
mov
sarl
sub
cmpsb
or
cmp
cmpsl
jge
push
orb
inc
mov
xor
jne
mov
jmp
movsl
jecxz
mov
adc
push
movb
xchg
nop
nop
out
cmp
push
insl
rcr
add
jnp
shl
dec
ljmp
ja
ficoms
xor
push
push
add
jae
mov
cmpsb
test
clc
enter
icebp
movl
std
or
mov
rcrl
loopne
push
sub
xlat
sti
mov
sbb
and
ljmp
adc
adc
mov
loope
fisubrs
aam
icebp
inc
add
outsb
in
cltd
xchg
pop
call
scas
jmp
xor
inc
jne
fldl
inc
cs
push
push
fwait
data16
mov
mov
push
lock
and
jae
gs
subl
pop
je
in
jmp
pusha
inc
insb
mov
sbb
aad
popa
jecxz
arpl
ds
jp
flds
movsl
andb
movsb
stos
inc
lea
sbb
mov
rol
mov
mov
pop
push
pop
jl
push
xorl
and
add
push
jno
or
push
jo
mov
decb
ja
mov
in
incl
test
inc
sub
pop
lea
inc
adc
pop
xchg
rorb
mov
jo
pop
add
sub
mull
inc
sbb
insl
mov
or
dec
mov
popf
das
add
aas
out
mov
xchg
cmp
rclb
popa
jp
pop
mov
sbbb
movsb
jne
pop
sbb
stos
xchg
in
push
adc
cmp
scas
fstl
mov
es
rcll
jg
jge
out
xchg
loopne
mov
xor
xor
insl
aaa
into
imul
jg
int3
push
cmp
mov
dec
cs
test
and
in
xor
push
rolb
mov
pop
add
push
lods
push
cli
dec
sub
and
push
jg
sub
test
scas
gs
ret
fucomip
inc
xlat
fs
daa
lahf
outsb
sbbb
add
stos
shll
repz
cli
aam
jge
aad
lods
sbbb
jmp
data16
cmp
xchg
in
xchg
aas
mov
ljmp
jle
xchg
call
push
rolb
loopne
mov
mov
xor
inc
aam
rolb
mov
repnz
xor
and
or
xchg
shr
ret
ljmp
faddl
pop
fwait
mov
dec
xorl
mov
hlt
adc
lock
loopne
push
ret
dec
imul
pop
out
pushf
scas
adc
inc
jg
popa
shrb
add
inc
in
xor
in
dec
shlb
subl
mov
push
mov
cmp
add
mov
and
ret
sti
inc
outsb
add
lcall
daa
inc
call
mov
fwait
jecxz
and
fidivrl
sub
loope
inc
push
push
mov
testl
push
outsb
xchg
cmc
js
sbb
xchg
imul
xchg
adcb
sbb
mov
xorb
add
sub
loope
enter
test
jl
data16
in
mov
bound
ret
jmp
pop
add
xor
loope
or
fcoms
pop
loopne
das
into
lret
js
push
xor
push
push
adc
adcb
jne
cld
test
mov
into
lahf
loopne
popa
leave
addb
outsb
leave
pop
cmp
leave
sti
daa
sbb
sub
add
movsl
std
push
jmp
adc
pushf
sti
inc
pop
movsb
mov
nop
test
outsb
push
imul
insb
add
data16
jns
and
push
mov
stos
aaa
bound
je
dec
or
fists
lahf
jge
cmp
jb
cmpsb
lahf
pop
push
stc
sarl
xchg
imul
cmp
ret
cli
sbb
xchg
popa
or
sar
xchg
mov
dec
es
lcall
shrb
jbe
pop
mov
enter
fnstenv
jge
stos
pop
mov
dec
sub
in
or
rorl
imul
sbb
scas
pop
xor
shll
aas
inc
cmp
int3
test
sub
sub
push
adc
inc
jecxz
subl
out
xchg
jl
push
aam
mov
mov
sub
mov
jmp
jnp
popf
adc
std
cwtl
or
cmp
sbb
ljmp
jmp
addr16
mov
mov
sub
and
icebp
and
out
pop
int3
ljmp
cmpsl
pop
add
leave
mov
xor
es
out
cmp
add
or
pop
mov
mov
mov
ret
inc
cmp
xchg
cmc
mov
dec
lods
inc
xlat
mov
mov
sub
mov
pop
pop
ret
xchg
ficoml
dec
pop
sbb
pop
pop
adc
push
insl
and
jae
push
or
fs
clc
sub
sub
cld
pusha
outsb
jnp
cmp
negl
mov
jns
and
inc
gs
push
and
popl
dec
addr16
mov
lea
mov
mov
dec
mov
into
mov
lahf
call
out
dec
cmp
std
inc
in
sbb
rcrb
mov
fcmovb
daa
enter
mov
cmp
jne
repz
aam
dec
push
rorl
jmp
cmpsl
sbb
sub
cmc
push
js
mov
imul
mov
leave
jns
push
push
fistpll
jb
cmp
scas
pushf
mov
mov
rorb
imul
or
sbb
xchg
mov
jg
dec
dec
stos
or
imul
ret
jle
insb
and
jmp
cwtl
lods
mov
popa
lods
icebp
pop
sbb
mov
loop
jns
mov
add
inc
inc
scas
int
test
das
out
pop
jo
ds
jle
jne
cmp
icebp
bound
mov
dec
jmp
jnp
add
mov
cltd
mov
lock
push
cltd
cmp
aas
pop
adc
in
jbe
lds
push
adc
aaa
jecxz
xchg
inc
les
dec
push
or
aas
bnd
int
or
xor
in
push
mov
ljmp
push
scas
loopne
xchg
mov
add
cmp
and
lock
fcom
dec
lods
cmp
aas
xchg
xchg
jp
xor
cmp
jp
or
cmp
add
xor
testl
scas
xor
dec
inc
cmp
pop
pop
and
or
scas
push
addl
and
xlat
push
or
mov
sbb
idivb
mov
shrb
clc
stos
push
nop
push
mov
sbb
mov
aaa
clc
fbld
xchg
dec
inc
adc
nop
push
push
fstl
sbb
push
icebp
movsb
and
lods
shl
cs
jge
mov
mov
and
cwtl
scas
mov
cmpl
call
push
dec
jp
pop
loop
inc
mov
jb
adc
lods
xchg
lahf
dec
dec
mov
push
fwait
mov
mov
xchg
mov
dec
and
mov
dec
mov
xor
mov
aaa
shlb
iret
inc
ss
cwtl
mov
inc
xchg
mov
pop
cmp
repz
adcb
pop
pop
test
pop
lods
scas
sbb
outsb
stos
sbb
repnz
mov
dec
lret
jo
stos
xchg
xchg
jmp
mov
dec
xor
stos
cs
fdivs
pop
jg
mov
push
inc
fdivrl
mov
xchg
adcl
outsb
xchg
cmp
cmp
adc
popa
push
mov
imul
dec
imul
sbb
addr16
xchg
or
sarb
inc
push
mov
stos
push
mov
jp
xchg
and
dec
push
pop
test
scas
mov
stos
mov
pop
jmp
jo
xchg
mov
lods
jl
ss
or
mov
or
push
addr16
scas
sub
in
aas
or
mov
shrl
adc
lret
push
sbb
out
xchg
rcrb
shl
cmp
xor
pop
sbb
dec
pop
cmp
ret
test
or
xchg
fisubrs
je
xor
lock
mov
into
inc
mov
cmp
cmpsb
sbb
xchg
cmpsb
jecxz
and
orb
insl
stos
mov
insl
dec
in
mov
xor
cmovge
repnz
outsb
arpl
xchg
cmp
xor
imul
add
das
in
not
xchg
adc
js
adc
sub
mov
dec
mov
sbb
sub
out
loope
repnz
xor
xor
mov
out
jle
push
cli
dec
add
jle
adc
jae
xchg
xor
cltd
mov
aaa
dec
icebp
jnp
inc
in
subl
sub
and
jne
test
adc
pushf
mov
mov
cmp
jle
xor
std
stc
or
lock
ljmp
insl
stc
mov
cmp
pop
pop
xchg
xor
xchg
aam
data16
sahf
mov
and
testb
push
xlat
cwtl
or
or
test
or
pushf
cmp
push
push
push
out
and
les
jmp
repnz
sbb
fistps
jmp
jns
insb
in
popa
cmovp
lods
int
xlat
adc
dec
mov
cs
inc
test
or
pushf
test
and
mov
and
mov
adc
sub
icebp
cmp
push
cmpsb
sub
sub
scas
sar
lods
sbb
add
cmc
arpl
in
cmc
add
cld
faddl
fdivl
or
add
mov
mov
les
pop
or
dec
pop
fmull
insl
mov
test
pop
pop
add
ret
fs
mov
mov
stos
ljmp
push
loop
and
shll
or
cmp
lods
ljmp
jns
call
cmp
add
out
adc
pop
pop
rep
sub
cmc
mov
jp
movsl
cmp
cmpsl
mov
adc
push
inc
mov
cmp
pushf
dec
mov
call
push
int3
mov
lock
pop
adc
ret
sub
and
test
lret
mov
xchg
cmp
push
cwtl
rorb
mov
dec
movsb
and
icebp
mov
xor
daa
rorl
clc
sub
popf
sbb
add
sahf
jmp
or
or
shll
dec
enter
xchg
mov
imul
inc
fisttps
pop
pop
adc
les
lea
insb
xchg
call
jmp
dec
stos
mov
loopne
xor
xor
test
sti
out
sub
jnp
push
ds
loope
sub
mov
ljmp
aas
aam
lock
adc
rorl
dec
mov
xor
jg
cmpsb
int3
out
arpl
or
mov
inc
mov
push
mov
adc
dec
insl
jne
loope
fnstcw
movsl
cltd
fisttps
inc
movsl
subl
lret
adcb
outsb
push
inc
xchg
movsl
and
std
ret
and
daa
jmp
xor
adc
stc
aaa
pop
faddl
faddl
cmp
xchg
and
jg
ret
repz
adc
push
imul
xchg
icebp
sbb
pusha
out
bound
add
dec
into
jnp
hlt
movl
lret
mov
mov
cmp
or
add
xor
push
jnp
hlt
mov
les
push
cmpsb
pop
inc
imul
data16
inc
lock
xor
lcall
aam
xchg
out
jno
xorl
sub
sub
scas
fcompl
mov
in
popf
pop
dec
iret
or
roll
sarl
movb
out
xchg
dec
outsl
inc
imul
fidivrl
orl
test
inc
shll
inc
cmp
rcrl
push
jno
dec
movsb
and
pop
cmp
sbb
movsb
adc
cmpsb
aas
mov
adc
push
orl
incb
out
lods
sub
cmp
lds
and
or
add
or
pop
clc
repz
aas
shl
daa
loopne
pop
lahf
dec
xchg
or
out
and
cmpsb
cmp
xchg
lea
sbb
mov
int
popf
sbb
push
popf
or
and
inc
imul
mov
in
repnz
xchg
and
pop
cmpsb
mov
stc
stc
xor
stos
xor
es
jg
jae
lea
mov
lods
jecxz
cmc
inc
movsl
inc
fs
xchg
mov
into
sub
or
jno
int
and
enter
je
mov
inc
icebp
mov
je
pop
lret
movsl
mov
push
pop
hlt
mov
aam
push
sbb
inc
fwait
and
ffree
inc
push
add
dec
mov
inc
je
stos
pusha
aaa
pop
pushf
addr16
int3
inc
call
and
xchg
shll
mov
repz
mov
mov
xchg
fsts
mov
lods
xor
ljmp
cmp
stc
cmpsl
std
xor
fnsave
movsl
mov
push
mov
pop
cmp
fdivp
or
inc
cmp
push
pop
xchg
repnz
cmpb
shl
ss
outsl
add
pop
lods
inc
or
fiaddl
cmpsl
mov
pop
or
mov
ficompl
scas
sub
fnstsw
xor
xchg
mov
sbb
pop
mov
jnp
dec
xor
jmp
cmp
jno
inc
or
pop
iret
leave
das
push
insl
mov
stos
orb
popa
pop
mov
sti
cmc
mov
mov
repz
xchg
cmc
fnstenv
fdivrl
les
xchg
sub
rolb
xor
movsl
bound
std
inc
pop
xchg
xor
dec
sbb
das
inc
rorb
pop
in
pop
xor
movsb
mov
sbbb
push
pop
jns
jg
dec
aas
pop
sti
and
dec
sti
fiaddl
leave
mov
lahf
lahf
ss
in
and
inc
xchg
ret
adc
std
shl
es
mov
arpl
dec
fdiv
mov
pushf
mov
ror
imul
fdivs
jns
int3
mov
mov
xchg
inc
dec
push
test
fidivrl
mov
scas
mov
sar
jecxz
imul
xchg
cs
xchg
adc
mov
je
mov
mov
test
ret
mov
out
mov
xor
pop
and
ljmp
int
sbb
xchg
push
mov
mov
mov
cmp
inc
in
stos
cltd
test
adcl
hlt
xchg
cmp
xor
rcr
inc
pop
inc
dec
cmp
int
arpl
sub
inc
arpl
ret
fbstp
cmc
sarb
insb
xchg
pop
les
dec
imul
xor
mov
imul
add
enter
jge
mov
imulb
lea
gs
fsubrl
test
lcall
mov
adc
je
pop
cmpsl
cmp
sbb
push
xor
xchg
inc
int3
xorb
push
or
jmp
rcr
repnz
lahf
push
aaa
or
xorb
out
add
xor
popa
test
clc
mov
jno
cmp
cmp
shll
ret
gs
inc
inc
xor
adc
in
aad
mov
movsl
xchg
xchg
test
push
push
inc
inc
xor
adc
in
aad
mov
movsl
xchg
xchg
test
push
push
inc
inc
xor
adc
in
aad
mov
movsl
xchg
xchg
test
push
push
inc
inc
xor
adc
in
jg
lds
push
jp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
mov
hlt
aas
cmp
stc
mov
jno
push
adc
fs
bound
mov
mov
hlt
repnz
test
movsb
ret
dec
and
add
bound
push
and
xor
frstor
in
repnz
loop
sarb
ja
sbb
or
pop
in
mov
movsb
xchg
sub
push
flds
pop
push
sahf
in
sbb
cld
daa
lahf
add
inc
dec
cli
les
pop
into
in
jge
or
pop
aas
dec
iret
mov
std
mov
aam
int3
loop
stos
mov
jns
xchg
mov
xor
adc
ret
mov
inc
jno
lcall
aad
testl
fwait
push
xchg
rcr
ja
dec
inc
inc
sub
jge
stos
inc
loop
push
lods
xchg
fidivrl
jg
and
popf
add
ja
mov
cmp
push
sbb
jle
push
adc
pop
movsl
ret
sub
ds
fwait
sub
pop
es
shll
hlt
repnz
xchg
shlb
dec
adc
insl
jb
bound
ds
xor
sti
sub
cmc
mov
rcl
sub
adc
adc
bound
xor
pop
xlat
lods
mov
repnz
xchg
jae
adc
add
je
adc
inc
aaa
inc
xlat
les
mov
mov
xchg
shlb
push
adc
jb
bound
and
xor
les
hlt
repnz
xchg
shlb
push
adc
jb
bound
and
xor
les
testb
or
push
stos
inc
fstl
test
jl
and
cmc
adc
subb
nop
push
enter
sbb
div
popa
stc
push
stc
enter
je
adc
inc
jge
mov
gs
out
pop
dec
mov
fcmovb
cld
mov
pushf
ljmp
stos
les
movsb
cmp
neg
mov
jo
or
stc
lcall
outsb
add
jge
push
push
xlat
mov
rol
in
push
je
xor
aas
outsl
imul
outsb
cmp
pusha
les
fistl
jl
into
pop
dec
xchg
or
or
sbb
gs
sbb
adc
pop
dec
in
fcmovne
fsubs
push
mov
mov
pop
cmp
lods
in
shll
xchg
pop
mov
xchg
popf
jecxz
js
pop
inc
cmp
sti
addr16
or
push
pop
xor
sub
mov
push
fisubs
sbb
push
adc
jle
lds
movsb
cmp
repz
xor
xchg
dec
cmp
sub
mov
js
push
cmpsb
fsubrl
mov
jl
aas
dec
loopew
enter
leave
or
imul
and
sub
and
andl
fnstsw
cmpsb
test
sub
fidivrl
dec
mov
idivl
repz
out
arpl
mov
mov
out
test
sub
mov
adc
inc
adc
lret
xchg
jg
aaa
sub
push
out
lret
loope
das
mov
push
jno
mov
lock
loop
push
aad
xlat
sbb
aam
loop
cmpsb
ret
mov
insl
ret
inc
xchg
test
shrl
aam
imul
pop
out
sub
cmp
sbb
jle
add
enter
xchg
repnz
imul
jnp
fimuls
std
dec
repnz
outsl
dec
pushf
enter
sub
xor
push
add
mov
inc
pop
cmpsl
sub
sbb
push
loope
dec
clc
repz
cmp
and
stc
out
xchg
xchg
dec
and
test
and
insb
dec
dec
stos
fsubs
scas
outsl
sbb
xor
mov
mov
and
xor
gs
mov
test
fmuls
iret
and
xchg
repz
lret
stos
inc
cmp
stos
sahf
push
sbb
xchg
mov
stc
pop
cmp
fdivs
fwait
dec
adc
fisubrl
add
ficompl
ret
add
add
add
repnz
add
dec
mov
fcoms
or
pusha
xchg
fwait
subb
or
bound
ret
pop
loope
dec
test
fisttps
hlt
dec
push
jmp
aam
sbb
cs
mov
xor
xor
adc
out
add
icebp
int
js
cmc
xchg
sub
popa
jp
push
jle
jg
in
push
pop
or
mov
ljmp
push
imul
out
in
in
mov
adc
mov
cltd
pop
or
popf
sbbb
in
xrelease
adc
add
mov
xor
inc
scas
and
outsl
ds
enter
or
into
fcompl
insb
cltd
xchg
enter
sub
cmp
xchg
mov
shl
sar
or
cmpsb
in
insb
movsb
aas
sbb
add
enter
push
sbb
mov
inc
dec
dec
enter
sbbb
shl
adc
dec
out
mov
pop
or
mov
mov
mov
iret
adc
test
stc
out
push
test
sahf
adc
or
lock
mov
mov
je
dec
mov
jbe
mov
cmpps
jnp
movsb
push
gs
jae
xor
outsb
repz
pop
insl
jno
pop
adc
mov
jmp
in
cli
scas
in
lods
mov
lret
inc
cld
push
pop
clc
arpl
arpl
mov
mov
xchg
imul
ret
adc
adcl
stos
mov
or
movsb
jns
rcrl
loopne
aas
test
pop
js
inc
das
mov
xor
iret
mov
mov
daa
adc
and
mov
stos
push
pop
mov
jnp
fsubs
rorb
aaa
xor
mov
neg
xchg
sbb
out
jno
mov
push
fucomp
lods
div
push
mov
hlt
rol
int3
and
lods
outsb
jae
insl
xorl
fildll
repnz
pop
pusha
in
add
push
pop
sbb
mov
and
rcrb
rcrl
xchg
dec
test
out
lahf
inc
jg
push
mov
cmp
ja
cmpl
out
adc
push
jnp
xchg
rcrb
xor
jp
or
and
mov
push
addr16
push
arpl
dec
xor
sti
das
insl
cltd
jmp
add
out
jo
out
nop
inc
sbb
push
pop
jb
push
push
sbb
ret
ret
into
cmp
test
sbb
or
bound
notl
cld
fsubrs
hlt
sub
pop
ja
mov
jne
imul
nop
pop
add
cmc
jge
sbb
cli
aas
shlb
pop
dec
dec
push
scas
sub
fmul
or
outsb
xchg
or
inc
fsub
mov
push
cli
push
in
mov
outsl
mov
pop
pusha
jo
add
insl
icebp
pop
sub
call
push
mov
mov
mov
dec
inc
lcall
arpl
fwait
lods
aas
leave
adc
jl
aam
cmpsb
das
pop
ret
outsl
add
mov
dec
mov
sbbl
dec
js
sahf
outsl
lods
dec
jne
addl
dec
xchg
sub
cmpsl
outsb
pop
jb
adc
idivb
call
push
add
pop
pop
mov
into
call
ja
mov
push
xor
sarb
out
fstp
push
push
lds
add
pop
loope
add
cmc
adc
shrl
sbb
mov
stos
dec
stos
push
push
cmp
mov
add
xor
mov
mov
dec
fwait
pop
inc
dec
in
jae
mov
or
sub
lds
addr16
cld
sub
jnp
mov
dec
iret
fsubp
pop
roll
add
add
icebp
inc
jg
test
scas
inc
push
fnsave
mov
inc
aas
dec
sbbl
hlt
out
out
pop
jbe
lahf
jns
sub
inc
fs
js
lcall
pop
push
or
imul
loop
fistps
push
ss
jmp
int3
adc
or
push
add
adc
rorb
sbb
scas
orb
mov
sub
clc
adc
vandps
sbb
add
loop
jno
ja
lods
clc
add
lahf
loop
pop
add
ljmp
inc
mov
loop
sbb
sbb
and
push
mov
jno
adc
popf
stos
mov
sbb
lock
pop
movsl
adc
rorl
repz
lahf
xlat
es
and
lea
mov
pop
or
mov
cmp
mov
andl
dec
push
fsubp
inc
xor
stos
xchg
push
data16
movl
add
jge
and
pop
dec
xchg
repz
lahf
fcompl
mov
mov
je
repnz
mov
pop
sub
insl
clc
pop
stos
gs
aas
es
xor
fsub
int
push
addr16
mov
and
cmpsl
mov
add
pop
fimuls
jns
call
mov
jg
sub
lods
incl
cmp
and
cmp
mov
jne
or
and
xlat
mov
pop
mov
ss
pop
push
jnp
loopne
mov
mov
inc
pop
mov
mov
xchg
int3
mov
aad
jns
movntq
out
daa
divb
cmp
jl
loopne
push
std
stc
mov
mov
cmpsb
push
shr
insb
bound
sub
leave
and
aaa
or
or
call
roll
mov
pop
cmc
fcmovnbe
jmp
cmc
lock
pop
and
sbb
insb
sub
jbe
push
cwtl
icebp
mov
insb
cmp
sbb
call
jne
dec
cld
imul
or
pop
adc
push
cli
lock
cld
and
jmp
inc
inc
outsb
test
jl
iret
les
sub
test
ds
push
dec
sub
repz
imul
add
xor
js
push
ss
test
stos
add
adc
out
or
pop
rcll
dec
mov
rorb
jl
cmp
pop
xchg
mov
xlat
inc
inc
leave
repnz
imul
sub
mov
xchg
mov
nop
insb
pop
cli
push
idivb
inc
ret
cmp
sub
pop
add
scas
jmp
push
or
mov
and
mov
inc
shrl
jmp
out
imul
xchg
rolb
and
adc
xor
mov
leave
mov
lret
jne
xchg
cwtl
in
filds
dec
mov
jmp
enter
cltd
push
ds
push
outsl
mov
xor
inc
stos
es
mov
and
lods
sub
xchg
cmc
push
inc
pop
gs
mov
sbb
lock
sub
push
xor
adc
push
or
pop
push
add
xor
push
lds
jnp
cmp
rcl
mov
loop
mov
repnz
lock
xchg
out
filds
pop
test
xor
ljmp
add
adc
negb
inc
jl
mov
cmp
shll
pop
std
adc
xchg
hlt
xchg
xlat
cli
mov
sbbl
and
cmp
fisubl
pop
call
inc
mov
sbb
clc
xchg
lods
enter
daa
in
ja
adc
jbe
imul
xchg
jbe
cmovo
sahf
das
mov
pop
enter
gs
in
pop
es
insb
negb
xchg
cmpsl
xor
andl
xchg
sarl
incl
stos
arpl
test
mov
mov
xchg
movsb
dec
aas
jbe
mov
mov
jns
loope
sub
insb
jg
xor
dec
xchg
cmp
aad
fs
ret
inc
popa
xor
ficompl
daa
dec
xor
mov
shll
pusha
adc
je
sahf
push
jl
repnz
test
adc
jo
fsubs
pop
adcb
int3
sbb
aam
in
xor
loop
gs
jp
sub
push
faddl
pushf
outsb
cmc
out
cmp
inc
sub
push
adcb
mov
pop
cmp
jnp
jo
push
int3
mov
repnz
and
jbe
test
mov
cmp
or
mov
mov
test
or
mov
lret
hlt
adc
dec
in
lds
pop
fcomps
dec
outsl
mov
scas
pop
insl
mov
frstor
inc
lods
fwait
inc
cmc
repz
or
dec
add
xchg
inc
in
adc
sbb
dec
inc
mov
mov
mov
or
jne
and
push
fcomip
xor
popf
lods
stos
xchg
imulb
pop
jnp
push
les
dec
lods
mov
xor
pop
std
cmp
test
pop
ficoml
loop
pop
es
pop
mov
add
cmp
dec
cs
jb
adc
sub
movsl
or
dec
pop
movzwl
pop
jo
aam
rcrb
sbb
dec
cmpsl
dec
xchg
pusha
fadd
mov
cmp
ja
mov
adc
aad
addr16
mov
xchg
sbb
jge
fptan
add
xchg
dec
mov
leave
xor
cli
addl
decl
dec
ja
imul
fsubl
pop
cld
data16
mov
stc
mov
dec
jno
xlat
mov
ret
shll
faddp
andl
dec
pop
dec
and
imul
mov
inc
inc
iret
sbb
xchg
and
sbb
dec
adc
mov
jb
aam
cmp
bound
push
cmpsl
add
ret
pusha
icebp
cmp
add
lret
mov
subl
insl
dec
popf
leave
pop
out
roll
nop
sub
or
mov
shll
rolb
into
in
push
mov
dec
lret
adc
jae
mov
mov
fnstcw
int3
aas
pop
aaa
jg
std
sub
add
mov
je
sbb
pop
xchg
in
push
mov
inc
xor
cmp
xor
lds
sahf
xor
jb
xchg
out
insb
cmp
cwtl
and
adc
cltd
in
test
cmp
pop
enter
ja
xor
lock
adc
pop
fbld
push
and
mov
das
cmpsb
and
dec
pop
dec
mov
ja
mov
movsl
enter
outsb
and
xchg
xorl
ds
fs
dec
test
mov
lret
addl
in
push
push
cli
xchg
std
mov
jbe
sub
pop
fs
jns
xchg
popa
outsb
in
in
fidivrs
aad
pushf
dec
sahf
lcall
sub
adc
pop
pop
mov
int3
cwtl
mov
push
fdivrl
stos
ljmp
jb
dec
xor
mov
cmp
inc
push
repz
fwait
outsl
bswap
mov
xorb
stos
or
movb
dec
pop
data16
mov
loop
fsubs
insb
jnp
out
fwait
mov
aam
jb
push
aas
dec
pusha
movsb
xchg
pop
dec
cltd
fisubl
dec
mov
adc
ljmp
add
popf
inc
bound
mov
imul
bound
out
stc
or
mov
xchg
push
and
jbe
mov
push
or
and
inc
test
mov
out
cmp
insb
push
xchg
and
out
es
stos
pop
mov
pop
xor
sub
cmpsb
lds
dec
push
orl
clc
test
mov
pop
push
xchg
xchg
push
add
jmp
inc
cmp
mov
and
xchg
popf
push
neg
dec
in
add
or
int
cmp
shll
mov
imul
clc
pop
dec
dec
ja
adc
mov
das
dec
in
loope
andb
push
and
notb
bound
adc
rolb
cli
call
push
or
push
push
cmp
mov
dec
or
fsts
pop
mov
adc
cmp
sub
lcall
xor
ds
xchg
add
loope
scas
lds
sbb
lcall
jle
lods
xor
adc
sti
and
stc
cmp
ljmp
pop
or
divb
out
cmp
mov
stos
lret
pop
cmp
rolb
mov
addl
mov
jnp
xchg
push
mov
xchg
fwait
mul
lds
push
jp
jl
icebp
push
popf
int3
sbb
rorb
or
xchg
mov
das
js
jmp
stos
xor
insl
xor
rorl
jnp
addb
lods
aam
jecxz
ficoms
data16
dec
dec
leave
icebp
pop
clc
adcb
fiaddl
loopne
cmp
add
aaa
push
bound
inc
add
fstp
cwtl
mov
popf
xchg
or
cmpsb
psrld
and
and
adc
mov
xchg
adc
push
adc
inc
mov
leave
mov
shll
mov
xchg
and
cmpsl
push
cmp
mov
or
notb
pop
pusha
sbb
movb
and
aaa
shlb
imul
enter
inc
cmpb
subl
ja
loopne
int
sub
dec
shrl
mov
mov
jo
sbb
mov
dec
sub
or
mov
aaa
mov
cs
mov
aad
fdivrp
jne
lea
jb
icebp
xchg
sbb
sbbl
out
push
ja
shlb
nop
mov
jbe
sub
cmp
repnz
push
imul
xchg
daa
xor
jne
or
lea
ret
push
mov
inc
arpl
adc
mov
pushl
mov
sbb
cld
enter
jo
fldt
xor
bound
sarb
mov
jecxz
int
nop
adc
pop
xchg
ret
sarl
jno
aad
add
xchg
test
push
adc
fists
dec
inc
movsl
jl
push
jmp
xchg
je
push
popa
sub
add
jmp
fmull
and
addr16
hlt
adc
sti
inc
pop
loopne
inc
xor
mov
in
add
popa
js
xchg
pop
outsb
pop
adc
aas
std
mov
arpl
xor
ret
mov
ljmp
sub
jl
jmp
sub
loopne
cmp
mov
dec
and
jmp
pop
mov
mov
mov
jns
push
inc
pop
mov
les
idivb
repz
scas
gs
popf
xor
negl
sbb
stc
cmp
xorl
jecxz
push
or
sub
fiadds
add
sbb
gs
mov
das
mov
daa
cld
pop
lahf
add
in
cli
loopne
stos
out
mov
std
sbb
rcr
lcall
repnz
pop
cwtl
rcrl
mov
cmc
bound
lods
test
inc
push
and
pop
shll
imul
dec
add
repnz
rcl
push
or
fildll
ss
fistps
addr16
or
sub
or
lock
test
sbb
sub
sarl
das
lods
inc
sbb
popf
adc
cmp
xlat
xor
cmc
xchg
cmpsb
pop
xchg
cmc
inc
sbb
sbb
dec
icebp
jmp
jmp
inc
out
int
lret
mov
mov
jg
and
in
jno
mov
adc
ret
pop
inc
andl
mov
sbb
mov
pop
je
leave
stos
adc
cmp
in
xor
insl
stc
inc
mov
dec
bound
outsb
lds
inc
iret
and
imul
insb
cmc
adc
shrw
and
dec
lds
mov
fsubr
jge
mov
jae
lock
cs
xchg
jnp
sbb
jecxz
fsubl
mov
clc
ds
xchg
inc
dec
iret
out
dec
insl
daa
mov
push
jmp
js
pop
xor
pop
insb
xchg
pop
pop
cmc
outsl
adc
popf
push
shl
push
test
xor
call
mov
xor
mov
ret
add
push
out
imul
fidivl
int
sub
gs
test
in
sbb
push
out
and
cmpsl
push
xchg
xor
aam
fsubrs
xor
imul
jp
jbe
mov
jle
scas
fnstsw
inc
scas
push
pop
leave
push
xor
movsb
scas
outsl
adc
sbbl
ss
mov
pusha
inc
std
lods
or
jmp
cmp
ret
nop
ds
adc
xchg
std
call
push
and
dec
cltd
adc
xor
mov
fdivl
or
movl
jmp
mov
imul
pop
lahf
dec
int3
scas
or
adc
sub
lcall
sub
pop
into
and
inc
push
adc
xlat
scas
mov
jae
cmpsl
hlt
cmp
test
jne
inc
sbb
sub
rolb
rcrb
mov
sbb
repnz
inc
cmp
lds
cltd
icebp
call
add
addr16
jl
addl
and
aas
mov
mov
pop
add
jae
fiaddl
clc
imul
je
rorb
sbb
mov
or
xlat
loopne
hlt
cmc
inc
jbe
xchg
es
xor
outsb
je
popa
push
cmp
sbb
dec
cmp
cmp
ja
sbb
adc
mov
sub
mov
nop
push
pop
push
daa
cmpb
imul
mov
push
int3
cmc
jge
inc
inc
jl
jle
push
imul
sbb
mov
pop
nop
sbb
mov
dec
inc
in
pop
stos
ja
sahf
hlt
dec
mov
sahf
rorl
data16
scas
int
js
mov
sbb
pop
sub
sub
idivb
jo
pushf
dec
sbb
mov
dec
fcmovbe
imul
sub
lock
dec
sub
lods
mov
enter
xor
push
pop
add
enter
adc
aas
loope
push
jae
push
dec
push
lahf
mov
xchg
mov
movsl
dec
push
jg
jne
push
mov
inc
cmp
lret
mov
mov
std
outsl
aad
jmp
insl
into
jne
sub
push
add
test
lea
loope
dec
cltd
mov
rclb
adc
movsb
vcvtps2dq
ss
push
add
movsl
mov
int
mov
aas
add
out
data16
push
mov
jmp
mull
and
cmc
adc
popf
shlb
in
pop
aam
in
hlt
repnz
xchg
shlb
push
adc
jb
bound
and
xor
les
hlt
repnz
xchg
shlb
push
adc
jb
bound
and
xor
les
aam
in
hlt
jb
loop
shlb
push
adc
jb
bound
and
mov
mov
hlt
repnz
xchg
shlb
mov
mov
imul
xor
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
imul
adc
push
sbb
push
hlt
mov
xchg
nop
loope
hlt
jne
rcl
sub
xor
add
adc
fs
je
inc
inc
push
push
hlt
mov
xchg
nop
in
nop
lock
mov
addb
adc
jo
inc
lods
push
movsb
or
mov
in
nop
les
cmpsl
shlb
adc
inc
outsl
arpl
cmpsl
xor
xchg
ds
mov
pop
adc
or
arpl
xor
mov
and
dec
jnp
jg
popa
xchg
gs
nop
pop
xorl
jl
in
add
mov
jnp
push
sbb
jns
aaa
aas
mov
xor
inc
adc
mov
iret
push
scas
mov
out
xchg
jg
shrb
psrlw
sub
ror
sti
test
out
fwait
popa
mull
push
sbb
fs
in
jnp
xchg
push
pop
lock
or
aas
mov
iret
sti
data16
jmp
xor
dec
mov
nop
xchg
xchg
popa
cmc
hlt
aaa
adc
xor
add
js
fs
xor
inc
in
push
push
mov
mov
shlb
inc
imul
push
push
xor
aam
cmc
lea
xchg
xchg
and
mov
bound
aaa
daa
push
pushf
fdiv
vpsraw
call
movsl
xchg
adcb
arpl
jne
pusha
je
inc
inc
push
push
movsb
mov
xchg
nop
in
hlt
lock
rcl
and
xor
add
adc
fs
je
inc
inc
push
push
movsb
mov
xchg
nop
in
hlt
lock
rcl
and
lock
mov
push
sub
xchg
out
add
push
jo
addr16
stos
mov
pop
insb
pushf
dec
aad
adc
jle
mov
or
fstpt
fcompl
mov
rorl
outsb
jnp
jb
arpl
push
jmp
mov
sub
jg
addr16
adc
push
out
int
addl
testl
pop
test
mov
aam
rcll
jne
and
mov
test
lret
std
iret
cmpsb
rclb
mov
jmp
adc
xlat
je
sahf
mov
sub
cmp
xor
fs
lahf
fnsave
pop
cs
in
das
stos
cmp
pop
das
imul
pop
mov
mov
push
xor
jg
push
fwait
jmp
mov
mov
sbb
mov
stos
pop
outsb
shrb
push
lret
rclb
sbbb
sbb
inc
bound
in
jl
ret
pop
fisttpl
out
inc
in
das
popa
ficoms
cmpsl
or
mov
das
out
inc
test
mov
add
insb
out
fld
mov
cmp
mov
mov
inc
xchg
sub
xchg
push
and
jo
push
xchg
cmpsb
stc
dec
and
xchg
cwtl
adc
aas
or
rsqrtps
stc
adc
mov
lahf
jo
add
rol
mov
jnp
les
fisubrl
or
push
imul
jae
rclb
sub
outsb
jp
xor
cmc
mov
repz
lahf
pop
sbb
mov
and
mov
mov
aam
push
in
loope
mov
adc
icebp
inc
or
push
lods
mov
lods
adc
mov
jae
lock
xor
sbb
mov
out
inc
pushf
and
adc
inc
ljmp
out
push
shlb
es
xchg
aad
mov
push
pop
pop
jns
stos
cmp
push
inc
sbb
or
shr
xor
scas
ret
ss
pop
jl
lock
push
pop
xor
fnsave
mov
mov
shrb
sbb
jns
sbb
int3
pop
testb
pop
or
mov
or
out
lret
sub
pusha
inc
mov
sti
xchg
test
data16
jno
inc
js
pop
push
fdivl
xor
mov
cmpsl
pusha
pop
push
cwtl
dec
sbb
mov
test
or
xor
pop
out
popf
out
mov
cmp
shrl
out
jo
adc
push
pop
mov
push
sahf
cmpsl
inc
loopne
hlt
mov
cli
jb
scas
leave
push
decl
and
scas
and
adc
push
cltd
fldl
out
or
inc
xor
and
lret
and
cmp
xor
int3
sti
repnz
and
subb
lock
push
mov
fwait
mov
fldenv
cmp
sbb
dec
or
shl
jle
jb
push
mov
add
insl
inc
inc
test
imul
xchg
jg
cld
into
ljmp
fsub
lds
call
mov
cmp
lock
adc
cmpsb
xchg
mov
lcall
or
ds
push
out
jl
mov
and
mov
mov
mov
inc
and
mov
push
aad
test
cmp
loop
xchg
jnp
dec
mov
fbld
mov
add
cmp
insl
or
jo
sub
ljmp
pop
jae
mov
add
dec
int3
mov
or
imul
out
lods
js
mov
cmp
pop
push
mov
addr16
movsb
xchg
sahf
mov
push
int3
adc
pop
sbb
fnop
dec
jns
add
ds
pop
sbb
fidivrl
dec
and
add
paddusw
inc
loope
jge
lods
imul
inc
shll
push
cmp
mov
mov
mov
sahf
xchg
push
xor
shl
shlb
cmp
sbb
lcall
jg
and
insb
dec
dec
push
outsb
out
and
lock
push
adc
cmp
and
mov
inc
fwait
mov
scas
mov
jmp
test
xor
dec
out
cmp
lcall
std
pop
setb
mov
insb
jge
int
jl
add
xchg
mov
sti
cmpsb
stos
shl
sahf
int
jl
out
xchg
push
adc
sub
pop
add
xchg
cmp
jl
fisttps
fsubr
lea
icebp
push
mov
mov
jbe
repnz
fldt
out
adc
push
add
pop
sbb
adc
mov
adc
aaa
sbb
xchg
mov
jp
loop
shr
lcall
or
inc
sbb
cmp
lods
jmp
aad
ss
test
in
sub
in
dec
icebp
and
cmp
pop
call
cmp
adc
mov
mov
inc
mov
imul
dec
aaa
push
iret
scas
enter
or
pop
cmp
add
mov
test
pushf
jl
mov
lock
sub
and
mov
mov
stc
insb
xor
lds
out
jbe
stos
cwtl
cwtl
mov
movl
pop
and
int
cmp
dec
shlb
jecxz
cmc
mov
jg
xchg
cmpsl
cmp
scas
xchg
mov
add
mov
mov
add
fmul
sub
xlat
mov
xor
ljmp
xor
cmp
add
cmp
das
mov
jl
mov
lcall
mov
aad
hlt
test
xchg
test
cltd
std
xor
fs
push
aad
dec
push
outsl
cmp
and
outsb
scas
or
push
push
mov
addr16
clc
and
ret
mov
cmovb
imul
dec
cmp
scas
aaa
dec
jecxz
push
mov
test
push
ljmp
xchg
stc
ficoml
test
add
cmp
cltd
cld
xor
ret
cld
imul
jae
and
or
inc
out
mov
mov
popa
outsl
push
out
dec
fs
inc
cmp
mov
push
sub
pop
shr
in
jbe
mov
mov
fisubl
cs
xor
adc
inc
xor
imul
dec
or
mov
es
fsubrl
lcall
cmp
xchg
scas
rcr
pop
cmpsb
imul
cmp
rolb
in
xor
or
adc
ja
jns
dec
lret
sbb
cltd
insl
mov
mov
xor
xor
stos
lahf
xchg
and
enter
push
dec
shr
jmp
xchg
inc
lea
inc
iret
ret
mov
out
data16
pop
jge
call
or
sub
dec
push
sub
int3
sub
fiadds
shll
addl
mov
xlat
sbb
aas
lods
int3
pop
add
lock
mov
lea
sbb
popl
ja
sub
push
xor
rorl
fwait
push
push
push
movsl
insl
pop
push
push
sti
mov
cmp
xchg
mov
sbb
inc
hlt
std
in
push
fwait
pushf
dec
sub
repz
jecxz
test
inc
mov
cmp
fcompl
push
imul
pop
fiaddl
mov
cltd
loop
mov
mov
mov
popf
jno
adc
ljmp
or
xchg
mov
pop
and
push
dec
push
pop
cld
cmc
fsubrl
mov
loop
ja
jg
cmp
pusha
cmp
or
sbb
lahf
into
shr
and
or
and
outsb
add
push
and
addr16
inc
add
lods
or
sbb
jle
fisttpll
push
aam
jns
inc
pusha
sub
or
lock
pushf
gs
cltd
push
ret
enter
jg
add
xchg
lods
lods
leave
in
inc
int3
jb
insl
clc
push
movsb
xchg
rorb
aas
jmp
cmp
push
notb
cmpb
int
lods
add
aaa
cs
adc
outsl
sub
pop
pop
sti
jne
je
add
jmp
test
sbb
sbb
in
sbb
test
xchg
mov
call
mov
push
and
xlat
out
lods
add
scas
mov
lret
add
mov
out
sub
cwtl
pop
mov
dec
inc
enter
cwtl
adc
push
mov
popf
popf
iret
fsubs
or
inc
mov
and
enter
mov
ljmp
cmc
stos
lea
loop
xor
pop
insb
lret
push
xor
or
pop
fs
popa
mov
sub
imul
les
setbe
jne
rcrb
or
sbb
aaa
arpl
loop
inc
mov
jp
pop
jae
inc
sbb
sbb
jl
ret
dec
sahf
lock
mov
cltd
dec
adc
lock
pushf
or
cmp
inc
pusha
jo
hlt
mov
mov
sub
hlt
lea
mov
lahf
mov
insl
popf
jecxz
movsl
mov
inc
and
bound
inc
out
adc
stc
jge
mov
jns
test
jne
jge
lret
call
loop
cmp
inc
adc
repnz
sbb
adc
out
jle
test
das
pop
dec
ds
sub
jp
or
rcl
js
fcmovne
jne
push
insb
repz
js,pn
jg
subb
jp
test
shlb
mov
cmp
xchg
inc
jmp
ss
dec
mov
mov
movsl
jle
cmp
icebp
int3
ljmp
lret
jg
fdivl
stos
scas
hlt
mov
ret
adc
push
hlt
lret
aam
aaa
push
xchg
das
shl
pop
lock
mov
mov
fstpt
mov
push
cmp
stos
gs
push
in
mov
xchg
es
cmp
loope
mov
mov
das
dec
sub
scas
cmp
add
daa
shlb
out
lahf
inc
insb
stos
movsb
cmpsl
cwtl
add
mov
add
xchg
in
lods
insl
inc
leave
pop
push
cld
outsb
lods
insl
xchg
pop
or
popa
repz
arpl
lret
push
xchg
add
repnz
loop
push
aas
xchg
and
dec
hlt
es
mov
aad
pop
cmp
shr
add
imul
mov
cmp
xchg
outsb
aas
cmp
sub
shll
or
jg
inc
jecxz
in
jne
daa
fdivrl
shlb
xchg
push
pop
sub
xor
lds
fcomp
xlat
mov
cmpsb
insb
lret
sbb
jecxz
punpcklwd
subb
addr16
outsb
pop
mov
loope
cmp
push
mov
enter
jnp
data16
std
sti
lock
ja
pop
fs
mov
push
lock
cmp
pop
xchg
mov
js
push
adc
cld
pop
sbb
mov
mov
cmp
dec
faddl
pusha
scas
testl
stos
neg
push
fldenv
add
sub
inc
stos
clc
cmp
out
sti
and
sbb
daa
arpl
mov
push
dec
scas
test
push
xchg
inc
icebp
fiaddl
xor
hlt
loop
fldcw
aam
sub
adc
inc
adcb
jae
out
les
adc
cli
cmpl
ret
cmp
sbb
stos
or
xchg
bound
hlt
insb
push
gs
push
sub
sub
bound
outsl
dec
das
mov
push
sub
nop
adc
xchg
mov
pop
jno
sub
dec
std
pop
insb
cmp
popa
xchg
sbb
sub
int
inc
mov
jecxz
dec
mov
sbb
scas
xor
scas
push
xchg
or
mov
rcrb
push
and
ret
jb
mov
adc
or
dec
xchg
lock
mov
jne
xchg
sub
cmpsl
push
loop
sbb
in
sar
ret
ret
ja
jmp
add
in
lds
ret
cmp
pop
sub
in
pushl
leave
cltd
cmpsl
lock
insl
lock
cmc
sbb
mov
addr16
jp
daa
push
in
or
add
sbb
xchg
jg
daa
lcall
dec
inc
inc
and
outsl
lods
aam
int
fnstenv
and
mov
xchg
push
imul
cmp
insb
xor
xchg
inc
ljmp
fistps
push
sub
mov
movb
fmull
inc
out
mov
mov
lret
xchg
fadds
mov
pop
negb
and
pop
lret
les
inc
out
sub
or
sub
mov
scas
pop
pushf
cmc
push
push
or
xchg
repnz
fiaddl
adc
int3
mov
pusha
fmull
pop
mov
or
sbb
adc
lea
mov
fisttps
inc
xchg
xchg
ja
popa
pop
cmc
push
jae
rcrl
pop
and
cmp
dec
mov
xlat
and
cmp
int
inc
inc
sahf
adc
jle
add
rclb
xchg
mov
rcrb
icebp
scas
inc
sub
aam
dec
or
cld
pop
dec
cwtl
push
sbb
repz
jmp
sbb
and
insb
mov
jecxz
push
push
mov
xlat
es
push
fstpt
pop
repnz
aad
inc
scas
das
jno
mov
push
mov
dec
ret
scas
shlb
mov
pop
mov
xchg
push
dec
adc
push
leave
enter
push
add
cmp
add
je
fdivrl
mov
jns
sbb
xorl
xchg
inc
inc
dec
insb
aas
stos
push
into
cmp
cld
iret
nopl
les
stos
repnz
dec
fwait
scas
and
sub
movsb
pop
sar
mov
cmpsb
iret
pop
movsb
cwtl
sbb
into
or
mov
les
and
xor
xor
xor
fisubs
iret
add
lcall
mov
pop
insb
xchg
sbb
mov
adc
test
rcr
dec
adc
fcmovnbe
movsb
cmc
jmp
pop
js
sbb
lret
ja
add
pushf
and
xor
sub
mov
imul
or
sub
inc
cli
xchg
mov
lcall
loope
xor
in
imul
jmp
adc
daa
in
loop
cmc
fistps
loope
mov
iret
popa
pop
sub
jl
mov
mov
xor
js
mov
scas
das
dec
pop
gs
cmp
sub
sti
push
xor
and
pop
dec
inc
sbb
dec
pop
popa
rolb
pop
mov
jmp
mov
ss
aaa
mov
rol
dec
outsb
nop
dec
repnz
fimuls
lds
and
hlt
push
stos
movsb
sbb
outsl
push
aad
push
mov
jmp
out
movl
and
xlat
mov
imul
jnp
jns
xchg
iret
mov
mov
mov
out
sub
mov
xchg
pushf
cmpsb
mov
popf
in
xchg
cld
xchg
push
gs
push
popa
or
das
push
dec
rclb
test
jb
dec
pop
inc
shlb
sarl
aas
push
sub
mov
not
mov
gs
and
lds
mov
fcompl
mov
lcall
xchg
dec
les
int3
popf
and
adc
and
ljmp
mov
je
ret
dec
int
loop
inc
pop
int
insl
mov
and
ja
in
loope
xor
push
pop
cmp
or
cmp
je
das
xchg
fcmovb
jge
loopne
addr16
stos
or
xchg
das
inc
enter
enter
cmpsl
clc
in
loope
push
mov
enter
test
cmp
out
cld
sar
rclb
negl
std
sti
shll
idivb
mov
sahf
sub
push
roll
cmp
pop
lds
or
push
jns
add
popa
inc
push
lods
xchg
xor
sbb
in
ss
push
fnstenv
cld
clc
mov
mov
mov
jb
pop
mov
nop
mov
jno
or
push
sbb
jp
fistps
or
mov
out
daa
insl
mov
mov
dec
add
mov
mov
pop
mov
pop
adc
jne
push
test
pop
push
mov
push
aam
ret
push
lret
das
leave
test
in
lock
adc
pop
lds
fstps
cld
lock
jmp
cmp
test
sub
push
pop
sahf
xchg
js
add
mov
add
stos
mov
pop
lods
dec
nop
stc
stos
clc
addr16
adc
mov
add
lret
jo
repz
or
call
daa
push
adc
xor
lahf
mov
or
leave
and
ss
add
and
sarb
sbb
decb
leave
daa
mov
movsl
ja
in
mov
xor
fcoms
aas
sub
insl
and
pop
push
fcoml
xor
add
push
lods
jg
pop
addb
iret
stos
xor
xchg
ret
mov
es
pop
mov
out
cmc
in
daa
mov
bnd
jno
loop
in
insl
sti
mov
push
stc
xchg
arpl
jg
enter
ljmp
loopne
mov
arpl
or
push
movsl
push
pop
lahf
xchg
mov
nop
lret
pop
cmp
in
mov
sbb
fadds
loopne
mov
mov
cmp
incb
ret
and
out
cmp
arpl
cmp
jbe
dec
data16
rcr
pop
testb
sub
push
mov
frstor
stos
lods
shl
adc
jge
aam
aad
pop
push
ror
call
and
jmp
push
sahf
insb
mov
rcr
xchg
iretw
and
mov
test
mov
jae
xor
ret
push
repz
and
pop
cs
pop
add
es
mov
mov
cmp
ss
sahf
mov
jmp
ja
je
insb
jnp
sahf
ja
jmp
mov
test
outsb
divl
lret
aam
cmp
cmpb
lret
xor
xor
fmuls
xchg
or
sbb
inc
or
jae
adcb
movsb
ljmp
pop
sub
xlat
daa
push
lods
neg
mov
push
inc
rorl
xchg
in
jmp
sbb
mov
jns
ja
xchg
jge
ret
mov
pop
cmp
and
push
clc
xchg
inc
scas
fiaddl
sbb
sbb
test
js
fmuls
xorb
or
jg
push
cmp
or
add
mov
inc
add
les
mov
sti
lds
jmp
pop
jmp
mov
loopne
mov
or
mov
jae
sub
xlat
lret
fcmovnbe
pop
jne
loop
xor
nop
pop
lret
push
hlt
cli
xchg
push
sbb
flds
jmp
inc
pushf
aad
arpl
sbb
dec
dec
fimull
pushf
push
insb
adc
test
jns
xchg
gs
add
sahf
push
int
loopne
sahf
or
mov
push
pushf
sti
scas
add
je
xor
stos
or
mov
mov
lcall
mov
jmp
sti
jge
add
jb
or
mov
aad
jne
or
das
inc
ss
sub
repz
adc
jl
xchg
cmp
or
push
push
std
inc
mov
lea
jns
adc
mov
arpl
jmp
test
repnz
mov
iret
test
pop
or
mov
aaa
loope
ljmp
out
xor
test
in
xor
xchg
out
push
std
mov
jb
adc
or
fstps
sbb
sub
mov
es
shlb
pusha
int
pop
and
call
pop
pop
jb
in
and
sub
subl
add
ljmp
or
cmp
popf
cwtl
lea
adcb
insl
ja
adc
movsl
jno
xor
cmp
xchg
or
icebp
je
xchg
test
call
xlat
jns
mov
jl
jne
test
cs
pop
mov
mov
inc
stos
sub
hlt
stos
or
or
xor
fsubs
xchg
mov
push
sub
add
daa
movsb
pop
xor
add
fisttpl
push
mov
pop
in
push
popf
jae
push
jo
loope
adc
data16
push
cs
sbb
jae
and
mov
test
int
clc
loope
or
xchg
dec
sub
dec
mov
lretw
cmp
pushf
aas
cmp
out
call
bound
mov
mov
jbe
inc
mov
out
gs
out
xchg
sub
sbb
and
mov
je
pop
jo
add
ret
cltd
xlat
xorl
push
rolb
inc
push
cmp
xor
imul
cmp
nop
push
mov
test
stos
hlt
pop
fsubs
mull
addr16
ret
in
je
pop
stc
adcl
rorb
ret
dec
test
in
cltd
sub
lds
out
pop
xor
ret
xchg
pusha
daa
ja
or
aam
shrl
xchg
add
adc
jo
inc
push
push
movsb
mov
xchg
nop
in
hlt
lock
rcl
and
xor
add
adc
fs
je
inc
inc
push
push
movsb
mov
xchg
nop
in
hlt
lock
rcl
and
aaa
mov
adcb
pusha
jo
inc
inc
push
push
mov
adcb
rol
sarb
sbb
mov
cmp
fs
fs
inc
aam
movsb
mov
xchg
out
push
sub
pop
xchg
adc
pop
andl
inc
movsb
sbb
pop
mov
push
xchg
pop
loop
repnz
mov
cmpsl
inc
xlat
push
divl
mov
xchg
pop
aaa
jo
ret
inc
loop
repnz
cmp
dec
jp
gs
sub
daa
in
add
fwait
addr16
adc
outsb
rcrl
adc
add
or
imul
jo
push
cs
ljmp
and
lods
cmp
stos
insl
addr16
aaa
mov
int3
push
ja
fwait
popl
lock
or
push
dec
jo
push
adc
stc
repnz
cmp
mov
xchg
mov
mov
inc
xlat
mov
jb
mov
cli
adc
add
pop
mov
or
jnp
popa
inc
pop
adc
xchg
cmp
bound
mov
mov
push
jbe
aaa
loop
adc
mov
sar
sbb
les
call
mov
add
bnd
xchg
mov
cmpsl
push
xlat
dec
imull
fwait
pop
mov
mov
push
lret
ja
and
ja
inc
icebp
push
loope
mov
pop
xchg
idivb
outsb
rcrb
dec
scas
cmp
add
adc
inc
mov
lock
jmp
adcb
out
dec
cmpsl
cmp
or
and
inc
ret
xor
cmp
jb
adcb
pop
mov
push
rolb
ja
add
and
push
divl
adcb
pop
mov
push
rolb
ja
add
jnp
pop
jbe
adc
frstor
loope
pop
insb
test
jns
adc
push
xor
jbe
lods
rolb
pop
jae
adc
lret
pop
lret
inc
pop
test
pop
jecxz
push
dec
mov
movsb
scas
fistl
adc
sbb
mov
into
push
jl
addr16
out
add
lret
and
pop
shr
out
lret
cltd
cmpsb
jle
mov
adcl
pop
mov
adc
sub
jge
jge
sub
in
adc
xor
mov
lret
mov
aas
mov
fisttpl
jne
pop
clc
mov
aaa
mov
mov
mov
and
pusha
jno
loope
lea
mov
fldln2
addr16
stos
inc
cmpl
adc
loop
call
fsubs
pop
data16
push
sbb
pop
add
xorb
add
lar
jo
shll
repnz
push
sar
cmp
xchg
pop
ljmp
imul
xor
ficompl
mov
inc
mov
inc
mov
pop
das
lock
daa
mov
lods
ljmp
xchg
int
inc
arpl
xchg
sub
fcmovbe
leave
out
xchg
add
dec
xor
push
imull
inc
out
rclb
es
test
xchg
jb
add
jns
push
jmp
jmp
fimull
adc
xor
cld
cli
mov
repnz
adc
movups
mov
mov
sarl
mov
xchg
addr16
mov
lahf
repnz
pop
adc
fcomps
mov
sub
adc
jecxz
xlat
sub
sub
mov
adcb
fldenv
and
dec
sbb
push
call
iret
mov
rol
in
jbe
das
movq
insl
test
fiadds
and
cmp
sbb
cmp
or
cmp
sbb
fbld
jb
xor
stos
inc
push
arpl
lahf
and
push
and
jmp
mov
xchg
cli
leave
xchg
clc
int3
repnz
fcoml
in
aam
pop
cmpsb
sub
xor
js
loopne
xchg
scas
and
mov
imul
sti
mov
call
push
mov
xor
sti
jl
push
pop
loopew
and
imul
mov
cmp
lock
cmp
mov
pop
push
into
mov
nop
jp
lods
fcomi
add
sub
mov
in
outsb
repnz
and
or
sub
ss
push
xor
aam
cmc
xor
push
js
insl
ljmp
dec
dec
das
sub
xchg
xor
stos
push
pusha
mov
lods
loop
test
in
mov
mov
xchg
inc
lock
dec
pop
stos
dec
fcompl
je
mov
add
fnstcw
pop
cs
insb
xchg
adc
mov
cmp
nop
gs
pop
cmpb
jmp
sti
cmp
mov
lcall
stos
notb
aam
inc
jae
movsl
and
addl
fbld
aad
outsb
fsubrl
inc
cld
inc
cmpl
gs
repnz
cld
or
aad
pop
loop
mov
inc
add
pusha
nop
or
xor
sub
ljmp
cs
pusha
sub
arpl
pop
dec
es
dec
jmp
ret
and
push
cmc
mov
pop
pop
mov
xchg
jle
mov
dec
fidivrl
xchg
cmpb
inc
aad
call
lods
fsubr
imul
arpl
ja
imul
jge
rcll
pop
dec
mov
adcb
sub
sub
into
adc
push
dec
std
xchg
sbb
pop
pop
out
adc
xchg
inc
push
push
pop
pop
jo
dec
mov
fidivrs
jge
adc
pop
into
lods
js
in
leave
mov
push
xor
mov
shrd
loop
pop
rorl
mov
lds
shll
lahf
stos
pop
gs
or
mov
gs
add
ljmp
es
fs
pop
dec
sbb
out
push
in
dec
xchg
inc
mov
out
sbb
enter
mov
sbb
insl
push
mov
jbe
aad
adc
or
dec
out
add
orl
push
pop
xorl
mov
js
call
push
pop
add
icebp
shrl
pop
lahf
lahf
ja
cmp
insb
sub
stos
adc
imulb
xor
mov
cmp
fld
ljmp
insb
fcmovnbe
jae
pop
and
add
cmpsl
subb
shrl
shr
jae
push
mov
xor
dec
les
fs
into
stos
movsb
pop
xchg
je
sarb
inc
mov
inc
cs
jp
andl
xorb
das
call
mov
pushf
decl
push
sbb
or
add
mov
push
sbb
scas
jp
pop
dec
add
add
mov
clc
stos
pop
fs
add
aas
mov
sub
adc
mov
js
das
pop
gs
aad
and
add
sbb
push
mov
lahf
es
or
jmp
lods
dec
mov
push
faddl
sbb
pop
popa
sub
shlb
aad
jb
adc
ficoms
insl
subl
xor
arpl
rdpmc
aad
sub
mov
dec
add
dec
push
loopne
lea
cwtl
call
js
dec
add
rclb
sub
arpl
fildl
sub
iret
adc
lock
mov
imul
mov
jo
add
sbb
push
enter
outsl
mov
push
sub
dec
cmc
in
push
mov
pop
jge
mov
repnz
jl
test
jp
mov
inc
jae
out
in
sub
xor
mov
mov
jge
jecxz
imul
int3
ss
jle
or
rcrb
push
in
sub
shl
mov
add
cmp
jecxz
xchg
sbb
stc
push
push
int
adc
pop
dec
aad
sti
push
in
xchg
sub
mov
ds
sub
test
mov
inc
or
movsl
les
mov
mov
ljmp
sub
into
mov
dec
fistps
add
dec
mov
fs
lahf
movsb
adc
xchg
scas
mov
test
mov
mov
dec
cld
sub
or
aam
adc
inc
das
inc
int3
ret
or
sub
mov
ficomps
iret
addb
mov
inc
addr16
negl
lock
sub
mov
fildll
sbbl
jnp
adc
mov
jae
pavgb
test
xchg
dec
subl
cli
push
mov
push
jo
jg
push
pop
jbe
pushf
sbb
rcrb
inc
pusha
mov
xlat
or
arpl
dec
les
enter
and
inc
mov
clc
jp
lret
ja
rorb
and
ret
add
imul
cmp
push
dec
mov
imul
cmp
test
ljmp
dec
sbb
ljmp
mov
in
jg
enter
ret
xchg
sub
add
jo
sarb
sbb
cmp
hlt
jp
ret
es
cmp
mov
xor
cld
movsb
aas
mov
mov
xor
sbb
cli
ret
mov
adc
cwtl
push
pop
xor
sub
in
roll
pop
test
fdivr
add
ljmp
loopne
xchg
mov
aam
xor
adcb
vpcmpgtb
or
pusha
jecxz
add
xchg
iret
fwait
lock
imul
mov
adc
xor
in
mov
jne
pop
jmp
xchg
mov
fisttps
push
sub
lret
int3
sbb
aaa
or
sbb
cmc
jmp
jo
mov
in
inc
mov
cmp
sbb
add
or
or
xorb
sbb
or
jo
or
sub
repnz
lret
lea
push
fnsave
out
int
scas
mov
sub
ret
outsb
dec
inc
add
int
nop
dec
xor
mov
mov
mov
lock
iret
dec
fcomps
or
or
ss
mov
aas
clc
shl
sbbl
aam
pop
aas
movd
xchg
in
lret
adc
jmp
add
dec
rolb
add
or
pop
ret
pop
or
jae
ss
gs
and
adc
adc
inc
les
rclb
fwait
jle
mov
nop
add
adc
icebp
cmp
mov
mov
daa
pslld
push
arpl
lea
int3
pop
mov
test
push
pusha
cld
mov
xor
out
mov
adc
mov
cwtl
mov
nop
addb
xor
scas
aad
xor
and
sbb
sub
test
xchg
xor
ret
xchg
out
xchg
imulb
adc
jne
jb
stc
xchg
inc
mov
inc
repnz
cmp
mov
sbb
cs
or
lret
in
inc
addr16
and
cmp
mov
push
mov
add
xchg
cltd
mov
hlt
in
enter
cltd
push
fs
sub
sbb
gs
mov
aaa
es
mov
int
ss
mov
mov
out
cmpsb
push
push
js
mov
aad
dec
enter
add
cmp
popa
pop
jbe
pop
add
in
cmp
movsb
aas
call
je,pn
movsb
lds
cmp
popf
xchg
loop
ja
xchg
jne
jmp
dec
fwait
outsb
lds
test
into
inc
xchg
dec
add
ljmp
movsl
xchg
cld
jns
cwtl
or
outsl
popa
pop
mov
jns
push
jge
push
or
cmp
jge
filds
pop
out
mov
aas
shlb
dec
outsb
daa
lds
inc
bound
arpl
cmpb
dec
cs
lret
cmpsb
mov
jg
lahf
pop
cmpsb
sub
mov
jg
cwtl
cmp
inc
mov
sub
outsl
push
lahf
lea
sbb
fisubrl
add
cmp
xor
shl
arpl
inc
test
shrb
pop
ficomps
pop
divb
push
lret
adc
int3
cmp
mov
stos
pop
xor
stos
dec
jmp
adc
loopne
cmpsb
jl
lret
push
jmp
jg
mov
stos
in
daa
sti
and
push
aaa
cli
mov
in
outsb
cs
mov
push
xor
xchg
mov
bound
xlat
test
or
outsl
or
outsb
dec
roll
jns
enter
jae
mov
xchg
dec
inc
mov
dec
inc
push
jo,pn
or
jmp
fisubrl
rorl
xchg
ljmp
dec
add
out
and
movsb
aad
cwtl
adc
sub
pop
shr
pop
mov
jb
jge
push
in
loop
lods
push
and
lock
iret
push
loop,pn
jge
aad
es
inc
pop
pop
aaa
out
mov
xchg
stc
or
test
std
jb
subl
mov
sbb
pop
outsl
and
out
scas
mov
and
inc
mov
and
mov
dec
nop
test
push
mov
and
jns
jbe
in
push
lds
mov
pop
mov
cmovnp
hlt
dec
int
aaa
sbb
popa
xchg
xchg
mov
mov
mov
pop
mov
xchg
mov
dec
cmp
xchg
cmp
add
loop
cmp
mov
sti
and
xlat
orl
fwait
jbe
adc
shll
cmp
xchg
test
pop
fistpll
test
scas
movsl
out
pop
sub
fcmovbe
roll
shlb
out
and
xchg
subb
inc
mov
sbb
mov
cmp
or
icebp
pop
inc
cmpsb
incl
mov
pop
lahf
ljmp
add
cmp
enter
in
add
xor
adc
sbb
xchg
xchg
sbb
ss
aad
aaa
jp
mov
lea
insl
cwtl
ljmp
orl
xor
imul
fldt
std
jo
rcrb
push
out
dec
fcmovnb
in
jnp
dec
mov
out
mov
loope
sub
dec
jmp
sar
dec
inc
loope
fidivrl
outsl
sbb
int3
rcr
xor
mov
xchg
xchg
mov
stos
mov
sub
ds
notl
dec
pop
fcomps
leave
inc
xchg
aaa
inc
std
cmp
sub
lds
mov
inc
adc
mov
xchg
add
push
xor
jnp
movl
mov
inc
lea
std
lahf
cmpb
mov
aaa
lahf
test
and
daa
xor
push
sub
incb
or
and
fdecstp
mov
sbb
in
push
mov
xor
call
push
shll
outsl
push
cmpl
or
iret
idiv
call
adc
mov
popa
and
or
pushf
stos
loopne
popf
mov
stc
in
rcrb
arpl
xor
stos
shl
push
or
jns
xchg
arpl
loopne
mov
fwait
out
mov
add
rorb
mov
rcl
and
xlat
adc
mov
jecxz
sub
mov
mov
or
icebp
lret
xchg
push
jb
fstpl
daa
mov
lahf
icebp
mov
mov
stc
aam
nop
into
jp
dec
repnz
test
push
mov
loopne
lea
das
fdivrs
jg
cmp
cwtl
sub
lret
cmp
std
pop
adc
mov
pop
inc
push
addr16
scas
cmc
adc
clc
add
mov
cmp
sbb
push
and
xor
popf
xchg
and
aam
xchg
imul
adc
dec
out
adc
fadds
dec
mov
inc
std
adc
popa
cmp
xlat
or
je
insb
inc
and
jge
inc
sub
dec
push
mov
frstor
push
loopne
and
mov
js
pop
dec
xchg
mov
adc
mov
mov
or
pop
or
ds
push
jo
mov
inc
gs
daa
xor
clc
inc
insl
rcll
mov
mov
or
inc
push
jne
into
dec
enter
imul
lea
push
pop
xor
and
mov
and
data16
cmp
rcl
pop
test
mov
jne
cmpsl
imul
outsb
aas
inc
mov
xchg
iret
cs
lcall
lret
dec
fxch
std
cmp
mov
arpl
inc
enter
push
push
xchg
xor
out
aam
xor
fwait
clc
or
roll
jns
fmuls
fs
xor
filds
push
loopne
and
mov
scas
jne
fiaddl
jne
hlt
ss
stos
out
push
or
int3
jp
push
stos
or
push
ljmp
pop
mov
inc
lock
aaa
movsl
sub
sub
ja
enter
and
push
out
inc
loopne
dec
enter
mov
mov
test
insl
dec
xlat
dec
sub
aam
test
push
shrb
jmp
test
arpl
mov
and
jns
popf
mov
jmp
xorb
or
xor
stos
addr16
jle
shl
scas
in
dec
xor
lds
xchg
mov
cmp
xchg
jmp
fsubp
adc
loope
popf
mov
pop
lea
jne
into
mov
jb
shl
nop
aas
iret
orl
ss
ret
mov
adc
adc
mov
rorl
mov
sbb
sahf
inc
sbb
rcrb
xchg
in
inc
in
fwait
popf
hlt
mov
fimull
rorb
scas
shlb
scas
pop
lea
in
aam
push
hlt
jmp
sub
push
mov
shrl
pop
and
lret
loope
in
push
xchg
decb
push
mov
aaa
stos
jo
mov
dec
dec
mov
cmp
test
push
jmp
sbb
das
stos
leave
xchg
or
test
or
or
xchg
add
push
hlt
lret
fadd
xchg
loope
leave
pop
outsb
aam
dec
shl
xchg
adcl
fucomp
or
out
ffree
lds
data16
inc
decb
inc
sub
lret
ror
ss
addr16
mov
fiaddl
dec
dec
xlat
adc
les
orl
and
pop
sbb
sbb
adc
mov
inc
mov
mov
int
mov
adc
push
ret
xchg
daa
cmp
in
mov
cmpsb
out
int3
jg
mov
movsb
ss
pop
cli
shll
pop
ja
sbb
and
xorb
push
push
jg
ja
adc
gs
mov
add
or
dec
jg
bound
arpl
clc
inc
pop
or
sub
in
movsl
cmc
mov
call
inc
dec
sbb
mov
mov
fdiv
adc
cmp
ret
xchg
add
push
sbb
fistl
movsb
scas
mov
int3
test
dec
push
push
sbb
outsl
xor
xlat
icebp
jp
pop
lds
jb
scas
sub
pop
mov
push
xchg
mov
sbb
dec
sbb
les
ljmp
or
dec
mov
cmpsl
push
cmp
jg
add
push
add
daa
pop
jg
sub
sbb
xchg
xchg
andl
dec
out
fildl
ds
add
or
ficompl
cli
aaa
fnstcw
xor
mov
test
insb
adc
out
gs
int
xor
sbb
lret
stc
pop
insb
testb
mov
mov
mov
adc
lods
add
ret
inc
cmp
lcall
jmp
sub
pop
stos
es
cld
int3
mov
or
fnsave
sub
push
jecxz
inc
mov
ret
arpl
sarl
test
ss
cltd
pushf
mov
cwtl
es
aad
mov
insb
push
daa
mov
push
mov
sub
jns
test
aam
pop
xlat
aam
push
push
cmpsl
pop
or
push
scas
dec
lods
fsubrs
mov
clc
rcrl
mov
leave
cmc
incl
pusha
add
out
fs
adc
cmpsb
adc
in
mov
pusha
pop
loope
mov
mov
jae
movsl
sub
jg
mov
in
push
xor
stc
mov
mov
pusha
pop
fwait
sbb
movsl
adc
inc
push
mov
les
add
xchg
outsl
cld
push
add
mov
das
cmp
ret
incl
cmp
or
mov
into
sahf
in
dec
cmc
push
orb
push
aas
pushf
filds
mov
cmc
lcall
add
into
enter
enter
push
xchg
jl
fs
cld
fmuls
insl
inc
jle
push
dec
insb
and
out
mov
jbe
mov
rcrl
fstpt
pop
lcall
js
xchg
test
xor
push
jbe
lea
dec
or
push
cs
lret
and
sbb
in
stos
rolb
pop
clc
add
push
jb
fstpl
cmp
pop
lcall
or
and
and
jnp
add
push
sub
idivl
lret
and
sub
aas
addr16
out
sbb
jge
shll
xchg
and
adc
push
imul
iret
hlt
mov
inc
aas
add
pop
add
aas
loopne
sub
out
das
stos
psubq
inc
in
mov
pop
inc
and
add
test
mov
jl,pt
inc
loop
mov
in
add
jbe
push
aas
movsb
shrb
out
cli
push
push
repnz
and
outsb
push
sarb
mov
cs
cmpsl
mov
rcrb
hlt
pop
inc
imul
lcall
addr16
ljmp
mov
rolb
mov
mov
mov
cmp
ja
push
rcll
test
icebp
xchg
jp
inc
into
aam
push
movsl
arpl
xchg
mov
inc
out
pushf
mov
push
mov
rorl
scas
add
pop
rcl
add
pop
into
arpl
into
adc
shlb
subb
cmp
mov
sub
repz
ror
xchg
and
ja
cld
imul
sti
pop
jnp
xchg
jns
dec
outsl
in
cmpsb
cmp
mov
int3
adcb
scas
outsl
jb
xor
pop
mov
test
cmpsl
sub
mov
add
jmp
cmp
inc
xlat
push
divl
adcb
pop
mov
push
rolb
ja
add
and
push
divl
adcb
pop
mov
push
rolb
ja
add
and
push
divb
adcb
push
cmpsb
aaa
mov
ret
inc
loop
ret
addr16
xchg
xor
loop
repnz
insl
lods
or
mov
mov
pop
mov
mov
stc
xchg
jmp
mov
fsubrl
add
imul
push
sub
stc
xchg
jmp
sarl
dec
add
imul
push
sub
stc
xchg
jmp
sarl
push
or
dec
add
push
cmp
stos
rolb
out
mov
pop
and
mov
push
adc
pop
cli
sbb
mov
jle
insb
insb
loope
icebp
or
mov
mov
ljmp
sbb
pop
cmp
js
jmp
fsubr
mov
and
or
cld
lahf
mov
adc
xchg
cmp
cli
or
mov
xchg
in
inc
rcll
mov
cmpsb
mov
mov
sbb
mov
lods
xor
add
insb
fs
adc
add
cmpsb
cmp
xor
or
pop
dec
inc
mov
cwtl
jp
gs
in
dec
je
icebp
cmpl
xchg
push
cmp
fnstenv
jmp
sarl
dec
add
imul
push
inc
fst
mov
stc
xlat
jmp
scas
call
push
and
sbb
sbb
and
and
mov
shr
test
mov
int
adc
jl
adc
ja
or
outsl
cmp
popf
mov
mov
mov
shrl
add
imul
push
sub
stc
xchg
jmp
sarl
dec
add
imul
push
sub
adc
sub
in
add
ss
jmp
mov
sarb
cmp
movl
jae
xchg
jb
mov
rcr
inc
je
pop
and
xchg
or
push
jle
inc
pusha
pop
mov
and
adc
fisttpl
fs
je
fiaddl
in
and
popf
xchg
pop
jbe
xchg
cmp
test
mov
mov
add
inc
stos
out
mov
outsl
dec
push
sahf
mov
loop
cmp
int3
mov
mov
frstor
les
leave
jns
and
push
mov
gs
stos
sbb
dec
pusha
add
jnp
shrl
ja
nop
pop
add
cmp
mov
loope
xchg
sbbb
mov
das
mov
sub
push
fs
popf
mov
cmp
ficomps
dec
mov
in
sbb
insb
ja
gs
pop
lea
lret
fistpl
push
adc
add
mov
push
sbb
xor
push
imulb
fsub
ja
push
pop
fstpl
mov
int
push
or
mov
cmp
dec
mov
out
shrb
mov
imul
sbb
ja
mov
movb
push
mov
mov
sbb
jno
push
pop
mov
sub
pop
jecxz
fsubs
pop
pop
and
test
lock
mov
aad
stc
and
cmp
and
orb
daa
inc
cmpl
xor
sbb
pop
inc
cmp
xchg
data16
lock
sub
adc
call
xchg
rcr
pop
inc
loopne
sbb
xor
xor
test
in
js
ljmp
cmc
fcmovnb
dec
and
in
jbe
lods
iret
mov
mov
mov
unpcklps
push
sub
lods
add
repnz
dec
cltd
xchg
sub
add
or
gs
mov
in
stos
xor
sub
popl
jb
xorb
xchg
jae
push
inc
movsb
lds
loope
pop
pop
push
lret
mov
sarb
mov
test
sub
or
pop
inc
hlt
cmp
push
lds
ja
push
int
mul
out
hlt
mov
and
mov
mov
dec
mov
outsb
dec
enter
push
cmp
cmc
dec
int3
shlb
sub
mov
xchg
cmpsl
sub
sub
mov
cmpb
inc
or
jnp
outsl
and
lea
or
je
out
shlb
insl
adc
nop
jmp
cmpsb
je
out
out
ret
add
inc
fiaddl
mov
sub
inc
popf
into
push
sbb
loop
jle
sbb
nop
mov
lcall
and
pop
mov
cli
xor
push
mov
sub
test
push
mov
ss
mov
inc
dec
push
mov
aad
icebp
inc
cmp
bound
in
rcr
das
orl
js
xor
icebp
adc
dec
lods
and
daa
popf
int
xchg
gs
cmpsl
lock
push
push
in
mov
adc
xchg
stos
test
pop
call
mov
je
adc
inc
fidivl
inc
into
ss
xchg
push
icebp
test
lods
lods
shl
test
xchg
pop
jns
cld
lret
inc
mov
test
subl
daa
lret
cs
lahf
jge
mov
inc
jecxz
push
fwait
push
test
jp
jmp
push
inc
dec
jo
or
test
lret
sbb
clc
mov
xchg
cmpsb
ret
aad
pop
cmp
aas
jno
ror
pop
ror
jle
outsl
jnp
mov
js
rcl
or
lds
sti
cld
cmp
fmull
mov
mov
mov
mov
xor
jle
stc
int
jmp
imul
movsl
cltd
mov
inc
pop
insb
mov
loop
mov
xor
inc
jae
daa
dec
mov
push
lcall
stos
ret
push
sar
push
dec
dec
movsl
sbb
sbb
jp
ds
xor
cmp
sub
cli
mov
add
push
adc
cmpsb
addr16
idivl
mov
jmp
push
out
incl
jnp
gs
xlat
xchg
pop
push
aaa
repz
mov
pop
inc
ds
add
dec
mov
adc
sub
mov
adc
rclb
lret
pop
inc
movsb
sub
dec
mov
ds
gs
fildll
xlat
xor
mov
int
hlt
test
iret
mov
xorl
ja
aaa
sti
mov
ja
shlb
xor
inc
cltd
add
add
in
imul
and
cmp
imul
out
shll
jp
inc
xor
push
xchg
cmp
fcomip
jp
dec
mov
leave
hlt
sub
xor
add
je
mov
cmpsl
sub
xchg
iret
out
ret
dec
imul
loop
cmpsb
in
mov
popa
sub
jb
js
and
test
shr
sbb
stc
xchg
xchg
fadd
push
fwait
dec
xor
xchg
push
cmp
jo
shr
lods
mov
mov
mov
xchg
gs
rolb
lock
dec
cwtl
xor
or
mov
or
jb
add
xor
xor
cmp
arpl
es
dec
jl
test
sub
xlat
sub
inc
cmp
push
inc
sahf
ljmp
jp
inc
cld
mov
cli
push
enter
cmpsb
ljmp
xor
iret
sbb
inc
sbb
xchg
jge
mov
xor
imul
mov
aam
aam
pop
mov
mov
cmp
imul
aas
pop
xchg
pop
and
gs
test
pop
stos
push
stos
jmp
movsl
lods
in
iret
mov
mov
cmpsl
adc
dec
jmp
shl
mov
movd
imul
cmpb
sbb
popa
sbb
jne
inc
sbb
les
arpl
xor
aam
call
or
clc
push
and
xchg
mov
cmp
pop
cmp
jns
inc
cli
iret
sbb
aad
das
cmp
mov
cmp
sub
xchg
or
mov
mov
arpl
mov
rorl
or
pop
out
hlt
lock
les
aaa
jb
roll
insl
outsl
or
sub
repnz
shll
add
fidivrs
sub
dec
dec
out
fmulp
push
mov
int3
pusha
xor
xor
add
movsb
xchg
imul
inc
jae
subb
mov
mov
in
cli
add
mov
jns
inc
jl
icebp
mov
lret
aam
jp
or
ret
add
popa
inc
push
or
xchg
lret
pop
jno
push
aaa
movsb
or
repz
sbb
lock
out
shr
sbb
jecxz
sub
iret
jle
xor
sub
jecxz
lcall
aaa
aad
jmp
jle
mov
call
mov
jbe
in
outsl
lds
cmp
out
repnz
ret
inc
fistl
movsb
cli
push
xchg
rcll
adc
lahf
push
or
dec
aas
stc
std
mov
lcall
popa
mov
mov
sub
popf
out
push
sahf
repz
in
add
popf
push
or
xchg
scas
and
and
sahf
lret
ss
pop
cmpsb
hlt
xor
sti
test
inc
je
and
dec
xor
jno
sbb
add
stos
mov
mov
out
mov
jo
outsl
xor
daa
adc
jmp
cmp
pop
mov
out
adc
jb
mov
mov
int
es
cs
daa
sbb
jnp
sub
adc
shl
lods
mull
loop
aaa
test
or
mov
scas
jbe
bound
xchg
add
lods
jno
mov
or
xchg
dec
jnp
add
adc
repnz
adc
je
push
inc
icebp
pop
inc
loope
out
jle
movsb
or
and
lahf
imul
movsl
insl
xchg
scas
daa
scas
in
push
cli
mov
lods
push
push
pushf
call
jnp
mov
insl
and
fdivrl
or
push
xchg
mov
lret
inc
shrb
cwtl
pop
pop
lcall
mov
mov
enter
nop
arpl
xor
imul
int3
sub
daa
sbb
mov
xchg
pop
xor
adc
and
dec
cli
push
data16
out
add
xor
push
pop
stc
push
clc
loope
stos
xor
and
pushf
leave
in
out
stos
out
inc
or
out
enter
pushl
sub
xchg
sbb
xor
mov
pop
imul
hlt
sbb
xor
adc
data16
jp
addl
mov
jae
nop
sub
les
sub
mov
sbb
mov
pop
xor
jns
cmp
jo
ja
mov
jo
lods
rol
mulb
nop
sbb
mov
cmp
push
lcall
lret
xchg
lods
dec
outsb
std
pop
insb
fnsave
lods
scas
mov
lcall
dec
mov
pop
cmp
jmp
lahf
jmp
popf
bswap
inc
repz
fmull
xor
call
and
mov
mov
inc
aaa
mov
xchg
dec
imul
pmuludq
inc
pop
ret
xchg
pop
fildl
add
sbb
scas
push
lret
fisubrs
mov
test
mov
movsl
aad
push
rolb
mov
xor
push
rcl
xor
pop
xor
push
es
rcll
ja
mov
jne
je
inc
in
fistps
pop
je
cmp
sub
sar
push
outsl
push
push
mov
in
pop
or
orb
fidivs
insl
out
fmull
xchg
dec
dec
int3
test
mov
cmp
push
std
jecxz
or
sti
aad
mov
cmpsl
int
cmpsl
xchg
scas
out
jae
ret
stc
jne
mov
cmp
add
xor
sub
jno
cwtl
dec
and
lds
add
sub
pop
sbb
lods
subl
jo
xor
mov
stos
test
xchg
adc
sub
cmpl
mov
fwait
jle
hlt
jecxz
sbb
cmpsl
je
mov
mov
dec
orl
cmp
adc
xchg
mov
ss
shl
add
gs
and
cs
mov
lcall
mov
sbb
sub
or
ficomps
xchg
in
pop
leave
xor
sarl
fwait
mov
aad
xor
sti
rolb
aam
lock
rcrb
popa
dec
ffreep
lahf
or
loop
pop
subb
mov
hlt
shl
test
mov
lods
mov
mov
or
mov
psadbw
xchg
dec
cmc
adc
mov
xor
mov
sbb
aad
pop
and
add
pop
in
imul
push
jg
inc
xchg
mov
sbb
loope
pusha
std
cmc
movsb
and
pushf
mov
lahf
mov
sahf
xchg
pop
push
movsl
std
test
fwait
add
mov
push
je
mov
sub
pop
icebp
in
cmc
in
and
add
and
mov
rcl
repnz
mov
cmpsb
sahf
sahf
mov
xor
dec
xchg
mov
cmpsb
inc
mov
mov
lock
aaa
pop
add
out
and
pop
pushf
pop
jne
xor
xor
push
xchg
xor
movsl
xchg
ffree
lea
bound
rorl
pop
pop
or
xor
leave
sarb
daa
jmp
mov
sbb
push
inc
add
mov
or
dec
or
fmul
hlt
out
push
sub
cmpsb
dec
xor
stc
sbb
loopne
fsubs
in
es
nop
xor
orl
dec
inc
sahf
inc
jne
orb
js
dec
cli
ja
xor
scas
int3
scas
xchg
scas
lret
inc
cmc
outsb
cmp
cmpsl
aaa
pop
jmp
repz
sub
mov
out
stc
xor
imul
lea
add
add
xchg
push
popa
imul
mov
leave
aas
dec
cmpsl
ljmp
xor
mov
dec
call
or
jb
jp
in
inc
mov
scas
add
pusha
sbb
scas
and
push
sub
mov
lahf
fucom
or
cmp
sub
cmp
cld
cmpsl
cmp
sbb
push
pushl
add
push
mov
dec
cmp
xchg
pop
and
mov
xchg
mov
push
xorl
push
fmul
bound
stos
inc
push
hlt
cmp
nop
jb
lods
cmp
or
mov
into
movsl
ljmp
cmpb
mov
mov
and
xchg
dec
push
xchg
lret
jne
pop
xchg
or
not
leave
mov
pushf
iret
jo
lods
mov
sbb
mov
mov
adc
lcall
lock
loope
and
inc
inc
call
imul
xchg
mov
adc
addr16
je
dec
ss
mov
in
mov
jge
adc
mov
dec
cmp
inc
mov
xchg
inc
dec
int3
adc
or
mov
lods
leave
or
pop
cmc
scas
aam
enter
call
ljmp
push
loop
add
fs
in
mov
daa
out
stos
sbb
push
mov
fdiv
xchg
xchg
mov
gs
iret
pop
test
movsb
add
cwtl
clc
jmp
push
push
push
push
mov
lahf
insl
xchg
ja
push
lret
add
jle
push
pop
or
add
jno
and
jge
xchg
icebp
push
jle
imul
xchg
jbe
icebp
mov
dec
daa
pusha
inc
scas
popa
inc
jl
jge
dec
outsl
xor
sahf
in
pop
rorl
and
and
sbb
pusha
mov
cmp
in
mov
push
push
xchg
pop
addr16
fisubrs
out
rclb
movsb
int3
and
push
pop
jl
fstl
sub
test
xchg
sbb
jmp
stos
movsb
test
rol
mov
in
int
insb
xlat
stos
testb
fs
sub
xlat
push
xor
mov
cld
jl
xchg
push
cmp
lea
pop
test
stos
dec
add
jns
pop
bnd
push
into
push
bound
pop
push
aam
movl
mov
add
enter
jne
jno
mov
sti
fidivl
outsb
fwait
sub
aas
dec
dec
push
sbb
pusha
xchg
pop
mov
xor
out
rcll
insl
fstl
jle
cmp
popa
pop
push
in
sub
hlt
push
je
cwtl
mov
sub
insb
mov
test
sbb
jp
popa
inc
notb
jns
jl
bound
popf
push
mov
jmp
inc
enter
out
pop
aad
jp
pop
jmp
push
out
clc
rorl
bound
adc
mov
cmp
dec
popa
sub
adc
ja
xchg
aad
xor
push
cmpsl
jnp
ja
sahf
loop
decb
jbe
dec
aaa
jns
mov
out
push
mov
mov
sbbl
cmpb
jae
clc
pop
xlat
mov
fwait
mov
pop
sbb
push
dec
fsubrs
jmp
and
test
adc
jo
hlt
mov
movsb
dec
jnp
out
dec
xchg
jb
sarb
add
popf
enter
dec
lahf
pushf
cltd
test
cmpsb
push
in
cmp
dec
das
mov
bound
cld
fcomps
pusha
inc
inc
js
sbb
jae
mov
hlt
sub
les
jmp
jg
dec
add
and
cmp
bound
stos
push
std
sbb
push
dec
mov
aas
mov
sub
lds
imul
sub
cmp
adc
dec
pushf
into
or
or
jl
nop
in
mov
push
push
inc
mov
sub
mov
xchg
es
fistps
push
and
cmp
pop
das
sub
jb
mov
dec
mov
stc
push
mov
xor
ja
js
loope
adc
data16
dec
xor
roll
lea
daa
adc
into
pushf
dec
xor
push
subl
pop
push
shll
mov
mov
add
xchg
mov
xchg
sbb
xchg
aas
test
js
or
adc
mov
jg
imulb
jne
jle
and
and
fiaddl
cmpsl
insl
in
push
pusha
pop
lahf
out
ds
xchg
push
movsb
out
insl
push
pop
mov
scas
xchg
or
into
out
inc
addb
cs
sub
adc
lods
inc
test
loopne
imul
xor
test
adc
lcall
inc
loope
shrl
hlt
xchg
or
sub
int3
pop
fadd
mov
or
inc
fistl
aam
and
out
sbb
ljmp
inc
dec
cld
jg
repz
insl
rcrl
insb
loope
in
push
dec
rorb
pop
xor
rcrb
mov
nop
aas
mov
mov
cld
insb
mov
inc
cli
stos
xchg
shr
movsl
test
add
pop
in
adc
mov
clc
push
xchg
out
int3
insb
lea
xchg
mov
fnstenv
shrl
insl
addr16
pushf
or
mov
jl
test
cmp
xor
xchg
pusha
jp
ljmp
cltd
jno
loop
push
add
por
jb
and
outsl
mov
out
shrl
fisttpl
sti
rclb
xor
mov
aaa
js
mov
aaa
mov
enter
sbb
dec
dec
sbb
push
inc
nop
mov
int3
data16
lea
sub
out
dec
mov
xchg
or
cmc
das
push
mov
sbb
testb
cmpsb
insb
inc
or
mov
mov
jb
aam
mov
push
bound
out
pop
sbb
ja
pushf
jge
rcrl
in
aam
int3
int
movsb
add
adc
add
push
and
out
xor
fisubs
and
cs
loopne
std
bound
lods
push
push
adc
xchg
mov
adc
pop
loopne
imulb
xor
or
fisubl
lret
aas
pop
fstpl
out
mov
pusha
repnz
pushf
lods
test
and
and
popa
push
add
out
stos
ficomps
fwait
arpl
test
es
lcall
push
add
loop
pushf
in
testl
cld
fstpl
push
ret
arpl
daa
jp
adc
and
sub
jb
mov
mov
movl
fs
add
in
rcl
mov
test
stos
addr16
aam
sti
sub
loopne
in
xchg
mov
movsl
mov
sti
rcrl
adcl
fstl
es
sub
repz
rorb
enter
cmp
fsubp
xchg
pop
fsubl
or
inc
and
into
sbb
xchg
sub
ss
push
shl
fidivrs
nop
sahf
xchg
cmp
fs
push
jmp
cmp
jmp
and
in
cmp
ljmp
xchg
stos
adc
mov
scas
in
popf
aas
nop
shlb
test
stos
shlb
pushf
xchg
jns
test
fwait
add
mov
test
outsb
sbb
pop
sarl
pop
add
int
sti
jmp
jbe
mov
push
pop
or
cld
insl
mov
adc
insl
cmc
ret
push
and
adc
push
push
mov
inc
addl
iret
mov
push
xor
xchg
inc
cmpsl
addr16
mov
ja
xor
ljmp
push
in
adc
test
jb
pop
push
call
mov
jae
test
mov
test
iret
jnp
leave
pusha
movsl
push
jp
or
mov
dec
cmp
xor
daa
outsb
sbbb
inc
sub
sbb
xor
push
or
inc
jae
mov
push
push
cmpsl
or
jb
popa
faddp
xor
or
test
int
adc
cmc
cwtl
cmp
mov
or
xchg
push
aaa
mov
repz
into
pop
sbb
mov
inc
add
cmp
or
cmpb
js
loop
imul
mov
inc
xor
sbb
mov
or
js
xchg
jo
or
sahf
xchg
mov
or
inc
repz
mov
inc
or
adc
addl
push
pop
cmp
fsubl
pop
or
jae
mov
sbb
mov
jb
cmp
mov
xchg
and
cmp
jge
inc
popa
cmp
sbb
push
mov
jmp
subl
in
mov
daa
inc
sub
aad
or
push
and
repnz
sbb
lods
mov
pop
lods
leave
mov
cltd
icebp
mov
mov
xor
jns
imul
push
sub
stc
xchg
jmp
sarl
dec
add
imul
push
sub
stc
xchg
jmp
sarl
dec
add
imul
push
sub
stc
xchg
jmp
inc
mov
into
jecxz
jns
push
push
xchg
stc
idivb
ljmp
jge
adc
cmp
gs
mov
cmpsl
repz
ret
in
adc
add
push
jne
gs
mov
movsl
repz
adc
xor
add
jae
arpl
insl
inc
jg
jbe
mov
fwait
xchg
subb
adc
jno
xor
mov
push
pop
mov
repz
repz
pop
or
inc
out
mov
pop
fsubp
mov
inc
adc
push
movsl
or
notb
lret
ljmp
sub
add
inc
insb
or
and
push
mov
add
jbe
and
jae
jae
lods
sub
mov
push
push
movsl
pop
or
jg
int3
sub
cmp
enter
push
and
pop
test
mov
sbb
sbb
in
xor
mov
call
imul
mov
or
adc
and
arpl
insb
inc
jl
lea
mov
shl
ret
xorl
data16
add
sub
sbb
or
cld
cmpsl
std
lock
lret
mov
xor
add
xor
adc
in
mov
out
cmpsl
mov
mov
push
inc
pusha
jp
add
cmp
push
jne
gs
mov
movsl
repz
ret
in
adc
add
push
jne
gs
mov
movsl
repz
ret
in
adc
daa
ss
leave
pop
fiaddl
aam
add
shrl
adc
pop
xchg
fdivrl
jge
mov
ds
dec
addl
cmp
mov
mov
nop
test
xlat
ds
dec
sti
adc
addr16
and
jl
clc
jge
int3
xlat
lods
push
fildl
js
movsl
and
roll
nop
cmpsl
ss
jae
inc
mov
fisubs
mov
scas
int3
sti
bound
inc
pop
fnsave
call
sub
cmpsb
push
inc
fcmove
insl
stos
repnz
movsl
push
push
and
mov
cmc
push
repz
and
cltd
out
cmp
into
jno
and
call
clc
nop
lds
mov
jno
xchg
int3
and
push
mov
cwtl
outsl
jne
ret
sub
shlb
and
jge
cwtl
fmull
clc
scas
xchg
insl
sbb
lret
lret
sbb
pop
lret
jle
mov
outsl
lret
loope
mov
jl
sbb
xchg
negl
and
jle
adc
xchg
int
cmp
xabort
sub
mov
xchg
xlat
dec
aas
stc
mov
push
pop
add
dec
xchg
xor
mov
loop
sbb
in
es
fdivr
loope
add
bound
cmp
adc
rcll
movsb
dec
mov
ret
lock
push
test
push
push
xchg
mov
mov
inc
ljmp
rclb
clc
fwait
jecxz
fmull
sub
xor
pop
jecxz
xor
push
cmc
lock
cli
jns
sbb
mov
fidivs
mov
loopne
std
test
dec
mov
mov
xor
subb
int3
adc
xchg
stos
in
ret
dec
jns
aaa
cmp
push
jns
scas
icebp
rolb
sbb
inc
sub
jae
mov
aas
xchg
and
jo
mov
popf
adcb
imul
in
lahf
jge
push
mov
pop
push
das
jne
popf
ljmp
lea
push
mov
jne
adc
push
xchg
and
insb
mov
add
inc
xchg
fwait
jmp
dec
mov
inc
xor
mov
mov
dec
and
bound
nop
jbe
test
push
cmp
movl
test
flds
std
or
jmp
mov
mov
cmp
mov
inc
sbb
mov
cltd
inc
scas
mov
mov
jnp
jbe
adc
jecxz
mov
outsb
mov
mov
popf
popw
out
and
rcrb
testl
imul
popl
in
adc
push
dec
jns
movsl
bound
and
add
divl
pushaw
jo
call
in
cmp
insb
mov
rclb
sub
xchg
mov
rcrb
xchg
out
into
push
pop
outsl
nop
scas
clc
push
out
adc
cmp
pop
mov
enter
hlt
in
dec
cld
ja
sub
jle
mov
ja
rcll
ret
add
push
cmp
movsb
lahf
iret
movsb
add
sbb
add
mov
not
fs
mov
cmp
or
popf
andb
std
push
in
or
andl
call
leave
sbb
in
test
sub
das
xor
mov
aas
mov
inc
lret
or
fsubr
mov
pop
aad
inc
test
push
sub
punpckldq
ret
lock
aas
int
dec
mov
ss
lahf
mov
add
push
xor
or
xor
sbb
mov
dec
xchg
cmp
repz
lods
fwait
inc
push
idivb
into
dec
fwait
mov
xor
mov
je
sahf
mov
mov
lods
scas
mov
pop
out
rcrl
mov
dec
sbb
jg
daa
stos
cwtl
mov
mov
xor
repnz
xchg
repnz
in
mov
aaa
nop
imul
stos
adc
fstl
and
int
rcll
pop
mov
mov
pop
mov
shlb
fadds
cmp
ja
fistl
fmul
push
jg
loop
in
popf
ret
xchg
fstps
cli
lret
push
lahf
sbb
notl
jnp
mov
mov
add
push
aam
add
imul
lea
outsb
jno
ret
mov
cmp
cwtl
fs
or
scas
les
jne
insb
outsb
fisubl
or
lea
in
pop
cmp
cwtl
sbb
inc
jge
mov
mov
cmpsb
xchg
dec
jno
fildll
shr
int
push
xchg
shl
pop
push
and
in
cmp
mov
dec
mov
sbb
lcall
mov
ficoml
dec
cmp
dec
mov
daa
dec
mov
sbb
fstpl
xchg
sbb
mov
popa
movsb
movsb
dec
pop
mov
stos
or
shl
or
jecxz
mov
mov
sbb
or
ret
dec
jne
cli
stos
call
and
push
test
dec
mov
bound
pop
subl
sub
sahf
es
xchg
sbb
movsb
or
test
pop
and
mov
in
leave
sub
pop
mov
adc
cli
xlat
pop
out
mov
addr16
daa
cmp
int3
mov
in
push
testl
mov
fdivp
or
jp
outsl
pushf
jnp
or
adc
pop
jmp
jb
flds
sahf
sti
dec
xchg
push
outsb
dec
stos
jge
fcompl
sbb
loopne
popf
ret
xchg
fwait
bswap
insb
in
ret
jo
adc
push
sbb
sub
xlat
lea
test
dec
push
add
lock
int3
test
mov
adcb
cmp
testb
sbb
into
cmp
cmpsl
cmp
mov
xor
int
movsb
pop
mov
jo
mov
scas
inc
cli
pop
inc
mov
dec
repnz
jmp
mov
mov
jns
mov
push
or
pop
fdivl
pop
push
mov
lea
jo
inc
sub
stc
fucom
sahf
notb
div
lds
xor
pop
xor
sub
xorl
je
jge
insb
lret
imul
mov
cmpsb
scas
xor
xchg
mov
push
inc
jne
jns
sub
scas
or
xor
push
int3
cmp
out
divb
in
xchg
ror
imul
pop
movsb
or
xor
add
iret
lock
cmp
jg
fwait
sbbl
leave
iret
icebp
or
adc
mov
test
sbb
adcl
rcrl
xchg
mov
es
iret
imul
aas
xchg
mov
fstps
bound
mov
push
and
scas
cltd
sub
mov
fcompl
hlt
iret
movsb
cmp
mov
cmpsb
xor
or
mov
sub
jbe
roll
mov
popa
rorb
mov
lods
adc
std
mov
fdivs
dec
insl
enter
gs
je
lahf
cmc
test
leave
subb
adc
xchg
out
jo
insl
pushf
mov
fdivs
test
stc
cmp
sbb
push
mov
sbb
enter
sub
push
out
bound
mov
xor
lret
fnstcw
cmp
mov
mov
fimull
xchg
pop
pop
mov
jae
iret
add
xchg
xor
push
out
fwait
decl
jl
mov
sbb
adc
mov
not
cltd
jl
sub
adc
lret
enter
in
xchg
mov
mov
push
mov
arpl
inc
aad
out
cmp
jae
push
in
xor
test
nop
stc
xchg
cwtl
jecxz
xchg
notb
add
adc
pusha
add
add
xor
rep
mov
mov
ret
mov
pushf
jb
incb
xchg
aaa
lret
xchg
jg
shlb
pop
pop
cmp
xchg
test
mov
mov
popf
inc
out
push
mov
movsb
dec
jp
movsl
sbb
mov
cmp
mov
gs
inc
jbe
fstpl
call
adc
push
mov
pop
jnp
adc
mov
test
push
imul
je
dec
add
cld
leave
or
fadds
in
mov
xor
push
mov
cmp
or
mov
iret
fldl2e
sbb
push
icebp
pop
mov
fistpl
inc
cmp
mov
ljmp
lret
push
pop
or
shrl
js
sbb
lds
inc
lcall
out
in
rolb
lock
test
test
add
shl
outsl
call
adc
adc
sbb
test
xor
mov
test
xor
outsb
popa
cli
xorb
js
leave
jge
cmpsl
sbb
imul
call
sub
xchg
inc
sahf
out
push
outsb
and
pop
sub
cld
xor
sbb
hlt
out
mov
mov
jmp
mov
or
sti
or
mov
adc
leave
and
scas
mov
popa
lahf
rclb
es
add
inc
mov
push
inc
push
shlb
cli
xchg
sub
pop
pop
test
pop
loopne
jmp
mov
cmp
mov
rclb
xor
fcmovnu
bound
jl
and
xchg
movsb
fisubrs
mov
ljmp
push
loop
push
push
or
movsl
jo,pt
adc
cmp
mov
push
leave
and
pop
popa
ret
push
jle
iret
xor
shll
lea
xor
jns
mov
xor
xchg
movsb
addb
and
adc
hlt
adc
sbb
or
xchg
lcall
lods
jl
orl
mov
adc
add
es
out
push
gs
and
ljmp
imul
cmp
mov
in
cmpsl
cld
mov
xorl
push
push
push
push
mov
insl
push
test
jb
pop
cmp
or
or
mov
mov
jg
mulb
mov
mov
mov
mov
mov
rorb
xor
sub
mov
mov
sub
mov
out
xchg
out
xchg
sub
mov
adcl
push
sti
and
inc
sbb
mov
out
lds
das
adc
push
dec
or
sub
out
ja
test
jle
xlat
subb
into
cmp
shll
ljmp
inc
mov
sub
push
dec
sbb
flds
dec
dec
jge
jne
mov
data16
leave
test
jbe
dec
and
mov
and
dec
cmp
sub
stc
xor
cmpsl
push
pop
repnz
jmp
cmpsb
adc
dec
sub
push
mov
push
pop
vmwrite
stos
or
xor
mov
ret
add
movsl
nop
jb
repnz
das
repnz
push
hlt
cmpb
jne
xor
and
test
add
mov
sub
add
ret
imul
lock
dec
leave
cmpsl
fs
jns
mov
ss
jbe
ljmp
pop
cltd
int
mov
shrl
call
shr
loope
mov
add
jne
pop
push
jmp
aam
or
imul
fsin
dec
cmp
clc
sub
jbe
decl
lahf
iret
push
data16
inc
shrl
cmp
mov
or
aaa
jg
iret
sub
idiv
les
outsb
jns
dec
sbb
out
insl
cmp
scas
mov
das
cli
mov
cltd
pop
in
ss
popa
push
cld
cwtl
rorb
ja
out
jb
addl
adc
mov
pop
test
add
mov
and
pushf
pop
sbb
pop
mov
dec
cli
mov
mov
cmp
arpl
xor
dec
les
lret
dec
pop
pop
subl
bound
xor
push
mov
push
add
mov
ljmp
shll
inc
shr
sub
mov
fs
pop
aaa
movl
jmp
and
jns
and
and
lret
movsb
push
divb
xor
cmpsl
imul
mov
mov
mov
mov
inc
or
xor
mov
and
fcompl
push
test
adc
iret
inc
ret
fadd
sbb
out
insb
in
rcl
ficomps
pop
sub
and
adc
jbe
inc
or
xor
sbb
clc
sbb
push
push
jo
jmp
sbb
cld
flds
dec
mov
sbbb
sbb
cmp
sahf
or
xchg
sub
call
mov
ljmp
cmc
jl
xor
rcll
enter
mov
loopne
mov
add
fistpl
dec
ss
xchg
and
dec
push
mov
std
sub
mov
xor
xchg
imul
jg
int3
cmpsl
rcll
loope
loope
rolb
and
dec
ja
mov
enter
add
adc
stc
aas
je
inc
pop
pop
lds
ret
in
sbb
or
pop
adc
mov
arpl
add
add
lcall
jle
popa
mov
inc
in
push
inc
and
fs
and
and
wbinvd
enter
and
jo
cmc
or
and
in
push
mov
shll
dec
rclb
mov
ficoms
sub
pop
addl
sbb
jns
inc
or
pop
push
out
pop
ds
mov
adc
mov
jb
push
pusha
jg
mov
or
mov
dec
jl
cmpsb
mov
pop
movsl
sbbb
shll
jbe
push
aam
test
cltd
jns
jbe
aad
push
xlat
mul
mov
test
fisubrl
sbbl
or
inc
xchg
adc
lcall
iret
iret
test
lods
jp
push
sub
js
roll
je
lock
ds
dec
inc
pop
das
mov
mov
mov
insb
sub
sbb
lods
mov
cld
hlt
add
adc
subb
inc
fiaddl
mov
xchg
lock
aad
loope
push
repz
lea
jg
mov
stc
adc
into
jno
dec
stos
mov
stos
mov
jle
bound
notb
and
je
out
mov
jo
and
mov
dec
push
int
and
sub
add
push
inc
and
daa
bound
jbe
fcomps
std
inc
lahf
sub
fcomps
data16
movsl
push
das
nop
shl
sub
das
jl
mov
clc
sbb
lock
outsb
cmp
shlb
hlt
xchg
push
dec
stos
add
jecxz
stc
mov
ja
fwait
mov
dec
fcoms
mov
lret
pop
pop
dec
ret
pop
outsl
xor
adc
test
stos
and
pop
adc
inc
fs
insl
mov
sbbl
mov
push
xor
mov
cld
fcomps
add
test
leave
sbb
daa
and
dec
stos
rol
das
mov
mov
lea
dec
out
in
imul
add
push
push
sub
pop
jns
jbe
fidivrs
stos
inc
dec
adc
addb
mov
loope
xchg
rolb
fldl
icebp
jae,pn
jo
adc
jbe
es
ret
xchg
mov
jp
push
clc
mov
negl
xor
ss
dec
push
xchg
inc
movsl
jecxz
xchg
sbb
out
or
mov
fisubrl
in
fnstsw
sub
xorb
in
xchg
shrb
sbb
push
fcmove
push
addr16
mov
shll
aas
enter
out
dec
xchg
popa
std
scas
push
sbb
repz
inc
je
frstor
aad
push
loope
aam
cs
jecxz
xchg
fistpll
cs
push
and
mov
xlat
fnsave
and
adc
and
sub
pop
subb
incb
dec
sub
add
fcomps
inc
cmp
add
and
adc
xor
enter
inc
xor
inc
xchg
jecxz
cmp
js
or
jge
push
inc
jmp
ss
std
sub
test
mov
push
daa
stc
push
mov
jbe
sbb
cmpsb
dec
cltd
sub
xchg
mov
fisttps
iret
movsb
xor
cli
popa
sahf
cmp
push
mov
ss
int3
cmp
or
pop
ljmp
lock
push
xor
mov
fnstenv
rclb
pop
sub
xor
sub
jmp
lock
cwtl
daa
stos
outsb
test
inc
movsl
ret
xchg
fistps
cmpl
out
sbb
adcb
push
pop
mov
jle
cs
ss
rclb
and
cmp
cmp
lahf
mov
les
mov
outsl
jbe
popa
daa
cld
nop
repnz
cmp
fdivrs
ds
xchg
cltd
push
lods
sbb
cld
push
flds
fldl
fsub
mov
imul
jecxz
mov
cmpsb
clc
sub
fstp
popa
xchg
xchg
outsb
bound
leave
push
outsb
in
test
mov
fbld
not
xorb
sub
std
push
out
cmp
in
dec
xor
fdiv
test
cmc
stos
imul
lds
fbld
ret
cmpsb
insb
xlat
cmp
stc
adc
out
jne
sahf
cli
jp
jmp
pop
cld
mov
shrl
ret
cmpsb
mov
jns
push
mov
add
pushf
push
add
fadd
xchg
push
ret
sbb
jne
setns
adc
fwait
xor
or
pushf
outsl
pop
stos
roll
sub
stos
ja
mov
cld
dec
add
loop
cmp
push
das
jecxz
xor
push
mov
cwtl
iret
or
push
stos
lcall
inc
sbb
std
es
sub
les
push
push
test
lret
mov
xor
lds
add
dec
add
add
cld
add
jle
sub
mov
or
and
in
mov
jb
pop
loop
lea
push
and
push
cld
push
jge
cwtl
push
fdiv
cmp
pop
mov
add
sbb
jb
mov
mov
les
lret
mov
mov
pop
int
xchg
negb
int3
mov
shll
dec
dec
pop
es
je
subb
lret
in
mov
xchg
pop
xor
psrld
adc
call
mov
insl
sub
xchg
dec
shlb
mov
cmp
push
mov
out
repnz
push
cmp
push
mov
xor
sbb
xchg
mov
es
and
and
loop
imul
jo
aam
outsl
bound
clc
rolb
mov
lods
or
gs
jb
clc
xchg
lret
in
cld
movsl
loop
or
jb
inc
ret
fwait
rcl
aam
dec
call
mov
sahf
sub
pop
jmp
sub
sub
addl
jne
or
xchg
mov
lods
cmpb
jne
out
mov
int
rsm
insl
inc
ret
clc
insb
sub
es
sbb
testb
jp
add
dec
test
fsubr
cmc
or
lret
and
mov
xor
and
sbb
fidivrs
ss
adc
lahf
or
sbb
lock
repnz
jmp
in
jmp
jbe
add
lds
xchg
adcl
adc
stos
mov
push
out
shrb
stos
das
pop
pop
add
dec
loop
xlat
mov
dec
rcll
or
mov
sub
insl
cmp
test
jo
and
arpl
out
pop
mov
dec
jge
lcall
sarl
or
sahf
pop
fcmovu
jns
in
inc
pop
mov
sahf
mov
cltd
pushf
into
arpl
jge
jmp
mov
lret
and
mov
aas
mov
repz
lods
out
std
lods
xchg
ret
fidivrs
inc
dec
mov
call
add
faddp
xchg
adc
jb
pop
shll
insb
enter
jne
add
daa
lret
stc
cwtl
sub
mov
mov
adc
jl
adc
sub
and
orl
cmp
shll
or
and
or
mov
in
fildl
popa
jns
mov
push
popa
ja
pop
cwtl
pop
daa
loopne
sub
subl
adc
jae
arpl
jne
gs
mov
movsl
repz
ret
in
adc
add
push
jne
gs
mov
movsl
repz
ret
in
adc
add
push
jne
gs
mov
movsb
repz
ret
in
adc
add
push
jne
gs
mov
rolb
cmp
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
mov
jl
inc
std
mov
dec
and
add
bound
inc
sub
cmp
int3
mov
cld
lock
adc
lods
ror
dec
and
push
jl
arpl
push
insb
inc
cmp
pop
mov
jmp
inc
shlb
js
jo
pcmpeqw
pop
cmp
int3
iret
mov
cltd
imulb
adc
cltd
scas
pop
cmp
lock
xchg
mov
bound
inc
pop
int
mov
inc
fimull
push
mov
or
add
insb
and
mov
fldenv
shlb
fbld
or
aaa
addr16
sub
icebp
jo
pushf
sbb
in
inc
sub
or
int3
pop
cld
movsb
inc
jl
roll
and
or
inc
outsl
loopne
sub
jns
test
fstps
pop
out
adc
pusha
sbb
pop
or
popa
xlat
std
jg
bswap
loop
and
enter
lods
xor
xchg
push
fs
sub
mov
nop
push
lock
shlb
cmp
lret
or
push
sub
push
fcompl
hlt
rolb
xor
dec
sbb
fs
and
pop
fisttps
lock
xchg
shlb
inc
or
or
jo
or
dec
and
aad
int3
fwait
cld
mov
loopne
shrb
pop
adc
jo
pusha
sbb
sub
cmp
int3
mov
cld
lock
pushf
shrb
pop
adc
jo
pusha
sbb
sub
cmp
int3
or
dec
repz
add
xor
or
or
mov
test
cmpsl
cmp
mov
in
jg
or
inc
jns
notl
pop
rorl
jl
dec
mov
insl
das
pop
pop
cmc
xchg
mov
in
fsubs
and
cmc
pop
adc
testl
adc
out
dec
cmp
xchg
or
sub
test
push
popf
push
popa
stos
jae
scas
cs
mov
stos
dec
in
fcmovnb
out
pushf
or
xchg
les
xchg
aas
adc
jae
mov
aad
jno
bound
cli
and
outsl
pop
sti
lahf
inc
mov
arpl
ljmp
and
push
sbb
insl
jne
lea
cmp
inc
or
stos
mov
xor
outsb
mov
fiadds
push
cld
and
outsb
cmp
fnstenv
addb
and
sub
cwtl
dec
dec
xlat
pop
push
imul
clc
insb
add
cmc
lods
dec
jmp
and
aaa
push
pushf
mov
pop
test
popf
bound
icebp
mov
cmp
idivb
mov
mov
stos
subb
les
jns
sbb
push
jmp
dec
add
xlat
inc
inc
movsb
jg
lods
rcr
dec
mov
shlb
sbb
xchg
xchg
roll
inc
pop
jle
jns
std
xchg
call
push
or
and
ljmp
sub
insb
loopne
das
out
adc
and
pop
sbb
cmp
xchg
jle
or
out
dec
lea
add
jmp
lahf
xor
incl
movups
jmp
mov
xchg
ret
push
lahf
cltd
cmp
jl
pop
xlat
mov
push
cld
lahf
gs
bound
ja
cs
jne
out
cmp
jmp
push
mov
push
inc
test
clc
mov
xchg
xchg
and
jnp
in
adc
outsl
incb
sbb
mov
stos
mov
jnp
pop
push
dec
shlb
iret
repnz
xor
push
gs
push
dec
mov
xor
inc
pop
fstl
fisubs
mov
inc
fwait
andl
cmp
test
push
ret
testb
lock
insl
jbe
push
loop
jne
pop
imul
test
pop
sahf
in
in
or
movsl
inc
fwait
jmp
ja
aad
or
pop
out
inc
push
inc
mov
push
fwait
pop
rcr
neg
jl
and
pop
clc
and
dec
int
pushf
and
add
sbb
mov
mov
pop
nop
fwait
push
popa
cmp
jne
mov
gs
jmp
loopne
scas
enter
xchg
mov
or
aad
movsl
lds
adc
xchg
mov
add
shrb
cmp
out
sbb
jo
popf
ss
int3
add
mov
ficoml
mov
or
fdivrs
push
das
es
out
out
mov
fldcw
inc
push
int
lahf
push
lods
xorb
pop
mov
gs
shll
cmp
test
inc
sub
mov
dec
addr16
pop
movsb
jmp
sub
and
xor
popf
lods
movsb
leave
lods
loopne
loope
psubb
jne
jns
aaa
pop
enter
push
cmp
sbb
mov
mov
lock
popf
out
ss
loope
imul
sti
inc
push
or
jae
sbb
loopne
inc
add
in
stos
pop
notl
xchg
es
mov
lret
pusha
mov
mov
push
leave
loop
out
ret
sbb
std
sbb
jo
push
pop
fistl
sub
bound
cmp
lods
fsubl
or
pop
xor
adc
lods
fildl
jo
dec
scas
jmp
lahf
or
jns
rol
sub
nop
out
jg
idivl
fcomp
pop
mov
ret
ret
inc
shll
and
sub
shll
pop
dec
in
xor
sbb
and
push
mov
hlt
mov
xchg
add
inc
das
cmp
pop
in
filds
mov
imul
adc
jmp
and
sub
ret
std
sub
mov
sarl
cmpsl
mov
iret
dec
xor
mov
int
xchg
stc
and
ffreep
scas
and
sub
hlt
fisttpll
jb
mov
lcall
icebp
js
xchg
mov
movsb
outsb
in
fldcw
shl
dec
popf
xor
mov
call
fadds
sbb
sbb
dec
push
pop
mov
xlat
sahf
and
into
sti
xorb
or
or
and
idivl
cmpsl
lock
dec
fmul
in
fadds
int3
mov
inc
or
test
stos
loope
sub
mov
ret
ljmp
loopne
out
jne
push
jecxz
or
xlat
mov
int3
outsl
mov
xor
and
enter
adc
pop
mov
or
xlat
jg
out
push
add
adc
fisttpl
jmp
popa
xor
aas
nop
cmp
adc
imul
outsb
jmp
xor
and
mov
fiaddl
cmp
test
sbb
mov
inc
pop
enter
push
xlat
fwait
lds
and
pop
imul
ljmp
stc
cmpsl
iret
sbbb
int3
jb
add
xlat
fmull
sbb
push
insb
mov
sub
testl
mov
cltd
dec
push
xchg
add
inc
sub
sbb
lret
add
or
sub
jo
ret
push
aas
or
hlt
into
mov
aad
cmp
jb
test
dec
cmp
rcrl
psubsb
sbbb
dec
test
fdivrp
das
iret
pop
sbb
ficoml
jne
ja
xor
scas
out
cmpsb
push
adc
sarl
stos
fisubrs
les
pop
or
jmp
push
mov
or
push
xchg
mov
mov
loop
sbb
xchg
add
shrl
fcom
mov
sbb
hlt
dec
mov
xchg
push
negb
sub
cld
mov
jg
mov
inc
jb
nop
mov
cld
scas
cs
adc
jae
fstl
outsl
sub
push
pop
xlat
or
dec
pop
push
push
ss
into
in
mov
mov
mov
push
and
pushf
bnd
movsb
jnp
test
fcomi
out
inc
es
adc
test
popf
dec
sbb
lahf
mov
pop
in
mov
lcall
fsubrp
pop
aas
jp
inc
cmpsl
adcl
jg
cwtl
inc
mov
leave
inc
pop
xchg
or
lock
mov
sbb
sbb
push
rol
mov
xchg
jnp
adc
lret
test
std
or
pop
aam
push
or
cmpsb
cmp
enter
arpl
imul
rorb
xor
fs
add
cmpl
sub
aaa
mov
imul
pusha
adc
inc
push
and
or
mov
fnsetpm(287
push
xlat
or
inc
jge
addr16
mov
or
leave
cmp
lret
mov
or
das
ret
leave
lret
jbe
es
dec
mov
add
xor
jecxz
outsl
out
mov
push
cmp
bound
or
push
mulb
aaa
fidivrs
hlt
push
pop
xchg
xor
push
mov
push
mov
pop
mov
xchg
inc
inc
dec
shl
clc
xchg
icebp
xlat
pop
fistpl
mov
add
cli
out
push
mov
shrb
sub
in
push
stc
aaa
jmp
mov
fsub
jmp
mov
cwtl
or
xor
pushf
sbb
add
lcall
mov
in
outsl
pop
lea
jmp
jo
in
stos
lock
hlt
dec
pop
addr16
xchg
jecxz
ljmp
lret
jecxz
mov
inc
jecxz
sub
and
in
addb
cltd
imul
lahf
adc
xchg
test
or
pusha
mov
outsb
clc
daa
cmc
or
xchg
and
ret
xchg
add
jae
imul
enter
fidivrs
ret
push
imul
cmc
mov
pop
adc
dec
out
call
in
rorl
cmpsb
mov
and
cmc
fisttps
in
insl
rolb
outsb
iret
fwait
inc
popa
idivb
mov
enter
inc
stos
shll
data16
rcll
push
rcrb
pop
ror
cmp
xchg
cmc
cmp
aad
test
pop
add
ljmp
inc
mov
mov
les
xchg
inc
les
pop
pop
mov
pop
lds
inc
push
and
xchg
mov
fs
jb
inc
lret
loope
and
sub
adc
mov
out
sub
clc
psllw
in
push
sub
scas
sti
popf
mov
sub
xchg
insl
sub
sub
adc
mov
mov
cmp
xor
push
lret
sbb
pop
dec
sahf
push
pop
sbb
inc
sbbl
lods
test
outsb
cmp
pop
xor
mov
fs
sahf
xchg
xchg
fmuls
lea
fsubrs
in
mov
jne
or
xchg
dec
in
dec
lds
cltd
add
xchg
dec
pop
scas
xchg
adc
shll
sub
pop
ss
and
sti
xchg
andb
test
cmp
dec
push
and
fwait
loop
inc
ljmp
mov
xor
fcomps
pop
inc
or
add
xchg
push
std
cli
dec
and
pop
ret
pop
std
adc
inc
and
sahf
xor
mov
xlat
lods
jmp
mov
pop
je
movsl
jle
nop
lahf
inc
pop
cmp
and
in
sub
and
lea
xor
aad
add
sub
imul
sub
call
add
movsb
ja
test
lea
fldlg2
xor
mov
cmpb
pop
fists
nop
push
push
mov
out
sub
cmpsl
stos
sub
jbe
fdivrp
loope
sub
cld
cltd
lahf
and
pop
fwait
add
sti
into
notb
mov
push
and
imull
jl
mov
fldt
cmp
daa
stc
jp
cmp
push
arpl
cmpsl
jae
inc
mov
mov
insb
enter
les
out
sti
test
cs
aaa
aad
fstl
stos
push
adc
sub
into
pop
scas
push
stos
gs
outsl
push
lea
push
mov
and
and
scas
rcl
cmpsb
testb
push
dec
repnz
push
insl
stos
cmpsb
mov
push
scas
pop
repz
sub
mov
loop
xchg
hlt
jo
dec
add
inc
scas
scas
out
icebp
ret
jecxz
popf
xor
pop
cs
notb
jmp
pop
and
adc
dec
ret
xchg
add
pop
jb
sbb
call
incb
mov
sub
pop
repnz
xor
faddp
cmp
sub
int
dec
push
shll
aam
cwtl
cli
sbb
ret
push
sbbb
fstpt
rcl
mov
sbb
dec
or
popf
std
test
jne
icebp
jnp
add
jo
inc
xor
aam
sub
push
movsl
inc
adc
xor
jle
in
push
in
sti
outsl
inc
das
inc
jbe
mov
fisttpl
push
mov
xchg
stos
inc
rcrb
cs
push
add
and
jle
push
bound
jle
iretw
xor
lahf
and
pop
jo
fstpl
aaa
pop
cmpsb
mov
shll
push
sbb
outsl
scas
cmp
mov
sub
or
out
dec
out
nop
loopne
or
clc
adc
popf
scas
ret
add
popa
pop
insl
in
in
jl
fdivl
repz
sub
in
aaa
sub
mov
call
push
and
mov
inc
cwtl
jae
xor
imul
aam
aad
pushf
test
fmull
scas
cmp
push
lds
push
adc
cwtl
dec
push
bound
fistpll
call
in
lods
xchg
adc
pushf
inc
xor
sbb
orl
mov
inc
sahf
fiadds
push
jb
icebp
add
pop
jmp
mov
into
sar
mov
sahf
add
and
inc
rcl
js
pop
mov
mov
xor
mov
xor
mov
mov
pop
test
push
orl
dec
mov
jne
sbb
mov
js
xchg
into
out
xchg
push
sub
in
test
inc
xchg
fisubs
sub
push
test
xchg
das
shlb
dec
cmp
stos
lret
push
mov
sti
outsb
dec
into
data16
sub
mov
adc
mov
std
mov
adc
inc
lods
js
imul
sbb
sbb
sub
loopne
jnp
xor
add
sub
xlat
mov
js
mov
cmp
inc
jl
adc
lea
fmuls
scas
inc
sbb
mov
into
or
imul
hlt
out
jae
arpl
mov
enter
and
sar
into
mov
xor
sbbl
sub
xor
je
mov
push
orl
push
push
in
mov
enter
stos
int
mov
nop
in
or
push
out
or
push
cs
dec
xchg
fidivl
sub
add
jge
jmp
or
mov
mov
mov
inc
loop
adc
nop
jbe
mov
dec
cmp
jecxz
cmp
mov
shlb
repnz
ljmp
cmpsb
outsl
jbe
inc
lahf
movsl
incl
ficoms
xor
dec
pop
adc
out
in
stos
mov
mov
cmp
sub
mov
sub
sub
loopne
push
mov
sbb
lahf
mov
adc
pop
nop
mov
push
xlat
push
outsl
mov
ficompl
das
cmp
les
cmp
sub
nop
sub
sbb
iret
mov
xor
sarl
mov
sarl
cmc
out
popf
repnz
cli
mov
jb
aaa
push
leave
or
push
mov
push
lret
cli
rorl
lcall
iret
std
cltd
xor
push
pop
xchg
aaa
fdivs
xchg
call
mov
sbb
mov
repnz
pushf
mov
mov
pop
xor
xchg
ljmp
sbb
cmp
stc
test
into
adc
fisttps
adc
stos
outsb
or
adc
stos
add
out
out
ret
fs
in
hlt
jp
add
cmpsb
shrb
sub
sbb
loopne
pop
in
xor
pop
jecxz
or
fldl
xchg
or
mov
aas
cmp
loope
jle
js
lods
jge
cli
sbb
adc
and
adc
jb
cmp
or
mov
or
mov
mov
add
incl
mov
les
in
mov
jle
scas
inc
xor
ret
cli
addb
jmp
inc
push
push
adc
pop
je
mov
and
notb
mov
aad
subl
xchg
xchg
repnz
lods
and
pop
enter
and
mull
add
jl
aad
outsb
xor
icebp
dec
enter
dec
stc
fadds
leave
sbb
sbb
jle
adc
and
nop
loope
xchg
add
push
jns
lret
enter
and
arpl
lret
movsbl
jge
jbe
gs
push
insb
or
cltd
fisubrs
fnstenv
xchg
inc
inc
lret
pop
cmp
xchg
scas
cmpsb
sub
ficomps
in
add
out
sbb
cltd
rorl
jle
pop
mov
sahf
inc
std
jbe
fs
xor
mov
sbb
jae
push
cmp
or
jno
xchg
dec
push
ror
das
enter
push
lods
cmp
add
pop
push
int
inc
ret
aam
inc
mov
xor
sub
pop
push
rcrb
loopne
leave
loop
lods
xor
loopne
fwait
loop
mov
rorb
cmpsb
aam
mov
into
cmc
int3
mov
sbb
pop
pop
iret
scas
and
fmul
loopne
cmc
sub
inc
decl
pusha
in
lds
dec
ja
mov
addr16
ds
pop
mov
add
inc
jmp
inc
or
pop
jge
int3
cmp
jge
popf
outsb
aas
sbb
not
or
mov
sub
in
movsl
xor
or
sbb
pop
sub
add
add
jp
mov
xchg
push
clc
xlat
dec
out
xchg
cmp
lea
inc
jp
addl
mov
lcall
scas
sti
inc
loope
xor
cmp
mov
push
cmp
lret
in
xchg
xchg
movsb
add
xor
ljmp
inc
fsubs
pop
aas
je
push
jne
adc
lcall
lahf
movsl
jmp
cs
out
cmp
in
sbb
imul
mov
push
stos
in
popa
add
fucom
mov
ds
adc
cmp
addl
mov
dec
push
jbe
pop
pop
mov
fwait
aam
pop
es
pop
sbb
enter
lods
push
iret
int3
imul
aam
in
sbb
stc
inc
jae
push
out
call
pushf
insl
inc
xchg
jge
lret
or
push
lea
inc
rolb
dec
pop
push
ja
mov
add
adc
movsl
adc
scas
adc
rdtsc
dec
push
repnz
out
out
or
mov
dec
in
mov
test
cli
sbbb
push
inc
jmp
mov
mov
std
jl
push
jl
xchg
dec
popa
sub
shl
adc
or
xor
dec
sbb
repz
cmp
dec
or
mov
jns
or
sbb
cltd
adc
imul
or
sub
dec
mov
adc
inc
js
sahf
and
dec
mov
xor
sub
mul
pop
idivl
rcl
shrl
outsl
or
inc
fldl
in
cmp
cwtl
call
cmp
dec
fs
hlt
movsl
push
and
xor
pop
push
sbb
sbb
mov
mov
loop
rolb
lcall
jmp
xchg
pop
mov
jne
dec
push
popf
pop
gs
in
pop
iret
sbb
dec
cs
push
pop
adc
cmp
fstpt
mov
add
add
incb
adc
xchg
pop
lods
add
xchg
loopne
xchg
bound
push
fsubrs
push
fwait
loop
dec
inc
mov
inc
mov
cmp
mov
or
cmp
xchg
xchg
sub
sbb
and
fcmovu
push
loop
mov
in
fldcw
xor
test
loopne
imul
out
mov
xchg
in
dec
repnz
inc
sub
mov
nop
negl
jg
dec
jbe
add
int
cmpsl
cmpsl
outsb
fmul
mov
xor
out
sbb
xchg
sbb
je
jg
movsb
cmpb
aaa
cwtl
testl
iret
dec
fdivr
pop
cwtl
cmpsl
loop
pop
fwait
adc
and
insl
mov
jge
xchg
xor
jp
loopne
jne
inc
xlat
sbb
inc
fildl
andl
add
dec
push
xor
xchg
in
movsl
jecxz
xchg
push
enter
fcompl
sbb
outsb
std
cmp
lods
daa
pop
sahf
dec
rclb
xor
int
cmp
out
scas
mov
outsl
mov
add
sahf
cmpsl
add
dec
mov
pop
add
std
and
mov
lahf
xchg
lret
xchg
jecxz
dec
pop
pop
sub
add
add
jbe
dec
push
adc
sbb
lahf
fmull
mov
out
scas
inc
sahf
sub
loop
insl
inc
fisubrs
xchg
std
out
inc
shlb
hlt
cmp
into
nop
cmp
ss
data16
xchg
xchg
jae
inc
adc
jne
enter
dec
mov
js
mov
sbb
stc
mov
mov
inc
jne
xchg
ljmp
jge
out
mov
or
pop
test
inc
mov
pop
mov
sub
lods
fld
lcall
mov
sbb
inc
push
popa
dec
popa
add
xchg
or
stos
test
repz
pop
das
mov
or
mov
call
lods
mov
push
xchg
ret
push
mov
cmp
js
lea
add
mov
shll
sbb
jecxz
mov
in
arpl
or
fidivrl
xchg
ret
lock
add
cmpsb
pop
jecxz
push
jg
jecxz
rorl
add
movsb
or
sub
sbb
enter
in
cmp
sub
push
addr16
xor
icebp
push
movsb
lcall
dec
jno
jns
add
mov
add
je
rcrb
push
mov
dec
mov
lahf
loope
jmp
icebp
pop
in
les
mov
aam
andl
cwtl
add
subl
lcall
xchg
fcompl
mov
pushf
shrb
pop
adc
jo
pusha
sbb
sub
cmp
int3
mov
cld
lock
pushf
shrb
pop
adc
jo
pusha
sbb
sub
cmp
int3
mov
cld
lock
xor
lods
sarb
add
popa
sbb
or
cmp
int3
mov
std
repnz
pushf
push
sub
mov
mov
test
jecxz
sarl
push
sub
sub
inc
push
push
les
sahf
test
mov
cmp
in
cmc
insb
add
cmp
push
test
mov
jmp
aad
in
cmc
mov
ljmp
jne
sbb
in
test
mov
xchg
movsb
xchg
inc
push
push
sub
push
dec
dec
pop
lods
mov
push
mov
push
stos
push
out
pop
lea
cld
mov
test
mov
fsubp
lcall
sub
rolb
imulb
dec
pop
jl
lds
xchg
dec
fiadds
dec
fdivs
popf
sub
xor
xor
add
aam
mov
pop
gs
movsl
js
mov
cwtl
jne
pop
inc
mov
rcr
pop
jmp
rcll
lret
rclb
xrelease
inc
std
inc
lea
hlt
js
cli
test
sub
in
or
je
pushf
lds
jae
filds
mov
push
mov
sub
xor
push
test
cmp
cmp
cmp
std
clc
popa
add
inc
pop
daa
loopne
cmp
js
mov
lret
in
add
mov
xchg
popf
pushf
inc
inc
jge
pop
push
pop
pop
and
cmp
inc
out
in
loopne
test
aad
cmpb
dec
dec
imul
pop
push
push
test
mov
call
add
cmp
push
test
mov
call
add
clc
fildl
int3
fimull
lret
lret
xor
and
cmp
xor
inc
pop
push
arpl
xor
shll
test
jae
sbb
das
fdivrl
adc
inc
dec
mov
mov
sbb
jmp
lret
pusha
sub
jo
mov
jno
jb
mov
push
xor
inc
xchg
xchg
and
mov
lods
adc
xlat
jnp
cmpsl
leave
aaa
nop
outsl
add
push
aad
adc
and
dec
adc
lds
mov
xchg
lret
fsubrs
sbb
es
adc
pop
or
insb
xor
ds
mov
mov
and
data16
shll
pop
and
xchg
cmp
sbb
jo
addr16
adc
or
mov
mov
imul
mov
push
aam
sbb
movsb
pushl
inc
loop
test
rcll
and
je
inc
or
xor
push
mov
jae
sub
insb
imul
mov
mov
mov
dec
xchg
call
lahf
inc
or
push
xor
adc
jnp
adc
xlat
xlat
popa
rcrb
lcall
and
cwtl
ja
pop
jnp
fidivl
mov
ret
aaa
cld
inc
insb
add
jno
lods
repz
xchg
push
inc
xor
inc
jnp
push
lret
dec
jae
pop
leave
cmp
loope
xchg
mov
push
les
cmp
dec
xchg
gs
lcall
inc
jmp
mov
push
pop
loope
lds
pop
pop
push
jnp
cwtl
loope
stos
in
pop
outsl
fimull
hlt
mov
aam
in
jbe
popf
xchg
iret
test
sbbl
leave
fadds
pop
xchg
lret
and
push
imul
in
sbb
addb
in
lods
xor
insl
mov
sbb
push
sub
test
adc
dec
mov
mov
test
inc
sti
loopne
outsb
daa
adc
out
xorl
push
stos
test
mul
shlb
insl
sub
adc
push
jp
sbbl
push
push
leave
xor
cmpsl
cmp
jb
push
cmp
outsb
jmp
pop
das
testl
or
aaa
mov
mov
mov
sbb
xchg
pop
add
repnz
inc
hlt
sub
mov
stos
push
outsb
daa
xchg
mov
xchg
loopne
test
cmp
es
xor
test
sub
jge
out
aad
in
mov
sbb
repz
jp
sahf
jp
insl
adc
fistl
out
push
or
jl
dec
jp
dec
pop
shrb
ss
lahf
fldenv
gs
jge,pt
addr16
jp
dec
sub
xchg
jns
dec
lods
int
xchg
cmp
xor
andl
mov
outsb
ret
in
or
push
sti
xchg
ja
in
cli
push
xchg
arpl
jecxz
adc
xor
iret
mov
test
cmp
movsb
pop
mov
dec
inc
push
jb
and
das
jns
mulb
aas
xchg
add
xlat
push
cmc
pop
rolb
push
sbb
push
and
jno
xor
out
jns
scas
xchg
leave
xor
push
ds
xchg
jb
push
cmpsb
std
xchg
fldlg2
add
adc
cli
test
xchg
pop
jae
or
sahf
imul
pop
adc
imul
and
movsl
cli
cmp
add
insb
push
push
xor
mov
out
andb
pop
inc
data16
push
push
jae
gs
stc
fsubl
cmp
push
dec
cwtl
and
jle
faddl
sbb
jns
or
push
sbb
sti
pop
out
cmp
stos
mov
js
mov
lahf
jno
stos
jmp
ficoms
mov
pop
out
jb
push
mov
pop
inc
add
cmpsb
flds
fbstp
fstpt
xlat
add
pop
je
mov
outsb
insb
loopne
fs
mov
cmp
call
or
xor
or
repnz
cmpsl
cmp
out
xlat
xchg
mov
adc
out
jo
cmp
push
dec
ss
push
adcb
mov
xchg
fbstp
decb
test
sahf
dec
and
mov
adc
or
push
js
scas
arpl
mov
enter
ret
mov
lods
inc
test
push
mov
sbb
out
inc
sbb
jb
arpl
mov
lcall
les
push
xor
cmp
sub
sahf
jbe
mov
mov
gs
lea
nop
enter
cli
push
stc
test
dec
sbb
pop
es
xlat
mov
adc
push
pop
xchg
mov
rorb
out
imul
cmp
jg
mov
fwait
enter
sbb
incb
fs
cmovo
movsb
inc
bound
orl
es
xor
inc
xchg
xlat
into
fmuls
cmc
jo
sbb
cltd
into
dec
sub
in
pusha
cmp
push
test
push
mov
dec
jno
pop
arpl
pop
mov
mov
jbe
in
xchg
movl
ffreep
inc
mov
ja
and
cmp
adc
dec
daa
cmp
dec
rcrb
cmp
fwait
aaa
cmpsl
jge
shl
pop
jno
xchg
loope
cs
push
daa
push
adc
cmp
lds
inc
jo
pop
lcall
add
lcall
out
inc
mov
sahf
daa
in
daa
in
sbb
lahf
adc
je
stc
enter
dec
data16
movsb
iret
and
flds
idivb
test
dec
or
cmc
decl
mov
cmp
dec
mov
insl
mov
cltd
in
fisttps
xor
out
int
push
sub
iret
iret
outsl
jb
or
mov
push
mov
xchg
test
inc
cmp
or
outsb
aaa
in
filds
adc
out
pop
aas
mov
imul
mov
pop
dec
push
jle
in
push
jb
sub
lea
mov
cmp
and
enter
mov
lcall
call
fs
pop
lahf
cmp
pop
push
sbb
jbe
xchg
adc
movsl
std
dec
lock
inc
sub
ds
test
xchg
mov
pop
adc
mov
pop
mov
and
or
stos
call
fiadds
adc
out
stos
call
je
xor
loopne
dec
inc
imul
aaa
enter
jae
outsb
dec
mulb
dec
xchg
cmc
ljmp
inc
jg
leave
adc
jae
pop
stos
scas
push
mov
cmp
mov
add
xorl
jb
test
loop
hlt
cmpsb
fldenv
loope
and
mov
mov
adc
mov
pop
dec
insl
dec
imul
je
adc
pop
mov
jno
cltd
out
cmp
iret
jb
jne
jecxz
mov
test
mov
mov
and
pop
rep
xor
pop
xor
jmp
sbb
rolb
and
inc
push
xchg
das
pop
push
daa
or
and
popf
out
rcl
or
mov
xor
and
in
push
push
xchg
jg
int3
fs
cmp
loopne
add
das
xorl
or
loop
out
ja
dec
popf
sbb
mov
and
and
jno
int3
lcall
sub
or
jecxz
in
xchg
call
jge
loope
fs
pop
dec
sar
into
mov
std
rcll
and
xor
fisubs
xchg
inc
shrl
roll
cmpsb
daa
scas
or
or
pop
mov
pushf
ja
std
add
into
mov
push
pop
sbb
sub
xchg
dec
in
sbb
mov
sub
inc
adc
sub
insl
loopne
and
movsl
dec
aad
scas
stos
sub
push
std
jecxz
jle
stos
sar
cwtl
push
out
adc
xchg
push
cli
xor
loope
adc
xlat
outsl
jp
call
jp
ja
add
adc
adc
into
scas
sbb
pop
inc
sahf
stos
addl
outsl
cmpsb
jo
lock
push
call
mov
xchg
mov
cli
ja
cmpsl
lds
ret
test
or
jle
int3
mov
ror
add
daa
or
popa
das
in
xor
xchg
or
pop
adcb
inc
xor
and
fdivrl
test
das
xor
ljmp
call
nop
lock
add
mov
jnp
sub
mov
fstps
dec
cs
mov
adc
and
jne
gs
lret
sub
inc
fcmovbe
shlb
dec
fisttpll
sti
mov
xchg
addl
into
fisubrs
push
dec
jo
xchg
fadds
fs
cmp
and
test
in
das
cli
adc
sub
dec
pop
dec
out
mov
cmp
sub
or
jbe
subl
fsubr
shlb
andl
xchg
mov
xchg
jg
bnd
cmovno
cmp
ds
call
data16
aad
lds
aad
pop
lea
shr
push
hlt
and
inc
imul
inc
dec
xchg
cmp
cltd
add
fidivrs
jmp
jns
js
mov
pop
stos
stc
inc
shr
ret
icebp
mov
or
pop
syscall
imulb
fdivrp
cli
cmp
inc
jmp
push
push
or
sub
lods
add
cs
sub
jae
lcall
aas
xchg
int
fiaddl
dec
mov
xchg
lea
xor
pop
mov
addb
mov
mov
xchg
push
push
inc
fimull
bound
xchg
pop
xchg
push
arpl
mov
inc
iret
pop
jb
int
push
fisubs
jne
jg
pop
and
test
jge
into
push
xor
popf
and
stc
cmp
adc
add
outsb
inc
jns
push
mov
xlat
adc
add
mov
sub
test
out
ret
out
sahf
sahf
dec
mul
ja
jp
inc
test
pop
sbb
dec
inc
ret
mov
in
xchg
xor
in
jnp
cmp
imul
pop
or
lsl
sub
mov
adc
mov
xchg
sub
subb
jle
les
push
push
push
or
jne
dec
cmp
and
add
xchg
mov
sbb
loope
pop
cld
repnz
pop
insb
adc
pop
push
sti
push
cwtl
and
stos
xchg
hlt
adc
xchg
xor
push
pop
popa
iret
jnp
mov
cmpl
dec
inc
call
push
xor
mov
sbb
sub
das
xor
sbb
scas
std
jg
mov
mov
imul
cmp
dec
xorl
xchg
in
outsl
mov
xchg
jle
loope
mov
mov
fwait
mov
jne
pop
adc
mov
mov
xchg
or
inc
lahf
adc
fstpl
lea
cmp
dec
push
xor
jb
mov
jnp
mov
aam
scas
sbb
lock
xor
dec
fwait
andb
jg
xchg
loop
insl
andb
pop
sbb
push
mov
out
std
xor
adc
fcoms
adc
jle
ss
mov
lods
mov
leave
jae
cli
orl
or
movsb
xor
mov
stos
cmp
xchg
lret
in
gs
data16
jl
fisttps
cld
jle
je
dec
pop
mov
jge
testb
shll
xchg
cld
lock
mov
imul
and
push
adc
into
pop
sbb
pop
popf
pop
mov
mov
jl
iret
outsl
flds
add
imul
adc
xor
sub
push
push
cmp
hlt
cmpsb
add
repz
dec
int3
mov
push
jae
xchg
popa
inc
jmp
es
cmpsl
cmp
hlt
push
mov
hlt
fstps
cmp
cld
sbb
dec
faddl
clc
bound
pushf
pop
inc
aad
dec
jbe
adc
lds
sub
push
stos
es
fadds
push
dec
fwait
dec
test
out
icebp
aas
call
fld
stos
fisubl
sbb
mov
xchg
add
call
sbb
and
cmp
sub
lret
xor
add
cmp
jbe
sbb
pushf
sti
insl
jl
xor
and
mov
ja
sub
scas
cltd
push
insb
ljmp
icebp
xchg
cmc
add
fists
nop
aaa
mov
jbe
mov
pop
call
cwtl
stos
cmpsb
cwtl
cs
inc
aam
bound
jle
repnz
push
jl
push
add
push
out
and
xchg
push
inc
inc
add
sti
cli
call
dec
jecxz
pop
mov
ljmp
push
jp
jns
jle
and
nop
mov
rol
push
fwait
mov
push
and
push
pop
fs
mov
jbe
lret
fdivs
int3
mov
xchg
sbb
mov
mov
jmp
stos
lahf
fistpl
subl
xchg
xchg
xchg
mov
push
pusha
cmp
test
inc
mov
addr16
jbe
jl
or
sub
clc
mov
outsl
daa
push
inc
push
out
and
repnz
popa
hlt
and
movb
mov
fisttpl
loope
in
int
pop
loop
add
push
nop
pmaddwd
xchg
dec
imul
sub
jo
std
mov
scas
hlt
jge
adc
add
dec
adc
sub
sbb
ss
lock
mov
arpl
lea
xchg
cmp
pop
mov
mov
ljmp
mov
imul
stos
mov
dec
push
hlt
popa
stos
outsl
fwait
aad
cmp
shlb
cs
push
add
in
out
push
mov
mov
mov
and
inc
push
xlat
jge
adc
fiadds
adc
out
fcompl
pushf
mov
bnd
add
fildl
insl
jns
mov
lods
jmp
fisttpl
pop
fsubl
or
rcrb
scas
jo
mov
push
sbb
pop
data16
stc
mov
js
jns
jmp
loop
push
jle
jg
ret
and
xor
outsb
sub
add
sub
in
xchg
sbb
lock
ljmp
xchg
aas
or
outsl
sub
and
mov
add
out
test
jecxz
dec
sub
rclb
dec
xchg
adc
pop
loop
jnp
mov
rcrb
pop
mov
es
clc
inc
sbb
push
jl
sti
or
in
push
and
dec
icebp
mov
iret
loope
mov
xor
pushf
cmp
or
shrl
das
mov
loope
mov
jns
test
push
xor
loope
movsb
movb
add
leave
rorb
data16
xor
outsl
pop
lahf
lock
movsl
dec
pop
mov
inc
mov
push
mov
aas
push
jnp
lahf
jmp
xchg
ss
mov
jmp
popa
add
sbb
jns
jecxz
xor
xchg
mov
sti
lea
daa
jge
jne
and
mov
sahf
cmova
mov
xor
push
arpl
pop
mov
jle
insl
lahf
int3
add
in
sub
mov
ja
push
xor
cltd
shl
iret
imul
add
icebp
and
mov
inc
xchg
out
dec
or
loop
xor
xchg
int
mov
fistps
sub
push
faddp
push
pop
sbb
ret
sub
push
push
mov
lds
test
push
fmull
mov
adc
inc
jg
in
xchg
mov
shlb
dec
ds
insl
jp
pop
loope
lock
inc
dec
test
dec
push
xchg
push
sahf
shl
pop
fdivs
push
daa
pop
aad
mov
fimull
insb
fwait
andl
lahf
out
jecxz
aas
imul
movsb
lcall
sbb
sbb
stc
pop
xchg
icebp
jp
push
xchg
sub
cltd
ja
incb
stc
orl
rcll
movsb
repnz
xchg
hlt
test
pushf
push
push
add
cwtl
push
in
sarb
jns
stos
ret
test
jo
fs
rcl
jo
sub
or
mov
push
into
mov
call
gs
clc
enter
fldcw
aaa
jno
mov
rolb
jno
or
mov
mov
sbb
jnp
les
stos
or
repnz
xlat
inc
lds
mov
movsl
dec
push
sbb
dec
aam
mov
adc
cmpsl
fmull
je
ret
ja
data16
cmp
in
lea
push
adc
inc
int
out
sbb
inc
fstl
or
repz
dec
sub
dec
jno
xor
mov
mov
data16
jle
xchg
dec
in
sbbb
fnstenv
lds
jnp
std
push
imul
aaa
add
and
mov
push
push
int3
jo
shrb
adc
inc
jne
sub
jmp
sub
gs
pmulhw
outsl
push
xchg
cmp
insb
push
pushf
mov
xchg
fisubl
loop
iret
repnz
or
pusha
imul
test
insl
ds
jnp
cmp
lods
test
iret
fistpl
rcr
add
dec
or
sub
pop
jecxz
xor
or
lcall
jmp
in
bound
sbb
cmp
jp
cs
sbb
push
inc
mov
xchg
sar
mov
test
and
mov
inc
jae
xchg
in
add
je
fadd
lds
lods
sbb
js
pop
into
pop
sub
cmp
xchg
test
push
or
jmp
pop
and
mov
mov
aad
into
movb
cmp
jp
mov
push
shrb
js
stos
adc
pop
ret
push
fmull
clc
popa
fcompl
push
lret
cmp
sbb
sbb
xchg
mov
lds
mov
push
stc
mov
in
push
in
mov
daa
mov
test
mov
dec
mov
mov
xchg
and
pop
in
jb
mov
mov
cmp
mov
push
ss
mov
je
out
cmpsl
loopne
dec
pop
jg
and
jnp
repnz
sub
jecxz
xor
stos
je
sub
fsubr
int3
jo
lods
sbb
and
xor
push
into
into
dec
bound
and
sahf
leave
sbb
nop
mov
std
push
add
cmp
enter
scas
and
in
sub
fadd
xor
in
int
mov
mov
jmp
ja
pop
cld
mov
sub
xchg
mov
jmp
xchg
xor
mov
xchg
js
jne
std
jp
out
adc
add
sbb
mov
roll
xchg
dec
push
adc
aas
inc
gs
shr
fs
ficompl
daa
lea
stc
addr16
or
add
mov
and
ss
ss
add
movsb
push
rorb
into
lret
sbb
mov
sbb
cs
jbe
mov
das
jnp
bound
jp
and
xchg
add
sub
mov
xchg
xchg
ret
dec
mov
int
jp
jae
cmc
adc
rcrb
sarb
mov
and
sahf
gs
fistpll
ja
push
xchg
roll
xchg
sub
push
mov
pop
push
pop
iret
jae
cmp
inc
mov
inc
xor
pop
sub
dec
movsb
or
arpl
mov
fstpt
sub
xlat
push
xchg
clc
loope
pop
add
xchg
mov
imul
lea
lds
inc
fistl
or
add
push
sahf
jno
or
jnp
pop
cltd
ljmp
xor
in
aam
popf
cs
sub
mov
mov
enter
test
cs
mov
movsl
test
outsb
jge
mov
mov
les
insb
mov
mov
roll
push
mov
sbb
clc
jnp
fs
pushf
jb
pop
popf
dec
push
jecxz
fisubrl
sbb
mov
dec
mov
popf
xchg
addr16
push
add
adc
mov
and
xor
fimuls
mov
repz
insl
mov
inc
sub
push
aas
inc
popa
in
addr16
xchg
fcoml
adc
or
jge
pop
pop
subl
inc
mov
sti
je
daa
popf
mov
subl
push
sub
cmp
rorb
stc
xchg
jb
leave
inc
fildl
push
inc
xchg
ds
add
lods
js
inc
push
xchg
mov
lahf
iret
add
dec
inc
pop
push
push
test
mov
call
add
cmp
push
test
mov
call
add
sbb
cmp
fadds
ds
test
mov
call
loope
icebp
jb
sbb
inc
dec
push
push
jp
aas
add
push
lods
pop
popf
pop
lea
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
and
ja
or
cmpsl
mov
int
rol
sbb
push
or
add
add
fwait
add
enter
add
aam
sbb
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
popl
inc
add
add
sbb
sub
dec
add
add
add
push
add
or
add
add
add
add
add
pop
add
add
lret
add
or
mov
sti
add
add
add
addl
sti
add
add
add
add
or
mov
or
jbe
enter
push
add
add
add
lcall
add
add
add
add
add
add
insl
add
add
add
sbb
cmp
popf
add
add
add
add
or
or
push
add
add
add
add
add
add
add
add
add
add
sub
xor
pop
add
add
add
add
add
add
add
add
sti
add
add
lods
add
add
add
add
dec
add
add
fwait
add
add
add
add
add
add
insl
add
add
add
and
sti
add
add
or
jmp
add
js
arpl
insl
add
add
fwait
add
add
add
add
mov
add
add
add
sti
add
pop
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
roll
add
popf
add
add
add
add
add
add
add
add
je
pop
add
add
add
or
int3
add
xor
dec
add
mov
add
add
sub
add
sbb
add
add
add
add
add
pop
add
add
add
add
dec
add
addl
imul
add
add
dec
add
add
add
add
add
add
add
aaa
add
cmp
or
sbb
add
add
add
add
add
and
popl
or
addl
outsl
add
popf
add
add
add
add
add
add
add
jno
or
add
dec
add
add
jno
jae
xor
das
add
add
add
add
add
push
add
add
add
add
aam
mov
add
jno
sbb
push
add
add
add
add
add
popf
add
add
popa
add
and
cmp
or
popf
add
add
add
add
add
add
roll
add
xchg
add
add
add
add
jge
add
add
add
push
add
add
add
loop
ret
add
sub
add
add
add
add
add
add
push
add
add
add
add
add
xor
add
add
add
add
add
add
incl
adc
add
add
add
cltd
mov
aam
testl
adc
ficoml
sub
hlt
cmp
lds
jp
adc
adc
pop
sub
cs
mov
loope
adc
mov
xor
movsl
adc
jne
add
and
loope
add
subl
push
mov
inc
dec
rcl
pop
mov
cld
dec
out
xchg
pop
into
mov
mov
jl
mov
outsb
xchg
mov
pop
int
loopne
data16
test
cmpsl
cmpsb
or
hlt
sarb
jnp
sub
rol
xor
std
lock
loop
icebp
shlb
mov
sub
ja
movsb
outsb
in
push
call
mov
bound
cmpsl
repz
mov
xchg
jns
popa
sbb
mov
mov
jbe
dec
insb
ret
and
out
fistl
rclb
or
es
ja
push
adc
aad
lret
lds
mov
addb
hlt
insb
jns
jne
fwait
scas
adc
ds
jnp
ja
repnz
mov
je
pop
pop
movsb
adc
fldcw
dec
dec
insl
xchg
pop
imul
sahf
in
jbe
lret
lea
sub
push
cmp
pop
adc
repz
cmp
sbb
lods
pop
lods
and
dec
xchg
add
sbb
or
aam
xchg
insb
fiadds
in
lock
cmp
popa
shlb
adc
shll
jae
mov
hlt
fcomps
dec
stos
add
xchg
adc
repnz
lods
push
and
movsb
or
add
dec
in
adc
sahf
jp
xchg
pusha
in
jecxz
cmpsl
mov
xchg
jae
fisttpl
je
and
iret
mov
cmp
and
cld
ljmp
fwait
in
cmpsb
xchg
adc
cltd
or
cwtl
xchg
adc
jp
xor
push
add
lds
jno
popf
movsb
es
fwait
pop
aad
or
inc
inc
lcall
jp
pop
mov
scas
int3
nop
into
cmc
test
cmp
push
stos
xor
jne
stos
pop
stc
inc
mov
cs
xor
out
push
hlt
jge
mov
xchg
ss
iret
rcrb
movsb
pop
pop
outsb
pusha
mov
outsb
pcmpeqb
pop
movsb
out
sarl
fwait
andb
in
icebp
int3
jne
outsb
in
stos
sbb
mov
movl
or
ds
andb
pop
aad
lret
mov
xchg
mov
out
test
je
push
dec
mov
movsb
cmpsb
xchg
divb
andl
and
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
