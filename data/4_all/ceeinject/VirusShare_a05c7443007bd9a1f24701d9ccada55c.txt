decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sub
adc
push
jb
and
jae
jp
mov
neg
rcl
repnz
mov
ja
inc
bound
daa
add
adc
and
sbb
ret
jmp
lods
rcll
mov
clc
xchg
add
xor
sub
out
add
ret
mov
shr
hlt
lock
es
push
adc
xor
pop
lods
or
adc
aam
hlt
sub
jl
repnz
ret
stc
imul
jg
fimuls
sub
xchg
int
cmp
cmp
and
sbb
aaa
sub
inc
cmp
subb
das
imul
jno
outsb
je
enter
rsqrtps
data16
push
enter
adc
xor
sbb
mov
xchg
pop
push
scas
mov
xor
daa
loope
test
add
add
xchg
icebp
loop
loop
ja
mov
dec
iret
loope
push
out
xor
xchg
jb
and
mov
ret
fcoms
jb
push
cmp
add
pop
and
jp
loopne
into
mov
repz
cmp
dec
cmpsl
inc
jg
push
jbe
xchg
mov
into
vpaddw
rcr
addr16
adc
adc
imul
fbld
mov
xchg
repnz
rcll
push
push
bound
adc
and
xor
ret
loop
repnz
xorb
addr16
ja
inc
bound
daa
add
adc
and
xor
ret
loop
repnz
xorb
addr16
mov
out
pop
or
mov
movsb
lea
loopne
or
fs
call
movl
cmc
push
js
addl
das
xchg
fbstp
imul
dec
jbe
cmpsb
sub
push
jmp
jmp
shl
mov
std
fcmovnu
addr16
lea
sbb
xchg
xor
jne
pop
push
push
mov
xchg
into
mov
pushfw
enter
scas
lret
xchg
mov
push
mov
fld
or
daa
psrlq
push
ds
jp
fcoms
fs
jecxz
jae
ss
cmp
dec
xchg
cmp
pop
test
cs
adc
pop
es
dec
inc
out
xorl
inc
dec
inc
push
and
leave
jg
loop
imull
stos
mov
jne
and
mov
sbb
xchg
inc
push
mov
dec
adc
orb
pop
inc
out
lret
dec
cmp
pop
add
xchg
lret
xor
push
sub
xchg
pop
insl
sbb
and
mov
cmpb
mov
imul
mov
mov
adc
leave
inc
lea
xor
insb
aaa
aas
dec
cltd
push
jne
aas
add
nop
xchg
lods
cmp
lock
outsl
sbb
scas
fwait
das
jne
fbld
jecxz
and
add
setae
aam
addr16
aam
mov
arpl
aam
xchg
xchg
out
pop
push
cmp
and
outsb
inc
icebp
push
sbb
pop
insl
decb
pop
addr16
lahf
mov
xchg
or
in
leave
leave
das
adc
mov
and
xchg
cmp
out
sbb
xor
pop
mov
movsl
sbb
adc
imul
cli
inc
jb
add
cld
lods
mov
inc
jbe
cmp
sub
sub
adc
mov
mov
in
incb
ljmp
out
or
adc
jp
push
adc
add
cmp
fdivrs
push
mov
jno
enter
ss
add
pop
pusha
ror
test
lahf
std
adc
rorl
mov
push
add
cmp
and
adc
dec
mov
mov
pushf
inc
adc
xor
add
dec
add
leave
or
sbb
add
or
jns
popa
xchg
fdivl
ret
dec
enter
add
jp
sahf
shrb
and
xchg
mov
mov
pop
xchg
out
dec
xchg
rolb
push
loopne
adc
inc
push
or
nop
test
jp
sbb
jg
jl
out
adc
push
fildl
adc
fnstsw
lret
dec
lret
adc
xchg
and
loop
out
cmp
addr16
push
outsl
jle
or
mov
cmp
cmp
sbb
orl
ret
mov
into
jp
jp
push
add
push
jbe
push
frstor
loope
xor
icebp
aam
push
jns
shlb
iret
push
dec
adc
daa
xchg
sti
jge
loop
sahf
mov
daa
lahf
dec
stc
lock
das
enter
es
pop
fbld
cmp
pop
andb
ret
cmp
sti
ret
sbb
cmp
pusha
test
scas
push
xor
int3
movsb
mov
jecxz
lahf
pop
cmp
push
or
into
daa
fbld
sub
fidivl
insl
mov
adc
sub
push
dec
or
outsl
sbb
cld
in
xchg
frstor
adc
xchg
jnp
ljmp
testl
insb
xor
jle
aaa
ret
mov
adc
adc
or
fcoml
mov
jg
loopne
insb
add
or
dec
aad
cwtl
pop
mov
pop
aaa
daa
sbb
add
jl
add
jmp
ds
cli
lret
mov
and
or
dec
lea
pop
add
jge
jnp
cmp
or
or
ljmp
loop
mov
sub
out
sbb
repz
xchg
bound
movsl
daa
sbb
xchg
lcall
ret
push
fs
push
and
inc
sti
fstl
xchg
jle
mov
mov
push
hlt
push
cmp
add
in
push
scas
and
lahf
sti
adc
xlat
rorl
leave
xchg
dec
xchg
cli
outsl
sbb
pop
mov
aas
cmp
enter
mov
mov
xchg
lcall
cli
je
fadd
ja
loop
mov
daa
adc
nop
imul
mov
sub
xchg
fst
cmc
lods
sub
push
mov
add
push
push
xchg
mov
push
pop
and
pop
ss
dec
lahf
jne
mov
stos
in
mov
xor
push
leave
adc
pushf
push
rcl
mov
or
shrb
addb
inc
data16
rcll
imul
fs
fsubl
or
xor
testb
popf
repnz
mov
out
fsubrp
pop
sarb
jle
roll
mov
sub
sub
pop
or
push
repnz
cwtl
ljmp
jl
jo
sub
adc
notl
lret
push
mov
jp
rclb
sbb
pop
stc
xchg
es
iret
xor
add
clc
jge
pushaw
mov
add
popf
add
dec
push
xchg
mov
xchg
int3
stos
or
repz
iret
add
add
mov
add
aas
mov
mov
and
mov
das
cwtl
jbe
mov
add
xor
nop
std
sti
sarb
outsb
insl
fdivrp
outsb
xchg
movsl
mov
lock
cli
inc
orl
movsl
mov
add
aam
bound
cmpsb
mov
adc
and
ret
iret
repnz
call
hlt
lock
dec
add
add
dec
cld
cltd
fildl
ljmp
divl
fadds
cmp
movsb
mov
stos
mov
xchg
sub
fwait
mov
std
xor
aaa
inc
push
bnd
outsl
dec
mov
ret
movsb
adc
fsubs
hlt
mov
repnz
mov
mov
adc
adc
xchg
sbb
js
xor
hlt
js
and
rcr
mov
int3
jg
or
push
xchg
rol
push
xor
adc
pop
xchg
addl
push
sbb
daa
fisubrs
inc
lret
cltd
cli
inc
cmp
int
test
pop
mov
adc
or
xor
pop
ret
fsubl
lock
test
imul
jno
dec
repz
icebp
movsl
mov
dec
loop
sub
das
inc
inc
std
ja
rcr
xor
cmp
jge
xor
lds
xchg
mov
pop
xchg
mov
sahf
icebp
push
mov
add
mov
mov
sbb
add
push
enter
stos
jb
add
fnstsw
hlt
jnp
dec
icebp
push
test
jmp
push
cvtpi2ps
mov
lock
stos
or
adc
aad
mov
in
gs
flds
addl
pop
mov
sahf
mov
bound
mov
in
js
mov
das
jo
pop
cwtl
xchg
cmp
int3
mov
outsb
lods
xchg
add
call
daa
aam
ret
arpl
jg
jno
bound
add
jecxz
cs
scas
dec
je
push
leave
rcr
jns
repz
or
nop
in
cmpsb
ljmp
mov
mov
outsl
scas
xor
pop
pop
fs
cmp
pop
dec
xchg
arpl
mov
into
push
jp
mov
push
xchg
xchg
aas
push
xor
jae
jbe
jge
sbb
std
mov
inc
mov
pop
mov
fs
inc
and
leave
mov
mov
lock
test
cmp
jmp
xchg
xchg
xchg
xchg
shrl
mov
inc
mov
pusha
xchg
aas
leave
or
repnz
sub
mov
clc
mov
sbb
adc
shll
and
cmp
or
shll
outsb
dec
xchg
ja
test
jge
outsb
cmpsl
cmp
adc
test
dec
mov
insl
aam
dec
jmp
data16
push
lea
pop
in
adc
mov
xor
mov
bndstx
adc
cmp
mov
xchg
call
push
mov
or
imul
test
jecxz
mov
xor
push
icebp
iret
stc
adc
pop
fcomps
and
enter
adc
mov
imul
lahf
xchg
xchg
xchg
push
dec
in
add
fldl
push
xor
mov
das
dec
mov
in
outsb
jnp
into
int
inc
sbb
out
mov
js
clc
xlat
inc
test
or
das
lock
adc
or
das
xchg
mov
inc
add
aad
and
cwtl
pop
outsb
cmpsl
mov
clc
inc
add
sbb
bound
negl
bound
enter
shr
es
lods
shrl
push
in
xor
inc
or
xorb
or
lods
mov
jo
inc
jmp
adc
xchg
add
mov
jo
test
test
adc
fnop
inc
daa
inc
pop
js
cmp
jge
pop
or
ret
fs
std
jl
add
mov
jne
or
mov
dec
psrld
fwait
or
js
int3
idivl
shrb
outsb
divb
mov
inc
or
enter
ret
mov
adc
cs
pop
ja
aam
shll
add
pop
bound
xor
add
mov
adc
leave
cmp
lret
pop
std
mov
sbb
push
ds
push
popf
jbe
loop
inc
dec
and
pop
pop
call
stc
imul
jne
xor
mov
stc
mov
push
std
sbb
inc
xor
in
push
xor
inc
xchg
sbb
jl
push
outsb
sahf
int3
and
add
stos
push
jne
add
xchg
add
inc
mov
xchg
push
mov
mov
scas
rcrb
xchg
shlb
cmp
rcr
jo
adc
sahf
fwait
mov
xchg
sub
pop
test
pop
popf
loopne
shl
mov
fwait
xchg
pop
push
adc
cld
out
mov
sti
out
xchg
sbb
fiaddl
inc
push
jae
test
cli
push
and
sub
loopne
xchg
pop
dec
fmuls
hlt
xchg
dec
dec
mov
data16
jge
data16
mov
dec
cmp
bswap
pop
sbb
xchg
mov
stos
jnp
rol
push
sbb
mov
cmpsl
mov
or
cltd
sti
jns
lret
iret
cmp
xchg
jmp
gs
mov
clc
mov
shrb
wbinvd
pop
in
lods
push
push
cmp
ret
push
jecxz
test
mov
dec
icebp
lods
js
cmpb
lods
add
les
mov
xchg
lods
pop
loopne
data16
pop
in
rcll
xchg
push
imul
dec
mov
push
mov
lret
cmp
sub
int3
icebp
shll
cli
push
sbb
pop
xor
cmp
and
test
inc
loope
inc
add
aas
pop
sbb
push
inc
sub
mov
lea
icebp
test
movsl
jecxz
pop
imul
clc
lods
pop
xchg
jnp
dec
xor
aas
shlb
lahf
sub
pop
push
lods
dec
hlt
inc
cld
jbe
ret
gs
jg
and
mov
pop
dec
pop
xor
xor
ss
jle
dec
mov
das
push
iret
sub
xchg
pop
shlb
add
inc
sub
xor
outsl
ja
stos
rep
push
jecxz
dec
shlb
push
pop
xor
arpl
loopne
insl
arpl
popa
loope
pop
mov
inc
scas
cli
jns
cmpsl
mov
movsb
fldl
leave
or
sbb
stos
ja
sbb
sbb
cmp
inc
dec
stos
mov
push
sbb
xor
hlt
jne
inc
into
incl
jmp
adc
jo
dec
test
or
cmp
clc
add
and
pusha
shrl
add
lret
stos
pop
or
or
stos
outsb
adc
repz
jb
sahf
or
test
shlb
adc
push
xlat
fsubl
test
jmp
adc
imul
int
imulb
scas
cmp
scas
insb
xor
xor
scas
cmp
and
mov
adc
inc
adc
xchg
mov
incl
dec
enter
iret
andb
cltd
scas
mov
mov
mov
hlt
pop
lods
movb
xchg
push
test
out
int3
movsb
xor
outsb
pop
sti
test
push
mov
jmp
jae
xor
fwait
cmp
ss
ja
push
fimull
push
aaa
gs
sbb
xchg
mov
fbld
cld
je
aas
lcall
lea
test
orl
jp
loope
pop
popa
ficoms
fwait
pop
inc
stos
inc
and
and
jmp
inc
lods
stc
addb
push
mov
xchg
sbb
pushf
dec
js
cwtl
imul
es
rol
loopne
add
test
sti
mov
dec
mov
inc
bound
and
ds
xchg
mov
test
xchg
sub
adc
pop
and
jecxz
iret
sbb
fbstp
mov
and
or
pop
hlt
mov
jge
lock
dec
ljmp
fisttpl
ss
cltd
in
push
mov
cmp
mov
or
xchg
pop
lcall
xchg
out
or
ret
int3
xchg
mov
cmp
les
and
insb
jp
bound
shrb
into
nop
jbe
mov
and
sbb
adc
aad
add
dec
mov
add
lods
aam
push
icebp
leave
dec
pop
ds
ljmp
and
cmp
or
add
sbb
xlat
fwait
lcall
lret
out
pop
bound
push
fcmovb
mov
iret
fcoms
inc
inc
fldenv
inc
imul
push
mov
jo
data16
dec
enter
push
loope
mov
sub
fistpl
ret
neg
jg
jb
pusha
iret
adc
loopne
dec
into
rcrl
rorb
adc
or
pop
adc
insb
sbb
negb
rcrb
pop
inc
cs
cmp
lock
scas
inc
xor
xlat
mov
sbbl
leave
cmp
mov
loope
test
hlt
jmp
dec
push
or
cli
mov
pop
test
mov
mov
xor
and
or
std
dec
jne
rorl
dec
fsubrs
leave
cmp
stos
jbe
jns
stc
int3
cmpsb
incb
xchg
lds
sub
pop
xchg
sub
in
xor
ja
out
and
xor
adc
daa
test
and
lock
mov
or
xchg
test
test
adc
jle
call
adc
cs
stc
or
in
add
xor
in
mov
imul
js
pop
jmp
inc
lods
iret
adc
pop
fisubrs
cmp
mov
inc
xchg
loop
ja
lcall
mov
fs
inc
inc
mov
int
push
sbb
push
cld
cmpsb
daa
loopne
sub
cmp
fs
push
jge
sub
push
scas
lret
xchg
lea
js
inc
pop
mov
push
mov
outsb
movsl
and
stc
mov
aas
imul
test
adcl
outsb
adc
xor
in
notl
mov
fisttpll
xchg
cwtl
lcall
fs
mov
pushw
enter
adc
push
into
push
arpl
cmp
dec
inc
jne
push
pop
setb
imul
or
mov
dec
sahf
fcompl
xchg
lock
inc
and
aad
clc
mov
in
imul
inc
outsb
cmp
sbb
clc
out
fcomip
bswap
out
std
and
nop
hlt
mov
std
pop
fisubrl
mov
scas
or
repz
aad
es
fwait
push
cmpb
and
cmpb
sub
adcb
inc
scas
iret
in
xlat
leave
pop
dec
imul
push
aam
jno
jge
in
pop
dec
sub
dec
cmp
mov
jmp
test
int3
xor
mov
jg
ja
inc
fcoml
jmp
jl
xor
push
insl
lcall
push
das
jecxz
pop
cmp
pop
jns
pop
inc
and
hlt
outsb
mov
shl
cltd
sub
cmp
or
clc
rcrl
adc
lea
push
mov
faddl
aad
mov
cmp
sub
sbb
call
jmp
add
ror
mov
xor
sbbb
sbb
dec
dec
aam
or
outsb
inc
fcmovb
and
fwait
push
or
imul
inc
pop
mov
jp
xor
mov
scas
and
mov
xchg
dec
pop
dec
mov
popf
inc
imul
out
cmp
mov
cmp
call
mov
mov
in
iret
xchg
std
or
roll
movsl
into
popa
jl
daa
jl
in
mov
fldcw
push
jns
xor
or
subl
dec
mov
sbb
or
mov
vmread
test
jns
loop
xchg
xor
stc
jecxz
sbb
push
or
int
inc
mov
inc
je
in
lods
mov
push
iret
cltd
mov
inc
mov
pusha
mov
ja
or
sbb
inc
jns
mov
stos
mov
cmp
stos
mov
fnsave
add
in
clc
imul
clc
and
xor
add
lcall
and
cltd
adc
loop
mov
cmp
pop
and
lret
mov
push
addr16
loop
imul
sub
movsl
xchg
loopne
out
push
jl
xchg
cld
lods
xor
cwtl
add
testl
pop
pop
jp
mov
add
add
jle
jmp
push
mov
test
inc
adc
sbb
bound
inc
dec
mov
inc
rcl
dec
out
jg
fs
repz
adc
scas
sub
cmp
mov
scas
jo
xchg
and
shrl
push
add
fdivr
pop
mov
cmpsl
sub
xchg
in
in
dec
add
sub
pop
push
enter
nop
clc
clc
jb
inc
sbb
dec
mov
mov
jae
dec
mov
pop
movsl
push
icebp
push
jae
or
sbb
and
xor
mov
lret
add
data16
dec
fimull
ficoml
jne
fcomps
shll
scas
sti
gs
imul
mov
cmp
inc
pushf
out
lods
jns
outsb
xchg
leave
sbb
inc
mov
movsb
mov
jmp
mov
pop
gs
sbb
sbb
push
inc
xchg
stc
cmpsb
jo
les
outsl
pusha
xchg
rcl
add
stc
lret
push
test
mulb
mov
int3
outsb
test
mov
mov
xchg
jg
and
or
fwait
shrl
test
inc
mov
mov
sub
mov
cltd
add
in
in
cmp
dec
add
fiadds
pushf
jno
or
fneni(8087
sub
cld
addr16
add
and
sbbl
add
out
rclb
pop
ret
je
xchg
vshufps
in
outsl
cld
ljmp
out
add
lock
cmp
out
jge
ss
mov
lock
call
jle
hlt
jl
scas
insb
xor
pop
sub
add
cwtl
test
push
fists
and
and
test
cld
and
jecxz
lcall
adc
je
into
shrb
mov
push
pop
and
mov
mov
jne
jmp
push
cmp
sub
adc
aaa
ds
leave
xlat
pop
loop
sub
push
gs
mov
push
rcrb
push
cli
aas
js
cmp
inc
xlat
jne
leave
out
arpl
das
decb
sub
jmp
orl
push
and
mov
fs
inc
xchg
pop
flds
js
cmpsl
mov
adcl
inc
iret
dec
pop
add
stos
jb
push
xor
push
fwait
jecxz
lcall
mov
inc
pop
repnz
outsb
jp
jl
sub
sub
cmp
idiv
popf
dec
test
dec
or
xchg
mov
cld
les
aam
aaa
movsb
out
ret
cmp
ds
fsubr
inc
daa
lods
repz
push
jbe
gs
fsubl
insl
es
lods
mov
clc
imul
add
adc
and
xor
ret
loop
repnz
xorb
addr16
ja
inc
bound
daa
add
adc
and
xor
ret
loop
repnz
xorb
addr16
je
push
jp
jbe
add
jns
es
xor
ret
not
into
loop
sti
cmpsl
xchg
push
jg
pop
mov
xchg
daa
add
adc
mov
or
loop
test
cli
aas
ljmp
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
xchg
lods
cmpb
in
mov
shlb
loopne
xor
inc
jl
pop
jo
hlt
lods
cmpb
in
sar
int
mov
push
or
sbb
jo
pusha
pop
sub
js
into
in
mov
fnsave
push
pop
push
xor
and
cmp
loope
int
fmulp
clc
aam
rclb
into
lret
fcoms
xor
outsl
push
lods
push
adc
mov
cltd
jl
jl
xor
and
jo
inc
insl
push
out
je
mov
fmull
scas
jge
es
lahf
or
mov
mov
sbb
rcrl
inc
sub
and
inc
xchg
add
xchg
dec
and
test
cwtl
dec
lret
das
in
sar
adc
add
mov
ficomps
jno
pusha
pop
outsl
insl
lea
jb
nop
sub
dec
adc
imul
rolb
sbb
mov
sbb
xchg
das
mov
aad
and
aam
fnstsw
jo
arpl
mov
mov
std
lock
fst
sub
adc
inc
dec
pusha
sbb
lods
repnz
int3
fcomp
mov
test
test
push
pop
inc
insl
and
cmp
aas
add
rol
vpaddd
lcall
xor
dec
sub
das
jmp
sub
or
in
in
out
shr
repz
ffreep
std
lock
fstl
sub
and
jo
pusha
pop
nop
lods
cmpb
in
sar
int
fstl
sub
and
jo
pusha
pop
nop
lods
es
jb
pusha
pop
pop
sbb
jle
lcall
push
jg
lret
movsb
push
test
adc
movsl
fiadds
adc
lahf
into
outsb
dec
insb
sub
out
add
loop
rclb
jnp
inc
jae
xchg
roll
insb
std
pop
add
fsubs
fbld
inc
std
in
inc
repz
dec
fisubrs
push
pop
jg
inc
int
in
shll
inc
dec
pop
int
add
push
jecxz
out
imul
and
in
xchg
xchg
in
sub
xor
pushf
arpl
or
in
out
out
cmpb
in
mov
mov
jge
or
adc
push
pop
jg
lret
out
and
outsb
jbe
xchg
jo
daa
xchg
les
fwait
popa
xor
pop
push
dec
notb
dec
bound
cwtl
dec
ds
xchg
stos
xor
and
lret
loopne
lods
inc
fiadds
nop
xchg
test
addr16
test
sbb
cmp
push
in
rcrl
es
popf
mov
scas
add
inc
pcmpeqb
cmp
cmpsb
jecxz
hlt
adc
punpckhwd
mov
cmp
inc
test
push
incl
flds
int3
pop
arpl
cmp
mov
in
repz
arpl
xchg
and
pushf
mov
push
ret
lock
xchg
frstor
adc
bound
inc
and
rclb
setbe
add
lahf
adc
vpminsw
iret
movb
rsqrtps
loopne
push
fsubs
int
xor
fdiv
add
pusha
push
and
fimuls
insb
rolb
mov
jnp
mov
lret
aam
addb
fsubr
divl
or
shrb
and
or
cmpl
andb
xchg
arpl
call
pop
or
das
pop
bnd
xchg
xchg
fwait
lcall
mov
rorl
dec
and
js
xchg
ret
and
mov
sbb
xlat
mov
mov
repnz
inc
and
sbb
sub
iret
outsb
nop
mov
xchg
pop
sub
icebp
push
daa
mov
mov
xchg
out
test
pop
movsb
rolb
dec
aaa
jne
mov
iret
inc
dec
sbb
aam
mov
subl
int
mov
sarb
ret
mov
adc
fldl
cli
jmp
sub
rorl
push
dec
and
loopne
lods
pusha
les
fucom
push
lea
xor
sub
xchg
pop
fldcw
push
out
jecxz
stc
cmp
fwait
sets
dec
sub
jns
lret
pop
fisttpll
xor
push
pop
iret
ljmp
cmp
jne
pop
or
iret
inc
adc
jne
dec
outsb
sub
shrb
andl
out
xchg
sbb
mov
loope
add
inc
xor
gs
mov
mov
push
cld
pusha
mov
push
dec
int3
mov
out
adc
popf
xchg
push
push
jo
rorl
push
mov
sbb
adc
mov
jl
jno
enter
lret
cmc
sbb
mov
xchg
mov
ds
stos
gs
repnz
dec
pop
cmp
cmc
stos
mov
ret
xchg
gs
stos
adc
inc
inc
inc
pop
lods
imul
adc
mov
xchg
inc
and
push
cmp
notb
sarb
cmp
lahf
jae
rcr
scas
mov
enter
repnz
adc
dec
pushf
lahf
push
add
jne
test
cmpsb
and
shrl
inc
rclb
pop
movsb
inc
loope
mov
out
sbb
dec
cmp
mov
arpl
cmpsl
movsl
sub
daa
push
lahf
mov
rcll
lcall
test
test
mov
mov
fmul
fmulp
outsl
sbb
lock
cs
inc
test
in
xchg
aam
inc
shlb
xchg
mov
add
lods
sub
mov
xchg
and
cmp
roll
stos
xor
push
sbb
bound
add
and
or
xchg
pop
sub
sti
loop
mov
cwtl
stc
daa
fwait
lret
or
and
or
xchg
mov
jno
es
mov
xchg
push
xor
sbb
and
pop
sbb
rclb
xchg
pop
and
add
sahf
push
jle
nop
and
and
aad
movsb
gs
jl
fsubs
sub
arpl
lea
xchg
jbe
stos
sub
add
mov
jmp
fs
movsb
out
popf
xor
xabort
data16
cltd
fsts
outsl
imul
ljmp
mov
sbb
mov
test
sub
xchg
das
scas
push
pop
or
ja
lock
add
cmp
inc
out
inc
xor
rclb
jnp
mov
push
dec
insl
add
fildll
cltd
pop
mov
or
loopne
cmc
cmp
mov
pop
movsb
test
mov
data16
adc
fidivl
inc
mov
cmc
shlb
xchg
cmp
icebp
ret
insl
insb
std
mov
add
adcl
mov
jns
dec
rclb
mov
addr16
cwtl
xchg
fcoml
aaa
dec
js
jp
lahf
push
mov
jne
scas
cli
stos
mov
push
lds
icebp
stos
imul
add
js
sbb
pop
push
push
call
or
ret
push
dec
inc
adcb
xor
push
mov
sti
js
jle
es
mov
out
dec
insl
ret
and
xor
iret
rep
fwait
sub
pusha
cmp
mov
pop
mov
lea
jmp
leave
or
dec
jecxz,pn
xor
pop
add
and
gs
sub
xor
test
mov
mov
enter
mov
out
outsl
cli
jle
cmp
mov
cmp
int3
fs
adc
xchg
gs
xor
and
fadds
xchg
pop
mov
cmc
out
pop
inc
jno
xchg
add
add
ds
dec
fs
jne
lds
sub
sbb
out
cmp
dec
sbb
cmp
out
inc
lret
mov
cwtl
cwtl
in
mov
adc
leave
or
loop
cld
xor
fdivrs
cmc
sub
cmpsb
insb
stc
xchg
inc
push
dec
jno
cmpsl
cmpsl
cmp
xchg
aad
popa
dec
in
test
insb
jle
push
sarb
xchg
push
in
ret
dec
fs
scas
or
dec
pop
xor
dec
std
xor
cmpsl
push
jl
jmp
sbb
mov
inc
test
cmovs
xor
pop
outsb
pusha
jnp
xor
push
cld
mov
ja
insl
add
ret
int3
aad
cmpsb
in
xchg
divl
and
xor
add
data16
inc
xchg
and
call
fdivl
xor
mov
mov
cmp
pop
mov
add
dec
inc
into
push
iret
subb
push
and
or
clc
jo
outsl
cmp
addr16
xlat
loope
and
sbb
jge
dec
dec
mov
flds
jl
xchg
sub
xchg
jl
fisttpl
test
adc
lea
fisubrs
les
cmp
xchg
push
mov
out
xchg
xor
jns
inc
cmc
cmp
pop
testl
push
jge
mov
cmc
add
push
cmp
sub
mov
push
jl
loopne
cs
pushf
out
outsl
loope
xor
gs
in
dec
pusha
loope
pop
cmp
stc
movsb
fbstp
mov
incb
jle
jne
stc
lret
and
movsb
push
pop
daa
hlt
fs
ret
sti
push
mov
imul
dec
pop
test
cmp
and
cwtl
shll
cmp
fsts
xchg
xchg
je
ja
fldpi
add
sarb
insl
jb
sarl
imull
stos
in
imul
cmp
add
pop
xor
jle
dec
in
dec
add
aaa
pushf
dec
clc
mov
aas
xor
jno
dec
rclb
ja
cmp
mov
cwtl
inc
mov
or
lret
jne
aaa
stos
fimuls
dec
push
push
sbb
int
scas
and
iret
inc
push
shr
arpl
test
sub
les
ret
inc
test
and
aas
or
sub
dec
jp
sarb
push
xchg
test
xchg
mov
lret
daa
je
mov
mov
xchg
or
leave
or
xchg
rcrb
lods
cmpsl
lea
xchg
ret
add
xor
aaa
lock
push
dec
mov
loop
inc
clc
mov
push
into
xchg
mov
xlat
cmp
dec
sarl
inc
lret
sbb
sti
adc
xchg
jl
mov
outsb
ja
pop
pop
test
jns
pop
pop
jge
popf
cmp
insl
cltd
xor
faddl
popa
in
jmp
push
testl
jg
lcall
jp
jns
ficoms
jb
stos
rolb
mov
out
inc
cmp
mov
cmc
mov
or
and
mov
sbb
pop
pop
push
sbb
repnz
or
int3
lods
cmp
lret
add
dec
test
outsw
fsubl
or
in
pop
mov
mov
callw
and
push
movsl
dec
push
xchg
fisubrs
pop
aas
imul
cli
test
dec
mov
sbb
enter
jne
repnz
mov
fwait
xchg
add
xchg
and
push
dec
int3
orb
jnp
inc
mov
xor
pushf
movsl
dec
in
ret
adc
adc
lods
dec
dec
mov
outsl
decl
stos
mov
pop
aam
vpunpckldq
mov
xor
mov
xchg
inc
fidivs
dec
arpl
xor
aam
xchg
repnz
jo
inc
cmp
test
in
out
add
adc
fidivs
mov
aas
cmpsl
in
sbb
loope
cmp
imul
lock
jle
in
subb
cmpsl
adc
xchg
arpl
rcrl
mov
cmp
add
adc
cmp
insl
inc
add
stc
mov
add
jle
aam
adc
inc
cld
cmc
or
push
pop
scas
out
addr16
inc
xchg
in
dec
push
aad
sbb
loopne
jp
insl
fstpl
mov
mov
pop
rorb
ficoml
push
mov
adc
xor
xchg
jns
outsb
xchg
pop
mov
mov
mov
xor
pop
or
mov
and
inc
sub
dec
andl
and
aam
and
inc
jg
jecxz
sub
mov
hlt
cmp
xchg
xlat
inc
cmc
lods
fldt
cmp
fsub
fisttpll
sub
sbb
lret
and
insl
cwtl
add
mov
int
push
repnz
ja
mov
lock
xchg
cs
mov
loop
pop
das
cmc
imul
sbb
dec
or
jns
daa
mov
repz
mov
inc
adc
and
dec
or
jno
je
sarb
mov
andl
mov
xor
mov
mov
shrl
iret
fisubs
push
lcall
int
add
lcall
mov
insl
and
nop
loopne
sbb
leave
cmp
jns
and
in
lahf
inc
mov
mov
insl
mov
mov
pushf
or
jnp
cmpsl
mov
adc
fiaddl
notb
pusha
mov
lcall
sub
mov
mov
push
jp
mov
xor
cmp
dec
or
adc
test
jnp
lret
adc
dec
out
fstpl
popf
int
lods
cmc
add
dec
pop
mov
cmp
jb
mov
sub
push
xchg
inc
jns
dec
dec
xor
out
sub
aaa
jns
lahf
pop
mov
test
cmp
test
mov
cwtl
or
outsl
sub
add
movsl
cmpsl
add
lret
hlt
aaa
mov
sbb
inc
dec
cmpsl
mov
cmp
push
pop
jmp
ss
mov
or
cmp
es
filds
push
fdivrs
add
mov
lds
loope
nop
mov
push
mov
cmp
adc
bound
data16
call
movq
mov
mov
and
stos
ret
mov
sbb
push
fwait
jl
xor
es
pop
push
push
push
pop
inc
and
cltd
addr16
pop
or
cltd
xlat
clc
shr
lcall
data16
in
dec
test
sbb
pop
sbb
jle
ja
das
imul
mov
int
or
jno
ret
inc
xchg
jno
dec
dec
xchg
pop
sbb
xchg
xchg
mov
inc
jmp
push
arpl
cwtl
sub
scas
cmpsb
sbb
jae
and
pushf
cmpsl
add
mov
iret
imul
jb
clc
sbb
ss
add
ss
mov
or
lcall
xor
cld
xlat
imul
scas
fiaddl
lcall
jo
in
jl
stos
call
jb
adc
inc
std
and
dec
pop
rcr
daa
aaa
es
fwait
mov
xchg
aaa
sub
jno
mov
into
xchg
mov
shr
lds
sub
testl
mov
test
ror
push
cld
dec
addr16
xlat
in
xor
outsb
fstp
xchg
aaa
movsb
add
lret
popa
fistl
shr
pop
idiv
das
cmpb
jmp
in
sub
jae
adc
rcll
inc
xlat
outsb
cltd
les
jp
fwait
xorl
xchg
dec
pop
or
int3
nop
cmp
jb
xchg
or
movsl
in
cmp
mov
inc
xchg
cmpsl
pop
fwait
add
xchg
inc
jg
aam
das
sbb
xchg
or
subl
imul
add
lock
movsl
pushf
testl
pop
mov
scas
and
inc
cwtl
jbe
push
addr16
xor
jne
cmp
jl
xor
call
or
adc
adc
add
lcall
in
jns
fs
imul
jb
cmpsb
insl
and
pop
inc
dec
or
lret
or
fstl
add
jbe
mov
lret
xchg
cmp
adc
rorb
or
test
aam
pop
cwtl
and
arpl
scas
jne
test
pushw
pusha
pop
mov
sub
mov
test
add
or
push
mov
sahf
pop
mull
inc
cld
in
cmpsb
add
ficomps
add
popa
movsl
hlt
dec
mov
insl
push
dec
jmp
xorl
push
roll
adcl
and
adc
pop
cmp
xchg
jno
sub
add
in
mov
pop
bound
daa
inc
leave
cmpsb
lahf
out
or
pop
scas
add
adc
dec
loope
xchg
sub
std
ror
int
push
push
pop
cs
ss
insb
inc
add
cli
push
sub
test
pop
idivl
cmpsb
shrb
lahf
jp
mov
inc
ret
lea
pop
iret
shl
cmp
dec
xchg
adc
outsl
into
fldcw
shll
or
or
push
lahf
cmpsb
jns
push
js
ret
cld
mov
mov
lods
rcll
or
xchg
push
mov
out
lods
in
sub
cmp
insb
adc
mov
adc
add
stos
fmulp
push
out
xchg
xor
push
lret
mov
rorl
insb
sub
push
bound
pop
pop
or
push
ss
nop
and
pop
mov
push
dec
jns
xor
data16
jp
push
xchg
push
jb
mov
es
stc
aam
ficomps
xchg
adc
sub
pop
xchg
xchg
or
mov
test
daa
stos
fsubrs
pop
loop
ficomps
xchg
insl
mov
stos
adc
aad
jmp
cmp
jnp
jbe
data16
std
icebp
dec
mov
or
sub
mov
fsubl
xorl
push
xchg
adc
shrb
and
lods
andb
xchg
xor
sub
je
cmp
xchg
mov
adc
push
mov
pop
test
xlat
cmp
fistpl
aam
jae
ror
adc
in
mov
or
mov
cwtl
and
repz
sbb
jo
xabort
das
mov
test
add
mov
test
cli
pop
add
das
cmp
stos
mov
ret
out
mov
movsb
adc
pop
fs
fisubrs
inc
cwtl
jp
int
inc
mov
lods
mov
test
and
xchg
adc
pop
sub
sbb
lret
ja
sub
ss
pop
sbb
cmp
jl
mov
pop
pusha
dec
pop
in
std
insb
out
fsubrs
pop
jecxz
in
xchg
pop
inc
xchg
dec
imul
mov
test
push
aad
xchg
sbbb
mov
adc
inc
mov
test
and
aad
mov
jbe
mov
sbb
mov
dec
lcall
cmp
mov
push
lret
js
lock
mov
xor
xor
adcb
mov
lds
stos
lock
jb
mov
adc
sub
sub
out
imul
mov
xor
add
repnz
fcompl
xchg
jmp
outsl
jle
int
cli
bound
mov
push
ja
test
lods
in
adc
add
in
adc
imul
cwtl
cmp
int3
mov
aam
clc
sub
lods
adc
fildll
jmp
js
mov
pusha
or
sbb
adc
loope
pop
pushf
jp
outsl
xchg
xchg
int3
aam
inc
ret
mov
shll
movsb
push
outsb
push
inc
jp
clc
mov
in
push
aas
cmp
cmp
and
and
jge
js
xchg
xor
push
add
cmp
fists
sub
ljmp
sub
mov
rcr
pop
mov
cmp
pop
pop
sbb
dec
rorl
pop
push
inc
std
in
pop
popf
rcr
sbb
or
imul
sbb
adc
mov
push
inc
rorb
xor
aam
push
lahf
addr16
popa
stos
addr16
mov
pusha
shrl
aas
pop
mov
xor
js
mov
loope
jmp
mov
jns
inc
mov
enter
sbbl
mov
xchg
imul
or
pusha
push
dec
js
inc
mov
xor
movsb
xor
testl
stos
into
xchg
shlb
xchg
popa
xor
in
fwait
sbb
mov
or
cmpsb
mov
scas
sub
push
mov
cltd
lcall
cmp
daa
sbb
aam
mov
push
jno
sub
mov
adc
shrl
sar
fldenv
bound
fcompl
jno
mov
cwtl
inc
imul
mov
leave
xor
ret
push
repnz
xchg
cmpb
sbb
jl
dec
in
adc
stos
adc
sti
xor
jns
sub
push
add
and
js
call
inc
stos
cmp
push
movsl
call
pop
cld
jne
rcl
add
notb
repnz
call
pop
cmp
cmc
movsl
scas
mov
jle
cltd
sarl
iret
mov
jle
pop
jbe
jnp
fs
xchg
test
cmpsb
or
mov
rcll
and
adc
xor
in
or
push
lcall
xchg
out
fsubs
into
adc
push
lds
xchg
lahf
int
sbb
push
and
inc
inc
out
and
idivl
cmp
fwait
test
jecxz
inc
ss
xchg
jp
adc
cmp
mov
cmp
push
sahf
ret
mov
imul
sub
and
nop
and
out
ret
xchg
sbb
out
arpl
mov
fsubrl
stos
loope
adc
jg
les
jg
adc
or
push
cmp
inc
cmc
mov
imul
rcrl
sbb
shrb
insl
mov
jbe
out
orb
inc
iret
xlat
or
cld
insl
std
mov
and
dec
jo
mov
enter
daa
add
ljmp
add
ret
sarb
jecxz
cmp
js
sbb
dec
js
mov
shlb
test
in
jge
mov
mov
es
repnz
push
out
les
and
repnz
out
das
fimuls
xchg
mov
fildll
pop
jo
dec
or
testl
mov
jno
leave
loop
or
pop
aad
shr
ret
lock
push
jge
jmp
test
testl
loopne
adc
and
jo
pusha
pop
nop
lods
cmpb
in
sar
int
fstl
sub
and
jo
pusha
pop
nop
lods
mov
rorb
sar
int
fstl
sub
and
jo
mov
lods
fdivrl
shr
sar
lock
sbb
lcall
orb
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
call
mov
call
pushl
push
push
call
add
push
call
xor
cmp
setne
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jge
aaa
popl
mov
add
addr16
cmp
loop
mov
test
mov
out
mov
jg
outsl
xor
pop
scas
fbstp
inc
call
lods
adc
das
out
testb
xlat
outsl
xchg
xchg
pop
cmpsl
movzwl
outsb
xlat
pop
out
cmc
cmpsl
pop
mov
pop
enter
mov
mov
decl
jns
outsl
pop
mov
je
scas
add
inc
dec
cmp
xchg
cmpsl
or
iret
sbb
daa
lahf
mov
jmp
add
icebp
js
lcall
pop
xchg
stos
add
in
mov
lock
push
int3
dec
mov
pop
dec
push
push
imulb
adc
test
pushf
cld
inc
fbld
scas
mov
xchg
fcomip
xchg
lret
mov
xchg
enter
arpl
aaa
pop
mov
push
testl
xchg
xchg
xchg
dec
pop
negb
sub
ljmp
lcall
jl
pop
ja
gs
xchg
shlb
ja
scas
daa
jge
imul
cmpsb
add
inc
decl
mov
mov
incl
push
gs
outsb
push
lahf
push
std
fidivl
add
sbb
shll
pmaddwd
stc
dec
mov
xchg
dec
mov
divb
out
int3
adc
subl
imul
subb
dec
mov
xlat
sbb
add
ljmp
push
out
cmpsl
pop
mov
xchg
xchg
das
out
testl
lahf
aaa
popl
mov
ja
inc
call
cmpsl
pop
mov
xchg
xchg
das
out
testl
lahf
hlt
pushf
pop
cmp
dec
push
pop
push
clc
xor
lock
mov
mov
xor
sahf
not
jbe
cmp
xchg
mov
sbb
mov
popf
stos
dec
push
push
cmp
or
ficoml
cmp
imul
iret
popf
cmp
inc
jns
pop
test
add
mov
out
shlb
push
push
mov
jmp
and
sub
mov
out
icebp
aas
sub
stos
pop
mov
punpcklbw
and
lret
xor
into
das
pop
inc
std
cs
sti
mov
jmp
jb
and
xchg
jo
jbe
push
xchg
test
inc
les
mov
xchg
lods
xorb
sub
sub
cmp
lret
repnz
aam
dec
ret
jae
jo
jb
mov
xchg
lret
jge
call
iret
dec
pop
mov
xchg
sbb
mov
mov
jbe
aam
mov
inc
sti
mov
movsl
add
jle
mov
cmc
mov
ss
mov
lcall
jmp
je
add
push
xor
jns
adc
jno
cwtl
cmp
dec
mov
pop
in
xchg
imul
jmp
test
cmp
inc
subl
test
mov
aas
push
pop
cltd
aad
cmp
inc
mov
mov
adc
cwtl
and
cli
cs
out
loope
lea
and
pusha
sbb
adc
pop
push
outsl
or
inc
add
mov
int
loope
cmc
mov
fisubrs
fcoml
add
dec
loop
sbbb
mov
stos
lds
lea
jo
int
add
lods
into
xchg
jbe
je
jp
imul
filds
js
pusha
insl
jl
mov
or
push
xchg
mov
dec
bound
andb
fistpll
dec
xor
and
imul
lahf
mov
dec
jnp
jbe
leave
push
or
mov
mov
adc
adc
xchg
and
jbe
push
leave
clc
int3
inc
int3
pop
cmp
scas
or
out
jmp
add
dec
push
xchg
clc
testl
adc
mov
cmpb
loop
addr16
addr16
stos
ljmp
inc
mov
lcall
sti
sbb
packuswb
cmp
jne
add
aam
insb
mov
add
inc
mulb
fwait
dec
ljmp
jmp
xchg
fstpl
std
mov
aam
js
les
cmp
push
les
jo
icebp
scas
sub
mov
cmp
xor
mov
cmc
ljmp
test
xchg
js
leave
sbb
lds
vphsubwd
add
insb
dec
repz
pop
and
adc
mov
insb
insl
and
jmp
jp
dec
fbld
add
push
enter
idiv
jge
gs
add
xor
mov
jne
jns
mov
jl
test
insb
mov
div
mov
sti
xchg
test
dec
mov
inc
and
jmp
push
insb
mov
jl
jp
aas
sbb
out
cmp
mov
sbb
push
jo
pop
jg
xchg
fs
shl
imul
fistl
fistpl
cs
fldt
dec
cltd
dec
jg
cmp
pop
lcall
sar
push
ja
dec
mov
int
bswap
dec
push
jae
aas
out
jp
inc
shll
dec
and
fldl
pop
jae
inc
mov
xlat
xchg
nop
popl
xor
mov
pushf
mov
loopne
cli
gs
shll
sbb
das
mov
mov
inc
rol
dec
loope
and
mov
jb
add
mov
in
jno
enter
fdivl
daa
inc
lea
pushf
insb
test
pushf
roll
cld
cmp
adcl
stos
rcrb
pop
or
arpl
pop
lret
xchg
lret
in
test
shr
pop
or
jne
mov
dec
insl
icebp
jecxz
push
jb
lods
or
loope
push
popf
mov
cmc
leave
xchg
sbb
into
pop
cmp
xchg
test
jl
pop
cmp
ljmp
cmp
clc
pop
aaa
lret
pop
xor
or
dec
shlb
dec
icebp
addr16
mov
loope
divb
aas
push
insl
inc
push
aad
shll
cmp
add
movb
mov
fists
adc
pop
pop
daa
in
mov
inc
cmp
jle
jbe
fistpll
xor
out
ret
inc
aad
push
xchg
inc
cld
lahf
mov
adc
push
enter
push
cmp
mov
fisttps
xchg
push
in
push
fsts
lret
push
inc
out
scas
push
xor
xchg
loop
xor
push
mov
shll
mulb
aas
cmc
mov
nop
mov
aam
dec
cmp
sbb
or
out
data16
sub
mov
or
loopne
repnz
sahf
or
add
pop
mov
movsb
cld
lea
add
fstl
scas
loopne
cs
outsb
addr16
std
ret
fnstenv
icebp
imul
pop
mov
adc
fsubrs
mov
push
inc
into
jge
or
je
addb
sbb
shll
jmp
mov
int
xchg
xchg
adc
mov
sub
rcr
mov
pop
nop
clc
mov
fimuls
out
adc
jnp
add
xchg
pop
xchg
pop
or
out
jbe
pop
push
adc
adc
or
mov
mov
push
mov
clc
cmp
repnz
dec
push
mov
lcall
push
cmp
stc
jle
push
loop
cmp
sbb
mov
pop
dec
fsubs
mov
jp
aam
mov
imul
ret
in
add
xor
hlt
xchg
arpl
jns
and
xor
cmp
xor
sbb
and
pop
mov
xchg
jle
scas
xchg
inc
xor
adc
lds
fwait
sahf
adc
sub
cmpsl
ficompl
notb
and
pop
sbb
pop
sub
cwtl
jnp
mov
mov
fwait
adc
sbb
jnp
btc
inc
mov
shlb
icebp
pop
pop
icebp
test
mov
add
add
sub
xor
imul
sbb
clc
loope
call
mov
xor
push
mov
mov
or
inc
sub
je
fildll
repz
scas
rolb
sbb
mov
lcall
out
jo
test
sarl
jle
pop
enter
fld
flds
pop
sub
das
xchg
pop
pop
test
dec
xchg
xlat
out
stc
sub
ss
xchg
adc
sbb
cmp
enter
call
int
test
lret
add
hlt
decb
xor
shrb
out
idivb
mov
sbbl
pop
dec
sub
cs
pop
mov
pop
and
iret
or
cmp
mov
inc
cltd
dec
xor
or
icebp
xchg
imul
icebp
push
sahf
and
jnp
jns
std
sahf
in
pop
cwtl
data16
dec
pushf
call
mov
and
push
sbb
nop
jecxz
clc
or
js
shrl
xor
push
fidivs
push
dec
pop
std
js
mov
sbb
out
sahf
push
jp
add
lds
icebp
sbb
mov
inc
xor
jecxz
adc
cmp
sbb
shlb
clc
enter
addr16
add
ret
pop
adc
fwait
or
popa
pop
jo
sbb
dec
pop
mov
in
hlt
jg
xor
addr16
sub
xchg
int
xchg
cld
je
adc
fwait
mov
jnp
jno
outsl
fmuls
adc
hlt
jno
sub
xor
decb
xchg
ret
or
aad
mov
das
xor
leave
call
mov
dec
lods
out
mov
sbb
mov
xchg
sbbb
add
mov
mov
or
pop
call
xor
xor
int
pop
and
lods
movsb
xchg
nop
stc
or
out
mov
xor
dec
xchg
cmp
jns
mov
icebp
hlt
xchg
pushf
sub
push
arpl
nop
bnd
test
xlat
mov
push
dec
test
inc
mov
adc
ds
push
or
inc
pusha
insb
aas
mov
mov
cmp
repz
cbtw
xchg
mov
outsb
jnp
scas
cmp
subl
sbb
dec
mov
fisttpll
out
sub
incb
sbbb
cmpsl
mov
dec
lock
push
or
xlat
sub
mov
pusha
imul
movl
loop
mov
movsb
sahf
lcall
addr16
das
pop
pop
insl
push
adc
hlt
mov
lock
pop
rcl
ds
idivl
xchg
mov
sar
dec
jne
inc
dec
inc
adc
shlb
mov
mov
ret
test
cmp
cmpsl
notl
mov
and
int
cltd
xchg
or
cld
and
push
cmp
pop
pop
clc
cltd
sbb
xchg
pop
fnstsw
arpl
cli
aaa
inc
jecxz
adc
inc
das
pop
mov
pop
sbb
aam
sbb
pop
pop
mov
xor
push
aad
mov
jmp
add
cmp
xchg
std
pop
mov
cwtl
aad
add
sub
or
and
movsl
rorb
add
mull
nop
mov
dec
mov
push
dec
mov
pushf
cmp
xchg
enter
dec
daa
inc
mov
mov
push
pop
leave
pop
psrlq
fs
scas
stos
mov
fs
orb
adc
int
cmp
repz
jns
cmp
dec
xchg
js
sbb
ja
or
and
mov
pop
xchg
adc
cmp
sbb
lea
in
movups
in
into
lcall
xchg
pop
inc
and
mov
std
pop
mov
sub
out
call
xchg
fcomps
push
push
mov
mov
iret
xchg
jg
loopne
jno
mov
push
daa
xchg
jbe
movsl
cmp
pop
stc
les
ljmp
iret
dec
sbb
jmp
mov
ljmp
inc
mov
mov
movsb
add
test
lods
cmpsl
lahf
stos
and
test
xor
cmp
push
mov
mov
mov
sub
or
std
fdivl
shll
jmp
sti
ret
sbb
std
mov
fwait
pop
mov
dec
sub
pop
xchg
xchg
mov
nop
inc
push
mov
addb
push
adc
loope
btr
mov
dec
insl
ret
jge
js
push
cmp
std
sub
iret
cmp
mov
xchg
jae
in
dec
fwait
lahf
test
cmp
stos
shl
inc
ds
cmpl
jle
pop
jb
roll
xchg
sub
xchg
lds
cmp
gs
pop
pop
dec
sub
jo
lock
pushf
in
fistps
mov
and
loope
sahf
out
jnp
stos
mov
or
paddb
sbb
or
and
inc
fdivrp
sub
insb
repz
add
dec
insl
jae
cld
vgetexpss
fs
mov
sub
into
fadds
jg
sahf
fidivl
les
dec
xchg
xor
dec
rcrb
and
mov
mov
xchg
pop
dec
push
pop
jl
dec
adc
cld
push
add
rolb
fisttpll
cmp
stc
loope
dec
sub
std
mov
popa
and
mov
dec
pop
insb
in
mov
add
push
pop
dec
mov
cmpl
jge
push
int
add
add
add
mov
xchg
insb
and
pop
pop
inc
jge
and
decl
popa
rcrl
fwait
stos
call
sbb
int
mov
jl
loopne
aad
mov
jns
imul
cmpl
adc
dec
pusha
aaa
jecxz
sti
out
sbb
stc
stos
shl
mov
pop
push
pop
push
adc
test
xchg
push
pusha
js
lret
or
cmp
dec
xchg
dec
ja
call
cwtl
inc
out
mov
fmul
fidivrs
int
push
ret
and
cwtl
and
push
psubb
xor
incb
xor
push
out
mov
cmc
les
jb
int3
sarl
cmpsb
mov
lret
or
fisubrl
pop
sti
lret
dec
push
or
and
stos
sub
sub
mov
sub
out
sub
mov
push
out
pop
cmp
mov
add
adc
dec
test
imul
loopne
add
les
daa
push
and
mov
rol
push
mov
popa
pop
insl
pusha
sub
inc
enter
xchg
test
dec
push
clc
pop
ror
pop
dec
pop
call
aam
mov
cmp
xchg
mov
test
into
lds
test
push
stos
and
adc
dec
pop
cmc
dec
jns
sbb
insl
das
jnp
dec
loopne
outsl
jecxz
loop
xor
test
sbb
xor
loopne
jo
loope
movsb
mov
xor
roll
aas
jo
out
movsl
mov
push
adc
pop
fsubp
mov
cmp
leave
adc
fstpl
sub
lods
cmc
or
shlb
sub
dec
xlat
ret
push
mov
sub
in
add
sub
jae
popa
iret
pop
arpl
mov
movb
pop
xor
jno
into
lahf
bswap
add
enter
adc
jecxz
inc
mov
ret
push
in
faddl
popf
sub
mov
xchg
inc
pop
fisttps
imul
adc
mov
fists
sub
pop
mov
pop
rclb
dec
lods
testb
shrb
js
nop
push
mov
adc
push
adc
sbb
shrb
nop
sub
das
and
les
and
cli
call
jl
push
mov
jl
or
cltd
imul
aaa
or
inc
xchg
jl
inc
pop
stos
les
add
int3
sub
imul
lahf
pop
popf
adc
nop
lcall
mov
inc
push
loope
push
fwait
ja
lds
inc
test
popf
cmpsl
cmp
clc
repz
lock
xchg
add
push
movsb
stos
vmovdqu
pop
mov
mov
cs
pop
out
mov
push
sbb
aas
arpl
scas
add
sbb
dec
xchg
jnp
xchg
or
inc
loope
xor
bnd
and
adc
ds
ds
orl
add
icebp
enter
iret
fs
add
or
cmp
rcll
dec
add
imulb
inc
dec
mov
pop
mov
rcrb
and
pushf
mov
inc
mov
mov
lcall
ret
les
pop
jmp
jo
cmp
lods
int
mov
add
jl
adc
ljmp
lret
repnz
xchg
inc
push
and
insb
imul
push
cwtl
pop
call
mov
in
into
rcll
aam
sub
push
setb
push
shlb
push
add
sbb
gs
out
inc
add
inc
sbb
xchg
rolb
lret
sub
out
jnp
xor
xor
addr16
add
int
jb
xchg
adc
out
dec
sar
pop
push
xor
leave
and
fwait
leave
hlt
scas
add
fcmovnu
in
sbb
jns
mov
dec
mov
dec
lahf
xchg
push
or
cmpsl
jno
fnstcw
or
add
inc
adc
cmp
jb
daa
inc
mov
inc
cmpsb
iret
sbb
lahf
out
data16
hlt
fnstsw
daa
add
sbb
xlat
adc
out
jo
loop
loopne
cli
nop
icebp
lcall
xchg
mov
cwtl
addr16
push
jo
and
je
or
dec
loop
inc
mov
imul
inc
push
stos
shrb
push
jb
push
add
cwtl
ret
test
xchg
addr16
aam
clc
hlt
adc
pop
adc
pop
aaa
jns
xchg
aad
mov
push
pusha
jae
adc
jno,pn
ret
fcompl
mov
jae
cmp
pop
frstor
xor
mov
bound
fwait
arpl
out
xor
stos
inc
adc
mov
inc
add
cmp
pushf
inc
pop
repz
push
leave
cmp
lds
xchg
mov
ds
add
cmp
mov
xchg
mov
or
test
arpl
push
adc
push
or
jmp
iret
in
movntq
out
jne
aas
and
cwtl
lds
mov
mov
xor
xchg
cli
imul
or
xchg
fldenv
movsb
nop
sub
repz
jo
push
add
jae
mov
jns
push
pop
sarl
xchg
inc
mov
pop
fisubs
sub
cmp
sbb
xlat
jno
cltd
jg
and
ret
cwtl
ljmp
inc
daa
daa
movsl
lods
fcomp
pop
push
das
mov
dec
insb
leave
incb
in
aas
push
ffreep
lds
pop
shl
sbb
xchg
pop
in
jbe
push
stos
xchg
sbb
jmp
cmpsb
loopne
sti
jl
fldt
loop
and
jb
js
aaa
inc
add
cwtl
shrl
cmp
mov
and
lret
push
addl
fcmove
sbb
xor
xchg
xchg
nop
cmp
inc
xchg
push
sub
bound
dec
mov
out
repz
cmp
std
xor
mov
pop
ljmp
sub
mov
xchg
cmp
sub
shll
cmp
push
ds
mov
sub
sahf
imul
popf
cmp
std
jmp
movb
scas
stos
xorb
ss
fisttpl
cli
sbb
hlt
aad
lahf
in
out
shll
sub
add
aad
stos
jae
push
inc
mov
push
dec
jmp
xor
jae
cld
xor
pop
xor
insl
mov
pushl
mov
jp
cmpb
and
cmpsl
sub
xor
cmp
inc
jmp
and
push
xor
mov
fisubs
lahf
jo
pop
push
imul
ljmp
xchg
jmp
adc
in
mov
mov
fistps
push
pushf
cmp
lret
adc
pop
sbb
jecxz
adc
hlt
or
mov
cltd
dec
add
pop
xor
pusha
repz
std
fsubs
je
ja
and
lds
push
mov
loop
jg
pop
xchg
iret
inc
mov
mov
mov
ds
inc
cmp
adc
sub
adcl
mov
jb
xlat
sti
cmp
mov
in
xchg
or
mull
mov
jge
dec
xor
cli
ss
and
or
out
pop
loope
push
cmp
cmp
add
into
push
jmp
dec
popf
mov
sbb
ljmp
jecxz
pop
jmp
shrl
enter
pop
std
mov
cmpb
xchg
fimull
sbb
adc
stos
jae
movsl
les
jnp
add
mov
inc
dec
data16
jbe
test
mov
inc
movnti
add
popf
cmc
xchg
mov
lods
repz
push
mov
xchg
int
inc
sub
push
push
les
sub
loopne
loope
imul
dec
out
inc
negl
daa
js
pop
pop
cmp
lock
push
aaa
push
gs
adc
fadds
sub
imul
out
cltd
cld
jge
jne
pop
test
and
fcmove
or
fwait
add
dec
std
mov
cmp
pusha
cmp
cmp
xchg
jae
xchg
pop
aaa
pushf
mov
or
nop
or
cmp
cmp
mov
scas
lock
ljmp
fadd
adc
ss
in
cs
inc
mov
pusha
xchg
cmp
add
rcrl
cmc
sub
dec
insb
sub
sbb
adc
jns
add
and
fs
sarl
cmp
inc
lcall
mov
dec
aaa
ret
aad
cmp
adc
enter
pop
and
andb
mov
inc
int
in
arpl
mov
dec
mov
out
in
inc
imul
xchg
jg
fbstp
icebp
in
inc
inc
and
imul
or
sub
xor
mov
es
sbb
xchg
or
es
push
aam
ret
push
in
int
pop
addr16
mov
sbb
std
fdivrl
stos
sbb
fwait
push
xor
jno
stc
jle
lret
pop
xchg
rcl
or
and
pop
cmp
sbb
sbb
outsl
mov
jl
cmp
stc
mov
pushf
xchg
mov
sbb
cmc
sub
arpl
xorb
pop
push
xor
cmp
aas
pop
aaa
xchg
ja
pop
cmpsl
push
shrl
mov
imul
into
loop
dec
fbld
mov
mov
stc
pop
mov
ja
inc
call
cmpsl
pop
mov
xchg
xchg
das
out
testl
lahf
aaa
popl
mov
ja
inc
call
cmpsl
pop
mov
xchg
xchg
das
out
testl
lahf
aaa
popl
mov
ja
inc
call
cmpsl
pop
mov
cmpl
sub
pop
repz
jnp
imul
add
fbstp
call
das
pop
pop
dec
movsl
sub
xlat
jg
cmp
sub
sub
sbb
movsl
fimull
data16
daa
test
mov
out
xchg
clc
test
mov
cmpsl
sub
inc
or
addr16
aaa
pop
push
test
mov
out
clc
clc
xchg
neg
cmpsl
sub
cmp
fistps
gs
fstps
test
fwait
movsb
in
cwtl
xchg
call
ret
mov
ja
pop
sub
add
and
mov
mov
jge
xor
mov
stc
pusha
fdivl
fistl
ja
gs
repnz
notl
xchg
stc
inc
lahf
mov
sub
xor
insl
insl
dec
jecxz
or
lods
test
in
inc
mov
push
mov
xchg
xchg
cmp
addr16
dec
pop
insl
outsl
int
pop
fsubs
ret
pop
xchg
mov
hlt
xlat
inc
fsubrs
xor
js
lret
aas
sbb
xlat
or
les
xchg
xchg
cli
lret
xchg
pop
stos
push
mov
xlat
dec
scas
ja
mov
mov
mov
and
push
cmp
push
in
pop
cmpsl
test
mov
scas
call
mov
leave
imul
or
pop
pop
inc
test
fldl
jmp
negb
push
insl
push
je
push
pop
or
mov
xchg
mov
xchg
lret
movsb
lods
int3
dec
add
add
je
and
js
dec
aaa
pop
daa
test
mov
out
xchg
clc
xchg
mov
cmpsl
sub
inc
or
addr16
aaa
pop
daa
test
mov
out
xchg
clc
xchg
mov
cmpsl
sub
nop
xchg
aam
dec
xchg
mov
mov
pop
mov
insb
cmc
mov
push
pop
loope
jecxz
ret
fcoms
pop
fists
dec
sub
fistpll
xor
xchg
arpl
stos
jb
jns,pn
cmc
loope
insl
push
jns
imulb
inc
jg
ss
push
jge
pop
xchg
loop
adc
or
shrl
imul
jge
popa
inc
outsb
mov
xor
mov
push
cmp
cmp
lea
stos
lods
dec
fbld
subb
mov
mov
push
jb
and
mov
iret
test
cmp
or
add
dec
push
xchg
loopne
aaa
ret
ret
gs
lcall
clc
in
cltd
test
das
lds
imul
loopne
arpl
fsubrl
loop
add
cmc
sub
insb
sub
sub
xchg
add
xor
cltd
je
popa
test
mov
scas
jmp
lds
xchg
out
ret
jecxz
out
popa
dec
push
test
loopne
xor
push
jb
test
sti
in
jl
jecxz
sub
dec
pop
cmp
push
push
aad
jbe
fimull
in
hlt
dec
inc
hlt
andl
stc
in
sbb
mov
loopne
jecxz
je
jae
sub
call
insl
mov
arpl
sbb
repnz
pop
mov
out
loopne
and
push
mov
push
mov
sub
xchg
pop
scas
mov
stos
mov
adc
adc
daa
push
aad
outsb
test
lods
sub
sti
insl
push
xchg
adc
sub
repnz
int
cmp
stos
jmp
jns
add
push
push
pop
xchg
mov
xchg
out
fwait
jle
lods
push
insb
jae
jb
stc
xor
xor
nop
mov
outsb
ljmp
or
hlt
addr16
lcall
scas
jmp
sbb
in
out
jecxz
mov
jl
lods
sub
in
push
mov
mov
loop
jl
test
inc
aam
mov
and
xchg
ror
divl
loopne
lcall
push
cmp
lds
repz
je
into
hlt
fists
stc
fwait
aam
loope
unpcklps
fnstcw
mov
xchg
je
mov
lods
bound
jae
cmp
fnstenv
mov
jo
mov
out
lcall
xchg
push
bswap
test
ss
push
add
cmpsl
enter
outsb
insb
xor
scas
sub
pop
popf
popa
dec
xchg
bound
add
inc
inc
adc
push
pop
sub
adc
jmp
pop
inc
out
stos
or
arpl
push
movsb
or
inc
cld
adc
flds
into
xor
inc
sbb
xor
dec
shrl
movsl
mov
fists
imul
nop
shll
cmp
xorb
push
shll
sub
push
and
jae
in
push
mov
mov
and
xor
ljmp
bound
lret
mov
dec
aam
rorl
les
shr
insl
adcl
fdiv
daa
ja
dec
mov
ret
mov
xchg
ljmp
pop
xchg
or
inc
sub
aam
dec
ret
in
mov
add
flds
in
int3
cmp
adc
dec
repz
arpl
fxch
xchg
sbb
or
lods
inc
out
mov
leave
or
xchg
addb
add
dec
aad
int
xor
add
mov
stos
dec
inc
enter
add
and
cmp
sbb
cld
xchg
loope
adc
dec
test
cmp
insb
xchg
lods
xor
in
outsb
sarb
cmp
dec
mov
push
sub
inc
pop
addr16
push
jg
cltd
push
mov
fmulp
add
mov
ret
cs
jbe
out
add
mov
add
and
jb
jp
jbe
outsb
mov
xchg
jae
fsubrp
mov
jno
dec
rcll
adc
test
dec
sbb
inc
sub
fdiv
sbb
add
fsubl
push
inc
imul
sbb
mov
jl
cli
mov
int
xchg
jo
or
push
inc
movsl
lds
pop
jge
adc
push
cmp
lods
in
arpl
xor
push
das
stos
mov
enter
nop
sbb
sub
adc
fstpl
inc
outsb
int3
pop
outsb
push
and
xchg
rcl
pop
xor
out
pushf
stos
sbb
pop
push
mov
fmuls
nop
adc
sbb
xor
mov
rorl
lods
sarb
cld
test
std
ljmp
add
jp
xor
and
cld
inc
pop
std
cli
popa
arpl
das
hlt
or
stos
cmpsb
js
dec
cmpsb
push
xchg
shr
insb
dec
aam
push
mov
dec
xchg
cmc
ja
xor
sub
lock
xor
mov
insl
xchg
insb
pop
movsl
inc
je
or
dec
mov
sbb
loope
push
add
mov
mov
scas
fisttpll
popf
add
add
lret
cmp
stc
lds
xor
mov
daa
pop
leave
mov
and
fwait
sub
scas
cld
sarl
test
rcl
mov
mov
cmp
testb
and
xor
ret
jno
imul
xor
lret
xor
lods
cld
mov
push
in
rcrl
jp
aaa
mov
xchg
add
or
out
and
bound
push
popa
pop
int
bound
rolb
popa
cld
sarb
scas
cmp
or
mov
mov
and
por
into
nop
ja
adc
sahf
or
ja
mov
pop
mov
cmpsb
in
cltd
push
mov
or
add
into
imul
aaa
ret
ret
int3
lods
pop
sahf
outsb
and
pop
and
je
test
or
jns
fsubrp
je
sbb
outsl
push
out
mov
push
mov
imul
xchg
mov
pop
pusha
rclb
ds
sbbb
cmpsb
lret
in
xor
ds
xchg
jno
mov
lods
xchg
mov
fcomps
cmp
add
aas
add
mov
xor
call
ss
pop
stc
nop
push
pop
test
sbb
mov
mov
cld
push
subb
push
xchg
popf
pop
mov
cli
testl
or
sbb
lods
pop
pop
mov
lods
push
aas
and
scas
inc
pop
ss
das
and
movsl
loopne
fucomi
test
push
adc
inc
add
out
fisttps
push
out
test
mov
lea
adc
lret
test
xor
push
and
ret
out
sub
enter
lsl
cmp
pop
shlb
mov
sbb
bound
dec
rcrl
xchg
mov
or
sbb
and
fisttpll
dec
xchg
adc
arpl
adc
in
sarl
loope
cmpsb
test
mov
in
mov
loopne,pn
dec
cltd
test
inc
dec
or
fisubl
inc
lds
mov
loop
mov
aaa
cs
xor
popf
pop
mov
cmpsb
shlw
iret
lcall
test
imul
int3
inc
push
cmpsb
repnz
xchg
enter
mov
mov
xorb
dec
pop
xchg
jg
pop
ficoms
mov
cmp
push
lea
pop
cmovno
and
in
lods
popa
inc
inc
scas
add
dec
es
jae
pop
jb
jge
push
pop
outsb
inc
outsb
frstor
or
push
adc
lods
push
xchg
jae
cmpsl
xor
jo
loopne
cli
lds
mov
lods
sahf
jo
lods
outsb
inc
sarl
xchg
lret
dec
imul
popa
add
cli
jg
adc
je
loopne
mov
mov
aaa
and
sarb
sub
sbb
pop
pop
or
xor
js
mov
xor
fdiv
je
inc
sub
or
pusha
movsb
movsb
and
call
aad
or
insb
xor
out
mov
movsl
enter
push
pop
mov
pop
and
ds
sub
jbe
call
call
adc
pop
lock
sub
inc
mov
or
lret
ret
cmc
loope
ds
jbe
lods
fs
add
jnp
adc
mov
std
loopne
sub
jae
push
dec
mov
jns
stos
lods
movl
jle
sub
fwait
inc
leave
fiadds
add
add
and
pop
out
mov
lcall
popa
xchg
jg
push
test
lods
rorl
out
xorb
cld
call
sub
pushf
loopne
cmp
fbstp
dec
mov
adc
push
lcall
mov
les
lods
mov
and
mov
cmc
pop
andl
push
or
stos
mov
in
cs
shll
xor
aaa
lods
jno
mov
out
test
sub
test
icebp
dec
jne
push
xor
insb
ficoms
in
stos
push
mov
addr16
inc
cld
cmc
test
pushf
cltd
or
mov
xor
repz
rorl
daa
lret
xchg
outsb
pop
sti
imul
in
adc
int
sbb
xor
cltd
cltd
cld
fsubrs
cs
push
lret
test
test
mov
decl
and
xchg
sub
loopne
push
dec
mov
dec
inc
mov
add
stos
daa
daa
mov
ss
adc
dec
cmpsl
sub
fisubrs
pop
or
adc
aam
mov
rolb
shll
pushl
jecxz
aaa
ret
sub
scas
mov
xchg
sub
aad
jle
inc
movsb
pop
insb
call
pop
sbb
push
inc
pusha
dec
outsl
add
mov
out
nop
xchg
inc
rclb
mov
jno
scas
loopne
out
sarb
in
mov
jnp
popa
leave
inc
sti
daa
push
inc
sbb
xchg
mov
mov
push
movsl
pushf
fists
ss
sub
pop
adc
stos
js
sub
ret
mov
mov
xor
inc
push
lret
inc
xor
shrl
clc
ljmp
cmpsl
jno
mov
loop
fscale
out
test
dec
mov
inc
repnz
push
fstpl
cwtl
mov
in
mov
xor
scas
sti
jb
jns
ret
cltd
ss
sub
xchg
lcall
repz
addr16
push
lret
sbb
add
xchg
dec
sbb
mov
xchg
mov
stos
int
jecxz
sti
mov
cli
popa
pop
aam
clc
rclw
ret
jae
jb
sets
icebp
jnp
std
cwtl
mov
lds
ficomps
sub
mov
shrl
js
sarb
jecxz
subb
call
mov
and
js
mov
daa
mov
xchg
rep
cmp
and
orb
hlt
xchg
adc
into
insb
jb
adc
daa
imul
les
cmp
cmp
test
call
loope
adc
dec
das
in
gs
and
push
icebp
test
shlb
add
in
lds
sub
loopne
int3
shrb
mov
shlb
mov
cltd
loope
add
or
lahf
out
inc
jnp
nop
push
mov
test
dec
xor
sub
mov
jns
shlb
lock
sbb
cmp
cmp
push
add
outsl
inc
jnp
add
addr16
inc
pop
xlat
pop
or
mov
add
loopne
mov
and
xchg
inc
test
andl
dec
lock
loop
fdivrp
inc
repnz
mov
imul
ret
in
mov
icebp
sub
push
in
xchg
inc
loop
dec
popf
ljmp
mov
cld
jb
push
dec
cmp
loop
test
pop
inc
ljmp
lret
ret
mov
int3
aad
cmp
lods
popa
and
and
cmc
jecxz
xor
and
rolb
repz
push
les
popf
daa
test
movsl
sbb
in
scas
mov
add
mov
cmp
add
sub
xor
push
mov
testl
jecxz
lods
dec
aad
mov
cmp
xor
fcmove
pop
pushf
cmp
mov
sub
imul
out
bound
jle
jo
sbb
aam
arpl
lea
fisttpll
scas
mov
iret
popa
les
ret
rclb
lock
push
cmp
cld
cmp
adc
or
sub
push
push
xchg
sub
out
lahf
jge
push
lods
xchg
lret
jb
mov
push
pop
jb
inc
cmp
and
andb
faddl
add
ss
cmpsl
xor
xchg
or
mov
test
xchg
adc
push
mov
push
sub
lods
rclb
cmc
add
inc
push
mov
rcll
sub
add
or
add
push
jbe
fs
mov
dec
mov
ret
imul
fidivrl
jbe
mov
outsb
mov
sti
and
imulb
sub
ror
pop
movsl
xchg
dec
imul
ljmp
outsl
dec
ja
xchg
arpl
adc
int
in
jns
repz
negl
inc
jns
jl
sbb
shll
mov
hlt
insl
cmc
push
lods
cmpsl
scas
push
pop
dec
cmpl
lea
loope
scas
jne
or
push
jmp
xor
xchg
lods
fistps
inc
pop
clc
mov
push
nop
cltd
in
roll
cmpsl
repz
jmp
fbld
cmpsb
xchg
pop
sbb
jp
add
jnp
xchg
sub
push
adc
mov
loop
push
nop
fisttpll
in
mov
inc
pop
nop
sub
add
pushl
push
xor
mov
push
idivb
in
in
out
loopne
hlt
fidivrl
cmp
cmp
push
cld
jle
movsb
test
test
sbb
outsb
mov
iret
add
pop
nop
adc
cmp
xor
sahf
ret
ret
add
out
je
xlat
daa
jmp
jnp
sub
or
push
addr16
mov
xchg
les
pop
cltd
andb
mov
movsb
push
imul
fwait
jecxz
data16
push
sub
das
jae
xchg
jnp
cmp
mov
call
jl
daa
dec
aaa
inc
imulb
jle
dec
xlat
dec
push
mov
mov
push
js
push
pop
test
xor
push
loop
cmp
pop
adc
xchg
out
mov
pusha
clc
pushf
jl
mov
xor
sar
lods
cwtl
xchg
jae
add
in
adc
push
call
cmpsl
out
in
mov
inc
test
lcall
pop
mov
fmul
popa
sbbb
sbb
sub
jle
sub
push
adc
push
int
xchg
dec
imul
xchg
push
push
jg
mov
clc
hlt
jo
gs
stos
ret
imul
and
mov
and
pop
push
xor
or
inc
jmp
pop
stos
mov
outsl
pop
cs
out
mov
lods
int
out
and
mov
jne
pop
add
imul
add
in
jno
xchg
lcall
fidivl
ja
das
push
and
mov
or
fstl
xchg
xor
mov
iret
push
mov
outsl
loop
jmp
or
xchg
movsl
adcb
xor
jo
sbb
or
out
and
inc
imul
xchg
arpl
pop
pop
ret
adc
cli
addr16
in
and
mov
sbbl
pop
hlt
out
push
adcb
push
addr16
or
or
push
jl
push
or
rorl
cmpsl
adc
and
adc
shll
lret
cmpsl
inc
mov
pusha
mov
mov
sub
fwait
xchg
sbb
pop
insb
xchg
bound
stc
jae
sbb
pop
cld
push
pop
shr
push
cmp
out
loop
pusha
xchg
xor
push
adcb
cwtl
adc
fcmovu
inc
leave
mov
ret
arpl
dec
fmuls
cli
ficomps
jnp
test
mov
mov
ds
aam
mov
push
inc
jns
mov
mov
test
mov
xor
mov
cmp
les
clc
scas
mov
mov
push
pop
dec
cli
sbb
xor
adc
push
add
xor
outsb
sgdtl
fcom
or
ja
test
jns
out
std
cld
or
inc
popf
cmpl
loopne
cmc
out
mov
xchg
inc
and
nop
bound
sbb
pop
int3
in
sbb
imul
mov
adc
pop
fdivrs
jg
lahf
or
xchg
sub
sub
xchg
or
in
jge
jb
add
outsl
ljmp
lcall
xor
ja
nop
xor
xor
rcrl
cmp
inc
mov
pop
mov
sahf
ljmp
mov
pop
out
sbb
mov
ret
pop
pusha
lcall
mov
int
pop
jns
fcmovnu
add
fcoml
dec
cmp
movsb
fistl
xlat
imul
addr16
repnz
repnz
in
mov
inc
sub
into
xchg
and
ret
cld
repz
test
dec
rcr
adcl
dec
call
icebp
mov
testl
xchg
adc
jecxz
pop
lcall
xchg
fldcw
loop
mov
sbb
sbb
sahf
mov
xchg
sub
scas
mov
notl
mov
shrb
sbb
subl
or
aad
imul
add
and
shrl
add
push
sahf
xchg
cmpsl
mov
push
stos
adc
pusha
add
sub
loope
xor
out
push
inc
xor
pop
ljmp
addl
sub
es
inc
nop
test
ret
mov
stos
xchg
loopne
fidivs
ljmp
int
pop
and
mov
pop
movsb
mov
dec
in
mov
push
jg
sub
mov
push
fs
jo
inc
xor
mov
loopne
jo
dec
shl
mov
mov
je
addb
jb
dec
and
adc
lret
add
shrl
xchg
movsl
mov
shrl
or
enter
push
out
xchg
out
xchg
testb
loop
sbb
mov
pop
push
fadd
add
fisubl
les
push
mull
js
loop
jno
add
out
icebp
cli
and
sub
inc
jno
lods
imul
xor
es
adc
sti
stos
outsl
sti
push
test
push
std
xchg
pop
adc
rolb
sbb
xchg
sub
test
rclb
cmpsb
pushf
nop
inc
jbe
jo
mov
dec
cmc
loopne
mov
xchg
sub
in
mov
or
add
adc
and
faddl
iret
sbb
fwait
mov
movsb
mov
mov
mov
xchg
inc
clc
fistpl
push
xchg
cltd
add
jp
jge
loope
repnz
push
push
aaa
sbb
or
mov
mov
pop
stc
dec
stos
lcall
gs
lcall
push
inc
mov
iret
add
test
mov
sarb
pop
sti
dec
aas
dec
pop
cmc
pop
sahf
xor
cmpsl
fildl
and
pop
xchg
in
xchg
add
mov
xchg
mov
daa
in
or
xchg
push
mov
aad
push
add
xchg
cmpsl
push
inc
inc
shr
fsubrs
xchg
loopne
in
dec
aaa
ss
jmp
xchg
jl
ja
push
lcall
xor
mov
out
xchg
lcall
movl
cmp
rcrl
fsubrs
clc
add
adc
mov
ret
or
jp
sub
mov
inc
pop
rorb
out
jge
sub
mov
cmp
loope
mov
or
push
adc
cmp
sbb
sub
jbe
test
fsubr
insl
mov
fisubs
dec
cmc
ss
std
xchg
fmuls
sub
mov
mov
iret
sbb
fcmovb
or
inc
daa
jl
sub
rcll
mov
outsb
xor
dec
imul
mov
jns
adc
xchg
lods
int3
outsb
aam
cmp
and
mov
push
or
sbb
hlt
bnd
mov
mov
mov
xchg
testl
test
push
subl
shrb
bound
pop
pusha
ss
jl
pop
data16
xchg
cmpsb
dec
mov
adc
push
cmc
sbb
push
shl
stos
pop
stos
lret
rcrl
leave
lcall
push
mov
fcmovnu
push
push
xlat
rcrl
sbb
call
in
sbb
nop
jg
jb
pop
leave
subl
sbb
or
sbb
pop
js
dec
aaa
pop
daa
test
mov
out
xchg
clc
xchg
mov
cmpsl
sub
inc
or
addr16
aaa
pop
daa
test
mov
out
xchg
clc
xchg
mov
cmpsl
sub
js
pop
js
dec
aaa
fsubs
test
mov
out
xchg
clc
xchg
xchg
fsubs
or
pushw
pop
dec
mov
daa
test
mov
nop
cwtl
pop
mov
dec
test
pop
pop
dec
dec
jp
push
adc
dec
sbb
sub
fmul
int3
cli
cld
ljmp
mov
dec
dec
jp
push
sbb
or
cmp
sub
fmul
lods
cli
cld
ljmp
stos
lods
pop
pop
dec
dec
jp
push
sbb
or
cmp
sub
je
int3
mov
stc
jecxz
into
ret
lods
cs
sub
jp
add
shl
mov
lock
add
push
mov
outsb
mov
mov
test
xchg
xchg
sbb
ret
xor
xor
mov
in
sti
std
movsl
add
pop
adc
fcomp
lock
shlb
ljmp
dec
cmp
and
mov
sbb
sub
sub
inc
mov
lret
jae
inc
and
or
xchg
in
sub
sub
fwait
ja
popa
sub
mov
jo
inc
stos
and
mov
inc
sbb
sbbl
in
sub
mov
dec
jge
test
cltd
pop
dec
dec
jp
push
sbb
or
cmp
sub
fmul
int3
cli
cld
ljmp
mov
sub
sub
jg
gs
jb
jl
mov
scas
stos
sbb
lret
fistpll
ds
sbb
jg
inc
push
test
lods
mov
insl
out
out
fld
cld
cmp
adc
or
or
cmp
sub
fmul
int3
cli
cld
ljmp
mov
dec
dec
jp
push
sbb
or
cmp
sub
fmul
int3
cli
cld
ljmp
mov
sub
lret
mov
inc
mov
imul
xchg
mov
mov
fcoms
xchg
inc
ljmp
mov
aaa
mov
fadds
stos
adcl
sbb
push
dec
xlat
popa
shr
aas
push
lea
pushf
xor
inc
mov
dec
dec
inc
les
cli
ret
ljmp
mov
shll
cmp
testb
fsubr
in
cmp
lea
inc
sub
ret
lret
xchg
outsl
or
mov
jae
cmp
sbb
adc
xor
push
jne
cmp
mov
mov
int
add
testl
push
jmp
sub
xchg
mov
aaa
roll
jno
jp
mov
sub
lods
xor
addr16
stc
jl
cmp
push
je
repnz
push
inc
int
mov
xchg
xchg
adc
lret
je
jge
popl
cmp
mov
xchg
sbb
inc
or
aam
stos
fcomps
pop
daa
inc
jno
iret
mov
fs
mov
lea
mov
enter
testl
mov
xor
subb
fstp
loopne
in
jmp
inc
imul
push
ret
cmc
sbb
in
lea
aaa
mov
adc
aam
mov
pushf
psrlq
lcall
jns
hlt
hlt
iret
and
ja
xchg
dec
fistps
out
jb
loopne,pt
mov
cs
pop
pop
mov
hlt
pop
push
icebp
jns
aas
and
push
cwtl
sbb
adc
push
adc
xor
mov
push
hlt
pop
sub
xor
pusha
jg
cld
idivb
pop
cs
mov
cmpsb
dec
jecxz
xor
cltd
sbb
lea
jle
cmp
xlat
es
jnp
rcrb
add
xchg
xchg
sbb
xchg
aaa
mov
or
mov
fnstenv
pusha
sbb
lea
scas
stos
sbb
cmp
and
push
in
xchg
inc
add
or
in
int3
push
test
adc
jo
push
das
sbb
mov
pop
jno
test
adc
dec
dec
inc
aam
adc
xor
push
mov
nop
hlt
xor
jmp
jae
jmp
icebp
scas
into
fidivrs
and
ds
jl
in
into
jb
pop
cmp
cmp
loopne
or
icebp
sbb
insb
add
xor
mov
int3
sbb
jnp
add
pop
rorb
jg
push
test
les
mov
nop
data16
push
and
and
cmpsl
mov
sbb
dec
pushf
cltd
andb
cmp
or
fwait
dec
ficoms
dec
mov
enter
sub
jge
push
lahf
movsl
outsl
adc
je
rorl
push
adc
push
cltd
mov
data16
add
pop
fimull
cs
jmp
push
das
enter
imul
pop
sar
js
jl
adc
mov
dec
orl
mov
aam
fistpll
cli
fnstenv
xchg
add
adcl
xor
iret
dec
sbb
std
push
pusha
in
jb
sarl
inc
mov
push
push
idivl
mov
mov
push
loopne
xchg
out
je
mov
orb
sarl
in
nop
hlt
push
jmp
push
std
sahf
sub
mov
xorl
sub
mov
arpl
or
push
imul
or
adc
movsl
xchg
or
add
insl
outsb
int
dec
dec
popf
inc
dec
nop
insb
incl
mov
cmpsb
xchg
mov
iret
mov
cli
addr16
ljmp
dec
or
pop
js
sbb
fs
or
sti
std
fcomps
es
stos
xchg
adc
je
mov
and
lods
dec
ret
mov
adc
sub
cmp
cmc
inc
pop
fwait
ror
stos
xchg
cmp
negl
mov
and
cmc
mov
sub
dec
lret
mov
mov
outsl
enter
and
inc
dec
adc
xor
insb
aam
adc
fst
mov
outsl
das
fbstp
mov
cmp
cs
adc
fwait
iret
ljmp
sub
adc
adc
idivl
push
pop
int
xor
lods
sbb
and
and
fsubrs
push
jne
cld
pop
sbbb
out
xor
pusha
add
push
cmpsb
ret
mov
lds
add
jl
ror
les
add
inc
iret
cmc
pushf
lcall
push
aad
sbb
sbb
adc
sbb
xchg
nop
dec
mov
fdivl
cld
loopne
stos
andl
xor
inc
rorb
cld
xor
fmuls
jo
push
lret
adcl
pushf
repnz
cmp
les
cmp
cmp
and
movsl
sub
movsb
mov
push
clc
out
and
lahf
push
xchg
jle
inc
push
iret
int3
jecxz
mov
jecxz
hlt
fildl
jno
lcall
mov
cmp
mov
sbb
mov
pusha
fmuls
push
xchg
inc
mov
adc
movl
cmp
aad
stos
lea
cmc
stc
ror
xchg
dec
xchg
pop
stos
mov
sbb
and
test
fisubrs
jmp
nopl
in
adc
jno
mov
xchg
jl
fwait
inc
mov
pop
cmpsb
nop
mov
leave
js
mov
stos
mov
inc
shr
insb
pop
dec
loopne
jns
out
sbb
xor
leave
and
js
aaa
xchg
dec
cmp
sbb
mov
pop
push
out
rolb
sub
push
cmc
movsl
sbb
dec
popa
cmp
scas
icebp
leave
in
dec
push
jecxz
les
inc
and
adc
push
ljmp
mov
mov
inc
push
xchg
cmp
xor
xor
xchg
add
rolb
rcrb
arpl
mov
gs
cmp
ja
clc
inc
dec
sub
xchg
adc
in
push
adc
out
push
test
xchg
add
push
push
adc
jecxz
sub
fists
jns
xor
adc
int
jae
in
idivb
cmp
xlat
sbb
pop
in
or
sbb
pushf
insl
jno
mov
and
and
imulb
repnz
addr16
push
mov
pop
mov
ljmp
test
xchg
push
lcall
or
outsl
mov
subl
les
jecxz
in
data16
mul
push
jnp
shlb
jnp
inc
xchg
jl
pop
jle
jle
jbe
lret
inc
pop
out
rcll
inc
aas
push
mov
push
outsl
lods
outsl
fstps
pop
lahf
stc
sbb
lods
jg
pop
shrb
sbb
xor
fidivs
aad
mov
cmpsl
xchg
nop
xor
ja
xor
loop
scas
inc
dec
cmpsl
xor
negl
and
cmp
enter
je
cmp
push
push
mov
lock
jge
repz
mov
imul
cmp
xchg
imul
cmc
inc
ds
dec
es
cs
and
push
int3
arpl
xor
icebp
adcb
dec
in
std
jne
inc
pop
push
roll
or
mov
dec
imul
push
ss
adc
push
cld
jg
repz
add
sbb
or
add
push
mov
fs
fildl
push
pop
sub
push
loopne
pop
inc
out
and
call
in
fcomps
sbb
stc
jg
fwait
sub
std
inc
imul
push
fldenv
imulb
push
mul
adc
sahf
mov
leave
xchg
sub
out
gs
scas
adc
xchg
cmp
rcrb
outsb
ds
adc
icebp
jno
arpl
cmp
push
movsb
mov
cmpsb
add
adc
rcrb
add
adc
adc
adc
lahf
cmp
pop
jle
test
push
lahf
push
xor
inc
iret
sub
inc
gs
out
pop
mov
pop
shrb
out
mov
mov
pop
inc
push
pop
mov
fcomp
lahf
pop
lret
cmp
hlt
jle
gs
aam
loop,pn
das
cmp
sbb
jne
jae
insb
mov
or
fadd
xchg
cmp
sets
cmp
stos
loope
lcall
or
mov
mov
in
push
pop
and
ss
jbe
xor
mov
mov
push
xor
data16
mov
aaa
lcall
pushf
orl
ljmp
addr16
clc
mov
ja
fs
arpl
xchg
sbb
push
jle
insl
pusha
data16
cld
or
inc
clc
xlat
roll
sbb
mov
or
ja
fwait
or
int
sub
jl
mov
lds
sbb
loope
dec
enter
xor
mov
push
loop
call
insl
lret
adc
cmp
insb
adc
aas
insl
sbb
dec
xchg
mov
sub
jmp
or
stos
pop
sub
jo
mov
jne
jae
imul
mov
arpl
sub
not
mov
mov
xor
stc
repz
ja
dec
mov
mov
out
fincstp
cmc
add
enter
xchg
ja
add
or
sti
lret
push
cmp
mov
jecxz,pt
push
nop
lret
out
fmul
decl
mov
out
mov
std
shrl
sbb
add
jmp
and
negb
jne
sub
cmp
add
add
push
lods
aaa
loope
test
and
mov
sbb
stc
or
test
adc
adc
sub
in
popf
cltd
mov
inc
sub
insl
ljmp
ret
cwtl
pop
xchg
xor
and
in
mov
ret
imul
push
ja
inc
inc
dec
or
lods
cmpsb
test
out
push
or
push
pop
pop
inc
jle
rolb
lods
or
mov
out
push
and
inc
ds
push
jg
stc
mov
push
add
push
iret
in
mov
loopne
test
mov
and
mov
imul
insl
xor
mov
je
fs
aad
xchg
mov
das
ficomps
lock
mov
movsb
inc
out
popf
test
mov
pusha
inc
sarb
repz
xchg
daa
fdivp
out
mov
scas
fnsave
test
pop
sub
ret
or
int3
hlt
and
rorl
aaa
jecxz
popa
addr16
lea
jl
test
aam
sbb
test
repnz
xlat
std
out
adc
mov
xchg
push
lods
sbb
xlat
repnz
and
loopne
jp
jo
jp
scas
in
int3
inc
mov
cmp
aas
orb
add
test
add
in
loope
cmpsl
pusha
cwtl
jns
push
or
insl
iret
rorb
add
std
push
sti
shl
cld
std
jg
xchg
pop
xchg
loopne
repz
pushl
jo
jmp
sarl
mov
and
jns
pop
js
lods
mov
out
daa
xor
and
sbb
pop
xor
stos
mov
dec
push
aad
fstpt
inc
mov
mov
fs
clc
aam
mov
sub
mov
or
loope
xor
cs
dec
mov
rcll
mov
push
push
mov
roll
add
push
pushf
mov
cmpsl
ds
outsl
and
test
or
mov
jno
dec
push
int3
lods
adcl
or
jnp
sub
rorb
andb
adc
inc
inc
mov
push
dec
pusha
and
std
out
mov
insb
das
pop
ss
data16
sub
cmp
and
ret
mov
cmp
xor
sub
shrl
push
rorb
fwait
out
lret
leave
iret
js
mov
cli
add
fimull
xor
js
pop
push
dec
or
adc
inc
mov
add
pop
repnz
mov
cli
xor
inc
cmp
add
mov
mov
ret
and
and
push
xchg
lock
jecxz
rcrl
data16
add
mov
add
jns
xchg
stos
fmul
push
xor
lahf
push
repnz
rcrb
push
and
jb
lcall
nop
fidivrs
or
pop
stc
xor
cmc
dec
fdivrl
jp
sbb
ret
cmp
or
pop
cmp
lahf
mov
mov
scas
lahf
pop
inc
outsb
xlat
mov
adc
push
fldenv
inc
mov
imul
pop
push
js
sbb
mov
sahf
sub
mov
imul
addr16
cmp
jecxz
jo
insl
push
mov
inc
sub
lret
lret
gs
mov
paddq
js
push
sbb
and
dec
lret
icebp
cltd
mov
scas
addr16
repz
mov
jbe
popa
icebp
leave
je
push
cltd
mov
mov
add
sub
ds
push
pop
sub
inc
or
shll
adc
pop
loope
sti
mov
outsl
das
mov
mov
pop
jno
xchg
cmpsb
jmp
xor
dec
and
out
clc
jmp
ficomps
in
mov
out
sbb
arpl
roll
mov
add
jae
scas
mov
jge
sahf
fstpt
dec
fs
push
jae
or
into
nop
mov
stos
movsb
fidivrs
out
negl
mov
out
repnz
in
in
adc
or
xchg
mov
inc
xchg
sub
xor
mov
sahf
and
inc
and
fucomip
enter
inc
adc
and
sub
into
mov
nop
xchg
sub
enter
xchg
ljmp
or
dec
cmpsb
int
fidivl
loopne
popf
push
fisttpll
scas
fldl
mov
cmp
xlat
in
xlat
xchg
mov
int
std
add
mov
inc
xor
mov
cmp
mov
fildl
daa
mov
sub
mov
in
mov
jmp
push
fdivs
pop
jg
mov
push
enter
shll
mov
inc
inc
lods
scas
repz
mov
cltd
push
or
dec
cwtl
and
or
pusha
sbb
and
sub
xorl
xchg
lret
loopne
add
shl
repnz
in
fsubl
mov
mov
imul
push
add
adc
stos
add
and
lret
lods
push
dec
sub
jmp
sbb
pushf
cmpsb
xchg
dec
mov
pop
mov
jo
shlb
inc
cmp
fadd
rcrl
int3
sub
repnz
adc
mov
add
outsb
add
repz
std
jb
xor
mov
jnp
out
ret
jae
push
out
repz
or
stos
sbb
stc
mov
fidivl
rcpps
sti
cmpl
sub
push
fiaddl
das
mov
inc
loop
pop
mov
mov
fildll
popa
cmp
int
js
mov
fnstsw
arpl
inc
fs
mov
hlt
in
aam
std
adc
ret
cmpsb
in
sbb
fcomps
sbb
sbb
faddl
cmp
mov
add
lods
clc
push
cmp
outsl
lret
fistps
mov
jbe
push
stos
loopne
bnd
daa
adc
push
fdiv
sub
cmp
out
mov
test
jl
dec
mov
mov
pushf
mov
sbb
or
jecxz
adc
popl
adc
test
pushf
inc
jl
popf
out
cmpsl
xchg
call
mov
fildl
mov
aaa
pusha
dec
mov
std
in
xor
test
sbb
mov
lahf
push
sub
push
lods
fdivs
aam
push
dec
pop
std
dec
cwtl
rcll
mov
pop
insl
push
aaa
xchg
je
adc
cmp
mov
jnp
and
test
test
xchg
popa
rcll
mov
mov
pop
mov
xchg
adc
call
lds
in
xor
adc
cld
sub
jmp
jnp
xor
aad
rcrl
jmp
pop
movaps
test
add
jmp
test
dec
hlt
xchg
xchg
dec
insb
leave
rorb
rcrl
aam
mov
cmpsb
pop
flds
fbld
inc
frstor
imul
mov
das
mov
mov
scas
sbb
pop
fcmovb
cmc
add
push
lea
inc
popf
add
rorb
jmp
iret
jnp
cmp
and
lahf
sub
mov
test
push
sbb
xor
repnz
push
jo
xchg
loopne
jo
cmp
in
ja
mov
in
jmp
jmp
jg
mov
adc
xchg
cmp
out
rcll
pop
fildl
mov
in
xor
das
add
push
adc
dec
ds
insl
jecxz
gs
and
fimuls
sahf
pop
mov
clc
cli
sub
push
cmpsl
pop
dec
or
rorl
loopne
lea
mov
push
cmpsb
xor
js
xor
shlb
rol
push
shl
lahf
jge
or
or
movsb
push
out
or
call
dec
dec
scas
int
divb
nop
call
pop
leave
sbb
jmp
scas
jo
jb,pt
push
repnz
push
xchg
sahf
mov
rolb
in
jae
bound
ljmp
cli
and
inc
insl
dec
inc
adc
mov
out
xor
jb
mulb
or
mov
sub
inc
jo
or
dec
mov
adc
arpl
lahf
aaa
shlb
dec
pop
cmp
lods
out
and
dec
lret
popa
pop
or
cmc
cwtl
and
pushf
cwtl
mov
jb
or
jne
pop
jle
jge
xor
dec
cmp
icebp
or
push
movsb
lea
jno
mov
and
mov
roll
vcvtdq2pd
cmp
mulb
scas
sbb
pop
xchg
lds
pop
inc
loop
jcxz
cmp
add
inc
sarb
ja
mov
das
xor
inc
push
cmp
sbb
mov
xchg
dec
add
pop
movsb
xlat
ja
dec
sar
mov
aaa
les
mov
cltd
push
jle
mov
push
andb
lret
lock
cs
xchg
repz
out
jo
adcl
sub
sti
jp
out
pop
cwtl
rcrl
cmp
aaa
push
aam
mov
cmp
out
lcall
dec
mov
xchg
lahf
fsubr
add
pusha
and
stc
cld
mov
adc
lods
mov
je
ja
fidivs
dec
jle
or
pop
mov
pop
jmp
rol
xor
outsb
adc
push
lea
leave
sub
pop
mov
jns
std
pop
int
movsb
lea
fwait
cmp
push
fcomp
hlt
lods
push
inc
jnp
mov
int
push
cmp
adc
shll
dec
scas
mov
in
mov
gs
mov
in
dec
insb
dec
pushf
lods
stos
icebp
mov
fcomp
in
cli
cmp
jle
jo
sub
pop
jo
xchg
int3
in
mov
jmp
xchg
push
test
js
lret
jle
add
dec
xchg
sbb
xchg
int3
popa
jne
ja
sbbb
test
pop
rolb
stos
enter
je
mov
lret
mov
xchg
out
dec
lahf
int
int
mov
inc
scas
mov
sub
dec
subl
add
loop
stc
fsubs
lods
hlt
mov
popa
lret
sub
mov
inc
test
sub
cltd
rcr
and
lcall
inc
jl
push
std
mov
jno
lods
xchg
cmpsb
dec
rorb
mov
pop
add
and
fistps
add
or
pop
sti
data16
aad
xor
mov
mov
cmp
hlt
mov
lret
mov
mov
pop
iret
test
inc
pop
pop
leave
cmp
movb
mov
adc
insb
inc
and
imul
shl
imul
icebp
or
jnp,pt
lods
jnp
ficompl
lcall
loop
sub
rolb
xchg
mov
sbb
mov
nop
cmp
jl
dec
or
stc
jnp
sub
imul
add
out
mov
ds
inc
jns
das
mov
shl
adc
and
jns
andb
sub
addl
inc
jne
xchg
int
insl
inc
test
std
push
adc
inc
fcomp
loop
jmp
ror
int3
xor
xchg
dec
pop
inc
xchg
cltd
shl
inc
add
xchg
mov
js
outsl
sbb
jecxz
orl
dec
inc
xlat
fsts
mov
fbld
int
push
mov
add
aaa
sub
fs
cld
fstpl
imul
arpl
jno
adc
in
dec
inc
jl
insb
sbb
or
cmp
sub
fmul
int3
cli
cld
ljmp
mov
dec
dec
jp
push
sbb
or
cmp
sub
fmul
int3
cli
cld
ljmp
mov
dec
int3
jp
push
sbb
mov
cmp
sub
pop
lret
cld
jmp
lcall
lods
pop
pop
dec
dec
jp
push
sbb
or
cmp
sub
fdivl
fwait
in
adc
jae
inc
push
push
fcmovbe
lret
imul
out
ret
iret
cmpsb
pop
push
dec
inc
jp
push
sbb
or
sub
fcmovbe
lret
imul
out
xchg
mov
pop
push
dec
inc
push
jbe
data16
or
cmp
sub
fcmovbe
lret
imul
out
xchg
mov
pop
push
inc
data16
imul
lret
xchg
cwtl
or
push
mov
mov
inc
cwtl
dec
nop
adc
adc
fidivs
fidivs
movntq
mov
push
jns
mov
fs
addr16
pop
lea
ss
and
inc
adc
add
mov
daa
pop
xchg
and
mov
leave
ljmp
imull
lcall
negb
pop
push
testl
sub
and
and
sbb
xchg
cmpl
adc
push
xchg
fimuls
inc
fidivl
aas
jbe
push
repnz
pop
dec
test
and
or
das
es
cmp
inc
es
lret
imul
out
xchg
mov
pop
push
dec
inc
jp
push
sbb
or
cmp
sub
mov
mov
jmp
sbb
dec
das
sbb
push
or
arpl
mov
inc
fsts
mov
repz
mov
adc
cmp
das
or
pop
imul
scas
mov
sub
lcall
cmpsb
pop
push
dec
inc
jp
push
sbb
or
cmp
sub
fcmovbe
lret
imul
out
xchg
mov
pop
push
dec
inc
jp
push
sbb
or
cmp
sub
fcmovbe
outsl
roll
into
aaa
inc
push
es
add
mov
xor
sub
cmp
xchg
cmp
inc
jne
imul
xor
fimuls
nop
inc
sbb
jae
loopne
mov
and
int3
sbb
iret
jns
jge
cmp
pop
aaa
add
xor
ljmp
push
jg
das
cltd
xchg
iret
jl
addr16
call
in
xor
cmp
sub
outsb
and
push
addr16
fisttpl
xor
mul
inc
sti
lock
imull
mov
inc
popa
sub
xchg
mov
int
mov
cltd
lock
push
outsb
push
lcall
inc
sub
xor
dec
imul
lcall
or
mov
sub
mov
mov
or
insb
and
push
add
xchg
in
es
aad
fwait
xlat
cs
into
sahf
in
out
cmp
lret
aaa
hlt
add
push
push
pushl
loop
fcompl
enter
movsb
arpl
push
dec
aam
add
xchg
jg
stos
mov
jmp
jno
push
add
push
loope
es
dec
fsubrl
popa
imul
cmp
jnp
cmp
aas
fbld
dec
jmp
daa
icebp
add
loop
insb
out
lods
shrl
imul
outsl
int
or
pushf
jno
sbb
push
push
clc
adc
push
popf
inc
xchg
pop
mov
repz
xchg
jne
adc
das
mov
dec
pop
mov
cmpsl
imul
mov
icebp
arpl
add
scas
testb
push
sub
out
pop
cs
out
lret
inc
popa
mov
push
pop
ds
out
xchg
pop
jae
push
jo
icebp
pop
mov
xchg
push
xchg
rorl
movsl
aaa
mov
push
add
or
shlb
mov
cli
pop
int3
out
inc
and
test
lahf
inc
push
mov
sbb
fisubs
in
xor
mov
push
cwtl
pop
adc
adc
sbb
int3
fcompl
in
add
das
or
pop
in
push
and
push
pop
lret
aam
add
out
into
mov
pop
mov
push
insb
jns
in
cmp
and
stos
daa
lret
cwtl
add
jnp
push
jmp
arpl
jge
mov
insl
jbe
movsb
test
shlb
or
inc
into
hlt
push
xor
icebp
inc
loop
sti
aam
lcall
cld
pop
enter
aas
xchg
dec
shrl
enter
jmp
mov
popa
adc
fwait
cmp
inc
push
or
int
js
cmc
jb
scas
mov
lret
mov
xchg
insl
xor
xchg
test
in
mov
mov
repnz
push
sub
adc
pop
inc
jno
js
das
popa
jno
imul
aad
sbb
fcoml
bound
out
cld
nop
cmp
jle
pop
mov
test
pop
or
mov
or
cmc
fstpl
iret
mov
cli
icebp
sbb
bound
inc
rolb
sub
inc
cmovp
xchg
pop
fisubrs
nop
inc
lahf
stc
std
pop
int3
fs
inc
cmp
shl
divb
sbb
push
ljmp
xor
sub
call
pop
cmpsl
add
movsb
and
adc
jae
ljmp
push
dec
in
es
aas
jnp
repz
neg
fistps
imul
and
pop
sbb
or
dec
out
push
pop
xor
out
sub
negb
outsb
inc
shlb
push
sub
stos
movsb
sub
aas
sbb
inc
nop
cltd
rcl
mov
stos
popa
and
push
stc
outsl
push
out
mov
es
push
adc
xchg
insl
xor
pop
xlat
test
lahf
pop
inc
fwait
mov
xlat
mov
jle
sub
xor
dec
fidivrl
cmp
jge
data16
insb
push
or
loop
outsb
inc
nop
cmp
xor
stc
lods
out
dec
inc
mov
test
out
aad
add
push
jnp
and
xor
loopne
xor
es
sbb
clc
mov
mov
pop
xor
dec
enter
or
hlt
int
push
lods
imul
sub
dec
push
or
decl
and
pop
jno
mov
cli
fwait
popf
popf
mov
jmp
out
add
inc
mov
test
cltd
push
cmp
push
cmp
pop
lea
mov
mov
add
push
pop
stos
jmp
outsl
insb
imull
pop
fists
add
push
into
imul
and
jno
pop
fmulp
pop
inc
adcb
cmp
push
sub
dec
jnp
sbb
sub
leave
inc
stc
push
in
lds
xor
adc
fsts
ret
rcrl
inc
cli
cld
mov
sub
shl
cmp
jmp
xchg
sti
sbb
sahf
lods
imul
std
sbb
cwtl
jge
cmp
inc
mov
jb
xlat
pop
sbb
push
jns
popa
movsb
cmp
sbb
xor
nop
mov
add
mov
push
je
add
cmp
loope
decb
in
mov
into
movsb
mov
mov
lahf
lods
movsl
push
jg
loope
xor
sarb
jecxz
dec
fsubrs
inc
dec
scas
notb
int
xchg
int3
sbb
mov
cwtl
imul
pushf
xchg
sbb
aad
or
inc
or
add
mov
push
leave
shll
out
pop
popf
mov
clc
gs
bound
inc
out
xor
outsb
fdivrs
lcall
cltd
imul
int3
xchg
decb
mov
mov
push
jbe
push
cmp
jo
jmp
aam
jg
cmp
dec
add
hlt
test
pushf
shrl
pop
lods
das
hlt
sub
pop
pop
out
sbb
lods
pop
lods
xlat
daa
movsl
daa
pop
push
mov
xlat
add
adc
cmpsl
and
dec
dec
xchg
sub
add
stc
jbe
mov
xlat
icebp
cmp
cltd
adc
push
loope
mov
and
test
pop
mov
in
jne
and
add
bnd
arpl
mov
subl
mov
fimull
push
test
push
dec
sub
hlt
stos
data16
shrb
in
cld
test
cmpsl
mov
popa
jle
shll
xor
nop
push
push
mov
mov
nop
jnp
adc
lods
xor
jp
push
sti
or
adc
test
adc
dec
xchg
scas
mov
fstp
and
mov
xor
xchg
inc
jg
mov
jnp
or
nop
test
in
mov
jb
mov
inc
mov
jae
mov
lret
sbb
xor
push
mov
lock
pop
lcall
mov
cmp
and
cwtl
push
or
leave
fs
dec
hlt
insb
ljmp
sbb
add
das
and
push
mov
sub
cmp
cmpl
xlat
pop
xor
xlat
sti
pushf
ret
push
iret
dec
jmp
xor
roll
push
sbbb
cmp
js
outsb
das
flds
loop
repz
divb
or
sbb
pop
cmp
sbb
xchg
jnp
sbb
mov
fisttps
stos
std
adc
or
cmc
or
mov
pop
stos
cld
mov
mov
sub
xchg
sub
fstl
call
cmp
xchg
xor
pop
ror
out
loope
mov
cmp
jecxz
popf
cli
mov
xor
das
pop
jae
push
test
sar
sub
imul
popa
ja
fcmovu
mov
adc
shll
sbb
xchg
lahf
dec
mov
mov
sbb
bound
out
xchg
cmp
jne
fildll
cmc
or
mov
stc
shr
dec
nop
loop
jb
sti
bound
daa
push
jnp
stos
or
jmp
sub
fstps
xchg
and
cmc
xlat
xchg
or
inc
adc
add
call
add
and
xor
pop
mov
lods
jns
pusha
add
rcrb
adc
idivb
mull
cmpsl
adc
dec
xor
cmp
sub
push
or
loope
mov
test
xchg
cmp
sub
xor
push
nop
sub
ret
mov
or
in
je
gs
aas
inc
xchg
fstl
or
mov
push
fisttpll
int3
bound
sbb
adc
adc
mov
ret
loopne
pop
inc
imul
in
ljmp
cwtl
inc
stc
addr16
cltd
pusha
sahf
arpl
xchg
pop
xchg
push
mov
pop
mov
ret
sbb
out
out
test
jne
leave
adc
xor
sbb
inc
daa
mov
jns
or
enter
shl
and
mov
or
stc
mov
push
pop
bound
popa
iret
cli
adc
cmpsb
sub
add
idivl
icebp
mov
pop
lds
inc
fimull
aaa
outsb
dec
nop
lret
sahf
jge
and
sub
pop
mov
xchg
cld
and
mov
mov
mov
iret
imul
popa
pop
dec
repz
or
inc
int
int
inc
insl
pop
pop
cld
fdivp
lahf
sub
inc
rolb
lea
das
cmp
dec
negb
mov
sbb
mov
into
faddp
lret
jns
loope
scas
repz
adc
or
xor
lret
mov
int
fimull
ret
das
out
out
jle
popf
sbb
aas
ss
xor
stos
sbb
or
mov
in
xchg
cmp
mov
inc
inc
jbe
xor
stos
inc
sub
sbb
loop
bound
inc
shl
sarl
and
xchg
inc
dec
addl
fwait
cmp
or
cs
ror
xchg
shr
jne
into
mov
sbb
pop
mov
das
sbb
rorb
out
call
sti
bound
mov
sbb
loop
push
xchg
jmp
or
fimuls
sbb
xchg
pushf
es
push
cs
jge
xor
negl
fs
or
hlt
push
ss
scas
mov
call
les
lea
ss
pop
je
outsl
mov
mov
push
cmp
sbb
add
cmp
push
jno
lcall
loopne
push
push
mov
inc
stos
fimuls
out
ljmp
sti
mov
repz
sub
lock
mov
sbb
icebp
jge
subl
repnz
mov
in
jecxz
xchg
mov
aaa
out
cmp
es
cmp
shll
jns
das
in
gs
mov
xchg
and
xlat
push
icebp
rcll
mulb
inc
push
stc
xlat
cmp
bound
mov
xor
mov
xlat
shlb
jnp
pop
push
lea
and
repnz
addr16
jb
mov
xchg
sbb
addr16
dec
push
lcall
or
std
dec
bound
lds
mov
movsl
pop
dec
mov
rclb
sbb
sti
adc
cmpsb
pop
dec
or
stos
ret
test
mov
xchg
faddp
dec
add
repz
bound
mov
sbb
subb
xor
jg
xor
adc
add
dec
gs
adc
popf
jmp
sbb
pop
cmc
hlt
sub
dec
sub
lods
fadds
push
push
inc
shrb
cli
mov
lods
out
and
std
pop
pop
aas
adc
fsubrl
jecxz
test
mov
and
mov
xlat
xor
xor
sbb
inc
mov
mov
push
adc
ret
fldenv
jecxz
push
jbe
mov
sahf
jo
fs
sub
popf
push
adc
and
xor
gs
cltd
inc
daa
clc
negb
iret
cmp
add
adc
ret
aas
insl
jl
cmpsb
push
test
mov
sahf
push
cmc
sbb
sbb
out
mov
mov
ljmp
popa
push
xor
nop
mov
mov
xchg
ljmp
xor
rcll
aad
ret
pop
inc
dec
into
push
dec
jle
pop
call
gs
inc
test
int
add
or
les
adc
lea
dec
mov
adc
subl
fnstcw
push
xchg
push
pop
and
mov
pop
outsb
out
outsb
stos
dec
inc
hlt
pop
ss
pushaw
rcll
lcall
cmp
fiaddl
pop
cmp
cmp
in
scas
xchg
add
cltd
dec
in
add
and
repz
jne
adc
mov
dec
dec
das
outsl
cmc
push
sub
xor
mov
mov
leave
dec
and
dec
jne
ret
popa
mov
mov
lea
mov
jmp
repnz
cmp
cmp
mov
lea
or
fwait
mov
cmp
jl
mov
mov
rcrb
cmpsb
sub
jnp
mov
inc
or
inc
mov
add
xchg
lcall
in
das
and
shlb
out
mov
insb
mov
dec
dec
push
leave
int
loop
fnsave
mov
inc
jg
push
inc
or
mov
cmc
push
lods
loop
inc
repnz
mov
jl
stos
xor
aaa
leave
jb
or
mov
inc
cmp
jnp
adc
test
mov
pop
scas
testl
jge
test
cmp
scas
movsl
dec
mov
xor
test
rclb
in
mov
ja
sti
lahf
fxch
jg
add
mov
fsubs
and
fcomps
loope
push
jle
sti
mov
jbe
or
dec
push
jbe
in
xor
mov
sub
pop
cmpsl
divb
or
lods
pop
xlat
or
dec
out
or
cs
repz
cmp
aaa
xchg
xor
mov
addr16
scas
sub
repz
imul
cmp
aas
push
or
out
std
cmpsb
jne
insl
ffree
andnps
mov
pop
jns
xchg
mov
std
imul
xchg
sbb
push
fs
call
sahf
xor
js
fcompl
cmpsb
popf
mov
jo
test
bound
pushf
pop
gs
mov
loope
adc
xlat
xchg
xor
fisubl
divb
repnz
jmp
lods
inc
test
popa
js
cmpsl
jp
sahf
and
imul
xchg
dec
aam
out
mov
inc
shl
cmp
loop
pop
fisttpll
bound
fistl
mov
xor
jge
push
lahf
cmpb
and
push
or
nop
mov
lds
insb
test
iret
fidivrs
pop
das
int3
enter
mov
scas
pop
sub
inc
cmp
sub
sti
fdivrl
mov
push
lcall
or
ja
mov
sti
add
cmp
fsubrs
jb
ljmp
mov
mov
sub
shlb
cmp
icebp
cld
sbb
aaa
adc
mov
lods
imul
adcb
hlt
and
xchg
inc
push
scas
mov
enter
jno
daa
ja
xchg
xchg
and
mov
test
repz
pop
sbb
mov
fdecstp
sbb
aaa
lcall
cmp
jge
repnz
adc
xlat
lret
out
dec
cmp
jno
pop
adc
iret
punpckhdq
sbb
dec
ss
fistl
inc
dec
cmpsb
in
fsubr
xchg
aad
xchg
insb
xor
jmp
pop
icebp
lcall
into
xor
xchg
sub
loopne
or
push
gs
test
sbb
mov
outsb
aad
jno
lock
cs
pop
xchg
or
inc
cs
xor
xchg
dec
scas
rorl
inc
inc
mov
in
mov
repnz
bound
jp
push
dec
cmp
xor
push
ja
iret
pop
imul
movsl
pop
mov
mov
pop
mov
dec
scas
inc
push
je
sub
popa
sbb
xor
dec
je
pop
test
xor
incl
aad
lods
fwait
insl
pop
xchg
movsb
int
outsb
test
adc
insl
lret
rcrb
adc
pop
pop
cld
add
sbb
sub
pop
jp
fisttps
insl
adc
and
jns
mov
pop
je
mov
fs
and
add
mov
jb
lahf
out
pop
inc
mov
mov
jae
or
jne
xor
je
sub
push
testl
loope
into
xor
xchg
mov
fisttpl
pop
cmp
mov
push
cmp
mov
jmp
jo
sar
rcll
or
push
stos
add
cli
mov
push
test
int
cld
shll
adc
and
xchg
sub
push
mov
xchg
mov
test
sub
jns
in
or
xor
and
mov
cmp
leave
push
or
ja
mov
jno
mov
jecxz
dec
or
ss
aad
xor
inc
push
push
stc
mov
adc
or
mov
lret
into
sbb
test
inc
jge
mov
shl
in
mov
xchg
lods
fstpl
xor
xchg
jmp
or
sub
xchg
and
xchg
cmp
mov
negl
popf
pop
xchg
into
pushf
scas
scas
adc
and
rclb
icebp
adc
popa
jno
gs
sti
jnp
add
push
aas
pop
loopne
ficomps
lret
or
rorb
mov
loope
mov
shr
cwtl
sub
jl
or
jmp
xor
or
push
inc
das
or
xor
add
xchg
es
add
ljmp
push
mov
in
jno
xchg
sub
sbb
adc
and
outsb
push
cmp
lahf
adc
lods
adc
push
xchg
xchg
pop
call
faddl
out
les
dec
mov
mov
xchg
call
xor
pop
xchg
mov
ds
loopne
bound
lret
iret
push
das
hlt
cmc
int3
mulb
push
sub
and
push
imul
out
mov
test
bound
into
call
inc
inc
test
cs
cmpsb
stos
pop
add
jge
pop
sub
shll
lcall
xchg
incl
sub
lcall
or
jecxz
push
sbb
aaa
xor
mov
inc
mov
les
push
inc
shr
xor
adc
bts
cmp
sti
lods
push
mov
xchg
out
add
loope
int
js
sarb
pusha
aad
jle
js,pt
cmpsl
jns
fdivl
mov
lcall
fsubrl
add
jge
lds
jmp
push
ret
or
adc
cmc
bound
mov
lcall
shl
imul
xchg
push
sub
rorb
sbb
sub
push
in
test
loop
xor
or
mov
pop
pop
xchg
out
mov
aas
mov
aas
enter
loopne
mov
push
lds
out
out
cmp
add
sbb
push
jo
cmpsl
repnz
inc
lret
mov
mov
imul
jge
push
mov
outsl
mov
mov
ret
fdivl
icebp
push
outsl
adcb
mov
jo
sub
sub
mov
lock
inc
push
ret
xchg
sub
mov
xlat
scas
jle
lods
aaa
mov
test
insb
inc
pop
leave
and
add
ljmp
or
jb
stos
mov
outsb
push
add
jle
outsl
lret
mov
jno
adc
pop
and
pop
aas
mov
dec
js
outsl
lock
lods
daa
dec
sbb
push
jmp
sub
pop
insl
jns
jl
jp
inc
sbb
mov
cmp
cli
lret
sub
xor
cli
push
lods
xor
cmp
test
mov
mov
lock
outsl
mov
mov
jmp
mov
jg
pusha
mov
jo
lods
push
mov
mov
and
or
mov
xor
jle
icebp
lret
pop
add
pusha
sarl
loop
cmp
push
in
aas
jp
loop
jl
call
aad
shlb
dec
sbb
and
cld
jnp
mov
pop
adcl
adc
xlat
mov
mov
and
or
ja
mov
lcall
aaa
xchg
mov
jl
xor
cltd
jnp
rorb
stos
cmc
iret
flds
mov
fidivl
outsb
pushf
sub
jmp
xchg
mov
pop
push
dec
inc
jp
push
sbb
or
cmp
sub
fcmovbe
lret
imul
out
xchg
mov
pop
push
dec
inc
jp
push
sbb
or
cmp
sub
fcmovbe
lret
imul
out
xchg
mov
pop
push
dec
inc
jp
push
sbb
or
cmp
sub
fcmovbe
lret
imul
loop
xchg
mov
mov
test
push
insl
sahf
cmp
leave
aad
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
enter
call
adc
dec
ficompl
add
push
mov
movsl
cmp
fsubs
push
clc
inc
mov
mov
in
cmc
jbe
or
sub
xchg
cmp
lock
loopne
xchg
sub
cmp
push
push
jnp
aaa
mov
ja
je
outsl
test
and
cld
imul
and
lock
and
fldl
mov
sub
or
pop
xor
lock
and
sbb
mov
and
pop
jo
and
or
cmp
and
jne
adc
mov
sbb
xchg
mul
sbb
pop
cmp
cwtl
dec
push
test
sbb
in
dec
add
js
in
nop
mov
lock
sub
xchg
sub
jp
test
setp
pop
das
mov
mov
aad
adc
out
shrb
push
xchg
add
jb
inc
clc
pop
lahf
xor
mov
std
jo
popa
fcoml
lods
add
movsb
adc
inc
sti
arpl
dec
in
mov
popf
sbb
jge
pop
xchg
push
call
xchg
cwtl
pop
test
jmp
or
xchg
jae
pop
stc
pop
loopne
xor
add
cwtl
and
dec
cmc
pop
in
aad
lds
mov
movsl
sub
fsubs
push
clc
inc
mov
mov
in
aad
lds
mov
movsl
sub
mul
push
je
push
in
cli
inc
stos
test
sbb
repz
dec
mov
push
test
jb
dec
stc
icebp
subb
push
jb
dec
and
sub
lods
pop
insl
stos
in
jnp
jnp
ficoml
mov
stc
pushf
sub
ret
in
push
shrl
dec
jg
cmp
test
insl
sub
out
mov
mov
test
xlat
cmp
dec
sub
jne
mov
scas
stc
in
leave
push
and
cmp
mov
pop
and
or
daa
test
dec
fidivs
mov
lret
fildl
xchg
and
popa
arpl
jmp
pop
pop
xchg
fs
js
dec
icebp
ret
xlat
sbb
push
adc
xchg
xor
pop
adc
cmp
sub
out
insb
jle
cmp
jbe
pop
shll
ficoms
mov
mov
fisttps
push
jb
int
cmp
fadd
les
pop
mov
mov
rcl
movsl
sub
adc
dec
mov
or
leave
fistpl
add
inc
mov
mov
and
sbb
cmp
xor
pop
mov
pop
sub
outsl
adc
adc
aad
jb
push
cld
ss
adc
xchg
push
cmp
sahf
js
aad
xor
xor
pop
clc
in
movsb
cmp
lret
test
insl
sbb
std
in
and
xor
in
or
test
xlat
jb
or
sbb
out
stos
add
add
and
test
ljmp
scas
push
jge
push
cmp
cmpsl
cmp
scas
in
pop
inc
inc
push
xor
mov
xchg
ljmp
fninit
push
rcrl
adc
push
and
orb
out
cmp
jne
lahf
xor
cmp
and
movsl
push
rol
mov
fsubp
pop
fstl
mov
int
and
aas
push
out
xchg
daa
iret
popa
fidivs
or
and
negl
pop
push
sti
xchg
rorb
or
and
xchg
fldcw
cmc
pop
add
loop
push
arpl
mov
sbb
inc
cli
xor
adcb
push
leave
leave
or
dec
into
pop
pop
jno
pop
sbb
ja
xor
stos
jg
xchg
addr16
mov
repz
lods
cmpb
imul
dec
stc
push
jns
pop
inc
jno
adcb
stos
adc
inc
inc
popf
adcl
mov
out
add
sarl
push
jge
push
mov
xlat
out
stos
pop
lcall
dec
xchg
pop
sbbb
mov
lods
mov
aam
xchg
or
sub
mov
mov
rolb
lcall
scas
cmp
sbb
loopne
xor
popa
rep
xchg
cmc
push
push
mov
pop
int3
scas
sahf
mov
addr16
sub
scas
adc
das
scas
sub
and
dec
adc
das
and
jg
push
stos
aam
addb
xchg
out
arpl
sub
std
std
scas
adc
xor
pop
arpl
das
repz
clc
sub
leave
nop
shr
pop
push
std
aas
sbb
inc
fcmovne
insl
pushf
outsb
repz
pop
into
arpl
add
mov
jecxz
mov
aam
push
jnp
push
rcrb
popa
lretw
loope
test
or
les
iret
scas
ret
movsb
dec
lds
stc
mov
mov
lret
dec
insl
cmp
xchg
jle
idivb
xchg
andl
pop
outsl
outsl
int
out
lock
loope
mov
sbb
xor
out
xchg
sti
sub
dec
bound
sti
jae
cs
setb
cs
push
mov
stos
mov
clc
outsl
push
inc
test
sbb
lods
and
push
mov
test
ret
movl
test
insl
jge
dec
shlb
insl
and
fldenv
mov
push
fs
loope
and
outsl
enter
adc
sub
and
scas
mov
xor
out
sbb
cmpsl
decb
cltd
jbe
fisubrl
pop
and
addr16
cmpsl
push
mov
mov
stos
jl
loop
sbb
jns
jns
ds
popf
xor
push
imull
cmp
iret
add
mov
fdivrs
fst
mov
imul
pop
lods
mov
stos
adc
sub
jg
adc
popf
jne
adc
lods
test
insl
and
cmpsl
push
ja
mov
dec
ret
jne
dec
cmp
shrb
jb
jle
mov
cmc
or
ds
sbb
mov
cmpsb
dec
add
fnstsw
movsb
shr
xor
sub
pop
cli
in
jmp
adc
jl
lret
mov
push
mov
pop
xchg
mov
sbb
decb
out
out
es
imul
mull
adc
sbb
popf
mov
mov
dec
hlt
mov
add
and
adc
out
loope
pop
rcrb
ljmp
fwait
inc
test
lcall
cmpsl
addb
inc
leave
bound
dec
push
cmp
mov
push
popa
cmp
jo
ja
outsl
jmp
cmp
je
popf
push
bound
push
enter
mov
loope
push
inc
and
and
aam
inc
fidivrs
push
hlt
rclb
jp
add
sbb
xor
es
js
sub
xchg
jno
jnp
push
cs
xchg
push
pop
mov
fsts
leave
mov
add
hlt
sub
inc
ds
cmp
pop
mov
mov
mov
ljmp
cwtl
or
cmc
sbb
jl
or
cmp
fldl2t
xchg
or
mov
fnstsw
pushf
movsl
cwtl
xchg
xchg
mov
sbb
inc
pop
icebp
stos
dec
sub
aaa
sti
add
or
cmp
aas
in
or
shrl
or
adc
mov
add
sub
pop
ret
bound
and
insb
int
outsb
fmul
xor
inc
clc
inc
cmpl
push
jo
in
or
nop
testl
add
jg
cmp
mov
popa
stc
or
fstpl
lds
je
pop
repnz
mov
inc
fwait
sbb
stos
stc
push
fcompl
jmp
mov
cmpsl
jbe
fildl
out
outsl
flds
jns
inc
out
aam
popf
adc
lcall
push
jg
dec
in
in
sbb
jmp
mov
aad
jne
test
ds
jb,pt
popf
mov
push
fadd
xchg
je
imul
push
sub
jg
mov
lahf
pop
jns
aaa
rcrl
movsl
das
cmp
push
es
mov
xor
xchg
in
bswap
mov
push
cmpxchg
dec
adc
mov
out
repz
pop
lock
and
dec
sub
inc
outsb
das
dec
jns
sub
mov
sub
fldt
into
xchg
xchg
jnp
mov
scas
lret
test
fwait
aam
cmp
pop
mov
xchg
xor
lods
fidivrs
rorb
pop
aas
scas
in
pop
imul
cmpsl
leave
pop
jmp
test
aad
mov
ret
and
adc
mov
push
es
pop
int3
pushf
mov
mov
pop
mov
fdiv
pop
bswap
out
les
je
pop
std
sub
sti
pop
cwtl
jle
sbb
push
std
sbb
pop
pop
roll
push
jnp
push
sub
inc
sub
fld
lds
dec
stc
and
xchg
sub
cmp
adc
jns
lahf
inc
sbb
mov
fsubl
mov
popf
rcrl
xchg
stos
push
pop
ja
add
rcrb
dec
shlb
cmp
jo
out
rcpps
xor
adc
repz
inc
gs
jecxz
lds
jle
je
dec
ljmp
sbb
cs
or
and
ds
sub
enter
shr
test
sbb
mov
adc
enter
repz
sarl
int3
push
int
cmpsb
stos
jo,pn
clc
sbb
fwait
loop
and
scas
xchg
std
and
pop
hlt
or
xor
imul
fdiv
sub
adc
inc
sub
cmp
inc
inc
cmp
adc
inc
xchg
ja
pushf
ret
pop
fimuls
xchg
test
insb
clc
fbstp
movsb
sub
ss
call
dec
fwait
pop
inc
jbe
mov
mov
cmp
add
mov
inc
inc
cmp
mov
jl
ret
icebp
push
into
inc
stos
loop
xlat
adc
and
lret
jecxz
xchg
push
jo
psrld
or
inc
add
fsubp
mov
pop
dec
push
inc
jae
repz
fs
jbe
cwtl
ret
jne
and
pop
pop
loope
je
or
mov
les
in
je
or
pop
and
aad
inc
push
in
inc
push
xor
cmp
pop
dec
pop
imul
dec
nop
inc
ss
aaa
jmp
aaa
ficompl
mov
mov
pop
cli
mov
sub
data16
call
xor
popa
mov
lcall
stc
test
adc
outsl
adc
scas
imul
xchg
in
adc
sub
ret
std
cmpb
and
dec
push
or
pop
mov
cltd
and
push
cmc
push
jns
lea
jb
xchg
test
inc
adc
sub
push
daa
shll
add
cmp
mov
xor
jg
mov
lds
stos
or
sub
xchg
push
scas
iret
inc
insb
jno
insl
addb
mov
push
arpl
xor
outsb
cmp
jo
test
int
test
sbb
sbb
or
andb
or
cli
jo
in
out
sbb
or
sub
sbbb
or
cmpsb
rcrl
add
pop
lahf
pop
and
jp
scas
jp
out
mov
shl
push
jns
push
jb
mov
rcll
and
mov
add
xchg
add
add
js
jp
xchg
cmp
pop
js
xchg
std
mov
int
dec
jno
cmc
sub
or
sbbb
adc
in
xlat
mov
cli
mov
shrb
popa
mov
out
or
xchg
and
test
add
mov
push
push
pop
mov
sbb
cmp
mov
into
jbe
fldl
movsb
lea
mov
and
cmp
mov
jmp
mov
sbbl
push
xlat
call
xchg
dec
pop
sbb
leave
jbe
push
stos
lcall
nop
pushf
or
movsb
mov
fs
insl
rorb
idivl
inc
adc
and
xor
ficompl
repz
cmp
dec
pop
and
cmpsb
ja
sbb
push
xchg
xor
mov
aad
mov
inc
in
addr16
push
xlat
scas
adc
andl
aad
jp
cmp
push
mov
out
cmp
xchg
sbb
push
sbb
cmp
popf
mov
sbb
xor
fwait
jmp
fildll
cld
fildl
push
xchg
lret
movzwl
movsl
movsb
lods
push
lret
pop
sbb
dec
xchg
pop
add
inc
adc
fs
loope
jb
xchg
push
stc
adc
mov
rorl
push
inc
arpl
push
mov
xor
mov
movsb
sarl
push
mov
cmp
testb
jl
xor
cmp
lret
jb
out
inc
sub
scas
jb
in
inc
mov
lret
jle
add
int
aad
mov
mov
mov
jbe
out
mov
call
shll
push
enter
imul
daa
dec
jl
enter
gs
popf
and
arpl
sbb
mov
fcomip
insl
dec
scas
clc
jmp
je
jle
sub
xchg
mov
cmp
lret
data16
add
notb
rol
in
pop
cmp
sub
sahf
in
lret
int3
and
std
xor
mov
icebp
inc
enter
in
xchg
xor
sub
shll
addr16
fdivl
gs
repnz
inc
lahf
mov
pop
outsl
psubb
or
mov
mov
cmp
cmp
ljmp
pop
and
adc
pop
inc
sar
cltd
sbb
inc
push
rol
outsb
icebp
push
cs
hlt
sub
loopne
lahf
das
fstpl
lock
std
jl
stos
jp
mov
int3
or
pop
mov
jne
mov
or
pop
dec
call
stc
push
aam
sbbl
cmp
mov
test
adc
loopne
push
mov
xchg
daa
scas
hlt
nop
and
mov
idivl
pushl
push
and
cmp
or
mov
and
dec
mov
add
fwait
jecxz
push
scas
mov
leave
push
test
fcoms
dec
in
xor
ror
or
xchg
mov
sbb
jl
popa
repz
add
clc
mov
and
xchg
jns
and
popa
dec
ret
test
sub
or
sub
cmp
push
jae
data16
cmp
xchg
clc
mov
repz
into
jbe
cmp
fldenv
mov
and
cmp
pop
mov
push
mov
inc
stc
loope
shlb
arpl
jle
sbb
push
dec
ret
frstor
or
nop
cwtl
lret
xchg
jle
mov
ss
cmp
push
sti
test
cmp
push
push
and
xchg
test
cmp
mov
push
imul
or
and
lea
les
loope
into
dec
movsl
xchg
jbe
sbb
outsb
pop
das
gs
lret
rcrb
psubsw
mov
aas
sbb
popf
sbb
jno
and
and
pop
xchg
jne
jmp
push
jle
and
negb
fcoml
loop
adc
jbe
dec
loopne
iret
lods
pop
ret
jno
mov
iret
adc
add
and
add
out
int
les
int
jnp
sbbb
xchg
mov
shl
push
jbe
or
ljmp
push
arpl
fs
xor
dec
das
pop
addr16
jl,pn
sub
jge
int3
std
fsubrl
bnd
xor
int3
inc
mov
mov
fs
xchg
push
mov
lret
sti
rorl
cmpsb
xor
pop
jecxz
pop
xchg
je
jl
mov
xor
add
mov
aas
out
es
or
cmpsl
insl
js
xchg
mov
push
scas
and
icebp
fisubrs
fnsave
or
arpl
ja
sub
jno
sbb
fiadds
hlt
xchg
aas
mov
in
jne
movsl
pop
xlat
mov
and
jle
push
xchg
or
and
mov
dec
clc
popa
inc
imul
ret
jmp
mov
je
mov
adc
cmpsl
in
cmp
pop
mov
jnp
pop
cmpsb
xor
jge
or
mov
jl
pop
psrad
testl
push
test
lahf
inc
sub
pop
pmaxsw
mov
cli
jp
inc
pop
negl
rcr
mov
xor
loope
cli
push
mov
jns
sbb
dec
aad
mov
fidivrs
inc
pop
outsl
insb
out
aad
stos
jge
cmpsb
in
jae
testl
pop
cmp
lods
jns
and
fwait
mov
add
mov
push
mov
les
cmp
jl
pop
mov
add
push
clc
sarl
dec
aad
jmp
xlat
iret
hlt
or
insl
sbb
mov
push
jle
imul
xchg
je
dec
cmp
mov
mov
jns
xchg
fwait
gs
mov
or
push
mov
fnstcw
cmp
cmp
lock
inc
pop
push
into
xlat
inc
sbb
daa
ds
pop
xchg
test
imul
inc
fnstsw
leave
lcall
popa
or
lods
pop
xor
es
call
xor
cmp
outsl
gs
push
dec
xchg
cmp
or
ss
add
andb
mov
lea
jmp
xchg
cwtl
pop
mov
out
sub
adc
ret
and
mov
adc
shll
lcall
push
imul
xor
or
fistpll
cltd
lret
and
push
pop
rcrl
shlb
or
jae
pop
and
lea
arpl
and
push
pushf
and
push
pop
sbb
mov
adc
scas
lea
enter
imul
fdivrl
inc
aad
push
int
sub
add
adcb
movsl
xor
cmp
mov
push
in
add
xor
jge
inc
popl
cwtl
mov
or
xchg
sbb
ja
mov
jno
sub
fstpt
je
mov
mov
int3
repz
cld
int
mov
mov
ret
jo
add
imul
mov
bound
mov
leave
push
lahf
adc
mov
cmp
aas
jl
test
or
idivl
push
sbb
mov
mov
adc
mov
xchg
jp
mov
aaa
bound
push
test
mov
cld
cmp
push
mov
xor
test
jle
bound
lahf
pop
pop
sbbl
adc
mov
push
mov
scas
notl
jmp
into
bound
rorb
jle
stc
das
sbb
test
stos
or
xchg
scas
and
inc
mov
popa
jnp
sbb
lret
icebp
cmp
out
in
dec
test
stc
cmp
pop
pop
jb
imull
pusha
sbb
add
mov
dec
fwait
arpl
pop
fistpll
cmovg
dec
dec
loop
jecxz
enter
or
sbb
push
cmp
cmpsb
outsl
jge
mov
test
call
xchg
xchg
add
rcll
lock
in
mov
sub
mov
into
js
mov
sub
pop
sarb
and
popa
fdiv
repz
xorl
push
mov
clc
js
das
in
lods
mov
stos
adc
orb
pop
and
sarl
mov
mov
jns
xor
xor
lods
pop
xor
arpl
mov
cli
lret
mov
subps
lret
add
std
jb
xor
sub
mov
in
mov
subb
jae
stos
add
sbb
sbb
xchg
fwait
fs
and
push
stc
mov
rolb
sahf
mov
cwtl
mov
push
fs
jbe
loop
lock
dec
movsb
pop
bound
lea
fsubrs
lret
pop
les
sbb
jb
lea
mul
jg
dec
je
xchg
and
add
decl
outsb
cltd
mov
shlb
inc
cmc
orb
xchg
cmpsl
addr16
shl
mov
xchg
cmc
mov
ret
cmc
lret
inc
lahf
inc
sbb
xchg
js
ja
mov
sub
dec
das
movsb
sbb
repz
int3
jg
pinsrw
in
xor
outsb
inc
xchg
mov
icebp
movsb
mov
testb
repnz
inc
or
mov
shrl
adc
scas
imul
scas
insl
jp
fidivl
mov
push
shl
call
pusha
adc
mov
pop
sub
push
ja
or
movl
fisttps
test
gs
in
push
loopne
jae
in
js
mov
mov
je
test
mov
push
insl
sbb
ds
repnz
pop
add
aam
mov
loopne
lds
push
mov
xchg
outsl
cmp
lcall
ffree
lahf
inc
stc
outsb
das
xchg
movsl
test
jo
or
fldt
push
lret
das
jb
lcall
push
dec
notl
sbb
roll
stc
sbb
dec
push
dec
xchg
scas
fwait
xor
ljmp
jnp
insl
xor
shll
push
xor
push
lock
test
mov
cmpsl
stc
rclb
popf
and
loopne
fbld
pop
lahf
jbe
inc
sub
xor
xor
loope
insb
adcb
fcom
aas
in
lea
or
cld
notl
mov
mov
icebp
std
rorl
push
rcrl
mov
mov
rorb
push
fsubrs
mov
sti
pop
dec
adc
aad
mov
mov
jae
mov
out
and
inc
int3
nop
js
mov
push
xchg
xchg
cmpsl
lock
pop
mov
mov
xchg
sarb
imul
jg
cmc
push
inc
jge
mov
sbb
lahf
leave
mov
leave
daa
popf
sub
add
add
sar
pop
gs
clc
inc
mov
mov
in
aad
lds
mov
movsl
sub
fsubs
push
clc
inc
mov
mov
in
aad
lds
mov
movsl
sub
fsubs
push
clc
inc
mov
mov
in
aad
les
mov
movsl
sub
gs
xor
cmp
ret
mov
cmp
jp
rcrb
imul
loop
fidivrs
loope
xchg
pop
mov
ljmp
add
rcrb
push
jnp
or
cmp
lret
push
fildl
jb
bound
xor
ret
jnp
or
cmp
mov
sahf
add
inc
repnz
mov
cmp
sub
xorb
sub
fdivs
in
stos
sbb
mov
dec
push
scas
cmp
xchg
adc
mov
es
mov
jbe
jbe
fs
mov
rcrb
fs
sbb
setp
test
sub
xor
mov
lcall
xchg
mov
xor
or
cmp
sbb
subb
cld
mov
cmpsb
movsb
xchg
cmp
adc
sub
cmp
mov
inc
repz
xor
push
pop
dec
loope
mov
sarl
or
ja
adc
aaa
adc
pop
ret
jnp
or
cmp
jmp
sti
bound
xor
addl
xor
jmp
hlt
pop
mulb
pop
lahf
push
call
addr16
dec
iret
insb
adc
sbb
outsb
jg
sub
inc
cltd
sbb
pop
sarb
movsb
dec
cmp
sbbb
mov
cmp
jmp
sti
bound
xor
ret
jnp
or
cmp
jmp
sti
bound
xor
stos
out
sub
js
adc
cmp
sbb
xor
xorb
xchg
scas
xor
sub
jne
or
addr16
lock
lods
push
fsubp
dec
mov
lret
xor
rolb
mov
scas
leave
testl
sub
cs
push
hlt
imul
rcr
pop
add
scas
jmp
pop
push
sub
or
sub
int
iret
cmpb
shrb
mov
xchg
stos
int3
daa
xchg
inc
fcompl
fs
push
xor
xchg
fwait
lcall
and
xor
mov
roll
inc
icebp
pop
iret
icebp
cmp
lock
lret
mov
xchg
test
inc
aam
sbb
pop
negb
fdiv
sub
jno
pop
adc
adc
cmp
fisubl
mov
rcrl
xor
mov
adc
inc
icebp
jns
rcll
data16
sbb
mov
sbb
das
push
aam
repz
jg
ds
jecxz
fnstcw
mov
aam
or
inc
push
out
sti
js
xor
adc
sahf
fdivrs
iret
stos
leave
pushf
pop
dec
mov
repnz
mov
sbb
into
inc
stos
popf
xchg
and
and
cmpl
dec
pop
jb
insb
loop
cmc
pop
mov
or
jnp
pop
pop
jo
sbb
nop
enter
push
sar
inc
sbb
xlat
xchg
mov
mov
outsb
cltd
sbb
mov
xchg
iret
dec
lds
jle
add
xorl
inc
push
mov
bound
mov
adc
xlat
sbb
stos
push
inc
mov
test
repz
ds
out
sub
test
pusha
or
dec
push
push
lds
int3
mov
xor
aad
sub
xlat
xlat
cmp
dec
xor
sbb
push
insl
or
mov
pusha
inc
and
mov
mov
xrelease
push
jnp
in
jecxz
pop
jae
jne
dec
jne
mov
outsb
mov
mov
mov
push
push
push
scas
loop
push
push
es
push
cs
xor
mov
mov
mov
and
push
and
faddl
inc
setb
icebp
ja
fsub
insl
pop
push
cmp
inc
nop
mov
loopne
sub
addr16
mov
test
mov
mov
jl
sbb
jmp
fstpt
fcmove
clc
pop
nop
xor
and
addr16
cmp
mov
cmp
adc
test
fists
ret
sbb
imul
in
call
test
lret
add
xor
dec
hlt
push
adc
push
scas
inc
xlat
call
add
dec
stc
outsl
cwtl
fnsave
shrb
sbb
pop
xchg
adc
jbe
lock
push
les
shl
push
test
daa
mov
inc
repnz
and
mov
adc
mov
movsl
lock
out
mov
jo
mov
test
pop
lahf
cwtl
pop
loope
xchg
cmpsl
cmp
jmp
adc
xchg
and
fldcw
fwait
inc
stos
dec
cmp
xor
mov
dec
mov
fcmovnb
add
mov
pop
clc
and
stos
jne
stos
rcl
cmpsl
or
rorb
jg
adc
inc
or
es
mov
ror
cmp
pop
push
mov
add
push
dec
insb
push
inc
sti
into
or
test
xchg
push
cmc
sub
lcall
mov
mov
xchg
lahf
out
fdivrs
aad
sub
test
or
out
adc
mov
and
aaa
pop
cmc
dec
and
push
and
adc
dec
jns
push
inc
subl
imul
test
inc
xlat
mov
xchg
loop
adc
cmp
inc
lods
js
mov
pop
sbb
cmpsb
mov
pop
cmpsb
outsl
inc
lods
fists
dec
arpl
repnz
inc
jb
jae
inc
dec
out
mov
jp
cwtl
cmp
test
mov
addl
sub
push
xchg
sbb
push
push
orl
jecxz
arpl
movaps
pusha
mov
in
jmpw
popa
add
or
lret
bound
call
fimull
jp
add
fidivrs
lods
and
cmc
sub
pop
mov
stc
rolb
pop
cmp
adc
sub
daa
or
in
pushf
xchg
push
mov
clc
adc
mov
movsl
and
cmp
lea
adc
popa
divb
jge
xor
pop
push
push
shll
jo
pop
cmpsb
sbb
or
adc
lcall
inc
push
add
dec
xchg
clc
sbb
in
mov
les
dec
sub
sahf
adc
rcll
rol
add
adc
push
lds
movsb
cmp
jp
insl
nop
add
stos
add
mov
sbb
sbb
push
sbb
inc
cmpsl
jge
ret
mov
clc
mul
pop
out
cmpsl
out
dec
in
xchg
stc
in
sti
pop
jg
cmp
pop
pop
loop
pushf
in
sbb
lea
test
imul
dec
and
mov
cmp
lahf
fdivr
pop
stos
pop
sbb
inc
outsl
jp
adc
addr16
es
dec
add
sub
mov
aad
in
or
lea
sub
sub
mov
pop
add
mov
rclb
scas
mov
insb
mov
sub
andl
mull
mov
lahf
and
xchg
pop
jae
cwtl
mov
xchg
cmp
xchg
ret
popf
daa
insl
jle
mov
xor
xchg
sub
jl
mov
loope
lock
jg
push
jns
mov
leave
mov
sbb
push
addr16
jecxz
mov
push
xor
xchg
nop
mov
xchg
cltd
std
inc
sub
xor
data16
std
rolb
mov
lods
outsl
mov
xchg
iret
stos
xchg
test
mov
and
jmp
pusha
repz
mov
mov
jle
push
mov
and
push
out
push
fisubrl
and
or
mov
add
xor
xor
jge
jp
pop
ss
testb
inc
cmp
and
out
mov
add
ja
js
or
mov
lds
enter
adc
mov
mov
ds
imul
fs
jo
int
jnp
jbe
push
adc
and
mov
test
jnp
or
mov
push
mov
movsl
add
call
adc
cli
out
xor
or
dec
pop
jp
adcb
xchg
mov
pusha
imul
sbb
dec
adc
cli
mov
ss
adc
push
scas
jae
dec
test
fsubl
xlat
mov
push
xor
insl
ds
add
push
push
movsl
jae
ret
adc
add
mov
push
aas
pop
and
inc
jl
insb
int
adc
or
ret
or
and
jno
and
adc
sub
push
stc
inc
add
adc
imul
push
daa
jns
dec
push
and
add
rclb
xchg
fwait
add
inc
mov
ret
lret
insl
sbb
xlat
mov
mov
scas
sbb
std
mov
fldt
adc
fdivrl
cmpsb
cmp
fidivrl
ljmp
cli
cmp
pushf
adc
cs
and
push
push
fnstenv
call
fdiv
xor
stos
nop
or
inc
fs
in
shl
inc
out
popf
arpl
push
mov
rclb
adc
loop
enter
int
icebp
or
sbb
xchg
in
or
cmp
pop
loope
or
loope
sub
dec
test
adc
mov
cmpsb
into
fs
jle
andb
sbb
push
pusha
inc
add
jns
push
mov
shll
and
lret
adc
dec
ljmp
push
adc
mov
cmp
cmp
jnp
inc
fists
push
push
push
int
fcomip
sub
ret
aas
cmc
pop
or
clc
fwait
pushf
xor
mov
nop
jnp
dec
xchg
movsb
sub
sbb
je
ljmp
lods
in
lea
sbb
dec
sbb
push
add
mov
sub
cwtl
cmpsl
mov
das
addl
sbb
fstps
mov
gs
cltd
mov
dec
cmp
les
add
pop
pusha
sarb
in
das
adc
push
repnz
cli
xchg
xchg
add
aas
add
nop
push
push
inc
sahf
movsb
jns
push
and
loopne
iret
xchg
jecxz
or
mov
mov
sbb
not
dec
pushf
push
scas
hlt
push
lea
mov
clc
pop
and
ror
cmp
mov
mov
xchg
js
sahf
jl
fsts
subb
lcall
sbb
pushf
js
ja
ljmp
stos
incl
je
jecxz
cmpsl
aaa
stos
dec
jl
adc
lea
cld
pop
jecxz
pop
mov
lret
pop
cmc
insl
ss
jecxz
nop
pop
or
mov
mov
ret
scas
adc
in
sbb
ljmp
xor
jne
stos
dec
icebp
sarb
in
xchg
sub
out
push
aas
cmpsl
movsb
mov
pop
aas
sub
loope
jbe
popa
adc
sub
inc
sahf
mov
in
pusha
push
lcall
shll
fwait
cwtl
add
adc
push
add
jno
out
lcall
in
lods
arpl
je
outsb
mov
dec
and
sub
lcall
add
shl
fstps
pop
mov
push
int
pusha
dec
and
jge
and
add
mov
imul
push
into
and
xor
fisubl
mov
stc
dec
sub
lcall
sub
push
es
outsb
dec
mov
cmc
bound
ljmp
lock
lret
mov
in
outsb
out
cs
xlat
repnz
fsubrl
pop
sbb
sub
dec
in
sbb
lods
mov
mov
mov
xchg
ds
fwait
dec
xor
mov
inc
subl
sti
push
fldcw
pop
add
cltd
cmp
cmp
cmc
rol
out
fsave
pusha
jle
sub
pop
dec
ljmp
lds
shl
push
push
pop
mov
sbb
dec
jp
mov
dec
add
or
mov
jl
cmp
xorl
mov
out
sbbb
data16
and
rorl
aad
inc
test
cmp
mov
and
lds
in
jae
gs
mov
jbe
mov
sub
xor
in
scas
jmp
aam
int3
jmp
mov
jg
mov
jecxz
test
ljmp
pop
and
lds
imul
mov
mov
cmpsl
push
sbb
cmp
and
mov
mov
push
xchg
sub
cmp
mov
mov
xchg
cld
loopne
jns
je
jge
aaa
insl
test
fcoms
mov
cmp
and
stos
repz
incb
jle
loopne
sub
ljmp
jge
xor
mov
out
lahf
pop
inc
lods
xor
test
stc
push
ret
jb
hlt
aam
loop
pop
mov
shlb
call
cmp
test
cld
adc
add
push
mov
rcl
inc
and
pop
test
pusha
push
pmuludq
xor
cmp
jmp
inc
shll
pusha
xor
repz
pop
icebp
cmpsb
mov
stc
push
hlt
mov
mov
mov
push
scas
fyl2xp1
sub
xchg
sahf
shrl
ret
fisubl
adc
jmp
lea
mov
scas
out
mov
xor
movsb
lret
and
cmp
enter
mulb
in
pop
sbb
stos
push
outsl
movsb
pop
outsl
inc
push
sbb
sub
loop
mov
cmpsl
lods
cmp
stc
pop
enter
repz
and
das
and
mov
mov
cmc
icebp
jbe
insb
cmp
sub
arpl
adc
xor
push
shl
sub
sub
shr
jg
fwait
sbb
jmp
nop
push
insl
pushf
movsb
fidivs
stos
cmpsl
dec
sbb
cmp
fnsave
sub
mov
out
hlt
cmc
test
aas
jno
xchg
jbe
push
test
mov
aaa
or
repz
and
dec
cmpsb
inc
jo
or
mov
xrelease
stc
mov
sub
jmp
xchg
push
das
shrb
popa
dec
mov
or
pop
jno
int
aaa
mov
or
cli
aam
ds
pushl
xor
sbb
xor
cltd
fidivl
shlb
inc
jbe
cmc
aam
pop
ds
dec
jbe
mov
cmp
pop
daa
or
ret
aas
pop
clc
ss
inc
mov
adc
inc
sbb
stos
and
and
dec
fs
pop
aaa
pop
and
sub
lcall
mov
nop
pop
xor
jmp
std
insl
sbb
je
lods
dec
stos
pop
mov
lret
stc
add
pop
add
ret
push
mov
ljmp
in
fwait
pop
lcall
mov
inc
shll
sub
pop
xchg
xor
push
mov
add
cltd
jg
pop
call
lods
adc
dec
add
pop
imul
filds
aam
ljmp
les
push
imul
lea
mov
sti
add
sbb
ljmp
or
xchg
and
or
pop
adc
pop
in
or
xchg
jbe
sub
and
or
sbb
fdivr
jb
or
xchg
adc
scas
pop
sbb
loopne
pop
lcall
lret
lds
mov
ljmp
in
or
enter
ss
inc
popf
rorl
push
and
stc
mov
fisttpll
mull
and
cmp
loop
cltd
loopne
enter
imul
js
pop
mov
mov
test
out
shl
in
iret
and
mov
bound
scas
aad
adc
sub
call
mov
outsb
ja
dec
dec
sbb
add
pop
int
push
sub
insl
jle
lds
sbb
fidivs
loop
dec
cmc
mov
decl
lock
jp
inc
push
push
dec
repz
adc
rcll
pop
into
imul
xchg
into
sbb
sbb
pop
xor
lods
aam
mov
xchg
fucomp
add
push
leave
enter
enter
and
jb
cwtl
je
fsubp
dec
pop
sbb
sbb
dec
inc
push
ror
daa
xor
xlat
jle
and
leave
js
pop
jg
movsl
ret
mov
cmpsl
push
aam
in
mov
movsl
and
pop
lahf
in
orl
aad
jle
notb
push
xor
jl
sahf
inc
add
ljmp
pop
nop
call
pusha
pop
sub
and
gs
mov
mov
xchg
mov
and
mov
xor
cmp
movsb
sbb
fidivrs
push
add
sti
jnp
xchg
movsl
add
push
scas
test
lods
lahf
adc
add
xchg
mov
xchg
dec
jnp
cwtl
cs
xor
pop
jge
push
jle
push
mov
sbb
aaa
jae
lock
push
lods
inc
out
ficompl
inc
fucomip
addl
enter
incb
jecxz
sbb
dec
fisubrs
int
push
push
imul
daa
sub
out
repnz
mov
adc
addl
ljmp
xor
icebp
dec
xor
dec
cmp
or
out
or
popf
ret
ret
movd
pushf
add
rcrb
andl
pop
mov
or
cmp
jns
leave
mov
popf
push
popf
push
in
je
xchg
jae
and
dec
inc
insl
mov
mov
fidivrs
lods
repz
jl
popa
in
sub
pop
sub
stc
clc
mov
loopne
outsb
cwtl
lock
push
rcrb
and
xor
and
push
jecxz
adc
push
push
subl
loop
adc
mov
push
or
enter
and
inc
imul
cld
adc
mov
dec
aaa
out
sub
lcall
xchg
fnstcw
out
addr16
sahf
nop
xchg
dec
pop
sub
aaa
or
in
mov
and
or
pop
test
adc
icebp
stos
xchg
nop
xchg
int3
mov
stos
ret
xchg
inc
fdivl
mov
loopne
adcl
pop
fnsave
inc
lahf
leave
shl
lret
mov
movsb
rcrb
cmp
xor
iret
or
daa
sarb
add
mov
pop
mov
cmp
dec
fs
mov
pop
pop
je
insb
xchg
rcrl
cmp
arpl
or
or
cmp
jb
and
pop
loope
int
mov
adc
push
lods
or
add
in
outsb
loop
iret
push
xchg
les
add
sub
std
mov
out
push
dec
inc
es
imul
pushf
pusha
mov
fistl
dec
jmp
imul
xchg
icebp
pop
jbe
movsb
cmp
andl
insb
add
sbb
inc
and
cmpsl
sti
hlt
pop
mov
mov
std
cmp
adc
jns
test
sub
inc
jp
movsl
aas
clc
push
mov
sub
in
pop
pop
faddl
test
xlat
inc
sbb
fs
shlb
xor
fdiv
loop
jge
clc
add
mov
sub
cmpsl
shrl
cwtl
adc
cli
mov
or
sti
mov
push
call
call
call
jo
enter
gs
popf
xchg
int3
sbb
fwait
popf
call
or
fisttpl
xor
mov
dec
mov
and
mov
push
mov
arpl
stc
clc
into
dec
in
sarb
insl
loopne
stos
dec
lret
pushf
cmp
xor
xor
pusha
jns
xor
pop
dec
repnz
leave
daa
test
les
rcrl
bound
mov
dec
inc
enter
push
add
loopne
movsl
vcvtsi2sdl
aad
cltd
scas
ss
jnp
dec
sarb
sub
cld
adc
xor
mov
out
arpl
jno
ja
test
in
mov
inc
inc
jmp
mov
mov
popf
shrb
pop
push
lea
push
pop
jno
dec
xchg
push
shll
leave
lock
dec
rcrl
aas
aaa
pop
out
and
jb
ja
das
fxtract
adc
in
jbe
ret
push
fldcw
mov
popa
enter
test
add
mov
xor
push
adc
mov
jg
inc
mov
data16
adc
pop
xor
or
rcrb
push
outsb
lahf
adc
dec
aaa
in
jnp
fsubs
das
inc
bound
mov
mov
mov
sbb
jecxz
mov
mov
mov
test
mov
mov
imul
adc
cld
pop
sarb
loop
fisubrs
les
pop
sbb
cmp
aas
xchg
jl
cld
cli
jl
pop
js
shl
jmp
mov
ljmp
into
mov
bound
sub
fwait
add
das
mov
jne
arpl
cmp
push
std
push
lcall
mov
xchg
notb
jg
lock
pushf
xchg
ror
pop
sub
cli
ret
sub
inc
dec
hlt
pop
ret
andb
lock
inc
adc
dec
sarb
fcomps
or
sbb
into
decl
fstpt
add
ljmp
arpl
fwait
dec
jmp
pop
insb
sub
mov
dec
popa
push
mov
mov
test
jns
nop
inc
imul
add
loopne
xor
push
in
pop
cmp
pop
inc
fsub
out
dec
push
sub
adc
in
push
scas
xchg
mov
das
roll
mov
add
out
mov
imul
mov
jecxz
push
add
adc
xor
pop
jae
mov
cs
inc
dec
enter
sbb
pop
ret
adc
hlt
mov
jns
dec
mov
jne
push
inc
jmp
jne
sub
adc
cmp
cmp
mov
sbb
push
xchg
xor
outsl
mov
cmp
sub
or
pop
fnsave
mov
push
sahf
or
inc
or
call
into
movsl
xor
in
cmp
mov
jmp
mov
adc
mov
mov
mov
std
cmc
jbe
int
pop
les
add
cmp
mov
jle
lds
int3
pop
cmpsl
dec
in
scas
add
add
or
cmp
jmp
sti
bound
xor
ret
jnp
or
cmp
jmp
sti
bound
xor
ret
jnp
or
cmp
jmp
sti
bound
xor
ret
jnp
or
cmp
inc
jb
adc
push
int
fstl
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
addr16
fsts
cmpsl
fstps
fcoms
add
push
add
add
or
push
add
adc
add
pop
add
add
pop
pop
add
jge
push
mov
add
adc
add
add
push
add
add
inc
add
add
add
stos
add
add
imul
add
add
pop
add
add
inc
add
add
add
add
add
add
add
add
add
imul
pop
add
hlt
add
add
add
add
add
add
pushf
add
incl
add
daa
add
add
add
add
and
xchg
jns
and
inc
add
add
daa
add
add
add
add
jge
movsb
add
add
add
add
add
flds
imul
out
add
add
add
imul
push
add
add
add
dec
add
add
add
sbb
mov
add
add
add
add
add
xor
cltd
add
add
add
push
add
add
push
add
add
in
add
add
add
xchg
add
add
add
fiaddl
imul
mov
dec
add
add
add
add
add
add
add
add
inc
add
jne
ja
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
push
add
popf
add
add
add
add
adc
stc
add
add
pop
add
add
cmpsl
add
mov
add
cmpsl
add
jge
incl
pop
add
add
add
out
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
pop
add
add
add
add
add
add
add
add
and
jno
aas
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
movsl
add
add
add
add
outsl
add
add
aam
pop
add
add
add
add
add
add
add
push
add
pop
add
sub
mov
add
adc
aam
mov
add
add
add
stos
add
add
add
add
add
add
add
adc
inc
add
add
add
add
add
add
loope
sbb
test
inc
add
jge
pushf
add
add
add
mov
add
add
add
add
add
lods
cmpsl
pop
jl
shrl
int3
sti
pop
bound
pop
addr16
in
mov
jg
jecxz
mov
pop
mov
call
popa
or
push
pop
sub
in
xchg
into
sbb
loop
adc
iret
cwtl
ss
call
ja
fisttpll
out
xchg
inc
mov
mov
pop
mov
js
mov
scas
inc
test
push
push
stos
sarb
and
xlat
mov
and
scas
xchg
xlat
insl
hlt
sub
and
mov
dec
lods
andl
test
or
adc
fdivp
subb
cmp
sbb
shlb
rcrl
popf
sahf
je
pop
sub
mov
ljmp
adc
hlt
lcall
rcll
mov
testl
mov
push
ljmp
cli
jns
pusha
in
outsl
ja
cmc
les
pop
scas
sbb
or
pop
add
shlb
or
popa
ret
fcomps
dec
pop
int3
push
addr16
lea
into
hlt
xor
jl
in
imul
and
jle
sti
out
insl
daa
addr16
add
clc
adc
sub
ja
loopne
addr16
mov
push
dec
xor
icebp
test
ret
jne
inc
out
ret
push
addr16
dec
mov
call
add
lods
pop
pop
and
int
push
inc
fisubrs
add
int3
sbb
test
dec
sbbb
rcrb
pop
das
push
stos
test
test
xor
pop
and
imul
jb
adc
addr16
mov
xor
fmull
push
xchg
rcll
inc
int
push
jne
inc
jl
xchg
test
cs
add
daa
cmp
ds
shrb
cli
jmp
and
mov
aad
mov
lods
push
sar
enter
cmc
lods
sub
js
sbb
cmp
dec
xchg
cmp
dec
jne
jno
push
jbe
dec
push
cmpl
imul
pushf
loope
jle
pop
xchg
aas
inc
and
adc
pop
cwtl
xchg
pushf
jb
pop
hlt
cld
inc
lcall
jbe
or
add
lock
enter
dec
enter
sbb
jle
or
nop
pop
stos
inc
scas
cs
mov
and
pushf
out
push
push
mov
fcomps
push
pop
clc
fisttpl
add
out
inc
orb
loop
rcrb
mov
sbb
hlt
mov
cmpsb
adc
icebp
mov
outsb
and
xor
jno
jecxz
out
ret
cmp
push
push
popf
xchg
add
arpl
jmp
flds
sub
lods
das
aas
pop
aam
push
fsub
mov
pop
pusha
jge
mov
aas
das
dec
loopne
fbld
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
hlt
add
xor
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
hlt
add
in
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
cmc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
testb
pop
testb
testb
insb
testb
je
add
jl
add
test
add
xchg
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
testb
fdiv
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
add
int3
clc
add
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
clc
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
stc
add
mov
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
pop
cli
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
cli
add
cwtl
cli
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
