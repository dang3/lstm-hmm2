call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
xchg
jae
arpl
cmpsl
hlt
insb
dec
inc
pop
cs
stc
ret
jmp
xchg
mov
mov
imul
add
ret
stc
ret
leave
repz
leave
xchg
mov
mov
mov
imul
sbb
lret
mov
in
shr
hlt
mov
jns
pop
jae
adc
mov
push
cli
cmp
sbb
and
fcoml
js
add
cmc
cmp
add
mov
mov
push
fsubr
mov
ret
mov
pop
add
js
insb
addb
shrb
adc
je
insb
lret
push
outsb
inc
xchg
cltd
jg
mov
mov
jns
dec
inc
icebp
in
cmp
inc
int3
loop
negb
ret
in
sbb
insb
mov
mov
cmp
sbb
rorl
shrl
adc
imul
test
mov
aam
dec
pushf
jae
jle
stos
rcrb
sub
dec
orl
cltd
mov
cltd
jae
arpl
cmp
sub
ret
cmp
jmp
cli
orl
sub
imul
dec
gs
jle
and
scas
lods
subb
ffree
fmul
call
sbb
adc
add
xor
gs
pushf
cmpsb
mov
xchg
jmp
loop
das
das
cs
or
sub
add
xor
and
sar
ret
jmp
xchg
mov
mov
imul
add
xor
and
sar
ret
jmp
xchg
mov
mov
mov
jg
popa
or
inc
out
repnz
arpl
xlat
mov
lock
mov
pop
imull
stc
cli
add
jb
addr16
cmp
enter
pop
xchg
arpl
xor
fcmovnb
sarl
pop
pop
dec
and
mov
xchg
sar
mov
addb
push
adc
ljmp
pop
adc
add
inc
leave
out
pop
cmpsl
push
cmp
int
lret
or
je
pop
mov
or
and
sbb
clc
xchg
mov
pusha
imul
jge
jne
sub
push
arpl
jge
push
push
gs
inc
mov
pop
repz
and
mov
ds
enter
push
sub
xor
push
xor
jg
je
jae
xchg
clc
cmp
xor
jmp
sarb
adc
mov
aam
xor
xchg
inc
xchg
push
enter
push
or
mov
into
sbb
push
loop
or
dec
sbb
fnsave
imul
loopne
fstp
dec
jbe
test
lahf
push
fildl
jnp
cmp
aaa
imul
add
sub
adcb
icebp
clc
push
loopne
int
lods
out
shl
rcrl
popf
lret
test
sub
mov
mov
hlt
add
adc
mov
inc
fimuls
dec
ljmp
add
ss
cmp
or
xchg
loopne
into
pop
adc
shlb
push
jae
push
inc
pop
mov
lock
fmuls
adc
test
repnz
xchg
pop
adc
xor
imul
mov
frstor
push
imul
movsl
scas
dec
adc
push
add
aaa
test
add
mov
jb
push
mov
sbb
scas
and
mov
rolb
dec
insl
inc
bound
add
add
adc
imul
add
loopne
in
cmp
scas
lock
dec
push
cmp
repz
stc
mov
jmp
into
sti
scas
outsb
fsts
pop
inc
xchg
pop
stos
sbb
xchg
repz
aas
enter
inc
popf
test
leave
push
inc
daa
add
sub
add
add
dec
jnp
mov
and
sti
xor
movsb
adc
sbb
scas
xlat
scas
movsl
push
call
xor
fwait
push
and
cmp
and
cmc
je
cld
lds
sub
mov
mov
imul
add
mov
js
lret
fildll
jmp
std
add
int3
cmp
dec
bnd
test
and
out
sub
fdiv
and
imul
ja
xchg
mov
outsl
mov
sbb
xchg
mov
xchg
sub
out
xchg
fnstenv
insb
clc
xor
cmpsl
sub
in
fsubs
fisttpll
int3
mov
scas
jno
xlat
jae
xor
es
mov
jl
mov
pusha
out
jae
ret
pop
ja
cmpsl
out
cmp
addl
adc
inc
or
ja
inc
mov
lcall
and
orb
inc
pusha
mov
dec
es
sahf
xchg
test
outsl
cwtl
rclb
push
inc
mov
push
push
inc
fldl
xchg
sub
adc
dec
addl
daa
inc
pop
jl
imul
mov
mov
dec
je
push
iret
adcb
jp
cmc
iret
lea
cli
pop
fimull
mov
cmpsb
add
mov
fdivrs
movsb
or
inc
cmp
pop
pushf
lahf
movsb
cmpsb
xchg
and
adc
das
inc
jg
sti
dec
inc
in
mov
aas
leave
inc
sbb
sub
in
sahf
sub
ds
jmp
cli
test
push
int3
test
lret
in
loope
call
loop
cwtl
loop
outsl
leave
mov
or
sub
mov
sbb
sbb
into
adc
push
cwtl
jb
in
daa
add
xor
mov
mov
movhps
jae
jno
shrl
adc
std
mov
jl
cmpsb
lret
roll
xlat
mov
hlt
jne
outsl
inc
fsubr
jg
sbb
ds
jle
cli
into
mov
adc
enter
push
or
aam
mov
mov
mov
cmp
xchg
dec
cmp
loopne
test
jne
frstor
loopne
lahf
or
incb
bsr
ret
xor
cltd
ret
add
imul
dec
pop
cmp
ret
scas
or
lret
fcoms
sub
push
xchg
push
jnp
xchg
call
jb
ret
inc
mov
daa
in
sub
popf
icebp
or
bound
inc
iret
or
mov
imul
int
dec
cmpsl
in
sub
scas
cmpl
aad
xor
imul
and
mov
sub
dec
push
lods
adc
in
mov
and
xchg
into
mov
inc
push
out
add
cmc
sbb
fsubs
xor
sub
mov
sbb
or
imul
bound
lds
jg
mov
inc
aam
test
cli
xor
push
rorb
sbb
out
aad
enter
xor
fldt
lahf
pop
push
fs
mov
sbb
inc
or
into
cmp
jbe
aam
jl
xor
mov
dec
mov
shlb
inc
out
sub
sbbl
movsl
cmp
call
jle
cmp
push
pop
stos
mov
adc
sbb
xor
pusha
cmp
jbe
das
scas
push
pop
cmp
mov
icebp
pop
cld
jb
and
pop
icebp
test
ret
adc
lods
outsb
icebp
mov
push
cmpsl
sbb
aam
xchg
orb
bound
sti
cmp
mov
add
push
jnp
outsb
inc
fs
and
daa
push
enter
cmp
mov
xchg
jno
fstpl
adc
and
call
in
bound
sbb
mov
and
jl
lcall
jmp
push
inc
xor
mov
dec
popa
decl
into
xor
and
lea
ficomps
dec
xchg
int
add
lcall
sbb
test
sahf
out
and
cmp
pop
adc
and
mov
mov
and
in
mov
dec
jnp
mov
call
add
push
out
or
ja
insl
add
rol
xchg
jg
xchg
cld
pop
jge
cltd
push
outsb
sbb
inc
sbb
push
xchg
cmp
call
cwtl
xchg
loope
pusha
shlb
mov
pushf
or
cmp
or
xchg
inc
mov
fcmove
into
push
jns
into
outsb
mov
ljmp
push
mov
and
jge
jae
mov
adc
jge
adc
mov
push
fists
ret
jno
outsl
movsb
loop
adc
mov
mov
dec
pop
ljmp
fnstenv
mov
jecxz
mov
add
inc
mov
sbb
hlt
loope,pn
or
pop
adc
pop
stc
test
sbb
test
jmp
roll
or
or
jnp
adc
in
loope
lods
loope
mov
or
mov
sbb
inc
or
repnz
cmp
pusha
inc
mov
xor
push
inc
out
ds
cmp
repnz
jmp
dec
imul
fisttps
cmp
rol
cmp
mov
cltd
or
movsl
sarb
add
xchg
out
cltd
stc
jle
rorl
testb
insb
loopne
bnd
call
leave
lods
scas
fimuls
xchg
cmpb
imul
lahf
femms
outsb
enter
andl
outsl
push
outsl
es
push
and
jne
dec
push
push
sub
insb
imul
mov
or
lea
scas
dec
ret
mov
outsl
cltd
ljmp
ror
fisubs
jmp
xor
inc
clc
sarl
dec
xorl
insb
aad
popf
ljmp
mov
xchg
fcomi
inc
outsb
inc
jmp
jl
xor
lods
scas
pop
push
fidivs
inc
shl
cwtl
xorl
enter
mov
xchg
jg
push
enter
mov
rcrb
mov
cmp
pop
test
mov
fisttpl
mov
lcall
jns
add
mov
mov
dec
dec
cmp
cli
mov
ret
adc
test
fsubrl
psubw
subl
push
fidivrs
sbb
ja
pop
icebp
icebp
xor
lcall
sub
negb
cltd
addb
aas
dec
lret
or
or
stos
in
fldenv
xor
add
imull
pop
add
ret
add
mov
mov
push
mov
sbb
adc
lock
sahf
fstps
fsub
cmp
sahf
cmp
pop
push
dec
xor
mov
fs
sbb
lea
repz
push
loop
push
or
fistpll
hlt
add
pop
jmp
icebp
cmp
xor
mov
sbb
adc
and
and
repnz
adc
fstpl
xchg
lcall
jp
add
or
fs
push
pushf
loop
jecxz
fldenv
sub
or
xchg
jle
daa
es
xor
push
mov
or
notb
loope
mov
cmp
pop
movsb
adc
fcompl
testl
pusha
rcl
mov
sbb
xorb
outsl
xor
pop
push
inc
mov
ja
popa
aas
xchg
aaa
mov
push
std
push
popf
mov
adc
or
test
cs
lea
scas
mov
jns
dec
mov
in
ljmp
fiadds
xor
cmp
mov
pop
scas
call
movsl
lret
stc
pop
inc
mov
push
stc
ret
or
mov
and
cmc
fisubl
jmp
mov
imul
sub
imul
push
ret
ja
dec
mov
cmp
fldl
mov
push
stos
add
dec
hlt
je
and
push
add
icebp
mov
insl
movsb
outsl
xchg
jnp
mov
ds
jmp
jo
push
or
cmp
jo
fwait
pop
mov
inc
push
jecxz
sub
xchg
out
sbb
adc
es
push
std
jae
mov
mov
ja
call
and
mov
mov
test
outsl
loop
lea
in
pop
sbb
cmp
or
adc
clc
jecxz
jp
xor
xchg
cmp
cmc
push
xchg
jo
les
xchg
leave
faddp
mov
movsl
dec
inc
dec
mov
push
lcall
shrl
jle
adc
lods
mov
arpl
adcb
cli
push
cmp
in
xor
testl
sbb
jecxz
sbb
mov
pop
aaa
add
add
jl
inc
jbe
sti
jns
sarl
mov
fs
bnd
inc
and
push
in
aaa
cltd
sti
dec
jge
in
xor
sub
jmp
jnp
jne
mov
fldlg2
rol
dec
mov
push
sarb
test
icebp
push
jecxz
cmp
out
cmp
jo
test
mov
std
cmpsb
fs
xor
dec
jmp
and
cmp
adc
push
stos
clc
in
stos
fwait
push
leave
mov
test
stos
inc
mov
sbb
dec
jnp
push
out
pushf
pushf
into
add
push
sub
movsb
inc
sub
insb
pop
push
out
inc
mov
dec
int
sbb
inc
add
xor
subl
je
insb
pop
dec
insb
xchg
imul
lahf
add
aaa
test
div
push
fnstsw
lret
scas
adc
hlt
mov
out
shrb
push
add
popa
or
in
sbb
loope
adc
pop
pusha
hlt
and
push
adc
clc
fcmovnbe
into
adc
pop
mov
shll
mov
scas
push
aam
fisttpll
dec
insb
xlat
jne
pop
push
mov
xchg
cmp
out
xor
mov
test
into
jns
or
into
jmp
test
in
and
inc
inc
jmp
lea
xor
jg
jne
xchg
ljmp
adc
adc
call
add
push
mov
ds
dec
inc
std
outsl
jle
push
in
sbb
loope
cld
jbe
inc
orb
sub
push
xor
xchg
sti
xor
push
enter
push
mov
or
jmp
mov
jmp
shlb
inc
shrb
int3
push
test
dec
add
jp
xorl
lret
xchg
pop
hlt
pop
je
xlat
dec
dec
xchg
jmp
xchg
xchg
fstps
lret
pop
repnz
xchg
push
pop
mov
jmp
mov
push
shll
sub
out
jge
adc
or
shll
cmp
aam
jno
push
cwtl
sahf
in
xor
push
pop
inc
mov
adc
shl
or
rcl
or
mov
loopne
adc
leave
push
roll
divb
and
fwait
mov
sbb
inc
jl
pmaddwd
addr16
jno
je
cmp
inc
dec
mov
ret
addl
out
jo
xchg
push
jo
lcall
arpl
sbb
jnp
decb
hlt
xchg
push
jle
inc
adc
or
sub
fldenv
xlat
ror
dec
pop
jns
mov
ja
sub
jmp
rclb
xchg
xor
cmp
add
cmp
push
inc
loopne
js
adc
ss
add
subl
test
stc
cmpsb
aad
xor
mov
dec
mov
rcrl
addr16
or
out
inc
dec
int
mov
mov
pushf
mov
popf
xchg
or
or
mov
sarl
cli
push
mov
mov
subb
push
cmp
hlt
roll
stc
cli
ficoml
xor
dec
and
sahf
cmp
jp
jno
mov
adc
data16
jb
out
jnp
add
cmp
cmc
pop
jge
repz
cmp
js
mov
aas
mov
jo
xorl
fsubrl
aas
push
adc
push
testb
lock
push
mov
mov
nop
in
inc
into
adc
stos
push
xor
jne
inc
pop
lea
jge
int3
or
mov
mov
xchg
sbb
cli
sub
icebp
in
fldt
push
jp
es
xchg
jg,pt
insb
jmp
pop
insb
fildll
sbb
in
dec
mov
dec
jb
pushf
xchg
cmc
enter
js
inc
fldt
push
test
adc
adc
ret
mov
or
stc
pop
adc
pop
aas
or
mov
outsb
popa
sti
lods
cmp
sub
mov
or
out
and
inc
xor
stos
lcall
pop
jmp
pop
push
xchg
xor
sub
leave
gs
xchg
dec
inc
jge
dec
adc
test
dec
stos
xchg
ds
mov
or
shlb
mov
jae,pt
fsubrl
cmpsb
mov
pop
sub
rorb
xor
push
daa
xor
add
ret
cli
movsl
sbb
dec
mov
adc
icebp
cmp
pop
mov
mov
add
adc
into
xor
out
out
jo
insl
mov
cmp
fsts
push
pop
jae
sbb
sbb
jo
ljmp
repz
notl
in
mov
pop
xor
and
mov
mov
lds
mov
ret
and
push
arpl
dec
shlb
cmpsl
lcall
leave
mov
stos
lret
test
out
xor
sbb
push
jge
add
jnp
pop
jp
fiaddl
xchg
js
ret
cmpsb
ficoms
mov
clc
aas
ficoml
sub
mov
into
rorb
mov
test
dec
mulb
in
ret
nop
fwait
or
mov
data16
popf
sub
popf
divl
jmp
mov
cmp
aam
test
lods
icebp
test
cwtl
test
and
sbb
lea
add
mov
lds
mov
cmp
clc
enter
inc
xor
cmpl
push
data16
out
push
in
ja
mov
nop
imul
or
and
pop
xchg
xchg
inc
adc
mov
jno
add
mov
or
jae
jo
pop
shr
adc
daa
cmp
pusha
test
out
push
and
pop
icebp
mov
repnz
jle
xor
mov
test
bound
data16
into
pushf
mov
into
cltd
push
dec
cld
dec
jo
loop
or
lods
or
int
mov
push
jg
jno
pop
and
das
outsb
sarl
scas
mov
pop
dec
les
inc
loopne
nop
cmp
ret
daa
mov
mov
pop
stos
imulb
daa
mov
dec
inc
rcrb
and
cmp
adc
dec
lcall
cmp
stos
jno
outsl
mov
loop
mov
lea
insl
cmc
ror
sarb
jne
repz
mov
addr16
mov
or
rcl
in
aaa
imul
sub
enter
scas
dec
sbb
mov
and
fidivs
push
inc
push
sbb
jne
add
cmp
jp
xor
das
cmp
iret
push
fcmovnb
aaa
add
dec
pop
ds
pop
lods
loopne
sbb
cmp
cmc
or
int3
mov
cmc
inc
xor
pop
je
mov
aaa
xchg
push
stos
fildll
inc
xchg
push
sbb
mov
push
and
leave
cmp
rol
add
lock
pop
and
pop
inc
sbb
ss
dec
js
rcl
into
flds
aas
dec
push
mov
ja
mov
mov
dec
out
hlt
sbb
popf
sbb
push
fistl
inc
daa
or
aas
jae
into
mov
imul
xchg
jne
sbb
aas
ss
add
mov
cld
mov
das
pop
test
dec
es
int
out
jno
int3
testb
and
js
into
or
push
mov
add
shl
pop
div
cld
sbb
adcl
outsb
sbb
test
and
out
push
lcall
adc
aam
adc
xor
mov
jbe
outsl
insl
cld
xchg
jp
fidivs
addr16
mov
cmp
sub
and
out
scas
add
insb
fs
pop
push
add
ja
inc
rcr
or
push
dec
add
adc
pop
mov
sub
mov
cmpsl
pop
into
jg
cltd
pop
insl
repz
sbbl
ficomps
fwait
ds
xor
xor
and
fisttpl
data16
pop
lea
adc
aam
xchg
cmc
fstpl
imul
ret
les
pop
imul
cli
pop
push
js
cmpsl
add
sti
subb
add
push
lock
popf
or
scas
add
out
mov
adcb
jg
pop
cwtl
dec
pusha
push
test
cmpsl
sbb
mov
dec
and
shrl
fcoml
nop
xchg
inc
dec
add
jns
adc
or
mov
pop
jb
mov
adc
add
imul
or
test
arpl
sub
roll
hlt
cvtps2pd
or
mov
pop
mov
test
hlt
lds
add
imul
pop
outsl
insl
sub
or
sbb
imul
jae
cmp
cs
cmp
pop
cmp
push
xor
aam
stc
jnp
sub
mov
mov
lret
movsb
inc
sbb
daa
push
and
pop
int
and
dec
push
mov
pop
sbb
loopne
gs
or
inc
in
mov
push
sbb
pop
dec
and
nop
aas
pop
popf
mov
call
sahf
inc
mov
fs
dec
adc
sbb
jne
hlt
or
imul
shr
lock
lds
sti
pop
addr16
andb
out
xor
sub
cltd
cmp
sub
pop
jno
and
loopne
xor
pop
adc
mov
test
cmpsl
int3
loope
orb
xchg
xchg
sbb
enter
scas
lea
fnstenv
lahf
movsb
xchg
xchg
add
bound
aaa
shll
popf
aaa
sbb
arpl
in
jae
inc
mov
cltd
fmul
leave
xchg
pop
mov
rcrl
int3
lret
popf
fs
pop
test
xor
lahf
jl
mov
xchg
imul
add
xor
and
sar
ret
jmp
xchg
mov
mov
imul
add
xor
and
sar
ret
jmp
xchg
mov
mov
and
arpl
cmp
xorl
and
jmp
xchg
mov
mov
imul
add
mov
mov
inc
pop
mov
dec
pop
jbe
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
lret
shr
cli
loopne
clc
std
out
fists
pop
inc
push
jp
or
sbb
lret
shr
cli
loopne
nop
lcall
push
pop
and
jp
or
sbb
sub
and
rcr
shr
cli
loopne
nop
lcall
clc
jns
sbb
pusha
or
outsl
imul
lahf
ljmp
arpl
xor
and
xchg
mov
cmp
xchg
pop
mov
lcall
mov
test
pop
gs
jl
imul
mov
addb
mov
sbb
in
hlt
lods
dec
mov
or
xchg
shrb
std
inc
sub
xor
mov
sub
popl
call
iret
mov
cltd
xor
outsl
jne
pop
jne
mov
and
push
pop
out
icebp
mov
aad
cmp
rclb
adc
or
pusha
adc
add
cmp
or
fcmovb
ljmp
subb
pop
inc
push
jp
or
sbb
sub
cmp
mov
mov
add
lock
aas
mov
jae
xor
mov
lock
in
jmp
pop
adc
std
jae
imul
jo
cltd
ficoml
iret
nop
lcall
push
pop
inc
push
jp
or
sbb
sub
cmp
lret
shr
cli
loopne
nop
lcall
push
pop
inc
push
jp
or
sbb
sub
cmp
lret
mov
test
cli
into
and
push
push
jmp
sub
mov
adc
sbb
lret
xchg
mov
inc
fisubrl
xchg
push
pop
sub
cld
mov
pusha
divl
mov
imul
add
popf
or
scas
push
cltd
mov
inc
lahf
imul
jmp
lret
filds
push
xchg
jle
cli
sbb
insb
insb
add
dec
inc
push
mov
lret
or
lcall
test
adcb
push
add
scas
jae
cmp
aad
lret
mov
sub
push
outsb
or
jl
cld
mov
add
test
sbb
adc
push
test
mov
decl
sub
mov
push
hlt
adc
loop
pop
and
fisubl
mov
add
stos
js
daa
ret
jbe
push
roll
mov
sbb
sahf
pop
into
inc
xchg
xlat
insb
fldenv
mov
cs
dec
mov
aad
push
adc
stos
jmp
cs
shl
bound
gs
sbb
ds
sub
daa
aaa
or
push
js
pop
mov
shrl
mov
mov
jge
pop
notb
lods
add
xor
sub
cmp
bound
imul
pop
dec
push
or
cmc
sub
add
in
sbb
and
stc
fimuls
xchg
jns
inc
pop
dec
xchg
pop
adc
push
mov
jmp
leave
xchg
push
inc
popa
pop
mov
mov
and
xchg
xor
push
xor
sub
cmp
aas
inc
mov
inc
push
pop
insb
es
pop
jmp
xor
add
loopne
hlt
mov
inc
cs
jecxz
mov
pop
outsb
mov
sti
popf
sub
mov
divl
cli
and
mov
sub
xor
pop
jns
push
repz
mov
pop
pusha
sarb
lret
icebp
aaa
push
xchg
arpl
stos
mov
dec
aas
in
scas
jae
pop
sbb
lods
or
mov
pop
push
xor
mov
push
mov
aas
xor
mov
xchg
or
jae
push
ljmp
repnz
xlat
push
jp
jbe
or
ja
stc
lahf
adc
mov
lret
scas
adc
pop
daa
dec
aad
outsl
push
adc
sti
sub
jbe
mov
jp
jo
test
add
add
cli
xor
push
or
mov
movsl
ss
lahf
jno
push
mov
jne
test
dec
mov
inc
jp
out
dec
xor
push
adc
cmovnp
xchg
aaa
fistpl
repz
movsb
shll
fildll
jb
mov
shrb
rcrl
outsb
sbb
adc
jmp
fucompp
xchg
pop
ss
dec
outsl
sbb
fwait
or
fcmovu
pop
add
inc
push
sti
scas
out
sbb
call
das
push
sbb
addr16
aaa
push
mov
iret
mov
stos
fdivs
sub
mov
pop
ret
gs
mov
cs
stc
gs
bound
fdivr
sub
add
sub
arpl
cmpsb
in
lock
and
popf
push
jns
out
or
rorb
jo
or
adc
movsb
rcll
xchg
jp
sub
mov
mov
push
lods
fcom
sbb
mov
insb
in
mov
ret
adc
fistps
mov
and
sub
xchg
call
and
sti
fsubrp
pop
sbbb
faddp
dec
pusha
or
or
cs
mov
inc
out
add
xor
das
fs
sbb
pop
or
sub
or
les
cmpsl
add
imul
sub
inc
stos
and
lock
addb
adc
mov
adc
mov
test
inc
inc
and
push
rcrb
xchg
jns
ja
push
ja
mov
lods
mov
mov
sub
mov
cmp
or
xchg
fnstcw
insb
fisttps
out
fildl
es
insl
mov
jbe
cmp
xor
lahf
out
cmp
mov
ds
stos
mov
sub
pop
xor
out
cwtl
xor
or
in
xchg
jbe
cmp
cmpb
adc
cmpsb
out
imul
jns
loope
sub
jnp
call
lds
inc
out
repz
push
lcall
mov
call
xchg
jecxz
clc
ljmp
mov
or
xor
ljmp
xor
and
aam
lds
xor
lahf
stos
dec
call
cmp
fdivrl
pop
aas
xchg
adc
pop
sbb
push
daa
or
cmpsb
or
xor
fcoml
addr16
add
out
pop
mov
pop
push
push
out
dec
or
dec
pusha
add
cmp
fistl
in
xchg
mov
jmp
lock
mov
fiadds
jne
push
jmp
cwtl
sub
add
jnp
mov
addb
pop
xorl
movsb
lods
or
imul
xchg
push
pop
lea
push
les
popf
cli
xorl
jle
dec
jne
xor
sbb
dec
xchg
pop
push
jnp
les
mov
push
icebp
sub
or
mov
xchg
mov
adc
lods
and
dec
fdiv
push
addr16
xor
loop
repnz
gs
inc
repz
mov
ret
lret
test
ja
sbb
faddl
into
leave
jns
arpl
pusha
xchg
add
mov
xchg
cltd
sbb
inc
jno
push
dec
add
add
mov
test
pop
call
inc
mov
pop
sbb
out
adc
les
lcall
aam
and
mov
movsb
lret
sarb
ja
dec
aas
add
int3
scas
arpl
cs
bnd
in
sbb
loop
lret
aas
jge
push
adc
sub
outsl
adcb
insb
jle
jle
jbe
sub
ljmp
andl
cmp
push
adc
in
mov
mov
bound
xchg
or
fcomip
xor
scas
cwtl
sub
xchg
test
repz
aam
cmp
xor
mov
push
div
shr
das
lahf
out
in
cmp
std
inc
or
dec
jmp
fcmovu
dec
test
push
mov
repnz
add
test
mov
mov
pmuludq
mov
lods
pop
leave
push
mov
js
inc
test
shr
inc
dec
or
jge
push
xor
test
mov
adc
call
jl
pop
fimull
cmp
aas
mov
jg
jo
adc
in
mov
jb
loopne
mov
xlat
roll
xchg
jnp
fmuls
lret
lods
lahf
mov
aad
shlb
xchg
jo
dec
and
cmp
rol
xchg
das
xchg
aam
rol
pop
dec
mov
or
pop
enter
arpl
inc
orl
adc
inc
sub
out
mov
or
mov
inc
sahf
movsb
mov
mov
cmc
lds
orb
push
cli
addb
sbb
jp
xor
fwait
dec
pop
movsb
and
mov
add
inc
sub
xor
mov
or
aaa
sub
xor
repz
jae,pt
xlat
sti
sub
or
pushf
test
lea
sub
ljmp
aam
jbe
cmp
pop
or
mov
test
pop
sub
and
xor
adc
outsl
xor
enter
movsb
or
mov
lcall
cmp
sbb
imull
xchg
jo
xchg
mulb
aas
adc
sbb
and
xchg
inc
push
pop
push
testb
fistpll
notb
jnp
xor
xlat
jle
cli
xor
or
pushf
sub
fst
lahf
inc
xchg
les
stc
mov
add
inc
cmp
pushf
cmp
xchg
dec
mov
xchg
sbbb
movsl
data16
mov
and
sub
pushf
insl
adc
mov
cmp
into
add
sbb
fwait
lods
and
ljmp
cli
cmpl
mov
sbb
dec
add
mov
movsb
mov
xchg
pop
or
iret
test
sqrtps
adc
xor
dec
jbe
fldt
decb
ret
and
pop
push
sub
sub
xor
shll
ja
mov
ret
fchs
mov
insb
icebp
adc
xchg
mov
jp
inc
jl
mov
pop
out
stc
sahf
inc
inc
ss
add
mov
mov
mov
pop
cwtl
into
lahf
pop
cmc
jno
mov
sbb
and
pusha
jne
mov
pop
inc
pop
xchg
pop
inc
lods
outsl
lret
sar
or
inc
and
push
leave
insb
test
nop
dec
mov
push
clc
xor
gs
push
or
mov
inc
dec
or
mov
daa
arpl
cmova
add
cmp
int3
sbb
cli
cmpsl
insl
in
dec
flds
mov
xchg
ja
lods
jge
dec
fmul
adc
push
loope
cli
xchg
mov
jmp
cwtl
pop
lret
inc
adc
mov
insl
xor
sarl
jp
pop
xor
or
ja
and
sarl
add
loope
add
mov
fcoml
cmp
sub
repnz
mov
and
mov
out
loope
mov
mov
test
mov
addr16
adc
push
aas
jo
adc
mov
jno
xchg
mov
aas
add
mov
mov
xchg
jg
repnz
mov
lret
push
jge
mov
mov
pop
insl
sub
dec
sbb
mov
into
cmpsb
fs
adc
lock
dec
add
rorl
push
in
mov
sarl
out
push
jo
in
cwtl
push
xchg
rorl
jecxz
mov
leave
and
ja
leave
rorl
dec
les
dec
mov
dec
and
add
xchg
dec
mov
mov
xchg
xor
fidivl
push
mov
cmp
inc
aad
pop
int
cmp
mov
sti
lret
stos
inc
aas
adc
inc
ja
pop
jns
fadd
and
lahf
cltd
sti
imul
add
insb
dec
cmc
cld
jns
popa
hlt
or
xchg
mov
dec
data16
dec
out
adc
sbb
jno
in
imul
xorb
andb
popa
push
lcall
in
pop
xchg
js
xchg
xchg
cmp
xchg
stos
enter
sbb
mov
out
outsb
mov
mov
lahf
ds
arpl
cltd
cmp
jmp
insl
rorb
lods
loop
jns
jbe
mov
outsb
sbb
lods
addr16
pop
repnz
nop
jmp
sbb
push
dec
call
out
xor
sbb
daa
push
jmp
in
sub
popf
xlat
and
rol
cmp
mov
das
mov
adcb
mov
cmp
sbb
loop
into
sub
cwtl
jmp
xchg
jne
inc
push
or
dec
imulb
popf
sarb
sub
pop
sbb
icebp
mov
xchg
jge,pn
shrb
mov
mov
inc
push
and
add
and
lods
leave
shlb
xor
les
jns
adc
aaa
repz
and
pop
pushf
mov
jns
scas
lahf
dec
xor
xor
jae
fwait
outsl
fcomps
ljmp
mov
rolb
pusha
pop
ss
xchg
imul
push
push
ljmp
pop
mov
shrb
iret
cs
mov
rorl
ja
push
adc
adc
mov
leave
mov
sub
fs
cmp
das
push
and
ljmp
out
sub
in
loopne
loop
adc
add
mov
out
push
xchg
ret
push
je
negb
mov
shll
pop
xor
outsb
jns
mov
fstp
sbb
adc
pop
push
test
pusha
adc
add
mov
loop
pop
int
mov
rorl
xorb
aas
mov
and
sub
jne
ss
cli
dec
popf
push
daa
clc
mov
jae
shl
popf
lds
enter
xchg
jns
cmp
push
mov
cmpl
inc
xchg
mov
mov
js
jo
add
or
adc
adcl
jae,pt
or
dec
mov
outsl
push
arpl
popa
inc
mov
idivb
fnstenv
jns,pn
jb
insl
fs
gs
sbb
insb
cmp
outsl
push
pshufw
pop
fldl
jb
adcb
hlt
xor
pop
clc
mov
pop
lock
and
inc
mulb
inc
imul
sub
sub
push
xchg
mov
cltd
jnp
lock
popl
cs
and
fldt
pop
adc
jle
leave
pushf
pop
mov
int3
xchg
cmp
xchg
je
adc
sbb
fs
cmpsl
pushf
lods
mov
adc
sub
dec
xor
mov
sti
fs
call
icebp
movsb
sbb
jl
jno
mov
jl
jg
sub
sbb
mov
mov
mov
push
ja
aaa
dec
dec
adc
bound
enter
adc
or
jae
mov
pusha
inc
xorl
cwtl
fimuls
inc
movsl
fsubrs
jg
cvtps2pi
out
push
imul
pop
and
popf
jle
mov
pop
mov
ret
scas
or
fwait
imul
jle
fsts
in
testl
and
jmp
dec
inc
and
clc
pushf
mov
or
xchg
loopne
add
xlat
lods
arpl
into
dec
aas
mov
add
fnsave
cli
sbb
pop
mov
flds
inc
inc
call
add
push
jns
lods
fdivrs
out
sub
sub
mov
inc
out
loope
out
mov
push
mov
bound
xor
repnz
adc
sbb
mov
xchg
les
sbb
xchg
out
jne
int3
mov
std
sub
push
mov
hlt
lea
sbb
xor
cmp
inc
xor
or
aas
dec
fldln2
insb
xchg
lds
out
jbe
mov
sbb
or
mov
jns
arpl
dec
cltd
nop
mov
jae
push
or
int3
mov
les
push
pop
divb
ja
xchg
lock
fisttps
je
add
jle,pn
ljmp
mov
loope
mov
cld
nop
adc
sbb
fdivs
nop
cli
push
and
ja
mov
jae
xor
ror
dec
insl
aas
push
mov
mov
sbb
es
push
sub
lcall
loopne
insb
jns
repz
add
cltd
leave
out
pushf
xadd
lfs
sahf
mov
push
scas
fisubrl
in
add
js
aaa
push
sbb
icebp
mov
mov
fwait
adc
movsb
inc
enter
ficoml
inc
dec
add
push
nop
push
push
iret
mov
sbbl
cmp
popa
sbb
and
xchg
iret
jmp
mov
aas
mov
scas
jle
fsubl
pushf
xchg
cmp
ljmp
popa
sbb
lret
xchg
push
inc
daa
loopne
out
ret
sbb
ss
and
xor
jecxz
dec
mov
dec
shlb
inc
sub
cmp
mov
jg
aas
dec
lretw
adc
push
test
jl
dec
ret
dec
jmp
lret
ss
lret
dec
je
mov
stos
push
xchg
or
or
mov
pop
je
imul
add
comiss
dec
mov
mov
cmp
inc
fistpll
sbb
and
iret
push
xor
xchg
scas
sub
dec
add
hlt
das
xchg
rol
aas
mov
pop
subl
lret
pop
addr16
adc
or
aaa
cmovs
mov
stos
repnz
leave
mov
push
shl
aaa
mov
mov
insl
out
push
fldenv
popl
or
jmp
je
es
sbb
jo
or
stos
mov
hlt
lcall
mov
cmp
mov
dec
xchg
pop
repnz
mov
aas
sub
imul
divl
push
cs
or
cwtl
clc
stos
call
push
in
sar
imul
out
repz
xchg
sub
aaa
xor
jae
outsb
hlt
adc
orl
mov
cmp
gs
dec
mov
lock
pop
sbb
sub
imul
mov
hlt
shlb
or
mov
dec
push
mov
leave
cmp
pop
rorb
sub
push
in
leave
sub
jbe
push
sub
and
sbb
mov
jnp
or
fcompl
adc
popa
pop
fisttpl
test
mov
sub
xchg
movsl
test
cmp
fnstcw
aas
pusha
cs
test
mov
call
in
xor
sarb
mov
pop
jae
add
pop
pusha
push
fbstp
out
xchg
adc
push
pusha
fcoml
xorl
adc
movsb
fstpt
xchg
or
push
xchg
loop
push
fs
dec
pushl
push
pop
flds
bound
mov
jno
push
test
xorl
and
or
mov
cli
dec
xchg
inc
push
sahf
xchg
add
dec
dec
imul
mov
mov
xor
sbb
jmp
push
rolb
sbb
mov
sbb
inc
mov
push
test
sub
sub
sbb
mov
int3
inc
pushf
push
xchg
inc
sub
xchg
in
shll
lret
xchg
rcrl
ror
popf
hlt
jns
lcall
lret
icebp
movsb
pop
scas
sbb
mov
push
adc
dec
daa
push
ljmp
insb
testl
nop
bound
or
popa
mov
arpl
mov
xchg
fdivrl
inc
movsl
xor
xorl
fistpl
xor
adc
sbb
pop
sub
inc
and
aaa
jmp
add
xor
inc
sub
push
adc
push
lock
cmp
aas
cmp
mov
subl
sbb
mov
fstps
xchg
mov
sub
adc
aaa
mov
pop
mov
nop
xchg
adc
push
fistpl
test
outsl
mov
xor
popa
stos
adc
cmp
sbb
scas
mov
out
test
sub
imul
cmpsl
sub
fmul
and
repz
jge
std
jle
adc
add
pop
and
and
jg
inc
mov
cltd
push
enter
adc
mov
jl
int3
xchg
fstpl
mov
or
and
add
popa
push
cmpb
loop
repnz
inc
cmpsl
xchg
mov
fistpl
cmp
add
call
sub
add
test
add
popl
jg
mov
idivl
sbb
and
insl
cmpsb
push
mov
adc
movsb
iret
mov
bound
rclb
imul
pop
mov
sub
test
fists
xchg
and
xor
jae
ret
pop
mov
lret
lret
mov
cmp
movsb
jbe
mov
icebp
jp
sti
mov
mov
in
ljmp
outsl
sbb
shrb
cmpsb
mov
js
jns
adc
ljmp
insb
cld
bound
out
ja
mov
clc
idivb
pop
mov
inc
push
int
jnp
mov
rclb
cmc
test
xchg
daa
fsubrs
push
add
repnz
pusha
jge
cmc
cmp
pushf
mov
cmp
dec
jmp
mov
out
add
inc
xor
push
repz
ja
push
xchg
jmp
inc
xlat
xor
daa
xchg
cmp
bound
cltd
test
inc
or
inc
mov
aad
cli
loopne
nop
lcall
push
pop
inc
push
jp
or
sbb
sub
cmp
lret
shr
cli
loopne
nop
lcall
push
pop
inc
push
jp
or
sbb
sub
cmp
lret
inc
ljmp
add
rcrb
push
jnp
or
sbb
sub
cmp
lret
shr
cli
loopne
nop
lcall
push
movsl
ljmp
xchg
call
iret
ret
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
scas
repnz
adc
arpl
dec
mov
lret
pminsw
lahf
outsb
mov
pop
stos
pop
push
scas
dec
mov
sbb
or
cmp
sub
aam
ljmp
dec
stos
pop
subb
lahf
or
inc
call
iret
rcr
fisubrl
cmpsb
sbb
push
jno
sub
and
sub
sub
jecxz
iret
fcompl
adc
int3
sub
jmp
push
popa
push
inc
out
or
mov
fwait
push
scas
sbb
adc
cmc
jb
inc
scas
push
pop
aas
aaa
rolb
sbb
mull
push
or
ljmp
adc
sbb
das
xor
loopne
nop
pop
inc
dec
ret
pop
and
stos
pop
lcall
cmp
sub
iret
rcrl
lcall
push
pop
fildll
inc
test
xchg
in
mov
jle
fistps
rcrb
pop
imul
mov
test
iret
xchg
xchg
mov
rcll
das
xor
sti
jp
loopne
jle
das
decl
mov
jp
push
lahf
sbb
dec
cmp
xchg
fildll
das
pop
aas
and
hlt
pop
cli
outsl
xchg
jg
dec
into
sbb
scas
cmp
ds
add
je
jg
sub
mov
stos
pop
mov
sbb
cmp
cmp
ret
mov
mov
loop
mov
push
out
jmp
sub
jns
or
sub
pop
fisttpll
cmp
sub
fisubrl
lret
pminsw
lcall
pop
pop
scas
dec
mov
sbb
or
cmp
sub
fisubrl
lret
pminsw
lcall
pop
pop
scas
mov
push
sbb
pop
cwtl
dec
cmp
jge
enter
adc
hlt
sbb
sbb
dec
pop
and
xor
xchg
cmp
fidivl
hlt
sub
ret
cmc
adc
pusha
mov
and
repnz
pushf
dec
stos
fnsave
add
inc
pop
bound
neg
icebp
mov
jge
sub
ds
stos
lds
jo
pop
sbb
dec
mov
sub
fnstsw
push
sub
push
pop
out
fsubrl
inc
xor
fildl
push
fmul
xchg
mul
jns
mov
out
xor
inc
pop
scas
test
sahf
pushf
and
shl
dec
jl
sub
mov
cmp
test
out
xchg
test
push
in
xor
xor
das
lea
jo
push
or
xchg
pop
xor
hlt
mov
cs
stos
mov
mov
or
xor
pop
faddl
jle
pop
dec
mov
or
rorb
imul
fistps
mov
push
jg
bound
in
jmp
pop
pop
sub
andl
fdivs
repnz
daa
shlb
loop
insb
repnz
add
dec
movb
cltd
xor
pop
lods
jb
sub
rcll
adcb
cmpsl
popf
add
daa
cwtl
xor
pop
cmp
jl
pop
pop
ds
lods
aas
pop
jo
data16
adc
nop
mov
lock
mov
or
and
jbe
add
inc
push
pushf
dec
pushl
push
xchg
sahf
inc
pushl
in
dec
std
push
fsubrs
xor
fiaddl
stos
out
add
fisttpll
ffree
aam
xchg
push
jmp
sub
jecxz
dec
ja
stos
into
adc
stos
clc
testl
aam
mov
shll
iret
dec
gs
aas
mov
mov
aas
fldenv
daa
adc
test
dec
xor
test
lret
inc
sbb
or
sub
push
cmp
out
dec
dec
mov
or
xlat
mov
jle
in
mov
in
mov
and
jo
xor
ljmp
jae
fisubrs
dec
pop
xchg
filds
sahf
jmp
and
dec
clc
xchg
ljmp
lret
imul
pop
packsswb
mov
mov
xchg
mov
sti
pop
sbb
mov
fwait
sbb
mov
gs
notb
add
pop
adc
divb
mov
pusha
mov
sbb
negb
push
pop
rcrl
sbb
cli
xor
xchg
fstpl
test
in
sub
push
push
xchg
xchg
sub
arpl
rol
test
lods
stos
sbb
cmp
push
stos
sub
imul
das
lcall
or
push
xor
je,pn
xor
sub
inc
js
jno
cmp
inc
pop
adc
mov
add
sub
push
sbb
mov
les
pop
and
aaa
cmp
stos
jae
sbb
xor
pop
hlt
aam
cs
add
sbb
cmp
push
sti
jge
repz
arpl
scas
push
pop
lcall
sarb
test
jns
xchg
jl
sub
roll
bnd
pop
clc
adc
push
xchg
das
jae
shr
loop
das
xchg
add
clc
pop
int
xlat
jb
test
pop
jmp
xchg
xor
or
popf
icebp
add
sahf
fidivl
mov
push
stc
ret
in
jns
xor
scas
mov
jno
mov
int3
dec
ss
je
lds
les
add
sarb
push
mov
out
test
stc
rcll
or
testb
rcll
pop
cld
ret
sti
hlt
xchg
sbb
lods
mov
ds
into
cmp
pop
push
pop
fs
sbb
aaa
push
fisttps
dec
mov
cmpsl
maxps
int
pop
fld1
mov
xchg
dec
inc
dec
sarb
shrl
cmp
jno
aad
mov
cmpsb
addr16
sub
into
jb
lret
shrl
repz
stos
call
loope
mov
xchg
jb
stos
add
jne
mov
mov
adc
pop
push
pop
push
je
stc
and
sub
inc
jp
and
hlt
aaa
mov
adc
or
dec
cwtl
fsts
testb
jne
fwait
je
mov
push
xchg
sub
nop
xchg
repnz
sbb
push
or
inc
sbb
fwait
dec
and
sahf
add
xor
dec
adc
push
dec
and
mov
or
mov
fldl
addr16
mov
jne
push
lret
add
xchg
lods
test
cli
mov
ret
idivl
imul
mov
out
lret
es
jle
stc
sbb
dec
js
stos
dec
nop
dec
inc
outsl
pop
mov
xchg
mov
adc
cwtl
or
xor
testb
add
jmp
xlat
mov
jne
in
int
dec
mov
dec
xor
or
aaa
jl
test
sbb
ss
jbe
add
sbb
adc
push
mov
cmp
and
imul
shr
mov
pop
jecxz
rol
arpl
pcmpeqb
in
ss
fldcw
mov
mov
push
inc
and
pop
nop
mov
adc
aas
in
jnp,pt
add
loop
cmpsb
mov
jnp
addr16
loope
cli
jcxz
cmp
lret
ljmp
sub
jmp
arpl
icebp
and
loopne
add
insl
daa
repz
mov
sahf
adc
ljmp
nop
mov
push
push
add
jmp
test
cltd
dec
aam
xchg
lock
push
loope
mov
inc
sbb
orl
xor
mov
cmp
sub
call
xchg
jmp
into
and
inc
insb
inc
inc
mov
dec
push
push
popf
imul
hlt
mov
jg
shlb
aam
mov
in
jmp
push
sub
int3
cmp
adc
add
test
arpl
inc
jecxz
cltd
dec
pop
out
rcrb
into
jae
fnsave
inc
fisttpll
mov
pop
je
pop
rcrb
fisttpl
jge
push
pop
in
jmp
popa
scas
ds
or
sub
cmc
aad
and
imul
outsl
jne
inc
add
dec
aas
lods
jo
dec
dec
icebp
aad
pushf
jae
adc
nop
push
or
xorb
inc
lret
pop
jne
xchg
test
ja
adc
fnstcw
xchg
cmp
in
in
call
pop
cmp
mov
mov
and
imul
cmp
and
xchg
jb
lret
cltd
fimull
xchg
xchg
mov
mov
inc
pop
cld
out
fstl
xchg
addr16
flds
movsb
pop
xchg
or
and
jmp
mov
adc
cli
cld
loope
mov
xchg
movsl
stos
mov
out
mov
sar
push
dec
pop
mov
mov
cmc
xchg
inc
in
add
mov
jnp
sub
lock
mov
mov
jg
cs
push
pop
in
jg
insb
rol
out
mov
mov
adc
loopne
mov
cmpsl
xchg
bound
xor
inc
mov
add
push
or
ja
in
loop
adc
int3
cmc
xchg
lcall
push
movsl
ss
push
inc
jge
add
xor
cmp
std
mov
test
jae
mov
aas
cwtl
pop
jecxz
add
icebp
or
loop
lods
xchg
imul
cmp
stc
mov
aad
mov
jnp
ja
push
sbb
xor
pop
inc
fisttpl
out
cld
iret
aad
sbb
cmpsl
ret
movsb
loop
ljmp
dec
sub
pop
mov
aam
mov
jl
mov
frstor
nop
inc
stos
ret
nop
inc
clc
inc
and
stos
in
leave
bound
dec
int3
out
dec
and
push
xlat
lock
andb
cmp
cltd
jge
or
icebp
cmp
dec
add
enter
shr
pop
sub
mov
mov
enter
negb
fmulp
mov
push
cmc
out
jb
test
out
and
mov
pandn
add
subb
add
mov
adc
push
cli
fs
mov
jmp
loope
cmp
movsb
and
jmp
mov
jne
mov
scas
icebp
pop
loopne
out
cmpsl
mov
shll
testb
or
lods
mov
call
jecxz
stos
jns
cld
adc
push
xchg
mov
test
mov
pop
lods
fs
mov
in
jno
out
aam
cmpsb
addr16
nop
inc
xor
scas
test
adc
add
jmp
daa
mov
mov
cmp
icebp
adc
insb
insb
lods
mov
jp
aam
cld
and
sbb
mov
jp
lds
dec
cs
in
fidivrs
mov
fwait
repnz
adc
xor
fstpl
mov
movsb
mov
loop
mov
dec
gs
std
mov
and
scas
ret
lea
int3
arpl
std
lret
xchg
lods
ret
in
fs
adc
cmpsb
dec
or
xchg
sbb
inc
xor
aad
out
mov
inc
mov
push
jns
mov
hlt
addb
sub
mov
in
std
ljmp
fwait
daa
outsl
dec
cmpsl
push
cmp
push
ficompl
mov
mov
xorb
test
sbb
daa
insl
sahf
pop
pop
dec
lcall
addl
cmp
ss
mov
cmp
and
and
push
or
cs
jg
arpl
sub
jo
leave
sbb
adc
insb
mull
imul
jb
movsl
lret
add
and
fstp
into
ret
mov
aam
idivb
in
lahf
lcall
pushf
lahf
sbb
ret
repnz
and
push
mov
ret
add
addr16
movsl
or
add
js
push
pop
jecxz
icebp
inc
or
pop
jbe
inc
popl
in
mov
data16
jns
outsb
add
fwait
out
cld
mov
pop
and
loopne
sbb
imul
pop
jne
subb
stos
xchg
adc
subl
lss
xchg
lahf
sbb
fbld
scas
int
rcll
mov
shlb
call
enter
dec
mov
jg
lds
pop
jmp
cmp
or
loope
mull
fistpl
pop
xchg
out
push
xchg
fcmovnbe
adc
and
mov
cmp
cld
mov
mov
fstpl
jle
xchg
movsb
pop
mov
clc
or
into
add
out
popa
clc
and
aaa
mov
or
xlat
fisubl
add
dec
data16
mov
dec
push
test
aas
inc
cltd
pop
pop
cmp
ljmp
add
cmp
loopne
loope
push
sbb
fst
push
or
push
push
xchg
jmp
fs
ss
fistps
and
out
mov
add
or
daa
add
push
adc
in
fwait
pop
sbb
mov
bound
in
lds
imul
jle
mov
pop
jp
sbb
push
into
pop
push
es
inc
outsb
ds
shlb
xchg
adc
mov
mov
xchg
or
dec
push
push
pop
xlat
pop
pop
cmp
hlt
xchg
xchg
jns
dec
jbe
lret
cltd
int3
jnp
in
js
mov
mov
or
out
in
jl
add
dec
jns,pn
jge,pt
adc
dec
pusha
lret
mov
mov
jecxz
repnz
jp
dec
test
cmp
jp
pop
cmp
adc
sbb
repnz
sub
pop
or
lds
jge
movsl
ja
xchg
imul
repnz
xchg
addb
movsb
lret
xchg
fnstcw
xor
xor
xor
out
push
pop
mov
xchg
repz
push
and
sti
mov
xor
daa
mov
push
cmp
xor
rcrl
loopne
add
pop
and
dec
js
dec
sahf
xor
xor
notb
mov
rcrb
loope
push
lahf
fcmovnbe
inc
mov
mov
sbb
subl
cmp
loop
mov
push
movsl
aaa
push
jge
mov
mov
push
mov
lock
push
cmpsl
pop
cwtl
mov
pusha
dec
leave
xor
lret
test
sbb
sbb
jae
fsubrs
push
add
sbb
xor
je
jns
fdivl
dec
inc
lret
xchg
push
xchg
lods
pop
push
adc
in
sub
ss
jnp
es
push
adc
fs
xlat
mov
sub
pop
cmp
add
repz
fstpt
subl
xchg
mov
sbb
sub
iret
jne
dec
lock
fwait
clc
add
add
dec
and
std
xchg
popa
pop
mov
int
add
or
addl
adc
fcomps
lds
pop
add
daa
mov
dec
mov
push
mov
sbb
push
push
push
mov
lret
or
inc
aas
xchg
clc
inc
and
sub
loopne
push
mov
sbb
xlat
loope
lds
mov
imul
mov
movsb
test
mov
imul
xor
mov
dec
mov
sbb
xchg
jno
mov
dec
sbb
bound
inc
mov
adcl
mov
add
ds
imul
bound
hlt
push
and
cmp
sub
sub
xor
int
push
movsb
adc
sub
lds
push
mov
sub
pop
lcall
fsubr
mov
or
mov
mov
incl
cmpsb
and
sub
iret
xchg
repnz
jb
scas
mov
xor
loope
cmp
out
stc
in
cmpsb
or
clc
cmp
xor
lret
adc
dec
insb
aam
push
clc
fs
mov
pop
jg
in
rorl
in
rclb
popa
and
xchg
xor
xor
xchg
mov
jecxz
xor
cmc
cmpsb
mov
mov
mov
jl
or
repz
jecxz
push
mov
bound
mov
not
mov
or
jecxz
xor
clc
ljmp
js
ret
xor
lock
les
insb
lret
lea
cmp
pop
lret
das
mov
pop
pop
adc
push
mov
cmp
xor
xchg
negl
sub
xor
rcll
aas
and
jns
pop
add
fcmovnu
aam
arpl
pushf
cmpsb
xchg
ret
dec
jle
fdivrs
pop
cli
pop
fs
adc
adc
jno
call
les
xchg
cli
add
jmp
enter
testb
dec
imul
loopne
stos
cmp
ss
test
mov
sbb
mov
xchg
mov
outsl
aam
leave
cmp
jge
cmpsb
push
test
adc
xor
jmp
mov
dec
fcomps
aam
pushf
xchg
jp
or
divb
std
mov
aas
lods
jns
push
ffreep
loopne
dec
lret
pop
imul
or
gs
sbb
jns
test
cltd
mov
and
push
repz
pop
mov
jns
inc
fistpl
imul
int
data16
aad
aas
jmp
fisubrs
xor
scas
add
jno
es
jno
lea
adc
pop
push
pop
popa
pop
inc
in
jb
xchg
outsb
xchg
notl
add
out
xchg
popf
mov
test
xchg
jns
push
add
hlt
push
jg
les
in
adc
push
mov
lahf
sub
int
jg
mov
sbb
push
testl
or
jbe
xchg
pop
or
stc
xchg
xchg
bound
mov
pop
mov
out
arpl
or
adc
dec
mov
aam
in
test
inc
mov
sbb
xchg
std
cld
mov
leave
cmpsl
popf
test
les
das
addl
repnz
cltd
jmp
int
cli
stc
outsl
adc
mov
rorb
add
mov
inc
outsl
inc
gs
cmp
inc
pop
add
fidivs
rcr
and
push
repnz
sub
dec
je
mov
xchg
ljmp
cltd
cs
dec
ss
mov
xchg
ds
xchg
push
sbb
push
loopne
rorb
aam
test
sbb
test
xchg
mov
or
mov
xchg
dec
inc
stos
mov
cmp
cmc
jb
jne
sbb
mov
sti
push
nop
sbb
gs
js
sti
in
sub
cmpsb
and
fcompl
ds
iret
cmp
adc
push
std
jae
pop
hlt
aad
dec
movsb
das
push
cmpsl
sub
sbb
stc
dec
cmpsb
movsl
cmp
jmp
and
jnp
push
lret
addl
sub
lds
mov
data16
mov
push
jmp
bound
ss
push
push
mov
aad
jge
add
lahf
daa
pop
lods
cmp
push
cmc
pop
outsb
adc
mov
add
es
mov
jno
das
stos
ljmp
das
cmp
bound
das
inc
pusha
pusha
sub
xlat
ffree
xchg
subl
scas
out
mov
lret
jbe
jl
shlb
push
add
adc
fs
aam
adcl
popf
aas
pop
push
mov
mov
xor
mov
outsb
cmpsl
inc
enter
test
ljmp
adc
xchg
scas
push
pusha
jp
xchg
and
jg
lds
nop
adc
aaa
push
cltd
icebp
and
jg
mov
lea
or
subb
dec
mov
and
aas
or
dec
lret
imulb
cmpsb
cmc
inc
sub
shll
mov
adc
enter
loop
pop
stc
dec
fucomip
dec
mov
cwtl
hlt
pop
mov
je
loop
sahf
and
leave
imul
xor
ret
pop
inc
fstpt
aam
mov
sub
addr16
lea
xchg
jge
mov
rorl
movsl
dec
pop
sub
test
addr16
xor
push
push
int
std
pusha
and
bound
adc
aaa
sub
lds
lock
push
push
inc
push
stos
and
jbe
mov
push
sbb
out
adc
dec
push
pop
mov
ljmp
jo
dec
xchg
jbe
lahf
mov
popf
jae
cmp
shll
add
jnp
fcomp
pop
or
enter
and
scas
pusha
add
in
mov
dec
or
jle
push
fwait
mov
jg
ds
lret
pop
test
fs
dec
fnsave
and
mov
mov
cmpsl
das
data16
in
push
cmp
je
in
pop
inc
jge
cmp
insl
gs
in
sbb
xor
xchg
imul
pushf
or
fwait
jl
cltd
pushf
xor
xor
shl
addb
dec
jae
or
cmpsb
or
mov
cmp
xor
ljmp
scas
cmp
scas
iret
jbe
inc
push
cli
dec
sbb
cli
add
cmpsl
mov
fdivr
jl
sub
ficompl
movsb
inc
sub
push
out
jge
lds
adc
loop
mov
mov
adc
push
jns
sbb
aad
dec
pop
rorl
dec
pop
fnstenv
jae
xor
mov
mov
jecxz
cmp
and
dec
mov
hlt
pop
sti
pop
dec
mov
pop
mov
imul
mov
aam
scas
inc
or
lret
add
adc
add
xor
andb
rolb
vmwrite
js
mov
jne
ret
addr16
orb
in
push
jne
mov
out
fisubs
mov
decl
and
rorb
js
mov
lret
leave
mov
adc
out
mov
push
cmp
cmp
dec
pop
jl
mov
cwtl
bnd
inc
sar
ror
mov
out
nop
sbb
cmpsl
sub
sub
mov
cmp
movsb
push
jae
and
xor
out
jns
inc
mov
lret
sub
adc
mov
cmpsl
jge
lea
push
pop
and
scas
icebp
ja
jbe
loopne
push
jge
inc
sub
adc
mov
adc
stos
cmp
test
ljmp
sti
sub
jle
ss
cmp
test
insb
clc
xlat
dec
ret
or
in
lods
pusha
inc
dec
jg
hlt
push
inc
fimull
xchg
push
fadds
push
jnp,pn
mov
mov
push
in
adc
mov
lods
mov
mov
mov
jne
xor
in
adc
xor
sahf
sahf
sub
mov
jmp
dec
dec
insb
xor
pusha
fs
mov
adc
arpl
lock
insl
fucomip
sbb
cmp
insb
in
xor
sub
pop
sbb
mov
dec
sub
shl
sub
icebp
daa
push
mov
sbb
pop
cmp
jmp
sub
mov
mov
and
popa
lea
mov
mov
pusha
out
mov
dec
jg
loopne
leave
xchg
les
dec
xor
pop
int
or
je
stos
jno
in
xchg
xchg
cmc
mov
sbb
or
cmp
sub
fisubrl
lret
pminsw
lcall
pop
pop
scas
dec
mov
sbb
or
cmp
sub
fisubrl
lret
pminsw
lcall
pop
pop
scas
dec
mov
sbb
push
cmp
sub
fisubrs
lret
pmaxsw
lcall
pop
inc
scas
mov
inc
lahf
sbb
sbb
cmp
stos
pop
fisubrl
xor
push
inc
mov
mov
stos
out
mov
sahf
lret
adc
jle
outsb
cmp
dec
push
pop
ds
jp
mov
lcall
mov
mov
or
pop
sub
pop
es
pop
ds
jp
mov
insb
stos
ss
mov
or
push
pop
or
push
jl
push
jb
mov
adc
ret
lcall
jno
jmp
jecxz
pop
femms
dec
cmp
sub
jle
imul
lret
xor
and
test
cmp
sti
aas
xchg
pop
loope
push
xchg
ds
sub
mov
mov
mov
popf
scas
or
imul
push
pop
dec
pop
imul
adc
add
cmpsb
mov
popa
imul
in
scas
nop
dec
push
movsb
aas
pusha
jnp,pn
inc
lret
jae
bound
push
xor
cmc
int
jle
sub
pop
sbb
pop
push
test
rcpps
mov
adc
fwait
mov
not
lcall
push
outsl
test
out
mov
mov
or
sbb
sub
push
dec
add
or
adc
stos
xchg
mov
lret
scas
pop
jae
sbb
dec
or
or
push
adc
xchg
out
stos
decl
jmp
dec
cmp
cmp
arpl
push
pop
addr16
pop
push
cmp
adc
lahf
fdivrs
fidivrl
or
jle
outsb
cmp
dec
push
pop
ds
jp
mov
lcall
mov
mov
or
jle
outsb
cmp
dec
push
pop
ds
jp
mov
cmp
js,pn
mov
or
aaa
jecxz
sbbl
rorb
mov
jno
cmp
xor
out
repnz
std
pop
xchg
lcall
jno
dec
rclb
jle
jbe
dec
sbb
push
dec
pop
mov
jb
mov
mov
and
xor
pusha
fildl
inc
shl
insl
jnp
imul
add
cmp
gs
ret
imul
pop
inc
adc
dec
sbb
dec
ret
mov
lock
roll
lds
push
sub
push
xchg
jae
pop
test
pop
or
mov
cmpsl
ficompl
adc
loope
out
rol
pop
jge
or
inc
push
outsb
or
lahf
ljmp
sub
pusha
rcr
adc
loope
jp
pop
movsb
mov
sub
cwtl
jp
sub
into
cmpsb
rcll
mov
mov
cmp
or
xor
in
hlt
lock
mov
sar
mov
sub
mov
insl
push
divl
and
push
imul
sbb
pop
cli
mov
or
insb
movsb
enter
mov
add
fcomi
and
xor
inc
xor
mov
and
test
popf
mov
in
cltd
iret
lea
scas
sub
pushf
das
adcl
sbb
into
xor
leave
add
mov
cmc
xor
mov
or
push
loope
push
icebp
stc
xchg
inc
loop
loop
enter
sbb
dec
cld
cmpsb
pushf
mov
pop
std
mov
shl
mov
in
pop
xchg
sbb
dec
mov
xlat
xchg
fdivrl
out
int3
lret
inc
loop
cmpsl
subb
mov
stos
ror
stc
icebp
mov
dec
cmc
repz
in
push
push
push
add
jno
movsl
push
mov
sub
hlt
fxam
out
xchg
mov
sbb
jp
and
and
popa
xor
jnp
std
div
into
sbb
sbb
and
fidivl
jns
mov
or
sub
movl
mov
or
jle
push
inc
popa
call
mov
xchg
outsl
cmpsb
rorb
fs
add
test
aad
xor
mov
in
sbb
push
rcll
leave
bound
or
lea
pop
adc
jge
cltd
test
imul
roll
test
out
fmuls
shrl
idivl
into
inc
and
dec
sub
adc
push
and
jge
pop
das
jecxz
dec
gs
mov
add
pop
and
jb
shll
int3
mov
movaps
scas
mov
out
push
ds
data16
mov
mov
xchg
ljmp
adc
and
cmp
dec
fadds
mov
iret
pusha
vorps
mul
in
outsl
lds
fmuls
dec
gs
sbb
push
add
sbb
js
dec
ret
aad
jmp
notb
mov
lds
xor
arpl
fcoms
clc
pop
daa
stos
sub
pop
mov
outsl
out
pop
adc
sub
fmull
lret
lds
sub
dec
popa
jge
push
loopne
mov
and
addr16
cmp
leave
dec
lods
popf
enter
negl
imul
aaa
sub
xorl
dec
jp
sbb
cltd
sbb
stc
shlb
mov
dec
in
sub
sub
jne
arpl
mov
test
cli
je
xchg
sbb
jnp
add
mov
dec
sub
sub
lret
fisubs
rcr
popf
ficoml
pop
cmc
test
fildll
iret
inc
aas
inc
popf
mov
dec
cmc
stc
jo
test
xchg
xor
mov
sub
ret
cmp
outsb
rcrb
pop
stos
cmc
xchg
jne
xor
dec
je
dec
leave
xchg
retw
xchg
push
mov
add
imul
sub
js
andl
xchg
lea
jle
aaa
orb
push
test
inc
jnp
test
xor
mov
pop
aad
nop
jo
mov
jae
adc
frstor
or
icebp
xor
cmp
mov
sub
cmc
mov
lahf
fwait
leave
mov
pop
std
push
mov
shll
scas
mov
push
pop
fnstsw
jns
fistps
mov
push
int3
outsb
stc
arpl
sub
pushf
cmp
mov
out
addl
adcl
xlat
fistl
movsb
mov
fnstsw
nop
jo
push
xchg
add
ss
sub
mov
dec
lret
mov
mov
mov
shll
mov
dec
lock
shr
pop
cmp
addb
pop
sub
jne
pop
popf
and
mov
push
std
lds
shll
sbb
enter
mov
cmp
sub
fxch
call
or
pop
cld
addr16
adc
mov
cmp
lock
data16
enter
iret
mov
pop
dec
negb
push
xchg
mov
cs
bound
pop
scas
testl
pop
add
fwait
add
adc
int3
iret
call
adc
add
ficompl
pop
inc
pop
je
push
mov
and
movsl
adc
dec
shll
xchg
mov
inc
adc
in
fstps
leave
pop
xchg
popa
outsl
mov
lret
je
jmp
mov
push
or
jl
dec
mov
ficoml
cmp
jne
pop
push
cmp
ds
gs
xchg
mov
stos
iret
mov
in
xchg
imul
jecxz
sbb
rcrb
test
pop
xor
fucomp
pop
sbb
jp
testb
inc
adc
mov
push
or
mov
aad
outsl
shlb
loopne
and
call
cwtl
test
pop
clc
sub
cmpsl
fadds
addl
mov
and
mov
adc
or
movb
das
jae
ja
cmp
dec
in
pop
adc
test
or
in
ds
shlb
fcmove
mov
fwait
jl
ds
jge
xchg
cltd
dec
pop
inc
lahf
ljmp
xor
mov
push
and
rorl
roll
xchg
xchg
daa
adc
mov
fiaddl
into
movsl
je
in
and
push
add
sub
sbb
imul
jp
pop
jae
cmp
or
pusha
jo
jecxz
xchg
xor
xor
pop
push
mov
aas
cmp
xchg
dec
mov
bound
push
jmp
mov
clc
pusha
std
jne
mov
sub
das
scas
inc
in
pop
aas
push
in
cmp
cmp
call
xchg
fists
xor
cmp
fsubrl
ss
gs
mov
rcll
push
fisubs
dec
aaa
cld
adc
pusha
dec
arpl
repnz
xor
cmp
jno
cmp
mov
add
push
jge
jp
mov
cs
jl
leave
cmpl
rolb
lret
and
jb
fistpll
loopne
lret
ret
cs
push
addr16
shll
outsb
or
lcall
xchg
mov
ret
mov
fsubl
loope
pop
cli
notl
lds
cmp
outsl
mov
pop
mov
nop
stos
jecxz
and
cmp
add
mov
and
dec
hlt
xor
cmp
in
sbb
and
mov
mov
cwtl
xorl
mov
in
push
inc
sub
popa
add
test
sbb
outsl
mulb
mov
fucomi
jle
xchg
xorb
mov
out
inc
daa
mov
leave
push
and
or
xorl
insl
je
outsb
sub
icebp
imul
add
insb
pop
push
and
add
cmpsl
rorb
mov
in
jecxz
enter
xlat
fdivs
add
push
imul
jne
mov
lock
loopne
cmp
mov
je
outsl
ss
clc
cmpsb
fsubr
mov
inc
movsb
dec
aad
mov
aas
scas
std
xlat
gs
test
rclb
add
lock
jle
stc
out
popf
std
orl
out
cmc
insb
and
xchg
fsts
cmp
mov
mov
cmpsb
pop
int
fcmovnu
pop
cmp
enter
pusha
int
mov
sbb
xor
aad
and
lods
or
pop
loopne
mov
pop
addr16
int
mov
ret
repz
adc
inc
dec
push
fs
xchg
dec
pop
ja
or
mov
out
xchg
add
dec
stos
es
pop
dec
fcoml
jg
cmp
mov
jae
dec
loope
cmp
mov
stos
fwait
mov
jo
and
push
pop
nop
ret
pop
lds
orb
dec
out
xchg
ss
pop
fcomp
sahf
punpckldq
das
sbb
add
loopne
movsl
je
mov
xor
dec
addb
lods
aad
sbb
sbb
cmp
ds
test
mov
or
sbb
cmc
push
jge
xchg
jl
jno
out
popa
mov
and
inc
cli
cld
dec
aam
sarl
and
nop
cltd
hlt
inc
out
cmp
aas
sub
and
ffreep
int
adc
push
jge
mov
add
xchg
sub
push
fs
mov
dec
push
pushl
push
jae
mov
inc
cmp
imul
push
push
stos
jecxz
outsl
jmp
movsl
loopew
push
add
je
jnp
mov
cmc
mov
lods
js
inc
shl
xchg
dec
je
jmp
and
and
pop
sbb
and
fisttpll
int3
imul
xchg
mov
popf
mov
mov
mov
mov
jle
shrl
adc
call
adc
push
rol
pop
mov
mov
leave
adcl
aad
lods
lret
fldenv
xchg
inc
adcl
xchg
mov
mov
push
mov
mov
loop
mov
inc
sub
idiv
lock
mov
mov
bound
jmp
jmp
jo
jb
adc
mov
add
pop
or
sahf
xchg
add
test
scas
cmp
sbb
cmp
lcall
xchg
push
rol
pop
dec
cmp
jge
shl
gs
inc
aam
fcomps
adcl
add
jo
test
sub
push
jno
xchg
mov
in
cltd
cmp
mov
push
cmp
add
adc
sbb
lds
scas
addr16
in
call
icebp
xchg
aad
pop
xchg
decb
insb
addr16
mov
outsl
shrb
jg
jnp
lahf
fwait
stc
dec
sbb
aad
cmp
outsb
ficoml
icebp
in
fs
ds
fdivp
pop
dec
ljmp
adc
movsl
js
out
popa
aas
mov
pop
jl
out
outsb
cmp
cmp
lcall
push
outsb
cmpsb
cmc
aam
ss
xchg
pop
scas
je
pop
addl
insb
int
into
rorb
or
pop
dec
push
sub
or
aad
and
ss
lret
sub
dec
jl
addb
pop
cs
aas
ljmp
sub
adc
loope
and
xchg
mov
fwait
and
sti
adc
push
aam
mov
add
fisttps
loope
ret
inc
iret
and
lods
shlb
test
pop
jnp
or
cmp
xchg
gs
mov
lods
inc
outsb
lods
adc
mov
aam
sbb
sub
lret
xor
in
addr16
int
lods
lods
inc
arpl
in
mov
and
pusha
movsl
mov
mov
jae
rol
dec
and
imul
inc
inc
mov
and
sub
adc
jl
je
dec
mov
and
sbb
ja
mov
jo
push
jo
adc
mov
add
mov
dec
mov
inc
inc
dec
xor
movsl
cmp
jbe
push
dec
pop
in
out
cmp
lcall
xor
sahf
mov
dec
inc
dec
mov
xchg
jo
adc
test
jo
jl
or
jo
cmp
xchg
pop
mov
ja
push
adc
inc
scas
mov
mov
pop
push
stos
and
mov
das
adc
stos
mov
xlat
insb
inc
mov
cmpsl
inc
mov
dec
cmpsl
in
negl
bound
jns
adc
pop
out
add
and
dec
mov
push
xchg
js
or
jne
inc
push
push
adc
cli
pop
add
mov
sub
popa
sub
ds
push
scas
jns
sarl
and
insl
dec
adc
cld
sub
mov
lret
inc
push
in
movsl
pop
cmpsb
add
xor
hlt
mov
jmp
scas
dec
cmc
enter
shlb
gs
in
jbe
or
nop
jb
daa
adc
addl
dec
or
shrl
hlt
mov
push
mov
dec
lcall
cmpsl
or
xchg
repnz
mov
push
mov
in
leave
fistpl
fisubrl
jmp
scas
aaa
in
fs
loopne
push
setge
lods
lahf
push
fdivs
scas
loopne
mov
mov
push
dec
or
stc
xor
jno
movb
and
dec
mov
xchg
adc
gs
and
cmpsb
jecxz
roll
xor
sub
push
push
imulb
stos
mov
inc
adc
dec
jecxz
into
adc
arpl
dec
add
cli
or
roll
mov
dec
test
push
call
cmp
subl
sarl
inc
jnp
jnp
xchg
pushf
pop
pop
repnz
loopne
add
ja
add
xor
orl
bound
jmp
ss
shr
jecxz
jnp
xor
xor
jp
cmpsb
add
and
ds
and
je
call
inc
push
cltd
or
std
sub
mov
adc
xchg
fidivs
fucomip
xor
sub
add
jno
or
ror
pop
fldt
pop
out
inc
inc
mov
adc
mov
add
into
push
ret
xlat
lahf
and
rorl
mov
or
or
fsubs
adc
pop
mov
xor
mov
in
scas
rcll
jmp
leave
fwait
sub
mov
push
stc
call
cmp
popf
sub
xchg
scas
mov
movsb
mov
fcmove
pusha
test
out
loop
aas
stos
imul
in
and
mov
mov
adc
fidivl
cld
mov
ja
in
nop
pushf
imul
jo
mov
rcpps
or
cmc
cmp
cmp
ljmp
xchg
test
jne
cmp
bound
arpl
xor
dec
mov
adcl
sub
inc
loop
jg
pop
adc
nop
or
into
and
test
out
push
cwtl
jmp
fnstenv
inc
jmp
clc
pop
cmp
cmpsb
jae
and
sti
sarl
jge
sbb
dec
or
add
rolb
mov
fdiv
inc
mov
xchg
test
mov
xor
mov
or
js
pusha
xchg
in
aaa
jle
rcll
push
int
xchg
test
jle
mov
and
and
cmp
pop
xchg
pusha
pusha
push
dec
jmp
fnsave
pop
and
loope
jge
mov
aas
mov
clc
ret
sbb
rcrl
ja
pop
xchg
mov
sub
loope
hlt
popf
out
add
ret
popa
std
xchg
sbb
add
iret
cmp
into
dec
jge
push
push
repz
add
mov
pop
mov
dec
scas
adc
xchg
pop
mov
adc
sbb
aas
adc
xchg
lods
pop
xor
out
pusha
subl
cmp
add
fldl2e
pop
push
std
xlat
xor
lods
fisubrs
insb
push
and
pushf
jb
mov
sarl
fstps
jg
sbb
mov
jmp
dec
adc
inc
shr
fnstsw
pop
mov
fldl
cli
js
icebp
stos
enter
and
adc
pop
pusha
test
insl
jno
sbb
lret
loop
das
adc
push
fs
mov
pop
or
dec
scas
mov
sub
adc
lret
mov
xchg
xchg
clc
xor
mov
imul
das
or
jns
dec
js
dec
jb
stc
bound
fucomip
test
in
mov
mov
in
std
test
in
outsl
add
lock
push
push
mov
jno
xlat
fs
xchg
decb
roll
jl
xor
and
mov
lahf
cmp
sub
imul
aaa
dec
test
push
lods
fisubl
nop
ds
les
and
movsl
inc
jmp
mov
stos
or
xor
cld
inc
mov
repnz
cmp
push
push
rcrb
pop
int
cmc
mov
iretw
mov
mov
cmpb
lds
pop
mov
pop
jne
div
add
dec
pushf
cli
incl
jmp
mov
loop
xor
lcall
in
cmpsl
pushl
outsb
and
xlat
aaa
add
jle
pushf
mov
repz
subb
in
call
inc
aas
xchg
lock
xor
dec
ljmp
pushf
aam
into
pop
test
push
pop
and
hlt
dec
sub
fcoms
lods
addr16
js
sahf
std
xor
lcall
sbb
lahf
pop
rorl
lahf
clc
cmp
or
sbb
push
xchg
iret
cmp
sbbb
fdivrl
or
lea
cwtl
cmp
ror
pop
xchg
outsl
scas
fwait
add
shr
test
out
fiaddl
inc
int
jno
mov
mov
in
sbb
cwtl
inc
fidivs
popf
lds
sub
and
pop
mov
sbb
inc
es
sub
dec
inc
xor
or
inc
lea
inc
mov
inc
rorb
repnz
insl
xchg
add
add
mov
xchg
inc
pop
out
jecxz
fisubl
jl
ss
push
mov
ljmp
test
clc
cltd
dec
cli
cmp
lret
mov
xchg
gs
int
xchg
arpl
push
push
push
jp
adc
push
lahf
xchg
loopne
mov
inc
mov
pop
adc
dec
addr16
int3
lock
adc
push
cmp
push
outsb
rorl
mov
mov
inc
pop
fisttpll
jne
loope
adc
xchg
and
pushf
jg
sbb
xchg
leave
push
pop
imul
popf
loope
ret
xchg
adc
cltd
jne
sbb
ret
sbb
shr
lea
adc
mov
cmp
loopne
cld
ds
and
mov
xchg
or
out
jnp
sti
lcall
adc
jno
fsubl
push
or
sub
sarb
popf
data16
and
mov
iret
add
pop
fstl
nop
in
sahf
js
xchg
clc
mov
adc
mov
test
out
mov
push
btc
pop
adcb
or
mov
fisubrs
or
out
xchg
push
addr16
adc
pop
push
movsb
push
ret
mov
adc
rcrb
clc
inc
push
cltd
fmuls
fidivl
xchg
sbb
outsl
fisttps
or
repnz
ret
sbb
adc
jg
mov
mov
aam
lea
push
das
jmp
inc
loopne
mov
cmpl
jl
push
rcrb
jo
ss
push
insl
and
cli
ja
gs
sub
addr16
mov
mov
dec
in
or
cmc
arpl
clc
test
test
lret
and
sub
inc
js
out
push
xchg
jp
mov
outsb
lcall
pushf
mov
and
rorl
jbe
shlb
sbb
outsb
push
hlt
insb
xlat
pop
cs
lcall
push
mov
adc
mov
sbb
lods
inc
sbb
shlb
xchg
rolb
scas
and
lahf
sub
mov
jmp
push
movsl
push
inc
adc
dec
mov
xor
cld
adc
inc
push
insb
icebp
in
adc
jns
and
and
das
sub
insl
xchg
aad
outsb
pop
sub
lods
jp
out
sub
mov
insl
leave
test
lret
cmp
idivb
push
dec
sti
add
subb
adc
iret
cld
jno
test
pushf
or
cltd
dec
cli
popa
scas
and
or
and
mov
mov
xorb
xchg
and
xor
outsb
in
out
fstpt
clc
jecxz
or
cmp
mov
mov
lcall
mov
mov
or
jle
outsb
cmp
dec
push
pop
ds
jp
mov
lcall
mov
mov
or
jle
outsb
cmp
dec
push
pop
ds
jp
mov
lcall
mov
mov
or
mov
outsb
cmp
dec
push
pop
ds
jp
mov
mov
mov
or
dec
imul
roll
jae
arpl
or
jo
adc
jg
outsl
ret
mov
mov
ret
push
mov
mov
cmp
arpl
adc
jnp
dec
and
stos
ret
mov
xchg
lds
fisttpl
pop
std
imul
xor
inc
xor
shrl
xchg
jmp
sarb
jp
pop
or
addb
ficompl
cmp
pshufw
jg
mov
sub
clc
jae
jae
aam
cld
lock
mov
movsb
sbb
or
out
lret
das
aam
pop
inc
cs
fiadds
bound
push
mov
andb
cmp
shrl
sbb
insb
sbb
pop
sbb
fs
sub
xchg
psubsb
ss
dec
fisttpl
stos
pop
repz
lcall
dec
cmpsl
mov
mov
in
pop
ret
jp
mov
cmpsl
fisttpl
jecxz
cmp
pop
push
mov
inc
les
out
lret
scas
and
mov
cmp
pop
sub
cmp
or
loop
push
adcl
xchg
cmpsl
inc
sbb
je
add
jnp
dec
cmp
lret
adc
mov
cmpsl
mov
fwait
adc
and
es
push
addr16
ja
into
outsb
push
xor
dec
sbb
call
clc
ljmp
mov
insl
inc
jge
js
ja
cmp
pop
and
ror
ret
into
mov
xchg
stos
mulb
test
pop
jno
push
arpl
daa
add
dec
and
stos
ret
mov
xchg
jmp
sti
mov
mov
cmp
arpl
adc
jnp
dec
and
stos
ret
mov
xchg
jmp
sti
mov
mov
insl
sub
cmc
cmp
das
jb
loop
fs
in
rorl
xor
xchg
push
dec
cmpsl
sub
mov
loop
xchg
inc
es
adc
pop
jae
xchg
adc
lock
in
mov
cmp
ljmp
loop
sbb
sti
in
jle
xchg
negl
push
insb
in
jge
pop
shll
mov
dec
arpl
scas
cmp
and
add
pop
call
repz
mov
pop
cwtl
filds
lods
sub
int
push
fsubp
ret
ret
mov
sub
aam
scas
leave
mov
mov
ret
inc
dec
icebp
dec
mov
and
imul
add
data16
adc
cmp
jbe
cs
insb
xchg
xchg
gs
xchg
cmp
push
jmp
dec
inc
push
sub
jg
and
sub
addr16
fmull
mov
or
lahf
ja
and
mov
cld
mov
sbb
fdivs
ds
xchg
das
mov
rcr
and
cwtl
jae
loopne
add
ljmp
cltd
in
mov
shrl
push
mov
cmp
aad
jg
ljmp
mov
scas
dec
in
pop
leave
jne
rolb
sti
mov
sub
icebp
cmp
das
mov
inc
push
sub
repnz
sbb
insb
faddp
jo
ret
les
cmc
lods
inc
or
mov
int3
add
and
in
aad
add
test
mov
ret
adc
lock
xor
int
insb
cmpsl
mov
mov
fldl
add
mov
cld
stos
enter
sbb
xorl
fs
xor
popa
fcoml
leave
std
call
mov
int3
sbb
loop
data16
lock
jle
imul
gs
leave
push
dec
loop
addr16
lret
xchg
call
les
pop
mov
sbb
popl
mov
outsl
inc
and
int
push
clc
jb
test
xor
int
sbb
and
int
in
lock
jnp
or
pop
cmp
jns
je
cmp
mov
add
out
movsb
lods
cmp
jecxz
and
xor
aas
cmpsb
ljmp
sbb
sbbb
sahf
lret
in
xchg
and
gs
push
xchg
inc
sub
insl
jle
sbb
dec
adc
lea
addb
idivb
pop
jns
fbld
jp
mov
mov
cmp
sbb
cmp
stc
cltd
push
add
outsl
push
mov
xchg
adc
fs
xor
faddl
sub
movsb
pop
fldcw
sub
es
mov
pushf
sub
dec
mov
push
add
mov
mul
imul
jae
and
pop
xchg
inc
insb
pop
cld
and
dec
jl
rcrl
pop
add
or
push
call
jo
xchg
adc
push
int
je
aas
jp
cs
sbb
mov
leave
stc
adc
or
test
inc
clc
lods
jp
sub
pop
daa
daa
sub
mov
idivb
mov
test
rorb
fistpll
xor
stos
test
inc
call
xchg
cmp
xor
xchg
sub
fwait
inc
xor
sbb
cmpsl
xchg
fcomip
dec
rorl
mov
or
jecxz
push
pop
andl
ds
iret
sbbl
es
add
push
mov
sbb
iret
jl
clc
and
out
movsl
pop
mov
push
mov
movsb
fwait
aas
xchg
cmpsb
jmp
fcom
xchg
cld
mov
out
cmp
xor
mov
jb
mov
and
push
test
out
push
sbb
decl
push
xchg
fs
or
out
lcall
dec
xor
ljmp
dec
dec
fmul
arpl
bnd
xchg
rcll
mov
or
lcall
int
push
nop
scas
sbb
mov
fucomp
or
shl
dec
mov
cmp
xor
loop
cmp
cmc
cmp
data16
int3
arpl
pop
lea
xchg
pop
mov
push
fiadds
lock
cmp
dec
inc
add
jp
mov
std
cmp
insb
lcall
mov
pop
and
test
xchg
xchg
mov
push
mov
lea
jge
cmp
sub
push
sahf
push
sarl
test
push
dec
xchg
aam
movups
mov
aad
jp
stos
jno
pop
fmul
or
mov
bswap
dec
jp
dec
ds
xorb
mov
xor
xchg
mov
aas
fildll
iret
mov
or
ljmp
pop
inc
mov
shrb
mov
imul
cmp
and
ret
lea
jp
ds
fucomi
mull
sbbl
adc
adc
cld
loopne
les
stos
je
dec
sbb
adcl
xor
xor
sti
jno
mov
dec
addr16
or
in
shrb
lock
xor
jecxz
push
pushf
add
out
loop
push
sarb
xor
cmp
loope
cmp
and
dec
and
arpl
mov
inc
inc
testl
daa
or
cmp
inc
cmp
int
ret
inc
call
out
push
mov
ss
outsl
xchg
out
in
fiadds
mov
pushl
inc
sbb
mov
xchg
rorb
pusha
xchg
jbe
cmp
lds
enter
enter
movsl
sub
and
push
or
pop
jecxz
xchg
popf
sbb
cltd
leave
pop
shrl
and
mov
in
push
push
sub
lock
pop
daa
divl
lock
push
lret
orb
and
imul
mov
xchg
les
jae
adc
jbe
mov
cmp
loop
clc
mov
jecxz
ret
cmp
xchg
aaa
inc
or
mov
aaa
jo
jno,pt
cs
insl
test
xlat
sarl
inc
fcoms
push
jb
mov
aad
iret
pop
addr16
sub
cli
mov
inc
xchg
mov
add
fnstsw
lock
pop
or
sub
pop
insl
xor
pop
dec
sub
dec
jp
cld
xchg
or
jo
inc
out
popa
adc
leave
pop
or
mov
sbb
fdivrl
fstl
mov
xor
sub
push
cltd
mov
dec
enter
clc
bound
movsb
aad
ss
sar
cmp
xor
cmp
jns
popa
pop
ror
dec
sbb
and
jmp
int
xorl
push
outsb
and
dec
loop
pop
mov
xchg
jbe
push
aad
cwtl
fiaddl
bound
hlt
outsl
std
xchg
lea
daa
jnp
cmp
in
repz
stc
scas
add
repz
xlat
dec
jmp
jnp
xchg
scas
out
push
pop
or
pop
sbb
test
movb
mov
mov
call
jge
jae
mov
sbb
mov
xchg
out
test
dec
imul
jo
sbb
sbb
or
rcrl
icebp
sbbb
rcll
jne
pusha
pusha
jo
test
int3
push
mov
sub
mov
jns
inc
adc
mov
daa
in
pusha
in
sub
mov
ret
lcall
pop
loopne
inc
jbe
xchg
sti
push
sar
jns
lahf
andb
sub
push
xchg
mov
mov
xor
mov
push
pop
jo
in
push
cmpsb
fdivrs
out
enter
test
clc
subl
popa
add
push
in
inc
mov
repnz
xor
ret
shrb
sbb
test
xor
jnp
and
sbb
lods
pop
repz
dec
cwtl
icebp
loopne
lcall
leave
mov
fisubs
sarl
adc
popf
jns
push
aaa
imul
in
call
sbb
aad
inc
mov
push
lods
cwtl
xchg
xor
push
pop
lds
jecxz
mov
sahf
sbb
popf
std
mov
incl
mov
imul
adc
pop
mov
push
test
test
stos
sbb
inc
fcoms
mov
jl
or
sbb
ds
cmp
jbe
hlt
rcrb
fistpl
loopne
inc
xor
sub
test
test
test
dec
xchg
mov
iret
fbstp
cmp
or
ss
aad
lea
sub
testb
es
cmp
fists
mov
cli
push
mov
sub
das
jb
mov
shlb
jmp
in
mov
cld
jg
cs
or
pushf
in
inc
popa
andl
inc
add
in
cmp
jns
pop
sbb
pop
bound
inc
ja
xchg
dec
dec
test
pusha
add
mov
aas
mov
mov
pop
movsl
jge
adc
repz
inc
fucomp
ret
test
mov
lret
or
mov
push
dec
imul
mov
test
jns
call
call
movsl
loop
xchg
mov
adc
lret
addb
add
mov
rcll
rcll
insl
cmp
jl
loope
aaa
scas
into
dec
shrb
and
andb
out
or
fisubrs
stc
xchg
pusha
cmp
sti
and
adc
sar
adc
and
les
bnd
pop
outsb
sbb
hlt
std
out
hlt
push
xor
daa
nop
scas
adc
inc
lahf
add
push
xchg
scas
cmp
sub
dec
sub
inc
insl
push
ret
out
adc
xor
mov
cmp
out
rcr
aam
xchg
lds
dec
inc
adc
and
dec
cs
lret
xchg
inc
inc
pop
daa
mov
lahf
jp
xchg
inc
mulb
sti
or
sti
stc
aam
adc
pop
stc
subl
lods
xchg
inc
aad
push
add
gs
cltd
add
adc
inc
je
fcmovnu
lds
sbb
leave
std
testl
repnz
insl
insb
popa
or
mov
aad
xchg
nop
push
test
lods
jmp
sub
mov
in
add
jae
out
mov
jle
push
add
fldenv
xchg
pop
insb
and
sub
or
repz
insl
enter
add
mov
jecxz
inc
out
lahf
cld
add
fsubrp
pop
ljmp
jp
xor
add
nop
aad
insb
js
adc
call
idivl
movsl
pop
ljmp
cmp
push
shl
dec
pushf
lds
int
sub
mov
arpl
pop
test
jl
lgs
push
ret
fsubs
cmp
or
js
shr
pop
lods
je
jnp
adc
sbbl
push
stos
adc
loopne
push
sub
mov
xchg
mov
mov
bound
mov
shr
in
sub
clc
adc
mov
mov
and
ret
test
fdivp
ja
gs
stc
mov
dec
xchg
cwtl
fldt
sahf
mov
inc
xchg
push
fs
sarb
push
dec
push
cmp
push
cmp
or
adc
xchg
lods
or
push
out
push
idivb
cmp
add
cmpsl
into
add
int3
ror
mov
cmp
mov
leave
xlat
pop
mov
push
xorl
ss
mov
std
jecxz
push
es
mov
divb
cli
mov
js
loope
push
movsl
inc
pop
mov
cmpsl
adc
xor
push
out
adc
fiadds
aam
mov
inc
cmp
push
and
adc
cmp
and
cmpsl
movsl
pop
add
or
sbb
dec
pop
sub
xchg
cld
aad
or
cmpsb
push
mov
cmc
ja
xor
leave
jecxz
or
dec
mov
mov
pop
outsb
lds
inc
sub
movsb
mov
outsl
test
cmpsl
lea
and
call
enter
lret
and
shrb
add
mov
fwait
lret
sbbb
jp
ja
xchg
push
fldcw
xor
lea
sbb
rclb
mov
mov
hlt
jno
out
jo,pn
fimull
addr16
xchg
push
jbe
inc
mov
mov
inc
ljmp
out
add
aam
movsl
adc
out
or
sub
adc
or
out
cmpb
pusha
data16
pop
sub
dec
sub
movsb
xor
sbbl
test
or
mov
mov
into
add
cmp
push
mov
lods
xchg
dec
xchg
sub
scas
repz
or
loop
push
sbb
lds
dec
jb
addb
rcr
push
enter
jge
dec
bound
push
sub
aas
and
ljmp
sub
jp
andl
jmp
fldcw
mov
xor
xor
xchg
stc
test
dec
bound
aad
jp
mov
jecxz
push
add
pop
mov
loopne
fdivrs
scas
mov
into
imul
shrb
push
cmp
push
and
dec
add
sbb
test
sub
iret
rorl
outsb
stos
jb
repz
mov
cmp
les
mov
sbb
je
mov
xchg
lcall
mov
mov
test
jae
data16
sbb
adc
loopne
pop
shl
jle
push
int3
aas
and
jb
pop
xlat
jge
or
fldenv
mov
inc
inc
mov
lcall
push
push
cmc
mov
mov
jmp
mov
aas
mov
adc
enter
ljmp
in
jne
jge
out
xchg
notl
dec
adc
imul
sbb
in
insl
xor
add
nop
adc
outsl
addl
pop
test
lea
or
out
cmpsb
sub
jnp
rcrb
jp
inc
daa
xor
out
pop
mov
ret
fnstenv
inc
pslld
aam
push
xchg
cmp
mov
pop
loopne
sbbb
dec
movsb
xchg
dec
iret
push
push
mov
outsl
jbe
mov
out
xchg
mov
fistl
shlw
setl
loop
inc
pand
adc
adc
clc
js
repz
sub
mov
cmp
jns
sbb
fs
inc
pop
popf
push
movsl
dec
sub
arpl
sbb
push
adc
xchg
lds
lcall
ds
out
xchg
insb
mov
out
fisubrs
mov
xchg
xor
fsubrs
stc
and
push
in
rcll
mov
cmp
mov
dec
jo
insb
inc
mov
mov
mov
pop
iret
cmp
xchg
lock
dec
cwtl
pop
jae
fwait
adc
outsl
mov
pop
inc
dec
mov
clc
movsb
gs
lds
hlt
sbb
jl
push
sarl
mov
imul
scas
adc
pop
inc
and
sbb
push
mov
jae
xor
add
js
adc
jg
int
add
or
in
and
imul
pop
je
inc
int
imull
add
push
out
fimuls
ja
in
add
jno
mov
es
or
mov
mov
inc
xchg
xchg
fidivrs
addl
jo
jb
and
adc
mov
push
imull
xlat
mov
cmc
ds
popa
or
push
movsb
xchg
add
leave
pop
add
cli
jbe
pop
xor
sub
adc
sbb
cmp
push
js
mov
add
adc
lret
mov
jecxz
mov
fwait
pop
subl
lock
jmp
add
invd
lods
clc
xchg
out
addr16
cwtl
and
aam
rorl
ljmp
flds
mov
lods
sbb
call
imul
push
in
mov
fisubrl
call
xchg
lock
mov
out
in
sbb
pop
mov
bound
in
add
xchg
sbb
pop
gs
xorb
sub
jl
shl
insl
mov
daa
pop
aas
add
push
sbb
jns
rcrb
adc
loope
inc
mov
movsl
mov
pop
lret
mov
enter
adc
popf
sub
lods
lock
jbe
pop
jnp
into
aad
xchg
cli
mov
adc
and
jge
jg
xchg
bound
lahf
ret
mov
and
jno
lea
dec
xlat
aas
sbbl
mul
and
test
or
push
imul
fidivl
xchg
ljmp
outsb
mov
push
pop
adc
lock
cmpsl
decl
std
cld
in
xlat
and
movsl
lods
ja
std
adc
mov
adc
mov
and
mov
add
lods
lods
cmovle
pop
mov
pop
insl
lret
sub
imul
xor
adc
test
into
popa
mov
cmp
testl
iret
jle
mov
dec
sub
or
call
or
hlt
sti
push
mov
jle
mov
push
repz
aaa
dec
andl
jg
and
aam
sbb
mov
cwtl
nop
dec
fimull
movsb
cmc
shll
shr
stos
push
mov
in
jge
inc
stc
and
test
mov
je
sub
ffree
sub
in
loop
cmc
dec
jge
cmp
repnz
push
movsb
push
cmp
jmp
push
rolb
sub
mov
or
push
clc
lcall
add
xchg
sbb
gs
mov
repz
sbb
dec
pusha
and
into
mov
pop
into
dec
icebp
imul
and
cmpsb
mov
loopne
fs
cmc
fstpl
lods
ss
or
sub
adc
pusha
dec
fidivrs
ret
mov
loopne
cs
iret
jp
ror
push
sub
scas
sub
dec
pop
push
notl
dec
imulb
ljmp
inc
insl
sbb
fcoml
xchg
push
popf
scas
lock
iret
xchg
mov
pushl
xlat
jae
cmp
mov
adc
sarb
push
stos
in
jmp
sbb
mov
sbb
jl
stos
daa
dec
mov
mov
mov
and
dec
jl
adc
cmp
mov
lds
pop
jno
or
mov
mov
insl
sub
push
pop
nop
mov
in
dec
arpl
pop
jbe
stc
jle
cli
imul
stos
imul
adc
out
in
adc
pop
xchg
hlt
xor
adc
dec
cwtl
push
xchg
mov
leave
negb
int3
in
and
add
popf
push
ja
in
xlat
mov
xchg
ljmp
fld
repz
jmp
mov
inc
mov
cmp
push
cmp
jg
push
lds
das
mov
cli
pushf
and
flds
std
enter
and
and
jg
pop
stos
aad
jne,pt
int
icebp
xor
stos
push
enter
popa
decl
int
cmp
mov
adc
add
cmp
sbb
stos
xchg
adc
movsb
fisttpll
pop
dec
jle
test
cmp
xchg
imul
or
fadds
and
mov
xlat
faddl
int3
sub
test
push
or
mov
sahf
mov
lods
add
push
push
iret
repz
cs
jp
and
jo
dec
add
dec
push
in
inc
cwtl
inc
fmull
ja
test
mov
inc
jae
dec
roll
mov
adc
sub
into
mov
xor
sub
movsb
mov
outsb
in
sub
stc
ret
and
hlt
imul
scas
xchg
test
push
mov
sarb
jbe
mov
in
aam
aad
adc
sub
into
mov
lock
popf
int3
fnstcw
sbb
jb
outsb
das
inc
adc
jne
mov
ret
mov
clc
push
xlat
and
xchg
push
loop
lods
in
cmpsb
dec
subb
jae
or
jle,pn
repz
cltd
movsl
scas
sarl
scas
sbb
mov
jns
test
data16
out
xchg
je
and
mov
dec
and
xchg
fs
adc
clc
es
jg
sub
and
mov
pop
push
mov
loop
into
or
mov
mov
push
jne
cld
push
arpl
adc
jnp
dec
and
stos
ret
mov
xchg
jmp
sti
mov
mov
cmp
arpl
adc
jnp
dec
and
stos
ret
mov
xchg
jmp
sti
mov
mov
xor
adc
adc
dec
and
stos
ret
mov
xchg
out
xchg
mov
xchg
aas
addr16
ja
inc
out
arpl
imul
mov
mov
adc
jecxz
in
or
out
imull
push
lds
addr16
jbe
inc
orps
pop
dec
pop
dec
out
imull
cmpsl
pushl
iret
addr16
push
movntq
mov
out
imull
cmpsl
out
testl
push
ds
add
jns
mov
jmp
add
adc
mov
push
push
mov
movsb
into
sbb
push
push
mov
jl
fwait
pop
sub
je
adc
push
lcall
psubusb
cmp
lcall
shlb
or
leave
and
and
inc
mov
dec
outsl
bound
imull
sbb
das
add
repnz
sub
nop
test
and
daa
pusha
sub
fbstp
into
mov
das
ret
pcmpeqb
enter
push
mov
mov
dec
add
pop
inc
lds
or
xchg
inc
xor
xchg
mov
sub
sbb
xchg
pop
sub
xlat
xchg
cmpsl
pushl
addr16
ja
inc
push
push
push
daa
addr16
js
pop
pop
sub
sahf
mov
and
push
adc
dec
das
pusha
adc
cmp
pop
push
and
out
mov
mov
es
inc
imul
or
bound
cmp
lret
mov
out
xchg
xchg
iret
addr16
ja
inc
pop
push
jg
outsl
pop
pop
pop
dec
out
imull
cmpsl
pushl
iret
addr16
ja
inc
pop
push
jg
outsl
pop
pop
pop
dec
out
shrb
pop
mov
mov
insb
arpl
adc
outsb
add
jb
xchg
insl
pop
sbb
jecxz
repz
dec
mov
into
imul
aaa
repnz
jg
pop
scas
xor
push
adc
ss
addr16
addr16
jae
push
xor
scas
ret
cwtl
rcll
adc
sbb
or
mov
sbb
js
outsl
push
lcall
out
push
sti
bound
aad
lret
movsl
nop
movsl
or
inc
and
cmp
in
jmp
add
sbb
mov
insb
scas
or
jo
cmp
pop
mov
cmp
je
leave
inc
ficoms
inc
les
mov
xor
and
pop
xchg
lock
xchg
daa
pop
xor
and
rcl
cmp
fistps
ficoms
movsb
fdivs
mov
add
sbb
mov
and
inc
aaa
loop
lea
mov
xor
adc
and
xor
pushw
loop
jae
adc
add
dec
fidivrl
movsl
hlt
je
xchg
into
push
jae
cmpsb
push
insl
adc
ja
pop
cmpsb
lea
scas
js
cmp
fistpll
das
and
pop
push
sub
ret
aad
outsb
jle
sbb
mov
call
or
sbb
cmp
sbb
cld
jnp
andb
pop
mov
test
cmc
enter
add
xor
imul
mov
cmpsb
aas
stos
push
andl
mov
xor
dec
stos
repz
addr16
lock
mov
add
sbb
imul
add
movl
sbb
fiaddl
lock
xor
aaa
adc
lods
adc
repz
mov
jno
jo
ficoms
nop
insb
and
add
enter
je
jge,pt
xor
stos
js
xchg
faddp
mov
inc
jp
pusha
mov
push
movsb
mov
gs
xchg
push
lods
cld
aaa
pop
push
mov
adc
fstps
stos
pop
mov
dec
cli
inc
cmp
lret
icebp
mov
mov
test
inc
inc
push
rclb
ret
imulb
mov
sbb
mov
cmp
imul
ss
inc
xchg
dec
pushf
and
in
push
out
aad
mov
mov
xchg
xor
mov
and
dec
inc
adc
ret
cmp
add
rcll
mov
push
pop
push
mov
or
je
jl
push
push
cwtl
mov
mov
push
aas
loop
or
pop
ret
ret
pop
jbe
mov
mov
ret
push
inc
ficompl
adc
aas
cmp
push
xor
xorb
adc
test
mov
pop
ds
pop
notl
push
int3
dec
jg
ret
add
push
imul
mov
xor
stc
pop
xor
mov
comiss
lods
mov
cld
ret
jae
repz
and
divb
adc
stos
xor
cmpsb
dec
pop
fisttpll
jne
add
sub
pushf
dec
pop
and
sbb
lea
mov
cmpsb
cld
mov
int
orl
test
push
xchg
cmp
mov
xor
inc
push
repz
and
sbbl
mov
pop
decb
out
stos
or
jle
cmp
add
shlb
jne
push
inc
mov
inc
mov
fnstsw
mov
push
xchg
daa
ds
pusha
std
iret
xchg
cmp
insl
nop
and
inc
loope
sub
jne
sbbb
rol
or
aam
jmp
or
cli
xlat
mov
ficoms
cmp
out
mov
ret
lds
hlt
mov
jbe
adcl
jle
clc
std
or
and
mov
cmp
stos
jg
mov
mov
lea
into
mov
fstl
stos
ss
movsb
imul
pop
jge
push
out
or
mov
inc
imul
mov
adc
pop
mov
ret
out
sbb
shl
xlat
aas
cmp
sub
sub
push
data16
xchg
lods
int3
call
into
pushf
mov
mov
adc
pop
xchg
call
pop
push
addr16
jmp
xchg
sub
pop
jl
in
xor
mov
dec
add
sarl
add
stc
mov
fildl
add
mov
inc
data16
filds
adc
inc
fbld
pop
mov
and
ficoml
lldt
jmp
mov
gs
pop
mov
es
and
jno
stc
mov
das
dec
inc
pop
enter
std
sub
add
mul
rcrl
xchg
sbb
add
mov
mov
je
rcll
mov
pop
push
push
ror
push
andb
mov
mov
xor
lret
dec
mov
jp
adc
hlt
mov
or
jl
push
jb
test
jecxz
xor
xchg
decl
jbe
dec
xor
mov
cwtl
ds
pusha
movl
xchg
mov
lret
ja
lods
test
jnp
fmul
jne
dec
aas
pop
ficoml
insb
adc
cwtl
inc
adc
push
enter
arpl
pop
cmp
shlb
pop
xchg
xchg
enter
cmp
sub
push
xchg
pop
cmp
push
pop
add
inc
movsl
lods
cmp
clc
xor
pop
cli
adc
push
pushf
push
out
mov
pop
sub
std
xchg
mov
jnp
cmp
push
outsl
mov
rcrb
push
mov
pop
outsb
loop
das
push
cli
mov
pushf
loopne
call
enter
sub
lahf
lea
fcoms
sahf
dec
xor
ja
jae
mov
rep
mov
ret
push
mov
or
push
mov
dec
pop
add
xchg
cmp
filds
or
fdivs
push
mov
xor
cltd
aad
adc
nop
test
jb
jl
popa
popf
sbb
imul
inc
push
sti
jbe
mov
adc
gs
enter
pop
fdivs
cli
mov
pop
sub
repnz
imul
cli
hlt
je
mov
addl
xchg
movsb
pusha
bound
mov
inc
or
inc
std
sti
arpl
mov
jecxz
mov
popa
divb
data16
out
cwtl
inc
out
outsb
movups
push
adc
in
xchg
inc
cwtl
scas
movsl
cmp
lcall
sbb
sbb
dec
jno
ja
gs
ljmp
sti
and
jle
shl
fbstp
arpl
mov
inc
pop
cmp
fs
pushf
adc
fs
xor
ja
shrb
cmp
cmpsb
push
jb
push
ljmp
out
out
and
sbb
xchg
gs
or
mov
add
and
jne
mov
mov
out
xchg
stc
and
inc
dec
or
fdiv
mov
jae
lea
mov
mov
and
pusha
and
clts
data16
rcrb
or
sbb
sbb
adc
out
ds
mov
add
sub
hlt
std
dec
shl
sbb
loopne
ret
sub
in
lcall
dec
leave
lds
jnp
sahf
inc
imul
sub
fwait
popa
inc
jnp
leave
rcl
cmpsb
mov
fdiv
out
mov
inc
adc
es
dec
sbb
xchg
loopne
mov
imul
sub
mov
add
inc
push
or
push
nop
adc
fstps
lds
aam
js
sub
sahf
xorl
sarl
jo
popa
push
sub
insb
adc
cmp
loopne,pn
sub
in
ja
dec
clc
mov
das
fnstcw
sub
shr
ret
repnz
sub
xor
xor
test
insb
xlat
mov
or
xor
and
clc
aaa
loopne
sbb
das
sbb
lcall
test
test
in
flds
ss
or
lret
or
in
ljmp
or
sti
add
out
cltd
lods
or
inc
std
inc
call
int
or
loop
pushf
fs
or
aaa
test
in
inc
les
xor
or
and
loope
mov
sub
aaa
dec
cmp
testb
fsubrl
pop
incb
icebp
loop
mov
push
into
xor
andb
mov
xchg
lret
test
inc
xor
dec
inc
and
data16
insl
sbb
fiaddl
mov
repnz
popa
sub
push
inc
mov
loopne
mov
and
les
cltd
adc
popa
cli
inc
shll
jecxz
lcall
mov
xchg
xlat
jns
loop
cmpsb
movsb
fwait
jne
mov
fsubr
or
fcomps
mov
cmpsb
aaa
adc
fsubrs
sub
fsts
mov
jp
sbb
and
std
or
mov
mov
dec
sbb
xor
dec
idiv
adc
gs
dec
orb
mov
mov
out
stos
enter
loope
sahf
add
mov
lods
and
adc
and
popf
xor
adc
stos
lds
dec
xorb
aam
push
mov
outsl
xor
cmp
mov
sbb
jecxz
add
sub
in
sub
add
inc
out
jo
notl
cmp
in
push
rorb
repz
imul
mov
dec
sbb
mov
xor
js
insb
mov
loope
sbb
mov
das
fdivr
pushf
sbb
mov
sahf
add
in
sbb
mov
cmpsl
sti
add
mov
sub
dec
xchg
or
sbb
jle
loopne
push
mov
call
loop
int
insb
mov
jg
ja
and
jp
inc
out
cmp
mov
in
insl
test
xor
xchg
leave
mov
mov
push
sub
jle
jge
je
push
mov
pusha
cld
rcrl
xchg
sub
and
or
mov
fisubrs
cli
cmc
cmp
ja
add
xchg
mov
pop
add
cli
cmp
push
cld
push
sbb
mov
outsb
sub
in
pop
jae
pop
aaa
push
pushf
inc
cmpsb
scas
shrb
in
dec
sbb
scas
rcll
cmp
inc
test
mov
sub
aas
lods
out
add
jle
sub
or
out
pop
jb
dec
jecxz
cmp
xchg
and
movsb
and
mov
popf
jno
lock
xchg
das
rclb
inc
bound
add
cli
lock
shlb
inc
jmp
enter
shrb
push
and
pop
lret
cwtl
cmp
xchg
es
mov
push
xchg
or
mov
test
mov
outsl
sub
ret
decb
leave
mov
out
mov
mov
adc
xchg
lods
add
imul
cmc
mov
insl
sub
and
je
pop
out
sub
jae
xchg
xchg
pop
cmp
sbb
cwtl
jns
sub
cmp
adc
sahf
sub
mov
out
sbb
xor
les
cwtl
and
mov
repnz
mov
in
aam
insl
and
dec
ja
xor
subl
cmp
pop
mov
clc
adc
or
test
pcmpgtw
lds
adc
gs
stos
rol
incb
jno
mov
or
mov
adc
jnp
jbe
push
mov
nop
xor
push
mov
divb
outsb
outsl
out
popa
dec
inc
imul
jo
scas
jl
mov
add
sub
out
das
sahf
adc
cmpsl
jp
mov
pop
sub
jmp
adc
cmp
push
shll
and
popl
xchg
xor
adc
mov
push
js
loop
add
int
cmp
repz
or
pusha
pop
enter
or
cmpsb
cs
inc
repz
or
inc
sub
mov
cmp
mov
push
popf
popa
xlat
fisubl
dec
sahf
dec
out
and
repz
push
adc
and
fstpl
out
scas
scas
xchg
in
fbld
push
pop
push
popf
mov
xchg
xchg
sub
das
repnz
sub
push
jo
les
mov
outsb
fst
inc
fstpt
cli
add
jae
xchg
je
shr
sub
or
rolb
and
and
mov
or
inc
insl
outsl
or
push
cmpsb
cmp
repz
mov
mov
push
push
nop
rcrl
push
nop
mov
mov
stos
ret
xor
cld
lcall
dec
lds
js
scas
imul
popf
mov
ja
xchg
mov
mov
xchg
mov
insl
iret
popa
shl
push
es
aad
xorb
andps
sub
push
out
stos
push
add
dec
sbb
ficomps
dec
fs
je
push
xchg
repz
and
rolb
jno
sbb
movsb
shlb
sbb
mov
pop
jo
mov
incl
pop
rcrb
mov
xchg
xchg
into
pop
xchg
pushf
je
hlt
test
and
adc
xchg
inc
adc
dec
lret
sub
negb
push
lret
into
arpl
andb
xchg
addb
mov
add
or
test
ret
adcl
leave
pusha
flds
movsl
daa
ja
inc
ficoms
lods
jmp
stos
inc
sub
cld
iret
stos
sahf
roll
mov
leave
shrd
push
jbe
xchg
inc
pop
das
sti
les
sbbb
jb
mov
mov
adc
jb
cmp
popf
loop
cmp
das
roll
cmp
cs
movsl
dec
fwait
sub
cmp
sub
shrb
add
js
hlt
pop
out
pushf
movsb
mov
sbb
lea
mov
lcall
xchg
xchg
xchg
jne
in
mov
dec
je
mov
pop
enter
repz
gs
push
sar
and
pop
aaa
ss
cmp
inc
dec
and
idivl
sbb
mov
aas
push
xlat
mov
gs
inc
and
aas
pop
jae
sti
sub
push
push
inc
iret
rorl
sarl
cltd
sub
scas
push
add
jp
in
mov
int
mov
inc
jno
mov
mov
shlb
aas
std
and
push
xchg
xchg
enter
pop
mov
pop
mov
movsl
mov
out
or
adc
push
adc
jp
mov
xor
loopne
fsubs
mov
xlat
mov
ret
mov
dec
test
lahf
mul
jae
dec
xchg
xchg
or
sbb
test
or
mov
or
loop
adc
test
cmpsb
hlt
stos
loope
dec
sub
scas
mov
call
sbbb
pushf
push
jnp
push
cmp
out
lock
movl
sbb
cmp
repz
mov
stos
nop
ja
xchg
out
xor
sarb
jno
loopne
sahf
shrb
insl
out
bound
in
inc
jecxz
xchg
fisubs
fiadds
out
xchg
and
xchg
ret
lods
push
cmc
nop
add
mov
out
xor
xlat
test
push
call
test
out
mov
and
jl
push
test
pop
pop
push
stos
push
cmc
rol
test
jnp
mov
test
sbb
or
mov
loopne
cmp
leave
aad
sbb
mov
hlt
mov
fmull
cmpsl
fwait
in
js
jle
mov
cmp
aaa
pop
or
cwtl
movsl
add
shlb
rolb
int
jne
inc
cwtl
xor
pop
fisubl
icebp
sti
mov
pushf
out
xor
cmpsl
js
stos
lahf
inc
jne
ljmp
popf
imul
popa
adc
jne
repz
icebp
in
mov
pop
push
mov
or
icebp
fmulp
push
mov
inc
cmpsb
cmc
enter
jle
je
insb
ret
sbb
call
inc
jecxz
jmp
test
repnz
sub
jno
fxch
cmp
inc
adc
gs
xor
sub
shl
jle
dec
mov
repz
cmp
cmp
or
out
jbe
insb
adc
and
into
pusha
inc
sub
xlat
les
in
mov
out
iret
or
jnp
aam
aad
aaa
ret
mov
adc
loope
mov
cmp
mov
dec
filds
pop
cs
outsb
gs
dec
add
sahf
add
and
jle
or
je
xchg
enter
stos
jmp
fsubrs
out
rorb
xor
lods
mov
pop
mov
pop
push
jmp
inc
adc
sbb
movl
xor
int
sbb
repnz
xchg
jl
lods
movsl
sub
aad
repnz
mov
fdiv
xor
jno
xchg
add
scas
pusha
leave
pop
lds
out
das
or
lret
lock
xchg
sbb
cmp
push
dec
push
add
inc
movsb
xor
jne
roll
jp
fcmovu
mov
insb
mov
mov
mov
jae
push
cwtl
icebp
and
push
sub
fildl
xchg
push
jl
xchg
jnp
adc
adc
xchg
xchg
aad
push
mov
sub
mov
lods
nop
mov
pop
and
sbb
jl
leave
js
je
mov
mov
xor
cmp
and
jns
stos
loope
adc
int
dec
sub
inc
push
stos
jecxz
mov
jl
add
out
rorl
xor
shll
inc
xchg
and
push
cmp
lock
cli
lahf
loope
push
sub
mov
comiss
aam
mov
and
stc
popa
lea
cmp
or
fsubs
aaa
aad
jecxz
pop
push
arpl
dec
push
inc
iret
push
test
clc
scas
sbb
aam
das
inc
out
lahf
andl
xor
sahf
mov
xchg
mov
pop
adc
jp
pusha
jbe
mov
lock
popa
cld
xchg
pop
add
cwtl
addl
jecxz
xchg
pop
pop
and
movb
mov
fcoms
mov
mov
jle
dec
repnz
xor
lock
cmpsb
inc
in
repnz
fsts
jns
mov
outsb
inc
test
xchg
roll
push
cmp
add
adc
push
jmp
pop
aas
adc
push
popf
add
addb
add
cmp
inc
cmp
fbstp
xchg
subb
outsl
inc
mov
dec
inc
and
or
jp
call
cmp
pop
lcall
mov
enter
push
inc
enter
pop
sub
cmp
ret
iret
pop
mov
mov
pop
mov
pop
or
data16
into
mov
pop
fstpl
clc
fsubrl
push
imul
mov
in
mov
enter
aaa
dec
jb
icebp
pop
out
lds
or
xor
fwait
cmc
inc
data16
xor
pop
push
push
into
sbbb
test
cmp
push
lahf
sti
std
mov
enter
mov
mov
inc
pop
pop
mov
sub
insb
push
and
imul
mov
push
test
xchg
fsubl
rcpps
pop
int
push
add
sahf
adc
jl
jno
fisttpl
ljmp
sbb
inc
jle
insb
or
xchg
pop
mov
lahf
mov
std
inc
mov
insb
add
or
arpl
adc
cmpsb
dec
inc
leave
repz
movsl
cli
sbb
jae
push
or
popa
sarl
mul
adc
xor
test
lahf
add
dec
sahf
pop
loope
lahf
es
aaa
lock
dec
popa
fnstcw
lods
or
pop
aam
arpl
mov
rcll
push
ja
je
pop
push
loopne
jg
std
dec
and
xchg
sbb
stos
leave
cld
xor
jge
das
push
mov
nop
mov
movsl
aad
sbb
jo
inc
sbb
cmp
xchg
sub
sbb
add
lods
xchg
pusha
subl
jle
cmp
std
xlat
lods
stc
jmp
sub
xor
mov
or
cs
cmp
loop
push
dec
outsb
cmp
pop
test
loope
mov
inc
push
adc
push
ret
push
mov
add
repz
cmpsb
mov
xor
stos
mul
mov
and
dec
or
jnp
jge
dec
sub
test
fwait
shl
xchg
lahf
lds
scas
repnz
fistpl
testl
mov
mov
scas
std
sub
and
add
sub
in
add
test
jo
cmpsl
pushl
iret
addr16
ja
inc
pop
push
jg
outsl
pop
pop
pop
dec
out
imull
cmpsl
pushl
iret
addr16
ja
inc
pop
push
jg
outsl
pop
pop
pop
dec
out
ja
inc
lahf
xlat
daa
pushl
iret
addr16
ja
inc
pop
push
push
daa
jg
outsl
pop
pop
pop
dec
out
imull
cmpsl
pushl
iret
addr16
ja
in
pop
push
js
testl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
enter
adc
cwtl
cmp
jns
pop
or
sub
pop
or
mov
enter
test
test
mov
in
cmp
outsl
dec
or
pop
imul
or
mov
rorb
mov
cmp
pop
push
or
jp
ja
movsb
stos
mov
lods
stc
mov
push
imul
stc
mov
xor
lock
testl
jb
roll
rcr
outsl
dec
shlb
addr16
add
cmpsl
test
pop
clc
mov
inc
je
xchg
push
sti
add
cmpsb
mov
inc
js
and
fisttpl
mov
mov
pop
in
aaa
or
and
mov
xchg
adc
mov
inc
insl
filds
icebp
aaa
mov
inc
push
lret
xchg
xlat
xchg
mov
loope
sub
mov
pop
xchg
mov
xor
add
sub
imul
adc
mov
cmpsl
inc
add
pop
or
push
in
stos
call
sti
test
mov
cmp
pusha
sbb
inc
jnp
imul
adc
std
call
out
mov
mov
pop
das
js
dec
addr16
pop
addr16
je
sbb
mov
test
neg
cld
lret
stos
pop
sbb
sbb
push
pop
aas
cmp
outsl
dec
insb
shr
iret
clc
repnz
mov
fisttpl
sub
dec
or
sub
pop
or
mov
enter
test
mov
cmp
js
dec
or
sub
pop
or
mov
dec
scas
fisubl
and
bound
xchg
pop
test
sti
lcall
mov
les
mov
and
add
rcll
sbb
or
sbb
cmp
dec
andb
dec
cmp
xor
cmp
rcrl
int
add
out
jno
jl
push
mov
xchg
inc
ret
cmp
adc
jnp
sbb
das
lods
cli
icebp
cmp
add
cmc
scas
mov
push
iret
mov
mov
push
out
cld
xor
mov
adc
or
add
and
xchg
cs
push
or
ret
fisttpl
add
mov
rcll
xlat
sarl
pusha
pushf
push
adc
jno
pop
mov
mov
sbb
insb
or
push
out
sub
es
add
movb
js
lret
mov
cltd
mov
popl
mov
je
push
pusha
loopne
dec
lret
sub
test
in
push
xorb
push
fiaddl
xchg
fidivl
cltd
out
lret
pop
and
xor
shlb
add
repz
insl
das
add
sarl
xchg
lahf
dec
in
xor
mov
lret
hlt
int
in
pop
fcmovnu
xlat
stos
sub
sub
nop
bound
test
movsl
mov
pushf
aaa
adc
fimuls
inc
inc
test
mov
andb
pop
push
xchg
pop
sub
xor
push
mov
pop
xchg
push
mov
mov
xor
repz
and
movsb
sub
lahf
ret
jmp
mov
xchg
inc
and
mov
fstpt
loope
mov
repz
mov
and
test
sub
mov
outsl
arpl
call
call
in
push
dec
out
push
push
pop
je
and
hlt
sbbb
psadbw
dec
sub
push
daa
push
push
ret
sub
push
addr16
xor
les
clc
cmpsb
pop
into
nop
loope
mov
dec
cmp
sub
fisubrl
subb
rclb
mov
ds
insb
enter
add
cmp
jo
sbb
cmp
lds
jns
fwait
dec
test
xor
stos
jnp
test
jle
xor
push
cmpsl
push
push
negl
push
setb
and
ret
int3
aad
movsl
call
sbb
push
imul
dec
jo
sub
aas
divb
and
pop
and
mov
imul
push
dec
or
and
pushf
cltd
dec
push
or
xor
push
xlat
push
jae
aad
imul
cwtl
and
loop
jns
movsl
jp
aas
cli
cs
add
addb
adc
iret
and
push
or
mov
xchg
je
shl
dec
in
adc
inc
pop
mov
cs
push
cmp
ss
ja
and
mov
push
adc
mov
mov
sti
aad
das
rcll
in
hlt
mov
mov
push
mov
fwait
aaa
mov
fiadds
inc
rcrb
cmpsb
or
mov
cltd
lds
aaa
lcall
xor
mov
xor
lahf
mov
cmp
jmp
xchg
or
fsubrp
je
insb
outsl
jbe
stos
pusha
pop
add
in
fwait
test
dec
test
pop
add
test
mov
cmp
filds
andl
call
out
cwtl
mov
arpl
cmp
scas
arpl
fsub
test
jne
int3
xchg
rcll
jb
add
aaa
add
lea
aas
mov
call
cmpsb
push
mov
call
fwait
shl
mov
enter
jge
jp
fistps
or
jb
xchg
cmc
push
mov
aam
aaa
pop
cmp
les
pop
cli
hlt
push
pop
jmp
xchg
xlat
jl
imul
test
mov
call
inc
jp
repz
add
stc
mov
mov
push
xchg
inc
js,pt
loope
cli
scas
and
loop
dec
das
icebp
stos
cmp
lods
out
xchg
jno
sbb
xchg
dec
cmp
fildll
dec
cmp
loop
aad
iret
shrb
xchg
xor
fisttpll
dec
fistpl
mov
sub
fsubrs
mov
xchg
xchg
xor
fisubl
gs
fsubl
dec
mov
push
jae
mov
xor
or
xor
adc
dec
shll
stc
mov
xor
movsb
out
mov
movsl
subb
pop
inc
insl
or
cmpb
mov
test
pop
notb
inc
pop
cltd
jecxz
cmp
imul
sbb
jg
sub
or
imul
jle
or
sub
fucomi
push
pop
scas
ljmp
lret
aaa
loope
mov
push
addr16
dec
iret
sub
adc
rcrl
in
xchg
mov
inc
fcomp
push
jecxz
lock
xchg
and
adc
and
int
sbb
cltd
push
sub
dec
sahf
jno
add
xchg
mov
add
insl
in
jl
push
loop
push
sbb
and
imul
nop
sub
pushf
test
inc
mov
xor
sub
popf
test
inc
mov
jnp
loope
or
imul
sub
jp
call
cmpsl
dec
jge
mov
imul
mov
imul
xchg
rorl
or
fiadds
mov
mov
add
popa
aaa
pop
mov
inc
leave
sbb
pop
mov
stos
imulb
add
inc
lods
add
mov
inc
pop
into
xor
adc
imul
cmp
sbb
std
iret
mov
or
lock
adc
xor
inc
scas
or
mov
adc
ds
xchg
mov
cmp
imul
jbe
in
xor
adc
inc
inc
insw
cmp
leave
push
mov
enter
sti
mov
mov
jns
mov
das
and
cmp
mov
jmp
push
xchg
jo
cs
pop
xchg
cmp
sbb
insl
int
rorb
inc
andb
or
repnz
pop
jb
lret
xor
sub
popf
jns
mov
rclb
ljmp
mov
dec
lods
adc
cmp
in
sahf
sti
cs
fldt
push
add
jg
sub
imul
cmp
jge
jae
cmp
in
pop
in
mov
movsl
in
cmc
lea
mov
sbb
mull
xchg
inc
add
sti
xchg
xchg
jmp
dec
ja
test
mov
scas
inc
gs
les
mov
jbe,pt
xchg
add
mov
das
data16
sbb
pop
repz
adc
jae
lods
sti
jae
cwtl
ljmp
ja
jo
adc
pop
into
out
bound
aaa
pop
xchg
push
sbb
mov
fs
cmc
xor
mov
pushf
mov
lock
daa
out
sub
popa
add
popa
sarb
mov
adc
sbb
inc
inc
jg
mov
sub
stos
dec
inc
dec
call
cmp
out
push
xchg
sbb
cmc
mov
mov
shlb
dec
mov
cltd
loope
mov
inc
mov
fcom
cli
outsl
test
push
xchg
aas
shl
in
pop
and
movsl
es
fsubl
and
ja
pop
test
add
dec
loopne
in
push
adc
pop
call
movsb
pop
adc
mov
sbb
mov
cli
addr16
cmpb
mov
ret
pushf
sub
ret
jne
pusha
iret
clc
xorb
push
inc
push
inc
sti
int3
in
stc
pop
insl
dec
test
sub
or
xlat
int
inc
or
xchg
add
xchg
add
and
mov
fisttpll
pop
push
or
pop
xchg
xchg
add
inc
mov
out
lods
xchg
xchg
inc
loope
jmp
push
orl
cmpsb
loop
rcll
cmpsb
and
cmp
into
daa
dec
into
test
outsl
outsb
jmp
xchg
inc
xor
in
and
sbb
xchg
sub
stos
push
and
movsb
cltd
mov
lret
addr16
jo
out
mov
div
mov
ret
cwtl
sub
xchg
push
ljmp
addr16
pusha
adc
adc
fdivl
jnp
lcall
rorb
jnp
out
push
jge
or
mov
and
je
add
adc
or
loop
mov
sbb
sti
push
adc
pop
sub
bound
mov
cli
test
pop
std
cmpsl
inc
sar
fldt
rcr
mov
out
push
scas
inc
adc
cmp
dec
ret
add
stos
add
dec
add
nop
or
mov
idivb
inc
std
inc
insl
cmp
sbb
cmp
ret
sbb
push
mov
js,pn
fisttps
or
fs
add
inc
pop
bound
lds
mov
sbb
mov
es
ja
xchg
add
fwait
lds
repnz
in
sti
cmpsl
dec
insb
jno
cs
jmp
xchg
xchg
sub
fisttps
in
add
jmp
pop
dec
dec
int
xchg
mov
add
repz
int
mov
rolb
push
pop
add
jle
insl
inc
ret
inc
shlb
xchg
mov
lcall
rcrb
popa
jg
aaa
cmpl
ja
dec
into
and
sub
sbb
add
mov
clc
aaa
and
sbbl
pusha
mov
xor
push
add
mov
mov
icebp
mov
push
imul
shll
outsl
in
int
dec
xchg
scas
subl
stc
das
lret
mov
mov
mov
inc
icebp
out
push
test
roll
jecxz
stc
arpl
lods
mull
sbb
sbb
lret
ljmp
mov
in
mov
insb
sub
gs
loop
or
mov
sti
jge
cmpl
scas
lds
repnz
neg
sti
dec
call
lods
push
shlb
cmp
sub
sbb
xchg
add
push
jge
jle
arpl
adc
inc
sbb
mov
ret
shlb
jns,pt
rclb
js
jns
lods
in
dec
add
cmpsl
sbb
std
xlat
xchg
cmpsl
and
cmp
dec
rep
sbb
xchg
imul
dec
sub
sub
test
mov
xchg
aas
loope
sub
shlb
cwtd
loopne
dec
jnp
cmp
add
add
xchg
call
fisubrl
jne
sub
pop
insl
lods
lret
sbb
pop
dec
jb
loop
jo
jecxz
jns
xorl
movsl
push
jmp
cmc
add
add
ffreep
lods
es
add
pop
fcoml
xchg
lods
jecxz
mov
push
cmp
repz
pop
out
outsb
ss
xchg
mov
sbb
add
mov
lock
out
pop
adc
pop
addr16
jo
popf
xchg
push
mov
jb
or
adcl
jnp
cmp
lock
xor
outsb
cwtl
lret
dec
fidivl
pushf
xchg
std
push
xor
add
mov
add
daa
mov
add
fs
dec
scas
sub
mov
mov
mov
pop
sub
add
jmp
pop
fsubr
jmp
and
dec
aas
xchg
insb
shll
xchg
fldl
ds
ljmp
inc
push
cmp
xchg
sti
pop
hlt
jmp
add
xor
jo
add
out
lds
xor
mov
dec
mov
adcb
fwait
inc
adc
pop
dec
ret
lock
sbb
sbb
push
or
fcompl
insb
dec
sbb
and
fnstenv
add
add
popf
xchg
out
fnstsw
repz
fildl
mov
or
xor
pop
ficompl
fmul
popf
stc
pop
imull
cmp
outsl
mov
in
cli
push
mov
lret
mov
cs
pop
adc
pushf
je
lods
ret
or
pop
cmp
cmp
shlb
addb
xchg
pop
push
test
aas
leave
xlat
in
test
mov
dec
mov
jle
fidivl
ljmp
inc
push
dec
xor
call
add
enter
aam
imul
sbb
lahf
or
and
sbb
xchg
add
push
ljmp
lret
xchg
sbb
dec
mov
shrl
jb
push
lods
xchg
fwait
push
xchg
cmpb
ss
mov
aaa
xor
in
pop
adc
sbb
out
loop
enter
testb
push
cmp
mov
jno
ja
mov
aad
faddl
jns
sbb
outsw
pop
shrl
adcb
push
xchg
dec
jle
enter
in
jae
fwait
inc
sbb
mov
jns
or
and
and
jle
or
ja
cmpsl
pop
push
iret
cmc
push
js
adc
lods
sbb
jo
and
jae
stc
xlat
jmp
jle
mov
test
push
dec
mull
adc
cmp
fstl
out
xor
mov
pop
test
push
and
cmovae
pop
stos
shl
push
lds
add
inc
mov
or
and
into
pop
push
iret
std
cs
cwtl
and
ja
aaa
out
pop
inc
dec
adc
loop
sbb
call
pop
sbb
inc
and
addr16
popa
rclb
xorb
outsb
add
rcll
and
mov
and
mov
inc
push
and
call
jns
add
leave
jmp
pop
pop
or
lret
testb
inc
mov
test
push
mov
jae
xchg
xchg
adc
daa
dec
jne
mov
jecxz
mov
insl
leave
sub
incl
sub
xchg
lock
setb
aas
aam
ljmp
lock
cmp
mov
sbb
ret
push
inc
xchg
push
inc
ljmp
and
mov
lods
sbb
in
mov
stos
pushf
jmp
sbb
imul
adc
pop
xchg
pop
inc
lahf
dec
jecxz
sub
mov
push
mov
xchg
rolb
push
jmp
add
push
shlb
insb
jno
jnp
clc
dec
xchg
mov
das
mov
pop
stos
push
sbb
cmp
sbb
ret
inc
into
pop
and
inc
pop
xchg
nop
loopne
push
adcb
das
cmp
lret
cmp
fisttps
call
cltd
mov
push
xchg
sbb
sbb
mov
daa
push
mov
lcall
jb
inc
mov
insl
dec
lret
in
loope
fwait
outsl
mov
dec
jbe
repnz
adc
jb
popa
ja
push
lcall
cmp
xchg
jecxz
jge
fimuls
mov
loopne
sub
insb
or
mov
and
inc
addr16
xor
xor
push
sub
add
addl
xlat
pop
sub
hlt
cwtl
dec
xchg
push
dec
xor
loop
push
xor
imul
sahf
xlat
out
mov
add
adc
mov
outsb
mov
dec
or
push
fcom
push
jge
jns
insl
loop
repnz
es
add
push
negl
jle
fcmovnbe
iret
add
pop
out
xor
xor
jl
mov
xchg
mov
mov
inc
or
push
jb
mov
jno
dec
xor
jne
test
fsubl
call
sahf
call
sub
insl
xchg
lods
pop
xor
rorl
inc
and
rol
pop
xor
notb
div
xor
ror
mov
dec
xchg
add
inc
xor
cli
sub
adc
mov
decl
sarl
neg
mov
imul
xchg
pop
mov
fs
mov
cmp
jg
mov
mov
cmpsb
xchg
cltd
pop
lret
jbe
neg
pop
out
adc
xchg
out
sbb
loope
sti
jno
insb
into
cli
xor
sub
sub
add
sub
mov
mov
shll
idivl
mov
out
xchg
sbb
loope
push
cld
fldl
adc
lcall
xchg
mov
int
inc
rorl
cltd
and
push
cmp
outsl
bnd
adc
fadds
cli
xchg
sub
shl
jno
push
or
mov
sub
mov
cmc
lock
mov
pop
popf
mov
int3
in
std
cmp
jl
jo
and
int
mov
mov
mov
adc
cmc
stos
sbb
pop
stos
andl
add
sbb
sbb
rcll
mov
rcl
xlat
add
dec
or
repz
mov
fstpt
test
add
inc
rol
xor
inc
pusha
leave
mov
add
pop
pushf
imul
push
inc
subb
les
push
inc
arpl
xchg
cmp
dec
jge
in
xchg
les
dec
stos
mov
out
adc
add
movsb
cmp
repz
lcall
movsl
outsb
lret
xor
popa
mov
clc
jns
mov
mov
cmp
movb
test
push
cmp
or
pop
pushw
les
and
aam
loop
lods
cwtl
mov
ss
push
mov
pop
in
lret
mov
jno
push
sub
ficoml
subl
push
scas
push
movsb
ja
enter
pop
loop
cltd
fldl
mov
movsl
dec
and
popf
jnp
inc
mov
dec
pop
ljmp
adc
cs
cwtl
addr16
inc
fwait
xor
cmpsb
dec
lret
mov
pop
and
in
sub
xorb
pop
mov
in
sub
xorb
mov
inc
loopne
in
call
mov
scas
xchg
mov
in
stos
mov
adc
add
fwait
daa
mov
call
ret
hlt
shlb
mov
pushf
mov
adc
jl
dec
dec
mov
pop
in
lock
outsb
mov
mov
add
aaa
fsubr
test
sbb
adc
push
out
dec
and
fistpll
bnd
getsec
mov
das
addr16
cmp
add
push
notb
scas
mov
mov
mov
push
adc
cli
pop
or
aad
das
dec
jg
imul
fmuls
pop
rcrb
imul
jp
xor
pop
jge
mov
add
scas
int3
nop
in
fs
push
push
test
xchg
movsb
or
cmpl
mov
shrl
leave
popf
jnp
xchg
arpl
xchg
test
int
sbb
sub
or
dec
jns
test
push
cltd
mov
xchg
shlb
lcall
jae
sub
sbb
sbb
dec
sub
dec
fmull
sub
mov
push
stos
shll
ret
inc
aad
je
xor
add
dec
push
out
push
fwait
or
stos
call
jl
push
scas
jo
ljmp
leave
addl
cmp
inc
xor
mov
repnz
cmp
mov
inc
mul
daa
cmp
add
cmpsb
xchg
iret
sahf
fadds
insl
xchg
mov
sbb
lea
and
xchg
scas
jo
push
inc
les
or
inc
pushl
cvtps2pd
jmp
test
testl
mov
xorl
andb
insb
clc
fnstsw
pop
out
sub
rol
dec
movsb
in
mov
loop
adc
mov
cmc
adc
notb
stos
fwait
out
fs
in
and
iret
out
test
xor
mov
ret
sbb
lret
xor
jle
mov
ja
into
pop
sahf
lds
loop
push
adc
lds
repz
test
cmpsb
cltd
add
mov
jne
clc
jmp
xchg
test
cmp
mov
xchg
imul
stos
jb
xchg
mov
mov
out
dec
mov
nop
or
test
mov
push
aam
sahf
jge
fistps
dec
and
pop
adc
dec
es
inc
jp
or
dec
fldcw
mov
test
roll
scas
movsl
ja
cld
je
inc
bound
fidivl
mov
jmp
inc
jno
inc
pop
xchg
mov
movsl
inc
mov
sbbb
jmp
jge
ret
add
test
lds
mov
popa
xlat
push
jno
nop
inc
bound
mov
je
and
ficoms
mov
dec
and
jne
orb
popa
cmp
icebp
jp
dec
inc
pop
mov
call
adc
mov
stc
push
jp
dec
or
mov
mov
aaa
dec
neg
or
mov
es
daa
vpmovswb
pop
dec
xchg
stc
lock
mov
lcall
out
jno
fiadds
adc
lock
xchg
or
ljmp
mov
or
test
gs
sti
inc
sub
outsl
in
xor
mov
jno
clc
call
test
mov
cmp
js
dec
or
sub
pop
or
mov
enter
test
mov
cmp
js
dec
or
sub
pop
or
mov
enter
test
mov
cmp
js
dec
or
imul
or
sbb
in
stos
cld
fwait
int3
mov
sti
test
mov
cmp
shlb
mov
mov
or
stos
mov
ljmp
cmp
sub
sbb
or
dec
sub
push
lcall
mov
cli
lret
lret
or
pop
sbb
or
dec
push
pop
push
lcall
mov
cli
lret
lret
or
push
or
sub
push
pop
aas
add
fdivp
cli
push
cmp
sub
sub
sbb
push
jge
mov
shl
or
pop
ljmp
lds
outsl
xchg
dec
arpl
cmpsl
or
pop
xchg
mov
scas
mov
lret
out
lods
inc
popa
jno
lahf
dec
sbb
pop
aam
pop
aad
in
mov
movsl
das
dec
pop
inc
mov
out
sbb
ljmp
in
cmc
mov
movsb
pusha
imul
push
jmp
cli
ret
and
jg
push
sub
or
xchg
sbb
mov
fwait
das
cmp
add
add
sub
in
fdivrl
dec
push
cmpsl
or
test
jnp
imul
mov
lret
lret
or
cmp
sub
pop
jp
push
pop
push
out
xlat
into
jns
fsub
int3
cltd
xchg
scas
stos
mov
push
mov
fs
push
adc
fcomps
das
loopne
lcall
cli
mov
lret
addr16
inc
dec
dec
adc
jne
in
ljmp
fwait
xchg
lret
lret
or
cmp
sub
pop
jp
push
pop
push
lcall
mov
cli
lret
lret
or
cmp
sub
pop
jp
push
pop
push
lcall
pop
test
lea
mov
and
mov
push
sbb
movsl
fsubrp
loop
int
jae
and
lock
mov
mov
add
lods
incl
add
fwait
ss
push
or
and
adc
in
mov
xor
cmc
sub
jg
mov
test
cmp
sbbb
xchg
cmovo
out
out
jne
and
aam
mov
xchg
es
movsb
es
xchg
mov
out
mov
adc
mov
dec
pusha
inc
es
or
lahf
enter
jmp
jecxz
notb
xor
mov
add
and
imul
test
cmc
clc
sahf
lret
pushl
out
dec
jl
hlt
rcrb
mov
icebp
aad
pushf
hlt
inc
inc
fnstenv
mov
mov
mov
push
inc
les
jecxz
sbb
outsb
cmp
push
xor
pop
mov
pop
fs
lcall
das
pop
daa
mov
dec
and
push
enter
push
pop
jns
mov
enter
pusha
movsl
cwtl
sbb
pop
std
xchg
sti
ret
mov
insb
pop
mov
push
xchg
mov
out
ds
jo
pop
mov
addr16
shlb
sub
adcl
xchg
out
dec
daa
mov
enter
push
cmp
sub
repz
and
mov
mov
daa
lahf
orb
pop
mov
outsb
aaa
cmpsb
pop
fildll
sbb
idiv
push
repnz
sarl
stc
fwait
repz
add
mov
rolb
jp
xchg
fisubl
pop
ds
jno
dec
pop
sub
mov
or
fadd
repz
cmpsl
or
mov
scas
push
femms
push
scas
fisubrl
mov
pop
lret
jg
fldl
cmp
jae
xchg
out
rcr
pop
xchg
or
add
mov
clc
jmp
mov
shl
sbb
aad
push
xchg
int
addr16
test
xor
cwtl
sub
idivl
repnz
mov
aas
sarb
in
mov
icebp
xorb
sbb
or
enter
jnp
and
sarb
loop
inc
pop
leave
cmp
movsl
jmp
imul
rcrl
imul
in
dec
cmp
mov
fmuls
and
lcall
xor
ds
test
or
addr16
adc
mov
aad
aad
push
mov
cmc
fsubl
mov
test
jb
adc
xchg
xor
aas
mov
jno
sahf
inc
mov
or
shlb
mov
adc
add
adc
sbb
mov
fistpll
xchg
pop
mov
dec
into
insl
mov
mov
add
mov
mov
xlat
xchg
lds
rorb
loope
icebp
mov
or
lods
jo
inc
jo
iret
jecxz
jp
pushf
mov
add
and
mov
add
push
cltd
push
js
jns
xchg
lretw
loope
xchg
xchg
and
dec
dec
push
push
or
push
mov
inc
aaa
mov
movsb
xchg
popf
scas
inc
stos
jmp
ret
in
dec
or
mov
mov
lahf
or
fildl
fnstcw
and
pop
adc
popa
jne
into
pushf
mov
xchg
xor
sbb
mov
mov
rcrb
adc
mov
cmp
je
stos
popl
loop
cmp
jno
iret
test
test
popf
js
or
js
cltd
iret
daa
xor
xor
adc
or
add
add
rclb
add
shl
mov
int
lea
push
mov
mov
gs
adc
push
inc
jge
adc
push
fnsave
test
popf
pop
or
ljmp
into
movsb
sbbl
push
xchg
in
loopne
std
les
cmp
stos
out
cwtl
fsts
iret
int3
fists
mov
dec
push
jle
and
mov
mov
pusha
dec
push
stos
adc
sub
test
dec
cmpsb
in
inc
mov
jp
adc
cmp
cmp
pop
add
and
imul
mov
ljmp
push
pop
rcrl
jo
fwait
dec
mov
popa
xchg
push
test
jae
call
jmp
or
xor
cmp
pop
push
push
sbb
aaa
mov
sbb
ficompl
push
repnz
lea
jae
jne
and
sti
ljmp
xor
shlb
inc
adc
mov
jns
pusha
clc
inc
testl
and
lret
aad
in
mov
test
jmp
pop
mov
jne,pn
mov
xor
jg
fildl
push
lret
loopne
in
cmp
sbb
xor
out
dec
arpl
lea
sbb
shrb
inc
neg
sub
std
xor
scas
icebp
sub
push
sub
sahf
test
movsb
or
rorl
xchg
xchg
lods
xlat
iret
xor
mov
mov
or
out
xchg
je
push
fwait
outsb
jle
imul
pop
jbe
ret
xlat
subl
pop
lret
fbld
dec
repnz
mov
loopne
or
mov
arpl
jns
lret
std
imul
out
roll
mov
aad
lods
cmp
lahf
push
xor
sub
cli
jbe
push
fs
scas
sub
or
mov
push
jmp
adc
xor
mov
dec
or
test
adc
xor
aas
test
cltd
jno
lcall
js
fwait
inc
inc
ret
loop
mov
pusha
inc
or
add
ss
push
fs
xor
mov
cltd
sahf
in
bound
xchg
cld
inc
roll
add
dec
jle
outsb
ret
mov
mov
push
mov
add
mov
fldt
aam
sbb
std
add
jge
notb
sub
int
xor
sub
dec
mov
sbb
aas
rorl
sub
jno
inc
mov
and
inc
fsts
dec
mov
out
xor
bound
or
adc
ds
cmp
daa
inc
lds
dec
int3
ja
mov
inc
pop
pop
int
xchg
int
mov
cmpsb
push
outsl
sbb
sub
jbe
sahf
rolb
jp
stc
sbb
jl
stos
jl
movsl
js
clc
dec
jo
pop
fucomp
push
and
xor
fs
aam
jo
adc
btc
mov
dec
fcmovu
not
shll
aas
xor
push
xchg
bound
or
jmp
push
push
cmp
sahf
push
pop
inc
mov
pop
cmp
clc
mov
shl
jnp
dec
inc
scas
sbbb
xchg
out
je
inc
mov
pusha
decb
movsl
mov
pop
sbb
hlt
in
pop
jmp
push
out
fsqrt
sbb
xchg
into
mov
dec
pop
pop
pop
pop
and
fists
inc
subps
call
test
loope
pop
in
and
mov
mov
rorb
ret
push
sub
in
pop
loopne
les
dec
pop
roll
inc
sub
call
inc
mov
rcrb
jbe
out
add
les
shrl
psrad
add
je
mov
and
imul
clc
and
pop
jbe
push
and
int3
push
lea
cmp
push
add
shll
das
pushf
out
push
out
pop
imul
push
adc
andb
fs
fcoms
in
xchg
outsl
in
test
out
adc
ds
ja
ret
sbb
lock
dec
inc
mov
lahf
pop
loope
or
xchg
lcall
pop
arpl
pop
xchg
lcall
out
ret
std
cli
out
sti
add
jge
xor
xor
sahf
add
rcrl
mov
movsb
push
mov
hlt
push
sti
pop
add
test
test
incb
pop
out
stc
add
fcmovb
out
cmp
sbb
gs
adc
test
sbb
pusha
test
insl
mov
stc
push
push
sbb
or
orb
je
or
sbb
sub
inc
cmp
pop
idiv
adc
adc
or
arpl
stos
pop
cmc
xchg
sbb
push
sbb
fdivs
fwait
cmpsb
rolb
int3
and
ret
pop
aad
and
jg
push
mov
lahf
inc
in
sbb
push
mov
add
cmp
pop
ljmp
ds
sbb
movsb
ficomps
das
test
adc
cmp
fidivs
lcall
in
xchg
pushf
adcl
inc
fcoms
push
imul
iret
xor
loope
addr16
dec
cmp
out
jnp
mov
sti
lea
mov
push
or
out
pop
xor
negb
cmpsb
pop
inc
dec
bnd
xchg
pusha
and
mov
mov
sbb
icebp
push
rol
fidivrs
es
cmpsl
xchg
sub
pushf
and
ja
mov
ja
cmc
out
mov
jbe
xchg
pop
shl
rcll
push
push
andl
add
sbb
lea
in
sbb
out
cmp
fnsave
cmc
mov
popf
pop
pushf
pop
nop
push
ret
lods
and
adc
dec
mov
das
repnz
jbe
push
mul
lcall
decb
popl
cmpsl
bound
xchg
outsb
mov
add
pop
test
xor
push
pusha
dec
das
pushf
pop
mov
add
fdivrl
jecxz
inc
inc
les
repz
or
push
sbb
jmp
xor
fsub
dec
pop
jnp
or
gs
jae
lock
jns
dec
insb
jne
rcrl
stos
cld
movsl
jmp
adc
dec
adc
adc
dec
mov
lds
hlt
adc
aaa
mov
shlb
stos
std
pop
aas
mov
or
inc
imul
mov
xor
jge
sbb
and
mov
inc
rolb
and
out
bnd
mov
jo
stos
into
in
push
repnz
fisttps
daa
cmp
xchg
push
push
repnz
pop
mov
dec
jle
mov
push
xchg
inc
repz
cmc
sub
sarb
xlat
outsb
js
jecxz
fisubrs
add
fstpl
jmp
sub
inc
mov
js
mov
mov
gs
stos
je
mov
out
rorl
mov
pop
xchg
push
jb
ja
out
jo
shll
int3
pop
adc
and
inc
adc
bound
jne
push
jb
sti
mov
add
dec
std
pop
mov
mov
fidivl
adc
sbb
outsl
xor
sub
inc
or
sbb
inc
push
jns
xor
and
push
sahf
and
shlb
and
fistl
mov
scas
test
shlb
push
fdiv
mov
mov
push
sbb
ljmp
in
stos
ror
lods
pop
pop
and
pop
mov
sbb
iret
fwait
push
ror
loopne
fwait
movsl
lds
test
out
es
cs
or
out
aaa
pop
push
repz
in
repnz
pop
pop
adc
mov
popa
cltd
loope
test
xchg
push
jecxz
and
cld
mov
adc
insl
mov
out
je
xchg
and
cli
fcompp
sarb
adc
aad
pop
push
fldt
outsl
pop
adc
xchg
xchg
rcl
adc
dec
bnd
and
jmp
fdivr
cmpsl
add
vmwrite
mov
or
jecxz
enter
call
lods
xchg
xor
stc
inc
out
out
and
out
inc
jnp
pop
shr
out
and
jb
outsl
test
sahf
in
test
jle
push
add
es
mov
mov
inc
divl
cmp
mov
add
push
push
mov
daa
inc
xchg
lret
test
dec
mov
cltd
test
int
lock
lock
loop
int
stc
mov
iret
hlt
xor
adc
or
sahf
pushl
movsl
add
scas
add
cmp
push
shr
test
mov
add
js
jns
int3
cwtl
mov
xchg
jmp
mov
ret
js
js
hlt
fidivrl
cmp
stc
mov
addr16
scas
arpl
xor
mov
mov
fldt
or
fcoml
mov
out
testb
dec
mov
cld
jns
jo
idivl
sub
xlat
pop
and
pop
test
and
or
scas
push
ficompl
cmp
mov
outsb
push
xor
mov
repnz
jle
inc
dec
sbb
test
mov
rcrb
dec
push
mov
push
inc
pslld
mov
xchg
test
in
push
sub
cmp
push
sbb
aam
je
cld
or
mov
jp
xchg
decl
adc
jns
inc
jmp
mov
fwait
xchg
add
xchg
xchg
jb
in
pushf
mov
daa
inc
in
lock
sub
mov
cmp
imul
mov
lods
and
push
add
mov
pushf
push
jnp
test
fstps
jp
arpl
push
into
or
inc
inc
outsl
xorb
and
mov
aad
daa
jae
cs
and
lods
mov
shrl
lret
shll
or
addb
enter
xorb
ljmp
stc
add
dec
test
outsl
inc
push
jecxz
mov
leave
fstp
ret
call
daa
cmp
sub
push
nop
mov
sbb
rcll
lds
mov
xor
lea
jo
ret
pop
mov
mov
cmpsl
test
add
int
xlat
test
popf
push
push
outsl
push
scas
mov
lret
rorb
int
mov
scas
push
sbb
nop
test
or
jbe
cli
lahf
dec
cmc
pop
int
or
add
jo
outsl
add
cld
mov
sbb
mov
xchg
das
adc
pop
mov
cmp
ss
icebp
pop
jmp
and
loope
je
loope
bound
leave
cmp
xor
ds
orb
pop
pop
push
pop
push
aaa
mov
faddl
push
scas
cmp
fs
push
xchg
ret
notl
je
jo
xchg
push
addl
sti
mov
fisubrl
and
je
adc
pushf
out
push
mov
cmp
lock
inc
cmp
dec
adc
aas
pandn
aaa
rcll
popa
scas
and
test
int
andb
and
testb
std
mov
dec
mov
std
sahf
cmpsb
and
mov
mov
dec
cmpl
mov
mov
rolb
jbe
push
push
scas
mov
outsb
pushl
jo
popf
push
or
dec
xlat
out
inc
testb
test
fwait
mov
dec
inc
dec
ss
inc
add
xorl
mov
sarl
imull
icebp
mov
fisttpl
bound
int
arpl
cmpsl
sub
pop
out
pop
aas
pushf
jo
data16
pop
and
mov
loopne
jl
aas
jmp
inc
mov
aaa
or
mov
bound
or
frstor
shll
jb
push
mov
into
xchg
ja
pusha
push
lahf
cmp
mull
rorb
sub
cmp
sub
subb
mov
mov
ljmp
imull
mov
es
push
inc
jmp
push
cwtl
call
sub
or
mov
in
js
xchg
inc
jp
mov
mov
lods
jo
sub
out
push
jg
cmpb
jo
push
js
mov
ret
arpl
lcall
dec
sbb
iret
sarb
imul
nop
arpl
xchg
in
fmuls
std
subb
pop
arpl
sbb
xchg
cmp
cld
shrb
imul
out
imul
fsubrl
mov
xchg
xchg
cwtl
lahf
adc
loopne
push
sub
xchg
add
jne
or
xchg
ret
lock
xchg
mov
add
sbb
dec
xchg
xchg
pusha
daa
jbe
xchg
sarl
imul
add
test
mov
xchg
xchg
cmpsb
jbe
fs
sub
jge
insb
mov
push
lea
aam
pop
or
test
jno
add
out
sahf
lds
fadd
repz
lds
jl
aam
mov
dec
jecxz
sbb
jp
jbe
cmp
pop
nop
xor
xchg
lods
adc
outsb
pop
mov
push
mov
xor
scas
xchg
cltd
scas
ret
adc
push
cld
insb
mov
neg
add
test
jecxz
test
vcvtps2dq
mov
or
test
stos
loop
pop
rorl
mov
test
xchg
mov
das
sub
repnz
jne
mov
ds
nop
cltd
jp
add
shl
dec
sub
popf
mov
dec
jge
sub
je
push
fcomp
int3
xchg
jnp
sti
fists
pushf
jecxz
xchg
outsl
xchg
push
fmuls
scas
and
xor
mov
int
cmpsb
sub
fidivrs
xor
test
inc
cmc
mov
xchg
arpl
mov
sub
jl
add
popa
aam
test
mov
cmp
sub
in
cmp
pusha
mov
lcall
push
inc
shlb
enter
std
popa
lock
dec
call
or
aad
jae
adc
fbld
cmp
scas
or
js
test
xchg
bound
sbb
rorl
fwait
ss
hlt
cltd
xchg
xor
jo
stos
sub
xlat
push
cmpsl
mov
push
pop
dec
dec
je
cmp
mov
scas
ret
cld
orl
sbb
out
inc
aam
xor
ret
and
inc
data16
jae
ss
xorb
ret
fstps
jb
add
in
jp
stos
out
and
cmp
call
cwtl
call
stc
js
push
dec
loop
xchg
mov
sti
push
push
mov
dec
scas
leave
push
mov
leave
inc
mov
and
cmpsb
dec
arpl
insb
mov
dec
fidivl
daa
add
icebp
jns
cmc
insl
mov
mov
popf
dec
sbb
dec
jmp
cli
pop
out
ss
lret
dec
pop
movsb
je
mov
jae
ret
les
mov
jmp
les
pop
movsl
ret
rclb
cmp
vpslld
dec
lea
sub
insl
inc
pushf
out
jmp
or
hlt
sub
and
sbb
fiadds
sbb
ja
push
test
enter
push
jl
inc
out
xlat
fidivl
xchg
ds
inc
mov
and
pop
ljmp
xor
xchg
mov
lods
inc
and
jmp
mov
pop
dec
jge
in
sti
jge
in
stos
aam
sti
mov
xchg
scas
sub
push
aad
aad
imul
das
loope
pop
fnsave
sub
shll
mov
imul
aaa
mov
test
mov
aam
scas
mov
bswap
mov
and
es
fcomip
push
imul
sbb
in
dec
cld
sbb
mov
push
add
ja
inc
sub
popa
adc
pop
test
ja
push
mov
fadd
mov
mov
mov
out
stos
fisubrs
outsb
hlt
cmp
jmp
call
into
and
scas
arpl
xlat
cmp
jge
mov
test
cmp
push
aaa
cmovno
out
dec
lock
mov
or
cmp
movb
dec
lret
adc
fsubl
insb
gs
cwtl
repz
adc
iret
or
cmp
fwait
cmp
mov
inc
inc
jbe
cmp
leave
pop
sti
fstpt
test
cmpsb
adc
insb
cmp
or
xor
cmp
enter
icebp
repnz
frstor
lahf
xor
adc
dec
sbb
push
mov
and
pop
pop
movsb
movsl
xchg
in
arpl
jns
daa
ret
out
or
cmp
mov
xchg
sub
iret
test
cmpb
xor
push
jb
das
jmp
lret
loopne
repnz
dec
mov
les
outsl
insb
pop
push
jecxz
pushf
add
push
xchg
push
xlat
aam
aam
cs
ljmp
xchg
aam
out
cmp
fildl
push
jmp
cltd
pop
and
pusha
inc
add
loop
pop
sub
stc
movsb
rcrb
ss
shlb
mov
cmp
adc
mov
mov
add
xor
mov
or
cmpsl
loop
inc
scas
mov
sbb
mov
lods
in
mov
pusha
cmp
lock
int3
xor
pop
popa
cs
leave
mov
add
cwtl
cmp
ljmp
sub
outsb
cltd
jns
insb
in
adc
sub
stos
mov
cli
lret
lret
or
cmp
sub
pop
jp
push
pop
push
lcall
mov
cli
lret
lret
or
cmp
sub
pop
jp
push
pop
push
lcall
mov
cli
lret
fucomi
lret
or
cmp
sub
pop
jnp
push
pop
imul
mov
lret
pop
ljmp
sbb
jge
bnd
movsl
xchg
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
push
cwtl
mov
and
movsl
xorl
or
add
add
add
push
or
xchg
or
pop
add
and
cmp
dec
add
add
rolb
add
pop
add
add
inc
add
add
or
das
add
add
add
iret
add
add
add
add
add
add
add
add
add
add
add
imul
mov
add
xor
pop
add
add
add
add
add
and
mov
dec
add
add
add
mov
insl
add
and
popf
add
in
fldl
fldl
dec
add
or
add
xor
mov
clc
add
mov
sub
pop
add
add
mov
add
add
movsb
add
jno
mov
addr16
add
or
add
sbb
cmp
push
add
or
inc
add
mov
fldl
fldl
addr16
add
add
add
add
add
add
add
sub
addr16
add
add
add
or
dec
add
add
add
add
add
pop
add
add
add
add
aaa
add
add
add
add
add
add
add
add
dec
add
push
add
sbb
test
mov
fildl
addr16
add
faddl
aam
jno
addl
dec
add
add
xchg
jg
pop
add
add
popa
add
add
add
push
add
add
add
add
mov
add
xchg
pop
add
lcall
add
mov
push
add
outsb
add
add
add
add
push
add
push
add
add
add
add
imul
mov
pop
add
add
add
js
out
int3
add
add
add
add
add
add
js
pop
pop
test
js
inc
add
add
inc
add
add
add
add
dec
add
add
add
adc
lea
push
add
add
call
add
jl
imul
pop
add
ret
add
add
add
add
pop
add
add
add
add
add
add
add
add
cmp
add
dec
add
add
add
pop
add
fldl
imul
inc
add
push
popa
add
add
add
push
add
xor
or
loopne
add
add
add
add
add
filds
inc
add
add
add
mov
add
add
xor
fadds
xchg
and
insl
add
insb
add
add
add
add
add
add
jge
sbb
or
movsb
add
push
add
add
xor
push
add
add
add
add
xor
add
pusha
add
roll
add
add
jmp
add
add
filds
in
or
add
add
add
add
xor
in
fldl
dec
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
mov
add
add
verw
add
add
add
add
fdivs
xor
inc
mov
dec
mov
xor
lahf
mov
mov
rolb
jae
nop
orb
loop
jae
add
add
movsl
repnz
or
js
mov
sub
mov
lods
xor
shll
pusha
rol
fadds
loope
pop
inc
daa
or
and
scas
stc
inc
mov
mov
outsl
mov
dec
or
aas
jl
int
cmpsb
addr16
jl
jg
das
mov
out
inc
dec
ret
cmpsl
gs
push
std
push
imul
clc
xor
adc
mov
test
scas
mov
xor
out
mov
push
fdivl
dec
stos
cmp
mov
and
mov
fbld
mov
and
mov
in
rcrl
cmpsb
cmp
adc
cmp
add
mov
or
in
mov
mov
mov
lds
mov
xchg
xchg
lock
shlb
les
and
adc
xchg
cwtl
test
mov
xchg
cli
mov
mov
iret
inc
lock
notl
fsubl
mov
mov
mov
fmull
cmp
cmp
cmpsb
bound
cmp
popf
sbb
sbb
dec
in
inc
rorb
push
ja
mov
ret
pop
sbb
add
jp
or
test
dec
and
sub
fistpl
lock
sbb
inc
dec
pop
jmp
ret
sbb
test
push
push
stos
or
sbb
outsb
mov
xchg
test
mov
sbb
dec
sarl
adc
push
mov
movsl
stos
mov
ficompl
jbe
je
push
mov
fbstp
sub
out
cmp
int3
lods
dec
push
shl
mov
mov
pop
adc
ljmp
lahf
out
imul
sbb
mov
pop
pop
into
adc
jb
sbb
mov
mov
ljmp
pop
bound
ds
lahf
and
inc
aad
mov
xchg
adc
and
and
xchg
add
outsl
xor
jmp
push
jp
ss
and
xorl
jmp
jmp
pop
jb
mov
testb
inc
jns
xchg
sbb
lret
sub
lods
insb
jle
int3
cli
sub
imul
xchg
mov
imulb
pop
dec
icebp
jg
sti
je
cmp
and
enter
jg
insl
bound
push
ds
fadd
sbb
cs
jle
dec
sub
push
pop
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
