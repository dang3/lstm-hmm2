fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
mov
mov
push
repnz
in
xor
ret
hlt
add
jb
bound
test
mov
push
repnz
xor
add
cmp
in
hlt
jae
add
xor
inc
xchg
or
push
mov
ficomps
in
adc
jl
push
ret
in
xlat
jp
cmpsb
sbb
adc
push
negb
lock
out
xor
imulb
loop
or
adc
dec
xchg
mov
pop
addr16
mov
xor
stos
fdivl
bound
les
push
or
mov
jmp
bsr
dec
or
sub
cmp
mov
dec
fs
in
lds
sub
daa
dec
lcall
je
inc
outsb
push
or
popa
and
cmp
aad
mov
cmp
inc
call
mov
pop
stos
push
pop
push
pop
lds
adc
mov
and
into
bound
dec
fwait
aas
mov
imul
sub
mov
movsb
fwait
adc
mov
push
push
hlt
push
xchg
xor
xor
add
xchg
in
pop
fs
xor
cmp
inc
cmpsb
out
cli
cmp
jno
push
xor
addr16
jecxz
fstpt
lock
std
jmp
xor
aaa
jecxz
fwait
jbe
data16
insl
xchg
daa
push
test
adc
or
out
pop
into
xchg
repz
cmp
add
adc
in
hlt
adc
add
jb
bound
mov
push
repnz
xor
add
adc
in
hlt
adc
add
jb
bound
fs
push
cmp
cmp
lods
pusha
sub
rorl
out
inc
xchg
mov
in
nop
mov
lret
in
data16
mov
or
sub
sbb
adc
dec
stos
sbb
and
ljmp
or
and
pop
and
and
or
xchg
push
int
mov
out
adc
jae
xor
rcrl
pop
stos
stc
inc
adc
mov
mov
xor
scas
lcall
adc
scas
mov
push
fidivrl
test
and
push
in
bound
sahf
mov
loopne
inc
aad
or
lds
mov
fimuls
test
push
popa
mov
add
lods
subb
jb
lods
fs
rorb
xchg
repz
cmp
lret
popf
aaa
inc
push
dec
pop
lcall
mov
ret
and
sbb
cmp
dec
in
jle
pop
je
lods
mov
cmp
inc
mov
pop
cmpsl
shlb
or
jnp
sub
fildl
or
and
in
jle
dec
dec
fisubrs
mov
cmc
inc
pusha
aaa
pushf
cmpsb
add
xchg
xor
test
gs
call
xor
fstp
sti
xchg
sahf
cmp
sub
mov
add
inc
sbb
xchg
pop
into
sub
cld
pop
insb
ja
aas
into
rorl
push
xchg
push
jo
xchg
imul
stos
imull
mov
jbe
gs
adc
je
cltd
mov
ljmp
mov
or
mov
or
cltd
xchg
popf
and
pushf
sbb
cltd
out
and
les
jb
or
pop
push
sub
ljmp
aam
enter
out
out
mov
push
negb
popf
jne
rcrb
in
inc
xor
add
sub
inc
xor
mov
fs
mov
sbb
cwtl
int
push
inc
dec
fidivs
pop
cwtl
mov
sbb
pop
jg
add
mov
adc
jae
xor
and
ds
movq
jnp
mov
pop
mov
fidivrs
mov
loop
jbe
pop
fsts
clc
pop
inc
clc
popa
push
and
popl
fsubrl
cmp
lahf
mov
lcall
notl
mov
dec
mov
mov
outsl
xor
mov
sti
rcll
mov
aas
test
sbb
imul
dec
stos
and
aam
fs
rcll
mov
shll
pop
push
mov
stos
xchg
or
in
out
push
sbb
loope
loope
rclb
push
add
movsb
rcrb
pop
jns
jecxz
inc
ljmp
sbb
in
lock
out
xchg
mov
push
mov
rorl
adc
je
in
dec
test
stos
aas
lock
mov
int
pushf
sarb
mov
sbb
iret
stos
pop
ss
push
and
xchg
jb
inc
popf
lods
pop
loope
pop
add
mov
outsb
xlat
xchg
add
test
fcoml
add
sub
jp
sbb
lock
mov
jle
sub
sti
xchg
and
pop
ss
imul
xorb
stc
repnz
mov
cmc
aam
insb
out
jae
ja
pop
js
imul
sub
outsb
sbb
mov
sbb
ror
fnstenv
pop
fs
jo
js
jle
shr
jae
cld
mov
hlt
or
test
fildll
lea
xor
mov
enter
cs
pop
fsubl
or
das
mov
lret
mov
stc
rcl
mov
test
and
inc
jl
and
dec
inc
xchg
xchg
jecxz
repz
mov
cmpb
xchg
and
leave
and
les
test
jne
mov
mov
aam
mov
mov
xchg
cmc
pop
call
and
fistpll
sub
ret
lea
lahf
out
arpl
arpl
mull
mov
ret
mov
divl
jns
and
xchg
add
js
sbb
int3
and
lock
mov
xor
or
inc
cmc
rcll
insl
or
push
cmpsb
sub
cmp
adc
gs
enter
fildll
lds
inc
ficoms
fucomi
dec
loopne
ret
repnz
pop
loop
jp
loop
fiadds
sub
call
pop
sahf
cmp
pop
push
out
adc
inc
mov
lcall
sub
cli
mov
lcall
mov
outsl
pop
push
push
sbb
lods
mov
aas
add
xlat
jle
test
fcomi
lret
xchg
loop
lret
cmp
movsb
loopne
dec
jns
sbb
jne
jecxz
fisubs
mov
dec
out
mov
push
xchg
pop
loopne
out
jp
adc
xlat
xchg
xchg
mov
add
daa
loope
xlat
fisubrs
adc
inc
dec
jb
pop
test
int
in
in
insl
jmp
push
cmc
enter
and
and
adc
out
or
jecxz
sbb
dec
rorl
outsb
mov
jns,pt
loopne
popa
cmp
jo
dec
addr16
cmpsb
sbb
arpl
and
xchg
cmc
in
ja
adc
bound
or
or
cmp
and
mov
popl
outsb
xor
mov
movsb
sub
test
imul
ficomps
ja
and
pusha
shl
mov
je
data16
or
mov
add
loopne
mov
jnp
and
adc
cmpsl
add
push
stos
fisubs
and
jp
movsl
mov
and
hlt
xchg
pop
push
loopne
mov
iret
daa
push
pop
lret
xchg
rcr
call
mov
pop
sub
stc
lahf
arpl
cmpsb
loop
inc
arpl
stos
insb
jo
xchg
inc
movsl
scas
daa
dec
cmpsl
into
leave
mov
shr
or
jp
sbbl
xor
cli
aas
shll
mov
dec
dec
mov
jb
stos
out
xchg
fdivrl
pop
imul
mov
in
adc
lods
repz
sbb
test
or
inc
mov
int3
inc
sub
pop
jb
or
sbb
ficompl
push
jle
lret
enter
fsub
mov
ror
cmp
pop
inc
fs
leave
dec
push
insl
jae
or
pushf
and
and
xchg
mov
inc
mov
stc
inc
pusha
lahf
repnz
mov
inc
xchg
mov
ret
movsl
ds
dec
xchg
and
aad
into
xchg
sub
stos
popf
mov
cmp
xchg
addr16
dec
in
out
cld
mov
fdivrl
inc
sbb
push
inc
aam
std
movsl
pop
scas
add
adc
jg
and
aad
ljmp
outsb
mov
hlt
mov
and
into
xor
xor
aad
inc
ret
lock
xor
int
pushf
mov
aad
inc
ret
mov
ret
push
rorb
or
les
lds
mov
push
xor
arpl
mov
pusha
xor
nop
int
cmp
rolb
sub
pop
pop
xchg
shlb
xchg
jle
ret
test
xchg
and
or
xor
push
add
lods
adc
inc
adc
sbbb
cmpsl
das
insl
lds
add
and
dec
roll
jae
jl
pop
xchg
pop
and
mov
push
cpuid
inc
mov
lods
loope
sub
pop
mov
jmp
push
sub
orb
mov
dec
pushf
cmc
rcrb
sbb
addr16
xchg
aam
gs
cmp
inc
mov
cli
add
jl
ds
lods
mov
imul
fwait
sub
or
mov
sub
adc
js
pop
out
pop
pop
xchg
push
mov
movsb
movsb
jns
imul
mov
jae
pop
loope
add
bound
push
testl
sub
je
dec
push
sbb
ret
pop
icebp
xchg
cs
insb
ficompl
push
xor
int
in
scas
rolb
xchg
add
ss
sbb
loopne
lods
xorb
shlb
or
aad
sbb
push
fldt
mov
adc
mov
xor
mov
in
mov
imull
imul
cli
shll
mov
pop
pop
movsb
push
adc
mov
mov
loope
iret
or
das
xor
dec
rolb
mov
ds
or
sub
sub
xor
ret
push
movzwl
sub
mov
movsb
movsb
jecxz
sahf
jae
mov
adc
mov
dec
les
inc
aaa
jo
mov
xchg
fisubrl
inc
or
cmc
adc
popf
stos
cmp
pop
daa
out
push
adc
fwait
aam
fnstenv
mov
mov
jbe
movsb
inc
mov
and
add
repz
push
aas
rcrb
test
aam
test
pop
xchg
mov
cmp
inc
lock
loope
mov
incb
mov
into
or
pop
pop
pusha
movsl
pop
jae
jle
cmp
xor
test
dec
mov
icebp
sahf
es
pop
andb
scas
loope
pushf
adc
in
daa
jge
lods
pop
jecxz
mov
lods
sarb
lds
movsb
fcomps
jnp
stos
es
fiadds
pop
sub
shl
push
adc
and
or
popa
stos
out
les
lcall
add
inc
mov
js
dec
push
sub
loop
stos
aas
pop
inc
lcall
cwtl
pop
xlat
mov
iret
int
lock
mov
dec
rcrb
mov
sahf
jno
into
sarl
inc
push
push
mov
jmp
mov
ds
out
mov
repz
or
adc
repnz
sbb
adc
out
cmp
into
cmp
sbb
sahf
and
pusha
shl
popl
in
pop
mov
mov
addb
jbe
add
add
xchg
push
or
xchg
adcl
inc
movsb
shrb
inc
test
mov
cmp
out
insl
mulb
aaa
adc
cmpsb
sub
pop
popa
mov
mov
lods
and
aas
stc
pop
or
stos
jbe
dec
ret
shll
push
xchg
sub
out
and
xor
fs
fld
lret
mov
sbb
les
pop
add
popf
ret
mov
cmp
or
out
sar
inc
fs
mov
dec
sbb
cmpsb
add
xchg
mov
icebp
add
lcall
mov
pop
cmp
inc
cmp
insl
sub
or
xchg
jbe
jo
std
push
jp
fidivl
int3
xor
pop
add
scas
push
ds
sub
nop
dec
daa
push
adc
test
jno
lods
imul
fldt
lcall
lock
fucomip
mul
xchg
scas
or
daa
aas
je
xlat
push
push
stc
xchg
rsqrtps
repnz
or
or
cmp
shrl
push
dec
dec
mov
jl
mov
push
or
and
inc
stos
aam
aaa
or
inc
ljmp
cmp
gs
scas
lret
lea
int
data16
cmp
jg
mov
jecxz
lcall
jb
jns
dec
sbb
jno
ret
mov
jmp
stos
sub
push
repz
movsl
jl
lock
inc
popa
imul
pusha
mov
sbb
mov
and
and
ljmp
jb
jg
mov
and
sbb
pop
iret
dec
cmpsb
ret
test
int
mov
mov
cmpsl
lds
in
pop
xor
stos
sti
ljmp
mov
dec
pop
jnp
inc
xchg
xor
xchg
int
add
xchg
mov
stc
cmp
jno
jns
mov
jmp
pop
scas
in
jb
popf
pop
inc
add
test
out
cmp
js
les
popl
cmp
test
dec
inc
xchg
cmp
inc
or
xchg
fs
mov
test
sbb
or
lods
xor
lock
push
lods
mov
or
push
stos
ss
scas
popf
mov
test
add
xor
inc
mov
sti
xlat
jmp
sub
ret
jg
xlat
fimull
ljmp
sbb
leave
outsl
shrd
sub
cmp
xchg
pop
adc
sbb
lcall
xchg
insb
dec
xchg
cld
mov
enter
addl
imul
adc
cltd
mov
xlat
sub
dec
ret
lret
push
mov
lods
int3
shlb
out
test
pop
incb
filds
shll
pop
int
rorb
and
mov
cli
sub
ss
dec
popf
xchg
out
cs
xchg
adc
das
pop
jp
out
mov
xlat
inc
xor
aad
outsl
enter
pop
shl
sbb
lret
fisttps
cli
fsubrs
pop
mov
cmp
and
or
xchg
int3
dec
ljmp
icebp
iret
inc
les
mov
add
out
leave
adc
fstl
popa
or
mov
jmp
stc
and
js
jo
std
adc
or
jae
sti
loop
add
jmp
out
xchg
xor
in
and
iret
jno
cwtl
dec
mov
in
push
xor
mov
xchg
ficomps
and
add
jecxz
outsb
mov
movsb
pop
stos
roll
pop
out
addb
ss
out
aam
ficomps
pop
jb
add
sbb
push
jae
inc
or
clc
js
inc
enter
or
cmc
xchg
add
mov
push
fnstenv
lods
dec
ds
je
dec
stos
insb
adc
cli
pop
or
and
sub
lret
jb
stos
jns
sub
adc
or
xor
outsb
cmpsb
add
push
fisubl
call
pushf
dec
arpl
loop
ja
add
bound
mov
shlb
aad
or
pushf
xchg
push
test
xlat
inc
jns
imul
lahf
cmp
mov
push
sbbb
nop
lret
lds
adc
inc
stos
push
daa
mov
pop
mov
pop
lret
lcall
cmp
and
aad
pop
scas
mov
push
dec
pushf
jecxz
jmp
ds
mov
ds
in
sarb
mov
mov
insb
sbbb
cli
cwtl
jns
or
dec
xchg
dec
stos
sub
imul
dec
loopne
icebp
into
enter
mov
xchg
sub
and
bound
add
hlt
jo
cmc
and
jne
xor
adc
mov
or
pop
pushf
rorb
stc
iret
mov
jb
pop
ljmp
pop
fisttps
and
fsts
shl
lcall
test
loopne
roll
int
fs
out
jge
mov
cmpsl
mov
mov
or
ja
sbbb
gs
sbb
out
push
xor
lahf
out
ret
sarl
dec
bound
aaa
mov
adc
xor
fwait
cmp
push
mov
inc
mov
mov
mov
inc
int
push
arpl
or
cmpsl
adc
jnp
mov
ss
fstpl
add
stos
jl
cmp
adc
rol
jbe
or
mov
inc
ss
mov
jno
fstpt
stc
cltd
xor
add
scas
mov
sahf
dec
xlat
push
int
lds
insb
lods
lock
pop
or
jecxz
fs
cmc
adc
xchg
fisttpl
hlt
jbe
push
sbb
and
inc
insb
pop
sbb
lcall
popf
cmp
lods
mov
mov
mov
cmp
sub
call
push
sarl
sbb
push
aaa
aaa
sbb
pop
outsl
pop
cmp
sti
enter
out
mulb
jle
jae
imull
sarb
rolb
mov
stos
and
fs
psrad
add
sub
sub
cmpb
imul
pop
pop
aam
sub
push
iret
mov
cmp
add
jecxz
mov
jnp
mov
bound
adc
xorb
dec
or
mov
in
and
jp
sbb
cmp
subb
cmp
in
pushf
push
lret
fimuls
jo
mov
clc
or
inc
push
lea
in
data16
sbb
cltd
cmpsb
inc
pop
inc
jmp
jp
cmp
iret
scas
test
sub
sub
mov
leave
push
jg
std
ja
jg
dec
dec
and
pushf
pop
mov
divb
ja
fdivp
cmp
jnp
pushf
testb
cmp
mov
adc
push
add
mov
xchg
pusha
rorl
leave
popf
sub
xlat
aam
mov
sub
aaa
and
rcll
lods
mov
xchg
fadds
negl
mov
inc
push
popa
push
aam
ss
std
jl
cs
test
ss
jb
sbb
in
ficompl
jno
mov
fdivrl
gs
sbb
in
lcall
je
into
pushf
sub
or
cmp
cmp
push
loop
jne
test
and
sbb
insb
arpl
fs
ljmp
inc
jo
xchg
jp
test
imul
sbb
dec
pop
mov
je
je
mov
mov
addr16
aam
and
shlb
pop
out
dec
push
mov
push
mov
mov
sub
fsubp
dec
inc
cmp
cmc
lahf
dec
ds
out
out
add
and
out
push
imul
aam
xor
js
ja
dec
sbb
and
dec
stc
dec
lods
ljmp
cwtl
jnp
out
fsubs
push
dec
daa
and
in
mov
lock
xchg
stos
pop
aaa
lods
jae
out
push
in
dec
loope
ds
mov
mov
ret
test
das
adc
jmp
stc
insl
jge
adc
fildl
mov
jbe
push
pop
add
scas
and
int
fwait
mov
inc
add
mov
jg
sbb
jge
movsb
lock
jno
out
das
jno
mov
jl
lcall
push
dec
push
sub
pushf
pop
cmpsb
inc
jae
pop
fistps
mov
test
fisttps
jmp
mov
and
les
inc
rcll
sahf
and
sahf
inc
lock
fs
cmp
or
xor
mov
xchg
les
sub
xor
dec
xor
cmp
jge
cmpsl
test
adc
test
mov
jo
clc
mov
mov
out
repnz
cmpsb
mov
and
jbe
cld
loopne
or
mov
addb
dec
dec
sub
sub
push
outsb
ja
xor
rcr
popf
gs
and
or
jge
push
mov
ja
in
loope
lods
aas
mov
scas
push
lods
mov
loop
outsl
sti
imul
scas
test
push
mov
and
movsl
bound
hlt
mov
lods
cltd
pop
dec
jno
mov
notl
jmp
cmc
mov
outsl
retw
sbb
inc
dec
push
pop
outsb
add
fisttps
lods
mov
mov
jle
xchg
sub
push
mov
aad
mov
out
and
adc
imul
in
mov
cmp
lock
jmp
orl
lods
ret
dec
jns
lods
rorb
fdivrs
mov
jno
mov
lds
sbb
cmp
adc
and
int
into
lods
inc
int3
mov
popa
ja
pop
pop
mov
test
xor
jbe
pushf
fcmovu
adc
push
fcomps
push
loope
mov
cmp
xor
cmpsb
popf
xor
dec
jns
das
mov
jecxz
mov
cmp
divb
inc
fistpll
cwtl
lods
sbb
sahf
scas
xchg
sbb
lock
bound
pushl
mov
iret
dec
mov
pop
cwtl
cmc
mov
add
pop
or
or
sub
sub
jge
scas
fnstcw
lock
adc
sar
or
bound
mov
jae
and
mov
into
sub
lcall
xor
inc
sahf
adc
pushf
sub
in
cmp
adc
mov
xor
test
repnz
cwtl
pop
and
inc
ret
aaa
cmp
lret
push
lds
insl
test
iret
or
push
or
cmp
adc
jb
cmp
rol
mov
ja
enter
out
jmp
xor
movsl
add
inc
adc
pop
insl
mov
push
testl
xchg
push
xor
jbe
dec
mov
mov
push
adc
loop
cmp
popa
jecxz
js
repnz
in
add
pop
mov
mov
fnstcw
xchg
dec
mov
sahf
scas
xchg
lods
dec
shrb
mov
out
maxps
or
xchg
je
inc
adcb
xor
add
adc
in
hlt
adc
add
jb
bound
mov
push
repnz
xor
add
adc
in
hlt
adc
add
jb
bound
pusha
xchg
jp
pop
adcb
loop
rolb
add
in
lock
add
jb
jb
push
lea
nop
enter
repnz
xor
test
xor
fstpl
les
mov
lods
cld
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
add
sub
sbb
mov
push
rorb
mov
jg
or
pop
call
cmp
sub
sbb
or
pop
mov
mov
jg
setne
das
lcall
imul
inc
push
dec
gs
or
push
stc
das
lods
inc
sbbl
lret
incl
mov
dec
stos
inc
mov
adc
hlt
lret
pop
addr16
push
xchg
ret
mov
cmp
inc
jbe
fistpll
xchg
test
cmp
lret
lahf
mov
lcall
mov
lahf
cmp
das
out
add
pop
sub
push
xchg
getsec
mov
pop
lock
fimull
or
add
inc
or
jg
xorb
sbb
cltd
dec
das
and
adc
jo
sbb
jmp
testl
pop
jl
cld
test
dec
xor
adc
pop
xor
cmp
inc
mov
mov
jg
mov
pop
adc
cld
cmp
sahf
xchg
add
addb
mov
mov
outsl
add
das
ficompl
mov
pop
xchg
and
push
ljmp
cld
push
out
aas
out
push
jecxz
xchg
jno
pop
fwait
js
iret
jg
imul
pop
ret
xor
es
push
cld
or
adc
jl
jp
pop
mov
in
insl
lahf
dec
mov
push
pop
mov
stos
outsl
lcall
das
fidivrl
lret
fildll
out
sbb
or
pop
mov
stos
outsl
lcall
das
fidivrl
lret
sbb
inc
mov
lock
iret
add
add
out
ret
mov
cli
inc
dec
mov
xchg
adc
sub
pop
outsb
cwtl
xchg
std
adc
pop
lods
clc
xchg
scas
pop
test
fistps
xchg
cltd
int
jo
shrb
inc
mov
pop
movsb
pusha
pop
cmpsb
iret
push
das
imul
outsb
sbb
add
imul
add
jg
jnp
loop
xor
insb
nop
shll
sub
enter
test
push
mov
rorl
je
lock
mov
jbe
and
mov
xlat
mov
inc
daa
inc
mov
mov
std
mov
lcall
cmp
ds
add
test
push
add
xor
pusha
push
inc
sub
and
and
cmp
jge
push
jmp
repz
ja
outsb
ds
cltd
mov
inc
and
pop
pop
addr16
lcall
xchg
movsb
repz
jns
xchg
mov
jne
imul
cmp
xchg
pop
out
ja
pop
stos
pop
cs
stos
je
xchg
mov
bnd
movsb
roll
mov
jnp
push
sbb
das
push
or
or
int
jmp
loop
mov
jecxz
rorb
pop
in
mov
jecxz
lret
mov
fadds
xor
pop
dec
cmc
adc
dec
inc
sbb
ja
std
or
int3
sbb
insl
push
out
icebp
mov
mov
cwtl
stos
cwtl
adc
xor
scas
cli
lcall
call
lods
or
lods
jl
stos
in
pop
sbb
cs
inc
sbb
push
sbb
nop
push
shrb
rorl
xor
outsl
jno
stc
xlat
iret
loopne
bound
stc
popf
cmp
add
adc
lods
insl
aaa
push
sbb
jno
xor
mov
fildll
popf
aaa
lods
fimuls
cmp
jb
mov
scas
fstpt
outsl
dec
stos
adc
out
fmul
popf
shll
mov
and
cmp
out
ret
ficomps
dec
jmp
mov
lods
test
dec
lahf
jle
subb
pop
adc
scas
inc
ret
loope
cwtl
aas
lds
xor
icebp
call
popf
enter
dec
aam
pusha
cli
inc
push
jmp
mov
mov
adc
jne
mov
sub
movl
xchg
inc
dec
ss
push
ret
cmp
push
mov
jle
jg
jl
inc
pop
mov
stos
ljmp
sti
in
pop
push
test
andb
push
pop
add
dec
test
jb
dec
iret
mov
push
dec
aaa
dec
inc
ss
mov
outsb
ja
jmp
mov
outsb
les
fwait
cmc
data16
xchg
arpl
dec
lcall
xchg
jp
ljmp
xor
inc
add
popa
aaa
lret
das
xor
call
into
leave
add
jp
mov
mul
dec
mov
lods
jle
call
clc
xor
out
push
xchg
sub
jb
sub
jg,pt
dec
sub
inc
mov
sbbb
ds
pop
mov
mov
fs
es
add
in
test
and
lock
inc
inc
pushf
frstor
sbb
cltd
nop
les
jns
rclb
fimuls
mov
dec
into
les
bound
adc
ja
je
add
push
lret
mov
add
or
cmp
mov
xor
sbb
dec
out
mov
popf
or
sbb
pop
and
xchg
sub
pop
xchg
inc
mov
daa
inc
inc
jmp
scas
cs
sub
push
xor
push
mov
adc
lss
mov
punpcklwd
push
or
repnz
loop
cmp
rorl
jns
int
sub
test
jmp
sbb
jmp
inc
pop
daa
mov
stos
out
lea
adc
cmp
idiv
std
test
bnd
lock
test
add
push
aam
pop
jmp
sbb
xchg
xchg
ja
mov
and
inc
mov
subb
jno
and
lock
mov
rclb
mov
daa
push
xor
mov
xchg
mov
or
aam
out
sub
push
and
movsb
add
clc
insb
mov
stc
fsubs
jbe
and
add
int
cmp
mov
imul
xchg
negb
mov
mov
cmp
xchg
jo
aas
xor
sbb
fistpll
sar
sbb
jae
addr16
add
adc
sbb
push
repz
push
arpl
ret
aad
xchg
inc
lcall
mov
popf
sar
je
fildll
addr16
pop
call
adc
icebp
lret
sbb
and
sarl
fucom
cltd
enter
mov
movsl
lods
shll
dec
addr16
adc
lea
pop
mov
jge
push
sbb
lcall
mov
out
into
stc
mov
aam
jmp
xorb
xor
das
shlb
xchg
int
add
clc
outsb
dec
sbb
stc
jbe
andb
jbe
cmp
xchg
jns
xchg
or
das
jmp
jo
into
adc
jns
jnp
andl
mov
inc
push
or
xor
sti
clc
call
sub
inc
mov
push
pop
sub
lret
shll
mov
std
pop
mov
nop
adcl
into
gs
adcl
mov
lcall
dec
xchg
in
mov
aaa
test
xchg
adc
cmp
mov
lds
movsl
pop
imul
push
ljmp
leave
pop
cli
push
push
mov
push
lds
mov
int
mov
lret
arpl
pop
and
xchg
sbb
outsb
sub
and
ljmp
xchg
loope
mov
push
or
cli
stos
mov
cmp
dec
pop
iretw
sahf
insb
push
rcll
lods
leave
xchg
stc
cmp
pop
aaa
pop
mov
pop
lea
mov
pop
inc
inc
fisubs
pop
mov
add
out
push
cltd
movsbl
push
xchg
lret
mov
adc
shrb
repz
pop
xor
cld
faddl
sahf
test
jo
inc
sub
pop
cmp
sbb
test
leave
sub
daa
test
in
lds
xchg
fistpll
xor
push
scas
gs
dec
cmpb
mov
lret
fdivrl
push
cmpsb
lock
mov
clc
insb
pop
jmp
shll
cs
mov
mov
adc
imulb
adc
inc
imul
xchg
push
shrl
add
cmp
lock
addr16
and
and
push
out
test
out
std
dec
xor
push
push
xorl
add
cs
mov
jl
jmp
and
enter
mov
pop
mov
lods
cmc
clc
outsb
sbb
push
and
outsl
inc
xor
adc
sub
inc
rcrl
stos
and
adc
mov
add
add
mov
jle
push
sbb
sub
lods
and
pop
xchg
push
notl
jle
loopne
test
mov
popf
insl
pop
xchg
mov
add
mov
fimuls
aas
or
cli
jge
ljmp
pusha
sbb
mov
sahf
adc
testb
cmp
ss
rolb
push
gs
xchg
int3
xchg
aas
adc
out
mov
xchg
cmp
cwtl
mov
push
shlb
mov
jg
lret
repz
pusha
sub
sahf
test
cmpsb
rorb
cmp
stos
adc
enter
imul
ja
scas
push
std
sub
jecxz
outsb
ret
mov
fistl
bswap
adc
pop
inc
test
mov
cmp
cwtl
mov
xchg
mov
sahf
icebp
adc
mov
inc
lods
les
adc
pop
push
xchg
mov
in
repz
lahf
xor
in
out
sbb
and
ljmp
ret
add
mov
aad
push
adc
sbb
xchg
lods
xlat
mov
ljmp
cld
mov
je
or
jb
jne
mov
mov
jp
cmp
cmpb
sub
std
dec
xchg
add
xchg
stos
mov
mov
fst
fs
mov
cli
daa
test
lahf
jo
orl
dec
push
or
aas
sub
adc
repz
xor
xchg
inc
mov
lcall
ja
jge
sbb
in
daa
into
mov
or
inc
and
cmpsb
mov
jae
notb
dec
ret
shr
push
xchg
fstps
xchg
fwait
addb
add
cwtl
pop
jo
in
push
out
je
xchg
mov
jnp
mov
nop
cmp
call
inc
add
dec
repnz
aas
jne
sbb
add
inc
dec
clc
out
in
scas
rorl
jnp
daa
push
aaa
lret
or
icebp
xchg
mov
lret
loop
cmp
test
jl
out
testl
push
adc
mov
or
flds
and
mov
xchg
push
test
loopne
stc
rcrb
enter
pop
call
mov
jne
inc
stc
add
lock
inc
jbe
dec
subps
pop
popf
jae
es
push
sbb
push
das
daa
dec
pop
or
adc
testl
pushf
les
mov
xlat
inc
std
adc
xchg
inc
sbb
fst
idivb
pop
inc
repnz
aam
or
or
imul
xlat
mov
push
push
dec
jns
jno
sub
push
cld
ds
push
mov
inc
and
push
mov
push
inc
or
and
fldenv
jge
cmp
imull
mov
outsl
mov
sbb
push
inc
insb
in
je
and
std
frstpm(287
push
add
movsl
push
testl
sbb
add
movsb
push
lret
jo
sbb
rcrl
das
jno
mov
pusha
mov
inc
xchg
negb
xchg
mov
dec
shrl
xchg
push
inc
cmp
int3
sub
push
and
rol
push
adc
add
imul
mov
hlt
jl
rcrl
aaa
push
ret
hlt
popf
adc
mov
push
mov
inc
lcall
xor
fwait
xchg
mov
imul
aam
leavew
aam
ja
dec
jno
test
rorl
stos
movsl
lods
clc
stos
out
cmp
fldt
xchg
in
push
or
lcall
or
mov
roll
out
sub
fwait
pop
in
shrb
movsl
stos
mov
add
daa
and
jns
fbstp
enter
push
fwait
mov
mov
cmp
mov
cld
sahf
fs
mov
mov
sub
jbe
clc
pop
std
dec
ss
push
mov
lds
std
sub
test
aad
jmp
mov
testl
mov
lds
and
nop
stos
scas
cwtl
sbb
or
mov
mov
scas
cmp
dec
enter
push
subb
inc
dec
pop
jp
push
jbe
sub
ss
cmp
or
ret
lcall
dec
stc
pop
ds
sbbb
call
mov
int
mov
mov
cmp
nop
push
inc
mov
pop
adc
mulb
dec
xor
aam
sub
sub
or
push
orb
mov
fst
dec
call
jl
outsb
pop
jbe
adc
inc
inc
and
mov
jne
push
out
mov
lcall
aam
pop
das
add
int3
ss
jb
add
sub
dec
out
out
bound
mov
xor
adc
and
inc
push
jmp
fnstsw
mov
lock
outsb
add
mov
lret
cwtl
ss
inc
inc
add
pop
hlt
jae
xor
or
mov
repnz
rcrl
sub
xchg
dec
mov
mov
jmp
call
jle
xor
jge
aas
iret
das
aas
push
fucomip
add
stc
mov
flds
push
mov
jnp
test
add
xor
jmp
mov
pop
int
xchg
icebp
push
call
lds
sub
xchg
outsb
rep
push
inc
inc
xchg
stos
fstl
cmp
mov
stos
sahf
xor
out
jecxz
les
out
pop
stc
jno
cmp
sub
sahf
jle
fildl
cltd
loop
cmc
add
mov
push
jbe
sub
mov
pop
sbb
js
fimull
xchg
fdiv
and
cmp
xor
repnz
data16
mov
adcl
add
dec
or
ftst
cmpsl
sbb
decl
pop
xor
pusha
jge
cmpb
adc
testl
push
jp
jnp
xchg
lea
stos
rcr
mov
add
cltd
mov
addr16
fisttps
adc
inc
idiv
adc
dec
rorb
ljmp
aam
xchg
push
jecxz
mov
mov
fsubl
dec
sti
sub
or
lahf
int3
repnz
xor
mov
mov
mov
dec
dec
aas
push
in
lret
cmpsb
mov
mov
sub
test
fildl
enter
int3
call
sar
nop
in
mov
push
cmp
jmp
daa
cli
adc
insl
adcl
pusha
push
xchg
lret
es
xchg
out
or
stos
add
test
shll
ja
jae
and
lea
mov
lahf
cmp
or
xor
icebp
dec
pop
cmp
fldenv
or
lds
nop
ret
pusha
stos
cmc
cwtl
dec
cmp
mov
jecxz
mov
sbb
jmp
and
loope
sbb
xor
shl
es
js
mov
pavgw
add
xchg
cmp
pop
mov
out
pop
inc
rcl
cld
mov
aam
movsb
rcll
fisubrs
mov
mov
adc
xchg
mov
loope
add
mov
addr16
xor
stos
je
inc
subl
or
sub
scas
rcll
outsb
scas
mov
aas
sbb
out
iret
out
mov
push
push
jle
inc
mov
xor
inc
mov
jno
mov
push
jb
xchg
and
sti
or
aam
cli
or
adc
int3
scas
fwait
mov
add
adc
popf
mov
push
mov
pop
mov
jl
and
cmpsb
lret
mov
es
rcl
mull
arpl
jecxz
inc
out
imul
lock
out
sub
imul
fwait
add
fiadds
push
or
aaa
inc
int
jnp
lods
aas
cmp
lahf
fsubp
push
sbb
lea
pop
sti
into
clc
stos
adc
cli
mov
daa
add
sub
xor
mov
push
out
jno
fsubs
push
jl
stos
mov
jp
jg
and
scas
roll
addr16
push
mov
andl
inc
or
outsl
xchg
push
lahf
xor
sub
popa
cmpsl
loopne
ds
adc
je
inc
imul
sti
dec
test
out
clc
sarb
xchg
repz
pop
negb
js
mov
out
inc
cltd
cmpsb
es
out
pop
sahf
and
test
push
sub
lea
mov
cmpsb
pop
push
jecxz
js
out
ret
idivb
xchg
sbb
xorl
sbbb
jmp
and
loope
cld
sub
push
sbb
shll
and
xlat
or
xorl
pop
lea
jmp
mov
in
incl
dec
mov
cmc
in
ret
sub
subb
pop
stos
xchg
jmp
iret
aad
mov
shlb
mov
dec
jmp
xchg
mov
aas
sbb
hlt
mov
sbb
scas
enter
xchg
shrl
jnp
mov
cwtl
mov
mov
jne
mov
adc
int3
pusha
xor
stos
mov
sbb
add
mov
xchg
push
int
mov
mov
push
push
xchg
push
jno
imul
mov
and
inc
leave
jge
ljmp
push
ret
push
cmpsl
add
xchg
sti
cmp
push
inc
lods
xchg
push
int3
xchg
jnp
arpl
adc
xor
mov
ss
ja
icebp
nop
insb
dec
rcrb
and
mov
enter
mov
push
adc
jle
xchg
popf
std
add
aas
lock
aam
ja
mov
bnd
mov
sarl
je
inc
int
inc
lret
and
xchg
and
jge
jno
ficoml
out
pop
in
push
and
mov
outsl
test
xor
pop
es
inc
xor
call
repz
xor
and
xor
mov
and
jmp
adc
cld
push
mov
push
stos
int3
cs
icebp
mov
cmp
and
into
pop
push
in
dec
jbe
mov
or
xchg
inc
mov
cli
adc
mov
ja
mov
xchg
lods
xor
mov
xchg
add
cmp
repz
decl
push
jle
gs
inc
sbb
ds
lret
movsl
inc
xor
rolb
out
fcompl
sbb
and
add
in
cli
lods
sbb
sub
cmp
jecxz
daa
daa
sbb
je
mov
sti
inc
into
xchg
leave
push
scas
sbb
dec
xchg
add
int3
popf
int
xchg
es
icebp
lods
ljmp
ljmp
daa
repnz
popf
popa
xchg
mov
or
cli
rol
push
int3
fucomip
repnz
test
repnz
jb
js
push
inc
inc
sbb
cmp
ss
aam
jp
jp
inc
clc
or
out
xchg
sbb
cmc
pop
push
xor
push
push
jle
addl
jg
sbb
test
mov
push
rol
mov
inc
int
test
jb
xchg
and
mov
nop
scas
test
fdivrl
cmp
inc
out
je
fs
sub
je
call
sbb
push
adc
sbb
lods
ds
mov
and
fnstenv
mov
data16
xchg
inc
in
data16
stos
add
testb
xchg
xchg
add
icebp
fs
aas
push
jecxz
ja
das
fstl
cmp
adc
mov
lret
stos
cmp
sbb
push
dec
out
inc
stos
out
out
fbld
pop
ss
push
xor
pop
mov
out
fisttps
jmp
stos
out
aaa
les
jns
or
insb
scas
add
adc
sti
iret
in
mov
fsts
dec
mov
adc
cli
xor
mov
out
and
push
fs
pop
vshufps
fcmovne
jnp
aad
push
loope
cmpl
test
xor
nop
jns
repnz
rcll
cltd
mov
in
iret
fildl
and
sbbl
sub
dec
mov
mov
loop
lea
xchg
fstp
mov
jecxz
test
sarl
dec
jae
fsubs
arpl
mov
and
pmaddwd
lcall
and
or
add
xor
push
sub
cmc
call
pop
adc
and
push
outsb
in
pop
ret
mov
stos
loop
mov
stos
push
jmp
pop
jnp
jg
dec
test
mov
push
mov
xchg
add
outsb
and
mov
inc
aad
pavgw
sub
cmp
sbb
inc
dec
add
inc
imul
dec
shrb
adc
lret
push
cmp
aaa
pusha
xchg
stc
frstor
mov
rorb
push
jne
xchg
xor
mov
pusha
leave
shrb
enter
push
dec
jg
sbb
hlt
mov
dec
int3
pop
repz
insb
in
fcmovnbe
push
jecxz
dec
sub
mov
sbb
fstl
in
stos
mov
mov
and
in
mov
pcmpgtw
outsb
hlt
or
out
adcl
lds
dec
or
nop
push
clc
adc
popf
aad
int
add
jae
out
ds
cmp
das
cmp
mov
inc
pop
xor
push
mov
cmpb
in
and
ret
hlt
mov
inc
add
xchg
rol
adc
xor
mov
jp
push
pop
mov
stos
outsl
lcall
das
fidivrl
lret
fildll
out
sbb
or
pop
mov
stos
outsl
lcall
das
fidivrl
lret
fsubl
decl
mov
ret
mov
stos
lcallw
push
ljmp
repz
xlat
or
fidivrl
dec
dec
inc
mov
std
js
xchg
adc
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ror
rcr
in
loopne
and
out
inc
lea
pop
jo
pusha
jge
or
and
lock
loopne
nop
lea
lds
inc
pop
jo
outsb
jge
popa
xor
leave
int
fucomp
in
clc
std
mov
mov
jle
pop
sbb
pop
outsl
dec
insb
inc
ja
mov
test
cwtl
jno
addr16
scas
mov
add
call
sahf
aas
push
mov
sbbb
movsl
xor
mov
inc
or
fildll
cmp
add
add
cmp
call
dec
xor
sub
xor
sar
cmp
les
dec
mov
mov
out
or
and
mov
add
add
push
popf
push
mov
adc
nop
jns
pop
add
cmp
push
mov
pop
mov
inc
movsl
test
scas
pop
int
or
or
and
sbb
lock
loopne
xchg
mov
pop
push
or
and
movsl
pushf
xchg
in
xchg
std
jecxz
out
std
jmp
jmp
add
add
adc
js
push
dec
jae
test
mov
cld
loope
shll
push
and
sbb
arpl
inc
jnp
push
mov
lods
xchg
pushf
lahf
mov
mov
mov
pop
jo
pusha
jge
or
and
lock
loopne
nop
lea
mov
jo
pusha
jge
or
and
dec
add
jb
and
jno
add
pushf
sub
push
lahf
js
dec
iret
ds
addr16
sbb
push
stos
push
repnz
dec
int
and
fs
aaa
repnz
xlat
out
das
cmc
mov
jno
jmp
mov
in
jp
push
xchg
sbb
mov
daa
aad
pop
lods
cltd
stc
dec
imul
jne
sahf
cmp
add
sbb
jnp
sbb
out
sahf
adc
or
pop
aam
stc
push
push
int3
adc
dec
adc
aam
cltd
aad
dec
repnz
addr16
int3
jae
adc
lret
es
push
pop
mov
jae
cmovne
or
adc
adc
int3
and
repnz
adc
pop
js
jle
movsl
xchg
add
jp
imul
jg
sub
mov
jecxz
mov
jns
dec
inc
cmp
inc
mov
cmp
jg
jmp
stc
shrb
call
int3
mov
cmp
aas
xchg
add
push
xchg
jle
jne
jo
sub
adc
cmpsl
jno
dec
or
fdivrs
add
jecxz
arpl
sti
iret
mov
adc
jne,pt
movl
dec
pop
dec
in
icebp
dec
push
mov
push
pop
ja
daa
pop
or
mov
xchg
mov
xor
in
rcr
popa
dec
xor
lds
push
dec
add
loopne
xor
cs
pop
imul
rolb
pop
push
jnp
fsts
cmp
gs
lret
inc
das
push
sub
pop
mov
rcrb
cmp
push
pop
adc
jns
pop
popa
loopne
lcall
sbb
lret
push
mov
inc
add
jno
sub
lret
filds
xchg
adc
stc
mov
cmc
in
xor
mov
push
int3
addr16
jge
lret
pop
xchg
es
mov
cltd
bound
push
mov
mov
hlt
nop
lret
movsl
icebp
jo
lahf
cmc
jle
mov
repz
test
push
in
aas
push
stos
push
ret
dec
sub
jns
xor
rcrl
and
adc
dec
or
mov
jae
nop
cmp
add
push
lock
cltd
cmp
pop
loop
xor
push
mov
cmp
dec
enter
fsub
outsl
cli
sub
xor
mov
scas
and
jns
dec
mov
xor
pushf
cmpsl
jge
dec
sbb
fs
shl
mov
into
xchg
cmp
add
lret
iret
xor
add
popf
mov
push
sbb
jne
xchg
sub
cmpsb
enter
pop
mov
out
pop
rorb
mov
mov
lods
clc
movsb
xchg
and
int3
mov
sti
lret
in
fchs
push
and
xchg
push
hlt
push
mov
aas
jbe
xor
push
sbb
fmul
pusha
dec
xchg
cmp
scas
xor
ret
inc
adc
add
stc
xor
sbb
fwait
lea
adc
cld
dec
push
xchg
sub
inc
js
shlb
mov
mov
xor
push
push
mov
sub
inc
and
jnp
loop
pop
mov
es
sub
add
xor
repz
inc
lea
mov
mov
xchg
inc
push
mov
aaa
ret
xor
rcrb
mov
stc
lret
or
nop
test
mov
sub
add
pop
fwait
and
jne
xchg
cmpsb
inc
cmp
icebp
adc
jno
lods
pop
cmp
or
lods
mov
and
push
cmp
xchg
loop
lods
mov
mov
loop
add
or
addr16
std
iret
adc
cli
pop
mov
shll
leave
push
adc
pop
lea
inc
xor
fisttpl
xchg
jbe
and
mov
push
jno
sub
xchg
mov
or
or
mov
jns
jns
dec
hlt
pop
or
push
dec
mov
rorb
testb
and
in
jl
nop
lahf
jns
sub
les
sahf
or
outsb
push
int
jbe
cli
inc
fcompl
jae
out
out
cmc
mov
mov
dec
gs
inc
and
inc
push
mov
pushf
lock
xchg
inc
loope
cmc
inc
add
sti
jle
xchg
dec
mov
jne
push
ljmp
aad
in
std
std
mov
mov
and
jo
cltd
push
lock
dec
pop
mov
adc
or
xchg
dec
adcl
aam
sub
or
push
mov
pop
imul
adcb
das
cmp
lret
dec
mov
xchg
push
adc
sbb
movl
scas
xor
in
stos
fdivr
add
pop
insb
cwtl
test
and
pushf
cmp
mov
les
pop
push
addr16
test
ljmp
inc
ret
popa
rclb
mov
jp
addr16
mov
popa
stos
clc
sub
mov
adc
mov
es
test
jg
pop
and
adcb
cmpl
movsb
cmpsl
repnz
int
pop
rorl
ss
xor
out
test
xchg
sub
pop
sub
rcrl
fistl
sbb
lret
stos
movsb
inc
ret
out
mov
and
add
movd
je
scas
xor
lret
jg
aam
add
sub
xor
add
add
loope
in
fildl
dec
shlb
mov
xor
cltd
sub
lods
es
lahf
jae
int
sub
push
divl
pop
inc
dec
jecxz
repnz
xor
and
aad
mov
mov
cmpsl
and
into
lret
scas
mov
push
dec
test
aas
cmovp
cmovl
xor
mov
scas
dec
ljmp
mov
daa
inc
pop
mov
jns
icebp
addr16
xor
movsl
shl
repnz
pop
and
sub
xlat
outsb
push
mov
popf
ss
mov
push
ja
cmp
mov
xchg
test
add
or
pop
ret
daa
adc
xchg
sti
test
xchg
shrb
rcrb
xlat
mov
xor
xor
or
pushf
jnp
ret
and
and
test
mov
sub
in
add
shll
cmc
ljmp
jbe
int3
in
jle
lret
xor
push
sti
jg,pn
xchg
lret
shld
test
or
scas
pop
xchg
idiv
out
push
daa
shll
add
jle
lea
cmpsb
mov
xchg
into
and
in
cmp
sub
pop
ss
rcrb
xor
aam
repz
mov
jns
icebp
insl
push
push
lret
dec
push
xor
pop
push
lcall
call
fildll
jmp
rolb
mov
adc
cltd
and
mov
xchg
hlt
push
insl
mov
incb
in
inc
fdivl
sub
frstor
repz
cmpsb
xchg
test
mov
nop
push
cmp
ret
add
popf
mov
mov
adc
mov
and
bound
mov
cld
mov
lcall
std
cs
push
mov
and
mov
gs
pop
pop
fs
xor
and
outsl
lods
xor
xchg
outsl
push
push
mov
dec
xor
loop
neg
pop
xchg
adc
or
test
jl
adc
mov
xchg
jbe
cld
outsb
and
sub
out
sub
xor
push
dec
imul
and
std
inc
inc
out
xor
adc
sbb
adc
mov
repnz
sub
jns
sbb
les
sub
loopne
call
jae
mov
js
cs
dec
xchg
or
push
sti
aaa
mov
sub
mov
push
stos
sub
push
lahf
jbe
mov
loop
lods
or
cmp
mov
push
rcl
test
jo
loope
call
nop
mov
pop
test
xorl
sub
sahf
call
jnp
cmpsb
rorb
call
psraw
push
ret
sub
xchg
scas
push
dec
xor
ror
push
mov
insl
repnz
or
adc
push
pushf
dec
out
mov
mov
lods
adc
sbb
les
fstpt
dec
dec
dec
rcrl
mov
and
push
out
lret
sbb
xchg
addr16
repnz
sub
mov
pop
sub
mov
out
xchg
mov
mov
jnp
xlat
test
repz
push
enter
pop
fistpl
leave
or
les
leave
mov
xchg
pop
adcb
arpl
cmp
mov
sub
push
subl
fsts
mov
mov
push
fnstenv
test
rcrb
lock
jno
jae
jnp
push
popf
add
sti
cmp
out
xor
inc
or
daa
dec
xlat
sbb
nop
test
scas
popa
mov
xor
popf
imul
dec
test
rcrl
adc
stos
push
xchg
repnz
scas
ja
scas
sbb
sub
cmc
ret
bound
aad
jl
add
jns
xchg
mov
xchg
aas
push
mov
jmp
inc
out
rorl
pop
mov
enter
inc
cmp
loope
mov
xchg
push
fucomi
jmp
sbb
push
sbb
mov
dec
scas
sarb
enter
cli
cmp
or
jle
pop
loopne
cmpsb
push
jg
xchg
xor
les
incb
adc
fidivs
push
mov
push
int
das
pop
or
xor
dec
rcrb
sub
mov
mov
in
sub
add
sub
bound
cmp
fwait
int3
dec
adc
cmp
inc
dec
mov
ret
push
test
out
push
inc
lcall
iret
push
test
pop
icebp
mov
mov
shrl
pop
mov
dec
push
ret
mov
loope
rcll
mov
js
cwtl
jl
sahf
cwtl
dec
push
adc
dec
lods
jne
add
mov
sbb
rcrb
in
mov
mov
out
movsb
fdivs
push
inc
rolb
jb
in
pop
or
sbb
mov
dec
mov
xor
lea
xchg
inc
inc
dec
orb
fdivrl
sti
xchg
sbb
mov
xlat
and
xor
and
shll
bnd
jg
es
sbb
cmp
rcrl
fldt
rcll
mov
sub
sub
mov
pop
mov
pushf
xor
ds
pushf
insb
mov
dec
outsl
cmpsb
dec
gs
mov
mov
std
lret
call
push
dec
inc
add
add
sahf
jge
mov
xchg
jae
push
je
mov
jge
bound
push
xchg
jo
fimuls
push
xchg
mov
push
pusha
movsl
mov
in
mov
insb
ljmp
and
mov
lods
rcll
fists
es
aas
and
sbb
adc
jl
xchg
js
imul
push
jno
data16
ljmp
inc
pushf
nop
repz
test
loopne
cmpsb
dec
lds
fdivrl
adc
loope
jl
pop
xlat
push
or
pop
cmp
adcb
mov
mov
xor
js
pop
test
rcrl
pop
jbe
mov
mov
loope
aaa
cmp
filds
loop
lock
fdivs
mov
fstps
pop
mov
adc
test
daa
in
jl
ds
inc
mov
fisttpll
repnz
sti
mov
icebp
push
xor
les
mov
push
dec
rorb
scas
clc
sub
movsb
lret
hlt
push
sbb
inc
daa
aaa
mov
dec
cwtl
pop
sub
mov
in
push
stc
sub
adc
push
pushf
test
stos
inc
ljmp
scas
push
xor
ds
cmp
insb
pop
dec
fistl
push
mov
bound
pop
shrl
fwait
call
mov
mov
mov
outsb
popf
xor
jbe
cmpsb
mov
adc
std
mov
adc
sub
sbb
mov
lret
push
int
adc
sub
sbb
cmp
push
pushf
call
movsb
sub
sbb
jl
in
pop
lods
fsubrs
lds
js
dec
ret
cmc
sti
nop
and
loop
cmp
push
sbb
scas
jp
push
push
sbb
pop
fildll
es
add
dec
xchg
jp
addb
xor
and
cmpsl
sarl
sub
in
adc
mov
sti
shrl
mov
filds
sarl
add
cs
mov
ljmp
loope
pop
push
mov
aas
negb
jle
xchg
push
and
mov
mov
loope
call
push
mov
gs
ja
adc
and
push
mov
jns
lret
mov
jne
inc
mov
or
cli
je
insl
sahf
outsb
dec
rclb
arpl
and
or
and
mov
push
jo
test
sarl
enter
repz
pop
xor
imul
dec
fwait
mov
scas
test
fwait
iret
jmp
and
in
mov
std
cmpsb
bsf
pop
arpl
dec
xor
movsl
bound
insb
int3
sbb
sbb
dec
ficoms
mov
scas
pop
push
xor
dec
lds
dec
mov
dec
fwait
push
or
mov
insl
push
xor
je
xchg
xor
ret
aas
jle
sbb
add
xlat
sbb
insl
sub
lahf
and
adc
and
add
cltd
data16
addl
outsl
cmp
or
les
shrl
sub
test
popf
mov
xchg
cmp
inc
jb
mov
cmp
sarl
ds
cmp
adc
mov
lods
adc
sub
ss
adc
imul
mov
in
push
pop
jg
call
pop
adc
cld
adc
inc
mov
mov
icebp
mov
inc
pop
jg
cmp
rcl
bound
rcll
outsb
push
daa
sti
jne
sub
test
pusha
xchg
cmp
xchg
in
insl
imul
or
xchg
fucomip
repnz
inc
popa
pop
pop
es
and
pop
mov
xor
dec
jp
adc
out
outsl
mov
leave
andl
jle
cmp
xchg
xchg
divl
jb
adc
icebp
push
pusha
xor
push
jne
xchg
test
les
movb
insb
mov
in
ljmp
in
mov
mov
mov
xor
in
adcl
jp
in
cmp
mov
jg
mov
push
dec
popf
cmp
int
xchg
pop
mov
insb
lea
cld
push
out
fdivrp
jb
xchg
inc
ds
mov
or
insl
adc
push
aad
cmp
sub
pop
data16
stos
pop
mov
repz
test
mov
push
jns
enter
ret
mov
mov
jb
aam
insb
and
mov
int
lods
and
pop
sub
jg
fistps
cmp
jb
rcrb
or
mov
push
dec
add
pop
int3
nop
leave
aad
scas
add
mov
mov
dec
lcall
dec
idivb
mov
scas
mov
mov
xchg
xor
shl
daa
cltd
enter
clc
jno
jecxz
xor
popf
dec
les
out
sbb
sub
stc
jmp
inc
xor
push
in
dec
outsl
inc
mov
and
adc
mov
xchg
scas
fldcw
daa
jecxz
dec
into
push
in
shrb
das
adc
mov
and
and
sbb
sti
pop
pusha
sbb
mov
subl
pop
pop
add
movsl
cmp
shrb
mov
roll
cmp
push
sbb
lock
xchg
insl
mov
and
and
mov
dec
divb
je
cltd
test
fisubl
mov
push
inc
scas
arpl
out
test
pop
jns
subb
pop
adc
loop
adc
or
lcall
sbb
shlb
out
loop
sbb
jo
mov
and
test
jl
clc
repnz
xchg
adc
push
lock
cmp
std
ret
xchg
fs
or
cmp
cli
sub
jp
jno
add
aad
add
hlt
pushl
cs
popa
fidivl
dec
mov
push
push
pop
cmp
sub
xor
mov
xchg
scas
mov
decl
fsubrs
movb
fsubrl
outsb
xchg
stc
mov
mov
lret
add
dec
and
pushl
sub
stc
xchg
icebp
test
dec
mov
sub
sub
adc
in
mov
test
jae
addr16
std
xchg
add
enter
out
xor
pop
orl
aam
adc
or
inc
xor
filds
outsb
inc
ret
fcomps
fists
in
insb
out
and
push
mov
sahf
aad
call
dec
rolb
movsl
pop
jns
test
xor
jp
fs
inc
imul
popf
pop
pop
imul
mov
push
push
add
cmp
pop
enter
mov
add
lods
adc
fmull
lock
pop
jb
mov
jae
loopne
xchg
mov
mov
fs
lods
aas
fisubrl
shrb
mov
lea
pop
jge
mov
sti
test
xor
popa
adc
mov
data16
cs
icebp
adc
test
sbb
repnz
mov
ret
ljmp
xchg
push
jo
sti
xor
or
lcall
dec
cs
jmp
cmpsb
shl
cltd
hlt
out
addb
jmp
xor
push
dec
bound
pop
inc
aad
loopne
movsl
push
and
iret
fsubs
cmp
fidivrl
shll
fimull
mov
xor
fdivrl
imul
and
jae
xchg
xor
test
jecxz
cwtl
xchg
fmuls
out
xor
pop
or
mov
adcb
stc
lcall
scas
rcrb
and
add
add
adc
out
cmpsb
stc
lods
gs
jnp
adc
and
adc
fidivs
pop
scas
mov
in
test
cmp
xchg
sbb
xchg
push
ljmp
dec
or
or
push
or
mov
xchg
mov
out
and
and
sub
mov
and
sub
inc
mov
mov
pop
adc
ds
loopne
xchg
adc
push
es
call
jecxz
mov
fdivs
arpl
xor
cmc
stos
sub
mov
nop
lods
xchg
pop
cltd
outsb
or
cs
daa
movsb
and
popf
push
push
fisttpl
test
mov
mov
stos
cmpsb
inc
ret
insb
add
mov
xchg
insl
sbb
push
lods
je
adcl
sub
rorb
and
lods
inc
cmp
sub
test
xchg
mov
movsb
repz
ljmp
pop
lods
or
pop
stos
xorl
mov
iret
js
jg
mov
ja
nop
out
push
inc
jae
xchg
in
jb
add
jmp
cmp
je
dec
or
fisubrl
sar
add
mov
into
mov
dec
mov
xor
popf
xor
gs
mov
outsb
cmp
cld
imul
and
movsl
nop
fiadds
sbb
test
adc
es
sbb
in
fistpll
int3
sahf
push
mov
rcl
je
pop
pop
push
inc
mov
loope
out
sbbb
das
test
call
leave
mov
mov
pop
jae
shlb
int
popf
out
int
jp
sub
mov
push
fsubrl
fnstenv
loope
subl
ss
imul
inc
push
push
movsb
cwtl
jmp
shrb
inc
ljmp
lret
sub
sbb
dec
cwtl
out
xlat
test
cmp
push
sbbb
mov
stos
adc
dec
fcoms
inc
lret
fsubrl
add
lock
mov
dec
sahf
adc
sbb
and
fldt
je
fbld
arpl
mov
and
outsl
or
test
imul
jae
mov
push
out
pop
outsl
movsl
ret
dec
push
or
rorl
pop
pop
sub
imul
push
mov
lret
mov
add
mov
cmp
out
repnz
jmp
pusha
mov
fsubrp
xlat
mov
lret
dec
int
cli
fdivrl
xor
or
cli
in
loopne
nop
lea
mov
jo
pusha
jge
or
and
lock
loopne
nop
lea
mov
jo
pusha
jge
or
and
lock
loopne
nop
lea
mov
jo
pusha
jge
or
and
icebp
in
loopne
xchg
lea
mov
fisubrl
or
mov
iret
rcr
ret
mov
adcb
jmp
jns
add
lds
loope
les
shlb
jo
inc
nop
push
andb
nop
inc
loopne
lock
adc
je
cld
xor
add
adc
pusha
ret
inc
nop
push
andb
nop
pop
loopne
lock
or
sbb
lock
jo
jne
pusha
incl
aam
loop
out
aam
rcll
xorb
loope
repz
out
call
aam
ret
in
dec
sti
sub
jo
ljmp
lock
cmp
pushf
bsr
incb
jo
push
pusha
add
in
fimull
ljmp
or
and
loopne
mov
sti
sbb
nop
push
lds
scas
xchg
adc
rolb
loope
out
dec
xor
nop
repz
xor
xor
lock
sbb
and
pop
lea
fwait
jns
mov
mov
ret
push
add
mov
mov
rclb
jne
lock
jp
test
push
xchg
mov
orb
loopne
lock
adc
sbb
lock
add
adc
pusha
test
mov
lds
adc
xor
lahf
inc
scas
jl
gs
lahf
push
loopne
aam
movsl
out
xor
sbb
or
and
das
test
mov
xor
push
test
adc
xchg
rclb
jo
pusha
xor
add
rclb
add
lock
add
adc
pusha
mov
mov
mov
push
nop
inc
loopne
lock
adc
add
lock
add
adc
pusha
mov
mov
mov
xlat
out
inc
xor
dec
pop
xchg
imul
xchg
dec
inc
inc
arpl
jmp
or
lods
hlt
and
sub
aad
pop
dec
add
mov
fdivrs
lret
xor
gs
inc
shl
fisubs
push
add
pushf
stc
fwait
adc
push
add
aaa
mov
fadds
loopne
push
hlt
leave
or
test
aad
loope
pop
call
mov
mov
inc
mov
lods
mov
sub
xchg
pminub
movsl
fistl
cltd
testl
jno
xor
pop
int
orl
xchg
int3
out
mov
clc
and
cld
xchg
cwtl
dec
xor
fbld
mov
scas
mov
cmpsl
jl
imul
xor
xchg
mov
adc
pop
pop
lcall
sbb
movsl
mov
push
bound
sbb
or
xor
test
aad
ffree
jae
inc
add
ljmp
int
mov
push
or
leave
int3
insl
xor
mov
test
mov
insl
jbe
repnz
dec
in
xor
aad
hlt
aas
cli
in
das
cwtl
pop
push
lock
movb
rcl
mov
shrb
cmp
push
mov
int
dec
mov
mov
and
dec
aaa
imul
aam
add
outsb
mov
std
nop
movsl
mov
jae
aam
adc
jbe
insb
mov
xchg
cmpsb
add
clc
push
in
mov
jp
out
popa
push
jle
adc
f2xm1
and
ljmp
xor
repnz
insl
cmp
dec
push
clc
test
out
cmp
adc
out
sarb
mov
jle
aas
lds
or
outsl
sbb
sahf
das
dec
leave
shlb
imul
lock
aas
adc
adc
or
into
ss
sbb
jle
dec
into
jle
fstps
fisubs
pushl
mov
mov
push
fisttpll
imull
add
fwait
pop
or
xor
or
push
mov
test
andb
js
ss
pushf
dec
sarb
mov
dec
es
in
lret
jge
lds
out
and
fnstsw
sub
jmp
add
push
lret
rcl
mov
lods
fldt
pop
in
movsb
sahf
clc
jo
out
adc
addr16
dec
aas
test
adc
push
shll
stos
pop
push
push
sbb
into
scas
imul
ss
mov
insl
xchg
sahf
jl
outsl
in
pusha
mov
push
lds
scas
cld
in
mov
cmp
cmp
fisttpll
xchg
mov
daa
sbb
out
std
lods
mov
sbb
addr16
popa
nop
lds
addr16
in
push
in
aaa
and
pop
and
add
lret
lcall
int
mov
repnz
cli
rcl
fadds
and
fcomp
pop
adc
lret
mov
andb
repz
xchg
sbb
shlb
mov
scas
sbb
xchg
andb
scas
fidivrs
cmp
sti
and
sarb
jg
jae
push
out
xor
cmp
adc
addb
outsl
lcall
je
lcall
fisubl
shll
and
xchg
adc
in
loope
mov
pop
push
dec
leave
cmp
dec
je
rorb
lcall
insw
adc
xor
dec
mov
negl
cmc
mov
pop
imul
or
test
rcrl
cmp
jnp
les
stos
xchg
or
xor
mov
jo
imul
or
and
cmc
faddp
mov
jp
bound
fsub
lahf
repz
lret
shlb
add
fisubrs
sbb
inc
shlb
mov
mov
push
inc
fisubl
push
jne
inc
mov
sbb
fs
xchg
xor
lock
cmp
in
in
mov
mov
push
divb
inc
xor
mov
xor
mov
repz
es
add
cltd
out
mov
dec
fcmovb
lret
fists
outsl
and
lock
pop
ds
inc
pop
cli
ret
call
dec
arpl
jb
cmp
in
cmp
jl
pop
loopne
loop
pop
stos
and
xchg
mov
xor
sub
icebp
lret
insb
test
push
divb
mov
mov
adc
jae
dec
gs
out
mov
into
mov
push
ja
subl
mov
rcrb
icebp
lret
rolb
mov
insb
cmp
push
mov
cmp
push
dec
xchg
cmp
xchg
mov
popf
ret
sub
lods
setae
ja
aaa
push
addb
lahf
leave
ret
jmp
jp
js
pop
aam
mov
ljmp
add
call
sbb
cmp
cmp
ljmp
or
sub
lahf
icebp
out
in
pop
testb
push
sbb
lret
loope
or
inc
insl
xchg
fwait
pop
inc
xlat
add
inc
inc
imul
icebp
nop
mov
and
int
es
sub
nop
adc
jb
mov
xchg
add
loope
fsubl
addr16
push
pop
outsl
push
push
xchg
loopne
das
stos
dec
inc
sbb
dec
aaa
decb
xchg
xchg
int3
hlt
sbb
aam
lods
sarl
mov
push
bnd
dec
pop
xlat
out
fimuls
mov
jmp
mov
cmp
mov
stc
pushf
std
xor
test
sub
xor
fs
add
mov
jbe
mov
cmp
aam
cs
mov
insb
sbb
jge
xor
pop
cmp
out
dec
shr
stos
fnstcw
scas
les
lods
adc
shll
fists
jns
mov
jecxz
pop
mov
hlt
aas
xchg
push
test
mull
mov
push
adc
add
mov
popa
fsubl
int3
push
mov
and
pop
test
loope
ret
xor
adc
jl
add
xchg
pushl
fwait
ja,pn
xchg
insb
mov
mov
pop
ljmp
outsb
cmp
sahf
sti
dec
xchg
mov
adc
sbb
fmull
xchg
or
cmp
std
fldl
xor
cmp
mov
lods
inc
ret
les
popa
stc
mov
aas
jge
sbb
movsb
int
and
mov
rcr
push
mov
stos
cmp
popa
cwtl
out
addr16
les
xor
adc
shr
mov
ds
mov
push
shll
and
adc
xchg
ds
sbb
push
orl
jns
jnp
arpl
add
fbld
negl
push
pop
ret
jp
or
inc
ljmp
mov
int
fimuls
lock
daa
xor
jmp
add
cmp
aad
addr16
add
dec
pop
pop
daa
sub
xor
sarb
lock
icebp
int3
and
inc
mov
orb
cmp
xchg
jecxz
xorb
loope
sub
mov
lock
into
sub
push
push
call
mov
pop
pop
add
jmp
sub
pop
push
sbb
test
mov
jno
dec
pop
scas
test
adc
adc
mov
xchg
push
loope
rcrb
aaa
pop
inc
sub
push
fs
mov
push
iret
loop
jecxz
xchg
stc
out
aam
mov
aad
add
dec
jg
xchg
push
adc
adcl
pop
mov
mov
or
jecxz
dec
mov
mov
push
add
and
ljmp
add
sahf
jb
stos
push
cmpsb
insl
lret
push
ficoms
ss
jb
pusha
jmp
add
lcall
dec
cld
cmp
into
sbb
add
inc
push
loopne
add
mov
jns
sbb
jl
push
add
fdivs
push
lcall
nop
pop
fildl
je
lret
jns
insl
push
sti
sti
add
cmp
cmp
pop
aaa
pop
mov
cmp
inc
addr16
cmc
add
outsl
cmpsb
or
mov
mov
add
leave
cltd
cs
das
inc
xchg
xchg
add
shll
pop
lock
inc
ficoms
jnp
out
jne
pop
inc
fstpl
dec
mov
sbb
loopne
sub
mov
imul
dec
testl
loope
int
stos
int3
mov
push
cli
aam
dec
lret
ret
enter
call
ss
jle
inc
and
push
fcomi
pop
shl
or
inc
dec
xchg
xor
cmp
jne
mov
in
mov
subl
push
pop
mov
mov
ja
loope
pop
pop
xchg
cmp
xchg
adc
and
and
add
inc
and
add
dec
stos
js
mov
movsb
jns
das
and
sti
in
mov
sub
mov
adc
sub
add
movsl
das
or
dec
out
inc
xchg
int3
jp
loop
push
sub
ret
loopne
or
sub
xor
xor
aaa
jmp
sub
ja
ljmp
in
mov
mov
add
mov
lcall
pop
addb
stc
jmp
mov
dec
adc
lret
cmp
or
data16
mov
mov
ja
dec
push
cld
inc
and
das
dec
add
cs
xchg
sarl
std
idivl
xchg
xor
inc
in
fisubrs
inc
jbe
adc
and
sti
movsl
mov
lcall
xor
cs
imul
adc
dec
xor
scas
lret
sbb
inc
lds
sahf
movsl
push
pop
daa
into
bound
mov
mov
ljmp
sbb
mov
andl
imul
cmp
push
or
decb
out
fidivs
repz
testl
mov
xchg
movsl
loope
adc
lods
hlt
mov
mov
push
das
xchg
cwtl
jp
mov
pop
loopne
xchg
aas
sub
in
fs
adc
adc
cwtl
fadd
jns
push
shlb
jmp
sbb
pop
cli
inc
push
mov
inc
cmp
enter
mov
mov
xchg
sbb
and
decl
mov
adc
push
xchg
fneni(8087
mov
xchg
fwait
dec
or
mov
and
int3
mov
jo
insb
add
sar
jns
mov
xor
jmp
aad
xchg
mov
sbb
xchg
inc
repz
cmc
jbe
cli
leave
or
sahf
cmp
movsb
push
adc
inc
xchg
mov
jecxz
mov
stc
pop
sbb
pusha
add
pop
inc
out
adc
repnz
int3
jnp
outsb
push
mov
je
or
xor
dec
sbb
mul
push
xchg
pop
mov
xchg
nop
push
mov
push
xchg
lods
pop
subl
divl
inc
xor
push
adc
in
xor
mov
imul
aad
push
xchg
inc
cltd
mov
and
fs
loopne
lret
gs
in
lahf
imull
popf
sbb
fcompp
test
ja
test
repnz
mov
sahf
push
cmp
sub
pusha
and
int
xchg
stc
mov
iret
fistpll
mov
roll
lock
mov
xchg
fst
pop
adc
loop
jno
das
icebp
or
adc
repnz
mov
dec
push
cmpsb
mov
outsb
pop
cwtl
sbb
xlat
pop
subb
jmp
jmp
cmc
mov
movsb
mov
int
iret
push
ss
jb
or
push
std
and
rcll
ret
jno
mov
push
cmpsb
jne
cmp
inc
mov
cmp
sub
cmp
xchg
push
test
mov
add
sbbb
push
inc
or
scas
pop
ja
lea
mov
jns
add
lcall
mov
jp
jl
push
cmp
or
ret
repnz
in
jne
push
aaa
fcompl
xlat
mov
decl
jecxz
mov
cmp
add
std
fdivrl
popa
loope
js
push
shlb
cmp
sub
xchg
dec
or
cmc
jns
mov
jp
dec
loope
sbb
aaa
cmpb
adc
lods
add
cmp
int
fisttpll
inc
add
add
or
filds
push
ja
loopne
popa
mov
lcall
jnp
sbb
scas
dec
mov
jg
push
test
push
mov
dec
dec
fcoms
fldl
aaa
fcoml
mov
icebp
das
cmp
pop
xchg
int3
rcl
cmp
push
mov
mov
fs
movsl
push
ret
mov
jp
int
adcl
mov
cmc
adc
mov
outsb
cmc
popf
pop
dec
iret
cltd
dec
imul
test
stc
or
sub
xor
jno
dec
in
adc
adc
stos
outsb
in
xchg
mov
xor
push
inc
jle
cwtl
push
cmp
push
jb
test
jno
adc
mov
jmp
or
addr16
adc
inc
filds
mov
xchg
int
idivb
cmpsl
test
lea
cltd
das
bound
arpl
pop
cmp
cli
cmpsl
cltd
jne
pop
xlat
add
fwait
js
dec
lock
inc
push
ja
xor
sbb
imul
mov
jmp
jmp
iret
add
mov
mov
pop
cmpsb
lahf
sub
add
inc
or
mov
shlb
nop
cmc
cmp
fldl
mov
aas
les
xor
sub
movsb
inc
test
dec
mov
ljmp
push
aam
pop
lds
or
mov
add
js
fstps
sbb
sbb
mov
pop
push
scas
pop
daa
lds
scas
jb
mov
fcompl
ja
add
ret
push
syscall
mov
dec
mov
jl
mov
or
dec
ss
bound
xor
mov
int3
push
popf
stos
pop
mov
xor
sub
push
mov
xchg
mov
xlat
and
push
subb
ret
test
insb
mov
cmp
call
insl
nop
push
js
and
adc
lcall
fstpl
add
xchg
mov
dec
es
rcrb
inc
cmp
mov
call
xor
iret
inc
mov
cmp
stc
aaa
fs
mov
push
mov
and
popf
scas
mov
ja
push
fwait
scas
lods
lcall
mov
lret
xchg
loop
je
push
aas
aas
mov
jg
inc
push
call
and
xor
xchg
hlt
in
or
cmp
mov
add
insl
fistl
imul
lret
nop
das
fcmovbe
pop
dec
adc
add
out
int3
out
cmp
dec
aad
imul
xor
xor
or
repz
xchg
and
loope
dec
jecxz
in
fs
mov
repnz
dec
adcl
sbb
popa
cmpsb
insb
out
loop
inc
in
mov
insb
test
loop
add
pop
inc
lea
mov
outsb
std
push
jbe
ja
ficoml
xchg
arpl
xchg
inc
inc
inc
mov
int3
and
ja
xlat
ret
mov
pop
inc
xchg
mov
test
jmp
jmp
fisttps
mov
xor
mov
testl
and
pop
roll
inc
insl
dec
pop
pop
add
fmuls
mov
les
push
add
loope
fwait
ss
das
fucomp
pop
fldl
cli
hlt
and
ljmp
outsb
xlat
test
dec
inc
clc
test
push
mov
and
and
iret
and
mov
iret
inc
dec
shrb
jne
pop
inc
push
or
outsb
pop
std
fdivrs
sti
mov
sub
int
or
pop
leave
fcomip
imul
cmp
add
sbb
shl
xor
or
ja
and
pop
clc
stc
push
push
mov
dec
mov
ficompl
push
fdivrs
fucomip
xchg
jo
inc
mov
lcall
mov
ja
add
sbb
xor
push
movsb
mov
inc
and
xchg
mov
gs
adc
inc
je
arpl
scas
lahf
ja
fsubr
sarl
int
adc
xchg
enter
push
sbb
xor
mov
add
pop
push
xchg
popa
mov
in
pop
add
adc
dec
movsb
pop
cmpsb
inc
push
and
cmp
jmp
shlb
pop
pop
dec
les
fildl
fisttps
inc
fistpl
leave
xlat
pop
decb
xchg
push
mov
jae
repz
fwait
jge
cmp
ret
lock
icebp
nop
pop
sbb
sub
jae
or
mov
xchg
add
jnp
popa
pop
sbb
mov
mov
add
stos
ret
fxch
arpl
push
sub
idiv
test
fiadds
fisttpll
in
inc
jge
jno
jge
push
xlat
mov
sbb
movsb
mov
mov
dec
mov
rorb
xchg
xchg
xchg
fs
push
cmpb
stos
fs
mov
sub
je
lods
mov
movsl
xchg
mov
in
in
jbe
mov
test
dec
pop
test
in
pushf
enter
pop
sub
xchg
andl
rol
pushf
xor
shrb
mov
xor
mov
pop
inc
mov
outsl
mov
imul
mov
enter
loop
loopne
aas
push
cmc
fcompl
call
jo
or
and
jno
dec
mov
xchg
int3
sbb
pop
sub
cmpsb
sub
dec
fs
aas
lea
test
add
lds
mov
dec
mov
xchg
fldcw
enterw
push
shr
popf
adc
or
in
insb
dec
jge
mov
sti
test
jle
stos
jne
cmp
mov
call
in
and
enter
jo
loopne
cld
pop
xchg
pop
std
or
jecxz
repnz
inc
stc
jnp
in
je
and
out
cld
enter
popa
mov
dec
out
or
arpl
mov
repz
test
dec
jb
add
mov
xchg
push
in
mov
data16
inc
cmovno
lret
stos
cmp
test
js
loop
mov
and
mov
or
lret
dec
std
sbb
imul
movsb
and
mov
scas
cmpsb
shlb
jb
clc
add
pop
rcr
fs
shlb
inc
push
jmp
push
jno
mov
adc
stos
sub
dec
in
lods
jnp
aam
insl
orl
not
movl
jno
mov
les
jg
pop
lret
xor
xchg
and
push
into
xchg
hlt
cmpb
jnp
insl
dec
dec
pusha
in
fwait
repnz
loopne
jmp
mov
jmp
int3
roll
insb
add
push
sub
jp
push
xor
out
ss
imul
inc
stc
xchg
mov
lret
stos
rcll
insb
jnp
mov
pop
inc
add
mov
and
mov
jno
ds
push
mov
xor
ljmp
add
das
lock
popf
inc
in
push
xchg
push
adc
popa
loopne
aas
fadds
incb
in
push
sahf
sbb
push
rclb
mov
mov
pop
mov
dec
add
in
lret
xor
cmp
insb
cmp
xchg
add
cmpsl
dec
add
push
out
or
cmp
mov
cmpsb
adc
adcb
cmpsb
and
inc
into
lret
push
test
fwait
xor
push
ret
xchg
std
loope
loopne
lods
pop
cmp
sbb
cmc
stos
fnsave
jmp
rclb
dec
cmp
push
inc
xor
stos
addr16
aaa
mov
int
and
ror
out
popa
or
fs
inc
cmp
inc
loopne
rorl
cmp
and
add
dec
lea
mov
aaa
mov
mov
mov
mov
scas
push
leave
imul
ja
fnstsw
jg
data16
sbb
mov
cmp
cmp
out
or
jmp
jg
inc
cmpsb
adc
push
fmul
cltd
outsb
mov
pop
loop
xchg
adc
mov
ss
das
fistpll
pop
push
sar
fdivrs
pop
stc
and
fistps
mov
cwtl
xchg
pop
push
cli
popa
xor
test
mov
imul
jmp
or
data16
or
sub
leave
sbb
cmp
mov
dec
or
pop
notb
and
sbb
lcall
sub
sub
xor
sbb
push
cwtl
cltd
dec
test
mov
push
enter
je
pop
dec
adc
push
sbb
cld
jno
or
jne
lods
aas
adc
loope
add
push
push
or
inc
xlat
mov
cwtl
xchg
js
jg
sti
sub
rcrl
lods
jnp
std
fsts
mov
sbb
jecxz
out
mov
sbbb
out
mov
xor
and
adc
add
lock
add
adc
pusha
mov
mov
mov
push
nop
inc
loopne
lock
adc
add
lock
add
adc
pusha
mov
mov
mov
push
nop
inc
loopne
icebp
and
adc
add
lock
add
adc
pusha
mov
mov
mov
push
nop
inc
loopne
lock
push
rcr
iret
dec
stos
rclb
mov
cmp
fistpll
inc
nop
push
mov
add
xor
jl
fsubs
loop
repnz
adcl
mov
mov
inc
nop
push
mov
add
adc
and
push
add
adc
inc
jecxz
repnz
out
xchg
pusha
mov
nop
push
mov
add
adc
and
xor
ret
inc
xchg
and
cmp
inc
pop
nop
and
xor
pop
dec
mov
ret
aaa
addl
mov
aaa
pop
sti
jbe
inc
sbb
inc
adc
lahf
push
test
jns
mov
leave
push
push
xchg
xchg
scas
mov
mov
dec
pop
fsubrl
test
add
inc
shll
iret
or
jecxz
xor
inc
xorb
rolb
adc
sub
rclb
ds
sub
mov
xlat
jp
jge
outsl
lods
repz
movsl
jg
mov
std
loopne
lock
gs
jo
xor
adc
cmp
js
nop
inc
sub
xor
cltd
sbb
push
xchg
mov
ret
jno
filds
push
mov
add
adc
and
xor
ret
and
xor
inc
adcb
mov
aam
int3
and
xor
inc
xchg
inc
push
mov
xorb
aad
rolb
fildll
sarl
aam
clc
adc
jne
sbb
cmpsl
jge
pop
test
or
and
outsl
out
add
or
and
xor
ret
and
xor
inc
adcb
mov
nop
push
mov
add
adc
and
xor
ret
and
xor
inc
adcb
mov
xchg
jp
or
fistl
pop
rorb
mov
loope
stc
jle
aam
adc
movsl
add
push
cmpsb
adc
ret
movl
pop
push
jne
xchg
and
mov
js
jmpw
mov
xchg
aam
test
sub
xchg
repnz
and
add
pop
insl
jecxz
xor
je
into
or
cmp
inc
mov
sbb
or
stos
ret
adc
lods
push
sbbl
and
xor
cmpsb
es
inc
cwtl
scas
dec
fists
inc
pop
orb
and
jno
xchg
mov
iretw
cmpsb
lods
addl
xchg
mov
pop
shrb
jo
cmp
pop
dec
testl
mov
lcall
dec
aad
pop
decb
xchg
sbb
enter
mov
pop
nop
fdivrs
rcll
sbb
and
xchg
movsb
cmp
dec
pushf
mov
cmpl
sub
aas
sahf
out
movsb
rcrb
mov
pop
rcl
nop
icebp
lret
mov
push
notb
jge
das
fsub
mov
pushf
movsl
xor
xchg
cld
test
mov
sti
test
cltd
pop
xchg
lret
insb
addl
mov
mov
loopne
pop
in
cmc
pop
xor
adc
pop
out
ja
js
in
xchg
dec
lds
mov
std
adc
xchg
movsb
mov
lahf
dec
push
fwait
cltd
cmc
movsl
sbb
js
and
popa
mov
or
scas
rorl
mov
add
ffree
cltd
jge
or
aad
loopne
jne
sbb
std
cs
jns
cltd
mov
mov
mov
sub
repz
ror
stos
mov
movsb
repnz
in
and
hlt
out
es
mov
push
inc
dec
insb
sbb
adc
insl
jp
jle
int3
bound
xchg
adc
ss
dec
push
inc
aas
test
fs
and
cmp
mov
inc
jge,pn
pop
repnz
cmpsl
mov
mov
pop
push
pop
inc
loope
xlat
loop
xchg
sarl
mov
outsl
movsl
add
mov
test
stos
js
clc
loopne
repnz
or
out
lds
ficomps
add
jbe
out
aad
mov
test
es
pop
or
lret
movl
jl
out
sub
and
add
popa
inc
iret
or
mov
mov
dec
add
jo
mov
sbbl
mov
std
jecxz
sbb
fwait
add
push
ret
addr16
push
into
sbb
ljmp
push
inc
nop
out
mov
add
mov
cli
pop
pop
sub
adc
and
pop
dec
addr16
and
in
cli
inc
mov
gs
xchg
xor
fmul
pop
or
cmp
stos
repz
mov
mov
fst
cmp
test
ret
int3
push
lret
pop
add
cwtl
xor
lcall
add
inc
ja
lds
test
mov
mov
pushf
fsubs
aas
and
mov
test
mov
jecxz
dec
sbb
xor
icebp
addb
jne
add
test
and
mov
jne
cld
les
into
pushf
je
mov
push
mov
and
mov
pop
cwtl
std
jno
mov
ja
ljmp
xchg
push
lret
cmpsl
loopne
sbb
ret
rorb
lret
nop
out
loopne
push
ds
mov
cmpsb
pusha
cmp
push
sub
xchg
xchg
push
ret
mov
jmp
push
push
xchg
sbb
lea
inc
xor
sub
and
cmp
inc
push
fnstsw
flds
sub
push
xchg
jae
in
les
frstor
mov
cmc
les
ffree
xchg
and
sbb
out
dec
mov
cmp
cmp
imul
movsl
stos
inc
xchg
in
test
shll
clc
or
roll
sahf
inc
xor
out
jae
jmp
push
jecxz
sub
jnp
or
jp
push
or
cmpsl
fistpl
mov
sti
sbb
sbb
js
push
xchg
shrb
scas
push
out
cli
inc
pop
cmp
jp
test
adc
mov
push
jge
mov
dec
dec
pop
mov
mov
ja
fsubrs
add
arpl
inc
dec
jle
daa
rcr
faddl
das
sbb
or
out
in
test
and
loopne
push
pop
imull
test
push
pop
jge
into
xchg
fmull
add
outsb
cmp
jnp
hlt
and
mov
in
jge
inc
cltd
addr16
lods
mov
mov
jg
outsl
jb
add
into
xchg
addl
in
fucomp
mov
sbb
adc
xchg
pushf
xchg
fadds
push
repnz
popa
shrl
aad
jge
xchg
fsts
int
int3
cmp
mov
aam
sub
add
mov
or
and
jnp
insl
xor
jae
mov
push
iret
and
sbb
nop
mov
subb
mov
push
out
push
sub
out
dec
fiadds
je
int3
das
ds
mov
jo
call
lret
inc
push
in
push
cltd
push
mov
xchg
pop
push
outsb
sti
lds
test
push
jo
clc
inc
test
fnsave
pop
jmp
inc
andl
sub
push
sub
rclb
and
push
cwtl
loopne
jb
aaa
cmp
cmp
cli
cmp
jnp
jecxz
push
fsubrl
push
mov
ds
pop
fcompl
stos
adc
shrl
or
loop
aas
xlat
js
ljmp
jbe
and
aas
push
or
les
sub
xlat
mov
sub
loopne
xchg
mov
cmp
sbb
fisubrl
add
iret
push
jo
int3
sahf
das
test
lret
jl
pushf
adc
xor
leave
pop
and
aam
ja
mov
sar
mov
inc
dec
lret
inc
rcrb
inc
popf
outsl
mov
adc
or
pop
fcoms
xor
mov
cmpsl
insb
jae
movsb
push
push
jmp
or
int
popl
xchg
jmp
lret
push
cwtl
push
cmpsl
mov
add
int
add
andb
push
jo
pop
cmpsl
mov
aam
mov
sub
mov
movsb
pop
sbb
xor
sbb
add
ss
and
push
inc
adc
mov
push
es
stos
ds
mov
lret
xchg
mov
cli
xlat
xchg
cld
pop
adc
cwtl
movsl
dec
hlt
or
in
outsl
sbb
push
int3
adc
aam
push
push
addr16
pop
push
outsb
or
and
scas
mov
mov
jno
lea
aaa
mov
addl
fimull
sub
sub
mov
lcall
pop
add
out
sbb
xchg
dec
outsl
cmpsb
and
cmp
cmpsb
jg
sub
mov
out
jl
ds
outsl
lahf
sbb
push
movl
push
pop
adc
imul
fdivs
das
add
aaa
enter
push
jmp
aas
sub
mov
adc
cs
mov
cwtl
shlb
pop
popa
adc
in
aaa
pop
rorl
call
pop
or
pop
adc
and
divl
sub
aaa
popf
scas
hlt
in
jmp
popf
pop
hlt
jp
adc
xor
xchg
and
jge
push
and
add
ret
and
cmp
fistpl
cld
loop
adc
and
inc
or
pusha
and
dec
xchg
and
or
dec
sub
mov
je
adc
add
adc
inc
xchg
pop
pop
add
stc
push
xor
ret
out
insb
jne
cmp
test
out
subb
mov
jae
push
jmp
jecxz
dec
fnsave
or
and
loop
fisubs
xchg
rorl
lret
or
mov
clc
lahf
fsubs
push
and
jbe
xorl
mov
cwtl
mov
cmpsb
in
dec
insl
ss
hlt
call
je
sbb
push
xchg
add
jb
mov
out
imul
andl
sti
add
pop
adc
out
lea
mov
mov
mov
sbb
shrb
repz
mov
pop
fucom
rcrl
dec
or
sub
jnp
sub
scas
adc
imul
or
lods
dec
shlb
mov
loop
adc
mov
push
sbb
dec
xlat
sbb
sub
mov
sbb
jg
cmpsb
in
pop
xchg
mov
jae
cmp
and
int
mov
cmp
bound
dec
or
dec
mov
xchg
aam
je
cltd
dec
xchg
insb
push
js
adc
jmp
sarb
in
xor
stos
pushf
mov
aaa
ret
jg
int3
movd
scas
aaa
leave
or
push
add
cli
xchg
pop
mov
jnp
movsb
cmp
xchg
push
fnstsw
pop
out
xchg
mov
loop
mov
jecxz
pop
or
sbb
mov
mov
sbbl
sub
and
out
mov
testl
or
clc
ret
adc
push
aad
outsb
push
repz
jg
jge
test
fcmovnbe
popa
pop
and
je
mov
out
push
je
ret
jmp
outsl
out
fcomp
enter
cmp
jp
dec
mov
in
in
dec
or
mov
ds
sbb
frstor
pop
jo
cld
arpl
in
adc
xchg
push
push
jae
lea
lock
fwait
out
imul
jnp
jae
push
xchg
xchg
dec
outsl
ja
icebp
ljmp
aam
mov
test
jae
insl
sbb
sub
mov
repz
jns
adc
cli
mov
lret
pop
push
push
lea
test
hlt
mov
outsl
cmp
and
cmc
add
orl
jle
rcl
lahf
xor
dec
jnp
enter
xorl
and
mov
cld
dec
cmpsb
cmp
mov
cmp
repnz
pop
push
vpaddsw
jae
pop
lds
jne
in
mov
daa
paddq
pushf
jae
push
ljmp
push
out
je
clc
inc
mov
gs
in
cmp
and
push
mov
lods
repnz
sbb
mov
and
ja
daa
icebp
je
cmpl
loopne
xorl
lret
jo
hlt
popf
mov
xchg
fxch
ja
mov
ss
loopne
andl
movsl
sbb
push
cmp
xor
lret
out
pop
pop
mov
loop
iret
cmpsb
add
add
inc
cmp
push
lcall
xor
sbb
out
sbb
mov
dec
sub
rorb
or
pop
mov
mov
popf
mov
fldl
and
in
and
and
rorb
fistpll
adc
adc
lock
mov
mov
inc
andb
call
in
int
sub
inc
leave
sub
dec
mov
mov
cmp
lahf
add
ss
jg
push
int3
pop
or
mov
xchg
mov
adcl
inc
inc
sbb
mov
cli
mov
jl
pop
lea
dec
jle
or
cmp
inc
xor
sub
ret
stos
adc
or
mov
xchg
ss
fildl
fstpt
adc
jge
insb
movsb
lods
dec
cmp
pop
fdivl
les
loopne
add
pop
test
addr16
jge
mov
adc
xor
ja
stos
pop
push
repz
adcb
xchg
sahf
mov
imul
scas
les
mov
int
lds
stos
outsl
ja
xchg
inc
push
mov
add
lods
and
or
test
out
cld
push
jge
sti
xchg
or
das
cli
xchg
popa
cmp
cmpsb
xor
pusha
cli
pop
cmpsl
inc
adc
imul
sub
int3
test
repnz
adc
aad
and
inc
pop
pop
xlat
lar
push
stc
cwtl
and
push
mov
out
aaa
addl
das
xchg
dec
lock
outsl
inc
jbe
addr16
cmp
sbb
mov
repz
test
mov
aaa
stc
dec
dec
add
push
fs
loopne
mov
aad
push
jne
jle
movsb
hlt
lret
jbe
popa
cwtl
sub
cmp
dec
fmul
call
cld
lcall
and
cmc
xchg
iret
add
loopne
mov
xlat
lock
lret
mov
test
arpl
mov
das
call
xchg
push
nop
or
mov
loope
mov
gs
xchg
mov
mov
mov
push
jo
loop
mov
int3
stos
lds
cld
sarl
aaa
aad
scas
dec
add
xchg
outsl
xchg
gs
sub
sarb
jl
arpl
jp
data16
outsl
add
and
in
iret
test
cmp
cmp
addr16
sbbb
mov
popl
or
leave
push
insl
cli
gs
or
adc
inc
bound
and
les
jmp
or
cmpsb
push
fwait
inc
int3
shl
stos
lret
popa
xchg
pusha
xchg
and
mov
lods
add
in
jp
pop
lods
insb
cli
loope
lds
xchg
sub
xchg
sar
or
in
mov
cmp
mov
sbb
adc
loopne
subl
mov
inc
rolb
push
inc
lahf
mov
out
rcrb
pop
ss
or
mov
cmp
mov
jmp
push
popf
xchg
jecxz
jo
cltd
mov
xchg
add
aad
adc
aaa
inc
cmpb
pop
push
iret
mov
fisubs
test
adc
lret
aaa
orl
mov
cmpsb
push
data16
aaa
loop
push
nop
daa
mov
push
test
iret
in
inc
pop
mov
stos
stos
mov
mov
sbb
into
pushl
jae
jmp
stos
cmp
push
lea
adc
bound
mov
xor
imul
fwait
das
jge
shl
xor
out
sbbb
sti
or
cli
idiv
inc
cmp
jmp
mov
or
aas
adc
cli
mov
lods
or
adc
stc
ret
mov
pushf
cmc
sub
push
xchg
mov
adc
sub
rcl
lcall
es
mov
cmp
out
iret
test
fsubl
or
xor
mov
mov
mov
int
sub
aas
pop
outsl
lahf
inc
out
pop
lcall
int3
scas
rcll
in
movsl
std
inc
cmp
cmp
dec
adc
xchg
sbb
js
pop
sub
cmp
fsub
xchg
xlat
arpl
aam
addr16
and
ds
loope
mov
pop
shll
out
int3
dec
lods
pop
lods
pushf
adc
inc
adc
dec
mov
sub
pushf
xor
cli
enter
bnd
lea
push
push
leave
pushf
inc
cwtl
xchg
orb
xor
add
pop
fdivs
scas
popa
pop
pusha
ja
jmp
mov
rep
aad
sbbb
jmp
daa
and
xchg
sbb
push
insb
stos
jne
stc
cltd
lds
sub
cmpsb
and
mov
push
in
adc
add
jne
dec
sub
lret
xor
sub
mov
or
clc
lds
jo
lds
adc
insl
or
test
inc
jo
insl
mov
jle
pop
inc
mov
sub
mov
inc
sbb
fsubrl
jle
imul
adc
mov
std
cwtl
addl
mov
sahf
call
and
std
mov
jbe
sahf
lahf
push
test
push
adc
and
fs
adc
sub
clc
fimuls
xor
jb
pop
mov
addr16
lret
lock
clc
cld
or
es
cmp
call
call
in
add
popa
push
lret
cmp
xchg
push
jbe
add
std
mov
push
imul
pop
pop
arpl
mov
mov
push
push
xchg
das
insb
std
inc
js
movl
outsb
add
push
sbb
cmp
jbe
fdiv
adc
dec
jmp
or
pop
stc
inc
xchg
clc
sbb
pop
out
or
ffree
fs
jne
pop
xor
iret
int3
leave
scas
cld
mov
add
sbb
adc
test
push
fucomi
mov
ret
inc
sbb
pop
or
mov
cmp
sub
adc
scas
icebp
aaa
daa
cs
mov
into
cmp
jae
loope
and
push
push
aam
jno
mov
gs
ror
adc
xor
addr16
cmp
cs
push
add
lods
jnp
les
jp
sub
aaa
dec
push
push
jecxz
mov
push
mov
jle,pn
jmp
out
inc
dec
stos
jbe
sub
sub
and
jnp
stos
mov
sub
fcmove
mov
add
sti
cmpsl
bound
pop
sbb
mov
out
sbbb
pop
dec
out
imulb
lret
fcmovnu
mov
sbb
jns
push
dec
xchg
add
ret
dec
mov
jo
pop
sub
ss
cmp
cltd
mov
fwait
jae
jno
pushl
cmp
dec
xchg
int3
push
shl
push
in
fld
jb
cld
push
add
sub
add
push
pop
and
ja
pop
repnz
rcrl
xor
or
xchg
cmp
xlat
inc
sub
jle
add
adc
sub
mov
sub
loopne
xchg
out
mov
out
int
js
fisubrl
jae
fucomip
mov
sarl
mov
repnz
inc
jnp
lds
lock
and
lret
dec
shll
std
mov
enter
xor
inc
lcall
and
inc
inc
inc
stos
popf
sahf
jbe
dec
adc
fwait
stc
jge
inc
add
push
dec
dec
test
aaa
mov
or
es
fnstenv
cmpsb
sub
inc
hlt
mov
lret
orl
mov
cmc
fcompl
inc
fdivl
push
cltd
pop
jae
add
or
push
mov
inc
jp
repz
adc
aaa
js
ficomps
xor
cltd
int
movsl
scas
int3
cmp
add
jp
bound
and
xor
mov
or
pop
sti
mov
push
sbb
in
xor
mov
push
jae
cli
mov
out
imul
aaa
sbb
jb
outsb
aas
xor
test
test
or
fidivl
cltd
test
and
and
sarb
dec
push
jg
sbb
sbb
lds
cltd
dec
aam
xorl
jno
arpl
lock
shr
aas
push
in
es
imul
mov
aaa
fdivl
mov
sbb
call
mov
push
xchg
decl
inc
cmp
mov
mov
mov
push
sub
clc
or
cmp
into
les
arpl
jbe
js
jl
insl
xchg
jge
in
stos
mov
dec
out
in
sub
out
fiaddl
aas
cltd
iret
popa
sbb
mov
mov
jmp
je
stos
pop
dec
or
aam
pop
andl
movsb
xor
push
or
pop
fdivp
push
push
lea
add
call
nop
mov
lret
jge
mov
icebp
dec
push
cwtl
jbe
and
jmp
xor
xchg
insb
test
mul
xlat
or
sbb
fdivl
in
xchg
and
fsubr
lods
inc
jle
repz
jle
rcr
cltd
cltd
cmpsb
push
ds
loop
leave
adc
ljmp
push
pop
xchg
adc
lock
inc
jle
stos
jmp
xlat
push
gs
hlt
jl
popa
inc
xchg
notb
pop
ja
repnz
rolb
and
inc
jne
into
and
fisubrl
mov
sbb
sbb
stos
je
rcl
xchg
adcl
cmpsl
pop
inc
out
jns
push
add
sub
fstl
add
loope
jmp
out
call
or
imul
xchg
es
mov
insl
cmp
push
jno
push
xor
sub
loope
lds
je
jne
outsb
nop
cmp
dec
sahf
cld
pop
lods
cmp
into
xchg
ljmp
mov
int
loope
fdiv
repnz
mov
lock
lret
mov
int3
into
mov
xchg
xor
pop
call
pop
bound
adc
and
xor
ret
and
xor
inc
adcb
mov
nop
push
mov
add
adc
and
xor
ret
and
xor
inc
adcb
mov
nop
push
mov
add
adc
and
xor
ret
and
xor
inc
adcb
mov
xchg
push
mov
add
adc
and
repnz
adc
loop
test
or
insl
lahf
pop
dec
pushf
outsl
mov
dec
lods
pop
adc
push
xchg
das
out
sbb
or
fistps
cmp
lahf
pushf
outsl
mov
dec
lods
pop
fsubrl
int3
aas
cld
paddsb
sbb
or
cmp
sub
pushf
scas
dec
mov
pushf
outsl
mov
dec
lods
pop
fsubrl
int3
aas
cld
paddsb
sbb
das
call
sub
pop
ljmp
ret
outsl
call
push
adc
aad
sbb
ret
divl
push
push
jmp
sub
and
pop
loope
mov
ret
into
rcll
fimull
sub
loope
int3
aaa
test
mov
mov
repz
pop
add
in
and
xor
jo
push
pushf
jp
cld
subl
sub
xchg
xor
xchg
ret
mov
jo
adc
insb
sbbb
test
int3
sub
test
test
xor
movswl
adc
jae
jg
daa
cmpsb
push
pop
ds
jp
decl
cld
inc
filds
or
sarl
in
sahf
push
outsl
mov
dec
lods
pop
fsubrl
int3
aas
cld
paddsb
sbb
or
cmp
sub
pop
scas
dec
mov
fldl
clc
jg
lds
faddl
aas
cwtl
inc
out
dec
sbb
imul
pop
lea
fdivrp
outsl
jmp
sub
test
pop
jns
pop
mov
scas
sub
pop
int3
and
adc
sbb
stc
mov
daa
sarb
das
int3
aas
cld
paddsb
sbb
or
cmp
sub
pop
scas
dec
mov
pushf
outsl
mov
dec
lods
pop
fsubrl
int3
aas
cld
paddsb
sbb
or
cmp
sub
pop
scas
dec
mov
pushf
outsl
test
sbb
jecxz
adcl
sbb
imul
sbb
pop
cmp
xchg
cld
sar
lahf
mov
scas
mov
jg
into
mov
sarb
push
mov
leave
pop
mov
repz
loopne
mov
push
call
jae
ret
out
cmp
jno
inc
dec
adcb
or
lea
jecxz
pop
sub
jns
xor
mov
cmp
mov
or
pushf
push
test
cltd
cmp
pop
out
or
sbb
mov
test
scas
in
inc
add
out
shll
jmp
lcall
stc
sbb
leave
mov
sbb
test
shl
jg
repz
test
fs
jbe
xchg
rclb
sub
mov
cs
jbe
cmp
mov
jge
movsl
in
adc
mov
sub
mov
xchg
insb
ds
xchg
push
insb
cld
ret
fsubl
aad
dec
mov
jo
mov
jo
pop
mov
jecxz
and
sti
pop
addb
in
cli
lcall
adc
sub
mov
add
jg,pt
test
jmp
in
outsb
mov
inc
cmpsb
repz
jecxz
lea
pop
sbbb
out
jbe
insb
push
add
jb
rcrl
fnstenv
pop
adc
lea
cmpsl
sbb
push
dec
push
sub
test
scas
or
xor
jae
sbb
outsl
mov
pop
insl
pop
bound
sarl
add
pop
cmp
popf
int3
roll
outsb
lahf
cmpsb
push
push
fnstsw
sbb
cwtl
mov
lock
push
std
shl
pop
repz
mov
mov
fistpl
or
and
movsl
mov
repnz
loope
push
pop
lods
aam
adc
out
lods
mov
adc
divb
dec
arpl
clc
shll
dec
sub
scas
xchg
or
xor
cs
or
mov
sbb
stos
scas
call
iret
fidivrl
dec
shlb
scas
fwait
pop
dec
aas
call
dec
mov
es
adc
sbbl
or
js
pop
jae
shll
int3
and
mov
or
lcall
xor
lods
mov
dec
pop
cmp
adc
cmp
aad
jne
icebp
imul
mov
jle
add
pop
sti
fcomps
sub
adc
out
adcl
gs
leave
mov
into
dec
shl
xor
xor
pushf
add
jb
push
repnz
mov
mov
mov
es
mov
mov
mov
ss
mov
jnp
and
cmp
mov
ja
mov
sub
mull
and
mov
arpl
rolb
jecxz
adc
dec
ret
ret
cmpsb
pop
add
push
sbb
out
repnz
pop
dec
sub
dec
pop
push
test
lods
cmp
arpl
into
and
cltd
push
sub
mov
jnp
push
repz
adc
aad
pop
je
pop
sbb
repz
xor
push
popf
sbbl
lea
nop
push
inc
sub
cltd
fdivrl
or
or
scas
sbb
xor
or
push
aad
push
inc
ja
xchg
sbb
and
xchg
add
mov
mov
loope
pop
outsl
mov
dec
subb
sbb
repz
or
out
adc
inc
ret
aaa
out
les
lcall
nop
sub
mov
pop
shr
jecxz
xchg
jnp
iret
aaa
mov
and
xchg
inc
cmc
div
dec
inc
mov
flds
ficompl
rcl
sbb
mov
and
or
jne
aad
xor
test
adc
fs
out
cld
aas
mov
mov
or
cmp
cmp
imul
jbe
sub
push
inc
lahf
out
push
lret
xchg
movsl
cmp
sbb
imul
jle
es
or
mov
mov
sahf
movsl
test
inc
dec
sub
std
negl
xor
cmpsb
mov
pop
cmp
sub
adc
push
daa
push
cld
add
imul
and
scas
mov
leave
mov
mov
jns
dec
dec
mov
int
repnz
push
xor
xor
lea
mov
divl
aas
push
fs
scas
xor
shr
jl
sbbl
or
xchg
jb
fwait
xchg
movsl
add
jo
stos
mov
ret
or
xor
bound
js
push
into
dec
aaa
popf
sbb
pushf
inc
or
fs
stc
movsl
adcl
imul
cmpb
mov
sbb
mov
test
hlt
jo
es
mov
xor
push
loope
in
pop
test
imul
sub
stc
enter
pop
add
xchg
xchg
hlt
mov
push
inc
into
adc
xor
ror
cmpb
out
add
fiadds
mull
movsl
stc
insl
pop
loope
jle
fsubl
xor
inc
lock
gs
aad
loopne
imul
inc
call
pop
add
xor
jmp
mov
loope
cmpsb
out
mov
jnp
cmp
out
add
inc
inc
fs
mov
and
cmp
pop
jmp
ret
dec
rol
repnz
jne
lods
aas
in
sbb
sub
sbb
jl
jne
inc
mov
mov
call
sub
ja
push
inc
ss
or
jp
push
loop
adc
jecxz
into
pop
jbe
dec
pop
hlt
gs
pop
dec
jnp
mov
ds
sbb
mov
insl
adc
adc
dec
or
mov
dec
lods
and
add
sti
icebp
int3
dec
lahf
mov
dec
cmp
dec
fstpl
out
out
xor
push
cmp
cmpsl
dec
mov
popf
jmp
add
adc
cmp
xor
daa
mov
inc
or
sbb
pop
cmp
stc
in
icebp
mov
cmp
mov
mov
mov
enter
xchg
pop
cmp
lahf
icebp
mov
jnp
adc
shrb
jns
mov
push
dec
xchg
adc
test
add
adcb
pop
test
sbb
lds
xchg
sbb
and
mov
cmp
rclb
jmp
inc
mov
xchg
fs
pushf
pop
dec
leave
sbb
and
mov
and
mov
dec
mov
iret
dec
lods
test
ds
sarb
inc
push
add
jo
mov
lcall
push
mov
xchg
cs
aas
es
ja
rclb
adc
insb
mov
aam
imul
cmpsl
cli
xor
loopne
and
fdivl
jne
pop
push
add
fistl
call
fadds
add
out
jns
cli
rcll
cmpsl
sub
mov
roll
lods
call
xor
and
cld
stos
inc
jnp
outsb
imul
or
mov
cmp
mov
pop
xor
int
jno
rol
push
in
test
enter
sbb
jnp
std
sahf
mov
add
inc
pop
scas
push
mov
shlb
lcall
movsb
xor
mov
push
repz
fistpll
xor
push
mov
adc
stos
ret
data16
dec
call
jae
cmp
das
arpl
sub
dec
pop
shlb
ja
lahf
add
xlat
jecxz
cltd
out
in
sub
out
jge
pop
and
mov
movsl
jmp
pushf
cs
push
cmc
cltd
stos
sarb
or
sarl
push
jnp
pop
mov
out
int
inc
es
test
sar
movsl
fisubrl
ret
dec
sub
inc
mov
icebp
mov
jns
cmp
divl
xchg
push
icebp
clc
pop
pop
inc
ficoml
leave
stos
pop
repnz
subl
cwtl
shll
arpl
jbe
push
sub
in
mov
sbb
int
data16
and
or
mov
lcall
inc
jecxz
jnp
pop
xchg
mov
leave
or
mov
iretw
push
pop
out
test
jbe
fwait
fs
mov
loope
rcrb
int
pop
or
push
mov
fstpl
insl
js
xor
int
xacquire
outsb
lods
mov
add
sti
jnp
mull
mov
push
repnz
not
fldenv
sbb
mov
xchg
inc
jmp
sbb
and
mov
pushf
inc
mov
lret
out
out
dec
jbe
loope
inc
popf
xchg
mov
aas
shr
iret
adc
inc
xor
mov
and
adc
sti
push
xchg
xlat
push
push
or
xchg
pop
push
mov
push
mov
xor
cmp
mov
pop
lret
iret
mov
fsts
push
cmp
scas
out
lods
adc
push
ret
inc
ds
gs
push
ficompl
pop
push
xorb
arpl
imul
pop
push
mov
daa
imul
testb
shr
test
cmp
sub
mov
jle
mov
adc
dec
gs
aaa
stos
dec
sub
fsin
fmuls
cli
arpl
cmp
fldl
lea
hlt
mov
jo
mov
mov
insb
add
xchg
nop
fstl
sbb
iret
in
rcr
int
repnz
mov
add
ljmp
xlat
dec
mulb
lds
xor
mov
adc
push
xor
arpl
stos
cmp
sub
loop
sub
hlt
mov
testb
sub
mov
fbstp
sahf
xor
and
mov
and
pop
call
int
cld
addr16
bound
call
imul
or
inc
or
and
dec
outsl
pop
div
sbb
jl
cltd
test
and
push
lahf
leave
mov
aaa
dec
push
add
subl
je
sub
mov
jl
into
adc
add
inc
sbb
inc
push
sti
cmp
aam
xchg
ljmp
xchg
pop
fsubrl
jg
jb
jbe
sub
xlat
loope
mov
mov
mov
ja
cmp
push
sbb
mov
stos
std
pcmpeqw
add
sub
dec
mov
sub
dec
movsl
int
loop
mov
xchg
xchg
ret
inc
ja
mov
add
push
sbb
pop
movsl
rorb
jg
iret
scas
mov
stos
and
subl
mov
mov
std
div
inc
inc
ret
sbb
xor
jns
jg
loop
inc
ja
aas
xor
xor
mov
pop
sbb
push
add
rcrl
and
icebp
scas
aas
hlt
adc
jmp
xchg
andl
push
pop
movsb
loopne
test
xchg
cmp
idivb
jae
ja
sbb
pop
jecxz
mov
add
sar
out
lods
pop
mov
pushf
push
xor
scas
cltd
push
gs
out
std
pusha
int
dec
notb
lods
popf
daa
out
out
cmp
inc
fwait
mov
lods
pop
js
pop
mov
add
mov
sbb
jbe
cmpsl
mov
pop
dec
xlat
adcb
stos
mov
jo
xorb
cmp
jmp
in
sub
outsb
sbb
mov
sti
imull
cli
stc
adc
imul
pop
outsl
jnp
popf
push
push
sahf
push
rcl
cmpsb
scas
cmp
sbb
arpl
push
xor
out
push
or
loope
pop
repnz
scas
mov
das
sub
xor
cmp
arpl
pop
aad
outsl
push
sbb
ret
adc
pinsrw
outsb
hlt
in
dec
das
push
ficompl
divb
rcl
jp
cltd
jne
insl
loop
jmp
jmp
add
mov
push
adc
test
adc
js
mov
cmp
je
stos
sbb
mov
cmp
or
inc
mov
mov
sbb
xchg
inc
imul
mov
mov
add
cmp
pop
push
jl
call
das
sub
sub
shlb
sub
les
int
scas
add
loop
or
jg
push
ret
xchg
add
sbb
mov
sub
lea
add
pusha
lods
cmpsl
mov
sbb
mov
fstpt
sbb
add
jb
mov
fdivrs
scas
popa
push
leave
data16
fistpl
das
in
sbb
mov
cs
jnp
jg
insl
jno
adc
inc
or
shrl
incl
xor
int
fistpll
xchg
clc
push
pusha
sbb
pop
pop
jnp
add
ljmp
scas
dec
mov
mov
popa
movsl
arpl
out
mov
or
inc
pop
imul
loop
pop
sub
ficomps
mov
ljmp
jnp
push
dec
push
mov
jae
adc
fsubrs
adc
insl
in
add
sub
outsl
out
gs
xchg
jp
mov
mov
xchg
pop
jmp
jnp
out
sbb
orb
pop
mov
cs
rcll
mov
mov
push
cs
cwtl
dec
sub
sbb
jnp
lcall
popf
add
mov
push
jb
cmp
shll
mov
ret
adc
inc
dec
push
xor
lret
adc
imul
cmp
das
and
mov
add
push
add
fcomps
movsl
inc
fcmovne
push
stos
aad
sub
imul
ja
push
inc
jae
jmp
inc
push
cmp
popa
cltd
out
popl
or
push
and
adc
cmp
jne
sbb
dec
xchg
inc
cmp
call
xchg
cmpsb
clc
mov
pusha
ds
mov
mov
sbb
push
or
jo
jns
inc
popa
inc
addr16
push
insl
iret
arpl
mov
jbe
push
rcll
roll
fs
mov
sub
push
rsm
cmp
out
mov
fcomi
in
inc
stc
je
js
cmp
cld
in
push
push
mov
aad
cmp
das
leave
pop
adc
sub
stos
xorl
nop
into
pop
inc
shl
add
lret
cmp
out
or
mov
pop
push
adc
push
pop
sti
int3
sub
mov
add
xchg
pop
xlat
inc
aad
fiaddl
mov
lcall
pushf
sub
adc
xor
push
sub
sub
int
sbb
sbb
addb
push
gs
adc
sbb
ljmp
push
xor
adc
ficoml
lret
shll
sbbb
mov
xor
sahf
and
adc
cs
or
or
pop
push
pop
adc
cmpsb
inc
push
inc
jo
sti
pop
cmp
lea
lret
ret
sub
xchg
jl
mov
add
cmp
stos
xchg
push
fs
outsb
arpl
lods
mov
jecxz
adc
fildl
push
dec
je
jns
xor
sbb
mov
push
lret
and
mov
jbe
cmp
stos
add
daa
jo
or
push
daa
mov
cld
push
js
xchg
sbb
mov
pop
dec
stc
lea
jecxz
pop
rcrl
and
shrl
dec
in
mov
fwait
dec
mov
mov
sbbl
aas
or
cltd
imulb
inc
xor
lods
sub
insl
xchg
inc
jno
test
mov
mov
sbbl
fildll
lods
adc
nop
cmp
and
xchg
mov
lret
lret
jne
mov
and
repz
in
mov
xor
sbbb
int
int3
push
add
aam
je
into
popf
addr16
sbb
fcomi
lret
loopne
push
sahf
jecxz
adc
je
mov
cmp
lahf
inc
xor
fcmovne
insl
movsb
imul
out
xchg
mov
inc
xor
nop
xor
push
cs
mov
dec
jb
fcompl
jmp
lahf
lds
mov
out
lcall
data16
leave
inc
jne
sarl
push
mov
jmp
test
mov
dec
xchg
mov
mov
ss
ss
imul
pop
ljmp
shlb
mov
push
push
mov
test
xor
mov
pop
sub
testb
dec
jecxz
shll
push
orl
fildll
xchg
sbb
jae
jnp
push
pop
in
and
inc
sbb
out
inc
sub
ja
mov
xchg
mov
rcrl
mov
movsl
cmp
pop
and
inc
sbb
lahf
rolb
enter
scas
mov
out
fcomi
jne
daa
daa
fsubrl
pop
sub
xchg
iret
shll
dec
pop
aaa
loope
iret
pop
mov
fstpt
out
loopne
lds
push
shlb
pop
ret
jb
push
pop
add
push
pop
lret
sub
clc
dec
mov
pop
ret
repz
iret
dec
push
pop
xchg
mov
js
sub
mov
addr16
pop
hlt
push
lcall
add
lods
cwtl
inc
mov
loope
pushf
movsl
lods
in
daa
out
inc
lods
or
jl
daa
xchg
ret
adc
jmp
add
dec
push
data16
and
cmp
sbbb
mov
out
jno
or
and
mov
cs
pop
dec
cmpsl
hlt
and
jno
aad
sbb
loop
mov
cltd
and
mov
sbb
in
cmp
in
lock
jmp
or
mov
jae
add
das
xchg
imul
bound
jo
mov
sub
pop
out
fwait
push
or
xor
xchg
int3
or
mov
flds
sti
push
in
popa
fldt
cld
sbb
in
sub
or
sub
dec
scas
cmp
mov
js
pop
xchg
xor
clc
mov
popa
lods
mov
mov
xchg
cmp
outsl
sub
jmp
cli
lret
ret
outsb
mov
loopne
stos
cmc
sbb
ss
add
sbb
jl
ss
aas
stos
bound
insl
jg
cwtl
mov
or
dec
repnz
sub
outsb
mov
cmc
lds
into
jge
xchg
lods
subl
cmpsl
nop
mov
push
in
clc
xor
dec
dec
mov
lds
mov
and
mov
cmp
sub
sub
das
mov
cmp
jl
xchg
sbb
inc
mov
dec
nop
xchg
jp
dec
add
mov
das
jbe
je
xor
xchg
sbb
cmpsl
xchg
ds
jae
cltd
jae
std
add
stos
jg
lret
lahf
repnz
mov
add
sbb
andb
aam
lret
jns
shlb
dec
rolb
in
xorb
cmp
repnz
sub
push
mov
inc
adcl
test
mov
sbb
repnz
movsl
push
mov
idivb
call
mov
nop
fstps
into
jmp
push
dec
addb
aaa
adc
jno
xor
push
iret
or
xor
movsb
dec
insb
fstpt
lcall
add
sti
rep
jle
adc
cmp
pop
adc
jge
movsb
dec
mov
fstps
stos
pushf
xor
fildl
fldt
push
jnp
jno
arpl
push
insb
jl
mov
sub
mov
mov
cmpsl
push
or
push
jne
inc
pop
pop
mov
imul
cmpsl
pop
pusha
mov
cld
push
sbb
mov
xchg
mov
pushl
xchg
popa
leave
sbb
cltd
sub
popf
int
sub
push
sub
insb
loope
pop
xchg
inc
icebp
test
cmc
repz
jmp
mov
scas
add
push
pop
sbb
jo
shll
mov
stc
lods
lret
push
pusha
mov
fcoml
aaa
jo
filds
in
mov
fildl
push
ds
cli
ss
sti
mov
cs
negl
adc
stos
shll
stos
dec
lods
subb
or
or
xor
adc
or
push
adc
outsb
and
sbb
dec
in
pop
cmp
xchg
xor
adc
sbbb
movsb
shll
gs
sbb
call
scas
subb
mov
mov
adc
stos
es
std
cmp
xor
and
dec
scas
xlat
dec
test
mov
dec
in
cmpsb
push
pop
jmp
jecxz
adc
cmp
push
cmpb
int
lds
fsubrl
cwtl
cmp
mov
cmp
jp
stos
pushf
pop
and
fmull
and
add
mov
xchg
stos
aaa
push
jo
aas
neg
jg
dec
lods
pop
fsubrl
int3
aas
cld
paddsb
sbb
or
cmp
sub
pop
scas
dec
mov
pushf
outsl
mov
dec
lods
pop
fsubrl
int3
aas
cld
paddsb
sbb
or
cmp
sub
pop
scas
dec
mov
pushf
outsl
or
cmp
lods
pop
pop
das
int3
mov
sbb
or
cmp
sub
pop
scas
dec
mov
pushf
outsl
mov
dec
lods
pop
fsubrl
int3
aas
cld
paddsb
sbb
or
xchg
iret
sub
sub
cmp
or
sbb
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
sub
xor
cmp
or
pop
sti
dec
sti
mov
sub
pop
fldt
jnp
mov
fwait
outsl
mov
mov
pop
jmp
sti
mov
xor
inc
popa
cmp
mov
adc
and
jb
pop
stc
mov
movsb
jmp
push
cmc
xor
shrl
jnp
pop
or
outsb
mov
outsl
movsl
shl
cmp
jae
mov
jle
pop
jmp
mov
hlt
and
sbb
and
pop
in
popa
ds
loop
ds
stos
sbb
sub
or
imul
and
fstpt
fs
dec
sub
and
popa
dec
xchg
inc
xor
cli
icebp
aam
fildl
loopne
fidivrl
lret
push
xlat
fwait
or
cmpb
jmp
add
add
sti
fsubrl
imul
jno
mov
imul
stos
inc
cwtl
push
pop
adc
jmp
or
and
dec
jmp
bound
xchg
sub
jnp
imul
jmp
lahf
std
outsb
ret
sub
cmp
pop
mov
jp
das
jecxz
addr16
cmpsb
add
mov
pop
out
ds
bswap
pop
pop
repnz
pop
fisttps
push
mov
dec
sahf
rorb
jle
dec
mov
daa
jmp
fldt
jnp
mov
fwait
sbb
imul
jmp
sti
mov
sub
pop
fldt
jnp
mov
fwait
sbb
imul
jmp
sti
mov
or
ds
xlat
aam
push
sbb
pop
mov
mov
repnz
int3
xchg
subl
jmp
xchg
fisubs
ret
in
aam
ror
xchg
and
data16
maxps
inc
or
mov
aad
sbb
dec
xor
dec
out
mov
nop
or
ljmpw
xor
jbe
xchg
or
fcmovb
dec
inc
cmp
fidivs
dec
xchg
fcomi
dec
popa
xchg
loop
add
js
fcomp
jmp
xlat
adc
repnz
mov
test
mov
lea
cmpsb
std
and
cli
mov
repz
insb
leave
clc
inc
xorb
ss
dec
popf
mov
out
jo
mov
fcoml
ja
je
movsl
push
loope
lods
pcmpgtd
pop
dec
pop
sbb
sbb
mov
insl
outsl
sbb
inc
push
sub
pop
stc
xor
je
push
sti
arpl
cmp
jge
jnp
test
roll
dec
gs
xlat
xchg
inc
lcall
pop
gs
mov
xchg
jl
dec
nop
out
xchg
xor
cs
pop
lock
push
or
aam
pop
mov
dec
and
inc
xchg
cmp
xchg
mov
addr16
inc
sub
lret
push
mov
or
bound
push
mov
ficompl
xor
daa
setle
mov
xchg
jae
ds
add
fs
push
popf
or
fbstp
mov
mov
pop
mov
js
cmp
add
imul
mov
std
inc
push
or
sub
push
push
ss
sbb
aam
mov
pusha
jle
pop
or
scas
cli
lret
outsb
out
mov
mov
lock
xchg
sbbb
sub
jl
or
pop
jbe
sub
push
mov
push
jge
pop
cwtl
or
test
scas
stc
out
sbbb
movsb
cmpsl
test
or
or
xorb
pop
inc
mov
mov
sub
xchg
push
or
sti
cli
int3
les
mov
test
scas
mov
clc
push
cmc
cwtl
mov
leave
scas
das
inc
add
inc
mov
pusha
jae
incl
rcrl
data16
loopne
decl
mull
imulb
lret
push
std
sbb
inc
dec
jbe
push
lods
jge
inc
arpl
pop
stos
mov
xchg
jge
lret
inc
test
fistpll
popa
loopne
adc
mov
jnp
or
sbb
cmp
jb
and
in
cld
int
insb
sub
stc
jge
shll
and
and
inc
icebp
lods
mov
in
pop
pop
adc
popa
cmp
push
sub
fiadds
das
movsl
test
stc
pop
fdivs
sbb
int
or
test
test
xor
push
cmp
scas
mov
jb
shrb
sub
push
in
jae
and
pop
mov
xor
hlt
mov
ret
shl
out
sti
adc
adcl
popa
fwait
shl
and
jno
jnp
in
ljmp
loopne
outsb
or
dec
movsl
into
cli
mov
je
mov
stos
out
cmp
out
sbb
in
jb
push
ficoml
sub
jmp
test
scas
arpl
xlat
or
inc
xlat
lea
aas
adc
xchg
mov
mov
outsl
xchg
scas
and
ss
adc
cs
and
imul
notl
mov
inc
push
popa
lret
xchg
fcmovbe
mov
push
call
and
cs
xor
test
ljmp
jo
lock
ret
repnz
mov
mov
sti
push
rclb
pop
jle
repnz
enter
fdivrl
push
pop
fisubrl
mov
mov
out
aad
fwait
jecxz
xor
call
dec
pop
fdivrs
lahf
divb
rorl
imul
lods
scas
sbb
mov
mov
aaa
lds
xor
jo
jmp
mov
mov
aaa
sub
mov
outsl
mul
pop
add
lds
ljmp
cmp
je
test
add
cld
icebp
shll
adc
cmp
lods
mov
loope
sub
inc
inc
adc
mov
fildl
xchg
mov
pop
into
cli
pop
mov
test
jg
ljmp
mov
shrb
or
scas
mov
jle
leave
loope
sti
adc
imul
orl
and
popf
and
out
pop
sti
les
aam
push
xchg
jg
pop
mov
les
andb
mov
stc
inc
mov
outsl
mov
xor
popf
stos
jecxz
mov
jle
movsb
in
jns
xchg
out
cmp
test
cwtl
inc
and
bound
xor
mov
or
jns
mov
cmpsl
inc
mov
lods
add
outsb
cmp
fs
jg
ret
insl
or
push
rcrb
aas
cmp
mov
push
mov
ja
in
mov
andb
or
stc
and
adc
jp
mov
int
mov
mov
aam
inc
mov
xchg
push
stos
leave
and
out
xorb
cmp
cmp
dec
mov
pop
das
insl
cmp
mov
leave
fidivl
dec
das
rcll
pop
cmc
pop
push
mov
arpl
cmp
or
into
jecxz
inc
lcall
icebp
fwait
dec
pusha
clc
daa
push
mov
mov
cld
sbbb
cmp
adc
mov
cmp
push
lea
arpl
pop
arpl
or
jmp
jg
jmp
cmpsb
dec
popf
test
cs
repz
jne
movsl
cmp
sbb
and
das
push
xorb
or
les
dec
push
dec
sbb
push
aaa
adc
xchg
cmpsb
jl
mov
cmp
ljmp
dec
in
jl
push
scas
cmp
mov
in
nop
adc
adc
pushw
mov
xchg
pop
mov
xchg
pop
in
mov
sub
mov
dec
ficomps
lahf
sub
fwait
mov
xchg
adc
flds
aam
and
mov
xor
scas
mov
mov
add
sub
ja
ds
push
es
push
and
ret
pop
cli
imul
sub
movsb
rorb
je
or
pop
sbb
mov
jbe
mov
icebp
cs
shlb
leave
stc
mov
xchg
fildl
cmpsl
cmpsl
push
and
mov
je
mov
mov
clc
jo
cmp
leave
cmp
inc
gs
dec
adc
out
mov
cmp
pop
xchg
insb
or
push
jb
mov
dec
sti
push
mov
lahf
pop
lods
and
cmp
sub
push
fcoms
cli
push
ljmp
data16
loop
sarl
loope
jnp
or
inc
mov
or
pop
jb
stos
gs
outsb
test
mov
dec
sahf
shrb
mov
lret
gs
out
xchg
ss
aas
testb
arpl
add
cmc
cmc
jnp
mov
aad
sub
sbb
dec
sub
mov
adc
out
cmp
dec
addb
xlat
push
and
testl
jnp
sbb
inc
push
andl
xchg
sets
adc
dec
dec
std
cmp
pop
ficompl
mov
test
jl
or
stos
and
xorl
xchg
sbb
fiaddl
mov
sar
dec
push
add
pop
xor
mov
cmp
loop
mov
loop
push
cltd
pop
mov
mov
shrb
das
mov
or
ret
xor
popa
ret
lea
push
enter
and
push
mov
xor
aas
dec
xchg
das
pushf
xor
sub
frstor
aad
push
je
inc
orl
sub
dec
sbbl
outsl
dec
push
pop
mov
add
movsl
ja
xchg
xor
testb
lret
jecxz
outsb
ds
xor
imul
js
jmp
push
leave
xchg
cmp
call
push
jmp
out
jmp
mov
leave
pop
push
movsl
es
pop
lahf
pop
shl
sti
dec
icebp
adc
test
jge
dec
and
or
sub
push
dec
jl
jecxz
pop
int
shrb
sub
fwait
mov
jg
inc
cmp
push
enter
in
jae
jge
cmp
out
xor
pusha
out
pop
out
je
adc
lods
icebp
mov
xchg
cld
mov
daa
scas
push
xchg
bound
inc
fdivs
dec
lret
pop
shll
add
mov
xor
sahf
ss
xchg
std
mov
xchg
xchg
inc
mov
loopne
mov
sub
pop
jns
push
leave
flds
push
clc
in
pop
notb
adc
cmc
dec
dec
push
sti
in
xor
sbb
or
or
sbb
mov
fcoms
push
in
adcl
iret
into
stos
push
fstpt
cltd
js
aas
stc
push
test
mov
fwait
mov
sub
inc
jp
pushfw
data16
in
mov
pop
insb
adc
fisubrl
pop
push
imul
xor
js
push
insl
xchg
push
cmp
or
mov
rorl
xor
jge
mov
in
or
ds
cmp
mov
cmpsl
pop
adc
pminub
sub
gs
cmp
xlat
pop
mov
enter
xor
sbb
iret
push
sahf
jae
imul
mov
out
jnp
mov
sub
jo
xor
inc
fwait
or
mov
cltd
cld
dec
and
addb
test
add
add
mov
iret
je
or
jge
mov
add
adc
jnp
out
ffreep
push
adc
je
imul
cmpl
xchg
clc
jns
xchg
pop
cmpsb
mov
xchg
add
enter
pop
loope
fstpl
in
push
jbe
mov
lds
push
xor
jae
pop
icebp
pop
out
or
mov
rcll
bound
addr16
cltd
shl
je
push
dec
pop
mov
add
adc
in
in
in
scas
divl
addr16
push
in
push
lcall
daa
dec
push
mov
imul
loop
mov
loopne
enter
lock
iret
bound
pinsrw
sbb
pop
inc
sub
add
mov
cmp
jecxz
mov
push
loopne
lret
pushw
inc
pop
ljmp
push
cmc
cmp
gs
cli
test
loope
add
and
sbb
js
ja
mov
inc
aas
pop
jmp
test
mov
shlb
insl
mov
test
es
push
add
cmc
xor
cmp
and
lcall
inc
mov
and
mov
sbb
or
add
out
and
aaa
in
mov
ret
inc
dec
mov
xor
push
ljmp
xor
in
imul
mov
div
imul
and
jmp
dec
sbb
sub
add
cmp
in
inc
fnop
xchg
out
or
or
in
mov
push
pusha
repnz
xor
stos
daa
inc
fwait
jg
jl
lea
add
lods
mov
ds
fsubs
sbb
call
fildl
mov
mov
pop
test
jge
test
cmpsb
inc
jl
pop
movsb
lcall
in
shrl
mov
repz
pop
inc
sbb
push
bound
push
rep
mov
inc
test
add
ret
sbb
into
pop
lret
test
xchg
xchg
loop
hlt
pusha
jmp
dec
cs
imul
scas
mov
sbb
mov
pop
repnz
jecxz
imull
mov
dec
popf
loope
xchg
cmp
outsl
mov
or
ljmp
clc
out
test
outsl
mov
adc
sub
test
sbb
dec
testl
add
cmpl
jmp
or
xor
imul
data16
pop
pop
cmpsl
cltd
and
ljmp
dec
jge
mov
jge
xor
add
les
pop
mov
sti
pusha
cmpsb
dec
imul
inc
or
rcll
cld
sub
inc
fmull
sbb
out
loop
call
jmp
scas
in
fsubrs
or
jmp
xor
scas
cmpsb
call
lahf
jo
push
sub
loope
loopne
nop
or
or
adc
les
mulb
out
insb
ja
leave
xlat
and
mov
rcrl
and
adc
pop
inc
mov
push
loop
mov
ficoms
test
or
cwtl
mov
mov
sub
push
sahf
cmp
ljmp
aas
pop
in
xor
jl
pushf
cmpsb
mov
xchg
in
ja
rolb
xchg
dec
and
out
scas
aad
inc
aas
pop
in
icebp
fs
mov
fwait
pop
cmp
adc
jbe
push
and
pop
jg
inc
shlb
mov
int3
push
push
imul
test
lret
fwait
mov
cld
fs
movsl
jo
ja
cltd
imull
xlat
jmp
jns
into
mov
xorb
mov
xor
loopne
sub
push
adc
mov
dec
std
push
inc
mov
rol
mov
xor
cltd
dec
sahf
xor
pop
mov
out
dec
jmp
mov
cmp
jp
cmp
fwait
pop
imul
mov
push
mov
or
shll
pop
push
add
cs
dec
into
inc
loopne
roll
push
int3
bound
iret
fwait
cmp
xchg
call
sub
push
loop
mov
jl
dec
ss
jg
mov
test
push
lcall
test
jno
xchg
push
jecxz
mov
pop
sub
xchg
xchg
bound
icebp
ljmp
xchg
mov
loopne
inc
fcomi
outsl
pop
bnd
jmp
inc
mov
jecxz
jge
sub
jecxz
mov
pushf
enter
adc
xor
push
mov
lods
fadd
cmp
xor
repnz
fcmovne
adc
enter
jg
loop
dec
and
ljmp
xchg
or
sbb
out
sub
xor
push
inc
out
inc
imul
jae
push
mov
jb
outsb
adc
in
in
sub
mov
test
loop
xor
outsb
inc
std
fdivs
ret
cwtl
imul
inc
lret
sub
push
mov
mov
inc
push
pushf
andl
outsl
lahf
mov
cmp
roll
sbb
push
popf
jo
jmp
push
xchg
test
filds
inc
in
jno
lret
sahf
rorl
fisubrl
testb
mov
xor
call
adc
clc
xchg
pusha
mov
xor
cmpsb
bound
or
lds
clc
jl
xchg
sahf
clc
sub
lock
insb
imull
in
inc
notb
cmpsl
fldcw
popf
js
insl
stos
icebp
fisubrl
mov
dec
or
and
imul
mov
notb
cmp
adc
je
scas
inc
ret
lock
pop
and
test
dec
ljmp
mov
fldcw
jae
clc
insb
adc
sti
mov
mov
enter
pop
in
fstps
in
or
inc
jecxz
cmp
dec
insl
sbb
sbb
cmp
sbb
gs
cltd
sbb
es
sti
ds
ss
ret
xlat
sub
lods
add
mov
xchg
stos
mov
out
lods
xor
lds
jle
inc
icebp
adc
test
lock
pop
scas
dec
leave
ret
int3
add
stc
js
out
xlat
sub
jbe
cmp
hlt
lcall
ss
add
add
pop
test
jae
push
aas
cld
pop
lods
jno
int
sbb
daa
dec
movsb
mov
and
int3
adc
fsubrl
sub
lahf
test
and
add
pusha
pop
or
lret
lret
hlt
xchg
add
popa
fcmove
jne
enter
dec
pushf
and
pop
das
test
pushf
jge
mov
movsl
xchg
and
xchg
jne
lret
cmp
inc
imul
idiv
mov
mov
das
inc
popa
add
loopne
jge
cmp
inc
jne
aaa
mov
fisttpl
fs
push
pop
push
shll
repz
imul
xor
mov
xchg
loopne
push
sub
shll
push
mov
shll
mov
jecxz
jne
fwait
stos
notl
mov
hlt
out
rorl
and
iret
lahf
sub
inc
pop
push
lea
sub
icebp
push
and
and
das
lcall
cmpsb
add
cmp
outsl
fists
je
push
pushl
arpl
push
test
es
inc
jg
hlt
sub
mov
sar
test
and
push
xlat
andl
arpl
xor
insl
push
xchg
call
push
sub
mov
arpl
les
fldenv
cmp
lods
jecxz
cmc
xchg
nop
mov
jo
das
add
push
push
mov
out
sti
and
out
jge
lock
addb
mov
mov
sub
jge
push
lods
cmpb
lds
adc
mov
sub
mov
das
and
sub
mov
sbb
frstor
sbb
ljmp
add
int
aaa
inc
dec
adc
dec
fidivs
stos
mov
ja
xchg
lods
movsb
mov
notb
cmpsl
pop
xor
or
fmull
mov
jge
lea
mov
gs
mov
repnz
fs
lock
fmulp
mov
fwait
mov
out
daa
pop
test
adc
imul
int
mov
pop
and
push
push
dec
aam
sbb
mov
popl
sbb
fadds
cmp
cwtl
repnz
push
leave
sti
sbb
jns
or
mov
xchg
shlb
cmp
bound
inc
jne
add
mov
jmp
jp
lds
adcl
mov
fbstp
test
mov
adc
dec
fsubs
sbbl
adc
jae
xchg
and
adc
bound
xlat
pop
xor
mov
lock
in
sbb
push
cmp
dec
lea
hlt
rol
decb
jae
idivb
or
pushf
cmpsl
inc
xor
mov
ret
add
pop
and
daa
mov
or
addb
adc
ret
int3
popa
in
adc
or
dec
ret
out
je
xchg
jo
xchg
add
push
sub
lcall
jge
inc
aad
pop
rcrl
sub
daa
rcr
shr
fcomi
hlt
adc
xchg
xor
ficomps
push
mov
jb
insb
and
testb
orl
lock
fldcw
jns
xchg
push
adc
cbtw
negl
mov
int
ret
lods
into
pop
or
lret
jne
xchg
lcall
xor
sbb
fiadds
cmp
fstpt
fucomp
subb
fistl
shlb
lret
into
xchg
pop
push
xchg
cli
and
ja
int
xchg
dec
scas
scas
push
push
clc
pop
outsl
and
push
mov
pop
dec
sub
dec
xor
xchg
ljmp
std
add
dec
mov
dec
test
fwait
dec
insb
xchg
test
sub
pop
test
fwait
icebp
jg
lahf
mov
cltd
sbb
push
and
ds
repnz
lret
rcr
or
or
mov
adc
syscall
push
adc
push
pop
es
inc
or
dec
dec
sub
fimuls
fnstcw
inc
inc
push
lcall
mov
jb
es
sub
ja
pop
into
mov
push
mov
push
mov
push
mov
add
adc
xchg
movsl
test
add
mov
fcmovnu
cwtl
push
aas
pop
lock
mov
je
cmpsl
push
aaa
imul
mov
rcrb
lds
mov
lock
jecxz
sub
mov
or
shr
mov
mov
pushf
dec
jp
push
sub
cmp
div
add
std
fiaddl
or
jmp
and
add
daa
adc
in
push
scas
push
dec
data16
lret
xor
lret
out
inc
idivb
stc
outsl
outsb
cmpsl
ret
ds
data16
xor
ss
imul
clc
into
xchg
dec
push
pop
les
ret
push
cmp
mov
cmpsl
inc
xchg
jns
sbb
mov
sti
dec
jmp
fldt
jnp
mov
fwait
sbb
imul
jmp
sti
mov
sub
pop
fldt
jnp
mov
fwait
sbb
imul
jmp
sti
mov
sub
pop
fldt
jnp
mov
fwait
sbb
imul
ljmp
fwait
sub
pop
fldt
jnp
mov
xor
inc
jecxz
movsb
adc
add
out
testb
cmp
inc
fsubs
hlt
jbe
inc
hlt
push
movsb
es
jbe
push
xchg
push
jae
je
je
push
and
xor
add
adc
out
data16
jbe
inc
push
push
movsb
es
test
xchg
push
jge
insl
negb
cmp
xchg
xchg
in
ljmp
test
mov
push
mull
push
adc
je
or
enter
in
jne
jp
and
and
mov
stc
mov
xlat
inc
sub
pop
lret
dec
hlt
mov
sahf
sub
inc
fsts
out
mov
jmp
xor
cmp
out
or
pop
es
add
mov
mull
and
rclb
arpl
mov
out
clc
jge
test
or
cmpsb
hlt
dec
adc
add
in
and
ja
mov
mov
or
insb
inc
test
push
or
fldenv
in
aas
adc
cltd
or
inc
aad
fldenv
movsb
out
testb
xor
cs
xchg
jbe
inc
int
mov
push
lea
mov
and
inc
leave
pop
testl
or
pop
mov
mov
dec
loope
icebp
jae
cmpsl
je
and
push
adcl
push
xchg
out
hlt
sbb
dec
pop
hlt
jae
js
mov
andb
push
mov
add
adc
in
hlt
jbe
inc
aam
movsb
es
test
xchg
push
fs
testb
and
xor
add
adc
in
hlt
jbe
inc
aam
movsb
es
test
xchg
push
fs
jecxz
xor
pop
or
mov
lret
mov
sbb
add
mov
cmp
lcall
insb
std
inc
cmp
lock
mov
aam
sbb
ret
xlat
push
xchg
rcrb
sti
iret
fsubr
scas
test
ret
cs
push
dec
xor
push
mov
mov
inc
mov
xor
lret
sahf
scas
sbb
cmpsb
add
inc
xor
sbb
negb
repnz
cli
aad
xchg
dec
nop
sub
fs
xor
mov
cmp
loope
fildl
xor
jmp
jno
mov
add
in
idivl
pop
stc
fadds
and
fidivl
sub
or
scas
inc
aaa
gs
iret
fsubl
mulb
push
mov
add
test
pop
inc
xchg
pop
adc
jecxz
lret
xchg
popf
xor
ss
add
xor
jo
rorl
enter
inc
xchg
pop
sbb
and
lods
add
jmp
or
enter
jl
addl
jnp
ds
ds
mov
dec
fwait
or
push
dec
test
in
into
xor
sub
add
in
mov
cmc
push
cmp
cmp
insb
cmpsb
jge
insb
repnz
mov
jp
popa
mov
imul
mov
or
loopne
gs
dec
dec
js
adc
stc
mov
or
cmp
je
inc
test
adc
push
push
mov
adcl
adcb
popf
orb
inc
and
xchg
pop
push
arpl
adc
out
xor
or
fnstsw
cmp
adc
xchg
mov
dec
add
cli
scas
popf
inc
cltd
jbe,pt
shl
xchg
test
mov
jae
sub
add
or
int
mov
fists
mov
arpl
cmp
xchg
mov
jbe
push
xorl
and
cmp
cli
nop
jno
test
cmp
shlb
mov
sbb
enter
push
push
es
daa
push
mov
outsl
scas
loope
in
ret
jnp
push
inc
out
push
xchg
in
out
mov
xchg
ficompl
ds
aam
pop
insb
cli
cmp
movsl
push
or
or
xchg
in
idivb
xchg
popf
adc
pop
stos
pop
cmp
push
lods
hlt
mov
bound
sahf
jp
lea
out
dec
cmp
xchg
idivl
pop
adc
cmp
mov
cwtl
cmp
xchg
adc
in
stos
xchg
push
lods
jno
jns
push
daa
xchg
arpl
push
xor
pop
ret
ss
add
daa
daa
mov
sarl
cmp
xor
ja
pop
xchg
xchg
push
imul
or
push
xchg
loop,pt
mov
clc
mov
push
popf
mov
add
pushf
jne
orb
push
repz
and
loope
jnp
xchg
mov
ret
xchg
loopne
out
jge
cmp
fistps
mov
mov
push
jnp
in
ja
shl
push
pushf
jecxz
push
cmp
mov
daa
push
adc
test
sbb
push
jae
mov
es
adc
pop
mov
insb
inc
pusha
xor
fcmovnb
or
rorb
xchg
push
popf
mov
inc
mov
cmpsl
jg
test
add
popf
dec
stos
jg
lds
nop
xchg
fwait
push
cwtl
or
push
sahf
cmc
add
cli
push
inc
xchg
pop
lret
adc
lret
bound
xchg
repz
lea
or
sub
addr16
push
mov
mov
push
push
ds
adc
and
jb
stos
mov
inc
pusha
pusha
mov
push
add
mov
jnp
data16
or
push
mov
sub
andb
inc
call
call
sub
shrl
jno
in
fdivr
cmp
test
jge
add
jg
cmc
jecxz
dec
push
cmp
fninit
jae
sub
hlt
sbb
test
xlat
in
sub
sub
aas
stc
cmpsb
in
sbb
xchg
jno
jbe
fwait
adc
icebp
pusha
push
push
cmp
jnp
shll
dec
push
push
pop
mov
push
ss
ret
ja
push
notl
ret
scas
pop
inc
iret
inc
filds
add
test
dec
mov
outsb
shrl
outsl
add
in
mov
cmp
mov
push
scas
jl
mov
adc
or
adc
jp
icebp
inc
xor
pop
rcrb
pop
in
jl
frstor
lcall
scas
ret
movsl
xchg
int
enter
sbb
jge
adc
inc
sub
in
notl
out
pop
sbb
xor
inc
mov
and
rolb
mov
ljmp
jae
loop
iret
xor
and
cmp
loopne
add
jge
lret
repz
lods
clc
xor
cmpsb
sahf
enter
cmp
jle
lods
mov
inc
ret
xchg
pop
sbb
dec
xor
ljmp
mov
in
sbb
xor
xchg
std
add
out
out
push
scas
ja
pusha
xchg
dec
xor
aas
push
mov
in
idivb
popa
cmpsb
int
sbb
ret
js
push
mov
pslld
sub
xchg
mov
xlat
pop
jle
lret
repz
icebp
push
push
lret
int3
push
pop
out
and
xor
out
xchg
xor
movsl
leave
cmp
sub
cmpsb
dec
cmpsb
cmp
pushf
mov
inc
je
scas
gs
outsl
lds
fnstenv
adc
mov
xchg
popa
cltd
jge
fadd
nop
ret
inc
adc
add
dec
data16
in
jno
jb
cmp
mov
jecxz
xor
hlt
xchg
sbb
in
popa
sbb
xor
jae
mov
test
loope
or
incb
jo
xchg
dec
mov
push
xchg
jmp
mov
sub
aas
jge
lret
and
rorb
dec
scas
iret
popa
add
cli
mov
cmp
jecxz
cmp
and
xor
add
cwtl
jmp
mov
adc
lods
fsts
sbb
xchg
push
pusha
scas
and
pop
jno
xor
adc
xchg
mov
push
in
les
cli
hlt
les
dec
inc
mov
fwait
int3
mov
mov
testb
add
scas
into
popf
mov
ss
cmp
sbb
or
les
mov
popf
pop
dec
pop
jl
push
out
jnp
adc
cmp
and
lcall
mov
repz
ret
ja
add
jb
aam
aad
inc
add
or
mov
cs
out
in
inc
or
insl
int
or
sub
pop
mov
es
jge
cmpb
lods
jo
lcall
call
shrl
lds
or
das
ret
cmp
dec
push
pop
cmp
adc
movsb
addr16
jb
pop
jge
or
lea
push
inc
mov
push
lds
xlat
xchg
push
aad
jge
add
jo
sbb
xchg
sbb
jo
notb
and
xchg
leave
into
push
test
imul
stc
xor
push
sub
movsb
loope
cmp
aad
dec
js
pusha
out
std
mov
dec
call
sbb
cmp
or
nop
add
push
out
cmp
jmp
push
sub
sbb
sub
mov
rcrb
jle
and
in
xor
inc
stos
inc
pop
imul
mov
sub
push
xchg
or
add
add
jl
mov
test
xor
mov
xchg
add
mov
push
notl
or
mov
xor
mov
dec
pop
stc
xchg
iret
loope
xchg
pop
jo
push
scas
xor
outsl
and
fs
inc
cmp
and
popf
lock
mov
and
mov
scas
test
insl
stos
jge
jne
pop
mov
into
sbb
sbb
inc
adcl
or
loop
mov
insl
adc
push
orl
loop
sbb
dec
les
call
ficomps
adc
loopne
out
pop
cmpsl
mov
arpl
jae
out
aam
jo
xchg
push
adc
dec
push
ftst
in
lods
adc
cmp
data16
adc
cmpb
add
insl
cmpsl
push
fsubrl
cmpsb
cmpl
jbe
or
mulb
pusha
shl
jnp
add
fsubp
xlat
roll
cmp
icebp
and
mov
pop
adc
push
sbb
and
cld
cmpl
out
cmc
pop
push
and
sub
test
ret
mov
mov
xchg
pop
and
or
mov
sub
push
addl
jnp
pop
mov
dec
sub
lret
lret
and
jge
jne
or
inc
popf
movsl
dec
push
push
mov
add
out
mov
lods
xchg
mov
add
add
scas
mov
shufps
and
and
out
push
adc
add
sbb
aad
imul
daa
adc
cmp
imull
xchg
scas
orl
or
dec
jno
lret
imul
or
and
aas
jnp
test
and
flds
jmp
mov
mov
xor
out
test
dec
sub
into
push
pop
dec
mov
in
lahf
sbbl
jmp
pop
into
jmp
aad
out
into
jns
or
jp
dec
mov
adc
loop
lahf
in
mov
inc
inc
mov
fwait
push
xlat
fsubrs
sub
xchg
add
arpl
pop
xor
lahf
pushf
dec
mov
jae
sbb
sbb
mov
inc
mov
xlat
sahf
fucomi
xlat
test
pop
scas
and
enter
sbb
popa
dec
xlat
cmp
loopne
addb
stos
mov
inc
out
std
mov
adc
xchg
adc
rcl
loope
adc
add
jmp
adc
mov
aad
pop
jl
stc
aam
inc
aaa
nop
adc
add
js
mov
xchg
inc
push
push
out
xor
pop
ret
sub
push
jno
hlt
popa
orl
jb
mov
ret
addr16
jno
mov
jb
dec
lcall
jle
gs
loope
sub
mov
mov
add
lds
test
sub
adc
aam
aam
icebp
mov
xor
insw
xchg
pop
ja
aas
push
push
inc
sub
aad
imul
cmp
pop
adc
aaa
cmpsb
inc
popf
inc
leave
orb
cmp
add
pop
adc
repz
sbb
stos
push
daa
xchg
inc
mov
in
mov
out
in
push
cltd
mov
iret
dec
sub
sahf
inc
insb
or
loop
pop
in
shl
gs
pop
pop
in
ret
sbb
mov
mov
push
mov
adc
push
or
loop
xor
xchg
inc
and
jp
cmp
ss
lods
pop
mov
jp
adc
test
and
imul
dec
cmp
in
pop
cmc
push
add
sar
push
aaa
and
mov
mov
ss
sub
adc
and
dec
leave
mov
mov
mov
mov
std
insb
push
or
sbb
out
mov
shrb
sbb
aam
pop
inc
bound
das
sub
mov
pop
mov
and
xor
lods
cmpsl
jle
cmc
popa
sub
inc
or
push
in
mov
xor
insb
out
mov
dec
loop
sub
pop
sub
stos
mov
jns
ja
in
std
xchg
xor
add
sub
outsl
adc
test
out
sti
int
rorb
je
inc
repz
push
lods
aaa
xor
xchg
pop
outsb
inc
jecxz
call
fisubs
dec
aaa
nop
int
cld
rcrb
inc
cmp
xlat
inc
mov
xchg
jg
imull
loopne
xchg
lods
cltd
mov
test
stos
dec
enter
imul
xor
adc
mov
sbb
leave
jo
in
jb
xor
sbb
pop
icebp
aaa
pop
mov
push
xor
mov
mov
pop
cld
mov
shlb
in
dec
push
je
mov
add
ficomps
and
je
add
pop
loopne
push
mov
int3
enter
add
les
sub
jb
lcall
sbb
inc
push
in
jmp
lods
mov
push
mov
scas
das
mov
popa
push
adc
and
repnz
push
adc
mov
and
adc
jmp
fdivs
sbb
xchg
adc
xchg
sub
mov
ss
sbb
fsubrl
and
sub
xchg
xorl
aaa
cmpsl
lds
mov
or
push
fdivp
scas
mov
cli
jp
clc
push
push
sub
cmp
loop
daa
pusha
hlt
bound
mov
fidivrs
push
sbb
fs
sub
lcall
jp
sub
and
xchg
sbb
inc
addl
sahf
sub
shlb
je
sbb
imul
fildll
in
cmpsb
jecxz
imul
hlt
pop
pushf
lret
sbb
pop
lret
mov
or
arpl
loopne
jb
xchg
fiaddl
push
add
pop
les
mov
insl
mov
and
pop
push
or
or
push
dec
daa
gs
cld
cmp
adc
push
repnz
xchg
add
inc
mov
mov
ja
pop
push
jl
or
jb
jmp
movsl
dec
and
jae
and
sub
fimuls
and
lock
mov
inc
stos
mov
scas
out
mov
sub
xchg
bound
dec
jge
push
dec
mov
mov
adc
aad
mov
rolb
mov
or
pop
mov
lods
mov
mov
mov
push
cmp
out
xchg
std
shrb
sub
sub
sbb
insl
jbe
popl
rorb
push
fsubl
mov
push
fistl
icebp
inc
sub
mov
and
mov
pop
popa
xchg
add
ss
cmp
inc
cs
not
xchg
in
mov
cwtl
sub
shr
mov
ja
xchg
jp
inc
push
jmp
mov
enter
and
popa
aad
push
ss
shrl
push
out
out
inc
jp
sarb
sub
lcall
pop
ljmp
mov
out
daa
jmp
outsl
jb
inc
mov
jns
mov
lret
sbb
lods
pop
mov
dec
mov
xorl
add
mov
lods
cmpsl
std
icebp
sub
dec
cli
add
iret
xchg
jae
xchg
mov
and
dec
repnz
jecxz
cld
pop
ss
and
push
loope
stc
and
cmpsl
or
aaa
leave
jbe
push
test
jnp
xchg
in
xchg
cltd
aam
jmp
mov
hlt
sbb
daa
mov
clc
aaa
mov
andl
push
pop
scas
pop
mov
fiadds
sbb
popf
sub
and
movsb
cli
cmp
test
cmpsl
loopne
lcall
into
js
jae
out
out
sahf
ret
aam
dec
cwtl
push
mov
aam
cmc
xor
orl
bound
add
cmp
mov
mov
addr16
int3
dec
ss
lds
push
loop
stc
or
test
jns
add
arpl
adc
fcompl
push
add
std
nop
xchg
pop
testl
push
shlb
add
inc
cmp
lcall
jae
sti
ffreep
mov
cwtl
aas
mov
cmp
stos
fwait
add
mov
push
sbb
in
adc
push
add
mov
int3
clc
je
push
and
add
cwtl
outsl
pop
mulb
in
xchg
dec
ret
sti
insl
mov
mov
mov
inc
xor
or
pop
mov
pop
cmp
cltd
jg
clc
aaa
mov
movsb
and
mov
ljmp
loope
stos
mov
adc
shl
or
jb
mov
inc
sahf
sarl
and
in
push
addr16
add
lret
adc
inc
mov
je
out
cmp
add
mov
push
lcall
mov
ljmp
rorb
outsb
mov
out
ret
push
mov
pop
ss
push
shll
fcomip
lahf
and
and
fstps
shlb
dec
ret
mov
pop
jecxz
sbb
leave
adc
mov
or
push
lock
adc
or
push
pop
call
cli
in
mov
cmc
push
cltd
mov
es
sbb
push
pop
mov
inc
lahf
and
jp
std
jle
dec
mov
or
in
popa
push
mov
mov
jns
push
adc
insb
mov
in
sahf
lret
dec
shlb
sub
xchg
sub
cmp
lds
pusha
mov
test
fwait
inc
pop
push
inc
ja
push
fdivl
fcompl
roll
addr16
push
repz
lods
jno
mov
in
sbb
mov
loop
or
and
xchg
sub
push
push
cmpsl
pop
xor
cmc
je
pop
jns
push
mov
imul
push
in
or
icebp
pop
rcll
and
adc
xor
inc
cli
pop
clc
sbb
data16
aas
push
loopne
psubusb
test
push
push
sub
pop
daa
aad
push
mov
lods
or
mov
mov
loop
in
sub
mov
mov
push
orl
nop
jmp
test
test
cmp
mov
and
mov
dec
xor
jbe
fidivrl
or
mov
xor
daa
lods
stc
enter
mov
cld
or
hlt
xor
fstpt
push
test
mov
sub
ret
cmp
dec
test
sti
dec
test
pop
jecxz
inc
lods
outsl
das
lret
sbb
add
mov
sbb
mov
cld
add
test
out
and
sub
push
test
jmp
shll
shl
out
push
inc
pop
outsl
mov
or
or
aaa
out
shll
pushf
sub
push
inc
jno
ja
sbb
xor
fdivrs
sbb
out
movsb
movsb
pop
pop
notl
iret
and
lcall
test
xor
out
jae
or
ja
lods
jmp
popl
lret
add
or
jle
push
push
aad
dec
in
out
mov
sub
adc
popf
push
jbe
dec
loopne
into
fdivs
and
fldenv
outsb
rolb
push
ds
cmp
mov
cmp
ret
rcrb
ljmp
pop
sub
in
cs
decl
rorl
rcrb
adcl
and
int3
jle
push
cmpsl
jne
lods
pop
daa
pop
aam
mov
xor
cltd
fdivrs
add
inc
ljmp
jne
hlt
and
add
aas
push
xor
push
add
mov
adc
or
lahf
out
popa
movb
xor
out
pop
jb
ret
sbb
pop
adc
or
sub
inc
dec
adc
cmp
mov
add
mov
jns
adc
incb
inc
repnz
push
pop
aas
lds
pop
aam
push
gs
aam
or
scas
arpl
inc
mov
mov
fwait
mov
cmp
adc
daa
aas
loopne
andl
fnstenv
addr16
xchg
inc
add
or
gs
out
int3
add
xchg
push
loop
iret
mov
and
cmp
dec
or
inc
cs
lret
mov
mov
repnz
inc
and
leave
ljmp
rcrb
mov
imull
cli
push
pop
scas
sub
fwait
lahf
aam
mov
test
into
push
add
sbb
loope
loope
out
stc
cmp
ficoml
sbb
fwait
lret
out
jge
xchg
pusha
rep
jle
in
push
dec
je
cmp
arpl
cmp
xchg
out
andl
call
loopne
aad
loope
nop
icebp
pop
push
inc
lods
jne
sub
out
rcrl
pop
sub
and
xor
insl
in
std
imul
mov
jnp
fcompl
icebp
loop
mov
testl
dec
fdivl
hlt
dec
add
fsubrs
pop
pop
out
iret
cmovne
lcall
add
adc
hlt
add
dec
pop
lods
shll
shll
mov
jge
lods
test
ja
lahf
sbb
pop
inc
enter
je
pop
sub
adc
aad
inc
fstl
sahf
xchg
dec
mov
adc
sub
rorl
jbe
pop
call
aaa
pop
inc
xchg
jecxz
mov
mov
test
insl
and
hlt
and
out
out
outsb
dec
sarb
pushf
test
pop
fimull
mov
push
stc
pusha
sbb
call
mov
push
and
xor
add
adc
in
hlt
jbe
inc
aam
movsb
es
test
xchg
push
fs
testb
and
xor
add
adc
in
hlt
jbe
inc
aam
movsb
es
test
xchg
push
fs
testb
and
xor
add
adc
in
hlt
ja
inc
aam
movsb
daa
mov
test
movsl
push
push
out
divb
push
shlb
xor
test
xchg
imul
inc
aam
shrl
imul
cmpb
jns
ss
call
pop
add
add
add
push
imul
xor
pop
add
add
add
sub
sti
add
push
add
add
add
add
add
add
add
add
add
mov
add
add
and
add
and
pop
add
add
aaa
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
jl
inc
add
add
add
mov
ds
add
jecxz
mov
add
add
add
lods
add
add
mov
lea
add
add
dec
add
add
add
push
cmp
add
add
add
add
push
add
add
add
add
add
add
pop
add
add
add
add
stos
add
xchg
add
add
add
enter
xor
inc
add
lea
mov
aaa
add
add
add
xchg
add
add
mov
add
add
add
add
add
in
add
pop
data16
add
add
xor
xchg
add
daa
add
add
jo
add
and
push
add
add
add
fadds
fwait
add
add
inc
add
add
add
add
add
add
add
pop
add
pop
push
add
dec
add
add
lea
pop
add
dec
add
add
add
add
add
xchg
add
adc
add
add
add
add
add
add
xor
cmp
fadds
push
add
and
faddl
cmp
lea
push
add
add
add
cmp
add
mov
pop
add
add
add
add
add
add
inc
add
scas
add
pop
add
push
add
lea
imul
rolb
add
add
add
add
add
xchg
add
add
xchg
add
add
cld
add
cmp
pop
add
add
push
add
add
inc
add
add
jecxz
mov
stos
add
add
add
data16
add
or
add
pop
add
add
xor
add
add
add
aaa
add
add
add
add
xchg
add
push
add
sub
scas
add
add
add
add
add
add
add
dec
add
add
add
add
adc
dec
add
xchg
add
add
add
fildl
incb
test
and
adc
adc
les
add
add
add
add
add
add
mov
add
add
scas
add
add
and
sub
sub
inc
add
add
cmp
stos
add
add
add
add
loope
jno
adc
sub
add
loope
dec
add
xor
adc
or
add
adc
pop
add
add
add
add
sub
sbb
sbb
xchg
add
add
add
test
inc
add
pop
add
add
add
add
add
es
add
add
loope
popa
add
add
add
add
lcall
fldcw
adc
ud2
cmpsb
outsl
iret
and
sahf
xchg
cmc
test
lds
int
xchg
scas
outsl
adc
nop
jmp
adc
or
inc
out
adc
cmp
pusha
std
sbb
fistl
and
jae
inc
insl
test
sarb
pop
popa
jecxz
push
and
stos
mov
mov
adc
mov
mov
in
pop
mov
in
sarl
dec
mov
data16
pushw
mov
in
cmp
std
mov
dec
jne
sbb
pop
xchg
loopne
or
pop
es
mov
xchg
cmp
hlt
mov
xchg
xchg
dec
lea
mov
cmp
pushf
dec
push
out
or
inc
mov
ret
mov
push
fdivrs
dec
shrl
popf
push
inc
mov
repnz
lds
xchg
pop
fs
inc
sub
cmp
fsubl
add
test
xor
and
jle
adc
stos
fistl
rcrl
cmpsl
or
out
fimull
test
pop
and
mov
sbb
pop
in
inc
ss
and
and
insl
sbb
push
rcl
mov
ja
adc
lock
push
js
lret
jecxz
in
mov
adc
stos
push
mov
and
cmp
jecxz
inc
js
mov
mov
or
xor
aas
scas
pusha
in
and
xchg
cmp
sub
and
lahf
dec
sbb
adc
push
in
jge
std
add
add
sub
add
lods
movsl
rcrl
mov
and
inc
in
rorl
xchg
sbb
movsb
mov
xchg
and
jae
add
cmp
push
add
push
fisubl
sarb
rol
adc
and
lds
sbb
or
mov
rol
lods
and
jp
outsl
pop
iret
cmp
ss
mov
and
sub
jmp
lds
pshufw
mov
imul
lock
icebp
or
sub
mov
or
sub
fsubs
mov
outsl
jo
jb
mov
jl
pop
pop
push
movsl
imul
sub
jg
aas
sahf
sbb
int
les
cmp
push
mov
fwait
jbe
ret
negl
pop
jno
sbb
enter
rclb
das
mov
push
mov
adc
popf
or
fsubs
fistps
xor
pop
jno
sbb
cli
popf
dec
xor
and
adc
jl
xchg
pop
fstpl
adc
adc
pop
sbb
rcl
mov
icebp
add
inc
sub
test
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
