adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
pop
js
push
adc
pop
cmp
fnsave
in
enter
test
cwtl
lods
mov
dec
push
sbb
sbb
call
popf
aam
test
cwtl
lods
mov
dec
push
sbb
sbb
lret
mov
out
push
test
adc
dec
and
xor
dec
pop
sbb
sbbl
pop
popf
xor
std
popf
mov
sub
loopne
add
int
cmp
add
mov
pop
jo
push
popa
mov
js
gs
in
inc
xor
inc
jmp
pop
xchg
fcomps
dec
dec
or
pop
sbb
jb
neg
pop
fstl
jo
lret
sub
in
mov
or
cmp
or
cmpsb
mov
mov
int
xor
jmp
test
cwtl
mov
in
dec
lea
in
int3
loopne
adc
mov
mov
cwtl
lds
jge
insl
dec
sbb
sbb
call
popf
mov
lods
loope
jl
sub
pop
or
pop
inc
inc
pop
pop
insb
pop
pushf
or
mov
stc
loope
pop
sbb
or
push
popa
fs
mov
xchg
mov
fldcw
xor
sub
adc
insb
sub
cmp
clc
int
std
fsubr
enter
test
cwtl
lods
mov
dec
push
sbb
sbb
call
popf
mov
lods
mov
call
mov
dec
mov
dec
mov
mov
lods
adc
cmp
jl
xor
sbb
imul
cmp
mov
cmp
out
fisttpl
imul
outsl
fwait
stos
in
sbb
pop
rep
push
fwait
pop
and
inc
out
mov
mov
leave
inc
jnp
sbb
push
cmp
in
les
fcom
adc
inc
rorl
xor
adc
mov
arpl
repz
jns
sub
mov
and
dec
scas
nop
or
xchg
mov
int3
xchg
mov
xchg
mov
insl
idivb
xlat
repnz
mov
sbb
push
jl
iret
or
cmp
sub
or
pop
and
out
push
pop
push
xchg
fiaddl
test
adc
psubusw
adcl
mov
jne
loop
mov
data16
out
icebp
iret
xchg
mov
loope
in
xor
out
add
pop
scas
mov
ret
and
pop
jge
fidivl
popf
leave
outsb
cltd
push
clc
push
movl
sub
lret
jp
inc
das
mov
js
pop
ret
or
push
into
fwait
enter
mov
dec
push
int3
lock
sub
popf
mov
inc
push
std
outsb
in
pop
cmp
xchg
movsb
dec
fildl
aam
rcl
loop
adc
ret
outsb
shrl
and
push
clc
mov
jge
inc
aaa
negl
ret
jbe
rcrl
cltd
mov
scas
nop
lods
dec
inc
add
fisubs
les
push
sub
sar
fs
fs
ds
and
pop
es
mov
xchg
stos
shlb
or
pop
add
faddp
inc
in
push
xchg
jl
inc
mov
sahf
xchg
mov
orb
xor
jge
and
or
or
loop
lahf
loopne
mov
dec
nop
enter
dec
cltd
cltd
outsb
mov
inc
mov
push
lahf
imul
out
jp
jns
loop
mov
jo
mov
mov
fnstsw
inc
or
mov
mov
addl
xor
jecxz
jno
pop
mov
add
in
mov
pop
cmpsl
push
jo
xchg
mov
ljmp
aam
add
dec
jnp
pop
push
xor
jno
sub
loopne
cmc
std
pop
xchg
call
lahf
xlat
stc
push
inc
or
stos
xor
repnz
xor
mov
imull
and
mov
xchg
scas
stc
push
or
push
adc
pop
xchg
add
jge
out
sbb
adc
jb
or
ljmp
hlt
push
adc
adc
movb
sahf
lods
push
scas
movsb
gs
faddp
fbld
lcall
in
es
or
xchg
cltd
fsubrp
sub
lret
mov
out
out
push
mov
inc
sub
gs
pop
add
lods
or
mov
in
stc
mov
test
mov
and
push
pushf
mov
ljmp
mov
sbb
out
jae
popa
cmpb
or
lahf
in
pop
push
pop
xor
flds
mov
xchg
adc
lret
pop
std
cmp
pushf
cmp
popf
pushl
fdivrl
pop
xor
push
jg
xchg
and
data16
jle
xchg
and
shlb
xchg
push
jb
jns
icebp
daa
int
popf
popa
mov
push
inc
lret
popa
pop
insb
add
int
and
jne
rcll
pop
sbb
stos
xor
aad
xchg
mov
imul
jns
xor
test
notb
in
js
and
jg
inc
mov
cmp
jmp
mulb
inc
cmpsb
sub
and
icebp
mov
aas
jo
ret
or
in
call
scas
cmp
lods
jge
jae
clc
movsl
jb
dec
jns
negl
sub
inc
mov
mov
out
pushf
adc
jb
cmc
out
jmp
and
mov
mov
lahf
mov
push
cmp
pop
fidivrs
sarb
xchg
sub
mov
sub
xchg
aaa
aad
inc
stos
cltd
mov
dec
lret
push
mov
stc
mov
pop
push
mov
mov
popa
mov
adc
lahf
pop
jle
jbe
stos
movsl
sub
jmp
add
negl
sub
xor
or
pop
mov
sti
dec
into
scas
sub
das
cld
in
xchg
ret
cmp
push
mov
aad
int3
sti
inc
das
push
sbb
xor
inc
movsl
mov
pop
fldt
inc
jecxz
repnz
mov
mov
mov
jg
jns
shrl
jne
les
je
js
jge
xor
sarb
mov
dec
sbb
js
or
sub
and
xchg
bound
push
pop
dec
add
paddusb
lahf
sub
cmp
sub
dec
ret
data16
out
ret
inc
cmpsl
jle
mov
sub
mov
mov
inc
and
xor
rolb
test
fldl
inc
stos
push
push
mov
sbb
cmpl
and
es
and
cmp
cltd
dec
cmp
cmp
sti
mov
daa
ficomps
xchg
sub
fucomip
fstps
in
mov
mov
jle
push
fsubl
aad
clc
sub
mov
jno
sbb
jae
inc
lds
cmpsb
xchg
dec
jge
inc
add
iret
xchg
xor
enter
xchg
ja
mov
mov
out
insb
mov
lds
icebp
pop
sub
pop
xchg
sbb
add
dec
jp
shll
lret
adc
jmp
push
dec
push
xchg
mov
std
mov
mov
push
mov
stos
jle
inc
xchg
mov
fistl
sub
sub
push
add
sahf
stos
mov
loope
lock
lods
divb
das
lds
cmc
pop
push
aaa
outsl
ds
cmpsl
pop
cltd
cwtl
lret
xor
lock
ja
es
lods
lret
testb
push
jge
dec
jnp
jnp
sub
xchg
and
lock
in
pop
call
and
imul
test
mov
js
xor
pop
adc
lret
xchg
dec
lahf
test
jnp
cmpl
add
push
mov
cmp
rcr
int3
jno
dec
push
inc
mov
jle
pop
jle
and
sbb
pop
sub
sbb
inc
mov
aam
mov
or
adc
mov
andb
sub
or
hlt
jno
xchg
pop
call
add
pop
cmp
cmp
rorl
dec
or
stos
push
fmul
mov
aas
in
adc
add
icebp
jbe
rolb
jno
inc
mov
out
push
leave
in
sub
mov
push
mov
lret
repz
outsl
sub
push
sub
mov
cmpsb
loopne
adc
ret
jbe
push
and
movsb
push
jno
leave
push
inc
xchg
sub
mov
mov
pop
push
sub
test
dec
cmpsb
mov
cmp
repz
int
sub
les
mov
test
pop
mov
adc
cmp
xor
xor
dec
add
das
xor
ljmp
push
out
and
outsb
into
scas
mov
mov
mov
in
shrb
sbb
inc
incl
stc
sbb
cmpb
sbb
insb
popf
cmp
bound
mov
jo
inc
enter
inc
cwtl
add
pop
mov
shlb
dec
jmp
outsb
mov
loope
xor
add
xchg
mov
xchg
pushf
cld
xchg
lds
cmp
xchg
and
xor
jb
xor
sub
xor
fnstsw
cmp
xchg
scas
loop
addl
fwait
pop
cmp
jbe
push
inc
aaa
cmc
ret
inc
aas
pop
adc
daa
dec
pop
test
ficomps
jne
sbb
pop
shrb
pop
fsubs
mov
loop
and
or
aas
icebp
adc
inc
inc
sub
sub
popf
dec
in
inc
add
pop
push
in
pop
pop
mov
imul
inc
mov
aad
loop
test
jle
mov
and
push
push
mov
repnz
mov
xor
jl
xlat
jne
fsubrl
sub
into
leave
in
rorl
out
sub
data16
insb
dec
mov
stos
add
adc
mov
mov
mov
pop
aad
lcall
shrb
sub
ficomps
orb
add
std
popa
mov
and
xchg
jns
mov
bound
sbb
cmp
sar
test
mov
dec
push
movsb
je
cltd
int3
loopne
pop
out
mov
mov
sti
adc
inc
dec
ja
xchg
out
pop
or
cmp
inc
imul
push
mov
imul
push
cwtl
add
mull
or
dec
dec
adc
sbb
gs
imul
xor
pop
adc
jl
xchg
addl
inc
sti
faddl
push
or
test
lods
cmp
jge
mov
pop
popa
sub
or
enter
mov
mov
shrb
xlat
das
pop
aaa
mov
jo
cmc
dec
cmp
cmpsb
cs
dec
or
dec
test
out
and
sub
sahf
push
inc
repnz
in
jae
loope
jbe
pop
push
mov
dec
popf
cmpsl
cmp
insl
std
das
mov
cwtl
pushl
push
fildll
adc
sbb
and
outsb
pushf
lret
loope
inc
xor
ds
hlt
or
decl
adc
push
dec
push
cmpsb
shl
loop
ficomps
hlt
orl
xor
push
inc
mov
adc
fcoml
mov
xchg
stos
dec
xchg
jecxz
imul
pop
jg
or
cmpsb
movsl
std
sbb
sbb
loop
cwtl
iret
ja
inc
push
xchg
push
mov
sti
mov
dec
cwtl
aaa
sahf
jle
push
jb
jp
push
or
fcom
mov
mov
push
ret
dec
cmp
clc
es
jmp
mov
lock
inc
add
mov
in
loopne
outsl
sbb
daa
mov
xchg
mov
shll
pop
push
repz
outsb
xchg
xor
or
sub
xlat
xchg
sub
out
imul
and
xchg
and
scas
icebp
fcompl
jp
rcrb
xchg
push
push
jno
fstpl
adc
int3
xor
pop
push
ss
or
xchg
add
or
and
mov
call
sbb
nop
test
movsb
mov
dec
inc
push
ret
push
xchg
sahf
inc
sti
pop
test
mov
jo
inc
lret
push
pop
pusha
adc
or
and
mov
push
cmp
subl
jg
xor
cmc
pop
inc
push
fistl
pop
push
and
adc
fstpt
and
enter
lret
insb
scas
inc
push
pop
cmp
orl
les
or
dec
and
imul
mov
mov
add
jmp
xor
jb
xchg
ljmp
xchg
jmp
lahf
xor
lret
dec
mov
xor
addl
xchg
adc
mov
adcb
popf
mov
pop
cmp
out
test
inc
sub
mov
inc
adc
lock
pop
in
lret
clc
pop
jge
pop
jae
mov
sti
mov
pop
adc
mov
mov
les
jecxz
daa
sbb
repz
push
sub
xchg
iret
sbb
xor
add
xlat
jmp
enter
add
lods
sbb
ss
test
xchg
add
frstor
fwait
in
aaa
stos
shll
jae
cmpsb
sub
mov
sub
ror
into
dec
jle
jo
rcrl
xchg
test
jmp
aam
xor
loop
dec
sbb
fcomps
jne
xchg
fstp
mov
js
adc
cmp
push
adc
shlb
add
lods
and
in
jge
xchg
test
mov
xchg
aas
ljmp
leave
jecxz
out
jl
ds
or
pop
mov
jne
mov
mov
add
jmp
cs
push
mov
mov
fiadds
cmp
xchg
xchg
test
mov
xchg
test
int
mov
mov
fists
fists
dec
out
test
sub
es
mov
and
orl
pop
adc
je
sbb
xchg
insl
mov
push
lock
test
lds
add
xor
rcr
sahf
xlat
xor
stos
call
sbb
aaa
inc
lock
insb
inc
ja
add
inc
xlat
insl
mov
jno
js
dec
into
cmpsl
lds
jge
xlat
aad
xchg
or
sub
ss
lret
in
push
mov
push
fcmovnbe
adcl
sub
add
and
push
adcl
mov
xchg
cwtl
mov
imul
push
fistpl
rclb
in
lock
add
in
addr16
ret
in
inc
sbb
ja
mov
enter
and
dec
adc
aaa
and
pop
cmp
mov
push
leave
subb
cmpl
nop
mov
enter
cmpsb
shl
movsl
xchg
insb
xchg
mov
loopne
lock
inc
rcl
fidivrl
int
imul
cli
add
sti
les
out
dec
int3
loope
sub
lahf
jbe
mov
ret
int3
xchg
insl
jle
adc
inc
inc
push
mov
push
out
sbb
mov
or
xor
or
int
jbe
fwait
dec
test
cmp
push
mov
mov
rorb
rol
lods
ss
ret
lahf
in
and
jnp
fnstcw
add
adc
lock
loope
imul
jp
sub
xor
sub
stos
sbb
aaa
aas
add
xor
ficoms
sub
sbb
jae
mov
or
call
repnz
fcoms
les
xchg
fsts
lods
mov
fcomip
ja
je
in
aaa
xchg
pop
mov
test
mov
mov
in
leave
add
push
roll
cmp
mov
testb
decl
shlb
and
sub
or
jp
clc
outsb
shlb
scas
test
mov
mov
and
jle
insl
lods
aaa
bound
add
inc
adc
lods
das
inc
out
or
xchg
or
jns
push
xor
push
add
cmp
fdivs
and
push
lcall
mov
sub
in
jb
adc
cmpsl
cli
rorb
mov
js
repnz
popf
aas
push
movsb
mov
mov
add
mov
xchg
neg
mov
inc
add
out
mov
out
push
cmp
push
adc
mov
push
dec
movsl
lcall
cwtl
jmp
daa
inc
shll
dec
aaa
enter
adc
jno
mov
pop
sbb
hlt
out
push
xchg
pushf
pop
enter
inc
dec
mov
adc
mov
or
xchg
lahf
fsubr
out
push
cmc
aam
inc
idivb
sbb
mov
xor
es
lods
or
xchg
inc
push
and
cmp
and
jne
sub
sub
mov
fisubl
in
repz
sti
cwtl
mov
mov
mov
jnp
sti
imul
lods
push
adc
fbld
adc
hlt
or
mov
xchg
mov
push
push
sub
fwait
pushf
xor
repnz
lcall
nop
jns
ret
scas
leave
out
std
or
lcall
sbb
lds
jae
adc
mov
xchg
sub
iret
lods
in
fcmovnbe
lret
aam
insl
mov
add
repnz
lret
int
scas
xlat
lds
mov
mov
dec
jnp
add
js
iret
pop
xchg
int3
push
xor
mov
mov
sbb
fdivrl
testb
inc
fs
push
cwtl
xchg
test
mov
sbb
mov
movsl
sub
and
xchg
sbb
push
outsb
add
sbb
mov
lea
xor
xchg
add
mov
popa
mov
in
pop
pop
dec
lock
inc
sub
iret
fisubs
cmp
xlat
pop
cmp
jnp
in
and
mov
pushf
sbb
icebp
popf
pop
or
ss
push
imul
popa
lods
or
pusha
sbb
shrb
insb
mov
xor
mov
and
repnz
push
push
jmp
hlt
movsl
aaa
mov
or
cmpb
push
out
push
pop
scas
jb
or
cld
stos
out
sarl
nop
das
bound
adc
xor
xor
lock
test
mov
xchg
push
test
inc
mov
cli
push
mov
mov
aad
sbbb
mov
shr
rcrl
adc
lds
sarl
test
lds
xchg
movsl
daa
push
lods
testb
popa
xlat
iret
mov
add
pop
pop
mov
inc
push
lea
xchg
lcall
outsb
test
std
jb
or
repz
aas
popf
test
xor
inc
fsubrl
sub
mov
pop
mov
xchg
cltd
fisttpl
cmp
dec
mov
lret
inc
or
je
imul
loope
test
sarb
dec
test
ja
dec
sar
pop
jp
shll
pop
lods
xchg
cli
inc
lret
outsl
mov
push
push
or
das
inc
scas
mov
mov
lods
jnp
mov
nop
int
popf
or
jo
xorb
in
mov
xchg
xchg
imul
mov
push
mov
adc
das
les
xchg
ret
sbb
out
daa
or
int
cmp
nop
inc
cmp
leave
ljmp
and
sbb
jo
imulb
adc
sub
shll
daa
les
add
std
mov
jmp
mov
jecxz
fnstenv
cltd
cmpb
scas
rcrb
or
and
sub
gs
rcrl
and
call
lds
in
in
les
inc
dec
mov
and
arpl
jae
hlt
inc
das
jmp
xchg
mov
jle
pushf
pop
inc
push
and
jae
mov
in
call
dec
push
mov
sbb
dec
scas
cmpsl
sub
lods
sbb
scas
xor
aaa
pop
cwtl
int3
push
leave
dec
push
xrelease
bound
or
adc
out
cmp
lcall
das
bnd
out
gs
xor
cltd
dec
cmpsb
pop
aaa
mov
inc
and
imul
pop
repnz
fiaddl
int3
xor
imul
adc
rolb
jo
icebp
jbe
data16
imul
std
pop
mov
jle
orl
sub
int3
xlat
lods
push
mov
popa
test
les
inc
sbb
aad
mov
js
aad
mov
roll
subb
in
out
mov
fstpl
add
outsl
sub
pop
inc
mov
mov
aas
jecxz
mov
inc
jge
ret
adc
inc
and
les
test
fwait
adc
jnp
xchg
add
xorb
sub
repz
cmp
mov
lods
test
jmp
inc
aam
push
mov
pop
mov
int
gs
out
jge
add
sbb
sbb
test
fdivrs
in
sahf
xor
adc
xlat
adc
mov
dec
stos
lods
je
movsl
jg
into
inc
push
push
pop
es
dec
and
mov
scas
cmpsl
push
push
jno
insb
daa
add
and
inc
and
shlb
cmp
outsb
dec
mov
mov
cmp
dec
and
arpl
fbld
push
sub
lock
mov
ja
push
lret
sbb
pop
mov
sahf
push
cmp
orl
into
dec
in
out
jno
mov
fidivrs
lods
int
mov
data16
cli
pop
adcl
test
mov
xor
sarl
adc
xchg
in
sbb
repz
stos
mov
int
icebp
je
leave
fs
jo
std
xlat
dec
mov
mov
sti
ljmp
lea
bound
or
jns
addb
hlt
inc
sbb
jecxz
adc
jmp
out
ss
call
rorb
inc
sbb
not
ss
cli
iret
sti
dec
cmp
mov
jle
in
imul
lods
hlt
xor
dec
xor
xor
iret
mov
fldt
loopne
cltd
push
cs
int3
push
inc
imul
cli
mov
pop
mov
call
lret
ret
int
pop
imul
lcall
sti
aad
inc
daa
adc
decl
faddp
push
push
jns
in
clc
popf
sbb
xor
mov
pop
mov
ljmp
jnp
cmp
add
xor
out
sbb
cmc
gs
push
fldcw
pop
insl
dec
sbb
sbb
call
popf
mov
lods
mov
dec
push
sbb
sbb
call
popf
mov
lods
mov
dec
push
sbb
sbb
call
popf
mov
lods
mov
dec
push
sbb
sbb
inc
push
fsubr
mov
inc
addr16
ja
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
add
repz
loopne
xchg
test
adc
add
xor
and
push
addl
mov
adcb
mov
lahf
lock
inc
adc
add
push
jecxz
repz
in
inc
xchg
jo
pusha
mov
roll
jno
aas
shrb
int
sub
sbb
mov
mov
sub
push
xlat
btr
inc
cmpb
xor
cwtl
or
shr
xchg
rolb
aas
and
pop
jg
push
daa
out
in
inc
lds
loope
roll
iret
out
jp
xchg
jno
out
subl
jecxz
cmpb
adc
jns
pop
aam
dec
sub
xchg
mov
data16
fistpll
mov
and
inc
nop
jae
lret
rolb
in
jnp
fsub
int3
add
xorl
enter
adc
push
insl
push
jg
jecxz
mov
cmp
enter
loopne
js
jne
pusha
and
repz
sub
push
jb
dec
xor
or
iret
out
ret
mov
and
inc
insb
jno
popa
aaa
iret
inc
andb
add
adc
stc
loopne
adc
adc
push
scas
inc
imul
fucom
adc
push
fsubl
out
pop
xchg
ja
jl
dec
test
test
lcall
adc
iret
push
ret
adc
add
push
mov
movsb
and
dec
cwtl
pop
inc
cmpsb
insl
test
inc
xchg
sbb
xor
and
jg
out
scas
adc
xor
adc
and
xor
ret
add
xor
and
push
addl
mov
adcb
mov
adc
and
xor
ret
add
xor
and
push
addl
mov
test
lcall
pop
add
mov
jge
push
loope
subl
add
out
xor
out
jmp
cmc
out
test
fistl
nop
stc
sbb
or
test
mov
imul
in
decb
jl
aam
push
cmp
lds
push
sbb
pop
mov
in
add
xchg
adc
aas
cli
mov
outsb
das
insl
mov
into
and
and
push
sub
bound
jecxz
xor
push
popf
out
loop
inc
ret
jmp
lods
jp
xor
enter
xor
adc
sbb
lret
movsb
scas
je
dec
in
outsl
fiaddl
testb
pop
subb
fwait
jl
mov
sub
sub
ds
dec
push
out
mov
xchg
arpl
fnstcw
ds
mov
inc
or
or
sbb
loope
dec
adc
xor
imul
cli
ret
xor
imul
mov
xor
outsl
or
sbb
jbe
mov
rorb
dec
dec
inc
bound
sbb
cmpsb
lcall
jmp
loop
ret
and
dec
mov
sub
push
in
jge
in
mov
and
push
and
add
inc
stos
lock
mov
inc
and
insl
bts
rol
test
icebp
enter
fwait
popa
xchg
arpl
push
mov
dec
xchg
cmp
cmpsb
push
mov
stos
out
cmpsb
xchg
inc
cs
jo
cmp
stos
shrb
add
push
lret
cltd
shl
je
pop
ds
arpl
cmp
mov
lcall
ror
insb
mov
dec
dec
clc
push
sbb
dec
das
js
add
in
test
fsubrs
movsl
shrb
and
imul
cmp
add
pop
or
jbe
popf
je
or
xorl
lcall
add
xchg
ror
jecxz
lods
fs
xchg
adc
mov
repnz
arpl
ret
sub
loope
inc
lret
push
push
mov
sbb
imul
shll
sbb
xchg
or
jne
ss
sub
pop
add
mov
icebp
pop
or
add
ljmp
mov
stc
sub
jge
jg
sub
dec
mov
mov
out
adc
idivb
push
xchg
stc
insb
xlat
test
popf
mov
imul
xchg
repz
inc
sbb
xor
xchg
decb
cmpsl
shlb
mov
add
xchg
lcall
mov
push
dec
jno
jecxz
push
mov
out
cmp
icebp
and
lret
adc
adc
lret
lret
rcl
popf
jge
mov
inc
lret
repnz
sub
out
and
mov
or
jo
mov
pmaddwd
add
stc
lcall
icebp
add
mov
dec
ljmp
add
cmp
cmc
jne
pop
sbb
out
lock
int
push
push
adc
push
cmp
or
sbb
outsl
push
jo
mov
rcrb
mov
std
jns
cld
mov
mov
lods
xadd
xchg
jge
fsubl
jnp
jns
pop
ss
add
xchg
jp
cmp
fs
lock
sbb
js
icebp
pop
scas
dec
jb
adc
fnsave
mov
adc
cmp
pop
jno
lock
cmpsb
mov
dec
loope
jecxz
mov
outsb
ds
add
mov
in
jo
pop
loope
outsl
iret
fidivrl
lds
fs
xlat
shlb
cmpsl
dec
mov
push
cwtl
lock
pop
gs
mov
xlat
mov
inc
fs
ss
loopne
sub
inc
fwait
dec
cld
push
sub
xchg
add
adc
int
addr16
mov
lcallw
test
clc
cmp
pop
and
sbb
out
fsubl
push
in
cmc
xchg
repz
cli
dec
jnp
sbb
int3
out
inc
inc
test
std
mov
call
pop
fldenv
xor
push
sub
push
jno
testl
cli
enter
push
jnp
cmpsl
outsl
sbb
push
loope
int3
or
scas
xlat
scas
fwait
xor
or
mov
gs
lret
movsl
fs
mov
inc
xchg
aad
xchg
mov
add
inc
daa
xchg
call
cmpsl
mov
jmp
cs
in
subl
movsl
inc
mov
push
sub
repnz
xchg
pop
adc
push
popf
sub
ljmp
add
inc
fldt
out
in
cmp
lret
cld
and
jle
and
int
into
pop
movsb
push
push
inc
jecxz
pusha
cmp
cli
bound
push
popf
sbb
pushaw
jg
int
lret
inc
out
dec
xor
jecxz
fildll
jmp
es
xor
mov
out
push
aam
cmp
inc
fistpl
cmp
cmp
dec
xor
mov
pop
dec
fistps
or
lods
sbb
or
sbb
sub
mov
xchg
je
sbb
and
push
aas
btc
cltd
mov
mov
andl
cld
add
loope
pminsw
inc
loope
sbb
add
cli
adc
aad
fisttps
addr16
idivl
pop
xor
pop
ret
mov
mov
sbb
or
xchg
shll
lcall
mov
pop
ds
inc
jnp
in
cmpsl
xchg
mov
push
mov
pop
in
lret
ret
mov
in
cwtl
loope
stos
rcll
cltd
out
dec
mov
push
sar
lds
sbb
loopne
push
sub
sbbl
mov
fistps
rol
mov
mov
ljmp
mov
and
ds
lds
push
or
divb
lods
fldt
push
mov
outsb
and
scas
cmc
jbe
xchg
inc
jmp
cmpsb
aad
cmp
add
sbb
cmp
cli
imul
xor
sub
mov
mov
test
jo
mov
iret
dec
lret
add
push
xor
mov
sbb
stc
mov
adc
push
adc
cmp
incb
lret
dec
nop
or
fwait
xchg
cmp
test
jl
imul
insb
pusha
pop
les
push
aad
push
sub
jp
sarl
dec
and
jno
xchg
jne
cmp
jne
push
lcall
mov
add
aam
int3
push
fstpl
lods
fistl
push
movsb
rcrl
jb
scas
into
inc
pop
jl
push
js
aas
popf
mov
or
inc
jecxz
ret
repnz
mov
lahf
shll
repz
popa
pop
stc
cmp
roll
mov
mov
dec
mov
out
pop
enter
pop
movsb
or
adc
int3
pop
addr16
addr16
sarb
jg
inc
movsl
aam
popa
repz
rcll
xchg
or
jle
mov
jno
xor
icebp
add
stc
xchg
psrld
xchg
mov
sbb
mov
sub
push
jns
adc
add
jg
icebp
pop
mov
ss
inc
mov
es
and
or
cmp
cmp
addr16
test
loope
addr16
inc
cmpsb
ret
pop
inc
dec
pushf
fstl
xchg
mov
clc
and
dec
push
jge
insb
xchg
mov
fbld
add
das
enter
and
rdtsc
aad
fcoml
gs
add
dec
imul
jmp
xchg
push
jmp
cmpsl
mov
dec
repnz
rcll
jmp
xchg
pop
cmovne
jae
pop
and
and
lods
sbb
mov
adc
or
fists
repz
cld
fisubl
mov
cltd
mov
dec
jmp
test
insl
repz
mov
cs
roll
insl
andb
outsb
fs
push
das
lea
sub
jecxz
int
movsl
xor
fistpll
pop
or
adc
add
repnz
mulb
popa
das
and
mov
xchg
out
lret
lods
mov
data16
insb
cltd
push
lahf
xchg
add
arpl
xor
jle
add
stos
mov
scas
mov
sarl
jo
mov
sbb
xor
pop
jnp
pusha
popf
mov
fadds
in
push
and
fsub
fmuls
daa
ror
sub
arpl
orb
cmpsl
jbe
ds
push
push
leave
jns
out
test
adc
popf
int
inc
push
and
je
iret
shll
pop
or
repnz
xchg
dec
or
std
cltd
sub
push
xchg
imul
cli
fwait
cmpsb
outsl
push
inc
or
xchg
inc
push
mov
sub
dec
pop
jp
mov
ds
jle
fisttps
mov
add
push
mov
cmpb
jb
or
out
sbb
and
pushf
mov
ficompl
pop
add
or
in
and
mov
jne
mov
mov
and
inc
jb
js
imul
dec
in
push
es
xor
inc
test
int
cld
enter
stos
cmp
and
push
cmp
jge
loopew
insl
out
mov
inc
nop
push
cmp
lock
ret
lcall
js
sarb
jo
xlat
sti
xor
pop
mov
mov
movsb
testl
mov
insl
fisubl
outsb
clc
mov
inc
cmp
push
lods
add
or
dec
jb
cmp
imul
ficompl
and
cmpsb
push
jo
pusha
mov
lret
jge
cmp
jno
xor
mov
sbbb
mov
add
mov
jge
shlb
inc
vmovdqa
push
push
lret
imul
xchg
into
sbb
jnp
daa
test
mov
daa
cwtl
or
cmp
cli
jg
add
mov
xchg
nop
xchg
sub
ja
mov
rcl
jecxz
xor
filds
inc
mov
ror
insb
cmp
movb
dec
fisubl
or
hlt
sbb
fldl
mov
cs
popf
or
or
sub
fisttpll
aam
and
add
pop
push
rclb
ret
or
mov
pop
mov
cmc
pop
dec
shll
jl
and
call
mov
xor
push
mov
xor
test
filds
call
popa
fldt
jp
shll
or
aad
aas
lds
and
ds
mov
sub
mov
lret
inc
jecxz
dec
xor
in
repz
or
jbe
out
adcl
outsl
cmpsl
out
sub
aad
scas
outsb
pop
jle
pop
xchg
add
pop
adc
jmp
sub
jne
xchg
add
enter
mov
dec
adc
rolb
in
mov
or
mov
ds
shrl
cvtps2pi
jae
inc
mov
and
add
outsl
push
mov
mov
sbbl
or
mov
dec
das
push
inc
cmp
mov
outsb
xlat
out
out
daa
test
xchg
sub
jae
or
mov
mov
out
cs
dec
idivl
pop
sahf
movsl
imul
cmp
jno
inc
cs
repnz
pusha
lds
push
movb
sahf
sbb
jo
mov
gs
xor
xchg
pop
xchg
dec
mov
jl,pn
fnsetpm(287
scas
sti
lods
out
xor
jmp
cli
dec
push
xor
cs
or
push
out
mov
int3
pop
xchg
lcall
add
in
scas
xchg
cmp
add
xchg
mov
pop
ret
sub
cmp
fnstsw
lahf
pop
popf
das
push
outsb
lahf
arpl
in
and
sbb
les
jno
mov
inc
gs
sbb
out
inc
add
dec
je
js
jmp
fistl
pop
frstor
adc
or
push
js
cmp
fistpl
cmc
dec
or
xrelease
adc
enter
jae
out
mov
mov
dec
adc
sbb
push
insb
inc
popa
mov
subb
fisubl
mov
mov
push
pop
pusha
ja
mov
out
popa
loopne
inc
cmpsl
mov
insb
xchg
jnp
add
sbb
mov
sbb
and
sbb
shlb
or
dec
jb
push
push
jne
cmp
sub
pushl
nop/reserved
inc
mov
push
cmp
dec
jns
add
or
xchg
int3
loopne
shrl
jmp
lds
imul
in
or
dec
sub
orb
loope
hlt
clc
push
push
es
inc
and
mul
icebp
outsb
sbb
nop
mov
sbb
xchg
sti
shrl
mov
test
imul
dec
sahf
shll
loop
and
dec
inc
js
cs
sub
push
sarl
pop
pop
sub
inc
push
jg
es
imul
xchg
repz
lods
aaa
cmp
insb
hlt
and
pop
jne
movb
cli
add
lcall
out
in
js
mov
inc
jno
jns
jecxz
pusha
mov
nop
mov
test
xor
mov
jg
push
insl
ret
test
in
cli
repz
jl
push
rcrb
and
dec
sub
lahf
sub
inc
arpl
push
dec
les
dec
outsb
shrl
ficoms
loope
xchg
mov
cmpsl
in
xor
rorb
pxor
ss
out
and
pop
mov
cwtl
fwait
iret
mov
mov
pop
in
addr16
pusha
cmpsb
mov
mov
nop
pop
imul
es
movsl
and
leave
lret
dec
out
push
cli
test
cmc
or
or
pop
mul
add
lods
adc
lock
mov
xchg
sbb
fidivs
pushl
sbb
aas
or
rolb
call
and
xor
jge
stc
sbb
aam
dec
push
repnz
inc
and
xchg
roll
adc
fadds
add
xor
test
repz
push
divb
xlat
add
push
jne
movsl
leave
ja
jmp
sub
rclb
std
das
shlb
add
sub
daa
add
dec
cmp
dec
adc
imul
adcb
insl
adc
mov
jecxz
test
pop
cli
dec
and
ror
jle
jmp
ret
push
imul
xchg
dec
jnp
lock
sbb
scas
jns
cmp
adc
sbb
jns
push
jo
fildl
ror
test
sub
fnstsw
jg
cmp
mov
pop
dec
repz
cmp
mov
mov
push
lahf
idivl
lods
jmp
int
mov
jb
adc
cmpsl
fcoms
repnz
sbb
dec
fistpll
call
and
mov
dec
jle
sbb
mov
lcall
pop
lret
mov
mov
push
add
jae
dec
or
nop
ljmp
fidivl
jg
aam
jg
insl
push
or
mov
imul
int
cmpsl
xchg
insb
inc
dec
or
or
fidivrl
js
mov
sbbl
xor
mov
or
clc
aam
push
adc
cmp
cmp
jo
sub
xchg
lret
in
sbb
in
pop
sub
cld
outsl
sbb
cmpsl
arpl
daa
pop
add
in
sbb
scas
jle
add
in
xor
inc
dec
cmp
and
lock
pop
pop
push
adc
dec
aas
lods
jg
into
inc
and
mov
rcll
arpl
lret
test
dec
cltd
push
mov
rorl
js
inc
inc
sarl
sti
push
push
popa
fldl
decb
mov
xchg
cli
outsb
push
and
cmp
mov
insb
mov
aad
scas
ljmp
mov
faddl
lock
arpl
call
sahf
add
inc
sub
popa
insl
and
xlat
mov
test
loope
mov
mov
int3
ljmp
adc
dec
pop
adc
cltd
int
inc
xor
jecxz
mov
xor
js
lret
dec
or
xchg
imull
mov
sbb
sbb
mov
loopne
xchg
xchg
pop
xlat
xchg
mov
out
pop
mov
cs
aaa
lds
push
cld
clc
mov
pop
dec
dec
mov
sahf
cmpsl
lods
and
xchg
mov
enter
pop
xchg
mov
outsl
fsubrs
pop
dec
out
and
int
js
mov
mov
mov
test
fwait
push
test
arpl
pop
mov
xchg
test
xor
pop
in
jecxz
sub
fildll
mov
jne
shl
mov
or
pop
inc
jns
cld
xor
dec
into
std
xor
jp
rclb
dec
repnz
or
ret
xchg
out
ljmp
into
test
outsl
sbb
sub
loope
ret
mov
call
mov
orl
xchg
mov
aad
js
clc
add
test
loopne
add
jb
push
js
test
or
add
out
call
lods
mov
or
ret
mov
xor
nop
arpl
out
lods
cmpsl
ret
and
ja
xchg
pop
add
popa
icebp
xor
mov
cltd
js
stos
add
mov
leave
mov
jns
inc
cmpsl
and
or
fidivs
adc
pop
jge
mov
jle
push
ret
jno
int
sbb
scas
lods
push
sub
inc
repz
sbb
mov
sbb
adc
pop
arpl
jle
dec
or
mov
cld
mov
xchg
sarl
rorl
add
nop
xchg
sub
pop
frstor
aam
adc
mov
popf
mov
and
outsb
mov
sub
pop
xchg
cs
fsubrs
dec
dec
mov
test
jo
mov
or
and
mulb
mov
mov
and
in
dec
sbb
mov
cmpsb
imul
pop
jbe
sub
mov
insb
xchg
int
outsl
pop
add
inc
mov
inc
add
lods
ds
ljmp
movsb
push
shl
mov
call
inc
or
in
icebp
loopne
insb
andb
or
dec
icebp
jns
lock
mov
push
and
pusha
push
jp
mov
add
cmp
fcoml
dec
dec
jge
movsl
dec
cmc
mov
mov
nop
ljmp
xchg
cltd
push
jp
shrb
add
dec
popf
add
or
enter
ret
push
or
and
sub
push
ficompl
sbb
push
repz
xchg
and
inc
das
jmp
jp
les
pushf
dec
pop
xlat
jp
out
inc
js
arpl
unpcklps
push
mov
rorl
jo
outsl
xor
xor
mov
push
aam
mov
sahf
popf
cmp
out
sub
data16
js
jno
pop
fwait
ja
push
mov
out
fists
xchg
push
outsb
mov
xchg
aas
fnstenv
decl
or
dec
ja
ja
sbb
cmp
pop
sbb
int3
loop
sub
shlb
inc
rcrb
sahf
push
push
ja
or
xor
ficompl
mov
pop
cs
sub
cmp
lret
jp
int3
pop
inc
push
ljmp
xor
mov
sbbb
jp
xor
mov
loop
rol
fldt
mov
add
cmc
test
or
lods
and
push
jbe
cmp
push
push
pop
les
mov
scas
sbb
mov
lret
cs
inc
out
jg
jnp
rorb
xor
test
and
xchg
inc
mov
hlt
in
leave
or
mov
fwait
mov
fs
stos
int3
int3
testl
sub
sub
lret
std
pop
clc
mov
mov
push
jmp
cmp
mov
and
int3
adc
imul
sub
add
inc
or
xor
lahf
addr16
cmp
fadd
pop
and
fidivrs
ret
shll
sub
sbb
xor
push
das
xor
and
adc
jmp
out
sub
push
pushf
insb
push
mov
push
jmp
stos
fcoml
movl
cmp
dec
in
and
cmpsb
sub
bound
jl
stc
mov
sub
mov
adc
and
xor
ret
add
xor
and
push
addl
mov
adcb
mov
adc
and
xor
ret
add
xor
and
push
addl
mov
sbbb
sbb
mov
adc
add
xor
and
push
addl
andl
inc
adcl
add
adc
mov
add
jecxz
test
or
insb
pop
lahf
dec
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
inc
push
test
sbb
xchg
xchg
je
mov
lahf
and
into
jns
imul
mov
mov
pop
jmp
mov
sahf
sub
sbb
mov
push
mov
ds
dec
loopne
icebp
outsb
sarl
fidivrl
or
cmp
dec
push
mov
push
add
inc
xchg
out
mov
mov
mov
cli
adc
xchg
call
mov
pop
pop
nop
push
addl
sbb
push
or
xor
fistpll
pop
jae
pop
inc
push
cs
dec
in
lds
and
scas
movsl
jle
sahf
imul
test
imul
jle
add
push
stc
aam
xor
sahf
xchg
insl
ror
and
cmp
imul
mov
enter
sub
pop
ret
or
pop
pushl
in
cltd
mov
mov
lods
or
jecxz
inc
fnstcw
outsb
cmp
sahf
sub
stos
cmpsb
jle
ret
mov
dec
stc
pop
jmp
mov
sahf
xor
popa
fidivrs
pop
sub
inc
cwtl
push
mov
sub
or
sti
push
scas
dec
iretw
adc
cmp
sarl
jmp
sbb
push
mov
iret
dec
lods
insl
mov
push
xorb
int3
inc
clc
push
cld
add
jle
mov
sahf
sub
jns
imul
mov
mov
pop
jmp
mov
sahf
sub
jns
imul
mov
adc
test
and
scas
scas
inc
lods
xchg
xchg
je,pt
pop
add
push
subl
jmp
adc
pop
cmc
inc
fstl
loop
sbb
leave
pop
xor
dec
inc
and
insl
call
mov
push
cld
mov
and
jno
jnp
gs
js
call
or
add
xchg
xchg
loop
mov
push
out
fsubrs
fcomip
or
mov
xchg
mov
add
scas
insb
xor
sbb
stos
out
ljmp
ja
jo
add
jbe
loopne
hlt
std
mov
insl
push
stc
xchg
push
imulb
fsubs
bound
fisttpll
aad
mov
ds
rcr
xor
aas
or
int3
push
sarb
lods
add
daa
notl
push
cltd
shlb
mov
lods
fidivs
aaa
daa
bound
mov
stos
dec
sbb
mov
ficomps
cmp
add
xchg
push
inc
pop
cmc
mov
mov
dec
out
xchg
fistpll
pop
xorb
add
xchg
cs
jno
mov
adc
sub
adc
shl
aas
push
mov
dec
pusha
lods
imul
lahf
cmpsl
sarl
cmp
dec
ss
imul
ja
mov
fwait
outsl
mov
fistpl
lods
and
add
xchg
test
lds
dec
xchg
lods
pop
int
cld
fistpl
mov
les
adc
xchg
idivl
mov
test
jne
pop
stc
pop
lret
add
mov
inc
sbb
add
jl
ds
mov
lahf
sbb
fwait
cmc
lds
mov
addr16
rorb
aaa
shl
mov
sub
add
psubusb
addb
movsl
pop
pop
push
movsb
jnp
cld
add
sbb
xchg
fisttpll
shlb
mov
xchg
out
rolb
bts
jne
aas
cld
addl
test
push
push
cltd
sbb
xchg
shlb
ja
rcrb
xchg
je
mov
mov
pop
jmp
adc
fdivrl
das
mov
arpl
ret
jg
enter
lret
leave
or
mov
call
cmpl
scas
lret
imul
sbb
mov
movb
loope
cld
sub
aam
cs
dec
xchg
jl
xor
arpl
imul
das
test
adc
fiadds
sbb
call
mov
xchg
out
add
int3
shrl
cmp
mov
mov
cmp
test
or
hlt
cld
out
addr16
inc
data16
mov
and
ds
jae
cmpsb
cs
cmp
fsubl
cmpb
mulb
flds
cmp
add
fcmovu
adc
mov
lods
mov
test
das
or
mov
idivb
push
outsb
pop
lods
je
pop
sti
sbb
insl
imul
pop
inc
cld
jge
pop
cmp
sbb
rcrl
sti
sahf
add
or
orb
mov
xchg
adc
adc
inc
ds
jmp
mov
test
rolb
adc
pushf
pop
fsts
mov
pushl
insl
sahf
scas
jb
imul
sbb
sti
out
fstpl
stc
fdivr
sub
push
pop
mov
add
es
xor
ds
ljmp
das
add
test
sbb
sub
xor
adc
enter
or
cli
mov
cmp
mov
xchg
data16
imul
cmp
mov
sbb
ret
outsl
inc
add
adc
jbe
mov
sbb
aam
inc
or
roll
push
lock
shl
fs
ss
jae
out
cmc
pop
lods
or
dec
ret
insb
xchg
test
arpl
dec
jnp
int
mov
repz
fs
push
pop
cmp
inc
inc
push
rol
push
mov
inc
jns
loope
test
xor
gs
cmpsl
das
xchg
fldt
dec
pop
insb
lahf
fs
mov
sbb
popf
popa
sti
sbb
dec
push
mov
push
movsb
sub
loope
xchg
and
or
sbb
push
test
sub
dec
call
addr16
notl
jge
mov
nop
inc
test
xor
cmpb
adc
jno
fcomp
stc
cmc
mov
negl
test
pop
jbe
mov
loopne
add
jns
jne
cwtl
or
fnstsw
pusha
arpl
push
dec
adc
lock
notl
inc
int
inc
mov
or
in
repz
cwtl
add
punpckhdq
and
or
ret
or
stc
nop
pop
jg
and
jecxz
ja
dec
bound
mull
rolb
cmpsb
mov
mov
stc
pop
push
or
repnz
xchg
aad
enter
inc
nop
subl
jmp
mov
arpl
daa
lods
or
bound
inc
xchg
xor
in
and
jmp
xorb
push
insl
lahf
jno
insb
cltd
jecxz
adc
mov
xchg
in
sbb
inc
add
sbb
sub
cli
sbb
test
pop
cmc
test
incl
inc
sub
sub
aas
ds
repz
in
and
in
jnp
mov
or
and
pop
je
push
sub
testl
dec
ljmp
int3
pop
je
cmp
sbb
mov
add
mov
push
stos
insl
inc
ret
push
dec
dec
loope
xchg
je
ds
dec
or
jns
push
ljmp
test
mov
adc
sarl
cs
jae
sarl
xchg
mov
in
mov
push
pop
dec
and
inc
push
xor
int
std
mov
mov
dec
gs
pop
daa
add
sahf
add
enter
imul
stos
nop
aad
addr16
nop
imul
jge
and
inc
imul
int3
jae
fistpl
sti
sub
pop
adc
idivl
dec
adc
jb
rcl
iret
sahf
out
inc
lods
xchg
push
popf
lods
cmpl
movsl
es
lods
pop
rolb
cli
psubd
pop
fwait
inc
mov
jmp
sub
outsl
xchg
sbb
js
sub
test
enter
sub
push
and
cmp
mov
out
or
int3
jbe
mov
bound
cs
ret
fwait
scas
push
psubsw
imul
push
jg
jecxz
sbb
stc
and
jle
cmp
mov
aam
js
inc
mov
and
mov
in
mov
in
inc
pop
jno
mov
imul
adc
out
jns
mov
mov
es
fcoms
movsb
pushf
cmp
or
pusha
movsb
and
cmpsb
orl
dec
adc
cli
push
adc
pop
cltd
mov
mov
inc
pusha
ret
dec
enter
xchg
add
sar
or
mov
dec
stos
shrl
lock
int
mov
pusha
aas
cmp
notb
xor
stos
lcall
adc
mov
imul
mov
outsl
fimuls
sub
filds
icebp
outsb
das
cs
xchg
aas
cmp
inc
push
push
cmp
cmpsb
lcall
adc
push
xchg
mov
int
or
xchg
test
inc
ja
sub
shrl
std
sbb
cli
add
mov
adc
xchg
pop
in
pusha
mov
xchg
add
dec
in
iret
inc
clc
mov
sti
movb
sub
jp
jp
addr16
mov
lret
or
xchg
push
gs
lods
xchg
in
xchg
pushf
icebp
test
jne
ret
arpl
adc
adc
sub
jns
call
mov
in
cmp
mov
je
mov
clc
ret
add
fistl
ret
mov
xchg
mov
xchg
inc
xchg
inc
dec
jno
jmp
outsb
dec
cmc
ds
outsb
add
daa
sarb
ficoml
mov
mov
leave
mov
and
notb
icebp
incl
sbb
nop
jg
sub
lret
call
or
repnz
inc
lret
movsl
leave
sbb
sti
out
pop
into
add
lea
mov
pop
jnp
inc
cld
fidivs
xor
loopne
push
xor
push
push
fiadds
mov
push
xor
mov
pop
and
lret
imul
xor
fildll
lock
mov
in
xchg
pop
cwtl
inc
movsl
lret
fisttpl
out
lar
pop
aas
lds
sub
mov
lret
inc
out
xchg
xchg
fcomps
out
and
into
ja
loop
and
mov
cwtl
push
std
cmpsl
cmp
cld
lods
loop
andl
mov
lret
pop
pop
adc
inc
push
push
jns
add
addl
cmp
adc
gs
movsb
jp
nop
jl
adc
arpl
sbb
sub
mov
mov
xchg
xchg
mov
gs
or
lea
shlb
cwtl
fadds
push
scas
or
insb
movsb
outsl
push
mov
sbb
lcall
gs
push
aas
sub
stos
sub
mov
jmp
loopne
fs
fildl
es
push
pop
xchg
lea
xchg
aam
cwtl
dec
stos
adc
and
xchg
lret
jg
lahf
insb
ret
lret
or
jnp
scas
push
insl
push
lcall
shrb
xor
adc
inc
shl
loopne
sbb
mov
xor
mov
int3
mov
hlt
imull
cmp
faddp
pop
addr16
adc
xchg
jb
jne
cmp
push
xchg
pop
sahf
xchg
or
inc
jmp
and
xchg
in
lret
cmp
in
sbb
xor
xor
xorl
arpl
lock
out
arpl
lods
dec
sbb
cmpsb
rcll
frstor
push
xor
inc
adc
lret
xchg
fmul
and
dec
movsl
call
push
faddl
xchg
sbb
mov
test
mov
mov
lock
shll
xor
xchg
enter
out
addb
pop
lods
pusha
rol
nopl
dec
push
test
scas
fstpt
push
pop
push
jnp
lahf
testb
pop
aam
out
jae
xor
pop
shrl
cmp
push
inc
push
xor
push
push
xchg
es
into
xchg
mov
mov
and
pop
aaa
in
mov
mov
pop
iret
push
imul
jmp
mov
mov
loopne
scas
and
sub
js
aas
or
jg
and
inc
push
jmp
mov
push
mov
mov
push
mov
not
filds
push
inc
hlt
adc
shlb
push
enter
mov
rolb
jmp
mov
fmull
lahf
xchg
int3
sub
into
mov
mov
push
xchg
jecxz
push
je
arpl
push
lods
int3
loopne
hlt
xlat
push
dec
and
rorl
mov
push
fsub
mov
sub
push
in
aaa
fucomi
dec
and
and
pop
cmp
repnz
push
pop
sub
imul
lahf
push
clc
out
xchg
adc
adc
hlt
pop
cwtl
ret
or
mov
cmp
add
push
and
out
xchg
mov
xchg
mov
stc
lret
inc
lret
xchg
inc
mov
andb
mov
or
repnz
sarb
out
push
fdivl
iret
and
dec
daa
repz
mov
or
pop
mov
and
pop
xlat
sbb
stos
push
scas
in
rorl
mov
test
fstps
push
or
fstl
jne
icebp
cmp
jo
addr16
jo
jge
mov
aad
je
mov
fildl
jp
fstl
imul
xchg
push
daa
fisttpl
call
insl
mov
mov
jge
push
xchg
gs
mov
mov
jne
xchg
push
imul
pop
std
popf
test
jae
std
mov
jle
popf
adc
mov
loope
stos
sbb
inc
jb
int3
shrl
sbb
adc
fdivr
cltd
fs
cmp
pop
or
ret
in
lret
pop
repnz
dec
in
aad
insl
dec
loopne
sbb
ret
insb
sbb
fnstsw
dec
jg
bound
popf
push
cmpsl
and
movsl
push
or
mov
lret
push
loopne
xchg
adc
out
aad
shrb
scas
inc
test
and
mov
jnp
pop
sub
into
mov
cmp
les
inc
test
orb
cld
into
insb
lock
xchg
mov
pop
cmpl
insb
adc
adc
and
xchg
jo
imulb
adc
inc
clc
push
das
lea
int3
test
or
add
ja
in
pop
imul
jle
jg
sbb
in
iret
push
mov
pop
sbb
je
das
nop
das
jmp
loope
cwtl
mov
iret
aad
pop
sbb
xor
cs
jns
mov
jle
sub
shll
xor
add
hlt
in
mov
test
mov
inc
rolb
or
insb
repz
data16
mov
sti
push
or
rorb
loope
lret
pushf
adc
loope
aad
mov
xchg
push
aam
aaa
mov
sub
dec
test
push
bnd
xchg
movsl
sub
push
in
js
pop
aad
mov
leave
fimuls
ret
ja
xchg
outsb
shlb
repnz
aas
or
push
test
adc
out
xor
jnp
jp
clc
outsl
add
pop
inc
pop
push
mov
aaa
mov
int
xor
and
xchg
inc
pusha
inc
dec
int
xchg
test
jg
ds
loopne
ja
mov
daa
inc
or
cmp
cmp
insl
cmp
adc
movsb
pop
lcall
std
lcall
scas
cmpsl
in
stos
cli
mov
lods
fstps
jns
adc
xchg
test
dec
imul
mov
in
add
hlt
imul
or
sbb
push
jbe
frstor
into
jmp
fcomps
in
testl
mov
xor
imul
cmpsb
daa
xlat
jle
in
push
pop
dec
push
inc
stos
aaa
fimuls
jns
add
adc
and
or
jle
cwtl
pushl
iret
mov
sbb
loopne
push
call
int3
bound
mov
std
mov
ja
lahf
jno
div
cld
inc
rdpmc
insl
sbb
addr16
movsb
test
xchg
stos
lods
dec
out
inc
aas
push
sub
sbb
in
and
loope
es
insl
leavew
xchg
and
jmp
in
mov
mov
roll
inc
outsl
jle
and
je
rcr
fs
dec
sahf
jl
js
shl
xchg
xor
cmp
push
mov
ja
stc
imulb
out
sti
leave
out
dec
stos
inc
xchg
cmp
divl
xor
mov
jmp
sbb
pop
adc
int3
dec
dec
mov
loopne
mov
push
dec
sbb
pop
pop
pop
inc
pop
inc
push
push
bnd
mov
mov
lock
add
lock
add
xlat
insl
lret
stos
cwtl
popf
popf
push
pop
imul
xor
or
pop
lahf
fistpl
ljmp
lcall
popa
insb
sbb
dec
out
cli
xchg
mov
and
mov
cmp
flds
clc
add
mov
xor
mov
sub
pop
or
and
sbb
sub
dec
into
mov
mov
push
into
push
insb
roll
xor
aaa
inc
push
jecxz
mov
adc
xchg
loopne
or
or
mov
insb
lret
add
sbb
popa
and
shrb
stos
loopne
and
mov
dec
aad
daa
cmpsb
mov
out
inc
xor
fidivrl
push
or
mov
enter
test
cmpsl
mov
cmp
enter
mov
inc
pushf
xor
aad
sbb
inc
int
and
je
mov
shrl
movsl
sti
fisubrs
leave
xchg
cmp
dec
xor
dec
adc
icebp
pop
iret
movsl
push
fstps
mov
xor
nop
inc
sahf
pop
mov
or
mov
adc
push
jno
lock
repz
div
pop
jno
xor
sub
mov
mov
popf
int3
fsubs
je
mov
ljmp
xchg
clc
cmp
hlt
mov
add
xchg
or
mov
lcall
in
jns
mov
and
addb
xchg
mov
or
jns
inc
jmp
mov
xor
mov
mov
sub
add
daa
nop
clc
adcb
mov
push
cmp
jmp
cmp
aam
xchg
lds
adc
cmp
jno
sub
pop
sub
mov
inc
sbb
ss
sahf
mov
out
ret
out
addr16
mov
dec
mov
inc
or
test
imull
int
cmp
dec
ja
loopne
push
fisubl
mov
push
scas
xor
mov
cmp
inc
insb
mov
push
lods
je
pop
in
les
and
sti
push
mov
in
jmp
fisubs
int
rcll
repnz
mov
icebp
mov
sbb
xor
mov
fistps
add
xchg
and
sar
add
sarl
sub
sarl
les
mov
lret
pop
mov
insl
shlb
stos
movd
mov
ret
mov
sbb
xchg
push
out
ret
push
mov
push
mov
or
ror
data16
pop
mov
je
in
hlt
add
inc
scas
pop
call
sarl
pop
cmp
add
mov
imul
dec
mov
xchg
pop
lods
add
out
push
and
and
dec
jne
arpl
and
dec
add
addr16
lcall
and
push
pop
and
xchg
push
mov
add
adc
imul
fs
nop
sbb
jno
leave
lds
enter
nop
or
or
dec
lret
in
push
jne
jecxz
jnp
or
push
dec
mov
enter
lret
lea
sub
mov
in
inc
mov
xor
loope
jnp
pusha
xor
xchg
scas
sbb
mov
jnp
mov
ror
dec
jecxz
mov
mov
sbb
pop
popa
rorb
and
adc
mov
sub
dec
mov
dec
mov
int
repz
fwait
xchg
jge
mov
ljmp
mov
xor
clc
repz
sub
sub
mov
pop
fdivr
mov
dec
jae
jg
lock
sbb
ret
or
jecxz
jnp
mov
and
imul
gs
nop
rclb
sar
mov
jno
xlat
mov
adc
dec
pop
adc
and
shrl
jecxz
jg
sub
jbe
jns
push
loope
mov
dec
lcall
les
jp
aam
and
clc
sub
mov
cmp
mov
jmp
aam
inc
mov
xchg
gs
mov
lret
push
popf
mov
inc
dec
push
and
sub
xchg
loope
jecxz
adc
stos
fimull
cmp
cmp
cmpsb
xor
xchg
cld
sbb
xlat
dec
in
jp
data16
cs
fistpll
pop
iret
push
lea
lods
push
dec
add
mov
and
repnz
xor
cltd
mov
or
jno
cmpsb
add
pusha
faddl
pop
ret
sub
jne
jo
pop
in
orb
sbb
scas
mov
movsb
xchg
push
arpl
dec
popa
lahf
leave
fs
stos
mov
xor
int
xor
sub
sahf
jl
lret
sbb
lds
push
popf
mov
mov
dec
adc
and
enter
fcoml
fdivrp
xlat
stos
in
in
repz
or
push
fwait
xor
in
jnp
imulb
popa
push
je
pop
pop
xor
mov
lods
mov
push
movl
sti
add
stos
stc
xchg
out
fnstenv
popa
push
lods
loop
jl
jbe
icebp
pop
test
xlat
push
scas
lret
mov
cmp
mov
mov
stos
xchg
push
leave
pop
ljmp
adc
roll
sub
adc
idivl
enter
or
movsl
jl
std
jns
gs
mov
mov
push
hlt
mov
jo
test
ds
sub
mov
sub
outsl
cld
mov
dec
jge
xchg
mov
fstps
daa
or
fldcw
or
xchg
lods
ret
lret
pop
add
add
pop
push
and
sarb
ss
push
push
jbe
arpl
cwtl
fisubs
mov
dec
icebp
outsb
rorl
idiv
push
cs
xor
jbe
mov
jae
sub
pop
rep
out
adc
and
xchg
mov
outsb
xchg
pop
imul
and
mov
mov
pop
jmp
mov
sahf
sub
jns
imul
mov
mov
pop
jmp
mov
sahf
sub
jns
imul
mov
ds
stc
pop
jmp
mov
sahf
sub
jns
imul
mov
mov
pop
jmp
mov
sahf
addl
jle
icebp
scas
xchg
sahf
cmpsb
mov
lds
lcall
jne
inc
cmp
and
dec
adc
mov
movsl
jmp
sti
test
xchg
cmc
outsl
sub
and
xchg
sbb
dec
adc
jge
adc
in
mov
roll
sub
imul
cmp
out
cmc
cli
mov
mov
add
mov
mov
ja
mov
adc
test
js
inc
fs
decb
jne
pop
and
aam
mov
jle
and
rcrb
mov
pop
imul
mov
xchg
cmp
sub
cwtl
jo
scas
lahf
rcrb
pop
fwait
cmp
lret
insl
or
fildl
or
mov
mov
daa
add
jbe
fs
fdivs
xchg
or
insb
push
jmp
jmp
add
mov
in
add
pop
dec
sbb
ficompl
fstl
add
xor
inc
fwait
mov
scas
sti
test
mov
sub
pop
or
push
sub
imul
dec
fcoms
adc
dec
aaa
scas
cmp
sub
adc
aas
jo
in
cmc
std
mov
mov
shr
addr16
jne
add
sub
inc
jnp
cs
pop
mov
cmpsl
mov
test
xchg
jne
inc
or
and
dec
adc
mov
movsl
jmp
sti
test
xchg
jne
inc
or
and
dec
adc
in
pushf
idivb
repnz
in
fs
inc
mov
lea
mov
int3
lds
push
repz
adc
leave
or
push
popf
and
xor
aas
xchg
mov
push
fidivrs
out
add
shrb
shlb
push
lods
insb
xchg
mov
jp
enter
pushf
repz
sbb
mov
dec
stos
clc
and
cmc
nop
add
rclb
lods
cli
pop
js
inc
fmull
pop
aad
or
xor
xor
loopne
in
es
mov
call
jl
insb
inc
xor
rcrb
ret
pop
add
sub
jg
mov
loopne
inc
xchg
mov
mov
ret
test
or
adc
js
pop
in
nop
push
je
repz
mov
scas
and
sbb
sbb
daa
or
in
mov
stc
ss
mov
js
unpckhps
shlb
addl
lret
dec
jnp
jb
lahf
mov
imul
arpl
mov
xor
sbb
movsb
dec
stos
xchg
push
or
xor
and
pop
sarb
sub
push
imulb
insl
shlb
fldlg2
pop
shl
mov
fmull
mov
jo
or
push
jecxz
mov
xchg
jg
mov
mov
xor
pop
hlt
adcb
icebp
push
leave
inc
pop
popa
add
pop
ja
add
sbbb
xchg
adc
in
xor
in
addl
cmp
inc
xchg
inc
shrl
jmp
rolb
mov
adc
into
cli
adc
sbb
pusha
das
arpl
jge
push
push
fcmovbe
fucomp
jge
and
mov
arpl
call
rolb
movsl
into
jmp
push
int3
fsub
xchg
mov
shr
fcompl
addr16
mov
xchg
fdivs
sbb
mov
xchg
push
mov
js
loopne
inc
and
cld
sarl
inc
insb
shl
adc
pop
movntps
cmp
mov
movsl
xchg
ret
rcrl
pop
mov
and
out
mov
test
jbe
xchg
xchg
loopne
sahf
outsb
outsl
lods
out
mov
inc
int3
repnz
ja
lods
jbe
inc
test
adc
fisttpl
scas
jne
repz
add
xor
movsl
mov
sbb
push
sbb
mov
inc
fisubs
dec
je
mov
test
pop
or
scas
xor
or
inc
pusha
push
shll
xor
pushf
mov
lods
inc
loop
jge
pop
cmp
jae
mov
or
inc
or
out
sbb
mov
jecxz
je
clc
xor
outsl
sti
fwait
enter
out
push
rol
jl
test
lret
or
pop
xor
push
push
mov
sbb
mov
lret
or
ds
ljmp
cli
cs
ja
out
das
jmp
aad
scas
rcr
out
xor
cmpsl
outsl
lahf
loopne
mov
push
or
push
imul
test
fwait
cmpsl
sbb
cli
pop
insl
stos
xor
jb
cmc
pusha
mov
lods
cmpsl
shl
mov
xor
aad
inc
movsb
test
mov
xor
lock
cmc
jb
mov
xchg
ds
push
dec
pop
sahf
push
inc
in
movsb
icebp
sti
in
aad
adc
dec
add
pop
jo
inc
push
add
pop
mov
out
sbb
test
daa
adc
push
fildll
int
jae
aaa
stos
sub
nop
pop
mov
ror
push
jno
jg
and
imul
xor
adc
rcl
mov
iret
aas
jne
bound
sub
push
rcrl
pop
mov
out
mov
add
js
pop
cmp
stos
jecxz
lcall
cmp
out
mov
sbb
lret
mov
in
push
mov
or
sbb
daa
sbb
add
sbb
and
dec
jecxz
shrl
push
mov
sahf
test
lret
pop
repz
aam
lret
mov
push
fists
push
lods
loop
pop
stos
ds
jmp
ret
pop
xchg
pusha
jle
push
stos
call
inc
andl
inc
sub
push
sbb
jnp
mov
cs
add
loopne
push
adc
fcompl
sub
push
mov
jg
add
insb
loope
inc
adc
int3
add
sbb
lcall
lods
rorl
adc
out
je
fwait
jmp
loope
xlat
sub
cmp
ljmp
mov
mov
xor
push
push
nop
js
clc
shrl
xor
dec
aaa
ficompl
sahf
popf
cmp
cmp
ret
xorb
jge
sbb
xchg
pushl
cmp
enter
fdivrl
mov
test
xchg
dec
jg
fimull
daa
push
lret
sbb
cmp
sub
mov
out
or
mov
test
xor
cmp
push
push
lret
icebp
xchg
repnz
sub
imul
fldenv
loop
and
push
rclb
loop
mov
adc
cmp
repz
movsl
fistps
jnp
sub
xchg
insl
push
jae
andb
stos
sahf
xor
sti
push
cltd
push
sbb
pop
test
xchg
jbe
movsb
adc
insb
pop
fsubrs
cld
out
push
mov
xorl
or
es
mov
sahf
loopne
dec
add
jb
mov
dec
jb
dec
dec
mov
pop
std
adc
in
cs
inc
testb
add
mov
adc
pop
mov
mov
shrb
lock
gs
mov
push
dec
sub
add
mov
mov
push
xchg
mov
rep
mov
push
lea
lock
jbe
mov
xor
hlt
out
fisttps
loop
mov
inc
aaa
call
pusha
mov
push
xor
fs
es
xchg
loope
into
jb
in
adc
jbe
adc
or
out
repnz
cmpsl
jge
lret
xorl
jp
scas
xor
subb
dec
testl
mov
test
jge
rcrl
pop
int
das
cltd
xor
bndstx
mov
pop
insl
iret
inc
sbb
shll
popf
cltd
pop
lods
mov
aaa
incl
jmp
loop
outsb
lods
mov
sbbl
das
cmp
xchg
jno
inc
push
scas
imul
xsaves
sbb
jnp
jmp
jno
mov
and
in
add
insl
xchg
addr16
jmp
xor
ljmp
mov
xchg
inc
mov
cmp
aad
pushf
mov
fs
dec
inc
insb
sub
xchg
mov
inc
rcrl
mov
lds
xchg
popf
in
mov
mov
mov
sub
adc
inc
stos
jns
mov
outsl
pop
sub
lahf
bound
and
fucom
cmp
fiaddl
shlb
xchg
fsubrs
outsl
cli
pop
xor
adc
rcll
mov
sub
xchg
xor
inc
lret
outsb
imul
cltd
aam
pushf
push
popf
stc
xor
test
sub
cmp
mov
dec
arpl
inc
xchg
sbb
cmpsl
xchg
lds
push
loop
push
dec
and
ret
pop
mov
mov
adc
cmp
outsb
jle
mov
add
pop
or
inc
push
repz
jbe
sub
stos
fisttps
dec
pop
xor
int3
fnstsw
imul
ds
and
ljmp
xor
lcall
mov
loopne
inc
jae
popa
adc
xor
pop
adc
test
in
addr16
jnp
lods
add
ror
jb
addr16
sbb
or
lods
int3
sbb
lods
lret
sub
xor
idivb
jb
cmpsl
loopne
into
xchg
and
mov
xchg
ljmp
shll
mov
shl
xchg
mov
popa
push
pop
xor
faddl
sti
push
enter
aas
pop
pop
push
je
jne
cli
aas
push
add
aad
sbb
es
pop
js
in
mov
sbb
mov
nop
insl
inc
jle
push
sarl
sti
dec
fcmove
sarb
cmpsl
mov
adc
cmp
mov
je
xchg
pop
xor
lods
jmp
push
ss
sti
jb
jnp
imul
imul
push
lret
out
test
jno
sbb
or
xor
add
incl
cltd
lret
sbb
xchg
cmp
lods
pop
push
imul
cmp
push
xchg
add
wbinvd
fistps
sbb
leave
push
cmpsb
dec
scas
pop
cli
out
lret
jp
rorl
mov
mov
xchg
cmp
addr16
sbb
adc
out
movsl
jne
inc
jg
push
mov
pop
sub
push
mov
dec
and
addr16
mov
lock
out
jbe
cmpsb
loop
ljmp
pop
push
mov
mov
or
mov
loopne
pop
pop
mov
mov
mov
stos
js
shll
or
pop
push
mov
call
mov
ss
mov
add
inc
add
xchg
push
jae
sarb
xor
test
cmp
mov
mov
cmpsl
xchg
shlb
lods
mov
xor
lcall
fld
test
cmc
push
fidivrl
lret
sub
or
shr
push
imul
xchg
xor
sbb
gs
sti
and
addr16
arpl
cmpsb
pop
mov
add
pushf
fistps
xchg
pop
xor
mov
les
jo
adc
fwait
data16
shrl
push
cmpsb
xchg
lcall
int
pop
leave
lcall
and
xchg
and
mov
push
paddusb
xor
fidivrs
cmc
jmp
hlt
shrl
out
test
inc
cli
inc
jns
or
and
out
jg
adc
int3
adc
loopne
mov
and
stos
std
imul
clc
clc
cmc
cmp
ljmp
pop
out
sbb
push
dec
sub
cmpsl
cld
add
adc
jmp
sarb
rorb
lods
adc
xchg
cmpsl
shrb
cld
pop
inc
cli
inc
hlt
loop
outsl
jne
jmp
rolb
cmp
push
scas
or
dec
inc
push
mov
cli
in
repnz
pop
in
insl
ja
std
mov
rcrb
fwait
test
jbe
jb
ret
xchg
int3
xor
dec
dec
outsl
mov
lcall
aas
mov
shlb
in
jnp
bound
sub
lahf
movsl
lahf
dec
int
lods
clc
in
adc
ret
lods
lds
mov
sbb
pop
inc
gs
adcb
push
icebp
dec
mov
mov
repz
icebp
cmp
fcmovne
xchg
leave
xor
or
sub
mov
mov
add
jg
dec
jb,pn
lcall
pop
jnp
rorl
push
pop
add
jns
out
dec
je
das
push
xor
inc
add
mov
mov
hlt
std
jno
stos
loope
icebp
jge
clc
repnz
hlt
add
add
js
lahf
imul
mov
lcall
pop
cld
pop
push
call
in
dec
xor
mov
add
add
push
stc
mov
jmp
enter
outsl
mov
sbb
xchg
xchg
jnp
mov
arpl
nop
sbb
pop
enter
scas
ljmp
xchg
jns
jnp
scas
xchg
aad
mov
pop
cmp
das
subb
popa
ficoms
mov
lahf
and
nop
dec
ret
adc
mov
mov
jae
pop
xchg
lods
imul
mov
push
aam
push
mov
scas
rcll
cwtl
jb
add
je
cmp
repz
jecxz
jmp
jge
inc
iret
fcomps
add
mov
pop
inc
sbb
adc
mov
pop
lret
or
and
push
push
adc
cmpsb
sbb
jns
add
adc
xchg
dec
add
push
fisttpl
jl
les
xchg
add
cmp
ficompl
push
daa
enter
fnstcw
loopne
mov
fnstenv
push
add
or
inc
mov
jge
mov
or
outsl
ds
cli
mulb
sub
das
and
nop
adc
mov
jl
add
ficoml
xlat
repz
add
std
rol
dec
mov
adc
mov
add
and
into
jecxz
loop
mov
daa
or
jnp
in
lcall
xorb
test
popl
xchg
int3
movsl
lods
mov
fcmovnbe
fmul
rcrl
into
fisubs
in
adc
ficomps
nop
repnz
test
in
mov
mov
xchg
jl
and
xor
or
stos
test
imul
xor
popa
jmp
jns
xor
rorl
fwait
pop
pop
in
mov
push
adc
dec
pop
fs
inc
xor
xchg
dec
cmc
es
jle
les
cld
xor
adc
or
pushf
mov
push
and
add
pop
cmp
out
sbb
jo
mov
ret
adc
push
cmp
cmp
jne
lret
imul
jl
mov
xchg
movsl
jp
jae
imul
mov
fidivrs
movsl
cmp
cwtl
mov
or
dec
mov
adc
cltd
ret
mov
lods
stos
outsl
adc
jg
or
and
fs
shrb
xchg
leave
xchg
ror
fdivrp
pop
loopne
stos
addb
je
rol
sbb
pop
pushf
sbb
jmp
imul
call
dec
push
dec
mov
push
and
mulb
dec
dec
sbbb
call
sub
xchg
push
inc
stc
mov
sub
jp
pop
mov
call
mov
enter
or
adc
inc
fstpl
push
mov
arpl
mov
cmp
adc
xlat
adc
inc
push
jb
push
fs
and
add
addr16
sbb
inc
adc
loop
xchg
xchg
fsubrl
adc
cmp
insb
pop
sbb
insl
sbb
mov
fstpl
push
cwtl
leave
pop
mov
adc
call
fnstsw
or
lahf
xor
jle
adc
outsb
adc
sub
mov
addr16
add
or
mov
scas
pop
mov
mov
in
xchg
out
movsl
movsb
cli
push
pop
mov
ret
and
in
xor
cli
sbb
roll
js
adc
jmp
stos
add
jg
xor
insb
andl
inc
leave
mov
insb
inc
pop
clc
inc
push
fwait
subb
and
xor
xchg
push
jo
pop
daa
cli
jl
andb
add
mov
add
jp
xor
imul
ja
hlt
jns
lret
sbb
mov
and
or
pushf
sub
or
mul
mov
push
xchg
sbbb
in
mov
push
xor
scas
gs
jg
dec
mov
adc
in
icebp
inc
outsl
ljmp
shll
xor
jae
in
pop
mov
push
out
sbb
or
mov
sub
mulb
push
xchg
imul
adc
daa
popa
int3
sbb
movsb
jmp
xor
jne
and
and
mov
enter
jl
inc
je
mov
outsl
add
stos
dec
mov
dec
mov
mov
imul
xchg
xchg
mov
jns
sbb
es
movsb
imul
jecxz
arpl
lock
adc
dec
sub
sbb
sbbb
arpl
stos
add
xchg
cmpsb
imul
idiv
loop
mov
daa
and
pop
dec
push
sbb
pop
cmpsl
outsb
xchg
out
mov
add
cwtl
xchg
mov
adc
lahf
dec
push
enter
aas
packsswb
and
sbb
or
rol
xchg
mov
in
or
jbe
mov
iret
xor
pop
hlt
das
movsb
je
add
out
cmp
in
bt
and
mov
arpl
dec
sbb
stos
ja
jb
mov
xor
ja
mov
shlb
and
lea
dec
lock
test
int3
xchg
adc
dec
icebp
mov
fcoms
dec
out
pop
xchg
xchg
popf
gs
fcmovnbe
mov
lods
lock
sbb
daa
pop
in
xor
fidivs
pop
call
xorl
jle
mov
stos
and
andb
inc
aaa
sbb
cmpsl
adc
enter
dec
and
shrb
scas
out
cmp
jne
aas
xor
mov
or
in
lret
sub
sbb
jns
cmp
mov
andl
or
inc
jns
ret
lods
in
push
push
xlat
cld
push
aad
int3
popf
cmp
mov
cltd
fists
int
fisubs
iret
inc
dec
out
push
add
clc
lcall
inc
jmp
add
cmp
or
ds
inc
mov
cwtl
testl
push
cs
out
cs
sub
mov
clc
mov
xor
cmp
or
push
notb
or
push
pop
mov
mov
and
jmp
call
pop
xor
dec
jns
jb
push
sbb
dec
xchg
fnstcw
repz
scas
je
lods
lock
int
and
or
enter
xor
movb
loopne
fs
jae
xor
and
cmp
or
sbb
aam
inc
xlat
pushf
jbe
pop
adc
jp
dec
and
inc
mov
mov
pop
ss
jne
lods
out
mov
or
scas
jmp
notl
inc
xor
imul
push
sbb
inc
pop
jne
inc
mov
aam
add
jmp
sbb
int
test
cli
jno
fdivr
mov
scas
cwtl
adcb
clc
filds
or
and
push
mov
inc
mov
add
pop
inc
or
jns
lods
dec
adc
cmp
cmp
in
repz
push
or
xchg
and
xor
mov
cmpsl
xlat
dec
jl
clc
enter
mov
rcll
jmp
in
jbe
addb
enter
ret
xchg
pop
fisubl
das
mov
xor
lods
cmp
aad
jne
test
cmp
xlat
fsubs
gs
imul
inc
cltd
pop
cmpl
xor
lahf
ds
lret
xor
mov
leave
aaa
xor
fimuls
insl
jno
push
loopne
and
pop
xchg
in
dec
popa
sub
add
xchg
inc
pop
das
jae
outsl
clc
ja
mov
push
sub
cltd
lods
rcll
jns
inc
in
cmp
push
je
mov
pop
xchg
xchg
dec
cld
xchg
xor
push
sub
push
aam
adcl
pop
push
pop
int3
inc
pop
fmuls
insb
sbbb
out
push
insl
adc
in
jae
sti
dec
dec
sbb
dec
ss
mov
mov
sub
xor
mov
adc
into
xor
xor
aad
jg
into
dec
jmp
push
in
fmull
les
jb
xlat
add
in
in
push
lds
mov
divb
les
decb
pop
lret
xor
push
arpl
xchg
std
mov
mov
pop
jle
insb
pop
scas
mov
pop
mov
and
xchg
mov
js
sub
or
imul
shll
xlat
call
or
cltd
scas
mov
push
push
pop
push
loopne
or
push
xor
loopne
addl
dec
scas
fisttpll
pop
add
ljmp
lods
or
loope
jne
lock
inc
scas
dec
xchg
add
xchg
mov
lods
adc
lret
ret
dec
shlb
divl
imul
mov
sbb
or
movsl
xchg
sbb
maxps
add
lahf
adc
push
aas
sub
push
mov
jb
push
push
sbb
fxam
lahf
pop
pusha
sub
into
loope
sbb
cmpsl
mov
inc
add
pop
or
xorl
lea
sbb
push
jecxz
lds
sub
orb
xor
xor
mov
ja
fldenv
stos
xchg
adc
enter
scas
dec
push
dec
adc
inc
pop
pop
arpl
mov
sahf
dec
rolb
xlat
push
pop
in
sbbb
loope
pop
enter
sub
sbb
push
push
ja
sbb
xchg
fdivrs
pop
xor
js
mov
xchg
push
or
or
lahf
out
inc
popf
mov
outsb
leave
add
das
mov
and
movsb
mov
imul
gs
pop
pop
sahf
incl
lds
adc
cmp
inc
movsl
sub
icebp
shlb
lods
push
inc
mov
jo
or
scas
xlat
jp
int3
in
jo
scas
outsl
cmp
gs
push
pop
xchg
mov
and
shr
pop
xchg
test
js
mov
push
mov
adc
sbbl
mov
movsl
jmp
sti
test
xchg
jne
inc
or
and
dec
adc
mov
movsl
jmp
sti
test
xchg
jne
inc
or
and
dec
adc
mov
xchg
aad
movsl
jmp
nop
test
xchg
jne
inc
or
and
inc
and
rorl
pop
rep
aad
movsl
jmp
sti
add
aam
xchg
out
or
push
adc
and
pop
lds
cmp
or
and
fldl
xor
std
jge
insl
aad
lds
cmp
test
std
gs
jnp
inc
int
fadds
adc
jge
insl
push
pop
add
cmp
jge
jne
or
xor
jns
clc
jbe
mov
lds
ds
ret
xchg
inc
jle
adc
into
xchg
xor
fcoms
xor
stc
jge
jge
aaa
dec
shl
pop
mov
icebp
in
cwtl
adc
lods
mov
xchg
and
cmc
lods
aad
inc
mov
mov
in
stos
fstpt
xchg
out
pop
inc
mov
popf
js
dec
nop
sbb
xchg
pusha
add
adc
mov
dec
add
cli
lea
sbb
dec
mov
ret
int
mov
xor
int
out
and
insl
jo
in
sub
pusha
inc
cmp
cmpsb
adc
popf
jmp
mov
and
jb
jge
insl
aad
test
sub
xchg
imul
fstpl
push
mov
popa
lret
xchg
adc
sbb
or
jp
pop
xchg
jns
lea
add
leave
dec
ljmp
insl
add
jle
push
dec
cwtl
and
xor
inc
cmp
inc
flds
cmp
xchg
sbb
gs
push
fldl
xor
popf
add
insl
aad
lds
cmp
test
push
fldl
xor
popf
add
inc
jge
lcall
dec
loope
ss
aam
jb
lcall
es
inc
test
and
dec
addl
jmp
add
xchg
movsl
push
filds
sub
dec
mov
mov
scas
jge
xor
cmpsb
mov
dec
mov
pushf
or
adc
stos
push
push
push
scas
sub
mov
inc
xlat
push
iret
adc
mov
aad
rolb
mov
stos
xchg
push
sub
mov
ja
dec
push
mov
mulb
loopne
inc
imul
aaa
pop
pop
and
ret
push
add
inc
and
pop
loop
mov
lock
adc
lods
sub
adc
ss
pop
orl
int3
in
fistl
aas
cmovb
ret
dec
pop
cmpb
sbb
xchg
fcomps
mov
call
add
jnp
push
test
lods
add
cld
mov
jns
add
ds
js
scas
adc
mov
sbb
cli
sarl
repz
int3
daa
imul
xor
adc
call
or
loop
imul
pop
and
mov
lods
fcomip
sti
mov
mov
add
xor
pop
sub
outsb
outsb
xchg
lret
dec
subb
push
and
out
jne
imul
and
xchg
or
sbb
push
aad
mov
shlb
xchg
cmp
fs
add
aad
fwait
sub
pop
out
cmpsb
push
stos
in
hlt
cmpsl
xchg
push
push
cwtl
adc
pop
inc
inc
addr16
add
mov
sarb
fcmovne
mov
arpl
subb
lds
or
or
insb
fidivrs
test
or
addl
dec
test
imul
out
jb,pn
mov
cs
jecxz
js
ljmp
aam
dec
ljmp
in
push
pop
roll
outsb
mov
fcompl
hlt
xchg
sahf
mov
sub
clc
and
gs
mov
xor
clc
out
test
lahf
leave
shll
push
lods
outsl
fistl
andl
xorb
jg
fsubrp
ja
rcrb
repnz
or
ret
sahf
in
movsb
jl
add
ret
xor
xchg
int
cmp
ljmp
jne
adc
or
mov
mov
pop
xchg
mov
ss
xor
std
mov
dec
andb
mov
sarl
dec
xchg
inc
je
cli
add
cwtl
mov
jnp
mov
inc
adc
gs
prefetch
inc
pushl
aam
aam
pop
xor
ret
arpl
cmp
cmpl
ret
sbb
lcall
xchg
insl
out
pop
ds
fcomp
inc
int
cld
mov
fnstcw
mov
jno
pusha
fstpt
sti
das
clc
repz
ret
nop
subb
add
iret
sti
aaa
mov
insl
loope
pop
je
repnz
add
pop
jl
arpl
and
stos
or
gs
pop
xchg
adc
xor
xor
dec
sbb
add
xchg
add
jp
inc
sbb
je
mov
and
and
xchg
mov
pop
xor
xor
cmpsl
or
imul
push
sbb
outsb
dec
cmpsb
lea
and
sbb
xchg
das
out
mov
jg
sub
out
and
popl
xchg
mov
mov
in
fs
sub
cmpb
movsb
test
xor
stc
testl
mov
jmp
call
cmp
lret
fsts
lcall
xchg
loopne
je
inc
sbb
dec
mov
jne
and
insb
jae
mov
insl
dec
and
dec
test
inc
cmp
shlb
fcmovnb
fisttpl
test
in
inc
push
add
out
fmulp
enter
fisubrl
loope
aam
daa
adc
sti
in
sar
jno
int
xor
loop
fwait
lds
sub
mov
xor
test
pusha
bound
pop
int3
add
xchg
in
inc
in
sbb
nop
sbb
jp
je
mov
ja
inc
push
inc
clc
push
cmp
or
inc
mov
jb
js
jne
jmp
lahf
cmpsl
dec
js
add
inc
sub
leave
xor
or
mov
aam
jns
inc
sahf
popa
addb
fisubrs
fstpl
xlat
test
cmp
sbb
xchg
push
ljmp
ja
sub
pop
mov
sub
lds
or
iret
add
out
nop
loopne
push
loop
cmc
insl
mov
dec
stc
je
fs
fs
lods
aas
imul
roll
insl
inc
or
nop
mov
xchg
fidivrl
jle
mov
lods
fs
lahf
jecxz
adc
mov
lret
xor
xchg
cli
cmc
pop
cmp
xchg
mov
xchg
inc
loope
and
mov
aam
test
nop
xchg
sub
dec
movl
aas
ret
lock
stos
sub
sub
lret
jle
stc
xchg
hlt
mov
loopne
imul
cmp
fwait
insb
push
dec
pop
cltd
sahf
aad
out
sbb
fistps
addr16
sbbl
pushf
adc
leave
push
mov
iret
enter
jecxz
shrl
cmc
cmp
xchg
leave
sbb
adc
push
jae
pop
dec
lcall
pop
xor
adc
push
rolb
bound
and
rorb
mov
lcall
mov
mov
sbb
jb
movaps
or
mov
mov
call
cwtl
jno
mov
in
jo
movsl
mov
ljmp
lcall
push
xorl
loopne
mov
mov
mov
and
leave
rsqrtps
jb
scas
test
shlb
cmc
int3
sub
xor
jg
dec
mov
cs
xor
int3
dec
les
lods
cs
lahf
sub
in
or
frstor
js
dec
mov
mov
test
cmp
adc
xchg
popa
stc
xchg
or
imul
adc
je
bound
push
into
test
pop
mov
inc
int3
scas
pop
add
xor
inc
or
dec
scas
jnp
mov
pushf
push
movsl
outsl
cltd
cmp
js
xchg
xchg
xlat
adc
xlat
sub
inc
add
nop
test
lds
mov
lret
add
icebp
lea
and
adc
mov
cwtl
xlat
push
push
push
push
mov
xor
push
negb
or
pop
mov
stc
adc
int3
scas
or
dec
adc
jmp
fldt
lods
add
mull
cmpsl
adc
ds
xchg
movsl
push
out
sbb
pop
inc
dec
dec
mov
cmc
fs
adc
mov
push
xor
mov
imul
mov
pop
mov
mov
or
mov
call
jecxz
aaa
movsb
dec
mov
arpl
fdiv
sti
pop
jge
or
mov
pop
xchg
mov
jne
push
cmpl
push
mov
pop
mov
jl
shll
shll
ja
push
leave
jns
pop
push
rol
aam
test
addr16
movsb
sub
mov
cld
sar
aaa
addb
cmc
push
inc
leave
fldpi
xchg
lret
xor
sbbb
test
out
repnz
dec
jmp
mov
or
inc
jecxz
dec
pop
inc
adc
sbb
pop
mov
repz
dec
push
xchg
sbb
movsl
push
lods
mov
xchg
or
xchg
mov
push
std
jmp
mov
mov
jno
adc
jge
outsl
fisttps
dec
sti
clc
pop
repnz
sbb
icebp
pop
out
rcll
dec
xchg
mov
dec
add
xchg
mov
xchg
cwtl
imul
movsl
adc
add
dec
or
dec
xchg
pop
incb
push
push
add
inc
pop
jmp
sbb
inc
imul
imul
pop
push
out
rol
dec
xchg
push
dec
pop
cld
sbb
andl
push
mul
pop
cli
jl
outsl
xor
mov
add
lods
dec
sub
and
rcrb
adc
fisubs
das
hlt
shll
rolb
rorl
sub
negb
popa
xchg
lret
xchg
dec
iret
in
fiaddl
dec
loop
cmp
pop
xor
popf
lahf
insl
sbb
int
mov
mov
sbb
test
jo
jae
fstps
call
jbe
cli
add
out
out
jmp
popf
inc
and
movb
lahf
pop
ja
cwtl
xor
in
fnsave
push
or
shlb
and
xchg
call
movsl
cmpsb
inc
fidivs
lret
dec
xlat
imul
int
fcompl
cltd
add
and
insb
jmp
or
cwtl
mov
cmp
pop
subb
jne
pop
mov
adc
test
jge
lea
push
jmp
fcmovu
mov
push
js
push
test
jne
sbb
nop
mov
push
xor
xchg
lret
fs
dec
pop
jae
jg
imul
pop
sub
mov
inc
subb
and
mov
das
or
xchg
in
stos
dec
shrl
dec
dec
adc
lods
dec
dec
sub
adc
test
adc
enter
mov
xchg
out
adc
bound
in
rcrl
and
inc
jne
mov
jne
jb
cmp
dec
sbb
enter
mov
cmpsb
pop
mov
xor
mov
mov
cwtl
or
xlat
shlb
xor
aas
push
ret
int3
subl
repz
mov
test
mov
jmp
lret
inc
jo
cmp
mov
cli
pop
inc
je
adc
mov
push
jbe
sbb
adc
push
lea
adc
push
nop
and
filds
push
push
movsb
cmp
pushf
loope
lods
dec
hlt
data16
inc
mov
out
sbb
pop
jmp
xchg
add
add
aam
pop
ja
add
or
imul
lea
es
rcr
add
xchg
test
cmpsb
dec
fs
mov
ret
pop
xorb
cmp
mov
sbb
test
test
inc
std
pop
xor
stc
adc
lcall
mov
push
mov
rorb
sub
mov
outsl
adcb
cltd
push
dec
dec
in
mov
call
inc
xchg
movsb
push
outsl
fistps
dec
mov
lea
call
js
pop
in
jp
push
jb
fstpt
iret
rol
leave
jb
cmp
out
jo
sbb
sub
loop
packuswb
jl
das
sub
std
aad
int3
add
rcrl
mov
xor
xchg
mov
xchg
mov
cli
pop
cmp
shll
add
call
and
stos
add
test
test
movsl
aaa
lock
push
and
dec
pop
movsl
fisttpl
adc
cs
mov
pop
inc
xchg
mov
pushf
lahf
pop
cmp
inc
lea
js
aas
inc
mov
enter
mov
jge
cmpsl
mov
mov
pop
pop
ds
daa
lea
ss
popf
sub
lret
popf
mov
sub
clc
cmp
push
jne
in
fld
fbstp
mov
jb
jns
mov
leave
push
movsl
inc
and
mov
int3
or
fs
mov
sbb
or
push
ds
inc
fucomip
sbb
push
mov
mov
out
push
out
mov
inc
sbb
in
sub
in
jae
and
popf
cmp
sub
push
push
daa
jb
ja
xchg
fstpl
push
xchg
mov
rorb
mov
xlat
or
lods
cmp
push
les
imul
mov
cmp
pop
pop
sbb
push
test
mov
roll
rcl
dec
sub
adc
xchg
or
mov
mov
mov
cmovns
in
dec
mov
xchg
scas
sahf
orl
mov
add
les
mov
inc
push
sub
adc
cmc
xchg
cltd
sbb
outsb
shl
push
arpl
pop
cs
cs
incl
shl
inc
jns
shrb
xor
xchg
sub
inc
test
in
push
rorl
addr16
mov
enter
xor
stos
dec
inc
fbld
mov
adc
stos
in
or
mov
cltd
pusha
cmp
mov
les
xchg
into
xchg
xchg
sub
or
lcall
ljmp
cmpsb
outsb
aad
sahf
enter
faddp
dec
orl
jl
sbbl
lahf
mov
inc
xor
cmp
mov
or
push
mov
mov
in
dec
and
jl,pt
insl
mov
std
loope
dec
fs
dec
xchg
das
mull
mov
pop
inc
fstl
adc
mov
add
mov
leave
lret
mov
xor
xchg
cmpsl
xchg
loopne
jo
arpl
add
call
pop
jge
enter
clc
xor
mov
dec
sahf
rcll
dec
imul
out
popf
mov
jecxz
shlb
adc
sub
imul
or
fsubrs
xlat
xchg
movsb
dec
push
lods
xor
mov
leave
hlt
loopne
lcall
jns
into
pop
aad
jb
ljmp
sbbb
out
rorb
in
loop
insl
push
jb
sbb
andl
cwtl
jae
insl
xchg
cld
mov
outsl
mov
lock
pop
insl
xor
xchg
mov
pop
sbb
jg
cmp
dec
cmp
in
mov
test
mov
sarl
aas
xchg
pusha
shl
xchg
ret
scas
adc
add
adc
jne
pop
pushf
es
and
xchg
sub
enter
push
cmp
sarl
adc
mov
adc
xor
jns
aaa
cmp
repz
push
xchg
jae
stos
or
arpl
repnz
xchg
roll
adc
jno
and
insl
cmc
ss
shrl
aam
jmp
lret
jo
daa
out
ljmp
pop
das
test
mov
repz
int3
cmpsb
sar
mov
jae
add
loop
imul
push
movl
leave
cmp
out
lock
iret
mov
jbe
loop
xor
loope
stos
jae
mov
cltd
xor
outsl
das
sarl
jbe
mov
ret
pop
imull
call
fmuls
dec
push
scas
xchg
jg
dec
mov
out
or
mov
push
add
xchg
pop
jg
test
cli
dec
imulb
dec
or
inc
add
ljmp
leave
out
mov
ffreep
mov
cmpsb
insl
movsb
movsb
data16
mov
ss
add
inc
sarb
jmp
xchg
in
mov
push
imul
test
push
cmp
lock
scas
in
pop
jp
pop
cmc
push
and
cmp
popf
insb
push
cltd
dec
std
jmp
dec
sub
inc
cmp
add
mov
es
jge
mov
loop
test
cwtl
icebp
xchg
sti
ds
and
movsb
cmp
pop
imul
add
sbb
sbb
clc
ret
sub
and
inc
xor
lcall
repnz
test
or
or
xchg
xchg
dec
mov
into
push
sub
push
and
adc
inc
int
out
imul
sbb
mov
pop
jns
scas
fcomip
pop
rcl
sbb
or
cmp
dec
cltd
sbb
rcrb
mov
inc
fwait
sarb
mov
popa
movsl
pop
push
or
repz
iret
fiaddl
jae
aas
clc
and
pushaw
lock
test
ds
pop
cli
push
xchg
das
pop
in
pop
insb
mov
pop
aas
insl
scas
pop
or
dec
push
mov
outsl
stos
fdiv
insb
push
test
stos
push
lret
inc
cmpsb
fiadds
dec
mov
add
inc
or
call
rolb
aaa
xchg
pop
jbe
subb
pop
in
test
aas
mov
xor
push
mov
xchg
sub
pushf
jbe
push
cmp
nop
flds
andl
add
xchg
dec
icebp
enter
shlb
jge
dec
inc
divl
call
jp
int
pusha
pushf
out
push
leave
fimuls
or
insb
fsubrl
mov
in
mov
push
and
lods
and
add
adc
dec
aam
push
stos
test
mov
addb
and
or
ljmp
cmp
jns
mov
xor
jmp
sub
ljmp
xor
scas
movsl
lods
cmc
test
sub
imul
ret
lcall
fidivrs
xchg
dec
push
pop
xlat
and
lcall
sbb
xchg
sub
loop
mov
notb
mov
sbb
cmc
sub
sbb
push
sub
addr16
popa
fmulp
push
mov
scas
mov
mov
outsl
mov
dec
pop
shr
dec
push
push
fs
or
aam
out
rorb
sbb
aam
sub
push
ret
mov
push
testb
pop
sub
push
or
aas
lcall
shll
adc
push
scas
into
xor
xchg
sbb
xchg
or
cmp
jne
cmpsb
dec
or
mov
lret
cmp
dec
add
jno
mov
xchg
mov
les
add
and
fmul
or
mov
xchg
sbb
and
push
arpl
pop
in
lods
xchg
aas
rorl
ds
jne
xchg
inc
fld
xor
inc
lret
jp
daa
fsubrl
stc
test
mov
fsubs
push
add
ja
cmc
cmpsl
cmpsb
xchg
test
xlat
dec
mov
hlt
mov
int
pop
xchg
dec
dec
cld
jnp
rorl
sbb
cmp
aaa
inc
jg
sahf
dec
cmpsl
loopne
ss
pushf
or
add
aam
enter
jne
cltd
sarl
filds
jno
pop
push
sub
lds
mov
mov
insb
dec
xchg
xor
cmp
push
add
jmp
mov
or
dec
mov
lcall
or
fildll
dec
lods
xchg
cmp
sub
les
or
test
aas
mov
loopne
mov
xor
inc
call
sub
xor
cmp
mov
fwait
jne
mov
fisubs
mov
ss
popa
cmpsb
popa
in
jp
inc
lods
dec
repz
inc
pop
jnp
out
cs
and
ja
mov
inc
jbe
adc
in
cld
mov
cli
inc
and
in
xlat
mov
das
je
dec
xor
das
jns
inc
add
mov
push
test
xchg
xchg
dec
pop
loopne
popl
inc
xor
ficomps
adc
or
jp
jmp
out
fbld
push
mov
imul
jl
sahf
fcomi
jnp
sub
cmpsl
mov
movsb
push
lret
mov
stos
sbbb
jecxz
in
jmp
or
fldcw
out
movsl
sbb
inc
mov
in
aaa
pop
js
outsb
outsl
loop
sbb
mov
sbb
test
xor
insl
adc
xor
mov
jp
cmp
pop
pusha
mov
jno
or
mov
aas
pop
pop
cmpl
andb
xchg
push
inc
test
mov
inc
pusha
inc
mov
shr
jecxz
mov
repnz
jl
fcompp
add
scas
mov
ja
aaa
xor
fldl
jae
jp
mov
sbb
inc
stc
dec
fnstsw
negb
jo
mov
jl
imul
movsl
ficomps
imul
out
sbb
lea
jecxz
mov
out
enter
and
pop
jge
andb
sbb
xchg
scas
pushf
outsb
gs
xchg
mov
fstl
xchg
aam
ss
sub
cli
push
test
xor
xor
cmp
cli
jmp
test
call
mov
push
notb
xchg
push
pop
mov
xchg
xor
push
inc
rorb
stos
jp
fnstsw
inc
inc
adc
fs
xchg
mov
jecxz
mov
inc
inc
or
fs
pop
jmp
xchg
sarl
jg
ljmp
cmpsl
iret
test
nop
add
popf
xchg
dec
ja
xor
icebp
jnp
enter
es
cmpsb
iret
push
adc
and
sbb
not
jbe
mov
mov
sub
inc
pop
jb
jo
jmp
fwait
jmp
inc
in
ror
fldenv
jno
outsb
aam
mov
in
push
mov
dec
mov
movsl
sub
jne
gs
push
fldl
xor
popf
add
insl
aad
lds
cmp
test
push
fldl
xor
popf
add
insl
lds
dec
mov
mov
or
pop
fldl
xor
popf
xor
insl
pop
pop
in
dec
mov
mov
xchg
sbb
lcall
xor
cli
jb
stc
mov
leave
pop
in
xchg
mov
jns
imul
sbb
lods
stc
mov
leave
in
mov
fisttpll
or
cmp
dec
sbb
mov
movsb
jmp
hlt
mov
fisttpll
push
sub
insl
imul
adc
stc
rcrb
mov
lcall
test
push
gs
xchg
xchg
insb
shrb
test
movl
subl
stc
insl
mov
push
in
inc
aas
jle
inc
sahf
sbb
xchg
xor
cmp
or
mov
mov
cmpsb
dec
cmp
cmp
jge
out
sub
xor
adc
sub
push
xchg
icebp
jge
mov
dec
pop
inc
jl
adc
fsubs
adc
stos
ds
aad
rolb
dec
dec
sub
fisttpll
pop
or
jmp
cli
mov
les
adc
cmp
push
sbb
rcll
sahf
fwait
call
sub
aaa
jns
insl
push
sbb
fwait
xor
fsubl
sbb
mov
or
push
push
inc
cmp
enter
loope
cmc
mov
int
fisttpll
or
cmp
dec
sbb
lods
stc
mov
leave
in
mov
fisttpll
or
cmp
dec
sbb
lods
stc
xchg
cld
xor
out
sbb
into
sbb
or
jge
loope
add
xchg
pop
sub
call
xor
mov
iret
aad
pusha
mov
push
jne
testl
popa
xchg
mov
and
lcall
roll
xorl
out
mov
adc
sub
sahf
fwait
mov
mov
mov
stc
repz
and
mov
adc
dec
or
lods
or
push
xchg
into
fbstp
fwait
stos
mov
test
sbb
inc
test
dec
ljmp
sub
pop
out
cmp
and
pop
pop
rcl
inc
push
dec
jbe
mov
cmp
cld
jg
jne
movsl
push
cmp
lret
sbb
call
jb
push
add
ret
ret
leave
mov
dec
sub
lds
out
addr16
xchg
mov
xchg
ja
repnz
test
mov
add
ss
mulb
dec
rcrl
addr16
cwtl
sub
add
fprem
dec
adc
loopne
cmpsb
fucomp
shl
je
and
es
pop
nop
lods
push
lea
add
cmp
out
cmc
scas
xchg
push
dec
mov
aaa
jb
jle
ud1
idivl
or
es
adc
sti
lods
icebp
xor
shrl
mov
outsb
lret
or
inc
mov
arpl
mov
dec
stos
cmpsb
mov
test
xorl
mov
push
scas
add
jge
jmp
cmpb
arpl
jp
adcl
push
xchg
and
cmp
lahf
imul
dec
ret
movsb
fildl
addl
dec
dec
stos
sub
jae
aad
test
insl
rcrb
adc
mov
test
add
lret
gs
je
jo
xor
mov
jmp
dec
fcoml
xchg
out
repz
jne
inc
pop
xor
xchg
dec
pop
movsb
mov
movsb
js
pop
or
fwait
pop
push
sub
js
pop
mov
mov
test
cmp
jg
xor
in
cmp
cmp
sbb
lcall
push
divb
mov
repnz
sub
or
xchg
arpl
mov
clc
loop
or
ret
mov
mov
test
jno
or
into
mov
add
mov
sub
xchg
push
shlb
lret
int
push
mov
add
andl
mov
sub
mov
lds
cmpsl
mov
nop
ret
scas
or
pop
xchg
mov
adcl
loop
in
cmpb
mov
jg
sub
add
adcb
ret
in
sbb
push
mov
cmp
pop
call
call
pop
xor
cmp
dec
fisubrs
push
push
lock
js
jl
pop
push
bound
movsl
jae
stc
xchg
lods
push
loop
jb
mov
js
loop
rcll
cltd
sahf
loop
rorl
adc
jae
add
stos
pushf
add
test
repz
ss
mov
repz
mov
xchg
pop
cltd
add
xor
dec
mov
add
clc
scas
in
and
cs
ljmp
insl
pop
xor
les
mov
or
cmp
add
test
mov
cwtl
ror
sub
push
push
cmp
push
ja
pop
out
lcall
add
call
ja
mov
mov
in
push
orl
inc
mov
into
subb
xchg
fsubs
mov
pop
cmc
lods
or
sub
jae
ss
push
mov
sub
xlat
mov
sahf
or
popa
insb
adc
shlb
adc
cmp
or
dec
sbb
push
push
add
sbb
dec
xchg
mov
out
push
xor
xor
xchg
or
adc
aas
cli
mov
popf
ret
mov
inc
jbe
test
fmul
push
sar
scas
repz
push
push
xor
mov
push
add
xlat
shll
jbe
inc
nop
xchg
lret
xorb
faddp
xchg
jl
push
pop
pusha
xchg
std
xchg
das
xchg
ljmp
test
sub
stos
ficoms
add
mov
ja
test
sbb
xchg
out
pusha
fs
mov
arpl
stc
mov
fimull
push
int
and
mov
pop
pop
fimull
lock
cli
cltd
xchg
jge
scas
fs
push
nop
xlat
in
pop
ret
mov
out
mov
and
cmc
leave
cli
aaa
sbb
in
int3
fdivrs
cmp
daa
sbb
mov
adc
mov
mov
aaa
cld
sub
or
dec
xsha1
cmpsb
int3
aaa
popa
jb
cmp
sti
inc
call
sub
andl
movsl
insl
gs
lds
subb
mov
es
or
iret
mov
mov
daa
xchg
ret
xorb
sbb
rcrb
pop
in
into
sahf
sub
insl
repnz
in
push
or
mov
jge
nop
push
aam
cmp
stos
lods
sbb
jp
xor
sbb
cli
ret
lret
cmc
jmp
adc
mulb
pushl
add
pop
out
mov
add
mov
push
lds
ret
rolb
sub
fdivrl
push
mov
cli
dec
rclb
sbb
clc
mov
push
push
out
xchg
pop
stos
sbbb
les
xchg
popa
mov
jne
ret
scas
and
pop
test
jl
out
cmpsl
cmp
lea
jo
push
lea
push
insl
aaa
pushf
aad
mov
nop
jecxz
mov
cwtl
loope
enter
xchg
jp
leave
jmp
fisttpll
clc
mov
sub
in
test
movsl
test
add
loope
jno
sbb
lcall
popf
dec
cli
add
shrl
daa
bound
pop
push
sbb
in
mov
pop
xlat
cmc
xor
movb
stos
xchg
push
fcompl
jg
insb
adc
mov
cmp
mov
inc
nop
push
call
cmc
scas
mov
sub
mov
and
mov
out
pop
inc
xchg
lahf
lods
sub
scas
movsb
add
xchg
jb
mov
loop
cmp
les
out
pop
in
roll
test
xchg
out
clc
xor
mov
cltd
mov
stc
ljmp
loop
fmul
cs
shrl
mov
cmp
push
and
cwtl
add
sub
xchg
push
lea
sub
lds
sbb
pop
mov
popf
sub
insb
mov
jmp
mov
movsb
ja
fcmovu
xchg
in
mov
xlat
jecxz
cli
pop
pop
icebp
add
jl
inc
inc
mov
scas
outsb
nop
mov
fldenv
pop
push
jae
or
cwtl
sbb
jb
cwtl
or
jbe
sbb
shlb
xchg
mov
jp
mov
repz
and
cs
mov
sub
jne
ja
jmp
mov
fistl
dec
insl
xchg
xchg
call
jns
sbb
mov
lock
dec
rolb
cmp
and
repnz
imul
sbb
mov
mov
ds
pop
adc
dec
jne
popf
xor
inc
lock
shr
pop
frstor
add
inc
dec
paddw
int
xlat
xlat
cltd
xchg
daa
js
cltd
jp
xlat
sub
fisubrs
and
aad
aas
bound
aaa
mov
inc
or
divl
enter
fsubp
insb
jnp
movsb
xchg
or
dec
ror
mov
mov
mov
fldcw
and
pop
jns
jg
mov
add
inc
mov
cmp
mov
xor
xchg
ror
jae
lods
ljmp
popa
xlat
ja
jp
inc
sbb
pop
adc
pusha
bound
or
pop
fidivrs
adc
cmpb
jb
mov
adc
sbb
push
in
mov
insl
stos
jne
int3
dec
shrb
iret
aad
clc
push
rolb
add
jb
ror
pop
in
addb
ds
ljmp
stc
mov
jle
test
push
cs
es
jae
dec
pop
jo
or
call
jle
xor
aas
outsb
je
loop
roll
mov
xchg
popf
jle
pushf
inc
and
dec
subl
jns
lahf
insl
and
dec
lahf
jnp
testb
aas
sahf
sbb
into
adc
jnp
sub
clc
icebp
dec
dec
push
shll
mov
add
mov
loop
in
push
xchg
mov
pop
outsl
jge
adc
insl
xor
xchg
jmp
adc
cmp
dec
adc
js
ja
dec
and
addr16
aaa
cmp
aam
inc
xchg
xor
xchg
xchg
es
dec
lret
std
sbb
cmpsl
cmpsb
fucomp
int3
mov
push
icebp
xchg
push
addr16
in
lret
cltd
lock
jno
leave
ljmp
adc
and
sub
xlat
andb
sbb
xor
sub
aam
loop
inc
inc
jmp
push
inc
mov
repnz
fsubrs
adc
iret
aaa
adc
lret
out
inc
push
lret
jge
cmpsb
cltd
pop
sub
or
icebp
mov
test
jbe
mov
jo
inc
inc
push
sub
outsl
mov
shl
sub
test
pop
and
sub
inc
mov
mov
mov
insl
fisttpl
mov
push
std
xchg
pop
push
mov
adc
xchg
ljmp
fcmovu
adc
cmpsl
xlat
or
pop
inc
xor
out
pop
dec
int3
popf
dec
movsb
mov
cltd
or
pop
or
cmc
add
or
mov
insl
aad
mov
sbb
lds
dec
sti
fistl
and
flds
sbb
mov
sbb
jge
jno
push
xlat
mov
outsl
imul
repnz
insb
das
out
and
cmpsb
dec
iret
out
mov
push
xlat
inc
repnz
fldt
enter
cmp
pushf
mov
xchg
cmp
outsb
std
bound
les
push
adc
out
lods
xor
or
inc
xchg
inc
aam
and
lds
fildll
outsb
xchg
popa
mov
std
inc
xchg
div
add
pop
add
hlt
repnz
scas
jg
push
jg
pop
lret
add
xor
push
adc
jp
pop
rorb
enter
jbe
mov
outsb
js
dec
push
popa
test
outsl
sti
pop
movsb
addr16
adc
xchg
mov
rcrb
mov
jle
push
popf
lods
cmp
jno
sti
fwait
pop
sbb
addr16
sbb
test
xor
je
repz
into
sbb
movsl
hlt
ret
add
sbbl
xchg
movsb
stos
dec
dec
jnp
imul
pusha
out
inc
sub
xchg
sbb
repnz
fdivrs
or
rolb
and
sub
fiaddl
and
mov
cmp
lds
cmp
mov
jle
fldl
pusha
and
push
bound
loope
out
sbb
pop
cld
ficomps
call
xor
xchg
lret
lahf
sub
push
cld
mov
in
cmp
bswap
lds
rorb
xchg
loop
imul
or
sbb
inc
dec
xor
jecxz
pop
and
or
mov
inc
push
mov
push
xchg
punpckldq
jl
xor
mov
cmp
push
fdivl
arpl
add
prefetch
or
and
mov
push
in
sub
jle
adc
or
jge
adc
push
gs
int3
daa
inc
pop
mov
pushf
std
push
sub
js
movsb
xlat
cmc
push
jns
outsl
loopne
sub
bound
lea
mov
jbe
mov
scas
push
pop
cs
popa
sar
push
fwait
sbb
mov
sub
cmpsb
and
mov
jne
cmpsb
jge
sbb
rep
mov
xchg
xchg
cmpsl
mov
sbb
hlt
sbb
test
jns
xchg
or
dec
test
dec
sbb
insb
mov
mov
cmpsb
movsb
dec
aaa
hlt
or
push
outsb
adcl
clc
imul
int3
add
cmc
mov
mov
dec
stc
leave
rcll
outsb
jmp
or
xor
jge
scas
mov
push
push
sbb
xor
lret
jle
mov
lret
test
gs
test
xchg
pop
int3
loope
sbb
sbb
insb
add
mov
repz
and
rorl
in
cmp
loope
pop
in
mov
mov
or
and
push
es
adc
jae
addr16
lea
sbb
in
dec
sarl
add
dec
dec
inc
pop
xor
xor
loope
fcomps
push
mov
lods
sub
mov
daa
out
enter
mov
sbb
push
pop
inc
lds
dec
sbb
ss
mov
cltd
pushf
mov
shl
pop
ds
mov
out
std
pop
inc
mov
aas
inc
inc
cwtl
lods
xchg
stc
sbb
in
xor
int
stc
pop
mov
jecxz
aas
mov
xchg
and
mov
sahf
push
stos
test
popf
ret
jae
insb
push
sub
loop
stos
adc
into
fidivl
leave
lods
rcl
dec
sahf
gs
cmc
ret
cmp
test
aaa
inc
inc
cmp
dec
add
cmpl
addr16
adc
mov
das
lret
add
xrelease
insb
ret
test
lret
lods
cwtl
xchg
jle
dec
push
lods
jge
inc
repnz
xlat
nop
push
movsb
fnsave
pop
xor
dec
cs
lea
xchg
int3
cld
pushf
leave
jbe
pop
sarb
xor
cmpsl
mov
je
xor
das
ja
mov
fwait
add
mov
jno
jge
lea
enter
push
fdivrp
push
es
pmovmskb
cmpsl
das
fwait
jecxz
mov
mov
cmpsl
adc
inc
aam
mov
cltd
mov
andb
mov
mov
and
jge
mov
mov
cli
cld
mov
cmp
mov
adc
pop
and
fs
cmp
sbb
popa
sub
jp
pop
cmpsb
inc
xlat
jns
lahf
adc
in
les
adc
fwait
outsb
jae
push
lds
lret
jmp
jp
mov
fstcw
das
aaa
icebp
mov
xchg
sub
pop
mov
movsb
aad
mov
sbb
adc
lock
adc
iret
pop
adc
and
jns
adc
add
jl
into
js
pop
jg
mov
in
faddl
add
shll
jnp
nop
push
mov
mov
pop
fwait
or
jp
cmpsb
test
cwtl
sbb
faddl
test
ror
shrb
cmpsb
into
adc
orl
push
cmp
push
dec
pusha
cmp
aam
into
dec
scas
je
imul
lock
out
cmp
jne
push
push
rorb
mov
and
push
fsubrs
mov
std
jmp
jmp
and
int3
imul
popf
xchg
icebp
xlat
and
stc
insl
fwait
cmc
cmp
dec
ds
in
xor
jo
cli
mov
add
es
test
sub
std
lock
or
xlat
repnz
inc
les
or
mov
cmp
jbe
sbb
adc
aas
int
shrb
push
scas
ficoms
inc
sub
push
and
dec
jle
push
pop
xchg
sarb
rcrb
push
jbe
push
scas
imul
nop
sbb
call
cltd
pop
fwait
mov
fsubs
sbb
cld
jecxz
test
arpl
cld
mov
mov
pop
add
hlt
adc
dec
mov
cmp
je
fsin
dec
mov
inc
idivb
cmpsb
mov
in
cmpsb
ss
xchg
mov
and
fwait
add
jne
cmp
xchg
loope
sbb
mov
jns
sub
inc
and
andb
jge
rolb
or
sbb
lcall
cmpsb
jae
test
js
fisttpll
fcompl
adc
das
pop
mov
mov
ret
js
sub
fcmovbe
sbb
inc
ds
aad
test
cmp
mov
test
lock
add
dec
insl
jo
fimuls
xor
movsb
jge
popa
sbbb
shrl
ja
jns
mov
cmp
mov
fcomps
in
xorl
xchg
mov
pop
arpl
adc
fwait
inc
ret
jl
xchg
imul
stos
cmp
dec
into
jg
adc
mov
adc
cmc
ljmp
inc
arpl
push
test
sbb
adc
lret
bound
sub
out
pop
in
cmovs
not
aam
icebp
jae
adc
jns
arpl
pop
sbb
inc
xor
dec
add
sub
int3
cs
push
dec
mov
and
ret
cltd
ja
mov
jp
mov
or
pop
int3
xchg
fidivrl
imul
aam
int3
inc
movsl
add
subb
out
out
sbb
imul
push
and
cmp
test
push
push
mov
ljmp
cmp
loopne
rcrb
sti
test
mov
out
xchg
rorb
mov
add
sub
push
adc
andb
jp
and
out
roll
jl
cmp
sub
mov
enter
je
sub
pop
ret
xchg
or
mov
insl
mov
adc
nop
cmp
ror
iret
dec
shl
call
fs
pop
sbb
xchg
mov
cli
sbb
push
rolb
insb
sub
ret
push
push
jl
aad
nop
movsb
mov
xchg
and
subb
jecxz
dec
stos
imul
lods
lds
lcall
xor
loopne
push
xor
in
inc
sub
inc
shr
and
cmp
push
sub
lret
mov
jge
fidivs
pushf
push
out
dec
xchg
out
pop
js
jnp
shrb
outsb
xor
and
mov
or
sbb
mov
mov
cmpsl
cmpsl
lods
adc
ljmp
inc
rolb
pop
cmp
cmpb
ret
rorl
inc
adc
pop
cli
mov
or
or
mov
jl
rcll
jo
jge
xor
out
adc
add
mov
pop
cmpb
or
and
loop
fdivrs
ss
imulb
rorb
xlat
data16
cmp
pusha
imulb
or
movsl
clc
cld
loopne
ljmp
or
out
rorb
mov
je
push
mov
out
dec
mov
add
rcrl
xchg
enter
icebp
ss
mov
jg
in
mov
sub
mov
sbb
add
lock
xor
pushf
je
loope
clc
sub
pushf
and
mov
sbb
jmp
mov
les
push
or
add
sbb
and
jmp
sub
std
jmp
dec
mov
inc
cmp
and
cmp
cld
pop
xchg
jns
lahf
add
xchg
shll
pop
inc
ret
ret
sbb
loop
sbb
dec
pop
mov
mov
or
pop
xor
inc
mov
test
cmpsl
lds
mov
mov
out
es
jae
adc
int
data16
adc
cmp
aas
ret
loope
repnz
popf
mov
pop
aam
lret
xchg
test
add
push
push
mov
lods
ret
stos
gs
out
adc
and
pop
mov
xor
pop
sub
in
fistl
mov
into
inc
or
or
fmull
mov
or
data16
aad
jns
fidivl
inc
stos
out
out
jae
xor
pop
into
adc
aam
push
adc
mov
xchg
cmp
int
add
mov
hlt
fistps
push
pop
shll
jbe
loope
sahf
jnp
aaa
inc
pop
popf
cmp
ljmp
jge
test
scas
jnp
jecxz
cmp
test
ret
into
repz
or
or
cmp
xor
out
add
dec
xor
fwait
repnz
pop
ja
sub
mov
dec
cmp
orl
jo
cld
daa
mov
xchg
and
xor
push
and
sub
ret
in
and
xchg
fucomp
insl
sbb
add
push
add
xchg
sub
call
add
push
leave
push
xchg
shll
outsl
pop
mov
dec
lea
scas
jne
mov
fdivrs
test
xchg
repnz
add
ficoms
lods
in
push
add
orl
repz
lret
in
lods
mov
pop
out
sub
std
sbb
mov
cmp
ret
and
add
xchg
mov
dec
adc
imul
push
jmp
sub
addl
adc
inc
cmpsl
sbb
pop
jo
out
pop
sub
xlat
sbb
addr16
push
dec
mov
in
jnp
stos
xor
jle
mov
mov
adc
loope
mov
mov
test
dec
mov
cs
in
ret
adc
sub
fcomps
test
sub
pop
sbb
sub
pop
or
fstps
test
sub
pop
sbb
sub
pop
or
fstps
test
sub
pop
sbb
sub
pop
or
fstps
sub
pop
jbe
xchg
ret
cmpsl
pop
sbb
mov
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
das
mov
mov
insb
cwtl
push
insb
lock
loopne
pop
and
cld
in
push
int3
inc
dec
mov
mov
insb
lock
dec
rcrb
xor
lods
jo
pusha
int3
adc
inc
xchg
mov
mov
jb
sbb
push
rcrb
cwtl
lahf
and
je
add
and
decl
jne
push
or
jmp
adc
enter
shl
and
cld
pop
rcl
sbbb
fisttps
adc
adc
and
shr
jns
jns
or
movsl
jge
xor
sub
int
fistps
jno
mov
lock
push
and
pop
lock
pop
aas
lods
jmp
dec
or
bound
sbb
lahf
int
fmul
rcll
pop
sub
cmpl
mov
aas
ja
out
fld
test
scas
ror
shll
mov
jns
test
and
add
popa
gs
cmpsl
int3
inc
filds
mov
mov
mov
add
dec
sar
shrb
and
adc
push
fsubrl
inc
fisttps
js
fs
cmp
out
push
jmp
adc
add
pop
mov
add
cmpsl
or
lret
dec
out
push
mov
outsl
xchg
adc
adc
push
rep
clc
dec
in
lock
dec
rcrb
xor
in
jo
pusha
int3
push
faddl
mov
mov
insb
lock
dec
rcrb
xor
in
jo
pusha
int3
push
faddl
mov
jmp
mov
scas
incb
jle
mov
gs
push
cmpsl
out
jge
push
lcall
or
mov
jns
mov
stos
add
pop
orl
lret
mov
cmp
pushf
loopne
inc
nop
mov
clc
into
ja
rep
mov
adc
inc
lcall
ja
icebp
and
icebp
cmpsl
insb
mov
sbb
jne
or
sub
sub
jecxz
aas
loop
ret
enter
or
jmp
cld
fstps
lret
jmp
jge
leave
cmp
pushf
adc
sbb
or
inc
cmp
and
sub
mov
data16
inc
nop
out
cmp
and
cmp
or
fildll
fimuls
mov
mov
jmp
xchg
or
int
bt
mov
arpl
or
sbbb
fidivl
sub
rcl
mov
pop
pushf
mov
loope
xchg
mov
sub
pop
jnp
sbb
nop
cmc
outsb
sbb
outsb
pop
mov
ret
cwtl
mov
inc
sub
out
rcll
in
and
cmpsb
les
test
add
or
pop
mov
pop
sub
mov
adc
adc
xchg
ret
andb
dec
test
loop
and
push
inc
sbb
cmpsl
in
int
movsb
out
mov
xchg
mov
xor
cmp
ja
sbbb
pushf
ss
imulb
dec
push
nop
sub
popf
add
shl
sbb
add
mov
inc
std
pop
shrl
fdiv
sbb
clc
xor
inc
push
push
testb
hlt
xor
lahf
mov
jno
pusha
sub
cmp
icebp
clc
sbb
mov
stos
adc
lcall
insl
mov
iret
dec
inc
dec
jb
ss
icebp
sti
sarl
scas
mov
xlat
adcb
xchg
cltd
adc
push
out
xchg
sbbb
popf
imul
inc
sbb
xchg
in
dec
divl
xchg
nop
jmp
mov
adc
clc
xchg
shll
pop
fimull
push
sbbb
xor
xor
test
mov
mov
insb
hlt
jg
sub
mov
sbb
adc
xor
adc
je
sbb
mov
mov
sub
xchg
xchg
mov
pop
outsb
mov
dec
push
jmp
test
aas
and
mov
or
inc
xchg
fsub
ss
pop
mov
negl
mov
fbstp
mov
mov
fs
inc
jbe
or
inc
jmp
push
iret
outsl
jo
decb
mov
jl
imulb
out
push
outsb
mov
sub
mov
and
mov
fmuls
pop
xchg
es
xchg
fsts
mov
mov
pusha
fcmovu
cmp
ret
gs
ja
es
or
inc
xor
fsub
fistl
pop
lods
hlt
jg,pt
popa
mov
pop
mov
or
mov
aad
pusha
add
sub
push
rcrb
sbb
pop
and
push
sarl
icebp
pop
push
mov
pop
lods
scas
push
mov
mov
aam
and
pop
mov
mov
insl
les
sub
fwait
mov
cmp
std
imul
fnsetpm(287
pop
das
inc
push
jmp
mov
popa
loop
data16
sub
xor
add
repnz
push
test
adc
roll
cmp
divb
loop
lea
imul
or
cmp
cli
mov
add
imul
test
fwait
pop
mov
out
or
fldcw
mov
callw
mov
push
loop
pop
repnz
filds
xor
push
mov
fdivrl
add
je
ret
ja
dec
repnz
pop
pop
jle
mov
jno
adcl
dec
and
imul
jno
icebp
pop
in
scas
aad
and
inc
lahf
push
xor
push
adc
jge
pop
push
dec
adc
fadds
push
lock
xchg
fimuls
out
sbb
nop
xchg
aas
stos
sbb
inc
out
sbb
or
jne
ret
sbb
or
mov
push
add
fmul
inc
add
aad
xchg
xor
lods
mov
cwtl
and
cmp
sub
cltd
sbb
ja
push
inc
xor
sub
add
das
rol
mov
fdivs
xchg
pop
xlat
les
push
pushf
push
adc
cli
outsb
mov
jecxz
mov
test
sub
cmp
jecxz
xchg
das
fcomps
or
test
lods
movsl
cltd
xor
sbb
bnd
pop
dec
sub
pop
push
or
call
mov
pop
rcl
stc
mov
cmpsl
iret
cld
add
dec
lods
add
mov
pop
xchg
sub
pop
dec
adc
cld
jg
mov
jnp
je
push
push
push
and
pop
shl
pop
lods
fsubr
push
pop
mov
ss
lods
push
popa
mov
or
xor
gs
shlb
ficoms
dec
ss
hlt
fwait
subb
rcl
lods
addr16
push
push
dec
imul
and
ret
gs
dec
in
inc
mov
mov
inc
and
sbb
jle
pop
cli
mov
mov
inc
xor
insb
cwtl
imul
mov
stos
cld
fdivr
add
movb
mov
xchg
jge
add
or
jl
mov
gs
mov
insb
lea
push
negb
mov
mov
jbe
shrl
adc
push
cli
out
dec
pop
int3
ss
jp
adc
cmp
mov
cld
sub
in
mov
mull
mov
add
push
test
mov
sub
leave
es
sub
mov
in
sub
add
jecxz
sbb
imulb
push
sub
call
stos
data16
push
popf
sub
fcoms
sbb
sarb
incl
imul
std
sub
push
cmp
mov
lahf
add
out
mov
popf
push
imul
adc
push
repz
aas
cltd
fnsave
test
sbb
ja
jmp
push
jnp
xchg
insb
insl
hlt
push
mov
lret
push
adc
ljmp
int
and
mov
or
arpl
jmp
fsubs
lahf
rolb
das
aam
or
push
cmp
popf
bound
push
aad
popf
inc
subl
xchg
adc
das
leave
es
push
ret
mov
in
stos
leave
mov
sbb
clc
lock
push
aam
or
pop
fs
ja
sbb
fwait
loopne
rol
inc
test
stos
mov
leave
fimuls
jno
fwait
and
cmp
sub
xorl
movsb
cmc
inc
std
insb
mov
jo
std
xchg
stc
js
cmp
mov
mov
stc
mov
xchg
xchg
sub
sbb
scas
pop
push
pop
fmuls
cmp
dec
mov
cmpsb
int3
mov
jmp
les
xlat
fbstp
push
add
sti
xchg
cmc
xchg
pop
xor
add
adc
jb
stc
sbbb
sbb
scas
push
xchg
imul
inc
ror
loop
sbb
ret
mov
jmp
pop
xor
loopne
or
adc
mov
adc
shlb
xchg
out
sbb
aas
insl
xorb
scas
int
cld
imul
xchg
jg
cmpsl
test
inc
jo
insb
xorb
push
or
mov
int3
mov
hlt
sub
mov
pop
call
cmp
jno
sbb
and
daa
loop
gs
mov
testl
xor
or
adc
mov
pop
dec
and
filds
je
int3
call
je
mov
sbb
ss
call
push
dec
hlt
and
dec
mov
scas
mov
sbb
xor
loope
inc
aaa
xchg
in
sbb
movsb
xorb
in
test
out
cmp
push
test
xor
cmp
and
iret
adc
cmp
popa
mov
add
dec
xchg
pushl
mov
adcb
mov
inc
nop
mov
mov
ret
jecxz,pn
insb
cmpb
xor
js
jge
ja
lcall
pop
pop
mov
aas
cmp
cmp
pop
enter
popa
and
lock
push
imul
fldt
push
dec
arpl
mov
mov
in
fisttpll
inc
xchg
stc
lret
popf
ds
int
push
js
cmp
adc
cmpsl
cmp
ds
lahf
adc
movsb
cli
test
outsb
stos
lahf
scas
xchg
loope
mov
sbb
sub
mov
xchg
fisubrs
dec
cmp
xchg
std
xor
sub
adc
repz
sub
push
insl
mov
jmp
push
scas
push
push
jg
aaa
dec
gs
lahf
lods
mov
inc
fcompl
sbb
jbe
clc
popa
test
sub
ljmp
mov
data16
pop
xor
fisttpl
cmp
jno
jne
jp
dec
jmp
add
dec
mov
jmp
ficomps
or
test
call
lods
fs
ret
sbb
jp
dec
add
dec
lcall
jbe
enter
add
call
aas
out
dec
adc
inc
pushf
mov
iret
pop
outsl
push
push
xchg
pusha
jo
lcall
push
mov
test
in
popa
adc
and
roll
jp
jg
pop
es
lcall
loop
lahf
shl
int
add
dec
sti
ficompl
imulb
jnp
cmp
repnz
popf
and
imul
test
sbbl
push
lret
mov
jmp
dec
out
ja
sub
jmp
shll
ds
out
dec
out
adc
mov
jg
cmp
cmp
push
jae
ret
add
mov
out
jns
std
rcl
ss
cmp
rcrl
outsb
jp
and
mov
push
cmp
sbb
xor
pop
popa
out
fidivs
or
js
mov
mov
outsl
ds
rcrb
pushf
sbbb
mov
cld
mov
out
les
sbb
xor
scas
mov
pop
js
arpl
subb
outsl
jbe
movsb
xchg
mov
lods
fwait
or
call
jns
mov
jl
add
inc
das
pop
loopne
addr16
cltd
das
mov
adc
sub
fidivrs
dec
enter
push
lods
jmp
sbb
adc
lods
sub
shll
shrb
sarb
pop
rolb
cmpsb
jg
push
xchg
or
xor
or
mov
inc
sub
or
mov
mov
push
repnz
pop
cli
arpl
bound
add
mov
dec
fnstcw
jae
pop
pop
clc
scas
je
and
push
or
pop
mov
cmpsb
or
stos
adc
pop
lahf
je
iret
jg
sub
mov
xchg
int3
bound
inc
insl
add
pusha
adc
cltd
cmp
mov
xchg
and
pop
adc
cli
mov
jo
call
xchg
push
cmpb
andl
stc
jae
insl
xchg
mov
clc
xchg
inc
lods
sahf
dec
leave
mov
adc
dec
test
int3
mov
push
loopne
cmp
fsqrt
je
pop
lds
ficompl
inc
xchg
adc
sub
repz
addr16
sub
leave
mov
and
ror
divl
xor
inc
imul
in
mov
loop
add
stos
mov
cmpsl
js
inc
lods
push
in
mov
mov
dec
mov
imul
into
xor
scas
mov
lods
pop
inc
sub
fdivrs
rcll
sbb
mov
aaa
lods
ds
lds
mov
pop
sbb
mov
or
jnp
mov
mov
loopne
dec
loop
ljmp
movsl
sahf
mov
cmp
rorb
push
push
mov
scas
jae
fwait
and
cs
outsb
addr16
xor
or
lret
mov
pusha
jae
mov
sub
sub
mov
add
sarb
jg
test
pop
mov
xchg
xchg
iret
pop
xchg
or
cltd
xchg
mov
call
sbb
test
test
js
sbb
dec
insb
aad
ja
push
or
jg
pushf
call
cmpsl
add
int
fwait
scas
jne
fcmove
push
inc
aaa
xchg
mov
adc
int
mov
push
outsb
mov
std
in
dec
push
cmp
and
loopne
or
mov
mov
pop
mov
xchg
and
sub
xor
in
jle
mov
cmp
mov
pop
mov
pop
mov
pop
jne
fwait
add
scas
aas
push
and
pop
dec
lock
mov
fdivl
sti
nop
test
mov
loopne
push
jmp
cltd
xorb
out
mov
iret
cmpb
mov
flds
insl
std
clc
lock
mov
push
or
cli
jbe
add
push
xlat
insb
mov
bound
clc
test
repz
cmc
add
dec
pop
sub
rcr
and
icebp
das
mov
imul
repnz
scas
lds
xor
push
movsb
jb
rorb
mov
ret
hlt
out
lock
lahf
dec
xor
jbe
fnstcw
cmp
sbb
enter
fstpt
paddb
leave
inc
addr16
dec
jbe
or
icebp
mov
jmp
shl
cmc
mov
daa
add
test
adc
mov
pop
lret
cmp
orb
int
push
popf
inc
mov
xchg
jl
cmp
mov
loopne,pn
and
subl
jg
rep
insb
cmc
and
lret
and
jns
pop
push
sahf
fidivrl
jns
xchg
scas
cli
xor
dec
es
xchg
and
dec
mov
mov
mov
out
rcll
add
fildl
loopne
jnp
xor
mov
das
sahf
loope
xor
cmp
je
ret
imul
jge
rcr
mov
fsubrp
xchg
outsb
ret
xor
outsb
out
or
cmp
stc
addl
pusha
jne
jle
jae
scas
in
ror
xor
call
fsts
lea
stos
gs
stos
repnz
mov
mov
xlat
push
rcl
push
rclb
cmp
rorb
movsl
arpl
iret
int3
jb
xchg
incb
movsb
jnp
loopne
adc
addr16
aaa
sub
push
jb
scas
push
iret
popf
and
cmc
imul
orb
cld
cs
in
cmpsb
dec
dec
mov
es
push
orl
pop
lret
pop
xchg
dec
insb
cltd
insl
jo
daa
repnz
enter
sahf
adc
std
cmpsl
mov
sub
jbe
gs
and
push
pop
je
push
in
lcall
pop
les
hlt
and
pushf
mov
jbe
sbb
sub
outsb
mov
xor
shll
mov
lahf
clc
mov
pop
rclb
mov
adc
jge
jo
push
and
jne
mov
fsts
scas
pop
xchg
add
dec
jbe
inc
mov
push
dec
out
sub
lahf
xor
fistpl
push
xlat
scas
clc
push
cwtl
inc
repnz
pop
gs
dec
xorb
or
gs
inc
inc
inc
pop
jns
scas
xchg
push
xor
ss
pop
maskmovq
divl
cmp
shrb
mov
adc
add
pop
icebp
push
out
mov
loop
push
repnz
dec
and
add
ret
and
xchg
mov
adc
and
jmp
arpl
aas
gs
icebp
scas
jmp
repnz
in
sbb
sbb
inc
andl
xchg
mov
mov
xchg
testl
jo
adc
push
sbb
fdivr
add
add
and
mov
cmpsl
mov
jns
fcmovne
mov
add
mov
mov
pop
ficompl
add
dec
fs
add
stos
cli
loopne
push
nop
mov
xchg
outsb
out
imul
inc
pusha
jg
addb
inc
inc
mov
stc
and
fistl
imul
mov
fildll
subb
mov
js
das
mov
cmp
mul
call
xchg
ret
mov
adc
sbb
out
mov
out
addb
sub
jns
mov
js
cmpsb
inc
cltd
dec
pusha
repnz
push
jecxz
imul
or
xor
push
loope
push
mov
daa
cwtl
xor
gs
imul
mov
scas
fnstcw
fsub
iret
sub
cmpsl
andb
loopne
push
aam
xlat
dec
shl
nop
sti
add
repz
jb
xlat
rcl
rcl
mov
popa
lcall
add
mov
sub
mov
test
addr16
lea
es
dec
xor
jno
popf
xor
pop
sub
mov
fidivrs
mov
jmp
and
pop
xchg
addr16
dec
push
dec
cs
fbstp
test
and
push
and
in
xlat
adc
adc
xchg
pusha
or
js
sahf
outsl
push
popa
xchg
xchg
popa
mov
jg
scas
add
loopne
cs
mov
add
add
pop
in
or
xchg
jae
and
pop
call
je
adcl
cmp
dec
scas
into
mov
xchg
jl
sti
dec
xchg
and
cmp
xchg
repnz
mov
in
ss
xchg
call
dec
stc
mov
sbb
imul
fistps
mov
inc
mov
adc
or
sub
jb
jae
stos
in
aaa
and
and
andl
dec
in
xor
and
ret
out
outsb
cli
push
add
rol
adc
arpl
xchg
xchg
xchg
xchg
rdpmc
mov
and
imul
sbb
xlat
jecxz
out
into
scas
push
push
mov
sbb
inc
ljmp
cmp
outsb
sbb
pop
inc
inc
ljmp
push
or
fdivl
mov
push
out
ret
mov
dec
or
jno
es
or
cmp
adc
popa
sbb
jb
push
cs
jle
or
cld
mov
cmc
cmp
fistpl
cs
adc
pop
inc
dec
sub
push
jbe
ds
pushl
pop
mov
adc
fstps
outsb
bnd
loopne
jecxz
sar
ficompl
add
imul
xor
mov
add
cmpsb
test
popf
push
sub
popl
xor
enter
xor
push
divl
sbb
add
shll
les
sti
fisttps
push
lea
jecxz
and
stos
mov
mov
push
mov
lds
jmp
sti
arpl
fwait
mov
mov
push
mov
mov
popa
jnp
arpl
push
js
jo
mov
insl
mov
inc
pop
movsl
out
xchg
pop
mov
cmp
fwait
stos
imul
ja
subl
lahf
push
int
mov
or
mov
hlt
or
data16
imul
push
sbb
in
pushf
int
mov
xor
out
test
fisttpll
inc
hlt
repz
mov
mov
imul
fdivs
clc
pop
dec
lret
cli
int
test
mov
xor
popa
test
sub
call
adc
sbb
cwtl
cmp
jl
js
sub
in
lret
push
ret
push
in
movsb
jp
scas
pop
ret
std
jno
pop
aas
pop
out
shll
sahf
xchg
movsb
aad
jecxz
adc
sub
xchg
sti
and
fcmovnu
cmp
xchg
scas
test
xchg
push
cmp
jp
mov
ja
sub
in
jb
sbb
push
mov
loop
cmp
push
frstor
jmp
stos
sbb
xchg
outsb
mov
jae
divl
add
jge
cmpsb
xchg
cmp
iret
xchg
out
test
mov
loopne
mov
je
sti
xchg
jne
inc
lea
sbb
stc
pop
fdivl
xchg
jg
cld
and
jno
jno
cli
mov
adc
in
shlb
lret
mov
xchg
test
push
out
enter
cmp
sub
pop
push
out
mov
or
xor
testl
adc
add
push
push
movsb
out
pusha
das
outsb
ret
mov
dec
pop
push
iret
int
pop
push
mov
cld
mov
sbb
dec
aad
add
xor
inc
je
inc
out
mov
bound
push
pop
sub
mov
pop
cltd
and
mov
out
ds
or
ja
int
add
mov
inc
jae
sbb
fistps
scas
push
jae
mov
loopne
or
mov
pusha
sub
and
xchg
cwtl
rorl
mov
mov
inc
jns
push
or
sti
mov
push
aas
and
ficompl
hlt
ret
out
test
mov
repnz
fsubl
arpl
pop
sbb
insb
lock
dec
rcrb
xor
in
jo
pusha
int3
push
faddl
mov
mov
insb
lock
dec
rcrb
xor
in
jo
pusha
int3
push
faddl
mov
and
cmp
jl
dec
rcrb
jl
pushf
add
jo
pusha
int3
push
xor
cmp
cmp
insb
lock
loopne
rcr
shrb
ja
clc
je
xor
mov
test
jae
mov
fnstenv
daa
divb
rolb
adc
xorl
push
mov
inc
mov
test
jae
add
add
and
inc
and
xor
add
adc
fs
jne
inc
mov
mov
test
imul
hlt
or
cmp
sub
pop
lock
jno
fs
pop
out
sarl
and
mov
fsubr
sbb
sahf
push
out
lock
pop
adc
dec
inc
dec
fnstcw
imul
cmp
cmp
cwtl
cmp
sub
xor
je
adc
dec
pop
cmp
push
mov
cmp
adc
rcll
xchg
or
ljmp
mov
xchg
lods
inc
pushf
xchg
and
aam
aam
mov
jle
mov
fbld
add
data16
pop
pop
and
sbb
cmpl
dec
daa
mov
mov
pusha
and
arpl
jno
hlt
sbb
or
stos
daa
jae
mov
mov
test
jae
add
adc
and
sub
xor
add
adc
fs
je
inc
mov
xlat
and
push
rclb
addl
push
push
push
lods
push
shll
push
xchg
loop
xor
sub
cmp
adc
sbb
add
add
push
mov
xchg
xchg
repz
ret
inc
mov
ret
mov
and
xor
xor
add
adc
xorl
push
mov
inc
mov
test
jae
add
adc
and
xor
xor
add
adc
xorl
push
mov
inc
aad
sbb
jmp
xor
push
lea
out
cmp
jns
dec
jb
push
js
in
xor
jb
mov
adc
mov
add
insb
mov
pop
cmpsl
push
call
pop
icebp
xchg
test
in
and
xchg
clc
mov
xchg
les
lret
mov
shrl
cmp
xor
jmp
pop
dec
jl
test
repz
mov
out
or
movsb
nop
gs
sarb
or
movsb
pushl
cmp
ds
roll
xchg
test
stos
fbld
test
cmpsb
rorb
imul
js
dec
popa
fcomi
cmp
gs
jae
push
adc
mov
mov
popf
fcompl
mov
or
cmpsb
stos
pop
out
loop
test
lds
lea
inc
mov
adc
lret
inc
mov
inc
add
pop
add
xor
cmp
in
imul
pop
or
cmpsl
shlb
push
push
ret
aad
ss
aas
pop
inc
or
or
pop
lods
mov
mov
xor
hlt
dec
pop
push
fnstsw
xor
mov
fldt
and
pop
sub
mov
push
push
je
xorb
mov
dec
lods
hlt
xchg
ret
jle
mov
out
cli
ds
rcrl
mov
es
mov
dec
jmp
cmpsl
pop
js
ja
outsl
cmpsl
dec
sbb
or
scas
ret
adc
je
cld
stc
or
cli
pop
adc
jbe
inc
jne
lret
outsb
lods
jno
cmp
push
pushf
add
idivb
jge
jno
mov
xchg
aaa
sbb
pop
add
rorl
pop
add
in
mov
mov
test
lods
mov
addl
into
add
mov
sub
dec
cs
inc
jg
sbb
enter
xor
xor
cwtl
mov
idivb
outsl
pop
lds
in
xchg
jp
shl
ss
out
out
jecxz
addb
hlt
sub
jne
mov
xchg
sti
mov
push
dec
insb
mov
sahf
mov
shl
int
cmpsb
dec
inc
dec
loop
cmp
mov
dec
xchg
test
adc
mov
or
sbb
sbb
jecxz
cmpsb
jae
xchg
setb
or
push
mov
dec
mov
loopne
ret
sub
test
cmp
dec
xor
sub
shlb
sti
inc
orl
sbb
cwtl
loopne
dec
mov
sub
pop
pop
add
leave
imul
add
loop
xchg
xchg
mov
adc
fsubrl
sarb
out
mov
adc
xor
mov
in
shrl
pushf
insb
shrl
jns
sbb
popa
jbe
sbb
aaa
jae
aam
daa
call
pop
xchg
fistpll
icebp
stos
inc
and
adc
pop
and
fistpll
imul
clc
mov
jmp
jmp
mov
fs
out
inc
add
jne
hlt
pop
push
int3
push
iret
mov
inc
arpl
leave
and
xchg
subb
adc
push
lret
in
cmp
enter
sub
mov
xchg
jp
mov
and
mov
xchg
push
mov
push
incb
inc
mov
jecxz
insb
jmp
or
cmp
jmp
jl
insb
das
cmp
add
mov
sub
loopne
mov
leave
out
maxps
sarl
rolb
xchg
fs
dec
jae
repz
fiadds
mov
cmp
mov
sbb
adc
ds
jge
jl
pop
inc
aaa
imul
adc
jge
popa
cld
pop
jo
ja
pop
cmp
xchg
fcmove
out
mov
push
lea
sbb
jae
or
test
jmp
jp
rcll
aam
lock
sub
into
jbe
jg
mov
xorb
nop
mov
jle
and
lret
pop
jne
mov
fcomps
pop
add
mov
dec
push
xchg
push
ss
xchg
sub
push
mov
ljmp
int
push
mov
into
sub
lods
cmp
lret
decl
aaa
int3
cmp
inc
icebp
loopne
sbb
mov
or
push
push
inc
stos
hlt
gs
cmp
add
mov
dec
jae
xchg
cmp
jmp
imul
mov
xchg
aaa
sub
enter
sar
ss
mov
je
mov
sub
pop
fidivrl
dec
lods
pop
loop
loop
pop
jmp
xor
adc
adc
js
addr16
or
cltd
jb
cli
mov
popf
mov
lret
cmpsl
sub
cs
imul
int3
sbbl
xor
fsubl
pop
or
inc
enter
xor
push
mov
or
addl
stc
ljmp
in
outsb
push
xor
lahf
cmp
xor
cli
fs
mov
scas
imul
jns
mov
mov
jno
ret
add
dec
shlb
orps
mov
fnstenv
jp
or
int
test
sub
push
dec
and
ret
daa
enter
imul
cmp
ss
stc
enter
fnstcw
pop
ljmp
dec
pop
push
xor
leave
aad
cwtl
mov
or
shlb
int
aaa
jnp
dec
jge
les
fsubr
ljmp
xchg
std
push
sub
or
out
mov
xor
dec
ror
jle
pusha
jecxz
jnp
jge
aam
mov
into
push
int
shll
outsl
clc
int3
test
cmp
dec
mov
lcall
out
jnp
sahf
or
sbb
imul
mov
insl
xlat
xorb
push
aaa
mov
das
leave
sbb
add
cmpsb
jmp
mov
loop
mov
push
out
sub
inc
sub
lock
aam
add
ror
xor
enter
xor
cwtl
ljmp
sbb
cmp
inc
subb
mov
push
add
push
data16
push
inc
aam
das
rol
daa
mov
inc
sbb
or
push
fistl
inc
mov
es
int
xchg
cmpsb
sub
adc
adc
xor
dec
mov
mov
dec
pop
pop
pop
pop
clc
in
adc
add
cltd
and
or
outsl
sti
stos
negl
mov
jo
js
mov
inc
push
push
adc
mov
decb
mov
add
sub
out
das
xor
arpl
inc
stos
lods
adc
adc
mov
xchg
or
xchg
cltd
imull
iret
xor
jp
add
and
ljmp
fisubrs
psraw
insl
lods
pop
cmp
aas
insb
cwtl
insb
ljmp
adc
sti
lock
dec
mov
imul
arpl
lret
test
lahf
lock
fmuls
je
push
idiv
jle
cmp
shll
add
dec
ret
lds
inc
fimull
pop
dec
mov
mov
push
xchg
mov
fimuls
jb
sahf
stos
mov
out
jae
dec
jo
add
pop
inc
and
pop
outsb
std
loopne
sbb
test
daa
pop
xchg
mov
mov
popa
in
int
aad
in
sbb
int3
lcall
lds
repz
push
pop
gs
dec
pop
push
xchg
icebp
and
lcall
xchg
cli
xchg
mov
push
jo
in
pop
inc
ljmp
es
dec
stc
enter
fwait
xchg
mov
and
cmp
fld
mov
or
aam
test
mov
clc
mov
sbb
es
out
xchg
add
fdiv
inc
mov
jl
inc
xor
loope
xchg
aas
push
scas
xor
lret
pop
cmp
pop
mov
adc
cmp
roll
shll
mov
push
popf
int
mov
sahf
stos
enter
in
popa
mov
cmp
mov
repnz
and
mov
add
xor
data16
aaa
jecxz,pn
sbb
xlat
mov
adcb
dec
fimuls
mov
sahf
out
pop
xchg
and
fiadds
inc
imul
pop
pop
stc
sar
jnp
and
sti
cmp
gs
inc
push
outsb
mov
adc
mov
push
push
jo
daa
insl
testl
mov
mov
mov
scas
xchg
add
mov
pop
push
pop
cld
ljmp
scas
int
idiv
js
and
xchg
mov
dec
testb
xchg
mov
fadds
jecxz
call
shrb
or
pop
or
scas
gs
aam
andl
push
das
push
mov
mov
jno
daa
stos
movsl
in
sub
in
lock
lret
mov
out
cmp
xor
jnp
aaa
loope
jns
mov
shrl
jns
mov
inc
xchg
repz
xchg
xor
push
adc
cmp
js
push
cmp
dec
mov
in
mov
fadd
stos
gs
iret
out
pushf
dec
dec
mov
push
push
outsl
incb
jbe
dec
add
in
out
nop
xchg
and
xlat
mov
hlt
scas
testb
rcl
ficoms
lcall
stos
sbb
out
dec
test
mov
jecxz
dec
mov
insl
xchg
add
mov
sub
hlt
sub
jbe
sub
adcl
pop
adc
scas
es
sub
xchg
lahf
adc
test
int
mov
xlat
in
shlb
scas
ret
sbb
outsl
dec
nop
popa
cmpsl
vmulsd
sbb
popf
and
xchg
rcr
adc
popf
mov
enter
outsb
arpl
xchg
sub
mov
lret
outsl
das
xor
dec
sub
call
sub
cld
xchg
std
xchg
sbb
cmp
pop
leave
mov
ret
mov
mov
addr16
ljmp
jg
cmpsl
jg
xchg
dec
jp
fildll
call
mov
xlat
add
dec
fdivs
mov
jmp
mov
adcb
pop
pop
stc
rcrb
movsb
ss
mov
fsubr
cli
pop
loope
and
push
xor
lcall
jge
sub
xor
hlt
int
or
pop
or
dec
in
decl
cmp
scas
cwtl
cltd
testl
stos
mov
and
sub
stos
mov
mov
stc
dec
iret
fisubrs
xor
mov
loope
mov
shrb
sub
icebp
inc
add
or
xor
stos
outsl
fcompl
dec
pop
daa
or
bnd
imul
adc
adc
lds
jmp
xorb
cli
ja
addr16
scas
jbe
jnp
outsl
mov
lcall
pop
into
int
sbb
leave
pop
bound
pop
cmc
cmp
jmp
movsb
mov
roll
add
cmpsl
mov
and
andl
and
push
aam
push
inc
mov
test
sbb
sahf
ret
imul
call
jge
inc
sbb
scas
lret
aas
push
or
add
leave
mov
imul
push
pop
lret
inc
lahf
mull
repnz
jo
lock
aas
pmaddwd
xchg
mov
lret
adc
nop
das
sbb
dec
push
int
xor
xlat
adc
sub
lret
pop
leave
sbb
jl
xchg
cmp
dec
xchg
or
addr16
test
push
lret
mov
pop
mov
mov
adc
jle
nop
xor
cmp
pop
lahf
shlb
and
mul
out
dec
divl
mov
push
mov
aad
lahf
adc
in
sub
pop
jnp
and
mov
push
sub
jmp
lock
mov
mov
shlb
cmc
sbb
push
cmp
mov
xchg
xchg
cmp
rolb
ss
sahf
imull
scas
jmp
push
pushf
fcoms
arpl
scas
add
adc
imul
outsl
js
lods
int
dec
lcall
popa
or
inc
add
dec
xchg
in
pop
xor
mov
push
pop
fnstsw
loop
or
and
arpl
lods
lret
dec
call
pop
jmp
xor
pop
stc
dec
adc
out
subl
jl
or
mov
iret
dec
repnz
add
in
outsl
push
cmp
dec
adc
leave
pop
xor
jne
cltd
aaa
mov
je
neg
inc
lods
iret
cld
cltd
push
pop
rolb
jne
push
fcomip
pop
jmp
icebp
sti
adc
jge
repz
and
fwait
dec
adc
dec
xchg
mov
shl
cwtl
jb
pop
mov
notb
ja
insb
pop
mov
shl
mov
adc
andl
sub
mov
pop
enter
mov
xchg
test
add
std
fs
and
in
mov
mov
pop
sbb
mov
fldt
mov
stc
pop
fdiv
icebp
test
out
shll
rcr
cs
sub
adc
xlat
roll
dec
sub
sbb
xchg
mov
cld
sar
sbb
cli
inc
xchg
test
fistpl
outsb
aas
jnp
and
leave
cmpsb
xor
add
mov
dec
push
jmp
cmp
lret
inc
add
icebp
stos
popf
movmskps
jge
mov
andl
addl
mov
lahf
xchg
mov
push
into
aam
testb
call
push
jg
stos
cld
adc
xchg
adc
lahf
sbb
lcall
out
dec
mov
xlat
add
daa
lret
stos
nop
js
xor
cmp
or
dec
lret
fldz
sub
jg
ret
int3
cmpsl
adcl
pop
iret
cmpsl
xor
ljmp
jmp
lret
push
and
adc
out
into
repz
into
xor
mov
loopne
xchg
test
scas
jp
daa
lret
add
js
in
fdivr
fisttpl
add
jns
lcall
push
into
xor
out
jg
int
ret
dec
je
loopne
xlat
xchg
jo
test
fdivrl
sbb
test
insb
sahf
ffree
push
scas
aam
fdivr
lret
add
adc
repnz
fs
lret
push
xor
enter
pop
shl
notb
es
test
movsl
add
cmpsl
xchg
rcll
cmpsb
push
xchg
inc
loopne
mov
sub
outsl
cmp
xchg
jg
mov
cmp
lahf
popf
mov
cwtl
jo
adc
jns
mov
cld
adc
scas
cmp
subl
cmp
sub
adc
hlt
add
fistpl
lcall
add
pop
pop
mull
mov
hlt
lret
and
aam
aam
fdivs
sub
mov
cmp
aas
mov
pop
dec
subl
nop
sbb
sub
inc
imul
pop
dec
clc
daa
push
push
into
pop
xchg
sub
push
add
aam
mov
fwait
je
add
add
adc
xor
loop
outsl
pop
pop
mov
lahf
sar
push
push
into
jle
or
test
mov
arpl
inc
pop
cmpsb
xchg
aad
dec
cs
inc
cmp
cli
mov
sub
ret
data16
aas
push
icebp
fsubrs
nop
in
adc
movl
ss
out
imul
adc
jg
mov
push
jmp
and
adc
outsb
negl
insl
fmuls
mov
insb
int
xor
lret
jns
push
out
sahf
mov
lret
in
sbb
cmp
cmc
add
xchg
sub
pop
rclb
push
rcrb
xor
or
insl
push
ret
push
addr16
sbb
dec
cld
das
in
mov
xchg
aam
mov
mov
fucomip
push
jmp
insl
cmp
test
fistpll
mov
pop
fnstcw
and
lods
adc
sub
data16
or
jae
fnsave
scas
cmp
sub
pop
inc
cmp
imul
cmp
mov
xlat
lcall
mov
nop
sub
cli
stc
data16
and
jbe
adc
pop
mov
or
mov
mov
jb
outsl
mov
jne
inc
mov
mov
test
xor
mov
andb
cmp
roll
xchg
adc
lods
pusha
repz
cmp
mov
xor
add
push
cmp
push
in
jns
dec
sub
sahf
stos
xchg
cli
outsb
mov
aam
out
inc
lret
std
cmp
out
dec
imul
mov
jns
in
mov
push
mov
xor
sbb
pop
stos
scas
adcl
sub
icebp
mov
mov
inc
popf
fisttpl
or
mov
lahf
into
mov
xchg
repz
sbb
mov
scas
imul
pop
and
xlat
call
and
mov
repz
add
std
mov
addl
fiaddl
je
nop
mov
loop
ret
cmp
fdivrl
icebp
jnp
xor
into
push
aas
sahf
movsl
xchg
aaa
testb
cmp
bound
dec
push
mov
test
popa
or
scas
cmpsl
mov
arpl
sbb
test
insb
fistl
fstps
jns
iret
gs
pop
add
lods
test
push
adc
xor
xchg
pop
test
pusha
in
sbb
sbb
add
push
jg
dec
insb
aam
in
push
and
lds
mov
and
cltd
mov
add
inc
jae
cmp
lock
int3
xchg
shlb
inc
mov
xchg
push
test
and
jmp
repnz
sarl
mov
rclb
imul
fstl
cld
dec
or
ficomps
mov
insb
mov
and
mov
pop
add
int3
shlb
iret
aaa
in
test
pop
daa
aam
iret
fnsave
inc
push
add
lods
cmp
aam
jle
jo
or
shlb
fdivs
dec
das
mov
inc
mov
xchg
iret
out
adc
iret
jb
cltd
sbb
push
loop
call
xor
cs
dec
in
pusha
test
out
mov
adc
jl
notl
fsubs
out
mov
inc
jne
jmp
adc
cmp
pusha
repnz
fs
sahf
in
scas
pop
adc
push
sarl
jg
cltd
sbb
sub
lret
out
hlt
in
jmp
mov
movb
jne
jns
push
in
dec
sub
mov
or
bound
add
pop
mov
insb
pop
adc
inc
popl
sti
jp
xchg
mov
push
out
in
push
scas
test
push
adc
hlt
mov
fidivs
cmp
out
stc
lahf
and
adc
lds
clc
inc
ud1
push
dec
mov
jp
push
mov
or
xlat
stos
mov
jae
lcall
mov
lock
mov
dec
rcll
mov
or
shrb
movsl
imul
mov
push
fwait
lds
cwtl
negb
xchg
pushf
int3
sbb
jb
push
pushf
subl
jne
into
rorb
jg
mul
mov
int
fsubl
pop
mov
or
cmp
maxps
out
loope
pop
nop
sbb
jae
pop
mov
xor
call
xchg
jg
jp
xor
and
mov
lods
aam
jo
outsl
orl
push
imul
lods
lea
pop
loop
sbb
sti
dec
cs
and
cwtl
inc
fdivrp
cmpsb
fcmovbe
inc
push
mov
push
stos
dec
clc
fiaddl
push
jno
and
push
ja
and
sbb
pop
mov
popa
scas
cmp
mov
cmp
popa
xlat
xchg
xor
dec
sub
mov
and
popa
jno
xor
pop
mov
sbb
stc
and
scas
dec
jnp
daa
int3
loopne
add
mov
imul
xchg
push
call
lcall
xchg
and
mov
shl
out
adc
lret
add
push
adc
xchg
jmp
in
outsl
mov
cltd
xor
cmp
repz
inc
dec
inc
pop
popf
repnz
les
xchg
nop
push
cmc
xchg
mov
lahf
inc
xor
push
xor
in
leave
stc
int3
dec
pushf
mov
shr
je
leave
imul
mov
aas
nop
jae
inc
sub
fmuls
sub
jecxz
dec
and
cmp
scas
mov
xor
sub
mov
xchg
mov
int3
imul
mov
cltd
sbbb
dec
sub
dec
loopw
js
aaa
jnp
jb
mov
les
adc
adc
dec
inc
sub
xor
mov
cs
dec
popa
push
inc
cmp
pop
nop
jbe
repnz
sbb
lock
stc
enter
mov
out
push
jno
sbb
out
cmpsb
ljmp
imul
sbb
xchg
dec
out
jecxz
cmp
pop
dec
fildl
pop
call
arpl
les
aam
and
xor
add
adc
xorl
push
mov
inc
mov
test
jae
add
adc
and
xor
xor
add
adc
xorl
push
mov
inc
mov
test
jae
add
adc
and
xor
jecxz
mull
xchg
inc
cmpsl
push
mov
inc
mov
test
jae
add
adc
repz
lret
jns
jecxz
test
or
in
mov
in
pop
sub
ja
dec
mov
mov
pop
push
or
add
add
pop
data16
in
add
add
add
add
add
add
pop
add
add
or
sub
pop
add
cmp
cmp
add
add
fs
add
add
add
add
push
add
add
add
add
add
add
mov
pop
add
mov
sub
mov
add
add
add
cmp
add
add
or
decb
rolb
or
add
add
inc
add
xchg
add
add
add
add
add
add
add
jbe
cmp
in
add
add
add
inc
add
add
add
or
add
add
add
jg
lea
push
add
add
add
and
add
add
xor
xchg
add
movsb
add
push
add
add
add
iret
add
add
add
insb
add
add
testl
pop
add
add
addl
loope
cmp
add
testl
cmp
out
add
add
add
sub
cmpsl
add
sub
pop
add
rolb
add
add
add
add
cltd
add
add
add
add
add
add
lahf
add
add
add
add
xor
pusha
add
js
str
add
add
fildl
ret
add
add
add
xor
js
js
add
dec
add
add
add
xchg
jns
jg
inc
add
inc
add
add
add
sti
add
add
add
add
add
mov
or
push
add
add
add
add
addb
add
add
add
pop
add
add
js
addl
add
add
add
add
add
add
add
add
jo
js
cmpsl
add
add
add
add
pop
add
add
add
xchg
add
add
or
add
add
add
add
add
jo
dec
add
add
add
add
add
add
fiaddl
dec
add
add
pop
add
add
add
add
add
add
or
add
or
add
loope
or
add
sub
out
add
mov
add
cmpsb
add
insl
add
loopne
pop
add
add
add
add
add
sbb
add
add
push
cmp
add
add
add
je
and
sub
inc
add
pop
iret
add
lea
pop
add
cmpsl
add
add
add
add
add
jg
mov
add
add
pusha
add
add
add
add
add
add
movsb
add
add
add
add
incl
add
fiaddl
out
add
xor
decb
inc
add
sbb
mov
add
add
jo
out
add
add
add
daa
add
add
add
or
sbb
mov
add
add
add
outsl
add
add
add
add
mov
leave
das
dec
cmpsl
adc
repz
mov
js
mov
js
and
mov
adc
mov
add
mov
mov
adc
in
insl
imul
stos
pop
dec
arpl
inc
lds
push
jne
jmp
pop
mov
das
roll
cmc
mov
pusha
aam
lods
jne
sbb
mov
cs
jae
pop
int3
cmp
xchg
mov
mov
repnz
ret
inc
cld
enter
push
rcll
je
aaa
add
loopne
inc
enter
outsb
lea
sub
insl
inc
into
add
push
adc
stos
adc
sub
pop
jp
jb
push
subb
jg
mov
xor
xor
jne
shlb
loopne
out
mov
mov
add
push
pop
scas
push
in
out
jo
push
push
out
fdiv
movsb
divb
out
mov
mov
lods
fimuls
movsb
test
mov
lods
mov
loop
mov
dec
lahf
in
inc
pop
xchg
push
movsl
popa
mov
nop
mov
pop
fs
aad
es
out
bound
add
aaa
roll
data16
and
push
pop
xchg
mov
addr16
mov
mov
lcall
in
daa
xchg
inc
xlat
fimull
xchg
pushf
out
jno
fiadds
iret
ret
pop
jmp
jmp
mov
pop
push
hlt
cmp
sub
add
pop
push
push
pop
orps
jbe
or
fwait
xlat
dec
sbb
mov
push
scas
mov
sbbl
push
and
call
test
loopne
push
mov
push
lea
adc
fistl
arpl
push
fdivp
pop
repz
xor
outsb
aad
inc
lods
and
stos
sub
jae
lods
pop
ljmp
sbb
xchg
inc
xchg
push
movsl
shl
fnstenv
test
mov
fistpl
xchg
inc
stos
mov
push
testb
dec
lock
ret
dec
cmp
ds
sbb
mov
bound
xchg
dec
int
out
mov
fstps
fnstenv
mov
add
push
js
pop
sub
cld
inc
jl
xor
mov
repz
inc
data16
sti
sub
mov
lock
add
inc
add
xchg
dec
lahf
call
andl
jmp
pop
out
rcr
subl
add
and
mov
ffreep
leave
mull
add
lea
mov
repz
test
jo
sbb
das
jecxz
out
sub
xor
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
