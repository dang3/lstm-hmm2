call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
imul
pop
adc
pop
ljmp
lea
int
jns
dec
or
cmp
dec
sbb
jmp
fstps
mov
cltd
jns
dec
adc
cmp
push
sbb
lods
ficompl
test
mov
sbb
push
outsb
mov
and
lock
mov
sahf
and
xor
xor
movsb
test
movsb
dec
sub
icebp
mov
aaa
frstor
decb
enter
adc
adc
out
push
ret
jle
add
in
mov
test
xor
cltd
cwtl
imul
dec
inc
insl
insl
push
cmp
fcomps
dec
je
sub
adc
sarl
int
test
ret
movsb
imul
inc
xchg
xor
inc
jne
and
out
cmp
jbe
cltd
pop
push
rolb
xchg
add
mov
lods
dec
or
cmp
bound
ljmp
cmp
dec
adc
sbb
or
inc
jmp
xchg
flds
xlat
cltd
fmull
pop
js
outsl
push
sbb
and
mov
das
mov
in
mov
or
jb
insl
jb
dec
cmp
fstps
lahf
pop
popf
fdivr
loopne
repz
punpckhwd
insb
pop
cmp
dec
sbb
lods
stc
mov
test
int
jns
dec
or
cmp
dec
sbb
lods
stc
mov
test
int
sbb
aam
es
stc
out
jecxz
addl
notb
mov
mov
sub
jp
jmp
sub
add
add
xor
bound
lds
dec
mov
jbe
pop
add
mov
push
or
into
fiaddl
inc
xchg
iret
mov
xlat
das
ja
call
lods
jno
in
icebp
dec
arpl
lods
and
insl
lcall
xor
dec
jl
ss
int3
or
sbb
or
std
je
sub
mov
dec
icebp
or
add
es
inc
adc
rcl
mov
add
dec
jl
stc
add
mov
mov
sbb
lcall
fsubrl
xchg
sub
fstpt
lock
xor
xchg
xlat
jbe
inc
ss
ret
cmp
mov
push
in
xchg
jp
mov
or
mov
jnp
lock
cmp
dec
mov
or
clflush
pop
mov
push
test
jns
int3
push
subl
flds
mov
stos
lods
jnp
jmp
push
push
mov
flds
aam
movsl
push
decl
fmull
push
jne
jge
jb
xchg
clc
scas
mov
test
lea
adc
cmp
dec
mov
lret
and
fcomps
pop
or
push
lods
inc
mov
and
mov
sahf
fistps
mov
push
jp
out
dec
mov
push
lods
inc
popa
xor
cwtl
or
or
js
pop
jmp
push
pop
repz
inc
test
aad
mov
xlat
jle
or
arpl
jns
push
xor
rcll
scas
mov
arpl
and
cmpsl
dec
lods
add
aad
out
repz
sti
inc
sbb
mov
out
lods
fwait
adc
insl
shrb
js
cltd
push
mov
in
mov
iret
enter
xchg
push
jne
jle
incl
imulb
sub
lret
and
stc
imul
add
les
xor
xchg
stos
pop
add
mov
imul
sbb
push
cwtl
jg
xor
stos
roll
into
adc
pop
sub
ds
test
xor
adc
shrb
int
cmpl
fmul
and
out
cli
xor
add
jne
push
or
mov
or
mov
test
ds
sti
loopne
and
in
adc
je
mov
mov
mov
jns
pop
jge
outsl
dec
pop
mov
leave
dec
insb
dec
in
out
dec
xchg
add
pop
inc
cli
jmp
inc
sbb
push
add
pop
jne
cs
stos
repnz
cwtl
insb
or
jne
add
and
mov
dec
ret
mov
je
mov
inc
sbb
jbe
dec
pop
lods
flds
insb
arpl
push
ja
js
outsl
sarl
ljmp
imul
xor
sahf
out
test
ds
sbb
mov
jle
daa
frstor
test
outsl
xchg
dec
jle
enter
testl
dec
dec
jmp
outsl
outsb
jge
test
sub
test
jnp
out
arpl
push
inc
inc
xchg
and
test
pusha
dec
cmpsb
add
mov
addb
stc
dec
fdivs
pop
sti
enter
cmp
sub
icebp
mov
xchg
in
sub
mov
mov
cmpsl
inc
test
add
cmp
aam
mov
xchg
mov
jbe
mov
mov
mov
inc
test
arpl
pop
int3
xor
scas
inc
mov
mov
adc
gs
inc
scas
pop
sub
sbb
xchg
mov
add
inc
add
mov
or
pop
repz
in
jno
test
mov
js
shlb
fidivrl
push
cmp
dec
sub
add
mov
pop
adc
mov
cmp
movsb
mov
mov
fsqrt
jb
push
cmp
test
pop
mov
lahf
mov
popa
or
or
fnstsw
jmp
jo
pop
das
push
scas
pusha
mov
xchg
inc
incl
shlb
inc
or
pop
sbb
jno
lods
sub
jne
xchg
jns
jae
lcall
das
xchg
mov
pop
and
mov
or
sub
jne
out
pop
dec
push
add
lahf
sar
call
sbb
rorl
cmp
push
sbb
mov
sbb
sahf
xchg
or
mov
test
xchg
cmp
das
fsub
inc
inc
ja
cmp
xchg
cmp
mov
lea
push
pushf
out
test
ljmp
jge
mov
adc
jg
push
lods
push
sbb
push
lods
cmp
xorb
sarb
pop
xor
mov
mov
ret
test
mov
mov
add
push
jecxz
lods
mov
mov
or
mov
mov
mov
icebp
mov
add
out
dec
lock
jbe
ds
leave
loop
imul
stos
rorl
adc
mov
stos
push
js
dec
jo
push
xchg
les
cwtl
xor
flds
stos
test
mov
mov
push
imul
sub
jae
xchg
inc
adc
xchg
cld
mov
pop
imul
push
xor
mov
ret
mov
mov
or
mov
sub
out
jno
inc
add
test
je
mov
arpl
add
adc
jb
cmpl
fstp
cltd
mov
ret
pop
and
push
pop
js
pop
mov
lcall
jne
sub
and
add
pop
sbb
mov
xchg
fcompl
push
lds
inc
mov
mov
mov
dec
shrl
pop
lcall
daa
int3
hlt
addl
jnp
bound
lret
cwtl
ljmp
int
not
sub
mov
int3
mov
pop
pop
fstpt
dec
lret
and
mov
adc
mov
shll
and
lahf
rclb
mov
lret
and
icebp
push
push
sub
imulb
testl
pop
rcrl
cmp
pop
ss
js
xchg
in
dec
or
ja
mov
xor
mov
mov
push
add
scas
lret
sahf
push
adc
cmc
and
xchg
lret
mov
push
repnz
mov
adc
jmp
shlb
pop
jno
test
mov
scas
das
xor
lret
pop
inc
mov
stos
stos
jmp
outsb
repz
mov
add
fwait
test
or
xlat
imul
movsl
dec
in
inc
sti
xlat
ret
test
jmp
shlb
imull
mov
mov
inc
lcall
inc
push
sub
jnp
xor
dec
and
pop
push
ds
test
push
mov
outsb
cltd
out
pop
mov
adc
sub
mov
test
jno
into
mov
mov
jl
mov
sbb
jle
pop
popa
xchg
mov
mov
push
les
xchg
fcoms
fdivp
ja
jne
sbb
pop
test
xor
test
lods
out
out
sbb
push
inc
ss
testb
cmpsl
cmpsl
adc
cmpsb
test
lods
pop
mov
adc
in
inc
sahf
sti
mov
adc
dec
lahf
loope
jne
outsb
ret
in
cwtl
movb
nop
jb
in
xchg
lods
fs
inc
rcll
enter
loope
push
lahf
add
pop
fs
ss
mov
and
push
xor
push
fisubl
lahf
pop
stos
cs
popl
push
lock
sub
cmc
ret
adc
dec
lahf
lock
dec
pop
sbb
push
adc
popf
into
mov
xchg
mov
cli
rcrb
ret
inc
fwait
push
push
nop
add
aam
movhps
inc
std
test
jae
jmp
adc
into
push
sbb
addl
inc
push
mov
adc
sarb
daa
fbstp
adc
add
jno
jp
xor
dec
js
xchg
push
test
jmp
lds
mov
and
lods
cli
jae
push
push
fisttpll
repnz
and
repz
jge
jns
lret
pop
aam
int
push
fidivrl
add
push
mov
add
fsubrs
mov
filds
gs
xchg
sub
jbe
pop
mov
cmc
fidivs
fsubl
insb
or
cmp
insb
nop
mov
mov
xchg
sbb
mov
lds
pushf
sbb
stos
testb
aad
push
or
data16
shl
inc
push
fidivrs
fstps
imul
cmp
movsb
mov
insb
sbbl
cmp
mov
adc
lods
jne
stc
cwtl
mov
inc
fstpl
cltd
lret
and
push
push
push
push
sub
test
jp
jecxz
mov
insb
xor
mov
push
sub
rdtsc
adc
out
cli
cmp
mov
xchg
jg
cmp
xor
mov
sbb
jbe
pop
out
enter
lahf
xchg
xchg
or
mov
mov
fwait
inc
jnp
into
jns
cs
in
test
scas
jg
dec
xor
and
pushf
iret
pop
pause
xchg
pand
sahf
push
cwtl
orl
scas
mov
stos
subl
test
jecxz
outsb
out
aaa
sahf
pop
je
sbb
es
mov
loope
gs
add
aas
jb
insb
cmpsl
dec
add
and
mov
push
mov
cs
movsb
mov
sbb
std
jge
inc
test
mov
sub
sbb
fldl
sub
push
insl
pop
outsl
mov
decb
sub
je
and
test
push
cmpsl
mov
ja
inc
inc
rol
mov
mov
aam
test
or
push
jl
sbb
and
stos
add
sub
test
incl
into
jg
arpl
mov
addl
mov
xchg
cmpsb
aas
adcl
stos
dec
and
mov
insl
mul
mov
es
mov
sbb
mov
dec
repnz
scas
mov
aad
movsl
mov
jb
xchg
icebp
movsb
sbb
int
dec
bound
dec
xor
outsl
insl
xchg
sbb
sbb
movsb
add
dec
stos
mov
pop
mov
dec
ficoms
mov
cwtl
mov
out
dec
pop
aas
mov
xchg
stc
cmc
jae
dec
cmpsl
or
mov
jno
ds
pop
movd
enter
inc
call
lods
mov
ffreep
add
push
pop
scas
test
inc
xchg
push
into
jne
nop
lret
lahf
xchg
mov
hlt
add
loopne
gs
mov
cmp
sbb
clc
in
int
loope
jns
xchg
aas
lock
movsb
jbe
scas
lds
fs
scas
fsubrs
in
sbb
pop
cmp
sub
fs
dec
incb
pop
jl
lock
fmulp
les
jg
sub
sub
push
xchg
jbe
sbbb
fisttpl
imul
jae
repz
or
pop
inc
push
pop
outsb
lret
repz
jmp
lea
cmp
jnp
cmp
cmp
test
pop
or
fldcw
das
aaa
test
and
sbb
jg
in
lea
mov
xchg
orl
pop
mov
xchg
scas
mov
mov
adc
cwtl
mov
mov
icebp
jecxz
cwtl
xor
insb
fidivl
sub
mov
pop
pop
jmp
outsb
mov
dec
shl
ds
cmp
jnp
push
pop
loope
int
cmc
stos
das
pop
subb
pop
xchg
shll
xchg
jo
push
out
xor
movsb
sub
lods
fstps
cmp
mov
push
xor
in
adcb
fmul
push
lret
mov
pop
lret
mov
fstps
mov
cs
fstps
pop
lock
loope
pop
mov
sbb
pop
cmp
repz
das
xchg
addb
push
dec
call
pop
cmp
inc
lea
mov
sti
cmpb
sub
dec
push
pop
adc
dec
cmp
ss
in
stos
movsl
adc
bound
cmp
cmpb
and
ret
xchg
movsl
shl
not
cmp
je
aaa
lret
lods
jmp
add
sbb
jbe
ss
mov
cwtl
xor
bound
sub
sahf
stos
sbb
jo
pop
mov
icebp
and
hlt
adc
sub
pushf
dec
shll
pop
fld
icebp
inc
fs
inc
fsubl
pop
decl
fwait
mov
push
aad
pop
dec
cmpsl
mov
gs
pop
pop
sbb
vpavgb
rolb
adc
mov
xchg
bound
int
mov
loop
sbbl
sarl
lret
je
stos
into
iret
sahf
cli
or
sub
pop
adc
push
out
gs
xchg
adc
pop
inc
pop
xchg
jb
push
or
mov
mov
push
sub
inc
cmp
push
loope
testl
jge
subl
imul
hlt
mov
mov
loopne
pop
icebp
inc
repnz
mov
push
sbb
gs
sti
xor
test
sahf
lock
cmpsl
pop
fs
imul
popl
adcl
les
arpl
les
and
out
jo
dec
fdivrl
pop
pop
lret
adc
push
popa
ret
dec
dec
inc
mov
jmp
pop
inc
sbbb
sbb
push
dec
in
dec
xor
push
orb
cmpsl
ds
shlb
cmp
std
das
mov
cmp
aas
cmc
jge
mov
dec
fisubrl
push
mov
test
add
pop
outsl
jne
fwait
lcall
mov
int
data16
mov
test
call
repnz
sub
shrl
xor
pusha
sub
or
cmpsb
push
push
cld
dec
sbb
sbb
data16
cmp
add
dec
movsb
sbb
in
dec
test
nop
shll
push
stos
test
inc
adc
cltd
pop
sbb
stos
int3
push
clc
clc
mov
add
xchg
mov
xlat
sbb
enter
cs
and
fldt
sbb
ret
mov
sbb
cmpsl
data16
dec
inc
xchg
cmpb
jmp
in
xchg
rcrb
repz
push
pop
sub
push
mov
inc
shrb
dec
sti
pop
inc
mov
add
jnp
pop
cli
rcll
daa
lds
stc
inc
dec
jae
pusha
xchg
pop
mov
mov
mov
js
fs
test
ds
jo
push
lds
nop
into
pop
clc
jo
adc
jge
outsl
add
inc
cmpl
mov
xor
sub
dec
dec
fldt
shlb
stos
jno
jbe
scas
int3
adc
lret
ja
roll
cwtl
xchg
cmp
popf
lcall
sub
cmc
push
or
call
sub
xor
enter
mov
loope
mov
imul
stos
pop
movsl
loop
lods
jmp
popf
inc
inc
mov
hlt
sub
ret
dec
jne
cli
xchg
mov
in
iret
or
or
cmp
pop
jle
xlat
inc
jecxz
out
adc
jecxz
lock
and
repnz
test
fdivrp
mov
push
fildll
mov
push
dec
lret
jns
mov
xchg
mov
leave
std
sbb
repz
call
int
movsb
loope
jns
icebp
jb
loop
jge
js
inc
int3
sbb
gs
xchg
fdivl
cmpsb
xchg
les
sbb
cmp
jecxz
inc
in
xchg
or
loop
push
mov
aaa
add
inc
inc
mov
xor
mov
mov
inc
je
xor
lret
dec
mov
outsb
push
jp
out
add
pusha
jb
and
add
add
mov
adc
rclb
in
push
xchg
jmp
shrb
test
scas
mov
jge
dec
into
jns
insl
adc
hlt
inc
out
sti
jl
sbbb
subl
in
push
push
push
inc
sub
call
movsl
cmp
mov
and
sub
mov
xchg
pop
int3
adc
ja
pop
mov
xor
add
out
in
fists
lahf
insb
or
clc
ljmp
fistpl
movsb
in
sub
lods
add
call
mov
emms
adc
repz
pop
stos
sub
stos
faddp
mov
stos
stos
mov
xchg
mov
out
ja
cmp
into
mov
mov
js
andb
fimull
jecxz
mov
mov
test
imul
cmp
push
push
add
lahf
data16
loope
xor
and
and
iret
push
call
and
pushf
xor
imul
into
push
add
mov
mov
test
mov
jecxz
mov
dec
popf
dec
xchg
jne
sub
je
inc
sbb
data16
clc
cltd
lods
out
pop
jle
aad
adc
ljmp
lahf
testb
hlt
cmp
and
or
sbb
push
mov
mov
aaa
xchg
inc
std
mov
mov
or
push
or
addr16
cmpsb
inc
adc
insb
mov
cmp
xlat
fadd
mov
int
stos
xchg
pop
cmc
mov
gs
clc
scas
cld
sbb
sbb
fcomps
fnstcw
lret
mov
rolb
cvttps2pi
fisttpll
in
xlat
add
and
in
enter
push
es
push
jmp
decl
loope,pt
add
loopne
ljmp
ljmp
xchg
or
shl
mov
adc
sub
jo
rcr
mov
andb
out
loop
je
add
adc
or
cld
xchg
jae
loopne
js
movsb
cs
mov
xchg
inc
std
sbb
fbstp
jmp
cmpsl
xor
mov
fisubrs
xchg
cwtl
pop
mov
andl
mov
xchg
xchg
ret
in
mov
shl
sbb
inc
inc
sub
mov
cmp
stc
sub
stos
sbb
xor
add
push
inc
and
push
stc
scas
mov
mov
scas
test
lahf
xchg
push
inc
scas
leave
jp
pop
in
inc
shrb
bound
imul
pop
loop
jae
dec
ret
out
icebp
sub
mov
adc
push
js
jo
xchg
clc
mov
sahf
imul
stc
shlb
adc
mov
jle
mov
mov
and
enter
push
mov
stos
ret
push
insl
inc
mov
clc
pop
xchg
adc
cld
je
jge
gs
dec
popa
dec
mov
and
in
xchg
test
icebp
cld
sahf
mov
out
xchg
mov
push
mov
lahf
test
or
push
mov
push
xlat
movsl
push
in
aaa
lret
mov
push
mov
xor
sub
outsl
std
movsb
push
dec
add
mull
mov
jns
rorl
jle
dec
out
lods
outsb
in
out
jb
lret
sbb
and
xchg
stos
push
imul
sbb
outsw
inc
add
inc
repz
lcall
inc
aaa
js
sbb
idivl
xlat
dec
mov
daa
dec
fwait
inc
pushf
cmpsb
jmp
sub
lcall
movsl
jns
jnp
jbe
lock
xchg
lods
pop
or
pop
jns
xor
ret
or
adc
push
imull
in
adc
addl
jecxz
iret
push
enter
sub
icebp
mov
sbb
cmc
sbb
imul
rolb
xchg
mov
adc
cmc
cmpsl
xor
lods
mov
add
call
ret
pop
scas
jbe
push
ja
mov
or
pop
add
inc
gs
push
mov
cmpsb
adc
cmc
sub
fmuls
cmpsb
inc
xchg
popa
imul
in
mov
in
clc
les
mov
mov
lds
mov
mov
mov
cmpsb
lds
mov
adc
and
jl
int3
leave
hlt
pusha
add
xor
pop
stos
je
and
dec
add
sub
sub
movzwl
mov
sub
xor
aam
push
adc
and
repz
test
enter
push
or
jl
mov
loope
jbe
sbb
pop
addr16
idivl
stos
out
test
ficoms
jno
push
ds
test
sub
add
aam
js
int3
in
jae
mov
shll
pop
jp
jmp
pop
pop
mov
and
fs
movsl
scas
fsubrs
sbb
mov
jg
jl
push
imul
loop
lods
sub
lds
test
mov
shl
pop
add
mov
jle
adc
or
sarb
clc
ret
dec
rcrb
mov
ficoml
mov
out
hlt
lcall
pop
sbb
or
pop
jmp
fstps
mov
cltd
jns
dec
or
cmp
dec
sbb
lods
stc
mov
test
int
jns
dec
or
cmp
dec
sbb
lods
stc
mov
test
leave
cltd
fldcw
jns
dec
or
sub
jge
dec
cltd
popf
push
lods
push
pop
arpl
xor
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
insb
jl
dec
ficomps
push
sarl
mov
jle
outsb
int3
pop
fmull
ds
push
insb
jl
dec
ficomps
mov
sbb
cld
jle
push
int3
pop
rorb
mov
mov
jne
gs
push
fiadds
mov
sbb
cmc
fildll
cmp
shrb
add
mov
lahf
jg
cmp
int
fisttpl
inc
or
push
push
lods
int3
in
test
outsb
xor
loopne
push
cmp
mov
imul
lods
ret
arpl
cmpsb
cmp
sub
mov
xchg
fsubl
addl
hlt
sahf
push
mov
aas
inc
out
mov
pushf
xchg
insb
insl
test
js
sarl
sbb
add
mov
mov
cmpl
adc
pop
mov
mov
in
cmpb
int
sub
push
cs
addl
aaa
ror
ds
jmp
outsb
adc
jno
mov
mov
sub
jmp
movsl
gs
dec
ficomps
mov
add
outsb
aam
lds
movsb
cs
push
pushf
add
sub
pop
scas
inc
rcrb
in
sbb
or
icebp
dec
add
sbb
mov
or
dec
mov
aas
popf
and
clc
pop
or
xor
fs
sbb
in
jle
outsb
int3
pop
fmull
ds
push
insb
jl
dec
ficomps
mov
sbb
in
jle
outsb
int3
pop
fmull
ds
push
insb
push
cmpsl
rep
das
mov
pop
adc
loopne
dec
int
mov
mov
call
aad
xchg
cwtl
mov
lods
es
inc
push
dec
out
push
jmp
adc
add
cmp
jl
aaa
cmp
mov
pop
adc
fs
inc
scas
ficomps
sbb
aaa
inc
mov
dec
cli
ret
fwait
test
std
or
mov
lret
std
insb
jo
xchg
or
mov
xchg
loopne
and
sub
inc
xor
lods
test
sbb
enter
mov
pop
decl
popf
pop
das
xchg
stc
sub
cld
push
jmp
and
or
mov
outsb
ret
sbb
add
pop
xlat
sbb
or
leave
loope
add
dec
or
decl
mov
jmp
lahf
loop
sbb
popf
jno
loopne
test
clc
dec
fldt
mov
sub
or
mov
xor
push
or
sar
ret
scas
mov
mov
les
lds
cmp
aas
or
fstl
sub
adc
std
push
push
dec
and
xor
pop
lock
inc
in
sbb
xor
lods
fwait
daa
or
arpl
je
mov
sbb
mov
sbb
sbb
popa
in
gs
popa
xchg
test
int3
pusha
or
test
cld
lret
xchg
int
pop
mov
or
fdiv
sub
sub
inc
xlat
mov
aas
repnz
stos
or
inc
pop
enter
cmp
call
test
jns
jge
jg
sbb
sub
es
into
aas
aaa
stc
or
rcl
xor
cld
jne
rcrb
mov
xchg
in
sbb
push
or
js
jle
xchg
jmp
jno
push
loop
arpl
cmp
mov
pop
inc
jbe
adc
aaa
into
sbb
leave
jle
pop
nop
subb
ljmp
adc
xchg
dec
push
fcmovu
push
cmp
cmp
hlt
push
xchg
sub
loopne
xor
mov
jo
or
jle
gs
pop
lcall
lahf
mov
cmpb
mov
mov
fmuls
outsl
in
and
mov
add
xor
pop
push
push
ljmp
and
outsl
dec
add
inc
or
ljmp
icebp
and
mov
mov
fcmovnbe
fdivrs
adc
fisubrl
or
ret
divl
xchg
movsl
int3
sbb
aaa
mov
lea
ljmp
dec
pop
push
inc
shrl
ds
arpl
loope
cmp
xchg
ds
add
adc
adc
or
push
push
sahf
sbb
sub
xchg
and
test
push
je
or
fisubs
hlt
lret
add
mov
jp
sahf
mov
cli
push
jno
aam
cmp
and
dec
sbb
xor
mov
outsb
push
dec
insb
mov
movsb
sub
xor
xchg
test
cmp
jae
adc
sbb
and
jp
insb
lods
push
sub
jnp
shl
and
lahf
fwait
jno
pop
xchg
lret
jmp
inc
ljmp
pop
mov
adc
jmp
cmpsl
adc
mov
add
pop
mov
lahf
nop
mov
repz
jne
shll
mov
out
rcrb
sbb
push
pusha
hlt
push
sahf
addb
mov
ljmp
sti
call
enter
repnz
pop
pop
mov
mov
xor
mov
in
dec
cli
mov
test
xchg
cwtl
outsb
outsb
in
cmp
mov
push
jb
icebp
add
mov
sbb
push
fbld
outsl
sub
jne
fimull
mov
pop
mov
xchg
inc
inc
rcrb
push
pop
imul
jecxz
xor
push
sbb
and
add
cld
icebp
ljmp
add
scas
mov
repz
sub
idivl
loope
dec
pop
adc
jge
adc
inc
rcr
ljmp
es
lret
jne
sub
fdiv
pop
lds
mov
pop
dec
push
adc
bound
mov
xor
xlat
aaa
mov
xchg
mov
mov
movsl
cwtl
test
cmpsb
mov
or
aas
fildll
inc
or
pop
push
mov
xchg
push
fwait
cmp
mov
jmp
jl
mov
push
xchg
aam
sub
movsl
lsl
std
cmp
pop
jne
dec
aad
sti
jb
pop
nop
jns
out
outsl
nop
or
push
addr16
in
dec
in
xchg
push
fstpt
orl
pop
lods
cs
xchg
popa
jp
lret
lcall
mov
adc
inc
shl
icebp
jbe
ss
or
scas
inc
aam
into
dec
sti
test
out
dec
int
add
arpl
push
mov
xchg
pushf
mov
xchg
dec
jle
cmp
jecxz
xor
inc
mov
ret
pusha
mov
xor
xor
call
mov
cli
shrb
push
in
dec
or
push
jae
dec
sbb
lret
test
push
push
scas
sbb
sub
mov
stc
fadds
ja
call
sbb
mov
push
sub
fs
jg
push
adcb
ficoml
mov
loope
jno
mov
cmpsl
inc
add
sti
negb
aad
lret
sbb
ja
sub
sbb
je
inc
mov
popf
jmp
pop
enter
out
xor
gs
fstps
cmpsl
jb
cmp
hlt
adc
out
out
add
ffreep
js
negb
hlt
mov
jmp
cli
dec
stc
cmpsl
xchg
adc
test
jl
in
sti
movsb
cltd
sbb
mov
out
ss
pop
or
jp
cld
pop
addr16
jns
pushf
add
or
push
cmp
or
lea
mov
cmp
cmp
test
lock
push
jae
ss
ret
sub
out
jae
shrl
xor
xchg
mov
into
cwtl
addr16
pop
inc
mov
mulb
cmp
mov
cmp
xchg
loop
push
add
inc
jge
xor
pop
or
xor
aam
add
call
test
lret
inc
mov
in
int3
aad
inc
mov
popl
test
sbb
xlat
fst
xor
sub
mov
cmp
add
and
and
fwait
dec
and
sbb
push
lcall
movsl
xchg
lods
inc
inc
outsl
lret
inc
daa
push
xchg
loope
loopne
push
cmovg
imul
out
mov
subb
pop
rep
mov
xchg
or
cmp
mov
data16
push
mov
xlat
bnd
subl
adc
jnp
hlt
sarl
xchg
or
mov
out
lcall
dec
xor
ja
and
xor
sub
and
pop
adc
jo
rolb
and
cmp
mov
pop
dec
push
inc
xor
push
addb
mov
test
ss
bound
xor
stc
inc
loope
aam
xor
pop
push
lock
mov
add
std
popa
scas
jb
in
lock
push
mov
sahf
lret
out
adc
mov
out
aas
scas
imul
or
js
push
sbbl
xchg
xor
pop
lds
push
inc
sbb
out
mov
mov
neg
mov
mov
fcompl
mov
cmp
lods
jge
xchg
and
repz
int3
mov
enter
test
loop
pop
xchg
repnz
pop
dec
dec
mov
pop
push
movsb
xor
bound
cmp
cmp
and
cmp
inc
xchg
cmpb
and
cmp
movsb
or
mov
cwtl
push
inc
repnz
insl
lret
sbb
xchg
mov
jnp
sub
pop
inc
xor
addr16
push
out
sbb
add
dec
enter
push
jae
push
inc
mov
std
addb
push
sub
push
sbb
inc
out
scas
scas
sti
std
pop
ljmp
cmc
and
out
mov
out
xor
cmc
jbe
fwait
jmp
mov
jl
test
cmp
rorl
call
adc
pop
idivb
push
sbb
adc
bswap
popf
xchg
add
dec
mov
sbb
mov
mov
inc
or
loopne
add
fcoml
loopne
pop
movsl
ss
pop
cmp
pop
jp
scas
testl
inc
jmp
nop
or
cmpsl
inc
movsl
or
cmpsl
jl
lods
lret
xchg
cmp
inc
add
mov
ffreep
inc
push
jne
roll
int
scas
and
js
and
mov
or
ja
mov
inc
nop
pop
and
movsb
rcr
aad
jle
mov
pop
jmp
pop
int
outsb
push
je
loopne
sbb
outsl
das
inc
add
pop
lea
loope
mov
divb
xchg
adc
icebp
sbb
mov
mov
jge
cltd
jmp
inc
cmp
mov
les
sub
std
xor
popa
into
vpmovusqd
cmp
in
pop
mov
cs
pusha
and
and
cli
pop
aaa
push
xlat
imul
sub
dec
int
repz
idivl
fs
push
out
aas
fstpl
shrl
repnz
xchg
ret
dec
jb
lret
fmull
lret
popf
sbb
or
sar
and
mov
lcall
pop
inc
jae
dec
addr16
pop
notl
cmp
clc
fisttpll
hlt
mov
fdiv
shrl
cltd
jo
movsb
push
adc
shrl
cmp
or
mov
xlat
adc
xor
cmpsl
and
out
xchg
jo
out
insl
xchg
mov
fisubrs
mov
cltd
sbb
mov
std
jp
popa
xchg
rorl
xlat
inc
mov
int
mov
loopne
and
fcmovnbe
jns
imul
push
cmp
pop
push
int
jecxz
imul
mov
add
pop
in
arpl
cli
imul
mov
jle
fistps
push
jne
iret
xor
aas
outsl
cli
pop
cmc
inc
leave
add
lds
jnp
pop
test
xchg
xchg
test
xor
push
jns
out
push
xor
and
mov
int
adc
xor
iret
inc
sbb
mov
sub
sub
jmpw
lods
adc
aad
fildl
mov
inc
arpl
lret
leave
ss
aas
push
sbb
cmpsl
fcoml
lahf
dec
andnps
jb
adc
sti
jge
and
insl
sbb
adc
mov
or
ficomps
jge
mov
fcmovnu
mov
mov
push
outsb
lret
dec
fwait
mov
mov
xlat
sub
shlb
enter
adc
mov
lds
fmul
popa
and
cmc
cmc
or
push
jbe
or
jne
xchg
int3
inc
sbb
das
xchg
cmp
jle
fcmovnbe
mov
xlat
mov
adc
jge
jg
ja
mov
sbb
inc
or
add
jmp
cmp
mov
xchg
pop
add
fwait
lcall
aaa
les
cmp
loop
shlb
test
push
pushl
jmp
mov
in
stc
mov
ja
mov
andl
mov
and
add
fisubrs
int3
dec
sbb
fcoml
push
mov
lret
jp
inc
in
jb
xchg
outsb
loopne
sarl
and
adc
adc
jp
jns
inc
cli
pop
cmpsl
cmpsb
ds
rcll
jbe
adc
sahf
cwtl
clc
aam
daa
jge
movsb
xlat
mov
adc
dec
pop
mov
jne
lock
add
in
xchg
addr16
cltd
test
xor
aaa
jp
push
cltd
sbb
xor
add
int3
clc
ret
scas
mov
outsl
ret
push
dec
push
lcall
not
mov
out
sbb
out
es
xchg
add
cmpsb
or
dec
pop
mov
inc
xchg
xorl
mov
cmp
ret
movsl
pop
enter
mov
es
mov
cmp
push
test
mov
push
outsb
and
cmc
repz
or
jnp
pusha
add
push
not
js
xchg
adc
mov
cmc
arpl
jp
mov
lods
test
xor
hlt
dec
or
insl
mov
notb
xor
pop
pop
repnz
mov
enter
sbb
shll
call
dec
frstor
in
out
sarl
add
mov
pop
aaa
lds
add
cwtl
cmp
outsl
fadd
test
inc
pop
jae
inc
movl
mov
in
sub
js
cs
add
inc
inc
fstpt
clc
std
cltd
je
dec
add
movl
xor
mov
xchg
dec
push
aaa
and
xor
adcl
cmp
lret
xchg
fiadds
mov
mov
fmul
imul
jbe
jle
not
dec
fbstp
dec
mov
icebp
out
pop
jle,pt
jns
xor
pop
mov
rcrl
mov
int
rcrl
mov
shll
inc
mov
lods
and
add
cmp
leave
mov
gs
addr16
xor
stos
and
xchg
mov
cmpsb
das
addl
lcall
stos
cmp
int
sbb
je
cmpsb
xor
clts
dec
cmp
idivl
rolb
sbb
lods
lods
ss
mov
jl
dec
mov
lock
xlat
andb
xchg
int3
dec
test
lcall
xchg
jnp
sub
xor
and
mov
shr
push
add
adc
push
dec
mov
imul
rclb
dec
cmp
push
xchg
in
pop
and
test
jg
mov
movsl
dec
call
xor
dec
fwait
mov
es
and
fucomip
push
xlat
rcrb
fld
mov
mov
ret
std
xlat
xor
out
inc
mov
insl
cld
push
xchg
out
aam
pop
out
shll
test
add
jp
insb
adc
cmp
cmp
outsb
lret
enter
mov
mov
je
push
add
pop
icebp
or
pusha
xchg
fwait
xchg
dec
mov
or
sti
ja
sti
sub
test
jg
nop
add
xor
pop
outsl
add
loope
leave
push
mov
es
lahf
dec
and
jmp
pop
cld
sbb
xor
mov
in
fisubl
lret
cmp
pop
xorl
fs
adc
inc
mov
xchg
xchg
aad
mov
js
jnp
mov
fcomi
dec
js
stc
out
pop
adc
cmpsw
in
cmp
aas
sbb
iret
adc
and
dec
add
add
jmp
adc
mov
rcll
pop
lahf
in
add
inc
xchg
sbb
ret
sbb
ret
ljmp
leave
ss
cld
add
mov
jo
add
inc
imul
sbb
xchg
dec
jo
push
push
gs
jae
xchg
adc
lret
add
or
test
sbb
fisubrl
xor
dec
dec
push
cmpsb
jb
xchg
push
jl
repz
int
push
or
push
xchg
jg
pushf
jmp
ja
in
sub
xchg
dec
popa
sbb
xor
cltd
dec
mov
insb
sub
inc
icebp
scas
fnsave
jb
xchg
or
sahf
inc
xchg
cltd
aaa
andl
imul
push
mov
cwtl
pop
adc
sbb
mov
jbe
es
xchg
jbe
aam
das
insb
das
lcall
fs
in
nop
xorl
insb
and
sub
mov
mov
or
pushf
and
pop
repnz
cltd
xor
into
cmp
push
pop
xchg
test
test
out
ljmp
pusha
mov
xchg
arpl
xor
decl
xor
mov
lcall
fadds
loope
subb
daa
push
in
mov
mov
mov
fs
in
xchg
adc
fdivs
arpl
xor
jbe
mov
sbbb
mov
fsubrs
pop
lock
pop
ret
jo
imulb
insl
sti
aad
push
cmpsl
stos
dec
rcl
mov
cmp
cli
fs
xchg
and
loopne
scas
push
mov
cmp
call
lret
fldl
jns
mov
jns
cmpsb
psrad
pop
push
daa
mov
sub
mov
xor
cmp
popf
mov
or
mov
xchg
push
out
rolb
xchg
dec
push
loop
inc
mov
and
adcl
dec
into
sub
test
enter
test
inc
sub
push
xchg
shll
ss
xchg
mov
push
loope
popa
jae
ret
loope
jo
jp
jne
popa
pop
in
sbbb
ss
lcall
mov
lds
aas
enter
insb
repz
inc
andb
or
jecxz
inc
xor
inc
pop
pop
fstps
test
lahf
jecxz
xchg
out
pop
inc
mov
test
std
sbb
mov
inc
xchg
push
sarl
xor
push
les
xchg
inc
sarb
stos
jecxz
mov
jle
dec
xchg
in
fsubr
push
ret
sub
repnz
xchg
test
loope
jns
mov
pop
or
mov
jb
jmp
jl
mov
lret
in
lock
pop
xlat
fs
or
xor
add
mov
cmp
bound
sub
test
aam
addb
mov
and
jae
and
je
dec
mov
push
sub
jle
push
mov
lea
neg
inc
lods
jecxz
insl
push
inc
add
mov
sub
dec
aam
sbb
push
icebp
imul
push
xchg
push
rcrl
cmp
mov
cmp
inc
mov
push
mov
xor
test
out
stc
lock
pop
jnp
cli
mov
pop
mov
jnp
or
mov
cwtl
shrl
cmp
sahf
sub
dec
mov
add
data16
imulb
cmpsb
xor
and
jae
xchg
push
jbe
xor
jo
mov
imulb
push
lahf
loop
inc
jo
in
mov
int
or
mov
lret
adc
repnz
cmp
xor
leave
pop
mov
jae
sbb
xchg
push
push
push
sub
out
mov
mov
fs
orl
mov
cmp
lea
js
movsb
jns
pop
xchg
repnz
insb
adc
sbb
dec
stos
insb
pop
out
lods
sub
cmc
and
pop
lds
fisttpl
dec
int3
lahf
mov
and
push
loop
sti
and
es
cwtl
jno
or
mov
es
and
lea
fimuls
jno
pop
inc
cli
in
addb
into
in
into
mov
mov
push
adc
adc
iret
andl
mov
mov
shll
xor
mov
push
mov
and
jecxz
sarl
mov
jge
pop
icebp
mov
cwtl
lahf
out
adc
jno
inc
xor
test
jecxz
inc
jmp
xchg
dec
sbb
stos
or
add
cmp
imul
xor
mov
cmp
imul
dec
dec
and
push
mov
xchg
mov
adc
stos
lret
xchg
fcomi
xor
add
inc
ss
outsb
mov
popa
sar
cmp
pop
scas
sbbl
xlat
mov
add
lahf
lea
add
inc
dec
adc
pusha
inc
jnp
fwait
mov
iret
jb
xor
jno
add
mov
sbbb
and
xor
popa
sub
pushf
pop
sub
xchg
aam
xor
xor
call
fidivrl
sbb
jo
dec
jns
mov
xlat
pop
ds
jae
js
stos
push
cmp
das
loope
mov
fisubrl
jmp
sbb
mov
in
sub
dec
lret
fildll
dec
in
negl
cmp
stc
mov
jge
mov
push
adc
jbe
sub
outsb
into
pop
das
push
pop
inc
rcr
fidivrl
shr
sar
push
inc
add
pop
mov
push
loopne
movsl
mov
lahf
ret
out
inc
sbb
or
pop
add
and
cli
repz
test
xchg
adc
fnsave
adc
dec
mov
push
das
out
ds
or
xor
or
push
mov
lahf
xchg
outsb
fildll
pop
aad
loope
inc
jmp
xchg
pop
data16
loop
in
jge
in
jle
cwtl
push
popa
push
add
xor
inc
ficomps
mov
sbb
in
jle
outsb
int3
pop
fmull
ds
push
insb
jl
dec
ficomps
mov
sbb
in
jle
outsb
int3
pop
fmull
ds
push
insb
jl
dec
pop
pop
into
sub
cmp
or
sbb
in
cld
outsb
int3
pop
fmull
ds
push
insb
jle
dec
ficomps
mov
pushf
mov
jle
les
fdivrl
arpl
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jecxz
repz
add
adc
rcrl
push
cltd
push
arpl
push
xchg
and
xor
add
adc
jecxz
repz
add
adc
inc
xchg
push
arpl
push
xchg
jecxz
xor
add
adc
jecxz
repz
sbb
or
pop
xchg
dec
arpl
mov
hlt
push
xchg
and
jge
mov
jne
lcall
imul
test
int
cmp
js
lahf
mov
jge
outsb
fstps
xchg
lods
xchg
fsubl
push
rcrl
les
jne
aaa
jno
xor
daa
jno
cmp
dec
icebp
data16
adc
jecxz
repz
inc
cmpsb
mov
sbb
dec
mov
mov
push
orb
sbb
adc
and
sub
cli
inc
mov
add
push
mov
xchg
jo
int3
jl
rcll
push
cs
add
pop
fisubl
inc
nop
push
jnp
fdivl
andl
mov
test
xchg
shrl
repz
adc
or
pop
xchg
dec
arpl
push
mov
stc
xor
add
adc
stos
add
pop
out
xchg
cmp
enter
aam
and
mov
cmpsb
jno
adc
adc
inc
sti
and
and
inc
cmc
push
shlb
xchg
pop
sahf
outsl
lods
data16
pusha
repz
lods
pusha
mov
jno
inc
xchg
push
arpl
push
xchg
and
xor
add
adc
jecxz
repz
add
adc
inc
xchg
push
arpl
push
xchg
and
xor
add
adc
jecxz
mov
and
add
mov
push
aaa
inc
fiaddl
push
cmpsl
fwait
inc
fcom
in
sbb
pop
push
push
insl
dec
pusha
inc
add
adc
test
gs
ds
and
fdivr
rcrb
dec
test
xor
adc
sub
lret
and
xchg
xchg
dec
mov
or
loope
test
xor
in
jg
shrl
stos
shlb
jae
cli
jge
pushf
or
add
fsubl
std
es
leave
sub
jns
shlb
sar
fptan
and
cs
mov
lock
subl
cmp
call
mov
out
fmull
sbb
pop
nop
fadd
pop
out
cmc
mov
sub
sbb
in
xor
movsb
jmp
or
jns
stos
shlb
pushf
inc
or
andb
jl
ret
or
jl
add
mov
int
xchg
out
popa
mov
bound
test
xchg
mov
fucomi
push
inc
ret
sub
inc
movsb
out
mov
std
dec
and
xchg
test
ret
lahf
jo
insb
xchg
andb
add
push
in
jl
push
push
cmp
xor
mov
or
cmp
stc
jecxz
mov
mov
jp
jne
daa
dec
jp
ja
mov
popf
inc
mov
pop
pop
loope
fs
mov
addl
push
and
mov
sahf
xor
or
cld
ljmp
pop
outsb
cmpsl
cmp
ret
nop
lods
xchg
cmp
dec
loop
cmp
sbb
out
cmc
pushf
shll
jae
enter
outsl
test
mov
mov
cmpsl
push
jnp
or
xchg
rcrl
pop
lret
lods
xor
mov
ljmp
inc
outsl
in
in
outsl
fistpl
or
popf
scas
mov
aam
iret
pushf
hlt
fs
adc
test
push
xlat
jmp
jl
clc
rorb
sti
push
xor
shl
jns
add
leave
sbb
out
add
mov
xorl
mov
aaa
xchg
fidivrs
mov
mov
inc
xchg
psraw
inc
mov
xchg
push
fwait
mov
or
mov
dec
pop
mov
mov
frstor
mov
push
sti
jns
sahf
out
or
sarl
jge
or
fs
icebp
xor
inc
stc
xchg
inc
xchg
add
shll
popa
lcall
cwtl
jns
push
xchg
shlb
xchg
dec
fdivrs
sbb
mov
outsl
push
int
lea
shlb
mov
movsb
xchg
jno
ror
jp
xor
xchg
add
orb
xor
xchg
cmp
fiaddl
sahf
push
jae
inc
push
mov
add
movsl
cwtl
jb
es
jl
dec
std
pop
decl
cmpsb
sub
pop
mov
std
sti
dec
xchg
xchg
fldenv
inc
popa
xchg
inc
or
lea
ss
sbb
inc
sarl
ss
addb
sbb
jo
es
or
daa
rep
out
test
or
out
inc
outsb
mov
into
ret
bound
sahf
mov
ficompl
sbb
xchg
addr16
push
sbb
push
icebp
sbb
outsb
lret
dec
xchg
fwait
and
and
sub
lret
pop
mulb
bound
fadd
cmc
pop
mov
mov
or
icebp
les
hlt
hlt
cmp
or
ljmp
std
xchg
xchg
div
push
sub
jle
mov
mov
jne
outsl
in
jge
mov
out
mov
pop
add
cmpsb
dec
pop
fs
dec
mov
repnz
cmpsb
out
xchg
imul
cmpsb
xorl
sbb
mov
pop
aam
xor
sbb
or
adc
xchg
add
ret
xchg
mov
shll
jns
dec
nop
pop
push
js
push
clc
add
jb
pop
xor
mov
or
jp
mov
jns
inc
je
pop
pop
ret
imul
push
imul
cmpsl
outsb
inc
fnstsw
fistpl
fidivrs
and
sub
or
sub
mov
rcrb
pop
xchg
aam
pop
ret
in
mov
inc
inc
mov
icebp
fadd
sahf
jns
lret
mov
int3
rorb
sarl
or
add
mov
in
scas
insl
pop
aam
mov
aam
sub
stos
stos
and
pop
cli
and
cld
pusha
xchg
mov
bound
or
mov
xchg
es
iret
lahf
and
imul
and
pop
stos
ror
inc
shll
fmul
or
pop
cmp
push
mov
push
mov
ja
popf
int3
in
ljmp
cmpb
sub
adc
test
sub
ret
push
push
fnstsw
gs
sub
nop
pmullw
cli
insb
fs
push
sbb
and
xchg
pusha
aaa
xor
inc
test
clc
ss
cmpl
shl
push
pop
es
push
out
mov
add
in
vandnpd
inc
int3
out
jmp
xchg
xchg
rclb
push
push
add
aas
and
or
mov
jg
add
and
xor
pushf
push
jb
mov
movsb
mov
xchg
jbe
jecxz
mov
daa
jecxz
ror
out
jl
and
jp
xchg
cmp
adc
pop
mov
pop
pop
repz
stos
aaa
xlat
inc
sub
and
int
fmuls
repnz
lods
mov
and
cmp
pop
test
and
xchg
shlb
and
filds
imull
cli
pop
test
cwtl
push
jno
jl
add
and
push
scas
repz
dec
fstl
lock
sbb
xchg
fsubl
fucomp
push
push
or
sbb
cwtl
mov
xchg
mov
mov
cmp
xchg
out
fwait
mov
fidivs
add
shl
sub
adcl
bound
stos
xor
cmpsl
add
loope
js
lret
dec
push
icebp
movsl
sub
es
stos
test
roll
nop
outsl
or
scas
inc
roll
xor
inc
imul
adc
lret
mov
in
jl
outsl
adc
lcall
lret
int
sbb
push
xor
es
xchg
pop
jno
hlt
gs
daa
stos
inc
iret
mov
enter
sbb
cmp
shll
rcrb
int
and
pushf
jbe
ss
pop
out
and
int3
pop
movsb
jns
inc
and
push
sub
add
movsb
inc
push
int3
mov
sarl
push
xor
aas
rcll
dec
jae
nop
sarb
dec
out
in
movsb
cmp
sbb
add
mov
cmp
jg
jbe
insl
cmpsl
insb
inc
cwtl
dec
fadds
mov
push
aas
cmp
arpl
hlt
xchg
and
or
push
insb
mov
loop
or
aad
stc
ljmp
mov
mov
loop
jl
ss
xor
xor
sub
adc
daa
ds
out
add
and
push
adc
arpl
or
xchg
sbb
leave
add
adc
mov
sbb
rclb
clc
xchg
jns
in
fsubr
and
es
or
in
cmpsl
push
lret
mov
xchg
pop
aad
pop
mov
mov
cli
aas
mov
fists
imul
xorb
ret
or
inc
mov
dec
stc
jle
js
pop
les
cmp
cwtl
sub
les
test
icebp
dec
out
jbe
mov
xchg
movsb
push
jge
ja
adcl
outsl
stc
ja
fistpl
in
add
mov
sbb
addl
pop
push
mov
dec
test
adc
xchg
adc
add
jl
data16
mov
ror
jb
and
mov
mov
push
rorb
ret
clc
dec
jg
cmp
cmp
sbb
push
mov
subb
divl
fmuls
enter
lods
loope
sbb
cmp
jmp
and
jbe
sub
outsl
sarl
js
aas
sub
xor
pop
push
subb
int
mov
pop
xor
fsubrs
mov
pop
add
xor
adc
or
xor
leave
sbb
lds
lcall
mov
cli
popf
sub
mov
in
mov
aaa
add
pushf
imul
mov
cltd
iret
pop
loop
movsl
jge
jg
push
std
repz
ffreep
jnp
jne
cld
mov
mov
or
lds
or
jmp
cltd
loope
cmp
add
fisubl
in
nop
cwtl
adc
cmp
push
inc
dec
adc
ret
sbb
sti
jae
pop
sbb
jle,pn
jns
cld
xorb
notl
cld
and
ror
lds
neg
pop
faddp
add
sub
dec
or
add
jne
sbb
mov
sti
movsl
out
ss
outsl
call
jns
mov
or
iret
adc
movsl
mov
into
jnp
mov
mov
pop
push
cmp
int3
fnstsw
or
xchg
fwait
aas
pop
pop
xchg
and
stos
jb
pop
cld
insl
cmpsb
inc
movsb
sti
ljmp
loope
stos
add
mov
das
loop
in
dec
sar
inc
cmpsb
lea
jmp
sarl
movsl
mov
pop
pusha
dec
cs
pop
mov
shlb
mov
cwtl
rcrb
std
aas
adc
outsl
outsb
mov
test
mov
ja
pop
adc
stos
popa
out
insl
jle
es
test
pop
sub
cli
push
xchg
lea
addr16
mov
fdivrl
neg
bswap
mov
in
mov
sbb
int
lea
fistl
pop
fwait
sbb
test
je
adc
xor
pop
loopne
pop
iret
popa
xor
ds
ja
movsl
sar
mov
scas
mov
shlb
daa
test
lods
movsb
pop
out
xor
scas
sbb
xor
stc
mov
dec
fsubr
arpl
stc
pop
and
ds
hlt
test
mov
pop
scas
cmpxchg
push
mov
push
std
ficoml
cmpsl
ljmp
roll
iret
adc
dec
imul
xchg
sbb
jns
push
shll
popf
xchg
stos
movsl
sbb
push
pop
xchg
jge
sub
add
xchg
or
shll
out
pop
inc
jle
adc
mov
ljmp
les
xchg
xor
push
lret
mov
in
dec
sbb
imul
stc
jmp
lea
iret
test
movsb
pop
mov
adc
xchg
push
pop
out
movsb
test
lock
shlb
and
xchg
push
push
out
sub
stc
inc
jmp
sub
hlt
clc
inc
outsb
xchg
cmpsl
fs
add
jb
dec
jecxz
addb
lahf
nop
and
out
push
xchg
scas
push
mov
shll
jge
fcoml
sub
xchg
pop
fimuls
cli
ljmp
repnz
ret
mov
loopne
fimuls
sub
lret
add
or
mov
hlt
xor
rorb
cmpsb
adc
adc
into
insl
push
insl
loopne
push
jns
pop
das
aaa
or
jb
mov
xchg
and
sbb
lods
or
push
arpl
cmp
adc
inc
outsb
and
and
cs
dec
ret
addr16
testb
push
pop
shll
push
adcl
fs
and
adc
cmp
fisubl
js
mov
push
mov
jecxz
stos
cmc
or
ljmp
lods
mov
aaa
cltd
xchg
jg
bound
xchg
sbb
nop
ret
fmul
decl
and
popa
mov
dec
cmpsl
pop
sub
movsl
cmp
lret
icebp
push
inc
scas
jge
cld
jle
xor
fwait
lret
mov
mov
mov
push
push
sahf
jp
scas
test
hlt
jnp
mov
or
adc
add
mov
mov
sahf
sarl
push
daa
aad
adc
outsl
sbb
test
in
push
mov
mov
jae
mov
pop
mov
sbb
mov
testb
cmp
add
scas
jb
mov
push
in
ss
adc
pusha
push
or
mov
imul
pop
push
in
add
dec
cmp
cld
inc
stc
or
lods
xor
leave
mov
mov
es
dec
hlt
mov
pusha
rcll
dec
out
cmpsl
xor
div
scas
jmp
stc
xor
mov
pop
je
sti
mov
add
notl
cwtl
aas
addr16
sub
push
adc
gs
cmpsl
dec
add
push
xchg
nop
stc
add
pop
sbb
or
insb
mov
add
jecxz
das
rcrb
adc
aam
push
stos
dec
xlat
into
cld
leave
push
add
dec
outsl
adc
rcll
out
sahf
sub
rclb
xorb
mov
dec
lods
insb
push
ja
pop
leave
xchg
mov
jno
push
pop
clc
push
xor
xchg
inc
push
in
pushf
adc
or
into
lock
fmulp
sbb
inc
push
sub
cmc
pop
and
jp
mov
dec
imull
lahf
jne
pop
dec
scas
movb
jo
lcall
fsubrs
lock
shl
imul
popa
test
enter
repz
lods
lret
pop
sub
and
fsubr
jge
test
mov
iret
pop
call
adc
fwait
mov
bound
dec
pop
pop
insl
jg
xor
push
pushf
jp
imul
cli
jl
cmp
int3
scas
pop
pop
xchg
imul
jmp
lea
stos
or
ja
add
in
js
pushf
insb
inc
sbb
xor
jne
dec
jl
mov
xor
fldcw
jnp
cmpsl
clc
subl
dec
std
cs
dec
sbb
inc
cmp
xchg
and
test
scas
add
and
and
xchg
hlt
ljmp
inc
cmp
xlat
dec
mov
pop
pop
jle
rdtsc
imul
imul
inc
mov
sbbb
fcmovb
push
sti
andl
mov
and
push
xor
push
cmp
xchg
xorb
je
fldcw
int3
pop
xchg
mov
inc
inc
sub
dec
push
dec
arpl
jno
xchg
rcll
ret
test
scas
jmp
xchg
or
jno
stos
idivb
cli
inc
sub
push
sbb
and
stc
repz
ljmp
leave
ret
sbb
lods
jne
xor
fmulp
andb
add
lock
jl
jmp
popa
dec
sbb
pop
adc
push
lcall
dec
dec
je
mov
fnsave
pusha
xchg
dec
and
dec
dec
pop
cs
inc
adc
xlat
inc
ljmp
sbb
mov
arpl
leave
sub
sub
jb
popa
mul
sub
outsb
add
test
lahf
jbe
or
imul
add
in
jb
out
das
sub
cmp
sbb
aas
mov
lods
ja
repz
mov
loop
jg
dec
mov
call
outsl
mov
jno
hlt
dec
sbb
jecxz
mov
sub
aas
jb
mov
cmp
cmp
xor
xchg
in
pop
arpl
subl
cmp
je
loopne
fnstenv
mov
fcmove
sti
rcrb
fmuls
aaa
push
push
push
repz
jp
push
pop
std
aaa
sbb
jns
dec
mov
or
jp
mov
cld
test
dec
test
mov
inc
lock
cmp
leave
clc
add
out
das
arpl
push
fwait
push
jmp
pop
dec
xlat
xor
das
jmp
aas
add
mov
mov
or
mov
pop
jo
dec
pop
xlat
outsb
int
in
test
and
into
pop
inc
fdivs
sub
into
xchg
cli
xor
pop
mov
jo
jnp
adc
pop
dec
xchg
cli
pusha
xor
mov
incl
mov
xor
xchg
rcll
push
mov
cltd
test
fsubl
cli
jl
ljmp
sti
out
inc
lcall
pushf
test
add
or
adc
cs
mov
sub
or
lahf
scas
xor
dec
fsubl
sarl
aam
xchg
cmp
roll
mov
dec
push
popw
scas
sub
in
lock
or
int3
mov
orb
out
lret
push
leave
fadds
adc
jbe
pop
push
popa
and
push
ds
add
adc
cmp
add
push
mov
xor
sarb
xor
mov
cmpsb
xor
xor
lds
test
fmuls
in
cmp
repnz
and
xor
stos
xor
mov
inc
and
inc
push
cli
dec
inc
xchg
add
mov
sub
iret
dec
mov
int3
int3
cld
pop
stos
roll
cmp
dec
or
test
sti
ss
popf
pop
lret
xor
idivb
mov
mov
sub
sub
xchg
and
in
ret
push
cltd
cmp
ds
clc
cwtl
xchg
xlat
std
out
enter
sbb
loope
or
cli
aad
fsubr
add
leave
push
mov
adcl
and
push
out
cmp
idivb
jmp
xor
sbb
inc
adc
fcomi
add
bound
pop
inc
jns
movsl
sti
ret
push
jmp
mov
cmp
leave
lods
push
push
outsb
fbstp
repnz
hlt
orb
adc
xchg
adc
cmpsb
mov
sub
mov
es
add
outsl
out
loopne
mov
xor
enter
push
dec
sub
push
mov
or
add
push
pop
or
lret
add
pop
fistpl
mov
outsb
jns
jb
mov
stos
mov
cs
or
sub
int
xchg
cmc
jmp
sbb
in
push
jb
int
or
gs
aas
imul
in
pop
sti
jne
pop
adc
mov
jle
and
mov
mov
adc
add
jge
fdivp
aam
xchg
xchg
jmp
test
movsl
cmp
xchg
adc
adcl
setge
or
or
pop
adc
xorb
cmp
int
je
loope
testl
ja
dec
pop
lods
lahf
or
pop
jns
xor
push
clc
lcall
test
stos
lods
push
sahf
sub
enter
ds
adc
xor
push
or
outsb
stos
mov
sahf
push
insb
idivb
jbe
mov
mov
shlb
mov
nop
push
lcall
imull
in
out
les
mov
xor
lahf
pop
sub
mov
icebp
jle
je
incl
fidivl
mov
and
dec
sub
loope
ds
sub
ficomps
movsb
pop
aad
daa
lcall
mov
inc
or
add
andb
lds
mov
adcl
ret
fsubrs
loop
inc
or
scas
sub
stos
mov
ret
outsb
mov
xchg
in
push
lret
push
test
idivb
mov
mov
xchg
xor
iret
jnp
pop
hlt
or
push
in
bound
call
push
push
or
lcall
pop
jns
rcl
push
out
cmc
fcompl
sub
rclb
mov
icebp
fmuls
testl
jae
insl
inc
cmp
das
and
out
test
mov
inc
aad
sub
push
aad
out
adc
mov
inc
out
xchg
mov
lahf
sbb
loope
add
dec
adc
mov
cmp
addl
call
xor
xchg
jno
cmp
mov
testl
add
sub
push
pop
add
stos
and
cmp
mov
es
cmc
sub
mov
lds
popa
push
push
aad
add
push
pop
in
push
mov
fcos
sti
mov
xchg
and
and
stos
add
outsb
mov
addb
ds
jmp
push
movsb
dec
stos
stos
mov
mov
imul
sbb
mov
decl
aad
sub
je
dec
pop
and
lret
pop
mov
add
es
cs
push
push
xchg
add
jno
sub
jmp
scas
cmp
sarl
push
and
xchg
mov
subb
rcll
mov
inc
xchg
push
arpl
push
xchg
and
xor
add
adc
jecxz
repz
add
adc
inc
xchg
push
arpl
push
xchg
and
xor
add
adc
jecxz
jae
inc
add
adc
popa
mov
addl
arpl
push
nop
and
xor
add
adc
jecxz
repz
add
adc
inc
xchg
push
arpl
push
out
imul
pusha
pushf
jo
inc
mov
push
int3
and
adc
cld
lock
cmp
dec
mov
insb
nop
call
inc
mov
xor
add
push
dec
sarb
int3
pop
mov
cmpb
outsb
jo
inc
fs
shlb
mov
adc
aas
roll
mov
hlt
cs
out
and
loop
sarb
lods
sub
push
enter
ss
fwait
dec
add
test
mov
or
pop
mov
pusha
xor
sub
cmp
loop
pop
mov
or
cli
xchg
push
mov
mov
add
pusha
fnstcw
sub
mov
repz
inc
pop
mov
jge
cltd
cmp
pop
mov
mov
add
hlt
push
dec
push
fdivl
adc
out
or
inc
ret
mov
jl
jae
xchg
and
push
mov
sub
lahf
mov
or
pop
mov
xorb
in
std
lods
push
inc
adc
and
push
aas
icebp
sbb
shll
test
pusha
lret
inc
mov
xor
add
lret
lock
rorb
mov
jl
in
out
xor
inc
les
inc
mov
cwtl
inc
cld
inc
or
dec
icebp
dec
movsl
pop
movsb
jecxz,pt
aad
stc
sbb
roll
push
movsl
dec
mov
je
stos
dec
mov
inc
mov
into
xor
loopne
lock
xor
xor
in
add
adc
sbb
sub
cmp
dec
mov
jl
mov
jo
inc
mov
xor
add
adc
sbb
sub
cmp
dec
mov
jl
mov
sbb
jl
add
orb
imul
mov
jle
xor
xor
into
cmp
ljmp
jnp
dec
popf
sbb
jecxz
les
or
test
xlat
xchg
insl
xor
pop
je
subb
pop
cltd
mov
scas
adc
nop
sbbl
gs
shll
enter
movsl
fndisi(8087
pop
push
xor
xor
es
sbb
jb
cmp
mov
pop
fildl
pop
sub
adc
mov
dec
stos
xor
jb
les
fdivr
push
adc
add
sbb
popa
push
je
dec
push
lret
cmp
lds
sbb
paddd
hlt
insl
outsl
mov
push
stc
aam
daa
fiaddl
movl
inc
cld
xchg
xchg
xlat
and
mov
jge
jge
ljmp
pop
adc
repz
sub
mov
push
pop
sahf
cld
xor
jge
imul
andb
repnz
cld
enter
sbb
arpl
pop
add
fdivrp
into
xor
sbb
sub
fisttps
ja
mov
movsl
and
xor
fsts
loop
cmpsb
mov
loopne
push
mov
cld
pop
push
xchg
mov
test
rol
fsubrs
int
jo
push
push
xorl
pop
ja
inc
stos
jge
fwait
into
outsb
jns
sbb
cmpsl
sbb
outsl
sahf
pop
mov
or
pop
iret
test
xchg
popa
ret
mov
adc
test
mov
test
inc
mov
orb
pusha
lock
xchg
nop
addb
push
test
push
push
icebp
fstp
pop
mov
sub
xchg
pop
shr
adc
mov
xor
aad
outsl
stc
loope
test
lea
dec
pop
mov
int3
or
in
pop
stos
lds
repz
lret
movsb
cli
xchg
mov
ss
mov
fstpl
aas
adc
lods
mov
jge
call
pop
dec
jmp
push
notb
lea
sahf
inc
mov
fstpt
add
mov
les
fimuls
push
in
bound
lea
arpl
and
cmp
movsb
loope
js
clc
pop
in
jg
adc
or
sbb
test
mov
sub
xchg
and
sbb
repnz
out
imul
jne
xchg
adc
adc
push
push
mov
icebp
and
push
hlt
cld
sti
je
pop
fwait
mov
sbb
out
xor
add
pop
sub
scas
add
dec
rcl
jo
subb
sbb
mov
scas
dec
jp
add
add
jnp
movzwl
cmp
pusha
push
stos
fiaddl
lret
lcall
lahf
dec
sbb
cld
loopne
aas
outsl
mov
shlb
lds
hlt
fdivs
lea
pop
sub
xchg
or
pop
jbe
mov
cmc
push
cmp
sbb
bound
mov
loop
lea
rclb
jg
scas
dec
push
in
inc
or
sbb
fs
clc
nop
and
out
dec
or
fwait
das
cmp
in
push
xchg
cmpsl
outsl
gs
insl
in
mov
xchg
sbb
into
mov
push
cli
jmp
fbld
mov
ds
insb
fstpt
cld
jnp
sarb
std
xchg
mov
clc
ficompl
jle
dec
push
in
mov
jae
inc
cltd
call
sub
outsl
pop
cmp
icebp
inc
icebp
mov
cwtl
push
aas
xor
sub
and
sub
test
addr16
ja
inc
dec
inc
push
stos
pop
inc
inc
xor
stos
fadd
sbbl
shl
movb
stos
push
loop
add
mov
push
popa
dec
jmp
and
adc
sbb
pop
lret
mov
dec
jns
fsubrl
in
mov
and
das
add
cmpsl
inc
jp
fwait
js
or
cmp
iret
std
push
aam
jb
loopne
in
js
ud2
mov
dec
inc
clc
xor
add
jp
movsl
out
and
int3
add
mov
add
xchg
jp
or
sub
es
jge
cmp
iret
ds
pop
nop
sti
daa
sbb
sbb
jbe
out
aad
inc
mov
loope
jecxz
adc
xchg
jecxz
clc
and
decb
xchg
xchg
jae
testb
in
sbb
popa
pop
push
mov
jmp
xchg
faddl
or
jb
and
call
test
ss
sub
jmp
iret
lea
cmp
into
sbb
jne
aam
jp
jmp
sub
mov
je
adc
std
incl
pop
scas
lahf
js
lea
jmp
hlt
rclb
sub
out
inc
jno
xchg
inc
in
push
sub
outsb
lock
in
fcomps
pop
scas
inc
call
inc
repnz
xchg
adc
sub
aad
inc
repnz
dec
enter
in
aam
jno
int3
ljmp
sbb
cmpsl
pop
ds
ror
iret
xchg
add
in
and
add
inc
notb
rclb
pushf
incb
daa
ret
flds
std
inc
fdivrl
xchg
pop
fwait
insb
mov
push
stos
rcrl
into
sub
mov
or
ja
movsb
sub
jg
test
ret
adc
jae
mov
enter
xchg
or
jb
pop
mov
shrl
push
sbb
je
ss
dec
pop
or
cli
jp
pop
sub
jae
imul
cld
jno
leave
in
nop
push
pusha
fldl2e
sbb
jp
adc
cmpl
cltd
xor
xorl
jno
out
lods
adc
cltd
mov
inc
inc
push
sub
pop
and
cld
dec
inc
dec
jge
ret
dec
dec
lret
xlat
jl
mov
mov
cmc
fsubl
push
int3
mov
pop
loope
push
xchg
ss
rcl
out
clc
fs
cmp
pop
mov
clc
cld
roll
and
arpl
dec
dec
push
and
pop
xorb
stos
call
out
jmp
sbb
popf
jp
popa
add
sbb
push
mov
rcrl
movsb
cli
pop
pop
movsl
cmp
cmp
push
cmc
push
push
push
stos
dec
mov
movsb
push
ret
stc
adc
pushf
cmc
jb
cmc
loopne
popa
adc
stc
cld
ret
push
and
stos
or
fidivl
loop
js
xchg
push
in
add
std
xchg
jp
rcrl
fisubrs
cld
mov
inc
int3
mov
incl
cmp
lods
xor
insl
movsl
cmp
adc
xor
jecxz
ret
lret
push
jno
dec
dec
push
jo,pt
fistpl
jbe
mov
or
int
cmc
push
popa
cltd
push
add
popw
push
xchg
mov
jle
push
icebp
xchg
mov
ljmp
inc
pop
xor
add
sbb
or
mov
fadds
mov
cs
pop
inc
push
add
jl
mov
idivl
in
lds
add
int3
addr16
cli
xor
insl
jo
inc
cmp
insl
mov
cmp
push
add
push
idiv
mov
or
mov
cli
movntq
mov
btc
push
pusha
add
push
pusha
test
int3
mov
pop
push
xor
inc
and
divl
repnz
out
call
or
pushf
push
lret
and
rcr
xorl
lcall
pop
mov
inc
xchg
outsl
js
xorb
add
push
jecxz
push
in
cwtl
cmp
aaa
sbb
add
and
push
xor
push
mov
xchg
pop
or
insb
scas
pop
adc
andl
push
adc
in
rorl
iret
repnz
mov
mov
xchg
movl
dec
pop
push
jmp
aam
push
scas
jg
and
cmp
jbe
fdivs
inc
add
xor
bound
ret
lods
movsl
jp
subl
jo
dec
adc
jmp
fwait
test
popf
gs
push
outsb
cltd
jo
les
xchg
lret
es
sbb
add
ss
cmpsl
dec
test
fsts
lds
je
lcall
mov
jno
mov
push
loope
clc
sub
std
and
adc
pushf
cwtl
or
mov
xchg
jmp
and
stos
push
sbb
rcpps
inc
pop
gs
sub
lahf
nop
enter
outsb
in
adc
jle
ljmp
xor
xor
jbe
lcall
lcall
mov
xor
and
dec
lret
imul
mov
xlat
shlb
sbb
jno
push
andb
in
cli
adc
mov
iret
les
add
inc
mov
imul
loope
bound
push
shrl
dec
lret
cli
movsl
xchg
stos
add
cmp
cmpsb
jge
mov
imul
push
dec
daa
mov
inc
mov
or
ret
cmp
and
cld
sub
leave
jl
pop
or
xor
hlt
ficoml
sbb
jb
and
es
into
mov
xchg
dec
push
jns
loopne
cs
mov
movswl
in
pop
jecxz
enter
loop
jbe
fldenv
std
iret
js
cs
scas
xchg
dec
rorb
shlb
and
pushf
jle
call
setge
fwait
pushf
or
xor
test
xchg
imul
aad
ljmp
out
test
or
dec
pop
lahf
fsubrs
arpl
inc
sti
adcb
xchg
inc
pop
mov
xor
xor
dec
in
stos
jno
scas
xchg
sti
mov
mov
mov
into
repz
inc
test
pop
push
push
xor
pop
mov
test
jecxz
cmp
loop
mov
ss
inc
xor
adc
mov
stos
imul
mov
add
sub
repnz
mov
into
nop
adc
inc
shrb
cld
nop
test
dec
add
sarb
idivl
aad
shll
inc
imul
pop
add
and
ss
xchg
mov
push
or
or
jmp
ret
cltd
jo
fdivrs
addr16
imul
mov
lret
sbb
ja
inc
dec
gs
sbb
daa
push
roll
rclb
bnd
dec
subb
fidivrs
pop
push
stc
sbb
lret
cmpl
pop
imull
or
movsl
xor
and
lods
or
push
add
imul
sbbb
comiss
pop
ja
scas
filds
out
sub
aam
adc
push
mov
inc
mov
cld
cmpsl
test
arpl
push
mov
mov
dec
adc
cmp
jmp
loope
icebp
dec
lret
sbbb
orl
push
pop
scas
add
in
fwait
jae
shll
sub
fwait
xor
pop
rcrb
stos
js
orb
inc
cmp
dec
xor
test
pop
jae
hlt
jnp
xor
sti
dec
add
xor
push
lret
lds
ja
int3
cmc
sar
or
in
aam
cwtl
fistps
sbb
pop
stos
daa
mov
enter
dec
add
sub
jge
sbb
stos
xor
inc
xchg
mov
mov
imul
xchg
pop
ret
mov
decl
jo
stos
pop
aas
mov
cmpsl
std
nop
in
addr16
dec
sarb
push
cmp
xor
push
inc
sahf
pop
mov
cmp
loopne
scas
mov
or
rcrl
inc
cmp
gs
push
push
scas
cld
push
cwtl
push
std
mov
pop
cmpsl
push
outsb
stos
adc
mov
fnstcw
cs
pop
add
cwtl
shl
notl
rorb
hlt
out
fsts
and
xchg
andl
out
in
pop
rcrl
daa
faddl
std
push
adc
adc
inc
add
aad
mov
jp
mov
dec
mov
sbb
push
into
arpl
jno
dec
mov
or
pop
out
sbb
mov
sub
daa
lret
lret
jno
int3
fisttpl
ret
push
cmp
clc
pushf
test
in
cltd
arpl
jle
dec
pop
aas
cmpsl
mov
out
mov
ret
int3
loop
rcl
add
jae
add
jg
movsb
sbb
int
inc
xchg
cltd
cmpsb
mov
fdivrl
out
mov
mov
leave
mov
and
xchg
xchg
test
push
add
inc
popa
push
jnp
add
sbb
aas
fldcw
xor
cmp
jo
inc
and
aas
push
fcompl
jp
fwait
int3
movsb
adc
adc
mov
cltd
sbb
mov
mov
jl
lea
mov
enter
loop
xchg
and
pop
shrl
jo
pop
lcall
cli
mov
push
aad
push
cmp
mov
inc
jne
and
sub
mov
pop
data16
hlt
jl
or
sahf
js
das
sub
sub
cmp
sub
bound
pop
test
adc
jo
sarb
bnd
jae
sub
sarb
adcl
in
nop
sar
xchg
mov
mov
enter
mov
jns
fadd
push
pop
nop
leave
orl
inc
mov
prefetcht0
sbb
insb
loopne
pop
pop
xchg
cwtl
push
adc
push
and
nop
iret
loop
aaa
out
pusha
xor
sbb
add
and
arpl
dec
push
sahf
shlb
mov
ljmp
push
fildl
jmp
lock
testb
mov
jle
inc
insl
popa
in
cmp
das
mov
or
sub
fsubr
jmp
jecxz
mov
sbb
sub
inc
daa
or
mov
xchg
std
cmc
inc
adc
sbb
xchg
push
push
mov
mov
adc
fwait
rcpps
jo
dec
dec
cs
jnp
adc
inc
or
test
add
sub
das
movsb
arpl
movsl
arpl
sar
popf
or
inc
inc
push
cmpsl
outsb
pop
call
ljmp
pop
mulb
add
shlb
aam
scas
and
lock
int
test
mov
fmul
pop
mov
and
lea
sub
scas
rcll
aas
loop
andl
ja
in
mov
insl
inc
mov
jp
cltd
pop
dec
jmp
in
cltd
push
add
add
push
out
loope
stos
mov
and
es
scas
aaa
shll
add
roll
call
push
call
popf
mov
pop
lea
pop
dec
sub
inc
fbstp
or
mov
dec
pop
nop
jno
push
mov
mov
adcb
jnp
shl
fadds
addr16
lret
je
xchg
dec
cmp
sub
cwtl
flds
push
inc
add
movsb
jle
outsl
aad
adc
test
adc
ljmp
test
mov
orb
movsb
mov
inc
ret
lock
cmp
pop
jg
or
or
into
stc
xor
xchg
aas
sbb
or
jecxz
mov
inc
inc
sahf
xor
pop
shl
lds
stos
push
cltd
fdivl
xchg
loope
xor
push
dec
pop
push
in
enter
and
repz
jb
fidivrl
jns
sbb
add
push
adc
jg
dec
jmp
ja
and
push
xor
jno
test
pusha
fs
lret
inc
jo
push
mov
or
jg
mov
cs
mov
fistpl
cs
and
or
loop
stc
lret
cld
mov
dec
inc
fldt
mov
mov
pop
shll
inc
mov
ds
mov
mov
ds
arpl
push
sub
js
out
icebp
dec
jp
es
fcoml
ja
pop
xchg
enter
addb
xchg
popa
dec
popf
sub
pusha
xor
xlat
clc
mov
sarl
insb
push
push
fwait
pop
iret
and
xchg
xchg
dec
repz
pushf
jge
cmpsb
sub
stos
sahf
inc
mov
fwait
push
jecxz
jnp
cld
push
cmp
aam
mov
xchg
hlt
ja
pop
ret
lea
xchg
dec
xor
lret
pop
lret
xlat
gs
shll
fwait
xchg
lods
sbb
les
js
xchg
cld
hlt
pop
add
jp
jl
test
cmc
push
push
xchg
mov
std
hlt
sub
aad
xorl
cmpsl
mov
in
mov
je
or
mov
cwtl
adc
adc
out
insb
into
jnp
mov
push
add
mov
mov
xlat
stos
mov
mov
add
adc
sub
sbb
add
sti
adc
and
out
movsl
std
mov
cmp
imul
iret
mov
cltd
fs
jecxz
adc
ja
adcb
sbb
adc
inc
lahf
stos
shl
pusha
mov
jp
out
int
into
dec
xor
mov
idivl
ficoml
ss
sbb
dec
int3
leave
mov
insl
and
mov
mov
mov
fnstcw
int
sarl
pop
jae
packuswb
pop
pop
inc
out
xor
xchg
cltd
add
insl
pop
faddl
pop
sub
inc
push
mov
add
sub
movsl
mov
ss
xlat
cmp
sbb
sbb
movsl
int3
push
addr16
dec
push
sbb
adc
mov
push
fcmovne
lcall
pop
clc
xor
mov
pop
loope
inc
mov
cli
xor
xchg
lock
push
dec
mov
push
mov
int3
jmp
mov
daa
xchg
mov
insb
jno
mov
loop
lret
out
mov
push
ja
xchg
shll
divl
adc
pop
dec
sub
leave
jp
dec
test
cltd
cmp
ljmp
cmc
loopne
lea
xlat
lods
pop
ljmp
in
fs
mov
int
xor
inc
cs
adcb
dec
cld
push
rorb
sbb
jns
jecxz
mov
xchg
dec
mov
js
xor
out
xchg
jecxz
gs
jg
mov
jno
cmc
push
out
cltd
fs
cmp
jnp
pusha
fstp
or
push
push
loop
push
push
mov
mov
imul
xchg
push
sub
les
and
xor
fwait
pop
mov
jo
jb
stc
insb
lret
cmc
pop
jg
scas
insb
mov
mov
jmp
add
mov
orb
cmpsl
pop
xchg
adc
stos
add
cmp
mov
xchg
loop
dec
aam
and
dec
mov
in
mov
cmp
jp
daa
cmpsb
clc
sub
fldenv
fdivrl
or
or
iret
mov
repnz
aas
je
pop
icebp
aad
add
int3
cmp
jbe
mov
or
push
jmp
dec
dec
fld
shlb
lods
pop
inc
push
cmp
enter
movsb
xchg
outsb
hlt
sarb
push
adc
sub
dec
xchg
dec
add
pop
int
push
cwtl
xchg
test
mov
popf
inc
nop
pop
mov
dec
push
dec
test
pop
int
xchg
dec
in
decl
add
dec
mov
stos
inc
adc
ss
push
mov
movsl
imul
add
jg
xchg
xor
fs
jnp
in
out
mov
jecxz
ss
cs
jo
adc
imul
int
adc
shlb
imul
fists
rorl
mov
das
dec
dec
dec
pop
add
mov
and
inc
mov
iret
xorb
fidivrl
movsl
sub
ds
pushf
leave
shll
repnz
cli
icebp
out
aaa
js
mov
push
pop
mov
xlat
stos
icebp
loopne
jne
mov
or
jl
xchg
arpl
push
mov
pop
movsl
notb
inc
sub
xchg
mov
jns
inc
int
push
sub
out
fcoml
dec
iret
or
xor
pop
sbb
pop
xchg
out
push
cmp
xchg
mov
mov
enter
jmp
icebp
ja
push
adc
outsl
adc
mov
mov
gs
jb
mov
popf
or
stos
adc
mov
jo
js
add
sbb
add
stos
push
jae
sub
add
add
pop
insb
in
sub
outsb
mov
or
and
movsb
nop
cmc
sbb
cmp
jl
ljmp
inc
fs
aaa
idivb
and
pop
push
testb
xchg
in
cmpsl
repz
sub
ljmp
push
push
adc
mov
in
enter
pop
and
in
sbb
cmp
lcall
xchg
sarl
int3
lahf
jb
daa
stc
xor
pop
mov
xor
pop
idiv
popf
popf
mov
scas
xchg
mov
adc
xchg
ret
aaa
icebp
into
cli
idivl
cmp
push
stc
loope
lcall
out
fbld
imull
xchg
das
push
sub
inc
test
test
mov
pop
adc
out
imul
faddl
cmp
jbe
nop
fwait
stc
pop
dec
sahf
adc
cwtl
pop
out
mov
push
loope
xchg
mov
jp
push
in
jbe
out
loopne
in
sbb
push
in
pop
add
push
int3
and
xor
add
adc
sbb
sub
cmp
dec
mov
jl
mov
jo
inc
mov
xor
add
adc
sbb
sub
cmp
dec
mov
jl
mov
jo
inc
mov
xor
add
or
sbb
fadd
cmp
dec
mov
xchg
nop
cwtl
pusha
shlb
pushf
push
int3
and
xor
add
loopne
pop
xchg
cmp
cmp
aam
xchg
jg
outsl
push
lcall
or
xchg
pop
ljmp
repz
push
push
lcall
add
adc
and
xor
int
repz
jp
push
lcall
adc
pop
lret
lret
ljmp
xchg
inc
mov
pop
rcrb
jmp
push
and
lock
shl
in
popa
js
pop
rcl
aas
out
subb
sar
daa
push
lret
or
pusha
inc
or
cmc
sbb
sbb
push
dec
add
and
cmp
mov
arpl
insl
mov
or
sbbl
or
or
jbe
imul
cmpsb
push
pop
sub
add
in
lret
xor
out
cmc
repz
or
push
dec
xchg
stos
mov
dec
push
pop
scas
jne
inc
mov
cld
push
nop
and
add
sbbl
jo
xchg
pop
repz
mov
ret
push
pushf
pushf
add
mov
cmpsb
jo
arpl
sbb
push
loop
repz
dec
xchg
sbb
jp
xchg
jo
push
mov
pop
stos
add
push
lret
mov
xor
inc
or
cmp
sub
pop
lea
jp
sub
lcall
insl
popf
mov
push
sahf
mov
imul
cmovae
and
mov
dec
lods
inc
sti
jg
js
pop
lahf
js
aas
neg
pop
repnz
pusha
fsts
fbstp
rolb
adc
and
xor
ret
sbb
or
cmp
sub
jp
push
lcall
add
adc
and
xor
ret
sbb
or
cmp
sub
jp
push
lcall
dec
das
jl
inc
lods
push
push
orb
adc
dec
sub
pop
cmp
and
roll
dec
popa
repnz
test
cld
dec
out
adc
and
js
and
jmp
sti
ss
xor
in
cmc
jnp
mov
int3
insb
add
mov
xor
in
fbld
into
pushf
stos
jb
cli
xorb
push
cmp
pop
xchg
xchg
xor
jecxz
or
aam
pop
ds
fisubl
adcb
sbb
mov
mov
clc
test
inc
pusha
out
testb
jl
aaa
cmp
arpl
dec
inc
mov
push
mov
mov
nop
hlt
xchg
xchg
sbb
sbb
inc
in
sbb
iret
shrl
and
andps
xchg
sub
push
jg
dec
adc
sub
mov
pop
sub
or
xchg
inc
int
out
sbb
push
imul
sub
sbb
scas
mov
cmp
enter
dec
stos
in
push
psrlq
pushf
sbb
push
lock
inc
je
push
aas
arpl
ss
in
and
cmc
push
sub
inc
std
lret
and
mov
jns
lds
loope
int
cli
xor
xchg
inc
jp
inc
mov
inc
fsubrs
xor
nop
push
xchg
cmp
sub
dec
test
inc
mov
dec
pop
and
lods
mov
pop
outsl
aaa
push
and
cmc
mov
xor
pop
jmp
stos
loop
das
adc
or
pop
sub
jno
push
mov
jmp
push
xchg
push
sbb
mov
rclb
insb
xchg
sbb
not
sub
mov
adc
fwait
repz
icebp
jmp
rorb
test
mov
stc
jb
push
add
pop
jne
inc
cwtl
jae
aad
mov
icebp
shll
rcrb
shll
les
and
pusha
aad
cmc
mov
dec
popa
out
test
jl
pusha
mov
imul
cmp
push
mov
jge
add
push
dec
sahf
das
sbb
dec
pop
in
xor
add
jecxz
fisttpll
enter
sahf
push
dec
jmp
xchg
jge
subl
inc
repz
ret
mov
push
or
addl
ds
add
cmp
ja
imul
mov
cltd
lock
fnsave
repz
fsubs
aas
jl
test
inc
ss
test
xchg
shl
push
pop
push
adc
repnz
leave
pop
fimuls
xchg
flds
and
cwtl
insl
mov
cmp
into
ja
int3
fbstp
inc
sbb
js
push
cltd
jbe
cmpsb
jae
add
out
pop
cld
fcmovu
or
xchg
cmp
push
inc
ret
in
aad
jecxz
mov
sbb
mov
dec
mov
gs
jmp
sub
popf
push
iret
leave
push
inc
cmpl
mov
or
xor
inc
insb
or
sti
sub
sub
push
or
fs
pushf
and
inc
cmp
mov
ja
jle
sbb
cli
push
fnstsw
fisubl
xor
cmp
mov
enter
and
repnz
inc
repz
inc
pop
cmpsb
lds
pop
sub
out
jne
add
insl
idiv
pop
or
jnp
jne
out
inc
fdivs
fwait
mov
pop
adc
stos
ficoml
jg
out
lret
add
inc
mov
inc
ja
std
ret
sbb
scas
leave
sbbb
xor
pushf
popa
scas
cs
ret
jmp
add
mov
push
add
xchg
outsl
lods
add
aas
lahf
clc
out
jne
and
mov
loope
stos
ss
aad
or
sti
mov
sahf
sti
fmull
loopne
fildll
and
cmc
js
test
pop
adc
cmc
stc
lea
jns
call
push
push
sbb
cld
lret
repnz
add
mov
outsb
cmp
mov
adc
inc
add
arpl
movsb
push
int3
rorb
xchg
sbb
xchg
rol
clc
test
adc
jmp
xor
lahf
push
adc
pop
cmp
pop
out
adc
popf
dec
loop
cmp
fbld
adc
jge
mov
outsl
push
out
mov
sahf
sbb
inc
xchg
dec
and
fcompl
test
mov
mov
jnp
inc
fwait
and
std
xchg
cmp
mov
and
mov
pop
call
cld
add
scas
pop
inc
in
into
lock
fwait
lcall
out
out
fiaddl
rclb
dec
jmp
insb
movsl
mov
clc
xor
push
mov
mov
cmp
movsl
dec
pushf
dec
in
outsb
out
enter
outsb
adc
cmp
int3
popf
inc
fisttpl
icebp
int
out
loop
bnd
or
cmpsb
fisubl
mov
mov
mov
adc
pop
xor
jecxz
and
fcmovbe
inc
inc
jns
or
sub
dec
ret
xchg
or
les
pusha
loop
jnp
rcrl
push
imul
ss
push
enter
xor
push
jae
cld
dec
cmpsl
popf
iret
mov
xor
sbb
lea
sarl
test
jg
jl
fisubrl
ret
sub
pop
lret
lods
bound
faddl
xorb
and
int
push
cld
push
std
icebp
loopne
movsl
dec
cmpsl
out
jp
into
lds
imul
xor
fcomp
xchg
xchg
outsl
mov
mov
inc
mov
cmp
inc
dec
and
into
xchg
or
sub
mov
sti
iret
inc
in
dec
jle
fidivs
dec
xchg
jnp
mov
mov
and
push
dec
push
fstpl
cmp
cs
pop
inc
mov
mov
std
cmp
lock
aad
out
xorb
jge
pop
cs
or
or
pop
dec
cmc
testl
shlb
jecxz
jl
cmc
xor
and
negb
test
sub
jge
inc
movsl
mov
stos
std
mov
inc
rcll
mov
add
push
mov
sti
mov
mov
jbe
movsl
sub
xchg
adc
add
sub
sbb
test
cmp
into
movsl
jae
sub
test
add
out
add
pop
scas
fs
adc
inc
aam
sub
dec
ja
ljmp
add
test
repz
push
shrb
add
loopne
psadbw
scas
cltd
adc
outsb
orb
cmp
push
popf
or
popa
cs
bound
repz
or
mov
cwtl
or
not
jp
and
jne
jno
adc
imulb
in
in
mov
movsb
mov
fldcw
popa
pushf
mov
lods
pop
or
pop
cmp
mov
push
in
hlt
icebp
ds
outsl
bound
mov
push
jmp
cmp
add
repnz
xchg
jo
adc
hlt
insl
mov
pop
xor
loop
fstpl
pop
sub
mov
push
xchg
mov
in
addr16
mov
mov
push
clc
les
stos
dec
adc
or
test
aad
dec
push
leave
push
cmp
or
fidivs
add
push
sbb
shl
sub
jbe
add
jno
leave
cmp
add
arpl
pop
sbb
pop
nopl
dec
pop
js
cmp
ja
pop
cmpsb
stos
sbbb
add
imul
std
cmpl
dec
mov
lahf
mov
push
jg
and
in
out
mov
neg
cmp
pop
dec
push
cmp
add
sbb
sbb
dec
rclb
pushf
call
and
jl
out
imul
jmp
cwtl
fists
xchg
add
ret
cmp
jb
into
mov
pushl
aaa
es
dec
or
roll
xchg
xor
push
and
pop
mov
clc
out
mov
mov
sbb
push
jge
or
cmpb
test
fsubs
xor
mov
add
push
push
mov
gs
xchg
lea
shrb
std
and
repz
sbb
shrb
mov
and
popa
mov
fisubrs
lods
jbe
cltd
in
leave
add
cmp
loopne
pop
repnz
mov
jo
lods
mov
or
testl
out
push
add
repnz
sub
cmp
movsl
outsb
xchg
inc
inc
addr16
out
ss
jae
and
jecxz
or
lods
not
push
add
nop
and
cmpsb
pusha
pop
mov
int3
sbb
and
jg
mov
cmpb
out
pop
insb
negb
push
adc
push
pop
aad
pop
mov
test
loope
into
call
sub
push
pop
and
fwait
dec
inc
insb
mov
and
push
int
adcb
fidivrl
inc
dec
mov
add
xor
jecxz
test
add
xchg
cmp
imul
std
mov
lahf
mov
mov
adc
jb
lahf
fistps
loope
push
jns
jl
pop
das
ret
push
ret
mov
fists
push
xor
sbb
ret
mov
bnd
xor
insb
mov
or
add
push
mov
dec
cld
dec
xor
xchg
and
jbe
mov
mov
xor
aad
cmovns
out
sub
loopne
mov
data16
loop
shlb
xchg
jg
jno
and
jno
ret
add
test
dec
push
lahf
iret
xor
mov
add
testl
inc
in
fdivp
mov
mov
addr16
ja
add
xchg
sbb
popa
mov
lock
jge
ret
fdivs
pop
xor
pop
mov
pop
leave
or
jmp
lcall
flds
mov
out
into
and
into
pop
rolb
lcall
mov
lea
stos
mov
popa
xor
mov
sub
into
xchg
dec
xor
jae
pop
test
add
cwtl
sbb
les
test
jle
inc
push
cmp
dec
dec
dec
mov
sahf
stc
push
mov
mov
fbld
or
inc
sub
in
sysexit
out
repnz
cmp
fcomps
mov
in
loopne
out
andl
push
cmc
inc
or
rclb
push
jmp
mov
or
xchg
test
mov
stos
pushf
fld
dec
dec
ss
fcoml
mov
cmp
sub
out
xchg
pop
xchg
push
inc
pop
repnz
test
pop
mov
cmp
jno
mov
idivb
mov
aaa
fwait
pop
rcl
dec
adc
push
mov
mov
cmc
shll
mov
std
jb
js
scas
sbb
bound
pop
jge
fnstcw
adc
add
dec
in
mov
pop
pop
xchg
incb
shrb
test
cmp
xchg
inc
and
mov
pusha
mov
cld
stos
push
rolb
loop
loop
fbld
arpl
cltd
in
in
bound
sbb
rcrl
xchg
jbe
pop
movl
cwtl
enter
push
icebp
mov
ret
adc
dec
inc
sti
aad
mov
rorb
orl
mov
test
dec
adc
cmp
mov
xchg
es
lahf
inc
fs
fbstp
push
cmp
cmpl
lahf
sub
addr16
mov
push
xchg
add
mov
or
cmpsl
jecxz
shl
inc
push
mov
cmp
pop
adc
mov
jmp
xor
or
enter
mov
sub
movsb
sbb
pop
mov
mov
stos
sti
cld
lret
or
and
dec
notb
pop
das
sub
cwtl
out
xor
les
inc
rolb
jecxz
mov
loopne
lret
flds
cmp
dec
jl
sub
out
nop
bound
outsb
lods
sub
pusha
jns
and
mov
xchg
adc
xlat
sub
in
dec
push
and
or
sbb
lcall
stc
int
mov
push
nop
jle
dec
stos
jno
mov
push
sbb
cmpl
push
pushf
jbe
sbbb
mov
mov
aad
daa
cmp
adc
cmpsb
add
sti
xchg
xor
add
popf
jae
add
int
out
rcl
xor
stos
cmpb
jecxz
add
jae
cmp
mov
push
push
lods
sub
pop
es
jecxz
dec
jo
dec
testl
stos
les
shl
sub
cli
int3
xor
popa
adc
xor
add
shl
pop
cmp
cltd
not
push
shrl
mov
and
mov
fmuls
xor
lret
shll
add
fistpl
arpl
push
clc
and
pop
in
lcall
mov
xor
xchg
or
push
aaa
rcrl
dec
outsl
mov
aas
in
pop
jmp
or
test
or
fsubs
push
sti
arpl
push
xor
fidivrl
data16
jp
xchg
sarb
daa
loopne
leave
jmp
imul
js
ss
push
push
jns
push
lock
mov
in
and
push
movsl
test
or
mov
into
jge
sub
and
mov
mov
mov
ljmp
sub
sub
aaa
ret
outsl
arpl
xchg
mov
xchg
mov
mov
imul
push
test
stos
add
lods
lock
roll
mov
sbb
popf
jne
enter
out
xchg
inc
or
je
iret
mov
fisttpl
out
push
lods
mov
pop
sbb
sub
data16
xchg
push
insl
push
inc
mov
neg
rolb
cmpsl
lds
xor
cmp
xchg
dec
int3
jno
push
popa
enter
fld
stc
lds
xchg
aam
cmp
hlt
out
or
bound
aam
pop
mov
xchg
scas
xor
add
cmp
dec
add
shld
inc
inc
mov
mov
inc
jle
and
jg
aas
pop
je
ljmp
inc
or
mov
push
repnz
fimuls
in
push
mov
sbb
mov
xor
add
xchg
rorl
or
ja
pop
push
test
lods
negb
sub
mov
jb
mov
fs
icebp
shrb
xor
mov
mov
fidivrs
xchg
sub
mov
arpl
sub
loope
dec
and
inc
xchg
or
sbb
inc
nop
cmp
jae
dec
mov
mov
test
cmp
ficoms
pop
addl
in
or
push
mov
cmpsb
fidivl
dec
fdecstp
lea
cmp
jne
adc
mov
repz
rcl
dec
mov
dec
movsb
ret
ret
jl
ret
or
sbb
jno
ds
imul
loop
test
subl
notl
rcr
sub
or
imul
mov
jns
dec
scas
mov
sub
cmp
leave
sub
ret
std
mov
cmpsb
call
lock
pop
cmp
roll
imul
push
mov
pushl
dec
sub
cmp
pusha
mov
fdivs
xchg
sub
dec
xlat
xchg
jne
inc
jnp
pop
test
fsubrl
outsl
pop
sbb
nop
sub
mov
in
and
sub
jb
inc
nop
js
mov
jnp
rol
xchg
pop
or
fstpt
mov
into
call
cmpsl
pop
jae
jae
xchg
fcomps
mov
arpl
mov
jl
jno
mov
xor
cltd
aaa
das
movsl
jge
adc
aad
mov
jae
and
push
mov
or
add
aad
mov
cmpsl
popf
stos
nop
fistl
adc
sub
cmp
push
fsubr
inc
cmc
addr16
lret
stos
mov
xor
mov
xchg
xchg
dec
mov
xchg
add
movsl
shrb
aaa
js
adc
scas
nop
jb
divl
or
fisubl
cmpsb
lcall
fcompl
add
fnsave
xlat
sbb
rolb
shlb
or
movsb
xchg
pop
jo
sbb
gs
pop
loop
add
mov
mov
addb
inc
call
cmp
or
icebp
stc
or
jge
pusha
ret
or
dec
fwait
psrlw
js
call
shlb
jle
sbb
and
lret
aad
popf
gs
int
push
loopne
push
sub
fcmovnb
aas
std
push
lods
dec
adc
inc
mov
add
jge
out
cmp
push
cmc
sub
mov
and
imul
xchg
mov
int3
mov
lret
pop
mov
xchg
jne
cmp
or
fisttpl
stos
mov
add
adc
stc
jb
cmpb
mov
in
shlb
in
stos
cmp
das
icebp
out
xchg
sub
mov
pop
aad
jns
test
cwtl
xor
cwtl
xchg
and
sub
cmp
dec
cmp
sahf
loope
pop
push
sbb
daa
xchg
xchg
js
inc
jb
mov
push
fstps
fwait
je
dec
pop
adc
mov
xchg
imul
outsb
push
xadd
out
imul
ret
fsub
inc
stc
push
lds
mov
inc
pop
mov
aas
aaa
int
je
jl
sahf
or
mov
add
stos
jle
or
push
icebp
cmp
xchg
mov
mov
cmp
xchg
inc
es
ljmp
test
shll
sti
inc
popa
rcl
or
movsb
cmp
mov
andb
idivb
jb
sbb
out
into
xor
stos
sbb
pusha
and
pop
loop
pop
xchg
pushf
cmp
push
icebp
arpl
dec
jecxz
mov
inc
inc
xchg
test
push
sbb
push
js
cld
jecxz
lds
cmp
cmp
cmc
in
mov
dec
mov
insb
pop
shlb
pop
aam
aas
push
mov
lcall
cmpsb
movsb
fstpl
inc
add
movsb
inc
neg
shrl
andl
dec
or
call
mov
scas
das
or
in
push
int3
jnp
pushf
cmp
mov
out
sub
cld
xor
sbb
dec
rcll
lods
sbb
jns
int3
loope
loop
xchg
sbbb
insl
sbb
outsb
ss
push
mov
lds
xchg
pop
int3
and
aas
mov
cltd
aam
iret
pop
in
ret
cmpsl
sub
iret
mov
leave
sbb
sahf
fbld
pusha
and
mov
scas
pop
jle
sbb
push
rdtsc
cmp
adc
stos
jne
cmp
cmc
cli
int3
xor
and
push
faddl
mov
movsl
inc
cltd
sbb
loopne
scas
xchg
cmc
insl
call
rolb
outsl
sbb
xlat
lea
and
cmp
lods
fucom
aad
xor
sub
incb
mov
mov
mov
call
scas
lods
mov
adc
sbb
adc
ss
or
jbe
mov
jle
xchg
xchg
sti
aas
shll
push
testl
call
xor
lret
icebp
jle
stc
cli
mov
js
cmpsb
mov
xor
icebp
jmp
xlat
adc
rcrl
push
int
popa
pop
ffree
je
and
adc
and
notb
out
xchg
test
cli
dec
and
incl
nop
popl
sub
mov
je
inc
ja
lods
js
push
pop
ja
mov
jae
lcall
dec
nop
push
dec
stos
pop
jbe
in
dec
gs
or
jno
jns
leave
data16
pop
std
inc
cmc
fiaddl
pushf
add
scas
and
ret
push
sub
or
daa
lods
pusha
inc
icebp
sti
orb
test
pop
rcrb
popa
push
aaa
dec
clc
or
mov
sub
leave
xlat
fdivrp
sar
jg
outsl
cmp
ljmp
mov
sbb
aas
xor
sub
outsl
xor
dec
jae
lcall
dec
dec
ret
mull
mov
inc
stc
or
sbb
push
inc
push
push
test
mov
outsb
icebp
les
push
mov
into
sbb
jmp
mov
lret
cld
gs
lods
sub
add
rcll
jmp
dec
pushf
xor
cmp
sbb
lcall
mov
in
or
mov
ljmp
leave
or
inc
insl
flds
pop
mov
sbb
sti
add
stos
daa
mov
dec
xor
bound
jnp
jge
cld
jno,pn
in
dec
jmp
popa
and
or
sub
add
in
mov
and
xchg
orb
pop
push
push
push
dec
lds
xchg
xchg
add
fisubrl
loop
or
push
mov
mov
and
outsl
clc
mov
stos
mov
add
mov
mov
orl
jbe
jb
jg
out
mulps
push
xor
mov
add
ffree
lcall
in
mov
mov
stos
add
adc
and
xor
ret
sbb
or
cmp
sub
jp
push
lcall
add
adc
and
xor
ret
sbb
or
cmp
sub
jp
push
lcall
add
pop
lret
xor
sbb
or
cmp
sub
jp
push
lcall
add
add
and
mov
ret
sbb
dec
cmp
pop
hlt
rcrb
mov
test
shl
aas
ret
lahf
sbb
negb
scas
jb
inc
push
lahf
and
xor
adc
adc
loop
repnz
ret
psrld
mov
dec
xchg
sub
jb
and
xor
add
repnz
ret
sbb
andb
fsubl
shlb
in
inc
mov
jge
xchg
das
repnz
mov
dec
sub
hlt
jns
mov
add
adc
xorl
outsb
mov
sbb
sbb
fisttps
or
ljmp
adc
cmp
jmp
and
adc
lods
adc
push
iret
and
pop
cmpsl
mov
mov
mov
inc
mov
popa
add
daa
sbb
pop
lcall
xchg
pop
or
pop
scas
adc
lahf
jno
pop
incb
out
repnz
and
jp
push
mov
aaa
jo
xchg
xor
add
adc
das
repnz
ret
adc
adcb
jns
lahf
push
xlat
and
xor
add
adc
scas
dec
pushf
xor
sbb
adc
idivl
or
sar
sti
notb
jle
outsl
mov
mov
outsb
lcall
and
xor
lret
cmp
aaa
clc
imul
fdivrl
pop
bnd
or
pop
bound
push
lahf
and
xor
add
adc
loop
repnz
ret
pop
mov
dec
xchg
pop
bound
push
lahf
and
xor
add
adc
loop
imul
dec
lods
xorb
idivb
adc
outsl
sub
shr
xor
sbb
mov
decl
es
xorl
mov
lret
push
or
pop
jnp
push
jns
jne
cwtl
enter
das
or
xor
sahf
pop
add
add
push
and
fwait
mov
out
push
fwait
jb
inc
mov
in
arpl
push
fstl
das
mov
repnz
adc
out
push
jno
clc
mov
das
bound
push
push
lcall
es
pop
fldcw
rcr
sub
repnz
enter
add
ret
mov
cmp
jl
mov
scas
fs
pusha
popa
sbb
popf
mov
pop
mov
cmpb
repz
sbb
lar
xchg
lcall
bound
fsts
mov
fwait
aaa
pop
out
inc
and
neg
jg
mov
push
mov
bound
and
adc
iret
jecxz
pop
push
ljmp
enter
xchg
inc
push
idivb
xor
nop
xor
scas
xchg
out
sub
in
mov
movsb
mov
pop
stos
mov
insl
repz
pushf
repz
hlt
push
mov
jno
lahf
xchg
mov
in
xchg
push
or
and
push
lock
in
mov
xchg
sbb
arpl
lock
movsb
xor
fcoms
jp
dec
pop
jge
inc
cmp
pop
push
mov
pop
out
push
sub
lret
jns
mov
xor
ja
mov
or
rsm
and
rcll
xchg
cltd
repnz
js
mov
add
lds
inc
adc
mov
push
divb
and
aad
cmc
lret
iret
sub
lds
mov
fisttpll
movsb
out
mov
add
out
dec
dec
addr16
mov
push
sbb
clc
sahf
data16
aas
in
repz
cmp
inc
xor
aaa
add
sub
mov
pop
push
pop
test
inc
mov
push
jp
adc
sbb
xchg
push
xchg
sqrtps
call
int
daa
or
out
les
mov
mov
ss
sub
fcmovbe
cs
dec
jae
jae
mov
mov
into
mov
rep
pop
pop
stc
dec
shlb
daa
fwait
pop
shl
cmpsb
mov
mov
imul
fwait
cmp
jge
aas
popa
pop
sbb
jecxz
or
pop
push
or
out
addr16
movsb
outsb
mov
test
xchg
mov
inc
ud1
vmread
js
add
into
or
add
out
mov
sub
push
pop
push
adc
push
cmp
mov
mov
aad
int3
je
inc
jo
mov
jbe
ret
popf
jl
int3
push
clc
cmp
mov
leave
mov
xchg
mov
xor
mov
movsb
repz
lret
stos
xor
aad
cs
push
iret
int3
cmp
xlat
push
mov
sarl
fidivs
cmp
fistl
lcall
lds
mov
fadds
mov
cmp
xchg
cltd
lea
mov
ds
lcall
pop
and
es
mov
data16
rclb
arpl
and
lock
sub
push
inc
movsl
rol
scas
xchg
sub
cli
xchg
sbb
out
jb,pt
pop
add
cmp
punpckhwd
jo
xchg
dec
dec
ret
mov
fwait
inc
mov
in
mov
dec
sahf
push
cmp
nop
cmp
inc
sub
push
xchg
out
clc
pop
pop
js
adc
insl
movsl
mov
pop
scas
jmp
push
adcb
inc
dec
fstps
cs
push
push
jl
js
add
mov
std
lock
mov
xchg
in
mov
std
xchg
cmpl
or
sbb
cmp
outsb
adc
xor
adc
mov
push
mov
adc
lea
mov
xchg
sbb
enter
ds
or
mov
imul
jmp
xchg
push
inc
lcall
cwtl
sysexit
pop
pop
fwait
in
sahf
push
test
test
push
or
or
xlat
rcl
lea
push
js
call
pop
call
push
dec
dec
mov
data16
cmp
sbbb
das
in
cld
dec
jbe
xlat
testb
movsb
test
mov
or
stc
mov
cli
mov
add
sti
dec
pop
enter
cli
push
add
mov
xchg
mov
jecxz
lret
mov
inc
bound
in
mov
push
dec
jl
pop
mov
je
mov
jl
ss
or
in
stos
xor
lds
imul
mov
mov
int3
jecxz
mov
push
stos
enter
data16
iret
and
lret
adc
test
sbb
outsl
add
push
jle
mov
mov
push
rcrl
sub
mov
inc
adc
mov
inc
add
pushw
ja
push
add
mov
mov
cmc
bound
jmp
test
sarb
sub
rcll
xchg
test
or
mov
divb
cs
int3
jle
or
insb
aad
mov
cltd
clc
out
push
lods
jmp
mov
outsb
in
xor
fsubr
inc
jo
cmc
fxch
push
mov
loopne
and
clc
ret
push
pop
fcmovnbe
xor
repz
inc
mov
mov
inc
xchg
iret
stos
mov
pop
adc
cwtl
testb
adc
stos
shlb
daa
pop
lock
mov
call
sub
pusha
rcrb
adc
pop
leave
mov
adc
mov
call
js
cld
sbb
adc
pop
int
fs
mov
and
fnstenv
mov
gs
orb
and
xchg
mov
sub
or
xchg
es
out
sub
mov
clc
and
in
mov
mov
cltd
adc
push
and
inc
xchg
enter
outsb
sub
fistpll
in
cmpsl
shl
test
mov
mov
movsl
aam
pop
lods
fcmovnb
mov
xchg
adc
dec
jmp
inc
fdivs
sbb
ds
popa
mov
ror
outsl
dec
outsb
aad
arpl
inc
hlt
pop
scas
hlt
sub
sbb
mov
out
fdivl
movl
adc
pop
mov
stc
mov
and
push
lcall
int3
in
jp
daa
pop
shrb
insl
lds
pop
pop
ret
rclb
lea
xchg
pop
mov
aam
leave
xor
addr16
sbbb
dec
and
pop
cmp
in
cmp
cmp
dec
pop
adc
repnz
add
xor
outsb
pop
iret
call
out
mov
pop
shll
inc
fadd
adc
fcmove
pop
adc
mov
inc
xlat
xchg
adcl
loop
adc
add
lcall
repz
clc
in
adc
push
adc
mov
cltd
shll
jl
sbb
sub
inc
scas
jge
movl
outsb
js
mov
pop
add
add
pop
or
pop
jns
shl
sub
lea
lods
mov
jno
mov
js
int3
loope
cmp
xchg
lods
push
je
lds
cmc
outsb
shrl
pop
dec
js
in
cltd
sbb
std
mov
cmp
pop
pop
pop
adc
and
jle
fidivrl
mov
or
push
push
roll
inc
mov
popf
out
or
stos
ss
test
or
lds
sub
notb
pop
dec
outsl
test
and
sbb
cmc
ret
dec
lock
lahf
push
xchg
dec
loope
stos
fwait
push
jnp
mov
xor
jge
pop
daa
out
sub
and
adc
ss
sub
jecxz
jmp
jae
jbe
mov
pushf
repz
int3
jmp
push
pop
cmpsb
icebp
out
mov
or
jmp
iret
add
pop
into
add
jb
popa
cmp
push
pushf
addl
cld
data16
cmp
mov
mov
sbb
dec
cld
mov
int
sbb
cwtl
and
add
mulb
sub
loop
loope
mov
inc
test
sub
mov
pop
mov
xchg
in
sbb
dec
pop
xchg
ficoms
in
jmp
movsb
sti
push
jne
jp
aaa
testb
andl
xchg
xorl
push
imul
int3
shrb
or
push
jbe
jecxz
mov
xor
mov
loop
mov
adc
orb
dec
and
or
mov
aaa
and
mov
call
push
or
sahf
imul
loope
sub
xchg
dec
push
mov
cs
fists
push
sarl
movl
cmc
std
out
pushf
pop
jg
mov
out
mov
cmpsb
movsb
jo
nop
cmpsb
sbb
jp
and
insl
cmp
loope
iret
cmp
push
xor
sub
push
sbb
jae
pop
das
rolb
or
push
outsb
and
mov
dec
inc
inc
cmpsb
adc
dec
repnz
jecxz
xchg
push
mov
jl
inc
popf
mov
dec
pop
and
adc
lret
push
mov
push
test
jne
out
push
dec
inc
push
sarl
mov
add
push
aaa
xchg
pop
push
mov
xor
scas
inc
mov
and
cmpb
lock
xor
hlt
lds
loope
push
cmp
in
mov
mov
pusha
orb
pop
andps
mov
adc
scas
sti
outsl
mov
xchg
pop
mov
sub
lret
nop
sbb
mov
das
pop
in
push
repz
push
xchg
pop
adc
inc
es
jmp
outsb
in
mov
call
rclb
aas
dec
and
xor
jl
lds
jecxz
sbb
insl
jecxz
jne
or
dec
xchg
sbb
xchg
loopnew
dec
jne
in
scas
outsb
std
and
mov
popa
jp
dec
and
test
push
imul
bound
mov
mov
jae
clc
adc
sub
push
jo
out
sbb
lds
mov
sub
mov
mov
fsubr
add
inc
sub
sbb
and
data16
sbb
data16
mov
jo
fdivs
nop
hlt
xor
sbbl
mov
movsb
xorb
and
jp
shr
or
mov
jp
int3
dec
sub
call
push
jo
xor
shl
mov
fwait
push
pop
aas
adc
jg
mov
je
stos
dec
cmpsl
test
sbb
pop
stos
push
xchg
jns
mov
inc
xor
push
jecxz
add
sub
fisttpl
xlat
sarb
ljmp
das
sub
lahf
pop
fdivp
pop
stos
movsb
not
incb
lea
loope
mov
es
jnp
jbe
stos
and
jg
cli
stos
pop
push
in
mov
adc
les
mov
out
inc
cmp
clc
push
lcall
dec
mov
ljmp
xchg
jb
push
popf
js
push
jle
fs
scas
insb
mov
aad
out
adc
dec
inc
mov
add
jmp
xor
cmp
or
out
lahf
xor
inc
adc
jb
dec
inc
shr
js
loop
ja
jbe
jnp
cs
sahf
iret
ljmp
daa
and
pop
call
xlat
add
dec
mov
jg
jg
inc
or
lds
pop
cmp
sub
insb
ret
cmpsl
inc
adc
rorl
xor
pop
mov
inc
push
iret
enter
mov
mov
inc
mov
aaa
in
imul
fsub
add
pop
dec
or
insb
cwtl
push
jmp
add
sbb
mov
int
add
insb
out
lahf
inc
lods
jno
push
or
js
stos
les
ret
lcall
aad
pop
pop
es
mov
bound
sub
insl
fbld
lods
push
popa
adc
push
popa
inc
fucomip
inc
and
xor
in
cwtl
sub
pushf
fdivrl
mov
cmp
dec
insl
aad
cmc
dec
mov
jle
in
les
adc
sub
adc
imul
push
add
inc
sahf
jo
jnp
ljmp
std
daa
int3
and
xor
ret
je
es
in
mov
outsb
test
sub
int3
push
jo
and
clc
ret
fcompl
lock
pop
out
add
insb
jmp
mov
xchg
int3
sub
divb
push
sub
cmp
pop
fs
pop
pop
add
cmpsb
int
out
add
and
dec
cmp
dec
inc
jb
loope
mov
fidivl
xchg
enter
and
mov
push
sarb
mov
arpl
ljmp
mov
push
call
test
mov
dec
cmp
pop
or
movsb
adc
add
test
addr16
mov
pop
or
adc
cmp
mov
pusha
xchg
outsl
adc
push
push
leave
sub
mov
test
sti
mull
cmc
mov
push
or
call
jle
loopne
adc
lods
fidivrl
pop
cmp
bound
cltd
xlat
mov
lds
xorl
sbb
dec
icebp
call
mov
cmc
push
aaa
mov
data16
sbb
divl
sub
lcall
add
or
sti
sar
sub
aaa
sbb
sbb
mov
ret
pushf
inc
call
jb
mov
stos
mov
rcll
in
sbb
inc
jge
mov
fbld
shl
adc
mov
dec
xchg
pusha
repz
push
inc
mov
mov
fimuls
sub
mov
shrb
dec
push
xchg
cmp
adc
lea
jne
jg
ljmp
or
fucomi
andl
pop
xchg
jne
rcll
je
int3
xor
stos
mov
lcall
cltd
nop
jmp
mov
test
mov
outsb
sti
xchg
push
cmpsb
adc
stc
jmp
jl
mov
pop
xor
sbb
dec
shl
int
mov
inc
adc
movsb
loopne
loope
sub
inc
jne
fcmovb
jbe
ret
dec
sub
test
mov
addl
aaa
in
push
incl
or
test
subl
rclb
in
cmp
sub
sub
mov
adc
sbb
or
mov
outsb
xchg
outsl
dec
sbb
fcompl
cld
out
dec
xchg
jle
cmc
mov
std
test
fisubs
nop
push
ficompl
sbb
mov
push
leave
push
pop
fstpt
fstps
add
popa
pop
mov
stos
push
push
stc
inc
pop
call
jmp
jl
popf
pop
in
mov
int3
addr16
mov
or
out
div
loopne
sub
adc
and
js
repz
aam
mov
jecxz
mov
adc
push
adc
inc
add
cwtl
es
adc
lret
in
leave
inc
push
and
ss
js
pop
repz
xchg
out
cmpsl
dec
mov
stos
repnz
push
in
stc
sahf
mov
xchg
ret
mov
xor
or
and
sti
cld
jne
xchg
das
lds
fidivl
iret
cmpsl
iret
fsqrt
pop
test
pushf
dec
xchg
mov
rorb
out
push
mov
pop
push
int3
lods
mov
sub
enter
pop
lock
sti
clc
xchg
ret
call
pop
or
sbb
adc
lock
xor
xchg
mov
leave
and
inc
mov
in
jl
push
aaa
push
pusha
dec
xor
ret
rol
mov
lds
outsl
mov
inc
test
mov
mov
cli
mov
xor
int
xchg
and
adc
ret
jns
pushf
push
shll
data16
test
add
pcmpgtw
dec
js
add
int3
mov
and
xlat
inc
pop
mov
inc
add
pop
add
arpl
insb
cld
and
add
pop
in
stc
jns
and
fildl
jbe
bound
pop
mov
imul
mov
fidivl
pop
out
xor
mov
repz
adc
pop
icebp
insl
jno
icebp
and
push
scas
mov
xchg
jle
test
cmp
mov
repz
cwtl
mov
sub
fs
xlat
pop
pop
pop
loopne
mov
sbb
dec
xchg
in
movlps
sbb
lahf
fmuls
pushf
inc
push
test
lahf
mov
add
cli
mov
cld
push
in
cltd
dec
mov
xchg
xor
mov
dec
inc
xchg
roll
or
movsl
pop
out
xchg
jnp
shrl
jle
xchg
movsl
pop
adc
andb
and
dec
jle
sbb
hlt
je
test
jo
adc
movsl
or
dec
imul
push
xor
daa
out
sbb
cmp
pop
frstor
push
xchg
jp
or
test
jns
lock
mov
mov
sbb
and
mov
inc
mov
dec
and
jecxz
lds
jl
inc
mov
inc
mov
xchg
mov
lret
lea
or
aad
popf
add
or
fstps
xchg
or
push
cld
or
ja
out
fimuls
adc
sub
push
mov
pop
jae
movb
xchg
cmpsl
nop
mov
push
test
pusha
and
ret
inc
aad
dec
or
loope
xlat
inc
ljmp
xchg
scas
rcll
dec
cmpb
jecxz
sub
pop
adc
bound
or
jmp
or
fstp
scas
mov
repnz
rorl
mov
xchg
shl
outsl
lcall
sbb
jo
xchg
repnz
inc
mov
cld
fiaddl
or
testb
popl
and
dec
pop
sahf
fildl
and
push
fsubrs
and
add
in
or
insb
jne
out
mov
rclb
sbb
push
or
sub
aas
mov
icebp
fisttps
jns
aaa
fadds
push
mov
ffree
push
in
gs
push
ror
cltd
test
icebp
shrl
or
jl
push
inc
gs
pop
mov
cmc
stc
pop
cmp
or
std
inc
mov
sbb
push
lds
inc
push
or
cs
mov
pusha
dec
nop
fadds
scas
out
mov
mov
pop
pop
xor
lea
leave
mov
popa
push
out
jecxz
dec
adc
mov
ss
ret
push
les
out
dec
sbb
fs
fistps
add
xchg
mov
push
cltd
ds
mov
dec
out
lods
jno
add
out
or
sbb
sub
sbb
mov
out
lret
mov
pop
add
jmp
das
flds
lods
sbb
int3
aam
stc
das
das
and
mov
push
cmp
out
and
subl
cwtl
fbstp
xchg
or
xor
mov
push
loopne
pop
dec
xchg
addr16
mov
pop
adc
daa
lea
lds
jmp
sub
push
mov
xchg
ljmp
out
loop
adc
out
add
out
sub
push
xchg
leave
icebp
adc
add
stos
fxtract
nop
sbb
sub
jae
insb
pop
sbb
aad
daa
adc
mov
popl
push
in
dec
leave
dec
icebp
cmp
xchg
cwtl
inc
sbb
fidivs
and
mov
notl
xchg
pop
jmp
shlb
loope
jg
popa
es
jb
rclb
jns
sub
pop
out
std
lods
jbe
shlb
push
loop
xchg
adc
push
sbb
jp,pn
lods
cs
test
push
mov
aad
imul
fidivl
ljmp
and
decb
pop
push
lods
daa
and
sbb
xor
push
call
and
lret
and
hlt
dec
mov
xchg
xor
popa
jle
in
pop
and
adc
repnz
jmp
adc
xor
cld
sbb
dec
jmp
popf
add
mov
mov
xchg
mov
loop
js
mov
scas
stos
xor
xchg
ljmp
stos
clc
icebp
in
mov
or
mov
pop
sti
jno
push
sub
jbe
enter
dec
into
sbb
jae
fidivs
mov
loop
pop
test
mov
inc
aam
outsb
gs
repz
jle
int
cmpsb
lods
icebp
hlt
mov
pop
dec
cltd
cli
loope
pop
loop
lret
jmp
adc
xorb
xchg
ja
mov
roll
lds
ficoms
mov
jb
inc
adc
add
jg
movsl
push
je
or
jle
or
mov
outsb
mov
popf
scas
dec
nop
in
lret
xor
pop
ret
sub
and
mov
xchg
xlat
sub
shll
xchg
ficoml
and
lahf
test
fisttps
into
call
pop
mov
in
jne
ss
xlat
int3
pop
outsl
mov
test
jae
xor
int
je
out
add
xchg
pop
jl
jle
sub
scas
test
nop
rcrb
fcomp
ss
pop
lcall
xor
cmp
nop
aas
imul
jg
dec
xchg
pop
bound
push
lahf
and
xor
add
adc
loop
repnz
ret
pop
mov
dec
xchg
pop
bound
push
lahf
and
xor
add
adc
loop
bnd
ja
pop
mov
dec
xchg
pop
bound
mov
and
xor
add
adc
jecxz
repz
ret
psrld
mov
iret
xchg
pop
bound
adc
push
addr16
and
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jo
pusha
movsl
push
xchg
inc
test
mov
gs
loopne
rclb
mov
inc
jo
pusha
movsl
push
xchg
inc
test
cmc
and
adc
add
lock
rolb
push
addb
pusha
movsl
push
xchg
inc
test
cmc
and
adc
add
lock
jns
gs
add
fidivs
out
inc
cmp
xor
xor
and
sti
xor
cmp
adc
mov
sbb
mov
int
sbb
test
mov
inc
pop
adc
mov
xchg
push
jle
mov
enter
xor
shr
inc
lock
mov
das
adc
push
cmc
stos
inc
inc
xor
xchg
rcll
cmp
xchg
lock
lock
out
dec
es
andb
pop
cmp
js
cmc
sub
adc
add
shr
ss
push
xchg
adc
pop
xchg
mov
out
push
mov
lret
sub
test
nop
inc
call
movsl
push
xchg
inc
test
cmc
and
adc
add
lock
rolb
push
addb
fmuls
jbe
shll
movsb
jne
inc
mov
pop
in
mov
lods
imul
leave
sbb
xlat
aam
jae
adc
add
dec
lret
adc
loop
xchg
inc
test
sbb
or
and
sarl
loope
icebp
xor
add
lock
rolb
push
addb
pusha
movsl
push
xchg
inc
test
cmc
and
adc
add
lock
rolb
push
addb
lds
ljmp
mov
inc
dec
xchg
inc
cmp
aaa
push
movsb
sbb
loop
out
pop
mov
cltd
mov
jnp
add
ja
jne
outsb
add
addb
mov
push
sub
push
ds
std
pop
pusha
jnp
and
or
in
sahf
mov
inc
push
sub
outsl
insb
sub
adc
fs
imul
dec
inc
inc
cwtl
das
test
imul
stc
mov
jnp
stc
mov
adc
dec
sbb
movsl
call
iret
mov
sub
or
xor
les
sbb
lods
mov
test
xor
adc
aas
mov
xor
jge
push
mov
cmpsl
ljmp
push
lret
insb
cltd
jp
push
push
sbbl
andb
pop
in
aam
je
call
rcrb
pop
mov
xlat
push
daa
adc
inc
mov
test
insl
ret
dec
inc
rcll
pop
mov
push
xchg
ss
test
lods
cld
rol
iret
xor
loopne
add
sahf
and
loope
cmp
call
cmp
enter
or
in
jp
and
in
xlat
mull
pop
or
pop
jmp
nop
shrb
cli
notl
mov
fldt
outsl
fbstp
mov
xlat
inc
mov
xchg
add
popa
cmpsl
xchg
sbb
out
test
mov
pusha
pop
cs
addr16
cmp
jle
icebp
nop
xchg
ret
dec
mov
dec
jecxz
les
mov
push
out
cmp
inc
dec
adc
fists
stc
pop
or
dec
dec
or
mov
arpl
jae
jecxz
adc
sub
inc
cwtl
xchg
xchg
stos
sub
aam
out
lret
nopl
push
cmpsl
jmp
lock
lcall
pop
cmp
stos
push
jo
and
pop
jne
fisttpl
mov
jp
insb
add
push
pop
popa
rcrl
adc
xlat
outsb
inc
adc
jg
in
loopne
pop
mov
push
jecxz
loope
lret
mov
push
and
add
inc
cld
ficoml
dec
movsb
add
adc
add
fcompl
inc
fadds
mov
sub
xchg
mov
out
cmp
fwait
dec
add
cmpsb
add
shl
nop
jns
fisubl
mov
pop
cmpsb
and
mov
mov
repz
adc
xchg
pushf
mov
fistpl
push
jge
out
inc
lret
push
es
es
les
aam
push
cwtl
pop
enter
pminub
push
into
mov
jle
sub
insb
loope
cmpsb
inc
add
pop
inc
shl
inc
dec
adc
inc
jb
cmp
cmp
popa
int3
mov
dec
mov
mov
cmpb
cmpl
daa
test
pop
jns
inc
stc
adc
cmp
mov
dec
inc
jae
xchg
out
shll
sbb
pusha
cmp
cld
aas
fwait
sub
and
repnz
jb
movsl
sub
arpl
leave
psllw
add
test
clc
sbb
jns
test
dec
test
add
call
stos
int3
mov
push
das
adc
les
mov
sbb
jmp
or
fcmovb
ret
push
or
jp
stos
xchg
or
add
hlt
vrcpss
or
or
sahf
sub
mov
cs
jne
fstpl
sbbb
addr16
inc
xlat
cld
bound
cmp
out
lock
inc
addr16
adc
push
mov
mov
insb
xorb
xchg
jp
subb
mov
ljmp
ficomps
int3
lods
push
adc
mov
pop
es
mov
das
sbb
cmc
mov
notl
test
jp
call
push
das
aam
xor
mulb
lcall
je
ret
add
adc
mov
pusha
out
insb
in
loopne
and
dec
pop
movsb
mov
add
in
fbstp
loop
out
test
outsl
pop
fldl
pop
outsl
daa
pushf
sbb
adc
fsubrs
mov
ja
popa
cmp
and
mov
test
sti
nop
pop
out
dec
pop
jl
movsl
dec
clc
scas
cltd
pop
pop
testb
lret
add
push
xchg
mov
in
mov
rcr
ja
dec
cs
fadds
cmp
mov
lgs
mov
faddl
sub
das
dec
fcompl
sbb
push
mov
push
mov
ret
xor
sub
in
pop
shrb
lds
inc
rcr
add
imul
call
xchg
inc
loop
inc
adc
cmp
cltd
push
cwtl
fistps
add
pop
movsb
pop
js
lea
mov
adc
mov
or
lods
aaa
outsb
or
push
cmp
mov
repz
mov
inc
fcompl
nop
or
inc
push
shll
test
cmp
xor
push
xchg
lret
js
outsb
adcl
sahf
mov
arpl
adc
std
xchg
out
xlat
ja
inc
or
mov
add
test
sbbb
data16
aam
adc
mov
and
and
xchg
cmp
and
sarb
xchg
fcomps
ss
stos
out
daa
lods
cmp
cmp
shll
xor
pushf
adc
lds
mov
int
mov
cmpl
cmpsb
fnstenv
pop
xlat
cmp
pop
imul
cmpsl
or
popf
pushf
push
inc
jp
mov
jle
faddl
insl
idiv
xchg
fiaddl
lock
mov
into
ds
sahf
mov
xor
and
add
sbb
push
bound
sbb
mov
les
cmp
addb
pop
dec
adc
mov
jmp
cmp
and
add
stos
nop
sbb
das
mov
push
repnz
enter
xchg
lret
dec
mov
sbb
sbb
xchg
ret
bound
sub
xlat
push
int3
push
add
inc
cmpl
dec
xchg
mov
ss
outsb
stos
cmp
testb
xchg
inc
mov
jecxz
pop
jp
incb
inc
cmpsl
adc
sub
mov
daa
pop
inc
push
sbb
gs
push
cmp
mov
xchg
sub
movl
push
sub
scas
cmc
jmp
add
outsl
std
inc
pusha
lcall
in
pushw
sub
mul
xor
jle
cmc
pop
push
or
jp
scas
mov
faddl
repnz
mov
jle
nop
mov
cmp
sbb
xor
push
fbstp
leave
rolb
xlat
push
sbbb
out
out
jns
fcmovnb
fistl
cli
add
sbb
test
jl
push
jge
out
fwait
push
imul
div
add
xchg
mov
faddl
pop
mov
push
pop
sub
ja
or
fisubrs
mov
sub
incb
pop
mov
xchg
stos
add
jae
mov
mov
insw
push
xor
inc
push
fcoms
jb
xor
lock
add
fld
ja
lods
push
lock
sbb
movsb
ret
lods
pop
mov
in
les
jae
ret
or
int3
lods
and
add
inc
push
xchg
hlt
stos
mov
lahf
popf
lea
xchg
xchg
push
xchg
cltd
jno
mov
fistpll
iret
and
js
mov
popa
out
sbb
xor
jb
pop
xchg
sbb
dec
loopne
sub
mov
inc
stos
loop
xlat
dec
enter
pushl
pop
fldenv
stos
call
loop
inc
lds
test
les
lcall
mov
jecxz
dec
jbe
pop
leave
xchg
adcb
pusha
leave
cmpsl
add
fiadds
mov
dec
cmpsl
push
jecxz
jae
stos
fnstcw
xchg
mov
and
jl
negl
rcl
mov
ret
add
fs
pop
add
hlt
mov
dec
lds
or
outsl
dec
push
pop
cli
xchg
ror
pop
lods
pop
mov
fcmovbe
fsts
frstor
aad
filds
movsl
in
add
jb
pop
lret
mov
fs
test
test
jbe
add
stc
xchg
or
out
jnp
popa
pop
aad
movsl
add
ss
jle
mov
movsb
adc
cmp
insl
jns
adcb
outsl
jb
xchg
fstps
hlt
or
push
pop
fldt
nop
std
fmuls
lahf
icebp
xor
pop
pop
xchg
mov
jmp
pop
js
and
and
loop
mov
bound
cmp
sti
sbbl
sbb
adc
add
pop
mov
scas
into
add
sub
push
add
push
jbe
les
roll
loopne
mov
popf
or
sub
inc
push
mov
add
mov
lock
inc
xchg
sbb
pop
out
icebp
rcrl
jne
inc
scas
hlt
push
jle
ss
jno
cmc
sar
leave
movsb
lret
sub
dec
jl
imul
leave
push
dec
dec
pop
pop
ret
sbb
xor
and
sbb
add
mov
out
loopne
inc
xchg
and
fidivrs
lcall
outsl
icebp
lods
insb
fcmovb
sub
xor
and
test
hlt
adc
or
int3
loopne
pop
sar
sub
jecxz
mov
xchg
popa
sub
ja
pop
mov
inc
leave
lods
push
mov
inc
lcall
mov
rcll
mov
dec
add
cwtl
std
int3
lcall
add
xorl
mov
repnz
fxch
ljmp
popa
jno
jp
jns
sbb
push
shlb
je
out
ret
iret
add
aam
xlat
ss
sbb
insl
cmp
int
xor
int3
pop
jge
scas
add
ja
xchg
leave
arpl
test
mov
popa
cltd
jnp
popf
idivb
mov
aad
pop
rolb
mov
test
orb
push
lahf
xor
arpl
adc
clc
cmpsb
int3
gs
cmp
xchg
ja
pop
lds
adc
lret
push
push
mov
lock
sub
and
xchg
inc
cld
xor
mov
xorl
insb
cmpsb
dec
rcrb
les
jg
lret
out
push
fwait
mov
inc
js
mov
dec
jbe
and
sbb
or
dec
scas
and
out
dec
mov
sub
jnp
bound
nopl
out
repz
and
fcmovnb
jne
daa
sbb
push
js
add
mov
loop
mov
icebp
push
les
fmull
mov
or
or
scas
stos
test
jp
dec
mulb
mov
pop
pop
lcall
iret
repnz
adc
aas
enter
pushf
inc
xchg
cmpb
imul
mov
jmp
insl
testl
cmpsl
repnz
and
xor
xchg
mov
mov
add
insl
leave
lret
shll
pop
test
cmp
nop
xchg
icebp
mov
add
or
insl
cmpsl
mov
jno
add
leave
test
aaa
jecxz
dec
and
in
fucom
xchg
repnz
inc
jb
sbb
fwait
mov
cmp
jmp
dec
mov
les
xchg
adcb
mov
sbb
mov
mov
sahf
cltd
ficoms
jge
xchg
add
lea
in
xor
or
mov
aaa
sahf
xor
sbb
outsl
push
arpl
fwait
pop
adcb
je
inc
sahf
mov
pop
icebp
dec
dec
pop
pop
ret
rclb
mov
mov
cmovbe
or
dec
fadd
addr16
js
testl
mov
cwtl
mov
and
into
jge
pop
stos
push
xor
out
pushf
imul
jg
enter
setno
dec
pop
mov
ret
out
jno
lret
repz
lret
dec
fwait
arpl
addr16
fdiv
out
jl
sbb
outsb
jle
insl
data16
xchg
sub
enter
sub
mov
and
aad
mov
mov
jmp
xor
test
cmpsb
pop
sub
lahf
mov
test
sub
sub
leave
sbb
repz
scas
loopne
insb
mov
jle
insl
mov
aam
dec
clc
fs
lret
push
rcl
xor
mov
mov
and
xor
out
mov
jns
jmp
lods
inc
sbb
pop
sub
imul
insb
push
mov
and
pusha
sub
test
leave
xorb
push
hlt
jne
gs
lahf
outsb
add
add
jne
push
adc
fdivl
push
mov
push
ds
aad
lea
jmp
cmp
inc
mov
mov
test
push
out
sbb
repnz
xor
push
and
jmp
lea
dec
mov
test
pop
adc
int3
push
and
xchg
pop
mov
and
aaa
xchg
push
cmp
cld
fisubrl
addr16
sub
inc
adc
imul
or
fisubl
mov
pop
fwait
mov
mov
adc
or
inc
cmp
fcomp
jne
sahf
int
jnp
inc
mov
xchg
iret
lahf
outsb
jne
vmovaps
icebp
xlat
dec
mov
mov
lea
idiv
out
jns
jl
jg
mov
aaa
and
js
addl
nop
imul
sub
push
push
push
or
inc
sahf
sahf
inc
xorb
test
push
xor
push
stos
push
add
leave
iret
ficoms
cmp
outsb
cli
push
jecxz
or
int
lret
jae
je
mov
pop
xorl
xchg
fistl
jns
fndisi(8087
nop
pusha
scas
cmp
add
cmp
xchg
pushf
clc
add
pushf
lds
inc
shrl
sahf
mov
xchg
mov
push
pop
fdivrp
inc
jmp
jg
std
loope
dec
fldt
in
test
rcr
mov
pop
xor
test
xor
adc
adc
nop
cmc
aad
cmpsb
xor
dec
push
rorl
int3
gs
sti
mov
pop
pand
ds
and
lret
push
sarb
xor
sbb
lret
mov
in
test
das
scas
mov
mov
pop
and
fcomps
mov
pop
fisubl
ret
mov
add
cli
inc
imul
cs
xor
mov
lds
push
out
mov
cmp
mov
das
add
mov
and
mov
jo
fsubrl
xor
inc
xchg
mov
adc
jne
mov
xchg
fdivs
push
loop
adc
or
dec
js
mov
stos
pushf
filds
and
pop
mov
push
rorb
movsl
popa
cli
xor
adc
fwait
xlat
mov
popa
fistps
mov
mov
mov
add
iret
sub
mov
imul
xor
add
test
mov
pop
dec
push
aas
insb
les
test
add
mov
stc
jmp
xor
and
aas
rcll
inc
mov
or
mov
sub
mov
pop
out
addl
xor
xchg
repz
rcll
and
cmc
lds
xor
das
jno
fsts
adc
rolb
dec
xor
jecxz
pop
ds
fs
stos
cmp
mov
mov
sbb
cmpsb
sbb
push
push
and
sub
cltd
jmp
std
and
xor
xchg
sub
lcall
pushf
and
push
out
loope,pn
push
and
jmp
pop
mov
and
out
and
xor
mov
popl
xchg
in
jg
cs
gs
mov
adc
clc
or
outsl
cltd
xor
ret
adcl
imul
psrlw
jns
sbb
dec
pop
adc
jae,pt
sbb
jns
push
pop
cmp
sub
mov
xchg
pop
mov
dec
pusha
in
push
inc
rclb
cs
aam
push
aaa
add
mov
push
imul
fnsave
je
dec
into
gs
add
inc
mov
movsb
in
call
pop
clc
hlt
movsb
mov
int3
icebp
xchg
int
jns
les
ret
rorl
sub
roll
or
mov
pop
adc
into
cmp
mov
push
mov
dec
and
js
lcall
dec
hlt
mov
call
mov
push
lret
imul
in
test
sub
ficomps
xor
enter
sub
xor
movsb
push
mov
adc
out
pop
xlat
push
lret
shll
stos
sub
fildll
pop
add
xchg
jo
adc
add
scas
dec
insl
jne
mov
mov
call
inc
or
pushl
ret
xchg
mov
mov
pop
jg
sbb
adc
out
push
push
jns
xchg
xor
ljmp
sti
push
and
fdivrs
out
add
pop
push
inc
push
div
dec
mov
mov
push
int3
pushf
orb
add
add
inc
adc
mov
scas
inc
clc
cmp
xor
lcall
mov
jle
or
cmc
aaa
daa
adc
dec
add
pop
in
mov
push
or
cltd
sbb
xlat
cwtl
rcrb
or
jg
test
xor
fs
jno
lret
adc
cwtl
in
loopne
sbb
push
cwtl
mov
sahf
outsl
bound
out
inc
lfs
icebp
jb
inc
pop
xchg
inc
fs
gs
sbb
and
pop
insb
pop
jo
pop
ficompl
icebp
shlb
cmpsb
cs
insl
xor
push
in
cld
loop
outsl
sahf
in
into
mov
repnz
movsl
lret
psadbw
xchg
stc
loope
call
insl
jg
loopne
and
sub
in
add
scas
dec
outsb
fst
mov
fisubl
pop
jnp
push
mov
test
xchg
cli
cs
pop
push
jecxz
mov
das
xor
std
aaa
push
cmp
or
jae
test
or
out
inc
mov
and
in
repnz
mov
mov
in
loopne
add
adc
cmpsb
pop
sti
and
lds
cmc
dec
add
and
sub
xchg
call
arpl
push
lcall
sbb
push
pop
mov
mov
bound
icebp
inc
push
aam
xchg
jl
stos
jns
loopne
roll
ret
rolw
loopne
mov
add
push
add
cmp
mov
out
gs
outsl
jle
mov
sub
inc
fwait
cmp
and
sbb
pop
arpl
fneni(8087
inc
cmpsl
lds
mov
add
fstps
ficomps
mov
adc
jl
sbb
xchg
aas
add
jmp
jge
inc
mov
sbb
ret
arpl
push
and
adc
adc
or
mov
or
and
aad
stos
sub
int3
lds
mov
dec
lds
cld
add
and
inc
arpl
sbb
stos
test
lret
fbld
pop
lcall
lret
jb
mov
xchg
dec
mov
lahf
popa
leave
jae
sbb
mov
push
sub
lahf
push
arpl
clc
push
pop
loopne
fimull
sbb
pushf
outsb
loope
cld
push
clc
out
sub
mov
lahf
in
and
fistl
ds
sbb
pop
inc
add
dec
not
jmp
ss
pop
and
cmp
lahf
movsl
in
adc
fsts
pop
fs
sub
jle
cmp
cld
jmp
imul
pop
bound
lea
shrl
imull
shrl
xlat
sbb
sbb
into
push
cmpsl
and
lahf
hlt
add
icebp
jb
arpl
fdivrl
jo
mov
dec
test
test
pushf
adc
sbb
lods
ja
and
and
fdiv
mov
pop
inc
lahf
add
push
lods
cs
in
xor
push
int3
call
and
mov
pop
inc
mov
enter
jecxz
cmpsl
dec
cltd
pop
popf
scas
mov
mov
or
fdivl
mov
js
jecxz
fmuls
cmp
sbb
sbb
and
pop
sahf
and
lcall
mov
stc
or
jns
dec
pop
push
mov
stos
push
outsl
int3
xchg
std
cmpsl
iret
aaa
jecxz
lds
xor
lds
xchg
lock
test
add
jl
loop
imul
jns
pop
fiaddl
lods
popa
cld
and
mov
mov
or
adc
dec
fwait
cmp
mov
loopne
xlat
loopne
leave
shl
mov
push
jl
cmp
scas
addr16
lret
mov
push
push
or
mov
push
sbb
pusha
ljmp
pop
push
adc
out
inc
test
cmc
and
adc
add
lock
rolb
push
addb
pusha
movsl
push
xchg
inc
test
cmc
and
adc
add
lock
rolb
push
addb
pusha
movsl
push
xchg
inc
test
cmc
and
adc
add
lock
rolb
push
addb
pusha
movsl
push
xchg
inc
xorl
push
add
lock
jp
shlb
sub
xchg
icebp
fbld
nop
xchg
in
les
mov
outsb
insl
gs
inc
wrmsr
pop
enter
add
inc
mov
movsl
scas
xchg
mov
or
inc
bndstx
and
push
and
dec
out
xchg
test
mov
jne
inc
add
aaa
and
inc
pop
addr16
popa
mov
xchg
pop
pushf
push
inc
inc
mov
cmpsl
lcall
jecxz
daa
ljmp
out
mov
pusha
cs
push
jp
mov
adc
ret
sahf
mov
inc
popf
fistpll
pop
sahf
pop
mov
je
jne
push
cmpb
sar
pop
cmc
iret
in
shll
mov
mov
test
and
dec
test
ljmp
mov
mov
filds
scas
jns
push
mov
mov
pop
push
xor
or
sbb
cli
adc
dec
in
test
cmpl
pop
punpcklbw
stc
aas
outsl
vmwrite
call
movsl
scas
xchg
cmpsb
pop
push
jne
int
push
data16
or
lret
das
or
mov
test
lods
loopne
ret
pop
adc
arpl
dec
dec
popa
pop
insb
iret
mov
mov
sti
out
test
adc
adc
pop
or
jp
and
cmpsb
xchg
add
idiv
lahf
movsl
scas
xchg
mov
outsl
push
jg
sysexit
pop
and
iret
cmc
out
aad
lds
xchg
mov
outsl
push
jg
sysexit
pop
and
iret
cmc
sbb
mov
xchg
sub
cmp
mov
xchg
les
mov
scas
sahf
and
jl
loop
fwait
sbb
ds
push
dec
pushf
data16
pop
mov
and
cld
sbb
inc
stc
mov
mov
mov
ja
andb
out
and
mov
fiadds
lahf
mov
out
sahf
sub
lods
push
jno
inc
dec
push
lret
in
cld
ret
pop
mov
out
inc
xchg
out
fdivs
mov
divb
mov
idivl
mov
rorb
cmp
and
jg
push
sbb
mov
jecxz
mov
xchg
call
data16
dec
add
mov
jge
iret
imul
mov
mov
mov
lret
out
xor
jae
inc
fimull
or
mov
push
in
pop
mov
stos
mov
stos
pop
dec
mov
insb
or
xor
inc
jg
sbb
cmp
into
push
out
push
mov
jnp
lahf
cmpsl
lods
adcb
iret
mov
cmovbe
pusha
insl
mov
lret
xor
repnz
add
push
inc
imul
hlt
jle
cmpsb
std
xchg
shll
jl
cli
xchg
sbb
inc
ja
adc
cmpsb
movsl
xlat
fdivrs
push
test
imul
pop
in
js
cmp
inc
mov
test
mulb
lcall
in
cmpsl
lea
in
daa
mov
pop
mov
je
in
mov
mov
in
pop
test
cmp
int3
pushf
jecxz
testb
jmp
cmp
fidivrs
mov
xchg
adc
cltd
sbb
push
xor
mov
lock
les
in
lcall
add
xchg
hlt
cmp
push
lret
stos
cmp
jbe
push
aad
lock
inc
lcall
adc
out
aaa
not
cmp
mov
cwtl
dec
jno
jnp
cmp
int3
xchg
jbe
mov
mov
mov
lds
cs
sub
div
es
test
lods
inc
hlt
mov
sti
icebp
dec
lret
int
sti
mov
inc
add
cld
push
lahf
gs
sbb
adc
jne
imul
sbb
rclb
lods
hlt
movsb
cli
inc
hlt
mov
mov
mov
testb
sub
bound
adc
mov
mov
mov
stos
push
lods
daa
xchg
push
and
rcrl
lret
shlb
dec
nop
mov
stc
or
aad
gs
pushf
test
ret
dec
jnp
jge
add
xor
xor
push
jp
push
fbld
pop
scas
insb
lcall
into
std
or
jae
dec
pop
cmpsl
or
fldcw
mov
inc
andl
sbb
test
in
jl
mov
jecxz
adc
addb
ljmp
pop
inc
xor
insb
cmpsb
rcll
pop
xor
daa
cmp
pop
inc
aad
sbb
pop
daa
sbb
pushf
shll
mov
loopne
aad
mov
jmp
sub
pop
mov
in
mov
fdivp
mov
iret
mov
mov
cmpsl
pop
enter
pop
iret
sti
xchg
imul
add
lcall
mov
pop
xchg
and
mov
in
xchg
push
inc
test
adc
mov
sub
fimull
jmp
sarl
or
dec
dec
cmp
mov
das
jle
sub
add
in
or
push
fcmovne
xor
mov
inc
call
sbbb
inc
ret
jl
xchg
lods
jecxz
add
dec
jl
fidivl
sbb
xchg
test
or
stos
cmp
aaa
jns
sub
jae
dec
xchg
int3
sbb
dec
pop
sti
adc
inc
mov
or
mov
pop
in
addl
sbbb
inc
pop
cmpl
cmp
sub
and
xchg
sub
shrb
movsb
push
divl
out
adc
rorl
sahf
sub
jno
and
lea
cmp
jp
fsubr
xor
cmpl
mov
cmp
jp
sahf
cmp
xchg
cltd
mov
or
dec
mov
popf
cmp
cmp
jp
dec
iret
out
add
or
inc
ficoms
mov
cmp
xchg
xchg
inc
gs
mov
jle
jnp
nop
cmc
adc
mov
xor
xor
out
int
rcrb
jns
add
movsb
fisttpl
sbb
stos
in
jo
insl
scas
cmp
push
cmp
inc
leave
mov
imul
ljmp
lret
xchg
aas
orl
add
push
lret
pop
push
sub
add
ret
mov
adc
icebp
jmp
adc
xor
lret
sub
int3
jae
adc
scas
aad
xor
lcall
sbb
arpl
clc
lret
and
push
push
dec
push
out
in
xchg
push
fisubrs
or
movsl
xor
fidivl
push
pop
mov
or
sub
fs
or
aas
jmp
cli
sub
mov
sub
cltd
cmp
sub
leave
adc
mov
lock
or
cmpsb
fisubl
adc
jbe
push
loope
js
sub
mov
and
out
imul
mov
sbb
sahf
pop
or
int3
dec
movsl
lods
and
scas
dec
out
fnstenv
mov
dec
inc
mov
lds
cmpsb
push
sbb
push
decb
push
scas
imul
aas
fcomi
jg
dec
rorl
and
jnp
lretw
sti
pop
pop
jo
or
cltd
add
cmp
test
mov
sbb
push
or
cmp
pushf
pop
hlt
push
adc
fstpt
xchg
and
and
jecxz
sub
mov
enter
loop
inc
das
jp
int3
stos
jp
scas
mov
lea
push
sar
pop
iret
cli
into
and
gs
ljmp
cmp
dec
icebp
insb
cltd
outsl
lcall
xor
push
push
rcll
lds
xchg
xor
popf
jnp
add
loop
ja
stos
pop
popf
adc
imull
xchg
push
cmp
pop
jns
in
pop
test
cmp
sub
cld
fcoml
arpl
add
pop
sbb
sbb
xor
sbb
or
mov
daa
std
adc
sbb
add
sti
rcrl
or
sbb
ror
cltd
mov
cmp
sub
mov
pop
sbb
mov
jnp
push
lea
jmp
sbb
int3
add
xor
and
data16
xor
sbb
je
hlt
mov
adc
xchg
mov
iret
imul
insl
data16
stos
stos
jns
push
cmpb
pop
loopne
stos
loopne
adc
in
jnp
fiaddl
pusha
cmp
rclb
imul
mov
xchg
pop
xchg
shlb
cmpsb
push
movsb
xchg
xchg
clc
aaa
xchg
adc
xchg
push
leave
mov
rcrl
popa
in
in
mov
cwtl
inc
mov
popa
add
fucomip
fsubp
jecxz
mov
mov
sarl
jmp
pop
lods
jge
in
adc
rclb
inc
push
out
nop
mov
fs
push
add
rcll
and
test
xchg
lds
lret
shrl
fxch
sub
inc
adc
int3
js
movups
ljmp
mov
out
xchg
push
push
dec
and
cmp
xchg
mov
into
lea
pop
aad
cmpsb
imul
pop
push
fildl
sbb
popf
popf
outsl
push
sub
sbb
jmp
jmp
and
and
movsl
jb
lcall
pop
push
xor
out
leave
xchg
inc
jge
cmpsb
cld
xor
cmpsb
pop
jae
stos
stos
decb
sub
add
lods
jmp
lods
aam
push
shl
mov
and
inc
jno
adcb
outsl
inc
shlb
stc
mov
and
ljmp
ljmp
daa
lods
and
rcll
ret
test
dec
adc
add
xor
xchg
popa
adc
xchg
fs
dec
inc
inc
sti
fwait
xchg
shll
movsb
and
dec
push
dec
ljmp
push
inc
stos
sbb
arpl
jae
xorb
push
jl
cmp
xchg
pop
push
adcb
std
dec
xlat
outsl
dec
dec
call
cli
cwtl
unpcklps
fdivrl
out
mov
into
sbbb
jl
mov
or
stos
orl
dec
xchg
sub
hlt
insb
sbb
sahf
pop
outsw
adcb
in
pop
xchg
bnd
stos
popf
lods
add
gs
push
jmp
push
fildll
aam
cmp
imul
rol
pop
clc
roll
enter
cmpsb
sub
jb
das
arpl
jg
and
cmp
loop
testl
mov
jecxz
loop
mov
lret
ret
sbb
dec
lea
pop
rolb
pop
in
ss
xor
mov
and
cld
cmp
mov
fistpll
xlat
mov
inc
pushf
push
sbb
push
daa
dec
mov
jp
jbe
or
xorb
fisubs
icebp
jp
stc
cmp
pop
sbb
xchg
cmp
sar
mov
hlt
sub
xchg
mov
daa
add
cmpb
cmp
inc
dec
sbb
cmpsl
push
ja
and
sub
mov
mov
and
cmp
mov
ja
arpl
push
daa
enter
pop
inc
mov
sub
adc
iret
loopne
xchg
je
ss
pop
xor
imul
adc
inc
scas
add
jnp
jl
subb
dec
aad
or
sub
jno
std
movsl
pushf
pop
xor
sbbb
xchg
jp
loopne
inc
push
int
mov
sbb
jbe
jecxz
pop
repnz
sub
loope
sbb
or
mov
dec
cmp
rorl
daa
fwait
mov
cmpl
xor
loopw
push
ja
iret
push
dec
verw
shrl
cmp
xor
cmp
popa
cs
outsl
jge
mov
in
pushl
add
lret
pusha
jge
push
jbe
mov
push
xchg
stc
xchg
fnstsw
mov
pop
mov
nop
imul
xchg
xor
and
push
adc
mov
ror
pusha
in
or
push
ja
adc
push
into
jnp
mov
cmp
xchg
pop
pop
scas
lahf
mov
add
sarb
sbb
out
repnz
sbb
mov
fs
inc
stos
push
mov
adc
pop
aaa
lret
xor
lahf
emms
sahf
test
pop
xchg
add
fisubl
das
dec
jbe
ja
sbb
sbb
outsb
push
jg
cmp
dec
or
inc
sbb
xor
ret
fcoms
mov
testl
scas
pop
jbe
inc
mov
shrb
ret
lahf
mov
push
and
adc
dec
xchg
ret
dec
call
pop
lret
xor
dec
cmp
adc
arpl
and
fstps
lock
or
jmp
inc
rcl
jge
xor
jg
call
adc
push
lods
sub
jecxz
pop
mov
cli
cmp
loope
mov
inc
jecxz
push
add
ljmp
cld
mov
clc
mov
ja
mov
mov
mov
shl
sub
aas
lods
or
maskmovq
addr16
push
cli
push
loope
pop
or
lcall
dec
mov
sub
sub
rol
jne
arpl
sub
sub
mul
sub
sbb
hlt
cli
aad
push
mov
pop
xchg
stos
mov
std
mov
add
pshufw
xor
fcompl
je
mov
sbb
stc
sub
insb
lds
adc
std
jmp
sub
in
inc
sti
lods
lret
mov
mov
adc
mov
scas
jno
cmp
jae
push
sbb
or
mov
pop
mov
inc
pop
shr
xchg
popl
and
add
sar
xchg
mov
add
jb
or
lea
mov
test
out
movsb
es
or
imul
inc
mov
out
rclb
mov
gs
xor
lods
push
bound
sahf
dec
mov
pop
les
inc
test
andl
pop
xchg
fldcw
decb
push
xlat
adc
outsl
ret
sub
push
pop
sahf
pushf
and
fisttpl
fnstenv
sti
xor
adc
aaa
pusha
xchg
movsl
out
inc
shrl
lahf
jl
mov
ljmp
leave
push
out
xor
push
mov
sub
andb
adc
std
lcall
mov
test
pop
xchg
mov
xlat
rorb
in
andb
in
es
sub
jb
adc
inc
je
and
jae
mov
call
sahf
push
xchg
scas
mov
cmpsb
push
pop
mov
movsb
aaa
insl
push
nop
inc
mov
iret
scas
out
mov
nop
xchg
jne
mov
inc
lcall
sti
jmp
add
or
dec
inc
ljmp
mov
push
pop
les
mov
aaa
cld
mov
push
mov
cmp
test
repnz
test
mov
or
sbbl
jbe
xlat
pop
and
movsb
ret
movsb
test
push
jmp
into
sbbl
mov
clc
sub
push
aad
xor
fsub
fsts
bound
sbb
orl
insl
add
loopne
add
add
xor
mov
rcr
adc
sbb
leave
xchg
mov
pop
sub
lret
loopne
mov
xor
das
push
cld
cmpsl
int3
xchg
xlat
add
mov
xchg
jge
sub
add
jg
adc
xchg
aas
in
out
jle
or
popf
pop
out
mov
xor
xchg
push
lret
or
xchg
enter
mov
das
fwait
arpl
fadds
ret
or
xor
mov
xchg
sahf
fs
mov
or
stos
out
iret
mov
mov
xor
and
inc
xchg
jmp
fldl
fwait
out
xor
sbb
fs
cli
popf
mov
mov
lods
fbld
or
test
push
fdiv
mov
sub
in
mov
mov
incb
pop
mov
in
mov
or
ds
mov
into
inc
icebp
jl
lahf
addr16
int3
mov
adc
jo
or
je
or
int
cmp
mov
cmp
hlt
mov
loop
mov
push
fcoms
xor
dec
lret
jl
adc
fadds
push
mov
jno
mov
jo
loope
cmp
imul
leave
push
xor
add
lock
lahf
mov
repz
pop
sbb
popa
add
xor
leave
pop
adc
cli
sub
add
fisubs
popf
push
stc
jp
lcall
jg
push
lea
add
lds
xchg
cmp
jns
xchg
aas
push
push
dec
int
cmp
jns
out
scas
out
or
out
packuswb
cbtw
jecxz
or
sbb
mull
or
fstpl
pop
loope
inc
adcl
sub
dec
xor
dec
out
mov
into
out
addr16
insb
pushf
dec
rcr
arpl
loopne
fsubr
fwait
stos
iret
dec
repz
xchg
addr16
ret
mov
test
xchg
or
xor
dec
jecxz
lcall
sar
rolb
sbb
add
out
int3
imul
shr
pop
jg
xlat
or
cmp
and
outsb
cwtl
jbe
leave
fisubrl
loopne
sbb
inc
mov
mov
sarl
adc
fisubs
sub
and
fwait
xchg
in
js
xchg
xchg
mov
jle
daa
mov
and
fs
cmp
mov
add
mov
xchg
sarl
dec
movsl
xchg
cmp
imul
lds
dec
or
sub
cltd
cmc
mov
push
mov
xor
mov
xchg
movsl
mov
pop
mov
ja
lods
arpl
add
xchg
loope
ret
out
das
jne
adc
mov
or
jnp
cmpsb
mov
mov
rorb
adc
aas
repnz
bound
fcom
jbe
push
out
pop
add
aas
jne
adc
add
sub
xchg
sub
out
xor
mov
imul
or
fcomip
hlt
imul
mov
pop
mov
repz
dec
push
mov
cmp
dec
mov
dec
js
out
pop
sbb
imul
mov
mov
ljmp
mov
sbb
xor
sbbb
pop
inc
imul
inc
stc
pop
adc
sbb
inc
repz
push
ret
call
data16
xor
in
ret
mov
xor
add
scas
dec
mov
pop
cmp
fs
xor
push
ljmp
jecxz
out
fwait
add
jne
negl
push
clc
jae
jb
aaa
dec
fdiv
mov
hlt
jno
fwait
data16
dec
mov
xorl
gs
cwtl
sub
lock
add
xchg
cld
mov
cmp
sub
mov
or
loop
mov
xor
addr16
push
rorb
jno
fsubrs
adc
std
xor
jecxz
ret
stos
repnz
fldln2
mov
xchg
stos
xor
and
pop
sbb
in
hlt
bound
insb
mov
jne
out
outsl
out
or
cs
rclb
fdivl
xchg
jb
cli
notl
repnz
dec
insl
out
outsb
dec
pusha
int3
loopne
ret
aad
scas
outsb
lret
in
sub
les
mov
lea
sub
icebp
repnz
in
add
jbe
repnz
shlb
addb
outsl
icebp
rcll
mov
inc
rcrl
pop
mov
jmp
mov
inc
lcall
insb
inc
pushf
test
push
nop
rorl
dec
int3
xor
xchg
lods
pop
adc
aaa
sti
sub
rcrb
inc
inc
aas
sti
inc
inc
lea
fst
mov
mov
movsl
xor
ljmp
xchg
aam
pop
scas
and
pop
xor
and
insl
fwait
mov
jge
and
pop
or
test
add
adc
lret
jecxz
cltd
mov
rolb
mov
and
push
popf
jno
and
cltd
mov
cmc
mov
loope
sbb
push
xchg
lret
hlt
arpl
rol
cltd
and
mov
mov
movsb
outsb
ret
dec
mov
call
and
or
mov
add
jno
inc
insb
fstpl
jmp
add
mov
fsubr
cwtl
mov
inc
lods
aas
adc
mov
shlb
loop
popa
sub
mov
lahf
int
or
mov
lds
shlb
test
fs
jns
sub
mov
neg
bnd
stc
xor
and
xchg
es
insb
sub
arpl
loope
shll
push
imul
lock
gs
jns
stos
jp
jb
shll
sub
call
fcomps
pop
sbb
in
in
test
les
add
repnz
test
mov
dec
mov
je
sti
sub
add
xchg
gs
arpl
clc
nop
xlat
repnz
xchg
std
add
push
adc
and
hlt
ja
xchg
dec
ljmp
scas
cmp
aas
mov
data16
mov
fldenv
lods
scas
dec
repz
ret
imul
mov
push
in
out
inc
mov
out
loope
incb
scas
insb
iret
int3
cmc
jbe
addl
int3
dec
scas
rolb
lcall
sub
leave
xor
jg
imul
test
mov
xchg
imul
cmp
inc
xor
mov
idivb
fdivr
fstpl
mov
and
jb
outsl
ret
ljmp
fwait
sbb
test
jbe
hlt
pop
pusha
adc
addr16
dec
jp
inc
adc
fs
add
in
cli
add
jecxz
mov
push
cld
xchg
jo
sbb
lock
pop
pop
and
clc
adc
jo
jno
fcomps
push
xchg
cld
mov
cmp
nop
fisubl
adcb
scas
hlt
inc
jmp
jp
and
cmc
out
hlt
daa
jmp
lds
xchg
mov
outsl
push
jg
sysexit
pop
and
iret
cmc
out
aad
lds
xchg
mov
outsl
push
jg
sysexit
pop
and
iret
icebp
fucomip
out
int
rorl
mov
popa
imul
rdtsc
sbb
sti
adc
add
xor
test
adc
mov
xor
xchg
pop
shrb
jge
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
inc
into
loopne
mov
in
and
imul
mov
pop
add
add
or
add
add
add
add
add
add
add
add
or
scas
add
sbb
stos
add
add
add
add
add
add
add
add
add
add
add
repnz
xchg
add
add
add
inc
add
add
sbb
fiaddl
pop
add
fs
add
add
add
add
and
add
cmp
add
xor
add
sub
adc
test
add
aad
xor
ret
add
sub
add
in
add
add
add
add
and
imul
loopne
push
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
sbb
add
inc
add
in
add
add
add
add
out
iret
add
add
test
inc
add
adc
add
push
add
add
or
add
add
mov
rolb
mov
sub
inc
add
add
add
jno
test
or
jl
daa
add
inc
add
add
add
add
add
add
add
add
add
add
filds
jbe
or
faddl
aad
add
add
faddl
xor
out
inc
add
add
add
add
add
add
add
add
mov
add
add
add
sldt
inc
add
add
add
add
add
or
sub
inc
add
dec
add
mov
adc
insl
add
add
add
add
add
pop
add
add
add
addl
add
in
add
dec
add
add
add
add
add
loope
adc
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
sub
inc
add
add
add
add
add
add
xchg
add
add
sbb
jmp
add
cmp
add
lcall
add
add
xchg
sub
inc
add
dec
add
cmp
fiaddl
add
inc
add
jbe
dec
add
add
add
out
and
add
add
add
add
inc
add
add
add
sub
xchg
sub
add
inc
add
add
sub
add
add
add
lcall
add
inc
add
add
add
add
sub
add
add
add
loopne
adc
mov
adc
ds
add
scas
add
add
sub
inc
add
add
add
add
add
sub
push
add
add
add
add
sbb
add
add
jl
ja
adc
insl
add
add
inc
push
repz
or
cmpsb
stc
jle
jmp
and
incb
dec
push
test
das
mov
mov
stos
nop
mov
dec
push
mov
jae
test
stc
lods
cmpsb
add
cmovbe
jmp
je
sub
sub
nop
mov
dec
add
fisttpll
xchg
divb
ljmp
pop
arpl
sbb
xorb
cli
add
sbb
shr
adc
xchg
push
sbb
inc
push
xchg
movsl
pop
lcall
lahf
addl
and
in
sub
jp
dec
sbb
dec
dec
xor
rorl
inc
xchg
insl
pop
scas
stos
cmp
cmp
xorl
sub
lods
mov
xor
sub
jmp
push
lahf
out
xchg
inc
xor
mov
push
cmp
adc
subb
repz
aad
test
pop
loope
and
push
or
mov
clc
call
sbb
leave
jl
fs
fidivs
mov
ret
movsl
pushf
nop
out
xchg
scas
iret
add
es
out
dec
imul
mov
lahf
jecxz
fadd
insb
inc
cs
mov
sub
add
in
or
or
dec
jno
mov
movsl
sbb
pop
and
or
xorl
loopne
test
movsl
mov
in
sbb
pushf
cld
stc
sbb
cmc
movsl
push
cmp
xchg
mov
add
pop
pushf
lcall
or
shlb
nop
lds
push
vmaxpd
pushf
xchg
arpl
outsb
aas
lods
out
xchg
inc
xchg
pop
inc
out
sar
and
mov
js
sub
xchg
cmpsb
mov
xchg
inc
mov
in
adc
xchg
adc
add
loop
jl
inc
cmpsl
js
insb
jmp
lahf
pop
fsubp
push
pop
push
jno
data16
mov
stos
outsl
popf
jg
adc
dec
ret
aad
inc
ret
xor
loopne
lock
enter
leave
cwtl
push
inc
adc
cld
fiaddl
mov
movsb
xor
in
rclb
cmp
jno
jne
cli
in
jecxz
lods
mov
loope
mov
aad
cmp
xlat
hlt
adc
cmpsl
call
xchg
mov
clc
repz
ftst
sub
cmp
xchg
stc
mov
mov
mov
mov
out
arpl
xchg
and
sbb
scas
jb
sbb
fisttps
xor
cmp
adc
bnd
aad
push
les
int
bound
xor
dec
out
push
int3
sbb
fcoml
mov
rcrl
dec
jo
sub
popf
or
lods
xorb
rcrl
jl
loope
jno
sbb
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
