call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
add
in
dec
adc
adc
mov
fsts
mov
cwtl
shrl
js
dec
add
sub
std
or
and
enter
push
sbbl
adc
pop
cmp
scas
sbb
jle
shlb
xlat
cwtl
std
mov
shll
and
dec
je
inc
loope
mov
add
mov
inc
sbb
in
sbb
pushf
and
cmpsl
lods
xlat
pusha
cmp
adc
jmp
mov
pop
cmp
jo
dec
sbb
dec
and
sub
xor
or
sbb
rol
in
add
and
adc
punpcklwd
scas
gs
jge
ss
insl
push
loopne
push
or
lods
adcb
cmpsl
xchg
jno
cmp
dec
pop
push
add
scas
mov
sti
mov
lock
cltd
cs
loope
mov
es
add
lods
mov
jle
mov
loopne
push
int
sbb
and
dec
test
sub
jno
fwait
sbb
call
xchg
fcomp
test
mov
mov
and
aas
sub
sbb
out
hlt
enter
test
sbb
or
pusha
xor
sub
jge
jo
dec
cmp
lret
imulb
mov
js
daa
push
xor
fs
sbb
mov
fcoms
mov
cwtl
shrl
js
dec
add
sub
jno
inc
sbb
mov
fcoms
mov
cwtl
shrl
pop
out
mov
cmp
pop
out
sbb
out
cmp
leave
loope
push
xchg
sbb
pop
jno
push
mov
cmpsl
push
cmp
xor
imull
hlt
mov
fbstp
cs
mov
jne
add
pushf
cmp
sub
clc
or
imul
pop
adc
je
jbe
mov
sarb
insl
insl
mov
idivb
sahf
inc
test
xchg
push
sahf
comiss
jmp
jmp
dec
mov
divb
je
cmp
pop
pop
insb
mov
and
in
jne
push
push
mov
pop
jnp
ljmp
lea
mov
and
int3
bound
stos
cmp
jp
in
ret
pop
loopne
dec
pop
dec
push
mov
nop
pop
dec
jl
ror
lea
and
xchg
es
sbbb
xor
xor
push
outsb
pop
cld
test
cmpsb
pop
imul
xchg
adc
and
mov
lods
mov
repnz
push
mov
cs
testb
fstpl
and
movsb
inc
push
dec
and
ljmp
add
lea
mov
nop
adc
lock
xchg
push
mov
pop
or
leave
fsubl
mov
add
sahf
inc
hlt
in
pop
fisubl
xchg
mov
hlt
outsb
sub
or
pop
mov
hlt
sarb
inc
aad
xchg
xor
icebp
hlt
addl
fsts
add
sti
nop
pop
mov
push
mov
subl
mov
repz
aam
js
dec
mov
xchg
xor
add
cmpsb
cmp
mov
or
push
push
fwait
mov
sahf
and
shl
jne
into
stc
jl
cmpsb
inc
shr
pop
adc
mov
xchg
mov
mov
jns
inc
insl
or
lcall
out
mov
or
js
mov
ret
jbe
pop
les
jg
insl
cmpb
and
rorb
test
and
push
push
pop
push
lcall
leave
mov
mov
adc
jb
loop
insb
call
mov
pop
adc
dec
jne
inc
daa
jbe
pop
lcall
lods
std
mov
fcmovnbe
je
push
movhps
jo
ret
xor
jmp
adc
push
fmuls
insl
inc
mov
jo
ja
mov
mov
inc
and
mov
pushf
pop
cmp
fwait
and
push
mov
shrl
shl
inc
xchg
xor
loop
adc
pop
adcb
mov
mov
das
ljmp
mov
xchg
mov
popa
rcll
inc
inc
inc
shrb
addb
int3
mov
add
pop
mov
xchg
das
mov
loop
rcll
mov
or
mov
fldl
in
movsl
adcb
jl
stos
mov
mov
jmp
mov
scas
sar
dec
mov
mov
cs
into
lock
xchg
je
mov
test
push
sarl
bound
js
orb
inc
add
sbb
pop
cli
jmp
ret
gs
mov
fs
sub
movsb
out
cmp
out
or
cmp
cmp
mov
sbb
outsl
sti
sbb
int
testl
jmp
mov
lret
pop
push
jg
xor
into
into
scas
mov
imul
not
pop
in
stc
mov
lods
pop
mov
inc
sub
test
inc
lea
add
dec
jns
adc
xor
xor
lcall
cwtl
das
call
roll
test
andb
movb
mov
and
loop
jbe
mov
xchg
push
lea
cmpsl
mov
lret
pusha
gs
jnp
or
cmp
jb
xor
cmp
push
fs
ljmp
sbb
mov
inc
dec
adc
lret
push
jmp
sbb
fs
add
iret
mov
and
lahf
aas
cmp
repnz
imul
out
ja
popf
incl
test
pop
pusha
mov
repz
lahf
cmp
leave
icebp
test
sbb
mov
xor
jae
sbb
inc
cltd
dec
xlat
out
mov
mov
pop
fst
add
aas
push
addr16
inc
out
test
ja
das
push
in
jge
ss
out
icebp
shlb
in
and
inc
mov
mov
mov
mov
test
cli
lahf
cwtl
andb
push
inc
sbb
xor
push
pop
fldt
push
in
pop
cli
push
inc
cmp
cmp
cltd
mov
cmpsb
out
pop
sub
jge
cli
std
lret
pop
inc
fistpl
mov
daa
cmp
fisubs
or
aas
xor
sub
cmpsb
mov
and
clc
mov
insb
xlat
cwtl
lods
mov
sarb
jl
sbb
mov
dec
add
push
jnp
pop
jmp
pop
mov
inc
and
cltd
mov
pushf
fcom
fcmovbe
pop
push
cmpsl
lock
imul
push
sub
repnz
test
lods
pop
movsl
cmpsb
sarl
mov
jae
mov
and
mov
cld
dec
mov
lcall
mov
add
fcmovb
ret
mov
jnp
push
lods
and
shl
int
jae
enter
fisttps
sahf
xchg
lods
mov
adc
fisubrs
leave
sbb
lods
roll
sbb
push
imul
pop
pop
xchg
jecxz
push
aad
inc
into
cmc
jne
stc
jmp
dec
scas
cmp
stos
cmp
or
cld
jmp
test
xchg
inc
scas
xchg
lret
jne
lret
jns
outsb
and
in
addl
and
mov
pop
lcall
jmp
xchg
out
cld
lods
clc
mov
out
movsl
push
rclb
hlt
iret
fisubrs
sbb
mov
mov
arpl
cld
js
mov
cmp
pop
enter
jg
xor
test
pop
or
jnp
ds
insb
xor
push
cmp
mov
mov
loop
and
jae
ss
and
sub
js
and
jae,pn
mov
adc
or
mov
lret
inc
lcall
repnz
insb
and
fisubrl
inc
and
inc
aad
and
ds
mov
xchg
and
sub
adc
rcrl
arpl
pop
xchg
out
adc
aam
pusha
push
push
aaa
das
cmp
mov
aad
adc
call
into
jp
lret
shl
xor
xorl
cmpsb
sub
stos
in
mov
sbb
mov
xchg
or
mov
mov
in
jns
scas
lret
jl
push
push
xchg
aaa
mov
xchg
mov
ja
jb
xchg
mov
push
pushl
mov
mov
cwtl
push
mov
cld
push
lret
outsb
push
mov
lds
hlt
testl
and
adc
xor
sahf
sbb
jo
xchg
or
push
data16
sti
push
mov
jl
sub
sub
call
pusha
cmp
adc
sbb
cltd
mov
das
adc
xor
sbb
push
cmpsl
push
push
mov
sahf
sarl
mov
push
pop
ds
sti
cmp
imul
push
xor
adc
jmp
fcmovbe
mov
adc
popf
pop
lods
leave
mov
aam
jp
arpl
xor
jo
or
xchg
xor
xchg
outsb
or
sbb
lret
rol
jle
rolb
iret
lods
aaa
sub
inc
cmp
imul
cmpsl
call
sbb
xchg
sbb
popa
pop
mov
sub
push
gs
rcrl
aad
negl
cltd
fidivrs
scas
and
add
roll
jo
push
gs
push
add
mov
mov
pop
adc
mov
sbb
cltd
or
stc
pop
push
call
fdivrp
fldenv
push
sub
dec
push
inc
stos
mov
push
xorb
in
fisttpll
test
dec
mov
pop
repz
xchg
popf
addl
push
xor
push
stos
xor
ljmp
arpl
push
aam
add
inc
mov
out
mov
cmpl
push
pop
inc
test
sub
movsb
xchg
loop
aad
xchg
sahf
xor
mov
cwtl
jl
in
in
push
push
add
add
je
mov
push
add
mov
jno
pop
addb
stc
xor
xor
divl
outsb
push
popf
pushf
and
sahf
sub
lret
jbe
out
test
cmp
hlt
notl
ja
fisttpl
push
sbb
fimull
push
pop
arpl
cmpsb
shll
push
push
cld
mov
jbe
sbb
adc
pop
sar
cmp
insl
mov
push
push
fimull
jne
sbb
leave
push
in
inc
xlat
sbb
push
into
cwtl
fsts
push
mov
pop
mov
mov
addb
dec
int
ja
lods
test
icebp
ja
or
sub
xchg
fildll
push
int
mov
sbb
outsl
lds
xor
dec
push
outsl
addr16
cwtl
sub
test
add
ljmp
sbb
into
test
repnz
stc
mov
adc
test
mov
adc
dec
add
jae
or
xchg
mov
mov
cmpsb
adc
cmp
lock
in
inc
addr16
pop
shr
in
push
sub
and
cmc
addl
sub
push
pop
adc
nop
fs
mov
ja
cli
or
inc
pop
enter
jo
addr16
dec
andb
repz
mov
sarl
dec
loopne
xor
mov
aad
out
push
pop
and
pusha
cmp
divl
jp
cmpsl
loope
push
lds
pop
arpl
jbe
stc
jmp
in
mov
ficomps
sbb
das
inc
and
dec
mov
xor
insl
jl
jp
ljmp
gs
bound
push
adc
and
cmp
data16
dec
stos
mov
inc
pop
aad
cld
call
mov
mov
xchg
mov
jno
pushf
out
lahf
mov
mov
pop
lahf
cmp
push
cmp
push
icebp
scas
hlt
insl
in
ret
mov
xor
shl
jecxz
iret
call
sahf
movsl
iret
xchg
jns
aam
adc
xor
mov
mov
mov
push
mov
les
int
dec
add
stos
push
outsl
pushl
leave
sbb
or
repz
call
push
add
out
mov
sub
sub
pop
into
or
xchg
sarb
xor
jb
push
repz
dec
jmp
jmp
aam
pop
mov
mov
dec
pop
idivb
lock
test
fdivrl
or
sbb
loopne
arpl
or
and
mov
cmp
scas
int3
adc
data16
ljmp
cltd
xchg
mov
daa
push
dec
push
repnz
pop
jg
adc
mov
int
mov
out
xchg
test
jmp
sub
les
and
popf
cwtl
iret
out
packuswb
out
add
daa
push
jne
scas
cli
div
pop
sub
xchg
lds
dec
mov
adc
inc
je
and
adc
out
xor
out
mov
imull
sar
cmpsl
popa
jnp
jno
cs
out
test
aad
movsb
mov
push
sub
jb
ret
jns
jo
fsubs
adcb
push
or
es
stos
xchg
and
jb
enter
cmpsl
insb
push
xchg
repnz
sub
push
xor
aam
dec
pop
cmp
cmc
cli
cmp
mov
add
pop
jl
stos
mov
mov
add
movsl
hlt
stc
push
sbb
dec
push
insl
sbbb
push
sub
pop
mov
pop
pop
jmp
test
daa
xor
jo
dec
gs
mov
loopne
filds
lods
lods
sbb
sub
cwtl
aas
loop
notl
or
ja
sbb
inc
lods
and
out
add
add
mov
iret
add
test
push
inc
mov
test
adc
shll
cwtl
enter
test
nop
add
outsb
mov
cwtl
fcomp
data16
shll
addb
pop
mov
push
js
sbb
or
add
outsl
xchg
cld
xchg
fnstcw
loope
sbb
lret
or
xchg
fcmovb
dec
aas
pop
or
sbb
xlat
enter
arpl
sub
pop
sub
outsb
push
rolb
xchg
sarl
push
sub
sub
jp
gs
sub
sbb
enter
sbb
pop
sbb
cmp
xor
ficoms
dec
push
ja
and
cmp
cwtl
and
cmovg
cmpsl
out
sti
in
iret
cmpsl
enter
hlt
cmp
leave
fidivs
repnz
sbb
inc
mov
mov
test
pop
mov
pop
and
and
orb
mov
ret
mov
or
cmpb
sarl
sarl
xlat
or
stos
lcall
xchg
daa
inc
ss
movl
pop
and
bound
add
sahf
and
mov
jg
fcmovbe
add
fs
test
stos
pop
pop
or
outsb
push
das
or
jno
pop
into
test
xchg
cld
daa
xchg
std
xor
push
mov
adc
stos
fidivrs
adc
out
scas
mov
movsb
movsl
sub
adc
dec
add
loopne
mov
fs
xchg
nop
jecxz
jo
and
lcall
mov
cmpsb
cld
xlat
push
inc
insl
adc
jg
cmpsb
roll
add
inc
shl
movsl
sbb
pop
rcrb
insb
xchg
push
rorl
mov
add
add
sub
jo
aaa
lcall
jnp
mov
outsb
int3
mov
cmp
int3
xchg
or
in
jl
jns
cmpsb
mov
pop
mov
cli
mov
and
fnstenv
movsb
push
movsb
lea
cmp
xchg
mov
loop
jns
inc
xchg
mov
cmp
dec
xchg
ss
inc
enter
jmp
adc
push
mov
or
pop
push
shrb
scas
push
jmp
ss
fwait
cmpw
ds
cltd
cmpsl
fdivrl
mov
insl
fwait
xor
fcomps
mov
adc
pop
lcall
test
fists
add
mov
or
mov
test
pop
das
outsl
ret
and
mov
xor
push
mov
inc
repz
fs
push
push
lret
xor
call
mov
andl
mov
xchg
std
js
add
jle
clc
nop
clc
int3
dec
and
xchg
mov
or
in
subb
mov
xor
push
cwtl
shl
insb
pop
dec
pusha
mov
and
xor
sahf
push
jmp
mov
filds
sub
jmp
test
pusha
stos
fs
mov
jne
not
sbb
lea
les
push
lds
push
pop
nop
out
in
outsl
ss
es
sbb
pop
xor
ds
cmp
pop
outsb
or
repz
inc
and
mov
cmp
fsubrl
fwait
ret
adc
dec
xor
fs
aad
mov
pop
nop
cmp
in
mov
sbb
push
push
push
mov
shlb
push
sbb
lret
jle
out
xchg
fsts
imul
lds
sub
xor
cli
subl
pop
cmpsl
leave
sti
mov
push
xchg
es
in
fld
mov
aad
pop
xor
test
popf
mov
out
into
mov
inc
and
sub
xor
faddl
lcall
xor
mov
mov
test
jecxz
mov
out
xchg
aad
cmp
mov
push
inc
jbe
and
dec
rcr
call
xor
mov
out
std
cmc
ret
mov
sbbb
and
push
in
push
fcom
cmp
mov
or
mov
iret
nop
add
xchg
pop
insb
test
out
jle
xchg
xor
lret
adc
imul
sarl
cwtl
fs
fsubrl
push
stc
adc
sbb
ja
iret
into
repz
clc
jp
mov
test
daa
dec
cmpsb
loopne
std
sbb
insb
jge
cmp
faddp
or
inc
xchg
gs
add
pop
rcrl
imul
test
push
loopne
mov
push
fldl
sarl
sbb
sarb
ss
jns
leave
adc
mov
lret
adc
mov
rcr
test
outsl
hlt
xchg
cmpl
xlat
cmp
add
pop
mov
fisttpl
sub
xorl
rdtsc
lods
mov
sbb
popa
xchg
dec
mov
xchg
xchg
dec
push
xchg
jg
jnp
aaa
repnz
leave
mov
aam
mov
outsl
mov
adc
aad
stos
loopne
std
jmp
out
cmp
rcr
xchg
call
sub
push
rcrb
test
jbe
inc
xchg
cli
and
lock
inc
mov
lods
add
in
cld
sbb
push
fs
sub
inc
add
aam
adc
lods
dec
xlat
fstps
push
add
mov
push
jmp
and
mov
ljmp
leave
out
xlat
outsl
popf
mov
call
push
cmp
xor
mov
iret
iret
mov
jle
js
mulb
in
cmp
sbb
lea
mov
push
adc
popf
loope
in
aaa
jne
cmp
jl
shlb
popf
nop
stos
push
cltd
stos
stos
into
jle
in
mull
jbe
roll
shrl
inc
bound
jmp
std
push
and
int3
dec
lret
xor
and
dec
incl
sub
sub
and
adc
enter
mov
inc
movsl
insl
rcr
sbb
mull
adcl
cmp
and
in
jns
into
sbb
or
or
nop
das
dec
data16
inc
je
imul
insb
cmpsb
outsl
xor
data16
fiadds
xchg
inc
sahf
lret
jo
sbb
cmp
mov
incb
push
cmpsb
ljmp
dec
aas
xchg
test
sahf
mov
enter
push
adc
sub
jns
jmp
repnz
jp
dec
fdivl
negl
test
xor
ficoml
cs
xor
inc
clc
pop
stos
sti
inc
cmp
pop
pop
xor
test
std
push
xchg
ss
or
lahf
movsb
jnp
imul
adc
sahf
shufps
popa
mov
push
popf
push
mov
mov
or
sbb
test
and
mov
cwtl
les
daa
sbb
xchg
xor
mov
into
nop
adc
mov
ja
jp
nop
add
aad
jecxz
ret
add
mov
aam
xchg
inc
stc
pop
mov
pusha
sti
cmp
test
push
fstpt
loopne
and
call
add
push
lret
nop
jmp
mov
mov
js
rorl
mov
repnz
icebp
mov
popl
adc
mov
imul
sbb
movsb
inc
out
call
adc
mov
dec
jae
xchg
inc
out
jnp
testb
aad
iret
iret
sbb
fisttpl
mov
gs
and
cmp
mov
divl
je
mov
push
xor
ds
push
pop
jmp
dec
std
cmc
adc
push
push
in
sbb
adc
xchg
xchg
mov
stos
push
lds
jmp
mov
push
es
pop
sub
mov
fcompl
stc
jmp
sbbl
inc
xchg
shll
lret
xchg
mov
lret
mov
call
mov
xchg
cmpsl
sub
sahf
out
imul
andb
xor
js
and
les
lods
xor
dec
sub
push
pushl
fwait
in
cmp
in
mov
fwait
bound
inc
mov
scas
movsl
pop
ljmp
daa
jnp
jle
test
xchg
ffree
gs
es
and
cmc
loope
jp
iret
pop
jo
sub
in
add
jo
sub
ljmp
jecxz
cld
call
js
idiv
fstl
lret
icebp
cmp
wbinvd
aam
out
ret
inc
inc
mov
shrl
stc
movsb
adc
push
insl
daa
pop
jnp
scas
mov
les
ljmp
jl
jmp
mov
xchg
mov
inc
icebp
xchg
dec
in
dec
push
mov
or
iret
xchg
jbe
xor
aas
pop
inc
sbb
lahf
jp
xor
pop
adc
popa
cmp
inc
sbb
mov
fcoms
mov
cwtl
shrl
js
dec
add
sub
jno
inc
sbb
mov
fcoms
mov
cwtl
shrl
clc
jns
jns
adc
inc
cwtl
push
call
sbb
icebp
mov
cwtl
shrl
js
dec
add
sub
jno
rcrl
call
sbb
push
clc
ds
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
cld
int3
mov
iret
out
lods
xchg
repz
sub
jl
sub
jl
or
sbb
sti
lahf
cld
cld
mov
mov
mov
jl
sub
sahf
das
sub
cmp
outsl
cmc
lahf
in
aam
les
xchg
decl
sub
pop
sub
sbb
jg
jne
pushf
sar
incl
gs
and
pushf
test
test
pop
sarb
adcb
in
lahf
jno
int3
aad
and
inc
inc
jl
push
movsl
jae
cmp
xchg
ds
cld
dec
test
push
sahf
and
sub
pop
orl
cmp
jae
repnz
sub
push
stc
mov
test
addps
adc
dec
stc
add
dec
or
outsl
or
add
inc
test
cld
push
jl
pushf
scas
mov
fs
sbb
pop
das
xchg
or
cld
cltd
addl
cmpsl
adc
mov
xchg
pop
orl
dec
pop
shr
dec
sub
in
jg
nop
sub
cld
int3
mov
cmpsb
iret
mov
test
jne
andps
inc
das
xor
and
or
add
imulb
cwtl
sarl
sbb
push
ds
xor
sub
imul
fmulp
fcomps
shrl
jge
pop
sub
cmp
jl
sbb
test
into
fsubrl
in
mov
out
insb
pop
jl
dec
aas
pop
das
sub
cmp
or
sbb
in
lahf
cld
int3
mov
mov
out
insb
pop
jl
dec
aas
pop
das
sub
cmp
or
sbb
in
lahf
aas
cmpsl
xchg
shlb
xor
movups
cmp
and
les
push
add
sub
lahf
add
xor
jge
push
push
scas
pop
dec
dec
xor
loop
xchg
pop
stos
lods
in
scas
dec
add
loop
addl
testl
pushf
movsl
ret
jne
fistpll
orb
rcrb
or
loopne
push
jae
xchg
inc
cmpsl
decb
lock
push
mov
gs
ljmp
push
imul
xor
mov
addr16
shll
inc
mov
cwtl
mov
or
std
cmp
sub
mov
or
cmpsl
mov
mov
je
out
pop
or
xchg
pop
xchg
ret
popa
imul
sahf
rcrb
xchg
push
adc
addr16
ljmp
sbb
dec
gs
xchg
mov
in
out
ficoms
imul
pop
lods
out
insb
test
lret
jo
shlb
pushf
sbb
sahf
jmp
scas
out
xor
and
pop
in
push
xor
je
push
imul
add
and
or
shr
or
frstor
sbb
xor
dec
pop
scas
sub
lret
stc
jb
mov
stos
stos
outsl
movsl
fdiv
adc
cld
mov
jb
ljmp
mov
ds
lea
xchg
das
cli
push
adc
stos
jg
jnp
mov
mov
sbb
mov
cmpsl
movb
das
fstps
ss
sbb
sbb
outsl
push
ds
and
mov
bound
aam
or
movl
push
pushf
adcb
testb
cmp
jmp
insl
inc
cmp
add
js
adc
sbb
fs
dec
ja
add
mov
std
or
leave
xchg
xchg
outsb
pop
into
add
dec
dec
stos
mov
outsl
push
scas
incl
xor
and
out
aas
cmp
lret
mov
fnstcw
fistpl
loope
ljmp
xchg
in
or
mov
jmp
push
xchg
lahf
stos
imul
lahf
or
fldenv
and
push
pop
push
xchg
jl
les
and
call
jge
mov
sbb
cli
push
xchg
mov
cli
inc
adc
stos
mov
adc
jecxz
push
push
dec
cmp
lock
lcall
add
mov
inc
or
stos
add
stos
sub
and
and
adc
mov
std
add
rclb
xchg
jg
push
lea
lea
sub
pushf
je
pop
lret
xchg
cmp
and
jne
mov
inc
subl
dec
push
mov
mov
sbb
jbe
cltd
psraw
cld
js
inc
jb
lods
das
cmp
push
inc
int3
test
cmp
int3
inc
cmp
xchg
mov
or
sbb
mov
xchg
dec
imul
pop
lahf
inc
repnz
movsl
popl
jne
push
in
xor
cmp
adc
xchg
icebp
mov
shlb
test
mov
shl
shr
aad
iret
push
call
sbb
jecxz
sub
add
sbb
loope
and
adc
js
int3
adc
sub
ret
push
cli
dec
mov
shrb
adc
in
ja
or
fnsave
mov
dec
out
nop
add
add
lahf
xor
and
ja
pop
gs
dec
imul
sub
adc
and
xchg
movb
leave
fdivp
push
or
add
sahf
scas
xchg
xor
xor
push
pop
fisttps
add
aas
dec
jbe
jne
sbb
lods
scas
inc
testb
xor
les
xor
das
sub
pushf
orl
push
mov
stos
fdivs
push
sub
xchg
int
andl
cmpsb
sbb
jge
cs
sti
mov
stc
enter
icebp
testl
out
loop
cltd
out
jmp
pop
fldcw
push
scas
add
dec
repnz
add
push
add
cltd
fs
add
cmp
arpl
ljmp
sahf
and
cmp
leave
adc
loopne
fs
xorl
or
jns
xchg
daa
int3
lea
mov
jns
ficompl
in
push
rcll
aad
enter
and
or
ret
fmul
fimuls
jno
ss
mov
cmp
aaa
or
lret
cmp
pop
cmpsl
pop
lods
xchg
scas
inc
xchg
xchg
inc
hlt
inc
and
jnp
in
push
mov
adc
jle
cmp
scas
sbb
adc
rcr
xor
ret
inc
stc
into
pop
ret
imul
mov
and
adc
int3
and
out
data16
stos
insl
jge
repnz
mov
fdivr
push
cmovge
mov
jo
push
aas
cmp
adc
xor
das
rcrl
jge
push
mull
bnd
test
das
fstps
or
leave
jb
cmp
or
mov
xchg
jb
and
push
cmc
dec
ret
scas
add
mov
adc
xor
jg
jne
sbb
enter
xchg
cltd
arpl
sbb
jl
stos
xor
loop
mov
arpl
in
add
xor
mov
aas
jnp
xchg
inc
xchg
aaa
hlt
xor
adc
xor
dec
and
test
mov
imul
pop
cwtl
rol
scas
add
loope
fwait
shrb
mov
js
rep
push
movb
stos
ljmp
adc
idivl
fsts
adc
xchg
inc
cmp
xchg
mov
imul
cld
sbb
pop
push
popf
mov
push
pop
pop
pop
mov
repz
pop
xchg
popf
push
addl
testl
sar
ljmp
shll
das
pusha
xchg
aam
adc
gs
mov
mov
test
pusha
mov
mov
ljmp
mov
mov
push
test
jns
cmpsb
je
or
cmc
inc
pop
shll
daa
add
insl
or
addr16
xor
or
and
sub
dec
add
out
push
es
ljmp
mov
mov
shlb
sbb
xor
ljmp
cmp
test
mov
imul
fsubr
pop
in
out
rcrb
daa
mov
mov
or
add
aas
enter
shl
pop
aam
je
insl
sbb
sub
call
nop
mov
arpl
mov
sbb
leave
rcr
je
dec
jbe
mov
mov
outsl
push
xchg
mov
rolb
rcr
push
pop
mov
addr16
in
cmpl
pop
jo
inc
adc
lahf
push
jge
lea
sti
inc
jl
ljmp
gs
inc
outsb
pop
inc
inc
mov
mov
mov
mov
insl
push
jb
mov
sub
js
mov
cmp
or
scas
adc
push
sub
pop
inc
pop
insl
popf
enter
sub
popf
movl
or
dec
mov
enter
xor
push
mov
in
insl
aaa
jge
inc
sbb
sahf
pop
xor
pop
loop
pop
test
xchg
sbb
adc
jle
data16
cld
adcl
dec
xchg
pop
stc
jg
lahf
or
mov
jnp
push
pushf
int
addb
rolb
fbld
sti
and
aad
mov
cmp
mov
addb
mov
popf
scas
jne
push
add
aaa
movsb
jns
jno
test
imul
rcrl
or
push
mov
rcll
jle,pt
dec
pop
sub
lahf
imul
adc
iret
imul
sbb
ss
jp
push
imul
stos
les
sub
pop
loope
imul
xor
ja
in
sbb
mov
in
lret
dec
gs
mov
jmp
cmp
test
jmp
mov
pop
dec
jo
push
jmp
rcrb
and
rclb
js
in
outsl
iret
rdmsr
js
pop
or
mov
or
mov
add
add
inc
jmp
mov
shrl
enter
and
and
nop
push
pop
jno
fisubs
cmp
hlt
sarb
fcompl
push
mov
iret
jecxz
mov
sub
sbb
dec
pushf
mov
sbb
movsb
xchg
das
cmp
test
mov
adc
sub
push
dec
jg
lods
ja
std
hlt
das
inc
cmpb
sub
lahf
pop
popf
test
ja
arpl
mov
push
int
mov
jo
pop
into
jns
repz
pop
xchg
sti
mov
mov
add
out
in
and
inc
push
jae
sub
pop
les
jae
out
and
sahf
rolb
lock
sub
shrl
xor
mov
xlat
loopne
push
push
je
pop
aaa
mov
jecxz
xor
cs
js
inc
insb
loope
mov
mov
test
adcl
push
insb
mov
pop
inc
push
cmp
add
mov
scas
jmp
je
push
mov
dec
loopne
leave
xchg
sbbl
pop
dec
or
iret
repz
push
ret
imul
jns
dec
pop
rorl
loop
cwtl
fstps
aaa
dec
int
inc
dec
mov
push
subb
and
mov
push
cmp
enter
or
shlb
pop
loope
daa
cmpsb
and
sub
push
push
push
test
xchg
or
les
sub
cli
add
adc
lret
rclb
cmc
cmp
sahf
test
mov
iret
mov
jg
sbb
out
testl
xor
rcrl
lcall
ja
and
xor
mov
test
inc
dec
ja
push
cmp
mov
out
add
mov
inc
mov
jge
pop
mov
enter
add
or
inc
addl
xchg
imul
lods
adc
mov
jle
repz
ljmp
cli
xor
insl
sub
cmp
in
rcrb
pop
or
das
xorl
pop
sub
cmc
lods
in
pop
push
movsb
push
sbb
mov
add
jg
mov
sahf
pop
push
mov
inc
sub
mov
in
sbb
cld
hlt
iret
test
inc
insb
fmuls
sbb
fldl
ret
inc
roll
cmp
lret
xchg
scas
daa
roll
xchg
subb
or
jg
je
pop
mov
pop
dec
pushf
orb
cli
insl
jmp
ficompl
leave
sbb
pop
jle
inc
imul
sub
hlt
adc
outsb
mov
shr
out
pop
sub
insl
sbb
loop
xlat
inc
sub
push
dec
mov
dec
in
jg
test
dec
into
stos
out
sub
sub
movsl
mov
out
into
stc
push
cmp
sti
sbb
ret
cmp
lret
jp
push
ficomps
std
outsb
xchg
fsubs
dec
mov
dec
push
scas
adc
jo
je
aad
lcall
jle
imul
dec
fldenv
pop
push
js
mov
jnp
mov
cmc
in
das
xorb
inc
lea
jge
adc
repnz
xchg
arpl
mov
aaa
negl
jnp
sbb
mov
or
adc
shlb
pop
lods
int
adc
addr16
cmp
cmp
dec
mov
mov
loopne
inc
jmp
scas
icebp
jg
push
cmp
in
cmc
sbb
cmpsb
iret
ljmp
jae
jmp
xor
std
cld
mov
lds
and
pop
jmp
repnz
loop
push
mov
xorb
mov
jae
push
fcom
pop
sahf
jmp
ljmp
stos
lock
push
repnz
mov
push
mov
iret
push
cmc
movsl
xchg
cltd
or
imul
aas
test
in
mov
push
xchg
mov
clc
add
mov
cs
mov
push
jns
sbb
sbb
xchg
sbb
and
jle
sub
inc
les
mov
add
aaa
inc
and
cmc
mov
add
setge
xchg
pop
push
dec
xchg
repz
sbb
arpl
loopne
movsl
sub
mov
mov
mov
jg
test
ljmp
loopne
addr16
push
das
mov
and
mov
mov
addr16
cmp
ss
lea
aaa
jp,pt
adc
stc
in
add
mov
repz
fstl
xchg
and
mov
ss
or
push
mov
stc
int3
or
jmp
pusha
or
test
sbb
sti
pusha
xor
fnstsw
mov
cltd
inc
mov
jne
out
ss
add
mov
cmp
ret
mov
stc
popa
inc
movsb
add
out
stos
les
and
iret
lea
xor
sahf
and
fsubl
ret
jno
xchg
sub
pop
adc
ds
jo
out
add
lret
lds
mov
mov
sbb
in
mov
pop
jmp
outsb
mov
mov
xchg
sub
jno
cmp
or
sbb
pop
iret
jmp
pushf
jl
sub
mov
inc
andl
cmc
test
loope
xor
push
mov
sbbl
inc
sti
out
xor
idivb
shlb
les
cmp
push
pop
daa
add
mov
sarl
and
or
les
movsb
filds
sub
mov
outsb
push
sub
mov
orl
icebp
addb
ja
mov
sti
mov
fs
mov
mov
ret
fmuls
adc
mov
mov
negb
xchg
sub
mov
neg
test
roll
xchg
add
add
repnz
cmc
dec
fisubrl
xchg
sti
out
insb
or
sub
xor
push
stos
add
out
hlt
iret
mov
les
enter
test
mov
fcmovnbe
pop
dec
inc
mov
cmpxchg
mov
xchg
cld
sarb
int3
addr16
push
bound
push
daa
and
push
bts
push
add
xchg
add
aaa
popf
add
je
adc
xchg
mov
xor
jb
outsl
push
sahf
mov
mov
inc
leave
dec
jnp
sub
mov
dec
cmp
adc
dec
jnp
push
lea
mov
cmp
jecxz
insl
jmp
int3
stos
rcll
in
loop
bound
pusha
test
loope
adc
fstpt
lea
and
sbb
mov
hlt
add
es
jl
inc
xor
cmp
cmp
call
lock
add
clc
pop
xor
and
cmp
sbbb
jp
loop
push
pop
mov
gs
inc
or
jo
nop
pop
push
or
pop
sarl
outsb
mov
sub
mov
xor
in
adc
out
xor
xor
lcall
push
pushf
jno
or
lcall
pop
jg
sub
xchg
int3
inc
jo
sub
jge
add
adc
addr16
xor
bound
out
repz
idivb
scas
sti
or
add
and
bound
jp
imul
mov
and
sbb
popa
and
sahf
and
cmp
into
adc
hlt
dec
pusha
loope
insb
sahf
fwait
cmp
cli
imul
out
pop
or
popf
inc
fsubl
cs
aaa
aad
stos
es
mov
add
cmp
or
ret
rclb
inc
sub
push
mov
data16
jae
loop
test
cmpsl
enter
stc
mov
and
stc
add
cmp
outsl
push
pop
pop
arpl
notl
adc
xchg
add
sbb
mov
or
mov
add
in
rolb
cmp
sub
lea
adc
imul
xchg
loopne
stos
sub
in
in
inc
or
lock
push
out
lods
aaa
dec
shll
push
pop
sbb
cmpb
ret
es
sub
mov
xchg
aad
xchg
mov
inc
aam
divb
cmpsb
mov
mov
cltd
iret
mov
xchg
ja
movsl
push
in
jns
insl
mov
xlat
jecxz
adc
ja
outsl
aam
add
jns
mov
lods
int3
mov
cltd
test
les
xor
sarb
push
or
lret
lret
daa
das
mov
push
or
mov
mov
lock
xor
adc
in
stos
mov
cmp
ds
jb
jno
pop
imul
xchg
xchg
mov
inc
sti
loop
inc
push
nop
adc
rclb
test
adc
fldl
xlat
xor
cli
inc
mov
loopne
mov
shlb
adc
xor
sub
aaa
jns
pop
loopne
cli
dec
stos
jbe
jge
adc
dec
push
jge
pop
lret
nop
loope
inc
lea
mov
xchg
sbb
test
jns
push
jnp
adc
ret
stos
mov
into
inc
adc
mov
jecxz
push
mov
sti
push
xchg
pop
push
sub
jns
jle
sti
in
mov
mov
add
sbb
mov
and
push
push
or
push
add
gs
xchg
iret
repz
mov
into
push
cmp
int3
in
mov
lds
push
stc
cmp
shll
xchg
mov
imul
pop
sub
aaa
fwait
sbb
jp
xchg
xchg
pushf
mov
out
in
mov
and
mov
and
add
ret
push
or
outsb
xor
dec
xor
das
xchg
mov
sahf
lock
insl
inc
ret
stc
sub
mov
popa
adc
fstl
sti
shlb
sarl
aad
and
and
jge
add
jo
mov
leave
jg
scas
aas
loopne
push
pop
dec
dec
xor
cwtl
sti
push
inc
xlat
add
lahf
sub
jo
pop
in
sbb
in
xchg
arpl
dec
and
pop
test
aas
xchg
mov
mov
or
jge
aam
or
mov
test
nop
or
ficoml
pop
aad
mov
repz
or
scas
popf
mov
arpl
sub
out
or
repz
es
pop
pop
fwait
cmpsl
test
fsubrs
xchg
xchg
push
cmp
lock
jbe
pop
pop
mov
push
dec
in
rcll
inc
mov
aas
out
sub
sub
jnp
and
das
aaa
fs
cmp
cmp
je
mov
int3
daa
outsl
addr16
xor
lock
repnz
mov
inc
jno
lahf
push
mov
aam
inc
repnz
out
lds
negb
inc
lods
xor
es
or
sbb
adc
gs
add
movsl
je
sub
or
inc
jo
negb
jecxz
mov
push
xor
into
loope
mov
subb
ss
adcl
push
xchg
jne
sbbb
cmp
inc
cmp
cs
inc
dec
in
aam
popa
sub
icebp
xchg
sbb
aad
ljmp
call
cwtl
sub
sub
cmp
mov
adc
inc
push
pop
nop
in
adc
rorb
jmp
sbb
mov
jnp
outsl
dec
shl
mov
push
in
or
test
inc
insb
mov
and
push
push
xchg
jg
movsl
repz
cs
ljmp
lahf
push
mov
sbb
sbb
shll
xchg
pop
push
pusha
aaa
jno
mov
xor
sbbb
sbb
hlt
loop
jecxz
push
adc
mov
dec
jae
jge
je
daa
test
adc
cmp
negl
outsb
rcrb
mov
lds
sub
inc
cmpsb
lret
xor
sub
das
add
mov
pop
push
pushf
mov
dec
cli
stc
or
into
and
cs
xor
das
inc
lds
fwait
sbb
stos
sub
enter
mov
andb
bound
mov
daa
ror
xlat
mov
pop
jmp
test
int3
imul
inc
movsl
cmc
pop
mov
sbb
mov
pop
mov
pop
lcall
daa
lahf
loopne
push
xor
ss
push
cmp
sti
add
testb
and
mov
mov
in
out
scas
jp
jl
outsl
mov
mulb
sbb
std
jbe
sbb
cmp
mov
lea
or
hlt
lcall
pop
jae
push
inc
adcl
cmp
xchg
xchg
stos
or
outsl
push
cwtl
push
out
std
mov
fistpll
insb
pop
jl
dec
aas
pop
das
sub
cmp
or
sbb
in
lahf
cld
int3
mov
mov
out
insb
pop
jl
dec
aas
pop
das
sub
cmp
or
sbb
in
lahf
cld
int3
mov
mov
out
insb
pop
jl
dec
aas
pop
das
sub
cmp
jg
outsl
fcomps
fsubrl
or
sbb
xchg
pop
andl
xlat
mov
repz
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
out
outsb
pop
out
testb
mov
or
push
fbld
jbe
push
scas
push
mov
mov
jle
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
push
into
incb
push
mov
push
push
sahf
mov
jle
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
push
mov
inc
out
jne
adc
pop
fstl
inc
mov
mov
lahf
adc
push
xchg
in
cmp
and
scas
lahf
push
mov
cmp
leave
lods
add
pop
sub
and
xchg
scas
jnp
mov
adc
inc
push
push
fists
outsl
fistl
das
lock
jnp
adc
add
outsb
push
sbb
subl
into
mov
xchg
dec
push
dec
out
mov
es
pop
push
std
call
xorl
jnp
push
es
push
int3
push
xchg
xchg
mov
into
jb
push
push
sbb
jno
xchg
pop
aam
lret
mov
xchg
pop
out
enter
cmp
lret
inc
lahf
es
and
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
push
mov
inc
out
push
fisubs
jbe
push
scas
push
sahf
mov
ret
xor
add
jge
dec
lcall
imul
aas
pop
push
mov
stos
add
inc
loop
repz
cli
js
mov
push
negb
dec
ficompl
iret
jbe
lods
or
stos
adc
push
xchg
pop
or
outsb
xchg
jg
cs
push
cmpsb
push
mov
inc
out
push
fisubs
jbe
push
scas
push
sahf
mov
jle
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
push
mov
inc
out
push
fisubs
jbe
push
scas
push
sahf
mov
jle
imul
repnz
hlt
jmp
es
adc
pushf
sub
cltd
xor
xor
popf
jo
or
je
inc
iret
pop
sbb
lds
fisubl
fisubrs
insl
repz
das
xchg
pusha
xor
pop
mov
loopne
cmpsl
ss
in
sti
adc
cwtl
sti
jge
jge
push
cltd
imul
sbb
leave
stc
ja
in
mov
jnp
in
jecxz
pop
or
out
xlat
fnstsw
test
unpcklps
mov
jge
and
xchg
adc
loopne
subl
test
mov
addr16
xchg
hlt
je
xchg
rcrb
and
js
je
xchg
adc
repz
xor
mov
fmull
xor
xchg
or
push
or
pop
pop
fisubrl
xor
jge
mov
pop
jno
xchg
mov
repnz
insb
jae
lock
sub
push
shlb
lods
mov
leave
inc
xor
outsb
xlat
cwtl
lcall
or
sahf
or
mov
dec
int
adc
jl
adc
scas
test
push
sti
xchg
sbbl
lds
mov
dec
and
xlat
sbb
mov
add
nop
fcoml
stos
loop
in
into
hlt
jp
gs
pusha
popf
ret
ficoms
push
loope
addr16
rolb
inc
push
stos
inc
pop
sub
push
cli
popf
bound
sub
sub
subl
js
in
add
insl
xchg
mov
mov
imul
pop
das
and
imul
lock
je
sar
pop
mov
cmp
jge
test
sbb
cmp
mov
xchg
dec
or
xchg
push
in
subl
xor
jae
pop
mov
lret
pop
sub
adc
inc
push
insb
js
je
xchg
insl
xor
mov
jbe
mov
subl
ljmp
leave
add
repz
or
test
jns
inc
or
jae
and
mov
mov
dec
or
fdivrs
insb
xor
dec
fwait
push
and
mov
sahf
push
aam
js
dec
add
inc
repz
in
xchg
push
push
jbe
pop
and
ds
pop
cvtps2pd
mov
in
and
mov
loop
outsl
idivb
xchg
iret
das
mov
mov
shrb
in
aas
das
dec
ret
stos
aaa
jl
or
or
adc
lret
xlat
and
mov
divl
ret
mov
mov
push
adc
mov
jb
les
out
stos
lods
int3
pop
xor
jmp
xchg
inc
gs
mov
test
pop
add
orl
adc
cmp
xor
xchg
xchg
mov
mov
inc
push
mov
mov
ret
or
add
push
lock
aaa
fidivs
lret
sahf
movlps
xchg
sbb
loop
movsb
neg
lock
mov
or
xchg
inc
mov
cmp
and
into
sub
test
gs
push
pop
jnp
hlt
test
mov
aad
bound
adc
cld
js
aad
cs
jnp
sti
add
lcall
dec
out
movsb
mov
sub
bound
inc
jg
fbstp
push
xchg
or
pop
mov
rorb
movsb
mov
mov
xchg
enter
test
aad
push
push
shll
in
dec
jns
fdivrl
aad
inc
scas
inc
icebp
add
sbb
loope
ds
dec
cli
mov
aaa
lret
dec
mov
dec
cmp
xlat
cmp
gs
rorb
notl
inc
mov
clc
dec
mov
mov
cltd
sti
xor
adc
xchg
push
dec
rolb
jae
scas
je
sbbl
jnp
jle
fiaddl
jno
loop
popf
aaa
pop
inc
jge
mov
outsb
mov
and
fstpl
hlt
add
dec
pop
cmp
sbb
inc
rcl
lcall
mov
inc
pop
aad
adc
mov
cwtl
xchg
xchg
arpl
sub
inc
sbb
cltd
mov
incl
and
pop
ljmp
lods
or
push
jae
xchg
iret
mov
dec
dec
rorb
dec
stos
data16
pop
in
push
cld
adc
xchg
repnz
cmp
mov
cmp
push
out
xchg
orb
out
push
xchg
and
dec
repz
or
in
sbb
xor
pop
mov
cmp
call
loope
jl
fnstenv
andb
dec
loop
cmp
mov
pop
jge
xchg
js
xchg
fiaddl
adc
mov
cs
aaa
mov
sbb
adc
pop
mov
pop
orl
test
jmp
leave
jno
loopne
add
jmp
lea
or
push
push
jmp
mull
xor
jp
stc
jo
repz
pushf
pop
lock
out
js
add
sbb
or
pop
dec
orl
xchg
jo
dec
jp
movsb
push
dec
stos
inc
ficomps
popa
pop
jl
mov
lahf
sbbl
mov
movsl
push
mov
aas
mov
xchg
jecxz
inc
mov
mov
push
jo
out
mull
jl
repnz
mov
xchg
jae
fwait
rolb
shrl
cmp
jl
gs
inc
jb
pop
rcrb
movsb
pop
xchg
cmc
pop
pushf
sbb
sarl
loop
mov
lock
movsb
and
push
bound
cwtl
sub
dec
arpl
cmp
test
xchg
mov
cmpsl
dec
and
arpl
jno
imulb
or
mov
cmpsb
loop
inc
sbb
xchg
movsb
xor
mov
mov
jp
outsl
xor
cmp
mov
jmp
lea
push
xchg
mov
xor
jmp
stc
or
ja
push
shl
stos
mov
mov
push
sbb
stos
scas
lods
xchg
les
ljmp
or
insb
mov
mov
xor
je
xor
loope
mov
add
cs
adc
pushf
mov
mov
xor
fcmovnbe
lds
mov
push
jecxz
adc
add
out
xorb
pop
rcl
cs
sub
rcrb
jne
sub
push
jl
xchg
mov
loope
cmp
sbbb
popa
into
divl
pop
dec
in
xchg
arpl
fwait
pop
sub
add
jo
fnstenv
cwtl
loop
jmp
orl
cs
dec
sub
ret
pop
lahf
aaa
sub
or
movsl
scas
push
ret
mov
mov
or
xchg
adc
adc
mov
dec
xor
push
aaa
or
and
or
stos
lahf
add
and
sub
shll
shlb
mov
aas
rorl
xchg
inc
jns
aas
mov
adc
sub
lret
addr16
adc
out
daa
lret
aas
loopne
mov
mov
ret
bndstx
mov
or
add
xor
cmp
add
aad
mov
fnstcw
push
cmpsb
dec
aaa
rorb
test
insb
jae
mov
les
arpl
sub
mov
movsb
movsl
fwait
lcall
add
sarl
jge
inc
pusha
pop
outsl
mov
dec
cmpsb
push
lods
scas
push
sub
pop
cmpsl
ret
jbe
lcall
push
cltd
xchg
enter
leave
xchg
fildll
rolb
inc
in
sahf
hlt
push
sub
stos
push
dec
int3
dec
sub
fcoms
cmp
sub
repnz
popl
mov
inc
out
xchg
xchg
ret
aad
cltd
xchg
xchg
ds
mov
pushf
and
mov
lahf
xchg
cwtl
pop
repz
sub
push
pusha
dec
xchg
or
cmp
jge
or
cmp
pop
out
fdivr
mov
xchg
fwait
loop
mov
xlat
mov
cmp
jmp
loop
out
adc
pop
dec
xchg
adc
mov
test
push
test
adc
sbb
repz
mov
cli
mov
bound
in
outsb
dec
xchg
in
dec
insb
test
loop
out
movsl
mov
arpl
add
out
lock
xlat
loope
nop
cmc
inc
push
lret
test
insb
cmp
dec
js
or
movsb
dec
dec
push
xchg
cmp
jb
aas
dec
and
inc
iretw
mov
push
push
sbb
push
sahf
pop
push
mov
pusha
mov
out
aaa
stos
out
imul
cwtl
jns
ljmp
mov
fsubl
or
cmp
mov
idivl
mov
jle
mov
lods
lahf
ficomps
mov
xchg
mov
push
inc
cli
xlat
cmp
mov
ret
movsl
out
jle
fdivr
lock
xchg
or
into
enter
stc
lods
dec
inc
inc
pop
je
inc
pop
xchg
pop
mov
aad
xchg
pop
xchg
xor
lcall
jno
inc
xor
and
lock
dec
movsb
inc
cmp
adc
mov
aaa
xchg
push
inc
cmpsl
jmp
xchg
sti
add
push
inc
scas
push
pop
fsts
pop
sahf
jp
mov
aam
cli
or
pop
popa
mov
mov
cmp
insl
aam
fucomi
add
test
test
mov
xor
ret
lcall
addr16
aas
mov
cltd
sbb
out
repnz
sbb
cmp
xor
push
push
in
mov
rorl
decb
icebp
mov
lahf
out
jge
cli
loope
lock
xor
les
leave
ret
cmp
xor
aas
lret
push
mov
arpl
cld
cld
mov
scas
lea
cmp
dec
adc
call
add
adc
sbb
push
shr
rcrl
shll
jl
cmp
fmul
fst
mov
into
jmp
lods
inc
dec
pop
mov
scas
mov
je
or
data16
aaa
push
adc
sub
push
popa
gs
pop
cli
lock
jnp
inc
inc
xor
pop
cmp
imul
cmpsl
arpl
inc
cltd
jp
jle
sbb
pop
int
jecxz
enter
sbb
xor
in
adc
adc
inc
and
push
xor
mov
rcr
bound
loopne
sub
and
shlb
mov
jae
lea
pop
dec
loopne
loop
dec
test
adc
loop
or
fdivs
add
fwait
incl
ds
jo
popf
sub
out
in
call
pushf
cs
ret
xchg
call
sub
int3
jbe
cld
lcall
sub
push
loope
mov
push
es
jl
add
gs
inc
icebp
out
into
out
pushf
xor
pop
cmpsb
pushf
sbb
lahf
dec
or
jb
into
addr16
addr16
mov
inc
and
xor
mov
por
mov
jp
movsl
pop
rclb
call
push
shl
outsl
sbb
mov
jge
cmp
inc
orl
jle
daa
ret
push
jge
adc
xchg
lret
cld
jnp
mov
vaddsubps
jbe
mov
loop
ret
mov
fmull
stc
inc
pop
fistl
pop
stc
aas
or
scas
bound
ss
xchg
ljmp
adc
push
cmp
addr16
loopne
jo
xlat
mov
mov
std
sbb
inc
lea
mov
repnz
sub
lock
adc
xchg
stc
and
test
add
aaa
sub
out
xchg
scas
add
mov
test
add
aas
icebp
in
outsl
notl
lods
subb
cmp
fldz
cmp
loopne
test
imul
xchg
mov
and
fdivs
pop
add
mulb
inc
mov
insb
pop
movsl
cmc
sar
pop
hlt
cmpsb
es
das
jne
pushf
inc
iret
push
mov
jmp
cmp
movl
adc
add
xor
stc
insb
aad
xchg
sub
jmp
divl
push
out
cltd
push
pop
lods
cmp
das
push
leave
daa
xor
data16
inc
lods
iret
jae
add
sub
in
loope
jmp
shl
inc
pop
cmp
sahf
inc
cmp
ret
cmp
outsl
add
mov
jecxz
jge
lods
cli
push
fcomip
cmp
sub
sub
lods
push
dec
in
inc
sbb
inc
adc
fbstp
push
jmp
mov
dec
xlat
sti
out
adc
lea
mov
mov
inc
jmp
pushf
mov
xchg
sbb
and
push
mov
aam
call
inc
loopne
fucom
lea
stos
cmp
sbb
pop
mov
iret
adc
cmp
daa
pop
insb
aas
mov
mov
outsb
xor
jne
test
adc
cmp
fimull
mov
imul
push
daa
mov
xchg
aam
push
repz
xchg
adc
push
addr16
in
sub
mov
inc
outsb
adc
xor
icebp
add
or
jo
sbb
scas
cmp
imul
cli
shlb
popf
loop
push
fisubrl
sbb
ljmp
inc
enter
add
movsl
popl
fisubs
test
adc
jmp
jno
and
test
dec
jns
mov
lret
xor
add
and
mov
xorb
mov
xor
cmp
mov
pop
je
imul
mov
fmull
pop
mov
add
add
or
xor
int3
and
jp
icebp
subl
nop
mov
mov
les
jno
jnp
cmpsb
lea
xor
xchg
sub
cmpb
ds
push
ss
ds
lea
sbb
mov
inc
rcrb
lds
mov
jl
cld
lcall
xor
mov
mov
add
cmpsl
push
cmpsb
repz
push
dec
jno
xor
sub
je
sbb
test
jno
fdivrs
nop
or
movsl
orl
outsb
andb
stos
ret
and
test
xor
std
jp
dec
insb
mov
outsl
mov
mov
fs
pop
dec
mov
lock
jecxz
sub
and
inc
cs
rolb
push
jne
and
ficompl
push
sbb
lods
sbb
test
or
xor
pop
leave
cltd
mov
dec
xchg
push
mov
mov
pop
jp
fiadds
mov
std
psubusw
sub
loop
mov
xchg
adc
or
fdivl
addr16
cmp
stos
insl
test
loop
int3
pop
sub
and
jle
into
loope
dec
jge
jmp
iret
in
js
adc
sarl
addr16
dec
leave
dec
xchg
jno
push
lahf
mov
and
add
xchg
clc
and
cmc
and
lods
aam
xor
pop
mov
shlb
fs
mov
sti
mov
pop
mov
mov
out
mov
adc
cmp
xchg
mov
imul
dec
inc
lret
or
fst
aad
jg
cmp
mov
add
sti
and
or
adc
subl
std
xor
xlat
ds
jb
dec
pop
lods
fsub
and
pop
cmp
incb
scas
mov
pop
aaa
fsubl
sbb
loop
adc
pop
inc
imulb
gs
or
cmp
outsl
cmp
xor
mov
jp
cwtl
push
dec
and
icebp
js
cmp
and
mov
sub
test
xchg
push
rcrl
sbb
repz
mov
adc
cmp
dec
inc
insb
cs
sub
jb
ja
das
push
ds
outsl
or
das
pusha
xor
out
jp
lds
xchg
jmp
cs
cwtl
cli
mov
add
jno
and
push
mov
xchg
jmp
inc
sbb
mov
push
mov
cmp
arpl
mov
cmp
scas
std
addps
sbb
ret
scas
cld
xor
int
ljmp
shlb
rolb
push
push
aam
jmp
mov
and
insl
xor
push
or
push
pop
outsb
mov
fisubrl
leave
pop
mov
shlb
andl
jp
fcom
or
js
mov
jecxz
js
fdivs
sti
or
aaa
push
mov
dec
xchg
repz
mov
mov
inc
mov
out
stos
in
leave
pop
jns
xor
pop
or
sbbb
ss
movd
sbb
mov
test
add
sti
or
fbstp
push
fcompl
out
inc
sub
pop
leave
cmp
dec
fcoms
mov
pop
adc
into
fwait
jecxz
dec
clc
push
push
or
shl
inc
jb
out
aas
cmc
cmp
mov
aas
add
shrl
outsb
stos
cmp
jnp
fistps
pop
add
lock
inc
or
jp
das
jmp
and
adc
bound
jg
mov
fnstcw
xchg
ficoms
push
rcl
pop
out
jecxz
addr16
in
add
jae
jno
cmpsb
idivb
sub
sbb
dec
ljmp
out
cltd
ret
addr16
dec
adcb
imul
mov
test
call
mov
mov
lock
sub
and
hlt
xor
hlt
mov
cmp
push
xor
mov
jg
lcall
pop
js
or
loop
mov
sub
xor
sbb
push
add
test
sahf
lods
mov
pop
int
push
mov
arpl
lods
xchg
cmp
outsl
sub
lahf
sbb
dec
sbb
mov
fisttps
outsl
fcoms
xchg
paddsb
int3
das
sub
or
mov
mov
xchg
pop
cmpsb
stos
test
push
ljmp
add
xchg
push
push
iret
js
mov
xchg
mov
iret
fnstenv
mov
dec
add
movb
dec
std
push
mov
and
pusha
fdivl
push
jecxz
sub
adc
lods
mov
lret
insb
pop
push
adc
push
sbb
dec
arpl
pop
mov
pop
out
ss
test
sub
pop
sahf
mov
mov
loopne
xor
pop
inc
mov
fwait
jne
pop
repz
lea
cmpsl
lea
mov
inc
mov
scas
cmc
data16
dec
or
lret
sti
jnp
rclb
add
loop
cld
sti
or
icebp
adc
push
or
push
mov
cmp
mov
sbb
outsl
mov
xchg
sub
push
push
rol
je
sbb
std
inc
cli
faddl
popa
mov
movsb
pop
movsl
enter
iret
pop
fs
je
push
xchg
imulb
mov
test
fsubrp
fsubrs
in
sbb
push
xor
ljmp
fistps
out
dec
cld
test
and
or
movsb
cmp
xor
sub
fwait
cwtl
loope
lods
ret
xor
mov
hlt
xchg
test
cmpsl
push
imul
fwait
mov
mov
mov
jle
and
pusha
adc
mov
loop
mov
ret
mov
sbb
lret
lods
lret
lods
jl
dec
hlt
enter
stos
cwtl
or
popa
mov
lds
add
and
fxch
loopne
icebp
fwait
in
dec
mov
repz
adc
cld
mov
xchg
inc
pushf
xlat
addr16
mov
out
aad
inc
int
cmp
cwtl
xor
addr16
or
addl
inc
mov
jl
test
mov
daa
jecxz
dec
mov
push
pushf
push
lahf
xor
fdivp
push
pusha
or
mov
sub
out
xchg
inc
mov
ficomps
cld
and
dec
pop
ss
mov
mov
push
data16
sub
loope
rol
outsb
push
and
dec
fiaddl
push
jp
xor
mov
mov
testb
stos
test
jmp
sbb
jg
jo
add
addl
sbb
shlb
sub
popa
xlat
cs
int
or
sub
jle
pop
adc
sbb
mov
jl
jne
push
rorb
dec
mov
pop
insl
movsb
aad
add
or
in
ret
xor
aaa
cld
push
push
jge
push
xor
arpl
xor
stos
jp
fs
push
sbb
les
xchg
mov
mov
rclb
leavew
jns
repnz
and
xor
scas
dec
pop
cmp
int
hlt
cld
mov
lds
add
in
movsb
aas
les
cmp
cli
sub
es
repz
sub
inc
fs
aas
pop
xor
xchg
rcll
es
popa
cmpsb
leave
pop
ds
and
pop
mov
rorl
testl
adc
dec
xor
inc
sub
push
mov
es
imul
testb
hlt
test
or
adc
and
scas
shll
or
data16
shl
dec
idivb
xchg
xchg
push
cmpsb
push
mov
inc
out
push
fisubs
jbe
push
scas
push
sahf
mov
jle
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
push
mov
inc
out
push
fisubs
jbe
push
scas
push
sahf
mov
jle
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
push
mov
inc
out
push
fisubs
jbe
push
scas
push
sahf
es
ss
outsl
pop
out
idivb
xchg
xchg
push
cmpsb
push
mov
inc
out
cld
je
into
add
mov
jmp
imul
adc
fwait
xor
sub
cmp
sub
jle
imul
loop
loop
adc
and
push
jmp
bound
sub
jnp
movlps
dec
loop
or
add
dec
mov
js
jno
mov
pop
xchg
aaa
lods
sub
cmp
cli
adc
test
fucomip
enter
sub
adc
xor
cmp
push
push
jp
mov
cld
inc
mov
fsts
lock
dec
ljmp
loopne
push
cli
xchg
scas
jmp
mov
inc
jae
lcall
pop
aam
in
cmc
daa
test
out
test
adc
incb
add
xor
adc
jb
sbb
leave
popf
cs
or
pop
testb
mov
sub
fs
ret
push
arpl
pop
jnp
in
or
or
ds
xor
jmp
pop
dec
xor
ret
xchg
rcll
incb
pop
repnz
stos
adc
sti
push
scas
inc
fldt
jnp
mov
mov
pop
repnz
xchg
ja
add
xor
and
push
stos
cvtps2pd
push
dec
out
int
mov
or
mov
inc
inc
daa
xchg
and
push
add
push
jle
loopew
mov
or
jmp
lret
ds
bound
xchg
sub
jnp
imul
repnz
loop
adc
and
push
jmp
bound
xchg
sub
jnp
imul
repnz
loop
adc
xor
aam
mov
test
mov
add
jmp
out
test
jmp
cmp
xor
and
or
xor
ss
push
fmuls
xor
insb
mov
jl
jne
ficomps
sub
adc
xchg
cltd
pop
sbb
in
mov
aas
xor
out
mov
daa
sub
ret
outsl
sub
add
js
or
imul
lods
test
scas
cmpsl
aam
cli
sub
lods
insb
push
xorb
dec
lds
mov
pop
les
fld
lea
fsts
int3
lock
add
adc
repz
cmpb
fs
fs
mov
stos
sahf
sub
or
jg
mov
push
jne
insl
push
imul
aam
xchg
mov
popl
mov
jbe
je
imul
jne
mov
lret
in
sahf
mov
test
pop
mov
inc
out
mov
scas
xlat
sub
mov
fdiv
lods
pop
aas
xor
jno
cmp
xor
jbe
and
into
sbb
xor
in
sbb
push
lahf
ret
or
mov
add
test
cwtl
mov
mov
sbb
into
mov
fdiv
pop
cmp
pop
cmpsb
sbb
stos
leave
dec
sub
mov
hlt
cmp
fucomp
add
pop
jmp
adc
push
jo
jne
jne
fs
ret
mov
push
roll
add
jge
inc
cmp
pop
data16
aaa
fistps
movsl
cmp
inc
mov
or
and
mov
push
mov
xchg
ret
repz
jne
inc
adc
movnti
and
fimull
outsb
ja
test
ss
push
test
mov
mov
mov
scas
fsubr
call
inc
sbb
loopne
mov
dec
sti
decl
pushf
xor
movsl
scas
rorl
inc
mov
pop
repnz
adc
mov
dec
cmp
mov
adc
sbb
sub
fcomp
jmp
dec
and
fnstenv
pushf
sahf
xchg
rcl
out
outsb
jl
push
pop
and
xchg
dec
xchg
xchg
outsl
ret
cmpsb
lods
cwtl
test
sbb
orb
mov
cmpsl
outsb
clc
lock
xchg
push
das
adc
push
and
std
call
and
jmp
and
and
or
mov
mov
subb
xlat
xlat
push
icebp
stos
enter
adc
lea
stc
ja
xchg
fisubrl
loop
jb
repz
xchg
mov
ss
sbb
xor
outsb
add
and
insl
out
cmc
and
ljmp
lods
pop
sar
fistpll
nop
xor
ret
mov
int
cli
bound
pop
roll
adc
jge
sbb
and
pushf
pop
sbb
mov
xor
sar
inc
ja
mov
push
cltd
nop
pmulhuw
push
aam
xor
scas
sub
fldl2e
push
addr16
call
popa
out
push
iret
adc
xor
inc
movsb
dec
les
std
inc
fimull
ret
arpl
cmpsb
cmpsb
ss
xchg
fwait
xor
cmpl
add
xor
adc
cs
jno
dec
rcl
pop
mov
imul
adc
inc
jp
lock
sbb
inc
push
cmp
inc
pop
je
ficompl
adcl
les
and
outsl
and
mov
divb
sarl
cmp
pop
test
repz
pop
arpl
hlt
cmc
push
out
sub
pop
iret
aad
cmc
pop
clc
sarb
int3
insl
jns
mov
and
mov
cmpsb
mov
inc
and
and
cmc
jns
cmp
gs
jp
jmp
xchg
insb
lock
rol
mov
lcall
leave
lret
ror
sub
test
pop
sub
into
mov
fwait
pop
push
mov
xchg
xchg
mov
sti
movsl
and
ljmp
pop
jmp
clc
out
xor
cltd
or
test
mov
test
aad
addr16
dec
fs
and
adc
xor
jge
lods
cld
push
aam
push
ror
leave
jp
enter
sarl
dec
dec
xchg
aaa
bound
jnp
stos
inc
mov
and
addr16
flds
pop
jno
out
call
push
scas
loop
jge
loope
loope
sahf
fwait
in
out
cmp
aas
inc
lahf
cmc
pop
lock
ret
xor
icebp
and
xchg
jmp
xchg
mov
lea
mov
insb
test
lock
jp
push
cmp
mov
xor
test
mov
adc
lret
and
xor
lds
and
lahf
loopne
in
cltd
push
jp
jne
jl
ds
mov
mov
jb
movsl
mov
mov
jle
arpl
loopne
xor
mov
adc
pop
push
adc
xor
repz
xor
cltd
xchg
inc
xchg
sub
int
stos
cmpsl
pop
mov
jbe
add
bound
int
lds
popf
push
and
mov
dec
test
push
test
mov
xchg
push
imul
add
xchg
push
fistpl
mov
mov
push
ja
scas
inc
in
pushl
mov
xchg
iret
js
repz
inc
lret
mov
stos
imul
inc
mov
mov
std
fcomps
mov
rcr
push
sub
mov
xchg
pop
or
push
xchg
mov
cmp
aaa
fstpl
push
adc
add
mov
fs
shr
or
movsb
repnz
inc
jecxz
xorl
add
addr16
shl
mov
sub
repz
aas
or
shll
dec
cmp
leave
pop
adc
dec
adc
mov
addr16
dec
mov
js
ljmp
aas
repz
jecxz
mov
mov
mov
out
inc
outsl
outsb
test
fldl
bound
repz
mov
dec
fcoml
push
add
add
sbb
and
jns
push
pop
dec
outsl
pop
push
out
setle
and
mov
lods
pop
add
or
or
sub
xchg
xchg
mov
adc
mov
fsubl
jns
movsl
stc
outsl
adc
inc
mov
xor
sub
jns
push
rolb
adcl
cmp
rcrb
mov
iret
cmpsl
pop
or
daa
pop
aad
and
or
xlat
ljmp
xor
push
addr16
dec
in
scas
jnp
fnsave
jb
shl
sbb
add
add
popa
mov
pop
sbb
jge
cmpsb
fldenv
jb
xor
cmpsl
mov
lods
jg
into
ret
jp
and
aam
out
ret
push
or
xlat
lahf
cld
ljmp
cli
xor
sarb
call
or
loopnew
insl
in
jb
add
pop
inc
or
push
add
jp
cmc
jge
pop
dec
add
cmp
cmp
pop
mov
mov
push
lret
lret
in
jecxz
into
xchg
mov
ficoml
jle
out
mov
add
jmp
cmp
jle
das
lods
lods
mov
roll
std
jnp
gs
cs
cld
pop
mov
mov
push
ret
pop
mov
mov
mov
pop
fstpl
push
inc
ljmp
fwait
rcrl
xchg
and
dec
push
mov
and
testl
cli
jns
pop
xchg
xchg
dec
lcall
sub
inc
cmp
movsl
mov
pop
test
mov
xchg
out
fs
cmc
stc
cmp
rcr
das
into
les
jmp
or
push
scas
cmpsl
popa
loopne
stc
pop
fstcw
shrb
in
sub
cmp
or
sbb
mov
sbb
loope
repnz
scas
sqrtps
dec
xor
dec
xchg
xchg
or
das
leave
mov
mov
fbstp
in
icebp
cmp
pop
cmc
pop
mov
mov
jno
hlt
mov
sbb
leave
push
aam
dec
gs
setle
sarl
dec
push
int
inc
push
fbstp
cmp
xchg
inc
xor
incb
scas
int3
hlt
xor
jl
dec
enter
pop
mov
pop
inc
enter
and
push
loope
movsl
cmp
addb
push
sti
scas
adc
add
xchg
adc
inc
aas
mov
pop
push
xor
fmulp
sub
sbb
xor
adc
add
int
addb
add
fsubrl
sbb
xchg
jo
mov
in
cmpsl
mov
pop
jne
lock
cmp
jns
jb
cld
xor
ss
cli
scas
pop
mov
fistpll
sub
imul
fldl
pop
insb
sub
out
fildl
pop
stos
sub
mov
aaa
std
data16
idivl
and
cmp
cmp
mov
cs
adc
and
xor
lret
icebp
pop
xchg
scas
iret
cld
fwait
push
xor
xchg
stos
iret
call
stc
sti
arpl
sti
lea
cmp
jo
or
sbb
scas
lods
mov
sbb
filds
fdivs
std
insl
jle
lea
fcoml
fsubrs
mov
mov
cmp
flds
movsl
into
mov
in
sbb
jecxz
and
jne
loope
js
mov
shlb
jo
push
lock
sbb
pop
xor
dec
filds
push
jbe
xchg
rol
sbb
nop
adc
adc
pop
mov
cmp
pop
add
movsb
insb
jmp
xchg
mov
xchg
xor
ficompl
ljmp
inc
inc
std
outsl
fmul
fwait
test
test
lock
push
sub
iret
popf
iret
mov
scas
insl
fnstenv
or
mov
mov
mov
jl
xchg
in
cmp
xchg
subps
jne
test
sub
xor
aad
jne
mov
mull
xchg
cmpsl
lahf
cs
cmp
mov
cmpsb
rcr
adc
xor
push
shl
adc
push
mov
std
leave
jno
pop
mov
loopne
inc
std
in
sub
push
mov
mov
inc
jo
int3
push
lea
ljmp
jl
pop
sub
icebp
pop
aam
pop
jmp
aad
adc
mov
int3
fiadds
cltd
push
cmp
push
sub
pushf
filds
dec
sahf
int3
pop
mov
scas
or
sbb
lahf
cmpl
mov
mov
orl
cld
inc
fisttps
jo
push
pop
mov
push
jns
out
cwtl
sub
out
cmpsb
sub
fwait
or
sbb
and
jmp
stos
mov
in
sub
fisttps
loope
mov
arpl
xor
lahf
mov
loop
add
rcrl
xchg
dec
test
lock
enter
push
fbstp
or
xchg
or
out
les
pop
mov
mov
insb
inc
lahf
mov
xchg
stos
xor
fadd
push
adc
sub
mov
mov
popf
cmp
cli
popf
hlt
mov
lcall
xchg
sbb
rolb
add
fdivrl
pop
xchg
inc
mov
repnz
dec
hlt
hlt
sub
and
mov
xchg
outsb
dec
sarb
mov
add
push
add
dec
mov
mov
cmp
mov
dec
mov
xor
in
incl
pop
jecxz
mov
mov
mov
jecxz
int3
pop
inc
popa
scas
jg
cmp
cmpsl
mov
jae
fs
jp
adc
shlb
cld
and
sub
scas
mov
shl
cmp
adc
push
lcall
xor
test
mov
jae
stos
mov
jb
cli
inc
cmpsl
es
adc
shlb
movsb
cmc
or
cmp
loopne
or
mov
dec
out
mov
pop
add
dec
xor
aam
insb
push
and
sbb
enter
movsb
rcl
in
xchg
lds
outsl
mov
push
mov
aam
xor
mov
mov
mov
dec
lret
out
push
icebp
mov
call
scas
bound
inc
inc
pop
mov
rcrb
aad
push
push
mov
mov
inc
mov
xchg
outsl
repz
addr16
aaa
xchg
xchg
push
cli
cmp
adc
xor
adc
orl
inc
mov
jl
mov
xor
cmpsb
bound
mov
adc
std
icebp
mov
add
in
push
repnz
call
adc
jb
inc
repz
dec
and
mov
lods
sub
pop
stos
lds
shl
in
stos
jnp
into
fisubs
xchg
cmpsl
sub
stos
icebp
jae
inc
ja
imul
test
cld
cmc
fldenv
loop
and
mov
inc
sub
js
lods
sub
je
push
repnz
aad
xor
pop
and
shll
lcall
sbb
pop
outsl
mov
push
int3
scas
test
mov
jae
pop
cmpsl
imul
pop
test
mov
cmp
push
cmp
inc
and
dec
sub
xor
lahf
jp
and
imulb
push
test
mov
das
add
xor
jae
sbb
sbb
test
jmp
inc
leave
cmp
in
and
inc
in
and
push
stos
sub
cmp
adc
ja
pop
std
jle
insb
enter
insb
inc
mov
lock
leave
adc
aam
mov
jge
xchg
cli
xchg
rolb
int
stc
pop
jmp
fs
stos
lea
mov
scas
andl
adc
and
ret
mov
mov
shlb
fwait
mov
sbb
pop
cmp
loope
mov
push
jp
xchg
inc
popa
sub
adc
dec
jbe
lret
jb
jecxz
movsl
and
sti
ljmp
mov
adc
stc
xor
xchg
movzbl
xchg
ret
std
in
inc
jne
bound
jle
imul
lahf
sbb
hlt
jecxz
shrb
in
mov
xchg
icebp
inc
in
dec
jo
lods
adc
enter
add
push
rcr
repz
cmpsl
fiaddl
ja
or
fildll
nop
adc
push
in
imul
pusha
js
call
xchg
out
sub
lret
shlb
js
aaa
jmp
sahf
or
mov
pop
or
stos
fadds
in
xor
xor
add
mov
or
shlb
in
insl
scas
cltd
pushf
mov
lods
leave
test
loopne
js
test
or
jne
cmc
mov
jl
ret
aaa
mov
cmpsl
shl
roll
jne
call
ret
ja
loop
mov
or
push
rclb
adc
outsl
aas
cmp
xor
mov
sub
call
insb
cmp
pop
cmp
rorl
icebp
cwtl
or
dec
and
jl
gs
fisubl
or
adc
lods
int3
cld
iret
adc
add
mov
pop
sbb
push
mov
adc
xor
nop
js
adc
rcrl
out
shrb
pop
ja
std
std
mov
xor
jo
push
fnstenv
addr16
in
inc
jo
xchg
fidivl
inc
notl
lahf
out
push
pop
outsb
mov
fwait
addr16
sbb
cs
mov
jb
arpl
mov
mov
mov
bound
aas
insl
js
sub
xchg
cmp
and
push
scas
stos
loope
mov
jnp
loop
cmp
xchg
ja
or
imul
push
fucomi
sbb
test
inc
or
popa
push
sahf
push
sbb
xor
xor
dec
xor
aas
mov
cli
int
out
xor
ljmp
add
rcl
cmp
sbb
and
fnstcw
lods
add
xchg
sti
jg
pop
mov
inc
in
xor
adc
jb
int
clc
into
mov
jge
insl
cmpsb
push
mov
pop
fwait
ret
and
jge
pop
mov
or
mov
mov
orb
or
aas
cmpsb
out
mov
mov
adc
push
xor
push
adc
cmp
mov
and
push
ds
rorb
cld
arpl
xchg
adc
inc
pop
cmp
jl
fcomi
push
lds
or
imul
ss
dec
inc
add
loopne
sub
mov
jo
imul
add
push
outsl
popf
xchg
pop
xlat
ficoms
test
cmp
ret
mov
cwtl
sbb
aaa
add
aaa
insl
sub
sahf
sbb
sbb
out
rorb
sbb
inc
xorb
fisttpll
xorl
faddl
xchg
sub
pushf
adc
jo
in
popf
imul
push
adc
daa
in
lcall
sub
inc
into
out
mov
sbb
adc
iret
dec
lds
pop
stc
insl
test
pushw
popf
or
je
cmp
push
enter
loop
js
unpcklps
fiaddl
mov
mov
jmp
ss
cmp
sti
enter
jmp
movsb
pop
cmp
sub
cs
push
popf
or
aad
pop
sub
test
sbb
inc
iret
and
lock
dec
sbb
push
idivb
cmp
ljmp
imul
out
mov
jl
cmpsb
lods
cmp
in
test
lahf
mov
cmp
popf
nop
loopne
fimuls
cs
sub
insl
xchg
dec
push
xchg
mov
lcall
mov
jecxz
cmpb
mov
jl
jmp
pop
or
cwtl
dec
jns
pop
pop
mov
lret
imul
ss
mov
pop
call
jno
sub
lea
xchg
lret
mov
imul
pop
stc
push
repnz
arpl
or
pusha
into
push
lret
jbe
icebp
lahf
and
pop
sbb
cs
fldl
cwtl
mov
ror
test
mov
mov
stos
xchg
outsl
mov
subb
dec
cmp
sahf
jae
mov
push
cmp
jno,pt
pop
or
push
sbb
and
daa
mov
popf
and
std
sub
xor
jae
fdivr
jne
mov
call
sbb
aam
sarb
and
push
loope
call
or
push
xor
xchg
xchg
dec
movsb
pop
ljmp
adc
pop
ljmp
hlt
cmp
sbb
xor
push
mov
in
rclb
ror
or
adc
fucom
out
out
xorl
gs
add
lcall
sbb
int3
add
les
mov
lods
leave
mov
push
ret
push
cmc
lret
cmp
aam
lods
stc
imul
icebp
or
jo
jns
push
jg
jae
outsl
jae
int
inc
adc
mov
jno
repnz
inc
daa
bound
pop
xchg
xchg
sub
dec
jge
and
das
lahf
orl
fwait
pop
loope
test
scas
ret
fisubrl
add
out
mov
mov
dec
cmpl
add
mov
daa
mov
sub
jns
mov
popf
mov
pop
mov
popl
mov
insb
hlt
icebp
lock
fadds
push
out
inc
jb
jp
in
push
pusha
lds
jl
add
mov
push
testl
mov
rclb
out
into
fidivs
fwait
ljmp
push
dec
sbb
jns
fwait
xor
aas
xchg
stos
adc
mov
ss
mov
adc
mov
xchg
repz
fmull
scas
cwtl
out
mov
pushf
mov
std
mov
das
bound
jg
ja
cmp
add
xor
cmpsb
ret
test
mov
fwait
mov
popa
mov
cmp
fldenv
push
or
jno
mov
ret
ret
in
inc
jo
mov
adc
ret
mov
je
mov
hlt
jo
movsb
sbb
div
fildll
aad
xor
daa
shlb
or
mov
rcr
mov
ja
xor
cwtl
dec
xchg
test
or
rcrl
xor
jp
jo
femms
dec
fwait
and
and
sub
shrl
enter
or
push
jge
std
sahf
xor
jge
pop
pop
lret
subl
add
and
inc
cmp
adc
mov
dec
push
jl
push
ficoms
pop
fsubs
push
add
xlat
iret
mov
cmp
es
stc
addr16
dec
mov
pop
jg
sbb
sbb
test
or
scas
nop
dec
sbb
fwait
cmpsb
shl
push
sub
and
adc
popf
add
mov
call
mov
or
sbb
xor
pusha
cld
stc
add
pop
xor
pop
fwait
mov
mov
and
jmp
adc
xlat
sarl
add
lods
imul
mov
push
jmp
bound
xchg
sub
jnp
imul
repnz
loop
adc
and
push
jmp
bound
xchg
sub
jnp
imul
repnz
loop
adc
and
push
out
inc
bound
xchg
sub
jnp
jb
pop
repz
mov
xor
inc
bound
xchg
aam
mov
or
or
jecxz
movsb
or
test
stc
into
fyl2xp1
cmpsb
out
jne
leave
jbe
inc
or
imul
cmc
mov
stc
cmpsb
jmp
xchg
cmp
push
js
or
imul
add
pop
testb
push
out
mov
pop
into
or
and
arpl
pop
or
out
test
std
popa
jmp
xchg
jle
sbb
adc
pop
push
dec
aam
mov
jbe
mov
imul
mov
pushf
inc
cmc
fildl
push
mov
inc
mov
lahf
mov
rol
cli
jp
fwait
sub
imul
jne
repz
gs
push
cmpsl
jmp
imul
mov
imul
inc
push
movsb
or
cmpsl
popa
mov
sbb
dec
xchg
cmp
imul
inc
jo
or
roll
cmp
repz
jbe
adc
push
hlt
xor
icebp
pop
adc
loop
push
cltd
mov
sbb
xchg
jmp
jbe
inc
cmp
arpl
imul
jg
mov
imul
scas
icebp
mov
lods
enter
add
jl
insb
adc
inc
pop
inc
xor
push
hlt
out
hlt
jmp
call
shrb
pushf
xchg
pop
push
jnp
sbb
jno
add
pop
xor
inc
aad
lds
stos
cmpsb
jmp
xchg
cmp
jbe
inc
or
imul
mov
mov
stc
cmpsb
jmp
xchg
cmp
jbe
inc
or
imul
mov
je
xchg
ss
or
test
sub
and
xorb
dec
into
cmpsl
push
pop
pop
xchg
push
cmc
xlat
mov
jb
jg
mov
in
push
mov
sarb
test
sarb
push
cmpsl
jp
in
icebp
pop
lds
dec
pop
cwtl
and
push
xor
pusha
xor
test
mov
outsb
insb
pop
adc
and
jle
imul
and
pop
dec
lret
mov
aas
out
adc
jl
push
bound
cld
mov
dec
mov
mov
adc
repz
add
test
test
nop
mov
shlb
sub
xchg
flds
or
stos
fldl
inc
dec
mov
repz
popa
pop
fbld
test
fdivrl
jb
push
adc
js
xchg
rcr
fnstsw
mov
dec
test
xchg
or
pusha
scas
mov
mov
sub
lahf
pop
cmp
xlat
lods
or
sbb
imul
xchg
aad
pusha
xchg
pop
cmp
sahf
cmpsl
push
cli
push
pusha
mov
push
lock
push
add
mov
cmp
adc
stos
dec
xlat
and
cmp
dec
sub
hlt
test
cmp
outsb
and
mov
mov
imul
dec
xchg
push
mov
sbb
enter
repnz
arpl
mov
fs
int3
or
mov
fs
lret
in
xchg
mov
out
mov
nop
lret
cmpsl
inc
push
insb
push
cmpsb
fidivs
sbb
lahf
fld1
mov
or
ja
cwtl
adc
push
mov
cmp
je
pop
push
mov
jp
or
rcrb
or
dec
sub
pop
rorl
loop
dec
nop
ja
cli
inc
roll
adcb
jle
or
aam
xchg
cmpsl
out
mov
dec
push
ss
lock
testb
xchg
jecxz
pop
enter
int
nop
cmp
mov
js
cli
or
inc
adc
mov
xlat
or
filds
and
sub
mov
js
stos
es
jecxz
repnz
push
repnz
xchg
cmc
or
stos
repnz
sub
or
dec
imul
scas
pop
lea
sbb
push
clc
repz
push
and
mov
into
xorb
or
adc
mov
xor
adc
stos
pop
cmp
mov
xchg
into
push
mov
or
stc
stos
call
imul
in
xchg
dec
es
js
cmp
aam
pusha
in
mov
dec
dec
inc
add
inc
cli
ljmp
hlt
dec
out
aad
fistpll
mov
sbb
sti
push
mov
ret
push
insl
dec
inc
fxch
add
pop
in
jp
pop
inc
xchg
int
fstps
stc
dec
mov
add
sbb
je
clc
pand
pop
stos
or
inc
dec
xchg
cmpsl
sbb
sbb
lds
fdivs
movsb
stos
cmpl
pop
inc
sbb
test
nop
std
bound
xchg
adc
cmpb
jge
xchg
push
push
push
stos
xchg
cmpsb
fwait
out
pushf
dec
mov
mov
fimull
xchg
jnp
cmpsb
into
icebp
mov
aas
dec
cmc
jb
testl
stos
rorl
fsubrs
mov
inc
test
fdivs
rcll
iret
scas
xor
repz
mov
adc
inc
pop
in
push
push
cmpsl
lods
jmp
and
rorl
cmp
popa
movsl
nop
add
jge
sbb
mov
outsl
lea
iret
inc
mov
xchg
fimull
xor
loop
cmpsb
movsb
push
cmp
in
ficompl
flds
mov
jnp
iret
gs
fcoml
sub
fnsave
stos
popf
mov
cld
or
adcb
lock
xor
add
push
mov
or
js
insb
in
div
cs
inc
outsb
das
cvttps2pi
repz
adc
mov
pop
lret
xchg
ficomps
xchg
mov
movsl
lds
inc
push
sbb
outsl
ret
in
lock
inc
cmp
aaa
repz
mov
jge
ds
arpl
movsb
movsb
adc
jle
fisttps
jge
and
add
inc
xchg
cmp
or
pop
ljmp
iret
or
jecxz
rclb
mov
jle
imul
call
sub
inc
cld
pop
scas
cmp
lcall
jmp
rcrl
jns
jge
outsl
jp
mov
pop
jmp
mov
xchg
je
push
ja
sub
negl
es
inc
hlt
add
ja
ss
in
pop
and
int
mov
mov
orl
in
adc
push
repz
imul
dec
pop
add
push
push
mov
mov
jp
out
sbb
adc
jmp
mov
stos
lret
adc
xchg
jmp
pop
dec
insl
mov
cltd
fwait
mov
mov
jle
lock
mov
inc
mov
rorb
aaa
arpl
testb
in
clc
daa
push
mov
pushl
sbb
mov
movsl
ds
mov
stos
loope
fsubp
fucom
movsl
lahf
lods
mov
sub
and
lods
mov
test
movsb
mov
popf
adc
mov
xchg
insb
push
shll
outsb
or
je
aam
imul
mov
bound
rcrl
dec
loopne
xchg
xchg
je
push
mov
mov
pop
in
mov
test
xchg
or
jl
mov
xor
out
mov
jle
sbb
fdivs
inc
sti
mov
pop
mov
enter
ret
mov
adc
ficomps
nopl
leave
adc
out
lock
repz
pop
mov
outsb
je
jo
adc
aad
and
inc
mov
ficoms
notb
mov
frstor
int
jno
nop
adcb
inc
fs
mov
nop
xchg
inc
lret
cld
or
je
jae
mov
inc
add
xchg
lock
fdivl
add
push
xchg
cmp
mov
xor
or
adc
mov
stc
pusha
fnsave
insb
dec
sbb
pop
sahf
pop
repnz
rcr
pusha
enter
jb
test
or
lea
aad
inc
mov
lea
xor
stc
push
cmp
imulb
out
xlat
and
repnz
or
adc
cld
cmp
cmpsl
dec
stos
add
inc
xchg
cmp
pop
mov
in
scas
mov
jle
jo
mov
inc
or
div
addb
and
aaa
and
cwtl
jne
in
push
scas
cmpsb
and
jnp
sar
in
popf
jmp
xchg
lahf
or
adc
ja
xor
mov
lcall
lahf
cwtl
dec
stc
push
pop
and
ret
es
in
jp
xor
adc
movb
mov
fcoms
xor
xor
int
mul
sbb
mov
imul
test
repnz
shl
or
mov
dec
pop
push
mov
pop
rep
in
movsl
add
jnp
sub
jne
and
addr16
fmuls
jns
and
inc
add
sbb
mov
jl
es
mov
shll
pop
inc
sbb
aad
repz
inc
rorl
es
in
sub
mov
scas
js
mov
cli
daa
mov
aam
adc
dec
ja
jb
jle
mov
movsb
ret
int
jne
lds
pop
mov
test
mov
mov
push
test
lahf
xchg
mov
jns
jno
sub
jg
mov
popa
add
ret
popa
punpckhwd
mov
sbbb
mov
lret
movsl
and
gs
or
xchg
dec
nop
and
xchg
shrb
inc
inc
sarl
xchg
adc
in
ds
push
push
mov
xchg
add
jl
hlt
mov
gs
jno
sbb
dec
data16
sarl
divb
sub
mov
dec
icebp
mov
lahf
xchg
sbb
xchg
xor
ret
js
daa
inc
adc
ret
sbb
notl
sbb
ljmp
shlb
mov
inc
sub
insb
and
ja
mov
inc
mov
jge
es
ret
xor
sub
das
rcrb
adc
movsl
sbb
mov
fnsave
jnp
arpl
push
or
fnstenv
stc
add
and
xchg
dec
mov
scas
mov
mov
lods
cmp
push
cmp
scas
loopne
popf
insl
stos
push
mov
adcl
cs
xchg
lret
aas
rcr
xchg
sahf
mov
imul
inc
aam
mov
and
enter
nop
mov
les
inc
xor
in
inc
xor
in
cmp
or
jnp
mov
mov
mov
dec
sarl
mov
mov
jg
loopne
or
mov
loop
jb
push
adc
xor
pop
aam
inc
hlt
inc
cmp
sub
adc
mov
jg
mov
stc
fdiv
fbstp
xchg
or
add
inc
mov
rclb
add
xchg
ja
xor
inc
sbbl
scas
xchg
cld
mov
push
mov
ret
jg
xor
dec
push
jb
fstp
push
lds
add
jno
cmp
inc
cmp
adc
mov
mov
mov
int
adc
popa
mov
test
cmp
cmp
dec
xchg
jno
stos
cmpb
adc
push
mov
daa
faddl
in
clc
xor
adc
adc
scas
add
movsl
bound
jae
jbe
stos
mov
in
sub
mov
mov
in
mov
push
je
push
sub
push
mov
mov
dec
cmc
cwtl
jmp
mov
xchg
fs
push
js
mov
pusha
fprem
or
sbb
inc
lds
cltd
push
jb
lds
add
add
push
sub
repnz
dec
out
mov
outsl
daa
inc
jle
out
aas
cmp
jns
dec
mov
loopne
cltd
lahf
mov
mov
ds
xchg
inc
sbb
sub
inc
mov
stos
imul
loope
push
sub
in
mov
mov
out
push
pop
mov
inc
pop
mov
mov
mov
mov
dec
enter
rcl
push
pop
dec
dec
mov
push
mov
push
jbe
push
mov
js
shrb
fisttpll
pop
repnz
cmp
nop
cmc
jp
imul
imul
mov
xchg
into
bound
sbb
fdivs
fs
cmp
inc
in
cmpsb
mov
cs
mov
loop
xchg
popa
mov
out
ljmp
add
push
dec
jp
rcrb
push
push
mov
cwtl
dec
add
rorb
dec
mov
push
cmp
xchg
roll
sbb
push
in
cmp
xor
push
inc
out
sub
jge
in
fildl
sub
and
sbb
jns
pop
adc
xchg
adc
pop
mov
call
repnz
lods
in
into
or
fwait
inc
pop
sbb
jle
repnz
fsubl
mov
mov
xchg
inc
sti
cmp
jnp
or
popa
mov
mov
sub
xchg
xorl
pop
ret
je
cmpsb
mov
stos
cld
push
and
xlat
fsubrl
sbb
ljmp
loop
inc
pop
aaa
jns,pt
mov
push
mov
sub
mov
stos
xlat
and
push
sub
xor
push
test
mov
jmp
jbe
out
and
adc
icebp
mov
mov
xchg
xor
push
outsl
pop
xchg
js
fidivrs
icebp
add
and
flds
or
jbe
mov
jecxz
xchg
nop
mov
or
stc
ss
inc
xchg
jno
in
push
test
jae
sbb
adc
fwait
scas
inc
ss
push
dec
mov
stos
jecxz
fistpl
adc
push
shlb
cmp
jbe
adcl
cmp
sub
and
lea
push
sub
loope
and
stos
shlb
mov
pop
sbb
dec
aas
push
mov
xchg
mov
pushf
mov
pop
mov
loop
cwtl
inc
mov
loopne
in
xchg
loope
stc
leave
and
xor
repnz
aad
jmp
xchg
push
dec
cmp
movsl
mov
xchg
fwait
lock
gs
xor
xor
cmp
mov
sbb
mov
add
inc
jns
pop
ret
cmpsl
lds
xor
xchg
add
ds
mov
mov
pusha
call
aas
or
in
xlat
fistpll
mov
sbb
enter
jb
dec
sbbl
lcall
ja
sbb
or
add
or
mov
or
nop
sbb
enter
dec
mov
mov
mov
popf
outsl
test
les
enter
cltd
push
outsb
dec
aaa
mov
ffreep
cmpsb
jp
in
jle
sbb
adc
dec
sbb
stc
xchg
mov
add
pop
movsb
or
mov
hlt
scas
fadds
in
ja
xor
ja
xor
push
cwtl
add
int3
pop
sbb
dec
xchg
lret
push
jge
inc
shl
daa
mov
inc
inc
inc
iret
add
sbb
mov
nop
mov
pop
sbb
mov
pop
cltd
sbb
outsb
fimuls
or
inc
daa
sbb
divb
lret
movb
mov
mov
push
fwait
mov
ja
imul
pop
sub
inc
imul
scas
mov
sahf
jg
pop
out
and
mov
ja
pop
mov
jo
adcb
pushf
dec
xchg
aas
jl
and
xchg
insb
les
or
sub
xor
rcr
jl
lods
rorb
push
and
out
pop
cmc
xor
loopne
mov
pop
data16
out
dec
pop
out
mov
icebp
add
insb
pop
popf
cmp
mov
mov
jne
mov
push
sbb
outsl
outsl
push
xor
sub
lret
adc
fcmove
lods
outsl
add
dec
dec
in
shlb
sbb
pop
jae
sbb
es
jecxz
xorb
xchg
adc
adc
out
repz
arpl
mov
imul
push
lret
sub
ds
test
inc
aas
aas
inc
xlat
and
scas
gs
xchg
sbb
mov
cmp
inc
rclb
or
sbb
cmpsl
inc
movsl
xchg
adc
jbe
mov
mov
aas
or
dec
mov
movsl
orl
test
in
sub
jb
popf
mov
std
xor
dec
inc
and
xchg
mov
fdivrs
or
xchg
pop
in
out
mov
and
push
jecxz
mov
inc
jno
test
push
scas
jne
mov
stc
arpl
push
mov
pop
jecxz
sbb
outsl
pop
sub
push
in
or
out
mov
sti
cli
shl
fisttpll
into
test
mov
addr16
rorl
icebp
jle
int3
mov
or
dec
sbb
pop
imul
or
int3
sub
aad
adcb
mov
icebp
push
addr16
mov
adc
ja
or
mov
mov
push
cmpsb
inc
pop
mov
call
mov
orl
lea
aam
out
popa
cmc
sbb
mov
out
lods
mov
cmpsb
bound
pop
movsl
add
and
inc
mov
and
sbbb
inc
jno
pushf
mov
mov
xor
adc
and
out
mov
test
sbb
mov
xor
or
fs
adc
inc
outsl
idivl
mov
aam
into
ja
mov
adc
cmpsb
mov
jnp
pop
aad
xchg
loope
push
std
mov
push
test
sti
hlt
or
mov
dec
bound
shrb
add
das
scas
insb
out
adc
pop
loope
push
int
sub
inc
pop
pushf
sbb
add
cmp
shlb
xchg
mov
repz
in
inc
xor
ret
fldenv
in
ss
sub
icebp
add
leave
inc
js
fisttpl
or
dec
aaa
in
mov
in
cli
jo
pop
jecxz
out
xchg
xchg
xchg
add
pop
pop
ja
test
fidivrs
pop
xchg
sub
popa
pop
aaa
inc
movl
jle
pop
mov
xor
inc
jo
loop
jae
mov
dec
aam
popa
test
stos
mov
movsb
dec
jmp
adc
movsb
cmp
xor
pop
in
add
xor
lock
jb
mov
rolb
cmp
add
mov
out
sub
in
stos
rcrb
inc
into
xchg
adc
push
fcomp
sbb
push
jl
in
add
in
lods
xlat
adc
ret
or
lock
jmp
fs
jo
lret
add
sbb
fldl
cmpsl
test
cmp
lock
and
ds
adc
pop
sarl
cmp
xor
imul
sbb
jge
in
pop
sub
lods
pop
mov
arpl
push
iret
mov
mov
sbb
subb
inc
or
lock
gs
mov
push
pop
ret
cltd
jl
in
test
jae
adc
adc
inc
pop
cmp
inc
jno
insl
loopne
test
xchg
push
clc
xchg
sbb
aad
fidivs
mov
ret
pop
sub
xchg
jg
pop
movsb
push
sbb
cmc
push
addr16
inc
sbb
fstps
sbb
jmp
dec
mov
cmp
adc
popf
out
es
fdivl
daa
sahf
fs
mov
cmc
imul
cld
push
jmp
call
clc
cmc
test
je
fs
jo
ret
setp
or
or
or
ljmp
mov
xchg
scas
dec
hlt
inc
pop
cwtl
pop
das
inc
pop
daa
lahf
pop
leave
dec
sbb
pop
mov
sbb
mov
push
dec
loope
lret
fistps
mov
mov
int
ficompl
fadd
andb
adc
pushf
mov
pop
push
pop
aas
das
fisttps
push
adc
and
push
cmpsb
adc
mov
testl
and
add
or
inc
jbe
inc
and
std
enter
xchg
fsts
pop
adc
or
mov
sahf
icebp
jl
jbe
lcall
push
ds
pop
adc
popa
adc
arpl
rcl
jg
pop
jae
std
out
adc
popa
push
add
push
cmc
aaa
sbb
adc
out
sbb
fs
dec
out
mov
ss
fistps
in
cs
mov
push
rclb
pusha
js
cmc
jnp
xor
push
nop
lock
ljmp
cmp
xorb
adc
and
outsb
je
jnp
icebp
push
pushf
dec
pop
imul
iret
ret
dec
in
add
fbstp
pop
leave
divl
xor
adc
ss
mov
jne
sub
sbb
loop
mov
in
mov
aaa
adc
enter
popf
stos
ds
push
shlb
mov
data16
ss
fstpl
mov
sub
pop
arpl
xchg
pop
leave
loopne
stc
in
and
sub
mov
push
arpl
ficoml
out
jno
xchg
xchg
icebp
ljmp
mov
cld
or
push
pop
imul
or
mov
xchg
jns
in
push
xchg
dec
add
mov
or
xor
fstpt
out
mov
adc
push
adc
std
ret
push
mov
hlt
out
cld
shl
ds
xlat
xchg
pusha
pusha
inc
add
jl
cmpl
sub
xor
dec
dec
and
pop
mov
inc
push
inc
popa
mov
dec
dec
scas
dec
dec
out
sbb
sbb
sbb
mov
lods
and
insb
jg
xor
jle
dec
xchg
jg
push
push
lods
push
negl
cld
icebp
lret
mov
ss
clc
adc
adc
stos
or
ffree
push
pop
jno
sti
bound
and
addr16
mov
or
pusha
adc
push
data16
popa
add
adc
ficompl
movsl
jns
sub
jmp
xchg
pushf
stos
jp
std
sbb
mov
xlat
xlat
ss
xchg
pop
xlat
sti
or
cwtl
xlat
test
xchg
in
sbb
movl
pop
inc
in
addl
filds
mov
mov
ss
enter
in
adc
mov
cmp
or
dec
mov
xor
out
nop
cwtl
xorl
xor
inc
jnp
jecxz
imul
inc
loop
mov
es
jno
ds
xchg
stos
call
lcall
shl
pop
adc
mov
sub
pop
int3
aaa
fisttpll
lahf
pop
jo
lds
repz
jmp
pushf
imul
div
sub
neg
mov
stc
cmpsb
jmp
xchg
cmp
jbe
inc
or
imul
mov
mov
stc
cmpsb
jmp
xchg
cmp
jbe
inc
or
imul
mov
inc
mov
imul
sub
inc
or
es
pop
push
mov
test
test
mov
xchg
cmp
fdivl
scas
loope
cmpsb
stc
mov
test
mov
push
loope
lahf
push
mov
and
sti
or
sbb
push
sbbb
pusha
mov
push
call
add
ds
cmp
or
sbb
push
sbbb
mov
es
or
and
loopne
sarl
jge
push
repnz
fsubl
xor
das
scas
leave
and
adc
add
repz
inc
arpl
ja
gs
call
pushl
out
xchg
pop
mov
idivb
out
aas
mov
out
push
or
fstl
shrb
loop
shll
add
xchg
loope
loopne
rcrl
lret
push
pop
push
test
lahf
jo
inc
lahf
push
xorb
xchg
rcr
fsubs
adc
aas
out
cmp
shr
sti
mov
lea
adc
xor
push
in
sub
xor
cmp
clc
movsl
mov
pop
sbb
mov
addr16
jae
insb
jo
adc
jge
clc
push
jb
mov
sub
insb
pop
cli
imul
push
mov
push
call
add
subb
cmp
ret
push
cwtl
pop
mov
into
sub
cmp
test
push
pop
mov
pop
mov
out
fildll
es
ss
fnstcw
imul
loopne
out
sbb
jecxz
adc
cmp
insb
clc
xor
add
adc
loopne
lock
sbb
push
sbbb
pusha
mov
push
call
add
adc
loopne
lock
sbb
push
sbbb
pusha
fldenv
adc
inc
or
cwtl
test
jmp
aaa
push
jne
inc
inc
dec
or
inc
lcall
mov
rorb
int
add
pop
jae
sub
cmp
es
roll
roll
scas
int
adc
mul
add
jge
imul
and
jg
inc
push
cwtl
ret
mov
jne
bound
inc
push
xchg
aas
push
int
or
add
imul
rclb
and
shll
pushl
div
ficoms
xor
xchg
pop
jnp
lods
inc
andb
stos
fmull
clc
cmp
popf
icebp
sub
mov
sub
mov
push
adc
pop
out
rol
push
add
push
mov
fmuls
push
rcrb
and
adcl
stc
pusha
dec
flds
mov
mov
add
push
push
dec
push
stos
iret
leave
rclb
and
lcall
jbe
shlb
xor
sub
sbb
pop
jbe
sbb
xor
jnp
movnti
push
testl
dec
rorl
jg
xor
push
in
pop
mov
pop
lcall
cmp
imul
pop
bound
insb
movsb
adc
mov
andl
inc
ds
fcompl
sbb
jne
out
lcall
mov
push
push
push
or
ret
ss
mov
xor
stos
mov
out
stos
mov
adc
inc
sahf
jmp
out
lcall
adc
dec
daa
das
out
ds
imul
xchg
shr
insl
sub
mov
cmp
or
cmp
mov
jno
sub
xor
nop
std
cs
test
pop
cmp
cmp
jbe
jb
sub
mov
cs
scas
iret
mov
ficoms
xchg
pop
mov
imull
dec
jnp
ret
sbb
daa
rorl
sarl
mov
inc
fisttpll
mull
shl
jg
and
mov
mov
jl
mov
into
inc
add
mov
dec
mov
insb
cld
lds
shlb
in
and
mov
mov
subb
jb
push
rolb
js
push
or
aam
dec
cli
mov
mov
out
fs
cmp
dec
icebp
push
mov
or
and
ss
sti
inc
int
test
outsb
push
xchg
push
jle
stos
out
fisubrl
sti
shll
out
and
mov
mov
mov
repz
in
int3
int3
enter
sahf
repz
out
sub
bound
cmp
std
dec
inc
dec
xor
mov
lods
xor
je
xchg
ljmp
mov
rcl
jne
push
sub
cli
lret
in
shlb
inc
sbb
sbb
popf
pop
and
sub
sub
lea
out
movsb
dec
push
dec
jne
lahf
aas
leave
push
lods
pop
lock
hlt
xchg
jnp
int3
or
je
xlat
les
mov
xchg
add
outsl
push
pop
out
loope
adc
mov
sub
xlat
insb
pop
mov
in
and
add
xchg
lods
push
adc
jno
ds
pusha
inc
xchg
jbe
sar
add
jl
mov
jl
mov
sbb
jbe
push
add
xchg
shll
imul
xchg
cmp
sub
cld
jnp
sbb
xchg
pop
std
push
arpl
jae
mov
push
or
mov
outsl
jge
fnstcw
inc
orb
jg
out
cmp
outsl
xor
daa
push
je
add
aam
out
cmpl
sbb
lahf
cmp
adcl
push
sub
add
repz
adc
dec
dec
insb
jp
rcll
lcall
in
dec
or
shll
mov
outsb
xchg
sarl
mov
je
pop
loopne
cwtl
adc
dec
mov
or
fdivrs
clc
lods
jle
inc
into
lds
xchg
mov
ljmp
orl
vhaddpd
and
dec
xchg
add
lea
xor
sarb
lods
addb
cltd
test
push
std
push
notl
mov
addr16
nop
negl
std
es
lret
sub
stc
xor
adc
xor
das
aaa
dec
out
add
mov
mov
into
xor
push
cltd
sbb
jp
mov
dec
sarl
testb
xchg
mov
addr16
xor
jecxz
test
loopne
jae
cmp
dec
out
push
xchg
loope
pop
add
lret
enter
and
test
sbb
xchg
imul
das
cmc
cli
rorl
int3
mov
mov
repz
aad
sub
lcall
mov
cli
pop
sbb
xchg
inc
mov
pop
pop
mov
int
pop
cld
stc
movsb
pop
jp
aam
pop
jg
sub
mov
pop
inc
xchg
adcl
sbb
mov
push
mov
pushf
lcall
sahf
push
movsb
stos
icebp
stos
push
enter
ds
ret
pop
mov
out
jbe
jle
sub
lcall
outsb
in
pop
fs
mov
add
push
sub
pop
inc
mov
dec
mov
dec
pop
adcb
bound
lea
mov
sub
pop
movsb
sbb
out
pusha
shrb
js
xor
pop
scas
orl
xor
lock
into
mov
jmp
sub
push
sbb
lock
fadd
xchg
mov
hlt
inc
add
jnp
jmp
cmc
cmpb
push
push
add
xchg
jae
shrl
test
push
inc
push
out
cmp
imull
or
icebp
lods
and
dec
daa
int3
aas
mov
mov
shll
rcrb
and
insl
mov
adc
outsb
rcr
clc
sub
cmp
inc
jecxz
outsl
push
std
ret
loope
pop
les
lds
fwait
ds
and
in
xchg
lds
jl
int
sbb
jno
movl
jns
add
lock
les
sub
mov
or
cmp
mov
xlat
pop
out
in
and
sub
loop
add
ret
sub
outsl
or
loopne
mov
mov
mov
push
and
pop
and
sbb
sar
adc
pushf
dec
test
or
xchg
stc
fidivrs
imul
loope
je
pop
adc
sub
cmp
xchg
xor
stos
push
jae
mov
jg
pushf
movsl
rorb
loope
inc
js
lcall
xchg
je
jno
and
push
shr
rorl
loop
ja
sub
push
shll
sahf
in
pop
test
sahf
and
repnz
in
popa
mov
rcrl
push
jp
adc
cmp
hlt
jle
fidivrl
insb
popl
jecxz
stos
pusha
inc
pop
inc
pop
cs
aam
loopne
xor
and
mov
outsb
adc
test
jns
or
outsb
lods
mov
xor
lret
neg
pop
mov
inc
add
fbstp
adc
jne
add
dec
rolb
pusha
test
pop
stos
lock
jne
adc
in
sub
add
int
or
adc
int
shll
js
das
ljmp
fmuls
lods
and
in
jecxz
fadd
popf
imul
in
mov
jns
cmpb
out
pop
inc
in
hlt
cli
jae
shrb
sarl
xor
xchg
pop
ud0
aas
inc
clc
lea
clc
les
addr16
or
faddl
arpl
dec
outsl
popf
push
adc
andb
hlt
insl
push
and
mov
jecxz
jp
mov
lea
push
inc
divl
ljmp
jns
xor
xchg
clc
and
je
inc
mov
cs
jns
lods
outsl
lea
lods
aam
xor
ds
lea
xchg
or
movsl
loopne
pop
or
adc
shrl
mov
int
xor
inc
ljmp
sbb
dec
fistl
mov
pop
mov
cwtl
popa
pusha
cmp
xor
jne
push
sti
cmp
cltd
pop
stc
xchg
aaa
shl
mov
lret
fwait
arpl
je
mov
lret
cmpsb
dec
jge
dec
scas
sbb
es
dec
stc
stc
je
in
fldl
cwtl
insl
or
pop
xor
sub
js
mov
pop
xor
push
into
cmp
xchg
testb
in
xor
sub
jecxz
sbb
mov
push
push
je
jg
lcall
inc
imul
jns
cs
sub
enter
xor
out
jnp
inc
insb
fiaddl
inc
jnp
leave
mov
push
sub
mov
adc
cs
js
loope
shufps
push
bound
nop
jb
ret
aad
sbb
lret
lret
dec
xor
cmpl
shll
les
jnp
movsb
shll
sub
testl
out
fisubl
cltd
es
xor
in
cmp
fwait
jl
aaa
sbb
sub
add
ror
sub
lods
sbb
nop
push
inc
inc
cli
mov
mov
or
sub
add
aaa
les
xor
shll
push
add
sub
sbb
xchg
cs
and
inc
push
movsb
mov
mov
js
test
shlb
pushf
xor
inc
mov
js
mov
cmp
push
sub
add
mov
shrl
sbb
fcomps
data16
pop
xchg
shll
push
les
adc
add
mov
adc
or
inc
addr16
jmp
lret
add
bound
xchg
mov
stos
mov
loopne
push
jecxz
imul
lret
test
iret
add
and
adc
ljmp
pop
aad
inc
mov
push
mov
jmp
jl
sub
xor
fwait
bound
inc
bound
cwtl
sahf
fstpt
push
mov
mov
push
and
scas
lds
adc
fstpt
cmp
lods
dec
add
pusha
sti
in
pop
adc
xchg
test
push
mov
inc
or
jno
pop
adcb
loopne
mov
std
dec
pop
ljmp
or
mov
xor
aad
or
lods
mov
lahf
jp
adc
aad
movsw
adc
dec
sub
arpl
outsl
add
cmp
call
push
cmpsl
dec
cmp
mov
or
call
jbe
jb
lods
mov
and
mov
inc
aaa
mov
push
sub
ja
jno
out
mov
jae
stos
push
push
pop
jbe
sub
sub
imul
xchg
and
out
mov
and
xor
add
sbb
xorl
in
popa
jbe
fs
jmp
dec
jg
xchg
fs
imul
inc
adc
push
jbe
add
in
sbb
push
lea
scas
leave
jns
popf
and
cld
jmp
sub
pop
lret
imul
jns
test
mov
in
test
out
push
ret
add
cs
dec
loope
push
and
iret
mov
out
stc
outsb
inc
fs
cmp
sub
jmp
lea
cmpsb
pop
ret
xchg
orb
dec
nop
mov
jae
lahf
rolb
ds
mov
jl
sar
pop
sub
mov
ret
addr16
faddl
pop
xchg
adc
lahf
out
arpl
push
jns
lods
insl
xlat
dec
loope
rcl
cmpsb
lock
into
int
test
fadds
mov
pop
into
pop
jbe
push
pushf
repnz
icebp
rolb
shr
rcll
sub
sub
mov
stc
mov
cmp
ja
dec
popf
pop
xchg
ret
inc
aaa
in
loope
sbb
push
pop
dec
mov
add
outsl
mov
inc
fcom
sbb
dec
push
addl
fnop
inc
push
jae
dec
insb
xchg
or
mov
ja
insb
test
jnp
cmp
adc
out
icebp
out
and
xchg
aas
xor
xor
adcl
scas
insb
dec
out
push
dec
adc
pop
bound
xchg
push
data16
repnz
call
adc
push
dec
in
fwait
pusha
data16
sarl
adc
sbbb
repz
push
sub
xchg
or
addr16
push
pusha
pusha
js
or
into
outsb
insl
sbb
je
fmul
mov
xlat
ja
int3
push
cmp
les
rcrl
inc
or
imul
push
std
jge
pop
and
ret
mov
and
fdiv
xlat
push
dec
xor
xor
fnsave
adc
pop
cli
insb
jp
test
sub
fcmovne
push
fstpt
xchg
outsb
add
push
aam
dec
clc
shrl
sub
jl
pop
roll
cmpsl
add
fisttpl
add
mov
sub
and
cmpsb
mov
nop
mov
xor
jge
or
es
mov
ljmp
mov
enter
pushf
and
and
xchg
xchg
daa
pop
dec
daa
nop
mov
xchg
cmp
sbb
call
scas
out
cmpb
dec
test
lahf
pop
pop
divl
sub
add
push
pop
adc
xor
xchg
sbb
xchg
mov
mov
call
xor
jp
sbb
jne
andl
in
xchg
lods
inc
lahf
pop
fdivs
lea
cli
test
and
dec
cltd
repz
sbb
les
xchg
jne
cld
dec
xchg
sbb
pop
sbb
insb
into
dec
fadds
out
cmp
adc
popf
sahf
jecxz
push
or
pop
jecxz
cwtl
andl
daa
int
cmpsb
cmp
sbb
bound
iret
dec
cwtl
test
outsl
nop
jbe
loop
mov
pusha
imul
dec
add
push
jae
stos
loop
pop
mov
dec
cmc
icebp
dec
xor
cld
cmp
out
add
repnz
scas
stc
xchg
cmpb
mov
gs
sbb
cmpsl
xchg
jns
stos
and
insb
sbb
aaa
ljmp
fcmovnb
pushf
xor
and
daa
mov
aas
out
repz
pmulhuw
dec
sbbl
out
jnp
addb
insl
mov
js
cmp
sbb
and
popf
cs
push
xchg
xor
stc
pop
sbbl
jl
adc
jns
in
daa
in
rclb
sbb
fcompl
leave
out
lcall
sbb
xor
mov
mov
mov
loope
mov
notl
rorb
sub
mov
fcompl
push
sub
stc
mov
sub
xor
rcl
loope
dec
dec
sub
cs
mov
pushl
xor
mov
mov
mov
aas
fwait
stos
mov
sbb
add
sarb
bound
mov
stos
push
stos
or
mov
pop
jp
dec
mov
mov
xchg
xor
add
test
out
jge
inc
mov
mov
bound
dec
fsubr
arpl
inc
xchg
pop
xor
mov
xchg
jae
push
jecxz
mov
outsb
ss
mov
add
xchg
aam
pop
out
and
or
ja
push
mov
cmp
sbb
jb
lods
roll
xor
in
cmp
mov
loope
mov
or
outsl
xchg
mov
cmp
into
icebp
rcll
pop
mov
mov
stc
bnd
decl
and
jne
mov
xchg
xorl
mov
or
sub
inc
xchg
xlat
das
dec
or
push
pop
mov
outsl
jg
out
jnp
and
jp
icebp
and
or
int
xchg
sub
adc
movl
xchg
cmp
pop
loopne
scas
push
arpl
call
into
stos
loop
testl
movl
and
dec
pop
mov
inc
adc
cltd
inc
sub
ret
ljmp
adc
outsl
les
push
sbb
dec
cmp
and
jp
es
pop
fistpll
push
es
add
push
fdivl
cmpsl
dec
sbb
mov
ror
ret
movsb
sbb
mov
lds
and
inc
cld
cmp
pushf
sbb
sub
push
push
push
inc
push
cmp
shl
arpl
pop
dec
sahf
or
movsl
xchg
movsl
xchg
add
fs
push
dec
pop
mov
sbb
adcb
out
js
rol
add
dec
push
pop
jecxz
fsubrl
mov
push
dec
stc
cmpsb
mov
inc
dec
pop
jg
movsl
stc
push
mov
lea
sarb
aam
loop
iret
out
and
mov
pop
pop
or
or
fldenv
je
call
sbb
js
mov
push
fsubr
ds
es
lea
xor
or
sbb
sbb
mov
lock
sbb
pop
sbb
cli
mov
pop
cmp
mov
es
ret
push
pop
loope
cwtl
lret
cmp
xchg
pop
andb
mov
mov
mov
sti
int3
shl
aad
push
pop
lret
or
in
xchg
mov
into
addr16
dec
xlat
cld
imul
pop
out
xor
lock
ret
lret
hlt
inc
sbbl
rolb
pop
ds
push
pop
addr16
jge
sub
test
push
push
inc
in
jnp
or
adc
jmp
dec
add
mov
sub
mov
push
pop
stos
jecxz
add
sbb
shll
or
ret
push
mov
pushf
inc
mov
xor
int
insb
sub
and
mov
and
loope
inc
std
add
adc
mov
sbb
push
mov
in
xlat
and
inc
roll
imul
dec
or
push
mov
pop
lods
in
and
mov
fs
xchg
mov
xor
sti
je
xchg
dec
bnd
mov
and
lock
lahf
push
or
out
in
scas
lahf
dec
push
stos
mov
jp
push
fwait
adc
xor
mov
pop
sbb
xchg
push
es
std
cwtl
int3
or
pop
aad
in
jl
decb
adc
push
xchg
push
cmp
insb
adc
cltd
outsb
inc
pop
loope
pop
scas
mov
xor
movsb
movsb
lahf
lahf
adc
pop
mov
sub
lods
lds
sub
repnz
lret
pushf
jnp
and
testb
repnz
nop
jg
fmull
xor
gs
in
fstps
dec
push
sarl
sub
fiaddl
dec
clc
loop
push
js
lock
test
je
in
test
cmpsb
lods
push
ret
popa
add
mov
inc
push
ds
mov
mov
xchg
out
jo
scas
lea
push
push
cwtl
jbe
and
outsl
xchg
push
subl
into
out
mov
mov
loop
ja
test
or
daa
dec
dec
nop
mov
mov
cwtl
mov
sar
inc
add
lcall
xchg
sub
push
hlt
mov
dec
ja
cmp
cmpsl
and
cmc
add
mov
adc
jns
mov
inc
jmp
outsl
xchg
or
xorb
jb
aas
frstor
fstl
add
dec
ja
add
dec
or
mov
mov
mov
xchg
lcall
add
mov
sbb
lret
lahf
loope
popa
call
inc
and
xchg
aaa
es
xor
cwtl
mov
out
push
sbb
mov
mov
fists
inc
pop
sub
fistps
push
iret
rcll
pop
add
sahf
inc
sbb
adc
ja
stos
repnz
je
push
push
mov
stos
or
pop
lods
pushf
js
lcall
in
cmp
mov
xchg
ds
or
push
adc
fsubp
popl
addr16
sarl
dec
sub
dec
mov
inc
jnp
movb
negb
mov
or
jecxz
insb
sbb
jb
out
stos
dec
daa
inc
jge
pop
push
movsl
les
in
jecxz
push
xchg
mov
mov
das
add
jl
push
divl
xor
out
out
mov
fstl
pop
andb
cmpsl
jno
xor
cmp
in
and
and
lods
rcll
cs
fst
loope
push
xchg
add
pop
cmpsb
sbb
push
test
jo
inc
cwtl
push
call
add
adc
loopne
lock
sbb
push
sbbb
pusha
mov
push
call
add
adc
loopne
lock
sbb
push
sbbb
fs
push
call
add
adc
loope
hlt
or
sbb
push
mov
test
mov
adc
and
xor
pop
rcl
pop
pop
mov
fdiv
enter
call
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
call
inc
fbstp
arpl
inc
shrb
andb
shrl
pop
repz
jecxz
xchg
sub
mov
fbstp
arpl
xor
ret
pop
repz
jecxz
xchg
pop
sbbl
bt
push
testb
xlat
arpl
xor
lahf
add
inc
out
pop
mov
fists
mov
ret
dec
sar
xchg
xchg
repz
mov
xchg
cs
cmp
push
pop
adc
cmpsl
bound
xchg
jmp
cld
sbb
sbb
cli
outsb
inc
mov
outsl
push
aas
or
mov
pop
add
xchg
sub
mov
jl
sub
sub
nop
cmp
aas
xchg
shll
lods
incl
jb
ja
adc
jae
loopne
push
mov
rol
rcll
bound
inc
adc
jne
xchg
test
rol
pop
das
loopne
pop
repz
btc
fsubrs
cmpsb
subb
and
pop
jecxz
insb
jl
pop
cmpsb
bt
push
testb
iret
arpl
xor
ret
inc
repz
jecxz
xchg
aaa
addl
mov
int3
jl
inc
rclb
push
jg
add
aas
decb
insl
xor
nop
adc
xor
jbe
sub
cmp
or
aas
cld
inc
in
imul
xorl
pop
cmpsl
pop
idivl
add
shrl
pop
repz
jecxz
xchg
das
sbbl
bt
push
out
inc
fbstp
arpl
xor
ret
pop
repz
jecxz
xchg
das
sbbl
bt
push
rclb
mov
adc
pop
lret
mov
push
movsl
les
popa
out
test
rclb
mov
insb
push
je
jle
sarl
push
cmp
mov
xor
imul
and
inc
add
lret
xchg
xor
pop
inc
mov
jb
lds
xlat
sbb
adc
lods
mov
stos
adc
cmp
mov
pusha
pop
mov
inc
fs
or
dec
call
adc
dec
scas
retw
jmp
xor
mov
mov
mov
mov
and
push
pop
xchg
cmp
xchg
pop
movsb
pushf
call
sub
adc
jo
push
xor
xchg
inc
jle
inc
jecxz
scas
bswap
stos
sarb
fdivp
fbld
xchg
dec
inc
jb
adc
ds
iret
shl
je
sub
fisubl
ljmp
mov
jg
test
lret
sub
jmp
inc
pop
mov
data16
xchg
ljmp
cmpsl
sub
and
dec
in
sub
cmpl
test
scas
ret
pop
fadd
orb
xor
dec
mov
jno
mov
mov
jg
mov
pusha
pop
in
dec
js
repnz
push
fdiv
jl
rorl
or
ret
xchg
stc
test
rcrb
and
outsb
pop
std
mov
dec
or
push
mov
pop
mov
jbe
dec
inc
jne
xchg
rolb
lahf
flds
add
pop
jmp
or
call
cmp
xchg
or
jnp
int3
xchg
ljmp
popa
xchg
rcl
inc
push
inc
cltd
pop
clc
pushf
nop
mov
sbb
lods
xor
clc
cmpsb
ljmp
xchg
add
call
xchg
jl
cld
pop
mov
push
xchg
pop
cmp
mov
ffree
mov
cmp
mov
sbb
ds
xchg
xlat
or
push
or
adc
and
jecxz
pushl
out
dec
xchg
xchg
out
shl
out
fildl
xor
iret
add
aad
enter
les
scas
push
dec
cmpb
cli
cmp
in
sbb
jb
push
shrl
inc
into
shll
call
in
sub
jge
stc
mov
push
sub
inc
pusha
test
push
test
pop
or
fs
jae
or
and
add
or
test
popa
insb
aam
dec
push
mov
mov
int
test
rclb
sahf
cmp
test
std
fs
jge
dec
dec
out
je
pop
lods
inc
stos
dec
std
ffreep
dec
rorl
hlt
add
push
and
sbb
sbbl
test
mov
fisttpl
nop
bound
inc
jecxz
jmp
lret
or
xchg
cmp
push
jmp
shrl
mov
in
std
pushf
sbb
jecxz
cmp
aas
clc
sub
enter
sbb
jne
mov
pop
aad
push
pop
dec
or
mov
stos
rcrl
test
mov
inc
dec
mov
test
aad
pushf
dec
dec
mov
das
sbbb
mov
cmp
push
data16
dec
adcb
jmp
fsub
xchg
dec
cmp
nopl
sbb
ss
inc
mov
mov
hlt
dec
test
mov
into
jnp
in
sahf
push
adc
addb
mov
inc
cmp
lods
mov
mov
int3
hlt
xor
mov
mov
add
arpl
add
adc
ds
and
popa
fstpt
xchg
mov
push
mov
add
push
mov
add
xchg
sub
and
dec
push
dec
jns
jno
xchg
icebp
mov
add
hlt
pop
xacquire
sub
es
inc
mov
fwait
push
adc
push
jmp
jno
or
push
jge
or
ljmp
fld
rol
shl
jmp
sub
ret
jbe
outsl
or
notl
xor
je
xchg
faddl
fistpl
clc
push
scas
xchg
imul
data16
leave
mov
add
push
sti
push
gs
andl
and
inc
dec
add
aaa
aaa
mov
push
mov
sub
in
outsb
xchg
inc
fdivrl
jbe
cmp
or
outsl
pop
lret
aaa
push
mov
add
jp
out
mov
mov
mov
outsl
push
adc
icebp
add
mov
inc
jbe
mov
pop
rclb
cli
nop
orl
adc
push
sbb
xchg
movsl
add
pop
pop
call
jb
push
mov
pushf
bound
ljmp
sbb
aad
test
jle
orl
scas
aas
and
pop
pusha
iret
mov
mov
test
jl
sarl
pushf
or
iret
out
ds
adc
xchg
repz
out
xchg
daa
push
iret
fptan
sub
jg
ljmp
cmp
pop
jo
data16
jo
mov
andl
cmp
mov
push
mov
dec
aam
jge
fistpl
mul
ljmp
lods
loope
jo
cmp
ds
scas
das
stc
sbb
rcl
sbb
push
and
adc
pop
pop
pushf
stc
popa
scas
add
lds
imul
and
cs
push
add
jle
and
and
in
fisttpll
mov
imul
pop
mov
xchg
mov
fwait
pushf
jmp
std
rcll
subb
jmp
add
in
cmp
cmp
lds
std
sbb
loope
packsswb
sbb
addr16
lods
cmpsl
mov
sbb
cmc
xchg
and
cs
xchg
inc
enter
movsl
rcll
cs
test
mov
adc
cmc
inc
xchg
adc
sbb
ror
jno
mov
mov
addr16
jge
scas
or
xchg
xlat
push
jmp
xchg
cmp
dec
dec
add
fld
or
inc
js
push
xchg
out
add
inc
adcl
xchg
dec
xchg
hlt
movsb
fdivrl
pop
add
aas
add
idivl
stc
or
test
stos
lahf
lods
cmp
icebp
decl
dec
and
xchg
and
mov
out
test
stos
loope
sbb
or
je
push
inc
je
lods
lock
adc
out
and
aas
mov
mov
outsb
jl
cs
add
ljmp
push
les
xor
cmp
lods
inc
jecxz
in
les
xchg
push
stc
outsb
and
popf
pusha
xchg
jo
std
movsb
sub
xchg
jecxz
pop
pop
lods
push
movsb
sub
push
xor
test
in
cmp
push
aaa
and
push
jb
popf
int
ljmp
out
add
or
mov
inc
fidivl
cltd
movsb
aad
sbb
xor
mov
scas
out
clc
sub
scas
lahf
fcoms
inc
mov
xchg
dec
inc
cli
cmp
xchg
sub
inc
push
lods
int
shll
jmp
pushf
insl
jge
loopne
inc
mov
pop
movsl
pop
xor
push
push
jno
mov
mov
xchg
loope
xchg
pop
aam
stc
pop
mov
cmp
js
bound
fs
getsec
dec
mulb
push
xchg
xchg
in
into
cmp
loopne
mov
dec
jnp
mov
mov
push
mov
dec
sbb
push
out
fs
mov
mov
sub
dec
xlat
mov
jno
or
lret
mov
jmp
fnstcw
jno
or
cs
sahf
inc
imul
jecxz
mov
jo
cmc
out
iret
fsub
mov
rcr
icebp
pushf
push
aas
stos
adc
jge
test
add
subb
jle
outsb
mov
mov
iret
sub
out
dec
hlt
or
sbb
and
insl
nop
adc
and
int
adc
jge
outsb
sbb
dec
jbe
xchg
add
xor
mov
rcrl
adc
fwait
cmpsl
repz
sub
lret
scas
ljmp
sub
or
jne
ss
mov
das
addb
mov
sbb
arpl
jg
xchg
sub
in
adc
scas
clc
and
cltd
inc
lock
int
mov
jnp
xchg
idivl
add
sub
mov
into
dec
lcall
orl
rcll
pop
lods
pop
lcall
mov
xor
mov
jae
pushf
scas
jecxz
xor
in
dec
and
sbb
test
insl
pop
mov
add
loop
push
and
or
pop
inc
jb
sbb
mov
xchg
lds
fnsetpm(287
sbb
add
adc
movb
loopne
push
insl
or
mov
push
jno
call
dec
mov
cltd
sub
push
es
loopne
test
pop
pop
out
sbb
cmp
mov
add
dec
dec
jbe
imul
sub
mov
push
bound
xor
add
xor
dec
dec
scas
std
sub
cmpsl
ret
mov
dec
inc
mov
fists
sub
xchg
cmp
stc
loop
xchg
leave
xorb
aaa
repz
jmp
push
add
mov
ret
lret
lock
aam
rcl
and
test
test
adc
in
and
fs
mov
xchg
dec
dec
movsl
inc
mov
mov
outsb
and
add
pusha
pop
icebp
xchg
jb
call
push
pop
xor
ja
fcmovnu
or
clc
sbb
push
repnz
sub
jb
jmp
xor
iret
outsl
inc
sbbb
add
xchg
notl
sub
sbb
inc
scas
mov
pop
loopne
jo
inc
xchg
jecxz
adc
inc
inc
mov
subl
outsb
cld
stc
pusha
adc
jbe
mov
test
cld
sub
aaa
xchg
inc
mov
adc
jmp
push
mov
outsl
sbb
and
mov
into
outsb
fcoml
inc
jae
dec
pop
xlat
addr16
fldcw
jnp
pop
popf
sbb
mov
rcll
les
add
ret
into
add
push
mov
push
sub
or
ror
mov
adc
dec
or
mov
mov
jb
push
out
dec
xor
repz
test
and
add
xor
xchg
loope
hlt
repz
push
mov
add
in
lea
xchg
push
fsubs
testb
fstpl
outsb
jg
and
push
or
cmc
mov
inc
mov
pusha
cmp
daa
inc
aad
out
or
cld
mov
jo
push
popa
je
adc
pop
rcrl
pop
sahf
mull
mov
push
movsb
dec
mov
sbb
popf
daa
icebp
sbb
scas
test
repz
or
pusha
test
stc
lahf
loop
jle
push
add
pop
dec
loop
lods
sub
or
repnz
adc
dec
ja
dec
les
out
cltd
test
xor
xchg
out
out
jge
jbe
jle
call
jne
mov
adc
or
jno
inc
cmp
es
and
test
pop
adc
pop
data16
mov
cmpsb
push
stos
pop
mov
ds
ljmp
es
sbb
jae
repnz
mov
ljmp
push
sub
jp
movsb
pop
test
outsb
xor
xchg
repz
sbb
push
repnz
stc
mov
ljmp
lret
xchg
pop
pop
movsl
jge
in
xchg
int3
jne
adc
xor
push
popa
pop
ror
add
cmp
out
out
mov
sbb
orl
pushf
scas
mov
cs
in
inc
addr16
cmp
xchg
or
ljmp
and
divb
inc
int
pop
dec
leave
lret
jecxz
push
in
stc
std
mov
mov
inc
mov
sbb
daa
xchg
jle
pusha
icebp
ds
mov
lcall
jne
imul
dec
movsl
dec
pusha
dec
dec
and
in
aaa
test
and
out
lock
lcall
jle
stos
ja
or
dec
js
mov
bound
outsb
mov
leave
cmpsl
pop
divl
lret
and
sub
fsubl
hlt
sbb
les
jge
dec
xchg
fwait
pusha
test
pop
arpl
mov
lcall
lret
push
mov
pop
les
popa
sbb
mov
xor
icebp
lret
xor
popa
mov
jmp
lea
incb
in
test
jno
data16
ds
cmp
in
fdivl
dec
les
icebp
lock
sbb
xrelease
ror
sahf
mov
lahf
pop
fs
xor
out
dec
mov
hlt
pop
or
mov
pop
fsubl
cmpsb
sbb
inc
test
fldt
jo
sbb
dec
jmp
pop
xchg
fimull
xlat
jbe
or
jns
jae
mov
icebp
dec
addr16
fnstcw
xchg
mov
pop
sbb
fnstenv
mov
sahf
or
rorb
cwtl
lret
call
pusha
adc
cmpsb
inc
gs
push
fsubs
push
xchg
or
daa
xchg
aad
out
dec
push
mov
fisubl
int
inc
in
out
insl
in
jns
or
inc
mov
sub
decl
pushf
push
xchg
and
or
sbb
adc
sub
repz
lret
je
cmp
fisubrs
cwtl
ljmp
mov
cmp
int
add
xchg
add
and
mov
lret
jecxz
in
pop
lcall
xor
or
jle
fldcw
clc
mov
popa
adcb
sub
ss
push
rcrb
xchg
icebp
je
cmpsb
cltd
dec
xchg
loop
cli
imul
xor
sbb
addb
add
dec
add
leave
jb
cmpsl
clc
hlt
loopne
sub
pop
dec
push
pop
add
adc
mov
sbb
sub
test
cmp
sub
adc
sti
test
ret
push
divl
daa
lods
mov
add
adc
add
xchg
out
mov
sbb
add
fsts
adc
mov
mov
or
mov
mov
cld
mov
sub
rcr
rclb
pop
sub
ljmp
aad
aad
sbb
push
hlt
outsl
push
pop
mov
es
in
jne
popa
push
hlt
gs
insl
scas
mov
mov
sbb
inc
cmp
pop
dec
sbb
sarl
inc
fdivrs
sarb
add
sub
out
adc
mov
add
pop
ss
push
lcall
fs
pop
inc
mov
and
repnz
icebp
pop
mov
xor
dec
shll
jne
inc
orl
imul
pop
push
jo
push
xorb
addb
pop
cs
mov
adc
fs
and
fcmovb
pop
andl
lret
fscale
mov
jmp
lock
pop
mov
mov
in
das
push
mov
mov
imul
mov
dec
push
js
std
in
sbb
push
jmp
imul
dec
test
ret
icebp
jae
xor
cmp
out
cmp
call
push
and
mov
jmp
dec
xor
add
jns
sbb
shll
mov
scas
arpl
test
sbb
loope
push
popa
sbb
sbb
outsl
ret
repnz
mov
std
push
in
mov
mov
jmp
bsf
mov
js
scas
loop
jo
cli
adcb
and
test
adc
scas
xchg
imull
mov
sahf
mov
adcl
sub
jns
dec
pop
mov
mov
jge
dec
or
push
cmpsl
fcmovne
insl
adc
fadd
repz
loopne
stos
or
test
adc
cmp
cmp
movsl
mov
and
cli
inc
test
dec
and
push
add
int3
out
dec
add
loope
adc
outsl
cmp
imul
int3
mov
pop
test
pop
stos
and
pop
jne
fsts
or
cmp
and
cmp
add
insb
mov
jl
outsb
inc
notb
sbb
dec
mov
xchg
jmp
ret
push
aam
stos
inc
dec
fildl
sub
mov
popf
idivb
sub
cld
int3
xchg
dec
sbb
sbb
outsb
sub
xor
sbb
lods
mov
dec
cwtl
mov
cmp
push
rol
and
ss
je
adc
mov
aad
mov
mov
lcall
pop
jbe
or
cmp
std
and
mov
mov
mov
lfs
loop
mov
mov
pop
into
addb
and
cmpsb
scas
lea
jle
inc
pop
stos
pop
lcall
mov
adc
xlat
sbb
test
sbb
out
and
adc
stos
mov
pop
mov
mov
sub
dec
xor
clc
outsl
dec
cmp
push
out
inc
aam
int
or
mov
jb
jecxz
pop
lea
push
pusha
dec
not
cmp
inc
arpl
aam
and
xor
cli
push
lcall
mov
pop
sub
xchg
xor
test
outsl
jl
xchg
mov
shlb
push
lret
pop
mov
pop
cmp
int
add
faddp
add
shrb
aad
call
jge
xchg
jge
cmp
jle
add
dec
or
inc
xchg
or
jl
hlt
mov
ds
mov
push
cwtl
inc
push
test
cli
fst
sbb
cmc
push
psadbw
jb
les
push
out
int
ret
andl
lock
lret
stc
sti
icebp
xchg
mov
dec
lds
inc
lea
sbb
jo
dec
cmp
scas
sub
fcomps
xlat
xchg
inc
mov
in
or
aaa
add
lock
lcall
movsl
outsl
mov
mov
lods
jmp
sub
dec
pop
scas
inc
sub
mov
add
lds
aam
int
dec
insl
std
adc
xchg
shrl
fscale
dec
fninit
xor
movsl
push
fidivs
lcall
lret
dec
nop
call
push
mov
rorl
or
mov
aad
inc
mov
xor
scas
sarb
or
enter
stos
dec
cmp
add
icebp
adc
in
cmp
or
xchg
mov
popa
popf
lcall
out
xchg
ljmp
aam
cmpsl
mov
adc
and
push
and
adc
stos
cs
loope
insb
xor
lret
inc
inc
pop
in
xor
fidivs
fsubrl
call
push
icebp
test
ret
pop
push
dec
and
inc
mov
jg
mov
xchg
and
cmp
sti
pop
cmp
xor
cmp
or
or
add
pop
lret
cmp
arpl
push
jbe
shll
push
shl
out
aas
cmc
or
rcll
ret
dec
gs
sahf
cmp
fsubr
mov
imul
xchg
mov
pop
bnd
cmp
int
pop
jo
cli
add
or
add
xchg
ljmp
std
lret
ret
pop
imulb
scas
xchg
xor
inc
mov
adc
mov
scas
mov
jnp
in
or
into
push
adc
jl
test
jae
ja
mov
mov
insl
cmp
and
icebp
fidivl
je
xor
dec
mov
mov
mov
or
sub
sbb
out
test
mov
faddl
fcmovnb
js
push
imul
push
and
pusha
in
xor
lcall
adc
adc
in
mov
adc
mov
stos
xor
mov
scas
sbb
sbb
cli
mov
mov
test
and
cltd
mov
shrl
hlt
lcall
jo
inc
dec
cmp
rcll
cwtl
sub
lcall
aam
mov
xchg
xacquire
out
fwait
jns
and
rcl
sbb
fsub
mov
iret
sti
sbbb
fs
or
push
xchg
test
xchg
adc
in
loopne
lcall
pusha
into
jnp
mov
mov
jl
cs
push
cmpsl
inc
xor
inc
js
lock
sarl
jne
or
push
fadds
sub
push
cmp
push
lret
scas
jp
mov
lret
lds
outsb
mov
sub
push
dec
jb
mov
jge
out
movsb
push
test
and
loopne
dec
test
icebp
faddl
int3
data16
in
sbb
jne
mov
cwtl
adc
pop
hlt
pop
pop
sbb
imul
sub
test
out
push
mov
clc
sbb
aad
iret
arpl
xor
ret
pop
repz
jecxz
xchg
das
sbbl
bt
push
out
inc
fbstp
arpl
xor
ret
pop
repz
jecxz
xchg
das
sbbl
bt
push
out
inc
fbstp
bound
xor
ret
dec
jecxz
xchg
sbbl
or
inc
fidivs
addr16
mov
faddl
repz
xchg
dec
sbb
pop
repnz
ret
cmc
shlb
testl
pushf
push
mov
and
in
add
repnz
ret
dec
mov
or
bound
xor
add
repnz
add
xor
mov
addr16
bound
pop
addb
lahf
insb
xchg
mov
dec
mov
repnz
xchg
mov
mov
mov
lahf
adc
jns
pop
xchg
daa
and
insl
cwtl
cmp
je
test
arpl
std
movl
sbb
imul
mov
out
pop
insb
and
or
xchg
push
ret
push
jecxz
movsb
rolb
mov
mov
insb
sbb
clc
jb
jb
fists
xor
icebp
dec
pop
adc
add
or
sar
dec
or
adcl
push
lret
add
iret
and
repnz
fisubrl
aad
mov
arpl
insl
insb
or
stos
push
pop
inc
push
in
cmp
lods
sbb
or
mov
mov
fs
bound
xor
and
adc
add
mov
mov
dec
cmpsl
pop
fimuls
cmp
add
sbb
loop
popf
xor
dec
fists
push
xchg
icebp
fs
je
pop
cmpsl
push
hlt
dec
into
adc
stc
pusha
clc
adc
pop
mov
pusha
mov
mov
dec
ret
js
jle
pop
xchg
insl
cmpb
bound
xor
and
adc
add
repnz
ret
dec
mov
jge
lea
push
lods
inc
mov
adc
add
repnz
out
push
mov
adc
ljmp
fwait
mov
push
mov
push
aam
leave
mov
pop
push
ljmp
pushf
xor
mov
xor
jno
mov
mov
cltd
push
aad
iret
jo
cmp
stc
std
in
aas
pop
movsb
out
js
lock
mov
jp
push
mov
ficoml
les
enter
movl
cmpl
pop
ja
dec
mov
rep
sbb
cmc
and
pop
xchg
cmc
addl
or
mov
add
lods
xlat
test
add
subb
jbe
jae
inc
mov
int3
cmp
jg
les
sbb
stos
sahf
inc
and
roll
sti
push
jns
dec
lds
mov
dec
jmp
mov
das
push
dec
jo
pushf
les
jne
pop
fstps
aaa
adc
outsl
mov
sbbl
lock
xchg
outsl
mov
fs
dec
insl
andl
cmp
std
es
push
jae
pop
cmpsl
pcmpgtd
or
lahf
pop
mov
dec
mov
rcrb
or
add
sub
push
or
cmp
push
ljmp
pushf
ss
cli
mov
lds
ret
lret
inc
xchg
xor
cwtl
xchg
int3
shrb
mov
dec
mov
xchg
cmp
ss
cmp
cld
jp
lret
mov
sbb
jecxz
jae
bound
test
xchg
leave
mov
xor
inc
call
xchg
sub
repnz
inc
cltd
xor
push
inc
sbb
ss
jbe
push
mov
jg
push
out
push
and
xor
mov
xchg
xor
jp
pop
and
xchg
dec
fstl
jp
inc
or
inc
mov
jp
clc
xchg
and
cltd
add
popf
or
sub
ss
dec
pop
pop
or
lods
lods
data16
daa
mov
insl
mov
sub
or
mov
pop
xchg
inc
adc
jecxz
dec
imul
and
jae
idivl
subb
test
sub
push
push
adc
sbb
mov
jmp
arpl
inc
insb
push
sti
or
cmpsl
nop
mov
jmp
stc
mov
sbb
ret
hlt
xchg
push
mov
les
inc
repnz
aaa
gs
push
xor
stos
push
into
mov
es
xchg
dec
imul
stos
push
mov
pop
sub
sbb
xor
std
jne
sub
in
dec
pop
jl
call
mov
das
push
ds
iret
cld
cltd
jnp
test
loop
test
inc
cmc
shrl
fsubrs
xchg
mov
lret
inc
daa
imul
and
loop
push
fdivs
fsubs
shll
add
mov
sub
pushf
stc
ret
pop
sub
inc
mov
or
jg
mull
scas
lret
add
mov
xchg
inc
negl
adc
jne
mov
xchg
mov
pop
popa
nop
call
pop
xor
adcl
xchg
add
mov
mov
lock
mov
xchg
int3
stos
jo
mov
loopne
icebp
add
dec
or
lods
xor
pop
popa
test
cli
lock
mov
pop
sub
leave
push
subb
movsl
rorl
fiadds
call
sub
xchg
adc
dec
mov
movsl
push
jbe
mov
insb
inc
ds
cld
jp
xchg
push
fs
in
js
fistpl
add
pop
add
stos
cwtl
push
aad
pop
popa
add
outsb
fdivrl
ret
movl
in
xor
push
lret
push
addb
dec
dec
frstor
outsl
cmp
repnz
sbb
hlt
dec
popa
push
cli
lock
inc
mov
out
mov
sub
mov
xchg
add
or
xor
mov
shlb
popa
lret
pop
and
ret
stc
mov
dec
ret
inc
loop
fdivp
mov
fsubr
jmp
xor
cmp
sbb
dec
notl
in
inc
inc
push
gs
in
xor
jne
dec
test
aam
adc
push
push
cmpsl
mov
loope
jae
cmpsl
insl
rcrl
lea
dec
xchg
dec
push
jne
sar
enter
lods
idivl
inc
mov
roll
jns
jns
push
mov
movsl
adc
mov
mov
insl
mov
out
sub
mov
je
mov
ljmp
pop
int
pop
imul
mov
bound
inc
sti
or
adc
mov
mov
repnz
arpl
das
sbb
loope
xchg
movsl
fs
mov
stos
out
leave
inc
push
in
out
outsl
sub
and
test
sti
int3
or
mov
add
sahf
or
or
loop
jge
xor
mov
shrb
cmp
jb
inc
mov
push
dec
and
test
push
or
push
mov
xchg
jnp
fcoml
pop
mov
adc
ret
loope
pusha
cmp
sbbl
movsb
popf
mov
loope
or
inc
lahf
fdivrs
sbb
orl
xor
mov
call
mov
imul
movsl
push
add
js
sbb
jp
icebp
int3
outsl
dec
mov
insb
fstpl
es
idivl
lea
add
pop
adc
test
ret
lds
adc
out
and
lea
ss
icebp
sub
mov
xchg
outsb
or
subb
xchg
push
push
je
jne
sbb
sbb
push
adc
fnstcw
cmpsb
jns
imul
hlt
sti
gs
scas
xor
pop
mov
dec
test
shlb
jbe
push
cmp
lods
sub
pop
sub
jbe
ds
inc
test
mov
ljmp
sbb
cwtl
ljmp
jno
adc
xchg
es
js
xchg
cwtl
loope
and
movsl
sti
sahf
popa
rclb
loope
notb
adc
xchg
out
xchg
andl
daa
test
movsl
jae
push
xchg
aas
jl
popf
stos
outsb
aad
call
cli
ds
fnstcw
jne
add
adcl
lock
jbe
lock
hlt
cli
push
adc
xlat
add
xchg
jne
movsl
cwtl
std
cmp
mov
xchg
cmp
femms
jl
jb
pop
sub
adc
push
add
push
jle
outsl
je
xor
inc
dec
jge
mov
lds
pop
ja
add
push
add
sub
out
or
cli
cmpsl
sub
xchg
ret
adc
ja
bound
js
mov
lea
sub
hlt
pop
push
sub
push
loop
scas
push
fildl
dec
dec
mov
push
mov
sar
outsl
cmp
testb
mov
mov
dec
jge
or
or
push
cmp
or
lods
mov
and
lahf
pop
or
int
push
arpl
mov
cmp
adc
mov
cmp
dec
in
shll
fisttpll
js
jl
ret
pop
add
mov
xchg
in
sbb
mov
and
sti
inc
dec
les
sbbb
stos
adc
test
dec
pop
sub
adc
sub
shll
jb
rcrb
cmp
sti
add
sahf
lea
ljmp
sub
stos
xchg
mov
mov
cld
jge
aam
lods
mov
or
popf
inc
repnz
fs
test
sbb
rolb
push
cmp
fidivl
icebp
xchg
cmp
clc
cmp
insl
add
sub
aam
inc
popa
adc
movsb
icebp
insl
mov
or
popf
mov
jno
inc
outsl
ja
movsb
fisubrs
hlt
or
cmp
adc
rclb
lahf
shlb
arpl
fsts
xor
arpl
pop
repnz
ret
or
rcrb
pop
loop
cmp
or
out
inc
pop
jl
add
and
pop
mov
aaa
pop
jne
or
movsl
pop
sbb
stos
pusha
pop
fbstp
mov
mov
or
and
lea
mov
pop
sbb
clc
dec
mov
sub
push
mov
lods
lods
fdivs
mov
cld
adc
ret
xchg
enter
xor
stc
imul
int
int3
mov
fisttps
xor
dec
jo
rcr
cmp
xchg
mov
pop
push
mov
and
fstps
mov
mov
lret
fwait
and
imul
jg
cwtl
es
sbb
mov
sub
adc
jne
push
iret
adc
out
adc
movsl
fwait
pop
js
testl
jae
imul
pop
dec
in
mov
xchg
pusha
mov
cltd
lds
cmp
mov
add
mov
jne
out
call
sbb
jg
adc
adc
inc
or
fidivrl
test
gs
push
sbb
ss
out
pop
add
jle
ret
out
xchg
mov
mov
or
xchg
lds
adc
or
out
lahf
mov
in
jnp
mov
in
in
das
push
jmp
outsl
xor
rolb
nop
xor
icebp
jns
lds
popf
add
pusha
insl
outsl
mov
or
push
mov
pop
inc
pop
or
push
clc
xor
jnp
push
or
call
adc
sti
push
dec
test
fcmovu
lahf
sbb
mov
std
scas
mov
lahf
mov
or
ja
aas
pop
mov
jb
filds
aaa
stc
mov
into
je
in
xchg
xchg
inc
enter
xor
inc
add
insb
arpl
push
push
push
fisubl
cwtl
subb
fwait
or
jbe
cmc
fld
mov
popf
adc
mov
push
dec
movl
mov
out
adcl
imul
in
movsl
pop
data16
sar
rolb
add
imul
test
ud1
xchg
adc
inc
push
scas
test
stos
and
lea
mov
fadds
call
push
add
les
xor
push
sub
dec
mov
out
dec
les
imul
out
pushf
sub
in
mov
mov
lea
pop
ror
or
les
shlb
aam
cmp
cwtl
push
lods
sbb
push
lds
mov
dec
aad
stos
push
cmp
add
fisttps
int
in
lods
and
stc
mov
into
roll
in
mov
cmp
je
push
jmp
mov
in
adc
inc
ljmp
int3
js
movsb
repnz
adc
stos
pop
lock
and
xchg
test
shlb
xor
jecxz
outsl
add
int3
test
test
jmp
aam
sbb
repz
stos
jge
sahf
gs
stc
aad
xor
nop
leave
cmovns
adc
mov
jl
xor
stos
ret
mov
pop
leave
cs
cmp
test
cmp
lds
push
fsubl
popa
pop
outsl
lds
xchg
fnstenv
inc
scas
pop
jecxz
call
sbb
ds
or
xchg
subb
mov
fcmovnb
inc
in
nop
xlat
mov
and
ljmp
mov
imul
scas
cmp
icebp
dec
jae
mov
lds
lcall
insl
cmp
aaa
dec
inc
pop
popf
jmp
int3
dec
pop
test
sub
data16
push
xlat
mov
insb
andl
xor
adc
scas
fs
xchg
mov
or
push
repz
xchg
repz
cmp
inc
adc
in
dec
fsubs
pop
scas
enter
xchg
fistl
pop
lcall
dec
scas
cwtl
mov
push
fyl2xp1
or
dec
or
fisttps
xchg
sub
sub
jmp
xor
daa
loop,pn
pop
sub
inc
call
lock
xchg
stc
es
mov
cli
movsl
mov
cmp
adc
jge
jb
popa
aam
sbb
pop
xor
mov
push
popf
push
imul
out
mov
roll
mov
mov
jg
notb
mov
sbb
or
pop
xchg
xlat
in
pop
add
xor
pop
push
dec
in
pop
daa
cmp
rorl
sbb
jae
or
sbb
ds
sub
fsubrs
sub
xchg
in
negl
or
push
xchg
sbb
ss
insl
adc
cmc
es
jmp
cmp
pop
adc
and
sbb
faddp
and
jno
test
dec
push
pop
fiaddl
dec
pusha
cmp
outsb
inc
es
pop
sub
bnd
into
aam
leave
cmp
loop
jmp
popf
imul
cmc
adc
nop
sub
orl
insl
leave
je
cmp
bound
and
sub
adcb
lods
xchg
adc
lahf
add
ret
mov
jmp
lods
faddl
xor
or
inc
lret
xchg
ret
fwait
aam
jae
jns
loop
dec
inc
push
jbe
jle
inc
or
lret
sar
aaa
pop
test
jl
push
and
out
fistl
enter
movsl
xchg
insl
mov
sbb
shll
aas
outsl
inc
gs
pop
fs
test
mov
cli
xchg
mov
or
push
sub
sub
jo
outsl
inc
test
jge
xor
dec
inc
scas
adc
xor
inc
push
and
inc
hlt
mov
xor
test
mov
xlat
xor
in
in
pmaddwd
push
out
popa
js
fs
fcomps
adc
xchg
data16
jl
cmc
mov
jb
adcb
ja
sub
dec
xlat
dec
pop
pop
insb
add
jmp
sbb
addb
add
aaa
fdivl
cmc
hlt
sti
push
pop
or
fxch
cmp
outsl
adc
iret
dec
insb
adc
sub
pop
int
jmp
jns
cmp
mov
and
push
xchg
daa
aas
push
orb
or
loop
push
orb
mov
clc
add
mov
fldt
sti
lahf
cli
mov
leave
addl
mov
push
jbe
das
add
push
jb
add
pop
in
out
pop
pop
inc
mov
ljmp
ret
rcrl
loope
sub
adc
or
mov
jns
xor
inc
xor
xchg
mov
es
bound
movsb
sub
gs
rcll
xorb
rcr
decl
fisttpll
bound
dec
in
ss
inc
negl
pop
lods
rclb
inc
dec
sbb
add
push
in
xor
fistps
or
jecxz
pop
inc
hlt
mov
dec
mov
mov
sbb
pusha
mov
fadd
sbb
xchg
dec
loopne
into
ds
hlt
xor
data16
popf
push
into
push
jae
cmp
cltd
cmp
jle
pop
push
dec
into
je
push
cmp
sbb
xchg
out
fisubrs
call
rcrl
push
or
lcall
sbb
add
loopne
and
lds
iret
mov
mov
clc
scas
popa
cmp
xchg
jne
frstor
xchg
sbb
xchg
inc
xor
pop
loopne
bound
stos
into
xchg
fistl
mov
test
pop
lock
lret
repnz
pop
les
decb
mov
add
dec
adc
out
mov
jg
sub
xchg
and
adc
iret
sbb
lods
pop
xchg
rcrl
mov
xor
dec
jb
aad
gs
stos
lock
loope
dec
in
aas
dec
out
fdivl
out
cmp
dec
enter
fsubrp
fldl
mov
mov
pop
in
jae
mov
imul
rorb
push
int
ss
xor
lret
xor
pop
jae
in
jbe
insb
out
ja
and
out
push
fmull
not
push
fsubs
int
push
jle
cmc
rorb
pop
dec
cmp
out
pushf
sbb
daa
xchg
bound
xchg
outsb
mov
rcl
in
mov
or
mov
pop
push
inc
push
push
hlt
outsl
lods
shll
sub
stos
fsubrs
dec
loope
mov
loop
out
js
sahf
push
dec
out
adc
shl
cmp
or
add
or
fldenv
xlat
notl
insl
sub
sbb
jns
jle
mov
lea
clc
imul
jae
xor
push
bound
test
mov
nop
test
pop
std
int
jl
push
pop
imul
test
push
push
or
jg
lcall
jae
cmpsl
outsl
aam
push
hlt
dec
icebp
inc
mov
arpl
jb
int
lcall
scas
stos
and
or
mov
sbb
imul
mov
pop
stos
in
pop
insl
cld
int
es
into
loopne
mov
adc
loope
rclb
aas
test
xchg
aas
mov
in
repnz
std
pop
add
jbe
adc
cmp
lods
adc
shlb
sarb
fsubrs
jo
or
adc
fsub
out
nopl
inc
xchg
sub
mov
push
popf
call
imul
mov
daa
mov
loop
lods
mov
mov
fdivs
push
rcrb
cmp
pop
mov
stos
pop
lods
add
push
fcoms
push
sub
pop
cmpsb
in
pop
lret
leave
icebp
mov
dec
xchg
inc
out
call
out
mulb
mov
xlat
pop
mov
mov
fldl
popf
xor
movsl
mov
scas
das
fildl
add
jg
ret
jecxz
mov
cmpsb
add
fnstcw
mov
pop
xor
movsb
call
ficompl
jg
ljmp
psrad
jmp
or
icebp
test
fs
pop
pop
scas
and
sbb
lods
mov
movsl
insb
iret
mov
and
pusha
arpl
pop
inc
aam
shlb
scas
mov
push
mov
loope
cmp
adcb
pop
fwait
mov
mov
scas
mov
or
cld
mov
push
orb
push
ret
jmp
xor
lods
iret
pop
mov
pop
mov
mov
mov
jmp
out
gs
les
test
fisubrl
fwait
repz
insl
push
xchg
test
push
push
inc
mov
push
pop
jbe
dec
into
loope
sub
into
sub
lahf
fmulp
mov
aas
add
popf
call
fldcw
xor
loop
jo
cmp
dec
les
mov
sbb
push
xchg
lcall
sbb
dec
das
pop
icebp
loope
push
xlat
pop
enter
mov
out
out
jnp
daa
inc
sbb
daa
push
aas
dec
add
stc
cmp
insl
mov
add
cmp
nop
icebp
imul
pop
and
das
rcll
sub
in
leave
fidivrs
not
add
addr16
out
pop
out
popf
inc
clc
mov
fs
shll
loopne
divb
mov
mov
dec
sub
bnd
inc
mov
mov
xchg
or
jecxz
in
inc
ljmp
je
sub
std
and
xchg
shll
mov
mov
cmpb
insb
dec
or
dec
femms
pusha
cmp
mov
jb
das
ljmp
aas
push
loopne
sbb
mov
jp
in
and
adc
add
sbb
inc
mov
pop
test
outsl
jns
push
xchg
dec
cwtl
pop
lea
cmp
imul
arpl
sub
xchg
mov
sub
adc
ja
mov
nop
xorb
movsb
xchg
mov
sub
scas
fisubrs
cmc
and
stc
sbb
test
xlat
mov
pop
shr
daa
jmp
or
mov
test
mov
add
jl
push
add
push
adc
in
sbb
add
push
data16
jne
pop
cmp
push
sbb
cmp
jecxz
out
lods
adc
sub
mov
in
push
in
bound
out
in
stos
je
stos
inc
leave
popf
bound
mov
adcl
cmp
inc
sub
out
clc
outsb
pusha
adc
add
xchg
and
cli
pop
mov
mov
cmp
lock
push
rclb
in
std
fcoml
fldt
loope
and
lahf
mov
adc
xchg
movsl
push
fistpl
leave
mov
sub
jle
push
pop
daa
pushf
dec
pop
mov
add
and
scas
cmc
sbb
pop
xchg
cs
sub
sub
dec
pop
mov
mov
jnp
inc
je
std
fimull
cmp
xchg
insl
cmpb
bound
xor
and
adc
add
repnz
ret
dec
mov
jge
lea
push
lods
inc
mov
adc
add
repnz
ret
dec
mov
jge
lea
push
lods
inc
mov
adc
add
repnz
sbb
sub
cmp
xchg
insl
cmpb
lods
inc
lret
stos
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
cli
scas
outsl
push
pop
pop
jmp
add
or
add
add
add
push
add
add
add
inc
add
add
hlt
add
add
add
add
add
test
pop
add
sbb
add
sbb
mov
add
add
add
push
add
add
lock
add
add
les
hlt
add
add
add
clc
add
add
add
add
add
add
add
movsl
add
add
add
addl
sub
sbb
add
push
add
add
add
or
add
stc
add
add
add
xor
add
test
add
add
add
add
add
jp
cwtl
add
add
sub
add
add
add
hlt
add
add
sbb
hlt
add
add
mov
add
adc
xor
push
add
add
add
add
add
add
mov
aaa
add
or
outsb
add
add
and
add
add
add
add
add
add
mov
add
add
add
add
add
rolb
add
add
push
add
add
add
add
pop
add
add
add
add
add
es
add
xor
in
add
inc
add
add
add
add
add
add
sub
outsb
add
add
add
add
sbb
jl
mov
add
add
add
stc
add
addl
or
add
add
add
add
add
add
add
sbb
dec
add
add
add
add
add
fwait
add
addb
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
stos
add
jp
sbb
add
js
cld
add
add
add
add
add
add
add
add
and
add
add
add
inc
add
add
push
add
lahf
add
rolb
add
add
sub
add
add
mov
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
pop
add
add
add
add
sbb
fildl
hlt
add
add
jbe
in
pop
add
push
add
add
add
add
add
add
add
lock
add
xor
scas
add
add
add
add
add
add
insb
add
add
xchg
add
or
push
add
add
add
add
xchg
add
add
add
sub
pushf
add
push
add
mov
dec
add
add
add
add
jle
mov
hlt
add
sub
cmp
mov
sub
inc
add
mov
dec
add
add
add
add
add
add
add
add
mov
sbb
inc
add
movsl
add
and
add
addr16
jno
fwait
and
adc
adc
mov
fimull
data16
sbb
sbb
adc
push
mov
dec
int3
aas
mov
in
testb
ljmp
lods
call
data16
test
stc
mov
sbb
out
subb
push
cmovge
mov
mov
jecxz
lea
mov
fmuls
jge
jecxz
jmp
cmpsl
incl
dec
shll
add
or
push
sbbb
test
dec
cmp
mov
mov
dec
jmp
aas
mov
add
pop
and
xchg
inc
push
and
pop
insb
add
xor
xor
outsl
fs
daa
repnz
push
add
test
or
xchg
mov
xchg
push
ds
mov
xchg
outsl
mov
rcr
xor
jecxz
cmc
pushf
push
mov
jmp
sbb
sbb
cmp
mov
loopne
cltd
push
xchg
mov
cmpsb
int3
fiaddl
das
sub
leave
cwtl
or
imul
lods
mov
icebp
xor
lods
jmp
cmp
xchg
jmp
jg
jmp
adc
pop
jo
lret
sbbl
push
imul
xchg
pop
bound
fistpl
jl
sub
daa
movsl
loopne
lods
stos
sahf
push
iret
xchg
outsl
cmp
pop
jbe
lods
outsl
cvtdq2ps
xchg
inc
mov
aad
movsl
push
cmp
sbb
push
cltd
daa
jbe
in
add
fimull
cmp
loope
adc
cmp
insl
in
in
push
aad
push
icebp
dec
rolb
sbb
das
xor
or
dec
mov
rol
push
rclb
fldenv
sar
sub
addr16
cmp
in
push
push
movsb
dec
sub
sub
cmpsl
sub
mov
mov
mov
cs
gs
rorb
pop
ret
adc
pop
mov
mov
cmp
stos
test
adc
jno
ljmp
sarl
add
sbb
xor
fstps
ficompl
jb
insl
les
dec
jbe
mov
out
mulb
xchg
imul
popa
jecxz
faddl
xlat
fbld
mov
aas
shr
in
sbb
adc
inc
push
pop
adc
push
push
fsubrp
test
enter
jge
jns
or
add
rcll
or
add
int3
mov
cli
push
pop
dec
iret
dec
das
pop
sbb
ja
mov
push
sub
imul
paddsw
mov
xlat
bound
jns
jno
dec
and
in
sbb
gs
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
