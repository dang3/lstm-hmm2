fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
lret
sub
mov
enter
xchg
and
pop
push
cwtl
push
mov
inc
in
push
jb
int
fisttpll
or
insl
out
imulb
push
mov
ss
inc
lahf
xor
data16
fstpl
and
adc
sahf
gs
inc
push
lods
jp
inc
hlt
push
call
adc
mov
loop
sarl
xchg
mov
xor
mov
jbe
xor
mov
aas
dec
xchg
sbb
jb
adcb
frstor
mov
mov
push
cmpsb
ds
dec
out
push
xchg
jle
add
jmp
bound
int
cwtl
ret
jae
ret
jecxz
insl
sub
cmp
fcoms
dec
inc
inc
ss
adc
rcll
xor
ret
jbe
cmp
mov
inc
fnstenv
and
out
push
in
ss
add
rclb
xchg
dec
out
fsubs
prefetch
or
daa
jb
and
data16
adc
sbb
out
dec
inc
hlt
lods
test
es
dec
in
xlat
adc
hlt
sub
fdivrs
outsl
mov
cmp
push
mov
das
mov
call
mov
push
push
loope
jge
scas
insl
mov
mov
test
fsts
inc
call
xor
adc
movsl
cmp
sbbl
out
negb
lods
push
mov
inc
in
push
std
data16
fldl
or
jge
dec
negb
lods
push
mov
inc
in
push
std
data16
fldl
mov
pop
mov
mov
inc
inc
xor
inc
add
lds
or
mov
push
inc
or
cs
popa
pop
or
addr16
lods
sub
or
sub
cld
jb
shrb
adc
aam
pop
popa
xchg
cli
cmp
sti
jbe
imul
inc
stos
sbb
push
jnp
xchg
movsb
adc
fsubrl
add
in
fbld
jg
sbb
jns
adcl
fs
outsl
mov
sub
in
add
lret
fcompl
jno
imul
and
sbb
mov
das
iret
and
dec
cli
mov
mov
sti
dec
out
mov
mov
out
and
push
cmpb
adc
xor
ss
push
fwait
ja
mov
bound
fwait
loopne
lret
cmp
cmp
inc
or
mov
jne
jp
call
mov
ljmp
clc
mov
pop
cmp
repz
jo
and
je
js
pop
add
sub
imul
add
jle
enter
jmp
sub
sbb
xchg
loop
outsb
jmp
lock
pop
icebp
aad
adc
push
inc
sbb
dec
aas
push
xor
mov
sub
into
outsb
mov
and
pop
lock
lahf
jle
cltd
out
mov
out
rcll
mov
cmp
push
andl
xor
pop
outsl
rolb
add
xor
sub
mov
in
movsl
push
dec
cmp
and
or
jg
fwait
gs
popf
ficoms
sub
shlb
xor
inc
add
lea
into
into
testb
imul
call
jmp
or
ffreep
lret
loop
jmp
xchg
mov
sbb
lret
loope
inc
mov
pop
mov
nop
mov
fdivrl
imul
shl
adc
lahf
scas
fildl
jno
jmp
loope
pushf
lret
jmp
xchg
jnp
aas
lcall
ffree
outsb
mov
and
add
in
nop
or
push
clc
rcrl
cmpl
sbb
xchg
pusha
jecxz
hlt
loopne
xchg
popa
pop
xchg
sbb
test
mov
hlt
repnz
daa
push
mov
pop
inc
inc
mov
ret
mov
aas
test
sbb
ja
movsl
fdivr
addr16
enter
push
push
lock
daa
data16
stos
mov
imul
fstl
movsl
lods
movl
mov
aaa
and
xor
xchg
push
jl
loopne
test
sub
clc
mov
gs
ja
push
dec
xchg
aas
outsb
or
scas
out
popa
rorl
inc
pop
cmp
sub
les
negb
cli
in
pop
int3
jmp
es
js
xchg
jl
xor
icebp
inc
mov
or
cmp
jmp
lods
cmc
mov
pop
xor
push
lods
pop
ret
loop
rcrl
mov
adc
push
iret
subl
xchg
shlb
sub
sub
adc
loop
add
jp
gs
mov
add
and
dec
lcall
lahf
pop
jg
sbb
rcll
inc
add
dec
gs
mov
ja
addr16
in
cmp
jl
pop
int
cli
insb
add
test
insb
imul
js
imul
test
jecxz
mov
sbb
call
mov
and
leave
ja
mov
adc
inc
mov
inc
pcmpgtd
mov
mov
inc
fiadds
and
mov
xchg
dec
push
int
xchg
orl
das
push
adc
inc
into
in
push
xchg
mov
jae
add
shll
xorl
cwtl
cmp
dec
andb
jle
loop
xchg
les
pop
push
nop
pop
lods
adc
ds
adc
push
jmp
mov
arpl
mov
mov
jns
call
mov
mov
into
inc
addr16
xchg
and
xchg
jp
mov
push
inc
cmpb
clc
add
add
scas
cltd
add
sub
bound
movsl
push
adc
pop
pop
inc
mov
inc
fildll
push
push
test
call
mov
cmpl
popa
mov
popa
jl
imul
mov
mov
jo
lea
jp
mov
cmp
jg
sub
repz
sub
imul
xchg
mov
add
leave
test
gs
xor
imul
jno
rclb
and
mov
lret
push
std
add
lods
imul
mov
data16
scas
fldt
pop
sub
clc
addr16
popa
out
sub
jns
jl
shl
sbb
lcall
mov
inc
stos
cmp
jmp
xor
inc
adc
adc
add
adcl
ret
sbb
sub
mov
ret
sbb
add
pop
cmp
testl
inc
das
adc
out
popf
mov
jo
xchg
popl
das
mov
and
xacquire
cmp
xor
jl
clc
std
inc
movsb
jne
cmc
sub
push
dec
popf
adc
sub
jno
rclb
sub
lret
out
das
cld
xlat
repz
xchg
or
cmpsl
dec
fwait
add
mov
int
cmp
lods
test
mov
sar
mov
push
pop
std
adc
push
lret
ss
imul
add
sub
jns
dec
lea
clc
jns
insb
add
pop
xchg
mov
add
in
inc
les
stos
or
ret
mov
jbe
in
dec
cmc
cmpsb
cmp
sbb
cld
enter
outsl
jb
push
pop
js
xor
add
inc
sbb
lods
insb
aam
bound
popf
jno
outsb
clc
pusha
and
mov
xchg
into
and
adc
mov
rorl
in
mov
in
cmp
fidivrs
mov
popa
js
mov
jl
in
xor
cmp
xchg
add
pop
adc
rolb
lds
xchg
ret
pop
ja
xlat
leave
add
lcall
pop
mov
jge
addl
or
pushf
in
pop
cli
outsl
movsl
mov
pop
in
or
ds
mov
adc
pop
lcall
mov
in
mov
ja
jno
and
cmc
push
repnz
std
out
jnp
aad
mov
dec
and
xlat
scas
mov
cwtl
cmp
mov
sbb
and
dec
pop
mov
sbb
pop
xor
mov
inc
lahf
jp
insl
xchg
jo
inc
pop
xor
hlt
mov
mov
inc
xchg
mov
mov
rclb
je
das
sub
add
out
or
mov
xchg
pop
mov
int
pusha
in
mov
adc
out
jae
sub
sub
test
ss
mov
push
push
filds
in
xchg
push
decb
outsb
lods
mov
nop
imul
ret
push
out
aas
leave
push
jp
fsubrs
push
cli
lret
bound
rorb
insb
xchg
pop
icebp
stos
aas
call
or
imul
mov
xchg
out
xchg
fiaddl
adc
add
xor
cmp
stc
push
movsl
push
push
mov
push
mov
outsl
jno
repz
inc
xor
scas
aaa
add
jb
mov
xchg
jmp
aam
mov
adc
jns
aas
fstps
add
ss
fsts
pop
repz
test
xchg
xor
mov
mov
mov
or
in
inc
cmp
xorb
add
inc
cwtl
lret
add
ds
fildl
cli
dec
mov
mov
adc
scas
lahf
dec
enter
and
sub
imull
jae
mov
pop
sbb
pop
mov
in
sub
insl
jge
es
mov
sarb
idivb
mov
inc
jo
test
out
cwtl
cld
iret
cmp
pop
iret
mov
sub
movsl
jns
call
aaa
push
fldt
add
fdivp
push
into
xor
mov
imul
sub
pop
ss
cmpsl
sub
test
jge
jmp
mov
xor
cmpsl
imul
inc
mov
or
lret
in
inc
repnz
jl
xchg
mov
call
mov
add
loop
out
jbe
jbe
rcrb
test
mov
imul
arpl
or
std
popf
clc
pop
adc
sbb
ljmp
call
es
leave
mov
pop
or
shr
fidivrl
aas
call
dec
cwtl
std
adc
movsb
fnstcw
sub
cmc
lret
and
rcll
push
mov
add
cld
lods
pushf
add
ljmp
pop
pushf
stc
clc
imul
xchg
push
push
add
jbe
jecxz
ret
jnp
adc
push
and
les
lahf
cmp
jg
xchg
out
mov
enter
mov
leave
hlt
fs
adc
fildl
shlb
mov
out
sbbb
stos
and
jno
ret
mov
mov
je
jecxz
mov
in
cld
jl
inc
dec
and
dec
pop
jnp
rol
add
sti
fistpl
cwtl
and
jge
divb
pop
xor
pop
pop
adc
mov
std
or
xor
jmp
dec
sahf
aam
push
in
out
inc
test
loopne
cmpsl
sbb
imul
loop
loopnew
mov
dec
and
dec
sarb
sub
push
push
inc
xor
gs
cltd
scas
sti
loope
cmp
bound
adc
push
dec
adc
in
mov
inc
enter
push
fs
imul
jns
idivl
sub
cmpsb
cmp
mov
adc
scas
sbb
cs
test
cli
cmp
and
push
dec
outsl
leave
aas
cld
and
mov
add
add
lret
pusha
shll
inc
dec
ljmp
aaa
gs
fbld
shrb
in
mov
lea
pop
jno
nop/reserved
inc
inc
or
shrl
xlat
xor
fnstcw
xor
push
stc
insb
add
jns
push
mov
ljmp
inc
mov
imul
lcall
fstp
mov
sbb
popf
xor
and
xchg
adc
pop
inc
call
clc
rcrb
jl
pop
pop
push
jo
pop
mov
add
jbe
dec
dec
jns
adc
xor
cmpsb
insb
adc
out
xchg
sbb
sahf
xchg
cld
daa
mov
ret
and
ss
hlt
add
ds
in
je
adc
das
imull
imul
cli
dec
pop
or
sbb
idivb
pushf
scas
xchg
and
aad
pop
out
and
popw
push
dec
pop
mov
fadd
js
stc
push
cmc
inc
push
icebp
or
pop
out
cmp
push
xlat
and
jle
cmp
add
test
aad
dec
insl
jo
pop
bound
pop
pop
xchg
ret
sbb
into
fwait
jl
pop
fmuls
lods
xor
adc
imul
daa
push
push
int3
sbb
jmp
stos
mov
mov
mov
fs
mov
iret
popa
pop
fsubl
push
xlat
pop
ret
mov
js
comiss
mov
sub
cmp
inc
jle
repz
bound
aaa
sbb
es
xor
movsb
sub
cltd
mov
mov
push
or
mov
mov
xorl
mov
adc
inc
xor
iret
js
push
out
int3
cmp
in
mov
imul
lcall
repnz
add
or
mov
insl
sub
shll
jne
mov
cmp
inc
mov
out
mov
or
xchg
lods
sub
ror
outsb
test
imul
inc
mov
test
xor
and
shlb
xor
imull
sbb
sarb
or
out
stos
dec
pop
nop
pusha
pop
push
gs
int3
and
or
bound
rcr
mov
pop
data16
xor
repnz
jb
pop
into
jle
adc
xchg
mov
inc
pop
iret
daa
mov
cmc
mov
repz
pop
mov
aad
dec
lcall
ljmp
int3
sbb
cmp
cmc
xor
lret
pop
dec
in
loop
jge
cld
rorl
aas
fwait
lods
jbe
inc
sub
push
cmp
cli
and
mov
push
mov
pop
xchg
addb
and
ja
sub
xchg
pcmpgtw
add
sub
pop
repnz
push
and
sbb
fdivrp
movsl
cld
iret
xor
movsb
inc
push
mov
cmp
shlb
mov
jecxz
shlb
mov
mov
test
mov
adc
int3
scas
jmp
mov
sub
cmpsb
packssdw
push
repz
outsl
lock
mov
and
add
mov
fldcw
cmp
pop
orb
cltd
leave
addr16
fmull
xor
push
hlt
cmp
push
hlt
mov
in
or
cmc
or
cmp
scas
xchg
add
stos
mov
xor
mov
mov
ret
and
inc
fistpl
or
cld
pop
rclb
xchg
mov
xor
and
mov
jp
push
int
inc
cld
jne
jecxz
pop
or
adc
xchg
pop
xchg
lods
xor
jnp
cs
fbstp
adc
xchg
jmp
mov
int
outsb
jno
mov
cld
push
sub
dec
jmp
cmp
xchg
pop
lahf
outsb
dec
xchg
mov
push
xlat
test
pop
es
leave
cmp
and
pop
icebp
pop
aas
inc
popa
enter
ja
add
mov
push
dec
sar
or
outsb
push
cmp
jl
and
aas
push
out
test
jecxz
ffreep
push
lds
arpl
sbb
cmpb
daa
movsl
bound
sbb
pop
xchg
and
pop
das
adc
jecxz
icebp
test
mov
into
cwtl
add
adc
mov
lcall
jg
mov
lea
insb
or
xor
ss
adc
scas
aad
adc
dec
xchg
or
push
arpl
sub
test
clc
addr16
fisubs
movsl
bound
add
mov
mov
int3
fisubrs
inc
gs
push
sbb
scas
adc
cmp
sub
ficoms
cmp
fcmovbe
lcall
ljmp
scas
lods
dec
add
lcall
inc
imull
in
ds
sbb
push
outsl
mov
xchg
xchg
mov
testl
lods
push
lret
cmp
adc
arpl
or
mov
mov
inc
and
lahf
mov
or
inc
xlat
add
scas
fdivrs
out
adc
dec
cmp
push
cwtl
inc
popf
loop
insl
and
and
sti
and
jae
mov
in
js
xor
ss
aam
inc
push
sub
int3
cli
rcrl
push
mov
lret
dec
pop
inc
lahf
mov
lret
push
movsl
fildl
sti
jp
test
inc
das
inc
mov
mov
jmp
enter
inc
shll
mov
js
jbe
adc
pop
sub
cmp
or
mov
fldcw
in
mov
pop
sbb
sub
notb
pop
call
out
dec
add
add
or
pop
or
mov
les
xchg
push
loopne
jecxz
mov
sarb
mov
in
sbb
inc
push
cwtl
xchg
jl
imul
fldl
rolb
inc
stos
mov
cltd
or
hlt
or
ja
mov
fs
adc
outsl
sub
mov
sub
adc
out
pop
cmp
mov
repz
enter
sbb
adc
dec
repnz
aaa
xchg
bound
loop
rdpmc
inc
xor
pop
in
fdivrl
inc
and
ficompl
lret
cmp
xlat
out
xchg
icebp
subb
fistpll
movsb
testb
and
dec
bound
mov
inc
int
cli
push
xchg
xor
adc
pop
cmp
jl
mov
fwait
int
push
loope
push
jp
in
push
mov
pop
rolb
jmp
lods
cs
ljmp
scas
inc
mov
arpl
adc
pushf
aas
adc
fildl
lret
popf
rclb
push
adc
dec
inc
mov
testb
fucomp
popa
mov
pop
daa
sbb
mov
adc
out
cmp
fdivrs
jmp
adc
cmpsl
das
pop
mov
leave
das
fsubr
insb
popf
outsl
mov
xor
mov
mov
sub
push
or
pop
popa
pushf
negb
test
and
inc
imul
inc
test
push
add
xchg
push
dec
dec
mov
sub
hlt
inc
mov
ljmp
flds
adc
sub
subb
adc
hlt
cwtl
mov
or
inc
les
jecxz
pop
xor
and
push
push
arpl
cld
jge
out
inc
jecxz
or
std
dec
icebp
sbb
dec
or
and
and
in
mov
dec
sarl
inc
ljmp
rcll
stos
cmp
arpl
jae
push
ror
push
add
mov
dec
sbb
shll
add
pop
lods
lcall
in
orb
sub
arpl
pop
aam
adc
jns
adc
adc
xlat
xchg
mov
xchg
mov
cli
mov
lret
out
or
les
dec
mov
mov
xchg
inc
push
mov
popa
enter
mov
pop
xor
cld
mov
lds
add
xor
repnz
loop
mov
or
rcl
ficomps
pop
cld
inc
push
cmp
push
popa
leave
add
outsl
ret
scas
sbb
sahf
add
mov
and
rcr
std
fnstsw
cmpl
cmc
fnstcw
jne
sbb
pop
or
push
in
fistps
sub
jo
jo
jae
xor
test
push
xchg
ret
mov
hlt
or
pop
dec
out
sbb
jae
out
stos
les
adc
mov
or
or
out
sbb
sub
pop
clc
add
dec
sbb
sbb
xchg
test
push
xchg
adc
ja
push
cmp
mov
jae
into
pop
shrl
imul
cmc
jmp
lock
push
cmp
mov
or
sahf
neg
sahf
imul
and
xor
es
out
cmp
add
outsl
inc
mov
and
cmpsb
out
cmp
adcb
mov
dec
xchg
dec
inc
jno
sbb
xchg
rolb
cmp
dec
repnz
stos
jbe
xchg
pop
lret
mov
cld
cmc
adcb
adc
hlt
xorb
fdivrs
insl
push
xor
cwtl
sbb
inc
dec
inc
pop
add
sbb
cmc
xor
mov
nop
pop
mov
call
push
sbb
inc
inc
jne
xchg
test
movl
loop
sub
into
sbb
and
dec
xor
pop
push
mov
inc
jb
popf
enter
int3
add
test
fwait
xor
sbb
les
daa
mov
int3
sub
loopne
mov
cmpsb
aad
sub
xchg
mov
rcll
push
or
imul
negl
ss
popa
mov
ds
bound
out
dec
scas
push
nop
push
out
cltd
addr16
adc
jbe
fwait
push
xchg
out
jmp
vmovsd
add
mov
aaa
cmc
mov
jmp
aaa
cmp
popf
lds
mov
outsb
pop
pusha
push
mov
pusha
nop
int3
add
adc
in
fisubl
fwait
scas
out
ljmp
xlat
jge
addr16
xchg
add
or
mov
sub
push
cli
xor
sahf
mov
repz
imul
xor
sti
inc
push
cmp
add
ficoml
xor
addr16
jle
adc
sbb
rolb
imul
in
stc
into
mov
or
daa
cli
mov
movsb
xchg
iret
or
cmp
loopne
ds
adc
aam
mov
aad
xchg
enter
add
inc
or
jne
cltd
cltd
pop
inc
push
les
push
fildll
notl
fwait
fwait
jno
jl
or
adc
rcl
jg
pop
add
sub
popa
hlt
inc
xor
push
cli
fcoms
adc
sbb
inc
mov
mov
jl
sub
lock
mov
out
inc
es
mov
push
popa
jp
shll
aaa
add
inc
jb
cmc
push
lahf
fnstsw
insl
jge
dec
negb
lods
push
mov
inc
in
push
std
data16
fldl
or
jge
dec
negb
lods
push
mov
inc
in
push
std
data16
fldl
or
sarb
dec
negl
lods
push
mov
inc
in
dec
std
leave
inc
fstps
or
jge
dec
jbe
push
lods
jmp
ljmp
mov
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
fdiv
lret
in
aad
lds
sti
test
jnp
imul
or
add
lret
in
aad
lds
xchg
stos
loopne
jne
sbb
pop
push
or
arpl
cmp
imul
jmp
movsl
xchg
stos
test
jne
inc
adc
push
sub
jns
outsl
jo
jb
mov
andb
xchg
addb
push
out
pop
mov
das
shll
aaa
cmc
jnp
outsb
dec
mov
or
ss
aas
lcall
push
jle
lods
aam
and
pop
std
add
lret
dec
cwtl
inc
or
push
imul
cwtl
pop
leave
pop
js
lock
rolb
fs
movsl
inc
popf
stos
gs
mov
call
or
cmp
add
fldt
jbe
add
les
test
enter
cs
pop
or
and
push
repz
imul
inc
pop
sahf
or
jne
popa
repnz
jne
adc
popf
in
aad
lds
rep
mov
jne
gs
xor
sub
cmc
mov
test
repnz
iret
lock
icebp
pop
add
push
xor
push
addr16
pusha
xchg
cltd
scas
mov
imul
loopne
ret
cmp
sbb
jnp
adc
bound
mov
jo
push
mov
cmpsl
mov
mov
mov
mov
jne
gs
imul
or
fcomi
lret
in
aad
lds
xchg
stos
test
dec
gs
imul
or
fcomi
insl
int
mov
arpl
aad
or
gs
xchg
xchg
dec
loop
lea
mov
ds
fucomp
pusha
inc
or
mov
or
xchg
test
inc
jecxz
enter
ret
test
ss
test
rol
pusha
xchg
add
enter
out
jmp
or
jl
mov
adc
cmp
xchg
mov
outsb
xor
inc
inc
and
inc
pusha
shlb
pop
sub
inc
std
jbe
dec
sbb
sarb
shlb
cmp
orb
mov
fcomi
adc
xor
test
pop
cmp
scas
bswap
or
imul
xor
cmp
and
jae
sbb
out
push
and
xor
arpl
es
sub
or
gs
nop
addr16
into
cmpsb
dec
hlt
outsl
cmc
jns
dec
pop
lds
iret
cmp
fs
sbb
xchg
xor
scas
js
loop
jl
ja
cmp
xor
cli
sbb
sbb
loope
xor
pop
lds
ss
mov
faddl
mov
lret
mov
jne
sbb
mov
in
xor
push
mov
call
mov
lock
pop
ret
sbb
roll
mov
hlt
lds
pop
adc
scas
or
cmp
or
sbb
out
icebp
lcall
inc
sbb
cmc
imul
rcrl
mov
mov
cwtl
push
pop
xchg
jb
or
sti
jbe
imul
xor
je
sub
cwtl
aam
mov
xchg
mov
ds
fwait
sub
out
ret
jmp
jb
shlb
pop
or
ret
mov
mov
hlt
jne
ret
lret
xor
adc
inc
shlb
test
das
outsl
xor
pusha
sub
cmp
xor
movsl
andl
mov
loope
or
mov
adcl
adc
or
imul
push
mov
inc
int
xor
roll
cs
fistpll
fisubrl
icebp
push
push
outsb
mov
inc
ljmp
fildl
jg
and
jnp
jecxz
or
add
nop
add
push
sub
mov
repz
cmp
push
out
xchg
das
jne
lahf
lret
rsqrtps
je
decb
in
mov
aad
xchg
mov
dec
pushf
mov
repnz
bound
jmp
dec
fildl
adc
adc
mov
adc
loop
lods
aaa
mov
iret
lock
xchg
cmpsl
and
push
lock
ficoms
pusha
jae
xor
fwait
xor
mov
adc
subl
jg
xchg
hlt
fsubrl
xor
mov
hlt
mov
sub
dec
mov
adc
stos
das
rcll
adc
mov
insb
inc
scas
adc
xor
xlat
jge
call
insl
inc
mov
pop
cs
lret
cld
enter
add
add
push
divb
dec
dec
sbb
out
push
inc
inc
scas
inc
jg
lea
push
dec
or
arpl
mov
stos
test
push
icebp
in
mov
jb
out
shll
in
ds
inc
mov
in
mov
ficoms
cmp
inc
push
cmp
lahf
scas
imul
mov
cwtl
push
enter
add
dec
repnz
sub
sahf
loopne
out
push
cmovnp
out
mov
int
add
sbb
xor
call
push
cmp
loopne
shlb
add
fsts
out
shr
in
cmp
or
push
inc
scas
mov
pop
push
int3
lahf
mov
push
xor
inc
hlt
push
jbe
lcall
movsb
or
fdivr
xchg
dec
xchg
lcall
lds
mov
insl
in
mov
sbb
call
and
jbe
push
adc
jecxz
mov
inc
and
adc
arpl
cmp
popa
sarb
cs
xchg
aad
mov
xor
cmpsb
xchg
lds
or
dec
xchg
cmp
jnp
divb
test
call
filds
movsb
xlat
mov
inc
xor
and
mov
mov
mov
xchg
ret
xchg
repz
xchg
lret
lds
mov
hlt
sarl
in
jp
jns
test
mov
cli
lock
sbb
mov
fsub
div
add
cmp
mov
mov
push
xor
cmp
icebp
xchg
add
jge
inc
cmpsb
jnp
xchg
je
add
popf
adc
sub
xorl
rcll
fbld
dec
pop
pop
mov
pop
xchg
pop
jbe
xor
dec
lret
pop
test
scas
rorb
shl
imul
in
or
jge
lock
stc
ficoml
add
mov
jno,pt
roll
and
cmp
sub
gs
cmp
or
gs
adc
push
jnp
mov
movsb
push
movsb
stc
ret
movsl
out
je
jbe
loopne
jge
pop
and
lret
ljmp
jp
fcomps
pop
mov
or
mov
and
xchg
das
add
pop
jnp
and
adc
hlt
add
xor
movsb
lea
and
sbb
mov
pushf
out
insl
and
cmp
add
mov
jp
push
insb
mov
sbb
pop
sub
icebp
icebp
mov
das
mov
adc
fwait
movsl
les
mov
pushf
out
loope
cmp
cld
hlt
add
out
and
cmpsb
sub
xchg
test
sbb
movsl
pop
imul
leave
push
shl
mov
adc
jne
xor
mulb
pop
push
shll
cmc
mov
cmp
push
adc
xchg
popa
les
mov
les
daa
xlat
addl
addl
mov
add
fnstcw
cmpsb
in
mov
or
ljmp
cli
adc
pushf
push
jbe
arpl
add
bound
mov
stos
inc
jbe
cmp
jns
inc
lock
dec
cmpsl
out
add
xor
mov
andb
outsl
xor
dec
lds
psubusb
inc
and
int
mov
adc
sbb
cmc
fistpl
aam
imul
cmp
bound
sub
and
fbld
sub
mov
arpl
mov
adc
enter
insl
mov
or
jno
cmc
xchg
cmp
or
arpl
scas
fmull
mov
test
outsb
ljmp
sub
add
test
jae
dec
jl
test
js
pop
popf
addr16
inc
sbb
or
pop
and
les
mov
dec
inc
dec
jo
pop
cmp
imul
xchg
inc
call
adc
fs
aaa
pop
mov
jae
mov
adc
movsb
insb
or
xchg
push
add
cmpsb
push
stos
iret
inc
rcrl
mov
mov
rcll
clc
insb
mov
repz
xchg
push
adc
outsl
fwait
push
pop
repnz
test
movsb
adc
xchg
lahf
adc
inc
mov
xor
sbb
stos
inc
cltd
jne
fildl
cltd
sahf
mov
ja
movb
xchg
mov
and
subl
sti
int
in
insb
push
sbb
int3
mov
cli
loope
sub
jmp
adc
dec
popa
adc
mov
sub
inc
jle
sbb
inc
xchg
out
ret
mul
dec
dec
adc
loop
dec
popf
fsub
xchg
nop
sub
outsl
div
pop
pop
dec
and
aas
xor
push
xchg
jge
inc
rcrb
push
aam
movb
das
fadd
jp
fimuls
fisubrl
shlb
sub
xlat
roll
sbb
jg
push
loopne
divb
mov
push
rclb
xchg
dec
push
icebp
adc
jg
sbb
pop
lods
and
cltd
or
cmp
and
add
xchg
pushf
and
adc
mov
int
push
pop
inc
cmp
xor
or
and
outsl
jo
cli
clc
enter
fidivs
dec
push
mov
lret
jnp
push
fcoms
andl
popf
fmuls
xchg
or
test
jne
out
sub
out
into
add
jno
hlt
xchg
adc
dec
stos
push
leave
pop
sub
and
mov
or
push
mov
mov
fcomi
xor
jmp
lds
cmp
xor
imul
inc
jbe
or
dec
scas
movsl
adc
push
cmp
push
cld
in
dec
and
mov
push
nop
rcrl
add
adc
jne
jge
in
outsl
pop
jbe
cs
dec
cmp
notb
mov
cmpsl
jle
addb
xor
pcmpgtd
loope
mov
bound
push
cmp
pop
cwtl
pop
addb
add
push
mov
inc
mov
in
jg
adc
mov
ljmp
jbe
mov
rcll
les
xorb
sbb
frndint
cmp
and
fsub
arpl
mov
loopne
and
and
xchg
add
add
ret
jno
xor
cmp
int3
fcomip
stc
inc
mov
fidivrs
cwtl
ja
mov
ret
mov
xor
add
jo
dec
adc
or
xor
std
jg
mov
out
or
jge
aaa
in
pop
arpl
ss
les
test
dec
jmp
insb
cld
int
jo
mov
mov
jp
adc
lock
push
and
xchg
repnz
sbb
ficoms
stos
mov
or
and
call
pop
popf
or
push
xchg
mov
testl
std
outsb
leave
inc
movsb
fcmovu
enter
sbb
fmulp
cmc
cmpsb
negl
nop
sub
loop
fnstenv
dec
pop
adc
outsb
nop
mov
or
inc
jnp
test
mov
pop
push
push
adc
inc
inc
cmp
push
in
pusha
movsl
mov
aas
jp
loopne
cmp
pop
stos
lret
shl
jne
sub
pop
and
cmp
scas
pop
mov
sub
ret
rcr
pop
std
add
pop
stos
or
imul
aaa
pop
and
sbb
int
stc
jns
cmpl
sbb
dec
xor
xorb
dec
inc
and
xchg
ljmp
or
jns
ds
adc
mov
enter
stc
sbb
repnz
loop
xchg
pushl
vpsllw
and
dec
dec
roll
xchg
jg
sti
outsb
mov
fidivl
repnz
sbb
movsl
xor
add
push
sub
lods
cmpsb
int3
scas
stc
insb
popf
and
dec
in
loope
lret
and
popa
dec
test
jp
cld
or
daa
sti
and
jle
dec
push
es
pop
push
cmpsb
jnp
in
pop
dec
cmp
or
insl
mov
xchg
mov
imul
into
notb
jns
mov
or
lcall
sbbb
lods
ds
fisubrs
repnz
test
ljmp
outsl
xor
jbe
rcrl
xor
sub
xor
test
jmp
mov
push
mov
xor
outsb
in
and
cmpb
add
fstps
pushf
jo
add
dec
mov
cmpsl
xchg
cltd
ds
scas
loopne
int3
sub
faddl
dec
mov
xor
arpl
push
push
push
inc
call
rolb
add
push
loope
add
push
lds
cmc
lahf
add
jge
cmp
push
mov
pop
jae
mov
sub
inc
adc
ss
mov
pop
cmc
fsubl
fidivrl
push
mov
push
dec
mov
fchs
loope
xor
add
shrb
fstl
gs
or
xchg
xchg
in
scas
dec
inc
out
in
fists
sbb
int3
fstl
pop
mov
cli
jecxz
xor
adc
sub
push
aam
inc
lcall
cmp
xchg
fcmovnu
and
filds
push
pop
int3
std
and
cmp
jp
fsub
mov
bound
sarb
insl
jnp
insb
pop
lds
in
outsb
mov
mov
pop
push
pop
jb
jbe
clc
push
or
subb
popf
dec
sahf
call
mov
pushf
sti
xor
clc
out
xor
jnp
jmp
lea
mov
mov
mov
add
mov
pop
mov
dec
adc
adc
mov
add
mov
adc
out
and
add
arpl
mov
out
fbstp
xchg
stos
stos
mov
jmp
mov
sahf
ffree
dec
xor
push
jo
fsubp
sub
mov
enter
push
inc
in
sbbl
insl
xchg
dec
xor
fs
add
jge
das
insl
push
in
ret
xchg
sbb
lcall
in
push
and
bound
push
dec
mov
data16
push
outsb
icebp
mov
push
not
xchg
cmpsb
enter
mov
or
shlb
and
cmp
add
orb
pop
mov
in
add
outsb
adc
adc
cmpsb
pmaddwd
insl
loopne
inc
jge
cvttps2pi
cmp
jl
hlt
cmp
fld
inc
add
cmpsb
adcb
xor
sub
push
or
or
mov
or
xchg
jo
mov
test
mov
xorb
fmull
mov
popf
xor
jecxz
fdivr
pop
cmp
lods
xorb
mov
and
mov
inc
xchg
inc
pop
ds
cmp
xor
xor
repz
mov
insl
mov
or
dec
jnp
fsubl
es
push
inc
and
out
xchg
test
lret
mov
lahf
mov
pop
rcr
add
dec
lock
clc
sub
aaa
mov
add
cltd
pop
clc
pusha
cltd
es
inc
mov
ret
mov
mov
insl
out
test
push
jno
push
and
subb
insb
adc
lea
hlt
rolb
ss
push
mov
fs
push
sub
xchg
xchg
or
add
pop
enter
push
iret
fadd
ss
xchg
cltd
jno
daa
or
push
insl
jl
sub
xchg
pop
cmp
mov
push
rorl
mov
cmc
push
push
mov
sbb
je
mov
cmpsb
stos
pop
scas
and
sub
and
mov
adc
pushf
sbb
ror
jbe
mov
loope
add
xchg
enter
jmp
sbbb
adc
add
outsb
cs
lods
insl
mov
shll
hlt
push
sub
rolb
loope
daa
das
mov
andb
pop
inc
sub
pushf
fistps
pop
xchg
shrl
sub
sbb
sbb
sub
inc
adc
or
lcall
lods
cmp
pop
cmp
es
push
js
rolb
xor
loopne
xchg
adc
mov
mov
jmp
cltd
fdivs
pop
pop
dec
ficomps
cmp
xlat
movsl
loopne
filds
xchg
sbbb
mov
pop
push
xor
loope
push
lds
sub
aas
in
jbe
enter
fsubs
mov
and
fimull
cmp
sbb
test
xchg
aas
sahf
mov
mov
pop
jae
and
push
push
xchg
addr16
movsl
xchg
int
outsb
aam
jno
sahf
pcmpeqd
loopne
mov
sbb
or
dec
clc
in
pop
push
mov
and
and
jmp
fsubs
lds
daa
pop
add
xor
lret
arpl
imul
xchg
jae
xchg
xchg
mov
sahf
push
and
pushf
cltd
sbb
add
jno
adc
cwtl
loopne
test
mov
xor
insb
lods
add
jge
adc
icebp
jb
addr16
in
xchg
out
pop
dec
das
cmp
cld
pop
cmp
dec
mov
xchg
mov
or
sti
adc
imul
jno
xchg
dec
pop
daa
dec
sbb
cmc
pop
add
dec
sahf
dec
test
inc
fimull
mov
testb
and
cs
push
push
push
mov
xlat
gs
xorl
jge
clc
push
sub
fisubrl
mov
pop
dec
inc
xchg
cmp
dec
jb
push
pop
cwtl
out
mov
lret
xchg
add
fwait
inc
xor
and
sub
pusha
repnz
rcr
enter
push
sub
fwait
out
jmp
mov
pop
xor
jg
lods
add
ja
jmp
rolb
into
xchg
jge
jge
hlt
shll
cwtl
sbb
add
fwait
jae
sub
mov
jne
inc
repz
dec
out
jg
dec
loop
mov
fldenv
sub
test
shrl
dec
in
adc
lds
sti
adc
adc
pop
xchg
jecxz
xor
cmpsl
mov
and
push
daa
mov
jle
or
mov
pop
in
cwtl
test
sub
dec
stc
sub
mov
mov
mov
test
inc
adc
xor
or
push
test
fisubrl
jne
test
movsb
push
int3
and
flds
sarl
lods
xchg
fmull
xchg
xlat
aad
add
popa
xchg
push
repz
sbb
xchg
sti
sahf
xchg
adc
sahf
jp
pushl
mov
sub
rcrl
inc
xchg
cmp
stos
js
fsubs
inc
pop
jns
dec
nop
insl
sbb
pop
xlat
push
xchg
out
sbbb
testb
pop
aad
jae
stos
mov
dec
fstps
and
jo
xor
int3
cli
add
sub
mov
xchg
leave
inc
ljmp
push
dec
stos
mov
testl
and
ficompl
push
mov
or
jge
fwait
cmpsl
cmp
and
lcall
cwtl
stos
jg
sub
or
test
adc
cmp
fsubrp
jp
aaa
orl
mov
mov
cmc
es
sahf
pop
dec
jge
iret
sbb
or
add
mov
cmp
xlat
inc
sbb
popa
jp
or
ja
cltd
mov
repz
xor
in
sbb
adc
inc
push
in
lock
dec
in
lret
pop
popw
frstor
dec
aam
adc
xchg
push
cmp
jle
test
and
dec
mov
loope
popf
rol
pop
mov
repnz
nop
add
adc
addr16
fimull
adc
testb
imul
mov
and
inc
insb
in
or
jmp
sti
stc
aaa
pop
divb
ss
popa
adc
cmp
jnp
popf
mov
dec
sub
sub
stc
imul
add
inc
fimull
ret
jecxz
mov
enter
pop
add
ret
push
int3
movsb
and
popa
psubsb
cmp
insl
cmc
jp
call
idivl
or
sbb
pop
dec
xchg
mov
pop
pop
std
repz
xchg
xor
xchg
test
push
xchg
cwtl
in
xor
negb
test
mov
aaa
lret
movl
std
out
mov
mov
imul
hlt
outsl
push
cmp
sbb
outsl
push
pop
cmp
rclb
insb
cli
or
mov
aam
pusha
dec
cltd
popf
lods
pop
std
jnp
inc
xor
cwtl
out
push
mull
cli
incl
std
mov
test
jne
mov
pop
call
mov
xor
mov
loope
pop
mov
and
xchg
mov
pop
sbb
pop
into
insl
nop
rolb
mov
push
imul
ja
push
jbe
call
mov
int3
pop
lods
in
dec
ja
xchg
jae
call
lods
leave
xchg
stos
sub
scas
mov
push
push
cmc
fbld
ljmp
sar
cmpb
pop
pusha
int
das
adc
fisubrl
shll
push
pop
xchg
std
dec
mov
movsl
outsb
test
std
into
cli
mov
push
aas
cmp
aaa
xchg
in
mov
xor
fidivrs
mov
lods
roll
aad
shlb
push
mov
jb
jns
test
cmpsb
push
imul
dec
xor
fists
push
jae
imul
jl
adc
and
mov
inc
int
or
leave
out
mov
pop
daa
ret
fstpl
jmp
mov
test
ficompl
jle
mov
push
popa
cmp
lods
stc
stos
es
sbb
jmp
push
cltd
test
pop
icebp
es
cmc
inc
scas
pmaxsw
sbbl
movsb
aad
sub
imul
out
mov
push
or
or
pop
add
repz
pop
xchg
jno
leave
call
dec
fwait
popa
or
cmp
loope
enter
or
pop
and
mov
mov
test
or
or
sti
add
aad
lds
xchg
stos
test
dec
gs
imul
or
fcomi
lret
in
aad
lds
xchg
stos
test
dec
gs
imul
or
fcomi
sti
in
aad
lds
mov
movsl
mov
jne
mov
inc
sbb
ret
add
mov
mov
movsl
mov
jne
iret
rcll
xor
fcmovb
ljmp
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jg
outsl
add
xor
pop
es
push
fucomi
test
mov
movsl
mov
cmc
in
adc
dec
and
pop
jne
sbb
stos
mov
movsl
mov
cmc
in
adc
dec
and
pop
jne
call
loope
xlat
or
xchg
outsw
dec
sub
cmp
inc
xchg
hlt
out
cmp
jl
fnsave
mov
mov
stos
imul
rclb
jp
mov
mov
mov
adc
and
lds
loope
inc
test
and
movsl
cmc
pop
shlb
cli
jo
pop
cmp
and
sbb
aas
inc
loope
addr16
ljmp
jp
xor
inc
inc
aad
cmp
popa
sbb
gs
test
and
push
pop
push
inc
out
push
leave
iret
dec
inc
mov
jg
lcall
and
out
loopne
test
scas
test
mov
aad
xchg
lahf
cmc
out
and
dec
and
pop
jne
call
iret
movsl
mov
cmc
mov
adc
inc
cmp
data16
xor
mov
shlb
mov
jl
sbb
and
pop
sbb
add
out
rcr
sti
in
mov
or
inc
dec
inc
aas
jnp
inc
pop
jne
call
iret
movsl
mov
cmc
in
adc
dec
and
pop
jne
call
iret
movsl
mov
cmc
in
adc
imul
and
daa
xchg
jl
push
dec
cmc
popf
shlb
push
inc
pop
dec
push
stc
cli
scas
inc
and
jo
push
and
out
sbb
xchg
pop
cmp
pop
or
mov
xor
enter
out
xchg
jg
push
adc
or
test
mov
xchg
popf
insb
enter
arpl
ret
std
jg
rorl
icebp
cmp
adc
adc
repz
repz
cmp
pop
adc
pop
outsb
jnp
adc
addl
add
cmp
lea
add
xchg
push
xchg
mov
inc
mov
xchg
sbb
dec
cmpsb
gs
lds
loop
or
adc
fcmovnb
mov
jns
mov
xor
push
jge
add
add
hlt
test
js
dec
clc
mov
test
jne
es
xchg
aas
rcr
ss
test
sbb
popf
xchg
addw
or
dec
or
sub
sti
cmc
out
push
imul
fsubr
insl
lret
addb
and
mov
pop
add
push
jb
push
sub
daa
sub
mov
inc
pop
dec
cltd
clc
xchg
cmp
jbe
dec
push
in
js
movsl
arpl
push
lock
test
pop
jbe
fcmovnbe
xchg
in
das
ficomps
repnz
cmp
push
and
test
popf
imull
inc
inc
call
and
stc
xchg
mov
pushf
lods
fwait
mov
mulb
mov
lret
mov
orl
cld
addr16
repnz
les
aaa
cmp
imul
lcall
call
das
repnz
das
mov
adc
dec
scas
into
mov
and
pop
loope
pop
push
inc
shl
inc
jne
add
mov
sbb
xchg
xor
test
or
movsl
sbb
xchg
icebp
mul
add
lods
les
mov
push
or
inc
sbb
ljmp
xor
ljmp
push
mov
push
rcrb
fildll
nop
jecxz
movsl
cli
jl
dec
rclb
push
testl
sub
add
lds
and
insl
mov
cmp
pop
mov
cmp
sub
movsb
mov
test
xor
sahf
je
cmp
cld
and
mov
xor
mov
popa
es
repnz
loopne
dec
insb
pop
mov
jg
jle,pt
inc
insl
sbb
repz
js
imul
push
shrl
daa
dec
push
lcall
mov
mov
into
nop
imul
fstl
lret
es
movsl
lods
cli
imul
arpl
push
shl
enter
inc
jno
hlt
pop
or
lock
insb
or
sbb
or
xor
cs
cltd
inc
sub
add
in
sbb
lods
mov
jp
ror
add
and
push
stc
out
cmp
add
sbb
xchg
std
xchg
test
xor
dec
and
mov
cmp
cld
mov
mov
jnp
jne
mov
data16
test
repz
mov
insb
mov
test
sbbb
xchg
inc
aaa
xlat
mov
repnz
mov
push
or
dec
insb
inc
sub
adc
pop
test
and
addr16
xor
aas
lods
cmc
rcrb
jbe
cmp
movsl
loop
ficoms
in
mov
dec
pop
out
xor
jne
push
xor
or
inc
out
fcompl
or
adc
jecxz
push
cmpsb
dec
repnz
ljmp
mov
fsts
adcl
je
sub
jle
mov
xchg
out
je
popa
push
mov
or
jb
popf
pop
push
arpl
mov
add
jae
adc
push
xorl
inc
pop
cmpsl
frstor
mov
mov
adc
cli
mov
aad
dec
aas
icebp
inc
clc
sti
ret
add
mov
or
aam
std
insb
mov
fnstenv
dec
in
pop
lods
fcmove
mov
xlat
icebp
adc
aaa
das
fbld
mov
add
sbb
cmp
pop
rclb
mov
mov
xorb
movsl
montmul
cmpsb
inc
cmp
ss
push
aam
test
subl
mov
cmpsl
push
arpl
jns
call
dec
mov
leave
imul
inc
mov
and
xchg
bound
dec
out
xor
aaa
fldl
add
xor
pop
das
or
fwait
sub
pop
or
into
jno
xchg
cmp
ja
divb
pop
sub
inc
iret
idivl
orl
outsb
test
test
push
push
inc
cltd
dec
or
jae
ss
mov
mov
cltd
xor
in
ja
int3
inc
jmp
cmpsb
sbb
push
jecxz
arpl
into
or
fstpl
adc
movsb
les
xchg
loope
sbb
adc
enter
ss
jle
sar
outsb
enter
pop
mov
std
push
push
fprem1
fnstcw
stos
cmpsl
jb
xor
js
push
imul
jmp
xchg
sahf
insl
mov
in
lret
cli
mov
call
mov
push
xchg
je
fcmovb
xor
lods
movsb
pop
icebp
rol
inc
push
fnsave
cmpsl
dec
jnp
in
rorl
mov
subl
pop
xchg
lods
push
dec
jnp
xlat
and
and
dec
sahf
sbb
dec
loop
mov
mov
imul
repnz
scas
sbb
mov
sarl
pop
xor
cmc
sub
push
jg
mov
or
xor
jae
js
cmp
xchg
lret
push
jo
in
fsubs
adc
push
pusha
dec
push
fadds
xor
lock
xchg
popf
loope
inc
mov
sub
cmp
xchg
negl
cmp
xchg
jecxz
rorb
jge
enter
mov
out
jp
rol
sbb
setns
lods
mov
repz
push
iret
mov
popa
push
andl
or
orb
je
es
cmp
xchg
loopne
push
stos
xor
lds
clc
pop
pop
adc
mov
inc
les
popf
popa
idiv
push
sbb
adc
add
clc
mov
stos
shrd
mov
push
xchg
and
lea
repnz
hlt
icebp
add
mov
packuswb
jbe
push
fwait
mov
sub
scas
outsl
pop
xchg
cmpsl
push
sbb
add
sbb
outsb
mov
fs
shl
lahf
mov
xor
fs
mov
nop
and
xchg
or
aad
xlat
imul
test
lret
sti
sbb
pop
add
jo
fucomi
cmp
lret
push
neg
and
shll
pop
fwait
jle,pn
dec
push
and
rcll
je
decb
lock
sbb
ret
dec
add
fistpl
sbb
rclb
rorl
mov
inc
std
aam
push
shrb
mov
jmp
mov
adcb
out
mov
arpl
and
in
stc
pusha
nop
inc
das
push
and
jp
pushf
outsl
or
inc
pusha
inc
sahf
stos
jnp
hlt
enter
ja
negb
leave
fistps
idiv
lahf
scas
add
xchg
cmp
push
jns
push
xchg
lret
fcmovnu
mov
outsb
and
push
popa
out
pop
rcll
fcoml
adc
xchg
jae
inc
dec
loop
sbb
test
jno
mov
addb
sub
cli
sub
jmp
jl
mov
xchg
mov
or
adc
stc
cli
jl
mov
cmpsb
test
sbb
cmpsb
inc
push
mov
jecxz
out
push
test
pop
sti
aad
xchg
sub
outsl
push
cld
pop
arpl
test
sbb
popl
jbe
mov
mov
test
or
inc
pop
es
sub
pop
mov
pop
int
mov
inc
cmpsb
or
sub
sbb
rcl
mov
lea
sbb
xor
lods
ds
xor
xor
sub
pop
pop
addr16
push
les
pushf
mov
leave
dec
in
stc
fistps
mov
out
popl
xchg
push
std
and
lcall
push
mov
mov
mov
dec
outsl
xor
fisttpll
insb
jns
popf
and
lahf
mov
mov
cmp
xor
addr16
movsl
rcll
ss
and
fsubr
aad
mov
push
pop
push
lods
jno
mov
mov
cmpsl
mov
mov
jmp
mov
cs
jo
xchg
adc
jno
mov
push
pop
adcl
dec
xlat
stc
ljmp
push
inc
fwait
in
out
or
nop
cli
mov
or
xchg
addr16
mov
push
cltd
sbb
jg
into
push
mov
dec
lahf
nop
stos
or
jg
add
mov
pop
icebp
enter
test
ficoms
cmp
pop
pop
loop
sbb
rorl
xchg
or
aam
or
add
xchg
movsb
inc
insl
mov
popf
sbb
dec
adc
adc
aaa
mov
pushl
inc
repz
popa
push
cli
aam
and
jne
out
or
iret
loopne
cmp
mov
cmp
mov
call
push
int
lock
int3
fs
inc
mov
inc
outsl
adc
loop
leave
mov
and
shr
lods
movsl
cmc
or
ret
xchg
lods
push
es
push
fwait
repnz
ret
xorl
push
add
mov
outsb
jo
push
adc
lods
movsb
test
rorl
inc
mov
xchg
dec
stos
inc
pop
js
subb
ja
push
xlat
pop
adc
shlb
iret
sub
dec
icebp
push
test
xor
mov
gs
cmc
cwtl
or
push
in
loop
lcall
push
cmp
and
mov
fwait
insl
pop
out
dec
fadds
xchg
jb
js
jb
iret
mov
pop
fdivrs
jne
addr16
add
xor
mov
aas
mov
jp
inc
inc
jo
lahf
iret
xchg
out
clc
repz
nop
xor
cmp
cmp
sub
inc
data16
into
jno
gs
add
inc
or
das
jne
xchg
call
int3
cmp
add
add
testl
cltd
iret
dec
mov
cmp
loop
arpl
stos
fwait
mov
lods
mov
add
jecxz
xchg
cltd
add
fnop
dec
popa
adc
jno
aad
add
jp
jl
or
pop
pop
jl
mov
nop
sub
sbb
lret
fsubrs
inc
hlt
pushl
jb
jge
or
cltd
shlb
jecxz
rolb
imul
into
bound
sbb
xlat
in
stos
xor
ret
rclb
jle
fidivrs
arpl
subl
mov
mov
arpl
cs
jb
jmp
mov
outsl
popf
mov
in
mov
outsb
mov
loope
scas
ret
adc
fdivrs
jb
aam
scas
lret
aam
std
lret
addl
dec
jp
fistpll
mov
xor
pop
jle
lock
inc
cmp
xchg
aam
out
cmpl
clc
pusha
jnp
jns
mov
psllw
or
imul
mov
pop
hlt
sbb
xor
add
mov
mov
mov
sbb
jne
mov
push
stos
fdivrl
pop
mov
test
arpl
jne
jo
xor
ret
leave
leavew
je
cmpsl
xchg
pop
push
mov
repz
call
mov
aam
pushf
push
xchg
dec
scas
lods
sub
xor
push
push
adcl
popa
jp
push
pop
adc
sub
mov
jo
add
dec
sti
sub
jbe
cmc
jecxz
fstp
movsl
ja
lock
xor
adc
push
or
jmp
pop
inc
mov
adc
adc
mov
jp
mov
fistpll
test
stos
xchg
push
pop
push
cmpl
fists
inc
inc
aaa
push
adc
in
adcl
popa
mov
push
xor
jns
jle
sbb
jp
hlt
inc
pusha
add
pop
xor
mov
cmpsl
orl
in
aam
ret
adc
loop
mov
cmp
repz
in
add
testb
adc
xor
add
dec
pusha
xor
jge
push
clc
adc
jae
fisubrs
lods
adc
fld
pop
sarl
sub
cmpsl
push
mov
jo
ljmp
cmp
push
xchg
addb
dec
mov
insl
loopne
or
stos
scas
scas
sbb
arpl
pop
inc
addr16
dec
push
dec
loopne
jns
xchg
je
loopne
sbb
xchg
imul
xor
lds
outsb
push
xor
pop
inc
sbb
cmp
ss
pop
cmp
mov
nop
mov
cld
mov
xchg
gs
xor
fisubrs
pop
stos
int
push
stos
pop
dec
mov
mov
pushf
sbb
pop
es
or
adc
popf
jp
aam
addr16
push
xchg
and
int3
mov
pop
addr16
add
les
mov
push
loopne
xchg
dec
repnz
shlb
push
fisttpll
je
scas
dec
push
icebp
repz
xor
inc
xchg
fsts
inc
and
test
push
sar
xor
rcrb
add
dec
pop
call
pop
and
insb
adc
cld
imul
leave
or
adcb
inc
lds
mov
lea
dec
push
int
arpl
stos
int3
out
hlt
scas
mov
mov
mov
out
mov
out
jnp
adc
in
jge
mov
sub
aad
jnp
add
mov
mov
jno
js
dec
mov
sub
or
call
aas
decl
push
xchg
cmp
aaa
test
movsl
pop
mov
xor
cs
and
xor
inc
jae
cltd
mov
lds
add
orb
mov
push
das
push
add
adc
pop
rorb
jb
mov
adc
xor
movb
inc
fldl
js
clc
in
aad
mov
lods
repz
ja
dec
mov
hlt
mov
test
ja
sub
xchg
mov
test
pushl
pop
or
std
add
jmp
arpl
stos
pop
jmp
out
pop
gs
xor
cltd
or
lods
jge
ret
mov
push
fdivp
and
in
test
push
ja
push
fwait
add
repz
xor
lahf
sti
push
aam
mov
adc
sbb
pop
add
pop
cld
add
fisttpl
and
int
xchg
arpl
loopne
jnp
rcr
jecxz
insl
and
pusha
lret
cld
or
bts
cwtl
and
sbb
pop
gs
addb
pop
dec
dec
or
aam
cmc
or
dec
mov
outsb
sub
jl
loopne
sbb
fs
xchg
rorb
push
add
or
jae
int3
divb
leave
add
jo
sar
jbe
scas
cltd
pop
fwait
mov
mov
inc
cmp
fwait
mov
iret
out
ljmp
clc
jbe
push
jle
lock
mov
mov
subb
or
mov
cwtl
xlat
dec
je
rcl
xchg
std
mov
pusha
mov
mov
movsb
push
or
xor
push
fcomi
cmp
mov
pop
sbb
loope
mov
std
pop
xchg
or
inc
cwtl
rorl
mov
jo
dec
pushf
mov
cmpsb
lahf
mov
xorb
xor
or
ret
imul
rolb
out
mov
icebp
xchg
mov
test
ret
aaa
mov
cmp
sub
leave
cmp
xor
sub
rorl
xor
or
xorl
jno
sbb
pop
cmpsl
lret
mov
jg
stc
dec
sbb
xor
inc
adc
xor
pop
mov
gs
je
mov
push
jno
jae
add
iret
dec
jae
addr16
or
popa
sbb
pop
rcrb
ss
pop
adc
jnp
adc
pop
stos
inc
pop
lret
cli
and
adc
fsubrs
mov
adc
outsl
test
rorl
loope
inc
xchg
in
clc
andl
xchg
stos
jne
les
movsl
jge
mov
in
cwtl
pop
cwtl
mov
jg
add
sub
sarl
pop
and
inc
leave
xor
and
mov
lcall
lods
inc
enter
popf
mov
inc
and
pop
or
lods
addr16
push
xor
es
les
push
add
push
pop
ret
jle
cli
pop
mov
jno
cmp
cwtl
and
mov
mov
pop
xchg
aas
outsb
push
mov
cmp
mov
jle
scas
fdivr
adc
mov
jo
push
andb
inc
add
xor
jge
cmc
cmp
mov
push
push
cld
push
cwtl
mov
or
push
mov
and
int3
out
mov
enter
cmpsl
mov
call
fmuls
dec
stos
xor
js
sbb
push
out
inc
mov
test
and
aam
dec
sbb
push
in
mov
mov
add
aas
dec
xchg
popa
fidivs
cmpsl
pop
jge
add
cmp
lock
rcrl
icebp
pop
shrl
push
inc
push
mov
dec
pop
push
leave
mov
push
add
mov
jg
out
pop
popl
pop
test
addb
shl
stc
jmp
jg
lcall
inc
sub
or
ds
push
inc
push
add
outsb
jbe
pop
scas
push
fdivrs
sbb
adc
jmp
mov
adc
cmpsl
inc
jb
or
jne
nop
jno
xchg
mov
stc
cmp
fucomi
xor
sbb
push
adc
push
jl
stc
sbb
add
inc
icebp
cwtl
xor
push
adc
mov
cmpsb
cmpsl
mov
pop
add
push
test
cwtl
scas
aad
pop
ss
push
lahf
xchg
lds
movsb
rorb
cli
sub
cltd
xor
push
mov
fcmovnu
je
adc
adc
es
lret
movsl
cmp
repnz
sahf
pop
sub
jnp
or
sbb
jae
sbb
xchg
js
or
clc
aad
scas
test
ds
xchg
cmp
andl
xchg
insl
in
aas
mov
push
and
push
pusha
push
enter
mov
out
sahf
sarb
pop
ret
jae
and
loopne
clc
ss
leave
adc
stc
adc
in
mov
mov
cltd
aas
push
setnp
push
dec
lock
pop
sarl
mov
mov
xchg
dec
rcll
addl
xchg
add
jle
cmp
int
push
pushf
jns
push
imul
push
add
push
pushf
xchg
inc
aam
mov
fdivl
shll
cmp
mov
lds
aas
inc
push
push
sbb
pop
inc
sti
pop
adc
push
pop
add
das
out
aad
fwait
sti
xchg
lcall
sub
jb
les
mov
sub
or
mov
pop
lahf
cmc
orb
shll
push
jge
push
fbld
sbb
xorl
stc
out
dec
push
ljmp
loop
xor
or
inc
cmpsl
je
xor
ljmp
jge
js
sub
pop
xchg
rcll
adc
fwait
jbe
ja
sub
cli
and
push
je
das
adc
test
add
adc
pop
sahf
sarb
and
and
xor
aam
int3
cli
mov
loope
fdivp
cmp
mov
das
imul
jmp
or
and
jno
jge
sub
ja
xchg
add
dec
dec
cmp
movsb
jge
inc
cwtl
push
imul
aad
or
push
mov
sbb
stos
xchg
aam
sub
pop
sti
sub
int3
mov
dec
movsb
je
js
outsb
jmp
adc
add
les
cmpb
cmp
pop
and
insl
dec
fdivr
cs
push
pop
add
jl
inc
pop
jg
in
imull
mov
pop
mov
insb
fwait
inc
ror
je
icebp
jb
add
and
jns
sub
mov
popl
cmp
lahf
icebp
jns
aas
aaa
lcall
or
jecxz
inc
cli
xchg
jb
out
mov
jne
xchg
jg
push
dec
loop
stos
into
imul
stos
mov
loop
or
pop
add
push
push
sbb
or
dec
and
pop
jne
call
iret
movsl
mov
cmc
in
adc
dec
and
pop
jne
call
iret
movsl
mov
cmc
in
adc
dec
and
pop
jne
call
iret
movsl
mov
cmc
in
adc
dec
and
pop
jne
call
iret
ror
pop
daa
cmp
jo
test
push
xor
push
gs
jbe
xor
mov
movsl
cmc
aam
aad
movsl
in
adc
gs
adc
xchg
lds
cmc
aad
lds
adc
gs
adc
xchg
sti
test
mov
lods
icebp
aad
mov
jns
jne
faddp
gs
es
adc
xchg
flds
outsb
jl
dec
mov
push
std
dec
ljmp
jp
in
in
hlt
sub
push
std
movsl
sbb
cmpl
inc
sbb
iret
sahf
and
mov
add
pop
xor
jbe
mov
push
adc
add
add
test
inc
shlb
vcvtps2dq
xchg
call
mov
mov
fisubl
std
xor
in
movsl
movb
sbb
in
rolb
mov
lea
out
mov
shl
cmc
mov
mov
mov
inc
add
jne
add
gs
mov
movsl
cmc
aad
lds
popa
sub
pop
and
push
push
push
xor
inc
std
test
rcrl
daa
xchg
rorb
inc
pop
inc
gs
and
pusha
and
jne
sbb
mov
sahf
ljmp
arpl
add
adc
xchg
lds
cmc
aad
lds
adc
gs
adc
xchg
lds
cmc
aad
lds
adc
xchg
ja
rorb
jb
dec
sbb
adc
mov
xchg
jmp
inc
and
lods
lods
add
dec
adcl
pop
mov
les
adc
mov
sbb
xor
or
dec
sbb
out
adc
and
pop
cltd
mov
mov
add
pop
and
jge
dec
outsl
pop
xchg
mov
hlt
sarl
mov
xchg
pop
dec
push
pop
shl
imul
jmp
sub
mov
negl
mov
mov
cmp
add
pop
outsl
jo
outsl
sahf
mov
movl
mov
je
rolb
inc
jns
xchg
mov
or
rcr
or
mov
insb
mov
frstor
xor
push
pop
cli
inc
daa
jmp
gs
sbb
ret
inc
pop
or
pop
in
cmc
mov
stos
fmulp
dec
cmp
or
inc
pop
pop
jbe
rol
lcall
fcmovnbe
les
xor
mov
push
inc
mov
xor
xchg
push
sbb
inc
inc
jae
ficoms
in
outsb
scas
and
mov
mov
cmp
dec
mov
push
sub
push
or
adc
fidivrl
add
jae
and
in
adc
push
scas
mov
scas
addr16
and
cmp
sbb
or
inc
fs
fcoml
testl
gs
ljmp
mov
imulb
stos
out
adc
dec
mov
ja
out
cld
repnz
push
sub
fsts
clc
sahf
cmp
fsubl
or
fsts
test
adc
or
adc
call
or
clc
mov
movsb
mov
nop
pop
cmp
comiss
in
imul
pusha
test
jp
andps
in
imul
xchg
js
lods
lret
subl
pop
fimuls
test
sahf
inc
jne
mov
pop
movsb
mov
cmp
arpl
push
nop
add
mov
out
mov
push
xor
mov
jne
add
movb
push
sbb
cmc
hlt
mov
ja
push
and
aas
xchg
shll
inc
neg
iret
mov
cmpl
adc
adc
push
mov
mov
ss
lock
xor
lcall
inc
sti
add
add
mov
das
cli
inc
enter
mov
cmp
orl
test
mov
int3
sub
dec
jl
repnz
inc
jnp
ss
mov
adc
fs
lret
in
mov
sub
pop
jmp
cmp
and
test
sub
aaa
pop
jmp
push
jg
dec
inc
mov
jge
arpl
imul
call
inc
or
mov
nop
mov
inc
push
push
out
sub
push
push
cmpl
leave
test
dec
sub
cs
dec
in
mov
sbb
out
pop
add
mov
lret
jb
loop
lret
shrb
jl
sub
je
push
or
dec
mov
movb
mov
cs
inc
add
icebp
xor
sbb
dec
cltd
popa
je
pop
inc
and
xor
inc
and
rclb
sbb
out
and
enter
in
fildl
jnp
pop
mov
jg
dec
xchg
and
f2xm1
lods
stc
or
nop
cmp
mov
sub
dec
dec
ds
das
out
cmp
lods
mov
cmp
jl
or
cmpsb
fisttpll
icebp
sub
sub
adc
cmpsl
lahf
filds
mov
rcrb
cwtl
sbb
negl
jg
jae
pop
sub
popf
aad
cs
cmp
je
arpl
scas
pop
ljmp
shl
pop
repz
pop
jno
xchg
xor
pushf
sti
pop
das
outsl
fiaddl
jl
test
mov
adc
pop
jge
sbb
test
mov
cmp
jl
adc
sbb
divl
pop
pop
les
adc
mov
lds
sub
insl
push
popf
in
sub
aaa
enter
pop
cmp
div
out
mov
sti
lcall
xchg
add
shrb
cmpb
mov
and
aas
in
jl
jmp
nop
and
mov
cmpsb
dec
dec
fistl
jmp
daa
ja
push
adc
mov
ss
icebp
test
test
aas
sub
fdivl
mov
fcoml
xor
lret
jl
lods
pop
push
jmp
push
in
lea
loop
dec
inc
daa
cli
scas
test
and
jecxz
pop
ficoms
movsl
pop
inc
xchg
test
fiaddl
mov
push
test
or
xor
mov
bound
xchg
jae
mov
inc
cld
out
push
sub
xchg
scas
add
fistl
cwtl
dec
fwait
xor
hlt
sub
sub
mov
push
mov
sub
mov
mov
mov
dec
or
jge
jmp
xor
andb
int3
jns
adc
sub
enter
mov
fs
push
cmp
pop
outsb
pop
xchg
or
xor
shll
inc
mov
cltd
pop
int
js
cmp
subb
pusha
leave
push
jns
test
mov
mov
jae
and
xchg
pop
dec
pop
test
sub
pop
pop
add
sbb
jl
mov
sub
mov
mov
jle
xor
inc
lcall
popa
icebp
cmp
roll
insl
mov
stc
fstl
cmp
sub
pusha
push
dec
rclb
test
adc
pop
mov
stos
pushf
enter
aam
sbb
inc
shll
pop
pop
leave
adcl
push
int3
outsl
xorb
push
into
out
and
or
movsl
fisubs
cmp
cmpsb
cmp
inc
dec
and
scas
xor
ds
stos
insl
aam
xchg
mov
ffreep
jmp
repz
into
flds
iret
repnz
and
pop
dec
ret
or
and
or
push
clc
je
daa
sarl
fadd
insb
in
dec
into
and
sub
sbb
add
mov
jge
pusha
and
mov
xor
aas
and
mov
push
leave
sub
and
xchg
stos
sub
xorb
jne
jo
jnp
das
dec
dec
leave
jb
les
fimuls
je
into
jns
mov
push
push
in
das
inc
dec
adc
leave
jno
aaa
xchg
adc
and
pop
js
loopne
add
and
push
test
sub
push
call
pop
negb
mov
out
mov
push
movsb
mull
in
push
ljmp
scas
or
xor
cltd
or
hlt
sahf
push
lds
jge
add
sub
dec
mov
mov
scas
xchg
cmp
pop
jge
mov
jl
in
xchg
or
in
inc
int3
adc
xchg
out
mov
lods
cltd
sbb
add
imul
inc
arpl
xor
add
pop
bound
xchg
push
fisttpl
xchg
in
pusha
fiadds
mov
in
outsb
pop
inc
pop
ljmp
push
or
jmp
mov
mov
cmp
mov
mov
jo
pusha
pop
fs
and
popa
add
test
and
call
xor
cmp
push
jno
push
jge
sbbb
faddl
filds
je
loop
fstp
mov
outsb
push
addb
mov
cmpb
fs
xchg
mov
test
adcb
js
outsl
jns
addr16
adc
popa
rorl
xchg
pop
mov
add
sbb
rcrl
adc
mov
cli
cli
push
xor
push
mov
aaa
jmp
fisubs
pop
cmpsl
xchg
and
insb
mov
jae
or
ds
sub
add
hlt
and
mov
in
fildl
jno
testl
enter
mov
stos
xor
fs
lock
fnstcw
xchg
in
and
xchg
lods
sbb
test
inc
pop
jnp
xchg
arpl
rolb
mov
xchg
popf
add
sbb
aad
and
stc
and
stos
dec
out
xchg
xchg
xor
and
clc
xor
sbb
or
ret
mov
push
push
mov
aas
push
lds
mov
popf
bound
adc
mov
mov
mov
sub
dec
sub
lds
stos
mov
js
mov
adc
lahf
dec
mov
lods
fpatan
mov
or
mov
stos
cmpsb
and
mull
pop
pop
out
lds
sti
mov
es
jnp
lret
add
sbb
in
cwtl
das
ret
dec
jl
jecxz
aas
dec
jns
xchg
sbb
push
js
dec
push
mov
push
xchg
out
mov
jecxz
mov
pop
or
cmp
pop
mov
loop
xchg
add
std
or
adc
je
dec
test
int3
push
dec
pop
shlb
repz
sub
jecxz
or
sbb
cmp
stos
ja
mulb
xor
in
push
outsb
pop
inc
lods
scas
pop
push
xor
and
and
pusha
sub
jb
mov
in
shrl
push
out
jb
xchg
add
cmp
jmp
pop
insb
jg
jp
mov
xchg
or
xor
mov
cmp
mov
test
leave
insl
sbb
ljmp
lock
mov
xor
or
data16
add
sbb
fiaddl
je
add
push
shll
add
sub
fdivr
stc
test
enter
lock
fmulp
jae
mov
jae
sti
fdivrs
mov
jle
cltd
mov
sbb
loop
lahf
stos
fwait
stos
aaa
lea
pushf
mov
ret
adc
and
pushf
add
xorl
icebp
add
movsl
mov
pop
rorb
out
sub
jecxz
mov
dec
and
insl
cmp
sbb
sbb
out
inc
xor
pop
aaa
lcall
xchg
jle
int
outsb
lret
addr16
sar
xor
shr
loop
ja
jno
xchg
mov
sub
and
xor
aaa
fwait
push
ljmp
pop
xchg
mov
pop
dec
ja
xlat
cwtl
mov
dec
insb
xchg
movsl
xor
xchg
mov
mov
lcall
pop
stc
shll
aam
jo
rcl
cmp
sub
and
xor
mov
xchg
cld
jl
fiaddl
xchg
jecxz
mov
subl
push
test
insl
cld
fisubrs
iret
sbb
xchg
out
aad
scas
xchg
pushf
scas
cmp
jg
clc
xchg
mov
shrb
sahf
or
sahf
xchg
inc
in
out
or
pop
mov
sti
fwait
out
les
mov
xchg
dec
xlat
xor
pop
xor
sbb
fld
mov
jmp
jl
test
and
lret
call
lock
mov
and
inc
push
jecxz
ds
add
inc
fwait
daa
dec
xor
mov
pop
dec
test
stc
xchg
int3
cmpl
imul
jp
stos
imul
push
mov
inc
insl
lock
or
lret
mov
leave
addr16
adc
or
xchg
cmp
push
adc
jae
mov
dec
dec
mov
enter
jns
inc
push
movsl
sbb
lds
mov
fnsave
jp
sbb
aas
add
in
stos
insl
mov
cmp
ret
or
sahf
mov
mov
loopne
sub
ljmp
imulb
fsubl
call
push
pop
xchg
dec
loop,pt
insb
inc
mov
outsl
lds
mov
enter
or
fsubrl
lods
add
inc
dec
push
lods
add
data16
outsl
test
sbb
or
and
int3
mov
cmp
aas
popa
in
fs
scas
cmp
push
mov
mov
adc
pop
xchg
cmp
shlb
rorb
lcall
adc
es
les
fistps
les
out
and
sbb
dec
mov
aas
pop
bound
andb
mov
xchg
cmp
lret
mov
push
inc
mov
lds
xor
sbb
adc
xchg
pop
cmc
mov
jge
addr16
ds
push
das
jecxz
std
fwait
pop
push
lods
and
mov
add
ja
push
test
adc
dec
jp
cmp
jmp
jno
mov
sub
inc
sbb
sbb
shll
mov
inc
out
call
push
inc
mov
test
loop
int3
jecxz
arpl
imul
dec
lods
ds
dec
adc
fs
shlb
andl
enter
in
mov
mov
enter
scas
xchg
fildl
fildll
les
stos
lahf
es
sbb
push
or
jle
sbb
rcrb
sar
fwait
xchg
scas
pop
mov
cltd
jb
sub
popa
pop
imul
imul
hlt
jo
cmp
ret
pop
xchg
lods
and
cmpsl
cmpsb
sub
call
mov
cmp
jae
inc
mov
push
fwait
ret
lret
mov
push
arpl
fldcw
int
popa
push
call
lret
pop
sbb
adc
fs
mov
push
lock
ljmp
mov
xor
sti
dec
mov
nop
pop
popl
cmpsl
sbb
lods
or
push
xor
add
dec
iret
imul
imul
and
push
xchg
mov
cltd
aas
sbb
test
pop
pop
add
mov
stos
loope
cmp
lods
lock
xor
ljmp
xchg
mov
insl
push
fs
std
xor
mov
adc
sub
push
addr16
loope
xlat
aas
aam
mov
insl
dec
push
xor
push
test
dec
sti
bound
mov
dec
pop
stc
out
fucomp
std
inc
sbb
imul
jmp
enter
cmp
and
xor
fwait
stc
rcrl
shll
rorl
xchg
mov
and
int
es
roll
test
lret
addr16
popa
movsb
adcl
fldl
shrl
or
push
cmc
mov
rsm
pop
mov
sarb
icebp
cmp
popa
dec
into
loop
sub
into
jno
gs
pop
inc
repz
sbb
mov
sub
inc
dec
jbe
ja
mov
inc
pop
xchg
leave
and
mov
push
cmpsl
adc
pop
nop
mov
jl
sub
cmp
sub
aaa
jg
mov
add
lds
pop
dec
cmp
pop
int
dec
jo
pop
cmp
push
outsb
mov
mov
js
cwtl
pop
and
push
pop
popa
in
movb
rcl
sti
in
enter
clc
stc
fimuls
pusha
icebp
push
fsts
jg
cmpb
clc
push
inc
ljmp
xchg
test
in
add
cwtl
mov
dec
fs
add
jp
sbb
lock
and
in
xlat
pop
fs
fldt
shr
inc
mov
bound
movsb
add
and
inc
scas
repnz
stc
insl
sbb
cmp
idivl
mov
mov
mov
sub
mov
int
movb
push
lock
jbe
cmp
imul
inc
and
inc
sbb
scas
sbb
inc
pop
sbb
leave
cmp
xor
push
inc
push
aaa
pop
ss
jmp
jne
xchg
push
push
stos
in
and
xor
inc
lods
cmp
add
sbb
aaa
scas
out
scas
addr16
pop
popf
jp
jbe
fimuls
insl
icebp
addb
fwait
scas
rcrb
lcall
loop
inc
push
ja
test
adc
push
and
arpl
lock
inc
pop
mov
adc
mov
push
rcrl
or
push
inc
dec
addl
push
sbb
jne
outsb
or
xchg
dec
push
fisttpll
popa
rolb
lret
insl
adc
and
in
movsl
fildll
fsubl
push
xor
add
pop
mov
cmp
fisubrs
cmp
pop
and
fdivrl
lea
test
dec
cmp
adc
sbb
aad
jne
lods
daa
adc
in
mov
xchg
test
sbb
test
xchg
or
into
add
idiv
xor
stos
stc
ja
xor
cmpsb
or
inc
jle
mov
in
inc
scas
das
push
cs
xor
lods
pop
push
mov
mov
negb
push
or
pop
cmp
dec
pop
popf
lcall
repnz
or
lock
mov
hlt
jg
imull
push
cli
jb
push
inc
lea
and
dec
and
mov
insb
or
call
jns
cmp
in
lods
xlat
insb
cmp
mov
sbb
imul
dec
push
shrl
jge
cmp
pusha
roll
cmp
pop
jb
or
cmp
rorb
mull
mov
and
mov
push
add
cld
and
mov
adc
loopne
pop
pop
mov
push
cld
call
xor
sub
imul
jno
bound
loop
mov
cmp
push
mov
xchg
jge
js
out
aad
in
cmc
vpmacssdql
adc
inc
xchg
in
movsb
jge
mov
fistps
fnstenv
add
adc
out
orl
fadds
cmp
adc
int
rcrb
mov
mov
icebp
fists
lds
stos
aaa
dec
or
mov
mov
frstor
push
push
mov
scas
add
and
inc
insl
sub
cltd
fwait
push
cmpsb
add
xchg
in
stc
jmp
addr16
mov
or
int
daa
fsub
mov
fnstcw
iret
mov
dec
cmp
mov
fwait
jl
into
cmp
inc
mov
inc
lods
outsb
cwtl
add
inc
and
comiss
not
dec
xchg
jo
xor
sub
dec
cmp
inc
adc
enter
or
fidivl
jg
adc
outsl
rolb
jnp
jge
mov
call
mov
dec
inc
mov
jl
pop
out
rol
stos
adc
sbb
and
scas
adc
add
mov
lods
inc
je
ds
aad
ret
jle
inc
cli
inc
jge
setl
sub
in
pop
hlt
mov
pop
dec
imul
dec
xchg
add
lahf
lock
decl
add
inc
fidivrs
xor
adc
lahf
or
pop
std
dec
inc
jmp
push
mov
lock
popf
movsb
movsb
sub
lods
push
ret
in
mov
div
adc
stos
or
data16
cmp
pop
shrl
iret
add
pop
js
test
les
mov
add
aad
mov
bound
mov
push
sbb
xlat
int3
pop
cmpsl
int3
xor
hlt
pop
ss
adc
xor
mov
inc
loope
test
mov
aad
gs
jne
push
mov
outsb
push
add
mov
jle
leave
fwait
inc
aaa
push
scas
adc
mov
out
xor
inc
fs
fisubrl
mov
daa
sbb
out
or
in
nop
icebp
lret
in
add
add
lcall
mov
dec
mov
jp
push
inc
cwtl
push
jnp
ljmp
pop
filds
sbb
aad
into
dec
push
or
insl
aam
pop
mov
pop
xor
push
test
xchg
mov
jle
dec
nop
push
push
fsubl
xchg
insb
repz
in
xchg
dec
xchg
mov
cli
aad
fwait
rdtsc
xchg
lods
ds
cmpsb
push
lds
add
pop
leave
cmpsl
stos
adc
nop
gs
aam
in
and
icebp
cmpl
int
je
scas
ret
xchg
xor
inc
clc
mov
mov
dec
inc
sbb
cmp
and
xlat
pop
inc
mov
cmp
call
dec
mov
sub
xor
ljmp
cmpsb
and
pop
jg
xchg
dec
adc
mov
mov
ss
push
cld
push
popf
hlt
push
std
lahf
adc
xlat
inc
xchg
dec
xchg
repz
outsl
or
adc
and
cltd
adc
ss
cmpsb
popf
daa
cltd
jg
pop
sbb
fwait
jb
in
inc
pop
pop
adc
loope
mov
scas
int3
cmp
idivb
mov
and
insb
je
mov
scas
je
push
inc
jns
lds
mov
mov
sub
ret
leave
lahf
ret
cli
cmp
dec
idivl
dec
ret
push
mov
daa
jnp
loopne
daa
aaa
dec
cmp
and
push
stos
inc
push
ret
fs
adc
xchg
lds
cmc
aad
lds
adc
gs
adc
xchg
lds
cmc
aad
lds
adc
gs
adc
xchg
lds
cmc
aad
lds
adc
add
xor
and
xchg
jne
gs
test
in
andb
sbb
push
stc
out
neg
xor
mov
jne
pop
jbe
push
sub
sbb
sbb
jmp
neg
xchg
mov
push
imul
imul
or
sbb
lock
stc
shr
rcrb
mov
pop
mov
cmp
pop
push
push
popa
sbb
mov
xchg
pusha
addr16
jno
shl
repnz
dec
cs
ret
cmc
pop
inc
inc
mov
mov
lods
and
adc
jmp
mov
lods
push
insb
es
push
cmp
sub
xchg
mov
inc
call
mov
adc
test
faddl
cmp
cmp
divl
sbb
mov
shr
jns
xchg
jns
shll
xchg
mov
lods
xorl
xchg
rcrl
imul
cmp
mov
flds
inc
in
jns
or
pop
incb
mov
or
out
out
sbb
xchg
xchg
pop
push
mov
adc
push
es
inc
jp
dec
divb
or
jmp
test
test
scas
sbbb
popa
jle
outsl
inc
push
xor
cs
ss
mov
fdiv
push
xlat
jmp
mov
inc
add
add
inc
jae
push
or
test
mov
xchg
mov
adc
sbb
aaa
sbb
pop
jge
push
gs
jl
test
pushf
mov
xchg
mov
inc
imul
push
sub
cmp
or
sbb
jmp
neg
xchg
mov
inc
imul
push
sub
cmp
or
sbb
jmp
test
ljmp
jno
call
adc
push
inc
adc
pop
pop
testl
pop
ds
cmpsl
mov
cmp
movsb
inc
dec
repz
out
sbb
cmp
lods
dec
cmc
jbe
into
ljmp
lret
push
outsb
jbe
push
lods
leave
and
mov
sbb
fs
pop
pop
push
push
mov
mov
push
or
sub
gs
ljmp
lods
in
shl
inc
pushf
xchg
sub
outsl
ficompl
fnsave
lds
outsb
inc
dec
movsbl
jnp
dec
shrb
rorl
xor
pop
test
out
jmp
pop
sarb
fisubl
xchg
imul
or
fistpl
fs
sbb
int
pop
and
jg
lcall
ss
xchg
ja
dec
adc
nop
jle
adc
cwtl
push
outsb
jne
setne
inc
js
jg
popf
jb
ja
stc
stc
cltd
cmpsb
sub
jbe
mov
dec
lcall
dec
call
inc
hlt
outsl
cmp
pop
cmp
je
int
outsl
fisttps
xor
push
jle
mov
lea
adc
sbb
aad
adc
stos
nop
in
stos
push
lea
rcll
sbb
dec
fucomp
mov
mov
cld
add
mov
inc
iret
test
in
xlat
outsl
ficoml
dec
addr16
shrl
inc
pop
or
mov
add
xor
pop
stos
ffree
mov
xchg
mov
and
repnz
outsb
call
dec
mov
iret
in
frstor
repz
mov
cmp
xchg
insl
push
xchg
and
push
loope
enter
test
pop
or
lods
out
imul
mov
leave
cmp
push
xchg
jp
fbld
pushf
out
sbb
dec
add
cli
movl
stc
fs
pop
dec
mov
in
cmpsb
les
mov
out
dec
shl
cmc
cmp
cmc
sbb
out
decb
pop
push
jne
inc
mov
imul
scas
sbb
cs
mov
push
and
gs
je
roll
lea
inc
xor
xor
pop
cmp
jecxz
fstpl
sub
fdivs
jmp
jl
mov
push
fcmovb
mov
push
mov
lods
xorl
jne
ljmp
fldcw
iret
lds
sbb
lret
mov
and
pusha
fs
xor
inc
cmpsb
xor
pop
out
xchg
daa
loopne
mov
adc
and
inc
shl
xchg
sub
adc
adc
mov
fiadds
xchg
push
jmp
cmpsb
jp
shrb
mov
fldenv
out
jle
dec
add
jbe
adc
push
inc
enter
scas
aad
dec
mov
or
sub
inc
xchg
pop
or
jo
add
insl
gs
mov
and
imul
push
dec
jb
jl
aam
adc
dec
pop
rep
add
ss
bound
jb
lret
iret
jns
mov
push
cmpb
dec
and
push
mov
jb
les
sbb
xchg
inc
push
cltd
mov
lds
int3
mov
ds
cmp
adc
cli
add
mov
lea
cwtl
cmpl
inc
pop
jecxz
test
inc
mov
iret
pop
stos
sub
in
add
sbb
mov
push
dec
ss
jge
adc
adc
fs
scas
push
mov
mov
mov
daa
lods
data16
imul
sti
sbb
scas
rcrb
inc
mov
lret
jne
push
sbb
xor
xchg
rclb
adc
scas
add
or
pop
inc
pop
bound
add
mov
jns
je
data16
or
loop
les
dec
pop
movsb
std
sti
jb
cs
or
xor
xlat
jge
xchg
cmp
jne
mov
add
clc
subb
xchg
push
sub
ss
cmpsl
stos
enter
sahf
sbb
pop
addb
sub
cmp
and
test
out
and
lahf
popa
ficoms
in
mov
ss
pop
sub
pop
inc
dec
or
mov
xchg
mov
push
fnstenv
pop
test
adc
add
mov
jns
push
dec
push
in
or
ret
mov
xchg
cwtl
dec
mov
int3
hlt
addr16
sbb
mov
sub
das
aas
xchg
out
xchg
mov
aas
mov
stos
cmp
lods
sub
and
or
sub
clc
pushf
push
nop
adc
repz
xchg
xchg
adc
lods
mov
push
aad
and
xchg
sahf
and
push
std
sbb
filds
push
aaa
cmp
mov
xor
lea
lret
xchg
push
bound
push
fxch
mov
or
mov
aad
pop
xchg
sbb
aas
int3
mov
int3
orb
and
cmp
outsl
pushl
and
mov
les
mov
cmp
pop
sbb
push
popf
xchg
aad
jl
sub
popa
jmp
lea
imul
adc
mov
aaa
push
inc
iret
add
mov
sbb
sub
pushf
adc
pop
push
pushf
jl
test
mov
sti
insb
jp
jle
repz
mov
aaa
xor
in
xorl
mov
inc
popa
mov
daa
dec
xchg
inc
loope
scas
stos
mov
mov
cmc
lds
mov
lds
adc
sahf
inc
mov
pop
pop
in
outsb
fwait
inc
mov
imul
push
fwait
lea
jge
insl
jp
mov
roll
imulb
stc
jae
mov
mov
xchg
outsb
xchg
ds
and
and
jmp
mov
outsl
or
jae
sahf
adc
jae
jbe
jne
mov
sbb
sub
dec
cmc
adc
in
lds
enter
add
and
es
popf
jg
jb
lds
sti
xor
adc
sbb
adc
mov
orb
or
stc
mov
push
jbe
pop
sub
jmp
mov
lahf
rcrl
decl
shrb
and
dec
cs
mov
xor
sbb
subl
or
mov
les
jb
shlb
and
push
in
fldt
sbb
movsb
and
test
sbb
fimuls
lret
dec
stos
scas
enter
int
push
inc
ficoms
out
movsb
or
mov
mov
pop
in
push
stc
cltd
jne
cmp
xchg
out
sbb
jae
stos
cmp
rcrb
dec
mov
notl
xchg
push
fwait
inc
or
jnp
pop
adc
inc
inc
in
mov
mov
repz
and
xor
pushl
add
pop
rolb
cwtl
into
movsl
addb
pop
adcb
insb
pop
push
out
out
and
sub
fdivrl
mov
aaa
mov
and
dec
scas
push
push
mov
cmp
fstpl
out
fiaddl
inc
xchg
sbb
int
add
imull
loop
mov
pop
fsubrl
pop
pop
push
inc
ljmp
mov
lcall
pop
push
mov
ror
aas
nop
int
cld
insb
inc
cmp
shll
sbb
xor
pop
stos
clc
add
mov
lea
call
mov
sbb
ss
gs
pop
ss
mov
iret
push
orb
cld
fisttpll
pop
dec
xchg
fiaddl
stos
das
cmp
aaa
into
roll
in
sahf
outsb
cmp
aas
xchg
mov
mov
push
insb
filds
cmp
icebp
addr16
int
int
mov
push
inc
scas
mov
ss
lock
ljmp
int3
or
out
add
dec
rolb
cmp
pop
fwait
sarl
pop
dec
or
push
push
jo
mov
mov
nop
jp
jae
xchg
leave
adc
add
aam
inc
xchg
jmp
fadd
cld
lea
sub
imul
jge
xor
cld
stos
mov
inc
push
xor
aam
pop
arpl
sbb
ljmp
push
addr16
enter
idivb
into
xor
xchg
cmp
cmp
scas
xchg
fildl
fsubl
and
cmp
push
cmp
cmp
cli
in
dec
jno
pop
inc
call
test
dec
cwtl
dec
sbb
leave
js
pop
cmpsl
cli
gs
fmuls
fdivr
rorb
add
add
jmp
sub
sub
and
and
fwait
cltd
push
stos
push
push
and
loope
daa
sbb
out
fdivrl
ffreep
cs
ret
push
pop
movsl
outsb
push
inc
dec
xchg
dec
jb
clc
hlt
mov
mov
stos
dec
pinsrw
bound
inc
cmp
mov
fsubrl
pop
cld
fs
push
xor
jb
stc
pop
jl
mov
cmp
xchg
mov
mov
orb
pop
ljmp
cmpsl
sub
dec
hlt
push
add
out
mov
andb
cmp
lret
xchg
pop
xchg
sbb
bnd
mov
rcl
int
stos
ljmp
adc
cltd
mov
out
daa
pop
scas
add
pop
cmc
xor
cmp
lea
fxam
das
xchg
clc
sbb
std
loop
pop
pop
jb
push
jbe
cmp
xchg
or
add
sbb
adc
or
fidivrs
scas
jp
clc
test
stos
mov
sbb
je
xor
mov
shrb
insl
inc
jmp
jb
leave
xor
hlt
add
dec
mov
push
sbbl
push
leave
fistps
xchg
test
into
mov
outsl
shll
fwait
cli
cmp
call
mov
adc
rorb
xchg
pushf
test
leave
cmp
dec
es
mov
lret
xchg
inc
mull
xchg
sbb
mov
inc
mov
push
push
jge
adc
cli
xor
sbb
scas
or
movsl
iret
dec
jo
adc
and
mov
pop
ja
out
dec
fistpl
add
push
mov
mov
imul
lret
in
mov
sbb
out
push
lret
clc
sbb
add
hlt
mov
or
xchg
jp
push
sub
iret
or
or
orb
in
out
iret
fldl2t
xchg
jg
mov
les
sub
sub
lret
leave
pop
cmp
xlat
daa
push
pop
not
inc
mov
jno
push
cmp
push
sub
mov
rclb
mov
and
aam
addl
add
repz
jg
stos
call
push
inc
fnstsw
loopne
push
fistpl
dec
push
mov
notl
xchg
xor
mov
arpl
mov
leavew
xchg
push
add
cmp
cmpsb
lahf
push
push
push
popa
cmp
fwait
lcall
movsl
and
adc
sahf
mov
mov
andb
dec
cld
mov
add
mov
mov
xor
leave
jb
in
daa
inc
pop
dec
and
sub
jp
dec
mov
mov
push
sbb
lea
jg
dec
dec
xchg
push
sub
inc
mov
dec
mov
lock
out
lret
cmc
mov
and
xor
xor
adc
xchg
in
leave
sub
or
pushf
in
iret
mov
rclb
fisubl
sub
mov
xorb
inc
mov
adc
pop
jnp
js
cpuid
aam
adc
ljmp
sbb
movsl
int3
add
loopne
pop
adc
test
xlat
jnp
data16
daa
js
pop
int
push
jo
in
fnstenv
sarl
push
mov
adc
jge
shll
icebp
dec
hlt
pop
mov
mov
mov
dec
jecxz
inc
rolb
jle
pop
ret
xlat
std
repz
push
test
js
lcall
mov
add
jne
xchg
shl
jg
mov
push
mov
dec
outsl
mov
and
leave
arpl
aam
adc
mov
inc
mov
sbb
hlt
lret
mov
ret
gs
pop
push
js
and
data16
add
jo
decl
xor
addl
shlb
add
mov
cmp
pop
data16
pushf
nop
mov
out
scas
mov
adc
or
xchg
dec
sbb
packssdw
sbbl
subl
leave
out
aam
push
sub
sub
adc
lods
sub
sbb
mov
fisttps
mov
out
add
pop
lahf
out
xor
sbb
outsb
pop
pop
lret
lahf
mov
dec
cs
lcall
mov
mul
js
xchg
adc
jge
jl
mov
call
cwtl
shlb
pop
or
add
xchg
icebp
and
nop
repnz
into
das
arpl
outsb
scas
push
jb
and
test
leave
xor
and
mov
test
or
notb
cmc
mov
or
xchg
test
bound
pop
lahf
mov
movsb
decl
jg
mov
dec
jo
mov
dec
das
pusha
mull
into
fmul
pop
das
push
xchg
sti
jns
sub
stos
mov
inc
xchg
addr16
lods
les
push
arpl
mov
repnz
adc
add
or
lods
adc
into
push
scas
push
fistl
pop
into
add
fisubrl
jns
xchg
iret
subl
mov
add
add
jge
test
out
inc
dec
cli
inc
sbb
aas
iret
inc
stos
ret
fisubrs
cmp
test
daa
lret
or
fdivs
mov
shl
push
pop
pop
xlat
leave
sub
add
loop
sbb
ficoms
cmp
mov
mov
cwtl
xor
lret
insl
stc
pusha
dec
push
pop
aas
xor
mov
rorl
into
fs
mov
push
mov
fcoml
cmp
pop
fsts
ja
fldenv
pop
or
push
add
mov
xchg
dec
movsb
out
add
hlt
loopne
or
pop
jle
mov
lcall
shrl
jo
add
imul
ret
inc
call
cmpsl
in
inc
fsts
std
or
cli
ret
pop
inc
int
sahf
cmp
dec
imul
in
cmp
add
pop
imul
mulb
add
pop
adc
sub
push
inc
add
pop
or
insl
dec
out
insl
repz
sub
mov
push
ss
adc
mov
adc
mov
adc
out
test
addr16
fs
pop
cs
or
jl
fsubrs
adc
scas
push
push
bound
jb
lcall
mov
enter
in
gs
dec
addl
in
or
jl
mov
faddp
les
add
cmp
repnz
and
enter
xchg
mov
sbb
add
sub
pop
mov
add
mov
mov
add
sub
nop
imul
lret
sarb
pop
pop
add
ljmp
stc
mov
jp
in
mov
pop
dec
xor
lods
rcrb
outsl
jle
mov
sub
mov
icebp
mov
sub
or
int
sbb
jae
es
jnp
movw
cwtl
jno
add
mov
inc
or
sbbb
leave
cwtl
inc
sub
and
insl
xor
sahf
cmc
push
pop
dec
cltd
xchg
push
repz
lock
mov
jns
xorb
fsub
mov
test
mov
mov
xchg
xor
cmp
scas
movsl
jge
inc
mov
hlt
ror
push
push
in
xchg
pop
enter
cmp
jl
mov
push
add
imul
int3
movsl
fldl
aas
repz
push
nop
adc
sub
push
call
add
dec
test
push
xor
sub
sub
lahf
jecxz
jns
mov
inc
push
inc
imul
cmp
js,pt
rolb
mov
mov
adc
data16
lcall
popf
paddusw
push
mov
idivb
out
movl
mov
movsl
xchg
mov
or
push
xchg
jmp
sub
inc
mov
outsl
xor
daa
lods
loop
insb
out
mov
sub
pop
mov
push
insl
push
sub
mov
lret
imul
loop
cmp
mov
out
xchg
das
xor
mov
bound
sti
ds
xchg
aam
sti
outsl
ljmp
sub
hlt
jmp
hlt
dec
aam
jg
or
cmc
test
arpl
and
lock
add
fbstp
xchg
movsl
dec
mov
cmp
xor
add
push
cmpsb
push
and
jne
pop
sub
movsl
jle
imul
inc
ja
and
xchg
int3
popa
or
lods
test
mov
jbe
dec
cmpb
aam
cmpb
xchg
frstor
test
or
and
adc
cli
mov
mov
cli
jl
pushw
fs
adc
or
std
jle
mov
jg
mov
dec
pusha
ljmp
shlb
adc
cltd
insl
sub
mov
into
bound
ss
ffreep
int
in
jmp
mov
pop
repnz
jmp
mov
pop
or
rcll
sarl
fldt
mov
push
adc
inc
negl
js
aaa
lret
dec
sub
test
cs
lds
into
add
sarb
push
sub
and
pop
enter
in
fs
andb
aaa
sbb
call
xor
call
push
adc
dec
fdivrs
rcrl
mov
mov
fcomi
in
xchg
cmp
dec
ds
loope
les
adc
inc
push
icebp
pusha
cmp
lock
adc
push
or
sub
jns
fistps
lcall
sub
sbb
roll
push
popa
lret
pop
cli
fwait
hlt
adc
orl
cmc
mov
xor
enter
jmp
push
cs
stc
jo
rcl
call
imul
cli
lock
inc
push
sar
cmc
sub
clc
jmp
xchg
add
push
fstpt
jno
and
xchg
fs
add
adc
andl
mov
mov
stos
push
or
test
ljmp
pop
movsb
sub
sub
push
push
inc
popf
cmp
orl
adc
add
sbb
inc
mov
xchg
mov
xchg
inc
arpl
aaa
arpl
mov
int3
mov
mov
jp
fisubrs
js
pop
sti
test
sbb
xlat
cmp
and
xor
jae
out
add
sbb
movsb
mov
and
test
das
data16
mov
mov
or
jp
repz
lret
sbb
xor
sub
into
mov
mov
jg
cmp
and
in
add
inc
aas
inc
ljmp
outsb
inc
mov
pop
rcll
pushf
cltd
mov
cltd
xor
shlb
sub
movsl
mov
mov
aas
scas
mov
sti
ret
fcompl
xchg
ss
cmpsl
cmp
mov
jl
sbb
sbb
lock
push
or
dec
or
inc
push
scas
cmpsl
cld
repnz
push
std
inc
xchg
test
add
pop
adc
cmc
test
cltd
fadd
jmp
mov
sbb
dec
fdivs
cmc
mov
mov
int3
pop
dec
lret
dec
movsl
jo
pop
lock
hlt
or
jno
mov
add
lods
lock
push
arpl
jle
fs
push
sub
leave
mov
or
insl
dec
sub
call
inc
repnz
push
adc
adc
ja
jg
into
xlat
fwait
adc
jle
jns
in
outsl
mov
mov
je
sahf
xlat
lcall
daa
js
ret
adc
adc
adc
pop
mov
int3
push
arpl
rclb
cmp
mov
cmp
mov
pop
add
mov
lahf
hlt
add
mov
adc
lret
pop
repnz
ljmp
arpl
dec
scas
lods
xor
adc
sbb
pop
inc
mov
andl
or
sub
imul
cmc
mov
cltd
test
sub
mov
add
data16
rcll
popa
mov
sub
sub
push
dec
fcomps
mov
rclb
sub
jmp
dec
xor
stc
inc
adc
push
inc
mov
sub
in
es
xchg
mov
inc
imul
push
sub
cmp
or
sbb
jmp
neg
xchg
mov
inc
imul
push
sub
cmp
or
sbb
jmp
neg
xchg
mov
inc
imul
push
sub
cmp
or
jmp
neg
test
ss
mov
dec
jbe
jno
sahf
fdecstp
leave
out
ds
rcrl
loope
jno
dec
or
sub
inc
mov
inc
lods
push
lahf
popa
jno
add
adc
and
xor
shrl
pop
loope
icebp
jg
outsl
sbb
mov
popa
jno
outsb
out
adc
popa
iret
xor
push
das
rcrl
dec
psllq
outsl
lods
pop
dec
dec
test
out
ds
push
cmpsb
xor
dec
mov
jo
cmp
mov
les
inc
test
xchg
mov
fs
aaa
mov
dec
rol
loopne
repnz
jg
outsl
insl
mov
and
popa
or
test
out
rorb
rolb
sti
inc
fildll
sarb
cmp
int3
mov
cld
and
loope
and
add
rcr
or
adcl
add
jo
scas
add
out
daa
leave
inc
bound
cmp
movsl
dec
aam
test
cmpsl
inc
adc
outsl
adc
xor
into
add
xlat
insb
and
in
sti
loope
dec
clc
inc
ljmp
add
cld
shrl
pop
psubq
outsl
xchg
pop
jnp
xor
jno
cmp
sub
iret
pop
pop
xchg
dec
rcrl
dec
fistps
cmc
add
xor
lret
aam
pop
lret
adc
scas
gs
test
jl
dec
aam
out
and
sbb
or
int
enter
push
or
pop
mov
movsl
pop
pop
xchg
das
xchg
pop
mov
xchg
cmp
outsl
xchg
pop
mov
scas
push
lahf
popa
jno
add
adc
and
xor
shrl
pop
loope
icebp
jg
outsl
xchg
pop
mov
scas
push
lahf
popa
jno
add
adc
and
xor
rorl
inc
jo
scas
sbb
cli
or
jl
mov
arpl
add
mov
push
or
insb
push
cmp
das
sbb
std
pop
pop
scas
mov
mov
fstl
add
add
popf
fadds
in
add
out
movsb
jo,pn
fwait
les
int3
stos
xor
aam
xor
inc
in
es
dec
cvtps2pd
xor
sahf
adc
bound
stc
in
sbb
sbb
mov
push
scas
dec
pusha
orb
mov
mov
adc
jns
xchg
pushf
loop
push
mov
mov
lods
cli
mov
mov
sahf
jns
adc
jmp
mov
pop
jb
cmpsl
jns
mov
xlat
jmp
mov
or
push
jmp
push
mov
xlat
outsl
jae
xchg
xor
and
xlat
les
jo
dec
dec
aas
sti
fwait
notb
icebp
call
inc
sub
repnz
add
insl
int3
fcoms
and
fistps
cwtl
lret
fiaddl
fdivl
insl
mov
stc
dec
push
push
jo
fisubs
add
clc
psrlw
cwtl
sub
add
push
xlat
push
cmp
inc
push
cmc
jle
arpl
enter
sbb
aam
jle
scas
cmp
or
jmp
jns
xchg
dec
pop
je
dec
mov
cmpsb
lods
pop
out
inc
push
roll
xchg
std
mov
mov
in
hlt
in
cmpsl
lea
ds
testb
jno
xchg
adc
int
push
jnp
stos
lds
push
inc
out
test
insb
loope
rolb
xchg
inc
push
xlat
xchg
ret
int3
mov
fildl
cmc
sarb
mov
jnp
mov
dec
jne
jmp
mov
sbb
jge
mov
xor
mov
je
dec
pop
in
mov
cwtl
daa
xchg
fdivrs
sub
sarb
cld
inc
sarb
popf
push
pop
ret
sbb
cmp
push
shl
mov
mov
aad
xchg
and
sub
mov
lods
jno
xlat
add
ljmp
leave
or
push
push
out
rcr
xor
aad
xchg
pop
cli
xor
mov
out
mov
pushf
and
jg
lock
mov
mov
or
jno
sahf
insb
aad
lcall
cs
shlb
dec
pop
aam
out
lret
sub
lcall
leave
pop
rolb
jae
shr
es
ficoml
enter
mov
jo
in
test
mov
cld
inc
clc
loope
add
sub
push
push
gs
imul
inc
jge
and
lock
cmp
xor
lcall
leave
call
push
icebp
vmaxps
inc
addr16
push
xchg
out
stos
sti
sbb
push
insb
scas
ss
or
mov
jle
shll
push
jmp
mov
pop
push
bound
leave
inc
lret
jg
jle
clc
inc
stos
daa
mov
sub
xchg
pop
pop
xchg
cld
mov
pop
fwait
sub
pop
pop
in
lahf
shrl
jo
mov
jb
cmpl
int3
xchg
testb
icebp
into
mov
add
fstl
mov
gs
and
mov
add
nop
or
xor
jnp
jae
jecxz
inc
adc
mov
sar
add
mov
cmpsb
sti
jb
in
mov
mov
adcb
sub
push
and
aas
ss
fwait
and
jg
dec
aas
push
dec
cmp
cmc
int
pop
dec
dec
std
enter
xor
push
dec
sub
jno
stc
data16
or
sbb
enter
jnp
je
adc
les
inc
aaa
mov
push
mov
add
sbb
aad
cmpsb
test
adc
xchg
mov
decb
mov
fdivr
movsb
jg
lea
arpl
iret
or
or
aaa
cmp
mov
jne
add
stos
fsts
mov
xor
pop
cmp
in
pop
dec
lret
jge
rclb
jg
into
lods
jmp
dec
push
stc
repnz
pop
fiaddl
jbe
jb
mov
ret
push
stos
xlat
add
sub
fmulp
inc
test
add
sbbl
fnstsw
xchg
cli
fsubl
cmpsl
test
pushf
ljmp
lret
in
mov
pop
xchg
xor
inc
sbb
mov
stc
dec
mov
or
insb
and
inc
pop
jp
lea
xchg
jmp
test
or
and
sbb
mov
cmc
mov
mov
mov
adc
and
lcall
lcall
lods
insb
pop
mov
pushf
jnp
in
adc
daa
ja
or
int3
xchg
data16
xor
shll
dec
adc
and
sub
xor
sub
push
rorl
cmpsb
or
hlt
pop
lods
sti
mov
sub
push
jmp
stos
mov
push
jle
mov
inc
imul
incl
gs
sub
cltd
mov
movsl
add
movsl
jae
inc
cmp
out
mov
neg
sub
pusha
cltd
cmp
adc
mov
imul
sub
and
xor
fildll
jg
xor
sti
dec
mov
cmpsb
cwtl
mov
add
cmp
mov
push
or
push
and
cmc
das
push
mov
subl
decb
inc
outsb
lahf
fs
sbb
sbb
jo
and
lock
dec
cmp
xchg
xor
mov
add
mov
nop
inc
jne
add
out
insb
sub
int3
adc
and
les
or
lcall
push
sub
adc
lcall
adc
fistps
xor
and
adc
sub
mov
mov
mov
push
jge
jecxz,pt
out
cmp
gs
sub
add
or
enter
out
dec
nop
pop
outsl
or
int3
movsl
sub
or
ja
outsb
add
and
sbb
scas
punpckhdq
jp
lea
push
xchg
mov
sub
adc
xchg
hlt
add
jb
jo
aam
lods
pop
xor
push
mov
xchg
pop
pop
jge
stc
cmpb
cmpsl
adc
mov
jp
inc
fstpt
loop
lods
cmp
push
inc
call
ret
xchg
cltd
scas
repnz
cmp
cmp
leave
loop
dec
pop
jbe
stos
movsl
mov
fimuls
xor
mov
xchg
in
stc
in
xchg
aaa
push
jg
and
xchg
xlat
jo
inc
scas
cld
out
jl
mov
inc
stos
adc
lret
push
jns
xchg
cmp
mov
push
jae
adc
jmp
arpl
stos
push
dec
lret
mov
jne
icebp
mov
ljmp
cmp
in
and
push
loopne
sub
cmpsb
or
out
dec
shld
dec
sbb
shll
sbb
fnstenv
insb
mov
and
and
cltd
arpl
cmp
orl
push
pop
iret
mov
pop
dec
or
cmp
fldcw
or
in
frstor
nop
dec
repnz
fcoml
imul
jge
sbb
lock
xchg
xchg
push
mov
adc
xlat
movsl
dec
jg
adc
andl
sub
lods
out
jb
mov
insb
xor
xor
push
xor
inc
aaa
add
mov
add
sub
adc
fisttpl
cmp
rcr
enter
fimuls
pop
adc
mov
pop
repnz
push
push
ja
pminub
rol
stc
sub
test
fldenv
mull
icebp
add
sub
push
int3
cwtl
sub
add
or
nop
iret
cld
xor
ss
imul
ljmp
jle
out
cmpsl
cmp
imul
lea
out
fmull
cmp
and
in
cmp
dec
sbb
dec
xor
das
loopne
adc
adc
cmpsb
pop
mov
lds
mov
loope
call
cltd
mov
dec
jmp
pop
in
or
repz
inc
xchg
inc
sub
popa
gs
pop
inc
ret
loopne
sub
fs
inc
pop
cmpsb
or
dec
enter
repnz
aad
adc
sbb
stos
mov
cmp
fcompl
popf
dec
insl
pop
xchg
out
daa
push
adc
mov
iret
mov
sbb
mov
stc
jns
add
loopne
push
sub
sbb
and
lds
rorl
arpl
cmp
add
movsl
sub
pop
xchg
rcrb
cmp
inc
hlt
push
inc
dec
xchg
pop
xchg
sbb
dec
popa
outsb
mov
in
idivl
sti
xor
lret
dec
sub
xchg
jg
pop
sub
mov
mov
popf
test
enter
lods
fimull
fbld
dec
push
jnp
or
mov
daa
addr16
mov
cmp
sub
int3
idivb
mov
int3
je
cltd
sbb
add
adc
push
ret
jbe
mov
push
daa
xor
das
mov
test
push
and
outsb
fistpll
es
daa
xchg
popa
outsb
inc
shll
ror
mov
into
hlt
daa
mov
push
pop
pop
sbb
div
lds
pop
jmp
outsl
imul
push
call
loop
mov
push
clc
push
in
xchg
jge
sub
jle
fnsetpm(287
lea
push
pusha
sub
xor
sahf
stos
dec
aas
ss
add
std
jl
repnz
push
sbb
mov
stc
jge
icebp
xchg
mov
cmpsb
scas
lcall
inc
sbb
out
gs
call
data16
out
pop
insl
bound
aaa
mov
xor
cmc
mov
pop
cmp
mov
cmpsb
and
lea
mov
mov
jmp
mov
jbe
je
pop
cmp
call
arpl
lahf
orb
cli
shrb
add
std
jecxz
xchg
int3
int
mov
repnz
xor
push
jne
std
jecxz
sarb
push
sbb
idiv
fwait
dec
mov
jb
out
mov
push
jnp
inc
cmp
mov
mov
add
push
push
test
inc
or
cmp
call
gs
xchg
packsswb
loopne
out
jle
mov
into
cmc
mov
into
das
leave
loope
sahf
jmp
add
out
ss
inc
cs
jnp
sarl
cld
or
mov
in
int3
test
dec
js
rclb
stos
mov
cwtl
sbb
push
cmp
pop
iret
pop
pop
jl
scas
pop
mov
mov
sub
test
push
icebp
jp
add
cmp
fstps
cmpsb
or
or
mov
jecxz
fnsave
pop
cmpsl
std
stc
iret
idivl
scas
mov
sbb
pop
loope
cltd
jno
adc
dec
mov
in
and
sub
sahf
xchg
movsb
dec
lahf
and
fcoms
out
je
imul
mov
adc
inc
rolb
daa
daa
mov
out
xor
xor
xorb
xchg
push
andb
mov
mov
cmp
cmp
outsb
jp
in
or
inc
jp,pt
rcrb
inc
fiaddl
popa
inc
pop
adc
jmp
sub
push
jnp
xor
cld
mov
scas
sbb
cmc
sub
ret
xor
and
ud0
dec
and
lcall
mov
push
mov
sbb
lods
shrb
je
sub
or
push
push
mov
cwtl
or
movsb
pop
stc
cmp
test
add
push
mov
lret
pop
in
lahf
xchg
arpl
xor
dec
sbb
int3
and
mov
xlat
mov
jmp
movsb
pop
int
arpl
jns
mov
sahf
sbb
mov
jmp
shrl
out
enter
lret
lret
mov
subl
pushf
cmp
sahf
daa
mov
popa
xor
jle
outsl
mov
jmp
loop
lds
rclb
outsb
in
jne
dec
jecxz
jecxz
mov
add
cli
test
sbb
pop
sarb
fcompl
mov
mov
les
push
outsl
and
das
dec
jbe
sti
sbb
clc
jle
push
jg
push
sub
adc
pushf
nop
insb
in
in
adc
jecxz
mov
xor
pop
sahf
imul
sbb
pop
xor
pop
icebp
movsb
fsubr
sahf
leave
mov
shrb
sbb
test
cli
inc
mov
add
jo
ljmp
outsl
dec
rorb
andl
test
sbb
ficomps
inc
xchg
and
add
pop
dec
rcrl
jnp
mov
sbb
aad
les
mov
push
das
sbb
fsubrl
insl
sub
cmp
mov
aam
lret
sbb
push
orb
sahf
cmp
xlat
mov
jae
out
pop
sahf
mov
loop
lds
test
jecxz
daa
out
sbb
mov
fstl
aam
nop
push
mov
in
xchg
daa
xchg
mov
imul
cmp
jle
out
jl
idivb
loopne
repz
aad
ffree
jge
in
addr16
int3
je
aad
dec
out
sbb
jmp
xor
push
cmp
mov
jmp
popf
imul
adcl
push
cmp
je
pop
xor
mov
mov
push
push
push
in
mov
xchg
lock
sbb
cmp
out
cmp
dec
pop
iret
fldcw
dec
lahf
push
imul
push
lcall
push
dec
mov
push
daa
icebp
daa
cmp
adcl
sbb
js
jae
sbb
orl
adc
mov
pop
add
leave
jbe
xchg
push
je
jp
int3
jle
pop
adc
clc
xchg
dec
pop
cltd
mov
and
pusha
ss
dec
sub
cwtl
push
out
sbb
bswap
test
mov
popa
sbb
jecxz
jbe
cmp
leave
mov
cld
mov
iret
jmp
cmp
pop
pop
cmp
push
mov
pushf
pop
sub
or
or
jne
mov
into
adc
sbb
gs
push
testl
sub
add
lret
pop
subl
cmc
dec
jmp
addr16
cmp
lret
cmp
xchg
pop
push
aam
std
adc
gs
cmp
xchg
add
dec
mov
jp
xor
push
sub
mov
hlt
push
nop
leave
mov
or
sbb
adc
or
scas
clc
je
flds
mov
shlb
fildl
mov
inc
xor
pop
and
inc
addr16
xchg
xchg
sahf
ret
test
dec
push
push
dec
frstor
mov
out
sbb
xchg
pop
pop
pop
stos
mov
adc
pushf
test
sbb
mov
das
cmp
cmp
pop
pop
cmp
inc
pop
push
jo
mov
cwtl
addr16
mov
sbb
adcl
insb
push
scas
loop
lea
std
imul
sarl
cmp
xor
lock
pop
xchg
sbb
adc
repnz
les
jmp
repz
xchg
test
push
cld
pop
and
inc
push
cmp
repz
xchg
mov
cwtl
dec
mov
pop
imul
rcl
shl
push
lret
inc
push
ljmp
or
push
in
adc
xor
lods
add
jbe
rcl
sbb
mov
insb
lods
lds
and
cmpsb
xchg
xchg
in
aad
cli
das
lahf
out
cmpsl
fwait
mov
mov
adc
push
mov
mov
inc
cmp
inc
mov
and
inc
inc
push
dec
push
pop
xor
sbb
cs
inc
ret
and
test
test
arpl
jmp
mov
jmp
xchg
jge,pt
in
shll
adc
sarb
imul
mov
adc
notb
repnz
dec
data16
mov
enter
dec
jno
rcrb
mov
rcl
xchg
cmp
pop
mov
pop
and
sub
add
inc
jl
and
mov
divl
cmp
mov
lret
scas
cwtl
out
pusha
push
jle
add
xor
sbb
daa
pop
inc
out
ret
and
dec
mov
mov
int3
in
out
or
lahf
les
and
in
sub
dec
stc
and
jmp
lock
push
jg
leave
jne
or
mov
pop
cmc
jns
cmp
or
adc
or
movsb
mov
inc
fwait
aam
lock
sub
aaa
stc
adc
in
aas
fcomip
popa
pop
sub
orb
daa
shrl
add
sbb
inc
inc
add
shll
push
movsb
call
mov
pop
jmp
in
nop
pop
cmp
jno
test
jmp
and
shl
mov
mov
pop
lret
jo
jge
jne
xchg
inc
xchg
out
pusha
fimuls
loop
dec
shll
cmp
mov
in
in
clc
lcall
adc
imul
and
adc
sbb
and
lcall
and
incl
pop
or
hlt
pop
cmpsb
lods
rolb
push
push
fcomi
jle
std
nop
mov
jo
test
mov
jns
sub
lcall
sbb
add
movsl
arpl
in
and
mov
mov
call
dec
fnstenv
lret
aaa
pusha
lret
ds
push
mov
mov
enter
and
out
push
jp
push
out
and
icebp
sti
les
or
addr16
inc
ja
xor
in
ljmp
mov
cmp
xchg
mov
pop
popa
push
sti
mov
jns
and
dec
fsubrs
scas
out
cmp
adcb
adc
insl
pop
stc
fwait
jecxz
xchg
push
dec
mov
pop
cmp
daa
or
push
mov
fldenv
fsubrs
push
rolb
aas
xlat
in
daa
pop
cmp
in
xchg
in
subb
mov
ror
mov
jge
ljmp
pop
inc
jle
push
pop
pop
lds
enter
lods
fists
popf
jbe
out
push
sbb
sub
lea
mov
jb
sbb
ficoms
movsl
ljmp
loop
negb
add
and
inc
dec
sahf
push
popf
leave
sub
and
stos
scas
popa
push
sbb
popa
or
outsl
fcmovb
stc
mov
inc
sbb
repz
mov
outsl
inc
mov
aaa
and
sub
jno
adc
pop
imul
and
jmp
in
push
in
inc
mov
add
dec
fbld
cli
sbb
test
orl
cmp
push
call
fadds
into
jbe
lods
or
mov
cmpsb
jb
lret
mov
data16
dec
pop
add
rolb
jmp
push
inc
int3
and
pop
shll
add
cmp
mov
std
push
bound
jl
ret
scas
out
imul
pop
cmpl
xchg
xlat
pop
mov
js
mov
dec
rclb
pop
test
cmp
mov
xorb
test
inc
and
xchg
xchg
fnstsw
jp
ja,pt
lahf
out
cmpsl
jbe
push
je
hlt
cmp
rcrl
pop
popa
addr16
xchg
fdiv
or
add
add
push
and
inc
scas
inc
leave
pop
inc
icebp
mov
popf
push
pop
or
insl
sbb
cmp
pop
adc
pop
stos
mov
fcoms
outsl
add
jns
ja
sahf
sbb
les
push
dec
mov
sbb
sbb
adc
sub
pop
stos
push
lahf
popa
jbe
mov
xchg
xchg
scas
or
and
push
inc
mov
in
lcall
loope
or
xchg
lahf
pop
lea
mov
push
pop
out
push
add
inc
fdiv
test
out
cmp
jne
mov
mov
out
js
out
sub
decb
ret
in
push
add
and
sub
decl
jmp
jp
lcall
adc
jbe
cmpsb
movsb
cs
cwtl
xor
xor
mov
xchg
pop
pop
and
or
sti
cmpsl
jp
jbe
test
xor
mov
xchg
push
jb
ret
aas
data16
out
lahf
loope
cmp
pop
jle
movsb
dec
ss
int
lret
jnp
stos
mov
das
pop
jg
out
icebp
ret
cmp
mov
dec
cmp
notl
aas
mov
mov
push
sbb
dec
push
in
pop
or
sbb
sbb
rorb
negl
std
out
in
dec
mov
ljmp
js
and
pop
lret
mov
jmp
jp
clc
adc
jns
push
or
add
jl
cs
or
repnz
mov
out
mov
fcmovnbe
and
outsl
xchg
pop
mov
scas
push
lahf
popa
jno
add
adc
and
xor
shrl
pop
loope
icebp
jg
outsl
xchg
pop
mov
scas
push
lahf
popa
jno
add
adc
and
xor
shrl
pop
cltd
psllw
outsb
cmp
dec
mov
cltd
scas
push
lahf
popa
mov
add
adc
add
xor
shrl
pop
loope
lock
outsl
xchg
fbld
iret
mov
mov
popl
mov
aaa
into
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
movsl
ficoml
jmp
mov
xor
sbb
jne
gs
push
jp
mov
mov
aad
or
cmp
push
jp
sub
pop
xchg
xor
xchg
aad
or
cmp
add
cmp
sbb
push
ljmp
fistpll
cmp
in
push
and
xchg
inc
xor
mov
pop
leave
fidivrs
or
in
sub
mov
push
pop
fs
in
lods
ret
xchg
repz
jle
nop
and
fwait
mov
adc
mov
inc
mov
ljmp
lock
mov
cmp
xchg
jo
dec
pop
inc
addr16
jp
lods
stc
in
push
sub
dec
nop
lret
and
testl
push
push
test
sub
pop
aad
ljmp
pop
adc
movsl
mov
cmc
lret
aad
lds
or
push
jne
gs
jb
dec
hlt
mov
cmc
cld
in
cmc
outsl
xchg
mov
lahf
mov
adc
or
add
ror
rcr
fldl2t
cmc
cwtl
mov
leave
push
imul
add
pop
cmp
xor
sar
movsl
jp
jmp
fcmovbe
ljmp
adc
dec
gs
push
push
jp
mov
mov
aad
or
cmp
gs
push
push
jp
mov
push
or
xor
inc
inc
adc
push
mov
adc
test
dec
and
push
in
enter
test
jmp
sub
scas
mov
add
push
pop
jl
les
dec
fnstsw
dec
xchg
aas
add
mov
add
add
dec
jl
xor
mov
lea
mov
ljmp
loope
xlat
jle
movsb
loope
mov
pop
stos
flds
lock
push
mov
mov
lea
dec
sbb
sbb
fsubrp
pop
xchg
dec
cmp
jp
mov
out
mov
pop
js
adc
int3
test
jae
pop
mov
xchg
xor
mov
xchg
stos
arpl
inc
dec
icebp
mov
insl
inc
in
add
xor
in
pop
pop
xlat
call
cmp
dec
lret
jno
ret
rcll
aam
pop
out
push
fcmovnu
sarb
jb
je
insl
jnp
out
sti
cmp
jbe
pop
cmp
sub
push
and
xchg
jb
sbb
and
pop
mov
cmp
aad
mov
test
xor
lahf
mov
sub
pop
xchg
jae
sub
divl
add
jno
movsl
adc
dec
sbb
out
push
lods
mov
cwtl
mov
and
es
lret
outsb
push
and
js
sbb
push
fs
das
lret
mov
imul
sub
mov
pop
mov
cmp
jmp
dec
pop
pop
arpl
push
cmp
sti
sbb
xchg
jne
pop
pop
repz
xor
aas
push
add
mov
ret
clc
cmpsb
leave
sub
push
pushf
in
xor
lret
repnz
lret
adcb
jecxz
sti
pop
mov
xchg
dec
aad
push
mov
add
mov
cli
mov
enter
adc
test
adc
js
test
and
and
test
mov
jbe
xchg
outsl
mov
xchg
dec
sahf
movsl
jne
cmp
iret
ret
dec
adc
mov
ja
inc
mov
and
rorl
stos
dec
cld
loope
dec
movsb
cmpsb
or
adc
jle
jl
push
xchg
xlat
mov
sti
subl
es
and
dec
jmp
stos
xor
ret
xor
xor
in
pop
enter
testb
dec
jmp
jecxz
int
aaa
lock
ret
jbe
and
jmp
pop
pop
sbb
je
divl
cmpsl
cwtl
mov
mov
push
aaa
push
imul
dec
loop
arpl
jae
ficomps
outsl
or
or
lods
repz
push
pop
insl
adc
or
push
adc
loope
stos
rcrb
xor
push
rclb
dec
jae
mov
sarl
scas
sbb
jns
or
mov
cltd
sbb
insb
jecxz
adc
movl
ljmp
aam
call
loopne
imul
call
insl
das
xchg
outsb
std
or
xchg
rorb
mov
cmp
bound
enter
inc
mov
cmc
insl
into
mov
cmp
stc
xor
mov
loop
fdivrl
test
fnstsw
loop
fmuls
xchg
mov
sub
aad
popa
pop
and
dec
push
lret
loope
aas
adc
movsl
rorb
iret
mov
mov
and
jne
gs
mov
xchg
cmp
lcall
jmp
push
les
add
das
push
fcmovbe
ds
fimull
imul
sbb
or
push
in
movsb
cmp
xchg
inc
cmc
pop
fwait
in
dec
inc
cmp
stos
test
add
pop
jl
jno
subb
stos
dec
sub
jle
int3
in
push
cs
sbb
fcoms
test
xlat
pop
xchg
cmp
mov
inc
sub
jb
gs
jle
cmpsl
sbb
icebp
scas
add
jp
push
repnz
pop
fsubr
cmp
sub
out
shr
sub
push
clc
mov
imul
ljmp
dec
lahf
adc
pop
mov
and
scas
adcl
xchg
call
subb
cmp
and
mov
addr16
dec
jnp
xorl
aam
fidivs
pop
fnstsw
pushl
mov
add
adc
adc
and
aad
pop
mov
stc
out
inc
pop
ror
push
arpl
jge
dec
fisubl
push
push
jl
popf
xor
mov
sar
or
aam
push
jl
jg
std
mov
and
jb
xorl
mov
adc
rcrl
or
mov
leave
mov
scas
cli
and
stc
ds
mov
daa
enter
and
mov
popa
xor
sbb
pop
xchg
setp
hlt
xor
testb
into
fldenv
xchg
jmp
jg
daa
jecxz
jecxz
add
push
shrl
and
lret
cmp
fistps
push
and
stos
cmp
addb
inc
cmp
movb
hlt
mov
sbb
outsl
punpcklwd
fistpll
decl
adc
pop
lcall
in
sbb
fsubl
rcrb
aam
jbe
sub
ror
pop
dec
test
push
and
push
or
gs
inc
mov
aaa
and
loopne
mov
iret
fsubs
cs
dec
lods
clc
or
ja
sbb
enter
ja
push
lds
ds
and
xor
filds
jl
mov
sbbb
pushf
xchg
xchg
lods
inc
xor
fcomp
jnp
repnz
sti
sarl
cwtl
xor
out
popa
jl
jno
pop
and
orps
call
fmull
mov
hlt
das
aaa
dec
dec
aad
pop
xchg
jle
push
xor
lahf
dec
test
dec
mov
cltd
fistps
aad
js
clc
push
sub
std
fwait
stos
pop
fsubl
jb
aam
sub
ljmp
push
jg
std
adc
cld
cltd
shrb
inc
dec
test
in
loope
add
inc
mov
clc
lcall
cmp
adc
jae
xor
xchg
mov
out
out
gs
rclb
xor
mov
pop
jo
inc
out
cmp
shll
adc
mov
iret
mov
ret
roll
and
sbb
push
xorb
or
or
add
push
dec
pop
jl
xchg
popf
data16
test
pop
lds
hlt
mov
shl
outsl
sbb
fidivs
add
in
jae
shl
fcoml
sub
cmp
icebp
mov
inc
out
adc
psubw
push
push
stos
repnz
cmp
xchg
sub
mov
aam
dec
adc
mov
adc
into
cwtl
out
sub
mov
jle
jbe
inc
push
inc
inc
rcrb
inc
jnp
adc
dec
or
pop
pop
into
fwait
cltd
lret
pusha
sub
sbb
push
cmpsl
inc
lret
mov
daa
test
lcall
cmp
mov
pop
sbb
push
adc
jno
outsb
adc
mov
lret
sub
mov
test
mov
lea
pop
or
pusha
ja
icebp
inc
dec
enter
lds
mov
push
adc
jle
in
cmp
sbbb
fistl
xor
pushf
aas
push
fists
adc
push
push
sub
ret
int3
test
into
mov
iret
fistpl
in
jmp
inc
or
sub
and
add
xchg
shlb
call
jmp
or
subl
push
pop
test
xor
cltd
stos
and
movsb
daa
xchg
adcl
into
sahf
sub
out
out
mov
ret
ljmp
cmp
mov
push
scas
fwait
cmp
out
fst
out
add
lcall
mov
data16
xchg
push
inc
fsin
xor
sbb
jmp
test
mov
cmp
hlt
jb
iret
pop
ds
dec
gs
lret
ss
mov
xor
out
test
pop
push
pop
stc
jne
and
mov
and
shr
push
ret
pushl
jae
dec
loope
jo
and
cmpsl
sub
mov
push
out
cwtl
call
jecxz
clc
enter
pop
push
add
sbb
std
sar
in
push
dec
push
loop
add
mov
push
daa
inc
addr16
push
pop
mov
push
sub
pop
or
lcall
xchg
ret
stc
add
push
test
je
add
xchg
sbb
lock
js
idivb
jmp
sbb
cmp
fs
stc
icebp
mov
mov
sahf
loopne
movsl
lahf
pop
iret
pop
push
mov
mov
jbe
int3
sahf
stos
fistl
scas
fisubrl
les
pop
dec
or
out
fwait
vcmpss
mov
pop
mul
xchg
imul
out
loopne
imul
adc
lret
sbb
push
push
pop
mov
subl
mov
cmp
sahf
xor
and
div
int3
jmp
mov
cmp
inc
inc
push
sbb
or
inc
movsl
fdivs
lcall
aaa
dec
sub
push
xor
sub
fldt
mull
rol
fistps
sub
lods
pop
cli
mov
cmp
push
xor
sub
add
xchg
shll
dec
das
push
sarb
dec
cmp
dec
mov
popa
dec
lock
cmc
clc
ss
cmp
and
xchg
cmpsl
push
loop
jecxz
jno
call
push
xchg
push
hlt
and
cwtl
push
xor
mov
mov
push
pop
aam
push
in
lds
mov
imul
sbb
mov
adc
dec
vpcmpeqd
sbb
sub
pop
xor
and
mov
cmp
inc
adc
jbe
cmp
pushf
xchg
mov
rcr
scas
cmp
sbb
daa
xchg
pop
call
lods
sub
std
dec
cltd
lods
xchg
loope
push
pop
xchg
dec
outsb
daa
sbb
xchg
rorl
pop
sbb
lret
mov
incb
inc
out
jmp
mov
sub
loopne
xlat
int
xchg
stos
in
adc
imul
fistpl
or
aam
lds
mov
cltd
in
mov
fisttps
arpl
call
addr16
loope
stos
jmp
clc
cmp
pop
pop
sub
jnp
push
out
sbb
pop
jmp
jb
mov
lahf
mov
in
sub
pop
mov
pop
and
dec
data16
test
cmp
and
clc
mov
cli
jb
hlt
adc
aaa
mov
or
cmovbe
dec
adc
imul
and
into
dec
mov
leave
or
xchg
jge
fimull
fsub
imul
les
and
push
gs
out
and
mov
stos
push
jns
inc
sbb
mov
xor
inc
xchg
std
popf
test
add
sbb
imul
push
pop
mov
ds
pop
adc
aas
fcomps
xchg
in
loope
aam
gs
pop
cmp
push
out
jmp
lea
lcall
sbb
sahf
in
mov
pop
sahf
jmp
cltd
in
pop
jbe
jne
inc
mov
jle
fiaddl
mov
mov
adc
daa
xor
negl
daa
mov
dec
mov
iret
adc
stos
xchg
insb
pop
out
cmp
dec
enter
sti
test
movsb
dec
push
cmpsb
mov
jns
push
xchg
in
out
imul
xchg
enter
lods
or
test
add
inc
or
popf
adc
leave
int
pop
in
push
mov
rorl
inc
adc
fldl
nop
jge
lcall
sbb
dec
push
insb
dec
push
cmp
cmp
and
add
add
lods
cmp
jle
mov
aam
pusha
inc
lahf
xor
xchg
add
imul
push
sub
adc
xor
loopne
mov
inc
mov
subb
mov
mov
pop
stos
sub
and
inc
mov
sub
loope
rcll
fldt
adc
xchg
jp
xchg
in
pop
rorl
scas
clc
lods
enter
aad
hlt
xchg
xor
pop
push
inc
xchg
xchg
imul
mov
and
and
jecxz
xchg
sbb
xor
pop
fucomi
fsubrl
fisubl
pop
inc
and
mov
sbb
stos
xor
adc
fsts
jns
push
or
mov
sbb
mov
inc
adcb
pop
movsb
movsb
xchg
adc
xlat
dec
sbbl
inc
shlb
cmp
mov
adc
aam
xchg
adc
or
dec
xor
sahf
push
inc
pusha
push
or
mov
aaa
daa
jbe
call
jns
dec
leave
scas
xor
xor
icebp
ret
or
mov
in
mov
adc
pop
dec
xor
repz
jnp
add
pop
hlt
pop
stos
out
enter
sub
push
xchg
lahf
xor
and
mov
out
ret
negl
mov
leave
pop
fcompl
xor
stos
mov
xchg
or
mov
fiadds
int3
rcrb
adc
pop
or
dec
lds
mov
push
scas
mov
pop
mov
fcoms
ret
addb
shl
mov
pop
fs
flds
xchg
fdivs
in
into
mov
push
mov
add
incb
bound
mov
mov
in
or
pop
ftst
cwtl
test
add
push
cld
adc
enter
repz
mov
mov
pop
or
mov
iret
movsl
push
ret
in
lret
out
out
and
sbb
sbb
mov
mov
jns
pop
into
dec
in
iret
ja
in
mov
imul
jns
cmpsb
imul
ljmp
nop
sbb
cli
push
rorb
clc
add
movsl
dec
std
mov
push
leave
pop
or
mov
xlat
adc
in
idivl
jp
divb
out
inc
mov
jg
repnz
and
and
das
cld
fldl2t
xor
inc
rcrl
mov
in
lock
out
mov
jnp
ret
pushw
dec
mov
testl
push
sbb
popf
clc
fdiv
mov
jecxz
jl
lret
idivl
sub
cltd
stos
call
jl
push
dec
pop
mov
ja
in
or
lods
fcmove
inc
mov
push
adc
mov
xor
clc
jbe
addl
clc
cmp
stc
xchg
lahf
shrb
jl
push
pop
mov
ficoms
push
adc
xor
repnz
jb
jp
jb
lcall
jo
jecxz
arpl
fwait
scas
test
subb
pop
mov
sar
and
pop
rclb
add
xchg
ficomps
vaddsubpd
push
or
mov
lcall
mov
jp
jb
jg
pop
jl
xchg
jne
sub
adc
shl
outsl
pop
lret
inc
and
jbe
mov
lret
mov
xor
hlt
out
lahf
repz
mov
mov
andl
cmpsl
mov
clc
jne
pushf
fiaddl
jmp
pop
into
jp
push
sub
jbe
lret
add
push
ds
insb
mov
add
pop
fstp
push
iret
xchg
outsl
xor
sbb
sbb
inc
adc
ret
dec
jne
hlt
inc
fwait
mov
sahf
mov
xchg
jl
cmp
test
push
aaa
test
int
inc
sti
test
adc
movsb
mov
fiadds
jle
pop
cmp
xor
addr16
mov
lea
xchg
nop
lret
rcll
int3
mov
add
fisubs
icebp
mov
sbb
test
stos
dec
mov
push
add
push
gs
popf
add
repnz
test
cmpl
out
mov
popf
push
dec
cltd
es
add
test
mov
in
inc
or
jl
flds
leave
iret
push
icebp
jnp
stos
int
dec
shlb
pop
lock
or
sbb
rep
outsl
iret
shlb
cmpsl
iret
aad
and
loop
mov
cs
jns
outsb
or
int3
daa
jo
pop
call
pop
add
lahf
sub
push
mov
sahf
fwait
sub
inc
push
test
stos
pop
mov
sbb
jge
push
pop
clc
subl
movsb
mov
test
callw
loope
mov
js
rcll
xchg
mov
pavgb
ds
and
mov
out
push
lret
cld
and
ret
mov
in
in
ror
stc
lea
jbe
xchg
dec
mov
in
subl
xor
inc
mov
in
mov
mov
je
xchg
repz
jae
test
cld
insl
aad
jl
push
mov
ret
mov
or
inc
mov
sub
mov
and
pop
hlt
ret
xchg
xchg
cltd
adc
cmc
add
xor
adc
jbe
pusha
movl
stos
mov
xor
inc
inc
inc
mov
sbb
add
jo
lds
decb
or
loop
lock
adc
sbb
stos
xchg
popf
enter
adc
mov
xchg
xchg
pushf
sub
fwait
sbb
push
lock
and
insb
jne
jnp
repnz
xchg
in
or
jnp
or
in
xchg
jo
or
mov
push
push
cmp
adc
pop
pop
add
mov
mov
loope
mov
dec
mov
push
xor
mov
repnz
sub
mov
orl
stos
add
mov
dec
lds
iret
stos
clc
lods
mov
mov
jb
inc
stos
repnz
out
pop
push
div
daa
mov
pop
jmp
xor
mov
xchg
xor
add
test
push
xchg
cmp
addb
scas
aam
inc
push
adc
andb
outsb
cmc
leave
lods
xor
sbb
out
mov
insb
push
xor
mov
stos
inc
subl
test
fimull
lret
xchg
pop
cwtl
icebp
mov
adc
sti
out
add
fincstp
xlat
ret
sub
push
repnz
insl
pop
mov
je
pop
push
js
dec
mov
xor
outsl
das
push
fsubr
leave
scas
sbb
imul
mov
vcmppd
xchg
loopne
and
popa
nop
aad
je
and
loopne
xlat
repnz
mov
insl
adc
js
js
imul
rcrl
mov
pusha
mov
popf
adc
popa
mov
imul
mov
pop
jno
push
cltd
dec
sbb
stos
jae
inc
cmc
arpl
scas
mov
std
loop
sbb
dec
insl
call
icebp
icebp
lods
bound
dec
xor
testb
inc
nop
out
pop
pushf
fisubl
inc
test
lods
pop
scas
pop
jmp
pushf
sbb
or
sbb
aas
push
jge
pop
mov
shl
push
and
std
lahf
jmp
push
cmpsl
adc
jmp
fmull
xor
mov
dec
or
jns
rcll
mov
adc
xor
stos
add
pop
cmp
adc
ret
cli
lahf
jne
out
aas
call
and
aaa
out
dec
sbb
sbbl
fimuls
in
jmp
ret
js
xchg
dec
mov
jne
inc
imul
push
pop
adc
aam
xchg
orb
mull
sbb
cmp
adc
aas
dec
nop
daa
les
scas
cltd
test
push
sub
mov
hlt
jp
mov
test
arpl
frstor
jne
or
lret
mov
cmpsl
pusha
pushf
imul
inc
shl
adc
sub
mov
int3
movzwl
out
sahf
add
xchg
popa
test
xchg
out
and
outsb
xor
cs
xor
cmpsb
scas
pop
in
mov
mov
push
mov
mov
or
mov
xchg
xchg
mov
in
pop
add
cli
rol
les
sbb
test
mov
mov
mov
lods
call
movsb
inc
or
xlat
add
ljmp
mov
aad
mov
sahf
ss
mov
inc
mov
adc
cld
movsl
stos
in
mov
jns
lock
scas
mov
sub
or
int
mov
out
jmp
out
adc
jb
or
push
adc
pop
jbe
or
add
pop
and
xor
adc
cld
jnp
inc
je
je
in
rcrl
pop
gs
lahf
adc
push
frstor
mov
push
enter
mov
push
cmp
icebp
mov
fsubrl
xchg
lds
repnz
mov
push
cmp
and
lcall
in
aad
or
cmp
gs
push
push
jp
mov
mov
aad
or
cmp
gs
push
push
jp
mov
mov
aad
inc
cli
xor
sub
pop
push
arpl
mov
movsl
jle
dec
test
cmc
lret
aad
lds
xor
sub
and
pop
sbb
jp
push
jb
gs
sbb
lret
lcall
mov
sbb
jp
push
sbb
push
jp
sbb
stos
into
cli
js
lret
mov
clc
cli
stos
adc
dec
xor
push
sbb
jb
insl
sub
sahf
into
ljmp
xchg
stos
jp
sbb
inc
frstor
jno,pn
arpl
es
mov
push
sub
xchg
lea
mov
inc
xor
push
sti
mov
jbe
lea
ljmp
arpl
pop
fstpt
mov
gs
xor
inc
cmp
leave
lret
push
sbb
xorb
cmpsb
stos
add
mov
inc
adc
ljmp
xchg
sbb
lcall
es
mov
mov
jbe
inc
add
ljmp
xchg
imull
xchg
scas
gs
mov
dec
or
sbb
jp
push
sbb
push
arpl
xchg
fiaddl
ljmp
jecxz
jns
jg
dec
adc
jbe,pn
or
pop
jp
mov
aam
cmpsb
sti
mov
jmp
pop
sbb
jp
sbb
push
xor
push
dec
aas
sub
fwait
iret
test
cli
arpl
sub
dec
adc
rdmsr
sbb
push
jp
mov
lcall
lcall
or
dec
sub
push
sbb
push
jp
mov
lcall
lcall
or
add
push
sub
aad
and
movsb
cmp
xchg
push
arpl
out
push
or
sbb
mov
adc
inc
dec
and
in
sub
mov
mov
lock
in
mov
or
sahf
mov
lret
xor
xlat
inc
inc
and
push
mov
popf
adc
cs
xchg
jecxz
je
iret
loop
jmp
xchg
loop
dec
mov
adc
in
fisubl
jbe
stos
xchg
sbb
mov
sbbl
data16
add
pop
mov
push
mov
lcall
jne
or
xor
mov
addr16
out
jle
ja
jge
pop
pop
aam
sub
jge
sub
rcrl
outsb
and
lea
stos
repnz
xor
dec
mov
andb
loope
jmp
or
xor
xchg
dec
push
lret
inc
das
push
mov
ds
dec
pop
or
xchg
rcll
data16
mov
dec
sbbl
fildl
nop
inc
arpl
hlt
push
inc
iret
call
fnstenv
sub
aaa
sbb
adc
push
shlb
push
cwtl
cltd
mov
arpl
add
dec
cs
imul
loopne
popa
scas
lods
jmp
push
adc
addr16
ror
mul
lahf
and
test
mov
jno
mov
xor
loopw
xchg
aas
testl
jae
fcompl
cmp
cmp
clc
xor
pop
fbld
lahf
pusha
shlb
inc
dec
lods
inc
xor
inc
outsb
imul
mov
hlt
jmp
enter
in
jmp
adc
mov
iret
push
mov
mov
lods
pop
cmp
pop
cmpsl
mov
arpl
mov
lcall
lds
neg
out
fstl
js
decb
push
out
cli
fs
add
mov
pop
cmp
stos
mov
mov
movsl
in
js
clc
add
mov
jb
sub
inc
cmpsb
jg
outsl
adc
adcl
repz
push
test
sti
jns
insl
inc
scas
sub
and
das
jns
cwtl
outsl
push
and
cs
sub
or
sbb
adc
sbb
lock
imul
inc
int
or
push
push
aam
imul
jbe
jecxz
push
pop
mov
das
add
dec
arpl
xchg
xchg
mov
fdivrp
mov
cmp
pop
in
daa
cli
mov
dec
ja
pop
sbb
fs
outsl
in
insl
push
in
out
push
outsb
je
sarl
stos
scas
sub
mov
leave
push
sub
scas
fildl
or
test
stos
stc
xchg
cltd
lret
and
cmc
cmp
xlat
mov
in
pop
test
cmpb
dec
lods
orb
dec
sbbl
jo
pop
subb
xor
or
add
rolb
push
test
sub
cmpsb
mov
xchg
pop
dec
jl
data16
pop
out
dec
pushf
test
xchg
pop
jge
aam
mov
push
fsubr
outsl
adc
mov
or
mov
pop
ret
inc
loopne
add
dec
test
adc
lcall
jbe
cs
sub
jb
mov
cmp
cs
jg
sbb
sbb
into
call
or
jae
rcll
sbb
adc
xchg
fidivrl
mov
gs
pop
pop
test
movsl
adc
hlt
ljmp
pop
into
adcl
pop
lcall
scas
or
adc
dec
cmp
sbb
mov
push
stos
push
std
jae
addl
ja
xchg
sub
xchg
xchg
std
enter
and
pop
out
lds
cmp
cwtl
outsb
add
pop
fwait
notb
repnz
add
sti
and
sbb
fsubr
arpl
cwtl
cwtl
push
iret
and
pop
jecxz
pop
stos
xor
sbb
gs
inc
ret
stc
xor
test
pop
push
jnp
rcl
mov
stos
adcl
mov
je
sbb
mov
pop
loopne
mov
cltd
or
dec
fbstp
mov
sub
or
xor
mov
addr16
adc
inc
lods
lea
bound
ja
rorl
shrb
inc
aas
stos
bound
cmpsl
mov
cmp
sbb
data16
repnz
mov
mov
rcr
xchg
mov
ss
scas
cmc
js
idivb
cmpb
xor
add
mov
jnp
push
push
push
push
adc
adc
pop
push
aam
sub
insl
push
sub
repz
mov
aam
fdiv
dec
bound
and
lods
lahf
sbb
pop
jle
orl
sub
cs
or
sub
aas
imul
cltd
dec
shl
test
cmp
call
int3
aas
cmp
imul
jbe
push
in
push
mov
xchg
fs
rorl
fcoml
mov
loop
cmp
inc
cmp
fisttpl
sarl
mov
pop
lea
ret
or
adc
xchg
pusha
leave
lds
add
jnp
in
mov
inc
mov
add
pop
ss
test
repnz
orl
xor
sahf
and
lret
jns
mov
out
imul
and
mov
mov
ficompl
xlat
ret
int
mov
mov
jp
jmp
lds
xchg
not
in
push
insb
mov
mov
xor
mov
xlat
nop
xor
dec
call
sarl
push
push
push
ret
pop
jno
jno
scas
push
pop
call
and
cs
sub
cmp
sbb
test
cmp
jecxz
pop
sti
mov
std
add
jno
ror
in
out
and
jp
xchg
rcrb
xchg
pushf
ficoms
and
loop
cmp
jnp
push
or
add
sahf
lahf
clc
mov
je
rcll
dec
xor
fildl
dec
add
pop
or
test
mov
cmpb
mov
mov
cs
in
rcpps
filds
sbb
cmpb
jl
jnp
data16
or
xor
inc
and
sbb
push
shlb
loope
or
out
mov
jbe
in
push
cmp
lahf
cli
sbb
outsb
and
popa
xor
sti
rcll
cmp
cmp
mov
es
imul
jle
iret
xchg
pop
cltd
dec
inc
inc
in
dec
push
ror
xor
outsl
incl
stos
pop
insl
ficompl
fs
test
push
leave
jmp
jne
fcmovnu
sarl
imul
sbb
xchg
mov
ret
loope
push
xchg
out
and
cmc
mov
dec
xor
adcl
movsb
xchg
mov
xlat
xor
nop
inc
mov
cmp
das
aaa
xchg
cmp
xchg
inc
jo
test
mov
fisubs
pop
clc
mov
sarl
ret
pop
aas
pop
frstor
sbb
popa
mov
inc
push
mov
pop
mov
cmp
js
sub
ret
xchg
iret
xor
loopne
in
jb
test
insl
icebp
pop
call
pop
mov
idivb
inc
fadd
jle
dec
f2xm1
test
outsl
cli
mul
sub
sub
int3
inc
or
mov
imul
sbb
movl
pop
testb
hlt
inc
adc
inc
inc
mov
popa
pop
xor
mov
ret
sbb
idivb
inc
push
push
jno
cmp
out
mov
arpl
sbb
mov
inc
push
mov
leave
outsl
hlt
pop
mov
or
mov
data16
loop
fidivrs
dec
sub
mov
mov
flds
repnz
cmpsl
pop
sub
jge
pushf
and
sbb
shll
inc
sbb
adc
enter
lret
jmp
out
lahf
mov
inc
pop
cld
mov
sbb
and
aad
jns
xor
lock
or
pop
or
xchg
mov
cld
or
and
xchg
add
sbb
outsl
addr16
jecxz
mov
push
add
mov
outsb
inc
xrelease
xchg
sarl
popa
rclb
test
pop
fildll
ds
dec
sbb
inc
lock
xchg
xchg
pop
pop
add
test
insb
jb
jns
stos
leave
pop
arpl
call
mov
icebp
scas
adc
movb
sbb
movsb
push
xchg
jnp
daa
popf
or
mov
ljmp
dec
into
push
or
fcom
pop
push
push
es
es
mov
mov
jle
addr16
pop
mov
les
popf
jmp
fldl
inc
enter
inc
dec
in
jb
xor
shrl
cmp
cli
add
jb
inc
cwtl
cmpsl
pop
outsb
repz
daa
jno
pop
lret
fidivs
xor
inc
pop
xor
inc
jecxz
xchg
inc
test
inc
jne
sub
decb
mov
xor
xor
cmp
aas
sub
or
xorl
mov
jecxz
jl
call
push
test
repnz
xor
inc
arpl
rcll
and
xor
sahf
shl
addr16
lcall
push
mov
sub
xor
pop
sub
inc
jle
scas
lock
insl
test
orb
movsl
std
loope
shrb
cmpsb
xorb
xchg
js
push
xchg
movsl
or
clc
pop
icebp
push
and
add
aad
ds
adc
inc
pushf
cltd
ljmp
xor
ds
lret
xchg
jb
ret
call
mov
push
mov
jecxz
adc
shll
cwtl
mov
mov
call
lods
shrl
adc
lahf
pop
in
inc
lods
clc
in
mov
dec
test
mov
lret
cmp
imul
fucomip
idivl
dec
mov
sbb
lock
fisttpll
push
lock
stos
xlat
add
scas
jns
lea
fnstsw
arpl
mov
cmp
icebp
jne
int3
jmp
jle
sub
cld
lock
xor
fwait
orl
pop
mov
adc
mov
jne
ret
in
pop
add
xchg
push
dec
mov
mov
mov
lret
ret
pop
cltd
daa
push
push
stos
jbe
xchg
or
stos
sbb
cmc
xor
pop
fmuls
mov
add
enter
or
or
pop
daa
rcrb
je
mov
inc
add
jecxz
sti
stos
jae
jb
ja
jbe
aaa
sahf
mov
mov
jae
out
cmp
dec
cmovl
dec
subb
lret
mov
add
jns
jae
dec
add
movsl
lea
scas
mov
cmp
sub
xor
or
add
mov
mov
sub
in
mov
pop
cmp
in
xor
or
fisttps
dec
mov
push
pop
sub
or
jne
ret
cmp
popf
jle
pop
xchg
or
lret
inc
ficomps
inc
xchg
jmp
fdivrl
push
xchg
add
sbb
fldenv
jle
cwtl
mov
mov
clc
cmp
xchg
movsl
jg
addr16
bnd
jb
icebp
mov
mov
in
cmp
mov
rorl
je
lcall
sub
scas
push
push
imul
sahf
mov
push
jb
or
shll
pop
mov
insl
fsts
push
adc
mov
jno
rcr
adc
pop
les
dec
xor
aam
inc
enter
mull
add
lea
pop
in
mov
adc
jne
sub
add
and
cmp
enter
adc
int3
pop
testb
xchg
push
jg
push
xor
xchg
movsl
scas
xchg
fcomps
jb
cmp
mov
or
dec
movsl
or
inc
sub
push
loop
cltd
cmp
sub
push
push
pop
lock
fsts
cmpsb
out
dec
ljmp
imul
or
cmp
xlat
outsb
in
insl
ss
cmp
mov
aam
arpl
orl
outsl
xchg
mov
cmp
jne
cmp
addb
dec
les
jge
loopne
sbb
xchg
ret
jae
data16
scas
and
pushf
rorb
ss
jb
inc
xchg
aas
push
xorb
shl
out
pop
push
pcmpeqd
xor
out
inc
ss
mov
mov
sbb
dec
sbb
cmc
mov
adcb
movsl
call
inc
xchg
mov
xchg
xchg
push
leave
movsb
sub
adc
add
sub
jle
or
cmpsl
aaa
mov
icebp
outsb
push
ja
or
popa
or
addb
scas
xor
rclb
dec
movsb
pop
lret
pop
pop
adc
dec
push
daa
stos
ss
fadds
inc
fs
add
dec
fcmovbe
xor
test
jae
jae
addr16
int3
xor
add
push
mov
fdiv
xor
xchg
sarl
mov
add
outsl
outsl
inc
repnz
shll
gs
repz
jo
pop
xchg
sbb
sbb
pop
jle
mov
pusha
insb
and
dec
mov
jle
xor
lods
inc
mov
mov
xchg
xor
cmpsb
cmp
push
ret
cmp
add
xchg
jno
pop
enter
mov
cmp
outsb
mov
pop
inc
jp
int3
lods
xchg
fbstp
adc
inc
stc
int
mov
ja
cmpsb
adc
jmp
das
test
mov
lds
sahf
cli
mov
iret
jb
add
in
pop
repnz
sbb
dec
jnp
enter
xlat
pop
cli
push
dec
cs
fsubrs
sbb
sub
divb
pop
push
sub
adc
xchg
inc
xchg
pop
movsbl
or
lahf
fdivrs
dec
clc
stos
cmpsb
jo
adc
mov
out
sbb
icebp
sar
in
jp
cmp
aad
add
mov
xchg
jmp
jmp
dec
jae
and
xlat
leave
hlt
cmpsb
bnd
loop
inc
push
pusha
push
sbb
cmpsb
jg
leave
rol
out
in
push
sbb
xchg
xor
mov
pusha
inc
push
addb
arpl
xor
pop
shl
add
adc
fbstp
cmpsb
sbb
add
mov
xor
pop
ljmp
dec
fs
adc
sar
lods
dec
mov
jl
cmp
iret
addr16
lahf
inc
insb
popa
dec
adc
mov
std
orb
jae
xchg
push
jbe
fcmove
lods
wrmsr
dec
mov
lock
jne
dec
rcll
lds
ror
jne
mov
fnstsw
push
fwait
dec
adc
aas
push
cld
cwtl
mov
lret
add
lret
adc
and
xchg
sarl
pop
pushf
xor
add
into
aad
xchg
pop
into
sbb
dec
xor
cwtl
mov
aas
jge
cld
cmp
leave
xchg
std
leave
cmpsb
inc
mov
cld
or
cmp
or
xchg
push
adcb
mov
jmp
jnp
adc
jp
fs
movsb
fistpl
jg
pop
cld
xor
pop
imul
dec
xchg
jns
out
dec
sbb
fdivl
je
sbb
xlat
jl
dec
xchg
xchg
xchg
mov
repz
jnp
xchg
push
cmp
pop
xor
mov
xchg
xor
sbb
pop
sub
inc
add
js
pop
mov
inc
fs
xor
cmp
mov
mov
scas
sbb
mov
lahf
adc
imul
xor
scas
daa
data16
repz
dec
test
and
add
fadds
lea
cmp
add
pop
xchg
lret
stos
shrl
inc
test
dec
fimuls
xlat
ficoml
adc
lcall
pop
push
fadd
and
mov
pop
mov
jge
or
iret
mov
xchg
dec
xor
sbbl
inc
in
sub
pop
cwtl
adc
push
nop
loope
mov
iret
push
and
lock
fldcw
and
rcr
mov
mov
lea
inc
and
jecxz
jb
and
js
je
movsb
js
out
dec
test
mov
faddp
mov
js
mov
mov
pop
pop
in
push
xchg
mov
je
inc
lret
pop
cwtl
gs
divb
lea
repnz
jg
adc
stos
pop
call
xchg
mov
and
hlt
je
pushf
xor
call
loope
shrb
fnstsw
int3
stos
push
cmc
push
fcmovnbe
push
jnp
js
jne
aaa
repz
test
pop
xor
or
adc
xchg
hlt
fs
lea
mov
fimull
mov
xor
mov
adc
pop
mov
repnz
mov
cmp
ss
jl
cmp
les
insl
sbb
pop
ret
scas
push
and
xor
shll
xchg
popf
jae
roll
mov
push
test
fwait
rolb
xchg
insb
rcll
inc
das
stc
xor
insl
in
mov
xchg
bound
push
jp
dec
fsub
mov
insb
xchg
jecxz
mov
xor
jl
push
mov
xor
frstor
std
fiadds
lods
inc
and
and
mov
push
jmp
inc
cmp
in
and
mov
sbb
jecxz
add
sub
rclb
rol
cmpsl
sbb
inc
in
xlat
loopne
mov
xor
sti
shlb
mov
mov
pop
mov
sahf
aas
pop
push
nop
mov
int
rol
je
xchg
mov
or
sbb
add
xor
loopne
dec
adc
push
mov
iret
mov
ds
xchg
inc
inc
bound
xchg
mov
out
aam
pop
xchg
xchg
ss
cmp
fildl
pcmpgtb
jmp
or
jmp
sbb
pop
das
mov
sbb
push
loopne
dec
dec
xchg
push
or
xor
cmp
pop
clc
out
std
aad
dec
nop
add
sbb
ret
cmpxchg
in
scas
negb
sbb
mov
aas
loopne
jecxz
int
xchg
push
push
pop
popa
loopne
mov
rclb
inc
sbb
mov
mov
sti
aas
cmp
inc
inc
cmp
add
lods
fsts
jmp
xchg
jle
jne
inc
sbb
and
cli
je
mov
pushf
andnps
notb
sbb
leave
call
pop
inc
fs
dec
mov
mov
pop
sbbl
jl
and
cmp
xor
test
popa
inc
call
movzwl
in
loopne
test
cmc
daa
fsubrp
hlt
daa
mov
dec
dec
int3
inc
and
add
jno
sbbl
in
cmp
push
lock
lock
insb
mov
xor
fs
pusha
jb
lods
mul
add
rcl
dec
mov
jne
pop
js
mov
mov
jae
or
xchg
ret
push
sub
divb
sub
fwait
sbb
in
and
push
dec
repz
push
jbe
xor
cmpsl
repnz
push
pop
adc
sbb
adcb
push
mov
movsl
scas
hlt
mov
leave
sbbl
mov
xor
xor
mov
test
sub
loope
or
icebp
clc
clc
fs
aas
jl
sub
xchg
out
adc
movsb
pop
push
fiadds
das
mov
jl
jp
in
dec
mov
add
cmp
pop
daa
iret
dec
test
xchg
jmp
mov
das
cmc
inc
fnsave
inc
mov
dec
jecxz
sbb
inc
dec
add
sbb
push
les
pop
loope
mov
insb
out
or
pusha
dec
mov
insl
in
mov
call
adc
sub
lea
xor
mov
push
add
cmp
xchg
mov
sahf
fidivrs
xchg
mov
lods
mov
lds
pushf
push
insl
out
mov
cmp
test
cmp
xchg
cmp
push
sbb
or
add
adc
or
in
pop
stos
adc
mov
sub
fmul
mov
xlat
mov
mov
in
push
pusha
addr16
loop
js
and
lea
test
popf
adc
decb
test
cld
push
push
cwtl
xchg
mov
xchg
in
push
fsubrl
es
dec
lahf
cmp
sbb
out
or
cs
and
inc
push
mov
sub
testb
adc
repnz
push
sbb
xchg
popa
mov
cli
leave
mov
cmp
pushf
adc
fildl
xor
movsl
into
hlt
push
scas
movsl
aad
dec
pop
inc
bound
inc
popa
dec
mov
icebp
mov
cltd
cmp
cli
adcb
ror
clc
push
lahf
mov
push
scas
jl
loopne
in
cwtl
mov
aam
mov
fcompl
sbbl
daa
xor
sub
push
pop
cmp
push
sbb
push
jp
mov
lcall
lcall
or
dec
sub
push
sbb
push
jp
mov
lcall
lcall
or
lret
cmp
sbb
push
jp
mov
lret
mov
mov
mov
cs
sbb
cmp
sbb
ljmp
pusha
add
mov
jne
inc
add
jl
ret
cmp
int
dec
push
add
add
add
add
push
add
stos
add
addl
add
add
sbb
adc
cmp
push
add
add
add
add
add
bound
pop
add
add
inc
add
add
enter
mov
add
pop
add
mov
add
add
add
add
scas
add
push
add
add
add
add
add
add
push
add
add
add
add
add
add
pop
add
add
jb
jb
jno
call
add
add
add
add
add
add
add
dec
add
add
add
add
addl
add
add
add
mov
add
add
add
add
add
add
jp
fadds
mov
add
add
cwtl
add
add
add
add
add
add
add
add
lahf
add
int3
add
mov
add
call
add
add
add
add
add
add
add
add
add
add
faddl
add
push
add
add
add
lods
add
or
add
add
add
add
add
add
add
and
jb
jb
inc
add
add
xor
push
add
add
mov
add
or
add
add
add
jb
xor
cmp
add
add
cmp
stos
add
add
add
add
add
cmp
cmp
inc
add
add
pop
add
add
add
add
add
xor
or
push
add
add
add
add
ja
and
add
add
aam
inc
add
pop
add
add
add
cmp
fldl
add
add
add
add
add
pop
add
add
and
add
push
add
add
add
add
add
add
mov
add
pop
add
add
adc
push
add
adc
add
jl
out
add
add
add
mov
add
add
jb
jb
xor
add
jbe
sbb
add
add
add
add
add
add
add
add
insl
add
add
add
add
xor
sub
dec
add
add
add
add
add
add
add
add
add
mov
add
add
sbb
add
add
add
add
add
inc
add
add
or
add
dec
add
add
add
test
add
add
add
add
add
add
xchg
add
cmp
stos
add
and
mov
test
add
in
insb
add
cmc
add
add
add
add
add
add
add
add
add
add
add
jb
or
faddl
pop
add
add
add
inc
add
add
or
jb
jb
jp
addl
jo
xchg
add
add
add
add
add
add
add
add
cmp
lock
sahf
hlt
jmp
mov
int
das
in
xchg
pop
cld
pop
lahf
jmp
dec
cmp
aaa
mov
jb
scas
push
lock
rol
xlat
and
cs
push
jge
jg
popf
in
mov
jg
out
les
js
rorl
mov
imul
dec
call
sbb
jo
pushf
jle
setnp
jp
inc
adc
insb
or
es
dec
nop
cmp
shlb
repz
push
xor
lods
jns
xchg
and
and
pop
arpl
and
ffree
test
mov
bound
sub
bound
cwtl
xchg
stc
pop
mov
cmp
inc
loope
fs
aad
les
aas
push
imul
push
jbe
loope
mov
shlb
xor
aas
data16
add
jo
in
dec
test
or
cld
mov
aad
fldl
adc
or
add
adc
sar
xchg
cmc
fstpl
cmp
shlb
or
imul
lock
nop
mov
dec
fdivl
or
cmpl
pop
adc
mov
adc
nop
mov
xor
gs
mov
mov
mov
pusha
in
sbb
mov
cmpsb
cmp
int
mov
xchg
jl
dec
mov
rorb
mov
fs
out
lret
push
scas
dec
sbb
lcall
shl
or
popa
fdivp
xor
jae
pop
pop
gs
mov
pop
mov
xchg
lret
cmp
push
flds
dec
push
in
fidivl
call
adc
jo
dec
or
xchg
out
add
loopne
inc
lods
xor
push
out
mov
popf
jmp
insl
adcl
mov
ljmp
inc
imul
int
xchg
cmc
insb
rsm
pop
mov
inc
popw
xchg
stos
push
cs
leave
adc
xor
ret
add
cmp
pop
mov
fimuls
rclb
adc
aas
mov
xchg
insb
lahf
jno
add
push
pop
mov
cmpsb
pop
push
sahf
inc
mov
pop
mov
sti
inc
mov
cmp
fnstsw
mull
mov
ret
fdivrp
push
push
mov
aad
xor
sub
ret
jns
push
inc
arpl
dec
jg
jb
imul
in
int3
mov
push
sub
adc
sub
outsb
addr16
xor
sbbl
and
mov
pop
mov
movsb
jne
cld
call
jp
cwtl
xor
popf
addr16
xchg
cld
sub
sub
lea
push
jl
flds
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
