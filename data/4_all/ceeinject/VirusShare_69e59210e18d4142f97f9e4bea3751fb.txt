call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
or
jbe
or
pop
fsts
or
sbb
dec
mov
dec
test
jbe
push
jmp
fsts
or
sbb
or
mov
push
jmp
into
fld
cmpl
push
sarl
lds
test
add
lea
push
sbb
adc
xor
pop
jge
pop
scas
shl
jecxz
xchg
pop
out
jmp
push
push
or
shrl
sbb
sbb
xchg
daa
sbb
or
icebp
inc
stos
data16
cmc
mov
push
mov
xor
sbb
or
jns
sbb
add
cltd
pop
call
xor
shl
test
testb
or
xchg
xchg
dec
stos
inc
cltd
or
data16
call
jle
push
aad
outsb
sbb
cmc
fnstenv
xchg
test
mov
aam
aas
push
inc
cltd
out
shll
pushf
out
je
mov
cs
sbb
sbb
jl
mov
jne
push
mov
push
jmp
mov
xor
inc
cmp
or
sbb
imul
mov
push
xchg
cmpsl
dec
xchg
dec
mov
xchg
pop
out
or
or
dec
icebp
sbb
fidivrs
outsl
mov
inc
fsin
push
xchg
dec
subl
cmc
or
adc
sub
or
gs
push
stc
es
ss
sub
cmp
or
sbb
dec
mov
inc
test
jbe
push
jmp
ss
sub
cmp
or
sbb
dec
mov
inc
test
sub
dec
and
push
pop
test
addr16
lcall
adc
rcl
ljmp
fildl
lcall
gs
enter
lods
inc
and
movb
and
or
out
mov
pop
std
jmp
xor
inc
shll
mov
xor
inc
push
lea
dec
aaa
nop
lods
into
lcallw
dec
xor
and
add
sub
test
pop
arpl
inc
xchg
flds
push
cmpsl
js
xor
push
push
cmp
out
or
mov
push
xchg
add
notb
loop
gs
cmp
nop
mov
aam
xor
int
into
adc
push
mov
loopne
stos
enter
push
cmpsb
loopne
fstl
xchg
mov
jle
das
aaa
push
hlt
js
jnp
jno
filds
and
ss
arpl
mov
push
movsl
jmp
shll
call
stos
jge
pop
out
or
outsl
ljmp
inc
and
ret
or
inc
jo
nop
out
inc
iret
loope
fisubs
sub
push
sub
mov
cmp
inc
movsl
ljmp
pop
xor
xlat
movsb
mov
mov
or
loopne
cmp
loopne
xchg
push
shlb
xchg
or
mov
sub
imul
push
mov
jle
sub
imul
xchg
hlt
pop
cmp
sahf
jb
jno
push
and
push
loope
out
adc
paddb
cld
fistpll
adc
mov
repz
adc
mov
sub
test
scas
ja
gs
in
ds
mov
or
mov
in
cmpsb
imul
int
dec
mov
aas
popa
popf
loop
push
repz
or
out
or
cmc
and
ss
ljmp
push
rclb
sbb
shlb
cmc
in
sbb
mov
jmp
jo
cmp
push
ret
add
push
mov
iret
jg
jg
adc
outsl
mov
adc
fstps
imul
inc
jb
addb
sbbl
add
out
mov
sahf
mov
add
push
cmpsb
insl
sti
sub
add
lds
popf
jns
je
pusha
scas
mov
xchg
fstpt
dec
js
aad
imul
aas
add
bound
or
int3
data16
dec
mov
push
in
and
xchg
mov
popf
xor
jle
out
and
mov
out
dec
pop
in
sub
jp
popf
push
fstcw
popf
sti
mov
jbe
push
bound
sti
enter
test
scas
dec
stc
int3
fstps
sub
push
jp
adc
stos
call
test
xor
mov
test
mov
add
cmc
sub
adc
cmc
mov
mov
loopne
das
mov
fstpl
xchg
mov
inc
decl
add
stc
add
add
add
jno
pop
pop
cmc
aaa
subb
sub
xor
nop
dec
loope
insl
inc
sbb
adc
jge
xor
lret
orl
cmp
inc
aad
mov
in
xchg
sarl
loop
jb
out
xor
pop
por
dec
in
loope
cwtl
scas
stos
sub
mov
sub
jecxz
fisttpl
scas
ss
into
lds
lret
sub
fisttpl
iret
dec
inc
loopne
cmc
jns
jne
inc
push
imul
fadd
mov
adc
push
imul
test
sbb
sbb
xor
js
cltd
pop
scas
pop
lock
cmp
dec
sbb
in
aad
iret
fisttps
jno
ljmp
xchg
cmpsb
ja
ss
xor
shl
repz
aam
rolb
and
pop
in
in
dec
mov
add
mov
bound
pop
pusha
mov
add
inc
pop
fcmovnbe
pop
aaa
jo
cmpl
jo
adc
pop
xchg
or
int
dec
shll
sbb
xchg
mov
in
sti
pop
mov
shl
push
in
repnz
push
sbb
jge
pop
int
xor
iret
in
xchg
or
outsl
enter
sub
xor
mov
cmp
lret
out
and
mov
into
sbb
imul
mov
sub
push
std
jle
adc
mov
mov
test
mov
cmp
dec
add
ret
jo
repnz
sbb
and
pop
lret
movsl
fucom
adc
loop
decl
xor
jmp
bound
jbe
lret
xchg
inc
push
fldcw
mov
lahf
loopne
les
rorl
push
push
shrb
cli
jbe
pop
aaa
push
xchg
test
call
fmull
xor
or
xor
add
in
jb
mov
fsubl
ret
xchg
xchg
jbe
in
push
lret
pop
icebp
popa
imulb
xchg
imul
or
mov
dec
push
pusha
js
inc
fstp
xchg
pop
and
push
jnp
lret
push
shl
aas
popa
ja
sbb
xor
sbb
int3
push
call
fsubrl
mov
push
test
cltd
lds
mov
and
push
shr
xor
mov
loop
or
mov
popa
add
mov
xchg
push
jnp
mov
adc
xor
dec
inc
icebp
push
inc
jp,pn
push
cmp
mov
adc
cmpsb
rcl
xchg
ret
pop
cmp
out
and
lcall
stos
cwtl
inc
adc
lock
and
iret
les
jne
inc
mov
inc
lahf
imul
or
add
jbe
sub
dec
push
pop
adc
xchg
rcrl
jne
in
cli
mov
repnz
push
pop
js
xchg
les
mov
push
into
pop
lret
xchg
xchg
jae,pn
cmp
rcrl
cs
xor
fcomip
daa
push
jb
outsl
in
jmp
mov
insb
movl
dec
sub
das
push
das
das
repnz
stos
out
mov
push
leave
and
push
hlt
shl
shll
inc
mov
lods
pusha
xor
xchg
insl
adc
jb
inc
lret
sbb
aam
and
outsb
mov
rorb
mov
mov
sti
inc
pop
push
pop
or
jne
sub
push
jmp
das
mov
mov
fnstenv
enter
mov
inc
call
mov
xlat
mov
enter
mov
inc
mov
notl
jmp
push
cmpl
xor
adc
add
out
mov
fistpll
cmp
inc
ficoms
dec
into
ficoml
loop
test
pop
int3
in
sub
je
out
mov
mov
xor
xchg
xchg
fstpl
push
pusha
inc
xchg
pushf
dec
xchg
fnsave
xchg
ret
and
aaa
or
or
ret
loop
cwtl
push
mov
rcrb
push
push
popa
cmpsb
adc
inc
fnstcw
fimull
loope
lcall
xor
mov
dec
sahf
cmpsl
xchg
js
pop
add
xlat
inc
cwtl
sub
mov
xchg
push
rorl
sub
cmp
push
cmp
cli
jp
xor
sub
adc
xchg
insb
iret
negb
mov
mov
in
hlt
outsl
sbb
xor
std
mov
addb
sti
pop
aaa
mov
movsb
mov
sbb
arpl
add
testb
scas
mov
addr16
fstpt
addb
ret
jecxz
inc
or
and
lret
arpl
bound
jno
and
scas
cmp
push
sub
xor
test
ret
cmp
mov
lds
or
push
fs
mov
out
stos
ss
lds
xor
fisttps
fldcw
loope
and
mov
jo
mov
shll
aam
pop
jl
mov
sbb
les
jnp
hlt
cs
stc
mov
addr16
mov
xchg
jecxz
xchg
out
loop
int3
add
repz
jg
xchg
leave
adc
cmp
stc
ds
out
mov
push
dec
push
pop
jp
lahf
sbb
mov
jg
mov
in
jb
insl
add
jp
or
in
lret
ds
mov
sti
aad
jmp
pushf
pop
cmp
mov
dec
in
xchg
and
or
stos
push
xchg
les
inc
mov
fbstp
xchg
xor
es
push
push
aad
dec
js
cmp
cmp
test
and
insl
mov
aad
mov
ret
jmp
je
pop
es
int
sahf
aaa
sbb
gs
mov
stos
addr16
sub
shlb
cli
xor
mov
adc
inc
pop
js
rol
cmp
jg
cmp
in
mov
adc
xor
in
add
mov
dec
push
lock
mov
mov
cwtl
pop
sub
and
subl
push
loop
push
and
xchg
fsubs
std
xchg
addps
sub
sahf
rcr
cs
test
aaa
mov
adc
jp
lcall
movsb
sub
dec
lahf
xchg
popf
dec
mov
lret
and
adc
imul
pop
xchg
push
jp
xor
cmp
or
lret
xor
cltd
cld
out
and
in
jl
icebp
orl
push
xchg
dec
sub
out
repnz
clc
push
sbb
dec
outsl
mov
imul
std
pop
push
sub
cld
inc
pop
inc
daa
push
lea
mov
sub
jmp
cwtl
adc
mov
inc
xor
stc
ror
in
aaa
cmp
xchg
push
sbb
aaa
dec
xchg
lds
sbb
xchg
xchg
jp
adc
fbld
test
xlat
mov
lea
cmp
dec
lods
loop
jge
into
loop
mov
dec
pop
pop
mov
and
adc
aas
xchg
testb
aad
mov
inc
xchg
dec
icebp
push
mov
sub
cmp
push
push
fcoml
inc
push
cmc
loopne
loope
sub
push
mov
xor
fs
mov
or
or
adc
fstl
jns
enter
jb
mov
cmp
outsl
test
int3
out
in
cltd
pusha
add
inc
jle
in
arpl
cmp
mov
lret
subl
das
outsb
push
in
mov
stos
cmp
xchg
outsb
jecxz
ss
gs
and
popf
addb
sub
or
xor
shlb
scas
and
push
shrl
sahf
aad
stc
pop
andl
dec
mov
stos
jae
add
jae
xchg
jne
aam
mov
fsubs
cli
aam
aam
jmp
bound
sub
aad
push
push
cwtl
test
mov
inc
cmc
cmp
jmp
mov
test
push
iret
push
dec
sub
bound
pop
pop
add
movsl
stos
fcmovbe
bound
jp
jmp
movsb
and
cmpsl
xor
loop
push
sbb
or
cmp
leave
imul
ret
xchg
or
stc
dec
rclb
out
jge
outsl
mov
push
in
cli
lea
jecxz
cmpb
ror
sub
jmp
cmc
jl
push
ficomps
or
ret
test
fs
daa
icebp
dec
aaa
push
ljmp
stos
xchg
sub
ret
xchg
dec
adc
decb
pusha
mov
inc
adc
cmp
dec
cmp
lret
inc
rcrl
aad
cli
mov
mov
jae
lahf
sbb
inc
mov
pusha
mov
mov
adc
inc
fadd
and
dec
jo
movsb
jbe
cmp
jbe
enter
push
imul
and
adc
test
mov
inc
shl
jbe
out
jecxz
cli
or
out
xchg
test
std
mov
fistpll
inc
jae
cmpsb
or
adc
or
inc
frstor
mov
push
enter
pop
push
pop
mov
inc
dec
cmpl
popf
hlt
cmp
xchg
fsubr
mov
aas
dec
xchg
xchg
into
sub
pop
push
push
aam
cwtl
cmp
xor
jg
test
outsl
cltd
filds
pop
insl
and
lcall
out
push
inc
cltd
jae
aaa
and
adc
mov
cmp
jne
les
mov
inc
ret
test
popa
fwait
xchg
das
xlat
int
outsb
clc
push
and
cwtl
jno
imul
loop
push
in
cmc
insb
imul
mov
sub
xchg
mov
imul
jmp
lods
xchg
push
cmp
pop
insb
fucomip
iret
xchg
outsb
ret
xor
addl
or
scas
xchg
shr
jno
sbb
push
lock
clc
in
das
mov
rdtsc
and
int
dec
iret
push
inc
push
inc
rorb
mov
mov
movb
lea
add
out
arpl
test
out
sub
sbb
into
adc
or
push
mov
mov
cmp
jmp
lcall
cmpsl
xchg
js
out
repnz
add
sahf
test
popa
dec
leave
jp
xchg
pop
ss
stos
test
test
mov
into
popa
sub
push
sub
cmp
cmp
pop
sti
mov
hlt
adc
popf
fisttpll
in
test
inc
movsl
pop
dec
ss
pop
imul
pop
push
mov
das
lahf
jl
jg
jbe
loope
dec
jnp
fdivs
int
adc
scas
imul
cli
cmpsl
ljmp
loop
mov
adc
mov
mov
cmpsb
pop
sti
rclb
jmp
cmp
dec
lods
push
fldt
in
jge
jns
popa
popf
rorl
insb
pop
ffree
inc
add
iret
lahf
xor
out
adc
push
and
mov
pop
pop
icebp
cmp
movsb
dec
and
pop
fbld
pop
sbb
push
pusha
popa
sub
add
roll
lock
xchg
rorb
mov
xchg
cmp
out
mov
gs
mov
iret
nop
lret
sub
addl
xchg
mov
adc
add
xchg
dec
jnp
outsl
rorb
rcll
cwtl
movsl
arpl
mov
fs
ljmp
xchg
inc
sbb
aaa
xchg
les
xor
or
pushf
xor
lret
and
cli
pusha
jp
int
cmp
adc
pop
jg
jne
dec
cmpsb
mov
mov
sub
lods
dec
jmp
out
movsb
out
cltd
icebp
insl
testb
int3
fstl
sbb
in
and
sbb
xor
sub
das
cli
iret
hlt
add
test
jl
in
in
pop
or
fisubs
lret
sbb
int3
int
cmp
addr16
adc
stc
aas
es
clc
out
loopne
mov
rcrb
add
into
iret
jecxz
pop
xorl
xchg
xchg
cld
mov
in
pop
iret
js
stos
or
pushf
inc
ja
and
and
adc
scas
dec
cmpl
add
lods
stos
jle
daa
cmp
xchg
fidivl
mov
pop
lock
imul
popf
insb
stc
mov
push
dec
mov
jnp
xchg
dec
jmp
jl
movsb
inc
ret
in
scas
mov
orb
sahf
xor
jbe
rclb
mov
mov
mov
das
push
jl
in
sub
mov
addr16
pop
ret
adc
scas
adc
and
mov
stos
shlb
std
pop
insl
leave
push
sbb
jae
push
inc
sub
sti
loopne
testb
fs
jns
and
xchg
mov
test
shll
out
dec
outsl
test
jmp
or
lahf
test
daa
pop
scas
xchg
pop
cmp
movsl
mov
pop
cmp
gs
lock
call
mov
push
call
mov
mov
push
lret
xlat
xor
mov
repnz
sti
xor
xchg
mov
and
jmp
scas
cmp
jno
rcrl
cmc
push
mov
push
sub
in
out
or
mov
andl
sub
repz
sub
or
push
andb
leave
fdivr
mov
or
mov
pop
int
es
cli
xchg
sbb
lods
mov
mov
shll
adc
adc
in
adc
fs
jnp
int3
arpl
dec
dec
stc
nop
xchg
cmc
loope
ja
imul
loop
jno
xor
inc
lret
dec
push
sti
movsl
mov
adc
pop
or
jne
mov
mov
fidivl
cwtl
rcrb
aaa
and
test
pop
adc
mov
sbb
aaa
cmp
jae
add
rcrl
lret
pop
inc
sub
or
cwtl
adc
mov
push
daa
inc
pop
in
test
call
es
dec
movsl
or
call
lret
xor
inc
mov
out
call
jge
in
into
jne
mov
cltd
xchg
xchg
push
sahf
inc
loopne
mov
sahf
or
inc
dec
into
out
filds
fdivs
ret
mov
lret
pop
push
pop
cmp
pop
rcll
sub
mov
fs
mov
je
jge
sbb
test
push
dec
ret
fcoms
mov
fldcw
mov
push
push
xchg
jecxz
and
stos
sbb
lcall
pushf
mov
inc
mov
rcl
mov
lds
fidivrs
jne
sbb
xchg
dec
ss
rclb
aam
add
xor
jns
js
pushf
adc
mov
pop
dec
xchg
in
jno
mov
jmp
mov
mov
stc
sti
add
push
rclb
outsl
cmp
push
aas
pop
xor
mov
jp
scas
daa
mov
cmc
xchg
jb
or
sub
addr16
ret
mov
jp
lea
arpl
pop
shlb
out
cmpsb
add
add
inc
aas
sti
pop
leave
inc
and
pop
xor
jne
ja
test
xlat
sub
loop
mov
sbb
mov
negb
mov
mov
sbb
dec
pop
ljmp
push
std
jecxz
in
mov
push
jg
imul
out
jmp
outsl
cmp
stos
sbb
or
imul
scas
xchg
outsl
and
mov
lds
jns
push
sub
repnz
jnp
cmp
loopne
neg
movsl
cltd
jnp
mov
mov
aas
mov
cli
ucomisd
or
loope
pop
mov
out
cli
data16
pop
pop
jo
inc
out
lods
inc
faddp
cltd
lock
cmp
mov
jle
mov
cmc
jmp
popf
pop
ds
hlt
sub
and
push
push
jecxz
cmpsb
sbb
xor
lret
fs
push
fs
add
ror
aad
xchg
out
pushf
xchg
scas
lds
loope
and
mov
sub
sbb
ja
mov
or
gs
pop
inc
ficoml
pusha
mov
shlb
inc
sub
test
in
jecxz
sub
js
push
mov
sub
dec
adc
imul
pop
lcall
test
ficomps
cmpsb
adc
cmp
mov
ja
add
xor
stos
imul
subb
mov
sub
sub
adc
loop
jns
dec
test
pop
adc
pop
aaa
and
lea
jmp
nop
in
pop
sbb
xlat
pop
jl
add
dec
lods
or
push
cmpl
scas
lcall
test
mov
add
popl
inc
xchg
dec
fstpt
aad
mov
test
and
mov
into
dec
push
orb
jl
popf
xchg
inc
fsubs
aas
das
adc
xchg
icebp
icebp
lret
or
pop
mov
mov
sbb
loopne
enter
or
inc
insl
test
inc
orl
pcmpgtb
pop
pop
push
pop
stos
sub
mov
stc
push
mov
ss
pop
lcall
sub
mov
mov
adc
mov
jb
fs
inc
jb
sarl
push
pushf
sti
xchg
push
pop
cmc
aaa
or
ret
and
adc
fisttps
pushf
addr16
ja
jae
mov
inc
setnp
cmp
rorb
mov
ret
cmc
push
cmp
or
mov
out
loopne
sarl
mov
orb
push
pop
test
pop
mov
out
sub
sub
das
adc
outsl
ljmp
sbb
jle
stos
sahf
jp
pusha
repz
pop
sub
mov
mov
test
mov
outsl
es
std
add
outsb
push
push
dec
jmp
dec
adc
adc
xchg
out
xchg
pop
adc
sub
mov
arpl
cmc
adc
dec
push
ret
mov
out
dec
sub
lods
dec
xlat
imul
loope
stc
cmp
mov
and
cmp
test
sbb
push
xor
xchg
adc
aas
and
in
pop
add
sub
stos
into
mov
push
mov
cwtl
add
test
jp
fs
sub
push
jmp
ss
sub
cmp
or
sbb
dec
mov
inc
test
jbe
push
jmp
ss
sub
cmp
or
sbb
dec
mov
inc
test
jbe
pop
jmp
aaa
fld
test
repnz
dec
xchg
test
pop
cltd
push
jmp
mov
sub
xchg
dec
or
outsb
icebp
loope
xchg
dec
cmpsb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jl
ss
or
add
jns
imul
adc
int
fnsave
sub
push
sbb
inc
dec
push
jae
lods
mov
loop
push
popf
out
idiv
int
fnstsw
mov
sti
push
xchg
push
imul
xor
cmpsb
lods
mov
out
leave
mov
mov
jl
pop
js
outsb
bound
pushf
pop
es
inc
dec
iret
jp
xchg
xor
fsts
push
jns
loop
js
divb
push
dec
inc
jns
fwait
int
clc
mov
nop
stos
inc
ss
push
aam
sub
dec
push
movsb
lods
dec
lods
mov
sbb
mov
insb
sbb
sbb
sub
popf
sbb
scas
lea
xchg
sub
pop
xchg
pushf
arpl
movsl
jo
xor
mov
pop
lock
jl
mov
scas
mov
xchg
insl
xchg
insl
dec
xchg
call
shlb
ret
fwait
int
and
mov
decb
jns
xchg
mull
test
mov
out
ss
jbe
insb
jge
dec
dec
iret
mov
mov
aad
out
push
sub
jb
add
sbb
inc
cmp
sbb
out
mov
hlt
sub
decb
mov
ss
jle
jno
aas
sbb
sub
outsb
movsb
int3
mov
ret
lods
andl
scas
dec
pop
add
arpl
jno
and
inc
dec
push
pop
cmpsb
lods
mov
xchg
idiv
int
frstor
sub
push
sbb
inc
dec
push
pop
cmpsb
lods
mov
xchg
idiv
int
frstor
sub
jle
dec
or
stc
in
bound
sbb
or
inc
inc
lret
xchg
jnp
call
add
mov
pushf
jbe
push
dec
incl
in
clc
pop
sub
fs
call
mov
cmpsl
test
adc
add
repz
xlat
ljmp
sbb
sbb
inc
dec
inc
movl
push
dec
mov
pop
ret
cmp
insl
adc
lea
aaa
mov
xlat
mov
cvtps2pi
cld
pop
decl
pop
test
movsb
pop
pop
cmp
popf
cld
xchg
and
jbe
push
inc
repnz
aaa
call
jp
imul
in
lea
jmp
das
pop
call
popf
into
movl
and
mov
cmp
pop
mov
inc
mov
je
cmp
push
arpl
mov
adc
xchg
rcll
call
sub
xor
push
out
lret
xor
pop
jnp
fidivrs
inc
rcrl
or
pop
pop
out
sti
jecxz
push
xchg
stos
fcmovnb
mov
mov
mov
mov
adc
and
sbb
test
sub
sti
repnz
push
dec
sub
insb
cwtl
jnp
das
mov
rorl
or
hlt
adcb
sub
hlt
fstpl
sub
mov
jp
xchg
int
lret
sub
mov
lret
lret
jne
iret
add
sub
xor
addr16
cmp
aam
int3
push
cmpb
sbb
inc
adc
ffreep
in
shl
mov
popf
jl
cmp
std
mov
push
lea
jmp
fisubs
outsb
aad
out
or
pop
dec
add
sbb
mov
mov
insb
jecxz
jg
je
or
out
xor
sbb
scas
jmp
and
nop
mov
add
push
or
lcall
mov
or
sarl
add
ss
loope
scas
mov
adc
mov
xchg
adc
inc
call
xchg
lods
in
pop
inc
imul
loope
adc
cmp
dec
mov
loop
ss
jbe
rorb
repnz
pop
push
xor
rorb
inc
mov
ljmp
pop
adc
dec
mov
push
in
sub
dec
mov
ss
sbb
addb
loope
pop
ja
dec
fbld
pop
sub
paddsw
jno
andl
fcompl
and
cli
add
add
ds
add
insl
jno
insb
adc
pop
roll
push
xor
loope
lods
stc
rolb
test
xor
and
jno
sub
loop
pop
xor
jae
push
cmp
nop
loope
xchg
adc
inc
mov
inc
jbe
pop
lcall
push
jb
sbb
test
mov
mov
jno
out
adc
leave
pop
add
and
add
jmp
xchg
fidivl
mov
jnp
imul
int
cmpl
pop
cwtl
in
mov
test
inc
cmp
lock
int
notl
push
xorl
cmp
xlat
icebp
inc
pop
mov
popf
lods
jmp
add
int3
pop
out
stos
fidivl
mov
js
sub
pop
stos
inc
jge
add
mov
hlt
frstor
iret
mov
sub
push
inc
adc
push
negb
cmpsl
pop
mov
hlt
out
test
pop
mov
pop
add
push
xchg
ja
bnd
loop
insl
mov
lea
ds
shlb
mov
imul
adc
mov
je
push
repnz
aaa
mov
loope
in
scas
mov
mov
cmc
push
adc
std
sub
leave
shll
scas
addl
loop
orl
shrb
andl
push
inc
dec
or
cmpsl
ret
push
cld
cmp
or
push
sub
mov
insb
je
int3
mov
aaa
xchg
in
pop
scas
sub
sub
and
rolb
cmp
inc
push
pop
std
ficoms
imul
jbe
pop
xor
clc
jle
stc
ds
pusha
push
mov
xchg
adc
mov
cmp
and
mov
or
adc
les
sbb
lods
lcall
cltd
pop
mov
fucomp
xor
pop
ret
adc
push
out
int3
sti
loopne
jp
pop
xchg
pushf
sub
mov
sahf
insl
sub
roll
subl
adc
fildll
push
pop
ss
loope
pop
mov
fimull
inc
sub
lods
jb
mov
xchg
add
pop
jmp
jno
popa
inc
pop
sbb
out
fisubrs
or
mov
fisttpl
and
cmp
iret
filds
sti
scas
arpl
push
pop
les
out
pop
pop
inc
ss
fidivs
adc
ja
and
push
ds
add
mov
cwtl
jnp
ljmp
movsb
or
jge
popa
dec
add
push
lret
and
rcrl
mov
pop
inc
jl
test
jl
push
lahf
and
jb
add
inc
cli
pop
fldt
dec
aad
cld
sbb
mov
adc
pop
jge
dec
sahf
fldt
test
xchg
fucomp
xchg
rolb
push
xchg
pop
xchg
lcall
cmp
inc
cmp
mov
cmp
int
cmpl
mov
stc
in
inc
stos
dec
adc
cmp
cmp
jg
clc
hlt
cmp
sub
jge
jge
adc
pop
fwait
xor
pop
adc
les
leave
iret
into
nop
pop
push
fcmovnbe
push
jbe
mov
out
add
enter
sub
cmpsl
mov
nop
mov
enter
jmp
push
jp
mov
jl
xchg
sub
and
sti
push
mov
lock
into
xor
lods
dec
les
inc
xor
dec
sbb
addr16
call
inc
adc
mov
sub
sub
fldl
jle
pop
pop
pop
jecxz
dec
lret
dec
ja
and
es
pushf
insl
jnp
enter
inc
arpl
push
mov
call
ret
test
xchg
dec
sbb
test
jmp
out
test
hlt
scas
mov
fistl
inc
test
add
stc
dec
pusha
pop
sub
cmp
dec
dec
lcall
sti
repnz
push
mov
stos
or
sbb
jne
and
enter
loop
xchg
divl
cmc
in
and
jnp
lods
sbb
inc
push
imul
inc
pop
add
inc
rcll
cmpsb
jle
popf
sub
out
or
pop
dec
int3
fwait
enter
mov
or
mov
in
mov
notl
imulb
ret
dec
mov
inc
mov
fadd
push
lods
imul
add
mov
push
movsl
pop
dec
lcall
inc
pop
mov
in
inc
call
out
sub
dec
in
ret
in
rcll
scas
dec
and
push
jmp
inc
mov
and
xchg
jmp
fistps
cmc
lods
cmpsb
roll
in
rorl
jae
iret
cmp
je,pt
mov
sub
and
sub
or
cmpsl
inc
cli
mov
add
and
jo
cmp
dec
pop
sti
push
inc
test
es
inc
in
aaa
rol
subl
fildl
sar
sbb
adc
in
gs
in
lret
mov
div
insl
pop
stos
mov
mov
lcall
jae
fwait
mov
pop
repz
mov
ror
cwtl
push
imul
mov
push
dec
stc
pop
out
and
add
adc
fistpl
xchg
push
jp
xor
mov
fmulp
in
mov
insl
std
jo
fisttpll
fisttpl
or
insb
fsubrp
cmp
arpl
xor
mov
mov
jno
insb
rclb
dec
push
cmp
push
sbb
dec
ljmp
jo
push
ret
scas
push
xor
inc
dec
inc
jae
pop
mov
sub
mov
fistpll
mov
fadds
test
mov
xlat
outsb
and
mov
movsl
mov
mov
cvtps2pd
scas
and
stos
or
add
popa
jge
mov
mov
mov
pop
loop
call
mov
int
hlt
push
out
and
pop
and
mov
dec
loope,pt
xchg
loopne
daa
pop
lret
ss
movsl
or
cmpl
xor
jns
push
mov
pop
and
add
lcall
cmp
pushf
scas
rcl
mov
jg
adc
hlt
inc
pushf
add
jge
mov
nop
push
and
push
aad
insb
shrb
pop
sub
mov
leave
bswap
jp
shrb
cmp
add
insl
dec
inc
loop
cmp
push
lds
ss
call
cmc
lret
add
mov
push
lret
cmp
cmpsb
lods
xor
sub
push
push
nopl
loope
in
arpl
loope
mov
mov
xchg
test
scas
fmull
bound
fildl
add
jge
pop
data16
jae
lahf
ja
data16
jg
fstps
mov
leave
push
into
out
pop
fildll
pushf
jno
xor
and
cld
inc
dec
xchg
mov
loop
dec
jne
divb
insb
int
mov
push
mov
cmpsl
adc
loope
and
add
xchg
pushl
jle
adc
inc
les
lea
xor
and
repz
adc
dec
cmpsb
xor
rcrb
mov
test
and
push
and
addr16
push
es
repz
jo
repz
cmp
hlt
xlat
cs
fcomps
out
xchg
test
pop
mov
add
rorl
mov
jnp
insb
xchg
or
int3
loope
imulb
adc
into
jae
mov
and
ss
add
nop
xchg
cwtl
adc
outsb
xchg
popf
cli
lcall
mov
popa
adc
push
mov
push
jne
or
shrb
out
adc
cmp
mov
cmpsb
push
popf
aaa
repz
mov
cwtl
xor
enter
mov
add
outsl
cmp
daa
mov
xchg
stc
xorl
mov
add
jno
out
bound
push
push
into
jle
sbb
mov
mov
orl
es
enter
icebp
or
or
lcall
xchg
cltd
je
hlt
and
leave
lock
outsb
fisubs
pop
in
hlt
lea
cwtl
loopne
sub
pop
and
outsl
inc
dec
ffreep
dec
ret
and
mov
sub
dec
loope
xlat
fsts
movsb
push
xlat
push
adc
fs
or
pop
xlat
lret
into
test
test
mov
repz
ss
adc
jmp
cmp
inc
mov
daa
mov
add
fdivl
lret
jo
xor
inc
lahf
inc
xlat
imul
mov
and
and
and
lods
jae
xchg
or
out
or
fwait
loopne
or
push
aad
lea
jno
add
stos
dec
and
and
lahf
fcompl
sbb
mulb
sbb
push
jmp
popa
push
stos
daa
outsb
int3
pushf
neg
jae
pop
scas
mov
popf
cmp
and
in
test
cmpsl
neg
lret
xor
popa
or
or
jle
dec
adc
int
cs
imul
out
dec
xchg
test
in
shll
and
je
fadds
mov
lods
sbbl
adcb
pop
lods
mov
or
popa
inc
incl
outsb
leave
testl
stc
rclb
int
push
mov
adc
and
jle
roll
pop
stc
sub
xchg
xchg
pop
mov
lea
inc
add
cwtl
aas
mov
dec
fwait
cmp
call
imul
push
fwait
cmp
jmp
lods
jmp
filds
fmul
adc
mov
sub
and
mov
test
cmpsb
or
pop
adcb
leave
arpl
aam
aaa
inc
xchg
test
xor
xchg
inc
and
outsl
mulb
iret
dec
rorb
sbb
push
xchg
mov
inc
pop
cmp
jge
das
adc
and
lret
stc
les
adc
in
mov
add
mov
mov
cmp
arpl
hlt
mov
pop
call
inc
lock
add
in
lahf
outsb
cmp
int
fistl
inc
adc
and
into
nop
loope
ljmp
inc
adc
dec
cwtl
cmpsb
mov
jno
bound
js
cmp
in
gs
rclb
fs
ret
aam
and
out
push
xchg
sbb
ja
cmp
mov
cmc
push
adc
pop
push
xchg
dec
mov
aam
cs
shlb
iret
pop
nop
loop
add
fs
push
stc
pop
lds
std
imul
mov
jb
sarl
outsl
jae
or
sub
pop
fisttps
cmp
inc
icebp
cmp
inc
sub
pop
je
push
push
inc
and
and
adc
popf
add
negb
inc
subl
dec
sub
and
mov
cmp
cwtl
int
leave
mov
addr16
xor
mulb
adc
shll
jbe
lods
icebp
add
sub
lea
mov
pop
pavgw
in
ss
aas
lahf
adc
outsb
xor
push
lock
push
leave
or
fdivr
orb
push
stc
mov
incl
fsubr
dec
aam
aam
mov
fsts
test
insb
shrb
addr16
lods
cmp
scas
cwtl
xor
xor
xor
das
sbb
cmpsb
cmp
pop
test
insb
mov
adc
cmp
cmp
test
or
xchg
dec
jbe
rcrl
pop
cmc
cmpsb
pop
mov
stc
xor
out
mov
xchg
in
divb
xor
out
mov
clc
sub
lods
addb
shrb
daa
out
xchg
stos
push
add
stc
shrb
jnp
mov
jl
shr
jb
mov
xor
or
cs
mov
enter
loope
ja
xchg
shrb
or
call
cmpsb
daa
pop
fisttps
inc
outsl
mov
cmp
jnp
stos
inc
or
mov
mov
out
add
dec
dec
hlt
mov
insl
ljmp
or
not
arpl
inc
cmpsl
mov
mov
mov
fwait
mov
rcrb
jae
push
xchg
jne
icebp
pop
xchg
out
cli
shrb
sbb
arpl
mov
or
xor
movaps
outsl
cltd
xchg
xor
stos
cmpsl
js
push
sub
xor
sub
ds
inc
movsl
add
push
xchg
fcmovu
out
dec
pop
inc
xchg
repz
hlt
inc
push
popa
mov
jmp
add
push
xchg
cmp
xchg
mov
imul
popf
mov
popa
push
mov
and
out
aas
int3
int3
test
inc
inc
repz
aas
jo
cmpsl
jno
mov
or
mov
adcl
push
out
jbe
notl
inc
sbb
enter
mov
pop
addl
inc
push
in
popa
imul
xchg
sbb
cvtpi2ps
pusha
dec
fsubp
jnp
nop
or
in
pop
push
inc
fcmove
push
jmp
mov
test
push
out
imul
adc
loope
test
cmp
push
call
mov
push
int3
jbe
fstl
mov
das
test
sti
dec
int3
mov
push
popf
bnd
pop
outsl
push
jno
lret
jl
mov
repz
fisttps
or
cs
std
mov
ret
jg
fstpt
or
lret
pusha
inc
jg
out
andb
mov
mov
push
data16
jae
sbb
sub
push
or
icebp
in
cmp
inc
repz
jbe
or
ds
xchg
sti
add
fstpl
adc
xchg
add
inc
shlb
js,pt
mov
push
rsm
cltd
movsb
mov
push
lretw
dec
fildl
push
lods
push
in
dec
pushf
rcl
or
dec
push
or
pusha
ret
and
mov
lock
xchg
pop
aas
or
loope
add
mov
inc
cmpb
add
push
mov
insl
dec
ret
fcoms
js
mov
adc
aas
lahf
flds
and
fisttpl
cmp
clc
rcr
scas
pop
mov
dec
bound
out
enter
dec
adc
lea
mov
mov
mov
pop
les
mov
movsl
outsb
sub
xchg
push
imul
int3
adc
cltd
into
cmp
fists
lock
sbb
or
popa
adc
popa
xor
shlb
int
xor
jbe
rcl
pop
xlat
ljmp
call
test
add
ja
pop
xchg
filds
jne
test
sahf
sub
push
sub
inc
fsubrs
cmp
icebp
and
mov
test
sbb
xchg
push
cmc
push
popf
xchg
hlt
std
fnsave
jp
popf
add
jecxz
out
xor
imul
repnz
jp
mov
add
cmpsl
fdivr
pop
sahf
mov
js
out
flds
cwtl
pop
jbe
mov
cmp
leave
into
sub
fcompl
add
sbb
outsl
out
inc
jne
add
daa
fwait
aam
lods
dec
lcall
rol
mov
fistpl
sub
mov
push
ficompl
in
call
lock
repnz
shlb
sbb
fnstenv
and
nop
push
cmp
imul
in
movsl
mov
dec
add
subb
cli
ja
mov
sbb
rorl
xchg
or
pusha
xchg
fldcw
xchg
test
push
inc
test
sub
cld
ret
les
in
test
sahf
xchg
mov
add
sbb
push
aad
dec
insb
sub
xchg
loopne
adc
lock
addr16
dec
xor
lret
jb
rcrb
sahf
cltd
ss
jns
xchg
ss
push
pop
inc
push
xchg
mov
push
lret
test
outsl
and
gs
gs
xchg
les
pop
js
arpl
mov
andb
pusha
add
jae
movd
sbb
mov
and
into
movsb
jo
sahf
aad
pop
pop
xor
adc
cwtl
fcomp
jg
loopne
fwait
sbb
and
mov
lods
xchg
push
sbb
mov
iret
repz
inc
sbb
jge
xchg
sbb
fiadds
add
sbb
icebp
sahf
adc
ret
xchg
insl
movsb
jp
sti
mov
xchg
jmp
sbb
xchg
xchg
mov
inc
testb
sub
ret
test
int
test
add
ffree
adc
jp
loope
cltd
lods
je
jge
adc
sbb
dec
jp
lcall
ret
clc
and
pushf
sub
xor
sbb
jecxz
sbb
mov
sub
or
popa
jp
cmp
stos
lock
movsb
clc
popa
shll
jno
inc
push
sub
movsl
mov
cli
ja
dec
pusha
add
mov
push
adc
mov
mov
mov
mov
lds
or
jb
ljmp
xchg
dec
aam
adc
icebp
hlt
add
cmp
shl
pop
inc
cmpsl
std
jecxz
and
clc
lods
push
js
scas
dec
test
push
test
hlt
sub
rolb
jns
mov
jp
mov
inc
push
mov
inc
shlb
outsl
and
jg
or
dec
dec
aad
hlt
cmp
mov
dec
jo
das
pop
fildll
cmp
jns
outsb
xlat
cmpsb
xchg
fdivrl
sub
fcomps
pop
pusha
and
cmp
dec
push
data16
push
xchg
cmpsl
nop
mov
iret
push
pop
cmpsb
popl
mov
jecxz
jge
or
enter
sub
xchg
xchg
dec
jmp
outsb
jnp
sub
sbb
add
sbb
and
pusha
ficoms
mov
rcr
inc
fnstcw
rcr
xlat
xor
in
or
sbb
mov
push
mov
lahf
insl
outsl
das
inc
jmp
or
scas
cmp
daa
es
mov
stc
test
test
add
inc
test
in
jge
xchg
inc
jg
sbb
notl
dec
mov
jnp
jns
jno
pushf
sbb
mov
roll
gs
cmp
inc
imul
xorl
rolb
push
out
sub
fs
mov
sub
sbb
sub
lret
adc
mov
mov
pop
sub
adc
cmc
inc
cmp
pop
andl
cmpb
or
and
jmp
and
imul
or
pop
cmp
insw
jbe
inc
dec
push
pop
cmpsb
lods
mov
xchg
idiv
int
frstor
sub
push
sbb
inc
dec
push
pop
cmpsb
lods
mov
xchg
idiv
int
frstor
sub
xor
adc
jbe
inc
dec
push
pop
cmpsb
lods
mov
orb
std
mov
cmp
leave
add
xor
push
pop
insw
jbe
int
popf
pop
push
dec
pop
sub
xchg
ljmp
sub
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
in
push
std
jmp
mov
clc
mov
jge
dec
dec
pop
dec
sub
or
jmp
lods
mov
popf
mov
jge
cmp
dec
sub
sbb
jmp
lods
mov
popf
xchg
insl
lcall
inc
js
inc
inc
dec
jae
movsb
stc
std
cmpb
mov
dec
scas
repnz
loop
pop
push
pop
cmpsb
shrb
push
data16
inc
test
push
push
xor
xchg
imul
stc
push
add
mov
jecxz
adc
xchg
repz
lods
test
insl
cld
pop
test
lea
mov
push
test
pop
stc
lods
cltd
lods
imul
insl
xchg
sarb
or
rorl
push
cltd
mov
mov
pushf
mov
subl
push
aas
movsb
in
sbb
notb
test
mov
cmp
dec
jb
push
add
js
jge
dec
sbb
push
pop
or
stc
std
dec
leave
fst
lods
mov
popf
nop
insl
popa
jge
dec
inc
pop
push
sub
sbb
jmp
shr
call
adc
cs
es
push
push
jp
sbb
out
orl
fwait
std
popf
in
add
or
sbb
dec
dec
imul
mov
fdivrl
cltd
popf
mov
jge
dec
pop
pop
dec
sub
sbb
jmp
lods
mov
popf
mov
jge
dec
pop
pop
dec
sub
sbb
outsb
jbe
stc
fidivl
adc
xor
andb
or
cmovne
test
pop
cmpsl
mov
outsl
les
pop
sbb
je
and
push
cmp
pop
repz
add
xchg
call
or
in
jo
adc
jnp
ss
mov
dec
xchg
outsb
leave
jecxz
add
out
dec
sbb
jb
sub
shl
ret
repnz
xchg
mov
popf
inc
xor
in
cmp
cmp
jmp
imul
fdivp
xchg
movsl
rcrl
lods
lods
xlat
clc
mov
imul
pop
subl
sub
and
out
adc
sahf
fs
jg
or
inc
outsb
cmpb
pop
pop
popa
stos
ss
xchg
mov
out
leave
jns
dec
inc
ror
mov
dec
sbb
mov
and
imul
add
dec
fbld
dec
leave
jb
sub
jno
adc
ljmp
jmp
fwait
jmp
and
dec
imul
xlat
cmp
cmc
test
push
cmp
mov
jl
and
xor
mov
test
pop
sahf
daa
icebp
mov
test
mov
jecxz
xchg
fisubl
call
insl
aad
in
jp
xor
xorb
jp
or
loope
xorb
stos
into
pop
mov
jb
inc
mov
push
dec
test
xor
or
fcomi
jbe
scas
in
mov
mov
je
scas
shll
and
out
test
fisttps
aaa
popa
cmpsb
xchg
inc
xchg
lock
dec
mov
adc
sub
lods
xor
add
sub
push
hlt
test
xchg
cmp
dec
jnp
pop
ret
mull
ret
lock
imull
xchg
xlat
or
cmp
ror
mov
ds
pop
sub
scas
xor
iret
lcall
push
fcmovb
daa
cmpsb
stos
fisubl
pop
dec
and
xchg
cmp
push
cmp
xor
lahf
pop
jns,pt
cmp
jle
shr
or
push
push
lcall
mov
fdivrl
aaa
pop
rcr
and
push
dec
ljmp
jg
loopne
cmpsb
mov
inc
push
inc
dec
outsl
pop
or
mov
icebp
in
fbld
jl
les
mov
imul
push
dec
int
dec
dec
in
orl
and
insb
lahf
loope
sbb
or
xchg
pop
sahf
mov
in
sbb
jbe
xchg
outsl
jp
sbb
jae
jecxz
imul
pop
ss
and
hlt
cmp
scas
mov
ljmp
test
shl
in
out
outsl
dec
fcomi
inc
jae
sbb
jnp
xor
mov
mov
xchg
ds
rcl
scas
into
imul
fs
int3
scas
jp
add
or
pop
imul
out
and
inc
and
ret
repz
xor
fisubrs
pop
adc
xchg
daa
aam
mov
dec
push
sub
fildl
js
negb
sti
loope
jae
aaa
and
jbe
jne
js
xchg
jmp
out
mov
jmp
xchg
cmpb
out
dec
sbb
ret
ja
daa
xchg
pusha
aas
jecxz
jmp
xor
cld
mov
hlt
lcall
repnz
hlt
push
pop
inc
cmp
xchg
loopne
leave
xchg
int
mov
xchg
ss
sub
sub
push
dec
mov
js
das
or
xchg
cltd
stc
pop
repz
repz
int3
add
movsl
shll
mov
enter
ror
pop
mov
insl
pop
mov
adc
jl
ret
icebp
pop
sar
scas
pushf
jne
cs
movsl
mov
jp
xor
lret
setno
cmp
adc
cmpsl
cmp
cltd
or
cmpsl
stos
jecxz
pop
adc
cmpb
fwait
adcb
jo
cmp
jg
pop
insb
int3
dec
sub
fildll
adc
addr16
sub
pop
push
fists
dec
lcall
push
inc
jg
dec
repz
mov
adc
push
sbb
push
cld
aad
dec
ljmp
cmpsl
pop
outsb
cmp
adc
sahf
stc
mov
push
out
test
add
fcmovnbe
dec
lret
cwtl
and
in
rorl
aas
lcall
fmul
mov
sbb
repnz
and
jmp
and
push
movsb
xor
pop
adc
mov
fsub
enter
mov
and
ds
sbbb
fwait
mov
cmp
sti
or
adc
int
outsb
jp
pusha
xor
push
add
cld
and
jmp
data16
adc
test
xchg
mov
in
mov
lds
je
jbe
mov
jno
jl
dec
push
and
notb
mov
xor
mov
jmp
and
lcall
pusha
out
cmpsb
cmpsb
push
ss
xchg
sar
lea
lock
fisttpl
int3
mov
adc
lds
cmp
movsb
lret
mov
in
dec
inc
xchg
rolb
inc
jo
dec
pop
dec
sbb
loop
mov
lcall
inc
jo
xchg
ficoml
jne
dec
add
xchg
inc
out
test
popf
notl
cwtl
or
iret
loopne
andl
push
es
jmp
sti
jg
sar
adc
dec
sbb
decl
int
enter
cmp
push
nop
or
jge
mov
test
cmp
nop
insb
ljmp
rcrb
imul
lea
test
mov
jecxz
cwtl
das
jae
push
cmp
cmp
or
out
mov
sbb
and
inc
aam
sahf
push
inc
movsl
lods
jo
std
lods
xor
fdivl
and
sti
mov
loopne
fs
xchg
loop
jecxz
test
jle
jns
nop
out
pop
and
dec
ret
mov
aas
adc
insb
adcl
mov
arpl
sar
aam
push
push
out
cmp
out
or
jle
cmpsb
sub
insb
mov
aad
inc
mov
and
fidivrl
cmp
sub
cld
iret
enter
outsb
imull
jno
scas
adc
fnstsw
cmp
pop
addl
mov
add
cld
test
xor
sub
fucomi
stos
cmp
call
fs
imul
pop
add
cmp
or
xchg
test
push
pop
or
lret
lds
enter
inc
push
cmc
sbb
stc
test
push
xor
or
pop
mov
sbb
imul
mov
xor
aad
jecxz
in
cmp
icebp
xchg
rorl
add
pusha
mov
pop
xchg
cltd
add
or
jl
hlt
test
mov
xchg
jae
inc
sub
add
dec
pop
into
cmp
pusha
add
or
dec
iret
sbb
mov
fdivr
inc
xor
mov
dec
push
mov
xchg
je
dec
movsl
out
fwait
movsl
inc
jbe
dec
inc
test
push
cmp
mov
mov
in
or
dec
lcall
cmp
cli
fsubs
add
scas
cwtl
sbb
xchg
js
addb
adc
adc
sub
stc
push
scas
ljmp
fcoms
pop
jle
arpl
mov
es
les
aas
mov
cld
pop
push
xchg
adcb
mov
mov
adc
mov
xor
lock
add
xchg
enter
clc
mov
jl
jp
out
jge
inc
ja
pop
jnp
pop
insl
out
add
cmpsl
mov
lds
sub
xor
or
hlt
cs
addr16
jmp
pop
in
xor
xor
jae
and
pushf
adc
repnz
mov
pop
popf
pusha
inc
nop
jg
fadds
sahf
imul
aam
scas
or
mov
inc
jmp
bsr
aad
xchg
sbb
lds
sbb
mov
cmp
mov
cs
loopne
lods
pop
jmp
imul
xor
gs
adc
sub
mov
sarb
cmpsb
or
cmp
dec
or
fwait
mov
dec
outsl
into
mov
loope
ja
sub
bound
repz
sbb
addr16
pusha
or
push
sub
mov
xor
bound
sbb
sub
daa
adc
call
and
cwtl
sbb
jmp
push
and
lods
in
addr16
sar
jb
adc
loope
pop
jecxz
xor
out
cmpsb
dec
mov
add
dec
sub
rol
data16
push
stc
push
add
testl
into
stc
xlat
notl
mov
adc
pop
inc
fmulp
xchg
mov
add
jl
je
lods
add
inc
data16
sti
out
ret
mov
fldenv
in
nop
or
inc
rcll
adc
or
adcb
stos
popf
mov
leave
adcl
jge
repnz
jg
mov
mov
or
int
scas
out
bound
lods
sbb
mov
addr16
xchg
outsb
pop
cmpsb
add
push
loop
and
in
leave
iret
or
push
jecxz
mov
fdivrl
repz
pop
mov
ljmp
mov
scas
mov
mov
mov
pop
addr16
cwtl
push
mov
adc
in
xchg
sti
insl
popa
sbb
pop
mov
push
cmp
mov
jmp
in
outsl
scas
fs
scas
inc
jns
mov
call
andb
xor
das
je
loop
xchg
dec
push
pop
int3
fcoms
push
sub
or
aaa
aas
adcb
cmp
lea
adc
ja
sbb
mov
out
lea
mov
int
sbb
jmp
pusha
jae
outsl
sub
decb
lods
jmp
js
xor
cs
jo
ret
sbb
cmp
insl
lret
lcall
ljmp
enter
adc
and
jnp
cmp
dec
push
cmp
in
push
cmp
sub
mov
push
loopne
mov
je
add
aam
loop
xchg
or
cmp
sub
sbb
adc
cmp
ljmp
leave
aam
testb
sahf
add
sar
push
adc
es
push
stos
fistpll
or
pop
pop
xchg
fldt
push
arpl
ja
mov
out
mov
sbb
data16
loope
mov
data16
add
ret
shl
mov
testb
inc
push
jl
shl
out
out
mov
test
jb
hlt
enter
push
xchg
ds
mov
bound
sbb
mov
push
fiaddl
mov
sub
push
into
popa
movsl
sbb
fdiv
lock
mov
xchg
push
dec
movsb
daa
int3
xchg
xchg
jb
or
cmovl
push
imul
push
fwait
out
and
mov
push
push
mov
clc
movsb
dec
dec
or
pop
pop
jnp
push
and
sbb
mov
sarb
add
js
inc
or
jo
adc
or
jmp
movsl
xor
mov
popa
shrb
sbb
movsb
jne
mov
mov
mov
xchg
and
xchg
ss
arpl
push
cmp
add
ret
out
dec
repnz
jle
ss
add
mov
mov
mov
imul
xlat
std
fadd
in
test
push
faddl
pop
xchg
push
and
ss
xor
jle
lods
or
xor
movsl
cld
cmp
loop
in
xchg
test
mov
imul
sbb
fwait
aam
popa
in
fnstenv
dec
cld
ret
or
scas
mov
xor
inc
xchg
gs
aad
sahf
fadds
sub
push
xchg
les
loope
push
decb
pop
dec
fwait
scas
cmp
adc
dec
outsl
push
pop
sahf
loope
int3
js
pop
mov
es
cmp
fldenv
loop
sub
push
dec
shl
cmc
cmp
stc
sub
rorl
mov
fldcw
push
jmp
leave
scas
ds
sbb
jne
mov
imul
daa
fwait
mov
sbb
mov
addr16
dec
fucomi
imul
add
pop
xchg
in
push
pop
jns
test
sbb
xor
hlt
adc
pusha
bnd
out
jbe
pop
fwait
insl
jnp
pop
xor
dec
sub
xor
inc
mov
cmc
or
in
push
out
mov
push
add
enter
mov
add
lret
dec
aam
xor
mov
jp
jo
mov
cmc
and
inc
add
inc
push
arpl
mov
test
enter
scas
xor
push
jmp
and
mov
je
sub
int
inc
mov
cmc
int
or
xor
xchg
aas
sti
push
outsb
mov
mov
aam
xchg
pop
cmp
inc
adc
cmp
sub
test
push
sti
in
out
daa
cli
cmp
loope
inc
call
cli
in
mov
adc
sarl
xchg
xor
mov
aam
fwait
and
cld
jbe
or
xchg
test
lret
lods
push
push
mov
outsl
jge
cmp
neg
sarl
push
pop
cltd
adc
pop
push
adc
loop
jo
xor
popa
adc
in
jne
popf
jo
jb
add
push
nop
aaa
push
orl
fisubs
xchg
and
mov
and
sar
mov
cltd
leave
in
push
push
icebp
jbe
andb
xchg
repz
or
jmp
gs
sbb
ret
fcmovb
mov
pop
cmpsl
dec
mov
inc
jne
stos
daa
lods
data16
mov
xchg
mov
sub
outsl
imul
les
pop
jae
shrl
scas
fstpl
xor
loope
mov
lret
test
inc
xchg
decl
fsubrs
movsb
inc
ficompl
mov
add
adc
mov
push
test
inc
push
jnp
push
add
cli
inc
mov
mov
and
mov
jns
dec
lahf
add
push
fwait
push
insl
dec
inc
das
pushf
dec
into
imul
cmp
mov
daa
enter
cltd
rcl
movsb
sub
lock
xchg
dec
mov
aam
push
loope
pop
pop
fwait
and
lock
mov
cmpsl
xor
adcl
xorb
dec
icebp
hlt
movaps
pop
xor
dec
jl
das
mov
test
stos
xor
xchg
and
mov
jmp
inc
out
lret
iret
out
repz
sbb
out
push
repz
xor
fcomps
push
mov
mov
mov
aas
pop
mov
mov
mov
pop
push
test
add
or
xor
fidivs
cmpl
sbb
stos
sbb
ret
ja
inc
fisubrl
scas
cmp
cmp
jecxz
lret
testb
mov
mov
in
mov
in
xlat
push
lock
divl
xchg
and
push
pop
cmp
fstl
push
or
and
xchg
add
sub
inc
adc
ret
scas
xor
xor
push
test
daa
test
jnp
xchg
mov
dec
xchg
into
push
popa
push
add
aaa
arpl
shr
add
xor
flds
jbe
or
icebp
fisttps
jmp
push
add
movsl
arpl
js
ss
sub
and
dec
shrb
outsb
lock
inc
shl
xchg
fildl
push
imul
es
enter
cmp
imulb
jmp
sarl
and
fsubr
js
and
loopne
mov
and
jns
in
in
lock
lock
pushf
rorb
fstpt
mov
push
rclb
addr16
mov
icebp
incl
mov
xchg
dec
mov
push
arpl
xor
leave
leave
stos
fcmovnb
cs
addb
sub
cmp
rorb
scas
lret
mov
insl
aam
mov
sbb
or
and
mov
pop
mov
aas
cmp
sub
sub
scas
xchg
sbb
mov
stos
subb
jb
push
in
ret
cmpsl
jp
sbb
clc
cmpsl
icebp
jo
or
nop
je
inc
xchg
jno
jp
push
stc
pop
jecxz
mov
stos
add
stos
stos
lock
cmpl
push
pop
jb
stos
push
jb
pusha
push
adc
les
cwtl
xchg
jg
jbe
aad
and
sbb
mov
fs
sub
and
jb
mov
xor
out
adc
jmp
addr16
mov
aas
jne
fnstcw
xchg
dec
cltd
loop
sub
adc
dec
and
mov
mov
lds
insl
push
push
jbe
scas
xor
sbb
clc
outsb
push
fldt
sbb
aad
pop
or
mov
add
xor
push
insb
sbb
xor
push
pop
xchg
aam
loopne
stc
cmp
je
pusha
push
sub
iret
push
dec
popf
cmp
mov
fld
fnsave
xorl
pop
xor
jp
aaa
sub
stos
lret
push
push
xor
jp
in
mov
movsb
dec
test
xchg
pop
ss
dec
mov
cmp
add
bound
xor
test
add
push
and
cmp
add
pop
jne
mov
lock
xchg
pop
out
dec
bnd
mov
pop
pop
pop
xchg
pop
and
ficomps
cli
cmp
mov
lods
and
ja
mov
lods
xor
pop
pop
addr16
adc
xor
in
fidivrl
sbb
addr16
and
lahf
mov
cmp
sarl
outsl
leave
jmp
dec
out
pop
pop
jb
scas
out
dec
mov
insb
sub
iret
cmp
es
repz
cs
mov
xor
push
fmuls
test
out
cld
dec
test
xchg
cmp
clc
mov
cli
xchg
inc
dec
adc
add
ret
lahf
add
leave
popa
mov
mov
cmp
sub
add
cmp
xorb
inc
cmpsb
push
test
sbb
out
imul
jle
sbb
inc
in
adc
in
mov
test
sub
cmp
loop
rol
cld
pop
and
daa
cltd
push
aad
out
sahf
xchg
out
scas
loope
jmp
push
jg
sahf
inc
js
dec
lock
andl
push
add
xorl
push
dec
mov
loope
insl
dec
cmp
cmc
cmpl
mov
or
lea
mov
insl
negb
adc
jnp
add
xchg
cmp
das
mov
add
push
daa
sub
cmp
and
in
ja
cltd
xlat
mov
pop
enter
or
xchg
cmp
scas
sub
hlt
mov
movsl
call
pop
lcall
pop
mov
fadds
xchg
pop
sti
or
test
mov
movsb
insl
and
fildll
leave
adc
mov
fdivrl
adcb
mov
mov
pop
add
stos
imul
xchg
adcb
lret
test
pushf
popf
mov
pop
jmp
test
fdivr
jge
je
jbe
rcll
lret
cli
out
iret
sub
jmp
scas
mov
jge
push
out
pop
gs
outsl
movsl
test
dec
mov
ljmp
cwtl
and
inc
pusha
lds
loop
mov
push
es
jg
lea
jae
dec
or
daa
add
inc
or
pop
mov
je
add
pop
testb
sbb
xchg
adc
mov
daa
adc
sahf
mov
mov
lahf
pop
sbbb
push
in
jle
jb
test
pop
sub
leave
mov
or
inc
rolb
sbb
and
cltd
fcomps
push
add
push
inc
inc
cmp
sbb
add
out
repnz
icebp
mov
iret
xchg
mov
or
stos
dec
ret
call
into
sbb
fdivrl
aaa
nop
mov
xchg
mov
xor
outsl
adcb
jns
int
cmpsb
sub
or
add
gs
pop
rcrb
test
es
daa
int3
push
jecxz
shlb
or
cs
cmp
out
imul
xchg
xchg
dec
xchg
test
test
mov
orb
add
lods
mov
sub
out
jl
mov
lods
mov
popf
mov
jge
dec
pop
pop
dec
sub
sbb
jmp
lods
mov
popf
mov
jge
dec
pop
pop
dec
sub
sbb
jmp
lods
mov
popf
mov
jge
dec
pop
pop
dec
sub
sbb
jmp
lods
mov
popf
mov
jge
out
pop
ds
mov
repnz
testb
and
jnp
adc
pop
xchg
push
mov
and
push
jecxz
adc
add
xor
and
push
mov
sub
arpl
xchg
jbe
inc
rclb
inc
rcrl
es
jecxz
adc
xor
les
inc
lcall
addl
popa
stos
dec
shll
push
arpl
add
fadds
push
pop
adc
fdivrl
push
stos
movsb
push
push
testl
dec
pop
stc
push
out
jl
ljmp
in
pop
sbb
cmp
inc
call
clc
xor
or
in
pop
lret
insl
push
add
jo
cmpsb
push
aam
add
adc
iret
jle
mov
into
xchg
insl
arpl
mov
mov
dec
mov
jecxz
jmp
push
pusha
test
inc
mov
sahf
arpl
jecxz
mov
daa
jbe
sbb
jmp
add
cmpsb
cld
mov
mov
insb
jbe
push
test
ret
fptan
push
loop
dec
testb
xor
int3
push
mov
cmpsb
jae
arpl
xchg
lock
sbb
fdivp
push
jecxz
movsb
inc
out
xchg
insl
call
xor
push
jecxz
xor
and
and
das
cmpsl
pop
push
sahf
push
xchg
addr16
mov
cmpsl
inc
mov
jecxz
fldenv
xchg
jae
sbb
rcll
xor
xor
and
ja
insl
mov
add
jae
arpl
mov
mov
es
jecxz
adc
add
xor
and
push
mov
cmpsb
jae
arpl
mov
mov
es
jecxz
adc
push
xor
das
dec
test
enter
mov
push
xor
in
rclb
in
addb
sub
xchg
jg
adc
add
testl
xchg
pop
scas
pop
cmp
rclb
inc
xchg
mov
fstl
xlat
mov
cld
jge
mov
popa
jae
test
fimull
adc
pop
xchg
jmp
push
loop
mov
inc
dec
imul
ljmp
adc
push
rolb
pop
push
into
mov
jnp
pop
mov
fs
imul
stos
adc
and
lock
jno
ror
scas
ss
sbb
jle
jnp
xchg
scas
gs
rcrl
cld
mov
xchg
inc
jg
js
rcll
ljmp
stos
dec
shll
das
loope
cmp
xchg
dec
inc
mov
roll
mov
jge
dec
in
push
jp
sub
neg
jmp
push
mov
test
pop
arpl
cmp
pop
dec
adc
dec
and
mov
inc
test
pop
fs
jne
pop
cwtl
leave
jecxz
lret
ffreep
sbb
xor
pop
out
adc
xchg
and
pusha
cltd
mov
lods
inc
and
pop
dec
mov
sub
adc
popa
sub
fs
mov
mov
push
and
incb
dec
adc
stos
imul
outsl
mov
dec
sbb
inc
imul
les
sbb
xor
xchg
movsl
cmp
cld
out
pop
out
xchg
pop
dec
scas
adc
and
out
das
jg
push
ret
repnz
pop
les
inc
std
adc
mov
cltd
jl
cmp
push
jp
faddl
pop
outsb
mov
push
ret
lret
cwtl
in
xchg
fldt
mov
sub
cltd
outsl
pop
mov
out
jg
add
fwait
cmp
inc
sub
test
inc
rcrl
movsb
scas
out
jbe
fstpt
not
lahf
push
inc
jge
and
xchg
fsubrs
insl
addr16
movsl
add
cmpb
popf
cli
add
pushf
adc
mov
movsb
or
jl
call
sub
pop
adc
ds
ja
fs
outsb
xorb
stos
push
in
mov
iret
mov
xchg
mulb
movb
xchg
xor
push
dec
rcrb
inc
sbb
mov
shrb
jnp
in
inc
xor
les
ds
iret
xorb
mov
mov
add
sbb
sti
dec
loopne
sbb
pop
pop
or
sbb
mov
fcompl
push
cli
xchg
mov
sbb
cmpsb
pop
dec
cwtl
pop
push
and
outsl
inc
mov
sbb
xchg
clc
movsl
adc
sub
ret
jp
add
fcomi
push
fnstsw
sbb
test
imul
stos
or
test
add
xchg
xor
push
sub
in
inc
or
push
dec
pop
cmp
dec
or
push
insb
pushf
push
inc
cmp
inc
pop
lret
aad
dec
in
mov
push
push
or
outsb
call
xchg
test
mov
sub
pop
popaw
or
add
cmp
xchg
adc
pop
inc
mov
out
push
ljmp
or
js
sbb
push
fsubrl
negb
pushf
sbb
cmp
xor
rol
cmc
or
dec
sbb
mov
jge
je
mov
lods
sbb
adc
mov
adc
lret
shlb
movsl
sbb
lock
adc
sarl
push
cmpsl
add
jo
mov
inc
scas
fildl
shll
xchg
xchg
call
cli
mov
int3
and
lret
xchg
aad
cmp
icebp
cmc
cmp
test
bound
pop
push
sbb
popa
mov
mov
push
cli
jge
mov
call
stos
lcall
out
xlat
lahf
mov
out
sbb
mov
inc
push
out
loopne
out
fwait
push
cmpsb
sub
les
aam
fyl2x
fadds
insl
outsb
lods
xor
test
int3
fs
and
add
push
jle
xlat
mov
and
sub
movsb
es
and
cmp
xor
dec
ret
outsl
xchg
mov
loop
std
xor
add
sbb
sbb
loopne
fisttpll
mov
xlat
fs
mov
imul
imul
xchg
lds
inc
jbe
and
cli
adcb
and
popf
add
jecxz
imul
int3
mov
in
bound
cmp
cld
cmp
out
shr
scas
xor
jp
mov
add
push
lods
jno
fiaddl
iret
icebp
inc
sbb
flds
lds
sahf
ds
sbb
xchg
out
xor
into
cltd
xchg
xor
imul
and
fldenv
push
jbe
xor
das
pusha
sub
nop
add
fstp
div
lcall
decl
pop
clc
out
pop
popa
andb
shrb
scas
or
mov
pop
daa
insl
xor
std
xlat
fcompl
xlat
mov
jb
lods
add
nop
fwait
adc
clc
cltd
dec
lcall
pop
mov
cmp
jle
rorb
push
movsl
sub
loope
es
mov
enter
icebp
enter
jo
scas
mov
adc
data16
cli
das
orl
cmp
cltd
es
dec
push
rolb
inc
sbb
cltd
das
xlat
std
sub
xor
xor
pushl
mov
popf
rclb
mov
jo
loope,pn
push
inc
inc
mov
mov
and
xchg
adc
mov
fimuls
cmp
cmp
bound
mov
lcall
adc
mov
mov
in
push
mov
rcrb
repnz
jmp
or
lock
push
ljmp
jno
sub
lods
scas
sub
ljmp
jbe
aad
insb
mov
cmp
push
cmpsb
fnstenv
inc
and
test
push
xorb
sti
nop
mov
add
xchg
pop
jg
pop
mov
repz
popa
bound
push
sarl
scas
inc
dec
push
scas
aaa
or
movsl
dec
rorb
ret
enter
fwait
cmp
repz
dec
cmc
in
add
icebp
shrb
subb
xor
pop
enter
jmp
xor
xlat
and
test
mov
cld
adc
repnz
xor
dec
in
mov
sub
push
ds
adc
cmp
xchg
dec
sbb
ret
fwait
out
popf
test
cmpsl
jecxz
xor
rcrl
mov
scas
imul
pop
adc
dec
scas
cmpsl
add
push
lret
jno
push
test
ljmp
pop
add
xor
xor
adc
lods
jns
and
enter
and
cli
or
pop
inc
cmp
lea
push
or
int3
ficoms
mov
cmpsb
enter
mov
mov
jbe
loop
sub
ss
daa
aad
hlt
xchg
cmc
dec
pop
out
movsb
push
pop
sub
sti
xchg
rcrb
push
cmpsb
addr16
gs
lret
stc
dec
ret
mov
pushf
push
sbb
jecxz
lret
or
shlb
jae
imul
dec
mov
loop
add
inc
or
loop
cmp
xor
xor
xchg
repz
out
cmp
es
pop
inc
mov
popf
cmp
enter
jb
aad
sub
xchg
inc
xchg
stos
fisubs
and
sbb
lock
fadds
mov
movsl
aam
sbb
add
jns
mov
idivb
sti
addr16
dec
cmp
movsb
mov
jbe
lahf
inc
shll
mov
and
popf
test
scas
jl
lcall
xor
fimuls
aaa
push
out
jno
fidivl
cmpsb
dec
add
jmp
xor
shl
fcompl
mov
mov
xchg
ret
notb
hlt
shrb
loope
cwtl
insb
shll
mov
mov
adc
or
lock
xor
cmp
inc
push
orl
movsl
or
incl
test
cld
or
fisubl
shlb
jb
enter
loope
int3
bsr
clc
ret
ljmp
inc
lea
sbb
cmc
sbb
jecxz
xlat
or
shlb
cmp
imul
aas
jmp
lea
add
pusha
adc
lcall
cmp
bnd
insl
out
pop
lcall
out
in
xor
stos
aaa
pop
cwtl
or
daa
sub
dec
pop
add
test
dec
out
mov
ficoms
xlat
and
push
add
inc
push
add
xchg
test
push
and
ss
mov
out
mov
jnp
mov
rcll
and
das
dec
stos
cli
popa
add
rol
les
fmuls
pop
jns
rorl
stc
push
mov
push
cmp
or
nop
cmc
and
mov
cld
repnz
pop
xor
adc
fwait
aas
xor
jnp
fadd
pop
sti
ljmp
mov
xor
push
xchg
setle
les
inc
mov
sbb
jmp
cmpsb
mov
flds
jo
mov
pop
sub
repnz
stc
push
out
lcall
sub
ret
and
nop
jb
xchg
pop
loopne
xor
inc
mov
repz
mov
iret
jne
dec
lods
mov
pop
stos
data16
pushf
ret
sub
add
xchg
out
lock
stc
loopne
cmp
mov
and
call
mov
mov
lds
subl
movsl
push
jne
cmp
scas
ja
cmp
stos
jp
push
and
xlat
mov
mov
adc
sbb
and
lret
sbb
cmc
addr16
sti
adcb
mov
xchg
stos
jae
sub
lds
sarl
mov
pop
call
push
ret
ja
stos
push
pop
push
push
mov
jge
sub
sub
sti
xor
mov
fstpt
in
jo
mov
arpl
jmp
cmpsl
cmp
test
lods
mov
stos
ret
xor
push
rorb
fdiv
mov
fisubs
push
in
ret
or
loop
cltd
or
lahf
push
inc
dec
mov
ja
xor
bound
xlat
jbe
or
adc
ror
dec
stc
js
mov
jle
push
sub
int
out
loope
in
cmp
imull
push
imul
xchg
daa
ret
bound
push
inc
fwait
subl
sbb
pusha
fs
sub
mov
outsb
cmpl
cmp
mov
fs
stc
pusha
inc
cmp
icebp
xchg
insl
lods
xchg
dec
dec
rol
pop
mov
fcomi
mov
jns
mov
mov
fcom
push
jmp
in
les
loopne
mov
jl
repnz
stc
fcompl
out
lds
or
cmp
xchg
idivl
dec
xchg
push
jl
or
test
fwait
test
add
sahf
in
mov
cmp
xchg
sub
scas
iret
xchg
push
clc
in
jno
and
push
xchg
pop
leave
or
test
cmc
sti
imul
mov
icebp
xor
aad
lret
push
movsb
lods
mov
inc
out
sbb
jne
cmp
push
xchg
adc
pop
xchg
or
pop
add
leave
adc
adc
rcrb
rorb
mov
gs
inc
or
push
inc
sbb
mov
bound
sub
sub
lods
xor
ror
cmp
inc
dec
cmp
test
in
push
and
pop
xchg
pop
add
repnz
in
push
stc
out
out
push
push
subb
sub
movntq
out
pushf
out
jo
out
mov
push
insl
xor
jns
orl
jle
out
mov
sahf
repnz
test
xchg
pop
xchg
and
sbb
dec
ljmp
les
movsb
add
adc
sbb
cmp
iret
movsl
push
push
in
sahf
ret
lea
jb
imul
xchg
inc
in
std
xor
test
ljmp
adc
lcall
push
or
call
bound
jnp
xchg
ret
push
mov
insb
and
or
xchg
cs
stos
jl
call
test
js
leave
jmp
lcall
push
iret
fwait
adc
inc
mov
xchg
test
pop
dec
mov
into
sbb
hlt
das
enter
sub
add
and
and
rorb
xchg
fs
inc
dec
inc
xor
movsl
insl
or
in
gs
int
cwtl
cmp
xor
cmp
or
mov
fsts
je
cmp
loopne
push
aam
out
cmp
cwtl
subb
sub
fiadds
inc
and
int
or
fcomps
popa
xchg
mov
jge
fsubl
or
lcall
pushf
lahf
xchg
ss
lods
or
sbb
scas
mov
ficompl
addl
clc
xor
ljmp
dec
sbb
pop
ror
mov
pop
mov
lods
popf
daa
xor
add
lahf
mov
push
xor
dec
adc
shlb
cmpsb
cli
sbb
and
sub
pop
sbb
in
lea
dec
inc
push
das
roll
repnz
jmp
inc
hlt
inc
add
stc
cmp
mov
pop
int3
xchg
xor
push
rorb
aaa
in
out
leave
jb
rorl
and
stos
xor
sub
out
fcomi
jbe
in
outsl
insl
jle
jge
sbb
mov
aad
dec
scas
or
inc
imul
mov
mov
outsl
rcrb
movsl
xor
fsubp
cltd
mov
faddl
iret
cmp
jns
add
test
ret
in
push
and
push
mov
jno
or
cld
nop
mov
push
or
aad
dec
inc
sbb
sub
dec
push
xchg
inc
dec
test
inc
les
stos
mov
jbe
int
js
divb
push
push
and
ret
and
pop
sub
popf
iret
mov
mov
sub
cmpsb
rcll
cmp
sub
jnp
jmp
ds
mov
jmp
aas
dec
push
sub
jns
fdiv
mov
daa
xchg
dec
ja
mov
subb
cmp
sub
call
mov
rol
push
cli
jae
cs
sbb
sbb
iret
xor
cmpsl
je
mov
inc
mov
mov
fiaddl
out
xor
fidivl
adc
movsb
in
inc
inc
xchg
and
cli
xor
nop
xchg
sub
push
cmpl
xlat
jmp
lods
mov
rorb
mov
pop
pop
mov
into
rorb
cmp
cmpsb
pusha
push
dec
fisubrl
push
enter
lock
stc
mov
inc
jp
stos
sub
pop
in
xchg
insl
mov
lods
iret
jp
js
xchg
xor
cmp
mov
or
inc
lcall
xor
mov
adc
jl
push
sbb
out
lcall
or
inc
or
and
add
add
in
cs
call
mov
mov
xchg
lods
add
inc
loopne
mov
xchg
xchg
leave
pop
or
mov
mov
addr16
xlat
pop
scas
xchg
ljmp
xor
or
imul
out
mov
das
mov
mov
lock
cmp
icebp
sti
call
test
sbb
xor
push
mov
test
inc
fs
sub
roll
repz
loop
sbb
push
and
cmpsb
add
xor
aas
pop
mov
push
in
sub
add
mov
fsubs
call
scas
iret
jmp
jge
mov
inc
pop
adc
loopne
add
lods
sbb
xor
xchg
scas
inc
leave
leave
call
lock
leave
out
outsb
mov
insl
bound
adcb
cmp
xor
cwtl
addr16
lods
cmp
in
push
mov
jl
push
inc
push
les
mov
bound
ret
and
je
mov
ficompl
data16
cmp
mov
cltd
inc
dec
test
mov
xchg
out
lcall
xchg
sub
lea
hlt
xchg
inc
mov
popa
imul
loop,pn
xchg
repnz
push
out
mov
or
outsw
cmp
inc
cwtl
test
sub
test
jne
or
lea
push
jb
shl
cltd
in
mov
into
mov
int
mov
dec
cmp
repnz
sub
sub
outsl
push
jno
decl
push
or
mov
and
adc
imul
pop
mov
and
adc
fcompl
int
lret
and
loopne
mov
push
sar
shrb
add
mov
jmp
fstpl
std
push
pop
test
into
aas
dec
insb
pop
paddsb
cld
xchg
or
inc
addr16
adc
xchg
lock
jge
sbb
ret
scas
cmp
cmp
fbld
pop
rcrl
fdivl
pop
rcll
das
imul
pop
cmp
repz
and
cli
sbb
in
pop
movsb
dec
mov
xor
xor
inc
popf
push
cmpsl
ljmp
mov
repnz
setg
fucomp
ss
pop
cwtd
shl
push
xchg
rcl
cmp
or
roll
rcrl
cld
jne
mov
test
scas
add
popf
sbb
insb
mov
imul
xchg
vpshab
fcomps
push
mov
or
rorl
pop
into
mov
pop
xlat
dec
inc
jle
xchg
shl
pop
or
add
loopne
sub
cmp
mov
mov
adc
xchg
out
pop
movsb
lea
cmpsb
pushl
leave
or
lcall
inc
lock
add
pushf
fsubs
inc
popa
testb
adc
fxch
fs
clc
cmc
mov
jb
insb
insl
sbb
xchg
jle
ret
add
popf
xchg
mov
dec
mov
mov
les
cmp
push
jmp
xlat
mov
add
xor
or
xor
stos
je
cmc
out
dec
int
cmp
shll
arpl
mov
rclb
inc
arpl
into
jbe
lea
int
int
dec
pop
movsb
jae
jns
mov
ljmp
jp
ret
adc
pushf
fwait
loop
pusha
loop
add
out
cmp
push
outsl
sarl
jo
out
cltd
pop
add
mov
dec
mov
js
aad
xor
dec
sub
mov
jg
dec
hlt
jl
icebp
jmp
dec
push
cmp
inc
nop
sbb
ficomps
sahf
xor
in
mov
popa
jmp
mov
shlb
aas
data16
stos
or
mov
push
pop
ffree
ret
shrb
cmpsb
xchg
add
sub
fldl
pop
pop
lret
lahf
scas
cmp
arpl
ficompl
push
and
ret
mov
cmp
jecxz
push
cwtl
add
imul
pop
pop
ret
pop
out
es
test
es
add
incl
into
mov
ret
pop
xchg
cwtl
push
or
into
inc
aad
enter
dec
idivb
and
fistl
mov
adc
xchg
xor
cltd
mov
mov
fldcw
cli
call
dec
insl
push
leave
aam
xor
dec
loope
push
mov
add
pop
inc
int3
adc
shll
and
xor
mov
jg
xor
jecxz
xor
sub
shlb
push
dec
out
dec
imul
and
fmuls
sub
cwtl
repz
rorl
mov
in
cmp
divb
adc
push
cmp
es
push
loopne
insl
adc
icebp
xor
mov
cmp
mov
and
pmuludq
dec
xchg
pushf
cmpsb
movsb
repz
or
cmp
scas
dec
xor
mov
push
fwait
into
scas
aam
pop
push
ret
insb
aaa
in
xchg
shl
std
and
mov
jge
push
dec
xorl
fimull
adc
push
negb
imul
dec
xor
jg
pop
int3
sbb
xchg
das
inc
in
jge
xchg
jns
pop
clc
in
std
loopne
fists
and
fs
xchg
sub
dec
pop
adc
sub
pop
pushf
push
hlt
nop
pusha
sub
shrl
xor
in
stc
out
xchg
xchg
xor
cli
out
pop
dec
js
xor
in
mov
loopne
push
and
dec
push
jne
ja
nop
push
pop
bound
fsubl
fwait
shll
std
push
sar
das
lock
mov
xor
lret
push
sub
aad
push
out
mov
inc
cmpsb
jae
arpl
mov
mov
es
jecxz
adc
add
xor
and
push
mov
cmpsb
jae
arpl
mov
mov
es
jecxz
adc
add
push
mov
push
jae
arpl
mov
mov
es
adc
add
xor
and
push
mov
cmpsb
jae
arpl
sbb
xor
sbb
enter
call
shr
push
and
mov
or
sbb
cmp
enter
call
imul
dec
cmpsl
pop
mov
enter
sub
cmp
enter
call
jb
arpl
stos
jnp
add
js
or
mov
addr16
jl
mov
inc
mov
jno
mul
mov
jo
xor
mov
mov
pop
dec
ja
cwtl
mov
inc
movsb
mov
fldl
fildl
movsl
jg
mov
cwtl
mov
push
out
cmp
push
and
push
dec
stos
or
push
dec
gs
dec
lret
cmp
xor
dec
scas
imul
lds
inc
xchg
je
push
not
pop
jle
xor
lret
aaa
scas
cmp
or
pop
outsl
shrl
std
xor
jae
and
out
js
cmp
aam
dec
sub
jae
dec
loope
fisubs
ret
test
xchg
je
fs
ret
xchg
sbb
mov
sub
adc
sbb
dec
mov
mov
or
sbb
sub
cmp
mov
lods
dec
subl
sbb
daa
mov
mov
or
jle
lods
inc
mov
je
imul
sarb
ljmp
out
js
or
dec
scas
lods
sub
cmp
pop
cwtl
jnp
dec
mov
mov
or
sbb
sub
cmp
enter
call
imul
dec
stos
pop
mov
or
sbb
sub
cmp
enter
jne
xlat
sbb
lcall
xor
imul
cmp
xchg
ja
aaa
add
ss
push
sbb
lret
pusha
xchg
sbb
subl
xchg
pop
add
aad
in
test
adc
cmpsl
inc
scas
xor
mov
pop
push
xlat
adc
popa
mov
leave
stos
sbb
mov
insb
divb
popf
in
lods
stc
cmp
and
inc
adc
mov
es
aaa
dec
xlat
fmuls
mov
inc
std
pop
adc
into
xor
movsb
roll
and
ja
ja
cwtl
cmc
mov
addr16
fldcw
xchg
dec
movsl
push
cmc
xor
jge
subb
mov
sahf
pop
mov
mov
lods
sbb
add
icebp
test
cmp
std
imull
cmp
push
push
add
mov
pop
push
mov
jle
lret
movsb
and
imul
lahf
ds
adc
adc
sbb
mov
mov
or
cmc
or
mov
sub
jno
mov
and
aad
mov
inc
mov
fcomps
xor
mov
mov
pop
movsl
daa
ds
mov
adc
adc
movsl
shl
mov
cli
fiaddl
jge
mov
inc
in
daa
xor
cmp
add
mov
mov
xor
mov
test
test
mov
sub
add
sti
addr16
mov
sti
sti
push
add
push
xlat
push
cmc
data16
push
pop
out
jmp
cmp
mov
stos
push
mov
pusha
dec
loope
notb
ja
jecxz
loopne
test
or
sbb
mov
jg
insb
insl
pop
pushf
pop
and
mov
mov
std
adc
adc
pop
js
mov
push
jecxz
out
fnstcw
jge
push
push
into
inc
jecxz
arpl
lods
sahf
jbe
lods
mov
incl
mov
push
insb
les
testb
push
das
xchg
or
insl
mov
stos
mov
push
loop
stos
pop
sahf
jo
in
adc
fisubl
lods
xchg
stos
pop
ret
inc
jns
mov
data16
stos
push
je
xor
jl
fst
data16
dec
mov
into
sub
add
scas
inc
lock
add
cmp
cmpsl
icebp
mov
aad
in
js
jno
clc
pop
xlat
ficomps
push
adc
or
mov
pop
xchg
into
jecxz
xor
dec
lods
mov
movsb
mov
cli
repz
fs
sub
js
cmp
cmpsb
loopne
sbb
out
lods
xchg
pop
xor
test
inc
push
cmp
mov
jns
jmp
or
test
push
push
pop
push
add
dec
rcl
cmc
in
hlt
jno
cmp
rcr
push
lret
fldl
mov
ret
jle
mov
dec
sub
pop
adc
xchg
test
and
add
pushf
out
cmp
shlb
jp
idivl
cmpsb
adc
popa
fs
mov
fistps
cmc
jnp
push
ss
in
test
jne
mov
cltd
jle
adc
pop
jne
cmp
call
dec
pusha
lret
popf
repnz
outsb
jp
add
mov
bound
mov
cmpsl
loopne
lcall
out
imul
jno
popf
fwait
std
cmp
mov
fwait
mov
jg
sub
sub
rclb
lea
outsl
lock
and
iret
mov
xchg
scas
sub
dec
movsb
sahf
lcall
sbb
push
in
jge
mov
decb
dec
add
or
or
add
cmp
add
or
or
push
sub
int3
clc
cld
dec
mov
out
sub
pop
es
xlat
xchg
cmpb
xor
test
pop
call
push
jle
insl
xchg
call
rorb
push
cld
push
sub
aaa
daa
xor
stc
mov
adc
leave
xor
mov
cli
loopne
inc
push
jbe
jg
push
cwtl
mov
in
stos
add
ljmp
xchg
in
adc
sahf
inc
movsl
cmp
mov
ja
in
test
push
pmaxub
cmp
ret
mov
push
pop
addr16
pushf
cld
rorb
pop
add
loope
dec
pusha
sub
fnstenv
rorb
xchg
jnp
decb
fistl
jno
jo
push
mov
inc
sub
scas
xor
ret
push
inc
idivl
push
daa
mov
push
mov
repnz
xchg
push
mov
jne
pop
mov
sbb
mov
sbb
ficoms
iret
mov
push
movsb
jns
push
ljmp
sbb
ret
hlt
jecxz
ret
add
adcl
aam
and
push
push
fwait
adc
std
cmp
or
inc
cmp
dec
inc
sub
cmp
pop
or
pop
xchg
insl
push
out
pop
out
lods
in
incl
xchg
dec
faddp
nop
ljmp
addr16
mov
scas
add
push
cmp
mov
cmpb
data16
aam
mov
shlb
fsubr
add
dec
mul
daa
aaa
loop
incb
lcall
inc
movsb
push
enter
push
std
fstpt
or
inc
fisubrs
not
fcmovbe
scas
in
and
call
lds
cmp
pushf
not
push
clc
pop
xchg
jne
cmp
dec
imul
push
aad
or
rcll
push
fsubl
mov
and
in
sarl
inc
in
add
cmp
mov
bnd
sti
ljmp
popa
in
or
ljmp
xlat
cs
mov
jle
mov
and
ret
in
and
mov
mov
sub
sbb
xor
mov
popa
pop
dec
jle
dec
movl
mov
stos
stos
mov
lds
rcr
xchg
sub
popa
sbb
nop
std
jmp
into
mov
test
scas
push
repz
outsb
dec
dec
cltd
das
inc
or
mov
mov
xor
jmp
psraw
inc
outsb
mov
mov
aam
mov
call
mov
mov
jne
pop
push
sbb
cmpsl
mov
or
popf
fs
inc
push
pop
push
mov
iret
ds
mov
cs
xor
repz
and
ss
sbb
add
inc
mov
inc
mov
mov
lret
repnz
ret
mov
je
mov
mov
ja
adc
pop
cmc
sub
sbb
adc
dec
aaa
xor
ss
inc
or
xlat
lods
mov
mov
sbb
sbb
adcb
push
xchg
nop
orb
call
popf
into
mov
adcb
dec
inc
dec
or
and
jb
dec
xor
pushl
sbb
in
ret
repnz
orl
das
stc
cmpsl
std
mov
ret
in
cmp
in
cmp
adc
jo
or
push
dec
mov
int3
sbb
adc
repnz
neg
fisubrl
nop
das
mov
rcrl
xchg
pop
sub
pushf
pop
fimull
inc
add
push
cltd
imul
push
or
xchg
mov
jp
or
xor
xor
out
or
push
xchg
int
insb
test
loope
lahf
test
je
inc
mov
js
leave
pop
in
int3
push
cmc
sbb
mov
ja
cmp
adc
cmp
adc
cwtl
aas
cmp
jo
into
lods
lcall
ja
pop
add
or
test
cld
es
xchg
dec
mov
lret
sub
cmp
mov
inc
movsl
inc
ljmp
or
sbb
notb
std
shl
int3
and
test
and
aas
fdivs
fldcw
ficompl
push
stos
cwtl
cmp
ja
push
fidivs
into
loope
jo
lahf
out
nop
in
dec
jge
andl
xchg
dec
lret
jecxz
inc
ja
sti
stos
inc
aad
subl
stos
add
scas
lcall
adc
xor
js
arpl
pop
inc
mov
fists
aas
shll
fbld
mov
push
into
dec
ss
xor
aas
roll
scas
in
movb
or
xor
and
aaa
daa
fwait
cmpsb
and
or
fildl
test
mov
inc
sub
je
dec
xchg
test
sti
and
push
gs
sub
mov
mov
mov
lcall
mov
or
dec
jnp
push
and
int
jmp
jle
stos
mov
sub
mov
jae
cmpsb
jno
xchg
cwtl
xor
ljmp
jbe
cmp
mov
xor
cmpsb
cmp
popf
daa
stos
mov
rcl
xor
nop
and
and
jmp
sub
mov
mov
sub
cmp
lret
loop
rol
add
or
add
cmp
and
mulb
cmp
aas
repz
call
mov
jns
xor
lret
jnp
test
idivl
lock
dec
add
in
jno
sbb
cmovne
popf
pop
sbb
xor
fcompl
sub
mov
mov
push
icebp
jb
aad
xchg
out
pop
popf
add
sbb
jge
xchg
jae
stos
jp
inc
cmpb
or
sbb
clc
mov
daa
mov
inc
pop
mov
pop
pop
jnp
fbstp
push
addr16
scas
aam
aaa
incb
fdivs
jle
dec
mov
insl
xchg
aam
in
movsb
or
jnp
xlat
or
gs
sub
cmp
lea
test
mov
movsb
pushf
pop
dec
jno
xor
leave
dec
out
cld
das
push
ret
fidivl
add
mov
adc
jmp
sarb
pusha
sbb
roll
pop
jl
mov
ds
popf
push
cld
mov
xchg
fcom
and
inc
or
in
add
decl
stc
jbe
xchg
fistl
push
lds
jo
dec
xchg
mov
fucomp
rcrb
into
pop
jae
mov
push
jp
fldenv
push
stos
repz
inc
dec
mov
or
fnsave
sub
jp
es
inc
out
loop
xor
adc
mov
jecxz
add
jnp
repz
nop
rorl
mov
roll
lahf
or
mov
sub
shrl
inc
icebp
jnp
fistps
adc
ja
rcrb
pop
ja
mov
mov
and
mov
push
push
pop
mov
sub
es
je
push
fcoms
xchg
cmp
inc
sbb
jl
mov
add
mov
nop
and
repz
jae
loopne
mov
mov
or
dec
stc
jmp
pop
sahf
lds
iret
lret
pop
ret
inc
mov
xor
jmp
dec
or
lods
or
fisttpl
cmp
fistps
insl
sub
jb
test
cwtl
fs
sbb
mov
aas
lret
add
out
inc
outsb
aaa
lods
and
dec
dec
inc
popf
mov
mov
jp
mov
rcr
pusha
mov
ds
inc
mov
stc
idivb
stos
pop
mov
and
add
lret
mov
mov
imul
out
sbb
mov
rcll
pop
pop
jns,pt
xchg
test
int
add
movsb
not
push
and
push
sar
push
stos
pop
xchg
shrb
and
mov
aaa
outsl
sub
call
cmp
sar
and
fbstp
insl
shrl
cltd
pop
pop
pop
into
sarb
sbb
inc
popa
cmp
loope
xor
push
ja
ss
jns
psubw
and
lahf
push
push
sbb
iret
data16
xchg
push
add
hlt
sti
sub
outsb
lcall
aad
cmpsl
cmp
add
mov
mov
xchg
rcrb
scas
xchg
movsl
sub
mov
leave
and
popa
push
add
int3
sbb
dec
jnp
or
push
jns
scas
sbb
add
fcom
in
cmp
sarl
xor
inc
in
clc
xchg
rolb
cmp
inc
pop
pop
jo
mov
pop
cld
pop
push
loope
xchg
pushf
mov
cmpl
loop
mov
xor
dec
dec
icebp
std
pop
cld
pop
fmulp
jmp
hlt
xor
mov
scas
xlat
gs
pop
test
jle
cmc
pop
es
mov
adc
push
mov
pusha
aad
mov
sbb
mov
pop
mov
mov
sub
or
xor
das
sbb
stc
daa
jbe
movsl
fcomps
pop
subl
jmp
imul
xor
mov
dec
nop
lods
mov
pop
aaa
add
lcallw
dec
dec
mov
loopne
ret
scas
arpl
add
adc
pop
enter
out
dec
inc
and
mov
jmp
push
test
mov
pop
ret
sub
xchg
fwait
jno
adc
push
push
and
in
fldenv
pop
adc
jnp
lcallw
into
aaa
dec
inc
les
aad
test
pusha
push
adc
loopne,pn
sbb
cmp
daa
js
das
xor
test
cmp
and
xor
xchg
sbb
mov
call
stos
pop
adc
imul
xor
mov
xlat
in
stc
or
rorl
dec
loopne
pop
lods
dec
lea
dec
pop
fisubl
sbb
pop
jp
inc
jae
jle
or
push
mov
push
xor
pop
enter
mov
cmp
movsb
jmp
out
and
xor
imul
es
inc
sbb
shlb
cli
outsl
gs
pop
cmpsl
add
sub
fildll
lods
push
push
or
jbe
push
stos
cmp
into
aas
dec
push
shll
mov
cltd
les
cs
adc
push
mov
pop
mov
add
mov
xchg
lret
inc
push
subb
inc
enter
xor
fists
pop
shlb
fldt
mov
cli
jl
das
roll
inc
int
jo
ja
lds
inc
and
std
out
fsubr
aad
ds
adc
sbb
pop
cmp
outsl
movsb
push
aam
pop
in
flds
mov
lret
xchg
pop
inc
jmp
rolb
fidivrl
dec
cs
in
push
cmpsb
sbb
in
sub
cwtl
pop
sbb
jnp
sub
test
cmp
push
adc
xor
insl
aad
insl
and
loopne
dec
inc
in
pop
fstpl
mov
pop
testl
fimull
addr16
add
mov
mov
pop
stc
jnp
repnz
sahf
add
je
pop
popf
pop
mov
iret
mov
inc
sbb
fildl
popf
cmp
sbb
icebp
pushf
in
dec
cmp
cmpl
loop
mov
fnstcw
xlat
daa
pop
add
lahf
out
imul
cmp
sti
ret
movsb
pop
sbbl
outsb
add
jne
movsl
lds
xor
and
sub
daa
insl
enter
dec
fwait
add
js
push
mov
pop
inc
sbb
sbb
push
insb
add
push
out
or
sti
scas
insl
cli
mov
ret
xor
fwait
les
fucomp
xor
adc
sub
sarb
imul
jbe
popa
scas
cltd
dec
inc
je
fdivrl
shrb
shrl
test
imul
arpl
lods
sub
aad
out
int
lcall
lahf
or
push
loop
mov
push
inc
mov
push
xor
mov
mov
adc
push
enter
jl
ret
jnp
stos
xor
xchg
ja
mov
cltd
inc
xchg
insl
cli
xor
stos
push
sbb
pop
push
mov
cmpsb
fildll
sbb
push
int3
xor
pop
enter
nop
mov
les
dec
shrl
loope
daa
inc
pop
jmp
in
mov
inc
aaa
lea
or
sti
and
or
addr16
cmpsb
push
outsb
outsl
inc
or
and
inc
adc
jmp
sarb
int
pop
pop
jno
out
pandn
mov
add
fidivs
iret
loope
in
rcl
push
or
addr16
repz
fstps
inc
shrl
and
stc
imul
add
movsl
lods
dec
inc
sbb
push
bound
sbb
adc
int3
dec
dec
popf
movsb
inc
push
ror
mov
idivb
push
add
xorb
lret
xlat
ret
push
in
mov
mov
or
ds
scas
sub
add
icebp
jg
insb
les
cltd
mov
inc
test
and
or
mov
mov
inc
mov
inc
push
push
mov
cmp
ds
inc
int
stos
cli
inc
xor
js
or
or
dec
or
sbb
inc
pop
insl
jge
add
cltd
dec
loopne
inc
sub
test
ds
call
test
sbb
lods
lds
cmp
or
inc
add
cld
xchg
mov
lods
mov
test
scas
rorb
sbb
in
movsl
jae
sub
inc
cmp
push
mov
or
out
adc
leave
ficoml
xorl
stos
out
mov
or
xchg
les
shll
fbld
popa
adc
xchg
pusha
lret
ret
lea
jge
cmp
dec
fldl
and
jnp
sub
hlt
lods
std
push
addr16
pop
fwait
mov
or
mov
fdivl
and
dec
push
movsb
push
insb
push
mov
out
inc
sahf
out
bound
ret
jmp
orb
hlt
mov
jbe
or
aad
pop
push
push
mov
xchg
mov
sahf
fs
pushf
xchg
in
pop
xchg
add
dec
pop
push
jne
sbb
test
lods
adc
xor
or
clc
fldenv
or
mov
subl
jl
xchg
outsb
inc
sbb
adc
cli
sub
pop
sub
xor
and
mov
sbb
repz
cld
out
jle
or
dec
outsl
aad
sbb
and
mov
stc
cmc
cmp
push
cmpsb
push
push
fsubr
pop
jns
int3
insb
xlat
jge
jp
leave
out
pop
sbb
and
ret
dec
push
popf
icebp
and
pusha
push
mov
in
add
mulps
pop
mov
clc
int
push
xchg
icebp
jb
push
in
outsb
xchg
mov
loop
pop
outsb
pop
mov
test
xchg
sbb
imul
push
jae
cmp
sub
fiadds
mov
cltd
mov
push
cmp
jge
xchg
xchg
aad
fldt
je
popa
into
imul
xchg
jl
mulb
mov
mov
icebp
push
pop
xor
sub
out
test
dec
pop
std
mov
mov
mov
sub
jmp
dec
orl
popa
fmuls
leave
sahf
in
or
mov
out
call
sbb
subl
adc
rcl
sbb
les
loop
call
mov
cmp
jge
repnz
fdivr
push
out
push
inc
add
sbb
mov
rcrb
add
add
adc
icebp
inc
mov
je
inc
sbb
test
sub
mov
clc
push
xor
xlat
mov
mov
push
xor
and
fs
dec
pop
mov
cmc
frstor
cli
add
in
cmpsb
movsb
pop
filds
adc
imul
mov
lods
shr
pop
popf
xor
push
outsb
js
stc
xor
lods
mov
mov
les
sbb
sahf
stos
xchg
xchg
popf
sbb
add
cmpsb
jnp
movb
mov
push
lock
test
mov
setne
xchg
lret
aad
dec
popa
test
xlat
jae
or
clc
fnstsw
mov
jno
sbb
cmp
pop
jle
cli
lret
fldl
or
adc
mov
enter
int
xchg
adc
repz
iret
xchg
push
popf
clc
jecxz
sub
outsl
pop
mov
or
ret
dec
jns
imul
arpl
xchg
scas
pop
sahf
mov
ficomps
pop
dec
pop
push
jb
sarl
jns
jb
mov
and
sub
jo
iret
lret
jo
pop
jo
lahf
adc
or
rol
fdivrs
inc
pushaw
int3
daa
sub
dec
push
sub
cld
adc
push
xlat
mov
xchg
xor
mov
inc
xchg
push
stos
and
clc
fidivs
mov
mov
adc
inc
jne
pusha
add
mov
dec
adc
jmp
scas
icebp
sbb
jl
nop
push
or
and
stc
mov
mov
inc
enter
mov
movhps
ljmp
jmp
imul
dec
stos
pop
mov
or
sbb
sub
cmp
enter
call
imul
dec
stos
pop
mov
or
sbb
sub
cmp
enter
push
imul
dec
stos
pop
mov
or
sbb
sub
cmp
enter
call
imul
dec
stos
pop
adc
mov
js
push
movsb
sti
or
sbb
sub
cmp
dec
xchg
imul
sbb
or
sti
or
sbb
sub
cmp
push
imul
movsb
sub
sbb
or
sti
or
sbb
sub
cmp
push
dec
mov
cmp
mov
inc
mov
pop
jo
add
mov
inc
in
push
popa
dec
shlb
dec
cmpsl
pop
pop
adc
and
ss
addr16
arpl
cld
out
movsl
mov
sub
dec
call
adcl
push
fwait
aam
vmovq
cmp
mov
inc
sti
dec
int3
cmp
add
outsl
shr
push
pop
ret
xchg
sub
pop
imul
es
cmp
jl
dec
pop
js
mov
rorb
jp
arpl
push
sarb
or
lea
xchg
loope
xor
nop
dec
and
cmp
cs
stos
push
and
fsubr
or
cmp
jmp
fldt
lret
cmp
push
imul
enter
call
mov
sub
xor
cvttps2pi
icebp
push
cltd
sub
push
int3
mov
xchg
jnp
lea
jge
dec
mov
fisubs
adc
add
sbb
ret
or
es
dec
cmpsb
dec
fnstenv
popa
xchg
pushf
dec
jmp
popf
pop
scas
pop
stos
pop
fwait
push
imul
enter
call
jmp
fldt
lret
cmp
push
imul
enter
call
mov
lds
lret
out
cmp
popa
mov
fstl
push
sbb
push
mov
je
mov
push
adc
xor
int3
sub
hlt
gs
or
add
xchg
push
mov
pop
mov
repnz
jmp
mov
and
cmpsb
mov
xchg
sbb
fstpt
hlt
add
mov
push
aam
xor
inc
sub
inc
pusha
loopne
xor
lahf
or
add
cld
and
mov
ja
in
lods
lds
dec
xchg
sub
sahf
loope
jmp
jo
pop
push
test
mov
loopne
orb
out
shll
arpl
push
ljmp
jne
fisubrl
and
add
cmpsl
test
mov
dec
insl
data16
test
xchg
pop
push
xlat
cld
xor
fcmovnbe
push
pop
aam
fidivs
movsb
enter
pop
jae
std
iret
loope
lods
pop
mov
push
adc
sub
sub
rcrl
push
jo
adc
mov
aas
inc
mov
mov
loope
xchg
call
mov
lret
inc
adc
test
fstpl
push
sbbb
out
into
leave
jno
movsl
pop
je
in
xchg
lods
in
xchg
sbb
ds
add
jmp
jbe
jge
test
inc
adc
push
push
dec
and
xlat
xor
gs
adc
stc
lahf
shl
test
fsts
fidivrs
mov
mov
out
inc
out
mov
xchg
popf
popa
cmp
cmp
mov
add
outsb
push
mov
popa
sbb
insb
in
das
nop
fs
mov
lock
inc
test
in
inc
or
pop
add
cmpsb
mov
pop
xor
sahf
xchg
pop
adc
xchg
clc
inc
cpuid
adc
and
sbb
mov
xchg
adc
push
lret
jmp
pop
sub
ljmp
imul
xor
sbb
pop
pop
dec
mov
xor
xor
iret
mov
fwait
inc
or
or
cmp
out
mov
jo
test
push
mov
scas
hlt
cmpb
push
sbb
pop
rcrb
stc
out
lea
shl
xlat
lea
out
rcl
mov
daa
ds
pushf
sahf
ss
cmp
jnp
sbb
or
jg
das
dec
rol
mov
xor
and
pop
out
addl
ljmp
test
push
or
in
arpl
add
jnp
gs
pop
std
cmp
aaa
push
sbb
mov
stos
push
jge
int3
mov
push
mov
repz
mov
in
sbb
scas
push
mov
lock
aad
dec
fdiv
dec
popf
inc
pop
psllw
xlat
lods
lcall
insb
and
lcall
nop
adc
cli
dec
cmp
lcall
mov
imul
call
int
pusha
inc
push
dec
shl
imul
or
ljmp
pop
ds
sub
outsl
repnz
jl
push
and
ficompl
rcrb
mov
or
std
movsb
ljmp
adc
pop
fcoms
pop
sbb
repnz
or
cmp
or
or
xor
adc
and
mov
mov
pop
lret
mov
shl
xchg
adc
ljmp
dec
pop
subb
add
jns
call
xchg
clc
test
cmp
mov
mov
out
fildll
inc
xor
push
lods
xchg
inc
or
dec
jb
xchg
jns,pt
xor
xorb
je
enter
ret
dec
lods
and
loopne
fsts
or
mov
dec
jl
dec
jne
jecxz
and
test
rorb
fldl
or
icebp
sbb
out
stos
cs
out
mov
cmpsb
test
test
and
inc
fwait
dec
add
rcrl
inc
dec
fnstsw
lret
jo
ret
in
jns
dec
inc
repnz
sub
mov
ljmp
dec
cmp
movsb
pop
jmp
mull
fists
xchg
ja
sbb
sbb
outsb
and
xchg
xor
mov
sbb
repnz
ret
push
sbb
jae
loopne
mov
lock
outsb
imul
lock
loopne
add
loop
into
cmp
jbe
test
push
cmp
js
xor
fldl
ljmp
jns
sarl
or
cmpsl
fstl
fcom
in
xor
pop
lcall
outsl
je
cli
loop
mov
jbe
mov
bswap
mov
adc
lret
push
dec
loopne
ss
out
or
imul
dec
mov
rcll
fsubrl
adcl
jle
xor
enter
sarb
mov
lahf
mov
jle
push
lds
aad
in
cld
sbb
int
or
std
popa
push
add
fiaddl
sbb
xor
out
cmp
test
dec
dec
mov
outsl
divb
jmp
das
scas
adc
cmp
inc
out
test
mov
pop
or
fimull
das
outsb
loope
cs
mov
adc
aas
inc
mov
bnd
jg
jp
imul
mul
mov
jbe
mov
pop
fisubs
dec
cld
mov
lcall
out
bound
ret
aam
adc
or
jb
wbinvd
lods
scas
jle
jecxz
imulb
cltd
call
clc
aam
iret
std
mov
ds
psadbw
sub
adc
xchg
out
out
jae
imul
dec
pusha
inc
test
psubq
clc
cmp
xchg
out
in
sarb
sarb
dec
inc
adc
cmc
lea
add
pusha
out
mov
push
sbb
inc
imul
sbb
sub
inc
jg
mov
cmp
sbb
loope
fsubs
test
inc
jg
pop
mov
mov
popa
mov
adc
sti
jo
ret
jno
fcoms
and
ja
sub
loopne
xlat
shll
lret
jnp
sub
divb
mov
adc
push
shl
jne
test
popf
or
and
and
lcall
outsw
sub
mov
lahf
shrl
mov
pop
sbb
adc
in
aad
and
aaa
sbb
push
pushf
out
dec
repz
jge
mov
nop
or
adc
imul
add
int3
popa
cmpsb
scas
je
mov
ret
pop
adcl
pop
cmp
mov
cltd
les
ds
pop
add
jl
repnz
sub
sbb
jbe
sbb
loop
arpl
subb
shll
mov
lds
cld
lock
negl
jne
dec
lcall
xor
mov
dec
dec
inc
inc
jb
mov
cmp
shl
cld
sarl
pop
xorb
dec
pop
pop
cli
addr16
test
lret
les
add
orb
inc
xchg
dec
test
adc
dec
enter
xlat
jmp
test
jle
jecxz
rcll
push
popf
add
push
test
lret
jnp
adc
jecxz
push
loopne
mov
adc
jb
jb
repnz
cmpsl
repz
fisttpl
out
sbb
sti
push
cmp
std
outsl
test
inc
fidivrs
push
mov
xor
scas
cmp
testl
push
push
sub
ret
mov
push
loop
sbb
xchg
jecxz
adc
mov
insb
and
nop
fstl
dec
aad
inc
outsl
aam
sbb
rcrl
dec
adc
imul
push
mov
outsl
push
inc
jecxz
outsl
out
sbb
pop
sbb
inc
mov
adc
mov
pop
out
pop
rcrl
jns
jns
mov
cmc
fdivs
addb
adc
lock
enter
leave
sti
sub
in
mov
lods
shrb
inc
sbbb
stc
mov
rol
or
sub
sub
idivb
js
jne
pushf
aas
mov
xchg
xlat
es
dec
dec
aad
fisttpl
lods
call
sub
repnz
inc
fstpl
scas
mov
iret
scas
adc
push
push
jnp
push
js
push
into
stos
test
cs
sarb
xor
add
xchg
imul
sub
leave
mov
gs
stos
test
and
sub
xchg
add
jge
or
pusha
adc
lret
or
aam
fisubl
push
in
mov
xor
sbb
cmp
sbb
popf
xor
cmp
int3
nop
mov
inc
or
push
arpl
dec
data16
fistps
adc
pop
ret
les
in
add
hlt
pop
add
movsb
inc
es
cmp
stos
sbb
jb
call
lds
sbb
lret
sti
ljmp
ja
data16
push
ret
cmp
hlt
outsl
add
sub
es
jnp
xor
clc
in
rorb
mov
or
pushf
hlt
or
fildl
and
lcall
cmc
add
lcall
mov
and
sbb
scas
hlt
imul
mull
lret
mov
mov
stos
ret
aaa
fmuls
dec
cld
lock
jae
ss
jle
and
shlb
movsb
jl
jne
lods
in
jge
lock
addr16
fcoms
and
mov
add
adc
jmp
std
add
pop
decb
stc
cwtl
js
mov
mov
rcrb
and
xchg
orl
adc
ja
xchg
lahf
sbb
int
xchg
add
adc
ficoml
mov
cwtl
cmpsl
std
cld
icebp
xchg
push
push
std
and
lock
insb
ja
push
test
fdivr
pop
pop
cmp
ret
mov
outsl
dec
fwait
popf
fistpll
push
inc
jl,pn
mov
xlat
dec
dec
ret
cmp
push
sbb
jnp
dec
cmpl
scas
xchg
pop
cmc
or
pop
cltd
push
nop
sahf
fwait
ret
jno
jno
jns
pushf
mov
mov
inc
stos
test
stc
gs
mov
mov
pop
rorb
sbb
fbld
stc
xor
mov
loop
add
fstp
outsl
out
cmp
insb
fdivrs
cld
sbbl
dec
add
subb
stos
add
lods
pop
imul
fdivrs
adc
and
jmp
test
adc
loop
mov
sub
dec
or
mov
push
inc
movsb
movsb
ljmp
xchg
jmp
or
arpl
or
popf
jno
sub
xchg
mov
pop
jp
xor
insb
cltd
popa
adc
int
cltd
out
jae
cmp
and
push
pop
jb
cmpsl
mov
mov
and
test
pusha
sbb
out
movsl
jo
adc
push
test
hlt
adc
mov
sub
idiv
cmc
jecxz
pop
cmpsb
mov
mov
push
loop
shrb
int3
mov
sbb
add
test
data16
sbb
pop
sti
pop
jmp
fcompl
ljmp
mov
aaa
rcrb
mov
cmp
cmpsb
add
and
xor
xlat
push
rorb
test
dec
mov
and
jo
hlt
push
sbb
or
xlat
or
mov
or
pop
xchg
add
cmpsl
call
mov
xorb
mov
sahf
fdivr
xchg
push
arpl
dec
scas
inc
push
icebp
cwtl
jno
ljmp
push
add
mov
pop
test
gs
and
sbb
or
push
sub
call
popa
fisubl
jmp
test
ret
popfw
aad
dec
or
jae
push
dec
push
out
adc
in
fcmovnbe
lret
xchg
cs
cmp
dec
xcrypt-ctr
cmpsl
pop
add
push
cmc
filds
sub
add
jecxz
ror
xchg
jb
aas
aad
shll
cmp
in
jmp
stos
movsl
xchg
mov
sbb
push
getsec
pop
loopne
mov
xorl
inc
incl
je
sbb
sbb
aas
dec
xor
or
cmp
fnsave
cmp
les
sub
cmp
loopne
or
sub
inc
cmpsl
popa
das
cmp
sub
jmp
or
add
rorb
int
ja
push
xchg
mov
sahf
test
xor
xchg
and
sbb
and
or
popa
dec
or
shrb
push
ret
in
add
jmp
nop
jg
fsub
inc
aam
iret
dec
adc
mov
sti
or
jl
sub
nop
or
in
sub
addr16
dec
mov
out
lcall
cmp
out
std
push
pop
outsl
cmp
xchg
fdivrs
fdiv
jo
or
jns
pushf
adc
sub
daa
and
jbe
add
jns
adc
clc
mov
daa
lock
insl
imul
dec
and
movsl
xchg
push
js
mov
pop
xor
pushf
pop
or
ds
dec
sbb
and
xor
out
out
loop
push
adcl
dec
sub
and
xchg
std
jae
inc
addl
push
out
test
mov
pop
xchg
mov
pop
xchg
jne
xchg
mov
mov
lds
mov
cmc
std
pop
mov
or
mov
pop
sbb
push
push
test
shl
add
add
pushf
dec
add
stos
adc
ljmp
and
rolb
adc
mov
cmp
push
fcmovnb
arpl
jns
rclb
xchg
imul
mov
notb
xor
es
into
sub
or
add
in
dec
jle
outsb
push
add
add
scas
fistpll
lret
pop
dec
loop
fcom
fnstsw
inc
insl
or
mov
icebp
or
sbb
lcall
mov
dec
stos
xchg
inc
xchg
jo
dec
and
mov
jl
adc
lea
lahf
in
insb
lods
daa
mov
imul
fldenv
adc
call
push
jbe
fmul
das
pop
in
jecxz
inc
mov
cmpsl
and
sub
iret
jne
push
out
pop
push
js
jmp
jge
push
xor
ja
jae
flds
sbb
ja
push
std
or
push
pop
push
mov
pop
clc
mov
arpl
nop
ss
mov
mov
dec
fs
add
pop
sti
jns
aad
daa
cs
repnz
in
push
mov
es
mov
sbb
ljmp
sbb
lret
ret
dec
lods
sbb
sbbl
mov
cwtl
sti
imul
repz
nop
fmull
pop
jae
dec
jl
scas
insb
lahf
addr16
dec
jno
xor
or
iret
mov
mov
jnp
sbb
mov
push
loop
push
sub
lea
jl
adc
das
ret
ret
mov
leave
sub
pusha
cltd
mov
mov
push
insl
addr16
mov
clc
mov
cs
lock
adc
test
hlt
cmp
mov
adc
gs
mov
xchg
push
and
sub
insb
xchg
out
add
mov
lea
mov
xchg
cld
xor
test
xorb
addl
or
test
jge
jbe
cld
cmp
cmp
cmpl
mov
ja
lea
and
dec
cmovae
ljmp
xchg
out
sbb
lahf
inc
lds
sub
pop
adc
je
ljmp
into
mov
dec
ret
arpl
js
add
inc
test
out
fdivrp
sbb
mov
adc
arpl
mov
jb
xchg
je
test
inc
xor
cmp
inc
leave
cmc
mov
pop
xor
adc
dec
sbb
lcall
jp
adc
dec
ret
adcl
shl
aas
mov
jns
movsl
mov
bound
leave
adc
scas
cs
popf
daa
rolb
sub
cld
rclb
fcompl
cmp
fwait
cwtl
lds
sbb
das
mov
pushf
mov
mov
imulb
imul
dec
mov
and
jp
and
pop
and
std
and
sbb
xchg
or
adc
pop
sub
push
pop
pop
in
push
fwait
fwait
add
movsl
test
incl
rclb
sti
add
mov
movsl
mov
mov
std
xor
adc
fsts
jmp
pop
pop
test
mov
rcll
stc
jecxz
push
sbb
jo
push
add
addl
add
jl
je
call
xchg
pusha
rorl
xchg
jno
cmp
mov
adc
arpl
inc
repnz
or
cmp
jno
out
push
jl
mov
das
addr16
mov
xor
push
mov
xor
and
das
les
insl
cmpsb
xor
cmp
xchg
jecxz
push
add
lds
lcall
push
xor
test
je
std
fwait
insb
cs
aaa
daa
mov
sbb
xchg
ja
out
cwtl
negb
icebp
cmp
scas
in
dec
xor
sbb
ret
enter
fldcw
mov
lcall
sbb
mul
fildll
xor
int
lock
cmp
xor
pop
add
addr16
adc
dec
test
jne
or
ja
sti
jge
sbb
shll
mov
shlb
mov
ljmp
mov
ja
aad
jl
xchg
mov
scas
cld
das
addr16
test
jg
cmp
cmpsl
inc
pusha
enter
ja
cmp
and
ret
inc
lea
pusha
stc
mov
sub
xor
jnp
mov
adc
push
mov
lcall
mov
cld
and
push
or
push
xor
sbb
add
or
xchg
push
jns
push
pop
mov
cmp
mov
or
hlt
movsb
pop
out
push
add
push
leave
filds
and
sbb
fildl
int
call
mov
inc
add
adc
stos
in
inc
xchg
insb
inc
mov
mov
fmuls
cmp
pop
fcmovu
movsb
pop
cmp
ret
mov
fistl
dec
addr16
ret
add
imul
cvttps2pi
pop
cmpsl
jne
sbb
add
inc
mov
sbb
incb
loopne
xchg
xchg
push
je
arpl
dec
cmp
mov
out
push
add
lods
cmp
xchg
jno
add
xorl
xchg
pop
add
out
mov
fcoms
adc
arpl
jg
xchg
pop
push
lcall
push
in
popw
pop
adc
mov
sbb
lods
sarb
iret
xor
movsl
inc
push
lods
rclb
jns
xor
fstps
mov
add
push
mov
pop
lock
xor
push
pop
loop
add
sbb
test
sub
stos
repz
test
mov
popa
xor
movsb
test
out
xchg
ja
inc
mov
adc
fistpll
mov
mov
idivb
or
push
addr16
xchg
push
cmp
xchg
stos
and
xchg
lock
mov
rorl
loopne
lock
fs
test
adc
push
mov
std
jno
mov
in
repnz
test
sbb
cmp
inc
mov
mov
ljmp
cmpsl
cld
and
and
jnp
pop
mov
test
aas
and
sbb
leave
mov
lahf
fsubs
ss
adc
sbb
inc
or
add
xchg
adc
scas
sub
xchg
jmp
outsl
mov
into
clc
mov
pop
mov
and
cld
sbb
jp
mov
adc
ss
and
jne
movsb
lcall
outsl
and
sbb
mov
mov
je
pop
fmulp
cmp
mov
pusha
out
enter
push
movsb
inc
dec
cmp
dec
xchg
dec
push
cmp
jbe
outsl
sbb
cmc
mov
mov
adc
shr
repnz
test
lret
std
fimuls
cmp
mov
lods
bound
cmpsb
add
mov
cmp
sar
dec
add
push
les
inc
sahf
add
jnp
cmp
movntps
imul
sbb
sbb
push
sbb
lret
stos
mov
mov
call
pop
xchg
mov
nop
push
push
jmp
movb
dec
jle
add
js
shll
xor
sarb
test
xorl
shlb
dec
decl
mov
int
mov
jno
sub
repnz
and
lret
mov
xchg
xor
pop
cmpsb
popf
cmpsb
cmpb
jns
jecxz
sbb
sub
cmp
push
imul
enter
call
jmp
fldt
lret
cmp
push
imul
enter
call
jmp
fldt
lret
cmp
push
imul
enter
call
jmp
fldt
lret
cmp
push
xchg
xor
test
iret
dec
inc
mov
pop
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
outsb
push
jle
dec
jbe
lcallw
adc
out
inc
into
neg
out
xchg
mov
cmpsb
outsb
push
jle
dec
jbe
cs
ds
push
ss
es
inc
into
not
out
xchg
mov
ja
addr16
push
jbe
data16
push
es
push
ss
es
fstpl
scas
shl
rcl
leave
cmpsb
pop
push
adc
dec
adc
mov
ds
iret
xor
add
mov
xchg
mov
outsl
out
pop
addl
add
ds
mov
mov
imul
xor
and
push
scas
or
xchg
inc
adcb
inc
mov
cmpsl
mov
repz
es
xchg
inc
mov
dec
sahf
cmpsl
outsl
test
jp
rcll
aas
push
icebp
fistps
jbe
in
sar
or
sbb
mov
xchg
lret
repz
rcll
es
inc
leave
out
jo
xchg
cmp
iret
or
aad
pop
mov
testb
mov
add
adc
jae
mov
mov
jmp
in
jb
mov
addr16
dec
jbe
cmp
cs
push
ss
es
out
test
mov
cmpsb
xchg
sbb
pop
jns
inc
inc
push
push
push
out
mov
mov
cld
xor
ret
add
pop
or
jbe
xor
sub
pop
dec
lods
xchg
fwait
stos
into
mov
aad
clc
ret
cli
enter
xor
add
adc
ds
push
ss
es
inc
into
neg
out
xchg
mov
cmpsb
outsb
push
jle
dec
jbe
cs
ds
push
ss
es
inc
into
neg
out
xchg
mov
cmpsb
outsb
push
push
push
icebp
test
adc
fistpl
iret
mov
mov
movb
sbb
jp
cli
xchg
pop
sbb
out
daa
mov
nop
push
mul
sbb
push
dec
or
xchg
push
les
stos
test
pop
push
aad
out
inc
adc
sti
loopne
xchg
mov
out
inc
cmpsl
inc
pop
push
imul
test
push
adc
and
ret
int3
mov
fcmovu
xchg
sbb
dec
lcall
icebp
outsl
dec
jmp
cmp
out
pop
pop
push
jge
mov
aad
sbb
xor
movsl
ljmp
mov
jle
or
or
sbb
lahf
mov
push
sahf
in
cld
test
push
divl
inc
movsl
xchg
aam
inc
sbb
jg
cmp
or
mov
jg
push
daa
lock
ret
mov
fidivrl
mov
je
fisubs
and
jae
jae
aad
sbb
je
ljmp
fstpl
mov
add
stos
sti
push
shlb
and
stc
in
mov
sub
sub
fistl
cltd
inc
out
jno
fistl
push
jmp
repz
cltd
jle
fsubrs
push
test
lock
jbe
pop
sbb
pop
hlt
or
movsb
and
mov
shlb
js
push
stos
mov
ret
sti
subb
mov
inc
push
jmp
mov
mov
pop
jnp
jb
dec
sti
push
sbb
push
push
mov
xchg
mov
inc
mov
addl
sbb
sbb
nop
imul
jb
add
mov
lea
aam
pop
out
sub
push
push
dec
mov
inc
jp
fs
mov
adc
jg
sbb
adc
pop
jmp
push
xlat
mov
dec
add
sub
mov
inc
sub
dec
push
pop
pop
stos
ret
cs
push
adc
clc
stc
xor
out
int
mov
sbb
sub
in
pop
inc
sub
xchg
cmp
pop
das
jae
xchg
push
je
cmp
scas
pop
fistpll
mov
fstpl
in
ret
add
sbb
jl
fiaddl
in
push
adc
adc
imul
cs
sbb
mov
cld
inc
arpl
mov
pop
and
inc
iret
fcoms
cmp
xchg
test
mov
fstpt
ror
push
cmp
sub
or
sarb
push
jne
outsb
push
sub
repnz
ret
lret
cli
mov
aad
pop
icebp
insb
mov
sub
in
xor
pop
jp
xchg
push
dec
int3
adc
cmp
cli
jae
repnz
cmp
fcompl
test
repnz
xchg
scas
jg
nop
ret
and
sbb
adc
lret
cmp
or
mov
movsb
pop
push
dec
pop
xor
loope
data16
sub
jl
push
inc
shlb
callw
gs
xor
sub
shrb
in
lret
fst
xlat
aaa
jae
push
shrb
cmp
pop
lea
mov
cs
test
movsb
in
mov
inc
jno
inc
outsb
pop
loop
lret
sbbb
hlt
jecxz
or
add
add
mov
inc
in
lcall
test
pop
jno
sub
test
mov
mov
shl
or
cmp
aas
add
gs
sub
hlt
push
inc
outsb
lds
in
and
out
mov
hlt
pminsw
cld
fstpl
xlat
popa
sbb
xlat
jae
daa
in
out
cli
mov
loop
outsb
cmc
sub
adc
dec
pusha
and
push
test
jae
mov
ret
lds
fbld
lret
and
jno
out
jle
ficompl
jle
xor
push
or
xchg
faddl
lods
adc
add
lret
and
adc
push
push
ret
fsts
push
mov
cmp
sub
push
mov
insl
pop
sbb
xor
pop
cmc
scas
jle
jbe
aam
imul
sbb
inc
lahf
sub
cmpsl
fldenv
scas
enter
testb
jae
cld
data16
inc
les
push
imulb
les
xchg
int
ja
or
les
mov
lret
les
inc
shll
out
mov
xchg
stos
mov
cmp
push
gs
inc
xchg
inc
imul
mov
adc
pop
movsl
jle
jae
fs
in
mov
outsl
pop
cmp
xchg
and
out
inc
inc
rcrl
in
fldt
aad
outsb
and
or
test
push
movsl
outsl
icebp
cld
test
jge
loop
xchg
popf
int3
sub
or
xor
sbb
outsb
aaa
mov
les
sub
mov
cmp
rorb
pop
cmovbe
or
lret
sti
add
mov
mov
pop
movsl
popa
test
mov
xchg
pop
mov
leave
or
cmp
lret
and
fnstenv
loopne
data16
jno
repz
mov
lahf
xchg
add
shrl
fildl
js
test
adc
daa
and
mov
dec
outsl
aam
mov
mov
push
sbb
aaa
push
cmp
xor
imul
jb
stc
fidivrl
fisubl
push
fbld
sub
shl
mov
scas
sbb
outsb
rorb
dec
mov
stc
jecxz
rclb
arpl
rclb
inc
sbb
in
sahf
stos
xor
pop
adc
push
ja
stos
mov
ret
xchg
fs
adc
xchg
addr16
jp
leave
frstor
adc
bound
mov
adcb
xchg
xorb
dec
pop
clc
in
fcmove
cmp
push
cmpsb
cltd
movsl
or
and
add
call
xor
push
jg
or
pop
addr16
add
xor
sahf
xchg
mov
movsl
xchg
sub
aas
cld
inc
and
lret
loop
fcmovne
jb
loop
mov
cli
divb
push
xchg
iretw
push
psrlw
lcall
stos
aam
das
pop
daa
sbb
scas
test
insl
sbb
outsl
inc
inc
pop
pop
insl
xor
and
fisubs
out
cli
enter
and
sub
mov
pop
movsl
fnsave
sub
jbe
pop
and
scas
fs
into
add
mov
add
mov
fstps
ds
sbb
ret
and
xor
mov
sbb
push
cmp
pop
dec
stos
cli
hlt
adc
mov
std
jns
ss
mov
and
and
xlat
adc
mov
pop
out
das
leave
test
pop
xor
pop
mov
enter
test
lds
and
adc
test
xacquire
addb
push
cltd
cltd
adc
test
inc
in
mov
mov
scas
divl
mov
es
out
into
sbb
dec
jae
adc
enter
lret
sbb
mov
negb
ret
imul
stos
pop
lea
f2xm1
stc
pushf
mov
cltd
or
xor
call
int3
mov
sub
arpl
ss
out
test
bound
push
insl
pop
and
orb
mov
mov
sub
adc
das
and
int
push
jg
jge
adc
sub
imulb
aas
fists
imul
testb
ds
push
pop
push
xor
in
xlat
sub
adc
fcompl
inc
iret
pusha
addl
pop
cwtl
out
and
adc
mov
lcall
mov
scas
jl
dec
push
cmpsb
cmpsb
jo
stc
aad
jg
test
adc
inc
fldcw
es
bound
clc
test
dec
into
dec
cltd
lcall
adc
mov
das
mov
jle
adc
dec
sub
in
dec
mov
aam
lret
loop
fidivrs
lea
mov
in
jp
cli
int3
sbb
lret
sub
mov
jge
mov
imul
jecxz
adc
cmc
inc
push
mov
xlat
add
jns
xlat
out
fistps
out
adc
cs
push
pusha
xor
shlb
fcompl
push
mov
sbb
outsb
mov
enter
sub
ja
push
in
in
xor
xchg
fcomi
xchg
mov
fdivrl
rcll
xorl
sahf
incb
xchg
imul
jp
scas
xchg
orl
jge
repnz
fcmovnbe
test
inc
or
push
aas
fldcw
xchg
shrb
psubusw
cmp
push
addr16
inc
sbb
out
int
leave
adc
mov
push
or
test
subb
cmp
iret
frstor
in
pop
adcl
mov
jecxz
mov
mov
gs
in
mov
jnp
sbb
out
int3
shlb
clc
imul
and
incl
xor
pusha
stos
sbb
shll
jb
push
cs
and
jecxz
mov
imul
lods
xchg
leave
cli
enter
pushf
aas
inc
jle
add
cmc
pop
inc
dec
mul
cmp
jae
mov
sbb
js
push
leavew
inc
pop
clc
dec
mov
imul
and
or
out
adc
jae
cld
fisubl
xchg
mov
push
add
pop
ja
or
pop
jae
xchg
pushf
loopne
loope
aas
or
adc
fidivs
aaa
xor
into
xor
ret
push
pop
xchg
xchg
jge
dec
or
sbb
lods
lret
push
js
mov
or
push
adc
imul
nop
test
mov
push
cmp
xor
lods
aaa
test
arpl
xor
mov
mov
bound
imul
lods
repz
lea
sbb
popa
cmove
or
xlat
mov
dec
ljmp
imul
icebp
and
mov
push
sub
enter
fisubrl
sub
adc
pusha
sbb
sbb
and
push
stos
in
mov
or
imul
cltd
fsub
adc
push
inc
xchg
faddl
hlt
sbb
cmp
pushf
js
pop
adc
xchg
pop
mov
aaa
push
lcall
mov
iret
test
push
jge
sub
add
dec
in
sarb
mov
cltd
mov
xor
dec
sub
bound
jp
test
inc
into
sub
or
jno
push
mov
push
or
jo
sbb
lods
push
popa
lods
cmp
test
dec
and
sbbb
sbb
xor
adc
ja
cmp
add
in
pusha
push
push
aad
popf
mov
jnp
jo
jbe
ret
add
sub
fstps
outsl
insl
fists
add
stos
adc
cmpsl
aaa
mov
mov
enter
add
popf
and
or
mov
sub
push
inc
push
and
testb
adc
sarb
fidivl
test
inc
cs
jmp
inc
adc
adc
mov
scas
xchg
sub
jnp
test
hlt
lcall
dec
push
fdivl
rcll
sarb
pop
int3
pop
dec
add
les
aam
adc
in
push
rcrb
aad
or
popf
or
mov
mov
loop
jno
xor
sbb
out
sbb
gs
call
pop
mov
push
sub
lods
fsts
ret
fcomi
stos
shrl
jne
inc
pop
jno
cmpsb
sbb
push
xlat
dec
adc
push
enter
mov
call
lea
popf
lret
nop
in
mov
xchg
adcl
sar
ljmp
ja
ss
jbe
cs
fisubrs
push
and
les
rorl
xchg
push
nop
les
or
xor
xchg
push
out
test
and
pop
adc
pop
xchg
pop
mov
stc
xchg
sub
cmpsb
or
push
rorl
dec
push
fiadds
sub
jo
lock
test
mov
dec
test
cmp
addr16
push
dec
jl
stos
xchg
lods
mov
adc
jge
cmc
dec
or
mov
ja
jb
out
xchg
adc
imulb
mov
cmpsb
in
mov
insb
rcrb
imul
cmpl
xchg
lret
sub
or
sbb
movsl
xchg
popa
xor
cli
test
repnz
es
pop
mov
les
shrb
negl
jl
aaa
jo
sub
or
dec
je
jg,pt
dec
test
into
jno
jecxz
xchg
daa
jns,pt
or
aam
mov
inc
mov
aad
rol
dec
jns
add
fucomip
adc
mov
or
and
cmp
jb
push
lock
jmp
and
repnz
sub
jb
loop
mov
cmp
flds
out
cld
addr16
sub
and
xchg
push
and
xor
add
sbb
or
mul
test
add
fnsave
int
incb
mov
data16
rorb
call
fnstsw
test
icebp
test
push
sbb
bound
stc
cmp
sub
and
fidivl
xor
sti
and
daa
cltd
mov
clc
cli
jbe
hlt
add
mov
stc
scas
out
jne
mov
fsubrs
mov
mov
div
sbb
jmp
adc
add
lahf
jmp
sub
cmp
repz
sbb
mov
lods
pushl
data16
jmp
dec
add
jecxz
adc
mov
aad
sub
add
scas
subb
stos
xchg
fmul
mov
lock
lock
pop
sbb
mov
lods
test
fsubrl
out
dec
fldcw
adc
mov
and
cmp
pop
dec
push
out
popa
sub
aam
adc
mov
stos
aas
inc
aas
jbe
repz
ljmp
cmpl
outsl
enter
adc
add
lock
in
jo
push
xchg
cmp
cmp
mov
cmc
jl
pusha
xor
sub
hlt
mov
sbbl
and
dec
mov
cmp
adc
out
stos
dec
jb
test
daa
das
pop
sbb
cmp
adcb
popa
cmc
aad
xor
dec
cmc
and
xchg
push
loopne
fadd
test
out
sub
leave
lea
push
mov
hlt
in
push
lods
lahf
adc
enter
test
sub
movsb
mov
xor
arpl
mov
and
xchg
or
pop
aad
inc
fsubrl
push
mov
inc
and
jne
inc
add
rol
out
mov
clc
iret
movsl
out
or
sti
fwait
call
pop
aaa
jg
adc
xchg
clc
xchg
scas
xchg
add
ja
cmp
add
xchg
xchg
mov
hlt
das
aaa
xchg
jo
out
out
inc
in
pop
iret
dec
ja
outsb
imul
jae
lahf
filds
pop
shlb
inc
lods
stc
ficompl
push
aaa
test
jne
mov
leave
in
hlt
test
add
adc
xchg
into
fld
stc
stos
or
and
out
mov
inc
ficompl
mov
adc
es
leave
test
sahf
pop
fnstcw
and
aaa
or
mov
iret
push
push
cmpsl
mov
mov
test
sbbb
push
in
lods
mov
rcrb
outsb
roll
or
mov
inc
push
aas
movsb
into
pop
jo
mov
ret
pop
aam
in
or
cli
rorb
mov
lcall
icebp
push
fcoms
cmp
loop
mul
fwait
cmp
jns
shlb
in
leave
add
movb
mov
mov
clc
rcrb
cli
add
mov
pop
sub
int3
sti
ficompl
je
jecxz
push
repnz
outsb
repz
stos
xchg
dec
mov
dec
sub
imul
addr16
or
sbb
cmp
dec
jl
xor
lret
mov
jo
es
ja
leave
sub
and
dec
adc
ja
jge
sub
add
es
jo
sub
cmp
mov
divl
cld
call
push
movsl
orl
push
and
fwait
cmp
xchg
adc
into
pop
out
repz
mov
shll
jns
outsb
xchg
aam
mov
daa
cld
jo
pop
imul
inc
bound
push
pop
mov
xor
cmpsb
jbe
dec
rorb
popa
adc
outsl
lds
mov
push
outsl
sub
test
jge
adc
scas
mov
vcvtpd2psy
movsb
jle
xchg
sbb
cwtl
cmp
test
loope
outsb
add
pusha
adc
cltd
inc
movsb
push
hlt
dec
pop
inc
and
push
inc
and
inc
xchg
push
daa
xchg
xlat
popf
popa
mov
scas
dec
insl
call
sub
inc
jae
imul
cmp
ret
dec
inc
daa
aam
sbb
mov
repnz
ret
add
ja
enter
insl
push
xchg
sub
pop
js
pop
pop
pop
pop
andb
jl
ficoms
xor
mov
dec
and
dec
outsl
mov
rcr
sbb
sub
orl
jae
jbe
lahf
xchg
out
lock
inc
das
scas
add
stc
mov
gs
jo
cmpl
xchg
std
or
repz
subb
jbe
loop
leave
pop
bound
adc
ljmp
dec
movsl
pop
clc
xchg
sarb
mov
lods
push
push
daa
aad
stc
lahf
lahf
cmp
stc
mov
push
out
push
repz
and
sbb
pop
fwait
sbb
jg
cmp
cmp
stos
inc
inc
sahf
js
xor
xchg
rdmsr
pop
sub
mov
sbb
dec
inc
sbb
cmc
push
outsb
fnstenv
sub
mov
cmp
xchg
xor
filds
fisttps
rorl
dec
test
pop
or
cmpsl
pop
divb
xchg
mov
cli
ds
or
push
lock
inc
data16
inc
cmc
orl
mov
mov
pop
pop
fwait
mov
cld
or
jmp
hlt
pusha
sbb
xchg
adc
mov
subb
inc
arpl
int
inc
push
mov
xchg
out
ss
pop
stos
jno
mov
mov
or
mov
jmp
ss
cmpsb
gs
mov
test
cmc
in
sub
push
aaa
jb
movsb
push
mov
or
rcrl
xor
xlat
cwtl
mov
mov
fsubrl
jge
stos
jle
mov
mov
or
sbb
cli
loopne
int3
pop
jle
testl
in
scas
hlt
mov
cmc
sub
scas
std
push
roll
fstps
pusha
jmp
sub
sub
cmp
lea
ficoms
cltd
insb
jp
sahf
xchg
add
popa
xchg
insl
inc
mov
roll
mov
int3
test
mov
out
push
scas
into
adcb
add
push
xchg
xchg
adc
xchg
outsb
lock
add
rolb
xchg
adc
lock
cmpsl
enter
xchg
inc
jmp
cmp
popa
push
mov
xchg
mov
sti
pop
jno
movsb
addb
popf
call
shrl
das
daa
mov
push
pop
lret
cmpsb
inc
popa
sub
bound
mov
jae
fwait
pushf
and
shl
add
and
xor
pop
mov
mov
mov
jg
fs
adc
fucomi
in
mov
mov
ds
push
or
enter
ja
aam
lods
or
jg
mov
mov
shl
cltd
lret
das
sub
sub
adc
push
insb
mov
push
push
mov
fnstenv
and
inc
jmp
lods
inc
jae
jbe
xor
lods
in
xchg
cld
xchg
xor
fwait
pop
hlt
pop
testb
xchg
sbb
lock
xchg
subl
xchg
jnp,pt
push
dec
lea
mov
push
jns
sbb
mov
mov
enter
imul
leave
xchg
push
test
add
stc
and
adc
decl
in
mov
ret
imul
jecxz
mov
fcoms
jl
lods
ret
cmp
je
aaa
loopne
lcall
movsb
aam
aad
inc
xrelease
int
repz
xor
xchg
ds
dec
ds
dec
inc
cld
adc
negl
xlat
pop
sahf
xchg
scas
leave
mov
iret
xor
out
andl
mov
push
add
or
jnp
push
out
and
xor
lods
filds
push
out
push
aam
mov
outsb
inc
inc
ja
cs
ds
push
ss
es
inc
into
neg
out
xchg
mov
cmpsb
outsb
push
jle
dec
jbe
cs
ds
push
ss
es
inc
into
neg
out
xchg
mov
cmpsb
outsb
push
jle
dec
jbe
addr16
ds
push
aaa
push
es
inc
into
neg
out
xchg
mov
cmpsb
outsb
push
jl
dec
jbe
bound
xchg
sub
insb
fs
xchg
fstps
ss
dec
popa
pop
add
push
and
ja
push
and
inc
dec
pop
aaa
int3
jns
frstor
xchg
xchg
loopne
loopne
fs
adc
xor
pop
push
pop
pusha
daa
jo
add
xlat
shl
testl
inc
loop
mov
call
pop
jle
jo
in
mov
enter
stos
shll
outsb
or
xor
adc
clc
mov
inc
mov
mov
in
hlt
jae
inc
in
inc
mov
pop
rcrb
jbe
in
and
xchg
mov
loopne
push
push
xchg
push
mov
mov
dec
adc
push
nop
mov
mov
sarb
stos
sub
int3
jnp
lret
lds
and
das
jo
cmpl
dec
jb
xchg
shlb
shl
mov
xchg
jp
mov
clc
jmp
sti
aaa
mov
sbb
testl
push
lea
fxch
jg
dec
mov
mov
sub
add
cmpsl
repz
pop
inc
inc
push
and
ja
pop
sub
pusha
daa
aaa
inc
or
out
testl
inc
bound
push
es
ss
inc
arpl
jo
xorb
xchg
aad
rorb
jne
push
das
push
adc
inc
xor
sbb
mov
enter
mov
jecxz
push
jl
inc
add
adc
jo
add
xlat
mov
xchg
xchg
loopne
lock
inc
adc
xor
pop
push
pop
pusha
daa
jo
add
xlat
mov
xchg
xchg
loopne
lock
inc
mov
loop
lock
repnz
shr
xlat
arpl
ret
xchg
fwait
and
xor
cmp
mov
fidivs
lods
jo
cmpsb
cmpb
sbb
flds
daa
outsb
mov
mov
ss
setg
pop
pop
ffree
and
fisubs
sub
push
cmpxchg
push
mov
add
sbb
rcrl
xchg
call
mov
pop
addl
inc
aaa
fnstsw
adc
scas
fwait
int3
cmc
fimuls
notb
sbb
in
sti
cwtl
nop
pop
sbb
add
mov
ljmp
adc
mov
int
insl
jb
jg
jne
test
sub
mov
repnz
aas
dec
out
adc
push
ljmp
inc
inc
data16
lods
cmp
lea
ret
pop
repnz
aad
mov
dec
notl
and
in
add
loopne
xchg
sti
pusha
js
push
lret
pop
aam
pushf
rcr
ljmp
push
cmp
int3
cmpsl
stos
push
ljmp
insl
mov
cmp
or
sarb
jg
push
cmp
jmp
orb
pushf
jb
mov
ss
add
adc
sahf
lret
mov
xchg
jge
push
or
cmc
aaa
sti
jp
in
adc
xchg
cmp
or
xchg
dec
xor
xchg
leave
mov
push
pop
pop
or
imul
inc
mov
xchg
mov
cwtl
adc
test
inc
push
clc
loop
push
push
cmp
push
loopne
mov
das
cmp
mov
xchg
and
stos
pop
notl
fcomi
fucompp
mov
or
or
das
cld
adc
fsubrs
jb
lods
mov
idivl
jb
dec
arpl
out
adc
lea
mov
adc
xchg
lea
icebp
mov
xor
pop
in
jb
out
push
lret
loopne
shrl
movsl
fsts
test
andb
daa
inc
int3
aad
lcall
inc
inc
push
sti
pop
rcll
in
sub
mov
mov
cmp
xchg
xchg
xchg
pop
ja
push
mov
xor
and
sub
fidivs
cmp
push
jns
or
mov
imul
add
loop
xor
movsl
inc
adc
jl
daa
and
inc
push
add
push
push
lret
aaa
cltd
mov
test
je
sti
test
mov
int3
imul
int3
enter
addl
mov
mov
scas
ds
shlb
ret
push
or
out
dec
pop
xchg
sti
stc
mov
test
pop
into
mov
es
push
lds
add
xchg
or
dec
hlt
cmc
inc
imul
insl
inc
push
lods
rolb
cmp
sub
decb
mov
pop
xchg
and
mov
and
lock
js
sbb
mov
xchg
add
sub
jge
add
hlt
aad
dec
jle
pushf
imul
adc
movsw
shrb
jecxz
lret
jle
outsl
push
bound
in
mov
sub
outsb
push
or
addb
aam
daa
inc
mov
roll
aam
aad
add
rolb
mov
loop
pop
leave
pop
aad
jne
xchg
sbb
inc
add
add
mov
test
and
pusha
or
fcompl
enter
mov
cmpsl
xchg
inc
add
jmp
add
add
and
mov
nop
pop
add
sub
mov
ds
data16
je
push
push
pushf
call
inc
shll
aas
in
movsb
dec
pop
mov
nopl
icebp
xor
add
nop
movsb
movsl
cltd
and
pop
mov
inc
sbb
sbb
je
pop
out
sub
je
mov
stc
cmc
jae
insb
loopne
loop
dec
imul
add
std
dec
cmpsb
dec
inc
fisttpll
ja
mov
or
in
insl
jo
hlt
inc
popa
clc
sarb
pop
sub
push
inc
or
addl
dec
push
enter
jg
push
add
add
xor
in
adc
scas
xchg
and
hlt
inc
hlt
inc
sbbb
sub
mov
clc
stos
cwtl
je
stc
scas
jae
jo
out
jp
in
lock
sub
mov
xchg
test
data16
mov
push
mov
sbb
mov
sbb
jge
notl
pop
xor
push
dec
push
and
cmp
incb
insl
sti
scas
test
mov
mov
shll
outsb
jno
mov
push
mov
fidivrs
test
out
inc
js
out
push
das
jge
andl
cmp
sbb
ljmp
pushf
push
repz
push
sbb
mov
push
hlt
test
sbb
iret
xor
adc
imul
dec
push
pushf
fwait
pop
popf
mov
sbb
sub
or
mov
adc
mov
gs
adc
fcompl
call
jne
sbb
test
sub
mov
sbb
lods
mov
jb
shrl
shlb
sbb
dec
pop
adcl
or
aam
inc
and
mov
or
loope
leave
shrd
rol
xor
push
and
or
dec
std
dec
cmp
fdivrl
mov
mov
mov
add
pop
lds
sub
cmp
pop
into
mov
jmp
stc
test
lea
lahf
mov
rcl
sub
lods
add
loopne
fmull
loop
cmp
push
push
sub
shll
jb
setne
jmp
inc
icebp
out
pop
enter
lock
push
loopne
lods
in
push
jne
sar
in
mov
pcmpgtd
jnp
fsubr
icebp
xchg
lock
scas
or
mov
rclb
push
cmp
mov
cli
test
pop
aam
mov
jmp
inc
adc
fpatan
xchg
cmp
cld
sbb
lea
lods
loopne
add
pusha
icebp
sbb
ret
subb
lods
or
and
je
mov
jge
into
jl
and
orl
rcrb
popa
cmp
pop
mov
jae
jo
icebp
sub
test
outsb
andl
popf
inc
aaa
mov
pop
fadds
or
adc
push
ret
mov
mov
sbb
inc
mov
fisttpl
mov
test
pop
fbstp
lea
hlt
dec
aad
lea
xor
test
inc
dec
aam
mov
nop
and
add
test
adcl
flds
jns
xor
fdivp
mov
add
dec
repz
sbb
into
int
mov
jbe
mov
cwtl
mov
test
test
add
and
dec
sub
mov
cmpl
sub
inc
fdivs
xorl
aam
negl
imul
mov
pop
enter
or
loop
int
cmp
jb
arpl
aad
scas
dec
pop
mov
movsl
sbb
and
aam
pop
test
cmp
jb
mulb
scas
ljmp
dec
lock
xchg
xchg
dec
daa
jl
int3
mov
popa
jmp
jne
xchg
std
add
clc
test
push
xchg
stos
and
cpuid
or
add
sbb
repnz
dec
and
shll
and
inc
cmp
call
pop
hlt
and
lods
lds
je
xchg
pop
push
jns
and
push
imul
imull
sbbl
cmp
jo
and
sbb
cmp
femms
xchg
call
xchg
cmp
adc
dec
jl
pop
push
mov
lahf
daa
call
sbb
ficoml
sbb
mov
push
adc
xchg
icebp
mov
movsb
jne
gs
aam
sub
jge
pop
cmp
pushf
insb
inc
je
test
mov
cmpsb
lahf
xor
cmp
out
adc
xchg
fstl
popa
and
pop
loope
pop
inc
outsb
lret
fwait
add
mov
or
aaa
sub
inc
jne
arpl
cmp
fdivrp
ret
daa
repnz
pop
out
out
imul
mov
or
push
mov
push
add
push
jle
subb
jns
push
loope
cli
dec
out
fmuls
ds
loope
mov
jbe
cmpsb
ficompl
fwait
insl
movsb
dec
loope
notb
cmpl
jnp
dec
cmp
fcmovnu
sbbw
xchg
lds
xor
cmpsb
adcb
inc
pop
add
mov
sbb
pop
mov
stos
sbb
lods
xor
mov
fidivs
out
and
dec
mov
mov
mov
out
mov
xor
mov
sub
dec
ljmp
mov
xor
mov
stc
mov
ret
fdivr
mov
scas
lea
pop
ficompl
fldenv
xor
das
cmc
xor
mov
inc
sbb
mov
add
cmp
fbstp
sahf
fmull
sub
rol
sub
sahf
mov
stc
xor
mov
sarl
cmp
push
dec
cmp
push
repz
pushf
ja
mov
inc
ja
push
mov
bound
xchg
push
out
and
cmp
enter
aaa
or
mov
mov
fnstenv
sar
and
sbbb
jle
dec
pop
mov
mov
movsl
adc
pop
shrb
adc
xchg
adc
and
aaa
cmp
daa
pop
pop
or
mov
jp
loop
ficomps
lds
in
clc
out
add
and
xor
mov
ret
sbb
pop
iret
shl
dec
mov
jns
mov
mov
or
sbb
rcl
ss
outsb
mov
mov
mov
int3
mov
clc
jle
cmp
and
mov
sub
fdivr
add
adc
push
adcl
xchg
andl
cli
roll
in
in
jb
mov
xchg
scas
sub
daa
pop
in
xor
std
popa
pop
mov
mov
inc
push
js
icebp
repz
mov
cmpsl
std
sbb
out
outsb
pop
js
stc
flds
or
jecxz
sbb
and
xchg
push
mov
insb
cs
cmpsb
jae
out
pop
aam
xchg
push
subb
gs
pusha
sbb
call
jl
lret
insb
dec
or
pop
add
outsb
sub
add
and
inc
push
jl
call
xor
pop
sbb
pop
sub
mov
push
xor
mov
ss
mov
arpl
fdivrp
mov
movsl
jl
test
push
pushf
mov
shll
sbb
cmp
pop
insb
das
repz
xchg
aad
pop
aam
jmp
add
aaa
daa
jae
cvtpi2ps
cmp
clc
mov
jecxz
pop
dec
stos
clc
mov
sub
cwtl
fidivl
rcrb
lods
ret
clc
pop
lock
fistpl
sub
mov
push
ja
cmpb
ja
outsl
mov
gs
inc
sti
aad
jo
out
pop
push
inc
sahf
rcrb
out
call
or
inc
ficomps
mov
loopne
mov
cmpsl
clc
orb
jge
sub
sub
and
xor
ds
iret
dec
pusha
hlt
pusha
cli
or
pop
shl
sbb
js
cmp
test
add
adc
mov
xor
loopne
nop
jno
into
movsl
pop
xor
jns
pop
cmc
cmp
lret
xchg
pushf
jbe
hlt
push
mov
inc
lret
repz
insl
loop
mov
mov
fimull
lock
insl
xor
dec
les
ljmp
stos
clc
mov
mov
jecxz
adc
dec
popa
add
pop
mov
xor
int
inc
lcall
sbb
je
add
idivb
mov
fs
dec
les
std
mov
cs
inc
out
mov
les
daa
mov
push
mov
aam
lock
and
pop
cmp
inc
test
arpl
push
jns
xchg
sub
and
fdivr
jns
mov
fstpl
xor
cli
fldenv
mov
xchg
scas
mov
loop
jne
dec
fwait
lods
leave
insb
lods
outsb
rclb
loope
mov
xor
sbbb
dec
test
aam
leave
mov
or
mov
dec
push
out
jmp
imul
sbb
in
call
mov
adc
xor
jns
or
repnz
mov
jne
pop
jb
into
nop
ljmp
adc
leave
stc
mov
lds
pop
mull
push
push
imul
pop
jnp
sub
les
popa
adc
pop
scas
std
mov
mov
xchg
mov
incl
int
inc
jle
cmp
lock
add
mov
pop
mov
pop
sbb
faddl
xchg
cmp
test
cmp
pop
shlb
jp
out
shll
xorb
push
jbe
in
fmulp
or
mov
testl
cwtl
adc
mov
jns
inc
fcmovb
sub
pop
jmp
negl
push
sti
shr
push
jge
xor
mov
xchg
sub
dec
gs
in
nop
cwtl
xor
std
rcr
bound
pop
add
ficoml
push
imul
out
lock
outsb
xchg
or
aaa
cs
inc
fcoms
fisttpl
sub
lret
bound
dec
mov
lods
aaa
sub
xor
adc
pop
sbb
mov
mov
jns
mov
sbb
jl
gs
sbb
sub
sbb
div
dec
sarb
nop
and
pop
jmp
int
sbb
add
mov
cmp
xor
enter
xchg
insl
cmpsl
int3
clc
fs
pop
idiv
lret
sti
addr16
lcall
movsb
cmp
and
xchg
scas
mov
push
pusha
clc
mov
add
push
mov
cs
nop
inc
cld
jmp
test
cld
aas
icebp
fidivl
ret
push
sahf
shl
cmpb
pushl
push
add
jne
cli
pushf
lahf
inc
jb
add
sbb
mov
mov
fsubl
incb
pop
inc
movsb
add
in
ja
mov
pop
adc
enter
ljmp
shlb
jle
push
mov
ficomps
push
xchg
test
add
adc
xchg
ss
adc
test
int
pop
mov
sub
fiaddl
cmp
mov
pop
cmp
in
lock
je
addr16
pushf
iret
ret
out
mov
bt
dec
rol
in
das
out
scas
add
pusha
movsl
jge
inc
sbb
mov
lods
add
ss
sbb
add
aam
pusha
loopne
add
fisubs
jp
pusha
testb
add
jo
xor
pop
fidivl
ret
mov
mov
fs
popa
scas
adc
jge
cwtl
push
hlt
jmp
mov
pop
pxor
sub
in
push
fldcw
add
and
dec
inc
iret
aam
fs
and
dec
loope
jmp
push
int
and
out
addr16
or
repz
sbb
ret
enter
mov
push
xchg
test
xchg
pop
in
and
push
mov
fwait
test
pop
aaa
push
mov
dec
mov
push
cmp
into
into
adc
mov
pop
fimuls
rorb
int
mov
pushf
hlt
rcrl
xchg
stos
fldt
mov
stos
mov
mov
sarb
push
cld
lods
adc
ret
nop
mov
movsl
jns
mov
cmp
cmp
cld
js
pop
addr16
add
xor
in
nop
mov
lea
mov
repz
mov
sub
jo
dec
dec
fs
xor
neg
mov
enter
cmp
mov
xor
loopne
mov
and
lea
cwtl
jne
sbb
pushf
xchg
out
and
daa
add
jl
popl
fnstsw
jnp
notl
mov
ss
dec
icebp
orb
mov
xor
lahf
xchg
fmull
adc
mov
das
mov
je
jno
scas
push
pop
xor
jo
in
popf
xor
fwait
mov
clc
mov
or
or
push
dec
test
lods
jb
sub
sbb
adc
ret
popa
pop
int3
mov
js
sbb
jl
es
cmp
ds
mov
loopne
xor
icebp
out
stos
inc
das
loop
out
mov
jno
inc
dec
stos
bound
dec
sti
xchg
or
mov
movsb
pushf
daa
dec
add
test
mov
mov
adc
and
loopne
pop
inc
mov
lret
aad
and
xor
push
xchg
pop
adc
push
xchg
xchg
out
fidivs
inc
push
ror
das
and
int3
ret
push
imul
sbb
add
fisubs
adc
fnsave
adc
outsb
pop
insl
add
popf
xor
scas
clc
lods
sub
pop
cli
std
mov
push
mov
test
icebp
sub
out
xchg
daa
popf
fnop
stos
add
mov
pop
jne
jp
jge
cltd
lcall
xor
jecxz
jo
mov
push
cmpsl
jl
xor
pusha
push
xchg
scas
fnstcw
divl
or
ret
xchg
jle
mov
iret
lahf
push
mov
pop
cmp
jns
roll
cltd
leave
xor
fbld
mov
push
pop
cmp
jl
pop
gs
mov
push
pop
xchg
sub
lret
repz
xorb
jl
mov
sub
jg
and
gs
outsb
icebp
shrl
or
loope
mov
je
rcrb
test
pushf
sub
adc
xchg
rolb
lods
and
lahf
daa
sbb
fistl
insb
rol
lock
daa
push
add
pop
adc
lea
rorl
mov
mov
pop
push
dec
sbb
popf
cli
xor
push
xor
movsl
inc
sbb
and
push
mov
adc
push
sbb
mov
nop
popa
cld
sahf
leave
inc
cmpl
or
lret
mov
and
lods
jno
jne
or
adc
dec
sbb
pop
pop
cmpsl
adc
jge
das
sub
and
das
jg
jbe
data16
test
neg
xor
aam
xor
hlt
xchg
jae
xor
pop
jnp
xor
arpl
sbbl
sub
xchg
adc
mov
add
dec
ret
insl
inc
ret
data16
fbstp
ljmp
mov
cmpsb
sti
jne
dec
pop
xlat
inc
push
or
in
inc
mov
push
pop
inc
jo
mov
int
mov
sahf
das
arpl
dec
loopne
mov
stos
hlt
xchg
inc
sbb
add
lock
ja
sbb
lock
addr16
out
ror
sbb
and
jp
std
int
stos
out
ret
pop
jnp
lret
in
mov
pop
iret
enter
rcrl
push
inc
popa
lods
push
cmp
cmp
dec
stc
push
scas
xchg
js
andb
cmp
jl
ds
clc
push
mov
dec
loopne
loop
sub
fwait
mov
in
cmp
xchg
arpl
ret
mov
pop
cltd
sub
fistl
out
fiadds
jne
and
xchg
andb
sahf
mov
js
sub
mov
adc
xchg
mov
fdivr
in
stos
cmp
rclb
push
jle
sub
sub
nop
sarb
movsb
mov
js
gs
jge
lea
repz
xchg
fcoml
pusha
adc
jo
jmp
dec
rcr
pop
cmp
imul
inc
push
mov
sbbb
adc
js
clc
pop
mov
or
adc
and
popf
inc
sbbb
nop
sub
sub
fsubs
pop
sub
call
call
or
fs
jg
mov
addr16
rorl
fimull
jl
pop
dec
adc
pop
repz
xlat
out
mull
fcoml
xor
lcall
cmp
js
or
cmpsb
out
insl
es
adc
or
repz
in
xchg
xor
jne
or
pop
jne
dec
in
inc
mov
dec
mov
lds
jae
cs
pop
or
sarl
sub
mov
stos
sub
pushf
mov
xchg
loopne
aam
jge
mov
inc
loopne
loope
lock
test
stos
pop
push
sbbl
loop
jl
ja
js
notb
xor
pop
push
pop
pusha
daa
jo
add
xlat
mov
xchg
xchg
loopne
lock
inc
adc
xor
pop
push
pop
pusha
daa
jo
add
xlat
mov
xchg
xchg
loopne
lock
inc
and
xor
pop
push
pop
pusha
daa
mov
add
xlat
push
out
test
cmpsl
sbb
jp
adc
pop
inc
pop
pusha
daa
lock
addps
pop
cmovs
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
inc
daa
adc
add
std
iret
and
hlt
pop
cmpsb
add
add
or
push
add
add
pop
add
lret
add
add
add
faddl
mov
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
dec
add
sbb
push
add
add
add
inc
add
or
push
add
add
fldl
inc
add
mov
add
add
add
adc
cmp
inc
add
add
int
and
and
add
xchg
add
add
xor
movb
sub
add
add
add
cmp
or
add
add
add
add
add
add
add
outsb
add
add
add
inc
add
add
add
add
xor
xor
lock
pop
in
add
push
adc
mov
xor
fldl
pop
add
add
add
or
add
add
add
add
add
add
or
pop
add
add
add
add
add
xor
movsb
add
add
aam
sbb
inc
add
inc
add
add
add
add
das
add
add
add
push
add
add
add
pop
add
inc
add
push
movsb
add
add
xor
inc
add
and
pushf
add
add
add
push
add
add
add
add
add
add
add
sbb
pop
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
cmp
dec
add
xor
adc
popa
add
sub
addl
inc
add
add
str
add
add
add
add
add
jecxz
add
and
add
fadds
hlt
add
add
add
add
add
add
push
add
addl
sbb
add
add
add
add
add
add
add
add
add
jnp
filds
add
add
xor
add
add
add
add
mov
xor
push
add
add
add
add
add
add
sbb
add
add
add
add
add
add
xor
inc
add
dec
add
add
add
add
outsb
add
add
and
inc
add
add
add
add
add
add
sbb
add
add
add
add
roll
add
lldt
add
add
add
add
aaa
add
add
movb
das
add
add
add
add
add
add
inc
add
add
xor
jno
or
outsb
add
add
add
add
push
add
add
inc
add
movsb
add
movsl
add
add
add
push
add
add
rolb
les
sub
or
test
sub
inc
add
add
add
add
add
add
add
add
add
add
dec
add
mov
faddl
adc
mov
cmp
test
test
hlt
add
add
add
xor
pop
add
add
add
add
add
pop
aas
add
add
add
adc
jo
and
add
push
test
and
sub
mov
push
test
xor
mov
add
je
jne
xor
jne
gs
sahf
out
fsubr
cltd
test
cmpsb
cmp
cwtl
cmp
inc
test
outsl
jle
add
push
ljmp
pop
movsb
das
in
fisubrl
xor
call
outsb
data16
inc
push
mov
aaa
pop
enter
push
shrl
mov
sahf
push
dec
int
inc
or
adc
push
std
lcall
mov
js
les
xchg
and
dec
sbb
sbb
lret
fsubs
xor
sbb
push
aas
xchg
loope
mov
je
sub
mov
adc
jae
xlat
push
xor
add
adc
cwtl
aaa
xchg
and
dec
pop
ret
aam
loop
dec
xorl
sahf
dec
rcrl
xchg
int
das
outsb
gs
sti
inc
jo
inc
shlb
test
fwait
shlb
das
pusha
out
in
scas
in
push
aas
mov
pop
lcall
jp
jne
inc
pop
dec
pop
lret
mov
movsb
dec
ja
cwtl
push
data16
dec
movsl
mov
movsb
sbb
push
fsts
jbe
xlat
push
sar
divb
pop
shll
dec
cmc
xchg
fwait
and
dec
lods
xor
and
js
mov
das
mov
mov
jno
xchg
out
vmovdqu
push
cmp
jp
fwait
and
adc
imul
jmp
int
in
lds
sahf
or
add
mov
int
mov
int
mov
shlb
icebp
jp
push
adc
jb
sti
mov
inc
repz
fsubs
mov
jbe
xchg
movsb
sub
dec
add
std
popf
push
mov
int
xchg
xorl
xor
in
outsb
jnp
sub
push
add
addl
mov
in
cld
push
mov
into
fucomi
or
flds
cmc
imul
mov
sahf
lret
stc
xor
dec
cmp
std
sbb
push
arpl
cmp
sbb
out
pop
and
push
fwait
sub
inc
add
cmp
imul
int
fistl
mov
add
cmc
cmp
sub
push
sub
push
mov
mov
or
mov
or
lods
shlb
sub
sub
pop
mov
push
dec
addl
mov
jge
mov
mov
aam
xorl
aad
jne
shrb
lock
test
insb
aad
inc
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
