fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
cs
dec
push
cmp
sub
jns
sub
push
dec
scas
pop
mov
test
and
sbb
or
cmp
sub
jle
dec
js
inc
mov
mov
test
test
into
clc
fsubrp
aaa
mov
push
pop
ja
data16
pop
pop
mov
popf
stos
rcr
out
out
mov
mov
push
dec
push
imul
push
jle
sti
cltd
test
pop
cli
movb
inc
push
pop
out
mov
jbe
mov
ret
lret
xchg
xchg
sub
je
inc
pusha
clc
mov
jae
movsl
shll
push
std
popa
pop
fsubrs
mov
cwtl
mov
adc
sub
xor
sub
das
das
sbb
or
cmp
sub
mov
mov
test
inc
pop
ficoms
xchg
imul
mov
js
pop
outsb
pop
push
mov
fnsave
stos
into
gs
out
testl
jl
mov
lret
xor
rep
into
ret
lods
into
adc
and
daa
sub
dec
push
sub
outsb
dec
dec
js
cli
mov
cmpsb
and
in
es
inc
sbb
imul
std
sbb
scas
fcmovnbe
clc
std
sbb
fwait
cmpsl
mov
pop
pop
dec
popa
dec
outsb
inc
add
jle
dec
adc
std
mov
fistps
mov
imul
push
jbe
es
dec
dec
js
push
mov
dec
into
clc
fsubrp
sbb
or
cmp
sub
jle
dec
js
push
mov
dec
into
clc
fsubrp
sbb
pop
mov
insl
movb
sbb
dec
rcrl
repnz
cmpl
mov
cmp
mov
dec
fiadds
xor
mov
xor
pusha
jp
addb
fisttpll
lahf
ret
cmpsl
xchg
pop
jmp
mov
nop
dec
lret
movsb
add
or
sbb
xchg
mov
sahf
xor
mov
imul
sbb
bound
mov
inc
ds
leave
push
popf
pop
xor
mov
fwait
loopne
sbb
mov
dec
lock
in
mov
sub
loope
dec
dec
scas
mov
pop
add
adc
sti
adc
mov
js
enter
xchg
cmp
jmp
pusha
data16
cmp
xchg
popf
out
in
and
arpl
mov
nop
scas
mov
mov
mov
js
fnstenv
rcr
int
stc
sti
cmpsl
pusha
mov
pop
add
push
test
lock
ss
lea
or
sub
adc
aad
ret
sti
loope
or
and
repz
imul
cltd
xchg
ret
and
sub
xchg
int
push
jg
adc
in
out
out
enter
insb
push
push
outsb
jo
faddp
pop
push
sub
inc
test
jg
inc
jno
icebp
setne
mov
fnsave
jnp
inc
cmp
fsubrs
aam
push
xor
rclb
lahf
add
mov
dec
mull
jl
icebp
fimuls
mov
mov
lret
out
sbb
lahf
out
jae
adc
and
or
pop
pop
pop
test
and
pop
mov
scas
test
popf
sbb
push
push
cld
test
in
notb
outsb
xor
pop
mov
jp
rcl
jbe
icebp
xchg
stos
adc
sbb
ds
adc
cmp
pop
mov
mov
xor
jae
cli
pop
lock
sbb
and
hlt
inc
adcb
xchg
scas
jo
push
aam
clc
arpl
push
and
iret
lods
mov
fcoms
divps
test
xchg
lods
shll
jl
xor
outsl
ss
rol
mov
into
mov
ljmp
mov
sahf
push
mov
popf
pop
loop
rclb
sbb
sub
push
mov
mov
pop
sub
push
aaa
cli
push
in
out
daa
cld
sub
rcrl
dec
push
jg
xchg
scas
add
mov
push
pop
xor
xchg
push
repz
pop
es
std
inc
adc
loope
or
xor
fdivl
scas
sbb
jmp
mov
fbstp
xchg
xor
shll
add
daa
flds
movsl
cmp
mov
sub
fnstsw
push
sahf
mov
sub
and
or
fs
adc
mov
xchg
dec
mov
int3
aad
pop
loope
sub
out
mov
shl
inc
icebp
insb
pop
test
seto
ret
push
cli
and
aad
mov
pop
fcmovu
jge
ror
xchg
jp
iret
or
inc
js
rol
jbe
int
jge
mov
lods
xchg
pushf
mov
adc
inc
in
fidivs
and
adc
mov
mov
lods
pminub
jecxz
pop
dec
and
push
pop
mov
inc
jae
mov
daa
jg
in
push
in
fs
xchg
pop
cmp
inc
and
cmp
roll
aaa
cli
mov
cltd
fwait
adc
mov
sub
xchg
je
data16
mov
push
movups
mov
clc
pop
hlt
into
out
adc
xor
pop
xchg
addr16
mov
mov
fwait
out
inc
push
ds
mov
scas
movsb
or
clc
sbb
enter
cs
add
jnp
negl
or
jb
cmp
popa
sti
cwtl
in
mov
xchg
insb
or
and
and
mov
mov
test
inc
test
pop
push
iret
in
sahf
notb
js
or
lock
adc
scas
sti
pop
daa
clc
packuswb
fcompl
xchg
cmp
cmp
stos
inc
mov
mov
and
dec
push
outsl
scas
push
aaa
cmpsb
dec
outsb
into
sahf
jnp
lods
inc
pusha
dec
fcomps
push
dec
adc
rorb
call
iret
xchg
pop
or
pop
xor
out
dec
aam
or
pop
or
mov
sarl
out
mov
or
sbbb
dec
and
xor
and
push
xor
pop
daa
pusha
adc
jmp
leave
mov
lods
rorl
sar
mov
and
mov
pop
lret
repz
popa
es
inc
in
nop
clc
jmp
cltd
jle
in
sbb
adc
inc
aam
sub
jb
scas
test
and
insb
jp
xor
test
test
jae
jae
cmp
sbb
orb
sbb
aad
imul
in
pop
and
call
adc
in
fdivr
cmp
jle
dec
ret
movsb
int
ds
mov
orl
jp
dec
pop
jnp
xor
je
and
std
cltd
scas
loope
jle
movl
mov
cmp
fmuls
enter
rcrl
leave
ja
xor
into
mov
scas
cmc
fs
or
pop
mov
enter
jecxz
jmp
fcmove
jge
push
shll
sbb
outsb
xchg
into
pop
dec
jge,pn
das
out
aas
pop
sbb
rcll
inc
stos
xor
jb
adc
fucom
insl
ja
xchg
jl
les
in
popa
mov
jnp
sahf
lea
out
outsl
les
xchg
ljmp
push
dec
mov
inc
repz
mov
mov
jne
xor
sub
data16
subb
xchg
mov
popf
sub
pop
out
and
mov
cmp
sbb
pop
fistpll
push
fisubs
jns
in
dec
bound
mov
xor
push
push
outsb
xchg
insl
add
cmp
test
ret
or
mov
or
in
push
movsb
insb
leave
leave
push
out
inc
jo
adc
xor
ljmp
pop
add
fsubrl
stos
add
jb
xor
sbb
jb
out
insb
out
adc
sbb
sbb
and
bound
mov
jns
cmpsl
push
inc
sbb
shll
lahf
aaa
cmp
sbb
xchg
push
loop
call
push
into
lods
outsl
repz
push
enter
fidivs
sahf
or
subl
mov
in
or
subb
dec
cmp
mov
shlb
pushf
jo
sbbb
scas
cmp
mov
xor
icebp
call
mov
sarl
inc
repz
adc
cmp
jnp
out
sahf
inc
xor
jge
mov
adc
xchg
fwait
rcll
jne
in
pop
aas
stos
xchg
repnz
sbb
aad
mov
das
test
sub
mov
sub
mov
mov
movsl
jecxz
or
mov
cld
ljmp
jp
xchg
adcl
ret
mov
mov
push
aaa
add
push
sbb
scas
or
loopne
pop
arpl
jns
xchg
inc
es
lods
mov
lods
cwtl
jge
pop
rol
imul
mov
test
into
push
push
xchg
icebp
push
pop
lea
outsb
inc
ficompl
inc
fnstenv
mov
arpl
dec
push
int3
imul
imul
add
sti
adc
bound
xor
dec
notb
int3
scas
repz
mov
jnp
sbb
popa
das
sbb
fnstenv
xchg
adc
lea
adcb
lret
loopne
data16
out
xor
hlt
mov
iret
cld
xchg
sub
popa
pop
fsts
and
enter
notb
scas
fidivl
pusha
mov
jg
and
pop
std
shl
dec
mov
xchg
pop
cltd
jo
fldt
sbb
and
ss
inc
mov
dec
iret
jnp
and
mov
push
mov
push
sti
out
mov
ror
pop
cltd
out
arpl
neg
and
sti
mov
push
fs
adc
or
ret
xchg
xor
add
cs
aaa
pusha
push
push
dec
les
inc
cmp
inc
xchg
int
add
stos
cmp
lret
fldenv
cmpsb
push
sub
lcall
sub
repz
adc
and
inc
sub
aas
cmpsl
call
jmp
xlat
les
fs
sbb
icebp
lahf
mov
and
mov
scas
jnp,pt
dec
adc
sarb
sub
inc
xchg
bswap
iret
popa
adc
add
mov
jl,pn
loopne
idiv
fimull
pushf
repz
fisttpll
mov
jg
inc
xchg
stos
mov
cmp
imul
jno
push
fbstp
inc
and
mov
xor
test
ret
aad
mov
jnp
push
cmp
ret
fcomi
push
loopne
pop
dec
jl
jge
or
adc
sbb
cmp
imulb
push
xor
jns
or
sub
mov
ja
adc
jns
and
inc
sub
xchg
xchg
jg
jo
cmp
ljmp
aad
out
xchg
and
mov
push
sub
popa
out
inc
push
pop
or
mov
pop
xor
and
push
cltd
test
mov
push
mov
jp
mov
sbb
test
bound
push
ljmp
pop
data16
icebp
fcoms
mov
in
arpl
mov
add
das
inc
xchg
cmpsl
in
sub
push
sub
outsl
into
mov
in
pop
arpl
dec
add
sub
mov
push
sub
outsb
inc
inc
lods
jg
scas
jl
cmp
fcmovnb
idivl
jl
mov
inc
jge
movsl
or
pop
shr
cmp
rcll
hlt
mov
sbb
pushf
sub
push
add
test
cmp
les
aam
arpl
xor
shll
xor
mov
roll
xlat
dec
addr16
xchg
fnstcw
add
or
push
sub
ja
inc
add
push
ret
test
adc
or
scas
ficompl
xchg
inc
lock
cmp
in
test
fs
xchg
jns
dec
addr16
mov
dec
sub
jl
enter
mov
and
jmp
cs
jae
add
xchg
sbb
lock
inc
pushf
cmc
pop
dec
pop
push
jl
mov
cmc
or
xor
sbb
cmpxchg
sub
inc
out
sbb
aaa
sub
call
dec
sarl
cmp
testl
ret
xchg
fs
inc
in
leave
cmp
xor
idivb
je
mov
ja
orl
sarb
sub
add
fildll
cmp
mov
push
in
add
add
xlat
sbb
xlat
lods
sub
add
jb
js
mov
dec
cmp
push
push
lods
cmp
mov
sahf
cmp
and
test
jo
xor
mov
adc
inc
adc
mov
cmp
mov
sbb
fs
sbb
test
push
loope
imul
adc
push
loop
test
and
pushf
inc
sub
sbb
push
rorl
in
push
or
clc
aad
add
xor
mov
fdivp
shrl
pop
mov
and
or
les
or
idivb
shl
adcl
cmp
shll
iret
sbb
bound
test
jnp
mov
sbbl
mov
jo
dec
add
mov
int3
paddb
pushf
push
cli
fdivrl
test
add
sbb
scas
xchg
adcl
clc
and
pop
ss
rclb
mov
mov
ljmp
ficoml
or
lock
and
ret
pop
add
aaa
ret
cltd
rorb
mov
out
call
jge
imul
mov
mov
scas
jae
aas
xchg
ret
mov
gs
xchg
sbb
testl
call
lret
add
bound
mov
fsubrs
lret
pop
std
and
int3
mov
cmpsb
rcr
push
xlat
push
xor
xlat
or
sub
pop
fsubrp
not
add
test
sbb
into
xor
mov
push
jno
mov
dec
cwtl
sub
clc
in
cld
push
outsb
inc
push
orl
and
je
xor
faddl
dec
je
das
test
jnp
sbb
lcall
rol
lds
imul
sbb
jp
pusha
cvtps2pi
shl
sahf
rorb
xor
add
in
fcomps
and
shll
jge
cs
test
mov
add
or
adc
pushf
mov
xlat
fs
or
dec
shll
shlb
xor
hlt
jbe
shrb
add
out
lods
jo
scas
adc
nop
xchg
or
les
adc
mov
cwtl
xchg
jnp
pop
push
stc
dec
mov
pop
jae
data16
testb
es
outsl
clc
call
pop
or
in
cmp
stc
ljmp
cltd
imul
cmp
or
adc
xchg
jo
nop
cmp
adc
adcb
ret
jmp
lahf
jecxz
sub
and
mov
xchg
and
popa
jle
or
aam
and
adc
xorb
mov
fs
push
insl
addb
daa
lods
loop
add
in
or
xor
mov
dec
and
mov
lea
xor
das
push
ljmp
jmp
add
push
cmp
leave
std
testl
cmpsl
inc
ljmp
sahf
out
mov
sub
pop
push
push
cld
or
repnz
movsb
out
fmulp
movl
or
or
cmp
data16
sub
sbb
in
mov
pop
mov
lods
sarb
cmp
add
xlat
or
lock
mov
add
xchg
inc
imul
mov
mov
mov
jne
fldcw
mov
pop
test
filds
outsl
lcall
dec
aad
lock
and
jns
clc
loop
push
or
dec
cld
pop
or
and
and
mov
inc
push
push
jno
in
jne
bound
shl
out
jge
jg
out
insb
mov
std
jo
scas
mov
jnp
roll
lret
in
bound
add
lock
cs
xor
cli
loop
pop
mov
shl
stos
pop
movsl
xor
mov
jbe
int
mov
push
fs
in
cli
and
pop
repz
sbb
and
mov
sub
jmp
enter
sti
out
dec
cmp
pushf
fists
or
ljmp
loop
ret
adc
subb
sub
or
or
in
cmp
fcompl
gs
inc
std
lods
or
inc
pop
fisttpl
fwait
mov
insb
mov
mov
jle
popf
sub
stos
push
mov
add
push
lock
mov
push
lahf
push
insb
xor
and
cld
vmxon
adc
jb
mov
js
in
enter
mov
and
mov
fyl2xp1
cmp
mov
xlat
push
jmp
insl
sbb
insb
pushl
mov
or
lods
stc
ret
sbb
cmp
in
dec
jo
cmpsl
sti
adc
push
sarl
push
jecxz
psadbw
inc
rcrl
leave
adc
lods
jecxz
jb
sahf
cmp
int
sbb
xchg
lock
in
push
mov
cmp
imul
loope
sub
lahf
test
movsb
mov
or
lahf
scas
mov
sarl
cmp
jecxz
mov
les
pop
push
pop
test
dec
out
inc
inc
pushf
fistpl
and
inc
pop
xchg
push
jle
or
cmc
mov
lret
daa
dec
fidivl
mov
movsb
fwait
addr16
push
pop
xchg
add
pusha
push
xor
or
mov
ljmp
jno
int
xlat
cs
push
pop
jp
lock
jno
lahf
out
mov
dec
jmp
inc
add
iret
sahf
dec
dec
and
mov
ds
aaa
mov
fwait
aad
mov
pop
mov
pushf
jmp
into
and
and
addr16
ss
sub
addr16
cmpsl
cmpsb
push
pop
cmp
xchg
jo
xor
inc
dec
sub
xor
jae
dec
sub
test
nop
push
popf
ljmp
or
sbb
jo
les
and
lcall
sub
out
jno
or
xchg
sbb
push
and
fldcw
pop
es
nop
xchg
xchg
stos
je
ja
sub
fcoml
cltd
jae
jno
ret
mov
das
cmpsb
xchg
push
mov
movsl
dec
pop
pushf
xchg
xchg
push
push
adc
push
mov
add
inc
mov
fucomp
mov
mov
fists
dec
enter
cmp
and
hlt
clc
mov
pop
ror
push
push
mov
xchg
fstps
scas
cmp
in
or
insb
inc
adc
jle
lcall
aaa
scas
popa
or
int3
mov
pop
test
xchg
xlat
pushf
or
aas
enter
inc
xchg
mov
jne
jo
sub
sbb
mov
dec
mov
out
and
sub
fcoml
pusha
xor
lea
inc
mov
leave
push
leave
pushf
negl
test
adc
stos
push
daa
push
inc
inc
xchg
aad
daa
pusha
dec
insb
cwtl
into
popf
xchg
in
sbb
cmp
stos
xor
js
jo
xor
fdivrs
mov
fimull
xlat
adc
and
cmp
pusha
xchg
scas
pop
push
scas
scas
incl
and
and
fwait
enter
pop
fs
and
pop
push
jnp
pop
sbb
fisubl
mov
sub
sub
jns
jbe
stc
loope
inc
addr16
aaa
mov
xor
add
xor
xor
mov
test
pop
hlt
xchg
iret
enter
dec
dec
dec
cmp
dec
and
pop
mov
mov
jo
push
mov
cmpsb
dec
cmp
pushf
add
sbb
cmpb
or
xchg
push
inc
jg
addr16
inc
jo
mov
pop
mov
rclb
sub
xchg
or
clc
test
xor
dec
mov
cmp
push
mov
xchg
lahf
or
inc
lods
jp
jns
mov
fs
dec
push
cmpsb
and
dec
in
outsb
dec
sub
sub
xor
scas
jecxz
out
out
loop
in
sbb
adc
dec
outsb
repnz
push
jno
mov
or
xor
imul
loopne
adc
lods
stc
mov
xchg
push
sbb
lods
mov
xchg
cmpsb
sub
xchg
xchg
lods
xchg
push
es
scas
in
dec
xor
inc
pop
inc
xchg
cmp
xchg
add
dec
stos
push
sbb
adc
pop
mov
insb
das
sti
leave
daa
cwtl
insl
xor
sbb
push
fwait
aad
sub
jp
movzwl
loope
cwtl
xor
adc
and
jl
mov
in
jge
or
test
outsb
cmpsl
xchg
sbbb
sub
push
pop
push
mov
add
and
sub
jae
sahf
push
mov
aas
loop
outsb
fnstcw
popf
or
fadds
push
imul
out
in
sub
jnp
cmpsb
cld
out
test
jmp
adcb
sub
add
addr16
sbb
ss
movsl
jb
pop
xchg
cmpsb
push
cmp
or
push
add
sarl
pop
xor
dec
add
out
stc
mull
aad
sub
add
lahf
dec
mov
or
fidivrs
xchg
shll
scas
sub
iret
adc
popf
test
aam
cwtl
jb
adc
add
ret
aam
fwait
sbb
stos
fistpl
andl
push
xchg
out
fcomi
in
gs
push
push
scas
lock
stos
pop
push
test
lds
mov
pusha
adc
ret
jp
or
shrb
test
mov
mov
push
jae
fnsave
xchg
les
hlt
pusha
push
xor
push
arpl
cmp
fdivl
pop
mov
aaa
jmp
loope
rclb
fdivr
bound
or
jmp
hlt
adc
dec
jo
shlb
xchg
push
iret
outsb
sbb
shll
mov
aam
stc
into
sub
lahf
ret
out
ljmp
hlt
push
decb
loope
add
testl
cld
outsl
int3
mov
cmp
fdivp
mov
sbb
je
dec
outsl
mov
xlat
sub
arpl
test
xchg
jb
enter
adc
xor
mov
ljmp
jg
push
test
sbb
jne
jnp
xchg
nop
les
sub
fwait
dec
stos
xchg
cmp
jle
dec
js
push
mov
dec
into
clc
fsubrp
sbb
or
cmp
sub
jle
dec
js
push
mov
dec
into
clc
fsubrp
cs
push
push
and
sub
pop
jle
dec
jl
push
mov
dec
into
icebp
fmull
cld
cmp
paddusb
push
into
clc
fisubrs
and
sahf
fistps
andb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
adc
add
xor
and
cltd
or
xor
inc
outsb
ja
leave
test
aam
xlat
hlt
out
notl
add
xor
and
push
inc
inc
push
je
sete
movsb
mov
stos
xlat
hlt
out
notl
add
xor
and
push
inc
inc
push
je
fs
xchg
aam
stos
addb
pusha
pop
xor
dec
aaa
popf
addr16
push
jg
pushf
cld
cmc
fs
loop
outsb
gs
nop
addb
pop
push
lahf
push
inc
inc
rorb
repz
mov
shrl
mov
cmpsb
inc
pop
or
xor
xor
dec
xor
call
sbb
mov
dec
adc
add
pop
pusha
jae
push
push
icebp
or
add
and
push
sub
test
ja
shl
jmp
in
aam
fstpt
testl
fnstenv
movsb
out
or
cmp
divl
scas
ja
inc
mov
stc
outsl
fs
xchg
je
dec
pop
mov
mov
fs
pop
add
xor
and
push
inc
inc
push
je
fs
xchg
aam
xlat
hlt
out
sahf
push
add
pop
daa
dec
aaa
push
and
adc
and
fadd
aad
les
jno
popa
jb
inc
dec
aaa
push
sub
sbb
ss
int3
aad
mov
movsb
rcl
test
xchg
cwtl
jno
add
pop
push
dec
push
sbb
push
je
fs
xchg
aam
xlat
hlt
out
notl
add
xor
and
push
inc
inc
push
je
fs
xchg
aam
xlat
hlt
out
notl
and
lret
stos
xor
lahf
call
mov
mov
popf
rclb
mov
and
out
addb
adc
cmp
push
mov
mov
into
sbb
sbb
fwait
jns
adc
xchg
jmp
ljmp
pop
sbb
push
outsb
jge
je
mov
insl
and
dec
jecxz
aaa
das
out
sub
mov
les
ss
or
enter
jns
out
lea
outsl
cmpsl
fisttpl
pop
jo
cwtl
mov
test
outsb
and
test
enter
and
xor
data16
adc
aam
in
leave
or
sub
dec
xor
fs
test
in
lods
sbb
mov
push
fsubs
xor
je
movsl
mov
add
rcll
nop
movsb
inc
sbb
mov
dec
adc
cltd
push
bound
fprem1
fsubl
sub
movsl
pop
mov
lods
cltd
mov
movsl
sub
push
test
mov
mov
mov
inc
popf
loopne
filds
push
push
xor
cltd
int3
jmp
stos
mov
inc
divl
test
inc
test
in
arpl
in
roll
adc
or
inc
insl
emms
out
add
mov
inc
insb
in
out
jge
fmull
lods
push
or
dec
lahf
adc
mov
popf
jp
push
decl
adc
mov
xor
rcr
test
orl
testl
rolb
pop
test
inc
unpckhps
fwait
sub
hlt
cmp
cmpsl
shl
mov
mov
or
pop
dec
cmp
or
sub
cmpsb
insl
jge
int
dec
sub
mov
fdivl
cwtl
jl
adc
add
loope
int3
test
pop
cld
mov
lds
push
xor
fisubrs
pop
cmp
loopne
testl
fists
fmull
rorl
imul
push
test
lcall
inc
adcb
out
cmpsb
push
dec
mov
imul
lds
pushf
mov
int3
call
sbb
data16
sbb
push
inc
mov
out
into
mov
arpl
fs
enter
jae
cmc
cmpsb
shlb
mov
dec
enter
sub
jno
inc
scas
jecxz
mov
push
push
jb
sbb
lahf
inc
pop
fcom
and
jl
ljmp
aas
mov
dec
lock
int
orl
or
sub
rorl
sbb
sub
or
jle
add
dec
sub
cs
fs
and
test
cmp
dec
fdiv
adc
sahf
dec
addb
cmp
xor
fbstp
imul
into
std
and
xor
push
xor
xchg
shr
int3
cmc
popa
sarb
add
cltd
rcrl
std
inc
je
mov
jns
mov
dec
jno
lret
xchg
inc
ret
sub
cmp
push
rorl
cltd
enter
push
imull
cs
lods
mov
or
fsqrt
scas
pop
mov
hlt
xchg
mov
xchg
loope
mov
test
in
ds
xchg
cmp
rcrl
out
stos
mov
lret
ret
add
dec
test
xchg
dec
loope
dec
cmpsb
xor
mov
mov
mov
out
dec
fcmovne
test
add
mov
mov
das
xor
ja
or
xchg
mov
sub
clc
outsb
mov
pop
pop
in
inc
icebp
enter
mov
jecxz
lret
add
jg
pop
push
out
rol
or
enter
cmp
lock
adc
scas
mov
mov
push
jl
test
mov
cwtl
mov
movsb
jne
out
push
sub
pop
pop
dec
orl
inc
sub
insl
stos
subl
add
cmp
outsb
push
mov
inc
in
xchg
sbb
fisttps
add
pop
rorb
cmp
jae
dec
push
or
int
test
mov
xlat
jno
ficomps
or
inc
js
inc
sbb
sbb
pop
or
sbb
fsubr
adcl
vmrun
test
rcrb
and
fmuls
mov
push
aaa
in
fst
test
aas
sub
and
sub
shlb
rclb
xor
mov
outsl
xchg
das
dec
popa
andb
pop
sbb
mov
in
jne
xchg
pop
in
lcall
mov
int3
pop
scas
movsb
mov
in
pop
cltd
loope
rol
test
or
cld
add
push
and
mov
mov
xchg
dec
inc
xchg
pushf
stos
sub
jno
xchg
mov
inc
jle
pop
dec
dec
push
dec
mov
adc
loopne
stos
outsl
and
mov
mov
sub
mov
or
sbb
in
xchg
pop
cmp
sbb
mov
push
jne
adc
int
rolb
pop
xchg
push
leave
cmpl
fldenv
mul
in
js
cmp
push
aas
inc
popa
xchg
pop
int
cs
fs
into
jecxz
divl
pusha
or
movsl
sbb
or
addr16
lcall
and
cmp
aaa
adc
mov
jp
jno
jbe
inc
addr16
jle
inc
cld
std
adc
movups
ucomiss
cmpsl
or
jmp
jmp
cltd
in
add
mov
dec
cs
or
inc
ja
jmp
popf
into
sub
pushf
dec
mov
rolb
les
push
or
int
roll
mov
jecxz
xchg
lds
fcomip
lods
les
jmp
inc
cmp
inc
dec
lea
and
pop
jmp
fsubrl
ds
xchg
pop
pop
insb
sbbb
stos
sbb
mov
and
dec
push
test
pop
mov
mov
jg
dec
in
or
inc
cmp
dec
pop
push
xor
popa
mov
test
and
nop
xor
je
push
aas
int
push
lea
xchg
cmpsb
movsb
aam
jo
call
push
jns
pop
sbb
sub
stos
movsb
and
inc
push
es
dec
int
push
js
hlt
sahf
repz
notb
xchg
scas
sub
mov
xor
inc
xchg
fs
lods
pop
push
loop
dec
xchg
and
jb
leave
test
in
iret
out
and
mov
roll
popf
cmp
repz
inc
mov
push
das
les
mov
lahf
mov
mov
leave
xor
pop
mov
mov
pop
sub
push
push
adc
lods
out
bound
jge,pt
xor
xchg
xor
add
pop
in
xchg
iret
inc
jae
xchg
cmp
add
dec
outsl
jbe
mov
ss
adc
rclb
ss
dec
inc
dec
dec
mov
sti
fs
and
sbb
dec
adc
repnz
sub
xchg
jno
mov
mov
sar
int3
lcall
jo
and
jns
sub
cmc
push
lea
repz
std
cld
lock
sub
or
sbb
inc
rol
fs
lret
mov
cmp
addr16
pop
fisubrs
popa
fadds
or
repz
jecxz
mov
fbstp
jp
lahf
jl
incb
xchg
xlat
repz
push
frstor
xor
jb
and
aaa
imul
inc
gs
inc
test
xor
push
fisubs
rorl
imul
ja
mov
adc
dec
fisttpll
sbb
push
test
aam
dec
jns
mov
pop
mov
shlb
push
pop
js
adc
lods
mov
into
jl
xor
xchg
sub
mov
jge
mov
mov
dec
xchg
mov
repnz
cmp
movsb
out
repz
ret
lds
arpl
push
xor
pop
aam
push
ss
jb
test
xchg
rol
test
nop
mov
insl
add
mov
mov
add
dec
dec
orl
ss
pop
rolb
push
add
sbb
aas
inc
daa
lea
mov
fldl
cmpsl
sbb
xchg
rcrb
ss
and
int3
seta
cmpsl
lret
mov
int3
add
fwait
xchg
into
pop
mov
pop
add
cmp
out
popa
shrl
enter
xor
jb
lcall
dec
loop
nop
insl
in
dec
jno
sbb
lds
pop
jl
aad
jg
scas
pop
call
fbld
pop
mov
inc
lret
dec
fdivrs
jns
add
ljmp
int
ret
mov
mov
addr16
or
push
mov
mov
xor
andl
and
mov
lret
xchg
xor
lahf
stos
mov
adc
fimuls
aaa
out
xchg
iret
lcall
lcall
jnp
jne
out
mov
int3
lret
jbe
mov
or
adc
and
scas
insb
lret
cmpsl
rcll
iret
mov
jo
xchg
clc
xor
dec
stos
fiadds
adc
pop
test
mov
adc
in
mov
or
sub
sub
dec
sbb
xchg
jecxz
jecxz
sahf
xchg
mov
mov
cli
int
std
ret
addr16
push
in
pop
mov
and
out
or
cmp
shrl
xor
or
stos
cmpsb
out
lods
data16
xchg
pop
inc
jge
adc
mov
jo
xchg
leave
popa
cmpsl
jecxz
fcoml
shll
ficoms
jb
and
aas
xor
jp
jp
sbb
mov
sub
cmp
mov
rcll
repz
out
cmp
or
lods
and
scas
jne
push
out
xor
cmp
inc
loop
push
inc
mov
xchg
push
inc
cmp
mov
inc
push
mov
sti
jmp
stos
push
test
mov
jns
addr16
mov
mov
dec
lret
sub
pop
xchg
dec
jnp
inc
jne
cmpsb
imul
stc
dec
mov
and
cmp
jle
clc
cmp
das
mov
dec
loope
or
sarl
ret
mov
adc
ds
add
pop
lods
pusha
and
es
mov
std
aaa
lods
cwtl
test
and
cmp
add
inc
xchg
sti
pop
int3
lret
lcall
add
pushf
out
hlt
lahf
xchg
movl
mov
frstor
pusha
pop
dec
out
mov
popf
push
loope
xlat
fsubrl
pop
xor
lods
xchg
lods
test
inc
ret
out
lret
adcl
pop
aas
imul
adc
aaa
insl
into
cwtl
inc
cli
pop
fst
push
sbb
repnz
fdivrp
int3
cmpsl
push
mov
andl
iret
btr
repz
cmpsl
mov
jl
fstpt
addr16
lock
filds
shlb
clc
pop
inc
xchg
push
inc
sahf
push
or
xchg
cmp
and
jb
cmpsl
arpl
sarl
xor
cmp
fs
je
leave
or
pop
aas
mov
add
mov
add
mov
push
push
je
pop
inc
movsb
inc
rcrl
fwait
je
dec
dec
test
sbb
pop
adc
jge
jns
xchg
call
jnp
jne
inc
xor
adc
add
mov
xor
scas
clc
or
pop
call
xor
in
outsb
rcr
ret
aad
call
scas
jecxz
ja
push
scas
roll
lret
stc
roll
sbb
popa
loop
or
add
lds
pop
mov
enter
xor
cmp
mov
ret
sub
or
mull
adc
jg
xor
lods
outsl
push
inc
or
scas
adc
mov
cmc
cli
stc
insb
out
ret
fninit
outsl
adc
pop
pusha
jecxz
loope
xchg
mov
cwtl
and
gs
xchg
data16
or
xchg
inc
adc
sbb
lock
dec
mov
popf
leave
call
sbb
clc
add
fnstsw
sbb
aaa
sbb
sub
test
push
xchg
mov
cmp
or
adc
into
jge
aam
sarl
cmpsl
and
pop
imul
jb
fucom
mov
fld
adc
mov
jecxz
pushf
cs
add
rorb
lock
scas
push
adc
mov
inc
or
fisubrl
fistpll
sub
push
push
ret
dec
mov
cmp
dec
gs
fwait
jnp
sahf
lcall
jge
push
fdivrs
mov
cmpsb
jl
mov
pop
rorb
repnz
insb
out
sbb
std
push
mov
or
mov
lret
sbb
popa
scas
adc
insl
inc
add
inc
arpl
dec
loope
inc
jecxz
bound
jp
movsl
xchg
or
out
pop
inc
mov
push
mov
cmp
xchg
nop
xchg
jb
rclb
sub
inc
dec
std
clc
rcrl
xchg
fisttps
inc
mov
xor
out
mov
out
dec
xor
adc
add
jmp
popa
outsb
mov
sbb
dec
lret
mov
xor
dec
sbb
sub
test
jb
lods
hlt
xor
jno
and
or
add
push
iret
out
xchg
xlat
sub
xchg
ret
sub
mov
mov
mov
dec
subl
jmp
sub
dec
and
mov
rcrb
inc
mov
lds
add
fisubl
lcall
pop
ja
jmp
inc
lahf
inc
fsubrl
lock
xor
out
xor
mov
out
stos
mov
dec
inc
fadds
add
push
and
pop
xchg
sub
pusha
fmull
mov
mov
xor
sub
sbb
jae
fistps
jns
adc
imul
int3
pop
mov
cs
cwtl
cld
sti
fstpl
push
xor
xor
mov
pop
lret
ljmp
rcl
repnz
fcmovnbe
xor
mov
je
insb
cmovnp
das
or
xor
and
push
stc
lahf
aam
or
popf
push
imulb
out
loopne
test
push
jae
dec
inc
notl
adc
or
into
test
push
out
mov
test
aad
insb
in
iret
mov
inc
jne
test
or
jmp
test
movb
push
cld
ret
rolb
add
jmp
push
sbbb
cld
push
adc
pop
into
in
fldenv
jl
pop
mov
aad
sbb
cld
lds
xor
add
mov
mov
push
fmull
dec
loopne
mov
sbb
mov
add
stos
cld
mov
insl
push
push
hlt
insb
rcr
repz
push
push
sbb
sub
sarb
test
mov
jno
cmp
frstor
into
insb
aas
push
mov
lahf
mov
inc
push
lret
and
pop
popf
or
dec
xor
jns
push
popa
in
adc
in
mov
mov
int3
adc
pop
cmpsl
cmp
int3
cmp
fisttps
fwait
jnp
test
inc
xlat
add
daa
jl
daa
cltd
aam
rolb
loope
xchg
fmuls
jg
lahf
daa
pop
jae,pt
dec
sbb
mov
les
repz
push
clc
pop
mov
push
idivl
cld
push
xchg
addr16
insb
scas
lcall
idivl
adc
call
imul
dec
into
into
push
push
sub
sub
mov
sbb
cwtl
inc
lock
pop
cmp
cmp
adc
xchg
jmp
js
ret
hlt
fiadds
repz
lret
int
cmp
pop
lahf
dec
sbb
adc
and
sbb
movsb
lcall
mov
aad
cmpsl
pop
dec
into
xchg
insl
int
jne
aad
lcall
pop
inc
outsb
push
adc
lahf
ljmp
sarl
aad
mov
test
enter
out
adc
cmpsb
and
dec
clc
adc
sub
dec
xor
fsubl
les
add
les
push
pop
enter
mov
xor
loopne
ret
mov
insl
add
incl
push
mov
enter
adc
out
loopne
fildl
adc
aaa
mov
icebp
in
push
jns
rolb
int3
mov
jno
jbe
dec
movsl
adc
scas
das
mov
dec
sbb
cs
push
cli
imul
jae
rclb
xchg
cmp
mov
dec
and
inc
mov
cs
sbb
jae
stos
xor
iret
hlt
sbbb
into
jo
or
test
int
pop
inc
mov
xchg
mov
call
movsl
shl
mov
xor
out
outsl
cmp
sarb
sar
push
ljmp
roll
loop
xor
mov
ja
adc
inc
dec
sti
push
mov
sbb
or
dec
push
arpl
subb
push
inc
ret
mov
mov
aas
ss
das
cli
inc
add
sti
and
pop
dec
mov
fcom
and
adc
mov
jp
xlat
data16
int
clc
cmpsl
insl
and
and
les
and
mov
test
inc
insl
mov
sahf
mov
js
jnp
aaa
xor
loope
sbbb
push
nop
cmpsb
mov
sub
push
js
push
je
xor
push
add
mov
fwait
les
xor
rcrb
div
les
into
loope
and
fucomi
push
vdivpd
mov
pop
xchg
mov
int
cld
jbe
push
jnp
stos
lock
mov
icebp
lret
pop
xor
outsb
push
test
mov
cli
into
imul
out
lods
add
xor
xorl
add
mov
dec
subb
xor
jnp
hlt
xor
rolb
shll
outsb
fidivl
lret
push
jnp,pt
in
mov
loop
mov
pop
mov
xchg
je
or
push
fstps
dec
jae
adc
sub
jb
mov
adc
mov
sub
repz
mov
push
mov
mov
pusha
arpl
je
testb
sub
cmp
lods
xlat
sbb
lret
arpl
in
lock
mov
fcompp
inc
mov
pop
inc
and
outsl
into
movhps
hlt
sbb
in
out
jne
or
jmp
loope
adc
lock
repz
mov
clc
jo
push
loop
or
adc
dec
cmpsl
repnz
sub
aam
filds
pusha
mov
or
mov
je
lods
daa
lds
cmc
repz
push
je
and
mov
or
and
xor
pop
mov
dec
push
mov
clc
pop
mov
test
push
dec
insb
aas
mov
xorl
pop
in
popa
call
jmp
loop
in
mov
jb
lahf
cmc
xchg
xchg
or
jns
fnsave
inc
xor
mov
ds
jb
sub
adc
ret
xchg
stc
dec
sub
lods
popf
pop
testb
pop
icebp
cmc
mov
ja
ja
xchg
inc
jl
xor
cmpb
and
xor
lea
xlat
jp
push
rol
or
ja
shr
push
mov
cmp
fwait
test
sbb
mov
sbbb
xor
lret
cmp
sub
and
sahf
jg
fucom
stos
cmpsb
adc
imulb
push
mov
imul
clc
test
cmpsb
bound
call
fnsave
test
bound
cmpb
ret
aad
fstpt
cli
shlb
fsubrl
sub
mov
sub
outsl
lods
jne
sub
xchg
into
nop
mull
ljmp
sub
dec
ret
cmc
mov
mov
addl
jb
fwait
push
jp
lcall
leave
inc
inc
and
dec
shll
inc
inc
hlt
les
xor
sbb
lea
pop
push
mov
mov
pop
xchg
push
inc
adc
jle
loope
push
leave
dec
mov
inc
stc
ret
xchg
ret
dec
das
inc
push
and
dec
sti
mov
sbb
adc
jp
pop
scas
mov
push
mov
fidivrl
adc
fdivrl
cmp
loope
call
fimull
ds
pop
mov
loop
loope
jmp
ja,pt
and
cmc
pop
out
xor
imul
mov
push
scas
push
cmp
push
ja
mov
mov
outsb
and
push
arpl
jno
sub
add
jp
rcrb
mov
js
push
fs
adc
and
lea
mov
sub
loop
sub
cmp
dec
out
mov
hlt
dec
dec
mov
mov
fucomip
mov
push
fistpll
loopne
mov
pusha
lds
hlt
loopne
sbb
outsl
pop
je
adc
xor
mov
xchg
push
xor
inc
inc
push
je
fs
xchg
aam
xlat
hlt
out
notl
add
xor
and
push
inc
inc
push
je
fs
xchg
aam
xlat
hlt
out
notl
test
mov
and
aam
inc
push
je
in
xchg
xchg
aam
xlat
hlt
out
notl
add
xor
and
push
inc
inc
push
je
fs
xchg
movsb
dec
mov
test
xchg
or
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
dec
pop
pop
and
adc
cli
enter
test
mov
fwait
push
dec
pop
pop
sub
cmp
or
sbb
out
sti
enter
test
mov
fwait
push
push
pop
inc
sub
cmp
or
sbb
call
mov
scas
test
lret
iret
lret
stc
icebp
hlt
sbb
sbb
dec
xor
jecxz
cli
jecxz
xchg
hlt
and
shll
and
je
loop
imul
sub
enter
in
adc
add
dec
mov
arpl
js
add
mov
inc
inc
push
jmp
sti
fsubs
xor
or
pop
test
sub
sub
sbb
sub
push
clc
xchg
mov
mov
out
std
test
mov
das
xlat
jmp
dec
hlt
add
add
xor
clc
test
cwtl
push
push
xchg
orb
mov
roll
mov
or
cmpl
dec
sub
dec
mov
imul
pop
sub
cmp
or
sbb
call
rcr
ret
mov
lcall
push
ds
sub
addr16
jle
test
mov
in
in
negl
add
sub
sbb
jg
sub
scas
fcomp
pop
fcmovnu
mov
packssdw
push
das
cmp
cmp
or
sbb
jmp
sti
enter
test
mov
fwait
push
dec
pop
pop
sub
cmp
or
sbb
call
lret
fcomp
test
mov
fwait
push
int3
daa
pop
clc
mov
xchg
jb
pop
not
mov
sbbl
lret
or
ror
sbb
lcall
sbb
cmp
movsl
sub
fidivrl
jecxz
push
mov
jns
pop
adc
popa
movsl
xchg
loope
fdivl
add
or
adc
xchg
push
cmp
dec
xchg
cmc
lods
test
cmp
and
gs
add
mov
ds
dec
jo
jno
dec
lods
inc
fwait
lea
xor
add
sub
popf
das
pop
xchg
push
fistps
sub
mov
fistl
mov
and
mov
outsl
mov
push
cltd
rcl
lods
xchg
call
ret
and
out
or
lcall
pop
and
cltd
call
or
daa
fwait
xchg
js
mov
test
jmp
mov
jmp
test
or
mov
fisubrl
clc
mov
add
xor
faddl
lret
test
and
es
daa
dec
or
cltd
dec
addr16
jecxz
push
lahf
pop
jb
cmc
out
outsl
fistl
pop
and
into
ror
mov
sub
stos
pop
pop
xchg
dec
xchg
inc
or
jp
int
adc
push
repz
into
std
lcall
outsl
xchg
scas
and
sub
ret
mov
lods
je
out
in
adc
xchg
add
cmp
xchg
and
and
xlat
xchg
sbb
sub
adc
xchg
testb
cmc
cld
cwtl
insl
push
je
imul
hlt
pop
dec
in
pop
inc
pop
fsubr
and
mov
sbb
int3
dec
cwtl
sarl
jle
mov
addl
mov
push
cmp
popa
lahf
pop
std
cwtl
jbe
sbb
loope
aaa
sbb
lahf
aad
arpl
and
sbb
sbb
mov
or
cmp
inc
jle
vcvtss2sd
dec
jnp
or
ljmp
jg
jno
sbb
dec
xlat
sub
lds
ret
gs
mov
je
pop
fisubs
inc
sahf
daa
sbb
sti
jb
inc
lret
cmp
bnd
pop
mov
fs
nop
out
test
add
in
mov
xchg
push
mov
mov
mov
and
sub
jecxz
jbe
mov
cmp
jle
in
fadds
jne
adc
dec
mov
lret
sbb
call
icebp
mov
push
rcr
inc
jo
cmpsb
into
push
outsb
push
lret
mov
pop
negb
add
or
scas
mov
inc
add
lods
sub
movsl
ds
mov
mul
jg
or
adc
mov
cmp
es
inc
push
cmp
and
in
dec
or
iret
mov
jmp
jnp
sbb
je
push
lret
mov
ret
bound
popa
and
push
adcb
dec
inc
cmpsb
adc
push
dec
jnp
inc
or
decl
xchg
inc
fistl
in
int3
mov
popa
hlt
xor
shlb
mov
mov
fldt
jle
lock
jmp
mov
loop
dec
add
jno
das
inc
jge
pop
mov
scas
fistps
sub
lods
sti
push
insl
gs
and
and
lea
pop
push
arpl
ss
sub
jns
cmp
and
xchg
mov
pop
daa
pop
jbe
xchg
mov
xlat
pop
pop
pop
in
jge
out
imul
cltd
cmpsb
ficomps
add
pop
clc
and
imul
icebp
sbb
outsb
sub
xchg
js
test
pop
shlb
rol
fiaddl
sti
inc
jae
int
xor
inc
ds
stos
adc
imul
cmpsb
xchg
aam
pop
stos
inc
or
popf
call
pop
or
sbb
aad
cmp
or
fsts
sbb
fwait
inc
lcall
cld
fsubl
repz
xchg
and
and
xchg
lds
mov
push
es
add
lds
pop
jmp
notl
out
push
repz
stos
mov
inc
dec
aad
lods
outsb
pushf
dec
mov
int3
outsl
cmpsb
inc
iret
and
inc
push
nop
mov
mov
push
cmpsl
pop
pop
cld
push
cmpsl
adc
in
addr16
dec
repz
addr16
popf
push
mov
mov
sbb
push
lret
fistpll
and
lret
je
lcall
sub
xor
add
jl
xchg
sbb
test
jns
push
scas
sbb
jmp
inc
into
enter
das
pop
cmp
out
ljmp
imul
xchg
inc
movsl
xchg
aad
repnz
in
test
sub
fwait
and
xor
sub
cli
out
mov
push
and
arpl
rol
jbe
or
pushf
lcall
dec
fwait
hlt
pop
aad
push
jg
pop
call
jno
jne
push
lea
xchg
mov
lock
add
push
fnstsw
insl
cmp
push
jecxz
xor
out
and
jge
fldenv
aas
int
clc
mov
mov
jecxz
sahf
int
sub
pop
bound
mov
das
cmc
xor
out
dec
das
sub
cmp
loop
add
pop
mov
lds
add
push
test
mov
sbb
and
xor
roll
stos
nop
js
lahf
push
add
fdiv
pop
inc
jmp
push
lods
lea
lds
fstpt
adc
sub
mov
ret
or
xor
pop
jge
jmp
pop
repz
test
lock
cmc
sbb
sbb
mov
add
lret
cmpsl
push
xor
cmp
sbb
call
and
imul
mov
rcrb
ljmp
push
jno
stos
jl
loop
hlt
and
add
jb
sub
jae
in
pop
adcb
or
and
ja
jmp
aam
dec
out
stos
and
cltd
lods
mov
hlt
mov
sub
mov
mov
lret
cmp
sbb
in
sbb
ret
je
insb
pushf
cwtl
dec
push
jne
mov
or
push
xor
push
and
mov
inc
push
jbe
adc
pop
bound
fmul
xor
xchg
sbb
inc
jg
pop
insl
rorl
sbb
cmp
pusha
aas
cmpsl
cltd
dec
call
xor
cmpsb
fucomi
mov
sub
jae
fiaddl
stc
adcb
xor
push
mulps
push
pop
or
cmpsb
mov
lods
pusha
pop
push
inc
mov
testb
mov
ret
pop
pop
lahf
int3
ds
lods
scas
dec
and
cmpsl
push
cmp
mov
cmpsb
mov
xchg
fnstcw
inc
mov
pop
xchg
mov
filds
out
imul
loop
cmpsl
mov
insb
repz
or
frstor
into
pop
inc
xchg
mov
xor
repnz
sub
out
popa
lcall
aad
push
dec
pop
or
lods
hlt
les
movsb
push
mov
ret
sahf
ret
sbb
mov
cmpsb
popa
enter
test
js
jmp
pop
divl
add
inc
xlat
call
arpl
inc
push
push
cmp
arpl
sub
push
cld
dec
pop
adc
into
aam
pop
loop
clc
xchg
out
mov
sar
mov
xor
pop
pop
push
mov
pop
mov
xchg
xchg
pop
cld
add
dec
das
in
in
cmp
mov
sahf
inc
pop
jmp
adc
or
or
stos
lods
mov
cwtl
test
fwait
jp
popf
repnz
arpl
add
jmp
xorb
in
mov
push
lock
dec
sbb
push
jle
jp
test
lret
xchg
cwtl
std
and
aad
jb
outsb
in
push
dec
pusha
mov
jae
push
or
inc
lret
mov
or
and
int
enter
add
outsl
movb
push
shlb
sbb
xchg
call
cmp
jbe
int3
sbb
adcl
testl
aad
les
fnop
push
cmp
call
shl
nop
es
in
add
pop
scas
sbb
aam
add
sbb
or
or
fcmovnu
sub
dec
mov
push
push
jmp
repnz
xchg
xchg
cmp
imul
dec
outsl
mov
rorb
jecxz
sbbl
ljmp
mov
pusha
out
mov
sbb
popf
das
ss
sub
mov
call
les
pop
cli
and
stos
movsb
and
mov
int3
test
cmc
nop
pop
sbb
in
mov
pop
bound
repnz
mov
pop
test
sbb
inc
pop
jp
mov
sbb
loopne
xor
jl
jno
loopne
sti
ja
out
push
sbb
movsl
push
mov
add
dec
stos
sub
or
nop
lea
and
sahf
jp
test
cwtl
aam
mov
loope
nop
adc
add
cmp
and
or
xchg
mov
leave
shrl
pop
loop
push
inc
and
jecxz
popf
sahf
and
sbbb
adc
shlb
hlt
push
jne
xor
inc
sub
jnp
orl
cld
rorl
pop
sub
test
mov
shl
movsb
mov
mov
stc
push
scas
das
cmp
mov
fbstp
add
loopne
jmp
in
push
cwtl
and
rcll
lods
fwait
push
xchg
xor
mov
or
jns
shrb
mov
adc
stc
dec
and
adc
push
cwtl
lock
lds
or
cwtl
inc
jl
rolb
xchg
in
jns
and
pop
lret
adc
fbstp
nop
sub
outsb
dec
cmc
add
jns
dec
xlat
lahf
subb
add
xchg
mov
jne
int3
xchg
inc
inc
and
and
sbb
enter
jo
and
ja
das
mov
xchg
scas
addr16
test
in
int
int3
dec
std
jle
dec
andb
je
shlb
xchg
mov
xchg
test
inc
icebp
jle
mov
int
xor
mov
adcl
push
jae
fsubrl
sbb
ds
inc
pop
in
mov
stos
push
into
sub
shlb
inc
jg
test
outsl
call
rcrl
push
out
cmp
fldenv
jns
fdivl
dec
loopne
jl
sbb
insb
cmpsb
push
push
sbb
adc
test
out
push
and
mov
push
fcmovnb
dec
add
imul
sub
jl
cs
mov
mov
xchg
add
pushf
lods
inc
jno
sbb
std
jg
adc
imul
scas
movsb
lret
mov
push
and
sbb
add
sub
jb
pop
mov
out
mov
sti
cmp
scas
testb
cmp
pop
cmp
cmp
mov
shl
ss
or
fstl
das
xchg
mov
fcoms
push
mov
sti
lret
mov
arpl
cmp
stos
mov
and
fbld
push
xor
popf
xorb
cmp
insb
push
xor
sbb
ret
mov
xchg
test
xor
mov
push
fldcw
push
sti
inc
adc
aad
add
adc
dec
sbbb
scas
stos
mov
push
pop
cltd
xchg
cwtl
popa
and
in
aam
adc
sbb
pop
push
sbb
test
jecxz
lock
sub
mov
ja
push
dec
fs
je
push
loopne
icebp
add
pop
fwait
inc
add
idivl
neg
notb
jp
imul
dec
iret
pop
gs
pusha
push
cld
into
adc
cmp
stc
xor
in
sub
es
mov
inc
stos
mov
iret
mov
scas
mov
hlt
add
cmp
dec
and
mov
cmpl
movsb
lcall
add
xor
mov
pop
jnp
jg
cmp
outsl
jb
jns
adc
jno
inc
pop
test
test
mov
mov
xlat
sub
xor
dec
cli
mov
jns
lret
push
dec
cmp
ljmp
test
pushw
fsubl
mov
sub
data16
cmp
sub
fwait
inc
ror
rcrl
in
xchg
dec
sahf
dec
jg
roll
jnp
sub
dec
sti
jge
jp
cmp
inc
adc
lret
stc
enter
lahf
fwait
aad
xor
insl
int3
icebp
out
dec
xor
sub
out
jb
mov
jo
xor
addr16
arpl
lods
mov
or
aam
dec
dec
pop
inc
pusha
push
cld
mov
pop
sub
xchg
mov
pushf
pop
js
or
push
out
imul
into
dec
fs
cmp
loop
cli
jno
test
mov
and
pop
das
or
mov
jo
repz
mov
pop
fcmovu
test
call
fmuls
mov
loope
mov
and
loope
cs
add
hlt
imul
in
je
pop
mov
in
clc
rcr
das
lret
mov
inc
lcall
imul
fnsave
push
repnz
add
adc
cli
and
push
mov
test
dec
jl
sub
or
into
imul
mov
mov
in
xchg
xor
repnz
push
add
mov
cmp
mov
inc
mov
paddd
and
jbe
je
arpl
leave
xlat
dec
xor
sub
sbb
out
sarl
xchg
int3
cs
pop
cmp
push
call
pop
in
dec
and
outsl
mov
sub
push
lahf
dec
add
adc
data16
add
fdivs
lds
push
xor
adc
xchg
call
cmp
sbb
leave
int
xor
xchg
nop
inc
sti
js
cmp
xchg
mov
cli
minps
in
out
in
pop
add
shl
in
pushf
stos
sbb
inc
pop
in
sub
add
adc
push
jbe
adc
push
aam
pop
dec
or
fisubrs
jle
gs
inc
test
inc
sar
shlb
sbb
repnz
xchg
jns
inc
ret
int
call
sbb
adc
xchg
out
cmp
movsb
test
sbb
push
lret
scas
ret
mov
shlb
popf
std
insb
cmp
lock
dec
and
test
xchg
mov
pop
mov
add
add
int
fs
mov
mov
ds
jl
fdivl
mov
jae
jle
popa
stos
lds
pop
test
add
insb
test
cmp
jne
ds
js
dec
pop
sub
push
out
sbb
inc
int3
insb
mov
sub
dec
cld
imul
movsl
fistpl
cli
loopne
pop
push
nop
xlat
add
test
mov
xchg
adc
sub
int3
or
in
repz
das
addr16
ficoms
fisubl
lods
cld
fwait
nop
mov
xor
outsb
cmp
add
xchg
inc
jae
push
outsb
sub
xchg
stos
or
mov
or
push
cmp
xor
lret
mov
or
ljmp
pop
imul
inc
int3
xchg
es
test
push
xlat
xchg
icebp
cltd
mov
or
loop
loop
adc
inc
sbb
mov
int
addr16
hlt
imul
push
jbe
cmp
sub
cmpsl
sbb
out
sub
pop
outsl
repnz
adc
jo
popf
mov
stc
cs
adc
pop
std
cmp
mov
add
fs
lods
test
dec
xchg
inc
jg
data16
popf
and
out
std
imul
adc
sbb
in
mov
xchg
dec
mov
xchg
vmwrite
or
test
cmp
adc
iret
aas
mov
xor
sub
inc
push
and
addr16
sarb
xchg
jmp
add
pop
ja
adc
loopne
or
das
popf
rcll
adc
dec
mov
test
xchg
adc
hlt
xlat
mov
mov
push
sub
subb
shrl
inc
jge
cwtl
das
sbb
push
in
movsb
mov
je
hlt
daa
js
xchg
push
or
dec
repz
jae
mov
sub
lock
jecxz
inc
mov
jae
loop
push
mov
sti
out
js
dec
dec
mov
repz
sub
xchg
es
and
jbe
pop
fs
fdiv
in
pop
jg
adc
je
nop
arpl
ret
inc
ljmp
lea
sbb
std
adc
sub
jno
add
nop
int
push
call
push
movsb
std
int3
push
jge
call
mov
sbb
pushf
add
mov
outsl
cmp
daa
xchg
test
mov
in
cmpsl
mov
test
cmp
shll
out
in
mov
icebp
stc
orl
fldenv
mov
add
push
and
in
xchg
sbb
idivb
adc
movsb
mov
inc
out
xchg
cmp
xor
xor
push
addl
clc
leave
dec
mov
pop
pop
xchg
mov
lea
dec
dec
daa
xchg
gs
cltd
dec
mov
aaa
ret
push
aas
and
or
push
dec
push
cwtl
mov
and
cmpsb
add
pop
aaa
sbb
jp
push
mov
movsl
ss
lcall
and
xlat
push
add
shlb
cmc
iret
sub
pop
sbb
in
sbb
insl
lret
insb
test
add
sub
or
add
bound
pop
out
cmpb
push
jns
dec
ret
xchg
ret
lock
cmp
call
jbe
jl
pop
outsl
push
scas
push
aas
or
jno
enter
aaa
xchg
cwtl
cs
inc
aad
sbbb
flds
in
xchg
movsl
lds
int3
stc
cld
pop
hlt
adc
inc
add
dec
or
xchg
lcall
sub
push
jne
jg
or
dec
or
cmp
mov
xor
mov
ficoml
jle
shlb
jl
mov
cmp
mov
cmp
adc
movd
dec
ljmp
mov
fsubrs
loope
cvttps2pi
and
dec
xor
dec
adc
popf
test
lods
mov
push
dec
andb
leave
jecxz
scas
jl
lods
loope
cmp
sub
ret
out
enter
pop
insl
xchg
fildl
mov
mov
push
lods
xchg
iret
ds
mov
push
cltd
and
xchg
add
inc
mov
pavgw
ja
jbe
ret
mov
jae
mov
lods
mov
sub
inc
idiv
ljmp
enter
popf
push
jl
or
push
sbb
sarb
jne
sbb
insb
sub
stc
jp
das
stos
jge
lds
fmuls
push
lahf
std
adc
xchg
xor
es
cmp
inc
cmp
pop
shrb
dec
loope
popf
jmp
mov
jp
test
or
jge
in
push
cmp
pop
fimuls
je
xchg
jmp
xchg
bound
cmpsb
pop
sbb
sbb
mov
xor
mov
xor
stos
xchg
data16
jb
mov
push
and
xchg
push
or
fsubr
repz
pop
sub
fisttpll
bound
push
sbbb
dec
fnstsw
sbb
loopne
xor
pop
mov
lods
cmpsb
jo
gs
popf
cmp
out
loopne
pop
fstps
insl
sarb
sub
int
cwtl
pop
movd
and
dec
dec
and
test
outsb
xchg
shll
das
in
mov
out
push
bound
cmp
fldcw
cmpsl
dec
xchg
sahf
jbe
and
push
push
xlat
stos
mull
mov
mov
ret
jns
inc
xchg
mov
addb
imul
dec
or
sub
sbb
mov
sti
lcall
push
mov
cmp
in
or
test
push
fcompl
cltd
cmp
nop
fcmovne
cmp
or
into
rclb
pop
pop
lahf
xchg
in
pop
stos
jmp
adc
adc
sbb
std
and
jge
push
fsubrl
stos
lea
adc
pop
ja
cmpsl
mov
mov
test
or
fisubl
aam
movsb
inc
and
cwtl
add
loope
addb
cmp
jno
mov
adc
loopne
adc
iret
jbe,pn
push
cmp
scas
out
add
xor
stos
js
cli
cmp
insl
xchg
cli
cltd
aam
mov
cmp
mov
dec
pop
pop
sub
cmp
or
sbb
call
lret
fcomp
test
mov
fwait
push
dec
pop
pop
sub
cmp
or
sbb
call
lret
fcomp
test
mov
fwait
push
dec
pop
pop
sub
cmp
or
sbb
jmp
lret
test
mov
lahf
push
dec
pop
pop
sub
cmp
mov
cwtl
fistl
jmp
push
lret
fsubrs
hlt
pusha
in
in
or
cmp
sub
push
stc
cmp
pop
fimuls
popf
lcall
pop
fisubrl
ljmp
int
fstpl
dec
mov
lcall
pop
fisubrl
ljmp
int
fstpl
dec
mov
lcall
pop
mov
test
sbb
dec
test
dec
jl
mov
sub
stc
or
ja
stos
aam
in
mov
jo
into
inc
jno
pushf
xchg
insb
shlb
and
or
subl
add
pop
ss
mov
inc
dec
rcrb
repnz
adc
cld
dec
int3
stos
leave
pop
lods
pop
lods
test
lcall
mov
cli
repz
add
adc
loope
inc
inc
jnp
imul
sub
stos
mov
outsb
push
in
js
or
dec
in
xor
mov
inc
loope
lret
insb
inc
dec
out
pop
out
lret
leave
cli
sbb
std
cmp
sub
pop
lods
dec
mov
lcall
pop
fisubrl
ljmp
mov
ss
pop
call
mov
and
xor
mov
mov
int
mov
es
jp
push
ljmp
mov
sti
sbb
xor
js
jae
mov
sub
jp
push
lcall
pop
fisubrl
ljmp
int
fstpl
dec
mov
lcall
pop
fisubrl
ljmp
aas
push
or
push
jne
repz
mov
push
add
cmp
jae
ret
dec
sub
rolb
ret
adc
adc
sub
ljmp
mov
cmp
push
and
stc
leave
stos
sti
adc
rcll
sbb
fsub
test
inc
push
push
push
ds
jle
jmp
je
fisubrs
mov
call
data16
rcll
cmp
jmp
mov
inc
xchg
js
mov
dec
mov
mov
sbb
cwtl
adc
aam
mov
jl,pn
or
dec
jb
xor
cwtl
ret
js
dec
dec
stc
sbb
fldcw
cmp
inc
mov
cltd
aad
sbb
orl
inc
into
add
andl
in
sub
int
pop
jbe
jbe
sub
mov
inc
inc
into
mov
push
dec
push
sub
movsl
jmp
call
adc
mov
mov
mov
pop
shlb
mov
lcall
popa
jl
out
mov
xor
lods
gs
sub
mov
repnz
shl
mov
dec
into
rolb
lahf
add
sub
pop
xchg
lcall
jne
jnp
add
or
push
add
filds
test
stos
mov
repz
push
cmp
in
pop
push
sub
jg
dec
sbb
sub
sub
adc
movsb
insb
cld
mov
mov
scas
jp
testb
xor
add
pop
mov
addr16
arpl
addr16
hlt
xchg
repz
pop
mov
push
xchg
sub
dec
hlt
ficoms
punpcklwd
mov
xchg
jg
sub
ds
xchg
fwait
dec
aad
push
test
add
jnp
fistps
pop
pop
dec
mov
insb
lds
scas
dec
jmp
cmp
jl
and
popf
mov
dec
xor
cmc
dec
xchg
jp
out
jge
imul
gs
call
ss
pop
mov
test
jbe
fwait
jno
xchg
or
jns
jge
sbb
sbb
xchg
rolb
mov
mov
jo
test
clc
lret
xor
sub
push
pop
push
ljmp
pop
int
or
out
andl
mov
mov
adc
jne
jecxz
in
jmp
aad
and
fadd
insl
jp
mov
rclb
mov
or
stos
ret
inc
sbb
cmpsb
jl
insl
inc
mov
xor
in
or
adc
das
sar
dec
scas
push
jo
lock
cmp
mov
idivb
inc
ret
cmp
mov
sahf
mov
pop
arpl
mov
pop
bound
add
das
push
dec
loope
add
xchg
stc
fisubrl
insb
js
lret
push
add
aad
sub
scas
mov
push
lea
add
sub
inc
mov
sub
lret
and
ljmp
fs
outsb
adc
aas
jmp
pop
loopne
rcl
push
push
xchg
hlt
push
mov
mov
test
fstpt
fs
aas
arpl
rol
leave
es
inc
push
fldl
pop
pop
sti
insl
fsubl
mov
pushf
mov
inc
je
xor
push
mov
adc
push
push
mov
icebp
cs
xor
jae
mov
jmp
pop
jno
hlt
mov
push
les
in
jmp
push
push
jle
in
mov
pop
mov
inc
mov
movsb
jle
sbb
fmull
xor
pusha
repz
fstl
enter
inc
sub
je
jmp
ja
add
scas
es
xlat
aam
sbb
jno
leave
mov
lea
fldcw
fmuls
imul
mov
cmp
mov
jp
sub
fsubl
jle
xor
pop
xchg
arpl
cmc
xchg
in
mov
test
push
bts
aad
mov
lea
pop
jnp
cmp
iret
testb
inc
lahf
mov
add
addl
mov
dec
cmp
cmp
mov
fmull
adc
iret
icebp
mov
pushf
inc
stos
sbb
lahf
xchg
add
fdivs
and
test
in
dec
gs
sub
xlat
popa
inc
cltd
sahf
xor
sub
inc
pop
mov
adc
push
push
xchg
add
pop
in
or
es
lods
dec
adc
push
mov
jbe
xchg
lods
mov
pop
clc
inc
ret
inc
cmpsl
fwait
adc
pop
dec
inc
ss
pusha
pop
test
sub
jb
cmp
or
dec
jl
out
inc
ror
das
test
test
ds
pop
pop
cli
mov
test
gs
jb
repnz
shr
stos
adc
lock
das
outsb
iret
push
jp
imul
mov
data16
inc
test
out
lods
or
push
jecxz
adc
jo
xor
mov
fimuls
xchg
cmp
sti
dec
mov
and
imul
mov
daa
adcb
and
test
hlt
leave
pop
pop
sub
push
je
xchg
xchg
jns
popf
js
pop
in
call
stos
fs
aam
pop
xor
push
and
mov
ja
and
jno
je
cli
push
cmpsb
sub
mov
lds
addr16
xor
int3
lock
fdivrl
mov
and
pop
inc
and
imul
rolb
or
dec
ret
cmpsl
or
push
xor
sub
sub
fdivs
or
addr16
xor
mov
jae
cld
js
fisubs
int
sbb
sbb
push
ret
add
mov
iret
push
fstps
cmc
test
scas
mov
aaa
mov
pop
push
dec
or
leave
mov
mov
pop
jo
cmp
push
xchg
loopne
adc
jle
out
loopne
sub
das
std
test
scas
ljmp
mov
int
cltd
call
lahf
dec
mov
ds
fwait
stos
push
mov
cmp
in
into
cmp
xlat
xchg
data16
rcl
loopne
pop
and
ljmp
jle
mov
ds
cld
xor
leave
dec
xchg
aam
xor
or
and
add
pop
into
repz
sub
mov
inc
mov
lret
fisubl
in
repnz
xlat
or
mov
jge
push
mov
icebp
sbb
je
test
in
mov
mov
mov
inc
jp
cli
movsl
das
js
push
out
adc
aad
lods
xchg
lock
dec
sbb
jecxz
aad
test
call
cwtl
stos
or
cli
outsl
nop
pusha
lods
adc
lret
mov
enter
xchg
push
mov
dec
out
test
and
jns
push
inc
ds
push
mov
jp
and
push
xchg
adc
fildll
cmp
jmp
mov
mov
sbb
gs
movsl
sbb
daa
imul
cli
mov
lcall
fsts
mov
bound
and
pop
ds
lds
add
push
sar
into
push
push
mov
jecxz
lods
jb
pop
lcall
mov
xor
std
daa
jecxz
imul
or
dec
mov
cwtl
test
jmp
pusha
push
iret
je
push
fdivl
movsl
xor
pop
repz
mov
rcrb
repz
jge
jb
gs
sbb
popl
fsts
pushf
mov
push
jbe
inc
pop
daa
gs
pop
fwait
push
inc
test
push
imul
cs
fstpt
adc
lods
lds
xor
sub
das
xor
outsl
addr16
xchg
sub
fincstp
std
mov
jo
sbb
pop
iret
pusha
cmp
push
sbb
xor
jp
test
push
mov
push
ret
sbbb
lret
aaa
cmc
xchg
cmp
pop
out
push
push
sahf
mov
xchg
in
lds
or
imul
pop
adc
xchg
pushf
add
push
cli
mov
jle
nop
and
cmpsl
mov
pusha
sub
inc
enter
xchg
pop
push
jp
mov
xchg
test
jg
xchg
cmp
mov
js
push
mov
push
or
adc
scas
ss
inc
adc
nop
lcall
jbe
ss
xchg
cmc
ds
xor
fs
sahf
movsb
lret
jecxz
push
cmc
mov
pop
sub
or
loope,pt
loop
xchg
sub
fdivl
ret
xor
jns
in
clc
push
jo
repnz
xor
fbstp
xor
cmp
inc
xor
test
or
add
cli
adc
packsswb
sub
mov
push
and
xor
cmp
loopne
lods
adc
les
loope
add
rcrb
cld
or
loope
imul
xchg
test
xchg
mov
insl
jne
jge
aad
add
les
js
sbb
inc
xchg
adc
mov
popl
daa
add
jne
inc
cmp
adc
dec
test
pop
xchg
xor
cld
sarl
hlt
inc
dec
pop
into
std
xchg
push
test
test
fsubr
jecxz
inc
aaa
mov
xor
enter
xchg
or
popf
dec
sahf
mov
jecxz
xchg
mov
jl
movsb
test
jo
daa
xchg
stos
jge
inc
push
cld
lret
cld
dec
add
xchg
pop
pop
fildl
cli
aaa
iret
sbb
out
lods
in
mov
loop
cmp
pop
pop
push
push
xchg
and
cmp
jne
sbb
and
inc
sbb
mov
cmp
jae
out
xchg
fwait
js
and
fs
mov
cs
js
int3
mov
subb
jp
xchg
dec
sbbl
imul
push
push
push
lods
dec
imull
cmpl
inc
nop
fidivs
jae
jg
sahf
mov
bound
out
mov
std
pop
rorb
lea
shlb
xlat
scas
negb
not
inc
mov
imul
stc
ds
pop
or
jne
cld
scas
cmpsl
lods
sub
ljmp
dec
loope
and
push
add
or
and
arpl
sub
jno
or
subl
clc
xor
or
test
add
loop
mov
mov
add
lret
jge
inc
add
jnp
dec
xor
fldcw
mov
xor
das
test
mov
das
leave
dec
mov
sti
adc
ret
add
mov
jb
dec
fstpl
fdivl
cmp
js
in
inc
push
and
mov
addr16
pushf
xchg
fyl2xp1
sbb
push
or
xor
lods
sbb
ds
xor
imul
test
mov
ss
std
adc
aad
push
or
addr16
cs
int
lcall
mov
test
mov
xor
cmp
stos
call
xor
sub
in
push
or
xor
jp
xchg
std
push
repz
nopl
jmp
inc
lea
imulb
mov
pop
int3
movb
and
out
cmp
xchg
ja
mov
imul
inc
in
icebp
fs
dec
ret
dec
mov
xor
inc
fwait
loope
jne
and
inc
or
dec
sub
test
std
jae
and
mov
cmp
cmp
movsl
addl
mov
mov
mov
cld
jge
outsb
push
lods
and
stc
xor
stos
and
scas
xor
cwtl
push
inc
inc
push
loope
jmp
or
sbb
sahf
dec
inc
xchg
push
mov
and
cmp
sbb
adc
mov
sbb
push
mov
nop
mov
or
setg
rcrl
sti
mov
xor
xorb
out
jmp
scas
in
sub
les
shll
push
jl
sbb
add
dec
mov
test
cmpsb
add
sbb
jbe
pop
dec
xchg
sub
add
sub
rcr
push
or
add
xchg
out
jmp
adc
jno
cmpsb
sub
decb
addr16
movsl
add
xor
jg
cmp
icebp
dec
mov
mov
ret
xchg
pushf
daa
adc
int
cltd
mov
cmp
dec
sub
js
fdivs
out
cltd
inc
pop
pop
sbb
je
sbb
dec
movsb
cmp
cmpsb
rol
cli
inc
nop
cmp
fsubl
add
loop
mov
mov
arpl
pop
lea
std
popf
ds
push
adc
and
mov
xchg
mov
cmp
pusha
addl
add
pop
mov
mov
mov
pop
mov
ljmp
neg
push
or
and
dec
mov
test
xchg
sbb
xor
or
rorb
mov
jl
js
out
dec
movsl
inc
dec
mov
outsl
loope
cmpsl
pushf
or
idivb
xlat
fsubrl
adc
int3
pop
add
lahf
xor
pusha
in
icebp
sahf
or
jb
aas
dec
imul
dec
add
push
ds
pop
fidivrl
es
out
mov
or
test
arpl
mov
jge
pop
push
std
sbb
xchg
aam
test
jp
jb
mov
push
aas
repz
push
add
enter
mov
ficompl
cs
sbb
or
filds
xchg
lock
sbb
cwtl
scas
popf
jnp
inc
lret
loop
cmp
and
and
push
mov
cmp
adc
and
insb
inc
and
or
dec
cmp
add
mov
mov
sarl
orb
dec
mov
xor
xchg
call
add
divb
insb
outsb
or
out
jne
mov
repnz
mov
jmp
mov
pop
or
aas
fwait
sbb
es
mov
lock
test
or
push
inc
lret
mov
mov
test
int
mov
das
mov
ss
pushf
repz
sub
inc
dec
in
popf
adc
lods
sub
pushf
pop
shrl
out
cmpsl
mov
sub
cmp
scas
jl
dec
test
push
push
pop
or
in
push
jg
or
add
cltd
add
mov
cmp
out
cmp
jg
mov
mov
push
fmuls
cwtl
push
xor
sti
aad
inc
inc
cmpb
out
dec
cmc
adc
fcomip
iret
pop
xlat
ljmp
mov
scas
jmp
aad
int3
mov
cwtl
push
jns
sbb
jmp
and
sbb
or
pop
insb
fdivrl
mov
xor
inc
stos
jmp
push
add
pop
addr16
cmpsb
xchg
arpl
cmp
loope
inc
or
sub
popa
pop
pop
iret
lods
ret
jnp
jb
into
push
insb
aaa
dec
es
mov
mov
mov
outsb
test
cmp
in
xor
cmpsl
vmwrite
dec
clc
push
push
loope
out
cmp
fadd
pop
in
pop
ret
fiadds
fcmovu
sbbb
movsl
cwtl
xchg
inc
aas
lods
and
push
pop
cwtl
mov
lea
push
lods
arpl
stos
data16
fildll
push
enter
pop
sub
mov
dec
repz
popa
pop
add
hlt
pop
sub
xchg
push
lcall
jne
push
ljmp
inc
fidivrl
push
inc
fstps
pop
and
sbb
and
cmpsb
xchg
xor
cwtl
adc
data16
sub
bnd
lret
push
mov
ljmp
mov
je
xor
adc
stos
pop
or
jg
sub
jmp
pushf
and
xchg
movsb
fsubl
jmp
jmp
mov
mov
cmc
push
adc
loop
fdivl
jnp
or
lods
aaa
outsl
orl
mov
std
fcomi
lods
pop
cltd
lock
xor
pop
lcall
rclb
mov
mov
ret
stc
mov
mov
jb
les
cltd
jae
mov
push
or
jge
push
sbb
xchg
scas
nop
and
add
aaa
cmpl
mov
jmp
lock
mov
add
pop
cmpsb
mov
sbb
pop
mov
mov
or
pop
ss
scas
xor
sbbl
cwtl
inc
call
testl
push
and
aaa
dec
pop
aad
test
xor
in
jp
jne
pop
lahf
fcoml
jge
xchg
and
sbb
mov
shlb
mov
jle,pt
jg
push
lods
ds
xchg
in
shll
femms
popf
out
inc
push
mov
ficomps
xor
imul
push
loopne
jae
subb
loope
add
mov
inc
or
insl
sar
fsubr
hlt
pusha
stos
mov
adc
push
sub
add
xchg
mov
fisttpl
xchg
out
nop
sbb
mov
sbb
pusha
out
mov
test
in
pop
fwait
push
das
xor
sbb
cmp
lea
daa
add
add
fwait
mov
push
clc
scas
hlt
vpunpckldq
push
pop
imull
push
adc
jp
mov
jl
cltd
loope
pop
cld
or
gs
push
xchg
aas
xor
cmc
rcl
shlb
cwtl
add
rcl
cmp
jecxz
mov
xor
scas
test
xlat
xor
call
bound
mov
ds
stos
lods
adc
mov
repnz
cmpsl
jge
iret
mov
mov
sbb
sti
lret
push
scas
pop
out
out
mov
sbb
add
xchg
flds
ror
sbb
sbb
or
push
mov
test
cmp
in
aaa
pop
icebp
adc
arpl
data16
fildll
call
fcmovbe
mov
jp
insb
or
jne
xor
mov
push
daa
mov
sti
loope
bound
push
push
or
inc
orb
or
in
es
addl
out
add
adc
fimuls
mov
mov
adc
in
in
xchg
scas
and
pop
push
fistps
and
daa
xchg
pop
cltd
jbe
jo
jle
mov
mov
push
mov
jo
sub
cld
adc
mov
cs
fs
sub
jp
bound
push
ss
lock
jmp
cmp
sbb
mov
jmp
in
cmpsb
imul
add
mov
dec
pop
in
sub
hlt
shrb
nop
call
repnz
insb
cmp
xchg
int
fdivrl
lods
test
mov
and
jmp
ds
popf
xchg
imul
dec
sbb
shlb
std
out
scas
and
insl
pop
sbbb
sub
adc
repnz
out
mov
mov
les
mov
out
push
or
or
add
mov
and
xor
fdivrs
gs
ficoms
sub
fwait
in
add
movsb
adcb
ljmp
in
xor
out
imul
adc
jae
jb
dec
int3
fs
cld
xchg
mov
stos
and
mov
xchg
dec
jp
shlb
test
in
mov
inc
pop
add
dec
movsb
jmp
adc
sub
add
sub
fmull
xchg
mov
outsb
mov
cmpsb
mov
xor
pop
mov
stos
fisttps
adc
jae
andl
lcall
stos
cmp
adc
out
sbb
out
sbb
lea
das
aad
movb
out
fdivr
lcall
out
jbe
pop
push
scas
arpl
pusha
mov
ds
xchg
stos
outsl
out
pop
xor
push
cmp
ja
insl
dec
add
and
jmp
cltd
push
xchg
xchg
and
cs
insb
outsb
or
mov
cmp
std
call
stos
repz
cld
jmp
cmc
cwtl
cmp
pop
or
mov
mov
aad
mov
sub
mov
stos
mov
sbb
loope
sub
ljmp
call
lahf
cltd
xchg
test
add
std
xchg
xchg
in
scas
cmp
push
and
xchg
xor
add
incl
mov
bound
cltd
inc
sbb
cs
sbb
dec
int3
and
cli
shlb
aam
pop
or
inc
fcoml
insb
je
inc
sbb
mov
fdivrl
nop
mov
mov
pop
loope
jbe,pn
sub
jg
cli
xor
negl
dec
or
xchg
adc
jne
lds
or
psubsb
lods
popf
pop
stos
aad
xchg
ja
insl
pusha
jne
loope
ret
add
dec
test
mov
mov
movsl
aaa
xor
aaa
sub
inc
lock
push
add
jl
push
jl
mov
leave
cmpsb
sub
dec
pop
ss
mov
out
push
push
jne
in
mov
fcomi
test
pop
rolb
mov
lret
pop
mov
xchg
pop
mov
mov
int
jle
ljmp
sub
pop
lods
dec
mov
lcall
pop
fisubrl
ljmp
int
fstpl
dec
mov
lcall
pop
fisubrl
ljmp
int
fcompl
dec
mov
lcall
pop
fisubrl
cmp
sbb
or
cmp
sub
pop
lods
dec
cmp
lcall
sub
repnz
nop
mulb
hlt
lock
mov
sbb
data16
inc
push
push
ss
jo
add
lcall
shlb
add
pop
and
push
and
es
xorb
mov
out
test
cmpsb
lock
xor
inc
add
push
je
bound
mov
div
aad
jp
aas
insb
jecxz
cmc
adc
jmp
push
leave
push
and
cmp
arpl
cmp
jp
adc
out
repz
or
fcomp
and
nop
adcl
lock
push
mov
add
arpl
iretw
push
mov
sbb
mov
out
roll
push
cld
inc
out
repnz
mov
push
push
mov
adc
lret
outsl
pop
jnp
push
push
aas
cmp
inc
add
push
adc
inc
into
or
nop
sub
pop
xchg
push
sbb
dec
push
jns
add
call
iret
fwait
push
push
add
pusha
and
nop
mulb
shlb
add
adc
and
pop
inc
or
add
es
loope
icebp
stc
xchg
movsb
ret
test
adc
inc
fs
pop
pop
adc
fwait
in
mov
sar
and
inc
mov
fidivs
gs
jbe
push
bound
imul
mov
lds
shlb
add
jbe
data16
inc
push
push
ss
es
add
mulb
xchg
mov
cmpsb
lock
add
jbe
data16
inc
push
push
ss
es
andb
iret
es
xor
add
aas
adc
out
and
cmp
fildl
xor
dec
jl
mov
call
sbb
jo
in
cli
pusha
repnz
aaa
xchg
loope
dec
pop
push
cmpsl
jecxz
sbb
xor
jbe
or
cmc
push
ja
imul
stos
shrb
roll
cmp
add
dec
inc
call
mov
sti
mov
pop
pop
jo
std
mov
rcl
dec
add
sbb
ljmp
in
imul
push
icebp
mov
out
test
xchg
jb
int3
push
adc
jnp
stos
shll
repnz
hlt
mov
ja
into
rclb
subl
out
mov
or
repnz
add
test
cmp
dec
mov
ljmp
cli
adc
pop
dec
inc
jno
movsb
aad
leave
arpl
fbld
sbb
sbb
mov
hlt
ja
cli
filds
xchg
lods
inc
insl
into
fistl
pop
jecxz
les
inc
and
rclb
pop
push
cmp
mov
repnz
push
icebp
movsl
js
pop
test
pop
cmc
lahf
jmp
test
pop
outsb
sbb
or
ret
fs
fmuls
jle
mov
pop
mov
mov
cs
sbb
jl
insl
rorb
add
in
repnz
fldt
fsubrl
or
dec
jae
loop
fnsave
fwait
and
bound
movsb
loopne
outsl
repz
xor
popa
xor
cmp
pop
imul
in
push
cmp
imul
into
jo
cli
adc
shlb
push
aad
sbb
arpl
xchg
dec
sbb
and
inc
sbb
and
and
popf
fld
lds
lcall
push
adc
fcomps
leave
aam
aad
daa
daa
inc
pop
cmpsb
sti
xchg
pop
xchg
in
stc
int3
and
mov
dec
es
lcall
jno
imul
jle
xor
jmp
sub
aas
imul
stc
jne
nop
ja
push
popa
pop
jbe
push
test
push
pop
test
xor
hlt
pushf
fbstp
mov
lcall
test
inc
cmpsb
arpl
xchg
insb
or
outsb
add
push
push
cmp
push
movsb
jmp
dec
clc
cmp
fsubr
mov
mov
and
pop
ret
xlat
mov
imul
jp
sub
cmpsb
inc
mov
test
jae
movsb
dec
test
inc
aaa
push
clc
rcl
or
lahf
sub
xchg
adc
arpl
mov
pusha
addr16
jbe
xor
inc
inc
lock
clc
inc
xor
add
sub
fiadds
pop
push
add
or
push
loop
lods
fnsave
adc
jne
pop
or
lahf
xorb
clc
out
scas
and
or
xchg
pop
fnstcw
mov
adc
jg
scas
cmp
fcmovb
inc
int
mov
mov
push
enter
ds
mov
outsl
xor
push
xor
stc
add
mov
arpl
or
adc
and
xor
addr16
sub
mov
aad
adc
test
adc
sarb
inc
cmpsb
cltd
cmpl
cmp
outsl
add
fstp
mov
xchg
imul
adc
in
lfs
into
cmp
int3
outsl
mov
inc
test
add
cmp
jmp
inc
and
jo
popa
mov
iret
inc
cmp
fildl
test
aam
cltd
and
lock
popa
mov
and
lea
push
imul
add
aad
in
jae
movsl
mov
mov
insl
in
ret
fidivrs
dec
lret
sar
jge
and
mov
repz
pop
lods
mov
add
sti
subl
outsl
xchg
pop
adc
mov
ret
fnsave
sub
cmp
movsl
je
ret
sub
vmovddup
cmp
push
stos
push
icebp
repnz
sub
popf
pop
shrb
mov
cmp
lret
mulb
dec
fldl
outsb
mov
stc
sub
icebp
xchg
jg
jecxz
sbb
jl
jmp
testb
clc
les
loope
mov
or
jns
es
push
nop
dec
out
ret
sbb
inc
sub
xchg
sub
jl
lds
inc
clc
cmpsb
out
adc
and
popa
test
movsl
subl
insb
xchg
lods
sbb
xchg
pop
adc
aaa
aaa
pop
mov
sub
arpl
imul
adc
fisttpl
rcr
pop
lock
cmp
jae
scas
dec
shld
inc
loope
jb
dec
pop
dec
jne
mov
mov
sbb
jmp
lret
dec
out
mov
jae
mov
outsl
or
jnp
int
add
dec
addr16
pop
jl
rcrl
inc
jecxz
add
int3
call
mov
sbb
in
fistpll
dec
cmp
and
or
xchg
add
dec
loope
mov
add
daa
popf
or
ss
cmp
mov
push
sahf
ja
popa
mov
addr16
loopne
mov
gs
xchg
outsb
notl
or
push
add
mov
fdiv
cmp
fcmovnbe
imull
idivl
mov
nop
hlt
mov
sbb
lcall
push
imul
push
mov
es
sub
xchg
push
xchg
xchg
inc
xchg
mov
lret
mov
xchg
mov
repz
mov
shrb
mov
mov
xchg
push
pop
inc
cs
push
xchg
dec
xor
ja
incl
pop
pop
cmpsb
sub
and
int
push
sub
push
test
add
sbb
add
inc
aad
add
pop
dec
mov
cmp
lea
movsl
xchg
inc
jp
jbe
daa
or
jmp
adc
in
jmp
pop
popf
cltd
icebp
shl
lcall
hlt
fs
mov
rcrb
sub
adc
es
leave
inc
push
negl
mov
aad
and
mov
insb
stc
xchg
fdivrl
mull
mov
push
fnstcw
mov
lret
cmpsl
push
pop
cwtl
jge
xorb
ficoms
stos
push
adc
ficompl
dec
push
pop
jne
adc
ds
jge
push
clc
xor
mov
or
popf
push
mov
xorb
jle
sub
lea
sti
add
and
inc
enter
push
mov
adc
scas
lods
clc
in
repz
shr
inc
add
pop
shlb
dec
xchg
das
pop
xchg
notl
loopne
cld
cmp
popl
add
cmpsb
add
adc
dec
mull
mov
xchg
fnsave
mov
adc
leave
mov
sub
inc
dec
cs
mov
cmp
dec
mov
mov
jo
nop
loopne
mov
inc
mov
bound
jo
inc
and
gs
mov
enter
lock
daa
fstp
dec
sub
in
mov
cmpsl
or
adc
mov
mov
push
int3
lea
int
cltd
jo
ds
nop
je
pop
push
adc
mov
insl
cmp
jl
pusha
push
sub
ret
rcr
mov
cmp
test
or
cmpsb
or
or
pop
sti
inc
push
adc
cwtl
lret
cltd
push
jne
mov
sahf
lock
sbb
and
xor
test
xor
cld
add
ja
inc
clc
push
aad
in
cmp
ret
stc
icebp
fisttpll
jb
arpl
lods
outsb
push
idivl
mov
add
fwait
data16
jge
adc
clc
lcall
adc
lcall
inc
and
adc
cmp
nop
sub
out
sahf
ret
mov
andb
adc
mov
int3
xchg
cld
cwtl
in
jb
pop
mov
icebp
test
xor
ja
mov
pop
dec
hlt
outsb
xchg
outsb
call
adc
xor
loop
push
popa
adc
icebp
jge
inc
push
lret
pop
cmpsb
inc
stos
sub
in
jecxz
cmpsb
cmp
cmc
mov
sub
xchg
jo
or
notl
mov
sbbb
inc
push
sub
icebp
push
in
xlat
rol
iret
adc
into
xchg
ficomps
xchg
and
jge
cs
mov
jle
popa
aaa
cld
mov
or
andb
dec
dec
dec
mov
scas
adc
push
std
mov
rolb
dec
jle
lods
aad
add
and
addb
std
clc
or
in
sbb
inc
fistl
test
mov
xchg
cld
xchg
mov
mov
dec
xchg
cs
popf
cmp
fsubrs
stc
fisubs
add
mov
fnstcw
js
sbb
jo
lods
int
adc
loopne
dec
lret
mov
hlt
mov
pop
nop
loopne
jns
scas
je
sbb
std
mov
or
popa
jmp
leave
fiaddl
inc
xor
xor
sbb
lret
xor
mov
jns
adc
ds
or
push
add
and
pusha
sbb
xchg
movsb
lret
shrl
std
sbb
fsubr
bound
xchg
mov
into
and
dec
dec
in
adc
pop
and
and
loop
pop
push
mov
repnz
repnz
test
sub
test
push
insb
inc
jnp
jg
sub
inc
rclb
adc
int3
sub
leave
in
fdivs
and
xlat
jmp
movsl
push
stc
int
shrb
les
xchg
cs
inc
adc
ret
and
aam
test
pop
repnz
inc
rorb
mov
leave
insl
faddl
adc
repz
insl
cmp
inc
fists
ss
or
sub
jmp
add
dec
in
xor
adc
call
neg
loopne
ja
jbe
addb
das
jbe
inc
aaa
leave
or
mov
cli
popf
and
sbb
add
data16
insb
cmp
cld
pop
ret
jne
mov
add
cs
cmp
push
mov
repnz
mov
out
xor
push
lea
fdivrl
aam
inc
add
push
pop
mov
sub
mov
xchg
jns
mov
xchg
orps
mov
adc
push
and
pop
daa
sbb
push
int3
pop
and
cmpl
push
daa
loopne
and
mov
push
fnstenv
cmpb
push
lea
cmp
xchg
mov
xchg
fldenv
jl
cmpsl
notl
jo
cmp
stc
rclb
cmp
jne
stos
pop
pusha
cmpsb
addb
add
scas
aaa
mov
setg
inc
iret
sbb
cs
idivl
cmp
clc
mov
adc
pop
frstor
inc
stos
cmc
clc
jo
bound
outsb
lahf
nop
scas
mov
daa
out
ret
xor
and
xor
or
add
mov
repz
push
dec
sbb
push
jno
rclb
daa
cltd
test
xor
popa
out
fwait
in
and
repz
scas
and
fildll
mov
daa
cmp
pop
push
jl
xor
inc
mov
mov
bound
clc
iret
gs
pop
das
call
arpl
mov
mov
or
mov
xchg
movsb
cltd
aad
in
jns
mov
lahf
pop
sub
cmp
jno
pop
lahf
fs
je
idivl
cmp
adcb
mov
sub
pop
cmpsb
stos
xchg
cmp
add
push
push
movsl
and
mov
dec
repnz
test
es
adc
dec
pop
in
int
test
fadd
js
out
rol
movsb
mov
sub
shrb
or
cmp
stos
lock
shll
out
movsb
mov
or
mov
mov
stos
sub
mov
push
lahf
inc
daa
test
xchg
jne
icebp
vpaddusw
jp
mov
mul
pop
mov
inc
daa
add
clc
push
leave
movsl
outsb
mov
jno
mov
loopne
outsl
or
mov
mov
sub
xchg
setbe
sbb
dec
dec
add
lods
jmp
pushf
cmp
push
out
nop
cs
and
mov
pushf
ja
stos
pop
sub
add
pslld
lret
stos
sahf
fwait
scas
shlb
cmc
xchg
shl
push
pop
dec
add
lret
js
and
sbb
and
mov
mov
scas
icebp
rorl
add
xchg
in
daa
cmp
cld
inc
xor
mov
sub
int3
add
jl
xor
push
add
xor
mov
push
mov
lds
xchg
lret
sub
testb
sbb
aas
pop
fmul
in
jmp
js
jne
mov
loopne
mov
sbb
jp
clc
inc
dec
push
push
test
scas
pop
orl
xor
mov
repz
call
inc
mov
in
loopne
pop
dec
lcall
scas
es
jmp
into
aam
and
sub
sbbb
push
xchg
pop
cld
xchg
cmpsl
enter
lock
jb
or
push
ss
imul
roll
lret
inc
sub
cmp
dec
popa
mov
sbb
andb
ret
in
ret
lds
lds
mov
inc
repz
test
out
movsb
inc
popf
rcll
in
adc
add
jmp
xchg
dec
call
jl
cmpsb
addl
jg
mov
xor
fmuls
jecxz
mov
test
mov
decb
push
cmp
stc
inc
mov
xchg
add
xchg
jle
test
mov
push
lcall
push
pop
push
xchg
xchg
sahf
sbb
xchg
dec
out
pop
xor
cli
rolb
push
in
enter
or
leave
jl
mov
cld
pushf
xor
add
leave
pop
mov
leave
mov
mov
add
or
xor
cld
add
and
mov
sbb
roll
jne
lret
out
mov
mov
mov
enter
ds
sbb
aaa
mov
lahf
and
stos
inc
push
xchg
push
subb
cmp
pop
pop
cwtl
push
outsl
dec
ja
sbb
dec
leave
aas
test
test
repnz
and
sti
mov
mov
mov
js
mov
mov
rol
adc
adc
in
out
or
ret
xchg
xor
push
loopne
fcomps
leave
int
test
test
rol
jl
sub
imul
push
pop
cli
xor
cmp
dec
out
lret
stos
ds
subb
jp
shld
sar
iret
cmc
dec
test
mov
mov
add
mov
dec
mov
movsb
int
test
push
mov
scas
sub
add
adc
jne
or
mov
push
or
sub
xor
cmp
xchg
lahf
movsb
mov
adc
cmp
sti
or
add
cmp
and
adc
lret
jl
xchg
repz
sbb
aad
into
sarb
sbb
mov
pop
mov
push
fiadds
cmpsb
movl
add
sbb
mov
cmp
call
jp
test
dec
mov
xlat
ret
loopne
lds
jmp
aaa
adc
mov
mov
repz
in
xlat
popf
push
imul
jns
sbb
loopne
xchg
lods
loopne
pop
fcoms
lahf
jmp
in
mov
lret
clc
lods
inc
xchg
jbe
cmpsl
mov
and
sarb
mov
fcompl
popa
std
xchg
mov
in
mov
push
mov
fistpl
gs
jecxz
mov
xor
add
mov
jp
push
mov
adc
mov
push
scas
cmp
shl
pop
int
add
cltd
ds
mov
notl
sti
jmp
xchg
xchg
mov
pop
pop
push
mov
cltd
in
imul
jo
ja
inc
imul
lcall
jnp
xor
jo
adc
repz
cmpsb
shlb
outsl
jnp,pt
out
scas
push
nop
jo
cwtl
inc
sub
icebp
mov
insb
sbb
imul
push
xchg
test
push
sub
and
jp
nop
sub
adc
jne
fwait
or
jbe
mov
mov
fisttps
int3
sub
in
aam
dec
pop
les
out
xlat
pop
sahf
dec
mov
lods
daa
rclb
mov
setp
ds
dec
push
adc
cmpsl
cmpl
lds
cwtl
push
jmp
sbb
mov
ret
fld
sub
sub
repz
pushf
int3
sahf
xchg
out
xor
iret
pop
shll
shl
jg
testl
mov
test
mov
bound
insl
dec
out
outsl
push
mov
push
add
pop
lods
inc
add
sahf
inc
out
sbb
jge
fldenv
jae
fcompl
xor
out
movsl
mov
popf
call
rcl
cs
cwtl
roll
inc
jl
sbb
call
cld
and
xor
ds
cli
sub
push
into
xor
scas
rcrl
xor
and
stc
mov
cmp
imul
xor
data16
out
mov
fld
jmp
mov
ds
pop
sti
sbb
rorb
arpl
push
cs
pop
sbb
mov
inc
ss
cli
fmul
sub
inc
adc
push
fcmove
mov
jae
addl
std
mov
fs
mov
in
les
sub
and
mov
add
mov
ficompl
xchg
add
dec
mov
es
ja
jne
mov
je
shlb
das
dec
insb
or
xchg
xchg
mov
mov
xor
lds
lret
xchg
loop
out
in
jbe
jb
sub
fists
imul
cmp
jns
sbb
mov
mov
jecxz
call
stc
call
push
jnp
lods
push
inc
cmp
scas
pop
mov
icebp
icebp
jge
cmpsb
push
mov
or
jo
mulb
fiadds
xchg
jne
mov
dec
aaa
add
xor
mov
mov
and
inc
add
lret
rol
loope
push
push
aaa
fdivrs
mov
scas
mov
sbb
sbb
lcall
xchg
fadd
into
loop
repz
sbb
faddl
je
mov
sbb
add
insl
dec
lea
out
addb
stos
test
out
xor
cmp
jg
and
sbb
push
loopne
mov
orb
pop
enter
and
out
jo
arpl
aam
and
sub
inc
jl
fidivrl
iret
and
push
xlat
lret
rclb
push
dec
jg
sti
jbe
mov
jl
mov
scas
jb
mov
xchg
out
loop
int3
loopne
outsb
xchg
das
pause
test
sub
cmp
fistps
mov
sahf
into
cwtl
mov
enter
jle
lret
xchg
jmp
push
lods
xchg
incb
mov
inc
cld
mov
mov
or
xchg
loopne
sub
imul
sbb
adc
xor
cli
pop
jno
iret
insl
outsl
mov
xchg
pop
fwait
inc
sub
nop
out
iret
add
bound
cmpsl
mov
dec
or
ja
add
mov
push
xor
adcl
jo
adc
jg
jnp
adc
mov
add
dec
jecxz
inc
jae
mov
sub
mov
loope
mov
call
enter
or
cmp
sub
xchg
mov
and
pusha
inc
mov
xchg
dec
mov
rcr
jmp
inc
fsubrs
dec
lret
xlat
cmp
cwtl
push
std
shl
inc
fistpll
rcrl
loopne
adc
shl
in
xchg
xor
pop
cmp
inc
sub
int3
mov
xor
lock
imul
lahf
jg
dec
fmul
pop
mov
sbb
mov
cwtl
mov
hlt
xlat
and
ret
pop
pop
movsl
jne
sti
addr16
icebp
push
sbb
xor
rolb
xchg
mov
repz
mov
dec
mov
scas
out
ret
cld
shlb
mov
and
lret
pop
mov
out
pop
mov
ds
aam
cmp
inc
push
pop
or
es
lret
pop
mov
xchg
negb
pop
dec
sub
mov
ficoml
adc
fsubr
mov
sub
fwait
push
inc
add
adc
mov
adc
fisttpl
and
clc
and
mov
cltd
test
mov
sbb
mov
aaa
xchg
stos
stos
pop
fisttpl
push
and
jmp
pop
adc
cmp
lock
push
and
data16
in
xchg
mov
mov
sub
xor
push
mov
insb
sahf
jno
sbb
xor
mov
ja
nop
jo
adc
ret
inc
or
add
mov
out
xchg
rolb
push
add
jbe
data16
inc
push
push
ss
es
add
mulb
xchg
mov
cmpsb
lock
add
jbe
data16
inc
push
push
ss
es
xor
xchg
mov
xchg
mov
lock
add
xchg
data16
inc
push
push
ss
into
jo
sbbb
xchg
rclb
push
add
inc
popa
enter
lahf
les
aam
test
fimull
lret
add
push
scas
push
xor
adc
adc
in
hlt
les
aam
movsb
dec
mov
test
into
data16
scas
push
fiadds
in
add
adc
std
mov
mov
mov
xchg
mov
xor
push
gs
pop
mov
adc
in
popf
jp
pop
pop
aad
or
sbb
lods
out
pushl
iret
mov
mov
mov
cmpsl
sub
das
mov
push
push
ljmp
push
inc
push
pop
mov
arpl
sbb
jae
fwait
scas
mov
repnz
mov
lock
js
loope
mov
clc
push
shll
xor
xor
cli
mov
pop
mov
hlt
inc
les
pop
test
imul
push
stos
push
ja
lret
jmp
adc
fdiv
adc
mov
aam
xchg
pop
jmp
lods
push
sub
add
jmp
jmp
adc
les
push
sti
mov
jbe
mov
ja
inc
mov
in
jecxz
aam
into
pop
movsb
or
jl
insb
pop
mov
mov
add
jo
cmpl
xor
cmp
insl
call
iret
or
adc
cmp
add
jns
pushf
xchg
jns
in
aaa
xlat
das
xchg
loopne
clc
cmpsb
sbb
ret
push
stos
pop
mov
jno
movsl
cmp
mov
jle
outsb
xchg
sahf
mov
scas
push
fisubs
xor
add
adc
in
hlt
les
aam
movsb
dec
mov
test
sahf
mov
scas
push
fisubs
xor
add
adc
in
jae
in
adc
or
aas
pop
cltd
into
jno
dec
pop
pop
sbb
in
cmp
fldcw
xor
repnz
stc
sbb
xchg
cmc
adc
shlb
sub
test
sti
loope
out
nop
cmpb
jg
rorb
aas
sbb
cmp
xchg
jo
stc
cmpsl
enter
aaa
cwtl
add
push
scas
and
pop
inc
pop
int3
or
loopne
iret
push
push
int3
push
pop
imul
add
dec
sarb
push
mov
stos
ficoml
sbb
ja
dec
lahf
into
mov
fmul
icebp
test
cli
sub
or
inc
popa
pop
cs
and
test
push
sarb
push
rolb
es
stos
ljmp
fadds
sahf
fdivrs
pop
data16
pusha
mov
xor
inc
sub
lods
push
inc
and
adc
adc
lods
mov
xchg
in
out
movsb
inc
dec
mov
lahf
cmc
movsb
imul
push
das
mov
add
cmpb
mov
loopne
test
jbe
sub
pop
cmc
lods
repnz
dec
lcall
mov
ss
sbb
jmp
addl
mov
pop
sbb
xchg
inc
test
inc
and
sbb
add
jbe
push
jg
sbb
sub
cltd
ss
das
gs
hlt
and
hlt
out
mov
and
jmp
jecxz
xchg
pop
loope
sub
aad
lahf
adc
dec
xor
mov
insl
xor
iret
sub
loop
je
inc
loopne
add
cltd
and
fcoml
in
sahf
in
jle
mov
adc
into
jge
in
mov
xor
lcall
mov
scas
xor
leave
iret
daa
push
rclb
pop
shll
aad
test
out
cltd
ret
enter
inc
xchg
sub
adc
orb
leave
xchg
cwtl
add
iret
addr16
mov
pusha
fs
stos
cs
push
add
jbe
mov
jmp
cmp
jle
sub
pop
into
push
dec
mov
or
outsb
fs
arpl
jo
mov
shll
out
or
loopne
mov
adc
dec
loopne
fwait
sbb
gs
mov
add
aam
cwtl
pop
mov
pop
pop
xchg
adc
nop
push
mov
pop
xor
or
mov
in
pop
fidivrs
mov
adc
lds
scas
pop
cmp
push
add
call
out
mov
ljmp
sbb
hlt
insl
sbb
dec
xlat
test
loope
adc
scas
je
aad
xor
rol
xchg
pop
dec
inc
push
push
sbb
xchg
insb
xchg
fisubl
or
mov
in
mov
jg
mov
not
or
mov
lock
fbld
xchg
fmuls
cmp
inc
loop
push
repnz
mov
test
pop
xlat
and
mov
inc
repnz
jmp
out
in
int3
push
inc
jnp
xchg
pusha
inc
dec
dec
into
into
inc
mov
loop
jmp
mov
adc
idiv
jp
pop
pusha
popa
dec
dec
int3
movsl
int
sbbb
call
std
pop
mov
xchg
lahf
sub
fisubrs
pause
sub
outsb
fdivl
and
and
mov
dec
sbb
inc
xor
iret
icebp
dec
cltd
inc
lea
sbb
push
rcr
outsb
cmp
int3
xor
push
scas
jmp
or
outsl
rcrl
mov
lods
test
push
jl
xchg
mov
push
push
lcall
cs
sbb
rcrl
test
fs
int3
xchg
rdtsc
ss
sti
mov
xor
or
es
outsl
aas
pop
or
inc
add
dec
cmp
dec
movsl
pop
popf
xchg
movsb
clc
pusha
out
mov
and
sub
mov
adc
sub
or
insb
cli
ficoms
adc
movb
mov
inc
push
xlat
sub
cmp
inc
repnz
test
fs
fmuls
mov
int3
mov
lods
add
out
repnz
jp
xor
aad
lods
fsub
ret
cs
mov
rcl
push
cld
inc
lds
inc
mull
dec
inc
into
pop
pop
sbb
repnz
jl
in
in
dec
sti
add
and
je
xchg
out
pop
iret
and
xchg
xchg
pop
pop
loope
sarb
gs
loop
pop
aaa
sbb
jo
popa
xor
or
xor
fisubs
faddl
or
shrl
jns
adc
stos
push
jbe
aaa
hlt
and
out
mov
into
mov
sub
imul
leave
insl
lcall
mov
shl
pop
cwtl
or
mov
dec
out
in
adc
mov
xchg
pop
rolb
mov
mov
mov
in
inc
shll
lea
cmpsb
xchg
loope
or
inc
lret
loopne
dec
popl
ljmp
fmuls
lock
xchg
add
test
cmp
or
xchg
repnz
mov
push
push
jl
aaa
push
or
xchg
insb
andl
mov
leave
sub
mov
data16
jb
fcomps
cmc
mov
nop
dec
xchg
mov
ret
add
and
popa
popa
or
mov
jnp
sbb
mov
mov
inc
cmp
leave
divl
dec
jg
mov
out
mov
and
loop
and
flds
dec
jne
xchg
pop
ficomps
sub
jp
scas
mov
jl
rcrl
in
mov
dec
into
mov
lcall
cmp
fstl
jl
fidivl
popf
dec
cs
mov
jge
jne
push
mov
repnz
gs
mov
icebp
jp
movsb
push
subb
lret
pop
outsb
push
in
rclb
adc
imul
jp
cmpsl
mov
cld
mov
out
push
les
imul
mov
sub
push
inc
mov
mov
call
out
out
dec
ja
fs
mov
loope
mov
cmp
inc
push
out
mov
sbb
in
sarl
push
adc
inc
popf
pop
cli
movups
cli
lret
vpmovsxbw
and
andb
jo
inc
cmp
jge
in
into
jb
dec
subl
jno
push
arpl
and
mov
outsb
leave
daa
aaa
adcl
or
or
outsl
sbbb
icebp
sbb
movb
fpatan
mov
fisubrl
sbb
out
mov
and
sbb
xchg
cwtl
dec
repnz
pop
add
fdivrs
jne
aas
test
pop
lds
repz
repnz
add
jb
leave
pop
cwtl
adc
pop
jle
outsb
adc
sbb
dec
or
sbb
fisubrl
fiaddl
cwtl
ljmp
movsl
inc
push
mull
mov
jne
xchg
test
aam
ret
sbb
lock
fstp
aaa
loopne
sbb
and
std
mov
or
xchg
xchg
int
xlat
xor
or
fisttps
loopne
mov
dec
repnz
inc
repz
pop
les
add
inc
cmp
xchg
int3
pop
xor
std
cmp
rcrl
test
mov
add
std
xrelease
sarl
aas
adc
mov
pop
loopne
push
push
sti
loop
divb
movsl
mov
into
or
jle
cld
sub
or
aad
adc
jle
mov
push
shrb
sbb
sbb
out
loopne
fcmovbe
mov
addr16
cmpsb
fisubl
lea
push
int
sub
daa
shrl
data16
and
mov
xor
out
subb
cwtl
cmpsb
mov
cmp
pop
ficoms
das
push
jle
xor
dec
cmc
lahf
jecxz
cmp
movsb
clc
je
pop
jecxz
in
inc
and
jl
mov
adc
sbb
cwtl
mov
lods
out
cmp
cs
pop
xchg
xlat
push
push
das
mov
frstor
imul
int
adc
or
push
pop
insl
cmpsb
xchg
xor
sti
pop
inc
xchg
into
sub
push
nop
cli
xor
aas
sub
call
ffreep
mov
xchg
adc
cmp
adc
pusha
jb
icebp
dec
leave
pop
jg
adc
mov
mov
mov
cmpsl
cwtl
xor
or
cmp
subb
iret
outsb
outsb
shrl
dec
fnstcw
jp
test
sub
xchg
das
addb
xchg
je
int3
inc
inc
sub
cmp
lods
sub
mov
add
sub
pop
inc
pushw
dec
mov
test
push
cmpsb
iret
sbb
sbb
push
mov
jae
popf
nop
jb
push
fdivs
aad
cmp
mov
int
add
outsl
mov
jae
jge
sti
orl
mov
fincstp
lahf
mov
stos
mov
stos
mov
xchg
push
repnz
fsubs
dec
mov
loop
xlat
ja
cltd
inc
sub
call
jecxz
pop
push
ja
cmp
jns
sub
popa
mov
and
jno
imul
jno
arpl
mov
lcall
sub
shlb
in
cltd
lret
arpl
or
cld
xchg
push
fidivs
cmp
sub
and
dec
out
dec
in
test
hlt
dec
jmp
jge
push
mov
mov
push
testb
enter
mov
sub
call
or
insl
lahf
mov
outsl
pop
dec
cmp
mov
in
jp
andb
int
inc
cmp
xchg
or
imul
lret
lret
stc
jne
stc
cmp
push
xchg
mov
xor
jae
pop
pop
gs
push
in
das
in
in
andl
aad
pop
inc
mov
cld
test
jbe
push
enter
mov
pop
cmpsb
out
jne
inc
scas
jo
push
add
rorl
mov
push
push
insb
xchg
pop
dec
daa
pop
int
into
lret
jp
movsl
adc
cmc
out
adc
mov
pop
inc
adc
mov
arpl
adc
dec
dec
std
or
ja
xchg
jnp
in
js
push
mov
jg
jge
int3
mov
inc
int3
lea
loop
inc
lods
ficomps
fidivl
iret
insl
jge
push
push
push
iret
mov
pop
daa
adcb
sbb
cmp
data16
out
sub
mov
adc
inc
mov
ja
pop
inc
movsb
shlb
insb
clc
addr16
movl
lret
xchg
inc
loope
ret
or
xchg
bound
sbb
xchg
mov
push
or
jl
cmpb
or
cli
pop
fisubrs
outsb
inc
pop
loop
pop
add
lods
fcmovnbe
mov
clc
in
dec
jge
cli
aad
sub
mov
icebp
mov
nop
jmp
fwait
mov
sub
mov
pop
loope
int3
enter
pop
gs
and
push
add
xor
sbb
stos
cmp
mov
mov
in
xor
pop
pop
xor
js
cmpsl
insl
push
add
clc
fildl
jo
jnp
fsubl
shlb
lds
xor
and
push
hlt
mov
out
insb
scas
xchg
imul
insl
in
pop
push
mov
push
adc
add
cwtl
jb
gs
cmp
xchg
cmp
mov
adc
sbb
jle
pop
mov
jns
mov
inc
sub
cs
push
fs
add
push
sbb
mov
fcom
fstpt
cmpsb
ja
sub
push
xor
mov
xor
xor
fst
xchg
jnp
mov
negl
movsl
xchg
sbb
cmc
mov
mov
js
test
inc
push
jns
scas
outsb
cld
dec
filds
mov
mov
jb
push
mov
mov
fisttpl
dec
xor
pop
das
cmc
mov
lods
out
add
sub
xchg
mov
cmp
sub
and
cmp
fdivs
sti
cs
out
out
mov
rcr
pop
adc
test
int3
mov
fucomip
inc
ja
pop
push
ficompl
xchg
test
sub
hlt
push
ja
sub
sub
outsl
fcmovnb
stc
cmp
cs
sbb
dec
push
dec
insl
mov
push
push
out
cmp
fidivs
mov
inc
cmp
nop
mov
jo
jno
and
push
xchg
shl
adc
sahf
cld
pop
or
jmp
data16
or
jg
cmpsl
inc
cwtl
push
cli
sub
xor
mov
out
mov
add
add
out
push
cmp
fs
jne
imul
dec
rcll
push
mov
cmp
sub
out
nop
adc
lds
push
jns
jae
mov
stos
fdivp
clc
mov
push
adc
mov
mov
scas
shlb
mov
or
xchg
into
mov
mov
inc
xchg
in
and
bound
jl
cmp
insl
insl
imulb
cltd
pop
bound
mov
daa
or
push
cmp
lea
jle
sub
or
cli
into
addb
or
popa
mov
cmc
in
push
ss
push
pushf
mov
and
add
and
mov
jmp
frstor
pop
ret
or
sbb
pop
out
xchg
lret
jge
jae
int
sbb
aad
ret
lcall
pop
imul
cwtl
popf
mov
daa
data16
aas
mov
cmp
or
rol
loope
cli
pop
xor
push
daa
sbb
mov
cli
sub
sbb
inc
push
rorl
jle
or
pop
mov
cwtl
xor
mov
lock
inc
es
jg
sbb
shl
inc
int3
adc
test
mov
orb
inc
subl
adc
or
sahf
push
popa
jbe
pusha
orb
pop
and
xchg
sub
push
div
xor
mov
sahf
adc
clc
out
out
lahf
xor
clc
inc
into
dec
push
add
xor
mov
sti
dec
dec
mov
jecxz
add
addr16
pop
and
aaa
enter
sub
sbb
pushl
cli
das
loopne
inc
jbe
cmpsl
push
adc
cltd
je
loop
jl
mov
add
movsb
adc
dec
js
inc
or
aas
fstpt
inc
pushf
inc
sub
adc
mov
xchg
jnp
leave
pop
mov
jp
mov
sub
bound
pushf
mov
movsl
aam
adc
movsb
loope
movsb
and
repz
rclb
sbb
lea
cmp
imul
out
outsl
in
pop
sub
lret
dec
int3
pop
jl
rol
aas
lret
cmp
int
loope
inc
pop
out
xor
inc
es
sbb
int3
icebp
pop
repnz
and
call
jle
adc
test
adc
iret
out
xchg
adc
xchg
mov
sub
xlat
push
mov
outsb
and
in
stos
sub
mov
adc
cs
rorl
and
outsl
mov
mov
and
xchg
loop
shlb
adcb
sub
out
test
stos
gs
push
cli
outsb
pusha
xchg
and
pop
testb
and
cmp
dec
mov
xor
mov
adc
cmc
push
dec
add
cwtl
lds
bound
hlt
push
lret
je
ljmp
xchg
dec
mov
iret
dec
aad
mov
pop
inc
mov
xchg
xchg
sub
push
push
stc
fcmovb
push
addr16
dec
jmp
lods
xchg
xchg
lods
pop
mov
mov
shll
push
js
jle
sub
mov
cmp
in
jns
andb
dec
pusha
je
pop
mov
shrb
ja
jecxz
mov
adcb
not
lds
pop
sub
push
push
dec
lret
mov
test
shr
mov
mov
jle
out
lret
add
repnz
push
add
push
inc
push
xor
iret
test
test
and
inc
pop
cld
das
loopne
pop
fadds
cmpsb
repnz
and
movsb
imul
mov
fisubrs
mov
fdivs
hlt
mov
jb
outsl
shll
inc
dec
jb
add
mov
sar
cmp
sbb
in
push
mov
sarb
add
out
insl
ret
sar
lock
or
and
into
mov
sub
add
enter
rolb
jecxz
pushf
jns
mov
xchg
sarb
js
rcrl
cmc
sub
rclb
and
jae
add
xchg
imulb
inc
insb
and
sub
sahf
cli
hlt
clc
pop
push
sub
stos
and
dec
lret
pop
fldcw
jb
xor
clc
enter
and
mov
fldt
xchg
cmpsb
pop
sbb
pop
ret
test
xchg
push
inc
inc
jnp
or
mov
gs
jbe
mov
mov
add
roll
sub
inc
stos
adc
arpl
test
fcmove
lods
mov
or
sbb
icebp
adc
cmp
or
mov
je
push
xor
push
insl
jl
and
adc
mov
dec
aas
sbb
jnp
inc
jb
pop
cmp
pop
lea
rolb
sub
cmp
cs
cs
sbb
sub
ss
lods
dec
mov
pop
mov
sbb
xlat
mov
sahf
hlt
loopne
bndstx
dec
sub
mov
popf
mov
dec
aad
add
ror
lods
imul
inc
inc
gs
push
mov
push
xor
lock
jbe
insb
jo
or
add
outsl
cmp
movsb
mov
call
pop
and
xor
divl
scas
ja
rcr
dec
pop
ss
xchg
iret
pop
jle
in
fists
mov
jp
ss
mov
stos
sahf
dec
jge
popl
dec
cmp
inc
ljmp
adcb
mov
test
arpl
add
call
jnp
aas
or
stc
iret
push
or
addb
mov
cmpsl
add
stc
sarl
in
pop
loop
ds
test
ret
mov
push
xchg
sahf
jae
sarb
cwtl
fcmovu
jecxz
push
jno
cmp
push
cmp
xor
ficompl
mov
xchg
and
sahf
push
std
bound
ja
icebp
xchg
adc
xor
mov
lods
loopne
fiadds
cltd
jmp
cmp
fistpl
pop
lock
add
andb
sub
xlat
int
push
jmp
imul
mov
jbe
push
push
rolb
and
or
decl
or
xor
in
sub
xor
xchg
or
cmp
and
pop
std
xchg
enter
sbb
adc
and
movsl
sub
lock
hlt
cli
jl
call
xchg
pop
xchg
or
shrb
lahf
loopne
nop
fucomip
jmp
push
daa
or
sbb
sub
dec
int3
pop
into
std
aaa
xchg
add
dec
mov
push
lds
insb
lock
dec
out
loopne
push
add
or
push
jmp
lods
and
push
shlw
inc
clc
and
xlat
arpl
dec
and
xor
pop
dec
sbb
jl
dec
add
aas
mov
sbb
iret
ss
test
jecxz
push
push
lods
lahf
sbb
loopne
xchg
test
popa
mov
push
popa
int
sbb
xchg
xor
sbb
gs
aam
push
mov
enter
add
and
repz
mov
push
loop
mov
dec
cltd
add
mov
xchg
cmp
pop
pop
xchg
outsl
push
mov
ljmp
mov
jae
mov
inc
mov
mov
and
fucomp
lods
ds
inc
push
call
sti
jb
in
jg
rorl
icebp
iret
stc
mov
mov
inc
shrb
lea
mov
push
shll
push
mov
fisubrs
cwtl
push
andl
add
add
dec
js
and
and
call
inc
or
mov
pop
popf
fwait
mov
xlat
adc
lock
int
dec
adc
add
xchg
mov
push
pop
pop
xchg
les
maxps
movsb
xor
and
inc
pop
mov
sub
adc
loope
xchg
movsl
xchg
outsb
inc
dec
mov
xor
jnp
mov
adc
jne
push
jl
sub
stc
xlat
ss
sbb
stos
cmp
fldl
icebp
pop
test
inc
jae
testl
nop
mov
push
pop
push
sub
xor
pop
mov
dec
into
sub
fwait
add
jecxz
xlat
dec
or
adcl
fstpl
enter
mov
inc
popf
mov
pusha
lea
outsb
mov
mov
xor
fsubp
adc
xchg
xchg
dec
add
mov
or
mov
push
test
loopne
nop
fdivrs
inc
inc
out
pop
push
out
xorb
xor
in
sbb
pop
pop
hlt
loope
xor
pop
movsb
dec
mov
test
sahf
mov
scas
push
fisubs
xor
add
adc
in
hlt
les
aam
movsb
dec
mov
test
sahf
mov
scas
push
fisubs
xor
add
adc
in
hlt
les
aam
movsb
dec
mov
test
lcall
push
fisubs
xor
add
and
mov
push
aam
movsb
pop
mov
test
xchg
sahf
fs
adc
scas
and
sti
adc
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
ljmp
inc
mov
out
sbb
push
pop
lret
dec
fstpt
stos
sub
or
ljmp
sub
sbb
push
cmp
dec
fstpt
stos
sub
cli
imul
fimull
pop
mov
or
sti
cmp
inc
aam
stc
gs
mov
and
and
or
in
mov
popa
sarl
repz
sahf
sbb
insb
mov
pop
scas
cmp
mov
or
xchg
add
lret
push
adc
repnz
jmp
aad
stos
aaa
mov
dec
push
jp
cmp
or
jnp
je
adc
xchg
pop
mov
test
xchg
pop
xor
mov
sarl
je
push
pop
mov
movsb
push
sub
cwtl
adc
pop
lods
or
sbb
inc
inc
lahf
je
push
add
ljmp
pop
bound
test
fimull
sub
or
fimull
pop
mov
or
sti
pop
lret
dec
fstpt
stos
sub
mov
jnp
and
fldl
dec
adc
cs
dec
lret
ja
jle
movsl
imul
fbld
pop
lcall
mov
stos
das
mov
enter
out
adc
sub
sub
sbb
push
pop
lret
dec
fstpt
stos
sub
cli
imul
fimull
pop
mov
or
sti
pop
lret
dec
fstpt
stos
sub
cli
imul
push
stc
cwtl
sbb
out
xchg
jne
xor
cmp
mov
cmp
push
je
repz
rcrb
aam
fistl
dec
inc
ja
and
sbb
or
out
hlt
or
scas
xor
ds
cmp
call
ljmp
mov
sub
and
xlat
mov
or
add
movsl
pusha
inc
push
jle
out
adc
add
or
and
ret
or
subb
push
bound
daa
xchg
mov
fldt
mov
iret
popf
cmp
pop
rclb
jb
ret
cmp
cli
push
pop
dec
cs
bound
or
dec
push
mov
lfs
arpl
mov
mov
outsl
mov
pop
jo
mov
mov
insl
into
add
mov
aad
btc
pop
rolb
enter
jbe
nop
jnp
sub
fimuls
xchg
sbb
lret
push
and
fisttps
sahf
mov
aad
inc
or
jbe
sub
orb
fldenv
movsl
mov
push
aam
in
loopne
mov
nop
ret
js
stos
add
xchg
push
jecxz
ss
repnz
inc
lahf
iret
xor
or
testb
push
xchg
loop
dec
andb
out
insl
pop
and
pop
adc
jne
cmp
popf
shl
sbb
cmp
es
cli
dec
in
addr16
cmpsb
repz
add
mov
outsl
inc
cs
adc
mov
jae
aam
lods
sub
bound
mov
and
scas
xchg
repz
pop
add
das
and
fwait
mov
xchg
or
mov
fs
inc
and
movsb
add
push
mov
sahf
sub
push
mov
mov
jmp
sub
sbb
stos
int3
push
and
xlat
fcom
in
pop
jb
sbb
in
call
mov
pop
call
cbtw
pushf
lds
lahf
sub
lds
jecxz
mov
cmp
cmc
shr
push
lret
cs
das
test
into
dec
das
jp
xchg
inc
sahf
mov
cmpsl
push
popa
movsl
insb
mov
push
in
fsubs
mov
ljmp
test
push
outsb
xor
jo
jbe
inc
sbb
leave
aad
cs
sbbl
mov
pop
sub
mov
gs
sbb
loop
mov
jae
daa
movsb
fbstp
jbe
popa
fildll
lods
es
ret
and
std
jp
or
lods
imul
je
add
std
loope
mov
sahf
jmp
jns
gs
jecxz
stos
icebp
mov
pop
cli
hlt
xchg
push
jmp
aaa
je
push
pop
leavew
popa
pop
or
mov
mov
out
sub
test
jg
fwait
xchg
es
ret
adc
inc
daa
pushf
push
adc
mov
add
mov
push
xchg
mov
out
sbb
lahf
movsb
cmp
sub
pop
ss
sub
dec
jbe
lahf
lcall
jl
popa
jecxz
adc
dec
lret
add
nop
fistps
jns
aam
nop
dec
and
cmc
stc
aad
cmpb
test
mov
sbb
out
jge
bound
leave
push
shl
in
sbb
mov
inc
push
sub
stc
jmp
movl
mov
xor
cltd
jbe
call
int3
shlb
sbbb
or
and
and
push
add
lea
nop
add
xchg
ret
push
testb
stos
push
xchg
cmp
jle
in
outsl
ret
push
gs
stos
imul
lods
mov
jae
ds
mov
loopne
sti
lret
mov
inc
mov
ja
lea
mov
push
nop
adc
add
jl
lods
mov
push
js
xchg
ret
je
lea
fcompl
sbb
inc
pop
fs
push
cmp
les
sbb
pop
push
xor
or
sub
fcmovnu
mov
cwtl
cmpsb
dec
imul
pushf
sbb
out
arpl
jge
sub
jl
loope
add
push
mov
adcb
push
mov
push
lods
imul
jmp
adc
push
test
aad
pop
negb
cmp
out
lcall
repnz
ja
sub
sarl
fwait
mov
jmp
dec
push
xchg
popf
xlat
cs
sbb
or
cltd
jg
mov
repnz
pop
fistps
pop
mov
sub
or
andl
fsub
jl
push
add
mov
xor
loop
xchg
dec
and
sub
dec
mov
jmp
add
mov
mov
xchg
das
add
jle
push
test
jge
mov
stos
test
je
mov
inc
xchg
mov
cwtl
fcmovbe
inc
ds
idivl
pop
pop
frstor
nop
cmp
xlat
mov
xor
push
aaa
cmpsb
pop
insl
inc
inc
cmp
mov
mov
fbld
xchg
insl
pop
aad
imul
adc
insl
loopne
lods
pop
dec
inc
mov
insl
shlb
negb
mov
add
mov
std
adc
inc
les
je
fwait
adc
andl
add
jns
push
dec
jmp
flds
cmc
popf
dec
lahf
pop
jle
xchg
push
adc
mov
add
push
xchg
cwtl
inc
out
sbb
adc
popa
sarl
cmpsb
sbb
sub
fists
mov
call
repnz
test
add
mov
loope
add
fs
jg
xor
mov
push
test
mov
sub
in
push
add
sub
pop
dec
aad
jb
lods
idivl
rorb
mov
aad
imul
pushf
sbb
xchg
jne
pusha
cs
jmp
adc
jle
mov
pop
adc
mov
dec
sub
mov
pop
stc
jg
pop
inc
ljmp
adc
imul
mov
stos
sbb
pushf
push
add
cli
mov
repz
cmp
sbb
ljmp
rol
rcrl
popf
jnp
adc
push
mov
xchg
inc
scas
mov
mov
icebp
lahf
inc
xor
inc
xor
outsb
pop
mov
addr16
jge
mov
sub
test
test
mov
out
inc
adc
push
sub
gs
dec
test
sbb
sarb
mov
out
dec
andb
popa
popa
daa
fnstenv
gs
stos
xchg
sub
cmp
push
inc
cmp
das
fisubrl
dec
and
add
mov
daa
dec
sub
jnp
sar
pop
sahf
xchg
mov
jecxz
cltd
enter
pushf
mul
dec
push
fcmovnu
dec
inc
lds
xchg
fnstenv
or
das
mov
aas
lods
xchg
loop
lea
rcll
mov
bnd
gs
adc
inc
sbb
sti
shrl
jg
out
jnp
mov
ret
in
fwait
xchg
jecxz
cmc
jp
shrl
cmp
inc
inc
sbb
mov
mov
rorl
cli
shrl
in
sub
mov
or
dec
rclb
cmpsl
and
cwtl
das
sbb
inc
dec
pop
pop
inc
pop
ja
cld
imul
jg
out
push
addr16
orb
or
stos
inc
or
sahf
mov
sbb
mov
popa
jle
fsts
push
or
dec
jg
lea
lahf
stos
stos
int
xor
int
fcomi
out
mov
add
fdivrs
sub
mov
mov
fwait
mov
je
stos
lods
sub
push
fs
dec
inc
mov
outsl
fisttpl
add
inc
jmp
fists
insl
enter
movsb
or
sub
pop
mov
jo
ljmp
adc
mov
in
fsubrs
int3
cltd
lret
and
add
imul
roll
jns
dec
xchg
icebp
mov
sahf
fnstsw
and
pop
mov
lods
ds
add
adc
xlat
mov
rorl
addr16
mov
mov
push
pop
adc
or
loope
stos
and
jb
xor
xor
sahf
add
sub
mov
cs
or
lods
lods
lods
push
in
mov
inc
jne
add
jg
jnp
jle
sbb
mov
add
jae
xchg
jp
push
pop
cmpsb
adc
sub
shll
mov
pop
or
imul
in
arpl
cmp
into
xor
notb
dec
fiadds
popf
fwait
push
cli
xor
in
outsb
mov
lret
inc
xlat
jmp
xor
or
mov
and
inc
push
repnz
sbb
lret
push
xchg
test
jle
xor
outsl
xlat
pushf
icebp
movb
push
inc
lds
shlw
jo
push
xchg
add
cmp
jge
inc
mov
inc
shlb
rclb
pop
data16
lea
ret
stos
loopne
xor
sub
jbe
inc
jne
data16
imul
lahf
xchg
mov
lea
mov
mov
out
cmp
adc
cmpl
pop
mov
aam
ret
mov
cmp
add
xlat
cltd
lahf
je
aaa
pusha
repz
aaa
xor
add
or
stos
fxch
inc
cmpsb
lcall
mov
jo
mov
pop
test
sbb
seto
nop
movsl
ljmp
arpl
movsl
jp
data16
pop
std
aas
in
nop
push
gs
pop
jge
ljmp
outsb
or
cltd
add
mov
push
nop
testb
sbb
clc
aam
jg
sti
inc
fwait
cmp
into
jmp
or
sbb
or
movsl
sbb
sub
es
pcmpeqw
push
scas
std
dec
inc
xchg
mov
add
lock
jge
mov
dec
pop
add
pop
outsl
cmp
inc
add
sbb
or
pop
stc
jl
push
jns
mov
and
cmp
enter
in
cmp
inc
das
pop
pop
jb
add
mov
ror
ja
das
rcrb
imul
add
mov
cwtl
nop
sub
subb
jp,pt
mov
fisttps
jp
bound
mov
gs
cmp
nop
pop
vorps
mov
cltd
mov
mov
mov
adc
cmp
das
loop
and
mov
push
rorl
aaa
flds
mov
mov
add
lds
fidivrs
mov
pop
fwait
mov
mov
fdivrs
das
jae
fwait
loopne
insl
pop
push
popf
mov
into
adc
daa
outsb
pop
xchg
in
pop
sub
hlt
ds
fimuls
and
pop
push
fcompp
and
mov
sub
push
mov
shl
pop
cmp
pop
sub
notl
jecxz
xor
pop
mov
add
inc
icebp
push
mulb
adc
mov
rorb
hlt
mov
adc
cmp
sbb
add
fwait
xor
mov
pop
addb
scas
xchg
outsl
and
add
inc
cli
push
repz
inc
dec
sbb
mov
or
adc
xor
cmp
mov
mov
iret
sub
sbb
push
xor
bound
cmp
cltd
jno
mov
or
rcl
push
or
cmp
push
push
mov
jmp
scas
hlt
std
cmp
ds
jo
xchg
loope
outsb
fbstp
div
cmpsb
hlt
mov
jnp
mov
inc
and
ret
scas
pop
or
call
dec
pop
mov
xchg
dec
or
je
scas
iret
scas
adc
call
inc
stc
xchg
cmp
jb
nop
pop
cmc
pop
sbbl
stc
and
pop
cli
and
into
push
popf
loop
sub
pop
imul
xchg
mov
rorl
inc
push
jae
mov
divb
pop
mov
pushf
sbb
aam
xchg
mov
sbb
xor
or
mov
and
jge
mov
mov
mov
in
sub
sub
add
imul
xlat
bound
sti
cmp
fstpt
cmp
in
jns
shrb
mov
pop
sbb
add
pop
bound
xchg
mov
adc
mov
jp
inc
jmp
mov
mov
loope
arpl
ss
sbb
or
std
push
ret
adc
fstps
jecxz
cmp
mov
push
cltd
aam
push
add
dec
mov
inc
stc
test
cltd
rorb
xchg
xchg
mov
dec
scas
lods
je
pop
cmpsb
movsb
xor
out
or
lret
sub
mov
fildll
sbb
mov
ret
mov
in
stc
adc
xor
in
push
mov
lret
cmp
aaa
pop
xchg
cmp
mov
jg
sbb
int
cmp
int
cmp
xchg
sub
pop
icebp
rol
popf
rolb
adc
mov
hlt
popf
adc
cmp
cmpsb
je
sub
jl
sub
sbb
loopne
and
out
or
xchg
xchg
pop
cmp
fisttpl
push
pusha
xor
orl
sub
adc
pop
lret
ja
adc
loop
dec
jno
jp
adc
sbb
inc
pop
sbb
fcmovbe
loop
inc
jne
sub
fisubrl
or
jle
sbb
jnp
pop
mov
ss
repnz
sbb
test
xor
popa
pop
mov
shrb
cld
inc
ja
jp
xchg
pop
js
imul
lods
adc
inc
aam
cld
cmp
cmp
lahf
xor
mov
in
push
push
pushf
mov
test
and
aam
adc
mov
xor
insl
ljmp
stos
loop
fwait
in
ret
dec
inc
inc
cmc
pop
mov
pop
jmp
dec
fs
xchg
xchg
add
sub
in
daa
jg
mov
in
bound
jl
mov
in
aad
bound
ret
add
jns
sbb
enter
bound
test
push
adc
mov
aaa
sub
xchg
clc
out
xchg
rorb
sahf
push
aad
in
notl
dec
pop
xchg
sub
or
movsl
xchg
repz
imul
xor
movsb
push
in
lods
mov
inc
rclb
pop
sbbl
add
mov
outsb
mov
flds
mov
mov
jge
pop
test
adc
sbb
js
xor
cmp
mov
or
repnz
stc
inc
fmulp
lea
mov
lret
aas
daa
mov
aam
fwait
cwtl
or
lods
sub
pop
push
mov
and
jnp
pop
sub
loopne
icebp
loope
inc
popa
out
xchg
xorb
jae
sahf
mov
loop
cmp
test
sbb
addl
inc
pop
mov
ds
dec
andb
cmpsl
lds
push
mov
out
xchg
mov
push
dec
lcall
vpunpcklwd
jb
test
cmpsb
aaa
or
insl
add
cld
ret
mov
push
sahf
sarl
in
shlb
or
neg
mov
lds
or
jge
in
ret
lock
rolb
icebp
js
subb
sbb
push
mov
test
bound
jns
xchg
mov
stos
sub
adc
pop
lock
and
das
loope
inc
int
push
and
xchg
sbbl
or
xchg
push
xchg
imul
es
std
xchg
fwait
add
pop
jle
sti
push
std
xchg
movsb
push
imul
dec
mov
pop
and
int3
clc
movsb
fcmove
dec
ret
mov
es
sub
xor
aad
xchg
push
and
dec
je
rol
fimull
psubw
pop
insb
jecxz
push
sub
mov
mov
call
jb
and
dec
in
loop
mov
or
dec
sbb
outsb
incl
dec
cltd
xchg
imul
pop
xor
test
inc
or
lcall
sahf
int3
scas
push
hlt
inc
jl
movsb
outsl
adc
pushf
pop
mov
jmp
shlb
or
je
std
lock
cli
popa
mov
sbb
jg
push
loopne
mov
sbb
or
movsb
fistpll
scas
cmp
xor
mov
cmp
movsl
mov
insl
mov
dec
iret
jo
mov
mov
lret
xorl
lock
pusha
dec
cmp
adc
insl
sti
mov
sub
in
adc
nop
mulb
fcmove
inc
xchg
outsl
adc
pop
sbb
in
jns
fbld
sub
inc
xor
xchg
js
sub
dec
jl
pop
inc
das
lcall
mov
stos
mov
mov
and
push
cmp
sarl
pop
pop
clc
pop
rcrb
adc
mov
fcompl
fiadds
je
scas
imulb
xor
std
pusha
and
xchg
fistpll
jg
ror
cmc
dec
repz
mov
loop
clc
mov
inc
push
and
mov
xor
andl
cmpsb
and
jmp
loope
xchg
xchg
adc
cwtl
dec
pop
pushf
and
cmc
mov
xor
or
xchg
fiadds
icebp
and
shll
cmc
addr16
hlt
sbb
push
and
xor
xor
adc
sub
sub
sahf
cmpsl
icebp
jp
mov
arpl
pop
dec
inc
repz
add
cmp
fs
sub
lahf
or
add
sub
test
xchg
outsb
bound
push
rolb
in
lcall
leave
repz
test
xchg
add
lret
adc
daa
in
adc
cmpsl
mov
fistpll
add
sti
pop
mov
ja
jns
stc
daa
out
lds
xor
ret
inc
rep
jns
mov
dec
fiadds
mov
in
push
push
xchg
xor
push
pop
jbe
xchg
hlt
in
icebp
mov
mov
fsubs
cmc
cmp
sbb
loop
and
push
rcrb
leave
imull
add
and
pop
dec
fcoms
and
mov
clc
cs
outsl
mov
and
fldcw
cmp
fdiv
xor
stos
xor
fimull
mov
adc
test
mov
cli
fnsave
adc
pop
add
push
fmull
push
inc
ja
xor
ror
mov
xor
aad
mov
repz
mov
aas
adc
mov
lahf
neg
mov
sbb
jae
pop
fdivl
dec
ds
pop
or
imul
imul
mov
ja
fadd
sbb
cmpsb
push
movl
outsb
in
jb
xor
das
dec
lock
fsincos
adc
into
xor
mov
mov
and
jb
jle
in
or
in
add
cli
cmpsl
fldcw
outsb
iret
jle
adc
mov
pop
out
inc
out
lods
or
clc
adc
inc
movsl
scas
stos
mov
cmpsl
cmp
mov
vcvtsi2sdl
shr
ja
mov
bound
int3
stos
mov
imulb
dec
scas
sahf
sub
int
sub
iret
jl
xor
aad
stos
adc
mov
testb
xchg
test
fnstenv
add
pop
pop
cmp
adc
ljmp
add
mov
add
mov
outsb
imul
add
mov
cmpsb
imul
sub
int
add
repnz
lock
pop
xchg
pop
xchg
cmpsl
pop
nop
adc
jmp
lret
jle
mov
and
or
jg,pn
iret
fdivrl
bound
xor
addr16
lahf
sbb
fisttpl
loope
repnz
jo
mov
sub
or
pop
xlat
out
test
xor
mov
ficoms
movsl
int
out
fcompl
push
add
cmp
arpl
movsb
and
mov
jo
cmp
fdivs
cmp
daa
xchg
push
popa
push
rcl
ds
imul
ljmp
push
cmp
iret
pop
lcall
xor
cmpsl
adc
sub
ljmp
and
jmp
std
xor
lcall
xorb
lea
roll
sub
mov
mov
sbb
adc
cli
mov
mov
sti
stos
xchg
and
cmpsb
add
jno
xor
repz
lahf
stc
aad
sbb
inc
loop
fsubrl
rcrl
xchg
inc
in
pop
test
setg
inc
js
sbb
cld
or
stos
repnz
xor
repz
mov
das
mov
sub
push
movsb
pusha
leave
aad
mov
mov
repz
test
stc
jae
and
jp
insb
add
popf
inc
cmp
push
outsb
sub
ret
int3
mov
fisttps
std
clc
cld
daa
xchg
in
decb
add
popa
mov
cmp
lods
test
fadds
push
mov
pop
dec
imul
sub
sbb
push
pop
lret
dec
fstpt
stos
sub
cli
imul
fimull
pop
mov
or
sti
pop
lret
dec
fstpt
stos
sub
cli
imul
fcmove
lret
sub
sbb
push
pop
lret
dec
fstpt
stos
sub
sti
imul
fisttpl
pop
mov
or
push
lock
dec
lods
dec
and
fs
mov
shr
rcl
outsb
mov
out
das
xor
popa
iret
push
jmp
xor
add
loope
shrl
mov
pop
jnp
popa
out
xor
lock
call
xlat
fldcw
and
aaa
jno
push
cmp
enter
lret
push
and
sub
mov
fcompl
scas
inc
arpl
add
cli
push
icebp
icebp
aam
pop
shll
pop
repz
jg
insl
mov
xchg
dec
decl
mov
loope
cwtl
add
dec
mov
movsb
jae
sahf
dec
add
into
mov
mov
xor
xlat
xchg
pop
mov
jns
adc
push
lret
mov
jb
push
push
call
cmpsl
mov
dec
xorl
sahf
filds
out
fwait
int3
and
adc
dec
push
or
sub
fistps
div
sahf
xor
mov
loope
sar
mov
in
scas
push
out
pop
cmpsl
sub
sbb
orb
inc
aad
int3
pusha
xchg
push
in
dec
add
mov
xchg
inc
sti
je
fs
icebp
sbb
push
mov
ret
dec
lds
cmp
push
les
mov
xor
push
iret
push
ret
popa
fiadds
les
das
rorl
mov
das
jno
popa
iret
push
incl
xor
add
sarl
outsl
mov
mov
das
jno
popa
iret
push
incl
xor
add
mov
test
sub
popa
fldenv
adc
std
xchg
lahf
sbb
lods
pop
loopne
pop
test
fldl
inc
xor
sub
stc
imul
cmp
push
rorb
pop
aas
fisttpl
push
dec
or
jno
mov
xchg
ds
sbb
fldl
add
pop
ja
jnp
dec
lcall
pop
xor
push
aad
xlat
sbb
or
in
mov
jge
cwtl
lret
in
jge
scas
bound
mov
pop
int3
jnp
out
scas
mov
pop
bound
add
nop
js
jl
sub
pop
push
sbb
xchg
cmp
mov
pop
xchg
in
push
push
lahf
ljmp
and
push
and
es
movsl
push
imul
pop
into
cmp
pusha
mov
push
cld
in
out
in
mov
pop
jb
in
out
push
shll
lods
sbb
adc
pop
test
mov
mov
adcb
pop
and
shrl
adc
jbe
icebp
sub
popa
cltd
dec
test
pop
dec
cltd
push
mov
adc
sbbb
jmp
and
pop
jge
jle
mov
stos
rcll
popf
push
inc
and
sub
mov
scas
pusha
pusha
mov
push
stos
pop
jge
or
cmp
sub
incl
ret
cmp
lea
sbb
jle
clc
or
pushf
add
add
fisubl
lods
lock
pop
cs
or
jns
mov
test
and
or
lret
sbb
shrl
pop
rsqrtps
lock
sbbl
clc
fsts
jmp
and
mov
lret
addr16
cmpsl
popa
mov
out
cltd
test
loope
mov
lds
movb
pusha
scas
xchg
loop
jle
and
mov
adc
inc
pop
xchg
jbe
sarb
add
iret
mov
ds
fiaddl
pop
lods
sub
xchg
jg
lcall
rcll
mov
scas
add
mov
push
mov
cmp
fdivr
mov
dec
mov
jns
sub
out
hlt
dec
mov
lods
ds
dec
and
enter
popf
mov
aad
fcmovnb
push
test
jmp
sti
loopne
sbb
outsl
mov
mov
sbb
push
xchg
call
push
lret
and
out
sbb
push
jge
jne
adc
mov
stos
cltd
pushf
pop
mov
push
dec
fildll
pop
iret
or
rolb
cli
bound
adc
cmp
mov
xchg
jmp
fstpl
mov
mov
arpl
gs
outsl
dec
dec
sub
mov
or
mov
addr16
cwtl
mov
fistl
enter
mov
lahf
imul
xchg
cld
scas
pop
or
mov
inc
out
xlat
lahf
into
push
push
arpl
mov
cmp
xor
mov
clc
imul
xlat
jl
mov
loop
lret
fnclex
lret
xor
jg
xchg
aas
or
sahf
and
aam
xchg
push
and
insl
aam
mov
push
adc
sti
sub
shrb
stos
jmp
xchg
lret
adc
jae
dec
mov
out
push
cs
and
mov
push
mov
sarl
mov
out
clc
mov
int
clc
mov
mov
cmp
rcrb
insl
xchg
sub
push
leave
jb
pop
out
pusha
jp
add
jns
inc
cmpsl
cmp
imul
frstor
add
repnz
xchg
bound
out
rcrb
fldl
mov
sar
cmp
add
xchg
and
pop
cwtl
xlat
scas
pop
out
mov
ret
mov
add
cmp
outsb
fdivrl
mov
or
and
jl
cmp
xchg
fistpll
mov
cmpsb
mov
hlt
jnp
and
mov
mov
cmp
sub
int3
mov
adc
int3
test
fcompl
push
ds
lods
insl
repz
mov
out
sbb
ja
cmp
das
inc
repnz
mov
jne
mov
inc
aas
mov
fsubp
dec
cltd
inc
and
adc
add
xlat
adc
in
xor
bound
aaa
arpl
dec
push
fiaddl
loop
xor
push
add
mov
stos
add
jne
mov
fwait
in
scas
out
mov
cwtl
add
clc
inc
xor
popa
or
jmp
pop
dec
adcb
mov
stc
test
jmp
notl
adc
outsl
cmp
rorb
aad
inc
xor
ret
jl
adc
int3
stc
fwait
imul
jle
shrb
xor
dec
insl
jge
lea
daa
clc
std
mov
mov
mov
pop
iret
push
adc
dec
xor
fiaddl
test
mov
out
xor
add
enter
xchg
pop
in
stc
cmc
fmuls
or
mov
xchg
mov
popf
out
pop
push
ds
ljmp
dec
or
icebp
xchg
cmp
lcall
cld
mov
outsl
mov
out
mov
push
cli
lods
adc
sub
sahf
cmp
xchg
lds
test
push
push
scas
push
lahf
push
push
xchg
lahf
in
and
and
mov
mov
lods
pop
pop
pop
mov
lcall
sbb
lret
cmpsb
rolb
mov
adc
inc
jne
cmp
sti
jmp
sbb
enter
pop
cmp
in
xchg
dec
push
lahf
int3
gs
sbb
jmp
loopne
test
jb
jns
test
inc
sbb
jno
cmp
add
mov
pop
aad
in
adc
adc
stos
pop
and
cltd
push
das
imul
sbb
out
cltd
test
hlt
inc
dec
nop
push
test
shll
loop
xchg
arpl
or
push
outsl
dec
insb
mov
adc
sbb
or
bound
xchg
dec
les
rclb
iret
lcall
movsl
ljmp
pop
dec
xor
push
or
fidivrs
and
stos
sub
mov
xor
adc
jecxz
or
xchg
add
cmpl
push
inc
imul
xchg
or
in
bound
mov
pop
jo
into
addb
dec
in
addps
add
mov
call
xchg
and
mov
sahf
sbb
stos
jge
mov
pop
sub
jae
cmpsb
in
and
loopne,pn
dec
xchg
lcall
jge
push
pusha
sub
jmp
push
mov
fcomps
dec
repz
je
js
test
mov
mov
or
sahf
out
add
dec
out
ds
or
fldenv
push
pause
test
jns
lahf
sbb
scas
xor
mov
sub
sbb
xlat
sahf
sub
shl
jmp
in
push
xrelease
sbb
cs
cmpsl
inc
mov
or
push
idiv
je
jp
bound
lret
rol
adc
mov
jo
lahf
popl
stos
out
pop
inc
add
adc
data16
adc
cmp
jecxz
ret
fwait
sbb
adc
sub
push
mov
mov
lret
pop
fadd
rolb
lret
out
test
xchg
ret
mov
ret
ljmp
cld
sti
popf
xor
jno
mov
pop
xor
gs
leave
imul
or
push
sbb
sub
or
adc
mov
inc
fs
mov
loope
jno
or
jbe
push
testl
inc
push
mov
cltd
inc
push
mov
fwait
inc
xchg
sub
adc
in
cmp
in
stos
mov
out
push
xchg
jl
rolb
push
mov
mov
lcall
sahf
xchg
cmp
out
outsb
arpl
xlat
lods
sub
stos
addr16
pop
rcrl
cld
jnp
decb
push
mov
xorb
adc
in
mov
dec
imul
inc
stc
xor
jb
loop
add
mov
fnsave
pop
repnz
and
bound
push
mov
mov
mov
scas
mov
adc
push
inc
loopne
push
fcompl
and
addl
or
adc
pop
xor
mov
movsb
xchg
cmp
int
mov
lock
js
leave
shll
mov
scas
inc
push
mov
mov
popa
push
mov
pop
inc
das
jb
das
leave
add
or
xor
mov
lods
insb
es
adc
in
es
dec
and
test
idivl
xchg
jo
cmp
movsb
rol
xchg
out
mov
cmp
leave
and
jl
or
mov
int
insl
cltd
outsl
mov
lds
mov
pop
nop
subl
mov
mov
dec
jmp
sub
sub
cli
dec
mov
sbb
mov
cmp
sub
shl
xor
mov
and
and
int3
push
pop
movsb
cmp
pop
xchg
jge
dec
dec
pop
mov
or
sbb
push
dec
leave
out
sub
lods
lret
cmp
ret
cmp
std
hlt
sahf
mov
xor
addr16
inc
clc
dec
jge
add
dec
fisubrl
add
add
push
scas
divl
sahf
stos
adcl
jle
jecxz
cmp
ret
negl
and
dec
xor
movsl
pop
pop
dec
sbb
adc
call
mov
mov
add
ss
imul
stos
xor
or
jmp
andl
leave
cmp
dec
pop
sub
cmp
jno
aaa
pop
ljmp
lods
and
loopne
mov
mov
pushf
ret
and
cmpsb
sti
mov
xchg
cmpsb
sub
aas
lods
inc
jp
adc
xchg
nop
cld
iret
loope
cltd
jo
or
inc
jle
outsb
push
and
fdivl
xchg
push
sub
or
adc
xor
int
xor
nop
adc
std
xchg
das
or
mov
daa
enter
dec
xchg
leave
aas
shl
sub
jmp
ljmp
mov
mov
adc
sub
in
loope
rcl
shlb
jbe
fs
andl
pop
outsb
push
mov
mov
mov
inc
cwtl
dec
xor
xchg
push
cmp
push
mov
int3
add
sarb
insl
mov
push
dec
adc
mov
fisubl
dec
aaa
xchg
lahf
mov
mov
cltd
out
repz
in
cmp
push
mov
push
and
push
jl
xchg
dec
jns
xchg
and
aad
sbb
cmp
mov
xchg
inc
rcrl
xlat
popf
out
mov
adc
jnp
add
or
push
xchg
push
ljmp
push
push
jne
and
repnz
fisttps
repnz
subl
adc
cmp
call
xorl
mov
push
adc
rorb
sbb
mov
icebp
fsub
lret
icebp
sub
mov
inc
fs
je
lret
lods
mov
pushf
scas
or
fwait
sub
jnp
or
adc
leave
repnz
sub
bound
insl
or
mov
xchg
mov
pop
aaa
mov
or
adc
cmp
shrb
inc
divl
pop
mov
leave
rolb
or
mov
enter
jmp
push
fstpt
stos
pop
mov
into
rcr
int3
xlat
xor
push
subb
push
aam
std
jl
xor
mov
cmp
jg
loop
mov
in
popf
and
pop
pop
jle
mov
in
xlat
cmpsl
inc
mov
sbb
imul
mov
out
vmread
insb
add
test
negb
push
sbb
pusha
fbstp
and
jae
jecxz
xor
xor
and
pop
push
mov
lcall
add
movsl
jbe
sbb
pop
mulb
test
popa
movsl
pop
pop
loopw
icebp
push
sub
roll
fadds
inc
sub
pop
mov
or
mov
aas
lea
loope
inc
jae
xor
lea
mov
out
jle
cmp
test
and
push
sub
mov
iret
jbe
jbe
fs
dec
sbb
test
pop
push
aas
xchg
test
sub
cmp
imul
mov
repnz
shl
xor
mov
or
pop
je
push
cmp
repz
int3
in
push
testl
imul
xchg
xor
mov
pop
jns
outsl
or
inc
pusha
push
in
or
idivl
jmp
ret
int
cmp
stos
xchg
lock
insl
mov
cwtl
xor
cs
test
outsl
test
inc
sahf
int3
sti
inc
pop
sub
fwait
iret
stos
jns
scas
icebp
sbb
aas
pusha
addr16
aas
pushf
outsb
sub
bound
out
ljmp
fisubs
call
mov
push
xchg
outsl
outsl
mov
lea
sbb
clc
push
aam
ret
in
mov
dec
xor
or
nop
mov
cmp
cmp
sahf
popf
cld
bound
cmp
clc
jno
dec
or
ffree
rorb
pop
call
ds
cld
xchg
sbb
cld
ror
mov
push
add
insl
add
outsl
jnp
mov
cmpb
out
adc
repz
stos
sbb
cmp
int
cwtl
test
fwait
xor
dec
mov
jae
lret
push
lahf
shr
cmpsl
fidivrl
aam
frstor
lcall
mov
mov
out
popf
inc
pop
push
sti
cli
pop
imull
dec
test
xchg
and
int
pop
lods
xchg
jl
loop
xchg
dec
lahf
push
fwait
push
sub
mov
andb
out
sbbb
fimull
fcoms
mov
push
push
pop
jae
adc
lcall
mov
das
fs
jmp
jmp
inc
mov
push
out
aad
insl
pop
in
movsb
fisttps
in
push
xor
add
and
mov
mov
sbb
loopne
or
pcmpgtb
and
inc
add
nop
mov
das
push
int3
imul
out
je
add
pop
jle
push
loop
rclb
mov
mov
or
daa
mov
es
data16
pop
inc
sbb
and
mov
aaa
sbb
adc
icebp
fidivrl
push
or
out
mov
stos
fwait
insb
and
out
push
mov
xor
mov
and
imul
lds
xchg
jae
repz
andl
mov
add
push
sub
inc
insb
jp
fisubl
mov
mov
in
mov
gs
in
xchg
mov
fisttps
sub
pop
fs
sbb
pop
jne
mov
dec
mov
dec
inc
xorb
jg
xchg
pop
sub
popf
testl
frndint
dec
xchg
ljmp
in
jo
mov
std
das
dec
into
imul
dec
mov
imul
rcrl
add
cmpsl
aam
lods
jne
xchg
jb
cmpsl
pop
aad
dec
lret
lock
dec
or
hlt
psubusb
push
push
repnz
icebp
pop
outsl
adc
andb
out
push
outsl
cmpsb
stos
and
xor
lret
fldt
in
arpl
adc
inc
idivl
sub
or
xchg
cmp
imul
and
push
shll
sbb
mov
cmpsl
add
sbb
sub
icebp
inc
stos
dec
xor
ds
sbb
call
icebp
rorb
jecxz
les
add
call
jbe
loopne
aas
shl
mov
repz
mov
fcomps
andl
xchg
fistl
push
sub
pushf
mov
or
sbb
cmpsb
jmp
clc
negb
push
xor
shll
sahf
jb
lcall
shrb
fdivr
in
sbb
repnz
jecxz
cmp
pop
out
mov
lret
cmp
fcmovb
mov
out
push
mov
loop
jl
xor
cltd
movsl
mov
aam
jb
and
xchg
sbb
imul
xor
movsb
ret
test
or
dec
mov
les
jle
jo
rorl
pop
xor
lods
push
aad
and
aad
sbb
cmp
pop
jmp
lahf
imul
add
fistpll
sbb
push
cmp
xor
lods
add
dec
inc
lds
pop
and
xor
lahf
mov
xor
or
pop
ja
popf
cmp
add
add
shl
push
stos
pop
dec
pmuludq
sub
es
pop
push
dec
inc
fsubrs
scas
xor
fdivs
push
cli
out
add
inc
or
fdivr
lcall
cmp
hlt
daa
fisubrl
xchg
dec
sub
jbe
in
data16
aad
call
xor
dec
xor
int
lds
int3
fildll
cmp
out
lea
scas
dec
lds
mov
push
xchg
adc
ja
movsl
dec
mov
pop
ja
sbb
mov
fnstenv
fisttps
xchg
jo
shll
out
ret
ljmp
pop
addr16
and
orb
adc
std
sbb
xchg
faddp
fcomip
loope
movsl
shr
fcomps
mov
or
mov
mov
or
fwait
sub
aas
jbe
pop
les
scas
pop
mov
sahf
sti
movsl
daa
sbb
jl
dec
outsl
data16
cmc
cli
push
mov
push
mov
pop
data16
push
pop
mov
in
adc
fidivs
sub
pop
ds
mov
xor
xchg
jge
insb
mov
adc
cmpsb
and
inc
jecxz
sbb
xchg
pop
pop
iret
adc
in
jge
jg
imul
xchg
or
iret
lds
xor
outsb
cltd
jge
push
mov
ret
cmpb
add
push
in
adc
xor
or
add
shlb
pop
or
fstpl
pop
repnz
mov
xor
mov
push
fwait
xor
push
xlat
aad
out
out
enter
xchg
cmp
push
cmpl
cmpsb
pop
push
inc
fidivs
add
stc
adc
cmc
mov
add
jo
xchg
cmp
jo
push
add
test
mov
daa
cmp
inc
addr16
lds
mov
outsb
testl
mov
enter
sub
fwait
or
jmp
repnz
pop
rcr
jns
mov
adc
pop
jle
das
ljmp
xor
pop
mov
loop
sbb
lret
pop
ret
divb
daa
jp
pop
mov
mov
mov
mov
rcll
mov
pop
or
pop
push
mov
into
movsl
xor
ja
aad
dec
cmp
cwtl
jnp
jp
sbb
mull
or
mov
push
mov
xchg
mov
and
and
inc
cmp
sahf
pop
stos
call
fildll
loope
mov
sbb
push
lock
stos
cmpsl
cmc
mov
es
lds
rcrl
std
aam
jecxz
inc
add
push
dec
sar
push
ss
pop
or
fsubl
adc
pop
stc
jb
stc
or
inc
xchg
mov
pop
rorl
sbb
push
mov
cmp
incl
add
test
sub
fistps
xchg
pop
mov
insb
cs
mov
and
dec
cli
aam
pop
cmc
outsl
mov
loop
dec
mov
jp
inc
xor
imull
cltd
fnsave
cwtl
jb
icebp
cld
sub
nop
shr
cmp
lcall
cmp
outsb
call
aad
or
pop
je
jbe
scas
dec
ror
lods
mov
sbb
sti
adc
test
or
mov
or
in
pop
mov
cmpsb
lods
enter
stc
sub
and
mov
outsb
or
arpl
inc
pop
aas
mov
mov
stos
out
xchg
xchg
lcall
or
sub
push
xchg
stc
jb
insl
aam
gs
adc
jp
push
out
mov
inc
or
leave
push
jmp
jecxz
or
sbbb
in
andl
adc
outsb
ficompl
pop
and
pop
mov
push
pop
jb
shl
loope
sti
add
jbe
shlb
pusha
decl
inc
sbb
or
sub
popf
fwait
inc
xchg
jmp
cmp
rol
pop
ret
shll
clc
xchg
mov
cmp
jp
shrl
mov
das
jno
popa
iret
push
incl
xor
add
sarl
outsl
mov
mov
das
jno
popa
iret
push
incl
xor
add
roll
shrl
mov
das
jno
popa
iret
push
incl
xor
xor
out
shrl
mov
das
mov
sahf
gs
incl
inc
pop
test
push
push
lock
sbb
sub
adc
or
jmp
pop
add
add
add
add
pop
dec
add
outsb
add
add
add
add
add
or
push
add
or
and
dec
add
add
lcall
add
add
mov
add
mov
add
add
add
aad
jmp
add
add
add
add
add
mov
jno
dec
add
dec
add
add
jmp
add
mov
add
pop
add
je
stos
add
add
add
inc
add
add
add
popa
add
add
add
add
aam
dec
add
add
add
sub
je
js
ret
add
lods
add
add
filds
fildl
lods
add
push
add
lret
add
clc
add
add
jge
push
add
sbb
dec
add
add
mov
add
or
add
add
popa
add
add
inc
add
aaa
add
add
add
add
add
or
addl
ret
add
add
add
add
out
add
add
add
xor
push
add
add
add
add
add
and
mov
add
add
add
add
adc
add
add
mov
or
popa
add
add
xchg
sbb
je
inc
add
add
add
add
add
add
add
add
add
icebp
add
add
add
add
incb
pop
add
add
sbb
lea
pop
add
push
add
add
adc
push
add
mov
mov
loopne
dec
add
add
add
add
add
pop
add
je
adc
mov
jp
cmpsb
add
pop
add
popa
add
add
add
dec
add
add
add
sbb
adc
dec
add
add
add
add
add
mov
add
add
add
add
dec
add
add
add
and
add
cmpsb
add
add
mov
cmp
call
add
pop
add
add
add
popa
add
add
add
bound
pusha
add
add
add
add
pop
add
add
lret
add
add
dec
add
add
imul
addb
add
stos
add
adc
inc
add
add
add
dec
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
jmp
pop
add
add
add
add
add
popa
add
add
sbb
aaa
add
add
add
les
add
xchg
add
add
add
add
push
add
dec
add
pop
add
add
adc
add
add
popa
add
add
icebp
add
add
add
add
add
dec
add
add
add
fadds
add
pusha
add
add
add
push
add
adc
add
mov
les
add
incb
and
roll
add
add
add
or
cmpsl
add
add
add
push
add
insl
add
add
dec
jp
cltd
cmp
push
adc
mov
lods
imul
push
aas
repz
mov
jns
imul
mov
in
pop
arpl
lods
add
rcrl
repnz
andb
mov
insb
xor
sub
test
pop
mov
fdivrl
xchg
popa
push
adc
sub
sbb
imul
add
loop
xchg
pop
sbb
add
mov
pop
call
pop
sub
sbb
stos
adc
ret
mov
repz
sbb
xchg
std
call
mov
fimull
inc
jns
les
inc
leave
add
lret
pop
in
out
mov
pop
in
daa
ja
fisubrs
test
jmp
push
ss
shr
dec
fldt
inc
xor
xor
shlb
fdivr
sub
imul
fwait
push
cmc
mov
ja
sub
fwait
add
adc
pop
fimuls
xchg
mov
push
iret
fcompl
popa
repnz
int
incl
clc
jne
mov
jl
pop
sbb
xlat
rcl
cld
mov
lods
test
jno
std
stos
loop
aad
pop
mov
pop
sahf
in
rcll
int3
lods
sbb
sti
and
jbe
fimuls
xchg
sahf
sbb
mov
or
das
packssdw
lret
xchg
fwait
add
pop
and
idivb
movsb
leave
gs
aas
jl
adc
inc
rcrl
out
rolb
mov
mov
out
ret
cmp
out
cmp
inc
add
fwait
dec
in
daa
stos
loope
iret
sbb
adc
cmp
mov
icebp
aad
cmpsb
xor
inc
scas
aad
and
mov
push
xlat
mov
lahf
xor
mov
repnz
add
cmp
sti
mov
sbb
cmc
jp
adc
add
addl
lods
or
jnp
add
clc
les
xor
dec
xor
dec
pop
movsb
inc
les
sub
fidivs
aaa
xlat
push
or
mov
inc
xchg
jecxz
sub
and
int
aaa
pop
adc
aas
mov
shll
add
cwtl
rolb
dec
pop
out
xchg
nop
mov
sbb
mov
xchg
test
push
popa
out
gs
aas
nop
arpl
shl
ja
jb
pop
sar
jp
sbb
inc
xor
jnp
sbb
add
and
adc
mov
ret
mov
sub
mov
scas
arpl
das
movsb
lahf
jb
fnstcw
mov
mov
jmp
push
iret
xchg
mov
adc
pushf
fs
es
loopne
pushf
lret
add
push
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
