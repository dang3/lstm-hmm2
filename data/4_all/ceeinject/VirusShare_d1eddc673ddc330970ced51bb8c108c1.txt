call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
out
addr16
add
adc
sub
pop
jne
arpl
out
test
xchg
mov
cmpsb
hlt
xchg
xchg
ja
addr16
add
adc
fs
je
inc
pop
sub
movsb
out
mov
xchg
mov
cmpsl
hlt
xchg
les
xor
add
adc
fs
je
inc
pop
push
mull
cmc
aam
into
mov
pop
push
addr16
insb
pop
adc
inc
pop
jno
iret
xor
jbe
in
fmuls
in
mov
dec
or
and
mov
ss
popf
dec
jb
adc
dec
mov
pop
cmp
repnz
cmp
adc
insb
lods
hlt
pushf
mov
add
repnz
sbb
addr16
adc
ret
popa
adc
stos
inc
aaa
or
cs
stos
out
and
add
je
in
or
push
cwtl
fs
push
cltd
fucomip
das
std
pop
cs
je
pop
xchg
clc
xchg
nop
in
iret
hlt
adc
js
mov
ret
gs
mov
or
dec
add
les
xor
add
adc
fs
je
inc
pop
push
mull
xchg
mov
cmpsl
hlt
xchg
les
jne
add
adc
add
push
add
lahf
fstl
mov
cmpsl
jmp
cli
mov
and
and
adc
or
pop
sub
mov
scas
xlat
mov
cmc
xchg
cwtl
mov
xor
addr16
dec
daa
je
inc
pop
push
mull
xchg
mov
cmpsl
hlt
xchg
les
xor
add
adc
fs
je
inc
pop
push
mull
xchg
mov
cmpsl
hlt
xchg
les
pop
fucompp
adc
fwait
gs
repz
loopne
mov
icebp
mov
lock
jle
rorb
fs
scas
imul
add
lret
adcl
or
mov
add
push
xor
lahf
ljmp
clc
inc
arpl
push
mov
jge
cmp
popf
push
into
adc
jb
mov
imul
xor
and
sub
fdivr
addl
roll
xchg
fdivs
cmp
adc
mov
mov
roll
mov
xchg
jo
ret
sub
mov
lret
int3
cmpl
out
test
cmp
ds
and
adc
aaa
cmc
push
xchg
inc
lret
push
sub
add
push
sar
sbb
fsts
cmp
test
divb
repnz
pop
shlb
icebp
jmp
out
adc
aas
mov
je
mov
inc
fistpl
ja
cmp
pop
cmp
fsub
test
cmp
or
dec
add
fdivl
int3
pop
mulb
test
and
cwtl
fists
icebp
add
jo
mov
mov
loop
jae
arpl
lds
mov
repnz
jb
shl
jmp
or
push
mov
jae
mov
jo
cmp
add
out
pusha
mov
sub
nop
fbld
mov
mov
cmp
pushf
cmc
cmp
mov
andl
dec
mov
sub
dec
mov
fxch
sbb
ret
adc
pusha
rcll
cmpsl
pusha
jbe
popl
or
push
sbb
pop
movsl
mov
daa
negb
test
popa
sbb
es
cs
or
jmp
pushf
fst
sbb
sbb
cmp
and
xor
inc
mov
dec
dec
xchg
pop
push
inc
fistl
pop
roll
fcmovne
std
cli
pop
fs
pop
inc
lret
mov
sbb
mov
cmpsl
nop
add
xor
xchg
inc
cld
jge
fsub
int
in
sarl
loope
daa
test
xchg
xlat
dec
ret
dec
xlat
jecxz
iret
std
lock
pop
push
dec
and
push
stos
outsb
cld
dec
xor
push
dec
push
xchg
add
aam
xchg
cmp
push
cmpl
jae
mov
cmp
pop
stos
pop
pop
stos
fwait
xchg
aam
jnp
cmpsb
xchg
lcall
mov
mov
inc
sub
fwait
cmp
orb
in
mov
jp
or
pop
cwtl
gs
cmpsb
dec
pop
daa
data16
lods
cmp
pop
mov
fisttpll
aad
xor
testb
fsts
aam
xchg
sahf
subb
sub
sub
jnp
hlt
adc
sti
in
ss
scas
loop
mov
fdivrl
and
sbbl
rorb
cmp
sub
out
jge
test
scas
push
adc
push
jle,pt
and
pop
les
pop
sti
mov
lahf
jbe
pop
fisttps
mov
dec
lods
rorl
xor
je
mov
scas
mov
xchg
fwait
push
daa
lds
in
rorl
inc
and
or
cmp
nop
sub
push
inc
aas
les
rcr
sbb
test
gs
push
xlat
mov
out
inc
fdiv
mov
dec
xchg
add
mov
mov
stos
in
fldt
leave
into
push
test
outsb
sub
popf
dec
push
mov
xchg
lahf
aas
xchg
std
add
xor
shlb
push
mov
lea
lret
push
sub
or
outsb
fstpl
jae
pop
mov
mov
xlat
sbb
sbb
add
repz
imul
push
cmpl
loope
adc
dec
or
add
inc
enter
fcmovne
pop
mov
popa
in
pushl
out
lcall
push
xor
ret
sub
cwtl
arpl
cmp
cmp
or
call
xor
push
jp
inc
nop
clc
out
or
mov
and
lds
mov
out
inc
cmp
inc
or
aam
or
inc
js
add
imul
inc
cmova
in
add
xchg
aas
jns
cmp
mov
dec
jno
mov
dec
popf
xor
sahf
dec
mov
sub
and
out
stc
add
mov
sub
ret
addr16
mov
call
sbb
push
popf
xchg
test
dec
mov
pushf
aas
jecxz
and
sbbb
mov
cmp
imul
sbb
in
mov
insl
in
stc
push
and
lods
mov
pushf
test
lahf
aad
into
xchg
gs
xchg
mov
push
jo
sti
xchg
lret
cmpsl
call
mov
add
adc
sbb
cmc
lods
sub
cwtl
sbb
out
dec
pop
dec
xchg
in
test
sub
lods
push
cld
inc
int3
enter
clc
mov
inc
jns
mov
adc
xor
cmp
cmp
lret
pop
pop
inc
insl
ss
addr16
icebp
shlb
push
js
jmp
xorb
movsl
jo
xchg
pop
fldenv
mov
mov
daa
stos
loopne
dec
aam
inc
ss
enter
mov
ja
dec
mov
hlt
or
imul
fldl2t
in
movsb
mov
dec
fwait
mov
inc
add
rorl
pusha
lret
incl
sbb
sar
bound
pop
mov
cwtl
mov
outsl
mov
cmpsl
inc
mov
dec
mov
fwait
aaa
arpl
fadd
hlt
push
fadds
jl
scas
push
repnz
out
and
cmc
ljmp
bound
out
mov
div
out
sarl
jmp
pop
cmc
in
pop
xrelease
cs
inc
out
jge
push
pushf
mov
sarb
and
jmp
mov
jne
push
repz
leave
add
or
mov
ss
scas
sti
xchg
sub
mov
leave
mov
sub
subps
rcll
xchg
dec
outsb
add
shrb
pop
cltd
xchg
test
fcoms
dec
insl
cmp
in
pop
int3
cmc
mov
pop
sbb
mov
enter
ds
jnp
pop
dec
enter
xlat
das
rorl
cmp
push
loopne
push
pushf
sub
rcrb
in
fs
mov
inc
dec
sbb
movsl
loopne
push
xchg
std
pop
cld
ss
iret
push
aas
pusha
sub
iret
mov
mov
and
incl
jne
mov
addb
add
sti
mov
xchg
inc
or
in
cmp
mov
fdiv
arpl
aaa
fimull
pop
pop
jecxz
notl
movl
fldpi
outsb
dec
insb
push
xor
mov
dec
into
mov
frstor
adc
pop
or
mov
mov
add
in
int3
adcb
add
data16
and
mov
xchg
xor
aaa
sub
repnz
insb
xorl
or
jnp
mov
outsl
adcb
fdivl
test
and
lahf
mov
xchg
add
and
dec
push
cmpsl
notb
aam
sbb
out
lret
or
inc
jle
out
jnp
inc
xchg
cmp
bound
adcl
pop
cmc
scas
in
pushf
inc
aas
mov
xchg
adc
mov
jbe
add
cmc
xchg
or
std
pusha
push
stos
lret
add
stc
cwtl
mov
mov
rclb
fxch
xchg
mov
push
dec
xor
cli
in
jae
in
es
cs
adc
push
inc
sub
fcoml
dec
xor
pop
andl
jb
ja
fstpt
mov
testb
mov
dec
xlat
and
jp
pop
push
in
ljmp
aas
shrb
iret
roll
int
adc
mov
sub
ret
out
pop
mov
in
daa
movsl
loopne
lcall
loop
dec
push
cli
int3
xor
ja
cli
push
ds
fildll
js
push
data16
mov
fldl
loope
lods
test
adc
cmp
xlat
pop
mov
push
xchg
dec
adc
std
sbb
ja
jne
lret
js
hlt
jns
sbbl
insb
ficompl
fcmovbe
cli
inc
dec
push
push
jl
sub
xchg
or
dec
or
test
pop
sahf
adc
push
data16
mov
adc
aas
or
mov
dec
mov
daa
pop
dec
aad
addr16
pop
clc
jae
cmp
dec
pop
pop
bound
leave
push
pop
mov
mov
jo
inc
jmp
dec
jl
imul
xor
dec
mov
div
in
pop
cmp
mov
scas
fsts
mov
iret
add
push
inc
and
pop
sub
leave
push
lea
in
mov
mov
push
mov
mov
push
pop
imul
gs
dec
aam
and
push
pop
add
push
or
jp
or
ljmp
push
clc
mov
lret
testl
mov
inc
cmpsl
pop
loope
add
cltd
test
dec
in
sub
popa
les
lock
xchg
sub
jns
pop
addl
ret
jb
movsb
push
sub
ds
sahf
out
sarl
push
adc
mov
add
xchg
pop
adc
add
dec
fs
dec
ja
sbb
into
aas
xor
cmpsl
in
sub
add
sub
ja
and
xor
mov
pushf
repnz
adc
inc
loopne
inc
sub
es
js
xchg
hlt
cmp
or
stos
jle
aaa
pop
fiadds
ficomps
outsb
in
push
andb
push
mov
sbb
fstpt
out
addr16
int
dec
mov
adc
cmp
and
xchg
subl
int3
lret
sub
and
jne
js
push
roll
adc
nop
pusha
bound
repnz
stos
mov
scas
sahf
insl
cs
pop
inc
xor
pop
push
idivl
mov
fcomp
pop
or
adcb
push
xchg
adc
data16
dec
mov
inc
je
stos
repz
inc
ficompl
sbb
mov
fcomp
out
pop
add
add
or
jge
rcrl
mov
xor
mov
adc
je
mov
xchg
pop
adc
out
push
mov
shrl
add
or
testb
push
jno
mov
popa
aaa
mov
arpl
mov
mov
call
repnz
push
mov
test
push
sub
stos
jb
mov
sti
aaa
jne
adc
lea
cmp
mov
enter
xchg
sbb
jle
insl
pusha
lret
jae
notl
and
bound
addr16
mov
test
xchg
movsl
pop
and
jge
loope
leave
shl
xchg
into
and
push
push
push
mov
dec
test
push
mov
xor
xchg
icebp
mov
bound
add
daa
inc
sbb
js
fs
jmp
aaa
sbb
jns
in
add
cmp
xchg
or
mov
mov
cmp
jle
jns
or
inc
lcall
gs
fnstenv
jns
sbb
test
pop
rorl
repnz
dec
add
or
mov
push
xor
loopne
or
jl
scas
or
iret
pop
popf
ret
add
and
mov
add
xor
jle
mov
loopne
cs
nop
push
xor
mov
sbb
test
pop
xor
imul
mov
ret
xchg
cmp
ficomps
add
sub
sbb
jge
in
gs
sbb
fidivrs
push
xor
mov
push
mov
jb
aas
mov
xchg
xchg
mov
xor
outsl
test
shlb
jge
xchg
pop
loope
ds
push
loop
mov
fnstenv
mov
push
inc
into
mov
mov
cli
adc
mov
jl
int
adcl
inc
movsl
jl
jns
icebp
arpl
popf
out
sbbl
aam
dec
popa
push
cmp
or
add
sar
sbb
push
sub
add
out
outsb
idivl
xchg
and
in
cld
jnp
adc
loop
push
les
sub
int
clc
outsl
sbb
mov
std
out
xlat
push
cmp
jns
out
pop
icebp
jns
pop
pop
mov
clc
xor
fnstcw
movsl
shlb
and
sbb
and
adc
jbe
jnp
pop
sub
div
out
jae
test
and
xlat
pop
fimull
test
hlt
movsl
adc
pop
push
mov
sub
add
je
inc
int3
and
push
and
sbb
mov
popf
xchg
adc
push
push
int
gs
iret
lock
test
sbbb
dec
xchg
jne
and
inc
xor
mov
push
imul
fwait
adc
jo
enter
mov
icebp
inc
add
loop
sub
sub
dec
cmc
test
pusha
sahf
repnz
call
andb
push
jb
jp
loopne
out
mov
inc
inc
stc
sbb
cmp
mov
or
aad
jnp
sti
mov
lods
iret
adc
jnp
or
xor
adc
iret
jle
pusha
push
sub
pushf
js
mov
arpl
xchg
das
incb
or
ljmp
fcompl
jnp
mov
jb
xor
sbb
inc
pop
repnz
push
insb
xchg
adc
in
mov
push
loope
inc
dec
in
mov
js
stos
and
add
sub
or
mov
xor
and
xchg
or
or
mov
lock
ljmp
popa
pusha
push
adc
xor
loop
loope
jecxz
fwait
imul
addl
xchg
movsb
data16
sub
fmuls
scas
aaa
adc
popf
pop
or
adc
fisubrl
or
xor
js
rcrl
int
cmpsl
sub
lret
pop
repnz
cmovns
ss
enter
stos
test
rcrb
jb
pop
ret
andb
lods
test
sbb
insl
hlt
pop
stos
fisubs
mov
push
jmp
out
jg
ljmp
repnz
push
or
test
mov
add
popf
stos
and
mov
fwait
mov
loop
inc
inc
push
roll
cmc
mov
lods
xchg
lods
cmp
add
out
scas
sub
call
mov
repz
jb
mov
xchg
rcl
lret
inc
pusha
mov
cmp
enter
sbb
int
movsb
mov
jmp
pushf
popf
push
jae
xor
movsl
mov
dec
push
push
xchg
mov
out
or
cmpsl
clc
adc
mov
nop
mov
xor
out
dec
mul
stos
cmp
or
sub
rcrl
push
sub
lock
in
loopne
shl
popa
inc
adcl
jo
mov
push
xchg
add
sub
in
int3
pushf
cmpsl
sahf
leave
pop
or
outsl
mov
lods
mov
xchg
jbe
mov
dec
mov
pop
insb
outsl
mov
sbb
in
scas
addb
jle
hlt
scas
jbe
loop
shlb
scas
loopne
cmc
adcb
add
int3
insb
nop
into
bound
fistpl
add
xchg
cltd
sbbb
pop
loop
aad
mov
lock
test
dec
inc
pop
sub
inc
and
test
pop
mov
outsl
mov
dec
sbb
outsl
jmp
enter
xchg
or
ljmp
dec
fsubrs
push
sub
xchg
jge
lock
mov
push
imul
ljmp
data16
mov
push
fprem
aam
add
iret
mov
mov
adc
push
push
xor
scas
adc
pop
inc
or
xchg
sahf
dec
leave
or
sub
pop
lea
pop
pop
out
cmpsb
jle
mov
lahf
sub
in
mov
fadd
icebp
sahf
and
xor
cmp
xchg
out
adc
pop
imul
lock
cmp
ss
mov
ret
fstps
scas
adc
pop
jmp
fsts
in
pop
xor
jecxz
xchg
cwtl
jp
push
rcrl
and
sbb
fldt
or
int3
outsb
jg
dec
mov
xchg
cmc
stc
popf
adc
xor
in
sahf
daa
fsubrl
sbb
mov
mov
cmp
sub
push
sub
mov
inc
mov
and
mov
push
mov
lret
jl
gs
pop
out
pop
in
sub
cmovns
rcrb
cwtl
loope
mov
mov
mov
js
aad
cltd
scas
xchg
loope
cmp
vcvttsd2si
and
mov
adc
cmpl
lds
push
mov
mov
aam
add
scas
hlt
and
enter
mov
popf
xchg
mov
jecxz
pusha
sub
fnstenv
orl
out
inc
and
fs
movsb
mov
xor
pop
call
xchg
adc
or
cmpsb
mov
cs
mov
popf
lret
add
mov
scas
or
fnsave
and
jo
dec
out
stos
mov
mov
sbb
push
xor
dec
xchg
fildll
jb
pusha
jae
enter
sbb
lcall
and
fmul
clc
cmp
lret
in
cmp
xor
add
push
jb
out
ror
and
xchg
push
ljmp
fs
aas
push
sub
push
es
and
jb
mov
ds
pop
push
or
inc
daa
sub
shll
scas
cltd
or
pop
inc
dec
adc
sarl
call
push
enter
xchg
and
icebp
inc
movsl
cli
lcall
inc
dec
mov
adc
push
test
pop
movsl
scas
add
adc
enter
xor
jne
xchg
arpl
push
pop
incl
test
mov
scas
add
lods
ja
pusha
adc
cmp
lods
lret
dec
rep
add
mov
sbb
jmp
push
cltd
sub
xor
xchg
int
cmp
cmpsl
insl
mov
fists
std
xorb
mov
imul
insb
test
js
sarl
nop
sbb
daa
adc
xchg
pop
xor
das
cltd
cli
adc
dec
adc
in
inc
xchg
pop
call
stos
pop
insl
gs
sbb
in
pop
inc
pusha
icebp
in
sbb
ljmp
or
jnp
hlt
movsb
mov
inc
mov
repz
jecxz
and
ja
xor
jge,pn
add
or
jb
fsubrs
loop
fisubs
xor
mov
xchg
jo
mov
adc
dec
aas
ror
movsl
xchg
sbbb
daa
mov
insb
or
enter
inc
dec
push
inc
sar
out
cs
ja
inc
jmp
test
push
jne
dec
je
cmpsb
ljmp
mov
adc
out
pop
leave
ja
dec
ret
cmp
dec
test
sbb
fldl2e
aaa
or
leave
leave
imul
mov
nop
fs
loop
inc
psubusw
or
arpl
xor
pop
popa
fs
mov
cmp
mov
inc
fcmovu
inc
jp
jnp
fwait
jae
dec
jl
ja
xlat
dec
push
pusha
jne
shl
in
dec
mov
sbb
pop
mov
jl
lahf
pop
sbb
ret
mov
xor
or
cmp
or
sub
rorb
or
pop
jbe
inc
or
add
mov
jns
lcall
or
cmc
lods
aas
cmpsb
dec
jle
fwait
pop
scas
pop
mov
daa
test
aad
jle
aam
sbb
cmp
push
mov
and
jl
es
xchg
push
and
out
pushf
outsb
mov
xchg
hlt
dec
pushf
dec
pusha
push
enter
sbb
fisubrl
mov
jno
or
ds
testb
stos
xchg
add
leave
pop
jp
jns
lret
lds
and
inc
dec
pop
inc
or
ss
cli
jno
mov
dec
psrlw
fmul
xchg
xchg
and
mov
xchg
aaa
movl
das
das
sbb
pop
stc
mov
in
jg
dec
mov
pushf
mov
daa
sbb
rclb
or
jns
js
and
je
mov
cwtl
mov
mov
cmp
aaa
cmp
int
mov
pushf
or
mov
lret
mov
sub
cmp
push
xor
xor
adc
std
aas
xchg
insl
xor
pop
popa
cmp
mov
cmpl
xor
jp
cs
outsl
or
cmp
cmp
jge
cwtl
dec
xor
inc
fldcw
pop
cltd
cmovbe
xchg
xlat
push
mov
leave
inc
outsl
int
dec
mov
pop
push
data16
add
adc
fs
je
inc
pop
push
mull
xchg
mov
cmpsl
hlt
xchg
les
xor
add
adc
fs
je
inc
pop
push
mull
xchg
mov
cmpsl
hlt
xchg
les
xor
add
adc
fs
je
inc
pop
push
mull
xchg
mov
cmpsl
hlt
xchg
les
xor
add
adc
fs
je
inc
pop
push
mull
jecxz
insb
das
or
js
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jmp
push
pop
xchg
jg
mov
jb
inc
mov
fiadds
sti
push
out
arpl
push
mov
xchg
jg
psadbw
das
dec
jbe
fildll
out
push
jmp
adc
jl
ss
add
notb
ljmp
cld
pusha
xchg
ja
inc
shrb
xor
and
das
ret
sbb
mov
ret
rclb
jmp
cld
mov
push
addr16
stos
dec
loope
mov
jg
in
in
rclb
mov
mov
out
pop
fildl
shll
and
xchg
sbb
bound
leave
test
add
scas
or
jecxz
into
mov
out
or
pop
aam
xor
and
adc
jb
mov
sbb
test
mov
sbb
jne
andb
push
out
data16
pop
adc
push
cld
and
and
xor
imul
outsl
fisubs
push
add
cmpsl
jbe
add
mov
xchg
jg
lss
das
outsb
es
movsb
fdivp
or
push
xchg
push
mov
ret
sbb
inc
mov
inc
mov
ja
pminsw
popf
xor
adc
cmpsb
es
stos
pop
movsl
or
arpl
adc
aam
test
or
cmp
das
aas
es
filds
out
push
jmp
jbe
inc
scas
push
mov
xchg
jg
psadbw
das
aas
es
filds
out
push
jmp
jbe
inc
scas
push
mov
cs
cltd
andl
test
pop
sub
in
andl
and
arpl
leave
fwait
cmp
xlat
mov
iret
pop
ret
push
push
out
jmp
sbb
mov
pop
push
fisubs
mov
fbld
js
adc
lahf
jne
and
mov
movsl
push
dec
lret
mov
lock
jb
out
sbb
roll
nop
mov
xchg
data16
add
add
adc
xchg
fidivrs
mov
cmc
push
sub
push
mov
dec
lea
sbb
pop
mov
dec
jg
fisttps
cmp
jo
fwait
add
fs
xor
push
mov
pop
fs
xchg
daa
inc
aas
jo
mov
xor
and
std
inc
push
add
or
add
sbb
out
xor
dec
fiadds
dec
into
mov
fwait
xchg
add
in
xor
jbe
lcall
jmp
stc
popf
push
outsl
jmp
xchg
inc
aam
dec
stc
jle
xor
lds
push
xchg
add
mov
xor
and
xchg
cmpsl
add
jge
cwtl
ljmp
jno
push
cmpb
or
pop
lock
jmp
ret
xor
jg
or
dec
in
mov
adcl
add
xor
mov
and
loope
mov
adc
stos
fsubs
faddp
cwtl
jl
out
sub
notb
push
cmc
sbb
jne
mov
je
cmpb
std
cmpsb
jmp
mov
icebp
aas
sbb
add
xor
cmp
les
fidivs
jl
test
outsb
sub
or
jmp
cwtl
jle
jge
jo
or
xorb
lods
ret
daa
gs
pop
nop
cmp
stos
cmp
js
testb
sub
out
cmp
ja
jmp
popf
xor
fldcw
imul
cmc
xor
jg
mov
cli
add
cmpsb
aaa
inc
pop
xlat
add
mov
mov
ljmp
adc
adc
out
leave
nopl
xor
dec
imul
in
pop
scas
push
sbb
adc
push
mov
add
nop
gs
adc
xor
lcall
jp
mov
and
xchg
and
aam
cmp
push
mov
mov
out
iret
mov
push
pop
in
test
push
xchg
mov
mov
aaa
push
repz
jecxz
lcall
xchg
outsb
sti
aas
push
nop
jbe
sbbl
inc
lock
rcll
inc
in
sbb
mov
sub
adc
ljmp
sbb
mov
aam
sub
push
in
andl
mov
lea
call
sbb
sub
mov
dec
xchg
or
test
dec
pop
jne
push
outsl
push
ret
inc
pop
cmp
ret
lods
or
in
mov
icebp
insl
ds
xor
psrlw
test
je
popf
jmp
out
das
fwait
add
movsb
cmp
adc
iret
jge
inc
xor
loope
jl
or
add
add
rdtsc
movsb
call
push
sub
stos
scas
or
test
mov
decb
int3
add
popa
sub
adc
and
and
fistps
fmul
push
mov
pop
push
or
js
scas
call
xor
sub
jle
adc
ds
pop
pusha
adc
sbb
in
add
and
add
lods
push
fstpl
jg
shl
out
cmpsb
mov
out
mov
aas
imulb
inc
jne
or
into
push
inc
jbe
mov
push
inc
push
mov
cmpsb
push
push
mov
push
add
cmp
enter
ds
push
push
fildl
stos
xor
mov
jle
loop
push
rcrl
or
sbb
imul
addr16
inc
in
xchg
lcall
jp
test
mull
or
in
jb
fstps
pop
test
mov
adc
xchg
xor
pop
xor
lods
sub
out
call
xor
ss
cmp
lods
sti
push
sub
mov
cmc
or
int3
xlat
popa
cmp
sub
ret
in
xchg
repnz
retw
cwtl
pop
enter
add
fisubrs
mov
mov
or
mov
jo
xor
add
lds
sbb
sbbl
mov
call
imul
cmp
cwtl
pcmpgtd
add
fstpt
pop
sub
mov
out
mov
adc
xchg
cli
mov
test
out
jg
lods
pop
hlt
xchg
fnstcw
les
dec
push
and
xchg
mov
call
and
enter
loop
das
cwtl
test
sub
sub
ret
jmp
xor
jae
mov
mov
mov
inc
push
adc
mov
fldt
push
test
jae
add
mov
push
mov
jge
fs
mov
inc
or
divb
sub
je
jo
xchg
popa
aam
xchg
sub
cld
sub
or
push
mov
push
add
aas
cmp
inc
jb
xor
and
xor
dec
or
es
iret
inc
arpl
clc
out
cmpb
cltd
cmp
mov
sar
and
adc
ret
loopne
lcall
in
lods
fcom
jle
fadd
pop
push
mov
sbb
xor
or
sub
sbb
push
add
xchg
rcll
jp
xchg
xor
fstps
loop
jcxz
mov
sub
mov
test
test
stos
jmp
lods
jge
xor
xorb
clc
mov
pop
inc
or
push
or
dec
push
dec
and
int3
and
cmp
rorb
mov
cmpb
lret
cmp
or
stc
mov
jmp
shll
xchg
xor
xrelease
pop
pop
fisttpll
xchg
fldenv
test
pop
mov
xor
adc
aam
or
aaa
fdivrs
xchg
pop
aam
sarl
mov
lods
xor
ret
ret
lret
sbb
mov
inc
and
pusha
mov
dec
subl
ffreep
add
pop
out
jno
cltd
sbb
pop
es
jg
clc
lcall
pop
insl
xchg
xchg
inc
pop
add
cmpsl
sbb
cmp
sti
inc
mov
pusha
les
mov
lahf
or
fdiv
mov
test
iret
into
jb
or
mov
mov
fcmovnbe
pop
pop
inc
mov
inc
mov
xchg
adc
and
ja
mov
add
mov
stos
mov
mov
cmp
dec
pop
push
mov
xchg
adc
mov
or
xor
inc
sahf
or
lahf
lods
xchg
jle
test
into
push
cmp
inc
nop
mov
mov
hlt
adc
imul
in
mov
inc
mov
inc
scas
imul
or
mov
push
push
pop
mov
and
negl
fidivrs
cmp
or
sbb
cld
cli
add
in
lods
orb
jbe
pop
or
out
xchg
outsb
add
pop
pop
lcall
mov
push
push
outsl
mov
push
sub
outsb
cmp
jp
mov
clc
idivl
mov
add
lahf
scas
add
mov
and
mov
addr16
add
sbb
cs
fstl
xchg
fstpt
cmpsb
call
jge
lds
or
out
xor
pop
cmpsb
xchg
dec
popa
imul
test
xchg
push
pop
cli
push
vpaddsb
inc
ljmp
push
cs
fstps
cmp
xchg
mov
jge
jmp
test
xor
dec
jp
bound
mov
std
addr16
out
push
mov
cwtl
cmp
jg
movl
fsubr
sti
lods
push
or
movsb
xlat
js
xchg
cld
arpl
xchg
mov
shrb
subb
scas
into
jns
jp
or
jne
test
fwait
xchg
mov
mov
or
ret
stc
mov
call
add
xor
xchg
inc
push
shll
aaa
add
mov
ret
xor
ret
in
add
xor
scas
js
sbb
sub
xor
dec
jne
adc
dec
cmpb
push
clc
jae
ljmp
sti
dec
mov
loop
mov
aaa
sub
fisubs
loope
lds
test
and
ss
mov
inc
stos
lods
scas
mov
mov
inc
pop
jge
mov
adc
fcoml
push
and
add
arpl
test
inc
rorb
and
sti
int3
loopne
in
push
pop
push
xor
stc
push
mov
popa
es
int
sub
lods
rcll
add
jae
mov
scas
pop
int
faddl
and
repnz
jbe
push
xchg
push
xor
push
sbb
sub
xchg
xor
xchg
pop
inc
push
xor
test
outsl
push
mov
cmp
push
inc
hlt
xchg
cmp
sub
scas
insb
mov
inc
xchg
or
mov
cmp
cmp
scas
sub
sbb
bound
loop
add
sub
stos
je
icebp
xor
sbb
jecxz
jg
pop
cmp
dec
cmpxchg
insl
shll
jmp
out
inc
adc
pop
pusha
call
cmp
ljmp
in
repnz
push
xchg
mov
decl
outsl
mov
xchg
xor
mov
xchg
ja
mov
pop
xchg
bound
mov
std
cmp
adc
shrb
sbb
scas
mov
aaa
popa
lahf
mov
aaa
jae
cltd
pop
js
add
dec
inc
or
add
or
xchg
adc
lds
mov
inc
jae
cmp
rorb
pushl
rcrl
fcmovbe
xchg
fwait
sahf
push
xorb
inc
ret
push
mov
insl
inc
scas
filds
nop
cltd
std
xchg
pushf
or
clc
and
stos
mov
xchg
dec
jnp
sub
jmp
arpl
popf
add
mov
jo
cmp
sbbb
fisttps
mov
xchg
push
loop
mov
loopne
fcmovnu
mov
pop
push
cwtl
xor
jg
leave
in
into
clc
hlt
fucomip
mov
lea
jmp
out
js
out
stos
xchg
js
mov
adc
dec
mov
inc
cmpsl
inc
add
mov
popa
enter
jb
ret
dec
jne
loope
sbb
sbb
mov
and
xorb
xor
push
subl
xchg
push
lods
cmp
add
scas
ret
xchg
call
loop
add
repz
call
xor
mov
mov
mov
or
mov
push
xchg
ret
push
mov
imul
das
pop
mov
xor
shr
pushf
pop
addr16
sbb
fcomip
jbe
aad
inc
push
sbb
or
adc
add
hlt
sahf
xchg
xor
fnstsw
aaa
and
mov
addr16
dec
xchg
mov
ret
pusha
int3
adc
lods
mov
int
mov
out
sub
loop
aaa
out
loope
lock
int3
pop
sbb
loopne
pushf
sub
andb
lods
mov
push
mov
lea
jb
jp
rorl
repz
mov
pop
and
dec
shr
in
cld
mov
cmp
push
sbb
xor
mov
push
ja
inc
sbb
stos
out
sub
mov
gs
dec
pop
stos
popa
push
xchg
lret
out
or
fisubrl
aas
icebp
cli
ret
xchg
xlat
inc
pop
mov
rorb
rcll
in
shlb
loope
leave
test
lock
jg
out
pushl
scas
adc
sahf
push
mov
add
xchg
test
push
nop
repnz
pop
xchg
dec
jecxz
add
xor
shll
mov
repnz
out
inc
repz
loope
movsl
jae
mov
jae
fstl
add
adc
push
stc
ja
or
cld
hlt
jbe
jb
mov
int3
inc
mov
cmp
add
in
sub
test
pusha
add
and
out
xchg
bound
jno
int
and
lea
and
stc
inc
and
daa
inc
out
mov
adc
test
movsl
mov
mov
push
jns
push
sbb
scas
sarl
mov
xor
pop
sbb
mov
daa
scas
push
sbb
xor
sbb
adc
xchg
sub
mov
std
pusha
dec
stos
mov
pop
jbe
add
xchg
jecxz
fdivr
jmp
push
pop
mov
and
je
mov
pop
dec
adc
aas
and
enter
and
and
orl
pop
jge
popa
xor
push
inc
sar
inc
cwtl
fiaddl
jae
xchg
and
sbb
xchg
movl
mov
fildll
jle
xchg
fisubrl
stc
xchg
pop
xchg
insl
xchg
xchg
dec
inc
pop
imul
pop
jg
clc
mov
add
jle
xor
mov
test
insl
pop
stc
sbb
inc
push
push
notl
adc
and
cs
cmp
fnstsw
mov
sub
lods
aad
mov
mov
subb
mov
js
fcmovnb
mov
adc
push
int3
stos
push
jecxz
pop
pop
lret
das
mov
cmpsb
aam
outsb
cmp
leave
mov
sbb
cs
and
xchg
rolb
push
imul
lret
mov
mov
negl
lods
cmpb
mov
imul
psrlq
rcr
mov
mov
dec
test
push
push
mov
dec
sub
mov
dec
cld
jb
push
pop
pop
xchg
sub
lcall
test
aad
add
push
add
in
out
push
inc
call
cmp
mov
sbb
jmp
aas
stos
sarl
divb
fstpl
adc
imul
cmp
je
pop
mov
pop
mov
and
sub
cld
adc
pop
stos
adc
rorb
xchg
je
pop
loope
fdivl
jecxz
stc
adc
pop
sahf
scas
and
fmul
mov
xlat
iret
jae
fxch
aad
sub
shll
mov
repz
arpl
cltd
xor
push
cmp
mov
push
push
adc
sbb
xchg
pop
push
das
dec
add
mov
data16
xor
dec
jl
inc
jecxz
push
mov
loop
sub
jmp
adc
push
ds
stos
fsts
pop
mov
push
cmp
cmp
pop
cmp
cmp
or
mov
popf
movsl
test
cmc
mov
sub
stos
repnz
jbe
add
adcl
sbb
jge
mov
sbb
push
xchg
inc
mov
outsb
out
xor
add
loop
and
mov
imul
adc
mov
ret
scas
movsl
fisubrs
push
and
outsl
add
and
pop
inc
sub
dec
aad
stos
dec
dec
or
and
cli
adc
sahf
xor
je
orl
test
sbb
sarb
xchg
xchg
cmp
add
dec
repnz
icebp
rcl
dec
sti
lahf
push
cmpsl
and
xchg
and
adc
mov
dec
fs
mov
inc
rcll
sbb
adc
out
fs
push
mov
pop
repz
fst
mov
popf
xor
jg
es
jo
add
pop
dec
adc
jae
xchg
or
add
fs
pop
dec
cs
cmp
add
pop
add
push
or
imul
aam
or
icebp
lods
mov
stos
aaa
push
mov
jecxz
aas
cli
fstl
xlat
in
or
add
mov
sub
mov
mov
pop
xchg
xchg
or
nop
inc
aaa
int
adc
sub
pop
popl
jp
or
xchg
xchg
dec
outsb
add
loop
aam
push
xchg
cmp
mov
push
arpl
imul
and
mov
jmp
or
les
mov
fidivrs
jne
push
out
test
sub
cmp
das
insl
lea
sub
scas
stos
add
mov
sbb
cmovno
outsl
pop
js
hlt
dec
xor
adc
arpl
sbb
mov
aam
jo
xchg
pop
dec
cmpb
add
pop
cmp
push
mov
arpl
push
imul
rcll
rcrl
or
retw
xchg
rolb
push
fsin
add
and
jge
mov
js
mov
shrb
or
jge
dec
jno
mov
hlt
in
push
fcomi
mov
push
cmpsb
nop
mov
movsl
sbb
or
xchg
push
and
lahf
push
fs
std
adc
arpl
and
shrb
js
mov
adc
pusha
std
pop
sub
ret
ret
lock
jae
sbbb
push
or
aas
roll
push
inc
mov
in
or
pop
lods
sbb
int3
adc
leave
cld
jecxz
add
dec
fwait
or
mov
sbb
daa
xchg
ret
adc
inc
lcall
xchg
or
movsl
fisubrs
aad
imul
dec
int
xchg
inc
or
jle
mov
mov
rol
sub
lea
mov
or
push
jbe
out
data16
sbb
mov
icebp
out
jo
pop
jnp
sub
adc
xor
iret
xchg
sbb
nop
jl
das
roll
push
jns
mov
ss
and
cmp
leave
mov
xlat
dec
dec
pop
pushf
sahf
xchg
dec
sbb
inc
add
push
ljmp
dec
loop
sbb
and
rorl
pminub
test
int3
xchg
fcoms
std
imul
ds
jecxz
or
jns
std
clc
mov
loope
cld
jge
fadds
movsb
xchg
les
shrl
cmp
inc
push
add
sub
push
fcmovb
push
mov
push
xchg
pop
xchg
push
add
adc
xor
negb
add
les
jl
cmp
or
call
mov
inc
rclb
xchg
iret
inc
inc
cltd
iret
sbb
lds
dec
popa
in
xor
adc
jae
std
mov
inc
pop
adc
sahf
test
test
or
dec
pop
popl
std
loopne
test
faddp
dec
mov
imul
mov
jbe
mov
rclb
aaa
ds
push
mov
cmpsb
and
pop
es
inc
daa
adcb
pushf
xchg
stc
pop
insb
jp
jbe
dec
cmp
call
mov
pop
jmp
cmp
mov
dec
adc
shlb
hlt
inc
aad
pop
sbbb
inc
icebp
std
xlat
out
xchg
pop
inc
push
mov
daa
and
and
cld
xchg
or
push
int3
pop
jbe
dec
test
jno
sbb
out
adc
in
cs
sub
prefetch
clc
jnp
jnp
in
inc
stc
repz
ljmp
sub
je
mov
pop
test
jb
sub
leave
xor
pop
push
andl
jo
iret
pop
lock
adc
hlt
sbb
sahf
mov
and
adc
jb
fsubrl
pop
adc
xchg
pop
aas
rcl
fwait
jp
pop
movsl
push
negb
jnp
add
mov
add
and
sub
in
mov
mov
arpl
or
nop
loope
and
push
imul
mov
negb
test
mov
dec
test
adc
in
test
aad
xor
inc
xor
pushf
mov
outsb
test
in
call
adc
popa
pop
xchg
add
cmp
loope
push
mov
addr16
cwtl
mov
dec
xchg
mov
dec
gs
inc
les
add
popa
cmpsb
enter
lret
or
outsb
or
push
inc
pop
dec
add
xchg
sti
add
lret
push
pop
adc
xor
cld
push
out
scas
ljmp
adc
jno
fstpt
and
imul
pop
add
jp
cmp
test
pop
sahf
push
and
out
cli
or
sbb
repnz
adc
call
cmp
nop
fildll
jmp
mov
je
loopne
or
addb
lahf
sub
ds
inc
shrl
adc
xor
mov
test
outsb
xchg
cli
push
stc
adc
lds
inc
ret
movsb
outsl
mov
psadbw
das
aas
es
filds
out
push
jmp
jbe
inc
scas
push
mov
xchg
jg
psadbw
das
aas
es
filds
out
push
jmp
jbe
inc
scas
push
mov
xchg
outsl
xchg
jg
pslld
das
xlat
aas
and
fisttps
out
adc
data16
outsl
lahf
inc
stos
mov
lcall
pop
das
push
jmp
iret
leave
jne
out
push
mov
pop
loopne
shrb
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
fildl
jmp
mov
inc
mov
fwait
les
in
xchg
sbb
push
filds
jmp
lahf
add
xor
and
aam
les
ja
outsl
xchg
xor
push
jns
or
cltd
adc
add
xor
and
aam
les
lret
dec
out
cli
dec
lret
fwait
inc
mov
lods
push
mov
jbe
cmp
outsb
push
aam
mov
cmp
xchg
add
shl
clc
or
mov
adc
mov
push
and
popa
aas
imul
push
mov
pop
bound
in
pop
dec
jae
jbe
dec
lret
pop
scas
pop
or
xchg
xor
or
call
add
in
adc
adc
lret
and
fcmovbe
scas
jns
ret
or
xorb
xor
add
lods
jle
les
in
insl
lahf
sbb
sbb
mov
xor
lds
scas
scas
test
pop
or
mov
dec
mov
int3
inc
or
out
je
fs
adc
add
xor
and
aam
out
jge
push
xchg
and
adc
sub
cmpl
loop
lret
xchg
sbb
aas
xchg
fimull
pusha
lock
lock
push
cltd
mov
add
xor
and
mov
cmp
push
rorb
pop
movsb
pop
cmp
xchg
adcl
xor
and
aam
les
jg
outsl
xchg
pop
test
mov
movsb
das
push
filds
jmp
lahf
add
xor
and
aam
les
jg
outsl
xchg
pop
test
mov
movsb
das
push
cltd
iret
addb
clc
test
lea
cmp
data16
mov
sbb
addr16
clc
fimull
mov
lods
fxam
cmp
iret
ljmp
jnp
mov
push
aad
ja
call
and
scas
mov
xchg
jl
push
push
ja
mov
mov
sbb
out
xor
xor
mov
outsb
dec
cmp
bound
into
pop
rolb
outsb
sahf
test
mov
add
test
jge
mov
mov
outsl
int3
cmp
iret
out
mov
mov
cmovbe
call
cmp
and
jg
push
cmpb
jne
in
dec
daa
lock
pushf
daa
scas
pop
ljmp
cmp
adc
out
pushaw
popf
and
pop
inc
js
imul
loope
push
shl
mov
inc
xor
mov
push
jo
lret
std
jge
pop
nop
add
xchg
sub
sbb
cli
into
fs
stc
ret
sub
mov
jge
sbb
shlb
call
ja
sub
leave
iret
pushf
jmp
mov
adc
mov
mov
out
lods
roll
or
sub
lock
aaa
jmp
xchg
arpl
dec
dec
shll
mov
cmp
xchg
fdivr
adc
lock
push
cmove
movsb
movsl
pop
jb
sar
lock
iret
jno
inc
fidivl
cmp
fiaddl
add
in
xor
add
sbb
out
xchg
cs
stos
mov
sbb
sub
mov
jne
fstpl
loope
or
fmul
inc
in
or
pop
adc
xchg
jnp
roll
mov
pop
mov
ret
add
adc
addr16
out
lods
iret
xor
or
adc
sbb
in
inc
pop
fnstsw
xchg
jge
mov
inc
fdivrl
int
push
leave
test
add
mov
push
inc
pop
addr16
or
pushf
xchg
hlt
cmc
jae
int3
sti
lahf
lret
dec
or
and
dec
jp
fistps
les
ret
cmp
mov
in
fbld
push
add
sub
jne
sbb
imul
into
loope
arpl
imul
mov
aaa
xor
jp
enter
add
sbb
and
mov
and
cli
loop
xor
push
fists
and
mov
inc
dec
enter
fs
rcrb
push
xor
cmp
or
out
rol
loope
loop
dec
mov
nop
jmp
xor
add
sar
adc
ret
popf
push
adc
stos
mov
add
in
pop
jno
xchg
scas
jns
ret
and
pop
inc
flds
mov
test
and
jle
fcmovu
scas
mov
repz
cmpsb
jp
movsl
mov
pop
call
inc
or
data16
xchg
mov
std
inc
mov
sarb
jnp
outsb
fs
stc
sub
lret
lcall
sub
jo
jns
mov
mov
and
imul
push
mov
cmc
mov
xor
outsl
cmp
pop
jge
shlb
stc
ljmp
xor
in
xchg
testb
jge
sub
aad
and
jecxz
loope
mov
mov
fdiv
push
sarl
xchg
pop
stos
fucom
cli
adc
sahf
xchg
frstor
pop
insl
fmuls
imul
movsb
loopne
mov
jp
mov
push
pop
outsb
jl
pop
jmp
xor
sar
in
pop
add
addr16
outsb
xchg
cmp
mov
movhps
testl
shrl
mov
rcrb
pop
ret
xchg
adcb
jg
in
xor
mov
pop
pop
bound
roll
cld
dec
push
push
xchg
es
je
sbb
lods
or
jne
jl
scas
dec
imul
cld
sbb
jge
stc
int
fwait
or
and
test
sbb
test
sbb
mov
rorb
out
scas
dec
insl
rcrb
xlat
inc
mov
mov
out
out
dec
aad
add
daa
push
mov
loopne
mov
cmc
xor
mov
lds
lret
sahf
dec
cmp
sbb
mov
fiadds
sub
push
popa
sahf
jg
test
out
xchg
idivb
mov
in
or
cmp
lods
jnp
sti
cli
enter
pop
xor
cmp
and
js
fsubr
add
add
leave
mov
add
es
sub
loope
sarl
inc
push
sub
arpl
ja
movsb
and
mov
fistpll
ss
dec
mov
sbb
lahf
outsb
mov
pushf
or
dec
pop
icebp
pop
dec
jle
in
mov
roll
mov
ret
movsb
int3
jae
pusha
xchg
cwtl
pop
test
dec
adc
fwait
cmpb
push
lods
cwtl
ljmp
pop
lds
xchg
or
les
rclb
inc
ret
xchg
cld
in
and
jae
mov
movsb
sub
or
xor
das
jp
fs
sbb
xor
jg
in
cmp
sub
movsb
das
or
cld
push
adc
aam
cmp
out
jnp
xor
inc
decb
jecxz
fists
mov
pop
imul
inc
jne
push
sbb
cmpsb
sbb
push
xor
adc
aam
sahf
lds
test
scas
xor
in
adc
lea
pop
mov
mov
stc
inc
push
out
call
movsb
insl
jae
fistpl
and
aam
jecxz
adc
xor
in
test
daa
mov
mov
and
lods
inc
xchg
lret
xor
fimull
cmp
cs
mov
shll
push
or
push
lret
pusha
or
inc
mov
cmpsl
pop
test
fs
out
mov
insl
cmp
loopne
pop
sarb
mov
call
enter
pushf
jnp
mov
sbb
add
or
loope
adc
aas
cmpsb
mov
fcom
mov
lods
xor
mov
jl
imul
je
test
mov
in
int3
sub
pop
leave
sbb
push
filds
dec
andl
ficoml
jge
add
cmp
repz
mov
sub
mov
sub
push
lahf
mov
popa
hlt
mov
cmp
fsubrp
negl
sub
xor
imull
lods
xchg
hlt
push
and
xchg
push
fucomip
icebp
mov
and
imul
gs
pop
gs
shll
jnp
lret
movsl
dec
out
or
inc
adc
test
pop
mov
push
jb
aam
push
jl
movsl
sbb
loopne
sub
mov
cmpsl
jmp
mov
mov
jl
out
out
jmp
push
fbld
fcmovnbe
xor
cmc
dec
add
jbe
jmp
data16
pmaxsw
ret
test
adc
cmpsb
or
jmp
iret
and
mov
pushf
arpl
cmpsl
add
sti
dec
lock
xchg
jle
mov
int3
pop
orb
mov
xor
push
adc
jns
in
out
arpl
cmp
dec
std
popf
jge
cmc
lds
fld1
add
in
inc
push
jae
loopne,pt
mov
gs
mov
inc
cmp
test
icebp
jge
mov
mov
mov
xchg
or
clc
lahf
sbb
adc
sub
lods
cmp
repnz
je
aaa
and
lds
mov
sti
stos
data16
je
push
jle
push
mov
mov
fmuls
shlb
and
sbb
push
dec
xor
add
movsb
mov
mov
push
ja
mov
repnz
inc
inc
jae
test
mov
fmuls
push
call
in
insb
inc
lds
aaa
scas
add
and
push
xchg
imul
push
int3
int3
fiadds
jl
adc
test
mov
repnz
test
add
xor
push
fnsave
aad
fimull
pushf
das
cmpsb
out
lret
mov
imul
mov
xchg
mov
xlat
popa
in
add
push
pusha
and
jecxz
movsl
nop
gs
mov
mov
sahf
inc
outsl
lret
decb
fstpl
mov
mov
lret
xlat
ldmxcsr
mov
cmp
adc
loop
sub
xorl
xchg
lcall
sbb
add
mov
lahf
mov
mov
cmp
cli
cwtl
and
sbb
xor
xlat
or
add
stos
mov
sbb
xlat
jp
cmc
jne
jb
cmp
xor
xchg
in
fdivrs
fadds
jge
pop
mov
stc
movsl
test
cmp
sub
add
jp
cli
mov
pop
pop
and
add
mov
leave
pop
aam
cmp
push
xchg
cltd
stos
xchg
push
sahf
sub
sbb
adc
push
cld
fistps
nop
inc
jl
xchg
xchg
cli
jns
hlt
cmc
out
add
loop
xor
sahf
inc
inc
popa
sbb
in
adc
and
inc
add
stos
jecxz
lahf
or
xor
xchg
movsb
out
jmp
clc
enter
inc
cli
dec
adc
pop
js
lea
sub
data16
dec
xor
push
push
mov
pop
or
in
mov
xor
push
lea
dec
subb
jb
mov
mov
imul
inc
fstpl
xchg
inc
popf
lret
sti
int3
cmp
stos
xchg
fsubp
stos
in
xor
push
subb
je
lods
shlb
jbe
mov
cmp
shl
insb
mov
cmpl
mov
jae
cmp
in
cld
out
mov
lcall
lret
and
or
rolb
pop
call
mov
das
sub
repnz
pop
add
mov
shrb
mov
sub
sbb
adc
sbb
sub
fldl
cmp
shrl
pop
adc
lods
int
ror
mov
and
push
mov
cwtl
dec
add
push
loop
dec
leave
and
popf
cmp
repz
pop
shl
movsb
push
aas
pop
scas
lahf
jno
in
push
call
cmp
pop
cmpsb
mov
mov
es
in
mov
pop
imul
imul
mov
sub
xor
into
out
inc
add
dec
neg
xchg
cli
inc
insb
add
and
push
xchg
push
adc
and
outsl
push
mov
pushf
adc
inc
test
loopne
loopne
lea
cwtl
adc
lret
adc
jecxz
pop
mov
ret
adc
dec
das
dec
shl
sbb
in
sub
stc
xor
jnp
test
test
in
mov
jnp
xchg
ss
das
popa
inc
adcl
mov
pop
push
lret
test
fildl
enter
loope
inc
add
ficoml
ja
pop
iret
out
inc
int
or
ss
adc
subb
xor
cmp
jecxz
mov
cld
jge
and
and
repz
repnz
xor
mov
mov
cmp
mov
or
add
das
xor
or
fisubrs
or
jl
out
nop
pop
xchg
xor
jmp
jno
je
add
push
push
sahf
sbb
push
iret
jg
in
mov
mov
lret
jns
rcr
dec
push
and
sbb
filds
test
das
jb
lcall
aad
sub
add
inc
and
lcall
je
outsb
jo
out
insb
xor
jns
fimull
jae
sti
das
cltd
fmull
testb
add
idivl
in
out
imul
imul
lds
ja
push
inc
or
or
aad
add
mov
imul
sub
mov
repz
sahf
repnz
adc
rcll
push
sub
dec
and
lahf
and
arpl
sbb
lds
jnp
inc
and
pop
dec
xchg
ds
aam
js
inc
jge
push
pop
lret
inc
aas
cli
stos
mov
lret
divl
mov
mov
fwait
dec
xchg
add
pop
pop
xorl
jp
lock
loop
mov
arpl
push
xchg
or
decb
daa
mov
push
mov
mov
jnp
cmc
mov
sbb
enter
dec
adc
or
loopne
mov
sub
repz
repz
mov
and
pop
cltd
movsb
and
add
shrl
loopne
repnz
sub
addr16
loopne
sbb
mov
push
fisttps
pusha
sarl
sbb
and
pop
andl
fisubrl
js
pop
mov
add
fstp
push
fwait
xchg
inc
xchg
push
adc
stos
and
mov
cltd
jge
fstps
inc
ss
lret
out
dec
or
popa
push
insl
das
shlb
and
insb
or
andb
sbbl
js
pop
arpl
mov
xor
pop
mov
arpl
adc
outsl
arpl
and
js
xchg
aaa
inc
add
repnz
lahf
insl
sub
cmp
pop
inc
inc
sub
fistpl
xor
mov
jae
inc
loopne
cwtl
nop
sti
mov
push
dec
xchg
jne
add
testl
inc
sub
pushf
and
loope
movsl
and
imul
cmp
es
xchg
push
jne
movsb
push
movsb
loope
iret
dec
and
push
out
lods
mov
fxch
sub
rolb
out
mov
adc
roll
or
and
jge
cltd
movsb
in
pop
cmc
cmp
jne
dec
xchg
jne
sub
lods
xchg
xor
lea
push
es
jg
cmp
inc
ja
sub
out
ss
inc
pop
lcall
test
or
loope
mov
mov
pusha
xchg
in
shrw
add
mov
aas
bound
ss
cmpsb
cmpsl
cltd
ret
lret
pop
imul
fadds
or
and
xor
push
stc
xchg
pop
inc
mov
pop
mov
cmp
or
mov
out
mov
into
and
test
dec
jmp
and
call
mov
fldl
inc
hlt
test
mov
imul
fistpll
dec
hlt
leave
leave
sub
pop
mov
jl
in
leave
cmp
fidivrl
scas
mov
cmpsl
scas
mov
loop
inc
cmp
push
xchg
icebp
loope
into
adc
add
push
aad
sbb
jns
mov
hlt
in
mov
jae
aaa
sub
push
loopne
insb
int3
sbb
mov
rclb
out
pop
fistpll
add
idivl
sahf
nop
insl
adc
cmpsb
call
jae
inc
es
call
xor
and
repnz
mov
popa
mov
test
mov
push
mov
mov
mov
popf
mov
xchg
add
pop
std
subb
out
sub
jo
dec
push
adc
aam
pop
mov
cmpsl
or
mov
iret
in
add
mov
aam
aas
ror
aaa
loope
and
cmpsl
ja
and
mov
cmpsl
pop
shll
xor
rcrb
and
push
scas
inc
sub
dec
test
cmp
xchg
add
jne
or
mov
addr16
push
sub
cmp
int3
xchg
ficoml
mov
dec
push
leave
stos
ret
xor
sbb
mov
mov
rcr
dec
addl
jne
push
inc
arpl
xchg
ret
adc
pop
ret
lds
lock
int3
push
pop
dec
in
repz
or
fdivs
sub
rclb
jo
xor
pop
incb
fcoml
xchg
mov
jecxz
jmp
xchg
mov
mov
loope
mov
push
mov
shrl
xchg
pop
jnp
in
push
cwtl
adc
gs
fs
sbb
inc
jae
gs
inc
xor
gs
and
js
insb
xor
jae
jae
cld
dec
xlat
outsb
je
push
ror
popf
cltd
sbb
das
ret
shr
mull
mov
xchg
xlat
dec
mov
fdivl
sbb
cltd
pop
jl
add
jmp
lds
push
movsb
fs
xchg
cmpsl
cmp
mov
movsl
jb
popa
adc
pop
dec
aad
pop
fs
mov
test
int3
inc
mov
push
stos
cli
ret
xchg
dec
or
ret
ret
push
adcl
jns
mov
sbb
add
dec
cmpsb
add
cltd
xor
and
cli
pop
je
push
xor
and
jno
test
mov
sbb
stos
je
mov
mov
sub
lret
pop
pop
sti
jg
clc
das
ret
jg
mov
mov
add
bound
sub
lahf
negl
test
cld
popa
ffreep
popf
fildl
and
mov
lret
xchg
gs
push
fadds
js
inc
sbb
imul
adc
test
inc
jge
out
sub
inc
out
sti
xor
and
js
and
pushf
lods
fwait
cmp
aaa
rcll
jne
sbb
add
mov
sbb
call
sub
jns
add
inc
in
mov
adc
push
icebp
lret
cmp
lods
mov
daa
rolb
mov
in
xchg
lock
loope
mov
sahf
or
pop
push
loop
jg
lret
or
pop
xor
mov
fimuls
xchg
lds
stos
and
popa
outsb
test
aas
dec
scas
cs
and
cltd
and
lcall
mov
daa
xor
push
into
mov
or
outsb
push
lret
enter
pop
cmp
addr16
mov
scas
dec
scas
int
sbbb
fldl
adc
fists
out
ds
sub
movsb
sbb
test
iret
adc
icebp
sbb
dec
mov
in
or
mov
jbe
sti
movupd
hlt
add
ljmp
dec
cli
js
and
stos
inc
cmp
rcrl
pop
dec
clc
stos
movsl
popf
ficoms
test
cmova
push
pop
lcall
dec
push
sbb
mov
mov
dec
or
mov
add
fimull
out
in
sub
fcomp
cmpsl
sbb
jno
dec
dec
jae
xchg
inc
pop
fstpl
xchg
sub
push
jecxz
and
mov
inc
push
jno
rcll
pushf
add
int3
out
add
inc
cmp
fdivl
mov
and
inc
push
enter
dec
inc
cli
fcmove
mov
ret
lahf
andb
pop
inc
jle
mulb
pop
es
jmp
aas
xor
mov
mov
jle
and
dec
pop
jno
out
movsb
and
fidivs
inc
add
and
pushf
push
and
loope
shr
mov
xchg
pop
jmp
mov
sbb
cmpsl
or
cmp
loopne
enter
and
or
xor
cmp
cmp
pop
ss
sbb
in
rcrl
pop
std
lahf
aad
xor
add
cs
lea
jge
ja
pop
or
mov
pop
dec
std
pop
insl
roll
mov
push
stc
lahf
sub
push
add
inc
std
insl
ret
push
test
movlps
jmp
outsl
icebp
sbb
xchg
dec
mov
push
cmp
test
fisttpl
lock
sbb
dec
xorl
out
aad
add
mov
cwtl
push
push
mov
mov
mov
stos
push
cmpsl
cmp
sti
bound
mov
pop
ss
xor
orl
sub
arpl
push
lcall
fs
int3
das
jb
insb
inc
cmp
stos
mov
mov
lahf
adc
jecxz
mov
ds
xchg
pop
mov
jl
sarb
mov
ljmp
push
loopne
xchg
int
sbb
in
aad
sti
je
mov
loopne
test
or
addb
push
and
jg
rcrl
xchg
xchg
and
push
icebp
shll
push
add
xor
sbb
sub
fnclex
jge
sub
push
cmp
sbb
dec
jnp
xchg
sub
ljmp
pop
and
mov
or
mov
jo
lret
sar
inc
ljmp
rorb
daa
popf
xchg
lret
cmp
and
pop
shrl
and
push
xchg
xchg
dec
adc
pop
inc
fdivp
push
in
fnstsw
je
mov
inc
fwait
clc
inc
out
test
push
iret
xchg
stc
aaa
sbb
lret
je
mov
xchg
push
mov
mov
fistpl
jp
sbb
scas
push
scas
mov
jne
insl
cs
push
pushf
xchg
sub
mov
mov
insl
dec
mov
cld
sti
dec
cli
jno
push
mov
mov
ss
mov
add
ljmp
shl
out
test
push
or
push
iret
mov
lahf
add
xor
and
aam
les
jg
outsl
xchg
pop
test
mov
movsb
das
push
filds
jmp
lahf
add
xor
and
aam
les
jg
outsl
xchg
pop
test
mov
movsb
das
push
fildl
out
jmp
lahf
add
xor
and
aam
les
jg
xchg
sbb
push
cmp
sbb
lahf
add
xor
and
aam
in
jg
sbb
addr16
dec
inc
pop
push
and
adc
arpl
jge
out
or
subl
cmp
dec
repz
imul
cltd
outsl
test
jae
inc
jmp
mov
loop
xchg
cmp
sub
jns
mov
cltd
xchg
test
adc
pop
jmp
nop
sbb
dec
idivb
mov
ss
sbb
movb
jp
addr16
jae
cltd
xor
in
adcb
jl
mov
popa
xlat
mov
or
inc
dec
dec
repz
out
fidivrs
push
sub
sbb
scas
mov
cmp
fst
jbe
jbe
add
or
pusha
adc
xchg
jmp
mov
or
pop
sbb
gs
mov
mov
shlb
imul
shl
fsubrl
and
inc
lahf
enter
cld
fdivrs
cmc
xor
stc
cmpsb
pop
rep
cmp
scas
data16
in
inc
pushf
mov
sbb
cmp
outsb
pop
mov
js
mov
add
or
inc
jmp
sub
cmc
sub
pop
icebp
imul
cltd
ja
imul
movsl
sbb
test
out
idivb
sub
cmp
push
fwait
jno
jb
or
push
stc
les
insb
orl
lcall
sub
pop
lret
inc
fdivl
leave
jae
inc
jmp
mov
subl
cmp
dec
repz
ret
imul
cltd
add
jae
inc
jmp
mov
subl
cmp
dec
repz
ret
imul
rol
sbb
lods
add
icebp
aas
lret
inc
loopne
mov
pop
sbb
jne
std
mov
cmp
sbb
add
repz
fsubr
xchg
stc
and
pop
mov
sub
call
pop
push
jae
clc
jge
mov
std
into
js
push
mull
xor
and
out
dec
mov
mov
stos
outsl
das
mov
xor
inc
adcl
dec
xor
jmp
cld
pop
stos
xchg
push
cmp
movsb
test
xor
arpl
inc
lcall
xchg
xchg
pop
dec
fcomps
cmp
call
and
cmp
mov
push
dec
rorb
mov
mov
fistps
and
dec
outsb
insb
and
lea
aam
add
dec
mov
mov
adc
daa
sahf
aam
mov
roll
jg
xchg
pop
arpl
scas
sbb
loopne
rclb
leave
mov
in
mov
std
mov
in
sbb
jl
mov
mov
push
dec
mov
ret
push
stos
add
dec
test
jo
mov
fnstsw
test
push
xchg
shlb
mov
jmp
and
jge
movsb
inc
xor
call
and
sub
imul
mov
inc
push
adc
stos
ljmp
add
or
movsl
ficomps
lret
jns
mov
aaa
mov
nop
bound
sub
lock
lock
xchg
lds
xchg
or
mov
shl
sub
inc
xor
and
fistpll
fnstenv
add
jle
arpl
insb
pop
fiadds
jne
pop
insb
arpl
push
faddl
push
mov
mov
pushl
push
inc
icebp
xchg
addr16
out
dec
xor
enter
jl
mov
xchg
sti
testl
inc
icebp
mov
icebp
mov
mov
push
hlt
int
inc
xchg
mov
cmpsl
faddl
or
adc
aad
xchg
jae
jbe
sbb
shll
leave
sub
push
xchg
inc
inc
or
dec
add
and
call
pop
das
xchg
cmpsl
cmpsl
data16
fists
cmc
adc
add
push
jmp
pop
sbb
popa
add
mov
divl
add
imul
xadd
xorb
or
xchg
fcmove
sub
lcall
xchg
or
mov
cmp
and
arpl
test
cwtl
adc
in
and
faddl
pop
cmc
xchg
hlt
sub
std
movsb
mov
jnp
pusha
push
repnz
jecxz
sub
cmc
push
pop
jecxz
je
mov
int
push
lods
jnp
fstps
movsl
cs
mov
movsb
test
or
sti
cwtl
out
aas
dec
add
mov
fldenv
pop
xor
push
xchg
pop
jl
mov
inc
sbb
xchg
mov
jecxz
imul
mul
xchg
out
lods
movsb
imul
push
ds
push
and
and
insl
out
jle
pop
test
xchg
enter
sbb
xor
push
pop
xchg
or
pop
or
xlat
or
mov
xchg
cmpl
xchg
xor
mov
add
cwtl
or
iret
aam
test
mov
cmp
sub
jmp
mov
bound
lahf
fstl
jno
lock
xor
test
jo
mov
mov
mov
mov
xchg
out
inc
push
loop
and
pop
lcall
aas
xlat
lods
mov
mov
xchg
aad
pop
mov
pop
add
ljmp
lahf
mov
aam
imul
cmpsb
mov
imul
testb
push
jno
les
pop
movsb
cmp
dec
xchg
gs
cs
addr16
sbb
sbb
arpl
shrb
imul
hlt
xor
pop
outsb
or
push
mov
stos
loope
int
movsl
or
data16
lock
adc
jp
outsl
lock
call
ret
mov
cwtl
fisubl
mov
leave
fmull
ss
adc
lcall
std
dec
xchg
in
ret
xor
mov
sub
imulb
jbe
clc
les
xor
adc
xor
xchg
push
dec
scas
stos
test
pop
lds
jg
out
cmp
lods
push
rcr
jb
sahf
das
jecxz
mov
push
or
mov
arpl
pop
add
imul
xchg
jecxz
jne
mov
inc
pop
mov
rolb
sub
xor
fisttpl
fsubl
je
or
dec
cmp
inc
or
fisttps
cmp
xchg
push
scas
or
mov
push
popa
mov
mov
adc
jl
xchg
pop
xchg
int3
rcrl
ja
lock
rol
jmp
mov
mov
insb
pop
gs
and
xor
or
stos
out
mov
xlat
sbb
lds
jge
stos
ljmp
pop
fisubrs
add
and
dec
std
mov
jg
fdivrs
test
mov
dec
aaa
data16
push
add
rclb
and
adc
jecxz
pop
adc
rcll
adc
les
mov
movsb
fxch
fsubl
pop
call
stos
nop
adcb
pop
jp
cmc
mov
loop
out
jg
test
adc
push
dec
sbb
inc
add
jne
pop
push
popf
outsl
mov
dec
mov
sub
cltd
push
push
ret
fbld
int
cli
invd
out
or
out
xchg
sbb
sbb
jnp
and
das
sub
mov
push
stos
cmp
les
imul
sarb
or
pop
push
pusha
cmp
dec
jle
movsb
xchg
mov
sbb
dec
push
rcll
clc
sbb
and
mov
icebp
addr16
mov
xchg
xchg
popf
adc
rol
pop
arpl
mov
pop
and
lcall
mov
sbb
imul
rclb
dec
in
jecxz
jbe
jae
add
sub
sbb
adc
pop
cmp
sbb
into
icebp
mov
jp
and
jns
and
push
and
lock
jnp
jne
adc
sahf
push
jmp
and
xchg
imul
pop
pop
fdivrl
jns
movsb
cmp
sbb
rcrl
ljmp
pop
sub
adc
icebp
js
cld
push
or
cmp
cmpsb
push
loop
xor
dec
mov
pop
outsb
int
jno
push
popf
jmp
test
add
dec
nop
pop
adc
xlat
ss
aas
pop
push
sahf
or
loopne
lret
imull
jns
mov
mov
aad
mov
jb
movsb
xor
fisttps
das
inc
fwait
xchg
inc
jp
lock
lods
js
xchg
les
lods
ljmp
inc
mov
imul
sub
jb
xchg
repnz
pop
adc
test
ficoml
loope
inc
bound
cwtl
lret
xor
pop
cmp
xchg
outsl
adc
pop
lods
push
scas
adc
mov
mov
inc
push
adc
hlt
andl
adc
out
sti
xor
mov
and
orb
stc
or
nop
imul
sbb
jns
inc
and
push
jmp
imul
xchg
rcll
lret
fcompl
ljmp
jo
adc
popf
jecxz
add
lods
cwtl
pusha
jns
lret
sbb
jecxz
jo
sti
push
rep
jae
nop
inc
jae
xlat
scas
mov
fcompp
mov
ret
or
imul
sbb
cmp
xor
lea
xlat
adc
adc
mov
fs
in
insb
cmpsb
movups
mov
xchg
jmp
sbb
pop
ret
fwait
mov
arpl
fldln2
cld
sub
add
lahf
nop
pop
hlt
dec
and
sub
fiaddl
mov
lcall
sbb
shl
xor
jo
adc
mov
fcoms
imul
mov
daa
out
jb
mov
mov
in
mov
xchg
pop
gs
cli
mov
add
add
test
imul
out
xor
xchg
mov
shll
jg
ret
ljmp
inc
in
jb
aam
add
inc
mov
mov
and
daa
cltd
sbb
cli
mov
aas
xchg
fisttpll
scas
mov
pop
push
sti
push
cmp
push
mov
in
fadds
clc
fwait
add
jle
leave
mov
pushf
stos
outsb
lods
or
cltd
out
rolb
mov
add
add
out
hlt
cmpsl
xchg
sub
repz
xor
sub
jne
fstpl
mov
lock
cmp
in
into
dec
add
mov
jg
adc
aam
adc
dec
in
add
sbb
pop
xor
mov
fbstp
je
aaa
and
ror
repz
jns
bswap
jbe
call
jg
repz
pop
and
pop
adc
stos
popf
out
mov
leave
pop
sub
push
dec
aaa
shll
outsl
lret
es
in
lds
mov
mov
out
mov
scas
sti
sti
dec
shl
pop
push
jge
call
sti
xchg
and
fldt
fsubp
mov
pop
imul
ret
xor
jno
xor
test
pop
dec
jb
jb
sbb
aad
test
xchg
mov
jbe
add
or
clc
or
pop
imul
lods
js
out
fisttpll
aaa
out
addr16
inc
add
das
push
push
mov
pop
jnp
and
push
pop
xor
mov
ud2
inc
clc
icebp
gs
fldenv
enter
pushf
jbe
out
rcrl
call
pop
into
lahf
clc
pop
adc
jle
out
sub
pop
fsts
xchg
loop
sub
lods
leave
pushf
out
sub
jp
mov
adc
fnstenv
mov
and
sahf
jne
add
insl
mov
add
xchg
jne
or
adc
xchg
sbb
pop
mov
pop
fisubrs
dec
bound
and
mov
sbb
mov
sub
cmp
jg
sbb
pop
aaa
push
mov
push
xchg
jns
or
jmp
loopne
jmp
stos
add
sub
push
mov
xor
cmp
icebp
xor
mov
out
pop
lcall
adc
jmp
repz
scas
int
js
test
jle
ret
lea
lcall
dec
mov
inc
and
dec
mov
movsl
push
cs
data16
mov
pop
cmp
movsl
xchg
push
cmp
fsubs
xorl
xchg
ja
or
inc
iret
insb
jae
cwtl
sub
mov
jecxz
and
jno
push
lods
sub
sub
xchg
mov
gs
lods
or
jno
rcr
dec
xor
clc
sub
or
jmp
call
and
push
mov
mov
es
outsb
bound
pushf
mov
fimull
dec
into
inc
jae
inc
outsl
sarb
mov
cmp
fstpt
out
daa
gs
push
and
hlt
lods
rcll
icebp
push
dec
das
jge
daa
dec
adc
jmp
mov
jmp
das
stos
repz
lock
push
add
mov
sub
lcall
mov
lea
push
out
or
jbe
sub
mov
movsl
jb
dec
dec
in
mov
hlt
movsl
pusha
push
imul
mulb
mov
mov
mov
push
xor
cs
mov
jno
shlb
inc
and
cmpsb
and
xchg
adc
adc
stos
add
mov
in
lods
fwait
and
pop
mov
jbe
pusha
jg
inc
ss
adc
lret
cwtl
push
mov
rclb
xchg
clc
mov
adc
out
ret
xor
clc
mov
and
fldl
xchg
jb
xor
cmpl
jl
pop
and
jnp
sub
fidivl
xchg
mov
dec
fstpl
shrl
xchg
and
or
cmp
outsb
loopne
nop
mov
pop
lahf
mov
jno
mov
pop
fildl
dec
add
push
dec
push
or
ljmp
sub
dec
rol
sbb
jmp
rolb
jb
das
add
imul
adc
dec
icebp
jns
divl
inc
xchg
sbb
out
dec
sti
aad
pop
out
mov
mov
insl
push
pop
sub
arpl
push
mov
cmp
jle
inc
inc
xor
push
xchg
push
das
push
out
nop
mov
xchg
lods
sbb
push
cmp
mov
fistpll
lcall
inc
adc
or
ja
inc
or
cmpsl
push
rcrl
and
mov
je
push
mov
pop
movsb
sbb
imul
pop
les
push
add
inc
fcos
out
mov
push
lret
bound
inc
xchg
adc
ja
and
jmp
and
mov
popa
dec
lahf
daa
movsl
in
aas
lock
inc
popa
pop
xchg
not
roll
xchg
lods
fs
sbb
dec
mov
jne
aam
jb
fisubl
and
pop
push
test
pusha
arpl
test
inc
or
pop
sbb
lcall
cmpsl
push
shr
sar
xchg
dec
or
cld
xchg
mov
adc
or
pop
test
addr16
xor
stos
mov
xlat
mov
jp
push
sub
mov
in
sub
mov
out
push
dec
movsl
fwait
xchg
imulb
leave
or
clc
and
arpl
mov
dec
push
stos
das
mov
cmp
pop
sub
push
bound
inc
xchg
inc
xor
xchg
test
jae
push
dec
loopne
test
mov
and
or
orb
push
scas
aas
jg
loope
cmp
lods
in
cmc
in
xorb
adc
rolb
mov
adc
es
fstpt
push
adc
mov
adc
jge
aad
pop
repnz
push
call
into
sarl
out
push
adc
dec
mov
xor
mov
add
dec
movsb
mov
es
cltd
mov
std
stos
ficoml
test
hlt
pusha
or
in
xchg
mov
fdivrl
mov
sbbb
dec
gs
xor
mov
inc
mov
pusha
out
mov
outsb
mov
and
add
push
xor
pusha
inc
lcall
jbe
xchg
push
cmp
push
test
call
xchg
or
jbe
mov
push
dec
stos
cs
xor
js
or
aas
push
push
cmpl
xchg
pop
pushf
orb
and
mov
adc
aas
push
push
and
xchg
xchg
mov
cmp
and
add
add
aaa
test
js
pop
out
loop
aam
fldl
cmp
push
lods
loop
cmp
xor
pop
dec
ljmp
inc
inc
mov
mov
adc
sarb
nop
and
push
fwait
push
pop
push
xchg
jbe
daa
lods
ljmp
dec
sbb
repz
stos
xchg
jecxz
loopne
iret
lea
xchg
xchg
out
xchg
hlt
out
and
xchg
fisubrl
sbb
inc
ret
lock
outsb
leave
inc
fucom
xor
xchg
sub
lcall
sahf
stos
push
mov
lcall
movsl
jl
cli
cltd
lods
sbb
sub
mov
lret
mov
xchg
dec
repnz
mov
add
popf
movsl
clc
pop
sub
gs
pusha
mov
xorb
jb
aad
sbb
mov
cmpsl
fdivs
mov
divl
add
push
pop
mov
gs
adc
out
repnz
lcall
push
add
or
call
cmp
cs
jnp
mov
jbe
mov
es
mov
std
cli
xor
dec
pop
mov
mov
lret
fcompl
dec
aad
push
rcll
out
arpl
out
sbb
adc
lcall
ror
fidivl
or
mov
push
pop
dec
sub
lret
sbb
dec
or
jnp
std
punpcklwd
xor
push
jno
sbb
jbe
pop
roll
pop
ds
xchg
xchg
lds
das
xor
ret
aam
cltd
in
jbe
repnz
pop
sbb
mov
jle
mov
or
pop
test
mov
ljmp
pop
mov
push
mov
mov
pop
xor
fwait
push
int3
cmp
or
test
lcall
dec
push
dec
sub
scas
xor
mov
push
xchg
loopne
xchg
jecxz
lods
loopne
subl
pop
stos
xor
mov
int3
out
rorl
xchg
pop
ret
out
jnp
mov
inc
movb
or
mov
mov
aaa
pop
push
cmp
jb
mov
pop
jle
cmpsl
adc
mov
sbb
and
mov
cmpsb
dec
pop
sbb
dec
fisttpll
rorb
sahf
push
insl
adc
cmp
ret
jge
adc
stos
outsb
outsb
push
xchg
shld
loope
adc
jno
test
mov
mov
ljmp
movsb
adc
jmp
push
and
or
push
enter
mov
inc
and
push
adc
js
mov
jae
xchg
cmpl
sahf
gs
icebp
imul
fs
jg
push
leave
stos
cmp
aas
sbb
fidivs
sub
add
mov
in
dec
addl
sub
push
pop
stc
ss
or
add
in
int
or
jg
hlt
leave
cmp
addr16
es
out
mov
pop
loopne
addr16
addr16
jbe
xlat
into
cmp
pop
into
in
push
mov
mov
orb
int
shlb
mov
lods
cli
xchg
in
push
lcall
int
push
jp
xchg
sbbl
sub
add
cmpl
xor
out
clc
jo
dec
loope
repnz
shll
nop
ds
mov
rclb
xchg
or
jmp
lds
cwtl
inc
ret
inc
xchg
push
das
in
or
mov
mov
sub
lods
pop
pop
pop
fcompl
xchg
sbb
shll
mov
or
cs
mov
xchg
and
ljmp
test
mov
fs
jae
cmpsl
mov
stos
jnp
mov
nop
dec
iret
inc
xor
push
sub
pop
and
and
sarl
mov
pop
sub
mov
xlat
js
out
push
sti
popa
cli
sub
inc
jmp
stos
xchg
arpl
aaa
repnz
add
xor
sbbl
orb
add
sub
sbb
movl
movsl
inc
test
ret
das
sub
sub
lds
shlb
adc
cmpsb
jle
adc
jns
adc
jo
dec
test
sbb
repz
cld
jb
cmp
jg
adc
repnz
std
pusha
movsl
xchg
popf
push
mov
push
sti
jns
std
and
stos
movsl
adc
dec
je
jle
mov
xor
out
dec
jge
mov
mov
inc
adc
test
add
pop
je
test
sbb
mov
xorb
push
loop
mov
mov
lods
push
mov
cmp
inc
clc
mov
popa
outsb
aam
dec
add
ja
sbb
or
fisubrl
rorb
inc
xchg
sahf
adc
rolb
or
stos
pop
mov
xchg
pop
or
fidivrl
sbb
mov
std
xchg
cmp
and
lods
sbb
lret
inc
loop
aaa
sarb
xlat
adc
dec
mov
mov
jmp
adc
sahf
out
push
mov
mov
mov
jmp
mov
in
orb
sub
mov
lods
xchg
jo
jmp
push
pop
push
pop
add
mov
cmp
or
add
inc
outsb
rolb
popa
lret
sti
cli
push
mov
and
add
cmp
aas
in
rorb
movsb
jecxz
pop
or
icebp
push
add
pushf
outsb
dec
ljmp
shlb
repnz
fxch
arpl
in
dec
imul
lahf
stos
cwtl
and
xchg
add
enter
adc
popl
cwtl
aam
insl
mov
jle
xor
gs
add
mov
inc
jmp
mov
subl
cmp
dec
repz
ret
imul
cltd
add
jae
inc
jmp
mov
subl
cmp
dec
repz
ret
imul
sbb
adc
inc
jmp
mov
jae
xchg
cmp
dec
jecxz
ret
imul
cltd
pop
test
arpl
inc
jmp
dec
mov
sub
cmpsb
cmp
sub
ljmp
out
cli
xchg
inc
lock
scas
pop
jne
and
adc
and
jo
and
cmpsl
ja
addr16
inc
lock
loopne
rclb
shlb
and
je
ret
fsubs
push
xlat
inc
xchg
lcall
sbb
stc
xlat
pop
xor
sub
loopne
into
and
sub
fsubl
out
adc
add
jecxz
cmp
lret
hlt
fcomps
adc
pushf
sub
dec
fnstenv
or
pop
push
or
rcr
mov
mov
aaa
fs
jbe
imul
jp
bound
decl
xchg
and
xchg
pusha
mov
ja
inc
or
aad
cmc
dec
cmp
sar
or
adc
pop
cmp
mov
pop
adc
aam
bound
leave
add
ret
and
pop
rolb
cmp
popa
cmpsb
fldl
mov
jge
jo
movsb
xor
sti
iret
neg
out
sub
fbstp
xchg
inc
add
mov
dec
loopne
cli
daa
ror
flds
or
sbb
push
xchg
pop
jmp
cmc
adc
imul
and
sbb
add
xor
xor
bound
test
xchg
and
adc
testb
and
and
push
loopne
rclb
rolb
mull
out
xlat
add
jo
pusha
cmpsl
push
xchg
inc
xchg
push
addb
loopne
rclb
rolb
mull
out
xlat
add
jo
pusha
cmpsl
push
xchg
inc
xchg
hlt
call
add
dec
cwtl
dec
push
aaa
push
out
mov
insl
int3
aad
mov
add
lods
pop
sub
lahf
cmpsb
cmpb
cld
clc
xchg
adc
mov
adc
sub
jnp
mov
rolb
push
add
pop
sahf
les
mov
jnp
leave
jg
jl
dec
mov
shl
mov
pusha
in
and
pop
dec
push
push
les
dec
loope
inc
xor
sub
xchg
cltd
inc
stos
loop
movsb
negb
ja,pt
sti
mov
scas
fsubr
xlat
loope
dec
aaa
cmp
jae
fwait
inc
fstps
insl
pop
rolb
mov
insb
ja
adc
leave
pop
nop
xchg
add
sub
xchg
cmpsb
lcall
daa
add
mov
xchg
mulb
pop
fsubs
jmp
mov
cltd
test
lea
cltd
jg
mov
inc
mov
ss
test
cmp
fs
cmp
cmc
cmp
sahf
inc
or
cmp
push
push
lea
sub
sbb
sti
lds
shll
xchg
cwtl
dec
fldt
sub
lret
xchg
add
adc
xchg
stos
xchg
mov
jbe
lahf
lock
adc
and
pop
inc
adc
and
insl
fdivrl
jmp
cltd
mov
hlt
or
filds
lock
sbb
nop
xor
pop
and
mov
or
push
mov
sbb
mov
mov
in
inc
push
test
xor
lcall
jne
cli
divb
cmp
aas
adc
into
lret
pop
int
lahf
lret
cmc
mov
mov
lahf
pop
mov
out
xor
or
popa
sbb
adc
ret
rclb
add
adc
mov
push
jp
xchg
lahf
ret
aad
xchg
out
lret
inc
pop
gs
imul
mov
mov
sub
jns
xchg
xchg
sub
ficoml
mov
je
notb
push
outsl
lods
ss
sbb
int3
add
jle
sub
xchg
jl
sub
mov
rolb
adc
bound
and
cmp
nop
mov
mov
imul
sub
jp
adc
add
in
clc
insl
mov
sbb
ret
loop
add
dec
push
stos
repz
xchg
dec
sub
lods
js
xchg
loop
lcall
gs
movsl
enter
std
xor
push
inc
mov
mov
sbb
adc
sbbb
and
jge
mov
lods
and
rolb
loope
fbld
push
inc
out
arpl
xchg
dec
sub
fwait
add
xor
mov
xor
push
add
es
sub
mov
aas
fwait
and
repnz
adc
push
fnstcw
or
xchg
lock
add
call
mov
popf
fimull
ds
and
sbb
adc
xchg
sbbb
push
sti
dec
adc
mov
or
in
jecxz
jno
xchg
mov
jns
stos
xchg
jns
xchg
xchg
mov
inc
mov
xor
push
sub
mov
in
and
lds
into
cmp
dec
movsb
pop
jle
cmp
lcall
lret
test
dec
sbb
mov
fsubrl
mov
leave
in
jbe
stos
pop
dec
sub
mov
out
dec
mov
jl
sahf
xor
dec
sub
xor
jno
mov
int3
pop
mov
clc
roll
adc
xchg
daa
mov
fwait
cmp
lret
sbb
inc
inc
mov
mov
and
xchg
mov
dec
movsl
sti
je
mov
and
jg
push
bound
inc
or
ljmp
jbe
stc
sarb
out
test
sub
das
push
push
dec
mov
inc
arpl
mov
add
add
push
sahf
adc
scas
insb
sti
add
rcll
mov
leave
jle
push
jno
fstp
daa
pop
inc
push
mov
adc
je
fcomps
sbb
mov
scas
sub
dec
fcmovne
shlb
jns
xor
aas
lods
ret
pop
ret
dec
and
adc
adc
loopne
mov
iret
outsl
cs
call
and
mov
aam
dec
sub
mov
dec
enter
out
ret
pop
adc
bnd
mov
sbb
ja
inc
push
mov
jnp
cmp
jg
add
mov
sbb
sbb
jbe
mov
cmp
or
rol
cmp
cmp
lret
push
lahf
mov
dec
mov
rol
jge
cli
cs
pop
mov
mov
mov
jmp
mov
es
lds
mov
out
mov
int
aaa
out
jbe
cmp
pop
mov
mov
lahf
xchg
cmp
scas
xchg
rcll
adc
add
clc
xlat
in
jge
clc
and
and
pop
fucom
sbb
nop
jno
sarb
push
adc
cmc
test
ja
iret
push
push
adc
inc
cmp
stos
cld
inc
push
out
fistl
mov
lret
call
inc
cmp
cltd
mov
dec
scas
scas
idivb
sbb
and
in
cwtl
jecxz
fiadds
pop
mov
incb
sti
jmp
xor
shll
imul
xor
xor
push
xchg
inc
pop
push
jo
jae
sub
aam
fchs
jno
stc
and
dec
push
sbb
xchg
mov
sub
inc
adc
in
jl
jae
xchg
ficoml
into
mov
adc
dec
jno
insb
xor
loopne
mov
push
call
sub
xchg
sbb
jl
arpl
adc
lea
and
scas
mov
push
cwtl
cmpsb
sti
nop
test
inc
in
pop
sahf
mov
mov
or
fsubs
mov
pop
fcmovu
mov
fwait
jae
and
imul
push
push
xchg
lret
out
nop
int3
xor
popa
fsubl
aaa
jnp
ret
pusha
fdiv
rep
stos
adcb
adc
xor
cmpsb
in
pushf
and
pusha
jge
call
pop
jae
int3
rcr
in
adc
iret
sub
mov
outsl
xor
addr16
push
ja
insb
scas
cltd
lcall
sarb
adc
lret
insl
rcrb
dec
pushf
arpl
dec
mov
fildl
mov
dec
scas
lods
push
mov
addr16
xchg
out
push
lock
fwait
adc
js
arpl
cmp
sbb
jecxz
hlt
test
mov
add
ljmp
jno
push
push
pop
add
cmpsb
and
arpl
xchg
mov
mov
jnp
sbb
gs
rcll
mov
out
adc
push
mov
scas
xchg
xor
aam
inc
fwait
mov
xchg
mov
cmp
jg
lods
stc
insb
pop
adc
lret
xor
adc
push
or
sbb
add
nop
push
xorl
push
cmp
mov
into
testl
insl
out
fsubs
xchg
and
aad
rol
mov
push
lea
ljmp
jb
das
mov
rcl
and
and
pop
mov
inc
aaa
mov
outsb
sbb
cmp
leave
jl
addb
in
mov
push
sub
movsb
fstl
hlt
insb
push
xchg
mov
mov
mov
in
insl
in
cmc
and
cmp
add
inc
xchg
jns
lods
lret
push
mov
xor
rclb
ss
ret
pop
stos
xor
daa
dec
xchg
or
xchg
les
adc
in
stc
and
leave
cmp
adc
cmp
imul
xchg
cwtl
jb
add
sar
cmpsb
out
and
jno
mov
dec
loop
or
sub
dec
mov
adc
fsubl
sarl
add
cmc
or
call
mov
cs
mov
jns
out
ja
rcl
bound
mov
hlt
in
pop
ljmp
mov
in
stos
orb
cmpl
add
in
cmc
hlt
fwait
cmpb
lds
ret
push
test
add
dec
in
cld
test
rcll
cmp
xchg
dec
and
addr16
hlt
je
sbb
mov
sbb
xchg
cwtl
scas
mov
sbb
dec
lret
lods
es
inc
pop
add
dec
rcll
add
cmp
es
mov
mov
xchg
repnz
xor
scas
mov
mov
inc
lods
sbb
aam
cmp
xchg
stos
sub
cwtl
test
push
lods
fcmovne
popfw
sbb
les
ljmp
decb
out
cmp
pop
iret
pop
dec
jns
jb
mov
leave
outsl
lahf
popa
nop
mov
mov
add
dec
int3
insb
mov
inc
mov
sbb
cmc
cmp
jmp
sbb
rcrb
push
cmp
pop
dec
push
out
stos
and
lret
fldt
jbe
jmp
push
mov
sbb
gs
cld
inc
pusha
stos
sub
push
or
xchg
popa
xor
xor
push
loope
mov
int3
mov
addr16
dec
cmpsl
dec
push
daa
pop
in
cmp
cmp
xchg
push
lods
dec
fcomps
inc
ja
pop
cmp
lods
jnp
sub
adc
adc
dec
hlt
mov
xchg
inc
sub
hlt
scas
inc
loop
sbb
dec
pop
imul
xor
xlat
pop
clc
mov
push
xor
dec
les
fs
fistps
mov
xchg
adc
aad
jmp
adc
sbb
pop
call
cmp
hlt
fadds
and
mov
mov
fs
cmp
bound
push
rclb
and
subb
add
fwait
aad
in
sbb
sti
outsl
push
add
jmp
mov
fs
out
pusha
or
fs
in
arpl
push
hlt
pop
xor
gs
mov
cld
push
sbb
dec
inc
cmp
mov
or
add
sbb
pop
pop
cmc
inc
in
imul
pop
or
ja
into
cli
mov
sbb
or
dec
pop
das
int
fdivrl
or
movl
inc
mov
push
mul
jnp
and
xchg
sub
mov
rorb
into
pop
out
push
mov
and
ret
sahf
dec
enter
test
lods
fwait
push
je
or
xor
loop
xchg
lcall
mov
sbb
daa
mov
dec
cmpsb
movsl
jl
aam
push
ret
xor
adc
movsb
xchg
daa
mov
ds
jmp
lock
add
rorl
sub
cmpb
test
jo
je
mov
test
and
cmpsb
repz
and
mov
test
mov
mov
add
adc
dec
js
pop
push
mov
xor
fs
aad
in
cld
hlt
sbb
inc
mov
imul
ds
fstp
sub
call
or
adc
add
push
popf
dec
adcl
sub
or
add
in
sbb
in
and
jle
je
lea
mov
out
data16
pop
inc
xchg
inc
pop
push
xor
adc
push
dec
das
incl
xchg
setp
les
iret
fistl
ss
cmpsl
icebp
out
sti
push
fisubrs
mov
inc
pop
fmuls
ret
fwait
mov
psllw
sub
pop
xchg
rcr
xchg
loope
pop
pop
rcrb
adc
add
test
aaa
dec
insb
fisttpll
shrb
imul
aad
jmp
loopne
xlat
fimull
repnz
js
shl
push
adc
mov
orl
imul
jmp
add
xchg
dec
ljmp
or
xchg
xchg
xchg
mov
js
jnp
mov
movsb
lea
loope
int3
les
adc
pusha
push
das
iret
xchg
cmpsb
lret
jno
xor
cmpsb
add
nop
roll
xor
dec
pop
cmp
sub
jmp
sbb
hlt
xchg
sub
repz
inc
xlat
iret
jl
pushf
jp
dec
adc
mov
mov
mov
imul
ret
dec
out
insl
sti
int3
arpl
decl
out
dec
dec
lahf
push
cmp
or
push
aam
cmp
icebp
roll
outsb
cmp
adc
out
inc
adc
pop
mov
popf
lret
push
or
fwait
stos
inc
push
jp
incl
outsl
ja
or
dec
scas
icebp
out
out
sbb
xchg
fs
js
add
aad
call
mov
xorb
cmp
loop
jo
or
mov
inc
faddp
and
xchg
outsb
sti
add
hlt
lea
and
sub
xor
mov
inc
mov
mov
bound
pop
xor
sub
inc
repnz
xchg
lods
movsl
jecxz
insb
mov
mov
cmp
jp
movaps
jno
inc
ja
adc
adc
iret
ret
ss
js
pop
sub
add
cs
lock
lods
xor
jno
add
inc
cmp
icebp
roll
pop
or
mov
lods
mov
negl
inc
sarb
inc
repnz
pushf
dec
ret
cmpsl
in
push
dec
aas
push
jbe
addr16
mov
push
daa
das
cmp
xor
mov
jnp
les
and
dec
adc
pop
in
add
loope
jle
shl
mov
add
in
imul
shlb
lock
test
ss
fcomps
and
pop
jg
fisubl
cs
add
xorl
push
aam
xor
cmp
jno
cmp
ss
mov
dec
or
xor
sbb
pushf
push
pop
and
mov
lret
mov
xchg
jnp
test
jns
popa
lret
mov
movsb
and
pop
sbb
int
inc
stc
fwait
mov
xor
mov
orl
js
shlb
jecxz
push
flds
je
cmp
cmp
xchg
pop
mov
icebp
xor
inc
mov
popa
daa
arpl
jge
jle
aam
adcb
sub
call
add
mov
pop
mov
adc
icebp
adc
and
fnstenv
jb
mov
push
or
jle
sahf
mov
aas
repnz
mov
mov
xor
shll
outsb
adc
shld
mov
cs
shll
mov
mov
sbb
push
mov
and
rcll
inc
sub
gs
int
mov
xchg
xor
add
jecxz
aas
inc
fsts
out
and
ret
pop
xor
mov
aad
mov
pop
mov
ret
inc
xor
cwtl
push
rorl
dec
pusha
mov
repz
fwait
in
pop
or
xor
inc
xchg
cli
mov
outsb
mov
ljmp
jp
mov
sti
into
addr16
cmpsb
adc
cmpsb
loope
and
push
sti
imul
idiv
insl
pop
and
mov
inc
cld
imul
jge
mov
mov
sub
fdivrs
push
pop
or
mov
pop
mov
daa
clc
std
inc
fidivl
outsb
jns
mov
or
jo
mov
and
sbb
movsl
push
cmpsl
inc
adc
xor
sub
ljmp
xchg
dec
clc
ds
jecxz
shlb
das
imul
push
cmpsb
jp
shlb
push
mov
pop
fiaddl
aad
cmpsb
dec
shl
lock
push
sub
clc
cltd
flds
mov
sub
pop
add
inc
lcall
pop
mov
pop
out
fiaddl
ljmp
lret
popf
popf
sub
mov
mov
mov
js
mov
push
cmp
sahf
pop
or
fisubs
inc
rcr
andl
fcmovnbe
mov
inc
cmp
jle
mov
push
loop
mov
jne
mov
mov
and
xor
and
dec
push
insl
lea
inc
hlt
std
callw
stos
adc
mov
sub
pusha
sti
dec
xchg
pop
xor
xlat
out
push
jnp
push
mov
lock
push
imul
insl
push
push
fisubrl
sahf
stc
sub
cmp
sbb
pushf
mov
push
loope
cmp
lock
sbb
mov
jge
dec
mov
inc
in
scas
adc
dec
mov
scas
insb
loopne
repnz
mov
daa
jmp
and
sub
or
or
dec
push
loope
into
xchg
sbb
rcrb
clc
push
lods
lret
int
xchg
lods
xlat
loop
loope
popf
cmpsb
jg
xor
xchg
add
inc
ret
sbbl
popa
lods
xor
sub
pop
out
popa
add
dec
mov
dec
dec
push
lret
fimuls
stos
lcall
popf
pop
inc
fidivs
cmpsb
or
mov
stc
imul
mov
push
mov
mov
rorl
xchg
aaa
mov
xchg
add
add
wbinvd
repnz
jns
or
fstpl
mov
or
das
insb
mov
inc
sub
pushf
mov
repnz
sub
jmp
in
nop
aam
fwait
movsl
daa
aad
jecxz
mov
cmp
cmp
jmp
jecxz
into
test
lock
sbb
mov
xor
or
out
xor
mov
push
add
faddp
xor
les
inc
gs
sbb
sbb
into
and
mov
pop
mov
add
sbb
cmpsl
jecxz
or
icebp
adc
or
cmc
dec
cmp
mov
imul
in
inc
shlb
add
int
pop
sub
hlt
add
mov
xor
mov
and
sub
and
add
fldenv
in
pushf
subb
into
fcmovbe
push
or
jle
sub
lret
je
mov
mov
sbb
add
imul
bound
push
inc
add
out
lea
out
es
orb
mov
inc
push
loopne
test
mov
daa
lods
pop
stos
jmp
xchg
arpl
jnp
mov
mov
add
jle
scas
outsl
adc
inc
fs
aad
stc
sbb
cmp
nop
xor
mov
mov
jb
push
sahf
aam
jne
or
pushl
add
xor
inc
fdivrl
xchg
decb
shl
adc
xor
stos
sbb
dec
dec
pop
test
cmp
and
lods
jb
mov
sub
lods
adc
mov
in
lcall
scas
pop
outsl
and
imul
jae
push
dec
push
push
lock
lds
mov
dec
xchg
and
mov
mov
push
mov
repnz
dec
mov
jmp
jnp
xor
mov
dec
fdivrs
imul
mov
in
jmp
fwait
jo
sbb
xorb
out
jb
cmpsb
mov
cli
and
loop
inc
lcall
pop
mov
call
arpl
pop
lock
and
sub
mov
sbb
pop
fstpt
adc
out
icebp
mov
mov
jmp
jmp
fcomps
lock
lret
xchg
mov
and
rcl
pop
popf
and
mov
dec
fs
insl
jb
cmpsb
mov
pop
cli
popa
hlt
insb
fdivr
mov
fmul
push
fisubs
mov
test
arpl
push
or
test
mov
jns
mul
ret
cmpsl
pop
xlat
jne
pop
push
pop
mov
lods
lods
and
loopne
xor
push
cmp
and
ret
sub
nop
scas
mov
outsb
es
sbb
mov
movsb
pop
jbe
push
fwait
hlt
mov
inc
es
jae
xor
xor
sub
add
and
fists
fidivs
xor
dec
stos
pushf
cmp
loop
dec
mov
mov
stos
or
dec
and
mov
xchg
mov
sbb
cmp
or
loope
cltd
icebp
pop
testl
stos
mov
xchg
call
mov
xorl
mov
ja
inc
inc
stc
test
xchg
mov
sahf
jb
repz
cltd
or
rcl
in
sub
popf
sbb
es
adc
jne
xor
add
sub
js
xchg
or
std
or
fs
push
sbb
in
mov
inc
pop
mov
cld
pop
push
cltd
mov
jns
jb
push
sub
or
insb
and
fcompl
mov
hlt
icebp
push
push
mov
int3
fldenv
and
cmp
addr16
addb
loopne
rclb
rolb
mull
out
xlat
add
jo
pusha
cmpsl
push
xchg
inc
xchg
push
addb
loopne
rclb
rolb
mull
out
xlat
add
jo
pusha
cmpsl
push
xchg
inc
xchg
das
addb
loopne
rclb
rolb
das
and
adc
add
jo
cmpsl
push
mov
xchg
addb
loopne
push
xchg
inc
pop
iret
or
dec
mov
aas
call
js
mov
sahf
sbb
add
mov
mov
cli
dec
call
jle
mov
sahf
sbb
push
pop
out
dec
stos
push
stos
push
lcall
pop
fisubrl
jle
mov
sahf
add
jb
inc
out
dec
mov
pop
repnz
sbb
cmp
mov
sbb
jl
sub
push
fwait
in
lea
adc
shrb
dec
jmp
add
sti
mov
xchg
fisubs
mov
push
ss
fcomip
aas
mov
jle
je,pn
stos
mov
aad
outsb
xor
dec
jmp
cltd
out
push
shr
mov
into
push
loopne
sub
cli
dec
push
insl
ficoml
cmp
test
imul
pop
dec
scas
xor
jne
add
nop
lret
adc
inc
test
jb
pop
adc
pop
fwait
sarb
add
fisubrl
rorb
lret
scas
cmc
lret
test
inc
jnp
icebp
daa
movntq
fidivrl
mov
jnp
jle
mov
sahf
sbb
jp
pop
out
push
mov
cs
loop,pt
repnz
shrb
push
jecxz
dec
jg
jle
or
dec
mov
inc
out
push
cli
and
sbb
dec
aam
scas
jp
push
stos
push
pop
sbbl
jb
js
push
cli
and
adc
inc
ljmp
push
pop
out
dec
mov
mov
cli
dec
ljmp
mov
sahf
sbb
push
pop
out
dec
mov
mov
cli
dec
ljmp
mov
outsl
push
or
enter
sbbb
xchg
js
pusha
mov
js
mov
and
mov
cmp
inc
sbb
jmp
push
das
iret
xchg
xor
aaa
and
test
in
mov
mov
jnp
push
imull
out
dec
pop
pop
ret
leave
ret
mov
push
and
mov
js
xor
les
fs
popf
and
lret
enter
cmp
popa
mov
or
mov
lods
pop
mov
cmp
jne
divb
sbb
loop
rol
test
or
into
out
mov
fsub
in
mov
inc
mov
fildl
xor
jmp
jp
leave
clc
lds
jl
push
cs
cld
imulb
inc
cltd
cmp
data16
aam
jg
call
xchg
ret
add
in
dec
mov
movb
aam
dec
movsb
outsl
sahf
addl
xchg
scas
jne
jg
or
pop
lret
xchg
and
cmpsl
xor
std
push
pop
sahf
xchg
jmp
ffreep
mov
in
and
int
sti
es
aam
out
mov
mov
cmpb
aad
mov
imul
fdivr
sub
push
fldenv
add
jae
loope
cmc
dec
xor
shlb
xor
push
jecxz
jl
rcll
mov
sub
push
in
inc
jge
push
xchg
fmulp
cmp
divps
dec
sub
addr16
jle
add
jne
mov
push
sub
mov
fs
nop
lahf
cmp
shrb
lods
aam
outsb
or
mov
mov
add
pop
mov
popf
pusha
shl
out
mov
es
fldt
jno
sbb
shrd
out
mov
mov
jle
xchg
mov
fwait
lods
add
out
or
fdivr
pop
sub
or
inc
adc
or
push
repz
sbb
mov
xor
dec
loopne
dec
loop
xchg
daa
test
les
repz
mov
inc
inc
dec
fidivrl
xchg
adc
push
or
jbe
sub
addb
mov
xchg
scas
arpl
or
ss
jle
fwait
in
and
popf
fs
mov
mov
incb
out
or
pop
cmpsl
mov
fidivrs
lcall
fwait
cmp
or
inc
and
cld
mov
jle
inc
and
or
idiv
aaa
pop
mov
xchg
lods
gs
mov
ret
mov
mov
pop
inc
into
add
test
subb
fisttpll
lret
movsb
adc
pop
inc
and
inc
inc
push
pop
sub
fwait
in
dec
sbbl
pusha
fldcw
cmpsb
cmp
shl
sub
mov
and
stos
mov
sub
and
mov
jnp
cli
dec
push
dec
aad
cmp
mov
xor
sub
xchg
jp
rclb
xchg
enterw
sbb
movsb
or
mov
lret
cltd
mov
out
pop
xchg
sub
ss
mov
arpl
mov
daa
jnp
adc
cmp
int
xchg
sub
jbe
mov
xchg
rcll
xchg
std
aad
ret
stos
push
stos
xchg
push
clc
ret
mov
ljmp
mov
sar
pop
dec
mov
jno
lret
pop
cmp
std
clc
sub
xor
in
inc
add
sbbb
pop
cmp
jmp
sbb
and
pop
testb
in
neg
mov
mov
or
mov
cmpsl
cmp
dec
cmp
mov
outsl
sahf
imul
loop
or
and
cmp
out
cli
cmpsl
cmpsl
sahf
lret
aad
xchg
jg
inc
fcompl
or
fidivl
push
lock
in
add
in
and
lods
cmp
lock
cmp
aas
popf
data16
or
jb
adc
js
stc
movsl
stos
hlt
add
out
cmc
out
fcoml
in
das
xor
out
cmp
sahf
jb
lods
lock
loop
adc
add
rolb
inc
sbb
dec
in
in
data16
aam
loopne
sbb
lret
orl
jmp
cmp
loope
scas
call
fstps
inc
les
fsubp
jg
jp
xchg
test
icebp
movsl
jl
jmp
mov
shl
dec
jp
adc
xor
cmp
pop
lahf
enter
add
js
push
pushf
sub
add
test
movsl
dec
cltd
push
jbe
xor
daa
inc
pop
popf
out
ss
push
lret
inc
pop
and
jne
jo
or
mov
sbb
jb
dec
sbb
add
push
scas
xor
loop
inc
or
int
sbb
jp
mov
jp
mov
push
out
inc
ss
cli
fstpt
mov
loope
stc
pop
push
xchg
push
aaa
addr16
shlb
hlt
lret
xchg
push
inc
iret
mov
sub
je
mov
mov
jmp
add
mov
xchg
push
mov
and
add
fdivrs
xchg
cmpsl
cmp
and
add
push
test
lea
stos
inc
jecxz
aaa
in
push
repz
fnstsw
mov
pop
daa
add
aaa
subl
sub
mov
call
iret
repnz
pusha
aam
negb
aam
in
fwait
cmp
ret
inc
lret
ss
jne
dec
jne
sub
repz
inc
test
test
iret
outsb
pop
je
add
xchg
ljmp
nop
xchg
test
in
rcl
sub
sub
and
xchg
push
adc
xchg
pop
jle
cltd
ret
xor
mov
mov
pusha
test
cld
shlb
cmc
push
ret
cmp
push
into
addr16
ss
add
into
xchg
aaa
les
pushf
lock
cmp
shlb
push
aaa
lods
add
sbb
push
adc
pop
xor
addb
out
loop
and
fdivrs
ret
mov
push
mov
testb
scas
push
jnp
xor
fsubs
out
push
daa
call
insb
in
and
mov
adc
and
lods
and
xchg
out
fnstenv
hlt
daa
or
sbbl
or
adc
sub
inc
adc
test
pusha
jne
pop
out
arpl
std
rorl
mov
sbb
push
cltd
mov
and
xor
mov
dec
cmpb
or
push
into
sbb
pop
push
sub
jo
cli
push
mov
fwait
and
lret
and
neg
or
mov
fildl
movsb
filds
pop
push
jmp
daa
std
stos
cmc
sarl
dec
shl
cmp
loop
pop
push
xor
push
leave
inc
sub
test
cmp
push
inc
adc
shr
pop
jl
lcall
decb
pop
sbb
sub
dec
lret
sbb
mov
jmp
rcrl
sbb
sbb
xchg
ret
mov
fwait
das
pop
push
and
dec
pop
xor
lds
stc
cmp
inc
mov
push
jl
mov
xchg
lret
mov
inc
ficoml
pop
and
jle
pop
push
xor
mov
push
xor
inc
test
pop
enter
or
les
lods
mov
push
test
xor
cli
pusha
fwait
or
stos
mov
xor
and
inc
ror
xchg
mov
aas
repz
xlat
leave
cmp
and
adc
loopne
xor
sbb
push
scas
or
incl
mov
rorl
sub
mov
dec
lahf
dec
pop
sub
test
stos
or
ror
repz
popa
dec
cmp
inc
push
jmp
cltd
leave
movsl
movsb
xor
scas
pop
sbbl
je
call
pushf
mov
push
and
adc
int3
pop
or
mov
loop
ljmp
adc
jmp
call
inc
and
cs
stos
push
mov
mov
mov
shll
jp
fwait
mov
xor
mov
popf
std
push
fnstcw
push
aam
jecxz
ss
mov
std
aam
lret
xor
mov
enter
cmpsl
lods
adc
add
cmp
nop
into
mov
sub
xlat
shll
push
jg
sub
inc
mov
daa
cmpsl
xchg
lret
ss
pop
inc
push
xchg
and
dec
fcoml
insb
das
js
outsl
orb
scas
cld
push
jno
mov
outsl
and
lret
dec
jg
add
jno
mov
mov
push
sahf
sbb
jecxz
inc
mov
xlat
idivl
or
addb
loop
sbb
mov
fwait
mov
add
adcb
mov
mov
imul
cmpsl
push
inc
hlt
or
outsb
add
cmp
subb
sti
rcrl
inc
daa
mov
icebp
and
jns
loopne
sbb
insb
icebp
dec
mov
sbb
pop
out
jmp
in
fsts
inc
js
cmp
leave
pop
data16
les
dec
arpl
push
pop
shrb
lcall
xchg
dec
cld
xchg
xor
xchg
add
ss
mov
mov
or
lret
aam
sbb
mov
jne
loope
mov
movsb
addb
pop
adc
xor
mov
xlat
pop
pop
shrb
iret
test
lret
je
lods
inc
shll
ret
inc
ret
daa
in
lds
movl
test
fstpt
sbb
mov
push
add
push
lock
xor
mov
sbb
and
fcompl
mov
dec
stos
mov
ds
cld
ficompl
cmp
mov
lods
xchg
rorl
icebp
mov
cmp
dec
dec
bound
pop
ljmp
pop
dec
adc
sbb
fsts
mov
push
mov
movsl
fadd
cmp
sbb
jg
mov
mov
int3
xchg
repz
mov
inc
movsb
adc
stos
fldt
ss
stc
int
scas
inc
mov
fsubrs
and
sub
xchg
jg
sbb
or
cmp
sbb
jns
std
mov
loopne
dec
xchg
das
imul
pop
sub
movsl
outsl
push
lock
xchg
jno
sbb
lods
mov
gs
int
push
mov
mov
fisubrs
cmpsb
xor
testb
mov
inc
shll
jae
sbb
lcall
dec
aad
es
ljmp
test
push
xor
lods
jae
mov
or
sti
pop
cltd
mov
sbb
mov
ret
mov
mov
xchg
and
jecxz
sahf
aam
jmp
loope
pop
mov
fnsave
fwait
pop
arpl
sti
xchg
adc
dec
cmpsb
sub
pop
xchg
mov
mov
xbegin
aam
mov
scas
push
insl
pop
jbe
and
les
lds
add
mov
fdivl
test
aas
lock
fwait
push
fwait
jl
cmp
std
cmp
ficompl
stc
insb
sub
inc
push
sbb
mov
fwait
cwtl
mov
and
xor
cmp
mov
jb
sbb
lret
lcall
stc
push
xor
or
sub
mov
gs
scas
mov
dec
lahf
imul
in
jle
adc
jno
fsubl
insb
aaa
mov
push
or
mov
fisttpl
cmp
hlt
insl
dec
cmp
xor
pop
adc
xor
movsb
mov
movsl
xchg
icebp
or
adc
mov
mov
adc
mov
inc
shrl
ljmp
pop
lods
sti
pop
aam
mov
inc
ret
leave
movsl
xchg
xchg
orb
pop
adc
mov
fbld
dec
cmp
jle
jmp
cmp
pop
in
push
popl
in
in
ret
push
mov
mov
xchg
cmp
call
jle
adc
mov
mov
jl
lods
daa
js
or
addl
jne
or
jno
sub
push
aas
js
cltd
je
rcr
out
loope
cmp
jne
shlb
out
push
pop
and
jne
movsl
clc
push
jnp
mov
mov
outsl
add
lret
sub
add
mov
mov
stos
inc
mov
outsl
xchg
mov
insb
rclb
sarl
sub
cmp
cltd
mov
les
into
pushl
adc
xor
enter
mov
bound
jle
out
jne
ret
push
xor
out
pop
adc
jns
shl
fimuls
loope
dec
rcr
std
push
pop
mov
jae
test
cmc
lds
test
jno
int
jg
mov
lock
fadd
cmp
or
mov
mov
rcrb
or
pop
jnp
inc
jle
es
push
add
shlb
mov
xchg
mov
movsb
sub
dec
jle
jbe
aaa
cmpsb
shrl
pop
or
loop
out
cmp
insb
loop
imul
xchg
xchg
stc
imul
jno
fstpl
or
or
test
xor
add
and
dec
and
js
pop
xor
or
fdivrs
mov
test
add
sbb
mov
insl
movsl
pop
fwait
pushf
mov
out
push
dec
repz
imul
and
jo
mov
test
incl
push
lds
into
es
xor
and
xchg
les
vfmadd231pd
sub
int3
out
adc
int3
inc
movsb
dec
xchg
mov
pop
ret
push
andl
lds
and
fwait
in
xchg
inc
and
jmp
add
rorl
push
add
fwait
sbb
pop
xchg
jmp
dec
add
add
ds
aam
dec
mov
and
sub
inc
pop
xchg
cmp
mov
mov
pop
mov
scas
out
repnz
push
inc
or
mov
imul
lods
rcrb
es
sahf
cmp
adc
lret
push
jae
xor
aas
add
push
xchg
jne
loope
les
movsb
pop
add
divl
shlb
and
out
xchg
add
dec
std
push
xor
cmp
testl
cmp
imul
loop
js
mov
mov
xor
mov
push
cmc
cmp
sbb
sub
pop
push
nop
in
jnp
and
iret
sbb
lret
stc
add
xor
pop
fadd
and
cli
daa
xlat
sub
adc
mov
lods
pushf
add
inc
bswap
mov
mov
arpl
popf
adc
xor
mov
mov
sbb
add
sub
and
aas
mov
das
add
mov
dec
xchg
pushf
insl
test
mov
dec
paddd
push
mov
or
sub
andl
aad
dec
cltd
xchg
cltd
pop
cli
addb
push
cmp
cmovs
lret
jns
cmpsb
jae
test
fisttpl
add
hlt
xor
mov
inc
sub
xchg
xor
cmp
adc
push
mov
mov
movsb
xchg
adc
push
adc
mov
scas
gs
and
mov
lret
shll
add
add
inc
arpl
push
ds
outsb
dec
roll
push
cmc
icebp
movsl
js
xchg
movsb
mov
popa
shl
jbe
xchg
das
repnz
push
sbb
push
push
push
xor
jmp
enter
or
mov
xchg
adcl
ret
push
insb
adc
push
or
pop
adc
loop
lea
lret
rcll
rcrb
or
xchg
aas
mov
aas
sbb
inc
mov
push
pop
arpl
xchg
xorb
add
mov
cmp
loop
pusha
xchg
xor
inc
add
pop
enter
mov
notl
dec
frstor
cs
xchg
fmuls
mov
in
aam
enter
push
mov
or
inc
pop
mov
dec
adc
fsubl
lret
cmp
out
imul
loop
mov
xor
lcall
lods
sub
cmp
inc
jmp
xchg
push
jecxz
pop
adc
dec
cmp
push
mov
mov
cmp
adc
cmpsb
mov
out
or
jb
and
push
cmp
std
xchg
xchg
mov
fisubrs
mov
jmp
mov
adc
sbb
sub
push
ljmp
xchg
add
mov
cmp
pop
ret
and
ficoms
xor
xor
stc
lcall
lret
ss
dec
popl
xlat
add
aam
pushf
lock
fdivl
pop
pop
pop
sar
sbb
xor
push
inc
mov
shll
mov
xchg
cmp
inc
test
dec
lods
cs
rcll
mov
pop
xor
outsb
or
movsl
fistpll
arpl
into
add
and
adc
ret
loopne
call
xlat
adc
insb
sbb
or
and
pop
in
test
fistl
fcmovnb
mov
xchg
and
xchg
into
mov
icebp
mov
das
mov
testl
adc
gs
shlb
add
pusha
inc
cmp
adc
lds
cmp
add
xchg
jbe
and
push
or
push
imul
int3
outsl
lcall
pop
mov
cmpsl
cli
lock
repnz
aam
jb
cmp
fnstenv
je
pusha
mov
inc
xor
sub
xor
or
sub
outsl
testb
jp
lcall
mov
adc
lret
lret
frstor
jae
loopne
idivl
pop
mov
repz
imul
cmpsb
in
adc
adc
xchg
jns
add
pop
es
setno
push
aas
insb
in
ss
adc
in
add
jbe
pop
sub
cltd
ljmp
add
adc
xor
mov
mov
movsb
xor
rorl
sbb
xchg
test
pop
push
fildll
aaa
pop
dec
pop
push
push
pop
cli
adc
movsl
out
roll
repnz
scas
out
outsb
shll
xchg
mov
out
cmc
jns
call
push
push
mov
xor
or
inc
bound
pop
add
mov
adcl
jmp
pop
dec
mov
pop
or
fcomip
repz
aam
mov
arpl
jne
sub
aam
mov
testb
push
cmp
shll
mov
dec
pop
mov
movsl
pop
mov
fsub
xor
cmp
mov
mov
enter
dec
sbb
jmp
stos
dec
hlt
pop
insb
adcl
xchg
stos
lret
test
sar
push
cmpsl
adc
xlat
dec
mov
leave
das
xlat
mov
pop
sbb
dec
dec
mov
data16
adc
das
andl
push
push
inc
adc
jl
cmp
arpl
mov
mov
fsubs
push
dec
ss
in
pop
fsubrl
daa
hlt
in
push
movsl
jae
xor
std
adc
mov
cmpsb
mov
rclb
stc
pop
xor
loop
icebp
push
shrl
fdiv
or
imul
cltd
and
rcll
movsl
aam
movsl
jg
pop
dec
int3
xchg
fwait
add
push
sub
aam
cs
fnstcw
in
bound
fidivrs
outsw
insl
out
ret
jg
dec
repz
or
fwait
mov
jb
test
sbbb
cmpsb
or
mov
push
scas
xor
adc
cmp
jbe
xchg
dec
dec
xor
jnp
or
out
mov
add
sbb
popf
add
xchg
dec
mov
or
adc
and
inc
mov
xchg
fisubrl
clc
mov
and
pop
mov
shlb
or
xchg
pop
in
outsb
mov
subb
es
cmp
mov
push
fwait
xorb
sub
and
add
cmp
outsb
aaa
shrb
cld
xchg
xlat
add
pop
jmp
ret
jmp
lock
mov
mov
mov
cmpsb
mov
pop
pop
int3
sub
xchg
aam
sbb
jbe
adc
out
gs
test
popa
xchg
push
inc
sub
movsb
jnp
inc
pop
jb
cmp
adc
shr
and
loope
xchg
push
icebp
push
push
lock
mov
pop
pop
xchg
daa
fstpt
je
cli
mov
add
mov
in
popl
stos
jns
mov
xchg
cmc
sbb
mov
and
mov
call
mov
and
jmp
enter
ret
inc
xor
testb
dec
mov
iret
fst
add
lea
sti
repnz
cli
adc
sub
lea
enter
jae
and
mov
push
in
adc
push
xor
lods
jnp
arpl
mov
jno
shl
test
es
cmc
hlt
ficoml
mov
test
add
sahf
adc
push
pop
out
dec
mov
mov
cli
dec
ljmp
mov
sahf
sbb
push
pop
out
dec
mov
mov
cli
dec
ljmp
mov
sahf
sbb
push
pop
out
dec
mov
mov
cli
dec
jmp
fisubrl
jle
mov
sahf
sbb
push
fisubrl
add
push
mov
mov
bound
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
inc
mov
test
inc
mov
jmp
hlt
sub
sub
movsb
imul
test
xor
and
aam
les
hlt
sbb
sub
movsb
imul
mov
rolb
loope
repz
out
test
xchg
sbb
daa
imull
int
and
or
adc
scas
sub
out
cmp
jecxz
sbb
jecxz
mov
xor
aaa
enter
push
sub
sub
faddl
stos
cs
push
out
int
leave
decb
ror
in
popa
lods
xchg
dec
cmovns
xchg
mov
arpl
insl
mov
dec
notb
or
pop
mov
cltd
dec
jmp
and
enter
aad
int3
or
outsl
sub
xor
dec
jns
xchg
push
mov
vprotq
fs
sbb
cmp
xlat
cmp
xchg
sahf
je
fs
flds
xor
and
aam
les
hlt
and
xor
movsb
or
xor
imul
jo
jno
insb
mov
sbb
jns
add
loope
mov
leave
and
sti
jno
popa
test
dec
in
arpl
loope
fstl
inc
in
xor
add
push
mov
leave
xor
and
aam
les
hlt
cmp
sub
movsb
imul
test
xor
and
aam
les
hlt
cmp
sub
movsb
imul
mov
fs
mov
lret
mov
and
mov
jae
xchg
pop
jmp
in
cmp
add
std
cmp
in
add
dec
push
movsl
jmp
ret
jo
pop
mov
sub
sbbl
test
orb
mov
ljmp
xor
loopne
and
shrl
jbe
cmp
dec
inc
mov
aas
mov
mov
push
in
rcr
push
int
inc
and
pop
xchg
or
push
shll
into
sbb
mov
ds
dec
je
movsl
or
in
add
dec
jb
mov
pusha
jp
push
flds
dec
xchg
mov
jbe
pop
repz
or
push
test
lock
sbb
push
lahf
popf
pop
cmp
push
insb
mov
sbb
add
icebp
and
adc
in
pop
jne
loopne
fld1
jecxz
xchg
lea
xorb
imul
sub
insb
or
imul
data16
out
movsl
sub
xor
insl
push
jo
push
adc
popf
mov
adc
jecxz
clc
push
loope
mov
test
jl
push
sub
test
aaa
lock
jne
aaa
or
sahf
xor
mov
mov
inc
nop
hlt
pop
nop
movl
test
push
les
inc
lret
scas
inc
mov
push
inc
or
and
xchg
jbe
cmp
inc
inc
or
push
ret
sbbl
clc
icebp
mov
outsl
rorl
out
scas
jo
mov
jp
out
test
pop
push
add
cmp
fists
outsb
gs
jge
lret
pop
push
fidivs
mov
lcall
loope
pop
push
fisubrs
or
call
push
in
jne
fs
arpl
dec
pop
out
mov
fisubrs
test
out
mov
rcrl
out
xchg
or
mov
lret
mov
mov
lcall
push
in
jl
inc
sub
in
arpl
and
lods
outsl
pop
mov
mov
and
stos
or
push
mov
push
shl
dec
dec
test
arpl
push
loopne
shl
adc
icebp
fwait
bnd
mov
dec
mov
call
jno
sub
push
push
dec
mov
xchg
and
sbb
aam
pop
jmp
adc
leave
or
ds
in
in
stc
bound
loopne
sbb
adc
je
fmull
or
stos
fidivl
xchg
scas
clc
jg
push
shlb
jmp
rclb
pop
pusha
out
es
jae
jo
ja
mov
imul
stos
inc
es
mov
cmpsl
idivl
subb
cli
mov
pop
jle
fadd
int
popf
pop
jg
xchg
jae
dec
xchg
inc
dec
sub
jo
jo
push
adc
or
test
inc
adc
mov
outsl
lfs
mov
stos
jno
std
jo
pop
aam
aas
jno
into
popl
sti
xorl
xchg
popf
push
jg
xor
in
push
punpckhwd
mov
jns
idivb
ffree
imul
test
jge
ljmp
push
es
hlt
pop
out
fcomp
inc
dec
cmp
lock
scas
into
cvtpi2ps
pop
and
lds
pusha
pop
jge
mov
imul
not
rol
mov
icebp
xor
mov
push
mov
imul
movl
and
arpl
jmp
pusha
or
sbb
test
aaa
movsb
fadds
out
push
fwait
scas
add
add
mov
imul
jecxz
loop
sbbb
pop
into
data16
das
bound
ds
lods
lock
mov
repz
call
bound
lock
jbe
fcompl
aas
inc
xor
scas
push
mov
cmp
jns
ds
dec
or
mov
std
movsl
cmp
pop
movsb
cmpsl
stos
dec
mov
popa
sti
stos
push
cmp
mov
int
pop
sub
sub
jae
in
and
cmpsb
out
clc
push
pusha
hlt
or
inc
or
mov
mov
sub
pop
or
sub
bnd
pop
jne,pt
arpl
dec
or
es
loope
xor
or
hlt
push
inc
xchg
sub
orl
fsubrl
and
push
mov
cmc
bound
daa
stc
cmpsl
or
xor
into
arpl
and
or
dec
push
cmp
pop
out
cwtl
inc
jmp
push
in
or
in
mov
and
daa
mov
or
jno
test
loop
lcall
mov
repnz
shrb
sbb
test
das
mov
cmp
jns
clc
pushf
dec
mov
in
sub
lret
pop
aam
xor
mov
jecxz
dec
mov
jno
xchg
push
test
add
in
andl
daa
push
cmp
pop
cli
push
sbb
js
add
imul
inc
jno
xor
mov
dec
ss
sti
and
imulb
push
inc
int
mov
ljmp
pop
ret
aad
pop
xor
int3
adc
cli
fnstenv
pop
addr16
lret
push
mov
cld
test
test
sbb
add
xor
mov
dec
outsl
dec
insl
pop
cltd
leave
add
add
stos
out
out
sbb
cmpsb
mov
lea
cli
dec
iret
sbb
into
ljmp
sti
in
mov
mov
mov
pop
xor
in
imul
xchg
sbb
mov
add
sub
test
mov
push
push
xlat
test
jns
sbb
jnp
imul
subl
pop
jbe
repz
loop
xor
or
pop
adc
andb
mov
imul
cld
rclb
xchg
push
mov
adc
mov
fldenv
and
sbb
add
mov
outsb
push
mov
pop
cli
jp
inc
ljmp
sbb
pop
sub
scas
call
add
xor
iret
mov
bound
sbb
fistpl
mov
mov
hlt
stos
cmp
pop
push
mov
outsl
sti
ret
mov
jb
aaa
out
jne
fs
sbb
xchg
pop
incb
pop
xchg
insl
fbld
mov
stos
push
push
loop
adc
adc
lods
test
xchg
jns
jg
rcr
fstps
testl
push
ja
mov
mov
sbbl
mov
insl
mov
lahf
inc
mov
mov
leave
shl
fs
xchg
or
test
cmp
aas
add
inc
mov
in
and
cli
or
push
data16
mov
out
mov
sti
outsl
repz
sub
dec
int
enter
negb
xchg
mov
jecxz
test
xchg
fsubrl
fadds
push
jb
bound
out
xor
fmul
in
negb
add
mov
lea
fwait
rol
int3
popa
or
dec
fnstcw
mov
cs
jbe
pop
gs
mov
mov
add
xor
repz
incb
push
cmpsb
or
push
nop
fimull
das
mov
sbb
push
ffreep
inc
stos
cltd
sub
cmpb
lret
shlb
xchg
cmpsl
movsb
mov
dec
cmp
cwtl
test
out
rolb
jns
mov
pop
mov
cmp
or
cltd
cmp
sub
lret
xchg
jecxz
frstor
jne
aas
cmpsl
scas
lds
scas
in
push
es
and
aad
mov
jg
pop
sub
ficomps
pop
sahf
mov
xor
adc
jp
outsl
push
adc
movsl
imul
in
fnstcw
pop
jno
dec
sbb
nop
adc
mov
jnp
and
iret
ror
mov
outsl
les
mov
stos
mov
lods
pop
or
inc
hlt
dec
in
mov
push
fsub
mov
jae
mov
in
pop
scas
lcall
les
loop
lock
pop
rcll
sahf
fdivrs
mov
inc
int
lods
fsts
mov
daa
lods
mov
inc
cmpsb
imul
insb
mov
cmp
popf
push
dec
call
mov
inc
sub
sbb
fsubs
scas
hlt
nop
fists
movsb
and
jl
mov
push
cltd
lock
daa
cltd
cmp
ljmp
movsl
lahf
sti
stos
decb
cmp
ss
or
test
push
popa
xchg
in
push
pop
jnp
imul
jle
mov
push
or
rorb
xor
inc
int3
dec
popa
loop
shr
cmp
mov
inc
adc
aas
out
pop
mov
sbb
frstor
cltd
lds
dec
enter
mov
das
lods
dec
xor
nop
xlat
add
push
movsl
stos
repz
pop
push
xchg
stos
dec
dec
out
mov
js
dec
insl
movsb
int
testb
cmp
mov
dec
iret
mov
xchg
cmovno
push
arpl
mov
and
iret
mov
lds
jae
insb
mov
xor
lods
cld
test
test
fistl
fdivrp
fistps
clc
shll
jo
mov
push
rorl
movsb
add
pop
test
cwtl
jo
dec
das
lods
arpl
cmpsl
cmp
aas
int
mov
xchg
xor
jecxz
pop
mov
sub
sub
dec
jbe
mov
or
adc
repz
xchg
xlat
xchg
addr16
push
jp
and
adc
sub
push
cmp
push
loope
xchg
dec
repnz
test
jmp
sbb
jl
xchg
push
lods
push
insb
cmp
neg
xchg
pop
insb
aaa
mov
cs
xchg
add
lock
jae
pop
inc
sbb
rol
jmp
gs
sti
cwtl
pop
mov
mov
imul
es
inc
in
fcmovnu
pop
add
push
test
pusha
add
roll
xchg
cmp
imul
mov
in
mov
cmp
mov
xchg
lea
mov
jnp
shrb
or
repnz
cmpsb
in
fmull
dec
push
xchg
xchg
test
ficoml
test
add
insl
pop
inc
and
mov
je
pop
pushf
xchg
lea
test
xor
inc
xchg
push
cmp
mov
add
adc
cmpsl
ljmp
dec
sbb
jne
xchg
mov
xchg
test
lcall
shll
mov
cmp
and
mov
cmpsl
fisubrs
adc
xchg
mov
fldt
adc
add
adc
lret
paddsb
push
andb
ljmp
ret
lahf
jle
mov
xchg
cltd
aad
dec
jecxz
adc
inc
and
cmp
push
mov
cmp
mulb
adc
outsb
dec
jae
je
xor
push
pop
daa
popf
movsb
in
push
xor
std
cmp
dec
popa
jp
dec
add
xor
inc
or
loop
jns
dec
test
push
test
jge
jmp
jecxz
scas
pop
fsubl
cmp
sbb
das
mov
dec
pop
lods
repnz
dec
lds
push
xchg
int
test
sbb
xor
mov
xchg
adc
add
cld
ret
mov
movsb
es
fmul
mov
insl
xchg
mov
jns
jle
lock
add
leave
push
xchg
stc
ss
ficompl
pushf
outsb
stos
mov
sbb
jne
xor
fwait
and
mov
mov
ljmp
rcl
lods
mov
xor
fldl
pop
loopne
pop
push
or
shrb
mov
addr16
ret
mov
sub
xor
rcrb
mov
scas
cmpsb
mov
std
jp
cmp
hlt
adc
stos
mov
xchg
rcll
pop
inc
xor
icebp
pop
ljmp
adc
sbb
sbb
icebp
push
mov
inc
inc
lcall
sbb
mov
jae
mov
fnstcw
mov
mov
int
fisubs
arpl
iret
xchg
cltd
pop
cwtl
fwait
std
pop
out
jo
inc
and
sub
or
sub
inc
loopne
imul
iret
insb
mov
movsl
pop
mov
add
jnp
xlat
jmp
bound
cli
and
das
xchg
das
sahf
and
outsb
dec
pop
pop
out
int3
mov
pop
jnp
int3
cltd
and
mov
ja
cmp
repnz
ds
pop
je
inc
insb
loope
clc
lds
out
in
lds
xchg
mov
xchg
or
inc
loopne
movsl
je
loop
mov
xor
mov
mov
mov
or
sbb
ljmp
pop
test
lock
cmp
mov
xchg
push
out
jmp
sub
sti
sbb
inc
inc
outsl
nop
das
in
mov
push
mov
pop
movsl
jp
inc
or
gs
les
push
cmpsb
pop
cli
scas
mov
pop
mov
mov
dec
cltd
aam
push
jge
mov
jge
lcall
bound
inc
das
movsb
int
loopne
rorb
adcb
aas
sbb
repnz
adc
mov
mov
or
adc
lea
inc
ret
mov
add
sbb
andl
sahf
jno
and
iret
xor
pop
leave
push
pop
in
rclb
push
scas
inc
adc
mov
aaa
movsb
xlat
jecxz
mov
stc
mov
ror
stc
sarl
mov
xor
daa
scas
cmp
sti
jl
lds
aas
push
sbb
and
data16
ret
sub
pusha
mov
mov
dec
loopne
movsl
int
xor
testl
cwtl
imul
lret
dec
mov
daa
arpl
iret
jbe
and
mov
inc
stos
push
out
sbb
and
lahf
fs
mov
push
scas
pop
loopne
inc
aaa
stos
cmc
insl
popf
or
jae
or
jmp
in
mov
cli
sub
add
dec
std
mov
imul
mov
xchg
push
mov
sbb
addr16
xor
ja
out
or
bound
cmpsl
je
cmp
shlb
or
outsl
scas
and
bnd
or
daa
ja
cmc
lea
push
pop
insb
loope
mov
xor
or
mov
les
mov
sbb
cmc
movsb
xchg
dec
and
clc
rcl
aas
pop
jg
dec
xchg
mov
pop
out
add
cltd
lret
out
je
dec
fbstp
inc
or
push
ret
push
fisttpl
cmp
push
or
cmpsl
jns
jecxz
xchg
xchg
nop
push
in
push
or
ds
shll
js
lea
stos
shl
fcomps
xchg
mov
repnz
outsb
push
jle
xorl
imull
sbb
mov
pushf
fsubr
and
addr16
fisttps
flds
adc
shrb
scas
ret
movsl
pop
lods
fs
and
pop
sbb
arpl
inc
inc
pop
mov
cmp
pop
cwtl
nop
mov
outsl
and
pop
mov
inc
cmpsl
jne
mov
mov
std
call
pop
sahf
pop
fstpl
inc
sbb
fiaddl
test
push
push
jb
repnz
push
xchg
out
jmp
sbb
mov
loop
aas
mov
xchg
sbb
lcall
sbb
or
ret
insl
outsb
out
adcb
int3
jb
enter
cmpsl
xor
lock
inc
push
jns
pop
xchg
lods
addr16
ss
addr16
cmp
pop
daa
lods
fmul
pop
mov
cwtl
push
fsubrs
mov
hlt
jns
lds
lret
jae
jbe
enter
lds
adcl
push
imul
mov
movd
xchg
xchg
push
cmp
shl
test
stc
loopne
mov
mov
jmp
cmc
iret
ret
adc
insb
mov
call
out
mov
mov
xchg
jne
lret
adc
std
stos
or
sub
in
ret
adc
call
mov
inc
and
pop
bound
jne
and
stos
dec
test
pop
ja
or
lods
loope
xlat
mov
mov
mov
sbb
test
mov
test
test
ret
dec
push
shrl
pusha
inc
push
idiv
les
mov
scas
data16
jle
xchg
in
in
add
repz
and
inc
int
or
test
fnstenv
add
cld
fidivrl
cmpsl
sbb
enter
mov
mov
cli
out
les
std
aaa
rcll
fisubs
add
sbb
bound
mov
in
push
lahf
and
add
stos
and
cwtl
push
hlt
pop
imul
mov
imul
popf
shrb
cmp
sbb
cmpsl
sub
jbe
outsl
inc
in
sbb
xchg
test
pop
enter
or
adc
push
pop
cli
dec
cmp
xor
xlat
nop
sti
test
enter
lahf
mov
lds
js
test
movsb
cmp
adc
push
add
andb
enter
loop
fmull
mov
jecxz
shlb
adc
scas
xchg
insb
imul
shrb
or
xor
jne
add
pushf
push
push
lea
sub
pop
lods
xchg
cmp
cli
add
dec
rcrl
out
xchg
addr16
fisubrs
adc
cwtl
and
repnz
xchg
cmp
dec
mov
add
and
fiaddl
or
cmpsl
das
lahf
js
mov
adc
es
sbb
mov
icebp
push
jecxz
gs
xor
pop
adc
adc
mov
cs
cmp
and
test
sbb
dec
mov
das
xor
jmp
xor
mov
pop
mov
pusha
fildll
adc
add
js
sti
xor
inc
test
movb
scas
sti
jae
xchg
das
movsl
add
or
mov
lds
mov
aam
or
jp
cmp
inc
in
subl
mov
cmp
push
pop
add
adc
dec
movsl
js
negb
or
and
dec
xchg
jmp
and
bound
pop
in
add
shlb
xchg
and
push
cmpsb
loop
mov
cmc
popa
pop
mov
in
ljmp
jl
stos
xchg
or
bound
or
pop
rolb
add
das
repnz
jno
cmp
mov
test
gs
jmp
add
xchg
inc
mov
mov
inc
gs
add
repnz
pop
push
xchg
stc
mov
rcl
cli
pop
test
movsl
mov
adc
ss
cltd
std
mov
mov
in
or
out
pop
xchg
xlat
sbb
inc
xchg
icebp
je
outsl
xor
sbb
mov
add
jnp
dec
cmp
mov
fisttps
clc
adc
mov
adc
mov
add
dec
push
sub
clc
lds
inc
pop
add
dec
ja
jo
and
pop
xchg
jnp,pt
fsubr
dec
and
cmpsl
into
adc
cmpb
movsl
addr16
cltd
jp
pop
fnsave
bound
movsb
aaa
out
push
dec
or
or
sub
dec
cltd
fsubl
lods
pop
mov
dec
aas
jne
scas
fs
sbb
testb
loope
mov
and
notl
sahf
jo
mov
loope
inc
xor
push
fisubs
test
imul
pop
rcrb
mov
scas
movsb
cmpsl
ljmp
insb
pop
push
and
pushf
subl
in
idivl
or
icebp
cmp
mov
add
in
outsb
inc
and
xchg
adc
stos
inc
lahf
adc
cmpsl
cwtl
xchg
push
mov
aaa
dec
jle
push
xchg
jbe
push
adc
push
cmpsb
ss
jo
popa
rolb
sahf
lret
inc
stos
push
out
push
add
repz
jle
lahf
int
std
pop
pop
push
or
lahf
adc
push
stc
mov
inc
loopne
cmpl
inc
jbe
lcall
test
clc
gs
pop
pop
add
adc
fcoml
add
cmp
movsl
test
mov
cmp
sub
jns
adc
out
dec
sar
jbe
jecxz
jns
loop
pop
inc
test
jae
in
jmp
insl
movsb
jns
test
dec
mov
xor
lds
or
inc
xor
mov
leave
xor
out
ss
icebp
sbbl
pop
je,pt
and
mov
push
xor
pop
mov
inc
fidivrs
add
aaa
scas
arpl
fs
xor
and
aam
les
hlt
cmp
sub
movsb
imul
test
xor
and
aam
les
hlt
cmp
sub
movsb
imul
test
xor
and
aad
les
hlt
cmp
sub
movsb
imul
test
mov
movsb
jmp
pop
cmp
pop
jecxz
or
dec
xchg
xchg
fildl
inc
shr
loope
lahf
mov
dec
scas
pop
or
jp
or
inc
sub
popa
lret
xchg
fildl
mov
fwait
shrl
pop
add
jnp
lret
xor
inc
sub
popa
lret
xchg
fildl
mov
fwait
shrl
js
pop
push
jnp
or
je
pop
adc
push
xchg
fnstsw
les
adc
mov
xchg
xchg
std
loop
mov
xor
mov
movsl
adcl
sub
rcrl
mov
fdivrp
xchg
into
test
inc
sbb
jl
mov
fwait
adc
data16
and
verw
mov
jge
cld
cmp
andl
add
in
fdivrp
xchg
notl
movsb
hlt
inc
pop
mov
xor
cmp
dec
add
rcrb
sub
or
and
in
jnp
cmp
sub
jo
dec
sahf
imul
adc
ficomps
xchg
adc
mov
sub
rcrl
loope
adc
imul
and
push
sbb
jno
daa
mov
xchg
loopne
xchg
jmp
xchg
dec
popa
sbb
add
and
jge
scas
std
mov
ret
fiadds
je
jae
push
jnp
or
xor
test
xchg
fld
jecxz
shrl
pop
add
jnp
or
inc
sub
popa
lret
xchg
fildl
mov
fwait
shrl
pop
add
jnp
or
inc
sub
popa
lret
xchg
test
jne
cltd
inc
inc
cmpsb
dec
add
push
xor
sti
lret
adc
fiaddl
popf
pop
add
and
roll
fwait
nop
call
repz
mov
sarl
ret
dec
js
inc
pop
pop
xor
push
push
xchg
fcmovnbe
ljmp
lods
dec
mov
dec
pop
shlb
mov
jge
push
pop
push
sbbl
mov
int3
sti
ror
shll
nop
incb
test
jne
stc
xchg
push
and
and
push
and
inc
in
arpl
int
jge
fldt
iret
fwait
cltd
dec
lahf
leave
out
jo
mov
nop
jne
lret
sbb
push
pop
imul
inc
xchg
mov
cmovae
adcb
mov
imul
cli
sub
cltd
jmp
jnp
movsl
sbb
into
mov
int
mov
sbb
fiadds
mov
jmp
dec
mov
leave
pushf
aad
mov
jne
test
cmpsb
xchg
jne
dec
stos
mov
xchg
pop
or
sub
dec
aad
push
mov
setp
mov
addr16
and
sub
js
add
test
pop
or
sbb
fpatan
pop
dec
pop
sbb
xchg
sub
pop
aas
fwait
xor
adc
out
or
mov
pop
and
testl
sti
push
mov
lock
inc
bound
xchg
jo
imul
push
inc
adc
xchg
or
fcoml
aad
xlat
adcl
mov
xchg
testl
mov
ds
in
sbb
cmp
mov
cmp
fs
cltd
add
jge
lahf
inc
or
and
ja
xor
pop
sbb
jle
pusha
aad
int
movsb
psrld
xchg
jb
lods
mov
sub
cmp
shll
shrb
aas
fcoml
xor
push
cmpsl
loop
icebp
mov
lock
fs
mov
and
jnp
sub
rolb
in
pushf
and
mov
in
mov
inc
pop
sub
rcl
out
sbb
loopne
adc
lahf
cwtl
mov
push
mov
cmc
mov
jl
stc
aam
fwait
add
and
sbb
stc
lods
fnstsw
pop
xor
cmp
and
test
cmp
dec
sbb
enter
push
shl
push
mov
mov
fsubp
mov
mov
addl
cmpb
adc
inc
mov
cmp
jmp
dec
pop
dec
add
xchg
pop
sbb
and
cmpsl
mov
out
jne
test
add
push
ljmp
into
dec
pop
test
xlat
lods
fcoml
and
xor
cli
adc
inc
mov
lods
inc
lahf
mov
int
adc
jbe
pop
adc
jo
stc
pop
repnz
or
lcall
mov
mov
js
out
es
decl
or
insb
loopne
mov
cwtl
push
scas
mov
daa
and
xor
out
sbb
jae
mov
push
incl
xchg
mov
popf
aaa
dec
mov
jae
loope
ss
not
jns
cwtl
xor
gs
sbb
outsl
std
cpuid
in
scas
and
mov
pop
add
and
add
xchg
or
lret
cmp
repz
lea
sub
and
divl
mov
mov
inc
jno
xor
fsubs
pop
std
inc
shrl
sub
in
shll
notb
jmp
sub
sbb
mov
in
outsl
push
mov
pop
mov
jle
loope
popa
push
and
mov
mov
mov
sub
out
lock
pop
jecxz
aad
mov
pop
mulb
cmpl
jg
adc
mov
sbb
mov
fisttpll
xchg
ja
add
pop
pop
imul
sub
mov
mov
arpl
and
push
test
and
or
sub
divb
sub
mov
xor
ljmp
add
je
push
push
sbb
xor
jmp
repz
shl
xor
mov
imul
mov
dec
bound
dec
dec
mov
les
imul
sarl
incl
ret
inc
inc
lret
fcoms
cwtl
push
bnd
lahf
scas
scas
clc
fcmovne
movsl
cld
movsl
or
fwait
pushf
fsubrl
enter
jle
cmp
push
gs
mov
sahf
leave
ja
pop
cmp
mov
movsl
ja
inc
mov
cli
lcall
daa
xchg
repz
xor
ret
xchg
add
xchg
imul
pop
xlat
or
aas
mov
add
lret
push
loopne
xor
sahf
mov
mov
sub
adc
jbe
inc
loope
add
jne
movsl
xlat
mov
adc
test
pop
cmp
sub
and
lods
loopne
gs
lock
adc
jbe
cmp
lahf
xchg
push
mov
xlat
mulb
and
pop
pop
rcrl
jb
mov
sti
cmc
je
das
or
not
sub
cld
js
push
cmp
fincstp
adc
call
mov
push
add
and
mov
je
loop
xor
pop
lret
sub
outsl
pop
cmp
aaa
cmpsb
mov
rcrb
in
les
out
ja
jb
push
cvtpi2ps
jnp
loopne
mov
lret
xor
and
movsb
xchg
xchg
mov
and
push
sbb
pop
idivl
mov
aad
inc
adc
mov
push
mov
pop
xchg
ljmp
xchg
out
adc
pop
jne
call
adc
test
lods
ja
rcrb
rorb
pop
into
pop
bound
mov
rcrl
loope
in
out
sub
aas
jns
lret
pop
push
or
sarl
in
push
imul
aad
les
lret
aad
push
cmpl
insb
cmpsb
rol
add
shr
lret
into
xchg
pop
adc
push
test
mov
mov
test
dec
jecxz
lea
repz
imulb
test
xchg
test
pop
push
cli
into
insb
jne
inc
nop
inc
cmp
adc
fisubs
call
jae
lret
or
mov
mov
push
aaa
push
addr16
sbb
inc
test
ds
hlt
push
inc
adc
mov
cmp
mov
lods
into
add
mov
jno
xor
xchg
mov
jbe
jo
popa
pop
push
ljmp
cmc
push
sbb
push
lock
sti
cmp
and
xchg
ds
mov
adc
ss
pop
clc
call
mov
mov
dec
imul
jle
jnp
insl
lods
mov
and
ror
andl
lahf
ljmp
iret
lret
inc
test
push
lods
loope
scas
test
push
nop
jae
xchg
mov
xchg
jl
push
cwtl
iret
sub
pop
out
jp
aas
sub
pop
out
out
sbb
jge
lret
inc
push
sti
sub
sbb
dec
shrb
pop
or
loop
cmp
out
insb
jl
jp
das
arpl
ds
jne
jo
call
clc
enter
stc
jae
test
aad
sub
stc
dec
lods
repz
int
fs
xor
xchg
mov
out
test
add
fcoms
bound
int
xor
sub
daa
pop
sbb
shrb
sahf
insb
fdivrs
and
lret
popa
ss
sarl
inc
lcall
sbb
xor
lahf
jg
imul
lret
xor
adc
pop
cwtl
es
push
cmp
push
sub
push
xorb
mov
aas
fsubs
in
sub
jo
sti
das
jp
push
jecxz
test
mov
in
inc
xlat
push
lcall
sbb
testb
jp
xchg
xor
xor
inc
notl
mov
cltd
and
mov
mov
pop
fisubrl
add
cmp
lahf
push
mov
push
stc
or
das
cmp
add
test
dec
mov
pop
popa
mov
int
pusha
pop
icebp
add
xchg
lods
lret
loope
mov
cmp
frstor
or
and
repnz
lods
ss
nop
or
and
inc
aam
pop
push
mov
push
int
pop
adc
cld
mov
lods
in
or
neg
popl
push
movsb
insb
dec
push
and
ds
into
xchg
pop
push
jae
jl
jbe
push
das
xorl
jecxz
cmp
push
mov
leave
adc
fs
aam
jp
ljmp
mov
push
sbb
sub
ja
sbb
sub
mov
or
and
add
jb
mov
imul
clc
paddsb
xor
iret
andl
aad
rorb
jns
inc
es
xchg
pop
sbb
mov
or
jae
out
xor
shll
and
sub
push
or
xor
repz
nop
mov
pop
fldcw
mov
les
lcall
out
jae
cld
lahf
stos
movsl
or
mov
dec
out
mov
div
and
icebp
push
xor
test
push
movsb
fbld
or
mov
push
push
mov
jge
cmp
ja
in
and
repnz
repz
push
negl
push
inc
iret
lock
cwtl
outsb
aas
ret
cmc
scas
push
and
fmul
movsb
dec
fdivl
sub
gs
inc
sub
push
pop
mov
xchg
dec
cmp
outsl
fs
das
add
sarb
lds
inc
or
push
dec
jne
dec
dec
adc
jns
adc
and
mov
and
fistps
out
or
xor
shrb
and
andl
or
out
rcll
enter
xchg
testl
or
hlt
push
popf
lock
adc
inc
imul
dec
std
dec
test
imull
arpl
cmp
bts
mov
test
les
jle
loop
cmp
repz
mov
fstpl
int3
mov
aaa
fnsave
test
dec
jno
testl
pushf
or
dec
mov
fbld
mov
sub
pop
inc
movsl
cs
cmp
negl
xchg
mov
pop
xchg
test
icebp
rcrb
pop
test
mov
mov
cvtdq2ps
bnd
aam
fsubr
push
add
dec
ret
cmp
mov
cmp
or
ljmp
xchg
sub
imul
dec
xchg
push
push
push
mov
sbb
pop
mov
aaa
xlat
jge
and
mov
mov
adc
mov
imul
jb
rcrl
popa
push
and
cmp
adc
push
xor
xchg
jns
leave
pusha
jge
jne
or
dec
cmc
mov
cmpxchg
jnp
lock
fdivs
xchg
jb
shr
mov
xchg
addr16
xchg
fnstcw
adc
testl
movsb
jge
or
inc
jno
dec
add
icebp
or
push
mov
das
and
rcrb
or
lds
xchg
mov
fs
mov
loopne
in
mov
scas
shlb
fisubl
and
mov
inc
int3
cmp
jns
cld
pop
loope
cmp
loope
mov
mov
out
xchg
inc
sub
inc
sbb
jge
sub
popa
mov
mov
mov
in
loop
sub
and
xchg
loope
cmpsb
jmp
cmp
cmp
rcr
gs
inc
inc
das
inc
sbb
rolb
xchg
rcrl
adc
addb
std
sbb
aas
add
mov
add
stc
xor
mov
adc
ficompl
add
xchg
aas
fildll
fcom
dec
or
call
stc
xlat
pop
xchg
std
jg
mov
roll
call
add
mov
dec
scas
pop
mov
arpl
and
dec
jae
into
sbb
addb
push
jge
aas
fisttps
fxch
lock
or
lods
fs
sub
lcall
lock
leave
ret
cmpsl
rcrl
mov
movsl
pop
sub
mov
inc
or
mov
enter
movsb
jmp
hlt
jg
pushf
pusha
dec
out
dec
loopne
xor
dec
mov
loop
jp
lock
pop
jmp
cmpsl
mov
sbbb
jecxz
pop
daa
lret
jg
mov
cltd
cmc
jp
sub
hlt
in
mov
jb
fistps
mov
or
dec
mov
fimuls
in
mov
push
mov
int
ret
pop
push
mov
add
push
fwait
mov
cmpsl
outsl
xor
xor
xor
out
xchg
fbstp
cmc
xor
pop
icebp
ja
scas
fldcw
sbb
mov
inc
xor
sbb
fmul
mov
mov
pushf
cmp
pop
mov
test
fdivrs
dec
test
push
dec
clc
inc
fcomps
mov
xchg
imul
xor
adc
loopne
pusha
int3
int3
inc
sub
jo
cmp
dec
pop
out
inc
or
xchg
xor
xchg
push
xor
movsb
mov
mov
adc
scas
lret
cwtl
cmp
mov
and
sti
bnd
pop
lahf
cmp
into
dec
jecxz
es
rorl
cmpb
rorb
jo
sub
xchg
pop
pop
sub
das
daa
mov
imul
push
jp
mov
and
or
movsb
cmpsb
sub
pop
adc
push
lds
pop
insl
xchg
mov
mov
das
rclb
lahf
sti
pop
sahf
shrb
dec
jne
jbe
pop
cmp
ja
mov
sub
lahf
jb
enter
aaa
test
out
push
aaa
movsb
or
movsb
icebp
mov
sub
sub
xlat
or
push
arpl
xor
sbb
into
jl
out
push
loop
adc
into
dec
lret
int3
sub
dec
or
mov
xchg
dec
add
push
inc
jno
clc
idiv
mov
mov
sub
fcoml
jmp
rol
daa
mov
xchg
pop
and
repz
enter
test
pop
insb
fistpl
aad
cmp
mov
cli
push
and
pop
xor
hlt
mov
sahf
and
or
push
psrlw
lods
pushf
add
in
pop
aaa
xchg
inc
out
lods
jg
pop
lret
pop
dec
cmp
aaa
xor
mov
push
dec
push
sub
cmp
insb
mov
cmp
sub
pusha
pop
out
loopne
imul
jl
in
ret
sbb
push
dec
ds
and
mov
fs
out
xchg
inc
lea
cwtl
test
mov
dec
out
xor
mov
xor
dec
jo
cmp
pop
loop
adc
jmp
movsl
movsl
sbb
inc
shll
and
pop
jae
cmpsb
das
hlt
loope
and
mov
adc
mov
inc
xor
push
loop
cmc
xor
inc
mov
data16
xlat
xor
xchg
sub
cmp
and
cmc
cmp
test
cld
lds
clc
mov
pop
iret
test
adc
xor
mov
and
scas
mov
scas
inc
movsl
lock
dec
js
loop
ljmp
subl
lret
jp
in
mov
pop
loopne
outsl
int
loop
stos
or
push
pop
xor
jl
dec
cwtl
cmpsb
add
xorl
lock
cmp
adc
pop
sbb
clc
inc
sbb
daa
pusha
push
lahf
and
inc
sub
mov
cmp
dec
sub
add
pop
roll
mov
outsl
negb
jb
inc
add
mov
aas
pop
push
fwait
sti
cmp
jmp
inc
push
mov
xchg
in
and
imul
arpl
mov
jbe
dec
mov
jbe
lea
pop
mov
mov
xor
pop
add
jb
cwtl
f2xm1
mov
mov
jmp
inc
mov
out
out
sub
inc
sub
les
lea
sbb
pop
mov
mov
andl
cwtl
jbe
popl
xchg
adcb
adc
cmp
xor
push
jmp
str
out
int
fisttpl
in
movsb
sub
fcomps
cmp
adc
movsl
leave
sarb
movb
in
cli
mull
imul
dec
movsb
sbb
cmp
cmp
aas
cmp
pop
and
or
xor
mov
stos
in
push
mov
sbb
add
add
inc
add
jo
pop
sbb
mov
fsubrl
jae
pop
dec
sbb
mov
cmpsb
in
mov
dec
mov
pop
mov
clc
sbb
jno
scas
ss
cmp
xchg
fs
fwait
cmp
jmp
mov
into
mov
ret
xchg
cmpsl
or
sti
jp
or
and
popa
mov
enter
in
adc
or
movb
push
ret
inc
jle
je
xor
mov
in
out
inc
mov
pop
sti
xlat
sub
out
leave
pop
push
jecxz
mov
jmp
xchg
divb
add
jecxz
lret
ret
mov
dec
pop
cltd
adc
jb
sub
sbb
outsl
inc
xchg
adc
stc
jl
imul
dec
test
mov
or
orl
cmp
mov
lods
inc
lods
iret
lcall
mov
mov
hlt
pushf
adc
mov
cmp
mov
cli
je
idivb
push
sub
scas
mov
sub
inc
push
or
vrcpps
jecxz
pop
cmp
jl
jle
push
imull
mov
stos
mov
hlt
xchg
mov
repnz
xor
cmpsl
jo
mov
pop
inc
pop
add
rcrb
mov
scas
push
movsl
out
add
clc
scas
scas
jmp
js
jo
rcll
lods
in
test
dec
jbe
cmp
fwait
sbb
loop
push
pop
push
xor
sbb
sbb
movsb
mov
push
jg
lcall
xchg
or
stos
pop
cwtl
stos
repz
js
adc
movsl
sbb
test
jb,pn
repnz
sub
push
bound
xchg
inc
out
sahf
aad
xor
jnp
jecxz
scas
cmp
rcrb
adc
or
adc
and
in
popa
sbb
xor
pop
mov
mov
cltd
jmp
push
ja
fstpt
dec
in
add
sub
lret
inc
std
hlt
sahf
mov
movsb
mov
decb
cmp
mov
sbb
cmpsb
lea
inc
jne
cmpsl
sbb
pop
fsubs
lea
jge
test
ret
xchg
inc
imul
jmp
add
mov
ret
rcr
int3
andl
call
inc
out
fsubs
aaa
lods
sub
mov
lock
dec
loop
xor
mov
xlat
lds
cli
and
pop
inc
and
loope
outsb
and
pushf
fwait
pushf
in
inc
jge
cmc
xor
dec
scas
cmpsl
adc
mov
push
and
sub
pop
mov
cmp
xorb
repz
scas
and
and
pop
jmp
jno
fisttpll
pop
insl
inc
jl
and
daa
fadds
sub
loope
movsw
dec
adc
push
cmp
movsb
mov
mov
xchg
sub
scas
jecxz
dec
add
cmpb
mov
dec
adcl
in
es
push
lea
testl
pushf
mov
jl
sti
push
fimuls
sti
aaa
notl
inc
push
nop
or
adc
and
aad
mov
adc
fnsave
cs
jmp
and
push
das
mov
jmp
std
pop
sbb
std
and
test
mov
and
aas
jne
mov
adc
repnz
lds
out
jecxz
negl
pop
inc
shrb
scas
orb
ss
add
jmp
ret
das
push
or
xor
push
inc
fwait
push
ljmp
mov
ret
push
addr16
add
cld
imul
cmp
mov
push
add
gs
push
push
mov
jle
adc
lods
lret
pop
sub
push
and
repz
push
arpl
mov
push
or
sub
rcrl
loope
adc
imul
and
push
sbb
jno
popa
lret
xchg
fildl
mov
fwait
shrl
pop
add
jnp
or
inc
sub
popa
lret
xchg
pop
subl
fwait
shrl
pop
add
jnp
or
inc
sub
popa
lret
xchg
fildl
mov
fwait
shrl
pop
stos
shll
push
jnp
imul
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmpsb
mov
push
daa
aas
push
int3
xlat
inc
fwait
das
jnp
addb
push
pop
or
add
add
add
add
jle
jle
int3
add
or
stos
add
js
mov
add
jno
jg
xlat
add
mov
add
add
and
add
add
add
add
add
mov
insb
add
add
add
add
mov
sub
jg
popl
inc
add
add
insb
add
add
add
mov
jbe
and
mov
adc
flds
mov
or
add
add
add
and
jl
push
add
add
add
add
scas
add
jg
or
popf
add
sbb
cmp
scas
add
add
add
add
add
add
lods
add
add
add
popl
dec
add
cltd
add
add
add
add
add
add
add
leave
add
add
add
add
add
mov
das
add
add
add
add
popl
loope
xchg
add
add
add
push
add
add
add
add
and
or
sub
jo
fwait
add
add
add
add
add
add
add
add
or
add
lods
add
add
insb
add
add
cltd
add
add
add
nop
add
add
add
or
testl
arpl
cltd
add
xchg
add
push
pop
add
add
add
add
add
movb
add
add
jns
dec
add
add
add
add
int3
add
leave
add
add
add
fiaddl
push
add
push
add
add
push
add
add
add
insb
add
add
add
add
or
cmp
movb
add
add
dec
add
dec
add
add
add
add
add
sub
nop
add
add
mov
jns
in
mov
and
add
add
or
xchg
add
add
xchg
add
add
add
add
leave
add
add
push
add
add
add
das
add
pop
add
push
add
push
add
addb
add
add
add
mov
add
sbb
mov
add
xor
sub
jg
into
add
add
add
mov
testb
add
add
add
js
add
add
add
add
add
add
add
add
add
mov
iret
add
add
add
add
and
add
insb
add
filds
into
add
add
mov
incb
xor
cwtl
add
add
add
in
mov
jns
mov
push
add
add
add
or
into
add
push
add
add
add
add
add
add
add
pop
add
add
add
sub
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
or
stos
add
add
sbb
pop
add
add
add
repz
mov
sbb
scas
inc
cltd
into
mov
pop
jno
jle
andl
inc
aas
mov
sbb
sub
adc
adc
push
cli
fwait
sub
push
aaa
cld
push
psraw
adc
enter
enter
in
aaa
push
cli
das
loopne
pop
xchg
mov
dec
push
inc
adc
pop
jmp
jg
add
push
mov
and
dec
and
lds
push
add
bound
pop
fiadds
daa
out
insb
xor
orb
jmp
cmp
adc
or
or
inc
or
bound
sahf
faddl
adc
dec
mov
cmpsl
sbb
dec
orb
sarb
mov
cmc
lcall
pop
pop
or
rclb
adc
fiaddl
sbb
inc
push
sar
xchg
jns
inc
mov
loopne
sub
sar
popf
in
ficoml
dec
xlat
inc
ss
inc
xorb
mov
mov
mov
inc
dec
mov
and
pop
xor
dec
and
aam
mov
out
or
lea
pop
mov
out
mov
push
push
jns
push
xor
jbe
jae
push
imul
std
es
pop
loopne
fists
and
sub
jecxz
aas
arpl
fimull
mov
shrb
mov
push
out
ror
cwtl
out
loope
and
inc
xchg
pop
xor
loope
test
push
jp
or
lret
sub
mov
jns
leave
in
xor
cltd
out
out
fldt
xchg
dec
outsl
push
xor
idivb
repnz
call
jo
ror
jle
sbb
cmpsl
rcrb
int
adc
lock
mov
xor
loop
mov
cs
cs
jmp
or
xor
aam
fbld
pop
and
outsl
dec
fisttps
lret
and
ljmp
insb
dec
xchg
fldt
outsb
out
mov
pop
stos
jge
sbb
lahf
mov
iret
movsb
addr16
imul
aaa
cld
adc
adc
sub
pop
push
movsb
cmp
lret
and
mov
sarb
mov
lods
mov
sbb
out
xor
pop
dec
shlb
fucomp
insb
cltd
dec
sub
dec
movsb
dec
mov
iret
or
nop
inc
sbb
mov
gs
test
fs
mov
loopne
push
scas
xchg
out
test
aas
lea
mov
sbb
loopne
fwait
clc
dec
jae
xchg
adc
loope
psrlq
xchg
ret
add
in
sbb
dec
dec
incl
stos
hlt
cmp
or
rorl
adc
cmpsb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
