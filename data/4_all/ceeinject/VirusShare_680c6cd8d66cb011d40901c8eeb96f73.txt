call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sbb
movsl
mov
mov
lds
push
sub
cmp
mov
lea
mov
aad
in
fisttpl
sub
pop
push
insl
gs
lea
popf
push
lods
aas
mov
popf
in
out
std
or
inc
pop
inc
cs
xor
dec
pop
adc
std
rcrl
inc
lret
push
data16
xor
mov
ljmp
leave
pop
cmp
adc
sar
dec
int3
rcl
pop
sbb
cli
loop
je
mov
mov
mov
cmp
in
pushf
int3
mov
sub
adc
or
and
lret
repz
test
dec
test
mov
shl
in
and
fcomi
sub
aad
lods
push
push
fdivrs
ja
jo
bound
pop
test
and
and
or
push
lds
das
xor
clc
jne
popf
push
sarb
gs
xchg
cmp
repnz
lret
inc
pop
repz
cmp
jl
rorb
popf
mov
sarl
aad
in
addr16
daa
cmp
mov
stc
test
cli
ror
nop
cwtl
mov
inc
scas
gs
sbbb
add
cmp
adc
sbb
ret
cmc
fldcw
mov
pusha
push
ja
add
cmp
divb
std
cmc
or
and
pop
push
insl
gs
lea
mov
aad
in
cmc
or
and
pop
push
insl
gs
lea
out
pop
mov
dec
or
sbb
outsl
scas
mov
mov
jae
js
gs
movsb
fwait
das
and
out
add
std
jne
add
cmp
jle
nop
lds
xor
pop
sbb
cmp
or
add
lcall
xchg
js
sbb
sbb
jno
mov
insl
xor
adc
popf
stos
insb
dec
lods
popa
sti
add
insl
and
xchg
pop
or
nop
sub
testl
or
testl
pop
shrl
shll
les
call
dec
out
bound
pop
in
jl
xchg
cltd
push
inc
cmp
adc
div
jno,pn
jle
mov
mov
cwtl
dec
sahf
and
mulb
ds
and
into
jo
ja
jp
decb
mov
test
pop
xchg
mov
adc
cmp
jmp
cmp
fxch
lds
std
loop
inc
insb
in
dec
hlt
jnp
sbb
outsl
cmpsl
jae
mov
jp
shlb
int
mov
insb
push
push
test
aad
push
add
jbe
scas
lock
adc
lods
cwtl
jns
add
add
shll
shll
stos
adc
repz
lahf
pop
pushf
jmp
cwtl
loopne
js
rcrb
jecxz
iret
mov
adc
scas
mov
mov
arpl
cmpsl
or
les
mov
imul
sbb
and
jno
or
adc
sbb
adc
or
into
sub
adc
mov
les
cmp
xor
int
push
fnclex
inc
mov
cmp
repz
adc
jg
pop
cmpsl
mov
and
xchg
loopne
repnz
adc
sub
test
cld
inc
and
cltd
mov
ss
sbb
or
and
lock
jb
stos
and
out
or
jae
mov
or
add
aam
lds
lea
fdivs
loop
cs
cmc
repnz
adc
les
cmpsl
js
dec
mov
fistl
mov
mov
fildll
mov
and
lods
dec
adc
lds
outsl
xchg
xchg
mov
aaa
mov
or
leave
mov
xchg
and
push
loope
in
cwtl
xchg
sub
inc
or
into
loopne
fcmove
sub
and
mov
lret
loop
imulb
jne
push
call
fxch
into
cmp
xor
out
shl
shlb
das
inc
sub
push
push
dec
dec
movsb
dec
pop
push
xchg
xchg
xor
cmc
stos
cmpsl
push
out
outsl
lock
pop
add
mov
daa
mov
lods
movsb
aam
dec
das
sarb
mov
test
ljmp
dec
bound
inc
or
cmc
int3
pushf
cld
lods
loopne
cmc
mov
pushf
test
inc
je
xchg
inc
inc
mov
loopne
cmp
xchg
jo
fcoms
ljmp
mov
dec
xchg
mov
mov
add
or
mov
insb
xchg
cmc
jmp
scas
icebp
in
mov
inc
jmp
fucomp
mov
ds
or
xchg
addr16
divl
int
sbb
cmpl
and
adc
repnz
popf
dec
push
enter
pop
sub
std
es
dec
xchg
popa
pop
mov
pop
lahf
sbb
push
inc
mov
cwtl
enter
in
cmc
pop
cli
dec
in
adc
mov
andb
xchg
fnstsw
lods
adcl
adc
cmpsl
sbb
sbb
push
outsl
sahf
repnz
inc
and
stc
lret
xchg
mov
sbb
fcompl
or
mov
pop
js
push
lret
outsl
and
adc
push
and
adc
filds
rol
jp
lret
lock
jecxz
xchg
movsb
or
pop
push
imul
pop
gs
lods
push
jo
mov
imul
in
aas
outsl
inc
mov
stc
jnp
data16
in
mulb
addr16
dec
push
lret
cmp
jne
ret
mov
or
push
xchg
mov
test
cmp
mov
out
hlt
pusha
cltd
sbb
out
and
ja
fcoml
pop
cld
lahf
add
sahf
push
or
or
mov
cli
std
out
sbb
leave
lcall
push
mov
loop
ficompl
je
negl
rcrb
iret
push
sbb
inc
imul
ret
pop
dec
cmp
cmpsb
sub
ds
push
fdivrl
xlat
int
xchg
mov
adcb
test
mov
sub
sbb
std
dec
call
xor
das
sbb
test
sbb
call
lock
mov
dec
imul
sbb
push
lcall
cmp
repnz
sbb
int
cmp
xor
push
jecxz
jle
push
fstsw
stos
jl
fistpl
add
pop
arpl
and
and
divb
fisubrs
loopne
and
insl
fisttpll
subb
sub
loopne
cmp
adc
add
push
mov
inc
push
movsb
add
pop
ret
into
into
subl
fs
mov
jge
jbe
xchg
test
sub
shrl
fdivp
inc
lret
fwait
cmp
scas
and
movb
dec
push
or
jge
pop
dec
cmpsl
nop
xchg
add
popf
mov
lea
insl
or
and
xchg
inc
inc
pop
jbe
inc
inc
xchg
mov
and
mov
divb
cmp
dec
ds
fdivr
imul
repz
inc
js
aam
sub
sarl
int
add
cmp
ja
and
ret
cmp
jns
hlt
icebp
push
lods
and
cmp
sbb
test
imul
adc
push
ja
sbb
jne
out
pusha
icebp
addr16
sub
and
cmp
pushf
and
notl
inc
mov
sub
mov
xchg
sub
les
clc
or
test
or
pop
or
stos
inc
cmp
jno
sub
mov
outsb
mov
popa
fsubrl
cli
xor
cmp
and
cmp
orl
xor
data16
jae
sbb
jecxz
rcl
jns
mov
sbb
inc
mov
sub
sub
adc
xor
jle
cmpsl
mov
cltd
jmp
mov
adcl
test
outsl
jp
stos
addr16
daa
fadds
mov
into
dec
and
aas
push
mov
outsb
sbb
hlt
cltd
mov
mov
sub
sub
xchg
jmp
daa
ret
mov
loope
mov
and
push
in
pop
or
loope
aas
into
cmp
fidivl
out
cmc
mov
inc
cwtl
es
out
dec
mull
adc
and
inc
xchg
xchg
or
adc
icebp
int
ss
incb
mov
or
bound
cltd
mov
lea
adc
cmp
outsb
popf
jmp
popf
enter
insb
cmp
cmp
pop
inc
jae
lods
jmp
cmp
inc
es
mov
xchg
aad
insl
sarb
mov
xorl
aaa
out
push
push
outsl
dec
xorl
outsl
mov
sbb
mov
fldenvs
rcrb
jp
adc
cmpsb
imul
jl
stos
lods
push
xor
loopne
xchg
icebp
sub
int3
pushf
movsl
mov
sbb
jle
mov
dec
push
mov
loope
xchg
adcl
insl
mov
in
pop
mov
aam
inc
mov
jb
dec
adc
xor
push
test
push
insl
mov
sbb
or
aad
add
or
enter
mov
add
pop
es
mov
pop
xchg
lock
ds
adc
in
or
add
push
sub
icebp
clc
or
popf
mov
sbb
push
lods
stos
pusha
fldl
jno
fwait
mov
add
cld
test
daa
inc
mov
icebp
add
inc
xorl
imul
out
rorb
ret
sbb
cmp
push
leave
or
push
call
lods
sahf
xchg
shll
mov
jb
addb
push
ret
sub
sbb
add
repz
stos
xchg
dec
jecxz
int3
add
js
jecxz,pt
push
push
shrl
sti
and
push
andb
jne
int3
addr16
in
mov
adc
aas
aaa
insl
jnp
in
add
push
and
jbe
int3
fldcw
and
dec
in
fs
rol
mov
or
xlat
scas
xchg
repnz
xchg
inc
movsl
lret
fistl
dec
pop
jmp
xor
jne
adc
in
loop
fldcw
insl
fidivs
out
xor
hlt
mov
ss
fnstsw
out
jo
mov
insl
push
jg
add
mov
push
xorl
push
cmp
fs
dec
mov
mov
inc
enter
aam
ljmp
js
mov
push
sbb
cmc
insl
cwtl
ljmp
dec
daa
inc
xchg
and
xchg
pop
sbb
data16
ljmp
inc
jae
cmc
imul
fwait
mov
lock
mov
cmp
outsb
fsts
xor
subb
lock
push
cmp
jge
data16
sbb
dec
xor
loopne
ljmp
ljmp
sbb
lahf
loope
iret
xor
imul
js
aaa
repz
jp
jg
mov
hlt
addr16
daa
inc
mov
pop
mov
mov
mov
out
cli
decl
ret
adc
in
loop
fdivl
dec
lahf
adc
mov
sub
stc
dec
mov
cmp
dec
bound
out
pop
into
daa
icebp
jg
out
bound
and
dec
test
jmp
loopne
sub
lcall
lcall
jb
cmc
jge
adc
or
or
sub
inc
push
jnp
sub
mov
dec
pop
cld
nop
xor
cs
inc
cld
sbb
and
movsb
into
lods
std
adc
push
cmp
fwait
jne
pop
lods
ficompl
xchg
cmpb
sarb
mov
popa
inc
int3
in
push
jge
mov
imul
icebp
movsl
and
lds
sbb
sbb
mov
fcompl
pushf
mov
jmp
fmull
add
insl
fldl
data16
mov
mov
jl
cwtl
dec
or
xor
cmc
inc
scas
jmp
inc
pcmpeqw
rcl
push
push
xchg
cmp
push
pop
int
movsb
jno
xchg
mov
push
mov
leave
xlat
mov
fnsaves
xchg
js
cli
push
jecxz
das
iret
pop
mov
fisubrs
dec
aam
test
mov
push
cmp
cmp
shll
in
test
lret
lret
push
cmp
sbb
xor
mov
xchg
fs
popa
fwait
add
mov
pop
lret
in
inc
inc
push
jp
je
xchg
in
dec
cmp
das
cmp
inc
push
je
sub
jmp
incb
in
sub
xorb
leave
jnp
mov
lret
fidivrs
mov
and
je
js
add
test
and
xchg
push
js
push
xchg
jnp
and
in
jp
dec
pop
xor
out
fucomi
lret
mov
mov
xchg
jge
xchg
scas
das
inc
mov
roll
push
push
cwtl
inc
jp
inc
cs
jne
dec
sub
sub
int3
enter
in
int3
icebp
insb
sub
clc
out
adc
cmp
cld
insb
loope
stos
movsl
dec
mov
jns
mov
cmp
mov
xchg
ss
xchg
test
xor
or
js
cmp
lods
push
fadds
or
movq
mov
cmpsl
aas
sbb
rclb
mov
sub
add
or
stos
outsb
ficoms
cmp
sbb
jecxz
rorb
data16
inc
sbb
in
fisttpll
imul
push
pop
and
xor
mov
xchg
xlat
mov
push
loopne
ljmp
xor
inc
jo
ficompl
cmpb
add
sbb
mov
and
pop
adc
jne
dec
pop
inc
inc
stos
mov
fstpt
fmull
jmp
shll
cmc
ds
pushf
leave
mov
or
insb
mov
testl
or
and
out
xor
sbb
cmp
ffreep
cmp
inc
push
pushf
sbb
xchg
jmp
ljmp
cs
mov
test
aam
xchg
iret
xchg
push
xor
dec
sbbb
fildll
insb
jnp
bound
call
in
loope
andb
mov
jmp
push
dec
popf
movsb
adc
mov
sar
repnz
pop
adc
hlt
adc
fdivrl
jg
jns
movsl
pop
dec
jle
sbb
stos
call
dec
sbb
sti
push
sahf
gs
leave
cmpsb
and
rolb
inc
loop
xlat
jle
adc
loopne
repz
jmp
vmwrite
xchg
in
pop
in
ret
push
inc
mov
cmc
loopne
js
adc
imul
add
mov
add
jmp
sub
cmp
jb
lret
data16
dec
mov
mov
push
bnd
sbb
shlb
popf
repnz
or
jo
lods
xchg
dec
int3
or
fisubl
push
clc
outsb
push
stos
outsb
mov
leave
mov
cld
sbb
or
pusha
dec
mov
sbb
xchg
outsb
cmp
dec
pop
ja
aad
cli
jl
in
jnp
pop
push
push
push
sub
mov
push
fstpt
pop
cmpsl
addr16
ljmp
sub
test
insl
inc
bound
movsl
subl
out
xchg
cmp
test
clc
mov
sbb
ljmp
imul
jb
fiadds
mov
mov
fstpl
sub
sub
jecxz
xor
xor
sub
inc
cli
mov
xchg
xchg
cmp
outsl
push
leave
popl
dec
in
jg
rorb
dec
enter
inc
stos
bound
xor
and
push
and
push
jecxz
addr16
fmul
jle
lret
inc
movsb
in
mov
outsb
sub
dec
pop
jb
adc
jecxz
mov
cld
inc
pusha
gs
inc
or
lods
cmp
les
push
pop
mov
test
daa
lea
jmp
mov
sbb
mov
fistpll
mov
cld
mov
fwait
jb
in
mov
cs
push
lret
in
inc
cwtl
cmp
push
cmpsb
jmp
sbb
bound
mov
repnz
repz
mov
adc
sbb
dec
testb
pop
sub
inc
sbb
stc
jnp
inc
mov
loopne
and
mov
test
out
xor
hlt
and
mov
adc
cmp
lds
test
es
pop
add
iret
inc
shll
xchg
push
cmp
les
push
inc
sahf
pushf
aad
mov
and
clc
mov
int3
mov
int
leave
shrb
mov
int
adc
pop
jb
or
jnp
sahf
es
lods
push
arpl
mov
push
aam
xchg
mov
mov
ljmp
jg
sub
xchg
and
pusha
sahf
dec
add
insl
mov
in
cmpl
ret
fidivrl
fldcw
mov
aam
jns
add
mov
mov
jbe
cwtl
addr16
sbb
icebp
loop
arpl
popl
iret
pop
push
xchg
mov
lcall
dec
adc
repz
ljmp
inc
cmp
fcmovne
mov
push
mov
lahf
sub
adc
arpl
testb
icebp
or
mov
fldt
add
mov
ret
push
outsl
out
fldt
in
jns
cmp
pop
adc
and
pop
nop
add
mov
in
movb
mov
sbb
mov
push
cmp
scas
jb
sbb
pushf
cmp
bound
push
push
lea
mov
adc
xor
pop
dec
jne
fisubrs
js
pop
mov
cmpsl
mov
fimuls
cmp
sub
and
aam
xor
je
enter
dec
or
or
repnz
xchg
testl
jnp
mov
scas
mov
mov
loopne
xchg
lods
repnz
cmp
push
loopne
sti
repnz
inc
push
out
or
test
insb
icebp
xor
inc
push
adc
idiv
mov
mov
fwait
mov
and
push
aas
add
fldl
test
lods
test
adc
sub
popa
js
xor
mov
push
xchg
inc
clc
aad
pop
push
jo
add
lcall
es
push
fnstsw
out
sahf
jl
xchg
jg
push
ja
jg
cmp
cltd
xchg
adc
cs
mov
mov
lods
xchg
mov
cmp
test
stos
and
inc
int3
shlb
and
test
xor
xchg
rclb
or
aaa
mov
cmpb
sahf
mov
push
imul
shr
push
or
into
xchg
xor
push
je
add
inc
mov
sub
into
int3
jl
or
sbb
dec
cs
in
push
arpl
scas
hlt
push
dec
sub
xchg
popa
cltd
push
outsl
rol
jle
psubusw
mov
or
dec
sub
sbb
or
call
out
shlb
sub
mov
aaa
mov
sub
ljmp
divb
inc
and
std
jg
pop
push
or
push
sub
out
xchg
ljmp
adc
or
jle
lods
adc
sbb
ret
jle
mov
sub
push
loop
cmp
cmpsl
enter
and
mov
pop
xchg
push
aam
gs
inc
fcmovbe
mov
test
shrb
push
fistpll
loopne
mov
clc
xchg
mov
ret
adc
pop
imul
dec
push
dec
pop
and
sub
int
pop
mov
sbb
pop
lock
addr16
stos
leave
sbb
jb
and
iret
sbb
xchg
mov
out
push
inc
pop
jae
ret
leave
cmpsl
cmpsl
pop
or
test
das
sbb
xor
push
aaa
lret
cwtl
mov
test
or
dec
pushf
cmpsl
andb
lods
inc
loop
das
pop
sbb
push
xor
arpl
outsb
mov
iret
shrl
dec
mov
outsb
xchg
xchg
xor
xchg
pop
cmp
xor
mov
and
dec
sub
xor
pop
and
imul
ficoms
sub
popa
jge
jg
addb
mul
movb
les
push
dec
mov
arpl
lcall
rorl
jl
cltd
outsl
mov
cltd
and
inc
mov
xorl
adc
aam
cmp
in
xchg
jbe
sub
test
iret
adc
mov
scas
sbb
or
fs
aas
dec
rcl
inc
inc
stos
and
cmp
dec
sbb
jnp
pop
fcoml
ds
jg
push
and
mov
add
ljmp
jg
adc
in
mov
and
push
adc
or
out
scas
call
rcll
add
mov
arpl
or
mov
inc
pop
lret
mov
ja
out
xchg
sub
xchg
add
ss
test
mov
decb
mov
test
inc
ds
in
cmp
xchg
insb
aaa
cmp
fs
xor
xor
add
cltd
out
leave
lea
sub
cwtl
test
mov
jne
mov
xor
repnz
pop
add
lcall
pop
xor
inc
in
jne
imul
in
in
popf
xchg
int
repnz
jle
popf
ljmp
inc
cmp
pusha
pop
pop
xlat
mov
dec
shlb
lods
push
rcrl
lcall
adc
aaa
sbb
nop
outsl
xchg
xor
in
hlt
int3
jno
movsb
inc
aam
mov
cmpsb
lods
mov
lock
stos
addr16
cmp
repnz
iret
mov
and
lock
add
cmp
jb
shlb
ss
adc
xchg
jl
dec
fidivl
nop
sbb
sbb
inc
and
inc
push
jle
test
push
jnp
addr16
sub
enter
add
cmp
or
dec
movsb
ficoml
or
in
xchg
loope
jg
mov
jnp
pushf
lea
outsl
adc
fldenv
cwtl
nop
xor
xor
jo
push
jns
mov
push
push
das
cmp
cmc
mov
add
out
cs
icebp
sub
mov
pop
add
push
mov
lahf
jl
inc
adcl
in
in
cmc
or
and
pop
push
insl
gs
lea
mov
aad
in
cmc
or
and
pop
push
insl
gs
lea
mov
mov
or
and
pop
push
insl
insb
jl
mov
jno
inc
mov
aad
gs
xor
xchg
aad
xchg
sbb
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
jp
dec
icebp
pop
popa
sahf
pop
push
loopne
cmc
pop
mov
lret
popa
stos
adc
and
jp
dec
icebp
pop
loope
xchg
cmp
cli
push
cli
popa
lret
popa
stos
jle
add
inc
arpl
push
pop
inc
jecxz
lods
and
repz
and
inc
aad
inc
int
add
adc
mov
cmpsb
cmp
lret
lods
fnstsw
push
add
inc
mov
and
je
jg
pop
test
xor
cmp
icebp
jecxz
je
adc
sbb
cli
adc
lods
xchg
rolb
iret
jmp
pop
fisubrl
mov
cld
push
in
stos
xor
mov
lcall
loope
pop
aad
cmp
cmc
dec
sbb
scas
sti
adc
inc
and
incb
fstps
sub
mov
and
inc
mov
cmp
lret
mov
popa
push
inc
mov
fiadds
loopne
fcmovnbe
cmp
stc
icebp
adc
push
ja
mov
mov
adc
decb
shll
dec
jne
jmp
xchg
sub
repz
loop
shlb
sub
xor
shrl
cs
pop
in
out
inc
fcomps
ljmp
or
jo
inc
add
nop
sub
inc
cmp
test
adc
push
stos
inc
rorl
push
decb
xchg
xchg
mov
cmp
ljmp
popa
stos
adc
and
jp
dec
icebp
pop
loope
xchg
cmp
ljmp
popa
stos
adc
and
push
push
cmc
push
sub
inc
or
or
fucomip
lret
xchg
mov
lret
push
jae
adc
movsl
hlt
aas
pop
and
push
xchg
dec
cs
push
jl
out
movsb
mov
std
jne
fisttps
xor
dec
test
mov
aaa
data16
aas
ljmp
jmp
lods
push
jb
rorb
test
xor
adc
cs
xchg
cmpl
dec
jl
add
cli
add
clc
mov
jmp
rcll
rorl
push
movsl
jnp
adc
out
mov
test
and
adc
mov
mov
xlat
push
gs
iret
inc
movsl
pop
cmpsl
push
lcall
mov
sahf
nop
out
cli
iret
negb
mull
adc
ljmp
mov
cld
dec
push
outsb
sub
int
adc
or
mov
lahf
xchg
push
push
inc
cmp
push
sbb
sub
iret
fisubrl
aaa
cs
dec
mov
aad
xor
jns
xchg
xor
shrl
out
or
jmp
jmp
fwait
popa
lcall
test
push
test
and
push
lods
inc
jmp
ret
mov
or
popf
mov
sbb
cs
adc
pop
in
ret
loopne
rol
movsb
dec
xchg
pop
cmp
out
push
jo
in
xchg
cli
pop
call
mov
jmp
fnstsw
dec
add
or
out
mov
xchg
clc
lret
xchg
decl
push
imul
cmp
jle
pop
js
xor
aaa
jnp
lret
cmpsl
pop
or
or
call
mov
cwtl
dec
push
negl
mov
arpl
test
and
fcomps
movsl
js
sti
jecxz
stos
or
push
clc
xchg
cwtl
leave
dec
xchg
stos
lods
cmp
push
movsl
fwait
jecxz
orl
fcoms
dec
aas
test
nop
in
lods
mov
mov
es
or
cmp
push
or
and
pushf
arpl
fs
into
imul
pop
pop
ja
popf
stos
call
inc
into
cwtl
insl
push
push
stos
xor
and
xchg
arpl
mov
push
or
xchg
repz
fs
jno
fs
mov
mov
push
popf
mov
xchg
leave
aam
push
pop
imul
shll
xchg
inc
jae
sub
outsl
hlt
dec
fdiv
sbb
adc
inc
jmp
test
dec
push
pop
call
mov
and
loop
sub
jecxz
and
adcb
loopne
and
aad
push
jecxz
mov
inc
lods
pop
sub
pusha
and
pushf
inc
jmp
incl
stc
inc
int3
jecxz
dec
push
push
in
jb
mov
pop
roll
jnp
lret
pop
js
mov
imul
imul
ss
call
nop
cmc
lret
jns
repnz
adc
out
mov
sbb
sbb
mov
cltd
jecxz
dec
gs
jo
sti
mov
ja
gs
ret
andb
jo
adc
xchg
jb
add
nop
jno
ror
loop
jo
xchg
sub
sbb
stc
sub
lock
arpl
jp
fldcw
cli
aad
jmp
add
sbb
xchg
orl
dec
jo
lret
xchg
clc
je
cmp
sar
add
mov
push
in
imulb
mov
xor
mov
jns
push
cmpsb
int
outsb
js
test
outsl
jnp
int3
adc
imul
divl
js
test
mov
dec
push
inc
out
cli
and
mov
dec
and
fistpl
fldenv
cltd
lret
jbe
test
jmp
mov
cmpsl
mov
les
push
xchg
add
or
cmp
xchg
cmp
inc
stc
and
lcall
fistps
adcl
mov
cmc
stos
loop
push
data16
test
imul
rol
addl
push
inc
or
xchg
int
test
inc
dec
dec
daa
rcl
scas
arpl
jae
pop
inc
jne
dec
mov
mov
stos
rcll
lods
xchg
jg
inc
outsl
repnz
cmp
jl
lret
insl
addr16
lock
dec
in
push
test
jbe
les
inc
lret
or
push
jmp
dec
fildll
mov
sti
lock
jns
in
xchg
shl
push
pop
clc
dec
sbb
in
push
js
lds
sbb
in
add
lahf
or
xchg
push
in
mov
xchg
cmp
mov
clc
movsl
sub
mov
mov
mov
xor
pop
lods
push
mov
inc
clc
fdivs
ljmp
mov
lcall
ds
push
ja
sbbb
xor
mov
mov
adc
fxch
lret
inc
movsl
sti
pop
pop
lahf
pop
sbb
mov
mov
xchg
add
mov
xor
xchg
addr16
je
sbb
arpl
jns
push
lods
sti
sub
cwtl
cmp
imul
sub
xchg
je
xchg
loop
pop
add
push
push
xor
adc
add
mov
mov
loope
popl
xchg
in
or
sbb
test
mov
jno
mov
rcrb
sub
loop
cmpsb
mov
jno
jo
std
ljmp
scas
jne
pop
inc
dec
mov
fisubl
xor
jmp
fnsave
cmp
mov
jle
cmpl
outsb
cwtl
scas
ljmp
push
lret
inc
push
sahf
test
std
jno
iret
enter
sti
xlat
jecxz
adc
cmpsl
mov
outsl
cmp
insl
xchg
inc
stos
mov
test
pop
out
sub
out
sbb
loop
test
lcall
dec
lahf
adc
mov
in
popf
push
sub
push
jnp
movsb
fimuls
push
sbb
daa
mov
jns
cmpb
or
xor
fmuls
sub
test
or
inc
les
dec
and
insl
in
add
sbb
lock
xchg
bound
div
in
es
fidivrs
jns
mov
pusha
pop
icebp
jno
out
mov
cld
pop
scas
ja
lock
es
xor
mov
cmp
arpl
frstor
out
xchg
push
pop
push
add
adc
mov
int3
inc
add
in
insb
pop
push
lds
cmp
xchg
out
and
mov
dec
stos
outsb
push
mov
pop
pop
dec
pop
aaa
push
cli
repz
xor
mov
mov
push
aam
shlb
cwtl
mov
cltd
fists
dec
jne
sahf
fiaddl
pop
test
or
bnd
mov
jg
pop
jle
les
jl
xor
in
and
dec
push
ja
lods
pop
and
and
adc
mov
or
into
rcrb
imul
jmp
add
dec
pop
out
adcl
push
or
dec
xchg
dec
jno
adc
sbb
or
xor
fsubs
dec
orb
cli
xchg
jnp
movsb
test
dec
ja
std
lock
push
dec
xchg
lds
xor
jnp
add
and
and
jp
mov
or
aaa
mov
cmp
arpl
jne
fadds
pushw
push
cld
xchg
inc
int
mov
addr16
div
dec
lcall
sbb
data16
and
pop
push
psubusb
pushf
insl
int3
pop
sbbb
jo
jbe
int
push
int
jp
mov
daa
js
addr16
fbstp
outsb
addl
js
sbb
fcoms
mov
cmp
filds
ffreep
pop
mov
mov
aas
adc
sub
repz
daa
jbe
cwtl
divl
pushf
cld
gs
daa
pop
icebp
addl
inc
je
loop
cltd
loope
inc
fistpll
xchg
jmp
mov
dec
dec
fs
cmp
dec
test
mov
sbb
sbb
lods
xlat
inc
jns
test
sub
dec
icebp
sbb
jne
jl
dec
and
inc
iret
adc
imull
cmp
mov
bound
jnp
add
in
shrb
xchg
das
adc
mov
into
mov
frstor
inc
in
insl
bswap
scas
sbb
ret
pop
add
pop
imul
push
and
fistpl
cwtl
out
icebp
adc
sahf
adc
pop
pop
xchg
mov
pop
xchg
mov
lock
xchg
dec
lret
loopne
or
neg
and
std
adc
jbe
iret
lcall
rorl
sahf
add
sbb
inc
xchg
adc
or
in
out
mov
jge
mov
out
push
inc
rcll
mov
loopne
gs
int
and
or
cmc
lahf
dec
xor
pop
sub
mov
jne
mov
push
rcl
xchg
out
ljmp
pushf
pop
ja
xchg
jbe
cmc
sti
fwait
xlat
dec
imul
push
int
mov
repnz
inc
lods
test
adc
adc
mulb
add
lahf
jo
cmp
sahf
cmp
insb
cs
aaa
xchg
xor
out
mov
fmuls
fnsave
cmp
lock
cs
xor
push
xor
or
out
add
sub
or
stos
stos
in
not
sbb
xchg
stos
subl
aam
xchg
mov
push
shlb
mov
sbb
xchg
leave
add
sbb
or
adc
lahf
cli
or
mov
idivb
scas
mov
and
pop
pop
mov
jae
push
movsl
push
ror
xor
insb
js
ss
dec
pop
mov
lcall
mov
in
dec
dec
mov
inc
clc
rcl
xchg
inc
and
clc
sub
in
insl
pop
and
or
push
dec
cld
jl
push
sbbb
arpl
lahf
xor
fistps
adc
and
icebp
mov
mov
or
cmp
movsb
test
push
jge
arpl
mov
fadd
push
mov
sub
push
xchg
out
sbb
adc
test
fsubl
push
mov
xor
cmpsb
pcmpeqb
test
push
outsl
dec
xchg
mulb
inc
sbb
ret
fidivrs
sbb
pop
lcall
enter
cmp
arpl
ret
call
cmp
cli
sbb
sub
test
pusha
fs
imul
testl
enter
adc
sarb
into
cmc
mov
ljmp
jg
lahf
push
repz
insb
jg
xchg
stc
inc
es
es
mov
movsb
mov
mov
xchg
repnz
pop
mov
xchg
sbb
sbbb
fadds
jo
and
stos
es
inc
cmc
nop
pop
jbe
repnz
sbb
or
hlt
bound
jbe
cmp
cld
and
sbb
movsl
mov
inc
and
pop
and
aas
mov
and
outsb
or
push
and
dec
lea
add
xchg
mov
sbb
pop
enter
sahf
es
add
xlat
test
ds
stc
jne
clc
add
mov
in
mov
mov
cmp
add
fwait
dec
pop
mov
int3
loope
sub
pop
dec
les
adcb
add
lret
scas
mov
dec
cmp
cli
cmpsb
out
adc
decb
out
add
sbb
cmpb
push
sbb
fwait
inc
lret
mov
ss
cmpsl
jb
cmp
notl
test
inc
pop
pushf
mov
hlt
int3
push
xor
add
sub
ja
mov
jge
push
mov
mov
loop
mov
test
imul
data16
cmp
ljmp
out
subb
adc
das
xacquire
jecxz
xor
sub
pop
nop
sbb
fwait
shrl
lcall
loop
mov
bswap
sahf
mov
or
in
pop
icebp
int3
push
jne
loopne
mov
push
cmp
fldt
hlt
cltd
cmp
clc
mov
repz
daa
fnstenv
gs
clc
push
loopne
cmp
mov
aaa
andl
or
imul
es
push
in
shlb
repnz
outsb
push
inc
push
loopne
push
fsubrs
inc
jne
lcall
gs
mov
or
adc
into
push
dec
lret
mov
jne
pop
icebp
lret
push
int3
xchg
bound
maxps
bound
mov
pop
es
or
inc
sarb
jg
adc
stc
push
add
or
clc
adc
bound
pop
jge
mov
xchg
pusha
xor
push
stos
insb
scas
inc
sub
js
sbb
add
sub
inc
pop
les
stc
lds
pop
sub
in
push
sbb
shrb
jo
inc
mov
inc
outsl
mov
and
fwait
mov
lret
mov
jle
mov
pop
jno
in
outsl
test
repz
mov
cltd
adc
js
xor
lea
add
jb
jae
fs
cld
jnp
add
sub
fwait
add
pop
pop
in
inc
xchg
pop
xor
call
gs
fcompl
jns
xchg
xor
pop
xor
clc
jle
cld
call
les
sub
push
mov
imulb
fstpt
cmpsb
ret
sbb
add
sti
xor
cltd
mov
mov
inc
mov
imul
xor
dec
cmp
nop
push
dec
fdivp
mov
xor
mov
mov
cmp
and
and
sbb
mov
enter
pop
call
mov
and
mov
mov
cwtl
adc
cmp
xchg
jne
lods
add
ret
lret
pop
loopne
add
mov
mov
push
xchg
dec
xor
cli
pop
ss
mov
mov
and
jle
hlt
xor
aas
mov
daa
es
cmp
jmp
paddusw
loop
lock
int3
lods
push
andnps
stc
orl
inc
in
iret
jo
mov
nop
cld
sarl
daa
sub
rcrl
mov
data16
pop
push
pop
scas
push
sub
mov
bound
out
je
pop
mov
stos
cmpsl
scas
jge
xor
addr16
xchg
mov
test
test
jmp
fnsave
out
add
jecxz
add
cmp
push
insl
inc
mov
sahf
mov
int3
push
cs
mov
pop
cmp
cmpsb
mov
push
cmp
cld
mov
pop
inc
add
addr16
out
es
push
aaa
movsb
cwtl
pop
fsubrl
or
lock
imul
pushf
sbb
mov
push
ret
jo
call
mov
ret
cli
xchg
or
sbb
dec
jb
mov
push
insl
movsl
dec
mov
xchg
pop
bound
in
aas
push
movsb
cmpsl
mov
jl
jg
push
push
mov
aam
enter
shll
xlat
sbb
test
clc
adc
adc
adc
cmpb
mov
and
cmp
repnz
lahf
mov
out
into
std
inc
mov
pop
sarl
or
jae
lds
flds
sbb
addl
jle
xor
cwtl
leave
mov
sbb
cltd
jmp
or
stos
adc
jp
and
jg
sub
std
ja
push
in
daa
lea
repnz
push
mov
and
imul
dec
push
jnp
repnz
xchg
push
xor
call
and
lret
mov
mov
sbb
mov
adc
jo
cmp
cld
inc
cmpsb
mov
dec
roll
sti
adc
loope
cmpsb
fnstcw
or
insl
lret
and
mov
cmp
pop
icebp
icebp
xchg
repnz
es
stos
sbb
out
int
incl
xchg
xor
lods
mov
and
dec
testb
mov
cmp
and
fcomi
ljmp
out
movl
stos
add
je
ret
or
mov
pop
insb
xchg
mov
adc
fcmove
xchg
cld
push
xchg
jmp
jmp
sub
mov
not
insb
cmp
pop
xor
push
icebp
loopne
idivl
pop
lret
lret
cmp
inc
xchg
lret
mov
mov
dec
call
pop
adc
cs
fwait
mov
or
out
shr
in
xchg
pop
pusha
test
imul
lods
jno
popa
push
sahf
inc
movsb
outsl
cli
mov
std
lcall
push
pushf
popa
and
jp
movsb
jecxz
pop
mov
test
mov
rep
push
push
dec
sbb
test
in
inc
dec
adc
and
push
mov
pusha
cmp
mov
dec
dec
outsl
rorl
lret
or
lods
in
test
adc
xchg
cmp
inc
aam
popf
lret
xor
and
push
pop
xchg
dec
jl
scas
repz
insl
jbe
xorl
stos
mov
inc
clc
or
sbb
push
fs
aam
xchg
stc
pop
sbb
mov
repz
loope
pop
mov
sub
cs
mov
xor
cmp
int3
iret
cmp
xchg
pop
mov
enter
mov
cltd
fs
ljmp
dec
iret
add
pop
mov
pop
mov
in
jno
sarb
mov
outsb
fldt
iret
stc
inc
sub
bound
jne
push
mov
rolb
sbb
cmp
dec
inc
inc
mov
imul
pusha
mull
xchg
and
int3
mov
dec
or
inc
mov
pop
test
sub
mov
sysret
or
pop
adc
inc
sub
sbb
adc
dec
cmp
push
in
xchg
jge
vpdpwssds
ret
dec
fisubrs
cmpsb
xchg
cs
and
push
pop
testl
inc
xchg
stos
jge
pop
loop
mov
dec
mov
dec
ds
mov
outsb
jnp
inc
push
cmp
idivl
xchg
pop
cmc
aaa
inc
hlt
insl
and
inc
cmpsb
sbb
inc
or
outsl
push
cmp
push
sbb
xchg
cli
outsb
movb
and
mov
xor
imull
fsubr
lds
lock
adc
xchg
push
cld
adc
lret
bound
test
pop
pop
aad
cmpb
push
or
mov
repnz
add
mov
adc
pop
sub
xchg
aaa
push
adc
xor
shll
rcrl
push
ss
sbb
js
mov
jp
xor
jge
sub
mov
into
int3
popf
in
jg
xor
popf
stc
lret
sti
pop
fstl
icebp
in
orl
insl
pushl
mov
pop
pop
xchg
sbb
aam
cmp
push
dec
iret
xor
imul
push
and
cltd
lcall
adc
enter
xchg
ljmp
lahf
cmp
sbb
fmul
in
leave
pop
sub
lahf
adc
adc
or
outsl
fnstcw
cmpl
mov
inc
sbb
cmp
popf
dec
xchg
std
stos
ficomps
cwtl
daa
pop
leave
test
adc
rorb
push
or
sub
or
ficompl
mov
pop
es
fs
or
dec
cmp
adc
scas
mov
fsubl
mov
lahf
push
pop
jno
add
and
testl
cmp
in
lds
sbb
mov
jbe
sub
loop
inc
pop
or
dec
sub
mov
jmp
cwtl
or
mov
sub
inc
lods
jecxz
cmpsl
loopne
in
push
fwait
cmc
clc
push
or
dec
push
je
inc
movsl
stos
and
sbb
add
mov
mov
inc
pop
imul
je
jae,pt
call
pop
sub
fs
mov
jl
pop
adc
popf
mov
inc
mov
test
aad
sahf
pushf
xor
pop
push
mov
jecxz
cld
outsb
div
bound
sub
mov
push
or
sbb
dec
or
cwtl
test
sbb
call
sub
pop
fistpll
aaa
sbb
pop
xlat
lock
leave
dec
jno
je
outsb
popl
insb
cmp
popa
add
mov
pop
hlt
jbe
aam
daa
adc
adc
inc
call
mov
lcall
mov
push
cltd
sbb
iret
push
scas
insl
cmp
jb
lods
mov
pop
hlt
rol
fcompl
and
mov
xchg
movb
lods
sbb
shl
add
add
add
out
or
fs
aaa
shl
roll
out
jne
xchg
mov
sub
mov
lods
dec
add
loope
in
clc
mov
out
mov
inc
int3
lea
lock
adc
push
push
xlat
shl
insl
ret
inc
icebp
lahf
int3
dec
jne
clc
inc
rcr
rclb
adc
mov
adc
lea
xchg
pop
je
mov
out
cltd
xor
fidivrs
inc
pop
cmpsl
popa
or
inc
popf
pop
loope
xchg
cmp
ljmp
popa
stos
adc
and
jp
dec
icebp
pop
loope
xchg
cmp
ljmp
popa
stos
adc
and
jp
dec
mov
sub
sbb
lret
popa
stos
adc
and
js
dec
icebp
pop
loopne
xchg
cmp
adc
jno
push
fstpl
ficoms
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
insl
pop
subb
mov
or
cmp
ljmp
inc
stos
bound
addb
jp
or
sbb
sub
cmp
lret
add
xor
mov
mov
xor
cmp
scas
icebp
stc
cmp
adc
sub
and
bound
push
jmp
adc
push
cmp
adc
lea
ja
iret
mov
mov
ret
ljmp
cmp
js
push
xchg
scas
ljmp
pop
stos
jb
das
mov
pop
add
ret
test
and
fcmovb
decl
filds
mov
orb
sbb
aad
cmp
outsb
rolb
stos
clc
mov
arpl
out
div
xchg
mov
lahf
pop
add
ja
and
cmp
popf
mov
bound
test
call
movq
adc
push
arpl
push
xor
add
aaa
stos
lea
xchg
push
jp
out
shlb
sub
pushf
sti
or
inc
sbb
nop
push
cwtl
jb
push
and
sub
test
sahf
cmp
addr16
dec
clc
aas
hlt
adc
jb
sysret
ljmp
arpl
outsl
mov
inc
andb
cmc
sub
shll
out
shrl
xlat
pop
mov
cmp
lret
add
xor
and
jb
bound
pop
subb
mov
sub
cmp
lret
add
xor
and
jb
bound
cld
add
cmpsl
inc
dec
cwtl
or
mov
jle
jae
sbb
leave
mov
sar
jne
loopne
xor
or
push
pop
fsubr
cmp
cmp
dec
and
xor
dec
fnstcw
popf
mov
pop
jns
call
les
outsl
ret
xchg
mov
and
stos
jg
and
fnstcw
xor
sbb
lahf
cmp
negb
popf
sub
dec
in
add
out
fnstcw
or
fcmovne
cltd
ficompl
pop
xor
sti
sub
and
sbb
mov
fstps
stos
inc
jb
sahf
out
add
mov
cmp
loop
cmp
sbb
and
xor
mov
cld
push
push
inc
lods
jnp
mov
sbb
inc
hlt
mov
int3
xor
cmpsl
incl
sahf
test
ret
jne
cmp
xchg
add
test
cwtl
rcrb
cmp
movsb
push
mov
dec
imul
mov
mov
sti
nop
fimull
cmp
inc
dec
cmp
mov
add
ret
pop
int
push
movsl
dec
fcmovbe
mov
nop
cmp
cmpsl
cmp
jle
sbb
add
xchg
outsb
cwtl
pushf
inc
mov
movaps
dec
andb
fwait
push
jnp
orl
out
iret
movsl
testb
setnp
lahf
dec
sub
mov
mov
enter
in
neg
jb
jo
sbb
loop
inc
popa
and
fisubrs
xchg
mov
mov
mov
adc
add
xor
inc
push
dec
fstpt
popl
adc
imul
mov
mov
pop
and
in
mov
sbb
js
cld
or
mov
inc
dec
mov
push
mov
xchg
cli
or
xchg
flds
loop
out
mov
hlt
and
sub
jecxz
mov
jge,pt
outsl
ljmp
mov
in
mov
cmc
lcall
addr16
sbbb
xchg
js
cmp
imulb
ret
pop
es
add
dec
add
mov
int3
rolb
mov
mov
aaa
pop
je
jb
movsb
lea
push
aaa
mov
enter
js
push
push
lea
les
jge
xchg
sbb
jp
mov
popf
jae
divl
stos
or
jle
insl
xor
and
je
mov
dec
aad
inc
les
pop
pop
mov
aam
cli
fs
pop
bound
scas
mov
cwtl
mov
dec
mov
call
ficoms
xchg
test
sub
mov
imul
loope
sbb
ss
pop
jge
stos
cli
push
pop
and
movsl
cmp
add
sub
cs
pop
sbb
xlat
sbb
pusha
inc
cwtl
mov
gs
pop
mov
pop
stc
sub
std
cmp
dec
pop
adc
adc
push
aad
adc
add
or
push
or
or
insb
and
jg
sarb
and
push
xor
jbe
mov
jl
xchg
push
aas
fucomip
xor
ror
fucomp
sbb
stos
adc
fmull
arpl
roll
xchg
ficompl
dec
nop
cwtl
adc
imul
pop
bound
sarb
push
add
or
fstl
int
in
in
and
lret
sub
adcb
jbe,pn
repnz
aam
ljmp
rcrl
fmuls
ljmp
inc
imul
int
push
test
push
mov
xlat
scas
adc
es
mov
leave
jl
jl
or
sets
subb
insl
aam
sub
cltd
int3
xor
aas
stos
or
hlt
inc
adc
push
jno
loopne
xorl
mov
inc
xchg
jo
ljmp
lcall
pop
jbe
int
in
pop
cs
cltd
mov
les
ja
mov
xor
loopne
xor
std
jnp
ret
push
ja
je
jmp
or
pop
and
mov
sbb
mov
pop
mov
les
fildll
add
cmp
mov
aam
or
jne
mov
sub
cmpsl
inc
add
sbb
dec
jl
nop
push
test
sbb
pusha
movsl
cmp
push
sbb
jmp
mov
push
xchg
mov
cmp
sarl
addr16
xchg
xchg
mov
adc
dec
adc
inc
sahf
jb
ret
roll
ss
mov
movb
jo
or
repz
xor
inc
test
fsts
push
jns
push
inc
push
cmp
sahf
jno
sub
add
incb
out
jo
fbld
inc
inc
loope
movsl
clc
scas
das
and
mov
lahf
fwait
jnp
dec
sbb
repz
imul
repnz
mov
shrb
lahf
mov
loopne
pop
idivl
dec
dec
fsts
shll
or
adc
sbb
mov
push
in
incl
pop
cli
ja
lds
in
dec
pop
daa
fistl
xor
iret
insb
push
inc
aad
fisubrl
cmp
cwtl
ss
fcom
testl
jp
inc
push
mov
mov
inc
mov
imul
add
inc
or
lret
mov
jo
insb
repnz
mov
jns
leave
loopne
push
ja
dec
dec
imul
rorb
fsubp
dec
data16
mull
dec
lock
repnz
push
xchg
shrl
fisttpl
jecxz
xor
outsl
inc
push
movsl
je
mov
cmp
stos
call
sub
aam
scas
loop
pop
pushf
pop
adc
mov
dec
jp
mov
adc
push
cmp
enter
lcall
loopne
pop
lcall
adc
nop
repnz
clc
push
dec
lret
movl
cmp
xchg
fsubs
notl
jl
scas
or
pop
xlat
pusha
push
shr
in
rcrb
inc
or
out
in
in
std
xor
pop
pop
les
pop
add
js
or
add
cli
arpl
aam
pushf
popf
sahf
lea
cmp
add
imul
jnp
sub
xchg
pusha
test
stc
ret
popf
loop
fcmovu
push
sbb
and
mov
rorb
arpl
out
pop
add
or
and
and
cmp
insl
mov
ljmp
out
sbb
shrl
ret
push
in
sbb
outsb
inc
jns
mov
int
scas
cmpsb
push
sbb
ret
nop
push
push
pop
inc
xor
outsb
fimuls
pop
mov
push
sbb
sub
int3
inc
scas
sbb
lock
out
aam
flds
icebp
adc
lret
inc
or
or
fsubrl
jge
int
sahf
or
jno
jno
mov
jnp
push
iret
call
mov
das
aas
add
mov
fwait
xor
stos
movsl
xor
dec
mov
mov
pop
jp
xchg
int3
cli
xor
dec
mov
testl
cli
cli
and
mov
xor
push
mov
mov
push
scas
adcl
xor
test
or
insb
mov
sbb
int3
or
fsubl
xor
mov
pop
inc
mov
mov
fstpl
pop
push
cmp
cltd
lcall
add
jbe
loopne
and
mov
das
push
bound
add
dec
mov
lcall
dec
xchg
mov
leave
mov
pusha
loop
sbb
mov
cld
adc
test
push
fcoml
mov
scas
mov
jno
aaa
test
pop
icebp
lret
jp
icebp
push
pop
stos
gs
gs
out
das
add
mov
sti
cli
xchg
and
dec
fildll
add
or
dec
adc
mov
cs
xor
inc
cmp
in
pop
int3
fldl
lock
mov
sbb
xchg
repnz
xchg
fimull
push
pop
sbb
push
outsl
push
repz
into
lds
icebp
mov
add
mov
and
out
fidivs
shl
add
insl
add
push
cmp
cmp
cli
xchg
push
add
lret
jmp
sbb
arpl
cld
int
mov
pusha
ds
xchg
add
arpl
push
shll
mov
int
jecxz
and
lret
movsb
mov
call
fxch
orl
pusha
out
dec
xor
inc
scas
aam
cmp
mov
lods
mov
mov
lret
das
pop
test
cmpsb
test
inc
aam
repz
push
push
jae
mov
in
cmp
mov
dec
dec
aas
xor
xchg
stos
ss
into
push
xchg
jo
cmc
mov
push
imul
add
pop
xor
xorb
mov
jo
repnz
cmp
jb
xchg
jbe
fldenv
mov
jb
sub
adc
mov
or
sbb
repnz
pop
loopne
das
push
ds
popf
mov
pop
iret
sarb
stc
pop
and
mov
bound
icebp
push
or
sbb
lret
pop
pop
shrb
adc
xor
push
loope
int
mov
cmp
int
dec
mov
int3
lds
mov
push
pop
dec
fldt
adc
push
push
push
xchg
pop
mov
imul
imul
stos
xchg
fistl
fdivrl
or
ljmp
fcompl
fwait
push
sub
aam
out
adc
adc
mov
js
mov
inc
push
and
cmp
add
mov
pop
test
stos
mov
xor
dec
out
in
test
dec
pop
cmpsl
push
and
mov
cmp
rorl
leave
dec
adc
bound
mov
or
aaa
cmp
mov
push
cmp
cld
xchg
adc
push
outsl
pop
lcall
loope
sbb
jne
fisttps
push
xlat
insb
sahf
movsb
out
add
jmp
push
shlb
jecxz
jle
cmpsb
rcrb
mov
xchg
mov
test
lock
cmpsl
stos
mov
lods
pop
pushf
addl
out
mov
std
stc
orb
jns
lods
les
icebp
pop
lahf
sahf
mov
out
fidivs
pusha
popa
ljmp
leave
leave
jmp
cmp
cmp
int
xchg
fistpl
mov
or
lahf
scas
scas
mov
incl
lahf
adc
gs
add
negb
insb
cmc
ja
sbb
pop
jmp
jge
movsl
and
outsb
dec
add
add
lods
hlt
aas
ret
lds
sbb
sub
xchg
das
cmp
jge
aad
or
cld
mov
inc
dec
pop
test
xor
outsl
clc
jecxz
movsb
dec
mov
stos
cmc
dec
dec
lea
mov
cmp
sahf
mov
and
dec
cmp
in
push
mov
adc
lods
pop
out
mov
nop
adc
mov
cmp
scas
sbb
fistl
sbb
js
ljmp
jns
jecxz
stos
xchg
ljmp
push
outsb
fwait
sub
icebp
cld
mov
sub
fxtract
inc
mov
mov
inc
mov
mov
in
lods
mov
inc
mov
jl
fsubrl
cmp
xlat
insl
out
lcall
adc
outsl
xor
mov
and
out
mov
push
mov
pop
popa
and
in
scas
jl
in
cmp
stos
inc
cltd
testl
loope
aad
sub
insb
inc
ficomps
or
les
ss
icebp
out
and
fstpl
add
sarl
jae
sbbb
sbb
shll
rolb
jb
ljmpw
add
cmc
in
aad
jne,pt
cmp
ret
out
ret
push
pusha
cmp
ja
xchg
push
adc
or
jge
jo
iret
pop
mov
les
xorb
cmp
cmp
aaa
movsb
inc
xchg
jl
ss
repnz
pop
in
inc
cld
push
scas
pop
call
adc
out
xchg
and
sub
xchg
and
js
lahf
sti
loop
mov
mov
sub
aas
fucomp
into
lret
jae
scas
cmp
flds
fimull
dec
dec
pop
xchg
loopne
fcmovnbe
or
in
sub
mov
pop
mov
jnp
leave
cmp
cmp
ret
sbb
popa
pop
add
sbb
cmp
fs
dec
mov
sbb
mov
test
push
push
mov
shrb
shrl
and
sbb
mov
ret
sbb
mov
push
movsl
fcompl
stc
lods
aam
mov
mov
mov
mov
fucomip
lock
jmp
not
or
xlat
sub
push
cltd
or
dec
stos
ljmp
popf
pop
gs
cmpl
stos
jb
inc
pusha
inc
mov
mov
test
lds
adc
fcmovbe
scas
mov
insb
iret
pop
scas
cmpsb
repz
mov
jp
mov
loope
xchg
dec
icebp
xor
jecxz
pop
sub
mov
inc
addr16
adc
pop
stos
js
sub
iret
ret
mov
dec
pop
dec
adc
pop
cmp
ret
stos
inc
mov
out
gs
int
sub
add
arpl
adc
dec
push
ljmp
shl
imul
and
aam
stc
lods
cmp
mov
mov
add
xchg
cld
inc
and
daa
xchg
pusha
jle
movsl
inc
cmc
add
es
xchg
ds
mov
jb
push
mov
xchg
jle
xchg
sbb
or
inc
push
and
aad
jp
lret
cmpsb
cmp
orb
cmp
inc
xor
dec
inc
jbe
enter
popf
cmp
mov
cmp
test
ss
ljmp
test
repz
cmpsl
js
jo
push
mov
mov
icebp
or
push
mov
sbb
enter
ds
imull
imul
imul
lods
dec
add
aaa
and
sub
aad
fs
mov
push
icebp
cli
daa
jmp
sbbl
mov
mov
inc
mov
add
mov
xor
mov
out
outsl
fld1
pop
insb
push
jp
push
dec
clc
add
dec
dec
jmp
sbb
mov
pop
std
cmp
shll
scas
and
pop
lock
or
je
jmp
fnstenv
mov
sbb
cmp
jge
test
mov
std
int
je
idivl
mov
sbb
add
aam
xor
pop
mov
mov
xor
fcoms
cmpsb
imul
fs
andb
aas
cmp
mov
mov
loope
inc
arpl
mov
jo
mov
test
fsubl
mov
outsb
pop
fimuls
or
mov
mov
add
push
dec
xchg
mov
mov
dec
dec
or
adc
push
subl
cltd
and
lea
outsl
jns
xor
adc
scas
loope
or
in
mov
pop
call
jne
shrl
pusha
xor
cmpsl
pop
mov
dec
pop
in
jo
dec
mov
mov
jno
das
orl
and
ror
mov
pushf
inc
xor
test
mov
or
sub
inc
and
rorl
push
push
ror
push
jl
jns
aaa
cmp
sbb
les
ret
push
lock
fisubrl
leave
shrb
das
pop
inc
mov
int3
loopne
lret
mov
lea
jnp
fldt
cli
pop
shll
cli
call
inc
pop
ret
jg
inc
mov
dec
data16
xor
popa
arpl
jecxz
lods
push
ficoms
mov
cli
ret
push
add
jbe
sbb
push
iret
sbbb
cld
pop
adc
cmpsl
add
notb
das
mov
stc
lahf
loopne
adc
ret
outsb
xchg
bnd
add
loop
adc
jb
in
out
out
lods
mov
paddusb
cld
loop
xor
lret
cmp
or
add
loope
ljmp
jl
lock
das
test
mov
cmp
pop
pop
sbb
sti
jecxz
xor
sbb
movsb
jno
inc
ret
pusha
push
dec
fisubrl
daa
js
jmp
out
pop
data16
mov
icebp
aas
mov
ror
outsb
jecxz
lock
xchg
lods
dec
or
jge
sti
adc
push
sub
push
nop
sub
adc
js
mov
pop
and
inc
cmc
sub
xchg
cmc
pop
push
loopne
enter
push
add
iret
cmp
outsl
xor
add
mov
or
adc
xchg
jp
repnz
clc
push
xchg
mov
and
adc
mov
xlat
mov
sbbl
mov
and
outsl
inc
mov
sbb
rclb
and
int
sbb
cmp
in
imul
stc
mov
sahf
sub
inc
mov
out
jns
lods
cmp
es
and
push
cmp
xchg
enter
pop
mov
push
pop
clc
add
sub
loope
imul
and
add
inc
mov
aad
pop
inc
mov
fistps
and
xor
xchg
and
sbb
in
add
inc
loope
push
out
movsl
and
in
mov
mov
xchg
dec
outsl
je
mov
repz
lea
add
add
cmp
fisttpll
and
sbb
adc
loop
test
popf
dec
push
dec
movb
jmp
scas
xchg
or
xchg
push
inc
mov
and
jp
mov
sub
icebp
imul
popf
mov
aam
pop
cmpb
sarb
xchg
dec
sub
daa
pop
sub
push
xor
sub
xlat
xchg
jmp
jl
inc
popf
shl
mov
xchg
cwtl
inc
xor
pushf
mov
es
pop
sbb
iret
decb
dec
fldl
ja
test
andb
inc
dec
loope
mov
sbb
lods
mov
jbe
adc
jbe
popa
fstpt
jle
push
push
inc
int3
movsl
push
aaa
dec
xchg
and
or
mov
inc
cmp
cmp
xchg
int
dec
out
xchg
stos
lahf
jbe
xor
data16
cli
adc
mov
xchg
fsubr
xlat
jle
aas
dec
sbb
test
pop
inc
js
add
bnd
dec
out
aam
mov
jmp
cs
jns
in
daa
jbe
xchg
cli
and
arpl
sbb
pop
mov
les
loopw
rcrb
mov
popf
fisubs
rorl
js
xlat
pop
and
aam
mov
xchg
inc
inc
adc
in
adc
jns
sar
icebp
scas
jle
sbb
mov
mov
fmuls
iret
jo
in
or
aam
lock
mov
pop
cwtl
adc
incl
adc
aad
sar
jmp
notl
inc
stc
push
mov
lods
add
mov
jmp
fisttpll
aaa
fxch
fisubrs
pop
negl
loop
xchg
mov
inc
data16
inc
push
mov
lock
sbb
insl
adc
inc
push
stc
cmc
sbb
bound
adc
dec
xor
mov
pop
add
in
vmwrite
xchg
dec
mov
ror
aad
inc
dec
daa
cwtl
repz
mov
cmpsl
xchg
xor
pop
pop
popa
jb
pop
sub
xchg
cli
frstor
jae
es
push
sub
shll
push
dec
fcomps
sbb
or
icebp
xchg
and
cmp
ficomps
ficompl
xorl
mov
sar
aam
js
sub
xchg
dec
mov
sbb
pop
loopne
mov
pop
xchg
mov
ljmp
insb
repnz
icebp
cwtl
sbb
jg
out
mov
lods
sbb
add
and
mov
add
and
scas
or
leave
push
cmp
or
jl
call
loope
jno
push
jb
xor
aam
cmpxchg
push
jl
mov
xchg
ljmp
inc
pushf
ret
or
inc
mov
popf
push
icebp
lock
jmp
mov
lods
jae
shrl
xor
lods
jo
lahf
jbe
insb
jge
pop
scas
ja
mov
aaa
repnz
cmpsb
in
rorb
movsb
xorb
lods
stos
loope
or
and
ja
rorb
inc
and
xor
cmp
rclb
pop
sbb
ret
pop
mov
test
popa
imull
into
adcb
into
push
xchg
gs
pop
cmp
test
clc
sbb
push
push
ficompl
mov
fucomip
sbb
stos
imul
mov
fiaddl
test
mov
mov
or
push
pop
fdivl
sbb
mov
stos
int
inc
insl
pop
dec
outsb
fwait
pusha
faddp
out
push
and
std
cmpsl
or
pop
xchg
repz
out
popa
fimuls
xor
sub
rcrb
ret
cmp
lret
add
xor
and
jb
bound
pop
subb
mov
sub
cmp
lret
add
xor
and
jb
bound
push
or
sbb
sub
cli
loop
adc
add
xor
and
jae
bound
push
xorb
pop
mov
sub
mov
test
xor
push
std
ficoml
mov
sbb
jae
sbb
pusha
addl
aas
shrl
loope
rorl
cmpl
mov
mov
jae
add
adc
and
xor
leave
aas
shrl
xchg
xor
cmpl
mov
mov
imul
fbld
ret
add
jae
outsl
xchg
lods
sub
fimull
mov
sbb
cs
lret
and
jp
pop
pop
pop
idivl
mov
aam
xchg
fsubrp
arpl
in
adc
sar
or
decb
aas
mov
ds
stos
push
jns
push
adc
sub
ljmp
mov
or
jl
pop
or
inc
scas
sbbl
dec
xor
jecxz
scas
lock
sub
aas
jecxz
pop
outsb
mov
dec
pop
jb
call
adc
and
cltd
lret
jp
cs
repz
mov
sub
pop
dec
pop
mov
sahf
cli
mov
adc
dec
cmp
sub
sbb
repnz
mov
cmpl
adc
or
and
sub
fidivrl
lret
das
sti
pop
ljmp
pop
stos
or
shlb
jl
fsts
leave
addr16
jle
and
roll
jno
popa
out
adc
push
fst
sub
push
in
lahf
jno
ja
jge
dec
mov
iret
sarl
cmpsb
dec
xchg
adc
add
sub
fildl
jmp
sti
jnp
adc
and
xor
ret
aas
shrl
jecxz
repz
pop
mov
inc
mov
jae
add
adc
and
xor
ret
aas
shrl
jecxz
repz
pop
mov
inc
mov
sbb
cmp
stc
pushf
mov
in
mov
dec
aas
push
and
mov
push
add
push
es
mov
sub
imul
insl
inc
loopne
sub
in
xor
push
and
outsb
xchg
jecxz
jbe
inc
mov
sub
psllw
and
nop
in
fcomps
inc
jle
push
mov
sbb
movsl
jl
mov
inc
adc
mov
lret
xor
push
xchg
test
fisubs
test
sbb
mov
fnstcw
imulb
cmp
cs
cmpsb
dec
cltd
xchg
scas
fwait
mov
push
inc
cmpsb
subl
ret
and
push
pop
cmpsb
shl
xchg
or
jnp
push
dec
shll
es
arpl
sahf
xor
iret
dec
pop
in
in
inc
aad
int3
sub
pushl
das
pop
popa
jmp
push
sbb
mov
shl
add
je
jbe
cs
stos
mov
xchg
hlt
mov
inc
out
dec
fs
mov
aaa
mov
aam
cmpsl
jl
call
push
push
clc
add
lods
sub
pop
mov
outsb
lods
push
lahf
inc
movsb
aad
pop
mov
adc
xchg
test
pop
cli
dec
jecxz
pop
addr16
lcall
xchg
cld
bound
add
fwait
gs
ds
mov
add
mov
popa
stos
add
outsl
ds
and
pop
clc
fstl
or
jne
lret
adc
dec
fstl
mov
mov
hlt
push
xchg
ret
mov
dec
aam
push
test
sarb
add
pop
in
xchg
cltd
in
lret
fstps
sbb
adc
pop
jmp
sub
movsb
rcrl
hlt
out
out
repz
out
jge
jp
fildll
addb
mov
sbb
scas
insl
push
ret
sbb
in
push
fdivp
in
push
inc
mov
add
iret
jne
push
jo
gs
cli
outsl
mov
fiadds
mov
aam
mov
ret
ss
negb
xchg
cs
mov
les
cltd
iret
mov
adc
xchg
fstpl
pop
loope
data16
jnp
cltd
xor
pusha
xchg
in
or
js
nop
mov
sbb
lods
gs
scas
shll
and
fucomi
mov
jmp
incl
popa
dec
insb
fcompl
add
insl
cmp
loope
cli
jmp
xlat
rol
pop
jle
pop
lods
fisttpll
ljmp
imull
xor
push
adc
xor
jbe
mov
cmp
sahf
sub
mov
sbb
add
inc
or
sub
shr
fnstsw
add
cli
ja
out
pop
push
lods
cmpsl
imul
cmp
cmc
xor
pusha
pop
cmp
lret
xor
fcoml
push
js
ficompl
cmpsl
lret
lods
inc
imul
repnz
xchg
addb
test
shrb
sbb
lahf
inc
andnps
and
mov
iret
int
aad
push
fadd
out
jmp
cwtl
cwtl
fsubs
lret
movsl
bound
ja
mov
xchg
xor
mov
add
icebp
pushf
and
pop
ljmp
enter
mov
push
add
sahf
cmc
subl
pop
hlt
mov
rorl
notb
jbe
sub
dec
sahf
cmp
sub
rorb
push
daa
rorl
cltd
jge
popf
movsb
inc
test
adc
mov
add
rclb
xchg
add
inc
icebp
inc
inc
cmpsl
dec
and
xchg
dec
cwtl
stos
jb
divb
jmp
sbb
out
mov
sub
popa
jns
pop
mov
test
pop
inc
and
loop
cmc
call
cmp
pusha
pusha
aas
cmpsb
aas
nop
push
notl
push
inc
mov
mov
jbe
push
imul
rcll
xchg
pop
repnz
stos
sbb
stos
push
jmp
sti
ss
addr16
mov
cltd
inc
lods
mov
mov
mov
int3
test
xorb
or
aas
xor
ret
lea
mov
sbb
push
loop
xchg
ror
sbb
sbbb
inc
xchg
push
bnd
cmpsl
dec
into
jl
push
std
iret
jbe
test
out
xchg
inc
cmp
xchg
jge
adc
leave
jmp
insl
xchg
dec
negl
repz
pop
xchg
jg
lods
test
int3
test
mov
movb
sbb
push
push
mov
shll
btl
adc
aad
xchg
ljmp
push
and
loopne
inc
jae
and
loop
dec
sbb
inc
jmp
sub
sbb
sub
stos
lock
les
inc
aam
sub
int
xor
xchg
ds
mov
dec
mov
movsb
enter
jmp
in
push
pop
f2xm1
xor
and
jno
mov
jmp
jmp
xor
xchg
or
inc
test
shll
inc
sub
add
pop
dec
scas
cmp
add
dec
sub
aaa
xor
aaa
imul
movsb
xchg
or
leave
out
rorl
mov
jns
mov
es
mov
xlat
inc
lods
xchg
sbb
adc
insb
stos
jl
loopne
loop
mov
les
jl
shll
jae
jge
dec
fsubrs
aas
out
fsub
adc
cmc
mov
js
in
popa
xor
push
or
adc
aaa
mov
mov
push
flds
inc
cli
xor
sbb
ljmp
jno
adc
inc
stos
jp
sbb
nop
stos
lods
add
add
sub
enter
mov
push
sti
mov
and
inc
add
xchg
cld
sbb
mov
sbb
jo
xorl
xchg
mov
out
add
negb
sbb
xchg
into
fldl
clc
dec
movsl
call
xchg
das
jno
insl
sub
repnz
rcrb
call
dec
mov
xchg
xor
in
sbb
imul
cmp
dec
rcrb
aad
pop
ret
fwait
inc
pop
mov
cld
leave
shrb
cmpsb
popa
jb
dec
cmp
inc
xchg
ja
xchg
loopne
iret
lock
repz
adc
ficoms
int
sti
xchg
or
cli
push
cmpsl
dec
test
mov
jnp
add
imul
add
data16
jae
push
lock
sub
cs
out
bound
jl
cmpl
mov
outsb
jbe
pop
ret
mov
mov
adc
sahf
fsubrs
mov
xchg
rcr
mov
test
jmp
mov
dec
stos
inc
or
mov
icebp
pop
cmp
xor
cmpsb
test
xlat
xchg
imul
mov
icebp
lret
call
arpl
cli
mov
pop
pushf
mov
shr
push
cmp
ljmp
clc
add
in
call
xor
push
jmp
fidivs
mov
adc
insl
push
ljmp
jne
push
push
pop
and
pop
push
lds
xorl
jno
inc
fildl
xchg
jns
cmp
jp
hlt
jno
xchg
fists
xor
insb
ret
inc
das
fistpll
punpcklwd
adc
lods
jg
sbb
pusha
cwtl
or
add
cwtl
mov
fidivs
jns
add
sbb
ja
mov
sbb
loop
mov
shrb
shll
test
jl
imul
xchg
push
sub
inc
jbe
xchg
fcoms
or
cmpsb
clc
xchg
xchg
iret
xchg
loopne
ret
inc
push
push
xchg
sbb
xlat
sbb
jl
mov
cmp
lret
push
mov
fldl2t
adc
test
mov
insb
cmc
aas
mov
daa
inc
and
loopne
add
sub
lods
jnp
mov
enter
aas
lock
and
movsl
fldt
dec
jecxz
jno
add
into
negl
cmp
mov
sbb
adc
push
cld
push
dec
cmp
shrb
mov
insl
lret
ljmp
test
movsl
repnz
shrb
xorl
sub
mov
or
int3
sub
imul
dec
mov
xchg
bound
cltd
test
int3
xchg
cmpsb
sbb
in
pop
iret
adc
xor
test
sbb
pop
mov
and
inc
popl
push
xchg
adc
xor
repz
inc
mov
test
push
cmp
fdivl
add
xor
mov
outsb
mov
mov
je
xchg
pop
std
mov
add
mov
adc
outsl
mov
mov
popf
pushf
add
insl
cltd
fwait
adc
adc
hlt
jmp
jb
repnz
adcb
inc
mov
and
loope
mov
xchg
and
mov
mov
dec
pop
push
fidivl
or
sub
jae
js
mov
xor
das
into
mov
pop
xor
insb
jo
arpl
push
ds
sub
aas
loopne
mov
js
int3
jge
fimuls
mov
push
push
mov
mov
jge
xchg
inc
into
imul
adc
loop
inc
or
pop
in
jnp
imul
insl
and
in
adc
out
jns
pop
mov
push
mov
nop
dec
fwait
pop
jo
cmp
insl
in
xchg
push
pushf
movsb
sub
jecxz
xor
mov
in
and
lret
mov
sbb
mov
divb
sub
mov
pop
jnp
mov
and
das
mov
sub
sub
push
push
mov
and
pop
shl
jl
sarl
mov
sub
lock
pop
inc
jbe
cmpsl
sahf
mov
mov
add
dec
loope
rcll
jl
cld
mov
movsb
jb
add
outsb
popf
test
imul
sbb
add
mov
stc
mov
xchg
cmc
ret
mov
adc
mov
mov
pop
das
sub
cs
mov
mov
xlat
in
adc
jno
pop
adc
mov
dec
push
clc
pop
inc
call
mov
and
mov
std
test
inc
dec
mov
repz
js
push
sahf
push
sar
jbe
jo
xlat
xchg
loop
pop
push
popa
outsl
or
inc
jmp
inc
and
fcomi
lods
aaa
pop
bound
jl
mov
xchg
out
adc
xor
add
push
lret
fildll
in
lahf
sti
mov
jmp
add
iret
bound
cmpsb
iret
xchg
and
ret
xchg
leave
xchg
loopne
cmp
and
mov
push
pop
and
push
aas
add
ret
push
inc
inc
dec
inc
out
and
pop
iret
and
int
sub
adc
outsb
or
cmp
xchg
add
xchg
mov
jo
jb
call
pushl
and
sub
xchg
clc
cwtl
mov
sbb
mov
inc
sahf
cltd
fisttps
mov
aad
lock
push
mov
iret
cmp
pop
mov
push
and
and
iret
or
add
aad
fwait
jp
popf
js
and
inc
lret
push
xchg
sarb
fstp
dec
sbb
dec
mov
jp
sub
pusha
ds
subl
sahf
adc
testl
cli
jbe
push
fwait
dec
xor
je
pop
dec
das
mov
addr16
sahf
cmp
fs
push
lods
addb
xor
into
enterw
xchg
std
and
insb
or
cmc
ljmp
js
clc
fisttpll
clc
pop
push
mov
xor
cmp
sbb
pop
jp
dec
in
or
mov
rcr
mov
or
outsl
dec
pop
and
cmp
xorb
or
add
dec
jecxz
mov
mov
push
repnz
pop
dec
or
cmp
mov
sbb
aam
scas
dec
lods
je
mov
mov
dec
aad
adc
jnp
and
sub
sub
mov
pop
xchg
push
lods
shrb
leave
test
mov
test
daa
xchg
sbb
adc
cmc
mov
cwtl
lret
pop
sbb
add
cmc
xchg
pop
push
loop
outsb
js
cmp
jbe
inc
int
pop
mul
std
xchg
lahf
lcall
in
adcb
cmpsb
add
loop
mov
iret
das
ret
in
sbb
jbe
mov
mov
incl
push
cltd
pop
xadd
outsb
das
insb
pop
jmp
sub
add
jg
cltd
pusha
daa
insb
mov
or
aaa
adc
outsl
int
dec
fcoml
dec
mov
adc
pop
sbb
fcmovu
xor
xlat
dec
fcmovnbe
movsb
rcll
add
inc
dec
hlt
popa
push
push
std
jb
iret
fwait
sbb
outsb
rcll
sub
aas
jb
jb
cmpsb
rcl
outsl
mov
out
in
hlt
mov
clc
adc
xchg
push
or
adc
sti
adc
popf
push
push
xor
sldt
push
jl
pusha
or
test
outsb
int3
insb
and
pop
inc
les
mov
dec
jg
hlt
test
aas
xchg
jp
loopne
pushf
imul
in
test
test
fs
imulb
inc
idiv
aaa
push
loope
pop
iret
mov
jbe
arpl
inc
pop
xchg
mov
inc
out
pop
loop
shrb
rorl
xor
shll
cmp
leave
movsl
outsl
add
test
and
push
test
sarb
icebp
mov
sbb
jge
fwait
push
mov
in
hlt
sub
xchg
sbbl
xchg
jg
mov
cmp
cmp
xor
jp
je
sarb
fs
and
xchg
aas
push
bound
adc
dec
xor
push
cmp
leave
adc
leave
and
iret
int
lret
out
inc
call
int3
mov
hlt
jns
loopne
ror
jmp
repnz
pop
sub
or
jle
cmpsb
test
mov
push
pop
aaa
or
in
xlat
mov
dec
in
shll
sub
mov
xor
mov
mov
adc
imul
push
ret
dec
fldt
lock
es
and
xor
scas
xor
roll
ja
add
inc
pop
and
mov
jns
pop
sub
sub
add
imul
jmp
pop
aam
mov
jmp
aaa
test
enter
add
push
cmp
pop
inc
js
xchg
jo
lods
jecxz
sub
inc
lds
je
sti
jns
cmp
jmp
or
and
hlt
and
loopne
imul
daa
movl
mov
imul
push
inc
dec
xor
and
lds
ret
int3
lock
sbb
add
test
jge
scas
pushf
daa
sbb
mov
clc
hlt
aam
cmp
pop
adc
ds
xchg
dec
mov
data16
xchg
pop
pushl
or
adc
in
mov
repz
and
or
insl
imul
sbb
mov
cli
repz
jge
add
mov
pop
lret
jp
mov
mov
nop
ja
adc
jae
or
pop
sub
jle
imul
rolb
dec
xchg
loope
dec
pop
sti
inc
and
ja
sub
jnp
sbb
or
pop
int
sbb
test
pop
lret
sti
mov
stos
notb
leave
rcl
xchg
jge
out
xchg
dec
je
sbb
sub
arpl
dec
xchg
sub
cli
cs
call
jns
mov
shrl
sbb
sbb
add
xor
outsl
xchg
call
xchg
lret
sarb
push
sbb
in
add
es
push
pop
pop
out
or
add
test
push
adc
or
sbb
std
cmpsb
iret
outsl
or
cmpsb
sbb
pushf
sub
fildl
scas
inc
shll
lods
ficompl
xor
xlat
stc
cs
sbb
scas
sbb
cmp
xor
cmp
cmp
ret
cwtl
lea
adc
jge
sub
cmpsb
cld
xchg
lret
push
pop
js
mov
mov
cmpsl
add
roll
roll
mov
lret
xor
sub
adc
ja
cli
mov
jo
lods
iret
filds
pusha
ja
or
mov
lret
loopne
add
aam
sbb
or
out
inc
subb
dec
outsb
xor
test
mov
shll
xchg
sub
pop
xchg
cmp
sbb
rcl
jmp
sbb
ss
pop
into
out
inc
repnz
fmull
test
inc
mov
or
jl
scas
inc
jb
cmp
test
inc
cmp
test
mov
das
data16
add
stc
mov
dec
jbe
imul
ljmp
add
lods
xchg
scas
fldcw
and
sub
inc
jb
xor
iret
fwait
into
movsl
lock
sti
and
mov
lret
cmpsb
push
in
mov
jecxz
popa
jne
xchg
pushf
xchg
fucom
gs
mov
add
cmovbe
jbe
adc
add
add
repnz
loopne
rcl
mov
cmp
loope
pushf
or
sub
pop
lds
in
cmp
popf
ret
dec
imul
cwtl
and
movsb
mov
popf
call
fisttpl
loopne
push
inc
imul
jecxz
fisubrs
mov
xorb
lcall
call
lea
lahf
gs
sub
xor
cmc
cli
bound
xchg
fld
enter
fs
dec
dec
mov
bswap
aam
repz
add
xchg
shrl
add
adc
push
fwait
push
push
mov
fsubrs
test
mov
notl
addb
add
cmp
mov
cld
xor
cmp
and
jg
push
inc
js
rol
fstpt
js
dec
sbb
loope
sub
jge
aaa
or
push
and
daa
shrb
mov
ss
push
dec
cs
lods
push
mov
ret
and
cli
mov
and
mov
jge
or
cld
dec
int
ret
adc
call
mov
aam
xchg
int
cs
jge
jp
jae
pop
scas
das
sub
loop
movsb
out
add
xor
aam
mov
movb
dec
push
xchg
inc
sbb
bound
lret
dec
cmp
in
int3
ret
xor
andb
inc
scas
and
or
roll
sub
mov
or
fcmove
pop
sbb
in
or
mov
lods
mov
sti
ljmp
cmp
ret
in
fsubrp
mov
add
or
cmpsb
fdiv
mov
or
jnp
jne
loop
mov
daa
mov
shl
pop
xchg
shl
sub
test
rcl
sub
cmpsb
aad
in
inc
or
add
cwtl
movsl
in
test
sub
imul
outsb
inc
or
sbb
pop
inc
jno
orb
add
xorb
loope
dec
cmc
stos
cmp
ja
cltd
mov
jecxz
mov
xor
jge
sub
and
bound
aad
popf
mov
ljmp
testb
insl
xor
movsl
sbb
jg
or
stos
push
or
add
into
rcrb
lods
mov
inc
xchg
jne
idivb
cwtl
out
sbb
adc
jns
mov
jbe
mov
fldl
rep
sub
outsb
xor
and
aad
xchg
mov
fdivs
cmpsl
and
sbb
add
in
ljmp
push
ficoml
or
dec
add
push
fistl
sbb
notl
icebp
aaa
fdiv
into
adc
scas
jo
inc
cmp
daa
popf
jb
sbb
sbb
loop
mov
mov
andb
add
test
lds
mov
pop
sub
push
push
fwait
or
fldl
mov
fwait
dec
sub
push
adc
aad
clc
movsb
js
xchg
inc
fstl
cmc
idivl
cmp
push
ret
xchg
jg
jbe
xor
addb
sbb
enter
gs
lods
jo
xchg
dec
xchg
loopne
xchg
out
jnp
and
cmpsl
pop
jb
jno
cli
ror
aad
pop
add
push
mov
mov
jno
adc
stos
jge
imul
or
popa
subb
bound
into
push
mov
or
addr16
in
xchg
cmpsl
iret
mov
or
push
xchg
daa
inc
push
out
idiv
adc
insb
fadds
lock
mov
push
cmp
add
or
jle
das
addl
xchg
lahf
mov
lret
xor
inc
inc
lods
cmp
add
fsubl
in
into
mov
and
jns
test
mov
add
adc
and
xor
ret
aas
shrl
jecxz
repz
pop
mov
inc
mov
jae
add
adc
and
xor
ret
aas
shrl
jecxz
repz
pop
mov
inc
mov
jae
add
adc
and
xor
ret
aas
shrl
out
repz
pop
orb
scas
push
lahf
jae
add
adc
pop
mov
cmp
sub
dec
pop
repz
negl
nop
pop
mov
sub
sbb
or
jno
movntq
pop
stos
dec
cwtl
js
push
fdivrs
enter
sub
sbb
or
js
push
test
pop
test
cwtl
js
push
fdivrs
sub
fsubrs
enter
call
pop
mov
mov
sbb
push
fwait
dec
mov
xchg
sbb
aas
imul
addl
in
jne
arpl
aam
xlat
dec
out
cmc
pop
js
push
call
data16
in
insl
call
jns
addb
cmovno
clc
pop
inc
push
movsl
mov
xchg
stc
sbb
pop
enter
cmovnp
xor
call
add
dec
push
dec
andl
test
call
movsl
imul
aaa
popf
jge
pop
xchg
ret
sub
xchg
test
or
daa
enter
shlb
and
jecxz
cld
int
dec
ljmp
loop
sbb
mov
sub
fsubrs
enter
call
pop
mov
test
cwtl
js
push
fdivrs
enter
dec
enter
sbbl
cmp
int
jle
test
imul
dec
lcall
or
cmp
lea
pop
mov
fwait
pop
nop
insl
lea
mov
test
cwtl
js
push
fdivrs
enter
sub
sbb
or
js
push
test
pop
test
cwtl
js
push
fdivrs
enter
dec
addl
xlat
outsb
or
in
shr
mov
adc
mov
xlat
xorl
dec
sub
repnz
sub
and
cmc
scas
xchg
in
mov
lret
adc
test
fwait
jge
mov
fucomip
sbb
sub
shrb
imul
sbb
insl
loopne
insl
or
aam
xlat
lods
in
sub
cld
jo
or
dec
and
pop
pop
xor
fs
xor
inc
push
dec
std
jmp
and
aas
xchg
mov
push
enter
push
jns
add
xchg
mov
mov
std
jbe
imul
notb
xchg
movsl
loopne
pop
cltd
fucompp
mov
pop
enter
out
pop
into
jo
and
dec
imul
arpl
pushf
adc
dec
ficoml
ret
push
dec
xchg
push
and
pop
push
sub
aad
lods
sub
pop
mov
out
jnp
loop
aam
sub
mov
movsb
fdivrs
in
sub
or
or
mov
arpl
enter
sub
lods
je
sub
dec
out
dec
adc
mov
icebp
inc
lret
sbb
dec
pop
or
adc
lds
adc
dec
and
sub
negb
xor
scas
sub
jg
scas
sub
sub
push
shr
cmp
outsb
add
and
repz
mov
sbb
stos
xchg
loopne
mov
jno
jp
fldt
push
xchg
cli
jno
ret
inc
subl
adc
aad
in
stc
loop
cs
sahf
sub
inc
inc
xchg
test
jo
push
dec
and
faddl
stos
sbb
mov
add
mov
sub
pop
and
loope
mov
mov
mov
mov
rcrb
loop
out
push
rcl
pop
jo
dec
push
ss
sahf
mov
fstpt
dec
stos
mov
rcll
cltd
jl
xchg
jbe
jp
arpl
fsubs
inc
leave
ret
adc
pop
mov
mov
dec
or
cmc
into
mov
sti
push
and
xchg
lret
xchg
mov
add
push
add
lea
stos
pusha
mov
int
pop
push
mov
inc
or
fwait
les
jecxz
in
ljmp
loop
mov
xlat
sar
xchg
mov
sbb
dec
push
cmp
into
sub
adc
and
ss
adc
push
int3
jb
sub
add
cmp
out
out
dec
inc
fstpl
js
add
arpl
scas
adc
inc
push
gs
scas
fstpl
add
mov
adc
test
mov
sub
pop
loopne
aas
adc
inc
shlb
mov
cltd
lahf
inc
insb
jmp
xor
jns
cmp
jnp
pop
aad
mov
lcall
mov
lods
sbb
push
dec
adc
and
push
ficomps
mov
int
enter
popa
into
aam
lods
idivb
outsb
add
or
sub
jle
and
cmp
fcmovbe
jle
faddl
push
inc
adcb
xchg
and
ffreep
cwtl
cmp
insl
pusha
sub
enter
push
xor
mov
pop
sarb
inc
out
pop
out
or
jnp
adc
add
xor
mov
and
and
push
and
in
fwait
dec
dec
xor
and
jno
or
and
test
and
push
fisttpll
test
dec
into
adc
push
lret
xchg
mov
aaa
lret
adc
loopne
mov
ficompl
ficompl
loop
pop
xchg
bound
mov
cmp
bound
xor
dec
inc
mov
push
int3
xchg
pop
scas
and
cs
in
push
stos
je
addr16
movsb
mov
adc
ret
aam
sbb
or
iret
push
rcll
mov
xchg
mov
push
xchg
arpl
pop
jbe
in
cmc
movsb
lret
rorl
rolb
cmp
jge
ret
jg
and
cltd
mov
xor
in
xchg
in
and
mov
inc
push
rdtsc
enter
inc
subb
mov
call
test
cmp
or
pushl
aaa
xorb
sub
rorl
sbb
das
ficomps
dec
sti
xchg
jno
out
push
sbb
xchg
fsubr
mov
pop
imul
jmp
in
orl
rcr
mov
jno
rol
push
mov
flds
sahf
mov
popa
fsubrs
xor
mov
push
push
lds
adc
clc
sarb
gs
pop
mov
mov
xchg
negl
std
xchg
mov
rcrb
jb
mov
push
stc
std
dec
enter
ficoms
ret
or
pop
subl
test
fidivrs
ja
pop
mov
push
into
fadds
aad
bsr
leave
push
lret
jle
adc
xchg
add
idivl
push
and
shll
xchg
mov
xorl
lods
jb
fimull
jmp
ret
mov
dec
pop
xchg
scas
ds
xchg
in
jg
or
shl
mov
adc
scas
adc
jge
mov
test
daa
or
pop
adc
xor
xchg
in
mov
dec
xchg
rcll
dec
push
xor
pushf
cmp
jae
sub
lods
lods
mov
pop
popa
enter
stos
cld
ret
insb
cmp
cld
push
mov
imul
imul
imul
pop
lcall
pop
test
loopne
mov
add
ss
pop
add
add
push
out
pop
test
faddl
ds
inc
xchg
repz
or
popa
xchg
in
xlat
xchg
ja
frstor
pop
add
loopne
fadds
sbb
push
adc
dec
cmp
sbb
movsb
les
mov
dec
mov
lock
popf
mov
add
mov
ret
test
sti
sbb
insb
mov
loope
outsl
jmp
dec
addl
loopne
out
adc
negb
imul
aas
lods
mov
mov
int
mov
and
mov
iret
mov
fwait
and
hlt
cmp
jle
mov
test
sub
incb
negl
mov
fs
lahf
lea
mov
jl
jns
fcompl
aam
adc
mov
shrb
jbe
mov
lcall
loope
xchg
xchg
or
cmp
pop
fiaddl
orl
or
sahf
shrb
fdivrl
pop
jp
ror
jmp
rcr
and
ds
mov
sarb
push
cmp
cli
loopne
movsl
shrl
hlt
cld
daa
jne
push
outsl
push
dec
sub
movsb
je
or
in
popa
mov
outsl
or
jle
insl
fsubs
push
inc
repz
jns
cmpsb
inc
movsl
cmpsl
pop
popl
fsubr
adc
pop
mov
push
test
idivl
ja
dec
stos
or
loop
loopne
or
repz
and
mov
adc
dec
or
stc
and
xchg
cmc
daa
pusha
mov
dec
fbstp
xchg
xor
push
inc
enter
cmp
pop
and
pop
sbb
outsl
xor
or
aas
mov
adc
sbb
or
test
and
adc
sbb
pop
lods
push
adc
or
jbe
sub
rcl
cmp
mov
inc
jle
push
or
test
and
in
xorb
jb
mov
lret
push
ficoml
in
loopne
ss
bound
dec
push
ljmp
pop
fcompl
xor
dec
xchg
jmp
mov
cmp
int3
jmp
mov
xchg
add
cmpsb
ret
xchg
fnsave
inc
loope
cmpsl
sbb
cmp
shlb
stos
mov
ror
pop
test
fldt
mov
dec
mov
add
in
jecxz
xlat
fwait
inc
icebp
adc
lods
or
sub
inc
and
adc
pop
dec
sbb
pusha
popf
movsl
mov
inc
cmp
cs
push
call
out
je
lds
jbe
add
inc
shl
pusha
stos
cs
ficoms
inc
mov
push
repnz
mov
lcall
cld
push
inc
pusha
mov
adc
pop
aas
les
add
test
hlt
pushf
mov
das
add
fldcw
adc
mov
out
stos
repz
or
add
add
cmpsb
movsl
outsl
imul
ss
dec
inc
inc
fs
mov
sub
dec
inc
sub
test
mov
xchg
mov
mov
ds
adc
scas
push
pop
popa
lret
decl
cmp
jecxz
sub
ds
out
fisubrl
mov
xchg
mov
hlt
mov
mov
xor
dec
push
jg
fistpll
mov
add
mov
js
js
js
in
cld
and
rorb
lcall
in
xor
cmp
or
dec
fs
rclb
dec
jb
outsb
push
sahf
cmpsb
int
aad
test
shrl
mov
cmp
dec
or
fsts
fsubl
adc
cmp
adc
sub
lods
jecxz
pop
sub
add
xor
lret
adc
mov
mov
sahf
fidivs
and
and
idivl
xchg
dec
repz
dec
popf
xchg
mov
cmp
push
xchg
adc
aas
sahf
rolb
std
jmp
les
and
push
lods
fcmovb
cmpsb
insb
test
mov
add
sbb
jae
and
movsb
adc
aad
jae
stc
push
and
push
xchg
das
lret
inc
jl
sub
test
orb
imul
mov
or
or
xchg
dec
sub
clc
orl
insb
sti
loop
push
ss
mov
fistpll
repz
xor
ds
das
repz
jmp
jg
pop
pop
aam
test
outsl
filds
js
xor
cmp
add
aaa
in
pop
inc
out
pop
mov
jnp
stos
imul
lods
dec
lods
enter
push
fstp
xchg
fwait
test
hlt
cltd
push
addl
std
or
sbb
or
movsb
ret
add
popl
popf
and
loopne
dec
lea
sub
and
xor
jmp
cmp
fcmovnbe
mov
les
les
mov
into
sub
inc
inc
leave
mov
std
mov
pop
push
xlat
and
mov
jb
into
mov
fcoml
dec
popa
sbb
xchg
and
icebp
std
add
hlt
addr16
mov
inc
mov
dec
cwtl
lret
stos
test
mov
popf
mov
sub
pusha
xor
sbb
mov
xchg
call
mov
in
mov
mov
jmp
pop
cmp
cmc
jo
gs
push
divb
and
mov
cmpsl
dec
sub
add
cmp
adc
scas
movsb
push
int
and
mov
sub
and
cwtl
in
jb
xchg
rol
clc
jle
push
push
jmp
std
nop
lret
xor
push
push
sub
aas
push
fadd
pop
xchg
andb
js
push
call
sub
xor
push
xor
pusha
lahf
adc
xorl
gs
daa
sti
mov
pop
cs
sahf
cmp
rcr
cld
cmc
insb
xor
cmp
fsubrl
xchg
iret
sti
fs
jecxz
xor
xchg
or
ljmp
test
mov
cmpl
loope
rol
mov
ss
sub
cmp
push
int
cmp
lds
or
pop
cli
jne
sbb
jecxz
push
jbe
mov
xchg
inc
insb
rorb
cltd
lock
push
cmc
icebp
jmp
jnp
mov
xchg
sahf
cmp
repz
sub
shl
pop
data16
mulps
cmp
push
mov
gs
cs
insl
jns
xor
in
out
sbb
cmc
adcb
addl
es
mov
push
stos
jg
mov
push
cmp
aaa
adc
aam
cmp
dec
or
and
or
imul
stos
fs
push
mov
sbb
rorb
int
stc
mov
stos
jg
js
ds
lahf
iret
pop
pop
push
inc
adc
leave
add
mov
push
test
imul
mov
cmp
popa
into
pop
iret
mov
enter
mov
jne
fidivrl
push
xchg
jecxz
mov
pop
mov
mov
fidivrl
inc
dec
pop
test
mov
inc
lds
add
push
repnz
sbb
arpl
fcomi
jne
jecxz
cli
dec
fistl
xchg
je
lods
out
inc
aam
lret
adc
push
or
in
or
out
int3
mov
inc
test
inc
in
int3
mov
es
inc
scas
bound
pop
or
push
fs
aad
in
pushf
aaa
pop
xchg
repnz
cmpsl
addb
outsl
fldt
outsl
cmp
lea
adc
jp
dec
icebp
jle
unpcklps
and
in
mov
test
scas
rorl
jle
das
outsl
mov
mov
xor
inc
lret
lret
popa
jecxz
pop
adc
dec
testb
push
dec
mov
xor
jl
push
sbbl
dec
push
scas
faddl
addr16
popa
or
fnstcw
xor
xchg
adc
sbb
sti
sbb
pop
popf
into
add
pusha
mov
aam
ds
add
xchg
scas
jmp
sub
jge
jns
aam
xchg
int
pop
adc
jge
in
sub
mov
mov
repnz
js
cmp
ficoml
rcrb
fcmovnb
xor
add
roll
push
sti
xchg
in
jg
cmc
lods
push
fnstsw
icebp
in
subb
shl
mov
pop
addl
fmuls
inc
sti
xlat
cmp
in
mov
xchg
jo
movsl
aas
xchg
stos
sti
adc
dec
lods
xchg
lahf
pop
aas
pusha
rcrl
inc
pop
push
hlt
cmc
pop
sti
mov
or
sub
mov
cmp
cmpsb
lret
imul
insb
pop
arpl
cmp
mul
dec
adc
and
fwait
nop
mov
pop
xchg
dec
sbb
mov
or
mov
xchg
ss
enter
popf
movsb
sahf
mov
imul
or
les
push
jl
sbb
cmpsb
out
frstor
lret
notl
mov
xchg
jecxz
sbb
adc
mov
in
out
bound
repnz
subb
dec
and
adcb
xor
cmp
xchg
call
jecxz,pn
xor
and
dec
int
mov
jne
lret
or
xchg
sub
push
mov
cmp
jecxz
pop
cmp
mov
inc
cs
pop
dec
shr
fnsave
leave
pop
lock
adc
dec
lret
cltd
pop
add
les
sub
sub
pop
movsb
mov
pop
fwait
scas
arpl
and
or
popa
scas
bound
lahf
int
xadd
or
loope
outsl
or
les
pop
push
stos
add
jge
adc
mov
iret
es
mov
lods
jmp
add
dec
xor
and
shl
pop
pop
mov
adcl
xor
mov
adc
adc
imul
loop
sbb
gs
movsb
add
sahf
in
jns
fimull
ljmp
aas
aam
lret
inc
push
inc
dec
scas
mov
cmpsl
scas
or
pop
inc
cs
cwtl
roll
xchg
dec
ds
cli
dec
mov
mul
and
sbb
sti
xchg
mulb
adc
arpl
inc
pop
lock
jae
shlb
add
add
xrelease
mov
jno
cmp
or
cwtl
movsl
cmp
stos
push
ja
insl
xchg
cmc
lods
fs
inc
push
sub
xchg
or
mull
ret
int
add
push
pop
push
popa
mov
push
outsb
xor
stos
mov
adc
or
sub
in
add
test
mov
rclb
in
lret
mov
fwait
dec
push
int3
lods
iret
push
mov
stc
mov
sti
cltd
cmp
imul
sbb
push
imul
mov
les
out
sbb
pop
ja
cmp
mov
mov
fiadds
inc
sub
scas
fistpll
out
stc
ficompl
je
sub
js
in
in
xor
aaa
mov
popa
pushf
inc
xchg
out
sbb
mov
stos
loope
mov
dec
out
push
fiadds
cmp
sbb
adc
inc
imul
dec
bound
ja
in
jb
fimull
mov
fiadds
mov
test
mov
inc
vmwrite
daa
push
or
or
in
outsb
push
ss
mov
add
xchg
out
jle
sbb
stc
mov
iret
int
mov
fnstsw
or
addb
sbb
sbb
ja
ret
pushl
dec
jmp
mov
dec
mov
add
sbb
cmp
or
cmp
xor
and
mov
push
call
mov
cmp
mov
and
xchg
mov
fisubrs
cmp
sarb
or
xor
scas
sbb
inc
and
mov
jp
cmp
xchg
inc
sbb
pop
mov
xor
rcrb
pop
push
fcomp
adc
cmpsb
push
dec
call
lods
sbb
sbb
xchg
movb
loopne
int
in
imul
or
mov
loopne
lds
mov
out
into
aad
int
insb
loop
int
xchg
sbb
jb
sub
pushf
scas
lds
mov
xor
adc
into
rcrb
shll
mov
sahf
xchg
pop
stos
mov
mov
int
mov
pop
ss
int
sub
fs
lods
xchg
pop
push
fs
and
clc
mov
js
push
pop
mov
roll
sub
imul
mov
mov
cmpsl
xchg
ret
xor
pop
roll
sbb
dec
mov
sbb
out
jno
loope
lds
sbb
sub
add
push
in
push
clc
xor
push
fdivrl
imul
cli
popf
inc
clc
into
pop
xlat
cli
outsb
pop
ret
rcl
imul
or
pushf
jnp
hlt
adc
push
cltd
sub
lret
roll
mov
cmp
icebp
and
imul
or
aas
sbb
out
adc
lods
sub
cmp
xchg
insl
scas
shrl
sbb
das
adc
mov
xchg
pop
pop
scas
sub
mov
mov
stc
xchg
andb
lret
pop
das
sbb
push
sub
add
xchg
popf
aad
sub
jnp
sahf
ljmp
xchg
xor
lock
les
mov
test
pop
daa
pop
xor
cmp
pop
imul
fmuls
jnp
jge
xor
ljmp
mov
aaa
jns
stc
in
mov
add
add
sbb
imul
bound
sbb
cmpsl
or
faddl
add
xchg
sbb
cld
mov
mov
repz
loopne
cvttps2pi
ljmp
push
movsl
mov
mov
xor
movsb
out
shll
mov
pop
and
int3
repz
aam
mov
sub
dec
stc
adc
pop
adc
loope
xchg
xchg
lahf
fstpl
mov
push
pusha
stos
mov
jge
lret
lds
or
mov
push
jne
leave
jmp
shll
and
cmp
setne
cmp
xchg
sub
xor
mov
inc
lods
xchg
dec
xor
or
mov
dec
stc
adc
push
loope
fstl
dec
inc
mov
fcmovne
adc
xor
in
imul
aad
test
inc
bound
ret
ret
jmp
lds
cmp
mov
cld
std
ret
mov
out
cld
aad
sub
push
mov
cli
fwait
shlb
dec
pop
movsl
lods
jns
xor
aad
sbb
or
ficomps
push
mov
adc
and
jmp
push
addl
int
and
mov
mov
push
adc
aas
jecxz
inc
push
into
add
leave
push
push
insb
pop
fstps
inc
adcl
in
pop
enter
call
pop
mov
test
cwtl
js
push
fdivrs
enter
sub
sbb
or
js
push
test
pop
test
cwtl
js
push
fdivrs
enter
sub
js
call
pop
mov
test
cwtl
js
push
fnstcw
enter
sub
sbb
or
js
push
test
pop
push
loop
js
pop
nop
pusha
mull
xor
mov
mov
leave
mov
ret
and
push
and
xor
bound
jb
and
shlb
mov
mov
add
jle
inc
xor
cs
push
adc
jb
andb
mov
call
bnd
or
ss
and
push
jl
addr16
add
lret
cmp
in
xchg
imul
dec
jmp
gs
push
jmp
mov
call
ret
mov
jbe
in
scas
aaa
stos
push
mov
mov
xchg
bound
lahf
ror
inc
mov
lret
in
mov
lahf
scas
jnp
iret
push
lods
push
jecxz
pop
lret
cwtl
mov
mov
rcll
std
xor
inc
cmpsb
mov
lods
add
negb
aas
dec
dec
and
mov
shlb
fldl
ret
adc
push
inc
bound
jne
loopne
das
mov
repnz
ljmp
push
fiaddl
mov
and
push
bound
addr16
and
shlb
in
nop
loop
repnz
adc
inc
ds
adc
sbb
mov
aad
andl
add
inc
pop
add
sbb
lock
notl
scas
rcrl
dec
and
jno
push
inc
sub
push
gs
sbb
mov
in
mov
bnd
pusha
adc
inc
xor
inc
and
bound
jb
and
shlb
mov
bnd
pusha
adc
inc
xor
inc
and
bound
jb
andb
dec
lahf
jo
mov
cmp
xor
rorl
movsb
pushf
mov
jg
mov
int
mov
add
xchg
xchg
dec
fnstcw
leave
int
outsb
andl
in
int
xor
jmp
out
ret
cmc
inc
ja
mov
imul
adc
or
cmp
mov
cli
aaa
es
es
ret
xor
cmpl
dec
cs
repz
sbb
cli
cs
push
jl
add
inc
add
pop
dec
or
cmpsl
or
xchg
cmp
inc
fs
push
shll
shrb
mov
daa
or
std
cmp
lds
cmpsb
fadd
hlt
push
pop
sahf
in
xchg
and
sub
mov
jns
push
gs
repz
jl
push
jb
gs
cmp
or
pop
outsl
or
out
dec
pop
push
in
mov
xor
sub
lods
jo
mov
push
push
adc
outsl
sarl
push
push
push
shrb
lods
ror
popa
aad
lcall
incb
or
sbb
adc
movsb
dec
jge
scas
and
inc
mov
mov
mov
test
adc
and
xor
shl
push
pop
fldz
mov
sahf
ljmp
mov
or
out
ds
push
adc
mov
push
mov
jmp
dec
loopne
sbb
xor
pop
mov
sahf
lcall
fnsave
jae
lods
fcoms
jnp
ret
add
sbb
push
mov
loopne
adc
fisttpll
push
nop
out
into
jle
inc
iret
enter
test
sbb
pop
sub
push
loope
out
pop
mov
and
test
and
mov
cmp
incb
push
xor
xchg
cmp
xchg
jb
push
lcall
fmull
xchg
push
dec
lea
push
xchg
neg
das
repz
outsb
call
sub
fiaddl
dec
fwait
mov
inc
shll
dec
mov
mov
idivl
mov
pop
test
test
mov
iret
adc
pushf
sbb
loopne
outsb
xlat
sahf
adc
dec
fcompl
add
pop
adc
mov
leave
xchg
jne
sub
test
xchg
lock
std
andl
sbb
out
fisubrl
loope
mov
or
xor
leave
movsb
iret
ljmp
icebp
xorl
enter
aam
fidivrs
cwtl
add
out
jmp
mov
mov
rorb
mov
out
xchg
imul
dec
mov
ja
push
loope
mov
mov
ja
test
repz
xchg
mov
pop
cmp
into
lahf
pop
es
fcmove
lret
test
mov
ljmp
std
insb
sub
lods
mov
and
sbb
test
fcompl
imul
into
jnp
xlat
pop
cli
push
call
scas
mov
xchg
test
gs
mov
xchg
push
inc
std
loop
ds
in
push
out
sub
mov
aaa
shll
jmp
or
or
jns
fcomip
cmc
sarl
xor
data16
in
or
pop
addr16
mov
pop
pop
sti
inc
pop
push
pop
icebp
or
aad
cli
add
ret
scas
aaa
add
dec
or
jo
cmp
sbb
mov
pop
in
faddl
pop
mov
outsl
mov
imul
movsl
cli
jmp
sub
inc
mov
cmp
pop
hlt
fidivrl
push
lret
adc
rep
imul
call
addb
pop
mov
adc
cltd
aaa
dec
outsb
ljmp
cmp
push
pop
mov
mov
jns
push
push
jmp
inc
mov
bound
outsl
loope
stos
rorl
lea
scas
in
aas
jo
and
pushf
sarl
xor
popa
inc
mov
jg
test
pop
lock
insl
inc
ret
aaa
imul
lea
xlat
in
sbb
rorl
testb
into
xchg
adc
xor
addr16
push
les
into
add
push
je
rol
sub
mov
mov
inc
aaa
cld
cmp
xchg
push
in
xchg
add
ss
clc
cmpsb
ret
stos
pop
mov
cld
movsl
loopne
divb
cmp
js
fcoms
or
fdiv
mov
push
cmpsl
popf
cld
fistpll
inc
cmpb
pop
loopne
add
sbb
adc
push
cmp
aaa
cmpsl
stos
in
fcoml
sbb
mov
xor
sub
dec
mov
test
cmc
mov
or
pop
rorb
out
xor
outsl
mov
cs
push
jne
inc
mov
inc
xor
jecxz
ficompl
and
pop
and
in
rcl
cmp
das
xchg
xor
xor
enter
lret
sbb
data16
daa
ffree
inc
or
arpl
leave
ss
xchg
lods
and
mov
repz
fildl
call
xchg
shrb
mov
pop
lods
dec
mov
jo
adc
mov
notl
in
movsl
jle
xchg
in
sub
xchg
add
jp
movsl
cwtl
pop
enter
xchg
loope
inc
sub
aam
std
out
int3
dec
dec
push
cli
jo
in
not
jecxz
sbb
fmulp
repnz
or
adc
inc
mov
test
shlb
add
icebp
push
sahf
dec
add
push
cld
repz
dec
cmpsl
mov
rclb
sub
js
mov
cmp
sub
push
cmpb
push
rorl
xor
push
mov
fdivs
sbb
xchg
test
cs
lea
popf
movsl
bound
pop
sub
jo
push
push
fildl
jo
cmp
ret
out
loop
iret
cli
stos
pop
pop
push
out
fisubrl
jge
stos
pushf
mov
movsb
cmove
dec
or
mov
repz
pop
mov
out
mov
fstps
loop
test
imul
jle
cmpsl
mov
rclb
cmp
int3
sti
dec
add
pushf
mov
pop
stc
lret
inc
movsb
out
jae
add
jge
test
sub
jecxz
dec
lods
push
adc
fsub
pop
or
xchg
popa
pop
adc
rolb
fidivl
xor
jns
xchg
mov
xchg
mov
js
fisttps
add
test
fwait
loope
jl
adc
ret
out
pusha
cld
loope
dec
inc
out
andb
nop
push
mov
adc
addr16
pop
mov
push
adc
ror
ret
inc
lods
or
ds
mov
ss
fld
xor
out
mov
cmp
lret
aam
mov
out
or
pop
clc
outsb
and
xchg
pop
push
push
pop
lahf
sbb
push
ja
lret
mov
mov
sub
dec
out
inc
aaa
jbe
addr16
adc
and
sbb
pop
lods
xchg
rcl
insb
or
mov
clc
mov
rcll
cmc
lods
pop
pminsw
jmp
xchg
sub
in
push
shll
jae
push
dec
xchg
inc
ds
out
dec
pop
add
xor
xor
js
and
daa
arpl
scas
jle
dec
adc
test
out
pop
jne
mov
iret
and
test
jns
mov
adc
add
xchg
mov
int3
sahf
jmp
iret
outsb
adc
lea
in
fcomi
jecxz
pop
adc
cld
inc
movsb
test
ds
push
xchg
outsb
sbb
xor
mov
jno
mov
clc
sub
rorl
sbb
lret
adc
or
loope
sarl
adc
cmpsl
dec
pop
stc
adc
fisubrl
xchg
pop
dec
lods
mov
lods
xchg
pop
push
lock
cmp
inc
mov
jno
cwtl
iret
sub
sbb
cmp
test
scas
jb
mov
pop
jne
scas
in
xchg
xlat
inc
add
sbb
shl
sub
dec
ljmp
or
xchg
addr16
sub
mov
and
movsl
mov
rclb
fidivrl
cmc
lcall
pusha
cmpsb
xchg
imul
push
push
ret
js
mov
cltd
pop
cltd
push
adc
loope
lret
std
aad
jmp
dec
fldenv
pusha
test
or
mov
mov
sahf
jmp
cmp
mov
jmp
fld
cmp
sub
inc
cmpsb
movsl
imul
imul
cmc
inc
push
mov
xor
shl
out
xchg
enter
stos
or
rorl
inc
pop
jmp
outsb
icebp
xor
or
jnp
in
mov
mov
push
incl
sbb
adc
rclb
hlt
dec
imul
movb
scas
int
sbb
inc
and
push
jb
insb
addr16
je
jae
test
lods
inc
in
inc
or
xor
outsb
in
lret
stos
cmpsb
aad
push
test
sub
sub
shrl
push
mov
push
jg
mov
movsl
ds
adc
push
loop
lahf
lahf
notb
enter
in
push
sbb
mov
inc
stc
cmp
and
dec
jbe
jl
dec
testb
aaa
dec
pop
push
das
jnp
or
and
mov
aaa
cwtl
fwait
cmp
mov
icebp
push
cmpsb
sarl
dec
in
popa
es
movsb
addr16
cs
xlat
xor
fwait
mov
shll
ljmp
jl
pop
mov
sbbb
sub
mov
sbb
push
stos
push
stos
and
push
add
jnp
or
cmp
mov
sub
aas
popa
mov
decl
rolb
push
mov
daa
movsb
push
push
fldln2
out
shll
ljmp
cmc
popf
mov
iret
in
mov
movsl
mov
sub
or
mov
jl
cs
xor
push
pusha
mov
roll
fwait
out
js
ffreep
fisttpl
pop
add
xor
rcrb
pop
lret
sub
inc
lret
jo
aas
aas
ss
pop
mov
pop
dec
loopne
xchg
and
cmc
pop
popf
loopne
pusha
daa
icebp
gs
lock
pop
inc
lret
pop
pop
out
sbb
cmp
cwtl
out
cmpb
cmpb
inc
insl
mov
xchg
lret
cmp
stc
faddp
gs
imul
dec
in
inc
dec
sbb
jnp
mov
pusha
inc
lea
outsb
test
sbb
fstl
cltd
pop
sbb
or
push
stc
adc
scas
roll
mov
lret
or
gs
xchg
fnstenv
sub
dec
mov
test
test
pop
push
fs
daa
mov
jns
pop
mov
out
and
cwtl
pop
sub
cld
mov
add
fisttpll
lret
fisubrl
dec
xchg
fistl
cwtl
jg
jne
cmp
ret
jmp
push
arpl
fmull
pop
pop
imull
xor
fsubl
jno
mov
loop
fcomp
or
add
mov
ljmp
jl
mov
push
ss
jecxz
lods
mov
fbstp
jl
scas
push
dec
or
dec
test
repz
orb
sbb
fstpt
in
inc
xor
dec
mov
lcall
adc
xchg
test
scas
mov
jb
scas
jl
mov
sub
lds
sahf
pop
pop
mov
js
and
adc
shrb
mov
pop
jp
add
adc
cmp
xor
pusha
cmp
xchg
test
out
cmpsl
pop
loop
orl
fisubl
lods
dec
aaa
jge
xor
push
clc
jno
ss
test
jle
sub
push
test
jecxz
test
stc
or
into
rclb
scas
stos
ret
xchg
popa
in
dec
mov
jmp
xor
movups
xchg
stc
jbe
test
mov
jb
es
addr16
psllw
sbb
push
xor
fs
rclb
test
out
cvttps2pi
iret
mov
test
int3
ljmp
das
mov
daa
in
xor
out
or
mov
shrl
in
hlt
mov
pop
int
ds
insl
das
mov
inc
mov
and
pop
in
jb
cmp
mov
lret
insl
pop
inc
mov
repz
insb
shlb
and
lret
subl
int3
das
pop
hlt
cmp
mov
push
idivb
pop
and
sti
sub
testb
mov
insl
push
stos
sbb
push
lahf
int3
jnp
mov
sub
pop
aam
mov
push
dec
xchg
sbb
aad
pop
jb
sub
cltd
push
inc
dec
inc
push
cltd
rcll
mov
inc
lret
test
xor
sbb
jno
lods
cltd
roll
ud0
jp
roll
or
rorb
adc
add
mov
shrb
jmp
movsl
mov
add
xlat
out
mov
pop
fs
divb
dec
mov
sbb
xchg
sub
sti
jo
mov
bswap
es
push
loope
inc
push
pop
nop
das
cmp
iret
test
fstl
je
shl
testl
testl
das
mov
sbb
pop
in
or
adc
mov
dec
push
pop
push
push
fisttpll
mov
cmc
mov
aaa
loopne
gs
push
pop
mov
lds
int
adc
adc
shlb
push
pop
jo
add
xor
inc
pop
mov
sub
cmp
mov
loop
jns
dec
xor
addb
cmp
test
add
xchg
dec
ss
or
mov
or
mov
push
mov
arpl
out
sub
pop
mov
mov
outsl
inc
test
ret
cmp
fdivrs
ja
bound
xchg
jno
inc
jns
lods
pop
mov
mov
xchg
sti
int
jne
push
test
shll
cmp
aam
sbb
lods
rcll
mov
mov
jns
inc
ljmp
enter
loop
push
insl
int
aad
movsb
arpl
scas
test
add
jmp
pop
sub
cmp
iret
jnp
popa
mov
ret
jns
pop
adc
jecxz
push
bound
test
xchg
xor
in
push
lret
sub
jno
into
inc
dec
inc
mov
icebp
dec
ficoms
inc
cmp
popf
mov
and
notb
insb
fistps
hlt
leave
add
movsl
aad
inc
mov
ljmp
outsl
repz
idivl
imulb
test
push
mov
push
pop
sbb
or
rolb
inc
mov
lds
insl
push
add
inc
xor
bound
mov
jg
xlat
xor
jb
adc
addr16
fsubrs
mov
mov
lahf
sbb
cmp
mov
mov
dec
mov
aam
cmp
mov
out
ja
out
or
out
mov
cld
push
add
sub
cwtl
jg
cld
or
repz
jno
jbe
loopne
std
sub
jle
cmp
jbe
repz
jae
call
cmp
add
push
lods
cltd
sub
stos
lds
or
xor
int
aad
imul
out
add
jno
xchg
es
and
xor
inc
and
adc
jno
out
lret
fwait
outsb
push
sbb
fimuls
mov
jb
daa
cmp
mov
mov
mov
sahf
stos
out
daa
loopne
xchg
cli
cmp
movsb
sub
aas
xor
add
test
jae
addb
jnp
push
iret
sub
xchg
push
adc
popf
cmpsb
fldcw
clc
imul
out
ret
mov
lock
cwtl
ss
mov
mov
scas
out
icebp
push
xchg
fildl
pop
dec
das
push
std
stos
inc
test
pop
sti
mov
xor
and
daa
bts
fnstenv
pop
repz
ffreep
cld
mov
push
lret
jecxz
inc
inc
ret
xchg
inc
mov
std
add
jmp
sahf
lret
orb
add
adc
mov
adc
adc
cmp
cmp
sub
cmp
adc
sbb
mov
pop
mov
xchg
imul
add
loop
sbb
push
incl
mov
int
sti
pop
cmp
sbb
xor
xor
stos
ficoml
test
jns
sub
push
dec
adcb
or
xchg
sbb
adc
ret
movq
or
repz
mov
out
es
test
mov
hlt
push
in
push
cmpsl
xor
mov
inc
clc
pushf
mov
sbb
movsb
test
xchg
cmp
cmpsl
sbb
scas
pop
idivb
mov
pushf
mov
inc
bound
push
mov
pop
sbb
ret
int3
xchg
add
test
mov
ret
out
lds
xchg
fldenv
mov
dec
push
ret
jno
and
or
int3
dec
stc
add
pop
loop
ret
addr16
sbb
fisubs
insl
xor
inc
dec
sti
iret
dec
dec
repnz
adc
sub
call
fbstp
outsb
and
sub
mov
push
sbb
and
jg
mov
popf
inc
cmpsb
lret
stos
orl
mov
or
test
jno
jle
pop
push
or
pop
sub
and
aad
sub
mov
jo
stc
in
cmp
mov
jo
add
lret
jecxz
or
push
adc
xchg
mov
mov
cli
adc
imul
xlat
out
jmp
fwait
cltd
daa
xchg
sbb
inc
insl
xchg
enter
icebp
adc
test
popa
mov
xchg
pop
inc
sub
arpl
rorl
or
leave
cwtl
jge
dec
push
inc
test
push
add
test
cmp
dec
insl
arpl
data16
sbb
xlat
sbb
rol
xchg
fidivs
or
push
inc
or
or
push
lret
or
shrl
sub
stc
mov
rcrb
shrb
daa
cltd
lret
rcll
bnd
jp
jmp
shlb
inc
xchg
ror
xlat
jmp
ljmp
in
lods
xchg
mov
and
sti
jg
movl
mov
test
sub
rorb
mov
cmpsb
or
stos
mov
mov
inc
test
repnz
mov
xor
mov
mov
and
mov
inc
ret
mov
dec
dec
das
stc
cmp
and
inc
daa
push
inc
out
stc
adc
mov
dec
xchg
test
lahf
add
out
sub
or
cltd
out
into
mov
lods
push
ret
lahf
add
adcb
push
fs
pop
inc
out
out
insb
mov
push
pop
sbb
andl
fadds
inc
mov
cmp
xor
clc
test
mov
aad
pop
testb
mov
inc
cmpsl
mov
sub
enter
mov
das
dec
es
ficompl
cmp
and
sub
ds
popl
popf
int
sub
ret
loop
dec
out
in
push
xlat
or
fs
shll
jle
ret
stos
xor
xchg
enter
jne
mov
dec
into
in
stos
testl
inc
xchg
mov
pushf
and
or
jae
les
and
sbb
repz
leave
inc
xchg
fwait
lods
loopne
jecxz
or
mov
mov
hlt
call
jnp
sarb
adc
cmp
pop
std
mov
lods
sub
pop
and
xchg
incl
shlb
in
ret
pop
mov
sti
in
dec
add
in
mov
in
jns
icebp
inc
dec
sbb
add
out
mov
movsb
js
in
jecxz
or
cmp
cld
sbb
push
adc
sub
dec
add
int
dec
fcmovb
mov
pop
out
mov
dec
adc
mov
ss
cli
jnp
mov
scas
test
push
xor
or
ljmp
leave
pop
sbb
push
dec
aas
decb
jle
ds
mov
xchg
mov
aad
fstl
mov
mov
lret
add
mov
shll
or
jbe
lret
push
mov
lcall
cmp
dec
scas
dec
cmpsl
orl
push
xchg
fwait
push
outsl
add
aam
fdivrp
aaa
xor
sub
movb
jae
std
arpl
into
mov
scas
sbb
cmp
outsl
and
mov
fdivs
jne
call
xchg
dec
mov
pushf
pcmpeqw
push
mov
pop
or
or
add
dec
addr16
pusha
cltd
add
ss
xchg
dec
jo
mov
mov
xchg
xchg
adc
mov
cmpsb
inc
push
les
xchg
push
loopne
push
xchg
sub
imul
fldcw
lods
testb
push
inc
mov
jmp
ja
lock
push
sti
mov
push
test
inc
inc
icebp
sbb
ds
or
int3
inc
mov
or
jp
mov
add
mov
mov
bnd
pusha
adc
inc
xor
inc
and
bound
jb
and
shlb
mov
bnd
pusha
adc
inc
xor
inc
and
bound
jb
and
shlb
rclb
add
pop
and
inc
cmp
bound
jb
or
pop
mov
mov
nop
loop
bnd
lahf
mov
inc
lret
out
popf
decl
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jmp
ret
cmpsl
sbb
fucomip
jmp
xchg
imul
inc
sub
cmp
jmp
ret
test
sbbb
cmp
push
cmp
or
sbb
jmp
fcmovu
lret
mov
mov
jns
cmp
ja
inc
insl
pop
inc
inc
jo
jge
scas
stc
cmpb
mov
jge
mov
or
fisubrl
mov
vpmaxsb
push
addb
outsl
insl
lahf
popf
push
mov
adc
lods
inc
sub
or
out
adc
cltd
add
push
imull
test
hlt
mov
iret
imul
lods
mov
fsts
mov
pop
subl
subb
mov
push
mov
std
sbb
push
lea
mov
bound
cli
jns
test
movsb
and
and
push
or
push
sbb
cmp
sub
jbe
adc
cmp
adc
mov
sbb
adc
add
mov
stc
loop
fcmovnu
shrb
sbbb
dec
pop
pop
dec
sub
cmp
or
sbb
scas
loop
subb
shr
out
fdiv
sub
xor
xor
dec
jle
mov
mov
mov
cltd
mov
or
sbb
dec
push
insl
xor
sbb
loop
repnz
xchg
mov
xchg
imul
push
sub
cmp
or
sbb
jmp
ret
test
sbbb
dec
inc
pop
push
sub
cmp
or
sbb
jmp
inc
std
shlb
adc
lea
sti
push
mov
pop
or
enter
dec
xchg
jo
icebp
push
or
divb
repnz
in
or
jge
inc
es
cmp
fdivrl
adc
adc
rcr
dec
data16
call
shrl
lods
sarl
inc
in
rorb
sahf
add
mov
sub
sub
push
xor
sahf
add
dec
mov
jmp
sbb
xlat
push
push
mov
nop
pop
fildl
loope
cmpsl
jmp
cmovs
leave
mov
jl
arpl
xlat
xor
add
mov
lock
push
mov
sbb
inc
xchg
ret
lds
adc
dec
cmc
add
pop
test
push
fisubrl
mov
mov
nop
out
push
inc
popa
inc
in
popa
cmpsl
sbb
nop
fsubl
xor
xchg
xchg
andb
mov
fimull
loope
add
xchg
addb
inc
mov
xchg
bound
cli
popa
outsl
cmpsl
push
adc
cmpsl
inc
fs
sbb
adc
jmp
adcl
loop
into
sub
popf
xchg
fwait
xor
aas
mov
cmp
subb
push
mov
lret
ljmp
sti
enter
add
jnp
lret
fwait
lret
leave
sbb
popa
cmp
push
int
rol
insl
fadds
adc
pop
pop
inc
enter
mov
sub
mov
arpl
rcrl
into
cmp
shll
jg
jbe
xor
enter
jb
jl,pn
test
rclb
jo
jg
push
hlt
push
out
or
ret
shrb
hlt
inc
jp
sub
push
xor
fstps
mov
loop
dec
sbb
push
insl
jmp
iret
int3
xor
sub
and
gs
cli
sbb
in
fiaddl
pop
outsb
repnz
add
cmp
cwtl
test
test
dec
out
fsubr
or
sbb
xchg
xchg
loopne
push
xchg
daa
pushf
xchg
arpl
mov
xor
mov
fdivs
mov
mov
aam
ss
mov
sub
jmp
or
push
lock
in
stos
cmc
scas
idivb
bound
lock
repz
js
xchg
add
xchg
push
xorb
data16
or
push
inc
test
push
pop
ds
ljmp
dec
dec
fsubrp
cwtl
sbb
mov
call
dec
js
cwtl
mov
sahf
add
mov
xor
sbb
xorb
fsub
mov
mov
jbe
jno
sub
dec
mov
ret
iret
addl
mov
das
mov
cmp
pop
sub
sub
cmpsl
ret
fsts
cmc
mov
popa
sub
push
jmp
pop
mov
bound
jecxz
fwait
pop
fisttps
sbb
sbb
mov
mov
scas
add
jge
scas
mov
pop
mov
inc
mov
imul
push
mov
jbe
xchg
aas
and
jbe
ja
aas
sub
mov
and
jno
pop
popa
dec
jbe
test
adc
push
lret
xchg
adc
out
and
sub
mov
push
mov
shlb
mov
out
sahf
shl
jo
add
mov
aad
imul
adc
fucomi
lcall
imul
jle
add
push
leave
outsb
dec
dec
cld
popa
pop
fs
push
repz
xchg
xor
pop
lret
add
xlat
adc
out
mov
pop
pop
jg
dec
pushf
clc
pop
std
imul
repz
cmc
lret
in
mov
cltd
fdiv
pushf
and
addb
sub
dec
adc
fdivr
les
pop
clc
ljmp
imul
fld
test
sbb
xchg
jae
cs
lock
pusha
push
popf
dec
jbe
iret
xchg
sub
out
jmp
inc
sub
mov
in
popa
dec
nop
xchg
fwait
in
cmp
add
shlb
or
test
sar
add
xchg
rclb
mov
nop
fs
sbb
xor
outsb
xor
ss
sbb
in
lret
mov
cmp
mov
fisubl
les
mov
dec
ret
fidivl
pop
xchg
dec
xor
xchg
ja
push
pop
sbbb
orl
sub
das
and
repz
mov
mov
adc
ret
lock
add
xchg
push
inc
fndisi(8087
add
add
add
lods
loop
push
inc
jecxz
pop
sbb
and
adc
sahf
ror
addr16
push
inc
lret
test
ret
les
mov
jae
mov
adc
mov
popw
sbb
test
mov
int
mov
gs
or
add
incb
lock
add
orl
and
dec
xchg
add
movsb
sbb
test
push
into
adc
adc
mov
jno,pt
mov
test
mov
cld
arpl
in
test
dec
sub
mov
or
mov
cmp
orl
xchg
hlt
in
xchg
inc
out
lret
stc
inc
push
pushf
mov
adc
adc
or
ja
dec
pushf
imul
pop
js
adc
sbb
aas
leave
xor
mov
outsl
mov
test
cmp
and
mov
push
adc
push
mov
jp
adc
divb
cmp
mov
inc
cmp
jns
jae
fwait
and
popa
repz
lcall
pop
fnstcw
daa
xor
add
xor
push
lods
addb
push
and
mov
inc
mov
daa
jo
sbb
xchg
xor
add
aas
das
inc
mov
cwtl
mov
or
pusha
int3
and
add
cltd
cmp
jae
mov
insl
test
movsb
outsb
cmp
mov
sbb
test
mov
jmp
hlt
sub
sub
pop
dec
cmp
jge
and
mov
imul
pop
cmp
jl
cwtl
xorl
push
xchg
imul
jno
mov
pop
enter
bound
xchg
or
push
xor
loope
imul
mov
cli
divb
sub
into
pop
push
add
mov
in
inc
cmp
cld
dec
xor
jns
xchg
clc
push
adc
sarb
aad
test
jmp
adc
mov
outsb
xchg
xchg
sub
and
popa
std
add
call
repnz
lock
test
pop
mov
pop
push
pop
inc
rcl
cmp
jae
dec
or
mov
mov
roll
sti
sub
sbb
into
and
movsb
dec
cmpsb
movsb
rclb
ret
stos
stos
lock
adc
xor
jle
fwait
in
dec
push
push
call
cmc
adc
sbb
jb
dec
int3
or
add
in
inc
sti
aaa
mov
cltd
push
and
pop
ljmp
xchg
cmp
push
mov
mov
pop
cmp
jmp
andb
xorl
and
mov
cmc
pop
les
fldl
in
lods
lret
mov
jecxz
adc
add
inc
push
mov
pop
loop
inc
dec
hlt
add
stos
enter
ljmp
mov
mov
mov
sbb
aas
int3
jmp
lret
sbb
push
pcmpgtb
data16
dec
add
jb
aas
mov
jne
push
xchg
leave
shl
aaa
in
repz
fsubl
pop
jg
jnp
sub
bound
jge
fs
ds
push
push
sarl
mov
pop
inc
sbb
stc
push
sub
dec
xchg
push
jnp
ret
int
push
rorb
cmp
repnz
loope
stc
cmpsl
fs
pmuludq
push
inc
fmull
jbe
sahf
lcall
xchg
int3
fwait
mov
or
mov
and
mulb
jns
cmp
xor
imul
fbld
pop
fadds
lahf
std
cmpb
xorb
lods
mov
xor
fwait
inc
insl
xchg
test
int3
in
int
pop
int
mov
xorb
mov
out
mov
mov
sbb
mov
pop
int3
mov
xor
sbb
repz
push
mov
fidivrl
lret
shll
inc
nop
cmp
imul
out
bound
xchg
movsl
cs
adc
flds
dec
jmp
enter
mov
pop
imul
jle
lret
pop
or
mov
mov
add
adc
pop
fmuls
mov
inc
rcl
adc
xor
fldt
jmp
mov
jge
cmp
lea
sub
add
inc
out
sub
jnp
mov
scas
dec
mov
sarl
cmc
or
sub
mov
sub
bound
mov
pop
aad
adc
push
aas
stos
aam
cmpsl
xlat
and
lock
add
and
mov
or
out
cli
js
popa
push
lods
mov
lods
sahf
xchg
push
out
lods
adc
cmpsl
dec
add
inc
xchg
mov
jl
test
mov
adc
pushf
in
aam
rcr
sti
push
mov
mov
ja
fbstp
cmp
out
fdivrp
insl
pop
out
jo
popf
mov
adc
mov
mov
div
jnp
pop
push
push
stos
subl
addl
xor
push
cmpsl
cmp
mov
cmp
pop
mov
mov
loop
mov
jmp
jns
jbe
add
mov
scas
xor
and
push
and
adc
add
dec
pop
cs
mov
pop
adc
xchg
mov
jmp
jmp
mov
lods
xchg
pop
dec
adc
lea
scas
jl
sahf
and
ljmp
cmp
scas
cltd
iret
idivb
fstpl
shrb
xchg
sbb
hlt
ds
push
mov
sbb
outsl
jge
scas
and
sub
enter
mov
inc
xchg
mov
mov
mov
mov
jp
rolb
sub
or
dec
sub
aas
push
dec
insb
mov
pop
mov
or
jmp
out
jb
cmp
dec
stc
rcr
fdivl
decl
sub
lods
mov
or
or
sub
mov
fs
test
out
sbb
fstpt
sbb
dec
enter
fistpl
into
xor
lods
fmull
inc
fwait
movsb
cltd
daa
iret
xchg
sarb
mov
mov
push
and
mov
dec
iret
fisubrl
push
or
ret
mov
inc
insl
xchg
mov
ja
sub
ret
dec
dec
mov
jmp
lret
and
xor
fsubrs
jp
clc
sub
js
mov
scas
nop
jmp
xchg
sbb
scas
adc
insb
jbe
lds
and
jge
adc
ljmp
cmp
mov
pushf
clc
scas
dec
inc
jbe
sti
mov
mul
mov
movsb
mov
sbb
pop
fisubrl
dec
loop
jp
mov
cmp
test
or
inc
cmpsl
int
lea
js
xchg
leave
jnp
ret
jae
mov
lahf
arpl
cmp
inc
jle
stos
jne
sub
scas
pop
pop
dec
xchg
xor
vpmacsdqh
sti
inc
fisubs
cmovns
add
sbb
cmp
mull
push
scas
add
inc
jg
adc
inc
in
xchg
pop
sbb
cs
dec
popa
test
adc
inc
xlat
and
dec
adcl
or
dec
stos
mov
push
mov
je
adc
mov
js
push
inc
mov
push
stc
test
aas
and
cld
in
lods
or
cmpsl
pop
add
cmp
xor
mov
jo
stos
cli
mov
fisttps
aas
lods
cmp
fwait
cltd
pop
push
out
jae
lret
imul
jno
into
xchg
sbb
cmc
lds
push
xlat
push
mov
ds
push
jmp
xlat
repz
mov
xchg
insl
jb
push
stc
psadbw
mov
dec
int3
push
inc
outsl
mov
sbb
mov
sbbb
dec
jl
sub
inc
hlt
mov
ja
rcrl
es
jo
filds
cmp
fmul
insb
push
mov
sub
sbb
std
lods
test
mov
imul
xor
in
xchg
sub
fstps
or
inc
push
loopne
cmc
mov
fisttps
jb
sub
mov
xchg
in
pop
adc
and
adc
test
xchg
lcall
ret
loop
icebp
fnstcw
pop
iret
iret
or
shl
mov
insl
sarl
subl
movsl
xchg
pop
int3
sub
xor
test
mov
rclb
dec
fidivrs
push
add
adc
cwtl
and
aaa
aas
cmp
jle
stos
ljmp
and
and
sub
jle
es
les
mov
and
mov
sbb
mov
pop
sarb
roll
jb
pop
inc
jbe
imul
sbb
mov
icebp
and
xchg
jp
xor
pop
cmp
ss
jl
or
ja
jns
inc
inc
mov
shll
xor
sub
cmp
loopne
rcrb
addr16
xchg
adc
fnsave
xorb
test
sub
jae
sbb
aas
mov
lods
mull
aaa
push
test
or
iret
pop
out
push
cwtl
cmpl
pop
push
sub
jecxz
mov
push
jge
cmp
xor
add
and
mul
xchg
test
xchg
mov
iret
push
daa
mov
adc
and
sub
lods
js
adc
jne
rcll
xor
pop
int3
jl
cwtl
pop
sbb
xor
aaa
xchg
addr16
push
iret
or
ftst
ss
jns
ds
fidivrl
push
mov
jne
xorb
push
imul
out
dec
xchg
push
or
std
std
loopne
cli
dec
xchg
rclb
jle
in
sub
hlt
mov
push
mov
xchg
js
lret
xor
jl
outsl
jmp
mov
aaa
call
xor
inc
fistpl
out
ret
cli
xchg
pop
dec
xor
lea
int
mov
iret
push
xchg
jp
insb
shlb
push
inc
pop
push
adc
pop
leave
sti
roll
xor
mov
into
jl
inc
mov
jbe
shlb
in
add
shrl
adc
out
push
xlat
push
jbe
sub
insb
sbb
and
mov
jecxz
fsubrs
xchg
dec
popf
and
mov
pop
stos
ljmp
mov
mov
mov
xlat
or
cltd
xchg
xchg
push
pop
cmp
fidivrs
stos
xchg
jp
cpuid
cmp
xchg
stos
inc
sti
shl
clc
lock
mov
sbb
cmp
jmp
in
mov
sub
dec
pop
sbb
inc
xchg
pop
nop
and
mov
xchg
push
lcall
dec
lret
cld
xchg
into
cs
mov
lret
push
adc
push
push
jns
arpl
inc
xchg
mov
or
lds
ds
sub
pop
fnstcw
gs
mov
jbe
cli
mov
inc
or
int3
out
adc
sub
call
notb
les
xchg
in
push
mov
daa
push
sbb
ja
js
add
leave
mov
jne
scas
xchg
aas
loop
mov
scas
mov
push
or
or
mov
xor
jns
pop
int
and
sar
icebp
or
push
imul
xchg
xchg
popa
pop
adc
mov
push
or
adc
push
dec
push
adc
popf
pop
inc
mov
enter
testb
pop
push
mov
arpl
insb
lods
mov
adcb
mov
mov
arpl
adc
push
adc
jge
xchg
dec
cmp
repnz
int3
jo
pusha
adc
mov
mov
jnp
aad
adc
mov
add
icebp
sbb
cmc
cli
push
les
jp
ds
and
sti
push
test
ret
sbb
cmp
mov
inc
popa
pop
daa
push
xchg
or
push
mov
jl
rolb
xor
test
push
cmp
sbb
dec
flds
bound
imul
pusha
mov
mov
movsb
testl
pushl
movsb
sbb
out
enter
ret
pop
mov
push
popf
aas
push
fld
cmp
pop
cmpsb
stos
inc
inc
fnstenv
ret
lahf
scas
mov
sbb
mov
pushf
adc
sbb
add
ja
or
in
mov
cwtl
lret
jnp
mov
outsl
popa
pop
inc
dec
stc
or
xchg
push
dec
test
or
nop
in
inc
pop
push
sbb
lret
popa
inc
mov
jecxz
nop
fs
push
mov
das
mov
popf
data16
leave
mov
fs
or
into
out
imul
add
mov
out
cmp
push
stos
mov
test
push
dec
lea
faddl
add
fincstp
jns
addl
add
int3
cltd
dec
aas
cmpsl
rcrl
jge
out
in
jb
mov
in
and
daa
call
jo
movsl
jl
inc
fs
xchg
sub
xchg
adc
mov
enter
xchg
loop
insb
adc
jbe
clc
mov
repz
pop
sbb
notb
adc
mov
mov
mov
jns
mov
cmpsl
jle
aaa
mov
call
mov
pop
xor
mov
cmp
mov
pop
push
addl
jmp
jnp
inc
rclb
data16
sub
jbe
nop
cmpsb
popa
dec
mul
jb
and
adc
adc
add
testb
jecxz
aaa
testb
lahf
xchg
add
pop
adc
stos
sub
sub
je
and
sahf
jmp
mov
add
stos
call
sbb
test
fbld
je
pop
xchg
xchg
jne
inc
out
xchg
sahf
pop
or
inc
pop
outsl
jo
jg
out
out
push
cmp
mov
test
mov
mov
les
jno
call
and
jp
xorb
nop
xchg
int3
cmc
je
pushf
mov
popa
push
movsl
or
lcall
sub
hlt
shrb
into
cmpsb
cmpsl
gs
jmp
movsl
mov
les
insb
movsl
ficompl
dec
sub
sbb
add
clc
out
leave
xchg
aas
mov
dec
inc
push
adc
mov
sub
jbe
dec
adc
iret
mov
jbe
loope
shll
mov
push
pop
jp
insb
sub
cmpsb
fisubl
mov
ds
cmp
mov
xchg
imul
mov
mov
push
pop
mov
xor
cs
scas
and
nop
inc
pop
bound
into
dec
pop
mov
int
cmp
mov
mov
ret
cs
dec
icebp
outsb
andb
roll
les
add
pop
and
gs
cmp
cmp
xor
sub
mov
aad
or
shlb
ja
fbstp
xor
sub
lcall
rol
xchg
dec
out
les
cltd
adc
adcb
xor
movb
push
test
mov
mov
es
mov
sub
sub
push
push
mov
push
int
hlt
mov
out
push
sar
leave
cmp
push
jmp
pop
jmp
jnp
sti
pop
jae
test
and
inc
inc
cld
iret
mov
cmp
scas
out
arpl
dec
or
inc
adc
mov
je
jg,pt
sbb
outsl
push
mov
lds
cli
inc
sbb
je
xchg
divb
mov
push
lock
xor
out
in
and
xchg
sub
lods
rolb
mov
push
xchg
xchg
xor
faddl
mov
cltd
call
mov
bound
icebp
data16
out
pop
iret
add
push
lret
call
ss
rclb
movsb
les
mov
inc
lds
pop
cli
int3
fistpl
and
repnz
pop
add
es
repz
pushf
cwtl
sbb
in
or
insb
xor
daa
pop
xchg
inc
xchg
xchg
sub
inc
push
sti
cmc
sbb
xchg
mov
cmpsl
call
hlt
es
in
addl
mov
add
cmp
sti
aam
lock
mov
mov
das
mov
lcall
lock
mov
jnp
push
mov
daa
xchg
pop
jg
dec
js
mov
ret
test
sbbb
dec
inc
pop
push
sub
cmp
or
sbb
jmp
ret
test
sbbb
dec
inc
pop
push
sub
cmp
or
sbb
jmp
ret
test
sbbb
dec
inc
pop
push
sub
cmp
or
sbb
jmp
test
sbbb
jecxz
pop
and
idivb
insl
adc
add
xor
and
lahf
mov
push
pusha
mov
mov
sub
or
or
cli
add
xor
and
push
mov
out
xchg
jp
push
pop
mov
sub
sbb
or
cli
add
xor
and
push
mov
bound
fidivrs
mov
jbe
jg
jge
mov
lcall
leave
inc
jns
lcall
add
xchg
mov
pop
mov
cli
mov
outsb
mov
inc
lods
stos
inc
daa
mov
lahf
add
pop
xchg
dec
movsl
pop
pop
sub
mov
or
xor
divl
fs
inc
cmp
xchg
jp
imul
mov
adc
lcall
and
xchg
bound
xchg
xchg
dec
pushf
enter
or
outsl
xlat
or
cmp
adc
or
inc
inc
icebp
lret
daa
mov
aam
aaa
movsl
fisttps
imul
cld
icebp
fs
and
adc
lds
outsb
dec
das
mov
mov
cmc
fdivrp
add
xor
and
push
mov
bound
mov
mov
sub
sbb
dec
push
cli
jbe
pop
fwait
dec
mov
xor
push
jmp
xchg
or
jae
or
cmp
dec
ret
push
xchg
dec
test
or
xor
cmp
lods
mov
ja
add
push
mov
jb
bound
mov
mov
sub
sbb
or
cli
add
xor
and
push
mov
bound
mov
mov
sub
sbb
or
cli
daa
ret
or
sub
push
je
sub
inc
and
pusha
sahf
cmp
xchg
into
mov
aad
movsb
push
inc
inc
jns
les
and
cmp
push
movsl
pop
push
mov
mov
ljmp
aaa
mov
pop
or
cs
sbbb
in
adc
outsb
add
das
mov
add
mov
adcl
or
sahf
clc
call
mov
into
shll
scas
adc
scas
jbe
xor
push
shll
cmpsb
jne
fistl
in
fprem
sbb
jbe
push
pop
jle
mov
rclb
mov
lds
repz
cwtl
fmul
out
hlt
adc
dec
sbb
fs
into
aad
shrb
fadds
add
inc
scas
push
cmp
les
mov
inc
jle
or
cmpsb
xor
andb
and
dec
mov
icebp
inc
fisubrl
mov
adc
test
je
loope
jno
mov
fsubrp
imul
inc
icebp
sbb
data16
ret
inc
vminpd
es
sarb
fmuls
mov
jbe
mov
pop
outsb
pop
fsubrs
jae
cld
bound
lds
xchg
pusha
cwtl
sbb
ds
sbb
lea
leave
push
into
xchg
and
in
lret
or
mov
cmpsl
pop
cmpsl
lret
stos
xor
inc
mov
in
xchg
or
inc
cmp
push
inc
sbbb
mov
cmp
sub
rorl
add
xorb
push
and
pop
cmpsl
push
or
aas
dec
es
stos
mov
popf
addr16
mov
push
std
dec
sub
dec
dec
out
stc
call
inc
push
adc
jo
or
int
mov
mov
les
push
push
iret
ss
out
push
psubsw
test
push
cwtl
hlt
shrb
push
or
ss
je
inc
rclb
mov
push
xchg
pop
cltd
mov
cs
test
adc
push
sbb
xchg
pop
mov
mov
xlat
sbb
jg
rcrb
push
lds
stc
sub
hlt
pusha
sbb
xor
clc
shlb
jbe
adc
je
pusha
inc
jnp
xchg
adc
pop
cmc
jae
fisubs
or
adc
adc
js
pop
add
test
repz
inc
or
dec
jge
and
in
test
in
cmc
jp
adc
icebp
push
fwait
xor
int
test
add
cmp
mov
mov
sub
mov
jl
mov
test
out
mov
sarb
popa
push
pop
cmp
push
inc
add
punpckhbw
ds
fisubl
lods
into
push
call
lret
adc
jmp
hlt
xchg
ds
mov
jmp
roll
inc
ja
cli
sub
subb
inc
loopne
adc
incb
cmc
fs
inc
jns
out
jp
pop
mov
pop
out
or
je
repz
jb
fistpll
ljmp
jne
sarl
imul
push
repnz
add
jne
loop
adc
push
mov
and
mov
lahf
jg
add
cmc
mov
popa
push
sbb
jp
sbb
mov
push
je
inc
push
lds
or
adc
out
in
int
rcl
cmc
imul
movsl
xor
addr16
cmp
jae
aam
jb
add
test
mov
jo
adc
loopne
inc
aam
dec
fsincos
xchg
or
cmc
mov
mov
jecxz
xchg
dec
leave
lea
arpl
push
jle
out
cmp
aam
pop
lcall
or
inc
lcall
push
fbld
lds
call
jnp
cmpsl
lock
sbb
mov
jle
push
dec
ret
ret
aaa
mov
cmp
jle
add
inc
fwait
xchg
mov
rcr
aas
xor
into
xor
shlb
xchg
and
jae
inc
push
xor
add
jbe
cli
addps
pop
mov
ja
xor
scas
cmp
push
mov
in
mov
stc
clc
pop
lock
outsl
fnstcw
inc
dec
nop
lret
add
xchg
or
mov
movsb
xchg
mov
inc
or
andb
cmc
repnz
inc
lds
pushf
mov
addr16
lret
add
mov
les
adc
jno
loop
in
inc
fsubrp
pusha
mov
add
xlat
popa
pop
xchg
sarl
cmp
test
adc
leave
cmpsb
jns
jg
mov
dec
pushf
test
out
lea
mov
test
mov
push
push
mov
push
mov
xchg
jbe
fiadds
das
mul
mov
mov
aaa
aam
xchg
loope
mov
push
aam
cwtl
mov
jae
cmp
jecxz
inc
out
popa
daa
adc
push
mov
bnd
adc
out
adc
push
sbb
nop
inc
mov
enter
dec
pop
dec
mov
jbe
icebp
mov
adc
lods
dec
jecxz
ret
pop
dec
dec
xchg
aaa
xchg
mov
rcrl
imul
mov
adc
jb
add
shll
sti
jno
mov
xlat
mov
test
nop
mov
aas
mov
and
xchg
sahf
lahf
mov
jbe
testb
test
cmovle
sti
movsl
je
mov
lds
out
xor
test
fcmovbe
push
pop
clc
inc
jmp
cmp
imul
lods
mov
stos
mov
push
cli
addb
sub
sar
cmp
pop
shl
dec
mov
cmc
mov
fwait
sti
insb
push
push
out
or
repz
push
ss
sahf
add
adcb
mov
jmp
cmp
popf
adc
cmpsl
sbb
and
icebp
jnp
iret
pusha
nop
ja
inc
inc
lret
inc
test
xor
cmp
jl
pop
cwtl
xor
gs
mov
mov
popf
inc
idiv
idivb
call
lahf
test
push
movsl
xlat
xchg
xchg
sbb
loop
out
imull
call
aad
pop
add
fldenv
push
mov
cld
aas
pop
pushf
stc
xor
or
or
stos
lret
rcr
loop
iret
fistpl
mov
shlb
mov
xchg
cwtl
adc
mov
mov
test
flds
addl
ret
int3
orl
je
pusha
mov
mov
xchg
mov
push
adc
cmp
loop
mov
inc
sub
std
cmp
mov
adc
xchg
xor
jle
stc
sub
out
scas
icebp
jecxz
inc
mov
fcoms
xchg
imul
decb
push
cltd
outsb
jp
out
xchg
rcrb
jo
adc
shl
adc
fdiv
mov
inc
mov
fdivrl
fs
adc
sub
imul
or
cmp
jle
jge
nop
add
mov
sbbb
fistl
dec
jnp
push
push
mov
lods
out
pop
adc
push
push
fisttpll
cmp
lcall
ja
pop
fsubrp
test
inc
dec
jns
and
insb
pop
lret
adcb
add
imul
mov
mov
mov
outsb
adc
out
nop
jl
push
dec
sbb
sub
mov
aad
sub
cmp
or
ds
mov
inc
mov
cmpsl
xchg
inc
push
inc
cmp
cmp
xor
or
pop
inc
push
sbbb
push
xchg
out
mov
inc
lock
push
stos
cmp
xchg
xor
hlt
cmc
sbb
mov
jle
cmc
xchg
cld
xchg
imul
data16
dec
mov
or
adc
push
sub
ss
cmp
jecxz
adc
insl
adc
into
mov
rcrb
adc
cmp
outsl
mov
js
hlt
inc
scas
mov
dec
cmp
ret
or
or
fists
insl
inc
xorb
fmull
jne
jbe
int3
sbb
or
stos
test
xchg
mov
cmp
js
inc
scas
call
imul
insl
push
sub
fs
cltd
pusha
and
pop
mov
loope
mov
in
mov
mov
jp
fistps
aaa
movsl
call
stc
rcrl
out
dec
lods
mov
bound
aaa
jne
pop
jne
mov
fwait
out
jg
iret
das
iret
push
hlt
and
loop
lods
dec
js
mov
cmpsb
mov
ficompl
sub
fcos
jg
sub
or
dec
je
lds
mov
fidivs
rorl
je
mov
pop
push
or
imul
inc
pusha
push
xchg
inc
and
jmp
mov
shll
fstpt
xor
cmc
mov
sbb
arpl
mov
inc
or
jae
jecxz
push
pop
dec
sarb
movsl
hlt
inc
push
clc
jp
mov
test
jl
cmc
pop
enter
ret
orl
shl
xchg
lcall
pushf
hlt
push
dec
ret
xlat
repz
mov
pop
repnz
pop
out
bound
xor
cmp
push
pop
es
mov
divl
mov
inc
sbb
and
fistps
stos
inc
cmp
jne
orb
test
je
or
hlt
xor
insl
push
pop
ja
in
test
lea
xchg
pop
sti
nop
and
sti
jmp
push
gs
push
repz
cmp
cmp
cwtl
xor
or
push
ds
mov
js
cmc
fs
out
insb
sbb
xchg
sub
mov
cs
bound
sbb
cmp
dec
mov
xchg
cmp
insl
sub
std
inc
cmp
fcmovne
xchg
fstl
push
adc
pop
mov
das
fwait
mov
and
popa
and
stos
adc
sbb
out
xchg
pop
cmpsb
jbe
jmp
jnp
sahf
cmpsb
dec
dec
pop
out
arpl
cli
xchg
push
pushf
xchg
int3
or
pop
nop
inc
cmpsl
dec
frstor
ds
out
cmpsl
loopne
dec
mov
mov
mov
sub
mov
cmpsl
pop
push
push
mov
inc
shll
jb
sbb
sub
pop
movsl
adc
jne
sbb
lcall
insb
mov
cmp
or
dec
push
icebp
mov
jp
cmpsb
jge
das
cmp
add
lret
imul
daa
sub
divl
add
adc
sub
fisttpl
stos
stc
shlb
mov
popf
sarb
test
add
xchg
in
or
gs
jmp
lock
ret
clc
mov
stc
stc
stos
mov
dec
adc
jmp
or
lds
and
xor
xor
daa
mov
add
leave
adc
nop
les
loope
xchg
mov
shlb
cmpl
fists
imul
nop
sbb
in
push
sbb
sbb
in
repnz
inc
aaa
or
push
push
das
loope
cwtl
lret
pusha
enter
daa
shrb
mov
or
dec
arpl
popa
mov
fisttps
pop
pop
dec
mov
push
adc
out
mov
mov
push
jnp
lcall
mov
or
or
rorb
adcb
stos
aaa
ret
sub
adc
cmc
xor
popa
insb
ret
push
push
mov
push
cmpsb
js
fimull
or
mov
add
fisubs
or
imul
xor
lret
repz
jno
pop
sbb
out
cmp
dec
mulw
push
sbb
xor
loope
insl
stos
adc
pop
stos
adc
push
xchg
enter
addr16
mov
inc
dec
sub
push
and
mov
lahf
lret
jo
or
scas
loop
in
inc
sahf
mov
pushf
loop
ljmp
and
xor
inc
adc
sub
add
and
jb
fsubrl
xor
loope
into
pop
pop
loope
movsl
repz
lcall
lret
jno
imul
fisttpl
sub
scas
jl
outsb
add
mov
sbb
lds
jmp
adcl
jle
fwait
add
inc
sbb
mov
repz
lds
movsl
ret
shrl
sahf
loopne
xchg
dec
dec
loopne
xor
sub
mov
mov
dec
pop
dec
mov
lret
iret
jp
sbb
mov
push
xor
push
mov
dec
mov
das
cmpsl
lock
out
sub
inc
enter
lcall
inc
inc
sbb
add
push
pushf
repz
adc
push
fcmovnb
inc
aas
ljmp
popf
das
lock
xchg
inc
mov
jns
data16
push
mov
insb
jmp
cmpb
mov
and
ret
xchg
mov
mov
inc
subl
and
jp
rorl
cmc
xor
mov
cmp
cli
and
scas
icebp
lahf
into
adc
fwait
test
filds
and
hlt
or
xor
ss
dec
movsl
loope
jge
ret
enter
loopne
movsb
push
mov
fsts
pop
testb
add
mov
dec
dec
fs
int3
movsb
mov
mov
jo
ljmp
xchg
pop
mov
scas
test
dec
in
lock
aad
adc
out
inc
cmc
lock
insl
ja
sub
mov
sti
mov
aas
arpl
or
adc
and
push
add
popf
add
push
mov
mov
jge
xor
jge
pop
loop
lods
jne
dec
mov
fsubrl
outsb
sbb
lea
pop
dec
mov
cmpsl
into
aam
mov
neg
scas
not
sub
sbb
sub
into
dec
mov
fidivl
adc
fimuls
clc
inc
hlt
xchg
pop
inc
out
rcrl
or
arpl
mov
jns
es
and
push
sbb
test
fadds
in
and
cmp
add
or
cs
pop
mov
lret
inc
scas
das
jge
add
int
jp
outsl
xchg
adc
dec
sbb
or
cmp
pop
push
sti
push
aas
cmp
xor
subl
sub
and
mov
sbb
mov
sahf
mov
cli
iret
fsubrs
sub
jge
call
cwtl
mov
sbb
fbld
shll
int
fs
push
fincstp
jp
lds
push
mov
pop
rcrb
outsl
fwait
test
gs
in
test
es
popa
sub
enter
push
hlt
orl
cmpsb
jbe
xlat
sub
inc
fcomi
movsl
int
ffree
and
adc
ljmp
dec
or
mov
add
or
sahf
push
push
mov
rcll
cmc
pushf
and
pop
inc
pop
out
sarb
push
push
iret
mov
sbb
cmpsl
loop
ficompl
mov
or
cs
mov
mov
fsubr
push
jl
int
out
mulb
loop
bound
or
add
dec
mov
cld
mov
dec
pushf
and
add
stc
cmp
outsb
lods
sbb
mov
sub
sbb
mov
inc
dec
push
neg
pop
call
xchg
push
push
push
js
push
inc
or
cmpsl
xchg
mov
or
jmp
sub
adc
lret
dec
mov
cltd
fs
cmp
aas
in
cmc
insb
or
push
je
cmp
pop
icebp
xchg
pop
leave
sbbl
adc
inc
int3
cmp
arpl
pop
ret
mov
adc
push
jne
imul
jmp
imul
push
sub
orb
sub
cwtl
fcompl
in
bound
pop
loope
pop
inc
fsubrp
cmpsb
pop
and
push
enter
push
pop
mov
dec
out
and
inc
lods
out
mov
mov
mov
inc
push
out
test
cmp
dec
movsb
mov
mov
add
test
das
pop
and
sbb
pop
mov
std
ss
jp
xchg
sub
inc
rcr
adc
cmp
movl
jno
sbb
shl
or
and
mov
movsb
sub
in
inc
or
addl
aas
xchg
into
cmp
sbb
mov
fisttpl
jg
orb
test
jno
dec
dec
ds
xor
mov
adc
sbb
pusha
in
xlat
js
movsl
jg
mov
dec
ret
test
lret
dec
imul
ljmp
mov
dec
dec
loopne
fdivl
fistps
std
addr16
insl
cli
out
xchg
fstpl
repz
jbe
cli
sbb
imul
aas
jbe
xchg
adc
xlat
idivb
pop
dec
pushf
adc
push
jge
adc
jmp
js
add
jae
repz
je
or
out
xchg
sbb
inc
jno
push
jp
js
add
paddusw
fsubr
movsb
outsl
jb
das
es
outsl
scas
ss
and
and
jns
xorb
outsb
xchg
sub
adc
pop
addb
pop
bnd
mov
stc
mov
sahf
pop
stc
cli
pop
and
jg
cmp
xor
jl
jnp
inc
push
inc
xor
call
adc
fiaddl
jmp
lock
int3
out
mov
or
lock
out
xchg
gs
int
ja
jge
fidivrl
xlat
push
adc
push
stos
xor
jge
scas
loop
jmp
fsubrl
xor
cmp
xchg
or
inc
pusha
rcrl
iret
cwtl
cmpsl
jmp
pop
push
lods
ja
rorl
jns
lock
pop
xchg
and
out
inc
pop
aas
add
lea
repz
sub
adc
add
lahf
enter
out
repz
imul
dec
push
pusha
aad
into
mov
out
jmp
fdivrl
lret
movsb
cmpb
stc
jnp
je
scas
arpl
jl
jge
das
jbe
adc
inc
fbld
das
jp
repz
ret
mov
jo
pop
repz
cmpsl
in
fidivrl
inc
xchg
shlb
add
xchg
out
stos
nop
test
int
cmp
or
xchg
mov
push
sbb
test
pop
mov
cmp
xchg
hlt
testb
add
mov
mov
push
mov
and
mov
test
jp
push
jp
or
daa
dec
dec
mov
mov
mov
xchg
sub
sahf
fisttps
int
jae
xorb
xlat
push
adc
movsb
hlt
xchg
sbb
jno
test
out
mov
lods
icebp
loopne
sub
push
sub
je
out
lods
rorb
andl
xchg
pop
xor
mov
jl
pop
ljmp
and
ret
mov
jno
sbbl
insl
lock
lds
and
push
aam
pop
fstpl
mov
or
mov
repz
es
in
mov
xor
aas
mov
clc
adc
push
push
xorl
xchg
jno
mov
mov
das
mov
lahf
pop
cltd
or
movsl
cld
mov
cmpb
in
sub
sub
hlt
dec
add
dec
adc
mov
jae
cmp
sbb
jb
push
loop
sub
stc
shl
ss
aam
mov
jecxz
adc
push
mov
mov
add
push
pop
cmp
sbb
movl
addl
xor
fildll
imul
js
cli
sub
mov
xchg
push
testb
jmp
insb
outsb
insl
xor
xor
sbb
movsb
adc
out
cmp
in
xchg
cmpsl
lea
xchg
lcall
aaa
mov
vmulps
mov
outsl
popa
icebp
testb
jmp
int3
pop
je
push
test
lds
adc
or
cmpsb
adc
fbstp
push
jmp
xor
mov
ret
cmp
cmp
push
dec
cli
je
lahf
test
jne
mov
push
outsl
mov
push
and
dec
cli
cmp
sub
loopne
iret
neg
rcll
or
jmp
and
rdtsc
or
and
fcomps
movsl
aaa
adc
mov
and
add
sbb
out
push
nop
add
loope
fxch
stc
sub
sbb
mov
xchg
int
xor
lret
test
dec
nop
mov
push
ret
jmp
fs
sub
cld
fmuls
ljmp
jnp
mov
outsl
fs
push
sub
ja
out
shll
repz
daa
rcrb
xor
dec
xchg
cmp
push
rol
sub
loope
int3
js
mov
out
pop
xchg
cmp
add
leave
dec
dec
sbb
rcrb
pop
jo
sarb
jae
inc
add
in
mov
cmp
out
jmp
inc
sub
sub
ja
cltd
je
into
jbe
scas
mov
jo
sub
iret
xor
add
popf
cmc
cmp
test
insl
and
jnp
cmp
xchg
xor
adcl
xlat
xor
xchg
or
add
ret
pmaxub
add
fistps
lret
inc
stos
jb
bound
mov
mov
sub
sbb
or
cli
add
xor
and
push
mov
bound
mov
mov
sub
sbb
or
cli
sub
fisubl
lret
inc
stos
jb
loop
xchg
jp
push
pop
mov
sub
sbb
or
cli
add
xor
and
push
mov
bound
jp
rcrb
mov
aad
in
cmc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lock
ds
fstpl
add
add
add
push
add
add
add
data16
add
add
add
add
add
add
jo
push
add
filds
push
add
add
mov
add
aaa
add
add
add
add
add
push
add
add
add
add
add
add
add
add
pop
push
loopne
mov
dec
add
adc
jecxz
and
sub
xchg
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
pusha
add
xor
popa
add
clc
add
add
add
add
add
add
adc
js
or
jo
add
ret
add
add
add
add
or
mov
add
dec
add
add
add
add
add
arpl
pop
add
add
xchg
add
add
add
add
push
add
add
push
add
add
test
adc
push
add
add
add
sub
add
pop
push
sub
and
pop
add
pop
add
add
add
addb
add
add
mov
add
movsb
add
add
and
mov
mov
call
add
add
add
add
add
add
push
add
add
and
cmp
mov
adc
add
inc
push
inc
add
add
add
add
add
and
cmpsl
add
push
add
add
add
jno
outsb
add
mov
push
add
add
add
adc
jg
jne
data16
add
add
and
push
add
mov
add
sbb
xchg
add
nop
add
add
xchg
add
add
add
dec
add
add
outsb
add
call
add
dec
add
mov
mov
and
cld
add
add
add
add
add
add
add
and
mov
js
adc
and
inc
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
sbb
mov
cmp
pop
add
add
dec
add
add
mov
add
add
pop
add
add
add
add
sub
mov
add
faddl
test
add
pusha
add
add
add
add
add
add
and
pop
add
cmp
add
add
add
pop
add
int3
add
call
add
dec
add
adc
adc
mov
add
je
lock
add
add
add
add
add
add
enter
sbb
pusha
add
add
in
inc
add
add
popa
add
add
add
jle
das
add
mov
add
add
add
add
add
add
int3
add
add
add
push
outsl
add
add
sub
in
add
add
je
lock
add
into
add
add
fiadds
cmp
and
clc
add
add
xchg
add
add
add
add
add
add
add
test
faddl
faddl
mov
add
add
mov
add
push
add
jo
arpl
push
add
add
add
inc
add
add
and
dec
add
add
add
pop
add
add
movsl
enter
push
mov
mov
fdiv
add
int3
outsl
dec
sbb
adcb
lds
js
or
xchg
pop
daa
ficoml
shlb
aas
stos
div
fisttpll
fdivs
pop
cld
sbb
in
cmp
xchg
sub
and
xchg
insl
mov
int
xchg
jg
mov
or
mov
xor
or
xchg
cltd
or
dec
xor
imul
aaa
ss
repz
movsl
sub
rcrl
xchg
jbe
ja
add
in
xchg
mov
int
push
cmc
cld
jns
pop
jb
mov
jo
or
sbb
mov
sbb
and
fimuls
pop
sbbl
pop
mov
mov
into
pop
mov
in
add
jns
and
xlat
shlb
sub
jne
dec
out
dec
inc
in
mov
dec
jl
cmp
push
data16
push
jmp
fcoms
mov
stc
pop
out
insl
test
mov
inc
dec
dec
test
clc
ret
sbb
add
or
xchg
insb
sbb
jmp
add
mov
mov
lds
pop
xor
mov
sub
subl
pop
stc
mov
adc
xchg
sub
xor
insl
xchg
xor
mov
or
loop
adc
dec
test
sub
adc
jns
cli
test
adc
mov
pushf
lcall
and
cmp
mov
jbe
xor
fs
jecxz
rorl
pop
xchg
xor
adc
es
sub
pushl
cmp
push
add
sub
fwait
lods
call
xor
lret
insb
ja
aas
push
mov
dec
jle
xor
cmpb
dec
pop
sbb
enter
mov
jge
insl
ljmp
aas
and
push
xor
xchg
fcoml
adc
lret
movsl
shll
into
mov
incb
lods
andl
or
mov
push
sub
push
inc
iret
rcrl
out
fwait
arpl
nop
lret
nop
mov
out
or
sub
pop
repnz
lea
push
mov
mov
or
or
stos
and
popa
xor
loope
push
rclb
pop
mov
xchg
and
jns
xchg
jecxz
push
imul
cmpsb
or
xor
paddd
insb
inc
mov
movsl
push
sub
and
push
dec
xchg
xchg
sub
and
add
push
out
push
fmul
lea
gs
push
push
ret
jmp
lahf
xchg
adc
or
jb
push
push
fbstp
sbb
lock
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
