call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cli
push
jmp
sbb
cmpsl
or
cmp
jns
dec
sbb
stos
jmp
fwait
mov
lret
mov
cmp
dec
sbb
sub
or
pop
inc
cmp
mov
cmpsl
xlat
leave
movl
push
sub
push
cmp
adc
push
pop
xchg
stos
movsl
aad
mov
jo
xlat
mov
addl
xchg
sub
sbb
and
daa
xchg
ljmp
push
sbb
or
push
mov
pop
stos
lods
mov
jo
call
push
das
cmpsb
imul
rorl
subl
data16
imul
mov
push
test
mov
in
stc
fcoms
iret
and
pop
js
sub
or
jl
sub
pop
add
push
fcomps
inc
js
mov
shl
mov
test
dec
or
mov
bswap
xchg
pop
jmp
sti
cltd
adc
pop
mov
sbb
jno
and
nop
stc
fwait
mov
lahf
xchg
in
mov
cmp
jg
jb
add
pshufw
cmp
test
rolb
mov
dec
cmp
outsb
xor
inc
aaa
jo
dec
xor
fistpl
sti
cltd
lret
mov
jns
imul
cmp
jnp
dec
or
stos
jmp
fwait
mov
lret
mov
jns
imul
cmp
jnp
dec
or
stos
dec
insb
sbb
or
notl
lcall
or
imul
scas
sbb
pusha
jne
pop
push
fimull
testl
sub
cmpsl
imul
repnz
ret
int3
push
lahf
movsb
ss
cld
push
pusha
mov
fnstcw
stos
jmp
push
mov
and
push
into
addr16
dec
mov
jle
bound
arpl
icebp
insl
movsb
inc
push
xor
pushf
fwait
jg
pop
out
lret
xchg
in
sbb
cs
ds
xchg
ljmp
sub
popf
out
or
cld
jb
sub
rorl
movsb
and
and
mov
add
push
mov
jbe
cmpsb
push
jp
add
push
js
sbb
xchg
mov
mov
inc
mov
push
js
ret
stos
out
out
mov
mov
add
sub
pop
lods
popf
xor
dec
sub
xchg
pop
nop
pop
push
mov
int
aam
mov
ljmp
mov
idiv
daa
fidivl
mov
jmp
xor
jmp
cmp
push
mov
and
pop
lret
jne
adc
sbb
pop
adc
cltd
push
test
inc
fstl
push
std
popf
ss
sub
out
add
mov
mov
in
loopne
out
out
arpl
mov
arpl
and
mov
insl
sub
xor
icebp
and
mov
test
or
dec
notb
hlt
mov
push
push
adc
mov
test
mov
cmp
decb
pop
sub
and
mov
inc
cmp
adcl
xlat
push
lcall
push
ret
jns
fs
lcall
nop
movsl
test
imul
lock
sti
pop
pop
mov
dec
xor
cs
jno
or
fidivs
cmc
loop
lret
sarl
insb
sahf
int3
cmp
or
mov
dec
mov
inc
cmp
inc
dec
fnsave
xchg
fwait
cmpsl
and
push
das
jb
xor
sbb
sbb
jp
push
out
and
cld
iret
rclb
jl
stos
shlb
scas
or
jge
sbb
dec
add
outsb
xchg
jae
and
jbe
iret
xchg
out
fnstcw
push
jge
ror
xchg
adc
jp
scas
outsb
and
cmp
sub
data16
test
xchg
in
fisttpl
mov
repnz
pop
div
jae
or
cmp
or
roll
cmp
and
inc
test
int3
add
insl
insb
out
ret
mov
or
pop
imul
jbe
sub
pushf
mov
jne
jl
push
jl
cltd
push
jae
inc
xor
addr16
cmp
mov
in
ret
into
leave
inc
lea
mov
orl
sub
dec
xchg
xor
lahf
push
push
subl
adc
mov
repz
dec
adc
in
ret
into
cmp
sub
xchg
or
mov
imul
xchg
mov
mov
xchg
cmp
or
fwait
fwait
iret
dec
leave
outsl
dec
xorb
xchg
sahf
sbb
inc
pop
in
pop
cmp
sarl
sub
bound
pop
gs
xlat
push
and
sbb
cld
clc
insl
jg
sbb
jno
xor
pop
les
sub
inc
ja
xor
mov
push
adc
mov
mov
cwtl
cli
xchg
mov
push
dec
leave
mov
lock
sbb
push
jno
ret
mov
call
dec
xchg
push
adc
xor
ds
push
int
mov
mov
mov
into
adc
mov
pop
push
pushl
xor
fcoml
enter
pop
outsl
cmp
bound
test
lods
out
cwtl
mov
mov
sbb
in
inc
pop
pop
arpl
xchg
movsl
addb
jmp
push
inc
test
inc
cmpl
mov
out
push
mov
dec
and
jo
xor
icebp
out
lods
mov
jbe
std
mov
push
jne
push
dec
pop
das
repnz
or
cmc
ss
outsl
outsl
cltd
int3
xchg
push
xchg
call
lahf
jbe
std
adc
jl
in
pop
cwtl
ret
lcall
in
jmp
repz
jle
xlat
outsb
mov
nop
lods
jmp
fstl
popf
or
xchg
rcll
cmp
adcl
fisubrl
sub
fadds
jbe
sbb
sub
mov
enter
pop
mov
push
addr16
jnp
push
mov
lea
push
push
ljmp
xor
addr16
pushf
shr
push
outsb
add
int3
push
out
mov
mov
js
imul
or
add
mov
bound
jmp
pop
xor
dec
push
insl
and
cmp
fs
inc
cmpl
daa
and
mov
imull
xor
cmp
out
addl
pop
xchg
call
popf
mov
imul
and
fstpt
popf
add
pushf
inc
jl
movsb
sar
ds
xchg
fists
popf
adc
fxch
pop
jmp
in
jno
cwtl
mov
scas
pop
push
popf
push
ljmp
outsl
movsl
jl
sbb
inc
arpl
and
xchg
lods
pop
outsl
push
test
push
xor
inc
mov
ds
xchg
mov
xchg
pop
adc
jp
dec
into
dec
dec
jmp
dec
ja
push
enter
dec
ret
aam
xchg
push
push
scas
push
into
pop
or
movsb
and
push
mov
inc
sub
mov
pop
test
and
outsb
es
and
fadds
out
pop
inc
cltd
and
adc
mov
addr16
movsl
push
cltd
ljmp
das
xor
pop
std
cmc
inc
stos
add
in
push
cmp
rolb
jp
mov
mov
add
mov
cmp
or
stc
push
out
shl
add
dec
mov
out
in
js
or
and
push
loop
pushf
call
ficoms
or
outsl
xchg
mov
xor
jae
xchg
push
mov
pop
sbb
enter
stc
pusha
repnz
mov
push
mov
mov
mov
jnp
sbb
add
enter
or
lods
cmp
lcall
lods
mov
divb
jnp
test
dec
inc
jne
ficompl
mov
into
lahf
outsb
and
push
jmp
adc
bound
dec
ret
ds
mov
out
sbb
rclb
jl
inc
push
insb
sub
cmp
cltd
dec
inc
add
imul
je
mov
jo
inc
mov
pusha
jne
push
out
out
xchg
dec
dec
call
rorb
dec
ja
and
sub
icebp
dec
ljmp
out
xchg
out
cmpsl
and
fisttpl
ror
push
lods
repz
cmp
sbb
aas
fistl
mov
lcall
add
sbb
in
and
add
outsb
fimull
adc
and
pushf
stc
rorb
xor
mov
lcall
push
mov
divb
enter
movsb
mov
push
and
daa
nop
in
push
movsb
ror
push
les
ret
fabs
into
mov
cltd
test
int3
pusha
mov
xor
push
add
add
in
pop
aad
orb
jle
pop
icebp
mov
sub
fldz
pop
out
mov
jns
xor
fsubr
fdivp
sarl
mov
loope
cmpsb
arpl
scas
ja
jmp
push
lea
movsb
lahf
pusha
adc
add
push
and
and
mov
push
mov
in
inc
xlat
lods
push
xchg
aad
test
fdivrs
sub
pop
cmp
add
in
aaa
bound
inc
sarl
xchg
adc
push
lahf
out
cmp
adc
jae
dec
or
jo
aaa
jbe
imul
sbb
cmpsb
popf
cli
xor
or
cs
inc
push
fdivl
jge
popf
jno
loopne
fdivs
or
cld
push
lods
adc
sub
pop
push
lock
or
pop
icebp
rolb
jne
ficompl
scas
in
nop
mov
jb
mov
aam
cmp
ja
jne
outsl
popa
cmp
xchg
fadd
xchg
add
xchg
lds
lahf
out
sbb
stos
repz
rclb
aaa
push
divl
test
jl
iret
push
fnstcw
xchg
sub
push
andps
and
xor
or
pop
arpl
and
shll
lret
mov
arpl
xchg
add
mov
cltd
adc
mov
mov
push
in
ss
pushf
push
sub
mov
shl
notb
pop
popf
mov
int3
repz
xor
aas
in
stos
cld
loopne
test
pop
sub
les
shl
ds
js
xor
cmp
arpl
or
push
xchg
push
repz
je
lahf
cmc
aas
testl
pop
xchg
and
push
loope
sbb
push
add
push
sub
push
xchg
push
jns
fnstsw
subb
and
sbb
mov
fldenv
cmp
add
fadds
xchg
pop
js
fmulp
mov
aad
rorl
sub
fdivrp
scas
jnp
sbb
gs
movsl
loop
bound
into
push
push
ja
je
stc
frstor
dec
jge
push
aam
pop
sbb
inc
dec
or
adc
aad
stc
fldenv
pop
stos
pop
aad
int3
int
fidivs
pop
sbb
lret
xchg
jb
dec
cmp
roll
sbb
stos
jmp
scas
push
stos
pop
cmp
pop
dec
in
mov
push
mov
mov
sahf
add
das
push
outsl
fildll
int3
xor
xor
sub
sbb
add
mov
fnsave
jmp
into
mov
push
loope
cmp
lret
frstor
sbb
jne
cmc
shlb
notb
ja
sbb
xor
add
mov
xor
jne
push
adc
stos
jae
adc
popa
fimuls
lods
dec
movsb
jmp
mov
movsb
in
movsb
cs
movsb
inc
testl
and
movsl
aaa
leave
mov
sti
mov
lock
movsb
and
in
out
dec
dec
inc
adc
cmp
insb
lods
and
inc
pusha
les
and
inc
sbb
shll
dec
and
ficompl
in
js
inc
daa
inc
ljmp
jno
inc
xor
jecxz
push
popa
int
test
xchg
inc
out
fcmovu
sbb
dec
or
les
cmp
cld
popa
or
std
stos
xchg
mov
rorb
pop
push
adc
jae
dec
adcl
aad
lret
cmp
cs
xchg
cmp
mov
push
dec
pop
int3
add
push
popa
xchg
sbb
roll
adc
hlt
test
add
adc
cmp
rorl
dec
cmpsb
xchg
mov
mov
and
xchg
dec
inc
roll
push
add
dec
add
mov
rcr
loope
arpl
cli
sbb
movsl
xor
sbb
aas
or
pop
push
cmp
jae
jo
rcl
cltd
push
or
div
sbb
add
movb
add
dec
xchg
dec
cs
cmp
test
mov
pop
mov
loopne
jb
je
lods
xchg
and
out
lahf
ss
mov
xchg
sbb
cs
adc
iret
mov
ljmp
daa
jl
lret
jecxz
jg
mov
js
lret
mov
fsubs
xchg
cmp
dec
test
mov
and
adc
dec
push
or
nop
fildl
and
mov
scas
push
sti
inc
icebp
test
cmpsb
add
je
mov
stc
popf
leave
sub
xchg
adc
and
decb
stc
loopne
inc
lock
aam
jns
inc
pusha
lret
pop
adc
movsl
loope
dec
add
cmp
pusha
fsts
add
lds
out
lock
jne
movsb
mov
aaa
popa
and
in
pop
sbb
cmc
outsl
aam
or
push
mov
bound
mov
aaa
outsl
xor
dec
in
hlt
dec
data16
xchg
push
jne
mov
dec
mov
std
nop
iret
js
ss
mov
lahf
ja
popf
cmpsb
aam
aaa
repz
fdivrl
sahf
dec
pushf
xor
xor
fistpl
sbb
inc
mov
adc
inc
pop
sbb
decb
xor
fisttpl
xor
or
jbe
cs
mov
pop
sbb
mov
bound
cmp
adc
cmc
sbb
rol
test
dec
pop
xchg
aad
adc
mov
mov
mov
imul
test
rcrl
xlat
xor
dec
mov
adc
jmp
stos
jl
lock
lods
cmp
or
jg
adc
mov
pop
adc
andl
and
mov
popl
clc
sbb
aas
fwait
fs
enter
jo
jl
or
add
mov
mov
movsl
test
mov
cmp
divb
in
cmc
dec
xor
sbb
or
sub
je
iret
leave
xor
ffreep
out
jecxz
jecxz
adc
dec
insl
add
lret
rcrl
rcll
dec
sbb
movsl
fs
mov
cmp
pop
cwtl
adc
popf
xchg
jnp
pop
icebp
ffree
out
xchg
cmp
sbb
stc
add
sbb
pop
in
push
or
jns
xor
mov
mov
or
pusha
loop
inc
cmp
xor
xchg
or
jg
push
pushf
xor
sbb
sbb
cmp
outsb
pop
mov
sub
fistps
mov
int3
xor
cmpsl
jl
test
jns
jp
jmp
imul
es
inc
push
shll
icebp
out
push
mov
mov
insl
js
pop
ret
adc
pop
loope
lcall
add
aad
shr
mov
fwait
xor
mov
dec
sub
cmp
adc
movl
adc
jnp
in
mov
adc
sarl
cmpsl
iret
outsl
mov
mov
pusha
lea
jl
mov
mov
jo
imul
add
lock
nop
xor
pop
cmp
imul
add
and
mov
cmc
xchg
xchg
jecxz
fists
push
adc
dec
mov
mov
sub
filds
cmpsl
add
iret
out
ds
xlat
out
and
les
arpl
fs
pop
addb
adc
cwtl
fisubs
adcl
jno
movsb
cltd
arpl
movb
mov
dec
adc
inc
push
push
leave
cwtl
xchg
xchg
aaa
cmc
fildll
lock
pop
pop
les
mov
scas
jo
daa
dec
shll
jbe
jo
nop
stos
or
rorb
mov
mov
stos
int
push
out
lahf
std
ret
pop
push
xchg
push
or
push
cs
insl
loopne
lahf
mov
mov
push
std
shrb
mov
aas
adc
mov
jg
pop
movsl
fld
adc
daa
cmp
into
inc
sub
fwait
or
fxch
add
lret
inc
inc
test
pop
and
sub
inc
add
push
fsub
inc
lcall
cmpsl
push
and
sub
insl
repz
add
inc
push
pop
and
add
imul
pop
xorb
mov
dec
lcall
cmpb
out
aam
inc
jae
je
into
cmp
mov
inc
out
movsl
repz
cltd
add
cmp
pop
in
xchg
push
outsb
fwait
add
ficomps
fs
xlat
xor
inc
je
sahf
mov
je
push
icebp
out
andb
mov
xchg
inc
and
shll
cli
movsl
push
pop
insb
cmp
dec
pop
push
stos
cmp
sti
cs
mov
sub
imulb
sub
lahf
sbb
mov
ret
mov
or
cmp
incb
sub
jmp
xor
and
bound
mov
addb
mov
fwait
jecxz
test
or
xchg
dec
insl
cmp
lret
das
imul
icebp
push
cmpsl
adc
cmpsl
sti
push
jge
jns
aam
xchg
jg
and
iret
int
sbb
xchg
adc
or
fldl
inc
jp
pop
inc
fildl
lahf
dec
pop
mov
and
jbe
insb
xlat
push
sub
sti
ljmp
into
cvttps2pi
push
in
sub
mov
pop
adc
outsb
inc
push
adc
ja
scas
hlt
hlt
es
mov
clc
aam
adc
inc
push
dec
nop
loope
dec
fnstsw
lret
sbb
xchg
cmovs
int
enter
push
stos
or
cmp
sbb
es
add
sub
inc
push
push
cmpsb
xchg
push
inc
gs
imul
dec
mov
clc
insb
jl
scas
fmul
cmp
scas
test
ds
and
xchg
sbb
xchg
jmp
jge,pt
popf
adc
dec
add
lret
imul
jl
test
xor
sub
mov
jae
or
xchg
scas
shrb
data16
cmpsb
mov
mov
sbb
movsb
jno
sbbb
cmp
jno
addl
dec
lret
popa
pop
pop
xor
or
push
lret
fisubrl
sti
fisttps
push
push
mov
mull
push
loop
lock
cltd
jne
xlat
mov
iret
lods
outsb
leave
ja
stos
mov
jge
lea
jnp
ljmp
sub
sub
pusha
out
push
imul
cmpsl
adc
push
inc
stos
leave
in
inc
stos
std
jnp
push
cs
out
scas
dec
mov
repz
cmp
adc
mov
enter
sub
adc
xor
hlt
push
adc
add
mov
dec
jg
sahf
push
popf
test
roll
mov
dec
in
movsb
xor
sahf
test
lahf
subb
cltd
pop
xor
notb
jmp
fs
popa
test
nop
mov
xchg
mov
inc
ljmp
dec
xor
sbb
inc
add
popf
imul
call
jbe
mul
imul
aam
not
jmp
sbb
add
fdivl
aas
xchg
mov
in
call
cmp
pusha
les
sub
addr16
add
data16
stos
inc
xchg
fstpl
or
out
outsb
pop
pop
xor
int3
shlb
and
scas
mov
lret
inc
pop
int
cwtl
adc
ret
cmpsl
shr
pop
repz
xchg
roll
pop
jp
cmpsl
add
and
inc
sarb
fisttpl
or
jle
mov
mov
negl
lock
dec
in
test
es
aam
cli
sbb
push
lods
cmpsl
lds
jb
push
pop
xor
shll
ret
adc
cld
sub
push
lods
jle
adc
jp
jge
ds
addb
jg
sarl
out
cmp
iret
sub
mov
xchg
lret
fistl
xor
add
and
fcmovnb
xchg
fs
mov
jnp
ss
outsb
or
or
pop
out
adc
push
or
or
adc
mov
jno
sarl
adc
add
hlt
cli
sub
ljmp
into
jg
insl
popf
in
or
mov
mov
mov
iret
fisttpll
js
sahf
xor
fcomi
cmpsb
adc
fldt
test
dec
pop
mov
add
dec
push
sahf
ljmp
popf
push
and
xor
std
push
pop
lret
ret
mov
aaa
add
cmc
lret
inc
push
xchg
jb
pop
cmp
in
mov
sar
add
hlt
xorb
das
call
arpl
out
push
div
frstor
cmp
pop
out
jge
lret
dec
test
out
xchg
xchg
clc
int
shll
pop
sub
call
sbb
lea
idivb
push
or
outsb
movsb
mov
sbb
mov
xchg
pop
rolb
cmp
fcoms
inc
scas
cmpsl
inc
mov
hlt
jnp
fwait
dec
pop
pusha
push
lret
in
xchg
xlat
rcr
into
adc
lea
dec
jb
cltd
xchg
es
sub
out
ja
in
xchg
mov
test
jg
push
xchg
inc
aaa
loop
jae
push
pop
mov
js
pusha
call
or
xchg
gs
push
movsl
push
jbe
cltd
sbbb
ss
ljmp
or
imul
pop
or
fisubrs
and
testl
jne
mov
inc
rcll
lahf
and
adc
xor
ss
sbb
or
fisubrl
outsl
and
lcall
mov
aad
stos
jo
aad
movsb
jge
or
dec
fbld
and
lret
mov
out
pushf
inc
inc
adc
rcll
cmp
out
adc
leave
fwait
mov
lret
mov
jns
imul
cmp
jnp
dec
or
stos
jmp
fwait
mov
lret
mov
jns
imul
cmp
jnp
dec
or
stos
fpatan
mov
jmp
push
cltd
lret
dec
fstpt
imul
cmp
jnp
imul
in
stos
mov
orl
sti
cltd
dec
or
jns
xchg
xchg
repz
dec
jecxz
test
mov
movsb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
arpl
jmp
sti
out
xchg
repnz
cmpsl
sbb
pop
dec
imul
push
push
sbb
sub
cmp
ret
xlat
fcmovnb
jmp
sti
out
xchg
fwait
xchg
push
pop
inc
inc
jbe
or
pop
sub
cmp
adc
pop
insl
idivl
xchg
push
aaa
fs
push
inc
pop
pop
push
dec
push
mov
mov
scas
mov
mov
fs
sub
sahf
pop
jb
enter
xlat
mov
rcrl
or
inc
cmpsb
mov
mov
mov
mov
fwait
lret
pop
jmp
jnp
add
ljmp
push
movsb
inc
xchg
jno
cwtl
hlt
call
fs
pop
mov
mov
xchg
xchg
stos
or
xchg
sbb
ds
les
dec
pop
cmp
cmp
je
sbb
out
cmpsl
mov
js
clc
inc
sbb
jnp
dec
dec
mov
rcll
pop
out
push
fsubs
cs
mov
cwtl
mov
sbb
aaa
sub
clc
xlat
fcmovnb
jmp
xchg
out
xchg
filds
mov
ja
imul
pop
sub
pop
popa
mov
mov
cmpsb
in
out
repz
daa
sbb
and
pop
bound
inc
pop
inc
jl
lret
mov
xor
loopne
mov
sbb
js
jle
pop
push
jp
mov
xchg
mov
xchg
push
pop
inc
imul
or
sbb
sub
cmp
lret
xlat
fcmovnb
jmp
sti
out
xchg
fwait
xchg
push
pop
inc
imul
or
sbb
sub
cmp
lret
xlat
pop
out
inc
cwtl
movsb
and
hlt
add
loopne
inc
or
pop
dec
add
mov
mov
jp
inc
popa
cmp
subl
jmp
mov
test
insb
sbb
push
or
and
roll
std
mov
add
mov
push
mov
and
call
jge
cld
lea
icebp
pushf
mov
ja
int
das
cs
and
jbe
aas
rclb
mov
jno
aas
or
xor
leave
rcrl
lcall
icebp
fcmovnbe
jle
mov
mov
fwait
jg
jo
lret
movsl
cli
lret
int3
inc
subb
cmp
leave
outsl
push
shl
inc
xchg
and
lea
popf
bound
jl
and
and
dec
fsubr
xor
sbb
dec
fildl
sub
cmp
loop
aad
in
pop
dec
dec
fcomi
sbb
sub
in
mov
test
mov
lret
outsl
in
int3
cs
xchg
sarb
loop
dec
cld
arpl
add
cmp
cmpsl
sbb
orb
mov
jmp
push
push
stos
and
jo
in
mov
out
jb
adc
bound
lock
jbe
arpl
sti
shlb
mov
xchg
in
jecxz
sbbb
xchg
aas
cmpsl
fs
test
fstpt
add
into
push
pop
mov
and
mov
xor
pop
ljmp
mov
mov
js
out
js
jo
es
lret
testl
ljmp
popa
bound
mov
inc
xor
inc
mov
and
aas
stos
loope
insb
jge
sarb
dec
push
push
or
fsub
scas
mov
mov
pop
loope
fldt
adc
lcall
sub
lds
mov
icebp
mov
sbb
into
cwtl
push
fwait
imul
jno
fcoml
push
cld
mov
icebp
push
xchg
cld
sbbl
pop
into
xchg
add
and
lret
jns
stos
in
gs
push
scas
add
outsb
dec
mov
movsl
clc
cmp
xchg
mov
aam
and
fists
inc
inc
jo
movsl
dec
sub
cmpsb
mov
fiaddl
jecxz
clc
subb
mov
testb
subl
adc
push
add
jo
aad
inc
add
mov
inc
fstl
sub
sub
push
push
stc
aad
leave
cmp
or
cmp
pop
addr16
dec
movl
idiv
cmp
xor
mov
push
loope
cwtl
movsl
imull
mov
arpl
sbb
fdivr
jle
mov
mov
outsl
inc
xchg
xchg
mov
aad
hlt
inc
push
call
js
fsub
adc
imul
jo
outsb
push
push
popa
cmpsl
mov
loope
pop
iret
lea
or
and
mov
sbb
repnz
std
adc
dec
or
aad
mov
test
mov
sub
push
pop
push
or
in
movsl
cmp
daa
pop
jno
stos
cmpsb
pop
jle
leave
lret
cmp
xor
jl
jae
daa
xchg
cmp
and
stos
shll
insl
jmp
clc
sbb
push
pop
lea
cmp
push
daa
iret
out
sti
icebp
cmp
leave
push
int3
cmp
into
ljmp
stos
pushf
adc
aam
push
mov
inc
mov
jle
int3
xchg
or
cmpsl
cmp
movb
orb
xchg
ret
add
into
mov
fidivrs
push
or
inc
lds
mov
arpl
jae
push
ja
jne
int3
clc
sbb
js
je
pop
xor
sarl
outsb
mov
xor
bound
pop
xchg
jle
cmp
in
mov
fsubrl
push
outsl
out
xor
dec
repnz
mov
in
add
push
jp
fwait
fwait
lods
and
cs
mov
and
add
cmp
inc
in
imul
iret
test
leave
dec
insl
or
xor
push
mov
dec
flds
jae
xor
pop
mov
sbb
push
lret
sarl
shll
mov
pop
cmp
movd
outsl
idivl
and
xor
adc
fidivl
xchg
add
rcrb
adc
mov
or
jno
adc
mov
mov
xchg
addr16
pop
sbb
fisubrl
es
std
enter
push
aam
sahf
xchg
dec
das
cmp
cmc
push
out
dec
sbb
mov
mov
scas
sarb
dec
and
and
lods
cmp
inc
out
lahf
push
inc
lds
xor
and
aas
lock
mov
dec
cmp
ss
mov
dec
fidivs
jns
mov
xor
insl
enter
jbe
pop
jno
out
xchg
insl
mov
mov
lret
lcall
adc
cs
xchg
xchg
add
pop
xchg
ss
ret
mov
inc
xchg
xor
jo
addb
fwait
ss
push
mov
xchg
dec
cmp
sub
pop
mov
cmp
mov
loope
pop
add
movsb
sub
pavgb
cmp
cltd
stos
mov
push
icebp
pop
insl
xor
testb
push
inc
jb
mov
out
push
mov
xchg
and
pop
push
or
inc
xor
jle
lods
movsl
lret
les
sbbb
mov
test
dec
push
lods
mov
jno
idivl
sbb
dec
lea
jecxz
rol
xlat
es
cltd
pop
out
adc
arpl
xor
add
jg,pt
andl
lock
push
mov
mov
std
jns
repz
jl
adc
xchg
arpl
cmp
pop
mov
lods
add
je
lret
cmpb
pop
int3
rcrb
mov
in
fstpt
jb
lahf
or
sub
jne
sub
sub
negl
sub
in
int3
das
ror
daa
dec
notl
out
push
jp
lds
adc
jg
mov
in
sar
in
iret
inc
out
stc
push
popa
ja
fucom
pop
add
and
and
loopne
and
mov
push
cmp
xchg
sbb
jns
fstpt
push
stc
sbb
repnz
mov
pop
inc
popa
jnp
xchg
xlat
inc
fs
call
jg
mov
ret
shl
das
mov
xchg
and
and
negl
sub
add
or
cmp
cmpsl
push
insl
js,pn
loop
cld
and
stc
les
mov
data16
mov
sarb
mov
push
jle
pushf
pop
mov
lahf
cmp
xorl
hlt
and
into
pop
cld
jne
sti
inc
int
fwait
or
xchg
fwait
mov
aas
aas
cmp
rcrb
icebp
cmpsb
mov
icebp
add
fbld
mov
xchg
push
cmp
fiaddl
enter
out
sbb
inc
icebp
pop
cmp
mov
pop
ffreep
fnstenv
shll
or
add
lods
ja
mov
or
lea
inc
faddl
push
mov
mov
inc
pop
push
pop
imul
cmp
enter
cmp
xlat
xchg
vpminsw
and
test
imul
call
pop
adc
fisubrs
das
shr
push
push
jbe
insb
imul
dec
pop
cmp
aas
cmpsl
xchg
mov
jge
pushl
cmp
jae
jg
jno
movsl
popf
xchg
mov
out
dec
lds
scas
repz
lahf
es
sbb
push
sbb
jno
outsl
jnp
sbb
push
clc
push
mov
pusha
fildl
arpl
int3
emms
lret
mov
stos
mov
sbb
in
xchg
pop
idivl
es
jo
adc
xor
sbb
arpl
fst
popa
lods
scas
fsub
xchg
pushf
insb
sbb
addr16
out
add
mov
outsb
mov
test
mov
popa
insb
or
push
inc
std
test
or
out
lock
addl
pop
mov
pop
cltd
fnstcw
fdiv
xor
cmpsb
sti
in
divl
xor
mov
imul
mov
add
pop
inc
repnz
js
ljmp
in
sbb
push
cwtl
loope
and
loopne
push
sub
clc
icebp
sbb
inc
add
aad
int
ja
ja
cwtl
push
and
mov
ljmp
out
and
xor
cmc
adc
lret
dec
and
jmp
jg
mov
jne
testb
adc
adc
sbb
xor
mov
xor
inc
stos
dec
sbb
push
dec
aad
jg
test
mov
cmpl
cld
lods
arpl
sub
insl
js
mov
in
cld
lea
js
arpl
and
push
add
push
xor
dec
or
push
in
mov
inc
sub
cmp
sbb
sub
xor
and
add
into
jl
xchg
jns
inc
jnp
mov
negb
test
dec
jbe
push
sub
lret
int3
rcll
rcl
pmulhuw
push
sub
arpl
jle
push
jns
jge
rol
stos
addr16
pop
cltd
aam
movsl
ret
movb
int
mov
push
sbb
in
push
jmp
pop
ret
dec
outsl
xchg
movsb
jle
xchg
mov
jno
jbe
ss
sub
push
mov
sbb
mov
push
mov
loopne
xor
mov
or
or
sub
push
mov
jg
pop
notl
inc
push
fnop
vmovq
fisubrs
or
lcall
ret
push
xchg
stos
test
iret
and
push
mov
and
mov
lahf
and
lods
sub
xchg
in
cwtl
jmp
pop
bnd
je
fiadds
mov
int
fildl
rcrl
mov
push
sbbb
sarl
ret
mov
or
std
lods
cs
insb
xor
jae
fstpl
int
adc
jno
stos
jbe
ja
daa
je
mov
mov
sti
aad
insb
in
jae
mov
subl
jbe
sub
rorb
fucomi
sbb
mov
jae
paddw
and
ss
mov
lea
adc
sbbl
out
mov
fiaddl
mov
aas
cmp
daa
fsubs
xor
push
fmul
pushf
mov
in
mov
stos
negl
or
int
out
and
cld
mov
aas
aam
gs
pop
jecxz
mov
sarl
adc
insl
xchg
fimuls
and
call
add
aam
pop
adc
cmp
movsb
outsl
mov
mov
insl
push
sbb
adc
notl
adc
fstps
push
adc
push
pop
jle
xchg
cmp
mov
jae
sub
cmp
mov
mov
jmp
lahf
fcoms
jne
adc
pop
fiadds
jb
shlb
push
fisubl
jne
mov
out
aaa
cmpsl
sub
es
or
mov
mov
mov
lods
data16
rcrl
lcall
imul
and
aad
daa
bound
mov
enter
or
out
scas
not
test
mov
mov
stc
fstps
cmpsb
test
hlt
add
push
subps
mov
out
jge
mull
xchg
cmc
pop
enter
adc
mov
pop
movsl
mov
popa
inc
inc
icebp
pushf
cmp
xor
cwtl
sbb
add
sbb
sbbb
popf
add
and
xchg
mov
pop
pop
mov
cld
in
jle
xchg
stc
mov
movsb
fistl
or
and
cmp
sub
add
stc
fsubrl
leave
add
inc
jbe
outsl
rcrl
je
rorb
fnstenv
xchg
xor
lahf
jg
icebp
mov
repz
jl
and
outsb
and
inc
out
inc
or
cmc
push
mov
and
stos
sub
ljmp
insb
xchg
popa
sub
cmpsb
in
ljmp
mov
imul
loop
int3
movsl
sbb
mov
lahf
cmpsl
dec
sbb
shll
push
jno
test
in
push
imulb
jl
add
mov
loope
pop
adc
or
mov
sub
mov
sarb
gs
ljmp
repz
test
push
and
int
stos
xchg
insl
cltd
addr16
mov
cwtl
out
dec
mov
loopne
aad
mov
add
jmp
insl
insb
popa
adc
cs
inc
test
popa
mov
push
shlb
mov
pusha
mov
mov
push
mov
adc
or
jo,pn
or
mov
pop
push
popf
xchg
mov
into
or
fdivs
addl
mov
mov
gs
test
and
and
stos
stos
icebp
fcmovbe
push
xchg
sub
cmp
lcall
dec
cmp
scas
and
pop
insl
sub
shlb
dec
jecxz
cmp
add
and
sbb
lods
sbb
sbb
fldenv
ljmp
sarb
mov
mov
jg
add
fimull
inc
adc
pop
insb
outsl
es
and
addr16
push
jg
sbb
sbb
adc
stos
adc
pop
lods
mov
push
xchg
mov
jae
pop
pop
mov
fstpt
sahf
fbstp
dec
push
test
sahf
data16
push
jmp
mov
stos
cmp
xchg
ja
inc
jne
stos
loop
mov
aaa
push
cmp
jnp
push
jns
lods
lret
rcll
push
xchg
les
out
cmp
adc
dec
xchg
mov
aad
jae
aas
adcb
jae
repz
lahf
sbb
js
int3
push
mov
ret
leave
enter
outsl
inc
loop
adc
and
mov
xor
js
pushf
les
jp
mov
cmpsl
ljmp
fdivrs
push
inc
scas
xor
in
sbb
adc
je
pop
adc
sub
mov
inc
scas
sbb
icebp
sbbb
fdivrp
cmc
xor
sub
ret
imul
outsb
adc
xchg
adc
xchg
mov
cwtl
out
imul
icebp
cmp
pop
pop
sub
sbb
enter
movsb
push
pushf
or
inc
shr
mov
into
out
std
xchg
enter
sbb
add
xchg
cmp
sti
xorb
mov
lods
imulb
mov
sub
xor
jmp
loope
push
xor
test
les
test
mov
mov
test
fsubrs
scas
cbtw
cmp
xor
sub
imul
add
sbb
pop
sub
jle
xor
mov
popf
jno
pop
pop
xchg
aas
cli
out
test
cs
pop
repnz
mov
adc
icebp
iret
xchg
inc
fstl
ficompl
mov
sub
mov
xchg
insl
lds
and
pop
pushf
and
pop
ret
stos
add
push
fiadds
shrl
into
inc
ljmp
mov
sbb
cltd
rorl
sub
mov
sub
xor
cmp
xchg
imul
xor
pop
pop
dec
int3
mov
or
aaa
popf
push
and
cmp
shll
xchg
mov
int3
cmpsl
dec
cmc
out
fildll
pop
rcll
dec
movsl
rcr
fnsave
cli
add
push
scas
xchg
mov
push
bound
out
adc
mov
pusha
mov
jne
mov
das
out
pushf
outsb
mov
push
push
fnstsw
daa
sbb
mov
roll
je
mov
dec
dec
imul
cmp
mov
cmp
dec
push
fcomps
mov
inc
shll
push
push
jnp
add
aam
test
aad
push
adc
pop
fsub
mov
into
cmp
jnp
loopne
pop
js
dec
addb
mov
mov
sahf
pop
sub
jb
pop
imul
push
ret
aam
sub
xchg
mov
stos
xor
push
ds
sbb
lahf
push
inc
out
out
call
and
mov
push
xchg
mov
sahf
and
jecxz
xor
jae
les
dec
cmpsl
jb
pop
inc
es
dec
je
mov
call
mov
out
aas
lret
pop
ds
pop
add
addr16
cmp
mov
outsb
jp
arpl
leave
dec
test
inc
sub
sahf
mov
push
scas
xchg
pop
or
push
push
aam
mov
clc
sub
clc
mov
pop
imul
enterw
jp
mov
divb
pop
adc
ret
and
mov
or
jge
shrl
mov
dec
insb
lcall
imul
shll
push
push
lods
inc
sbb
vpsadbw
or
fisttpll
sahf
sahf
push
arpl
or
or
jp,pt
dec
jnp
xlat
jae
and
imul
adc
sbb
xchg
orl
clc
insl
jl
or
pop
arpl
popl
add
clc
mov
iret
insl
push
outsl
shll
sub
pop
xor
subb
lods
mov
mov
aas
in
test
and
gs
xchg
sarb
pop
push
out
loop
and
jne
push
ffree
add
pop
shrb
push
fcmovnu
std
pop
scas
xor
imul
icebp
daa
lret
pop
add
push
or
fbstp
sub
shl
adc
mov
testl
jbe
test
pop
mov
sahf
popa
add
daa
sub
sar
popf
mov
fcmove
xor
sub
cmp
pop
addr16
mov
jmp
adc
rcl
mov
mov
xlat
or
in
sbb
jp
out
mov
lret
mov
push
adc
les
xchg
jne
inc
xchg
fwait
lock
pop
mov
add
addb
imulb
xchg
int
push
push
and
repnz
inc
jecxz
mov
flds
adc
sarb
jmp
sub
jmp
scas
call
test
fwait
jno
loopne
fldenv
dec
inc
fucomi
out
loop
xchg
popf
arpl
jg
fdivr
js
inc
pop
ret
dec
out
cmp
aad
imul
ret
jg
fisubl
cmp
xchg
inc
push
mov
ret
repz
pop
xchg
or
fisubs
cs
lods
mov
mov
cmpps
mov
aam
add
xor
mov
xor
addr16
popf
out
jge
mov
push
push
mov
int3
leave
mov
mov
outsl
shr
mov
xorb
jae
push
mov
daa
jmp
jecxz,pn
mov
cld
movsl
aaa
adc
lcall
or
iret
imul
adc
push
add
mov
add
inc
sub
xor
aaa
dec
loope
sbb
sti
pusha
mov
or
inc
daa
dec
dec
jno
mov
loop
cmp
fildll
das
push
jmp
jae
sub
cld
mov
xchg
pop
mov
fisubrs
pop
and
and
fsubs
xor
or
push
je
jle
fcom
xchg
pop
cs
push
dec
dec
pop
nop
or
iret
jo
xchg
cmpsb
arpl
mov
andl
mov
test
xorl
std
addb
adc
add
lods
mov
aas
sub
pop
push
les
lret
lahf
and
dec
jne
fdivrs
mov
jo
xchg
insb
add
ja,pt
loop
pop
insb
mov
scas
push
mov
sub
aad
pushf
cwtl
aaa
and
lods
int
mov
addr16
mov
pushf
xchg
cmp
fiadds
cli
rcr
pop
addb
push
call
dec
xchg
cmp
aam
cmp
xor
fbstp
push
lods
outsb
or
fimull
lret
std
jns
insb
push
lds
pop
mov
and
add
mov
push
pop
pop
jbe
lret
sub
push
adc
in
mov
sub
mov
ret
push
imul
mov
xor
pop
movsl
mov
or
scas
and
das
ja
sti
mul
out
xchg
fwait
xchg
push
pop
inc
imul
or
sbb
sub
cmp
lret
xlat
fcmovnb
jmp
sti
out
xchg
fwait
xchg
push
pop
inc
imul
or
sbb
sub
cmp
lret
xlat
fadd
sti
idiv
out
xchg
lahf
xchg
push
pop
inc
bound
or
add
das
aaa
or
rcl
test
mov
cmp
push
movsb
in
shll
jl
xchg
clc
aam
fcoms
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
dec
sbb
imul
imul
and
lret
xchg
stc
mov
lret
fidivrl
or
dec
sub
sbb
pop
cmp
jp
mov
lcall
mov
mov
adc
arpl
jae
add
inc
and
pusha
fldt
mov
mov
mov
mov
dec
jae
pop
add
orl
sarb
xor
ja
mov
movsb
mov
jnp
jnp
fadd
hlt
movsb
lret
loopne
repnz
xor
add
out
daa
dec
fmull
cmc
dec
popf
xor
pop
push
sbb
pop
sub
xor
stos
push
adc
fs
ficoml
adc
cli
mov
sbb
push
lcall
mov
inc
push
cltd
fsubs
mov
aad
fimull
lret
cmpsb
sub
cmp
pop
xor
out
out
jmp
xor
push
add
xor
out
cmpsb
jo
mov
and
xor
add
ljmp
adc
dec
or
or
pop
cmp
arpl
xchg
roll
adc
int
ljmp
push
sub
cmp
data16
push
inc
pop
scas
jecxz
loop
incl
mov
ljmp
push
pop
imul
push
push
outsb
push
fpatan
lret
sti
mov
mov
stos
lahf
xor
jg
dec
imul
or
push
jp
mov
lcall
mov
mov
or
jnp
imul
dec
or
push
jp
mov
lcall
mov
mov
or
sub
daa
aas
test
jae
cmc
sbb
icebp
add
mov
repz
push
mov
lahf
xchg
dec
jns
mov
xchg
inc
cli
shll
inc
sub
cld
nop
test
mov
or
repz
jbe
daa
repz
jg
lea
ficoms
lret
sub
jnp
fsubl
sub
lds
inc
or
sub
inc
adc
dec
inc
lret
enter
pop
in
sbb
sti
fdivrs
fwait
pop
xor
and
or
data16
stos
mov
insl
sti
pop
loop
jo
adc
jge
es
push
and
insl
pop
pop
pop
notl
xor
mov
das
sarl
push
lods
sbb
mov
dec
stos
cmpsb
mov
cmp
adc
lcall
add
jns
add
xorb
ret
fnsetpm(287
ljmp
cmp
mov
cmpsb
ret
adc
push
add
mov
mov
cld
or
sub
js
push
pop
push
cmc
mov
ja
arpl
mov
sbb
leave
in
pop
in
xchg
loopne
mov
nop
xor
add
adc
pushf
decb
jne
push
lahf
jg
mov
jge
add
ss
fldt
pop
arpl
popf
shrb
imul
pop
into
test
jbe
arpl
decl
das
jne
xor
sub
lods
xchg
ljmp
call
and
cmp
popa
push
inc
mov
ret
mov
sub
lcall
andb
or
inc
pop
cmp
pop
sbb
movsb
sub
pop
adc
mov
leave
out
pop
add
sbb
push
mov
arpl
push
repz
cltd
mov
je
jmp
mov
mov
je
shlb
xchg
pop
push
fldl
jnp
outsb
sti
test
mov
jmp
out
lret
imul
add
pop
es
sub
rcr
cld
inc
xor
leave
lcall
and
les
imul
frstor
push
shlb
sbb
mov
jle
cmp
sbb
inc
jo
cmpsl
sub
iret
sbb
stc
adc
mov
jne
xchg
lahf
xchg
mov
pop
jmp
sbb
push
enter
jg
shll
push
push
pop
enter
dec
adc
lea
subl
inc
and
or
in
cmp
pusha
in
sub
mov
pop
shll
jo
cld
mov
mov
jl
dec
rcll
add
jne
fadd
fdivrl
inc
push
sub
ficoms
sbb
call
icebp
insw
sub
lds
iret
xchg
cltd
in
fists
sbb
pushf
out
dec
add
imul
clc
imul
xchg
jecxz
imul
lret
adc
jp
into
mov
jg
aaa
jp
cld
pop
jg
cmp
call
dec
test
and
fwait
pop
mov
mov
leave
mov
call
outsb
lods
sahf
and
jns
pop
adcl
imull
jb
mov
das
xchg
stos
lods
sbb
movsb
jecxz
adc
add
aad
sti
ret
sub
pop
addr16
sbb
xor
push
adc
lret
jge
xchg
das
stos
repz
jb
shr
pop
jns
aaa
sub
das
subb
xor
xchg
jmp
sbb
ja
or
cmpb
dec
repz
cld
mov
stos
mov
cmpsl
xchg
push
aaa
sub
rol
mov
adc
ja
repz
mov
lret
leave
xchg
push
cmp
mov
ret
out
adc
cltd
or
lock
daa
lock
addr16
pop
xchg
out
lds
dec
repnz
andl
stos
pusha
ret
mov
push
daa
inc
push
inc
dec
dec
outsl
adcb
in
iret
popf
adc
lock
iret
push
add
add
shl
loopne
dec
loope
mov
popf
mov
mov
gs
loope
sahf
xchg
push
push
sub
scas
sbb
push
loope
lods
addr16
jecxz
jb
pop
xor
pabsd
and
inc
imul
stos
pop
lds
inc
push
xor
stos
push
dec
mov
push
pop
enter
xchg
push
nop
xchg
es
nop
mov
mov
adc
cmp
inc
out
xor
fistpl
jno
stos
mov
bt
stos
loopne
sbb
jnp
pop
jge
jg
inc
call
mov
cmpsb
leave
xor
lret
mov
in
cmc
fstpt
aas
repnz
cwtl
stos
dec
lret
inc
sbb
dec
movsl
bound
dec
pop
icebp
scas
dec
inc
push
mov
test
cwtl
scas
jmp
rcll
mov
int3
push
loop
pusha
xchg
sub
fadds
fwait
xlat
mov
xchg
push
xor
pop
out
aas
xchg
pop
sbb
pop
mov
fcmovnb
popa
push
mov
inc
imul
jg
push
out
jmp
and
mov
dec
mov
scas
in
xor
mov
xor
sarb
xlat
xchg
push
mov
fdiv
mov
xor
mov
push
mov
int
arpl
testw
xor
hlt
loop
repz
xchg
lds
cmpsl
mov
jnp
cmp
imul
mov
jge
sub
pop
popf
push
ja
sbbl
ret
inc
cmp
jno
jno
dec
adc
aas
out
mov
out
frstor
ds
adc
mov
decl
mov
dec
ds
dec
mov
testl
adc
and
jg
push
test
add
insb
in
aas
add
pop
xchg
jmp
push
je
sub
outsl
mov
xchg
or
sub
loopne
loope
cmp
repz
incb
xor
jecxz
dec
xor
filds
icebp
jae
add
sub
mov
mov
lret
adcl
fists
int3
mov
pop
jo
jle
shlb
jl
movsl
mov
push
js
pop
decb
loopne
test
movsb
push
mov
shrb
xchg
pop
ja
pop
ljmp
shlb
cmc
in
adc
lret
jl
mov
adc
mov
pop
mov
addr16
jge
add
mov
mov
mov
lahf
pop
je
jecxz
adc
ret
cmp
xor
and
out
outsl
cmp
dec
push
sbb
out
and
aas
test
mov
sbb
sbb
push
aas
and
fimuls
ret
clc
test
cmp
jns
pop
cmc
sub
stos
jmp
push
or
fs
enter
pop
adc
mov
icebp
in
notl
adc
mov
mov
sbb
aas
data16
sbb
push
ret
jae
sub
sub
inc
popf
xchg
aad
les
lcall
mov
sub
inc
jne
dec
jle
dec
xor
jg
loop
mov
cmp
ds
data16
xchg
scas
and
sbb
xor
push
sbb
mov
and
cmc
stos
mov
je
push
inc
xchg
sbb
add
lret
jns
int3
jmp
sub
fidivs
mov
jl
mov
xchg
andb
cmp
lcall
and
jmp
popl
push
push
pusha
js
loop
inc
sub
mov
iret
repz
lcall
insl
jo
mov
pushf
adc
xchg
xchg
mov
mov
cmp
movsl
clc
idiv
cmpb
movb
push
neg
xchg
into
nop
daa
jns
mov
mov
pop
hlt
enter
clc
aad
sbb
sbb
and
inc
mov
or
xor
fwait
cmpb
rcr
or
pushf
dec
enter
jne
push
loope
xor
sahf
ret
rcrl
dec
cmp
ret
movsb
sbb
jbe
inc
pop
test
add
mov
jb
fidivrl
cld
add
int
adc
jecxz
stc
int
outsl
sbb
rcrb
dec
sub
mov
nop
mov
push
inc
cltd
aad
leave
push
add
ds
fdivl
ror
clc
jg
xchg
mov
jo
push
and
fistpll
lcall
pop
frstor
aas
test
mov
xchg
xchg
pop
adc
pop
jle
bound
popf
test
es
adc
cmp
test
xor
push
mov
inc
out
push
dec
add
enter
data16
push
adc
call
stc
adc
movsl
hlt
pop
out
loopne
and
jmp
lret
cwtl
pop
push
movsl
out
pop
sarb
popa
push
arpl
sbb
push
cmp
out
sub
lret
jge
mov
dec
cltd
pop
popf
push
jo
cmpsb
ds
jp
rolb
loope
nop
or
sub
inc
fwait
test
xorl
jecxz
scas
jg
call
outsb
js
fldt
and
push
jp
clc
jmp
push
imul
jge
push
lea
or
and
pop
lahf
add
xchg
mov
adc
mov
mov
scas
mov
mov
push
imulb
xchg
mov
cmp
inc
sahf
jo
pusha
xchg
dec
xor
or
jp
mov
pop
lock
mov
lahf
movsb
sti
push
popf
jle
cmpsb
add
and
addr16
cld
mov
adc
sti
jl
push
mov
jae
mov
jg
test
daa
cmp
hlt
add
mov
call
push
jl
xchg
mov
in
and
jbe
sbb
nop
sti
and
mov
or
ss
cmpsl
cmpsl
loope
cmp
mulb
xchg
popf
fldenv
mov
or
mov
shrl
dec
mov
lock
xlat
mulb
dec
jae
add
mov
jmp
imul
pop
aaa
out
push
push
sbb
sbb
sarb
fimull
addr16
mov
cld
jne
push
icebp
hlt
fidivl
xchg
and
js
int3
mov
xchg
cmove
sub
es
dec
out
fistpl
js
leave
or
adc
stos
xchg
mov
fdivrs
pop
inc
push
push
aad
lcall
push
or
xorb
cmp
mov
mov
mov
rcll
les
mov
jne
push
cmc
subb
push
daa
sbb
js
lods
xchg
dec
sbb
sbb
and
outsb
dec
pop
and
lahf
jecxz
call
andl
inc
sbb
xchg
dec
das
cmp
insb
enter
inc
pop
pop
inc
jb
pop
pop
xchg
xchg
jle
mov
dec
mov
mov
out
call
inc
push
sbb
fs
pop
subl
dec
roll
adc
sub
mov
cmc
dec
xor
test
adc
xor
hlt
loop
je
sarl
pop
enter
int3
jle
in
dec
aad
or
out
sub
insl
xor
mov
lea
inc
shr
into
and
push
push
fisubrl
notl
adc
mov
aas
adc
add
inc
or
shll
mov
mov
and
push
sbb
icebp
addb
jmp
pop
inc
movsb
and
xchg
int
ds
dec
add
jne
push
push
pop
xor
mov
push
sarl
dec
push
or
fists
jo
adc
repnz
pop
cmp
pushf
repz
mov
fidivl
lods
shlb
cmp
or
popf
cmp
loopne
movsb
and
dec
add
ds
movsb
cwtl
iret
mov
add
enter
aas
sub
lcall
movsb
fisubl
pop
inc
or
sbb
clc
ljmp
fwait
dec
inc
ficomps
jae
cmpsb
loop
push
inc
mov
outsb
add
js
xor
xor
mov
fcmovne
loop
sahf
call
in
hlt
cmp
cmpsl
jge
fadds
pop
ss
jns
dec
push
loopne
mov
cs
enter
sub
pop
mov
mov
popa
pop
mov
stc
cmp
repz
xor
add
jae
jle
mov
inc
mov
ret
mov
mov
add
sub
mov
inc
mov
mov
arpl
or
dec
fisubrl
shll
fistpl
jnp
cltd
xchg
ss
sub
scas
lahf
add
fwait
xchg
movsb
aaa
xchg
sbbl
adc
test
or
es
add
push
mov
jb
dec
mov
and
mov
mov
cltd
data16
stos
das
mov
repnz
icebp
sarb
stos
pop
mov
cltd
adc
fucom
push
sbb
sbb
lahf
shlb
mov
setns
sub
push
push
sahf
fidivs
push
aad
and
je
insl
add
mov
sahf
sbb
mov
jno
inc
jl
xor
push
xchg
cmp
incb
inc
xor
mov
pop
in
pop
dec
jmp
push
push
sbb
mov
mov
jbe
loop
or
repnz
fistps
test
mov
nop
inc
or
inc
cmp
xor
jmp
push
icebp
lret
and
cli
cmp
fnstcw
adcb
out
in
dec
sbb
les
dec
inc
jp
jg
fdivr
test
sbb
jecxz
mov
out
fistpll
lcall
add
dec
mov
push
imul
and
sbb
xchg
bound
sahf
stos
lds
fstpl
cmp
xor
push
cmp
fstp
inc
mov
shl
sbb
mov
pop
mov
mov
mov
cmp
dec
sbb
das
cltd
xor
clc
add
pop
inc
push
test
adc
xchg
jmp
imul
ds
daa
add
adc
dec
jns
mov
or
frstor
lret
orb
push
cmp
imulb
iret
jo
incb
arpl
hlt
in
push
and
jns
mov
addr16
push
mov
daa
and
rolb
xchg
loope
inc
insb
jg
out
jecxz
sti
vmwrite
cwtl
fwait
jle
aam
push
jle
sbb
ret
or
ret
dec
inc
and
and
aas
lea
adc
cltd
pop
xor
mov
rcll
aas
out
mov
cmp
ret
fstpt
cs
cmp
out
inc
ja
orb
mov
and
and
pop
movzbl
cmpsl
faddl
hlt
inc
icebp
out
or
fidivrl
or
ds
loopnew
repz
imul
push
cmc
jg
fadds
aam
pop
xor
mov
mov
fiaddl
xor
pop
mov
xchg
push
mov
xorl
sub
push
jecxz
xor
stos
iret
or
jmp
insl
out
push
mov
pop
pop
push
pop
xlat
jp
push
inc
call
dec
dec
icebp
push
mov
push
push
ss
inc
in
jge
add
jne
sahf
push
sbb
sub
xchg
leave
sub
adc
in
adc
shlb
sbb
inc
dec
je
cmp
or
xor
push
notb
int3
jns
aad
cmp
push
mov
test
fldt
xchg
sub
jnp
call
mov
sbb
inc
outsb
repz
shl
mov
out
mov
mov
mov
adc
or
dec
jb
in
aam
icebp
les
iret
cmpb
jmp
ficoms
out
xorb
pop
bound
gs
jle
mov
or
das
fcmovne
daa
cmp
add
hlt
sub
jno
mov
into
xor
fildl
pop
test
and
aad
mov
sub
insl
mov
imul
insb
cmpsl
push
sbb
add
shl
popf
out
in
popa
jl
xor
sub
mov
shll
sub
sbb
dec
pop
sub
dec
xlat
and
pop
add
xchg
mov
dec
xchg
push
lock
call
cmp
dec
ljmp
and
addb
mov
fadds
adc
add
cs
mov
fwait
mov
sbb
mov
aam
mov
xchg
shl
ds
and
js
lock
adc
xchg
sub
push
inc
adc
lcall
mov
fisubrl
dec
outsl
lret
sub
stc
into
lds
fiaddl
pop
popf
sbb
rorb
lods
in
mov
call
pop
jle
push
add
or
xor
and
mov
in
sbb
out
aam
jb
dec
sahf
xchg
mov
and
dec
notb
subl
push
push
jle
jnp
imul
mov
ja
addr16
dec
sub
movsl
and
dec
dec
int3
jae
pushf
adc
jbe
lcall
cs
mov
insb
jne
imul
xor
push
mov
adc
mov
or
lods
std
sahf
out
sbb
mov
adc
sarl
repz
add
mov
mov
subb
movsb
xchg
inc
sub
mov
xchg
fldt
stc
xchg
add
adc
xor
push
xchg
sbb
frstor
push
aas
or
pusha
mov
lds
mov
or
push
stc
in
es
or
jns
data16
dec
xlat
in
and
push
adc
scas
add
testl
pop
mov
cwtl
ds
out
add
mov
push
and
loop
ljmp
test
aaa
push
in
fstpt
orl
in
out
dec
in
cmp
jl
xchg
insb
loopne
inc
xchg
outsb
mov
fsub
fwait
sub
jmp
xchg
rcr
xor
loope
jl
cmp
ja
rol
scas
inc
ja
jo
test
aas
xchg
out
outsb
loope,pt
call
sahf
or
mov
cvtdq2ps
jb
ss
push
jecxz
jle
lock
mov
cli
scas
mov
sbb
fadds
outsl
lahf
pop
inc
xchg
inc
jb
sub
pop
pop
popa
push
jne
movsb
xchg
lahf
loope
out
adc
adc
jmp
jle
int3
cmp
mov
loopne
fmull
sub
mov
ret
mov
and
fwait
sbb
and
mov
cmp
rorb
adc
push
mov
lahf
in
xor
imul
mov
and
fcmove
mov
mov
or
xchg
xor
in
xchg
aam
dec
mov
icebp
cld
mov
lods
sti
mov
nop
cmp
lea
sbb
add
xor
add
xor
ffree
and
xchg
jg
mov
mov
stos
in
mov
shlb
dec
cs
mov
daa
mov
pop
lcall
lret
stc
sub
push
iret
fstps
cmp
jo
add
sbb
pop
popf
mov
into
xchg
pop
clflush
jg
fdivr
jle
or
add
inc
ret
dec
cmp
out
repnz
xchg
inc
jae
pop
scas
xchg
stos
lods
mov
outsb
sarb
xor
ds
mov
push
icebp
mov
add
fstp
bound
popf
xchg
test
sbb
imul
and
cmpsb
pop
jg
xchg
fwait
push
andb
shrb
clc
lahf
pop
xor
dec
mov
dec
fstl
mov
jp
dec
inc
mov
push
loopne
cmp
or
xor
mov
out
add
pop
add
sub
push
fidivrl
mov
and
or
into
add
cmp
loopne
imul
push
jg
push
inc
pop
in
push
sahf
sub
mov
pop
dec
xor
mov
fstpt
adc
ret
leave
pop
imul
pop
mov
dec
lcall
scas
fs
cli
push
mov
pop
dec
scas
inc
js
inc
addr16
mov
lret
repnz
jae
gs
mov
mov
in
jge
lret
lea
in
mov
mov
jae
test
sbb
roll
jo
xchg
add
into
mov
out
data16
test
add
dec
dec
out
aam
mov
decb
cli
addr16
sarb
adc
or
add
lds
hlt
xor
sahf
int3
lret
dec
adc
inc
popa
into
shlb
push
into
jle
lock
jle
inc
insl
repz
mov
adc
clc
out
in
mov
imul
dec
or
push
jp
mov
lcall
mov
mov
or
jnp
imul
dec
or
push
jp
mov
lcall
mov
mov
or
jnp
imul
dec
or
push
jp
mov
lcall
fidivrl
or
dec
sub
sbb
pop
mov
mov
push
stos
jmp
in
inc
add
icebp
aaa
loope
rcll
roll
push
roll
pushl
addr16
pusha
test
mov
and
adc
add
icebp
xor
and
adc
add
push
subl
fwait
inc
xor
and
adc
add
icebp
xchg
loope
rorl
mov
jno
mov
cmpb
dec
test
cmpsl
scas
ja
inc
lods
data16
sub
adc
scas
pop
fcom
subb
fs
inc
sub
mov
addr16
dec
mov
mov
scas
insb
mov
mov
mov
dec
mov
cmp
fistps
jno
xor
jge
add
pop
add
xor
and
addr16
adc
or
scas
insb
sub
xchg
sub
mov
xor
ds
call
xchg
les
aam
cmp
bound
add
int3
push
fcoml
dec
shll
push
nop
sbb
addl
inc
imul
push
aas
subl
mov
mov
shll
popa
or
inc
mov
adc
add
mov
xchg
dec
mov
rorl
cmc
addl
add
push
ss
xor
stos
xchg
jne
gs
lods
outsl
mov
in
jmp
shlb
push
roll
mov
je
xchg
inc
loope
mov
aas
mov
inc
jno
popa
mov
xor
and
adc
add
icebp
xor
and
adc
add
push
addl
xchg
inc
xorl
and
adc
add
icebp
xor
jne
outsb
out
in
dec
adc
push
cli
jbe
push
cld
push
fsts
js
mov
push
pop
rorl
mov
in
inc
mov
xchg
fsub
add
push
repz
mov
loop
mov
jle
jns
jbe
jbe
scas
and
repnz
fstl
int
popa
fistpll
sbb
ret
cs
imul
pop
or
xor
popa
or
inc
mov
or
cmpsl
sbb
mov
adc
jnp
add
leave
out
pop
mov
test
dec
or
xchg
or
popf
stos
sbb
push
push
stos
int
xchg
xchg
push
jne
xchg
adc
mov
shrb
enter
out
and
es
outsl
sub
inc
sahf
enter
pop
fidivrs
adc
mov
gs
mov
gs
push
std
inc
aad
test
xchg
fbstp
add
sbb
jp
cmp
or
pop
out
xlat
decl
popa
mov
fistpl
sub
orl
insb
sar
daa
dec
or
sub
sti
inc
idivl
cli
icebp
pop
jecxz
jg
push
mov
cli
shl
sub
or
loopne
mov
shrb
rcrb
add
pop
jmp
lcall
cmpsl
mov
roll
jg
scas
push
lahf
xchg
and
rclb
xchg
xchg
jno
outsb
movb
cld
mov
jecxz
push
sbb
pop
das
mov
icebp
imul
cmp
push
jge
add
xchg
push
jl
xchg
mov
xchg
push
or
dec
xlat
xchg
rcr
sbb
scas
out
mov
js
ds
cmpsl
add
not
icebp
outsl
andb
jne
es
daa
jecxz
xor
fwait
or
ja
cmpsb
push
int
lds
clc
push
and
dec
int3
rorl
adc
std
sbb
pop
bound
cmp
aas
fs
cmpsl
fstpt
jbe
clc
mov
inc
inc
xchg
push
leave
test
push
test
pusha
xor
jno
inc
sub
mov
ljmp
es
sub
sbb
hlt
jg
lea
leave
xchg
jg
lea
test
mov
ljmp
mov
jnp
sub
lds
arpl
jle
aas
test
xchg
out
ds
orb
xor
loope
xchg
mov
lret
xchg
xor
test
xor
mov
jg
xchg
ss
lret
xor
pop
cmp
adc
jecxz
nop
incl
testl
sbb
pushf
cli
subl
xor
lahf
pusha
cmp
pushf
ret
leave
add
jns
add
jge
pop
addl
aam
push
jbe
mov
ja
sbb
out
aaa
stc
and
xor
pop
sub
jae
adc
jmp
repz
cmc
adc
imul
mov
add
lret
mov
push
out
xchg
ret
pushf
add
inc
ss
mov
sub
pop
cltd
imul
jbe
sub
shll
jbe
rcl
jecxz
or
cltd
addr16
pusha
jge
fsubs
adc
mov
pop
loope
push
sub
inc
mov
popa
mov
lcall
xor
arpl
movsb
sbb
lods
or
addl
out
or
imul
rorb
jne
fiadds
adc
daa
lods
push
cli
pop
cli
adc
dec
arpl
add
outsl
add
push
insl
mov
pop
jnp
dec
mov
sarb
xor
insl
sub
mov
push
push
lea
jg
cmp
adc
sub
das
sbb
lods
adc
lods
cmp
arpl
gs
inc
cmp
xor
iret
push
rcr
sub
mov
inc
bt
mov
out
inc
pop
push
test
push
xlat
push
fwait
inc
adc
xor
push
icebp
aam
pop
or
jecxz
jno
mov
cmc
inc
mov
aam
push
mov
jmp
mov
mov
inc
jae
cli
call
fistpll
les
add
into
push
add
add
hlt
adc
ljmp
call
cmp
int3
rcll
scas
leave
push
add
arpl
mov
rclb
xchg
mov
loopne
sarl
dec
les
pop
xor
pop
out
mov
dec
xor
push
jnp
loopne
push
push
daa
jp
pop
mov
mov
call
pop
mov
lea
push
ficoml
shll
fdivr
inc
ret
xchg
ror
push
and
inc
lret
jge
jp
push
pop
in
sbb
das
mov
xor
pop
sub
or
pop
mov
sub
mov
or
sub
sbb
mov
inc
mov
push
push
lret
mov
daa
cmpsb
rorl
xchg
xor
sahf
cmpsl
xor
jno
popf
insl
mov
dec
sub
or
jle
adc
jmp
add
sbb
out
sbb
leave
pop
clc
cs
sti
mov
loop
fstpt
and
shrb
test
mov
xchg
nop
cmp
in
push
jl
popf
adc
loop
imul
ret
into
shlb
fnstcw
or
dec
mov
ds
loopne
pushf
rorl
les
cmc
and
cltd
cli
insb
mov
sete
inc
xorl
add
fiaddl
pop
push
vmread
outsl
pop
outsl
movsl
lret
mov
cltd
push
sbb
pop
and
sbb
push
and
mov
pop
mov
xchg
sub
jb
popa
cld
mov
lcall
into
inc
push
rclb
sbb
push
test
ret
inc
int3
xchg
movsb
aas
mov
push
xor
xor
or
imul
jg
sti
sub
fsubs
dec
mov
xor
movsb
mov
dec
mov
daa
push
stos
or
js
jns
iret
mov
xchg
jl
mov
cs
cmpsb
mov
mov
dec
add
sbb
sbb
sub
hlt
sbb
fsts
sbb
rcrb
xor
lods
mov
ficoms
pushf
out
fidivs
and
sbb
or
push
sub
mov
xlat
push
dec
add
ret
pop
fs
inc
jge
imulb
inc
jp
xor
stos
mov
sbb
or
popf
push
shll
dec
aam
test
sub
nop
dec
push
stc
or
ds
ret
mov
fwait
push
pop
push
lret
test
jge
and
in
push
pusha
jge
pop
sub
enter
stos
add
iret
inc
test
hlt
out
gs
mov
sbbb
ret
test
cwtl
lahf
xchg
mov
into
mov
mov
or
daa
nop
jbe
in
inc
pop
mov
dec
les
push
mov
sbb
hlt
cmc
xchg
pop
xchg
stos
jb
lods
ja,pt
loop
cs
pop
push
daa
and
sub
imul
cmpsl
mov
cmp
loope
leave
addr16
in
stos
js
cmp
shrl
stos
mov
orl
das
jp
mov
dec
xchg
out
pop
jmp
dec
or
add
adc
xor
mov
outsl
fsubrl
mov
mov
pop
lods
outsl
lret
xchg
sbb
popf
pushf
sub
les
lods
xor
and
mov
cs
pop
sti
fildll
dec
ret
xor
push
aaa
js
lret
enter
add
fdivs
push
adc
and
gs
push
loopne
lret
xchg
mov
dec
hlt
mov
lods
daa
mov
sar
xor
loop
cmp
mov
or
adc
aaa
aad
cmp
mov
cmpsb
or
push
lea
cld
mov
loopne
pop
xchg
add
cmp
pop
xor
test
fnstsw
xor
jno
or
je
push
fnstsw
ret
leave
xchg
xchg
stos
mov
pop
cmpsl
hlt
pop
test
jmp
adc
adc
scas
jle
inc
sbb
or
push
jl
lock
adc
push
inc
adc
out
sahf
inc
les
xlat
cltd
xor
dec
mov
add
filds
aad
iret
cltd
test
lahf
pop
sbb
call
lret
sbb
mov
out
dec
inc
ret
sbb
and
jecxz
movsb
mov
cmpb
mov
mov
or
test
xlat
xchg
roll
xchg
mov
clc
cmpsb
mov
mov
sub
lock
pop
cltd
mov
sbb
jp
sub
cmp
cld
jo
leave
pop
mov
in
sub
fs
jp
mov
test
andb
test
jecxz
pop
and
pop
push
rcrb
pop
loopne
test
ret
cmp
loopne
lea
fimuls
in
js
xchg
add
jnp
fld
stos
mov
push
mov
cmc
push
mov
sub
jp
aam
pop
testl
mov
ss
stc
inc
imul
out
inc
cs
call
xchg
fbstp
inc
add
cmp
mov
out
xchg
mov
cmp
hlt
mov
mov
fistl
mov
je
sub
jne
outsl
mov
sub
push
fs
ret
aas
add
jge
pop
jecxz
pop
sbb
mov
bnd
decl
push
into
jnp
adc
sbb
push
or
rcll
or
push
fstpl
mov
xor
push
add
jbe
xor
sub
and
cmp
loop
inc
fstpt
pop
fisubl
mov
in
lods
pop
xchg
comiss
dec
mov
cmp
mov
pushf
sub
dec
test
daa
sub
sub
mov
adc
jo
sub
loop
and
icebp
jle
mov
sub
addr16
jbe
cmp
or
mov
dec
xor
fs
cmp
pop
sub
mov
mov
test
out
inc
icebp
push
cmp
pop
jno
mov
pushf
mov
sbb
aad
repnz
ljmp
xchg
jns
loopne
fstpt
mov
and
jge
and
not
adc
mov
pop
xlat
cmpsl
push
cltd
outsb
lret
xchg
orb
daa
mov
mov
mov
cmp
add
add
mov
push
mov
adc
adc
sarl
pop
pop
xor
call
or
pop
add
js
sbb
push
call
jg
inc
mov
lret
sub
outsl
jp
in
mov
fcompl
mov
outsb
pop
push
ficoml
jmp
or
cli
mov
mov
lret
out
and
int
push
mov
xor
mov
mov
je
pop
mov
jmp
jg
add
cltd
and
test
lods
or
mov
cmp
orl
sub
sub
xchg
push
push
insb
and
adc
out
mov
ficomps
jb
xor
mov
xor
insl
hlt
and
mov
scas
jb
jbe
pop
jge
lret
icebp
mov
xor
aad
jno
hlt
out
test
fmull
in
out
out
pop
xor
jbe
add
leave
xchg
jmp
cmp
dec
add
inc
call
hlt
pop
xchg
mov
vmovsldup
idiv
mov
adc
and
mov
imul
sbb
lret
out
adc
bound
push
movsb
sbb
ret
push
mov
pop
ds
dec
hlt
xorl
cmc
subl
adc
jmp
bound
je
lret
jmp
mov
js
push
and
mov
mov
xlat
sbb
stos
cmpsl
sbb
mov
out
inc
mov
and
aad
sub
mov
dec
mov
mov
dec
sub
lcall
fldenv
in
fisubrl
stos
jae
setg
dec
testb
push
hlt
bound
and
dec
leave
leave
lahf
fadd
pop
pop
dec
mov
push
push
push
xchg
int
dec
push
js
jmp
mov
aad
stos
jbe
or
dec
dec
das
pop
adc
push
mov
cld
add
shl
mov
repnz
or
pop
xchg
mov
aam
xor
sahf
stos
test
test
mov
in
inc
out
pop
movsl
push
jmp
aam
call
paddw
shrl
fadd
mov
pop
cmpl
push
sub
cmpsb
xorb
pop
aam
sahf
sahf
lock
rol
adc
and
lods
test
sub
hlt
dec
push
sbb
test
stos
addr16
push
out
and
xor
dec
dec
rorb
pop
jp
mov
insl
into
mov
sbb
sub
adc
fisttpl
add
pusha
sub
out
out
mov
ja
or
clc
mov
movsl
insl
popa
js
and
mov
dec
inc
rcll
fstl
pop
dec
push
sbb
cmpsb
pop
orl
pushf
sti
int
jp
dec
in
out
jnp
xor
pop
add
or
or
in
sbb
popf
pushf
movsl
cmp
mov
or
lahf
cmpsl
dec
push
das
cmp
mov
ss
imul
aam
xor
ljmp
mov
inc
sti
negl
adc
int
adc
out
loope
jecxz
fmul
iret
mov
fsub
mov
in
and
or
push
mov
dec
insl
hlt
cmp
fs
ljmp
mov
sahf
repnz
out
sub
dec
dec
icebp
push
je
xchg
bound
push
pop
fcompl
inc
iret
jmp
sbb
fcmovne
xlat
inc
and
loope
das
lds
dec
cvtps2pd
lock
and
clc
lahf
jmp
dec
push
mov
mov
imul
popa
aam
cmp
insl
and
dec
rol
insl
xchg
lcall
addr16
fisttpll
jge
mull
xchg
lahf
jne
loopne
loope
adc
pop
arpl
push
push
fdivs
enter
cmp
inc
lcall
iret
jo
cwtl
fmull
iret
mov
mov
or
sbb
adc
aad
dec
gs
sbb
ficompl
insl
es
stc
bound
mov
and
push
xor
fdivl
insl
sbb
mov
mov
push
sub
xorl
mov
mov
ret
push
imulb
sbb
pop
inc
sarl
shl
push
movsb
mov
cmpsb
shll
test
data16
sbbl
cmpb
movsl
imul
insb
mov
push
jo
mov
inc
push
push
push
jle
aaa
sarb
jp
cmp
sub
addr16
pop
addr16
sbb
addr16
push
sbbl
adc
stc
xchg
aaa
mov
aam
or
jg
sahf
push
test
icebp
fidivrl
add
xchg
je
jnp
popf
push
mov
test
arpl
popf
in
loop
jg
loop
repnz
jl
sbb
lock
and
push
call
adc
pop
jge
mov
xchg
mov
adc
or
imul
cli
ds
cmpsb
lea
jp
imul
push
xchg
lock
pusha
clc
jecxz
ljmp
pop
adc
or
out
jp
pusha
mov
xlat
and
jno
sub
popf
jecxz
leave
lock
filds
xor
js
iret
sub
xor
sub
mov
loop
out
sub
or
sub
inc
xchg
pop
test
mov
int3
popf
fnstsw
negl
movsl
add
test
xchg
sub
xchg
lahf
jp
or
xor
cs
push
mov
jle
punpckhdq
into
push
stc
xchg
test
mov
inc
xor
pop
mov
lods
mov
sbb
pop
je
loopne
mov
std
mov
sbb
pop
insl
jne
ret
setge
sbb
fisttpll
mov
lock
mov
mov
cli
xor
repnz
xor
imul
pushf
add
cmpb
xchg
adc
adc
btr
mov
or
jae
cmp
sbbb
rcrl
or
sbb
mov
lahf
push
add
addr16
ss
sbb
jb
cmp
test
pop
pop
cs
mov
out
test
idiv
out
cmp
sbb
sub
xchg
mov
add
sub
mov
fmulp
cmp
leave
or
cltd
dec
std
icebp
nop
clc
jae
scas
ficoml
shll
jge
into
clc
in
ja
jne
lahf
lret
cld
sub
shrl
xlat
xor
outsb
insl
and
sbb
inc
imul
adc
ds
mov
sbb
pop
dec
pop
out
sarl
sub
cld
fnsave
decl
mov
dec
cltd
xor
pop
mov
mov
xchg
movsl
push
je
mov
stos
or
inc
mov
or
in
cld
std
inc
loop
rclb
xchg
adc
adc
push
jge
js
sahf
dec
inc
push
sub
addb
in
xchg
jne
jecxz
inc
add
pop
pop
dec
xchg
movsb
in
jmp
or
fldenv
pop
and
pop
adcl
cmc
pop
sbb
xchg
pcmpeqd
mov
test
xor
arpl
sbb
or
jo
nop
jns
xor
inc
push
mov
jb
xchg
cmp
clc
push
or
push
clc
sub
push
lea
aaa
lods
scas
cltd
enter
add
and
mov
cmp
adc
push
jmp
icebp
dec
mov
cmp
test
jg
loope
jae
dec
hlt
add
imul
mov
sub
sub
aam
xchg
pop
fisttpll
cmpsb
jle
xor
and
loopne
jno
shl
xchg
add
pop
xor
jb
std
cli
loope
and
stos
sbb
in
push
xor
mov
push
xchg
jecxz
jge
neg
mov
test
pop
gs
xor
loopne
lea
lods
and
push
sahf
xchg
popf
sti
mov
xor
fcoml
mov
xchg
add
push
or
orb
movsb
pushf
adc
push
xor
fmuls
lahf
jp
js
jg
pop
add
cwtl
sbb
into
push
ss
hlt
push
outsl
addr16
sub
orb
sub
sbb
mov
mov
pushf
dec
pop
sub
aaa
and
test
cmpsb
subb
insb
and
xchg
cld
pop
imul
pop
es
ss
mov
fisubs
add
xchg
jle
inc
mov
dec
scas
iret
decl
mov
mov
pushfw
cmp
inc
dec
pop
lret
mov
imul
xchg
dec
nop
icebp
clc
mov
cmpsb
adc
add
cmp
and
mov
push
fistpll
jecxz
mov
adc
stos
pop
stos
and
jbe
push
dec
movsb
mov
cli
mov
xor
add
push
sub
les
fadds
loope
into
mov
inc
push
popa
loop
mov
lret
jns
dec
cli
push
fcmovnu
xor
push
mov
popf
dec
mov
or
mov
data16
jg
ret
mov
inc
loop
xor
fcoml
sub
sbb
and
cmc
push
jp
cmp
jmp
sbb
sbb
ret
daa
pmuludq
pop
pop
lret
mov
pushf
fs
jne
cs
leave
pop
dec
add
mov
add
push
xor
rclb
std
test
mov
jb
pop
add
sahf
mov
jne
jne
outsb
dec
jnp
jo
push
test
dec
lcall
test
dec
sbb
jnp
gs
jbe
loop
xor
repnz
rcr
push
mov
mov
sub
nop
sub
idiv
and
scas
jae
fldl
mov
sub
push
repz
cs
arpl
mov
aad
dec
xchg
mov
xor
and
outsb
mov
or
cmc
sti
in
adc
jns
fisttpll
lret
je
inc
sbb
xor
jb
mov
sub
les
jp
jne
mov
jmp
cmc
stc
cmc
imul
sub
or
imul
push
jg
adc
sbb
stos
cwtl
sub
into
push
fistpll
movsl
mov
xor
push
cmc
movsl
push
sub
rclb
pushf
std
addb
inc
cmpsl
bound
aaa
and
push
roll
jae
arpl
mov
mov
xor
and
adc
add
icebp
xor
and
adc
add
push
addl
xchg
inc
xorl
and
adc
add
icebp
aaa
popa
sub
xor
or
mov
cmpsl
push
xchg
inc
mov
mull
jecxz
fiaddl
daa
icebp
xlat
loope
shl
roll
mov
xorl
or
xchg
inc
hlt
inc
mov
popa
stos
jno
cmp
sub
sbb
or
jno
psllw
dec
stos
pop
cwtl
outsl
mov
psubsb
das
enter
sub
sbb
or
js
push
mov
cwtl
outsl
mov
psubsw
fsubrs
enter
sub
sbb
or
js
push
mov
call
pop
fwait
jnp
dec
mov
stos
sbb
aas
pop
mov
ret
pop
jo
orl
outsl
arpl
xor
lahf
out
cmc
add
push
mov
repnz
jle
iret
call
ret
fiaddl
jb
inc
xchg
sub
test
ds
mov
mov
pop
ror
cmp
pmaxub
out
por
mov
out
dec
jl
dec
jns
ja
test
call
push
imul
popf
cmp
add
push
ret
jmp
adc
push
outsl
add
shlb
and
testl
pushl
loop
sbb
mov
aas
sti
iret
sub
sbb
or
js
push
mov
cwtl
outsl
mov
psubsb
fsubrs
enter
dec
or
test
pop
fidivs
lret
enter
jmp
int
jle
test
pop
dec
mov
out
dec
test
ljmp
lret
xor
cmp
jo
pop
mov
stos
pop
fwait
insl
mov
scas
dec
mov
cwtl
outsl
mov
psubsb
fsubrs
enter
sub
sbb
or
js
push
mov
cwtl
outsl
mov
psubsb
fsubrs
enter
dec
lret
ja
test
lcall
push
jnp
cmpsl
xor
cmp
and
dec
in
jns
cmpsl
shl
dec
imul
xor
dec
enter
adc
ret
adc
mov
pop
ds
std
sbb
sub
cmp
testl
iret
add
cli
int
insl
outsl
fistpl
popf
adc
and
adc
imul
aaa
lods
or
cli
mov
cmpsl
in
in
adc
in
ret
mov
ret
daa
leavew
call
cmp
xchg
cmc
das
dec
lock
mov
mov
sbb
test
sbb
adc
int
xchg
shll
mov
dec
pop
push
aas
in
imul
popf
pop
cmp
cmpl
sbb
movsb
iret
and
mov
mov
fnstcw
mov
jno
xchg
addl
dec
pop
push
push
push
jle
push
pop
int3
stos
cmp
sbb
jae
push
add
aaa
mov
sti
adc
leave
cmp
loop
dec
jecxz
sbb
sub
out
cmpsb
les
cmc
out
pop
stos
test
jmp
xor
into
nop
fistps
or
fwait
insl
xor
repz
call
jle
pop
jo
mov
xchg
dec
jl
mov
mov
popf
dec
adc
ret
xchg
dec
or
xlat
xor
adcb
jns
add
pusha
jecxz
ja
mov
fidivl
loope
cltd
les
pop
outsb
cmp
sub
into
adcb
sbb
neg
fwait
mov
int
push
mov
xchg
enter
adc
lods
pop
ljmp
jbe
cli
lret
cmp
sub
mov
idivl
imul
mov
sub
xchg
xchg
cmp
or
push
stos
or
and
data16
movsb
aaa
jp
subb
cmp
push
scas
inc
jle
sarl
orb
jae
add
sbb
dec
aaa
mov
mov
adc
popf
fidivrl
adc
sbb
cld
sbb
ljmp
mov
adc
mov
cmp
jp
fistl
fisttps
lcall
pusha
mov
push
in
int3
arpl
mov
cmp
leave
ret
sbb
xchg
arpl
test
repz
sbb
mov
xchg
fwait
dec
xchg
pushf
push
scas
dec
mov
aad
out
inc
fldcw
add
int3
inc
js
push
mov
sbb
and
add
fwait
cwtl
icebp
dec
int
fs
adc
daa
xchg
cmc
aad
sbbb
icebp
out
dec
repnz
roll
xchg
aam
ljmp
adc
mov
movsl
fs
xchg
shll
cmp
pop
or
mov
sbb
add
cmp
mov
push
xchg
and
sub
das
shll
dec
sub
and
out
and
push
dec
pop
insb
cs
push
icebp
icebp
jg
ljmp
jno
add
push
cwtl
sub
cmp
shl
gs
cmp
and
icebp
inc
int3
adc
cltd
sub
xor
inc
sti
adc
mov
stos
ret
lds
adc
dec
stc
sub
push
mov
out
cmp
outsb
vmovss
and
fidivl
gs
mov
or
pop
out
stc
cmp
jl
notb
xchg
ret
ss
es
push
aad
pop
pusha
jno
mov
jne
inc
ret
sti
pop
push
xchg
mov
dec
mov
jb
test
lea
rol
mov
sahf
xor
imul
dec
test
in
adc
sbb
call
mov
mov
mov
mov
pop
shlb
dec
mov
out
loop
dec
xchg
addr16
jg
testb
clc
mov
mov
pop
push
js
dec
mov
inc
cmc
mov
mov
xlat
push
data16
inc
jns
lret
sub
andl
cmpl
cmpsl
adc
cmp
cwtl
xchg
cmp
sub
movsl
shll
popf
stc
cltd
jmp
call
dec
ljmp
and
jae
or
inc
jns
inc
dec
pop
lock
sub
cmp
fistps
data16
test
clc
in
int3
cs
dec
mov
xchg
lods
xlat
loope
ficoms
sbb
push
mov
dec
pop
xor
mov
js
or
adc
mov
ss
pop
daa
inc
mov
cmpsl
pop
dec
and
int
out
xorb
or
popa
out
sbb
ret
in
xor
test
or
push
adc
push
cs
mov
jo
aaa
xchg
shrb
int3
adc
imul
push
jmp
stos
pop
pop
or
cmc
nop
xchg
stos
xchg
test
and
and
insl
cmp
fisubs
xchg
or
xchg
jl
inc
mov
cwtl
mov
lret
sbb
xor
dec
aad
or
negb
into
cmc
ficoml
cmpsl
dec
add
mov
stc
jo
mov
jg
ss
or
and
mov
add
cmp
out
mov
add
ret
mov
sahf
mov
cmp
into
cmp
ja
stos
adc
imul
dec
fyl2xp1
adc
xchg
je
repnz
test
fsubs
pand
sbb
lock
push
popf
lcall
popf
mov
fwait
adc
sbb
sahf
add
sub
xchg
les
imul
or
stc
inc
sbb
mov
xchg
jp
bound
or
push
sbb
sbb
pop
mov
into
loop
push
cwtl
dec
mov
or
cmpl
mov
dec
adc
lock
leave
mov
pop
push
or
fs
mov
popa
pop
ds
lahf
mov
dec
push
iret
mov
sub
test
aam
push
xor
stc
rcl
jle
xchg
aam
pop
movsl
test
stc
int
dec
jne
outsl
fimull
add
inc
jl
cmp
dec
adc
adc
add
lret
push
and
push
jns
jmp
mov
mov
cmp
leave
nop
loopne
bound
jmp
lcall
ss
push
movsb
icebp
pop
repz
clc
mov
test
mov
sbb
call
sub
fidivs
mov
add
cmpsb
push
mov
out
decl
leave
jne
loopne
or
or
fistpl
pop
out
push
sbb
pop
std
stos
mov
in
xchg
cli
lret
sub
mov
rolb
pop
cmp
enter
xchg
and
inc
mov
lcall
sub
cs
xlat
in
mov
enter
lcall
lret
push
scas
outsb
fcoml
jns
pop
int
cmp
lds
fldcw
sbb
lret
test
cmpsl
adc
ffree
xchg
pop
jl
dec
cmp
or
jp
sbb
mov
xorl
pop
and
cmc
js
cmpsb
xor
outsl
outsb
testb
mov
repz
inc
mov
xor
push
lea
js
jb
enter
dec
mov
notl
fiaddl
adc
mov
mov
sub
repnz
popf
jmp
add
imul
mov
cmp
push
pushf
mov
sub
aas
cmp
shlb
loope
insb
filds
or
or
fscale
add
jo
xchg
roll
daa
xchg
repz
mov
lcall
repnz
adc
sbbl
inc
das
inc
mov
push
push
add
imul
pop
sbb
stc
inc
mov
mov
mov
pop
xchg
aad
pop
push
xchg
mov
and
movl
hlt
inc
xor
jnp
or
mov
push
mov
cwtl
jecxz
dec
sub
pushf
adc
cmp
adc
push
daa
add
lods
popa
cwtl
jge
and
add
pusha
jnp
dec
test
push
and
movb
add
test
ljmp
mov
negl
jge
xor
sub
rorb
icebp
xor
test
rcrb
push
xchg
xor
ljmp
xor
icebp
mov
mov
mov
aam
xchg
loopne
in
or
jmp
pop
xor
sbb
and
sti
sub
adc
jmp
sbb
bound
inc
fst
jmp
ret
fmulp
mov
test
cltd
jae
sbb
pop
jl
or
lods
lret
push
into
stos
inc
js
lods
lcall
sti
pop
mov
xchg
ja
ror
adc
scas
inc
pop
stos
int
cmp
or
mov
or
mov
shl
repz
mov
stos
and
add
push
mov
push
and
push
ret
adcl
in
jp
dec
mov
scas
or
add
xchg
adc
cmp
sub
push
leave
and
scas
ficompl
cmpb
sarb
loopne
sbb
add
push
jg
loop
jns
sbb
or
and
sahf
sbb
lods
mov
sarb
scas
sub
scas
push
ret
xor
gs
and
sub
out
push
jo
cmp
mov
inc
mov
xchg
dec
insl
mov
pop
pusha
ss
sbb
push
leave
dec
test
cltd
push
xor
sub
adc
clc
outsl
mov
jle
xchg
adc
jge
shrb
mov
or
arpl
adc
push
dec
enter
pop
call
scas
xorl
cmp
push
dec
adc
cmp
sub
push
cmpb
jecxz
ret
sbb
js
pop
add
test
jae
repz
imul
insl
pop
mov
in
pushl
and
cmc
xchg
fisubs
xchg
mov
insl
lock
push
push
aad
addr16
inc
filds
lea
and
push
in
pop
xor
jge
popa
push
sbb
inc
mov
lds
aam
daa
xchg
sub
sub
inc
insl
inc
xchg
in
fnstcw
push
mov
jo
sub
fbstp
mov
dec
and
push
mov
and
and
stos
fisttpll
xchg
enter
add
scas
xchg
fstpl
mov
gs
or
int3
mov
out
pop
jnp
mov
add
icebp
xor
loope
gs
cmp
or
or
xchg
sbb
inc
sahf
loopne
push
ret
imul
mov
arpl
jae
repnz
jmp
mov
pop
loopne
xlat
and
test
pop
push
dec
les
rorb
fmull
lds
shlb
pushl
sbb
fdivp
pop
adc
xchg
xchg
sbb
add
imul
in
push
jae
lcall
scas
aam
mov
mov
push
mov
lcall
push
lahf
lcall
xchg
sbb
or
aaa
mov
xchg
sub
xchg
xchg
xor
out
rolb
divb
lea
loop
xchg
insb
mov
pop
pop
test
cmp
sbb
add
imul
cwtl
pushf
and
push
or
aaa
stc
xchg
adc
mov
or
les
pop
dec
xchg
imul
aaa
scas
xchg
in
xor
sbbb
les
pop
mulb
fwait
das
sub
jmp
ljmp
sub
stc
ja
lcall
inc
aas
push
jo
sub
inc
xchg
add
pop
and
mov
mov
xor
push
xor
inc
scas
jecxz
inc
cmp
pop
xlat
arpl
rol
in
mov
into
sub
sahf
imul
pop
push
or
ja
dec
mov
mov
or
push
imul
and
call
and
lods
fsub
xchg
ret
rcrl
cli
in
ret
mov
mov
push
pop
jp
sub
pop
or
pop
mov
adc
lea
sbb
aas
call
add
mov
xor
orl
ds
or
sub
or
xor
inc
or
sub
clc
pop
sbb
scas
loop
xchg
push
popf
or
sbb
pop
dec
push
cltd
pop
cmpsl
push
dec
sbb
clc
in
out
xor
movsl
or
or
jbe
mov
add
clc
pushf
jge
pop
inc
fs
sbb
pusha
mov
iret
fisubrs
sbb
ljmp
sahf
fwait
ljmp
jns
jb
inc
fidivrl
stc
std
xor
mov
das
cld
dec
pusha
xchg
jne
cli
ljmp
out
sub
mov
jmp
aad
xchg
inc
pop
cltd
mov
movsb
fcomps
and
fistpll
jle
test
pop
mov
adc
and
inc
in
inc
mov
cmp
xchg
sbb
fwait
dec
mov
and
movsl
dec
push
lcall
jae
bound
dec
or
adc
inc
cmp
lcallw
jmp
push
xchg
and
xchg
shlb
ljmp
lods
loope
mov
xchg
and
push
add
adc
xchg
ficoms
pop
and
push
aam
js
adc
imul
dec
mov
clc
cmp
aas
enter
mov
sub
into
mov
pusha
mov
lock
push
push
jecxz
jnp
mov
and
xor
pop
les
pop
mov
sub
and
lea
pusha
aaa
push
test
lock
ljmp
call
sbb
mov
xlat
push
loop
test
sbb
inc
lds
out
mov
jmp
jne
into
mov
xchg
and
idivb
xchg
mov
jns
scas
outsl
int3
cs
push
test
sbb
xchg
jle
movsl
mov
mov
nop
mov
cmp
jle
movsb
mov
data16
xor
mov
rcll
pop
or
leave
xor
fmuls
fwait
mov
inc
dec
dec
scas
jns
clc
fdiv
out
leave
jg
ljmp
iret
cld
pop
cltd
testb
loope
ljmp
fimuls
and
push
inc
push
pop
cmp
pop
dec
arpl
mov
mov
lods
cmp
jo
in
hlt
pop
dec
add
and
icebp
inc
int3
sbbb
fnstsw
aam
push
dec
xchg
sbb
mov
pop
pop
and
iret
cmp
xchg
nop
or
add
mov
sbb
outsl
ret
lods
stos
pop
icebp
aaa
jg
imul
jge
mov
push
sbb
into
jecxz
inc
popf
add
mov
xorb
jno
fs
imul
stc
xchg
lods
scas
jge
test
fdivrl
movsl
inc
push
scas
lock
inc
push
repz
rcrl
fiadds
mov
cltd
push
leave
outsb
mov
and
lock
sub
inc
fldt
pop
aaa
xor
jo
push
in
xorl
out
fptan
test
or
shll
mov
cltd
add
mov
pushf
hlt
jo
jmp
adc
xabort
cmp
call
sbb
cli
pop
mov
dec
call
sti
divl
sub
jo
hlt
pop
fidivrl
sbb
inc
jp
out
fcmovnb
lcall
dec
or
sbb
outsb
xor
loopne
cmpsb
adc
sub
xor
sub
xor
out
sub
in
mov
nop
stos
dec
mov
outsb
ret
push
xchg
sub
std
shrl
dec
int
push
ja
jbe
cmpsb
mov
mov
dec
fidivs
mov
lahf
cs
stos
add
pop
fidivl
and
mov
push
nop
adc
daa
jle
sub
inc
test
cltd
lods
cmp
sub
movsb
pop
xchg
rdtsc
add
popf
cwtl
xlat
shrl
mov
pop
nop
xchg
dec
shll
add
dec
fcoml
add
mov
ret
clc
push
and
or
adc
inc
and
sarb
mov
ret
movsb
cmp
mov
js
rsqrtps
clc
jle
mov
push
pop
mov
ljmp
in
lods
cltd
hlt
add
hlt
pusha
or
frstor
les
jb
cmp
push
inc
mov
test
aad
pushf
add
rorl
ret
inc
jl
add
clc
aad
push
mov
or
fs
jle
ret
imul
movsb
fcmovnb
in
imul
mulb
and
sbb
inc
xorl
mov
push
cmp
test
xor
dec
xchg
sahf
dec
ficoms
mov
push
outsl
das
mov
add
push
push
sub
test
pop
mov
imul
int
jns
sbb
imul
xlat
mov
lcall
iret
adc
add
inc
jecxz
inc
lret
js
mov
rolb
ljmp
mov
cs
dec
loope
and
pop
lea
xchg
lret
adc
xchg
mov
loopne
dec
scas
xchg
lahf
jne
movsl
and
lds
inc
out
movsb
or
sub
adc
in
add
sub
push
fmul
loopne
scas
lcall
mov
dec
ds
in
add
inc
mov
popf
push
dec
inc
jnp
shll
pop
push
data16
mov
mov
orl
lds
xorl
pusha
and
mov
mov
stos
or
es
lea
jbe
shrl
inc
das
nop
js
daa
pop
pop
je
scas
push
ret
jg
mov
mov
out
mov
hlt
movsb
adc
inc
or
loop
repnz
popa
sub
jae
cltd
lock
dec
fsts
test
dec
mov
mov
mov
ja
xchg
or
ds
imul
bound
sahf
dec
dec
sbb
xlat
mov
adc
inc
xchg
scas
xor
dec
mov
roll
test
jnp
cs
xor
in
lcall
xor
loope
test
repz
dec
loopne
add
xchg
lcall
adc
xor
jmp
rolb
arpl
ret
pusha
incl
xor
mov
fcmovnb
outsl
fsubrl
cli
sub
ljmp
add
push
inc
push
push
fisttpll
cld
fnstsw
arpl
clc
mov
xor
dec
inc
mov
in
cmp
mov
sbb
int
divl
negb
dec
repnz
hlt
pop
mov
stc
sub
iret
mov
mov
xor
fcoml
jnp
fsubp
fisubrl
sbb
add
mov
dec
mov
xchg
daa
insb
aam
or
dec
adc
inc
dec
loop
sub
pop
cltd
fdivs
std
sbb
popa
push
mov
xchg
cmpsl
lock
mov
lret
inc
or
cs
mov
movsb
mov
sub
xchg
jnp
inc
lret
adc
xchg
pop
cmp
jecxz
sbb
xor
jne
into
inc
xor
movsl
sub
ss
and
call
imul
mov
lcall
clc
lods
dec
adc
push
ficompl
xor
xorl
jb
dec
mov
mov
jmp
mov
test
and
out
adc
call
dec
pushf
test
ret
sbbl
out
cmp
mov
mov
cwtl
dec
push
add
std
sub
sub
rol
mov
rcrl
movsb
in
or
cmp
pop
dec
pushf
adc
ss
xor
lds
cmp
sti
hlt
jge
mov
push
xchg
push
mov
pop
or
scas
les
jmp
hlt
add
popf
mov
sub
imul
loope
imul
imul
sub
mov
pusha
mov
and
mov
mov
in
xor
insb
mov
clc
aad
aam
and
sti
in
divl
sti
loop
movl
pop
adc
mov
fcomip
inc
filds
in
jge
mov
dec
mov
push
imul
lret
popf
outsl
inc
bound
xchg
ror
xor
mov
mov
adc
push
xor
fildll
cmpb
out
pop
push
js
mov
dec
inc
adc
sub
pop
sbb
xor
movsb
sbb
sbb
xor
push
xchg
push
mov
jecxz
push
cmp
xor
lret
pop
jg
out
clc
inc
negb
out
psadbw
inc
pop
sbb
divl
sub
pop
adc
push
fbld
out
or
js
push
mov
cwtl
outsl
mov
psubsb
fsubrs
enter
sub
sbb
or
js
push
mov
cwtl
outsl
mov
psubsb
fsubrs
enter
sub
sbb
or
js
imul
cwtl
outsl
mov
push
call
aas
cmp
sub
sbb
or
js
push
inc
inc
mov
cmc
xor
or
shlb
shrb
or
pop
sub
dec
and
pop
jg
ljmp
stos
stos
fstpt
jmp
sbb
dec
cmp
sub
dec
or
imul
cli
jmp
mov
mov
jmp
sbb
dec
cmp
sub
dec
or
imul
cli
mov
sahf
fldenv
sbb
cmp
push
cmp
sub
mov
and
inc
pop
repz
loope
mov
fdivrs
sub
aam
inc
mov
scas
daa
mov
icebp
sbb
sub
ljmp
push
or
xor
out
add
bound
push
jnp
cmp
fldt
sub
dec
hlt
hlt
jb
ljmp
sti
push
mov
xor
add
xchg
sti
push
hlt
and
xor
outsb
sbb
cli
addr16
inc
push
imul
mov
xchg
lea
or
cs
cmc
push
xchg
mov
stos
lahf
stos
xchg
into
mov
ljmp
pop
sub
pop
cmp
jnp
imul
cli
mov
mov
mov
subb
or
push
aas
inc
inc
aaa
jae
outsl
xor
ljmp
mov
into
stos
imul
aas
pop
insb
adc
or
imul
lahf
iret
mov
lcall
push
pop
dec
sub
dec
or
imul
cli
mov
mov
mov
jmp
sbb
dec
cmp
sub
dec
or
imul
cli
mov
mov
mov
jmp
sbb
inc
icebp
mov
lock
xchg
divl
jns
aad
and
into
dec
lea
pop
jmp
out
cmp
mov
enter
push
es
ss
movsl
mov
cli
mov
xchg
fisttpll
jb
xchg
cmp
ss
sub
out
mov
push
push
xchg
cmp
orl
dec
jp
cmp
xor
jmp
in
loop
pop
or
stos
lahf
jge
push
jns
ret
xlat
sub
bound
inc
cwtl
out
lods
scas
push
lods
outsl
in
add
add
add
and
add
rolb
jnp
jne
sbb
nop
imul
and
add
xchg
mov
stos
aas
int3
lea
and
pop
sbb
inc
adc
mov
cmp
js
shrl
lea
inc
int3
icebp
xor
sbb
xchg
jbe
push
stc
pop
inc
jecxz
xchg
scas
ljmp
cld
sbb
aaa
outsb
and
and
dec
scas
dec
mov
repnz
push
sub
ret
cmpb
je
pop
insb
pop
pusha
imul
outsl
xlat
mov
jl
insl
dec
jp
push
adc
lods
stos
cwtl
roll
dec
sbb
sahf
or
mov
pop
pop
movsl
sub
int3
icebp
scas
xlat
idivl
mov
sub
cmp
dec
fsubrs
inc
loope
dec
lcall
lock
cmpsb
lahf
and
push
repz
lret
inc
loope
mov
cmp
inc
loopne
popf
rol
sbb
or
fs
jbe
mov
loope
das
shll
out
mov
repnz
je
icebp
inc
mov
lods
das
and
sbb
inc
pop
lahf
cli
push
mov
or
and
jae
mov
imul
sbb
inc
jge
shlb
sbb
leave
push
jecxz
dec
lret
data16
rorb
xor
imul
pop
ds
lcall
into
lods
push
les
es
cld
stos
add
lods
pop
vphadduwq
xor
dec
add
xor
flds
xchg
jge
xchg
xchg
xor
daa
ret
fwait
sbb
pop
adcb
std
xchg
cwtl
das
repz
mov
hlt
push
test
lods
adc
cmp
add
fstps
cmp
or
mov
test
ljmp
enter
xor
dec
insb
cmpsb
addr16
dec
mov
push
jmp
or
sbb
add
rorl
outsb
sub
xor
adc
inc
or
arpl
ja
popa
adc
outsl
pop
push
mov
test
sar
push
fwait
insl
sub
mov
sahf
in
fisubl
push
jns
popf
dec
popf
cmp
sbb
clc
in
mov
or
mov
push
adc
add
inc
adc
mov
xchg
xchg
shrb
loopne
test
or
mov
push
bound
xor
int
int
sub
or
mov
lock
push
outsl
out
cltd
add
pop
test
jo
stos
jno
pop
pop
leave
stos
in
rorb
sahf
xchg
outsl
in
mov
mov
or
das
repnz
data16
and
sbb
dec
addr16
jbe
ret
mov
and
call
fbstp
sbb
mov
push
sbbl
inc
into
pusha
mov
in
stos
imulb
sbb
jo
push
call
pop
adc
ds
xor
sti
push
sub
adc
cmp
ljmp
jge
push
mov
insl
sub
cmp
xor
mov
adc
xchg
in
pop
adc
push
pop
loopne
dec
pop
fiadds
insb
jecxz
stos
div
dec
sub
push
decl
std
or
test
shrl
jmp
ror
stos
outsb
xchg
mov
dec
sub
dec
adc
fidivs
mov
cmp
push
mov
pushf
mov
pop
mov
sub
adc
ds
loopne
ret
sub
movsb
pop
lret
mov
cltd
jmp
jo
sub
mov
mov
sbb
or
shrb
loopne
inc
dec
push
lods
inc
enter
add
test
push
rcrb
pop
lods
dec
adc
push
jbe
stos
ret
sbb
xchg
dec
sub
mov
fs
movb
aaa
shr
repnz
dec
dec
mov
aas
jmp
test
sbb
leave
lea
ds
add
lahf
pop
inc
add
cmpsl
lahf
rcr
cmp
cmpsb
dec
cs
xchg
mov
in
add
push
arpl
mov
aaa
loop
pop
pop
mov
cmp
aad
or
pushl
mov
cmp
xor
popa
std
sbb
popf
call
mov
out
cli
sbb
sbb
push
dec
gs
fbstp
xchg
fistps
xor
rep
divb
pop
pop
cmp
shrl
repz
xchg
pop
dec
xchg
lahf
inc
jae
daa
and
or
dec
aam
js
and
add
mov
sbb
jp
xchg
cwtl
push
inc
shlb
lods
pop
cmp
iret
sub
mov
daa
cmp
imul
je
and
in
push
push
ret
inc
and
and
loopne
ljmp
xor
mov
scas
push
pusha
into
lret
mov
mov
mov
fiadds
outsl
out
dec
jle
xor
or
inc
popf
pop
mov
cmc
dec
mov
jge
mov
sub
mov
repz
in
maxps
add
add
fs
fcomip
adc
nop
les
dec
imul
shll
dec
jmp
dec
pushf
adc
mov
sbb
enter
sahf
xor
push
sbb
cmp
repnz
lods
into
mov
outsl
add
into
movsb
and
and
push
imul
lcall
scas
sbb
xchg
and
jb
push
xor
je
push
repnz
ja
rcll
pusha
xchg
lcall
mov
xor
in
in
jbe
mov
add
cmp
pop
dec
subl
push
push
push
inc
out
push
or
inc
or
xor
pusha
fwait
clc
aam
aas
xor
sub
stc
sbb
call
test
inc
int
mov
add
lds
xchg
push
adc
bound
fs
sbb
sti
js
push
or
aam
outsb
jp
imul
shrb
ret
mov
push
xchg
cmp
or
aad
decb
rcrl
loop
mov
push
cmp
into
lock
testl
lret
dec
mov
push
mov
lret
pop
psraw
dec
cmc
out
and
lock
test
xchg
or
mov
std
std
mov
loopne
fstl
push
xchg
js
or
lcall
rcrb
mov
leave
sub
mov
jo
jo
pop
js
std
jno
out
pop
pop
ret
mov
push
fcomps
lds
cwtl
or
adc
out
xor
imul
jae
jb
fildll
psubusw
xor
int3
cwtl
js
mov
test
sahf
out
pushf
mov
sbb
loopne
xchg
icebp
in
push
mov
pushf
notl
int3
hlt
je
adc
jmp
dec
out
push
andl
mov
das
shll
fadds
hlt
mov
mov
popf
stos
lods
jo
negl
pop
rolb
push
cs
mov
into
push
and
sub
inc
cmpl
mov
push
jnp
cmp
jecxz
add
adc
push
stc
mov
xor
sti
sbb
mov
mov
in
xor
stos
jmp
add
cmpsl
jne
fsub
cmp
push
xchg
fs
movsb
pop
dec
hlt
dec
addr16
inc
imul
push
mov
loopne
jg
push
inc
push
add
adc
add
fwait
add
and
icebp
xchg
xor
js
xor
ss
add
push
pop
cmp
in
and
xor
jnp
out
add
jp
call
push
adc
sub
sub
in
loop
push
test
pop
test
inc
jo
or
push
cmp
stos
xchg
ret
mov
popf
add
lods
dec
aas
sbb
lods
ja
mov
fwait
adc
push
test
xlat
xor
inc
popl
mov
mov
mov
nop
aad
sub
repz
out
into
ds
pop
and
mov
add
bound
dec
fnsave
lock
lret
dec
mov
daa
sahf
lock
sbb
cmp
pop
in
in
into
stos
cmpb
outsb
jp
leave
adc
mov
push
adc
mov
mov
or
and
faddp
pop
scas
xchg
imul
mov
add
rorb
fstl
jle
mov
mov
lock
mov
mov
movsl
and
xor
push
lods
push
nop
jnp
iret
je
mov
pop
mov
add
push
adc
pushf
dec
xchg
mov
ss
out
fcmovnbe
addr16
repnz
dec
stos
aad
fwait
inc
cmp
leave
inc
lea
adcl
and
xor
test
add
pop
test
sub
in
rcrb
insb
xchg
pop
sbb
repz
loop
pop
mov
add
adc
and
inc
sbb
in
sbb
popa
xchg
push
pop
int3
pop
mov
je
into
dec
out
sub
cmp
ja
std
or
sarb
jge
lcall
ds
test
negl
cmp
sbb
add
movsl
sub
jo
ds
inc
xchg
sar
mov
dec
and
add
adc
lods
fwait
and
xchg
sub
enter
xchg
and
mov
pop
inc
lret
pop
sbb
mov
cmp
shr
daa
xchg
sub
jbe
jb
pop
sbb
fists
dec
jecxz
rcll
pop
addr16
sbb
mov
fdivrs
and
lahf
test
nop
rorl
jge
pop
mov
mov
daa
mov
dec
cmp
insl
into
pop
std
repz
insl
sbb
jle
out
lock
or
neg
test
mov
ja
pop
bound
sahf
mov
add
jg
xor
jge
ds
cmp
and
popa
ror
xlat
pop
fidivl
mov
pop
repnz
push
xchg
movsl
std
icebp
into
rorb
xor
inc
mov
xchg
in
mov
or
xchg
xor
into
sbb
lahf
mov
mov
mov
push
xchg
xor
cmovle
pop
sbb
pop
andb
xchg
push
test
mov
shlb
pop
dec
xorb
nop
repz
jg
fidivl
outsl
sti
fidivrl
inc
push
cli
insb
jo
push
in
sub
mov
sbb
add
mov
and
stos
enter
popf
mov
insb
ljmp
ss
stos
mov
fs
cmc
pop
sbbb
iret
data16
mov
ss
lods
movsl
addr16
push
pop
movsb
push
pushf
test
or
push
sbb
popf
fwait
mov
jg
lea
stos
orb
mov
out
sub
xchg
and
aas
imul
stc
stos
repz
les
push
adc
mov
inc
pop
shll
dec
push
mov
mov
loop
enter
xor
push
test
ret
je
in
push
in
push
lahf
push
cmc
pop
popf
sbbb
adc
adc
je
lahf
setns
mov
stos
cmpb
daa
fadd
pause
inc
push
cs
xchg
test
push
js
xor
jmp
cs
test
aad
negb
push
mov
dec
cs
xor
adc
dec
repnz
sub
sarb
sbb
sub
dec
negb
mov
mov
repnz
mov
mov
int
out
sahf
inc
lock
inc
insl
add
mov
xchg
movsl
aas
cli
dec
mov
or
push
nop
lahf
cmp
lret
loop
jo
pop
stos
shlb
push
movsl
in
dec
stos
inc
mov
aam
and
shlb
rcr
int3
lret
daa
xor
and
sub
mov
xor
cmp
out
adc
aaa
sub
fstps
nop
pop
add
addb
mov
popf
sub
mov
into
enter
lods
mov
xchg
in
lea
mov
xchg
pusha
xchg
popf
sub
out
les
in
sbb
push
enter
sub
imul
inc
fwait
sub
and
fldenv
in
xchg
jno
xchg
adcl
hlt
js
push
mov
inc
ds
daa
add
test
lea
mov
ljmp
xchg
cld
mov
xchg
lahf
aas
shll
hlt
jp
jl
sub
adc
stos
ja
rclb
jnp
mov
add
data16
push
cmpsl
shrb
and
loope
or
faddl
xor
xor
inc
xchg
sbb
mov
cmp
mov
xchg
stos
int3
xchg
hlt
jno
stos
movsl
bound
jp
mov
mov
in
cmp
jno
pop
push
mov
mov
fs
cmp
rcll
fwait
cmpsb
shlb
add
mov
in
or
aam
push
lock
mov
repz
enter
inc
stos
adc
push
pop
nop
jno
mov
imulb
loop
aad
jo
ljmp
outsl
imul
sbb
mov
outsb
cmp
out
dec
push
dec
fucom
popa
pop
je
lret
es
int3
mov
push
adc
popf
gs
sub
std
daa
push
cmp
hlt
jge
mov
adc
iret
insl
add
cwtl
cltd
jcxz
pop
xchg
inc
or
pop
sahf
sqrtps
test
and
xchg
icebp
dec
mov
mov
hlt
inc
lahf
mov
mov
popa
pop
jp
repnz
jge
sarl
xchg
adc
test
sub
pop
loop
shlb
bound
inc
mov
mov
out
inc
jl
out
pop
xorb
addr16
out
out
pop
dec
xor
mov
orl
mov
out
ss
xchg
dec
xchg
inc
cmp
mov
lcall
or
cmp
mov
fisttpll
push
push
jge
mov
movsl
inc
rcrb
repz
jae
sub
movsl
inc
ret
push
xchg
or
xor
call
xchg
std
out
bound
mov
push
jno
fs
orl
dec
repz
lods
adc
jge
int3
lcall
xchg
push
and
shlb
mov
cmp
xlat
dec
mov
cmp
mov
imul
sub
leave
mov
xchg
mov
push
dec
mov
mov
lock
cld
lock
je
push
cld
xchg
dec
mov
pop
add
mov
pushf
sbb
dec
sub
adc
inc
ja
cld
sbb
andb
cs
jl
stc
cmp
pop
and
and
xchg
sbb
push
jmp
adc
jmp
sub
inc
arpl
mov
inc
or
loope
mov
jle
out
dec
pusha
test
aas
hlt
and
inc
sbb
in
call
jbe
gs
clc
inc
gs
loopne
pop
xlat
cmpl
or
push
scas
addr16
setg
out
push
test
mov
stos
sbb
push
xchg
mov
stc
and
cmpsl
jb
test
lea
fsubl
ljmp
pop
push
adc
arpl
rep
dec
fsub
inc
lret
jns
push
stos
jne
lods
daa
or
xchg
push
dec
push
std
stos
mov
mov
push
insb
push
sarl
mov
mov
mov
jmp
mov
sbb
pop
sbb
gs
pop
rorl
adc
ret
sbb
ss
pop
popf
jns
sti
pop
sbb
adc
push
sub
es
mov
mov
jb
ds
lea
lods
pmuludq
lods
mov
fdivr
or
and
cmp
jnp
cmp
addr16
mov
clc
in
es
jle
insl
jbe
push
sub
mov
mov
test
aaa
mov
test
int
dec
cli
push
jae
repnz
cli
in
or
xchg
adc
dec
sbb
mov
test
sti
or
jg
mov
dec
lock
bound
pop
mov
and
lds
pop
pop
mov
ss
aad
aad
jmp
out
mov
xchg
lret
sbb
nop
mov
and
incl
and
pop
and
add
inc
mov
fidivl
int3
push
push
xchg
mov
jo
pop
cmp
sahf
ret
subl
lock
mov
mov
aas
mov
movsl
or
nop
stos
in
or
mov
in
ds
lcall
inc
jo
push
js
push
out
ret
aad
add
mov
repz
cmp
adc
xchg
sbb
mov
jp
jnp
xchg
mov
jns
loopne
dec
jno
in
mov
add
stos
mov
fisttpll
fwait
inc
movsb
popf
test
mov
jne
mov
enter
jg
movsl
call
jns
cmp
push
cwtl
gs
in
loopne
adc
pop
lods
sbb
outsl
add
xor
int3
rorl
in
adc
movsl
pop
ror
enter
mov
pop
daa
fsubp
out
jle
mov
xchg
aam
xor
shlb
add
sahf
inc
mov
jge
add
out
aaa
incb
jno
arpl
faddp
and
jns
inc
cs
mov
sar
and
jmp
jns
repz
ret
adc
fisttpl
adc
xchg
add
shll
ffree
shlb
roll
das
push
insl
fsubrl
ss
mov
push
test
insl
cmp
fildll
xchg
cmp
mov
jnp
mov
lea
add
fistpl
push
movsl
icebp
adcl
xchg
test
jne
mov
pop
std
test
cmp
and
mov
cmpsl
and
xor
shrl
sbb
test
pop
add
sub
or
or
leave
inc
je
test
lods
dec
ficoml
cmp
xor
test
lret
inc
stc
into
xchg
sti
xor
mov
jle
test
inc
pop
icebp
call
scas
jnp
sbb
ds
cli
sti
cli
jae
push
push
dec
push
adc
mov
sbb
sub
out
insl
add
sub
lahf
ljmp
into
test
repnz
ret
mov
lds
pop
xchg
shrb
arpl
iret
sub
adc
pop
out
aad
fiaddl
mov
addr16
mov
add
jns
stos
outsl
mov
inc
dec
clc
loop
jmp
jno
and
cld
or
xorb
into
push
dec
mov
mov
fldcw
ds
jae
jo
mov
adc
jns
lods
lret
std
jl
and
outsb
outsb
lret
xor
test
dec
mov
mov
movsl
inc
add
jnp
lcall
cmc
loopne
dec
jno
cmp
jne
jo
js
mov
lret
stc
repnz
outsl
stc
xor
xchg
bound
aas
sti
or
cmp
push
call
pop
jg
vandps
sbb
ret
mov
xchg
shll
mov
xchg
mov
aad
mov
inc
adc
pusha
cmc
add
sbb
xchg
hlt
out
mov
aaa
loope
mov
dec
cmp
sarb
sbb
movsb
movsl
leave
das
jle
adc
mov
jo
inc
imul
pushf
inc
bound
dec
lret
stc
repnz
sub
xchg
mov
mov
arpl
fs
andb
push
xchg
adc
add
cmp
popa
inc
lret
add
shll
push
sub
iret
adc
les
sbb
add
add
imul
fnstenv
fimull
jl
sbbb
xor
pop
push
sub
aaa
std
sti
xor
aam
es
fwait
ss
jnp
arpl
and
and
xchg
jl
adc
inc
pop
mov
add
pop
movb
mov
inc
outsl
lcall
inc
add
jae
in
out
sub
ja
ret
mov
movsl
pop
add
lahf
cltd
add
fs
sbb
xchg
subl
test
mov
lahf
lcall
mov
mov
pop
jl
loope
xchg
mov
ss
add
add
arpl
cld
testl
adc
mov
nop
or
out
add
jg
mov
dec
lods
dec
fisubs
mov
sbb
out
dec
mov
repnz
aaa
ret
or
dec
jb
mov
dec
aaa
sarl
jo
pop
sub
pop
cmp
jnp
imul
cli
mov
mov
mov
jmp
sbb
dec
cmp
sub
dec
or
imul
cli
mov
mov
mov
jmp
sbb
dec
mov
cmp
or
imul
cli
mov
mov
mov
jmp
sbb
dec
cmp
sub
dec
or
imul
cli
and
fcmovu
fstl
xor
add
adc
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
mov
and
mov
sbb
popa
xor
mov
shll
inc
icebp
inc
loope
adc
and
push
loope
shll
adc
adc
push
ret
push
icebp
inc
loope
or
cmp
dec
stc
pop
leave
imul
mov
jno
push
mov
adcl
fcomps
jno
push
testl
xchg
push
mov
mov
mov
mov
jo
xor
pop
mov
cmp
mov
mov
outsb
or
loope
pop
and
mov
push
add
jle
fisubl
pop
inc
add
xchg
fiadds
jno
popf
js
icebp
inc
movsb
mov
mov
pop
into
movsl
jb
push
loopne
cs
and
dec
sub
in
popa
inc
fimull
inc
icebp
loope
sub
sbb
popa
push
push
xchg
stc
xor
jns
or
insl
out
adc
sbb
mov
inc
jne
leave
jle
push
fninit
in
jo
xor
stc
lods
jmp
dec
push
pop
xor
xor
push
repz
out
push
mov
and
push
icebp
inc
shll
js
xchg
cmp
imul
inc
loopne
adc
jae
push
cmc
inc
adcb
pushf
sbb
dec
andl
add
and
shrb
icebp
dec
popf
push
loope
roll
inc
in
aam
mov
daa
xchg
and
add
push
jmp
inc
shll
popa
xor
add
push
icebp
inc
loope
adc
and
push
loope
shll
popa
xor
add
push
icebp
inc
loope
adc
and
mov
popa
jge
test
xor
mov
jge
mov
add
inc
test
sub
xchg
scas
inc
mov
or
pop
pusha
add
adc
mov
mov
sbb
push
adc
xchg
mov
jno
mov
push
xchg
incb
mov
inc
sahf
ret
not
divl
xchg
das
fwait
cmp
jno
dec
flds
aad
xchg
push
lock
inc
sahf
push
into
pop
mul
or
lock
inc
addl
loop
push
or
jne
call
sub
inc
negb
mov
popa
mov
xor
mov
inc
fwait
add
inc
mov
or
jle
and
out
fwait
mov
or
mov
xor
dec
sub
leave
sbb
ds
out
inc
pop
popf
mov
les
push
sub
push
std
andl
fcompl
inc
aam
adc
cmp
repz
sub
dec
and
divb
int
js
pop
mov
inc
inc
movsb
int3
sub
or
call
xor
mov
dec
in
pop
mov
push
add
cmp
inc
jge
lret
adc
push
ror
icebp
data16
daa
aaa
scas
add
jmp
rcrl
and
jl
sbb
xor
ret
dec
adc
xchg
pop
mov
adc
addr16
adc
pop
inc
shll
inc
cmpsl
xor
sbb
pop
jb
xchg
xor
sbb
add
mov
leave
adc
cmpsl
push
and
dec
cmpsb
mov
out
jmp
sub
in
test
jl
jne
xor
in
bound
pop
pusha
inc
mov
sbb
lret
stos
fildll
test
jg
dec
cmp
std
cmc
mov
rolb
jle
inc
movsl
sti
xchg
lret
in
mov
cmpsb
in
inc
int
jmp
lahf
in
test
insb
out
push
pop
stos
push
aam
add
lock
repz
and
or
das
das
sbb
pop
loope
les
stos
test
lcall
mov
xorl
out
test
dec
push
mov
gs
out
mov
aam
xor
jno
popf
push
fistl
jne
dec
xchg
mov
mov
test
neg
jno
xchg
sbb
iret
xor
mov
cmp
pop
jl
in
sub
mov
fsub
lea
xor
push
icebp
lods
mov
sub
or
dec
mov
cmpsl
fwait
cmpsl
jae
xchg
xlat
cli
leave
lock
xchg
in
dec
roll
in
or
inc
dec
ljmp
stos
pushf
xchg
rolb
aam
pop
push
mulb
cs
dec
mov
ret
xchg
xor
jle
push
stos
pop
js
scas
adc
out
mov
daa
pop
lock
mov
inc
ljmp
sub
gs
pop
jmp
andb
lret
insl
aaa
dec
std
push
fisubl
adc
das
jae
mov
mov
xchg
mov
clc
roll
andb
dec
aad
jno
into
fstps
jp
mov
jae
jne
int3
fidivl
mov
mov
dec
inc
out
add
call
push
mov
cmc
adcb
call
iret
sub
mov
popf
inc
inc
dec
jns
pop
sbb
inc
test
mov
sahf
lahf
sub
mov
mov
fmull
cmpsb
or
mov
adc
shlb
sub
mov
rclb
adcl
mov
notl
pop
nop
in
mov
pop
or
mov
sbb
jp
push
cmpsl
cmpsl
pop
dec
inc
rcl
aam
loop
test
mov
mov
mov
cli
lods
jp
mov
loope
mov
fstpl
sbb
push
jno
mov
xchg
add
bound
cmpsl
loopne
mov
cmpsl
cmp
jmp
inc
int
fcmove
leave
std
insl
inc
lcall
sbb
mov
fisubrs
out
jecxz
or
push
cmp
insl
xchg
jg
loop
pusha
mov
data16
bound
dec
mov
in
outsl
lcall
test
test
mov
ds
add
inc
rcrl
cmpb
dec
add
les
mov
pop
mov
sbb
jae
mov
fisttpll
into
mov
ficomps
pop
imul
fmuls
scas
rclb
test
xor
and
notl
pop
fimull
in
aam
xorl
cld
jle
rcrb
movsl
or
xor
loopne
sbb
mov
lea
push
mov
pushl
aam
lea
sub
xchg
sahf
mov
pop
cmp
icebp
jmp
insb
pop
out
mov
push
sub
movsb
xor
xchg
sub
std
lret
insl
add
bound
gs
add
mov
jne
pusha
xchg
jnp
mov
sbb
push
jle
mov
inc
push
add
lahf
int3
jecxz
rcrb
imul
dec
lods
cmpsl
sub
jns
xor
lea
xor
push
adc
cmp
inc
mov
push
nop
jecxz
dec
push
or
mov
stos
jbe
insl
pop
sub
mov
mov
and
cmpsb
mov
add
sub
mov
pop
ret
or
mov
adc
sbb
sub
cmp
mov
sbb
andl
hlt
sub
mov
mov
inc
out
dec
shr
or
jle
add
jns
cs
js
sub
jle
pop
leavew
in
sbb
out
jg
aad
cli
or
aad
xchg
mov
inc
xor
cmp
js
adc
jo
pop
std
iret
jne
mov
push
les
sahf
add
movsb
mov
pushf
xchg
fidivs
adcl
push
inc
xchg
or
pop
test
ja
mov
fdivrl
cmc
popf
mov
sahf
insl
popa
inc
sbb
scas
mov
testl
cs
dec
fadd
pop
movsl
xlat
je
jg
cwtl
andps
push
mov
cmp
fucomip
inc
std
popf
push
lahf
push
xor
fbstp
lods
scas
jae
add
push
outsb
leave
mov
rolb
sub
out
inc
and
add
mov
jmp
jno
std
mov
dec
or
and
sbb
stos
ret
int3
and
mov
push
xor
in
push
pop
or
stc
jnp
outsl
dec
std
inc
sub
mov
xor
push
lods
ds
inc
leave
gs
clc
xchg
pop
ljmp
testb
arpl
mov
xor
jne
push
int3
dec
fidivs
and
adc
data16
sbb
cmp
mov
pop
outsl
icebp
sbb
es
jle
jns
mov
dec
xor
jno
fadds
dec
mov
in
pushf
xor
lock
jae
imul
cmp
insl
xor
addb
lods
xlat
push
orb
jp
pop
mov
fildl
mov
fdivrs
or
movsb
ds
mov
aad
ret
mov
mov
push
dec
adc
pusha
and
lret
ss
data16
enter
push
adc
jle
add
fidivl
adc
xchg
pop
pusha
or
or
jg
mov
mov
push
mov
inc
xchg
mov
and
test
dec
push
push
mov
test
push
lret
fldt
lret
insl
xchg
fadds
push
jbe
fwait
dec
ja
jle
nop
lret
jns
add
jae
pop
mov
ficomps
adc
xchg
dec
imul
aas
dec
adc
cmpsl
leave
xor
mov
inc
popf
sub
sub
into
jmp
je
std
xchg
rorl
nop
xor
add
stc
xor
push
jmp
out
pop
popf
mov
sub
sbb
xlat
jo
js
ljmp
add
jbe
shrl
out
jmp
arpl
aas
dec
sbb
push
sbb
sub
and
push
lahf
push
adc
xlat
roll
adc
mov
jp
jb
aam
mov
inc
nop
push
jge
dec
pop
ljmp
arpl
mov
fistl
xchg
int3
sarb
sub
lock
aam
cltd
jb
lahf
mov
sbb
push
mov
dec
in
sbb
sbb
mov
push
add
jg
add
iret
pop
jb
rclb
out
fbstp
add
int3
fistps
or
popf
jle
int
insl
add
in
repz
stos
adc
in
pop
cmp
dec
pop
jo
nop
sahf
gs
out
out
je
xchg
int
fwait
cmp
mov
repz
test
std
lcall
icebp
arpl
testl
mov
addr16
jno
out
bound
xchg
jg
lds
ljmp
leave
and
inc
popf
add
test
xchg
in
scas
fsubrp
cli
push
fadds
cltd
pop
rcll
push
mov
cwtl
lea
stc
sub
arpl
lods
mov
test
cltd
mov
xor
je
icebp
divl
scas
js
out
fs
jbe
sub
or
ret
popa
fcom
jbe
repnz
mov
push
lcall
add
xor
mov
jmp
movsb
in
jp
int
pop
sbb
sub
and
cmp
or
in
int3
stos
dec
movsb
or
and
mov
into
imul
mov
push
test
lods
popa
push
int
jbe
out
mov
xchg
lret
inc
aas
jno
mov
or
out
mov
adc
add
inc
mov
pop
mov
jge
loope
add
pop
roll
test
cli
xchg
mov
jecxz
mov
movsb
mov
lret
fwait
mov
into
mov
mov
xor
push
pop
dec
push
push
clc
or
mov
dec
mov
dec
pop
les
cmpsb
cmpsb
and
test
mov
sahf
aaa
jb
push
xchg
jge
push
sbb
aam
in
mov
ret
ret
fnstcw
xchg
insb
jmp
div
pop
jo
add
cmc
push
mov
inc
add
mov
scas
sub
stc
push
jecxz
imul
imul
mov
pop
xchg
sub
push
inc
test
inc
jno
mov
es
xor
jecxz
outsl
lahf
or
sahf
pop
add
notl
lods
insb
loopne
fcmovu
lcall
xchg
test
xchg
cli
gs
stc
iret
faddl
aaa
aas
addl
xor
lahf
ds
push
xchg
push
pop
js
inc
out
leave
or
xchg
std
imul
mov
sbb
rcrl
adc
jle
and
push
push
cltd
inc
setge
xor
lahf
insl
push
jae
iret
jl
push
xor
mov
stos
dec
ret
bound
rcrl
mov
cli
xlat
ret
gs
shlb
jo
mov
mov
push
mov
mov
shl
or
add
sub
sti
inc
leave
mov
ud2
jmp
mov
mov
push
dec
lret
shl
sbb
mov
sub
sbb
mov
jae
addr16
out
xchg
aaa
mov
and
ss
add
out
shlb
push
mov
lds
mov
lds
sub
cld
daa
mov
jecxz
frstor
sti
mov
aaa
push
aad
cmpsb
cs
rclb
xlat
lcall
jl
jo
loopne
mov
mov
aad
je
shlb
sbb
popa
and
pop
enter
pop
jmp
popa
imulb
lret
rcrl
push
cld
in
dec
cwtl
test
jmp
repz
pop
mov
dec
dec
aad
mov
leave
xlat
adc
imul
add
mov
fs
in
jb
cmp
cmp
loop
or
push
push
adc
es
or
sbb
hlt
int
aaa
mov
loop
addr16
lock
int3
ljmp
out
rclb
js
pop
inc
pop
repnz
and
adc
lods
adc
cmp
xor
add
adc
into
mov
in
xchg
sub
cmp
sbb
adcl
cmp
and
addr16
test
and
imul
iret
je
cmp
repnz
sub
push
push
and
in
push
dec
and
inc
arpl
testl
dec
insl
test
pushf
fidivrl
std
into
iret
add
das
cmp
xchg
outsb
sbb
loop
push
lret
outsb
popf
xor
insb
or
xor
sti
rol
and
or
add
pushf
pop
xchg
ja
lods
sbb
jge
pop
loop
mov
fidivs
or
aaa
jge
inc
cmp
xor
and
int
aam
add
into
arpl
or
adc
lea
adc
push
aad
push
cmp
lods
pop
test
mov
xchg
lcall
aad
ret
popa
fistpl
lock
int
sbb
ds
pusha
in
jecxz
xchg
adc
imul
popf
test
mov
iret
xchg
mov
sub
add
xor
mov
inc
ret
in
add
cmpsb
test
xchg
adc
push
xchg
js
pop
sbb
cltd
in
test
out
mov
call
test
push
pop
iret
cwtl
lret
xor
mov
adc
gs
lea
pop
cmpsb
xor
jbe
sub
jns
stos
outsb
sub
push
mov
clc
cmp
mov
jae
scas
test
sbb
fstpt
ss
add
lret
mov
insb
js
jg
cwtl
cmpsb
sbb
push
ret
xchg
jg
js
sbb
inc
testb
sahf
xor
mov
js
cs
xchg
push
shlb
inc
mov
push
or
xchg
popf
movsb
jne
cs
sub
pop
rcrl
sub
mov
jae
push
aaa
je
test
push
fs
in
fstp
in
add
dec
fdivrl
jae
fdivrs
dec
adcb
xchg
lret
or
or
out
mov
gs
pop
js
movsl
test
orl
insb
loop
cltd
xchg
mov
sub
or
fisubs
xchg
adc
cli
inc
sbb
mov
jb
js
mov
sbb
sub
xor
rcll
sbb
and
adc
adc
cmpsl
sbb
mov
outsl
aaa
inc
and
inc
mov
push
and
mov
insl
or
mov
xchg
das
xchg
mov
add
ret
adc
incl
jg
in
push
into
push
int
outsl
jg
stos
push
cmp
das
pop
pop
jbe
fcoms
arpl
or
out
sbb
jge
mov
pop
lock
sar
cmp
jns
fsubl
ss
stc
cmc
loope
fstpl
push
lret
mov
cmp
test
push
xor
and
add
pop
out
dec
pop
xlat
repz
xchg
xor
cmp
cmp
mov
flds
pop
sub
mov
test
aam
adc
mov
adc
loop
cmc
test
jp
sub
shl
adc
stos
jg
mov
repz
adc
mov
aas
add
lods
ja
mov
in
jg
mov
cmp
imul
ja
mov
xor
pop
std
out
sti
sbb
inc
xchg
push
sbb
in
jp
sahf
int
fisttps
pop
sub
jmp
sbb
fwait
push
test
dec
adc
or
sub
lods
jne
push
cs
imul
jae
cmp
pop
fwait
inc
popa
loop
imul
mov
jl
mov
loopne
ss
mov
pop
inc
shrl
int3
test
daa
sbb
mov
xor
aas
outsl
shl
adc
pop
jne
in
cmpsb
fisubrl
mov
loop
mov
jl
stos
jl
ret
std
add
inc
sbb
data16
gs
call
hlt
insl
imull
pusha
jl
fcomp
and
divb
pop
mov
shlb
mov
mov
inc
adcb
sbb
ret
mov
pop
push
cmp
sub
rep
dec
jp
xchg
imul
or
inc
cmp
push
xchg
es
xorb
loopne
lret
sub
imul
icebp
pop
dec
xor
add
cmc
fpatan
ret
movsl
mov
mov
add
xor
mov
cmp
dec
and
inc
pop
movsb
daa
out
mov
icebp
shlb
jnp
xor
mov
ja
jnp
cs
pop
hlt
add
dec
jae
dec
cmp
gs
pop
adc
mov
enter
cmc
or
sub
jle
fldl
xor
jecxz
jmp
mov
ss
xor
xchg
aad
or
ret
lret
xor
decb
lds
jl
addr16
inc
ja
test
loope
jmp
lods
flds
hlt
pop
dec
jae
ds
movsb
fs
inc
add
jbe
inc
pop
mov
push
dec
sbb
stos
lret
dec
fcomps
push
cmovo
in
mov
inc
and
push
lret
mov
and
rcll
test
fcmovu
xchg
xchg
xor
stos
xchg
inc
repnz
dec
sbb
out
or
jns
hlt
jbe
out
jl
out
jge
leave
cli
pushf
and
sbb
xchg
sub
cwtl
test
ja
sahf
jo
mov
or
inc
aas
mov
mov
mov
das
sub
test
insl
ret
repnz
bound
rorl
dec
mov
dec
cmp
mov
in
mov
jae
imul
mov
inc
mov
jo
sbb
or
inc
adc
int3
mov
out
iret
stos
inc
movsb
xor
dec
cmp
std
addr16
jmp
mov
fisubrs
xor
and
rcl
push
mov
dec
xorl
mov
rclb
das
cltd
push
pop
movsb
inc
shll
push
push
enter
stos
testb
sbb
inc
cli
xchg
ja
pop
icebp
mov
inc
mov
cmp
jecxz
test
sub
cltd
mov
adc
inc
icebp
and
in
sbb
js
pop
add
out
adc
es
sub
inc
stc
mov
xor
outsb
lret
mov
inc
lea
jecxz
xor
leave
inc
lret
jge
xchg
sub
push
add
mov
subl
add
jno
push
inc
js
xchg
int
pop
adc
dec
leave
sub
fmull
es
divl
sbbb
in
pop
cmc
jp
jl
mov
dec
loopne
rclb
mov
sub
xlat
mov
pop
cmp
fildll
mov
in
rcrl
call
jne
mov
jns
mov
in
fiadds
pop
sub
push
lock
ret
out
mov
push
loop
and
dec
mov
jmp
imul
sbb
and
adc
pop
adc
inc
bound
or
push
dec
popf
jge
push
or
aam
aam
push
stc
cli
pushf
pop
pop
sarl
repz
push
imul
stc
cmpsl
ud2
inc
jl
cmp
mov
sub
call
das
aam
inc
cmpsb
or
ja
and
int
adc
test
mov
and
jne
ljmp
addb
clc
js
mov
test
ljmp
mov
imul
and
or
cmp
popf
fcomp
daa
dec
nop
mov
shlb
and
ljmp
cltd
inc
xor
mov
sub
rclb
outsl
ds
nop
mov
inc
cvttps2pi
and
scas
jb
frstpm(287
mov
out
es
inc
popf
sub
push
dec
fnsave
mov
test
add
lods
mov
iret
add
mov
aas
rcll
mov
mov
jp
mov
je
xor
mov
fwait
stc
data16
mov
mov
push
mov
es
repz
mov
xor
fstps
fs
xchg
fsubrp
cmpsb
mov
cmp
mov
fcoml
xor
cmpsb
repz
sub
stos
push
sbb
adcl
lock
cmp
insb
add
add
lret
mov
cmc
push
mov
inc
cltd
sbb
dec
inc
xlat
mov
ret
loope
bound
xchg
and
iret
aaa
pop
sti
cmp
shrb
adc
lods
imul
cmp
roll
jg
aas
negl
fimuls
xchg
mov
fdivl
repnz
cmc
xor
pop
fstpt
in
inc
data16
inc
in
xchg
inc
ljmp
mov
sahf
pop
ss
test
and
push
mov
adc
pop
aad
xchg
fsts
cld
pop
mov
fwait
xor
inc
shll
popa
xor
add
push
icebp
inc
loope
adc
and
push
loope
shll
popa
xor
add
push
icebp
inc
loope
adc
and
push
loope
shll
popa
xor
add
push
cmc
inc
in
adc
andl
push
jno
mov
mov
pop
jmp
sahf
or
mov
mov
add
cmp
dec
mov
rorl
cmp
dec
fildll
push
pop
mov
dec
enter
call
lahf
pop
scas
sub
js
push
pop
mov
dec
enter
call
mov
cmp
pop
mov
jl
push
hlt
inc
clc
aas
push
outsl
call
hlt
cltd
insb
or
aaa
data16
push
mov
iret
das
fs
int
add
mov
jb
popf
jne
sti
mull
mov
mov
jo
nop
scas
sbb
inc
leave
cmp
inc
inc
fbstp
popf
sub
fstps
outsb
not
out
out
mov
sti
push
inc
pop
dec
mov
cwtl
pop
inc
push
sbb
into
pusha
cmp
rcrb
sbb
push
jnp
dec
jmp
mov
clc
add
jge
push
pushf
and
std
out
xchg
add
mov
cmp
xchg
add
cmp
sahf
fmulp
dec
push
movsl
stos
sub
dec
mov
imul
mov
dec
enter
call
lahf
cmp
dec
fistpll
push
pop
aam
out
fwait
sub
sub
mov
lret
sub
add
adc
push
jp
dec
loopne
mov
push
nop
sbb
gs
cld
dec
ficoml
mov
ja
out
dec
cmpsb
push
fistpl
pop
cltd
popa
enter
call
lahf
cmp
dec
fistpll
push
pop
mov
dec
enter
call
lahf
cmp
dec
fistpll
push
ja
ret
stos
cmp
mov
loopne
cmp
mov
adc
pop
push
int3
cltd
inc
pop
int
adc
cld
jnp
loopne
out
pop
mov
icebp
jge
js
dec
inc
push
mov
dec
movsb
pop
pop
and
stc
or
xchg
mov
repnz
sub
mov
jp
pop
inc
arpl
and
mov
inc
cs
dec
mov
mov
lcall
mov
pop
add
xchg
mov
or
cmp
or
shrl
test
ret
cmp
arpl
dec
clc
aaa
loope
cs
lods
stos
xchg
int
iret
adc
xor
in
dec
testl
shrb
xchg
addb
mov
test
out
aas
movsl
sbb
jg
pop
sbb
in
rol
xchg
and
clc
push
jl
pop
xlat
jmp
push
out
into
or
push
cwtl
lods
jl
and
inc
mov
repz
fistl
adc
pusha
add
mov
test
jecxz
cltd
in
xor
or
or
cmp
jno
or
mov
push
xchg
pop
movl
out
aam
xchg
jge
ljmp
or
popa
xlat
dec
jae
jge
test
xor
add
hlt
stc
movsb
call
aaa
aas
fdivrs
inc
in
jno
and
stos
in
jns
popf
idiv
xorl
ret
mul
and
or
sbb
daa
addr16
adcl
adc
xchg
in
lcall
mov
mov
cmp
shl
jo
std
cmpsl
cmpl
xor
dec
bnd
fwait
sub
add
cmpsl
xchg
fidivs
out
lods
test
sub
fisubrl
cmp
inc
mov
pop
mov
loope
arpl
adc
sbb
idivb
or
and
scas
sbb
and
dec
insl
and
rcrb
pop
mov
sub
add
inc
sub
call
sbb
fnstcw
mov
repz
sahf
add
push
lahf
popf
sub
pop
leave
cs
imul
out
add
dec
lods
psadbw
test
sbb
lock
cli
jge
xor
outsb
out
std
push
mov
xlat
add
repnz
stc
in
sbb
hlt
sbb
outsl
and
push
insb
jb
mov
push
mov
in
sbb
mov
mov
xchg
call
add
mov
jp
cmpsb
mov
pop
or
mov
testl
xor
xchg
addr16
pop
insl
movb
mov
jo
mov
inc
sub
movsl
in
aad
ljmpw
mov
pop
into
insb
popl
adc
stos
and
clc
cltd
adc
and
and
nop
pushf
std
pop
rorb
jg
daa
lods
and
jge
scas
mov
ficoml
es
pop
shlb
inc
jge
leave
jne
cmp
test
adc
inc
popf
out
cld
lods
or
movb
hlt
ljmp
and
push
cli
push
dec
sbb
jb
inc
mov
sbb
cmp
shlb
icebp
mov
ficompl
in
xor
dec
or
dec
mov
nop
stc
adc
call
cli
mov
lds
push
inc
scas
dec
jle
dec
ja
arpl
fmul
sub
sti
pop
jae
add
nop
mov
out
cwtl
pop
in
pop
mov
arpl
xlat
and
pop
jb
push
test
dec
loop
jmp
pop
sub
mov
andl
pusha
fs
mov
inc
aad
pop
adc
xor
pop
jmp
mov
or
jmp
dec
scas
pop
mov
jne
sbb
cmp
fiaddl
jne
call
xchg
mov
lock
inc
test
ljmp
shll
cmp
aaa
jns
or
cld
test
fidivl
mov
add
aas
inc
dec
cwtl
sub
cmc
mov
xor
shl
add
mov
or
inc
push
push
cwtl
jmp
sti
js
imul
dec
or
sub
lcall
hlt
jge
add
stos
imul
xchg
rorl
sbb
sbb
xchg
inc
mov
sub
xchg
insb
loopne
pop
test
mov
adc
jnp
ret
dec
adcl
adc
add
xor
xchg
inc
mov
sub
pop
sub
mov
push
xchg
hlt
mov
ret
or
aas
mov
inc
inc
clc
lds
sti
inc
enter
fidivs
pop
pop
sbb
aam
pop
icebp
push
cs
dec
pop
mov
adc
pop
mov
inc
and
pop
xchg
aas
xchg
mov
xchg
sub
shl
add
xor
rclb
std
pop
add
repz
fbld
lods
jmp
or
pushf
pusha
mov
dec
movsl
ja
sbb
and
or
popf
and
xchg
pop
test
cld
pop
ds
fildl
imul
test
jnp
sub
mov
cmp
mov
add
adc
jae
pop
out
cli
shl
movsl
mov
mov
dec
sub
bound
mov
sub
lods
popa
lcall
popa
sub
inc
cs
loope
popa
popf
sbbl
and
xchg
cmp
dec
sub
inc
vmovdqa
cld
xchg
inc
mov
test
sahf
push
repnz
xchg
dec
sub
sub
sub
mulb
aas
inc
sub
in
jecxz
add
in
mov
pop
and
inc
out
cld
mov
icebp
inc
int
jo
test
dec
cli
into
pusha
pop
push
jp
adc
into
repnz
add
insb
adc
arpl
mov
mov
stos
call
sub
inc
mov
sarl
adc
mov
imul
cmp
jne
into
inc
pop
lds
daa
shll
add
scas
jnp
data16
add
rcll
fs
inc
or
mov
adc
fistps
cmova
mov
mov
and
ret
lea
fadds
pop
mov
sarb
adc
lods
xorl
mul
mov
popf
lret
lods
cli
pop
es
rolb
add
mov
xorb
enter
scas
add
xor
mov
jl
decb
pop
mov
xlat
int
xchg
cmp
sbb
out
sbb
je
insb
mov
cmp
jo
xor
pop
jno
mov
pop
xlat
mov
lret
pop
int3
popf
test
pop
or
mov
push
insb
repz
sbb
in
add
add
adc
add
lret
pushf
pusha
scas
sub
xorl
lods
xchg
hlt
adc
cmp
outsb
push
cmc
mov
mov
inc
pop
stos
dec
jle
pmullw
aas
iret
add
pushf
adc
pop
and
mov
cmpsl
fstpt
test
add
jmp
mov
inc
inc
dec
mov
mov
gs
arpl
in
stos
aad
jae
out
or
div
push
repnz
mov
xchg
rorl
add
adcb
xor
mov
ret
xchg
mov
or
jne
je
adc
push
inc
scas
das
sbb
aaa
sub
movl
xchg
push
test
or
dec
add
mov
pusha
aam
into
cs
imul
jg
ljmp
cltd
sub
cmp
sti
sub
pop
xchg
mov
test
test
fwait
add
lods
xchg
mov
add
mov
jg
xchg
cli
dec
mov
pop
leave
lock
ja
loopne
sti
cs
push
or
jbe
fs
push
insl
stc
xchg
dec
pop
lahf
call
stos
test
cmpsl
xor
add
lret
inc
xchg
cmp
add
out
scas
cmpsb
jle
cli
sub
test
mov
push
std
push
cmpsb
sti
xor
mov
mov
cmp
inc
sti
iret
fsubrl
mov
out
divl
mov
ds
arpl
jge
mov
pushl
jnp
arpl
xor
jo
imul
and
cwtl
lods
scas
or
scas
pop
lret
pop
cmp
aas
dec
dec
sub
pop
aad
leave
or
jno
add
faddp
sar
aas
or
xor
or
push
adc
lock
je,pn
jl
mov
or
inc
sarb
mov
mov
adc
orb
xor
andl
sahf
dec
jne
push
stos
test
jle
push
cmpl
sub
ds
ss
or
mov
xchg
and
aad
and
or
push
sub
bnd
sti
lods
mov
repz
dec
call
push
push
jns
inc
je
fwait
push
sbb
mov
sub
lds
enter
scas
pushf
inc
jnp
fimuls
mov
xchg
scas
rcr
xchg
ret
lea
jmp
pop
sbb
inc
inc
or
out
loope
std
mov
add
sub
lret
stos
pusha
stc
push
push
sbb
shlb
fidivs
cmp
sbb
mov
jns
sti
das
or
out
add
daa
or
xchg
xchg
mov
or
pop
mov
and
mov
out
leave
icebp
xor
fisubl
xor
lods
mov
mov
mov
std
sbb
andl
aam
insb
push
mov
aam
xchg
xor
mov
sbb
in
dec
cmc
int3
sub
add
add
push
sbb
add
fsubl
add
data16
push
jecxz
es
push
js
or
ljmp
and
pop
lret
mov
dec
mov
icebp
xor
xchg
xor
sbb
insb
add
out
sub
repz
stos
mov
cmp
push
push
arpl
cmp
mov
pop
xchg
push
push
xchg
push
imul
movsb
into
icebp
das
fildll
pop
xchg
mov
fnstcw
jnp
mov
gs
fnstcw
xchg
std
fnsave
out
clc
xchg
daa
xor
das
and
cmpsb
fdivs
sahf
rolb
or
inc
push
mov
rcrl
adc
xlat
lods
es
cmp
lcall
adc
hlt
loope
pop
scas
scas
and
outsl
xchg
cmp
push
cmc
sub
rorb
pop
sub
mov
mov
push
call
push
adc
push
dec
ds
mov
mov
jo
and
loopne
fwait
lods
push
dec
out
test
int
sub
mov
inc
xchg
out
lret
and
or
mov
fistl
leave
lock
fisubrl
mov
wbinvd
jp
mov
in
and
sub
rorb
aad
out
ret
cmp
mov
clc
sahf
xor
js
and
inc
hlt
jae
mov
sahf
mov
add
cmp
arpl
dec
ret
and
sbb
js
xchg
mov
lahf
xchg
movsb
sub
xor
mov
es
mov
pop
decl
cmp
sarb
mov
decb
or
add
add
xor
adc
sub
xchg
adc
add
ret
and
adc
fwait
lret
shrl
call
fcoms
adc
movq
mov
adc
jge
mov
in
add
lcall
notb
ljmp
addr16
mov
cltd
aad
subb
enter
movsl
cmp
add
jns
pop
cmpsb
int3
or
xlat
adc
inc
or
bound
in
leave
xlat
nop
push
mov
xlat
rcrb
jae
dec
add
xchg
call
scas
inc
add
cmp
frstor
xchg
imul
xorl
sub
je
sbb
stos
jmp
aad
loop
test
mov
icebp
leave
mov
jecxz
dec
xchg
add
lea
imull
xor
sub
pop
out
jle
mov
pop
lcall
mov
loopne
pop
rcrb
mov
test
xchg
dec
cmp
xor
pop
jbe
scas
adc
push
lods
pop
int
sahf
pop
push
es
cmc
cmp
cmc
into
les
fdivl
sbb
mov
inc
sub
repz
mov
xchg
out
int3
and
mov
orl
outsl
push
sub
pushf
mov
icebp
pop
sub
pop
hlt
insb
in
pop
sub
inc
iret
loope
ror
addb
repz
loope
int3
addr16
dec
icebp
addb
lret
jmp
push
ljmp
test
adc
push
jg
xchg
or
jbe
inc
dec
dec
fsubrs
jo
push
push
jecxz
dec
pop
sub
fsub
mov
mov
xchg
xchg
scas
in
jae
sub
xor
jae
pushf
pop
lret
js
adc
mov
adc
and
inc
fdivr
mov
rorl
and
and
sbb
xchg
ja
hlt
or
pop
cmpsl
dec
pop
and
pusha
sub
jl
pop
scas
mov
pop
mov
jmp
pusha
clc
dec
popa
test
ds
repnz
je
aaa
gs
push
dec
cmp
and
mov
rcll
fsts
hlt
les
in
dec
mov
mov
test
rcrb
test
loop
xchg
pop
jg
mov
jp
pop
push
movsb
lcall
out
sbb
jne
xchg
movsb
ss
andb
push
lahf
pop
lret
pop
lods
mov
aad
std
lods
js
popa
jmp
push
and
dec
test
loope
mov
nop
fists
fdivrs
push
push
cmp
test
mov
mov
fstl
out
inc
push
sub
pop
sub
repz
aad
pop
mov
mov
cwtl
cmc
fnsave
and
xlat
inc
adcb
mov
push
lret
fdivrl
das
or
adc
int
or
nop
mov
xchg
or
lods
ss
test
rcrb
cmp
mov
and
cmpsb
jo
or
push
lahf
lea
int3
mov
mov
fld
dec
adc
jae
jbe
push
gs
rcll
leave
aad
lods
stos
xchg
jbe
enter
scas
iret
xchg
jp
movsl
aaa
or
xor
mov
test
popf
stc
cltd
movsb
and
mov
fidivl
push
mov
std
xchg
test
xchg
cmp
mov
or
mov
mov
jno
stos
mov
ss
jl
pop
out
mov
adc
or
push
pop
cwtl
data16
xchg
inc
push
sarl
shll
in
jb
and
arpl
mov
mov
repnz
push
and
stos
les
stos
imul
mov
stos
int
xchg
jb
jo
clc
jne
xchg
test
jp
add
xchg
in
nop
sub
loop
out
pop
int
in
mov
add
hlt
scas
xor
cmc
dec
dec
repz
or
jp
ret
ds
add
cld
pushf
pop
xchg
pop
jae
fs
sbb
shrl
loope
push
addr16
outsb
jno
lcall
jae
movsb
stos
xor
scas
jge
decb
mov
ret
call
in
rclb
rcrl
and
mov
add
mov
fisttpl
adc
mov
ja
and
xchg
int3
jg
sbb
mov
xchg
xor
inc
ss
shl
movsb
inc
mov
mov
mov
fdivrl
cmp
xchg
mov
pop
dec
add
xchg
push
and
mov
mov
test
mov
popf
inc
scas
sub
mov
and
sbb
dec
rcrb
jo
fsub
or
ja
daa
pop
jmp
ljmp
rclb
jbe
xor
mov
jcxz
rcll
jg
xchg
js
rcrl
outsl
mov
enter
scas
xor
fbstp
jmp
mov
insb
add
dec
cmp
enter
je
pop
aaa
cli
data16
push
pop
mov
mov
into
pusha
ja
or
adc
sbb
xchg
pop
push
xor
fistps
mov
ret
and
data16
stos
nop
push
sahf
push
adc
ja
pop
sbb
lcall
or
dec
lret
sbb
fcos
movsl
push
mul
stc
ret
out
enter
push
cmp
test
pop
pop
add
mov
pop
xchg
loopne
push
mov
cltd
jae
pop
mov
push
cmp
shll
test
sbb
fdiv
add
sbb
and
cmp
flds
jae
push
push
cmp
or
cmpb
shrb
or
fisttpl
lea
mov
xor
push
mov
pushf
mov
flds
push
pop
jne
pop
mov
and
and
ret
pop
cmp
mov
xchg
fwait
jnp
jmp
rcrl
iret
cmp
dec
shll
sbb
addr16
xor
movsl
enter
jmp
push
mov
mov
xor
mov
scas
sbb
or
mov
nop
in
mov
dec
inc
pop
shll
addl
popa
xchg
cmc
pop
inc
jae
add
es
popf
dec
sbb
mov
xchg
push
push
xchg
xor
push
xchg
push
cwtl
cmp
es
imul
lret
outsl
jnp
inc
shlb
mov
mov
addr16
aam
add
ret
dec
and
sarb
mov
scas
mov
test
aaa
mov
mov
mov
cmpsb
mov
xor
adc
gs
sub
cwtl
pop
sti
mov
scas
lcall
mov
jg
enter
mul
push
xlat
inc
adc
pop
add
leave
jbe
rol
fwait
jnp
cltd
sahf
push
fwait
je
neg
dec
jno
or
insb
sub
xor
xchg
jg
adc
jle
fucomip
out
cli
sbb
xor
test
aaa
xor
push
movsb
xlat
mov
fnstenv
test
ret
dec
inc
test
push
pop
mov
lock
mov
ss
mov
jns
iret
xchg
into
xchg
sbb
xor
mov
subb
jg
test
loope
dec
add
xchg
subb
repz
adc
js
dec
insb
cmpb
adc
pop
mov
int3
pop
inc
fdivp
inc
adc
in
test
and
testb
pop
out
sbb
int
lahf
push
out
jge
xchg
pop
jo
fnstenv
dec
mov
cmp
outsl
pop
sbb
loopne
test
xchg
xor
leave
ss
cmp
repz
scas
call
testl
adc
stc
inc
inc
mov
lcall
es
xor
inc
inc
cmp
mov
or
dec
sub
fmul
adc
inc
xchg
popf
inc
gs
mov
mov
mov
mov
lds
loop
test
adc
mov
xchg
jb
xor
mov
xor
les
pusha
mov
in
repnz
fstps
dec
adc
cld
shll
test
insb
icebp
jle
aam
push
jmp
test
test
xor
cli
das
lds
xor
stos
push
sub
and
lea
jne
inc
jg
jle
adc
cltd
dec
roll
cmp
shl
pop
push
jmp
add
jmp
aam
push
iret
jge
out
popf
jp
add
jmp
mov
xlat
cwtl
pop
add
insl
daa
xchg
lods
fs
and
scas
ljmp
popa
jnp
push
cmpsl
jne
js
verw
aaa
add
aam
leave
out
fsubl
xor
push
cwtl
or
sbb
sub
fbld
sub
sti
jp
cmpsl
cli
and
enter
in
mov
jle
cmp
fdivs
push
fdivs
test
adc
pop
push
sbb
mov
cld
xchg
scas
sbb
mov
lcall
int
in
pop
jbe
xchg
mov
inc
add
shrb
lods
push
int3
scas
xlat
aas
jbe
adc
movsl
or
imul
in
jns
int3
shr
mov
aad
rorb
adc
add
in
mov
and
sahf
xor
mov
scas
cmpsb
movsb
add
jecxz
mov
movsl
in
data16
insb
or
push
out
clc
jnp
push
pop
pop
je
pushf
cmpsb
jb
dec
pop
pusha
int3
lea
aas
mov
cmpsb
fistpl
sub
cmp
sti
fsubrs
mov
roll
cmp
mul
or
push
lret
imul
les
shll
and
sarb
cltd
stos
testb
mov
lods
jns
lahf
inc
inc
or
or
jp
rcrb
sub
test
inc
adc
mov
daa
das
test
fmuls
pop
clc
outsl
call
lahf
cmp
dec
fistpll
push
pop
mov
dec
enter
call
lahf
cmp
dec
fistpll
push
pop
mov
dec
enter
call
lahf
cmp
dec
fistpll
imul
mov
dec
enter
call
xor
das
inc
shlb
adc
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lret
pop
lcall
sbb
add
pop
rcll
or
add
add
or
add
add
add
add
add
mov
and
sub
xchg
add
mov
sbb
xchg
add
add
add
add
pop
lea
mov
pop
add
pop
add
add
test
outsl
add
add
hlt
add
add
add
add
add
adc
imul
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
jecxz
daa
add
add
add
add
add
add
add
adc
add
cmp
add
add
hlt
add
add
xchg
add
adc
add
sahf
add
add
add
mov
loop
or
test
jns
add
add
inc
add
add
adc
adc
jp
and
push
add
add
hlt
add
xor
mov
add
add
add
add
add
adc
push
add
jno
adc
and
jle
dec
add
add
add
loopne
xor
adc
dec
add
inc
add
add
dec
add
add
mov
add
add
add
add
add
add
add
add
push
add
add
add
data16
add
add
add
add
dec
add
add
pop
xchg
add
cmp
mov
mov
add
pop
jb
mov
push
add
loop
add
aaa
add
add
add
cmp
jnp
jo
outsb
add
sbb
push
add
add
add
or
jno
cmp
mov
pop
add
add
add
add
add
add
add
add
add
add
test
add
adc
dec
add
cmp
mov
add
add
daa
add
add
or
inc
add
add
sub
add
add
pop
mov
ljmp
add
add
add
fwait
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
loop
add
lea
add
add
pop
add
add
dec
add
add
add
rolb
add
add
mov
add
mov
in
jo
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
adc
flds
scas
add
add
in
add
cmp
add
add
fs
add
mov
sbb
aaa
add
and
add
add
adc
test
add
add
add
add
inc
add
add
test
roll
inc
add
add
jns
add
add
cli
add
add
add
loopne
adc
test
cltd
add
add
test
add
add
add
sub
mov
xor
add
sahf
add
add
add
add
aad
mov
inc
addl
xchg
sbb
paddsb
rorb
lcall
sub
jnp
rorl
cmc
aas
mov
outsb
arpl
push
inc
pop
jecxz
mov
adc
out
mov
fsubrs
movsb
mov
int3
lret
pop
inc
sbb
mov
xor
add
sub
xchg
cli
xchg
shrl
sbbb
rorl
popa
pop
sub
icebp
lret
roll
add
dec
aam
outsb
fmulp
fbstp
jle
ljmp
cli
lcall
push
cmpsl
xchg
pop
fidivrl
add
mov
and
popa
ds
rcll
sub
mov
cmpsb
sub
repz
cwtl
jno
aaa
sbb
dec
dec
rorb
ret
cmp
insb
test
or
shr
dec
test
inc
movsb
fcmovnb
push
push
dec
daa
inc
adc
outsb
jmp
fwait
sbb
push
add
test
push
push
sbb
loop
dec
mov
or
cmp
cwtl
into
fnstenv
lods
stos
mov
mov
push
addr16
ja
mov
and
push
test
or
cli
imul
cwtl
rcrl
add
cmp
aas
imul
addl
inc
fs
xchg
push
imul
test
daa
mov
xchg
sub
cli
jmp
sarl
ja
xchg
js
das
inc
lret
scas
pop
cld
jmp
dec
and
or
test
nop
cld
sub
pop
lret
sbb
push
push
jb
imul
movsb
and
lods
pop
leave
push
fistpll
pop
ret
mov
jnp
rcll
inc
cli
shlb
dec
orb
ret
repz
sarl
and
frstor
mov
icebp
xor
lock
cmc
lcall
in
in
out
loopne
push
out
out
add
rcll
xor
mov
lcall
in
xchg
movsb
daa
dec
ret
cmp
je
cmp
notb
lahf
pop
pop
adcb
es
or
not
lahf
into
imul
cltd
rcrl
daa
jle
nop
xor
scas
nop
mov
lods
out
pusha
mov
mov
ds
sbb
clc
mov
xchg
mov
add
jne
adc
fsts
cltd
pushf
add
divl
cmp
and
hlt
xor
mov
je
sub
jle
or
dec
adc
imul
outsl
adc
mov
pop
fimull
repz
push
lahf
je
mov
dec
lahf
dec
into
sbb
or
push
cmp
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
