fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
rcll
repz
sbb
es
lcall
inc
cmp
arpl
adc
jns
dec
and
stos
ret
mov
xchg
jmp
ja
lret
mov
sbb
insl
sbb
add
jnp
or
pop
lret
mov
mov
fwait
stos
and
pusha
pop
sub
sbb
cmp
adc
je
mov
xchg
into
rcr
jo
xlat
fs
sub
pop
sbb
adc
mov
pop
daa
mov
mov
cltd
push
push
arpl
mov
sub
aas
mov
push
mov
arpl
cmpsb
mov
xchg
adc
jnp
mov
dec
shrb
stos
cmp
adcb
aam
imul
out
push
test
mov
add
insb
iret
fwait
mov
push
js
sub
xchg
sbb
cmp
jp
pop
xor
lcall
inc
mov
push
push
hlt
xor
push
push
test
dec
and
sbb
jecxz
test
xchg
sti
mov
mov
std
imul
push
or
subl
and
xchg
enter
lahf
in
mov
das
jle
jg
jb
add
cmovno
dec
cmp
xchg
mov
mov
lock
dec
es
jae
and
push
xor
fisttpl
sti
mov
mov
cmp
arpl
adc
jnp
dec
and
stos
ret
mov
xchg
jmp
sti
mov
mov
cmp
arpl
adc
jnp
dec
and
stos
in
insb
dec
sub
fdivs
jmp
push
lahf
insl
jle
call
fisttps
lret
cmp
push
mov
mov
inc
jge
cltd
cmp
aas
and
dec
inc
test
xchg
fistl
inc
loop
push
xor
xchg
or
xchg
test
cmp
mov
popf
mov
ret
xor
jae
test
jne
mov
sahf
popa
leave
loop
jbe
lret
mov
out
lret
inc
xchg
jbe
sbb
movsb
pop
cli
ds
mov
xor
jne
and
in
es
jbe
xchg
pop
jmp
sbb
call
enter
lea
mov
call
nop
pop
jnp
xchg
sub
xchg
mov
shr
mov
push
mov
int3
pop
aas
pop
push
ljmp
repz
dec
or
aad
adc
imul
movsl
sahf
stos
xchg
or
or
repnz
fistl
pop
mov
std
cld
imulb
lcall
lods
xchg
cmc
or
mov
xchg
test
ret
nop
xchg
roll
scas
or
jmp
sbb
lret
ja
xchg
pop
sti
xchg
fistpll
adcl
jae
add
lea
fdivr
inc
mov
mov
mov
stos
mov
les
adc
test
jge
hlt
sbb
fldenv
aas
jns
outsl
mov
int3
mov
dec
sub
xchg
inc
and
mov
cmp
jecxz
pop
mov
cmpsl
add
xchg
push
cli
cmp
mov
lahf
dec
push
loope
insl
push
sub
and
int3
pop
or
pop
daa
clc
push
dec
cs
ret
dec
aad
cld
mov
xor
pushf
repz
jae
mov
lods
in
clc
jge
mov
repz
adc
iret
fadds
push
movsb
jl
dec
mov
ds
ss
test
jo
mov
addr16
dec
int3
xchg
aas
mov
out
inc
negl
enter
or
out
je
mov
and
fsubs
divl
mov
xchg
outsb
rcrb
ret
out
cmpb
mov
movsl
mov
sti
or
sar
adc
in
cli
xchg
loopne
icebp
or
inc
jbe
sbb
xor
push
adc
in
jbe
daa
xchg
int
aam
cltd
adc
xchg
test
ljmp
sub
inc
jmp
or
mov
adc
int
rol
cwtl
scas
out
or
cld
jl
dec
mov
cmp
sbb
das
das
lods
mov
xor
pop
jnp
mov
mov
into
dec
mov
js
sbb
movsl
addr16
dec
or
mov
icebp
out
movsb
push
jb
daa
pop
push
mov
fdivs
sbbl
imul
pop
fsubrp
mov
sbb
std
iret
pop
or
jmp
add
xchg
inc
test
jno
xor
in
outsb
aas
xchg
xchg
call
inc
js
pop
rcrb
cwtl
inc
xchg
mov
sub
xchg
loopne
pop
in
pop
push
inc
aam
push
xchg
in
je
push
add
js
test
cld
aas
das
mov
ds
mov
or
cmpsl
inc
push
xor
lods
cmp
inc
sahf
mov
push
mov
push
xchg
xlat
sub
hlt
scas
add
cmpsl
lock
inc
in
lcall
scas
fchs
out
cltd
sbb
or
mov
jg
jmp
out
mov
iret
cmp
jecxz
jmp
mov
mov
pop
mov
lods
pop
or
sub
sti
aad
push
cmp
fisubl
cltd
jns
dec
mov
lret
repz
push
dec
lds
and
xchg
xchg
mov
cmp
mov
lds
dec
mov
inc
mov
daa
jmp
jmp
pop
shlb
adc
jmp
cmc
fwait
xchg
or
xchg
xchg
sub
insb
mov
dec
pusha
xor
out
dec
ja
push
icebp
cwtl
or
movb
pop
push
fimull
loop
mov
push
imul
add
iret
clc
enter
movsb
icebp
dec
mov
inc
mov
test
sbb
addb
inc
push
jge
push
xchg
add
call
test
les
sbb
cli
fsubl
cld
and
jecxz
in
mov
push
insb
clc
xchg
mov
repnz
inc
sahf
push
xchg
std
xchg
mov
cmp
xchg
shll
jmp
push
gs
lret
pushf
xor
cmp
mov
rcrl
mov
adc
pop
popf
adc
pop
bound
adc
dec
outsb
fcmove
xor
xchg
xchg
mov
scas
pop
in
pop
stos
mulb
dec
mov
jae
jmp
pop
lret
pusha
inc
lock
xor
cmp
fdiv
pavgb
imul
jb
mov
or
jo
scas
jns
fistpll
sub
adc
or
jno
lahf
mov
adc
test
movsl
sbbb
xchg
jle
or
insb
push
decb
pushf
mov
das
int
sub
mov
pop
inc
jl
iret
inc
cmp
aad
mov
jae,pt
out
jp
sti
and
jne
push
sbb
mov
dec
xor
pop
negb
mov
mov
movsb
mov
xlat
popa
insb
adc
mov
xchg
mov
jo
xchg
cmp
xor
xor
ret
jo
sbb
mov
repnz
push
popa
cmp
pop
ret
mov
xor
sub
loopne
ds
cwtl
fwait
dec
sti
xchg
dec
test
sbb
dec
outsl
outsl
or
xchg
in
lret
daa
jns
mov
shrl
pop
lcall
or
hlt
shr
mov
inc
rcr
xchg
xchg
adc
adc
inc
inc
psrlw
mov
ljmp
stos
imul
cwtl
sti
xchg
jno
add
inc
pop
mov
dec
sarb
mov
xchg
push
adc
add
rcll
mov
notl
rcll
add
cltd
or
pop
leave
xchg
stc
mov
inc
or
jmp
mov
cmp
loope
sbb
lcall
adc
popa
xor
push
or
mov
mov
adc
dec
jne
or
cwtl
aas
repnz
rolb
or
movsl
and
sbb
jecxz
mov
adc
xchg
test
cmp
fdivp
in
pop
mov
negl
pop
ja
mov
and
mov
or
cmc
mov
jl
jbe
or
les
bound
jecxz
dec
fisubl
loope
inc
in
cmp
jbe
mov
push
push
pop
jae
mov
push
outsb
adc
xchg
jle
or
cmc
ja
sahf
add
add
lcall
rorl
pop
ret
js
mov
xor
cmpsb
pop
dec
repnz
adc
or
mov
mov
ret
outsb
in
call
xorl
lock
jo
mov
sub
sar
idivb
adc
fldl
rorb
adc
and
repz
xchg
inc
in
xchg
mov
pop
js
cld
dec
xchg
scas
add
sarb
fcmovbe
sub
insb
sub
mov
in
sbb
dec
lret
mov
xor
js
push
shr
or
arpl
int3
sbb
jne
std
dec
xchg
lea
pop
adc
xorl
xchg
aaa
sbb
test
insl
pop
jo
and
push
ljmp
lahf
pop
std
sub
ret
rol
sbb
jbe
in
stos
push
adc
ss
enter
shl
jle
fiaddl
push
jle
mov
loope
mov
dec
jle
xor
fistpll
stc
and
mov
push
das
mov
nop
sarb
mov
mov
stos
jge
jmp
daa
les
popf
or
push
hlt
fisttps
inc
in
fsubr
inc
std
ljmp
push
lods
xor
jns
int
adc
jl
shlb
in
cmpsb
xchg
xchg
and
sub
cmc
fxch
scas
or
lret
add
in
add
push
rolb
mov
and
rorl
push
stc
pusha
add
fstps
addr16
js
sub
fwait
test
call
cmp
ud0
cmpsb
pop
insb
mov
jno
mov
cmpsb
js
dec
xlat
xor
aam
subb
mov
fs
mov
or
jp
stc
push
aaa
adc
shr
cwtl
dec
lock
mov
dec
push
in
pushf
or
sub
das
rclb
inc
jb
sub
popf
jle
insl
dec
xor
cmp
shlb
imul
ss
mov
in
cmp
dec
and
push
enter
cmp
rolb
faddl
push
lcall
inc
das
or
out
aad
cmpsb
mov
mov
push
mov
xor
jmp
jo
and
jno
jge
pop
test
and
mov
jle
pop
dec
sar
mov
inc
sahf
stos
pop
sbb
dec
ja
dec
sbb
leave
or
dec
call
pop
mov
xchg
jo
sbbb
inc
test
mov
dec
or
addr16
pop
divl
cmc
sbb
lods
push
push
push
jb
push
jae
loope
data16
and
jnp
out
xor
pop
push
dec
xchg
movsb
or
loopne
sub
mov
std
xor
sub
dec
out
xor
mov
inc
sahf
cmp
nop
xor
mov
xchg
push
adc
inc
pop
clc
pop
push
dec
mov
in
iret
je
aas
in
sahf
rolb
inc
add
add
push
sar
pop
sbb
add
ds
and
es
xor
jno
mov
cmp
dec
les
popa
test
cli
cmpsb
mov
sbb
clc
xchg
loope
xchg
jno
lret
bound
adc
adc
inc
ljmp
mov
clc
mov
sbb
pop
bound
inc
pop
inc
mov
cld
inc
into
inc
adc
enter
loop
xchg
fcmovnbe
or
push
inc
mov
pop
orb
dec
out
or
fsubp
inc
fcoml
fwait
cwtl
mov
push
cmpsl
ret
mov
shr
fistpl
repnz
mov
pop
jns
cld
pushf
jle
daa
clc
dec
andb
test
xor
xchg
add
mov
gs
dec
xchg
or
or
xchg
cwtl
jae
loope
inc
sbb
sahf
loop
mov
inc
or
rorl
jo
cmp
jge
mov
jmp
cmp
int
inc
jnp
repz
aad
pushf
addb
mov
hlt
mov
ss
pop
nop
lds
ds
loope
xor
les
mov
jne
enter
sbb
roll
fldl
popa
cmpsl
fcoml
movsl
jle
mov
icebp
mov
jecxz
mov
movsl
std
lods
jecxz
popa
imul
xchg
inc
xchg
movsb
loop
sbb
lcall
mov
inc
mov
fbld
mov
mov
xchg
inc
pop
adc
in
mov
and
int3
jmp
xor
popa
aas
arpl
or
insb
mov
adc
xchg
jg
scas
mov
jae
ret
das
int3
mov
sub
dec
jecxz
inc
xchg
pop
add
push
int
scas
dec
mov
sti
or
ljmp
cmp
add
aas
jbe
aas
xor
cmc
sbb
sbb
pusha
and
fcoms
add
xor
or
pop
hlt
in
fmuls
mov
mov
pop
loope
lea
call
or
mov
jl
mov
mov
test
xchg
add
mov
out
mov
xor
mov
mov
fstps
add
gs
je
dec
fcmovnb
sub
pop
push
outsl
pusha
dec
jecxz
icebp
and
jno
or
lret
push
popa
dec
cltd
arpl
cmp
mov
mov
push
lret
enter
xlat
mov
cmc
fdivrl
pop
sbb
loopne
dec
xchg
fcmovne
gs
decb
es
loopne
hlt
or
dec
insb
push
movb
xchg
test
loope
push
and
push
popa
sbb
inc
in
xlat
cld
xchg
ret
push
ss
adc
xchg
sbb
inc
out
sbb
insl
lea
jns
mov
cmp
sub
jo
jmp
clc
adc
and
sub
cmc
out
xchg
mov
or
in
sub
movsb
adc
scas
js
inc
push
aad
out
subb
shrb
jo
adc
es
and
lods
ja
mov
dec
push
push
mov
push
cmp
xchg
test
push
in
inc
xchg
ficompl
mov
scas
mov
cmp
rcrb
loop
xor
add
sbb
fcomps
push
insb
sub
pushf
inc
imul
and
pop
inc
rorl
jb
shrb
push
add
pushf
arpl
and
mov
stos
popa
mov
mov
lock
data16
push
inc
push
inc
frstor
out
sahf
jl
jmp
loopne
repnz
jo
mov
aas
pop
lds
lods
loop
lcall
cmc
fnsetpm(287
pop
and
push
xor
or
iret
sub
aas
and
cmc
or
pushf
sbb
pop
call
call
and
xchg
imul
mov
out
aam
fs
rcrl
test
dec
xor
mulb
int3
in
or
cmp
mov
dec
inc
aas
push
ja
xor
out
mov
mov
xchg
sbb
sub
mov
push
mov
pop
hlt
lcall
mov
gs
or
jl
jne
fsubs
adc
mov
jbe
cmp
and
aad
add
out
xchg
xor
mull
ret
scas
push
jp
sub
shlb
jge
dec
push
ja
mov
lcall
addl
aaa
jg
inc
cmp
ljmp
or
movsl
pop
sahf
punpckhdq
mov
cmp
mov
test
and
aam
mov
lcall
dec
and
mov
cmp
jp
mov
push
cwtl
test
ljmp
mov
mov
add
jbe
loope
jle
sti
out
setne
jecxz
jge
and
js
lods
das
push
pop
jmp
fs
pop
and
sub
lret
jns
dec
imul
stc
stc
imul
aad
sub
push
xor
adc
sti
std
cmp
ja
pop
frndint
adc
mov
movsl
dec
popf
mov
jmp
pop
pop
inc
lcall
inc
lret
or
fcomi
scas
in
scas
mov
aas
inc
popf
out
call
fidivs
mov
mov
int3
cmp
xchg
pop
mov
cmpsl
and
outsb
cmpsb
xchg
outsl
adc
loop
jl
loopne
xchg
add
push
or
cmp
ds
shlb
sbb
dec
sub
mov
xor
lods
inc
cmp
mov
ja
fs
cli
std
push
inc
rorl
mov
inc
loopne
mov
xchg
jecxz
bound
and
dec
mov
leave
dec
in
js
or
inc
push
fisubrl
nop
lea
loopne
sbb
test
daa
pushf
jo
lret
testb
add
daa
mov
sti
and
jb
sbb
xlat
inc
inc
mov
inc
ror
xor
inc
pop
imull
in
mov
pop
xor
push
pop
add
les
cvttps2pi
inc
sbb
cmp
loop
lock
xor
clc
jmp
mov
push
mov
lahf
decb
or
imul
adc
cmp
xchg
imul
int3
mov
pop
leave
daa
inc
cli
jle
jge
add
push
mov
mov
lret
mov
into
aad
mov
add
pop
popa
and
inc
jmp
scas
pop
sahf
lret
xor
push
loope
popa
mov
pop
push
shr
adcl
sub
mov
sbb
jecxz
jge
add
pushf
jl
or
enter
add
iret
cld
loopne
and
inc
adcl
and
pop
outsb
xchg
popa
dec
push
mov
rcl
ja
and
sub
push
lcall
or
mov
jae
xchg
faddl
into
add
inc
and
filds
cmpsl
iret
mov
push
dec
rorl
sub
pop
dec
sbb
mov
jg
inc
addr16
test
xchg
iret
jecxz
aam
inc
and
push
ss
and
dec
popf
inc
dec
jle
and
cs
int3
xorb
inc
outsb
cmp
xlat
outsb
sbb
movsb
add
gs
xchg
inc
dec
pushf
jg
mov
or
pusha
jp
test
sub
push
jb
movsl
rol
mov
jle
ret
popa
adc
lret
push
mov
cli
icebp
xchg
shl
or
jmp
cmp
adc
into
sub
movsb
test
add
jns
xchg
lret
in
cs
data16
dec
mov
loopne
and
cs
lea
jp
pop
cmp
out
and
fdivl
mov
inc
and
mov
xor
andl
call
xlat
push
add
stc
cs
inc
sbb
adc
push
adc
aad
mov
jl
pop
divl
mov
lret
int
aas
sub
lods
fs
mov
push
push
mov
stos
or
push
mov
inc
jg
aas
iret
jge
push
shrb
lds
cmpsb
adc
pop
xchg
pop
fs
jl
leave
push
cmp
push
or
mov
push
call
loopne
or
and
xorb
fistpll
dec
dec
xchg
jl
sbb
out
add
add
push
xchg
dec
push
add
leave
xor
mov
daa
popf
push
pushf
jo
loop
dec
xlat
pop
repz
test
test
adc
mov
mov
mov
inc
out
das
rcll
dec
sub
push
rcl
lcall
sub
roll
test
adc
shrl
xchg
xor
fmuls
mov
sub
xchg
aaa
xor
sarl
sub
hlt
leave
imul
cmp
cli
stc
out
ret
fistpl
sub
or
orb
sub
jnp
and
cmp
imul
icebp
inc
push
fldt
jg
divl
or
sbb
xchg
mov
dec
jno
sbbl
leave
dec
lds
add
test
hlt
adc
fwait
cmpsl
outsl
sbb
sbb
addr16
aad
loopne
mov
in
jmp
or
cmp
enter
rcrb
int3
inc
cwtl
ljmp
loop
xchg
lods
push
stos
xchg
lea
jns
rol
dec
dec
ds
lds
dec
in
xor
lods
adc
pop
std
stc
test
xchg
pop
scas
daa
mov
xor
insl
xchg
insb
or
dec
test
or
xchg
cmp
push
nop
and
insb
jb
popf
addl
notl
inc
sbb
push
inc
std
and
mov
mov
xchg
adc
ror
dec
lea
jle
test
inc
into
and
and
movsb
fstpt
int
loopne
adc
shlb
pop
movsb
dec
and
ret
sti
mov
ljmp
mov
mov
pop
js
xchg
ret
jnp
icebp
or
lds
fndisi(8087
pop
xor
cmc
std
pop
push
xchg
add
fwait
push
push
cmpsb
and
push
mov
adc
cmpsb
jbe
lret
jmp
jmp
add
push
scas
push
ret
mov
cmp
dec
in
push
popa
test
inc
jg
cmp
out
shlb
repnz
add
outsb
arpl
ret
or
aam
xchg
mov
mov
gs
sub
out
adc
inc
test
mov
fimull
rclw
mov
cwtl
xor
int3
mov
push
enter
addr16
pop
or
stc
pop
push
jle
jge
or
jbe
ret
cmp
out
ret
pop
cmp
xor
xor
pop
inc
ja
adc
loopne
fbld
or
lock
cmp
sahf
movsb
jnp
decb
into
adc
out
fadd
addr16
jg
movsl
push
call
jl
les
jmp
sbb
add
xor
pusha
mov
push
or
fcompl
mov
pop
xchg
enter
out
and
adc
pop
pusha
enter
pushf
inc
ret
aaa
jno
mov
sbb
push
sub
mov
push
and
icebp
mov
mov
or
xchg
mov
lea
movsl
icebp
insl
lcall
xchg
jl
stc
sub
popa
or
in
cmp
cmp
sbb
mov
xchg
jmp
sti
mov
mov
cmp
arpl
adc
jnp
dec
and
stos
ret
mov
xchg
jmp
sti
mov
mov
cmp
arpl
adc
jnp
dec
and
stos
ret
repz
xchg
jmp
push
mov
mov
cmp
arpl
adc
jnp
imul
shrl
jecxz
xchg
jmp
sti
xor
fldt
arpl
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
outsb
idivb
dec
sub
and
aaa
imul
jns
mov
xchg
into
mov
mov
stc
outsb
or
dec
sub
cs
ds
push
imul
cltd
mov
stos
mov
stc
outsb
adc
dec
xor
cs
ds
push
jno
arpl
push
mov
mov
mov
mov
jle
cmp
cmpsb
addb
and
push
lods
out
and
adc
ret
mov
mov
icebp
sbb
shlb
mov
stos
mov
div
sahf
xchg
pop
jo
das
pop
jae
lock
out
or
pop
xor
aaa
fldpi
pop
pop
stc
sub
sbb
sub
or
imul
xchg
fldz
inc
dec
clc
inc
push
lcall
xchg
xor
clc
and
data16
cmp
js
add
cltd
fsubrp
push
mov
outsb
jmp
inc
stc
or
mov
mov
mov
mov
mov
jmp
dec
cmp
cs
ds
push
jo
pusha
out
xchg
incb
scas
sarl
popf
sub
sub
cmp
inc
pop
ja
imul
loope
cld
mov
lret
movsb
xlat
mov
jmp
or
push
pop
cmp
cmp
push
or
cld
clc
fstpl
mov
test
jl
dec
pop
dec
cs
push
jns
mov
cltd
into
test
mov
stc
outsb
or
dec
sub
cs
ds
push
imul
cltd
into
test
mov
stc
outsb
or
sahf
cmc
or
hlt
je
cmp
aad
xchg
xchg
mov
pop
and
dec
les
lock
sub
stos
stos
push
mov
push
ret
inc
jl
mov
ss
xchg
fs
stos
cmp
jnp
inc
fsub
in
sbb
push
sbb
iret
std
or
in
loope
xchg
adc
cmc
add
xchg
pop
fiaddl
or
push
xchg
mov
push
cmp
add
adc
add
stos
push
xchg
rcrb
mov
fimuls
clc
or
insb
push
sbb
lcall
test
in
ficoml
and
dec
out
dec
je
mov
fdivl
sbb
es
fdivrp
scas
push
adc
test
pop
sub
add
aam
inc
pop
fmull
sahf
in
inc
sub
xchg
or
cltd
lcall
sti
inc
imul
cmp
enter
mov
ja
pop
jge
mov
notl
cmp
sahf
cmc
in
jns,pn
or
and
sub
cpuid
add
and
dec
xor
cmp
lahf
popl
mov
rorl
and
mov
imul
ret
popf
lret
dec
sbb
notb
ljmp
mov
add
js
cmp
push
inc
mov
xchg
jle
pop
jecxz
in
mov
push
sub
xor
aas
pop
in
aaa
test
loopne
sbb
dec
andl
push
insl
aas
xor
flds
mov
lea
sub
mov
pop
add
rcrb
push
ds
dec
lret
lods
mov
lods
xchg
divl
pushf
pop
add
mov
mov
cmp
mov
push
lods
mov
fsubs
ljmp
push
sub
cwtl
add
sahf
adc
mov
jmp
shrl
sbb
cwtl
aaa
push
adc
pop
jg
dec
adc
jmp
test
xchg
dec
jg
leave
jecxz
pusha
dec
jp
adc
mov
shl
mov
adc
lock
sbbb
aaa
dec
ds
push
inc
lods
testl
test
cmc
idiv
add
aad
mov
adc
cli
mov
scas
in
dec
into
adc
or
pop
nop
cmp
loop
fstp
aas
loopne
pusha
and
mov
xor
mov
mov
movsl
adc
aaa
push
add
mov
jp
mov
or
je
test
imul
sahf
push
and
jae
stos
pop
xchg
ficomps
mov
jle
pop
scas
xchg
dec
es
repnz
push
leave
mov
inc
bound
sub
out
cmp
js
scas
pop
hlt
mov
call
inc
mov
inc
push
into
adcl
xor
orl
xor
je
or
lcall
adc
xlat
inc
sbb
outsb
inc
xor
inc
jge
je
or
add
enter
mov
sub
fstpt
dec
jnp
sbb
aaa
pop
mov
xchg
aad
clc
mov
cmp
mov
lea
jnp
push
mov
adc
xchg
inc
lahf
adc
pop
testb
mov
test
mov
push
lahf
insb
loope
lock
fs
cmpsl
lcall
test
pop
sbb
dec
dec
ret
cmpsb
inc
jne
aaa
inc
dec
push
lock
leave
aaa
mov
push
sarb
mov
and
jo
dec
call
dec
jno
mov
cld
lods
pop
mov
push
cmc
sbb
push
insb
je
pop
mov
mov
std
xor
repnz
jmp
js
inc
addl
jae
xor
xor
test
jnp
ror
lcall
es
push
aad
scas
mov
inc
jne
into
inc
sbb
test
imul
jne
out
jae
push
dec
xchg
fidivrl
das
dec
ret
xor
imul
ret
enter
mov
fwait
test
in
aas
mov
movsb
xor
std
mov
jmp
mov
ret
cltd
add
aas
cmp
popa
adc
lret
insl
cmpsb
xor
push
pop
lock
sbb
je
cs
lret
xchg
into
mov
nop
mov
cmp
addb
or
xor
mov
sarl
cld
dec
dec
inc
addr16
out
dec
insb
pop
or
push
and
adc
cs
in
aam
push
dec
push
lahf
imul
enter
ret
scas
xchg
or
pop
sbb
aad
mov
jp
loop
nop
xor
sub
mov
fisubrs
dec
lcall
sub
stos
cmp
into
dec
std
xchg
dec
jle
int
mov
icebp
sti
jns
mov
icebp
sbb
push
rorl
ret
mov
test
dec
sub
arpl
movsb
push
bound
sarb
xlat
cmp
and
or
push
pop
lods
rcrb
ret
pop
out
mov
add
scas
nop
add
rclb
roll
bound
nopl
outsb
lcall
int3
pop
adc
or
popa
cs
mov
in
xor
fnstsw
sbb
push
sub
mov
and
xchg
inc
lret
push
jo
sbb
enter
xor
mov
sub
jp
leave
test
leave
in
lods
std
mov
loope
push
adc
fdiv
je
addr16
lock
mov
xchg
hlt
ja
and
es
pop
cmp
xor
into
dec
pop
sbb
sbb
mov
les
dec
ret
sbb
repz
pop
xchg
popf
data16
mov
pop
pop
fsubl
pop
push
into
xor
mov
mov
add
add
stos
leave
push
into
and
subl
stc
fldl
pop
jne
leave
mov
sarl
push
jge
inc
or
lock
in
inc
add
add
insb
sbbl
inc
jecxz
movsl
jno
xlat
lret
aas
les
repnz
inc
jg
sub
rol
pop
cwtl
dec
push
cli
pop
das
movsb
adc
mulb
bound
test
jl
shll
mov
push
sbb
push
jae
sahf
and
push
shr
push
push
xchg
inc
and
xor
pop
mov
cwtl
pop
inc
in
int
divl
loop
jmp
cli
push
popf
outsb
imul
adc
loop
mov
inc
in
dec
sbb
push
je
add
mov
cltd
or
adc
xchg
dec
cmp
dec
jb
xor
cmp
addb
push
repnz
xlat
mov
xchg
fmul
rclw
sub
cmp
xorb
mov
fucomp
or
out
enter
imul
or
movsb
movsb
fimuls
cmp
call
xchg
push
adc
push
or
ss
shrb
jmp
sbb
ds
js
movsl
test
push
ret
add
jb
jmp
pop
jae
xchg
ss
xchg
inc
mov
cmp
dec
jo
or
pop
out
test
aam
scas
clc
jo
into
sti
pop
xchg
ffree
iret
das
sbb
fwait
outsb
add
push
cltd
test
mov
movsb
mov
mov
xor
push
adc
cmpsb
scas
pop
testb
das
orl
int
leave
sub
pop
adc
pusha
sbbl
jno
or
push
arpl
loop
imul
cli
sub
fdivr
mov
lea
mov
inc
pop
fstpt
mov
outsb
jbe
lock
sbb
shl
sbb
stos
mov
rclb
pop
es
mov
xor
xchg
movsl
jp
sbbl
jg
mov
imul
jmp
aam
outsb
cwtl
cmp
fiaddl
ret
imul
cmc
movsl
push
ret
push
or
dec
mov
adc
jge
push
out
movsl
inc
adc
xor
into
fisttpll
push
push
mov
pop
sbb
test
fwait
inc
jae
shlb
or
adc
jmp
pop
mov
xor
jle
test
sbb
and
push
xor
pop
insb
xor
cmc
lret
mov
fwait
pop
mov
cmpsb
xchg
and
lret
fstpl
movsl
mov
mov
into
les
inc
sti
ljmp
cmpsl
stc
push
or
pop
mov
ret
pop
mov
scas
xchg
jp
sub
add
lods
add
sub
outsb
in
mov
jae
sti
cmpsl
xchg
push
add
popa
sbbb
or
test
aad
insl
loopne
sub
push
adc
sarl
es
dec
xor
and
incl
cs
cmp
xorl
inc
pop
lahf
sbbb
add
loope
dec
push
int3
lret
das
test
push
cmp
test
mov
cltd
in
lock
dec
test
and
add
add
out
imul
pop
xorl
and
popa
inc
cli
and
cmpsb
mov
mov
pop
cld
push
push
addl
xchg
movsl
out
push
je
push
imul
adc
push
movsb
or
add
out
xchg
ljmp
in
jne
xor
outsl
icebp
mov
xchg
mov
cmp
sub
sub
mov
adc
or
push
xor
cld
nop
sub
pop
jnp
bound
mov
dec
fldt
xchg
clc
cmp
shlb
maxps
adc
adc
ds
sti
scas
imul
ret
jb
dec
je
rcr
shrb
les
das
cltd
sub
arpl
nop
sub
aas
jmp
testb
push
dec
lretw
inc
leave
sbb
xchg
mov
inc
xor
test
mov
scas
inc
mov
ret
mov
imul
popf
pop
or
inc
test
sbb
push
inc
loope
ljmp
mov
das
es
sub
jp
jmp
pop
dec
movsb
sbb
outsl
fadds
jle
mov
cmp
sti
adc
push
out
stc
add
adc
fimuls
mov
mov
scas
add
bound
pop
inc
jno
mov
cs
out
inc
and
inc
int
popf
insl
jnp
push
mov
xchg
and
dec
sbb
sbb
das
bound
xchg
xchg
dec
jne
sbb
inc
xchg
stos
xchg
pop
cmpsl
jae
into
xor
xchg
jl
dec
leave
mov
push
mov
mov
stos
enter
addb
cmc
xor
cld
loopne
xor
enter
iret
cmpsl
ficoms
mov
sub
xor
scas
xlat
stc
or
jbe
and
dec
test
add
idivb
ficoms
daa
rorl
out
ljmp
push
das
mov
arpl
jae
ja
and
out
into
mov
pop
or
les
lods
ja
add
xchg
mov
fs
mov
scas
mov
xchg
test
xor
adc
cmpl
add
cmpsb
dec
mov
jecxz
fs
jmp
xchg
mov
mov
int
pop
hlt
fldt
lock
jge
xor
pop
nop
ja
test
xchg
scas
mov
movsl
mov
bound
push
sbb
in
leave
push
and
adc
in
cli
insl
imul
sbb
pop
in
cmp
mov
inc
insl
je
or
scas
inc
fsincos
cmc
or
mov
test
mov
or
jnp
outsl
sbb
or
jb
fwait
mov
push
xchg
push
cwtl
cli
ret
repnz
outsl
and
int
stc
push
movsb
mov
addr16
je
push
and
inc
pop
das
pop
addr16
or
mov
jmp
mov
andl
fcomip
xchg
jge
push
mov
push
jl
jae
mov
test
out
mov
or
bound
fnsave
mov
loopne
cmpsl
stos
sahf
xchg
out
loop
sub
jge
or
mov
xchg
xor
ret
bound
icebp
adc
mov
mov
jg
pop
lahf
lret
pop
add
xor
arpl
mov
push
xor
insb
enter
flds
sbb
int
push
mov
cmovs
inc
jo
in
loopne
adc
jl
hlt
adc
pop
sub
loope
cltd
inc
sbb
popf
push
pop
mov
movhps
mov
insb
cmp
lods
push
xor
jae
sbb
pop
cli
inc
add
daa
mov
scas
mov
cmp
mov
jg
test
sar
and
dec
pusha
xchg
cmp
shrb
in
pop
fiaddl
cmp
mov
addl
xchg
push
jmp
lret
hlt
mov
sti
orl
out
outsb
inc
xchg
das
cwtl
pop
das
test
push
shll
cmp
subb
pop
fisubs
mov
js
mov
test
orl
lods
into
pop
dec
les
outsb
pop
pop
testl
clc
out
jns
jl
out
out
mov
and
scas
sub
adc
cmp
push
bound
arpl
je
lret
jg
fwait
addb
lret
xchg
out
push
out
call
pop
cmp
adc
inc
sahf
xchg
jl
sub
pop
lahf
pop
and
out
leave
test
jl
lock
test
xchg
lods
rcrl
and
mov
shrl
cmp
sub
mov
xor
jl
insl
cmp
xchg
and
add
ja
cli
and
addr16
lods
clc
fisttpl
jbe
mov
pop
flds
ret
xchg
push
xchg
aam
xor
add
jb
add
mov
in
dec
mov
inc
push
cli
sub
sub
and
xchg
or
pop
mov
inc
and
jb
mov
lahf
movsl
and
lea
in
jae
lds
mov
lods
or
cmp
movsl
in
nop
fistps
mov
das
clc
push
cld
dec
ret
add
adc
pop
sbb
aaa
inc
push
in
loope
mov
shll
sub
js
jb
xchg
cmp
or
mov
loope
popf
test
in
pop
jno
mov
orb
movsl
es
int
sub
push
dec
mov
stos
arpl
jne
loop
jo
jp
adc
pop
decl
inc
ficomps
push
lods
out
enter
sub
out
xor
out
push
neg
insl
push
sbb
nop
sbbl
cmp
sub
cli
pop
mov
gs
enter
inc
stc
xor
sub
mov
mov
add
mov
daa
lods
ja
or
push
lods
mov
in
cwtl
inc
jp
push
mov
xor
aad
sahf
daa
shl
ljmp
shrb
test
es
add
popa
mov
out
or
mov
mov
pop
sbb
adc
mov
cs
jg
pushf
outsl
jo
test
cmp
je
mov
push
dec
mov
out
adc
into
pop
mov
mov
iret
xchg
pop
xlat
movsb
test
repz
cld
push
dec
and
shlb
xor
or
jae
or
sub
cmp
pop
insl
xchg
je
add
jmp
test
xchg
out
xchg
gs
mov
mov
sbb
rcrl
xchg
and
rcll
push
adc
mov
push
cmc
out
ljmp
in
lods
fucomp
jg
ss
roll
mov
mov
mov
data16
and
lahf
xchg
xchg
xchg
iret
add
pop
imul
dec
test
sbb
push
cmp
jb
sbb
nop
ret
cmp
cs
adc
rcll
inc
aas
cmp
rorb
out
pop
mov
dec
stos
xlat
mov
or
or
ret
fldenv
mov
sbb
mov
inc
es
adc
xchg
hlt
ret
or
mov
mov
inc
int
sub
movsb
push
shlb
int3
pop
cmp
or
jmp
je
cmp
int3
pop
dec
sub
mov
int3
xlat
in
or
sub
dec
dec
or
xchg
xchg
outsb
push
mov
mov
push
movsb
test
mov
shlb
aas
pop
jo
cmp
sahf
lods
nop
lahf
ds
call
rcrb
or
jg
push
mov
sti
data16
les
xchg
sbb
lret
dec
jns
popw
data16
mov
push
shl
daa
lret
adc
jmp
loop
push
leave
and
jge
fnstsw
push
push
xor
jb
jle
mov
ljmp
in
dec
sbb
js
int3
pop
mov
shlb
ss
inc
leave
icebp
test
mov
mov
xchg
icebp
fnsave
push
cmp
sbb
sbb
push
jae
pop
inc
cmp
clc
test
push
pop
cltd
push
mov
adc
and
sub
daa
fld
sti
outsl
popf
das
mov
mov
mov
adc
add
inc
rcpps
bound
inc
adcl
sti
xchg
outsl
push
sysenter
popa
inc
addl
addr16
in
pusha
xor
mov
dec
daa
xor
inc
leave
cmp
dec
jmp
sbb
jo
scas
repz
sbb
xchg
add
xor
inc
mov
xchg
cmp
iret
mov
mov
fcmovnbe
imul
dec
push
inc
test
xchg
aaa
dec
js
jnp
pop
push
cmp
ret
popf
sbb
or
xchg
int3
movsb
outsb
cmpsb
xchg
cmpsl
orb
dec
jp
lea
add
inc
pop
test
aaa
cld
ds
dec
inc
push
aas
pop
sahf
xchg
pushf
insl
or
aaa
aas
jmp
jnp
out
aam
sub
lahf
mov
mov
out
mov
test
ljmp
xor
aas
out
out
sub
inc
cmovns
fwait
dec
cwtl
ret
pop
pop
mov
test
xchg
pop
push
pusha
jp
cmpsl
dec
outsl
lret
xor
ljmp
sub
xorb
ds
fiadds
out
cwtl
cmp
mov
jno
xor
jb
out
roll
and
push
add
es
scas
and
dec
pop
lret
sahf
pop
lret
pusha
repnz
ret
cmpsb
xchg
inc
push
in
pop
pushf
mov
xchg
mov
outsb
ret
add
or
pop
mov
jb
jecxz
cmp
fbld
mov
mov
adc
das
jl
and
jle
lds
pop
inc
ja
jnp
aam
xor
int3
popa
push
movsl
cmpsb
pop
dec
inc
push
and
mov
pop
scas
cmc
ret
aam
enter
mov
rorb
lea
cmc
das
or
xor
sbb
or
xchg
xor
fists
sub
lret
adc
ret
jle
stos
mov
into
cmp
add
cli
mov
mov
mov
mov
shll
push
dec
add
mov
pushf
jnp
mov
stos
push
push
repnz
mov
push
lcall
pushaw
jae
jb
adc
scas
clc
mov
movsb
push
pop
xchg
xchg
lcall
pop
hlt
push
sub
int
cld
nop
push
pop
add
push
imul
and
mov
mov
mov
loop
push
bound
mov
movsl
ret
add
dec
or
xchg
pushf
jmp
xchg
pop
sarb
loopne
arpl
scas
mov
jnp
jle
push
imul
jp
inc
test
inc
sahf
xchg
stc
jne
imul
iret
hlt
leave
lods
jp
imul
mov
push
jl
xchg
dec
psubusb
movsl
jl
jo
and
pop
aaa
mov
ja
sbb
cmpsl
sub
out
xchg
push
addr16
or
inc
mov
cmp
add
clc
jmp
adc
adc
pusha
jmp
dec
setp
divb
pop
sub
pusha
lahf
xor
sub
cmpsl
sbb
or
or
add
lcall
xlat
loop
pop
fiadds
repnz
pushf
jmp
mov
aad
and
aas
ljmp
add
popf
lock
inc
cmp
mov
push
jno
popa
adc
xchg
in
iret
mov
js
cmc
jp
inc
lret
lahf
mov
test
data16
sub
mov
mov
and
sub
cmp
stos
xor
ljmp
mov
inc
mov
pop
xchg
inc
or
jbe
in
dec
jne
enter
mov
sbb
mov
xchg
cmp
fisubrl
xchg
test
sbb
jno
sub
in
pop
xorl
cmp
mov
mov
rcrb
stos
insb
loopne
mov
shlb
dec
push
cmp
push
fistl
repz
cwtl
mov
stos
dec
repnz
mov
out
mov
pop
or
jae
out
sahf
movsl
xor
or
mov
mov
mov
mov
mov
mov
add
pop
cmp
dec
ds
push
imul
cltd
into
test
mov
stc
outsb
or
dec
sub
cs
ds
push
imul
cltd
into
test
mov
stc
outsb
or
dec
sub
cs
ds
push
imul
cltd
into
test
mov
stc
outsb
or
dec
sub
cs
ds
push
imul
xor
into
flds
es
popa
push
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmpsb
insl
es
dec
push
pop
int3
xchg
inc
push
xor
and
xchg
flds
xor
popf
ss
es
dec
push
pop
jbe
sub
inc
imul
mov
ss
fs
push
push
inc
jbe
and
inc
pop
mov
cmpsb
fdivp
mov
test
loop
leave
idiv
test
or
std
in
cld
lods
out
jne
aaa
aaa
movsl
mov
leave
xlat
fdivrp
push
jb
xorl
mull
inc
or
fdiv
xor
ret
adc
iret
popf
or
or
sbb
fidivrs
gs
daa
push
sbb
add
in
push
fnstsw
xor
in
idiv
shlb
add
lea
xorb
ljmp
jns
cwtl
cmpsb
or
outsb
push
push
xchg
mov
jb
lret
call
adc
sahf
in
outsb
dec
push
add
roll
xor
mov
into
xchg
or
scas
cwtl
scas
or
dec
dec
test
jecxz
or
addb
fwait
imul
pop
jbe
cmp
inc
add
in
cmpsb
in
aam
divb
pushf
inc
insl
bound
jp
dec
cmp
popa
and
adcb
enter
loop
icebp
imul
jae
jns
das
in
lret
cwtl
out
test
fistpll
ljmp
jne
sbb
push
cmp
inc
sbb
xchg
int
lods
out
popf
ss
es
dec
push
pop
jbe
cmp
inc
sbb
xchg
int
lods
out
popf
ss
and
lret
add
ret
mov
mov
aad
mov
pop
mov
enter
jo
push
pop
push
adc
jmp
push
pop
mov
mov
and
sbb
and
out
pop
dec
decl
outsb
jg
push
fsubrs
pushf
push
and
js
outsl
xchg
jb
imul
cltd
or
lock
rcll
mov
int
aaa
sub
mov
add
cmp
mov
pop
popf
mov
jb
ret
fimull
sti
push
mov
mov
data16
push
aas
sti
pushf
sub
cmpsl
ja
call
mov
or
or
cltd
push
cmpsb
xchg
dec
cmp
clc
push
xor
push
sub
cmp
out
sub
movsl
jle
mov
ljmp
or
outsb
push
repz
mov
in
loope
inc
std
xor
fmul
xor
jo
jns
jo
pop
mov
dec
mov
pop
test
jle
cmp
jae
test
mov
push
out
pop
pop
xor
pop
dec
add
gs
lcall
push
loope
push
neg
out
fidivl
call
dec
pop
cmp
aad
push
push
subl
and
movntps
pop
shlb
sbb
or
lods
test
aam
lds
push
outsb
and
insb
jne
jo
cmp
jge
sub
lds
cwtl
or
mov
adc
fiadds
push
test
fldenv
and
fwait
mov
lds
les
aam
mov
mov
inc
test
ret
lds
adc
fs
sbb
scas
sub
lret
repnz
mov
and
imul
inc
mov
sbb
fwait
and
jl
clc
jne
out
jmp
xchg
xor
scas
cmp
add
loope
dec
and
mov
jnp
jb
pop
pop
adc
jb
xchg
popa
sub
add
outsl
inc
adc
insb
arpl
fdivrl
mov
cmp
xchg
sub
jae
and
cmovns
repz
stos
xchg
js
imul
cld
dec
xchg
sub
outsb
mov
sub
daa
jg
shlb
inc
int
add
jl
mov
cmp
lret
je
insl
xlat
fcmovu
mov
jp
in
mov
into
adc
arpl
jnp
stc
sub
cmp
rcl
push
mov
sbb
inc
fildl
loope
xorl
dec
popa
movsl
fimull
jne
fs
or
hlt
inc
pop
sbb
dec
push
xchg
clc
dec
pop
pop
sbb
adc
ret
subb
cmp
xor
cld
jno
cmp
in
pop
jge
addr16
repz
js
movsb
dec
cltd
lret
out
stos
sbb
leave
into
in
or
and
jmp
or
xchg
sbb
add
dec
add
cmp
cld
orb
dec
dec
lcall
mov
inc
shlb
dec
cmp
inc
xchg
mov
and
mov
repz
push
imul
cmp
inc
ret
pop
add
hlt
adc
sbb
into
adc
and
int3
dec
mov
cltd
jle
xor
cld
ret
sbb
mov
ja
xchg
jns
inc
or
sub
lds
adc
sbb
mov
scas
fadds
push
movb
xor
pop
lods
push
repz
repz
test
shlb
out
adc
xlat
cmp
pop
std
jne
mov
mov
fdivl
cmp
cmp
adc
fistps
mov
xchg
or
fwait
mov
and
dec
adc
inc
orb
icebp
ficompl
sbb
insl
in
fstl
lahf
cmpsl
enter
dec
inc
mov
cld
in
orb
mov
lods
push
sbb
insb
int
push
test
pop
cmpsb
fisttps
popf
imul
into
leave
xchg
push
or
mov
testb
std
inc
lods
mov
loopne
push
inc
leave
incb
dec
sub
arpl
bndstx
sbb
and
xchg
xlat
enter
pop
xlat
imul
xor
mov
aad
lret
sub
cmp
push
out
js
cmc
subb
jo
lods
or
dec
dec
movsb
out
insl
test
xchg
call
lahf
out
loop
push
inc
stc
popa
adc
push
in
dec
testl
out
fbstp
sub
insb
das
out
xchg
xlat
jp
add
std
nop
psubq
stos
jo
mov
fimuls
leave
xchg
scas
jmp
sbb
pop
pushf
mov
test
mov
lea
xor
in
outsb
jnp
sbb
movsl
sbb
jmp
cld
movl
fisttpll
push
pop
sbb
stos
mov
clc
push
rolb
dec
leave
xor
fldcw
pop
push
jo
popl
cltd
mov
fbld
ja
sbb
in
fstpl
or
mov
push
sub
jns
lret
mov
ret
mov
adc
pop
adc
mov
pop
scas
sbb
loope
mov
mov
mov
nop
cmp
mov
fdivl
mov
pop
lret
sub
inc
ljmp
pusha
divb
sbb
and
ret
cs
imul
adc
jno
cmc
aam
bound
xchg
xchg
jbe
out
mov
stc
nop
xchg
jge
and
and
in
in
mov
inc
mov
daa
mov
stos
dec
fnsave
enter
das
inc
xor
roll
mov
mov
hlt
cmp
fistps
ljmp
cmpsl
mov
outsb
test
mov
dec
adc
xlat
addl
leave
cmp
pushf
mov
dec
inc
adc
inc
pop
cmpsl
sbb
dec
mov
pop
jp
aad
or
stos
adc
jmp
xchg
into
arpl
mov
mov
mov
xchg
pop
mov
mov
in
xchg
lea
dec
loope
dec
sub
and
ret
insl
out
pop
xor
inc
push
ret
sbb
sub
loopne
push
icebp
insl
pop
and
outsb
pushf
movsl
in
inc
data16
xchg
inc
mov
in
inc
xor
lds
std
outsb
adcl
dec
movsl
outsb
pop
mov
dec
out
mov
repz
cld
sbb
mov
scas
cli
lods
sub
xor
mov
int
dec
push
or
mov
sahf
sub
xchg
cltd
adc
enter
pop
adc
mov
aam
jo
mov
popf
sub
jle
xchg
mov
aaa
cmp
sarl
sbb
sub
adc
pushf
sbb
cmp
idivl
sbbb
mov
mov
pop
cmp
lret
push
imul
jle
mov
adc
dec
loopne
movb
jp
push
addl
lds
mov
sbb
lahf
mov
scas
cmc
stos
pop
mov
push
push
sbb
int3
test
mov
jnp
jmp
pop
imul
pop
inc
imul
cmp
nop
loope
lret
jmp
popf
add
lock
jns
pop
loop
aad
mov
sbb
adcl
shll
and
sub
ss
add
cli
mov
push
push
or
add
data16
ja
shlb
adc
jo
in
sub
pop
and
ret
and
push
loopne
gs
mov
sbb
fldenv
jge
popf
mov
sub
loop
mov
adc
add
fsubl
loopne
fadd
pop
outsl
mov
jecxz
lret
fisttpl
cwtl
mov
mov
cltd
mov
xor
ss
sbb
mov
pop
and
jge
sub
inc
sub
pusha
cmp
pop
imul
mov
push
lock
inc
push
jmp
push
stos
mov
test
inc
outsb
shrb
sub
xchg
cmc
nop
cmp
rorb
icebp
dec
mov
mov
xchg
xlat
inc
add
hlt
adc
add
out
adc
es
fsave
incl
mov
dec
push
jnp
stos
jae
fwait
hlt
add
or
pop
fs
outsl
xchg
dec
sub
push
hlt
or
mov
leave
cmpsl
adc
xchg
rolb
scas
test
adc
jns
mov
sbb
insl
es
aaa
aas
fisubrs
fbld
jae
mov
cmp
leave
imul
iret
movsl
stc
mov
pop
pop
frstor
mov
das
pusha
xchg
inc
cmc
inc
push
push
movsl
shll
and
fwait
jnp
cmp
out
or
rclb
cltd
scas
and
push
out
inc
aam
rorl
outsb
neg
sbb
and
jbe
bound
sbb
pop
test
inc
or
mov
mov
sbb
xorl
adc
mov
xor
mov
jg
rcll
test
cmpsb
scas
add
jb
je
pop
xchg
inc
sbb
pushf
cmpsl
movsb
mov
data16
push
nop
test
sub
xchg
leave
mov
jp
cmp
cmp
popa
pusha
scas
mov
sub
inc
xchg
sti
cmpl
ds
inc
jae
jge
in
xchg
pop
out
ja
mov
mov
iret
adc
iret
imull
or
mov
out
in
lock
sbb
xchg
push
add
inc
adc
fists
out
pusha
push
pop
jge
hlt
cmp
push
stos
pop
arpl
test
mov
add
out
popf
fisttps
adc
stc
mov
xor
rolb
sub
mov
js
ja
repnz
hlt
insb
dec
push
push
mov
xlat
cmp
add
jg
mov
fnstcw
in
ret
call
lods
leave
call
or
std
ljmp
in
enter
mov
jo
es
fcoms
adc
cwtl
sbb
push
or
push
aam
add
sti
mov
pop
xchg
testb
call
mov
cli
xor
gs
rcrl
inc
dec
jnp
mov
je
mov
push
cmp
in
call
mov
xchg
je
sbb
cmc
jne
xor
mov
insl
enter
pushf
pop
imul
and
fdivs
pop
adc
cwtl
dec
insl
lcall
rorb
jecxz
or
iret
adc
jg
push
xor
push
loope
sbb
jns
sub
sub
mov
or
es
pop
or
daa
mov
negl
or
cmp
jmp
adc
mov
daa
jb
jge
in
sub
mov
icebp
mov
fs
loop
or
push
dec
js
mull
fisubrl
mov
ds
inc
fnstenv
inc
aas
or
adc
les
push
push
sub
sbb
lods
fwait
jle
push
inc
pop
push
cs
out
pop
fs
loop
xchg
dec
arpl
cmpsl
lret
lahf
xchg
ds
insb
test
fcomps
iret
xor
or
inc
mov
in
sahf
push
mov
xchg
jg
push
xor
or
bound
inc
nop
in
out
push
pusha
push
jb
adc
sub
loope
dec
and
mov
loop
js
lahf
in
cwtl
jbe
adc
out
jg
sub
push
lcall
push
and
dec
add
jmp
in
mov
aaa
and
fbld
mov
sub
aaa
push
pop
repnz
sub
popa
or
xor
push
stos
push
and
and
cmpsl
rcl
in
mov
mov
out
outsl
cmp
fmuls
pusha
xor
mov
and
mov
pop
movsl
or
cmp
and
mov
int3
sub
lcall
xor
pop
cmp
leave
cmp
loope
fidivl
cli
movsl
cmc
movsl
jg
aad
push
pushf
js
or
jecxz
mov
fwait
repnz
cmp
sub
mov
test
cmp
leave
scas
sbb
fnstenv
push
data16
xchg
out
mov
ret
add
add
cmp
call
mov
adc
push
daa
clc
jnp
cwtl
je
jp
sbb
jno
push
mov
out
mov
cmpb
shrl
lods
jns
cld
jg
jecxz
ja
outsl
sbb
daa
jno
mov
in
push
adc
ljmp
adc
push
jle
icebp
out
mov
pop
lret
mov
sbb
pop
int
repnz
adc
ds
das
out
dec
add
inc
xchg
dec
into
jecxz
leave
nop
and
sbb
in
push
cmp
and
clc
sub
add
aas
sbb
jl
movsb
xchg
stos
mov
add
xchg
stos
jmp
push
push
dec
jae
pop
fsubrl
inc
mov
mov
aam
xchg
in
fsubl
xor
adc
mov
lahf
ja
mov
or
insb
in
cmp
pop
push
or
xchg
pushf
cmp
imul
sbb
scas
das
enter
sbb
jns
daa
push
imul
push
rcrb
or
add
js
lret
mov
out
sbb
ret
outsb
xor
cmp
adc
cmp
inc
push
xchg
fldt
pushw
adc
scas
ljmp
pop
or
mov
mov
ja
das
mov
dec
popa
arpl
test
in
sbbl
push
xchg
jp
rcll
es
sbb
jmp
xor
mov
or
loopne
xor
cld
subl
in
in
and
adc
cs
xchg
or
fnstcw
add
or
adc
xchg
pop
push
pop
ja
stos
pop
mov
bnd
and
ljmp
ss
or
decl
and
jp
sbb
and
dec
add
movsl
pop
dec
daa
clc
add
adc
int
adcb
mov
adc
fstpl
div
bound
mov
adc
xchg
xlat
push
sbb
mov
stc
mov
or
inc
mov
sub
and
out
enter
xor
push
jecxz
mov
push
loop
mov
sbb
inc
dec
push
es
arpl
push
scas
lock
leave
pop
xchg
mov
xchg
mov
cwtl
dec
xchg
adc
jle
pop
in
and
cmpsb
cmp
rorl
je
xor
call
clc
loopne
or
fisubs
stc
sub
bnd
pop
mov
cmp
add
dec
xchg
outsl
testl
cmp
mov
fimuls
ja
aaa
adc
pushf
inc
fstpt
mov
leave
scas
fisubs
lahf
sahf
popa
adc
cli
or
loop
aam
test
mov
and
cmp
or
xchg
cmp
pop
ror
mov
and
jmp
sub
lods
cmpsb
push
into
test
cmp
jo
fidivrs
sub
rcll
and
sbb
push
arpl
popa
jo
insl
into
rcll
xchg
int
js
mov
adc
pop
fisttps
ret
aas
andb
sub
xor
lcall
outsl
flds
rcrb
gs
cmp
add
push
pop
and
add
in
and
xor
mov
adc
aad
lods
into
cmp
pop
sbb
lcall
lds
mov
out
ret
and
add
adc
sub
int
cs
dec
and
inc
adc
push
and
ljmp
insl
inc
ljmp
ds
sti
xchg
mov
rorb
push
jg
test
mov
lcall
in
scas
ljmp
or
mov
roll
xchg
maxps
cmc
dec
pop
daa
sti
mov
mov
outsl
mov
and
push
sub
icebp
cwtl
scas
enter
jno
js
and
shlb
push
das
shlb
scas
leave
lock
test
sbb
mov
test
insl
push
in
inc
xor
mov
cmc
out
out
fidivrl
xchg
insb
repz
jno
add
scas
loope
les
icebp
sub
pop
in
or
and
rol
xor
hlt
shll
paddd
and
lret
enter
mov
mov
cmpsl
int
jp
add
inc
mov
sub
adc
insb
sub
les
stc
pushf
cmp
xor
jo
rorb
cmpsb
jp
fimuls
dec
push
inc
fcomi
add
adc
push
cltd
inc
adc
xchg
popa
popa
scas
addr16
add
insl
jge
mulb
daa
lret
cmp
es
and
into
stos
ret
xchg
jp
in
fisubrl
xchg
push
dec
mov
jne
dec
ret
pop
lods
mov
xor
cmp
inc
sbbb
lret
push
test
pop
ss
js
out
aas
sub
and
or
aad
shr
xor
jo
cmpsb
push
movsl
iret
add
jecxz
jmp
lea
mov
push
icebp
cmpsl
shrl
jne
rcl
in
sar
mov
ja
int3
std
or
push
aaa
test
ljmp
or
testl
jae
inc
jnp
popa
jecxz
in
adc
icebp
imul
push
popf
mov
jg
jbe
sub
mov
xchg
leave
mov
fistl
adc
xlat
in
jmp
add
pusha
dec
push
leave
imul
push
adcw
mov
dec
mov
cmp
cmp
jge
jecxz
mov
icebp
test
out
mov
mov
rorb
ret
fwait
popa
test
addb
aaa
icebp
sbb
push
xchg
aas
sarb
rcr
mov
arpl
inc
outsl
mov
fistpl
mov
xor
xchg
lret
call
stos
js
mov
mov
fdivrs
or
ja
mov
out
dec
stos
jne
aad
and
js
mov
inc
mov
les
lods
inc
jmp
fisubrl
pop
add
push
stc
lahf
movsl
rcr
push
stos
cld
dec
pushf
adc
and
orl
orb
bnd
sub
xchg
jp
xor
inc
add
mov
cmp
mov
in
cwtl
aam
or
pushf
out
outsl
or
stos
test
clc
mov
cld
ret
mov
fidivs
sub
ret
mov
enter
cs
fwait
outsb
cmpsb
fimuls
and
mov
xor
movsb
push
xor
call
or
inc
mov
pop
and
addl
scas
pop
adc
sahf
mov
jno
jp
imul
inc
adc
dec
push
insb
scas
sub
mov
scas
pshufw
inc
dec
insl
sbb
lds
push
pop
sti
add
mov
xchg
cltd
dec
iret
mov
lock
push
inc
test
push
or
dec
add
adc
sub
pusha
pusha
mov
out
shrb
jne
jp
and
mov
push
or
mov
icebp
in
push
insb
call
out
fldl
das
cs
jge
sub
cmpsl
xchg
mov
lods
hlt
bound
pop
aam
addr16
and
sahf
add
and
leave
mov
jae
mov
inc
popa
add
xor
pop
pop
es
leave
loopne
add
mov
bts
aaa
js
add
dec
push
mov
and
pop
dec
sub
les
lods
push
and
push
pop
push
dec
insb
aas
push
jp
popa
rcll
pop
push
cmpsl
fidivl
in
mov
xlat
push
lahf
imul
mov
iret
nop
std
sti
into
mov
pushf
mov
incl
add
or
enter
test
mov
enter
dec
pop
scas
mov
orl
adc
add
mov
pop
cld
hlt
and
insb
aam
repz
icebp
xchg
push
add
out
lock
pop
faddl
je
mov
cmpl
fprem
mov
push
les
mov
push
ljmp
inc
mov
fiadds
rcll
inc
test
lahf
or
or
into
lods
push
aas
xchg
test
sbb
mov
sbb
loope
sahf
jge
xchg
les
xor
js
test
jg
xchg
sbb
fwait
lret
lcall
dec
and
and
xor
push
lds
movsb
jb
punpcklbw
adc
jmp
int
lods
jbe
stc
scas
sub
outsb
or
dec
and
jg
outsl
add
dec
testb
jmp
xor
cld
pop
mov
lret
and
add
rolb
jnp
mov
jl
adc
mov
push
mov
movsb
movsb
jbe
jge
dec
push
pop
jbe
cmp
inc
sbb
xchg
int
lods
out
popf
ss
es
dec
push
pop
jbe
cmp
inc
sbb
xchg
int
lods
out
popf
ss
es
dec
push
pop
jbe
cmp
inc
sbb
xchg
int
fdecstp
lods
out
mov
cltd
aaa
imul
pop
jbe
cmp
inc
fnsave
int
stos
andl
stc
mov
mov
lret
jmp
imul
cmp
imul
mov
mov
mov
mov
jns
dec
cmp
jmp
jns
imul
mov
mov
jmp
and
pop
push
adc
mov
popf
stc
leave
ljmp
cmp
in
or
cwtl
bound
jl
pop
xchg
cltd
xchg
shll
and
leave
mov
arpl
cmpsb
cmp
dec
cmp
pop
rcll
imul
and
sub
sub
jns
inc
jne
hlt
sbb
mov
fsubrs
in
cld
divb
dec
jns
mov
imul
inc
movsb
lock
mov
jmp
int3
and
jp
pop
pop
adc
mov
push
lahf
or
push
mov
add
cltd
pusha
sbb
jns
mov
dec
jns
xchg
and
mov
mov
jmp
dec
cmp
sub
dec
or
das
test
lock
sahf
lret
mov
imul
pop
sub
pop
or
cmc
pushf
in
icebp
mov
test
scas
lret
or
sub
pop
pop
jnp
cmp
fbld
insb
cmp
cmpsb
fdivl
leave
mov
cltd
jmp
dec
cmp
sub
dec
or
imul
mov
mov
jmp
dec
cmp
sub
dec
or
imul
imulb
sub
dec
bound
dec
pop
dec
dec
pusha
lods
cmp
fld
adc
sub
shr
out
push
cld
flds
inc
mul
mov
popa
popf
addr16
lds
ret
pusha
jae
in
jb
cmp
xor
jg
es
xchg
add
add
jno
insb
xchg
mov
les
insb
popa
int3
lcall
insl
mov
mov
flds
xor
scas
ss
xchg
adc
je,pt
inc
pushf
aas
mov
dec
push
fsub
adc
repnz
jmp
mov
cmp
mov
lock
sub
inc
mov
pop
xchg
int
imul
add
ljmp
jmp
mov
out
push
pop
aad
xchg
cs
xchg
push
pop
pushf
push
lock
mov
xor
mov
dec
sbb
movl
adc
jae
psubd
sahf
adc
mov
and
mov
mov
aas
inc
daa
adc
sahf
lahf
out
mov
mov
mov
outsl
scas
imul
add
fucomi
lds
xchg
movsb
lret
lods
outsb
in
out
jmp
cli
dec
push
inc
shlb
sbb
xor
lahf
rclb
pusha
push
sbb
xor
xchg
inc
adc
mov
jbe
xchg
lods
sub
sbb
in
rcrl
test
rcll
inc
les
cs
pop
dec
aam
ss
push
push
fisttps
ret
lods
mov
xor
clc
leave
loopne
xchg
jmp
xchg
xchg
fistpll
repnz
adc
outsb
ds
cmpb
push
aaa
data16
xor
add
sbb
in
bound
ds
ds
movsb
inc
xor
loope
xchg
enter
add
rcrl
mov
cmc
and
outsl
in
filds
inc
mov
outsl
subl
loop
das
push
dec
mov
sub
stos
sub
xchg
leave
pop
jge
stos
fmul
lahf
jge
cmp
cwtl
mov
insl
jmp
insl
mov
and
jg
add
jns
test
iret
jnp
outsb
sbb
pop
rol
hlt
xchg
loope
fistpll
and
cmp
arpl
add
sbbb
lock
leave
rorb
push
jnp
and
loop
imul
add
jmp
mov
in
aaa
aaa
cmc
pop
in
sbb
cmp
pusha
pop
jp
fstl
scas
insl
out
jbe
jge
loope
into
in
popa
scas
mov
dec
adc
stos
pop
repz
push
shr
into
sahf
cmpsb
sbb
cmp
shlb
outsb
fimuls
push
pusha
pop
or
mov
fdiv
clc
cmp
das
push
jp
push
lea
cmp
mov
xchg
out
jae
faddp
and
jl
pop
addr16
aas
iret
fucomip
add
aad
push
jl
fidivrl
xor
mov
push
mov
test
mov
imul
push
test
or
jp
add
xor
rep
popa
aaa
xor
sub
dec
xchg
fucomi
mov
lahf
dec
and
shll
shl
fwait
push
mov
adc
sti
add
imul
dec
mov
dec
imul
cmp
jno
lock
mov
mov
sbb
scas
sbb
push
sbb
adc
dec
push
sub
nop
daa
leave
jmp
fnstenv
xchg
jecxz
xchg
mov
mov
xor
in
pushf
pop
mov
shlb
xchg
jge
jbe
in
or
hlt
test
aas
test
insl
jecxz
or
gs
xchg
sbb
xor
push
push
std
add
xor
jae
fwait
mov
fs
rcl
ret
outsb
out
fcoms
inc
mov
rcl
mov
int3
ret
jno
cmp
push
jle
icebp
lods
jbe
ja,pn
and
out
int
ret
pop
ficoms
pop
in
adc
jmp
mov
call
mov
imul
or
add
nop
jnp
mov
xchg
inc
sub
icebp
addb
sbb
cs
sbb
faddp
lods
xlat
mov
loop
fs
sarl
sub
or
sahf
fimull
mov
dec
outsl
mov
sub
scas
cs
xorl
add
jns
addr16
imul
cmpsb
rcll
push
xor
dec
ficompl
jnp
xchg
push
clc
mov
jne
popa
or
inc
test
cmp
mov
xchg
stos
push
imul
mov
inc
imull
dec
push
ljmp
push
cli
lcall
mov
inc
clc
cmpsl
roll
ffreep
or
sub
dec
mov
xchg
rcll
mov
ljmp
add
loopne
sub
roll
mov
or
andl
test
cmp
imul
mov
add
xlat
scas
das
add
lods
pop
inc
pop
xlat
je
dec
inc
sub
cmp
pushf
dec
fisubs
sbb
mov
jae
xchg
cmpsb
aad
pop
jmp
mov
psadbw
mov
lods
push
cmpsb
mov
adc
filds
std
fmuls
mov
cmpsb
adc
in
aas
jl
adc
lods
je
call
gs
addr16
in
or
ficomps
imul
adc
fisttps
push
mov
aam
dec
nop
iret
fcmovnbe
cs
subl
pushf
cmp
jne
xchg
imul
rclb
jo
push
push
pop
mov
sbb
fisubl
pushf
rorb
test
lret
mov
mov
inc
mov
jg
cltd
popf
mov
xchg
sbb
pop
mov
fcoml
push
stos
lret
xor
ss
out
mov
dec
mov
movsb
mov
jp
jge
js
test
mov
in
mov
mov
pop
sahf
dec
ficompl
clc
cmp
xor
in
movsl
pcmpeqd
add
jne
rol
sti
adcb
sbb
inc
and
ret
daa
cmp
mov
mov
ja
call
dec
ja
sub
add
mov
fwait
cwtl
jle
enter
push
sti
sub
inc
dec
mov
mov
scas
inc
iret
lods
js
sbb
jb
in
mov
xor
mov
imul
jne
inc
cmp
lcall
bound
pop
fmuls
les
jmp
js
sbb
cli
dec
out
adc
seto
cmp
out
das
arpl
sahf
ret
scas
scas
cmp
mov
push
mov
pop
cmpsl
out
lods
xchg
and
inc
or
fiaddl
mov
lods
add
mov
jne
es
mov
add
sbb
out
ja
int3
adc
cltd
ret
stc
add
lock
fisttps
imul
jb
pusha
xor
push
or
int3
adc
inc
pop
test
jecxz
xor
sub
xchg
arpl
xchg
and
pusha
data16
or
ret
xor
push
xor
sub
inc
adc
xchg
adc
out
leave
push
out
push
add
popl
sbb
and
push
sbb
sbb
adc
pop
inc
aad
cmc
and
xor
mov
xchg
xchg
and
nop
popa
loope
andb
ret
bound
add
aad
mov
and
movsb
add
dec
mov
cmpsl
les
fldl
and
lcall
lods
inc
xchg
bound
cld
dec
fs
scas
jp
popf
pop
jne
mov
movsb
inc
cmpsl
inc
push
fcmove
cwtl
jmp
shrb
cmp
or
fdivrp
push
repz
push
movsl
pushf
inc
mov
adc
inc
mov
stos
outsb
or
mov
xchg
sbb
cmp
mov
xor
test
jo
movsl
mov
or
enter
inc
subb
add
fwait
add
and
mov
push
arpl
push
mov
ret
mov
mov
cmp
mov
pop
lds
jle
rolb
mov
in
inc
jecxz
adc
pushf
jg
insl
fdivrs
mov
adc
inc
jle
popa
outsb
dec
fsub
dec
jge
leave
xlat
js
les
mov
fildl
hlt
add
loopne
cmp
dec
leave
mov
dec
negb
jp
orl
cmp
or
test
push
lds
jp
dec
inc
bound
dec
int3
loopne
add
out
or
inc
sbb
add
add
mov
push
xor
rclb
leave
xor
xchg
mov
jne
inc
xor
jg
mov
mov
rclb
rcr
mov
addr16
adc
cmc
jmp
xchg
fimuls
pop
push
adc
xchg
test
jno,pn
cs
mov
incb
push
xchg
lahf
inc
insl
jg
movsl
je
xor
pop
jmp
inc
shll
test
sbb
xchg
xchg
sub
fistps
or
leave
rcrl
jno
ja
sbb
cmp
lods
test
mov
inc
cmp
xor
cmpsb
scas
inc
fdivrl
jbe
and
pop
pop
xchg
fstl
push
popa
outsb
add
dec
xchg
cmpb
fs
cltd
xchg
test
mov
fnstsw
push
cwtl
mov
lret
out
subb
mov
lahf
mov
dec
push
ss
mov
inc
sbb
shl
push
cmp
test
pusha
mov
mov
mov
jbe
faddl
mov
mov
or
outsb
xchg
dec
xor
push
sub
in
mov
lahf
pop
repnz
aad
sbb
sub
icebp
hlt
mov
in
or
rcrl
add
jne
jns
rorl
xor
push
sbb
xchg
and
pop
jb
sbb
sarb
imul
jecxz
pop
push
dec
std
pop
imul
stos
call
xchg
outsb
scas
aad
out
sbb
mov
loop
mov
add
inc
aas
dec
and
test
shll
mov
hlt
inc
and
or
test
lahf
xlat
mov
ja
add
mov
test
adc
adc
fwait
and
push
mov
inc
inc
jo
repnz
hlt
je
mov
pusha
fisubrl
inc
mov
cmp
xor
outsb
popf
and
fnstcw
aam
sub
jb
and
cmp
add
js
sub
adc
sbb
mov
push
leave
stos
psraw
in
sub
faddl
outsb
adc
mov
inc
sbb
fildl
adc
mov
fsubrl
fstl
dec
or
xchg
xchg
stos
arpl
gs
dec
xor
xor
fcomps
xlat
jo
lock
lahf
mov
or
jl
and
insb
sarb
clc
shll
sbb
loope
mov
and
js
adc
aas
les
sahf
sbb
aad
loope
sbb
rorb
cwtl
jmp
sbb
push
push
inc
or
lods
pop
push
outsb
push
cltd
pusha
mov
repz
jmp
in
aas
and
lods
sub
in
repnz
mov
push
cmp
mov
cmp
fs
ljmp
popf
adc
xchg
mov
and
cwtl
or
sbb
xor
push
mov
in
cmp
cld
pop
inc
sbb
leave
pop
dec
lret
daa
cmpsl
jno
mov
adc
aad
push
negl
jno
or
push
out
loopne
mov
jp
jns
inc
aad
jmp
clc
decl
jo
dec
push
mov
or
je
sub
push
inc
fwait
pop
and
out
aam
ja
rcll
xchg
arpl
andl
dec
cld
daa
stc
das
push
in
inc
repnz
test
push
cmc
sub
pop
xchg
popa
xchg
fldcw
inc
scas
dec
push
loopne
cmpsl
ja
in
daa
mov
mov
sub
aad
cmp
and
mov
inc
out
les
cmp
pop
sbb
mov
push
and
sbb
pop
sub
xchg
fisttps
out
pop
sbb
pop
cmpsb
sub
test
push
pop
scas
sbb
inc
inc
mov
pushf
mov
jno
mov
or
out
push
mov
fadd
dec
cmp
push
dec
lods
push
decb
das
mov
xor
loop
ret
cmpl
test
movsb
pop
push
shll
push
add
inc
push
in
jae
mov
dec
and
cmp
dec
and
xchg
sbb
cmpsb
mov
push
jb
hlt
out
and
dec
mov
jg
loopne
inc
jnp,pn
lock
sub
jmp
loop
ja
xor
scas
or
pop
dec
shlb
add
sub
dec
inc
hlt
pop
jne
out
mov
xchg
dec
xchg
inc
aam
add
inc
add
ljmp
cmpb
test
push
and
int3
ljmp
jmp
loop
test
adc
xchg
in
nop
leave
mov
jns
ljmp
lods
jb
data16
outsb
sti
bound
jmp
dec
mov
sub
dec
jecxz
adc
out
pop
mov
pop
pop
mov
loope
enter
pop
sbb
push
pop
jo
lcall
sub
outsl
arpl
faddl
or
pop
mov
jb
out
ss
rclb
or
iret
in
scas
lods
rcll
mov
xorb
xchg
sbb
aad
jno
sbb
mov
inc
jbe
ja
movsl
sbb
iret
adc
in
xchg
sub
into
mov
fdivrl
add
iret
addl
fisttpll
jbe
jl
pop
inc
and
pop
aam
out
cli
insl
dec
nop
adc
push
sarb
sti
cmp
icebp
xor
and
adc
fcomps
mov
sbb
movsl
push
jle
cmp
lcall
inc
daa
jne
cmp
ud0
pop
divl
pop
test
inc
fsubr
adc
push
jne
sahf
xor
adc
jno
gs
and
ljmp
cmc
divl
pop
push
xor
push
idiv
leave
imul
into
mov
pushl
loopne
and
mov
mov
int3
fstpt
push
or
repz
lods
insb
jbe
mov
loopne
loopne
mov
iret
or
xchg
stc
push
imul
cs
adc
push
jl
sbb
dec
inc
inc
push
push
cltd
fidivs
or
push
mov
xchg
and
subb
outsb
mov
cmp
dec
cmc
jnp
stos
call
aaa
pop
jmp
push
pop
sub
inc
mov
push
jmp
sbb
add
add
dec
fcoms
dec
pop
mov
push
jno
dec
fisttps
jnp
insl
push
and
mov
mov
jbe
int
adc
int3
xchg
mov
dec
xchg
rorb
jnp
adc
xchg
lods
push
inc
mov
cmp
popa
ja
dec
push
icebp
pop
aaa
test
xchg
add
in
aaa
sub
mov
scas
js
sti
and
int3
sbb
insl
outsl
aam
mov
or
xchg
push
std
pop
sbb
out
jmp
sbb
cmp
and
addb
outsb
xor
jmp
pop
push
dec
cmp
cld
sub
and
mov
lret
dec
addl
das
push
mov
scas
sbb
fwait
xor
inc
jg
push
mov
les
negb
push
es
fsubs
ret
out
cmp
xchg
out
jbe
push
cld
xchg
mov
test
pop
lods
inc
lods
movsb
sbb
push
adc
mov
neg
jnp
sub
cmc
testl
cmpsb
dec
fs
pop
mov
call
inc
sbb
add
mov
mov
ret
out
aam
push
mov
shl
mov
dec
mov
mov
jbe
repz
cmpps
pop
scas
addb
scas
stc
dec
imul
outsl
sbb
rorb
lods
add
inc
test
shrl
sub
shl
and
out
repz
nop
loop
shr
jmp
pusha
lods
cmpsb
xor
xchg
push
cs
pop
pop
sub
repnz
sbb
imul
ss
jecxz
int
adc
sub
pop
sahf
jge
inc
mov
xchg
xor
stos
test
mov
into
and
cmpsb
sbb
mov
cltd
mov
scas
xchg
jl
xor
inc
sbb
cmp
imul
test
in
dec
xor
sbb
lret
jno
push
jg
lods
lods
mov
dec
or
fistpl
int3
cmp
or
aaa
pop
sbb
mov
mov
mov
mov
adc
jb
or
inc
inc
push
test
and
jmp
pop
push
sub
fldcw
fcomps
shrl
ljmp
cld
int
sbb
dec
pop
in
fimuls
mov
add
add
out
pop
mov
push
jp
jecxz
decl
sub
das
or
sbb
pop
mov
mov
push
cld
xor
movsl
bound
pop
cli
adc
mov
scas
xchg
in
sub
dec
sub
dec
sub
ss
pop
and
push
loope
imul
sbb
sub
mov
dec
lahf
push
cwtl
pop
mov
cltd
pop
imul
popa
add
mov
in
mov
sbb
cmp
sub
ds
inc
daa
or
test
stos
sbb
inc
adc
pop
inc
add
jne
call
imul
repz
adc
mov
xor
sbb
out
arpl
mov
inc
std
push
push
shll
and
xor
stos
xor
xchg
or
add
dec
pusha
shll
iret
iret
das
add
sub
sbb
test
mov
cmp
fimuls
cmp
and
mov
pop
jle
mov
ss
pop
dec
outsb
arpl
mov
out
mov
adc
leave
test
ret
xchg
push
pop
lret
adc
sbb
fsts
shll
into
lods
enter
mov
mov
loope
cld
pop
imulb
inc
mov
and
add
sti
in
push
add
fwait
mov
repnz
gs
icebp
loope
add
dec
in
inc
sbb
cmp
out
jbe
inc
push
mov
outsl
pop
fisttps
icebp
and
mov
jb
gs
fdivs
fs
loope
push
or
in
push
cmp
fstps
ret
inc
mov
cmp
sub
faddl
xchg
sub
or
hlt
sti
mov
xchg
jbe
mov
add
sub
adcl
testl
and
mov
dec
pop
out
dec
sub
pushf
ljmp
movsl
xchg
stc
jecxz
sbb
pop
dec
in
jecxz
dec
cmp
adc
sub
stc
jns
test
sti
int
testb
mov
jae
lcall
push
icebp
addr16
inc
xor
cmp
icebp
jl
and
test
enter
and
add
ret
mov
repnz
call
push
dec
aad
lcall
mov
sbb
repz
mov
dec
outsb
fiaddl
mov
push
push
insl
out
addr16
mov
add
aad
roll
and
cmp
ljmp
pusha
pop
jp
outsb
popa
je
mov
dec
adc
cmp
fadds
or
push
xchg
xor
fcomps
or
es
mov
xchg
int
popa
or
les
clc
fidivs
andl
outsb
pop
inc
inc
rclb
out
pushf
mov
fildll
add
pop
xlat
push
divps
mov
and
sbb
dec
push
xor
ror
mov
sub
cmpsl
mov
fiadds
dec
jae
mov
lods
sarl
arpl
jp
add
mov
lock
cmpsl
int
lahf
adc
push
add
add
loopne
add
mov
jno
push
jae
and
cmp
ja
outsl
pop
mov
aad
mov
scas
bound
jmp
lret
mov
pusha
aaa
xchg
xchg
ss
aad
dec
out
jmp
out
nop
xchg
enter
dec
rolb
jno
in
scas
insb
out
xchg
mov
mov
addb
jns
mov
repnz
sbb
xor
jle
insl
xchg
mov
cli
int
and
fs
cmp
aam
jl
outsl
shlb
pop
mov
add
addr16
popa
jne
repnz
cwtl
xchg
nop
pop
ds
mov
mov
jmp
dec
cmp
sub
dec
or
imul
mov
mov
jmp
dec
cmp
sub
dec
or
imul
mov
mov
jmp
dec
cmp
sub
dec
or
imul
mov
mov
sub
jns
jecxz
pop
pop
pop
rorl
jns
imul
push
loope
notb
dec
mov
mov
cmpsb
jns
or
pushf
imulb
idivb
jb
push
fstps
es
push
mov
jbe
mov
xchg
xlat
imul
cmp
jmp
es
push
loope
pop
fimuls
mov
mov
leave
dec
xchg
xchg
push
dec
inc
jp
jae
mov
jmp
into
xchg
repnz
sti
cli
lahf
cli
pop
mov
mov
data16
scas
jmp
pusha
mov
pop
hlt
sub
idivb
push
inc
push
xor
jle
push
push
shlb
or
mov
fsubrl
shll
inc
cltd
mov
inc
xchg
xchg
xchg
sub
out
out
jmp
insb
mov
mov
mov
add
mov
push
ljmp
fadds
test
fcoml
movsl
cmp
pop
aas
jns
js
sbb
fdivp
cmp
push
fnstenv
jmp
ds
jbe
sarb
imul
push
jg
je
inc
sbbb
in
cltd
add
jmpw
aad
roll
ret
aas
movsb
push
cmpl
arpl
inc
jmp
and
sbb
mov
mov
ficoms
scas
push
jb
dec
cmpsl
imul
jne
add
test
xchg
imul
cmp
leave
push
fnstenv
jmp
inc
cltd
jbe
mov
xchg
imul
cmp
leave
mov
mov
sbb
les
stos
jne
aad
lea
pop
inc
adc
ss
in
lds
add
das
pop
mov
fists
lds
je
sub
xchg
push
xor
fisttpl
out
add
sbb
jne
jns
repnz
loopne
push
sub
lock
dec
movsb
insb
xchg
add
dec
cmc
pop
or
mov
mov
pop
into
xchg
cmpl
or
pop
leave
adc
in
pop
mov
mov
rcrb
fiaddl
sub
rcll
arpl
aas
cltd
push
mov
jmp
shll
push
cld
sub
sub
addl
jo
mov
push
out
cmp
cli
mov
pop
push
sbb
jle
push
adc
or
fs
jp
loop
arpl
inc
jg
mov
dec
ljmp
call
mov
jae
xor
mov
aad
dec
push
inc
xor
xor
dec
sbb
int3
add
add
xor
mov
fst
mov
push
adc
fdivrl
mov
and
fcmovb
mov
faddl
add
jp
jno
sub
stos
sahf
mov
fmul
mov
test
xchg
cmpsl
xor
sti
adc
jmp
clc
ret
mov
jmp
enter
xchg
jns
daa
imul
push
sub
pusha
jne
cmp
dec
cmpsl
es
ljmp
mov
movsl
xor
or
mov
push
mov
leave
leave
cwtl
sahf
lds
repz
imul
jb
loope
movsl
cld
mov
inc
cmp
add
notl
orl
dec
adc
das
ljmp
aam
xchg
add
aas
adc
cmp
or
lock
dec
pop
call
push
outsb
out
leave
mov
mov
add
xchg
mov
and
mov
or
stos
leave
not
jne
aaa
ds
iret
aad
fdivrs
stc
data16
adc
divl
stos
adc
sti
pop
fdiv
cmp
fistps
pop
xchg
sub
jp
jno
ret
fcmovu
sbbl
and
iret
xchg
xchg
sbb
in
aas
push
sarb
pop
mov
xlat
xlat
dec
iret
fisttps
mov
imul
mov
mov
jl
pop
icebp
clc
incl
loope
pusha
repnz
inc
adc
jg
push
jecxz
pushf
xor
test
dec
xchg
pop
fwait
clc
push
gs
stos
test
cmp
test
aam
push
jp
mov
cmpsb
fstps
fstpl
hlt
sbb
and
mov
outsl
ret
jecxz
scas
sub
dec
out
sub
pop
aad
adc
std
in
pop
hlt
cltd
mov
and
movsl
xlat
lret
mov
sbb
int3
lret
inc
icebp
ljmp
adc
cwtl
sti
mov
sub
mov
inc
sar
scas
xchg
dec
jae
das
mov
mov
cmc
stos
adc
xchg
xor
cld
into
int3
movntps
add
out
ja
sbb
call
xchg
xchg
mov
adc
adc
leave
cs
pop
mov
or
xchg
into
mov
inc
mov
inc
fdiv
movsb
cs
imul
insl
mov
mov
sbb
lea
leave
sbb
ljmp
clc
mov
pop
iret
pop
mov
clc
cmc
fsubl
and
int
and
mov
inc
leave
flds
pop
xor
repnz
dec
dec
std
add
xchg
ffree
int3
and
cmc
scas
jns
dec
lret
out
sub
xor
push
nop
movsl
insl
out
std
mov
xor
add
aad
dec
mov
fcompl
mov
jp
mov
stc
lds
repz
sub
test
aas
pop
xor
or
popa
fsubrs
jo
or
inc
in
mov
inc
jnp
push
sbbb
inc
in
xchg
pop
jbe
xor
dec
sbbl
nop
push
mov
bound
or
jmp
and
fidivrs
xchg
jae
add
ret
jne
stc
xor
pop
or
pusha
xchg
cmc
jge
cld
pop
dec
mov
sub
push
mov
ja
pop
fdivs
outsl
lahf
fs
sub
cmp
int3
xchg
cmp
scas
cmp
cltd
inc
imul
mov
sub
sub
add
insb
xor
mov
xor
push
adc
lret
nop
mov
repz
mov
jb
mov
mov
ret
pop
fdivp
shll
lret
sub
movd
mov
mov
shrb
jb
out
xchg
addr16
push
adc
ljmp
xchg
loopne
scas
out
jb
or
adc
mov
dec
push
jb
push
xor
jecxz
shl
loope
fcoms
icebp
and
das
out
mov
sbb
pusha
dec
pop
xchg
maskmovq
testl
push
lods
aaa
sub
xchg
push
pop
mov
insl
sbb
inc
cs
adc
addr16
ja
cmp
mov
pop
add
in
adc
xchg
movsb
jae
jo
mov
je
fcmovnu
divb
lret
negb
push
js
inc
or
arpl
pop
das
ss
push
inc
or
adc
mov
addb
jnp
mov
inc
loope
sub
xlat
xor
pop
cmp
sbb
ror
fsubrs
dec
cwtl
pop
xor
cmpb
mov
adc
jmp
loope
pop
adc
pusha
in
dec
pusha
lods
js
sbb
dec
data16
xchg
fs
mov
mov
fists
xchg
sbb
ds
stos
outsb
out
mov
sub
jnp
and
popf
lret
sbb
jmp
cmpl
mov
jge
fistl
push
repnz
loopne
loop
push
mov
pop
mov
or
dec
push
xchg
dec
pop
mov
jns
dec
insl
je
lock
mov
pop
pop
out
into
or
dec
and
cli
add
gs
aad
sub
sub
pop
cmp
mov
xor
mov
or
ficoms
pop
movsl
dec
ds
out
enter
aam
push
adc
popf
mov
outsb
cmp
mov
jmp
les
popa
mov
lcall
add
aad
dec
dec
addr16
sahf
pop
xor
or
movsb
xchg
sbb
fisttpl
push
cmp
dec
mov
and
mov
dec
or
cmp
addb
mov
std
test
fisttps
jle
mov
enter
mov
cmp
addr16
les
cli
lcall
mov
cltd
aam
mov
mov
jle
fadd
and
sarb
outsl
inc
cmpb
pop
ret
push
lcall
jb
xor
cmp
aam
nop
out
pop
mov
shlb
xchg
repnz
nop
xorb
sbb
pop
sbb
int
xorb
popa
xor
push
mov
icebp
inc
cmp
lcall
lret
mov
pop
sbb
pop
int
outsl
xor
sub
fsubrp
in
inc
test
mov
mov
orl
ret
adc
jl
fdivrl
sub
outsb
xor
xchg
mov
lret
lahf
out
and
mov
pop
insb
jp
sti
adc
lret
sbb
sub
mov
mov
xchg
push
lods
dec
lret
int
mov
test
sub
inc
inc
xor
outsb
push
leave
jmp
push
and
push
scas
das
cs
popl
cmp
cltd
les
inc
cwtl
xor
push
push
push
ljmp
inc
cld
outsl
ss
push
mov
cli
push
dec
leave
cmp
adc
test
jae
fsub
shll
mov
cmp
xlat
sarl
aaa
clc
loop
mov
fmull
sbb
lea
sbb
mov
es
xchg
ficompl
and
xchg
adc
mov
into
iret
xchg
roll
push
into
jo
fmuls
lods
out
pop
popf
pusha
pusha
in
das
push
push
sbb
jecxz
cmpsb
sub
sti
idivl
push
jp
adc
add
ja
adc
out
mov
repnz
out
inc
call
loop
push
pop
aaa
fcoml
jae
lahf
push
adc
and
mov
inc
xchg
arpl
mov
dec
lret
fimuls
rolb
pushf
in
repz
pop
divl
mov
lock
das
inc
js
cmp
out
addl
outsb
shlb
jmp
or
stos
sub
lods
push
loopne
popf
sub
loope
push
xorb
mov
cli
hlt
mov
out
ds
jmp
xorl
mov
sub
add
cmp
add
cs
and
out
push
mov
cmpsl
bound
sar
jb
sarl
cmp
mov
test
adc
push
subb
enter
orl
jbe
inc
jne
sub
and
imul
in
inc
mov
lcall
adc
jae
mov
icebp
out
nop
xchg
aad
mov
or
jbe
inc
clc
jp
jne
cmc
adc
push
jg
adc
in
mov
std
pusha
je
and
cmp
lock
rorl
mov
pop
lret
int
loopne
mov
hlt
adc
clc
je
data16
pop
loopne
fdivrl
xorb
loopne
dec
jg
outsb
outsb
mov
daa
in
mov
dec
out
jmp
fcmovbe
jne
push
push
icebp
pop
xor
cmp
sbb
lods
mov
fwait
pop
mov
lahf
fmul
fmuls
and
pop
insl
mov
loope
je
xorl
sub
ja
push
mov
mov
mov
mov
cs
rorl
jne
in
psllq
out
sub
and
sti
pusha
pop
test
mov
das
mov
mov
fwait
enter
stc
add
or
jp
cld
leave
cwtl
add
in
push
sub
cs
mov
or
jbe
xchg
test
cmc
push
pop
mov
cmc
aaa
stc
cmp
mov
movsb
scas
sbb
lret
mov
fadds
add
adc
mov
subb
xor
adc
and
dec
nop
xchg
call
enter
cmp
mov
pop
sub
mov
or
js
enter
jl
xorl
pushf
ljmp
add
cmp
scas
and
insl
add
xchg
scas
mov
cld
mov
lods
xchg
inc
dec
movsb
insb
out
xor
test
lea
rol
inc
loop
jg
jno
pop
daa
jbe
or
add
aaa
sub
ret
out
mov
xor
scas
int3
xchg
repz
lcall
pushf
push
sarb
sahf
mov
jg
fisubrl
push
pusha
aad
dec
mov
loope
cmp
add
daa
subb
fnstenv
dec
jno
movsb
in
pop
jecxz
add
add
mov
addr16
mov
inc
dec
jne
cmp
cmp
adc
mov
int
fists
mov
lahf
mov
test
test
sbb
push
int3
gs
sbb
push
push
in
les
clc
stos
fldcw
out
dec
mov
sub
inc
mov
mov
repz
sub
pop
mov
inc
xchg
les
inc
jb
insb
leave
gs
jae
push
daa
mov
mov
sub
cmc
xchg
bound
repz
lahf
enter
dec
mov
push
leave
xchg
mov
add
in
push
lahf
xor
and
mov
out
movsl
and
outsl
push
dec
adc
dec
dec
ret
push
in
push
inc
clc
int
cltd
or
rorl
inc
jbe
ljmp
es
pop
in
or
nop
xchg
das
mov
mov
call
fs
xorl
dec
pop
and
pushw
shrl
popa
sbb
hlt
push
xchg
mov
nop
aam
popf
push
clc
aaa
mov
dec
cld
mov
insb
lods
cwtl
fldcw
das
fidivs
lds
or
cmp
fstpt
call
xchg
call
push
xor
subl
xchg
pop
jecxz
pusha
mov
push
add
cmpsb
cmc
and
aad
pop
cmpsb
out
jns
mov
test
dec
cltd
xchg
repnz
jns
add
loopne
aam
mov
jbe,pt
pop
xchg
int3
jnp
xor
jno
orl
mov
add
adc
xchg
push
ds
loop
fdivrs
or
sbb
imul
js
jmp
push
notb
push
stc
pop
inc
repnz
and
push
push
mov
mov
sub
std
jge
icebp
or
int
sti
add
sbb
loopne
xchg
jge
int3
in
inc
shr
push
sahf
sbb
cltd
push
inc
icebp
adcb
call
xor
add
xchg
sub
mov
dec
push
mov
test
push
lods
lahf
add
sar
dec
dec
xchg
lcall
aas
lea
or
fnsave
cmp
pop
sub
push
pop
je
dec
in
sub
xchg
mov
mov
inc
xchg
movsb
adc
xor
pop
cltd
pop
sti
add
fcmovnbe
nop
cld
and
cmp
dec
lea
movsl
lret
jo
frstpm(287
push
stos
cld
int
daa
cmp
sub
and
sbb
sbb
icebp
aad
iretw
dec
add
inc
aam
jecxz
cltd
push
dec
bound
std
mov
jbe
dec
cmp
mov
jg
cmpl
xlat
gs
fwait
adc
shll
or
hlt
int3
out
pushl
imul
jns
jbe
or
mov
dec
stc
mov
mov
faddl
and
push
pop
mov
adc
out
cwtl
adcl
je
xchg
mov
pusha
popf
ret
add
sub
pusha
pop
dec
test
cmp
mov
fisubs
and
outsb
lahf
xor
sub
xchg
int3
dec
out
loope
push
icebp
cltd
dec
iret
and
rolb
dec
vpaddsw
pop
cmp
sub
test
jmp
out
aas
shll
fcmovnu
cmp
sub
inc
sub
lcall
out
xlat
jl
xlat
and
mov
insl
dec
and
mov
repnz
cmp
mov
jmp
dec
xor
in
pop
jo
sub
in
paddusw
push
mov
pop
xor
ret
inc
addr16
cmp
mov
push
leave
push
ficomps
push
pusha
mov
pop
test
daa
scas
ret
mov
jcxz
or
add
sub
jno
test
outsb
add
push
and
pop
add
rcrl
mov
jb
pop
ficompl
lcall
or
dec
inc
clc
fsubrs
mov
lret
push
pop
stc
outsl
and
std
and
push
in
and
mov
fldl
dec
xor
repz
push
imul
add
jecxz
cmp
adc
sbb
cmp
dec
xor
sub
mov
pop
adc
cmp
fucom
scas
adc
mov
or
ja
in
stos
cmp
outsb
sub
cmpsb
pushf
pop
ja
cmp
stos
inc
scas
es
pop
xchg
sub
push
xchg
adc
out
adc
push
inc
sti
jno
or
fstpt
je
lahf
push
leave
mov
cmp
shrl
std
jno
imul
pop
stos
jg
jmp
out
jl
lods
mov
xchg
adc
repz
add
scas
fildl
fistpll
mov
orb
mov
xor
adc
fiadds
mov
out
setbe
mov
xor
xchg
adc
mov
xlat
ljmp
pop
lds
jb
hlt
clc
push
in
jns
mov
test
xor
dec
inc
clc
xor
ror
sti
into
js
cld
scas
and
dec
adc
int
push
push
test
imul
aaa
adc
hlt
clc
push
dec
pop
and
mov
iret
jecxz
or
xor
ficoms
xchg
call
add
aas
test
nop
scas
adc
mov
jle
ret
mov
loopne
pop
xor
es
pop
adc
pop
add
stos
test
mov
xor
push
mov
shlb
mov
mov
rep
sahf
mov
cmpsl
mov
fistps
xchg
mov
lods
aaa
lods
jo
loopne
insb
cmp
aas
push
out
add
pop
call
dec
push
pop
dec
ja
jp
stos
shl
inc
mov
rorl
jo
jg
std
mov
mov
push
push
addr16
mov
xor
mov
sub
scas
adc
push
and
aaa
int
sub
mov
jo
xchg
jle
jo
cmc
fadd
je
dec
and
or
or
aad
out
shlb
mov
aad
cmp
lea
cmp
adc
lahf
lcall
ljmp
push
push
lods
push
lock
sub
arpl
push
adc
xor
and
enter
and
ror
lea
arpl
aam
loop
es
mov
jbe
sti
mov
shll
sbb
fxch
adc
xchg
sub
movsl
aaa
cmp
cmc
mov
add
outsl
cltd
lock
jg
cmp
sbb
mov
pushf
pushf
inc
dec
lret
xchg
jno
sub
cmp
push
pmaxsw
xchg
repz
xchg
push
cli
fbld
pop
xchg
dec
cld
fbld
mov
mov
pop
lea
jmp
dec
pop
mov
ja
lret
sub
dec
out
fs
popa
and
loopne
xlat
rep
loopne
sbb
xchg
les
hlt
fisttpl
pop
out
add
outsb
cli
sub
fnstenv
testb
daa
pop
sub
sbb
rorl
aad
inc
push
sub
lret
lods
mov
sbb
jb
or
cmp
jo
lods
outsb
icebp
ror
std
out
mov
ja
and
ret
lret
inc
xor
mov
mov
mov
imul
inc
rcl
mov
fnstenv
ret
push
jbe
nop
roll
and
xchg
xchg
fstps
out
push
loop
popa
out
shll
into
jne
jmp
mov
or
push
insl
daa
push
int
inc
push
pop
dec
sub
mov
sbb
xor
test
aas
or
jmp
ud0
mov
mov
fs
push
jb
xchg
leave
orl
dec
nop
lahf
cmp
arpl
push
mov
fistl
cmpsl
cmp
shl
xor
pop
and
pop
sbb
mov
movsl
movsb
mov
xchg
pop
std
cmp
ljmp
aaa
scas
pop
rcll
sbb
addr16
cmc
cmp
mov
sbb
push
fnstsw
jg
sti
cli
pop
sub
lods
adc
fbld
mov
inc
ret
pop
pop
mov
mov
mov
pop
int3
ja
ss
punpckldq
push
pop
aas
fidivrs
ljmp
push
subb
xlat
fsubs
popa
fstl
mov
lret
movsb
cmp
out
cmpsl
std
lahf
arpl
cmpb
inc
sarb
mov
jecxz
ds
ret
or
sbb
mov
out
lahf
sti
sub
fstl
lods
inc
fbstp
jns
pop
or
dec
jg
inc
lret
je
or
imul
test
pop
into
mov
inc
jle
mov
jnp
mov
adcl
sbb
push
cwtl
shl
xchg
mov
xorl
inc
mov
xchg
and
ja
inc
test
inc
cmp
xchg
push
xchg
or
cwtl
cld
mov
inc
inc
ficoml
cmp
jns
adc
mov
es
sub
daa
or
test
push
icebp
adc
icebp
mov
pushf
addr16
ja
pop
ret
xchg
divl
or
sar
mov
cwtl
push
mov
test
dec
push
insl
adc
mov
ds
loope
lock
xor
mov
pop
orl
and
fucom
ficoml
int
movsb
into
adc
loopne
lret
cmp
mov
inc
mov
lock
push
mov
aas
fwait
les
cli
pop
rorl
pop
movsl
sbb
cmp
in
mov
out
cld
or
jbe
jle
loop
adc
cmp
ffree
sbb
jecxz
xchg
js
xor
mov
nop
add
mov
adc
jns
cmp
aad
mov
es
xor
sbb
push
cltd
push
enter
addps
lahf
push
pop
add
in
xchg
fadds
mov
jmp
add
stos
pop
mov
mov
xchg
xchg
jne
mov
and
or
jno
es
push
mov
jbe
mov
xchg
imul
cmp
leave
push
fnstenv
jmp
inc
cltd
jbe
mov
xchg
imul
cmp
leave
ss
push
imul
sbb
cmpsb
mov
inc
imul
cmp
leave
pop
fldcw
stc
push
mov
jbe
out
xchg
dec
jns
sbb
cmpsb
push
mov
sbb
loop
repnz
ret
fldt
fcomps
jnp
dec
push
pop
and
xor
or
sbb
jmp
sti
ret
mov
jnp
dec
push
pop
and
xor
add
adc
loop
repnz
ret
mov
daa
xor
aaa
pop
and
pop
inc
outsb
jnp
xchg
jmp
pop
scas
mov
jp
mov
js
ja
cs
dec
push
or
sub
jecxz
adcb
jecxz
mov
mov
xchg
lcall
mov
jmp
mov
or
sbb
cmp
mov
cld
pusha
xor
int
fsubrl
xlat
fwait
and
mov
sbb
adc
cli
add
aad
lret
stos
lret
xchg
pop
ljmp
mov
movsb
jb
xor
cmc
cltd
cmp
sbb
xchg
inc
jle
sbb
arpl
jp
iret
mov
push
std
or
dec
fisubrs
add
lret
mov
mov
and
dec
cmp
aam
iret
lds
adc
and
repnz
ret
mov
jnp
dec
push
pop
and
xor
add
adc
xchg
popf
mov
push
jmp
pop
pop
adc
and
jae
mov
xchg
stos
xchg
into
stc
xchg
in
fwait
adc
adc
aaa
aad
push
push
imul
test
mov
out
mov
orb
jnp
dec
push
pop
and
xor
add
adc
loop
repnz
ret
mov
jnp
dec
push
pop
and
xor
add
adc
loop
xchg
out
pop
cmp
lods
rcr
or
mov
or
mov
enter
sar
fldl
mov
fwait
es
aam
mov
stos
add
xchg
adc
std
mov
loop
push
pushf
mov
cs
mov
sbb
dec
lahf
xchg
pusha
nop
sarb
bound
push
sarl
ds
scas
xor
inc
inc
dec
pop
adcb
push
jge
or
fadds
and
mov
test
add
shll
ret
jns
pop
aad
divl
mov
xchg
fwait
jns
insb
enter
push
int
xchg
enter
enter
lret
push
cld
jbe
adc
icebp
adc
stc
sub
mov
add
and
inc
sub
lret
mov
dec
nop
inc
test
insb
outsl
jnp
pop
aaa
hlt
out
mov
add
test
divb
jg
ret
jg
es
push
push
and
mov
in
insl
and
push
adc
test
sbb
push
mov
jbe
and
xchg
mov
int3
popa
adc
inc
ret
push
inc
sbb
orb
mov
xchg
repz
out
pop
test
mov
inc
push
push
cld
sbb
mov
in
icebp
dec
stos
nop
add
cmovle
cmp
sbb
push
imul
push
mov
icebp
dec
sub
mov
fs
xchg
in
rorb
cmpsb
xchg
fistl
test
pop
in
push
mov
lahf
lcall
pop
mov
cli
xchg
mov
fsubr
pop
and
pop
jmp
fs
icebp
leave
dec
movsb
cmp
out
jns
fildll
or
xor
adc
pusha
icebp
dec
fsubrl
pop
jb
sub
daa
das
test
je
je
cli
call
adc
loopne
ret
data16
cmp
push
add
jnp
sub
insb
push
mov
xchg
mov
leave
cltd
jns
jle
xchg
shrl
lods
mov
pusha
or
bswap
and
cmp
mov
pop
dec
or
lret
xchg
mov
jns
and
lock
xor
cli
dec
test
inc
inc
or
out
arpl
out
push
idivl
push
xchg
aam
aam
insb
sub
out
pop
shll
orl
rcl
jle
inc
sti
sub
pop
popa
fwait
pop
lcall
movl
fs
call
imul
sarb
std
or
push
lea
in
mov
jns
imul
fstl
sbb
enter
mov
mov
repnz
dec
cmc
movsl
mov
popa
push
xor
mov
js
ja
test
leave
jge
push
div
inc
mov
insl
out
je
popf
fsts
or
or
and
loope
mov
hlt
gs
das
xadd
sub
dec
lock
fisubrl
fs
data16
std
xlat
enter
inc
mov
push
jmp
cmpsb
clc
lds
int3
enter
movsb
sbb
scas
andb
cld
ds
pop
popf
lds
lret
mov
adc
mov
jmp
push
lods
mov
imul
xchg
push
sbb
sub
xchg
test
mov
scas
mov
or
mov
push
sahf
clc
scas
or
jb
gs
jb
daa
int3
ret
xchg
cmc
test
rcll
pop
dec
mov
dec
icebp
out
inc
out
gs
sbb
jne
dec
sti
inc
clc
and
inc
mov
mov
dec
rcll
or
fstp
mov
inc
mov
jo
pop
arpl
fdivs
or
sbb
enter
push
and
mov
repnz
xor
pop
sub
in
scas
xchg
dec
or
mov
push
dec
insb
mov
cmp
gs
dec
out
push
cmp
push
fnsave
lods
rcll
mov
or
sub
push
pop
lahf
sbb
lcall
pop
cs
mov
or
fdivrp
js
push
mov
push
adc
jle
mov
add
pop
add
adc
pop
fs
push
jecxz
mov
stos
pop
cli
rolb
shlb
cmp
aaa
jbe
js
xchg
dec
jg
jecxz
fmuls
sbb
cmp
das
jae
xchg
mov
jnp
out
jns
faddp
test
xchg
sub
jmp
add
xor
pop
mov
dec
mov
jne
push
xchg
xor
mov
daa
xchg
push
sub
in
adc
in
adc
pop
pop
hlt
sbb
mov
sub
das
int
push
outsl
or
mov
shll
sub
test
xor
mov
mov
inc
jnp
icebp
clc
shll
pushf
mov
or
push
xlat
enter
push
pusha
das
mov
fildll
inc
push
push
mov
or
sbb
ds
in
movsb
push
mov
in
mov
sub
imul
ficoms
out
cs
call
xchg
test
sub
pop
add
aas
mov
shrb
dec
add
mov
mov
test
add
xor
lea
lret
mov
notb
out
dec
movsb
shll
pop
xor
icebp
lods
sarl
andl
and
jge
ljmp
inc
and
jl
popa
or
stos
jmp
stc
gs
out
mov
sbb
pop
enter
imulb
sub
hlt
out
test
push
pop
imul
scas
dec
push
xorb
dec
mov
inc
jnp
xchg
or
cmp
lock
fwait
popf
in
mov
outsb
hlt
jnp
cs
data16
jp
mov
cmp
cmp
das
or
call
and
pop
movsl
sbb
loopne
sub
mov
sub
sarb
jae
std
pcmpgtd
sub
and
inc
or
stos
fmull
xor
out
jecxz
into
pop
cmpsb
or
jg
or
and
loopne
jno
leave
mov
movsl
repnz
jecxz
jmp
notl
fcoml
add
lret
xor
xor
lcall
push
ret
xchg
stos
mov
inc
push
aam
xor
mov
pop
lods
push
push
call
je
int
and
pop
push
push
cltd
xor
jp
imul
dec
fcoml
xchg
nop
add
adc
out
jmp
ja
xchg
adc
inc
loopne
push
mov
cmpsl
sahf
inc
dec
ljmp
cmpsl
pop
lock
repnz
xchg
cmpsb
sbb
xor
and
cmpsb
and
push
sbb
icebp
and
arpl
shll
jns
add
mov
jne
mov
mov
out
and
and
stc
int3
cmpsl
xor
movsl
ja
and
sbb
icebp
test
sub
rcl
mov
out
or
push
lods
repnz
cmc
mov
scas
inc
jnp
sub
out
notb
jno
dec
mov
out
sub
jle
mov
fdivrl
inc
sub
mov
jb
jno
fiaddl
stos
std
xchg
bound
movl
sub
enter
lret
mov
and
shrb
add
jle
ss
fnstcw
sti
leave
xor
xchg
xchg
mov
rclb
mov
popa
sbb
fsubs
lret
mov
pop
gs
mov
into
out
mov
mov
mov
in
aam
rol
inc
cmp
add
cmp
cwtl
movl
jno
push
xchg
adc
push
notl
jp
sahf
mov
fildll
xchg
xor
inc
and
pop
jo
xor
push
and
jb
add
sbb
push
push
sub
add
lahf
insb
insl
cmp
loopne
shlb
xor
aaa
push
sbb
mov
loop
mov
mov
cmpsb
push
sbb
inc
mov
in
gs
cmp
sub
push
arpl
insl
pop
push
xor
fldenv
movsb
and
inc
or
adc
arpl
cmp
sub
push
and
mov
dec
subb
mov
and
xchg
mov
push
out
in
data16
loope
cwtl
dec
ret
and
out
data16
mov
aaa
inc
push
add
arpl
call
mov
jge
jl
aaa
popa
lea
pop
ljmp
jns
das
mov
push
jl
and
add
cmp
mov
xlat
push
bound
or
scas
rclb
dec
fdivs
jp
loopne,pt
insb
out
jnp
sbb
pop
sub
insb
pop
sbb
mov
or
push
idivl
aas
inc
pusha
out
test
mov
sbb
loopne
mov
lahf
pop
cltd
jmp
cvttps2pi
je
and
jo
ja
mov
xchg
stos
jg
stos
sub
mov
cld
xchg
mov
cs
repnz
add
inc
or
jp
lea
rcll
mov
std
mov
cmp
dec
pop
jb
adc
sti
or
fistpl
sbb
adc
loop
test
les
ret
stos
sbb
and
cld
push
out
lcall
jmp
add
cwtl
dec
into
test
lock
or
pop
arpl
test
inc
shll
ljmp
sbb
mov
xor
push
and
xor
or
dec
mov
fs
sub
adc
pop
addr16
nop
leave
int
and
inc
pop
loop
jo,pn
xchg
cwtl
push
test
lock
or
pop
cmc
inc
repnz
adc
fdiv
dec
es
imul
inc
add
cmp
push
inc
inc
shlb
and
jp
jb
adc
xchg
push
insb
push
jns
insl
leave
movsl
lds
scas
add
mov
pop
sub
and
icebp
in
std
jge
sbb
inc
clc
cmpb
jb
or
fxrstor
ljmp
cmp
rcl
rorb
jp
jb
aad
mov
mov
ja
push
push
mov
int3
mov
mov
jno
mov
fwait
sbb
lahf
into
call
jle
push
adc
inc
xor
add
sahf
and
or
sti
stos
int
cmpsl
sub
or
add
call
add
lahf
mov
add
andl
into
jbe
mov
repz
cmp
xchg
dec
cmp
sub
aaa
xchg
and
stos
sbb
dec
mov
aas
dec
or
pop
mov
sub
out
repz
and
ret
popf
mov
cs
add
and
mov
and
inc
out
and
jge
and
xchg
xchg
cltd
mov
lock
sub
xchg
dec
cs
fbld
es
sub
xchg
cld
aam
fcmovnb
dec
dec
dec
idivb
es
push
das
pop
std
gs
ret
incb
insb
sbb
mov
jae
fsubl
pushf
lret
psrlw
mov
dec
push
or
fs
into
dec
adc
iret
inc
mov
sbb
pop
xor
pop
sarl
push
js
sbb
imul
xchg
mov
cmc
test
out
pop
and
insl
xor
lea
sahf
mov
mov
sbb
in
add
addr16
std
fisttpl
jnp
nop
ret
pop
dec
sub
mov
adc
test
addr16
adc
jnp
pop
mov
pop
pop
sbb
xchg
lret
faddl
cmc
lods
xor
enter
jnp
lahf
out
ficoml
movsb
pusha
pop
dec
dec
and
iret
push
cli
scas
pushf
xchg
mov
into
iret
xor
push
cmp
sbb
jecxz
mov
xchg
test
and
sbb
testb
xor
lods
and
mov
imul
push
out
cmpsb
insb
popf
jg
jno
loopne
inc
inc
add
dec
cmc
inc
lret
orl
add
mov
mov
mov
adc
add
lds
mov
ljmp
and
add
pushf
mov
in
pop
sub
mov
or
stos
int
nop
mov
fsubl
jge
mov
stos
inc
dec
daa
sbb
lcall
leave
xor
lcall
faddl
loope
lea
mov
out
call
movsb
jmp
ja
int3
mov
dec
icebp
lret
xchg
mov
or
jl
or
das
popa
arpl
ret
inc
push
in
fdiv
mov
mov
jo
adc
or
mov
inc
pop
mov
xchg
insb
mov
mov
stos
cmp
adc
fldl
int3
outsl
stos
shrl
mov
mov
in
fcoml
jge
and
mov
sahf
push
in
call
push
inc
jmp
mov
out
jae
orl
hlt
sarb
shl
out
imul
rcl
adc
mov
adc
lcall
stos
imul
mov
sub
sub
inc
mov
jns
outsb
repnz
mov
mov
ret
mov
ljmp
scas
insl
hlt
lret
cmp
cmp
movsb
add
xor
sti
adc
xor
xlat
out
xlat
fs
adc
outsb
ds
dec
dec
enter
sub
or
daa
add
ret
mov
jae
jl
pop
fnstenv
popa
jg
bound
daa
adc
lcall
pop
gs
jae
adc
fwait
sbb
call
mov
inc
sub
and
loope
cs
mov
xchg
mov
fldcw
xchg
mov
js
push
aad
fs
jo
adc
movsl
pusha
loopne
test
sbb
movsl
ffreep
push
aas
es
das
inc
mov
fldenvs
fmuls
and
js
push
rorb
mov
push
add
xchg
mov
add
insb
repz
mov
or
in
movsl
xor
or
mov
push
les
mov
in
out
leave
sub
xor
inc
or
insb
outsl
xchg
xor
sahf
and
dec
sub
fcoml
fidivs
popa
out
xchg
cmp
mov
mov
enter
pop
cmpsl
push
ljmp
add
bound
dec
xor
adc
push
and
add
pop
xchg
in
add
popa
in
inc
outsb
movsb
or
in
stc
insb
and
jl
out
mov
mov
mov
xor
incb
shl
mov
les
add
loope
in
aad
mov
data16
negb
in
pop
jns
fmull
outsl
mov
mov
scas
push
dec
mov
cmp
into
add
dec
inc
sahf
pop
fwait
nop
xchg
lret
ds
call
stos
push
ret
lods
or
jp
stos
outsl
clc
cmp
test
lret
pop
sub
cltd
xchg
imul
std
xor
sbb
aas
inc
lods
xchg
in
sub
aad
adcl
movb
xchg
mov
mov
aam
lret
das
in
inc
or
xchg
inc
add
stos
outsb
jno
lods
rcl
xchg
pop
ret
mov
mov
sahf
dec
in
xchg
or
mov
jl,pn
stos
or
push
adc
mov
adc
cmp
push
push
ret
dec
aaa
shrl
jbe
ret
inc
xor
test
sbb
insl
faddp
and
cltd
sbb
test
scas
dec
lods
xor
rcrb
imull
ss
popf
adc
andb
into
sbb
andb
jno
lcall
jp,pn
xor
push
fwait
mov
ret
in
sti
add
cld
mov
pop
mov
rcrl
fistpll
fdivl
pop
sbb
aas
je
adc
test
inc
lea
repz
and
ja
outsb
jg
sub
mov
mov
imul
in
arpl
xchg
insb
pop
inc
mov
dec
inc
or
rcrb
stos
roll
lahf
mov
xchg
roll
imul
jmp
cmp
jo
inc
movsl
jge
clc
fucomi
enter
adc
iret
movsb
into
loopne
repz
out
daa
xchg
jge
mov
dec
mov
aas
push
cmc
repnz
imul
aaa
mov
lock
sub
leave
push
sub
mov
fwait
out
adc
mov
inc
rol
xchg
stos
lds
ja
xor
dec
rclb
repnz
mov
lret
or
sub
mov
mov
addr16
fcomi
dec
add
lahf
dec
add
mov
pop
rep
inc
cmp
mov
pop
jp
movsl
jnp
push
mov
adc
xor
cmpsl
outsl
scas
add
pop
imul
in
idiv
or
lret
cmc
dec
pushf
scas
das
aas
repz
imul
sub
cmp
rcrb
dec
mov
push
aaa
or
lock
push
test
dec
aaa
imul
dec
sub
loopne
mov
aad
popa
pop
mov
arpl
fwait
ret
mov
lock
lcall
cmp
loop
dec
mov
jne
sbb
lds
orl
xor
into
pop
insl
pop
fwait
dec
adc
cltd
mov
int
je
test
rcrb
xchg
fs
div
pop
jecxz
rcl
dec
or
adc
push
clc
sub
mov
inc
inc
dec
pop
dec
sbb
or
rclb
sbb
xchg
and
pop
or
mov
xchg
pop
and
cmp
dec
push
sahf
gs
popa
stos
jnp
and
dec
mov
aaa
inc
pop
out
xor
mov
push
and
lods
mov
sbb
enter
inc
dec
movl
jle
daa
pop
insl
sub
inc
mov
rcrb
jp
pop
xor
hlt
mov
mov
outsl
mov
aaa
cltd
pop
mov
js
push
cs
mov
or
repz
mov
shll
stos
xor
loopne
stc
or
push
sub
inc
mov
sbb
movsl
in
dec
inc
cld
mov
ds
push
mov
sbb
mov
stos
sub
lds
pop
ss
orb
cmpsl
andb
push
mov
pop
and
fistps
inc
cmp
jp
sub
mov
jge
stos
mov
out
push
daa
push
test
mov
jb
pop
mov
add
jmp
ret
push
sub
or
mov
fstp
std
popa
sbb
jle
test
sub
lret
outsl
and
pushf
add
push
push
add
and
in
or
pop
push
jb
mov
mov
subl
pop
nop
jmp
stos
shlb
or
call
ret
cld
icebp
nop
aaa
pop
aaa
mov
ret
sarl
and
push
roll
shl
inc
xchg
adc
dec
pop
cmp
insl
repz
shll
inc
pushl
pop
iret
int3
inc
mov
adc
lcall
jo
and
aas
gs
and
test
cmp
adcl
push
incb
out
sbb
or
push
loope
test
pop
shrb
xchg
xchg
jae
add
or
sar
fiadds
jno
es
push
xchg
loope
xchg
push
or
popa
insl
xchg
push
outsl
sub
mov
add
lret
scas
cld
inc
mov
hlt
aad
cs
add
fs
mov
sub
and
push
addr16
add
mov
notb
inc
or
nop
mov
sub
pop
iret
pop
imul
dec
xor
add
mov
int3
dec
fcmovu
pop
out
inc
dec
gs
rolb
jmp
mov
mov
fcompl
lods
pop
inc
enter
nop
sarl
sub
lock
ljmp
jb
pusha
std
imul
jbe
cmp
cmc
mov
loop
sar
cli
xor
mov
scas
ret
cmpsl
adc
mov
xor
popa
fistps
jecxz
and
add
sbb
jmp
cmp
js
xor
sti
mov
adc
jle
addb
push
out
loope
push
jno
leave
outsl
sbb
pop
add
or
xor
inc
cmpsb
test
jecxz
xor
or
add
fiadds
in
fdivr
jp
push
cmpsb
add
add
fwait
je
or
das
mov
add
jae
lcallw
cmpsl
or
push
xchg
scas
adc
add
outsb
sti
push
pop
mov
hlt
push
out
mov
rolb
mov
sub
cmp
mov
and
mov
lret
mov
out
sarb
xchg
inc
mov
nop
and
inc
mov
cmp
negl
pop
inc
push
ret
sub
rcrl
jo
cltd
and
cmp
inc
sub
xchg
rolb
xor
js
sarb
mov
pop
sub
lcall
arpl
hlt
xlat
cltd
push
xor
dec
sbb
popf
dec
and
mov
xor
xor
neg
inc
mov
xchg
mov
shlb
repz
or
mov
std
dec
cwtl
dec
repz
cmpsb
sti
std
lret
mov
mov
jnp
dec
push
pop
and
xor
add
adc
loop
repnz
ret
mov
jnp
dec
push
pop
and
xor
add
adc
loop
repnz
ret
fisubl
mov
jp
dec
push
pop
and
xor
add
adc
loop
repnz
ret
fbld
or
fs
xchg
shr
dec
push
sub
mov
ljmp
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
or
inc
adc
popa
xor
xor
inc
dec
jae
int
xchg
repz
rcl
jecxz
repz
add
inc
and
adc
push
xor
or
add
xchg
mov
adc
jecxz
repz
add
imul
sbb
arpl
jae
or
popf
rcll
test
enter
inc
pop
cmp
arpl
push
add
fdivr
sub
out
push
lret
in
jge
mov
push
int3
fwait
jno
jno
inc
shrl
sbb
ds
push
mov
xlat
sub
jecxz
mov
cmp
xor
and
ds
mov
rcrl
data16
addl
fs
adc
and
icebp
daa
mov
sub
mov
mov
mov
and
xor
jl
pop
loope
cmp
pop
or
ds
jae
inc
mov
cs
rorb
loopne
push
ret
xchg
adcb
out
add
jno
jbe
add
push
xor
jae
sbb
jmp
ret
cltd
shll
pop
and
adc
add
cmp
and
rcll
and
aam
les
adc
arpl
gs
outsl
pop
pop
or
enter
lock
hlt
lods
repnz
mov
pushf
cmp
pop
adc
popa
push
imul
jae
add
icebp
mov
adc
push
add
jno
popa
xor
inc
add
arpl
jae
add
icebp
mov
adc
push
add
icebp
ds
sub
xor
push
or
jecxz
sub
pop
or
mov
and
aam
or
xchg
mov
flds
xor
imul
or
or
repnz
and
push
jle
and
and
lea
cmp
lods
cwtl
movsl
cmp
in
xor
mov
inc
or
ss
iret
out
gs
mov
push
mov
sbbb
scas
push
sbb
repz
rcll
dec
out
icebp
addr16
pushf
aaa
rorb
adc
add
sbb
mov
lret
sub
or
sbb
scas
sahf
mov
xchg
cltd
popa
cmp
mov
adc
shll
and
xlat
rcll
push
inc
cwtl
push
leave
xchg
lcall
outsb
mov
repnz
inc
sahf
sbb
mov
mov
jbe
pop
jbe
out
ret
mov
nop
mov
ja
fucomip
ss
xchg
jmp
scas
lds
pop
sub
xchg
cwtl
pop
mull
dec
jg
idiv
insl
mov
sbb
pop
inc
imul
pop
jecxz
xor
mov
adcl
int
pusha
dec
jb
mov
jecxz
mov
and
and
dec
jae
mov
push
cld
gs
xor
cmp
call
icebp
adc
rol
fisubrl
adc
jnp
dec
movsl
xchg
pop
ljmp
dec
je
push
cmpsb
ret
pop
adc
mov
lahf
adc
lret
mov
gs
outsb
xchg
cwtl
jns
cmp
enter
lahf
pushl
add
sbb
cmp
dec
ds
push
test
xchg
add
data16
insb
repz
mov
sub
adc
ss
stos
sbb
lcall
iret
cli
dec
in
mov
vxorps
sbb
mov
iret
mov
or
mov
mov
call
add
or
in
xchg
lret
cmp
lret
dec
mov
mov
test
lahf
je
dec
mov
mov
icebp
in
mov
add
jbe
push
fs
testb
cmp
ds
dec
bound
push
out
mov
daa
sub
call
add
mov
shll
jns
dec
cmp
and
out
sahf
in
ret
mov
mov
fists
pop
clc
aam
mov
lret
jmp
or
and
ljmp
or
outsl
test
lahf
xchg
mov
arpl
cli
repz
aam
dec
fisubrs
loopne
push
mov
imul
daa
adcb
fwait
dec
mov
test
mov
mov
push
push
push
fisttpl
std
xor
xchg
push
movsl
mov
push
or
fidivl
out
xor
cmp
movsb
xor
jns
mov
repz
movsl
adc
adc
int
or
in
jg
jno
hlt
push
pop
inc
in
mov
int
clc
push
addr16
dec
test
ja
inc
movl
adc
lret
shl
cmp
sbb
loopne
push
mov
jns
cli
adc
fisubrl
inc
fdivrl
mov
dec
scas
popf
je
mov
dec
imul
ret
repz
imul
loopne
ja
mov
or
cmc
aaa
ljmp
iret
xor
fistl
xchg
mov
std
xor
mov
aas
mov
push
stos
sahf
add
testl
es
bswap
jns
hlt
mov
jmp
mov
imul
xor
add
mov
jp
rolb
call
xor
inc
pop
or
mov
scas
jmp
mov
aas
jl
inc
dec
lods
cmp
std
mov
mov
xchg
lock
jge
adc
add
mov
cwtl
sti
jecxz
and
sbb
adc
dec
mov
pop
push
push
and
repnz
in
adc
adc
out
lds
cli
daa
inc
jbe
iret
jl
in
lret
inc
shrl
orb
mov
add
mov
mov
mov
mov
jb
xor
or
or
xor
mov
mov
adc
mov
out
mov
arpl
pop
xchg
fcoms
xchg
push
mov
dec
mov
dec
stc
dec
xchg
iret
and
dec
shl
mov
inc
push
pop
ficoms
mov
lea
shlb
rcrb
mov
loope
sarl
and
xor
pop
jo
std
xchg
mov
jmp
inc
movsb
rolb
or
push
cmp
daa
gs
lcall
or
sbb
imul
or
jo
push
mov
ret
sub
xor
adc
jo
mov
xchg
test
dec
jge
push
out
pop
int
jg
aad
push
mov
push
and
std
adc
sbb
pop
sub
add
or
pop
sbb
push
addl
inc
dec
int3
sbb
ljmp
negl
sti
add
rorb
daa
cwtl
addl
pop
mov
pop
loope
rclb
adc
faddl
and
repz
stc
mov
call
outsl
test
cmp
testl
ljmp
xchg
mov
push
xchg
sbb
repnz
xor
pusha
in
xor
jns
push
out
sbb
pop
fcoms
fs
jle,pt
cmpsb
call
mov
sbb
dec
adc
arpl
pop
cmpsb
jae
leave
push
sub
divl
cmp
xchg
leave
test
movd
push
cmp
lret
mov
iret
xchg
mov
es
lcall
pop
lret
cmp
in
hlt
popf
sarl
das
fldt
fs
dec
test
push
inc
ret
sub
jno
shll
popa
cmp
and
and
in
and
hlt
test
sub
xchg
ret
xchg
call
pop
pop
cmpsb
jnp
push
xlat
pushf
mov
rorl
fnstcw
lock
popa
adc
pop
cmp
add
pop
adc
arpl
jmp
dec
sub
sbb
int3
push
xchg
or
mov
sub
xchg
mov
xor
jo
pop
and
sahf
decb
jmp
mov
pushf
cltd
jg
cmp
add
push
cmpsb
andb
push
push
sti
int3
leave
out
adc
in
cmpsl
insb
push
std
pop
or
fsubrl
mov
shlb
sbb
xchg
or
and
xor
jmp
add
addl
or
add
cmpsl
sbbb
mov
aas
mov
pushf
lcall
sbb
push
push
pop
cmp
sub
xchg
jg
mov
inc
jecxz
fdivr
dec
aad
inc
xor
pop
stos
mov
bound
popa
shrl
cmpsb
insb
sbb
inc
int
xchg
das
pop
popf
out
leave
sbb
cld
fildll
dec
pushf
loope
int3
xor
mov
cmp
or
push
dec
scas
lea
or
outsb
lret
inc
sbbl
gs
shll
test
fs
xchg
stos
cli
imul
rcr
pop
cmpsl
jl
xchg
xchg
rep
add
aad
push
pop
insl
in
inc
ret
adc
and
push
cwtl
jp
test
gs
insb
shlb
call
adc
push
sar
sbb
push
push
push
mov
imul
mov
incl
push
dec
sub
data16
scas
cmp
pop
rorb
clc
lds
and
xchg
lahf
cltd
dec
leave
push
xchg
jle
cs
push
mov
push
push
cmp
test
movsb
jns
test
cmp
or
sbb
or
scas
out
sarb
sub
gs
pop
call
ret
mov
jg
jmp
xor
lea
push
push
jmp
notl
sub
pop
mov
xchg
in
push
jno
out
dec
nop
lea
shll
out
sbb
dec
or
jp
adc
adc
hlt
inc
dec
pop
in
sti
fldl
xchg
arpl
adc
sarl
mov
dec
mov
or
xchg
push
dec
push
aas
push
arpl
fnstcw
pop
cmp
inc
xor
add
xor
jnp
insl
outsl
fildll
xchg
data16
sub
and
xor
mov
jbe
push
mov
movsb
cmp
aas
repz
in
sbb
push
jno
inc
sti
out
push
fldl
stc
repz
or
daa
cli
test
nop
lret
or
mov
sbb
jmp
push
hlt
jl
stc
adc
fwait
dec
add
push
jecxz
dec
loop
not
jmp
cmpsl
fmull
mov
mov
ljmp
inc
push
daa
jmp
lods
or
xchg
xlat
aam
sarb
jo
popa
iret
ret
or
or
xlat
cmp
decb
ficompl
and
test
ret
xor
cmpsl
scas
sbb
xchg
xor
ret
out
push
ret
add
cmpsb
cmp
push
lods
push
in
jae
loop
aas
jnp
and
fdivs
inc
shl
add
jae
jns
push
aam
xchg
sbb
mov
daa
icebp
adc
leave
inc
xorb
jl
rcrl
das
in
shlb
bound
dec
fwait
inc
mov
add
push
xchg
fwait
insl
push
jecxz
rorb
push
nopl
add
mov
in
sti
mov
daa
mov
xor
cltd
mov
imul
ss
cmp
cmp
enter
stc
inc
xlat
loope
xor
pop
mov
insb
or
pop
xchg
das
lods
ds
push
adc
ret
adcl
movl
sbb
push
shlb
or
add
orl
mov
scas
dec
sbb
add
cmp
into
lods
sahf
mov
std
sbb
push
mov
sbb
sbb
pop
into
lock
dec
push
dec
dec
mov
xchg
mov
pop
adc
enter
dec
sbb
lock
pop
push
repz
out
test
fldenv
popa
orl
gs
jo
xor
repz
call
into
imul
jecxz
packuswb
inc
adc
pop
pop
imul
and
movsb
stos
pop
movsl
mov
cmp
insl
sbb
aas
es
jnp
ret
in
xchg
mulb
mov
les
add
loopne
shll
ljmp
adc
mov
adcl
aas
mov
jns
mov
mov
jl
cld
dec
jmp
outsl
aaa
mov
pop
push
xor
inc
or
roll
daa
cltd
mov
sub
movsb
pop
xchg
dec
xor
int3
addb
cltd
and
loope
xchg
push
jle
fildll
adc
jno
cmp
sti
add
mov
adc
xchg
or
cmp
movsl
sub
mov
loope
shlb
cwtl
call
sub
sbb
mov
sbb
fucomp
push
inc
push
mov
dec
push
pop
bound
mov
sbb
aam
pop
add
aas
cmp
aaa
xchg
mov
dec
push
adc
pop
out
push
jge
pop
cmp
insl
stos
repz
lock
push
fisubl
xor
mov
mov
xchg
idivb
inc
cltd
fisubl
outsl
push
push
xor
xor
cmpsb
dec
jg
fldl
jns
cs
cli
xchg
int3
incl
clc
cmc
sbbb
dec
jmp
and
dec
stc
xchg
cmp
fwait
and
popf
loope
dec
sub
pop
sub
add
jge
aam
mov
pushf
mov
add
andl
loop
mov
add
push
mov
push
or
pop
addr16
faddp
mov
and
add
push
cmp
aaa
fsubrp
push
into
call
or
lcall
mov
movsl
or
ja
cmc
outsb
nop
ficoml
sub
lcall
aam
fwait
je
cmpsl
dec
fwait
daa
adc
jecxz
sbb
pusha
icebp
and
jle
sbb
mov
fisubl
inc
mov
test
push
fs
mov
and
sti
and
push
out
loopne
mov
or
cmc
fadd
xchg
je
xchg
sub
outsb
stos
pop
sub
sbb
lock
scas
pop
int
pop
mov
dec
test
pop
aas
nop
inc
fistpll
inc
nop
int
es
ss
mov
lods
xchg
sti
fstpl
push
mov
xchg
fs
xchg
jne
insl
xor
pop
cmp
mov
dec
mov
movsl
cmp
dec
mov
push
sub
loop
xchg
add
nop
movsb
stos
ljmp
mov
xlat
jmp
dec
or
cmpb
outsl
or
ds
push
repnz
int3
cmc
push
adc
mov
pop
push
test
jo
mov
into
mov
mov
aaa
bound
aam
lahf
xor
sub
rorl
lods
leave
cmc
push
les
push
cmc
lcall
notl
mov
nop
and
mov
pop
jge
sbb
les
xor
clc
push
loope
arpl
pop
subl
dec
aad
nop
mov
and
xor
pop
pop
cmp
sub
insb
icebp
dec
adc
xlat
hlt
sub
lcall
add
cmp
sbb
lock
cmp
es
dec
mov
popa
dec
push
ljmp
pushf
into
mov
cmp
push
enter
and
outsl
dec
sbb
insb
mov
fisttps
add
pop
aad
and
loopne
jne
mov
push
gs
lods
adc
lods
mov
lahf
mov
push
xchg
daa
adc
je
enter
lret
lret
iret
xor
push
lahf
adc
movb
inc
clc
pushl
int
test
aas
nop
xchg
ss
jnp
xchg
sub
ret
out
push
dec
movsb
rolb
nop
cld
pop
out
push
filds
push
push
add
daa
push
test
push
gs
jecxz
shll
les
iret
jno
mov
cmovne
jnp
push
into
inc
ja
fistps
or
xlat
push
aaa
mov
xchg
xor
shll
adc
sbb
shll
push
push
jo
push
mov
cmp
dec
add
push
je
mov
outsl
sbb
mov
into
pusha
addl
sbb
push
pop
nop
aas
push
stos
jae
sbb
xchg
and
insl
aaa
nop
add
mov
inc
mov
mov
loopne
push
mov
sbb
lods
stc
sahf
lcall
add
pop
sub
cmp
pop
es
pop
in
sbb
push
cli
mov
out
and
test
cwtl
dec
scas
mov
cltd
mov
arpl
jmp
insl
ret
in
xor
xorb
sub
fcoml
push
jl
sub
fmuls
lcall
stc
push
pop
sbb
das
shrl
imul
or
enter
lret
in
mov
mov
rorb
insl
sub
loop
or
xchg
mov
test
aam
and
push
popa
ljmp
cmpl
pop
shll
or
shll
shll
fwait
cmpsb
add
cltd
into
stos
repz
jne
pop
mov
push
bound
cmp
mov
mov
pushf
or
loop
push
jecxz
cmc
shll
outsb
dec
lods
pusha
scas
push
adc
scas
and
jbe
stc
jl
insl
aaa
xor
sbb
mov
scas
test
sahf
fs
int
push
je
or
lret
pop
mov
out
jge
pop
ret
into
push
inc
jnp
call
push
leave
and
lods
sbb
out
push
push
cli
sbb
jnp
or
sub
test
adc
inc
sbb
adc
adc
push
dec
jg
fstpl
mov
imul
adc
enter
aaa
mov
xchg
dec
orl
gs
push
stos
mov
xchg
ret
add
rcl
cmc
rclb
mov
add
push
sbb
adc
hlt
mov
or
loopne
lret
jb
clc
adc
jae
inc
pop
clc
sar
ss
mov
popf
inc
icebp
and
and
mov
mov
cmp
sub
mov
xchg
pop
inc
pop
fbstp
es
out
adc
or
adc
xchg
push
testb
fsts
mov
or
jmp
mov
mov
sub
adc
add
mov
jmp
bound
xchg
add
imul
adc
sbb
inc
xchg
xor
dec
das
dec
int3
inc
jnp
xbegin
cmp
inc
xchg
in
push
mov
inc
inc
in
pop
push
icebp
cmpb
and
mov
push
out
cmp
mov
subl
sbb
dec
std
jle
loop
aam
mov
out
xlat
pop
sbb
or
fcmove
lcall
dec
or
insl
inc
cmp
daa
mov
aam
pop
frstor
xchg
xchg
jb
pop
sbb
or
inc
dec
push
fcompl
jae
lcall
cmpsb
popf
shl
and
into
loop
out
jo
and
icebp
mov
mov
fcmovb
fidivrl
or
pop
cmp
xor
pop
xor
adc
add
movsb
iret
inc
les
leave
jmp
jbe
fisubrl
into
inc
fists
loop
std
lock
sbb
fwait
or
leave
ror
ss
push
mov
cmp
and
cli
push
xchg
jge
adc
mov
fildll
push
fs
push
and
dec
outsl
xchg
sbb
in
push
je
push
pop
aaa
inc
insl
xor
adc
push
dec
jecxz
mov
dec
dec
xchg
push
xchg
jp
pop
push
sub
and
daa
repnz
jmp
lahf
mov
or
mov
lahf
jp
insb
aad
imul
call
fdivrl
mov
mov
ja
out
rcl
mov
ss
sbb
imul
push
mov
dec
dec
mov
mov
shlb
sbb
mov
jae
jge
xchg
popa
inc
pop
outsb
pop
xchg
and
mov
or
nop
jne
sub
in
scas
idivb
loop
sub
mov
fdivr
pop
inc
dec
mov
jmp
int
rclb
mov
jmp
and
test
test
sbb
movsb
push
addr16
cmp
push
mov
mov
and
inc
sbb
aam
iret
lret
mov
or
and
adc
scas
into
push
mov
fimull
add
adc
push
bts
inc
addl
fsubrp
sub
lock
xor
negb
cs
out
and
sub
sub
movsl
add
and
sub
push
add
or
inc
inc
inc
mov
add
out
rolb
add
cltd
insb
int3
xchg
stc
mov
aam
sbb
or
outsl
fwait
mov
push
pop
and
repz
aas
popf
inc
sbb
mov
adc
mov
mov
inc
xchg
sbbb
aad
daa
lds
push
add
nop
out
scas
xor
stos
jge
xchg
test
daa
popa
call
movsb
push
mov
movsb
rcll
dec
pop
scas
popa
nop
pop
ja
jg
and
jno
shrb
out
mov
pop
addr16
int3
mov
cmpsb
sbb
in
inc
jae
popa
fs
stc
cmc
loope
rcrb
lcall
pushf
or
pop
test
cld
inc
insl
jmp
daa
jo
or
data16
dec
aaa
dec
push
jmp
or
stc
nop
inc
lock
outsl
mov
mov
mov
mov
jnp
adc
out
ljmp
sub
xchg
mov
dec
fistpl
pop
inc
ljmp
mov
data16
hlt
jne
divb
jb
sbb
mov
mov
ficomps
sub
pop
inc
and
pop
inc
or
cmp
inc
push
jecxz
in
jg
and
adcb
call
adc
jg
jge
mov
jae
xchg
push
arpl
pop
inc
out
mov
pusha
andl
dec
sbb
mov
push
add
push
cmp
fcoms
ds
stos
mov
inc
inc
outsb
es
push
xchg
mov
sbb
sub
mov
cs
adc
dec
jo
xor
mov
stc
push
and
xor
enter
cmpsb
icebp
aad
xor
pop
xchg
add
adc
push
xchg
dec
cmp
inc
fucomip
fstpl
cmpsb
lcall
push
repz
addl
test
push
push
sub
divl
bound
or
mov
xchg
pop
std
add
fs
repz
repnz
inc
push
cmp
mov
jno
roll
cmpsb
scas
subl
mov
xchg
mov
xchg
adc
push
and
fcomp
xorl
jne
mov
cmp
fdivs
icebp
pop
adc
and
adc
push
xor
jae
add
icebp
mov
adc
push
add
jno
popa
xor
inc
add
arpl
jae
add
icebp
mov
adc
push
add
jno
popa
xor
inc
add
arpl
jae
add
cmc
mov
test
mov
nop
repz
inc
and
adc
push
mov
mov
cmp
loope
out
or
sbb
or
push
cmp
sub
cmp
add
push
iret
inc
aaa
jo
pusha
cli
cwtl
or
cmp
dec
rcrb
loopne
inc
mov
lcall
and
jo
pusha
cli
dec
lods
add
ss
dec
sarb
fsubl
dec
adc
inc
enter
mov
rorl
pop
hlt
jns
pop
pop
inc
test
and
add
call
add
mov
or
pop
aas
rcr
xchg
test
lret
ljmp
in
mov
bound
lret
mov
test
decl
scas
cmp
cmpl
cmp
int
cmc
cmp
pop
aas
push
stos
loop
add
push
fistpll
gs
jge
dec
xlat
pusha
lds
jns
pop
mov
test
shrb
and
mov
adc
in
pop
add
test
call
jl
rcl
mov
jo
mov
pop
int3
cmp
dec
test
push
call
call
negb
jo
add
loop
divb
inc
into
push
mov
pop
cmpl
cmp
daa
xchg
nop
dec
or
imul
mov
dec
sub
inc
out
push
clc
dec
mov
test
mov
jns
cli
rolb
xchg
push
rcrb
loopne
adc
and
jo
pusha
cli
nop
or
cmp
dec
rcrb
loopne
adc
and
jo
pusha
cli
nop
or
push
call
pushf
sub
test
lds
les
popa
pop
mov
cmpsl
xchg
sub
ljmp
pop
insl
idivb
movsb
mov
cmp
subb
aaa
popa
out
adc
mov
inc
lret
xchg
cmp
adc
or
xchg
test
adc
insl
pop
int
or
ret
xor
int
movsl
xchg
mov
andl
or
arpl
in
add
pop
mov
clc
insl
sub
lcall
aad
push
fdivrp
xor
cmc
pusha
pop
or
dec
lahf
leave
negl
adc
cmpl
add
shl
mov
push
daa
add
divb
cmpsb
push
es
jne
fcompl
adc
loopne
jle
fwait
call
in
adc
ficomps
je
pop
addr16
stc
into
shufps
clc
sbb
lods
mov
add
addr16
sub
mov
arpl
fidivs
mov
mov
std
jmp
xor
fwait
ret
push
clc
add
pop
or
jmp
hlt
scas
shlb
push
mull
push
xchg
es
inc
in
das
jo
adc
mov
xchg
xchg
mov
repnz
fwait
or
popf
dec
or
mov
mov
inc
inc
out
pop
xchg
jae
push
shrl
bound
mov
fwait
jge
outsl
xchg
mov
or
jns
mov
mov
sub
rolb
enter
sbb
cwtl
push
push
scas
imul
jo
loopne
je
and
lea
pushf
push
cmpsb
call
cmpb
mov
add
test
es
popf
test
cmp
pop
cli
push
add
dec
push
and
push
mov
popa
xor
mov
imul
gs
xchg
push
je
push
shlb
inc
and
lods
sbbl
aaa
sub
clc
inc
notl
fwait
fs
std
outsl
sbb
and
fisubrs
inc
and
lods
and
loopne
std
jle
dec
iret
ds
popl
stc
xchg
adc
xor
lcall
inc
pop
clc
pop
pop
cmc
push
mov
pushf
inc
sub
frstor
push
les
add
sub
ror
mov
into
push
add
adc
pop
sbb
jp
out
push
mov
ret
pop
pop
dec
ljmp
fisubs
mov
scas
repz
dec
xlat
jg
lret
jae
nop
xor
ret
xchg
aas
xor
sub
cmc
pushl
dec
fists
enter
sarb
fsubrs
lods
call
subl
sbb
sbb
sub
adc
cmpsl
fidivrl
adc
mov
cs
xlat
mov
lods
lds
jno
fidivrl
mov
sub
lds
add
insb
pop
sbb
ret
pop
pop
adc
mov
xor
or
sub
jl
test
dec
push
jmp
mov
mov
add
pushf
out
jmp
mov
pop
lcall
int3
pop
fstpl
mov
sbb
push
adc
push
mov
inc
sbb
loop,pt
test
int3
or
sub
jmp
out
in
icebp
test
inc
addb
roll
sbb
xchg
push
pushf
movsb
das
mov
std
int
and
bound
jns
pop
stos
decb
inc
push
xchg
dec
adc
mov
jg
xor
push
adc
cmp
jecxz
or
out
and
jns
pop
xchg
ds
mov
push
inc
jns
mov
ja
cmpsb
pop
sar
call
cmp
lea
and
xchg
lcall
sbb
cld
aas
lods
cli
loopne
sub
cmp
jmp
jl
aas
dec
faddp
ss
push
cli
sub
mov
lcall
int3
push
add
adcl
les
std
add
jl
ljmp
push
push
jge
enter
dec
push
pusha
stos
imul
push
test
mov
jbe
cmp
dec
and
cltd
push
rolb
rorb
rcll
xor
leave
xchg
sbb
mov
pop
aas
jnp
cwtl
jl
pop
and
out
popf
test
int3
into
lahf
movsb
xbegin
or
add
lock
loope
mov
xchg
in
jnp
lcall
fwait
or
push
cmpsl
push
sbb
dec
adc
jno
or
int
out
add
add
loope
pop
mov
fs
pop
sbb
push
lahf
aam
jno
push
shr
xchg
mov
mov
mov
clc
into
cmp
lock
gs
std
hlt
mov
fidivrl
call
xor
add
pop
aam
jl
mov
push
addr16
nop
daa
fnstsw
jne
popf
add
stos
popfw
cmp
ret
cmp
jge
cmp
dec
mov
cwtl
lret
repnz
stos
insb
or
ret
orl
fisttpl
sbb
mov
aam
jae
arpl
je
dec
inc
fmull
adc
pop
jbe
imul
fdivrs
sbb
and
dec
mov
into
out
mov
shlb
enter
and
mov
xor
dec
mov
add
bound
shl
pop
adc
shr
hlt
or
pop
ja
add
jl
sahf
jge
loop
cmp
and
fwait
jne
xor
repnz
les
insb
test
pushf
ja
or
pop
mov
sub
cmpsl
fildl
gs
sahf
repz
jae
xchg
loop
mov
hlt
lock
int
in
popa
cmp
js
adc
in
push
mov
sti
sub
xor
and
leave
xor
adc
xchg
sarl
pop
or
jnp
adc
ljmp
cmpsb
test
lods
nop
dec
pop
aaa
mov
push
out
mov
inc
inc
jns
push
outsl
icebp
test
in
mov
int3
sub
lock
xor
arpl
subl
in
rcrl
jae
cmc
jp
pop
shll
sbb
mov
xchg
in
ret
lret
int3
fcmovne
movsb
xor
and
sbb
in
loope
push
adc
fisttpll
stc
pop
cmpsb
dec
mov
inc
psrlw
lods
pop
pop
xor
lods
gs
mov
dec
xchg
pop
jnp
gs
xor
push
ret
and
pop
adc
jl
mov
cmp
out
jmp
loope
in
outsb
enter
aaa
clc
fsubrl
mov
dec
xor
sti
xor
popa
mov
mov
call
jbe
push
push
imul
inc
bound
pop
sbb
and
mov
dec
in
fadd
sarl
repnz
lods
and
int
test
mov
mov
arpl
push
lret
pushf
push
add
out
mov
gs
sbb
mov
push
push
jecxz
pop
dec
adc
stc
je
leave
ficoml
sub
mov
ljmp
xor
daa
fwait
and
dec
fdivl
pop
or
sahf
fs
adc
lret
inc
fwait
inc
decl
cmp
add
adc
sub
cli
xlat
xchg
or
or
dec
fiadds
sbb
sub
cmp
lods
add
jle
sbb
popf
sub
mov
or
xchg
cmp
stos
sbb
iret
jmp
shrb
mov
push
out
aaa
push
add
inc
lods
repnz
test
push
pushf
xchg
scas
psllw
cli
lcall
push
xor
mov
mov
pop
mov
jae
nop
xchg
and
movsb
push
js
mov
loope
testl
dec
addr16
pop
fistl
test
std
ljmp
lahf
rcrl
in
mov
push
cmp
aaa
add
push
mov
stos
scas
cmovle
sbb
inc
or
rol
cmp
fsubrp
out
xor
add
mul
rcrl
cmc
rcrl
push
outsl
lods
mov
add
scas
pop
cmpsl
in
lret
sub
insl
cmp
push
cmp
mov
mov
shll
pop
jns
or
ret
push
sti
in
pop
cmc
cmp
icebp
jae
out
cmpsb
sahf
outsb
pop
push
fbstp
sub
fxtract
add
movsb
xchg
pushf
iret
movsl
orl
mov
sub
divb
inc
or
jmp
incl
xchg
jmp
mov
popf
mov
fstps
in
dec
pop
push
pop
mov
push
ljmp
sub
sub
aaa
xor
pop
xchg
adc
pop
xchg
jecxz
les
jge
mov
jns
and
repnz
call
mov
pusha
mov
inc
sub
or
jbe
imul
pop
mov
and
in
pop
sbb
mov
mov
stc
and
pop
sahf
stos
fs
push
xor
imul
jmp
sbb
rclb
sti
xor
dec
xchg
movsl
dec
sub
inc
dec
mov
mov
lret
faddl
stos
outsb
push
call
sbb
mov
stc
mov
dec
into
scas
and
out
lods
inc
fs
pop
out
in
dec
lods
sub
imul
fwait
xchg
and
inc
nop
out
sahf
adcb
xorb
fistps
mov
push
inc
fimuls
pop
nop
call
mov
jno
std
cmp
push
cltd
mov
add
mov
mov
sub
into
xor
push
dec
stc
sbb
fs
and
out
negb
pop
lcall
sub
fwait
lods
push
sbb
jnp
xlat
mov
pop
lods
mov
inc
xchg
push
jo
nop
aas
push
mov
scas
or
mov
xor
mov
ljmp
xchg
mov
mov
jmp
inc
cmp
push
fcoms
xchg
dec
cltd
addl
and
aaa
leave
int
and
cs
cmpsb
es
insb
decl
xchg
or
xlat
jb
or
fnstsw
imul
add
aaa
sbb
fsubr
aas
jb
std
cmpsb
xchg
jmp
popa
stc
and
mov
xor
int3
pusha
xlat
xor
bsr
mov
mov
jl
xor
and
test
or
les
enter
sub
and
clc
xor
xor
and
lcall
pop
push
mov
pusha
jbe
xchg
cmc
xlat
aaa
daa
out
add
test
das
or
insb
push
test
dec
cltd
jo
xchg
inc
insb
sub
jno
cwtl
xor
cli
gs
insl
mov
xchg
mov
sbb
mov
or
lods
ljmp
mov
and
insb
adc
xor
jmp
or
fstps
xchg
jmp
xor
filds
cmp
inc
dec
lret
setnp
aam
xor
stc
shl
jle
mov
mov
iret
dec
cmp
je
sub
pop
add
mov
lcall
sbb
cmpsl
std
out
and
pop
sub
cmp
lock
sub
into
jbe
es
jne
dec
jo
sahf
cld
outsb
mov
pusha
pusha
in
dec
cs
rcll
xchg
iret
jae
in
pop
cmp
mov
cmp
fcomps
xchg
pop
pop
sub
jmp
addr16
je
mov
jnp
cmp
add
test
sbb
cmp
insl
out
sbb
jnp
fiaddl
mov
sub
leave
test
fmul
add
inc
xchg
mov
ljmp
into
sub
mov
icebp
mov
mov
sarb
pop
sbb
aad
lods
sub
dec
fnstsw
aam
es
mov
jbe
push
xchg
loopne
push
xchg
cmp
mov
inc
mov
jge
fisttpll
xchg
push
icebp
nop
aaa
rcrb
addb
mov
mov
sub
adc
jmp
outsl
lods
jl
dec
test
mov
cmc
inc
ret
or
jg
push
lret
negb
call
pop
movsb
fmuls
mov
jno
xchg
movsb
repz
push
outsl
mov
orl
loope
jb
aam
dec
xchg
iret
xchg
mov
rorl
dec
aaa
xchg
arpl
jb
add
imul
mov
ja
movsb
dec
push
and
dec
cmc
mov
pop
cmp
adc
decb
out
sub
arpl
leave
imul
cmp
jmp
negl
aaa
xchg
inc
clc
and
mov
xchg
lods
mov
jb
inc
cmpsl
cmp
inc
cmp
xor
and
enter
cs
fs
mov
mov
cld
mov
fsubs
aaa
pop
sti
push
out
insl
mov
dec
xor
jg
sub
dec
mov
mov
inc
pop
pop
mov
jo
pop
cmp
push
fisubrs
popa
in
ja
loope
and
jne
sub
cs
jb
or
loop
jno
jo
push
lea
push
mov
mov
lcall
sub
sti
cmp
fs
push
inc
xor
push
lret
xorb
xchg
ds
or
dec
addr16
in
pop
mov
iret
adc
xchg
add
cmc
mov
and
ret
into
insl
out
push
sbb
call
flds
pop
mov
jns
lods
cmp
xor
adcb
mov
lea
test
and
push
mov
and
mov
dec
cld
sbbl
dec
xchg
sbb
lods
pop
mov
outsl
xchg
ficoml
rcrl
pushl
cmp
mov
and
sub
out
mov
lea
sbb
push
xor
scas
in
sbb
and
jl
call
fsubrp
xchg
xor
dec
insb
in
shll
cmp
daa
ss
pusha
aad
xor
xchg
sbb
sbb
xchg
mov
pop
insb
mov
call
icebp
inc
call
or
cmp
or
adc
stos
adc
cmp
push
pop
pop
pop
in
dec
in
test
outsl
repnz
adc
std
cmpsb
mov
mov
je
and
fbld
jae
scas
out
imul
stos
bswap
fcomps
cmp
mov
jmp
xchg
sub
rorl
shll
mov
mov
pop
aam
sub
xor
mov
sub
cmp
push
fldcw
push
rcrl
or
mov
and
je
shrb
cld
xchg
cmp
adc
stc
add
ret
dec
xchg
cli
adc
pop
cmp
loope
incl
out
out
pushf
lret
out
add
cmp
ss
pop
jae
sti
je
hlt
mov
inc
lret
rorb
jl
mov
enter
mov
imul
mov
mov
mov
fists
aas
stos
mov
shlb
push
xchg
xor
shlb
push
mov
or
and
out
xchg
lret
mov
add
sbb
out
outsl
fadds
arpl
je
packssdw
push
sbbb
sub
jp
data16
mov
fwait
pop
aam
lea
ja
je
sbb
add
negl
xchg
movsl
scas
push
or
mov
arpl
repz
enter
lods
mov
loop
in
movsl
imulb
pop
add
sub
fldenv
psrad
lods
loope
lock
pop
push
int3
add
sar
and
in
jb
pop
je
jno
push
ss
or
imul
loop
and
or
aad
negb
cmp
mov
mov
icebp
leave
mov
testb
xor
imul
fldenv
mov
lock
cmp
cmp
jle
aaa
jnp
add
int
cmp
les
arpl
and
add
addr16
sub
xchg
xchg
outsl
mov
pop
into
dec
outsb
push
or
sbb
xor
mov
or
push
inc
mov
xchg
lahf
fistps
enter
adc
dec
xor
in
call
push
stos
and
xchg
push
fisubl
jbe
stc
inc
or
cmc
sub
jns
lea
ret
notb
lret
xchg
popa
hlt
out
das
fimull
xor
mov
clc
addb
push
jae
jne
xor
ljmp
pop
xchg
addr16
dec
fisubs
and
xor
pop
dec
dec
inc
mov
loope
std
mov
add
out
loopne
sub
dec
ljmp
pop
jb
add
mov
inc
sub
and
popa
mov
and
ficompl
cmpsl
sar
or
sub
movzbl
push
or
sti
movsb
mov
ja
and
lret
adc
testl
movsl
cmpsl
sbb
jp
sbb
inc
xchg
pop
sub
xchg
xchg
out
xor
fstl
sar
aad
movsb
push
int
imul
xlat
lret
adc
mov
mov
dec
inc
es
mov
ret
das
pop
mov
ljmp
push
scas
fdivrs
idivb
repz
push
mov
scas
iret
rcll
and
dec
cltd
cwtl
mov
ljmp
mov
fs
sbb
cmp
cmpsl
xchg
and
aam
pop
inc
lcall
jb
jo
inc
test
test
imul
enter
xor
push
dec
xchg
mov
sub
mov
stos
aaa
leave
mov
shll
inc
or
mov
mov
pop
add
pop
cmp
xor
jg
je
xchg
cmp
push
fiadds
cmp
loope
ret
sar
lock
pop
dec
in
xchg
and
push
loope
out
lock
dec
sbb
inc
add
jno
pop
jge
in
sti
clc
mov
jg
enter
inc
int
dec
cmp
push
mov
mov
shlb
pop
lret
xor
fwait
mov
sub
add
out
mov
leave
test
cmp
cmp
mov
add
push
fcomip
dec
sarl
push
xchg
test
dec
popa
out
shrl
popa
rol
xchg
cmp
add
fnstcw
pop
dec
sub
adc
sub
xor
mov
imul
push
es
mov
mov
or
fildll
xor
mov
incl
xchg
imul
sub
xorl
pop
mov
cld
cld
lea
stos
jnp
fwait
out
popa
mov
inc
les
jge
std
icebp
pop
loopne
mov
cmp
mov
sarb
enter
jae
pop
sti
inc
jns
or
or
fwait
pop
jp
negl
je
cltd
or
ja
js
xchg
add
xchg
sbb
mov
jns
sahf
cmp
adc
test
sub
ljmp
sub
fwait
xchg
jecxz
fs
dec
stos
xchg
ss
insb
test
or
hlt
pop
add
fldcw
jb
jo
insl
push
jge
fsubrs
ss
add
test
push
pop
movsb
fcomps
dec
xchg
jbe
aam
outsb
lock
pop
outsb
sbb
sbb
cmp
nop
xchg
inc
lret
mov
iret
dec
push
loopne
subb
imul
xchg
pop
xorl
lahf
fwait
sahf
aas
sbb
sbb
loop
je
outsb
xor
sbb
inc
mov
add
clc
aaa
xchg
jmp
cmc
jmp
aas
sub
xor
jle
ljmp
scas
xchg
jp
xor
adc
sub
push
cmp
leave
repz
in
in
mov
push
mov
cmp
lret
and
stc
xor
out
in
xor
and
enter
adcb
imul
sub
imul
pop
dec
ds
out
xor
inc
in
jecxz
and
outsl
rcr
cmp
xchg
jle
mov
vandnps
dec
pop
push
pop
pop
dec
sti
mov
dec
push
adc
aad
mov
sub
pop
dec
dec
xchg
adc
leave
and
outsl
aad
or
or
outsb
aas
js
out
loope
stc
test
andb
xchg
insl
mov
mov
shlb
mov
mov
lds
or
adc
sub
addr16
lahf
call
aas
aaa
cmp
push
int3
push
adc
inc
push
lcall
mov
mov
mov
imul
mov
sub
ds
daa
rcll
cmc
push
std
sti
das
dec
mov
jne
mov
sbb
into
sbb
das
mov
pop
lock
jp
mov
lcall
inc
fidivl
pusha
cli
nop
or
cmp
dec
rcrb
loopne
adc
and
jo
pusha
cli
nop
push
adcl
mov
xor
outsb
loope
adc
add
push
into
pop
fidivl
push
mov
lods
cmp
mov
dec
rcrb
ljmp
lcall
mov
nop
push
xor
adc
in
add
cmpsl
add
or
add
add
add
add
push
add
inc
add
xchg
add
add
add
add
add
add
add
add
add
rolb
addl
jns
out
jge
or
add
add
add
add
mov
add
add
add
or
or
inc
add
add
cmpsb
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
cmp
les
clc
add
add
add
add
add
add
add
add
add
adc
push
add
fldl
enter
lret
add
add
add
jp
add
dec
add
popa
add
movsb
add
sbb
mov
jnp
adc
mov
add
popa
add
add
add
add
rolb
aad
jo
fldl
imul
add
add
add
add
popa
add
add
add
push
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
add
add
push
sub
adc
add
push
add
add
jbe
push
dec
add
add
add
dec
add
add
rolb
out
push
add
add
pop
add
inc
add
xchg
add
cwtl
add
add
add
add
rolb
add
add
push
add
sbb
sbb
rolb
add
stos
add
add
jns
lldt
add
add
add
add
add
add
les
sbb
imul
out
fadds
enter
xor
inc
add
add
add
add
add
add
xchg
add
jge
aaa
add
or
add
xchg
add
push
push
add
add
lcall
add
add
add
and
add
add
add
xor
or
and
nop
add
add
add
add
add
add
add
add
add
add
add
add
sub
in
add
nop
add
add
add
add
mov
add
xor
mov
add
repz
add
add
add
add
add
add
add
inc
add
add
imul
add
aad
aad
xor
push
add
add
sbb
jo
add
mov
add
out
cmp
ja
aam
test
add
add
add
add
add
add
adc
imul
roll
jns
and
popl
jbe
adc
les
cmp
jns
add
add
add
add
add
add
and
add
add
add
xor
rolb
jle
popa
add
pop
add
add
xor
sub
inc
add
add
inc
add
add
jb
inc
add
adc
pusha
add
add
or
inc
add
push
add
add
add
add
add
aad
aad
pop
add
add
add
dec
add
jb
nop
add
add
add
add
sbb
test
sub
aad
pop
add
add
push
add
add
add
add
add
add
add
aad
aad
jo
adc
test
add
pop
add
fiadds
xor
filds
mov
add
add
fcmovu
in
cli
mov
lods
push
ds
mov
push
cltd
dec
xor
xchg
stos
outsl
mov
in
xchg
mov
mov
rcrb
pop
inc
push
sti
mov
adc
xor
out
mov
mov
adc
ret
jl
add
iret
push
inc
mov
addr16
pop
and
pop
jo
xor
cs
push
mov
push
es
out
mov
arpl
out
xchg
int3
mov
mov
sarb
roll
stc
mov
cltd
lock
jp
xor
inc
dec
cs
pop
in
imul
jmp
outsb
cmp
andb
sub
clc
mov
loopne
xlat
dec
ret
jnp
xor
or
fmull
shll
jl
or
sub
hlt
cmp
icebp
lcall
add
or
jae
loop
push
xchg
lcall
push
lods
xchg
imul
or
lret
dec
jmp
pop
in
scas
arpl
in
push
xchg
clc
rclb
jmp
sbb
sub
and
push
inc
jl
dec
shll
push
mov
ja
addb
or
aas
push
and
cmp
or
test
mov
and
mov
lahf
mov
rcrl
ljmp
es
jb
into
incb
inc
jb
lcall
movsl
pusha
fwait
xor
and
mov
and
cmp
sub
lcall
pslld
shll
daa
cs
imul
icebp
dec
inc
scas
mov
mov
sarl
jle
sti
mov
xor
outsl
inc
psadbw
movsb
add
insl
sub
incl
sbb
jnp
jae
jle
jmp
fwait
idivb
js
xchg
std
cltd
mov
ret
add
leave
sub
mov
and
push
pop
push
xchg
fsubrs
ret
cmp
test
adc
lods
inc
pusha
push
mov
cs
fimuls
pop
xor
not
mov
cmpsl
jbe
orb
add
pushf
xor
mov
stos
add
movsl
insl
test
xchg
mov
imul
fiaddl
jmp
sub
insl
jno
adc
lcall
mov
xor
notl
mov
rclb
xor
jle
das
jns
clc
test
mov
shll
imul
rolb
icebp
es
xchg
push
jnp
shlb
sahf
fisttpll
mov
test
dec
adc
mov
out
push
mov
sbb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
