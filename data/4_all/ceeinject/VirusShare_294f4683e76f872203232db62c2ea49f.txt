call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
push
jecxz
imul
xchg
pop
adcb
das
jmp
sti
sbb
stos
pop
mov
mov
or
sbb
sub
cmp
fwait
sub
sti
pop
mov
scas
stos
dec
mov
mov
sbb
push
out
xlat
ret
mov
lea
pop
stos
cs
adc
sbb
pop
or
or
addb
es
push
cmp
clc
movsb
fdivs
test
inc
out
mov
add
repnz
push
pop
repnz
in
add
push
dec
scas
xlat
adc
adc
push
ljmp
sbb
cmp
sti
sti
cmpl
xor
mov
lcall
in
push
jmp
mov
or
in
sub
mov
sti
out
add
push
cmp
cmpb
cmpsb
pop
xchg
jo
jg
iret
cwtl
add
jae
or
clc
pop
js
fwait
repnz
dec
into
mov
xchg
ficoms
jecxz
scas
cmc
ret
and
ljmp
or
mov
dec
js
pop
test
lahf
pop
test
out
pop
ljmp
add
aaa
dec
daa
xor
in
jmp
test
dec
fistpll
cmp
sub
sahf
gs
pop
mov
inc
lcall
add
sub
dec
cld
xor
sarl
bound
mov
push
lcall
sbb
cli
cmp
out
push
ljmp
cmp
lret
das
fstpt
jmp
sti
pop
mov
jg
dec
mov
mov
or
sbb
sub
cmp
lret
das
fstpt
jmp
sti
pop
mov
jg
dec
mov
cmp
scas
and
inc
shlb
jae
aaa
mov
and
pop
adc
or
fbstp
or
cmpb
mov
shll
jnp
cmp
and
cmpsb
xchg
push
faddl
outsb
push
mov
dec
xor
lods
out
enter
and
and
pushf
lds
daa
mov
mov
sbb
negl
xor
mov
xchg
push
in
test
pop
push
mov
or
add
and
data16
jecxz
movsl
or
jno
jmp
loopne
addr16
test
lods
cli
repnz
xchg
cwtl
dec
jae
inc
or
jg
ljmp
test
inc
fdivp
in
imul
push
sbb
xchg
adc
hlt
jnp
or
insl
loopne
pop
cmpb
shlb
lods
mov
and
call
mov
bound
and
inc
or
xchg
mov
pop
cmp
jg
or
mov
cmp
enter
lds
add
and
pushw
jmp
or
loope
jecxz
push
dec
daa
sti
and
sti
push
aas
jmp
out
pop
ss
jbe
call
out
lret
ss
bnd
sub
push
es
cmpsl
popa
ret
cld
xchg
sbb
int3
call
push
mov
fcom
out
xor
sub
adc
filds
gs
adcl
xchg
mov
jns
sub
adc
out
fists
pop
xor
stos
adc
mov
cmpsl
insb
jb
ljmp
fsub
and
lds
dec
inc
sbb
fwait
mov
cmp
mov
jae
push
push
push
dec
jb
mov
insb
daa
outsb
pop
ljmp
out
add
mov
adc
nop
insb
sub
push
push
cmp
push
ljmp
push
stc
test
add
adc
shrl
xchg
sahf
dec
lds
sub
test
sbb
repnz
adc
push
sbbl
repz
test
mov
loope
pushf
push
dec
add
test
repnz
pop
jns
in
mov
loopne
loope
pop
push
out
outsl
mov
cltd
jne
jns
push
inc
call
fsubl
scas
pushf
cmp
push
jne
sub
daa
fisttps
addr16
add
or
fsubrl
pushf
stos
out
xchg
and
xor
push
jae
jne
stc
mov
mov
out
fistpl
mov
inc
out
xchg
addr16
cmpsb
jb
mov
lea
test
dec
mov
or
push
sub
mov
in
xor
cmc
pop
pop
test
mov
lods
aam
flds
rcll
dec
xor
pop
lret
xchg
sub
leave
scas
fnstsw
into
out
mov
call
daa
adc
cmp
xchg
xor
add
lret
mov
js
int3
push
and
sbb
rcrb
mov
pop
or
add
mov
out
shrb
bound
aam
out
jle
push
ds
ror
fcom
movsb
cmp
push
test
aam
cmpsl
loop
and
mov
sub
cmp
dec
xorl
xchg
sbb
popf
mov
arpl
mov
jne
or
mov
daa
or
sarl
sbb
frstor
test
into
sahf
or
stc
mov
inc
frstor
sarl
sbb
sbb
mov
cli
cmp
adc
les
data16
dec
add
data16
stos
ja
fildll
es
fldt
stos
mov
out
mov
push
fxsave
out
xchg
pop
push
xchg
push
jb
and
cmp
or
jmp
or
rcll
inc
popf
clc
stos
sti
jb
test
xchg
out
aas
cmp
scas
dec
xlat
outsl
adc
jecxz
xor
inc
lea
test
fwait
inc
sub
aad
lods
and
add
mov
jb
dec
cmpsl
lods
in
sti
fdivrs
sub
jno
popa
or
imul
fimull
aam
stos
xchg
jno
sub
xchg
mov
sbb
addb
js
xor
ficoml
mov
lret
lcall
fildl
xchg
add
inc
testl
outsl
and
xor
ds
sbb
inc
mov
push
mov
jmp
cvtps2pd
leave
sub
push
or
sbb
jns
jnp
dec
enter
jb
fimuls
mov
stos
push
push
cmp
cmc
test
sub
lds
push
sbb
inc
xor
insb
test
push
dec
ljmp
jge
fldenv
iret
xchg
lds
cmp
push
shll
gs
xor
adcb
sub
in
push
sub
dec
mov
jecxz
fidivl
push
and
out
add
add
jne
dec
mov
outsl
jnp
pushf
dec
cwtl
ret
ljmp
es
daa
mov
clc
cltd
es
xchg
jnp
cmp
mov
fisttpll
push
stos
push
test
jge
xor
pusha
push
adc
sub
xlat
sbb
or
mov
fcomps
dec
mov
fcoms
pusha
adc
mov
jne
int
push
jp
aam
and
sub
sbb
std
lret
mov
fmul
pop
mov
loope
or
sub
les
testl
cmc
xorb
faddl
mov
data16
pushf
idivb
icebp
cmpsl
jg
rorb
inc
jbe
mov
dec
inc
test
shrl
clc
cmpsl
mov
call
mov
jne
push
xchg
xor
xor
dec
mov
jle
mov
into
cmp
aaa
inc
push
cmc
dec
ds
loop
or
xor
pop
pop
inc
cmp
sub
pop
dec
and
cmpb
lods
xor
jl
or
cmp
sbb
sub
mov
push
int3
jg
jl
add
push
fcoms
subb
mov
filds
mov
pusha
aas
jo
adc
and
rcl
jmp
fcomps
inc
xchg
add
mov
andb
jbe
push
push
mov
mov
push
mov
shrb
push
lock
jo
mov
test
loope
shrl
sti
push
inc
andl
imul
rolb
mov
xchg
dec
lahf
pop
mov
test
push
arpl
jns
sub
sbb
cmp
sbb
lods
mul
pop
mov
mov
xchg
adc
mov
mov
ret
add
xor
jmp
mov
cmp
pop
clc
mov
imul
mov
push
mov
sub
xchg
sti
mov
stos
leave
sbb
js
jne
ljmp
jl
adc
mov
stos
loop
std
js
pop
into
mov
pushf
test
and
xchg
outsb
xor
enter
adc
in
subl
inc
sbb
pushf
lret
sbb
int3
arpl
test
aas
adc
sbb
mov
aas
hlt
scas
sub
inc
mov
xor
arpl
ljmp
int
dec
ds
lcall
mov
mov
push
out
outsl
repz
pop
test
fists
add
inc
test
xor
repz
fisttpl
in
and
loope
in
add
gs
lods
cld
xchg
or
shr
push
pop
push
inc
pop
int3
or
mov
out
adc
rolb
pushf
inc
das
call
fstl
xchg
mov
and
orb
loopne
pop
jmp
mov
xchg
js
pop
jae
je
xchg
cltd
fsubl
cmp
add
data16
lea
lods
dec
enter
jmp
jae
cmp
outsb
sarl
popf
jmp
lahf
aaa
inc
pusha
mov
cmp
fcompl
mov
sub
jmp
cmp
cmp
dec
mov
mov
mov
mov
outsb
testb
int
dec
add
aas
inc
icebp
and
or
orb
cltd
or
sub
adc
pop
push
test
push
lahf
cmp
jbe
ret
or
mov
ret
repz
inc
js
lea
dec
xchg
cmpsl
add
arpl
out
lods
dec
or
add
xor
xchg
mov
mov
jge
sar
cld
mov
pop
loope
clc
push
loop
mov
adc
xchg
out
jecxz
and
cmp
gs
sbb
daa
inc
out
pop
sti
mov
xchg
loop
lret
jl
subb
aad
inc
into
data16
jle
jg
pushf
dec
inc
jo
dec
sbb
jbe
sbb
xor
insl
cmp
cmc
jmp
aam
dec
ja
cwtl
push
dec
stc
jle
fbstp
call
mov
gs
les
out
mov
add
mov
push
jl
push
sbb
inc
dec
jge
xchg
insb
cmpsl
and
fnstcw
mov
mov
aam
lods
cmovns
addb
iret
push
pop
stos
inc
cmp
jg
shlb
or
push
inc
pop
pop
imul
dec
mov
stos
iret
out
mov
out
jbe
adc
shl
fs
pop
in
mov
push
pusha
pop
mov
inc
lret
dec
jl
sbb
insl
rcr
xor
nop
nop
xchg
inc
in
and
push
adc
xor
sbb
xchg
scas
xchg
and
scas
adc
test
testl
not
inc
scas
outsb
adc
xchg
lods
dec
outsl
jl
test
mov
loop
into
pushf
add
pop
mov
mov
jecxz
add
dec
in
jo
inc
mov
mov
add
sbb
rclb
stos
adc
sti
std
cwtl
push
cmpb
mov
mov
negl
and
gs
stc
sub
mov
outsl
jge
shll
inc
insb
mov
push
fdivs
testb
fs
pop
data16
pop
inc
adc
jbe
les
aad
pop
push
jns
shll
mov
push
xor
aas
dec
scas
and
movups
mov
sub
adc
inc
xor
scas
mov
pushf
pop
lock
or
scas
pop
add
pop
adc
jg
mov
or
and
and
xchg
inc
popa
mov
mov
and
int3
into
ljmp
pop
mov
jns
out
leave
xchg
mov
mov
gs
insb
or
mov
jne
mov
je
jno
sbb
jp
andb
mov
mov
pop
sbb
stc
xchg
negb
dec
xor
rol
dec
xchg
into
psubsb
cmc
cmp
in
inc
addr16
push
push
pop
and
mov
roll
add
or
adc
jge
gs
inc
dec
push
jb
fstpl
je
jmp
xlat
mov
popf
test
jle
movsb
pop
icebp
pushf
lock
mulb
xchg
test
push
adc
push
cli
or
pusha
pop
mov
rorl
jae
or
cmc
shrl
lods
cs
mov
imul
mov
and
pusha
jnp
cld
inc
movsb
sbb
adc
inc
sbb
aad
in
dec
daa
sti
ljmp
cld
fnsave
insl
in
and
push
pop
adc
pop
dec
mov
lret
clc
scas
aad
ret
ret
xchg
mov
mov
push
xchg
ja
test
lods
sub
jmp
movb
cmc
stos
cmpb
xor
stos
or
xor
pop
out
xchg
daa
xchg
mov
sub
adc
shlb
sub
lcall
jo
or
xchg
imul
cmp
cltd
fucom
xchg
and
pop
lret
mov
and
adc
adc
push
loopne
mov
call
lods
aaa
fildl
and
pop
cmp
test
movsb
loopne
dec
stos
and
test
push
pusha
test
jae,pn
cmp
or
mov
sub
sbb
std
fidivrl
or
lock
add
insb
mov
out
cmp
cmp
subl
mov
int
inc
pop
xlat
movsb
inc
shr
iret
inc
repz
or
ds
call
call
imul
sbbl
stos
jl
pop
add
adc
fidivl
adc
jl
nop
or
imul
jae
cmc
mov
fidivl
inc
mov
sti
push
pop
inc
pop
aaa
imul
mov
push
and
sahf
sbb
sbb
repz
nopl
xor
xchg
repnz
mov
andl
push
mov
adc
inc
mov
iret
lcall
imul
sbbb
sub
and
fiadds
fs
subl
jle
mov
sbb
data16
sbb
mov
jno
cmp
jnp
ret
xor
mov
lods
push
lea
mov
push
gs
xchg
sbbl
scas
sbb
cs
mov
jbe
and
fnsave
ficoms
adc
subb
pop
adc
and
lret
xchg
dec
dec
mov
adc
movsb
pop
push
mov
js
lret
loope
mov
adc
fbld
cmp
mov
add
lcall
adc
lea
or
mov
add
inc
cmp
negb
popf
out
into
pop
xchg
orb
jecxz
cmp
jnp
or
add
add
fs
lods
mov
sbb
mov
pop
aas
popa
jg
cld
insb
pop
hlt
xor
cmp
jp
das
sbbl
les
pop
push
xchg
popf
testb
popa
sbb
je
push
mov
test
inc
mov
push
in
fldt
xor
loope
rcll
addr16
xchg
jle
lea
dec
sahf
repnz
or
popa
hlt
xor
mov
mov
xorl
sub
xchg
xor
xor
cmp
cmp
xor
pop
sbbl
xor
fcmovb
add
inc
shl
mov
stc
testl
or
push
aam
push
lret
adc
pop
ret
add
and
incb
fwait
lock
mov
cmp
inc
cwtl
js
sti
leave
adc
mov
adc
sar
xlat
cli
ret
call
add
mov
cld
add
rcrb
hlt
inc
cmp
push
pop
and
sub
and
lods
mov
pop
xchg
outsb
fisttpl
jp
cmp
push
sbb
mov
out
out
mov
push
jae
shlb
ror
xor
and
jmp
popf
pop
lds
jae
mov
lahf
dec
std
or
push
adc
cmp
shll
les
popf
pop
test
aaa
fsts
adc
cmp
je
xor
imul
call
xor
stos
insl
dec
fisttpl
cmpsl
ffree
cmp
pop
jno
jb
mov
inc
inc
adc
sbb
pop
pop
es
iret
jne
cli
cmpl
add
mov
call
push
mov
sub
icebp
xchg
sub
pushf
jge
incl
or
inc
xchg
sarb
insb
xor
arpl
sbb
mov
ss
xor
dec
xchg
push
sbb
cmp
aam
add
ljmp
push
dec
stos
pop
inc
stos
in
pop
lcall
std
add
sbb
mov
or
shlb
pop
xchg
cmp
insl
dec
popf
pop
orw
mov
aam
pop
in
aam
mov
cmp
sub
sbb
insb
mov
dec
xlat
fiadds
inc
stc
xor
xchg
clc
jae
adc
mov
inc
cmpsl
cmp
xor
orl
out
cwtl
js
stc
je
add
mov
and
and
pop
nop
rcrl
imul
in
jge
ret
lock
fisubs
hlt
outsl
cli
lret
mov
mov
mov
pop
and
cwtl
iret
mov
lods
sbb
mov
sbb
fistl
fsub
inc
and
push
xchg
pop
insl
cmpsb
xor
cmp
jmp
out
mov
enter
adc
fiaddl
sbb
inc
popa
mov
xchg
aaa
loopne
jb
and
pop
jl
xor
lods
adc
int
mov
sub
add
ss
mov
pusha
xchg
mov
mov
xor
inc
lahf
in
cltd
sub
repz
xor
loop
inc
xor
xchg
xor
loop
out
xor
push
or
or
scas
jmp
adcb
addr16
outsb
ror
jmp
jae
add
or
rcl
mov
roll
movsl
push
test
jbe
outsl
mov
sub
insb
xor
sbb
sub
std
mov
push
jl
push
add
ljmp
mov
jecxz
xchg
xchg
xor
sbbl
fistps
lock
sbb
xchg
push
es
dec
mov
rcrb
adcl
adc
add
std
adc
cmc
jecxz
lock
push
sbb
je
pop
inc
and
and
leave
ds
cmc
jl
jo
subb
dec
sub
cmp
mov
xchg
sti
addr16
cmp
xor
bound
mov
sub
jl
imul
cmpsb
or
xchg
mov
push
cmp
jg
sbb
jbe
mov
ffreep
xchg
jo
push
les
push
xor
dec
mov
sub
jbe
scas
jmp
push
add
gs
out
cmc
cltd
fistl
dec
dec
fdivrl
repnz
jg
andb
dec
cld
fcoml
mov
lret
push
mov
mov
imul
cmpsb
pop
arpl
sbb
adc
pop
pop
sub
fcoml
gs
sub
inc
mov
adc
lahf
in
repnz
mov
jmp
aaa
dec
jns
or
popl
imul
movsl
cmova
rorl
pusha
xor
loop
rorb
and
repz
lock
push
in
xor
xor
sub
dec
call
add
std
mov
outsb
or
pop
sub
ret
pop
icebp
adc
lods
stos
push
cmp
movsl
dec
lods
jno
xchg
clc
jecxz
push
in
push
insb
jp
insl
in
ja
test
sti
popa
pushf
enter
ja
cmp
xchg
inc
cltd
and
add
push
push
xor
insb
sub
mov
adc
ss
push
dec
and
clc
push
and
push
and
xor
dec
xchg
dec
xchg
dec
cmp
out
scas
dec
pop
lods
scas
aam
rolb
pusha
sbb
adc
ja
loop
mov
popw
outsb
pop
jmp
icebp
leave
mov
loop
mov
lret
inc
jg
les
hlt
rclb
stos
lds
adc
push
das
mov
mov
sbb
dec
in
xchg
ds
test
insb
sub
loopne
xor
fsubl
mov
xor
popa
mov
outsl
xor
add
int
dec
pop
mov
iret
add
pop
not
xlat
jne
clc
add
cwtl
shll
sti
and
sub
pop
dec
test
ja
out
frstor
mov
cltd
icebp
mov
dec
cli
cmp
es
lock
add
into
push
pop
fmul
pop
cmp
repz
js
ret
xchg
xlat
fwait
cmc
je
int3
sub
stos
jecxz
fbstp
scas
cmp
cmc
sub
negl
add
pop
mov
popa
orb
sahf
bound
push
fadd
mov
xchg
out
sbb
inc
mov
pop
push
push
xchg
ss
or
leave
imul
push
sub
adc
stc
xor
inc
cmc
mov
inc
jns
mov
mov
in
push
mov
aam
stc
mov
imul
daa
lock
das
std
mov
test
mov
lret
stos
mov
fs
mov
inc
dec
test
jnp
mov
xchg
cmpsl
pop
push
popf
scas
mov
xchg
inc
ret
cmp
out
je
popf
mov
inc
cld
pop
insb
and
jns
aas
mulb
sbb
push
fcompl
fs
push
pop
jb
jmp
sbb
scas
ret
pop
movsb
sub
aas
arpl
jp
fdivrs
add
dec
int
jbe
lods
fcompl
cmp
push
mov
test
bound
mov
ret
jb
jb
and
cmp
pop
int3
dec
loopne
xchg
mov
mov
leave
fcomp
cmp
out
loop
bound
filds
dec
pushl
mov
push
es
sbb
push
jle
adc
pop
sbb
outsl
inc
popa
pop
push
loope
dec
xor
nop
stos
sbb
sub
jecxz
and
mov
test
lahf
or
sbb
sub
cmp
lret
das
fstpt
jmp
sti
pop
mov
jg
dec
mov
mov
or
sbb
sub
cmp
lret
das
fstpt
jmp
sti
pop
mov
jg
dec
mov
mov
or
pop
ljmp
iret
cmp
iret
das
fstpt
loop
lcall
mov
jg
dec
mov
scas
ja
jecxz
push
lahf
or
or
sub
mov
xchg
inc
psubq
out
adcb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
fadds
call
mov
pop
add
js
imul
cmp
jb
or
clc
mov
mov
mov
add
js
push
push
cmp
sub
or
clc
mov
mov
mov
stos
imul
inc
push
cmp
xchg
test
push
add
push
idivb
pushf
xchg
icebp
ja
mov
test
imul
adc
mov
movsl
ljmp
out
or
mov
rolb
dec
std
add
mov
sbb
js
test
dec
inc
jne
pop
popf
sub
fcoms
call
sarb
fxch
jle
fldl
out
dec
lods
mov
bound
insl
sbb
pop
dec
rol
cmp
in
jno
push
inc
std
fstl
scas
push
adc
insl
cmp
arpl
mov
pop
xor
ja
adc
push
test
adc
enter
call
sarb
add
js
push
push
cmp
sbb
lret
sbb
fsubrl
data16
adc
or
pop
pusha
outsb
xor
mov
int
rclb
addr16
push
cmp
and
lret
aam
mov
mov
add
js
push
push
cmp
jb
or
clc
mov
mov
mov
add
js
push
push
cmp
jb
sub
gs
cmc
pushw
mov
pushf
pop
xor
loopne
dec
jnp
push
negl
and
dec
sub
cmc
push
rorl
mov
leave
add
cwtl
icebp
das
in
add
not
mov
imul
add
fs
lret
push
mov
out
pushf
jecxz
pop
xor
in
out
push
jle
sub
adc
daa
xchg
mov
fbstp
cmp
and
shr
or
insl
lret
mov
mov
xchg
int3
and
or
add
bound
mov
pop
xchg
sbb
mov
mov
xor
adc
mov
dec
mov
movsl
push
sarb
jnp
test
aad
adc
sub
cmp
loopne
nop
outsb
bswap
jg
insl
xlat
adc
in
inc
iret
movl
aam
xor
jp
push
sbb
ret
pop
rorl
xor
mov
mov
lods
inc
xor
mov
xchg
insl
jbe
sarl
enter
aad
push
outsb
adc
jo
test
test
ret
repnz
scas
int
ja
fisttps
arpl
std
inc
adc
cmp
into
test
stos
cltd
cltd
gs
ds
or
or
dec
shll
pop
cli
and
jno
pop
imul
stos
push
xchg
aad
xor
icebp
shlb
sbb
adc
push
mov
scas
xlat
mov
imul
sub
dec
scas
dec
add
cmp
mov
jae
stc
outsl
icebp
mov
jl
add
dec
ss
jbe
push
ss
pop
movsl
bound
movsl
cltd
out
insb
cmp
outsl
sub
xchg
cmp
xchg
cmc
lret
fadds
jne
and
cmc
mov
pop
mov
lds
popa
mov
sbbb
jb
jmp
jns
bswap
icebp
sub
dec
push
push
or
jp
cmp
mov
mov
js
xlat
push
js
fisttpll
mov
cmpsb
pop
das
mov
xchg
out
sub
push
pop
push
cmp
data16
scas
xchg
push
jecxz
dec
mov
add
jle
or
ret
dec
js
xor
jno
inc
push
mov
negl
sbb
xchg
clc
js
dec
pop
inc
add
popa
cmp
jecxz
mov
push
pop
xor
push
pop
rorb
jne
mov
rcr
ret
cmp
sbb
cltd
inc
dec
push
enter
mov
mov
pop
aas
loope
ret
mov
inc
insl
and
add
inc
xlat
jb
mov
xchg
aam
ja
sbb
out
iret
pop
stos
sbb
rcrl
cli
jmp
xchg
mov
push
xor
xor
mov
cmp
push
loope
mov
push
and
mov
std
push
mov
xchg
jne
nop
pusha
hlt
je
mov
lret
aad
mov
inc
ficoms
movsl
xchg
sub
mov
or
int3
insl
in
adc
add
lds
in
mov
push
repnz
ret
popl
adc
out
iret
lods
out
lods
or
push
push
add
push
add
fildll
xchg
repnz
xor
bound
and
nop
inc
push
mov
and
pop
mov
repnz
lea
inc
and
xorb
push
rcll
loop
add
xor
xchg
test
loope
mov
clc
jge
pop
ret
les
dec
ret
in
fldt
mov
mov
in
inc
xchg
mov
or
pop
imul
cli
hlt
sahf
lds
cmp
jmp
pop
dec
mov
mov
lahf
mov
packsswb
mov
scas
adc
pop
cli
stos
cmp
mov
ss
sub
test
mov
pop
int3
lock
xchg
sbb
bound
inc
call
dec
shlb
fucomp
insb
out
into
fldl2t
jmp
pop
ret
jl
clc
sahf
scas
dec
test
sahf
pop
js
and
cmpsl
dec
das
out
sti
push
sbb
ret
cmpsl
movl
push
out
and
inc
psadbw
pop
adc
jno
loop
aaa
push
lret
pusha
in
test
in
mov
loop
inc
push
jno
lret
push
push
insb
sbb
xchg
mov
js
adc
loopne
pop
bound
addr16
ja
out
cltd
inc
dec
mov
cwtl
addr16
out
ljmp
ret
imul
adc
pop
outsl
jmp
xchg
leave
iret
mov
aad
dec
cld
mov
mov
pop
mov
repz
adc
out
jl
popf
inc
and
mov
push
sub
push
mov
dec
fldenv
in
cmpsb
mov
es
push
dec
push
xchg
std
xor
push
lret
int
sti
xchg
lret
inc
popa
clc
outsb
push
push
lods
js
pusha
cmpsb
jno
in
mov
mov
inc
jns
cmp
dec
jge
shr
jno
jne
mov
rcll
lcall
sub
jmp
add
sub
sbb
adc
loopne
or
mov
mov
fs
mov
mov
sub
push
jne
add
dec
dec
cs
or
cmp
shrb
sbb
ficomps
mov
cmp
and
adcb
xchg
dec
dec
sbb
loop
outsb
or
js
sub
lds
pushf
insl
xchg
adc
fdivl
dec
jl
rorl
loop
sbb
aad
push
pop
pushf
jmp
adc
stos
inc
cmp
loope
inc
out
loopne
into
sub
ja
mov
imul
test
mov
js
pop
test
lahf
cmpsl
aam
arpl
pop
fiadds
xorl
out
cmpsb
rorl
cmp
add
mov
cli
mov
jno
gs
push
int3
pop
mov
cld
std
cli
mov
fcomp
mov
mov
int3
aaa
movsl
adc
movsl
add
pop
std
in
xchg
jae
push
mov
sub
imul
aas
mov
rcr
cmp
xchg
repnz
mov
iret
pop
mov
mov
repnz
fnsave
xor
xorl
ds
stc
jg
add
out
push
push
in
out
mov
adc
mov
inc
shll
jne
mov
fcomps
xor
out
push
sub
cmc
ja
sbb
jmp
out
popa
xchg
movsl
dec
sub
fxch
and
pushf
movsl
xor
or
loop
imul
cmp
out
mov
sbb
shll
pop
add
push
fxtract
cmp
sub
dec
jg
test
mov
jno
loop
mov
xor
repz
inc
jo
pusha
jecxz
fists
sub
jbe
push
and
in
rorb
daa
mov
aas
mov
inc
lock
pushf
ljmp
dec
pop
shl
push
fsincos
jno
sbb
dec
scas
out
pop
addr16
movsb
adc
in
cmpsb
mov
push
adc
mov
add
cs
pop
test
mov
popl
mov
push
sbb
adc
shll
inc
cmp
lret
mov
jl
test
mov
sub
add
mov
mull
mov
pushf
dec
or
scas
xor
lods
inc
lret
mov
jnp
loop
sbb
fldt
xchg
sbb
rcl
inc
push
cs
in
outsb
lret
pop
or
enter
cmp
push
pusha
xlat
pusha
mov
add
gs
repz
repnz
mov
add
xchg
dec
inc
push
popa
add
in
aaa
sub
dec
sarl
jo
iret
into
dec
es
jl
ret
sbb
push
aaa
ljmp
mov
call
mov
mov
clc
ja
xor
cmp
sbb
into
mov
stc
add
idiv
push
push
lds
aas
in
sbbl
sahf
pop
in
leave
sub
push
jb
mov
cmp
cs
pop
mov
mov
flds
add
cmpb
cli
aas
rolb
add
out
sbb
daa
icebp
push
mov
shll
pop
mov
movsl
sti
ljmp
mov
add
mov
jns
rclb
movsb
addr16
pop
stos
inc
sbb
xor
cmp
sub
imul
das
cltd
fmul
lds
test
in
xor
enter
mov
mov
lahf
loope
in
lret
xor
iret
mov
stos
and
aam
mov
adc
je
jb
hlt
and
xchg
test
mov
xor
dec
ficoml
adc
dec
repnz
mov
pushf
jns
xchg
imul
lds
push
faddl
fadds
adc
xchg
adc
rcrb
cmp
cs
jge
rcll
sti
repz
sarb
into
ljmp
or
out
into
mov
and
cs
and
cmp
mov
ljmp
xchg
and
ljmp
push
ret
fldcw
loopne
fisubrs
stos
shll
push
and
xchg
mov
cmc
jmp
icebp
pop
movsl
fldt
push
lahf
out
and
pop
idivl
test
mov
or
mov
xor
rolb
insb
addr16
jmp
mov
mov
xor
xor
pop
pop
pop
jbe
cltd
rorb
cmp
jg
and
mov
pop
les
jno
idivl
in
xchg
lcall
pusha
push
popf
xchg
pop
pop
push
pop
or
adc
sahf
nop
lret
pop
mov
cmp
push
push
repnz
mov
fcmovne
dec
sbb
stos
push
lods
sub
js
pop
push
loop
int
push
sbb
pop
sub
loopne
mov
pop
mov
aad
mov
sbb
xor
or
adc
and
loop
add
mov
xchg
stos
fdivl
fisubs
xchg
pop
cmpsb
cs
mulb
dec
leave
or
fstl
inc
lea
sub
mov
daa
sbb
aam
movsl
xlat
aas
imul
dec
push
mov
push
stc
call
cmp
lahf
aaa
fmul
mov
shl
std
lret
out
sub
pop
les
repz
push
sahf
dec
mov
rorb
sbb
and
push
cmp
and
dec
sbb
cmpsb
aad
push
je
mov
loopne
pushf
xchg
mov
xor
jge
arpl
sahf
pop
mov
jmp
add
not
or
adc
jae
popf
pop
pop
jnp
ss
rclb
mov
mov
in
in
sbb
xchg
push
xchg
push
test
pop
xor
adc
mov
sub
cmp
jbe
aad
pop
shrb
sbb
xchg
cmpsl
mulb
or
mov
jnp
jno
sub
add
pop
add
or
and
lods
mov
xchg
repz
out
inc
push
xor
sahf
cs
push
fstl
popa
imul
cmp
adc
cmpb
jb
cmp
add
cli
lea
loope
add
loop
repnz
cmc
push
sub
ljmp
xchg
and
xor
orb
dec
xor
push
ret
pop
dec
and
and
ja
push
push
test
and
lods
mov
pushf
push
shrl
pushf
cmpsl
inc
rcrb
xchg
sub
xor
cmpsl
scas
inc
jb
pusha
push
fistl
push
xlat
jge
push
fisttpll
cmp
pop
ret
es
ficoml
mov
gs
hlt
jo
cmpl
or
andl
or
mov
cmpsl
nop
stc
imul
cmp
mov
incl
insb
xchg
pusha
pusha
jg
push
add
out
mov
cmp
dec
lret
test
cli
and
in
out
pop
in
pop
into
clc
mov
popf
push
jecxz
dec
bnd
pop
imul
and
cmpb
mov
jg
xchg
icebp
shl
jnp
mov
movsl
dec
pop
inc
int
mov
leave
push
cli
imul
ret
enter
pop
push
sahf
clc
pop
dec
pop
add
jne
loop
xchg
fimull
mov
and
xorl
cmpsl
dec
out
pop
cli
mov
out
popf
cmp
xor
mov
jp
test
repz
stc
mov
add
rclb
inc
cmp
xchg
xchg
icebp
sub
les
lret
fwait
or
shrl
pop
subb
mov
pop
adc
ret
lret
cmp
in
sub
jb
lock
xchg
sbbl
adc
xor
push
stc
shl
test
push
in
sub
dec
inc
aaa
and
push
sub
push
xchg
xchg
pop
fcom
xlat
int
imul
daa
cmp
dec
addb
test
sub
addr16
lea
jb
inc
daa
or
xlat
stos
cmpsl
lea
mov
shrl
add
dec
jnp
sahf
jmp
xor
dec
pop
pop
mov
es
xchg
std
imul
pop
add
sbb
mov
push
mov
fs
or
pop
in
lcall
add
cmc
cli
insl
dec
jmp
jle
add
pop
push
negb
ret
bound
jge
loope
dec
imul
cmp
mov
and
les
fadds
clc
xor
mov
scas
out
lret
fcmovnb
divl
sub
mov
jge
xchg
fs
and
sbb
or
and
sub
ljmp
jo
cmp
stos
lcall
fdivrl
mov
adc
adc
fwait
icebp
pusha
into
pusha
test
sub
xchg
xchg
push
sarl
shll
ds
mov
daa
ljmp
call
jbe
movsb
jp
sbb
scas
mov
dec
push
mov
aad
fisttpll
lret
push
sahf
sbb
push
loopne
adc
jae
iret
lcall
aaa
repz
iret
cmp
xor
cmc
mov
jns
pop
xchg
jecxz
adc
jmp
divl
leave
and
insb
movl
movsb
sub
and
pop
rcrb
outsl
orl
mov
je
inc
into
cld
test
add
mov
xchg
out
dec
xchg
pop
cs
repz
jge
aaa
leave
xlat
and
mov
out
mov
inc
and
mov
fmul
cmpb
add
cwtl
cmp
pop
mov
mov
scas
cld
notl
xchg
pop
lock
clc
sbb
xorb
rclb
cltd
ss
mov
lcall
out
outsl
xchg
arpl
cmp
pop
sbb
pop
outsl
sub
pop
pop
push
fcomps
or
jmp
mov
pop
add
out
pushf
movl
push
in
sub
outsl
cmp
lret
repz
fadds
or
sbb
push
std
mov
mov
out
xlat
aas
pop
ret
fstl
mov
insl
cmp
les
mov
scas
push
or
and
arpl
popa
xor
mov
adc
dec
sbb
in
jb
cmp
int3
mov
mov
loop
lods
lahf
mov
sbb
add
ret
mov
xchg
imul
and
fcomps
xchg
loopne
rolb
xor
jg
xor
push
je
aaa
push
pop
mov
xor
movsl
cmpb
popa
lods
jmp
mov
xchg
add
xor
clc
cmp
subb
leave
jp
push
aaa
mov
inc
popa
pushf
out
ret
push
lods
rcll
outsb
sbb
xchg
test
jg
data16
dec
dec
rolb
es
mov
inc
int3
inc
repz
sbb
mov
or
clc
mov
xor
mov
fsubp
loopne
xchg
add
jb
mov
push
mov
pop
mov
int3
addr16
filds
inc
cli
insl
jb
loop
adc
in
mov
add
popf
xchg
in
xor
mov
shlb
jbe
dec
push
outsb
push
mov
lret
imul
es
leave
and
leave
shrl
pop
dec
sub
pushf
gs
push
daa
data16
hlt
adc
test
in
or
xchg
pop
sub
shl
ljmp
xor
or
push
ljmp
or
sub
pop
adc
sub
and
push
mov
xchg
call
dec
xor
rorb
call
adc
push
mov
test
xchg
sbb
xchg
ja
lea
xorb
jnp
mov
mov
loope
sub
mov
stos
ljmp
pop
jmp
sbb
scas
mov
pop
subb
sbb
adc
inc
daa
lds
std
pop
ret
sti
mov
or
fldl
mov
lahf
in
sbb
pop
jne
sub
test
mov
stos
jge
in
sbb
loopne
mov
pop
andb
lds
cmp
jge
lods
cmp
fucomp
inc
adc
js
xor
mov
std
mov
es
xchg
inc
push
insl
xchg
les
es
pushf
pop
je
pushf
inc
xor
iret
add
cmp
xchg
pop
adc
sbb
jbe
loop
adc
shlb
xchg
push
addl
cmp
jg
popf
aam
jecxz
mov
push
mov
sbb
out
mov
icebp
push
in
jecxz
cs
sbb
es
pop
mov
hlt
pop
pop
orb
push
adc
test
or
out
push
jge
sbb
add
sub
cmp
dec
mov
mov
mov
enter
cltd
dec
xchg
jbe
sbb
ficoms
cmp
xchg
jbe
cmpsb
inc
jbe
and
pusha
cmp
shrb
jb
in
fidivl
xor
mov
jle
xor
cli
mov
inc
push
cmp
push
cmc
xor
xchg
xlat
sub
subb
xor
sahf
pop
pusha
add
mov
mov
pop
lret
test
js
jl
xor
daa
test
test
or
jns
mov
dec
push
xchg
sub
ret
ret
add
in
sub
lods
add
xchg
je
mov
and
jb
loop
mov
xchg
mov
push
insb
jmp
fstpt
sub
sbb
add
fadd
mov
push
cmp
or
cmp
xor
ljmp
das
inc
push
inc
or
ret
xchg
enter
out
shll
mov
jecxz
ret
clc
pop
in
pop
sub
pop
pop
mov
jne
push
and
loop
or
mov
fmuls
add
or
and
ds
mov
test
aas
dec
adc
pusha
out
dec
jp
filds
jg
adc
inc
aas
mov
nop
dec
pop
or
push
sub
dec
dec
cs
aad
push
push
ret
inc
imul
lahf
sarb
insb
dec
mulb
pusha
into
xchg
insl
fiaddl
jmp
cmp
aad
fidivrl
movsb
adc
inc
ds
cmp
pop
xor
add
aam
sti
push
pop
cmp
push
mov
pop
pusha
mov
enter
test
pop
jb
std
shll
xchg
lea
cmpsb
inc
imul
adc
mov
add
inc
push
js
jecxz
inc
sbb
shr
sbb
je
fnstenv
mov
pop
mov
lods
cltd
mov
clc
or
inc
lods
xchg
cmp
xchg
add
or
cltd
cs
mov
into
push
imul
les
lcall
add
xchg
outsl
mov
sbb
adc
je
rcrb
rcl
pop
stc
xchg
fadds
and
sbb
sub
cmpsl
inc
ret
push
mov
or
sbb
subl
push
lds
xor
bswap
mov
mov
push
mov
fdivr
test
out
stos
inc
aad
mov
je
mov
fisubrl
sub
sar
or
mov
pusha
adc
jle
nop
lock
insl
add
mov
push
cwtl
mov
lds
daa
and
inc
jg
mov
cmpsl
xchg
mov
ja
and
jg
loopne
leave
lret
inc
in
dec
inc
mov
scas
stos
add
xchg
mov
mov
inc
mov
pusha
stos
xchg
outsb
and
cld
imul
incl
mov
xor
inc
ds
sub
inc
aam
pop
aaa
sbb
sbb
sti
int3
mov
fldt
jecxz
push
xchg
or
push
dec
ljmp
stos
bound
jno
sub
mov
xorb
hlt
pushw
pop
insl
inc
fsubrs
xor
ret
jns
rcrb
and
ret
ret
inc
pop
sbbb
sub
mov
sahf
ja
jnp
pop
lcall
nop
xor
cltd
or
xor
push
ss
sub
pop
loop
lret
nop
jno
lods
bound
sub
pop
hlt
jle
cmpsb
inc
push
push
mov
mov
push
sub
into
sbb
leave
dec
fstpl
inc
xchg
stc
mov
mov
mov
add
js
push
push
cmp
jb
or
clc
mov
mov
mov
add
js
push
push
cmp
jb
orb
and
mov
ret
mov
orb
and
sbb
push
cmp
jb
or
clc
mov
mov
mov
add
shlb
push
lods
dec
popf
pop
lea
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
sbb
or
cmp
sub
cmp
sbb
jae
lea
mov
mov
clc
call
cmp
sub
pop
dec
outsb
js
push
scas
mov
out
clc
call
cmp
sub
pop
dec
outsb
js
push
fmulp
fldt
lods
popf
xchg
call
cs
push
les
or
inc
test
incl
push
adc
jae
and
adc
dec
shrl
ret
xlat
dec
mov
xchg
pusha
xor
inc
test
mov
or
ja
sbb
mov
movsb
jg
jmp
mov
fcoms
insl
pop
jmp
in
cmp
cmp
pop
mov
cmp
adc
sahf
mov
cwtl
push
push
jne
pop
test
aad
pop
jle
xchg
xchg
ds
fstl
fwait
sahf
adc
adc
mov
adc
rcrl
aad
lret
in
leave
fistpl
aam
sub
lea
in
cld
call
cmp
sub
pop
dec
outsb
js
push
scas
mov
fmulp
out
clc
scas
imul
push
aaa
xor
add
sti
loope
sti
dec
mov
mov
jp
lea
push
dec
cmp
sub
cmp
in
out
mov
cmpsl
xchg
push
jl
dec
pop
pop
or
dec
outsb
js
push
scas
mov
fmulp
out
clc
call
cmp
sub
pop
dec
outsb
js
push
scas
mov
fmulp
out
clc
call
mov
inc
stc
sahf
popf
lods
pop
ds
loope
cmp
jecxz
out
out
out
lcall
sub
pop
add
xchg
out
call
js
mov
test
xchg
mov
cwtl
leave
outsb
les
rcll
pop
mov
fsubrs
cld
mov
jmp
in
ja
jne
inc
cltd
xor
call
pop
jle
sarl
or
push
dec
mov
iret
cli
xchg
lock
hlt
sub
test
sbb
sti
out
jecxz
cwtl
lods
cld
mov
loopne
dec
and
xchg
jle
jnp
pop
cmp
lret
popf
sarb
jle
cmp
test
subl
cmp
roll
std
inc
rcll
or
int3
adc
inc
icebp
xchg
inc
lahf
adc
add
and
cmp
adc
in
enter
jle
push
shll
stos
ljmp
cmp
mov
dec
fmuls
jnp
cwtl
sub
repz
cli
mov
dec
cltd
jge
icebp
cmp
xor
dec
fisubrs
pushf
ss
sbb
int
adc
add
jo
aaa
jb
and
fadd
popf
popa
dec
int
cmp
add
mov
xchg
lods
movsb
xor
out
call
adc
and
xchg
je
adc
outsl
pop
fisubl
pusha
pop
mov
out
jb
xchg
mov
pop
idiv
gs
out
lea
hlt
les
testl
xor
jae
sub
notb
jo
xchg
add
mov
push
pop
lahf
stc
cmp
and
neg
insb
and
jb
vmovss
add
int3
lods
cli
lock
out
jne
mov
cmpsb
pop
scas
xchg
mov
cmp
push
ljmp
sbb
notb
mov
adc
pusha
sub
aaa
rcll
push
pop
cmp
pop
das
rclb
and
cwtl
mov
push
fadds
push
xor
sub
das
sub
jmp
hlt
cltd
mov
jl
mov
jge
xlat
or
mov
xchg
mov
add
mov
in
insl
sbb
and
fwait
mov
jns
add
shlb
je
or
imul
sub
rolb
adc
into
jmp
bound
scas
lahf
std
sbb
mov
dec
into
jns
xor
fdivrs
lahf
xchg
mov
mov
sbb
mov
movsb
ds
jb
daa
lret
xor
xor
and
or
rolb
movsl
adc
adc
push
out
repnz
push
add
sbb
inc
iret
or
jo
test
fcmovne
adc
fiadds
popa
xchg
inc
xor
out
dec
and
mov
adc
push
mov
call
pusha
dec
jmp
jle
inc
iret
fcomi
push
test
mov
dec
movsb
scas
test
cltd
cmpl
mov
and
sbb
xor
fistpll
mov
fwait
hlt
addps
fcmovu
adc
sbb
inc
sahf
add
jle
fsubrp
bound
pop
cmp
pop
or
sbb
lea
scas
push
jo
jg
fcmovb
pop
pop
into
lea
and
aaa
mov
and
fstps
mov
and
lds
mov
scas
pop
xor
push
adc
dec
icebp
push
insb
lock
jmp
or
and
and
imul
pushf
add
repnz
xor
cld
jns
and
imul
jae
xchg
stc
and
jns
cmp
lahf
mov
mov
push
bts
out
out
aas
je
xor
mov
xchg
cmc
push
sahf
mov
ss
xor
out
jne
xchg
ds
jl
mov
inc
sti
fstp
insb
xchg
lods
out
jb
bound
sbb
mov
leave
mov
fsubl
loope
imul
lahf
adc
lret
scas
fisttps
or
adc
mov
jl
clc
mov
lock
push
push
imul
imul
gs
cmp
push
shrb
sub
pop
je
in
push
inc
mov
push
outsl
jp
dec
pop
push
fs
lret
pop
sahf
cs
data16
into
out
iret
xchg
cmpsl
in
fistl
mov
inc
cltd
mov
test
daa
addb
mov
sarl
and
fsubs
ljmp
jecxz
aaa
insb
fsubrl
adcb
in
cmp
add
incl
or
pop
adc
sub
icebp
cmp
add
sbb
ret
or
xorb
pusha
fildl
cmp
pop
stc
and
push
dec
or
inc
jl
mov
sub
xchg
cli
sub
ret
mov
data16
out
sbb
jmp
jle
std
sub
aaa
jg
mov
outsl
sbb
je
in
cmc
les
jl
inc
sbb
fsubrl
xchg
idiv
fwait
rol
ret
imul
data16
ficoms
jg
ja
shll
lret
mov
jne
loope
bnd
testl
test
mov
xchg
fs
aad
add
test
xchg
out
insl
jo
inc
add
dec
cmp
lahf
jae
adc
jp
daa
ja
aam
mov
test
aas
ret
rclb
sub
mov
xchg
sti
mov
movsb
arpl
incb
aad
nop
cwtl
lret
mov
jl
xor
test
arpl
pop
sarl
lret
call
or
or
xchg
imul
shlb
sbb
push
inc
inc
sar
xor
std
jae
loope
push
repnz
mov
ds
scas
jmp
push
cmp
pop
stos
fadd
cmpl
repz
push
jecxz
pop
or
das
xlat
aam
add
dec
add
xchg
push
bound
inc
das
pop
out
nop
imul
fst
pop
push
ror
push
insl
xor
xchg
inc
inc
out
pop
inc
idiv
outsb
xchg
aad
out
jb
xchg
pop
dec
in
sbb
push
push
xchg
scas
mov
cmp
xchg
pop
and
cs
inc
jg
js
lds
jmp
mov
cld
mov
xchg
xchg
fisubl
icebp
add
dec
push
sbb
mov
xor
negl
icebp
xor
rolb
push
lds
push
sub
xchg
inc
addb
mov
push
and
cmp
sub
mov
mov
test
mov
pop
int3
adc
dec
pop
icebp
std
js
and
es
xchg
inc
cli
insb
jb
cmp
fimuls
mov
cs
jmp
xchg
es
lea
mov
fwait
out
test
pop
mov
shl
mov
rol
push
stos
and
das
in
movsb
xchg
dec
push
push
xor
dec
and
jl
jno
cld
cmp
inc
mov
fcmove
push
inc
in
lods
pop
mov
sub
or
mov
mov
stc
jl
mov
sbb
gs
std
adc
jae
adc
pop
cltd
cmp
push
xchg
iret
test
mov
hlt
lret
push
xor
mov
icebp
dec
test
pop
xorw
mov
fdivr
int3
and
fcoms
mov
andps
fwait
loopne
xor
mov
and
les
cmp
fistpl
xchg
mov
inc
out
movsb
andb
cmp
js
lea
cmpsb
cli
rcr
sub
stos
ret
dec
out
out
mov
gs
pop
jo
test
hlt
jae
pop
movsl
sub
aad
pop
pop
in
xor
clc
jl
adc
mov
loop
addr16
and
push
push
mov
inc
mov
cwtd
fistl
push
adc
lret
push
or
stos
rolb
fsub
mov
lret
lea
jmp
mov
test
fxch
ss
clc
pop
mov
out
mov
mov
xor
xchg
inc
cltd
mov
dec
loope
loopne
bound
or
dec
aad
in
jb
out
aas
xchg
pop
les
into
mulb
lahf
jo
cmp
clc
add
dec
fcmove
iret
lock
fmull
inc
icebp
push
sti
imull
pop
jns
cmpsl
sbb
stc
aas
mov
mov
xchg
mov
push
icebp
cmp
es
xchg
mov
cld
or
adc
mov
pusha
cld
add
popf
jge
sub
inc
aaa
cld
lcall
jns
fprem
or
mov
xlat
push
pop
sub
mov
mov
jne
out
jmp
aad
adc
negb
push
mov
mov
adc
xchg
loop
es
shll
fcmovb
push
jmp
xor
xchg
add
jecxz
pusha
scas
inc
xchg
pushf
ret
out
fsubrs
mov
jnp
bound
sbb
pop
adcl
add
scas
jnp
bound
sahf
jnp
filds
and
ret
sbb
mov
popa
orl
sbb
rclb
rorl
fnstsw
mov
mov
and
mov
sti
loop
int3
arpl
jbe
adc
cld
xor
mov
jmp
mov
sbb
out
mov
fldcw
psubw
xchg
inc
lcall
cmp
rorl
out
cltd
mov
fs
jmp
rolb
or
sub
pop
sbb
sub
leave
push
sbb
mov
js
inc
subl
add
aad
outsb
int
xor
mov
push
jbe
and
push
daa
stos
out
pop
xchg
shll
popf
or
jp
test
xchg
mov
xchg
push
dec
scas
mov
ja
lea
cmp
cmc
lcall
icebp
xchg
rcrl
pop
inc
xor
cmpl
cmp
push
ljmp
in
je
in
jmp
arpl
pop
push
cmc
ds
mov
push
sub
dec
adc
clc
iret
repz
mov
sub
cmpsb
fwait
jmp
addr16
test
mov
repnz
xchg
fnstenv
jle
dec
lock
add
or
xchg
dec
sahf
or
rcrl
sbb
popf
mov
and
jle
ja
cs
dec
inc
xchg
mov
xchg
fldenv
sub
rclb
insl
iret
xorl
aam
cltd
adc
mov
inc
mov
push
lret
shll
xchg
insb
xchg
ja
inc
mov
xor
shrl
fisubrs
in
int3
rcr
mov
mov
push
cltd
dec
xor
pop
fsubl
lock
aaa
ficoms
nop
mov
fbstp
jp
jmp
jbe
icebp
testb
push
pusha
cmpsl
jmp
push
iret
sbb
cmpl
daa
pop
cmp
jp
add
jo
cmp
xor
or
xchg
pop
xchg
cmc
xchg
in
xchg
loopne
int
jne
mov
rcrl
cs
stos
pop
fldl
fldcw
mov
mov
rcl
stc
mov
out
rclb
ret
int3
xchg
or
pop
inc
add
les
test
in
test
fistl
cmpsb
inc
pop
or
fbld
int3
xor
hlt
int3
pusha
mov
es
pop
inc
mov
xor
pop
enter
je
jbe
adc
fstpl
outsb
mov
jbe
fimuls
push
vpunpcklbw
push
xlat
hlt
push
movsb
adc
popa
adc
lods
dec
orl
inc
jecxz
popa
popa
jle
pop
data16
push
jg
fbstp
enter
mov
addb
int3
push
test
js
push
stos
in
mul
mov
lahf
jbe
iret
jno
cwtl
xchg
ss
cmpsb
cmpb
repz
xlat
in
dec
xchg
aaa
inc
cmp
cmpl
out
ret
lret
pusha
jno
aam
in
xor
dec
bound
add
mov
in
insl
mov
mov
sbb
mov
cmpsl
push
fsubrp
out
inc
imul
gs
mov
les
es
daa
and
test
mov
xchg
inc
xchg
lret
test
ret
scas
cli
enter
lret
repnz
mulb
insb
loope
sbb
fisubrl
mov
or
xchg
push
aas
outsl
inc
jl
jge
repnz
stos
xor
outsb
push
inc
cmc
mov
xor
xchg
mov
cltd
sub
pop
add
imul
jl
insb
stc
popa
adc
sbb
xchg
push
adc
add
push
push
repz
and
cmpsl
leave
pop
and
adc
icebp
test
add
dec
dec
xchg
loope
sub
ror
or
sbb
cltd
pop
not
mov
xlat
mov
sub
add
mov
or
cli
into
clc
into
jmp
and
inc
faddl
jmp
cmp
sub
lret
ss
imull
mov
or
lods
jbe
test
and
push
pop
das
pop
and
inc
jl
fnsave
insl
push
jmp
xchg
repz
pushf
dec
and
fs
in
mov
daa
popf
sbb
mov
je
and
les
mulb
cmp
push
adc
push
or
mov
ret
add
ret
adc
ret
pop
aam
outsb
iret
xchg
stc
in
cld
es
jne
in
or
jmp
or
or
loope
inc
insb
std
test
cmpsb
mov
mov
add
bts
mov
loope
jle
test
pop
and
ss
mov
fwait
lret
lret
loope
dec
nop
es
mov
insb
rolb
and
cli
mov
jne
adc
jno
or
pop
fbld
enter
rcll
pop
inc
clc
stos
insl
mov
jae
inc
xchg
daa
int
cs
les
imul
sahf
lock
or
ret
push
xchg
shr
xor
popf
cwtl
xchg
sbb
xor
daa
adc
pop
pop
jle
rcl
imul
jbe
xor
xor
cmpsb
cli
mov
and
inc
int3
push
or
data16
in
inc
pushf
xor
mov
mov
jg
mov
push
push
push
jge
jbe
jmp
inc
out
cli
lds
movd
xor
xchg
or
ret
pop
sub
pop
cmpb
push
mov
mov
in
xor
mov
out
dec
mov
push
stos
jno
xlat
ret
das
xor
cmpsb
sub
ds
dec
popf
push
mov
inc
test
ror
adc
pop
jnp
sub
push
cmc
out
xchg
inc
stos
fdivrl
adc
mov
adc
data16
int3
loopne
add
and
in
je
test
loop
dec
cld
les
adc
add
out
incb
imul
or
push
jle
testb
sbb
mov
cmpsl
and
xlat
or
mov
adc
push
inc
adc
and
lret
sbb
pushl
and
xchg
movsl
inc
aam
and
and
adc
mov
xlat
in
mov
push
adc
sahf
mov
hlt
add
out
pop
dec
dec
inc
je
lods
jbe
xchg
sbb
cmp
xchg
mov
and
or
test
xor
mov
sbb
xlat
test
inc
sub
lahf
loope
insl
dec
xchg
mov
pmaddwd
cli
jle
adc
fsubrs
orl
iret
sbb
mov
std
mov
in
inc
jle
nop
scas
sub
pop
cmpsb
jmp
cmp
gs
mov
cli
je
outsl
and
mov
dec
int3
imul
add
jo
aad
movsb
stos
test
in
jne
mov
rol
mov
ret
inc
arpl
jecxz
pop
mov
cs
int3
xchg
out
pop
sub
test
mov
mov
sbbb
dec
jbe
in
cs
jle
ja
mov
add
dec
xchg
loop
repz
mov
push
sbb
push
lcall
unpckhps
sbb
mov
push
ljmp
mov
add
jle
xlat
inc
shll
loop
ret
xchg
loop
mov
dec
push
data16
pop
mov
roll
mov
adc
cmp
shrl
xor
xchg
sub
inc
repnz
add
sbb
andl
xchg
inc
pushf
sti
xor
or
add
leave
sub
pop
mov
cmp
insb
idivl
into
and
movsl
or
jl
pop
pop
cmp
fisubrs
sbb
fisttps
gs
inc
xchg
mov
leave
pusha
je
lock
out
mov
movsl
subb
jmp
cmp
dec
hlt
je
cmp
sbb
cmp
pop
mov
adc
stc
test
inc
mov
sub
pop
sbb
jno
jl
imulb
cli
mov
xchg
push
sub
mov
icebp
xchg
addr16
xor
mov
ret
pop
and
add
mov
or
mov
outsw
mov
or
add
mov
in
xor
shlb
cli
sub
push
pop
add
mov
loope
repz
cmpb
cs
cmp
push
lods
js
and
xor
mov
subb
ret
js
pop
lds
xchg
inc
inc
xor
pop
push
add
push
mov
pop
int
pushf
jbe
decl
stc
and
ds
les
pop
sub
and
das
add
cmp
insb
leave
jecxz
lds
imul
add
ja
cmp
xchg
std
push
and
push
out
lcall
sub
das
push
hlt
insb
shl
inc
push
cmp
mov
clc
lret
mov
test
mov
stos
jnp
imul
in
ret
je
mov
clc
hlt
out
dec
out
rclb
fiadds
mov
test
stos
rcll
divl
dec
dec
outsl
cmp
mov
or
cli
bnd
mov
xlat
xlat
push
xor
mov
pop
in
popa
or
clts
push
and
inc
imul
fistpll
notl
jge
frstor
push
jns
test
idivb
dec
jno
mov
hlt
inc
jns
push
loop
sub
dec
lcall
inc
std
pop
in
mov
lods
dec
and
dec
mov
pop
push
add
in
je
test
pushf
push
test
gs
sbb
cwtl
push
mov
shrl
xlat
je
repnz
xlat
xlat
push
mov
cmp
sbb
outsb
jp
sbb
cwtl
dec
fcmovb
divl
dec
sbb
sbb
or
jne
ljmp
mov
cmp
mov
cmp
out
sarl
leave
and
mov
iret
flds
ror
lds
int3
sub
in
test
push
adc
adc
stos
popa
shl
lds
in
lods
fucomp
inc
jl
adc
or
mov
pop
dec
and
out
ds
addr16
push
lahf
xchg
aas
jecxz
js
xlat
jge
scas
outsb
int3
cltd
les
repnz
fidivl
xor
add
les
shl
or
add
jl
es
adc
out
test
sbb
fldl
and
jg
bts
shrl
div
enter
adc
add
ficoml
mov
call
fnstenv
or
loopne
ljmp
lock
hlt
and
mov
addb
mov
add
add
inc
cmpb
ficomps
outsl
jno
xchg
xchg
loope
adc
mov
and
jle
lahf
icebp
clc
pusha
jae
push
mov
popf
inc
scas
lea
incb
aaa
test
add
mov
push
in
loopne
inc
daa
pop
add
fcomip
fcmovu
cmp
ficompl
and
leave
movsb
mov
aaa
loop
sub
xor
adc
jb
test
lds
dec
int3
arpl
add
icebp
inc
or
repz
push
dec
insl
pop
popa
adc
lahf
imul
dec
lods
fwait
dec
add
mov
lret
mov
sub
xchg
pop
pop
dec
cltd
pusha
movsb
scas
lock
pusha
and
movsl
fsubs
pop
enter
cmp
adc
lds
jmp
lods
sbb
data16
fnstcw
in
pop
imul
adc
inc
adc
pop
popa
arpl
rclb
inc
cmp
push
popf
aam
xchg
ret
inc
scas
add
pop
or
or
rorl
shlb
rclb
lahf
mov
ret
jecxz
call
mov
pop
inc
jmp
addl
mov
fiaddl
sbb
mov
xchg
and
cmpsb
xor
and
js
jmp
xor
dec
cmpsl
stc
das
jno
popf
pop
daa
mov
or
cmc
cmc
lods
add
mov
aad
sbb
insb
adc
pushf
dec
jmp
adc
sub
pop
dec
outsb
js
push
scas
mov
fmulp
out
clc
call
cmp
sub
pop
dec
outsb
js
push
scas
mov
fmulp
out
clc
call
cmp
sub
pop
dec
outsb
jns
push
scas
mov
fmulp
out
clc
call
cmp
sub
pop
pop
enter
xchg
jno
popa
and
mov
aaa
push
pop
push
pop
mov
ret
ljmp
xchg
ret
int
pop
jg
pop
jo
inc
push
or
xor
and
vcmpss
ljmp
mov
mov
pop
push
push
jp
js
sbb
sub
cmp
rcr
ret
ljmp
subb
dec
jns
adc
inc
dec
outsb
inc
pop
dec
push
mov
mov
orl
pop
mov
repnz
xchg
cmp
sub
push
repnz
stos
push
cli
jge
inc
push
imul
mov
test
fisubrl
mov
fldenv
movsl
faddl
xorl
dec
mov
test
scas
inc
mov
add
test
pop
fisubs
movsb
jb
notl
aad
sub
dec
cmp
mov
dec
inc
out
mov
mov
movsl
addr16
mov
jns
mov
mov
add
aas
push
stos
mov
lods
and
test
and
cli
shrb
and
ffree
lret
cmc
cli
orb
mov
push
jnp
or
sbb
xor
cmp
mov
popl
sti
mov
iret
fbld
and
or
jle
data16
inc
push
shlb
loopne
out
in
aam
fsubp
mov
inc
aas
aaa
movhps
jp
sbb
and
lret
xchg
mov
mov
mov
mov
pop
jb
bound
or
sbb
sub
cmp
lret
repnz
mov
mov
pop
jb
bound
or
sbb
sub
cmp
lret
stos
insl
mov
mov
fs
movsl
jl
xor
scas
sti
mov
aas
addr16
insb
mov
push
in
lock
mov
mov
outsl
clc
fisubs
sti
add
repz
jnp
sub
adc
inc
insl
cwtl
mov
jp
mov
xchg
les
sbb
sahf
push
sbb
ret
popf
ret
cmp
xchg
sbb
clc
add
push
cmp
push
mov
popa
add
xchg
mov
je
lcall
push
add
or
push
leave
jbe
fstpl
nop
lcall
imul
mov
out
or
mov
mov
sarb
cli
js
addr16
out
sbb
xchg
add
push
mov
repnz
cmp
frstor
shl
jb
arpl
or
aam
test
js
pop
movsb
xchg
lahf
dec
daa
sub
jnp
cmp
cmc
xor
icebp
jge
sbb
fldenv
jp
push
push
xor
and
rclb
testb
sub
outsb
sbb
sub
aaa
shrl
cmpsl
daa
xchg
pop
shr
test
adc
mov
mov
and
jg
inc
push
mov
and
add
loop
sub
jmp
fists
jno
call
xor
mov
mov
jae
int
push
xchg
mov
xor
lret
test
insb
cmp
inc
ljmp
push
jne
mov
dec
push
lds
mov
sub
xchg
jnp
nop
enter
jmp
pop
movsb
add
sbb
mov
dec
notl
add
outsl
lds
or
nop
sbb
ss
test
inc
hlt
popf
sti
and
mov
lcall
pop
mov
clc
xor
mov
xchg
enter
nop
nop
jge
cmpsb
cmovg
adc
dec
pop
stos
adc
fildll
scas
mov
cld
xor
js
inc
idivl
cld
rcl
xor
arpl
imul
xchg
out
push
jle
push
enter
add
push
and
lret
decl
repnz
ljmp
ja
inc
or
mov
sahf
mov
mov
sti
xchg
sbb
out
xlat
xchg
mov
ds
movb
out
pop
or
cmp
nop
stc
leave
xlat
std
in
andl
lods
push
fisubrl
out
scas
sub
xor
arpl
das
lahf
cld
testb
sub
sub
add
test
sub
xchg
rcl
cmp
fdivr
test
mov
mov
pop
xor
adc
bound
mov
pop
je
xchg
imul
jnp
mov
cli
add
fldcw
sbb
leave
lret
sub
and
xor
lods
testl
mov
incl
cwtl
mov
iret
dec
sbb
cmp
int
or
pop
out
inc
das
popa
popf
mov
imul
and
addb
roll
lock
iret
sbb
leave
or
add
call
fs
sbb
push
sub
and
jmp
adc
int3
aas
xor
jg
frstor
xchg
mov
sbb
loop
ss
inc
lret
imul
or
test
mov
inc
imul
mov
pusha
rcrb
mov
fneni(8087
and
mov
xchg
dec
pop
mov
dec
adc
mov
shlb
je
mov
hlt
push
fists
sbb
adc
out
mov
movsl
add
iret
mov
icebp
rolb
gs
outsl
js
fidivl
jp
jae
mov
je
in
or
jge
lea
adcl
iret
push
stos
cmp
leave
xchg
movsb
lahf
or
jae
int
negl
dec
clc
stos
cltd
daa
iret
inc
or
pop
add
and
jne
xchg
push
test
das
push
ja
cltd
jmp
jb
js
mov
jl
inc
push
xchg
into
jle
mov
mov
stc
dec
pop
iret
mov
add
shl
sbb
vmread
js
aam
inc
xchg
push
sbb
cmp
pop
cmp
inc
stos
cmp
ja
xchg
fdivp
adc
testl
or
jne
lods
sbb
cwtl
mov
xchg
test
push
cmp
mov
mov
hlt
sub
shll
xor
dec
pop
adc
push
fwait
mov
stos
ss
mov
or
add
fs
jmp
adc
lods
nop
rorb
push
jp
adc
sub
mov
xchg
stc
js
inc
add
dec
push
xchg
lcall
pop
mov
jle
xor
dec
andb
outsl
xchg
adc
mov
fcmovnu
xchg
mov
mov
mov
jle
pop
stc
imul
mov
pop
data16
mov
fmuls
mov
scas
cltd
push
add
push
inc
std
sbb
jge
pop
int3
jl
rolb
push
and
mov
mov
pop
sbb
dec
cltd
cli
jno
test
xchg
call
push
add
xor
push
aad
mov
mov
xor
xchg
pop
or
leave
sub
icebp
xor
push
mov
push
push
lods
fcomp
jbe
push
xchg
in
push
mov
adc
dec
ljmp
stos
call
nop
inc
je
cmp
mov
dec
or
les
pop
in
push
inc
cmp
cmp
jp
jno
adc
imul
sti
mov
mov
es
adc
add
jb
xchg
rclb
mov
mov
pusha
sarb
mov
movsb
adc
shlb
es
add
xchg
in
adc
dec
mov
mov
data16
lods
cmp
mov
adc
xor
in
ss
add
xor
inc
fistpl
jp
mov
repz
sbb
pushf
popf
dec
xor
mov
imul
xor
pop
sub
repz
jl
into
js
pop
test
push
cmpsl
cli
mov
lds
add
sub
sbb
xlat
or
jb
pop
hlt
lcall
test
pop
out
xchg
cmp
nop
repnz
shll
insl
sub
fstps
cwtl
shlb
icebp
add
aaa
addb
pop
sbb
mov
dec
inc
mov
scas
ffree
pushf
mov
lock
and
loope
in
leave
in
inc
sub
inc
hlt
fistps
and
push
jge
cmp
fldl
xchg
and
cmovne
sbb
repz
adc
mov
lods
mov
sti
adc
mov
xlat
push
mov
lods
mov
mov
fstpl
mov
sbb
push
add
inc
enter
add
jecxz
subl
pop
mov
lds
js
enter
xor
xor
push
and
aam
and
pop
daa
xor
ret
xchg
pop
push
in
popf
cld
ljmp
push
xchg
sbb
out
adcb
xor
fldenv
ss
push
rcl
or
lds
popa
nop
decl
jecxz
add
push
cld
lods
pop
call
test
in
inc
pop
adc
jp
stos
sbb
mov
orl
pusha
or
cli
daa
dec
mov
dec
stos
jge
in
adc
sub
stos
mov
jle
push
stc
push
stc
mov
adc
rorl
sbb
push
imul
pop
sbb
cmovg
mov
negb
cli
cmp
clc
or
inc
dec
mull
xor
jecxz
dec
mov
push
addl
lock
std
stos
dec
arpl
ja
fxch
sub
fistl
fiaddl
and
daa
lea
xor
js
push
jge
mov
das
aad
xor
in
sbb
add
pop
cli
push
pop
enter
outsl
jns
mov
cmp
cmp
sbb
jns
outsl
jno
push
mov
inc
mov
into
daa
mov
dec
pop
out
lret
mov
jnp
fildll
rcrl
push
xor
and
or
std
fistpll
arpl
dec
xchg
pop
cmp
gs
andb
adc
sub
cmp
mov
inc
add
mov
movl
push
in
mov
jo
std
xlat
add
bound
xor
and
sti
sbb
and
mov
pop
mov
adc
cltd
insl
pop
fiadds
mov
mov
xor
mov
or
test
push
fcomip
ljmp
xlat
ret
mov
in
mov
movl
pop
sarl
xchg
das
mov
xor
dec
popa
fs
cmp
mov
mov
cltd
nop
push
xor
clc
jge
aaa
int3
xorb
xchg
or
mov
xchg
in
lods
movsl
sbb
jge
ljmp
shrb
sbb
xlat
insb
sbb
xor
mov
mov
repz
cmc
jne
adc
addr16
shl
fisubs
repz
inc
popf
lcall
ss
mov
push
xchg
jae
insb
mov
fdivrs
jns
scas
outsb
adc
into
imul
test
mov
pop
js
and
mov
push
jae
in
lahf
mov
push
pop
xchg
hlt
pop
mov
arpl
and
mov
jnp
add
lds
pop
sahf
inc
repnz
stos
cmc
aad
andb
sbb
xchg
pop
jge
popa
pop
jne
add
mov
push
repnz
xlat
pop
mov
dec
lds
in
nop
mov
shr
lcall
and
dec
adcl
sub
das
adc
mov
xor
xchg
out
icebp
aad
push
daa
dec
xor
test
iret
pop
jns
mov
mov
xchg
enter
pop
test
int3
imul
and
scas
in
test
jae
mov
aad
cmp
push
cmp
lods
mov
lret
iret
rolb
in
fsubr
push
adc
sar
xchg
dec
pop
test
adc
jbe
lds
outsb
mov
test
jle
icebp
cmpsl
test
xchg
mov
out
push
inc
mov
jns
jmp
icebp
adc
xchg
je
out
inc
pop
and
fistl
test
add
push
jne
push
inc
hlt
pop
scas
sbb
jle
adc
push
sbb
addr16
sbb
filds
mov
jge
movsl
or
mov
lret
pop
xchg
ljmp
xchg
add
out
and
xchg
inc
jne
cmpb
cmp
cmc
sbb
xchg
lcall
and
dec
data16
fiaddl
sahf
jnp
stc
dec
lcall
cmp
je
mov
into
inc
lods
and
dec
sub
frndint
in
mov
pop
cmc
loope
mov
mov
scas
std
testb
add
js
xor
lret
fidivs
adcl
mov
add
cmp
in
inc
dec
pusha
cwtl
out
mov
cld
out
ds
mov
and
mov
subb
adc
clc
and
rclb
fs
sub
cli
jbe
rolb
or
or
lahf
cmp
or
jl
out
sbb
cmp
pop
adcb
clc
pop
jg
mov
adc
mov
inc
jge
xchg
inc
movsb
pop
or
pop
xor
adc
std
js
sub
pop
xor
fmul
xlat
mov
mov
leave
sti
mov
mov
xchg
daa
mov
es
or
add
mov
negl
stos
aas
in
or
in
push
mov
add
loopne
and
js
popa
mov
in
pop
std
push
pop
mov
sub
lea
jb
xlat
loopne
ret
enter
add
mov
add
imul
or
mov
and
and
fxtract
ljmp
repnz
in
dec
cld
xor
test
sbb
mov
dec
pop
into
xchg
push
jns
stos
sub
sub
in
push
sbb
or
lret
xchg
inc
jecxz
adc
sub
inc
xchg
xor
lahf
rol
movsb
sarb
into
inc
adc
dec
xor
jg
fisubrl
sub
xchg
or
mov
cmpsb
cs
pop
loope
pop
pop
adc
lahf
push
jns
sbb
shrl
sub
jle
imul
inc
mov
jno
cmpsb
fldcw
fidivs
sahf
xchg
fucomp
bound
icebp
mov
mov
adc
stc
adc
and
jbe
pop
inc
lahf
jns
adcl
hlt
das
ss
mov
push
pop
push
mov
jmp
push
cmc
in
xchg
mov
sti
cltd
jl
sbbl
dec
xchg
jnp
ljmp
insl
mov
xor
xor
adc
mov
push
and
push
fs
adc
icebp
hlt
mov
xor
xor
cmp
loopne
insb
clc
push
fnsave
test
sbb
imul
jmp
loope
jb
in
pop
data16
pusha
addb
out
pop
mov
push
xchg
xor
inc
add
lods
mov
pop
mov
dec
cwtl
lods
and
inc
cld
inc
or
xor
jno
dec
push
lds
mov
movl
pop
int3
adc
pop
adc
repz
cmpsb
and
mov
test
fsub
iret
rcrl
sar
mov
sti
push
jmp
cld
cmp
pop
pop
xor
out
push
add
movsl
imul
loopne
pop
lock
aam
out
scas
das
sub
mov
mov
out
jp
xchg
sbb
iret
dec
xchg
cmp
cld
add
subb
fidivs
jecxz
add
pop
ds
cmp
fwait
mov
push
add
mov
and
outsl
das
or
push
enter
outsb
sub
out
outsl
lret
lea
je
mov
scas
shrb
call
mov
pop
cmp
sti
adc
mov
arpl
nop
mov
repnz
mov
sub
cmc
push
mov
cmp
fisubs
out
sti
aas
sahf
ss
inc
and
xlat
data16
mov
dec
mov
in
sub
ljmp
mov
sti
loopne
push
repz
sbb
and
and
jno
outsb
int3
int
xlat
insl
int
sbb
lcall
test
mov
ret
push
repz
fnstenv
adc
scas
pop
sub
shll
push
outsl
sub
frstor
pop
pop
push
mov
insl
movsb
pop
inc
cld
aad
in
cmpl
push
sub
out
sub
or
pop
and
test
xor
loopne
aam
loopne
in
aad
stos
inc
cmp
jle
dec
mov
cmpsl
dec
clc
je
mov
xor
xchg
fdivrs
dec
clc
pop
and
push
andb
fidivs
stc
jae
sbb
pop
ss
and
lea
mov
sbb
xor
xcrypt-cfb
cmpsl
and
jge
hlt
jo
fs
mov
pop
mov
in
fstl
xor
addr16
jnp
cmp
pushf
fbld
gs
pop
push
lds
cld
jo
cmp
andb
fsubs
into
sahf
cld
pop
test
gs
inc
and
stos
cmp
xchg
mov
test
pusha
xor
call
jnp
fs
pushf
adc
test
in
mov
mov
ficoms
xor
mov
int
sub
pop
adc
mov
ffree
imul
mov
imul
gs
mov
aam
loope
gs
scas
dec
hlt
sub
adc
xor
xchg
pop
sbbb
jmp
push
ret
popa
xor
stos
das
inc
loop
and
sub
sub
jb
dec
adc
and
sub
test
jmp
pop
or
les
adc
dec
sbb
js
insb
xor
js
push
loopne
enter
ret
out
jne
lods
mov
cmp
pop
shl
xchg
xor
add
movsl
lock
pop
lock
xchg
mov
add
mov
mov
sbb
xor
or
sub
es
shll
inc
push
std
ret
xor
jb
pop
mov
jb
lahf
popa
cmp
clc
addr16
das
in
out
xchg
icebp
or
movsl
and
sub
add
pop
jnp
mov
inc
test
shll
in
adc
mov
jmp
xchg
movsl
repz
addr16
mov
aam
sub
and
push
jg
pushf
mov
lret
add
mov
outsl
adcl
je
fcoms
mov
popf
fsubl
push
ret
mov
cmc
stos
push
test
sub
push
mov
movsb
out
jmp
mov
mov
adc
stos
lahf
shrl
push
xchg
insl
push
lahf
fucomp
aas
lods
push
lods
hlt
fcoml
cmp
aad
enter
sbb
scas
push
fs
mov
inc
inc
sahf
pop
enter
jl
xlat
lret
add
cmc
shr
lods
pop
lea
mov
xlat
xor
inc
jmp
xchg
test
imul
adc
inc
fdivrs
xor
shll
mov
sbb
or
fistpll
and
cli
sbb
adc
jg
outsb
adc
sub
inc
arpl
xchg
dec
or
mov
push
adc
inc
cmp
xlat
dec
popf
mov
and
jmp
adc
xor
imul
cltd
ret
ret
out
ss
add
fists
jns
shll
scas
rcll
lcall
filds
and
or
jne
movsb
and
or
icebp
pop
popf
jecxz
and
and
lock
loop
popf
add
pop
rcll
jb
xlat
add
push
xchg
jg
add
and
push
je
insb
movhps
outsl
adc
roll
in
sbb
aas
mov
ret
cmpsl
sbb
mov
stc
ffreep
repz
xchg
insb
xchg
push
push
aam
mov
xchg
cmpsb
fsubrl
testb
cpuid
add
sbbl
lock
mov
dec
adcb
mov
ss
int3
xchg
dec
jp
inc
push
call
push
and
pop
mov
fucompp
mov
dec
pop
iret
test
dec
sahf
mov
xchg
and
scas
andb
cwtl
loope
and
sub
sbb
pop
call
loopne
bound
jle
in
nopl
jbe
lods
fsub
pop
xchg
mov
pop
push
and
xchg
aas
cmpsb
clc
and
mov
popa
add
xchg
inc
push
add
les
enter
sbb
or
addr16
and
xchg
jge
cmp
dec
mov
xchg
sub
mov
movhps
test
or
pop
pop
dec
fs
ret
cs
xor
mov
adc
loope
push
jl
icebp
push
loop
idivl
addr16
dec
dec
imul
cli
in
jmp
mov
mov
jge
popf
ret
jecxz
shr
arpl
push
pop
out
data16
addr16
das
shll
push
inc
daa
lahf
in
dec
mov
nop
push
sahf
test
insl
cmpsb
sbb
mov
out
lock
outsb
push
or
scas
and
push
imul
sbb
pop
lret
jnp
pusha
xor
stos
pop
xchg
stos
sbb
jb
lahf
popa
dec
dec
lods
ficoml
sub
mov
pop
jg
sbb
pop
fcmovb
jno
push
andl
sbb
pop
lods
jmp
ljmp
inc
fwait
pop
mov
fcmovbe
imul
pop
fstl
psrlq
push
test
test
adc
scas
sbb
roll
fistl
stc
push
or
adc
push
call
mov
xchg
add
and
fdivr
jge
cmp
jb
sbb
mov
mov
aam
mov
gs
fidivrs
aaa
sbb
ret
adc
lret
and
mov
or
xlat
shrb
dec
mov
adc
sbb
popa
test
ja
arpl
in
add
in
punpcklwd
cmp
sbb
add
out
shll
pop
fcompl
adc
xorl
aam
das
xor
add
push
sti
ret
xchg
das
repz
dec
adcl
sti
loopne
dec
sbb
xchg
lock
ret
and
icebp
insb
orl
call
stos
js
out
xchg
pushf
fidivl
sbbb
dec
inc
pop
jb
bound
or
sbb
sub
cmp
lret
repnz
mov
mov
pop
jb
bound
or
sbb
sub
cmp
lret
repnz
mov
mov
pop
jbe
bound
or
sbb
adc
out
neg
out
loop
xchg
mov
jp
dec
mov
or
int
fldl
mov
lock
stc
mov
ret
enter
and
jo
add
imul
mov
lock
fdivs
sub
sbb
add
xor
mov
lock
fdivs
or
jge
data16
jns
add
rcr
lods
lret
mov
pop
pop
fildl
aam
inc
and
icebp
test
xchg
mov
mov
sub
lds
sub
sbb
sub
enter
shrl
dec
xchg
dec
test
lds
inc
cmp
sub
push
idivl
aad
test
xor
sbb
cmp
call
push
les
loopne
inc
mov
sub
das
push
mov
in
push
mov
cmp
push
sub
movsl
xor
test
loope
mov
pusha
mov
arpl
jbe
mov
insl
std
divl
cmp
pop
xor
loopne
lock
fdivs
sub
jo
add
push
mov
xchg
rorl
cmc
pushf
out
aad
sub
xor
dec
adc
je
pop
das
dec
sub
aam
les
hlt
lods
mov
pop
cmp
pop
dec
sbb
das
sbb
stc
sti
cmp
lock
call
inc
cmp
pusha
sbb
add
push
sarb
mov
fdivs
sub
jo
add
push
sarb
dec
repz
inc
sub
sub
ss
sub
add
jecxz
add
inc
add
int
push
xor
jnp
mov
sub
test
sbb
push
ja
test
cltd
pop
data16
jno
and
fbld
mov
jnp
cld
sub
cmc
ljmp
fsubr
xchg
jno
pop
lcall
jno
jb
mov
movsb
add
ret
jb
in
pop
mov
inc
aam
ds
cs
add
push
int
lcall
pop
lret
add
shlb
lea
pusha
aad
data16
pop
arpl
and
xchg
cmp
out
movsl
aad
imul
stc
test
cmp
enter
and
stc
aaa
pop
pop
pop
dec
loopne
mov
push
mov
test
push
adc
push
lahf
push
pop
xor
sbb
and
lahf
loope
shll
xor
ljmp
sub
out
fstpt
xlat
clc
stos
dec
push
popa
scas
pop
pop
push
and
arpl
push
dec
xor
subb
pushf
pop
js
xorl
dec
dec
insl
or
xor
in
ret
fidivl
mov
scas
lret
nop
add
test
mov
adc
out
cmp
imul
jno
and
pushf
jo
out
jb
pop
out
and
jae
add
ljmp
lcall
xchg
mov
adc
aas
sub
stos
push
clc
out
cmc
loope
sbb
in
test
loope
add
push
jb
mov
push
mov
out
lret
out
test
sbb
push
cmc
cmc
popa
pushf
pop
jo
fildll
iret
xchg
insl
lea
mov
sub
jmp
push
and
icebp
adc
lahf
dec
js
push
push
push
pushf
inc
movsl
and
pop
scas
testb
int
sub
fsubs
bound
cld
ljmp
mov
sbb
xchg
stc
or
icebp
mov
push
sbbl
es
aad
out
test
sbb
adc
sub
dec
inc
jae
insb
pop
movb
adc
lahf
adc
imul
cltd
pop
pop
sub
iret
mov
imul
data16
aad
sub
shrb
mov
mov
adc
addr16
dec
add
jno
outsb
inc
xchg
mov
fdivl
pop
lret
mov
xchg
andl
test
dec
pop
dec
mov
jns
cwtl
xchg
inc
push
push
inc
in
je
and
rcl
mov
outsb
std
mov
jecxz
fwait
xchg
mov
mov
jae
sbbl
arpl
test
loopne
insb
cmp
inc
xchg
dec
enter
in
pop
sarb
insb
xorl
fcmovu
jp
pop
push
out
sbb
add
pop
push
mov
out
cmp
je
dec
pop
mov
sbb
sbb
repz
fistpll
outsl
cltd
mov
dec
lret
adc
testb
loope
adc
and
cld
addb
addr16
pop
loopne
cmp
test
enter
and
xor
enter
cli
xor
xorb
sub
lret
and
jecxz
jp
mov
ret
inc
xchg
test
inc
pop
adc
mov
aas
mov
sbb
jae
in
xorl
movsb
cmp
loope
push
xor
sub
xor
jnp
test
sahf
aas
icebp
mov
jnp
movsl
dec
aam
shlb
lock
sub
in
inc
pop
pop
jge
jns
sbb
sbb
cld
xchg
mov
out
xchg
ficompl
jno
cmovo
mov
jecxz
outsb
xor
test
mov
mov
lahf
fs
mov
arpl
daa
jbe
push
xorb
add
jnp
mov
lret
add
inc
xchg
hlt
sbbl
mov
idivl
sub
subb
push
rcrb
mov
je
sbb
lcall
push
outsb
cmp
inc
addr16
mov
cs
andb
mov
sub
int
sti
gs
lcall
adc
cmp
xchg
and
xor
les
adc
repz
mov
add
jg
jp
jae
dec
mov
test
mov
add
stc
push
std
jmp
xchg
gs
mov
push
aaa
jns
fcoml
cmpsl
xor
into
xor
imul
fnstenv
jle
out
or
add
pop
cmp
mov
daa
gs
pop
repz
imul
and
and
and
and
lahf
icebp
insb
mov
gs
mov
or
pop
fwait
lahf
lods
jge
mov
push
inc
test
xchg
adc
sub
cmc
cmp
js
xor
or
mov
iret
pop
es
popf
in
stos
lahf
xor
push
outsl
cmp
clc
adc
and
dec
sbb
orb
add
fdivrl
loop
sub
popf
enter
nop
add
test
hlt
adc
in
aam
push
jbe
fsubrl
mov
lahf
and
sub
loop
das
out
nop
dec
mov
outsb
sbb
mov
int
ljmp
adc
in
mov
inc
or
aam
xchg
arpl
ss
jmp
mov
pop
push
add
hlt
cmp
loop
and
js
idiv
mov
rorl
push
repnz
sbb
sahf
sub
dec
nop
sbb
jle
mov
fdivrs
cmpl
cltd
leave
mov
push
leave
and
jecxz
jnp
ljmp
sub
jg
and
adc
and
or
ss
icebp
cld
jb
cmp
shlb
test
jnp
xchg
jl
jmp
ret
or
mov
pop
sub
pop
or
mov
cmpsb
xor
add
addr16
cwtl
sarb
jp
inc
sub
mov
sub
and
dec
mov
js
mov
pop
inc
in
or
dec
cmpsb
jb
in
inc
outsb
or
inc
dec
sbb
ret
lea
loope
push
dec
push
addb
out
fnsave
mov
pusha
lea
mov
mov
cmp
xchg
jne
cwtl
jge
dec
leave
jo
cld
sbb
jmp
lahf
jno
and
jle
movsb
out
jge
jecxz
mov
shll
push
inc
or
insl
popa
xchg
mov
js
and
push
loop
push
jmp
dec
lds
incb
sbb
testb
fcoml
ficoml
stos
lds
cmp
adc
push
xorl
cmpsb
ss
jno
jp
sub
mov
jmp
jo
ret
das
and
mov
pop
das
fs
rcrl
jo
lret
enter
call
ljmp
nop
ds
shlb
jmp
mov
js
lock
dec
push
mov
adc
test
cmp
jmp
aaa
lods
sbb
loopne
sub
fwait
add
pop
les
cltd
jmp
cmp
popa
not
xor
pop
dec
and
and
xchg
std
lcall
xchg
mov
mov
adc
int
push
mov
rcrb
xchg
aam
clc
je
xor
jo
xchg
icebp
jl
pusha
xchg
xchg
xchg
add
mov
xchg
push
xchg
sub
jmp
jge
jmp
imul
jns
jg
cmp
inc
decb
xor
mov
dec
sub
shll
loopne
iret
mov
scas
cld
or
icebp
fwait
dec
mov
and
push
mov
sub
pop
into
inc
test
push
outsl
sub
xlat
adcb
xor
dec
dec
inc
test
pop
inc
shll
cltd
mov
stos
sbb
mov
stc
cmpl
int
or
pop
pop
pop
std
cmp
and
xor
jg
dec
cmpsb
lock
movsb
mov
cmpl
push
dec
push
rorb
adc
aam
pusha
out
adc
mov
jl
scas
mov
xchg
clc
movsl
cmp
mov
mov
sbb
jae
sub
and
test
dec
inc
jle
sub
mov
dec
cld
fs
add
call
add
xchg
jns
adc
mov
lret
int
push
sub
cmp
jnp
pop
push
sbb
lahf
lahf
fs
jl
and
xor
xchg
int3
or
subl
ja
sbb
ja
mov
jmp
out
sbb
fsubl
lods
or
adc
fstps
jle
push
pop
adc
jg
mov
mov
inc
stc
lea
test
push
push
sbb
xor
mov
xchg
xchg
adc
test
jl
mov
pop
xor
lcall
inc
sub
arpl
or
daa
inc
loopne
push
das
in
dec
call
fbld
xchg
popa
jmp
das
sbb
aas
and
and
mov
in
scas
jecxz
pop
mov
fcoml
lret
mov
hlt
xchg
cmpsl
and
pop
popl
inc
pop
mov
adc
push
ror
push
addr16
push
lret
inc
add
lea
mov
dec
or
movsb
call
jle
and
ret
into
nop
push
decb
sub
fcompl
xchg
into
mov
arpl
out
and
mov
adc
sub
mov
repnz
mov
call
scas
pop
rorl
or
sbb
adc
aad
cmc
jns
into
push
cmp
xchg
lahf
int3
pop
xchg
pusha
inc
cmpsb
pushf
sbb
mov
add
dec
hlt
fists
jns
mov
sbb
sub
pcmpeqw
or
lock
jo
mov
repz
and
mov
js
out
scas
jle
dec
mov
cmp
xchg
dec
push
filds
lcall
xor
shlb
dec
paddsb
mov
mov
add
shrb
outsb
in
jo
rcrl
aam
repz
jae
jbe
fldl
repnz
lret
sbb
mov
pop
push
adc
call
adc
cmpsl
icebp
push
out
pop
and
scas
add
in
imul
sub
jbe
pop
inc
inc
adc
fsubr
stos
lret
ret
mov
test
dec
jns
jne
out
mov
movsb
scas
pushl
sbb
xchg
ficompl
imul
adc
sahf
mov
aam
and
inc
jb
inc
stc
push
js
pusha
mov
es
push
or
test
fistl
xchg
gs
movsb
cwtl
mov
scas
test
and
pop
mov
test
pop
idivb
xchg
ljmp
cmpl
jle
imul
mov
xchg
inc
lret
loope
sub
pop
shlb
inc
imull
les
aaa
push
and
jmp
sbb
jmp
mov
push
jne
add
sbb
ret
mov
ret
jae
mov
mov
adc
adcb
xchg
out
inc
test
test
outsl
jecxz
inc
fsubr
out
das
add
loope
nop
and
ljmp
dec
imul
add
jb
push
sahf
xor
mov
insl
adc
add
outsb
jg
lods
dec
or
lock
push
mov
inc
jmp
inc
xchg
cmpsb
xchg
clc
mov
mov
repnz
or
call
aad
aad
mov
pop
outsl
test
jae
or
mov
jmp
push
mov
sub
imul
fistps
sub
jg
pusha
xorb
pop
mov
adc
push
jnp
jmp
inc
dec
repnz
mov
mov
mov
ret
test
lcall
frstor
pushf
mov
je
xchg
xchg
pop
pop
jp
fwait
sbbl
push
add
cmpsl
sbb
pop
rorb
insl
mov
jns
xchg
jnp
cwtl
xchg
insl
call
test
xlat
push
mov
in
divl
pop
rorb
mov
lock
sbb
test
inc
ljmp
not
push
ljmp
loope
loopne
mov
pop
mov
adc
lret
mov
aaa
test
push
mov
je
xor
loope
bound
xchg
lret
cli
fwait
lret
xchg
test
mov
int
mov
mov
sbb
xchg
or
inc
enter
pop
jns
imul
pop
shlb
fdivl
dec
in
xlat
xor
adc
mov
cmp
sti
xchg
sub
and
pop
aaa
mov
mov
mov
xchg
jecxz
sub
sbb
cmp
and
cmpsb
iret
jo
or
push
cmp
mov
lds
mov
lcall
sub
mov
xchg
xchg
repz
mov
cmp
dec
shr
fidivrl
fldl
loop
sbb
insb
sbb
jbe
mov
jecxz
jp
pushf
sbbl
addb
push
pop
shl
pop
repz
cmp
xchg
lds
mov
xor
push
mov
rcrb
sbbl
into
popf
dec
and
nop
jae
jae
cmpl
andl
lds
test
fisubrs
daa
mov
ficomps
rolb
inc
in
es
mov
pop
insb
arpl
popl
leave
adc
mov
js
push
add
jg
fs
imul
jo
in
mov
xor
movsl
outsl
add
mov
ret
inc
push
mov
ds
je
fs
push
movsb
and
xchg
xor
jecxz
mov
adc
icebp
jno
bound
inc
sub
pusha
iret
dec
cmp
lods
repz
lret
aaa
sbb
pusha
data16
or
jne
cmp
sbb
lods
xor
out
adc
push
out
push
mov
lcall
mov
loope
mov
add
outsb
mov
test
ss
into
jle
pop
add
jge
imul
fs
push
cmpsl
xchg
test
rorb
mov
ljmp
mov
mov
cmpsl
push
mov
lret
cmpsb
or
call
and
xor
mov
popa
push
push
sub
shlb
pop
in
jp
mov
imul
mov
loopne
cli
and
aam
inc
mov
pop
xchg
push
jge
and
test
outsb
loopne
in
ret
pop
loop
xchg
aam
es
lret
gs
fisubl
addr16
jae
jecxz
icebp
pusha
xor
shrl
jmp
out
xor
fidivs
gs
pop
pop
pop
enter
nop
in
sub
push
jle
mov
inc
imul
add
das
jne
xchg
sti
mov
es
enter
inc
arpl
pop
outsl
mov
in
lock
repz
push
addr16
scas
inc
cmpsl
inc
xlat
enter
rorb
outsb
cmpsl
mov
push
and
pop
sbb
iret
xchg
in
add
in
scas
add
sub
add
or
pop
cli
jl
sbb
out
imul
insb
jmp
dec
js
ret
lds
mov
sub
xor
rcr
pop
mov
stc
inc
and
jp
lahf
xlat
popf
or
popa
mov
xchg
fcmovbe
adc
iret
add
mov
mov
xchg
mov
in
jno
push
testb
pop
sbb
sbb
fwait
cmp
jecxz
repnz
pushf
int3
sahf
clc
enter
mov
or
cmc
mov
sbb
out
lcall
push
xchg
xchg
push
xor
mov
pop
rorb
xchg
das
adc
fadds
inc
xchg
fbstp
mov
popf
mov
or
push
add
lock
sbbl
mov
inc
push
test
mov
hlt
mov
push
cmpsl
jne
inc
fs
test
sti
jne
add
add
inc
inc
inc
xor
negb
imul
rclb
xchg
xchg
jecxz
pop
icebp
insl
dec
push
leave
mov
add
cmpsb
aaa
nop
pop
fstpt
fmuls
pop
icebp
xchg
mov
mov
sub
cmpsl
mov
out
sub
add
rcr
mov
xor
inc
je
imulb
cli
or
cmpsb
lret
and
mov
dec
fincstp
cwtl
pushf
inc
push
pushf
lret
dec
or
pushf
jno
xor
in
push
mov
fdivl
movsb
ljmp
repnz
or
xor
adc
pop
push
dec
or
mov
and
stos
mov
lcall
fcoml
imul
lcall
movsl
popa
fwait
test
mov
dec
sub
cmpsb
mov
insl
xchg
lods
jle
add
cwtl
inc
popf
mov
mov
jmp
adc
or
lret
push
repz
addr16
fwait
xor
scas
mov
cmp
pushf
clc
outsb
rol
out
fwait
rcl
or
repnz
clc
insb
inc
lfs
mov
pop
cmp
test
xchg
rcll
popf
cmp
push
dec
out
scas
adc
jl
xor
imul
mov
jle
pop
ss
mov
add
pop
push
outsb
pop
cmp
jo
in
sub
pop
mov
adc
inc
pavgb
jl
insb
adc
aaa
out
pusha
out
sub
dec
in
add
ror
adc
push
inc
dec
and
sub
mov
cs
add
mov
or
push
add
mov
fnstsw
cld
mov
cltd
sar
sahf
stc
arpl
repnz
sub
xlat
in
sub
push
adc
fcomps
and
daa
adc
xchg
cltd
sub
mov
pop
mov
mov
mov
inc
test
jmp
jmp
pmulhuw
adc
fs
jecxz
rorb
cli
or
je
sub
lea
adcl
jae
arpl
and
adc
ja
mov
jnp
add
arpl
jnp
addl
pusha
or
sbb
cs
mov
inc
stos
adc
dec
cmpsb
insb
imulb
add
faddp
lahf
rorb
dec
sub
test
inc
aas
sbb
push
pop
lea
repz
lods
or
mov
mov
jns
cmp
mov
jp
ss
je
sub
test
fistps
cmp
dec
scas
jno
imul
iret
add
adc
ret
sub
jge
out
push
cli
mov
jne
shrb
jge
or
in
or
adcb
and
movsl
mov
jbe
arpl
jle
xchg
xchg
push
popa
addr16
mov
mov
mov
insb
mov
ja
dec
push
mov
push
in
push
lcall
lcall
add
pop
je,pn
mov
xlat
mov
pop
sbb
inc
aas
das
mov
sbb
or
dec
cmp
gs
jns
mov
sub
push
dec
movsl
movsl
cltd
cmp
pop
ds
push
incl
pushf
aas
ljmp
fbld
int
inc
push
outsb
mov
movsl
mov
out
mov
adc
dec
lret
push
jle
push
cmp
mov
cs
loop
repz
popa
xchg
insl
dec
cmp
stos
cmp
sub
and
fwait
jae
fdivl
call
and
int
sahf
cs
push
adc
mov
dec
dec
sahf
mov
push
iret
jp
lods
fidivl
fisttps
lods
enter
in
mov
sbb
jae
add
repnz
push
xchg
js
pop
pusha
xlat
out
std
jge
ss
rclb
jnp
mov
test
mov
ds
lahf
and
pop
adc
push
data16
pop
addr16
stos
clc
xchg
stc
and
xor
adc
push
mov
pop
sbb
push
jbe
lds
and
mov
ret
scas
jno
cltd
add
lahf
pop
pop
sbb
inc
or
xchg
cmpsb
int3
es
adc
add
push
push
cli
movl
mov
add
adc
push
and
cwtl
fld
lahf
lcall
mov
lock
mov
daa
hlt
loope
clc
repnz
adc
jle
int3
ret
ss
xor
insb
mov
push
rclb
and
andb
test
dec
bndstx
cmp
cld
loop
mov
jne
fidivs
push
adc
out
push
pop
int
and
and
pop
andl
pop
mov
xchg
pop
jecxz
push
jns
insb
mov
cmp
cmc
pop
out
sbb
clc
nop
call
inc
cmp
pusha
sbb
add
push
sarb
mov
fdivs
sub
jo
add
push
sarb
mov
fdivs
sub
jo
add
push
sarl
mov
fdivs
or
jo
ja
cwtl
xchg
fbld
test
jg
out
aad
mov
aad
lret
das
pop
iret
xor
lahf
inc
lea
jne
icebp
pop
test
jg
outsl
aad
lds
adc
jmp
jne
gs
sub
xlat
jge
lret
and
aaa
jno
lods
pop
mov
aaa
out
lret
cmp
mov
int3
cmp
sub
test
and
notl
ss
cmp
inc
add
popa
icebp
jns
jns
xor
push
inc
repz
push
lahf
mov
fcos
stos
sahf
sbb
lcall
gs
sbb
test
std
cltd
movsb
inc
push
add
bound
add
dec
lahf
in
pop
push
outsl
dec
xlat
sub
lds
in
adc
add
adc
push
gs
push
mov
sub
dec
dec
jle
outsb
das
xor
cmp
adc
inc
mov
lahf
sbb
mov
pop
push
sub
mov
jg
shll
filds
cmpsl
mov
sahf
push
jo
mov
sarl
xor
mov
scas
rcrl
or
adc
ja
mov
testl
imul
adc
mov
daa
lock
sbb
add
fcomps
loopne
push
les
jo
cmp
push
mov
jb
push
cltd
xor
iret
sub
sbb
and
stc
or
or
das
testb
lds
cmc
aas
in
adc
jmp
jne
gs
xchg
pop
test
jg
outsl
aad
lds
cmc
aas
in
adc
jmp
jne
gs
xchg
pop
and
sbb
inc
fs
mulb
enter
lods
sub
inc
push
jae
and
adc
inc
lds
rol
mov
insl
xchg
stos
mov
and
jg
push
gs
iret
loop
cmp
pop
fdivs
shrl
mov
sbb
popf
stc
dec
pop
pop
and
jb
mov
enter
lods
adc
cmp
adc
das
inc
mov
imul
xor
ret
outsl
push
shll
mov
iret
adc
shrd
push
jle
popa
ljmp
xlat
inc
mov
jmp
loop
jo
jl
sbb
insl
imul
fwait
loope
xor
push
test
mov
mov
jge
cmp
stos
jge
pop
movsl
scas
sub
shll
push
fistps
out
es
out
ret
jo
mov
mov
push
and
pop
dec
xor
fisttpl
into
inc
rcr
enter
or
sub
push
mov
sub
xchg
jge
or
test
ja
dec
adc
inc
jb
cmp
ficompl
or
insb
aas
add
stc
int3
loope
pop
stc
mov
in
stos
inc
mov
mov
repz
mov
push
jo
xchg
sbb
dec
mov
or
sub
xor
mov
xchg
xchg
in
sti
push
aad
sbb
mov
ficoms
push
dec
dec
test
cmpsb
int
rclb
push
xchg
sar
test
mov
mov
xchg
enter
xchg
adc
add
xchg
lods
aad
inc
push
inc
push
pushf
outsb
loopne
and
rorl
inc
mov
add
sahf
inc
cli
mov
hlt
in
jae
pusha
inc
ss
subb
xor
xchg
sbb
xor
adc
lahf
fildll
arpl
loopne
arpl
push
add
push
push
add
fwait
ss
mov
ss
fldlg2
and
shl
mov
push
gs
add
in
das
ljmp
sbb
ds
mov
and
push
and
sbb
or
cmp
fcomi
or
mov
pop
negb
pop
jle
stos
lock
xchg
ficompl
sbb
shlb
xor
es
push
push
gs
pop
add
or
inc
ret
stc
jge
enter
mov
jbe
dec
into
cld
pop
in
das
fldcw
sahf
shl
adc
mov
cld
and
daa
or
enter
or
cli
lock
or
stos
pusha
lahf
and
and
and
jbe
iret
cmpsl
mov
jbe
aaa
loopne
xchg
inc
push
mov
in
jle
sub
imul
aam
cmpsl
adc
cltd
push
inc
cmpsl
push
shrl
adc
pusha
insl
lods
mov
out
fwait
idivl
xor
adc
cld
outsl
push
xor
cmp
mov
xchg
xor
mov
xchg
adc
add
xchg
rorl
jne
loopne
into
push
icebp
jge
add
jno
inc
in
test
mov
cmp
pop
stos
dec
rorl
add
mov
jnp
or
xchg
adc
nopl
mov
mov
in
shl
adc
push
inc
jno
cmc
push
cwtl
out
and
mov
sti
sahf
pop
mov
mov
push
inc
sub
ret
sahf
mov
sub
mov
test
push
adc
mov
cmp
pop
into
mov
test
jmp
mov
mov
dec
adc
jne
inc
lods
fists
mov
xchg
dec
mov
pop
pop
mul
test
xchg
lea
imul
cmp
mov
jge
iret
push
jo
sti
xchg
sub
pop
in
push
in
cld
aam
in
mov
lahf
push
stos
js
add
aad
xor
pop
jp
xchg
push
les
or
std
dec
pop
lods
iret
popf
testb
pusha
stos
loopne
adc
out
jo
jp
mov
cmpsl
fs
lret
ds
mov
aas
and
adc
xlat
add
mov
and
xchg
sti
inc
adc
std
test
stc
sti
jp
arpl
pop
mov
xorb
out
xchg
int3
push
mov
rclb
add
add
stos
addr16
insb
sub
mov
xchg
xor
or
push
dec
push
pop
sbb
sbb
ret
cmp
inc
ss
ret
cmp
insl
adc
loope
sbb
loopne
addr16
lock
es
lahf
dec
das
ret
clc
fisubrs
test
hlt
jmp
and
sbb
mov
adc
cmpsb
je
iret
das
xchg
cltd
pop
fsubs
orb
mov
add
stc
inc
filds
jnp
orb
xchg
loop
xlat
movsl
shlb
push
mov
enter
xor
jle
push
in
mov
in
cmp
les
fidivl
sbb
lods
out
imul
mov
inc
andl
xor
in
out
push
jnp
cs
movsl
scas
sub
aad
das
lret
mov
imul
dec
lret
xor
adc
je
stos
outsl
lret
xor
test
sti
mov
mov
daa
scas
or
incb
sub
cmc
adc
out
sub
aaa
sbbb
mov
out
jae
mov
cltd
adc
mov
rclb
cs
and
loope
mov
pop
mov
cmp
mov
pusha
loopne
lods
mov
jnp
fidivs
mull
xchg
pop
scas
cs
mov
ja
mov
jo
fimuls
add
sbb
in
pushf
mov
xchg
jge
mov
adc
or
push
adc
movsb
fcoml
cmp
jae
dec
jg
mov
mov
pop
pushf
inc
cmp
pushf
fcompp
push
jmp
inc
xor
lret
mov
xor
cld
dec
cwtl
pushf
hlt
sub
inc
imul
cmp
cmpsb
testl
test
push
jecxz
add
jne
adc
push
adc
sub
outsb
sub
mov
shrb
mov
mov
sub
cmp
lods
test
mov
dec
or
cmp
and
dec
insl
xchg
dec
popa
adc
xor
and
jne
mov
cmp
cwtl
and
mov
jnp
lahf
pop
mov
lds
and
mov
push
adc
mov
ds
lea
ss
repz
sbb
xchg
xchg
add
aam
icebp
pop
ljmp
fwait
jmp
inc
cmpsb
jns
sub
pop
stos
pop
les
lahf
mov
mov
sub
mov
xchg
jnp
xor
push
cmpsl
mov
inc
cmp
inc
test
ds
dec
dec
mov
ficoml
inc
inc
clc
jl
jne
mov
sbb
fcomp
cmp
jnp
and
mov
jnp
sub
cli
mov
pop
sti
or
int3
xchg
js
mov
push
ss
mov
xor
and
cmp
pushf
js
ja
loop
leave
lret
or
add
int
xchg
xorl
and
sbb
jle
dec
imulb
shrb
shll
out
mov
lock
clc
jbe
dec
xchg
jo
jns
xor
jb
jnp
push
adc
decl
dec
xorb
or
in
int3
pop
push
je
lds
mov
popa
inc
sti
dec
lods
imul
out
testb
fisttpll
sbb
jne
pop
add
sahf
sub
or
push
dec
dec
insb
xor
cmpsb
pop
repnz
mov
inc
xchg
lock
pop
and
data16
hlt
or
mov
mov
js
movsl
sbb
or
and
jbe
jl
addl
repz
movl
pop
sub
stos
cmp
aad
or
gs
pop
push
push
sbb
or
add
inc
and
xor
cld
jmp
mov
mov
shll
ficoml
and
ljmp
test
sti
pop
stos
ds
in
repz
jle
and
das
sarb
js
sub
jns
sti
or
inc
push
push
inc
lcall
mov
aam
cmp
stc
movsb
mov
jle
jae
sub
clc
mov
pop
sbb
popa
leave
std
or
xorb
dec
or
int
sub
aad
and
mov
shll
aaa
push
pop
scas
cmp
idivl
cmp
lock
data16
shrl
dec
adc
push
enter
sahf
mov
xor
mov
cmp
push
jl
mov
stc
icebp
into
pop
icebp
out
sti
mov
cmpsl
leave
enter
inc
in
xor
pop
xor
or
js
fsubl
push
or
lea
mov
sahf
sub
push
mov
cld
mov
addr16
or
adc
les
cmp
and
push
mov
mov
mov
xor
mov
hlt
jle
sbb
loopne
xor
mov
jno
mov
lods
sbb
mov
mov
stos
subl
push
in
mov
pop
hlt
mov
outsb
jne
xchg
cmp
test
movsl
push
push
or
mov
adc
inc
jle
sbb
mov
mov
fwait
xchg
sbb
or
add
sbb
mov
adc
pop
jge
mov
fbld
insl
dec
sub
xchg
in
mov
js
xchg
jge
cmp
in
mov
arpl
sbb
inc
xchg
push
sub
mov
gs
mov
pusha
dec
mov
jae
inc
pusha
inc
jg
or
mov
inc
fld
dec
sub
or
or
sbb
jno
mov
flds
movsb
lods
or
cmp
test
cltd
dec
or
out
jbe
dec
mov
mov
mov
dec
add
aas
fcoms
shrl
add
into
xlat
add
jae
lcall
int3
pop
sub
insl
mov
imul
push
jmp
inc
scas
xor
fs
cmp
mov
inc
pop
mov
inc
xor
ljmp
cs
mov
fld
mov
dec
cwtl
insb
cld
mov
jmp
push
inc
mov
ja
xchg
mov
xchg
cmp
cmpsl
mov
push
lock
mov
jo
sub
cmpsb
shrl
inc
loopne
push
cmpsb
pop
jo
push
push
sbbl
sbb
adc
arpl
arpl
lret
je
leave
cmpsl
popa
data16
lret
mov
cmp
xchg
cmp
xchg
mov
aad
sbb
inc
cmp
lds
sbb
adc
cmpsb
inc
xlat
cmp
loope
hlt
testl
lea
sbb
sbb
mov
xor
xor
mov
pop
pop
ror
inc
inc
cmp
jecxz
out
jns
fmul
addr16
pinsrw
inc
test
icebp
fs
lret
jmp
mov
inc
and
add
pop
fisttpl
and
lcall
sub
mov
dec
fildl
pop
push
and
sub
sti
sarb
push
scas
lret
cmpsb
pop
jo
or
ljmp
cltd
shrd
lock
in
lea
ljmp
les
mov
data16
es
pop
ja
pop
push
pop
sub
out
xchg
enter
js
push
les
pop
add
xor
andb
sbb
jne
in
sbb
and
mov
and
mov
fs
xchg
cmpsw
or
hlt
ret
aas
pop
xchg
lds
mov
sub
outsb
cmpsl
sbb
inc
stos
cmpsb
xchg
or
mov
fs
dec
jg
ljmp
push
jmp
ss
xor
mov
xor
out
push
sbb
adc
fiaddl
xchg
mov
sub
adc
and
outsl
dec
xor
arpl
add
aas
push
test
jmp
or
rcll
xor
xchg
push
cmp
dec
or
push
push
fisttps
mov
jns
inc
dec
in
or
popf
adc
xor
pop
mov
lock
hlt
mov
fmuls
push
les
pop
mov
aas
push
pushf
das
sub
fisubs
lret
in
push
cmp
rcrl
or
or
push
arpl
cmp
xlat
imul
push
fcomps
lods
data16
or
or
stc
loopne
pushf
sti
rcr
xor
mov
cmp
mov
fsts
repz
xor
dec
out
shll
adc
aaa
repnz
nop
xchg
imull
dec
cmp
stc
sub
lods
in
mov
push
hlt
push
push
xor
mov
pop
daa
movsb
sti
pop
ds
mov
call
and
pop
push
or
hlt
adc
jbe
push
loop
mov
jmp
sar
inc
xor
bnd
pop
mov
scas
add
fwait
cmpsl
adc
lea
push
jno
rolb
sub
in
insb
insb
xchg
or
outsl
lods
mov
lods
cmpsl
inc
xor
mul
movsl
mov
in
jle
in
or
adc
inc
dec
cmpsl
ret
mov
sti
adc
mov
sub
imul
ljmp
xor
pop
test
test
sub
bnd
dec
jno
pushf
pushw
mov
push
jne
jo
inc
popf
lods
outsl
enter
dec
or
stc
mov
mov
lret
jns
xchg
int3
cmp
test
lret
dec
cltd
xchg
lods
scas
sbb
dec
in
jne
pop
insb
movsb
inc
hlt
jne
push
sbb
cmpsl
dec
jns
xchg
add
cltd
inc
lahf
or
fcmovbe
fisubs
cwtl
mov
cmpsl
mov
pop
cmp
and
mov
loopne
and
enter
and
add
dec
push
hlt
mov
mov
outsl
imull
fiadds
cmpsb
or
jae
ljmp
mov
or
xor
mov
sbb
xor
xlat
and
int
xor
mov
mov
mov
imul
sub
sub
mov
jo
rcr
in
jb
push
mov
pop
data16
int3
inc
sub
jle
cmpsl
movsl
dec
and
aad
pop
jo
popf
jno
and
dec
aad
subl
pusha
shrb
out
mov
inc
mov
pop
jbe
jle
scas
inc
or
in
insb
jbe
push
mov
sub
in
jns
xlat
sbb
mov
adc
rolb
jbe
nop
ja
data16
sbb
test
addr16
add
out
pop
xorl
add
xchg
sti
mov
lret
add
out
iret
sub
pushf
dec
sbbl
repnz
out
and
dec
mov
jne
inc
pusha
inc
fwait
pop
mov
adc
jecxz
cmp
aad
mov
or
shll
and
push
xor
pop
or
and
jmp
jmp
mov
jp
shll
mov
fs
lahf
or
mov
and
push
cmpl
mov
shrl
mov
fistpl
mov
jbe
icebp
notl
push
push
dec
mov
dec
add
cmpsl
adc
shrl
lods
repz
xchg
in
push
cmp
inc
jae
mov
mov
xchg
shufps
jg
jg
inc
inc
outsb
dec
adc
pop
movsb
cmc
rol
enter
into
sbb
mov
dec
ljmp
jb
lahf
pop
jb
sbb
push
sbb
push
rcrl
jge
std
out
mov
loopne
bound
lock
cltd
bound
xchg
adc
int
imul
jg
std
out
sub
fimull
dec
mov
popf
fldl
cmp
mov
xchg
jns
adc
lock
and
cmp
cmpsb
push
sbb
mov
push
insl
insl
sarb
mov
out
ljmp
imul
mov
or
into
xor
gs
mov
mov
das
fwait
aam
mov
fstl
pop
mov
mov
pop
loope
mov
xchg
mov
adc
jo
in
arpl
dec
popf
jbe
mov
leave
mov
out
imul
movb
daa
mov
xor
mov
jnp
adc
outsl
mov
push
xor
dec
dec
in
jecxz
push
mov
cltd
daa
adc
in
and
mov
fs
cmp
or
sarb
jne
sbb
repnz
iret
mov
dec
cmp
xlat
xor
test
xlat
repnz
popa
insl
pop
mov
rclb
sub
xor
addr16
sub
inc
sbb
push
rcrb
push
sbb
cld
ljmp
int
xchg
dec
cmpsl
es
dec
push
loop
mov
cld
pop
mov
dec
jne
jno
cmp
test
into
jp
das
xchg
mov
aam
pop
in
imul
sahf
hlt
mov
aam
jne
loopne
out
outsl
idivl
sahf
movsl
insb
popl
xor
push
outsl
pushf
dec
dec
comiss
sahf
mov
enter
and
nop
xor
fistl
xor
pop
movsl
dec
shlb
or
sub
stos
add
stos
in
into
jmp
sub
or
adc
push
push
mov
test
bound
mov
dec
jmp
data16
lret
inc
xor
hlt
cmp
mov
mov
fimull
adc
mov
xchg
dec
cmp
or
push
ficomps
fistpll
neg
cli
jb
pop
mov
call
andl
jmp
inc
xchg
lea
adc
push
repnz
inc
jmp
sub
add
out
std
jb
sarl
mov
push
jmp
mov
pop
mov
fnstenv
dec
mov
rolb
jl
dec
jp
push
call
adc
in
pop
xchg
xchg
push
mov
push
das
out
mov
pop
aaa
stos
mov
ret
jbe
pop
xchg
in
jl
adc
icebp
pop
jl
jb
cmpsb
scas
imulb
test
push
or
pop
mov
adc
or
adc
mov
jbe
and
bound
lock
stos
or
pop
cld
dec
and
pop
cld
jl
cltd
mov
std
out
cld
rolb
outsb
subl
jp
jmp
push
and
jnp
add
and
mov
icebp
xor
mov
and
pop
icebp
inc
outsb
rcl
js
pop
pushl
push
hlt
pmulhuw
aam
jae
loopne
mov
sub
mov
jge
mov
outsb
pop
insl
lret
and
fwait
or
in
sbb
xor
mov
xchg
add
addr16
mov
arpl
push
xchg
mov
cmp
dec
pop
das
sub
mov
stc
dec
fidivrs
daa
fildll
movsl
push
aas
adc
sub
and
sub
jnp
das
daa
or
push
jecxz
jns
pop
jno
out
aaa
iret
movsl
xor
int
jno
and
sub
lret
out
pop
aas
clc
cmp
stc
mov
int
insb
cmpsl
or
fsubp
sub
repnz
imul
add
cld
jle
inc
push
cmpsb
adc
test
and
mov
mov
xchg
lods
out
push
xlat
lods
test
cmp
xlat
movsl
pop
mov
mov
movsb
je
movsl
call
aad
jbe
mov
popl
sub
fbld
pop
mov
and
ljmp
jle
jecxz
xchg
pop
fisubrs
mov
cs
imul
mov
sbb
ret
pop
das
adc
lea
pop
add
pop
add
mov
out
sahf
cld
pop
movsb
inc
mov
or
mov
inc
daa
mov
and
mov
xor
mov
scas
xor
repnz
adc
shl
addr16
shll
call
loop
sub
add
dec
mov
xor
call
sahf
push
jmp
push
insb
das
pop
mov
das
imul
pop
ret
xchg
add
lods
mov
cmpsb
aam
dec
pusha
sar
push
push
cs
jecxz
imul
mov
std
push
pop
lock
lret
dec
inc
fwait
sub
icebp
mov
adc
push
in
into
shll
or
movsb
xchg
std
std
in
fsub
mov
shll
mov
sbb
jnp
mov
aad
outsl
shl
push
mov
repnz
bound
mov
lods
cmp
into
cmp
push
sub
cltd
sti
xchg
ja
sbb
inc
mov
arpl
xchg
jb
jp
lds
inc
cmp
movsb
negb
xor
outsl
mov
jnp,pn
dec
fs
into
in
es
in
cmp
mov
pop
add
rorb
mov
add
bound
and
insb
movsb
dec
cs
arpl
xor
shl
inc
pop
js
jg
jl
leave
jge
xchg
es
inc
lcall
aas
repz
inc
mov
aad
repnz
pmaddwd
in
adc
jmp
jne
gs
xchg
pop
test
jg
outsl
aad
lds
cmc
aas
in
adc
jmp
jne
gs
xchg
pop
mov
aad
movsl
outsl
inc
pop
lds
adc
jmp
jne
lea
out
jg
outsb
aad
aad
cmc
mov
cli
gs
jmp
jo
inc
lcall
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
aam
les
hlt
cmp
sub
pop
jmp
pop
test
mov
stos
adc
push
lret
and
and
aam
les
hlt
cmp
sub
movsb
adc
mov
stos
adc
xor
xor
and
int
fisttpll
in
cmp
sub
jnp
imul
test
leave
sbb
adc
imul
stos
inc
hlt
push
xchg
sub
jnp
dec
jne
arpl
sarb
std
jb
rcrl
add
mov
dec
cmp
mov
jae
popa
shr
insl
je
scas
lcall
sti
fstpt
pop
push
mov
lret
aas
mov
int
push
dec
loop
sti
adc
clc
lret
xor
and
aad
aam
cmp
clc
test
adc
je
aas
fwait
dec
jmp
add
mov
outsl
dec
pop
jns
add
imul
ret
push
dec
push
fs
inc
xchg
scas
in
mov
lret
sti
xor
cmp
and
mov
sbb
pop
xchg
stos
mov
fmuls
inc
xor
push
fistl
xor
and
sbb
cmp
sub
jnp
imul
mov
stos
or
sbb
cs
and
mov
cmp
and
cmp
sub
adc
popa
scas
inc
orb
jle
outsb
fwait
pop
xchg
sub
aaa
test
mov
testl
je
and
lret
inc
test
dec
mov
jne
dec
mov
movsb
imul
je
fs
adc
add
xor
and
aam
les
hlt
cmp
sub
movsb
imul
je
fs
adc
add
xor
and
aam
jmp
dec
xchg
jmp
mov
popa
sub
add
cwtl
sti
jns
out
add
dec
mov
movsl
aam
mov
jae
mov
sbb
cmp
mov
out
push
aam
pusha
mov
sbb
fmuls
out
insl
sbb
es
sbb
cmp
test
fdivs
inc
iret
aaa
es
xchg
cmp
lcall
sbb
push
push
mov
sub
dec
in
mov
mov
dec
mov
mov
imul
addr16
xchg
sub
sbb
in
lahf
mov
imul
lods
mov
fisubrs
or
mov
stc
mov
mov
sbbl
loopne
ljmp
ljmp
jmp
xchg
pushf
lods
fldcw
push
in
pop
pop
and
dec
scas
in
ret
xchg
pop
mov
pop
sub
jge
or
cmpsl
mov
icebp
mov
and
adc
ljmp
mov
out
pop
push
inc
aaa
mov
push
adc
mov
and
or
rorl
repnz
mov
pop
dec
ja
pushl
outsb
mov
subl
out
or
cmp
adc
testb
mov
pop
adc
mov
xor
or
cwtl
fldenv
and
in
and
push
dec
insb
les
test
ficompl
push
les
into
cmp
in
int3
or
aam
or
pop
movsb
mov
call
cmp
int
lret
add
je
add
fmul
or
and
imul
push
xchg
cmp
cli
jbe
adc
out
push
sbb
fiadds
jmp
movsb
or
adc
fs
sbb
icebp
pop
dec
bound
dec
mov
pop
mov
jg
jmp
lret
int3
sahf
ret
lods
test
adc
pop
out
push
dec
mov
dec
jae
sbb
fwait
leave
mov
loope
in
out
add
or
in
iret
add
sbb
loop
push
jp
add
repnz
call
mov
cld
sub
arpl
mov
cld
push
bound
xchg
xor
int
mov
mov
int
loopne
adc
shlb
cmc
sbb
aas
inc
int
clc
aad
and
and
stc
arpl
inc
cmp
hlt
pop
adc
adc
add
inc
inc
mov
adc
mov
fiadds
decl
pusha
lret
inc
xor
jecxz
scas
lcall
mov
rol
mov
testb
lret
sub
lods
cmp
stos
mov
push
cmp
call
cmpsl
or
out
inc
gs
adc
sbb
or
xchg
lret
sti
and
int
aas
and
mov
mov
and
loope
icebp
or
mov
imull
lret
jecxz
sub
add
out
push
xchg
std
movsb
test
outsb
pop
mov
jg
sbb
push
jg
dec
xchg
idiv
mov
stc
test
push
pop
push
in
cmp
xor
push
loop
and
repz
das
mov
shll
mov
xchg
out
call
fcmovbe
pushf
sub
adc
lcall
into
insl
xchg
sub
push
jmp
push
mov
add
mov
ss
pop
pop
jl
pop
inc
jae
icebp
lcall
std
lret
into
fs
imul
jbe
jmp
jge
dec
data16
add
pop
repz
movsb
cmpsb
sub
jle
shrb
adc
adc
add
popf
add
dec
jp
mov
pop
call
xor
adc
shl
dec
and
sub
mov
cmp
jge
insl
insb
sbb
lcall
inc
xchg
xor
je
lahf
and
das
mov
push
pop
nop
and
out
mov
shrb
aas
fmull
pop
dec
mov
push
ror
shl
gs
mov
ret
std
jnp
aam
mov
movsb
repnz
test
adc
add
loope
xchg
cmp
movsb
mov
fdivl
jb
mov
jecxz
popa
cmpb
call
loope
add
fdivrl
fldl
ja
mov
xor
in
addr16
incb
or
cmp
arpl
add
popf
mov
or
imul
push
sahf
jb
pop
addl
mov
or
jns
lret
ljmp
ficoms
cmpsl
inc
jns
or
mov
pop
imulb
mov
out
xor
jge
loope
jo
adc
loopne
fcoml
xor
sbb
inc
jmp
or
push
push
sahf
inc
loop
iret
mov
xchg
lahf
inc
mov
xchg
cmpsl
add
cmp
jge
xor
xlat
roll
fwait
cmp
jbe
ds
dec
test
fwait
xor
or
imull
or
or
or
jae
icebp
sub
ja
pop
mov
mov
insl
cmp
sub
stos
adc
mov
sarb
pop
lods
add
lcall
lret
mov
and
js
aaa
mov
mov
push
outsl
dec
mov
push
mov
push
lret
lret
je
and
inc
data16
sbb
int3
aam
aaa
loop
pop
cli
cltd
pop
inc
mov
mov
sbb
push
data16
jae
and
rclb
cltd
sub
int3
cmp
dec
mov
sahf
pushf
stos
jnp
lds
jmp
lds
mov
pop
ljmp
movsb
icebp
dec
shlb
mov
lret
add
lret
sbb
sub
xchg
ss
pop
fdivs
mov
sti
mov
mov
push
fs
lahf
outsb
mov
jg
cli
lds
in
shlb
cmp
divl
mov
xlat
push
scas
xor
icebp
stos
sar
dec
mov
and
pop
inc
sub
jl
sub
mov
push
jmp
add
imul
jne
mov
cmp
cmp
inc
iret
ror
and
dec
cmp
inc
sbb
iret
call
jge
stos
ret
bound
inc
aad
pop
push
push
jl
jle
cmp
add
es
add
inc
jno
shr
mov
inc
ss
fs
out
test
lahf
out
inc
std
jnp
test
sahf
clc
aaa
in
xor
in
mov
jmp
dec
stc
mov
adc
jno
in
xor
adc
and
push
mov
clc
jno
xchg
imul
sub
movsb
shrl
loopne
push
mov
loop
inc
jns
sbb
cltd
push
push
cltd
cmp
adc
push
cmp
xor
aam
xlat
push
mov
fnstenv
mov
fidivl
push
sbb
push
repnz
ja
sbb
adcb
inc
cmp
iret
xlat
cmpsb
pushf
inc
pushf
movsl
pop
cmp
scas
add
and
push
iret
test
cmp
xlat
mov
in
mov
mov
cmp
sub
dec
rcrb
mov
rolb
ret
adc
jns
adc
dec
lahf
jae
in
xchg
jno
add
outsl
test
lock
sbb
out
cmp
cmpsb
movsl
add
mov
add
push
js
sti
movsl
ljmp
jae
das
mov
xchg
mov
pop
mov
movsl
clc
jb
add
sub
push
test
and
addr16
mov
mov
sub
push
out
in
popf
ret
xrstors
ret
sbb
push
gs
insl
popf
add
mov
mov
and
cwtl
jbe
dec
sub
into
fisubrl
pop
dec
scas
sub
jae
fisubrs
clc
mov
fisttpll
imul
lock
mov
in
movsl
pop
xchg
xchg
sub
out
xor
sub
in
lds
push
jne
ljmp
mov
cld
inc
mov
movsb
dec
mov
aad
lahf
pushf
gs
test
lret
fdivrl
in
rorl
mov
popf
dec
imul
xchg
loopne
jo
adc
lds
arpl
sbb
mov
test
sub
clc
or
lock
dec
jno
lcall
hlt
outsl
out
rcl
push
cmpsl
jno
pop
push
sbb
or
pop
jb
loopne
lods
mov
call
or
in
imul
repz
subb
cmp
push
xchg
jbe
pop
andl
xor
insb
je
dec
sub
jmp
xor
out
xchg
in
and
xor
negb
lea
ljmp
in
lahf
jmp
push
or
dec
outsb
movsb
in
aam
cmp
ret
test
das
and
push
jmp
cmp
jns
inc
in
and
mov
jmp
dec
enter
cli
mov
cmp
xchg
arpl
mov
jne
mov
dec
loopne
lods
jmp
pop
out
mov
xor
pop
out
pop
push
shrl
push
mov
sti
jb
int3
jl
test
push
mov
fxch
cmp
sub
dec
sub
in
cmp
xor
jns
pop
into
mov
arpl
scas
test
fcoml
cli
je
enter
popf
or
inc
xchg
pop
lods
xchg
xchg
mov
cwtl
xor
jnp
ja
ret
pop
inc
xor
rclb
mov
pop
and
push
push
int
adc
mov
loop
rcrb
les
push
imull
mov
das
test
pop
sbb
adc
xor
add
negb
jecxz
in
inc
dec
mov
xchg
lcall
mov
push
add
mov
lea
mov
mov
in
or
inc
or
dec
adc
rol
cs
shrl
in
out
push
aaa
lea
rolb
shl
adc
addr16
imul
mov
pop
or
mov
xor
mov
dec
outsl
mov
or
out
push
sahf
popa
adc
push
mov
ret
or
xchg
or
jb
jge
in
add
xchg
push
dec
pop
mov
leave
adc
push
add
mov
jp
inc
in
inc
lds
ja
jo
cltd
mov
fcmovu
add
mov
xor
jae
push
movsb
js
fcmovnb
hlt
imul
or
push
inc
shll
scas
sbb
clc
das
mov
sub
jae
faddl
pop
loope
mov
mov
aas
lret
push
pop
pop
fwait
outsl
mov
xchg
test
adcb
cmpsl
push
cwtl
xor
lea
push
andl
mov
out
and
hlt
enter
cmpsb
ds
icebp
add
in
xchg
sbb
bound
lods
dec
lock
loopne
pop
inc
xchg
xorb
loopne
mov
and
movsb
cltd
jle
mov
inc
sub
cwtl
lods
loop
test
jae
cmove
in
outsl
cld
shlb
xchg
lock
std
and
in
fs
out
pop
mov
fisttpll
pushf
mov
or
hlt
or
adc
mov
mov
sar
in
lret
cmp
jge
sbb
xor
loopne
add
pushl
inc
int
rcrl
sub
lds
fwait
inc
push
or
push
cmpsl
mov
xchg
cmpsb
cmp
mov
loope
dec
xorb
mov
loop
push
scas
jmp
xor
gs
push
add
aaa
roll
push
and
ds
push
addb
sub
cwtl
in
push
jle
loop
mov
aad
cmp
aaa
testl
movb
mov
sti
sbb
out
std
mov
mov
pop
ja
cmp
ret
sub
sbb
ja
aad
sbb
jmp
jmp
ss
push
dec
cmc
mov
cmc
jle
aas
sub
mov
imul
dec
shl
dec
mov
sahf
repnz
pusha
dec
inc
inc
inc
hlt
sub
jne
sub
into
inc
in
cli
pusha
sub
cmc
and
push
push
jbe
insl
stos
aad
and
jb
shrl
fistpll
sbb
jg
jl
out
push
push
test
jbe
or
inc
lcall
pop
imul
cmp
cs
mov
fistl
add
add
out
imul
sbb
push
out
pop
sub
jg
clc
add
in
add
mov
pop
push
push
push
icebp
push
dec
popf
cli
cmp
sbb
jge
stos
push
out
lret
pop
leave
push
dec
out
std
push
xchg
mov
inc
decb
xchg
sub
jns
push
or
lret
fstps
into
sbb
out
mov
testb
movsb
stos
xchg
push
mov
jecxz
loop
icebp
out
std
std
shll
mov
shll
mov
mov
jno
lds
lcall
mulb
mov
xchg
jbe
andb
arpl
add
enter
fidivrs
sub
dec
adc
adc
pop
fisubrs
xchg
mov
or
and
repz
xor
in
rorl
aad
lcall
fs
xor
mov
cli
or
scas
mov
incb
sbb
cwtl
pushl
test
pop
popl
loopne
std
xchg
mov
inc
dec
sahf
cmp
rcrl
inc
inc
xor
xchg
jno
in
sbb
xchg
mov
out
xchg
xchg
cmc
idiv
add
push
adc
push
icebp
clc
xchg
cmpsl
cmp
adc
mov
shrb
mov
daa
adc
or
push
lds
xor
mov
adc
in
ret
adc
jecxz
roll
je
or
lcall
ljmp
insb
jae
mov
pop
aad
or
and
cld
pop
rcrb
mov
out
gs
cvtpi2ps
inc
xchg
pushw
mov
pop
or
xchg
sub
fisubs
fnsave
sbb
jb
fidivrl
idivb
cmp
subb
shl
inc
std
aam
fcomps
lods
inc
xchg
outsl
mov
insb
or
sti
jb
fs
in
cmp
dec
mov
mov
or
std
inc
jecxz
jmp
stos
add
sbb
dec
movsl
cmpsl
inc
hlt
out
out
add
mov
jae
pop
pop
dec
pop
xor
in
mov
sahf
dec
cmc
push
dec
add
ret
mov
sub
adc
fucomi
test
repz
shl
xchg
and
adc
adc
gs
aaa
xchg
mov
addb
imul
add
mov
cmp
fimull
ret
movsb
repz
rcl
xor
sbb
add
stos
lret
aam
ds
mov
push
orb
shrb
jp
popf
jnp
lock
adc
loopne
or
jecxz
imul
cmpsl
mov
or
xchg
add
pop
push
movsl
mov
shlb
outsl
lea
dec
pusha
mov
imul
cld
jg
lret
ss
shl
mov
in
mov
push
xor
lahf
sub
pop
lea
imul
inc
xor
lods
fucomip
sbb
mov
pop
xchg
sbb
xchg
das
rcll
jmp
ret
sbb
popa
cmp
inc
popa
fiaddl
xchg
and
test
aad
push
mov
mov
stc
and
xor
call
mov
pop
jle
push
pushl
jno
stc
pop
adc
in
adc
fstl
leave
rclb
mov
roll
xchg
rcr
scas
repnz
clc
xchg
shlb
pop
out
sub
and
dec
ret
int
fsubrs
pop
adc
sub
or
imul
fldt
addr16
ret
lds
sub
lahf
pop
jmp
pop
mov
cmpsb
test
in
test
cwtl
push
pop
and
or
roll
pop
movsb
pop
and
leave
movsl
stos
adc
sarb
or
inc
dec
insl
dec
pop
jno
inc
jl
xor
out
add
lds
movsb
out
arpl
dec
sarl
mov
sarb
mov
xchg
scas
xor
fimull
inc
stos
inc
inc
stos
pop
xor
pusha
movsb
mov
dec
push
xor
adc
push
dec
pop
and
or
cwtl
sarb
inc
mov
movsb
mov
xchg
inc
and
daa
pop
or
adc
outsb
xchg
push
push
xchg
add
sarb
incl
cld
jne
ret
jp
mov
test
repnz
push
adc
in
sub
mov
pop
insb
inc
pushw
dec
xor
ljmp
xorl
ret
nop
in
xchg
mov
cmc
lcall
repnz
test
push
dec
or
sbb
fnstenv
mov
mov
test
push
stos
lds
sbb
enter
mov
lret
test
lahf
or
jl
bound
dec
xchg
imul
int3
int
dec
repnz
fdiv
nop
jno
cmc
lcall
pop
mov
and
loope
cli
ret
xchg
addr16
jecxz
inc
andl
sub
lret
add
xor
pushf
sub
inc
add
repnz
addl
sbb
insb
and
je
leave
mov
fs
xchg
out
notb
mov
subb
xor
sbbl
pop
add
roll
dec
mov
test
add
outsb
jo
sub
call
mov
repnz
jl
mov
in
and
das
and
in
jo
sbb
cmp
dec
mov
push
dec
mov
xor
ret
cwtl
and
popa
mov
or
mov
cmp
pushf
pop
aas
add
xor
inc
lds
nop
mov
js
push
xlat
cmpsb
cmp
fwait
and
mull
inc
loop
pusha
sbb
and
and
rolb
gs
sti
repz
ret
add
xchg
js
xor
xor
imul
fdivrs
repz
mov
inc
push
in
mov
adc
jno
jl
ficompl
in
sbb
out
or
xchg
jb
dec
adc
aam
or
mov
in
dec
addr16
xor
cld
fistps
push
hlt
jecxz
mov
pop
fbld
dec
divl
push
pop
adc
movb
sub
ja
push
in
xor
mov
loope
movups
lret
call
sub
jg
inc
int3
sbb
in
inc
jne
int3
add
sti
cmp
int3
push
insl
mov
fcoml
mov
cmp
mov
xchg
xchg
cmp
cld
pop
es
cmpsl
lods
mov
dec
test
movsb
xor
push
jecxz
or
sub
std
in
adc
out
xchg
outsb
out
cli
sub
xchg
mov
xchg
push
imul
es
jge
add
ja
mov
jae
push
sub
fistpl
mov
cmp
leave
roll
push
push
jo
mov
test
test
or
enter
adc
and
cwtl
push
jbe
xor
les
pop
shll
xchg
lret
enter
out
xor
xor
cmc
aad
loop
out
pop
add
sbb
lock
and
js
repnz
stos
pop
mov
jns
xchg
adc
aad
lahf
xor
fldenv
cmpsb
dec
and
mov
jecxz
jns
push
jbe
mov
mov
or
aaa
jne
repz
xchg
fcomps
and
lcall
dec
inc
std
iret
push
jno
leave
sub
negl
jmp
pop
mov
add
dec
mov
xor
sbbb
fistpll
cmovs
dec
mov
movsb
jmp
sbb
dec
xchg
xlat
mov
mov
add
jns
xor
and
xchg
xlat
jne
testb
push
flds
and
out
pop
cmp
inc
scas
and
mov
cmp
mov
lea
mov
jne
mov
jbe
cltd
and
jmp
adc
inc
fnstcw
mov
pop
push
push
and
mov
sahf
mov
pcmpeqb
dec
lods
sub
inc
pop
mov
xor
es
cmp
imul
clc
push
repz
in
pop
cwtl
fstpl
rcr
ret
sti
orb
inc
es
mov
je
or
mov
daa
scas
loopne
outsb
addr16
sbb
in
loope
ret
bnd
test
mov
pop
scas
sub
inc
dec
inc
int
mov
push
xchg
out
adc
push
sbb
add
cmp
cmp
sub
movsb
imul
je
fs
adc
add
xor
and
aam
les
hlt
cmp
sub
movsb
imul
je
fs
adc
add
xor
and
aam
les
hlt
cmp
sub
movsb
imul
je
fs
adc
add
jmp
sbb
or
cmp
sub
jnp
imul
fsubl
mov
add
adc
cmp
insl
cli
sbb
cli
or
jge
imul
push
sbb
or
cmp
sub
fidivrl
ljmp
pop
stos
arpl
dec
lods
push
xchg
push
sbb
or
cmp
sub
ficompl
ljmp
push
stos
jg
mov
inc
pushl
imul
mov
push
xor
push
mov
fistpll
xchg
and
push
push
jbe,pt
punpckhwd
mov
push
out
mov
fs
mull
fucom
call
aam
and
je
inc
std
les
inc
push
pop
mov
add
push
adcl
or
or
sbb
lcall
rcrb
dec
mull
mov
call
sub
nop
loopne
repnz
insb
mov
sahf
mov
push
jecxz
xchg
xchg
or
fimull
repnz
xor
inc
sub
and
orb
es
or
test
ljmp
pop
stos
fistps
dec
add
sbb
or
cmp
sub
pushf
cmp
popa
neg
ret
add
sub
or
decb
sbb
push
out
jg
arpl
fnstcw
imul
out
mov
fmull
cmp
das
mov
dec
mov
scas
int
jno
popa
lcall
dec
pop
mov
push
sbb
or
cmp
sub
fidivrl
ljmp
pop
stos
dec
pop
mov
push
sbb
or
cmp
sub
fidivrl
into
jecxz
sbb
fs
mov
xor
cmp
sbb
test
push
and
sub
flds
push
fildll
bound
cmpsl
xor
xchg
xchg
cmp
jmp
jne
fs
ja
adc
rol
lods
mov
adc
flds
dec
cmp
in
pusha
loope
imul
jbe
or
fwait
cs
xor
negl
fists
leave
jge
les
sahf
testl
scas
js
out
in
lds
mov
loop
repnz
or
or
aam
pop
push
jecxz
lds
mov
lea
ljmp
ds
outsb
mov
mov
or
push
pushf
or
mov
enter
out
and
popf
inc
mov
adc
repnz
push
add
push
fisttpl
icebp
imul
mov
inc
xor
adc
mov
popf
mov
cld
imul
or
or
fmull
add
ds
jle
xor
jbe
mov
dec
and
cmp
pop
inc
and
mov
repnz
repnz
mov
sbb
arpl
xchg
push
das
call
push
mov
fsts
sahf
xor
push
std
fs
cwtl
ljmp
fldl
std
dec
in
mov
push
xchg
data16
fimuls
mov
jbe
xor
loope
in
mov
outsl
divl
lds
jecxz
dec
push
adc
lahf
mov
xchg
pop
xor
jnp
fld
sbb
in
test
sub
adc
mov
sbb
lret
dec
test
push
daa
jecxz
jg
and
inc
xlat
sub
repnz
mull
cmpsb
and
fstpt
xor
bnd
dec
jns
cltd
hlt
test
test
mov
lahf
xchg
mov
adc
jp
and
inc
mov
ret
sbb
scas
cwtl
jae
shlb
push
or
lahf
call
push
adc
popa
es
jmp
xchg
rorb
dec
pop
jb
or
sbb
mov
add
dec
jmp
loopne
sub
test
stc
lods
inc
lcall
andl
cwtl
orl
mov
adc
insl
lcall
jno
add
cmp
mov
xchg
sbb
vmovdqu
out
xchg
bound
imul
je
xchg
dec
mov
mov
sbb
fidivrl
mov
push
mov
mov
or
xor
mov
sbb
movsl
pop
gs
subb
jae
out
add
jbe
xchg
test
push
xor
jb
popf
es
cmpsb
cmpl
imul
cli
or
je
push
insb
jp
mov
inc
lea
mov
aam
loop
jecxz
ficoms
ret
aad
stos
andb
dec
clc
sahf
jge
into
xor
scas
xor
pop
out
sbb
ss
cmpsb
iret
push
cmp
div
mov
dec
insb
sbbl
jp
cmp
pop
push
jmp
loopne
or
fmull
movsb
push
dec
mov
fst
inc
mov
mov
outsl
mov
and
outsb
cmp
dec
pushf
cld
ret
sbb
mov
xchg
bound
cmc
lock
jl
pop
popa
aad
hlt
stos
mov
fisttpll
push
ja
jle
jl
repnz
ja
sahf
xchg
pop
nop
push
and
repnz
sbb
cmp
aam
adc
aas
test
cs
arpl
jl
gs
fisubrl
xor
lods
sti
or
pushf
shrb
inc
or
xchg
ds
xor
fildl
addl
mov
test
test
xchg
pop
ss
inc
jge
in
push
xlat
ja
or
xchg
sub
sbb
outsb
scas
jge
jne
aaa
insl
add
sub
incb
pop
mov
jo
or
jp
hlt
push
jno
inc
test
mov
sarb
cs
test
nop
cwtl
scas
or
push
and
push
mov
out
xlat
test
test
sbb
sbb
lds
sbb
xor
test
inc
daa
hlt
mov
jp
adc
mov
sub
mov
lea
jecxz
xor
in
mov
pop
mov
or
cs
clc
jns
rcll
faddl
leave
popa
xor
push
sub
adc
cmc
mov
dec
sbb
mov
cmp
aaa
push
dec
sub
in
sbb
dec
or
jp
push
mov
sbb
dec
leave
adc
fists
cmp
jne
roll
jbe
xor
push
xor
pop
outsb
fimuls
lcall
mov
out
add
push
inc
pop
cmp
pop
rorb
cmp
or
ljmp
mov
hlt
ja
lret
or
xchg
lea
sub
or
fcomp
daa
add
ljmp
testb
jmp
push
add
sahf
pop
sub
repnz
push
fs
bound
loope
subb
inc
dec
jne
rclb
xor
sub
out
fdivrs
sub
pop
add
out
lret
xor
add
pushl
test
in
rcrl
aaa
jne
js
fwait
sbb
dec
icebp
push
les
hlt
test
sub
cmp
jnp
and
dec
push
stc
mov
add
scas
cs
cmpsb
sarb
fwait
adc
and
je
lock
add
cmpb
pop
gs
ds
xor
arpl
jns
mov
test
xor
cmp
cmpsl
or
addr16
scas
fsubl
imul
repz
lods
imul
xchg
push
or
adc
jl
mov
pushf
imul
incl
jbe
das
hlt
jmp
cli
call
push
call
arpl
cwtl
repnz
cld
mov
test
hlt
fwait
pop
bound
xchg
outsb
arpl
jne
sub
hlt
inc
sub
popa
dec
loop
jnp
xor
into
add
aam
subl
xorb
lcall
leave
addr16
out
jbe
xor
popa
dec
add
addl
jae
cmp
lea
movsl
cld
mov
jae
rolb
sub
out
sub
movsl
dec
push
push
push
in
daa
cmc
iret
faddp
ret
loopne
dec
leave
jne
lret
push
mov
mov
push
mov
mov
pop
mov
jmp
inc
pop
test
sub
rorb
movsb
sub
mov
nop
pop
mov
add
ficompl
je
aas
mov
lcall
push
add
or
bound
stos
push
mov
test
mov
orl
lret
pushf
or
jmp
and
jbe
add
out
mov
xor
sub
mov
mov
sbb
stc
xchg
daa
sbb
cmp
ret
lret
sbbb
in
data16
xchg
cmpsl
mov
and
fcoml
je
adc
or
jle
adc
or
aaa
jmp
dec
and
xchg
push
outsl
insl
stc
add
sbb
add
xchg
sbb
push
shll
lea
mov
xchg
shl
lods
bound
mov
cmpsb
push
addr16
iret
cmpsb
push
and
out
dec
xchg
popa
fldcw
nop
orb
shlb
pusha
mov
or
test
mov
mov
and
dec
xor
sbb
shl
pop
xor
mov
xchg
push
fisubrs
ljmp
jl
lea
sbb
stos
add
push
adc
adc
movsl
pop
mov
in
je
int3
pop
cmp
jno
sbb
adc
jg
ficoms
mov
mov
add
fcomps
hlt
stc
xchg
loop
je
mov
jle,pn
iret
testl
aad
lock
push
and
dec
add
mov
fisubrl
cmp
cwtl
shl
fcomi
sub
insl
jae
dec
mov
cmpsb
call
dec
in
sbb
push
push
in
loop
jno
mov
mov
test
aaa
lea
rcr
xchg
vsubpd
sahf
inc
cwtl
negl
or
adc
mov
popa
mov
lret
xchg
and
pop
nop
mov
cwtl
dec
jl
xchg
das
mov
push
mov
push
js
cmpsl
or
in
pop
sar
jne
aad
in
in
ljmp
fs
cmp
addr16
lods
mov
push
sub
pop
test
sub
insb
adc
mov
xchg
mov
movsl
push
add
or
test
pop
cmp
push
mov
out
push
cld
fs
or
sbb
add
ss
jb
mov
sti
inc
test
mov
cs
std
sbb
and
dec
lcallw
enter
lea
stos
pusha
inc
sbb
pop
jle
inc
test
adc
cmp
xchg
sbb
inc
pop
push
icebp
push
aas
outsl
mov
jns
xchg
test
jmp
lds
jnp
div
adc
testl
sbb
xchg
lret
arpl
bound
mov
loope
lds
ret
jp
sub
fimuls
cli
loopne
int3
lock
and
cmp
mov
and
sub
dec
sub
rol
mov
push
add
cld
mov
test
leave
adc
dec
fsubl
dec
roll
insl
popf
jl
sub
inc
roll
jb
daa
inc
test
xor
push
cmpsl
cmp
scas
popf
jmp
std
out
sub
fmuls
or
xchg
popf
mov
out
jno
mov
ja
adc
pusha
xor
inc
mov
inc
cmpsb
cmpsb
push
out
lcall
aam
lret
sbb
add
mov
mov
rcrb
mov
addr16
mov
scas
sarl
cmp
je
mov
cmp
cmp
mov
fwait
push
mov
sbb
push
sub
push
push
xor
vhsubps
dec
icebp
pop
and
in
rclb
xchg
outsb
cmovg
cmpsl
aam
nop
test
xchg
sub
ret
icebp
aad
mov
into
xor
ss
sub
and
rcl
div
mov
dec
mov
arpl
enter
cmp
aas
ja
xor
shrb
pop
stos
ja
dec
ret
mull
mov
sbb
dec
fdivrl
outsl
dec
sbbb
sbb
jno
pop
sahf
mov
pusha
xchg
test
insb
jge
jo
sub
dec
pop
push
idivb
pop
mov
or
ds
inc
xor
dec
cwtl
outsb
or
sub
sub
lods
push
xchg
test
mov
pop
push
xorb
popl
fst
in
mov
lock
leave
push
imul
clc
and
fwait
inc
cltd
inc
xchg
ja
jno
repnz
mov
cmpl
jmp
outsb
popf
ret
mov
cmp
and
adc
push
mov
outsl
leave
iret
fists
gs
sti
cld
jne
push
cwtl
dec
hlt
test
fcomps
mov
cld
sbb
mov
push
jge
test
push
xor
ror
and
pop
ss
fcoms
dec
lock
pop
std
lds
test
pop
daa
icebp
loopne
mov
ljmp
or
jle
in
sbb
negb
lds
stos
pop
mov
add
stc
pcmpgtb
push
mov
cwtl
lcall
cmp
movsl
test
pop
pop
adc
xchg
fs
jmp
call
add
popl
out
sbb
movsb
push
stc
mov
push
push
cli
push
enter
add
pop
pop
adc
pop
dec
adc
push
das
dec
xchg
mov
mov
lahf
and
jo
mov
loop
jmp
enter
mov
stos
aad
test
out
mov
out
shrb
dec
pushf
mov
bound
adcb
mov
push
ret
popf
rcll
lcall
stos
clc
stos
loope
sub
pop
ficompl
inc
mov
inc
cmp
ficoms
and
fstps
push
fistps
mov
push
std
stos
pop
pop
addr16
jae
sti
fidivrl
pop
ss
test
push
cwtl
daa
ljmp
cmp
xorb
fistps
repnz
add
jp
mov
adc
out
jo
push
call
sbb
and
popf
repnz
popf
clc
fnstsw
in
shr
lds
dec
ja
in
and
inc
fldl
and
out
lock
shrb
sbb
inc
adc
js
mov
andb
push
push
sub
mov
dec
or
inc
stos
je
sbb
mov
adc
cs
js
movsb
or
idivb
sbb
xchg
clc
sub
inc
fdivrs
push
aaa
or
mov
cwtl
into
xor
adc
arpl
rcll
fistpll
fimuls
adc
hlt
add
cmp
mov
xchg
lods
adc
fildl
push
movsb
jne
imul
mov
sti
iret
in
idivl
icebp
sbb
lea
and
pop
insl
sub
jns
sti
fs
xor
in
inc
sub
or
xlat
or
pop
push
dec
js
leave
fwait
xlat
mov
xorl
inc
jbe
adc
cmpl
jnp
pop
fiadds
lahf
mov
jo
pop
jecxz
pusha
xor
pushf
push
xor
pushl
pushf
in
pusha
sbbl
or
inc
mov
mov
fimuls
xor
and
pop
push
jg
cmp
mov
int
mov
mov
iret
inc
lods
mov
or
push
ja
aaa
push
out
mov
push
cmp
inc
loope
es
frstor
mov
cwtl
push
mov
jae
pop
jbe
rep
jne
lcall
faddl
sbb
cmp
or
mov
mov
add
mov
mov
js
mov
adc
stos
fcoms
jb
inc
push
mov
rorb
lret
mov
sbb
lds
cmc
cmp
jnp
into
xor
jae
xor
bound
pop
idiv
mov
fidivrl
roll
loop
add
sub
or
pop
imul
shlb
push
xchg
gs
fidivrl
xor
test
ljmp
lods
pop
mov
orl
aad
out
aad
ret
fnstsw
loope
inc
mov
cld
mov
pop
ret
dec
jo
xorb
jle
xchg
push
sti
movsl
xchg
mov
mov
sub
hlt
push
cmp
pop
add
and
inc
mov
mov
lock
cmpsb
mov
mov
or
dec
mov
sbbl
xchg
cmp
sbb
inc
mov
imul
mov
jno
aas
xchg
les
xchg
cmp
xor
and
add
test
push
pop
psubusb
pop
adc
loopne
sub
push
cli
push
add
mov
and
mov
out
movsb
mov
outsb
push
into
cmp
mov
push
lea
jle
pop
adc
or
sbb
lahf
sbbl
pop
add
jmp
fistpll
mov
mov
and
scas
scas
push
xchg
rcll
add
dec
cmp
jl
mov
dec
or
inc
mov
mov
shlb
ficoms
cmp
cmpsb
loop
es
jb
mov
xor
cmp
and
out
outsl
sbb
mov
xlat
xor
loop
stos
pusha
shll
xor
ret
adcl
das
ret
add
jp
cmp
or
aas
testb
pop
pop
push
lods
in
adc
cmp
fs
jb
jne
or
movsb
mov
mov
sub
pop
xor
sti
sub
sbb
sub
push
imul
dec
imul
es
out
es
inc
lock
adc
sbb
and
in
push
test
fildll
cmp
inc
data16
adc
mov
or
call
out
inc
gs
fimuls
addr16
and
jl
lea
je
dec
jmp
sbb
xor
push
test
loope
mov
pop
sub
aam
shl
fmul
and
jb
jnp
int3
jbe
loop
xchg
push
xor
cmp
ret
dec
adc
outsb
test
cmp
sbb
ds
loope
mov
ret
dec
sub
adc
pop
std
push
pusha
jno
arpl
test
and
int
outsl
dec
lock
and
mov
outsl
ljmp
push
cmp
nop
movsl
adc
mov
rcll
or
xchg
and
stos
lret
movsl
xchg
push
mov
fwait
xchg
sbb
xor
cmp
fiadds
test
mov
inc
xchg
mov
pop
add
mov
dec
into
stos
sub
jae
shlb
imul
and
xchg
cli
xchg
fcoml
adc
cmpsl
sbb
sub
jmp
stos
movsl
xor
inc
xor
movsl
call
es
mov
xchg
or
mov
mov
cmp
pextrw
inc
cmp
std
hlt
loop
xchg
mov
pop
pop
int
addr16
shrl
mov
aad
cmc
ljmp
dec
mov
xor
push
in
inc
ror
xchg
mov
sub
aaa
push
jecxz
mov
jno
cmc
mov
in
pop
enter
orl
test
imul
shr
mov
xor
adc
push
out
ss
jp
adcl
jmp
cmp
xor
into
mov
dec
les
pop
cli
cmp
push
adcb
jge
ret
mov
daa
adc
mov
add
lea
mov
cmp
fsubrs
std
and
jg
xor
mov
cltd
in
xchg
adc
into
inc
fidivs
out
sbb
mov
cmp
jnp
and
or
mov
sar
sub
pop
ret
cmp
mov
pop
andb
mov
mov
dec
jbe
sbb
xorb
adcb
pushw
xchg
xchg
and
xchg
fcoml
push
push
sub
push
dec
cmp
pop
adc
leave
pop
sbb
sbb
rorl
daa
pop
outsl
jns
stos
pop
jne
or
mov
add
xchg
out
dec
jge
in
cmp
in
xchg
sub
dec
mov
dec
and
in
push
dec
adc
pusha
fldenv
loope
fcmove
xchg
test
arpl
push
jge
mov
clc
push
dec
test
std
mov
imul
dec
cmp
cmp
enter
cmp
jno
imul
daa
inc
cltd
push
out
in
jae
test
test
pop
pop
xchg
xchg
and
dec
jp
in
mov
insl
in
enter
pop
js
cs
and
jge
lret
das
pop
arpl
add
cmpsl
cmpsb
push
sub
loop
mov
mov
mov
pop
dec
repnz
pop
insb
mov
daa
cmp
xchg
shl
jecxz
sub
les
insb
mov
jno
and
jp
xlat
in
and
sbb
bound
adc
in
out
arpl
test
xor
and
mull
fisubrs
adc
and
les
add
mov
and
mov
or
out
mov
and
fldcw
add
mov
adc
mov
or
mov
pusha
sbb
lcall
insb
sbb
jle
ret
adc
aas
repz
push
mov
in
or
jae
lods
xchg
ljmp
and
fistpl
dec
popl
adc
jmp
jns
sti
sub
loope
jae
xor
sbb
lods
and
fsqrt
decl
call
in
xor
arpl
in
mov
pop
loope
inc
jns
loopne
sub
cmpsl
mov
add
push
jae
cs
pop
scas
push
les
inc
xchg
outsl
mov
add
sub
es
ret
dec
push
out
cmp
sbb
pop
scas
rcr
cmpsb
cmp
fs
lock
fsts
bound
mov
mov
imul
jns
lods
out
test
cmp
mov
xor
cmp
cmp
inc
jbe
jbe
push
adc
mov
call
push
arpl
rol
test
sbb
sub
in
lods
xor
movsb
subl
aas
cltd
dec
add
popa
adc
aam
jecxz
inc
repz
mov
addr16
mov
xor
push
ret
dec
outsb
dec
aam
add
or
mov
mov
push
sbb
or
cmp
sub
fidivrl
ljmp
pop
stos
dec
pop
mov
push
sbb
or
cmp
sub
fidivrl
lret
add
mov
mov
mov
push
sbb
or
cmp
sub
fcmovu
lret
stc
ljmp
pop
rcrb
adcb
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
dec
rol
fsts
ret
mov
push
mov
add
add
add
pop
push
add
add
add
add
add
add
sbb
push
add
fwait
add
test
fadds
xchg
add
add
or
inc
add
jl
movsl
add
xor
testl
dec
add
hlt
add
jl
add
adc
xor
add
add
add
or
dec
add
rolb
add
xor
add
add
add
stos
add
add
add
in
rolb
cs
add
add
add
add
add
addl
add
fadds
push
add
add
dec
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
filds
rolb
and
verw
add
add
add
lods
add
add
add
add
add
add
add
add
out
add
xchg
add
add
filds
push
add
add
adc
jle
pop
add
add
add
dec
add
add
add
add
xor
dec
add
ret
add
add
add
add
add
hlt
add
add
or
sbb
add
add
add
add
add
add
add
add
push
add
xchg
add
add
movsb
add
add
add
add
add
add
dec
add
add
add
add
add
add
push
add
add
add
add
add
add
add
and
sub
mov
adc
ltr
add
add
add
add
add
add
add
add
add
add
add
and
ret
add
add
add
xchg
add
add
rolb
push
add
jne
jo
or
testb
add
flds
dec
add
add
sbb
dec
add
add
add
xchg
add
mov
inc
add
movsb
add
add
popf
add
add
add
popl
je
xor
xor
aad
insb
add
add
add
imul
add
add
add
add
add
xchg
add
add
and
xchg
add
mov
jle
in
inc
add
add
add
add
add
cmp
push
add
add
add
add
add
popa
add
add
add
add
inc
add
add
jno
push
add
add
add
add
add
add
add
add
stos
add
mov
sub
mov
add
push
add
add
add
add
fwait
add
add
jae
daa
add
test
add
add
add
add
ret
add
add
out
dec
add
add
add
add
add
adc
pop
add
add
add
add
addb
add
stos
add
sbb
mov
add
add
add
add
add
add
add
addr16
add
add
dec
add
add
add
push
push
addb
add
xchg
add
pop
add
add
and
add
ss
add
add
add
add
add
push
add
add
movb
loope
add
push
pop
sub
jns
test
push
pop
orb
pushl
enter
xor
xchg
and
cmp
scas
je
test
repnz
arpl
adc
ds
mul
insl
push
repnz
mov
aaa
or
mov
mov
mov
repz
push
cli
push
ds
xor
stos
aad
jle
daa
mov
sbb
xlat
push
mov
fisubrs
adc
mov
cmp
fcomps
out
xor
add
stc
xor
jb
loope
ss
xor
inc
call
xchg
fisubs
inc
pop
and
sub
testb
adc
and
sbb
adc
in
and
pop
mov
jns
or
int3
pop
jb
and
aad
divb
xor
shl
mov
cld
pop
lock
push
pusha
xor
subb
xor
hlt
or
in
mov
repnz
jmp
cld
ljmp
fnclex
ds
push
ja
mov
and
mov
xchg
or
fstpl
inc
sbb
sbb
shl
jnp
js
xlat
loopne
push
int3
sub
hlt
mov
xor
scas
push
es
int3
test
mov
aas
push
inc
test
adcb
push
pop
mov
jp
push
aad
test
inc
sahf
and
mov
out
mov
and
xchg
xchg
jb
stos
pop
mov
or
pop
cld
mov
test
add
adc
pop
cmp
add
enter
push
adc
testb
add
pop
jecxz
out
xor
lock
out
sub
shl
fs
add
aam
fdivrs
push
dec
push
jne
int3
push
adcl
hlt
or
pop
jno
je
clc
sbb
dec
movsb
clc
popf
loopne
roll
dec
pop
aaa
pushf
jmp
hlt
pusha
adc
dec
lea
test
rcr
iret
lcall
arpl
add
jmp
adc
mov
cmp
movsl
std
test
iret
js
xor
cmc
pop
or
adcl
fwait
pusha
lock
lods
xor
sarl
push
push
xor
pop
pop
inc
lret
mov
fwait
scas
jle
aas
cmp
dec
addr16
jmp
xor
sbb
filds
jl
xor
jnp
outsb
and
pop
xchg
popw
mov
out
ja
add
insl
in
push
pop
stos
jmp
mov
inc
xor
test
xchg
fmull
pushf
push
leave
inc
inc
pop
gs
xchg
push
test
cmp
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
