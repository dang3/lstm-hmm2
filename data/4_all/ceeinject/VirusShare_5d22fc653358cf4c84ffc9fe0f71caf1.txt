call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
add
mov
daa
cmpsb
or
xchg
or
pop
aad
in
cmc
imul
xor
jne
test
xchg
or
sub
dec
in
cmc
imul
xor
shll
jne
test
mov
leave
inc
mov
lds
aas
nop
or
sti
and
adc
or
lea
rcrl
aas
je
andl
sahf
add
lret
stos
push
cmp
in
cmc
pop
imul
cmp
adc
push
pop
sbb
hlt
into
push
and
out
enter
sbb
or
test
cmpb
add
inc
xor
fneni(8087
jne
or
adc
pop
fbld
data16
jnp
push
cmc
je
inc
lret
sbb
out
xor
and
enter
sub
sub
out
clc
fs
push
cmpsl
outsb
call
jae
popa
pop
les
stos
mov
mov
stos
inc
fistl
gs
jne
test
xchg
adc
inc
aad
in
cmc
push
fwait
popa
stc
dec
ficomps
fldenv
stos
add
lock
ds
xchg
pop
pusha
bnd
inc
enter
fistl
test
outsl
les
pop
mov
les
mov
pop
pusha
fwait
adc
out
or
push
lret
gs
jne
test
xchg
or
pop
aad
in
cmc
imul
xor
lret
gs
jne
test
xchg
or
pop
aad
in
cmc
imul
sbb
mov
movsb
mull
stos
movsb
mov
aaa
sbb
cmp
pop
rcll
mov
insb
stos
sbb
ss
pusha
adc
mov
test
inc
daa
pushf
aaa
ljmp
jmp
rcrl
orb
add
nop
pop
push
pusha
pop
pop
call
negl
out
cli
call
out
gs
lret
dec
push
popf
sub
xchg
cmp
xor
and
cmpsl
out
fisttpll
or
or
repnz
adc
xchg
pop
mov
aam
mov
gs
mov
out
insb
pop
push
lret
data16
or
lret
fists
int
pop
lds
jbe
dec
dec
fs
popa
push
inc
movsb
xchg
movsb
fucom
sbb
in
inc
sub
std
loop
dec
repnz
jl
cwtl
push
mov
mov
insb
jb
push
push
test
push
inc
addr16
insl
imull
mov
sub
fidivs
lock
add
je
push
out
imul
add
ror
jne
jmp
shlb
push
bound
aad
ret
stos
sbbl
out
push
xor
pop
imul
out
leave
xor
in
inc
and
sbb
pop
les
and
je
xor
aaa
adc
outsb
inc
and
js
mov
lods
cli
push
mov
les
cmpl
mov
je
sarb
fs
or
loope
ss
jmp
dec
loopne
imul
orb
xchg
jge
mov
cmp
push
rcrb
cld
je
xchg
hlt
pop
cwtl
and
nop
data16
repnz
inc
push
add
lods
and
mov
pop
xchg
xchg
inc
xchg
sbb
push
fwait
movsb
dec
fdivl
sbb
ljmp
xchg
shll
or
int
test
inc
inc
pop
push
fs
outsl
push
xor
rolb
jo
aaa
mov
xchg
outsl
jbe
cld
add
daa
push
stos
mov
mov
dec
pop
arpl
mov
fwait
iret
test
orl
mov
lret
and
lret
mov
sbb
int
ja
jecxz
dec
sti
cmpsb
ret
mov
inc
jle
sub
xor
cmpsl
mov
dec
jnp
and
data16
xor
lcall
fsubrl
add
sub
loop
push
mov
rclb
ficoms
mov
lahf
cmp
pusha
std
popa
pop
test
icebp
mov
adc
jl
and
aaa
es
pop
jno
ret
jge
orb
loop
ret
mov
rclb
mov
and
and
scas
les
pop
movsl
add
adc
mov
fdivs
mov
xor
sub
into
ret
or
imul
sub
stos
pop
fwait
data16
lea
mov
push
add
movsb
cs
xchg
jmp
addr16
loop
decb
xchg
fcmove
fucom
cs
stc
jmp
pop
pop
jmp
out
pop
jmp
mov
dec
pop
add
or
rorb
mov
dec
pop
jge
enter
push
ss
clc
pop
bound
push
shrb
jne
rcl
push
mov
or
notb
push
call
dec
push
and
pop
adc
pop
mov
fwait
dec
sub
addb
stc
cli
jmp
add
clc
adc
ret
insl
outsl
ds
ret
mov
loop
lahf
in
xchg
aam
stos
xchg
or
ja
jb
mov
arpl
dec
mov
pop
fwait
es
test
outsb
iret
cmp
bound
push
push
xchg
shlb
sbb
in
jecxz
or
into
xor
or
mov
fidivrs
jle
push
popf
lock
dec
sub
inc
sub
inc
adc
push
out
mov
in
mov
inc
rclb
jp
dec
cmpsb
out
loope
outsb
xorl
adc
sub
mov
loopne
and
or
lahf
popa
out
dec
in
jo
inc
cmp
outsb
or
bnd
cld
xchg
das
gs
cmp
or
lret
jl
mov
inc
dec
mov
fistl
roll
roll
sub
inc
push
inc
ror
mov
lret
xor
std
xchg
xorl
mov
enter
mov
xor
or
lods
call
xchg
dec
push
xor
nop
arpl
int
gs
aaa
mov
cmp
lods
arpl
cmpsl
int3
enter
test
shlb
xchg
sub
cli
jmp
mov
fs
xchg
push
cs
into
fistpl
aam
out
rcrb
loope
fldt
mov
xor
inc
mov
mov
push
or
jmp
push
inc
jecxz
push
push
push
push
ja
es
lret
inc
out
dec
sub
cmc
xor
cli
jnp
inc
pop
les
ljmp
pop
pop
jno
aas
mov
adc
inc
es
lahf
ss
fisubs
push
pop
leave
lret
xchg
insb
loope
push
imul
xchg
pusha
sub
mov
stc
push
std
mov
jnp
and
rclb
movb
cmp
cmpsl
leave
movsl
push
je
mov
mov
push
ja
jb
iret
jo
adc
sub
sub
cmp
filds
outsb
mov
cmc
int3
mov
pop
in
cltd
pop
inc
and
repz
stos
add
inc
fwait
pushf
pop
pop
jns
pop
jle
std
mov
icebp
push
in
cld
adc
push
cli
int3
repz
outsl
out
icebp
pop
inc
mov
bound
addl
mul
mov
push
pop
cmp
dec
pop
lods
mov
add
xlat
out
dec
pop
jmp
pop
int3
shlb
mov
fs
jne
cmp
mov
xchg
repz
xchg
in
jae
push
inc
jmp
mov
inc
andb
adc
mov
push
ss
pusha
push
fildl
push
sub
push
jg
in
enter
jae
cmp
nop
cld
lahf
out
pop
sbb
pop
push
or
xchg
inc
and
in
pslld
test
jmp
push
out
rcrl
mov
rcrb
push
sbb
repz
or
loop
dec
xlat
mov
and
sbb
push
fidivs
mov
and
imul
adc
jae
lahf
mov
sbbl
xor
cmp
fldenv
movl
sub
cwtl
mov
dec
sub
adc
lret
cmpsb
hlt
sub
sahf
out
cmp
xor
repz
xchg
sub
mov
push
orl
stos
ljmp
es
lea
out
sar
mov
jl
mov
lods
ret
pop
sbb
mov
stos
sbb
add
push
sarb
loopne
in
inc
movsb
add
scas
push
adc
jo
jp
mov
scas
inc
fists
xchg
les
popf
xchg
inc
pop
inc
mov
sub
test
test
mov
rcrl
push
pushf
arpl
out
fsubrs
inc
adc
test
inc
arpl
scas
adc
dec
cld
sbb
pushf
add
pop
addr16
sub
pop
popa
icebp
sbb
outsb
and
mov
test
pushf
sti
outsl
adc
and
adc
fiadds
xor
rcrl
data16
jo
mov
xchg
push
jbe
out
je
dec
xchg
out
adc
rcrb
shld
mov
aas
test
jp
stos
dec
in
outsl
pop
mov
sahf
cmp
adc
sub
fdiv
stos
adc
jns
jge
xor
xor
pop
dec
sub
adc
fs
loop
sahf
adc
add
clc
jns
add
fsubp
cmpsl
mov
dec
mov
int3
mov
imul
or
cmp
jae
push
loope
dec
xor
out
in
sub
mov
cmp
test
mov
push
dec
iret
in
rep
leave
inc
mov
int3
xchg
outsb
xchg
sbb
adc
sub
mov
cmp
jmp
int
sub
xor
sahf
xor
stos
mov
adc
mov
icebp
push
out
lods
rcrb
and
test
mov
shlb
adc
inc
scas
clc
loope
adc
cmp
popa
push
pop
incl
xor
hlt
inc
or
test
push
xor
ret
pop
mov
jle
push
ret
sub
mov
cli
lret
rolb
outsl
add
arpl
mov
imul
imul
sbb
bound
test
insb
push
add
rcll
addr16
aaa
sbb
xor
out
gs
notb
insl
jne
push
test
sbb
mov
and
shlb
jb
or
xchg
mov
pop
out
in
adc
jl
xchg
int3
outsb
mov
jbe
xchg
fdiv
sbb
out
jbe
adc
pop
jp
sub
loopne
in
aad
lods
inc
jbe
jno
mov
cmp
icebp
mov
pop
popa
fucomi
ffreep
ficompl
out
movsb
int3
add
rorl
out
xchg
scas
xchg
scas
push
stos
in
mov
push
bound
outsl
test
andb
lds
push
mov
adc
mov
jo
mov
mov
add
cmp
in
and
orl
aaa
out
xor
into
repnz
and
int3
xchg
dec
or
loopne
cmp
popa
sbb
inc
jnp
ret
out
stc
ret
or
out
orb
sbb
scas
mov
cmp
or
sub
out
lahf
std
add
push
sbb
out
enter
or
inc
jp
push
mov
mov
ja
inc
jge
push
stos
adc
andl
sub
sbb
in
in
rolb
leave
int
ror
ds
ret
lahf
dec
fsubr
shrl
or
or
jle
fnstsw
roll
sar
dec
rep
daa
jecxz
sbb
push
cmp
sahf
sbb
aam
xchg
test
push
mov
push
jne
aaa
or
jb
sub
loopne
das
pop
ret
test
dec
jmp
pop
mov
sbb
std
add
movsl
test
out
outsb
and
mov
mov
mov
xor
jecxz
sub
mov
dec
jnp
lds
adc
xor
push
inc
or
stos
xor
xorb
inc
push
loop
mov
in
cli
rcr
or
sbb
mov
sub
sbb
stos
inc
push
inc
gs
adc
rorb
add
fisubrl
push
fisubs
mov
addb
lods
insb
xorb
push
pop
mov
movsl
pop
and
out
mov
jae
cmp
mov
imull
lods
pop
ljmp
es
mov
pop
adc
xchg
and
or
lods
fsubl
lods
ja
cli
jecxz
fxam
ficoms
xlat
pop
std
adc
inc
dec
repnz
out
fcoml
adc
das
outsl
dec
inc
ss
xchg
push
inc
ret
bound
clc
xlat
dec
test
jp
inc
out
js
adc
xchg
dec
mov
or
xchg
iret
xor
shll
loopne
pop
mov
mov
aad
and
mov
cmpsl
daa
pusha
stos
repnz
inc
xlat
rcll
push
mov
in
shrb
add
mov
fsubl
mov
xor
xchg
mov
in
add
and
in
popa
imul
cmp
xor
mov
adc
loopne
sbb
fdivl
pop
lods
push
jne
cmp
loopne
test
push
pop
push
or
add
sbb
ljmp
stos
das
dec
inc
test
mov
orb
notb
pop
sub
sbb
inc
outsb
sti
pop
aas
or
adc
mov
outsb
xchg
add
testl
leave
push
popa
cmp
das
enter
push
es
xchg
mov
add
loopne
lds
mov
and
xor
xor
int
sti
xor
xor
mov
lea
pop
lds
or
movsl
movsl
jmp
loop
lcall
aam
push
aam
popa
rolb
mov
pop
jb
lea
dec
inc
jae
jo
mov
fsubl
fbld
fiadds
or
fimuls
mov
push
push
mov
loopne
movsl
add
je
push
add
sarl
push
dec
pop
mov
jge
inc
fdivr
mov
jae
jg
pop
mov
hlt
insb
add
sub
out
fldcw
mov
sub
bound
repnz
aas
repnz
mov
inc
shr
lret
xor
jmp
scas
out
mov
cmp
ja
push
push
cmc
jmp
mov
je
pop
repnz
jns
bound
mov
xor
xor
int
cmpsb
jp
inc
mov
repz
push
rcl
aam
mov
cmpsb
add
test
mov
faddl
or
das
adc
jecxz
popf
dec
dec
pop
fstpl
pop
sub
mov
pushf
cmp
das
mov
adc
inc
sbb
imul
mov
hlt
mov
and
mov
mov
sbb
dec
mov
lcall
test
push
mov
inc
icebp
or
in
sbb
xor
sub
inc
mov
cmpsb
lret
dec
push
fsubl
out
push
adc
insl
in
mov
loopne
aaa
adc
js
mov
jno
popf
mov
out
xlat
pop
ret
ljmp
cmp
call
imul
sbb
stc
mov
mov
sbb
lock
sub
jp
add
and
xchg
pop
test
dec
push
sahf
out
lret
test
mov
lret
sbb
into
mov
idiv
psraw
ja
pop
inc
rclb
sub
scas
inc
cmpsb
xchg
insb
pop
pop
scas
aad
test
mov
mov
test
sbb
shl
sbb
jbe
cmpl
loop
and
daa
jle
out
add
pop
fidivs
sbb
inc
lcall
leave
fnstsw
cltd
push
ja
shll
in
ss
or
inc
cmp
cmp
jp
cmp
jge
pop
shrd
icebp
mov
dec
roll
inc
or
xchg
mov
push
cld
adc
pop
sub
es
scas
aam
lods
imul
xchg
test
mov
dec
mov
hlt
sbb
or
aam
sbb
jns
or
iret
push
inc
pop
and
fcompl
jmp
int3
aaa
int
jmp
push
push
out
das
sbb
mov
cmpb
repnz
mov
cmpsb
rolb
stc
cs
pop
outsb
pop
jno
mov
mov
shll
push
js
loop
test
leave
std
push
jp
dec
imul
pusha
movsl
inc
in
mov
inc
mov
inc
and
cmp
adc
push
mov
les
je
test
scas
push
add
loop
jnp
jne,pn
cmc
xchg
or
dec
lret
hlt
fwait
mov
and
jg
faddl
and
leave
divl
aam
xchg
mov
cmp
rorl
das
add
adc
inc
and
sbb
xor
xchg
adc
das
fs
mov
mov
sub
cwtl
or
add
mov
mov
fcoms
jg
cmpsb
das
xor
cwtl
inc
imul
sbb
mov
cmp
dec
out
sbb
fadds
ss
aad
cmc
mov
mov
loope
repz
mov
adc
out
pop
dec
dec
sahf
jb
adc
xlat
lds
push
mov
lods
data16
std
mov
dec
mov
xchg
mov
test
mov
xchg
and
mov
pop
repz
pop
push
repz
ja
push
sti
out
xchg
fldt
xchg
outsl
mov
xor
cmpsb
repz
push
jb
inc
loope
xchg
stc
repnz
push
cli
jo
xchg
test
dec
in
and
or
sub
cltd
sbb
mov
cltd
mov
dec
or
hlt
stc
lcall
faddp
enter
adc
mov
repnz
mov
in
test
mov
xchg
out
test
popf
or
int3
push
shll
pop
lds
mov
aad
cmp
push
mov
in
add
jp
sti
inc
mov
in
adc
mov
mov
std
sbb
xor
xlat
xorl
xor
mov
jl
pop
mov
sbb
incl
mov
xor
cmp
cs
cmpsb
and
sub
lds
adcb
and
and
stos
inc
sub
push
sub
inc
adcl
add
sahf
push
push
ud0
inc
adc
mov
sub
mov
dec
repz
ds
jp
fstpl
mov
mov
pushf
jns
loopne
or
jl
nop
repz
mov
jnp
stc
push
scas
jg
pop
push
out
out
push
jns
fists
pop
or
lods
inc
jne
xor
sbb
repz
rcrl
pop
mov
out
out
mov
and
inc
inc
cs
shlb
sbb
dec
mov
lcall
xor
js
out
xlat
lds
imul
adc
mov
fisttps
icebp
jmp
lahf
push
mov
and
inc
jp
scas
gs
inc
xchg
sahf
movb
or
xchg
negl
stc
fistps
dec
xor
test
ret
movsl
out
test
stos
jge
push
cmpl
ret
mov
mov
jge
inc
fcmovu
sub
mov
in
mov
pop
xor
js
sbb
add
inc
adc
out
dec
and
fisttps
mov
mov
dec
inc
enter
mov
dec
int3
mov
jns
xchg
or
ret
adc
mov
and
xor
adc
in
iret
mov
out
cltd
mov
cmp
ja
push
pop
adc
adc
adc
inc
std
pop
cmp
dec
js
clc
cli
sub
clc
xlat
push
repz
or
sub
jnp
add
cs
cmp
add
mov
pop
lock
pop
out
das
push
jmp
pushf
jo
aas
shlb
xchg
xorb
mov
rcrl
cltd
mov
shlb
shlb
sub
jb
add
push
out
mov
je
jne
inc
fisttpl
ret
push
jnp
lock
std
and
lea
sbb
xor
sahf
cpuid
ds
ret
in
push
cmp
fwait
push
mov
dec
xchg
mov
ja
jge
ds
xchg
sbb
mul
xchg
fsubrs
mov
jecxz
mov
or
lods
sbbl
jle
inc
mov
sbb
jecxz
addr16
lods
out
jecxz
pusha
jae
xor
dec
push
xorb
stos
xor
cmpsb
jnp
cmp
hlt
jno
jecxz
hlt
jb
imul
cmpsl
or
pusha
lock
adc
pop
xlat
in
cli
mov
nop
aaa
pop
ret
out
aad
xchg
push
loope
mov
scas
jo
and
call
xor
jp
sub
js
push
gs
push
iret
inc
sti
sti
xor
out
pop
inc
sbb
inc
stos
es
push
in
sub
mov
mov
iret
arpl
scas
jge
push
mov
pop
shlb
pop
fiaddl
inc
push
gs
and
stos
mov
test
addr16
fildll
cmc
jle
lret
dec
mov
cld
xor
out
and
mov
jnp
cltd
mov
xchg
cwtl
leave
imul
sbb
xchg
cmp
cmp
cmc
sti
or
mov
sti
inc
mov
rorb
adc
or
in
lahf
mov
js
pop
stos
fs
mov
bound
rcll
pushf
sbbb
cmpsb
or
movsb
fisubl
sbb
fidivs
jno
mov
mov
notb
imul
push
dec
frstor
pop
mov
mulb
pop
stc
dec
xchg
div
inc
adc
addr16
pop
in
sub
and
lods
je
add
inc
iret
sub
mov
outsl
pop
jp
test
jae
dec
jo
jbe
sbb
lcall
std
leave
fs
jle
ficomps
xchg
icebp
call
inc
pop
data16
cltd
add
test
leave
inc
inc
movsl
stc
fistpl
and
add
push
aam
je
jge
inc
les
and
or
stc
mov
clc
jb
rorb
sti
hlt
sbb
cmp
addl
cli
adcl
repz
in
int3
pop
push
inc
in
cmp
je
xor
inc
fistl
gs
jne
test
xchg
or
pop
aad
in
cmc
imul
xor
lret
gs
jne
test
xchg
or
pop
aad
in
cmc
imul
xor
lret
gs
cmc
jmp
sbb
das
lds
dec
in
cmc
outsl
add
mov
push
lret
gs
jne
test
xchg
mov
mov
movsl
xor
add
adc
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
out
or
pop
sub
test
ss
imul
out
cwtl
fisubrs
scas
cwtl
jg
outsl
sbb
dec
cmp
dec
das
pop
pop
push
out
cwtl
mov
enter
call
outsl
sbb
dec
cmp
dec
das
pop
pop
push
out
les
lcall
invd
outsl
insb
adc
mov
setns
imul
xchg
in
int
test
out
mov
cmp
enter
sub
loop
sub
push
ds
cmpsl
xchg
fs
mov
inc
mov
xchg
call
outsb
into
push
fildll
push
cmp
movsl
rcll
mov
js
enter
pop
lret
imull
jg
mov
dec
incl
sub
pop
fwait
cld
mov
xchg
nop
in
pop
daa
cmpsl
pop
xchg
ucomiss
push
iret
mov
add
popf
sbb
jo
xchg
lret
and
out
leave
std
add
mov
aaa
scas
sub
std
mov
and
outsl
sbb
dec
cmp
dec
das
pop
pop
push
out
cwtl
fildll
scas
fcomps
gs
xor
jle
daa
dec
sbb
push
xchg
in
icebp
mov
stos
lret
movsl
jecxz
repnz
popf
and
push
sub
pop
outsl
pop
sub
ja
lods
int
hlt
cmpsl
stos
aam
cmpsl
fdivl
or
insb
cmp
outsl
dec
jle
das
pop
pop
push
out
cwtl
fildll
scas
fcomps
or
pop
sub
aas
dec
das
pop
pop
push
out
cwtl
fildll
scas
fcomps
or
rcr
sbb
dec
insl
aas
sti
push
call
repz
mov
sbb
or
jg
rorl
lods
dec
movsb
mov
lret
or
mov
or
test
and
mov
xlat
fiadds
cmc
jnp
nopl
ljmp
out
jge
fildl
in
bound
out
dec
imul
push
int
aaa
adc
pushf
inc
jno
hlt
push
ficompl
sti
lea
mov
pop
cmp
cli
sarl
xchg
sarl
sbb
cmp
mov
idivl
or
push
mov
sub
cmp
push
push
adc
ds
cltd
cltd
dec
test
inc
data16
popf
pop
sbb
jne
gs
out
add
push
bound
lcall
das
inc
push
xchg
add
sub
xchg
fidivrl
push
and
mov
xlat
aad
pop
or
hlt
icebp
adc
inc
sub
fstpt
imul
adc
divb
ja
and
add
pop
mov
adc
ret
sbb
pushaw
push
incl
adc
jnp
jmp
inc
dec
rcr
sbb
addr16
xchg
or
mov
lahf
fildll
mov
out
dec
pop
cmp
jl
push
sbb
cmpsb
jl
call
ror
xchg
dec
xor
adc
clc
fldcw
fnstcw
sub
inc
xor
and
xchg
xlat
fists
sbb
mov
mov
test
imul
ja
jecxz
adc
mull
nop
sti
lods
es
jbe
hlt
test
inc
jle
fimull
fisubrs
arpl
mov
decl
mov
std
mov
jge
stos
mov
leave
inc
popf
inc
sub
push
icebp
sbb
incb
in
or
cmovno
loope,pn
cmp
adc
mov
pop
mov
adc
mov
and
popa
jno
clc
test
jmp
fld
ljmp
pop
mov
jmp
movb
cltd
int3
fldcw
jp
pop
push
lods
inc
ss
and
fldt
push
lret
sub
inc
or
xchg
int
das
dec
cmpsl
iret
sbb
js
push
inc
xor
or
inc
xlat
rcll
sbb
out
rcrl
test
mov
inc
mov
xchg
xchg
xchg
rorl
nopl
into
cmpsl
fstpl
subl
mov
fnstsw
xchg
fadds
mov
ret
xchg
mov
clc
std
mov
jnp
fcoml
ds
es
loop
test
mov
aam
dec
arpl
ret
mov
dec
jp
and
fcmove
mov
stc
clc
stc
dec
fwait
dec
sub
xchg
int3
ja
cmpsl
xchg
test
adc
jb
add
mov
and
out
cmp
mov
fcompl
int3
add
xor
jnp
in
push
in
mov
scas
xchg
inc
cld
cmpsl
add
sub
fwait
iret
outsb
add
dec
adc
fnstcw
and
das
or
pop
fisttps
jae
popf
push
lcall
inc
test
jmp
dec
jg
cmp
cmpsb
pop
out
fbld
in
mov
addb
inc
xchg
sub
iret
mov
iret
das
or
fbld
add
test
pop
bound
in
hlt
mov
movsb
outsl
cmp
mov
imul
xor
roll
adc
xchg
dec
cmp
xchg
xchg
test
adc
push
aad
add
int3
lods
cmp
xchg
push
fimuls
sub
jl
fisubl
call
movsb
mov
cmp
pop
test
inc
cs
or
xchg
fiaddl
mov
sbb
cmp
aam
andb
int3
jbe
adc
in
mov
dec
cld
into
ss
es
sbb
cwtl
push
popf
mov
test
popf
out
adc
xchg
cmp
jmp
adc
cmp
das
lret
cmpb
lods
adc
imul
sub
ljmp
mov
movb
aas
cltd
or
jno
mov
fs
push
push
in
insl
jmp
or
xchg
test
clc
and
into
rcrb
ljmp
add
xchg
imul
mov
or
jmp
pop
stc
xor
push
mov
int3
pop
jb
rclb
xchg
cmp
adc
das
fdivrs
dec
je
add
inc
add
or
rol
test
xchg
xor
es
pusha
cmp
mov
jb
jecxz
sbbl
clc
inc
aad
cmpsl
sub
push
loop
jno
pop
jmp
cmp
xor
lods
rclb
push
cmc
fdivrs
fadd
xor
fnstenv
add
lahf
test
int
jae
incl
or
pop
sahf
xchg
and
xchg
push
mov
adcl
rcrb
loope
loop
dec
and
js
push
insl
lahf
idivl
inc
jge
loop
mov
loop
lods
inc
lret
std
pushf
call
dec
mov
push
inc
cli
adc
andl
sub
jae
in
data16
cli
and
or
cmp
xor
call
push
mov
repnz
inc
mov
sti
cmpl
xchg
dec
ret
sbb
iret
idivl
pop
pop
aam
fistps
xchg
xchg
shlb
loopne
mov
or
ficoms
std
cwtl
fnstsw
test
in
push
jmp
repnz
fldcw
movsl
aas
icebp
outsl
shrl
push
aad
or
shr
cltd
pop
aas
xor
loop
jle
fsts
inc
or
lods
imul
lret
push
xchg
ffreep
and
iret
out
adc
icebp
fxam
mov
cmp
mov
in
into
and
jnp
pop
add
push
mov
sbb
mov
inc
mov
popf
or
imul
call
adc
push
push
inc
xchg
mov
sahf
sub
rcrl
adc
outsb
cltd
test
and
mov
or
std
inc
add
sti
add
sbb
fwait
adc
dec
mov
nop
sarl
imul
cmp
outsl
mov
repnz
xchg
xchg
jp
data16
inc
fnop
inc
sbb
inc
sub
scas
mov
cmp
sbb
sub
jnp
cmc
cld
jle
movsb
sbb
jge
fnstcw
sub
jg
repnz
inc
movsb
mov
test
fnstenv
inc
aam
and
ds
pop
jbe
andb
stc
mov
lret
aaa
jnp
pop
mov
adc
fstl
lock
jl
add
out
jae
dec
dec
jbe
lods
testl
add
pop
dec
hlt
mov
cmc
hlt
int3
push
pop
jmp
inc
aas
imul
inc
and
subl
out
loop
cmpsl
xchg
pop
mov
push
mov
jb
pop
ret
mov
inc
aam
xchg
test
mov
add
lar
or
push
cmp
in
dec
aas
and
lods
mov
and
movsb
xor
push
sub
cmp
xchg
inc
xchg
cmp
mov
sarl
popf
ret
jbe
sbb
adc
pop
add
or
fsubs
bound
xor
pop
and
push
adc
cmpsb
mov
xor
push
shr
mov
mov
aas
es
xchg
cli
jl
sbb
dec
fdivrl
outsb
outsl
or
jno
jb
enter
adc
cmpsl
les
lods
mov
pop
flds
mov
dec
imul
jp
add
jo
mov
lret
mov
jb
xchg
aam
jb
aam
cmc
jnp
rcrb
popf
pop
jl
in
fwait
dec
bound
lahf
lret
fstpt
xlat
jne
test
out
popf
enter
pop
push
aas
mov
lret
push
mov
jg
fstpt
lcall
xchg
sub
ficomps
or
jge
inc
scas
xor
mov
popa
xor
or
xchg
shlb
cmp
jb
mov
lahf
gs
loop
out
aas
out
mov
cltd
and
jns
sub
scas
stos
arpl
sub
imul
inc
fdivrs
mov
push
es
fistps
mov
jno
movsl
mov
scas
inc
xor
andl
add
mov
sub
out
incl
mov
call
fwait
jmp
add
mov
cmp
nop
lds
leave
lea
cmp
xor
mov
cmpsl
inc
cmp
or
inc
aaa
int3
fs
xor
cmp
xchg
aad
jne
loopne
test
push
pop
sbb
fiadds
inc
lods
dec
cmpsl
das
xchg
adc
pop
js
lea
jecxz
insl
je
inc
jnp
push
cltd
andb
insb
mov
dec
jmp
stos
in
sti
inc
shl
in
and
dec
and
or
xchg
cwtl
repz
push
mov
inc
or
push
push
sub
das
dec
sbb
test
mov
stc
sti
mov
paddd
mov
sbb
cwtl
pop
mov
cwtl
cmp
pop
cmp
xor
inc
and
fsubrs
and
insb
mov
enter
dec
pop
mov
adc
cmp
addr16
and
dec
cwtl
mov
arpl
out
fmuls
mov
lcall
outsb
jno
outsb
sub
lret
dec
and
add
push
push
jecxz
mov
adc
mov
das
daa
movsb
mov
arpl
sub
loopne
mov
sub
imul
inc
and
scas
sbb
and
mov
cmpsb
mov
dec
dec
scas
and
push
rcr
mov
push
jne
dec
ds
mov
cwtl
outsl
mov
loop
xchg
mov
or
loopne
repnz
leave
pop
sbb
fwait
cmp
pop
movsb
push
pushf
test
mov
adc
inc
jb
gs
jg
jb
push
add
hlt
out
out
je
jb
dec
sub
out
add
jp
jae
cwtl
cwtl
int
daa
in
add
pop
sbb
mov
cwtl
cmpsl
sbb
mov
xor
or
push
push
adc
sub
stos
xchg
ret
fmull
shlb
jno
mov
push
xor
jbe
int3
arpl
fsqrt
xchg
jns
nop
sarb
push
pop
into
inc
rcll
test
xor
test
cli
sbb
out
or
in
mov
lret
xor
adcb
mov
mov
je
push
xlat
pop
lcall
into
xor
cmp
popa
lods
push
fwait
pop
inc
jge
nop
mov
addb
cmp
xchg
enter
out
mov
inc
cmc
sbb
pop
pop
imul
push
cmpsl
lret
in
call
pushf
idivl
repnz
insl
dec
cmp
mov
and
mov
stc
mov
sbb
inc
dec
sub
notb
fdivp
nop
mov
or
aad
fldt
mov
push
cmp
into
cld
leave
cmp
and
and
lcall
dec
and
test
inc
add
and
jne
pop
pop
push
dec
aaa
call
sub
sar
outsl
xchg
mov
popf
clc
mov
negl
movsl
stos
inc
lods
mov
cmp
jmp
movsl
pop
xchg
push
sahf
shlb
push
push
xchg
sub
cmp
lret
leave
or
mov
out
dec
and
xor
inc
or
ljmp
jb
lahf
push
fists
out
flds
imul
mov
call
mov
jns
das
iret
push
call
cmp
fs
jo
sarl
cmp
sub
xor
push
in
xor
and
cwtl
mov
mov
lret
mov
cld
outsl
xchg
mov
ljmp
push
cmp
nop
lcall
jmp
sub
in
mov
ds
in
das
cld
dec
incl
call
shlb
les
jg
enter
aam
into
pop
repnz
push
lea
imul
leave
mov
inc
push
fbstp
adc
xchg
dec
flds
jno
push
sahf
or
daa
mov
and
pop
sbb
push
outsl
les
fcompl
or
inc
jmp
and
lret
mov
out
icebp
xchg
daa
inc
test
cmp
mov
sub
pop
dec
cmp
out
lods
icebp
adc
mov
adc
xor
fisubs
dec
in
xor
mov
jnp
mov
and
es
mov
inc
inc
in
push
jae
jno
jmp
or
pop
push
inc
andl
sbb
jmp
jg
jmp
add
mul
push
bound
imul
fildll
lods
mov
mov
gs
popf
test
push
rclb
scas
mov
test
lret
push
in
sub
dec
aas
mov
psubsw
xor
test
xor
mov
pop
push
movsb
hlt
lds
repnz
cmp
xchg
fldl
pop
daa
mov
pop
jnp
fiadds
sahf
call
jae
xor
dec
inc
inc
loop
mov
adc
push
cwtl
adc
pop
popa
std
adc
push
dec
lods
movsb
cmp
fnsave
cld
and
lea
je
mov
and
sahf
fwait
aam
stc
scas
out
mov
or
daa
or
dec
or
mov
inc
mov
pop
pusha
sub
int3
pop
lock
and
adc
in
fldl
lods
adc
jbe
insb
inc
add
imull
lock
stos
cmp
or
add
cmp
insb
jne
arpl
xor
je
xor
jne
mov
aas
fisttpl
add
stc
out
cmpsl
pop
cmp
test
xchg
xor
lcall
xor
mov
add
xor
sbb
fs
mov
cmpsb
cmp
xchg
xchg
xchg
icebp
insb
scas
or
pushf
rcll
rorl
xor
mov
orb
push
inc
mov
insl
jae
jb
mov
jge
mov
xor
iretw
cld
mov
stos
rcl
mov
sbbl
clc
into
add
rclb
jle
lods
xchg
pushf
imul
les
add
xor
sub
lret
insl
push
sbb
jge
ja
stos
dec
xlat
pop
xchg
or
ljmp
jp
repz
add
cld
imul
imul
sbb
mov
xor
test
mov
mov
addr16
mov
push
test
adcl
xchg
mov
pusha
gs
andb
or
int3
and
ret
or
addr16
pushf
push
jle
mov
mov
mov
jecxz
or
dec
out
sysenter
sub
jg
pop
mov
hlt
sub
push
adc
lds
pop
and
lods
adc
mov
mov
leave
or
fisttpll
add
mov
inc
in
cmpsb
inc
adc
icebp
std
mov
or
xchg
ljmp
inc
imul
fldl
adc
test
xor
shl
jnp
push
enter
push
adc
or
adc
xor
jle
jg
sub
cltd
mov
repnz
ljmp
cmpsl
jl
pusha
sbb
xchg
jge
jbe
shrb
fwait
mov
addl
xor
jb
adc
cmp
sub
jp
pop
push
lods
rcr
daa
rclb
and
loop
data16
out
xor
jns
jbe
add
xchg
in
push
outsb
mov
jmp
sbb
cmp
push
das
sbb
mov
adc
adc
add
and
push
imul
test
jmp
cmp
xor
fwait
mov
in
ljmp
pcmpeqb
push
xor
std
sti
xchg
jmp
lea
adc
sub
or
sub
test
jb
mov
lds
gs
or
pop
in
sub
addr16
pop
fadd
lret
add
faddp
hlt
int3
push
pop
dec
xchg
sub
arpl
pop
pushf
daa
inc
cmpsl
mov
cwtl
mov
pop
push
sbb
push
xor
call
loopne
sbb
iret
ds
stos
sub
loopne
mov
lds
data16
push
and
and
sub
adc
ret
int3
adc
and
aaa
pop
or
les
pop
push
mov
int3
jns
cld
push
mov
mov
inc
je
or
dec
mov
rcr
outsl
outsb
pop
movb
add
pop
mov
jp
xchg
mov
push
dec
jle
lahf
cmp
imul
fbstp
mov
daa
add
int
sub
mov
cmp
mov
leave
mov
loope
pop
dec
shlb
sub
sub
xlat
cmp
inc
rclb
lds
repnz
adc
cmp
out
sub
mov
outsb
in
insb
cmp
xor
xor
orb
cmp
push
dec
dec
push
test
pop
iret
jns
scas
jmp
shlb
lret
lods
fsts
dec
rcrl
ds
jp
lret
movsb
jmp
add
cmpb
pop
push
push
ret
ja
mov
sbb
test
mov
fs
stos
cmp
mov
shrl
inc
lods
pop
xorw
dec
mov
imul
jmp
js
sbb
inc
xchg
in
in
push
cmp
addr16
fstps
icebp
arpl
pop
or
jae
pop
dec
sahf
inc
cmp
je
pop
xchg
pop
cmc
loop
sub
dec
les
mov
int3
outsb
inc
in
dec
mov
xlat
roll
pop
das
jns
dec
call
gs
mov
adc
mov
sub
aas
xor
sar
fcoms
xchg
cmp
jmp
cmp
fucomi
data16
scas
jnp
inc
cmp
cmp
mov
push
xchg
push
dec
scas
in
xchg
push
sbb
nop
leave
cmp
sahf
pop
test
cmp
sbb
and
mov
mov
lock
xchg
xor
movsb
push
aas
inc
std
lea
cmp
dec
clc
shll
jo
das
or
jo
test
shl
mov
mov
mov
adcb
out
cmp
rclb
mov
mov
mulb
pop
jge
movsb
sarb
xchg
xor
push
mov
lock
es
gs
test
ljmp
dec
sub
das
xlat
pop
jl
pushf
mov
inc
stos
repz
rcrb
push
xchg
orl
into
movsl
or
out
stos
cmpsb
xor
sub
jns
stos
mov
mov
in
xor
mov
pop
adc
jbe
arpl
mov
aad
out
add
xor
jl
adc
adc
mov
aam
cli
je
mov
push
push
push
mov
dec
cmp
aas
jno
clc
out
in
stos
push
sub
cmp
fstp
add
jnp
fnstenv
xor
jns
in
mov
ss
dec
sbb
mov
in
jp
adc
orl
pop
xor
cmp
push
mov
stos
jge
mov
jl
hlt
out
adc
fimuls
mov
inc
leave
cmpsl
icebp
dec
cmp
xor
js
or
notb
fcmovnu
xor
pop
stos
movsl
jne
pop
xchg
or
push
pop
mov
out
mov
out
in
push
jmp
rcrb
or
ds
clc
daa
pop
mov
std
fwait
pcmpeqd
xchg
clc
push
scas
pop
xchg
cwtl
rol
mov
lcall
in
out
inc
jle
fdivrl
push
dec
xlat
mov
out
xchg
rorl
out
fdivl
mov
jne
out
cld
shll
and
xchg
stc
loope
xor
rolb
sbb
cmp
fstpt
imul
mov
test
lret
fbstp
fcoml
jp
jmp
cmpsl
push
sub
jbe
stc
xchg
sti
ret
cli
jns
les
mov
movsb
jo
ja
fs
shrb
cltd
mov
nop
lods
aad
repz
adc
cmpsl
push
inc
into
inc
jmp
xor
popa
cmp
loopne
xchg
cmpsb
aas
push
popa
push
test
dec
push
scas
lds
dec
mov
dec
data16
inc
pop
les
pop
nop
into
int3
fld
xchg
sbb
sub
mov
fwait
xorl
repz
dec
outsb
push
lods
pop
mov
sti
aaa
gs
in
sbb
in
lock
rcl
arpl
sahf
pop
int
sarb
pop
in
dec
mov
mov
sbb
mov
cmp
cmp
dec
das
pop
pop
push
out
cwtl
fildll
scas
fcomps
or
pop
sub
aas
dec
das
pop
pop
push
out
cwtl
fildll
scas
fcomps
or
sbb
dec
cmp
dec
das
pop
pop
imul
cltd
fildll
scas
fcomps
or
pop
sub
aas
dec
das
fcomps
call
out
xor
iret
iret
enter
pusha
pop
jo
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmp
sub
jae
or
pushf
mov
pop
mov
or
lret
enter
call
push
pop
test
xchg
mov
pusha
mov
es
fisubrl
lret
outsb
sub
sbb
mov
push
pop
mov
mov
or
or
pop
cltd
jle
pop
mov
cltd
sbb
cmp
jns
ret
andl
xor
lea
lret
aad
in
testl
cmpsb
push
mov
movsb
fs
jne
lods
sbb
fwait
jne
mov
inc
or
fs
jecxz
dec
mov
xchg
sti
popa
in
cld
lret
enter
in
or
test
push
daa
mov
stos
sbb
inc
inc
imul
testl
cmpsb
imul
movhps
push
and
aaa
shlb
and
loope
fcomps
std
sbb
or
loopne
push
pusha
mov
push
stc
inc
sub
sbb
cwtl
pop
test
sub
push
inc
cli
xor
neg
xor
or
dec
mov
test
sub
into
dec
or
sub
int
sbb
ja
pop
mov
sahf
jns
dec
xchg
pop
fisubl
lret
jnp
out
mov
inc
sbb
mov
outsl
xchg
aas
les
pop
test
mov
lcall
sbb
sub
cmp
enter
call
push
pop
test
mov
lcall
sbb
sub
cmp
enter
xchg
jne
stos
out
cwtl
xchg
or
aad
or
jns
movsl
stc
out
shr
and
add
adcl
inc
enter
and
dec
sub
cmpl
ss
add
xchg
shlb
dec
sub
repnz
or
fwait
cmp
xor
add
jecxz
divl
lock
je
pop
out
dec
in
xor
xor
cmp
mov
or
into
loope
imul
jbe
push
movsb
pop
cwtl
idivb
mov
loopne
into
mov
add
addr16
movsb
stc
mov
inc
jns
or
add
xchg
rorb
mov
lahf
je
jle
mov
xchg
adc
pusha
inc
fcoml
cmp
dec
dec
xchg
inc
sub
dec
xor
aas
int
cmp
xor
or
push
mov
jbe
in
or
add
adc
pop
into
cld
movsl
or
into
xor
ret
incl
cmpsb
dec
lret
sbb
repz
test
cld
cmp
ja
ljmp
jb
mov
adcl
jp
inc
in
cwtl
pop
add
outsl
jo
jo
fcomp
inc
mov
insb
in
lds
and
dec
adc
mov
fsubrs
mov
add
mov
pop
fwait
outsb
pop
dec
adc
ss
cmp
xchg
xchg
jp
pop
mov
ret
mov
cld
mov
dec
dec
shlb
ljmp
sub
icebp
outsl
int
pop
cmp
xor
roll
imul
xor
cmp
dec
cwtl
jg
cwtl
in
sbb
sbb
xor
sbb
shrb
or
add
and
aam
lock
mov
aaa
call
adc
jg
aad
mov
and
xchg
sahf
pusha
lret
setno
mov
es
out
pop
mov
and
jmp
fidivrs
clc
imul
sbb
and
cmp
jle
dec
clc
movsl
in
insl
aad
shrl
mov
sbb
add
xchg
leave
xchg
rcll
xor
xor
sti
jl
andb
pushf
scas
jne
pop
dec
imul
shll
push
lcall
mov
push
out
mov
orb
xor
scas
hlt
in
pop
cli
mov
repnz
mov
cmp
leave
in
ja
pusha
outsl
and
adc
dec
push
push
add
or
in
push
bound
mov
popfw
jne
sbb
stos
loop
addr16
sbb
mov
pop
mov
out
xlat
or
repnz
and
insl
test
adc
lods
inc
std
inc
push
add
sub
jae
sub
jnp
in
shlb
lret
lock
in
and
rcll
cmc
ret
repnz
or
push
out
add
fidivrl
mov
mov
shll
fistps
dec
mov
sub
jae
and
cmpsl
ss
das
fnstenv
add
add
push
insl
icebp
iret
test
sub
orl
or
sub
in
inc
test
loopne
sub
dec
push
lds
pop
pop
cwtl
inc
inc
stc
inc
out
aad
testl
mov
mov
mov
popf
pop
lea
lahf
lret
jecxz
add
ja
push
fcmovnbe
cmp
ja
popf
dec
ficoms
test
jnp
frstor
push
fimuls
rolb
dec
clc
scas
loopne
inc
sub
daa
mov
es
cld
add
push
pushw
xor
shl
mov
xchg
inc
adc
sbb
sahf
repz
cld
mov
adc
clc
mov
pop
sahf
xorb
lcall
gs
xchg
data16
adc
pop
or
out
add
cmp
pop
dec
inc
cs
jno
and
jmp
mov
gs
fbld
je
icebp
lea
loope
xadd
fisubrs
sti
aad
es
daa
add
push
stc
dec
jo
xchg
jns
mov
es
inc
fstpt
mov
cmp
push
xor
hlt
daa
int
repnz
jg
movsl
repz
pop
leave
or
dec
fs
mov
addr16
mov
cwtl
fucomi
mov
pop
mov
aas
into
cmpsb
icebp
nop
sarb
mov
pop
ffree
mov
and
adc
mov
sub
iret
dec
fcomp
add
imul
add
mov
xchg
push
jl
imul
into
inc
mov
adc
in
mov
xchg
cli
call
or
jg
cmp
stos
xor
popf
aas
xchg
pop
cmc
cmp
cltd
stos
sub
fnstcw
mov
dec
fisubrl
push
shlb
xlat
leave
cmp
push
sbb
xchg
enter
mov
call
mov
add
iret
xchg
or
xchg
sbb
cli
jle
flds
or
in
push
insb
mov
pusha
test
jne
add
fbstp
nop
pop
dec
test
ret
lds
jb
sub
lret
adc
mov
inc
loop
mov
pusha
jae
or
pop
adc
test
pop
mov
dec
push
lcall
test
fcomps
scas
cli
stos
loopne
or
into
cmpsl
insb
cmovns
stc
mov
mov
cltd
cmp
or
stos
mov
xchg
aaa
adc
add
in
cmp
lahf
ret
or
mov
mov
mov
aas
mov
push
push
push
push
add
repz
adc
and
jp
fildl
mov
jmp
repz
pushl
or
cmp
adc
scas
push
fnstsw
mov
sub
lods
std
jg
loop
xchg
inc
cmp
lcall
aaa
insl
fsub
stc
jecxz
loope
cwtl
push
pop
adc
and
or
sbb
lods
hlt
mov
iret
adc
movsl
dec
mov
or
pop
xchg
mov
imul
and
hlt
fdivr
xchg
push
aaa
cmpl
jo
pop
jecxz
cmp
fldl
hlt
cmp
inc
fwait
scas
mov
jmp
xchg
loope
push
and
sahf
int
popl
mov
push
ss
sbb
dec
mov
in
or
mov
pusha
idivl
jl
fstpt
and
dec
loope
divl
add
ror
jb
imul
stc
cbtw
sub
pop
mov
cltd
outsb
es
in
sub
push
mov
cs
mov
jne
je
pop
xchg
je
mov
pop
push
call
and
and
mov
adcl
aaa
scas
in
push
dec
mov
fdivr
pop
add
cmp
outsb
jnp
data16
or
fstpt
stos
mov
sbb
fwait
pop
sbb
daa
mov
mov
xchg
mov
sahf
push
lret
xor
mov
dec
popf
mov
xorl
add
fbld
mov
push
in
sbb
jle
in
pop
add
mov
ret
mov
fcmove
adc
xchg
testb
repz
jecxz
dec
icebp
leave
fildl
and
jge
inc
cltd
sbb
loope
jae
fidivrs
leave
fildl
cmp
push
mov
jmp
cmp
fwait
loop
jns
push
pop
scas
xor
mov
lret
jb
fildl
fstpl
xchg
nop
jl
push
sbb
mov
inc
rcrl
jmp
dec
inc
and
push
inc
mov
aad
aad
adc
in
jb
cmp
push
test
aam
sub
jp
sub
add
out
sub
in
ret
xor
cmc
dec
mov
jbe
sbb
test
les
mov
imul
jp
inc
and
xlat
jl
je
stc
pop
mov
and
jle
mov
xor
mov
xchg
add
mov
sbb
imul
pop
cmp
ret
dec
pop
lcall
jmp
fcomip
pop
arpl
fsubrp
adc
and
loope
xor
adc
in
sub
scas
sbb
xlat
les
mov
or
mov
or
mov
fstpl
cmpsl
neg
shl
push
xchg
insl
push
sahf
aas
je
mov
cmp
and
or
fld
or
jle
sti
inc
scas
adc
push
iret
je
repnz
mov
inc
or
inc
and
iret
cs
insb
cmc
sbb
std
ret
add
push
mov
sub
adc
jle
test
lock
mov
in
roll
jno
cli
sarb
lods
repnz
jge
iret
ja
pusha
and
cmp
cs
ficoml
adc
and
stos
pop
sub
or
push
add
pusha
nop
add
and
pop
in
and
cwtl
pop
lock
mov
enter
mov
hlt
inc
xchg
and
add
mov
aam
adc
jmp
int
or
in
cmp
cld
mov
and
in
sub
xchg
ja
cmp
andl
cltd
pusha
test
push
iret
inc
cmpb
imul
cmp
sbb
jnp
adc
sahf
fwait
stos
xor
rorl
dec
pop
inc
fldl
cmp
sbb
stos
test
scas
mov
jp
cmc
aas
jae
fs
and
lcall
pushf
xor
test
sbb
cli
adc
sti
mov
iret
fcmovnu
xchg
movb
push
sbb
mov
inc
push
imul
and
sub
jge
mov
jno
out
jbe
dec
stc
pop
mov
icebp
scas
movsb
cmp
pop
pop
cmp
outsb
outsl
lock
hlt
sub
xchg
adc
les
fnstcw
cmc
addl
outsl
add
pop
sarb
jle
and
into
pop
mov
xchg
clc
push
icebp
lahf
stos
stc
outsl
das
dec
daa
nop
aas
call
stos
xchg
pop
je
inc
fmulp
push
stc
std
int3
in
movl
mov
sub
rolb
mov
inc
sub
xorl
cmpsl
hlt
xor
jmp
jb
mov
jb
add
jmp
mov
cmp
mov
pop
jecxz
mov
or
sbb
addb
fimuls
loopne
cwtl
cmp
mov
mov
jb
sti
jg
stos
inc
xchg
lock
add
add
jb
in
jge
xchg
lods
jne
js
pop
inc
dec
mov
sub
and
in
fsincos
inc
test
mov
cmp
jne
add
xchg
fwait
adcl
mov
mov
pop
jle
movsb
pop
jno
pop
test
mov
aad
xchg
imul
sub
addb
shr
sbb
rclb
popf
out
shl
push
mov
push
or
outsb
int
sub
dec
ljmp
sbb
aad
popa
xchg
sbb
mov
pop
jg
mov
hlt
xor
repnz
lods
lock
push
stc
mov
jmp
out
jns
sub
dec
mov
cmpsb
jmp
bound
jl
fs
cmp
jge
xor
mov
data16
rolb
loop
jnp
sbb
cmp
popf
into
jge
dec
sbbl
arpl
lock
outsb
sbb
imul
iret
xchg
jae
test
ds
mov
dec
fisttpl
inc
push
or
int
pop
fnsave
mov
in
jge
int3
or
in
aam
arpl
mov
sahf
jo
inc
testb
ja
je
jo
sbb
test
or
inc
rorb
xor
leave
xor
xchg
test
repnz
lods
loop
xchg
dec
int
xor
adc
js
push
mov
jno
adc
xchg
pop
int
mov
hlt
cmpl
fucomi
inc
jg
adc
mov
push
cld
lea
add
mov
shrb
adc
inc
and
iret
or
sub
xor
pushf
adc
rcl
int3
push
addl
out
jmp
add
add
mov
gs
sbb
daa
push
imul
mov
loop
test
outsl
xlat
mov
mov
inc
lret
and
dec
lods
je
xor
fsts
or
sub
stc
pop
das
test
sub
lods
jle
xchg
xlat
cmp
aam
popa
mov
cmp
push
shlb
movsb
inc
sub
adc
mov
fsubs
jo
ficomps
and
movsb
fidivrl
push
adc
out
mov
push
ficoml
outsl
out
jmp
sbb
cmc
adc
sbb
cmp
popf
pop
mov
movsl
jo
add
mov
cmp
hlt
sub
xchg
mov
fsts
push
gs
pushf
movsb
insl
call
sarl
rorb
fimull
xchg
mov
shll
sub
sbb
roll
adc
xchg
jge
dec
mov
sub
out
cmp
arpl
iret
fnstenv
cmp
mov
test
pushf
in
outsl
into
lods
movsl
aad
call
pop
setle
mov
lea
daa
inc
xor
fisubrs
jg
mov
cwtl
das
adc
push
sarb
dec
fistpl
and
loop
insl
jbe
loopne
push
sbb
test
adc
out
icebp
insl
jns
cld
cmp
loop
xchg
mov
pop
or
test
ret
pop
sarl
and
jl
loopne
xchg
push
dec
scas
cwtl
nop
push
cld
pop
jae
cmp
lret
inc
inc
cmpsl
jns
pop
and
int
xchg
cmp
addr16
mov
dec
cli
test
cltd
xor
stos
fidivl
int
in
adc
mov
mov
insb
loopne
insl
push
mov
std
lods
rcrb
insl
sub
sarb
mov
dec
sub
inc
jge
xchg
and
dec
sbb
fadds
mov
mov
cmp
mov
cmpsl
cli
out
jne
addl
pop
push
lea
pop
je
imulb
decl
out
dec
lock
cmp
lahf
sti
loope
dec
push
cmp
mov
add
xchg
out
mov
mov
js
out
push
lea
call
mov
into
cmpsb
loopne
mov
dec
add
inc
mov
and
les
inc
push
mov
and
hlt
mov
dec
sbb
mov
aas
xor
stos
add
dec
adc
jb
outsl
pop
cmpb
test
lcall
cli
dec
xchg
mov
dec
push
sub
mov
in
lret
cmp
cmp
call
inc
insl
rcrb
mov
or
and
gs
test
outsl
in
mov
call
test
xchg
jge
push
pop
sub
xchg
push
das
or
xchg
imul
popf
fadd
xchg
ffree
or
adc
jecxz
fistpll
xchg
lcall
xor
sahf
push
aad
inc
ret
dec
jecxz
or
push
push
lret
stos
ret
mov
fcoml
and
xchg
mov
mov
scas
or
dec
stc
xchg
mov
loop
xchg
jnp
aam
shll
rorb
push
stos
js
outsb
pop
adc
stos
or
insl
sbb
cli
sub
cmp
jecxz
xchg
cmp
mov
adc
sarl
mov
outsl
aaa
jmp
dec
mov
stos
jl
pushf
aad
insl
fidivl
lret
adc
sbb
dec
adc
stos
inc
cmp
mov
loopne
lea
cli
push
je
out
xor
push
sub
std
aad
jl
push
pop
sti
xorb
sahf
or
dec
jg
add
cmp
sub
test
sarb
in
inc
dec
pop
popa
int3
es
jb
ficomps
jp
fimull
xchg
fbstp
daa
cmc
pop
jp
movsl
pop
inc
iret
pop
int
sub
dec
xchg
push
cmp
addr16
fidivrl
sub
or
and
lahf
xchg
popf
arpl
cwtl
rolb
addr16
jmp
mov
pushf
or
push
lret
out
jecxz
dec
dec
cmp
fstl
xor
test
std
loopne
js
aas
mov
jmp
fisttpl
in
call
cmp
xor
or
jns
push
xchg
imul
das
sub
jns
pop
mov
and
cmp
mov
xor
sbb
xchg
pop
pop
stos
nop
lahf
cmp
and
loopne
ja
push
xlat
shrl
pop
pop
ret
js
dec
imul
cmp
mov
sub
dec
sbb
mov
inc
jg
cmpsb
rclb
lods
adc
gs
test
push
js
jecxz
jg
out
addb
movsl
or
jecxz
roll
cmp
adc
cmp
andb
sub
xchg
xor
mov
adc
insl
push
je
adc
ret
mov
ljmp
jne
push
adc
mov
add
aad
popf
mov
sbb
sub
inc
xor
adc
or
inc
or
mov
pop
enter
mov
cmp
lods
dec
imul
sahf
xchg
and
xor
lahf
insb
dec
popa
cs
loope
out
inc
cmp
dec
sarl
getsec
cmp
jp
add
sbb
xchg
cmp
jl
sti
movsl
loop
pop
cmpsb
testl
movsb
lods
mov
jge
int
das
cmp
jmp
sub
dec
xor
xor
test
dec
movsb
cmp
sub
test
push
into
lcall
and
mov
push
inc
mov
bound
popa
aam
or
jne
scas
mov
pop
pop
sub
inc
add
sbb
cmp
jge
cmp
cmp
xchg
in
mov
xor
pop
int
out
mov
pop
xchg
or
cmp
aam
mov
mov
insl
sbb
xchg
aas
pop
sub
inc
sbb
mov
dec
adc
mov
cmp
mov
adc
jno
mov
pop
inc
stos
mov
das
sbb
sbb
xor
mov
and
mov
inc
aas
push
mov
cmpsb
pop
xorl
loope
imul
das
shr
fldl
xor
lahf
sub
test
paddsw
ljmp
testb
sbb
je
in
push
mov
push
adc
int
push
inc
add
sub
or
mov
dec
jecxz
pop
cmp
xor
incb
mov
xchg
jp
dec
sub
pop
lret
dec
push
xchg
imul
xchg
idivb
mov
mov
sahf
bound
dec
lret
daa
adcb
adc
jb
fsts
pop
mov
ljmp
subb
mov
xchg
ja
filds
es
lock
mov
push
jmp
push
data16
pushf
pop
sbb
mov
or
adc
dec
js
ljmp
sbb
mov
add
fidivl
in
xlat
repnz
pop
sub
sbb
mov
push
add
xor
jl
jns
push
data16
mov
pop
mov
lds
fiaddl
int
cmp
push
inc
mov
lea
stc
lods
adc
sbb
leave
clc
mov
cwtl
mov
js
lods
lock
mov
enter
add
xorl
pop
push
int3
clc
jnp
jae
enter
push
aam
movsl
xchg
jge
inc
sbb
stc
int
pop
cmpsb
mov
sub
sbb
sbb
inc
sbb
punpcklwd
inc
dec
fs
mov
mov
ss
aaa
je
ret
mov
push
mov
xchg
pop
sbb
xor
movsb
mov
sti
in
xor
and
test
sub
enter
push
mov
cmp
cld
enter
and
inc
xor
fisttps
xor
adc
inc
fidivrs
movsb
ret
dec
stc
imul
mov
xchg
mov
lods
stos
insl
and
or
sub
repz
inc
add
cmp
push
fnsave
xor
and
jge
dec
jge
cs
dec
adcb
inc
push
or
cmpl
mov
inc
xor
icebp
imul
push
or
jg
dec
push
jne
and
fldt
ja
lcall
repz
jmp
enter
mov
add
push
mov
test
stc
jo
xor
ja
or
adc
negl
rcr
in
or
jp
push
pop
test
mov
lcall
sbb
sub
cmp
enter
call
push
pop
test
mov
lcall
sbb
sub
cmp
int3
sub
sbb
or
jp
imul
lods
dec
mov
lcall
sbb
and
fdivrl
sub
cmp
or
mov
fisubrl
lret
mov
repnz
jge
push
xor
enter
pop
ljmp
sbb
inc
pop
mov
stos
js
dec
test
testl
int
lret
pop
ljmp
push
stos
inc
push
mov
cmpsl
push
mov
xchg
xchg
or
cmp
sub
ret
shll
loop
repnz
subl
mov
push
inc
popf
push
loop
xchg
addl
mov
test
leave
push
xchg
xchg
xchg
outsb
sbb
sub
data16
lahf
cli
sti
pop
cld
jne
dec
frstor
xchg
aaa
mov
test
pop
mov
xlat
cmpsl
mov
lret
dec
sub
and
stos
pop
xor
add
out
out
sub
or
daa
sbb
popa
aaa
mov
rsm
mov
jp
ss
movsb
pop
sbb
ret
lods
cmp
xor
out
push
dec
fwait
stos
pop
mov
cmpsl
outsl
shrb
mov
or
xlat
sarb
cmp
lret
pop
addr16
daa
dec
add
movsl
mov
mov
subb
movsb
sbb
sbb
lret
pop
std
sbb
mov
scas
push
mov
add
adc
cmp
xor
lahf
push
mov
and
or
fimuls
or
add
jbe
outsb
mov
xlat
dec
stos
fimull
daa
lahf
addr16
push
xor
sub
dec
aas
jecxz
les
jns
dec
mov
clc
inc
lahf
jbe
jb
sbb
inc
pop
mov
cmpsl
jp
push
sbb
or
cmp
sub
fidivl
lret
pop
ljmp
push
stos
inc
pop
mov
cmpsl
jp
push
sbb
or
cmp
sub
fidivl
or
mov
cmpsb
add
and
int3
test
mov
mov
sti
mov
test
xor
mov
fdivs
ljmp
mov
adc
jge
ficoml
fwait
bound
aad
test
cmp
cs
jle
cmp
jl
adc
dec
mov
adc
mov
pop
and
in
jne
push
jge
xlat
in
dec
fmuls
dec
sub
fbld
roll
sarl
scas
sahf
or
lret
xor
incl
popf
popa
daa
daa
aam
mov
jae
mov
cmpsl
stc
jnp
pop
or
and
push
cltd
push
pop
sbb
mov
std
cmpsl
push
xor
jecxz,pn
adc
adc
aam
xor
ds
push
dec
and
scas
jp
mov
test
inc
int3
inc
jo
mov
movsb
test
jge
inc
data16
or
out
pop
or
movsl
outsb
aaa
arpl
ret
jno
xchg
xchg
repnz
js
out
cltd
call
into
adc
sub
lret
xorb
cwtl
jge
bound
sub
xchg
jne
dec
lahf
repz
mov
jl
aad
lods
sub
mulb
mov
out
dec
mov
mov
dec
out
or
sub
or
adc
add
xchg
cli
pop
sub
xor
clc
imul
jmp
jb
pop
or
fwait
lods
out
jg
push
mov
mov
gs
js
xchg
int
pop
dec
cmpsb
lret
mov
shlb
mov
inc
movsl
pop
outsl
inc
outsl
das
or
minss
push
xlat
fstl
lahf
xor
fildll
test
int
aaa
sbb
jne
movsb
push
fstps
pop
mov
push
lret
sub
loop
jmp
cmp
mov
sarb
jp
pop
jge
scas
addr16
out
inc
je
xor
jb
iret
jge
hlt
sbb
xor
in
cmp
ror
inc
or
adc
outsl
sbb
add
cmc
jle
stos
push
and
xor
loopne
out
sub
sub
xchg
jne
inc
sbb
and
lahf
cs
call
movsb
mov
add
out
fs
lcall
lds
add
jg
jno
in
xchg
popa
repnz
clc
lret
jp
add
iret
push
out
fcoms
cmpsb
push
xchg
push
ljmp
fldl
stos
sub
cwtl
lods
aaa
jmp
fcompl
cmp
sbb
pop
dec
imul
dec
sbb
mov
dec
enter
cltd
jge
jns
sti
pop
cmp
jmp
lahf
dec
push
jno
cmpsw
call
sub
lock
push
jmp
adc
inc
movsb
dec
stos
sub
ret
mov
push
fsub
addl
subb
or
lret
push
cmpsb
hlt
inc
pop
fisubs
cmpsl
leave
iret
and
faddl
jge
push
pop
mov
pop
out
out
xor
movsl
test
imul
icebp
jp
mov
ss
mov
mov
fwait
mov
jecxz
mov
sbb
fisttpl
out
sub
pop
fucom
or
insl
stos
hlt
test
loopne
and
aaa
jl
test
jnp
ret
repnz
es
adc
mov
mov
xchg
ret
cli
sbb
orb
clc
and
fsubl
ss
outsb
adc
xor
jg
dec
daa
inc
in
push
xchg
nop
sbb
scas
fimull
lock
xchg
cmp
rcl
push
shrl
push
push
mov
inc
inc
arpl
add
ljmp
mov
repnz
inc
inc
outsb
xor
ret
or
ret
or
fcmovnbe
and
xor
dec
arpl
ljmp
jp
pop
hlt
mov
sbb
das
jmp
mov
enter
icebp
sub
aam
push
jp
insl
mov
stos
cmp
mov
pop
or
aad
sbb
dec
xor
dec
pop
aaa
and
push
sub
insb
fwait
bswap
movsb
mov
mov
cli
jb
xchg
pop
jmp
xchg
pop
add
les
sub
mov
push
cmc
fstps
lcall
cmp
bound
mov
push
fwait
sub
ficomps
xlat
inc
ret
mov
fdiv
out
scas
outsl
push
cltd
add
outsl
add
mov
enter
adc
inc
cmp
ret
nop
jge
fnstsw
push
in
pop
dec
addr16
into
dec
pushf
arpl
aam
xchg
xor
pop
fcomi
xchg
mov
xchg
jnp
jmp
push
or
outsb
push
jno
sti
mov
popa
repnz
add
bound
shrb
add
fldpi
mov
push
loopne
xor
call
mov
add
psllq
mov
cmp
ds
mov
inc
push
cs
sub
rorb
lods
lock
cmp
sub
inc
dec
arpl
setg
jno
imul
scas
add
stos
add
xchg
jp
ret
jle
bnd
mull
decl
stos
dec
cs
jb
xchg
mov
jl
sub
lea
in
jno
mov
mov
out
push
mov
inc
xchg
scas
js
sbb
sub
enter
out
movsb
mov
dec
xor
adc
fimull
xchg
pop
ret
out
testb
shlb
lods
cmp
push
jne
push
lods
push
mov
add
inc
fs
push
xor
aas
test
jge
shrl
fstpl
rolb
das
je
scas
dec
jbe
mov
nop
lds
and
aam
jp
mov
xchg
int
imul
add
cmpsl
cltd
shll
xchg
mov
sub
fs
pusha
push
push
out
daa
insb
mov
call
aaa
jg
mov
andl
add
lret
daa
xor
xlat
test
popf
or
dec
push
jg
xchg
pop
dec
in
add
sub
lods
sub
test
xchg
arpl
testb
xor
xor
inc
into
xchg
jl
cmpsb
mov
call
lock
roll
or
inc
adcl
pop
subb
push
inc
mov
icebp
or
pop
sbb
jmp
dec
jae
imul
mov
mov
push
cmpsb
je
cmp
repz
shlb
push
outsb
clc
push
iret
push
call
xchg
ficomps
stc
lret
mov
cs
rolb
add
and
mov
xchg
popf
cli
cmpsl
mov
push
push
jmp
std
popf
fcoml
jae
xlat
xor
movsl
mov
add
and
dec
fsub
shl
sbb
mov
cmp
stos
cld
mov
sub
js
mov
jo
aam
imul
test
cmp
push
fldenv
cwtl
int
shll
ds
shl
adc
gs
inc
jnp
dec
adc
or
sbb
stos
cmc
mov
test
sbb
das
mov
inc
dec
cmp
and
lahf
fisubrs
iret
ficoml
add
lea
ja
pop
ds
adc
or
aam
jmp
mov
mov
pop
add
mov
mov
cmp
mull
mov
inc
xchg
adc
dec
mov
mov
les
xlat
fisttps
mov
fisubl
scas
test
rcr
mov
push
dec
clc
lock
gs
iret
mov
iret
inc
fnsave
loope
mov
mov
sbb
jne
jge
out
sub
push
out
icebp
ja
test
leave
test
add
xchg
cmpb
push
rorb
jno,pt
fucomip
jp
adc
cmc
mov
jns
movsl
add
cld
cmpsl
movl
pop
andb
sarb
leave
or
push
and
add
es
or
pusha
mov
test
testb
pop
cmp
andb
sub
push
and
sbb
lret
push
lods
div
subl
inc
ficompl
dec
ljmp
xchg
pop
je
loopne
sbb
jns
cmc
sti
imul
testl
or
gs
sub
and
in
xor
lea
cmc
jmp
dec
imul
xor
pop
sar
mov
pop
xchg
mov
nop
cmp
xchg
test
repnz
and
stc
clc
and
das
pop
mov
adc
push
jns
sbb
mov
push
xor
push
mov
or
jnp
sbb
lock
icebp
inc
or
fldpi
and
push
xchg
adc
or
std
mov
xchg
push
js
sbb
inc
jg
adc
push
testb
cmp
xor
push
ljmp
andb
pushf
push
in
repz
repz
test
cmp
lcall
les
fs
adc
jae
out
cli
mov
mov
inc
jnp
addb
mov
stos
insb
dec
jg
repz
pop
fdivrl
mov
push
inc
inc
pop
add
lret
mov
rolb
js,pt
lds
mov
cwtl
xchg
fidivrs
mov
xchg
mov
jp
icebp
push
aas
les
mov
scas
or
lret
arpl
je
push
adc
aam
sub
orl
sub
imul
adc
adc
test
and
sbb
add
rorl
xlat
xor
rcl
movsl
std
ljmp
push
xor
mov
jl
xchg
push
push
jne
insl
xor
cli
inc
je
and
xorl
jne
aaa
stc
popa
out
jecxz
xor
inc
fsubrl
idiv
mov
dec
dec
outsb
jne
and
and
lds
add
fmul
test
fisttpll
jp
jp
mov
pop
jecxz
nop
xchg
and
push
movsl
mov
and
dec
add
pusha
lds
sub
ficoml
jo
dec
or
sbb
and
pop
lret
push
sti
pop
adc
jo
add
int
aad
mov
cli
mov
mov
iret
mov
add
mov
hlt
inc
lret
rolb
into
or
mov
mov
dec
fiaddl
nop
lcall
xor
out
push
loopne
inc
inc
adc
iret
mov
loopne
or
lods
scas
fildll
inc
stos
sub
add
xor
aas
mov
rorl
or
orb
push
fstpt
lea
test
pop
pop
or
sbb
js
push
pop
lock
data16
jae
bound
adc
jle
cmpsl
in
mov
mov
sbb
cmp
jmp
movsl
cmp
push
xchg
jmp
ja
imul
or
jnp
jle
xchg
sbb
jb
or
jmp
outsb
or
movsl
mov
push
inc
lea
mov
jmp
es
ljmp
pop
in
mov
or
loope
pop
push
inc
notl
imul
cmc
push
aaa
lret
je
or
arpl
lahf
repnz
push
std
push
dec
inc
mov
adc
push
ljmp
pusha
push
push
jge
mov
repnz
xchg
xchg
into
rcr
pop
jg
sub
mov
xor
insb
add
sbb
test
xchg
ja
xchg
or
xor
sub
imul
sbb
je
rorb
jecxz
out
pop
clc
mov
xchg
ja
icebp
sub
nop
and
out
popa
mov
inc
pop
xchg
inc
push
es
jmp
jbe
fs
mov
pop
scas
mov
sub
faddl
and
ss
ret
jecxz
sahf
cli
pop
aad
jbe
lock
mov
js
pop
repz
cmp
movsb
rcrb
es
and
jg
dec
adc
and
cmovb
or
es
data16
out
mov
test
iret
pop
fstps
sub
lea
shl
pop
fxch
lret
and
aaa
mov
mov
test
fxrstor
cld
lods
pop
icebp
js
sub
pop
loope
sub
loope
lds
lods
std
adc
pop
adc
ds
addr16
stos
lret
push
pop
sub
pushf
push
mov
cmc
mov
neg
jae
loop
sub
int3
mov
adc
add
enter
mov
aam
in
outsb
xchg
sub
adc
out
inc
test
fstps
nop
mov
xlat
push
aas
pop
aad
int
add
pop
stc
mov
ret
or
subl
pop
int
or
stc
sbb
sahf
jl
dec
or
fbld
leave
and
mov
mov
lds
cmc
sbb
ja
add
mov
cmp
fimuls
mov
mov
add
enterw
test
lods
or
mov
mov
mov
scas
and
cmp
jne
and
cbtw
test
xchg
lcall
cmpsl
inc
lret
aaa
cwtl
add
ljmp
jle
xor
clc
je
sbb
mov
dec
adc
ss
idiv
push
pop
in
movd
sbb
faddl
enter
sub
mov
add
fidivrs
rorl
daa
mov
rol
das
cwtl
adc
mov
add
or
aas
xchg
pop
add
push
push
inc
push
jg
or
test
dec
int
mov
inc
dec
jb
pop
lods
inc
pushf
sub
sti
jns
pop
mov
adc
iret
test
mov
pushf
pushf
das
mov
lea
movsb
movsl
jne
js
lea
adc
rep
push
xlat
or
inc
clc
addr16
scas
imul
cmp
movsl
push
nop
cmpl
popf
sub
lods
aaa
add
aas
jae
mov
es
in
into
testl
mov
xor
test
insb
mov
stos
cltd
lods
sub
dec
pop
int
into
stos
mov
jnp
shll
ja
jnp
in
inc
xchg
xchg
cmp
sarb
xor
mov
inc
dec
adc
mov
sbb
add
mov
push
std
mov
in
fdivl
call
lea
xor
cmp
adc
jp
or
or
shrb
and
add
jno
and
xor
adc
iret
push
pusha
in
lcall
int3
dec
testb
dec
or
xor
dec
jg
popf
insb
jle
dec
inc
push
andb
shlb
jg
rcrb
pop
inc
shr
xor
mov
aad
mov
xchg
addr16
in
jg
lahf
mov
loope
fwait
sarl
lock
movsb
insb
negl
mov
and
pop
call
jmp
pop
and
push
push
daa
or
sahf
insl
pop
lods
movsb
ja
fwait
add
sub
sbb
loop
sbb
jno
mov
popa
out
xchg
fdivrl
adc
mov
jge
sbb
repnz
sbb
shll
dec
xor
out
cmpsl
test
or
adc
loopne
ljmp
cmp
fscale
sahf
dec
pop
add
addr16
jns
es
sub
jbe
mov
call
mov
push
ret
out
cmp
test
add
dec
cs
cwtl
lods
xlat
mov
or
dec
adc
jno
mov
popa
hlt
rcrb
aaa
inc
and
out
stos
lock
test
in
shl
in
jae
imul
aam
aas
rcr
pusha
out
pop
shlb
xchg
clc
jmp
lcall
sub
push
push
cld
mov
inc
pushf
ss
std
scas
incl
nop
push
cmp
mov
adc
rorl
cmc
push
enter
loope
shll
lock
and
push
mov
lret
sub
shll
fwait
scas
mov
sbb
jecxz
cltd
rorl
fisttpll
gs
in
adc
lea
xlat
xchg
mov
push
stos
repnz
xor
dec
pop
cmp
jbe
xor
sub
jo
mov
jne
jg
jnp
jecxz
push
xchg
outsb
cmpl
icebp
sub
or
push
xchg
lds
inc
loop
mov
fidivrs
das
lea
jb
mov
cld
xchg
xchg
mov
aas
mov
nop
shrb
xchg
rcll
adc
jo
sbb
dec
push
jge
ds
jp
adc
inc
cmp
inc
mov
outsl
push
xor
inc
mov
sti
inc
xor
pop
scas
enter
sub
push
xchg
in
int3
adc
mov
lods
mov
pop
xchg
sub
mov
mov
imul
imul
jo
jae
repz
cmp
sahf
dec
mul
mov
add
dec
aas
xor
cmp
loope
pop
xor
pop
stos
fwait
in
add
push
inc
ja
scas
cmp
repz
ljmp
imull
xor
jmp
or
jp
and
out
jb
push
pop
xchg
arpl
push
adc
pop
test
lret
xchg
cmpsb
xor
cmp
aad
pop
jg
and
lret
dec
jne
sarb
sbb
xchg
cmc
jle
movsl
jnp
sbb
imulb
jb
popf
push
popf
js
jb
scas
pop
cmp
adc
jno
roll
adc
fwait
loope
sbb
in
or
or
ds
mov
std
mov
pop
cmpsb
dec
pop
push
mov
dec
aas
xchg
cli
add
pusha
movsb
add
ja
mov
ss
mov
add
xor
das
jg
jno
xor
test
jb
dec
mov
pop
cmp
jecxz
stos
sub
dec
lcall
mov
inc
mov
inc
push
pop
fidivl
jno
dec
push
sbb
or
sbb
xchg
sub
gs
fidivrs
cmp
cltd
std
dec
lea
mov
mov
mov
mov
sbb
xor
fsubs
fcmovnb
ds
ljmp
clc
ds
pop
mov
cmp
mov
loop
dec
pop
xor
adc
js
lret
lahf
add
jns
bound
push
outsb
enter
and
mov
arpl
pop
or
jp
outsl
sub
xchg
adc
dec
inc
xchg
stc
mov
dec
xlat
shlb
push
nop
xchg
push
dec
pusha
scas
xor
or
sbb
daa
xchg
dec
iret
lcall
dec
adcb
lahf
mov
jge
mov
push
shl
inc
lock
push
testb
mov
push
xlat
adc
or
mov
punpcklwd
mov
jecxz
iret
sbb
stos
push
ret
mov
js
enter
jp
and
push
fsubp
mov
hlt
and
inc
mov
addr16
adc
scas
mulb
mov
mov
xchg
mov
sbb
or
stc
cmp
mov
shl
mov
leave
cmpsl
fwait
xchg
jg
pop
mov
imul
testl
sub
dec
ljmp
jmp
push
jnp
cmp
faddl
jae
push
pop
fdivrl
mov
dec
out
test
loop
mov
aaa
jnp
xchg
add
mov
xchg
inc
add
dec
add
loop
ja
out
lcall
out
mov
cs
inc
mov
xor
cltd
fmuls
lods
imul
sub
test
push
mov
mov
cld
push
fsubs
arpl
mov
daa
and
pop
pop
fstpt
xchg
push
jmp
xor
or
inc
loopne
or
add
pop
pop
xor
and
test
cmp
cmpb
jnp,pt
cmpsb
lahf
add
mov
dec
setno
sahf
sub
inc
outsl
push
xchg
add
or
mov
mov
je
loopne
ficompl
sub
push
pop
inc
cmc
add
pop
fcomp
adc
jno
mov
jno
fiaddl
out
jo
and
and
lods
adc
out
rcrb
mov
jge
idivl
mov
loopne
int3
lcall
in
lea
push
fists
fwait
jae
stos
fistpll
mov
xor
decb
cs
inc
sbb
movsb
mov
add
inc
imul
lret
stos
mov
jl,pn
std
movsb
mov
enter
scas
sub
pop
cli
inc
push
in
test
jle
nop
call
shl
loop
push
sbb
xor
gs
mov
mov
pushf
fimuls
pop
ficomps
sbb
cmpsb
and
popl
mov
cmp
loop
push
cmpsb
mov
xchg
mov
daa
jle
ljmp
push
stos
inc
pop
mov
cmpsl
jp
push
sbb
or
cmp
sub
fidivl
lret
pop
ljmp
push
stos
inc
pop
mov
cmpsl
jp
push
sbb
or
cmp
sub
fidivl
lret
pop
ljmp
push
stos
inc
pop
mov
cmpsl
jle
push
sbb
push
out
sbb
out
aaa
daa
int3
pop
ljmp
push
sub
mov
or
insl
jg
sbb
sub
cmp
cmp
inc
or
arpl
dec
cmpsl
mov
lea
fldl
sub
aaa
jge
insl
pop
pop
pop
dec
cmpsl
mov
lea
lahf
xchg
lods
cmp
orl
notl
cmpsb
lea
scas
hlt
int
cmp
xor
bound
les
in
fmul
dec
or
data16
mov
jnp
xor
addr16
fcoms
jae
sbb
pushf
sub
xor
or
ljmp
arpl
sbb
pop
cmp
cld
sub
xor
pop
scas
sub
adc
push
rolb
rol
cmp
cmp
js
repnz
repnz
push
dec
dec
into
aaa
inc
mov
sub
dec
inc
in
cmpsl
adc
and
inc
repnz
shrb
hlt
mov
sub
lods
bswap
pop
lods
mov
call
xchg
int3
inc
cmp
sub
pop
pop
mov
lods
setge
xlat
std
mov
movsb
add
je
fs
adc
add
sbb
cmpsb
flds
pushf
leave
sahf
jecxz
rorb
mov
xor
je
iret
lds
loop
sahf
ret
mov
push
jle
jne
push
pop
pop
pop
dec
idivl
lea
fldl
sub
aaa
jge
insl
pop
pop
pop
dec
idivl
lea
fldl
ljmp
dec
shll
arpl
lock
dec
and
xor
clc
stos
xor
lods
inc
stos
mov
dec
and
ljmp
push
mov
fucomip
cmpsb
jle
add
pushf
stos
daa
in
sub
and
fistpl
jg
lcall
push
stc
mov
dec
std
xchg
xchg
pushf
out
xor
or
les
pop
add
mov
sbb
cmpsb
inc
int
ljmp
mov
inc
inc
cmp
test
pop
rclb
mov
cmp
fs
add
shll
sub
aaa
fdivrl
scas
inc
imull
nop
lret
mov
clc
shl
pop
sub
rolb
fnstsw
cmc
add
fnsave
lea
sub
sahf
loopne
sbb
jae
jo
xor
jge
xchg
xor
fsub
xor
mov
mov
cmc
insb
das
sub
mov
pop
popf
icebp
lea
mov
adc
jge
rcll
dec
or
lods
in
mov
inc
mov
andb
repz
test
dec
outsb
fstps
mov
nop
cltd
cmp
fwait
shrb
fidivs
adc
test
stc
negb
push
insl
into
dec
icebp
add
mov
xchg
adc
notl
test
sbb
ret
adc
mov
jg
scas
mov
cs
xchg
adc
xchg
mov
mov
adc
sub
sti
cmp
movsb
stos
cwtl
or
push
pop
out
push
adc
sbb
adc
int3
lcall
sbb
jp
push
das
lahf
call
fs
in
in
int
fidivl
sar
das
adc
or
and
sbb
dec
insb
mov
cmp
jbe
and
lret
push
test
push
out
int
hlt
cmc
mov
mov
pushl
xorb
mov
aas
pop
gs
xor
cmc
xchg
pop
xor
mov
stos
out
daa
jp
jg
push
cmp
pop
add
in
out
xor
pusha
dec
and
mov
sti
cmp
sub
loopne
xor
mov
daa
push
ret
inc
jae
sub
xlat
mov
jnp
mov
mov
inc
pop
ja
lods
ja
push
sub
add
mov
jbe
ds
test
and
lret
jbe
loop
xor
scas
bound
fbstp
and
sbb
xchg
cmpsb
cwtl
rcll
in
test
nopl
lret
lods
mov
adc
sub
pop
pusha
fcmovnu
cmp
mov
inc
xchg
pushf
pop
testl
jbe
retw
mov
ljmp
loopne
or
rorl
imul
outsb
mov
cmp
pushf
ret
aad
mov
cmp
dec
xchg
xchg
or
pop
mov
cld
sub
push
je
xchg
aaa
mov
repnz
sbb
aas
or
jae
mov
icebp
fldl
cwtl
dec
xor
xchg
int
mov
and
add
repnz
inc
jecxz
adcl
cld
or
xchg
and
jb
scas
cld
fists
ror
pushf
and
loope,pt
stos
inc
sarb
das
ret
and
jmp
ljmp
inc
and
into
push
in
out
jno,pt
lea
adc
inc
push
push
test
mov
imul
stos
mov
fcomps
notb
push
jns
incl
dec
shl
into
imul
jnp
sbb
fmull
dec
push
cli
adc
push
adc
cmp
sbb
dec
mov
adc
and
inc
out
jbe
mov
jne
test
and
and
push
popf
aad
push
cmp
pop
mov
push
inc
fnstsw
sub
fimuls
mov
add
push
sbb
inc
cmp
mov
pop
scas
aaa
bound
movsl
imul
imulb
sbb
and
or
aam
adc
cmp
repz
cmp
shrl
inc
or
out
out
cmp
arpl
aam
adc
loopne
imul
jno
pop
pop
mov
ret
and
cmpsb
inc
cltd
xchg
daa
pop
mov
pop
cmp
das
mov
mov
jno
xchg
dec
cmc
dec
mov
xchg
repz
aam
enter
sbb
test
cmp
iret
xchg
outsl
out
jb
jge
pop
pusha
ror
mov
pop
add
jae
stos
fmul
add
stos
pop
data16
lods
pusha
push
sub
decl
adc
notb
jnp
cmp
testl
xchg
cmpsb
mulb
icebp
lea
sub
leave
pop
insb
xchg
push
jl
and
lret
andl
sub
push
jne
clc
adc
fwait
in
sti
sub
lea
loope
jne
xlat
scas
mov
sub
xchg
add
jnp
aam
pushf
pop
pop
inc
pop
jbe
or
push
stos
repz
je
jbe
pop
jge
out
mov
iret
jle
add
dec
push
enter
or
mov
push
jns
or
ds
mov
jns
in
in
mov
mov
shll
test
sbb
loop
mov
push
scas
out
sub
leave
mov
popf
fsubs
ror
scas
fwait
scas
mov
jle
inc
push
addr16
or
les
test
cmp
nop
inc
or
addr16
jg
pop
fs
mov
lahf
loope
mov
fsubrp
fisubrl
out
cmp
out
add
cwtl
sub
cmp
in
dec
fldenv
fcomps
cmpsb
push
mov
sbb
mov
sbbb
aam
pop
scas
out
mov
movsb
push
adc
adc
aas
xchg
xchg
sub
clc
jbe
mov
mov
cmpsb
mov
pop
fcomi
movsl
stc
insb
add
and
add
inc
iret
aad
inc
in
push
add
xchg
sar
js
cmp
inc
addl
mov
jae
cmp
xor
cmpsb
in
in
jb
dec
es
mov
fisttps
fwait
mov
loop
sbb
sub
xchg
jo
xchg
push
stc
xchg
aas
rorl
shll
sti
add
push
pop
or
inc
and
jge
divl
out
xchg
cmp
test
insb
push
jecxz
std
in
mov
std
pop
jae
scas
ja
jb
xor
cli
xlat
inc
or
inc
into
or
push
stos
jmp
enter
pop
movsb
and
add
das
das
mov
and
pop
dec
testb
shll
push
adc
cmpsb
push
sub
jmp
sbb
imul
xor
push
add
mov
dec
sub
les
adc
mov
and
dec
xchg
lret
aam
sub
test
lret
jecxz
mov
mov
ja
in
mov
je
jne
pusha
sbbb
iret
xchg
xchg
xor
dec
loope
mov
push
das
xor
cltd
pop
movsb
sbb
out
cmpsl
clc
shld
leave
faddl
mov
aad
xor
icebp
add
and
inc
pop
inc
in
subl
aam
cmp
pop
and
and
pop
rcrl
pushf
dec
ljmp
movsb
xor
mov
mov
xchg
leavew
xor
jns
sbb
in
int3
stc
adc
xchg
xor
pop
clc
push
cwtl
jo
bound
mov
shrl
ret
jmp
xchg
mov
xchg
mov
int
jo
sbb
push
jne
xor
mov
fcompl
lods
out
lcall
add
mov
fldl
pop
mov
sbb
xrelease
xor
xchg
sbb
jb
jbe
push
aaa
jecxz
test
out
dec
push
ret
add
cmp
adcb
repnz
mov
inc
mov
xor
cmp
movsl
cmp
ret
aas
iret
hlt
fsubrl
enter
je
cmpsb
insb
mov
mov
adc
mov
adc
stos
cmpb
push
ror
xchg
or
mov
stc
cli
sub
and
push
pop
movsb
or
cmp
enter
sub
ret
scas
mov
sub
xor
xchg
and
shrl
imul
outsb
aad
push
repnz
xor
test
mov
adc
rclb
ljmp
les
les
jecxz
stos
adc
mov
pusha
mov
lods
rcrb
das
push
aad
cmp
mov
cmp
mov
jns
ret
ret
jnp
sbb
enter
sbb
ficompl
call
sahf
mov
fbld
cmp
cmp
lret
cmp
lea
push
iret
or
popa
pop
add
sub
mov
out
repz
jnp
test
sub
xchg
jle
dec
sub
int3
sub
mov
loope
rcrb
ret
popa
mov
push
fcmovne
sbb
mov
push
push
jl
xchg
aas
and
sti
add
jnp
push
push
mov
jl
addr16
mov
push
dec
fistpll
mov
dec
adc
xlat
fisttpll
subl
mov
xchg
dec
mov
sti
and
xor
ficomps
in
mov
pusha
add
pop
inc
mov
aad
mov
xrelease
fistps
and
inc
pop
dec
aas
lahf
adc
leave
xchg
arpl
negl
adcb
lahf
inc
inc
mov
sbb
call
fiadds
jecxz
sub
das
jp
or
sub
rclb
jl
pop
and
inc
das
fists
dec
xor
int3
mov
and
or
stos
outsb
mov
xchg
adc
sub
sbb
lds
xchg
sbb
jo
cmp
mov
mov
cmp
cmp
das
sub
mov
jmp
xchg
sub
inc
addl
std
in
cltd
arpl
daa
or
movsl
xor
mov
out
push
adc
loope
outsl
jnp
sbb
mov
or
lds
mov
lds
xor
jl
adc
jecxz
sbb
mov
or
mov
ljmp
dec
pop
loopne
mov
rcl
mov
add
and
xor
push
dec
push
imul
inc
lods
adc
in
push
lret
je
in
bound
mov
lods
jae
fdivrs
add
iret
xchg
fcoms
or
cmpsb
adc
addl
gs
or
jbe
arpl
sbb
notb
cltd
and
sub
mov
sbb
and
push
inc
cmp
cwtl
rcll
and
mov
push
lcall
pop
leave
cmpsb
mov
pop
cmp
js
and
push
orl
jge
aaa
xor
mov
cmp
jmp
in
aas
pop
mov
pop
popa
or
pop
pop
xor
jne
inc
jp
cwtl
test
das
shrb
push
mov
js
lock
sarl
cmp
jno
inc
lret
icebp
dec
push
mov
or
and
mov
je
rcrl
insb
pop
test
cli
les
mov
orl
and
aad
add
fidivrs
push
test
push
xchg
int
sub
pop
fcoms
notb
sbb
mov
cmpsl
aam
outsb
cmp
dec
fmul
shll
ss
mov
pushf
out
cmp
lods
clc
movsb
repz
jge
out
cltd
popf
ss
push
xchg
movsb
mov
hlt
in
cld
jp
pop
mov
incl
pop
or
xchg
jae
jne
popa
orb
sbb
mov
sbbb
shl
lret
xor
add
repz
test
scas
mov
xor
cmp
pop
lret
inc
dec
push
inc
stos
cwtl
xchg
movl
ret
cmc
xchg
fcmovu
push
jno
cli
or
cmp
outsl
pop
fsub
or
int3
and
scas
shl
mov
dec
jo
sbb
mov
inc
leave
xchg
leave
pop
jle
ss
out
push
cwtl
or
mov
pop
les
movsl
sar
xor
dec
cmpsb
mov
adc
mov
rcrl
push
cmp
xchg
jnp
mov
lret
sub
mov
outsb
mov
inc
mov
sbb
repnz
and
cmp
lock
movsb
outsl
aam
icebp
cmp
clc
cmp
xor
inc
enter
pop
js
push
test
test
or
inc
jb
mov
data16
loope
dec
cmp
add
pop
and
aaa
sahf
mov
sub
jb
cmpl
into
pop
mov
jno
dec
subb
jnp
addr16
test
leave
sbbl
test
les
imul
cmp
add
mov
push
subb
rcrl
sbb
sub
jge
lods
mov
dec
stos
jmp
lds
dec
fldt
loopne
cmp
push
lods
aaa
lea
aam
sbb
sbb
stos
popf
fwait
leave
sub
ja
js
sub
adc
or
icebp
ret
and
out
and
fwait
xchg
jb
and
cmc
jnp
mov
jb
movsl
or
ret
fcoml
cmpsl
cltd
in
or
mov
sub
ja
scas
pop
sbb
cmpsb
sub
in
mov
xor
jle
or
xlat
jle
sbb
mov
inc
push
pop
faddl
repnz
jge
and
js
test
xlat
out
cmpsb
ljmp
gs
cmp
hlt
cwtl
push
pop
or
cwtl
shll
mov
cmc
sti
sub
test
pop
push
and
in
stos
imul
enter
and
or
mov
insb
movsl
test
stc
aas
push
xor
aas
jp
and
sbb
in
cmp
inc
mov
stos
ficoml
movsb
popa
mov
outsl
cmpsb
imul
lds
rcl
call
jp
mov
aaa
clc
imul
das
cmpsb
pop
or
ljmp
mov
cmp
sahf
adc
mov
cli
inc
aad
and
dec
inc
cli
or
fwait
xchg
mov
dec
mov
jle
jne
push
fsubs
cmpsb
call
sbb
cmp
stc
inc
and
sub
aaa
lahf
and
or
push
repnz
mov
in
or
lahf
cmpsb
ljmp
dec
testb
les
hlt
inc
pop
sub
mov
mov
mov
aad
jp
negb
sub
cwtl
inc
stc
jnp
or
shlb
shrb
push
dec
cltd
enter
dec
mov
xchg
mov
xchg
mov
push
and
mov
fadd
int
fwait
gs
leave
shr
xchg
fwait
sbb
lods
push
dec
xchg
and
mov
into
sbb
mov
push
adc
subl
sub
rclb
xor
roll
pop
mov
notl
mov
add
add
fs
push
sahf
xchg
and
push
push
pop
shrb
dec
scas
sbb
and
andb
or
loopne
sub
in
mov
mov
out
sub
push
nop
add
imul
cmp
mov
test
pop
dec
or
or
push
or
shlb
fs
xor
adc
xor
aam
sti
mov
pop
data16
inc
scas
std
test
add
mov
rcrl
mov
dec
in
and
jae
mov
addr16
cmp
xchg
cmp
idiv
mov
aad
mov
cmpsl
cmc
inc
rorb
jg
sbb
jge
cs
clc
fidivs
mov
push
ret
aam
js
adc
fdivl
je
pop
xor
or
arpl
push
sub
ds
pop
adc
push
call
xchg
pop
data16
mov
xor
ja
dec
and
pop
sbb
xchg
out
imull
add
es
mov
sub
sub
inc
mov
js
cwtl
pop
pop
sub
lahf
mov
in
jecxz
or
mov
inc
in
pop
xchg
push
cld
adcb
xchg
push
gs
insb
fbstp
push
inc
popf
std
jp
inc
cltd
mov
cmp
cli
daa
rorb
scas
xchg
sbb
cld
add
pop
outsb
adc
push
enter
xor
jns
jg
sbb
push
inc
mov
mov
and
fisttpll
xor
push
sub
push
cmp
cmp
pop
mov
out
dec
decl
inc
jp
mov
sub
lea
dec
pop
lahf
dec
ds
je
adc
dec
dec
repz
pusha
loope
lea
sub
aad
mov
cmp
inc
add
in
out
addr16
int
cltd
lahf
int
xchg
cmpsl
push
mov
mov
sti
and
xor
jb
cmc
mov
mov
adc
adc
mov
ret
addr16
jbe
test
movsl
mov
xchg
cmp
jle
cmc
dec
jne
jnp
cmp
or
enter
xor
cmp
inc
aad
or
xlat
and
lret
insl
pop
push
gs
xchg
mov
jle
xchg
stos
sub
test
loope
inc
fcoms
addr16
jecxz
shrb
loop
loop
inc
adc
adc
lock
add
inc
pop
inc
test
sub
push
ret
insl
mov
into
mov
pop
loop
stc
mov
sub
fwait
jl
fmulp
addr16
and
add
scas
push
cld
xchg
in
and
ljmp
aam
mov
icebp
les
aas
idiv
out
cmp
push
inc
outsb
mov
ret
xcrypt-ctr
cmpsl
or
or
mov
pop
sbb
sub
or
push
sub
mov
inc
dec
sti
or
inc
mov
push
jne
mov
gs
cmc
and
sub
into
arpl
inc
ss
cwtl
pop
pop
imul
mov
out
adc
lret
fsubs
out
lret
mov
lret
cld
in
aaa
and
sbb
xor
xor
and
jo
pusha
and
or
enter
sub
lea
neg
shl
jge
loop
add
hlt
ja
imul
ljmp
cmc
imul
xor
sbb
mov
in
sqrtps
xlat
dec
cmp
loopne
push
cmp
jb
push
sbb
lret
xchg
pop
or
in
pusha
cmovs
aam
mov
insb
test
les
cltd
rcl
les
and
ret
lea
int3
add
pop
test
sub
imul
jg
inc
sahf
imul
mov
mov
inc
roll
sub
dec
cmc
and
jle
inc
mov
xchg
imul
cwtl
call
lock
lock
cli
stos
out
mov
pop
adc
fnstsw
push
jp
in
in
mov
arpl
dec
clc
dec
and
pop
mov
or
popa
ret
aad
pop
stos
lods
aad
enter
sub
jmp
insl
lahf
cmc
jg
push
int
and
rcrb
and
orl
lcall
iret
mov
ljmp
fwait
sahf
xor
loop
cli
movsb
sbb
and
pusha
inc
test
xchg
pop
lret
or
lcall
popa
sbb
and
sbb
adc
pop
test
mov
dec
fst
rolb
adc
aad
lcall
inc
push
lcall
dec
sub
mov
testb
mov
pop
push
mov
pusha
xchg
push
fwait
push
jo
lret
fsts
inc
aam
cli
lods
cmp
test
push
pop
ror
je
dec
inc
scas
inc
out
mov
test
xchg
mov
jp
jg
add
bound
scas
loop
fwait
repz
orl
push
js
jne
mov
xor
int
in
sub
outsb
push
xchg
pop
push
inc
push
gs
popa
insb
stos
xchg
stos
push
aam
mov
repnz
pusha
inc
cmp
lds
popf
cmpsb
repnz
inc
imul
mov
sub
cwtl
xchg
add
mov
fiaddl
push
mov
bound
out
jg
loope
test
push
cmp
enter
inc
cmpl
call
dec
cmpl
dec
or
scas
ljmp
jmp
mov
sub
mov
in
xchg
ds
pop
imul
pop
jns
and
push
pop
xor
push
dec
aad
mov
mov
add
lcall
add
sbb
gs
mov
add
cmp
sub
jl
sub
dec
in
inc
outsb
push
bound
mov
jl
bound
mov
rcrb
jno
aaa
test
push
stos
sub
dec
adc
mov
loop
aaa
lds
addb
addr16
jge
lea
mul
lahf
lds
sub
aaa
jge
insl
pop
pop
pop
dec
idivl
lea
fldl
sub
aaa
jge
insl
pop
pop
pop
dec
idivl
lea
fldl
lods
inc
popf
inc
or
pop
pop
push
dec
repz
ret
lea
fnsave
sub
aaa
jge
insl
pop
pop
xchg
mov
cli
shlb
push
mov
aas
sti
xor
sbb
sbbl
outsb
decl
dec
movswl
scas
das
lahf
aas
dec
lcall
outsl
fistpll
lahf
aas
lahf
das
scas
push
mov
iret
sbb
outsl
out
pop
decl
mov
daa
push
incl
ja
jg
xchg
aas
mov
popa
iret
cmp
cmp
jo
das
int3
dec
ljmp
mov
shll
inc
out
neg
sbb
mov
loopne
push
cmc
addl
out
pop
ljmp
rclb
inc
sbb
out
push
lock
jecxz
fmull
dec
mov
mov
cs
sbb
lock
andb
out
sar
orl
bt
sbb
mov
pop
out
nop
xlat
jle
add
sahf
rcrb
outsl
fisttps
pop
jg
push
mov
je
add
mov
cmp
sub
jg
aaa
out
scas
out
mov
mov
pop
fs
push
ja
jo
adc
shrb
lock
aas
out
pop
pushl
das
lahf
aas
pop
decl
outsl
fbld
xchg
aas
xchg
mov
cmpsb
jg
outsl
cmc
pop
decl
arpl
dec
into
cmp
cmp
dec
repz
iret
or
sub
jle
inc
xlat
dec
in
and
loope
pop
cli
pop
scas
js
pop
iret
sbb
push
jae
inc
cli
push
testl
fistpll
aas
lahf
das
scas
pop
mov
outsl
out
pop
decl
mov
aas
dec
lcall
outsl
fistpll
aas
lahf
das
scas
pop
mov
outsl
out
pop
decl
mov
dec
dec
and
cmp
sub
insl
mov
add
in
inc
rclb
mov
adc
mov
lahf
scas
jne
cmp
pop
ds
pop
arpl
imul
insb
out
shl
lea
jl
daa
imul
mov
push
adc
ret
push
ja
repnz
enter
and
jmp
adc
cmpsb
out
insl
adc
sbb
inc
orb
jp
fs
add
sub
xor
nop
int
mov
add
mov
xchg
adc
xor
mov
imul
cmp
ficoms
and
ret
mov
mov
fdivs
push
les
imul
add
jp
test
in
jg
sbb
xor
adc
and
movsl
mov
dec
aam
adc
xor
icebp
or
imul
fld
add
mov
test
lret
add
cmp
mov
mov
sahf
scas
push
fdivrp
scas
ja
fs
add
mov
and
pop
mov
pop
popf
insb
xor
ss
cwtl
cmp
fs
adc
mov
push
out
int
loope
cmpsl
xchg
mov
leave
mov
ss
mov
out
outsl
sbb
push
movsl
adc
in
inc
fdivrs
loop
push
jle
shl
inc
adc
xchg
in
push
fdivrs
test
popa
call
pop
mov
add
popa
std
adc
mov
repz
mov
mov
push
push
lea
jg
push
or
or
test
adc
mov
pop
es
jae
xchg
sub
sbbb
jns
in
fs
mov
inc
fs
cmova
cmp
sub
aad
pop
dec
jno
pop
les
xor
xchg
jge
clc
cmp
inc
push
lcall
pushf
pushf
push
vpandn
cmc
xor
sub
shll
filds
jo
hlt
aaa
or
adcb
out
sub
je
cmp
xor
bnd
adc
push
cmp
and
or
pop
dec
cld
outsl
cmpsb
sub
fs
fcom
mov
mov
fwait
test
out
aad
push
arpl
js
xor
sub
int
add
pushf
xlat
repz
dec
jecxz
lret
adc
imul
push
cmp
loop
fsub
cmp
cmc
pop
add
subb
cmc
clc
jle
add
lock
push
and
int3
and
or
xchg
mov
xlat
cmp
cwtl
inc
insl
add
sub
xor
jl
incl
mov
push
dec
cmp
cmp
push
jnp
xchg
inc
rcll
aaa
xchg
xlat
idivb
cmp
mov
rcrl
cmp
jnp
stc
popa
std
out
lods
pop
orb
and
movsl
or
add
popa
xor
js
adc
cmc
fnstcw
ss
and
mov
inc
sarb
push
arpl
jg
xchg
movsb
adc
pop
push
sbbl
add
xchg
xchg
or
mov
pushf
divl
fs
lret
xor
sti
loop
mov
pusha
xor
popf
mov
jne
and
pop
mov
ret
push
mov
sti
call
pop
and
push
mov
fbld
jmp
ret
mov
in
sahf
ret
add
and
push
xchg
in
jp
movsl
popf
nop
test
fld
nop
call
out
aas
push
lahf
add
insl
mov
push
loop
dec
ss
leave
das
outsl
sarb
mov
cmp
movsb
sbb
sbb
inc
loope
and
addl
insb
pushf
lret
pop
xchg
inc
xlat
test
pop
popf
push
aaa
cld
jnp
scas
push
dec
jae
dec
bound
pop
dec
gs
xor
add
jle
push
cmp
jmp
sub
lods
xchg
stc
jmp
mov
out
xlat
xchg
leave
xchg
sbb
adc
shll
jl
test
scas
mov
push
sbb
mov
sub
mov
xorl
inc
sbb
popa
push
push
dec
sub
jge
lock
jns
sahf
inc
shll
dec
loope
cltd
gs
push
push
mov
repnz
test
pusha
inc
or
lahf
lret
jl
push
divw
sbb
mov
fnstsw
mov
arpl
mov
stos
out
scas
sbb
cmp
push
mov
jns
mov
adc
xchg
jae
pop
rcll
cmpsb
dec
sbb
lretw
les
and
filds
or
neg
jecxz
fldt
jmp
nop
decb
xchg
jns
jl
stc
adc
mov
shlb
dec
and
sub
rclb
adc
xchg
pop
pushf
fisttpll
int3
mov
out
aad
sti
jbe
xlat
scas
repnz
cmpsl
cmp
mov
lods
mov
push
sbb
push
clc
lret
adc
pop
or
insb
adc
sub
in
pop
add
jns
out
subb
in
xor
pop
fs
aas
jl
and
mov
push
adc
and
fimuls
movsb
movb
shlb
int
sbb
and
les
push
in
fcoms
fmul
loop
std
test
pop
lcall
mov
dec
lret
inc
add
push
aad
mov
test
fcomps
push
mov
mov
pop
outsl
addr16
push
scas
dec
xorb
cld
mov
xchg
xchg
out
stos
pop
pop
add
lock
in
call
adc
add
mov
add
and
in
push
cwtl
jmp
mov
add
fstl
loope
into
pushf
jb
mov
fs
xor
int3
iret
inc
je
scas
insb
cmovb
imul
xchg
setle
into
jecxz
push
scas
pop
cmp
fisttps
sbb
mov
pop
in
xor
pop
jg
jnp
imul
pop
shll
jg
mov
sbb
pop
aaa
out
cmpsb
adc
cltd
aam
int
mov
dec
mov
push
ljmp
call
std
insl
sbb
outsl
lret
in
ss
or
clc
mov
sbb
dec
movsb
mov
scas
imul
pop
xchg
data16
mov
incl
adc
icebp
test
je
popa
das
push
xlat
das
rorb
sub
lret
lea
inc
out
xchg
push
int3
jg
lret
cld
mov
jnp
pop
clc
xchg
loop
and
cmpsl
jmp
sbb
mov
push
and
scas
sbb
xchg
mov
mov
push
neg
repz
pop
fimull
push
wbinvd
pop
test
fucomp
js
jns
leave
rolb
xchg
jno
das
cmp
cs
dec
je
inc
aas
xchg
xor
outsl
cltd
add
iret
pop
add
push
add
repnz
inc
lock
inc
ljmp
jg
push
fwait
sub
notb
test
cmp
pusha
push
int
cmp
push
mov
jp
lahf
cmp
and
loopne
mov
push
xor
addr16
int
xchg
int
xchg
test
lea
and
shll
clc
sbb
add
popf
mov
pop
cmp
sub
sbb
insb
test
mov
cmpl
arpl
aaa
fdivrs
mov
lahf
push
aas
in
lret
push
xor
or
mov
pop
aam
stc
out
out
filds
pusha
enter
push
fs
sbb
lea
xorb
std
adc
pop
aaa
movsb
or
push
mov
xchg
mov
mov
loopnew,pt
outsl
mov
ds
push
mov
dec
int
lods
mov
ret
das
xchg
mov
popa
testb
push
pop
sub
mov
sbb
test
and
mov
jecxz
sub
negl
adc
div
mov
jns
je
std
aaa
adc
out
aaa
lret
xchg
lock
aad
push
inc
mov
andl
rclb
fistpll
fstpl
jmp
test
jb
jge
ret
scas
ljmp
jo
fisttpll
xchg
dec
scas
add
mov
sub
out
jno
push
adc
arpl
fdivrs
cwtl
push
hlt
sub
add
out
bound
fst
fdivl
lret
pushl
inc
push
lods
loope
fimull
bound
xor
bound
sahf
sub
int
sub
inc
dec
adc
xor
mov
jg
mov
xlat
clc
mov
jnp
mov
cltd
push
push
mov
jno
out
sub
scas
push
out
mov
jl
ret
rcrb
nop
repnz
jns
xor
push
pop
xchg
pop
pop
iret
insb
xor
xchg
or
add
xchg
jge
xchg
ja
push
and
test
pop
pop
mov
ss
inc
addr16
loope
push
cmpsl
adc
sbb
push
jl
push
or
call
fcmovnb
imul
lret
aad
cmpsl
adc
adc
pop
jmp
int3
das
pushf
pop
pop
add
sub
jmp
outsb
cmpsb
or
jnp
adc
lret
push
adc
xor
mov
xchg
arpl
jmp
mov
movsb
dec
pop
and
js
cld
cmc
dec
or
nop
sarb
vaddss
dec
mov
adc
lods
jmp
sti
int3
in
or
je
fwait
sub
aaa
ljmp
outsl
scas
or
enter
ja
dec
jo
pop
fcoms
call
or
bound
and
sub
mov
and
jno
jmp
inc
jmp
leave
jge
push
push
mov
out
ljmp
adc
push
cmpsl
mov
jns
stc
sbb
cmp
or
inc
jge
cmp
mov
in
jl
or
xor
fwait
scas
push
mov
xchg
cli
rcrb
aad
idivl
imul
sub
push
imull
addb
fisttps
inc
rcll
jmp
dec
inc
rorb
test
inc
dec
in
repz
lahf
sub
testb
pop
mov
sti
cmp
clc
mov
or
push
std
adc
inc
test
jne
add
or
sub
fistl
push
aas
xor
ret
adc
sbb
ret
push
sbbb
inc
roll
dec
lds
std
test
cmpsl
imul
add
fbld
xorb
sub
fadds
or
cwtl
mov
sbb
stos
sub
mov
sbb
call
jmp
ljmp
lea
mov
test
les
xor
and
or
bound
scas
ret
dec
push
movsb
cld
cmpsb
mov
lcall
notl
xchg
icebp
cmp
pusha
or
cltd
or
das
push
xchg
ljmp
jmp
mov
push
jmp
stc
fnsave
push
popl
imul
sbb
mov
hlt
mov
sub
pop
repnz
or
out
aas
sbb
inc
fidivrs
mov
sub
mov
ds
inc
popf
push
pushf
xchg
aaa
imul
add
and
cmc
pop
ror
nop
push
dec
mov
sti
mov
pop
dec
test
popa
jg
pop
popa
daa
xlat
movups
dec
xor
sarl
dec
mov
icebp
adc
shl
mov
or
scas
jbe
mov
adc
lods
mov
subl
nop
lea
lea
inc
xor
fwait
mov
loop
mov
or
push
sbb
push
mov
cmpsl
in
into
inc
dec
or
mov
ja
loop
dec
aam
mov
xor
push
mov
sub
lods
imul
imul
jo
aaa
outsl
pop
cwtl
test
mov
test
insb
pop
test
popa
cltd
cmpsb
jecxz
add
add
jecxz
shrb
iret
jmp
pop
push
shrb
jmp
mul
insl
pop
xor
inc
cmpsb
je
cmc
cmpsl
sub
jae
shll
imul
test
or
stos
leave
jne
inc
ja
add
mov
lds
pop
or
ljmp
aaa
or
mov
pop
pop
jne
cmpsb
dec
repnz
outsb
jg
inc
lock
jmp
xchg
pop
lcall
pusha
xchg
clc
insl
outsl
popa
pushf
jae
xchg
andb
sbb
test
and
xchg
sub
in
and
fnstcw
loope
ret
pop
and
inc
inc
mov
xlat
add
mov
xchg
jle
dec
test
mov
mov
imul
mov
xchg
xor
imul
mov
push
push
nop
adc
imul
jecxz
jne
and
push
or
jl
pop
fildll
mov
leave
fidivrl
fstpl
pop
mov
call
inc
xor
stos
or
outsb
jg
jg
pop
outsb
xor
mov
mov
in
orl
push
cmp
data16
mov
aam
or
fidivs
xor
lock
jp
jecxz
jge
add
mov
lret
adc
sbb
xchg
dec
repnz
mov
jmp
idivb
test
lea
push
cmp
das
jmp
imul
jg
add
outsb
push
sbb
push
mov
dec
leave
arpl
mov
cmpsb
roll
push
inc
xchg
pop
or
ret
mov
xchg
dec
adc
sbb
inc
sarl
les
jl
mov
mov
cmc
fmuls
xor
out
pop
ret
jns
cmpsl
sti
ds
and
cmp
cltd
cmp
jge
leave
mov
push
jmp
scas
dec
and
cmp
push
and
lcall
push
arpl
jae
push
test
sub
mov
arpl
cmp
loopne
aam
cmpsl
jne
mov
adc
pop
mov
out
movsb
mov
ret
int3
and
icebp
jns
int3
pusha
xor
mov
es
push
and
add
inc
inc
sti
pop
addr16
or
jg
lds
pop
lock
and
ret
xor
aam
stc
insl
push
cmp
mov
and
mov
mov
push
pop
dec
dec
subb
test
sbb
inc
int3
ds
push
push
xor
fisubrs
push
mov
sbb
sbb
adc
sarb
dec
xchg
push
dec
push
dec
int3
push
lcall
sub
jne
int
mov
mov
stos
loope
and
jge
push
daa
dec
mov
imul
jno
add
clc
cmp
icebp
adc
mov
fwait
scas
test
inc
fmul
pop
mov
cmp
xchg
sub
dec
ja
ret
dec
sar
test
push
mov
mov
movsl
out
jp
push
jne
jle
rcll
in
jb
sub
xchg
mov
lret
je
popf
enter
imul
dec
aam
mov
mov
or
pop
fistpl
mov
rorl
and
and
ror
std
mov
pop
shlb
addl
cld
dec
cmc
out
adc
movl
in
nop
lea
push
sbb
inc
into
or
sahf
rol
imul
inc
push
jnp
test
into
cld
pop
jl
dec
jmp
cltd
push
sbb
int3
les
add
ret
sub
or
rcr
push
jl
push
mov
rclb
push
aam
push
pop
cmpsb
in
mov
daa
sarl
lret
loopne
lods
bound
mov
cmp
pavgw
int
jae
adc
in
pop
sar
lcall
jle
sub
dec
sarb
and
movsb
adc
push
jp
outsl
push
or
jns
pop
push
cltd
pop
popf
mov
je
xor
test
stc
bound
aas
pop
mov
cmc
lods
ss
mov
and
mov
xor
or
adc
clc
or
fwait
decl
adc
divb
cmpsl
sbb
fnstsw
sub
sub
lahf
fs
inc
loope
dec
xchg
pop
inc
test
mov
and
xor
push
push
inc
das
fwait
jmp
sub
fwait
xchg
dec
inc
sbb
mov
adc
jle
push
pushf
test
loop
mov
setg
jp
cs
repz
or
in
or
addr16
or
icebp
mov
aad
push
int3
pop
and
sbb
xchg
xadd
pop
testb
push
ss
sbb
cmp
pop
sub
adc
jge
sub
xchg
cmpsb
mov
daa
xchg
mov
inc
lods
xor
pop
mov
jbe
push
dec
int3
iret
jo
stc
mov
mov
jne
stc
sbb
xchg
enter
les
popa
push
mov
cmp
stc
xor
mov
addr16
mov
dec
insb
push
das
push
adc
mov
mov
sti
add
adc
mov
sbb
into
hlt
push
sub
sbb
testb
sub
jp
lods
xor
pop
shl
fisubs
mov
test
pop
mov
jecxz
mov
lods
push
dec
roll
jb
sub
popa
sbb
pop
mov
imul
pop
inc
insb
in
in
jl
mov
or
xchg
loope
sub
xor
aaa
xchg
fsub
push
adc
enter
inc
jnp
or
insl
inc
sbb
inc
sub
repnz
mull
dec
push
sbb
mov
mov
std
roll
dec
mov
lret
repnz
fldl
xchg
inc
imul
ss
in
in
cmc
mov
and
sar
les
dec
adc
iret
mov
iret
dec
cli
cmp
cmp
dec
outsl
ret
idiv
scas
js
push
adc
add
fwait
cmp
aas
rcl
sub
lods
push
push
push
jmp
jp
popa
push
adc
insl
aad
pop
cwtl
out
and
xchg
mov
adc
jge
and
scas
fwait
jnp
push
sbb
shrb
dec
movsl
xchg
mov
pop
pop
xchg
jno
inc
mov
mov
or
cmp
pop
xchg
fwait
movsb
stos
xchg
in
sti
cmp
lret
pop
loop
xchg
mov
jb
mov
enter
lret
js
loopne
mov
loop
pop
inc
decl
sub
push
mov
in
cmp
fwait
daa
xor
ret
cmp
scas
xor
repnz
mov
lahf
out
negb
push
std
jge
dec
add
test
das
adc
repnz
jle
fadd
push
mov
pop
cmp
notb
or
iret
cmp
clc
gs
lret
fcoms
gs
dec
lea
add
xlat
es
xlat
out
cmp
jne
mov
cmpsb
or
dec
rolb
lret
dec
fstps
je
test
gs
aas
push
dec
daa
jecxz
out
mov
push
mov
movsl
xor
cmpsl
out
cwtl
out
mov
inc
fidivs
and
shll
xlat
call
jg
ret
lods
cmp
rcl
xchg
iret
sbb
pop
lea
sbb
adc
xchg
dec
gs
push
pop
std
push
aad
xor
mov
push
out
xor
nop
adc
cltd
cmpsl
xchg
dec
cmpb
cmp
and
stc
pop
add
sbbb
mov
int3
enter
andl
jg
fcmovnbe
adc
push
cmc
cld
repnz
or
aad
mov
xchg
push
mov
cmp
push
cwtl
inc
and
mov
cltd
add
test
inc
mov
xor
stos
jno
outsl
lahf
xor
xadd
insl
js
adc
in
movsb
mov
mov
and
pop
popf
ljmp
sub
push
addr16
inc
or
sbb
or
fstpl
dec
xchg
push
cmp
inc
push
test
data16
add
and
test
data16
lock
ja
inc
mov
mov
mov
repz
popa
xlat
sti
mov
push
cmp
sbb
call
pop
xchg
jp
add
icebp
int
lahf
mov
cmp
add
clc
daa
jle
data16
popa
fidivs
mov
add
xlat
outsl
addb
push
add
inc
movl
inc
mov
aad
and
cmp
mov
push
push
jbe
out
mov
jle
ficomps
mov
ja,pn
push
cmp
add
dec
dec
or
dec
subb
mov
inc
dec
sub
mov
cmp
lods
xchg
test
mov
or
shll
xor
fistpll
and
imul
rcl
mov
lret
popf
dec
imul
in
or
sbb
into
mov
adc
mov
aaa
outsb
pop
aas
fs
mov
sbb
enter
ljmp
dec
lcall
outsl
fistpll
aas
lahf
das
scas
pop
mov
outsl
out
pop
decl
mov
aas
dec
lcall
outsl
fistpll
aas
lahf
das
scas
pop
mov
outsl
out
pop
decl
mov
aas
dec
lcall
outsl
fistpll
aas
lahf
das
scas
pop
mov
outsl
out
pop
std
dec
movswl
dec
lcall
out
pshufw
test
notl
adc
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmc
lret
adc
aam
mov
test
cmp
inc
test
cmc
es
aad
lds
adc
cmpsb
jmp
jbe
test
xchg
inc
test
es
xchg
push
lds
adc
inc
mov
pop
mov
inc
ds
pop
mov
pop
lds
pusha
scas
push
mov
cmpsb
out
dec
dec
lods
popf
xor
lret
lds
es
sbb
inc
mov
sbb
adc
sar
mov
es
aam
dec
or
and
es
sahf
repz
and
data16
inc
or
aad
in
adc
mov
dec
jne
or
ja
data16
shlb
sbb
cmp
jmp
testb
dec
push
and
out
mov
push
add
out
les
cmp
cmc
jnp
xlat
add
aas
dec
xor
imul
mov
mov
aad
inc
lods
xor
rsqrtps
gs
and
mov
cld
arpl
test
jle
sub
and
push
stos
lahf
addr16
and
flds
enter
xchg
jbe
xor
in
inc
lcall
mov
je
and
sbb
push
arpl
shrl
adc
xor
push
lock
movsl
dec
test
lcall
in
cmpsb
gs
push
xchg
mov
movsl
push
xchg
inc
test
cmc
es
aad
out
adc
cmpsb
gs
push
xchg
mov
movsl
push
xchg
inc
test
cmc
es
aad
inc
repnz
push
sub
dec
inc
clc
or
pop
jne
int
rep
das
stos
xchg
ret
inc
mov
pop
xchg
aaa
popa
stc
sti
and
jb
aam
push
ds
mov
lahf
filds
ds
push
sub
jo
je
popf
fcoml
outsb
addr16
js
out
cmp
sahf
dec
hlt
lret
data16
mov
pop
stc
cs
inc
jo
test
push
pop
dec
jge
mov
push
icebp
and
data16
ret
sub
sbb
pop
cmp
cld
sti
shr
dec
orl
add
add
lds
popf
addr16
adc
mov
sbb
out
inc
cs
mov
xchg
pop
lret
fmuls
xchg
jno
sbb
xchg
pop
aad
xor
mull
imul
lea
sub
cmpsb
bound
xor
dec
xor
jae
aad
inc
or
imul
add
cli
cltd
push
je
xor
push
mov
mov
aad
gs
in
inc
in
dec
dec
pop
fs
xor
jmp
in
jecxz
jecxz
mov
push
cltd
leave
sbb
stc
stos
dec
into
or
outsl
es
outsb
int
aas
lods
scas
shll
mov
shrl
xchg
pop
push
and
mov
iret
mov
shlb
fiaddl
leave
inc
repnz
mov
into
jg
sbb
mov
setne
add
lahf
fdivl
out
jge
pusha
or
or
push
inc
push
xchg
outsb
inc
adc
clc
sub
mov
adc
jmp
mov
adcb
dec
add
jbe
inc
stos
or
daa
and
repnz
nopl
ret
call
sbbb
xchg
inc
xor
xor
mov
addr16
sbb
add
and
cmp
jg
cmp
jns
push
add
je
je
mov
sbb
push
sub
movsb
push
outsl
popf
lcall
push
add
loop
and
mov
mov
pop
stos
clc
stos
push
sbb
in
xor
xchg
subl
out
push
loop
cmp
lods
mov
add
and
sub
xchg
mov
cmp
jne
inc
sbb
jne
std
mov
push
dec
mov
int3
ds
pop
aam
stos
add
cmp
and
cld
mov
cmp
pop
mov
xlat
dec
push
aaa
add
jae
lret
pop
mov
cmp
aaa
sub
aas
cmc
mov
xor
imul
jmp
mov
nop
cwtl
jle
int
mov
std
sub
jbe
cmpsl
sbb
dec
xchg
and
xor
pop
dec
lcall
in
xor
xor
fdivl
pop
lcall
add
xchg
mov
lret
mov
or
mov
push
cli
aam
mov
dec
add
sbb
jb
pop
inc
lret
and
or
xor
call
rclb
sub
shr
jbe
push
jmp
sbb
mov
cmp
mov
xchg
jp
lahf
jae
frstor
push
xchg
icebp
push
inc
cmp
mov
sbb
rclb
add
jae
mov
addl
imul
sbb
or
mov
in
andl
mull
dec
addr16
push
xchg
sbb
xchg
aad
cmp
sbb
lods
test
sub
lods
mov
les
push
mov
sarl
sbb
mov
xchg
aad
test
cmp
ret
jmp
xor
lods
aaa
test
js
and
scas
xchg
and
das
cmp
pushf
les
push
mov
mov
cs
sahf
in
mov
pop
dec
ljmp
imul
ret
adc
sub
mov
js
mov
push
and
imul
hlt
push
or
and
movsl
cmc
in
sub
pop
incb
push
pop
jae
sahf
in
stc
jp
mov
jmp
push
testl
cmp
ja
lret
mov
mov
ja
add
pop
xchg
sub
push
cltd
xchg
rclb
mov
sub
lods
mov
insb
fdivl
inc
sti
arpl
fisttps
push
je
scas
adc
imull
jg
adc
mov
dec
sub
mov
sub
loop
fcmove
inc
add
or
push
xchg
ret
mov
fsubrs
pop
push
orl
in
aad
mov
cmpsl
popf
adc
jle
dec
add
in
push
push
sbb
insb
lret
xchg
inc
pop
inc
int3
pop
jnp
mov
insb
sbb
outsb
push
enter
add
dec
mov
das
push
out
cmp
lock
xorb
dec
xchg
in
inc
sti
xor
pop
loopne
gs
or
adc
test
call
stc
inc
lods
ds
cwtl
stos
dec
idivl
push
out
inc
mov
mov
dec
pop
xchg
loopne
mov
addb
push
xchg
jg
in
aam
andl
cmp
icebp
mov
push
les
into
xchg
in
and
jecxz
push
adc
pop
cmp
popa
movsb
outsl
mov
filds
mov
pop
jo
mov
jnp
jle
out
mov
xorb
loopne
aaa
cmpsl
add
les
inc
push
sub
pop
mov
pop
das
lods
insb
sub
mov
sbb
les
mov
cli
jns
stc
sbb
xor
push
data16
stos
xor
jmp
scas
pop
mov
mov
inc
int
and
aad
in
ja
push
popa
xchg
and
and
add
pushf
xchg
adc
fadd
roll
sub
cmpsb
sub
adc
adc
fs
jecxz
lock
sub
arpl
test
inc
imul
lock
daa
cmp
mov
add
outsb
mov
lcall
je
xchg
xor
adc
clc
mov
scas
popf
mov
call
mov
aam
sahf
test
jnp
mov
mov
adc
out
jg
stos
in
inc
pusha
jge
xor
sbbb
add
sub
lcall
mov
js
jmp
pop
jl
rorb
cmp
xor
outsb
push
aad
or
mulb
add
jne
insb
je
sar
and
mov
or
enter
insl
mov
sbb
mov
xorb
pushl
pop
pop
jo
ds
push
sbb
jb
inc
jnp
pop
sbb
mov
push
xchg
stc
ret
adc
imul
in
decl
xor
hlt
call
pusha
add
mov
sub
jg
or
orb
inc
fcmovb
loope
fldt
stc
push
push
and
jb
pop
out
fs
adc
sub
mov
mov
stc
ljmp
xchg
add
subb
and
inc
add
xor
jbe
add
adc
and
loope
imul
push
sub
and
icebp
pop
lcall
int3
loop
lcall
cwtl
adc
mov
arpl
lods
cmp
and
mov
rorl
cmp
pop
sbb
sti
cmpsl
add
scas
leave
xchg
in
cmp
hlt
loopne
xchg
xor
xor
daa
jno
and
stc
xchg
add
sbb
scas
jo
mov
mov
in
ret
adc
inc
fwait
xchg
jbe
jmp
cmp
push
mov
inc
lods
xchg
pop
sub
jecxz
push
push
test
cwtl
dec
popa
in
outsb
inc
mov
cmpsl
xchg
fisttps
add
inc
pop
mov
loopne
mov
in
dec
sbb
push
pop
or
shl
xchg
int3
repz
fnstcw
add
or
imul
std
sti
fnstsw
xchg
dec
scas
add
inc
movsb
lcall
dec
mov
sub
sbb
xor
loope
iret
sarl
cwtl
dec
popf
sub
cmp
dec
sub
fbld
shll
xchg
sub
cmp
xor
jbe
push
push
mov
push
or
xchg
or
test
jo
jo
sbb
jmp
cmpl
mov
inc
lret
mov
xchg
addb
or
xchg
sub
cmp
and
repz
push
mov
dec
pop
test
inc
imul
out
mov
cmp
mov
in
mov
xor
sbb
pop
stos
pop
cld
movsb
popf
call
in
cmc
std
js
int3
aam
stos
xchg
push
popf
mov
mov
aaa
push
or
das
jae
lcall
insl
sub
leave
xor
xor
out
scas
inc
cmp
dec
je
pop
push
cli
fxch
or
jbe
cmp
xor
sub
lods
cmp
fiaddl
xchg
pusha
push
js
stos
mov
mov
bound
sbb
fbstp
ja
pusha
inc
sbb
and
or
movsb
mov
push
stos
out
das
in
imul
or
insb
repz
jecxz
cltd
mov
jl
adc
sub
cs
pusha
and
mov
aaa
pusha
out
mov
sbbb
push
or
andb
cmp
xor
add
push
sub
add
xchg
popf
sbb
xor
lea
inc
data16
or
inc
pop
sbb
mov
jns
shlb
shll
and
psllq
out
fdivr
nop
pop
ret
nop
inc
cwtl
arpl
add
pop
movsb
dec
sahf
stos
jo
push
pop
lods
test
mov
add
rorb
mov
mov
push
inc
mov
mov
mov
push
in
inc
or
dec
push
pop
inc
mov
xchg
mov
xchg
popa
je
sub
in
sbb
dec
aaa
mov
mov
and
mov
pop
call
loopne
fld
lods
sub
in
data16
adc
sbb
push
lahf
imul
test
pusha
stos
lret
jo
mov
loopne
fxch
sti
popf
sbb
pop
add
push
in
jmp
push
test
mov
mov
cwtl
mov
push
cmc
xor
ds
popf
hlt
inc
xchg
mov
aad
inc
les
jecxz
push
add
dec
xchg
icebp
push
outsb
sub
call
jb
movsb
out
xor
lock
lds
xchg
mov
cmp
daa
insl
jb
lods
ljmp
movsl
mov
lret
inc
sub
mov
or
jecxz
and
inc
jmp
jne
pop
fdivl
enter
gs
faddl
popa
cmp
pusha
lret
sahf
fidivs
or
push
xlat
lds
inc
or
jo
xchg
dec
mov
stos
adc
adc
subb
ret
pop
mov
dec
les
pop
rorb
iret
add
pushf
jbe
lods
xchg
jno
in
pop
xor
mov
mov
mov
dec
mov
mov
lcall
adc
arpl
test
scas
loop
mulps
jmp
das
xlat
dec
mov
dec
inc
or
sbb
or
sbb
addr16
dec
aad
mov
mov
xor
insl
clc
insb
add
add
cld
ljmp
in
sbb
lock
fxch
idivb
test
mov
inc
dec
movsl
jle
dec
dec
xchg
nop
xor
cmp
cmp
test
cmp
push
push
xor
sub
inc
cli
xor
rclb
mov
sub
jecxz
add
sbb
xlat
sub
out
daa
lods
xchg
lahf
mov
dec
psrlq
xor
mov
fs
adc
lea
cmp
xchg
sbb
clc
jae
mov
js
inc
fst
aad
or
adc
add
clc
ss
push
mov
ret
fwait
pop
mov
pop
lea
inc
adc
mov
xor
sub
xor
cmc
loopne
mov
aad
hlt
jle
mov
fsubrs
shld
out
repz
pop
lock
nop
push
lahf
adc
push
mov
push
inc
test
ljmp
out
add
mov
and
std
pop
sarb
sbb
dec
jno
fwait
sbbl
popa
pop
and
or
sbbb
roll
add
fcomp
js
jmp
push
sbb
push
stos
addr16
loop
mov
into
push
adc
ss
or
pop
xor
in
or
out
mov
mov
xchg
fistpl
dec
mov
aad
fildl
add
setl
pop
adc
mov
mov
jecxz
xor
inc
or
xchg
insl
push
clc
mov
mov
xchg
xor
adc
rcr
bound
fsts
fisttpll
and
and
pop
and
mov
notl
jecxz
add
xor
aam
add
sub
pop
cmp
js
in
mov
stc
mov
lcall
xchg
or
sbb
sub
call
es
sahf
ffreep
stc
ror
imul
call
pop
xor
jns
sarl
lahf
dec
xchg
push
movsl
xlat
mov
gs
andl
testl
cli
sbb
adc
jp
icebp
fstl
xchg
enter
inc
stc
jl
and
push
loope
dec
pop
jp
cwtl
push
jnp
mov
outsb
arpl
push
adc
push
lea
and
pop
inc
std
shr
xchg
jp
dec
xchg
pop
lret
dec
in
mov
add
lods
inc
cld
test
lea
adc
stc
leave
mov
push
aaa
push
insl
aaa
mov
ds
lret
popa
dec
cli
adc
jecxz
or
or
stos
dec
mov
int3
scas
stos
dec
dec
mov
cwtl
test
ja
dec
or
mov
pusha
popa
sti
cmp
or
push
out
sbb
add
cltd
movsb
xchg
lods
inc
pusha
jl
aam
ss
not
es
sarb
cltd
or
push
xor
lret
ret
dec
mov
jecxz
jo
xor
adc
xchg
mov
jb
add
fistpll
mov
and
mov
push
push
xchg
enter
sub
add
xchg
scas
adc
jb
stos
sti
and
push
mov
or
pop
ret
inc
popf
dec
les
iret
xchg
push
in
and
inc
inc
mov
push
mov
je
xchg
les
movsb
mov
or
sub
into
cmp
inc
sub
dec
and
subb
cmp
mov
or
mov
ljmp
mov
xor
dec
sti
scas
or
shll
xor
in
aas
mov
les
jl
lea
xor
cmp
mov
sub
movsb
lods
insl
fidivrl
std
xchg
sub
jne
stos
sub
out
in
ret
ret
cmp
sub
sub
or
push
jge
jl
dec
jg
jecxz
sbb
dec
jp
repnz
hlt
xor
xor
sub
insb
lahf
imul
or
js
movsb
or
cmp
jge
aad
clc
dec
mov
jl
fcoms
inc
or
xor
mov
enter
ret
push
push
adc
sarb
dec
call
xor
mov
pop
adc
into
dec
xchg
cwtl
sub
push
addr16
pop
mov
and
icebp
iret
push
dec
jbe
pop
pop
jp
push
addb
in
enter
pushf
mov
aad
imul
and
add
mov
lods
mov
std
jge
stos
mov
inc
mov
out
dec
outsb
sbb
shll
adc
loop
jge
mov
jb
or
jnp
pop
shr
mov
lods
cmp
push
out
sbbb
adc
das
repz
xchg
in
pop
jbe
adc
pop
jle
pop
lret
cmp
pop
and
dec
add
rorb
pop
movsb
fidivl
js
xor
or
adc
stos
sub
mov
out
pop
scas
mov
mov
push
aam
xchg
cmp
fldenv
push
ror
ja
aaa
imul
fld
xor
xor
cmpsl
movsl
mov
sbb
xchg
and
jns
lret
push
mov
fldl
clc
adc
je
fmuls
xchg
mov
je
adc
cmpsl
cld
pop
dec
sub
in
jmp
push
popf
pop
pop
outsl
cmp
add
lret
cmpsb
cmp
pop
mov
add
orb
or
les
aaa
repnz
inc
daa
adcb
loop
stos
in
fwait
mov
ret
cwtl
and
pop
xor
js
lahf
push
jnp
scas
dec
jg
add
out
pop
loope
dec
loopne
push
and
xor
or
cs
mov
std
push
push
lret
idivb
mov
cmp
cmpsl
push
mov
iret
add
pusha
add
jo
mov
stos
mov
dec
push
mov
inc
xchg
cmp
jo
jne
push
dec
sub
in
and
jae
ret
jno
fs
loopne
adc
add
mov
shr
fistpll
andl
mov
aam
stos
shrb
into
dec
test
push
sub
sub
jmp
mov
out
adc
push
pop
adc
and
jns
and
cmp
leave
push
lcall
loopne
lea
and
lret
adc
cmp
movsl
repz
adc
add
mov
xchg
ss
pop
lret
and
add
mov
add
jne
or
rcll
jg
jbe
xchg
adc
pop
repnz
hlt
push
fbstp
pushf
push
cld
jmp
mov
and
jg
es
in
mov
mov
in
adc
incb
mov
mov
sbb
sbb
add
or
scas
jb
mov
pusha
ret
adc
cmpsl
mov
lahf
jg
outsb
xor
pop
push
cmp
fwait
jne
mov
arpl
jmp
cld
xor
pop
pop
cmp
loop
subb
fisubrl
or
rcrl
mov
mov
cmpsl
hlt
fwait
pop
xor
in
scas
jge
mov
pusha
adc
adc
rcrl
ret
decb
inc
ljmp
inc
and
xor
pop
inc
out
mov
jb
dec
sar
add
dec
in
loop
arpl
pavgw
loop
int
push
or
cli
xchg
insb
xor
add
aad
aam
test
pop
mov
test
xor
inc
cwtl
mov
mov
rolb
mov
jns
loop
cmp
adc
cwtl
arpl
pop
loop
jp
mov
gs
inc
or
xchg
and
mov
sub
ss
mov
mov
imul
jecxz
sbb
imul
dec
das
mov
loope
in
sahf
idivl
inc
or
add
xchg
icebp
dec
push
rclb
xchg
xor
cmpsl
repnz
leave
xor
sbb
fsubrs
dec
add
xor
imul
insl
mov
dec
fwait
xchg
cli
mov
fimull
jmp
je
mov
cs
or
inc
jl
inc
adc
shlb
and
je
popa
adc
in
jno
push
out
and
jle
fsubs
xchg
sti
pushf
in
daa
xor
cli
clc
fldenv
xor
cld
jp
pop
xor
sbb
mov
or
xor
fistpll
lret
aas
rcl
sbb
jl
push
mov
sbb
sub
mov
inc
test
icebp
dec
lods
cmp
push
jbe
repz
xchg
inc
addr16
cmp
out
outsl
test
lret
insl
cmp
xor
dec
fsubl
sub
call
flds
mov
inc
jmp
sbb
lods
mov
jno
scas
rclb
rcrl
dec
ss
adc
lock
mov
jecxz
jns
out
mov
lea
cld
mov
cmpsb
mov
js
mov
loope
fsubrp
sub
mov
pop
out
inc
add
lahf
lcall
sub
gs
jbe
adc
call
repz
gs
mov
xlat
mov
cmp
sahf
pusha
fwait
jecxz
popa
inc
hlt
cmp
into
mov
push
cmp
call
cmp
adc
jns
in
in
mov
insb
imul
cmp
adc
xchg
ret
xchg
sub
push
popa
push
xor
sub
das
sub
rcrl
jo
pop
insl
sbb
mov
sbb
stos
and
adc
adc
stos
adc
mov
repz
repz
xchg
mov
dec
ret
push
fistl
notl
ret
xchg
add
loop
pop
xor
jbe
xchg
lds
jae
mov
mov
mov
arpl
xchg
jns
add
xchg
push
xchg
mov
movsl
push
xchg
inc
test
cmc
es
aad
out
adc
cmpsb
gs
push
xchg
mov
movsl
push
xchg
inc
test
cmc
es
aad
insl
mov
movb
push
inc
inc
jbe
movsw
cmpsb
xchg
inc
test
cmc
ss
cmc
out
mov
add
jne
gs
aad
inc
jbe
cltd
paddb
scas
sbb
sub
cmp
inc
xchg
insb
xchg
push
mov
mov
lock
rolb
jbe
data16
addb
pusha
cmpsb
jo
inc
xchg
and
xor
add
push
rolb
jbe
data16
addb
pusha
cmpsb
jo
inc
xchg
and
xor
add
adc
loopne
shll
sub
sbb
sub
call
cmpsb
cmp
sub
push
mov
out
pop
mov
test
or
std
in
mov
cmp
sbb
aad
and
fisttpll
xor
rclb
mov
mov
jge
sub
push
test
divl
ss
jge
cltd
insb
adc
out
mov
add
cmpsl
push
loopne
pop
pop
testb
out
ss
setnp
mov
inc
xchg
dec
adc
and
adc
mov
es
fidivrl
repz
adcb
in
std
rcll
adc
and
clc
sub
dec
push
data16
dec
mov
dec
mov
cs
pusha
cmpsb
jo
inc
xchg
and
xor
add
adc
loopne
lock
rolb
jbe
data16
addb
fs
xor
inc
jecxz
lcall
inc
ja
and
jne
push
adc
pmullw
stc
adc
mov
aam
and
mov
je
stos
and
push
xchg
inc
mov
into
xor
fbld
cmp
xor
xor
add
adc
loopne
lock
rolb
jbe
data16
addb
pusha
cmpsb
jo
inc
xchg
and
xor
add
adc
loopne
lock
rolb
jbe
data16
addb
pusha
add
sub
push
dec
fildll
fsts
or
test
xlat
xor
sbbl
stc
fwait
jno
loopne
movsb
stos
aam
jnp
outsb
adc
pop
fstpt
dec
add
lea
push
hlt
ljmp
stos
cmp
mov
gs
hlt
jecxz
test
roll
mov
aaa
into
iret
cld
pop
push
lcall
into
mov
lret
xchg
insl
inc
psubb
cmc
xor
jle
jbe
out
sub
stc
daa
in
dec
fadds
mov
sub
in
mov
mov
cs
movsl
out
and
mov
or
seta
movsb
pop
xchg
inc
push
jl
mov
mov
xor
xor
dec
inc
iret
adc
lahf
std
pusha
jnp
cmp
adc
xlat
cmc
fmul
cmp
cli
inc
jns
lock
xor
dec
aaa
or
imul
decb
and
xchg
aad
ljmp
or
dec
shlb
sub
add
adc
mov
sti
push
mov
fwait
push
push
mov
shll
les
adc
cmp
loop
rcl
push
adc
mov
jl
inc
andl
jnp
add
arpl
sub
bound
push
das
jno
xchg
cmp
test
mov
xchg
sbb
inc
sub
sub
mov
loopne
iret
cs
sbb
xor
outsb
mov
push
inc
jae
shr
adc
xchg
push
fs
fisubrl
sbb
mov
rol
cwtl
into
mov
add
icebp
in
aaa
loope
cmp
fs
ret
sub
fstpl
push
lock
xchg
mov
in
aas
stos
jnp
fisubl
fisubrl
mov
and
or
outsb
stc
pop
jns
es
cmp
adc
pushf
dec
cld
adc
mov
ret
lahf
test
sub
lock
test
mov
fidivrs
or
mul
mov
test
inc
gs
adc
mov
aad
fdivrp
mov
sbb
lret
adc
mov
ds
add
or
les
jp
adc
dec
cmpsb
mov
flds
jmp
into
xchg
and
xor
mov
sub
mov
int3
sbb
lcall
mov
and
cmpsb
dec
push
or
and
sub
bswap
hlt
adc
cld
repz
int
inc
sbb
shl
push
repnz
in
mov
cmc
lds
and
out
popa
push
dec
add
rcr
and
mov
mov
movsb
push
push
icebp
mov
fndisi(8087
mov
sahf
shl
mov
fsubrs
out
iret
mov
outsb
and
jl
ds
inc
icebp
mov
fmull
mov
pop
and
pop
fs
inc
clc
ss
mov
cmp
push
dec
add
mov
cmc
jbe
cmp
inc
and
jmp
and
sbb
sub
movsl
cmp
iret
jns
add
scas
rclb
push
sarl
int3
sbb
in
jl
out
xchg
jae
or
test
lret
sbb
loopne
dec
mov
nop
or
and
xchg
js
cmp
cmc
xor
inc
into
ljmp
mov
push
cmpsb
lods
add
sbb
and
mov
out
in
pop
sahf
cltd
jecxz
into
int3
cmpsb
or
and
test
pushf
and
sub
rcl
mov
sbb
pop
icebp
shl
jecxz
dec
xor
or
in
cld
mov
pop
jae
dec
testb
test
les
jge
mov
mov
cmpsl
xor
dec
ljmp
subb
lock
pop
sub
mov
loope
inc
jns
pop
sub
ret
push
dec
xchg
outsl
dec
repnz
nop
lods
dec
arpl
icebp
test
loopne
jo
add
cld
sbb
out
divl
pop
in
adc
popa
out
rolb
or
lock
repnz
mov
push
cmp
and
stos
dec
outsb
aas
rcrb
in
enter
out
sub
xor
inc
mov
adc
cmp
pop
adcb
aam
aad
out
aas
mov
mov
or
fsubl
ret
and
mov
sahf
insl
pop
adc
xor
sbb
inc
push
pop
hlt
xor
sbbl
dec
xor
in
mov
or
daa
mov
add
jmp
mul
test
das
sarl
sar
xchg
inc
decb
inc
jnp
cwtl
cs
add
mov
fmul
cmp
adc
ja
and
std
adcb
bound
daa
adc
test
xchg
int
out
pop
xchg
mov
cmpsl
adc
mov
sti
sub
xchg
push
pop
or
pop
and
movsl
loop
ret
sbb
pop
ret
daa
or
or
adc
subb
jg
loop
dec
jb
movsb
and
sub
mov
jmp
aam
insl
push
add
mov
and
cmp
shll
adc
mov
pop
int3
mov
xchg
push
jp
cli
dec
cli
xchg
out
jge
out
lods
cs
jnp
stos
push
in
jno
add
pop
mov
cmpsl
test
xor
outsl
rcr
and
xchg
lock
loop
mov
push
sbb
pop
push
xor
lods
es
in
jno
cmpl
mov
idiv
int
add
sahf
jecxz
cltd
jecxz
jae
mov
scas
outsb
pusha
sub
add
pop
mov
lock
stos
sti
xor
xchg
xchg
dec
pop
in
addr16
js
jmp
add
cmp
dec
loop
fmulp
jl
jle
loop
aad
ret
cwtl
pcmpgtd
mov
sahf
mov
adc
mov
movsb
mov
mov
pop
mov
add
pushf
inc
sub
push
xor
mov
ja
pop
call
xchg
xchg
mov
dec
ret
in
in
pop
int
lods
inc
repnz
pop
xchg
cltd
pop
out
nop
test
or
cmp
pop
sbb
popf
call
adc
adc
pop
dec
xchg
aaa
pop
xchg
outsb
ret
adc
and
sub
popa
xlat
jno
fcmovu
nop
repz
mov
stos
stos
outsl
imul
xchg
outsb
dec
mov
cmp
jnp
and
mov
outsl
jae
shlb
and
loope
xchg
ret
add
mov
js
pop
pop
inc
pop
add
mov
xor
pop
xor
adc
mov
inc
xor
loop
jg
push
insb
test
cmp
dec
adc
sbb
scas
or
ds
adc
pop
cmp
add
test
pop
out
adc
clc
es
sarb
leave
or
xlat
ljmp
xchg
scas
mov
xor
insb
pop
mov
or
std
xchg
xorl
ljmp
xor
cltd
sub
mov
lret
push
push
adcl
mov
in
jae
cmp
or
ja
and
and
jmp
xor
xor
push
insb
adc
fs
pop
pop
xchg
jecxz
xor
sub
sub
call
lds
xchg
pop
mov
fistl
mov
sub
and
sbb
rcrb
aad
mov
xor
sbb
xor
clc
leave
xchg
fcompl
sbb
gs
test
cmp
fimuls
mov
imul
dec
inc
lods
sub
add
insl
adc
scas
cld
pop
iret
ljmp
aas
aad
push
ret
cmp
std
addr16
inc
add
and
test
fwait
push
jnp
imul
mov
jb
mov
scas
fbstp
push
mov
inc
mov
xchg
dec
cltd
pop
lods
loopne
repz
lods
rolb
movsb
push
cmpsb
dec
jae
mov
popa
rcll
out
pop
cmpsl
inc
xlat
sbb
mov
out
sbb
lret
bound
data16
fwait
mov
mov
dec
or
and
mov
ficoml
test
mov
imul
sub
fdivrs
push
scas
movsb
push
adcl
push
arpl
jnp
out
fs
inc
push
ja
mov
inc
xchg
mov
xor
inc
xchg
popf
mov
ret
and
pop
mov
daa
mov
pop
iret
and
scas
jle
js
dec
cmp
adc
jo
and
sbb
pop
int
dec
stc
mov
pop
fildl
xchg
xchg
inc
xchg
in
push
popa
stos
mov
add
xchg
sbb
jecxz
sarb
push
adc
mov
cmpsl
imul
inc
sbb
push
fmuls
leave
or
mov
jns
sarl
fbstp
out
leave
or
mov
pop
aad
cmp
nop
movsb
lahf
adc
pop
sbb
jmp
push
or
cwtl
mov
cmpsl
dec
repnz
cmpsl
add
lods
ja
add
adc
cmp
and
add
std
in
inc
repnz
enter
sub
cmp
jg
jecxz
iret
mov
mov
sbbl
pop
sbb
adc
lds
mov
ss
cmp
fdivrs
adc
andl
fldcw
movsl
xchg
jns
xor
cltd
xchg
push
test
rcrl
dec
and
ffree
cmp
pop
sub
sti
test
dec
jne
movsl
mov
mov
out
xchg
pop
mov
mov
jl
inc
jo
cmp
jno
rcll
in
aad
inc
iret
fldln2
sbb
shll
iret
mov
mov
inc
add
ret
push
mov
mov
push
xlat
shll
dec
loop
ja
jnp
fnstsw
fstp
out
jl
push
es
cltd
daa
imul
pop
sahf
icebp
mov
add
jle
sbb
xchg
sub
aad
push
lret
fiadds
fisttps
pop
cltd
popf
popf
imul
insb
sbb
data16
xchg
adc
sbb
or
xor
pop
notl
mov
xor
ret
cltd
push
inc
jp
pushf
pop
sub
jae
push
jae
mov
bound
popf
dec
push
shrl
cmp
ja
lods
in
push
xor
stc
mov
leave
lret
js
in
or
push
or
adc
repnz
sbb
cs
pop
outsl
outsb
dec
fldcw
jno
mov
cs
xchg
sub
xor
xlat
mov
jb
xor
cmp
mov
push
imul
daa
and
ret
pop
xor
scas
stos
add
push
xor
fst
icebp
repnz
mov
cmp
andl
movsl
jle
cmp
out
stos
pop
lods
movsl
mov
arpl
dec
jbe
ljmp
or
scas
iret
rcl
pop
pushf
mov
mov
cmpsb
push
ret
inc
std
xchg
xor
std
and
pushl
int3
lods
cmpsb
xor
sub
mov
pop
clc
addl
outsb
cmp
into
daa
push
xchg
stos
or
jb
jnp
leave
je
inc
push
and
mov
aas
jno
cmp
aam
sub
js
push
push
stc
mov
xchg
sub
lods
sar
jle
jmp
push
xor
popf
icebp
ret
xlat
xor
test
icebp
adcb
adc
stc
fists
inc
outsb
mov
jns
insl
out
jl
lea
jle,pt
mov
loop
outsb
fldenv
mov
sbb
adc
adc
mov
xor
jmp
sbb
add
mov
jg
mov
mov
das
jns
add
pop
aam
pop
push
fbstp
daa
aas
je
ljmp
popa
jge
jae
inc
mov
cld
or
cmp
xchg
or
push
hlt
aas
jae
fs
push
xchg
jb
insl
or
mov
mov
outsl
addr16
hlt
sub
addr16
mov
pop
aad
mov
mov
adc
or
xor
arpl
push
insl
mov
mov
xchg
test
test
mov
fld
sbb
xlat
es
inc
ja
fsts
xor
xchg
scas
aaa
fildll
popa
add
cld
or
rol
sub
cmp
pop
jns
outsb
or
gs
ja
jg
rcrb
adc
xor
jo
int
rcll
pop
add
repnz
shr
ljmp
mov
and
addl
nop
sbb
stc
insb
xchg
mov
scas
hlt
pusha
imul
mull
fldl
inc
and
push
call
add
jecxz
push
add
pop
sub
inc
mov
out
mov
imul
xchg
cmpsl
shrb
pusha
rcr
xlat
ret
fcmovne
mov
add
das
xchg
test
cmp
out
xchg
mov
popl
sbb
lods
iret
popa
or
lea
scas
push
push
xchg
hlt
cmp
or
mov
xor
adc
loope
add
adc
das
add
add
push
push
stc
cmp
mov
repnz
mov
jle
xchg
test
enter
xor
pop
dec
fistpll
es
push
xlat
cld
mov
sahf
push
outsl
dec
cmp
addb
sub
test
lock
xchg
mov
push
dec
pop
or
sub
fisttpl
test
sub
out
dec
cltd
out
lahf
ss
test
fsubp
add
std
cmp
stos
sub
loop
add
pop
push
add
nop
jnp
call
shr
add
aas
nop
int3
fs
push
arpl
xor
lock
arpl
jecxz
sbbl
push
sbb
shlb
daa
cli
pop
cmp
mov
imul
adc
dec
ret
xor
outsl
add
insl
fsubl
sarb
aas
inc
int3
push
pop
adc
aad
cmp
xlat
and
je
or
jbe
xor
out
aas
jb
imul
lock
and
jl
cli
ret
sbb
sbb
inc
xchg
sbb
pop
fsubrs
out
aad
in
and
aas
cmp
int3
out
and
stos
fidivl
lds
mov
hlt
in
dec
mov
repnz
mov
mov
int
inc
jge
xchg
mov
ficoml
pop
loop
mov
cmp
sahf
pushf
sub
cmp
push
rorb
mov
xlat
xchg
and
pop
insl
in
push
ds
lods
jp
xchg
outsl
mov
sub
or
hlt
imul
test
scas
dec
jmp
add
add
les
mov
aaa
sub
sbb
dec
es
aam
sbb
das
fcomps
cltd
lret
loop
rcll
cmpsl
sbb
insb
ret
in
mov
sbb
add
notl
out
and
sbb
mov
pop
cmp
mov
mov
mov
mov
mov
mov
dec
addb
xor
icebp
ja
pushf
dec
testl
in
lret
repz
push
stc
cmpsb
jle
fdivrs
das
lcall
adc
xchg
mov
out
dec
fcomps
fwait
in
cltd
fnstcw
fimull
mov
jmp
psllw
jne
sub
aaa
pop
and
popf
add
test
imul
ja
jl
sbb
das
xchg
icebp
test
add
inc
and
jns
or
or
adc
push
mov
xchg
test
sbb
xchg
dec
mov
jge
sbb
dec
lods
cmp
xor
push
xor
rcl
shl
push
jns
pop
test
add
mov
mov
or
lret
sbb
sbb
dec
mov
inc
sub
pop
push
cmc
les
jne
cld
lret
ret
lea
add
fcompl
fwait
or
cmp
ja
pop
jmp
int3
xchg
push
ljmp
pop
lods
orb
xchg
jb
pop
jno
jecxz
and
cwtl
insl
cmpsl
ja
pop
cmp
pop
incb
cmpsb
movsl
dec
fcomp
pushf
mov
or
mov
push
test
lret
mov
stc
jnp
fsubrp
fdivl
cmp
jecxz
scas
mov
aad
aaa
mov
pop
scas
fcmovne
popf
inc
rcr
test
xchg
inc
cmc
xchg
pop
les
pop
adc
pop
mov
shlb
ror
in
cli
jmp
push
adc
aaa
lods
dec
sub
sahf
cmp
addl
andb
fdivs
adc
push
ret
sbb
mov
loop
cld
icebp
or
sub
inc
pusha
sarl
pop
test
inc
pushf
jg
inc
mov
mov
leave
int
ds
in
cmc
push
or
sahf
jo
mov
scas
fcomi
cwtl
inc
fldl
sbb
sbb
shl
stos
imull
inc
fistpl
pop
mov
pop
mov
xchg
dec
ret
sbbl
xchg
pusha
pushf
cltd
push
pop
or
mov
sete
add
xor
mov
stos
inc
adc
adc
stc
call
inc
fwait
and
sbb
loop
cmp
lods
aam
inc
push
pop
std
xchg
inc
test
mov
jnp
xor
pop
js
lcall
pop
shll
cmp
ret
ffree
cmp
pusha
pusha
fcmovnbe
and
and
cltd
dec
add
insl
test
cwtl
or
cmp
lcall
mov
popa
aam
sub
jle
test
cmp
mov
jmp
pop
dec
pop
clc
inc
add
cmc
pushl
mov
sbb
sub
cltd
push
shrl
pop
sub
sbb
hlt
ljmp
sub
fistpll
jae
iret
add
mov
fisttps
lret
lret
testb
fs
push
shr
jl
or
xchg
pop
and
in
sbb
rcrl
adc
lods
pop
icebp
xchg
pop
cmc
mov
fisttpl
jle
mov
test
mov
fstpl
lea
xchg
push
xchg
and
jl
aad
aas
repz
fs
mov
fsts
mov
pop
jle
inc
push
inc
fsub
out
jl
jbe
mov
jne
popa
pop
xchg
mov
mov
lods
jp
cmpsl
imul
mov
or
rcrl
sbbb
outsb
sbb
sbb
sub
shrl
scas
and
int
popa
push
out
xor
jbe
lock
pop
icebp
ffreep
mov
xor
and
adc
inc
push
aaa
adc
mov
cli
aam
int
je
push
in
negb
jmp
lahf
xor
lods
pop
or
lret
test
sbb
xor
in
inc
add
test
sub
and
bound
push
jg
adc
sub
daa
movsb
add
cltd
mov
mov
mov
inc
call
pop
cmc
mov
cmp
aad
repz
push
sahf
loopne
outsb
jge
mov
mov
stos
add
and
inc
lock
sub
scas
xchg
int3
cld
adcl
push
push
jecxz
fldenv
cmpsl
movsb
jl,pt
ja
mov
push
jmp
iret
cmp
add
pop
mov
cmp
repnz
lcall
and
inc
adcb
in
and
jnp
test
in
loope
clc
enter
hlt
jno
pop
fisttps
push
cmpsl
dec
sbb
push
mov
enter
ja
les
mov
sub
xor
xorl
test
pop
mov
ret
lea
mov
push
loop
int3
cwtl
adc
pusha
push
das
int
push
les
sbb
inc
in
mov
and
inc
jle
or
leave
sub
repz
pop
out
aas
inc
rorb
mov
pop
dec
mov
rorl
mov
xchg
jne
push
jb
push
repnz
std
cmp
inc
mov
pop
loopne
adc
lea
xor
sub
or
adc
adc
mov
or
dec
xchg
push
lcall
movb
sub
in
add
mov
or
jnp
adc
pop
dec
cmpl
mov
movsl
jp
out
outsl
xor
shlb
xchg
fs
mov
repz
mov
ucomiss
mov
add
sub
pop
imul
mov
pushf
fiadds
sbb
imul
and
fs
cmp
push
sub
cmc
sub
test
lods
or
sub
pop
dec
mov
nop
push
test
sbbb
mov
cmc
movsl
mov
into
aad
movsl
scas
pop
xchg
lock
leave
je
arpl
es
inc
xlat
adc
add
mov
mov
sbb
jl
popf
mov
repz
xor
jns
fstl
push
xchg
jae
ss
xchg
shrb
jo
inc
xchg
and
xor
add
adc
loopne
lock
rolb
jbe
data16
addb
pusha
cmpsb
jo
inc
xchg
and
xor
add
adc
loopne
lock
rolb
jbe
data16
addb
pusha
cmpsb
jo
inc
xchg
and
xor
add
adc
loopne
lock
rolb
jbe
data16
addb
pusha
cmpsb
jo
inc
xchg
and
xor
add
adc
loopne
pop
mov
sub
dec
test
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
ja
jge
repnz
rclb
xor
push
add
add
push
or
add
add
stos
add
dec
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
and
and
add
add
jb
mov
pop
add
add
or
mov
push
add
inc
add
addb
add
dec
add
js
pop
add
pop
add
add
add
add
add
add
add
jnp
add
aas
add
add
add
add
add
add
add
movsb
add
add
add
add
add
add
add
dec
add
add
add
add
add
iret
add
push
add
xchg
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
add
dec
add
add
jmp
add
push
or
add
test
add
add
add
sbb
add
add
add
add
sub
mov
loopne
pop
add
add
add
add
add
add
pop
add
or
add
add
add
add
add
add
add
add
add
add
add
lahf
add
add
je
sub
add
add
add
add
add
add
add
add
lcall
add
add
add
or
iret
add
add
add
add
add
add
add
add
add
add
scas
or
add
inc
add
add
dec
add
dec
add
ja
lods
add
add
add
loope
inc
add
add
add
add
aaa
add
xchg
add
pop
add
add
add
add
add
add
mov
fwait
add
add
jle
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
add
iret
add
add
add
scas
add
add
add
imul
add
adc
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
ret
add
cmp
mov
lret
add
and
add
inc
add
add
add
add
push
add
add
sbb
sbb
add
add
add
jl
mov
add
jae
sub
sub
jbe
ja
sti
push
cmpsl
add
add
movsb
add
add
add
stos
add
push
add
and
jae
js
aaa
add
cmp
mov
in
pop
add
add
add
add
add
add
lea
in
clc
add
add
add
add
add
sbb
add
add
in
jl
xor
cmpsl
add
add
add
add
add
add
push
xchg
xor
enter
aaa
dec
cmp
shrl
pop
jge
cltd
scas
pusha
jb
inc
cmp
les
or
jae
ret
jg
cmova
sbb
or
jecxz
jb
push
adc
gs
push
fists
rorb
aas
mov
sbb
int3
in
and
lds
and
lods
test
mov
scas
addr16
mov
dec
es
xor
int3
or
mov
jnp
mov
inc
mov
lcall
test
cmpsl
adc
ret
icebp
mov
pop
sbb
dec
sub
in
jnp
flds
stos
mov
cmp
mov
insl
inc
leave
hlt
and
or
lock
jmp
xlat
pusha
fsts
ret
and
xchg
aad
jge
insl
dec
xchg
push
pop
int
sub
cs
cwtl
cmp
xor
xchg
arpl
adc
in
insl
in
add
push
lahf
cwtl
pusha
sub
shr
jle
push
pop
xor
jl
jb
sbb
mov
es
mov
mov
mov
lods
lret
dec
jno
dec
dec
daa
mov
cmpsb
mov
out
fs
xchg
push
sbb
pop
out
call
push
mov
rorb
push
inc
ror
sbb
mov
xchg
movsl
mov
stc
xchg
out
stos
lcall
shlb
xchg
lahf
jmp
cmp
sbb
int
mov
mov
sysret
rorb
shr
loope
pop
out
xor
cmc
xchg
dec
andl
jbe
cmpsb
inc
outsb
mov
outsb
popf
in
xor
jmp
xchg
pop
lcall
testb
sub
pushf
mov
sahf
add
add
jge
mov
pop
dec
xchg
pop
mov
sbb
call
pop
pop
sbb
xchg
pop
xchg
cs
and
add
pop
enter
repz
icebp
inc
or
xor
in
jo
movsl
add
jne
in
pop
call
xchg
outsl
pop
in
hlt
cli
ljmp
and
outsl
jns
mov
sub
add
cmpsl
movsl
mov
mov
pop
or
cwtl
cld
in
repnz
sahf
sbb
xorl
jbe
push
pop
push
dec
iret
xchg
les
lret
push
add
cmpsb
je
lret
sub
movsb
loopne
int3
loope
int
inc
scas
xchg
test
ret
cmc
mov
into
or
mov
pop
add
subl
popf
sbbb
mov
mov
push
mov
cmp
mov
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
