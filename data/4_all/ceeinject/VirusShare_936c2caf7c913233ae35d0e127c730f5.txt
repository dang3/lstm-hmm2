call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
popf
ret
xlat
shl
jecxz
repz
cmp
incb
jbe
push
gs
arpl
add
daa
and
xor
ret
xlat
rcl
jecxz
xrelease
mov
dec
dec
push
push
add
jae
jno
adc
and
xor
fcmove
lret
out
jmp
lcall
inc
inc
pop
jo
sbb
push
sub
push
push
pop
pop
mov
xlat
mov
dec
imul
dec
pop
mov
addr16
jo
sti
jmp
das
fdivrl
dec
mov
out
inc
repz
dec
mov
mov
sarl
mov
leave
or
out
inc
inc
test
aaa
or
stos
lea
lock
popf
sub
sbb
mov
dec
xlat
mov
jae
aas
lods
addr16
sub
cmpb
xchg
addr16
and
inc
sub
sbb
xchg
inc
push
out
stos
cmpsl
fisttpl
test
jb
ja
lods
add
add
cmp
cmpsl
test
jp
cmp
sbb
inc
mov
test
cwtl
pushf
jbe
sub
repz
and
xor
out
loopne
xchg
orl
pop
inc
dec
dec
jg
outsb
push
sbb
or
cmp
xor
xchg
xchg
jecxz
cli
repnz
iret
fcmovbe
xor
push
adc
data16
inc
dec
push
pop
stos
xlat
mov
repz
lret
xlat
repnz
add
jae
adc
aaa
inc
scas
ret
in
addb
xchg
cmpsl
mov
push
push
arpl
pop
add
adc
and
xor
ret
xlat
shl
jecxz
xrelease
mov
inc
inc
push
push
arpl
pop
add
adc
and
xor
ret
adc
mov
or
lods
imul
inc
and
repnz
shrb
outsb
lcall
cmp
cli
aas
or
test
mov
cltd
mov
pop
pop
mov
cmp
mov
shll
cmpsb
and
mov
pop
lret
iret
inc
inc
lea
mov
pop
cmp
bound
icebp
mov
mov
cmp
test
js
daa
subb
jo
sub
arpl
sbb
xchg
xor
mov
pop
mov
loop
adc
jl
out
scas
push
pop
mov
movsb
popf
jns
and
aam
cwtl
movsl
sub
or
pop
clc
ljmp
icebp
or
notb
push
jae
jge
mov
bound
aam
dec
jne
jns
inc
jl
and
and
hlt
pusha
sub
popl
mov
pop
add
stos
icebp
cltd
in
je
fcmovbe
mov
jnp
pop
pop
inc
fcmovu
jge
or
sbb
or
enter
jp
dec
dec
adc
inc
and
cmp
xor
sbb
mov
push
lods
mov
mov
dec
mov
fisttpl
cmp
xchg
fs
daa
cmp
xchg
loope
loope
loopne
xchg
lods
loop
lcall
jle
mov
nop
jg
add
xor
or
test
xchg
icebp
inc
scas
fwait
sti
aam
or
aaa
loope
pop
testb
scas
imul
imul
fadds
cli
mov
daa
or
mov
fidivrl
stos
add
dec
inc
pushf
jno
pop
mov
mov
outsb
test
test
xchg
in
into
push
pop
outsb
and
leave
sti
jp
ds
test
inc
roll
cmp
pop
mov
push
loopne
dec
pusha
sub
and
aad
lret
adc
sub
or
pop
or
sahf
pop
xchg
repnz
fs
ds
push
enter
hlt
jp
cmp
mov
in
adc
fs
mov
jp
movsb
ss
inc
mov
push
cmp
fwait
mov
xor
aas
pop
out
sbb
mov
xchg
mov
xor
movsb
popf
xor
jmp
adc
lods
xchg
ret
scas
loopne
xchg
push
aad
dec
sti
push
jg
inc
inc
popa
jmp
scas
jbe
pop
arpl
jae
lds
push
out
mov
push
test
fwait
adc
aaa
mov
xchg
lret
xchg
jne
fcomps
mov
in
loopne
push
cs
jge
in
mov
in
add
das
mov
and
outsb
mov
push
xchg
mov
in
cmp
inc
cmpsl
adc
add
xchg
mov
xor
xor
or
cmc
aas
imul
sti
icebp
cmpsb
addr16
push
cld
hlt
push
mov
push
or
fistps
jp
aaa
lahf
imull
sub
shl
xor
xor
repz
xcrypt-ecb
cmpsl
mov
cmp
cmp
sbb
mov
add
add
lahf
cmp
aaa
jne
adc
or
xchg
jmp
rcrb
push
dec
jl
je
sub
dec
push
xor
lahf
daa
das
lret
xchg
mov
mov
nop
xor
sbb
mov
mov
cmp
repnz
xchg
test
push
gs
push
ret
int
lret
cmpb
and
call
fs
incb
mov
cwtl
xchg
insb
sbb
int3
push
popa
sbb
add
nop
pop
lea
test
sub
cmpsl
xchg
mov
add
outsl
in
mov
insl
jo
lret
and
pop
outsl
neg
inc
fstl
add
dec
xor
loopne
fadds
movsl
es
push
mov
dec
pop
loop
and
dec
mov
pop
push
outsb
mov
sbb
xor
sbb
adc
movsb
out
xrelease
lret
adc
mov
nop
dec
rcrb
movsb
dec
inc
mov
clc
jmp
divl
stos
imul
daa
test
mov
add
pop
and
lock
adcb
jb
sbb
jbe
in
jae
les
sbb
rcll
lods
in
sbb
int
out
push
ljmp
mov
scas
mov
push
or
mov
shufps
jns
out
out
mov
lds
mov
inc
iret
add
jo
mov
push
pusha
out
adc
je
sub
ljmp
sub
push
mov
shlb
sbb
ja
loopne
gs
jle
xor
shl
arpl
mov
cmp
movsb
shll
mov
mov
mov
or
loope
mov
mov
sub
cld
dec
imull
cmc
jl
dec
fmul
mov
push
inc
mov
stos
les
add
stos
inc
sbb
xor
insl
cmc
insb
sbb
or
dec
push
jno
push
js
mov
lods
and
popf
push
push
or
pop
imul
adc
rorl
cmp
sub
xor
dec
stos
lea
lds
icebp
movsl
or
jae
sbb
inc
add
dec
adc
mov
pop
add
lahf
cmp
sub
test
inc
push
xchg
or
xchg
xor
daa
pop
scas
xchg
das
in
outsb
out
cmp
out
inc
js
or
adc
sub
xor
mov
scas
xor
or
shll
sbb
stc
lds
pop
inc
pusha
xchg
jle
or
mov
sub
sbb
add
in
jmp
rcll
sub
mov
xor
outsb
sub
stos
mov
cmp
fxch
pop
out
mov
mov
fisubl
hlt
xor
jle
scas
pop
je
bound
sbb
fadds
in
neg
pop
mov
or
xchg
outsb
in
data16
xchg
lret
dec
adc
cmp
mov
leave
lock
ror
js
cmp
adc
stos
ljmp
mov
movsb
add
jl
movsl
ds
jl
jl
or
jle
loope
pop
jnp
lods
sbb
hlt
test
pop
sub
mov
or
imul
cs
adc
repz
xor
fsubrl
std
inc
inc
movsl
pop
out
rorl
sbb
xchg
adc
mov
les
out
inc
stos
mov
cmpsb
sbb
jae
jg
or
fistl
push
repnz
inc
sub
jmp
inc
pop
xchg
sub
push
lret
icebp
push
lock
dec
std
test
mov
int3
iret
xor
pop
xchg
popa
je
lret
or
adc
mov
test
sub
sub
mov
push
add
ss
jmp
in
sub
mov
jns
cmp
mov
lret
je
mov
dec
jmp
dec
cmc
sbb
adc
sub
imul
and
and
jmp
xor
hlt
mov
stos
push
mov
and
push
sti
adc
mov
fcmovnbe
and
lahf
jae
cmp
push
xchg
repz
mov
cmp
push
mov
jp
sub
hlt
lret
mov
rclb
icebp
push
jl
icebp
cmpsl
dec
flds
lods
mov
mov
out
push
mov
icebp
shrl
and
jns
jns
arpl
out
addb
imul
xchg
in
xor
sub
adcl
aad
loope
sahf
pop
loope
movsl
push
inc
adcb
add
jmp
inc
ficompl
sbb
gs
ret
push
and
and
jmp
insb
or
std
fcmovu
repnz
popf
xor
sbb
push
call
and
sbb
popf
xchg
xchg
insl
sbb
xchg
pop
mov
rcr
mov
loope
frndint
fdivrl
mov
outsl
pusha
push
mov
sti
xor
jo
fsubs
adc
cmp
cmp
mov
push
cmpsb
pushf
xor
pop
repz
fnstcw
stc
xor
imul
pop
adc
aas
inc
xor
rorl
xor
mov
and
lcall
dec
jo
stos
jmp
mov
mov
xlat
pushf
mov
cmpsl
cmc
mov
jge
jecxz
fsubs
add
push
xlat
add
mov
test
inc
cmc
mov
stos
shlb
jg
out
imul
lds
fldcw
push
inc
daa
lods
mov
loope
negb
popa
sub
ja
out
sub
mov
pop
mov
mov
ss
scas
push
mov
mov
dec
sbb
rclb
or
pushf
push
test
int3
in
pop
lock
daa
mov
xchg
inc
mov
cli
out
lret
and
push
jb
cwtl
xor
sbb
outsb
mov
inc
sbb
pop
enter
pop
jg
aaa
pushf
out
lahf
jae
rcrl
sar
mov
idivb
push
in
negb
xchg
stos
jecxz
sub
jp
adc
adc
push
ret
add
xchg
aaa
out
dec
popa
scas
jnp
movsb
push
ret
xchg
out
or
shr
leave
bswap
mov
jl
pop
push
add
mov
mov
pop
jle
loop
push
addr16
or
inc
sbb
jl
insl
ret
sarb
mov
pop
and
inc
xchg
das
jns
push
es
xor
cmp
fldcw
lcall
lea
andl
push
inc
adc
or
xor
lds
sar
jg
sub
fnsave
imul
jl
sub
cli
or
push
adc
imul
lahf
xchg
cltd
and
mov
sub
lret
jo
fdivrl
movsl
popa
mov
je
and
fucomip
mov
std
jnp
insl
ss
pusha
imul
ds
int
lret
inc
pop
push
jae
xchg
ds
inc
pop
adc
out
pop
int3
xchg
xor
and
pop
ljmp
lcall
xchg
push
sbb
iret
fsubrl
ja
inc
or
jo
or
icebp
clc
or
stos
mov
xchg
dec
mov
cwtl
mov
lret
test
mov
or
xchg
mov
aam
out
sahf
fwait
inc
sub
jno
sub
push
mov
movsl
or
xchg
mov
ja
aas
fcomp
dec
sub
sti
lcall
enter
cwtl
lahf
iret
lea
jecxz
sbb
subb
cmp
inc
pop
and
xchg
xor
arpl
mov
out
sarb
xchg
popf
dec
inc
jl
imul
mov
mov
mov
push
cmpsb
cmc
lcall
aam
push
and
adc
or
ss
lahf
jns
mov
nop
or
pop
mov
das
subl
fwait
sbbl
xchg
icebp
mov
arpl
sti
aaa
mov
dec
ss
sti
jmp
cmp
mov
lea
adc
into
or
shlb
std
lea
pop
outsl
mov
mov
jle
mov
add
mov
or
mov
out
inc
sub
xchg
push
xor
jmp
cmp
sbb
mov
cmp
add
sti
shrb
lods
and
xchg
sbb
cmpsb
fimull
add
mov
clc
sbb
or
adc
imul
adc
popf
mov
orl
mov
and
mov
int
xchg
push
mov
inc
mov
ljmp
cmpsl
insl
pop
imul
xchg
sahf
cld
out
dec
cmp
idivb
add
and
imul
sar
add
icebp
leave
cli
inc
lods
mov
cs
sbb
aad
lea
aaa
inc
fs
xchg
hlt
rcrb
lahf
ja
mov
xchg
dec
push
mov
ficoms
mov
and
dec
sbb
adc
loope
movsb
dec
shlb
dec
xchg
jecxz
xor
mov
push
scas
mov
jmp
ret
mov
out
push
cs
movsb
insl
mov
sbb
pop
sub
push
jmp
push
xchg
je
loopne
icebp
jl
cmp
setge
add
or
dec
push
addl
je
mov
lret
pop
adc
mov
jg
iret
pop
adc
mov
mov
mov
xor
enter
sbb
stc
out
data16
sub
cmp
sub
sbb
mov
pusha
mov
mov
jp
inc
lods
jl
push
sti
cmp
std
push
push
jg
ret
jmp
fnstcw
and
pop
sbb
xor
mov
pushf
push
fdiv
inc
mov
fldl
dec
fildll
mov
mov
adc
iret
push
clc
jae
test
mov
cmp
xchg
and
push
imull
pop
jl
fbstp
or
and
mov
pusha
jl
testb
fsts
nop
divl
jbe
dec
cmpxchg
fidivs
fdivl
or
stos
adcb
add
mulb
mov
scas
scas
pop
aad
sbb
and
popa
mov
and
jp
sarl
pop
test
and
insb
xchg
mov
lret
subb
inc
out
xlat
rclb
out
sbb
gs
dec
fldl
std
pushf
popa
sbb
push
shrb
cmp
insl
push
out
pop
ss
stos
iret
inc
movsb
jecxz,pt
inc
call
bound
mov
mov
sub
jl
scas
dec
xor
dec
sbb
in
xor
out
pop
sub
jnp
mov
bound
xchg
adcb
clc
jae
ret
stos
xlat
movsb
mov
xchg
insb
sub
cmp
fdivl
repnz
inc
lahf
jle
cmc
rcrb
mov
movsb
inc
cmc
jmp
jp
clc
cli
movsl
cs
sbbl
push
xor
rcrb
out
int
adc
popa
fstp
popa
in
sbb
or
adc
sub
push
scas
decb
mov
mov
fwait
rclb
cmp
mov
xor
jns
aad
mov
jns
notl
inc
xchg
mov
mov
push
orl
movsb
or
pop
test
gs
and
mov
jmp
adc
ret
pop
jp
rolb
cmp
mov
sbb
ja
das
jg
fstpt
inc
push
pusha
fwait
mull
jbe
les
and
out
movsb
mov
jb
pushf
jne
aad
mov
es
insb
add
add
pop
add
ss
xchg
call
sbb
shll
popa
mov
adc
cmpsb
repz
and
enter
rclb
addr16
rorb
fdivl
pushf
xchg
add
sbb
jns
arpl
push
sahf
mov
or
xor
and
inc
test
cltd
cmc
fwait
int3
push
jo
cltd
movsl
dec
mov
cmp
lods
or
mov
xchg
insb
dec
fstpl
adc
aaa
xchg
pop
mov
je
pop
push
into
jg
adc
push
imul
sub
gs
adcb
aaa
ret
push
or
fimuls
adc
xor
js
xor
mov
mov
jle
movsl
pop
and
jno
push
les
fsts
aaa
in
rolb
addb
xchg
add
pop
sub
inc
in
call
cmp
jno
lock
in
test
test
aaa
pop
jle
jg
cs
cmp
popa
out
ja
pusha
jp
add
movsl
sbb
movsl
xor
jbe
mov
mov
xchg
data16
shll
fwait
cmpsb
leave
in
jo
mov
mov
pop
jle
adc
add
clc
xor
push
movsb
dec
fucomip
js
sbb
notl
pushf
scas
fildl
je
mov
bound
add
push
mov
mov
stos
stos
dec
movsl
cmp
push
gs
outsb
add
sbb
int
jmp
lods
mov
adc
mov
leave
jb
int
outsl
enter
cli
fdivrl
cmp
mov
push
pop
xorl
mov
add
std
std
jl
dec
mov
fistpll
insb
mov
inc
adc
fmull
xchg
outsb
inc
and
orb
das
fwait
dec
stos
xor
or
daa
fsubs
add
xchg
sbb
jae
and
incb
dec
mov
outsl
sub
jne
jnp
xor
enter
adc
les
mov
xor
xor
lock
lods
subb
xchg
loope
add
sub
loope
pop
xor
mov
mov
jmp
std
pop
xor
jo
mov
add
inc
mov
aaa
mov
jge
xor
dec
pop
out
jl
xlat
dec
xor
mov
aad
in
mov
mov
mov
inc
mov
loopne
out
leave
sub
cmp
addr16
jmp
dec
xor
xchg
fsubr
inc
mov
dec
mov
in
pop
or
dec
out
xchg
sbb
mov
mov
test
sbb
push
adc
jb
lods
mov
lcall
dec
daa
loope
push
bnd
addr16
pop
xor
push
mov
jle
jmp
fidivrs
enter
mov
ret
adc
adc
popf
adc
nop
mov
fcomps
push
mov
pop
dec
push
and
dec
cmpsl
pushf
dec
je
ljmp
cli
repnz
inc
sarb
mov
les
cli
imul
scas
loop
adcl
mov
shl
popf
xchg
push
cmp
repnz
push
cmpsl
neg
dec
lds
inc
cmp
jno
xor
jp
in
xchg
pop
mov
xor
cwtl
insb
lea
pop
sbb
jp
ret
and
lock
sub
cmp
pop
mov
jmp
sub
xor
push
mov
bound
cmp
cmp
mov
call
add
mov
add
add
xchg
cmp
push
sbb
adc
adc
sti
mov
les
xchg
jnp
dec
push
push
into
ret
push
cmc
in
cmpsb
pop
jge
or
xchg
sub
clc
push
inc
xchg
movsl
out
and
mov
mov
outsl
xchg
into
adc
mov
fs
rcrb
lcall
ljmp
aas
ss
mov
xchg
sub
and
pop
inc
frstor
stos
sub
cltd
mov
jmp
xchg
lretw
jne
inc
les
fs
insb
xchg
push
std
int
les
adc
sub
aaa
adc
in
nop
xchg
cwtl
lcall
fdivrs
mov
outsb
dec
and
lret
int3
aaa
jne
jmp
cmp
cmp
into
pop
int3
push
stc
adc
push
jle
js
pushf
fbld
sub
jmp
sbb
jo
cs
xchg
out
xor
in
nop
cli
xor
out
ficomps
test
mov
mov
sub
inc
dec
in
cld
adc
rorb
inc
icebp
or
pop
push
sbb
or
mov
fisubrl
stc
adc
xchg
in
sub
gs
adc
and
cmc
mov
pop
ja
lcall
xor
cmp
inc
inc
popf
pop
loop
jmp
sbb
stos
aaa
add
inc
add
cmc
jae
pop
and
addl
inc
pop
jle
dec
cli
dec
push
cmpsl
jle
cmpsl
dec
shrb
cwtl
mov
xor
adc
mov
out
cmc
je
add
mov
cltd
jmp
cmp
cmp
outsl
jns
sbb
sub
xchg
push
test
jge
or
insb
add
and
cmp
hlt
and
push
jae
mov
sub
pop
repnz
decb
lahf
xchg
dec
push
mov
inc
fisubl
sub
push
test
sub
dec
inc
jecxz
pop
xchg
sti
icebp
fldcw
loopne
in
or
and
movsl
pop
sbb
stc
aad
mov
js
push
dec
repnz
fstpt
mov
repz
sub
mov
cmp
dec
xchg
push
or
cmpsb
add
das
cwtl
pop
lds
push
or
iret
scas
mov
std
pop
dec
inc
mov
cmp
cld
sti
sbb
mov
sub
inc
sahf
jge
xor
daa
mov
mov
and
fsubrs
inc
mov
ret
jae
jb
xor
in
fnstenv
mov
repz
cmpsb
dec
cs
ja
add
jnp
and
push
cmp
adc
sub
and
xor
pop
clc
sti
test
dec
aas
clc
faddl
adc
or
fcmove
andl
rcrl
mov
xor
mov
xor
out
adc
push
jno
cld
mov
push
insl
shlb
addr16
push
lret
xor
ret
ror
repz
lock
xor
aad
xchg
cmpsl
in
mov
div
xchg
mov
inc
inc
push
push
arpl
pop
add
adc
and
xor
ret
xlat
shl
jecxz
xrelease
mov
inc
inc
push
push
arpl
pop
add
adc
and
xor
ret
xlat
shl
jecxz
xrelease
mov
inc
inc
push
push
arpl
ja
add
adc
daa
push
aaa
repz
jecxz
shl
div
xchg
aaa
jae
inc
test
int
ja
jo
lahf
insb
fcomps
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
lahf
inc
je
fs
sbb
je
push
xchg
inc
out
aam
les
xchg
pop
test
outsl
movsb
outsl
push
lahf
inc
je
fs
adc
add
xor
and
aam
les
cmpb
das
xchg
cmp
push
lahf
inc
je
fs
adc
add
xor
and
aam
les
pop
lret
sbb
adc
sbb
sbb
in
push
lret
add
mov
pushf
push
repz
mov
pop
xchg
cmp
and
fistps
jmp
inc
aas
ja
and
ljmp
dec
xchg
adc
pop
lods
iret
dec
mov
xchg
adc
sub
pop
scas
push
or
mov
xor
or
mov
add
adc
lret
paddq
aam
jns
ret
dec
in
scas
mov
cmpsb
outsl
stos
pop
xor
inc
pop
mov
xor
loopne
sbb
shrb
or
pop
push
pop
mov
stos
jl
xor
test
lret
jne
data16
scas
or
mov
pop
mov
int3
nop
or
fs
adc
add
xor
and
aam
les
hlt
aas
in
xchg
pop
test
jg
sub
lahf
sub
out
js
dec
mov
xchg
outsl
rclb
insb
mov
sub
or
or
ss
testl
mov
and
mov
jge
pop
mov
fld
sbb
sbb
in
add
xor
and
aam
les
hlt
aas
in
xchg
pop
test
jg
outsl
push
lahf
inc
je
fs
adc
add
xor
and
aam
les
hlt
aas
in
xchg
pop
test
jg
outsl
push
lahf
loope
iret
rolb
into
sub
or
dec
mov
sbb
les
jns
movsb
mov
out
das
or
cmp
leave
mov
add
inc
fmulp
sbb
mov
jne
pop
out
mov
jbe
mov
outsb
sbb
fwait
mov
sti
sti
mov
dec
mulb
jmp
filds
adcb
adc
sbb
push
pop
mov
test
xchg
ss
pop
ret
aad
sti
in
sbb
mov
add
test
ljmp
loop
out
mov
aad
mov
fldenv
movb
sbb
sar
loope
inc
dec
leave
mov
out
xor
jb
xor
stc
loopne
les
addr16
lods
mov
sbbb
sbb
xchg
push
jmp
mov
arpl
jbe
jl
sti
cld
push
jg
stc
daa
out
adc
dec
sbb
and
icebp
pop
imul
or
push
cld
outsl
pop
nop
cwtl
jns
pop
mov
outsb
inc
fidivl
lret
and
jp
gs
inc
ja
fisubrl
clc
add
imull
ljmp
mov
test
leave
lock
add
push
cltd
sarb
lea
cmp
call
jmp
fxch
mov
ljmp
fstps
cmp
dec
pop
or
shll
dec
or
mov
fcomip
cmp
mov
loope
or
jns
adc
lods
scas
lcall
and
push
mov
jno
idivb
push
clc
jge
int3
ds
adc
insl
je
push
mov
icebp
mov
das
push
bound
lods
push
js
popf
repnz
sub
push
repz
mov
mov
js
or
cmpsb
cmp
out
fldcw
in
jle
icebp
fsubrl
dec
aas
inc
ret
iret
hlt
and
push
xchg
into
dec
push
jmp
stos
lcall
rcrb
xor
mov
pop
jge
ds
dec
mov
xchg
int
dec
icebp
mov
pop
fwait
scas
sbb
inc
rcrl
fsubr
stc
adc
fstpl
shlb
xchg
sub
push
stos
inc
mov
inc
out
pushf
sahf
ret
out
xor
pop
push
mov
lret
shll
repnz
int
rcrb
test
jae
out
mov
lret
mov
xchg
faddl
push
enter
mov
addr16
add
push
les
mov
push
xor
lret
pop
jmp
xchg
fdiv
cmp
stos
mov
lods
popf
cs
ds
mov
ja
jl
inc
cwtl
ja
stc
int3
xchg
cltd
lods
sarb
or
sti
cld
mov
movsl
shll
jne
adc
clc
mov
mov
lret
test
cmp
or
xor
das
mov
jmp
mov
jmp
in
and
loop
jg
cs
movsl
sahf
out
pushf
dec
inc
or
fimuls
lret
test
pusha
arpl
xchg
addr16
adc
or
imull
sbb
fldenv
push
dec
lods
xchg
cwtl
cmp
jecxz
out
dec
pop
pop
fdiv
inc
jbe
int
and
pop
repnz
mov
add
adc
lahf
jg
sub
xlat
inc
mov
pop
mov
mov
lods
insl
sti
or
mov
lcall
nop
mov
jns
shlb
add
dec
roll
stos
aam
mov
or
xor
lods
dec
xchg
xchg
xchg
repz
cmp
imul
neg
dec
push
add
insb
sbb
in
jne
dec
mov
cmp
stos
add
xor
add
add
jl
jl
cmc
mov
or
mov
push
mov
adc
repz
cwtl
xchg
mov
or
or
mov
xor
into
je
rcrl
sti
ja
outsl
scas
cwtl
lret
loope
leave
test
add
jp
sub
sub
and
decl
xor
xchg
loopne
add
aaa
push
and
push
outsl
adc
jg
mov
not
adc
jnp
or
jmp
call
lret
int
adc
in
xbegin
pop
jno
inc
dec
frstor
or
rorb
xchg
sbb
mov
add
mov
aaa
push
int3
mov
es
ss
mov
fiaddl
addb
lock
dec
and
sub
adc
jp
aaa
out
call
loope
inc
add
sub
jg
pop
sbb
icebp
sti
or
mov
xlat
loop
stos
imul
pop
push
xchg
xchg
popf
jns
or
adc
repz
out
and
jg
cwtl
xchg
mov
sub
jno
jl
jge
xor
movsl
jno
cmc
jmp
inc
loopne
push
push
movl
leave
sbb
sbb
pop
imul
jno
loop
inc
mov
pop
aad
sub
pop
nop
lds
xlat
js
or
mov
gs
nop
ror
add
or
adc
out
ja
mov
push
rcr
mov
sahf
cmpl
pop
test
out
adc
scas
fcom
cwtl
inc
xchg
pop
inc
mov
mov
dec
push
test
push
or
leave
cltd
nop
out
icebp
mov
cmc
loop
dec
cmc
xchg
iret
ss
xchg
pushf
xor
sbb
mov
xchg
pop
aam
leave
mov
push
cli
les
xchg
push
in
jne
push
shll
xorb
sub
and
js
fildll
dec
push
adc
cld
jbe
push
push
mov
int3
push
out
je
pop
lods
jecxz
push
jecxz
mov
sbbl
scas
fsts
push
dec
fldenv
faddl
test
insb
pop
push
sub
cwtl
fildl
lods
dec
xchg
sbb
in
ss
and
inc
cld
leave
pushf
subb
lret
fs
xchg
sub
rcrl
or
add
adc
fidivrs
mov
es
add
mov
lods
popf
icebp
out
pop
xchg
in
aam
push
pop
outsl
gs
fnstcw
icebp
les
inc
or
std
jg
push
ja
jbe
fwait
scas
lds
jo
sub
jbe
es
sahf
test
test
repz
sbb
xor
xchg
mov
inc
das
push
push
in
test
mov
xchg
cld
push
cs
push
stos
add
unpckhps
dec
inc
inc
scas
adc
sub
adc
adc
scas
arpl
faddl
and
jmp
mov
outsb
into
nop
cmp
es
and
icebp
mov
xchg
rcl
sub
mov
int
adcl
clc
push
fildll
mov
sub
sbb
mov
insb
pusha
insl
repz
mov
dec
mov
lock
or
pop
mov
scas
ljmp
cmp
xchg
loopne
and
lcall
cmc
outsb
fisubrl
leave
dec
pop
jmp
fnstcw
or
loopne
nop
stos
push
jl
scas
adcb
mov
lods
xchg
jns
incl
xchg
cs
jne
and
lcall
test
xor
sbb
mov
into
in
push
mov
cmpsl
sbb
in
sbb
inc
add
in
daa
repz
push
xchg
and
or
repnz
sti
aam
lahf
xor
outsl
sub
iret
test
mov
sti
cmpsb
push
fcmove
test
aad
or
push
inc
lods
fwait
dec
inc
pop
dec
orl
push
loopne
sub
sbbb
ret
sbb
jns
mov
ds
pop
loope
insb
aaa
loop
jg
mov
addb
sbb
pop
cmp
jl
in
jbe
xchg
cmpl
nop
pop
jno
enter
and
adc
imul
inc
sbb
mov
cmpsb
inc
adc
lcall
add
jbe
dec
mov
dec
add
mov
xchg
jb
xor
lods
test
cvtps2pi
sarb
inc
movsb
mov
mov
std
adc
pop
sbb
xchg
jae
std
mov
push
mov
mov
mov
in
inc
lds
cli
xchg
jmp
ds
add
je
fisttpll
out
pop
leave
pop
push
daa
testb
dec
into
dec
and
out
aas
mov
cmp
stos
or
inc
fs
mov
sbb
insb
push
add
cmp
lods
or
dec
and
inc
arpl
xchg
add
gs
pop
loopne
and
in
cmp
rcrl
les
dec
and
sbb
leave
adc
lret
xor
mov
data16
popf
fdiv
xor
adc
pop
jnp
sbb
jg
scas
stos
pusha
es
or
lcall
divl
rcrl
sti
pop
fstpt
daa
and
lcall
mov
mov
adc
rcrb
pop
gs
cmc
add
or
inc
mov
xchg
and
and
aam
and
inc
mov
divb
popa
add
xor
out
stc
dec
and
jge
adc
sbb
scas
sbb
pushf
dec
leave
mov
clc
lods
push
loopne
jno
aaa
sbb
ret
push
repnz
jge
repnz
adc
xchg
mov
sub
inc
cli
andnps
mov
xchg
add
shl
inc
fcmovnb
out
mov
cmp
out
sbbb
and
add
ljmp
loopne
stos
aas
and
rorb
and
push
sbb
lcall
cld
fsubrs
adc
sbb
adc
xchg
xchg
aad
mov
mov
mov
out
cmpsb
stos
mov
dec
daa
mov
or
push
add
fs
dec
jns
andl
pop
push
sub
mov
mov
insb
testl
adc
xchg
lcall
loope
xchg
adc
and
aas
mov
in
add
jg
mov
sbb
inc
mov
adc
lret
ret
xor
adc
pop
std
aam
out
cmpsl
sub
adc
ja
or
dec
aas
test
pop
inc
mov
repnz
dec
pop
out
push
sub
fwait
xchg
adc
leave
cmc
mov
sbb
or
sbb
rolb
loop
outsb
push
cmp
popa
sub
push
mov
aaa
aam
nop
stc
insl
push
push
flds
dec
movl
or
mov
adc
cmpsl
sti
push
out
lods
addr16
push
and
sbb
add
in
shlb
cmp
and
cwtl
mov
icebp
mov
push
mov
into
subl
mov
scas
and
add
loope
dec
int3
adc
bound
sarl
js
shrl
daa
mov
popa
dec
adc
jb
out
aaa
sub
dec
adcb
sahf
sub
mull
pop
lods
cld
cmp
jle
popl
gs
rolb
lods
out
fmul
mov
xor
jbe
and
gs
jns
andb
notl
insl
cmp
roll
mov
dec
jmp
xor
imul
fildll
in
adc
jbe
jl
mov
xor
sbb
pop
xchg
xlat
lahf
mov
iret
pop
arpl
popa
xor
push
adc
cmp
cmc
arpl
dec
push
movsl
xchg
add
stos
aad
addl
jbe
dec
nop
mov
add
or
mov
adc
sub
mov
pop
cmc
int3
xor
out
test
into
pop
rclb
jns
mov
fadds
dec
or
cmpsl
dec
cltd
arpl
xchg
inc
hlt
mov
push
arpl
fistpl
push
sbb
pusha
and
mov
insb
lods
dec
addb
inc
scas
movl
out
fmul
mov
movsb
ds
xor
lcall
xchg
or
cmp
jl
and
sub
mov
notb
push
pop
sbb
mov
data16
xchg
cmpsl
enter
mov
push
mov
xchg
push
in
xchg
push
jbe
fdivrs
mov
push
mov
jecxz
jg
jo
fdivr
imul
mov
cmp
add
stc
ret
xchg
pop
xor
vunpcklps
fadd
or
cltd
outsb
jb
cmc
fldenv
int3
mov
mov
adc
jae
mov
test
adc
test
cmpsl
repnz
mov
cmpl
call
dec
mov
ss
mov
data16
lret
filds
imul
aad
or
hlt
xor
pushf
sub
push
jmp
and
sub
stos
or
inc
push
jle
arpl
insl
loopne
xchg
inc
sub
inc
sub
movsb
cmp
out
mov
mov
fsubrl
sub
jle
lods
dec
call
pop
mov
mov
cmp
mov
cli
fistl
das
ss
mov
fisttpll
leave
lea
add
mov
hlt
sub
cmp
xchg
push
movsl
mov
pop
cld
mov
repz
in
dec
lds
jno
mov
aam
lods
cmpsl
pop
in
pop
sbb
cmpsl
popa
xchg
xor
dec
cmp
gs
pop
cmp
pop
mov
pop
adc
filds
cmp
jecxz
outsl
jbe
loopne
sbbl
ret
and
fsubp
int3
or
inc
jb
nop
scas
iret
iret
lods
sahf
xor
jbe
xlat
xor
sub
jge
jmp
shrl
js
adc
pusha
push
movsl
jb
pusha
in
stc
jl
es
and
mov
fwait
or
jp
or
adc
push
jg
int3
fiaddl
rcr
sti
rorb
loopne
ret
inc
xor
jne
cwtl
add
fs
imul
or
push
dec
in
push
stos
xchg
aas
or
leave
inc
add
and
test
loop
push
pop
xchg
pop
add
in
push
dec
repz
xor
aam
adc
addr16
test
daa
pusha
sahf
rorb
cld
insb
mov
cmp
repnz
sub
cmp
jae
aas
shll
and
lods
data16
add
pop
imul
lea
scas
test
adc
stos
inc
push
fs
imul
jb
call
pop
or
cmp
stos
sti
cltd
repnz
pusha
daa
lret
xor
cli
test
aas
mov
mov
push
push
sub
lret
popf
stos
adc
jns
cmp
and
cltd
jmp
sti
test
ficomps
cs
test
jg
and
push
addb
pop
fdivrs
in
repnz
mov
mov
pop
xchg
mov
mov
cmc
enter
or
pop
icebp
lahf
test
in
xchg
dec
mov
fisubs
sbb
mov
sub
in
and
mov
push
mov
inc
mov
push
sub
popa
xor
inc
mov
sbb
dec
mov
xchg
ljmp
das
mov
sbb
add
sbb
mov
or
lods
lods
test
sahf
mov
xor
popa
insb
mov
addr16
out
loope
shrl
pop
loopne
cmp
mov
lds
push
add
cmc
adc
out
jge
sbb
sub
mov
out
js
xchg
xchg
aaa
add
nop
push
inc
jp
xchg
mov
and
je
notl
mov
mov
popf
xor
lods
mov
cmp
inc
pop
inc
cmp
nop
pop
xchg
sti
mov
sbb
fsubrs
cltd
pop
jne
inc
shlb
loopne
mov
filds
pushw
orl
add
cmp
add
dec
enter
sub
mov
or
mov
mov
jno
dec
xchg
shlb
jmp
pushl
or
daa
adc
arpl
mov
add
loopne
inc
push
mov
inc
sub
mov
pop
lock
stos
test
add
mov
or
pop
cmp
packsswb
stos
mov
fnstenv
mov
cmp
adcb
mov
cwtl
dec
dec
je
add
or
shrb
lods
inc
or
or
or
je
dec
out
movsl
jg
mov
xlat
and
push
xchg
cmp
jb
out
jecxz
test
sub
mov
xchg
fcom
sub
shll
in
mov
adcl
loopne
dec
lcall
xchg
insl
fwait
mov
fsubs
dec
insl
fcmovnb
daa
testl
mov
aas
jb
xor
push
outsb
into
notl
insl
outsb
sbbb
or
je
mov
jge
fidivrl
bswap
mov
adc
stos
xor
es
adc
cli
jbe
xor
test
or
popf
scas
or
jo
mov
inc
decb
shlb
nop
stos
repnz
loope
add
adc
xor
cld
and
lods
outsb
xor
xor
sub
xchg
test
cmp
enter
dec
cltd
mov
dec
mov
outsb
mov
js
loop
mov
movsb
push
hlt
loope
push
inc
add
xchg
jae
mov
nop
out
jmp
jmp
out
aad
mov
inc
xchg
repz
iret
lock
int3
es
mov
cmpsb
and
xchg
pop
mov
lock
sub
data16
out
pop
and
mov
insl
adc
cmp
and
xchg
mul
aaa
jb
xchg
insb
test
in
das
icebp
mov
rclb
addr16
lods
add
mov
scas
test
jno
fcmovnb
mov
sub
lret
xchg
sbb
pop
adc
icebp
mov
repz
jmp
cs
aad
jo
inc
adc
andb
mov
repz
sbb
sub
js
lods
daa
xor
pop
icebp
mov
mov
loopne
pop
jnp
xor
movsb
orb
jne
leave
ret
int3
mov
jg
dec
out
inc
daa
cli
fidivl
push
lret
add
adc
inc
jnp
cli
je
repnz
fnstcw
in
jmp
es
inc
dec
inc
mulb
lods
mov
cmpsl
lret
lods
lods
hlt
xchg
and
xor
fldz
sub
das
inc
es
test
jp
lods
push
movsl
data16
inc
adc
dec
je
notl
push
pop
sbb
mov
arpl
outsl
test
in
orb
enter
mov
popa
xchg
lahf
sub
test
or
popf
push
jbe
dec
lret
hlt
test
adc
mov
cmpsl
scas
leave
xor
and
pop
aas
add
in
and
inc
jo,pn
jp
sbb
outsb
mov
lea
data16
adc
dec
inc
and
sub
mov
test
aaa
test
decb
mov
push
cld
or
ljmp
loop
add
rolb
pop
loop
in
test
int3
add
mov
stos
pop
dec
jno
hlt
dec
pop
out
call
and
call
ja
dec
jmp
lods
xchg
shl
cmc
ja
xor
jns
daa
xor
cmp
enter
ja
fcom
xor
sti
decb
pop
and
cmc
icebp
cmp
cmp
pop
ljmp
pushl
xor
repz
pusha
stos
mov
std
dec
loopne
and
cmp
mov
and
fucomi
mov
mov
or
dec
mov
shl
mov
lahf
mov
jo
test
repnz
push
lret
or
sbb
pop
xor
jle
or
mov
xchg
sub
lret
leave
push
repnz
mov
push
or
bound
stos
sarl
nop
les
pop
shll
pop
mov
insb
repz
xor
arpl
push
jecxz
fists
sub
xor
sub
stos
and
sahf
data16
or
adc
push
sbb
nop
repnz
cltd
stc
dec
xchg
js
xlat
cmc
cmp
jae
or
or
dec
mov
mov
mov
shrl
pop
cmp
push
scas
mov
xorb
add
jne
cmp
mov
jb
mov
in
mov
mov
sub
mov
push
push
mov
je
fdivrl
mov
xchg
fisttpl
clc
xor
fwait
cltd
sub
adc
imul
outsl
push
adc
rclb
stos
pop
push
sub
insl
mov
cmp
cs
xor
pop
dec
mov
jg
jg
lea
xor
pushf
les
lcall
xchg
xor
inc
clc
lret
fisubrs
xor
rolb
repz
xlat
mov
pop
ror
sbb
iret
jne
or
inc
push
lods
and
dec
sub
xchg
mov
cmp
sub
or
xor
mov
jne
stos
mov
add
xor
and
aam
les
hlt
aas
in
xchg
pop
test
jg
outsl
push
lahf
inc
je
fs
adc
add
xor
and
aam
les
hlt
aas
in
xchg
pop
test
jg
outsl
push
lahf
inc
je
fs
adc
add
xor
and
aam
les
hlt
aas
in
xchg
pop
test
jg
outsl
push
lahf
inc
je
fs
adc
add
xor
and
aam
les
jecxz
or
dec
sbbb
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
fistps
adc
inc
lods
push
orl
push
mov
dec
loopne
lock
sarb
and
adc
pusha
fbstp
inc
call
mov
aas
nop
popl
jg
cmp
or
jns
push
cmovae
inc
cmc
aas
nop
dec
mov
adc
shlb
sti
pop
scas
je
fwait
push
push
test
outsb
sub
cmp
or
int3
ds
mov
jge
jno
mov
xor
fisttps
repnz
nop
mov
pop
movsl
cmp
repnz
xchg
mov
pop
lret
ss
jo
xor
mov
das
cmp
adc
or
jg
jo
xor
add
mov
sbb
scas
xor
dec
shll
outsl
mov
pop
paddsb
mov
dec
incl
xchg
inc
fisttps
sub
inc
nop
sbb
mov
das
jb
pusha
shrb
fisttpl
jp
fstpl
out
movsb
rclb
rolb
inc
and
or
pusha
fbstp
pop
decl
mov
aas
mov
pop
out
sarb
inc
jmp
movb
adc
lods
push
mov
enter
decl
pop
mov
ljmp
adc
xchg
and
cmp
sub
xchg
xor
ljmp
orl
out
inc
call
mov
aas
nop
dec
loopne
lock
sarb
and
adc
pusha
fbstp
inc
call
mov
aas
nop
dec
loopne
lock
sarb
and
add
pop
fstl
js
fldt
push
pushf
lret
lcall
push
sbb
sti
sub
imul
lcall
repnz
xor
sbb
add
adc
push
xor
mov
push
pop
add
int
jmp
pop
dec
jnp
les
repz
mov
inc
fs
mov
xchg
popf
mov
push
sti
sub
pop
push
dec
test
add
or
adc
sarb
cmpb
and
mov
shrb
sbb
add
enter
mov
test
or
adc
mov
inc
dec
subb
mov
pxor
cmp
imul
jnp
sbb
inc
push
mov
jo
push
cmp
enter
insl
mov
lret
aas
hlt
jns
jb
faddl
jo
es
in
and
adc
inc
je
dec
cmp
jne
lds
notl
mov
cmpsl
std
inc
pushf
sub
outsb
xchg
rol
mov
sti
mov
aaa
clc
lret
scas
js
stos
lock
xchg
inc
xchg
or
aam
pop
loope
jle
and
mov
repnz
push
mov
jmp
pushf
bound
fisttpll
aaa
out
hlt
and
mov
push
mov
call
cltd
jg
jecxz
mov
pushf
out
sub
lds
xlat
jge
fdivrl
cmpsb
and
les
inc
sti
jp
incb
repz
push
or
in
loopne
sub
dec
jp
fnsave
std
test
sarl
mov
xchg
xchg
pop
jnp
push
dec
xor
clc
dec
mov
mov
fwait
mov
fsub
sahf
and
lret
pop
mov
sbb
je
adc
loopne
mov
loope
pop
loopne
scas
jl
inc
jge
jne
scas
mov
and
iret
pop
jno
mov
fsubl
icebp
xchg
les
push
icebp
fistpl
dec
daa
aaa
cmpb
dec
cs
outsl
xchg
push
cmp
scas
fcom
into
push
push
cltd
jp
add
arpl
test
test
jle
jl
push
xchg
mov
push
adc
xchg
rol
jp
mov
xor
loope
test
xchg
and
adc
mov
jno
lea
push
aas
pmullw
mov
sahf
adc
mov
xchg
lds
mov
pop
or
adc
jbe
sbb
mov
es
jl
lock
jl
out
lret
push
and
pop
push
xchg
lds
sbb
sbb
jnp
sub
std
out
sub
dec
loope
nop
les
out
jge
cmpsl
mov
dec
ja
call
sub
dec
fstpl
mov
adc
mov
ret
test
inc
cmp
fwait
and
int3
rcl
xor
and
cmp
int
push
imul
addr16
jmp
sbb
dec
outsb
fdivl
adc
jp
mov
sbb
adc
nop
jmp
dec
or
jmp
in
mov
fdiv
scas
jmp
repnz
jbe
mov
jle
shll
push
ljmp
or
or
inc
jne
nop
push
cmpsb
pop
dec
imul
das
lods
mov
addb
stos
out
loop
push
push
mov
mov
arpl
pop
dec
mov
nop
mov
mov
mov
loopne
xorl
call
jns
rorl
xor
inc
rorl
push
pop
lds
cmp
xor
std
cmc
int3
and
sbb
pop
scas
sub
out
lret
ficoms
mov
mov
pop
push
cmp
cmc
or
xchg
hlt
sbb
icebp
cmp
pop
or
push
sub
adc
inc
ljmp
clc
pop
ljmp
leave
insb
mov
push
cwtl
fnstsw
dec
ret
mov
mov
cld
jle
pushf
pop
cmc
out
sbb
add
cmpsl
fidivl
pop
mov
sub
cmp
loopne
xchg
js
push
leave
sbb
dec
or
bound
lcall
clc
jmp
jmp
fistps
inc
mov
pop
push
jb
test
xchg
popf
mov
icebp
push
mov
lods
add
mov
out
mov
mov
imul
imul
push
mov
fmull
in
ret
sub
ret
lcall
iret
jnp
mov
test
int3
test
xchg
ret
jae
clc
and
add
jns
cmp
mov
ret
stos
and
dec
xor
or
and
pop
sub
pop
or
inc
xchg
ds
out
cmc
fldl
loopne
push
inc
jecxz
notb
sar
int
inc
xor
push
daa
mov
rcl
jno
pop
mov
jmp
pop
push
pop
enter
lods
scas
lret
cltd
jns
adc
mov
enter
pop
mov
adc
xchg
lret
imul
out
in
popf
fisubs
shlb
mov
pop
jg
and
mov
andb
pushf
or
cwtl
xchg
add
pop
adc
jbe
mov
jge
and
mov
xchg
sub
imul
enter
cmp
add
mov
jbe
inc
cmpsb
lds
pop
inc
cmpl
fistpl
outsb
fidivl
cmpsb
xchg
xlat
les
orl
and
lock
sbb
add
cmpsl
xor
sub
cmp
cli
jecxz
sti
mov
xor
stos
aam
mov
mov
aad
inc
in
das
mov
stos
das
sbb
iret
out
jo
loop
mov
mov
push
lock
lea
mov
jge
sti
imul
add
sbb
mov
popa
dec
icebp
xor
mov
and
rcr
pop
and
std
mov
dec
jb
adc
dec
fucom
xlat
ret
js
fmuls
xchg
push
inc
add
inc
test
mov
fildll
fcmovbe
notl
mov
notb
and
test
cmc
arpl
popa
push
aas
sub
test
jge
adc
and
add
int3
sbb
mov
movsl
inc
iret
test
add
jae
pop
cmp
add
xlat
mulb
and
arpl
sub
or
dec
xor
adc
loopne
into
add
mov
ss
fstp
fstl
lea
clc
and
icebp
rorb
mov
mov
mov
or
cltd
mov
cmp
loopne
pop
outsb
repz
ja
pop
or
imul
stos
vunpckhps
adc
imul
mov
pop
push
test
dec
cmp
enter
adc
in
pop
fsts
dec
push
sahf
jnp
sbbb
jne
adc
clc
addr16
adc
popa
mov
or
ss
xorb
and
push
adc
cmp
fwait
outsl
cld
das
jo
cmovns
cli
push
aad
sbbb
and
sbb
or
movsl
mov
daa
inc
cltd
clc
mov
sub
ja
out
push
sub
jge
xor
mov
inc
cli
repnz
xchg
cmp
mov
ret
mov
dec
lret
sbb
dec
mov
int
sbb
cwtl
imul
aas
pop
fldcw
cmp
push
loope
mov
push
sub
inc
adc
cmpsb
sahf
pop
pop
fdivr
pop
daa
movsl
in
mov
mov
jle
pop
into
cmp
adc
cmc
jmp
or
adc
add
and
push
test
or
jo
dec
mov
insb
mov
inc
ret
scas
std
and
jg
push
mov
dec
inc
jp
mov
imul
mov
pop
xchg
aas
sbb
dec
xchg
loop
add
or
cmc
cs
sub
and
push
das
xor
enter
inc
popa
leave
aaa
cmpsl
or
jecxz
test
add
or
mov
add
sahf
and
loope
cwtl
mov
sub
pop
test
push
ja
stos
ljmp
inc
iret
sbb
lret
lahf
or
lahf
fbld
sub
pop
xchg
andb
jg
out
ss
inc
jmp
mov
dec
add
daa
xor
mov
sbb
cli
seta
mov
test
lret
aad
aad
test
push
sbb
sub
out
sub
mov
adc
bound
mov
push
inc
and
sub
and
cld
loopne
push
rcrb
lods
lock
loopne
inc
xchg
mov
inc
mov
inc
or
or
nop
xchg
or
xchg
outsl
sub
fwait
mov
adc
or
xchg
dec
hlt
orl
stos
xor
divb
int
pop
test
mov
mov
aam
or
loope
ljmp
negl
jl
mov
sarl
fwait
cwtl
cmp
ja
iret
mov
dec
std
data16
cmpsl
ss
ficompl
xor
data16
xor
and
pop
sbb
pop
cmp
leave
fidivl
ret
leave
movsb
pop
insb
imul
mov
repnz
inc
xor
jnp
lock
sbb
mov
sbb
shlb
fcmovnu
call
mov
push
add
push
aad
inc
xchg
pop
fldz
jmp
inc
cmp
fidivrs
shl
xchg
add
lock
adc
lret
xchg
cmp
mov
in
sti
sub
push
fdivrl
ss
sbb
hlt
cmp
mov
les
adc
pop
clc
fsubs
outsl
mov
dec
lret
int3
cmpsb
pop
lock
pushf
rcrb
mov
lock
sub
xchg
lahf
dec
and
test
adcb
loop
negl
mov
mov
fstpt
and
dec
stos
test
or
mov
and
ffree
push
mov
push
or
dec
decb
arpl
das
stc
hlt
ss
lret
lods
sbb
mov
cmp
mov
pop
int3
loope
push
enter
xchg
cmp
fwait
cmpsl
out
aam
mov
mov
cmc
repz
in
jno
rcrl
loopne
cmp
mov
shl
les
stc
out
dec
rorl
lods
cmpl
mov
lcall
je
ret
shrb
jbe
imul
dec
addr16
sub
test
addr16
dec
loope
movsl
mov
mov
inc
es
mov
xchg
sbb
aas
decl
dec
out
dec
mov
and
pop
shlb
push
pusha
or
jno
inc
aaa
mov
mov
lret
movsb
xchg
call
sti
ficoms
pop
lret
jg
jne
or
cmp
adc
add
push
cmc
lahf
repz
imul
cwtl
mov
add
dec
into
adc
scas
pop
pop
addr16
lods
xor
dec
or
pop
pop
test
or
aas
add
sbb
xchg
sbb
cltd
out
movsl
notb
adc
repz
xchg
or
imul
fdivrl
daa
clc
push
ficoms
js
sbb
pop
jnp
and
sbb
out
jns
fcomi
jno
pushf
bound
fsub
xlat
inc
push
repz
and
push
leave
pop
dec
adc
and
shl
pop
sub
jnp
pop
sub
repz
push
andb
in
std
add
movsb
mov
mov
inc
pop
pop
daa
mov
and
sub
xor
jbe
es
adc
addr16
push
and
sub
shrl
call
aad
sahf
test
inc
call
hlt
sbb
addr16
jbe
icebp
lds
adc
ljmp
leave
iret
aaa
add
insl
cltd
std
ret
es
cwtl
pop
adc
fdiv
ja
xor
adc
in
cmp
aas
fucomp
dec
aaa
mov
inc
mov
xchg
loopne
add
dec
lret
daa
cs
jo
mov
or
inc
pop
jnp
loopne
arpl
in
push
dec
decl
mov
subl
cmp
out
fxch
jno
mov
lahf
fsubr
cld
nop
fsubp
xchg
icebp
hlt
enter
mov
mov
bound
adc
add
lock
fadds
mov
bound
es
iret
or
call
add
sub
andl
mov
adc
lahf
xlat
insl
inc
pop
push
jb
mov
mov
mov
inc
add
jl
mov
xchg
sub
lret
cwtl
or
mov
lret
push
cmp
sbb
add
push
fnstcw
fisttpll
xchg
xchg
mov
je
out
cld
cmp
stos
sub
aaa
mov
xor
mov
sub
xor
sub
xlat
push
add
movb
or
aaa
in
leave
and
mov
test
or
insl
mov
sub
jno
in
inc
and
fisttpll
imul
jno
inc
or
sbb
mov
cmc
jne
fwait
jecxz
rclb
loope
aas
lods
insl
and
or
int
enter
mov
pop
and
cmp
xchg
int
jge
imul
sbb
pop
jmp
mov
mov
fsubr
and
xor
jbe
fildll
xor
or
add
mov
push
and
pop
div
dec
fwait
lret
mov
jge
sub
xlat
pop
or
xchg
aam
in
xchg
adc
or
or
sbb
lods
pop
and
nop
repnz
int3
hlt
jle
fistpl
icebp
push
and
jno
dec
fs
dec
fdivs
push
dec
dec
movsb
adc
xor
cmpsl
in
sub
sbb
inc
push
in
fcompl
jp
rolb
scas
sbb
or
push
daa
out
sarl
je
outsb
scas
mov
push
inc
jb
call
sub
cmp
sarl
in
cli
call
nop
push
mov
dec
cmp
and
movsb
push
std
jae,pt
aaa
movsb
aad
adc
jecxz
iret
cld
in
xchg
mov
inc
jge
cmp
dec
scas
out
or
mov
xor
out
jbe
rcrb
rcrl
dec
sbb
popf
mov
lea
mov
pushf
adc
adc
shll
scas
std
jns
jl
inc
iret
imul
arpl
mov
sub
aad
test
mov
scas
mov
jecxz
sbb
xchg
push
xor
mov
or
rorb
mov
or
xor
rorl
imul
sbb
sub
mov
andl
pop
jne
pop
bound
nop
jge
sti
and
inc
mov
mov
adc
lods
jecxz
addr16
xchg
add
mov
dec
pop
test
xchg
cmp
inc
cmp
sub
mov
mov
mov
rcll
push
push
fiadds
fldt
jge
mov
je
cld
jl
and
dec
xor
insb
out
roll
enter
mov
faddp
mov
push
adc
cmpl
arpl
xor
shlb
lods
ja
insl
insl
popa
lret
enter
shlb
repnz
adc
fmul
daa
xchg
daa
in
adc
and
jno
fbstp
adc
fisubrl
pusha
test
fadds
xchg
dec
jmp
jecxz
pop
fwait
shll
add
rcrl
xor
shrb
stc
add
adcl
mov
repnz
jbe
xchg
dec
clc
adc
out
lret
das
xchg
rcrb
popa
sbb
test
or
jle
addb
mov
xchg
sti
mov
inc
popa
pushf
sbb
jne
fildll
cmp
nop
adc
xor
aas
dec
jne
std
or
jle
imul
xchg
xchg
xlat
and
inc
into
fsts
xchg
iret
insl
inc
push
in
sub
scas
fneni(8087
add
mov
push
int3
xchg
or
pusha
call
outsl
add
in
xchg
mov
testl
lea
pop
xchg
in
cmpb
insl
cmp
rcll
xchg
jge
mov
sbb
xchg
sbb
lea
bound
js
push
je
cmp
mov
cwtl
sub
frstor
daa
insl
jae
test
lock
sub
lods
movsl
xchg
mov
lret
and
pop
xchg
test
sbb
sbb
fmuls
dec
je
insl
loope
cmpsb
inc
jmp
mov
and
ljmp
mov
fisttpll
cli
in
and
adc
jp
jp
xchg
out
data16
xor
push
mov
fwait
jnp
cmp
rcr
imul
jle
mov
cmp
fbstp
jmp
rol
dec
sub
mov
ret
faddl
daa
inc
cmp
icebp
push
or
movsb
cmp
outsb
sub
jecxz
push
xchg
in
cld
pop
sarb
push
aam
mov
inc
fists
pop
imul
mov
inc
out
test
daa
or
in
test
ds
das
test
sti
test
sbb
or
and
adc
fwait
cld
outsl
mov
aam
scas
lret
jne
sub
ficomps
inc
mov
xlat
xor
es
repz
cmp
inc
arpl
push
daa
xor
std
pop
out
movsb
jp
inc
dec
lcall
xchg
shrb
mov
add
jg
test
out
ss
inc
daa
cmpsl
outsb
push
pop
pop
jb
test
mov
push
aad
negb
orb
sbb
imul
push
loopne
cmp
inc
das
test
cmp
mov
addb
xor
repz
and
out
xor
cmp
cltd
pop
or
xchg
mov
xchg
inc
roll
xor
sub
sub
mov
cs
adc
adc
in
out
and
call
jg
iret
sub
shrl
cmp
inc
lods
dec
xchg
dec
mov
cwtl
mov
dec
test
sbb
add
and
push
ja
xchg
imul
test
loop
scas
daa
testb
shrb
insb
dec
neg
mov
clc
cld
jecxz
or
pop
in
or
js
cltd
jp
ret
inc
gs
push
xor
les
scas
push
cltd
popa
std
mov
cli
in
stc
cltd
cld
in
leave
xchg
pop
loopne
dec
outsl
sbb
pop
add
int
dec
add
fwait
js
sti
pop
mov
or
cli
fwait
sub
aad
je
lret
push
js
add
mov
jg
adc
dec
movsl
bound
pop
scas
ret
mov
cwtl
pusha
dec
adc
mov
hlt
inc
inc
xchg
jae
sub
mov
subl
sub
scas
stc
ret
add
push
int3
jne
mov
arpl
jns
clc
repnz
cltd
outsb
add
sti
test
lahf
test
fdivs
mov
shrl
mov
imul
outsb
js
outsb
inc
adc
lahf
adc
sub
xor
jbe
lock
subl
add
add
out
add
fnstenv
cmp
xchg
nop
lods
clc
sbb
pop
icebp
adc
jecxz
cwtl
dec
mov
movsb
sub
mov
out
cmpsl
std
mov
jmp
je
cli
xchg
xor
pop
push
mov
adc
leave
pop
sarb
enter
or
mov
subps
cwtl
cmp
pop
or
shll
lds
xlat
mov
div
pushl
cmp
fdivrl
push
mov
jmp
iret
repnz
in
cmp
ret
cmp
cmp
mov
mov
mov
movsb
pop
pop
jae
push
xor
jl
mov
pop
js
xor
fcomi
pop
subb
clc
push
stos
rorb
call
les
push
push
mov
outsb
sahf
cmp
xor
roll
mov
fs
hlt
sarb
outsl
jb
stos
call
mov
push
hlt
jo
test
jl
mov
mov
sahf
sbb
add
mov
push
call
or
cmpsb
jnp
jmp
dec
ret
pop
in
pop
repnz
in
mov
mov
mov
out
pop
hlt
movsl
push
cld
mov
or
add
bound
push
lret
mov
sub
les
addr16
clc
pop
add
jle
fsubs
xchg
icebp
shll
ljmp
xchg
sub
xchg
mov
mov
cltd
cmp
pop
xor
xor
pusha
fbstp
inc
call
mov
aas
nop
dec
loopne
lock
sarb
and
adc
pusha
fbstp
inc
call
mov
aas
nop
dec
loopne
lock
sarb
and
xor
add
jo
inc
jg
push
pop
mov
cmpb
dec
loopne
lock
sarl
and
adc
pusha
fbstp
inc
call
mov
aas
out
push
comiss
mov
cmc
xor
imul
mov
or
jl
insb
dec
pop
sti
dec
jmp
sbb
cld
pop
in
dec
fdivrl
imul
jmp
mov
insl
lret
pop
mov
lods
or
in
dec
fdivrl
imul
mov
stos
jl
pop
movsb
pop
mov
push
pushf
push
in
repz
mov
outsl
hlt
add
or
icebp
sbb
inc
mov
or
push
dec
push
mov
jno
cld
fsubr
mov
jge
sub
mov
insb
daa
or
sbb
int3
lds
ds
cmp
mov
or
add
bound
mov
xchg
pop
adc
hlt
int3
xchg
int3
inc
mov
sti
sub
insb
xor
add
out
sti
sub
sbb
int3
pop
and
call
xchg
inc
xchg
lret
in
aaa
mov
lea
pop
jae
xlat
cs
js
fmull
in
stos
data16
cwtl
into
aas
or
out
dec
ljmp
mov
cld
pop
in
dec
fdivrl
imul
mov
or
jl
insb
lret
pop
sti
dec
sbb
iret
or
push
lret
aaa
orl
dec
cmp
ljmp
dec
in
cli
mov
cmp
lret
or
cmp
pop
cltd
adc
imul
popa
fimull
mov
es
ficoml
dec
mov
jnp
imul
mov
or
jl
insb
lret
pop
sti
dec
jmp
sbb
cld
pop
in
dec
fdivrl
imul
mov
or
jl
insb
lret
pop
sti
dec
jmp
sbb
inc
add
push
testl
popa
outsb
push
sub
pusha
std
aaa
jns
in
bound
lret
jg
test
cmp
pop
scas
sub
stos
cli
cmp
dec
loope
cmc
aad
sub
shlb
mov
push
dec
xchg
fldcw
icebp
or
sbb
enter
mov
es
pop
in
adc
and
shlb
sub
mulb
dec
gs
rolb
cmp
gs
adc
testb
pop
or
popa
mov
int3
sti
mov
movsb
pushf
pop
jb
mov
test
scas
xchg
xchg
jno
out
pop
enter
out
push
dec
adcb
pop
shl
sti
sbb
jg
rcr
aam
fnstsw
popf
jbe
mov
div
xchg
add
inc
ret
loopne
shrb
stos
sbb
pop
in
cs
pop
xchg
mov
das
int3
in
lock
aaa
icebp
push
xchg
sbb
dec
mov
call
in
push
add
sbb
loop
mov
add
add
inc
xchg
push
sbb
sti
test
into
pushf
cmc
sbb
mov
js
inc
jge
add
cmp
outsb
bound
ss
mov
cmp
xchg
test
add
add
cmp
stos
outsl
outsb
fwait
in
lea
push
push
cmpl
push
int3
xchg
sub
mov
mov
int
aad
and
jbe
movsl
sbb
outsl
arpl
push
pushf
xchg
lret
jge
sbb
sbb
pop
inc
mov
mov
enter
popf
xchg
imulb
nop
adc
fs
jg
in
lret
push
add
es
push
je
cmp
loopne
add
adc
cmc
push
ja
adc
clc
cmp
repz
cmp
outsb
cmp
add
xchg
aam
das
dec
push
jns
xchg
xor
jne
fwait
cs
loopne
xor
and
mov
push
dec
scas
popf
out
pop
pop
js
adcb
fwait
mov
addb
cmc
mov
cmpsl
lret
stos
mov
cltd
icebp
fists
cmp
cwtl
dec
pop
loopne
xorl
and
data16
mov
fwait
push
xchg
adc
push
adc
inc
ret
mov
push
jl
into
pushf
lea
inc
push
inc
ret
loope
jecxz
inc
pop
or
cld
jb
addr16
cmp
shlb
rorb
sub
mov
call
cmp
xor
inc
cmp
repz
sub
aaa
add
inc
shll
outsl
je
icebp
xor
adc
adc
sbb
and
pop
and
cmpsb
into
sbb
pop
loope
loope
or
int3
mov
xor
inc
pop
or
imul
lahf
sub
gs
jno
test
dec
jmp
and
in
mov
fcom
inc
int
cs
mov
cmp
lea
pusha
add
sbb
loopne
in
mov
cld
mov
and
addl
xchg
cltd
jecxz
xchg
mov
or
add
out
inc
subl
push
mov
mov
pop
dec
push
call
movsl
mov
mov
add
lret
scas
lods
bound
sub
sbb
lcall
jae
cld
sub
stos
cmp
cmp
lods
fcompp
adcl
jno
push
push
cld
daa
push
sub
mov
js
pop
cs
std
sbb
mov
xchg
popf
xchg
adc
outsl
mov
inc
sub
stc
and
xchg
inc
add
test
negl
outsl
cmp
fistpl
int3
inc
sub
add
add
aas
daa
lods
inc
dec
mov
inc
sbb
push
mov
sti
insb
push
outsl
scas
mov
movsb
sub
loopne
inc
sbbb
lahf
push
roll
cs
mov
mov
aaa
or
dec
mov
ljmp
inc
stos
fldcw
movsb
inc
rcr
ljmp
mov
lahf
sbb
rorl
jmp
and
inc
ss
inc
idiv
aas
mov
loop
mov
ljmp
cltd
mov
fildl
into
mov
push
mov
rorb
sbb
fstpl
test
xchg
stos
pop
mov
popf
jl
pop
pop
int
cmpsb
fists
xchg
and
pop
jg
sbb
xchg
fdiv
adc
cmp
cmp
jecxz
divl
push
mov
mov
cli
stc
add
mov
fldl
mov
or
and
push
negb
sbb
push
cmpsl
fistps
out
pop
add
dec
lock
lods
lcall
js
cs
sahf
mov
jmp
jge
rolb
mov
scas
xor
lret
add
hlt
or
subl
push
adc
leave
jbe
cmp
or
jae
hlt
pop
jo
sub
dec
in
xor
andl
clc
or
mov
jecxz
rorl
mov
pushf
mov
sahf
dec
loopne
adc
stos
add
xor
pop
insb
lods
xor
xlat
jnp
pop
mov
sbb
mov
aad
nop
insb
les
or
out
in
push
mov
pop
inc
cmc
and
roll
pop
adc
js
sub
dec
xchg
pusha
push
inc
in
mov
xor
adc
fstpl
in
push
movsl
or
push
aas
loopne
or
or
test
mov
push
cs
dec
sbb
adc
insl
adc
enter
adc
bound
fs
call
sbb
fists
or
mov
sbb
adc
mov
std
repz
mov
pop
dec
mov
clc
push
mov
daa
push
popf
xor
jge
and
lret
pop
dec
jmp
push
fmull
into
add
jne
mulb
cld
lea
mov
fwait
adc
pushf
and
adc
push
jne
cmp
cltd
clc
test
ss
mov
ror
adc
ret
addl
cli
jecxz
repz
mov
inc
mov
jl
lods
fwait
sbb
popf
into
xor
mov
in
sbb
pop
test
mov
sbb
or
cwtl
imul
mov
imul
jmp
int
and
sub
add
scas
shll
lods
mov
push
inc
in
dec
push
and
sbb
lods
xor
inc
icebp
inc
aad
adc
movsb
pop
test
mov
mov
dec
mov
sbb
mov
pop
xchg
adc
pushf
add
mov
mov
cli
das
dec
pop
stc
outsb
int3
add
adc
cmp
mov
and
fnstcw
xlat
lcall
add
icebp
out
ret
mov
ljmp
push
ror
loopne
lcall
sub
mov
aaa
call
jb
repnz
push
in
repz
or
lahf
inc
lods
add
mov
mov
fs
popf
stos
pop
loopne
imul
cmp
je
add
xchg
js
mov
imul
cli
sbb
pusha
jns
xchg
adc
test
sub
or
repnz
push
test
jmp
jg
rcrl
cmp
cmp
jecxz
movsb
lods
and
rclb
aam
pop
pop
pop
scas
insb
push
push
fildll
or
xchg
popf
aaa
dec
mov
xor
adc
mov
aaa
lahf
in
outsl
ja
pop
addr16
stos
lret
sbb
jae
ret
xchg
pop
ss
sub
sub
loop
xchg
pop
jle
or
sub
cmp
lret
sti
add
add
add
mov
stos
or
pusha
push
add
and
stc
test
xor
cmpb
cmpsb
or
fisubrs
out
rcrb
sub
push
mov
jnp
pushf
bound
or
sarl
and
pop
and
cmp
popa
cmp
das
push
mov
test
lcall
insl
pop
ret
push
pusha
xor
sub
sbb
xchg
clc
jg
lock
mov
insb
aas
pop
int3
jmp
out
mov
insl
inc
xor
ss
out
out
sahf
sbb
jp
jg
lcall
inc
enter
sub
pop
push
mov
xchg
pop
cmp
pop
repnz
jo
mov
and
lods
add
jb
ss
cmp
jbe
add
repz
sub
mulb
repz
loop
cs
and
cmc
adc
cmp
loope
xchg
dec
repz
mov
jmp
lods
outsl
or
dec
ljmp
xchg
mov
xor
dec
popf
outsb
cmp
loope
pop
cmp
mov
into
add
adc
lods
push
jp
js
inc
pop
mov
push
jp
and
push
fidivs
int3
xor
in
add
lods
out
inc
xchg
ret
or
mov
xchg
test
sbb
daa
pop
or
mov
jns
sahf
mov
shll
outsb
inc
imul
cld
mov
pop
outsb
mov
pop
mov
lahf
pop
adc
and
inc
add
xchg
aam
sbb
clc
and
jmp
jp
popa
push
fcomps
cmpsl
movsb
push
sbb
xchg
cwtl
rcrb
insl
mov
lret
lds
pop
sarb
fbld
out
push
iret
pop
xchg
out
xor
add
xor
mov
push
xor
push
jecxz
xchg
add
lods
stos
xor
bound
lcall
push
xchg
or
and
xor
rorl
mov
add
push
decb
xchg
dec
imul
imul
mov
inc
push
add
loopne
repz
js
push
stos
lcall
movsb
pop
xor
fwait
cmp
in
outsb
and
inc
push
pop
xchg
xor
out
pop
sbb
mov
or
pop
je
stc
imul
sbb
int3
mov
jbe,pt
std
adc
pop
cwtl
subl
shll
cltd
adc
lret
pop
mov
xchg
call
pop
xor
pop
sbb
jae
sub
loopne
jno
inc
imull
mov
or
int3
insb
cmp
push
imul
mov
sub
or
jp
xlat
jne
cmp
loop
es
leave
dec
xor
popa
add
mov
lret
mov
dec
sub
leave
andl
push
outsl
shr
sahf
pop
repnz
cmp
movsb
cld
in
add
popa
prefetch
adc
mov
push
sbb
xor
xchg
imul
fidivl
ja
dec
repz
in
xor
dec
inc
mov
jne
inc
into
ret
sbb
jb
inc
imul
daa
jb
ja
pop
fistpl
dec
push
cmp
fstl
jns
mov
xchg
std
or
int3
inc
mov
sbb
and
dec
or
sub
xor
sub
loop
fs
ret
cvtps2pd
add
sar
cld
mov
mov
out
pop
push
add
lahf
cwtl
leave
cmp
add
dec
ljmp
test
or
jmp
js
dec
push
lret
out
cmp
stos
mov
adcl
xchg
mov
mov
gs
push
add
int
int
shlb
fisttpll
loope
mov
in
lcall
sahf
inc
in
dec
and
dec
jecxz
mov
jne
xor
pop
jbe
fistps
dec
aaa
fistl
lahf
xchg
jecxz
mov
pushf
mov
mov
pop
jo
push
addl
adc
popf
jnp
mov
loop
add
mov
cmp
test
add
lahf
mov
mov
scas
gs
mov
das
push
incl
gs
sbb
shll
int
stos
daa
jecxz
sbb
aad
arpl
movsb
fstl
rcll
stos
pusha
cmp
fdivl
inc
and
sti
dec
inc
adc
xor
cmpsb
in
test
fwait
mov
push
scas
xchg
ret
cmp
mov
mov
loopne
xor
dec
scas
push
roll
imul
sub
adc
cwtl
movsb
cmpsb
imul
ja
push
xchg
pop
pop
jmp
mov
sahf
xchg
xchg
inc
push
mov
cltd
push
pop
int
xor
push
mov
aaa
gs
add
arpl
stos
mov
xchg
ljmp
mov
adc
in
dec
rolb
pop
aas
ret
ljmp
xchg
int
and
fiadds
add
cmp
inc
lds
lahf
mov
out
jg
jno
cmp
pop
jnp
and
sbbl
lahf
test
add
pushf
jnp
jae
mov
in
jbe
and
sub
and
mov
ljmp
sbb
push
jne
cmp
call
aas
sti
xchg
dec
ds
xor
mov
and
dec
jle
pop
inc
push
mov
cmpsb
sahf
sub
pop
jns
add
ja
test
gs
xchg
xor
das
cmp
std
fiadds
jl
adc
sahf
cmp
cs
xchg
xorl
mov
aaa
int3
cwtl
fnclex
in
test
pop
sub
mov
inc
cmc
cwtl
imul
push
lock
jns
push
inc
sub
xchg
or
cs
push
ds
mov
jmp
cld
push
nop
daa
push
inc
mov
lods
cmp
cmp
aaa
pop
adc
inc
or
add
xchg
pop
loope
bound
xor
pop
mov
scas
iret
movb
ret
std
sub
jge
insb
or
jne
imul
push
pop
leave
cmp
cmp
mov
lods
pop
or
push
call
fistpll
adc
jmp
or
adc
adc
fcom
ss
pop
push
cmp
pop
jmp
cmp
mov
mov
ss
out
push
aas
subl
sub
stos
rcll
mov
lcall
js
xchg
mov
aaa
xchg
outsl
addr16
cmp
push
mov
idivl
inc
add
out
cld
lock
ljmp
lcall
aas
leave
repz
adc
and
dec
mov
xchg
aad
fnstsw
jns
insl
enter
scas
in
mov
lods
cmp
rorb
cmp
jecxz
stos
sub
pop
cmp
xchg
scas
push
rcl
mov
out
decl
fisubrs
addb
mov
je
mov
pop
add
aas
xchg
dec
mov
ret
pushf
pushf
test
jmp
imul
mov
aas
and
loop
das
pop
addr16
cs
mov
cmpsb
xchg
jp
add
popf
jmp
popa
insb
sub
int3
jb
sbb
mov
insb
pop
mov
jno
fadds
cld
mov
push
jp
and
pop
cmp
push
inc
rcrl
sub
scas
js
rcr
push
lods
push
fnstsw
out
aas
subl
inc
mov
gs
sub
dec
mov
and
adc
inc
mov
mov
mov
fsts
mov
lcall
test
mov
inc
inc
sbb
and
test
dec
cli
mov
test
daa
into
mov
shlb
dec
shlb
fdivl
mov
add
pop
jecxz
pop
mov
mov
sub
out
lahf
pop
pop
mulb
or
cmpl
ss
cmpsl
sarl
mov
mov
imul
or
xchg
test
sbb
dec
mov
mov
pushf
add
inc
add
f2xm1
lahf
das
dec
imul
add
stos
mov
ja
xchg
lret
dec
jnp
call
movsl
fildll
lahf
sbbl
mov
lds
push
insl
add
xor
xchg
sub
or
inc
xchg
pushl
adc
pusha
cmp
mov
sub
loopne
push
in
subl
enter
cmp
xchg
lock
add
cmpsl
xchg
std
mov
ljmp
dec
mov
div
cmp
xor
pop
mov
push
or
lock
dec
inc
aaa
cmc
loopne
call
jecxz
rorl
movsb
test
push
jmp
mov
in
push
push
outsl
movsb
scas
dec
mov
dec
or
call
xchg
int
hlt
shrl
shlb
test
or
jnp
cmpsl
push
push
ja
scas
je
cltd
sbb
push
sbb
ficoms
and
jge
cmpsl
dec
out
mov
push
ja
mov
cmp
sbb
adc
sbb
sub
xchg
jo
inc
scas
xchg
pop
imul
adc
fwait
in
push
test
xor
dec
or
mov
mov
pop
sarl
mov
in
mull
or
jbe
imul
push
pop
lahf
jno
pusha
repnz
jecxz
xor
int3
pop
mov
inc
lret
mov
xchg
negl
fldenv
ltr
cmp
jmp
fs
pop
push
addr16
mov
aas
cwtl
jno
nop
sbb
in
loop
push
xor
mov
mov
mov
mov
sub
mov
pop
fstl
sbb
inc
in
dec
lods
in
cld
psubusw
je
mov
les
lds
xor
je
lds
jg
ret
clc
movsl
xor
sbb
sub
mov
inc
out
mov
pop
out
arpl
daa
inc
mov
xchg
or
shrb
add
je
loope
push
push
roll
andb
push
lods
les
je
inc
popa
je
or
inc
mov
movsb
outsb
push
dec
cmp
outsl
mov
ja
push
jg
push
jae
dec
mov
mov
sbb
push
jbe
dec
das
aaa
fcmovb
adc
movsl
add
xchg
jo
sti
icebp
mov
and
std
sbb
inc
dec
inc
sbb
mov
cmp
mov
cmp
xor
push
push
cmpsl
scas
mov
sbb
xchg
lret
mov
decl
sub
inc
test
cmpsl
xor
or
inc
mov
mov
popa
mov
faddl
scas
mov
add
test
xlat
inc
push
pop
xchg
xor
test
fmull
mov
inc
das
frstor
adcb
stc
cmpsl
jb
inc
or
enter
sub
fdivs
int3
mov
es
mov
daa
mov
adc
out
cltd
out
jle
dec
cltd
out
inc
adc
inc
push
mov
lods
and
inc
mov
mov
or
jb
call
mov
or
push
push
int
int3
mov
sbb
mov
xchg
fsubs
dec
pop
inc
into
sti
jle
jl
loope
jle
xchg
sbb
nop
inc
sbb
mov
jp
out
cmp
or
xor
add
out
cmp
xor
add
das
xchg
pop
or
iret
adc
xor
jecxz
inc
sbb
das
mov
jmp
mov
cs
cmp
mov
push
jne
popf
pop
mov
jbe
cmc
push
push
mov
sub
es
xchg
mov
xor
enter
xchg
cmpsb
outsl
push
mov
xlat
mov
stos
data16
xchg
pop
sbb
mov
jne
shlb
inc
inc
mov
cmp
bound
loopne
ljmp
cmp
outsb
dec
pusha
adc
sub
sbb
popa
xchg
xchg
xor
rcrl
jnp
leave
ret
jp
lods
sbb
mov
push
jnp
or
push
jne
out
stos
or
incb
adc
pop
xchg
icebp
lahf
iret
enter
add
bound
add
sti
pusha
sbb
insb
lcall
daa
push
std
adc
inc
cli
pusha
bound
stos
std
mov
sbb
cmp
movsl
mov
sbb
add
mov
out
popa
insb
mov
pop
repnz
jge
orb
ss
xchg
popa
sub
push
ss
clc
lods
adc
inc
dec
and
cmp
icebp
mov
add
xchg
xchg
add
in
adc
fldt
cmpsb
pop
sbb
fwait
test
test
jo
fdivrl
iret
imul
mov
jmp
push
inc
cmp
mov
mov
fmull
sub
notb
sahf
sub
insl
int
das
lea
out
push
inc
shl
div
and
push
int
push
ret
ja
and
mov
sar
mov
dec
cmp
add
adc
adc
mov
pop
lea
clc
xchg
or
pop
in
dec
fdivrl
imul
mov
or
jl
insb
lret
pop
sti
dec
jmp
sbb
cld
pop
in
dec
fdivrl
imul
mov
or
jl
insb
lret
pop
sti
dec
jmp
sbb
cld
pop
in
lret
fdivrl
imul
or
lret
pop
sti
dec
jmp
sbb
cld
pop
in
dec
pop
jnp
imul
shll
mov
or
or
xor
add
adc
pop
outsl
out
idivb
cmc
xor
out
pushw
push
popf
push
mov
pop
outsl
out
testb
pop
xchg
das
cmpsb
aas
mov
inc
fists
data16
jbe
push
scas
push
scas
es
ja
notb
xchg
aaa
cmpsb
aas
mov
js
or
push
lock
inc
call
mov
pop
inc
pop
push
out
movsl
clc
push
dec
pop
and
data16
and
lods
mov
into
into
mov
or
stos
stos
mov
adc
ja
popf
scas
es
lret
mov
lcall
pushl
cwtl
xchg
test
arpl
popl
arpl
dec
cmp
cmpsb
out
loop
xchg
xchg
dec
ds
jne
inc
ficompl
lahf
inc
and
mov
sub
xor
imul
sbb
lcall
push
daa
scas
cmpsw
inc
mov
xor
sbb
xor
mov
scas
jbe
stc
int3
loop
xor
outsl
out
negb
xchg
xchg
das
cmpsb
es
inc
push
mull
jbe
push
xchg
mov
mov
add
jl
jns
sub
sbb
movsb
rclb
xchg
pushf
add
pop
arpl
pop
mov
mov
mov
sbb
push
fistpl
xchg
xor
inc
ljmp
iret
inc
fists
pushw
push
lahf
push
scas
es
outsl
out
testb
pop
xchg
das
cmpsb
aas
mov
inc
fists
pushw
push
lahf
push
scas
es
ret
rclb
daa
arpl
subb
lahf
xchg
add
lret
inc
out
shrl
addl
ret
test
xchg
push
mov
mov
js
out
mov
or
dec
mov
pop
test
inc
jge
xchg
sbb
push
cmp
aaa
movsl
dec
out
add
xchg
popf
addr16
xchg
jmp
sub
outsl
and
loop
aad
add
cmpsb
xlat
mov
orb
repnz
sub
push
rorl
jae
in
fisttps
pop
adc
fisttps
lods
das
imul
lcall
js
je
or
loopne
cmc
push
jnp
mov
pop
cmpsb
mov
xchg
es
gs
pmulhuw
repz
jb
in
dec
mov
roll
lcall
test
cmc
adc
xchg
xchg
scas
mov
sub
iret
cld
jns
in
sub
arpl
add
or
mov
inc
xor
test
jecxz
cmp
test
js
inc
fdivrl
sbb
loop
test
pusha
cmc
and
cs
mov
xor
jmp
call
ds
call
insb
xchg
imul
es
sahf
sub
jl
inc
scas
lds
test
fs
movsb
mov
sahf
jb
push
mov
cmpsb
push
jo
jp
xor
sub
cmp
test
sbb
jbe
out
mov
xorl
sbb
lcall
cmp
lea
lds
sbbl
rcrl
pop
lds
jo
push
fdiv
fistl
xor
mov
aad
jno
and
xchg
cmp
out
mov
add
out
leave
std
pop
sbbb
xchg
or
pusha
xor
inc
mov
and
xor
dec
and
fdivrl
in
lret
inc
lsl
inc
lods
in
test
dec
sbb
push
ljmp
cmpsl
lea
cmpsl
je
int
aaa
sub
test
dec
push
lahf
mov
or
dec
mov
and
sbbl
imulb
stc
inc
vunpckhps
lret
mov
adc
ret
lock
mov
pop
lret
xor
loope
nop
test
fistps
mov
push
xchg
mov
fisttpl
mov
dec
cmp
mov
pusha
pushf
cmp
and
ja
inc
clc
xor
pop
fisttps
jl
icebp
xchg
pop
in
xchg
sti
js
lea
inc
nop
sbb
iret
mov
and
dec
scas
jns
inc
inc
adc
out
pop
fcmovnbe
pop
and
xlat
xchg
into
ljmp
fs
repnz
xchg
lock
jo
addr16
ja
sub
ds
xchg
addr16
and
mov
cli
out
xchg
int3
push
insb
and
ret
add
and
fdivp
int
enter
negl
jge
mov
cmc
fstps
jo
insb
dec
popl
fsubrl
lcall
adc
xchg
dec
mov
in
mov
int3
int
ret
adc
mov
mov
data16
das
cltd
and
add
mov
jnp
aas
push
sub
xor
jne
sub
daa
dec
test
cmp
xor
or
push
scas
js
mov
xchg
jnp
jle
lea
mov
popf
jb
xor
adc
pop
mov
xor
ret
xchg
rolb
ja
mov
sahf
push
je
jnp
or
xchg
mov
and
jb
in
shlb
in
psrlq
dec
add
bound
popa
fistl
or
cmp
pop
insl
add
cld
lds
das
pop
mul
and
stos
leave
mov
lahf
outsb
into
push
cmpsl
into
dec
push
shlb
and
inc
loop
mov
mov
push
xor
pop
rclb
pop
push
xor
add
stc
cwtl
push
sarl
movsl
add
repz
rcrl
sbb
jge
sbb
aas
and
mov
mov
andb
out
xsaves
test
or
mov
adc
dec
or
ret
gs
jmp
pop
pop
mov
mov
rol
ljmp
sbbb
inc
adc
fisubs
out
mov
inc
xchg
sub
shl
ljmp
mov
stos
lock
cltd
push
stc
scas
stos
imul
test
mov
les
dec
push
add
mov
loop
mov
mov
push
rorb
ret
rcll
cmpsb
pop
icebp
mov
xor
push
pop
stos
sbb
mov
add
mov
rorl
jnp
and
inc
jnp
movsb
enter
cltd
mov
or
pop
ds
push
xor
lret
dec
fisttpl
subl
or
sarb
repnz
sub
cmpsl
adc
ljmp
ficomps
out
pop
or
jne
mov
rcr
jne
enter
jmp
negl
dec
jbe
jae
jnp
jbe
int3
in
cmp
xor
repz
adc
cmp
stos
inc
negb
pop
pop
jge
out
repz
xor
div
stc
sub
mov
scas
daa
ds
inc
jmp
lods
daa
jo
in
add
sub
push
inc
ljmp
or
inc
frstor
cmp
lahf
loopne
pusha
into
outsl
xchg
mov
ret
adc
sbb
push
xchg
in
data16
clc
arpl
insb
push
lret
sub
push
xchg
imul
push
sub
and
sbb
outsb
jbe
sahf
lahf
xchg
lret
push
roll
faddp
mov
fucom
jecxz
in
xchg
icebp
xorb
jo
sub
incl
mov
popa
xorl
scas
mov
xor
jecxz
loope
jnp
jge
out
xorb
je
cmp
push
test
cmp
mov
dec
jmp
push
loop
xchg
add
loopne
imul
pop
inc
dec
add
jbe
lock
mov
int
push
std
sbb
cmp
inc
add
adc
mov
dec
rorb
lret
sub
cltd
pop
stos
repnz
fwait
lods
mov
in
mov
or
pop
cmp
stc
test
movsb
cmpsl
xor
shll
sbb
jmp
sti
push
adc
or
fcomp
inc
cli
xchg
les
shrl
xchg
dec
jge
dec
insb
loope
sub
dec
jle
int
dec
add
lods
mov
xor
out
movsl
pop
std
inc
pop
test
rorb
push
sbb
adc
add
stos
or
sub
dec
rcll
inc
mov
push
inc
pop
push
cli
loop
lea
in
out
movsl
pop
mov
loop
push
xor
hlt
daa
pop
push
ret
aam
rep
das
mov
xchg
lea
mov
xchg
push
lods
cmp
sarl
add
cmpsl
mov
addr16
and
sub
sbb
cwtl
in
pop
jmp
fsubrl
fldpi
arpl
les
and
pop
mov
ret
int3
cmpsl
and
lret
out
scas
scas
xchg
add
jno
mov
loopne
insl
int3
mov
or
idivb
push
jp
xor
dec
shll
jno
sbb
sub
or
jae
sbb
cmp
dec
add
loop
fwait
push
xor
clc
repnz
mov
jmp
mov
cmp
or
dec
cmc
lock
mov
xor
adc
inc
jge
push
popa
jecxz
mov
aas
xchg
ret
mov
sub
sti
cmp
lret
imul
pop
cmp
add
enter
xor
cmc
add
adc
sbb
jecxz
sub
popf
push
pop
jns
push
stc
jle,pn
push
inc
fisubrs
dec
mov
adc
jecxz
lods
cmp
and
pushf
add
jecxz
das
sbbl
jbe
add
xor
mov
movsb
push
xor
outsl
lcall
push
sbbl
and
add
jbe
push
or
bnd
sbb
out
outsl
pop
in
fidivs
jle
mov
push
je
inc
dec
adc
mov
loopne
dec
sahf
sbb
mov
cld
idivb
add
jns
negl
clc
int
adc
push
mov
stc
add
lret
adc
popf
pop
cmp
xlat
movsb
jecxz
mov
pushl
xor
push
cwtl
cmc
mov
inc
xchg
ja
fidivrs
mov
addr16
mov
xor
xchg
and
testb
sbbb
lods
push
ja
jno
sti
jae
fildl
or
in
add
xor
daa
fildl
lea
push
xor
mov
cmp
cmpsb
daa
cmp
adcl
or
mov
xchg
push
pusha
jg
fisubrl
and
cmp
dec
adc
mov
mov
sti
pop
cmp
xchg
mov
testb
xchg
sbb
xchg
jnp
adcb
in
mov
stos
repnz
fsubrs
pop
ds
adc
roll
bound
fstps
cmp
aam
jo
cmpsb
cs
sub
push
pop
cmpsb
ljmp
ss
fbld
lea
xchg
sbb
lods
lds
and
repz
jg
in
adc
leave
out
mov
mov
adc
nop
cld
dec
inc
divl
lret
add
lret
mov
lock
mov
rcr
adc
les
out
jo
xchg
ja
xchg
cld
sbb
mov
cltd
sub
add
int
scas
mov
pop
and
and
repz
dec
adc
lods
jge
xor
repnz
imul
jp
dec
mov
sarl
adc
adc
popf
out
push
sysenter
lcall
flds
xchg
push
fidivrs
add
test
mov
or
xchg
mov
mov
inc
xor
mov
fs
mov
jmp
inc
fcoml
inc
jp
mov
jb
mov
scas
mov
repnz
aam
mov
je
fistl
sbb
out
inc
daa
mov
ja
sar
add
pop
faddp
andb
push
inc
imul
dec
push
aas
pop
xchg
inc
fwait
cmc
fdivp
insl
test
mov
loope
insl
setle
pusha
add
mov
test
jnp
imul
fstl
sub
ss
clc
inc
dec
mov
sbb
add
out
mov
adc
cmp
dec
popa
xor
cwtl
lock
cmp
fnstcw
push
mov
push
shlb
flds
addr16
sub
jecxz
mov
int3
cmc
cmp
xchg
push
add
loopne
mov
scas
orl
xor
sarl
jae
push
shl
scas
pop
push
stos
mov
lcall
jmp
mov
rcr
sti
mov
std
sub
imul
int
cmp
xor
add
clc
adc
xor
sarl
or
pop
jecxz
int3
push
sbb
outsl
aaa
pop
ja
movsb
inc
adc
mov
push
jo
mov
mov
mov
xchg
cmp
frndint
or
push
fwait
into
lea
sbb
loop
or
outsl
call
lea
fisttps
jb
xor
testl
mov
mov
add
jo
xlat
mov
inc
jnp
and
push
orb
fiadds
mov
inc
adc
mov
xchg
sub
int3
lret
aas
pusha
or
lret
test
stc
pop
insl
lahf
jae
or
mov
aas
and
fdivrl
xor
mov
inc
push
or
and
cmp
les
or
pop
mov
xchg
cmpsl
cmp
sbb
jbe
imul
lret
fldcw
mulb
push
or
imul
cmp
cmp
xor
pusha
and
xchg
inc
into
mov
rol
or
ret
pop
add
aas
lock
notl
lods
fwait
bound
sbbl
push
loopne
insb
mov
popf
inc
mov
sbbb
ret
xchg
pop
dec
push
dec
jmp
mov
dec
sub
movsb
and
aas
into
outsl
pop
fdivrl
mov
leave
adc
lods
mov
or
sub
inc
mov
cwtl
adc
imul
push
sub
inc
add
sbb
push
sub
rcll
arpl
ss
xchg
es
dec
leave
lcall
inc
sbb
repnz
push
and
pop
adc
mov
cmpsb
and
enter
mov
pop
mov
repz
jae
mov
add
les
adc
lods
xchg
pop
lods
fnstsw
aaa
cltd
push
adc
outsl
xchg
mov
loopw
subb
cmpsl
dec
pop
push
or
mov
outsb
mov
sub
pusha
xlat
daa
mov
shll
imulw
in
jns
dec
in
inc
sbb
push
pop
xorl
clc
int3
dec
adc
sub
xor
in
test
jp
test
inc
push
push
inc
inc
mov
mov
stc
aam
cmp
fsubs
frstor
div
stos
mov
in
in
xchg
stos
or
xor
cwtl
adc
mov
push
or
lahf
sbb
xchg
movsl
lret
inc
add
lods
adc
xchg
and
dec
or
cmp
fdivs
stos
lcall
inc
sbb
rol
mov
addr16
shlb
push
mov
and
fdivr
sbb
push
cmp
cmc
out
xchg
and
mov
push
add
xchg
mov
inc
cmp
sub
fwait
das
les
stc
pushf
cli
xchg
inc
leave
mov
test
pushl
xor
es
push
cld
xadd
dec
push
test
mov
je
leave
iret
hlt
fbld
or
pop
les
orb
push
cmpsl
daa
imul
pop
shlb
bound
sub
jno
mov
shr
push
cmp
cmp
pop
fldenv
and
inc
or
mov
push
jecxz
xchg
jbe
insb
sbbl
jmp
sub
and
out
sbbb
mov
imul
sahf
stc
enter
sbb
add
pop
xchg
std
stc
mov
cld
xchg
push
adc
mov
es
aaa
dec
movsl
xchg
out
add
lret
dec
fs
out
mov
jg
movsb
sbb
jge
das
lea
rcrl
lods
push
xchg
loopne
dec
popf
out
mov
sbb
pusha
rorb
clc
pop
dec
mov
inc
mov
shlb
sub
cld
popa
mov
pop
adc
leave
mov
xor
test
jne
or
mov
ss
sahf
push
jp
popf
inc
cmp
jl
inc
sti
pushf
dec
inc
dec
out
popf
out
and
test
pop
and
push
aam
fstl
mov
lret
xchg
data16
cmp
mov
shrl
cld
push
arpl
lret
sarb
out
mov
jmp
and
aad
ror
inc
jbe
pop
mov
push
push
pop
adc
lret
xorl
ja
ljmp
pop
pop
xchg
cmp
or
add
pop
or
negl
addl
push
fldenv
and
loopne
fwait
out
ss
cld
dec
stc
xchg
data16
mov
pop
jg
testl
insb
frstor
jg
in
sarb
mov
testl
push
hlt
or
xchg
sub
fs
dec
dec
ljmp
je
mov
ja
push
mov
adc
ljmp
push
mov
xchg
sub
mov
lea
stos
adc
mov
and
inc
test
cltd
mov
xchg
fiaddl
loopne
xchg
aam
or
dec
out
insl
fsubrl
mov
mov
xchg
mulb
pop
and
xchg
adc
lret
ficompl
sub
jno
xor
leavew
shl
iret
fadds
movsl
outsb
dec
fisubl
xor
lods
cmp
push
std
mov
mov
jne
inc
mov
fcomip
inc
xchg
dec
movsl
add
out
jp
mov
cli
out
dec
pop
addr16
ret
mov
jl
sbb
jne
lods
lods
sti
clc
cmc
lret
fistpll
jmp
cmp
sahf
ja
andl
pop
ret
fimuls
in
mov
rol
mov
xchg
jge
pop
cmp
insb
xchg
mov
adc
arpl
cmpb
or
test
cmp
jp
pop
pop
aad
lea
push
add
jle
movsl
and
aam
cmpsl
mov
xor
cmp
stos
pop
pop
leave
add
daa
loope
fs
and
imul
inc
insb
fsubrl
add
scas
sbb
arpl
out
jmp
lahf
xor
mov
xchg
adc
addr16
gs
push
test
sbb
sub
imul
jle
outsb
leave
mov
mov
mov
je
subl
es
rcrb
xchg
aad
jbe
and
loopne
and
jns
dec
mov
mov
push
jo
lcall
daa
aam
mov
stos
lods
enter
dec
sbb
and
mov
jo
add
fsubl
lods
je
pop
xchg
bound
cmc
xorb
dec
jg
imul
mov
mov
and
scas
idivb
lock
popf
cmp
adc
xchg
and
mov
mov
imul
ja
add
jp
in
testl
leave
decb
arpl
stos
adc
inc
cltd
sbb
mov
jle
mov
jb
int3
mov
orl
enter
loop
adc
movsb
dec
sbb
inc
sub
xor
mov
or
mov
push
mov
stc
out
mov
lret
in
leave
cli
aas
pop
push
negb
ss
push
lea
stos
push
sbb
cmc
nop
xor
mov
mov
ss
lahf
icebp
push
ret
pop
add
push
test
mov
add
dec
flds
add
mov
shll
sub
into
fnstcw
push
popa
sub
lock
movsl
gs
xor
iret
adc
push
push
insb
test
fisttpl
cmc
adc
xchg
cmp
outsl
inc
int3
loopne
or
xchg
inc
decb
mov
pop
sub
jge
inc
xchg
add
inc
in
push
adc
mulb
dec
xlat
xchg
inc
test
mov
add
call
or
es
icebp
adc
dec
stc
pop
xchg
push
repz
jns
xor
int3
arpl
fidivl
mulb
sbb
fidivrl
leave
repnz
dec
pop
add
icebp
fistps
mov
insb
and
addb
fcoms
testl
addr16
cmp
aam
push
sub
jp
jb
cmpsl
fndisi(8087
outsl
cli
popf
das
fwait
or
lods
sub
ljmp
rcll
or
testb
mov
addl
sbb
jno
mov
mov
sbb
mov
cmpsb
mov
add
insb
je
inc
outsl
lahf
pushf
mov
sahf
notb
cmp
lds
sbb
into
aad
mov
sbb
mov
dec
jno
arpl
repz
sub
jns
dec
pop
out
pusha
cs
mov
outsb
testl
aas
fisttpll
sbb
and
and
adcb
inc
mov
push
inc
pop
mov
mov
rcrb
insb
sti
mov
jg
mov
add
popa
psrlq
imul
loop
aas
cmp
mov
cmp
add
sti
sub
xchg
add
add
fdivr
inc
xor
jbe
sub
xchg
cmp
add
cwtd
add
xchg
mov
lret
movsb
inc
dec
mov
subb
cwtl
test
ret
sahf
jg
lods
sbb
inc
std
lcall
sub
xchg
mov
and
add
fdivs
push
jo
daa
leave
mov
inc
sti
test
mov
lock
cltd
aam
mov
in
and
sbb
jno
ljmp
je
addr16
cmpsl
gs
insl
and
mov
lcall
mov
sub
ret
jae
mov
mov
fimull
dec
aaa
lods
pop
in
std
repnz
cmp
mov
dec
dec
into
mov
dec
stos
movsb
sub
lock
orb
lcall
call
mov
shrl
xor
dec
pushf
leave
movsl
out
movsl
mov
adc
insl
push
lea
sbb
mov
sub
fadd
sbb
sbb
ret
cli
sti
sbb
xchg
dec
and
mov
sbb
pop
xor
lret
testb
scas
imul
lea
out
popa
sbb
jne
scas
cmc
jne
daa
push
sbb
pop
jo
loop
inc
aam
movsl
dec
jbe
insl
add
test
dec
gs
testb
pop
xchg
das
cmpsb
aas
mov
inc
fists
pushw
push
lahf
push
scas
es
outsl
out
testb
pop
xchg
das
cmpsb
aas
mov
inc
fists
pushw
push
lahf
push
scas
es
outsl
out
testl
cmpsl
aas
mov
inc
fists
pushw
pop
sahf
push
scas
es
outsb
out
repnz
es
cld
inc
incw
clc
mov
jmp
inc
add
push
repz
mov
push
push
inc
inc
sahf
jb
arpl
and
and
roll
jecxz
xchg
inc
adcl
mov
xchg
adc
add
xor
and
shll
jecxz
xchg
jne
sbb
push
test
adc
push
jo
push
adc
ret
push
mov
dec
mov
mov
push
inc
push
out
pop
pop
sbb
test
xchg
dec
xchg
lret
mov
cmp
mov
in
sar
mov
outsb
fstpt
cld
jl
lds
xchg
cs
test
test
ss
sub
add
sysexit
xchg
push
scas
gs
movsl
mov
jne
pop
mov
sbb
mov
sarl
mov
jbe
push
mov
mov
ret
arpl
scas
imul
mov
js
cli
ret
ljmp
dec
cmpsb
dec
adc
xchg
lds
jae
fbld
add
mov
jecxz
xchg
inc
adcl
mov
cmp
adc
add
xor
and
cmpsl
add
lods
pop
shl
out
hlt
adc
xor
icebp
in
add
orb
xchg
push
pushf
mov
push
xchg
pop
notb
out
mov
fildl
in
loopne
testl
aad
cmpb
jbe
cmc
nop
dec
ret
pop
rorb
adcl
mov
xchg
jae
arpl
xor
and
roll
jecxz
xchg
inc
adcl
mov
xchg
jae
arpl
xor
and
roll
mov
loopne
mov
push
dec
inc
lret
lock
and
and
mov
and
mov
test
sbb
mov
pop
lods
inc
cli
cmp
call
xchg
gs
rcrl
mov
aas
into
daa
or
ret
sbb
imul
cwtl
sub
add
lret
incl
add
ljmp
insb
movsb
and
es
or
bound
xchg
or
mov
sub
pusha
arpl
lock
jle
test
addr16
xchg
mov
fwait
cmovp
add
push
outsl
jbe
subb
imul
pop
shl
jno
outsb
aaa
pop
outsb
pusha
inc
and
idiv
adc
stos
dec
jnp
mov
pop
hlt
scas
out
mov
jnp
or
popa
xchg
aam
shlb
jg
loop
xchg
in
mov
sub
in
std
jb
hlt
mov
fiaddl
dec
jecxz
or
mov
sub
nop
jne
repnz
xor
leave
testl
fwait
jnp
sub
dec
push
jge
jp
push
mov
xchg
out
lods
xchg
jns
clc
adc
andb
jp
das
xor
xchg
cli
xor
ljmp
jmp
xlat
jno
cmp
mov
inc
bound
jbe
xchg
sbb
hlt
push
loope
sbb
jp
rcll
cmp
xchg
cmpsl
shll
inc
cli
mov
aaa
dec
dec
popa
fwait
xchg
cmpsl
inc
jo
push
outsb
call
idivb
pop
xlat
imul
add
sub
ret
lret
adcl
fwait
ja
je
push
mov
or
inc
pop
cmpsb
insl
push
orb
imulb
pushf
cmc
mov
sahf
int
int3
clc
insb
cli
fistps
xchg
or
mov
adc
mov
mov
adc
rolb
sub
mov
push
sahf
jg
sub
loopne
fsubr
leave
movsl
and
mov
sarb
inc
mov
push
gs
pop
mov
adc
mov
mov
push
ljmp
inc
mov
dec
fnstsw
fxam
jae
ljmp
push
int
movsb
ret
out
pop
fildll
adc
dec
gs
xchg
imul
adc
loope
jecxz
push
push
lret
jns
js
sub
lahf
adc
and
lret
and
push
push
aam
ja
jecxz
mov
andb
popf
lret
add
push
nop
lds
or
mov
push
bound
dec
mov
daa
xor
adc
add
pop
mov
xchg
inc
loop
add
mov
scas
or
lods
hlt
fiaddl
xor
into
andb
lods
in
les
add
sub
fadd
adc
sbb
lcall
mov
addr16
adc
movsl
mov
pop
and
or
in
pop
sti
les
je
enter
jl
adc
mov
cmpsb
sarb
subb
xchg
sub
lods
jne
xor
roll
sbb
xlat
mov
insl
sti
fisubrl
cwtl
cmpsb
movsb
in
pop
and
cmp
dec
fimull
jmp
sbb
aas
call
or
xchg
mov
xor
ret
cmp
push
pop
mov
pop
add
add
push
aam
adc
popa
xchg
push
sbb
icebp
cld
xorb
xchg
pop
mov
mov
adc
dec
stos
rcll
add
les
jns
push
mov
xor
popa
insb
cmp
dec
out
fsubr
outsl
and
lea
adc
push
lcall
jnp
imul
sub
bound
mov
sbb
in
pop
into
jp
pop
mov
xchg
inc
es
pushf
xchg
mov
add
outsl
popa
sub
push
lods
sbb
sub
insb
leave
mov
stos
fildl
jl
rolb
fstl
stc
xchg
sub
jmp
loop
push
loop
pop
jo
fldl
out
add
fldpi
imul
cmp
out
mov
popa
sar
xor
mov
ficoms
aas
imulb
mov
and
xor
out
imul
jmpw
adc
ffree
into
in
fucomi
rcrl
sub
jg
int3
dec
insl
jp
or
sbb
int3
lock
or
fsubs
stos
aad
jno
xlat
lahf
adc
fs
fldl
cmp
int3
sti
fidivl
aas
or
and
pop
fsubl
sbb
cltd
in
pop
shlb
mov
movsb
jg
std
aas
mov
cld
popf
in
mov
call
mov
cmpsb
adc
sbb
fldl
jge
lea
xor
xchg
fldt
pop
cmp
aad
sbb
xchg
mov
jnp
in
lock
cmp
movsl
repz
add
lock
mov
ja
dec
xor
pop
in
mov
dec
scas
sub
push
sbb
or
mov
jle
das
xchg
inc
imul
pop
insb
jg
sbbl
and
push
dec
sar
sbb
mov
xchg
les
int
movb
nop
call
pop
into
adc
data16
xor
aaa
lcall
ss
xor
and
dec
clc
mov
nop
popf
repnz
mov
push
add
mov
sti
jne
outsl
clc
scas
pop
pushf
cli
inc
sub
in
aad
push
adc
ljmp
mov
adcb
adc
xchg
icebp
push
push
mov
push
and
sub
shrl
ret
stos
dec
sti
sub
aam
mov
loope
mov
insl
push
sar
and
xchg
xchg
xor
sbb
icebp
lcall
jno
mov
inc
mov
dec
movsl
inc
inc
imul
data16
mov
xchg
sbb
xlat
mull
enter
dec
int
fistpll
aas
and
xor
jmp
add
in
fs
mov
out
cmpsb
out
and
lock
lock
jl
add
andl
sbb
ficompl
jmp
nop
xchg
fisubrs
int
add
inc
cmp
pop
and
subl
xor
push
xchg
bound
jecxz
stos
push
rcr
push
out
dec
mov
aam
and
dec
daa
sti
ds
aas
pop
push
xor
mov
cmp
insb
cmp
and
dec
jbe
cmp
or
adcb
test
and
xchg
fistl
pushf
shrl
das
add
pushf
push
int3
xor
ds
xorl
movsb
cmp
or
lock
js
or
je
xlat
ret
mov
int
cmpsl
out
pop
sbb
mov
popa
mov
outsb
mov
jnp
xchg
cs
std
mov
clc
sub
jmp
pcmpeqw
dec
push
inc
inc
cltd
out
and
add
sahf
dec
and
push
daa
jp
mov
jnp
out
daa
push
xor
or
lods
arpl
cmp
loop
push
imul
mov
movsl
out
lds
xchg
jb
stc
cld
or
and
out
ja
cltd
iret
loopne
loopne
test
fs
inc
fisttps
lcall
addr16
or
int
ficoms
inc
or
ss
add
loope
test
dec
jne
das
or
jg
mov
test
jecxz
inc
pop
jmp
mov
cltd
mov
or
dec
push
inc
mov
and
jne
rclb
xchg
popa
jbe
out
loope
pop
xchg
sbb
fs
xorb
cs
movsb
ret
jbe
dec
xor
inc
fistps
add
data16
bound
stos
jns
cmpsl
xor
mov
repnz
lds
inc
adc
orb
pushf
andb
ficoms
call
lods
jbe
cmp
sub
stos
inc
arpl
imul
add
cwtl
inc
pop
cmpsb
les
xor
cmp
cmc
xlat
lods
jp
push
sub
sub
sbb
sbb
xchg
mov
or
mov
scas
mov
cmp
shlb
aad
push
sub
sbb
shrl
jns
mov
insl
les
xlat
and
mov
repnz
jl
inc
sub
push
test
ret
fs
aad
sub
lock
xchg
mov
cmp
rcl
outsl
in
jne
cld
jp
dec
jge
out
les
aas
dec
dec
push
adc
jp
jb
sbb
lods
jno
adc
rol
xchg
out
sub
fisttpl
adc
lret
xchg
xchg
out
jge
sub
fucomip
lahf
mov
scas
rcll
pop
pushf
push
pop
addl
push
adc
ss
xchg
fidivrl
daa
popa
push
stos
rorl
fildll
icebp
int
inc
sbb
andl
ja
cld
sbb
ret
pop
rcrl
lret
sbb
cmovo
mov
icebp
mov
fdivrp
dec
idiv
test
jmp
sub
pushf
cmp
sbb
ret
insl
push
sahf
or
mov
fldlg2
into
cmp
orl
movsb
mov
mov
pop
cmp
and
pop
mov
ss
add
aam
subl
dec
or
mov
xchg
jle
sub
imul
imul
mov
daa
js
outsl
pusha
sub
pop
xor
fs
xchg
xchg
ret
add
or
push
sub
sub
shlb
out
cwtl
stos
inc
scas
push
gs
daa
mov
sub
jo
dec
fldenv
insl
shlb
add
dec
call
xor
dec
xchg
loope
call
aam
mov
mov
or
sbb
leave
dec
sub
xorl
sub
ret
test
lods
jmp
stos
push
sar
xorl
clc
in
addr16
int3
inc
int
clc
push
and
andl
fucomi
jmp
es
ja
ficoml
mov
jl
arpl
xor
movsb
inc
mov
mov
mov
ja
dec
out
and
pop
lea
mov
sub
cmpsb
in
popa
pushf
dec
les
int
xchg
fsubr
sub
dec
push
xor
imul
cld
movsl
push
sbb
iret
inc
addl
out
push
daa
and
cli
sbb
outsl
cli
or
xchg
mov
sbb
and
adc
jmp
xlat
das
js,pt
out
pop
movl
fwait
test
arpl
add
xor
out
ss
sub
nop
and
neg
orl
or
shlb
fists
ds
xchg
outsb
cmp
mov
mov
ret
fisubrl
inc
icebp
push
pop
jg
xor
pop
cmc
jp
mov
in
lds
xchg
sub
loop
cmpsb
std
and
addl
pop
sbb
mov
lods
jmp
cmp
movsb
xor
aad
leave
push
sub
cmc
xor
das
les
add
inc
add
imul
outsb
dec
sub
notl
jo
mov
cld
pop
scas
and
loopne
pop
adc
test
mov
cmp
cmp
in
adc
icebp
outsl
call
outsl
imul
and
aas
addr16
mov
push
jne
out
mov
cmp
stc
and
cwtd
test
popa
inc
mov
ja
xchg
outsl
add
out
movb
mov
mov
sbb
mov
inc
lret
push
jns
mov
mov
pop
jns
fstpl
in
push
add
nop
push
sbb
stc
jo
insb
jg
jmp
sbb
mov
aas
je
daa
add
mov
add
xchg
dec
or
push
jb
xchg
addb
cli
in
sub
mov
push
andb
inc
mov
xlat
fmull
mov
scas
pop
jno
mov
dec
jno
stos
mov
and
inc
pusha
mulb
shlb
test
or
in
xchg
sti
das
sub
jp
add
movsl
jns
push
mov
sbbl
hlt
and
es
stos
fildl
fists
neg
movb
loope
out
push
inc
mov
mov
adc
fcoml
sub
das
adc
add
push
inc
femms
dec
imul
popl
data16
pop
dec
ja
loop
or
sub
mov
xor
sahf
mov
mov
ljmp
push
scas
icebp
jns
lods
jno
bound
es
arpl
pop
pop
and
popf
pop
add
adc
add
outsb
jb
test
jp
sub
and
and
xchg
rclb
sahf
fs
lea
mov
xchg
mov
out
dec
test
stc
xchg
inc
pushf
sbbb
sbb
fdivl
lret
aas
imul
ret
cwtl
pusha
fs
js
shll
mov
repz
aaa
inc
inc
or
fistpll
cli
std
test
sub
mov
lcall
push
jns
je
cmp
cmp
std
pusha
inc
mov
fcoms
pop
rcll
shl
outsb
in
mov
ret
mov
test
mov
les
stos
and
push
xor
fdivrp
sub
test
loopne
mov
cmp
fdivrs
add
sti
fidivrl
mov
sub
cld
icebp
push
xchg
pop
ffree
fists
xor
fidivs
popf
mov
cmp
sti
inc
push
xchg
icebp
jl
adcl
or
outsb
cli
jns
sar
xor
sbb
in
mov
out
mov
or
or
xor
mov
mov
in
pushf
or
aaa
sarb
cmp
mov
rol
std
loop
inc
inc
aas
fs
push
out
rsqrtps
in
pop
inc
xor
add
mov
cmp
mov
icebp
lods
scas
movsb
push
cld
or
add
setns
add
push
sbb
and
cmc
mov
and
cmp
add
mov
mov
cmpsl
mov
mov
scas
outsl
cmpsl
sbb
fwait
repnz
push
xor
add
in
sti
cmpb
xorl
test
fs
adc
push
ljmp
movsl
or
addr16
ret
stos
int3
and
arpl
loope
xchg
push
scas
push
sbbb
sbb
adc
mov
mov
loop
jecxz
sub
push
popw
in
cmp
psrlw
mov
inc
xchg
lock
adc
dec
cmp
pop
mov
je
jmp
sbb
xor
pop
leave
push
push
aas
fsubs
repnz
cmc
push
inc
or
popf
test
out
clc
clc
outsl
ds
loopne
nop
xchg
fisubrl
leave
inc
and
jg
inc
jae
loop
push
or
xchg
mov
out
xor
pop
add
scas
fiadds
jmp
dec
xlat
inc
movsb
lret
jl
test
loop
fs
dec
jle
push
mov
out
mov
xchg
in
sbb
outsb
xchg
seto
jns
scas
mov
or
adc
mov
std
std
dec
push
sbb
movsb
enter
push
pop
jbe
mov
popf
push
insl
and
faddp
jp
mull
leave
inc
push
cmp
sub
loope
lret
aaa
mov
xchg
and
lret
mov
xchg
or
or
jecxz
cltd
out
gs
cmp
jbe
cmpsb
int3
mov
xchg
jo
sti
cmp
mov
es
xlat
sub
jae
stc
xor
or
xchg
repz
leave
idivl
adc
push
mov
out
mov
dec
idivb
mov
jae
and
pop
pop
mov
incl
jl
fnstenv
mov
mov
fildll
ret
movsb
repz
jbe
mov
pop
mov
addb
sbb
imul
lea
or
inc
in
inc
dec
enter
jg
enter
xchg
fs
popf
mov
xor
shrl
cmp
in
repz
test
pusha
call
clc
ret
inc
jg
movsl
lods
adc
fnstenv
arpl
and
mov
or
repnz
in
notb
lret
dec
mov
fisubrs
and
stc
roll
sbb
cltd
repnz
add
push
cltd
loopne
outsl
jae
insb
movsb
mov
test
mov
add
andl
mov
stos
push
push
sbb
repz
cmp
pop
add
xchg
adc
xchg
out
xor
lahf
enter
push
xlat
cs
push
adc
repnz
mov
into
outsl
sub
js
into
ds
dec
mov
sub
or
jecxz
sbb
hlt
movsb
nop
mov
fiadds
in
dec
add
jp
mov
add
in
xor
xchg
xchg
out
stc
idivb
mov
icebp
and
testb
je
ficoml
xchg
mov
out
rcrb
mov
and
or
leave
sub
std
sbb
test
cmp
hlt
sbb
and
cmp
mov
jmp
pop
in
mov
xchg
push
dec
xchg
test
dec
adc
fdivrl
sbb
jb
sub
push
imul
imul
test
nop
sub
dec
mov
xlat
lock
or
movsb
test
fdivp
scas
dec
pop
sub
sti
out
pop
jns
orl
dec
mov
xchg
mov
pop
fisubs
push
cmp
outsl
cmp
into
lahf
test
push
aas
inc
jecxz
into
movzwl
mov
clc
das
iret
add
or
xchg
adc
cmpb
lods
mov
lcall
mov
jg
pusha
or
loopne
faddl
xor
dec
xor
mov
inc
or
std
pop
ret
dec
add
sub
xchg
jbe
outsl
das
test
cmp
popa
dec
pop
push
bound
dec
jae
ss
sub
jmp
cmp
jo
adc
insb
call
add
dec
ds
faddl
aaa
sar
pop
mov
xor
test
loope
cmp
and
fisttpll
mov
xchg
test
sub
nop
push
pusha
push
scas
addr16
idivl
add
pop
pop
insb
inc
xchg
shlb
lods
cwtl
sbb
nop
dec
mov
add
leave
sbb
push
sbb
inc
xchg
mov
dec
mov
jo
leave
sub
add
push
stos
iret
push
enter
iret
pushf
les
ret
pop
inc
es
and
adcl
test
dec
jo
jge
rolb
cmpsb
fdivp
mov
and
xchg
mov
inc
orl
mov
and
fcoms
faddl
adc
in
ljmp
mov
les
push
stos
mov
push
mov
jge
add
nop
enter
xchg
ret
jecxz
cltd
in
test
bound
nop
cmp
mov
iret
bnd
push
inc
lea
ficomps
pusha
xlat
mov
hlt
jo
sti
rclb
pop
adc
insb
jns
dec
aad
dec
cmc
shlb
or
adc
sub
or
ret
shll
inc
repz
cld
gs
dec
cmp
ds
addb
dec
sbbl
push
cwtl
outsb
lods
mov
jne
cld
xor
stc
mov
clc
and
xor
add
add
sbb
xor
mov
cltd
mov
fmull
jmp
fisubl
xchg
dec
repz
clc
dec
std
lods
or
dec
je
testl
xchg
int
leave
cmp
pop
hlt
aam
orl
cmp
das
fs
cli
push
sahf
or
sbb
fistpl
mov
xchg
cltd
xor
lret
test
pop
and
mov
jnp
ja
into
imul
cmpsl
ja
and
enter
bound
pop
mov
mov
fld
pop
lods
test
gs
push
rcl
out
insb
out
mov
sub
int
cmpsb
jmp
or
sbb
mov
add
sarb
dec
inc
mov
stc
cmp
xor
icebp
test
lret
repz
movsl
popf
mov
leave
stc
pop
mov
sbb
in
inc
inc
sbb
sahf
push
lea
outsb
mov
adc
out
lahf
ljmp
push
add
xor
inc
fidivrl
xchg
sbb
or
hlt
sbb
mov
mov
dec
out
cld
shrl
sbb
mov
push
inc
adc
std
outsb
xchg
jb
sub
lods
mov
cmp
mov
addr16
lea
imul
ja
in
inc
cmp
leave
mov
lds
inc
xor
cmp
mov
xchg
xchg
pusha
adc
lret
int
std
movsb
mov
sbb
push
mull
inc
xor
sub
adc
xchg
inc
adcl
mov
xchg
jae
arpl
xor
and
roll
jecxz
xchg
inc
adcl
mov
xchg
jae
arpl
xor
and
roll
ret
sbb
cmp
cmpl
popa
mov
xchg
jae
arpl
in
and
shl
ret
shl
xchg
inc
adcl
mov
aas
fldenv
mov
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
cmp
or
aaa
mov
xlat
jnp
dec
pop
cmc
out
aaa
fwait
daa
mov
inc
jmp
repz
or
jnp
imul
out
pop
mov
daa
mov
xchg
inc
jmp
das
cmp
and
jnp
imul
out
jae
and
pop
jmp
xor
mov
mov
into
or
pop
outsb
sub
pop
xor
push
mov
arpl
inc
and
jp
push
loope
jae
mov
fucomi
test
sbb
ja
cwtl
lcall
mov
push
jae
jmp
test
push
inc
in
pop
es
daa
fildl
add
mov
jle
rsqrtps
dec
pop
sub
push
xor
mov
inc
pop
push
mov
fldcw
sti
inc
adc
push
dec
cmp
jl
insb
imul
test
aaa
bound
fldt
push
or
sub
mov
and
add
mov
sti
adc
ja
fs
cmp
sub
jnp
imul
inc
dec
sarl
pop
mov
sti
dec
jmp
aas
cmc
push
sbb
or
sbb
push
stos
push
incb
and
mov
loop
lds
or
xor
shlb
enter
xchg
sub
push
lea
movsb
sti
jg
arpl
imul
imul
out
pop
mov
daa
mov
inc
jmp
xchg
cmp
or
jnp
imul
out
pop
mov
daa
mov
inc
jmp
xchg
cmp
inc
jne
addr16
sbb
das
test
push
hlt
xor
out
lret
imul
pop
inc
xor
cmp
mov
sti
arpl
inc
inc
imulb
rolb
or
xchg
dec
xchg
mov
sub
dec
repnz
xchg
je
jmp
hlt
adc
aas
add
inc
pop
push
sub
dec
cmp
in
or
clc
lret
ds
and
sub
adcb
xchg
test
dec
xchg
pop
ds
ds
xor
jl
push
or
das
stos
js
cli
movsl
xlat
jnp
push
inc
sti
adc
aad
popf
ja
cmp
sub
push
into
cwtl
in
test
push
pop
mov
int3
sbb
xlat
jns
and
loop
ss
xchg
cmp
loopne
jae
imul
mov
clc
les
jo
loop
mov
cmp
ja
outsl
jle
lock
jno
ror
or
lret
push
jo
fistl
pop
mov
jo
cmpsl
and
jne
mov
out
add
sbb
pop
test
imul
dec
and
sub
aam
mov
rorb
add
and
shll
xchg
fiaddl
jle
scas
mov
mov
mov
cld
std
mov
mov
mov
mov
mov
jmp
fistpl
je
clc
jl
xchg
in
inc
lds
mov
xchg
add
test
ljmp
and
and
dec
sub
shll
and
in
and
pop
les
popf
shrb
cmp
scas
pusha
xchg
jl
jg
push
and
stc
jb,pn
cmpsb
jne
js
cmp
pop
bound
inc
mov
lret
pop
loope
rorl
mov
movb
imul
mov
and
cld
les
popa
pop
pop
jb
out
cmp
les
cmp
mov
mov
inc
ret
inc
shll
testb
clc
imul
dec
xchg
pusha
mov
pop
in
sbb
and
mov
push
ds
xchg
out
lods
dec
loope
in
sub
test
ret
push
in
js
jmp
dec
std
ja
mov
jno
jge
or
mov
inc
adc
sbb
push
pop
sub
test
push
cmpl
daa
mov
jnp
xchg
pusha
setne
lahf
stos
or
mov
ljmp
out
push
add
inc
dec
mov
out
div
int
leave
loopne
outsb
cmp
mov
test
out
mov
popa
bound
mov
adc
lret
jns
add
cmp
add
fistps
sub
push
jge
or
or
adc
dec
fcomps
es
fcompl
xchg
mov
push
mov
int
imul
test
pop
mulb
out
or
shlb
aaa
inc
xchg
aaa
xchg
xchg
sub
mov
movsl
add
aas
loopne
xor
xor
loop
movsl
adc
fwait
mov
jle
pop
mov
int3
jp
shlb
ret
mov
sbb
dec
pop
bound
ror
cmp
xchg
shlb
ss
fidivs
pop
mov
sbb
push
pop
inc
add
adc
fsts
add
mov
ficompl
out
xor
enter
mov
movsb
jle
xor
lods
pop
or
cmp
xor
pmulhuw
fidivl
push
int3
push
xchg
mov
sub
dec
in
andb
jmp
cmp
cmc
dec
repz
push
jo
push
push
xchg
pusha
cli
xor
rol
lret
movsb
test
imul
lods
in
or
push
jo
cs
ret
push
sbb
and
jb
cltd
jecxz
dec
out
aaa
jb
inc
xor
popa
pop
adcl
ljmp
repz
lahf
ss
jnp
inc
lods
cli
or
pushf
test
cmp
cmp
xchg
jbe
clc
mov
add
or
movsb
jmp
or
mov
jno
fwait
ss
push
dec
mov
and
mov
fists
xchg
cli
or
pop
jae
inc
repnz
icebp
xchg
test
mov
or
jl
xchg
jp
cmp
leave
ss
jecxz
cmp
shll
sub
cmpsl
dec
lahf
ficompl
arpl
adc
mull
or
je
leave
or
incl
lahf
ret
pop
jno
aaa
mov
incl
jmp
movsl
mov
insl
orl
xchg
inc
mov
mov
hlt
cmc
fnclex
in
add
sbbl
inc
and
adc
and
shrb
loope
les
add
pusha
bound
adc
or
xor
xchg
sub
mov
xchg
mov
and
mov
lret
and
add
sbb
dec
icebp
nop
adc
jle
int
inc
ds
insl
je
adcl
add
inc
or
inc
pop
sbb
cltd
mov
in
ja
add
inc
rcll
cld
enter
popa
ret
mov
bnd
push
lahf
pop
xchg
push
xchg
jg
pop
aaa
mov
arpl
pop
insl
mov
movsl
xlat
xor
aad
cmp
mov
pushf
and
movsb
dec
and
lds
push
xchg
or
jp
bound
js
cltd
and
jecxz
std
jecxz
xorl
dec
aad
xchg
push
pop
in
test
sbb
jle
and
xchg
push
rcl
ret
ja
leave
icebp
fcomi
mov
mov
mov
inc
mov
xchg
push
pop
dec
loope
inc
dec
mov
enter
jl
sbb
sarb
push
adc
out
pushf
jo
mov
stc
or
sbb
push
jmp
jnp
lret
adc
cmpsb
adcb
jmp
push
in
cmp
jl
mov
xchg
insl
jp
or
pop
test
je
jl
loop
xchg
mov
jo
dec
sbb
into
cld
adc
test
gs
lds
push
xor
ljmp
mov
sub
push
sbb
jp
dec
cmpsb
cs
cmpsb
divb
inc
sbb
and
inc
adc
inc
dec
pop
mov
pop
or
fwait
adc
roll
rcrb
dec
ret
and
test
pusha
add
jl
push
les
frstor
add
imull
dec
out
shlb
and
in
adc
sub
jmp
push
fwait
popl
es
xchg
push
sti
insl
scas
lahf
add
sarb
mov
lock
add
and
ret
dec
loop
jg
mov
pop
push
xchg
int3
inc
push
xchg
push
out
ret
test
dec
popa
daa
icebp
pop
stc
fwait
lret
insb
mov
push
xor
in
adcl
xor
push
or
or
negl
mov
sbb
dec
push
push
cmp
push
ja
xor
pop
fstps
mov
pop
call
xor
nop
dec
mov
cmp
mov
orb
mov
sub
pusha
xor
lea
mov
scas
mov
xor
mov
cmp
outsb
xchg
mov
lods
pop
cmp
mov
xchg
or
adc
mov
aam
ret
xchg
iret
cmpsl
dec
data16
cmpl
adc
nop
loopne
mov
fistps
inc
mov
sbb
in
dec
adc
mov
cli
and
test
or
sar
sub
int
jnp
lods
outsb
ret
dec
mov
stc
int3
mov
xorb
xor
jg
aas
jne
dec
inc
push
mov
insl
mov
xor
inc
add
push
mov
pop
mov
into
cltd
mov
pop
jbe
jle
and
mov
add
sbb
stc
mov
adc
ficompl
push
fisttpll
int
mov
dec
pop
add
xchg
inc
sub
push
in
out
loopne
push
aam
inc
pop
dec
cmpsl
es
in
mov
outsb
xchg
in
bound
add
mov
aaa
xor
push
pop
sub
in
pop
dec
mov
cmpb
jnp
jae
fstps
sbbl
rcrb
fmuls
aam
inc
call
in
fnstsw
maxps
inc
hlt
jo
inc
pusha
sub
xchg
and
movsl
xchg
fdiv
or
mov
mov
call
mov
add
inc
jmp
dec
fbld
out
js
xchg
out
sub
loop
je
out
pop
jb
add
movb
jae
call
pop
sbb
and
test
sub
addr16
adc
cmpsl
cmpsl
inc
hlt
push
adc
add
daa
ss
ret
push
lret
pop
mov
dec
cwtl
sub
and
int
sub
jecxz
mov
dec
push
push
sahf
call
cmc
movsb
and
mov
cmp
int
cli
enter
push
and
fmulp
scas
mov
sub
mov
and
test
jae
rdpmc
xor
ret
ret
or
xchg
and
jp
pop
pop
inc
mov
xchg
push
push
stc
je
movsb
inc
add
xchg
aas
cmp
ficompl
test
xchg
dec
mov
pop
mov
adc
aam
sbb
dec
addr16
mov
xlat
dec
dec
jns
adc
aad
mov
cmpsb
bound
mov
xor
cld
cmp
and
dec
rolb
mov
xlat
sub
faddp
nop
in
push
clc
bound
repz
adc
push
pop
xchg
scas
xor
inc
jecxz
dec
popf
outsb
int
push
scas
mov
stc
sub
or
jnp
das
dec
lock
fcomps
jmp
imul
pop
sub
lods
cld
push
xlat
mov
lret
int3
jp
fucomip
ljmp
punpcklbw
rorl
pop
clc
aaa
popf
arpl
stos
inc
push
push
and
sub
jns
fisttpl
sahf
fnstsw
cmp
mov
or
fidivrl
sub
push
add
pop
dec
cmp
add
jg
call
push
sub
xor
mov
pop
popa
int
test
lods
rcl
pop
push
mov
inc
or
add
mov
mov
xor
jnp
fwait
lret
fisttpl
lret
jae
dec
mov
ja
ss
ja
mov
mov
and
push
or
inc
addr16
outsb
fucom
into
pusha
rclb
adc
shlb
test
jmp
lods
xchg
adc
scas
adc
loope
sbb
mov
push
or
jp
mov
add
push
hlt
add
loopne
xchg
add
vcvtss2si
cmp
push
inc
sahf
pop
popf
out
xlat
fwait
xor
xorb
push
jnp
mov
jns
jne
loope
sahf
push
cs
in
popf
scas
cmp
and
cld
sarb
into
mov
daa
xor
rclb
je
mov
imul
hlt
mov
dec
sbb
jbe
xchg
dec
dec
add
push
mov
and
dec
repnz
mov
ret
dec
xor
sbb
adc
xorl
jbe
dec
xchg
adc
out
inc
into
xor
loope
fxch
jmp
jp
mov
sbb
dec
iret
pushf
scas
add
jp
sahf
cmp
rcr
mov
out
popa
call
jno
rdpmc
xchg
adc
out
jmp
dec
in
mov
iret
decl
xor
mov
mov
pop
test
mov
push
and
incb
sbb
xor
out
push
div
in
push
enter
ss
mov
imul
hlt
leave
xchg
mov
mov
mov
mov
mov
outsb
jge
xlat
sbb
out
push
stos
sub
pushf
mov
das
and
outsb
push
int3
loope
loopne
and
les
mov
mov
pusha
sub
mov
js
cwtl
push
cmp
stc
sub
pop
dec
xlat
pop
mov
sub
sbb
jmp
mov
cmp
and
sahf
ljmp
mov
outsl
jl
outsb
fsubrs
pop
push
mov
push
scas
adc
shlb
adc
ja
or
jo
idivl
mov
lcall
or
arpl
stc
aam
rcrl
cli
mov
pop
ljmp
lret
dec
das
dec
stos
or
xor
scas
sbb
data16
inc
sub
test
jg
hlt
push
pop
outsb
sbb
addr16
pop
lret
cmp
aad
mov
add
jns
xchg
sbb
mov
jecxz
pop
mov
mov
gs
pop
push
fldt
hlt
sbb
inc
sti
insb
cmc
xor
loop
xor
xchg
mov
sbb
adc
loop
cmc
mov
loopne
or
ja
jno
mov
adc
push
nop
clc
and
xor
mov
and
jo
xchg
rcrl
xor
pop
mov
xor
sbb
jne
es
fcmovb
dec
sub
loop
cmp
inc
and
stc
push
xchg
and
loopne
add
cmp
aas
out
jmp
cmpsl
mov
popf
cli
popa
or
dec
sbb
std
test
int3
daa
xor
cmp
in
mov
jge
xchg
dec
fnstcw
pop
test
xor
and
arpl
imul
dec
lds
push
out
adc
cmpl
inc
cs
iret
imull
jo
jg
in
xor
bound
jae
inc
push
aad
ret
mov
repnz
rol
jns
and
xor
outsb
pusha
es
add
sub
adc
aaa
sub
data16
sbb
inc
add
data16
and
dec
and
adc
pop
lods
add
fisttpll
dec
ja
cld
data16
mov
cmpsb
adc
push
imul
mov
rcrl
jns
int
pop
inc
rcrb
jo
dec
push
add
subb
jns
aam
dec
sbb
test
pop
imul
repz
mov
dec
imul
mov
aad
push
ds
out
push
push
mov
shlb
scas
xchg
mov
sbb
jbe
je
jb
in
xor
mov
idivb
xchg
in
add
sub
cmp
call
movsb
outsl
fbld
ret
and
add
cmpsl
push
push
mov
std
sbb
jge
xor
fldcw
pop
mov
daa
push
push
pop
xchg
jmp
cli
stos
popa
or
sub
add
std
scas
pop
inc
push
dec
mov
or
inc
add
fnstcw
xlat
pop
dec
pop
mov
sahf
dec
xor
push
dec
jne,pn
jl
cmpsb
jno,pn
pop
and
add
xor
cmp
push
xchg
decl
adc
xchg
adc
ficoml
les
push
push
jmp
xor
mov
and
lea
adc
inc
pop
shll
in
test
andb
xchg
call
jne
adcl
cmpsb
aam
sub
cmp
sti
aaa
cmc
shrb
gs
pop
mov
out
xchg
scas
xchg
insb
outsl
icebp
leave
stos
mov
jb
cmp
push
or
adc
insb
lret
int
mov
int
jp
fstpt
xor
or
test
mov
jb
mov
pop
movsl
and
push
insl
inc
push
fsubrl
es
lahf
jae
jl
popa
jg
shrl
in
jmp
jno
sti
rorl
psubb
jge
loope
les
mov
lods
gs
sub
icebp
adcl
push
cmc
pop
lea
ja
xor
mov
nop
add
fwait
int3
or
divb
ss
jbe
pushf
jno
pop
outsb
int3
lret
jle
mov
subl
jle
inc
push
inc
int
add
lods
fdivrs
jnp
xchg
mov
insb
stos
imul
ret
inc
test
cmp
int
and
push
cmp
jno
push
push
inc
mov
dec
pop
mov
mov
adc
jbe
xor
adc
xchg
movsb
sbb
mov
test
cs
out
addr16
adc
insb
lcall
pop
outsb
cli
fsubr
xorl
call
in
add
test
stos
cmp
xor
cmp
das
testl
and
loope
shrl
inc
pushf
outsb
xrelease
int3
sbb
fisttpl
inc
imul
ret
ror
ret
jae
jge
lea
in
sahf
sub
xchg
or
mov
inc
lock
or
dec
jae
mov
cmpsl
sahf
cmp
jl
jns
xlat
xor
loopne
jmp
ds
pop
out
fdivp
pop
push
inc
or
push
cwtl
test
stc
jp
or
and
lahf
or
cltd
les
sbb
mov
jg
and
ret
iret
enter
push
daa
cmpsl
fcomi
lcall
mov
pop
sbbb
push
cmp
fsubl
push
jg
outsl
jb
mov
call
loopne
adc
dec
es
inc
xor
aas
fcmovnbe
sbb
out
jb
add
shlb
outsb
mov
xchg
add
jb
sbb
repnz
jo
out
cmc
jns
inc
es
mov
jle
rcl
inc
fnstsw
shrl
push
mov
arpl
or
out
dec
pop
stc
add
add
mov
int
xor
fistl
mov
pop
mov
mov
jo
mov
mov
test
jge
ja
fsubrl
scas
jmp
pop
gs
xor
lcall
ficomps
in
lea
xchg
xchg
sbb
cs
mov
repnz
jns
jp
ficomps
lock
clc
lea
sbb
rorb
inc
mov
stos
cs
xor
fdivrs
jmp
push
mov
andb
negl
sbb
xchg
mov
jb
sub
js
call
std
or
stos
inc
mov
and
aad
scas
shrb
pusha
cli
cmpsl
mov
jo
sub
xchg
dec
pop
jp
ret
pop
adc
loop
dec
or
xor
jl
lock
cld
xchg
popf
leave
cltd
adc
or
insl
sub
in
pop
fcmovne
inc
outsb
add
mov
dec
xor
jns
popf
push
inc
inc
jmp
push
inc
jae
sahf
repz
cmp
out
dec
mov
out
lcall
test
or
call
cmp
int3
mov
add
pop
rcrl
mov
loop
xchg
call
in
xor
push
mov
add
fwait
loop
inc
xchg
lahf
or
adcl
loope
dec
repz
loop
inc
clc
nop
mov
xor
pop
movsb
imul
push
pop
nop
sub
push
pop
addr16
test
inc
jmp
fdivl
ja
mov
pop
js
push
aas
jnp
sti
inc
inc
adcb
fimull
es
xlat
push
jg
add
push
push
push
push
ret
xchg
inc
pop
icebp
rcrb
xor
cmpsl
cmp
xor
popl
enter
scas
mov
mov
shll
jp
mov
insl
call
mov
lcall
xor
or
pop
andl
dec
mov
arpl
out
cmp
sbb
mov
mov
jne
outsl
outsl
mov
es
ficoml
adc
shlb
sbb
jmp
cltd
cmpsb
inc
lcall
push
inc
jbe
dec
hlt
adc
sahf
dec
inc
cmp
mov
std
jge
mov
repnz
jmp
xchg
xorb
icebp
pop
psllw
popf
pop
push
push
or
jp
mov
pop
push
mov
andl
mov
or
fs
dec
orl
add
add
fstpt
jmp
xor
adc
stc
iret
fists
and
add
test
push
dec
out
addl
xlat
imul
push
and
sub
lcall
push
mov
rcl
inc
push
rcrb
mov
test
fcomip
sbb
sub
and
fdiv
ljmp
aam
into
sbb
ret
inc
pushf
jb
iret
stos
push
hlt
cmp
add
fildll
movsb
leave
repnz
xchg
movsl
ss
out
scas
mov
or
fidivl
int3
loope
push
aas
mov
push
in
imulb
loopw,pt
inc
dec
jo
imul
sbb
gs
add
adc
jecxz
outsl
popa
test
add
and
ffreep
daa
push
out
push
je
sbb
lock
imul
out
pop
mov
daa
mov
inc
jmp
xchg
cmp
or
jnp
imul
out
pop
mov
daa
mov
inc
jmp
xchg
cmp
or
imul
daa
dec
pop
mov
daa
mov
push
jmp
fisttpl
sub
sbb
imul
addr16
pop
mov
daa
cld
and
adc
and
xor
lea
ret
or
push
sub
loope
mov
ret
loope
rcll
and
push
add
xor
push
adc
loope
mov
ret
test
jmp
mov
inc
popa
push
sub
jge
mov
xor
in
lret
cmpsb
out
xorb
or
daa
jbe
cli
add
inc
fiaddl
adc
subb
movsb
das
xchg
xlat
lock
or
fidivrs
lds
xlat
pop
mov
mov
jo
push
xchg
dec
punpcklwd
adc
insb
stc
popa
adc
and
jg
outsb
pop
jg
push
xchg
insb
mov
je
pop
jb
inc
push
cli
jo
sahf
dec
push
jmp
repnz
out
jl,pt
jecxz
les
shll
rol
push
loop
adc
mov
add
loope
mov
mov
and
out
inc
movsb
js
jne
mov
dec
repnz
mov
mov
pop
xchg
xchg
roll
add
xchg
adc
insl
dec
jno
and
addb
and
ret
xchg
sahf
lcall
xchg
movsl
in
inc
and
push
adc
pop
inc
adc
inc
jnp
shlb
shll
movsl
roll
and
lret
pop
add
cmp
xchg
loopne
hlt
mov
movsl
and
out
movsb
repz
and
and
xor
popa
and
inc
add
rolb
mov
xor
bound
push
add
xor
push
adc
mov
mov
ret
loope
rcll
in
mov
stos
push
add
dec
and
mov
shlb
mov
aam
pop
xchg
orb
sub
rorb
xchg
sbb
arpl
or
test
fwait
cwtl
dec
xor
mov
inc
addr16
pop
xor
mov
push
sub
sub
mov
cmp
stos
mov
mov
xchg
lds
dec
setp
xchg
stc
sub
inc
mov
movsl
in
jnp
test
out
xchg
cmp
test
stos
jp
lock
outsl
lret
xchg
xchg
fsts
in
pop
xchg
add
mov
xor
incb
into
inc
pushf
xor
mov
ja
sti
or
jbe
sub
int3
jno
pop
sbb
cmp
mov
mov
inc
cltd
clc
jns
aaa
pop
add
jmp
dec
shrb
ljmp
xchg
roll
ror
push
data16
in
mov
jo
test
mov
and
cwtl
mov
sahf
dec
cmp
sbb
cld
insl
ja
inc
push
sbb
and
into
or
xchg
sbb
mov
sti
and
mov
and
out
mov
lret
clc
mov
sub
cli
movsb
add
inc
std
push
outsb
mov
dec
inc
imul
xchg
add
test
enter
int
cld
hlt
sub
jmp
inc
sub
lret
push
xlat
cmpsb
decb
sahf
dec
mov
sub
push
lds
in
mov
roll
lds
jmp
fimuls
int3
dec
add
xchg
addr16
or
push
fs
repnz
ret
adc
imul
out
aam
dec
push
sti
or
fisubrs
lret
sub
sbb
ja
insb
or
pop
cmpsl
sbb
test
out
push
aaa
adc
ljmp
mov
dec
fidivs
loop
jns
cmp
xchg
pop
mov
out
cmc
lds
in
insb
les
addr16
data16
call
loopne
jge
aas
ljmp
int
xor
xchg
mov
xor
cmp
mov
test
jae
ss
test
cld
inc
adc
cmc
add
lcall
or
shrl
outsl
pop
xor
popf
push
test
push
shrb
ss
add
xchg
and
dec
sbb
add
mov
or
mov
inc
and
repz
pop
mov
das
xor
xchg
jns
ret
dec
jecxz
add
lcall
movsl
dec
mov
nop
out
mov
inc
cmpsl
or
test
mov
popa
aam
les
jns
mov
jmp
repnz
jnp
mov
xchg
jmp
mov
cmp
stos
cli
mov
xchg
adc
inc
out
in
fcmovne
je
dec
cmp
icebp
mov
shl
test
xor
add
dec
xchg
ficomps
pop
pop
dec
pop
lret
or
insl
mov
test
shll
cmpsb
mov
rcll
mov
mov
clc
xor
adc
and
mov
addl
and
and
sub
inc
jns
fcmovbe
movsl
jg
es
into
inc
mov
jmp
scas
sub
into
cmp
ja
shrb
add
pop
push
add
jb
mov
xchg
xor
dec
mov
dec
lods
xor
sbb
mov
std
pop
ss
repnz
inc
xlat
adc
test
scas
and
dec
inc
lret
ret
xor
lods
add
sbb
fdivrs
add
add
xor
mov
sub
jno
jbe
scas
dec
add
add
mov
repz
jle
or
std
dec
cmpsb
stos
out
imul
ljmp
xchg
push
adc
icebp
pop
ja
push
mov
mov
es
fsubl
invd
cmp
push
fidivl
adc
jo
cltd
lret
xchg
outsb
es
push
add
mov
pushf
mov
and
inc
inc
addr16
ja
fyl2x
or
mov
inc
sub
inc
sub
add
xchg
mov
in
add
pop
cmp
xorb
into
sbb
push
hlt
test
pop
shll
adc
ja
js
mov
fs
add
ret
lret
mov
hlt
outsb
push
xchg
jmp
dec
movsl
stos
out
bnd
repnz
cmp
or
xchg
jno
jo
add
fcoms
xor
cmpb
ljmp
and
adc
sbb
jmp
fisubl
pop
push
mov
pop
xor
mov
push
psubd
cmp
movb
adcb
call
ss
pop
and
inc
insl
cmpsb
fs
pop
adc
mov
iret
and
sarb
xor
lods
push
jnp
fiaddl
ds
sub
or
lods
xchg
xor
into
push
aam
es
push
jg
xor
sbb
lock
pop
xchg
inc
push
std
and
xchg
dec
fsubrs
call
push
xor
ljmp
or
jmp
sbb
dec
xchg
aaa
pop
scas
push
movl
andb
adc
dec
rcll
xchg
xor
rcrb
mov
xlat
dec
lods
test
add
fs
ret
aad
dec
sbb
pop
lds
sbb
popl
inc
in
push
cmpsb
test
jno
dec
aas
out
add
dec
jo
mov
iret
add
cmp
roll
jmp
adc
jge
imul
xor
negb
rcll
mov
imul
arpl
mov
je
fwait
adc
mov
data16
mov
pushf
or
add
shll
jecxz
inc
inc
and
adc
xchg
jl
push
mov
mov
pop
xlat
pop
jecxz
xor
test
cmp
mov
aas
lret
cmp
or
gs
subb
mov
adc
fs
movsl
push
pop
push
xchg
jle
insb
movsb
pop
or
xor
iret
lcall
sbb
enter
insb
stos
or
add
int3
add
idiv
out
dec
loop
jl
xchg
push
push
scas
sub
mov
push
shrl
sbb
leave
das
popa
xchg
neg
sbbb
enter
test
js
xchg
push
in
lahf
shll
das
fwait
push
mov
shlb
cmpsl
pop
test
add
movsl
xor
pop
insl
adc
bound
mov
call
mov
out
push
mov
std
test
jbe
lds
sbb
xor
fwait
iret
dec
xor
cwtl
xor
aas
sub
rol
inc
jmp
mov
nop
add
mov
fwait
or
add
push
adc
mov
or
cmpsb
ret
mov
adc
fnstcw
imul
std
sbb
imul
iret
cmc
subl
leave
mov
xchg
stc
push
pop
jmp
mov
xchg
mov
inc
movsl
adc
es
adc
int
adc
inc
pop
cmp
out
jmp
pushf
test
fidivrl
pusha
push
loopne
adc
cmp
ficompl
lock
jae
cmpsb
int3
test
addb
dec
fcoml
jge
loopne
and
loope
mov
jne
or
lea
pop
fwait
pop
ljmp
jb
mov
jne
aas
nop
pop
imulb
cmc
mov
stc
lods
and
mov
jg
and
shrl
insb
and
je
test
xlat
jle
pushw
jl
push
leave
or
bound
and
jbe
out
test
out
das
pop
testl
out
push
dec
dec
movsl
dec
jno
cwtl
test
bound
cmp
xchg
or
dec
fwait
push
cltd
lds
cmpsl
outsl
aaa
hlt
dec
addr16
mov
mov
and
add
push
scas
sub
insb
leave
dec
int3
in
dec
adc
popa
pop
sub
rcrl
movsb
pop
loope
xchg
clc
push
out
mov
xlat
push
lret
stos
pop
out
enter
mov
xor
movsl
stos
mov
enter
mov
sub
xchg
test
fnstenv
mov
imul
jne
lods
icebp
cli
test
xor
cld
fstp
insb
aad
sti
push
orb
loope
scas
lret
adc
imul
or
repnz
and
jecxz
mov
adc
push
icebp
fistpll
lods
push
pop
push
stos
ja
scas
in
push
in
jae
cld
stc
mov
jb
mov
aam
scas
adc
es
scas
xor
fwait
cmp
cmp
cmp
sarl
mov
je
jp
test
inc
out
sub
mov
das
lahf
inc
mov
cs
mov
jns
inc
dec
xor
and
dec
aaa
lret
mov
mov
lea
cmpsb
mov
jnp
adc
mov
lock
add
sub
inc
repnz
pop
jecxz
and
filds
mov
pop
xorl
outsl
mov
pop
add
fwait
xor
lds
pop
sub
jnp
cmp
fs
mov
or
jl
pop
xchg
out
add
xor
push
cmp
jae
add
icebp
stc
and
ret
data16
push
notl
sar
repnz
testb
test
vunpcklps
repz
outsb
dec
pusha
mov
pop
stos
stc
sub
xor
xor
mov
sbb
sbb
out
pop
cltd
sbb
int3
xor
data16
mov
adc
sub
notb
test
xchg
or
fisubrl
and
fiadds
sub
into
addr16
sbb
xchg
arpl
sahf
leave
aam
dec
mov
call
mov
xor
xlat
loop
call
fdivs
xor
push
sub
sub
cmp
and
mov
mov
js
push
std
movsl
push
jle
sub
sub
or
scas
rcrb
mov
js
dec
pushl
mov
shrb
xchg
mov
fiaddl
movsb
adc
test
sub
adc
fnsave
loop
in
sti
cwtl
nop
insl
pop
mov
push
insb
push
lock
adc
stos
mov
decb
xor
in
lds
ret
pop
testb
cmpsl
xchg
roll
inc
mov
jle
xor
movsl
movsl
pop
aaa
dec
pusha
add
mov
in
xor
jne
dec
dec
mov
cmp
movsb
xlat
inc
jmp
repz
enter
dec
enter
test
out
xor
ret
sti
jo
mov
lcall
sub
pop
mov
insb
out
fcmovnbe
ds
js
faddl
xchg
sahf
scas
cli
out
shr
adc
pop
loope
push
sub
sbb
aad
mov
sub
in
xchg
add
int
bound
leave
pop
push
adc
push
test
mov
lds
imul
mov
jg
ja
adc
cwtl
xor
pop
cmp
adc
and
xchg
and
gs
ja,pn
adc
xchg
add
inc
out
inc
or
push
subl
daa
shlb
gs
roll
cmp
inc
xchg
pop
cmp
repnz
or
push
mov
mov
cmp
je
inc
adc
xchg
inc
or
sub
pcmpgtd
mov
sbb
pushf
arpl
out
push
xchg
add
fidivl
push
and
scas
fisttpll
cmpsb
addl
and
stos
scas
sub
sahf
mov
dec
pushl
daa
adc
leave
adc
mov
adc
bound
sbb
arpl
adc
int
mov
sbb
mov
inc
out
mov
inc
incb
xchg
data16
xchg
adc
pop
in
dec
das
pop
jo
sub
loop
cmp
dec
pop
dec
popl
push
ficompl
cld
icebp
xchg
mov
or
dec
add
out
fwait
xchg
sbb
andb
andb
insl
xlat
lea
push
cli
cmp
cmp
daa
inc
ss
enter
lcall
push
push
lods
ret
inc
out
setp
ds
and
scas
adc
mov
gs
out
mov
xchg
arpl
jb
xchg
cs
or
sti
jbe
popa
int
sub
jo
repz
cmpsb
cmp
and
sbb
or
mov
das
fbld
mov
mov
adc
or
mov
mov
pop
xchg
pop
mov
outsb
mov
jne
in
mov
in
push
or
ret
fs
arpl
lret
sbb
cmpsl
enter
cmp
inc
aaa
mov
push
arpl
in
rorb
insb
scas
aas
push
jnp
stos
dec
pop
or
jle
les
sti
pusha
mov
jne
push
jmp
adc
xchg
sub
sbb
and
inc
aaa
aam
popf
test
inc
std
cmc
push
dec
dec
popf
popf
ffree
and
xchg
xor
cmp
stos
es
icebp
mov
inc
jg
xchg
sub
push
nop
nop
xlat
cltd
mov
adc
dec
shrw
mov
add
and
insb
or
push
outsb
jo
popa
jb
in
imul
cli
subb
ret
popa
sub
pushf
jp
push
xchg
sahf
sbb
lods
rorl
xchg
jb
cmp
push
pop
shrb
fbstp
inc
aaa
push
lds
in
les
sbb
int3
cld
call
inc
cwtl
pop
xchg
sub
cmpb
repz
movsl
lret
pop
dec
loope
sbb
aaa
xor
xor
pushf
xor
add
out
sbb
std
movsl
jmp
in
adc
inc
insl
dec
ficompl
sub
cmp
xlat
mov
fstpl
popf
ljmp
mov
sub
ret
ret
mov
daa
cmp
jl
or
mov
outsb
mov
mov
inc
in
pop
pop
mov
pop
imul
sbb
mov
and
push
jnp
mov
dec
mov
dec
lds
mov
push
sub
bound
push
insb
incb
or
je
stc
xor
mov
orl
pop
addl
scas
inc
stc
jno
in
mov
ret
cwtl
popf
rolb
stos
dec
stos
pop
push
in
adc
pop
sub
pop
ja
jmp
nop
imul
push
pop
ss
pushf
cmp
pop
sahf
add
adc
mov
push
je
jmp
gs
faddl
insb
out
cmc
loope
or
lahf
add
jle
xor
add
cmpl
sbb
xorl
inc
mov
test
testl
jg
jnp
jno
mov
mov
mov
add
adc
push
sbb
jmp
xchg
push
movl
push
cmpsl
lret
iret
mov
mov
iret
int
into
mov
clc
jge
sub
sti
pop
xor
rorl
lock
addr16
mov
and
xchg
pop
icebp
sub
and
cld
push
push
push
nop
push
adc
xor
addl
cmpsb
mov
and
sti
mov
cmpsl
pop
mov
adc
shr
std
loop
adc
xchg
cmp
mov
lret
popa
sub
pop
inc
xorb
test
jge
xor
cmp
clc
push
mov
mov
int3
aas
leave
mov
xor
xor
lds
and
imul
das
cmp
fldenv
pushf
test
sahf
leave
mov
add
pusha
inc
sbb
in
mov
push
adc
hlt
test
and
std
stc
mov
repz
mov
dec
int
or
fs
clc
and
ret
inc
mov
xchg
cmpsl
aad
jmp
inc
incb
mov
cwtl
mov
push
cmp
mov
es
sub
cmp
addr16
push
xlat
lock
sub
push
add
cmpb
push
notl
ja
imul
jns
out
jns
push
cld
and
fucomi
addb
out
sahf
test
or
outsb
fs
loop
push
pop
or
scas
ljmp
fstpl
push
cld
xchg
mov
fildl
loopne
arpl
popa
jge
sub
test
fsubrs
xchg
fucomi
cld
shl
mov
jge
sti
cs
and
dec
loopne
out
negb
mov
into
mov
outsb
cmpsb
mov
and
movsb
mov
test
loopne
roll
push
lcall
test
loop
dec
aaa
sub
cmp
movsl
mov
fsubs
sub
loope
cmp
xchg
sarb
outsb
cmp
out
add
arpl
std
adc
pop
add
arpl
mov
dec
rcll
adc
imull
mov
outsl
mov
out
pop
pop
popa
fwait
callw
sbb
daa
xor
mov
inc
xor
imul
jle
test
jp
ficomps
fcomps
loopne
or
xor
dec
jge
imul
rorb
jmp
dec
xor
icebp
rorb
push
ret
mov
sbb
or
cs
cmpb
push
jecxz
fs
xchg
push
or
add
out
and
call
cmpsb
sahf
call
jne
ret
jae
or
testb
daa
mov
pop
gs
ret
daa
adc
jb
mov
cmp
inc
lods
insb
sub
ficompl
cmp
mov
cmp
sbb
mov
in
add
int
dec
pop
lret
pop
adc
xchg
jbe
rcrb
pop
orb
push
setg
aas
dec
sbb
push
rorb
movb
adc
movsl
js
aam
fs
cmp
js
fdivs
lahf
inc
adc
imul
jb,pn
and
out
and
popf
cli
jae
dec
pop
xor
cmp
shl
and
sub
mov
sub
test
pop
fisubrl
sbbl
push
add
mov
out
test
sub
test
in
xor
mov
sub
sub
loope
dec
decl
or
pop
mov
sub
repz
mov
xor
jmp
xor
push
in
pop
popf
ret
jns
sbb
int3
add
push
pop
fs
jle
mov
mov
mov
mov
fwait
pusha
js
cmp
cmp
mov
xchg
adc
fisttpl
and
fidivl
dec
mov
lods
int
jo
hlt
bound
ret
idiv
lds
xor
scas
ret
add
cmc
in
push
xchg
and
or
xor
mov
and
sbb
add
loope
nop
xchg
mov
out
mov
dec
faddl
fisttpll
pushf
dec
inc
xor
mov
fildll
sub
int3
fldln2
movsb
mov
cmp
in
enter
imul
inc
outsl
mov
inc
movsl
dec
sub
int3
and
fisttpl
or
vmovdqu
inc
pop
arpl
add
mov
mov
imul
mov
pop
cmp
mov
fwait
cmp
sti
mov
test
push
fbstp
sbbl
ds
insl
cmc
in
and
jb
xor
test
xor
les
jno
out
inc
pop
rorb
out
fadds
jecxz
in
insl
push
ret
outsl
lods
out
outsb
cmp
adc
out
push
out
mov
ja
sub
add
mov
pop
cmp
jl
das
enter
or
scas
pop
sbb
pop
repz
insb
jecxz
xor
scas
into
mov
pop
in
cmc
xchg
dec
jmp
sub
cmc
rol
dec
imul
add
add
and
pop
out
aaa
gs
xchg
lea
add
push
cli
repnz
sti
adc
pop
mov
ljmp
or
addr16
movsl
arpl
movsb
or
leave
call
call
mov
rorl
and
jmp
sbb
mov
jbe
or
ror
into
mov
jns
push
hlt
cmp
jb
sub
lods
or
xchg
dec
insb
xor
sbb
push
pushf
dec
cmpl
pop
sti
sub
out
or
adc
or
test
xchg
lods
or
cmp
jl
mov
add
nop
aas
fidivrl
add
pop
clc
xchg
stos
jp
ds
out
sub
sub
cwtl
lcall
and
fidivrl
pop
mov
add
xchg
cs
ret
imul
mov
rol
aaa
jae
test
call
ficompl
mov
int
adc
jecxz
test
test
mov
mov
jae
pop
and
inc
js
stc
mov
cmpsb
cmpsb
in
imul
in
adc
adcb
mov
bound
popa
and
inc
add
rolb
mov
xor
bound
push
add
xor
push
adc
mov
mov
ret
loope
rcll
and
add
add
xor
push
adc
mov
mov
ret
clc
mov
sub
bound
xor
push
xchg
roll
or
xorl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xor
rcll
dec
mov
xor
enter
push
add
add
add
or
add
add
add
pop
add
lcall
add
dec
add
add
add
str
dec
add
add
add
push
add
jp
fiaddl
mov
add
add
sbb
add
xchg
jp
addb
add
add
cmp
add
add
add
sbb
dec
add
add
add
adc
and
inc
add
add
add
add
adc
add
mov
add
add
xchg
add
enter
pop
add
iret
add
add
add
add
add
add
add
add
fwait
add
add
add
add
dec
add
add
add
out
add
lret
add
lret
add
add
adc
add
add
test
jl
add
sbb
add
add
add
add
fadds
data16
add
cmp
imul
add
inc
add
add
stos
add
add
jp
mov
or
dec
add
add
insl
add
add
add
add
fs
add
add
dec
add
add
add
add
dec
add
stos
add
add
pop
add
add
add
arpl
addb
add
add
test
lea
enter
or
fwait
add
dec
add
insl
add
add
arpl
inc
add
add
add
lods
add
add
add
add
add
add
add
test
lret
add
add
add
sub
in
add
add
add
jl
ss
add
add
out
add
add
add
mov
or
cmp
add
add
add
add
addb
add
insb
add
pop
add
add
adc
mov
pop
add
dec
add
add
mov
add
add
add
lret
add
add
add
add
jp
inc
add
add
add
add
bound
fwait
add
add
add
add
add
cwtl
add
add
add
add
push
add
add
add
add
imul
add
lret
add
add
add
add
add
add
fiaddl
jl
dec
add
jp
nop
add
add
push
add
add
sub
add
add
add
add
add
push
add
add
roll
test
mov
add
add
add
jno
insl
add
add
add
add
add
pop
add
dec
add
add
add
add
aas
add
add
add
add
add
add
inc
add
or
dec
add
lret
add
add
inc
add
add
jbe
xor
add
add
add
mov
mov
or
addb
add
add
push
add
add
add
add
add
add
add
add
add
mov
insl
add
add
add
out
jnp
pop
add
add
add
add
add
adc
dec
add
add
add
add
fs
aas
xlat
jnp
aaa
lret
leave
mov
and
jno
push
mull
mov
out
xor
clc
lods
cmpsb
push
in
push
mov
loop
jae
pop
sub
outsb
cltd
js
jl
sbb
lcall
xchg
xchg
push
dec
pop
or
sbbl
xchg
stos
xor
loopne
movsb
jl
scas
ss
ljmp
and
aas
int3
lods
pop
mov
push
repnz
arpl
dec
or
jae
stos
mov
xchg
incb
fwait
cltd
adc
stos
xor
pavgb
into
push
mov
movb
adc
outsb
or
jne
scas
jmp
shl
push
fldenv
xor
cmpsl
test
cmpsb
nop
ljmp
iret
cmp
add
jae
out
fstpl
popf
xchg
lods
daa
mov
mov
dec
adc
inc
fldpi
mov
adc
insl
les
jbe
repnz
daa
mov
inc
mov
repz
pop
xchg
sbb
dec
mov
lahf
mov
sbb
mov
enter
int3
daa
shll
cmp
add
out
jns
leave
insb
jle
xchg
iret
scas
sub
sbb
test
dec
mov
jmp
or
outsb
loopne
das
loop
inc
pop
jb
test
imulb
fsubl
je
out
ja
push
lods
sub
out
jle
lock
pop
mov
or
push
cmp
cltd
or
xchg
sub
xchg
add
decb
cmp
xor
inc
mov
mov
xchg
xor
mov
dec
xor
in
paddb
and
cmpsl
push
push
mov
sub
test
lret
shrb
dec
jmp
jns
ret
pop
sub
scas
pusha
ljmp
xchg
lret
and
jae
jae
cwtl
jmp
cltd
fimull
decl
popl
fists
inc
add
movsb
fwait
xchg
adc
aam
cmp
dec
sbb
out
pushf
scas
and
add
rcrl
pop
clc
cmp
jg
adc
popf
xchg
pop
ja
rolb
mov
sbb
adc
inc
adc
adc
xchg
into
xchg
rcrl
adc
nop
dec
cmp
rorb
cmp
add
adc
imul
lcall
jno
dec
lahf
dec
lahf
enter
jmp
jle
test
lret
add
imul
cmp
int3
inc
pop
pushf
push
fidivrs
xchg
push
mov
in
inc
jmp
outsb
popa
loopne
out
adc
test
mov
test
add
or
aad
and
mov
scas
sbb
xchg
jae
mov
addl
addr16
xor
andl
cwtl
xor
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
