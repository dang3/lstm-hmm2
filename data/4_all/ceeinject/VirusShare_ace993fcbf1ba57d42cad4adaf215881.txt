call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jae
daa
aas
push
das
inc
in
outsl
inc
sbb
xor
fidivs
out
xchg
ja
addr16
das
inc
pop
aaa
dec
daa
jg
outsl
sub
fildll
cmpsl
call
pop
aas
int
xor
dec
outsl
jg
outsl
xor
fidivs
cmpsb
rcr
and
xor
es
jg
aam
outsl
fiadds
mov
mov
sub
outsl
pop
stos
test
fs
dec
je
movsb
dec
and
pop
and
cmc
call
jo
out
and
negl
lret
push
xor
dec
mov
fcmovnb
fdivp
out
pop
lahf
neg
imul
push
cmp
cvtdq2ps
inc
fdivs
addr16
push
ret
inc
pop
and
lahf
xlat
outsl
mov
sub
aas
mov
in
loop
lock
inc
es
outsl
sti
not
cli
mov
aaa
scas
aaa
mov
cmpsl
mov
les
or
mov
cwtl
mov
stos
xchg
mov
addr16
mov
add
lods
stos
loop
jnp
in
inc
sti
cmova
and
inc
pop
aaa
dec
daa
jg
outsl
xchg
lahf
testl
dec
decl
dec
or
popa
sub
sub
bound
inc
divl
movsb
stos
lock
jecxz
out
inc
xor
and
sub
sub
jle
xor
xchg
loop
movl
lock
imul
sub
jnp
daa
jg
outsl
pop
lahf
testl
cmpsl
call
packuswb
push
das
inc
pop
aaa
dec
daa
jg
outsl
pop
lahf
testl
cmpsl
call
or
mov
jge
sub
inc
cs
mov
repnz
ficoms
sbb
iret
dec
dec
jecxz
out
push
ret
mov
lea
dec
pusha
scas
out
std
dec
lea
jp
iret
dec
cmpl
imul
mov
sub
data16
or
mov
pushf
xchg
xchg
dec
in
iret
sub
jae
cmp
inc
push
jmp
pop
popf
or
mov
cltd
sbb
subl
shll
cli
scas
push
lahf
pop
or
ret
test
loop
mov
push
scas
es
add
and
lea
ret
test
push
jmp
imul
adc
jnp
in
adc
mov
lret
shll
call
testb
mov
rcrb
orl
test
or
lds
out
mov
dec
xor
dec
jge
xchg
xchg
mov
imul
insb
lret
and
and
fisubl
scas
std
mov
repnz
vmread
push
add
dec
pop
sbb
mov
test
mov
out
inc
gs
mov
mov
pop
xor
jne
mov
cmp
cmc
cs
leave
icebp
or
push
aam
out
pop
pop
daa
dec
lahf
push
aaa
xchg
lcall
inc
adc
pop
das
faddl
outsb
cmp
xchg
xorb
or
jo
cmpsl
cs
lds
stc
inc
xchg
or
inc
inc
mov
repnz
mov
jl
cmp
insl
dec
repnz
push
sub
cltd
cltd
mov
aam
jmp
xchg
mov
aaa
clc
lds
ret
addl
sbb
mov
adc
in
popf
in
mov
int3
sub
int3
pusha
imul
dec
dec
lret
xor
inc
jne
psubq
ret
lods
mov
pop
fabs
call
pop
clc
aas
imul
mov
adc
hlt
cmp
push
add
jle
mov
faddl
push
mov
arpl
arpl
pop
mov
jo
inc
loop
cld
or
sub
outsb
cmp
bound
dec
out
xchg
outsl
out
jmp
jmp
cwtl
sub
push
push
stos
push
rol
dec
or
sti
xchg
xchg
jp
iret
pop
idivl
repz
icebp
cmp
popa
jae
rcrb
dec
and
sti
lea
or
mov
insl
jl
inc
mov
int3
je
call
xchg
ja
cld
mov
out
xor
or
add
scas
pop
ss
sub
test
sti
jae
out
jno
mov
push
aas
aad
sbb
cwtl
aaa
andb
shrb
mov
dec
pop
or
ret
add
sub
jae
lock
jbe
jb
and
icebp
int3
notl
lods
xchg
push
push
ret
push
inc
lods
pushw
xchg
mov
jecxz
mov
inc
movsl
push
add
adc
fidivs
jp
cmpsb
lret
je
into
xor
leave
insb
sbb
and
jb
xchg
imul
or
jecxz
call
cmpsl
sbb
bound
fimull
inc
pop
mov
mov
mov
ljmp
xor
adc
daa
add
rcrl
sbb
add
and
stos
cmp
inc
mov
jg
mov
mov
jmp
or
mov
mov
sbb
mov
dec
les
dec
or
iret
jbe
fwait
adc
xor
or
std
xchg
movsl
and
mov
out
in
push
fs
scas
les
or
call
lea
filds
adc
sti
insb
push
shrb
cmp
xor
ljmp
test
loop
sbb
push
jp
gs
push
inc
jno
in
xor
test
aad
mov
hlt
dec
jg
sbb
mov
arpl
mov
out
cmp
or
jl
lods
mov
call
xchg
sbb
add
add
cwtl
or
lret
and
ljmp
sahf
push
icebp
add
dec
xchg
rolb
and
xchg
xor
adc
lds
int3
sub
mov
mov
xchg
jg
je
int
mov
lds
mov
xor
cmp
push
xor
in
into
mov
aam
cli
data16
in
mov
test
test
add
push
pushf
testl
cmc
pop
imulb
pop
pop
jo
into
lds
push
dec
mov
sarl
inc
mov
adc
or
fnstcw
mov
jge
test
jp
push
inc
gs
jb
adc
fwait
cmpsb
scas
scas
fcmovnu
mov
fs
and
xchg
xchg
iret
out
das
test
or
leave
cmp
sbb
cmp
jo
mov
repz
mov
jp
push
pop
mov
cmp
rcrl
xchg
pop
jge
aas
or
adc
and
adc
in
roll
popf
jl
push
mov
int3
jmp
roll
es
fwait
push
ds
lods
sub
or
sbb
sub
pop
xchg
adcl
cmp
sarb
adc
sub
push
cmpsb
sti
push
jb
test
push
sub
cltd
imulb
push
das
lahf
sbb
push
dec
and
dec
lods
dec
dec
call
cld
pop
mov
sarb
repnz
or
pop
idivb
adc
push
fwait
in
and
iret
sbb
xor
sub
or
xchg
imul
cmp
out
movsl
out
jb
mov
mov
aam
mov
sti
mov
cmp
add
mov
cmp
xor
fstps
xchg
lock
jle
push
jo
cmp
jecxz
pminub
xchg
lcall
sti
jns
popa
dec
cmp
cs
in
aam
xchg
add
fimull
adc
das
jbe
pushf
mov
in
repnz
pusha
xchg
push
insl
rorb
adc
adcl
mov
inc
sbb
popa
call
push
mov
mov
pop
inc
in
pop
shlb
fnsave
sub
test
xchg
xchg
popf
push
movsb
mov
jmp
push
stos
sub
addr16
add
in
pop
inc
xchg
decl
das
loop
push
hlt
lea
and
jmp
fcoms
test
je
sti
xchg
enter
cmp
fmull
lcall
test
inc
and
fildl
dec
adc
push
cmp
enter
adc
out
addr16
inc
inc
mov
fildll
xchg
rolb
out
repnz
xor
or
andl
fldt
mov
cmp
mov
dec
jns
shlb
out
mov
stc
clc
xchg
fcoml
xor
sbb
cmp
adc
popa
movsb
pop
loop
test
outsb
mov
push
and
bound
sbb
adc
xchg
add
iret
das
arpl
ss
test
xchg
inc
popa
cmp
rcrb
out
or
scas
es
sarb
pop
call
test
sub
push
and
sti
outsl
aaa
dec
pop
and
out
fiadds
dec
xchg
imul
jmp
pop
push
ss
movsl
repnz
aas
inc
sub
push
push
push
out
pop
bound
outsb
roll
dec
scas
fs
mov
mov
or
arpl
cmpsl
push
shll
dec
outsb
call
mov
scas
bnd
jp
cld
inc
mov
mov
xchg
lods
jl
sbb
push
movsl
ret
mov
dec
xchg
sbb
xchg
push
insb
pop
inc
adc
in
jo
ret
clc
sbb
ljmp
or
clc
mov
mov
jns
lods
lahf
fwait
sub
push
or
rclb
inc
mov
add
jno
push
xchg
push
mov
mov
push
mov
or
in
adc
lea
das
xor
xchg
popf
jo
bswap
repz
inc
adc
mov
mov
cmpb
dec
pop
push
daa
mov
or
rorb
in
movl
xchg
test
sbb
popf
inc
popa
adc
sub
orb
dec
in
jmp
enter
xchg
push
and
in
mov
xchg
sbb
or
sbb
shlb
xchg
fwait
cmp
shrb
call
push
sbb
dec
cmp
jnp
test
fisubl
add
sbb
and
outsl
cltd
push
pop
ret
adc
add
stos
shlb
jae
pop
jno
and
push
jp
push
negl
cmpsl
cli
pop
or
mov
lock
mov
mov
out
mov
mov
mov
mov
andb
cwtl
mov
adc
or
adc
fisubl
push
out
popa
and
test
push
insl
mov
add
aaa
pop
and
pop
cld
mov
adcl
int
adc
js
dec
pop
adc
and
mov
inc
aad
bound
mov
fdivrl
jb
fwait
stos
aad
xchg
leave
mov
push
dec
and
or
cmpl
add
rorb
mov
push
ljmp
test
roll
mov
bound
jb
jg
ss
mov
hlt
ucomisd
mov
xor
cld
mov
mov
int
adc
shll
push
sti
mov
je,pt
inc
add
lahf
pop
leave
inc
sbb
es
adc
mov
rclb
add
pop
sub
jno
pop
xchg
sarl
xchg
xchg
mov
push
mov
imul
sarb
xchg
nop
xor
sub
rcll
pop
xchg
fstpl
adc
shl
cmp
shl
xchg
int3
divb
iret
jmp
dec
xchg
sbb
lds
inc
rcrl
fiadds
mov
ljmp
in
push
cmpb
fldenv
sub
mov
fistpl
jno
cli
dec
inc
lock
mov
stos
mov
pop
fsubrs
or
mov
je
mov
add
ret
dec
lods
cltd
fbstp
jecxz
adc
jo
repz
orl
add
sub
dec
jl
inc
jbe
out
ljmp
mov
insb
nop
and
sbb
xor
hlt
mov
imul
sub
pop
lret
loop
int
icebp
and
dec
and
add
mov
lret
test
sub
or
mov
insb
sbb
and
fisubrs
cmp
sbb
xchg
shl
push
add
cli
sti
in
imul
bound
lcall
push
dec
fs
cmp
fs
test
cmc
adc
clc
cmc
mov
mov
arpl
les
lcall
aam
jg
jno
add
and
cmp
subb
cmp
jmp
push
stos
test
int3
sub
sbb
sbb
xor
lahf
aaa
roll
hlt
mov
test
mov
inc
out
aas
bound
jo
cmpl
or
lret
cmpsl
inc
add
lret
push
daa
fcompl
sbb
fcmovu
mov
lods
pop
mov
hlt
adc
mov
jbe
xor
rcl
jge
cmp
dec
lcall
xchg
insl
testb
push
clc
lods
dec
repz
adc
data16
cmpsb
jp
xchg
add
sub
bound
test
les
push
pop
stos
adc
int
ss
rorb
inc
jg
mov
xchg
test
fldl
sarl
and
jl
mov
cmpsl
and
xchg
scas
pop
lock
mov
jbe
shll
out
mov
es
lds
js
pop
repz
add
sbb
pop
rorb
jns
jnp
lret
jns
nop
test
pop
clc
cmpsl
jno
xor
lods
mov
xchg
mov
test
inc
neg
mov
dec
pop
jo
inc
out
sbb
or
arpl
add
cs
sub
test
mov
and
mov
xor
push
call
pop
pop
cmp
inc
cmc
cltd
outsb
pop
mov
movsl
loop
or
or
cwtl
rcrb
mov
repnz
in
shl
test
pushf
xor
punpckhbw
jbe
aam
popa
sbb
lods
jae
sbb
hlt
int3
pop
sub
sub
bound
cld
pusha
lea
icebp
pop
fists
movsb
sbb
inc
movb
cli
push
aaa
out
nop
out
mov
cmpb
sub
shr
cmp
aas
inc
sub
dec
xor
pop
dec
push
or
test
retw
add
pop
test
cmp
mov
fidivrs
mov
ja
dec
rclb
mov
push
pop
int
je
sbb
mov
sbbl
mov
push
dec
mov
mov
nop
mov
push
and
add
sbb
ret
pop
das
adc
and
or
adc
jg
mov
clc
ss
add
mov
or
sbb
mov
roll
xor
inc
mov
gs
es
jmp
stos
push
pop
xor
sbb
movsb
mov
dec
xchg
repz
cwtl
adc
or
push
or
inc
cmp
pop
mov
pop
int
rcrl
mov
cmpsl
jnp
dec
nop
adc
jo
dec
adc
out
push
das
aaa
lods
dec
ret
adc
fisttpll
pop
dec
jns
or
push
les
push
loope
jb
sbb
mov
lret
push
enter
test
fwait
dec
pop
lahf
fdivrl
jg
or
jl
cmc
shl
addr16
es
fcompl
mov
mov
or
int3
xchg
int
push
adc
mov
scas
dec
mov
scas
and
ud0
pusha
cmp
xor
add
mov
mov
push
or
adc
add
pusha
jle
test
test
rcll
repnz
sub
pop
pop
jl
or
test
insl
aaa
sub
sbb
pop
xor
adc
adc
add
inc
imulb
repnz
daa
or
cmpsb
rorl
sbbb
jmp
pop
iret
lahf
adc
std
aas
iret
xlat
addb
cli
mov
xor
push
jb
and
xchg
jns
aam
mov
pop
mov
movsl
inc
inc
lcall
aad
sbbb
decl
icebp
sbb
sub
sti
sahf
cmp
xchg
shrb
in
loope
fucomp
pushf
xor
mov
ss
mov
dec
arpl
xlat
imul
pushf
push
cmc
mov
in
aam
shr
into
nop
jnp
addl
rorl
in
jnp
fscale
push
icebp
sarl
push
add
xchg
pushf
fists
jmp
add
out
aam
jl
xchg
pop
ret
mov
jbe
imul
jo
ffreep
aam
add
sub
shl
shlb
push
sahf
adc
mov
call
repz
cltd
enter
sub
rcrb
sbb
sbb
xor
push
rclb
or
je
cs
push
jo
push
adc
pusha
jbe
or
pop
cmp
les
or
dec
movsb
push
push
adc
and
cmp
std
mov
stos
cltd
imul
pop
mov
push
mov
adc
dec
inc
fiaddl
sti
int
mov
shlb
sub
fwait
and
add
pop
lret
lods
lods
adc
xchg
sub
push
pop
push
push
andb
lahf
jmp
aas
or
cmc
sub
das
add
pushl
pop
sub
adc
or
aas
pop
test
or
adc
subb
cmp
or
and
stos
mov
arpl
sti
pushf
mov
mov
das
repz
jmp
mov
loop,pn
xchg
adc
les
xorb
clc
outsb
jnp
lods
add
inc
sub
bound
daa
fists
push
inc
mov
inc
mov
sbb
into
lods
fwait
jle
or
pop
movsl
xchg
cltd
stos
sbb
test
inc
mov
adc
adc
mov
es
pop
pop
fnop
or
add
out
enter
push
dec
int3
sbb
scas
adc
jecxz
int3
pop
pop
mov
out
adc
sarl
bound
dec
test
insb
cmpsb
fwait
arpl
popf
lahf
jne
fisubrl
in
and
inc
shl
pop
cld
push
fiaddl
ret
arpl
push
fdivs
mov
push
rorl
popa
xor
popf
mov
xchg
shlb
xchg
inc
jno
pop
addr16
cmp
lret
and
lret
adc
aas
push
cmp
inc
mov
push
std
mov
and
notl
jb
stc
mov
sbb
pop
mov
jg
rcrl
push
lcall
mov
call
sub
fadd
and
mov
fs
mov
xor
pop
fisttps
inc
outsl
hlt
ficoml
sar
xchg
fwait
lcall
dec
std
push
xlat
cwtl
fistps
adc
imulb
jb
mov
jecxz
lods
lret
hlt
lds
andl
dec
mov
in
adc
mov
adc
jmp
aas
in
out
rorl
icebp
cmp
out
adc
cli
sub
fnstenv
dec
inc
cmp
loopne
jae
dec
push
or
lret
outsl
lcall
sub
lret
sar
sbb
inc
pop
cwtl
pop
fadds
jbe
xchg
adc
aaa
outsl
xor
and
insb
inc
xchg
and
xor
int
lcall
sti
dec
fwait
mov
push
and
in
or
push
ror
rorb
add
mov
js
cmpsb
ret
pop
or
xor
fcmovnu
jne
pop
jle
lret
dec
sbb
push
mov
sarb
sti
mov
rol
sbb
mov
ja
jecxz
mov
xorl
xor
insb
mov
int3
test
xlat
jecxz
inc
aam
in
push
or
rdmsr
sub
out
jg
and
ret
xchg
pop
iret
or
lods
cmp
sub
out
sub
pop
mov
mov
and
xchg
jecxz
andb
pop
sahf
popl
push
jp
lds
lcall
cmp
jl
into
in
dec
and
jmp
jg
add
push
scas
rorl
das
cmc
pop
les
push
std
mov
movsb
xchg
out
das
in
xchg
jmp
jecxz
arpl
sub
setbe
pop
inc
cmpsl
mov
add
lds
sahf
add
dec
in
pusha
imul
jmp
lods
inc
add
dec
adc
call
movsl
xor
imul
lret
mov
popf
sub
sahf
fsubr
and
pop
add
sbbb
mov
dec
mov
sub
aas
lods
fdivrs
and
test
or
clc
outsb
sub
das
icebp
jle
cwtl
mov
cmp
or
mov
pop
pop
jmp
jge
movsl
int
jne
adc
adc
sahf
lea
pop
imul
sbb
mov
mov
push
out
call
xchg
enter
ljmp
mov
inc
cltd
int
jb
push
inc
pop
test
jb
mov
pop
arpl
push
ja
xchg
outsb
stos
sbb
add
inc
mov
dec
fidivl
rorb
adc
shrl
xchg
daa
dec
aas
daa
xor
lret
sbb
or
inc
mov
es
push
jns
int
dec
jmp
inc
mov
inc
xchg
jmp
fwait
shl
and
shll
lahf
iret
inc
jnp
push
lret
stos
insl
cli
add
fildl
faddp
cmp
xlat
aaa
aam
lock
jge
mov
sub
fcmovbe
in
pop
fsts
ret
aad
adc
or
cli
lahf
sbb
test
or
test
in
das
repnz
jl
and
dec
aam
xchg
jge
cmp
xor
test
aaa
bnd
insb
mov
adc
rol
mov
cmpsl
add
add
lock
mov
inc
jns
jo
dec
fsubs
xor
xlat
mov
pop
cmp
test
out
lods
pop
int3
sti
jnp
push
mov
push
xchg
adc
push
and
mov
sbb
xor
or
aas
xchg
shr
imul
push
aad
sbb
mov
dec
ret
lret
dec
xor
repnz
or
cmp
lds
out
addr16
push
das
inc
pop
aaa
dec
daa
jg
outsl
pop
lahf
testl
cmpsl
call
packuswb
push
das
inc
pop
aaa
dec
daa
jg
outsl
pop
lahf
testl
cmpsl
call
punpckhwd
dec
das
inc
pop
aaa
dec
dec
jg
outsl
pop
lahf
testb
fbstp
out
arpl
xchg
push
cmpl
das
pop
pop
aaa
dec
daa
jg
outsl
lahf
or
mov
iret
inc
filds
out
adc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
out
lods
or
mov
mov
cmp
or
sbb
insb
jae
inc
dec
push
pop
stos
lods
mov
orl
ret
int3
shll
or
sbb
add
jl
dec
push
pop
jns
xor
in
mov
fsubl
sub
pop
gs
jge
cmp
sub
and
loop
xchg
cmc
in
pushf
push
inc
rclb
iret
xor
lds
insb
push
bound
scas
jmp
xor
rcrb
sbb
les
cmpsl
pop
into
ret
cld
sbb
js
insb
loop
ret
or
and
lcall
jmp
arpl
mov
push
in
dec
pushf
jns
jl
leave
or
out
lret
cwtl
movsb
lret
loop
or
ret
and
shll
adc
jno
push
inc
lods
pop
fmuls
jl
push
adc
jo
xchg
arpl
repz
nop
aas
jae
adc
sub
fsubrl
or
les
cltd
fstpt
adc
out
jae
push
dec
inc
dec
nop
lods
mov
orl
ret
int3
imul
sub
cmp
or
sbb
insb
insl
jl
dec
aaa
xor
mov
pushf
lea
mov
inc
push
jb
push
imul
aaa
xor
cmp
jmp
xchg
mov
movsl
mov
inc
pop
jg
adc
push
jge
sbb
xor
call
sar
cmpsb
ret
ret
int3
rcr
and
cmp
or
sbb
insb
jae
inc
dec
push
pop
mov
mov
cld
ret
int3
rcr
and
cmp
or
sbb
insb
jae
inc
dec
push
pop
mov
popa
int3
pop
scas
cwtl
pushf
adc
lds
jns
mov
sub
loopne
nop
mov
pop
mov
inc
mov
sbb
jnp
mov
je
iret
mov
jl
repnz
dec
xchg
and
push
lds
add
cmpsl
movsb
dec
popa
bound
xchg
aas
push
or
icebp
mov
movsb
sub
rcl
mov
sub
xchg
test
cmp
or
scas
addl
sbb
add
cmc
mov
xchg
sub
repz
mov
jecxz
push
fsubl
fldt
mov
aaa
push
popa
cmp
pop
add
fnstenv
pop
or
imul
cmpsl
pushf
sarb
stos
addb
hlt
pop
fstpt
out
inc
push
cmpsl
jg
xor
or
rorl
push
test
or
ficoml
dec
lock
cld
lret
jnp
ljmp
stc
mov
icebp
mov
shl
jge
sbb
outsb
or
mov
inc
jno
iret
add
cmpb
sarl
cmpb
mov
in
cmc
rcrb
push
stos
inc
iret
js
lods
fbstp
and
aas
imul
adc
imul
mov
fiaddl
jno
cmc
mov
fsubr
sti
out
adc
add
insl
filds
mov
or
or
je
insb
lea
and
cmpl
xor
or
sub
xchg
jb
dec
clc
or
xchg
test
mov
lahf
les
inc
xor
or
lods
dec
inc
adcl
ret
ret
notl
mov
sbbl
ljmp
sbb
xorb
sub
les
addr16
sub
mov
scas
fldenv
pop
ss
inc
adc
and
in
in
dec
sub
or
sub
shlb
rcl
and
aad
dec
jne
jbe
negb
mov
fadd
out
movsl
repz
pop
dec
sbb
sbb
cmp
mov
lcall
cmp
imul
adc
mov
test
lea
pop
call
fs
sub
sbb
mov
nop
fidivl
xchg
hlt
sub
in
scas
int
fsubrl
aaa
sub
xchg
addr16
mov
pop
adc
mov
stc
mov
ficompl
aas
mov
mov
cmp
jmp
adc
loopne
inc
imul
pusha
insb
mov
jmp
add
push
in
movsl
gs
lods
rol
test
js
test
xor
dec
ret
loop
cli
jns
fdivrl
lret
mov
pushf
shrl
mov
in
jg
push
mov
lcall
ret
sahf
push
loop
arpl
sbb
into
lcall
es
sti
or
adc
mov
or
mov
in
dec
sbb
mov
sbb
xchg
push
test
std
mov
ds
lret
arpl
out
cmp
test
pop
mov
rol
mov
shll
stc
cld
jg
or
mov
daa
mov
inc
and
add
jge
cs
shlb
or
cmpxchg
and
pop
push
bnd
mov
pop
xchg
xor
insb
fisttps
pusha
dec
mov
gs
cmp
cmp
fwait
mov
pop
dec
das
adc
sub
jae
bound
xor
push
mov
mov
test
or
stc
sbb
adc
lds
jg
out
data16
lods
aam
fcmovnu
in
fistpll
jne
mov
pushf
in
in
xor
mov
mov
sbb
mov
adc
ss
sbb
lods
gs
in
add
fcomps
xchg
sub
clc
adc
fsts
int3
dec
fidivrs
xchg
mov
cmpsb
pop
out
out
pop
and
xor
add
mov
icebp
lods
mov
jne
out
push
push
push
mov
sub
xlat
hlt
xchg
iret
or
mov
mov
push
jl
fidivrs
inc
mov
iret
ds
sbb
dec
daa
jmp
ffree
test
lcall
pop
stos
stos
clc
push
sbb
pop
in
mov
sbb
fimull
fmuls
insl
cli
lds
jae
mov
add
xchg
pop
inc
shlb
pop
push
pop
shll
xchg
lahf
mov
push
inc
dec
cld
int3
push
test
dec
loop
cld
xchg
push
inc
scas
xchg
add
movsb
movsb
adc
jns
fsubs
xchg
mov
sbb
roll
fildll
inc
adc
dec
mov
lea
mov
aaa
sahf
or
mov
sbb
clc
xor
jecxz
stc
xchg
dec
pop
add
mov
pusha
mov
iret
jb
push
or
icebp
in
rcrl
cmp
push
icebp
imul
addr16
or
pushf
pop
frstor
mov
mov
push
dec
lea
movsb
push
imul
call
or
fisttps
adc
enter
jg
push
mov
xchg
or
xor
stos
loop
scas
lahf
dec
jne
cli
or
add
adc
out
sub
cmpsl
jns
adc
xor
ror
insl
push
mov
cmp
push
push
mov
fstpt
sub
mov
dec
aad
sub
in
and
xor
daa
cmpsl
pop
fimull
aad
scas
sbb
push
add
in
jo
mov
mull
ss
cmp
xor
mov
fisubrl
loop
scas
adc
push
xchg
shll
js
mov
cld
out
cmpl
in
scas
mov
das
lahf
mov
inc
push
in
sahf
cmp
outsl
nop
mov
daa
and
adc
mov
hlt
in
adc
mov
mov
bound
or
pop
push
mov
fwait
js
push
adc
and
notb
arpl
fs
movsl
xchg
iret
mov
add
inc
push
loope
bnd
je
aas
mov
je
les
cltd
or
int3
and
cmp
cld
rolb
add
push
jae
xchg
jo
mov
sub
lcall
lcall
mov
popf
pop
fsubl
ficoml
insl
cmp
mov
sub
mov
subb
and
pop
xchg
sub
popf
pop
call
test
mov
pop
fisubl
cmp
cld
inc
aam
jns
push
mov
sar
sbb
jne
push
fisttps
jg
sbb
add
sbb
repnz
ja
cmp
push
pop
mov
mov
addr16
pop
out
push
lret
jmp
push
mov
add
push
mov
lret
scas
push
sub
add
xchg
xor
js
stos
jge
push
insl
cmp
sbbl
mov
push
mov
scas
jo
stos
cltd
adc
inc
jle
hlt
jge
ja
cmp
xchg
pop
pop
and
mov
push
cs
in
mov
mov
push
ds
leave
repz
xchg
aaa
int3
cld
sub
adc
pop
and
dec
ret
test
push
aad
mov
sbb
jecxz
outsb
loope
cmpsb
fs
in
adc
dec
icebp
and
insb
sbb
pop
adc
aas
xchg
add
mov
jno
sub
fldlg2
jae
fcmovnb
cmpsl
push
es
aad
ja
jmp
stos
repz
mov
call
xorl
das
and
lods
data16
mov
dec
pop
rcr
call
mov
inc
jl
movsl
xor
and
loop
cmpsb
int
and
daa
dec
sub
inc
aaa
loope
sub
popf
out
jecxz
adc
scas
out
xor
cmp
dec
repnz
and
sub
pop
orl
into
pop
push
test
xor
nop
pop
adc
and
and
cmc
jl
jnp
repnz
pusha
cli
rcll
inc
mov
fbstp
xor
add
lds
icebp
pop
cmp
jne
loope
jle
enter
xor
jp
add
mov
aad
mov
pop
int3
pop
cmovl
add
add
jmp
mov
jae
stos
push
and
jae
fld
pop
shll
dec
leave
imul
dec
push
push
lea
mov
sbb
das
mov
jbe
cmp
inc
cmp
mov
fcmove
lock
mov
xor
out
negb
and
push
test
xor
dec
xchg
jge
mov
clc
dec
leave
xor
inc
push
mov
jmp
dec
mov
cs
or
jg
pop
daa
adc
jno
lahf
push
stos
pusha
pop
or
dec
stos
push
fidivs
jno,pt
mov
roll
push
in
pop
xchg
xchg
sarl
and
shll
mov
popa
popf
mov
xchg
and
adc
iret
pop
pop
std
mov
xchg
repnz
cmp
fsts
scas
dec
xlat
dec
push
mov
lahf
negb
jmp
pop
cs
in
and
cmp
push
and
push
insl
xor
add
push
je
pop
shll
jl
dec
mov
xchg
js
xor
add
rcl
shl
scas
mov
pop
pop
pop
lea
cmpsl
sub
or
sub
cmp
inc
out
mov
shl
adc
xor
sahf
mov
out
ljmp
mov
pop
in
inc
push
adc
jmp
push
jl
xchg
add
jnp
out
test
loopne
dec
ret
loop
pop
fstl
mov
jge
xchg
insl
sub
sarb
jne
rcl
or
mov
btc
xor
ljmp
int
lea
lods
cmp
shl
push
rorl
aas
or
lret
add
dec
int3
push
dec
cmp
or
inc
sub
push
pop
mov
mov
mov
mov
mov
jge
cmp
ret
xchg
inc
push
lcall
push
xor
std
mov
sbb
sub
push
pop
stos
lods
sbb
pop
cld
cld
nop/reserved
lret
test
ds
test
adc
sub
idivl
test
lods
lahf
mov
movsb
or
pushw
jg
cmp
aaa
mov
icebp
stc
aad
push
mov
les
mov
jb
adc
in
dec
ficoml
mov
pop
int
push
mov
ret
sub
mov
cltd
call
cld
xor
arpl
dec
mov
aas
ds
xchg
mov
jns
mov
test
cmc
pop
xchg
xor
clc
mov
and
fcompl
movsl
scas
sbb
loopne
jl
xor
mov
or
js
or
imul
out
xchg
andb
push
cmp
jb
push
push
cwtl
div
lock
js
stos
xchg
aaa
loope
repnz
cmp
and
xchg
mov
pop
or
pop
lods
push
int3
imul
inc
nop
and
cmpsb
pusha
jno
repz
fildl
pusha
test
mov
mov
std
enter
mov
loope
jne
push
pop
lahf
nop
lods
lea
ret
dec
or
push
inc
pop
dec
push
sbb
jbe
mov
mov
movsl
sub
mov
adc
out
dec
push
pop
loop
and
or
push
push
dec
imull
sahf
adc
sahf
rorl
inc
mov
es
loopne
fwait
mov
dec
dec
inc
push
sub
mov
lret
test
hlt
pop
add
adc
xchg
mov
cmpsb
sbb
insl
pop
das
roll
lcall
xchg
pop
out
xor
add
adc
mov
fstpl
jb
insb
addr16
lods
sub
bound
imul
inc
stos
ds
cmpsb
xor
popl
jmp
in
imul
bound
push
int
fmull
into
lret
ds
push
enter
insb
xchg
pushl
adc
mov
stc
mov
inc
aaa
lahf
cmc
into
mov
add
into
ds
mov
pop
fsub
or
lcall
cmpsb
shlb
jl
test
ret
fxch
cmc
adc
xor
xor
cmp
outsb
pop
dec
pop
adc
lret
int
lea
xchg
or
xor
push
adc
iret
pop
popf
and
cli
out
ret
cld
scas
sbb
mov
cmc
iret
ret
push
mov
xor
test
mov
sahf
or
mov
aam
push
jno
lret
stos
mov
out
iret
sbb
int3
fmul
push
push
pop
and
dec
jno
mov
push
add
xor
jo
sbb
clc
pushf
shlb
and
enter
shl
adc
jp
xchg
ljmp
cmp
xchg
pop
js
xchg
mov
ljmp
lock
idivl
mov
mov
push
push
shlb
dec
imul
mov
subl
data16
aad
xchg
xchg
xchg
ljmp
mov
movb
ret
adc
lock
das
movsl
jmp
aas
in
sub
xchg
es
inc
sub
inc
inc
cwtl
adcl
cmc
adc
and
dec
dec
ret
sbb
mov
mov
push
mov
icebp
adc
and
adc
lock
je
cwtl
pushf
ljmp
mov
push
adc
inc
add
cs
cmp
dec
push
call
out
pop
ja
out
lret
lods
int3
mov
push
add
fdecstp
lret
inc
mov
das
jp
icebp
push
dec
out
jmp
jle
mov
ljmp
jne
scas
arpl
add
pop
lret
push
leave
inc
fsub
jo
fdivl
popa
push
shlb
push
pop
hlt
popf
ljmp
push
mov
xor
mov
mov
xor
div
daa
xchg
xor
dec
mov
int
jnp
fdivrs
add
mov
in
jp
mov
pop
stc
bound
cmp
jle
mov
aaa
dec
arpl
gs
mov
mov
push
hlt
inc
inc
ds
cmp
or
cs
xchg
sbb
pop
dec
test
xchg
sbb
mov
mov
dec
outsb
mov
cmp
mov
andb
dec
adc
lahf
mov
in
xor
dec
ljmp
daa
mov
jge
jl
mov
or
and
inc
cmpsl
inc
loop
outsl
test
mov
imul
test
cs
aam
and
sub
mov
pop
adc
lea
pop
jmp
fs
xor
clc
arpl
pslld
adc
inc
daa
lock
fdivrl
decl
add
jno
insb
sbb
add
out
sahf
pop
add
push
xlat
sub
test
cmp
cmpsb
inc
cmp
pop
push
xchg
bound
adc
pop
pop
push
in
popa
push
cltd
pop
inc
sub
test
fimull
xchg
lret
pminsw
jnp
out
sbb
jne
adc
inc
push
xchg
or
cld
shlb
xchg
mov
mov
xor
clflush
mov
das
cmp
mov
in
mov
add
xchg
jle
pop
sub
enter
jo
cs
push
pop
cli
cmpl
jne
xchg
pop
repnz
push
inc
sbb
test
jb
mov
aam
add
aad
sbb
xchg
pushf
test
cmpsl
lret
popf
out
inc
inc
repnz
mov
gs
in
sarb
dec
xor
call
jnp
inc
sbb
mov
sub
fisttpll
ficomps
sbb
out
jo
pop
inc
mov
imul
loopne
mov
pop
cwtl
shll
sbb
push
adc
mov
mov
pop
pop
pusha
pushf
pop
push
pop
add
inc
dec
push
je
adc
xor
testb
movsl
cmpsb
add
push
dec
ds
dec
loope
mov
mov
lcall
jno
les
outsb
mov
iret
and
call
addb
popf
int3
mov
testb
adc
push
idivb
add
and
sti
pop
cmp
lret
cmp
jno
arpl
mov
mov
lcall
jmp
xor
xor
jecxz
pop
xchg
jb
fistps
ja
in
jns
pop
sbb
repnz
sbb
and
cltd
fdivl
add
in
stos
dec
out
fcmovne
xchg
mov
test
and
xor
sti
sbb
cmp
clc
popa
mov
mov
dec
add
lods
mov
jle
mov
call
fiaddl
rcll
xchg
push
or
inc
xlat
das
or
jg
push
cli
rcrl
ret
mov
cmp
pop
pop
stos
call
push
sub
mov
mov
jge
push
insl
lea
pop
fwait
sbb
pop
aam
in
fdivr
xchg
idivb
leave
sub
xchg
ds
mov
data16
mov
loop
push
rcll
leave
ja
out
jge
inc
sbb
mov
xchg
sub
dec
push
xchg
xchg
xchg
cmp
out
fbstp
in
cmc
sub
pushf
rcr
sahf
adc
shrb
and
mov
sar
and
je
insb
xor
cmp
js
lock
xchg
add
push
outsb
and
cwtl
xchg
aad
in
and
mov
cmp
mov
dec
sbb
mov
xor
sub
pop
stc
and
jns
xchg
scas
jmp
sahf
cmp
push
or
repz
dec
mov
fistpll
jns
out
movsb
test
adc
sbb
stc
xchg
test
fxch
push
sarb
jns
movsl
xor
mov
mov
aad
xchg
jge
jmp
add
inc
ss
test
xchg
clc
out
sbb
rorl
mov
in
data16
cmp
jnp
pop
mov
imul
mov
aam
loop
xchg
fsubr
sbbl
ret
movsb
mov
cmp
shrb
in
insl
cmp
aam
call
push
sahf
hlt
movl
pop
ret
dec
push
push
sarl
inc
dec
aad
mov
cwtl
mov
xchg
or
cmc
mov
fldenv
sub
push
mov
aas
ret
cmpsb
xchg
push
xor
sub
std
ja
jne
sub
and
mov
ficoml
repnz
adc
and
inc
ds
push
cmpsl
ja
dec
fwait
dec
push
ds
mov
shrb
adc
repz
mov
or
fldl
mov
in
mov
ffreep
fistps
ljmp
enter
push
cmp
mov
mov
sbb
leave
jp
std
jbe
int
jne
cmc
out
inc
mov
sub
cmp
push
add
sahf
or
dec
add
pop
push
rorl
popa
jmp
sub
xchg
xor
cmp
ss
test
dec
stos
aad
adc
push
enter
lds
mov
in
sub
jno
stos
adc
jp
lods
cli
sub
mov
dec
sub
testl
pop
jle
test
add
rsqrtps
cli
sub
cmp
in
std
insb
and
popf
pop
ds
popa
out
ficompl
out
decl
cwtl
or
shr
orl
xchg
in
mov
lods
dec
shrb
adc
cwtl
lock
cmp
pop
bound
repz
ss
inc
and
loopne
lock
stos
and
ret
in
adc
jb
jne
or
and
inc
push
mov
xor
popf
movsl
jns
and
sar
jns
lods
mov
push
pushf
mov
movsl
jnp
push
rclb
std
dec
imul
dec
mov
popf
jl
cmp
cmp
test
xor
enter
or
shll
jle
push
out
xlat
ret
hlt
inc
decl
sarl
pushf
mov
pop
outsb
mov
lret
push
test
mov
cmp
popf
into
loopne
cmp
xchg
and
xchg
pop
fnsave
sahf
inc
inc
or
dec
rcrb
sub
adc
lahf
sbb
or
inc
adc
fcoms
ror
xor
dec
jl
inc
mov
jns
mov
dec
clc
xchg
add
mov
mov
push
pop
mov
lods
inc
xor
sub
adc
aas
mov
fsubrs
xlat
inc
idivl
cmp
loopne
cmp
mov
pop
popf
jnp
cmc
repz
cmc
dec
xor
xor
add
imulb
scas
inc
sub
leave
imul
jge
xchg
gs
lret
mov
sbb
cwtl
push
pop
adc
inc
sarb
and
ss
lds
in
jnp
jnp
add
loopne
cmpb
pushf
jecxz
repz
ret
int3
rcr
and
cmp
or
sbb
insb
jae
inc
dec
push
pop
mov
mov
cld
ret
int3
rcr
and
cmp
or
sbb
insb
jae
inc
dec
push
pop
mov
mov
cld
ret
int3
rcr
daa
sub
cmp
or
sbb
insb
push
inc
dec
arpl
lahf
mov
jecxz
jecxz
ret
int3
push
fsubl
sub
xchg
test
in
cmpl
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sbb
pop
bound
js
pop
popa
jbe
jnp
cmp
call
rcr
mov
dec
push
pop
push
push
adc
and
xor
enter
xchg
xor
orb
mov
jp
push
sbb
or
cmp
and
test
fcmovu
cld
ror
fstpt
cs
xchg
or
out
fsts
sub
fstpt
aam
lea
call
outsb
inc
stos
and
sbb
bound
shlb
xor
jne
mov
ds
lds
dec
test
inc
iret
pop
push
mov
lahf
mov
dec
pop
adc
rorb
es
or
stos
or
mov
subb
daa
or
or
shll
idiv
mov
pop
pop
fcmovnb
enter
cltd
mov
mov
shl
xor
and
lea
lret
sub
test
push
mov
mov
jecxz
mov
sbb
ja
insb
inc
mov
push
pop
bound
js
or
sbb
sub
cmp
enter
call
mov
xor
push
data16
and
dec
mov
shlb
out
in
loope
sub
fldl
push
adc
push
jl
dec
inc
ja
rorb
xchg
out
loope
rcr
mov
sub
pusha
sub
sbb
or
adc
and
xor
ret
fsub
call
xchg
cwtl
mov
dec
push
pop
bound
js
or
sbb
sub
cmp
enter
call
xchg
cwtl
mov
dec
xchg
dec
cmp
ds
popf
jg
inc
in
shll
mov
scas
pop
pop
mov
fsubr
out
or
das
enter
jnp
cli
bound
sbb
lahf
fsubrl
sbb
adc
cmpsb
lahf
sub
dec
jns
addr16
int
pushf
and
mov
movsb
jo
movsl
fadd
out
pop
sbb
jnp
test
mov
mov
fmuls
stos
dec
scas
pusha
mov
jmp
les
add
push
push
sbb
dec
xor
mov
inc
cs
sbb
loope
xor
xchg
cltd
add
push
jg
nop
fldt
push
stos
test
push
pop
hlt
jg
pop
scas
push
aam
in
mov
pop
push
mov
xchg
jbe
add
pushf
es
sub
lods
jge
shll
repz
mov
mov
cltd
in
scas
push
dec
or
aaa
jge
xchg
stos
adc
idiv
jno
add
xor
stos
jl
int3
mov
fiaddl
movsl
js
das
xchg
jmp
frstor
bound
sbb
push
shlb
shrb
sub
push
idivl
repz
gs
packsswb
int
ja,pn
adc
aam
ret
das
mov
and
sbb
lea
sbb
mov
out
mov
fsub
xchg
ljmp
fiaddl
imul
arpl
loopne
les
and
iret
mulb
stos
jb
adc
cmpsl
popa
pop
mov
loopne
out
inc
sbb
outsl
loope
or
xchg
pop
pop
mov
mov
jle
fcoms
push
and
fstl
fldcw
test
jmp
ret
cmpsl
cmpsb
mov
jae
cmc
es
test
xchg
jnp
aad
cmc
popl
or
stc
inc
out
pop
inc
push
test
les
push
jg
pop
iret
pop
movsl
loopne
ret
aam
inc
add
dec
pushf
popa
das
and
sarl
dec
and
lods
and
and
jb
loope
arpl
loop
lcall
orl
adc
xchg
aas
cmp
stos
lods
fstpl
mov
imul
pop
mov
push
cwtl
scas
pop
dec
jl
jp
pusha
or
push
xor
dec
divb
jmp
fs
pop
xchg
in
inc
mov
daa
stos
or
jns
bound
dec
cs
sub
std
js
into
lahf
dec
outsb
hlt
ljmp
movsl
test
cmp
aas
imull
das
xorb
mov
push
lret
mov
scas
jbe
popf
lret
lock
xor
dec
fidivrl
fistl
or
cmpsb
mov
ja
shll
mov
lods
push
int
fwait
inc
and
cmp
es
ss
cli
inc
pop
mov
push
or
enter
nop
and
setle
adc
dec
sti
sbb
movsl
dec
test
fiaddl
inc
mov
jae
mov
and
xchg
mov
loope
xor
data16
or
inc
pop
xchg
pop
push
imul
int3
mov
ss
sbb
mov
push
dec
inc
jns
popa
inc
jno
push
lods
es
imul
mov
cmpsl
test
ret
inc
mov
sub
inc
cmp
xchg
sub
add
lods
nop
jns
adcb
push
stc
sbb
inc
mov
gs
xchg
in
jmp
imul
cmpsb
test
shrl
rorb
cs
push
push
sub
mov
adc
popa
call
lret
push
scas
mov
out
push
mov
mov
xchg
mov
shlb
jg
out
jle
cli
insb
imul
cmc
inc
fwait
sub
in
adc
in
mov
stos
insl
sub
popa
cli
mov
inc
mov
inc
mov
or
inc
inc
cwtl
movsb
rolb
repnz
in
lds
out
ja
push
test
dec
mov
addl
mov
data16
jl
push
fildll
je
bound
mov
lds
pop
fwait
js
cmpsl
sbb
fisttpl
std
fmul
lret
les
gs
push
mov
lea
cmpb
inc
into
pop
test
psadbw
or
mov
cmp
cmp
jmp
cmp
and
xchg
add
loop
out
mov
sarl
mov
scas
jg
jnp
pop
xchg
inc
push
jae
pop
dec
loopne
arpl
imul
xor
sub
lret
sub
push
into
outsl
inc
adc
sub
xor
push
mov
ja
aaa
xor
jge
sbb
movsb
in
test
cmc
ja
pushf
push
add
icebp
mov
jns
add
mov
movsb
cwtl
into
adc
sub
sti
fwait
ja
cli
mov
call
das
cmp
outsl
mov
adc
add
ljmp
rcll
dec
imul
push
test
push
inc
movsl
xchg
add
clc
dec
loope
or
xchg
sbb
inc
pushf
inc
ret
jbe
xchg
dec
imul
xchg
test
cmp
loope
jmp
push
xor
loopne
in
test
imul
mov
add
adc
rcrb
in
nop
xchg
bound
adc
les
pop
popf
mov
test
dec
mov
adc
mov
inc
icebp
add
dec
or
mov
out
jmp
adc
jle
bound
fnstsw
jecxz
repnz
int3
sbb
fcmovbe
orb
push
xchg
and
mov
adc
imul
lods
daa
and
enter
aas
pop
scas
in
aam
pusha
and
pop
dec
xchg
cmpsl
inc
pushf
inc
mov
inc
jg
mull
add
sbb
xchg
push
rcrl
mov
out
fstps
dec
daa
xchg
xchg
pop
lea
std
inc
lahf
movsl
push
mov
lret
mov
jg
add
clc
mov
inc
aas
add
fiaddl
stos
shll
push
jno
jns
and
call
sbb
shlb
bound
sbb
sub
xor
addr16
hlt
jge
jno
xlat
nop
sub
outsl
xor
dec
mov
or
jns
pop
mov
mov
lret
outsb
fdiv
inc
jle
xchg
ds
pop
jl
sub
sub
loop
and
loop
sbb
sub
and
sub
fistpll
fdivrs
sti
cmc
out
lret
push
add
jecxz
andl
mov
test
repnz
push
neg
xchg
jg
popa
mov
inc
subb
insl
mov
xchg
sbb
push
mov
insb
repz
cmc
ret
loop
xchg
repz
pop
fnstsw
daa
sbb
push
add
push
fcomps
test
and
mov
mov
jno
movsb
mov
sbb
std
jbe
or
pop
adc
call
sar
stos
out
push
mov
jge
mov
aam
lds
adc
fbld
test
setl
mov
lret
and
insb
cmp
pop
sbb
fld
ss
pop
mov
xor
rcpps
cmp
xor
or
arpl
inc
nop
cltd
push
xchg
lret
inc
and
jns
movsb
dec
xchg
and
nop
cmpl
xor
adc
cs
das
pop
addr16
popa
pop
sbbl
fistpl
shlb
inc
jno
cmp
mov
test
movsl
jae
mov
inc
mov
lds
sub
in
lahf
out
je
ds
sub
add
lahf
and
lcall
dec
cmpsl
imulb
dec
add
dec
stos
mov
btr
iret
jl
or
add
in
and
pop
pop
mov
cmp
cld
lds
or
xorb
xchg
movsl
lods
and
pop
movsl
or
bound
outsl
sub
sarl
xchg
movsl
sub
push
xor
push
insb
and
out
pop
sbb
adcb
loopne
outsl
fcompl
mov
mov
push
pop
push
add
pop
scas
cmp
enter
nop
mov
aam
mov
sub
mov
mov
dec
pop
test
test
repz
lcall
sub
mov
xchg
cmc
or
lcall
mov
inc
hlt
xor
in
mov
mov
int3
mov
in
dec
inc
fnstsw
jg
cmp
or
pop
inc
or
push
stos
inc
out
call
into
ss
dec
cltd
inc
adc
jo
add
ret
je
dec
push
inc
dec
add
pop
sbb
xchg
sti
push
pop
imul
dec
and
pusha
mov
jbe
int3
sti
xchg
jo
testb
les
jmp
jb
pop
sub
jno
and
movsl
mov
test
fcompl
fldcw
pop
seto
into
mov
ret
add
cmp
jno
out
push
nop
ss
or
push
cmp
push
dec
xchg
xor
pusha
sub
mov
stos
sub
aaa
adc
repz
je
push
stos
xor
or
int
cmp
push
lret
mov
add
mov
stc
push
mov
inc
lret
sub
mov
aad
lret
and
ljmp
xor
cwtl
shll
aad
inc
pusha
fiaddl
xchg
xor
aam
sbb
adc
pop
or
lret
pop
jns
cld
add
orb
dec
push
push
mov
inc
jno
mov
mov
lock
out
xchg
pop
cmp
in
push
outsl
cltd
push
xor
xchg
shr
or
out
cli
jns
cmc
insl
into
insl
rol
jle
pushf
jl
push
sbb
jge
cmp
push
xchg
adc
imul
imul
sti
xchg
xchg
scas
hlt
cli
inc
push
jle
mov
mov
cmpl
cmpsl
xchg
xchg
pop
xor
test
cs
mov
xchg
add
insl
stos
lret
lcall
mov
and
push
daa
jno
cmpsb
xor
mov
sbb
lods
ss
push
mov
jmp
inc
or
push
xchg
push
cmp
ljmp
jmp
lods
pop
fadd
loop
adc
test
add
aaa
mov
push
adc
mov
mov
jge
shrl
cwtl
fstpl
ss
ret
hlt
xchg
cmp
mov
push
cwtl
imul
cmp
jmp
cmpsl
mov
xor
aas
add
push
push
push
aam
adc
mov
add
rcll
sub
adc
xchg
clc
scas
or
sub
cs
lods
imul
mov
inc
sub
stc
mov
lods
scas
mov
mov
imul
hlt
cmpsl
mov
mov
push
insb
cmp
push
imul
fwait
outsb
sbb
jo
xor
mov
popa
xchg
cmp
js
cmp
xor
push
icebp
jb
sti
test
rcll
movl
ja
iret
pop
mov
js
mov
push
push
xchg
xacquire
or
add
adc
add
xor
adc
negb
sub
jns
cmp
pop
xchg
cmovb
or
incb
jo
and
mov
sub
mull
mov
sub
out
fisttpl
add
cmp
mov
jnp
shll
imul
push
pop
out
lret
icebp
push
and
mov
mov
popa
sbb
jo
jg
xchg
pop
and
cmp
aaa
lret
and
sub
iret
add
inc
aam
test
mov
cmp
inc
aas
bound
movsl
xchg
mov
jg
adc
nop
aas
lret
shr
fidivrs
mov
rclb
mov
mov
cmpsl
aas
mov
jo
inc
or
sbb
sub
sub
shr
loop
aaa
jne
int
mull
sbbb
fnsave
push
push
xchg
or
xchg
repnz
into
cli
in
stc
repz
mov
and
nop
inc
nop
shll
mov
lret
bound
xchg
jecxz
adc
or
inc
daa
jb
out
and
add
inc
dec
xor
dec
pop
dec
rorb
lods
outsl
push
insb
xchg
movsl
aad
mov
mov
or
or
push
pushf
push
dec
test
jge
loop
data16
xor
dec
jl
mov
cmp
clc
sub
xor
jnp
into
dec
inc
add
pop
ja
adc
mov
sbb
repz
xchg
scas
test
enter
dec
jns
lock
jns
out
fwait
add
test
jb
mov
and
or
xchg
les
pop
push
adc
mov
fldt
inc
add
jecxz
mov
movsl
lock
inc
dec
stc
push
sti
repnz
mov
pushf
pushf
or
jecxz
cmpsl
mov
icebp
inc
cmp
out
and
frstor
fmulp
lock
and
jno
in
insb
fsub
call
aas
add
lea
je
fldt
sahf
stos
push
mov
into
iret
xchg
arpl
push
repz
decl
adc
and
scas
jns
adc
out
push
adc
xor
xchg
add
inc
pop
push
imul
add
adc
lahf
ret
fbstp
rcr
inc
pop
add
cmpsb
bound
popa
stos
sahf
dec
out
dec
outsb
lods
vmwrite
jmp
sub
imul
cmp
les
ds
mov
in
pop
mov
sub
adc
cli
dec
dec
dec
lods
inc
sub
mov
icebp
fstpt
aam
mov
hlt
imul
loopne
push
repnz
or
pop
pop
inc
push
jo
dec
xor
dec
pusha
sbb
fcmovnb
sub
std
arpl
mov
jmp
push
jne
jo
jb
stc
push
adc
lods
dec
stos
mov
je
icebp
out
outsl
or
mov
jl
leave
ds
mov
leave
push
dec
std
pop
push
clc
inc
scas
sub
sahf
out
jge
lret
inc
out
test
out
movsl
pop
inc
push
mov
mov
sbb
push
jle
test
in
lock
cmp
stos
dec
lahf
data16
pop
int3
jl
jae
test
dec
jbe
aas
sahf
xchg
inc
xor
dec
pop
push
repz
cmp
hlt
mov
and
mov
test
mov
push
jnp
test
arpl
clc
dec
jae
in
fs
or
inc
movsb
out
jo
dec
push
and
mov
sub
mov
ficoml
sub
mov
daa
repz
sbb
popf
mov
lahf
jl
dec
test
fisttpl
jmp
data16
push
xchg
inc
lds
jnp
adc
mov
aad
sahf
push
add
jmp
xchg
shll
add
sbb
fdivrs
insl
sub
fiadds
pop
cmp
ljmp
fistpll
adc
xchg
mov
lods
cmpsl
xchg
repz
add
inc
xchg
test
bound
out
xor
sbb
xor
xchg
mov
lret
outsl
push
andl
not
adc
je
imul
popa
andl
pop
mov
xchg
test
or
pop
push
push
adc
mov
orl
add
hlt
sbb
mov
and
ret
inc
hlt
pop
pop
xchg
mov
cmp
mov
add
pop
cli
sti
add
pop
adc
pop
mov
dec
or
aaa
cmpsb
es
outsb
sahf
xchg
mov
call
or
xor
push
adc
xchg
push
inc
repnz
movsb
test
add
std
jae
mov
int3
inc
pop
mov
sbb
ss
jo
fdivrl
test
xor
adcl
cmp
movd
cwtl
loopne
movb
in
cmpsl
fadds
loopne
ret
shll
cmpsl
mov
mov
outsb
aam
or
sbb
loope
stos
pop
inc
mov
lcall
aad
in
andb
lret
sbb
pusha
sbb
ret
les
psubusb
out
insb
xor
sub
out
xchg
imul
and
call
mov
in
push
cmc
jb
jle
jae
sbb
and
ljmp
aad
cmp
pop
adc
ljmp
inc
sbb
push
das
mulb
inc
cltd
mov
lahf
cmpsb
fs
dec
mov
mov
and
jecxz
inc
popa
push
pop
xchg
mov
cld
and
mov
in
aad
fistpl
jo
pop
push
fsubr
cld
lock
jmp
hlt
sub
nop
dec
sbb
cmp
jmp
out
shlb
cwtl
jl
clc
jbe
xchg
and
out
lret
jno
sti
pushf
mov
icebp
inc
mov
push
mov
lcall
jmp
fstpt
fnstsw
fs
out
mov
pop
or
add
adc
mov
xlat
jnp
xchg
popa
xchg
incb
leave
mov
fs
movsl
in
mov
pandn
sbb
dec
push
aam
mov
sbbl
jg
movsb
mov
nop
push
mov
push
jp
inc
sahf
adc
or
dec
jae
repnz
leave
inc
pop
addr16
std
hlt
jmp
cli
outsb
push
lahf
and
xchg
ss
mov
xchg
ss
mov
int
cli
rcll
cmp
jns
mov
sbb
sbb
inc
aaa
ss
cli
je
jbe
movsl
ret
add
rcrb
mov
addr16
cmpsb
shrl
mov
mov
mov
in
repnz
arpl
loopne
xchg
sbb
cmpsb
sub
insb
mov
adc
push
pushf
mov
jae
or
and
int3
pop
fnstenv
jg
cmp
jnp
xchg
and
js
inc
insl
push
push
dec
push
and
aas
imul
cmp
xchg
mov
cmp
or
lea
push
jp
push
sahf
jne
js
inc
mov
dec
jecxz
dec
cmp
jo
pop
bnd
mov
daa
dec
xor
jge
adc
push
pop
and
out
jge
pop
aaa
inc
xchg
push
jno
xor
pop
ss
enter
sbb
push
pop
jmp
jae
sbb
sarb
cwtl
stc
mov
mov
jge
jp
xchg
cmp
repnz
ret
add
or
jmp
aad
stos
and
mov
xchg
scas
mov
in
adc
mov
jg
fistpl
mov
push
jb
cmp
mov
push
xchg
push
imul
fdivrs
lahf
stc
movsb
dec
inc
out
lods
sahf
lcall
leave
pop
imul
xchg
mov
mov
and
jmp
cmp
and
sbb
adc
mov
jmp
adc
sbb
mov
mov
xchg
mov
xor
mov
lret
mov
lock
xor
es
dec
mov
mov
int
int3
and
test
imul
mov
xchg
nop
push
jle
mov
daa
addr16
cwtl
pushf
repz
sub
sbb
xor
push
pop
push
inc
mov
inc
add
cmpsl
sbb
ror
mov
inc
mov
int
xchg
and
cwtl
arpl
repz
loope
push
addb
scas
test
xchg
out
jo
or
enter
movl
jge
cmp
sub
push
or
inc
xchg
xchg
xlat
adc
mov
mov
andl
xchg
ret
adc
ljmp
add
add
imul
mov
movsb
pusha
push
lods
das
add
lods
loop
mov
lds
cld
mov
out
jbe
testl
loop
imul
test
es
xchg
mov
aaa
mov
xchg
imul
dec
adc
loope
jnp
imul
sahf
lods
fwait
xor
lret
scas
mov
in
push
sarb
mov
scas
ss
in
lds
mov
xchg
jnp
neg
lahf
mov
lds
pop
mov
aam
inc
sbbl
or
push
push
adc
push
pop
sub
shr
inc
pop
xchg
out
iret
ret
test
inc
shlb
loop
push
setl
insb
int
jnp
lcall
cwtl
inc
loope
sarb
cmp
push
pushf
pop
cmp
mov
and
shrl
sub
or
ljmp
idivb
inc
lds
hlt
shrl
inc
and
sti
pop
ljmp
out
ret
repnz
mov
push
pop
and
js
or
sbb
sub
cmp
enter
call
xchg
cwtl
mov
dec
push
pop
bound
js
or
sbb
sub
cmp
enter
call
xchg
cwtl
mov
dec
push
pop
bound
jns
or
sbb
sub
cmp
enter
call
xchg
cwtl
mov
dec
pop
push
push
adc
cmp
call
sbb
push
dec
inc
mov
decl
loope
lock
sbb
insl
js
push
das
mov
decl
fdivrs
sub
pop
or
jl
fistps
dec
das
mov
out
idiv
xchg
xchg
fsubs
or
or
js
sbb
imul
cmpsb
cwtl
mov
divl
push
xor
inc
outsb
lock
les
jnp
cmp
hlt
jecxz
mov
pcmpeqb
mov
jne
clc
adc
jno
xor
movsl
cmpsl
out
imull
lcall
inc
and
dec
repnz
cmp
xchg
cmp
ljmp
dec
das
mov
decl
dec
and
movsl
mov
lahf
notl
mov
out
cs
mov
inc
scas
cmp
and
cmp
andb
push
das
mov
movsl
arpl
test
and
insl
pop
call
dec
cmp
rorb
fildll
cmc
clc
lahf
call
mov
inc
sub
data16
pop
push
dec
fnstsw
into
out
popf
leave
xchg
mov
dec
ret
dec
aaa
imul
add
jb
pop
cmp
cmpsl
fmul
sti
in
mov
ret
dec
es
cs
sub
insl
or
dec
fistps
in
lcall
enter
sub
jg
outsl
js
push
das
mov
decl
fdivrs
sub
jg
outsl
js
push
das
mov
fdivp
cld
sub
push
inc
mov
sti
and
cmc
arpl
pop
es
inc
bound
adc
jns
insb
in
inc
shrl
outsb
sbb
icebp
cmpsl
mov
cmpsb
jbe
pop
loop
shl
pop
stc
adc
out
mov
dec
pop
imulb
aad
shrl
cmpl
lds
stos
ja
in
shrl
xchg
xchg
lcall
imulb
fsubrs
int3
add
movsb
jno
dec
repnz
xchg
lret
xor
add
sub
enter
sbb
mov
es
daa
aam
sub
lock
out
faddl
or
es
out
mov
mov
lods
lahf
cmp
xchg
jg
xchg
nop
clc
sbb
out
cmp
and
cwtl
call
mov
push
popf
pop
jmp
xchg
mov
xor
lods
frstor
adc
xor
repnz
xor
popa
std
lcall
jp
shl
jno
fisttps
xorb
lcall
sub
pop
imul
mov
mov
lock
sbb
pop
mov
jp
inc
out
cmp
sahf
test
repnz
add
mov
inc
push
aas
mov
imul
insb
sbb
mov
insl
icebp
sar
mov
pop
hlt
mov
cmp
test
push
and
cli
mov
loope
stos
fidivs
dec
fidivs
gs
fstl
inc
mov
mov
aas
and
in
xor
dec
mov
ret
fs
jns
adc
xor
daa
lcall
fstps
push
push
dec
dec
movntq
pop
outsl
hlt
aad
ret
dec
scas
stos
jbe
jecxz
mov
sbb
pop
adc
push
bound
adc
std
insl
cs
es
cmpsb
xlat
xor
dec
pop
leave
xor
fdivs
jb
push
sbb
jecxz
inc
dec
ljmp
imul
adc
ja
or
add
int3
cmp
sbb
adc
mov
inc
ss
mov
cmp
jmp
push
jo
or
cmpsb
jmp
lods
xchg
mov
jmp
mov
dec
xchg
lods
stos
fwait
add
add
mov
iret
xor
fmuls
loope
shl
push
insl
jne
enter
xor
fistpl
xorl
aam
xchg
jmp
sbb
push
stc
jo
hlt
adc
dec
stos
inc
dec
lea
pop
hlt
sbb
imul
shll
inc
add
in
iret
push
mov
add
inc
les
and
sbb
cmpsb
out
nop
movsb
out
pop
out
sub
lods
push
mov
and
mov
push
sarl
aaa
pusha
sbb
dec
xor
roll
into
add
cwtl
arpl
push
mov
sbb
lods
pop
aaa
pop
mov
pop
cld
mov
mov
cmp
mov
push
push
out
fs
sahf
shll
mov
push
leave
sbbb
data16
and
xlat
pop
add
pop
xor
sbb
xchg
xchg
push
mov
mov
test
dec
popf
mov
push
jno
sub
add
popa
xor
and
stc
aaa
faddl
out
xchg
cmp
mov
mov
pop
cmp
cmpsl
mov
adc
sarb
out
lods
daa
mov
xchg
ret
leave
xchg
js
int
test
adc
xchg
rcrb
push
sbb
es
addl
jg
aaa
jbe
rol
enter
dec
subl
loop
add
inc
test
push
pop
in
test
scas
adc
jno
mov
adcb
cmp
shll
int3
jb
stos
inc
cmc
stos
cmp
cmp
icebp
pop
xchg
das
cmp
mov
xchg
jns
or
aas
in
std
lret
cmpsb
lock
push
scas
xor
outsb
aad
xor
and
data16
push
cs
jbe
push
pop
pushl
cmovge
loop
je
xchg
push
ljmp
loopne
add
jmp
sub
ja
fldt
lahf
test
testl
or
adc
adc
mov
test
sbb
push
pop
push
mov
loope
and
mov
pop
pop
inc
cmp
shll
jmp
sbb
and
lea
ret
les
ja
mov
aad
sar
fistl
xchg
rcrb
test
dec
ss
mov
inc
scas
cmp
push
push
sub
gs
jbe
jb
lcall
push
aas
lods
cmp
clc
loope
or
icebp
iret
mov
sbb
outsl
add
shl
inc
gs
lcall
mov
mov
out
jecxz
pushf
xchg
add
stc
fwait
inc
loopne
cmpl
lods
test
jmp
addl
gs
bound
popf
jecxz
pop
std
jae
add
mov
mov
xor
sti
lock
fldenv
mov
pop
stos
es
jp
jle
xchg
aad
inc
aaa
inc
out
mov
cld
pop
push
mov
or
aam
inc
jno
popa
push
pop
dec
pop
and
scas
jo
divl
sbb
jae
movb
callw
ss
mov
inc
jae
cs
xor
or
lods
popa
dec
push
add
fsubs
loopne
mov
mov
aas
mov
inc
aaa
sub
fdivrp
lret
aam
ret
ret
push
add
jbe
push
test
sub
inc
ss
ds
dec
inc
ss
shl
fwait
bound
ds
and
xchg
inc
aaa
adc
scas
sub
mov
outsl
and
je
jle
sarb
es
adc
pop
faddl
push
dec
aaa
add
push
icebp
lods
pop
inc
add
or
jl
js
adc
cmp
or
das
push
jbe
mov
sub
cld
sub
insl
enter
das
or
rorl
insl
push
das
mov
arpl
xchg
add
mov
iret
ret
negb
xor
insb
jb
pop
fwait
xchg
lods
pop
leave
js
mov
push
dec
inc
inc
dec
xlat
ret
cli
scas
mov
dec
push
fists
jo
dec
nop
pop
hlt
xchg
mov
and
subb
frstor
loop
inc
mov
pusha
push
jge
jae
lret
in
or
dec
cmp
or
mov
xor
mov
insl
and
clc
push
cmpsb
fsubrs
and
inc
adc
jne
mov
mov
int
mov
and
dec
push
mov
push
sarl
es
pop
jl
shll
subl
icebp
cmpsl
minps
mov
stos
push
mov
add
fdivp
jmp
fmull
fs
dec
inc
push
lods
jl
sbb
sub
mov
out
jp
ljmp
xlat
pop
sub
jne
sub
push
inc
xchg
mov
sub
pop
dec
sbb
jno
loope
jge
pop
adcl
push
cmc
pop
addr16
cmpsb
cmp
adc
mov
cmp
mov
adc
in
das
out
scas
mov
push
xchg
fwait
sbb
cmp
psrld
sbb
sub
mov
cmc
jecxz
test
iret
rol
mov
sarb
cmp
xor
scas
mov
pop
mov
cltd
jge
clc
cmp
scas
fnstsw
sub
insl
mov
jno
notl
xor
int3
out
and
adc
cmpb
inc
test
repz
out
mov
add
mov
mov
cmpsl
jmp
sub
fs
mov
scas
sti
add
adc
ss
pop
outsb
push
pop
out
outsl
xchg
mov
jl
and
adc
sahf
fbld
or
cmp
insb
test
repz
sub
cmp
inc
add
pop
sbb
pop
mov
mov
add
xchg
out
dec
cmc
cltd
or
and
push
mov
jae
insl
fcmovu
adc
jge
inc
sbb
ret
xchg
mov
adc
xor
mov
jp
or
iret
sub
adc
ja
push
outsl
shr
ja
push
or
lods
testl
pop
sbb
testl
int
add
das
push
fwait
test
adc
mov
mov
adc
cs
mov
sbb
in
nop
mov
stos
in
into
popf
cmp
out
sbb
push
push
mov
ret
shrb
jne
jl
in
cmp
int3
shll
mov
scas
mov
sbb
imul
aas
inc
cli
adc
adc
repnz
cmp
ss
pop
adc
fs
fmuls
stc
pop
xchg
push
ljmp
movsb
cmpsb
pop
lcall
jl
test
lcall
sbb
test
inc
scas
or
iret
daa
jb
adcb
jecxz
notl
cltd
or
pop
or
les
push
push
sar
sub
mov
repz
push
movsl
xor
xor
push
test
jne
scas
mov
mov
pop
ret
test
movsl
xchg
into
in
scas
jp
bswap
and
ret
out
push
in
in
sbb
mov
mov
push
fnstcw
jo
bound
ret
inc
decl
inc
adc
cmpsl
aam
xchg
sbb
ret
subl
iret
dec
lock
and
adc
imul
xchg
jmp
lock
imul
xchg
cmpsl
xchg
dec
sub
subl
push
mulps
imul
sbb
test
leave
in
lea
jns
in
fdivs
lods
bswap
movsb
mov
cmp
push
jge
add
inc
call
je
scas
incl
xor
xchg
jb
dec
adc
lods
ficomps
pop
fwait
dec
hlt
dec
shrb
into
or
popa
mov
mov
test
inc
push
mov
inc
es
push
in
addb
bound
loop
lods
cwtl
sub
mov
hlt
fnstenv
mov
xchg
dec
movsb
xor
test
shl
mov
stos
adc
and
je
es
xchg
xor
fists
push
fsubr
add
sti
fnstsw
xchg
loopne
clc
or
adc
addr16
movsb
cs
cltd
out
bound
sbb
cltd
sbb
stos
mov
cmp
push
insb
outsb
cmc
aam
add
inc
sbb
lcall
movl
jno
push
inc
mov
dec
jns
pop
bound
mov
or
push
icebp
daa
mov
adcl
sahf
dec
mov
ret
les
shlb
cmp
pop
push
cs
pusha
lret
add
push
cmpsb
cmp
xor
mov
jbe
xor
push
jno
leave
out
shlb
cltd
pop
repnz
inc
pop
mov
mov
mov
out
push
lock
addb
pop
loop
ret
icebp
fcompl
mov
and
rorl
sbb
mov
cmpsb
mov
fiaddl
xor
cmc
jbe
add
and
lret
psubq
cmp
imul
fstps
mov
xlat
rorb
jne
cli
test
inc
xchg
into
mov
push
les
add
and
lret
ja
push
sub
jle
das
xlat
clc
sub
in
dec
repz
cld
inc
push
or
ffreep
rorb
shl
shlb
fimuls
sbb
push
sahf
and
gs
stos
fildl
push
mov
aad
daa
aaa
sub
sti
idiv
out
pop
cmp
add
add
subl
popa
push
jbe
jge
shlb
clc
outsb
inc
adc
xchg
lea
ret
cld
cmp
mov
sub
dec
mov
sub
vmovhps
cmp
aas
popa
iret
mov
sub
imul
bound
push
lcall
jmp
push
sub
xor
in
xor
hlt
lea
mov
and
mov
scas
sarb
sub
cld
dec
pushl
movsl
sub
icebp
shlb
subl
arpl
aaa
mov
inc
sbb
pop
cs
test
sbb
xor
mov
lcall
cmp
hlt
scas
loope
push
sldt
into
sub
movsb
stos
jecxz,pn
sub
js
imul
cmpsl
and
call
out
pop
dec
mov
adc
mov
pusha
pop
sti
push
lock
cmp
jnp
inc
test
sti
mov
xchg
sbb
and
fidivrl
icebp
fadds
arpl
pop
mov
insb
jno
sub
pop
jmp
outsb
and
mov
cmp
addl
xchg
sbb
lods
fdivrs
ffree
mov
add
and
and
pop
xchg
mov
sub
repz
mov
addr16
push
jecxz
jl
pop
imul
and
lods
xor
pop
iret
out
inc
mov
mov
enter
ret
and
xchg
out
xor
movsl
xor
push
imul
icebp
mov
xor
push
mov
fs
sbb
pop
clc
xchg
bound
adc
orl
mov
push
hlt
jmp
xor
cltd
dec
add
hlt
repz
lret
push
inc
fs
xor
cmpsb
repz
sub
std
sbb
ljmp
lret
clc
aam
repz
test
mov
dec
mov
push
mov
ret
arpl
push
inc
shlb
cmpl
ja
xchg
lret
dec
inc
rorb
das
in
sahf
shl
inc
lahf
ffree
jno
push
es
adc
dec
push
or
mov
pop
mov
repnz
fmul
mov
lods
pop
jae
add
pusha
mov
xor
mov
rorl
aas
ret
pop
jae
jp
pop
inc
lods
fistl
push
jns
inc
mov
insl
cmpsb
adc
popf
jnp
push
push
sbb
or
push
push
int
mov
addb
je
mov
dec
bsf
pop
das
add
out
cs
in
push
xchg
ss
lock
stos
push
xchg
mov
out
int
fcoms
pop
int3
loopne,pn
sbb
xchg
outsl
out
xchg
or
inc
dec
mov
inc
or
sti
cwtl
mov
dec
das
xchg
fisubrs
je
das
mov
in
sbb
lcall
movsl
outsl
jo
or
cmpsl
adc
rorb
ret
sbb
rclb
push
add
mov
push
insb
loop
scas
mov
inc
add
cmp
repz
out
and
pop
adc
or
sub
loopne
lods
mov
pop
jmp
negb
mov
mov
int
adc
pushf
xchg
jle
xchg
pushf
repnz
and
rorb
dec
idivb
rcrb
sbb
cmp
push
push
mov
nop
stc
lea
scas
and
cmp
add
cli
jl
js
addr16
ljmp
mov
insl
lods
adc
fidivl
cmp
push
push
mov
add
and
cmp
push
ljmp
repnz
xchg
incb
add
into
std
xor
jge
mov
dec
inc
out
in
pop
cmpsb
or
das
inc
xor
push
arpl
outsb
out
in
ret
ret
pop
mov
push
sub
loope
adc
mov
daa
pop
pop
adc
and
mov
mov
push
add
fidivrl
ds
loope,pn
xor
push
or
sbb
out
pop
mov
push
mov
popa
test
mov
lret
inc
lret
adc
adc
sub
mov
mov
pop
movsb
pop
mov
rclb
xchg
leave
dec
jo
je
jo
xchg
adcl
push
nop
push
mov
push
iret
push
sti
xchg
adc
cs
push
mov
imul
stos
loop
cmp
stos
das
divl
ret
jp
into
xchg
or
lock
je
ljmp
xorb
sar
jnp
les
push
or
fisttpl
adc
adc
jle
jmp
vcvttss2si
fcoms
xchg
add
popf
push
sti
add
adc
sub
sub
aam
mov
cmc
lahf
dec
test
mov
aad
sub
sub
and
sub
pop
icebp
popl
ret
imul
cmp
push
mov
clc
out
pop
stos
jo
inc
cltd
aas
push
out
fbstp
adc
dec
dec
lods
frstor
inc
addr16
push
in
arpl
mov
pop
ss
in
icebp
push
dec
in
pop
pop
cli
adc
adc
xor
insb
sub
mov
jecxz
mov
andl
adc
jg
in
dec
ss
pop
pop
jmp
push
in
push
js
loopnew
incb
xlat
outsl
int3
xchg
sub
adc
add
add
push
mov
jns
jb
inc
dec
mov
lahf
add
push
stc
adc
movsl
sub
add
sbb
dec
adc
mulb
jnp
popa
xor
push
shll
adc
xchg
mov
fimuls
cli
loope
hlt
sub
inc
out
ja
aas
mov
ret
adc
sub
or
in
imul
lret
pop
ja
stc
movl
jge
add
lahf
sub
into
je
js
xor
push
jo
add
and
lret
popa
in
int
sub
sahf
enter
cltd
and
lret
mov
int
jns
mov
fldt
inc
iret
js
push
pop
sub
xchg
xchg
sub
movsb
int3
xor
xor
test
dec
fimull
ret
push
sbb
pop
inc
lods
push
sub
fs
cmp
cmp
jbe
test
repnz
loopne
movsl
movb
test
out
fcmovu
movsb
cmp
aaa
addr16
stc
insl
shlb
out
mov
mov
shlb
je
or
fcoml
and
out
xchg
test
dec
lret
lods
dec
movsl
or
mov
enter
inc
cmp
enter
sbb
push
les
xchg
jmp
mov
frstor
int
lock
or
mov
inc
cmpb
xlat
rolb
sbb
inc
fdivs
movsb
add
push
pop
ret
sub
ljmp
fstpl
sub
sub
mov
push
roll
sbb
call
pop
mov
adc
fcomps
cmpsl
mov
out
jne
adc
pop
pop
cmc
pop
cmp
mov
dec
add
add
jle
aaa
jns
mov
in
xchg
jp
dec
inc
and
pop
enter
rcl
movsb
mov
add
into
int3
jnp
inc
pop
jbe
int
xchg
adc
add
add
loop
icebp
push
or
dec
lods
sub
lret
lock
mov
pop
sti
lahf
jno
outsl
shlb
fdiv
iret
mov
insl
xor
cmp
xorb
cmp
pop
fcoms
cmc
mulb
pop
or
sbb
sbbl
mov
ret
xchg
mov
je
in
gs
xchg
push
bound
rcrb
repz
test
add
inc
outsl
cltd
imul
lods
cltd
and
bound
cmp
mov
push
jp
test
mov
daa
or
call
pop
mov
je
js
in
jnp
ja
mov
das
sahf
inc
sti
jg
xor
js
test
popf
dec
pop
in
stos
push
in
push
lret
dec
mov
mov
pop
push
push
xor
xchg
and
stos
call
jo
mov
or
das
jnp
test
mov
adc
je
adc
cmp
les
mov
aam
lods
lods
inc
aas
xchg
test
mov
sbb
cmpsl
xor
xor
pcmpeqd
cmp
fisubrl
ret
mov
shl
and
sbb
insb
lods
nop
sbb
adc
push
repnz
addr16
lret
jb
mov
das
fldenv
adc
cmp
inc
fisttps
imul
mov
mov
sbb
dec
aas
lret
test
movb
pop
mov
shrb
movsl
decl
gs
mov
stos
mov
lahf
les
pop
sbb
mov
popa
and
jne
mov
into
dec
cmpl
dec
mov
xchg
xchg
jp
pop
mov
clc
mov
sub
cmp
cmp
shrb
xchg
repz
rcrb
data16
adc
jmp
pop
movsb
lret
pop
cmpsl
sarb
nop
sub
add
xor
mov
cltd
cli
and
xchg
sub
outsb
jbe
pop
in
mov
xchg
sub
jns
aad
adc
bndldx
out
xor
pop
addb
and
and
xchg
lahf
in
iretw
cmpsl
adc
fdivrs
sub
jg
outsl
js
push
das
mov
decl
fdivrs
sub
jg
outsl
js
push
das
mov
decl
fdivrs
sub
jg
outsb
js
push
das
mov
decl
pop
mov
xlat
in
jg
sbb
xchg
loopne
mov
mov
outsb
push
jle
push
sti
insb
inc
push
push
adc
xor
out
inc
mov
scas
xchg
jbe
data16
inc
push
ss
stos
cs
jb,pt
neg
inc
into
fstps
xchg
in
data16
cmpsb
inc
adc
jle
xor
ds
stos
sub
test
loope
iret
cli
loop
xchg
jbe
or
pop
adc
add
lods
hlt
or
pop
mov
jae
lret
dec
sahf
sub
std
mov
cli
and
sahf
fisubl
shrl
jno
ret
xchg
inc
or
dec
push
push
es
lea
pop
decb
xchg
xchg
mov
jbe
inc
xchg
icebp
ss
dec
shr
ds
iret
or
mov
jecxz
cmp
sahf
pop
scas
jle
aad
arpl
dec
add
xchg
arpl
movsl
pop
imul
adc
cmpsl
push
xchg
fldt
cmpb
movsl
rcll
cli
std
neg
mov
or
add
mov
xchg
outsb
sarb
ljmp
xchg
jo
and
lcall
daa
and
data16
jo
pop
jg
arpl
mov
mov
cld
f2xm1
rol
xlat
add
cmp
sbb
pop
arpl
jnp
fstpt
push
xchg
mov
mul
icebp
ljmp
xor
clts
sub
es
ds
into
neg
out
inc
mov
mov
data16
push
jle
push
ss
es
ds
into
neg
out
inc
mov
mov
mov
cmc
mov
add
cmpsl
ss
insb
adc
jp
ja
sbb
jb
sub
in
and
push
push
xor
sbb
jg
mov
add
xchg
dec
dec
pusha
cmc
push
cmc
fdiv
mov
call
mov
test
inc
ret
lahf
clc
and
and
shrl
sub
dec
hlt
push
loop
inc
dec
popf
popa
xchg
pop
js
mov
lds
test
lret
icebp
add
insb
fwait
mov
push
mov
cwtl
ljmp
dec
rcrb
popa
fcomp
enter
popa
jecxz,pt
orb
adc
aaa
dec
sub
cmp
xchg
imul
mov
cmp
add
jle
fwait
out
pop
lods
sarl
or
jge
pop
mul
or
mov
ret
xor
dec
dec
cmp
dec
pop
in
ljmp
mov
pop
pop
stos
mov
in
xor
jmp
xchg
adc
imul
or
cmp
lods
pop
pop
mov
into
in
cmp
cwtl
mov
add
cmpsb
test
je
sahf
test
outsb
xlat
pop
add
xchg
fistpl
or
in
add
outsl
fimull
or
inc
jl
sub
pop
scas
cmp
cwtl
jle
jb
test
adc
aaa
jge
push
and
push
add
nop
fcmovnb
mov
cmc
insl
adc
sbb
adcl
or
test
scas
stos
test
xchg
dec
pop
sarb
outsb
divl
leave
test
or
fidivs
popf
mov
dec
aam
sub
out
cmpsl
loope
mov
pop
test
push
je
shr
loopne
aam
daa
lods
testb
push
xlat
decb
cmp
leave
shrb
es
jmp
mov
xchg
jae
notb
push
cmp
add
aam
shrb
or
in
mov
xor
dec
jbe
xchg
bound
call
fs
pop
pop
bound
sub
and
add
clc
xchg
addr16
stos
lret
pop
outsl
pop
mov
push
xor
xor
sbbb
jle
mov
push
xchg
inc
test
or
jne
scas
iret
cmp
or
and
sarl
pop
lock
jno
fnstenv
adc
fucom
mov
bound
idiv
fstpl
lods
inc
jae
nop
out
int
mov
sahf
mov
xor
jae
shll
subl
mov
arpl
sub
dec
pop
js
call
jns
cmpsl
or
push
mov
int
cmp
jnp
enter
inc
mov
out
jg
insb
pop
and
lods
int3
ret
into
loop
sbb
dec
xor
movsb
dec
fstps
fists
pop
or
inc
or
insb
ficoml
adc
int3
lods
roll
lcall
mov
mov
mov
mov
and
sbb
cmp
jne
push
or
outsb
rcrl
stc
cmp
jmp
mov
hlt
insb
cltd
je
ljmp
frstor
sub
pop
pandn
sub
jno
cmpsl
scas
cmpsl
dec
mov
adc
idivl
decb
mov
ja
fs
and
stc
inc
loop
xor
push
test
dec
cmc
add
jge
call
idivl
nop
push
ss
in
rcll
out
mov
cmp
sub
mov
iret
mul
and
sbb
pop
out
pop
fldcw
xor
pop
hlt
add
push
sar
daa
popf
inc
cmpsl
stc
mov
hlt
cmp
adc
shr
jecxz
adc
jle
sbb
xor
out
inc
sbb
push
lret
in
dec
mov
mov
nop
xchg
and
jns
inc
xchg
and
pop
and
and
shrb
outsl
push
popf
out
mov
or
add
into
rorl
mov
lods
mov
mov
pop
decb
mov
mov
pushf
stos
jbe
sbb
jae
cmp
addr16
lcall
fisubrl
adc
mov
shrb
fs
sti
fistps
iret
lahf
aas
inc
popa
inc
in
jl
lds
scas
lret
ljmp
iret
aas
push
in
mov
imul
in
lcall
test
leave
in
mov
mov
xchg
jne
aaa
out
sub
xchg
cmp
aas
sbb
sbb
sbb
sbb
js
cmp
sbb
andl
fidivs
outsl
inc
cmp
jecxz
mov
jns
mov
lock
pop
push
rorb
je
pusha
icebp
popa
std
mov
fistpll
nop
nop
lahf
xchg
sub
jnp
mov
xchg
dec
decb
les
xchg
xor
xor
jno
push
out
test
hlt
in
jge
mov
out
and
sti
repnz
cmpsl
mov
sbb
fs
sbb
mov
lret
sub
mov
inc
inc
out
cmp
test
mov
xchg
cmpsb
add
dec
shlb
loope
nop
and
mov
mov
xor
sbb
fscale
cwtl
hlt
repnz
dec
jl
int3
rolb
push
repz
stos
es
pop
lret
dec
mov
xchg
jne
jo
lcall
push
roll
inc
shl
fidivl
call
rcrb
daa
repz
cs
imul
fidivrl
mov
dec
sbb
lea
rolb
das
inc
mov
sbb
shl
cmp
sbb
out
scas
inc
push
sarl
loope
ss
popa
pop
adc
dec
cmpsl
outsb
xchg
mov
std
mov
ret
in
ret
nop
cld
cs
sbb
push
stos
push
outsl
xchg
add
subl
dec
add
push
add
sub
mov
jecxz
xor
pop
sar
push
inc
xchg
jae
sbb
jb
xchg
cmpsb
mov
fsubrs
cli
arpl
xlat
int
jno
mov
aad
stc
clc
imul
lret
fisubrs
xchg
mov
ss
inc
mov
das
adc
nop
imul
push
xchg
test
sti
push
loop
insb
mov
movsl
dec
in
sub
stc
imul
ljmp
adc
insl
xorb
xchg
sub
inc
sub
pop
push
lds
loop
sahf
sti
dec
sbb
sbb
dec
popf
pop
sub
and
rolb
scas
sub
xchg
dec
scas
sbb
aaa
movsl
divl
repnz
jne
or
adc
jno
sbb
nop
pop
cwtl
and
mov
mov
fsubs
int
mov
cmp
int3
jmp
cltd
sarb
dec
dec
xor
mov
adc
das
out
mov
into
or
or
sub
loopne
and
cs
jns
ret
nop
loopne
xchg
lods
push
pop
inc
flds
cmpsl
sbb
push
mov
inc
aas
mov
mov
or
ja
add
sahf
rorb
in
lea
adc
sbb
fcmovnbe
inc
call
mov
mov
mov
test
mov
test
dec
xchg
arpl
mov
cwtl
pop
dec
push
imul
fbstp
rcl
shl
or
jb
call
pop
mov
aas
aaa
lock
ja
test
cmp
mov
jae
pop
adc
shrl
mov
add
add
mov
adc
cs
mov
bound
testl
cmpsl
scas
mov
push
inc
clc
or
pushf
loope
inc
loope
imul
jns
out
daa
lds
add
and
lret
shlb
adc
daa
test
insb
add
xchg
mov
out
xor
stos
jns
int3
inc
push
jg
nop
mov
cmp
addr16
test
adcl
scas
daa
mov
jb
insb
push
cmp
lds
js
ljmp
or
sub
push
and
in
mov
loop
clc
ds
sub
push
pusha
adc
cli
lret
mov
dec
push
ficoml
loop
add
xor
ljmp
mov
mov
stc
sub
dec
pushf
and
jne
inc
enter
jle
or
or
enter
loop
inc
repnz
xchg
fstpl
cmp
loopne
mov
popa
fisubrl
push
lcall
fwait
mov
aad
jnp
adc
push
xor
lods
outsb
loope
lods
cmp
leave
fsubr
sub
xor
cmpsl
shlb
mov
mov
jns
in
push
aam
mov
mov
push
aas
mov
pop
xor
sub
cmc
cli
stos
mov
xchg
xor
add
inc
leave
test
mov
cmp
pop
leave
mov
sub
pop
leave
add
push
xchg
push
ljmp
mov
dec
neg
shl
nop
xchg
pop
xor
mov
in
mov
ret
in
cmpsw
int
pusha
std
int3
lods
lods
rcrb
cwtl
xchg
clc
and
scas
in
xchg
xchg
or
pop
xor
xchg
push
cmp
adc
pop
cwtl
mov
cmp
pop
cmp
enter
mov
outsb
inc
dec
adc
fs
call
mov
dec
sub
jge
popf
shlb
inc
mov
xor
xchg
xchg
test
adc
fs
xor
and
loop
int
pop
mulb
lahf
cmpb
shl
adc
jae
adc
fnsave
cmp
xchg
testl
xchg
cmc
jbe
mov
pop
pop
xchg
fidivs
lret
test
dec
int
movsb
xor
and
cld
enter
rcrb
or
subb
jge
aad
lgs
push
jno
dec
hlt
xchg
xor
sbb
or
popf
mov
ljmp
adc
inc
in
jnp
out
dec
movb
loopne
push
cmp
mov
xor
aas
dec
jecxz
xchg
sbb
jbe
imul
or
mov
fisttpll
movsl
inc
pop
mov
pop
mov
fwait
repz
jmp
in
mov
jmp
jbe
push
repz
sbb
add
repz
in
arpl
jl
lock
leave
push
test
outsb
dec
out
wbinvd
bound
sbbl
inc
or
repnz
dec
fmul
pushf
sarb
or
je
inc
push
push
add
sarb
in
lret
jmp
xchg
fildl
cmpsl
lods
or
xchg
dec
pop
adc
fadd
mov
xchg
lds
sbb
fwait
dec
aaa
or
mov
pop
cld
cltd
mov
or
test
and
cmp
mov
stos
into
or
mov
pusha
mov
push
pop
push
leave
mov
stos
dec
cmp
mov
insl
inc
sbb
fisttps
ret
mov
push
iret
push
xor
sbb
jge
dec
mov
stos
push
jl
dec
push
or
add
mov
popa
cltd
scas
fidivrs
push
scas
cld
cld
ret
call
pushf
sti
lods
sti
fldcw
sbb
mov
out
cmp
mov
sahf
jb
aad
in
stos
fadd
sub
repz
sbb
sbb
jno
std
ja
or
add
fstpl
add
jmp
aad
xor
adc
pop
cmovns
add
flds
pop
enter
sub
xor
sub
dec
imul
int
test
push
or
mov
nop
ss
in
push
ds
xchg
sbb
addr16
and
mov
ret
add
mov
cmp
and
xchg
gs
adc
fildll
imul
inc
bound
cmpsl
push
shlb
mov
jb
insb
cmp
cmp
mov
aas
jl
adc
cmp
jmp
pop
sub
es
sbb
outsb
inc
arpl
push
mov
push
lret
jns
insb
mov
jne
and
cmp
xchg
stos
mov
dec
sbb
cmpsb
ss
ljmp
xor
adc
fistps
leave
inc
aam
js
xchg
inc
mov
adc
imul
mov
cmp
gs
loopne
neg
jbe
mov
into
adc
push
aas
shl
or
lock
and
sbb
js
or
hlt
jo
lods
jbe
scas
dec
adc
orl
out
rcll
push
inc
push
dec
insb
in
xchg
dec
das
push
mov
mov
jne
adc
add
xor
pop
cmpsl
jge
mov
sub
jl
int3
fcomps
inc
sub
sub
sbb
jnp
cs
inc
lods
or
scas
cwtl
loop
jmp
sbb
movsb
rolb
adc
pop
push
in
out
out
mov
popa
jmp
xor
xchg
inc
xchg
pop
je
aas
ret
adc
cmpb
cmp
sub
nop
adc
call
mov
cmpsl
and
add
ss
inc
adc
push
std
fs
in
ss
sub
imull
loop
je
push
inc
and
push
mov
push
pop
sub
pop
cmc
dec
cmp
pop
leave
iret
in
or
add
dec
out
dec
fistps
pop
test
push
jnp
shl
sub
ss
mov
leave
inc
out
scas
xor
iret
mov
xor
loop
into
inc
mov
push
cmp
bound
dec
movsb
cmp
push
jle
mov
insl
sahf
scas
mov
jno
scas
pop
sub
outsl
cli
fisubrl
dec
rcll
cwtl
dec
push
popf
inc
outsl
add
mov
push
xor
jecxz
mov
subb
sbb
sub
inc
js
cmp
sbbl
jle
jmp
xlat
push
movsb
push
cltd
jno
xchg
adcb
fcompl
xchg
xchg
int
int3
cmp
cmpsb
pop
ss
dec
loopne
mov
lods
or
ret
rcll
push
addl
xchg
clc
imul
ret
add
cmpb
subl
or
adc
mov
push
mov
sbb
or
mov
gs
adc
dec
sbb
jbe
outsl
mov
add
sbb
add
adc
sub
dec
sbb
out
bound
pop
je
mov
movsb
cwtl
mov
addb
mov
fstl
imul
fstpt
jle
and
imul
jb
or
add
push
out
jecxz
adc
test
xor
mov
popa
outsb
ret
xor
loop
inc
cmpsb
cmp
flds
push
fldt
mov
ds
rorl
mov
ret
ret
dec
mov
jnp
ret
stos
movsl
xchg
xor
push
fdivr
or
pop
adc
mov
pusha
mov
fnsave
push
add
and
mov
pop
mov
fwait
enter
add
aad
push
jae
and
pusha
hlt
jmp
or
adc
push
add
and
out
sub
stc
arpl
cmp
test
jl
xchg
fnstenv
pop
xor
cmpsb
lds
fbld
sahf
loope
jl
xchg
lcall
test
sub
rcrb
nop
xor
mov
xchg
pop
out
fdivrl
lock
clc
sbb
push
mov
lahf
pop
vphaddbw
mov
arpl
inc
cmp
lahf
outsl
sahf
ljmp
push
popf
dec
int
jg
bound
pop
mov
pop
or
dec
mov
scas
and
xchg
mov
dec
inc
jns
lahf
in
stos
lods
pop
into
cmc
test
pushf
cmp
mov
rcrl
stos
movsl
js
bnd
pop
pop
mov
cmp
mov
adc
repz
cmp
or
enter
mov
sarl
movsl
sbb
cmp
push
rclb
nop
enter
ljmp
cmp
mov
out
jnp
aas
imul
pop
push
cmp
ret
decb
lock
data16
fcompl
dec
lods
push
and
fildll
xor
dec
xor
pop
sub
add
scas
xchg
mov
add
movsb
mov
mov
lods
fldl
pop
cmp
into
adc
stos
mov
lods
or
sti
lds
lret
jecxz
mov
inc
sbb
xor
mov
jl
sub
daa
and
stc
icebp
or
call
loop
mov
push
jae
cmp
adc
mov
cs
mov
mov
sbb
stos
dec
dec
pusha
outsb
xchg
test
mov
pop
xor
sub
sbb
pop
xor
popf
inc
lahf
mov
push
xchg
lods
lret
ret
pop
push
in
push
push
sbb
inc
mov
pop
sbb
aaa
push
dec
push
add
movsb
bnd
cmc
ja
cs
and
imul
xor
je
mov
pusha
xlat
jle
arpl
insl
pop
sub
jp
fisttpl
add
in
mov
lock
fnsave
sub
cmpsl
gs
sbb
push
add
or
std
pop
lock
cs
mov
cmovp
mov
sbb
pop
aam
xor
adc
adc
add
lock
sbb
xchg
mov
stc
fstpt
outsl
adc
daa
pushf
popf
lods
jecxz
xlat
in
or
push
inc
dec
aam
cmp
and
lea
xor
and
mov
push
ljmp
mov
icebp
pop
cltd
adc
add
xlat
ljmp
pop
das
pop
icebp
dec
imul
sbb
jns
mov
jnp
arpl
inc
orb
add
adc
lea
jg
add
push
cmp
mov
cmp
push
and
dec
outsb
gs
mov
fsubp
sti
ljmp
clc
and
clc
mov
mov
jg
movsl
movsl
add
ss
mov
pop
push
lret
addr16
sub
pop
push
rorl
xor
xchg
out
mul
out
mov
jae
dec
adc
fcmovne
jle
mov
mov
mov
xchg
subl
fs
or
xor
cmpsb
xchg
lods
push
and
pop
repz
xchg
fwait
iret
movsb
test
js
xor
icebp
dec
pop
test
fisubrs
stc
push
adcl
rorb
and
test
test
nop
mov
stos
test
pop
addr16
cmp
sarl
cltd
xor
sahf
adc
pop
xchg
lret
pop
jecxz
lods
push
mov
outsb
inc
jmp
and
js
lods
dec
sub
addr16
inc
and
das
cs
mov
fs
repnz
scas
lock
test
scas
dec
insl
inc
jp
lods
fsubs
adc
jg
mov
hlt
fwait
xchg
dec
mov
cmp
lods
aam
decb
arpl
out
cmp
mov
add
or
cwtl
mov
sbb
cmp
sub
cmpsl
andb
pop
sub
xor
lahf
xchg
pop
dec
cmp
test
fwait
lahf
sub
jae
jae
jno
mov
std
or
inc
and
xchg
push
scas
loope
shll
mov
xchg
pop
add
push
push
hlt
aaa
shlb
xchg
es
jle
into
dec
adc
sub
insb
jl
adc
sbb
call
pop
pop
jl
loopne
lret
jnp
add
mov
mov
jg
dec
adc
add
xor
int3
mov
xlat
jo
jne
adc
or
dec
scas
inc
out
mov
andl
add
jg
sbb
xchg
icebp
arpl
or
lds
xchg
outsb
daa
push
xor
pop
xchg
jnp
cmp
dec
outsb
push
xor
out
notb
inc
add
mov
xor
fsubrl
and
xchg
repnz
push
movsl
sub
mov
and
sub
add
mov
aad
clc
lock
inc
xor
fsubs
jg
ljmp
mov
mov
fdivrs
jmp
mov
jns
cltd
loopne
sub
pop
ret
ljmp
aaa
test
xchg
clc
outsl
imul
xlat
fisubl
jb
orl
jp
push
bound
inc
das
xchg
inc
daa
mov
mov
push
inc
push
push
sbb
imul
loope
imul
pop
push
popa
insb
xchg
or
leave
mov
jae
sarl
in
jns
stos
mov
lods
xlat
add
hlt
mov
lds
dec
push
mov
imul
mov
jne
mov
inc
xchg
push
dec
pop
and
into
mov
testb
cs
push
push
fnstenv
push
xchg
dec
aad
cwtl
pop
adc
sub
jle
push
ss
es
ds
into
neg
out
inc
mov
mov
data16
push
jle
push
ss
es
ds
into
neg
out
inc
mov
mov
cs
jle,pn
sahf
ss
mov
push
incb
into
cs
push
inc
mov
push
xchg
add
push
pop
inc
push
ss
es
mov
dec
inc
mov
ds
pop
push
imul
sbb
or
int3
pusha
pop
push
sub
inc
push
mov
orl
sarl
and
xor
add
adc
push
xor
mov
xchg
fadd
enter
xor
add
adc
popa
popa
jo
inc
inc
dec
push
mov
in
clc
cmpsl
xchg
push
insl
inc
inc
sbb
je
fldt
cltd
inc
push
and
adc
rcr
lock
stc
adc
pusha
imul
leave
fstp
cmp
jle
test
jns
add
aam
jmp
dec
mov
lcall
mov
push
adc
fmuls
cmp
inc
xchg
jno
dec
dec
mov
pop
test
adc
icebp
call
shrl
movsl
into
xchg
call
sahf
adc
pop
outsb
movsb
cltd
jle
xchg
add
fdivs
sarb
daa
pop
mov
push
stos
lret
inc
fadds
and
outsb
mov
ror
icebp
and
xor
add
adc
js
pop
inc
push
push
mov
adcl
xchg
push
and
jge
jl
or
push
add
mov
shr
loope
xchg
lea
push
dec
dec
pop
ja
js
adc
push
jg
int
cwtl
out
ret
clc
test
test
inc
bound
imul
inc
dec
push
mov
orl
sarl
and
xor
add
adc
push
push
mov
orl
sarl
and
sbb
xchg
or
pop
push
lea
je
xchg
inc
add
cmpsb
es
shlb
sahf
std
jmp
or
add
sub
cmpsb
mov
fldl
dec
lahf
dec
std
lock
pushf
aad
and
mov
dec
shrb
stos
movsl
push
lds
mov
sbb
sub
push
or
aas
dec
fsubrl
xchg
push
push
arpl
pop
fstpt
adc
push
outsb
sub
test
push
inc
sbb
pushf
dec
dec
xchg
cmp
ret
dec
ljmp
out
mov
cltd
cmp
mov
and
ficompl
repnz
subl
jg
inc
shll
adc
hlt
push
div
outsl
pop
cmp
data16
mov
je
ds
sarb
movsl
push
aas
jl
mov
push
mov
les
inc
xor
ss
push
mov
and
aad
stos
sbb
rolb
stc
cmpb
fcmovbe
outsl
mov
or
test
pusha
sub
cmp
push
jp
jns
xchg
ja
popa
lods
cwtl
daa
mov
movsl
ret
movsb
mov
leave
std
mov
xchg
ret
lahf
cmp
test
or
stc
mov
shlb
sbb
stos
lock
sbb
je
out
pop
jnp
dec
ja
stc
dec
mov
pushf
pop
jae
js
dec
stos
outsl
fildll
mov
js
add
subl
and
pop
adc
pop
divl
daa
pop
push
jl
mov
jecxz
cmpsb
or
outsb
sub
xor
cmp
pop
call
dec
pop
mov
std
inc
je
scas
xor
jne
pop
push
outsb
pusha
dec
and
rol
lods
lret
out
jmp
shll
ljmp
jo
adc
ds
or
adc
push
pop
ljmp
pop
lret
inc
sbb
or
mov
cmpsl
mov
loopne
sub
cmp
inc
adc
into
fucomip
mov
out
out
cmp
lock
jp
mov
aaa
add
or
cmpsl
pushf
xchg
jb
hlt
cwtl
leave
pop
jmp
mov
movl
pop
xor
jl
pop
inc
imul
jl
pop
andl
xchg
rorb
xor
ds
jno
rcr
or
cmc
inc
sbb
fdivrl
test
lret
popa
aad
mov
test
mov
inc
xor
mov
js
orb
and
nop
repz
cmp
jae
jl
xchg
faddl
mov
push
dec
sbbb
cmpsl
lcall
xchg
stos
mov
daa
sub
les
sub
pop
shll
out
mov
mov
mov
scas
movsb
in
mov
lret
lock
enter
stos
loope
out
flds
jmp
xor
mov
push
shrb
adc
mov
adc
hlt
clc
sub
xchg
sti
jecxz
mov
sbb
js
fcoms
cmp
pop
cmp
mov
ftst
pop
cmpsb
push
adc
aas
les
push
popf
ja
stos
mov
inc
sbb
cld
pusha
or
test
test
inc
cmp
and
out
mov
lds
cmp
jmp
jns
push
stc
cmp
jo
pop
mov
mov
mov
xchg
lock
shrl
xchg
aaa
xchg
or
les
push
sbb
dec
sbb
xchg
orb
cmp
rep
push
out
push
lret
ds
into
das
sub
mov
inc
sub
cmp
xor
and
and
lret
jl
popf
incl
jno
lahf
mov
mov
fs
fcmovbe
aaa
fmuls
aad
xor
xor
pop
inc
lock
mov
in
push
ljmp
mov
in
pop
vhaddpd
cli
ds
push
mov
cltd
dec
iret
pushf
mov
in
je
jge
and
jmp
push
and
and
lret
add
cwtl
out
cmpsl
add
jmp
cmpsl
fadds
pop
mov
mov
sbb
cltd
cmp
ret
outsl
jo
cmc
imulb
outsl
dec
xchg
push
sar
stc
lahf
push
mov
pop
jge
scas
xor
sub
add
inc
push
mov
push
aas
fucomip
jno
hlt
rolb
cmp
add
repnz
pop
mov
cltd
rclb
addl
cwtl
push
xlat
cwtl
lods
or
icebp
xor
dec
shrl
call
or
pusha
dec
cmp
repz
lea
into
ficompl
notl
es
or
addb
shll
or
and
fbstp
repz
cmpsl
jge
or
test
push
dec
fcompp
fcmovne
incl
mov
mov
fcmovbe
mov
jp
mov
jae
push
lahf
and
out
dec
inc
pop
mov
out
arpl
mov
xchg
pop
pop
mov
bound
ss
shll
jge
mov
lret
fwait
std
mov
sub
and
sbb
xchg
sub
pusha
pop
pusha
nop
jl
imul
cmp
cmp
and
or
dec
add
and
mov
adc
lret
push
mov
repnz
add
in
inc
mov
mov
enter
and
inc
out
xor
mov
lcall
ds
pusha
sub
dec
movsb
dec
add
out
push
arpl
ds
pop
sub
cmp
insl
sub
cmc
pop
mov
aas
test
push
shlb
mov
fdivp
je
fwait
jmp
daa
pop
and
jbe
cli
add
xchg
pop
test
cmp
scas
pop
daa
cli
sbbl
movsl
aaa
loope
sbb
orl
add
movsl
lea
shl
adc
sbb
rorl
xchg
mov
std
adc
fistl
mov
hlt
lret
sti
jno
xchg
mov
loope
in
sbb
jne
mov
les
xchg
mov
pop
push
xor
std
xchg
out
in
out
sbb
out
inc
ljmp
frstor
outsl
dec
dec
fistpll
notl
mov
add
mov
je
sub
mov
dec
dec
pop
xchg
push
jmp
pop
mov
lods
inc
cmpsl
rcl
out
dec
mov
std
fidivl
xchg
pop
sub
xchg
les
inc
lods
pop
xchg
scas
ljmp
xchg
cmpsl
shll
push
jle
hlt
push
lret
mov
inc
mov
xchg
dec
dec
sbb
mov
jbe
adc
enter
mov
ds
movq
mov
and
aaa
jmp
fs
sbb
shl
sbb
sbb
mov
xchg
fisubl
push
pop
push
out
test
jmp
movsb
push
adc
jnp
push
leave
adc
pop
push
jo
int3
mov
dec
and
fld
sbb
popa
sbb
ret
ja
int3
push
inc
cld
aad
push
adc
inc
mov
das
loopne
call
dec
and
inc
leave
ds
xor
jb
mov
test
pop
mov
ret
push
aad
outsl
addr16
adc
outsb
jns
or
push
enter
lret
leave
adcb
fistpll
jnp
or
pop
push
stc
push
or
jbe
mov
or
add
shr
cmpsb
lret
mov
fwait
mov
dec
iret
xlat
push
ja
xchg
push
push
jno
jne
mov
and
push
fidivs
sub
mov
pop
or
sbb
inc
insl
mov
test
sub
aam
mov
je
push
stos
dec
outsb
icebp
and
sub
lods
add
mov
or
ret
fadds
aaa
mov
test
xlat
fmuls
xor
stc
fists
xchg
ret
cmpsl
mov
dec
mov
imul
out
lods
filds
out
cld
pop
jge
lods
mov
outsb
sbb
or
dec
fldenv
fadds
sbb
push
dec
and
jmp
cmp
xor
imul
cmp
test
mov
into
ds
add
orl
ficompl
sbb
cmpsl
sbb
in
cmpsl
xchg
and
sub
popf
xchg
inc
xchg
insw
das
hlt
cwtl
outsb
dec
or
xlat
xor
pop
mov
mov
fisubrl
incl
jp
adc
mov
mov
arpl
daa
testl
push
je
outsl
sub
shrb
in
test
repz
cmp
or
fdivs
pushf
inc
cli
mov
sbb
stos
scas
sahf
jge
stc
scas
bound
lret
cltd
cld
aaa
mov
jecxz
push
repz
stos
outsb
iret
jo
outsb
xchg
cltd
or
jg
loope
mov
fwait
and
adc
lea
les
inc
jb
jno
and
adc
xor
insb
jmp
xor
pop
clc
outsb
xlat
and
xor
xchg
loope
push
ljmp
shll
rcrl
jne
aam
idivb
movsb
jno
or
fists
loop
jbe
mov
mov
fucomip
xchg
inc
cltd
movsl
pop
cld
cmp
dec
xor
push
mov
xor
mov
pop
inc
xchg
xor
pop
fwait
leave
or
xor
jns
outsl
sarb
icebp
sub
push
cld
xchg
inc
mov
push
loope
lret
popl
pop
pushf
cmpb
leave
stos
cli
ds
test
icebp
xchg
inc
xchg
push
xor
pusha
test
decb
mov
xchg
sbbb
cmpsl
int3
rcrl
sbb
shll
push
shll
data16
cmpsl
push
cmpsl
pop
and
cmp
sbb
push
pop
mov
mov
jo
adc
jne
lods
lahf
icebp
jne
sbb
add
add
cmp
fucomp
movsb
stc
and
mov
daa
cmp
xchg
mov
and
test
pop
dec
xchg
movsl
or
xorl
sub
clc
mov
loop
jae
fwait
outsl
jne
sub
mov
cmpb
pushf
addr16
hlt
stos
jmp
push
dec
lds
jnp
mov
fists
and
scas
xchg
ffreep
sub
loope
inc
rorb
mov
sarl
sbb
push
fsubl
mov
pop
push
mov
xchg
xlat
sbb
leave
outsb
out
push
inc
pop
mov
jge
push
bound
xor
test
inc
aas
xor
in
dec
mov
mov
stc
cmp
int3
fwait
mov
jo
mov
add
dec
dec
bound
je
lret
lds
or
imul
lret
fildll
push
addr16
insl
leave
inc
lcall
not
mov
pop
cmp
aaa
insb
adc
adc
jecxz
xchg
ret
bound
dec
aaa
xchg
rorl
movsb
sub
stos
shlb
repz
mov
cmpsl
add
aam
rolb
aam
mov
stos
or
xor
add
mov
pop
adc
inc
out
movsb
jmp
insl
jp
cmp
in
rol
in
mov
divl
cmp
push
dec
xchg
bswap
dec
pop
mov
loopne
dec
fisttpll
stos
ljmp
sysret
pop
push
inc
and
cmp
cmp
push
cld
sbb
inc
ljmp
push
cli
xor
test
sub
mov
mov
cmpsl
cmp
mov
cmp
lret
jge
sub
cwtl
mov
and
jmp
push
and
lods
push
int
test
xchg
shll
dec
push
movsb
out
pop
in
mov
inc
enter
and
sbb
mov
fiadds
notb
in
sar
leave
sar
pusha
adcb
pop
rorb
aaa
sbb
ror
push
je
testl
push
out
mov
mov
cltd
cwtl
xor
ljmp
push
lret
loope
lret
and
pop
scas
dec
mov
push
cmpsb
mov
xchg
dec
popa
rorb
out
inc
dec
loope
mov
xlat
leave
pslld
add
inc
loopne
pushf
add
add
jge
and
add
cmp
fcomp
in
add
jb
sti
mov
montmul
cmpsb
loopne
lret
in
mov
cmp
pusha
jecxz
mov
dec
or
subb
mov
cmp
cmp
inc
test
outsb
out
jle
sbb
int
pop
out
push
mov
sbb
iret
mulb
es
xor
test
sbbb
test
lock
imul
pop
cld
cs
jne
clc
push
mov
shrb
test
mov
xor
lret
dec
add
sbb
mov
clc
mov
cli
mov
ja
in
movsb
negb
shl
rorl
pop
lods
orb
lods
inc
je
adc
cli
pusha
pop
jns
jmp
mov
repnz
pop
push
sbb
mov
sahf
loopne
ss
lods
mov
insl
jns
rol
adc
sbb
divb
cmpb
xor
mov
mov
jnp
or
nop
sub
mov
fstpl
fnstcw
adc
add
fs
dec
outsb
dec
stos
mov
jge
sbb
aas
mov
xchg
roll
pop
and
mov
jb
test
adc
inc
lret
add
jmp
inc
xchg
out
cmp
pop
sub
xor
nop
pop
mov
jecxz
repnz
ds
adc
cltd
add
andb
push
xor
cmp
in
push
push
hlt
cwtl
xchg
mov
and
clc
lds
scas
xor
inc
push
mov
or
fisubrl
cltd
xor
mov
adc
sar
cli
bound
jl
sbb
inc
xchg
fcompl
int3
jns
sub
mov
lods
mov
hlt
push
cld
adcb
dec
cltd
in
adc
fstps
xor
cmp
cmc
stc
xor
and
inc
sbb
and
fwait
loop,pn
adc
call
jge
cs
and
jecxz
and
sbb
dec
sti
frstor
sti
dec
cld
mov
shlb
imul
and
inc
int3
arpl
pop
add
sahf
test
aaa
faddl
xor
mov
scas
lods
push
cli
leave
mov
mov
push
or
cmc
add
inc
xor
pop
imul
cwtl
lods
lcall
push
test
jg
pop
imul
cmp
loop
xchg
add
mov
add
cmp
lods
or
dec
call
subb
pop
push
testl
or
jg
push
dec
je
fdivrl
cwtl
out
add
ret
sub
fwait
sbb
sub
jns
jb
xchg
push
mov
je
or
sbb
movsb
in
aas
inc
xchg
mov
cld
mov
jnp
xchg
out
int3
mov
rclb
sbb
rcl
push
add
fidivrl
fimuls
ja
das
ficoms
sub
out
sub
fwait
xchg
mov
pushl
pop
and
mov
mov
inc
dec
fwait
push
lock
jne
push
stos
mov
dec
mov
fs
imul
push
cltd
leave
bound
in
call
jp
enter
jb
in
push
rorl
test
loope
cmpsl
sbb
shr
ret
sahf
push
and
inc
dec
mov
inc
arpl
xchg
leave
xor
jae
push
pop
notb
mov
mov
mov
nop
mov
lret
popf
xchg
mov
cwtl
lret
xchg
mov
clc
leave
push
xlat
fsubrl
shll
fucompp
arpl
jno
pusha
sub
clc
dec
lds
mov
shll
add
jno
mov
jnp
movsb
push
add
push
mov
mov
inc
notl
jbe
test
fstps
aas
cmp
shlb
fwait
fs
popf
shrl
loopne
xlat
jge
andl
hlt
adc
lret
lods
out
repz
add
shll
jbe
cmp
push
mov
fwait
adc
pop
or
movsl
adc
adcl
arpl
add
aad
popa
in
adc
testl
into
mov
add
cmp
pop
xchg
cmpb
xor
popa
pop
in
das
inc
in
addr16
test
or
sub
pop
dec
cmpsl
leave
and
jae
mov
jl
mov
or
iret
ret
fidivrs
shl
sbb
jns
adc
mov
lock
push
mov
scas
enter
dec
cwtl
aas
mov
in
mov
movsl
adc
mov
sub
fiaddl
and
rcrl
int3
enter
pop
sub
addr16
add
jae
dec
les
lods
push
push
loop
inc
jg
out
and
add
lods
sbb
negl
bound
mov
mov
shlb
call
mov
ret
sub
add
mov
ds
jp
and
mov
das
adc
push
jecxz
cmp
and
stos
pop
push
jmp
mov
fldenv
lcall
sub
push
fistpll
mov
inc
inc
mov
mov
aam
andl
mov
sti
ja
add
aas
push
rcrb
jl
mov
pop
push
cs
mov
leave
or
pop
mov
lret
inc
lcall
ss
push
and
ror
dec
lods
sbb
mov
jg
fs
cmp
and
into
sub
jbe
les
ja
mov
dec
ss
jns
out
push
inc
and
aaa
add
pusha
sahf
inc
add
dec
and
mov
cld
insl
mov
into
js
stc
pop
inc
mov
and
pusha
mov
sub
js
enter
ffree
es
push
out
hlt
jle
and
fnstcw
xor
ss
sbb
imul
adc
xchg
push
inc
add
imulb
arpl
push
lock
adc
mov
adc
jecxz
dec
arpl
test
ljmp
add
push
or
or
in
repnz
xor
lock
repz
mov
pop
pop
dec
sub
out
sub
fcomp
insl
dec
les
aas
jo
inc
inc
jb
aaa
jae
and
lock
jbe
pushf
dec
lcall
iret
cmp
dec
das
sbb
das
and
call
sbb
popa
fsubrp
mov
sbb
mov
xor
sub
push
test
jbe
int3
divb
pusha
push
jecxz
xchg
push
xor
data16
out
and
push
push
ja
scas
dec
into
mov
out
pop
into
xchg
nop
inc
cwtl
addb
sbb
fdiv
jae
int
push
je
aas
loope
repz
lea
imul
pop
and
xchg
loopne
add
in
movsl
add
mov
pop
jecxz
cmpsb
lds
push
push
mov
mov
imul
cli
sbb
test
pop
sub
clc
int3
loopne
movsl
jae
lret
inc
dec
and
loopne
xlat
cmp
inc
inc
mulb
pop
push
leave
das
outsl
jl
push
or
or
add
pop
pop
mov
leave
and
stos
inc
push
push
mov
or
and
lods
mov
mov
jae
sbb
mov
test
daa
xor
push
inc
push
jmp
lods
and
or
push
xor
mov
cmp
adc
call
ds
jmp
and
cmpb
mov
jl
mov
lock
mov
aam
ds
jns
es
popf
sbb
sbb
pop
xor
sarl
jl
pop
stos
adc
sbb
xchg
cmpl
lods
lods
subl
lock
les
fdivs
inc
out
xchg
nop
inc
ds
sahf
sub
mov
lret
fwait
mov
inc
add
and
filds
jnp
mov
add
dec
cmp
out
dec
insb
adc
push
xor
xchg
and
icebp
jae
or
xor
sbbl
cmp
add
pusha
cmpb
adc
popf
test
inc
and
pop
xor
in
call
movsb
jmp
fsub
in
clc
inc
fwait
jge
mov
mov
cmc
sub
test
jno
fists
pop
mov
fdivrs
fbstp
mov
add
mov
movsl
fidivs
cmovo
xchg
or
cld
cmp
mov
out
cli
sub
add
inc
out
lods
stos
mov
les
or
arpl
popf
outsl
sbb
cmc
cmc
add
out
dec
bound
xor
inc
scas
orb
push
in
int3
or
roll
adc
movsbl
mov
lret
pop
mov
mov
xchg
dec
sbb
add
fsubl
popa
test
ja
cmc
stc
sarl
dec
mov
movsl
out
lcall
dec
push
adc
out
push
jae
lds
in
xchg
dec
icebp
pushf
pop
into
clc
cmp
mov
outsb
xchg
jecxz
adc
or
js
push
push
mov
orl
sarl
and
xor
add
adc
push
push
mov
orl
sarl
and
xor
add
adc
push
push
mov
orl
sarl
and
xor
add
adc
push
xchg
inc
mov
mov
daa
ds
cs
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
inc
lcall
leave
mov
movsl
dec
fidivrl
ljmp
cmc
sub
mov
inc
lcall
add
adc
and
xor
les
aam
in
hlt
sub
dec
movsb
cmp
fs
adc
and
xor
les
hlt
sub
fisubrl
lcall
int
lahf
sub
and
out
movsl
test
add
xor
shl
mov
or
fisttps
cmp
mov
pop
adc
leave
stos
cmp
push
cmc
sbb
or
repz
cmp
pop
cwtl
arpl
push
popa
sbb
out
cmc
in
xor
aam
jmp
jecxz
push
or
jbe
stos
and
add
mov
rcll
lds
mov
test
jne
aas
mov
fistl
cmpsl
out
jno
sub
sbbb
mov
xlat
dec
imul
or
jne
fdivr
push
scas
out
test
outsl
and
sbb
fsubrl
aam
sbb
mov
je
add
adc
and
xor
les
aam
in
hlt
sub
mov
add
rcrl
lret
ss
in
mov
xchg
cmp
js
sub
lcall
add
push
scas
pop
lea
mov
pop
hlt
inc
test
cli
and
pop
sarl
rcll
rcrb
iret
dec
ficoml
and
xor
les
aam
in
hlt
sub
mov
inc
lcall
add
adc
and
xor
les
aam
in
hlt
sub
mov
inc
lcall
cli
push
push
jbe
test
sub
clc
in
out
int
add
mov
mov
dec
xchg
outsb
js
and
aam
sub
or
adc
lds
sbb
cmp
addr16
mov
jnp
push
ja
fidivs
cwtl
mov
or
mov
iret
mov
sbb
sub
xchg
mov
je
dec
test
jns
addb
mov
scas
pop
loope
cmpb
rcrl
xchg
iret
lcall
inc
pop
xchg
stos
push
mov
pushl
sbb
and
test
rcll
adc
pop
inc
jl
cmp
idivb
push
pop
jle
stos
int3
xchg
pop
scas
lahf
stos
mov
pop
xor
cmpsl
xchg
fwait
push
fisubl
sbb
cmp
adcl
dec
data16
mov
iret
ret
or
inc
fistpl
test
mov
jo
xchg
sbb
push
mov
fcoml
out
xrelease
or
orl
jle
jle
ljmp
cmpsb
test
sbb
je
cltd
push
and
sbb
pop
sarl
xchg
lods
push
xchg
insl
cmp
and
mov
out
psrlw
xor
add
std
mov
adc
lock
mov
cmp
mov
jl
sti
jg
pop
shr
jp
repz
push
mov
mov
adc
insb
and
in
dec
pushl
mov
adc
inc
adc
mov
shrb
and
xor
cld
popa
jnp
dec
dec
add
push
cltd
dec
lret
adc
lret
movsl
or
mov
push
mov
repnz
imul
sbb
notb
fmul
mov
pop
cmp
and
sti
icebp
xchg
inc
xorl
or
fxch
cli
and
rorb
imul
xor
out
dec
outsb
push
mov
sahf
adc
dec
dec
pusha
sub
push
icebp
test
mov
inc
mov
testl
out
jbe
push
mov
cmc
jb
ja
mov
jbe
shrb
shlb
iret
aad
outsb
imul
out
sti
nop
dec
jnp
icebp
loope
adc
cmp
mov
hlt
jecxz
xchg
and
fildll
jg
mov
pusha
test
mov
jns
insl
cmp
dec
jne
mov
or
inc
rolb
scas
xchg
scas
int
sub
cmp
out
das
sub
lret
xchg
sub
cmp
jo
cwtl
orl
mov
mov
push
lods
mov
xchg
mov
ret
ret
xchg
ss
fisttpl
jbe
push
movsb
in
insl
inc
xor
cmpl
test
nop
fstp
lcall
or
leave
add
inc
idivb
xchg
mov
jns
cld
push
mov
loop
ja
icebp
inc
scas
cmp
adc
test
sub
or
push
out
inc
sub
push
mov
popf
pop
mov
jbe
pop
rorb
ja
fistl
push
loopw
pop
leave
mov
pop
fcoml
pop
xchg
int3
sahf
mov
jno
lock
jmp
sub
push
int3
fst
imul
adc
gs
jmp
jmp
sub
fildll
lds
mov
jnp
dec
pop
cmp
jae
scas
xlat
negl
add
push
loop
lret
dec
sub
rorl
js
mov
stos
scas
fnstcw
xchg
and
pop
mov
mov
in
into
cmc
aas
sbb
lock
xor
pop
movsl
push
mov
mov
and
inc
iret
sbb
xlat
outsl
adc
rolb
test
and
inc
sahf
push
or
adc
fcoms
loopne
lahf
mov
jne
xchg
cmp
xchg
into
sbbb
pop
pop
dec
adc
sbb
mov
mov
rol
or
sbb
out
cld
cs
es
pop
int3
les
test
mov
in
imulb
and
pop
and
push
sbb
enter
ret
stos
into
inc
shl
mov
hlt
cmp
iret
lods
mov
pop
mov
je
and
cmp
outsl
pusha
push
sar
xchg
xchg
xor
inc
sub
and
outsb
cld
sub
pop
and
xlat
clc
xchg
jne
xor
xchg
sbbb
ret
mov
inc
sbb
push
rcr
aam
jns
lea
inc
inc
dec
dec
cmpsb
mov
add
mov
repz
mov
fisttpl
or
adc
push
addr16
fcoms
pushf
jg
aad
repnz
xchg
cmc
pop
fs
popf
test
mov
jl
mov
dec
fld
xor
push
int3
aad
lldt
imul
div
xchg
xor
roll
push
and
xorb
jo
ficoml
nop
sub
mov
scas
ret
jle
shll
push
mov
xchg
filds
and
dec
pop
lods
xor
adc
ds
fstl
dec
inc
push
push
xor
inc
xchg
adc
faddp
xchg
and
push
pop
hlt
je
andl
nop
jmp
inc
dec
adc
leave
mov
xchg
xchg
dec
addr16
sahf
jle
jmp
xchg
imull
pop
add
add
xlat
sub
mov
cmp
xor
sbb
in
cmp
mov
rorb
iret
sub
xchg
clc
pop
and
es
loop
pusha
dec
xor
clc
ss
loopne
sahf
mov
mov
leave
push
lock
xchg
fistl
cmp
mov
pop
cmp
xor
repnz
addl
cltd
subl
cmc
outsl
push
jno
sbb
xor
scas
pop
test
and
pop
jmp
movsl
xchg
repnz
clc
lcall
or
or
movsl
and
inc
in
popf
leave
push
test
mov
push
mov
push
dec
test
pop
sbb
jmp
sti
xchg
fsts
mov
iret
jecxz
jnp
nop
xor
sub
or
bound
cmp
adc
xchg
mov
inc
and
sub
sti
mov
mov
fstps
cmp
leave
jbe
sbb
lcall
cmp
pusha
inc
out
cmp
std
push
ja
mov
pop
nop
dec
std
cmc
daa
dec
lds
aas
xchg
lcall
adc
imul
add
cmp
inc
or
dec
repnz
fs
jecxz
into
xor
jns
out
mov
xchg
lahf
jg
les
pop
faddl
adc
jne
xor
add
into
pop
out
jecxz
repz
ret
fldcw
adc
xchg
andl
fimuls
dec
or
sub
sbb
lods
aad
cmp
aas
hlt
mov
jl
sub
pop
scas
fwait
shrb
add
jp
sahf
jbe
out
or
fidivl
lock
aas
ret
pop
mov
xchg
insl
out
sbbb
aas
out
push
outsl
xor
mov
xchg
fwait
jo
dec
inc
shll
xchg
mov
lock
out
call
mov
into
mov
pushf
mov
jl
std
movsb
sbbl
call
pop
aam
push
loopne
cmp
in
cmp
mov
in
lcall
push
jmp
out
pop
pushf
xchg
dec
stos
addr16
inc
jl
dec
mov
dec
or
and
pushf
jbe
xor
xor
icebp
movsb
and
hlt
lret
nop
inc
int
dec
cmpsb
inc
aaa
cmp
ljmp
push
imul
es
gs
filds
lret
addb
add
xor
xor
mov
pop
mov
or
cmp
lahf
push
sub
xchg
adc
loopne
inc
ret
and
insl
adc
xchg
pop
xor
hlt
push
jne
push
jg
xchg
pop
leave
or
jecxz
adc
xorb
aaa
fistl
out
pop
call
mov
addl
in
xchg
push
or
stc
mov
mov
mov
mov
testl
dec
pop
call
pop
or
xor
push
dec
js
inc
dec
filds
fisttpll
in
mov
or
dec
stc
and
pop
cltd
rclw
add
push
ja
aam
mov
fsubs
loop
daa
push
and
dec
mov
jns
dec
sti
mov
push
jecxz
mov
dec
enter
cwtl
jp
enter
and
mov
mov
outsb
subb
xor
cmp
push
movsl
add
sahf
or
dec
mov
inc
cmp
call
xchg
inc
rcll
add
or
mov
push
out
aam
xchg
pop
outsl
out
pusha
xchg
scas
push
adcb
popa
mov
cwtl
adc
int
pop
cld
push
sbb
es
outsb
sub
or
lahf
sarb
jnp
iret
stc
mov
imul
cltd
je
add
insl
mov
add
hlt
jle
ljmp
cmp
jnp
rol
test
fistpll
sbb
stc
mov
sti
cmpb
ss
dec
repz
mov
adc
inc
ja
insb
and
lahf
fldcw
xor
cmp
mov
and
xor
adcl
xor
mov
dec
jo
insb
xor
add
out
inc
mov
test
or
shll
aad
dec
loopne
adc
icebp
xchg
push
std
lret
cld
or
fildll
bnd
je
sti
and
xchg
xorb
jmp
loop
mov
pop
mov
loop
xor
mov
or
dec
andl
pop
add
pusha
adc
cli
hlt
aam
sub
inc
or
test
in
lahf
mov
lret
mov
int3
adc
test
mov
mov
or
das
fdivr
push
icebp
jg
jle
je
jne
aas
rcrb
push
push
mov
inc
xchg
mov
loope
cmp
repz
je
mull
subb
pop
adc
mov
mov
jb
inc
setno
ficomps
test
xchg
xchg
push
int
sub
fstpt
lret
addr16
pop
ret
inc
adc
xor
sbb
cmp
stc
leave
out
imul
repz
stos
inc
sahf
add
pcmpeqb
jl
xor
scas
test
leave
jb
mov
jbe
outsl
mov
sbb
out
loop
ret
sbb
adcl
pop
dec
in
into
and
mov
jmp
mov
inc
mov
push
ret
mov
jo
sbb
repz
mov
or
ss
and
daa
fs
mov
jne
jmp
fs
leave
sbb
pop
andb
dec
jbe
xor
leave
pop
aam
test
push
shrl
scas
outsl
test
mov
aaa
vmovapd
push
and
stc
and
inc
cwtl
stos
xchg
int3
add
subl
jle
push
lock
mov
outsl
movsl
stos
cmpl
mov
loope
mov
xchg
and
sub
or
js
jg
clc
pusha
arpl
fwait
cwtl
jb
mov
jmp
lock
gs
outsl
scas
push
and
push
add
insb
das
insl
xchg
fs
es
std
enter
jne
xchg
dec
cmp
sbb
clc
sti
mov
adcl
stos
mov
ss
int3
mov
lcall
mov
out
popf
aam
jno
mov
arpl
xchg
insb
retw
int
lcall
lret
cmpsl
fnsave
jo
mov
cld
push
repnz
dec
or
ja
das
or
das
add
mov
xlat
rcl
xor
and
pushf
stos
mov
or
adcl
scas
xchg
fwait
mov
sub
outsl
pop
sbb
and
push
dec
loop
movsb
jae
sarb
push
loopne
idivl
ret
cmc
cld
lret
fnstenv
dec
in
mov
push
call
jmp
mov
lock
cli
dec
outsl
mov
call
xchg
or
int
popa
lahf
out
mov
bound
fildl
inc
xchg
inc
xor
out
mov
addr16
stos
xor
mov
int3
pop
jo
movsb
cwtl
jae
scas
cmp
cmpsb
pop
xchg
sbb
popf
outsl
cmp
push
pop
outsb
std
lea
addr16
xchg
repnz
jno
pusha
pushf
pop
cs
push
dec
and
jge
mov
scas
test
jge
lea
pop
or
gs
jb
push
xor
xor
jo
pushf
icebp
lds
pop
mov
gs
mov
outsb
jnp
lods
inc
xor
scas
ror
sarl
dec
dec
jo
push
mov
out
jno
or
push
mov
mov
dec
push
test
pusha
sbb
xchg
adc
mov
test
sbb
repz
je
ljmp
lcall
xor
inc
jnp
ret
dec
or
cld
lret
pop
popa
stc
push
cmc
dec
push
fwait
sub
iret
inc
mov
leave
inc
test
jb
jno
jae
rorl
icebp
daa
rcrb
mov
push
jnp
sub
mov
xchg
outsl
cmp
fdiv
push
iret
mov
pop
out
clc
stos
ja
mov
mov
cmpsl
pop
pop
xor
mov
jge
xchg
addr16
or
jle
scas
rcrb
ucomiss
or
fcomps
sbb
lret
idivl
push
insl
mov
push
and
ds
and
mov
pusha
mov
adc
or
dec
xchg
sub
inc
lock
xchg
call
fbstp
mov
dec
rcl
aas
and
sub
scas
out
cmp
call
fcoml
test
lds
cltd
mov
push
pusha
repnz
jmp
in
sbb
cmpsb
jno
or
sbb
imul
pop
call
addr16
stos
add
add
jle
lock
fwait
or
jne
dec
mov
push
fdivrs
cmp
and
mov
adc
enter
push
xor
dec
lea
cmp
pop
adc
mov
mov
fistpll
cmpb
ja
mov
prefetch
pusha
push
add
cmp
or
movsb
cmp
jp
movsb
xor
xor
add
loop
xor
arpl
or
fstp
push
and
addr16
mov
add
lret
stos
fiadds
aad
push
aaa
mov
lock
push
sbb
pop
testb
jb
aam
test
cmp
cmp
nop
addr16
int
xchg
mov
xor
lcall
adc
shl
xchg
cmp
xchg
inc
or
in
lcall
outsl
sub
push
test
cli
mov
jns
scas
fistps
mov
cwtl
sbb
aam
call
test
xlat
insb
jne
add
xor
jne
ljmp
fcoms
sub
imul
aad
stos
cs
out
sbb
sub
cmpsb
pop
pusha
test
sbb
shlb
punpckhbw
aaa
iret
ficomps
adc
call
out
jle
repz
jnp
adc
xchg
out
dec
pop
adc
xchg
cmc
outsl
add
mov
mov
test
jmp
fisttpl
mov
xor
clc
loope
insl
sbb
outsb
fmuls
lret
ss
hlt
mov
jo
mov
mov
add
out
and
vmwrite
sbb
in
dec
dec
push
leave
ss
sarb
mov
xor
iret
sbb
sub
pusha
cwtl
xchg
loopne
vphsubw
fistps
sahf
repnz
out
mov
mov
mov
pop
cmc
std
inc
add
int
mov
push
hlt
sbb
and
dec
push
int3
pop
mov
stc
xchg
jae
into
and
inc
enter
mov
and
pop
add
dec
clc
adc
push
pop
dec
jecxz
sti
test
push
imul
lcall
out
mov
cmp
push
dec
jmp
lret
fwait
sbb
mov
popf
pop
or
pushf
and
cmpsl
jno
cmp
and
sbb
xchg
and
imul
xor
xor
repnz
fcmovnu
and
cmp
fcompl
mov
data16
stc
mov
and
mov
ret
adcl
mov
cmpsl
xor
xchg
mov
mov
repnz
xchg
cmp
sbb
lmsw
sbb
xchg
mov
neg
in
xchg
push
mov
mov
gs
gs
sbb
js
inc
adc
push
inc
call
lds
into
out
and
fsubs
jl
mov
push
sub
cmp
in
stos
shll
lret
jns
out
jecxz
pop
rcr
ret
adc
adc
in
cli
addb
add
cmp
sbb
xchg
jmp
push
inc
pop
mov
lods
inc
test
es
push
mov
jnp
lcall
test
mov
imul
insl
imul
lret
inc
inc
movsl
mov
in
pushf
mov
push
sub
pop
inc
push
out
cmpsb
mov
aas
rolb
sbb
cmp
cmp
xchg
dec
enter
xchg
testb
push
add
inc
sub
jns
shll
leave
and
incl
test
rcrl
or
int3
jle
mov
or
imul
cmc
loope
inc
dec
mov
je
cmc
sbb
mov
pop
ja
popa
or
int
mov
jb
xchg
xlat
xchg
fsubp
xchg
dec
ss
stc
and
in
jb
pop
out
xchg
cmpsl
mov
push
and
adc
or
pop
jge
imulb
xchg
sub
insb
mov
ss
and
cmp
loope
pop
sub
xor
cs
ficoml
in
cmp
pop
xor
sbb
stos
xchg
cmp
cmc
xchg
daa
pop
push
les
and
nop
mov
aaa
cmc
test
adc
repz
mov
add
mov
fdivl
sbb
in
push
roll
icebp
fcmovnbe
ss
call
pusha
loope
dec
fcomps
xchg
maskmovq
idivl
lret
mov
push
jl
mov
iret
aas
jnp
add
xlat
mov
jecxz
cld
int3
push
pop
dec
jns
loopne
dec
ror
arpl
mov
sti
and
test
mov
hlt
pushf
xchg
scas
outsb
outsl
or
mov
or
pop
mov
and
xor
and
clc
stos
adc
dec
mov
popf
in
jmp
hlt
negl
fiaddl
rcrl
mov
lods
pop
popf
bnd
and
andb
insl
add
fcomps
in
and
mov
pop
mov
xor
ljmp
in
pop
shl
and
jno
sub
mov
gs
test
dec
stc
jecxz
sti
in
stos
mov
sub
ljmp
scas
mov
cld
mov
repz
lahf
sbbl
push
or
das
push
lods
jecxz
mov
fdivrs
add
xchg
or
mov
jecxz
cltd
aad
push
jnp
pop
dec
loope
mov
xchg
mov
adc
sub
xor
mov
sub
jle
adc
add
rep
ffree
xchg
fwait
pop
out
je
sub
lret
cltd
cmpl
xchg
int3
rolb
sbb
ds
test
scas
cmp
or
jmp
or
decb
or
in
cld
cmp
enter
xor
cwtl
or
loop
pop
jbe
es
xor
mov
lds
inc
adc
movsb
push
xchg
jbe
pop
or
xor
dec
cltd
push
cmpsb
push
insl
sbb
fidivrs
stos
xchg
test
xor
lods
push
xchg
ret
mov
xchg
dec
jne
jl
sbb
xor
dec
mov
jnp
push
aad
xlat
outsb
nop
gs
scas
xchg
xor
mov
adc
in
subb
imul
mov
inc
mov
sbbb
and
fdivl
push
mov
lret
pop
dec
sub
inc
jne,pn
in
dec
inc
mov
jg
mov
stos
xor
clc
icebp
dec
aas
inc
ss
decl
mov
pop
jp
popf
push
dec
popa
push
adc
pop
mov
out
ret
sub
mov
mov
sarb
fsubrl
sbb
jb
imul
loop
cmp
dec
mov
xor
adc
adc
mov
inc
xchg
cmpl
mov
inc
pop
enter
popa
push
in
jns
jo
sbb
mov
or
dec
pop
imul
jbe
sbb
and
test
jp
mov
push
sub
hlt
push
pop
fistpl
mov
lcall
sub
gs
adc
and
xor
les
aam
in
hlt
sub
mov
inc
lcall
add
adc
and
xor
les
aam
in
hlt
sub
mov
inc
lcall
test
adc
and
mov
les
hlt
sub
mov
inc
lcall
add
adc
and
xor
les
aam
dec
cmp
pop
hlt
shl
mov
test
xchg
add
and
dec
xchg
and
gs
std
mov
lods
shlb
loopne
lock
add
and
inc
sub
sub
or
push
aam
mov
rcr
mov
add
and
inc
xor
jo
sub
mov
test
scas
sahf
repz
and
or
sub
add
push
std
jmp
mov
inc
ss
mov
enter
push
shlb
jae
in
insb
lods
not
inc
mov
iret
imul
jecxz
adc
and
int3
jl
fs
lock
pop
call
cmpsl
inc
pop
sbb
in
cli
cld
pop
cmpsb
fisubl
pusha
or
test
adcl
cmovo
sub
js
cltd
orb
sub
nop
mov
mov
jmp
or
sti
in
pop
dec
popa
add
je
adc
xor
gs
scas
shrb
xchg
sub
addr16
mov
or
cli
xchg
pop
xor
and
test
pop
loopne
cwtl
lcall
xor
push
cmp
or
add
mov
mov
movsb
loopne
lock
inc
insb
jns
inc
sub
sub
sbb
pusha
xor
adcl
leave
mov
lock
push
xor
sub
jb
js
cs
xchg
cltd
loope
cmc
fisubs
jmp
call
dec
sub
sbb
push
cmp
or
sbb
in
nop
cld
mov
lods
sarb
insb
adc
xor
push
cmp
or
sbb
in
nop
cld
mov
lods
sarb
insb
mov
fwait
lret
adc
lcall
add
jne
add
aam
mov
popa
jg
shrl
cmc
jmp
or
icebp
jne
cmp
mov
mov
adc
mov
icebp
pop
push
add
gs
mov
mov
mov
jnp
pop
aaa
push
lds
pushf
repnz
icebp
cmp
and
fnstsw
xor
insl
clc
ret
push
cmp
std
adc
imul
and
inc
and
je
mov
push
fldt
out
test
adc
mov
cs
jno
cmp
aaa
fdiv
lods
int3
stc
inc
lcall
aas
mov
outsl
mov
test
fildll
dec
mov
pop
pop
jae
adc
inc
leave
stos
xor
mov
lahf
and
jno
pop
mov
cld
xchg
and
jmp
inc
popa
arpl
and
push
int
gs
js
jge
mov
push
popa
je
and
push
xchg
mov
cltd
jecxz
push
lcall
and
push
lcall
cwtl
clc
je
pusha
aaa
mov
ret
je
cmpsb
sahf
or
shll
mov
in
cmp
fistps
divl
movsb
push
sub
ss
int3
pop
inc
stos
popf
and
xor
in
xchg
cmp
int
jg
addr16
out
mov
jl
ss
jo
adc
push
cld
dec
xchg
inc
ja
cld
fwait
add
pushl
pop
sti
cmpsl
loop
mov
out
shrb
push
cmp
aam
sbb
push
fcmovnu
mov
out
xchg
jb
dec
xor
or
je
stos
test
mov
cmp
aaa
in
in
in
sbb
lds
gs
lods
ret
in
dec
mov
push
popf
add
fdivrs
aad
negb
pop
repnz
sbb
pop
leave
fimuls
int
lods
add
adc
adcb
mov
jnp
jne
scas
in
aaa
lret
or
pop
mov
or
push
or
dec
inc
push
gs
push
cmpsb
fdivrp
stos
inc
xchg
in
stc
fucomp
insl
cwtl
inc
outsl
or
into
xor
rcrl
jno
out
or
jle
sbb
xchg
dec
test
pop
loopne
es
mov
push
dec
or
mov
mov
adc
iret
outsb
lcall
inc
daa
loop
les
jnp
dec
fidivrs
jnp
dec
xchg
gs
les
mov
outsl
push
xlat
inc
xchg
fwait
cmc
push
sub
lods
cld
push
decb
andl
out
icebp
lret
dec
jg
mov
add
xchg
jge
aad
push
das
fcomi
lcall
rorb
fimuls
jmp
xor
or
pop
pop
popf
into
enter
sbb
mov
push
popa
int3
inc
xor
sti
gs
jge
xchg
ss
mov
push
add
clc
lcall
add
rep
xor
fs
out
xor
lahf
jb
orl
push
jle
push
fdivr
xor
int3
insl
jmp
sbb
mov
imul
xchg
movsb
lret
jp
sbb
imul
out
xchg
test
jae
lock
fistpl
jo
sbb
dec
pop
pop
xchg
mov
lahf
ret
bound
dec
pushf
das
xchg
push
pushl
rclb
adc
sbb
sub
mov
sahf
jp
call
test
adc
xor
addr16
mov
push
or
jl
leave
push
notb
divb
nop
movsl
xchg
ja
cmp
test
je
out
rcl
xor
jbe
push
jbe
addr16
sub
fstps
mov
xchg
fcmovnb
fwait
in
push
pop
pop
dec
mov
ljmp
or
dec
adcb
add
pop
mov
sub
jne
jmp
sbb
mov
push
add
into
xorb
jo
out
jp
out
dec
add
cmp
aaa
adc
fadd
pop
jnp
sub
scas
push
or
mov
push
inc
inc
adcb
fsubs
shrd
dec
fwait
pop
mov
cmp
or
shlb
cmp
pop
daa
fs
mov
sbb
or
or
lcall
jno
inc
mov
push
pop
ss
in
sbb
subb
dec
outsl
xor
pushf
jo
xlat
lahf
notb
jno
shl
mov
jecxz
idivb
jg
sbb
repz
or
push
mov
adc
orb
and
int
inc
xchg
pop
xor
xor
inc
mov
hlt
push
cmp
pop
mov
jno
jbe
xchg
shrl
jp
adc
test
mov
mov
ja
mov
test
rcll
shll
fcompl
sub
xor
xor
aam
js
pop
cli
lds
cmp
mov
add
fcomp
movsb
sub
push
out
or
mov
imul
or
lret
jae
add
sarl
lahf
popa
rclb
pop
addr16
xchg
inc
lret
jg
pusha
mov
push
addr16
clc
xchg
mov
fmull
push
push
jne
mov
mov
fwait
bound
or
inc
shll
sysexit
sub
xchg
outsl
mov
cli
adc
pop
cli
clc
cmpsb
xchg
lahf
jmp
sub
cmpb
add
xor
or
jbe
repz
test
or
pusha
iret
dec
push
xchg
cmp
xchg
cltd
addr16
mov
mov
xchg
out
cmpsl
sub
push
addr16
xor
pop
ds
xchg
scas
dec
mov
decl
js
pop
mov
ret
js
fbstp
sub
push
mov
sub
clc
lea
mov
lret
add
imul
sti
push
inc
divb
adc
add
xor
scas
push
xchg
dec
sbb
sahf
cmp
lcall
dec
add
fildl
jp
ja
fwait
ss
mov
jne
inc
mov
mov
xlat
mov
pop
cwtl
jle
push
xor
shll
hlt
loop
jb
mov
mov
sbb
cmp
dec
xchg
das
aam
outsl
or
push
mov
lock
inc
sbb
repz
ds
adcl
or
pop
mov
mov
sub
xchg
sarb
mov
xor
jp
xor
ds
push
add
pop
enter
dec
sbb
movsb
jae
pop
push
mov
add
test
aad
sub
pop
xchg
push
insb
xor
dec
aaa
movsl
out
cmp
pop
fiadds
push
sbb
cmpsl
push
stos
inc
xor
lock
and
adc
lret
test
in
inc
jge
xchg
lea
pop
cmp
or
out
xlat
mov
sbb
push
fwait
test
jae
mov
pop
mov
pop
push
xor
pop
push
push
adc
mov
js
leave
pop
xchg
data16
mov
rcl
addr16
call
push
pushf
nop
cmc
and
xor
xchg
push
lock
enter
fistps
arpl
xchg
cmpsb
test
jle
xchg
hlt
scas
out
shlb
add
push
or
popf
stos
int3
arpl
inc
sbb
jno
sub
pop
das
inc
adc
shlb
sub
cmpsb
jmp
es
cld
rcrl
pushf
pop
mov
push
sub
call
hlt
jns
fisubrl
cld
mov
aas
imul
int3
pop
inc
jns
icebp
repz
jnp
nop
aaa
xchg
jbe
mov
push
mov
popa
jno
add
orl
orb
ja
in
scas
and
pop
pusha
fisttpll
cld
es
cmpsl
push
mov
aas
aas
sbb
je
nop
aaa
or
dec
adc
jbe
cld
push
push
enter
push
insb
incb
jnp
push
push
fidivrl
or
lcall
mov
and
movsl
fnsave
cmp
jmp
push
jb
cmpl
sbb
sarl
ljmp
mov
addb
bound
jg
sub
push
arpl
mov
mov
stos
inc
xor
pop
in
scas
mov
out
movsl
ror
dec
stos
cmpsb
push
cmpsb
inc
test
cmp
stos
xchg
cltd
adc
sbb
ja
pop
adc
adc
push
mov
jo
adc
and
cmp
or
mov
mov
fsubrs
mov
loopne
xor
push
mov
xor
pop
into
rorb
or
cmp
xchg
lock
and
stos
adc
jl
mov
pusha
mov
aaa
jno
das
xchg
xor
shrl
push
mov
mov
push
xchg
js
and
push
fdivp
cs
sbbl
aaa
sub
jbe
add
scas
xchg
pop
or
push
jmp
imulb
mov
jge
mov
lods
divb
and
xor
in
loop
popa
adc
xor
dec
push
dec
or
inc
xor
test
fdivr
mov
cld
mov
push
stos
cwtl
and
mov
jnp
test
lahf
into
xchg
dec
je
daa
push
dec
sbb
sub
jo
jl
xchg
movsl
pop
shl
mov
pop
cmp
mov
add
icebp
adc
arpl
mov
and
adc
sub
xchg
lds
jne
or
call
push
sbb
aaa
rclb
mov
aam
mov
loopne
or
sub
push
jbe
adc
bound
loope
int
mov
dec
mov
xchg
int3
pusha
ljmp
cltd
add
rsqrtps
xchg
jb
dec
sbb
insl
jae
mov
mov
aaa
out
arpl
or
enter
sbb
orl
scas
les
stos
xor
xchg
incb
dec
ja
cmc
lret
fdivrs
jp
ljmp
mov
into
mov
test
ret
jecxz
mov
add
xchg
cld
pusha
scas
fcoml
mov
pop
dec
loope
jl
aad
loope
movsl
jnp
fs
xchg
out
inc
repnz
dec
mov
xchg
sbb
test
xlat
push
cmp
lock
xchg
fldt
roll
mov
aam
pusha
out
mov
faddl
scas
sub
lahf
adc
out
shll
adc
add
push
dec
popf
jb
insl
lds
inc
je
arpl
daa
xlat
push
out
xor
je
pop
mov
int
and
inc
or
daa
jecxz
jmp
or
hlt
xchg
cmp
ret
call
xlat
dec
js
add
negb
icebp
lcall
xchg
and
push
sub
push
add
fwait
outsl
cld
fs
arpl
push
mov
xor
popf
int3
jns
mov
daa
lret
xchg
dec
sbb
leave
add
jne
push
mov
sahf
test
push
ljmp
nop
pop
or
aad
fs
lret
sbb
jns
cs
push
pop
pusha
push
adc
sub
out
adc
dec
or
and
push
pop
fdivrl
sbb
movsl
sbb
adc
mov
notb
fildll
rorl
flds
aas
dec
jle
pop
popa
in
xchg
xchg
imul
add
push
push
cltd
mul
shll
jmp
xchg
or
mov
inc
ret
add
movsb
andl
jmp
mov
jne
and
in
inc
aaa
pop
mov
divb
and
mov
push
sub
jecxz
fildll
xchg
js
lods
scas
cmp
mov
aaa
sub
mov
mov
dec
cmpsb
aas
sub
shr
and
cld
dec
loopne
insb
inc
shlb
out
mov
pop
inc
aam
push
icebp
xor
shl
movsl
mov
pop
data16
add
lret
das
and
xor
fwait
into
repnz
and
mov
cmp
sub
jecxz
dec
idivb
data16
cli
pop
jl
cmp
cs
mov
xchg
jae
mov
scas
scas
xlat
mov
pop
xchg
in
mov
sub
sbb
mov
mov
and
jno
and
in
je
inc
pop
jecxz
cmp
dec
scas
fnstenv
push
mov
mov
pop
repz
js
dec
data16
adc
push
xchg
inc
leave
inc
or
push
mov
insl
lods
mov
lcall
mov
pushl
sahf
adc
jb
into
or
loope
mov
lods
sbb
imul
movsb
out
repz
pop
fcomp
les
xor
cmp
les
cltd
hlt
xor
push
sbb
xchg
xchg
jnp
mov
cmpsl
pusha
out
pop
jmp
adcl
pop
js
jl
cmp
shlb
add
cs
shlb
test
popf
cmp
mov
jmp
mov
rolb
push
and
cmc
or
iret
gs
roll
stos
jl
mov
push
ficompl
xrelease
lock
push
mov
mov
mov
js
sbb
pop
cltd
xchg
mov
inc
xchg
lret
popf
frstor
jp
rcl
jp
sbb
mov
inc
dec
and
sbb
cmp
mov
mov
daa
lret
sbb
xchg
sbbl
adc
or
mov
bound
loope
push
rcrl
pop
arpl
add
push
iret
cwtl
jns
cmc
or
iret
subl
loop
sbb
sbb
dec
rorb
sar
jno
dec
lods
sbb
out
inc
out
or
xorb
xor
xor
pop
outsl
mov
jp
cmp
xor
jns
out
aad
arpl
mov
repnz
test
xchg
and
xor
cs
mov
sub
push
adc
mov
mov
fcoms
negl
fimull
repnz
pop
dec
add
push
popa
and
fwait
cmc
mov
dec
jge
aam
sbb
mov
out
and
mov
in
xchg
test
gs
pushf
and
mov
cld
add
scas
fdivrl
in
mov
jg
scas
mov
dec
xchg
xor
addl
es
xor
and
and
out
sub
lods
pop
sub
sahf
cmc
jne
mov
inc
ficoml
push
mov
arpl
pop
mov
mov
inc
leave
sbb
out
xor
arpl
cmp
add
or
cs
push
mov
adc
or
fists
outsl
jns
mov
call
scas
mov
cmc
xor
jbe
scas
push
xchg
daa
mov
and
sub
lods
repnz
lock
outsb
mov
push
xor
std
pop
negl
jo
push
test
dec
sti
call
repnz
lret
push
test
push
sbb
jecxz
mulb
mov
jle
or
aad
testb
test
dec
jge
outsb
mov
jecxz
insl
xchg
jbe
lcall
mov
mov
push
lods
shrb
mov
inc
test
xor
popf
loop
pushf
mov
fcomps
fisttps
adc
aas
jb,pt
cmp
ret
or
fnstenv
jne
lea
mov
jmp
mov
and
pop
into
pop
pop
int3
arpl
mov
pop
loop
and
out
inc
xchg
shlb
clc
push
fisttpll
and
shll
dec
fst
inc
cmpsl
pop
add
out
lods
scas
lock
jg
out
push
rclb
leave
mov
pop
pop
loopne
pop
loope
adc
incl
sub
call
mov
inc
xchg
xor
jb
jl
jbe
les
lret
jo
jle
icebp
jns
loop
inc
andb
sbbl
jmp
ret
cmp
aam
fcomp
xchg
into
push
enter
sub
orl
in
cmc
scas
adc
jae
cwtl
pop
out
in
js
add
lods
out
mov
lret
je
out
stc
sub
cmc
sti
out
int
cwtl
xor
into
fcos
push
frstor
faddl
jmp
mov
faddl
insb
loope
mov
das
pop
ljmp
jmp
xor
push
rcrb
ss
sbb
xchg
adc
inc
imul
fists
inc
cmp
loope
push
and
sub
call
mov
scas
sbb
fs
mov
or
mov
xor
mov
mulps
subl
push
sar
cmovb
mov
jo
cmp
jge
push
dec
call
arpl
sub
mov
push
rcr
inc
out
add
ds
loopne
inc
loop
dec
or
cmp
mov
movsb
lock
scas
xor
mov
lods
xor
pop
adc
inc
mov
push
lods
outsb
sbb
cmpsl
insl
add
add
std
lods
je
lods
leave
imul
cmpsl
out
sub
test
sub
aam
add
iret
cmc
leave
push
mov
int3
jne
jg
rorl
inc
jb
stc
xor
sbb
adc
out
orl
cld
mov
cltd
sbb
out
push
mov
jecxz
mov
and
cmp
rcrl
popf
movsb
jmp
insb
xchg
and
or
add
notb
pop
mov
test
aas
int3
cltd
pop
and
in
sub
shl
push
lods
mov
repz
pusha
clc
push
add
jle
in
fsubr
jnp
scas
rcll
or
andl
insb
adc
sbb
add
insl
daa
push
xlat
loope
stos
pop
push
mov
xchg
adc
add
dec
cli
pop
xchg
xchg
sub
popa
mov
addr16
aaa
cmpsb
add
mov
mov
push
stc
ja
pop
and
stc
dec
and
adc
mov
or
ret
cmp
sub
mov
cmp
data16
pushf
cmp
sub
pop
mov
sub
pop
sub
inc
adc
xchg
push
adc
in
fs
xorl
sub
dec
inc
push
das
dec
repnz
push
addr16
aaa
mov
sbb
push
mov
mov
or
js
dec
add
js
shr
push
pop
test
or
mov
dec
shl
cmp
enter
push
test
dec
iret
aaa
out
dec
pop
adc
cli
mov
iret
aaa
inc
imul
adc
loope
xchg
xchg
into
xchg
pusha
out
xor
int
ret
dec
aaa
fcoms
pop
xlat
testb
pop
in
arpl
and
call
scas
push
mov
inc
sbb
or
push
or
ljmp
mov
mov
mov
mov
mov
ja
shr
das
jge
in
jno
cs
cmp
mov
jae
test
ds
rolb
xor
or
idivb
push
and
sti
inc
out
inc
dec
sub
fsubrl
mov
sub
dec
fnstenv
dec
insb
int3
mov
xlat
jge
shll
jns
lret
mov
or
hlt
cwtl
and
inc
mov
mov
pushf
stc
adc
test
xor
jbe
adc
adc
cmpsb
push
sbb
in
mov
push
mov
or
mov
fidivrl
pop
mov
rcrl
jnp
call
shl
je
jne
test
mov
mov
mov
das
test
pop
push
sti
outsl
sub
mov
cs
fadds
rcrb
xor
mov
into
cmpsl
int3
insb
xchg
bound
stos
dec
mulb
imul
sbb
xchg
pop
lret
cmp
cli
xchg
xor
jo
or
jg
sub
inc
outsb
sub
push
pop
jb
mov
jmp
in
sub
mov
push
outsl
sub
adc
stos
stos
dec
gs
iret
out
in
sub
xchg
pop
push
fwait
jle
popf
stos
mov
pop
jge
and
xor
bound
int3
bound
xlat
sub
push
in
or
inc
stc
pusha
pop
movsb
in
push
or
sti
shll
imul
sbb
jmp
lods
lahf
lea
fwait
xchg
pop
add
enter
or
xchg
fwait
lcall
inc
sti
add
leave
pushf
pop
pushf
sahf
in
or
into
mov
out
lock
stos
dec
xor
adc
adc
xchg
test
xor
ja
ss
enter
pop
add
xchg
insb
mov
fsts
mov
cmpl
mov
fucomp
imul
gs
dec
push
ja
bnd
dec
or
mov
mov
dec
mov
cmpsb
push
lock
clc
insb
sub
adc
hlt
dec
sbb
mov
xorb
nop
inc
lods
cmp
cmpsl
inc
add
imull
pop
sbb
ja
or
fwait
test
outsl
jno
or
test
xchg
into
inc
and
xchg
mov
daa
icebp
cli
idivl
test
jmp
dec
aam
lret
and
sub
push
mov
or
inc
sbb
in
cmp
scas
xchg
jl
dec
xor
push
cmp
or
sbb
in
nop
cld
mov
lods
sarb
insb
adc
xor
push
cmp
or
sbb
in
nop
cld
mov
lods
sarb
insb
adc
xor
push
cmp
or
sbb
in
nop
cld
mov
lods
sarb
push
xor
push
cmp
or
faddl
int3
mov
mov
pop
ret
pop
repz
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
cmp
sub
add
add
add
or
add
add
add
add
arpl
push
add
add
xchg
add
jae
inc
add
ret
add
inc
add
add
add
jge
popa
add
add
imul
ja
mov
add
add
fwait
add
add
add
add
add
pop
add
add
add
add
add
add
add
jae
lock
add
add
add
add
add
xchg
add
add
add
add
add
add
add
or
ja
sub
sub
popa
add
add
add
icebp
add
cmp
add
xchg
add
adc
add
sub
scas
add
add
add
add
pop
add
pop
add
add
add
add
add
add
add
push
add
adc
sbb
pop
add
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
lcall
add
add
call
add
or
outsb
add
add
add
add
add
add
add
add
lock
add
add
ret
add
sub
add
add
add
add
add
data16
pop
add
add
mov
add
add
sub
mov
test
scas
add
stos
add
inc
add
roll
test
inc
add
add
dec
add
add
sahf
add
cltd
add
add
data16
add
add
add
add
lods
add
add
add
add
add
add
add
test
xchg
add
add
add
add
adc
add
add
add
push
dec
add
or
dec
add
add
add
add
pop
add
jno
insl
add
add
ljmp
add
add
xor
sbb
mov
add
add
add
add
or
inc
add
add
add
adc
add
or
add
add
add
stos
add
testl
mov
imul
cltd
add
add
add
add
add
add
add
add
add
icebp
add
add
add
add
add
add
inc
add
add
lcall
add
add
add
add
add
add
add
add
add
pop
add
out
add
add
add
add
add
pop
add
add
add
xor
add
add
xor
add
add
lcall
add
add
add
add
add
rolb
add
add
add
xor
add
add
cmp
pushf
add
add
sub
sub
push
add
add
add
add
add
cmp
adc
inc
add
add
add
ja
sub
lcall
add
add
add
sub
add
add
add
leave
repz
ja
inc
fisttps
lcall
popf
cmp
outsb
xor
mov
loopne
sbb
jae
xchg
movsl
test
bound
cmp
ja
das
test
pushf
push
mov
mov
call
movsl
and
leave
dec
pusha
das
loope
pop
pop
xchg
sub
cmp
scas
lret
dec
mov
mov
inc
pop
enter
jge
mov
dec
enter
scas
mov
and
loop
lret
mov
lret
popa
les
sub
fs
xchg
dec
cs
mov
xchg
clc
xor
dec
push
inc
pop
imul
out
sahf
inc
cmc
subl
mov
or
push
add
mov
repz
mov
pop
cmp
push
loop
scas
xor
jae
pop
adc
push
sub
out
and
push
xchg
ret
xchg
mov
fmull
lea
sarb
ror
cmpsb
sub
and
sub
lcall
subl
ret
rcrb
dec
int3
push
mov
lcall
add
mov
push
rcrl
push
jo
jecxz
or
pop
push
xchg
testl
cmp
xchg
mov
jne
mov
stc
push
pop
fsubrs
loop
stc
jo
sub
fs
cmp
ficompl
repnz
mov
inc
xor
pop
imul
popa
out
pop
test
mov
push
ret
push
mov
pop
cwtl
enter
and
dec
xor
push
cmp
inc
clc
cltd
sbb
sub
pop
ret
mov
pop
das
test
jns
and
xchg
mov
sbb
mov
jl
xchg
inc
enter
fdiv
imul
pop
sbb
dec
in
and
fcompl
pushf
adc
sbb
pop
or
cmp
inc
ja
and
and
push
push
in
sbb
ret
popa
iret
adc
fs
dec
cli
punpckhwd
sbb
xor
insb
add
dec
call
sbb
mov
add
fcomps
fnstenv
cltd
adc
xor
cli
mov
add
leave
cs
fsubs
mov
sub
xchg
sbb
mov
xor
jae
ljmp
outsl
bound
jne
les
fcomps
add
es
rorb
addl
in
addr16
aam
mov
mov
shlb
cwtl
xchg
scas
push
xor
cltd
adc
fcmovnb
mov
mov
loope
pop
out
mov
cmpsl
lock
sbb
xor
lea
jecxz
mov
cmc
jle
push
and
pushf
cmpl
mov
sbb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
