in
mov
in
mov
movl
mov
inc
add
incb
pop
ret
int3
add
mov
push
add
movl
pusha
sti
mov
lods
push
push
lea
add
les
sbb
inc
lcall
push
jb
mov
call
adc
nop
inc
push
inc
cli
dec
inc
adc
dec
push
cmpsb
pusha
fmuls
dec
gs
fstl
in
outsl
cmp
xor
adc
test
roll
push
xor
jbe
pop
repnz
sbb
push
in
jne
mov
inc
movzwl
mov
jne
push
subb
imul
enter
and
mov
lahf
adc
sbb
adc
fsubrs
das
unpcklps
int3
mov
clc
push
cmp
push
cmp
jns
cmp
xchg
add
shlb
inc
cmpl
cmp
sti
push
inc
aam
lret
test
shrb
int
xchg
adc
pop
popf
xchg
loopne
mov
pop
jo
pop
shr
fdivrl
mov
popa
mov
popa
je
call
add
dec
mov
or
push
inc
ret
roll
adc
or
pop
inc
pop
int3
fnstcw
sarl
push
es
movsl
mov
push
push
cld
push
jl
mov
enter
inc
sub
cmp
nop
push
adc
sub
clc
mov
inc
js
call
sbb
ret
icebp
push
lock
or
jno
dec
push
jge
add
push
idivb
dec
or
cmpsb
cltd
push
xor
push
lahf
aad
mov
insb
inc
inc
movsb
mov
ja
andb
cmp
rol
pop
add
sub
jmp
pusha
std
ljmp
xchg
xchg
stos
sbb
sbb
stos
jbe
mov
jmp
cli
dec
sub
jge
lahf
push
sbb
into
push
mov
and
sbb
pop
xchg
popf
test
je
out
pusha
std
lock
sbb
js
pop
cmp
adc
sbb
hlt
out
in
dec
push
test
or
adc
repnz
mov
dec
mov
fwait
mov
xchg
lea
pop
adc
adc
and
xchg
jmp
or
ljmp
loope
mov
sbb
lea
push
mov
cmp
and
fisubs
enter
or
adc
dec
adc
popa
pop
adc
dec
cmp
leave
enter
adc
xor
lock
xor
cmpsl
mov
mov
addl
jmp
or
adc
ds
jmp
mov
add
out
scas
pop
mov
jae
lea
add
lock
mov
add
pop
lock
cltd
adc
filds
shrl
sub
pop
movsl
mov
cmpsl
push
cmpsb
fisttpl
add
jmp
push
sub
jb
popf
inc
push
xchg
js
add
xchg
xor
and
jo
dec
cs
and
andl
cltd
mov
mul
popa
les
pop
mov
loop
sahf
mov
sbb
cmp
ds
lret
std
popl
int3
std
add
insl
enter
hlt
sbb
add
mov
mov
mov
fwait
adc
call
arpl
jne
push
incb
outsl
inc
clc
and
inc
clc
pop
imul
or
sbb
pop
orl
inc
scas
pop
cmp
daa
data16
scas
pop
daa
data16
loopne
addr16
mov
ret
and
out
cmpl
loop
mov
movsl
xchg
lea
add
mov
add
int3
mov
cld
xchg
or
cmp
ja
cld
je
js
cmp
jne
outsl
mov
sub
test
cmpsb
pop
pushf
sub
ret
pusha
cmp
sar
jo
pop
and
ss
js
push
clc
pusha
aam
add
cmp
jge
in
inc
xor
mov
cltd
std
mov
adc
aad
add
adcb
dec
or
addr16
push
fcomps
ss
mov
and
dec
or
lret
outsb
inc
fstpl
popf
movsb
lret
std
fisttpll
and
lret
std
mov
rcll
adc
xor
pushf
cmpl
data16
mov
cmp
cmp
inc
inc
dec
rcrl
int
aam
cmp
movsb
in
xor
xchg
test
pop
inc
aas
add
sub
pushf
sub
adc
lahf
mov
in
pusha
adc
push
xor
mov
je
test
std
jo
lock
jecxz
jecxz
movsl
or
adc
sbb
addb
sbb
arpl
push
int
xor
mov
lea
test
xor
dec
add
add
in
sub
mov
lods
cmpsb
inc
inc
push
repnz
dec
pusha
test
je
xor
dec
jmp
push
or
inc
push
dec
in
js
dec
insb
and
in
adc
push
xchg
jnp
in
xchg
outsl
or
out
cld
jb
push
ret
lods
lret
push
xchg
dec
in
aas
adc
rorb
dec
mov
inc
lea
pop
jmp
mov
adc
lret
imul
xchg
push
subl
fucomip
xor
stos
and
and
mov
movsb
enter
mov
dec
stos
rcll
fmuls
imul
push
jmp
push
push
pop
pop
movl
jmp
mov
jo
mov
js
movb
lds
inc
or
fcomp
xor
fs
insb
inc
addr16
leave
inc
pop
push
lods
int
fisubrs
push
cwtl
push
mov
push
or
mov
cmp
add
faddl
mov
xor
and
notb
xchg
or
jo
scas
ja
push
mov
pop
jne
xor
adc
sub
test
dec
ljmp
add
ss
cmp
sub
push
mov
push
fimull
sbb
pushf
fadd
stos
call
add
ljmp
jb
inc
add
lahf
sub
xchg
push
jne
lcall
sub
je
mov
movl
and
lods
int3
leave
mulb
out
lret
cmp
arpl
add
in
xchg
arpl
mov
mov
test
int3
insl
mov
sbb
dec
mov
ds
mov
xor
sbb
arpl
aam
xchg
out
push
addr16
push
out
cmp
gs
cmpsl
add
jne
rcll
sub
mov
adc
mov
jo
jge
add
xchg
add
lret
cmpsl
mov
cli
je
adc
mov
sub
sbb
sub
dec
add
loop
sub
stos
fsub
xchg
sub
inc
xchg
fildl
test
in
lret
leave
push
mov
enter
mov
lds
xchg
xchg
lret
adc
sub
sub
sub
pop
rcll
pushf
push
pop
inc
mov
in
pop
lcall
push
push
lret
ret
sbb
nop
lds
std
js
add
xor
out
and
push
pusha
and
pop
xchg
dec
jmp
cmp
inc
xchg
or
push
cmc
mov
or
mov
mov
sbb
adc
test
jbe,pn
movsb
sahf
add
jmp
and
test
push
adc
test
add
mov
imul
fwait
push
mov
push
push
testb
fbld
push
mov
lret
idiv
jge
jb
lret
pop
mov
jb
and
mov
mov
xchg
inc
push
cwtl
int3
pushf
test
sbb
add
fidivrl
call
sbb
les
jmp
stos
das
shlb
add
imul
jmp
test
rcll
clc
inc
add
inc
jmp
inc
push
in
cwtl
and
enter
xchg
or
push
iret
sbb
fwait
arpl
in
adc
adc
fstps
xchg
push
pop
push
cs
lea
add
je
mov
mov
xor
mov
inc
push
xchg
xchg
jb
mov
mov
inc
mov
sub
fnstcw
gs
and
lret
lret
popl
shlb
aas
mov
jo
or
pop
sbb
mov
insl
pop
in
mov
push
lea
mov
sub
push
push
int
mov
ss
inc
or
shrl
in
fsts
cmpsb
xor
add
mov
push
push
mov
test
pop
adc
cmp
test
out
jo
xchg
push
cwtl
xor
mov
or
jmp
lret
enter
mov
mov
adc
orl
jp
dec
mov
or
mov
dec
xchg
mov
push
daa
scas
adc
xor
sbb
sbb
pop
and
xchg
insl
jno
xchg
pop
or
adc
movsb
std
xchg
dec
mov
dec
jle
fnstsw
test
and
shll
add
out
mov
arpl
or
cmpsb
pop
mov
sbb
add
lret
dec
iret
out
pop
out
jae
adc
out
jbe
lods
and
rcrl
xchg
xor
loop
inc
add
jne
mov
loope
mov
jns
stc
adc
push
popf
movsb
jmp
pusha
add
ja
bound
dec
or
xchg
adc
mov
addb
or
imul
int
push
xor
or
push
xor
movsb
sbb
popf
sbb
pop
add
adc
inc
call
or
mov
pop
mov
ret
sbb
shlb
jmp
shr
movsl
stos
add
mov
pop
pop
pop
inc
arpl
rclb
sbbb
cld
inc
or
popa
add
call
inc
sbb
test
int
shlb
lock
fs
and
adc
or
insb
in
shlb
imul
arpl
mov
mov
popf
xlat
cmp
cmp
add
xor
mov
clc
jne
fsubrl
mov
int
lock
arpl
cmp
add
mov
lods
sarb
in
cs
frstor
jns
mov
shrb
sarb
sub
sarb
btc
or
or
lock
adc
and
sbb
test
inc
xchg
adc
test
in
mov
inc
jae
loopne
lods
int3
and
loopne
sbb
or
call
nop
adc
in
adc
lret
mov
dec
adc
lods
jecxz
adc
adc
or
movsl
sbb
fcmove
lret
mov
repnz
test
adc
adc
ret
mov
xor
and
in
cmp
mov
leave
sbbl
movzbl
dec
cs
addr16
std
add
mov
loopne
cmp
lods
pop
or
shrl
mov
ss
and
sub
lret
repnz
repnz
xchg
test
rcrb
imul
insb
aas
sub
faddp
mov
gs
std
lea
ret
rorl
std
push
push
xchg
ss
ret
in
or
lcall
push
or
ds
inc
enter
add
je
mov
jmp
sub
jnp
push
cld
fiaddl
cmp
js
dec
cli
inc
cmp
add
fs
in
cmpb
cmp
dec
lock
lea
mov
movsb
clc
pusha
dec
push
mov
push
push
sub
mov
loop
mov
xchg
or
data16
std
iret
mov
dec
push
cmp
jge
sub
sub
fistl
mov
mov
adc
shrb
lcall
jmp
shl
js
popf
push
leave
int3
pusha
lock
aas
mov
add
add
pusha
fwait
call
call
lea
add
add
mov
rclb
xor
fidivl
lcall
add
inc
xor
js
fisttpll
idivl
lods
xorb
cwtl
jmp
mov
mov
cmp
es
les
les
cmp
push
mov
cs
in
and
add
sub
and
mov
push
add
push
xor
hlt
xchg
bound
sbb
and
jne
mov
and
push
mov
dec
fsubs
fadds
sbb
rcl
loope
jg
rorb
jmp
rorb
xorl
push
mov
call
jo
add
adc
add
int3
xor
shr
cmp
dec
rclb
add
xchg
xchg
pop
cmp
add
rcl
push
adc
or
or
or
insl
push
hlt
and
std
push
lahf
dec
adc
and
adc
push
push
mov
js
into
inc
push
sbb
cmp
aam
clc
sti
add
shll
shr
and
mov
fisttpll
shrb
jmp
loopne
or
or
add
ret
ret
inc
add
fdivs
push
jns
sub
lock
push
dec
enter
push
aad
or
call
push
repz
pop
pop
mov
push
mov
mov
push
cld
setge
sbb
pop
pop
or
or
call
fs
and
cmp
mov
mov
mov
jg
inc
dec
push
ds
hlt
in
add
jae
hlt
leave
out
in
mov
imul
loope
push
sub
fstpt
cld
sub
inc
cmp
in
sbb
push
lock
adc
dec
mov
and
mov
mov
hlt
cmp
adc
cmpb
pop
sub
sub
imul
dec
add
andl
push
call
int3
rclb
or
fs
cmp
pop
sarl
cmp
scas
in
clc
sub
add
jmp
jmp
and
pop
xor
aad
call
push
or
ss
adc
or
adc
addr16
xchg
sbb
jecxz
clc
cld
add
and
or
icebp
cmp
gs
sub
mov
sarb
aaa
fisttpll
mov
sub
sbb
sub
mov
clc
std
dec
sub
insl
mov
pop
push
je
dec
lcall
xor
cmp
xor
add
push
push
dec
sub
hlt
scas
aas
mul
loopne
ljmp
imul
jnp
fisttpll
sbb
cmp
cmp
gs
out
cmp
jne
cmpl
cld
lods
adc
jg
xor
shll
ljmp
sbb
das
cltd
inc
or
xor
loop
test
jmp
and
and
lods
mov
pop
in
xchg
or
push
mov
xchg
popa
enter
adc
mov
fmull
push
add
es
cmc
adc
pusha
add
mov
push
mov
mov
pop
rep
cmp
popa
mov
outsb
or
xchg
lret
inc
mov
mov
push
pusha
out
std
out
mov
jne
push
cmp
cs
inc
or
sub
sub
or
mov
sbb
addr16
loopne
lea
insb
sbb
fcoms
sbb
inc
xchg
adc
push
mov
loop
or
xchg
xchg
inc
daa
ljmp
out
xchg
adc
xchg
out
pop
int
xor
add
inc
stos
stos
pop
loop
cmp
adcb
pop
roll
sub
stos
dec
ja
and
sbb
push
adc
imul
nop
add
push
jo
imul
and
cmp
sbb
sahf
push
das
test
or
icebp
bound
or
xchg
dec
cmc
and
push
test
movsb
push
sbb
mov
push
mov
femms
sub
jne
aaa
mov
add
or
push
loope
cld
mov
loope
or
inc
sub
aas
pusha
movsb
dec
add
mov
out
arpl
xor
inc
adc
jmp
xchg
incl
jno
ret
fildll
dec
test
inc
div
push
loop,pt
inc
clc
lahf
test
loop
icebp
push
and
mov
lcall
push
add
out
xor
push
mov
push
sub
test
int
or
mov
lods
adc
push
shlb
or
add
icebp
fucomip
push
dec
cmpl
jb
ljmp
aam
or
jbe
das
js
sub
cld
mov
mov
mov
cwtl
popf
mov
out
inc
insb
dec
sbb
cld
das
addl
inc
sbb
dec
inc
out
divl
dec
js
and
mov
insb
jo
push
out
es
inc
add
mov
imul
add
mov
sub
mov
test
je
movsb
mov
mov
add
mov
ret
add
scas
mov
sub
push
es
jne
fdivrs
cmp
sub
adc
loop
adc
adc
fs
cmp
sbb
in
adc
add
adc
sbb
int3
xchg
out
pop
push
lahf
cmp
stos
dec
in
add
mov
sti
mov
sbb
mov
mov
cli
or
inc
lret
lret
jmp
or
subb
push
sarl
lock
push
or
loop
sbb
es
lods
xchg
lcall
xchg
out
jg
test
test
test
test
negb
jb
movsb
push
es
jne
sbb
or
iret
lea
cmp
fwait
in
mov
daa
sbb
fcomps
mov
pop
push
lock
fldcw
xor
test
mov
lcall
aam
inc
adc
clc
inc
ret
cmpsb
mov
sahf
movsl
hlt
sub
xchg
ss
jo
pop
loop
mov
push
outsl
or
test
or
mov
cmp
enter
int3
andb
je
movsb
repnz
cmp
sbb
or
push
xor
xor
sbb
mov
mov
scas
fs
xor
mov
xchg
inc
push
jns
test
mov
test
mov
dec
test
pushl
sbb
push
mov
push
in
sub
jae
inc
cmpsb
popf
sbb
or
adc
sub
in
loopne
xchg
loopne
loopne
and
cmp
pop
fsub
fdivrl
jne
in
mov
dec
xchg
imul
sti
scas
aas
sahf
scas
push
and
add
push
std
cmpsb
mov
imul
mov
cmp
sbb
in
fcoms
sbb
jmp
mov
xor
mov
mov
fdivr
add
aam
adc
sbb
add
pop
push
shrb
idiv
add
and
mov
pop
leave
jo
lea
loopne
jae
push
loopne
sbb
cmpb
or
adc
cwtl
or
jae
divl
out
cs
shlb
push
aam
add
jb
dec
aam
push
or
loopne
loopne
jmp
bound
jne
call
movsl
sub
push
push
cs
loopne
rorl
mov
or
rcrb
shl
icebp
movsb
mov
inc
enter
or
adc
faddl
dec
sbb
sub
cs
push
push
out
lock
adc
xor
fcomps
dec
xor
push
mov
enter
push
or
shlb
jmp
sbb
rolb
mov
leave
xor
rcl
iret
mov
enter
xchg
out
enter
enter
inc
filds
pop
insl
repnz
test
shl
sbb
loopne
es
sub
push
andb
xor
les
cmp
cmc
or
call
sub
out
mov
jae
sarl
push
push
pushf
leave
sbb
pop
div
xor
cld
fwait
sub
dec
sbb
jmp
fcomp
shrb
mov
js
imul
and
int3
and
inc
call
enter
jl
sub
fmuls
add
and
pop
nopl
add
test
insb
adc
add
and
in
add
in
cmp
push
aas
mov
mov
sub
inc
and
adc
sub
mov
daa
inc
movsb
mov
outsb
test
movsl
jb
test
or
mov
mov
in
test
pop
or
push
mov
dec
xchg
pop
test
sbb
inc
xchg
and
stos
xor
jo
xlat
data16
dec
and
rclb
inc
aas
inc
or
push
mov
or
xchg
cld
clc
cld
push
imul
cld
js
test
es
mov
push
cmc
ja
dec
add
add
aas
adc
mov
or
mov
pop
push
push
jbe
or
mov
js
divl
clc
add
mov
or
mov
mov
dec
icebp
push
adcb
enter
js
push
ret
mov
adcb
sub
sti
xor
js
inc
lock
insb
aad
test
stos
mov
add
loop
or
sub
lock
fists
lock
out
mov
jl
movl
ds
mov
cmpb
xlat
xor
pop
faddl
add
and
mov
sub
popf
pop
inc
sbb
sub
sbb
ss
int
hlt
jb
dec
add
ss
in
mov
mov
es
xor
pushf
orb
movl
adc
jb,pn
sbb
adc
cmp
into
sbb
push
xor
inc
nop
xchg
adc
inc
jecxz
cmp
push
mov
push
push
xor
dec
loopne
cmpsb
hlt
fmuls
dec
loope
mov
inc
sub
out
mov
jmp
xchg
or
adc
push
jo
xchg
add
loopne
inc
shlb
add
mov
dec
addl
jmp
or
in
jmp
insb
sub
mov
cld
adcb
test
push
add
push
push
lea
shrl
cld
inc
mov
pop
fs
jb
mov
es
push
dec
push
mov
sarl
add
cmp
add
push
dec
fwait
orl
adc
test
sahf
inc
ds
sti
pop
pop
dec
dec
cmpsl
je
xor
inc
push
mov
std
nop
arpl
add
or
or
imul
jo
inc
push
sub
and
sub
jecxz
fxch
push
jne
orb
faddl
inc
pop
test
bound
call
inc
fsubl
repnz
test
xor
std
mov
pop
in
push
push
rcr
push
inc
push
cmp
lea
or
data16
mov
mov
inc
mov
xchg
imul
ficoms
add
push
adc
add
or
lods
cltd
jae
xor
or
repnz
jae
add
xor
push
jno
cmp
ds
movsl
mov
or
sbb
add
push
sub
xor
mov
and
test
mov
jo
pop
repnz
push
cli
inc
xor
imul
adc
pusha
ds
push
adc
out
push
mov
or
add
test
test
xchg
cs
outsl
push
jnp
leave
adc
cmp
or
mov
xor
daa
setno
and
push
jecxz
mov
in
cmp
xorl
fstl
and
fnsetpm(287
adc
pusha
cmp
add
test
mov
xchg
jnp
push
into
jmp
pushf
imul
std
imul
movl
loopne
jmp
jle
mov
jmp
out
je
mov
sbb
xor
pop
push
pop
decl
fs
movswl
inc
jns
cmp
cmp
and
push
cmp
add
rorl
addl
and
cmp
fadd
inc
sub
test
adc
xor
xor
adc
arpl
inc
cmpl
xor
dec
in
inc
xor
xor
fxch
xchg
addl
cmpsb
mov
adc
shll
pop
mov
cmp
in
shlb
dec
lret
test
fiaddl
outsb
push
xchg
inc
cmc
sbb
and
loop
lock
in
aas
lea
cmp
ret
rcrl
cmp
jge
into
test
and
lret
xchg
test
pop
push
mov
jecxz
lea
mov
imul
add
loope
pop
fldenv
pop
fcomp
push
mov
push
lret
shrl
mov
jge
push
mov
adcb
push
das
push
adc
inc
push
and
cmp
cltd
loope
and
and
je
cmp
add
or
jnp
sub
int3
shrb
mov
dec
out
adc
lds
loope
pusha
sbb
jb
rorl
mov
mov
leave
jmp
mov
roll
sbbb
sbb
add
mov
cmp
lds
leave
and
push
xchg
sbb
pop
bound
mov
mov
cmp
mov
gs
add
cld
lds
jb
mov
cld
adc
push
cmp
xor
xor
aaa
lea
or
and
or
cmpl
jo
repz
cmp
add
fmul
adc
xchg
imul
pusha
fisttps
xor
mov
test
and
add
xor
in
inc
xorb
push
shl
in
mov
cmp
iret
push
push
xor
inc
mov
xchg
push
test
popl
inc
cmp
adc
cs
out
cltd
inc
jo
ret
adc
mov
dec
pop
loop
ficomps
or
adc
js
and
push
scas
xchg
pusha
pop
adc
cmp
sub
cmpsb
add
icebp
push
sbb
leave
mov
cmp
mov
sbb
nop
test
nop
mov
outsl
mov
add
inc
stos
add
xor
scas
leave
dec
and
and
adc
push
div
sbb
xor
pop
add
sbb
push
xorl
les
test
push
jge
lods
push
sbb
sbb
in
add
push
orl
subb
mov
data16
das
iret
add
test
pop
imul
mov
pop
dec
imul
mov
or
add
mov
or
push
push
movsl
or
inc
test
orb
push
mov
inc
addr16
test
or
rolb
jmp
and
aaa
inc
movsl
pop
inc
call
mov
cmp
shr
insb
int
push
cmc
push
mov
xor
fs
hlt
jne
cmpsl
sahf
lock
arpl
dec
sbb
adc
adc
nop
sbb
cltd
cmp
bound
pushf
jmp
aaa
adc
adc
pop
inc
jge
push
push
lods
mov
xchg
cwtl
popaw
cmp
pop
sbb
mov
sub
cli
nop
dec
sub
push
adcl
cmp
jp
in
mov
mov
jg
mov
cmpl
stos
sbbb
test
lret
aad
sbbl
mov
mov
movsb
test
das
push
in
pop
and
jno
dec
enter
out
push
cwtl
insl
ds
add
sub
and
pop
add
fmul
decl
or
pop
test
and
lea
and
jne
jmp
jmp
pop
iret
mov
lds
sub
cmp
inc
lods
inc
pop
divl
je
push
in
mov
mov
mov
inc
dec
pusha
fsts
mov
or
pop
adc
ret
mov
add
movb
stos
xbegin
pop
lock
lock
pusha
push
test
jge
xchg
scas
mov
sarb
xor
sbbl
or
xchg
dec
mov
xor
or
xor
pusha
push
test
popa
das
dec
add
or
dec
sub
sub
mov
xchg
mov
sub
dec
add
sbb
fidivl
lea
xchg
mov
aam
aam
dec
arpl
movsb
pusha
xchg
fldcw
add
mov
ja
add
xor
mov
ljmp
andl
scas
in
inc
adc
mov
adcl
xor
mov
arpl
cmp
pop
cld
adc
into
add
push
inc
mov
jno
push
daa
outsl
or
arpl
fcomps
dec
sbb
jbe,pn
add
mov
shlb
xchg
mov
cmp
mov
inc
aad
popf
cmp
push
fdivl
mov
mov
mov
sbb
call
cmp
cmp
cmpsl
sbb
sti
icebp
jne
mov
inc
and
pop
jb
loopne
bound
fcompl
add
in
call
inc
sub
lods
std
fdivl
movsl
and
insb
or
mov
add
les
shlb
mov
pop
cmpl
lods
mov
ds
inc
mov
in
ret
imul
cmpsb
dec
imul
shll
jp
xor
mov
je
cld
lcall
xlat
das
rorb
sbb
pop
add
push
out
jb
les
sub
outsb
int
inc
add
xor
cmp
enter
call
ss
inc
inc
es
or
cwtl
push
mul
add
les
push
push
cmp
aas
xchg
push
mov
js
mov
xchg
adc
mov
ljmp
adc
adc
imul
add
add
inc
inc
pusha
lock
dec
sbb
adc
mov
sbb
xlat
mov
mov
es
addl
rolb
push
ficoml
test
adc
repz
inc
dec
test
pop
and
cmp
addr16
and
inc
cmp
sbb
jp
jnp
and
dec
inc
movsl
sbb
xor
sbb
sbb
arpl
dec
mov
pop
repnz
movsb
lahf
and
aad
sub
je
xchg
pop
xor
call
cmp
pop
sbb
inc
push
and
mov
push
add
jnp
enter
or
push
lds
bound
sbb
and
stos
and
push
test
or
xor
or
cmp
push
sbb
scas
andl
ja
mov
add
add
pop
pop
push
imul
les
sbb
pop
in
sbb
sub
movsl
add
xchg
sub
adc
sahf
add
mov
pop
jbe
mov
xor
sahf
mov
lds
cmp
cmp
sub
lea
inc
pop
xor
repnz
cmp
sub
js
mov
cmp
jl
fsts
shrl
jl
es
add
adc
push
pusha
dec
adc
dec
lret
mov
in
push
inc
adc
data16
mov
push
lods
mov
xchg
mov
pop
enter
xor
dec
shrl
push
dec
pushf
dec
xchg
or
xchg
or
dec
es
adc
test
lea
mov
jns
sbb
cld
push
lods
lock
push
adc
xor
inc
xor
loopne
mov
addl
push
inc
and
cmpsl
push
cmpsl
std
add
inc
fsubrl
cmpl
mov
jmp
sub
cmpb
xchg
pop
adc
mov
cld
mov
mov
xchg
xor
imul
mov
addr16
push
and
jl
and
mov
push
sbb
lcall
xor
push
jne
xchg
push
cld
in
xor
shrb
shl
jmp
xchg
or
adcl
or
fidivs
jmp
inc
outsl
repz
sub
inc
hlt
push
rolb
imul
and
mov
pop
shrl
les
push
pop
addb
shll
testl
in
push
adc
and
out
call
xchg
pop
sub
sbb
cmp
mov
sbb
jne
sub
mov
cli
outsb
ljmp
dec
xor
sbb
adc
filds
je
lea
jbe
add
aas
and
ds
bound
jne
pop
bnd
cs
adcb
sub
adc
lahf
mov
scas
and
fdivp
mov
aad
sbb
leave
pop
fucom
mov
sub
test
cld
mov
lcall
sub
or
adcl
xchg
test
shll
push
push
aas
loope
cmpsb
pop
leave
adc
bswap
dec
sbb
cmp
mov
addb
aaa
inc
pop
jb
mov
test
push
xchg
movsb
push
or
cmpl
inc
cmp
cmp
cmp
and
les
jne
mov
mov
icebp
sbb
roll
jmp
push
adc
cwtl
sbb
pop
faddl
shll
pop
push
or
fcoms
cmp
jae
xor
dec
out
push
rorl
pop
aas
repz
push
sbb
inc
jbe
decb
fcomip
pop
lods
add
fiaddl
xor
jne
les
test
icebp
je
mov
jl
adc
adc
pop
cmp
hlt
and
cmp
test
add
mov
dec
jle
pop
mov
adc
dec
xor
jo
lock
add
mov
push
pop
imul
sub
dec
jo
jl
adc
push
mov
mov
xlat
dec
lret
jp
in
adcl
shll
lock
add
cmp
add
or
repz
into
popa
jge
dec
sub
fdivl
mov
adc
pop
lret
inc
test
and
mov
sbb
xor
cbtw
dec
js
sbb
add
mov
popf
or
call
sahf
mov
sub
and
inc
or
mov
jecxz
and
lods
cmp
inc
fbld
adc
push
imul
jo
inc
xchg
dec
push
sarl
fucomp
mov
ja
mov
push
shl
mov
stos
test
sbb
and
add
cmp
pop
pop
xchg
pop
fsubs
aad
rcll
rcr
stos
inc
dec
popf
jnp
sbb
add
aam
fs
pop
cmp
dec
lods
push
cmpsb
dec
arpl
ret
jbe
in
repnz
pusha
dec
fnstcw
dec
movsl
sbb
sbb
push
sbb
mov
jne
outsl
adc
pop
mov
dec
add
cmp
outsb
mov
sub
push
loop
loope
lods
lock
std
xor
jl
dec
ljmp
arpl
push
jbe
out
push
xor
stos
dec
adc
xchg
mov
dec
pop
adc
xchg
dec
je
mov
sbb
pusha
enter
or
lods
jg
lock
xchg
sbb
sub
mov
test
cmpsl
jne
iret
dec
rorl
popa
outsb
fsubrl
daa
push
cs
push
inc
lea
xchg
test
add
sbb
xlat
mov
mov
xor
lods
rorl
mov
mov
std
jb
adc
xchg
movb
and
jmp
cmp
add
mov
jle
lods
pop
enter
or
pop
mull
or
sub
add
pop
ret
sahf
lahf
mov
lahf
dec
fs
inc
insb
dec
sbb
js
add
out
dec
inc
or
xor
mov
jne
repnz
or
mov
fcoml
add
jae
pop
adc
push
fwait
pushf
div
jmp
mov
insl
les
adc
mov
pop
adc
pop
add
mov
xor
mov
add
and
mov
sbb
jmp
jmp
in
mov
sbb
mov
ret
sub
mov
and
or
jns
insl
sub
cmp
cltd
mov
jge
mov
ss
jns
cltd
adc
aaa
sbb
test
stos
jo
insl
add
dec
loopne
adc
insb
loop
or
je
jo
cld
or
je
add
push
or
movsl
and
lds
inc
ljmp
adc
push
and
jge
dec
or
lock
cmp
out
dec
or
mov
push
sahf
rclb
add
cmp
out
and
movsb
sub
ja
adc
mov
rorl
rclb
mov
test
lods
fcmovnu
push
cmc
or
mulb
add
pop
out
or
dec
sbb
add
mov
add
cwtl
mov
push
daa
pusha
mov
add
add
js
and
add
test
pop
shlb
dec
pop
imul
push
add
sbb
dec
mov
sbb
add
inc
pop
fsubl
lock
jge
dec
fbstp
sub
ja
movsb
mov
js
sub
add
aas
into
imul
stos
adc
aad
cmp
push
ds
dec
stos
sbb
xor
test
cmpsb
mov
lret
jle
push
stc
xchg
or
jne
sub
adc
adc
aam
push
mov
mov
outsl
mov
adc
push
rclb
ljmp
mov
lock
add
push
cmp
push
fdivr
call
mov
mov
jge,pt
xchg
jmp
xchg
pushf
mov
scas
mov
test
out
inc
pop
and
fwait
mov
js
addr16
pushf
adc
out
add
data16
jae
sahf
mov
sbb
inc
enter
xchg
inc
pop
xor
fildll
fiadds
fucom
outsl
ret
jg
adc
adc
shlb
jmp
push
sub
push
jp
inc
fwait
in
addr16
xchg
xchg
mov
add
fstps
out
leave
mov
mov
sub
xchg
arpl
xorl
cmp
test
dec
jo,pt
mov
mov
cmc
xor
in
mov
pop
cmp
add
data16
inc
mov
fdivs
push
inc
push
sbb
mov
inc
mov
mov
cmp
pop
push
mov
aas
cwtl
sbb
sub
pusha
cmpl
mov
popa
pop
aad
dec
xor
dec
in
xor
loopne
adc
int3
dec
cmp
mov
pcmpgtd
push
inc
imul
add
insl
adc
adc
add
arpl
loopne
inc
xchg
aad
imul
adc
pop
adc
fmull
pop
bound
ret
jl
mov
rorb
pushl
shlb
and
cmp
mov
adc
mov
pop
rolb
cmp
into
or
pop
cmp
rorl
pop
mov
pushl
shlb
mov
ss
pop
in
mov
loope
sarl
xchg
jmp
jne
adc
cmp
xchg
loopne
cmp
movsb
mov
add
pushf
or
adc
stos
cltd
shlb
shll
pop
call
xor
sbb
and
mov
add
xor
jmp
test
insb
adc
mov
push
loopne
rcl
jmp
push
imul
sbb
mov
sbb
push
insl
cmp
push
jne
inc
mov
pop
lock
push
repz
pop
repz
adc
or
or
dec
jl
and
jp
scas
add
sub
pop
mov
ret
int3
adc
fs
test
cmp
cmp
lea
fcomps
shrb
and
pop
and
enter
jle
adc
fsubs
push
xor
movsb
jmp
adc
aam
sbb
mov
lock
sbb
pusha
jb
push
or
push
lds
inc
test
shrl
int3
cwtl
sub
cs
cmp
movsb
pop
sbb
fs
mov
mov
in
push
lret
pop
inc
pushf
jmp
loopne
ret
sbb
sbb
addr16
mov
push
in
xchg
or
push
nop
iret
aam
push
jecxz
xchg
fistpll
cmpsl
cs
aaa
xchg
push
xor
mov
mov
push
insl
pop
dec
dec
sbb
ljmp
mov
adc
adc
or
add
pop
in
or
or
add
adc
mov
lods
or
xchg
push
push
out
fisttpll
sbb
jbe
cmp
xchg
inc
inc
or
jl
pushl
or
sub
sub
xorl
cmp
mov
clc
and
movl
movsb
xchg
sar
adc
in
mov
jnp
in
fs
sub
repnz
and
push
add
enter
imul
pop
or
inc
lea
pusha
sbb
call
pop
es
lock
cwtl
fidivrl
xchg
push
add
les
in
mov
cmp
daa
or
xchg
in
sub
mov
mov
test
xor
cmpsb
loope
cmpsl
jl
or
mov
sbb
cmp
pusha
fadds
ja
push
pop
push
rorb
jmp
push
in
mov
test
and
inc
cs
push
scas
and
popf
or
jae
xchg
mov
xchg
repnz
sbb
pop
push
js
les
ret
and
jmp
xorl
jle
pop
jmp
pushl
movb
sbb
pop
sub
add
mov
or
jl
sbb
dec
adc
add
ja
in
and
pop
mov
xor
ljmp
pusha
sbb
out
cmp
aam
xor
xor
out
fistl
xor
xchg
je
je
push
push
stos
jl
sbb
sub
and
sbb
leave
mov
jmp
mov
add
lret
dec
inc
es
or
xchg
dec
adc
and
mov
bound
and
inc
adc
inc
or
or
sarb
roll
movsb
sub
in
or
dec
cmpsl
or
jl
add
dec
mov
in
mov
subb
push
xor
stos
adc
and
inc
sub
pop
in
pop
sbb
push
cmpsl
shl
stc
push
cmp
pop
jns
dec
insb
punpckldq
inc
sub
jge
jmp
cs
mov
insb
mov
imul
jns
out
pushf
das
push
das
adc
mov
jmp
push
test
or
adc
inc
jne
cmp
push
pop
lods
sbb
sub
and
cmp
je
pop
cmpsl
or
add
jmp
adc
fwait
adc
sbb
dec
mov
aam
or
gs
add
push
push
or
cwtl
jnp
jmp
inc
cmp
test
shrl
clc
xchg
mov
push
adc
fnstsw
adc
push
movlps
jl
cmpsb
push
add
loopne
fwait
sub
or
ret
cs
shlb
cli
add
bound
dec
cmp
sbb
inc
jb
into
inc
cmp
pop
or
pop
enter
xchg
pop
jne
push
adc
cmp
adc
and
sub
xor
scas
ret
add
or
pop
data16
adc
inc
das
or
adc
push
subb
ja
clc
push
pusha
jbe
add
add
add
and
pop
push
das
xchg
movsb
ret
shrb
jbe
loope
adc
fistpl
mov
or
lods
inc
sub
add
xor
je
xor
cmp
mov
je
xor
clc
popl
les
lock
cmpsl
add
sbb
popf
mov
xchg
in
test
cmp
shrb
inc
xor
or
fwait
std
dec
cmp
cmp
fwait
inc
add
mov
jmp
push
fwait
cmp
cmp
sub
fcomps
add
add
add
ret
lahf
or
mov
inc
inc
mov
adc
and
cmpb
sub
jne
fmuls
add
dec
cmp
lods
fmuls
je
into
sub
dec
clc
jmp
xor
push
ficomps
or
or
adc
fists
pop
cmp
sbb
mov
push
sub
lret
fsubs
jae
mov
sub
setl
xchg
sub
sub
nop
push
stc
inc
jmp
push
in
fcomps
sub
fsubl
xor
imul
sbb
pop
pop
cmp
push
and
xor
pop
mov
mov
cmp
ja
cltd
aaa
adc
cmp
lcall
pop
push
sub
add
xchg
or
cli
movl
push
adc
dec
js
sub
push
mov
scas
adc
or
xchg
and
rolb
push
scas
je
mov
pop
fmull
addr16
stc
adc
outsl
lcall
mov
aas
cmp
fwait
loopne
js
mov
pop
jo
jle
pop
mov
push
pop
inc
push
cmp
sbbl
sub
sub
cmp
pop
pop
adc
fdivl
ds
mov
pushf
push
add
mov
shll
in
inc
inc
lock
and
mov
push
in
sub
pop
add
in
icebp
sbb
push
icebp
xchg
push
sbb
jle
add
cmp
mov
stc
inc
hlt
push
push
popa
pop
jo
mov
gs
test
jne
or
pop
dec
jmp
aaa
sbb
cmc
add
adc
push
push
dec
aaa
and
jne
add
fsubrs
icebp
aad
mov
loope
sbb
push
mov
and
mov
sar
int
das
push
out
rorb
mov
mov
orl
jl
sub
jne
xchg
mov
jle
sub
pop
loopne
mov
sbb
sbb
popf
lods
xchg
add
ret
ficoms
adc
testl
fisubrs
mov
or
jge
adc
mov
inc
mov
in
clc
aaa
mov
sahf
jno
sub
lea
add
js
hlt
pop
push
into
call
cmp
int
add
sbb
insb
mov
dec
cmp
rorb
xorl
and
add
push
xlat
lahf
pushf
add
enter
incb
or
jne
mov
pop
inc
testl
or
out
pop
scas
sbb
lea
mov
ret
jge
add
lds
outsb
mov
fs
icebp
sbbb
xor
bnd
adc
into
pop
mov
xchg
cld
dec
add
push
xor
loopne
nop
lahf
mov
adc
cld
ljmp
cmpsb
stos
lea
push
jb
pop
mov
pop
push
out
cwtl
pop
fcoms
pusha
das
or
dec
call
jo
ss
mov
arpl
xchg
sbb
adc
adc
push
mov
or
push
push
divb
in
push
scas
in
pop
inc
or
adc
popa
sub
fsts
dec
sarl
jne
scas
adc
js
mov
add
push
push
adc
roll
ret
je
ljmp
or
or
out
mov
adc
add
adc
push
or
and
imull
sub
ljmp
insl
sbb
mov
push
leave
or
jmp
or
sbb
xor
pusha
sub
jnp
int3
xor
or
bound
lods
dec
sub
mov
xor
mov
ret
jne
in
sub
sub
fiadds
test
jo
inc
movsb
sub
push
push
ret
out
cs
push
inc
mov
pop
cmp
call
ss
hlt
aas
mov
jo
jo
shlb
xor
jbe
add
inc
add
inc
sbb
push
push
aaa
nop
sbb
or
pop
jl
xlat
xor
sub
xor
sbb
andl
inc
shlb
cmp
pushl
scas
je
push
and
rorb
aas
cld
add
das
or
cs
adcl
js
push
xlat
xchg
or
lahf
lock
popf
aam
cli
clc
or
out
je
or
mov
adc
scas
testl
popf
inc
mov
or
xchg
dec
or
in
lock
fnsave
pop
or
mov
jle
add
push
cld
dec
out
and
inc
enter
push
stc
inc
in
lea
pop
push
cld
add
ja
stc
aas
or
push
xchg
mov
dec
test
push
movb
push
mov
adcl
lock
je
pop
insl
push
sub
dec
leave
insl
and
adc
dec
sbb
inc
in
vsqrtsd
inc
add
xchg
lock
adc
push
popa
dec
sub
add
or
inc
jmp
sar
add
out
fadd
dec
pusha
mov
roll
mov
test
mov
adcb
lcall
pop
les
or
or
jmp
cmp
push
lea
mov
push
ret
jne
out
inc
test
jb
lret
lea
test
inc
das
push
pop
push
pop
mov
pop
mov
and
je
sbb
daa
out
inc
and
mov
dec
pop
add
sub
je
and
fildll
xor
sub
sub
and
add
mov
and
cmp
iret
add
push
xor
push
or
loope
cmp
jb
fidivrs
and
mov
test
cmp
pop
and
sub
test
pusha
adc
aaa
push
jbe
adc
add
insl
pop
inc
jl
insl
int3
mov
mov
dec
or
imul
movsl
enter
or
test
pusha
out
jecxz
in
mov
fs
lcall
fadd
xor
loopne
inc
dec
das
clc
jne
mov
cld
movsl
xor
push
fdivr
push
pop
addr16
push
dec
fisubl
data16
cs
movsb
shrl
lret
loopne
in
sub
mov
mov
js
addr16
push
xor
test
or
hlt
and
jmp
xlat
adc
push
push
loopne
sbb
mov
sahf
pop
inc
jae
lods
adc
sarl
mull
in
add
mov
call
add
loopne
jne
bound
mov
cmp
cmp
outsb
and
adc
lea
or
or
in
pushf
sub
test
and
cmp
xchg
pop
push
xchg
insb
shll
fcmovnb
std
xchg
lea
rclb
call
xchg
std
test
pop
mov
ja
pop
push
cmpl
and
adc
rclb
lea
jns
xor
cmp
insb
adcb
lea
pop
cmp
xor
push
lea
cltd
in
push
testl
inc
push
imul
loopne
daa
add
jmp
dec
cmp
lea
adc
and
inc
movsl
dec
dec
push
xor
add
pop
test
and
outsl
sbb
mov
dec
cmp
sbb
mov
jbe
les
mov
jns
pop
adc
ljmp
test
cmpsb
inc
cmp
imul
int3
mov
rol
movsl
xor
test
sahf
popa
int3
mov
push
hlt
jge
push
pop
enter
cli
mov
scas
jno
pop
add
in
add
movsb
pop
pop
xchg
add
imul
adc
insb
push
push
ljmp
fisubrl
xchg
push
jmp
jge
lret
in
in
insb
insb
push
and
jmp
sub
out
xchg
jecxz
daa
push
xlat
adc
test
dec
neg
inc
adc
or
dec
or
add
mov
lea
pop
cmp
add
fsub
adc
cmpsl
shrb
or
dec
jno
sub
pushf
rolb
call
ret
mov
leave
cmp
je
mov
mov
cmc
push
adc
and
and
dec
rcr
xchg
mov
stos
xchg
js
sbb
dec
dec
pusha
cmp
inc
js
mov
inc
xchg
push
fcoms
dec
push
insb
hlt
mov
cmp
mov
add
xchg
ss
fsubrs
into
push
jmp
cmp
fwait
push
inc
inc
fsubrs
jns
push
xchg
mov
lret
lods
sub
adc
rorb
in
mov
xchg
cmpsl
imul
rcll
xchg
aam
fsubrs
or
xlat
mov
sbb
int3
lea
jb
loopne
int3
cmp
jnp
std
mov
pop
cmp
xor
mov
inc
ret
int3
xor
mov
lods
ret
cmpsb
push
fcoms
cmpsb
les
in
xchg
sub
clc
jne,pn
daa
dec
jne
inc
mov
jne
adc
xor
add
or
adc
lods
push
adc
sub
and
sbb
loopne
mov
lods
push
std
jb
cmp
mov
adc
push
sarb
jae
repnz
mov
push
jb
cmpsb
dec
inc
add
sub
add
add
push
xchg
repnz
lret
cwtl
mov
lret
xor
icebp
cmp
pop
add
push
push
stos
mov
mov
fcomps
gs
adc
pop
out
in
pop
aad
add
push
pop
xorl
adc
mov
icebp
arpl
shll
lds
mov
lcall
sub
bound
jl
xorl
sub
arpl
add
sub
in
xchg
mov
mov
mov
add
mov
mov
lea
lret
jmp
je,pn
mov
cli
cld
or
cmp
cmp
jmp
jmp
push
push
jmp
pop
cs
cmpsb
incl
push
add
push
ret
jp
xchg
mov
or
xor
movsb
ret
or
fucomp
lock
sub
adc
in
mov
or
loop
push
jmp
cmpsl
push
or
les
in
sbb
aas
mov
push
add
pop
cld
dec
sbb
push
ds
push
push
xlat
mov
dec
xchg
push
or
push
add
sub
push
nop
outsl
push
push
imul
cmpb
dec
sbb
push
add
imul
mov
and
push
mov
dec
movsl
add
and
ja
cmp
mov
push
addl
mov
push
enter
lret
rolb
int3
sub
push
in
cld
push
inc
shrb
push
push
cmp
aam
mov
xor
adc
stc
xchg
int3
xlat
in
cmpsb
in
fdivr
fstps
sub
cmp
fcmovnbe
sbb
sub
daa
xchg
jo
jnp
push
mov
mov
xchg
je
mov
xchg
inc
lcall
ljmp
cld
icebp
mov
imul
cmp
lret
inc
leave
push
inc
push
pop
cmpsb
sub
push
pop
and
in
insb
lock
pop
mov
or
xchg
push
lea
dec
mov
or
dec
sbb
in
pop
mov
rcrb
nop
mov
mov
sub
or
xor
mov
inc
sub
insb
push
xchg
xor
cwtl
pop
pop
xchg
test
or
outsb
add
sub
inc
sbb
popa
mov
test
mov
cmp
sbb
movsb
es
sub
xor
mov
inc
cmp
sarb
movsb
pushf
js
aam
push
lods
sahf
mov
in
in
xor
movsb
xchg
mov
inc
mov
fsubs
dec
lcall
pop
enter
mov
cs
rorl
aas
push
popa
dec
cmp
push
push
pop
cmp
repnz
pop
jle
dec
inc
movsb
test
nop
gs
sub
or
mov
pop
mov
rorl
xor
push
sbb
xchg
and
pop
xor
shrl
das
out
mov
xchg
dec
jae
aaa
sub
das
or
sub
inc
sbb
inc
xor
dec
push
cmp
xlat
adc
pop
or
mov
pusha
lret
mov
or
push
adc
daa
jne
xchg
test
fdivrl
fs
test
addr16
sub
sub
add
adc
and
pop
jp
es
xchg
add
xchg
movsb
dec
test
cs
adc
stos
cmp
push
push
mov
pop
add
pop
mov
fdivrs
mov
cmpsl
test
test
cltd
outsl
hlt
adc
jae
lock
and
sbb
add
je
bound
and
or
arpl
jg
adc
sbb
push
adc
xchg
sti
cld
shl
push
test
adc
gs
jg
xor
cmp
in
or
lock
ds
lock
subb
or
mov
inc
push
cmp
jl
loopne
push
or
in
sbb
imul
jae
shll
loop
xchg
adc
mov
in
in
ret
adc
mov
adc
pop
mov
mov
and
pop
hlt
shr
int
rcr
das
mov
inc
shl
mov
push
sbb
mov
test
jg
pop
mov
cmp
cmp
arpl
cld
cmp
jle
mov
sub
sti
clc
rcrb
sbb
and
sahf
cs
stos
mov
cld
and
jmp
mov
insl
fbld
lds
sub
in
inc
sbb
decb
lcall
ja
lods
cmp
push
das
cmp
sub
movl
mov
or
pop
adc
shlb
ret
xchg
xor
movsb
pop
sbb
mov
lock
sbb
cmp
in
lea
mov
mov
inc
mov
or
dec
dec
popf
add
pop
jne
jo
and
inc
cmp
stc
cmp
add
dec
inc
mov
push
xchg
mov
mov
push
jmp
push
enter
push
jne
in
push
xor
sub
jbe
inc
jb
jmp
dec
in
ret
stos
add
ljmp
shlb
outsl
jecxz
hlt
es
add
mov
mov
cld
push
jg
jp
jb
je
adcl
out
push
sahf
cld
je
shrb
ret
mov
adc
shrl
dec
loop
add
dec
loop
lret
jmp
xchg
push
sbbb
inc
adc
adc
xchg
pop
movl
in
mov
pop
adc
add
pop
mov
mov
out
and
dec
mov
pop
cmp
sbb
inc
arpl
jns
hlt
jge
hlt
aas
sub
and
packssdw
xor
fcmovbe
and
dec
sbb
hlt
sahf
xor
jnp
add
inc
push
rol
adcl
jo
cs
adc
dec
sub
jge
jns
lret
ja
pop
mov
jno
and
cs
adc
xchg
arpl
jecxz
push
fxch
fcoms
and
mov
inc
jp
push
testb
lahf
mov
jecxz
or
pop
sahf
ja
and
dec
add
push
and
ss
rcll
jg
add
add
add
inc
and
push
pop
stos
cmp
subb
lods
testl
push
mov
inc
call
xchg
jl
xor
mov
repz
cld
jg
mov
mov
mov
add
inc
mov
pop
mov
mov
add
aaa
shrl
test
or
or
pop
sub
mov
lret
cmp
mov
clc
xor
mov
addb
and
dec
jge
sbb
les
aas
es
sbb
mov
xor
adc
repz
pop
hlt
and
ljmp
je
cmpsb
adc
and
sub
and
iret
dec
clc
pop
fiadds
mov
or
sbb
push
cs
int3
test
mov
pop
aad
xor
hlt
inc
sahf
shlb
inc
add
xchg
mov
and
cmpl
adcl
ror
or
push
das
add
cmp
hlt
adc
stos
jo
lsl
cmp
lea
movsb
pop
mov
mov
int3
mov
adc
jb
fadd
incl
mov
mov
rol
push
lock
xor
pushf
lret
aam
or
xchg
or
push
adc
aad
dec
or
and
and
xchg
shlb
loop
xor
ret
mov
add
push
inc
and
mov
push
lcall
loope
enter
sti
mov
jle
inc
aas
movsl
mov
stc
ljmp
xor
fiaddl
fcomps
lods
xchg
ret
add
mov
sbb
jno
push
add
out
push
add
and
mov
mov
or
inc
add
adc
cmp
mov
inc
test
inc
fadd
test
ret
mov
punpcklbw
sbb
sbb
adc
lds
ret
stos
xchg
pop
pop
cmpsl
pop
mov
mov
mov
add
adc
adc
inc
and
inc
arpl
sahf
add
sbb
lods
pop
cld
test
test
cltd
cmp
sub
ret
dec
adc
pop
xchg
mov
shl
sub
xchg
mov
push
push
or
xor
and
test
movsb
shlb
mov
push
sub
cwtl
or
jb
pop
or
adc
adcb
xor
je
fnsave
lret
mov
add
jo
mov
mov
push
sub
loopne
bswap
and
jo
popa
in
add
mov
push
add
sbb
add
dec
dec
out
push
cmp
sbb
movaps
pop
test
arpl
out
add
std
outsb
xor
movl
sub
fsubs
inc
or
cltd
inc
shlb
orb
lret
cmp
cmp
mov
adc
mov
sub
xor
sub
lahf
sarb
lods
sbb
or
adcl
dec
mov
or
cmp
test
iret
or
das
xor
lods
jmp
data16
ret
jp
out
add
jg
data16
ret
adc
imul
mov
ds
push
adc
pop
sbb
dec
mov
aaa
clc
mov
xchg
push
xchg
mov
xor
lock
jb
jo
pop
test
and
mov
mov
ds
xchg
into
push
cmp
push
mov
add
sbb
cld
jge
sbb
or
push
test
sbb
jo
inc
cmc
stos
ffree
push
into
aaa
aaa
clc
mov
bound
push
stc
or
push
adc
cmp
xchg
cwtl
sub
cmp
int3
cltd
sbb
pop
cs
lret
adc
lods
inc
dec
jecxz
test
or
or
jne
loop
ret
push
sub
adc
push
fmull
inc
push
lcall
mov
xchg
pop
xchg
test
test
aam
test
addl
mov
loop
adc
push
adc
fdivr
xor
dec
sub
adc
cmp
push
adc
adc
ret
push
es
popf
lods
test
or
clc
mov
std
dec
jmp
add
mov
or
fcompl
sbb
arpl
stos
lods
inc
fmuls
jne
and
addl
shl
les
in
sub
or
mov
inc
mov
enter
pop
jl
movsb
sub
sar
push
jecxz
mov
push
add
cs
call
shlb
mov
adc
jne
aaa
xor
outsl
hlt
pop
rorb
xor
xor
ss
movsl
add
push
push
int
mov
mov
clc
adc
add
mov
roll
xor
les
movsl
mov
int
data16
and
loopne
daa
cmp
push
mov
lgs
mov
loopne
and
push
lock
cmpb
inc
cvtdq2ps
mov
andb
insl
cltd
cmp
repnz
pop
sub
iret
lcall
in
lahf
xor
xchg
and
movsb
jecxz
mov
je
inc
addr16
inc
loopne
pusha
add
xor
aad
add
push
push
xchg
popf
rcl
imul
xor
dec
push
add
sub
dec
adc
lret
rolb
in
xor
sub
push
push
xchg
adc
adc
orl
test
push
sub
or
push
sub
xor
repnz
push
xor
pushf
or
in
lods
dec
test
rorb
push
imul
cld
ja
add
into
rclb
in
into
pop
movl
cmp
outsl
push
ja
lock
sbb
mov
push
enter
jmp
sbb
push
imul
jl
imul
sbb
pusha
adc
mov
mov
xor
jg
add
inc
or
rclb
mov
push
iret
lret
mov
rclb
ret
adc
fdivrl
test
idiv
test
adc
or
dec
mov
hlt
xchg
rol
fwait
add
je
push
fldenv
xor
out
in
dec
jne
mov
push
or
cltd
mov
sbb
push
sbb
je
mov
push
jbe
cltd
sub
mov
test
stc
stos
adc
clc
sub
adc
sbb
jecxz
mov
or
push
pop
push
fwait
arpl
push
jecxz
xchg
adc
jo
sub
adc
cmpsl
in
mov
xor
or
out
dec
jnp
mov
xchg
das
stos
jl
sbb
lea
dec
outsb
lret
imul
cmp
in
jo
jno
cmpsl
push
push
sbb
insb
add
mov
mov
push
and
and
pop
push
sbb
push
sub
add
or
or
mov
add
test
pop
imulb
and
lods
lea
rorb
pushf
jns
popf
mov
pushf
sub
or
add
push
dec
dec
sub
insb
dec
mov
roll
lret
mov
jne
mov
shrb
push
mull
jg
js
inc
pop
stos
mov
incl
adc
je
jmp
rcrb
in
mov
adc
or
loopne
inc
mov
adc
in
jl
call
rcr
fyl2x
or
test
pop
push
pop
add
rcll
push
dec
mov
test
cld
lock
adc
push
pop
inc
mov
add
push
aam
add
hlt
mov
add
into
add
inc
sub
dec
jb
add
or
stos
cmc
jle
jno,pt
insl
mov
testl
mov
scas
add
rol
pop
hlt
pop
idiv
outsl
adc
add
js
pop
pop
mov
mov
xor
nop
xchg
xchg
je
xor
jo
movsb
in
sarl
push
push
imul
push
adc
sarl
jl
push
aam
test
sbb
stos
lock
mov
arpl
xor
ret
call
insl
test
pop
mov
inc
popa
jp
and
mov
sub
test
jnp
loopne
push
sub
cmp
xor
loopne
lods
cmpb
movsl
xor
mov
push
mov
dec
ret
and
add
pusha
xor
inc
movsl
stc
push
pushf
shl
sub
cmpsl
and
lahf
push
int
jle
pop
or
and
packuswb
xchg
inc
imul
js
cmpsl
pop
add
cmp
adc
loope
add
jnp
out
push
xchg
and
sbb
jle
mov
in
jo
lods
lods
outsl
mov
sbb
fidivrs
sbb
cmpsb
and
imul
cmp
test
cmp
or
adc
ret
pop
add
idivl
jmp
addr16
enter
lock
lahf
imul
dec
mov
mov
dec
add
inc
icebp
mov
cmpsb
lock
je
in
push
mov
aas
jae
pusha
jl
inc
xor
ret
jb
and
dec
jnp
or
adc
lret
xor
push
lahf
pop
push
nop
and
inc
ja
orl
or
xchg
pop
sbb
sub
or
push
insb
in
push
or
leave
jge
imul
pop
jb
mov
pop
movsl
insl
addl
or
inc
adc
jecxz
xor
iret
xor
inc
add
fisttpll
xor
dec
or
data16
mov
sub
xor
inc
pop
sub
mov
mov
xchg
push
jmp
orl
movsl
in
andl
cs
xor
cwtl
aam
fcomp
push
cmp
ds
inc
sub
icebp
cs
imul
jne
adc
inc
add
lock
cmp
movsl
mov
jmp
cmp
in
je
stos
xchg
jmp
adc
mov
mov
inc
push
mov
cwtl
or
into
insb
loope
pop
sbb
mov
mov
in
add
cld
add
addl
js
cmp
or
in
pop
divl
jmp
cli
inc
mov
imul
lret
push
shrb
in
xchg
test
sbb
add
mov
xchg
test
dec
push
push
enter
fstp
add
test
popf
or
xor
jnp
push
fcom
stc
mov
adcb
add
mov
dec
push
push
pop
pop
xor
cmp
std
cmpl
or
test
adc
mov
sahf
xor
out
fcoml
sbbl
add
mov
mov
jg
rcl
mov
call
ds
add
add
mov
push
movsb
lret
mov
lahf
loope
cld
in
mov
popf
loope
push
add
xchg
add
loop
or
cmp
jbe
loopne
jl
lahf
push
and
jno
and
insl
jmp
and
aas
pop
push
adc
lods
addb
stc
add
idiv
fisubrs
lea
push
push
sbb
arpl
loopne
cmpsl
pusha
inc
sbb
inc
pop
inc
cmp
int3
clc
imul
push
idiv
daa
ret
mov
mov
mov
inc
sbbl
int3
call
lret
cmp
sub
sbb
out
popa
das
add
sarb
lods
cltd
arpl
rclb
dec
subb
add
sbb
jg
dec
mov
adc
outsb
jmp
insl
mov
fisttpl
push
and
sub
popf
push
mov
dec
dec
lea
jo
aas
jle
pushf
std
aam
dec
push
cwtl
arpl
aam
add
sbb
sbb
xor
push
sub
cmc
mov
push
cmpsb
push
pop
mov
xor
cmp
mov
in
add
or
xor
mov
ja
js
sbb
call
mov
fidivl
and
cltd
aaa
lods
xchg
dec
enter
addb
dec
or
mov
imul
fwait
and
jae
dec
fdivrl
roll
jne
cli
or
mov
fmul
push
ss
add
cmp
rolb
test
xchg
dec
push
xor
sti
and
popa
push
mov
int
int3
sbb
es
pop
fcomi
js
es
jmp
enter
fnstsw
mov
sbb
jne
dec
jmp
in
inc
mov
out
cmp
jb
and
ljmp
jns
dec
mov
cwtl
test
lock
push
mov
and
jmp
lahf
adc
adc
or
add
imul
inc
or
loope
add
add
jmp
jmp
aaa
cltd
mov
cmp
and
push
inc
add
shlb
data16
xor
mov
sbb
rolb
sub
pop
add
adc
and
inc
int
adcl
mov
sbb
inc
mov
les
push
call
mov
and
mov
rcrb
lahf
inc
stos
push
mov
fistl
xor
popf
xor
movsb
jne
push
lods
mov
xchg
dec
jge
adc
inc
outsl
dec
mov
aam
sbb
adc
pop
insl
sbb
mov
sub
and
mov
add
shrl
xor
push
adc
inc
and
dec
sar
cld
mov
inc
cs
sbb
push
pushl
lock
test
and
xor
lcall
rcrb
ret
loopne
xchg
sub
lea
gs
jnp
jl
pop
mov
add
mov
int3
inc
jg
subl
xorb
loop
lcall
pusha
push
repz
cmpsb
mov
push
cli
jl
push
jne
sub
dec
shl
pop
hlt
hlt
cmp
dec
mov
movsb
or
aas
jmp
movsl
rcrb
mov
jp
scas
inc
daa
cmp
jbe
jl
test
imul
scas
sbb
push
pusha
add
mov
inc
shlb
pop
pop
xchg
push
or
push
orb
inc
mov
inc
mov
jge
rcll
mov
fistpl
add
loopne
stos
adc
xchg
dec
jmp
dec
jmp
lea
or
lock
xor
dec
pop
fisttpl
push
sbb
pop
jg
scas
push
add
cmpb
test
inc
xor
mov
adc
std
sti
fistpll
sub
lea
bound
or
mov
inc
dec
jne
sarl
pop
jne
dec
mov
mov
pop
mov
icebp
push
stos
lock
mov
mov
push
xor
hlt
cmp
or
xor
push
push
loopne
std
lods
mov
leave
push
jns
scas
mov
pushl
frstor
sbb
sbb
ds
movsb
xchg
add
into
es
int
addr16
jge
sbb
stc
cwtl
aam
dec
ja
in
decl
sbb
inc
jmp
push
xor
out
xor
popf
sar
add
pop
clc
test
int
dec
sti
pop
leave
ret
sahf
nop
and
or
clc
call
pop
or
push
mov
jne
cmp
testb
enter
je
sub
cwtl
sti
call
mov
call
sub
mov
sub
movl
mov
push
fdivrs
mov
mov
add
push
scas
shlb
aas
inc
pusha
push
push
and
push
lcall
imul
push
imul
jb
jb
inc
mov
add
mov
cmp
jb
neg
add
push
decl
rorl
data16
cmp
loopne
in
cmpsl
stos
dec
rorl
jmp
int3
fdivp
stos
mov
dec
ljmp
or
fwait
jno
clc
sub
not
and
cld
pop
sub
mov
and
mov
pop
xchg
mov
add
ret
sub
jmp
jecxz
push
cmc
movsb
mov
add
sbbb
or
aam
mov
arpl
loopne
leave
adc
cltd
pop
loop
pop
xchg
incb
mov
fs
clc
inc
or
in
mov
jne
add
push
cmc
push
mov
adc
add
std
out
pop
lcall
pop
cld
mov
fs
ficoms
shld
lcall
test
fistpll
popf
or
lock
aad
or
mov
or
into
sbb
jbe
jbe
mov
push
idivb
adc
and
gs
push
addl
cli
jo
add
pop
sar
mov
ljmp
dec
lods
aam
add
in
sbb
pusha
add
mov
add
lock
mov
pminsw
push
mov
out
out
inc
and
jle
popf
sahf
enter
je
int
test
sub
mov
jbe
aaa
pop
cmp
xor
pop
pop
xchg
enter
pop
popa
pop
sub
cmpl
sbbb
adc
dec
loope
jnp
lcall
lahf
call
and
inc
jmp
jmp
popa
stc
mov
jo
or
add
xchg
gs
jbe
add
fs
call
ss
push
or
ds
xchg
cs
pushf
stc
push
jno
sbb
imul
cmp
jae
inc
les
mov
jmp
cmp
xlat
shll
movsb
dec
and
adc
loopne
xchg
add
cmp
jge
cmp
xor
jb
jno
jle
clc
jge
sub
xor
sbb
pop
or
add
repz
addl
jmp
push
dec
stc
lods
cwtl
inc
add
mov
cmp
imul
lock
repnz
inc
negl
add
loope
test
jg
dec
stc
in
jne
pop
dec
add
mov
sub
xchg
cmp
mov
or
jmp
xor
xor
pop
sbb
sbb
ljmp
mov
fadds
in
cs
ja
cltd
popa
rclb
adc
jo
out
jne
pop
cmp
push
jb
lods
mov
fildll
sub
pop
inc
xor
insl
cmp
mov
push
inc
testl
imul
lahf
clc
sub
js
mov
inc
jae
pop
movsb
adc
pop
paddb
or
jle
pushl
mov
jbe
je,pn
push
push
lea
xor
xor
xor
xor
nop
divb
push
dec
js
in
lods
jae
lret
clc
pop
mov
adc
fs
sbb
sub
out
pushf
push
adc
add
add
pop
js
xor
inc
in
pushf
mov
arpl
movsl
hlt
sbb
stos
pop
sub
sub
push
sub
sub
sbb
mov
arpl
xor
jecxz
cli
lahf
xchg
push
push
pop
mov
loopne
movsl
out
ret
xor
or
add
pop
lret
add
jne
cmpsl
shlb
mov
nop
xchg
push
movl
jne
jnp
loop
arpl
rorb
push
pop
pop
out
out
incb
arpl
pop
or
rorb
outsl
in
neg
pop
sbb
pop
inc
mov
cmp
roll
cmp
pop
mov
mov
andb
movsb
pop
push
pop
and
and
dec
pop
pop
shr
jnp
adc
sti
push
sti
test
clc
push
cmp
jb
fdivrs
xchg
dec
nop
mov
mov
jae
aad
jb
loopne
add
xor
movsb
out
mov
mov
sbb
imul
mov
mov
mov
or
scas
adc
mov
dec
dec
sub
int3
add
movl
addr16
add
add
mov
push
jo
pusha
mov
push
dec
jp
in
repz
jmp
in
call
repz
lock
hlt
clc
clc
aaa
push
call
add
lock
imul
clc
jmp
xor
je
inc
mov
mov
pop
sti
and
ret
push
andl
push
lea
jl
adc
or
pop
lock
out
xor
inc
neg
fimuls
push
inc
scas
daa
stc
sub
inc
xchg
fistpl
inc
push
push
jl
xchg
frstor
mov
add
sahf
inc
push
out
push
add
cs
je
cmpsb
lea
add
ljmp
mov
push
in
push
hlt
sahf
cmpsl
stc
cmp
add
or
daa
cmp
jae
ss
sbb
repz
repz
adc
or
repz
or
or
sahf
mull
inc
inc
or
pop
insb
movsb
test
push
add
andl
adc
and
push
loopne
jge
adc
push
cmp
lret
std
scas
cmp
dec
sbb
push
pop
mov
push
test
sbb
mov
adc
cmp
adc
or
xor
jl
and
push
mov
push
popf
and
pusha
adc
lods
scas
pop
pop
sub
mov
stc
je
icebp
sub
loopne
inc
xlat
push
or
sub
aaa
mov
cltd
imul
jb
fistl
out
cmpsb
sbb
es
ljmp
mov
test
push
dec
pop
stos
inc
add
adc
xor
lods
mov
pusha
sbb
addr16
sbb
mov
loopne
inc
lcall
and
inc
jle
inc
movl
lds
inc
aam
add
sbb
xchg
addr16
hlt
daa
clc
inc
push
inc
mov
lcall
or
in
js
pop
or
scas
jns
or
or
pushl
sbb
fiadds
push
cmp
cs
inc
push
push
inc
adc
cld
dec
repnz
cmpsl
cmp
js
mov
hlt
or
sub
sbb
push
cmp
dec
out
testb
mov
or
mov
fwait
jl
loopne
xchg
jae
pop
push
jp
inc
fdivl
inc
hlt
push
int3
leave
ret
pop
clc
mov
add
push
or
mov
adc
mov
les
cmp
jne
inc
inc
inc
inc
jmp
xorl
and
or
shrl
test
jo
sbb
push
inc
xchg
mov
mov
loop
mov
mov
inc
inc
sbbb
sbb
and
test
ret
cmp
jg
ret
rep
adc
data16
push
insl
movb
arpl
inc
scas
dec
insb
mov
or
dec
add
push
cmp
dec
mov
mov
push
add
decl
rorl
cmp
addr16
jnp
push
adc
aas
or
add
jo
adc
sub
enter
out
pop
sbb
inc
add
outsl
mov
into
and
sbb
cmpsl
adc
cmp
pusha
ja
mov
xor
jge
sub
add
and
jmp
jp
and
xor
pop
inc
in
insb
lahf
cwtl
adcb
int3
add
jno
es
mov
mov
in
mov
add
cmpb
pusha
jo
mov
push
jecxz
sbb
and
mov
loope
pop
sub
push
adcl
dec
push
inc
cmpsb
fucom
pop
inc
inc
jl
pushl
popl
repnz
jmp
and
mov
cmc
es
push
fucomi
hlt
stos
loope
cmpsb
insl
rcrl
hlt
cld
cmp
jne
inc
adc
jb
push
add
add
jbe
fwait
push
push
push
mov
cmp
inc
imul
add
xor
cmp
movq
jl
cmpb
cmp
jb
cmp
jl
jg
outsl
inc
xchg
jbe
add
int
and
pusha
repz
mov
jnp
add
cld
pop
add
add
mov
vpsubb
jl
clc
incl
fcomps
jb
call
lret
jge
hlt
push
xor
shlb
dec
push
cmp
je
notl
push
xor
mov
xor
popf
jge
sub
sbb
push
imul
cmp
and
clc
cwtl
push
cmp
add
data16
popa
xor
rcrl
ret
adc
sub
mov
sbb
cmp
jmp
sub
fidivl
repz
push
and
sbb
jge
xor
jbe
sarb
les
adc
aaa
cmp
add
or
mov
add
sub
fisubl
data16
xor
sbb
xor
call
push
xchg
sbb
sarb
scas
leave
jbe
jl
sti
jg
sbb
idiv
add
mov
or
iret
out
and
jae
lea
add
push
push
mov
rolb
aam
decl
sbb
or
adc
mov
jg
into
mov
test
cwtl
stos
adc
cli
packsswb
es
not
pop
and
jmp
mov
outsl
inc
add
shrl
push
shl
incl
shll
dec
push
popa
cmp
pop
sub
jg
cmp
jmp
outsb
add
add
rolb
xchg
aam
in
cmpsl
cmp
hlt
add
cld
sbb
cmp
push
clc
repnz
push
fdivl
testb
inc
or
sbb
cld
mov
or
out
stos
inc
jl
mov
sbb
jne
mov
sbb
adc
outsl
mov
adc
leave
cmp
outsb
aad
push
cli
in
jne
jb
push
int
test
push
dec
push
pop
lods
push
bnd
or
pop
mov
push
dec
repz
jge
in
pop
jg
test
inc
sar
and
in
mov
dec
or
inc
mov
or
cmp
dec
sub
pop
les
enter
pop
ss
pop
lods
push
push
pop
test
shl
cmp
pop
cmp
shlb
bndstx
push
push
jle
dec
arpl
loope
xchg
sub
gs
add
out
fcmovbe
jmp
sub
and
mov
dec
enter
cmp
and
add
ret
adc
call
out
add
jle
or
jmp
shr
lea
sub
adc
test
xor
pusha
and
inc
pop
jo
mov
mov
in
or
test
xor
cli
sub
pusha
or
faddp
aas
int3
roll
adc
lret
push
fidivl
ret
sub
pop
pop
in
jbe
cmpsb
cs
dec
testl
enter
or
or
or
or
xor
sub
clc
xor
mov
cmpsb
cs
ret
pushf
data16
mov
andl
repnz
inc
jmp
ljmp
ret
cltd
pop
sub
xor
loopne
in
cs
jbe
inc
push
out
lcall
pushf
pop
aam
pusha
and
pushf
pop
sub
je
push
popf
fisubs
cmp
adcb
and
data16
shl
pop
rcrb
add
push
popa
cld
pop
add
nop
data16
xor
and
dec
mov
inc
dec
mov
push
nop
stos
and
add
jmp
mov
aas
add
dec
imul
mov
push
or
hlt
dec
mov
push
dec
add
dec
and
push
pop
cmp
add
or
add
jae
or
test
or
jl
jmp
rorl
dec
dec
inc
loopne
sbb
jne
dec
jns
adc
pop
sarl
mov
and
sbb
pusha
repnz
insb
insb
adc
leave
cmpsb
push
pop
mov
jg
sarl
insl
gs
loopne
jae
push
ljmp
je
movsb
jle
cmp
mov
jmp
add
test
loopne
dec
or
xor
leave
push
or
push
pushl
mov
add
jmp
pop
add
adc
or
mov
inc
jns
inc
mov
xor
sahf
dec
push
in
syscall
mov
inc
les
xor
lcall
jne
mov
and
in
sbb
and
and
inc
lods
aaa
fsubrl
mov
sbb
push
push
push
cmp
cmpl
pop
cmp
js
sbb
loopne
aam
jne
mov
xor
cmp
adc
lock
out
mov
or
or
insl
in
push
jl
sub
xor
add
push
add
add
repz
loopne
pop
scas
or
jg
js
nop
inc
aas
mov
jle
push
push
or
add
add
sbb
into
add
xor
and
add
xor
jno
mov
pop
fs
std
or
dec
add
jg
jecxz
jg
jmp
nop
add
inc
cmp
jl
pop
pop
mov
leave
lock
sbbb
adc
adc
add
rorl
fneni(8087
sbb
jo
adcb
sub
mov
push
loop
sbb
repz
xor
les
fdivr
jbe
clc
mov
jmp
inc
fmul
insl
cltd
add
mov
mov
sbb
adc
mov
aaa
inc
mov
xor
sbb
push
incl
lods
loopne
and
outsl
pushf
push
hlt
sbb
movsl
xchg
sbb
sub
ficomps
cmpl
dec
or
fiaddl
clc
daa
adc
inc
or
sbb
push
adc
subb
jg
int3
dec
push
cmc
push
shlb
mov
arpl
pusha
in
aam
or
lock
inc
pop
loopne
inc
roll
xor
lods
cmpsl
and
pop
mov
roll
pop
fwait
pop
mov
sub
rcl
stos
ds
shl
jl
cmpl
adc
test
push
jge
pop
cmp
push
aad
pop
and
cwtl
paddusw
mov
flds
sbb
aaa
xor
pop
std
sbb
je
or
or
shrb
int
fisubl
cmp
dec
std
sbb
adc
or
call
ret
xor
add
pushl
mov
mov
cmpsl
and
xchg
xchg
cmpsb
dec
add
push
push
adc
ljmp
push
or
push
imulb
push
xorb
test
je
ja
data16
push
push
cmpl
push
in
jnp
cmc
inc
add
push
jmp
cmp
or
je
xchg
pop
fs
pop
je
mov
sbb
fisubl
jmp
outsl
sub
jge
or
mov
pop
and
push
add
xor
mov
push
ss
ret
push
mov
sbb
mov
adc
js
xor
sbb
fmuls
adc
and
sarb
cmp
dec
je
dec
jne
bound
ja
adc
loopne
push
or
sbb
pop
add
or
test
adcl
mov
cmp
add
arpl
mov
aaa
fists
adc
push
icebp
enter
fcoml
arpl
int
dec
or
add
sub
and
call
popa
and
sub
or
ja
imul
cmpb
lea
fdivrs
or
cmp
je
pop
cmc
and
or
push
out
push
dec
xchg
mov
cmp
es
inc
imul
push
ss
jb
ljmp
inc
cmp
jae
push
cmp
jl
mov
inc
adc
pusha
sbbl
mov
addb
pop
lock
jne
clc
push
mov
add
sarl
enter
lods
or
mov
cmpsl
pop
pop
pop
pop
sub
stos
push
or
nop
sbb
movsl
xlat
add
mov
push
pushf
in
dec
push
xor
stc
pushl
enter
es
mov
icebp
cmp
scas
pusha
push
lods
int3
mov
sbb
cmc
scas
xchg
mov
adc
or
or
sbb
cmc
add
fisubl
mov
sahf
xchg
mov
or
and
push
xchg
xlat
out
xlat
mov
jns
jne
jmp
fildl
or
push
ret
jnp
shlb
sbb
mov
push
pop
clc
jecxz
sbb
pop
jle
xchg
int3
call
out
xor
inc
dec
loopne
loop
ret
adc
jecxz
cmp
subl
in
bound
mov
pop
inc
sbb
pop
mov
push
jle
icebp
jno
add
xchg
pavgb
dec
mov
cmp
cmp
jae
mov
adcl
jo
jl
ljmp
subb
loopne
cs
cmpsb
sbb
mov
jbe
add
cmpsl
or
sbb
jl
add
sbb
jg
adc
orl
test
pop
hlt
dec
jne
ja
xorl
push
cmp
lock
xchg
icebp
cmpb
mov
sbb
mov
or
aas
mov
sbbb
sbb
pop
es
or
lods
inc
sub
not
jmp
sbb
repnz
shll
push
push
dec
or
sbb
shl
cmpl
addl
inc
lret
mov
clc
push
mov
add
dec
pop
js
cmc
enter
push
mov
out
fadd
or
push
push
mov
rcr
pusha
mov
adc
xlat
je
cmp
es
mov
and
cmp
jb
testb
outsl
inc
scas
mov
add
int3
or
sbb
jge
push
jnp
cmp
jmp
inc
movb
and
cmp
jne
cmpl
loop
divb
cmp
jbe
mov
push
or
xorb
push
and
call
and
outsl
faddl
adc
xor
mov
inc
mov
mov
je
push
cmp
shlb
in
lock
mov
daa
mov
pop
test
les
les
cld
sbb
stos
sbb
xchg
sbb
push
add
cld
pop
and
dec
aam
mov
bnd
mov
call
push
jne
and
lea
out
pop
and
cmp
push
mov
cmc
sub
push
push
push
in
orl
iret
into
mov
sbbl
lret
inc
test
pop
loop
inc
pop
shl
loope
mov
mov
cwtl
and
cmp
mov
outsl
and
push
cld
push
jo
xchg
fistl
add
test
movsb
or
clc
js
cmp
outsl
or
sub
or
lea
push
bound
scas
std
cmp
insl
pop
arpl
jle
push
mov
test
push
jns
js
sbb
xor
jb
test
out
sahf
dec
sbb
push
movsb
loopne
adc
push
xchg
sahf
jns
dec
add
orl
mov
ffreep
jno
push
fildll
icebp
cmp
lret
mov
stc
cmp
lret
add
das
insb
or
inc
and
push
cltd
jb
pop
rcrb
sub
cmp
jb
pop
inc
inc
dec
sbb
xchg
and
jbe
mov
test
push
or
cmp
push
nop
push
dec
or
shlb
and
cld
pop
cmp
mov
jle
cmp
cmpsb
jne
sub
mov
inc
jnp
jg
loop
loope
jge
orl
push
inc
inc
cwtl
shlb
xor
mov
push
fdivrs
in
divl
mov
cmp
cmp
mov
xchg
cmpsb
cmp
or
cmp
test
xchg
ljmp
xchg
mov
push
mov
shl
lods
pop
and
scas
mov
movsb
jb
jbe
inc
mov
or
in
es
test
mov
push
loope
in
fsubs
sbb
xor
push
sti
push
mov
ds
nop
inc
ja
std
inc
js
cmpsl
je
js
lahf
mov
scas
cltd
aas
dec
rcrl
nop
sub
push
xchg
rolb
dec
inc
sbb
lahf
fcoml
xor
inc
arpl
cmpb
push
mov
push
jo
scas
pop
shrb
cmp
shrb
test
push
fstpl
pop
jmp
jne
cld
jnp
add
pop
pop
pop
leave
rorl
pop
mov
dec
call
cld
push
lock
push
jl
dec
or
or
sbb
xor
push
rorl
dec
sub
ss
repz
lret
pop
js
testl
add
pusha
stos
cld
xor
fildl
push
push
and
mov
mov
adc
cwtl
adc
ret
das
mov
push
sub
loop
mov
push
lea
sti
jge
jmp
jbe
or
pop
inc
adc
or
cmp
clc
outsl
jbe
lea
mov
mov
push
dec
cmp
adc
pop
sub
pop
push
inc
mov
adc
or
jg
xor
jp
mov
jns
adc
clts
pop
int3
push
or
push
or
push
or
add
mov
adc
xlat
dec
or
or
push
push
pop
pop
fsubr
jmp
cmpl
aad
pop
inc
fldl
mov
jmp
and
divb
mov
or
shll
jb
daa
adc
and
push
sub
testl
and
mov
lret
push
and
sub
ds
push
or
test
pop
or
and
mov
pop
faddp
shll
jg
or
cmpsb
int3
test
bound
inc
rorb
fs
cld
aas
imul
pop
or
ret
adc
add
pop
mov
sbb
add
cmp
jb
cmp
add
xlat
mov
jge
cmp
mov
add
xor
jb
mov
int
cmp
jae
cli
sbbb
inc
add
rcl
jbe
test
addb
mov
add
and
mov
push
lds
sub
lcall
and
lea
or
jge
cmp
cld
sub
jg
push
xchg
push
dec
ret
push
cmp
sub
insb
loopne
cmpsl
lods
loope
imulb
xlat
push
mov
mov
repnz
stc
jge
stos
mov
cmpsb
test
add
cmp
out
add
or
lea
jl
sub
cmpsb
jns
jmp
push
jl
push
insb
inc
jge
pop
adc
inc
mov
mov
lahf
loope
adc
jle
cmp
sbb
mov
lock
mov
cli
inc
cmp
jle
push
adc
inc
mov
mov
xor
add
mov
sub
movsb
inc
push
push
rclb
out
out
enter
xchg
add
add
sbb
adc
mov
fwait
push
aam
pushl
inc
aam
cmp
in
push
mov
mov
loop
daa
pop
or
xchg
push
out
or
outsl
jnp
shlb
or
push
sbb
jg
cmp
std
mov
test
jle
int3
std
sbb
cmp
je
dec
sub
sub
jg
clc
inc
int3
sub
jg
mov
mov
les
and
and
pop
add
sub
into
mov
adc
scas
scas
aam
ret
adc
pop
lock
les
loop
or
rorb
push
dec
and
push
inc
push
or
das
mov
cmp
inc
inc
cmp
pop
add
sub
dec
add
enter
pushl
dec
shl
push
jnp
fmul
push
jecxz
not
jmp
mov
pop
pop
icebp
nop
cmp
test
mov
cs
out
mov
adc
inc
cmp
jne
or
mov
call
sub
add
stos
nop
sbb
shl
shrb
xchg
mov
out
push
movsl
add
adc
sub
xor
bound
mov
adc
push
jmp
outsl
movdqa
data16
jge
dec
adc
push
and
loope
outsb
sahf
addr16
push
pop
outsl
inc
or
sahf
push
repz
jle
or
push
cld
jns
jg
lea
in
mov
or
lea
dec
ret
add
out
cmp
lret
prefetch
jg
dec
mov
or
jne
test
push
ds
or
lods
fcoms
lret
or
icebp
sub
push
push
sub
je
sub
inc
mov
test
adc
xchg
out
in
add
sub
lock
in
pop
add
inc
rep
insb
push
cmp
jne
xor
test
rcll
adc
cmp
jp
std
push
mov
cli
push
push
ret
sti
and
cmp
sbb
xchg
icebp
push
outsb
dec
rep
mov
test
add
hlt
shll
lret
adc
dec
jp
jne
outsb
pop
xchg
mov
mov
push
icebp
sbb
arpl
aad
int3
or
pop
sub
sbb
and
clc
or
push
push
test
clc
les
pushf
outsl
push
js
mov
and
call
add
shrl
incb
jp
movsl
je
push
push
jmp
ret
repz
inc
inc
and
mov
adc
adc
or
lods
lods
lods
lods
fcoml
sarb
data16
popf
enter
mov
lods
mov
adc
lea
sarl
popf
mov
mov
call
adc
jne
mov
add
rol
mov
pop
sub
add
inc
sbb
ja
xchg
or
jnp
add
pop
push
pop
push
mov
popf
loope
push
xchg
into
push
pop
add
loopne
js
jnp
inc
and
call
sti
das
cmp
jb
lea
push
adc
push
pop
shrb
out
movsb
adc
sti
push
pop
jle
and
call
and
ss
mov
xor
pop
jnp
inc
push
movsb
sub
sub
aas
jno
push
sahf
push
cmp
es
push
sbb
dec
mov
loop
outsb
aam
dec
pop
out
out
xchg
xchg
js
out
sahf
jo
pusha
pop
mov
fldcw
jmp
in
sub
lret
sub
nop
push
push
js
nop
adc
les
mov
enter
mov
iret
sarl
cld
push
add
or
sbb
fwait
clc
cmp
aaa
sub
sub
push
or
push
mov
loope
aam
cmp
or
inc
jge
ja
push
adc
cli
push
test
push
adc
sbb
fimull
jne
inc
inc
cmp
inc
dec
jne
jo
sub
xor
inc
shll
inc
fadds
xor
cmp
sbb
pop
outsb
sbb
xor
aas
adc
lahf
cmp
ja
clc
push
push
mov
cmp
sbb
push
add
xor
mov
sub
mov
aaa
es
jmp
and
iret
sbb
popf
jp
lret
sub
add
xlat
mov
xchg
data16
pop
lcall
adc
add
out
bound
je
pop
jmp
push
dec
xor
xor
pop
inc
lea
js
or
je
mov
rolb
call
or
push
mov
rolb
jb
add
add
add
mov
in
and
pop
add
or
mov
lea
lret
sbb
dec
mov
std
cld
push
test
lcall
sub
fdivl
cmp
cmp
sub
lock
lods
fisubrs
fisttps
popf
cmp
clc
push
ds
adc
mov
push
push
cmp
jb
inc
lea
pop
iret
out
sbb
sti
lea
sub
sar
push
push
or
ljmp
into
in
loop,pn
mov
add
xor
push
mov
xchg
mov
and
inc
jnp
dec
sbbl
push
pop
pop
ret
andl
and
mov
insl
aam
pusha
or
pop
cmpsl
adc
outsb
enter
imul
xchg
sub
pop
xchg
daa
dec
mov
test
loopne
imul
adc
mov
mov
xor
and
adc
icebp
je
mov
shrb
sub
mov
lods
xor
in
pop
test
pushf
or
adc
pop
adc
jle
addb
lret
jg
push
movzwl
sub
testb
add
fwait
mov
mov
or
push
call
data16
sub
push
push
sbbl
xchg
jne
lahf
pop
insl
lods
cmp
or
pop
dec
clc
pop
in
cmpb
pop
das
or
adc
xor
jne
jno
pop
call
jne
mov
lds
fadds
dec
ficompl
jne
push
pop
cmp
ja
fildll
pop
jbe
lea
insb
sbb
adc
add
addb
jae
insb
or
jb
hlt
xor
jbe
add
and
mov
dec
test
jne
sbb
push
test
mov
lcall
std
dec
loopne
adc
sub
sbb
dec
cmp
call
subb
push
jbe
sub
mov
or
cmpsb
add
and
xchg
lock
or
mov
add
arpl
mov
jb
ljmp
ret
call
xor
cmp
scas
jo
mov
popa
cmp
pop
add
sbb
dec
sub
call
add
pop
or
cmp
add
or
sub
or
arpl
xor
xor
data16
mov
add
rorl
cmpsb
add
or
loope
or
lea
stos
add
inc
adc
sub
mov
mov
inc
dec
jne
xchg
jns
out
lea
daa
or
movsb
dec
fimuls
sbb
push
push
sbb
jo
loopne
dec
dec
mov
insb
mov
mov
add
div
mov
and
jbe
lea
or
enter
enter
xchg
mov
xchg
or
jl
dec
inc
mov
inc
in
fsubr
fisubrs
cmp
fdivr
ficoml
push
mov
jo
insb
fdivl
cs
push
cmp
fisubl
scas
gs
inc
inc
cld
popa
fisubl
cmpb
fldt
inc
int
rorl
insl
notl
mov
add
mov
mov
adc
push
ret
or
mov
sti
cmp
leavew
sub
mov
mov
add
lea
sti
rorb
xchg
hlt
cmpsl
lret
add
cmpsb
cli
and
out
clc
push
and
and
jmp
push
mov
cmp
jb
push
add
lock
dec
cld
or
jo
sbb
cmp
scas
fdivl
and
es
addl
and
cmp
orl
lock
mov
mov
push
adc
xor
mov
push
adc
jno
push
cmp
lock
out
sar
jne
movl
cmp
push
sbb
jmp
inc
std
jne
shlb
in
xchg
fldt
mov
out
xor
cmp
les
clc
cmp
cs
loope
clc
orb
push
sahf
push
sub
sub
mov
cmp
push
mov
and
sub
call
cmp
sub
std
dec
data16
or
push
fs
push
jmp
sbb
jnp
cltd
xchg
push
out
push
and
push
mov
lea
push
inc
lock
jge
rolb
jnp
jae
cmp
jbe
movsb
js
movsb
iret
push
aam
pusha
std
jne
mov
test
jae
inc
xchg
push
imul
leave
inc
or
aas
mov
xor
lea
jb
jmp
push
into
sub
add
jmp
jg
movsl
adc
cmp
or
lcall
outsl
shlb
ljmp
or
movb
sbb
pop
jg
jb
mov
xor
inc
daa
faddp
rcrb
mov
adc
decl
inc
mov
inc
inc
inc
dec
jne
mov
inc
aam
loope
jo
es
jle
jbe
mov
jo
pop
das
fdivs
jo
mov
outsl
rorl
inc
dec
jne
fisubrl
ret
into
cwtl
pop
cltd
add
gs
jnp
test
xor
movb
mov
jae
adc
mov
push
dec
loopne
adc
mov
mov
and
lods
inc
jp
loop
push
mov
or
fisttps
pop
imul
inc
mov
lcall
sti
rep
andl
pop
jno
test
cmp
ret
cli
fwait
sub
faddl
inc
adc
mov
inc
push
mov
int3
cmp
adc
ljmp
xor
std
and
cwtl
mov
push
or
xchg
andl
jge
enter
jg
out
ja
inc
mov
jmp
xor
dec
sbb
add
xor
add
sub
cmp
out
arpl
jne
insl
adc
fcompl
sub
jmp
int3
mov
and
imul
mov
scas
mov
mov
push
and
insb
pop
movl
in
outsb
sbb
push
cli
outsl
cmp
imul
mov
es
pop
cmp
jne
sbb
pop
adc
mov
imul
xchg
lret
lahf
jno
faddp
cltd
rcl
sahf
inc
inc
sbb
sub
imul
and
imul
rcrb
sub
lea
mov
cwtl
mov
jne
addr16
aaa
out
jle
sahf
jg
test
push
push
cmpl
adc
shlb
cmp
sbb
xchg
adc
dec
subl
ret
jecxz
push
out
xor
xchg
mov
movsl
movsb
push
sbb
add
lea
jnp
test
aaa
cmpl
andl
pop
ret
jo
testl
push
movsb
inc
and
cmp
dec
pop
xor
aaa
dec
xor
push
clc
pop
sbb
cmp
je
push
mov
sub
push
add
xor
xor
inc
cmp
jbe
push
in
push
shl
sub
sbb
pop
sbb
jo
loope
inc
push
ret
inc
insb
mov
ret
jl
xchg
imull
inc
adcl
jmp
jge
nop
clc
xor
iret
jo
icebp
push
mov
adcb
lcall
dec
sbb
and
xchg
push
pop
mov
inc
push
cmp
int
mov
add
add
dec
shl
loopne
pop
jb
scas
lea
enter
pop
adc
sbb
test
mov
fistl
shrb
push
je
dec
cmp
iret
decl
xor
int
loope
mov
mov
adc
je
cmp
insb
xor
divl
js
xchg
and
xchg
xor
xor
aas
pop
sbb
push
sti
pop
mov
testb
push
cmp
xor
das
inc
aas
add
fsub
and
das
fnstsw
xor
fdivrs
gs
popa
cmp
jnp
or
loop
mov
cmp
mov
push
imul
add
sub
mov
adc
sub
movsb
mov
loop
push
jo
push
jo
pushl
push
push
aas
rolb
cmp
cmp
jne
insl
idivb
mov
jmp
adc
outsl
jo
in
jbe
fisubl
inc
jae
adc
cmp
dec
or
xor
inc
aam
movsl
test
test
and
xchg
xor
jo
test
mov
push
mov
inc
jge
aaa
dec
imul
inc
push
dec
cmp
sarl
sub
cmc
pop
dec
imul
imul
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
xor
les
xor
jne
imul
add
push
pop
inc
jo
pop
nop
out
xor
aas
sbb
inc
xchg
push
dec
enter
mov
nop
and
ja
pop
adc
adc
cmpl
pop
inc
jne
xor
fmull
sub
inc
imull
inc
fiadds
insl
adc
pop
and
cmc
pop
mov
enter
or
push
mov
xor
pop
idiv
inc
pop
lea
mov
dec
and
pop
ret
add
sbb
insb
in
je
pop
sub
lea
mov
xlat
xchg
popa
pop
inc
xor
ret
cltd
testl
lock
mov
lea
cltd
es
mov
mov
imul
adc
in
ret
lea
dec
ja
cli
push
js
sub
add
sbb
dec
adc
lea
jmp
add
loop
pop
jb
or
out
pop
sbb
jo
adcb
add
cmp
jle
sub
jmp
icebp
shll
adcl
outsl
sarl
out
pop
adc
jne
imul
dec
and
lods
mov
leave
call
add
mov
mov
cmp
into
movsl
sub
inc
inc
pushf
dec
dec
mov
jbe
mov
popf
add
dec
jns
orl
decl
sbb
push
lock
sub
incl
lds
xor
hlt
jae
inc
arpl
jg
add
pop
add
or
cli
add
mov
inc
cmp
in
mov
sti
or
pop
push
idivb
fstpt
or
push
push
jmp
pusha
jne
and
popfw
out
pop
push
push
jmp
pop
push
push
push
push
sbb
sbb
lret
daa
clc
mov
push
or
xchg
inc
sahf
pop
adc
jmp
mov
dec
mov
sbb
dec
lcall
cmp
sahf
pop
push
pop
clc
sub
jge
push
pop
mov
cmpl
aas
xor
push
push
jnp
insl
out
pusha
cmp
loop
push
das
or
dec
mov
enter
ss
jge
cmp
jl
cmp
jg
push
jle
jge
insl
ss
mov
idivb
stos
ljmp
call
cmpsl
cli
inc
add
pop
jmp
jne
cmp
orl
sbb
insl
and
data16
loop
int3
or
ret
jl
push
icebp
sbb
adc
mov
sub
and
push
js
pop
push
and
lock
xor
jmp
xor
sub
cmpsl
xchg
xor
dec
arpl
mov
or
cwtl
movsb
sahf
arpl
je
mov
fs
mov
jge
adc
jl
inc
push
repnz
cs
jae
xor
mov
in
xor
es
xchg
ja
push
push
push
push
push
push
pop
clc
sbb
add
lea
sbb
lea
sub
rolb
lret
or
call
sbb
rorb
adc
lea
in
call
rclb
pusha
fsubrl
sbb
push
mov
mov
xor
mov
add
jb
lods
rcll
mov
jb
jns
or
dec
icebp
pop
mov
inc
mov
xchg
pop
ffreep
and
mov
out
daa
inc
add
outsl
jmp
ss
sub
ja
xchg
push
pusha
xor
push
jb
adc
insb
orb
ret
cltd
xor
int3
outsl
imul
mov
rorl
cmp
jge
ss
sbb
jl
incl
dec
adc
add
test
xor
or
push
xor
xor
xorb
cld
test
inc
decb
ljmp
icebp
neg
outsl
nop
call
push
dec
inc
inc
ret
hlt
mov
sub
pop
and
rorb
add
jmp
inc
or
xor
or
jno
adc
inc
push
dec
jae
xor
mov
fadds
push
push
add
adc
sarb
loopne
fdiv
fiaddl
iret
jl
mov
sbb
sbb
jne,pn
sbb
mov
loopne
xor
pop
addr16
shr
inc
push
xor
lahf
loope
shr
rcr
shr
rcr
or
lods
lock
fildll
jb
movsb
out
shll
cmp
or
cmp
cltd
mov
out
dec
pop
fdivs
pop
add
add
pop
ret
leave
adc
and
cmp
mov
cmp
iret
xor
adc
pop
pop
fistps
pop
push
or
ret
jns
jmp
popa
jae
dec
pusha
cmp
or
enter
out
sbb
push
push
jbe
jns
ret
or
sbb
push
or
lcall
pop
outsb
and
btr
cmpl
xor
mov
sub
lea
pop
aas
jns
mov
adc
adc
mov
in
lock
repz
in
nop
adc
or
or
mov
dec
mov
add
and
and
mov
push
nop
ljmp
aas
dec
push
rolb
pop
sub
push
mov
call
mov
sub
jmp
ja
dec
mov
ficomps
sub
xchg
outsb
and
inc
call
pop
sbb
push
ss
push
popf
cmp
fimuls
cld
int3
push
imul
aaa
rorl
push
push
xor
sarb
lock
push
loopne
pop
cli
repnz
push
clc
into
push
test
inc
rorl
in
cmp
xchg
mov
jo
sbb
sbb
or
and
add
ficoml
push
mov
sarb
inc
push
into
inc
sbb
dec
push
and
mov
pop
push
and
or
scas
or
ret
addr16
or
push
popa
xor
cmp
and
lds
inc
adc
je
fildl
orl
js
fs
fsubrl
rcr
or
out
add
cmp
jb
iret
fsubrp
pop
mov
je
sbb
ss
jp
push
imul
test
cmp
stc
in
cmp
cmpsb
cmpsb
fmull
outsl
lahf
dec
sbb
mov
lahf
push
dec
notl
and
and
loopne
lds
push
push
test
lds
push
xor
xchg
or
repnz
fcmovb
dec
add
sbb
enter
pop
rolb
add
xorl
mov
or
lret
outsb
outsb
ljmp
insb
mov
aas
loopne
xchg
push
push
mov
mov
xor
idivb
ljmp
cmp
jb
or
xorl
mov
jo
sahf
pop
arpl
xor
cmpsb
cwtl
dec
jl
enter
mov
add
adc
jmp
mov
mov
inc
xor
aad
xor
mov
mov
add
push
rclb
insb
es
aam
in
mov
xor
movsl
arpl
jbe
sbb
or
jl
add
push
mov
mov
into
out
sub
push
pop
imul
pop
or
imulb
rorb
js
push
push
push
jle
push
aas
or
xor
in
push
dec
push
cmp
cmp
add
cmp
fdivrs
fidivs
sti
mov
pop
loope
sbb
stos
lods
cmpl
push
pop
pop
sbb
xor
out
push
jo
in
jne
push
lods
mov
push
leave
aas
add
inc
das
orl
jb,pt
lret
cmp
imul
xchg
add
xor
fildll
out
imul
ret
jae
push
add
push
or
sahf
mov
fisubl
or
inc
cmp
add
loope
insb
and
fiadds
int3
rolb
dec
pusha
adc
vpmovuswb
in
pop
pusha
test
or
out
stc
cmp
jge
imul
mov
andl
cmp
pop
movb
mov
shlb
or
rol
out
adc
nop
pop
xorl
xchg
test
cmp
or
cs
mov
xchg
cmp
rorb
les
lock
leave
push
sbb
pusha
mov
sub
andl
sub
mov
ret
sbb
ja
fdiv
add
mov
and
and
xor
adc
lock
enter
test
hlt
insb
jno
add
jmp
push
sbb
push
popa
fmull
pop
add
mov
mov
push
loop
fs
jbe
sbb
adc
jge
push
inc
push
jmp
daa
addl
dec
scas
dec
subl
cmp
call
je
mov
pop
push
pop
sbb
dec
xor
add
repz
add
adc
adc
and
movsl
hlt
daa
mov
cmp
dec
ret
dec
call
dec
sbb
adc
mov
sahf
sub
pop
dec
insb
out
mov
out
add
add
orl
pusha
outsb
loopne
mov
push
fdivs
or
adc
dec
aas
pop
mov
incl
cld
or
or
jb
push
sahf
ret
push
inc
mov
adc
push
push
inc
incl
mov
rcr
idivb
add
je
or
jne
xchg
add
push
paddq
inc
push
mov
jmp
ja
cmp
push
ss
jmp
add
shlb
xchg
inc
adc
add
lods
dec
push
inc
inc
pop
je
pop
es
inc
rolb
add
jmp
push
mov
addl
jmp
fisttps
add
sbb
icebp
xchg
fcomps
js
je
inc
or
je
andb
mov
mov
add
or
mov
into
inc
add
xor
mov
inc
xlat
pop
add
and
sub
cli
pop
push
test
test
rorb
mov
dec
rorb
mov
mov
jmp
mov
adc
cmp
jne
mov
rcll
jge
addb
dec
rorb
cmp
add
pop
std
aam
pushl
dec
shl
lea
cmp
jb
sbb
sahf
sub
pushf
fsubrs
add
push
push
orl
je
mov
pusha
xor
mov
fdivs
jle
imul
jne,pn
data16
cmp
and
inc
xlat
fcmovnu
mov
add
xor
add
ret
mov
pop
subb
mov
cmp
je
inc
inc
or
inc
outsb
or
jne
repnz
add
push
sar
inc
push
push
adc
jb
sub
jbe
push
mov
push
xchg
push
cmpsb
dec
add
or
adc
adc
enter
cld
pushf
pusha
ret
and
addps
jmp
sbb
fiaddl
fs
imul
adc
push
movsb
or
sti
or
sub
out
pop
shlb
int
pop
jl
pop
mov
bound
xor
pushf
aas
and
jbe
xor
lods
les
mov
adc
pushf
inc
adc
pop
push
dec
pop
pop
mov
popa
or
lea
mov
xor
or
or
or
push
and
mull
rolb
outsl
add
pop
in
js
into
mov
jmp
shlb
xor
cmp
mov
mov
pusha
jo
sbb
sarb
pop
sbb
jbe
pop
aaa
clc
adc
and
lea
xchg
sub
and
push
cmp
daa
adc
cmp
jb
lock
ja
mov
cmp
mov
sbbl
outsl
mov
push
call
je
mov
and
test
or
and
pop
add
or
clc
add
out
add
and
pop
add
shrb
mov
push
testl
stc
leave
fiaddl
hlt
lcall
add
loopne
xchg
je
mov
call
push
loopne
or
jmp
orb
jmp
xchg
adcl
movlps
ret
dec
mov
xor
pop
inc
in
push
mov
cld
or
xor
ds
add
jmp
lret
or
popf
or
mov
movl
add
add
mov
jmp
scas
pop
push
and
je
adc
adc
push
mov
scas
inc
mov
jae
mov
jmp
arpl
icebp
testb
xchg
dec
sub
xor
stos
cmp
push
test
sbb
lods
mov
icebp
mov
mov
sub
cmpsl
cmp
push
lea
loopne
and
pop
cld
dec
dec
or
stos
lea
addb
jge
pop
ret
mov
push
mov
jo
and
inc
and
lock
gs
or
pusha
in
sarb
jl
pop
orl
sbb
add
lea
mov
sbb
sbbb
dec
outsb
mov
cld
dec
xchg
insl
loop
pusha
add
adc
xlat
rclb
pop
cs
jmp
clc
jg
mov
ljmp
js
push
add
push
cmp
shrb
and
mov
leave
test
fmul
arpl
pop
inc
inc
out
cmp
lahf
sti
test
dec
push
sbb
push
inc
and
sbb
iret
and
jno
pop
or
and
mov
clc
dec
loopne
sub
jo
and
pop
jl
inc
mov
pop
add
mov
test
add
aas
xchg
dec
call
mov
mov
pop
inc
incl
shlb
mov
test
lcall
cmp
inc
pop
int3
push
into
rorl
dec
dec
xor
and
scas
add
jmp
test
adc
jge
dec
into
adc
lock
not
push
rcrl
jbe
pop
mov
orl
sbb
lods
xor
mov
hlt
dec
das
das
das
sub
enter
lcall
dec
test
mov
jne
mov
ja
movl
cmp
es
or
inc
and
add
arpl
ficompl
mov
ja
fsubl
jp
std
shrl
push
mov
pop
sbb
pop
enter
or
insb
cmpsl
scas
pop
lea
sub
adc
call
mov
dec
mov
leave
aad
imul
scas
and
inc
shl
and
fidivrl
hlt
inc
lea
call
adc
out
sbb
inc
cmp
jl
jle
add
icebp
xchg
jo
orps
sbb
and
dec
mov
cmpl
fcoms
shrl
mov
jecxz
scas
pop
push
cmp
sbb
fcoml
testl
push
jne
push
aas
out
loope
or
pop
sbb
aam
addb
push
sbb
nop
sbb
idivb
mov
mov
icebp
jmp
push
pop
xchg
test
les
push
push
imul
jne
sbb
jne
mov
imul
xor
aaa
or
data16
adc
or
lea
mov
dec
lods
das
adc
adc
insl
call
push
frstor
icebp
es
mov
data16
fidivs
push
push
xchg
repz
sub
mov
xchg
push
lret
jae
test
mov
jno
adc
or
pop
xchg
jb
nop
sub
rcrb
and
dec
push
rcll
xor
mov
scas
es
testb
pop
sub
or
or
add
push
adc
add
dec
lret
inc
xor
popf
es
aaa
inc
cld
push
add
lods
lea
xchg
sbb
xor
notl
xor
pop
cmp
xor
jp
mov
add
cmpsl
lret
jmp
cmc
inc
cmp
shll
out
xor
jbe
cmp
mov
ret
jmp
sbb
in
clc
inc
mov
or
push
dec
or
test
jbe
mov
ljmp
lea
fld
jb
inc
add
cmp
jb
mov
lahf
mov
test
nop
sahf
add
arpl
push
xor
es
call
push
bound
ljmp
mov
adc
push
lahf
imul
shlb
adc
push
push
push
push
push
push
adc
push
cli
sbb
pop
sub
sbb
call
xchg
cli
mov
push
dec
push
pop
mov
or
dec
jmp
inc
movsl
aas
in
pop
gs
mov
popl
divl
ds
jmp
sbb
jo
int
add
jo
push
and
pop
stc
lcall
sbb
push
out
push
sbb
push
mov
adcb
jmp
mov
mov
add
jp
sahf
mov
out
push
mov
pop
pop
ja
adc
in
ret
pop
push
bswap
insb
push
push
adc
add
add
dec
jle
and
sbb
mov
adc
adc
mov
or
call
mov
adc
jmp
xchg
adc
adc
decl
sub
cld
shr
mov
imul
add
mov
inc
and
dec
lods
inc
cld
push
and
push
lea
mov
jg
sbb
adc
add
out
stos
clc
je
cli
add
sub
mov
cs
mov
inc
mov
test
scas
je
shr
lea
shll
pop
mov
les
test
lea
xor
inc
cmp
pop
add
test
rcll
ljmp
mov
and
push
or
imul
jecxz
push
xor
into
xchg
sub
pop
shrb
sar
xor
lret
cmp
jbe
mov
mov
sarb
imul
cmp
je
lret
cmpsb
loopne
inc
jno
jno
mov
sti
pop
mov
shr
not
and
out
aaa
pop
dec
jne
sub
jmp
lea
das
mov
adc
push
mov
pop
dec
int3
xor
add
pop
add
and
jne
bound
outsl
adc
les
ficomps
lock
cmp
pop
dec
pop
or
or
negl
ss
sub
mov
jbe
cmpb
push
xchg
lods
loopne
sti
or
call
inc
insb
in
lock
sub
lods
dec
fs
repnz
mov
or
mov
sbb
insb
decl
nop
add
mov
mov
mov
mov
or
loope
add
scas
jp
adc
sti
divb
or
sbb
pop
adc
andl
inc
adc
dec
adc
add
and
js
gs
out
push
xchg
in
pop
mov
lret
mov
cwtl
dec
mov
lds
push
lea
pop
pop
les
loopne
jp
or
mov
rorb
scas
xchg
daa
mov
add
imul
add
les
je
push
or
pop
add
js
add
out
mov
les
popa
dec
fisubrl
mov
pop
mov
push
and
adc
popa
inc
jmp
jae
js
adc
int
mov
fdivr
jmp
orl
ds
incl
pop
mov
push
add
mov
jo
inc
hlt
shlb
add
inc
jl
or
ret
imul
mov
movsb
incb
pop
mov
add
sub
and
jne
cmp
adc
sub
inc
add
sbb
jecxz
and
pop
mov
cmp
ja
icebp
scas
cmpb
or
inc
orl
orl
in
lea
push
out
inc
inc
cld
mov
sbb
call
dec
jne
cmp
add
or
sub
sub
fs
inc
popf
lds
pop
mov
mov
lock
push
icebp
stos
decl
or
lds
not
and
adc
ror
sub
add
jl
adc
xlat
sub
nop
out
mov
dec
ja
or
cld
and
icebp
mov
mov
and
jbe
mov
test
dec
les
int3
inc
jp
rcrb
cmp
hlt
sar
push
xchg
aad
stc
int3
push
pop
inc
pop
lcall
stc
sbb
movsl
add
nop
or
add
cmp
nop
mov
or
xchg
and
add
add
movsl
adc
cwtl
xor
dec
mov
mov
add
pop
push
lea
jbe
cltd
mov
adc
jle
cmpsb
imul
rcll
adc
lcall
add
sub
js
movsb
jmp
and
and
js
test
iret
cmpl
mov
or
inc
cld
mov
and
clc
jl
inc
or
daa
jge
sub
add
cld
push
sar
dec
jp
ret
adc
pop
idiv
adc
cld
xor
xor
cmp
dec
mov
sbb
xchg
fisttps
mov
mov
ja
add
dec
ficoms
out
sbb
fiaddl
fimull
or
mov
lods
or
jbe
lock
or
mov
xchg
xchg
cmp
lods
decb
into
mov
out
cmp
xchg
xor
jns
dec
sbb
sbbb
add
sarl
dec
cmpb
and
add
lods
pop
and
inc
cmp
clc
push
popl
push
push
inc
into
call
out
sbb
cmp
or
stos
or
jo
dec
or
mov
cs
nop
cmp
and
cs
fidivrs
add
cmp
jb
push
jne
mov
lahf
or
fnstenv
jmp
cmp
cltd
sub
lock
aaa
aas
adc
push
aad
add
pop
pop
dec
lds
pop
lcall
inc
lods
cmp
je
inc
mov
pop
mov
mov
cmp
ret
ja
jl
and
inc
cmp
pop
iret
mov
andb
cwtl
jno
mov
rclb
jp
mov
out
repz
mov
jle
mov
adc
outsb
mov
sahf
jns
inc
test
inc
push
pushf
mov
sub
mov
sbb
jp
inc
push
test
jo
push
xchg
sbb
iret
push
dec
cmp
in
and
mov
decb
jne
cwtl
popf
pop
jo
repnz
jmp
jp
mov
adc
and
jne
aaa
pop
sbb
dec
push
and
shll
jp
mov
inc
call
push
or
das
pop
pusha
mov
sub
jge
dec
pop
inc
mov
push
pop
add
rorl
cmp
or
add
adc
inc
or
xchg
jge
push
out
or
sub
stos
incb
adc
lock
popf
aad
shrl
mov
lea
jo
sarb
sub
cmp
aas
fmull
cmp
add
pop
add
leave
sub
sbb
pop
xchg
adc
sub
sbb
add
sub
cmp
or
push
ret
push
push
inc
loopne
add
in
mov
dec
cmp
or
pop
cmc
cmp
add
sbb
push
mov
add
sub
and
mov
pop
mov
cmp
mulb
or
rolb
insl
cmpsb
icebp
push
shll
adcl
push
pop
adcb
sti
in
push
js
sub
pop
lock
aas
jb
mov
leave
mov
xchg
inc
pop
mov
in
xchg
sub
lods
cltd
orl
dec
push
imul
xchg
dec
out
outsl
sub
or
push
and
dec
push
mov
shlb
xor
fnstsw
push
ds
sahf
sub
sub
enter
inc
lods
loopne
push
mov
xor
in
mov
jmp
or
popf
jbe
enter
aas
mov
test
xor
push
test
add
iret
pushf
mov
or
adc
add
bound
adc
aas
adc
lcall
mov
xor
or
mov
adc
punpckhdq
inc
and
inc
xor
push
adc
or
push
les
cmp
or
adc
fistl
loop
adc
or
xor
fldl
rorl
hlt
mov
or
and
dec
jmp
or
push
scas
les
cmp
push
xor
push
dec
and
ja
add
cmp
lret
pop
movl
dec
adc
jbe
test
cmp
pop
inc
cmp
jne
or
dec
sub
adc
dec
fdivrs
popf
mov
pop
je
lods
adc
mov
mov
xor
int3
add
add
push
rolb
or
pop
xchg
sub
sbb
sbb
pop
add
adc
adcb
dec
jnp
mov
push
pop
div
mov
jb
lea
cmp
arpl
mov
cmpsb
sbb
test
jnp
lock
push
cmp
add
push
imul
mov
xchg
mov
xor
xlat
adc
cmp
pop
jecxz
daa
and
inc
pop
sub
mov
insl
or
call
cmp
in
cmc
je
xchg
sbb
dec
in
pop
rcr
cmpsl
xchg
mov
or
cli
jb
inc
jge
pushf
xor
icebp
cmp
push
hlt
cmp
sbbb
push
sbb
sbb
mov
push
lods
sub
xchg
add
and
jne
or
push
adc
gs
push
mov
sbb
scas
popa
mov
jbe
sahf
lcall
xor
lock
xor
inc
push
mov
adc
sub
fsubrl
jbe
sti
outsb
cmp
fisttpl
sbb
adc
jne
das
outsl
push
jne
pop
sbb
push
out
aam
sub
and
js
push
gs
mov
fistl
test
ja
enter
repnz
cld
cmp
je
movl
sahf
clc
call
fsubs
pop
mov
mov
ror
jmp
lcall
ds
inc
and
lret
jo
lock
push
ficomps
mulb
jl
ljmp
jecxz
add
xor
sbbb
xchg
clc
xor
inc
sbb
lods
pop
and
lea
push
cmpsb
adc
loopne
aad
adc
mov
fstpt
rcl
stos
or
addr16
push
roll
push
popf
dec
mov
int3
cmp
sbb
rcl
push
xlat
push
test
inc
stos
int3
jl
movsb
xor
ficoms
mov
out
leave
xchg
add
add
add
xchg
lret
pop
sbb
adc
cmp
and
stos
add
jmp
jg
xor
sub
and
je
mov
push
cwtl
mov
aaa
adc
push
in
jnp
and
mov
loopne
fldl
cmp
xchg
jmp
sbb
mov
mov
and
mov
mov
loopne
test
inc
loopne
jmp
inc
add
push
and
daa
loope
push
and
cmp
movsb
cmp
lcall
mov
dec
dec
fimull
pop
sahf
sbbl
adc
cmp
and
and
cmp
cmp
sub
xor
fwait
inc
cmp
cmp
inc
and
xchg
fisttpl
inc
cmovs
xchg
xchg
push
push
pop
add
in
fs
in
je
jl
sahf
movsl
xor
leave
and
dec
mov
xchg
cwtl
pushf
and
leave
mov
sbb
mov
jmp
push
cmp
add
add
in
enter
xor
fiaddl
mov
adc
lock
nop
inc
adc
sbb
movsb
clc
sbb
cld
fstps
data16
inc
and
inc
dec
cmp
add
or
insb
pop
ret
adc
push
push
jo
add
dec
addr16
ret
cmp
mov
sbb
cmp
je
inc
dec
jne
out
mov
nop
add
push
mov
jle
sbb
arpl
mov
push
sbb
adc
das
add
xorl
ret
xchg
pop
stos
add
jmp
mov
out
dec
jp
push
xor
inc
jmp
dec
leave
mov
jo
xor
or
adc
push
mov
aad
sahf
push
jmp
rcl
pop
dec
adc
roll
pop
or
jp
push
mov
sbb
mov
out
jns
rcr
mov
cld
lea
mov
pop
cmp
xor
imul
or
cmp
icebp
or
test
push
jns
gs
pop
jp
mov
cmp
outsl
rclb
push
pusha
cmp
push
fdivp
jnp
mov
test
ret
je
xchg
inc
push
popa
dec
adc
aaa
in
and
movsl
push
jbe
push
cmpb
adc
cmp
jnp
lock
push
rcrl
push
lea
jmp
lock
scas
lea
loopne
push
mov
pop
fdivr
sub
ss
rolb
clc
lods
mov
jmp
sarl
or
add
adc
mov
add
rclb
xorb
dec
or
add
adc
pushl
or
ret
mov
and
pushf
sti
or
fisubrs
dec
mov
add
shll
movb
lret
loopne
rolb
mov
inc
mov
ja
mov
mov
mov
jmp
xchg
sub
je
or
je
dec
je
sub
movsb
sbb
mov
cmp
push
mov
rclb
mov
mov
pusha
dec
adcl
addb
sbb
jne
and
in
rolb
scas
add
arpl
mov
dec
outsl
or
inc
pusha
jne,pn
sbb
inc
fs
sbb
add
cmp
fcoml
movsb
cs
add
cmp
jge
or
push
pop
mov
fsubr
push
outsb
nop
mov
and
fs
push
dec
sub
insb
int3
inc
lock
sbb
mov
mov
push
dec
shlb
test
int3
ss
lret
sarb
add
xchg
mov
sbb
add
daa
jmp
add
pop
subl
pop
test
movsb
cwtl
or
ret
inc
insl
aaa
add
and
xchg
movsl
pop
inc
mov
jns
pusha
iret
sub
ret
add
push
adc
popf
je
jae
mov
loopne
mov
cltd
nop
lret
int3
fdivs
pop
pop
mov
cwtl
mov
das
loopne
or
sub
out
dec
cmp
and
pop
lods
xor
sub
sbb
fstpl
sub
dec
adc
or
add
pop
inc
insb
sub
div
jne
orl
and
mov
fscale
or
mov
cltd
cmp
mov
aas
rorb
das
adc
and
pop
sub
jl
lcall
sub
adc
cld
jmp
or
mov
sub
pop
push
imulb
sbb
jp
cmpsb
mov
lea
push
rcll
fmull
or
sbb
adc
or
push
movb
pop
sub
jo
add
std
pop
imul
xor
jbe
push
pop
les
in
nop
or
or
leave
fiaddl
jb
dec
xor
sub
insb
icebp
mov
fsqrt
xchg
or
cld
ja
xor
pop
dec
lods
and
cmp
or
data16
divb
mov
push
aad
data16
and
push
pop
mov
cmc
adc
out
xor
and
add
dec
mov
test
andl
add
cltd
jecxz
xor
jl
dec
push
mov
cmp
push
hlt
test
mov
sbb
sub
sub
mov
pop
pop
adc
jmp
cmp
sub
loope
fs
pop
lea
and
jo
xor
lea
lock
dec
jo
mov
ret
ja
orl
out
add
dec
es
push
xlat
sub
hlt
pop
adc
add
loopne
jmp
fcompl
fdivs
add
jne
or
inc
fwait
add
xor
adc
push
sbb
mov
in
push
sub
mov
xorb
jbe
dec
sbb
jmp
ja
dec
addb
jmp
adc
nop
out
and
xor
add
je
sbb
out
mov
inc
sub
add
jl
fnsave
cmp
jbe
jmp
push
inc
mov
mov
test
or
fwait
jb
pop
mov
std
mov
adc
fidivs
sub
or
pop
add
add
notl
test
cmp
jecxz
push
fwait
inc
shr
add
mov
inc
cli
pusha
sbb
cmp
cs
test
xor
insl
mov
imul
push
jl
push
sbb
pop
rcrl
imul
imul
mov
or
xchg
add
jne
hlt
mov
ret
pop
in
pusha
fs
dec
and
in
add
inc
call
push
or
das
cmp
dec
jle
cmp
ss
xchg
dec
inc
das
je
sub
imul
or
ret
adc
mov
lock
jb
sbb
fmuls
sbb
push
push
popf
pop
jg
divl
sbb
test
cmp
or
cmp
cmpsb
jmp
inc
jae
pop
ficompl
mov
je
push
pushf
scas
pop
mov
mov
inc
push
in
imul
adc
ds
or
fdivs
mov
fstl
lea
addr16
ret
fisttps
sub
subl
imul
shr
sub
add
xchg
or
addl
lods
push
lods
push
pop
outsb
in
leave
ror
out
pop
adc
mov
jo
and
sbb
or
jg
js
ja
add
rcr
lret
mov
push
andl
inc
shl
add
adc
movsl
repnz
cmp
sbbl
sbb
arpl
lret
xchg
mov
and
loopne
adc
call
shrb
push
js
int
lock
stc
or
adc
in
pop
aaa
mov
mov
shrb
rorb
addr16
or
xchg
xchg
jg
jp
cmp
lods
push
loope
mov
add
jle
mov
pusha
push
xchg
shrb
jge
inc
inc
out
xchg
jg
pop
jbe
xor
loopne
sbb
add
jmp
cmp
fadds
jne
sub
mov
popf
or
test
and
cmp
adc
push
xor
xor
pop
ficoms
cmp
je
cmp
and
adc
push
or
adc
add
popa
rcr
jne
inc
lds
mov
or
test
add
sbb
jmp
sarl
fdivrl
mov
sub
cmp
cs
and
jbe
incl
adc
sbb
jb
movsb
cmp
jbe
xorb
add
and
sbb
add
out
shrb
mov
add
xchg
andl
add
xorl
xor
sbb
xor
mov
jo
sbb
xor
xlat
insl
jnp
inc
push
aaa
mov
cmp
cmp
jbe
jns
aas
xchg
hlt
inc
dec
sbb
mov
sbb
mov
test
ss
mov
out
push
or
movsl
out
gs
out
inc
das
stos
or
xchg
adc
jae
sar
or
shrb
jp
add
nop
iret
inc
push
rorb
es
pop
icebp
orb
gs
adcb
sahf
push
push
rorl
mov
cwtl
insl
lods
test
cld
and
push
dec
pushl
inc
ljmp
in
xor
or
je
and
pop
leave
cmp
shll
testb
data16
push
xlat
iret
or
xorb
or
push
xor
sbb
mov
adc
loopne
stos
arpl
call
adc
xor
lock
and
xchg
jmp
out
mov
sbb
ret
sarl
mov
into
movsb
arpl
jg
pop
mov
adc
mov
movb
dec
mov
sub
mov
cld
std
add
xor
ss
mov
add
jo
iret
and
sbb
or
pop
fmuls
pop
mov
mov
dec
stc
cs
ss
roll
call
push
cli
push
dec
std
bound
leave
je
xchg
ds
mov
mov
push
push
xchg
into
es
push
je
mov
idivl
rcl
out
push
cmp
ja
add
cmp
adc
loop
ret
cmp
jne
out
aad
dec
adc
fidivrl
fldenv
or
into
leave
icebp
push
add
inc
add
ja
hlt
xorb
or
clc
stc
cli
xor
stc
xor
in
and
xchg
int
jne
rolb
pop
andl
repnz
mov
cmp
jle
in
pop
dec
cmpb
inc
mov
cmc
dec
and
pop
arpl
or
les
jne
ficompl
fdivl
cmp
adc
mov
aas
mov
mov
cmp
mov
call
push
and
popa
jle
dec
xchg
cmp
jle
in
xlat
movsl
push
add
mov
sub
adc
jge
lds
inc
arpl
movb
fwait
stc
stc
add
push
icebp
and
mov
jbe
dec
dec
mov
dec
sbb
jb
movd
out
jne
pop
pop
pop
mov
dec
insl
add
inc
loopne
jbe
add
jmp
cmc
sbb
aam
movsb
mov
mov
push
or
loopne
fs
je
aas
cld
dec
mov
je
mov
cmp
jb
cmp
jbe
inc
inc
mov
jmp
add
mov
pop
sbb
mov
test
out
sbb
or
jbe
or
loope
into
adc
adc
or
or
lock
aam
test
adc
js
mov
inc
popf
sar
pop
repz
in
add
rolb
loopne
jbe
adc
lods
test
icebp
add
push
in
mov
dec
lds
inc
xchg
in
xorl
jle
pushl
aad
repnz
jle
pushl
rcl
mov
push
xor
mov
aam
cmp
jne
xchg
pushf
cmp
fcoms
fcomps
xor
jle
sbb
dec
outsl
sbb
push
js
push
adc
cmp
fmul
in
mov
call
sbb
xlat
movsb
lret
jmp
and
inc
lea
mov
pusha
adc
pop
mov
cltd
enter
push
leave
fisubl
and
or
mov
scas
or
jmp
sub
cmpl
in
jl
dec
push
call
inc
adc
xchg
push
ja
aas
jle
push
mov
push
pop
push
adc
ret
test
add
test
rcr
push
push
xlat
aaa
lods
xchg
fidivrs
push
mov
mov
insl
aaa
add
xchg
sub
or
fsubrs
lock
shrl
fsts
xor
mov
inc
push
adc
and
or
add
cld
add
js
sub
dec
mov
mov
push
xor
imul
push
jne
push
sub
loope
cwtl
adc
pop
adc
sbb
or
outsb
jle
in
xchg
and
push
sbb
push
mov
push
cmp
les
adc
mov
out
cmp
shll
push
cmp
or
cmc
sub
rol
test
jbe
pop
test
sbb
xor
cwtl
ret
call
lock
dec
lock
cs
add
or
dec
jb
jl
jb
lea
lds
jbe
or
int3
pop
into
and
push
test
mov
mov
insl
nop
cmp
shr
js
stos
dec
and
jp
das
jmp
fisttps
mov
sub
scas
push
sub
js
mov
shlb
and
mov
mov
sbb
inc
sub
int3
inc
js
sbb
out
fwait
pop
inc
sar
fcompl
test
push
das
pop
ja
mov
icebp
add
sub
loope
and
add
mov
inc
and
and
push
loop
inc
xor
dec
hlt
jmp
sbb
adc
push
and
sub
pop
xor
push
pop
jbe
sub
mov
push
cmp
sarl
xor
lea
adc
enter
ljmp
in
and
jne
cmp
cmp
shrb
arpl
subl
add
sbb
adc
shll
mov
es
loope
or
lods
testb
or
or
sbb
cmc
fiaddl
cmp
data16
ds
push
mov
daa
jne
push
fs
push
jmp
jns
xchg
jg
inc
sbb
decl
and
cs
fs
jo
push
out
orb
scas
push
mov
mov
lret
je
push
mov
pop
xchg
sub
jecxz
push
adc
inc
add
add
dec
loopne
xor
mov
and
xor
jo
and
divl
and
and
out
jne
lods
rorb
and
cld
ret
dec
loopne
sub
cmp
je
mov
jns
divb
and
faddl
jns
add
aam
xchg
pop
addr16
outsb
or
dec
imul
pushf
pop
pusha
and
leave
adc
fsubr
add
dec
in
push
clc
sbb
xchg
inc
or
push
ds
std
add
dec
or
push
or
cmp
fistl
mov
fmull
jp
push
push
mov
clc
dec
imul
lret
test
jo
xor
fidivs
mov
inc
fwait
xchg
movsl
fwait
ret
ret
sbb
ja
shll
test
and
mov
mov
movsl
push
andb
cmp
push
mov
mov
mov
pop
int
mov
inc
sahf
inc
push
cmp
push
shrl
insl
sbb
jp
fiadds
dec
pop
or
lea
mov
mov
repnz
or
orl
xchg
test
daa
stos
dec
shl
add
mov
sbb
sbb
mov
imul
jo
pop
cwtl
int3
lods
pop
leave
pop
sub
jae
test
mov
cmpb
fs
or
dec
in
sub
daa
test
mov
xor
sbb
int
js
push
lahf
mov
movl
add
add
insb
mov
mov
inc
add
push
or
mov
incl
bound
and
insb
outsl
arpl
imul
push
jo
push
cld
ljmp
push
popa
dec
dec
addr16
dec
imul
inc
popa
push
dec
dec
dec
jp
push
inc
push
arpl
fists
inc
js
addr16
dec
inc
dec
push
inc
inc
dec
jo
arpl
push
insl
insl
dec
outsl
gs
pushl
inc
push
insl
dec
inc
outsl
dec
pop
jp
jno
push
popa
inc
inc
dec
fs
pop
inc
fs
push
mov
dec
insb
jbe
dec
dec
jae
push
push
jae
push
mov
andb
push
addr16
incl
dec
inc
dec
arpl
push
push
dec
inc
pop
imul
dec
bound
pop
inc
inc
dec
inc
js
jp
fs
inc
push
imul
std
pushl
pop
fs
push
push
dec
push
inc
bound
ja
jne
jae
push
bound
mov
imul
jo
je
dec
dec
popa
inc
pop
push
jns
push
ja
mov
fs
jb
cmp
insb
rorb
pop
push
insl
popa
dec
dec
imul
imul
addb
les
dec
push
inc
mov
push
arpl
popa
gs
insl
loop
push
jno
outsb
dec
dec
bound
push
push
inc
decl
or
pop
ja
imul
js
insl
adc
bound
inc
imul
in
outsb
pop
insb
int3
inc
push
inc
bound
dec
jae
jo
dec
jo
pop
pushl
imul
gs
ja
push
inc
je
je
pop
and
arpl
call
out
dec
jae
push
inc
insl
gs
push
js
mov
jb
push
je
push
dec
gs
push
jp
out
dec
imul
sub
aaa
or
jo
jne
push
dec
jbe
push
fs
arpl
jg
jb
add
adc
sbb
cmovae
arpl
fcmovu
fs
pop
pop
jmp
mov
push
jb
jbe
das
push
push
js
push
jns
push
aaa
cld
mov
fs
dec
pop
jae
outsb
js
mov
pop
shlb
and
popf
and
jae
push
pop
lahf
push
push
inc
outsl
jb
sbbl
mov
mov
mov
jnp
add
push
dec
outsw
xorps
jb
pop
lret
pop
pop
pop
addr16
pop
pop
in
adc
movsl
std
out
inc
dec
popa
js
push
je
imul
mov
les
iret
clc
add
insl
dec
outsl
push
imul
orl
gs
jmp
aaa
pop
rclb
mov
mov
movsb
jp,pn
and
ja
outsb
je
insb
cs
dec
push
lods
mov
movsb
jo
imul
shll
push
stos
ja
push
or
andl
popa
insb
inc
rcll
shld
dec
mov
gs
xor
cmp
loopne
ljmp
ret
add
push
jmp
jmp
push
push
mov
pop
dec
lahf
or
dec
push
fcom
inc
dec
mov
dec
inc
pop
jnp
inc
inc
cmp
xor
sub
sub
cmp
aaa
aaa
sub
outsl
es
xor
xor
inc
jge
dec
outsb
jo
push
mov
hlt
cmp
push
dec
sbbb
add
lds
loopne
pop
dec
and
aam
mov
jge
xchg
adc
imul
outsb
and
in
and
fisttpll
jl,pn
call
scas
pop
inc
outsb
arpl
push
outsl
add
cld
test
and
xor
les
pop
cs
add
pusha
subl
mov
lds
inc
pxor
aas
add
add
sub
or
adc
adc
call
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
pushl
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
or
aad
pusha
dec
push
inc
push
out
sub
jg
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
pushw
imul
xchg
jo
jb
jne
ja
jns
jnp
jge
jg
cmp
xor
add
enter
pop
leave
inc
repnz
add
test
add
addl
push
sbb
add
xchg
sub
mov
sub
add
add
push
and
push
add
add
sub
ja
jmp
cmpsl
or
adc
aaa
and
inc
pop
inc
mov
out
and
call
add
addb
xchg
lea
xchg
xchg
xchg
xchg
call
pushf
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
pushl
mov
rol
enter
int3
int
iret
rcl
rcl
aam
call
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
testb
cmp
sti
cld
std
jmp
add
inc
adc
and
test
push
popa
push
and
push
add
ljmp
mov
push
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
mov
call
xchg
outsb
inc
bound
jb
jo
or
dec
leave
mov
outsl
add
inc
jne
push
gs
arpl
jbe
adcl
xchg
jb
js
je
mov
pop
popf
jg
insb
insl
add
xor
jb
add
add
sub
mov
je
insl
and
jb
or
bound
push
push
and
inc
hlt
xor
dec
add
inc
and
push
ss
daa
decb
adc
and
jo
imul
addr16
sub
je
gs
jo
and
insb
outsl
subb
inc
and
bound
pop
or
imul
or
cltd
fldcw
and
popa
arpl
daa
mov
jne
pop
xor
jl
fcmovb
and
insl
push
xchg
or
pop
aas
xor
pop
rcrl
rolb
in
adc
stos
out
insl
bound
fdivrp
push
call
and
jbe
dec
mov
js
push
rcrb
popa
add
or
fmuls
xor
bound
and
je
pushf
cmp
dec
in
ds
cmpl
imul
jb
cmp
insb
push
je
outsl
mov
inc
cmpl
imul
dec
sub
arpl
cmp
fwait
orb
pop
dec
popa
sub
sti
outsb
pusha
push
mov
add
inc
xchg
lret
push
sub
imul
xor
int3
or
push
loope
prefetch
test
andl
cmp
push
ffreep
shrb
push
loopne
and
xor
shll
hlt
adc
mov
gs
cwtl
cmp
aaa
ja
inc
cmpsb
sub
pop
mov
fs
pop
cmp
jbe
inc
jbe
je
xchg
push
mov
xchg
mov
mov
arpl
jo
scas
xor
push
or
arpl
push
rcrl
jo
bound
mov
inc
aaa
insl
ds
xor
ljmp
sub
fs
jne
or
pop
or
sub
rclb
mov
mov
nop
xor
jbe
xor
cmp
pop
add
push
xorl
cmp
xor
and
mov
lret
cmp
addr16
jae
xor
push
pusha
jo
rorb
stos
xor
cmp
push
sub
xor
pusha
push
imul
dec
xchg
mov
and
add
cmp
ds
insl
mov
lods
vpmaxsw
dec
and
dec
cmp
pusha
aaa
arpl
out
xchg
out
add
lea
mov
cs
xchg
xchg
adc
adc
lock
pop
jbe
and
jl
dec
bound
mov
js
ficoml
insb
movsb
and
gs
arpl
inc
xor
imul
dec
dec
lods
ret
push
or
daa
pop
dec
mov
sbb
jns
mov
stos
add
push
and
fisubs
fsub
test
xor
mov
add
jo
jno
sub
mov
pop
pusha
inc
jbe
push
pusha
jno
mov
xchg
cwtl
arpl
and
xor
mov
insb
cltd
popl
cmp
gs
and
push
and
or
jmp
pop
test
cmp
pop
pop
push
push
jae
pop
in
or
cmp
cmp
sbb
gs
addr16
mov
das
pop
ja
inc
loopne
push
mov
inc
or
xchg
inc
push
push
push
push
dec
negl
dec
push
jne
repnz
je
popa
mov
pop
pusha
cmp
fildll
mov
jo
xorl
adc
cmp
fists
outsl
xor
inc
in
xchg
lods
sbb
popa
insl
or
fadd
mov
sub
push
lea
jmp
mov
outsl
xchg
daa
xchg
in
mov
test
cmp
cmp
cmp
cmp
push
das
push
mov
sub
inc
jl
push
addr16
stc
sahf
push
jle
sub
sub
push
lahf
cmpsl
cltd
jnp
cmp
add
add
ds
jmp
addr16
sub
sub
sbb
aaa
push
mov
sbb
push
cmp
cmp
rcrl
push
scas
push
test
fs
jb
dec
cltd
imul
push
fidivrl
js
in
cld
sbb
adc
insb
mov
ss
out
out
jo
sub
fucomip
jo
out
sub
fdivrl
enter
out
mov
cwtl
nop
cmp
stc
mov
stos
mov
jns
rep
push
jo
push
iret
jnp
pusha
push
pop
pop
push
push
iret
repz
inc
inc
cmp
xor
cmp
repz
sub
sbb
cmp
repz
or
out
ds
add
cld
mov
jns
lock
call
sahf
out
fcom
ror
enter
out
mov
pushf
test
cmp
inc
and
mov
push
les
iret
mov
fiadds
call
iret
rep
movsb
cwtl
mov
ds
dec
and
mov
jns
mov
sbb
mov
ja
cmpsl
add
cmp
cmp
add
jne
dec
fs
dec
and
jns
add
das
shrb
xor
dec
push
inc
test
or
or
mov
mov
sub
jne
movsb
insb
iret
mov
fisttpll
cmp
dec
ljmp
push
pushf
mov
mov
jae
cmp
jg
jae
and
inc
popa
mov
mov
adc
jb
daa
jmp
clc
sbb
mov
and
cmp
pushf
outsl
pop
dec
inc
aas
add
pop
ja
and
mov
push
cmp
pop
mov
jb
dec
sbb
xchg
ret
ss
push
hlt
push
inc
arpl
push
sub
daa
pop
pop
test
xchg
inc
outsl
js
or
push
inc
push
loop
dec
mov
mov
insb
enter
cltd
aam
xor
fcmovb
push
dec
fs
xor
jb
mov
xor
sbb
and
aas
icebp
das
add
inc
add
ja
movsl
dec
data16
mov
mov
das
andb
aas
mov
xlat
sbb
les
rolb
in
das
inc
sbb
sub
aas
jle
mov
add
pushf
add
les
lahf
das
and
sahf
mov
daa
aas
xorl
subps
mov
ja
nop
daa
add
xor
push
lods
pop
inc
mov
repz
nop
xchg
mov
faddl
repnz
in
clc
mov
imul
adc
sahf
add
push
dec
lds
mov
ja
hlt
js
inc
sahf
or
nop
or
stc
push
cmp
insb
mov
imul
push
shlb
lcall
sbb
inc
pop
fidivrl
out
andb
pop
xlat
loopne
ljmp
cmp
lods
arpl
ja
dec
jmp
cmp
scas
add
dec
mov
and
stos
push
jbe
jnp
jg
faddl
shrl
add
aaa
das
inc
es
adc
dec
dec
and
push
in
mov
inc
jecxz
inc
iret
push
dec
stc
pop
dec
add
dec
sahf
out
add
add
leave
mov
fildl
outsl
mov
jl
pop
sahf
loopne
push
pop
inc
enter
in
jne
in
enter
insb
inc
cmp
ret
and
mov
pushf
aaa
enter
jmp
fbstp
ja
mov
mov
cmp
dec
decb
cmp
popf
sahf
push
pop
scas
ret
inc
mov
cmp
fldcw
rorb
out
sarl
fsubs
sqrtps
jne
sub
inc
pop
pop
adc
mov
fs
daa
je
pop
xor
test
mov
daa
or
mov
ja
dec
sub
jg
ds
fstpl
and
inc
mov
leave
dec
pop
xor
and
scas
sbb
mov
fmuls
sbb
add
cmp
test
and
mov
and
in
inc
rcrl
pop
loopne
aas
cmp
inc
cs
xor
ss
je
xchg
mov
inc
pop
fldenv
jg
sbb
adc
pop
inc
enter
jns
dec
mov
inc
add
cmpsl
or
push
aas
or
daa
xchg
push
pop
pop
bound
rorb
popf
dec
push
ds
cmpsl
cmp
jb
cmpl
int
or
dec
lahf
jl
int
aam
in
data16
sub
dec
loopne,pt
mov
stc
loopne
enter
pop
add
cltd
mov
lcall
sbb
mov
pop
inc
inc
xor
sub
fdivrs
xchg
adc
and
es
push
lahf
cwtl
or
rclb
dec
and
addr16
add
arpl
imul
xchg
push
stc
push
and
or
adc
or
and
push
es
pushl
sub
xor
add
and
adc
jae
push
daa
and
jp
aas
sbb
cmpsb
sti
dec
xchg
in
addl
loopne
pop
in
dec
xchg
cmc
mov
fldenv
pushl
inc
xchg
cs
int3
stos
ja
lods
mov
les
xor
pop
mov
jmp
call
jle
addr16
cmpsb
js
inc
sbbl
sub
repnz
add
pop
sbb
dec
dec
lcall
fs
inc
jo
loopne
push
divb
xor
fisubs
insb
in
inc
je
push
cs
push
insb
push
fwait
out
inc
je
inc
arpl
push
lcall
xor
push
push
pusha
aaa
fistpll
push
lods
mov
mov
iret
insl
sub
jno
imul
out
pusha
push
or
pop
es
enter
das
xchg
sub
stos
outsl
mov
data16
dec
lahf
mov
dec
xor
pause
scas
mov
jae
push
rorl
insl
dec
mov
outsl
cmp
adc
or
aaa
and
inc
adc
sub
sti
gs
pop
xor
adc
push
sbb
mov
dec
mov
push
imul
pop
cmp
add
jg
and
and
or
push
cmp
xor
sub
add
pop
inc
es
add
jg
and
lods
push
hlt
addr16
lods
mov
jmp
mov
pushf
cwtl
shll
pusha
pop
movsb
mov
insl
jae
dec
adc
jmp
mov
push
stc
adcl
push
test
test
and
scas
cld
dec
sti
jnp
adc
sbb
les
sbbb
push
loopne
addr16
jg
stc
ja
sbb
enter
add
jb
les
dec
data16
add
stc
push
call
loopne
push
mov
push
jg
out
xor
xor
sbb
in
in
xchg
imul
repz
pop
scas
pop
pushfw
lods
addl
pushl
dec
pop
or
sub
in
adc
mov
fidivs
push
pop
ret
ja
inc
leave
or
out
stc
inc
adc
inc
xchg
ss
mov
stc
mov
out
mov
push
outsb
imul
adc
mov
sub
scas
jb
xchg
mov
sub
dec
pop
in
mov
and
ss
dec
jbe
mov
out
jae
add
stc
jg
adc
arpl
outsl
dec
push
popa
adc
leave
inc
in
xor
lret
fstpt
fcoms
inc
cmp
fcompl
data16
fisttps
adc
pop
add
int
call
sbb
cmp
addr16
jae
fwait
xor
jne
xchg
lds
add
paddd
imul
adc
les
andb
incl
mov
out
push
xor
push
xor
into
push
xchg
jns
adc
out
in
xor
loop
dec
inc
sbb
mov
dec
dec
fidivrl
dec
add
xor
fisttpl
adc
xchg
sti
or
out
loopne
jbe
xchg
ja
cmp
fistps
cs
sbb
sbb
outsl
xor
jns
adc
cmp
pop
cld
aas
add
adc
out
sbb
lcall
out
adc
out
out
push
les
push
ljmp
jg
ljmp
and
das
dec
adc
xchg
push
out
push
jae
sub
test
sbb
fcomip
incl
das
inc
dec
test
sub
je
adc
pop
mov
adc
cmp
repnz
jge
mov
pushf
mov
out
cmc
lcall
sbb
pop
push
adc
sbb
add
pop
jg
add
fmuls
dec
jge
int3
aas
rolb
outsl
jp
cwtl
ljmp
lret
pop
xor
dec
mov
push
cld
aaa
lcall
pop
clc
ss
mov
int
outsb
jbe
shrl
cli
scas
aas
adc
fldt
mov
stos
lahf
mov
push
loop
adc
es
mov
fs
dec
icebp
add
xor
jbe
rolb
inc
sub
stos
xor
inc
adc
mov
mov
cltd
xchg
mov
pop
aam
gs
cmp
loopne
jbe
sarl
loop
mov
incl
pusha
lret
mov
fwait
sub
cmpsl
mov
sub
cmpsl
sahf
lahf
stos
mov
mov
addr16
mov
stos
orl
imul
fbld
test
addr16
ss
in
mov
insb
icebp
xchg
mov
or
into
and
or
jmp
lahf
int3
xor
outsl
bound
lret
imul
push
inc
mov
sub
lcall
sub
insb
adc
or
call
shll
out
je
lea
push
add
add
and
cmp
jg
mov
loop
push
push
dec
mov
loop
and
sarl
outsl
out
cmpl
filds
sub
jg
cmp
imul
lds
dec
idiv
pop
decl
jno
mov
pop
push
xrelease
orl
cmpl
push
loopne
icebp
mov
mov
push
ds
push
mov
and
repnz
loope
mov
push
dec
fs
sahf
push
cmpsl
lea
clc
into
lahf
je
push
and
mov
jmp
outsl
ja
gs
sub
xor
add
add
in
inc
enter
sahf
xlat
test
icebp
push
sbb
ja
test
int
jno
fbld
in
fiadds
cs
sub
ret
iret
push
adc
insl
stc
jg
ret
ret
inc
iret
inc
lcall
push
sti
jno
push
cmp
dec
iret
testl
pop
mov
sti
mov
mov
fldcw
push
dec
fcmovbe
dec
divl
je
adc
xlat
inc
mov
sbb
lods
push
pushf
jl
imul
in
dec
ficoms
mov
jo
push
cmpsl
repz
mov
out
repz
gs
scas
mov
dec
dec
test
dec
incl
out
add
mov
push
ss
ret
pop
hlt
cltd
xchg
and
or
test
lcall
fwait
pop
add
adc
jg
push
icebp
xor
cmp
sbbl
pushl
loopne
faddl
fstps
sbb
das
adc
mov
movsb
sub
aas
sahf
js
sub
mov
aaa
mov
fs
mov
cmp
cmp
imul
xor
inc
ljmp
dec
dec
jbe
inc
ds
mov
mov
mov
jg
dec
jecxz
jb
insl
and
mov
ljmp
dec
lods
dec
pop
mov
mov
popl
mov
cmp
dec
mov
das
jnp
in
adc
out
std
mov
jl
popf
add
adc
loopne
in
or
stos
push
mov
imul
ret
pop
pop
repnz
pop
nop
adc
sbb
dec
adc
iret
mov
adcb
js
call
add
add
cmp
clc
or
inc
mov
sahf
jne
dec
mov
xor
xchg
sbb
adc
lods
aaa
dec
into
mov
adc
pushl
inc
jae
lahf
xor
mov
jbe
movsl
js
mov
mov
mov
in
sbb
aas
out
xor
mov
sub
xor
fistpl
cli
push
inc
sbb
push
popa
aas
xor
cmp
out
jb,pn
adc
es
pop
pop
adc
les
jo
cmp
fistpll
sahf
sub
or
inc
in
cmp
aaa
mov
call
mov
rorb
mov
inc
int
outsl
clc
outsl
dec
dec
stc
push
pop
and
adc
and
lods
inc
aaa
icebp
incl
ds
bound
test
inc
add
add
fistps
mov
stos
dec
jns
jmp
jns
fildll
frstor
sbb
daa
adc
mov
mov
lret
jmp
clc
jmp
inc
pop
icebp
jle
rep
ret
repz
push
jmp
loopne
inc
aad
hlt
shrl
in
test
adc
pop
dec
lahf
imul
mov
cmc
or
imul
scas
inc
fmull
mov
cmp
mov
pop
jp
sub
dec
fildl
pusha
arpl
ljmp
push
jb
mov
jno
call
mov
outsb
pop
xlat
cs
jns
lods
jbe
cli
ljmp
pop
lea
mov
out
mov
and
aas
je
mov
fbld
enter
fistps
inc
js
test
icebp
decl
mov
xor
outsl
je
adc
adc
jp
jo
decl
push
clc
jno
add
bound
cmpsb
inc
ljmp
arpl
xor
jb,pt
adc
push
ljmp
xchg
sub
push
pop
loopne
insb
and
mov
or
pushl
or
push
jge
and
dec
pop
icebp
jmp
testb
lret
add
xlat
push
cmp
fs
sbb
sub
add
popa
cmp
decl
punpcklwd
js
and
push
in
ss
mov
push
addr16
jae
loopne
call
imul
sbb
inc
add
or
ljmp
mov
inc
jg
push
testl
pop
xor
outsb
jnp
dec
pop
xchg
jle
push
das
push
int3
shrb
insb
add
dec
cld
jno
fiaddl
rcrb
pop
add
mov
push
dec
mov
outsl
cmp
aaa
inc
dec
test
addr16
or
fs
ljmp
jae
xchg
mov
sbb
mov
jbe
xor
and
lsl
mov
repz
inc
ja
nop
jl
mov
inc
imul
push
gs
inc
sbb
cmp
mov
scas
inc
shll
scas
mov
or
pop
sbb
xor
das
jecxz
into
cmp
add
jg
push
dec
call
cmp
mov
or
maxps
and
scas
imull
mov
movsb
sti
and
dec
mov
xchg
push
dec
lods
daa
jg
xchg
data16
ljmp
cs
mov
bound
adc
in
mov
ljmp
out
dec
int3
sbb
pusha
mov
dec
rcr
imul
pop
cmp
in
sbb
push
sbb
daa
xor
ret
mov
mov
es
gs
adc
and
xor
pop
mov
lret
mov
add
mov
pusha
cli
call
add
mov
mov
bound
inc
fmuls
push
stos
test
lahf
pushl
sti
sahf
cmp
push
mov
aad
dec
mov
dec
outsl
adc
iret
aas
pop
push
out
jmp
mov
out
shrb
decl
into
fildl
arpl
add
sub
and
iret
or
adc
mov
jg
movb
imul
push
inc
pop
jne
push
xchg
pop
pop
into
dec
dec
jmp
jmp
jmp
inc
dec
out
push
jl
pusha
int3
pop
imul
mov
and
pop
insb
dec
mov
pushl
jmp
jbe
mov
in
mov
decl
cli
add
pop
and
mov
pusha
dec
dec
movb
dec
jns
mov
pop
sbb
mov
and
inc
pop
loope
sub
fisubs
in
dec
cmp
lock
decl
jb
movl
inc
sbb
lret
adc
mov
int3
xlat
imul
mov
jae
rorb
fwait
out
in
xchg
xlat
inc
rcr
pop
outsl
lret
inc
aad
dec
into
mov
mov
sahf
sbb
mov
push
jbe
arpl
mov
js
jmp
imul
inc
mov
sub
lcall
cwtl
push
pop
loop
in
incl
test
jns
aaa
push
sub
mov
insb
aas
xor
push
fndisi(8087
push
in
int
xchg
ss
and
aaa
push
loope
mov
jne
std
dec
push
iret
imul
dec
int3
mov
push
jecxz
jbe
push
add
mov
dec
mov
pop
mov
push
xor
xor
int3
mov
dec
iret
xchg
decb
int3
dec
sub
xchg
mov
imul
jns
daa
inc
push
mov
inc
jbe
data16
jge
xor
dec
cmp
out
mov
out
call
incl
outsb
pop
sbb
cmp
pop
xchg
jmp
lds
dec
push
aaa
dec
jb
dec
jae
mov
lret
xchg
data16
insl
incl
std
out
and
adc
inc
adc
cmpl
xchg
push
mov
jo
cs
mov
cwtl
mov
insb
inc
inc
jp
lods
pop
bound
push
push
pop
cmp
cmp
inc
jne
add
and
lret
repz
fdivr
or
sbb
pop
xor
das
dec
es
sub
pop
jnp
pop
clc
xchg
inc
dec
ds
add
iret
test
sbb
adc
lock
scas
nop
divl
imul
pop
push
ja
add
and
pop
icebp
jns
mov
push
mov
outsb
fwait
mov
scas
xchg
aas
scas
adc
cmpsb
or
mov
mov
ds
lds
popa
popa
pop
mov
test
call
cld
push
push
es
mov
and
cmp
cmp
call
pop
mov
aam
xchg
xlat
push
inc
insl
mov
loope
andb
xchg
inc
dec
dec
out
mov
pop
and
cwtl
test
movb
add
cmovae
arpl
adc
xor
jl
lea
clc
sbb
mov
jl
insl
outsb
fs
jle
jns
sbbb
or
mov
jg
cld
cmp
icebp
dec
xchg
fs
pop
std
sub
mov
push
dec
adc
and
cld
aas
dec
aam
lea
decb
inc
mov
jb
dec
inc
outsl
inc
ds
out
lcall
rolb
lods
mov
ja
fwait
cmpsb
pop
jg
scas
fcomps
dec
stc
data16
mov
sbb
in
out
sar
ljmp
push
inc
dec
arpl
popa
jo
pop
mov
aas
xchg
and
jne
push
cmp
fs
xor
aas
sub
push
decl
add
call
nop
jae
dec
adc
xchg
std
fsubrl
stc
cmp
sahf
addr16
outsl
gs
mov
ret
out
cli
aas
ds
aas
enter
cmc
inc
jb
inc
dec
mov
aaa
insb
js
sbb
cmp
and
sub
test
push
sub
fwait
lods
lods
cwtl
mov
dec
pop
dec
xchg
jns
or
dec
mov
jl
insb
push
cmp
and
or
add
xlat
movsb
sub
in
jne
xor
push
iret
and
pop
imul
and
aaa
clc
cmp
imul
push
imul
pop
mulb
fistpl
int
nop
ficomps
mov
push
mov
dec
out
jle
dec
cmpsb
dec
mov
bound
mov
aad
push
xchg
test
inc
out
repz
push
cld
mov
cwtl
fwait
xchg
pop
jbe
scas
stos
push
inc
popa
mov
call
popa
xor
lret
or
xchg
loop
dec
ljmp
addr16
mov
adc
stc
sub
bound
sub
push
sub
fdivs
loopne
or
jmp
dec
aas
dec
cmp
notl
cld
mov
push
push
arpl
inc
pop
adc
out
in
sbb
inc
xchg
into
call
fwait
scas
iret
sub
test
dec
mov
inc
test
sub
add
data16
sbb
sbb
andl
out
add
ffree
push
loopne
xor
and
insl
pop
sub
pop
std
fdivr
scas
inc
push
in
cmpsb
push
out
cmp
outsl
out
mov
push
sti
mov
lret
mov
call
pop
es
out
dec
push
adc
add
adc
jmp
jmp
mov
fwait
mov
jnp
js
test
imul
mov
pop
add
push
ja
and
leave
mov
inc
adc
mov
xchg
jns
les
stos
gs
hlt
insl
inc
jecxz
outsb
lret
out
ret
std
mov
int
into
or
sbb
or
push
sbb
mov
lcall
pusha
fldt
daa
xchg
ss
shll
dec
fnstenv
dec
pushl
scas
xor
push
sub
xbegin
mov
outsl
and
inc
fwait
push
test
push
les
out
sahf
push
pop
fsubrs
push
pop
aas
lahf
xchg
jecxz
fidivrl
mov
leave
fdivs
and
sbb
cld
out
insb
roll
enter
sub
mov
add
std
push
ret
adc
es
pop
out
sub
and
stc
arpl
dec
ss
pop
movsb
or
xchg
lret
mov
mov
cmc
incl
cmpsl
sub
push
pop
pop
xchg
imulb
xchg
call
add
jbe
pop
mov
enter
data16
mov
cmpsb
mov
fnstcw
cmp
loop
adc
push
repz
dec
addr16
insl
sarb
pop
divl
call
cld
pushl
mov
jp
sub
mov
dec
sbb
xor
jnp
ds
sbb
decl
dec
push
jbe
or
popf
xchg
pop
insl
dec
into
and
orb
addr16
jne
es
add
sbb
scas
mov
pop
hlt
je
ds
jae
jmp
mov
imul
in
mov
adc
mov
lods
leave
outsb
insb
outsb
ficompl
sub
inc
dec
fcmovnb
mov
pop
psubd
sbb
std
push
pusha
push
mov
or
lock
out
clc
pop
jp
imul
dec
les
es
and
dec
test
aas
cwtl
jle
mov
push
aas
jle
adc
jmp
dec
xor
adc
pusha
cmp
xor
mov
aas
imul
je
sbb
decl
fisubs
fidivs
jno
outsb
adc
pusha
outsb
mov
xor
or
ljmp
movsl
test
nop
add
jg
pop
mov
xchg
cwtl
ret
mov
dec
fcomip
mov
outsb
movsl
and
les
jns
in
std
or
decl
movb
and
mov
adc
stos
push
lods
popa
jae
add
ljmp
pop
sbb
shrb
stos
daa
pop
dec
inc
ljmp
push
or
and
or
es
mov
nop
sub
hlt
aaa
loop
jg
or
cmp
cmp
lahf
decl
insl
pop
scas
mov
sub
push
adc
aaa
jle
pop
popf
fistpl
dec
fcomip
dec
test
lcall
les
gs
push
popa
icebp
sub
int3
inc
shlb
repz
imul
xchg
jne,pn
movsb
jmp
and
cmp
cmp
mov
mov
outsb
subb
daa
mov
jg
dec
pop
insb
dec
aas
xchg
push
add
xchg
pusha
scas
sub
mov
shrl
pop
aad
cmp
jne
add
pop
xchg
out
imul
push
leave
lea
jae
lods
jg
mov
adc
repz
mov
bound
xchg
out
arpl
sub
call
fwait
sbb
arpl
pusha
xor
xchg
pop
jp
repnz
inc
push
jmp
inc
pop
dec
inc
lea
out
mov
imul
test
mov
cmpsb
in
mov
xlat
jg
mov
mov
jl
mov
cltd
mov
arpl
push
stos
ret
aas
push
lea
push
jecxz
incb
inc
fildl
jnp
dec
in
cmp
inc
add
les
and
jecxz
arpl
xchg
aas
mov
cmpsl
jnp
ja
decl
or
in
sbb
mov
rcrl
mov
sub
jg
mov
je
scas
stos
int3
mov
cmpsl
sbb
sti
lahf
adc
cwtl
shll
ret
imul
jae
xor
or
lret
pop
push
incl
outsl
dec
mov
pop
js
stc
push
addr16
mov
dec
lds
push
fimuls
test
std
dec
ds
rol
xadd
icebp
scas
sub
or
popa
insl
pop
in
call
cld
sub
inc
es
push
in
jle
xor
cmp
outsb
push
scas
cmp
adc
adc
sti
aam
fnsaves
shlb
jle
out
mov
and
out
inc
into
inc
xor
mov
inc
pop
outsl
adc
fistl
push
pop
mov
jl
pushl
cld
in
add
adcb
loope
push
ljmp
mov
std
pop
les
sub
movsb
cmp
cmp
xchg
inc
stos
adc
gs
add
sbb
out
jns
mov
add
adc
push
sar
inc
aaa
inc
push
fnstsw
xchg
dec
jns
dec
inc
add
pop
out
cmp
push
inc
mov
cmpsb
xchg
pop
data16
jbe
pop
incl
push
das
call
ljmp
adc
das
icebp
jg
out
mov
or
dec
inc
cmpsb
xchg
xor
sar
lcall
je
pop
sbb
gs
shlb
add
loope
mov
mov
arpl
daa
inc
sbb
out
clc
andb
imul
cwtl
add
add
fcomip
pushl
and
lods
mov
fcoml
pusha
test
pusha
out
xchg
fwait
ds
sbb
aaa
pop
add
jmp
cmpsl
mov
movb
scas
push
inc
popa
aad
cmp
ficoms
cmp
mov
push
inc
push
dec
ss
add
jb
mov
aaa
incb
inc
add
lahf
or
cmp
aas
out
addr16
sbb
int3
test
dec
movsb
fldt
dec
or
adc
js
push
test
jo
clc
fcomip
ret
mov
xchg
push
cwtl
jae
cmp
mov
incl
fcompl
inc
pop
imul
or
test
push
data16
push
jno
sbb
push
imul
movl
xor
cmp
lret
movsb
jnp
mov
arpl
nop
gs
pop
test
incl
sub
xchg
popa
dec
into
sub
mov
xor
addl
cmovnp
adc
mov
jg
pop
aas
ja
push
mov
xchg
pop
and
cmpsl
xchg
es
shlb
call
outsl
push
in
jb
dec
call
data16
xchg
xor
mov
in
and
test
and
xor
jp
cmp
push
and
test
cmp
mov
push
pop
in
addr16
call
push
push
dec
jno
add
adc
addb
into
mov
outsl
es
jg
cltd
sbb
adc
pop
xor
xor
fs
inc
incl
mov
sub
push
sub
sub
cmp
stos
cmpb
and
das
xor
jg
ja
pop
dec
xor
cmp
out
dec
andb
xchg
cwtl
repnz
ljmp
adc
icebp
inc
xchg
je
mov
inc
fistps
cmp
rolb
test
gs
in
jg
cmp
fsts
cmp
int3
add
mov
repz
inc
sub
mov
scas
pop
popa
data16
pushl
cmpsb
out
inc
fsubs
ds
adc
and
xchg
and
mov
stc
decl
xchg
xchg
fwait
dec
fildl
pop
pop
cmc
pop
and
cli
mov
add
imul
cmpsb
call
and
xchg
dec
nop
mov
and
mov
pop
incb
lahf
arpl
or
push
and
popa
sub
in
add
dec
adc
pop
push
dec
enter
rolb
ds
cld
call
lea
flds
arpl
sub
outsb
xor
ja
enter
xchg
or
out
push
ljmp
push
xlat
test
movsb
push
popa
sbb
in
sbb
ds
add
jg
inc
aas
dec
cmpsb
bound
fldenv
jno
xchg
jb
or
cltd
ret
aad
mov
add
popa
pop
outsb
fwait
push
push
aaa
jge
jo
cmpb
in
dec
jns
repnz
xchg
sbb
push
gs
roll
jl
call
sbb
clc
stos
mov
int
xor
pusha
adc
fwait
inc
jmp
pushl
add
push
lret
fwait
jnp
pop
frstor
dec
sbb
mov
xchg
pop
jo
fldcw
push
cmp
lcall
imul
pop
lds
sub
mov
jg
pop
js
pop
adc
cs
test
mov
decl
out
adc
in
or
pop
push
stos
dec
jnp
adc
icebp
mov
jg
bound
mov
pop
sbb
lret
jecxz
aaa
add
fstpt
insb
jns
adc
mov
jmp
jg
sub
mov
mov
xchg
aas
push
mov
push
mov
xor
mov
cmp
mov
dec
repnz
mov
jmp
sbb
cmp
insb
leave
scas
mov
xor
ret
pop
cmpsl
or
ljmp
dec
insl
call
jo
aas
inc
outsb
mov
nop
mov
jg
cmc
jno
call
ljmp
int3
and
sbb
mov
loope
and
fistl
push
in
inc
icebp
mov
add
inc
mov
pushf
iret
adc
mov
adc
mov
lcall
cs
xor
push
sbbl
push
push
xor
adc
push
sar
ja
ret
stos
out
cmp
push
int
je
data16
das
rorb
mov
mov
push
mov
cmpl
ss
jmp
sub
psllw
cmp
ljmp
adc
lcall
iret
xchg
data16
jnp
push
fnstsw
sarb
push
fsubrs
adc
mov
pop
lret
cltd
jbe
fstpl
sbb
pop
std
lcall
test
push
cmp
inc
decb
or
xchg
ja
dec
fbstp
shlb
xchg
jl
xor
push
lret
fildl
inc
lret
ljmp
push
cli
and
idivb
dec
test
sub
push
dec
pushl
cmp
mov
cmpsb
dec
pop
lret
lcall
dec
insb
std
mov
adc
pop
push
sbb
stos
cmovg
lcall
repz
out
arpl
sarl
pop
imul
mov
insb
fwait
sbb
add
sbb
jmp
or
push
push
inc
popa
fisttpl
pop
lds
popa
inc
insb
xchg
pop
mov
std
mov
adc
or
add
sub
mov
jae
and
pop
dec
jns
imul
push
dec
fimull
and
lds
outsl
mov
mov
cmpsl
inc
lahf
pop
dec
mov
dec
add
ds
xor
out
push
inc
pop
xchg
rorb
clc
inc
ss
push
fmuls
jo
push
inc
xor
test
cli
incl
push
test
inc
icebp
dec
pop
add
sub
cmp
out
mov
fadds
cmpsb
pop
jg
mov
lret
stos
inc
stc
fs
call
add
loopne
adc
scas
xor
enter
push
mov
in
sub
shlb
xchg
arpl
cmp
mov
loope
and
adc
test
or
add
or
scas
xchg
mov
or
aas
sbb
aaa
aaa
in
adc
inc
scas
addr16
dec
decl
inc
repnz
loope
inc
dec
aad
cmp
or
fs
sbb
dec
sar
cs
loop
jbe
or
ds
es
cld
decl
clc
add
xchg
pop
mov
ror
es
mov
push
inc
pushf
decl
fisubs
push
clc
mov
pop
lret
fcmove
xchg
mov
lds
cld
fsubrs
cmp
cmp
jl
pop
xchg
xor
pop
ja
xchg
int3
push
push
stc
add
inc
push
xchg
sbb
das
dec
lods
aaa
roll
les
outsl
clc
fildl
sub
sub
lock
sbb
scas
jnp
clc
adc
cld
ljmp
jb
mov
add
out
dec
in
mov
and
adc
in
fs
ffreep
or
fs
arpl
lods
loop
dec
notl
ljmp
in
jae
outsb
and
cs
pop
dec
adc
ljmp
daa
dec
jl
push
ss
push
jmp
stc
daa
dec
lret
es
mov
repz
fdivl
dec
ljmp
dec
in
orb
ret
mov
push
or
mov
sub
ret
pop
xor
aaa
cltd
dec
loope
aam
push
scas
dec
push
inc
lahf
add
jmp
stos
xor
mov
push
dec
sbbl
in
sub
in
arpl
mov
add
jns
adc
pop
push
addr16
gs
push
je
fdivrp
mov
out
or
test
or
lds
repnz
movsl
rolb
push
das
and
gs
lahf
inc
clc
jmp
hlt
inc
push
cmpsl
mov
arpl
mov
lahf
test
sbb
inc
or
xchg
in
jle
cmp
xor
pushl
pop
jmp
iret
sbb
and
aaa
fwait
add
pop
addr16
fstpt
push
insl
sarl
jmp
out
or
cmp
imul
and
pop
xlat
push
jecxz
push
jno
cmp
rcrl
test
ret
ret
dec
pop
iret
sbb
fldt
sbb
gs
ret
es
aaa
insl
sti
cmp
jbe
lock
push
in
adc
call
gs
push
push
je
insl
sbb
or
inc
aam
push
mov
mov
sub
xchg
cli
ljmp
std
andl
and
mov
icebp
mov
lahf
fwait
daa
dec
pcmpgtb
call
jp
ficompl
addr16
outsb
mov
dec
jb
movsl
loopne
mov
hlt
and
or
in
add
cld
inc
adc
dec
imul
push
dec
into
mov
ss
into
and
push
nop
xchg
outsb
jg
pop
ds
push
dec
inc
mov
dec
popa
adcb
inc
xchg
mov
lcall
push
pop
jne
nop
out
addr16
das
shll
xor
inc
test
jo
das
mov
loope
sarl
cmp
push
mov
jae
hlt
insb
pop
mov
in
sti
mov
incb
mov
jnp
mov
dec
push
mov
jae
out
pop
in
into
mov
xchg
lret
push
fstl
inc
jnp
idivl
fiadds
inc
outsl
gs
lcall
jle
mov
loop
jle
vpmadcswd
iret
movsb
xor
pushf
mov
xor
ja
mov
cmpsl
test
mov
mov
xchg
add
in
int
and
xchg
test
call
fs
jmp
cwtl
repz
insb
or
daa
popf
jno
ds
sub
test
inc
inc
dec
push
add
adc
cli
mov
int3
or
add
xor
jbe
cmpb
dec
out
test
cld
jl
or
dec
mov
xor
in
movsl
or
pop
push
dec
push
mov
add
jb
xor
mov
call
cmp
test
adc
push
ja
stos
ds
add
add
es
dec
fsubl
loopne
je
js
das
push
cld
jg
cmp
adc
cld
and
jno
add
dec
xchg
sbb
lcall
ret
ss
dec
scas
imul
cmp
aaa
ret
ret
pop
sub
and
das
adc
aas
mov
stos
emms
push
shrb
push
push
out
lret
xor
adc
lcall
push
cltd
jmp
cmp
adc
jl
mov
repz
lahf
test
pusha
aaa
shll
cmp
rcll
add
lods
lcall
inc
pop
pop
lret
les
sahf
sbb
pop
cmc
add
add
lret
push
mov
enter
loopne
loop
cs
add
ljmp
pusha
out
push
scas
mov
cmp
int
ljmp
or
or
cmp
icebp
scas
cltd
shrb
fs
inc
cmpsl
xor
push
rolb
bound
fistl
ja
xchg
ds
sarb
and
mov
je
mov
mov
push
mov
jmp
inc
fstpl
lret
jno
lcall
push
push
cld
mov
sbb
xor
adc
mov
test
scas
jle
mov
push
dec
out
xchg
adc
rcrb
mov
inc
fistps
jmp
dec
loop
push
sbb
sahf
xor
sub
popa
ja
jno
scas
push
inc
out
incl
and
adc
stos
pop
icebp
call
or
jno
or
dec
mov
leave
sti
xor
adc
sbb
hlt
jl
out
les
xor
cli
in
clc
inc
in
add
out
bound
push
scas
add
push
mov
jne
cld
outsb
iret
dec
call
push
inc
cmpsl
cmpsl
jnp
ja
cmp
pop
ficomps
imul
std
xor
pop
pop
icebp
lret
fisubl
roll
and
xchg
sbb
sub
scas
pushl
sub
mov
jp
test
add
cs
into
add
xchg
movsl
test
icebp
cmp
jle
mov
inc
pusha
inc
dec
out
adc
pusha
push
xor
mov
jo
mov
fsubrl
in
sbb
daa
cltd
jae
dec
jns
mov
mov
arpl
jbe
dec
mov
pop
incl
daa
divl
ja
sub
das
add
das
mov
popa
inc
jns
inc
in
shl
inc
rcr
or
lret
push
cmp
push
int3
mov
data16
in
adc
jmp
out
and
loopne
pop
dec
xor
pop
ret
push
inc
push
mov
inc
xchg
push
out
jo
lret
pop
inc
sarl
xor
push
jb
movsb
or
dec
jp
out
daa
cmc
aaa
sar
inc
inc
dec
fstl
pusha
push
sti
and
insl
push
fcomps
jns
ret
lcall
jne
cmp
jbe
jp
cmp
jle
mov
dec
out
add
aaa
pop
into
mov
mov
les
ja
mov
lahf
sbb
add
xor
mov
jmp
xor
pusha
into
pop
push
mov
adc
mov
sarl
lds
or
mov
mov
je
inc
lret
sub
push
fwait
aas
mov
jb
dec
addr16
mov
sbb
movsb
xor
xor
xchg
inc
outsb
aaa
mov
fimull
call
jno
mov
repz
cmp
jg
xor
push
nop
pop
sbb
xchg
shl
stc
call
dec
inc
inc
jb
mov
into
outsl
ja
test
xchg
mov
test
xchg
rcrb
out
icebp
ljmp
hlt
cmp
out
sahf
add
sub
or
out
lahf
xor
sahf
jb
pop
das
jmp
mov
push
jl
adc
or
incl
into
xor
and
mov
insl
mov
ljmp
ljmp
fsubrp
dec
fmuls
outsl
mov
movsl
fwait
xor
pushl
mov
inc
lcall
scas
addr16
adc
cwtl
xor
out
mov
mov
sub
sub
mov
pop
xlat
mov
pop
les
arpl
sbb
mov
mov
xchg
dec
pushl
out
jo
decl
mov
mov
or
dec
fisttpll
push
je
sub
adc
outsl
fdivrs
stos
or
push
cmp
mov
pop
sahf
push
ljmp
xor
push
dec
dec
cmp
mov
mov
jmp
fsts
xchg
shrb
in
add
loopne
arpl
das
dec
dec
xor
ljmp
xor
stos
adc
mov
in
dec
ret
cmp
inc
int
push
repnz
rclb
cmp
dec
inc
cmp
int3
sahf
inc
cs
decl
lcall
lea
stos
sub
sub
and
ja
out
mov
filds
clc
mov
pushl
pop
sub
cs
repz
lcall
mov
and
fildll
aad
sub
push
cmpsb
xor
mov
add
jmp
xchg
sbb
dec
inc
sar
rorl
fldcw
push
dec
xor
mov
leave
mov
add
adc
xchg
push
xchg
insl
ret
adc
mov
mov
mov
push
out
cmpsl
mov
fimull
dec
out
pushl
push
sbb
push
jo
dec
cmc
xchg
adc
jno
insl
add
int
mov
into
lcall
cs
push
frstor
dec
into
adc
adc
int3
movsb
sti
adc
push
jmp
jl
add
loope
popf
out
pop
mov
push
ljmp
fiadds
xorb
cwtl
out
mov
inc
cmp
add
mov
andb
and
and
js
lds
addr16
loopw
decl
dec
push
rorb
test
mov
stos
decl
nop
ret
xor
into
popa
ret
adc
xor
sbb
jmp
sub
insl
xchg
sbb
and
test
imul
fnstenv
add
jbe
into
cwtl
sahf
mov
ret
mov
iret
insb
sbb
icebp
jmp
sbb
sbb
xchg
mov
dec
pop
pusha
repnz
xchg
inc
sbb
and
stc
pop
cld
das
cli
mov
fldenv
mov
ds
jb
lret
scas
jbe
insb
sti
outsl
clc
ljmp
push
test
aaa
mov
fsubrl
addl
call
sub
cmp
cld
add
jae
enter
mov
inc
stc
mov
in
xor
mov
cltd
fisttpl
mov
ja
push
out
ret
insl
sti
xchg
cmpsb
movsl
xchg
xchg
dec
enter
jle
cmp
adc
into
jle
sbbl
ljmp
xchg
out
add
test
enter
mov
xor
mov
lahf
or
popa
orb
mov
mov
hlt
fbld
inc
in
sub
lcall
adc
adc
mov
push
sbb
sub
lahf
pushl
stc
out
jno
push
mov
adc
push
les
jbe
and
aas
jnp
or
mov
jmp
jno
xor
out
xchg
dec
or
loope
fwait
adc
fwait
mov
mov
aas
sbb
sti
mov
ds
xor
jle
sbb
sub
les
decl
add
incb
cwtl
aas
outsl
call
filds
sarl
notb
mov
and
sbb
shrb
scas
adc
cmpsl
dec
outsb
pop
pop
push
pop
jbe
cmp
mov
adc
popa
insb
push
xchg
jle
adc
push
mov
or
and
cmp
push
loope
lcall
mov
cmp
push
fwait
push
push
jae
adc
in
xorl
lret
mov
adc
sbb
fisubl
je
sbb
mov
nop
mov
out
daa
inc
dec
jne
movsl
push
cmpsl
dec
jmp
cmp
loope
fildl
pop
ds
fsubrl
in
cmp
or
mov
incl
ds
adc
mov
push
inc
fwait
cmpsb
sar
enter
cmp
jnp
leave
clc
inc
test
into
xchg
dec
cwtl
stos
ja
int
decl
arpl
sub
push
push
ja
mov
push
inc
dec
arpl
push
sub
push
xchg
push
jle
xchg
insl
inc
mov
jo
dec
loope
lahf
jmp
pop
mov
or
sub
dec
mov
cmpsb
sbb
or
sbbb
arpl
sub
dec
jg
ror
adc
test
cmp
dec
dec
dec
mov
loopne
jg
into
sub
or
mov
outsb
in
mov
inc
lds
sti
into
mov
jmp
pop
cld
cwtl
and
lcall
mov
and
mov
sub
pop
ficoms
in
jno
xorb
loop
dec
mov
pop
testl
sbb
xchg
lahf
and
cltd
addl
dec
stos
imul
filds
test
rorb
pop
stos
iret
addr16
jp
mov
jecxz
pop
cmp
inc
daa
int3
and
iret
xchg
aas
jl
add
push
ret
aas
push
xorb
ja
out
aas
push
add
orb
or
fistpl
test
decl
stc
fwait
mov
and
cmp
cmp
inc
out
ja
incl
inc
ret
jno
xor
or
inc
dec
mov
insb
pop
mov
out
adc
ljmp
mov
xchg
xor
subl
pop
cmp
mov
jae
pop
out
mov
ja
add
adc
fstpl
dec
xor
dec
sub
sti
movsl
cmp
xchg
arpl
sub
inc
sbb
sbb
stos
xchg
cmp
xchg
bound
fstl
stos
pop
ljmp
mov
inc
in
jp
dec
mov
mov
add
push
incl
aas
dec
negb
sub
mov
ret
test
mov
mov
and
adc
popf
or
movhlps
sahf
aas
cld
jmp
in
ds
jno
mov
adc
adc
push
inc
call
xchg
arpl
mov
shlw
out
pop
fstps
xor
pop
in
or
sub
mov
adc
popa
test
in
je
jg
lock
jne
inc
mov
push
add
cmp
test
imul
push
dec
dec
lret
das
jmp
add
stc
lods
pop
mov
mov
addr16
dec
jbe
push
aas
cli
lds
cmp
jns
inc
int3
push
arpl
dec
fcomps
insb
out
sti
sbb
lcall
push
xchg
cli
push
push
dec
push
ss
and
das
outsl
sub
sbb
loopne
aaa
ss
daa
sub
fwait
inc
lret
sti
pop
fld
lcall
pop
ljmp
mov
inc
push
fildll
push
out
ret
shll
call
jb
push
cld
cs
jno
scas
mov
data16
lcall
and
add
pop
icebp
es
cltd
out
fwait
mov
js
insb
leave
inc
mov
cld
fwait
into
js
mov
push
aad
scas
mov
ljmp
add
add
sbbb
cs
push
into
sahf
push
call
ds
pop
loop
pop
rdmsr
xchg
nop
adc
dec
cmp
xor
cld
movsl
push
dec
js
push
push
jne
pushl
pop
insb
push
outsb
adc
pop
jne
push
es
add
leave
or
sarl
sbb
adc
mov
jg
fsubrp
cmp
inc
mov
dec
popa
push
pop
xor
or
std
outsl
sar
imul
pop
int3
rcll
xlat
movsl
push
dec
sbb
push
inc
pop
ja
push
inc
in
inc
sub
jns
aas
je
add
roll
dec
inc
orb
pop
lahf
mov
popa
out
clc
loope
push
ljmp
inc
orb
repz
mov
push
imul
xchg
inc
cld
lret
push
jecxz
push
fimuls
out
push
dec
fwait
dec
lea
jmp
loopne
into
repz
inc
rorl
push
jb
inc
push
xor
bound
or
lret
out
std
or
insb
loope
pop
neg
ljmp
mov
into
ret
jg
es
fsts
mov
pop
cld
mulps
int3
dec
mov
lock
call
into
push
lcall
sti
gs
test
jbe
cltd
dec
cmp
and
decl
push
inc
dec
jo
pop
bound
pushf
cmpsb
push
stc
mov
xor
fisttpll
decl
hlt
jmp
inc
lahf
mov
mov
jae
push
rcrb
jne
jo
incl
push
popf
cmp
pusha
pushf
icebp
push
inc
gs
addr16
inc
mov
out
xchg
push
or
mov
dec
pop
mov
lock
incl
arpl
cmp
cmp
sbb
mov
outsb
mov
lcall
or
in
or
loop
dec
je
push
fldt
push
jecxz
sar
add
es
add
es
pop
jbe
inc
jno
cltd
inc
lret
stos
mov
incl
jmp
mov
dec
adc
ret
fnsave
aaa
out
sbb
adc
inc
shrb
dec
mov
es
jae
pop
loop
mov
inc
imul
inc
ds
and
pop
dec
loop
mov
imul
out
adc
jmp
filds
je
cmp
out
gs
sbb
push
iret
cltd
xor
mov
dec
frstor
pop
into
and
xchg
pusha
shll
mov
add
mov
sbb
and
and
lock
imul
pop
rorb
pop
movsl
popa
dec
fistps
daa
lcall
ret
idiv
scas
clc
lcall
cmp
fwait
mov
xor
mov
sahf
jle
xor
jmp
adc
pusha
inc
mov
sub
inc
and
and
mov
lods
xchg
xor
data16
rolb
sbb
jo
mov
lcall
mov
inc
or
xchg
cltd
jns
aas
pop
fcoms
iret
call
movsl
add
or
and
stc
sub
dec
xchg
out
sbb
or
mov
insb
sti
mov
rcrb
cwtl
lea
cmpsb
cmpsl
cmpsb
popf
add
pop
into
inc
sbb
sub
and
cltd
jle
lret
incl
xor
adc
and
mov
scas
fmuls
add
push
shr
pop
pop
aaa
sub
ss
mov
aas
test
mov
xchg
push
or
shll
rorl
inc
pop
xor
sarb
cltd
dec
imul
dec
sub
dec
fidivrs
inc
icebp
movsbl
mov
daa
adc
jg
ret
xor
inc
mov
and
aam
push
xchg
mov
in
inc
push
inc
xchg
ljmp
addr16
jl
out
inc
fcomps
lcall
clc
mov
mov
lcall
mov
cld
mov
jbe
xor
pop
xchg
mov
aas
cmp
dec
ja
sar
dec
pop
push
jns
icebp
xchg
mov
xor
shll
mov
adc
call
imul
out
cld
ds
sub
sbb
mov
jg
cltd
pop
add
fnstsw
icebp
jne
cs
push
stos
xor
scas
ljmp
dec
sbb
inc
js
sbb
jmp
das
insb
pop
lret
add
sub
js
fiaddl
iret
xor
push
lds
dec
jg
fistps
incb
push
jmp
in
adc
cltd
xchg
call
jno
into
aam
jmp
jno
and
mov
mov
pop
jb
pop
push
ret
shrl
leave
pop
inc
leave
inc
fs
sub
or
fadds
dec
jne
adc
sbb
leave
or
stos
dec
lods
movsl
clc
mov
mov
adc
add
fidivl
push
in
fbstp
jbe
push
push
mov
shlb
add
out
add
and
push
ja
and
inc
das
add
lds
jl
push
xchg
mov
jle
jg
fidivl
je
xor
das
pop
cmp
mov
sub
stos
subl
inc
xor
repz
call
sbb
lret
fldl
ja
xor
ret
and
add
mov
arpl
int
and
icebp
sti
dec
xor
es
add
pop
pop
stc
sbb
inc
add
mov
out
pop
movsb
push
dec
mov
cmp
and
mov
fldcw
add
jbe
repnz
loopne
jmp
jp
sub
push
hlt
aaa
mov
loopne
add
pop
and
test
addr16
mov
gs
jns
sub
jns
pusha
pop
fistpl
pop
in
sarl
jnp
in
aas
je
enter
call
pop
aaa
adc
add
cltd
loopne
jae
mov
addl
je
es
popa
jno
adc
jg
pop
cltd
cmp
sub
xor
inc
jl
aas
mov
paddusb
mov
or
fcompl
dec
cmp
mov
and
push
xchg
sub
scas
ljmp
cmp
pop
dec
out
or
mov
xor
push
and
fwait
jbe
pop
sbb
sbb
std
sub
xchg
jecxz
jmp
outsl
mov
aad
mov
insl
push
adc
adc
sar
cld
push
lea
fwait
pop
sbb
ds
sbb
jno
add
rcrb
in
cld
xor
and
push
dec
cmp
push
jbe
rcll
sub
dec
mov
add
xchg
filds
or
pop
es
push
decl
sahf
js
mov
outsl
sti
xor
iret
and
fcomip
aaa
std
adc
aas
out
inc
int3
or
sahf
add
jl
outsl
cmp
pop
push
jmp
inc
pop
xor
ret
and
sub
pop
push
mov
sbbb
into
pop
outsl
out
xor
enter
add
into
ja
cmc
adc
push
dec
cli
mov
mov
decl
jge
xor
sbb
orb
jmpw
enter
arpl
mov
dec
dec
das
das
adc
clc
jg
fcompl
stc
lods
adc
incl
cmpb
cmpsb
addr16
jbe
loopne
dec
xor
add
fistpll
mov
pushl
xor
in
add
cmp
and
cld
cmpsw
push
pop
mov
pop
mov
and
mov
subb
mov
call
arpl
cmp
jle
lcall
out
mov
rcrb
jle
inc
roll
cmp
lods
xchg
shrb
jg
sub
cld
add
sub
call
jbe
into
sub
sbb
ds
or
add
jl
dec
push
movsb
cmpl
cmp
xor
pop
mov
fldenv
sbb
cmp
xor
mov
ljmp
or
mov
aaa
incb
mov
sarl
mov
enter
mov
mov
imulb
inc
add
ss
fdivs
and
lods
cmp
or
outsl
daa
aas
in
data16
pop
sbb
aam
xchg
push
jbe
sahf
dec
test
mov
push
fldenv
js
pop
xor
mov
fucomip
cmp
ljmp
bound
add
sbb
scas
push
incl
aad
pop
daa
shll
cs
jle
sub
xorl
xchg
mov
mov
push
mov
xor
push
pop
out
or
sbb
pop
jl
decl
inc
and
fistl
push
sahf
add
mov
jmp
lea
clc
sbb
popa
or
xor
jg
xchg
and
in
mov
push
jl
cmp
push
cld
decl
es
jns
loope
sbb
arpl
lock
sbb
mov
cmpsl
outsb
push
jg
stos
mov
pop
mov
sbb
and
stos
in
notl
sub
jb
dec
and
repz
loope
jne
adc
sahf
ret
pop
mov
or
dec
push
popa
call
mov
ljmp
cmpsb
in
addr16
sub
test
pop
addr16
jge
jle
imul
or
dec
pop
rcr
fimuls
pop
mov
test
mov
ss
fisubrs
xchg
mov
movsb
cmpsl
and
ljmp
pop
nop
mov
scas
mov
inc
mov
adcb
xchg
ja
decl
pop
gs
sub
inc
mov
mov
mov
jb
cmp
jmp
test
xor
mov
stos
mov
test
pop
sbb
mov
insb
pop
lea
stos
mov
mov
aaa
in
xchg
in
pop
inc
test
call
fstpt
cmpsb
inc
xchg
lods
testb
repnz
addr16
ljmp
add
add
inc
call
insl
add
test
jb
jbe
incl
outsl
ret
and
insb
sub
jg
mov
jae
mov
das
lret
inc
out
pop
shlb
mov
mov
push
jge
je
sub
imul
dec
data16
test
add
adc
jmp
lcall
ja
test
punpckhdq
xor
or
jecxz
imul
jmp
mov
dec
push
data16
xor
lret
lods
push
sub
dec
push
lock
les
add
adc
jno
dec
lret
cmpl
xchg
push
les
je
push
dec
out
mov
pop
mov
loope
loop
or
xchg
pop
movsl
repz
mov
ret
aam
pop
incl
push
xchg
rorl
push
out
adc
daa
out
push
jp
mov
dec
lock
ljmp
push
data16
outsl
xchg
mov
stos
push
loop
jg
data16
arpl
lcall
jns
jb
push
mov
jp
outsl
aam
pop
out
scas
cwtl
xchg
xchg
and
xchg
nop
mov
cmp
lcall
repnz
movsl
xor
je
mov
push
stos
mov
es
dec
push
cltd
mov
add
mov
addr16
cmpsb
orl
mov
cmpsl
lcall
mov
mov
xor
test
mov
inc
pop
jnp
mov
push
mov
mov
mov
mov
and
cltd
fdivs
dec
adc
repnz
arpl
jmp
mov
scas
inc
xor
jbe
gs
dec
mov
lcall
add
ss
aaa
pop
in
arpl
mov
lock
pushl
xchg
mov
mov
insb
dec
add
inc
sub
mov
inc
ret
fisttps
xor
mov
inc
dec
push
cli
sbbb
dec
jg
incl
adc
push
fwait
out
mov
dec
dec
frstor
out
inc
into
adc
ljmp
adc
sbbb
inc
sbb
in
pop
add
incl
scas
xlat
jo
aaa
pop
ficoms
jbe
out
dec
sbb
repz
or
les
adc
pop
and
xor
dec
mov
data16
inc
jbe
push
incb
inc
jp
cli
xorl
jge
or
addr16
mov
mov
sarl
add
xor
out
and
in
cmp
sahf
jp
ret
push
arpl
stos
cmp
jge
pop
jns
sub
sub
add
outsl
je
add
dec
mov
cli
or
adc
aaa
mov
adc
into
loopne
outsb
fisttpll
nop
push
inc
dec
frstor
incl
pop
or
jl
je
fstpl
inc
jg
adc
cmpb
roll
addb
adc
test
cmp
inc
pusha
mov
jmp
push
loopne
jae
jmp
inc
lahf
outsl
cmp
gs
test
ds
clc
mov
je
mov
xchg
scas
cmp
mov
sahf
dec
inc
adc
or
pushl
jo
call
mov
or
aas
push
dec
mov
lods
push
insl
movsl
inc
pop
mov
cmp
push
and
das
pop
lret
lret
in
pop
ja
sti
mov
les
fstps
sti
push
jnp
jg
test
dec
mov
sub
cs
aas
jl
je
iret
stc
scas
mov
stc
lods
enter
sub
inc
or
sub
lea
xor
aas
or
mov
aad
sub
mov
out
mov
push
pusha
mov
sub
sub
cmpsb
fistpll
ret
jecxz
repz
jle
mov
pushf
xchg
aaa
decl
loop
lds
out
mov
mov
or
and
lret
jl
lea
das
push
push
dec
stc
cmp
mov
inc
lret
dec
int3
mov
ss
fidivrs
imul
xchg
je
test
jne
cmpsb
push
test
call
ljmp
xchg
jmp
xor
sahf
fiadds
jae
dec
ret
into
mov
ja
xor
fsubrs
into
sub
orb
push
pop
ds
and
xchg
jo
mov
adc
jge
lock
icebp
clc
add
insb
mov
inc
je
cld
push
dec
fiadds
xlat
inc
decl
adc
repnz
xor
sub
sbb
mov
dec
adc
cli
insl
push
mov
int
jl
testb
xchg
mov
jge
sar
sbb
iret
fwait
xor
loopne
repz
lcall
cmp
clc
xchg
shlb
or
sub
pop
sub
outsb
ja
scas
leave
lahf
xchg
cs
or
jne
push
out
jmp
pop
add
mov
das
fmuls
dec
call
adc
aaa
mov
push
lds
jbe
iret
cmp
lods
aaa
adc
arpl
dec
in
inc
data16
insb
iret
lock
mov
push
loopne
sub
addr16
push
dec
pop
mov
arpl
pop
cli
jg
xchg
xor
dec
cwtl
push
fcmovnu
push
int3
pop
sub
dec
sar
jne
mov
std
cmp
mov
cmc
sahf
mov
push
cmp
mov
adc
mov
mov
enter
pop
inc
ljmp
mov
pushl
outsl
inc
add
and
push
jb
js
outsb
xor
or
decl
and
xor
cmp
and
mov
stc
xor
decl
adc
insl
jmp
and
in
mov
dec
std
mov
sub
inc
js
es
sti
add
or
pop
mov
fwait
or
shrb
pop
cmp
jo
sbb
adc
mov
add
ss
out
pop
inc
jo
jmp
adc
xchg
outsl
hlt
fucomp
jae
xchg
std
insb
icebp
fisubl
add
rorb
shll
sahf
fstpl
pop
dec
test
lahf
or
je
add
pop
mov
lods
mov
inc
sbb
das
lods
push
push
pop
xor
in
dec
pop
cmpsl
loop
loopne
mov
into
out
push
pop
inc
push
movsl
pop
imul
fdivl
cmp
mov
fdivrs
and
sbb
aas
test
pop
sbbb
addr16
orl
and
clc
push
xlat
and
push
int
cld
lds
out
addr16
out
out
mov
aad
in
sub
jg
xor
lods
jecxz
out
loope
arpl
mov
lahf
ds
popa
jno
mov
sar
aas
jle
arpl
packuswb
push
or
hlt
aas
ja
cmc
mov
mov
insb
lds
xor
jg
sar
ret
cmp
out
and
imul
out
subb
int3
shlb
dec
out
loope
out
call
enter
push
scas
ss
addl
shll
data16
cmpsb
dec
jge
int
push
ret
out
pop
dec
pop
sar
movsl
mov
cmp
movsl
test
std
inc
ret
clc
cmp
leave
xchg
out
ret
jl
fs
sbb
popa
cmpsl
fisubrs
bound
sti
push
pop
mov
das
je
loop
repnz
sbb
addr16
cmc
in
leave
popa
hlt
push
xlat
jge
sub
dec
mov
imul
or
mov
repnz
hlt
repz
jno
test
out
xchg
dec
enter
sbb
adc
ss
jns
xchg
inc
jmp
stos
mov
icebp
inc
mov
out
add
add
mov
push
xor
into
sbb
adc
push
jns
sbb
mov
jnp
fildll
call
lock
addr16
aas
inc
out
in
shrl
cmc
inc
push
mov
sbb
pop
mov
clc
add
pop
out
faddl
xchg
push
pop
push
jg
repnz
xchg
adc
out
popa
stc
push
mov
call
inc
pop
add
add
mov
aaa
and
or
dec
adc
lods
cmpsb
and
outsl
jb
jmp
xor
imull
div
ja
ds
or
add
std
addr16
into
sti
jecxz
scas
in
out
das
xor
mov
push
insb
popa
pusha
cmp
jg
jecxz
push
inc
sahf
js
fmuls
mov
sbb
cld
in
test
and
jno
enter
push
les
jns
add
push
jg
stc
ljmp
leave
dec
les
pop
std
out
insb
call
aad
icebp
mov
enter
repz
fmulp
pop
outsb
dec
push
lahf
iret
add
dec
dec
int
rcll
cmp
and
sub
dec
clc
add
push
test
ja
push
mov
sbb
cmp
and
and
popa
fsubrl
je
push
inc
jmp
mov
mov
punpckldq
xor
inc
dec
es
or
add
sbb
test
aas
mov
pop
stos
decl
call
push
xor
cs
mov
leave
push
xor
mov
lock
fistl
mov
add
push
addr16
fwait
ret
mov
es
push
mov
decl
hlt
add
push
mov
push
or
out
inc
push
sahf
jg
sar
push
clc
dec
xchg
sub
cmpsl
jae
lahf
lcall
push
ljmp
inc
push
test
lcall
movsb
decl
push
push
and
mov
jmp
pop
hlt
cmp
pop
mov
add
scas
dec
xor
xor
and
std
push
xchg
inc
loopne
in
adc
push
mov
into
mov
cmp
gs
mov
sub
jl
dec
enter
add
cltd
and
jmp
sahf
and
cmp
xchg
mov
cmc
push
inc
pop
push
cmpsl
adc
push
test
jge
outsb
push
aas
dec
out
mov
call
mov
inc
dec
decl
dec
xor
pop
jbe
jg
dec
xor
pusha
test
jmp
push
dec
dec
sbb
push
dec
or
inc
push
push
cmp
iret
bound
pop
outsb
mov
ljmp
adc
lods
out
push
and
sbb
add
cwtl
xlat
pop
das
scas
ret
lret
xorb
pop
add
jne
mov
call
arpl
add
xchg
inc
ljmp
mov
jecxz
arpl
rcrb
mov
sbb
xchg
jge
push
pusha
cmc
lcall
incl
ljmp
jnp
push
add
add
and
je
lret
xor
jg
lods
push
lock
or
pop
gs
sub
out
push
pop
mov
cmp
and
loop
jbe
mov
cs
inc
cmp
jmp
adc
cmp
stos
inc
inc
popa
shll
push
push
aam
pop
mov
pushw
ja
fwait
jo
leave
or
push
push
xor
icebp
scas
clc
mov
add
decl
and
sub
enter
icebp
sub
cmp
cmp
into
pop
outsb
inc
adc
out
out
sti
xor
scas
sbb
das
pusha
flds
scas
ds
cwtl
iret
loopne
scas
sbb
dec
cmpsb
loope
jae
jle
loop
push
das
rolb
mov
les
inc
add
lcall
pop
mov
xor
pop
insl
fiadds
xor
test
cli
ffree
decl
insl
cmp
add
push
inc
ss
push
jo
adc
outsl
out
shlb
dec
push
stc
in
jmp
xor
ret
decl
pop
jmp
and
mov
rol
inc
shr
sub
cmp
imul
mov
int3
or
das
clc
incl
inc
and
sub
push
test
es
arpl
xchg
in
add
or
decb
fimuls
out
pop
jl
popl
and
cmpsb
pop
sbb
and
add
stos
out
decl
mov
pop
lret
int3
outsb
inc
into
pop
std
add
pusha
jecxz
mov
insl
das
push
call
pop
nop
insl
clc
jbe
push
clc
xor
jle
jle
mov
imul
mov
sub
or
mov
inc
push
ljmp
xchg
ds
movsl
push
cmc
sbb
jl
xor
cmp
jg
aas
inc
xor
or
jae
push
mov
lahf
sbb
dec
cmc
dec
sbb
and
daa
je
ja
ljmp
fcoms
pushl
inc
dec
icebp
dec
fcoms
push
ljmp
mov
rsqrtps
pushf
and
pop
loopne
dec
jns
lods
mov
push
xchg
mov
xor
nop
outsb
cld
pop
addr16
sub
lods
xor
stc
fisttps
rcrb
push
push
mov
movsb
mov
cmc
xor
aaa
into
dec
sahf
jae
xchg
and
movb
into
xchg
or
jg
or
mov
iret
adc
xchg
std
ljmp
or
push
inc
jnp
test
lret
and
dec
dec
jmp
clc
aaa
bound
sbb
inc
or
incl
mov
and
xorb
push
mov
jmp
hlt
fcomip
es
pop
clc
cmp
addr16
xchg
add
sub
mov
sub
pop
mov
outsl
es
js
dec
jle
pop
push
pushf
and
jns
xor
ss
cwtl
mov
sbb
ficomps
incl
jns
ret
sbb
sti
cltd
push
mov
dec
mov
lahf
inc
arpl
inc
dec
andl
inc
push
shlb
lcall
sti
inc
loopne
pop
je
sbbl
xor
bound
stos
movsb
decl
fs
jmp
or
das
pop
sbb
ret
das
jno
sub
mov
inc
mov
jno
push
movsb
arpl
dec
push
sub
sbb
pop
loopne
stc
dec
mov
mov
mov
push
sbb
testb
shlb
dec
mov
sbb
es
loop
aas
std
cs
dec
scas
out
push
add
jle
push
dec
movsb
pop
js
sub
cmp
push
pop
adc
pop
push
imul
jg
inc
sbb
cmpsl
dec
or
cltd
in
clc
ljmp
sarb
jle
dec
sbb
movsl
cmp
dec
cmp
dec
inc
les
jg
stc
movsb
mov
pusha
inc
lods
dec
enter
sbb
pop
incb
pop
sbb
lods
inc
jbe
sarb
push
inc
fdivs
push
clc
mov
call
and
imul
mov
fwait
dec
dec
sub
dec
lods
loopne
jbe
mov
repz
jg
cmp
sbb
lds
push
jns
xchg
mov
pusha
lcall
mov
out
int3
sbb
xor
mov
stc
decl
notl
jno
pop
pop
pop
ret
js
daa
push
dec
mov
les
pop
incl
ja
push
test
dec
shrl
das
mov
into
xchg
or
xchg
pop
ljmp
lcall
adc
in
cld
adc
mov
ret
aaa
dec
jae
test
pop
jae
ljmp
xor
cmp
mov
adc
ss
stos
rclb
pop
or
insl
leave
mov
fisttps
pop
sbb
pushl
out
mov
inc
pop
xchg
push
inc
cld
leave
inc
movsb
call
rolb
add
outsb
scas
sbb
mov
adc
in
jle
out
aaa
jb
outsb
ljmp
int3
nop
dec
std
mov
insb
lahf
mov
jb
add
dec
inc
je
cwtl
cmpsl
out
icebp
dec
xchg
hlt
xchg
test
test
jnp
stc
mov
xchg
dec
jg
mov
mov
mov
into
sub
call
jl
cmc
aaa
cld
jge
dec
sti
xor
jl
push
imul
sar
sti
das
pop
sbbb
inc
xchg
mov
adc
inc
out
push
cmp
mov
dec
cmp
hlt
mov
enter
dec
lcall
sub
push
sub
xor
dec
scas
xor
decl
push
add
dec
cmp
out
xchg
loope,pt
jg
inc
add
xor
scas
imul
lods
inc
push
clc
decl
push
insb
push
dec
lds
mov
sub
xor
adc
xchg
stos
jmp
jg
lods
gs
sbb
out
imul
lcall
shlb
gs
in
addr16
aas
push
mov
gs
incl
pushl
ds
fidivs
push
mov
out
pop
fistpll
je
ret
cmp
sub
mov
push
pop
lods
sub
hlt
int
mov
insb
call
cmp
add
shlb
jge
movsl
push
into
aas
aas
xchg
sarb
and
push
into
test
rolb
dec
adc
data16
nop
jecxz
out
gs
mov
and
pop
jns
ds
lods
mov
lcall
cltd
add
icebp
inc
push
lds
adc
mov
ljmp
inc
gs
fimuls
jbe
add
sub
mov
call
lds
push
repz
fs
xor
jg
shll
jg
or
mov
inc
inc
mov
ljmp
fcompl
mov
clc
pop
or
mov
xchg
scas
iret
or
shlb
pop
lea
mov
movsb
pop
incb
and
decl
adcl
cmp
lret
push
push
xor
ja
lcall
pop
fildl
insb
ljmp
push
out
sbb
fs
cmovns
ja
adc
call
cld
mov
outsl
push
pop
loop
or
cs
cltd
and
mov
pushl
push
sub
push
cmp
jne
add
flds
incl
lret
xor
jns
inc
hlt
cld
incl
mov
push
xchg
js
xor
inc
mov
and
shrl
scas
jmp
mov
popa
jbe
mov
mov
dec
int3
and
adc
cmp
cmp
add
mov
mov
outsb
mov
jg
outsb
xrelease
inc
in
or
call
cmpsl
xchg
xchg
xchg
out
or
push
out
fs
cmp
jg
cmc
mov
gs
test
sub
scas
jl
lock
stos
dec
ss
in
push
stos
mov
push
decl
imul
xchg
sarb
fnstsw
shlb
in
and
push
popa
cmp
push
mov
push
out
push
fidivrs
dec
in
clc
inc
mov
pop
clc
inc
pop
test
mov
in
and
xorb
mov
mov
adc
inc
outsl
cmpsb
or
out
or
rcrl
adc
xchg
je
mov
mov
cmc
std
sbb
test
push
insl
fwait
stos
mov
xchg
in
cmp
jne
cmp
push
insb
in
packuswb
sbbl
jle
dec
or
arpl
push
incb
sar
call
push
imul
cmp
and
scas
setae
lret
pop
pop
je
inc
data16
fnstcw
je
loop
sbb
test
div
add
push
ja
sbb
call
push
push
fs
fimuls
pop
call
pop
hlt
incl
push
dec
ss
mov
adc
jp
pop
pop
rcrb
imul
fwait
mov
sbb
icebp
xchg
lcall
lock
mov
push
and
jmp
ja
add
mov
jae
lahf
xchg
scas
addb
or
std
outsl
mov
pop
test
sub
test
cmp
cld
popf
hlt
xchg
aaa
dec
in
pop
jne
cmpsl
fwait
dec
push
movsb
or
xorb
mov
mov
cmpsl
in
and
pop
ds
cmp
adc
pop
dec
mov
sub
pushf
jge
pop
jg
cli
inc
pop
pop
lret
push
and
push
adcl
icebp
filds
ljmp
addr16
aas
sbb
cmp
mov
mov
dec
data16
push
push
fildll
pop
sbb
inc
pop
cmp
jno
popa
lea
cld
mov
loop
and
push
and
shll
or
enter
fists
push
into
mov
jbe
pusha
and
jle
pop
in
dec
add
lret
lds
into
xchg
icebp
push
jle
adc
cld
out
push
jl
dec
and
cmp
sti
jg
cwtl
bound
cwtl
mov
mov
int
add
test
ja
mov
dec
adc
mov
pop
andl
aad
mov
inc
add
mov
aad
jp
cwtl
pop
xchg
dec
ja
cmp
mov
cli
adc
andb
mov
pop
fistl
popa
push
pop
test
ret
aad
mov
xor
cmp
mov
ljmp
xchg
ret
mov
decl
popf
ds
inc
cltd
xchg
xchg
sahf
stos
and
into
gs
jnp
jmp
push
or
push
repnz
jmp
add
dec
icebp
push
iret
add
call
jbe
mov
mov
js
dec
lret
sbb
inc
jmp
dec
lods
cmpsb
movsl
pop
les
outsb
addr16
les
out
sbb
cmpsl
dec
rcrb
ret
cmp
mov
push
push
push
stc
jle
and
jno
jle
subb
fs
mov
imul
push
jbe
lret
andl
mov
fidivs
pop
mov
cwtl
mov
insb
fnstenv
jo
call
call
push
push
fmuls
jbe
out
stos
sbb
and
jae
ljmp
mov
dec
add
loopne
pop
pop
gs
push
cmp
pop
cmpsb
testb
repnz
int3
mov
and
xor
push
pop
repz
push
cld
int
xor
sbb
jbe
mov
fdivr
inc
ja
out
in
dec
mov
int
lea
push
shr
dec
or
std
jmp
or
test
inc
push
fbld
cmp
in
xlat
pop
arpl
stos
push
jecxz
push
div
adc
mov
pop
jbe
or
mov
jno
sahf
jo
stc
mov
jmp
push
fbld
int3
inc
insl
test
mov
dec
jnp
xor
mov
pop
scas
in
or
rcrb
idivb
out
pop
icebp
incl
add
cmpsb
aaa
out
stos
mov
inc
lret
jb
xor
js
incl
jb
push
cmpsl
xor
jno
faddl
out
enter
and
sub
scas
les
sub
ljmp
das
in
mov
sbb
cld
sbb
jbe
add
out
ds
pop
jnp
cld
ja
mov
and
push
scas
push
mov
cmpsb
lock
jmp
xchg
in
sbb
inc
sub
js
and
icebp
scas
push
test
sbb
mov
bound
idivl
aaa
ret
sbb
adc
jae
mov
das
into
decl
ds
adc
mov
dec
cmpsl
clc
adc
clc
decl
or
push
in
add
movsl
and
out
xchg
out
test
call
inc
sub
mov
mov
mov
adc
add
in
jg
into
jecxz
xor
jnp
jne
add
mov
mov
rorl
loop
hlt
xor
and
test
xchg
aaa
push
xor
arpl
lock
and
clc
arpl
into
push
pop
test
pop
es
aam
mov
inc
in
sbb
scas
add
inc
scas
in
xor
mov
decl
lret
pop
aaa
movsb
sti
cmp
test
pop
fsubl
push
sub
sub
ljmp
mov
nop
xchg
sahf
jbe
xor
sub
jmp
out
sbb
push
clc
sbb
push
loop
adc
jg
call
sahf
mov
lret
xor
inc
push
decb
pop
test
test
mov
mov
bnd
push
adc
fwait
sbb
jmp
jnp
push
xorl
cmpb
and
loope
xor
mov
in
dec
mov
adc
aaa
std
xchg
push
ja
adc
mov
mov
and
pop
push
pop
aas
rcr
imul
stc
push
mov
inc
add
dec
mov
dec
imul
mov
adc
leave
mov
xchg
jbe
repnz
sub
hlt
dec
dec
inc
push
aad
mov
jp
sub
adc
xor
cwtl
out
mov
fistps
inc
sysenter
mov
xchg
mov
test
ds
xor
jg
call
dec
mov
adc
xchg
add
push
lods
jge
dec
inc
bound
sbb
gs
cmpsl
add
mov
inc
push
inc
movsl
sub
mov
test
out
in
gs
iret
pop
jge
jg
cwtl
fmuls
enter
mov
add
fstps
inc
push
outsl
and
imul
xchg
lds
ds
sub
adc
cmc
cwtl
sub
push
stos
add
iret
leave
push
mov
subl
and
inc
jo
sar
clc
dec
sub
fstpt
jp
dec
mov
jg
outsb
repz
ja
and
arpl
cwtl
add
push
into
add
mov
mov
pop
fildll
pop
out
push
imul
pop
sbb
mov
stos
dec
jle
add
scas
cmpsb
jnp
mov
jg
adc
ds
loop
cmp
adc
cwtl
pop
jnp
insl
std
mov
or
xor
pop
sub
nop
xor
dec
cmpsb
push
jns
lods
insl
mov
inc
pop
adc
ss
test
das
mov
or
loope
aaa
cld
jmp
jbe
mov
push
sbb
mov
fists
outsl
and
lahf
lahf
mov
mov
inc
insl
insb
in
sbb
mov
out
mov
stos
mov
mulb
pop
jbe
mov
popa
xchg
dec
mov
shrb
ja
dec
xchg
sbb
mov
enter
mov
js
pop
jo
sbbb
out
add
pushl
cmp
adc
sbbl
mov
jo
orb
ds
lcall
pop
xor
mov
sub
fldt
nop
mov
decl
lcall
pushf
cmp
add
jns
jle
ds
xchg
mov
sbb
xchg
dec
inc
push
data16
pop
sbb
setle
mov
push
jg
inc
cmp
cmovns
push
add
adc
decl
jmp
inc
dec
rorl
jle
mov
pusha
popf
push
jbe
mov
push
jmp
jmp
out
dec
xor
push
inc
stos
cmc
dec
or
ljmp
sbb
sbb
out
and
mov
std
pushf
rorb
mov
cmp
jp
jp
push
cwtl
add
jg
pop
arpl
or
adc
sbb
push
pop
into
sahf
addb
pop
xor
daa
bound
sub
inc
jg
cld
jmp
mov
ss
sahf
and
out
outsl
push
mov
pop
lcall
lcall
rcrl
push
mov
adc
ds
adc
cld
jmp
sti
or
jge
out
arpl
push
mov
rorb
xchg
xor
cmp
mov
pop
and
mov
jnp
into
mov
fldcw
test
jbe
incl
pop
gs
pop
aad
dec
ja
sbb
mov
push
ljmp
shrb
mov
out
xchg
jo
loop
dec
int3
scas
jp
push
call
cld
jmp
sub
stos
jnp
or
push
stos
cmp
test
push
pushf
push
push
inc
das
xchg
adc
mov
adc
adc
lods
sbb
xchg
xor
icebp
ljmp
adc
lahf
xor
cmpsl
fwait
mov
mov
mov
jp
cmp
mov
ds
ret
pushf
call
pop
and
cltd
pusha
cmp
mov
fwait
aas
call
decl
push
or
mov
dec
addl
pop
inc
mov
int3
decl
jae
int3
or
aas
add
dec
push
jecxz
mov
test
pop
inc
cmp
das
out
in
fisubl
in
inc
jg
ljmp
movsb
cli
cltd
aas
out
shrb
insb
test
mov
jl
and
inc
shlb
test
ret
popa
jb
outsl
leave
ret
jbe
push
loopne
notl
jbe
into
xchg
or
das
push
jo
rol
xchg
sub
cltd
push
mov
mov
adc
jb
inc
sahf
call
cld
daa
frstor
leave
mov
leave
test
xor
push
sbb
hlt
xchg
cmp
cmpl
pop
jne
es
dec
push
pop
mov
aas
fwait
bnd
mov
adc
ljmp
movb
or
ret
lods
mov
insb
es
ficomps
fbstp
stos
lods
dec
loopne
insl
mov
std
loop
scas
lods
cwtl
rep
inc
inc
mov
mov
shl
lcall
xchg
xchg
out
xchg
mov
adcb
mov
mov
cmc
std
jmp
out
mov
ret
test
lods
add
mov
lea
out
and
ljmp
sti
test
xchg
icebp
ljmp
std
pushl
inc
dec
test
jnp
test
call
mov
es
and
mov
scas
jbe
inc
jb
mov
mov
cwtl
lods
lods
cs
pop
jg
data16
into
adcb
pop
add
jmp
inc
pop
out
dec
ja
mov
gs
adc
inc
scas
cs
jg
adc
inc
xchg
pushf
jo
testb
mov
jno
inc
pop
fisttpll
mov
lea
decl
lcall
cwtl
inc
dec
inc
ss
lcall
arpl
jl
inc
add
rep
mov
pop
mov
sbb
mov
lret
lods
push
jmp
jmp
outsl
xchg
add
aas
push
cmp
push
sub
mov
das
test
scas
cmpsb
sbb
sbb
and
jne
inc
imul
cli
call
inc
pop
in
push
inc
mov
cwtl
int3
add
xchg
inc
into
dec
jp
pushl
je
testb
cmpsb
in
lock
pop
mov
enter
bound
jbe
es
insl
adc
adc
add
inc
les
push
jl
shr
mov
ss
dec
dec
lcall
pop
add
xor
push
and
mov
lcall
incl
xor
inc
pop
lret
outsb
sub
pop
shrl
dec
pushl
push
ret
cld
jns
imull
jae
dec
cli
mov
into
arpl
and
cmpsl
xor
mov
pop
cltd
ljmp
push
dec
xchg
imul
cmp
mov
loop
jae
push
push
std
dec
inc
pop
adc
clc
pop
inc
push
je
jl
lcall
sub
push
mov
inc
jb
movsb
sbb
pushf
push
es
ds
addb
add
or
adc
data16
xor
cmp
stos
sbb
xchg
bound
pusha
pop
mov
adc
mov
dec
inc
mov
jg
sub
arpl
movzbl
push
lret
test
and
cmp
jbe
mov
in
popf
jo
pop
push
popf
jmp
pop
mov
and
insb
or
hlt
cmc
dec
sub
mov
rcll
xchg
std
add
jnp
push
push
cli
adc
dec
dec
pop
xlat
jbe
je
mov
dec
jg
lcall
cmp
call
in
dec
cli
push
dec
mov
cmpsl
test
adc
cld
sbb
dec
push
xor
xorb
sahf
scas
lds
stos
dec
mov
ret
rcrl
add
adc
decl
mov
mov
mov
dec
and
push
mov
xor
jo
mov
mov
int
pop
push
add
movb
adc
xlat
inc
jg
out
int3
push
and
mov
mov
pusha
jg
cmpsl
shrd
lds
pushaw
ljmp
mov
nop
adc
lcall
xchg
out
sbb
adc
add
sub
stos
ret
sbb
incl
xchg
ss
mov
mov
lods
sti
aaa
mov
inc
cmp
cmpsl
xor
inc
dec
popl
imul
js
adc
adcl
mov
andl
addr16
insl
outsb
jno
dec
incb
jno
push
dec
pop
in
fmull
in
gs
je
inc
rcll
sub
jb
sbb
push
ja
jecxz
mov
outsl
pop
add
push
ret
insb
sahf
xor
add
or
ljmp
or
push
fadds
push
jno
ret
bound
scas
jbe
cmp
rcl
inc
inc
jno
or
mov
es
rcrl
ljmp
loop
mov
mov
inc
dec
mov
cmp
call
xchg
jge
hlt
imul
inc
inc
fs
inc
scas
mov
sahf
hlt
mov
or
loop
xchg
jbe
loope
scas
mov
repz
int
orb
loope
stos
pop
sub
inc
jmp
ja
jg
cmp
add
outsb
ja
pop
dec
cltd
push
je
push
aas
inc
or
jl
into
gs
inc
insl
push
ja
inc
insb
and
pusha
cmpsl
sbb
jne
adc
inc
jge
mov
push
jb
push
pop
sbb
rcrl
cmc
inc
inc
stos
cmpsb
das
shll
mov
mov
cmp
mov
mov
pushf
bound
push
xor
or
incl
aaa
stos
jnp
sub
outsl
sub
and
arpl
iret
lods
jle
ljmp
push
push
notb
mov
pop
mov
cmpsl
insb
xchg
mov
das
xor
incl
mov
xchg
push
into
cmpsl
push
xor
incl
rcrl
fs
out
pop
mov
mov
mov
ret
cltd
mov
lret
or
scas
pushl
xchg
pop
and
dec
in
mov
inc
pop
ljmp
add
jae
aam
popa
ja
rorb
push
mov
sti
jg
dec
dec
xor
js
jb
cmp
push
fsubl
push
xor
outsb
ljmp
sar
in
insl
pushw
js
clc
push
in
mov
sub
dec
dec
sbb
or
cmpsb
icebp
and
cwtl
gs
jl
aaa
std
incl
push
mov
lcall
cmc
gs
inc
or
or
fidivl
lcall
mov
pusha
dec
imul
pop
test
out
jae
push
addb
ljmp
mov
sbb
sti
xchg
jns
jae
inc
popf
adcl
cmp
cld
push
clc
xchg
outsb
fisubrs
hlt
jg
jmp
cmp
inc
inc
xor
cwtl
xor
shlb
decl
xchg
aad
add
mov
lcall
iret
outsl
addr16
mov
pop
shrb
pushl
insl
sbb
mov
mov
popa
push
iret
mov
mov
cli
mov
jbe
lds
xor
sbb
cmp
sub
lcall
out
adcb
pusha
push
insb
and
and
mov
ljmp
js
jecxz
pop
pop
mov
mov
outsl
inc
pop
je
push
fidivl
test
lods
and
push
cltd
jp
inc
and
cmpsl
or
das
insb
mov
cmp
xchg
dec
ljmp
or
scas
shlb
movb
and
mov
mov
fwait
int3
mov
jbe
inc
dec
es
xchg
adc
int
aas
dec
mov
adc
and
outsb
daa
testb
out
aaa
adc
je
push
jbe
pop
xchg
cmpb
mov
xchg
mov
or
cmp
call
arpl
mov
xchg
mov
mov
mov
fmuls
jbe
or
decl
xchg
pop
in
test
fisubl
mov
push
fs
jg
pop
cli
add
cli
adc
es
into
jnp
call
out
inc
adc
mov
out
jg
insl
or
jmp
gs
push
and
push
inc
xchg
inc
and
pop
ljmp
jp
cwtl
dec
dec
andb
xorl
roll
xorb
inc
out
push
dec
adc
xor
cmp
lcall
xchg
pop
or
mov
xchg
mov
mov
ret
call
adc
stc
and
sub
rolb
in
pop
out
pop
ljmp
sti
push
jb
sahf
lds
jns
mov
or
lds
cmp
inc
pop
fimuls
pop
jp,pn
or
scas
ror
outsl
and
jmp
insb
adcb
adc
adc
jno
or
jae
incl
popf
mov
xchg
add
dec
cs
fisttpl
dec
loop
mov
cmp
sti
xor
ret
xor
in
xchg
decl
fistl
jle
fildll
out
or
inc
imul
out
das
xchg
cmpb
jbe
or
mov
mov
mov
add
cmpsb
add
cld
lods
push
scas
xor
shlb
ret
push
popa
dec
add
dec
decl
test
out
in
mov
or
lods
mov
faddl
cmpsb
or
jmp
es
and
jp
imul
movsb
sahf
dec
notl
pop
nop
jbe
push
push
adc
and
sbb
in
or
outsl
fdivr
lcall
les
pop
loop
out
cmp
fistpl
fcoml
pop
mov
jge
xor
dec
call
loope
push
mov
dec
sub
jbe
pop
dec
icebp
adc
enter
cmpb
sbb
js,pt
sub
xor
out
jl
dec
jecxz
lcall
out
mov
sbb
fiaddl
push
stos
clc
outsb
lcall
inc
mov
xlat
int
scas
cmpl
pop
scas
pop
jle
jle
enter
inc
fisubrs
cltd
into
add
or
into
out
mov
int3
aam
mov
ljmp
lds
xor
xchg
lea
ret
xchg
incl
outsl
out
push
dec
push
push
xlat
mov
shrl
inc
pop
fnsave
call
out
jno
or
push
outsb
and
jo
or
and
dec
dec
dec
fisttpl
lcall
cmc
jp
jp
scas
lret
push
pop
insb
loopne
inc
dec
jl
xor
jle
outsl
jmp
shl
shrb
inc
fsubs
pusha
out
fdiv
xchg
es
xor
push
movsb
jnp
cs
or
das
shlb
repz
add
or
pop
jns
sahf
enter
cmc
pusha
jb
bound
push
or
js
jae
inc
mov
inc
ret
outsb
gs
clc
call
das
xchg
lret
pop
push
insb
popf
and
call
popf
out
pop
pop
sub
mov
dec
arpl
dec
dec
dec
pop
cmp
scas
xchg
add
xlat
int3
outsl
dec
arpl
xchg
lcall
loopne
jns
pop
stc
pop
test
push
ja
xor
mov
jg
addb
loopne
out
jb
pop
adc
push
sahf
adc
nop
inc
sbb
pop
hlt
or
in
inc
dec
pop
xor
push
jecxz
call
jg
cmp
test
push
push
pop
push
repz
out
in
ljmp
pushl
dec
aam
inc
inc
and
jnp
insl
lea
xchg
pop
daa
iret
dec
dec
repz
lods
sbb
jmp
addr16
inc
or
push
pop
dec
cmp
je
adc
xchg
cmp
pop
mov
mov
insl
push
inc
cwtl
gs
mov
pushf
loop
fisubrs
bound
decl
jle
or
pop
rcll
sahf
push
and
lcall
inc
inc
repnz
cmp
jle
xchg
inc
push
xchg
out
imul
adcb
arpl
incl
inc
ret
add
jb
dec
repz
gs
imul
adc
cld
mov
out
sub
pop
lcall
jbe
in
fbld
jno
repz
pop
jmp
fwait
mov
push
dec
xor
pop
test
and
movsl
or
cld
incl
pop
and
das
scas
test
xchg
jmp
call
add
mov
mov
inc
lock
outsb
sahf
mov
inc
inc
arpl
in
or
lret
in
add
inc
mov
ret
ljmp
xor
fadds
popa
in
addr16
xor
jmp
push
pop
mov
out
les
jg
sub
leave
mov
dec
fildl
nopl
xor
dec
ljmp
xorl
or
scas
mov
test
outsb
mov
in
push
decl
jns
in
inc
lret
and
inc
cmpsl
mov
mov
xchg
mov
jae
mov
flds
mov
mov
fcomi
test
js
xor
or
or
mov
cli
call
push
insb
insl
dec
insb
mov
dec
inc
push
lds
xchg
mov
xchg
out
cwtl
rorl
jl
dec
push
js
into
sub
js
push
enter
mov
pop
xchg
cltd
ret
add
nop
mov
xchg
inc
adc
lcall
test
mov
sbb
je
xchg
notb
cltd
jl
dec
loop
jno
sub
or
adc
and
lcall
pusha
sbb
xor
pop
ja
xchg
stos
sarl
jo
in
sar
inc
outsl
add
int3
sub
ja
aad
inc
mov
call
gs
jo
lret
out
sbb
into
cmp
in
js
push
ja
decl
push
cli
sbb
xor
sub
daa
in
sub
out
cmp
and
mov
sbb
adc
ljmp
jne
xor
mov
fwait
loopne
std
mov
and
lcall
into
or
es
xchg
mov
pop
icebp
and
adc
clc
inc
repnz
jae
aas
into
shlb
lds
push
stc
push
sarb
inc
stos
xchg
cmp
cmp
clc
and
in
test
cs
jno
mov
cmpl
jg
stos
scas
cs
jp
sbb
jae
add
ljmp
scas
mov
cld
jmp
ret
cmp
sub
dec
das
addr16
lcall
sar
inc
and
in
dec
ds
inc
cmp
and
cmp
cmc
dec
push
rcrl
stos
mov
mov
xor
insl
add
ret
cmp
push
xchg
and
inc
mov
ljmp
push
push
dec
imul
sbb
sbb
cmp
adc
cmp
fidivrl
popa
enter
cmp
je
in
mov
dec
or
push
call
xchg
cmp
lcall
in
ss
fidivrs
pop
ljmp
ds
jbe
push
dec
lahf
sub
call
stos
and
mulps
jbe
test
xchg
stos
les
sub
add
test
adc
add
ja
sub
mov
adc
shr
add
adc
lret
push
mulb
jmp
adc
or
mov
cs
xchg
fcomps
stos
jns
fisubs
jae
cs
fwait
sub
cmp
aad
je
sbb
test
scas
cli
frstor
cmpsl
cmpsl
test
mov
ds
out
xchg
nop
test
sbb
mov
cmpsl
shrl
stos
icebp
pop
lahf
lret
imul
cs
call
std
jecxz
add
jns
fwait
dec
cld
sbb
push
xchg
xor
cli
jnp
filds
out
adc
int3
pop
bound
mov
xchg
jge
ds
lock
inc
fnstsw
lcall
hlt
push
stos
cmp
sub
add
in
add
adc
pop
in
incl
loope
inc
dec
jo
pop
out
xchg
jb
cmp
ja
pop
xorl
cld
insb
rclb
inc
lcall
mov
dec
inc
mov
pop
mov
or
addr16
pushl
std
mov
mov
jo
bnd
xor
gs
mov
jmp
mov
out
aas
fisubl
fs
cmpb
cmc
adc
xchg
clc
jg
jle
add
mov
cltd
outsl
test
imul
enter
outsl
mov
xchg
add
cld
lcall
sbb
xor
dec
xchg
stc
out
cmp
decl
outsb
add
pusha
mov
mov
leave
sbb
lcall
xchg
cld
mov
xchg
push
shll
or
jp
lret
add
xchg
ds
pop
shlb
das
push
shrl
mov
ja
add
scas
data16
cmp
jo
add
and
stos
out
fs
mov
incl
jecxz
sbb
xchg
loope
in
mov
std
and
push
adc
inc
out
sub
insl
stc
daa
scas
sub
dec
out
ret
outsl
push
out
cmp
cmp
inc
ret
fnstsw
dec
or
repz
decl
loopne
sahf
out
or
jge
sub
adc
adc
and
jmp
gs
inc
adc
rorb
bound
add
mov
mov
sti
sub
push
jae
xor
negl
push
or
in
popf
mov
push
cld
mov
dec
enter
incl
int
addb
inc
inc
and
roll
outsb
loope
jle
pushf
mov
mov
fsqrt
scas
out
hlt
fldl
lods
lock
orl
dec
rorb
push
mov
lock
ljmp
icebp
sbb
and
in
aas
inc
movsb
rolb
mov
repnz
das
lods
clc
ret
scas
add
jno
pop
push
rorl
cwtl
jp
subl
add
push
dec
pop
push
add
or
cmp
fwait
lcall
lock
outsb
and
and
out
and
in
decl
mov
and
push
jbe
and
jg
and
or
stc
das
mov
ss
adc
int3
adc
cmc
loopne
out
data16
lret
sub
dec
cmp
and
push
cmp
test
inc
add
shlb
xor
enter
or
inc
sbb
push
xor
clc
dec
mov
movsb
push
ficoms
push
mov
push
push
test
arpl
addl
decl
outsl
loopne
pop
push
test
or
push
or
inc
push
in
mov
lock
sbb
adc
scas
mov
push
les
shrl
pop
mov
rclb
or
nop
lock
push
jae
sahf
sbb
inc
shrl
incl
adc
aas
lahf
cli
mov
lret
pop
xor
push
into
mov
add
add
lahf
gs
jg
mov
stc
push
inc
sti
xor
push
jl
xchg
add
cmp
incl
cltd
fistpll
adc
in
sbb
adc
das
andb
outsb
das
xchg
mov
adc
aad
jmp
adc
push
int3
mov
call
jo
sub
jg
incb
jg
dec
xor
sbb
mov
inc
jg
out
and
enter
adc
inc
shlb
add
pop
dec
jmp
mov
inc
les
outsl
addr16
pusha
imul
xchg
mov
cld
jmp
mov
sub
cmpb
xchg
sahf
js
pop
jg
incl
xchg
test
cmp
mov
addl
pop
mov
sbb
test
push
mov
add
jp
ds
lret
je
xor
pushf
mov
ds
lcall
cmp
cmp
test
mov
pop
adcb
in
sahf
shll
jmp
adc
aas
ds
sti
dec
mov
push
stc
outsl
out
jmp
xor
sbb
and
cli
mov
cmpsl
ljmp
outsl
inc
cwtl
ret
pushl
inc
adc
dec
movsb
call
lret
sbb
jb
stos
rcrb
aas
mov
pop
mov
lcall
or
cmpsl
mov
test
ljmp
mov
sbb
sub
leave
loop
decl
into
sub
cli
pop
push
int3
pusha
push
shlb
pop
push
fs
movsl
rcrb
and
mov
bound
cmp
add
das
and
cmp
jg
popl
inc
outsb
fcomip
jmp
mov
add
pushf
dec
xor
add
aad
cmp
mov
jmp
addl
lret
mov
adc
test
incl
decb
cmp
mov
push
xor
mov
mov
push
or
lods
sbb
adc
and
lods
nop
ret
cli
call
in
sbb
mov
lods
dec
adc
sahf
cmp
mov
mov
sbb
nop
mov
and
jg
inc
sbb
inc
lret
mov
sub
jle
out
adc
push
dec
lcall
repnz
pop
push
and
xchg
addr16
jb
call
push
dec
rorb
loopne
and
stos
add
lret
xchg
jne
incl
insl
dec
nop
adc
xchg
aam
mov
inc
mov
es
gs
shrl
jmp
gs
mov
dec
clc
or
jge
xchg
inc
stc
sbb
jl
decl
pop
inc
xchg
push
inc
dec
int3
mov
dec
inc
pop
sbb
pop
leave
aaa
std
fwait
jmp
inc
jo
push
test
push
sbb
sahf
testb
mov
pushl
insl
jnp
lds
adcb
adc
fs
mov
mov
jns
pushf
inc
and
int
adc
pop
fidivl
ss
rcrb
outsl
movsl
ret
and
fistps
jl
cmp
add
fldt
jnp
xchg
ret
mov
loop
pushf
pop
rol
or
ds
mov
pop
shll
pop
inc
sub
cmp
out
dec
shll
or
pop
aas
pop
jne
lock
mov
sarb
pop
loopne
xor
dec
int
inc
mov
mov
in
pop
loope
pop
sar
decl
lock
sahf
jle
jns
mov
outsb
movsl
mov
loopne
cmc
pop
dec
mov
jmp
dec
enter
movsl
pop
ljmp
mulb
fldl
leave
call
dec
pop
dec
cmpsl
cli
dec
lds
push
sti
pop
push
ret
test
out
push
in
insb
in
mov
pop
icebp
decl
xchg
jae
push
jbe
pop
dec
mov
ficoml
jno
mov
fbld
push
loop
dec
in
jae
nop
inc
or
or
lret
data16
push
jmp
push
nop
dec
adcb
mov
xor
mov
outsb
out
jne
fadds
insl
data16
outsl
jne
jns
decl
es
push
jge
outsl
pop
mov
out
insb
jno
dec
pop
ret
test
xor
scas
aaa
ljmp
sub
rcrb
fildl
pop
add
xchg
loopne
fldcw
loop
loopne
les
icebp
test
pop
bound
fnstsw
jns
stc
xchg
addr16
jmp
pusha
lret
dec
push
roll
das
jecxz
inc
ret
adc
mov
inc
lcall
sub
ret
push
outsb
in
xor
rcrl
jmp
jl
jbe
sub
jmp
pushl
add
xor
push
lods
fisttpl
clc
lcall
scas
inc
out
push
cmpsb
lea
test
xchg
jg
pusha
mov
ljmp
mov
dec
repnz
pop
into
cmpsl
sahf
mov
inc
shlb
push
pusha
aad
insb
fsubl
fsubrs
mov
inc
mov
dec
lcall
es
gs
js
dec
push
pop
roll
lds
pushl
jno
cmpsb
repnz
jbe
dec
lods
test
mov
mov
sahf
jmp
nop
outsl
iret
add
lret
jbe
and
inc
xchg
es
adc
into
je
or
lock
pushf
push
shlb
mov
jecxz
jmp
jo
std
add
mov
punpcklbw
and
and
push
push
push
push
xlat
sahf
pop
xlat
add
mov
push
in
imul
mov
mul
push
pop
mov
jp
rorb
loop
es
jmp
jae
std
push
jge
or
jns
xor
inc
incb
inc
pop
loopne
sarl
jmp
jne
pop
les
ja
out
sahf
inc
inc
pop
pop
inc
je
call
shlb
inc
insl
xchg
mov
sar
in
ja
test
lcall
std
jmp
push
inc
pushf
fists
and
test
ds
das
aas
clc
dec
sbb
cltd
es
adc
data16
adc
aas
dec
in
add
sbb
lahf
adc
dec
jmp
jns
xor
or
ja
incl
shll
push
adc
mov
mov
call
jae
dec
dec
dec
out
push
push
es
std
jnp
imul
aad
inc
mov
mov
adc
or
add
xchg
mov
lahf
sub
cmp
icebp
mov
cwtl
pop
ds
ljmp
ret
shll
jno
mov
fst
out
mov
icebp
cli
jo
leave
out
jne
repnz
sar
int
mov
mov
leave
push
or
aaa
sar
jg
xchg
mov
ljmp
sahf
insb
and
loop
in
jbe
loop
adc
dec
mov
push
out
dec
ja
pop
jmp
xlat
stos
push
cmp
insb
cld
int3
lock
cli
pusha
xchg
jmp
les
mov
frndint
jmp
mov
or
xchg
in
data16
lret
inc
pop
std
cmp
repz
fsubl
fnstenv
and
pop
rcrw
es
jecxz
addb
movsb
mov
cmp
repz
jecxz
stos
movsb
in
jecxz
push
sbbb
jae
aam
hlt
mov
pop
in
imul
iret
out
lock
push
cld
mov
cmp
mov
ret
inc
lock
ja
cli
fs
cmp
aad
decl
gs
xor
fisubrs
cld
jg
ret
sbb
loop
arpl
push
inc
cmp
xchg
test
int3
daa
jl
loope
dec
mov
mov
xchg
pop
push
addb
dec
int3
mov
pop
scas
dec
sar
call
shll
pushf
pushf
mov
iret
pop
jns
daa
movb
scas
mov
insl
int3
lods
fs
mov
out
es
push
jge
ds
jo
jno
cmp
leave
lret
fucomip
pop
dec
popa
sahf
fiadds
mov
inc
mov
pop
cli
xchg
xchg
mov
out
cmc
popa
pop
cmp
push
mov
out
dec
jmp
inc
shlb
enter
fsubrs
dec
gs
dec
pop
loopne
and
mov
sub
ret
ret
cmpsb
mov
fildl
ret
mov
fiaddl
push
lods
xchg
ljmp
imul
mov
fldz
out
mov
fstpl
repz
fwait
sti
cld
ds
into
adc
jno
inc
jns
mov
cmp
popa
ja
push
inc
inc
push
push
lds
decl
stos
lods
inc
in
in
push
out
push
into
dec
jae
in
push
inc
call
shrw
out
xor
xchg
xchg
cld
frstor
push
jmp
or
pushf
push
cmpl
adc
les
or
mov
decl
or
add
xor
xor
cli
pushl
out
fcomps
cltd
sti
adcl
inc
icebp
ljmp
insb
lret
leave
movsl
add
jge
inc
in
pop
pop
push
pop
loopne
mov
insb
daa
jg
cmp
cmp
cltd
mov
xor
cltd
cmpsl
xchg
xor
mov
adc
incl
sbb
push
mov
scas
sub
cmp
or
inc
les
dec
mov
dec
cmpsb
fmul
push
jno
sbb
movsl
pop
push
bound
je
jae
aaa
jb
pop
cmc
pushl
pop
jne
xorl
pop
repnz
dec
iret
scas
adc
push
std
jg
cmp
xchg
ret
push
test
mov
cmpsb
push
mov
sbb
inc
out
mov
dec
push
mov
xchg
push
insb
lea
test
jmp
push
rcll
xchg
fs
cmp
push
sub
mov
cmpsl
xor
rorl
and
add
ss
repz
fcomi
filds
jl
adc
pop
inc
mov
xor
icebp
jg
es
mov
pop
dec
pop
and
outsb
mov
mov
jge
jns
push
sbb
jmp
jbe
inc
je
or
clc
out
jle
cmp
sar
stos
dec
jg
inc
add
mov
mov
push
jecxz
adc
adc
out
fstps
movsl
fisttpll
into
loop
sahf
mov
xchg
cwtl
mov
stc
mov
adc
into
js
adc
cmp
roll
decb
outsb
sbb
ffree
mov
not
cld
dec
jecxz
insb
xchg
sbb
clc
testb
and
cmpsb
stos
pop
xchg
fwait
mov
in
cltd
aaa
add
aas
es
dec
jo
xchg
push
inc
pop
inc
push
ffree
cmp
mov
dec
pop
xchg
xchg
mov
sbb
sbb
pusha
jg
popf
callw
dec
mov
push
push
xchg
adc
push
cmp
cltd
mov
sub
pushl
mov
dec
jne
xor
dec
push
es
lcall
mov
sbb
mov
lcall
or
xor
pushf
or
xchg
mov
pushl
dec
push
cmp
daa
jb
mov
jmp
lock
outsl
pop
loope
sub
xor
test
lret
aam
mov
push
push
mov
mov
daa
int
add
xor
in
imull
inc
sbb
ljmp
ss
jmp
fsubl
mov
cmpsl
lret
adc
inc
in
cmp
test
cmp
and
inc
sti
or
pop
movsb
ss
call
incl
cmc
cmpsl
push
icebp
ret
cmp
outsl
push
jo
cmp
xchg
mov
cli
scas
ret
push
sbb
repz
add
mov
xchg
pop
push
add
data16
es
out
and
push
aaa
mov
rorb
jmp
adc
inc
fs
jo
insl
inc
adc
dec
leave
cmpsl
add
xchg
sahf
cli
push
mov
inc
std
decl
dec
enter
add
bound
in
popf
xchg
sbb
out
mov
jg
clc
sbb
lods
cmp
imul
fsub
leave
inc
inc
incl
decl
scas
sarb
sub
arpl
add
push
incb
pusha
sbb
pop
mov
pop
cmp
in
out
sbb
out
xchg
in
sahf
cmp
mov
pop
popf
gs
xor
test
push
mov
and
jg
cmc
lcall
jae
stos
test
push
mov
pop
les
cmp
arpl
cmp
push
ss
cmpsl
dec
negb
sbb
mov
incl
push
pop
add
xchg
mov
jbe
jecxz
xchg
xchg
mov
mov
xor
jmp
sub
jl
mov
cs
adc
mov
mov
mov
imul
mov
mov
push
inc
in
add
pop
lret
stc
push
add
jbe
decl
fucomi
out
clc
inc
gs
xchg
outsl
push
cmp
inc
mov
inc
inc
int3
fcmovu
push
rorb
mov
ret
cmpsb
jge
xchg
jbe
jecxz
jmp
inc
dec
mov
arpl
xchg
xchg
movsb
in
add
out
lcall
mov
fdivl
outsl
test
shll
xor
dec
pop
sbb
call
adc
and
addl
push
mov
test
decl
mov
scas
repz
sbb
pop
mov
add
repz
test
sub
js
jo
popf
mov
call
jp
into
push
ret
icebp
outsb
dec
ja
mov
push
cmp
lods
add
test
loope
outsb
mov
outsb
jle
push
test
fildll
add
mov
cltd
xor
int3
sub
int3
scas
xchg
mov
mov
push
ljmp
sub
insb
cmp
and
aaa
add
clc
jmp
mov
mov
cmp
push
mov
push
xchg
sbb
push
aaa
std
incl
jmp
sbb
xor
cltd
sbb
lret
mov
mov
mov
jo
testl
mov
sbb
test
inc
cwtl
mov
decl
insl
sbb
dec
jle
inc
or
jecxz
mov
test
sbb
mov
inc
lcall
sahf
pop
add
cmp
push
lcall
inc
out
out
loopne
cld
mov
gs
jnp
fimuls
push
adc
movsb
loope
sub
jmp
or
ljmp
push
adc
mov
inc
cli
icebp
outsb
lcall
std
sub
pop
add
and
sbb
dec
dec
aaa
pop
aad
add
pop
repnz
sub
outsl
push
std
lcall
and
pop
or
movsl
xor
rclb
push
mov
lcall
mov
jg
dec
xor
into
movsb
in
es
out
pop
std
das
cmp
fs
and
pop
and
mov
mov
in
stos
arpl
mov
imul
imul
inc
inc
and
daa
push
sbb
out
xor
mov
xor
cmp
test
daa
xchg
mov
add
xor
sbb
ja
pushl
icebp
mov
jbe
scas
ret
pusha
pop
and
lods
orl
sub
bound
add
inc
push
and
sub
movsl
sbb
xchg
decb
push
jo
sbb
sbb
push
inc
or
stos
cli
sbb
sbb
mov
xchg
inc
cmp
in
mov
add
scas
cmp
call
fs
imul
ljmp
in
out
sub
fs
dec
rcrb
jg
inc
cmp
add
test
push
aam
js
jb
jmp
decl
and
in
scas
stc
mov
cmpsb
push
mov
das
dec
loop
pop
jmp
mov
jbe
fwait
xchg
adc
jge
cmpb
dec
xor
add
negb
ss
lcall
push
repnz
mov
xor
push
xchg
adc
jmp
iret
and
hlt
jns
out
push
sahf
pusha
lds
mov
sar
clc
popf
xchg
jnp
ss
sahf
sbb
icebp
cmpsl
outsl
sti
adc
call
testl
xorl
incb
push
out
aaa
iret
pop
sbbl
aas
insl
mov
xchg
std
ss
mov
push
mov
clc
sbb
mov
in
xor
insl
test
cmp
add
dec
ljmp
mov
xchg
sbb
decl
out
cmp
pop
and
dec
pop
push
scas
sub
cmp
xor
adc
mov
push
xchg
cld
call
cld
enter
cmp
test
orb
mov
dec
mov
mov
mov
adc
in
sbb
cmp
stc
push
or
pop
push
xor
das
in
popf
cmp
outsb
loopne
xchg
cmpsb
jmp
mov
push
push
test
mov
das
or
pushl
jl
sbb
adc
clc
sub
xchg
xor
loope
out
movd
repnz
mov
lods
add
addr16
lret
mov
inc
out
sbb
push
xor
clc
std
adc
xadd
cli
cmpsb
cld
adc
push
mov
inc
lret
push
inc
rcr
add
into
int3
inc
mov
sub
inc
hlt
sarl
call
in
mov
dec
outsl
adc
cli
mov
das
or
mov
xchg
sahf
fisubrs
jp
call
fldl
sbb
loopne
xchg
mov
cmp
sar
fs
dec
push
out
and
out
aaa
imul
jle
pop
imul
loope
jecxz
scas
test
gs
inc
push
mov
call
lea
xchg
inc
mov
aam
cli
movhps
xchg
lea
inc
mov
cli
push
mov
xchg
mov
inc
sbb
adc
push
loop
loop
loopne
das
nop
mov
sub
cltd
ficoml
dec
frstor
faddp
ss
mov
and
shll
loopne
call
shlb
shlb
pop
fs
mov
cli
adc
dec
out
out
or
sbb
add
test
xlat
test
out
popa
cmp
daa
std
ljmp
add
ret
sub
push
push
adc
xor
mov
test
jle
sahf
pop
cmc
mov
or
cmp
leave
mov
sahf
inc
gs
ja
xor
test
pusha
add
insb
aas
sahf
negb
mov
clc
sbb
into
mov
lds
mov
and
sbb
cmp
push
cli
adc
nop
xchg
hlt
andb
sub
push
and
clc
and
mov
shrl
test
mov
outsl
lahf
xchg
bound
xlat
add
fimuls
scas
cmp
inc
fwait
adc
addb
icebp
sahf
cmpsl
lea
aaa
movsl
pop
out
sysenter
call
lods
test
nop
ds
icebp
lahf
cld
jecxz
xchg
sahf
mov
cmpsb
mov
cmp
jle
into
xor
rorl
mov
lcall
adc
loop
sbb
xchg
mov
ja
fwait
cwtl
pop
push
enter
or
push
leave
cmpsl
sbb
cmc
xor
jns
notl
add
xchg
mov
inc
pop
mov
lret
shr
loopne
aas
mov
add
inc
out
das
mov
pop
icebp
mov
and
xchg
jbe
inc
ret
loope
es
ja
add
push
jl
push
stc
jb
fcomi
insb
xchg
mov
movsl
jb
and
ljmp
mov
out
adc
cltd
mov
fstpl
pushl
cld
jg
subb
int
sahf
mov
insl
hlt
mov
cmp
push
ljmp
cli
pushl
mov
xchg
push
adc
es
mov
lret
pop
pop
out
jg
out
test
imul
aas
fwait
mov
test
mov
xchg
cmpsl
cmpsl
hlt
ja
jle
adc
dec
iret
xchg
negb
or
les
push
cmc
aad
mov
push
fbstp
fwait
decl
dec
enter
lret
fsubs
push
sbb
mov
pop
cltd
hlt
out
out
sahf
out
inc
into
aad
xchg
aam
stos
fistpll
out
outsl
clc
jg
shll
mov
iret
push
mov
sub
xchg
incl
inc
stc
sarl
cmp
cld
call
iret
pop
stc
gs
inc
faddl
sub
sahf
stc
adc
idiv
and
xor
hlt
adc
in
mov
sahf
cs
xor
sub
in
into
ja
and
lock
pop
cli
data16
cmpsl
decl
add
loopne
sbb
xchg
pop
test
mov
test
mov
inc
jmp
bound
mov
dec
jp
adc
fs
xor
jg
out
lret
push
aaa
dec
cmc
sbb
push
gs
mov
mov
cmp
ljmp
mov
aaa
pop
rcr
mov
mov
scas
stos
test
lret
jmp
out
loop
fnstsw
lea
sarb
jbe
mov
jmp
idiv
xor
pusha
nop
push
and
or
test
int3
insb
fs
outsl
stos
jns
cmp
and
push
jno
mov
pusha
mov
cs
xor
mov
cmpl
sbb
cmp
aas
pop
ret
mov
lret
xchg
mov
call
loope
jbe
or
inc
mov
test
dec
call
lock
lahf
mov
enter
sub
sbb
cli
in
sahf
fdivp
pop
mov
lods
adc
mov
cltd
jcxz
decl
fcoml
push
add
outsb
mov
or
int
xchg
dec
mov
mov
or
jl
dec
jp
sub
adc
ret
decl
clc
xor
inc
push
xchg
les
sbb
fisubs
scas
push
pop
out
cmp
cmc
adcl
push
popa
clc
aad
push
cwtl
dec
mov
mov
in
arpl
test
pop
or
out
aaa
ljmp
shr
xlat
lret
add
lock
mov
inc
out
adc
push
movsl
pop
mov
aaa
pop
daa
sub
xchg
rorb
loopne
jmp
lock
ljmp
dec
repz
pop
sbb
pushl
call
sbb
adc
jns
pop
mov
lret
mov
sbb
loopne
and
filds
out
ss
mov
aaa
dec
sbb
adc
adc
mov
mov
pop
out
cld
mov
pushl
jbe
mov
or
ja
repz
adc
jecxz
mov
dec
clc
ljmp
in
inc
and
aaa
fsubrs
pop
jecxz
push
mov
out
mov
mov
lcall
es
stos
lods
daa
xchg
clc
or
and
adc
and
cmpsb
ret
lcall
dec
into
and
lahf
pop
xchg
es
jne
mov
aas
decb
adc
scas
xor
gs
jns
ljmp
sbb
repz
fwait
inc
xchg
mov
fidivs
mov
loopne
inc
or
imul
cwtl
hlt
dec
loope
out
in
mov
out
mov
cmp
mov
mov
sub
mov
fwait
mov
lock
adc
inc
orl
jmp
and
dec
push
ret
pushf
push
test
aaa
outsl
inc
aas
pop
cmpsl
jno
cld
mov
jb
push
es
sbb
test
or
outsl
mov
xor
in
lcall
mov
inc
les
nop
sbb
and
test
mov
pop
jg,pt
icebp
jg
into
mov
xor
mov
dec
test
mov
lcall
stos
push
sahf
daa
add
mov
rorl
nop
mov
aaa
mov
jge
add
and
or
jecxz
arpl
scas
inc
push
and
mov
dec
add
mov
pop
mov
inc
insl
jne
xchg
scas
js
dec
mov
popf
pop
jae
out
cli
dec
sbb
loop
mov
mov
push
hlt
jmp
inc
cmpsb
push
insb
lcall
pop
fcompl
pushaw
xchg
test
inc
xchg
mov
dec
ret
sbb
jle
pop
test
cld
repz
pop
test
int3
sub
dec
jns
pop
loope
lcall
dec
fwait
mov
sub
imul
xchg
adc
in
xchg
mov
cmp
xor
test
xchg
decl
aas
add
aaa
mov
lcall
inc
clc
gs
call
mov
dec
es
xchg
mov
jp
cltd
cld
dec
jo
test
cltd
popf
rcrb
inc
push
push
fwait
jg
and
addr16
aaa
mov
clc
pop
adc
aad
in
mov
and
loopne
sahf
adc
out
cmp
and
ja
ljmp
mov
sub
pop
lcall
add
fists
popaw
in
pop
adc
inc
push
mov
ds
lock
cmc
mov
outsl
movsb
push
pop
xchg
xchg
mov
jle
outsl
out
shrb
and
addr16
push
pushf
jle
idiv
fst
call
enter
cmp
cwtl
and
repz
pop
jo
push
lock
pusha
popa
nop
pop
push
bound
js
les
jb
cmpsb
lea
loope
pop
movsl
inc
dec
leave
mov
add
jae
outsl
adc
inc
inc
rcrb
add
ja
mov
or
mov
mov
pop
loopne
pop
ret
ret
or
jno
into
mov
and
bound
pop
adc
rcrl
and
ja
mov
jp
adc
jae
lahf
test
push
int3
outsl
je
dec
dec
mov
repz
and
inc
pmullw
test
push
pop
sbb
test
jg
movsl
pop
push
pop
test
adc
xor
xor
pop
push
fisubrs
je
or
adc
push
xor
inc
inc
cmp
ret
clc
lret
xchg
and
or
xor
mov
in
mov
sub
cmp
in
cs
fwait
push
mov
add
add
xchg
and
addr16
es
inc
mov
aam
loopne
pushl
lcall
adc
inc
inc
xchg
sbb
cltd
mov
pop
into
pop
jge
pop
sahf
push
sub
ds
or
call
rclb
push
pop
enter
aaa
and
mov
mov
loop
mov
inc
dec
insl
jbe
test
sbb
ljmp
bound
aas
test
lahf
fwait
mov
add
rorb
mov
mov
mov
sarb
cmp
ds
jp
inc
insl
and
xchg
imul
fnsave
cmpsb
aas
adc
scas
sbb
pop
movsb
push
pusha
cmpsl
popa
or
fs
mov
es
mov
int
adc
inc
adc
push
push
ret
fs
ljmp
inc
xchg
popa
stos
inc
mov
xchg
and
std
push
call
cmpsb
clc
push
mov
xchg
lds
ljmp
sub
outsb
shll
imul
jge
and
int3
xchg
dec
or
lcall
push
aaa
cwtl
lock
pop
and
mov
testl
das
movsb
scas
push
and
ljmp
js
dec
cmp
int
adc
jge
mov
syscall
std
mov
inc
sbb
shll
jb
mov
xor
jbe
roll
dec
adc
sub
test
cmp
jmp
and
sbb
data16
push
out
ret
mov
adc
mov
subl
xorl
out
xchg
daa
dec
mov
mov
adc
decl
sbb
mov
inc
and
push
dec
mov
lcall
pop
iret
test
sahf
pop
imul
sbb
mov
test
mov
add
jbe
sbb
mov
sub
enter
inc
std
inc
xor
adc
push
scas
xor
aaa
out
dec
xchg
mov
or
setnp
incl
add
jnp
sbb
jae
ljmp
out
cmpsl
and
js
lods
push
mov
inc
mov
aas
and
mov
xchg
popa
inc
push
pop
jg
mov
lea
test
mov
pop
shll
and
lret
decl
mov
xchg
push
cmp
aas
rcrl
and
jg
lcall
icebp
pop
fs
pushf
ret
loopne
ds
pusha
jmp
arpl
cmc
incl
mov
sub
rorl
daa
les
push
jl
push
mul
insb
pop
xor
adc
loopne
shrb
push
xor
int
inc
inc
stos
loop
icebp
cmpsb
fldt
sahf
popa
les
ds
xchg
lock
ds
push
lds
jp
pop
cmp
outsb
jo
dec
xor
xor
inc
push
in
sub
popa
call
loopne
mov
mov
je
dec
loopne
test
push
int3
das
push
js
mov
outsb
loopne
nop
inc
dec
fbld
leave
adcb
das
outsl
push
loopne
std
scas
inc
push
test
test
popl
pop
mov
pop
ss
jge
ret
mov
fs
out
pop
js
add
xor
imul
inc
dec
ja
hlt
mov
mov
push
ret
inc
jg
xchg
xor
cmc
sub
ljmp
sub
mov
inc
pop
pop
dec
jge
xchg
mov
pop
mov
inc
xchg
mov
xor
gs
or
fldenv
xchg
sbb
enter
loopne
sbb
imul
out
mov
loope
or
ds
adc
add
add
adc
cwtl
inc
cld
call
dec
push
push
nop
adc
pop
mov
push
adc
mov
mov
ret
xchg
iret
rorl
mov
sbb
jb
push
repz
cmp
stos
add
dec
lea
les
pop
xchg
inc
mov
lea
sbb
add
incl
mov
sub
js
cmp
pop
dec
fs
push
mov
mov
gs
ret
and
cmp
fists
out
daa
inc
ljmp
sbb
cli
mov
pop
scas
lahf
dec
adc
pusha
call
xor
jg
ret
gs
push
inc
loop
dec
decl
xor
stos
mov
lret
ds
dec
jno
or
pop
cli
lcall
xchg
insb
pop
addr16
and
sar
mov
outsl
pop
push
aad
push
in
ss
push
pop
add
aaa
std
lcall
cmpsl
ret
jg
sub
sub
mov
add
scas
jbe
add
xchg
xchg
movsl
test
cs
pusha
call
or
je
xchg
mov
fs
dec
movsb
decb
add
xor
mov
lea
lcall
ljmp
sbb
jbe
pop
xchg
fstpl
add
sbb
mov
je
stos
sub
xorb
test
mov
mov
pushl
sbb
pop
bswap
hlt
lock
jns
cmp
fsts
imul
jg
lock
mov
push
dec
mov
xchg
and
ljmp
and
cmpsl
and
pop
fadd
je
subl
ljmp
lea
push
add
adc
mov
enter
adc
rolb
pop
je
movsl
movsl
mov
dec
fs
call
js
fs
jle
jmp
loopne
sbb
push
mov
inc
push
pusha
xchg
in
add
adc
push
xlat
lcall
scas
mov
push
adc
hlt
cmpsb
or
inc
shll
subl
icebp
data16
data16
cmpsb
fwait
push
xchg
inc
imul
jbe
and
cs
cld
movsl
std
and
mov
fwait
add
mov
push
ljmp
pusha
jge
mov
adc
push
lds
fs
jle
pop
insl
push
and
or
pushl
out
pop
add
es
sbb
adc
fildl
rolb
mov
rcrl
and
mov
lods
cmp
jmp
jno
scas
in
xchg
pop
out
cmpsl
mov
sub
repz
pop
jns
imul
sarb
and
arpl
popf
int
imul
dec
push
lds
push
or
insl
cltd
inc
jp
aas
pop
adc
inc
adc
ret
jg
cld
add
dec
mov
outsb
movsl
dec
jl
xor
fmul
mov
int3
mov
mov
mov
adc
mov
inc
dec
add
stc
imul
imul
jge
inc
xchg
daa
decb
inc
pop
pop
jns
pop
jb
out
frstor
sbb
arpl
mov
adc
fs
data16
push
jno
jg
mov
jno
add
cmp
jg
lods
subb
pop
jo
daa
xor
pop
aad
xor
mov
outsl
jbe
clc
inc
ret
dec
faddl
sub
push
adcl
lcall
pop
mov
push
push
aas
inc
scas
cmpsl
mov
aas
and
dec
pop
test
es
mov
sbb
int
pop
pop
mov
and
orb
pop
cmp
push
data16
jp
add
repnz
call
or
cmp
or
xchg
jg
or
or
ljmp
cmp
xor
stos
jne
xor
bound
aas
dec
mov
sahf
pop
jbe
das
mov
xchg
jmp
jmp
test
push
cld
jg
mov
or
inc
mov
das
lods
sub
fwait
sti
mov
daa
movsb
mov
mov
lea
mov
je
pop
scas
mov
add
and
pop
stos
push
jo
movsb
xchg
mov
pop
pop
push
ss
mov
jg
cwtl
jne
xor
movq
jg
inc
mov
cld
incl
es
add
add
ds
cmp
hlt
arpl
ljmp
or
test
mov
js
outsl
in
xchg
adc
lcall
data16
pushl
and
push
fwait
lock
test
ljmp
in
fwait
pop
fmuls
pop
add
add
repz
mov
pushl
jg
imul
dec
cmpsl
inc
clc
mull
in
leave
movsb
fs
jae
and
pop
add
mov
inc
out
mov
fldenv
and
pop
in
lods
pop
sbb
inc
inc
adc
cmpsb
es
andb
xchg
dec
push
mov
jle
inc
cmp
sbb
jb
xchg
lds
fwait
or
push
pop
cmp
movb
add
fmuls
and
push
xchg
lods
and
es
enter
sub
out
mov
push
js
and
push
fdivr
or
push
inc
sub
pop
cmp
stos
int3
mov
mov
adc
mov
pusha
ja
aas
mov
jmp
outsb
or
insb
jge
sbb
gs
xlat
stos
cmpsb
inc
outsl
dec
fildl
pop
fwait
pushw
gs
ds
mov
inc
jle
dec
mov
pop
mov
insl
xchg
cwtl
pop
nop
lods
lods
jg
idivb
adc
mov
jno,pn
loope
sub
pop
hlt
outsl
adc
cltd
rorb
pop
movsb
jle
dec
mov
dec
pusha
mov
or
scas
pop
inc
xchg
cld
ljmp
shrb
lods
adc
sbbl
xor
fwait
add
pusha
mov
pop
sti
imul
cld
decl
push
aas
push
movsb
cmp
xor
test
pop
pusha
loopne
ret
sbb
xchg
pop
out
outsb
dec
dec
and
arpl
lret
andl
into
decl
bound
cmp
loopne
jle
rorl
push
gs
push
mov
lock
sahf
lahf
pop
push
xor
mov
jbe
dec
dec
outsb
jno
sbb
jg
call
xchg
hlt
push
mov
lea
push
cmp
and
jg
cmc
push
dec
pop
inc
cmpsl
cmp
mov
jmp
or
xchg
pushf
cltd
mov
xchg
nop
outsb
push
xchg
add
shlb
jg
lock
loop
inc
out
push
repz
fisttpl
inc
iret
sub
push
std
xor
dec
rcr
out
arpl
gs
mov
leave
mov
adc
jge
fsts
xchg
rolb
ds
das
lcall
js
lcall
lret
dec
cmp
mov
fiaddl
ds
stos
cmp
fwait
test
scas
sbb
cld
mov
repz
lods
xor
dec
imul
incl
and
xor
cltd
out
and
lcall
fxtract
lcall
incl
fcomi
rcll
test
jmp
inc
push
not
shll
xchg
daa
sahf
dec
add
inc
ja
out
mov
out
xor
jb,pt
jp
insl
sub
dec
stos
incl
out
push
mov
xchg
mov
sub
inc
jae
pop
and
xor
sub
lods
in
adc
cmpsb
or
ja
incl
bound
ljmp
jo,pt
push
js
ss
mov
aas
mov
es
and
aaa
mov
adc
ja
dec
and
fiaddl
sub
lods
int3
sbb
arpl
xchg
add
jg
lcall
negb
dec
outsl
gs
ds
in
jg
pop
sbb
add
pop
in
dec
ret
dec
je
fistpll
push
lahf
mov
push
scas
fisttps
lods
fimuls
loopne
jno
mov
aam
cltd
scas
sbb
adc
or
push
in
js
loop
ja
dec
fstpl
inc
push
jno
cli
inc
les
jno
cmpb
jbe
rorb
or
inc
repz
mov
xchg
adc
push
insb
dec
mov
nop
add
repz
cld
ja
push
or
enter
lret
inc
xchg
mov
xchg
adc
mov
mov
xor
push
stos
outsb
mov
ss
cli
jmp
xchg
scas
repz
push
push
jg
test
dec
scas
das
dec
loop
xorb
push
fs
dec
das
cli
dec
std
lahf
ficoms
add
sub
pop
ljmp
ja
inc
inc
dec
inc
addr16
bound
bound
incl
jb,pn
aad
jbe
mov
cmp
sub
daa
ljmp
mov
xchg
or
jnp
gs
push
ret
jns
ja
add
cmp
int3
insb
ret
cmp
cmc
mov
jb
sbb
popa
ss
and
notl
add
inc
cld
push
mov
mov
dec
insb
je
lcall
sub
fbstp
push
out
push
daa
in
push
inc
sub
je
inc
inc
cmp
leave
push
mov
lcall
negb
cmp
and
xlat
jl
stc
nop
mov
call
std
pushf
outsb
jbe
cmc
push
mov
test
dec
ret
and
xchg
adc
jecxz
outsb
in
adc
mov
lods
outsb
lret
mov
decl
lea
lock
xchg
mov
xor
fwait
es
xor
jge
sub
dec
cmpsb
xor
inc
test
jl
add
push
fldt
lret
dec
inc
pmullw
lds
imul
jg
xchg
mov
imul
lea
push
aas
fsubs
jg
add
push
jb
es
stc
rorl
clc
call
inc
pop
mov
lods
sarb
mov
cmpsb
mov
fwait
scas
js
out
push
cmp
into
mov
ljmp
push
in
inc
jp
dec
fwait
jge
pop
addr16
incl
mov
sbb
push
aad
or
outsb
pop
mov
mov
inc
mov
test
lcall
in
jne
xchg
call
std
sbb
xchg
iret
jo
pop
inc
inc
inc
daa
lea
jae
stos
icebp
incl
rcll
inc
pop
add
lret
jnp
mov
pushf
out
push
jne
out
cli
lcall
fs
mov
mov
aaa
imul
gs
mov
jmp
adc
push
idivb
pop
negb
iret
dec
imul
or
cwtl
mov
lods
in
std
ljmp
xor
push
das
dec
xor
adc
shrl
scas
adc
pop
add
mov
or
xchg
insl
lret
jp
mov
sbb
xor
mov
iret
mov
adcb
jecxz
jb
lock
mov
sar
out
mov
gs
ljmp
daa
shll
std
incl
adc
insb
jae
inc
fdivrs
sarb
je
rolb
mov
inc
add
inc
jmp
jne
mov
push
cmpsb
dec
add
outsl
into
adc
call
pop
int3
sbb
push
arpl
imul
std
decl
cld
mov
leave
inc
jmp
jbe
dec
dec
in
xor
js
ds
add
dec
pop
test
jb
and
inc
mov
popa
shrb
and
mov
jno
pushl
cmpsb
jp
fsub
xchg
dec
adc
xor
ret
push
mov
xchg
jbe
cs
in
push
jl
pop
hlt
fildll
je
add
pop
pop
faddl
inc
push
lret
out
scas
in
dec
pop
sbb
incl
adc
xchg
push
push
mov
jl
mov
or
jbe
adc
jbe
mov
mov
cmp
cmovo
push
xor
leave
mov
inc
test
cmp
cld
jmp
xchg
push
xchg
mov
bound
fsubl
incl
sub
jecxz
insl
leave
inc
into
movsb
xor
cmp
lds
test
add
adc
shrl
and
negl
push
sub
dec
lcall
sahf
pushf
cs
and
in
mov
pop
fdivl
pop
test
popa
push
ss
dec
xchg
aas
dec
add
call
rorb
inc
xchg
popa
gs
sbb
xchg
or
stos
jg
test
inc
mov
inc
std
incl
imul
cmpsb
scas
or
popa
sbb
inc
jp
incl
xchg
adc
stos
lahf
inc
inc
pop
das
pusha
inc
push
dec
repnz
pop
sbb
in
dec
cli
jg
incl
jl
in
pop
out
movsb
inc
inc
ficoml
fs
addr16
ds
int3
or
push
out
cmp
sarl
jecxz
mov
add
std
and
les
lahf
lods
mov
dec
sbb
scas
clc
mov
or
fidivrs
push
inc
jp
cmp
mov
incl
dec
nop
add
and
dec
xchg
xor
aaa
inc
pop
dec
enterw
cmp
push
xchg
rcr
arpl
jg
push
cmpl
outsb
mov
dec
inc
lret
mov
xor
fldenv
shrb
and
mov
inc
cwtl
sbb
sahf
jbe
sub
stos
imul
inc
inc
dec
push
xchg
dec
sti
lcall
inc
testb
sub
repz
arpl
dec
out
lret
ljmp
fs
enter
cmp
mov
leave
mov
incl
lock
mov
cs
jp
jle
sbb
js
sbb
add
pushl
bound
sub
aam
sbb
adc
xorb
stos
decl
ret
fwait
xchg
ss
mov
mov
call
fwait
dec
lods
sbb
ds
mov
add
test
mov
stos
inc
cld
pushl
adc
leave
dec
imul
cltd
push
cmp
jg
pop
xor
mov
inc
mov
call
ds
xor
setae
inc
mov
xor
inc
mov
sar
es
imul
jg
mov
outsl
subb
stos
sbb
test
mov
pop
add
add
adc
scas
cmpsl
fldcw
push
sarl
mov
add
insb
nop
adc
dec
data16
rcll
std
push
les
mov
int
es
sbb
ja
adc
test
mov
lea
incl
es
cltd
xor
iret
mov
stc
sub
popf
movsb
mov
lock
pop
clc
ljmp
cmp
loop
mov
mov
stos
adc
adc
lahf
setp
lea
stos
jo
jg
incl
jg
xchg
jae
mov
in
movsl
mov
mov
inc
dec
out
outsb
int3
adc
push
push
lea
decl
inc
and
insb
cmpsb
adc
jg
lock
int
xor
add
sbb
out
cmp
pop
add
lret
inc
loop
fisttpll
mov
push
pushf
je
fsubp
lcall
sbb
xchg
push
aas
or
sub
dec
roll
test
out
aaa
scas
pushl
add
pop
jbe
adc
fldt
pop
insl
fstl
jg
incl
adc
fs
push
mov
push
ja
lods
aas
outsl
orb
ljmp
std
add
xchg
xor
xchg
mov
dec
cmpsl
add
pop
clc
js
das
sub
scas
repnz
fisttpll
cmovl
jg
lock
add
loope
mov
inc
mov
inc
xchg
add
leave
cmp
sub
and
sahf
mov
cld
decl
add
data16
xor
inc
mov
add
sar
add
adc
cmp
sub
jg
or
sub
imul
adc
sbb
fstpl
sbb
mov
cmpb
repz
lods
popa
sbb
fdivrs
jg
or
repz
inc
adcl
pushl
bound
lahf
adc
add
mov
pusha
xor
mov
jecxz
dec
outsl
jle
test
mov
xor
cmp
shlb
mov
add
jle
clc
add
dec
repz
adc
cwtl
pop
mov
scas
pusha
insb
xchg
sub
pop
lock
xor
mov
adc
jg
in
jb
or
popf
out
popf
aad
aaa
add
outsl
outsb
add
scas
cmp
outsl
mov
ljmp
mov
in
inc
ret
adc
mov
loopew
fimuls
in
nop
dec
pop
jne
and
dec
nop
pop
fisubl
in
mov
push
add
call
mov
out
add
movsl
fisubl
mov
fstpt
js
adc
mov
das
scas
bound
add
push
xchg
in
push
fcomip
test
adc
fidivrl
in
adc
mov
mov
scas
decl
push
or
mov
push
adc
ret
es
popa
add
lcall
cmp
push
jae
int
jns
shlb
incb
lret
xor
adc
filds
lock
dec
outsl
ss
std
mov
pop
gs
mov
enter
adc
aaa
adc
out
mov
ret
and
mov
mov
add
mov
aam
jb
repnz
ja
scas
sbb
sbb
cs
cwtl
imul
stos
push
rolb
movsb
ss
cwtl
mov
mov
out
cli
lcall
xchg
mov
shll
sahf
pushf
lcall
fs
lcall
inc
sub
in
dec
mov
dec
pushl
loopne
add
push
pop
add
sbb
cwtl
repnz
mov
or
pop
push
aaa
fistpll
lock
mov
mulb
aas
pop
cmp
push
les
fnstcw
pop
stos
repz
pop
xor
call
mov
popa
cmp
sbb
push
mov
clc
ljmp
or
data16
or
xor
rorl
rep
dec
das
mov
adc
mov
dec
std
aaa
fwait
daa
push
push
mov
mov
mov
jmp
and
ds
mov
mov
je
aaa
lock
out
push
cmp
jne
jp
jae
cmpsb
es
push
jmp
dec
add
sbbb
mov
inc
and
xor
cmp
cmp
sbb
fidivs
sar
sbb
xor
sbb
and
rcrl
pop
sar
push
in
cmp
sbb
inc
jp
shlb
pop
mov
push
imul
inc
sti
ds
pop
dec
jno
aaa
pop
enter
push
out
lock
stos
daa
insb
fimull
mov
xlat
dec
adc
cmp
jl
dec
sar
outsl
mov
les
inc
fs
and
loopne
fimuls
jnp
stos
xor
ljmp
add
rorb
jb
fdivrs
addb
es
sahf
loop
sarb
sub
and
hlt
filds
dec
inc
in
cmp
addr16
push
int
dec
mov
cmp
xor
lea
mov
std
pop
es
leave
adc
sti
popa
iret
jns
xchg
push
out
insb
outsl
icebp
mov
push
inc
mov
dec
xchg
aas
imul
mov
incl
xor
or
mov
jle
pop
movsb
inc
mov
or
loop
into
add
sbb
or
dec
pop
scas
inc
popf
pop
adcl
std
jmp
jmp
xchg
andl
fs
or
xor
adc
cmp
jno
and
clc
mov
or
push
dec
pop
insl
jb
incl
les
and
insl
insl
cs
fs
je
cltd
sub
les
sbb
scas
lret
and
inc
mov
mov
or
fsubrs
or
mov
out
pop
pop
jg
xor
dec
fimull
jb
push
insb
fcoml
push
gs
enter
jmp
cmp
aaa
in
cli
fldt
jl
sbb
lahf
and
adc
jbe
jae
and
call
sub
icebp
stos
imul
movsb
jle
and
popf
test
xchg
mov
pop
test
gs
aad
aas
xchg
clc
lret
insl
jge
into
es
lods
pop
sbb
cmp
aaa
faddl
and
xchg
and
mov
decl
les
test
ret
ds
pop
subl
sahf
loope
daa
xor
sub
jbe
adc
and
mov
clc
call
adc
fbstp
jl
test
and
dec
mov
dec
mov
lcall
fisttpll
jp
jb
inc
inc
jg
mov
and
fsubrl
rolb
inc
lock
sub
and
loope
cmp
push
rol
fistps
scas
xor
inc
mov
nop
mov
cmp
lcall
xchg
add
pusha
push
pusha
adc
push
or
hlt
add
lcall
adc
inc
cmp
sub
popa
sbb
adc
pop
nopl
pop
sbb
adc
repz
lods
cmp
enter
cmpsb
stc
test
inc
into
das
lahf
out
aaa
pop
ror
cmpb
mov
test
jno
fs
pushf
add
cmp
out
aaa
out
xchg
sub
push
stos
sbb
mov
incl
imul
add
inc
mov
xor
test
fnstsw
movsb
mov
cltd
mov
mov
sahf
cld
cmp
sub
std
leave
loopne
cmpsl
or
popf
adc
push
and
mov
and
xor
add
icebp
orb
mov
stos
mov
pop
lcall
mov
les
sahf
call
icebp
mov
sbb
lods
sbb
js
cwtl
sub
jge
das
mov
pop
adc
repnz
mov
mov
mov
mov
out
mov
mov
lret
rorl
out
and
clc
sti
sub
cmpsb
inc
jbe
adc
xor
jns
fsubrs
arpl
in
or
decl
cwtl
roll
sbb
mov
loopne
test
aaa
jmp
mov
lods
jbe
xor
push
cmp
jns
add
jmp
lea
lret
icebp
fs
pop
pop
lods
mov
out
lahf
repz
cld
cmp
in
mov
in
push
icebp
sbb
daa
jl
stos
inc
scas
ret
lahf
cld
mov
add
inc
and
jae
data16
inc
cs
punpcklbw
fcomip
sub
sub
cmp
push
or
jle
sub
pop
cmp
imul
xor
jg
sub
imul
or
es
lcall
sbb
inc
push
adc
or
cmp
and
sti
into
mov
in
jecxz
sarb
add
rcll
ret
mov
mov
xchg
je
mov
xor
mov
push
shlb
js
push
lods
xacquire
stos
push
mov
out
mov
shrb
mov
outsl
xchg
cmp
es
loop
adc
call
pop
mov
push
sahf
test
loopne
imul
outsb
or
in
movsl
sbb
sbb
fbld
mov
xor
dec
mov
mov
ds
sbb
movsb
mov
lods
add
pop
arpl
add
les
dec
iret
xor
fcomip
mov
push
int3
decb
pop
clc
mov
cmp
and
jge
stos
push
sbbb
cmp
pop
mov
pop
pop
cs
fcomip
and
push
lcall
test
or
fldenv
lahf
sti
clc
sbb
mov
stos
lahf
frstor
and
popa
call
sbb
cmp
inc
push
stos
push
jl
aaa
and
movsb
fsubs
outsl
enter
int
add
push
pop
lock
push
cli
jg
enter
adc
mov
mov
jne
add
sub
cmp
inc
lcall
mov
cmp
in
add
cmpsl
xor
cmp
add
jae
test
xor
lcall
xor
xor
or
jo
gs
lret
sub
das
jl
push
ficoml
xchg
push
adc
pushl
outsb
fs
test
pop
mov
adc
or
sahf
cmp
cmp
or
decl
in
push
push
sbb
mov
pop
and
pop
shll
mov
xchg
and
cmpb
xchg
movsb
lock
jb
add
aas
mov
ljmp
into
or
pop
xor
scas
rorb
and
cmp
mov
adc
cmp
add
mov
pushl
xchg
and
or
and
test
cmp
std
push
inc
aad
mov
dec
scas
adc
and
mov
sahf
jmp
ljmp
das
jp
daa
lahf
call
nop
int
inc
dec
dec
mov
add
pop
sbb
adc
ja
xchg
xor
adc
js
pop
dec
adc
clc
cmp
mov
xchg
pop
mov
mov
xor
xor
pop
push
add
cmp
sbbb
fwait
sub
fdivrp
sbb
enter
and
lahf
cmp
inc
inc
fwait
out
adc
or
decl
mov
xchg
push
adc
scas
jmp
sub
es
mov
in
mov
and
lcall
popa
push
inc
mov
cmp
add
mov
or
sub
mov
push
aad
adc
jle
incl
and
mov
cmp
fwait
test
rorb
loopne
pop
aas
and
test
jmp
pushf
xor
stos
mov
pop
dec
ljmp
pushf
int3
nop
push
cmp
mov
adc
dec
mov
or
add
pushl
push
pop
lods
adc
mov
pop
jg
sahf
rolb
cmp
and
add
aad
push
popa
inc
mov
xor
sbb
pop
xchg
out
mov
add
jmp
cmp
mov
adc
mov
jns
cli
cmp
and
ljmp
xchg
lds
xchg
and
mov
sub
xlat
mov
and
xchg
adc
mov
or
inc
xchg
sti
ss
sbb
lcall
and
adc
pushf
fists
mov
xchg
and
incl
inc
mov
push
jo
and
pop
mov
outsb
and
jmp
outsb
push
mov
inc
decl
outsb
mov
mov
add
push
dec
dec
add
lds
sub
add
cmp
shlb
inc
xchg
call
ror
dec
sub
lret
cmp
aam
jg
aas
add
or
xorl
mov
ljmp
mov
div
mov
xchg
add
loopne
xchg
push
sbb
enter
jg
daa
push
sub
add
xor
addr16
mov
add
call
into
loope
adc
scas
cmp
pop
mov
leave
inc
jl
mov
mov
cmp
cld
xchg
cmp
outsb
mov
fdivrp
jne
cmp
lcall
mov
cmp
mov
jbe
cs
lcall
mov
jg
mov
mov
add
dec
fwait
mov
fisubs
jns
push
insb
fdivrl
test
ret
pop
jno
das
aas
xor
daa
mov
repz
mov
clc
mov
ret
shll
push
jno
xchg
in
xchg
xchg
mov
rclb
sbb
push
push
and
test
ficoms
popa
mov
lret
jo
cld
loope
push
adc
fwait
mov
ljmp
scas
lods
mov
arpl
test
scas
adc
loop
mov
mov
mov
jnp
adc
out
mov
sbb
and
cs
test
sar
dec
clc
cmp
sub
xchg
adc
push
loopne
scas
mov
jb
or
fbld
jg
test
rol
adc
sbb
lea
outsb
sbb
in
cld
ja
and
add
inc
call
cs
imul
jmp
sbb
shld
orb
adc
lock
stc
int
jle
or
adc
mov
test
aaa
mov
ret
mov
sbb
and
fistpll
xor
lret
mov
movsb
icebp
jmp
out
mov
icebp
cs
sub
roll
loop
es
sub
enter
pop
les
repz
mov
or
lock
jecxz
sahf
cmc
sarb
in
mov
sahf
fwait
or
test
es
negb
in
mov
jecxz
repz
inc
xor
sbb
fldt
lret
sti
mov
cmp
in
jg
ljmp
jne
or
sti
es
cmpsb
mov
xchg
cmp
roll
xor
pop
les
lds
js
scas
jle
jbe
xchg
inc
sub
push
clc
stos
mov
enter
subl
mov
mov
pusha
jae
cmpsb
add
or
out
pop
ljmp
cmc
loopne
jbe
xchg
xor
cmpl
xor
nop
xor
loope
clc
ljmp
push
xchg
dec
push
sub
cmp
jmp
push
push
push
push
popw
push
inc
mov
scas
call
stc
sbb
jge
push
inc
add
nopl
cli
mov
pop
les
cld
sbb
das
cli
lcall
push
addr16
sub
inc
in
mov
jns
lcall
test
insl
push
ja
inc
mov
clc
pop
jo
adc
call
inc
pop
addl
mov
dec
add
pop
pop
dec
xchg
loopne
cli
mov
int3
sbb
add
adc
pop
cwtl
inc
lock
mov
push
pop
lock
jmp
jb
inc
scas
adc
test
add
mov
mov
aaa
mov
lcall
xor
cmpl
cmp
cmp
or
xor
ret
and
cmp
loope
cwtl
and
sar
ljmp
add
popf
into
add
and
mov
jbe
test
lcall
dec
push
adc
rcrl
jg
adc
in
jge
mov
xor
in
push
cmp
loope
jl
inc
cmp
jmp
daa
mov
or
cmp
fmull
inc
sti
test
dec
jp
xchg
mov
mov
push
sarb
pop
pop
mov
jle
mov
aaa
std
aas
dec
lret
in
movmskps
and
sti
push
mov
dec
shlb
push
cli
pop
fmul
inc
jp
add
insb
mov
ficomps
dec
ss
jbe
icebp
adc
into
test
shl
push
xchg
sub
push
mov
and
andb
out
ret
jno
adc
sub
ljmp
icebp
xchg
and
mov
ljmp
jp
push
es
pop
adc
icebp
sub
add
inc
clc
adc
test
shrb
push
inc
dec
push
pop
mov
push
cmpsl
push
lds
push
std
aas
mov
xor
push
jne
imul
ja
pop
or
or
inc
push
dec
jg
dec
je
cltd
jne
stos
push
ret
inc
lds
pop
xchg
ljmp
pop
nop
insb
push
sbb
cmpsb
js
adc
ljmp
xchg
xchg
push
mov
sub
enter
cmp
jg
mov
in
mov
push
insb
jbe
lds
sbb
jb
cli
mov
nop
xor
jle
cmp
es
icebp
and
es
jae
and
insb
inc
out
and
xchg
adc
mov
fisttpll
je
clc
or
pop
loop
out
jno
arpl
jge
jmp
cmpsb
and
in
lods
push
popf
lcall
mov
inc
loope
jl
xor
sbb
movsl
and
aaa
xor
jecxz
and
sbb
and
cmp
data16
inc
pushf
lret
xor
inc
sbb
sub
push
add
pop
stos
lds
incl
pop
sbb
push
aaa
cwtl
jae
ja
out
mov
dec
mov
sub
icebp
pop
icebp
cmp
sbb
sbb
movsl
inc
add
lods
loope
inc
add
pop
sbb
lcall
jle
push
push
dec
cltd
fisttpll
imul
pop
xchg
push
mov
loopne
dec
addr16
mov
or
adc
push
es
push
insl
insl
lret
stos
xor
push
sbb
je
sub
cltd
aam
insb
popa
dec
mov
daa
insl
or
push
jbe
mov
call
adc
or
and
jl
loopne
dec
adc
cld
xchg
ljmp
pop
cmp
inc
pop
or
aaa
mov
das
xor
mov
lret
and
daa
sbb
enter
icebp
push
jmp
lcall
int3
or
adc
ret
or
addb
incl
insb
add
fs
mov
std
push
jmp
add
andb
mov
add
ja
pushl
jl
and
incl
inc
jmp
iret
mov
pop
rorl
push
dec
adc
and
xorb
dec
movsl
lea
inc
lock
mov
adcb
inc
dec
repnz
call
sti
pop
ret
add
inc
les
outsl
cli
leave
add
sti
aas
cmp
xchg
push
sbb
aaa
hlt
sbb
fildll
adc
sahf
and
ljmp
ja
add
jecxz
icebp
loope
jno
repz
jbe
int
lcall
jmp
aaa
add
mov
fcoml
lcall
mov
shlb
mov
push
xor
enter
add
mov
xchg
ljmp
sar
call
dec
push
lret
adc
das
cmp
mov
sbb
xor
dec
cs
push
icebp
push
push
insl
aaa
add
outsb
ds
ss
daa
jae
pop
inc
pop
pop
jmp
xchg
jge,pt
jg
mov
imul
dec
cmpsl
add
aaa
out
cmp
out
idivb
ret
and
lcall
int3
sbb
mov
cmp
rcll
mov
es
xor
stos
dec
lock
push
insl
loop
sub
imulb
jg
mov
mov
cmp
je
jge
sbb
push
jne
or
gs
add
outsl
testb
jg
mov
jg
cmpsb
loope
mov
jp
push
mov
mov
sahf
and
rcll
outsl
decb
dec
in
mov
insb
std
and
lret
fwait
push
adc
xchg
inc
jmp
dec
xchg
and
shrb
sahf
inc
cli
scas
sahf
jp
jmp
mov
lock
add
adc
sbb
scas
subb
push
pop
sbb
xchg
add
decl
lods
pop
dec
cmp
fistpl
jbe
mov
sar
mov
jle
sub
mov
inc
out
mov
int
testl
sbb
dec
imul
xor
ret
insb
std
push
out
es
test
bound
jle
pusha
loop
xchg
mov
xor
cmp
push
rclb
pop
xor
and
dec
push
xchg
and
es
mov
pop
rorb
push
call
ret
dec
xor
push
mov
stos
ljmp
in
adc
sub
rolb
or
pop
add
push
repz
jnp
movsb
adc
aad
decl
mov
push
test
aas
rcrb
test
mov
push
pushl
or
arpl
addr16
xor
pop
add
loopne
mov
jmp
sbb
or
push
adc
movsl
call
mov
js
push
add
sub
loopne
aad
or
pop
push
adc
aas
or
scas
pop
insb
cmp
ret
insl
insb
dec
sahf
and
es
fucomp
mov
inc
dec
movsl
push
daa
xor
or
adc
lret
pusha
lea
test
aam
hlt
test
mov
ds
jbe
test
sbb
out
jle
mov
hlt
lock
mov
scas
notl
cltd
scas
loop
test
pop
in
xor
jecxz
xchg
adc
mov
adc
dec
mov
or
lret
ret
cmpsb
aaa
dec
jl
mov
mov
div
push
test
mov
push
ds
movsl
addl
pop
repz
jp
cmp
mov
arpl
mov
inc
mov
incl
leave
mov
dec
pop
test
push
push
cltd
pop
xor
push
out
ljmp
lahf
data16
movsl
and
dec
add
cmp
inc
push
cmpsb
pushf
fiadds
xor
inc
inc
jb
outsb
inc
std
decl
les
mov
cmp
xchg
adc
push
rolb
sbb
jp
gs
jg
icebp
jb
xchg
imul
aas
popa
scas
xor
dec
scas
sahf
mov
and
jg
cwtl
fnsave
cmp
dec
popa
mov
bound
sti
jb
mov
ds
add
or
cmpsb
fcomip
push
dec
aad
add
xlat
test
push
add
adcl
or
lea
push
test
es
addr16
scas
push
pop
jb
mov
adc
cmpsb
aaa
mov
repnz
gs
test
dec
sub
lods
frstor
mov
cmp
enter
cmpsb
sub
daa
pop
lcall
push
adc
out
out
dec
jb
inc
sti
movsb
std
mov
xor
std
in
cs
cli
cs
mov
xor
iret
stc
ljmp
ret
and
lods
aam
push
push
pop
loope
jg,pn
add
sub
mov
shrb
ds
jge
pop
sub
mov
xor
iret
xchg
pop
push
inc
push
ret
push
pop
jb
ret
and
clc
adc
mov
pusha
lahf
adcb
mov
dec
je
cwtl
lock
mov
jo
ret
fidivrs
cltd
xchg
sub
test
mov
lcall
fisttpll
enter
leave
mov
jle
out
mov
repz
stc
jae
lods
and
rcl
pusha
push
jg
test
or
mov
mulb
out
dec
add
sbb
cmpb
test
cwtl
lret
ss
clc
aas
or
dec
sub
out
es
dec
adc
stc
je
or
out
sahf
inc
lea
mov
mov
adc
dec
std
test
popa
mov
jmp
xor
test
mov
test
in
jg
mov
scas
pop
xor
mov
pusha
and
clc
pop
dec
push
arpl
mov
clc
mov
daa
imul
out
arpl
inc
mov
pushl
xor
and
insl
lret
fcoml
movsb
stos
xchg
fucomip
push
jl
icebp
mov
mov
dec
fs
pop
xchg
rep
sub
rcrl
call
shrl
outsb
jl
imul
jmp
out
mov
arpl
jae
aam
popa
aad
call
push
je
popa
in
mov
inc
out
inc
xor
pop
inc
push
dec
cld
mov
pop
incl
jo
push
dec
sub
add
popa
sahf
cmp
inc
testl
mov
subl
mov
test
xlat
and
adc
cmp
ret
push
or
lcall
iret
xchg
test
xor
cmp
cmp
inc
int
inc
and
repz
xchg
mov
pop
sbb
xchg
jle
push
decl
aaa
dec
xor
in
jl
ja
ret
out
gs
stos
fisubs
cmpsl
xchg
shlb
xchg
push
fwait
mov
imul
in
loopne
mov
imul
cld
xchg
pushf
fstpt
xor
add
jmp
xchg
mov
js
jp
push
loop
mov
push
mov
in
jg
mov
into
mov
jp
stos
ss
mov
push
or
ret
mov
sbb
pusha
jg
pop
pushl
pop
or
nop
adc
enter
sbb
inc
pop
pop
dec
jl
mov
push
ret
sub
adc
mov
mov
mov
cmp
fwait
lds
ljmp
jnp
xchg
fbld
mov
shll
cmp
cmp
mov
jg
fcompl
outsl
dec
cmp
lds
rcrb
decl
inc
fdivl
mov
movsl
dec
out
jno
jns
push
add
cld
out
dec
mov
lods
in
xchg
mov
sub
in
pop
cmp
mov
xchg
dec
pop
jne
adc
hlt
test
fwait
push
or
lea
pop
and
call
mov
nop
leave
inc
push
scas
xchg
lock
pusha
inc
hlt
push
gs
push
xchg
cs
xor
or
adc
mov
outsb
stc
jmp
adc
insl
and
ds
xor
out
xor
lcall
lods
int3
outsl
aam
inc
lret
pop
aad
lea
orb
in
data16
les
daa
xchg
sahf
shlb
push
sbb
mov
fcmovnu
push
mov
sbbl
cmpl
dec
out
jns
notl
pushl
nop
ror
sahf
push
inc
jnp
push
jae
je
adc
sub
dec
inc
sbb
pushl
lods
pushf
cs
nop
outsb
into
cmp
aas
test
xchg
stc
and
adc
push
ljmp
pop
and
xor
add
mov
push
mov
ljmp
fistpll
cmp
inc
mov
outsl
xor
fwait
aam
cmc
dec
imul
ss
mov
mulw
fists
ret
inc
insb
pop
adc
popf
lret
movsb
jle
mov
xor
add
call
sbb
mov
clc
mov
ja
scas
jecxz
push
loope
scas
loopne
pop
imul
inc
rcrb
sahf
test
xchg
pop
call
cmp
cwtl
mov
mov
mov
int3
testb
mov
jmp
sarb
mov
sub
cmp
loope
loopne
push
mov
cld
add
imul
or
xor
cmpsb
sbb
es
test
pushl
dec
fs
rcl
fdivrs
and
lea
add
lcall
lock
mov
xor
loop
ds
xchg
incl
std
cltd
xor
pushf
jle
pop
js
sub
dec
cmpsb
push
pusha
sub
cmp
pop
cld
mov
adc
loop
or
es
dec
inc
ljmp
es
pusha
push
movsl
dec
push
jns
loop
ja
add
sub
mov
or
pushl
push
jg
arpl
sbb
outsl
pop
enter
pop
ja
jbe
lods
call
mov
incl
push
add
pop
push
pop
or
jl
pop
arpl
push
cwtl
mov
fwait
mov
dec
dec
push
sbb
sub
out
outsb
xchg
jo
jle
mov
mov
adc
je
int
dec
ljmp
push
in
push
test
xchg
mov
mov
jne
jg
out
adc
sbb
mov
mov
push
dec
aaa
test
push
inc
mov
sub
inc
std
xchg
mov
xchg
mov
jbe
movsb
lcall
lret
lahf
dec
scas
inc
je
push
push
movsb
fucom
ss
call
outsb
push
pop
add
cltd
dec
int3
adc
xchg
stos
lds
jnp
and
lods
push
jbe
fbld
inc
cld
jo
dec
push
push
arpl
cli
movsb
loop
jno
inc
mov
adc
dec
lds
dec
outsb
mov
mov
dec
jns
sbb
adc
cmpsl
xor
lods
popa
int3
xchg
mov
pop
addb
mov
mov
cmp
pop
cmp
add
xchg
adc
dec
sbb
incl
pop
mov
dec
add
test
cmp
dec
mov
add
sti
inc
les
add
jo
xor
sbb
inc
pop
cli
sbb
sbb
mov
push
and
cmpsb
adc
movsb
dec
ljmp
sar
cmp
ret
add
dec
xchg
xor
rcl
mov
push
or
bound
and
sbb
pop
fldl
add
imul
cmp
mov
mov
ret
mov
test
stc
outsb
sub
pop
mov
push
sub
stos
ljmp
sub
dec
cmpb
sub
mov
sbb
dec
clc
jg
test
imul
xor
and
xor
cmp
movsb
cmp
jmp
jp
int
xor
fisubrs
nop
movsb
into
in
mov
test
dec
add
sbb
or
sub
jle
mov
push
mov
jg
add
pop
inc
xchg
cld
aas
js
ja
pop
and
icebp
fildll
cmp
mov
push
decb
out
shl
mov
sbb
or
jecxz
insl
test
cmp
sbb
in
adc
mov
es
or
mov
nop
ret
xchg
push
into
sahf
scas
jmp
xor
mov
push
add
sub
xor
or
jg
or
mov
adc
ljmp
into
dec
es
ret
aas
mov
sub
test
sbb
aaa
mov
push
and
jp
decb
test
sbb
mov
lcall
dec
fldt
mov
jp
mov
jbe
je
out
cwtl
aam
pop
loopne
pusha
jb
fwait
loope
test
cltd
mov
inc
push
fwait
ljmp
sbb
mov
leave
cwtl
jno
repz
test
cld
mov
mov
push
xor
test
add
lods
fs
pop
xchg
es
mov
mov
subb
jo
lcall
dec
cmp
pop
mov
or
cmp
inc
call
call
or
and
jno
loop
sub
inc
mov
push
aaa
shrl
add
icebp
or
cwtl
pop
xor
and
mov
inc
clc
test
lcall
scas
mov
into
cmovo
popa
jl
sti
mov
into
pushf
cld
pushl
cs
enter
in
pop
mov
dec
mov
push
pushf
test
push
arpl
decl
sub
movsb
fldenv
xorl
jno
inc
push
xchg
ja
xchg
sub
lcall
adc
jb
outsl
push
push
adc
fucomip
enter
out
outsl
stc
es
incb
pop
lods
cmpsb
inc
mov
lcall
lcall
mov
mov
mov
sti
cmpsl
into
lahf
sbb
sbb
jg
jle
and
add
xor
aaa
mov
sahf
or
inc
arpl
push
in
add
push
je
test
andl
xor
mov
or
pcmpgtd
jns
jp
ljmp
xor
scas
mov
sbb
adc
xchg
ja
xor
mov
sub
xchg
xchg
subl
mov
mov
pushl
cmp
ss
lahf
mov
fwait
in
mov
add
ljmp
test
ret
mov
pop
jmp
sub
sahf
jbe
inc
inc
mov
test
dec
adc
movsb
cmp
xor
lods
icebp
mov
scas
ljmp
lea
and
sarl
call
pop
sbb
dec
adc
or
mov
pop
jae
mov
ja
jp
stos
or
cmpsb
cwtl
es
ss
or
ja
stos
ljmp
and
push
pop
or
jg
dec
in
cmp
ss
inc
dec
sbb
sti
or
js
sub
push
int3
cmp
outsl
jb
dec
push
mov
add
inc
rcrl
cld
jle
das
pusha
sbb
aas
dec
mov
insb
roll
mov
sbb
jl
test
mov
sbb
fimuls
pop
clc
mov
jno
dec
int
xor
mov
aaa
out
icebp
cs
push
lods
dec
dec
lahf
lcall
inc
jbe
mov
ljmp
incl
mov
scas
and
jbe
xchg
xor
repnz
fbld
pop
push
jno
das
dec
jl
pop
cmp
fs
push
fisubrs
pushfw
add
xor
pop
or
pop
dec
daa
inc
mov
sbb
dec
ljmp
adc
jle
dec
cmp
aad
cmp
adc
mov
and
lea
enter
ja
fisttps
dec
sub
add
or
or
xchg
mov
stos
xor
popf
lea
cld
jo
adc
scas
gs
out
push
dec
ret
out
les
cwtl
push
inc
sar
mov
mov
mov
xchg
iret
push
icebp
mov
mov
roll
cld
fistps
ja
inc
dec
mov
stos
int3
inc
xor
pop
mov
popf
call
add
test
lret
sbb
lock
or
aaa
insb
inc
scas
decl
addps
cmp
sbb
sub
and
push
insl
pop
sbb
das
arpl
es
movsb
test
sahf
push
mov
add
push
push
les
xchg
mov
xchg
dec
xor
sbb
cmp
lea
push
decb
xor
insl
xchg
xchg
decl
adc
push
inc
test
cmpsb
movsb
subb
jb
jg
icebp
sub
cmp
cmp
and
popa
cmp
nop
inc
fwait
das
xchg
mov
adcl
out
out
inc
jg
fiadds
call
bnd
jne
fsubrs
popa
cmpb
ljmp
cli
and
jbe
push
adc
icebp
mov
cmp
in
outsb
addr16
sub
push
mov
pop
lock
xor
or
addr16
mov
mov
in
sub
cltd
leave
mov
and
inc
mov
mov
test
or
aas
dec
dec
push
filds
popl
jecxz
jp
adc
pop
add
fwait
lea
mov
in
sub
in
pop
movsl
fbstp
aaa
add
inc
dec
test
sbb
mov
inc
mov
sar
add
out
sbb
push
ja
insb
pop
mov
mov
loop
nop
scas
pop
jecxz
xor
loop
jmp
jge
icebp
or
jo
push
test
data16
sbb
imul
mov
mov
dec
scas
adc
call
mov
jl
and
ds
xchg
dec
arpl
add
insb
repz
jne
shlb
dec
imul
into
ja
incl
add
les
dec
push
inc
enter
mov
mov
orl
mov
jmp
dec
jmp
pop
data16
inc
rcrl
test
push
jo
rcl
data16
clc
mov
mov
ljmp
gs
loopne
push
dec
daa
dec
test
dec
mov
loopne
sahf
ja
hlt
push
sar
decl
dec
popa
add
into
pop
sub
in
cmp
rorb
ffree
sub
divb
icebp
pop
popf
push
fsubs
and
adc
mov
xchg
adc
sbb
push
fwait
sbb
xlat
add
lret
int
lea
cmp
push
loop,pt
sub
mov
pop
jl
xor
pop
sub
push
sbb
pop
dec
dec
cwtl
add
mov
fwait
mov
shll
pop
scas
or
bound
call
daa
ja
mov
test
adc
ss
in
lea
pusha
inc
push
and
mov
lcall
dec
das
jle
bnd
inc
or
push
dec
inc
or
js
ret
incb
jg
adc
adc
mov
es
push
pop
inc
mov
xchg
pop
leave
movsl
rcrb
lcall
xchg
out
loope
aad
je
push
arpl
push
push
outsb
stc
adc
jl
mov
jmp
test
or
mov
mov
mov
sahf
inc
testl
inc
movsl
pushl
push
jl
notl
sbb
out
int
push
push
pop
pop
jne
loopne
dec
dec
fsts
pop
push
ret
call
mov
aad
lret
fwait
lret
dec
pop
xor
inc
mulb
cmpsb
add
xor
call
pusha
pop
in
je
popf
add
xchg
jecxz
inc
cld
test
or
mov
lahf
arpl
mov
mov
es
push
dec
mov
int
inc
out
pushl
pop
mov
inc
das
push
push
cmpsb
push
and
sarb
cmp
mov
out
mov
dec
xchg
mov
mov
decl
outsb
xchg
out
sub
xor
push
mov
mov
int3
mov
lods
data16
enter
add
out
and
and
roll
sbb
ds
jns
gs
mov
mov
aad
or
outsl
inc
adc
xchg
in
movsb
rcll
imul
pop
lcall
add
movsb
adc
xchg
leave
xchg
jp
mov
adc
lcall
fs
dec
jp
jecxz
dec
aaa
pop
sub
or
push
lcall
adc
call
ret
insl
insl
inc
fsts
movsl
sbb
mov
lods
jne
mov
ss
enter
jg
jo
je
sbb
scas
mov
cmp
adc
das
clc
or
sub
adc
mov
xchg
mov
cmpl
out
push
ljmp
js
fistps
sbb
subl
mov
cmpsb
outsb
rorb
loop
cld
das
xor
xchg
jge
fildl
sti
mov
xchg
out
incl
inc
jp
std
mov
adc
iret
mov
or
std
sbb
adc
fs
mov
es
in
cltd
pop
mov
xchg
dec
fstl
add
cmp
es
mov
pop
cli
loop
pop
int3
movsb
std
loopne
pushl
jne
int
iret
nop
dec
int
push
pop
sarb
mov
mov
frstor
and
xchg
incl
int
addr16
push
push
mov
jmp
cmp
leave
mov
fisubrs
cld
jg
add
arpl
orl
inc
lcall
mov
pushf
jmp
jbe
das
clc
loopne
adc
push
jg
cmp
mov
mov
cli
movsb
jmp
pushf
jmp
dec
call
pop
lock
fstl
inc
es
jae
sbb
xchg
les
dec
je
add
cltd
fistl
or
jbe
jl
call
cmp
mov
ret
cli
mov
adc
les
add
and
sub
jle
sbb
rcr
and
clc
ret
mov
jp
loop
imul
xchg
into
rcll
ss
sub
es
lds
cld
imul
data16
dec
fidivl
mov
incl
insl
inc
shlb
jge
cmp
mov
cwtl
imul
fisttpll
imul
lahf
rclb
sbb
sub
icebp
ljmp
adc
mov
test
aas
jle
fnstsw
inc
roll
xor
cmp
loope
sti
das
enter
inc
lock
sub
push
mov
outsl
jge
ljmp
jg
mov
pop
js
js
sub
xor
xor
or
mov
pop
int3
pop
xlat
pop
push
sbbb
ret
cli
xchg
adc
pop
roll
jb
cli
ljmp
jp
jo
xchg
cmpsb
push
mov
mov
add
xchg
in
enter
mov
and
pop
rorb
jg
mov
in
mov
pop
sahf
fstpt
enter
pop
icebp
and
mov
jb
mov
neg
hlt
ljmp
pushf
cld
mov
fwait
sbb
jo
jae
dec
mov
and
call
mov
les
stos
mov
bound
fiadds
incl
xchg
imul
sbb
out
cmpb
popa
pop
mov
movsb
enter
cmp
fdivs
cld
jg
sub
pop
test
pop
shl
lret
sahf
mov
pushf
outsb
cmpsl
xor
mov
xor
fwait
mov
xor
jbe
and
jle
mov
fwait
clc
adc
pop
push
pop
mov
xor
hlt
lcall
pop
xchg
and
inc
adc
faddl
in
xchg
push
add
sub
cld
push
call
lods
inc
aad
mov
jbe
in
lcall
shll
dec
aad
pop
push
scas
jp
cmp
inc
mov
je
mov
mov
push
jno
movsb
int3
mov
iret
imul
ret
mov
lret
pop
mov
je
dec
xlat
lods
call
dec
ljmp
mov
popf
loope
lea
cmpsb
adc
call
xchg
dec
in
mov
jle
loope
pop
in
xchg
ficomps
mov
jg
fldt
jg
push
lcall
pop
jle
test
ficompl
mov
cld
call
mov
test
pop
xlat
aas
mov
inc
mov
iret
mov
sbb
mov
push
sub
xor
outsl
mov
fcoms
cmp
in
cwtl
jb
scas
lock
call
sub
inc
fidivrl
dec
sahf
icebp
or
jg
xrelease
and
inc
mov
mov
mov
and
ds
pop
mov
push
xchg
int
fs
jg
xor
fwait
enter
lahf
call
sbb
imul
add
int
push
test
adc
mov
ljmp
cmp
bound
lret
cld
mov
cmp
mov
jnp
incl
pop
jbe
jl
out
mov
sbb
lcall
jle
cmp
dec
mov
push
push
xchg
mov
pop
pop
mov
mov
ljmp
test
add
inc
xchg
push
call
out
aas
jne
fstl
xchg
fwait
mov
out
xchg
adc
fdivrl
lock
mov
xor
enter
inc
enter
ljmp
clc
stos
dec
in
xchg
sbb
jp
lret
fisttpl
icebp
lcall
mov
pop
push
and
pushl
mov
aaa
xchg
inc
xchg
aaa
push
jns
ret
sti
sbb
pop
xchg
std
or
jl
inc
lcall
cmc
stos
mov
sbb
pusha
mov
cltd
popa
call
cld
loopne
je
ret
xchg
push
rcll
ficompl
sahf
inc
testl
hlt
jns
mov
xchg
inc
shll
ret
mov
mov
or
out
add
jb
iret
xchg
dec
add
push
mov
call
shl
xchg
xchg
jbe
dec
or
mov
push
xchg
add
imul
push
fwait
les
add
jge
jg
push
lds
or
jge
stos
xor
mov
je
pop
sbbb
xchg
ds
dec
cltd
adc
fwait
sbb
scas
jecxz
pop
mov
fildll
mov
mov
fwait
aaa
incl
or
xchg
mov
mov
jns
incl
icebp
cmpsl
sbb
dec
xor
inc
lcall
cmp
inc
xchg
pop
imul
pop
movsl
icebp
xchg
hlt
nop
gs
or
ljmp
mov
addr16
add
lahf
notb
pop
in
icebp
adc
mov
pop
mov
cmp
jle
ljmp
pop
mov
mov
jle
out
mov
arpl
jecxz
sahf
adc
cli
jmp
cmp
push
mov
xchg
rcrl
test
cmpsl
lods
push
push
xchg
push
out
mov
push
jb
mov
adc
test
incl
or
xor
insb
xchg
xor
cmpb
jg
xor
clc
mov
mov
jg
adc
pop
shll
xchg
xor
mov
clc
out
sarb
je
into
stos
loope
mov
pop
call
cld
pop
rolb
mov
mov
pop
push
sahf
fstpt
mov
shlb
data16
xor
add
pop
pusha
les
mov
lahf
pushl
add
push
xchg
loope
pop
rorb
movb
add
int
xor
xchg
xchg
mov
pop
or
push
popf
mov
sbb
push
cwtl
test
mov
cmpsb
jle
outsb
call
scas
jmp
aaa
push
negb
mov
test
mov
dec
cwtl
sbb
cs
ffree
mov
inc
mov
sahf
push
enter
cmpsb
and
inc
mov
adc
arpl
lock
cli
adc
pushl
loop
lods
cltd
mov
out
sbb
jnp
add
addr16
fdivrp
shll
mov
fwait
mov
in
mov
mov
mov
cmpsb
jl
nop
adc
pop
pushl
int
out
movsb
mov
xor
pusha
test
jb
mov
call
mov
push
cmpsl
int3
xchg
les
mov
jnp
das
adc
pop
lds
cmpsb
xor
push
inc
lcall
bound
in
fiadds
cmp
loope
dec
repz
inc
pushf
adc
ror
lret
scas
fidivl
inc
sahf
les
jbe
out
and
loopne
xchg
mov
lea
sub
xchg
cmpsl
push
xor
push
lock
into
pop
repz
call
mov
inc
mov
call
xor
leave
repz
loope
stos
mov
out
mov
inc
das
clc
jp
xchg
push
repnz
adc
mov
ljmp
mov
or
xchg
fcoml
cmpl
mov
mov
mov
xor
xor
dec
repz
decl
sbb
mov
add
lret
mov
aam
divl
arpl
xor
cmpsl
mov
lea
pop
test
inc
ljmp
into
adc
cmp
cmpsb
scas
cmpsb
pop
mov
repz
push
lahf
shrb
rep
jmp
xorb
ja
mov
inc
and
ljmp
sub
mov
ficompl
pop
imul
jno
in
andb
xchg
push
and
mov
add
pop
movsb
scas
mov
pop
push
and
mov
in
repnz
repnz
enter
xchg
add
mov
xchg
test
sahf
test
xor
repnz
push
and
movsl
movsb
mov
iret
in
leave
lahf
mov
push
sub
jae
xorb
movsb
sahf
cmpb
push
xchg
mov
jns
mov
xorl
repnz
push
rolb
iret
in
andl
pop
xchg
pushf
cmp
add
dec
mov
fs
dec
cwtl
and
int
inc
cmpsb
and
cmp
sub
xchg
es
xlat
mov
mov
out
incb
repnz
mov
xor
sahf
arpl
decl
cmp
jbe
repz
pop
aad
mov
sub
cld
dec
mov
popf
mov
test
test
cmpsl
dec
rcrb
xchg
mov
jle
insl
cmp
aaa
adc
xchg
sbb
push
xchg
fnsave
sbb
mov
mov
xchg
xor
jge
push
xchg
dec
xchg
es
push
mov
scas
xor
call
add
xchg
arpl
adc
dec
jp
cmpsb
sbb
and
ret
mov
sbb
mov
xchg
negl
mov
xor
pushl
pop
movsb
cmp
mov
fisttpll
sti
orb
jg
stos
ss
and
or
pusha
std
or
incl
pop
mov
mov
sti
test
adc
fdivrs
or
lcall
pop
cmp
inc
mov
movsb
pop
clc
mov
cmp
out
ljmp
xchg
dec
xchg
test
imul
aas
andl
inc
inc
mov
lcall
cwtl
add
dec
incb
mov
inc
clc
sub
popa
mov
mov
out
ljmp
inc
jl
ja
xchg
mov
push
idivb
pop
or
ljmp
dec
dec
mov
mov
and
mov
pushl
cltd
imul
cltd
jnp
xchg
movsl
jmp
popf
imul
mov
jae
lahf
lcall
dec
lahf
xchg
add
lock
xchg
outsb
push
xchg
xchg
mov
cmpb
cmp
adc
xchg
jl
outsl
rcr
mov
mov
js
xchg
in
cld
xor
ljmp
rorb
test
xchg
pop
sti
cmp
xchg
mov
insl
pushf
stos
mov
cltd
xorb
lds
mov
repz
push
std
and
jg
sbbl
sbb
dec
jecxz
dec
pop
xchg
pop
subb
lret
dec
rcrl
cwtl
cli
xchg
das
clc
call
sarb
adc
es
pop
inc
mov
mov
fwait
dec
lds
push
loope
mov
pop
mov
cld
aaa
mov
lahf
jmp
pop
jb
test
mov
cmp
lret
cmp
stc
cmp
incl
or
push
pop
xchg
ret
xchg
pop
rorl
int3
cmp
inc
mov
push
mov
jg
test
push
js
lcall
cmp
push
mov
sbb
pop
mov
and
mov
bound
cmp
push
cmp
movsb
mov
add
fdivrs
stos
mov
and
insl
lahf
jae,pt
lcall
xchg
jmp
push
cmpsl
loop
jmp
inc
les
aam
push
pop
sahf
pop
xlat
push
mov
xchg
cmc
or
mov
inc
data16
lret
mov
jg
mov
aas
dec
stc
cmpb
addl
inc
js
call
cwtl
push
xchg
jp
mov
movsb
ljmp
outsb
cmc
adc
xchg
sbb
mov
pop
nop
test
sahf
mov
pop
mov
mov
or
mov
rcrb
scas
mov
mov
test
pop
jg
int
bound
cmp
xchg
test
mov
aaa
outsl
cli
adc
xlat
inc
dec
cld
jb
lcall
icebp
inc
decl
popa
fwait
xchg
notb
ljmp
inc
stc
xor
add
bound
iret
cmpsb
dec
xlat
mov
in
pop
fs
icebp
cwtl
jmpw
pop
loop
pop
dec
loope
cmp
mov
hlt
mov
mov
int
aad
inc
lret
shll
lock
out
jno
decl
jnp
cmpsb
dec
int
fimuls
mov
cmc
mov
call
out
lods
test
pop
ja
push
xchg
xor
push
inc
sbb
shlb
dec
push
movsl
add
xchg
out
fwait
push
sbb
out
or
add
xchg
cmp
jmp
jg
mov
inc
rolb
sub
clc
or
jb
das
clc
sbb
sti
inc
es
sbb
popl
imull
or
and
stos
and
fisttpll
imul
inc
loopne
lods
adc
or
aaa
sub
decl
jae
shll
push
popa
scas
pop
push
cltd
data16
lea
push
xchg
inc
dec
cmp
rclb
outsb
data16
push
arpl
mov
mov
addr16
scas
pusha
jge
push
add
imul
mov
sub
filds
jo
mov
dec
pop
inc
xchg
jno
fcomip
inc
mov
push
fidivs
inc
inc
fdivrs
dec
push
repz
mov
adc
divl
mov
pusha
inc
cmpsb
and
aam
inc
dec
jge
push
pop
mov
and
pushl
mov
xor
xchg
test
jno
std
lcall
fs
push
loope
daa
inc
lds
pusha
dec
pop
cwtl
push
scas
inc
pop
stc
lcall
ljmp
aas
jp
gs
test
outsb
jge
jbe
mov
fs
shlb
call
jno
test
jg
push
ds
cmp
xor
add
jns
push
mov
imul
and
xorl
orl
adc
or
push
mov
loope
mov
incl
add
xor
dec
ljmp
inc
dec
adc
mov
or
mov
push
mov
ljmp
out
push
jae
inc
sbb
push
dec
movsb
adc
lods
mov
clc
decl
popf
int
pop
push
ficoml
sbb
inc
ja
jmp
mov
and
adc
xchg
mov
xchg
sahf
jle
pop
std
outsl
mov
cmp
inc
inc
repz
sti
adc
or
outsl
mov
scas
cmp
pop
sub
jge
jmp
sub
dec
sub
push
out
inc
add
test
insl
mov
pop
jle
pushf
mov
dec
jg
ja
outsb
add
push
and
sbb
inc
pop
xor
test
fldenv
in
ja
test
mov
adc
jg
fs
lcall
fs
adc
inc
lods
sarb
scas
pop
pop
in
push
mov
or
cmpsb
repnz
jo
pop
add
dec
mov
add
dec
leave
mov
lcall
and
add
aas
adc
ljmp
pop
movsl
packssdw
in
movsb
mov
adc
add
mov
scas
mov
lret
mov
ljmp
push
mov
or
sbb
push
ljmp
sub
adc
fiaddl
out
xchg
aam
lcall
pop
and
cmp
idivb
mov
jns
adc
inc
dec
pop
mov
pop
inc
aaa
mov
js
mov
jns
xor
cmp
xor
mov
sub
das
mov
int3
add
decl
lods
push
dec
in
mov
sarb
sbbb
leavew
push
idiv
stos
lcall
daa
inc
daa
xor
mov
test
xchg
imul
ds
movsl
cmpsb
mov
mov
nop
xor
loopne
sahf
ljmp
push
dec
xchg
pop
insb
icebp
xchg
dec
dec
rorl
stos
mov
mov
add
mov
xor
sahf
call
push
pop
lahf
scas
and
sar
incl
mov
jecxz
jo
sarl
imul
mov
add
scas
test
adc
movsb
lock
popl
mov
mov
clc
aaa
push
mov
jne
pop
addl
mov
or
xchg
cmp
ret
or
icebp
test
adc
push
ud0
sub
addr16
js
mov
mov
ljmp
push
pusha
inc
hlt
dec
jge
mov
shll
cmpb
shrb
or
cmovl
int3
mov
add
test
mov
push
mov
clc
decl
dec
test
data16
adc
cltd
mov
sbb
into
popl
sbb
xchg
pop
clc
decl
ja
xor
push
or
lea
outsl
mov
jae
mov
lret
xchg
cli
decl
lret
inc
pop
repz
jl
clc
add
in
dec
jecxz
push
pushl
or
pop
pop
mov
loop
clc
lcall
test
adc
mov
sub
jae
cmpl
jg
lock
sahf
xchg
out
mov
lods
sbb
arpl
out
movsb
lock
cs
dec
mov
mov
or
es
ds
xor
loope
mov
into
popf
xchg
jg
fucomi
bound
in
mov
movsb
push
xchg
movsb
inc
les
fnstsw
dec
insb
mulb
jg
test
adc
in
test
into
xor
pushl
cmp
mov
les
mov
inc
fs
psubd
add
icebp
incl
dec
add
fwait
daa
inc
cwtl
add
xchg
aas
outsb
lods
loope
jl
xchg
jbe
add
pop
hlt
test
cmp
cmpsl
xchg
insb
pop
sar
jmp
push
sbb
lret
xor
jmp
or
adc
or
repz
xchg
clc
lds
sub
scas
sahf
test
mov
out
xlat
subl
insl
adc
and
jg
jns
into
fnsave
mov
xchg
jbe
push
mov
mov
es
sbb
jbe
mov
xchg
adc
mov
mov
dec
lock
lods
negb
xchg
adc
sub
push
test
test
fiadds
cwtl
sahf
cmpsb
repnz
ds
add
stc
lods
incl
enter
inc
int3
push
loopne
insl
xchg
scas
inc
jnp
in
sbb
xchg
xchg
pushf
push
decl
stos
mov
xchg
dec
sbb
mov
inc
lret
mov
inc
cltd
or
push
add
inc
mov
push
scas
or
fwait
mov
pop
push
jle
fwait
or
add
jle
xchg
and
jle
jne
fiaddl
adc
sbb
dec
sar
and
filds
out
fstl
popa
xorl
dec
jbe
loop
inc
inc
mov
je
pop
sub
popf
mov
loopne
lcall
fldl
sti
out
push
lahf
add
inc
pop
int3
insb
pop
ljmp
inc
movsb
ja
dec
scas
popa
xor
mov
adc
sbb
dec
dec
lds
rcrl
idivb
sahf
ljmp
arpl
jbe
ja
aam
bound
out
add
inc
mov
test
cmpsb
inc
sarb
out
push
call
out
imul
cld
hlt
push
test
cli
incl
cmp
popa
iret
pop
xchg
in
aas
mov
or
lds
inc
into
mov
movsl
bound
jb
call
mov
pop
jo
popa
mov
test
fisubrs
inc
loope
mov
movsl
and
mov
sarb
jg
jl
loop
jmp
int
xchg
cwtl
fwait
mov
jecxz
push
es
jg
inc
mov
dec
inc
push
addr16
add
push
jmp
xchg
push
es
cld
add
incl
xchg
negb
scas
mov
mov
add
mov
repz
inc
inc
out
adc
jo
out
dec
push
sub
inc
loopne
incb
pop
dec
mov
hlt
cmpsb
gs
and
out
ret
jle
jl
mov
decl
insb
mov
scas
fcmove
push
cmpsb
mov
arpl
ficoml
lcall
std
xchg
mov
into
stos
xchg
addr16
pop
test
cmpsl
cmp
outsl
jmp
cld
mov
fcomip
jo
jle
cmpsl
or
xchg
pop
add
lock
aam
into
mov
call
pop
lds
jb
add
ds
mov
sahf
xchg
jmp
xchg
bound
push
addr16
push
push
fidivs
or
mov
ds
mov
sub
sbb
fcmovb
insb
ja
pop
pusha
icebp
mov
insb
push
push
add
or
mov
push
inc
loop,pt
mov
mov
fcmovnbe
dec
mov
clc
lcall
sbb
cmp
jecxz
test
fcomip
sbb
pusha
adc
pop
imull
cmpsb
push
pop
leave
jbe
jp
or
push
data16
jno
lret
mov
mov
rorb
mov
out
pusha
frstor
mov
pop
rclb
pop
andl
jmp
inc
jns
int3
pop
inc
mov
arpl
iret
dec
push
aad
arpl
add
cwtl
ljmp
xor
out
dec
mov
pop
insb
in
inc
push
push
data16
inc
rcr
inc
inc
pop
es
sahf
out
repnz
clc
inc
lods
xchg
mov
loopne
aaa
cld
cmp
pop
ja,pt
shrb
lods
dec
imull
mov
leave
mov
int
push
inc
mov
into
sub
xor
call
sub
cwtl
bound
push
mov
decl
push
daa
dec
loope
pop
scas
mov
xor
fcomi
sbb
jle
je
rcrb
aas
or
inc
sbb
pusha
jl
loopne
jge
push
inc
int
clc
call
xchg
jmp
leave
push
nop
mov
lock
adc
insb
dec
jbe
rolb
repnz
dec
dec
std
fidivrs
inc
dec
ret
decl
or
mov
lds
orb
repz
es
push
jecxz
mov
mov
inc
aad
int3
outsb
mov
repz
jg
pop
loope
adc
cs
push
subl
or
int
jg
cmpsl
pop
out
push
in
jns
insb
add
push
adc
in
mov
sub
dec
dec
adc
int
cmp
fists
or
enter
stos
pop
add
outsb
mov
mov
jge
mov
clc
fst
inc
xchg
into
mull
sar
call
xchg
inc
lods
nop
lcall
insl
scas
inc
iret
xor
push
hlt
and
mov
pop
iret
jae
push
ret
sahf
mov
inc
pop
into
adc
inc
dec
ret
fwait
lods
rol
dec
movl
push
mov
cs
push
and
fcmovnb
xor
stos
xchg
pop
rol
incl
cli
or
cs
lahf
js
dec
sub
or
les
adcl
push
push
cld
jge
rclb
ret
stc
jae
lea
ljmp
decl
sbb
aam
mov
xchg
mov
loop
adc
cmc
popa
xchg
jecxz
dec
adcl
and
gs
rcrb
push
fisttpl
outsb
and
loop
test
decl
lods
cwtl
and
lods
pop
cmpb
push
fucom
pop
popa
loope
mov
inc
scas
inc
mov
es
cmpsb
and
dec
stc
dec
ja
push
scas
cltd
mov
lock
cmpsb
push
pop
incl
or
les
cwtl
mov
out
fmull
in
mov
leave
addr16
dec
sbb
jmp
mov
ds
test
inc
andl
clc
jae
pop
mov
pop
pop
jmp
mov
rcll
push
shr
movsb
jl
jp
cld
sub
aaa
in
jo
es
and
outsb
dec
clc
sbb
cmp
popa
loope
mov
scas
adc
movsb
and
scas
dec
jo
orb
jbe
adc
les
jp
out
add
ret
repnz
sbb
inc
stos
js
cli
ljmp
mov
xor
xor
repz
inc
sub
jb
pusha
inc
fistl
mov
cld
out
dec
cmp
ret
pusha
std
cmc
jae
ja
decl
lods
mov
sbb
aas
mov
mov
cmpsb
and
ljmp
mov
pop
mov
or
aas
into
xchg
xchg
sbb
xchg
and
shll
std
ret
rorb
addr16
mov
fwait
divl
fiaddl
arpl
adc
xchg
fiaddl
bound
test
jp
fnstenv
dec
loopne
sbb
push
adc
sbb
test
add
out
clc
mov
mov
cmp
jp
xchg
shlb
ljmp
xchg
outsl
dec
in
add
cmc
xchg
dec
cmp
xor
mov
loopne
mov
mov
daa
jno
sbb
xor
adc
dec
xchg
movb
xchg
popa
xor
pop
pop
push
mov
loop
add
dec
lret
and
xchg
movsb
inc
sbb
add
xchg
add
ljmp
jbe
dec
push
sbb
cltd
ret
pop
add
jmp
sbb
and
cs
jl
and
test
add
mul
sarb
leave
clc
incl
push
xor
imul
lret
lock
ljmp
je
in
push
push
movsb
sti
nop
cmp
stos
out
outsb
mov
push
push
mov
mov
mov
addr16
out
push
jae
sbb
add
mov
sbb
pop
es
mov
pop
les
mov
jbe
aad
lods
lea
jmp
jno
ficoml
sti
pop
mov
push
shl
dec
outsb
jno
sub
ljmp
stc
push
lcall
arpl
nop
sar
call
jo
jns
inc
and
or
les
insb
addr16
lods
aas
js
dec
xor
sbb
dec
mov
adc
sub
ljmp
push
shrl
adc
js
lcall
push
pop
les
xchg
shll
scas
stc
mov
and
mov
jmp
shl
stos
mov
push
shrb
dec
incl
mov
mov
imul
add
inc
mov
inc
shll
pop
cld
jmp
xorb
xchg
mov
rsm
pcmpgtw
nop
mov
fisttps
enter
push
adc
jp
inc
insl
mov
cmp
mov
insl
mov
loop
pop
cld
call
js
fs
push
jbe
inc
outsb
out
loope
push
movsb
adc
cli
ljmp
mov
push
mov
sbb
clc
icebp
sub
xor
mov
gs
inc
sbb
cmpsl
ss
decl
aad
pop
adc
cli
and
sub
add
and
add
cmpsl
lret
lods
push
and
aaa
push
incl
xchg
fdivs
leave
push
lahf
push
inc
pop
mov
jno
clc
jg
call
loop
imul
xchg
imul
push
add
pop
inc
cmp
adc
sbb
aaa
cmp
mov
out
pop
outsl
sbb
das
or
popa
xlat
sub
xor
jl
lea
sub
jmp
addr16
outsb
jne
mov
cmpsb
and
mov
jg
js
inc
mov
push
mov
jg
test
sahf
xor
mov
out
inc
lock
lods
mov
rcrb
bound
scas
lcall
std
mov
mov
mov
dec
sbb
outsl
out
xchg
dec
aas
test
ret
ja
test
je
jns
imul
stos
enter
mov
lds
xor
lcall
call
cmp
es
stos
add
push
pop
lods
mov
sub
outsb
jp
sbb
addr16
test
das
mov
stos
lods
and
xor
adc
aas
or
incl
out
fwait
scas
aad
inc
fmuls
push
ret
ljmp
push
in
xchg
pop
imul
or
frstor
pop
cld
cmpsl
movb
andb
dec
stos
cmp
es
pop
xor
cli
test
out
mov
jg
scas
push
scas
ret
or
mov
inc
ret
aad
xor
das
sub
cmp
addr16
sbb
sbb
pop
add
mov
sbb
cmp
cli
pop
imulb
cmp
push
ret
fnstcw
out
mov
incb
dec
xor
dec
es
in
es
movsb
pop
ljmp
xor
jecxz
adc
add
xor
sbb
xor
or
mov
dec
xchg
pop
sarl
mov
inc
jne
or
push
jb
or
out
inc
mov
fdivp
fwait
or
add
mov
push
sahf
inc
jmp
mov
bound
cmp
and
sbb
sub
inc
sbb
sub
pushl
dec
data16
jbe
ds
mov
inc
test
aam
cli
cmp
pop
getsec
mov
xor
xchg
mov
ljmp
add
pop
rcll
dec
mov
enter
loope
mov
insl
loopne
mov
addr16
aaa
dec
aas
mov
cwtl
push
push
or
mov
test
outsl
idivb
decl
inc
pop
jg
mov
incl
ds
movsl
popf
or
enter
scas
and
push
pushf
cmpsl
sub
mov
rclb
je
add
fmuls
xchg
mov
scas
add
mov
jmp
call
jbe
mov
pop
sbb
and
pop
push
adc
pop
inc
add
mov
push
inc
mov
add
push
sbb
mov
mov
bound
inc
jmp
mov
stos
rol
push
mov
push
dec
push
aaa
push
outsb
idivb
pop
dec
sbb
es
or
dec
scas
mov
std
inc
test
mov
aaa
cmp
jg
lcall
scas
mov
and
enter
or
sub
mov
xchg
ds
aam
inc
xor
or
xchg
or
pop
es
adc
jg
or
loopne
js
cltd
inc
leave
inc
sahf
sbb
cmp
sbb
dec
dec
push
nop
jae
or
mov
aaa
dec
les
outsb
ss
adc
gs
aaa
mov
das
iret
scas
pop
dec
popf
adc
outsl
sbb
add
lret
adc
pop
sbb
fdivrs
inc
pop
mov
shlb
fwait
and
mov
mov
cmpsl
xorl
out
loop
and
int
xchg
out
mov
xchg
in
mov
mov
aad
mov
cli
jg
mov
adcb
mov
lret
ljmp
arpl
jb
sbb
adc
adc
cld
mov
aam
sahf
dec
sbb
ljmp
ficoml
mov
xchg
data16
sbb
cmp
xchg
add
push
inc
fadds
mov
jmp
mov
fs
into
push
inc
jge
fs
adcb
into
mov
cmc
lcall
scas
dec
fs
call
loope
mov
cli
or
and
lret
sbb
pop
stos
pop
int
mov
pop
lret
insb
out
stc
testl
xchg
xchg
shr
es
scas
xchg
cmp
inc
mov
jno
sub
pop
mov
cltd
ljmp
arpl
jae
or
mov
push
jge
lea
in
xchg
imul
js
loopne
fwait
mov
pop
loopne
inc
mov
outsb
add
mov
xchg
mov
cmpsl
inc
enter
addl
jmp
push
dec
mov
decl
pop
jl
mov
cmpb
cld
mov
mov
repz
mov
cli
mov
call
test
decl
adc
push
filds
adc
mov
jns
stos
add
pop
incl
push
mov
inc
inc
jnp
mov
sbb
outsl
in
cli
mov
fsubrl
pop
scas
aad
mov
insb
adc
cld
inc
inc
push
aad
test
movsl
inc
popf
adc
inc
push
ljmp
fisttps
loop
pop
dec
outsl
and
movsb
popa
sti
jmp
mov
dec
in
ds
repnz
jne
popf
nop
mov
popa
test
call
mov
fbstp
lods
imul
std
sub
push
xchg
in
les
ljmp
mov
dec
jb
iret
mov
je
mov
es
stos
mov
ss
pop
push
in
mov
rolb
repz
ss
mov
pop
push
jge
mov
and
xchg
mov
out
sbb
mov
mov
cmp
ret
add
jecxz
or
pop
subb
in
lds
jne
mov
mov
lret
popa
push
adc
jmp
xchg
into
push
repz
loopne
fcoml
pop
subb
std
dec
std
xchg
cltd
lods
lods
inc
cltd
dec
data16
out
jae
jle
sbb
bound
pop
push
sbb
adc
sahf
cltd
mov
push
inc
xchg
fwait
scas
sahf
cmpsb
mov
cli
decl
divb
pop
cmp
jno
jbe
bswap
jmp
lcall
out
sbb
test
push
jle
inc
hlt
cmpsb
clc
cmp
fs
push
sbb
roll
or
pop
es
inc
rol
call
mov
pop
or
fsubs
inc
jbe
dec
fsubr
nop
pop
sub
jg
into
jmp
xchg
cwtl
stos
shlb
test
repz
cmpsb
add
mov
shl
push
and
mov
shl
jecxz
cwtl
aam
cmp
outsb
in
push
and
shll
jbe
incb
dec
sahf
sahf
in
mov
test
loopne
cld
ljmp
pop
jbe
cmp
xchg
inc
call
jge
popf
jnp
jne
cmc
pushw
es
adc
jg
stos
jg
je
lret
stc
xor
jp
sub
sbb
sub
push
cvttps2pi
ret
jbe
mov
loope
es
jbe
out
icebp
out
cmpsl
push
out
mov
push
les
outsl
jle
out
notb
fistpll
mov
enter
dec
addr16
mov
repz
int
push
inc
mov
clc
jg
dec
dec
shlb
push
scas
rclb
jg
ret
ret
jo
arpl
loope
mov
pushl
pop
pop
add
loopne
mov
ljmp
pushf
popf
mov
lods
mov
out
mov
fimuls
cmpsb
mov
les
cltd
and
adc
cwtl
fucomi
orl
ret
inc
int
push
insb
divb
dec
push
shr
mov
decb
scas
lods
sahf
mov
es
adc
icebp
sbbb
cld
xchg
iret
in
xor
push
jo
dec
add
dec
int3
fmuls
jmp
je
out
ss
push
cld
aas
jg
in
mov
imul
outsl
adcw
ljmp
into
iret
test
mov
add
pop
jle
xchg
idiv
scas
decl
inc
pop
movsb
arpl
and
pop
nop
clc
cli
xchg
mov
xchg
jecxz
xor
add
mov
xor
popa
shll
into
dec
loope
inc
inc
sbb
cmp
pushl
insb
sar
js
ljmp
frstor
fwait
mov
mov
xor
mov
push
icebp
add
inc
xchg
mov
scas
ds
je
add
push
cmpsb
lahf
mov
jg
test
jl
cmpsb
into
dec
imulb
jbe
stos
ss
mov
dec
push
xchg
cld
jg
jle
and
xor
imul
iret
outsl
push
data16
in
mov
icebp
rcr
test
mov
xchg
jp
inc
mov
mov
lcall
loop
mov
push
mov
repz
rcrl
mov
jl
shl
cltd
es
in
hlt
push
incl
loope
movsl
mov
sub
dec
test
je
jmp
mov
fadds
addb
jmp
outsb
gs
pop
xchg
out
cwtl
movsb
xchg
push
push
jo
inc
in
sub
add
lahf
xor
lock
lods
mov
xor
scas
repz
repz
cmp
icebp
cmpsl
lea
je
test
shrb
pshufw
mov
pmulhuw
out
data16
dec
les
push
jl
cmpsl
push
repnz
mov
sahf
mov
jp
enter
aaa
inc
mov
loop
fdivr
adc
sub
out
les
or
ss
int3
xchg
pop
repz
dec
push
mov
add
lcall
call
sahf
add
jnp
mov
ljmp
test
fidivl
into
xchg
repnz
cmp
call
outsl
adc
fucomp
mov
inc
or
in
clc
mov
mov
cli
mov
sub
push
cmp
aad
jg
incl
sbb
mov
pusha
imul
sub
jno
fdivrs
std
dec
xor
out
out
call
icebp
cltd
out
and
or
cltd
dec
shrb
sbb
hlt
pop
out
mov
incb
test
jo
addl
inc
jmp
notb
jle
jmp
movsb
test
and
das
cli
jecxz
xchg
sahf
mov
mov
arpl
test
leave
mov
lods
pop
mov
stos
add
addr16
and
leave
mov
adc
fistl
lcall
pop
jmp
movsb
mov
popf
cmpsl
je
ss
mov
adc
jg
icebp
push
add
xchg
mov
rcrl
outsl
ss
mov
pop
mov
test
dec
insb
pop
cmpb
loopne
cmpsl
cmpsb
jne
es
in
pop
sarl
js
stos
in
pop
dec
sbb
sub
icebp
das
sbb
mov
movsb
lock
add
popa
stc
ljmp
inc
mov
inc
rolb
lahf
in
movsl
cmc
jmp
add
aad
aad
xor
mov
mov
sar
lcall
sbb
inc
mov
js
xlat
sti
mov
leave
sahf
xor
out
rcll
iret
pop
sub
incl
xchg
pop
mov
scas
lock
insl
push
push
mov
xchg
xchg
call
xchg
mov
jnp
and
fnsave
mov
lock
call
mov
push
ja
imul
rolb
mov
jmp
pushl
lods
push
jl
jecxz
sahf
in
lock
mov
mov
bound
ljmp
cmp
mov
ret
mov
mov
or
pop
cs
inc
cmc
cs
lock
fildll
out
or
push
fidivl
pop
jne
pop
stos
lret
xchg
mov
mov
push
test
sahf
push
insb
push
subb
jge
lahf
mov
fwait
jo
cmp
and
stos
fimuls
xchg
mov
mov
popf
loop
pop
ds
mov
sub
ds
subb
mov
inc
pushf
mov
rcrb
mov
lahf
cmpsb
mov
fistpl
mov
cld
mov
lea
push
jb
add
jle
sbb
and
imul
inc
push
scas
mov
out
fmull
test
or
mov
das
clc
shll
clc
jbe
jmp
aas
add
lret
sub
into
adc
jg
clc
or
aad
add
loopne
clc
push
push
cmp
loope
sahf
stos
pop
rcrb
mov
out
jmp
dec
int
sar
or
iret
xchg
stos
mov
cli
sahf
xchg
add
call
lods
cmpsb
mov
aad
xchg
push
jl
jecxz
lock
jbe
or
and
sbb
nop
mov
push
jb
pop
jg
clc
jmp
ror
push
cwtl
aam
dec
out
out
lret
fmul
jg
xchg
test
loope
sahf
hlt
cwtl
and
insl
xlat
popa
fcoml
in
movsl
cwtl
nop
pushf
push
test
fildll
push
stc
clc
xchg
and
adc
inc
mov
pop
adc
xchg
inc
push
orb
stos
push
xor
not
dec
fldl
ret
rcr
int
lcall
int
pop
mov
mov
sub
sbb
push
mov
scas
push
pop
dec
test
incl
sahf
jle
jb
fs
jb
xor
jp
pop
mov
outsb
gs
sarb
xor
insb
add
incl
decl
pop
test
lods
std
add
add
stos
dec
xchg
and
sar
cmp
mov
jb
cmp
insl
subb
inc
or
mov
and
in
pop
jno
mov
dec
xchg
cmp
test
and
or
add
cmp
imul
sbb
flds
push
fs
adc
movsb
inc
mov
mov
or
mov
je
popa
sbb
or
mov
cwtl
adc
pop
sbb
sub
xor
push
cs
cmp
xor
clc
decl
stos
add
popa
and
jns
xchg
lcall
das
xchg
jbe
push
push
in
push
fnstcw
js
xchg
pop
ss
test
ja
stos
mov
addr16
adc
or
fmull
push
stos
dec
dec
dec
ret
or
addb
ss
push
inc
mov
add
por
inc
ss
xchg
pop
push
xchg
dec
gs
add
mov
jg
pop
xchg
cld
ja
fsubs
ret
or
xchg
xor
sbb
icebp
mov
mov
jbe
mov
insl
pop
inc
std
scas
scas
adc
leave
xchg
add
sbbl
and
jae
popa
push
push
push
insb
loopne
sar
xchg
testb
cmp
shll
jb
sbb
addb
xchg
ss
pop
cmp
mov
in
push
pop
mov
push
push
adc
test
out
cs
push
fildll
mov
jge
stos
sbb
and
in
mov
adc
aaa
add
adc
aaa
movsl
pop
xor
mov
add
mov
divb
adc
cmp
xor
mov
sbbl
dec
cs
dec
inc
mov
lea
xchg
aas
mov
and
int3
daa
pop
mov
pop
loopne
lcall
cmp
pop
mov
push
sub
add
out
xchg
push
es
incl
int3
and
mov
out
add
mov
xchg
inc
popa
jnp
inc
cmp
sar
cmpsb
call
jl,pt
cmp
or
push
test
cmp
push
in
or
xchg
sar
ficompl
dec
pop
push
imul
pop
fimuls
mov
jmp
out
dec
jae
mov
pop
aas
lea
jg
ljmp
push
xchg
nop
inc
dec
xor
mov
sub
mov
test
into
mov
and
push
mov
xchg
dec
jo
mov
or
xor
call
in
mov
xchg
add
push
dec
stos
dec
dec
jae
push
add
and
cmpsb
push
ret
push
xchg
add
pop
movsb
sub
out
jne
dec
ljmp
es
mov
mov
outsl
add
es
mov
push
mov
scas
sar
addr16
xlat
jnp
and
imul
dec
ds
popf
ja
test
mov
or
cli
or
ret
dec
loopne
add
and
sbb
pop
or
out
or
pop
mov
mov
std
adc
mov
fnsave
daa
dec
cmp
mov
or
push
gs
adcl
adc
mov
movsl
xor
or
lea
mov
mov
push
test
scas
pop
fidivrs
push
mov
inc
incb
add
out
in
push
fstps
mov
iret
pop
push
sahf
movl
pop
cmc
pop
add
ss
fadds
jg
push
jbe
arpl
pop
fcoms
xor
cmpsb
dec
jae
sbb
ljmp
or
push
scas
pop
dec
js
push
add
lods
or
gs
sub
add
sub
mov
scas
cvttps2pi
mov
sarb
cmp
mov
pop
sti
mov
mov
adc
inc
in
pusha
lods
sbb
movsb
pop
adc
call
cwtl
add
nop
shlb
sbb
mov
shrl
imul
dec
pop
dec
arpl
fcomps
adc
in
pop
fsubs
xor
inc
adc
mov
adc
push
xor
add
push
imul
aas
mov
xchg
lret
int3
sub
jno
or
dec
push
inc
stc
outsb
jae
divl
jp
mov
hlt
decl
push
pop
push
push
in
pusha
jo
mov
cmpsb
dec
cmp
rorb
push
sbb
out
xor
xor
call
xorl
pop
rcrl
test
jno
jg
jmp
mov
cmovo
jp
inc
repz
outsl
es
in
imul
clc
jg
dec
and
out
or
cmp
sub
cld
pushl
inc
cs
pop
adc
push
test
shll
addr16
lcall
ffreep
pop
mov
cwtl
pop
lret
lret
or
inc
leave
sbb
lret
add
jg
pop
js
stos
xchg
mov
sub
mov
test
or
inc
or
mov
pop
fsubrp
mov
vmread
mov
sbb
xchg
iret
adc
jo
inc
xchg
scas
lods
adc
push
cmc
pushl
pop
es
es
sbb
xchg
dec
adc
mov
sub
les
xor
mov
inc
add
cltd
xchg
ljmp
popa
jmp
jne
jp
scas
adc
push
test
scas
dec
sti
test
inc
outsb
les
cmpsb
dec
push
dec
out
add
leave
mov
adc
add
push
lods
stc
adc
call
xor
outsl
mov
outsb
pop
call
adc
aam
xlat
fwait
loope
aas
mov
fwait
xor
rcll
fstpl
mov
loop
mov
je
adc
lods
inc
dec
rcrb
mov
inc
jecxz
cmpsb
xor
cmp
incl
sbb
xchg
sarl
mov
push
in
jns
leave
pop
mov
pop
push
es
mov
adc
mov
jg
jbe
push
or
push
sbb
mov
cli
add
pop
test
push
daa
lea
arpl
aas
out
adc
xchg
xchg
xchg
jne
mov
push
xor
pop
pop
aas
cltd
jae
sbb
jmp
jbe
dec
adc
sbb
dec
jb
dec
push
fdivrs
pushl
push
in
sub
xor
cltd
mov
outsb
add
sbb
add
jo
add
pop
aas
add
add
in
xchg
aam
xor
xor
movsb
dec
add
je
fbld
loope
mov
out
into
sbb
cmpb
add
popf
mov
dec
mov
ja
shrl
dec
clc
cmpb
shlb
fbld
sahf
aas
dec
mov
dec
aad
scas
scas
cld
ljmp
push
jg
or
testl
mov
stc
movsb
les
pop
fiaddl
xor
xchg
add
sub
je
pop
pop
xor
add
push
cmp
or
fisubrs
fwait
stos
add
enter
int
adc
pop
jae
jo
cmp
decl
jb
add
sub
stc
or
incl
add
je
pop
mov
pop
dec
stos
cmc
or
dec
add
jbe
scas
ljmp
push
aaa
pop
add
mov
mov
sbb
inc
push
mov
rcl
jmp
aaa
jmp
int3
dec
jbe
mov
xchg
push
jl
dec
ljmp
jbe
cld
xchg
jno
add
jmp
data16
or
cmp
std
xchg
push
sbb
sbb
inc
pushf
mov
mov
inc
mov
inc
push
push
ljmp
adc
test
dec
leave
jbe
imul
pop
dec
and
xor
sbb
icebp
call
popf
or
xor
data16
incl
mov
and
shrl
jns
push
shll
pop
jb
pop
xchg
daa
sub
add
push
incl
and
push
and
jns
sahf
mov
scas
ret
push
add
xchg
rclb
les
decl
pop
or
mov
lods
mov
mov
dec
mov
mov
add
inc
adc
jo
pop
sbb
push
outsb
mov
pop
sbb
mov
jg
andl
push
cmpsb
mov
lret
or
push
pop
sbb
pushl
xor
mov
lods
incl
xchg
jbe
bound
cwtl
mov
cmc
scas
sbb
pusha
cld
popl
outsl
test
lcall
push
cmp
sbb
out
in
sbb
mov
das
xor
andb
cli
and
inc
inc
lods
jp
shll
clc
push
pop
enter
test
mov
and
and
cmp
lock
inc
mov
pop
inc
popf
popa
ret
adc
out
and
cmp
fcomip
inc
sub
push
inc
je
es
movsb
and
dec
adc
or
xchg
push
mov
addr16
test
pop
and
sbb
xchg
pop
add
cld
scas
push
push
ret
sub
add
mov
push
sti
or
mov
sub
mov
adc
sub
iret
arpl
imul
outsl
data16
push
adc
add
punpckhwd
pop
xor
cwtl
je
mov
cmp
pop
roll
adc
mov
jge
xchg
push
shlb
imul
daa
mov
pusha
sbb
jg
clc
push
and
push
icebp
pop
or
sti
dec
jo
jae
xchg
xor
mov
adc
pop
mov
lcall
out
add
xor
push
shll
decl
add
sub
push
gs
jnp
and
or
movsb
pushl
imul
inc
adc
decl
leave
orl
sbb
lea
mov
jo
or
das
and
xor
cmp
dec
fs
pop
imul
inc
mov
and
lea
aaa
movsl
mov
aas
sub
test
sub
lcall
cld
out
pusha
std
inc
mov
scas
jle
out
xor
push
cltd
and
add
cmpsb
stc
mov
pop
out
or
in
aaa
stos
sbb
dec
xchg
xor
mov
inc
pop
add
jmp
xor
cmp
pop
push
or
push
ljmp
jb
dec
push
jp
jno
push
mov
outsl
clc
jbe
stos
xor
cmp
stos
inc
jl
push
push
push
jge
addr16
add
jg
push
sbb
add
cs
lea
mov
jae,pn
xchg
jbe,pn
dec
adc
push
ljmp
in
or
and
pop
inc
out
scas
fs
in
decb
data16
fisttpll
outsl
mov
sarb
sbb
pop
sub
stos
pop
cmp
rolb
fnsave
icebp
cmp
push
mov
xor
sbb
cli
movsl
mov
outsl
outsb
adc
jno
push
aas
mov
pop
cwtl
cmpsl
in
xchg
push
lcall
daa
sub
xchg
inc
push
adc
mov
outsl
pop
jne
inc
jb
pop
cwtl
cmp
and
jg
push
lods
add
dec
stos
mov
jbe
mov
and
xchg
lods
into
outsb
fldenv
cmpsl
fs
ljmp
ljmp
push
adc
pop
pop
mov
mov
add
jae
jae
cmp
mov
lods
lcall
les
ret
cmp
adc
arpl
decb
movsb
inc
lcall
mov
inc
inc
dec
xor
cmp
leave
cld
mov
jo
outsl
imul
push
mov
pop
cmp
mov
adc
mov
nop
test
push
pop
mov
jle
add
lret
clc
add
xor
pop
push
push
hlt
popa
cmp
call
aaa
into
lea
push
sub
sbbl
ljmp
mov
and
xor
mov
imul
mov
sahf
sbb
inc
loope
call
cmpsb
add
sbb
outsl
inc
shlb
ljmp
jle
popa
sbb
jle
adc
push
cmpsl
push
add
scas
and
aaa
or
arpl
jg
pop
stos
xor
adc
and
add
frstor
mov
mov
push
les
jmp
pop
adc
dec
daa
popa
clc
or
pop
enter
dec
les
pop
mov
icebp
dec
mov
cmpsb
in
mov
out
push
mov
inc
dec
aas
dec
jp
mov
sbb
ds
incl
xchg
cmp
ficomps
addb
mov
mov
xchg
shll
loopne
pop
pop
aas
es
sbb
ds
out
lods
sahf
loopne
mov
push
xchg
mov
inc
push
adc
xchg
stos
adc
mov
push
push
dec
xor
jmp
test
xlat
dec
lods
outsl
mov
stos
push
stos
pushf
push
mov
mov
pusha
xchg
scas
jge
xor
dec
cmpsl
cwtl
incl
insl
stc
scas
push
mov
mov
mov
loop
cwtl
cld
sahf
inc
push
mov
xchg
cmp
dec
decl
inc
mov
pop
mov
outsb
pop
xchg
test
mov
pop
aad
pushf
mov
pop
sbb
imul
lock
pop
cli
xor
inc
add
sar
out
mov
test
jge
sbb
pop
call
push
jno
mov
pusha
mov
xchg
lcall
or
inc
xchg
dec
imul
push
push
sbb
mov
aam
sbb
daa
movsb
scas
call
scas
add
fbstp
xlat
inc
dec
dec
loop
stos
xchg
mov
inc
push
adc
into
pop
xchg
mov
jae
cmp
push
jo
shll
arpl
subl
testb
scas
addr16
in
mov
cmp
adc
sbb
out
std
adc
sub
lahf
dec
push
dec
dec
cmpsl
push
jle
arpl
add
xor
mov
mov
test
inc
imul
sbb
mov
lea
pop
lock
mov
js,pn
ja
scas
jbe
adc
or
cmp
icebp
sub
push
jo
push
mov
sbb
add
mov
adc
or
sbb
inc
cmp
sbb
test
pop
xchg
daa
mov
sbb
lods
insb
lcall
loop
jle
sub
mov
out
sahf
roll
cld
pushl
loop
mov
jle
mov
jp
jne
inc
sbb
push
or
sub
mov
clc
incl
dec
fisttpl
mov
and
mov
pop
rcrb
mov
inc
push
shrb
bound
cmpsl
push
sar
xchg
push
mov
jg
mov
sub
mov
adc
jbe
loop
incl
outsl
push
inc
adc
sbb
jb
inc
adc
ds
loope
loope
inc
dec
inc
mov
clc
ds
aam
push
movsb
push
pop
add
mov
and
mov
xchg
xor
scas
cmp
cwtl
lods
pop
aaa
movsl
outsl
ss
inc
pop
and
and
cld
pop
lock
dec
jle
hlt
inc
insb
movsb
push
test
gs
lock
ds
push
pop
outsl
pop
scas
jmp
push
lods
dec
cltd
push
lea
inc
cld
ljmp
mov
inc
add
push
push
push
jge
lcall
jae
and
jl
imul
mov
or
jo
test
xchg
mov
das
mov
jl
push
sbb
pop
sub
or
pop
popa
loope
mov
fdivrl
call
cld
hlt
into
cmp
addr16
mov
cmp
sub
pop
adc
jnp
pushl
mov
jge
xor
jmp
mov
js
pop
cmp
pop
sbb
arpl
push
mov
mov
dec
adc
pop
stos
in
pop
xchg
pushf
jge
dec
sub
cmp
sub
dec
out
and
sbb
dec
mov
and
pop
dec
mov
ljmp
icebp
xchg
bound
mov
push
mov
fldenv
mov
adc
adc
push
inc
jno
push
ljmp
xor
gs
cmpsl
cmpsb
and
shrb
cmp
cmpsb
dec
jmp
loope
fsubrl
stos
je
cmp
lods
fcom
decl
daa
adcb
stos
insb
arpl
es
adc
nop
nop
pushl
push
pop
jbe
or
test
cmp
dec
stos
and
sub
roll
ret
sbb
sbb
in
inc
addb
icebp
out
add
out
out
outsl
adc
andps
cmp
or
call
and
xor
pop
popf
movsl
sbb
xchg
scas
out
rcrl
sbb
fcompl
push
jg
inc
stos
ja
loopne
mov
push
and
dec
mov
arpl
mov
pushl
int
push
mov
lea
cmp
bound
sub
sub
or
xchg
push
test
sbb
push
mov
dec
cld
lcall
mov
ret
sub
dec
aas
sar
mov
mov
aas
dec
daa
inc
fidivrl
in
ficoms
repnz
in
hlt
sar
push
ret
inc
add
xchg
xchg
sbb
ja
and
popa
jg
mov
into
lcall
mov
dec
fwait
mov
dec
mov
inc
test
jg
ja
test
add
pop
lcall
xor
dec
arpl
nop
and
das
jl
test
and
pushf
xchg
mov
sbb
mov
mov
mov
jmp
mov
xor
lret
or
aas
jnp
aas
mov
add
fcomip
in
cwtl
in
stc
sbb
cmp
out
xchg
repz
push
dec
bound
aaa
jmp
lret
inc
sbb
std
push
movsl
and
cmp
scas
push
ja
lods
ret
dec
mov
aas
std
sub
stos
jle
test
mov
sbb
mov
xlat
xchg
test
pop
sahf
cmp
ljmp
push
mov
cmp
mov
mov
cmp
adc
push
jp
dec
sbb
dec
adc
iret
mov
mov
pop
dec
mov
scas
pop
inc
pop
cmp
mov
xchg
cwtl
rorl
pop
mov
test
es
and
push
mov
and
loop
mov
fildll
dec
or
adc
cmp
ss
jnp
dec
adc
xchg
mov
stos
sbb
cmp
adc
sub
push
xchg
or
xor
sbb
clc
sahf
adc
push
cld
jmp
rcrb
mov
shlb
inc
adc
cmp
pop
cmp
xchg
ud0
lds
xor
pop
loopne
mov
lock
adc
cmp
and
ss
or
jl
cmp
adc
dec
sbb
sbb
lea
fbstp
cmp
cmp
add
inc
mov
lcall
pushfw
imul
xor
ret
pop
xor
stc
xchg
cli
inc
in
mov
decl
push
mov
xchg
pop
pop
mov
push
imul
push
in
jg
les
dec
adc
mov
push
sbb
inc
and
xchg
mov
cmp
mov
pop
imul
je
push
in
imul
add
push
push
clc
pushf
xchg
mov
lcall
pop
rcrl
das
hlt
fucomip
xor
ljmp
out
insl
dec
xchg
stc
pop
mov
ljmp
movb
cwtl
sbb
adc
mov
dec
lcallw
out
push
xor
shlb
jne
push
clc
loope
outsl
pop
orb
bound
inc
mov
aad
ja,pn
cmp
es
les
sar
lcall
mov
repz
fwait
mov
xor
dec
jae
aam
sar
mov
loop
scas
pushf
dec
lret
xchg
inc
xchg
mov
imulb
das
inc
out
cld
gs
lcall
jg
pop
cmp
jo
lds
lods
pushf
cmp
or
pop
and
inc
push
inc
leave
or
ret
add
jle
mov
lcall
dec
out
xchg
push
push
mov
stos
xchg
scas
mov
sub
pop
aaa
mov
mov
stos
dec
loope
or
out
cmc
push
fstl
dec
pop
add
pop
add
mov
add
inc
and
jg
lods
int
inc
or
mov
loopne
insl
aas
lret
nop
es
push
in
pop
in
jne
call
test
lds
push
cmp
leave
xor
inc
adc
mov
fwait
push
or
jbe
xchg
dec
jg
push
jne
int3
push
jmp
loop
outsb
pop
sahf
add
rclb
adc
aad
xchg
adc
dec
scas
sub
lock
and
push
icebp
push
sarb
pusha
cld
scas
mov
adc
lds
xor
mov
push
lret
cltd
push
inc
xor
das
pop
in
lcall
or
xchg
inc
dec
icebp
fcomip
xchg
scas
leave
repnz
loop
mov
in
sub
xor
incl
mov
xor
aaa
mov
dec
loopne
push
lret
leave
sub
out
in
cld
aaa
xchg
inc
mov
mov
lods
mov
pop
stc
mov
insb
call
std
data16
mov
in
pop
lea
sbb
xor
jp
ljmp
cmp
sub
pop
dec
jp
inc
push
jae
aaa
inc
inc
subl
stos
outsl
dec
or
add
pop
xchg
lods
mov
incl
je
dec
sbb
dec
jp
and
pop
ficompl
fldcw
adc
inc
sub
cli
add
and
adc
int3
mov
lea
aas
les
mov
fdivr
mov
cs
xchg
je
jo
and
push
mov
aam
pop
xorb
mov
sbb
pusha
mov
outsb
xchg
sbb
pusha
loopne
iret
int3
and
ret
loope
hlt
fildll
and
push
into
repnz
aam
push
pop
imul
or
sub
mov
push
mov
movsl
cs
imul
les
pusha
or
add
cmp
mov
out
test
cs
aaa
cmpsb
and
and
cmp
inc
mov
das
call
mov
sbb
pop
negb
mov
cltd
add
add
cmc
lahf
call
fiadds
push
mov
sahf
clc
xchg
jbe
cltd
ljmp
cmpb
insb
push
test
jbe
dec
out
mov
out
xchg
mov
jl
mov
stos
rorl
mov
mov
sub
xchg
and
sti
call
mov
dec
pop
pop
adc
mov
test
sub
push
ss
inc
mov
jl
sbb
pop
js
xorb
mov
adc
sbb
aad
jl
loop
pop
pop
push
jne
jmp
cs
mov
inc
dec
pop
das
fsubrs
orb
sub
jns
pop
je
push
sub
imulb
cwtl
rolb
cwtl
test
movsl
daa
inc
mov
and
sbb
adc
fldt
aas
add
and
mov
repnz
inc
xor
stc
inc
nop
hlt
fildll
xor
imul
push
out
mov
xchg
mov
sub
lahf
lds
ss
push
sbb
ss
lcall
scas
mov
pusha
repnz
loop
mov
les
inc
push
les
std
mov
adc
aas
adc
ret
sbb
rolb
popa
rorl
test
adc
pop
push
aad
enter
bound
lock
jle
fs
mov
xor
cmp
nop
and
addl
outsb
sub
lea
sbb
mov
mov
inc
cmpsl
add
ljmp
add
loope
mov
test
push
repz
pop
dec
jp
aad
jg
out
aaa
dec
js
cld
ficoml
aaa
sbb
out
inc
add
xor
movsl
into
cmp
push
mov
aas
push
cld
push
sbb
sbb
mov
ljmp
push
sbb
incl
test
push
and
cmpsl
push
adc
mov
fcomip
sub
cli
popf
lea
in
mov
xor
add
outsb
lret
cmp
jbe
sbb
das
adc
test
incl
mulb
ret
dec
enter
sbbl
mov
and
push
ja
push
out
or
fildll
xor
mov
cmp
test
and
add
pop
mov
mov
sbb
pop
and
mov
and
pop
ds
jns
xchg
int
pop
fs
push
aad
adc
or
sti
sub
mov
outsl
cmpb
emms
decb
push
push
aaa
jecxz
lcall
or
rcll
adc
jae
ds
and
in
lret
ja
inc
cmp
pop
imul
dec
cmp
mov
outsb
sbb
mov
fucom
sbb
push
sub
mov
jl
mov
pop
ljmp
scas
pop
sub
jmp
pop
out
std
add
mov
imul
dec
mov
popa
pop
enter
cli
pop
inc
scas
xor
jno
dec
mov
push
dec
mov
outsl
dec
aas
and
xor
fs
mov
lcall
or
out
jmp
lret
sub
out
inc
outsl
xor
ds
sbb
clc
loope
fwait
sub
out
mov
es
fldenv
push
popa
add
test
push
jne
jb
addr16
sahf
jg
mov
inc
rcrb
cwtl
push
fiaddl
dec
ljmp
call
or
push
into
add
insb
add
inc
pop
push
jb
push
imul
decb
loop
push
inc
mov
push
stc
es
jge
jne
jg
call
jge
sbb
or
push
xchg
scas
gs
cmp
leave
mov
lods
sar
mov
in
add
dec
push
pop
shll
out
xor
leave
adc
xchg
call
dec
dec
sbb
jg
ss
and
jg
outsw
sbb
add
pushl
or
cmp
cmpsl
jbe
shrl
and
out
out
arpl
je
or
and
cltd
repnz
inc
mov
iret
or
ja
lock
dec
in
enter
add
shlb
mov
or
fildll
add
mov
jns
push
icebp
push
jmp
cmpsl
xor
mov
jle
dec
jns
add
je
inc
mov
fistpl
shlb
dec
cmp
xor
notl
mov
out
mov
aaa
cwtl
clc
jmp
mov
insl
add
pop
or
mov
adcl
rorb
cmpsb
mov
notb
push
jp
jecxz
data16
movsb
adc
outsb
ljmp
scas
adc
adc
in
out
movsb
push
enter
lahf
mov
adc
cli
out
ret
outsb
and
lret
loopne
mov
das
movb
shll
iret
loopne
mov
add
out
les
or
repnz
ret
popf
ret
push
outsl
ljmp
lock
dec
test
push
insb
fiadds
jecxz
and
cmp
cld
orl
adc
scas
and
lcall
int3
cltd
test
push
mov
dec
pop
sub
sub
push
sbb
stos
mov
hlt
mov
mov
ret
ss
push
loope
das
add
aad
adc
fwait
loope
clc
jg
jecxz
mov
adc
push
xchg
cwtl
js
jo
icebp
sbb
lock
push
sbb
clc
scas
and
cmp
gs
pop
mov
cmc
pop
cs
mov
out
jno
xor
jge
inc
push
loop
sbb
xor
popf
icebp
aaa
cmp
cli
dec
mov
jb
arpl
push
inc
xchg
sahf
dec
jg
ficompl
ficoml
loop
scas
and
xchg
loop
jg
push
scas
push
add
adc
stos
out
inc
mov
pusha
sti
cmp
decl
mov
dec
push
je
pop
mov
push
insl
xchg
add
add
pop
imul
jg
imulb
inc
dec
out
cmp
mov
xlat
sbb
mov
and
cmp
jno
dec
adc
dec
cmpb
cmc
dec
pop
shll
sbb
adc
cmp
lods
aad
pop
mov
xchg
dec
push
fwait
add
xor
push
mov
push
xor
push
sbb
ja
push
or
lahf
inc
cmpl
fwait
push
or
and
imul
push
fwait
push
inc
icebp
pop
xchg
data16
mov
sarb
push
pop
scas
adc
jg
push
ret
je
subl
into
scas
jle
xchg
sub
xchg
push
int3
sbb
fwait
push
jae
clc
or
loop
sbb
push
and
arpl
adc
pushl
dec
out
or
test
mov
scas
jmp
mov
sbb
into
push
jbe
and
inc
lcall
add
jp
sbb
push
xchg
dec
fldcw
dec
push
jl
dec
scas
pushl
data16
cmp
loopne
jo
pop
cmpsb
dec
fstpt
inc
inc
loopne
jo
int
jg
sbb
dec
lret
loopne
mov
push
inc
sbb
les
pop
dec
ret
outsl
out
xor
imul
or
ljmp
jbe
test
js
aas
arpl
cmp
js
sub
and
pop
dec
jp
dec
fs
inc
testl
movsb
insb
stos
fwait
push
adcb
ds
mov
push
push
mov
mov
clc
andl
addr16
xchg
js
adc
sub
mov
imul
les
sbb
je
add
add
mov
cmp
loopne
adc
popf
sbb
cmp
ss
mov
push
pop
jns
es
stos
dec
cld
incb
mov
jo
lcall
adc
pop
jge
lds
sbb
clc
cs
jo
jne,pt
call
or
dec
stos
sbb
and
fbld
loope
mov
fstpt
sbb
add
mov
xor
pop
push
jmp
cwtl
add
ljmp
mov
daa
sti
adc
push
insb
std
mov
mull
cltd
add
stos
xlat
push
roll
cld
or
popa
std
icebp
adcl
ja
shrb
inc
icebp
stos
pushw
jbe
and
lds
frstor
mov
in
movsb
frstor
rcll
test
fdivrp
mov
or
xor
mov
sar
into
add
pop
mov
lcall
cs
clc
aaa
lahf
jmp
xchg
mov
stos
dec
xor
pop
xchg
lock
sahf
jne
into
cmpsb
ret
pop
xchg
ljmp
and
sub
adc
daa
dec
ds
std
push
mov
xor
mov
decl
sub
inc
xlat
xchg
push
mov
dec
es
adc
lcall
rolb
mov
movsl
int
movsb
push
add
fbld
cmpsl
in
adc
ret
xchg
sbb
dec
loope
push
ja
outsl
filds
sbb
out
scas
push
sti
mov
out
add
sbb
sub
cmpsl
mov
dec
and
mov
xchg
cmp
adc
push
dec
jno
add
enter
push
jmp
shlb
fiadds
out
jp
je
ja
mov
jo
scas
inc
mov
jne
adc
jb
mov
xchg
incl
aas
popa
imul
test
loop
dec
loop
jns
out
cltd
and
xchg
in
mov
pop
clc
jg
push
push
mov
adc
add
dec
es
push
mov
cs
inc
jmp
jo
test
ljmp
push
lea
inc
arpl
and
into
mov
cmpsl
add
xchg
cwtl
loop
mov
push
push
fs
and
ds
cmpsl
xchg
cmp
sbb
scas
rcrl
pushl
cwtl
fwait
add
test
call
rorb
pop
mov
inc
xchg
into
xor
mov
es
mov
xor
jg
cmc
cmp
rclb
mov
pop
cwtl
movsb
sahf
cmp
jbe
ljmp
loope
dec
fimuls
cmpsb
sbb
mov
or
mov
out
dec
jo
aam
shll
xchg
cmp
jne
dec
cld
cmp
pop
ds
lcall
scas
test
ljmp
and
inc
xor
testb
lods
xor
sbbb
mov
push
lcall
or
mov
mov
jecxz
sbb
nop
fidivs
pop
xor
mov
lcall
dec
cmp
pusha
idivb
adc
incl
mov
push
push
call
loop
loope
inc
mov
js
in
fs
push
push
pop
mov
add
pop
call
add
subl
out
jae
subb
loopne
inc
inc
pop
call
cmpsl
stos
inc
shll
loopne
shll
or
mov
sub
cmp
mov
jg
sub
arpl
aaa
ja
add
mov
push
xchg
dec
mov
pushl
inc
push
xor
xor
sbb
pop
mov
pop
test
jns
popf
decb
movsb
stos
inc
sub
mov
movsl
arpl
push
push
lock
lock
test
cmp
mov
divb
subb
aas
jbe
add
scas
sarb
sbb
das
outsl
pop
dec
cmpb
fiadds
sarb
cld
pushl
data16
dec
xor
cmpb
pop
rorl
sub
push
cmp
test
push
adc
sbb
push
je
or
ljmp
stos
sub
imul
mov
sbb
sbb
mov
decl
add
sbb
stc
lcall
lret
mov
pop
pop
ja
xchg
adc
and
pop
mov
push
inc
aam
or
fildll
cmp
xor
xchg
in
scas
xor
mov
incb
ds
xchg
dec
popf
jbe
loop
mov
push
frstpm(287
jbe
sub
inc
mov
into
push
inc
cmp
mov
aaa
std
imul
outsl
cmpsl
nop
lcall
mov
jo
push
jnp
mov
sub
push
jl
incl
arpl
scas
cwtl
push
pusha
mov
stos
or
das
lea
stos
push
in
je
outsb
leave
orb
test
xchg
adc
inc
fstl
call
bound
lea
incl
mov
loope
into
lea
scas
mov
or
lods
rorl
and
lea
outsl
push
test
inc
js
test
jmp
jle
pop
mov
mov
std
bound
bound
clc
pop
addb
mov
mov
add
sbb
sahf
icebp
lcall
rcrb
fadds
push
ret
fcomip
scas
xchg
push
xchg
xrelease
mov
das
pop
arpl
std
aas
dec
pushl
cmp
lcall
and
mov
mov
in
mov
in
mov
movl
mov
inc
add
incb
pop
ret
int3
add
mov
push
add
movl
pusha
sti
mov
lods
push
push
lea
add
les
sbb
inc
lcall
push
jb
mov
call
adc
nop
inc
push
inc
cli
dec
inc
adc
dec
push
cmpsb
pusha
fmuls
dec
gs
fstl
in
outsl
cmp
xor
adc
test
roll
push
xor
jbe
pop
repnz
sbb
push
in
jne
mov
inc
movzwl
mov
jne
push
subb
imul
enter
and
mov
lahf
adc
sbb
adc
fsubrs
das
unpcklps
int3
mov
clc
push
cmp
push
cmp
jns
cmp
xchg
add
shlb
inc
cmpl
cmp
sti
push
inc
aam
lret
test
shrb
int
xchg
adc
pop
popf
xchg
loopne
mov
pop
jo
pop
shr
fdivrl
mov
popa
mov
popa
je
call
add
dec
mov
or
push
inc
ret
roll
adc
or
pop
inc
pop
int3
fnstcw
sarl
push
es
movsl
mov
push
push
cld
push
jl
mov
enter
inc
sub
cmp
nop
push
adc
sub
clc
mov
inc
js
call
sbb
ret
icebp
push
lock
or
jno
dec
push
jge
add
push
idivb
dec
or
cmpsb
cltd
push
xor
push
lahf
aad
mov
insb
inc
inc
movsb
mov
ja
andb
cmp
rol
pop
add
sub
jmp
pusha
std
ljmp
xchg
xchg
stos
sbb
sbb
stos
jbe
mov
jmp
cli
dec
sub
jge
lahf
push
sbb
into
push
mov
and
sbb
pop
xchg
popf
test
je
out
pusha
std
lock
sbb
js
pop
cmp
adc
sbb
hlt
out
in
dec
push
test
or
adc
repnz
mov
dec
mov
fwait
mov
xchg
lea
pop
adc
adc
and
xchg
jmp
or
ljmp
loope
mov
sbb
lea
push
mov
cmp
and
fisubs
enter
or
adc
dec
adc
popa
pop
adc
dec
cmp
leave
enter
adc
xor
lock
xor
cmpsl
mov
mov
addl
jmp
or
adc
ds
jmp
mov
add
out
scas
pop
mov
jae
lea
add
lock
mov
add
pop
lock
cltd
adc
filds
shrl
sub
pop
movsl
mov
cmpsl
push
cmpsb
fisttpl
add
jmp
push
sub
jb
popf
inc
push
xchg
js
add
xchg
xor
and
jo
dec
cs
and
andl
cltd
mov
mul
popa
les
pop
mov
loop
sahf
mov
sbb
cmp
ds
lret
std
popl
int3
std
add
insl
enter
hlt
sbb
add
mov
mov
mov
fwait
adc
call
arpl
jne
push
incb
outsl
inc
clc
and
inc
clc
pop
imul
or
sbb
pop
orl
inc
scas
pop
cmp
daa
data16
scas
pop
daa
data16
loopne
addr16
mov
ret
and
out
cmpl
loop
mov
movsl
xchg
lea
add
mov
add
int3
mov
cld
xchg
or
cmp
ja
cld
je
js
cmp
jne
outsl
mov
sub
test
cmpsb
pop
pushf
sub
ret
pusha
cmp
sar
jo
pop
and
ss
js
push
clc
pusha
aam
add
cmp
jge
in
inc
xor
mov
cltd
std
mov
adc
aad
add
adcb
dec
or
addr16
push
fcomps
ss
mov
and
dec
or
lret
outsb
inc
fstpl
popf
movsb
lret
std
fisttpll
and
lret
std
mov
rcll
adc
xor
pushf
cmpl
data16
mov
cmp
cmp
inc
inc
dec
rcrl
int
aam
cmp
movsb
in
xor
xchg
test
pop
inc
aas
add
sub
pushf
sub
adc
lahf
mov
in
pusha
adc
push
xor
mov
je
test
std
jo
lock
jecxz
jecxz
movsl
or
adc
sbb
addb
sbb
arpl
push
int
xor
mov
lea
test
xor
dec
add
add
in
sub
mov
lods
cmpsb
inc
inc
push
repnz
dec
pusha
test
je
xor
dec
jmp
push
or
inc
push
dec
in
js
dec
insb
and
in
adc
push
xchg
jnp
in
xchg
outsl
or
out
cld
jb
push
ret
lods
lret
push
xchg
dec
in
aas
adc
rorb
dec
mov
inc
lea
pop
jmp
mov
adc
lret
imul
xchg
push
subl
fucomip
xor
stos
and
and
mov
movsb
enter
mov
dec
stos
rcll
fmuls
imul
push
jmp
push
push
pop
pop
movl
jmp
mov
jo
mov
js
movb
lds
inc
or
fcomp
xor
fs
insb
inc
addr16
leave
inc
pop
push
lods
int
fisubrs
push
cwtl
push
mov
push
or
mov
cmp
add
faddl
mov
xor
and
notb
xchg
or
jo
scas
ja
push
mov
pop
jne
xor
adc
sub
test
dec
ljmp
add
ss
cmp
sub
push
mov
push
fimull
sbb
pushf
fadd
stos
call
add
ljmp
jb
inc
add
lahf
sub
xchg
push
jne
lcall
sub
je
mov
movl
and
lods
int3
leave
mulb
out
lret
cmp
arpl
add
in
xchg
arpl
mov
mov
test
int3
insl
mov
sbb
dec
mov
ds
mov
xor
sbb
arpl
aam
xchg
out
push
addr16
push
out
cmp
gs
cmpsl
add
jne
rcll
sub
mov
adc
mov
jo
jge
add
xchg
add
lret
cmpsl
mov
cli
je
adc
mov
sub
sbb
sub
dec
add
loop
sub
stos
fsub
xchg
sub
inc
xchg
fildl
test
in
lret
leave
push
mov
enter
mov
lds
xchg
xchg
lret
adc
sub
sub
sub
pop
rcll
pushf
push
pop
inc
mov
in
pop
lcall
push
push
lret
ret
sbb
nop
lds
std
js
add
xor
out
and
push
pusha
and
pop
xchg
dec
jmp
cmp
inc
xchg
or
push
cmc
mov
or
mov
mov
sbb
adc
test
jbe,pn
movsb
sahf
add
jmp
and
test
push
adc
test
add
mov
imul
fwait
push
mov
push
push
testb
fbld
push
mov
lret
idiv
jge
jb
lret
pop
mov
jb
and
mov
mov
xchg
inc
push
cwtl
int3
pushf
test
sbb
add
fidivrl
call
sbb
les
jmp
stos
das
shlb
add
imul
jmp
test
rcll
clc
inc
add
inc
jmp
inc
push
in
cwtl
and
enter
xchg
or
push
iret
sbb
fwait
arpl
in
adc
adc
fstps
xchg
push
pop
push
cs
lea
add
je
mov
mov
xor
mov
inc
push
xchg
xchg
jb
mov
mov
inc
mov
sub
fnstcw
gs
and
lret
lret
popl
shlb
aas
mov
jo
or
pop
sbb
mov
insl
pop
in
mov
push
lea
mov
sub
push
push
int
mov
ss
inc
or
shrl
in
fsts
cmpsb
xor
add
mov
push
push
mov
test
pop
adc
cmp
test
out
jo
xchg
push
cwtl
xor
mov
or
jmp
lret
enter
mov
mov
adc
orl
jp
dec
mov
or
mov
dec
xchg
mov
push
daa
scas
adc
xor
sbb
sbb
pop
and
xchg
insl
jno
xchg
pop
or
adc
movsb
std
xchg
dec
mov
dec
jle
fnstsw
test
and
shll
add
out
mov
arpl
or
cmpsb
pop
mov
sbb
add
lret
dec
iret
out
pop
out
jae
adc
out
jbe
lods
and
rcrl
xchg
xor
loop
inc
add
jne
mov
loope
mov
jns
stc
adc
push
popf
movsb
jmp
pusha
add
ja
bound
dec
or
xchg
adc
mov
addb
or
imul
int
push
xor
or
push
xor
movsb
sbb
popf
sbb
pop
add
adc
inc
call
or
mov
pop
mov
ret
sbb
shlb
jmp
shr
movsl
stos
add
mov
pop
pop
pop
inc
arpl
rclb
sbbb
cld
inc
or
popa
add
call
inc
sbb
test
int
shlb
lock
fs
and
adc
or
insb
in
shlb
imul
arpl
mov
mov
popf
xlat
cmp
cmp
add
xor
mov
clc
jne
fsubrl
mov
int
lock
arpl
cmp
add
mov
lods
sarb
in
cs
frstor
jns
mov
shrb
sarb
sub
sarb
btc
or
or
lock
adc
and
sbb
test
inc
xchg
adc
test
in
mov
inc
jae
loopne
lods
int3
and
loopne
sbb
or
call
nop
adc
in
adc
lret
mov
dec
adc
lods
jecxz
adc
adc
or
movsl
sbb
fcmove
lret
mov
repnz
test
adc
adc
ret
mov
xor
and
in
cmp
mov
leave
sbbl
movzbl
dec
cs
addr16
std
add
mov
loopne
cmp
lods
pop
or
shrl
mov
ss
and
sub
lret
repnz
repnz
xchg
test
rcrb
imul
insb
aas
sub
faddp
mov
gs
std
lea
ret
rorl
std
push
push
xchg
ss
ret
in
or
lcall
push
or
ds
inc
enter
add
je
mov
jmp
sub
jnp
push
cld
fiaddl
cmp
js
dec
cli
inc
cmp
add
fs
in
cmpb
cmp
dec
lock
lea
mov
movsb
clc
pusha
dec
push
mov
push
push
sub
mov
loop
mov
xchg
or
data16
std
iret
mov
dec
push
cmp
jge
sub
sub
fistl
mov
mov
adc
shrb
lcall
jmp
shl
js
popf
push
leave
int3
pusha
lock
aas
mov
add
add
pusha
fwait
call
call
lea
add
add
mov
rclb
xor
fidivl
lcall
add
inc
xor
js
fisttpll
idivl
lods
xorb
cwtl
jmp
mov
mov
cmp
es
les
les
cmp
push
mov
cs
in
and
add
sub
and
mov
push
add
push
xor
hlt
xchg
bound
sbb
and
jne
mov
and
push
mov
dec
fsubs
fadds
sbb
rcl
loope
jg
rorb
jmp
rorb
xorl
push
mov
call
jo
add
adc
add
int3
xor
shr
cmp
dec
rclb
add
xchg
xchg
pop
cmp
add
rcl
push
adc
or
or
or
insl
push
hlt
and
std
push
lahf
dec
adc
and
adc
push
push
mov
js
into
inc
push
sbb
cmp
aam
clc
sti
add
shll
shr
and
mov
fisttpll
shrb
jmp
loopne
or
or
add
ret
ret
inc
add
fdivs
push
jns
sub
lock
push
dec
enter
push
aad
or
call
push
repz
pop
pop
mov
push
mov
mov
push
cld
setge
sbb
pop
pop
or
or
call
fs
and
cmp
mov
mov
mov
jg
inc
dec
push
ds
hlt
in
add
jae
hlt
leave
out
in
mov
imul
loope
push
sub
fstpt
cld
sub
inc
cmp
in
sbb
push
lock
adc
dec
mov
and
mov
mov
hlt
cmp
adc
cmpb
pop
sub
sub
imul
dec
add
andl
push
call
int3
rclb
or
fs
cmp
pop
sarl
cmp
scas
in
clc
sub
add
jmp
jmp
and
pop
xor
aad
call
push
or
ss
adc
or
adc
addr16
xchg
sbb
jecxz
clc
cld
add
and
or
icebp
cmp
gs
sub
mov
sarb
aaa
fisttpll
mov
sub
sbb
sub
mov
clc
std
dec
sub
insl
mov
pop
push
je
dec
lcall
xor
cmp
xor
add
push
push
dec
sub
hlt
scas
aas
mul
loopne
ljmp
imul
jnp
fisttpll
sbb
cmp
cmp
gs
out
cmp
jne
cmpl
cld
lods
adc
jg
xor
shll
ljmp
sbb
das
cltd
inc
or
xor
loop
test
jmp
and
and
lods
mov
pop
in
xchg
or
push
mov
xchg
popa
enter
adc
mov
fmull
push
add
es
cmc
adc
pusha
add
mov
push
mov
mov
pop
rep
cmp
popa
mov
outsb
or
xchg
lret
inc
mov
mov
push
pusha
out
std
out
mov
jne
push
cmp
cs
inc
or
sub
sub
or
mov
sbb
addr16
loopne
lea
insb
sbb
fcoms
sbb
inc
xchg
adc
push
mov
loop
or
xchg
xchg
inc
daa
ljmp
out
xchg
adc
xchg
out
pop
int
xor
add
inc
stos
stos
pop
loop
cmp
adcb
pop
roll
sub
stos
dec
ja
and
sbb
push
adc
imul
nop
add
push
jo
imul
and
cmp
sbb
sahf
push
das
test
or
icebp
bound
or
xchg
dec
cmc
and
push
test
movsb
push
sbb
mov
push
mov
femms
sub
jne
aaa
mov
add
or
push
loope
cld
mov
loope
or
inc
sub
aas
pusha
movsb
dec
add
mov
out
arpl
xor
inc
adc
jmp
xchg
incl
jno
ret
fildll
dec
test
inc
div
push
loop,pt
inc
clc
lahf
test
loop
icebp
push
and
mov
lcall
push
add
out
xor
push
mov
push
sub
test
int
or
mov
lods
adc
push
shlb
or
add
icebp
fucomip
push
dec
cmpl
jb
ljmp
aam
or
jbe
das
js
sub
cld
mov
mov
mov
cwtl
popf
mov
out
inc
insb
dec
sbb
cld
das
addl
inc
sbb
dec
inc
out
divl
dec
js
and
mov
insb
jo
push
out
es
inc
add
mov
imul
add
mov
sub
mov
test
je
movsb
mov
mov
add
mov
ret
add
scas
mov
sub
push
es
jne
fdivrs
cmp
sub
adc
loop
adc
adc
fs
cmp
sbb
in
adc
add
adc
sbb
int3
xchg
out
pop
push
lahf
cmp
stos
dec
in
add
mov
sti
mov
sbb
mov
mov
cli
or
inc
lret
lret
jmp
or
subb
push
sarl
lock
push
or
loop
sbb
es
lods
xchg
lcall
xchg
out
jg
test
test
test
test
negb
jb
movsb
push
es
jne
sbb
or
iret
lea
cmp
fwait
in
mov
daa
sbb
fcomps
mov
pop
push
lock
fldcw
xor
test
mov
lcall
aam
inc
adc
clc
inc
ret
cmpsb
mov
sahf
movsl
hlt
sub
xchg
ss
jo
pop
loop
mov
push
outsl
or
test
or
mov
cmp
enter
int3
andb
je
movsb
repnz
cmp
sbb
or
push
xor
xor
sbb
mov
mov
scas
fs
xor
mov
xchg
inc
push
jns
test
mov
test
mov
dec
test
pushl
sbb
push
mov
push
in
sub
jae
inc
cmpsb
popf
sbb
or
adc
sub
in
loopne
xchg
loopne
loopne
and
cmp
pop
fsub
fdivrl
jne
in
mov
dec
xchg
imul
sti
scas
aas
sahf
scas
push
and
add
push
std
cmpsb
mov
imul
mov
cmp
sbb
in
fcoms
sbb
jmp
mov
xor
mov
mov
fdivr
add
aam
adc
sbb
add
pop
push
shrb
idiv
add
and
mov
pop
leave
jo
lea
loopne
jae
push
loopne
sbb
cmpb
or
adc
cwtl
or
jae
divl
out
cs
shlb
push
aam
add
jb
dec
aam
push
or
loopne
loopne
jmp
bound
jne
call
movsl
sub
push
push
cs
loopne
rorl
mov
or
rcrb
shl
icebp
movsb
mov
inc
enter
or
adc
faddl
dec
sbb
sub
cs
push
push
out
lock
adc
xor
fcomps
dec
xor
push
mov
enter
push
or
shlb
jmp
sbb
rolb
mov
leave
xor
rcl
iret
mov
enter
xchg
out
enter
enter
inc
filds
pop
insl
repnz
test
shl
sbb
loopne
es
sub
push
andb
xor
les
cmp
cmc
or
call
sub
out
mov
jae
sarl
push
push
pushf
leave
sbb
pop
div
xor
cld
fwait
sub
dec
sbb
jmp
fcomp
shrb
mov
js
imul
and
int3
and
inc
call
enter
jl
sub
fmuls
add
and
pop
nopl
add
test
insb
adc
add
and
in
add
in
cmp
push
aas
mov
mov
sub
inc
and
adc
sub
mov
daa
inc
movsb
mov
outsb
test
movsl
jb
test
or
mov
mov
in
test
pop
or
push
mov
dec
xchg
pop
test
sbb
inc
xchg
and
stos
xor
jo
xlat
data16
dec
and
rclb
inc
aas
inc
or
push
mov
or
xchg
cld
clc
cld
push
imul
cld
js
test
es
mov
push
cmc
ja
dec
add
add
aas
adc
mov
or
mov
pop
push
push
jbe
or
mov
js
divl
clc
add
mov
or
mov
mov
dec
icebp
push
adcb
enter
js
push
ret
mov
adcb
sub
sti
xor
js
inc
lock
insb
aad
test
stos
mov
add
loop
or
sub
lock
fists
lock
out
mov
jl
movl
ds
mov
cmpb
xlat
xor
pop
faddl
add
and
mov
sub
popf
pop
inc
sbb
sub
sbb
ss
int
hlt
jb
dec
add
ss
in
mov
mov
es
xor
pushf
orb
movl
adc
jb,pn
sbb
adc
cmp
into
sbb
push
xor
inc
nop
xchg
adc
inc
jecxz
cmp
push
mov
push
push
xor
dec
loopne
cmpsb
hlt
fmuls
dec
loope
mov
inc
sub
out
mov
jmp
xchg
or
adc
push
jo
xchg
add
loopne
inc
shlb
add
mov
dec
addl
jmp
or
in
jmp
insb
sub
mov
cld
adcb
test
push
add
push
push
lea
shrl
cld
inc
mov
pop
fs
jb
mov
es
push
dec
push
mov
sarl
add
cmp
add
push
dec
fwait
orl
adc
test
sahf
inc
ds
sti
pop
pop
dec
dec
cmpsl
je
xor
inc
push
mov
std
nop
arpl
add
or
or
imul
jo
inc
push
sub
and
sub
jecxz
fxch
push
jne
orb
faddl
inc
pop
test
bound
call
inc
fsubl
repnz
test
xor
std
mov
pop
in
push
push
rcr
push
inc
push
cmp
lea
or
data16
mov
mov
inc
mov
xchg
imul
ficoms
add
push
adc
add
or
lods
cltd
jae
xor
or
repnz
jae
add
xor
push
jno
cmp
ds
movsl
mov
or
sbb
add
push
sub
xor
mov
and
test
mov
jo
pop
repnz
push
cli
inc
xor
imul
adc
pusha
ds
push
adc
out
push
mov
or
add
test
test
xchg
cs
outsl
push
jnp
leave
adc
cmp
or
mov
xor
daa
setno
and
push
jecxz
mov
in
cmp
xorl
fstl
and
fnsetpm(287
adc
pusha
cmp
add
test
mov
xchg
jnp
push
into
jmp
pushf
imul
std
imul
movl
loopne
jmp
jle
mov
jmp
out
je
mov
sbb
xor
pop
push
pop
decl
fs
movswl
inc
jns
cmp
cmp
and
push
cmp
add
rorl
addl
and
cmp
fadd
inc
sub
test
adc
xor
xor
adc
arpl
inc
cmpl
xor
dec
in
inc
xor
xor
fxch
xchg
addl
cmpsb
mov
adc
shll
pop
mov
cmp
in
shlb
dec
lret
test
fiaddl
outsb
push
xchg
inc
cmc
sbb
and
loop
lock
in
aas
lea
cmp
ret
rcrl
cmp
jge
into
test
and
lret
xchg
test
pop
push
mov
jecxz
lea
mov
imul
add
loope
pop
fldenv
pop
fcomp
push
mov
push
lret
shrl
mov
jge
push
mov
adcb
push
das
push
adc
inc
push
and
cmp
cltd
loope
and
and
je
cmp
add
or
jnp
sub
int3
shrb
mov
dec
out
adc
lds
loope
pusha
sbb
jb
rorl
mov
mov
leave
jmp
mov
roll
sbbb
sbb
add
mov
cmp
lds
leave
and
push
xchg
sbb
pop
bound
mov
mov
cmp
mov
gs
add
cld
lds
jb
mov
cld
adc
push
cmp
xor
xor
aaa
lea
or
and
or
cmpl
jo
repz
cmp
add
fmul
adc
xchg
imul
pusha
fisttps
xor
mov
test
and
add
xor
in
inc
xorb
push
shl
in
mov
cmp
iret
push
push
xor
inc
mov
xchg
push
test
popl
inc
cmp
adc
cs
out
cltd
inc
jo
ret
adc
mov
dec
pop
loop
ficomps
or
adc
js
and
push
scas
xchg
pusha
pop
adc
cmp
sub
cmpsb
add
icebp
push
sbb
leave
mov
cmp
mov
sbb
nop
test
nop
mov
outsl
mov
add
inc
stos
add
xor
scas
leave
dec
and
and
adc
push
div
sbb
xor
pop
add
sbb
push
xorl
les
test
push
jge
lods
push
sbb
sbb
in
add
push
orl
subb
mov
data16
das
iret
add
test
pop
imul
mov
pop
dec
imul
mov
or
add
mov
or
push
push
movsl
or
inc
test
orb
push
mov
inc
addr16
test
or
rolb
jmp
and
aaa
inc
movsl
pop
inc
call
mov
cmp
shr
insb
int
push
cmc
push
mov
xor
fs
hlt
jne
cmpsl
sahf
lock
arpl
dec
sbb
adc
adc
nop
sbb
cltd
cmp
bound
pushf
jmp
aaa
adc
adc
pop
inc
jge
push
push
lods
mov
xchg
cwtl
popaw
cmp
pop
sbb
mov
sub
cli
nop
dec
sub
push
adcl
cmp
jp
in
mov
mov
jg
mov
cmpl
stos
sbbb
test
lret
aad
sbbl
mov
mov
movsb
test
das
push
in
pop
and
jno
dec
enter
out
push
cwtl
insl
ds
add
sub
and
pop
add
fmul
decl
or
pop
test
and
lea
and
jne
jmp
jmp
pop
iret
mov
lds
sub
cmp
inc
lods
inc
pop
divl
je
push
in
mov
mov
mov
inc
dec
pusha
fsts
mov
or
pop
adc
ret
mov
add
movb
stos
xbegin
pop
lock
lock
pusha
push
test
jge
xchg
scas
mov
sarb
xor
sbbl
or
xchg
dec
mov
xor
or
xor
pusha
push
test
popa
das
dec
add
or
dec
sub
sub
mov
xchg
mov
sub
dec
add
sbb
fidivl
lea
xchg
mov
aam
aam
dec
arpl
movsb
pusha
xchg
fldcw
add
mov
ja
add
xor
mov
ljmp
andl
scas
in
inc
adc
mov
adcl
xor
mov
arpl
cmp
pop
cld
adc
into
add
push
inc
mov
jno
push
daa
outsl
or
arpl
fcomps
dec
sbb
jbe,pn
add
mov
shlb
xchg
mov
cmp
mov
inc
aad
popf
cmp
push
fdivl
mov
mov
mov
sbb
call
cmp
cmp
cmpsl
sbb
sti
icebp
jne
mov
inc
and
pop
jb
loopne
bound
fcompl
add
in
call
inc
sub
lods
std
fdivl
movsl
and
insb
or
mov
add
les
shlb
mov
pop
cmpl
lods
mov
ds
inc
mov
in
ret
imul
cmpsb
dec
imul
shll
jp
xor
mov
je
cld
lcall
xlat
das
rorb
sbb
pop
add
push
out
jb
les
sub
outsb
int
inc
add
xor
cmp
enter
call
ss
inc
inc
es
or
cwtl
push
mul
add
les
push
push
cmp
aas
xchg
push
mov
js
mov
xchg
adc
mov
ljmp
adc
adc
imul
add
add
inc
inc
pusha
lock
dec
sbb
adc
mov
sbb
xlat
mov
mov
es
addl
rolb
push
ficoml
test
adc
repz
inc
dec
test
pop
and
cmp
addr16
and
inc
cmp
sbb
jp
jnp
and
dec
inc
movsl
sbb
xor
sbb
sbb
arpl
dec
mov
pop
repnz
movsb
lahf
and
aad
sub
je
xchg
pop
xor
call
cmp
pop
sbb
inc
push
and
mov
push
add
jnp
enter
or
push
lds
bound
sbb
and
stos
and
push
test
or
xor
or
cmp
push
sbb
scas
andl
ja
mov
add
add
pop
pop
push
imul
les
sbb
pop
in
sbb
sub
movsl
add
xchg
sub
adc
sahf
add
mov
pop
jbe
mov
xor
sahf
mov
lds
cmp
cmp
sub
lea
inc
pop
xor
repnz
cmp
sub
js
mov
cmp
jl
fsts
shrl
jl
es
add
adc
push
pusha
dec
adc
dec
lret
mov
in
push
inc
adc
data16
mov
push
lods
mov
xchg
mov
pop
enter
xor
dec
shrl
push
dec
pushf
dec
xchg
or
xchg
or
dec
es
adc
test
lea
mov
jns
sbb
cld
push
lods
lock
push
adc
xor
inc
xor
loopne
mov
addl
push
inc
and
cmpsl
push
cmpsl
std
add
inc
fsubrl
cmpl
mov
jmp
sub
cmpb
xchg
pop
adc
mov
cld
mov
mov
xchg
xor
imul
mov
addr16
push
and
jl
and
mov
push
sbb
lcall
xor
push
jne
xchg
push
cld
in
xor
shrb
shl
jmp
xchg
or
adcl
or
fidivs
jmp
inc
outsl
repz
sub
inc
hlt
push
rolb
imul
and
mov
pop
shrl
les
push
pop
addb
shll
testl
in
push
adc
and
out
call
xchg
pop
sub
sbb
cmp
mov
sbb
jne
sub
mov
cli
outsb
ljmp
dec
xor
sbb
adc
filds
je
lea
jbe
add
aas
and
ds
bound
jne
pop
bnd
cs
adcb
sub
adc
lahf
mov
scas
and
fdivp
mov
aad
sbb
leave
pop
fucom
mov
sub
test
cld
mov
lcall
sub
or
adcl
xchg
test
shll
push
push
aas
loope
cmpsb
pop
leave
adc
bswap
dec
sbb
cmp
mov
addb
aaa
inc
pop
jb
mov
test
push
xchg
movsb
push
or
cmpl
inc
cmp
cmp
cmp
and
les
jne
mov
mov
icebp
sbb
roll
jmp
push
adc
cwtl
sbb
pop
faddl
shll
pop
push
or
fcoms
cmp
jae
xor
dec
out
push
rorl
pop
aas
repz
push
sbb
inc
jbe
decb
fcomip
pop
lods
add
fiaddl
xor
jne
les
test
icebp
je
mov
jl
adc
adc
pop
cmp
hlt
and
cmp
test
add
mov
dec
jle
pop
mov
adc
dec
xor
jo
lock
add
mov
push
pop
imul
sub
dec
jo
jl
adc
push
mov
mov
xlat
dec
lret
jp
in
adcl
shll
lock
add
cmp
add
or
repz
into
popa
jge
dec
sub
fdivl
mov
adc
pop
lret
inc
test
and
mov
sbb
xor
cbtw
dec
js
sbb
add
mov
popf
or
call
sahf
mov
sub
and
inc
or
mov
jecxz
and
lods
cmp
inc
fbld
adc
push
imul
jo
inc
xchg
dec
push
sarl
fucomp
mov
ja
mov
push
shl
mov
stos
test
sbb
and
add
cmp
pop
pop
xchg
pop
fsubs
aad
rcll
rcr
stos
inc
dec
popf
jnp
sbb
add
aam
fs
pop
cmp
dec
lods
push
cmpsb
dec
arpl
ret
jbe
in
repnz
pusha
dec
fnstcw
dec
movsl
sbb
sbb
push
sbb
mov
jne
outsl
adc
pop
mov
dec
add
cmp
outsb
mov
sub
push
loop
loope
lods
lock
std
xor
jl
dec
ljmp
arpl
push
jbe
out
push
xor
stos
dec
adc
xchg
mov
dec
pop
adc
xchg
dec
je
mov
sbb
pusha
enter
or
lods
jg
lock
xchg
sbb
sub
mov
test
cmpsl
jne
iret
dec
rorl
popa
outsb
fsubrl
daa
push
cs
push
inc
lea
xchg
test
add
sbb
xlat
mov
mov
xor
lods
rorl
mov
mov
std
jb
adc
xchg
movb
and
jmp
cmp
add
mov
jle
lods
pop
enter
or
pop
mull
or
sub
add
pop
ret
sahf
lahf
mov
lahf
dec
fs
inc
insb
dec
sbb
js
add
out
dec
inc
or
xor
mov
jne
repnz
or
mov
fcoml
add
jae
pop
adc
push
fwait
pushf
div
jmp
mov
insl
les
adc
mov
pop
adc
pop
add
mov
xor
mov
add
and
mov
sbb
jmp
jmp
in
mov
sbb
mov
ret
sub
mov
and
or
jns
insl
sub
cmp
cltd
mov
jge
mov
ss
jns
cltd
adc
aaa
sbb
test
stos
jo
insl
add
dec
loopne
adc
insb
loop
or
je
jo
cld
or
je
add
push
or
movsl
and
lds
inc
ljmp
adc
push
and
jge
dec
or
lock
cmp
out
dec
or
mov
push
sahf
rclb
add
cmp
out
and
movsb
sub
ja
adc
mov
rorl
rclb
mov
test
lods
fcmovnu
push
cmc
or
mulb
add
pop
out
or
dec
sbb
add
mov
add
cwtl
mov
push
daa
pusha
mov
add
add
js
and
add
test
pop
shlb
dec
pop
imul
push
add
sbb
dec
mov
sbb
add
inc
pop
fsubl
lock
jge
dec
fbstp
sub
ja
movsb
mov
js
sub
add
aas
into
imul
stos
adc
aad
cmp
push
ds
dec
stos
sbb
xor
test
cmpsb
mov
lret
jle
push
stc
xchg
or
jne
sub
adc
adc
aam
push
mov
mov
outsl
mov
adc
push
rclb
ljmp
mov
lock
add
push
cmp
push
fdivr
call
mov
mov
jge,pt
xchg
jmp
xchg
pushf
mov
scas
mov
test
out
inc
pop
and
fwait
mov
js
addr16
pushf
adc
out
add
data16
jae
sahf
mov
sbb
inc
enter
xchg
inc
pop
xor
fildll
fiadds
fucom
outsl
ret
jg
adc
adc
shlb
jmp
push
sub
push
jp
inc
fwait
in
addr16
xchg
xchg
mov
add
fstps
out
leave
mov
mov
sub
xchg
arpl
xorl
cmp
test
dec
jo,pt
mov
mov
cmc
xor
in
mov
pop
cmp
add
data16
inc
mov
fdivs
push
inc
push
sbb
mov
inc
mov
mov
cmp
pop
push
mov
aas
cwtl
sbb
sub
pusha
cmpl
mov
popa
pop
aad
dec
xor
dec
in
xor
loopne
adc
int3
dec
cmp
mov
pcmpgtd
push
inc
imul
add
insl
adc
adc
add
arpl
loopne
inc
xchg
aad
imul
adc
pop
adc
fmull
pop
bound
ret
jl
mov
rorb
pushl
shlb
and
cmp
mov
adc
mov
pop
rolb
cmp
into
or
pop
cmp
rorl
pop
mov
pushl
shlb
mov
ss
pop
in
mov
loope
sarl
xchg
jmp
jne
adc
cmp
xchg
loopne
cmp
movsb
mov
add
pushf
or
adc
stos
cltd
shlb
shll
pop
call
xor
sbb
and
mov
add
xor
jmp
test
insb
adc
mov
push
loopne
rcl
jmp
push
imul
sbb
mov
sbb
push
insl
cmp
push
jne
inc
mov
pop
lock
push
repz
pop
repz
adc
or
or
dec
jl
and
jp
scas
add
sub
pop
mov
ret
int3
adc
fs
test
cmp
cmp
lea
fcomps
shrb
and
pop
and
enter
jle
adc
fsubs
push
xor
movsb
jmp
adc
aam
sbb
mov
lock
sbb
pusha
jb
push
or
push
lds
inc
test
shrl
int3
cwtl
sub
cs
cmp
movsb
pop
sbb
fs
mov
mov
in
push
lret
pop
inc
pushf
jmp
loopne
ret
sbb
sbb
addr16
mov
push
in
xchg
or
push
nop
iret
aam
push
jecxz
xchg
fistpll
cmpsl
cs
aaa
xchg
push
xor
mov
mov
push
insl
pop
dec
dec
sbb
ljmp
mov
adc
adc
or
add
pop
in
or
or
add
adc
mov
lods
or
xchg
push
push
out
fisttpll
sbb
jbe
cmp
xchg
inc
inc
or
jl
pushl
or
sub
sub
xorl
cmp
mov
clc
and
movl
movsb
xchg
sar
adc
in
mov
jnp
in
fs
sub
repnz
and
push
add
enter
imul
pop
or
inc
lea
pusha
sbb
call
pop
es
lock
cwtl
fidivrl
xchg
push
add
les
in
mov
cmp
daa
or
xchg
in
sub
mov
mov
test
xor
cmpsb
loope
cmpsl
jl
or
mov
sbb
cmp
pusha
fadds
ja
push
pop
push
rorb
jmp
push
in
mov
test
and
inc
cs
push
scas
and
popf
or
jae
xchg
mov
xchg
repnz
sbb
pop
push
js
les
ret
and
jmp
xorl
jle
pop
jmp
pushl
movb
sbb
pop
sub
add
mov
or
jl
sbb
dec
adc
add
ja
in
and
pop
mov
xor
ljmp
pusha
sbb
out
cmp
aam
xor
xor
out
fistl
xor
xchg
je
je
push
push
stos
jl
sbb
sub
and
sbb
leave
mov
jmp
mov
add
lret
dec
inc
es
or
xchg
dec
adc
and
mov
bound
and
inc
adc
inc
or
or
sarb
roll
movsb
sub
in
or
dec
cmpsl
or
jl
add
dec
mov
in
mov
subb
push
xor
stos
adc
and
inc
sub
pop
in
pop
sbb
push
cmpsl
shl
stc
push
cmp
pop
jns
dec
insb
punpckldq
inc
sub
jge
jmp
cs
mov
insb
mov
imul
jns
out
pushf
das
push
das
adc
mov
jmp
push
test
or
adc
inc
jne
cmp
push
pop
lods
sbb
sub
and
cmp
je
pop
cmpsl
or
add
jmp
adc
fwait
adc
sbb
dec
mov
aam
or
gs
add
push
push
or
cwtl
jnp
jmp
inc
cmp
test
shrl
clc
xchg
mov
push
adc
fnstsw
adc
push
movlps
jl
cmpsb
push
add
loopne
fwait
sub
or
ret
cs
shlb
cli
add
bound
dec
cmp
sbb
inc
jb
into
inc
cmp
pop
or
pop
enter
xchg
pop
jne
push
adc
cmp
adc
and
sub
xor
scas
ret
add
or
pop
data16
adc
inc
das
or
adc
push
subb
ja
clc
push
pusha
jbe
add
add
add
and
pop
push
das
xchg
movsb
ret
shrb
jbe
loope
adc
fistpl
mov
or
lods
inc
sub
add
xor
je
xor
cmp
mov
je
xor
clc
popl
les
lock
cmpsl
add
sbb
popf
mov
xchg
in
test
cmp
shrb
inc
xor
or
fwait
std
dec
cmp
cmp
fwait
inc
add
mov
jmp
push
fwait
cmp
cmp
sub
fcomps
add
add
add
ret
lahf
or
mov
inc
inc
mov
adc
and
cmpb
sub
jne
fmuls
add
dec
cmp
lods
fmuls
je
into
sub
dec
clc
jmp
xor
push
ficomps
or
or
adc
fists
pop
cmp
sbb
mov
push
sub
lret
fsubs
jae
mov
sub
setl
xchg
sub
sub
nop
push
stc
inc
jmp
push
in
fcomps
sub
fsubl
xor
imul
sbb
pop
pop
cmp
push
and
xor
pop
mov
mov
cmp
ja
cltd
aaa
adc
cmp
lcall
pop
push
sub
add
xchg
or
cli
movl
push
adc
dec
js
sub
push
mov
scas
adc
or
xchg
and
rolb
push
scas
je
mov
pop
fmull
addr16
stc
adc
outsl
lcall
mov
aas
cmp
fwait
loopne
js
mov
pop
jo
jle
pop
mov
push
pop
inc
push
cmp
sbbl
sub
sub
cmp
pop
pop
adc
fdivl
ds
mov
pushf
push
add
mov
shll
in
inc
inc
lock
and
mov
push
in
sub
pop
add
in
icebp
sbb
push
icebp
xchg
push
sbb
jle
add
cmp
mov
stc
inc
hlt
push
push
popa
pop
jo
mov
gs
test
jne
or
pop
dec
jmp
aaa
sbb
cmc
add
adc
push
push
dec
aaa
and
jne
add
fsubrs
icebp
aad
mov
loope
sbb
push
mov
and
mov
sar
int
das
push
out
rorb
mov
mov
orl
jl
sub
jne
xchg
mov
jle
sub
pop
loopne
mov
sbb
sbb
popf
lods
xchg
add
ret
ficoms
adc
testl
fisubrs
mov
or
jge
adc
mov
inc
mov
in
clc
aaa
mov
sahf
jno
sub
lea
add
js
hlt
pop
push
into
call
cmp
int
add
sbb
insb
mov
dec
cmp
rorb
xorl
and
add
push
xlat
lahf
pushf
add
enter
incb
or
jne
mov
pop
inc
testl
or
out
pop
scas
sbb
lea
mov
ret
jge
add
lds
outsb
mov
fs
icebp
sbbb
xor
bnd
adc
into
pop
mov
xchg
cld
dec
add
push
xor
loopne
nop
lahf
mov
adc
cld
ljmp
cmpsb
stos
lea
push
jb
pop
mov
pop
push
out
cwtl
pop
fcoms
pusha
das
or
dec
call
jo
ss
mov
arpl
xchg
sbb
adc
adc
push
mov
or
push
push
divb
in
push
scas
in
pop
inc
or
adc
popa
sub
fsts
dec
sarl
jne
scas
adc
js
mov
add
push
push
adc
roll
ret
je
ljmp
or
or
out
mov
adc
add
adc
push
or
and
imull
sub
ljmp
insl
sbb
mov
push
leave
or
jmp
or
sbb
xor
pusha
sub
jnp
int3
xor
or
bound
lods
dec
sub
mov
xor
mov
ret
jne
in
sub
sub
fiadds
test
jo
inc
movsb
sub
push
push
ret
out
cs
push
inc
mov
pop
cmp
call
ss
hlt
aas
mov
jo
jo
shlb
xor
jbe
add
inc
add
inc
sbb
push
push
aaa
nop
sbb
or
pop
jl
xlat
xor
sub
xor
sbb
andl
inc
shlb
cmp
pushl
scas
je
push
and
rorb
aas
cld
add
das
or
cs
adcl
js
push
xlat
xchg
or
lahf
lock
popf
aam
cli
clc
or
out
je
or
mov
adc
scas
testl
popf
inc
mov
or
xchg
dec
or
in
lock
fnsave
pop
or
mov
jle
add
push
cld
dec
out
and
inc
enter
push
stc
inc
in
lea
pop
push
cld
add
ja
stc
aas
or
push
xchg
mov
dec
test
push
movb
push
mov
adcl
lock
je
pop
insl
push
sub
dec
leave
insl
and
adc
dec
sbb
inc
in
vsqrtsd
inc
add
xchg
lock
adc
push
popa
dec
sub
add
or
inc
jmp
sar
add
out
fadd
dec
pusha
mov
roll
mov
test
mov
adcb
lcall
pop
les
or
or
jmp
cmp
push
lea
mov
push
ret
jne
out
inc
test
jb
lret
lea
test
inc
das
push
pop
push
pop
mov
pop
mov
and
je
sbb
daa
out
inc
and
mov
dec
pop
add
sub
je
and
fildll
xor
sub
sub
and
add
mov
and
cmp
iret
add
push
xor
push
or
loope
cmp
jb
fidivrs
and
mov
test
cmp
pop
and
sub
test
pusha
adc
aaa
push
jbe
adc
add
insl
pop
inc
jl
insl
int3
mov
mov
dec
or
imul
movsl
enter
or
test
pusha
out
jecxz
in
mov
fs
lcall
fadd
xor
loopne
inc
dec
das
clc
jne
mov
cld
movsl
xor
push
fdivr
push
pop
addr16
push
dec
fisubl
data16
cs
movsb
shrl
lret
loopne
in
sub
mov
mov
js
addr16
push
xor
test
or
hlt
and
jmp
xlat
adc
push
push
loopne
sbb
mov
sahf
pop
inc
jae
lods
adc
sarl
mull
in
add
mov
call
add
loopne
jne
bound
mov
cmp
cmp
outsb
and
adc
lea
or
or
in
pushf
sub
test
and
cmp
xchg
pop
push
xchg
insb
shll
fcmovnb
std
xchg
lea
rclb
call
xchg
std
test
pop
mov
ja
pop
push
cmpl
and
adc
rclb
lea
jns
xor
cmp
insb
adcb
lea
pop
cmp
xor
push
lea
cltd
in
push
testl
inc
push
imul
loopne
daa
add
jmp
dec
cmp
lea
adc
and
inc
movsl
dec
dec
push
xor
add
pop
test
and
outsl
sbb
mov
dec
cmp
sbb
mov
jbe
les
mov
jns
pop
adc
ljmp
test
cmpsb
inc
cmp
imul
int3
mov
rol
movsl
xor
test
sahf
popa
int3
mov
push
hlt
jge
push
pop
enter
cli
mov
scas
jno
pop
add
in
add
movsb
pop
pop
xchg
add
imul
adc
insb
push
push
ljmp
fisubrl
xchg
push
jmp
jge
lret
in
in
insb
insb
push
and
jmp
sub
out
xchg
jecxz
daa
push
xlat
adc
test
dec
neg
inc
adc
or
dec
or
add
mov
lea
pop
cmp
add
fsub
adc
cmpsl
shrb
or
dec
jno
sub
pushf
rolb
call
ret
mov
leave
cmp
je
mov
mov
cmc
push
adc
and
and
dec
rcr
xchg
mov
stos
xchg
js
sbb
dec
dec
pusha
cmp
inc
js
mov
inc
xchg
push
fcoms
dec
push
insb
hlt
mov
cmp
mov
add
xchg
ss
fsubrs
into
push
jmp
cmp
fwait
push
inc
inc
fsubrs
jns
push
xchg
mov
lret
lods
sub
adc
rorb
in
mov
xchg
cmpsl
imul
rcll
xchg
aam
fsubrs
or
xlat
mov
sbb
int3
lea
jb
loopne
int3
cmp
jnp
std
mov
pop
cmp
xor
mov
inc
ret
int3
xor
mov
lods
ret
cmpsb
push
fcoms
cmpsb
les
in
xchg
sub
clc
jne,pn
daa
dec
jne
inc
mov
jne
adc
xor
add
or
adc
lods
push
adc
sub
and
sbb
loopne
mov
lods
push
std
jb
cmp
mov
adc
push
sarb
jae
repnz
mov
push
jb
cmpsb
dec
inc
add
sub
add
add
push
xchg
repnz
lret
cwtl
mov
lret
xor
icebp
cmp
pop
add
push
push
stos
mov
mov
fcomps
gs
adc
pop
out
in
pop
aad
add
push
pop
xorl
adc
mov
icebp
arpl
shll
lds
mov
lcall
sub
bound
jl
xorl
sub
arpl
add
sub
in
xchg
mov
mov
mov
add
mov
mov
lea
lret
jmp
je,pn
mov
cli
cld
or
cmp
cmp
jmp
jmp
push
push
jmp
pop
cs
cmpsb
incl
push
add
push
ret
jp
xchg
mov
or
xor
movsb
ret
or
fucomp
lock
sub
adc
in
mov
or
loop
push
jmp
cmpsl
push
or
les
in
sbb
aas
mov
push
add
pop
cld
dec
sbb
push
ds
push
push
xlat
mov
dec
xchg
push
or
push
add
sub
push
nop
outsl
push
push
imul
cmpb
dec
sbb
push
add
imul
mov
and
push
mov
dec
movsl
add
and
ja
cmp
mov
push
addl
mov
push
enter
lret
rolb
int3
sub
push
in
cld
push
inc
shrb
push
push
cmp
aam
mov
xor
adc
stc
xchg
int3
xlat
in
cmpsb
in
fdivr
fstps
sub
cmp
fcmovnbe
sbb
sub
daa
xchg
jo
jnp
push
mov
mov
xchg
je
mov
xchg
inc
lcall
ljmp
cld
icebp
mov
imul
cmp
lret
inc
leave
push
inc
push
pop
cmpsb
sub
push
pop
and
in
insb
lock
pop
mov
or
xchg
push
lea
dec
mov
or
dec
sbb
in
pop
mov
rcrb
nop
mov
mov
sub
or
xor
mov
inc
sub
insb
push
xchg
xor
cwtl
pop
pop
xchg
test
or
outsb
add
sub
inc
sbb
popa
mov
test
mov
cmp
sbb
movsb
es
sub
xor
mov
inc
cmp
sarb
movsb
pushf
js
aam
push
lods
sahf
mov
in
in
xor
movsb
xchg
mov
inc
mov
fsubs
dec
lcall
pop
enter
mov
cs
rorl
aas
push
popa
dec
cmp
push
push
pop
cmp
repnz
pop
jle
dec
inc
movsb
test
nop
gs
sub
or
mov
pop
mov
rorl
xor
push
sbb
xchg
and
pop
xor
shrl
das
out
mov
xchg
dec
jae
aaa
sub
das
or
sub
inc
sbb
inc
xor
dec
push
cmp
xlat
adc
pop
or
mov
pusha
lret
mov
or
push
adc
daa
jne
xchg
test
fdivrl
fs
test
addr16
sub
sub
add
adc
and
pop
jp
es
xchg
add
xchg
movsb
dec
test
cs
adc
stos
cmp
push
push
mov
pop
add
pop
mov
fdivrs
mov
cmpsl
test
test
cltd
outsl
hlt
adc
jae
lock
and
sbb
add
je
bound
and
or
arpl
jg
adc
sbb
push
adc
xchg
sti
cld
shl
push
test
adc
gs
jg
xor
cmp
in
or
lock
ds
lock
subb
or
mov
inc
push
cmp
jl
loopne
push
or
in
sbb
imul
jae
shll
loop
xchg
adc
mov
in
in
ret
adc
mov
adc
pop
mov
mov
and
pop
hlt
shr
int
rcr
das
mov
inc
shl
mov
push
sbb
mov
test
jg
pop
mov
cmp
cmp
arpl
cld
cmp
jle
mov
sub
sti
clc
rcrb
sbb
and
sahf
cs
stos
mov
cld
and
jmp
mov
insl
fbld
lds
sub
in
inc
sbb
decb
lcall
ja
lods
cmp
push
das
cmp
sub
movl
mov
or
pop
adc
shlb
ret
xchg
xor
movsb
pop
sbb
mov
lock
sbb
cmp
in
lea
mov
mov
inc
mov
or
dec
dec
popf
add
pop
jne
jo
and
inc
cmp
stc
cmp
add
dec
inc
mov
push
xchg
mov
mov
push
jmp
push
enter
push
jne
in
push
xor
sub
jbe
inc
jb
jmp
dec
in
ret
stos
add
ljmp
shlb
outsl
jecxz
hlt
es
add
mov
mov
cld
push
jg
jp
jb
je
adcl
out
push
sahf
cld
je
shrb
ret
mov
adc
shrl
dec
loop
add
dec
loop
lret
jmp
xchg
push
sbbb
inc
adc
adc
xchg
pop
movl
in
mov
pop
adc
add
pop
mov
mov
out
and
dec
mov
pop
cmp
sbb
inc
arpl
jns
hlt
jge
hlt
aas
sub
and
packssdw
xor
fcmovbe
and
dec
sbb
hlt
sahf
xor
jnp
add
inc
push
rol
adcl
jo
cs
adc
dec
sub
jge
jns
lret
ja
pop
mov
jno
and
cs
adc
xchg
arpl
jecxz
push
fxch
fcoms
and
mov
inc
jp
push
testb
lahf
mov
jecxz
or
pop
sahf
ja
and
dec
add
push
and
ss
rcll
jg
add
add
add
inc
and
push
pop
stos
cmp
subb
lods
testl
push
mov
inc
call
xchg
jl
xor
mov
repz
cld
jg
mov
mov
mov
add
inc
mov
pop
mov
mov
add
aaa
shrl
test
or
or
pop
sub
mov
lret
cmp
mov
clc
xor
mov
addb
and
dec
jge
sbb
les
aas
es
sbb
mov
xor
adc
repz
pop
hlt
and
ljmp
je
cmpsb
adc
and
sub
and
iret
dec
clc
pop
fiadds
mov
or
sbb
push
cs
int3
test
mov
pop
aad
xor
hlt
inc
sahf
shlb
inc
add
xchg
mov
and
cmpl
adcl
ror
or
push
das
add
cmp
hlt
adc
stos
jo
lsl
cmp
lea
movsb
pop
mov
mov
int3
mov
adc
jb
fadd
incl
mov
mov
rol
push
lock
xor
pushf
lret
aam
or
xchg
or
push
adc
aad
dec
or
and
and
xchg
shlb
loop
xor
ret
mov
add
push
inc
and
mov
push
lcall
loope
enter
sti
mov
jle
inc
aas
movsl
mov
stc
ljmp
xor
fiaddl
fcomps
lods
xchg
ret
add
mov
sbb
jno
push
add
out
push
add
and
mov
mov
or
inc
add
adc
cmp
mov
inc
test
inc
fadd
test
ret
mov
punpcklbw
sbb
sbb
adc
lds
ret
stos
xchg
pop
pop
cmpsl
pop
mov
mov
mov
add
adc
adc
inc
and
inc
arpl
sahf
add
sbb
lods
pop
cld
test
test
cltd
cmp
sub
ret
dec
adc
pop
xchg
mov
shl
sub
xchg
mov
push
push
or
xor
and
test
movsb
shlb
mov
push
sub
cwtl
or
jb
pop
or
adc
adcb
xor
je
fnsave
lret
mov
add
jo
mov
mov
push
sub
loopne
bswap
and
jo
popa
in
add
mov
push
add
sbb
add
dec
dec
out
push
cmp
sbb
movaps
pop
test
arpl
out
add
std
outsb
xor
movl
sub
fsubs
inc
or
cltd
inc
shlb
orb
lret
cmp
cmp
mov
adc
mov
sub
xor
sub
lahf
sarb
lods
sbb
or
adcl
dec
mov
or
cmp
test
iret
or
das
xor
lods
jmp
data16
ret
jp
out
add
jg
data16
ret
adc
imul
mov
ds
push
adc
pop
sbb
dec
mov
aaa
clc
mov
xchg
push
xchg
mov
xor
lock
jb
jo
pop
test
and
mov
mov
ds
xchg
into
push
cmp
push
mov
add
sbb
cld
jge
sbb
or
push
test
sbb
jo
inc
cmc
stos
ffree
push
into
aaa
aaa
clc
mov
bound
push
stc
or
push
adc
cmp
xchg
cwtl
sub
cmp
int3
cltd
sbb
pop
cs
lret
adc
lods
inc
dec
jecxz
test
or
or
jne
loop
ret
push
sub
adc
push
fmull
inc
push
lcall
mov
xchg
pop
xchg
test
test
aam
test
addl
mov
loop
adc
push
adc
fdivr
xor
dec
sub
adc
cmp
push
adc
adc
ret
push
es
popf
lods
test
or
clc
mov
std
dec
jmp
add
mov
or
fcompl
sbb
arpl
stos
lods
inc
fmuls
jne
and
addl
shl
les
in
sub
or
mov
inc
mov
enter
pop
jl
movsb
sub
sar
push
jecxz
mov
push
add
cs
call
shlb
mov
adc
jne
aaa
xor
outsl
hlt
pop
rorb
xor
xor
ss
movsl
add
push
push
int
mov
mov
clc
adc
add
mov
roll
xor
les
movsl
mov
int
data16
and
loopne
daa
cmp
push
mov
lgs
mov
loopne
and
push
lock
cmpb
inc
cvtdq2ps
mov
andb
insl
cltd
cmp
repnz
pop
sub
iret
lcall
in
lahf
xor
xchg
and
movsb
jecxz
mov
je
inc
addr16
inc
loopne
pusha
add
xor
aad
add
push
push
xchg
popf
rcl
imul
xor
dec
push
add
sub
dec
adc
lret
rolb
in
xor
sub
push
push
xchg
adc
adc
orl
test
push
sub
or
push
sub
xor
repnz
push
xor
pushf
or
in
lods
dec
test
rorb
push
imul
cld
ja
add
into
rclb
in
into
pop
movl
cmp
outsl
push
ja
lock
sbb
mov
push
enter
jmp
sbb
push
imul
jl
imul
sbb
pusha
adc
mov
mov
xor
jg
add
inc
or
rclb
mov
push
iret
lret
mov
rclb
ret
adc
fdivrl
test
idiv
test
adc
or
dec
mov
hlt
xchg
rol
fwait
add
je
push
fldenv
xor
out
in
dec
jne
mov
push
or
cltd
mov
sbb
push
sbb
je
mov
push
jbe
cltd
sub
mov
test
stc
stos
adc
clc
sub
adc
sbb
jecxz
mov
or
push
pop
push
fwait
arpl
push
jecxz
xchg
adc
jo
sub
adc
cmpsl
in
mov
xor
or
out
dec
jnp
mov
xchg
das
stos
jl
sbb
lea
dec
outsb
lret
imul
cmp
in
jo
jno
cmpsl
push
push
sbb
insb
add
mov
mov
push
and
and
pop
push
sbb
push
sub
add
or
or
mov
add
test
pop
imulb
and
lods
lea
rorb
pushf
jns
popf
mov
pushf
sub
or
add
push
dec
dec
sub
insb
dec
mov
roll
lret
mov
jne
mov
shrb
push
mull
jg
js
inc
pop
stos
mov
incl
adc
je
jmp
rcrb
in
mov
adc
or
loopne
inc
mov
adc
in
jl
call
rcr
fyl2x
or
test
pop
push
pop
add
rcll
push
dec
mov
test
cld
lock
adc
push
pop
inc
mov
add
push
aam
add
hlt
mov
add
into
add
inc
sub
dec
jb
add
or
stos
cmc
jle
jno,pt
insl
mov
testl
mov
scas
add
rol
pop
hlt
pop
idiv
outsl
adc
add
js
pop
pop
mov
mov
xor
nop
xchg
xchg
je
xor
jo
movsb
in
sarl
push
push
imul
push
adc
sarl
jl
push
aam
test
sbb
stos
lock
mov
arpl
xor
ret
call
insl
test
pop
mov
inc
popa
jp
and
mov
sub
test
jnp
loopne
push
sub
cmp
xor
loopne
lods
cmpb
movsl
xor
mov
push
mov
dec
ret
and
add
pusha
xor
inc
movsl
stc
push
pushf
shl
sub
cmpsl
and
lahf
push
int
jle
pop
or
and
packuswb
xchg
inc
imul
js
cmpsl
pop
add
cmp
adc
loope
add
jnp
out
push
xchg
and
sbb
jle
mov
in
jo
lods
lods
outsl
mov
sbb
fidivrs
sbb
cmpsb
and
imul
cmp
test
cmp
or
adc
ret
pop
add
idivl
jmp
addr16
enter
lock
lahf
imul
dec
mov
mov
dec
add
inc
icebp
mov
cmpsb
lock
je
in
push
mov
aas
jae
pusha
jl
inc
xor
ret
jb
and
dec
jnp
or
adc
lret
xor
push
lahf
pop
push
nop
and
inc
ja
orl
or
xchg
pop
sbb
sub
or
push
insb
in
push
or
leave
jge
imul
pop
jb
mov
pop
movsl
insl
addl
or
inc
adc
jecxz
xor
iret
xor
inc
add
fisttpll
xor
dec
or
data16
mov
sub
xor
inc
pop
sub
mov
mov
xchg
push
jmp
orl
movsl
in
andl
cs
xor
cwtl
aam
fcomp
push
cmp
ds
inc
sub
icebp
cs
imul
jne
adc
inc
add
lock
cmp
movsl
mov
jmp
cmp
in
je
stos
xchg
jmp
adc
mov
mov
inc
push
mov
cwtl
or
into
insb
loope
pop
sbb
mov
mov
in
add
cld
add
addl
js
cmp
or
in
pop
divl
jmp
cli
inc
mov
imul
lret
push
shrb
in
xchg
test
sbb
add
mov
xchg
test
dec
push
push
enter
fstp
add
test
popf
or
xor
jnp
push
fcom
stc
mov
adcb
add
mov
dec
push
push
pop
pop
xor
cmp
std
cmpl
or
test
adc
mov
sahf
xor
out
fcoml
sbbl
add
mov
mov
jg
rcl
mov
call
ds
add
add
mov
push
movsb
lret
mov
lahf
loope
cld
in
mov
popf
loope
push
add
xchg
add
loop
or
cmp
jbe
loopne
jl
lahf
push
and
jno
and
insl
jmp
and
aas
pop
push
adc
lods
addb
stc
add
idiv
fisubrs
lea
push
push
sbb
arpl
loopne
cmpsl
pusha
inc
sbb
inc
pop
inc
cmp
int3
clc
imul
push
idiv
daa
ret
mov
mov
mov
inc
sbbl
int3
call
lret
cmp
sub
sbb
out
popa
das
add
sarb
lods
cltd
arpl
rclb
dec
subb
add
sbb
jg
dec
mov
adc
outsb
jmp
insl
mov
fisttpl
push
and
sub
popf
push
mov
dec
dec
lea
jo
aas
jle
pushf
std
aam
dec
push
cwtl
arpl
aam
add
sbb
sbb
xor
push
sub
cmc
mov
push
cmpsb
push
pop
mov
xor
cmp
mov
in
add
or
xor
mov
ja
js
sbb
call
mov
fidivl
and
cltd
aaa
lods
xchg
dec
enter
addb
dec
or
mov
imul
fwait
and
jae
dec
fdivrl
roll
jne
cli
or
mov
fmul
push
ss
add
cmp
rolb
test
xchg
dec
push
xor
sti
and
popa
push
mov
int
int3
sbb
es
pop
fcomi
js
es
jmp
enter
fnstsw
mov
sbb
jne
dec
jmp
in
inc
mov
out
cmp
jb
and
ljmp
jns
dec
mov
cwtl
test
lock
push
mov
and
jmp
lahf
adc
adc
or
add
imul
inc
or
loope
add
add
jmp
jmp
aaa
cltd
mov
cmp
and
push
inc
add
shlb
data16
xor
mov
sbb
rolb
sub
pop
add
adc
and
inc
int
adcl
mov
sbb
inc
mov
les
push
call
mov
and
mov
rcrb
lahf
inc
stos
push
mov
fistl
xor
popf
xor
movsb
jne
push
lods
mov
xchg
dec
jge
adc
inc
outsl
dec
mov
aam
sbb
adc
pop
insl
sbb
mov
sub
and
mov
add
shrl
xor
push
adc
inc
and
dec
sar
cld
mov
inc
cs
sbb
push
pushl
lock
test
and
xor
lcall
rcrb
ret
loopne
xchg
sub
lea
gs
jnp
jl
pop
mov
add
mov
int3
inc
jg
subl
xorb
loop
lcall
pusha
push
repz
cmpsb
mov
push
cli
jl
push
jne
sub
dec
shl
pop
hlt
hlt
cmp
dec
mov
movsb
or
aas
jmp
movsl
rcrb
mov
jp
scas
inc
daa
cmp
jbe
jl
test
imul
scas
sbb
push
pusha
add
mov
inc
shlb
pop
pop
xchg
push
or
push
orb
inc
mov
inc
mov
jge
rcll
mov
fistpl
add
loopne
stos
adc
xchg
dec
jmp
dec
jmp
lea
or
lock
xor
dec
pop
fisttpl
push
sbb
pop
jg
scas
push
add
cmpb
test
inc
xor
mov
adc
std
sti
fistpll
sub
lea
bound
or
mov
inc
dec
jne
sarl
pop
jne
dec
mov
mov
pop
mov
icebp
push
stos
lock
mov
mov
push
xor
hlt
cmp
or
xor
push
push
loopne
std
lods
mov
leave
push
jns
scas
mov
pushl
frstor
sbb
sbb
ds
movsb
xchg
add
into
es
int
addr16
jge
sbb
stc
cwtl
aam
dec
ja
in
decl
sbb
inc
jmp
push
xor
out
xor
popf
sar
add
pop
clc
test
int
dec
sti
pop
leave
ret
sahf
nop
and
or
clc
call
pop
or
push
mov
jne
cmp
testb
enter
je
sub
cwtl
sti
call
mov
call
sub
mov
sub
movl
mov
push
fdivrs
mov
mov
add
push
scas
shlb
aas
inc
pusha
push
push
and
push
lcall
imul
push
imul
jb
jb
inc
mov
add
mov
cmp
jb
neg
add
push
decl
rorl
data16
cmp
loopne
in
cmpsl
stos
dec
rorl
jmp
int3
fdivp
stos
mov
dec
ljmp
or
fwait
jno
clc
sub
not
and
cld
pop
sub
mov
and
mov
pop
xchg
mov
add
ret
sub
jmp
jecxz
push
cmc
movsb
mov
add
sbbb
or
aam
mov
arpl
loopne
leave
adc
cltd
pop
loop
pop
xchg
incb
mov
fs
clc
inc
or
in
mov
jne
add
push
cmc
push
mov
adc
add
std
out
pop
lcall
pop
cld
mov
fs
ficoms
shld
lcall
test
fistpll
popf
or
lock
aad
or
mov
or
into
sbb
jbe
jbe
mov
push
idivb
adc
and
gs
push
addl
cli
jo
add
pop
sar
mov
ljmp
dec
lods
aam
add
in
sbb
pusha
add
mov
add
lock
mov
pminsw
push
mov
out
out
inc
and
jle
popf
sahf
enter
je
int
test
sub
mov
jbe
aaa
pop
cmp
xor
pop
pop
xchg
enter
pop
popa
pop
sub
cmpl
sbbb
adc
dec
loope
jnp
lcall
lahf
call
and
inc
jmp
jmp
popa
stc
mov
jo
or
add
xchg
gs
jbe
add
fs
call
ss
push
or
ds
xchg
cs
pushf
stc
push
jno
sbb
imul
cmp
jae
inc
les
mov
jmp
cmp
xlat
shll
movsb
dec
and
adc
loopne
xchg
add
cmp
jge
cmp
xor
jb
jno
jle
clc
jge
sub
xor
sbb
pop
or
add
repz
addl
jmp
push
dec
stc
lods
cwtl
inc
add
mov
cmp
imul
lock
repnz
inc
negl
add
loope
test
jg
dec
stc
in
jne
pop
dec
add
mov
sub
xchg
cmp
mov
or
jmp
xor
xor
pop
sbb
sbb
ljmp
mov
fadds
in
cs
ja
cltd
popa
rclb
adc
jo
out
jne
pop
cmp
push
jb
lods
mov
fildll
sub
pop
inc
xor
insl
cmp
mov
push
inc
testl
imul
lahf
clc
sub
js
mov
inc
jae
pop
movsb
adc
pop
paddb
or
jle
pushl
mov
jbe
je,pn
push
push
lea
xor
xor
xor
xor
nop
divb
push
dec
js
in
lods
jae
lret
clc
pop
mov
adc
fs
sbb
sub
out
pushf
push
adc
add
add
pop
js
xor
inc
in
pushf
mov
arpl
movsl
hlt
sbb
stos
pop
sub
sub
push
sub
sub
sbb
mov
arpl
xor
jecxz
cli
lahf
xchg
push
push
pop
mov
loopne
movsl
out
ret
xor
or
add
pop
lret
add
jne
cmpsl
shlb
mov
nop
xchg
push
movl
jne
jnp
loop
arpl
rorb
push
pop
pop
out
out
incb
arpl
pop
or
rorb
outsl
in
neg
pop
sbb
pop
inc
mov
cmp
roll
cmp
pop
mov
mov
andb
movsb
pop
push
pop
and
and
dec
pop
pop
shr
jnp
adc
sti
push
sti
test
clc
push
cmp
jb
fdivrs
xchg
dec
nop
mov
mov
jae
aad
jb
loopne
add
xor
movsb
out
mov
mov
sbb
imul
mov
mov
mov
or
scas
adc
mov
dec
dec
sub
int3
add
movl
addr16
add
add
mov
push
jo
pusha
mov
push
dec
jp
in
repz
jmp
in
call
repz
lock
hlt
clc
clc
aaa
push
call
add
lock
imul
clc
jmp
xor
je
inc
mov
mov
pop
sti
and
ret
push
andl
push
lea
jl
adc
or
pop
lock
out
xor
inc
neg
fimuls
push
inc
scas
daa
stc
sub
inc
xchg
fistpl
inc
push
push
jl
xchg
frstor
mov
add
sahf
inc
push
out
push
add
cs
je
cmpsb
lea
add
ljmp
mov
push
in
push
hlt
sahf
cmpsl
stc
cmp
add
or
daa
cmp
jae
ss
sbb
repz
repz
adc
or
repz
or
or
sahf
mull
inc
inc
or
pop
insb
movsb
test
push
add
andl
adc
and
push
loopne
jge
adc
push
cmp
lret
std
scas
cmp
dec
sbb
push
pop
mov
push
test
sbb
mov
adc
cmp
adc
or
xor
jl
and
push
mov
push
popf
and
pusha
adc
lods
scas
pop
pop
sub
mov
stc
je
icebp
sub
loopne
inc
xlat
push
or
sub
aaa
mov
cltd
imul
jb
fistl
out
cmpsb
sbb
es
ljmp
mov
test
push
dec
pop
stos
inc
add
adc
xor
lods
mov
pusha
sbb
addr16
sbb
mov
loopne
inc
lcall
and
inc
jle
inc
movl
lds
inc
aam
add
sbb
xchg
addr16
hlt
daa
clc
inc
push
inc
mov
lcall
or
in
js
pop
or
scas
jns
or
or
pushl
sbb
fiadds
push
cmp
cs
inc
push
push
inc
adc
cld
dec
repnz
cmpsl
cmp
js
mov
hlt
or
sub
sbb
push
cmp
dec
out
testb
mov
or
mov
fwait
jl
loopne
xchg
jae
pop
push
jp
inc
fdivl
inc
hlt
push
int3
leave
ret
pop
clc
mov
add
push
or
mov
adc
mov
les
cmp
jne
inc
inc
inc
inc
jmp
xorl
and
or
shrl
test
jo
sbb
push
inc
xchg
mov
mov
loop
mov
mov
inc
inc
sbbb
sbb
and
test
ret
cmp
jg
ret
rep
adc
data16
push
insl
movb
arpl
inc
scas
dec
insb
mov
or
dec
add
push
cmp
dec
mov
mov
push
add
decl
rorl
cmp
addr16
jnp
push
adc
aas
or
add
jo
adc
sub
enter
out
pop
sbb
inc
add
outsl
mov
into
and
sbb
cmpsl
adc
cmp
pusha
ja
mov
xor
jge
sub
add
and
jmp
jp
and
xor
pop
inc
in
insb
lahf
cwtl
adcb
int3
add
jno
es
mov
mov
in
mov
add
cmpb
pusha
jo
mov
push
jecxz
sbb
and
mov
loope
pop
sub
push
adcl
dec
push
inc
cmpsb
fucom
pop
inc
inc
jl
pushl
popl
repnz
jmp
and
mov
cmc
es
push
fucomi
hlt
stos
loope
cmpsb
insl
rcrl
hlt
cld
cmp
jne
inc
adc
jb
push
add
add
jbe
fwait
push
push
push
mov
cmp
inc
imul
add
xor
cmp
movq
jl
cmpb
cmp
jb
cmp
jl
jg
outsl
inc
xchg
jbe
add
int
and
pusha
repz
mov
jnp
add
cld
pop
add
add
mov
vpsubb
jl
clc
incl
fcomps
jb
call
lret
jge
hlt
push
xor
shlb
dec
push
cmp
je
notl
push
xor
mov
xor
popf
jge
sub
sbb
push
imul
cmp
and
clc
cwtl
push
cmp
add
data16
popa
xor
rcrl
ret
adc
sub
mov
sbb
cmp
jmp
sub
fidivl
repz
push
and
sbb
jge
xor
jbe
sarb
les
adc
aaa
cmp
add
or
mov
add
sub
fisubl
data16
xor
sbb
xor
call
push
xchg
sbb
sarb
scas
leave
jbe
jl
sti
jg
sbb
idiv
add
mov
or
iret
out
and
jae
lea
add
push
push
mov
rolb
aam
decl
sbb
or
adc
mov
jg
into
mov
test
cwtl
stos
adc
cli
packsswb
es
not
pop
and
jmp
mov
outsl
inc
add
shrl
push
shl
incl
shll
dec
push
popa
cmp
pop
sub
jg
cmp
jmp
outsb
add
add
rolb
xchg
aam
in
cmpsl
cmp
hlt
add
cld
sbb
cmp
push
clc
repnz
push
fdivl
testb
inc
or
sbb
cld
mov
or
out
stos
inc
jl
mov
sbb
jne
mov
sbb
adc
outsl
mov
adc
leave
cmp
outsb
aad
push
cli
in
jne
jb
push
int
test
push
dec
push
pop
lods
push
bnd
or
pop
mov
push
dec
repz
jge
in
pop
jg
test
inc
sar
and
in
mov
dec
or
inc
mov
or
cmp
dec
sub
pop
les
enter
pop
ss
pop
lods
push
push
pop
test
shl
cmp
pop
cmp
shlb
bndstx
push
push
jle
dec
arpl
loope
xchg
sub
gs
add
out
fcmovbe
jmp
sub
and
mov
dec
enter
cmp
and
add
ret
adc
call
out
add
jle
or
jmp
shr
lea
sub
adc
test
xor
pusha
and
inc
pop
jo
mov
mov
in
or
test
xor
cli
sub
pusha
or
faddp
aas
int3
roll
adc
lret
push
fidivl
ret
sub
pop
pop
in
jbe
cmpsb
cs
dec
testl
enter
or
or
or
or
xor
sub
clc
xor
mov
cmpsb
cs
ret
pushf
data16
mov
andl
repnz
inc
jmp
ljmp
ret
cltd
pop
sub
xor
loopne
in
cs
jbe
inc
push
out
lcall
pushf
pop
aam
pusha
and
pushf
pop
sub
je
push
popf
fisubs
cmp
adcb
and
data16
shl
pop
rcrb
add
push
popa
cld
pop
add
nop
data16
xor
and
dec
mov
inc
dec
mov
push
nop
stos
and
add
jmp
mov
aas
add
dec
imul
mov
push
or
hlt
dec
mov
push
dec
add
dec
and
push
pop
cmp
add
or
add
jae
or
test
or
jl
jmp
rorl
dec
dec
inc
loopne
sbb
jne
dec
jns
adc
pop
sarl
mov
and
sbb
pusha
repnz
insb
insb
adc
leave
cmpsb
push
pop
mov
jg
sarl
insl
gs
loopne
jae
push
ljmp
je
movsb
jle
cmp
mov
jmp
add
test
loopne
dec
or
xor
leave
push
or
push
pushl
mov
add
jmp
pop
add
adc
or
mov
inc
jns
inc
mov
xor
sahf
dec
push
in
syscall
mov
inc
les
xor
lcall
jne
mov
and
in
sbb
and
and
inc
lods
aaa
fsubrl
mov
sbb
push
push
push
cmp
cmpl
pop
cmp
js
sbb
loopne
aam
jne
mov
xor
cmp
adc
lock
out
mov
or
or
insl
in
push
jl
sub
xor
add
push
add
add
repz
loopne
pop
scas
or
jg
js
nop
inc
aas
mov
jle
push
push
or
add
add
sbb
into
add
xor
and
add
xor
jno
mov
pop
fs
std
or
dec
add
jg
jecxz
jg
jmp
nop
add
inc
cmp
jl
pop
pop
mov
leave
lock
sbbb
adc
adc
add
rorl
fneni(8087
sbb
jo
adcb
sub
mov
push
loop
sbb
repz
xor
les
fdivr
jbe
clc
mov
jmp
inc
fmul
insl
cltd
add
mov
mov
sbb
adc
mov
aaa
inc
mov
xor
sbb
push
incl
lods
loopne
and
outsl
pushf
push
hlt
sbb
movsl
xchg
sbb
sub
ficomps
cmpl
dec
or
fiaddl
clc
daa
adc
inc
or
sbb
push
adc
subb
jg
int3
dec
push
cmc
push
shlb
mov
arpl
pusha
in
aam
or
lock
inc
pop
loopne
inc
roll
xor
lods
cmpsl
and
pop
mov
roll
pop
fwait
pop
mov
sub
rcl
stos
ds
shl
jl
cmpl
adc
test
push
jge
pop
cmp
push
aad
pop
and
cwtl
paddusw
mov
flds
sbb
aaa
xor
pop
std
sbb
je
or
or
shrb
int
fisubl
cmp
dec
std
sbb
adc
or
call
ret
xor
add
pushl
mov
mov
cmpsl
and
xchg
xchg
cmpsb
dec
add
push
push
adc
ljmp
push
or
push
imulb
push
xorb
test
je
ja
data16
push
push
cmpl
push
in
jnp
cmc
inc
add
push
jmp
cmp
or
je
xchg
pop
fs
pop
je
mov
sbb
fisubl
jmp
outsl
sub
jge
or
mov
pop
and
push
add
xor
mov
push
ss
ret
push
mov
sbb
mov
adc
js
xor
sbb
fmuls
adc
and
sarb
cmp
dec
je
dec
jne
bound
ja
adc
loopne
push
or
sbb
pop
add
or
test
adcl
mov
cmp
add
arpl
mov
aaa
fists
adc
push
icebp
enter
fcoml
arpl
int
dec
or
add
sub
and
call
popa
and
sub
or
ja
imul
cmpb
lea
fdivrs
or
cmp
je
pop
cmc
and
or
push
out
push
dec
xchg
mov
cmp
es
inc
imul
push
ss
jb
ljmp
inc
cmp
jae
push
cmp
jl
mov
inc
adc
pusha
sbbl
mov
addb
pop
lock
jne
clc
push
mov
add
sarl
enter
lods
or
mov
cmpsl
pop
pop
pop
pop
sub
stos
push
or
nop
sbb
movsl
xlat
add
mov
push
pushf
in
dec
push
xor
stc
pushl
enter
es
mov
icebp
cmp
scas
pusha
push
lods
int3
mov
sbb
cmc
scas
xchg
mov
adc
or
or
sbb
cmc
add
fisubl
mov
sahf
xchg
mov
or
and
push
xchg
xlat
out
xlat
mov
jns
jne
jmp
fildl
or
push
ret
jnp
shlb
sbb
mov
push
pop
clc
jecxz
sbb
pop
jle
xchg
int3
call
out
xor
inc
dec
loopne
loop
ret
adc
jecxz
cmp
subl
in
bound
mov
pop
inc
sbb
pop
mov
push
jle
icebp
jno
add
xchg
pavgb
dec
mov
cmp
cmp
jae
mov
adcl
jo
jl
ljmp
subb
loopne
cs
cmpsb
sbb
mov
jbe
add
cmpsl
or
sbb
jl
add
sbb
jg
adc
orl
test
pop
hlt
dec
jne
ja
xorl
push
cmp
lock
xchg
icebp
cmpb
mov
sbb
mov
or
aas
mov
sbbb
sbb
pop
es
or
lods
inc
sub
not
jmp
sbb
repnz
shll
push
push
dec
or
sbb
shl
cmpl
addl
inc
lret
mov
clc
push
mov
add
dec
pop
js
cmc
enter
push
mov
out
fadd
or
push
push
mov
rcr
pusha
mov
adc
xlat
je
cmp
es
mov
and
cmp
jb
testb
outsl
inc
scas
mov
add
int3
or
sbb
jge
push
jnp
cmp
jmp
inc
movb
and
cmp
jne
cmpl
loop
divb
cmp
jbe
mov
push
or
xorb
push
and
call
and
outsl
faddl
adc
xor
mov
inc
mov
mov
je
push
cmp
shlb
in
lock
mov
daa
mov
pop
test
les
les
cld
sbb
stos
sbb
xchg
sbb
push
add
cld
pop
and
dec
aam
mov
bnd
mov
call
push
jne
and
lea
out
pop
and
cmp
push
mov
cmc
sub
push
push
push
in
orl
iret
into
mov
sbbl
lret
inc
test
pop
loop
inc
pop
shl
loope
mov
mov
cwtl
and
cmp
mov
outsl
and
push
cld
push
jo
xchg
fistl
add
test
movsb
or
clc
js
cmp
outsl
or
sub
or
lea
push
bound
scas
std
cmp
insl
pop
arpl
jle
push
mov
test
push
jns
js
sbb
xor
jb
test
out
sahf
dec
sbb
push
movsb
loopne
adc
push
xchg
sahf
jns
dec
add
orl
mov
ffreep
jno
push
fildll
icebp
cmp
lret
mov
stc
cmp
lret
add
das
insb
or
inc
and
push
cltd
jb
pop
rcrb
sub
cmp
jb
pop
inc
inc
dec
sbb
xchg
and
jbe
mov
test
push
or
cmp
push
nop
push
dec
or
shlb
and
cld
pop
cmp
mov
jle
cmp
cmpsb
jne
sub
mov
inc
jnp
jg
loop
loope
jge
orl
push
inc
inc
cwtl
shlb
xor
mov
push
fdivrs
in
divl
mov
cmp
cmp
mov
xchg
cmpsb
cmp
or
cmp
test
xchg
ljmp
xchg
mov
push
mov
shl
lods
pop
and
scas
mov
movsb
jb
jbe
inc
mov
or
in
es
test
mov
push
loope
in
fsubs
sbb
xor
push
sti
push
mov
ds
nop
inc
ja
std
inc
js
cmpsl
je
js
lahf
mov
scas
cltd
aas
dec
rcrl
nop
sub
push
xchg
rolb
dec
inc
sbb
lahf
fcoml
xor
inc
arpl
cmpb
push
mov
push
jo
scas
pop
shrb
cmp
shrb
test
push
fstpl
pop
jmp
jne
cld
jnp
add
pop
pop
pop
leave
rorl
pop
mov
dec
call
cld
push
lock
push
jl
dec
or
or
sbb
xor
push
rorl
dec
sub
ss
repz
lret
pop
js
testl
add
pusha
stos
cld
xor
fildl
push
push
and
mov
mov
adc
cwtl
adc
ret
das
mov
push
sub
loop
mov
push
lea
sti
jge
jmp
jbe
or
pop
inc
adc
or
cmp
clc
outsl
jbe
lea
mov
mov
push
dec
cmp
adc
pop
sub
pop
push
inc
mov
adc
or
jg
xor
jp
mov
jns
adc
clts
pop
int3
push
or
push
or
push
or
add
mov
adc
xlat
dec
or
or
push
push
pop
pop
fsubr
jmp
cmpl
aad
pop
inc
fldl
mov
jmp
and
divb
mov
or
shll
jb
daa
adc
and
push
sub
testl
and
mov
lret
push
and
sub
ds
push
or
test
pop
or
and
mov
pop
faddp
shll
jg
or
cmpsb
int3
test
bound
inc
rorb
fs
cld
aas
imul
pop
or
ret
adc
add
pop
mov
sbb
add
cmp
jb
cmp
add
xlat
mov
jge
cmp
mov
add
xor
jb
mov
int
cmp
jae
cli
sbbb
inc
add
rcl
jbe
test
addb
mov
add
and
mov
push
lds
sub
lcall
and
lea
or
jge
cmp
cld
sub
jg
push
xchg
push
dec
ret
push
cmp
sub
insb
loopne
cmpsl
lods
loope
imulb
xlat
push
mov
mov
repnz
stc
jge
stos
mov
cmpsb
test
add
cmp
out
add
or
lea
jl
sub
cmpsb
jns
jmp
push
jl
push
insb
inc
jge
pop
adc
inc
mov
mov
lahf
loope
adc
jle
cmp
sbb
mov
lock
mov
cli
inc
cmp
jle
push
adc
inc
mov
mov
xor
add
mov
sub
movsb
inc
push
push
rclb
out
out
enter
xchg
add
add
sbb
adc
mov
fwait
push
aam
pushl
inc
aam
cmp
in
push
mov
mov
loop
daa
pop
or
xchg
push
out
or
outsl
jnp
shlb
or
push
sbb
jg
cmp
std
mov
test
jle
int3
std
sbb
cmp
je
dec
sub
sub
jg
clc
inc
int3
sub
jg
mov
mov
les
and
and
pop
add
sub
into
mov
adc
scas
scas
aam
ret
adc
pop
lock
les
loop
or
rorb
push
dec
and
push
inc
push
or
das
mov
cmp
inc
inc
cmp
pop
add
sub
dec
add
enter
pushl
dec
shl
push
jnp
fmul
push
jecxz
not
jmp
mov
pop
pop
icebp
nop
cmp
test
mov
cs
out
mov
adc
inc
cmp
jne
or
mov
call
sub
add
stos
nop
sbb
shl
shrb
xchg
mov
out
push
movsl
add
adc
sub
xor
bound
mov
adc
push
jmp
outsl
movdqa
data16
jge
dec
adc
push
and
loope
outsb
sahf
addr16
push
pop
outsl
inc
or
sahf
push
repz
jle
or
push
cld
jns
jg
lea
in
mov
or
lea
dec
ret
add
out
cmp
lret
prefetch
jg
dec
mov
or
jne
test
push
ds
or
lods
fcoms
lret
or
icebp
sub
push
push
sub
je
sub
inc
mov
test
adc
xchg
out
in
add
sub
lock
in
pop
add
inc
rep
insb
push
cmp
jne
xor
test
rcll
adc
cmp
jp
std
push
mov
cli
push
push
ret
sti
and
cmp
sbb
xchg
icebp
push
outsb
dec
rep
mov
test
add
hlt
shll
lret
adc
dec
jp
jne
outsb
pop
xchg
mov
mov
push
icebp
sbb
arpl
aad
int3
or
pop
sub
sbb
and
clc
or
push
push
test
clc
les
pushf
outsl
push
js
mov
and
call
add
shrl
incb
jp
movsl
je
push
push
jmp
ret
repz
inc
inc
and
mov
adc
adc
or
lods
lods
lods
lods
fcoml
sarb
data16
popf
enter
mov
lods
mov
adc
lea
sarl
popf
mov
mov
call
adc
jne
mov
add
rol
mov
pop
sub
add
inc
sbb
ja
xchg
or
jnp
add
pop
push
pop
push
mov
popf
loope
push
xchg
into
push
pop
add
loopne
js
jnp
inc
and
call
sti
das
cmp
jb
lea
push
adc
push
pop
shrb
out
movsb
adc
sti
push
pop
jle
and
call
and
ss
mov
xor
pop
jnp
inc
push
movsb
sub
sub
aas
jno
push
sahf
push
cmp
es
push
sbb
dec
mov
loop
outsb
aam
dec
pop
out
out
xchg
xchg
js
out
sahf
jo
pusha
pop
mov
fldcw
jmp
in
sub
lret
sub
nop
push
push
js
nop
adc
les
mov
enter
mov
iret
sarl
cld
push
add
or
sbb
fwait
clc
cmp
aaa
sub
sub
push
or
push
mov
loope
aam
cmp
or
inc
jge
ja
push
adc
cli
push
test
push
adc
sbb
fimull
jne
inc
inc
cmp
inc
dec
jne
jo
sub
xor
inc
shll
inc
fadds
xor
cmp
sbb
pop
outsb
sbb
xor
aas
adc
lahf
cmp
ja
clc
push
push
mov
cmp
sbb
push
add
xor
mov
sub
mov
aaa
es
jmp
and
iret
sbb
popf
jp
lret
sub
add
xlat
mov
xchg
data16
pop
lcall
adc
add
out
bound
je
pop
jmp
push
dec
xor
xor
pop
inc
lea
js
or
je
mov
rolb
call
or
push
mov
rolb
jb
add
add
add
mov
in
and
pop
add
or
mov
lea
lret
sbb
dec
mov
std
cld
push
test
lcall
sub
fdivl
cmp
cmp
sub
lock
lods
fisubrs
fisttps
popf
cmp
clc
push
ds
adc
mov
push
push
cmp
jb
inc
lea
pop
iret
out
sbb
sti
lea
sub
sar
push
push
or
ljmp
into
in
loop,pn
mov
add
xor
push
mov
xchg
mov
and
inc
jnp
dec
sbbl
push
pop
pop
ret
andl
and
mov
insl
aam
pusha
or
pop
cmpsl
adc
outsb
enter
imul
xchg
sub
pop
xchg
daa
dec
mov
test
loopne
imul
adc
mov
mov
xor
and
adc
icebp
je
mov
shrb
sub
mov
lods
xor
in
pop
test
pushf
or
adc
pop
adc
jle
addb
lret
jg
push
movzwl
sub
testb
add
fwait
mov
mov
or
push
call
data16
sub
push
push
sbbl
xchg
jne
lahf
pop
insl
lods
cmp
or
pop
dec
clc
pop
in
cmpb
pop
das
or
adc
xor
jne
jno
pop
call
jne
mov
lds
fadds
dec
ficompl
jne
push
pop
cmp
ja
fildll
pop
jbe
lea
insb
sbb
adc
add
addb
jae
insb
or
jb
hlt
xor
jbe
add
and
mov
dec
test
jne
sbb
push
test
mov
lcall
std
dec
loopne
adc
sub
sbb
dec
cmp
call
subb
push
jbe
sub
mov
or
cmpsb
add
and
xchg
lock
or
mov
add
arpl
mov
jb
ljmp
ret
call
xor
cmp
scas
jo
mov
popa
cmp
pop
add
sbb
dec
sub
call
add
pop
or
cmp
add
or
sub
or
arpl
xor
xor
data16
mov
add
rorl
cmpsb
add
or
loope
or
lea
stos
add
inc
adc
sub
mov
mov
inc
dec
jne
xchg
jns
out
lea
daa
or
movsb
dec
fimuls
sbb
push
push
sbb
jo
loopne
dec
dec
mov
insb
mov
mov
add
div
mov
and
jbe
lea
or
enter
enter
xchg
mov
xchg
or
jl
dec
inc
mov
inc
in
fsubr
fisubrs
cmp
fdivr
ficoml
push
mov
jo
insb
fdivl
cs
push
cmp
fisubl
scas
gs
inc
inc
cld
popa
fisubl
cmpb
fldt
inc
int
rorl
insl
notl
mov
add
mov
mov
adc
push
ret
or
mov
sti
cmp
leavew
sub
mov
mov
add
lea
sti
rorb
xchg
hlt
cmpsl
lret
add
cmpsb
cli
and
out
clc
push
and
and
jmp
push
mov
cmp
jb
push
add
lock
dec
cld
or
jo
sbb
cmp
scas
fdivl
and
es
addl
and
cmp
orl
lock
mov
mov
push
adc
xor
mov
push
adc
jno
push
cmp
lock
out
sar
jne
movl
cmp
push
sbb
jmp
inc
std
jne
shlb
in
xchg
fldt
mov
out
xor
cmp
les
clc
cmp
cs
loope
clc
orb
push
sahf
push
sub
sub
mov
cmp
push
mov
and
sub
call
cmp
sub
std
dec
data16
or
push
fs
push
jmp
sbb
jnp
cltd
xchg
push
out
push
and
push
mov
lea
push
inc
lock
jge
rolb
jnp
jae
cmp
jbe
movsb
js
movsb
iret
push
aam
pusha
std
jne
mov
test
jae
inc
xchg
push
imul
leave
inc
or
aas
mov
xor
lea
jb
jmp
push
into
sub
add
jmp
jg
movsl
adc
cmp
or
lcall
outsl
shlb
ljmp
or
movb
sbb
pop
jg
jb
mov
xor
inc
daa
faddp
rcrb
mov
adc
decl
inc
mov
inc
inc
inc
dec
jne
mov
inc
aam
loope
jo
es
jle
jbe
mov
jo
pop
das
fdivs
jo
mov
outsl
rorl
inc
dec
jne
fisubrl
ret
into
cwtl
pop
cltd
add
gs
jnp
test
xor
movb
mov
jae
adc
mov
push
dec
loopne
adc
mov
mov
and
lods
inc
jp
loop
push
mov
or
fisttps
pop
imul
inc
mov
lcall
sti
rep
andl
pop
jno
test
cmp
ret
cli
fwait
sub
faddl
inc
adc
mov
inc
push
mov
int3
cmp
adc
ljmp
xor
std
and
cwtl
mov
push
or
xchg
andl
jge
enter
jg
out
ja
inc
mov
jmp
xor
dec
sbb
add
xor
add
sub
cmp
out
arpl
jne
insl
adc
fcompl
sub
jmp
int3
mov
and
imul
mov
scas
mov
mov
push
and
insb
pop
movl
in
outsb
sbb
push
cli
outsl
cmp
imul
mov
es
pop
cmp
jne
sbb
pop
adc
mov
imul
xchg
lret
lahf
jno
faddp
cltd
rcl
sahf
inc
inc
sbb
sub
imul
and
imul
rcrb
sub
lea
mov
cwtl
mov
jne
addr16
aaa
out
jle
sahf
jg
test
push
push
cmpl
adc
shlb
cmp
sbb
xchg
adc
dec
subl
ret
jecxz
push
out
xor
xchg
mov
movsl
movsb
push
sbb
add
lea
jnp
test
aaa
cmpl
andl
pop
ret
jo
testl
push
movsb
inc
and
cmp
dec
pop
xor
aaa
dec
xor
push
clc
pop
sbb
cmp
je
push
mov
sub
push
add
xor
xor
inc
cmp
jbe
push
in
push
shl
sub
sbb
pop
sbb
jo
loope
inc
push
ret
inc
insb
mov
ret
jl
xchg
imull
inc
adcl
jmp
jge
nop
clc
xor
iret
jo
icebp
push
mov
adcb
lcall
dec
sbb
and
xchg
push
pop
mov
inc
push
cmp
int
mov
add
add
dec
shl
loopne
pop
jb
scas
lea
enter
pop
adc
sbb
test
mov
fistl
shrb
push
je
dec
cmp
iret
decl
xor
int
loope
mov
mov
adc
je
cmp
insb
xor
divl
js
xchg
and
xchg
xor
xor
aas
pop
sbb
push
sti
pop
mov
testb
push
cmp
xor
das
inc
aas
add
fsub
and
das
fnstsw
xor
fdivrs
gs
popa
cmp
jnp
or
loop
mov
cmp
mov
push
imul
add
sub
mov
adc
sub
movsb
mov
loop
push
jo
push
jo
pushl
push
push
aas
rolb
cmp
cmp
jne
insl
idivb
mov
jmp
adc
outsl
jo
in
jbe
fisubl
inc
jae
adc
cmp
dec
or
xor
inc
aam
movsl
test
test
and
xchg
xor
jo
test
mov
push
mov
inc
jge
aaa
dec
imul
inc
push
dec
cmp
sarl
sub
cmc
pop
dec
imul
imul
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
xor
les
xor
jne
imul
add
push
pop
inc
jo
pop
nop
out
xor
aas
sbb
inc
xchg
push
dec
enter
mov
nop
and
ja
pop
adc
adc
cmpl
pop
inc
jne
xor
fmull
sub
inc
imull
inc
fiadds
insl
adc
pop
and
cmc
pop
mov
enter
or
push
mov
xor
pop
idiv
inc
pop
lea
mov
dec
and
pop
ret
add
sbb
insb
in
je
pop
sub
lea
mov
xlat
xchg
popa
pop
inc
xor
ret
cltd
testl
lock
mov
lea
cltd
es
mov
mov
imul
adc
in
ret
lea
dec
ja
cli
push
js
sub
add
sbb
dec
adc
lea
jmp
add
loop
pop
jb
or
out
pop
sbb
jo
adcb
add
cmp
jle
sub
jmp
icebp
shll
adcl
outsl
sarl
out
pop
adc
jne
imul
dec
and
lods
mov
leave
call
add
mov
mov
cmp
into
movsl
sub
inc
inc
pushf
dec
dec
mov
jbe
mov
popf
add
dec
jns
orl
decl
sbb
push
lock
sub
incl
lds
xor
hlt
jae
inc
arpl
jg
add
pop
add
or
cli
add
mov
inc
cmp
in
mov
sti
or
pop
push
idivb
fstpt
or
push
push
jmp
pusha
jne
and
popfw
out
pop
push
push
jmp
pop
push
push
push
push
sbb
sbb
lret
daa
clc
mov
push
or
xchg
inc
sahf
pop
adc
jmp
mov
dec
mov
sbb
dec
lcall
cmp
sahf
pop
push
pop
clc
sub
jge
push
pop
mov
cmpl
aas
xor
push
push
jnp
insl
out
pusha
cmp
loop
push
das
or
dec
mov
enter
ss
jge
cmp
jl
cmp
jg
push
jle
jge
insl
ss
mov
idivb
stos
ljmp
call
cmpsl
cli
inc
add
pop
jmp
jne
cmp
orl
sbb
insl
and
data16
loop
int3
or
ret
jl
push
icebp
sbb
adc
mov
sub
and
push
js
pop
push
and
lock
xor
jmp
xor
sub
cmpsl
xchg
xor
dec
arpl
mov
or
cwtl
movsb
sahf
arpl
je
mov
fs
mov
jge
adc
jl
inc
push
repnz
cs
jae
xor
mov
in
xor
es
xchg
ja
push
push
push
push
push
push
pop
clc
sbb
add
lea
sbb
lea
sub
rolb
lret
or
call
sbb
rorb
adc
lea
in
call
rclb
pusha
fsubrl
sbb
push
mov
mov
xor
mov
add
jb
lods
rcll
mov
jb
jns
or
dec
icebp
pop
mov
inc
mov
xchg
pop
ffreep
and
mov
out
daa
inc
add
outsl
jmp
ss
sub
ja
xchg
push
pusha
xor
push
jb
adc
insb
orb
ret
cltd
xor
int3
outsl
imul
mov
rorl
cmp
jge
ss
sbb
jl
incl
dec
adc
add
test
xor
or
push
xor
xor
xorb
cld
test
inc
decb
ljmp
icebp
neg
outsl
nop
call
push
dec
inc
inc
ret
hlt
mov
sub
pop
and
rorb
add
jmp
inc
or
xor
or
jno
adc
inc
push
dec
jae
xor
mov
fadds
push
push
add
adc
sarb
loopne
fdiv
fiaddl
iret
jl
mov
sbb
sbb
jne,pn
sbb
mov
loopne
xor
pop
addr16
shr
inc
push
xor
lahf
loope
shr
rcr
shr
rcr
or
lods
lock
fildll
jb
movsb
out
shll
cmp
or
cmp
cltd
mov
out
dec
pop
fdivs
pop
add
add
pop
ret
leave
adc
and
cmp
mov
cmp
iret
xor
adc
pop
pop
fistps
pop
push
or
ret
jns
jmp
popa
jae
dec
pusha
cmp
or
enter
out
sbb
push
push
jbe
jns
ret
or
sbb
push
or
lcall
pop
outsb
and
btr
cmpl
xor
mov
sub
lea
pop
aas
jns
mov
adc
adc
mov
in
lock
repz
in
nop
adc
or
or
mov
dec
mov
add
and
and
mov
push
nop
ljmp
aas
dec
push
rolb
pop
sub
push
mov
call
mov
sub
jmp
ja
dec
mov
ficomps
sub
xchg
outsb
and
inc
call
pop
sbb
push
ss
push
popf
cmp
fimuls
cld
int3
push
imul
aaa
rorl
push
push
xor
sarb
lock
push
loopne
pop
cli
repnz
push
clc
into
push
test
inc
rorl
in
cmp
xchg
mov
jo
sbb
sbb
or
and
add
ficoml
push
mov
sarb
inc
push
into
inc
sbb
dec
push
and
mov
pop
push
and
or
scas
or
ret
addr16
or
push
popa
xor
cmp
and
lds
inc
adc
je
fildl
orl
js
fs
fsubrl
rcr
or
out
add
cmp
jb
iret
fsubrp
pop
mov
je
sbb
ss
jp
push
imul
test
cmp
stc
in
cmp
cmpsb
cmpsb
fmull
outsl
lahf
dec
sbb
mov
lahf
push
dec
notl
and
and
loopne
lds
push
push
test
lds
push
xor
xchg
or
repnz
fcmovb
dec
add
sbb
enter
pop
rolb
add
xorl
mov
or
lret
outsb
outsb
ljmp
insb
mov
aas
loopne
xchg
push
push
mov
mov
xor
idivb
ljmp
cmp
jb
or
xorl
mov
jo
sahf
pop
arpl
xor
cmpsb
cwtl
dec
jl
enter
mov
add
adc
jmp
mov
mov
inc
xor
aad
xor
mov
mov
add
push
rclb
insb
es
aam
in
mov
xor
movsl
arpl
jbe
sbb
or
jl
add
push
mov
mov
into
out
sub
push
pop
imul
pop
or
imulb
rorb
js
push
push
push
jle
push
aas
or
xor
in
push
dec
push
cmp
cmp
add
cmp
fdivrs
fidivs
sti
mov
pop
loope
sbb
stos
lods
cmpl
push
pop
pop
sbb
xor
out
push
jo
in
jne
push
lods
mov
push
leave
aas
add
inc
das
orl
jb,pt
lret
cmp
imul
xchg
add
xor
fildll
out
imul
ret
jae
push
add
push
or
sahf
mov
fisubl
or
inc
cmp
add
loope
insb
and
fiadds
int3
rolb
dec
pusha
adc
vpmovuswb
in
pop
pusha
test
or
out
stc
cmp
jge
imul
mov
andl
cmp
pop
movb
mov
shlb
or
rol
out
adc
nop
pop
xorl
xchg
test
cmp
or
cs
mov
xchg
cmp
rorb
les
lock
leave
push
sbb
pusha
mov
sub
andl
sub
mov
ret
sbb
ja
fdiv
add
mov
and
and
xor
adc
lock
enter
test
hlt
insb
jno
add
jmp
push
sbb
push
popa
fmull
pop
add
mov
mov
push
loop
fs
jbe
sbb
adc
jge
push
inc
push
jmp
daa
addl
dec
scas
dec
subl
cmp
call
je
mov
pop
push
pop
sbb
dec
xor
add
repz
add
adc
adc
and
movsl
hlt
daa
mov
cmp
dec
ret
dec
call
dec
sbb
adc
mov
sahf
sub
pop
dec
insb
out
mov
out
add
add
orl
pusha
outsb
loopne
mov
push
fdivs
or
adc
dec
aas
pop
mov
incl
cld
or
or
jb
push
sahf
ret
push
inc
mov
adc
push
push
inc
incl
mov
rcr
idivb
add
je
or
jne
xchg
add
push
paddq
inc
push
mov
jmp
ja
cmp
push
ss
jmp
add
shlb
xchg
inc
adc
add
lods
dec
push
inc
inc
pop
je
pop
es
inc
rolb
add
jmp
push
mov
addl
jmp
fisttps
add
sbb
icebp
xchg
fcomps
js
je
inc
or
je
andb
mov
mov
add
or
mov
into
inc
add
xor
mov
inc
xlat
pop
add
and
sub
cli
pop
push
test
test
rorb
mov
dec
rorb
mov
mov
jmp
mov
adc
cmp
jne
mov
rcll
jge
addb
dec
rorb
cmp
add
pop
std
aam
pushl
dec
shl
lea
cmp
jb
sbb
sahf
sub
pushf
fsubrs
add
push
push
orl
je
mov
pusha
xor
mov
fdivs
jle
imul
jne,pn
data16
cmp
and
inc
xlat
fcmovnu
mov
add
xor
add
ret
mov
pop
subb
mov
cmp
je
inc
inc
or
inc
outsb
or
jne
repnz
add
push
sar
inc
push
push
adc
jb
sub
jbe
push
mov
push
xchg
push
cmpsb
dec
add
or
adc
adc
enter
cld
pushf
pusha
ret
and
addps
jmp
sbb
fiaddl
fs
imul
adc
push
movsb
or
sti
or
sub
out
pop
shlb
int
pop
jl
pop
mov
bound
xor
pushf
aas
and
jbe
xor
lods
les
mov
adc
pushf
inc
adc
pop
push
dec
pop
pop
mov
popa
or
lea
mov
xor
or
or
or
push
and
mull
rolb
outsl
add
pop
in
js
into
mov
jmp
shlb
xor
cmp
mov
mov
pusha
jo
sbb
sarb
pop
sbb
jbe
pop
aaa
clc
adc
and
lea
xchg
sub
and
push
cmp
daa
adc
cmp
jb
lock
ja
mov
cmp
mov
sbbl
outsl
mov
push
call
je
mov
and
test
or
and
pop
add
or
clc
add
out
add
and
pop
add
shrb
mov
push
testl
stc
leave
fiaddl
hlt
lcall
add
loopne
xchg
je
mov
call
push
loopne
or
jmp
orb
jmp
xchg
adcl
movlps
ret
dec
mov
xor
pop
inc
in
push
mov
cld
or
xor
ds
add
jmp
lret
or
popf
or
mov
movl
add
add
mov
jmp
scas
pop
push
and
je
adc
adc
push
mov
scas
inc
mov
jae
mov
jmp
arpl
icebp
testb
xchg
dec
sub
xor
stos
cmp
push
test
sbb
lods
mov
icebp
mov
mov
sub
cmpsl
cmp
push
lea
loopne
and
pop
cld
dec
dec
or
stos
lea
addb
jge
pop
ret
mov
push
mov
jo
and
inc
and
lock
gs
or
pusha
in
sarb
jl
pop
orl
sbb
add
lea
mov
sbb
sbbb
dec
outsb
mov
cld
dec
xchg
insl
loop
pusha
add
adc
xlat
rclb
pop
cs
jmp
clc
jg
mov
ljmp
js
push
add
push
cmp
shrb
and
mov
leave
test
fmul
arpl
pop
inc
inc
out
cmp
lahf
sti
test
dec
push
sbb
push
inc
and
sbb
iret
and
jno
pop
or
and
mov
clc
dec
loopne
sub
jo
and
pop
jl
inc
mov
pop
add
mov
test
add
aas
xchg
dec
call
mov
mov
pop
inc
incl
shlb
mov
test
lcall
cmp
inc
pop
int3
push
into
rorl
dec
dec
xor
and
scas
add
jmp
test
adc
jge
dec
into
adc
lock
not
push
rcrl
jbe
pop
mov
orl
sbb
lods
xor
mov
hlt
dec
das
das
das
sub
enter
lcall
dec
test
mov
jne
mov
ja
movl
cmp
es
or
inc
and
add
arpl
ficompl
mov
ja
fsubl
jp
std
shrl
push
mov
pop
sbb
pop
enter
or
insb
cmpsl
scas
pop
lea
sub
adc
call
mov
dec
mov
leave
aad
imul
scas
and
inc
shl
and
fidivrl
hlt
inc
lea
call
adc
out
sbb
inc
cmp
jl
jle
add
icebp
xchg
jo
orps
sbb
and
dec
mov
cmpl
fcoms
shrl
mov
jecxz
scas
pop
push
cmp
sbb
fcoml
testl
push
jne
push
aas
out
loope
or
pop
sbb
aam
addb
push
sbb
nop
sbb
idivb
mov
mov
icebp
jmp
push
pop
xchg
test
les
push
push
imul
jne
sbb
jne
mov
imul
xor
aaa
or
data16
adc
or
lea
mov
dec
lods
das
adc
adc
insl
call
push
frstor
icebp
es
mov
data16
fidivs
push
push
xchg
repz
sub
mov
xchg
push
lret
jae
test
mov
jno
adc
or
pop
xchg
jb
nop
sub
rcrb
and
dec
push
rcll
xor
mov
scas
es
testb
pop
sub
or
or
add
push
adc
add
dec
lret
inc
xor
popf
es
aaa
inc
cld
push
add
lods
lea
xchg
sbb
xor
notl
xor
pop
cmp
xor
jp
mov
add
cmpsl
lret
jmp
cmc
inc
cmp
shll
out
xor
jbe
cmp
mov
ret
jmp
sbb
in
clc
inc
mov
or
push
dec
or
test
jbe
mov
ljmp
lea
fld
jb
inc
add
cmp
jb
mov
lahf
mov
test
nop
sahf
add
arpl
push
xor
es
call
push
bound
ljmp
mov
adc
push
lahf
imul
shlb
adc
push
push
push
push
push
push
adc
push
cli
sbb
pop
sub
sbb
call
xchg
cli
mov
push
dec
push
pop
mov
or
dec
jmp
inc
movsl
aas
in
pop
gs
mov
popl
divl
ds
jmp
sbb
jo
int
add
jo
push
and
pop
stc
lcall
sbb
push
out
push
sbb
push
mov
adcb
jmp
mov
mov
add
jp
sahf
mov
out
push
mov
pop
pop
ja
adc
in
ret
pop
push
bswap
insb
push
push
adc
add
add
dec
jle
and
sbb
mov
adc
adc
mov
or
call
mov
adc
jmp
xchg
adc
adc
decl
sub
cld
shr
mov
imul
add
mov
inc
and
dec
lods
inc
cld
push
and
push
lea
mov
jg
sbb
adc
add
out
stos
clc
je
cli
add
sub
mov
cs
mov
inc
mov
test
scas
je
shr
lea
shll
pop
mov
les
test
lea
xor
inc
cmp
pop
add
test
rcll
ljmp
mov
and
push
or
imul
jecxz
push
xor
into
xchg
sub
pop
shrb
sar
xor
lret
cmp
jbe
mov
mov
sarb
imul
cmp
je
lret
cmpsb
loopne
inc
jno
jno
mov
sti
pop
mov
shr
not
and
out
aaa
pop
dec
jne
sub
jmp
lea
das
mov
adc
push
mov
pop
dec
int3
xor
add
pop
add
and
jne
bound
outsl
adc
les
ficomps
lock
cmp
pop
dec
pop
or
or
negl
ss
sub
mov
jbe
cmpb
push
xchg
lods
loopne
sti
or
call
inc
insb
in
lock
sub
lods
dec
fs
repnz
mov
or
mov
sbb
insb
decl
nop
add
mov
mov
mov
mov
or
loope
add
scas
jp
adc
sti
divb
or
sbb
pop
adc
andl
inc
adc
dec
adc
add
and
js
gs
out
push
xchg
in
pop
mov
lret
mov
cwtl
dec
mov
lds
push
lea
pop
pop
les
loopne
jp
or
mov
rorb
scas
xchg
daa
mov
add
imul
add
les
je
push
or
pop
add
js
add
out
mov
les
popa
dec
fisubrl
mov
pop
mov
push
and
adc
popa
inc
jmp
jae
js
adc
int
mov
fdivr
jmp
orl
ds
incl
pop
mov
push
add
mov
jo
inc
hlt
shlb
add
inc
jl
or
ret
imul
mov
movsb
incb
pop
mov
add
sub
and
jne
cmp
adc
sub
inc
add
sbb
jecxz
and
pop
mov
cmp
ja
icebp
scas
cmpb
or
inc
orl
orl
in
lea
push
out
inc
inc
cld
mov
sbb
call
dec
jne
cmp
add
or
sub
sub
fs
inc
popf
lds
pop
mov
mov
lock
push
icebp
stos
decl
or
lds
not
and
adc
ror
sub
add
jl
adc
xlat
sub
nop
out
mov
dec
ja
or
cld
and
icebp
mov
mov
and
jbe
mov
test
dec
les
int3
inc
jp
rcrb
cmp
hlt
sar
push
xchg
aad
stc
int3
push
pop
inc
pop
lcall
stc
sbb
movsl
add
nop
or
add
cmp
nop
mov
or
xchg
and
add
add
movsl
adc
cwtl
xor
dec
mov
mov
add
pop
push
lea
jbe
cltd
mov
adc
jle
cmpsb
imul
rcll
adc
lcall
add
sub
js
movsb
jmp
and
and
js
test
iret
cmpl
mov
or
inc
cld
mov
and
clc
jl
inc
or
daa
jge
sub
add
cld
push
sar
dec
jp
ret
adc
pop
idiv
adc
cld
xor
xor
cmp
dec
mov
sbb
xchg
fisttps
mov
mov
ja
add
dec
ficoms
out
sbb
fiaddl
fimull
or
mov
lods
or
jbe
lock
or
mov
xchg
xchg
cmp
lods
decb
into
mov
out
cmp
xchg
xor
jns
dec
sbb
sbbb
add
sarl
dec
cmpb
and
add
lods
pop
and
inc
cmp
clc
push
popl
push
push
inc
into
call
out
sbb
cmp
or
stos
or
jo
dec
or
mov
cs
nop
cmp
and
cs
fidivrs
add
cmp
jb
push
jne
mov
lahf
or
fnstenv
jmp
cmp
cltd
sub
lock
aaa
aas
adc
push
aad
add
pop
pop
dec
lds
pop
lcall
inc
lods
cmp
je
inc
mov
pop
mov
mov
cmp
ret
ja
jl
and
inc
cmp
pop
iret
mov
andb
cwtl
jno
mov
rclb
jp
mov
out
repz
mov
jle
mov
adc
outsb
mov
sahf
jns
inc
test
inc
push
pushf
mov
sub
mov
sbb
jp
inc
push
test
jo
push
xchg
sbb
iret
push
dec
cmp
in
and
mov
decb
jne
cwtl
popf
pop
jo
repnz
jmp
jp
mov
adc
and
jne
aaa
pop
sbb
dec
push
and
shll
jp
mov
inc
call
push
or
das
pop
pusha
mov
sub
jge
dec
pop
inc
mov
push
pop
add
rorl
cmp
or
add
adc
inc
or
xchg
jge
push
out
or
sub
stos
incb
adc
lock
popf
aad
shrl
mov
lea
jo
sarb
sub
cmp
aas
fmull
cmp
add
pop
add
leave
sub
sbb
pop
xchg
adc
sub
sbb
add
sub
cmp
or
push
ret
push
push
inc
loopne
add
in
mov
dec
cmp
or
pop
cmc
cmp
add
sbb
push
mov
add
sub
and
mov
pop
mov
cmp
mulb
or
rolb
insl
cmpsb
icebp
push
shll
adcl
push
pop
adcb
sti
in
push
js
sub
pop
lock
aas
jb
mov
leave
mov
xchg
inc
pop
mov
in
xchg
sub
lods
cltd
orl
dec
push
imul
xchg
dec
out
outsl
sub
or
push
and
dec
push
mov
shlb
xor
fnstsw
push
ds
sahf
sub
sub
enter
inc
lods
loopne
push
mov
xor
in
mov
jmp
or
popf
jbe
enter
aas
mov
test
xor
push
test
add
iret
pushf
mov
or
adc
add
bound
adc
aas
adc
lcall
mov
xor
or
mov
adc
punpckhdq
inc
and
inc
xor
push
adc
or
push
les
cmp
or
adc
fistl
loop
adc
or
xor
fldl
rorl
hlt
mov
or
and
dec
jmp
or
push
scas
les
cmp
push
xor
push
dec
and
ja
add
cmp
lret
pop
movl
dec
adc
jbe
test
cmp
pop
inc
cmp
jne
or
dec
sub
adc
dec
fdivrs
popf
mov
pop
je
lods
adc
mov
mov
xor
int3
add
add
push
rolb
or
pop
xchg
sub
sbb
sbb
pop
add
adc
adcb
dec
jnp
mov
push
pop
div
mov
jb
lea
cmp
arpl
mov
cmpsb
sbb
test
jnp
lock
push
cmp
add
push
imul
mov
xchg
mov
xor
xlat
adc
cmp
pop
jecxz
daa
and
inc
pop
sub
mov
insl
or
call
cmp
in
cmc
je
xchg
sbb
dec
in
pop
rcr
cmpsl
xchg
mov
or
cli
jb
inc
jge
pushf
xor
icebp
cmp
push
hlt
cmp
sbbb
push
sbb
sbb
mov
push
lods
sub
xchg
add
and
jne
or
push
adc
gs
push
mov
sbb
scas
popa
mov
jbe
sahf
lcall
xor
lock
xor
inc
push
mov
adc
sub
fsubrl
jbe
sti
outsb
cmp
fisttpl
sbb
adc
jne
das
outsl
push
jne
pop
sbb
push
out
aam
sub
and
js
push
gs
mov
fistl
test
ja
enter
repnz
cld
cmp
je
movl
sahf
clc
call
fsubs
pop
mov
mov
ror
jmp
lcall
ds
inc
and
lret
jo
lock
push
ficomps
mulb
jl
ljmp
jecxz
add
xor
sbbb
xchg
clc
xor
inc
sbb
lods
pop
and
lea
push
cmpsb
adc
loopne
aad
adc
mov
fstpt
rcl
stos
or
addr16
push
roll
push
popf
dec
mov
int3
cmp
sbb
rcl
push
xlat
push
test
inc
stos
int3
jl
movsb
xor
ficoms
mov
out
leave
xchg
add
add
add
xchg
lret
pop
sbb
adc
cmp
and
stos
add
jmp
jg
xor
sub
and
je
mov
push
cwtl
mov
aaa
adc
push
in
jnp
and
mov
loopne
fldl
cmp
xchg
jmp
sbb
mov
mov
and
mov
mov
loopne
test
inc
loopne
jmp
inc
add
push
and
daa
loope
push
and
cmp
movsb
cmp
lcall
mov
dec
dec
fimull
pop
sahf
sbbl
adc
cmp
and
and
cmp
cmp
sub
xor
fwait
inc
cmp
cmp
inc
and
xchg
fisttpl
inc
cmovs
xchg
xchg
push
push
pop
add
in
fs
in
je
jl
sahf
movsl
xor
leave
and
dec
mov
xchg
cwtl
pushf
and
leave
mov
sbb
mov
jmp
push
cmp
add
add
in
enter
xor
fiaddl
mov
adc
lock
nop
inc
adc
sbb
movsb
clc
sbb
cld
fstps
data16
inc
and
inc
dec
cmp
add
or
insb
pop
ret
adc
push
push
jo
add
dec
addr16
ret
cmp
mov
sbb
cmp
je
inc
dec
jne
out
mov
nop
add
push
mov
jle
sbb
arpl
mov
push
sbb
adc
das
add
xorl
ret
xchg
pop
stos
add
jmp
mov
out
dec
jp
push
xor
inc
jmp
dec
leave
mov
jo
xor
or
adc
push
mov
aad
sahf
push
jmp
rcl
pop
dec
adc
roll
pop
or
jp
push
mov
sbb
mov
out
jns
rcr
mov
cld
lea
mov
pop
cmp
xor
imul
or
cmp
icebp
or
test
push
jns
gs
pop
jp
mov
cmp
outsl
rclb
push
pusha
cmp
push
fdivp
jnp
mov
test
ret
je
xchg
inc
push
popa
dec
adc
aaa
in
and
movsl
push
jbe
push
cmpb
adc
cmp
jnp
lock
push
rcrl
push
lea
jmp
lock
scas
lea
loopne
push
mov
pop
fdivr
sub
ss
rolb
clc
lods
mov
jmp
sarl
or
add
adc
mov
add
rclb
xorb
dec
or
add
adc
pushl
or
ret
mov
and
pushf
sti
or
fisubrs
dec
mov
add
shll
movb
lret
loopne
rolb
mov
inc
mov
ja
mov
mov
mov
jmp
xchg
sub
je
or
je
dec
je
sub
movsb
sbb
mov
cmp
push
mov
rclb
mov
mov
pusha
dec
adcl
addb
sbb
jne
and
in
rolb
scas
add
arpl
mov
dec
outsl
or
inc
pusha
jne,pn
sbb
inc
fs
sbb
add
cmp
fcoml
movsb
cs
add
cmp
jge
or
push
pop
mov
fsubr
push
outsb
nop
mov
and
fs
push
dec
sub
insb
int3
inc
lock
sbb
mov
mov
push
dec
shlb
test
int3
ss
lret
sarb
add
xchg
mov
sbb
add
daa
jmp
add
pop
subl
pop
test
movsb
cwtl
or
ret
inc
insl
aaa
add
and
xchg
movsl
pop
inc
mov
jns
pusha
iret
sub
ret
add
push
adc
popf
je
jae
mov
loopne
mov
cltd
nop
lret
int3
fdivs
pop
pop
mov
cwtl
mov
das
loopne
or
sub
out
dec
cmp
and
pop
lods
xor
sub
sbb
fstpl
sub
dec
adc
or
add
pop
inc
insb
sub
div
jne
orl
and
mov
fscale
or
mov
cltd
cmp
mov
aas
rorb
das
adc
and
pop
sub
jl
lcall
sub
adc
cld
jmp
or
mov
sub
pop
push
imulb
sbb
jp
cmpsb
mov
lea
push
rcll
fmull
or
sbb
adc
or
push
movb
pop
sub
jo
add
std
pop
imul
xor
jbe
push
pop
les
in
nop
or
or
leave
fiaddl
jb
dec
xor
sub
insb
icebp
mov
fsqrt
xchg
or
cld
ja
xor
pop
dec
lods
and
cmp
or
data16
divb
mov
push
aad
data16
and
push
pop
mov
cmc
adc
out
xor
and
add
dec
mov
test
andl
add
cltd
jecxz
xor
jl
dec
push
mov
cmp
push
hlt
test
mov
sbb
sub
sub
mov
pop
pop
adc
jmp
cmp
sub
loope
fs
pop
lea
and
jo
xor
lea
lock
dec
jo
mov
ret
ja
orl
out
add
dec
es
push
xlat
sub
hlt
pop
adc
add
loopne
jmp
fcompl
fdivs
add
jne
or
inc
fwait
add
xor
adc
push
sbb
mov
in
push
sub
mov
xorb
jbe
dec
sbb
jmp
ja
dec
addb
jmp
adc
nop
out
and
xor
add
je
sbb
out
mov
inc
sub
add
jl
fnsave
cmp
jbe
jmp
push
inc
mov
mov
test
or
fwait
jb
pop
mov
std
mov
adc
fidivs
sub
or
pop
add
add
notl
test
cmp
jecxz
push
fwait
inc
shr
add
mov
inc
cli
pusha
sbb
cmp
cs
test
xor
insl
mov
imul
push
jl
push
sbb
pop
rcrl
imul
imul
mov
or
xchg
add
jne
hlt
mov
ret
pop
in
pusha
fs
dec
and
in
add
inc
call
push
or
das
cmp
dec
jle
cmp
ss
xchg
dec
inc
das
je
sub
imul
or
ret
adc
mov
lock
jb
sbb
fmuls
sbb
push
push
popf
pop
jg
divl
sbb
test
cmp
or
cmp
cmpsb
jmp
inc
jae
pop
ficompl
mov
je
push
pushf
scas
pop
mov
mov
inc
push
in
imul
adc
ds
or
fdivs
mov
fstl
lea
addr16
ret
fisttps
sub
subl
imul
shr
sub
add
xchg
or
addl
lods
push
lods
push
pop
outsb
in
leave
ror
out
pop
adc
mov
jo
and
sbb
or
jg
js
ja
add
rcr
lret
mov
push
andl
inc
shl
add
adc
movsl
repnz
cmp
sbbl
sbb
arpl
lret
xchg
mov
and
loopne
adc
call
shrb
push
js
int
lock
stc
or
adc
in
pop
aaa
mov
mov
shrb
rorb
addr16
or
xchg
xchg
jg
jp
cmp
lods
push
loope
mov
add
jle
mov
pusha
push
xchg
shrb
jge
inc
inc
out
xchg
jg
pop
jbe
xor
loopne
sbb
add
jmp
cmp
fadds
jne
sub
mov
popf
or
test
and
cmp
adc
push
xor
xor
pop
ficoms
cmp
je
cmp
and
adc
push
or
adc
add
popa
rcr
jne
inc
lds
mov
or
test
add
sbb
jmp
sarl
fdivrl
mov
sub
cmp
cs
and
jbe
incl
adc
sbb
jb
movsb
cmp
jbe
xorb
add
and
sbb
add
out
shrb
mov
add
xchg
andl
add
xorl
xor
sbb
xor
mov
jo
sbb
xor
xlat
insl
jnp
inc
push
aaa
mov
cmp
cmp
jbe
jns
aas
xchg
hlt
inc
dec
sbb
mov
sbb
mov
test
ss
mov
out
push
or
movsl
out
gs
out
inc
das
stos
or
xchg
adc
jae
sar
or
shrb
jp
add
nop
iret
inc
push
rorb
es
pop
icebp
orb
gs
adcb
sahf
push
push
rorl
mov
cwtl
insl
lods
test
cld
and
push
dec
pushl
inc
ljmp
in
xor
or
je
and
pop
leave
cmp
shll
testb
data16
push
xlat
iret
or
xorb
or
push
xor
sbb
mov
adc
loopne
stos
arpl
call
adc
xor
lock
and
xchg
jmp
out
mov
sbb
ret
sarl
mov
into
movsb
arpl
jg
pop
mov
adc
mov
movb
dec
mov
sub
mov
cld
std
add
xor
ss
mov
add
jo
iret
and
sbb
or
pop
fmuls
pop
mov
mov
dec
stc
cs
ss
roll
call
push
cli
push
dec
std
bound
leave
je
xchg
ds
mov
mov
push
push
xchg
into
es
push
je
mov
idivl
rcl
out
push
cmp
ja
add
cmp
adc
loop
ret
cmp
jne
out
aad
dec
adc
fidivrl
fldenv
or
into
leave
icebp
push
add
inc
add
ja
hlt
xorb
or
clc
stc
cli
xor
stc
xor
in
and
xchg
int
jne
rolb
pop
andl
repnz
mov
cmp
jle
in
pop
dec
cmpb
inc
mov
cmc
dec
and
pop
arpl
or
les
jne
ficompl
fdivl
cmp
adc
mov
aas
mov
mov
cmp
mov
call
push
and
popa
jle
dec
xchg
cmp
jle
in
xlat
movsl
push
add
mov
sub
adc
jge
lds
inc
arpl
movb
fwait
stc
stc
add
push
icebp
and
mov
jbe
dec
dec
mov
dec
sbb
jb
movd
out
jne
pop
pop
pop
mov
dec
insl
add
inc
loopne
jbe
add
jmp
cmc
sbb
aam
movsb
mov
mov
push
or
loopne
fs
je
aas
cld
dec
mov
je
mov
cmp
jb
cmp
jbe
inc
inc
mov
jmp
add
mov
pop
sbb
mov
test
out
sbb
or
jbe
or
loope
into
adc
adc
or
or
lock
aam
test
adc
js
mov
inc
popf
sar
pop
repz
in
add
rolb
loopne
jbe
adc
lods
test
icebp
add
push
in
mov
dec
lds
inc
xchg
in
xorl
jle
pushl
aad
repnz
jle
pushl
rcl
mov
push
xor
mov
aam
cmp
jne
xchg
pushf
cmp
fcoms
fcomps
xor
jle
sbb
dec
outsl
sbb
push
js
push
adc
cmp
fmul
in
mov
call
sbb
xlat
movsb
lret
jmp
and
inc
lea
mov
pusha
adc
pop
mov
cltd
enter
push
leave
fisubl
and
or
mov
scas
or
jmp
sub
cmpl
in
jl
dec
push
call
inc
adc
xchg
push
ja
aas
jle
push
mov
push
pop
push
adc
ret
test
add
test
rcr
push
push
xlat
aaa
lods
xchg
fidivrs
push
mov
mov
insl
aaa
add
xchg
sub
or
fsubrs
lock
shrl
fsts
xor
mov
inc
push
adc
and
or
add
cld
add
js
sub
dec
mov
mov
push
xor
imul
push
jne
push
sub
loope
cwtl
adc
pop
adc
sbb
or
outsb
jle
in
xchg
and
push
sbb
push
mov
push
cmp
les
adc
mov
out
cmp
shll
push
cmp
or
cmc
sub
rol
test
jbe
pop
test
sbb
xor
cwtl
ret
call
lock
dec
lock
cs
add
or
dec
jb
jl
jb
lea
lds
jbe
or
int3
pop
into
and
push
test
mov
mov
insl
nop
cmp
shr
js
stos
dec
and
jp
das
jmp
fisttps
mov
sub
scas
push
sub
js
mov
shlb
and
mov
mov
sbb
inc
sub
int3
inc
js
sbb
out
fwait
pop
inc
sar
fcompl
test
push
das
pop
ja
mov
icebp
add
sub
loope
and
add
mov
inc
and
and
push
loop
inc
xor
dec
hlt
jmp
sbb
adc
push
and
sub
pop
xor
push
pop
jbe
sub
mov
push
cmp
sarl
xor
lea
adc
enter
ljmp
in
and
jne
cmp
cmp
shrb
arpl
subl
add
sbb
adc
shll
mov
es
loope
or
lods
testb
or
or
sbb
cmc
fiaddl
cmp
data16
ds
push
mov
daa
jne
push
fs
push
jmp
jns
xchg
jg
inc
sbb
decl
and
cs
fs
jo
push
out
orb
scas
push
mov
mov
lret
je
push
mov
pop
xchg
sub
jecxz
push
adc
inc
add
add
dec
loopne
xor
mov
and
xor
jo
and
divl
and
and
out
jne
lods
rorb
and
cld
ret
dec
loopne
sub
cmp
je
mov
jns
divb
and
faddl
jns
add
aam
xchg
pop
addr16
outsb
or
dec
imul
pushf
pop
pusha
and
leave
adc
fsubr
add
dec
in
push
clc
sbb
xchg
inc
or
push
ds
std
add
dec
or
push
or
cmp
fistl
mov
fmull
jp
push
push
mov
clc
dec
imul
lret
test
jo
xor
fidivs
mov
inc
fwait
xchg
movsl
fwait
ret
ret
sbb
ja
shll
test
and
mov
mov
movsl
push
andb
cmp
push
mov
mov
mov
pop
int
mov
inc
sahf
inc
push
cmp
push
shrl
insl
sbb
jp
fiadds
dec
pop
or
lea
mov
mov
repnz
or
orl
xchg
test
daa
stos
dec
shl
add
mov
sbb
sbb
mov
imul
jo
pop
cwtl
int3
lods
pop
leave
pop
sub
jae
test
mov
cmpb
fs
or
dec
in
sub
daa
test
mov
xor
sbb
int
js
push
lahf
mov
movl
add
add
insb
mov
mov
inc
add
push
or
mov
incl
bound
and
insb
outsl
arpl
imul
push
jo
push
cld
ljmp
push
popa
dec
dec
addr16
dec
imul
inc
popa
push
dec
dec
dec
jp
push
inc
push
arpl
fists
inc
js
addr16
dec
inc
dec
push
inc
inc
dec
jo
arpl
push
insl
insl
dec
outsl
gs
pushl
inc
push
insl
dec
inc
outsl
dec
pop
jp
jno
push
popa
inc
inc
dec
fs
pop
inc
fs
push
mov
dec
insb
jbe
dec
dec
jae
push
push
jae
push
mov
andb
push
addr16
incl
dec
inc
dec
arpl
push
push
dec
inc
pop
imul
dec
bound
pop
inc
inc
dec
inc
js
jp
fs
inc
push
imul
std
pushl
pop
fs
push
push
dec
push
inc
bound
ja
jne
jae
push
bound
mov
imul
jo
je
dec
dec
popa
inc
pop
push
jns
push
ja
mov
fs
jb
cmp
insb
rorb
pop
push
insl
popa
dec
dec
imul
imul
addb
les
dec
push
inc
mov
push
arpl
popa
gs
insl
loop
push
jno
outsb
dec
dec
bound
push
push
inc
decl
or
pop
ja
imul
js
insl
adc
bound
inc
imul
in
outsb
pop
insb
int3
inc
push
inc
bound
dec
jae
jo
dec
jo
pop
pushl
imul
gs
ja
push
inc
je
je
pop
and
arpl
call
out
dec
jae
push
inc
insl
gs
push
js
mov
jb
push
je
push
dec
gs
push
jp
out
dec
imul
sub
aaa
or
jo
jne
push
dec
jbe
push
fs
arpl
jg
jb
add
adc
sbb
cmovae
arpl
fcmovu
fs
pop
pop
jmp
mov
push
jb
jbe
das
push
push
js
push
jns
push
aaa
cld
mov
fs
dec
pop
jae
outsb
js
mov
pop
shlb
and
popf
and
jae
push
pop
lahf
push
push
inc
outsl
jb
sbbl
mov
mov
mov
jnp
add
push
dec
outsw
xorps
jb
pop
lret
pop
pop
pop
addr16
pop
pop
in
adc
movsl
std
out
inc
dec
popa
js
push
je
imul
mov
les
iret
clc
add
insl
dec
outsl
push
imul
orl
gs
jmp
aaa
pop
rclb
mov
mov
movsb
jp,pn
and
ja
outsb
je
insb
cs
dec
push
lods
mov
movsb
jo
imul
shll
push
stos
ja
push
or
andl
popa
insb
inc
rcll
shld
dec
mov
gs
xor
cmp
loopne
ljmp
ret
add
push
jmp
jmp
push
push
mov
pop
dec
lahf
or
dec
push
fcom
inc
dec
mov
dec
inc
pop
jnp
inc
inc
cmp
xor
sub
sub
cmp
aaa
aaa
sub
outsl
es
xor
xor
inc
jge
dec
outsb
jo
push
mov
hlt
cmp
push
dec
sbbb
add
lds
loopne
pop
dec
and
aam
mov
jge
xchg
adc
imul
outsb
and
in
and
fisttpll
jl,pn
call
scas
pop
inc
outsb
arpl
push
outsl
add
cld
test
and
xor
les
pop
cs
add
pusha
subl
mov
lds
inc
pxor
aas
add
add
sub
or
adc
adc
call
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
pushl
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
or
aad
pusha
dec
push
inc
push
out
sub
jg
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
pushw
imul
xchg
jo
jb
jne
ja
jns
jnp
jge
jg
cmp
xor
add
enter
pop
leave
inc
repnz
add
test
add
addl
push
sbb
add
xchg
sub
mov
sub
add
add
push
and
push
add
add
sub
ja
jmp
cmpsl
or
adc
aaa
and
inc
pop
inc
mov
out
and
call
add
addb
xchg
lea
xchg
xchg
xchg
xchg
call
pushf
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
pushl
mov
rol
enter
int3
int
iret
rcl
rcl
aam
call
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
testb
cmp
sti
cld
std
jmp
add
inc
adc
and
test
push
popa
push
and
push
add
ljmp
mov
push
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
mov
call
xchg
outsb
inc
bound
jb
jo
or
dec
leave
mov
outsl
add
inc
jne
push
gs
arpl
jbe
adcl
xchg
jb
js
je
mov
pop
popf
jg
insb
insl
add
xor
jb
add
add
sub
mov
je
insl
and
jb
or
bound
push
push
and
inc
hlt
xor
dec
add
inc
and
push
ss
daa
decb
adc
and
jo
imul
addr16
sub
je
gs
jo
and
insb
outsl
subb
inc
and
bound
pop
or
imul
or
cltd
fldcw
and
popa
arpl
daa
mov
jne
pop
xor
jl
fcmovb
and
insl
push
xchg
or
pop
aas
xor
pop
rcrl
rolb
in
adc
stos
out
insl
bound
fdivrp
push
call
and
jbe
dec
mov
js
push
rcrb
popa
add
or
fmuls
xor
bound
and
je
pushf
cmp
dec
in
ds
cmpl
imul
jb
cmp
insb
push
je
outsl
mov
inc
cmpl
imul
dec
sub
arpl
cmp
fwait
orb
pop
dec
popa
sub
sti
outsb
pusha
push
mov
add
inc
xchg
lret
push
sub
imul
xor
int3
or
push
loope
prefetch
test
andl
cmp
push
ffreep
shrb
push
loopne
and
xor
shll
hlt
adc
mov
gs
cwtl
cmp
aaa
ja
inc
cmpsb
sub
pop
mov
fs
pop
cmp
jbe
inc
jbe
je
xchg
push
mov
xchg
mov
mov
arpl
jo
scas
xor
push
or
arpl
push
rcrl
jo
bound
mov
inc
aaa
insl
ds
xor
ljmp
sub
fs
jne
or
pop
or
sub
rclb
mov
mov
nop
xor
jbe
xor
cmp
pop
add
push
xorl
cmp
xor
and
mov
lret
cmp
addr16
jae
xor
push
pusha
jo
rorb
stos
xor
cmp
push
sub
xor
pusha
push
imul
dec
xchg
mov
and
add
cmp
ds
insl
mov
lods
vpmaxsw
dec
and
dec
cmp
pusha
aaa
arpl
out
xchg
out
add
lea
mov
cs
xchg
xchg
adc
adc
lock
pop
jbe
and
jl
dec
bound
mov
js
ficoml
insb
movsb
and
gs
arpl
inc
xor
imul
dec
dec
lods
ret
push
or
daa
pop
dec
mov
sbb
jns
mov
stos
add
push
and
fisubs
fsub
test
xor
mov
add
jo
jno
sub
mov
pop
pusha
inc
jbe
push
pusha
jno
mov
xchg
cwtl
arpl
and
xor
mov
insb
cltd
popl
cmp
gs
and
push
and
or
jmp
pop
test
cmp
pop
pop
push
push
jae
pop
in
or
cmp
cmp
sbb
gs
addr16
mov
das
pop
ja
inc
loopne
push
mov
inc
or
xchg
inc
push
push
push
push
dec
negl
dec
push
jne
repnz
je
popa
mov
pop
pusha
cmp
fildll
mov
jo
xorl
adc
cmp
fists
outsl
xor
inc
in
xchg
lods
sbb
popa
insl
or
fadd
mov
sub
push
lea
jmp
mov
outsl
xchg
daa
xchg
in
mov
test
cmp
cmp
cmp
cmp
push
das
push
mov
sub
inc
jl
push
addr16
stc
sahf
push
jle
sub
sub
push
lahf
cmpsl
cltd
jnp
cmp
add
add
ds
jmp
addr16
sub
sub
sbb
aaa
push
mov
sbb
push
cmp
cmp
rcrl
push
scas
push
test
fs
jb
dec
cltd
imul
push
fidivrl
js
in
cld
sbb
adc
insb
mov
ss
out
out
jo
sub
fucomip
jo
out
sub
fdivrl
enter
out
mov
cwtl
nop
cmp
stc
mov
stos
mov
jns
rep
push
jo
push
iret
jnp
pusha
push
pop
pop
push
push
iret
repz
inc
inc
cmp
xor
cmp
repz
sub
sbb
cmp
repz
or
out
ds
add
cld
mov
jns
lock
call
sahf
out
fcom
ror
enter
out
mov
pushf
test
cmp
inc
and
mov
push
les
iret
mov
fiadds
call
iret
rep
movsb
cwtl
mov
ds
dec
and
mov
jns
mov
sbb
mov
ja
cmpsl
add
cmp
cmp
add
jne
dec
fs
dec
and
jns
add
das
shrb
xor
dec
push
inc
test
or
or
mov
mov
sub
jne
movsb
insb
iret
mov
fisttpll
cmp
dec
ljmp
push
pushf
mov
mov
jae
cmp
jg
jae
and
inc
popa
mov
mov
adc
jb
daa
jmp
clc
sbb
mov
and
cmp
pushf
outsl
pop
dec
inc
aas
add
pop
ja
and
mov
push
cmp
pop
mov
jb
dec
sbb
xchg
ret
ss
push
hlt
push
inc
arpl
push
sub
daa
pop
pop
test
xchg
inc
outsl
js
or
push
inc
push
loop
dec
mov
mov
insb
enter
cltd
aam
xor
fcmovb
push
dec
fs
xor
jb
mov
xor
sbb
and
aas
icebp
das
add
inc
add
ja
movsl
dec
data16
mov
mov
das
andb
aas
mov
xlat
sbb
les
rolb
in
das
inc
sbb
sub
aas
jle
mov
add
pushf
add
les
lahf
das
and
sahf
mov
daa
aas
xorl
subps
mov
ja
nop
daa
add
xor
push
lods
pop
inc
mov
repz
nop
xchg
mov
faddl
repnz
in
clc
mov
imul
adc
sahf
add
push
dec
lds
mov
ja
hlt
js
inc
sahf
or
nop
or
stc
push
cmp
insb
mov
imul
push
shlb
lcall
sbb
inc
pop
fidivrl
out
andb
pop
xlat
loopne
ljmp
cmp
lods
arpl
ja
dec
jmp
cmp
scas
add
dec
mov
and
stos
push
jbe
jnp
jg
faddl
shrl
add
aaa
das
inc
es
adc
dec
dec
and
push
in
mov
inc
jecxz
inc
iret
push
dec
stc
pop
dec
add
dec
sahf
out
add
add
leave
mov
fildl
outsl
mov
jl
pop
sahf
loopne
push
pop
inc
enter
in
jne
in
enter
insb
inc
cmp
ret
and
mov
pushf
aaa
enter
jmp
fbstp
ja
mov
mov
cmp
dec
decb
cmp
popf
sahf
push
pop
scas
ret
inc
mov
cmp
fldcw
rorb
out
sarl
fsubs
sqrtps
jne
sub
inc
pop
pop
adc
mov
fs
daa
je
pop
xor
test
mov
daa
or
mov
ja
dec
sub
jg
ds
fstpl
and
inc
mov
leave
dec
pop
xor
and
scas
sbb
mov
fmuls
sbb
add
cmp
test
and
mov
and
in
inc
rcrl
pop
loopne
aas
cmp
inc
cs
xor
ss
je
xchg
mov
inc
pop
fldenv
jg
sbb
adc
pop
inc
enter
jns
dec
mov
inc
add
cmpsl
or
push
aas
or
daa
xchg
push
pop
pop
bound
rorb
popf
dec
push
ds
cmpsl
cmp
jb
cmpl
int
or
dec
lahf
jl
int
aam
in
data16
sub
dec
loopne,pt
mov
stc
loopne
enter
pop
add
cltd
mov
lcall
sbb
mov
pop
inc
inc
xor
sub
fdivrs
xchg
adc
and
es
push
lahf
cwtl
or
rclb
dec
and
addr16
add
arpl
imul
xchg
push
stc
push
and
or
adc
or
and
push
es
pushl
sub
xor
add
and
adc
jae
push
daa
and
jp
aas
sbb
cmpsb
sti
dec
xchg
in
addl
loopne
pop
in
dec
xchg
cmc
mov
fldenv
pushl
inc
xchg
cs
int3
stos
ja
lods
mov
les
xor
pop
mov
jmp
call
jle
addr16
cmpsb
js
inc
sbbl
sub
repnz
add
pop
sbb
dec
dec
lcall
fs
inc
jo
loopne
push
divb
xor
fisubs
insb
in
inc
je
push
cs
push
insb
push
fwait
out
inc
je
inc
arpl
push
lcall
xor
push
push
pusha
aaa
fistpll
push
lods
mov
mov
iret
insl
sub
jno
imul
out
pusha
push
or
pop
es
enter
das
xchg
sub
stos
outsl
mov
data16
dec
lahf
mov
dec
xor
pause
scas
mov
jae
push
rorl
insl
dec
mov
outsl
cmp
adc
or
aaa
and
inc
adc
sub
sti
gs
pop
xor
adc
push
sbb
mov
dec
mov
push
imul
pop
cmp
add
jg
and
and
or
push
cmp
xor
sub
add
pop
inc
es
add
jg
and
lods
push
hlt
addr16
lods
mov
jmp
mov
pushf
cwtl
shll
pusha
pop
movsb
mov
insl
jae
dec
adc
jmp
mov
push
stc
adcl
push
test
test
and
scas
cld
dec
sti
jnp
adc
sbb
les
sbbb
push
loopne
addr16
jg
stc
ja
sbb
enter
add
jb
les
dec
data16
add
stc
push
call
loopne
push
mov
push
jg
out
xor
xor
sbb
in
in
xchg
imul
repz
pop
scas
pop
pushfw
lods
addl
pushl
dec
pop
or
sub
in
adc
mov
fidivs
push
pop
ret
ja
inc
leave
or
out
stc
inc
adc
inc
xchg
ss
mov
stc
mov
out
mov
push
outsb
imul
adc
mov
sub
scas
jb
xchg
mov
sub
dec
pop
in
mov
and
ss
dec
jbe
mov
out
jae
add
stc
jg
adc
arpl
outsl
dec
push
popa
adc
leave
inc
in
xor
lret
fstpt
fcoms
inc
cmp
fcompl
data16
fisttps
adc
pop
add
int
call
sbb
cmp
addr16
jae
fwait
xor
jne
xchg
lds
add
paddd
imul
adc
les
andb
incl
mov
out
push
xor
push
xor
into
push
xchg
jns
adc
out
in
xor
loop
dec
inc
sbb
mov
dec
dec
fidivrl
dec
add
xor
fisttpl
adc
xchg
sti
or
out
loopne
jbe
xchg
ja
cmp
fistps
cs
sbb
sbb
outsl
xor
jns
adc
cmp
pop
cld
aas
add
adc
out
sbb
lcall
out
adc
out
out
push
les
push
ljmp
jg
ljmp
and
das
dec
adc
xchg
push
out
push
jae
sub
test
sbb
fcomip
incl
das
inc
dec
test
sub
je
adc
pop
mov
adc
cmp
repnz
jge
mov
pushf
mov
out
cmc
lcall
sbb
pop
push
adc
sbb
add
pop
jg
add
fmuls
dec
jge
int3
aas
rolb
outsl
jp
cwtl
ljmp
lret
pop
xor
dec
mov
push
cld
aaa
lcall
pop
clc
ss
mov
int
outsb
jbe
shrl
cli
scas
aas
adc
fldt
mov
stos
lahf
mov
push
loop
adc
es
mov
fs
dec
icebp
add
xor
jbe
rolb
inc
sub
stos
xor
inc
adc
mov
mov
cltd
xchg
mov
pop
aam
gs
cmp
loopne
jbe
sarl
loop
mov
incl
pusha
lret
mov
fwait
sub
cmpsl
mov
sub
cmpsl
sahf
lahf
stos
mov
mov
addr16
mov
stos
orl
imul
fbld
test
addr16
ss
in
mov
insb
icebp
xchg
mov
or
into
and
or
jmp
lahf
int3
xor
outsl
bound
lret
imul
push
inc
mov
sub
lcall
sub
insb
adc
or
call
shll
out
je
lea
push
add
add
and
cmp
jg
mov
loop
push
push
dec
mov
loop
and
sarl
outsl
out
cmpl
filds
sub
jg
cmp
imul
lds
dec
idiv
pop
decl
jno
mov
pop
push
xrelease
orl
cmpl
push
loopne
icebp
mov
mov
push
ds
push
mov
and
repnz
loope
mov
push
dec
fs
sahf
push
cmpsl
lea
clc
into
lahf
je
push
and
mov
jmp
outsl
ja
gs
sub
xor
add
add
in
inc
enter
sahf
xlat
test
icebp
push
sbb
ja
test
int
jno
fbld
in
fiadds
cs
sub
ret
iret
push
adc
insl
stc
jg
ret
ret
inc
iret
inc
lcall
push
sti
jno
push
cmp
dec
iret
testl
pop
mov
sti
mov
mov
fldcw
push
dec
fcmovbe
dec
divl
je
adc
xlat
inc
mov
sbb
lods
push
pushf
jl
imul
in
dec
ficoms
mov
jo
push
cmpsl
repz
mov
out
repz
gs
scas
mov
dec
dec
test
dec
incl
out
add
mov
push
ss
ret
pop
hlt
cltd
xchg
and
or
test
lcall
fwait
pop
add
adc
jg
push
icebp
xor
cmp
sbbl
pushl
loopne
faddl
fstps
sbb
das
adc
mov
movsb
sub
aas
sahf
js
sub
mov
aaa
mov
fs
mov
cmp
cmp
imul
xor
inc
ljmp
dec
dec
jbe
inc
ds
mov
mov
mov
jg
dec
jecxz
jb
insl
and
mov
ljmp
dec
lods
dec
pop
mov
mov
popl
mov
cmp
dec
mov
das
jnp
in
adc
out
std
mov
jl
popf
add
adc
loopne
in
or
stos
push
mov
imul
ret
pop
pop
repnz
pop
nop
adc
sbb
dec
adc
iret
mov
adcb
js
call
add
add
cmp
clc
or
inc
mov
sahf
jne
dec
mov
xor
xchg
sbb
adc
lods
aaa
dec
into
mov
adc
pushl
inc
jae
lahf
xor
mov
jbe
movsl
js
mov
mov
mov
in
sbb
aas
out
xor
mov
sub
xor
fistpl
cli
push
inc
sbb
push
popa
aas
xor
cmp
out
jb,pn
adc
es
pop
pop
adc
les
jo
cmp
fistpll
sahf
sub
or
inc
in
cmp
aaa
mov
call
mov
rorb
mov
inc
int
outsl
clc
outsl
dec
dec
stc
push
pop
and
adc
and
lods
inc
aaa
icebp
incl
ds
bound
test
inc
add
add
fistps
mov
stos
dec
jns
jmp
jns
fildll
frstor
sbb
daa
adc
mov
mov
lret
jmp
clc
jmp
inc
pop
icebp
jle
rep
ret
repz
push
jmp
loopne
inc
aad
hlt
shrl
in
test
adc
pop
dec
lahf
imul
mov
cmc
or
imul
scas
inc
fmull
mov
cmp
mov
pop
jp
sub
dec
fildl
pusha
arpl
ljmp
push
jb
mov
jno
call
mov
outsb
pop
xlat
cs
jns
lods
jbe
cli
ljmp
pop
lea
mov
out
mov
and
aas
je
mov
fbld
enter
fistps
inc
js
test
icebp
decl
mov
xor
outsl
je
adc
adc
jp
jo
decl
push
clc
jno
add
bound
cmpsb
inc
ljmp
arpl
xor
jb,pt
adc
push
ljmp
xchg
sub
push
pop
loopne
insb
and
mov
or
pushl
or
push
jge
and
dec
pop
icebp
jmp
testb
lret
add
xlat
push
cmp
fs
sbb
sub
add
popa
cmp
decl
punpcklwd
js
and
push
in
ss
mov
push
addr16
jae
loopne
call
imul
sbb
inc
add
or
ljmp
mov
inc
jg
push
testl
pop
xor
outsb
jnp
dec
pop
xchg
jle
push
das
push
int3
shrb
insb
add
dec
cld
jno
fiaddl
rcrb
pop
add
mov
push
dec
mov
outsl
cmp
aaa
inc
dec
test
addr16
or
fs
ljmp
jae
xchg
mov
sbb
mov
jbe
xor
and
lsl
mov
repz
inc
ja
nop
jl
mov
inc
imul
push
gs
inc
sbb
cmp
mov
scas
inc
shll
scas
mov
or
pop
sbb
xor
das
jecxz
into
cmp
add
jg
push
dec
call
cmp
mov
or
maxps
and
scas
imull
mov
movsb
sti
and
dec
mov
xchg
push
dec
lods
daa
jg
xchg
data16
ljmp
cs
mov
bound
adc
in
mov
ljmp
out
dec
int3
sbb
pusha
mov
dec
rcr
imul
pop
cmp
in
sbb
push
sbb
daa
xor
ret
mov
mov
es
gs
adc
and
xor
pop
mov
lret
mov
add
mov
pusha
cli
call
add
mov
mov
bound
inc
fmuls
push
stos
test
lahf
pushl
sti
sahf
cmp
push
mov
aad
dec
mov
dec
outsl
adc
iret
aas
pop
push
out
jmp
mov
out
shrb
decl
into
fildl
arpl
add
sub
and
iret
or
adc
mov
jg
movb
imul
push
inc
pop
jne
push
xchg
pop
pop
into
dec
dec
jmp
jmp
jmp
inc
dec
out
push
jl
pusha
int3
pop
imul
mov
and
pop
insb
dec
mov
pushl
jmp
jbe
mov
in
mov
decl
cli
add
pop
and
mov
pusha
dec
dec
movb
dec
jns
mov
pop
sbb
mov
and
inc
pop
loope
sub
fisubs
in
dec
cmp
lock
decl
jb
movl
inc
sbb
lret
adc
mov
int3
xlat
imul
mov
jae
rorb
fwait
out
in
xchg
xlat
inc
rcr
pop
outsl
lret
inc
aad
dec
into
mov
mov
sahf
sbb
mov
push
jbe
arpl
mov
js
jmp
imul
inc
mov
sub
lcall
cwtl
push
pop
loop
in
incl
test
jns
aaa
push
sub
mov
insb
aas
xor
push
fndisi(8087
push
in
int
xchg
ss
and
aaa
push
loope
mov
jne
std
dec
push
iret
imul
dec
int3
mov
push
jecxz
jbe
push
add
mov
dec
mov
pop
mov
push
xor
xor
int3
mov
dec
iret
xchg
decb
int3
dec
sub
xchg
mov
imul
jns
daa
inc
push
mov
inc
jbe
data16
jge
xor
dec
cmp
out
mov
out
call
incl
outsb
pop
sbb
cmp
pop
xchg
jmp
lds
dec
push
aaa
dec
jb
dec
jae
mov
lret
xchg
data16
insl
incl
std
out
and
adc
inc
adc
cmpl
xchg
push
mov
jo
cs
mov
cwtl
mov
insb
inc
inc
jp
lods
pop
bound
push
push
pop
cmp
cmp
inc
jne
add
and
lret
repz
fdivr
or
sbb
pop
xor
das
dec
es
sub
pop
jnp
pop
clc
xchg
inc
dec
ds
add
iret
test
sbb
adc
lock
scas
nop
divl
imul
pop
push
ja
add
and
pop
icebp
jns
mov
push
mov
outsb
fwait
mov
scas
xchg
aas
scas
adc
cmpsb
or
mov
mov
ds
lds
popa
popa
pop
mov
test
call
cld
push
push
es
mov
and
cmp
cmp
call
pop
mov
aam
xchg
xlat
push
inc
insl
mov
loope
andb
xchg
inc
dec
dec
out
mov
pop
and
cwtl
test
movb
add
cmovae
arpl
adc
xor
jl
lea
clc
sbb
mov
jl
insl
outsb
fs
jle
jns
sbbb
or
mov
jg
cld
cmp
icebp
dec
xchg
fs
pop
std
sub
mov
push
dec
adc
and
cld
aas
dec
aam
lea
decb
inc
mov
jb
dec
inc
outsl
inc
ds
out
lcall
rolb
lods
mov
ja
fwait
cmpsb
pop
jg
scas
fcomps
dec
stc
data16
mov
sbb
in
out
sar
ljmp
push
inc
dec
arpl
popa
jo
pop
mov
aas
xchg
and
jne
push
cmp
fs
xor
aas
sub
push
decl
add
call
nop
jae
dec
adc
xchg
std
fsubrl
stc
cmp
sahf
addr16
outsl
gs
mov
ret
out
cli
aas
ds
aas
enter
cmc
inc
jb
inc
dec
mov
aaa
insb
js
sbb
cmp
and
sub
test
push
sub
fwait
lods
lods
cwtl
mov
dec
pop
dec
xchg
jns
or
dec
mov
jl
insb
push
cmp
and
or
add
xlat
movsb
sub
in
jne
xor
push
iret
and
pop
imul
and
aaa
clc
cmp
imul
push
imul
pop
mulb
fistpl
int
nop
ficomps
mov
push
mov
dec
out
jle
dec
cmpsb
dec
mov
bound
mov
aad
push
xchg
test
inc
out
repz
push
cld
mov
cwtl
fwait
xchg
pop
jbe
scas
stos
push
inc
popa
mov
call
popa
xor
lret
or
xchg
loop
dec
ljmp
addr16
mov
adc
stc
sub
bound
sub
push
sub
fdivs
loopne
or
jmp
dec
aas
dec
cmp
notl
cld
mov
push
push
arpl
inc
pop
adc
out
in
sbb
inc
xchg
into
call
fwait
scas
iret
sub
test
dec
mov
inc
test
sub
add
data16
sbb
sbb
andl
out
add
ffree
push
loopne
xor
and
insl
pop
sub
pop
std
fdivr
scas
inc
push
in
cmpsb
push
out
cmp
outsl
out
mov
push
sti
mov
lret
mov
call
pop
es
out
dec
push
adc
add
adc
jmp
jmp
mov
fwait
mov
jnp
js
test
imul
mov
pop
add
push
ja
and
leave
mov
inc
adc
mov
xchg
jns
les
stos
gs
hlt
insl
inc
jecxz
outsb
lret
out
ret
std
mov
int
into
or
sbb
or
push
sbb
mov
lcall
pusha
fldt
daa
xchg
ss
shll
dec
fnstenv
dec
pushl
scas
xor
push
sub
xbegin
mov
outsl
and
inc
fwait
push
test
push
les
out
sahf
push
pop
fsubrs
push
pop
aas
lahf
xchg
jecxz
fidivrl
mov
leave
fdivs
and
sbb
cld
out
insb
roll
enter
sub
mov
add
std
push
ret
adc
es
pop
out
sub
and
stc
arpl
dec
ss
pop
movsb
or
xchg
lret
mov
mov
cmc
incl
cmpsl
sub
push
pop
pop
xchg
imulb
xchg
call
add
jbe
pop
mov
enter
data16
mov
cmpsb
mov
fnstcw
cmp
loop
adc
push
repz
dec
addr16
insl
sarb
pop
divl
call
cld
pushl
mov
jp
sub
mov
dec
sbb
xor
jnp
ds
sbb
decl
dec
push
jbe
or
popf
xchg
pop
insl
dec
into
and
orb
addr16
jne
es
add
sbb
scas
mov
pop
hlt
je
ds
jae
jmp
mov
imul
in
mov
adc
mov
lods
leave
outsb
insb
outsb
ficompl
sub
inc
dec
fcmovnb
mov
pop
psubd
sbb
std
push
pusha
push
mov
or
lock
out
clc
pop
jp
imul
dec
les
es
and
dec
test
aas
cwtl
jle
mov
push
aas
jle
adc
jmp
dec
xor
adc
pusha
cmp
xor
mov
aas
imul
je
sbb
decl
fisubs
fidivs
jno
outsb
adc
pusha
outsb
mov
xor
or
ljmp
movsl
test
nop
add
jg
pop
mov
xchg
cwtl
ret
mov
dec
fcomip
mov
outsb
movsl
and
les
jns
in
std
or
decl
movb
and
mov
adc
stos
push
lods
popa
jae
add
ljmp
pop
sbb
shrb
stos
daa
pop
dec
inc
ljmp
push
or
and
or
es
mov
nop
sub
hlt
aaa
loop
jg
or
cmp
cmp
lahf
decl
insl
pop
scas
mov
sub
push
adc
aaa
jle
pop
popf
fistpl
dec
fcomip
dec
test
lcall
les
gs
push
popa
icebp
sub
int3
inc
shlb
repz
imul
xchg
jne,pn
movsb
jmp
and
cmp
cmp
mov
mov
outsb
subb
daa
mov
jg
dec
pop
insb
dec
aas
xchg
push
add
xchg
pusha
scas
sub
mov
shrl
pop
aad
cmp
jne
add
pop
xchg
out
imul
push
leave
lea
jae
lods
jg
mov
adc
repz
mov
bound
xchg
out
arpl
sub
call
fwait
sbb
arpl
pusha
xor
xchg
pop
jp
repnz
inc
push
jmp
inc
pop
dec
inc
lea
out
mov
imul
test
mov
cmpsb
in
mov
xlat
jg
mov
mov
jl
mov
cltd
mov
arpl
push
stos
ret
aas
push
lea
push
jecxz
incb
inc
fildl
jnp
dec
in
cmp
inc
add
les
and
jecxz
arpl
xchg
aas
mov
cmpsl
jnp
ja
decl
or
in
sbb
mov
rcrl
mov
sub
jg
mov
je
scas
stos
int3
mov
cmpsl
sbb
sti
lahf
adc
cwtl
shll
ret
imul
jae
xor
or
lret
pop
push
incl
outsl
dec
mov
pop
js
stc
push
addr16
mov
dec
lds
push
fimuls
test
std
dec
ds
rol
xadd
icebp
scas
sub
or
popa
insl
pop
in
call
cld
sub
inc
es
push
in
jle
xor
cmp
outsb
push
scas
cmp
adc
adc
sti
aam
fnsaves
shlb
jle
out
mov
and
out
inc
into
inc
xor
mov
inc
pop
outsl
adc
fistl
push
pop
mov
jl
pushl
cld
in
add
adcb
loope
push
ljmp
mov
std
pop
les
sub
movsb
cmp
cmp
xchg
inc
stos
adc
gs
add
sbb
out
jns
mov
add
adc
push
sar
inc
aaa
inc
push
fnstsw
xchg
dec
jns
dec
inc
add
pop
out
cmp
push
inc
mov
cmpsb
xchg
pop
data16
jbe
pop
incl
push
das
call
ljmp
adc
das
icebp
jg
out
mov
or
dec
inc
cmpsb
xchg
xor
sar
lcall
je
pop
sbb
gs
shlb
add
loope
mov
mov
arpl
daa
inc
sbb
out
clc
andb
imul
cwtl
add
add
fcomip
pushl
and
lods
mov
fcoml
pusha
test
pusha
out
xchg
fwait
ds
sbb
aaa
pop
add
jmp
cmpsl
mov
movb
scas
push
inc
popa
aad
cmp
ficoms
cmp
mov
push
inc
push
dec
ss
add
jb
mov
aaa
incb
inc
add
lahf
or
cmp
aas
out
addr16
sbb
int3
test
dec
movsb
fldt
dec
or
adc
js
push
test
jo
clc
fcomip
ret
mov
xchg
push
cwtl
jae
cmp
mov
incl
fcompl
inc
pop
imul
or
test
push
data16
push
jno
sbb
push
imul
movl
xor
cmp
lret
movsb
jnp
mov
arpl
nop
gs
pop
test
incl
sub
xchg
popa
dec
into
sub
mov
xor
addl
cmovnp
adc
mov
jg
pop
aas
ja
push
mov
xchg
pop
and
cmpsl
xchg
es
shlb
call
outsl
push
in
jb
dec
call
data16
xchg
xor
mov
in
and
test
and
xor
jp
cmp
push
and
test
cmp
mov
push
pop
in
addr16
call
push
push
dec
jno
add
adc
addb
into
mov
outsl
es
jg
cltd
sbb
adc
pop
xor
xor
fs
inc
incl
mov
sub
push
sub
sub
cmp
stos
cmpb
and
das
xor
jg
ja
pop
dec
xor
cmp
out
dec
andb
xchg
cwtl
repnz
ljmp
adc
icebp
inc
xchg
je
mov
inc
fistps
cmp
rolb
test
gs
in
jg
cmp
fsts
cmp
int3
add
mov
repz
inc
sub
mov
scas
pop
popa
data16
pushl
cmpsb
out
inc
fsubs
ds
adc
and
xchg
and
mov
stc
decl
xchg
xchg
fwait
dec
fildl
pop
pop
cmc
pop
and
cli
mov
add
imul
cmpsb
call
and
xchg
dec
nop
mov
and
mov
pop
incb
lahf
arpl
or
push
and
popa
sub
in
add
dec
adc
pop
push
dec
enter
rolb
ds
cld
call
lea
flds
arpl
sub
outsb
xor
ja
enter
xchg
or
out
push
ljmp
push
xlat
test
movsb
push
popa
sbb
in
sbb
ds
add
jg
inc
aas
dec
cmpsb
bound
fldenv
jno
xchg
jb
or
cltd
ret
aad
mov
add
popa
pop
outsb
fwait
push
push
aaa
jge
jo
cmpb
in
dec
jns
repnz
xchg
sbb
push
gs
roll
jl
call
sbb
clc
stos
mov
int
xor
pusha
adc
fwait
inc
jmp
pushl
add
push
lret
fwait
jnp
pop
frstor
dec
sbb
mov
xchg
pop
jo
fldcw
push
cmp
lcall
imul
pop
lds
sub
mov
jg
pop
js
pop
adc
cs
test
mov
decl
out
adc
in
or
pop
push
stos
dec
jnp
adc
icebp
mov
jg
bound
mov
pop
sbb
lret
jecxz
aaa
add
fstpt
insb
jns
adc
mov
jmp
jg
sub
mov
mov
xchg
aas
push
mov
push
mov
xor
mov
cmp
mov
dec
repnz
mov
jmp
sbb
cmp
insb
leave
scas
mov
xor
ret
pop
cmpsl
or
ljmp
dec
insl
call
jo
aas
inc
outsb
mov
nop
mov
jg
cmc
jno
call
ljmp
int3
and
sbb
mov
loope
and
fistl
push
in
inc
icebp
mov
add
inc
mov
pushf
iret
adc
mov
adc
mov
lcall
cs
xor
push
sbbl
push
push
xor
adc
push
sar
ja
ret
stos
out
cmp
push
int
je
data16
das
rorb
mov
mov
push
mov
cmpl
ss
jmp
sub
psllw
cmp
ljmp
adc
lcall
iret
xchg
data16
jnp
push
fnstsw
sarb
push
fsubrs
adc
mov
pop
lret
cltd
jbe
fstpl
sbb
pop
std
lcall
test
push
cmp
inc
decb
or
xchg
ja
dec
fbstp
shlb
xchg
jl
xor
push
lret
fildl
inc
lret
ljmp
push
cli
and
idivb
dec
test
sub
push
dec
pushl
cmp
mov
cmpsb
dec
pop
lret
lcall
dec
insb
std
mov
adc
pop
push
sbb
stos
cmovg
lcall
repz
out
arpl
sarl
pop
imul
mov
insb
fwait
sbb
add
sbb
jmp
or
push
push
inc
popa
fisttpl
pop
lds
popa
inc
insb
xchg
pop
mov
std
mov
adc
or
add
sub
mov
jae
and
pop
dec
jns
imul
push
dec
fimull
and
lds
outsl
mov
mov
cmpsl
inc
lahf
pop
dec
mov
dec
add
ds
xor
out
push
inc
pop
xchg
rorb
clc
inc
ss
push
fmuls
jo
push
inc
xor
test
cli
incl
push
test
inc
icebp
dec
pop
add
sub
cmp
out
mov
fadds
cmpsb
pop
jg
mov
lret
stos
inc
stc
fs
call
add
loopne
adc
scas
xor
enter
push
mov
in
sub
shlb
xchg
arpl
cmp
mov
loope
and
adc
test
or
add
or
scas
xchg
mov
or
aas
sbb
aaa
aaa
in
adc
inc
scas
addr16
dec
decl
inc
repnz
loope
inc
dec
aad
cmp
or
fs
sbb
dec
sar
cs
loop
jbe
or
ds
es
cld
decl
clc
add
xchg
pop
mov
ror
es
mov
push
inc
pushf
decl
fisubs
push
clc
mov
pop
lret
fcmove
xchg
mov
lds
cld
fsubrs
cmp
cmp
jl
pop
xchg
xor
pop
ja
xchg
int3
push
push
stc
add
inc
push
xchg
sbb
das
dec
lods
aaa
roll
les
outsl
clc
fildl
sub
sub
lock
sbb
scas
jnp
clc
adc
cld
ljmp
jb
mov
add
out
dec
in
mov
and
adc
in
fs
ffreep
or
fs
arpl
lods
loop
dec
notl
ljmp
in
jae
outsb
and
cs
pop
dec
adc
ljmp
daa
dec
jl
push
ss
push
jmp
stc
daa
dec
lret
es
mov
repz
fdivl
dec
ljmp
dec
in
orb
ret
mov
push
or
mov
sub
ret
pop
xor
aaa
cltd
dec
loope
aam
push
scas
dec
push
inc
lahf
add
jmp
stos
xor
mov
push
dec
sbbl
in
sub
in
arpl
mov
add
jns
adc
pop
push
addr16
gs
push
je
fdivrp
mov
out
or
test
or
lds
repnz
movsl
rolb
push
das
and
gs
lahf
inc
clc
jmp
hlt
inc
push
cmpsl
mov
arpl
mov
lahf
test
sbb
inc
or
xchg
in
jle
cmp
xor
pushl
pop
jmp
iret
sbb
and
aaa
fwait
add
pop
addr16
fstpt
push
insl
sarl
jmp
out
or
cmp
imul
and
pop
xlat
push
jecxz
push
jno
cmp
rcrl
test
ret
ret
dec
pop
iret
sbb
fldt
sbb
gs
ret
es
aaa
insl
sti
cmp
jbe
lock
push
in
adc
call
gs
push
push
je
insl
sbb
or
inc
aam
push
mov
mov
sub
xchg
cli
ljmp
std
andl
and
mov
icebp
mov
lahf
fwait
daa
dec
pcmpgtb
call
jp
ficompl
addr16
outsb
mov
dec
jb
movsl
loopne
mov
hlt
and
or
in
add
cld
inc
adc
dec
imul
push
dec
into
mov
ss
into
and
push
nop
xchg
outsb
jg
pop
ds
push
dec
inc
mov
dec
popa
adcb
inc
xchg
mov
lcall
push
pop
jne
nop
out
addr16
das
shll
xor
inc
test
jo
das
mov
loope
sarl
cmp
push
mov
jae
hlt
insb
pop
mov
in
sti
mov
incb
mov
jnp
mov
dec
push
mov
jae
out
pop
in
into
mov
xchg
lret
push
fstl
inc
jnp
idivl
fiadds
inc
outsl
gs
lcall
jle
mov
loop
jle
vpmadcswd
iret
movsb
xor
pushf
mov
xor
ja
mov
cmpsl
test
mov
mov
xchg
add
in
int
and
xchg
test
call
fs
jmp
cwtl
repz
insb
or
daa
popf
jno
ds
sub
test
inc
inc
dec
push
add
adc
cli
mov
int3
or
add
xor
jbe
cmpb
dec
out
test
cld
jl
or
dec
mov
xor
in
movsl
or
pop
push
dec
push
mov
add
jb
xor
mov
call
cmp
test
adc
push
ja
stos
ds
add
add
es
dec
fsubl
loopne
je
js
das
push
cld
jg
cmp
adc
cld
and
jno
add
dec
xchg
sbb
lcall
ret
ss
dec
scas
imul
cmp
aaa
ret
ret
pop
sub
and
das
adc
aas
mov
stos
emms
push
shrb
push
push
out
lret
xor
adc
lcall
push
cltd
jmp
cmp
adc
jl
mov
repz
lahf
test
pusha
aaa
shll
cmp
rcll
add
lods
lcall
inc
pop
pop
lret
les
sahf
sbb
pop
cmc
add
add
lret
push
mov
enter
loopne
loop
cs
add
ljmp
pusha
out
push
scas
mov
cmp
int
ljmp
or
or
cmp
icebp
scas
cltd
shrb
fs
inc
cmpsl
xor
push
rolb
bound
fistl
ja
xchg
ds
sarb
and
mov
je
mov
mov
push
mov
jmp
inc
fstpl
lret
jno
lcall
push
push
cld
mov
sbb
xor
adc
mov
test
scas
jle
mov
push
dec
out
xchg
adc
rcrb
mov
inc
fistps
jmp
dec
loop
push
sbb
sahf
xor
sub
popa
ja
jno
scas
push
inc
out
incl
and
adc
stos
pop
icebp
call
or
jno
or
dec
mov
leave
sti
xor
adc
sbb
hlt
jl
out
les
xor
cli
in
clc
inc
in
add
out
bound
push
scas
add
push
mov
jne
cld
outsb
iret
dec
call
push
inc
cmpsl
cmpsl
jnp
ja
cmp
pop
ficomps
imul
std
xor
pop
pop
icebp
lret
fisubl
roll
and
xchg
sbb
sub
scas
pushl
sub
mov
jp
test
add
cs
into
add
xchg
movsl
test
icebp
cmp
jle
mov
inc
pusha
inc
dec
out
adc
pusha
push
xor
mov
jo
mov
fsubrl
in
sbb
daa
cltd
jae
dec
jns
mov
mov
arpl
jbe
dec
mov
pop
incl
daa
divl
ja
sub
das
add
das
mov
popa
inc
jns
inc
in
shl
inc
rcr
or
lret
push
cmp
push
int3
mov
data16
in
adc
jmp
out
and
loopne
pop
dec
xor
pop
ret
push
inc
push
mov
inc
xchg
push
out
jo
lret
pop
inc
sarl
xor
push
jb
movsb
or
dec
jp
out
daa
cmc
aaa
sar
inc
inc
dec
fstl
pusha
push
sti
and
insl
push
fcomps
jns
ret
lcall
jne
cmp
jbe
jp
cmp
jle
mov
dec
out
add
aaa
pop
into
mov
mov
les
ja
mov
lahf
sbb
add
xor
mov
jmp
xor
pusha
into
pop
push
mov
adc
mov
sarl
lds
or
mov
mov
je
inc
lret
sub
push
fwait
aas
mov
jb
dec
addr16
mov
sbb
movsb
xor
xor
xchg
inc
outsb
aaa
mov
fimull
call
jno
mov
repz
cmp
jg
xor
push
nop
pop
sbb
xchg
shl
stc
call
dec
inc
inc
jb
mov
into
outsl
ja
test
xchg
mov
test
xchg
rcrb
out
icebp
ljmp
hlt
cmp
out
sahf
add
sub
or
out
lahf
xor
sahf
jb
pop
das
jmp
mov
push
jl
adc
or
incl
into
xor
and
mov
insl
mov
ljmp
ljmp
fsubrp
dec
fmuls
outsl
mov
movsl
fwait
xor
pushl
mov
inc
lcall
scas
addr16
adc
cwtl
xor
out
mov
mov
sub
sub
mov
pop
xlat
mov
pop
les
arpl
sbb
mov
mov
xchg
dec
pushl
out
jo
decl
mov
mov
or
dec
fisttpll
push
je
sub
adc
outsl
fdivrs
stos
or
push
cmp
mov
pop
sahf
push
ljmp
xor
push
dec
dec
cmp
mov
mov
jmp
fsts
xchg
shrb
in
add
loopne
arpl
das
dec
dec
xor
ljmp
xor
stos
adc
mov
in
dec
ret
cmp
inc
int
push
repnz
rclb
cmp
dec
inc
cmp
int3
sahf
inc
cs
decl
lcall
lea
stos
sub
sub
and
ja
out
mov
filds
clc
mov
pushl
pop
sub
cs
repz
lcall
mov
and
fildll
aad
sub
push
cmpsb
xor
mov
add
jmp
xchg
sbb
dec
inc
sar
rorl
fldcw
push
dec
xor
mov
leave
mov
add
adc
xchg
push
xchg
insl
ret
adc
mov
mov
mov
push
out
cmpsl
mov
fimull
dec
out
pushl
push
sbb
push
jo
dec
cmc
xchg
adc
jno
insl
add
int
mov
into
lcall
cs
push
frstor
dec
into
adc
adc
int3
movsb
sti
adc
push
jmp
jl
add
loope
popf
out
pop
mov
push
ljmp
fiadds
xorb
cwtl
out
mov
inc
cmp
add
mov
andb
and
and
js
lds
addr16
loopw
decl
dec
push
rorb
test
mov
stos
decl
nop
ret
xor
into
popa
ret
adc
xor
sbb
jmp
sub
insl
xchg
sbb
and
test
imul
fnstenv
add
jbe
into
cwtl
sahf
mov
ret
mov
iret
insb
sbb
icebp
jmp
sbb
sbb
xchg
mov
dec
pop
pusha
repnz
xchg
inc
sbb
and
stc
pop
cld
das
cli
mov
fldenv
mov
ds
jb
lret
scas
jbe
insb
sti
outsl
clc
ljmp
push
test
aaa
mov
fsubrl
addl
call
sub
cmp
cld
add
jae
enter
mov
inc
stc
mov
in
xor
mov
cltd
fisttpl
mov
ja
push
out
ret
insl
sti
xchg
cmpsb
movsl
xchg
xchg
dec
enter
jle
cmp
adc
into
jle
sbbl
ljmp
xchg
out
add
test
enter
mov
xor
mov
lahf
or
popa
orb
mov
mov
hlt
fbld
inc
in
sub
lcall
adc
adc
mov
push
sbb
sub
lahf
pushl
stc
out
jno
push
mov
adc
push
les
jbe
and
aas
jnp
or
mov
jmp
jno
xor
out
xchg
dec
or
loope
fwait
adc
fwait
mov
mov
aas
sbb
sti
mov
ds
xor
jle
sbb
sub
les
decl
add
incb
cwtl
aas
outsl
call
filds
sarl
notb
mov
and
sbb
shrb
scas
adc
cmpsl
dec
outsb
pop
pop
push
pop
jbe
cmp
mov
adc
popa
insb
push
xchg
jle
adc
push
mov
or
and
cmp
push
loope
lcall
mov
cmp
push
fwait
push
push
jae
adc
in
xorl
lret
mov
adc
sbb
fisubl
je
sbb
mov
nop
mov
out
daa
inc
dec
jne
movsl
push
cmpsl
dec
jmp
cmp
loope
fildl
pop
ds
fsubrl
in
cmp
or
mov
incl
ds
adc
mov
push
inc
fwait
cmpsb
sar
enter
cmp
jnp
leave
clc
inc
test
into
xchg
dec
cwtl
stos
ja
int
decl
arpl
sub
push
push
ja
mov
push
inc
dec
arpl
push
sub
push
xchg
push
jle
xchg
insl
inc
mov
jo
dec
loope
lahf
jmp
pop
mov
or
sub
dec
mov
cmpsb
sbb
or
sbbb
arpl
sub
dec
jg
ror
adc
test
cmp
dec
dec
dec
mov
loopne
jg
into
sub
or
mov
outsb
in
mov
inc
lds
sti
into
mov
jmp
pop
cld
cwtl
and
lcall
mov
and
mov
sub
pop
ficoms
in
jno
xorb
loop
dec
mov
pop
testl
sbb
xchg
lahf
and
cltd
addl
dec
stos
imul
filds
test
rorb
pop
stos
iret
addr16
jp
mov
jecxz
pop
cmp
inc
daa
int3
and
iret
xchg
aas
jl
add
push
ret
aas
push
xorb
ja
out
aas
push
add
orb
or
fistpl
test
decl
stc
fwait
mov
and
cmp
cmp
inc
out
ja
incl
inc
ret
jno
xor
or
inc
dec
mov
insb
pop
mov
out
adc
ljmp
mov
xchg
xor
subl
pop
cmp
mov
jae
pop
out
mov
ja
add
adc
fstpl
dec
xor
dec
sub
sti
movsl
cmp
xchg
arpl
sub
inc
sbb
sbb
stos
xchg
cmp
xchg
bound
fstl
stos
pop
ljmp
mov
inc
in
jp
dec
mov
mov
add
push
incl
aas
dec
negb
sub
mov
ret
test
mov
mov
and
adc
popf
or
movhlps
sahf
aas
cld
jmp
in
ds
jno
mov
adc
adc
push
inc
call
xchg
arpl
mov
shlw
out
pop
fstps
xor
pop
in
or
sub
mov
adc
popa
test
in
je
jg
lock
jne
inc
mov
push
add
cmp
test
imul
push
dec
dec
lret
das
jmp
add
stc
lods
pop
mov
mov
addr16
dec
jbe
push
aas
cli
lds
cmp
jns
inc
int3
push
arpl
dec
fcomps
insb
out
sti
sbb
lcall
push
xchg
cli
push
push
dec
push
ss
and
das
outsl
sub
sbb
loopne
aaa
ss
daa
sub
fwait
inc
lret
sti
pop
fld
lcall
pop
ljmp
mov
inc
push
fildll
push
out
ret
shll
call
jb
push
cld
cs
jno
scas
mov
data16
lcall
and
add
pop
icebp
es
cltd
out
fwait
mov
js
insb
leave
inc
mov
cld
fwait
into
js
mov
push
aad
scas
mov
ljmp
add
add
sbbb
cs
push
into
sahf
push
call
ds
pop
loop
pop
rdmsr
xchg
nop
adc
dec
cmp
xor
cld
movsl
push
dec
js
push
push
jne
pushl
pop
insb
push
outsb
adc
pop
jne
push
es
add
leave
or
sarl
sbb
adc
mov
jg
fsubrp
cmp
inc
mov
dec
popa
push
pop
xor
or
std
outsl
sar
imul
pop
int3
rcll
xlat
movsl
push
dec
sbb
push
inc
pop
ja
push
inc
in
inc
sub
jns
aas
je
add
roll
dec
inc
orb
pop
lahf
mov
popa
out
clc
loope
push
ljmp
inc
orb
repz
mov
push
imul
xchg
inc
cld
lret
push
jecxz
push
fimuls
out
push
dec
fwait
dec
lea
jmp
loopne
into
repz
inc
rorl
push
jb
inc
push
xor
bound
or
lret
out
std
or
insb
loope
pop
neg
ljmp
mov
into
ret
jg
es
fsts
mov
pop
cld
mulps
int3
dec
mov
lock
call
into
push
lcall
sti
gs
test
jbe
cltd
dec
cmp
and
decl
push
inc
dec
jo
pop
bound
pushf
cmpsb
push
stc
mov
xor
fisttpll
decl
hlt
jmp
inc
lahf
mov
mov
jae
push
rcrb
jne
jo
incl
push
popf
cmp
pusha
pushf
icebp
push
inc
gs
addr16
inc
mov
out
xchg
push
or
mov
dec
pop
mov
lock
incl
arpl
cmp
cmp
sbb
mov
outsb
mov
lcall
or
in
or
loop
dec
je
push
fldt
push
jecxz
sar
add
es
add
es
pop
jbe
inc
jno
cltd
inc
lret
stos
mov
incl
jmp
mov
dec
adc
ret
fnsave
aaa
out
sbb
adc
inc
shrb
dec
mov
es
jae
pop
loop
mov
inc
imul
inc
ds
and
pop
dec
loop
mov
imul
out
adc
jmp
filds
je
cmp
out
gs
sbb
push
iret
cltd
xor
mov
dec
frstor
pop
into
and
xchg
pusha
shll
mov
add
mov
sbb
and
and
lock
imul
pop
rorb
pop
movsl
popa
dec
fistps
daa
lcall
ret
idiv
scas
clc
lcall
cmp
fwait
mov
xor
mov
sahf
jle
xor
jmp
adc
pusha
inc
mov
sub
inc
and
and
mov
lods
xchg
xor
data16
rolb
sbb
jo
mov
lcall
mov
inc
or
xchg
cltd
jns
aas
pop
fcoms
iret
call
movsl
add
or
and
stc
sub
dec
xchg
out
sbb
or
mov
insb
sti
mov
rcrb
cwtl
lea
cmpsb
cmpsl
cmpsb
popf
add
pop
into
inc
sbb
sub
and
cltd
jle
lret
incl
xor
adc
and
mov
scas
fmuls
add
push
shr
pop
pop
aaa
sub
ss
mov
aas
test
mov
xchg
push
or
shll
rorl
inc
pop
xor
sarb
cltd
dec
imul
dec
sub
dec
fidivrs
inc
icebp
movsbl
mov
daa
adc
jg
ret
xor
inc
mov
and
aam
push
xchg
mov
in
inc
push
inc
xchg
ljmp
addr16
jl
out
inc
fcomps
lcall
clc
mov
mov
lcall
mov
cld
mov
jbe
xor
pop
xchg
mov
aas
cmp
dec
ja
sar
dec
pop
push
jns
icebp
xchg
mov
xor
shll
mov
adc
call
imul
out
cld
ds
sub
sbb
mov
jg
cltd
pop
add
fnstsw
icebp
jne
cs
push
stos
xor
scas
ljmp
dec
sbb
inc
js
sbb
jmp
das
insb
pop
lret
add
sub
js
fiaddl
iret
xor
push
lds
dec
jg
fistps
incb
push
jmp
in
adc
cltd
xchg
call
jno
into
aam
jmp
jno
and
mov
mov
pop
jb
pop
push
ret
shrl
leave
pop
inc
leave
inc
fs
sub
or
fadds
dec
jne
adc
sbb
leave
or
stos
dec
lods
movsl
clc
mov
mov
adc
add
fidivl
push
in
fbstp
jbe
push
push
mov
shlb
add
out
add
and
push
ja
and
inc
das
add
lds
jl
push
xchg
mov
jle
jg
fidivl
je
xor
das
pop
cmp
mov
sub
stos
subl
inc
xor
repz
call
sbb
lret
fldl
ja
xor
ret
and
add
mov
arpl
int
and
icebp
sti
dec
xor
es
add
pop
pop
stc
sbb
inc
add
mov
out
pop
movsb
push
dec
mov
cmp
and
mov
fldcw
add
jbe
repnz
loopne
jmp
jp
sub
push
hlt
aaa
mov
loopne
add
pop
and
test
addr16
mov
gs
jns
sub
jns
pusha
pop
fistpl
pop
in
sarl
jnp
in
aas
je
enter
call
pop
aaa
adc
add
cltd
loopne
jae
mov
addl
je
es
popa
jno
adc
jg
pop
cltd
cmp
sub
xor
inc
jl
aas
mov
paddusb
mov
or
fcompl
dec
cmp
mov
and
push
xchg
sub
scas
ljmp
cmp
pop
dec
out
or
mov
xor
push
and
fwait
jbe
pop
sbb
sbb
std
sub
xchg
jecxz
jmp
outsl
mov
aad
mov
insl
push
adc
adc
sar
cld
push
lea
fwait
pop
sbb
ds
sbb
jno
add
rcrb
in
cld
xor
and
push
dec
cmp
push
jbe
rcll
sub
dec
mov
add
xchg
filds
or
pop
es
push
decl
sahf
js
mov
outsl
sti
xor
iret
and
fcomip
aaa
std
adc
aas
out
inc
int3
or
sahf
add
jl
outsl
cmp
pop
push
jmp
inc
pop
xor
ret
and
sub
pop
push
mov
sbbb
into
pop
outsl
out
xor
enter
add
into
ja
cmc
adc
push
dec
cli
mov
mov
decl
jge
xor
sbb
orb
jmpw
enter
arpl
mov
dec
dec
das
das
adc
clc
jg
fcompl
stc
lods
adc
incl
cmpb
cmpsb
addr16
jbe
loopne
dec
xor
add
fistpll
mov
pushl
xor
in
add
cmp
and
cld
cmpsw
push
pop
mov
pop
mov
and
mov
subb
mov
call
arpl
cmp
jle
lcall
out
mov
rcrb
jle
inc
roll
cmp
lods
xchg
shrb
jg
sub
cld
add
sub
call
jbe
into
sub
sbb
ds
or
add
jl
dec
push
movsb
cmpl
cmp
xor
pop
mov
fldenv
sbb
cmp
xor
mov
ljmp
or
mov
aaa
incb
mov
sarl
mov
enter
mov
mov
imulb
inc
add
ss
fdivs
and
lods
cmp
or
outsl
daa
aas
in
data16
pop
sbb
aam
xchg
push
jbe
sahf
dec
test
mov
push
fldenv
js
pop
xor
mov
fucomip
cmp
ljmp
bound
add
sbb
scas
push
incl
aad
pop
daa
shll
cs
jle
sub
xorl
xchg
mov
mov
push
mov
xor
push
pop
out
or
sbb
pop
jl
decl
inc
and
fistl
push
sahf
add
mov
jmp
lea
clc
sbb
popa
or
xor
jg
xchg
and
in
mov
push
jl
cmp
push
cld
decl
es
jns
loope
sbb
arpl
lock
sbb
mov
cmpsl
outsb
push
jg
stos
mov
pop
mov
sbb
and
stos
in
notl
sub
jb
dec
and
repz
loope
jne
adc
sahf
ret
pop
mov
or
dec
push
popa
call
mov
ljmp
cmpsb
in
addr16
sub
test
pop
addr16
jge
jle
imul
or
dec
pop
rcr
fimuls
pop
mov
test
mov
ss
fisubrs
xchg
mov
movsb
cmpsl
and
ljmp
pop
nop
mov
scas
mov
inc
mov
adcb
xchg
ja
decl
pop
gs
sub
inc
mov
mov
mov
jb
cmp
jmp
test
xor
mov
stos
mov
test
pop
sbb
mov
insb
pop
lea
stos
mov
mov
aaa
in
xchg
in
pop
inc
test
call
fstpt
cmpsb
inc
xchg
lods
testb
repnz
addr16
ljmp
add
add
inc
call
insl
add
test
jb
jbe
incl
outsl
ret
and
insb
sub
jg
mov
jae
mov
das
lret
inc
out
pop
shlb
mov
mov
push
jge
je
sub
imul
dec
data16
test
add
adc
jmp
lcall
ja
test
punpckhdq
xor
or
jecxz
imul
jmp
mov
dec
push
data16
xor
lret
lods
push
sub
dec
push
lock
les
add
adc
jno
dec
lret
cmpl
xchg
push
les
je
push
dec
out
mov
pop
mov
loope
loop
or
xchg
pop
movsl
repz
mov
ret
aam
pop
incl
push
xchg
rorl
push
out
adc
daa
out
push
jp
mov
dec
lock
ljmp
push
data16
outsl
xchg
mov
stos
push
loop
jg
data16
arpl
lcall
jns
jb
push
mov
jp
outsl
aam
pop
out
scas
cwtl
xchg
xchg
and
xchg
nop
mov
cmp
lcall
repnz
movsl
xor
je
mov
push
stos
mov
es
dec
push
cltd
mov
add
mov
addr16
cmpsb
orl
mov
cmpsl
lcall
mov
mov
xor
test
mov
inc
pop
jnp
mov
push
mov
mov
mov
mov
and
cltd
fdivs
dec
adc
repnz
arpl
jmp
mov
scas
inc
xor
jbe
gs
dec
mov
lcall
add
ss
aaa
pop
in
arpl
mov
lock
pushl
xchg
mov
mov
insb
dec
add
inc
sub
mov
inc
ret
fisttps
xor
mov
inc
dec
push
cli
sbbb
dec
jg
incl
adc
push
fwait
out
mov
dec
dec
frstor
out
inc
into
adc
ljmp
adc
sbbb
inc
sbb
in
pop
add
incl
scas
xlat
jo
aaa
pop
ficoms
jbe
out
dec
sbb
repz
or
les
adc
pop
and
xor
dec
mov
data16
inc
jbe
push
incb
inc
jp
cli
xorl
jge
or
addr16
mov
mov
sarl
add
xor
out
and
in
cmp
sahf
jp
ret
push
arpl
stos
cmp
jge
pop
jns
sub
sub
add
outsl
je
add
dec
mov
cli
or
adc
aaa
mov
adc
into
loopne
outsb
fisttpll
nop
push
inc
dec
frstor
incl
pop
or
jl
je
fstpl
inc
jg
adc
cmpb
roll
addb
adc
test
cmp
inc
pusha
mov
jmp
push
loopne
jae
jmp
inc
lahf
outsl
cmp
gs
test
ds
clc
mov
je
mov
xchg
scas
cmp
mov
sahf
dec
inc
adc
or
pushl
jo
call
mov
or
aas
push
dec
mov
lods
push
insl
movsl
inc
pop
mov
cmp
push
and
das
pop
lret
lret
in
pop
ja
sti
mov
les
fstps
sti
push
jnp
jg
test
dec
mov
sub
cs
aas
jl
je
iret
stc
scas
mov
stc
lods
enter
sub
inc
or
sub
lea
xor
aas
or
mov
aad
sub
mov
out
mov
push
pusha
mov
sub
sub
cmpsb
fistpll
ret
jecxz
repz
jle
mov
pushf
xchg
aaa
decl
loop
lds
out
mov
mov
or
and
lret
jl
lea
das
push
push
dec
stc
cmp
mov
inc
lret
dec
int3
mov
ss
fidivrs
imul
xchg
je
test
jne
cmpsb
push
test
call
ljmp
xchg
jmp
xor
sahf
fiadds
jae
dec
ret
into
mov
ja
xor
fsubrs
into
sub
orb
push
pop
ds
and
xchg
jo
mov
adc
jge
lock
icebp
clc
add
insb
mov
inc
je
cld
push
dec
fiadds
xlat
inc
decl
adc
repnz
xor
sub
sbb
mov
dec
adc
cli
insl
push
mov
int
jl
testb
xchg
mov
jge
sar
sbb
iret
fwait
xor
loopne
repz
lcall
cmp
clc
xchg
shlb
or
sub
pop
sub
outsb
ja
scas
leave
lahf
xchg
cs
or
jne
push
out
jmp
pop
add
mov
das
fmuls
dec
call
adc
aaa
mov
push
lds
jbe
iret
cmp
lods
aaa
adc
arpl
dec
in
inc
data16
insb
iret
lock
mov
push
loopne
sub
addr16
push
dec
pop
mov
arpl
pop
cli
jg
xchg
xor
dec
cwtl
push
fcmovnu
push
int3
pop
sub
dec
sar
jne
mov
std
cmp
mov
cmc
sahf
mov
push
cmp
mov
adc
mov
mov
enter
pop
inc
ljmp
mov
pushl
outsl
inc
add
and
push
jb
js
outsb
xor
or
decl
and
xor
cmp
and
mov
stc
xor
decl
adc
insl
jmp
and
in
mov
dec
std
mov
sub
inc
js
es
sti
add
or
pop
mov
fwait
or
shrb
pop
cmp
jo
sbb
adc
mov
add
ss
out
pop
inc
jo
jmp
adc
xchg
outsl
hlt
fucomp
jae
xchg
std
insb
icebp
fisubl
add
rorb
shll
sahf
fstpl
pop
dec
test
lahf
or
je
add
pop
mov
lods
mov
inc
sbb
das
lods
push
push
pop
xor
in
dec
pop
cmpsl
loop
loopne
mov
into
out
push
pop
inc
push
movsl
pop
imul
fdivl
cmp
mov
fdivrs
and
sbb
aas
test
pop
sbbb
addr16
orl
and
clc
push
xlat
and
push
int
cld
lds
out
addr16
out
out
mov
aad
in
sub
jg
xor
lods
jecxz
out
loope
arpl
mov
lahf
ds
popa
jno
mov
sar
aas
jle
arpl
packuswb
push
or
hlt
aas
ja
cmc
mov
mov
insb
lds
xor
jg
sar
ret
cmp
out
and
imul
out
subb
int3
shlb
dec
out
loope
out
call
enter
push
scas
ss
addl
shll
data16
cmpsb
dec
jge
int
push
ret
out
pop
dec
pop
sar
movsl
mov
cmp
movsl
test
std
inc
ret
clc
cmp
leave
xchg
out
ret
jl
fs
sbb
popa
cmpsl
fisubrs
bound
sti
push
pop
mov
das
je
loop
repnz
sbb
addr16
cmc
in
leave
popa
hlt
push
xlat
jge
sub
dec
mov
imul
or
mov
repnz
hlt
repz
jno
test
out
xchg
dec
enter
sbb
adc
ss
jns
xchg
inc
jmp
stos
mov
icebp
inc
mov
out
add
add
mov
push
xor
into
sbb
adc
push
jns
sbb
mov
jnp
fildll
call
lock
addr16
aas
inc
out
in
shrl
cmc
inc
push
mov
sbb
pop
mov
clc
add
pop
out
faddl
xchg
push
pop
push
jg
repnz
xchg
adc
out
popa
stc
push
mov
call
inc
pop
add
add
mov
aaa
and
or
dec
adc
lods
cmpsb
and
outsl
jb
jmp
xor
imull
div
ja
ds
or
add
std
addr16
into
sti
jecxz
scas
in
out
das
xor
mov
push
insb
popa
pusha
cmp
jg
jecxz
push
inc
sahf
js
fmuls
mov
sbb
cld
in
test
and
jno
enter
push
les
jns
add
push
jg
stc
ljmp
leave
dec
les
pop
std
out
insb
call
aad
icebp
mov
enter
repz
fmulp
pop
outsb
dec
push
lahf
iret
add
dec
dec
int
rcll
cmp
and
sub
dec
clc
add
push
test
ja
push
mov
sbb
cmp
and
and
popa
fsubrl
je
push
inc
jmp
mov
mov
punpckldq
xor
inc
dec
es
or
add
sbb
test
aas
mov
pop
stos
decl
call
push
xor
cs
mov
leave
push
xor
mov
lock
fistl
mov
add
push
addr16
fwait
ret
mov
es
push
mov
decl
hlt
add
push
mov
push
or
out
inc
push
sahf
jg
sar
push
clc
dec
xchg
sub
cmpsl
jae
lahf
lcall
push
ljmp
inc
push
test
lcall
movsb
decl
push
push
and
mov
jmp
pop
hlt
cmp
pop
mov
add
scas
dec
xor
xor
and
std
push
xchg
inc
loopne
in
adc
push
mov
into
mov
cmp
gs
mov
sub
jl
dec
enter
add
cltd
and
jmp
sahf
and
cmp
xchg
mov
cmc
push
inc
pop
push
cmpsl
adc
push
test
jge
outsb
push
aas
dec
out
mov
call
mov
inc
dec
decl
dec
xor
pop
jbe
jg
dec
xor
pusha
test
jmp
push
dec
dec
sbb
push
dec
or
inc
push
push
cmp
iret
bound
pop
outsb
mov
ljmp
adc
lods
out
push
and
sbb
add
cwtl
xlat
pop
das
scas
ret
lret
xorb
pop
add
jne
mov
call
arpl
add
xchg
inc
ljmp
mov
jecxz
arpl
rcrb
mov
sbb
xchg
jge
push
pusha
cmc
lcall
incl
ljmp
jnp
push
add
add
and
je
lret
xor
jg
lods
push
lock
or
pop
gs
sub
out
push
pop
mov
cmp
and
loop
jbe
mov
cs
inc
cmp
jmp
adc
cmp
stos
inc
inc
popa
shll
push
push
aam
pop
mov
pushw
ja
fwait
jo
leave
or
push
push
xor
icebp
scas
clc
mov
add
decl
and
sub
enter
icebp
sub
cmp
cmp
into
pop
outsb
inc
adc
out
out
sti
xor
scas
sbb
das
pusha
flds
scas
ds
cwtl
iret
loopne
scas
sbb
dec
cmpsb
loope
jae
jle
loop
push
das
rolb
mov
les
inc
add
lcall
pop
mov
xor
pop
insl
fiadds
xor
test
cli
ffree
decl
insl
cmp
add
push
inc
ss
push
jo
adc
outsl
out
shlb
dec
push
stc
in
jmp
xor
ret
decl
pop
jmp
and
mov
rol
inc
shr
sub
cmp
imul
mov
int3
or
das
clc
incl
inc
and
sub
push
test
es
arpl
xchg
in
add
or
decb
fimuls
out
pop
jl
popl
and
cmpsb
pop
sbb
and
add
stos
out
decl
mov
pop
lret
int3
outsb
inc
into
pop
std
add
pusha
jecxz
mov
insl
das
push
call
pop
nop
insl
clc
jbe
push
clc
xor
jle
jle
mov
imul
mov
sub
or
mov
inc
push
ljmp
xchg
ds
movsl
push
cmc
sbb
jl
xor
cmp
jg
aas
inc
xor
or
jae
push
mov
lahf
sbb
dec
cmc
dec
sbb
and
daa
je
ja
ljmp
fcoms
pushl
inc
dec
icebp
dec
fcoms
push
ljmp
mov
rsqrtps
pushf
and
pop
loopne
dec
jns
lods
mov
push
xchg
mov
xor
nop
outsb
cld
pop
addr16
sub
lods
xor
stc
fisttps
rcrb
push
push
mov
movsb
mov
cmc
xor
aaa
into
dec
sahf
jae
xchg
and
movb
into
xchg
or
jg
or
mov
iret
adc
xchg
std
ljmp
or
push
inc
jnp
test
lret
and
dec
dec
jmp
clc
aaa
bound
sbb
inc
or
incl
mov
and
xorb
push
mov
jmp
hlt
fcomip
es
pop
clc
cmp
addr16
xchg
add
sub
mov
sub
pop
mov
outsl
es
js
dec
jle
pop
push
pushf
and
jns
xor
ss
cwtl
mov
sbb
ficomps
incl
jns
ret
sbb
sti
cltd
push
mov
dec
mov
lahf
inc
arpl
inc
dec
andl
inc
push
shlb
lcall
sti
inc
loopne
pop
je
sbbl
xor
bound
stos
movsb
decl
fs
jmp
or
das
pop
sbb
ret
das
jno
sub
mov
inc
mov
jno
push
movsb
arpl
dec
push
sub
sbb
pop
loopne
stc
dec
mov
mov
mov
push
sbb
testb
shlb
dec
mov
sbb
es
loop
aas
std
cs
dec
scas
out
push
add
jle
push
dec
movsb
pop
js
sub
cmp
push
pop
adc
pop
push
imul
jg
inc
sbb
cmpsl
dec
or
cltd
in
clc
ljmp
sarb
jle
dec
sbb
movsl
cmp
dec
cmp
dec
inc
les
jg
stc
movsb
mov
pusha
inc
lods
dec
enter
sbb
pop
incb
pop
sbb
lods
inc
jbe
sarb
push
inc
fdivs
push
clc
mov
call
and
imul
mov
fwait
dec
dec
sub
dec
lods
loopne
jbe
mov
repz
jg
cmp
sbb
lds
push
jns
xchg
mov
pusha
lcall
mov
out
int3
sbb
xor
mov
stc
decl
notl
jno
pop
pop
pop
ret
js
daa
push
dec
mov
les
pop
incl
ja
push
test
dec
shrl
das
mov
into
xchg
or
xchg
pop
ljmp
lcall
adc
in
cld
adc
mov
ret
aaa
dec
jae
test
pop
jae
ljmp
xor
cmp
mov
adc
ss
stos
rclb
pop
or
insl
leave
mov
fisttps
pop
sbb
pushl
out
mov
inc
pop
xchg
push
inc
cld
leave
inc
movsb
call
rolb
add
outsb
scas
sbb
mov
adc
in
jle
out
aaa
jb
outsb
ljmp
int3
nop
dec
std
mov
insb
lahf
mov
jb
add
dec
inc
je
cwtl
cmpsl
out
icebp
dec
xchg
hlt
xchg
test
test
jnp
stc
mov
xchg
dec
jg
mov
mov
mov
into
sub
call
jl
cmc
aaa
cld
jge
dec
sti
xor
jl
push
imul
sar
sti
das
pop
sbbb
inc
xchg
mov
adc
inc
out
push
cmp
mov
dec
cmp
hlt
mov
enter
dec
lcall
sub
push
sub
xor
dec
scas
xor
decl
push
add
dec
cmp
out
xchg
loope,pt
jg
inc
add
xor
scas
imul
lods
inc
push
clc
decl
push
insb
push
dec
lds
mov
sub
xor
adc
xchg
stos
jmp
jg
lods
gs
sbb
out
imul
lcall
shlb
gs
in
addr16
aas
push
mov
gs
incl
pushl
ds
fidivs
push
mov
out
pop
fistpll
je
ret
cmp
sub
mov
push
pop
lods
sub
hlt
int
mov
insb
call
cmp
add
shlb
jge
movsl
push
into
aas
aas
xchg
sarb
and
push
into
test
rolb
dec
adc
data16
nop
jecxz
out
gs
mov
and
pop
jns
ds
lods
mov
lcall
cltd
add
icebp
inc
push
lds
adc
mov
ljmp
inc
gs
fimuls
jbe
add
sub
mov
call
lds
push
repz
fs
xor
jg
shll
jg
or
mov
inc
inc
mov
ljmp
fcompl
mov
clc
pop
or
mov
xchg
scas
iret
or
shlb
pop
lea
mov
movsb
pop
incb
and
decl
adcl
cmp
lret
push
push
xor
ja
lcall
pop
fildl
insb
ljmp
push
out
sbb
fs
cmovns
ja
adc
call
cld
mov
outsl
push
pop
loop
or
cs
cltd
and
mov
pushl
push
sub
push
cmp
jne
add
flds
incl
lret
xor
jns
inc
hlt
cld
incl
mov
push
xchg
js
xor
inc
mov
and
shrl
scas
jmp
mov
popa
jbe
mov
mov
dec
int3
and
adc
cmp
cmp
add
mov
mov
outsb
mov
jg
outsb
xrelease
inc
in
or
call
cmpsl
xchg
xchg
xchg
out
or
push
out
fs
cmp
jg
cmc
mov
gs
test
sub
scas
jl
lock
stos
dec
ss
in
push
stos
mov
push
decl
imul
xchg
sarb
fnstsw
shlb
in
and
push
popa
cmp
push
mov
push
out
push
fidivrs
dec
in
clc
inc
mov
pop
clc
inc
pop
test
mov
in
and
xorb
mov
mov
adc
inc
outsl
cmpsb
or
out
or
rcrl
adc
xchg
je
mov
mov
cmc
std
sbb
test
push
insl
fwait
stos
mov
xchg
in
cmp
jne
cmp
push
insb
in
packuswb
sbbl
jle
dec
or
arpl
push
incb
sar
call
push
imul
cmp
and
scas
setae
lret
pop
pop
je
inc
data16
fnstcw
je
loop
sbb
test
div
add
push
ja
sbb
call
push
push
fs
fimuls
pop
call
pop
hlt
incl
push
dec
ss
mov
adc
jp
pop
pop
rcrb
imul
fwait
mov
sbb
icebp
xchg
lcall
lock
mov
push
and
jmp
ja
add
mov
jae
lahf
xchg
scas
addb
or
std
outsl
mov
pop
test
sub
test
cmp
cld
popf
hlt
xchg
aaa
dec
in
pop
jne
cmpsl
fwait
dec
push
movsb
or
xorb
mov
mov
cmpsl
in
and
pop
ds
cmp
adc
pop
dec
mov
sub
pushf
jge
pop
jg
cli
inc
pop
pop
lret
push
and
push
adcl
icebp
filds
ljmp
addr16
aas
sbb
cmp
mov
mov
dec
data16
push
push
fildll
pop
sbb
inc
pop
cmp
jno
popa
lea
cld
mov
loop
and
push
and
shll
or
enter
fists
push
into
mov
jbe
pusha
and
jle
pop
in
dec
add
lret
lds
into
xchg
icebp
push
jle
adc
cld
out
push
jl
dec
and
cmp
sti
jg
cwtl
bound
cwtl
mov
mov
int
add
test
ja
mov
dec
adc
mov
pop
andl
aad
mov
inc
add
mov
aad
jp
cwtl
pop
xchg
dec
ja
cmp
mov
cli
adc
andb
mov
pop
fistl
popa
push
pop
test
ret
aad
mov
xor
cmp
mov
ljmp
xchg
ret
mov
decl
popf
ds
inc
cltd
xchg
xchg
sahf
stos
and
into
gs
jnp
jmp
push
or
push
repnz
jmp
add
dec
icebp
push
iret
add
call
jbe
mov
mov
js
dec
lret
sbb
inc
jmp
dec
lods
cmpsb
movsl
pop
les
outsb
addr16
les
out
sbb
cmpsl
dec
rcrb
ret
cmp
mov
push
push
push
stc
jle
and
jno
jle
subb
fs
mov
imul
push
jbe
lret
andl
mov
fidivs
pop
mov
cwtl
mov
insb
fnstenv
jo
call
call
push
push
fmuls
jbe
out
stos
sbb
and
jae
ljmp
mov
dec
add
loopne
pop
pop
gs
push
cmp
pop
cmpsb
testb
repnz
int3
mov
and
xor
push
pop
repz
push
cld
int
xor
sbb
jbe
mov
fdivr
inc
ja
out
in
dec
mov
int
lea
push
shr
dec
or
std
jmp
or
test
inc
push
fbld
cmp
in
xlat
pop
arpl
stos
push
jecxz
push
div
adc
mov
pop
jbe
or
mov
jno
sahf
jo
stc
mov
jmp
push
fbld
int3
inc
insl
test
mov
dec
jnp
xor
mov
pop
scas
in
or
rcrb
idivb
out
pop
icebp
incl
add
cmpsb
aaa
out
stos
mov
inc
lret
jb
xor
js
incl
jb
push
cmpsl
xor
jno
faddl
out
enter
and
sub
scas
les
sub
ljmp
das
in
mov
sbb
cld
sbb
jbe
add
out
ds
pop
jnp
cld
ja
mov
and
push
scas
push
mov
cmpsb
lock
jmp
xchg
in
sbb
inc
sub
js
and
icebp
scas
push
test
sbb
mov
bound
idivl
aaa
ret
sbb
adc
jae
mov
das
into
decl
ds
adc
mov
dec
cmpsl
clc
adc
clc
decl
or
push
in
add
movsl
and
out
xchg
out
test
call
inc
sub
mov
mov
mov
adc
add
in
jg
into
jecxz
xor
jnp
jne
add
mov
mov
rorl
loop
hlt
xor
and
test
xchg
aaa
push
xor
arpl
lock
and
clc
arpl
into
push
pop
test
pop
es
aam
mov
inc
in
sbb
scas
add
inc
scas
in
xor
mov
decl
lret
pop
aaa
movsb
sti
cmp
test
pop
fsubl
push
sub
sub
ljmp
mov
nop
xchg
sahf
jbe
xor
sub
jmp
out
sbb
push
clc
sbb
push
loop
adc
jg
call
sahf
mov
lret
xor
inc
push
decb
pop
test
test
mov
mov
bnd
push
adc
fwait
sbb
jmp
jnp
push
xorl
cmpb
and
loope
xor
mov
in
dec
mov
adc
aaa
std
xchg
push
ja
adc
mov
mov
and
pop
push
pop
aas
rcr
imul
stc
push
mov
inc
add
dec
mov
dec
imul
mov
adc
leave
mov
xchg
jbe
repnz
sub
hlt
dec
dec
inc
push
aad
mov
jp
sub
adc
xor
cwtl
out
mov
fistps
inc
sysenter
mov
xchg
mov
test
ds
xor
jg
call
dec
mov
adc
xchg
add
push
lods
jge
dec
inc
bound
sbb
gs
cmpsl
add
mov
inc
push
inc
movsl
sub
mov
test
out
in
gs
iret
pop
jge
jg
cwtl
fmuls
enter
mov
add
fstps
inc
push
outsl
and
imul
xchg
lds
ds
sub
adc
cmc
cwtl
sub
push
stos
add
iret
leave
push
mov
subl
and
inc
jo
sar
clc
dec
sub
fstpt
jp
dec
mov
jg
outsb
repz
ja
and
arpl
cwtl
add
push
into
add
mov
mov
pop
fildll
pop
out
push
imul
pop
sbb
mov
stos
dec
jle
add
scas
cmpsb
jnp
mov
jg
adc
ds
loop
cmp
adc
cwtl
pop
jnp
insl
std
mov
or
xor
pop
sub
nop
xor
dec
cmpsb
push
jns
lods
insl
mov
inc
pop
adc
ss
test
das
mov
or
loope
aaa
cld
jmp
jbe
mov
push
sbb
mov
fists
outsl
and
lahf
lahf
mov
mov
inc
insl
insb
in
sbb
mov
out
mov
stos
mov
mulb
pop
jbe
mov
popa
xchg
dec
mov
shrb
ja
dec
xchg
sbb
mov
enter
mov
js
pop
jo
sbbb
out
add
pushl
cmp
adc
sbbl
mov
jo
orb
ds
lcall
pop
xor
mov
sub
fldt
nop
mov
decl
lcall
pushf
cmp
add
jns
jle
ds
xchg
mov
sbb
xchg
dec
inc
push
data16
pop
sbb
setle
mov
push
jg
inc
cmp
cmovns
push
add
adc
decl
jmp
inc
dec
rorl
jle
mov
pusha
popf
push
jbe
mov
push
jmp
jmp
out
dec
xor
push
inc
stos
cmc
dec
or
ljmp
sbb
sbb
out
and
mov
std
pushf
rorb
mov
cmp
jp
jp
push
cwtl
add
jg
pop
arpl
or
adc
sbb
push
pop
into
sahf
addb
pop
xor
daa
bound
sub
inc
jg
cld
jmp
mov
ss
sahf
and
out
outsl
push
mov
pop
lcall
lcall
rcrl
push
mov
adc
ds
adc
cld
jmp
sti
or
jge
out
arpl
push
mov
rorb
xchg
xor
cmp
mov
pop
and
mov
jnp
into
mov
fldcw
test
jbe
incl
pop
gs
pop
aad
dec
ja
sbb
mov
push
ljmp
shrb
mov
out
xchg
jo
loop
dec
int3
scas
jp
push
call
cld
jmp
sub
stos
jnp
or
push
stos
cmp
test
push
pushf
push
push
inc
das
xchg
adc
mov
adc
adc
lods
sbb
xchg
xor
icebp
ljmp
adc
lahf
xor
cmpsl
fwait
mov
mov
mov
jp
cmp
mov
ds
ret
pushf
call
pop
and
cltd
pusha
cmp
mov
fwait
aas
call
decl
push
or
mov
dec
addl
pop
inc
mov
int3
decl
jae
int3
or
aas
add
dec
push
jecxz
mov
test
pop
inc
cmp
das
out
in
fisubl
in
inc
jg
ljmp
movsb
cli
cltd
aas
out
shrb
insb
test
mov
jl
and
inc
shlb
test
ret
popa
jb
outsl
leave
ret
jbe
push
loopne
notl
jbe
into
xchg
or
das
push
jo
rol
xchg
sub
cltd
push
mov
mov
adc
jb
inc
sahf
call
cld
daa
frstor
leave
mov
leave
test
xor
push
sbb
hlt
xchg
cmp
cmpl
pop
jne
es
dec
push
pop
mov
aas
fwait
bnd
mov
adc
ljmp
movb
or
ret
lods
mov
insb
es
ficomps
fbstp
stos
lods
dec
loopne
insl
mov
std
loop
scas
lods
cwtl
rep
inc
inc
mov
mov
shl
lcall
xchg
xchg
out
xchg
mov
adcb
mov
mov
cmc
std
jmp
out
mov
ret
test
lods
add
mov
lea
out
and
ljmp
sti
test
xchg
icebp
ljmp
std
pushl
inc
dec
test
jnp
test
call
mov
es
and
mov
scas
jbe
inc
jb
mov
mov
cwtl
lods
lods
cs
pop
jg
data16
into
adcb
pop
add
jmp
inc
pop
out
dec
ja
mov
gs
adc
inc
scas
cs
jg
adc
inc
xchg
pushf
jo
testb
mov
jno
inc
pop
fisttpll
mov
lea
decl
lcall
cwtl
inc
dec
inc
ss
lcall
arpl
jl
inc
add
rep
mov
pop
mov
sbb
mov
lret
lods
push
jmp
jmp
outsl
xchg
add
aas
push
cmp
push
sub
mov
das
test
scas
cmpsb
sbb
sbb
and
jne
inc
imul
cli
call
inc
pop
in
push
inc
mov
cwtl
int3
add
xchg
inc
into
dec
jp
pushl
je
testb
cmpsb
in
lock
pop
mov
enter
bound
jbe
es
insl
adc
adc
add
inc
les
push
jl
shr
mov
ss
dec
dec
lcall
pop
add
xor
push
and
mov
lcall
incl
xor
inc
pop
lret
outsb
sub
pop
shrl
dec
pushl
push
ret
cld
jns
imull
jae
dec
cli
mov
into
arpl
and
cmpsl
xor
mov
pop
cltd
ljmp
push
dec
xchg
imul
cmp
mov
loop
jae
push
push
std
dec
inc
pop
adc
clc
pop
inc
push
je
jl
lcall
sub
push
mov
inc
jb
movsb
sbb
pushf
push
es
ds
addb
add
or
adc
data16
xor
cmp
stos
sbb
xchg
bound
pusha
pop
mov
adc
mov
dec
inc
mov
jg
sub
arpl
movzbl
push
lret
test
and
cmp
jbe
mov
in
popf
jo
pop
push
popf
jmp
pop
mov
and
insb
or
hlt
cmc
dec
sub
mov
rcll
xchg
std
add
jnp
push
push
cli
adc
dec
dec
pop
xlat
jbe
je
mov
dec
jg
lcall
cmp
call
in
dec
cli
push
dec
mov
cmpsl
test
adc
cld
sbb
dec
push
xor
xorb
sahf
scas
lds
stos
dec
mov
ret
rcrl
add
adc
decl
mov
mov
mov
dec
and
push
mov
xor
jo
mov
mov
int
pop
push
add
movb
adc
xlat
inc
jg
out
int3
push
and
mov
mov
pusha
jg
cmpsl
shrd
lds
pushaw
ljmp
mov
nop
adc
lcall
xchg
out
sbb
adc
add
sub
stos
ret
sbb
incl
xchg
ss
mov
mov
lods
sti
aaa
mov
inc
cmp
cmpsl
xor
inc
dec
popl
imul
js
adc
adcl
mov
andl
addr16
insl
outsb
jno
dec
incb
jno
push
dec
pop
in
fmull
in
gs
je
inc
rcll
sub
jb
sbb
push
ja
jecxz
mov
outsl
pop
add
push
ret
insb
sahf
xor
add
or
ljmp
or
push
fadds
push
jno
ret
bound
scas
jbe
cmp
rcl
inc
inc
jno
or
mov
es
rcrl
ljmp
loop
mov
mov
inc
dec
mov
cmp
call
xchg
jge
hlt
imul
inc
inc
fs
inc
scas
mov
sahf
hlt
mov
or
loop
xchg
jbe
loope
scas
mov
repz
int
orb
loope
stos
pop
sub
inc
jmp
ja
jg
cmp
add
outsb
ja
pop
dec
cltd
push
je
push
aas
inc
or
jl
into
gs
inc
insl
push
ja
inc
insb
and
pusha
cmpsl
sbb
jne
adc
inc
jge
mov
push
jb
push
pop
sbb
rcrl
cmc
inc
inc
stos
cmpsb
das
shll
mov
mov
cmp
mov
mov
pushf
bound
push
xor
or
incl
aaa
stos
jnp
sub
outsl
sub
and
arpl
iret
lods
jle
ljmp
push
push
notb
mov
pop
mov
cmpsl
insb
xchg
mov
das
xor
incl
mov
xchg
push
into
cmpsl
push
xor
incl
rcrl
fs
out
pop
mov
mov
mov
ret
cltd
mov
lret
or
scas
pushl
xchg
pop
and
dec
in
mov
inc
pop
ljmp
add
jae
aam
popa
ja
rorb
push
mov
sti
jg
dec
dec
xor
js
jb
cmp
push
fsubl
push
xor
outsb
ljmp
sar
in
insl
pushw
js
clc
push
in
mov
sub
dec
dec
sbb
or
cmpsb
icebp
and
cwtl
gs
jl
aaa
std
incl
push
mov
lcall
cmc
gs
inc
or
or
fidivl
lcall
mov
pusha
dec
imul
pop
test
out
jae
push
addb
ljmp
mov
sbb
sti
xchg
jns
jae
inc
popf
adcl
cmp
cld
push
clc
xchg
outsb
fisubrs
hlt
jg
jmp
cmp
inc
inc
xor
cwtl
xor
shlb
decl
xchg
aad
add
mov
lcall
iret
outsl
addr16
mov
pop
shrb
pushl
insl
sbb
mov
mov
popa
push
iret
mov
mov
cli
mov
jbe
lds
xor
sbb
cmp
sub
lcall
out
adcb
pusha
push
insb
and
and
mov
ljmp
js
jecxz
pop
pop
mov
mov
outsl
inc
pop
je
push
fidivl
test
lods
and
push
cltd
jp
inc
and
cmpsl
or
das
insb
mov
cmp
xchg
dec
ljmp
or
scas
shlb
movb
and
mov
mov
fwait
int3
mov
jbe
inc
dec
es
xchg
adc
int
aas
dec
mov
adc
and
outsb
daa
testb
out
aaa
adc
je
push
jbe
pop
xchg
cmpb
mov
xchg
mov
or
cmp
call
arpl
mov
xchg
mov
mov
mov
fmuls
jbe
or
decl
xchg
pop
in
test
fisubl
mov
push
fs
jg
pop
cli
add
cli
adc
es
into
jnp
call
out
inc
adc
mov
out
jg
insl
or
jmp
gs
push
and
push
inc
xchg
inc
and
pop
ljmp
jp
cwtl
dec
dec
andb
xorl
roll
xorb
inc
out
push
dec
adc
xor
cmp
lcall
xchg
pop
or
mov
xchg
mov
mov
ret
call
adc
stc
and
sub
rolb
in
pop
out
pop
ljmp
sti
push
jb
sahf
lds
jns
mov
or
lds
cmp
inc
pop
fimuls
pop
jp,pn
or
scas
ror
outsl
and
jmp
insb
adcb
adc
adc
jno
or
jae
incl
popf
mov
xchg
add
dec
cs
fisttpl
dec
loop
mov
cmp
sti
xor
ret
xor
in
xchg
decl
fistl
jle
fildll
out
or
inc
imul
out
das
xchg
cmpb
jbe
or
mov
mov
mov
add
cmpsb
add
cld
lods
push
scas
xor
shlb
ret
push
popa
dec
add
dec
decl
test
out
in
mov
or
lods
mov
faddl
cmpsb
or
jmp
es
and
jp
imul
movsb
sahf
dec
notl
pop
nop
jbe
push
push
adc
and
sbb
in
or
outsl
fdivr
lcall
les
pop
loop
out
cmp
fistpl
fcoml
pop
mov
jge
xor
dec
call
loope
push
mov
dec
sub
jbe
pop
dec
icebp
adc
enter
cmpb
sbb
js,pt
sub
xor
out
jl
dec
jecxz
lcall
out
mov
sbb
fiaddl
push
stos
clc
outsb
lcall
inc
mov
xlat
int
scas
cmpl
pop
scas
pop
jle
jle
enter
inc
fisubrs
cltd
into
add
or
into
out
mov
int3
aam
mov
ljmp
lds
xor
xchg
lea
ret
xchg
incl
outsl
out
push
dec
push
push
xlat
mov
shrl
inc
pop
fnsave
call
out
jno
or
push
outsb
and
jo
or
and
dec
dec
dec
fisttpl
lcall
cmc
jp
jp
scas
lret
push
pop
insb
loopne
inc
dec
jl
xor
jle
outsl
jmp
shl
shrb
inc
fsubs
pusha
out
fdiv
xchg
es
xor
push
movsb
jnp
cs
or
das
shlb
repz
add
or
pop
jns
sahf
enter
cmc
pusha
jb
bound
push
or
js
jae
inc
mov
inc
ret
outsb
gs
clc
call
das
xchg
lret
pop
push
insb
popf
and
call
popf
out
pop
pop
sub
mov
dec
arpl
dec
dec
dec
pop
cmp
scas
xchg
add
xlat
int3
outsl
dec
arpl
xchg
lcall
loopne
jns
pop
stc
pop
test
push
ja
xor
mov
jg
addb
loopne
out
jb
pop
adc
push
sahf
adc
nop
inc
sbb
pop
hlt
or
in
inc
dec
pop
xor
push
jecxz
call
jg
cmp
test
push
push
pop
push
repz
out
in
ljmp
pushl
dec
aam
inc
inc
and
jnp
insl
lea
xchg
pop
daa
iret
dec
dec
repz
lods
sbb
jmp
addr16
inc
or
push
pop
dec
cmp
je
adc
xchg
cmp
pop
mov
mov
insl
push
inc
cwtl
gs
mov
pushf
loop
fisubrs
bound
decl
jle
or
pop
rcll
sahf
push
and
lcall
inc
inc
repnz
cmp
jle
xchg
inc
push
xchg
out
imul
adcb
arpl
incl
inc
ret
add
jb
dec
repz
gs
imul
adc
cld
mov
out
sub
pop
lcall
jbe
in
fbld
jno
repz
pop
jmp
fwait
mov
push
dec
xor
pop
test
and
movsl
or
cld
incl
pop
and
das
scas
test
xchg
jmp
call
add
mov
mov
inc
lock
outsb
sahf
mov
inc
inc
arpl
in
or
lret
in
add
inc
mov
ret
ljmp
xor
fadds
popa
in
addr16
xor
jmp
push
pop
mov
out
les
jg
sub
leave
mov
dec
fildl
nopl
xor
dec
ljmp
xorl
or
scas
mov
test
outsb
mov
in
push
decl
jns
in
inc
lret
and
inc
cmpsl
mov
mov
xchg
mov
jae
mov
flds
mov
mov
fcomi
test
js
xor
or
or
mov
cli
call
push
insb
insl
dec
insb
mov
dec
inc
push
lds
xchg
mov
xchg
out
cwtl
rorl
jl
dec
push
js
into
sub
js
push
enter
mov
pop
xchg
cltd
ret
add
nop
mov
xchg
inc
adc
lcall
test
mov
sbb
je
xchg
notb
cltd
jl
dec
loop
jno
sub
or
adc
and
lcall
pusha
sbb
xor
pop
ja
xchg
stos
sarl
jo
in
sar
inc
outsl
add
int3
sub
ja
aad
inc
mov
call
gs
jo
lret
out
sbb
into
cmp
in
js
push
ja
decl
push
cli
sbb
xor
sub
daa
in
sub
out
cmp
and
mov
sbb
adc
ljmp
jne
xor
mov
fwait
loopne
std
mov
and
lcall
into
or
es
xchg
mov
pop
icebp
and
adc
clc
inc
repnz
jae
aas
into
shlb
lds
push
stc
push
sarb
inc
stos
xchg
cmp
cmp
clc
and
in
test
cs
jno
mov
cmpl
jg
stos
scas
cs
jp
sbb
jae
add
ljmp
scas
mov
cld
jmp
ret
cmp
sub
dec
das
addr16
lcall
sar
inc
and
in
dec
ds
inc
cmp
and
cmp
cmc
dec
push
rcrl
stos
mov
mov
xor
insl
add
ret
cmp
push
xchg
and
inc
mov
ljmp
push
push
dec
imul
sbb
sbb
cmp
adc
cmp
fidivrl
popa
enter
cmp
je
in
mov
dec
or
push
call
xchg
cmp
lcall
in
ss
fidivrs
pop
ljmp
ds
jbe
push
dec
lahf
sub
call
stos
and
mulps
jbe
test
xchg
stos
les
sub
add
test
adc
add
ja
sub
mov
adc
shr
add
adc
lret
push
mulb
jmp
adc
or
mov
cs
xchg
fcomps
stos
jns
fisubs
jae
cs
fwait
sub
cmp
aad
je
sbb
test
scas
cli
frstor
cmpsl
cmpsl
test
mov
ds
out
xchg
nop
test
sbb
mov
cmpsl
shrl
stos
icebp
pop
lahf
lret
imul
cs
call
std
jecxz
add
jns
fwait
dec
cld
sbb
push
xchg
xor
cli
jnp
filds
out
adc
int3
pop
bound
mov
xchg
jge
ds
lock
inc
fnstsw
lcall
hlt
push
stos
cmp
sub
add
in
add
adc
pop
in
incl
loope
inc
dec
jo
pop
out
xchg
jb
cmp
ja
pop
xorl
cld
insb
rclb
inc
lcall
mov
dec
inc
mov
pop
mov
or
addr16
pushl
std
mov
mov
jo
bnd
xor
gs
mov
jmp
mov
out
aas
fisubl
fs
cmpb
cmc
adc
xchg
clc
jg
jle
add
mov
cltd
outsl
test
imul
enter
outsl
mov
xchg
add
cld
lcall
sbb
xor
dec
xchg
stc
out
cmp
decl
outsb
add
pusha
mov
mov
leave
sbb
lcall
xchg
cld
mov
xchg
push
shll
or
jp
lret
add
xchg
ds
pop
shlb
das
push
shrl
mov
ja
add
scas
data16
cmp
jo
add
and
stos
out
fs
mov
incl
jecxz
sbb
xchg
loope
in
mov
std
and
push
adc
inc
out
sub
insl
stc
daa
scas
sub
dec
out
ret
outsl
push
out
cmp
cmp
inc
ret
fnstsw
dec
or
repz
decl
loopne
sahf
out
or
jge
sub
adc
adc
and
jmp
gs
inc
adc
rorb
bound
add
mov
mov
sti
sub
push
jae
xor
negl
push
or
in
popf
mov
push
cld
mov
dec
enter
incl
int
addb
inc
inc
and
roll
outsb
loope
jle
pushf
mov
mov
fsqrt
scas
out
hlt
fldl
lods
lock
orl
dec
rorb
push
mov
lock
ljmp
icebp
sbb
and
in
aas
inc
movsb
rolb
mov
repnz
das
lods
clc
ret
scas
add
jno
pop
push
rorl
cwtl
jp
subl
add
push
dec
pop
push
add
or
cmp
fwait
lcall
lock
outsb
and
and
out
and
in
decl
mov
and
push
jbe
and
jg
and
or
stc
das
mov
ss
adc
int3
adc
cmc
loopne
out
data16
lret
sub
dec
cmp
and
push
cmp
test
inc
add
shlb
xor
enter
or
inc
sbb
push
xor
clc
dec
mov
movsb
push
ficoms
push
mov
push
push
test
arpl
addl
decl
outsl
loopne
pop
push
test
or
push
or
inc
push
in
mov
lock
sbb
adc
scas
mov
push
les
shrl
pop
mov
rclb
or
nop
lock
push
jae
sahf
sbb
inc
shrl
incl
adc
aas
lahf
cli
mov
lret
pop
xor
push
into
mov
add
add
lahf
gs
jg
mov
stc
push
inc
sti
xor
push
jl
xchg
add
cmp
incl
cltd
fistpll
adc
in
sbb
adc
das
andb
outsb
das
xchg
mov
adc
aad
jmp
adc
push
int3
mov
call
jo
sub
jg
incb
jg
dec
xor
sbb
mov
inc
jg
out
and
enter
adc
inc
shlb
add
pop
dec
jmp
mov
inc
les
outsl
addr16
pusha
imul
xchg
mov
cld
jmp
mov
sub
cmpb
xchg
sahf
js
pop
jg
incl
xchg
test
cmp
mov
addl
pop
mov
sbb
test
push
mov
add
jp
ds
lret
je
xor
pushf
mov
ds
lcall
cmp
cmp
test
mov
pop
adcb
in
sahf
shll
jmp
adc
aas
ds
sti
dec
mov
push
stc
outsl
out
jmp
xor
sbb
and
cli
mov
cmpsl
ljmp
outsl
inc
cwtl
ret
pushl
inc
adc
dec
movsb
call
lret
sbb
jb
stos
rcrb
aas
mov
pop
mov
lcall
or
cmpsl
mov
test
ljmp
mov
sbb
sub
leave
loop
decl
into
sub
cli
pop
push
int3
pusha
push
shlb
pop
push
fs
movsl
rcrb
and
mov
bound
cmp
add
das
and
cmp
jg
popl
inc
outsb
fcomip
jmp
mov
add
pushf
dec
xor
add
aad
cmp
mov
jmp
addl
lret
mov
adc
test
incl
decb
cmp
mov
push
xor
mov
mov
push
or
lods
sbb
adc
and
lods
nop
ret
cli
call
in
sbb
mov
lods
dec
adc
sahf
cmp
mov
mov
sbb
nop
mov
and
jg
inc
sbb
inc
lret
mov
sub
jle
out
adc
push
dec
lcall
repnz
pop
push
and
xchg
addr16
jb
call
push
dec
rorb
loopne
and
stos
add
lret
xchg
jne
incl
insl
dec
nop
adc
xchg
aam
mov
inc
mov
es
gs
shrl
jmp
gs
mov
dec
clc
or
jge
xchg
inc
stc
sbb
jl
decl
pop
inc
xchg
push
inc
dec
int3
mov
dec
inc
pop
sbb
pop
leave
aaa
std
fwait
jmp
inc
jo
push
test
push
sbb
sahf
testb
mov
pushl
insl
jnp
lds
adcb
adc
fs
mov
mov
jns
pushf
inc
and
int
adc
pop
fidivl
ss
rcrb
outsl
movsl
ret
and
fistps
jl
cmp
add
fldt
jnp
xchg
ret
mov
loop
pushf
pop
rol
or
ds
mov
pop
shll
pop
inc
sub
cmp
out
dec
shll
or
pop
aas
pop
jne
lock
mov
sarb
pop
loopne
xor
dec
int
inc
mov
mov
in
pop
loope
pop
sar
decl
lock
sahf
jle
jns
mov
outsb
movsl
mov
loopne
cmc
pop
dec
mov
jmp
dec
enter
movsl
pop
ljmp
mulb
fldl
leave
call
dec
pop
dec
cmpsl
cli
dec
lds
push
sti
pop
push
ret
test
out
push
in
insb
in
mov
pop
icebp
decl
xchg
jae
push
jbe
pop
dec
mov
ficoml
jno
mov
fbld
push
loop
dec
in
jae
nop
inc
or
or
lret
data16
push
jmp
push
nop
dec
adcb
mov
xor
mov
outsb
out
jne
fadds
insl
data16
outsl
jne
jns
decl
es
push
jge
outsl
pop
mov
out
insb
jno
dec
pop
ret
test
xor
scas
aaa
ljmp
sub
rcrb
fildl
pop
add
xchg
loopne
fldcw
loop
loopne
les
icebp
test
pop
bound
fnstsw
jns
stc
xchg
addr16
jmp
pusha
lret
dec
push
roll
das
jecxz
inc
ret
adc
mov
inc
lcall
sub
ret
push
outsb
in
xor
rcrl
jmp
jl
jbe
sub
jmp
pushl
add
xor
push
lods
fisttpl
clc
lcall
scas
inc
out
push
cmpsb
lea
test
xchg
jg
pusha
mov
ljmp
mov
dec
repnz
pop
into
cmpsl
sahf
mov
inc
shlb
push
pusha
aad
insb
fsubl
fsubrs
mov
inc
mov
dec
lcall
es
gs
js
dec
push
pop
roll
lds
pushl
jno
cmpsb
repnz
jbe
dec
lods
test
mov
mov
sahf
jmp
nop
outsl
iret
add
lret
jbe
and
inc
xchg
es
adc
into
je
or
lock
pushf
push
shlb
mov
jecxz
jmp
jo
std
add
mov
punpcklbw
and
and
push
push
push
push
xlat
sahf
pop
xlat
add
mov
push
in
imul
mov
mul
push
pop
mov
jp
rorb
loop
es
jmp
jae
std
push
jge
or
jns
xor
inc
incb
inc
pop
loopne
sarl
jmp
jne
pop
les
ja
out
sahf
inc
inc
pop
pop
inc
je
call
shlb
inc
insl
xchg
mov
sar
in
ja
test
lcall
std
jmp
push
inc
pushf
fists
and
test
ds
das
aas
clc
dec
sbb
cltd
es
adc
data16
adc
aas
dec
in
add
sbb
lahf
adc
dec
jmp
jns
xor
or
ja
incl
shll
push
adc
mov
mov
call
jae
dec
dec
dec
out
push
push
es
std
jnp
imul
aad
inc
mov
mov
adc
or
add
xchg
mov
lahf
sub
cmp
icebp
mov
cwtl
pop
ds
ljmp
ret
shll
jno
mov
fst
out
mov
icebp
cli
jo
leave
out
jne
repnz
sar
int
mov
mov
leave
push
or
aaa
sar
jg
xchg
mov
ljmp
sahf
insb
and
loop
in
jbe
loop
adc
dec
mov
push
out
dec
ja
pop
jmp
xlat
stos
push
cmp
insb
cld
int3
lock
cli
pusha
xchg
jmp
les
mov
frndint
jmp
mov
or
xchg
in
data16
lret
inc
pop
std
cmp
repz
fsubl
fnstenv
and
pop
rcrw
es
jecxz
addb
movsb
mov
cmp
repz
jecxz
stos
movsb
in
jecxz
push
sbbb
jae
aam
hlt
mov
pop
in
imul
iret
out
lock
push
cld
mov
cmp
mov
ret
inc
lock
ja
cli
fs
cmp
aad
decl
gs
xor
fisubrs
cld
jg
ret
sbb
loop
arpl
push
inc
cmp
xchg
test
int3
daa
jl
loope
dec
mov
mov
xchg
pop
push
addb
dec
int3
mov
pop
scas
dec
sar
call
shll
pushf
pushf
mov
iret
pop
jns
daa
movb
scas
mov
insl
int3
lods
fs
mov
out
es
push
jge
ds
jo
jno
cmp
leave
lret
fucomip
pop
dec
popa
sahf
fiadds
mov
inc
mov
pop
cli
xchg
xchg
mov
out
cmc
popa
pop
cmp
push
mov
out
dec
jmp
inc
shlb
enter
fsubrs
dec
gs
dec
pop
loopne
and
mov
sub
ret
ret
cmpsb
mov
fildl
ret
mov
fiaddl
push
lods
xchg
ljmp
imul
mov
fldz
out
mov
fstpl
repz
fwait
sti
cld
ds
into
adc
jno
inc
jns
mov
cmp
popa
ja
push
inc
inc
push
push
lds
decl
stos
lods
inc
in
in
push
out
push
into
dec
jae
in
push
inc
call
shrw
out
xor
xchg
xchg
cld
frstor
push
jmp
or
pushf
push
cmpl
adc
les
or
mov
decl
or
add
xor
xor
cli
pushl
out
fcomps
cltd
sti
adcl
inc
icebp
ljmp
insb
lret
leave
movsl
add
jge
inc
in
pop
pop
push
pop
loopne
mov
insb
daa
jg
cmp
cmp
cltd
mov
xor
cltd
cmpsl
xchg
xor
mov
adc
incl
sbb
push
mov
scas
sub
cmp
or
inc
les
dec
mov
dec
cmpsb
fmul
push
jno
sbb
movsl
pop
push
bound
je
jae
aaa
jb
pop
cmc
pushl
pop
jne
xorl
pop
repnz
dec
iret
scas
adc
push
std
jg
cmp
xchg
ret
push
test
mov
cmpsb
push
mov
sbb
inc
out
mov
dec
push
mov
xchg
push
insb
lea
test
jmp
push
rcll
xchg
fs
cmp
push
sub
mov
cmpsl
xor
rorl
and
add
ss
repz
fcomi
filds
jl
adc
pop
inc
mov
xor
icebp
jg
es
mov
pop
dec
pop
and
outsb
mov
mov
jge
jns
push
sbb
jmp
jbe
inc
je
or
clc
out
jle
cmp
sar
stos
dec
jg
inc
add
mov
mov
push
jecxz
adc
adc
out
fstps
movsl
fisttpll
into
loop
sahf
mov
xchg
cwtl
mov
stc
mov
adc
into
js
adc
cmp
roll
decb
outsb
sbb
ffree
mov
not
cld
dec
jecxz
insb
xchg
sbb
clc
testb
and
cmpsb
stos
pop
xchg
fwait
mov
in
cltd
aaa
add
aas
es
dec
jo
xchg
push
inc
pop
inc
push
ffree
cmp
mov
dec
pop
xchg
xchg
mov
sbb
sbb
pusha
jg
popf
callw
dec
mov
push
push
xchg
adc
push
cmp
cltd
mov
sub
pushl
mov
dec
jne
xor
dec
push
es
lcall
mov
sbb
mov
lcall
or
xor
pushf
or
xchg
mov
pushl
dec
push
cmp
daa
jb
mov
jmp
lock
outsl
pop
loope
sub
xor
test
lret
aam
mov
push
push
mov
mov
daa
int
add
xor
in
imull
inc
sbb
ljmp
ss
jmp
fsubl
mov
cmpsl
lret
adc
inc
in
cmp
test
cmp
and
inc
sti
or
pop
movsb
ss
call
incl
cmc
cmpsl
push
icebp
ret
cmp
outsl
push
jo
cmp
xchg
mov
cli
scas
ret
push
sbb
repz
add
mov
xchg
pop
push
add
data16
es
out
and
push
aaa
mov
rorb
jmp
adc
inc
fs
jo
insl
inc
adc
dec
leave
cmpsl
add
xchg
sahf
cli
push
mov
inc
std
decl
dec
enter
add
bound
in
popf
xchg
sbb
out
mov
jg
clc
sbb
lods
cmp
imul
fsub
leave
inc
inc
incl
decl
scas
sarb
sub
arpl
add
push
incb
pusha
sbb
pop
mov
pop
cmp
in
out
sbb
out
xchg
in
sahf
cmp
mov
pop
popf
gs
xor
test
push
mov
and
jg
cmc
lcall
jae
stos
test
push
mov
pop
les
cmp
arpl
cmp
push
ss
cmpsl
dec
negb
sbb
mov
incl
push
pop
add
xchg
mov
jbe
jecxz
xchg
xchg
mov
mov
xor
jmp
sub
jl
mov
cs
adc
mov
mov
mov
imul
mov
mov
push
inc
in
add
pop
lret
stc
push
add
jbe
decl
fucomi
out
clc
inc
gs
xchg
outsl
push
cmp
inc
mov
inc
inc
int3
fcmovu
push
rorb
mov
ret
cmpsb
jge
xchg
jbe
jecxz
jmp
inc
dec
mov
arpl
xchg
xchg
movsb
in
add
out
lcall
mov
fdivl
outsl
test
shll
xor
dec
pop
sbb
call
adc
and
addl
push
mov
test
decl
mov
scas
repz
sbb
pop
mov
add
repz
test
sub
js
jo
popf
mov
call
jp
into
push
ret
icebp
outsb
dec
ja
mov
push
cmp
lods
add
test
loope
outsb
mov
outsb
jle
push
test
fildll
add
mov
cltd
xor
int3
sub
int3
scas
xchg
mov
mov
push
ljmp
sub
insb
cmp
and
aaa
add
clc
jmp
mov
mov
cmp
push
mov
push
xchg
sbb
push
aaa
std
incl
jmp
sbb
xor
cltd
sbb
lret
mov
mov
mov
jo
testl
mov
sbb
test
inc
cwtl
mov
decl
insl
sbb
dec
jle
inc
or
jecxz
mov
test
sbb
mov
inc
lcall
sahf
pop
add
cmp
push
lcall
inc
out
out
loopne
cld
mov
gs
jnp
fimuls
push
adc
movsb
loope
sub
jmp
or
ljmp
push
adc
mov
inc
cli
icebp
outsb
lcall
std
sub
pop
add
and
sbb
dec
dec
aaa
pop
aad
add
pop
repnz
sub
outsl
push
std
lcall
and
pop
or
movsl
xor
rclb
push
mov
lcall
mov
jg
dec
xor
into
movsb
in
es
out
pop
std
das
cmp
fs
and
pop
and
mov
mov
in
stos
arpl
mov
imul
imul
inc
inc
and
daa
push
sbb
out
xor
mov
xor
cmp
test
daa
xchg
mov
add
xor
sbb
ja
pushl
icebp
mov
jbe
scas
ret
pusha
pop
and
lods
orl
sub
bound
add
inc
push
and
sub
movsl
sbb
xchg
decb
push
jo
sbb
sbb
push
inc
or
stos
cli
sbb
sbb
mov
xchg
inc
cmp
in
mov
add
scas
cmp
call
fs
imul
ljmp
in
out
sub
fs
dec
rcrb
jg
inc
cmp
add
test
push
aam
js
jb
jmp
decl
and
in
scas
stc
mov
cmpsb
push
mov
das
dec
loop
pop
jmp
mov
jbe
fwait
xchg
adc
jge
cmpb
dec
xor
add
negb
ss
lcall
push
repnz
mov
xor
push
xchg
adc
jmp
iret
and
hlt
jns
out
push
sahf
pusha
lds
mov
sar
clc
popf
xchg
jnp
ss
sahf
sbb
icebp
cmpsl
outsl
sti
adc
call
testl
xorl
incb
push
out
aaa
iret
pop
sbbl
aas
insl
mov
xchg
std
ss
mov
push
mov
clc
sbb
mov
in
xor
insl
test
cmp
add
dec
ljmp
mov
xchg
sbb
decl
out
cmp
pop
and
dec
pop
push
scas
sub
cmp
xor
adc
mov
push
xchg
cld
call
cld
enter
cmp
test
orb
mov
dec
mov
mov
mov
adc
in
sbb
cmp
stc
push
or
pop
push
xor
das
in
popf
cmp
outsb
loopne
xchg
cmpsb
jmp
mov
push
push
test
mov
das
or
pushl
jl
sbb
adc
clc
sub
xchg
xor
loope
out
movd
repnz
mov
lods
add
addr16
lret
mov
inc
out
sbb
push
xor
clc
std
adc
xadd
cli
cmpsb
cld
adc
push
mov
inc
lret
push
inc
rcr
add
into
int3
inc
mov
sub
inc
hlt
sarl
call
in
mov
dec
outsl
adc
cli
mov
das
or
mov
xchg
sahf
fisubrs
jp
call
fldl
sbb
loopne
xchg
mov
cmp
sar
fs
dec
push
out
and
out
aaa
imul
jle
pop
imul
loope
jecxz
scas
test
gs
inc
push
mov
call
lea
xchg
inc
mov
aam
cli
movhps
xchg
lea
inc
mov
cli
push
mov
xchg
mov
inc
sbb
adc
push
loop
loop
loopne
das
nop
mov
sub
cltd
ficoml
dec
frstor
faddp
ss
mov
and
shll
loopne
call
shlb
shlb
pop
fs
mov
cli
adc
dec
out
out
or
sbb
add
test
xlat
test
out
popa
cmp
daa
std
ljmp
add
ret
sub
push
push
adc
xor
mov
test
jle
sahf
pop
cmc
mov
or
cmp
leave
mov
sahf
inc
gs
ja
xor
test
pusha
add
insb
aas
sahf
negb
mov
clc
sbb
into
mov
lds
mov
and
sbb
cmp
push
cli
adc
nop
xchg
hlt
andb
sub
push
and
clc
and
mov
shrl
test
mov
outsl
lahf
xchg
bound
xlat
add
fimuls
scas
cmp
inc
fwait
adc
addb
icebp
sahf
cmpsl
lea
aaa
movsl
pop
out
sysenter
call
lods
test
nop
ds
icebp
lahf
cld
jecxz
xchg
sahf
mov
cmpsb
mov
cmp
jle
into
xor
rorl
mov
lcall
adc
loop
sbb
xchg
mov
ja
fwait
cwtl
pop
push
enter
or
push
leave
cmpsl
sbb
cmc
xor
jns
notl
add
xchg
mov
inc
pop
mov
lret
shr
loopne
aas
mov
add
inc
out
das
mov
pop
icebp
mov
and
xchg
jbe
inc
ret
loope
es
ja
add
push
jl
push
stc
jb
fcomi
insb
xchg
mov
movsl
jb
and
ljmp
mov
out
adc
cltd
mov
fstpl
pushl
cld
jg
subb
int
sahf
mov
insl
hlt
mov
cmp
push
ljmp
cli
pushl
mov
xchg
push
adc
es
mov
lret
pop
pop
out
jg
out
test
imul
aas
fwait
mov
test
mov
xchg
cmpsl
cmpsl
hlt
ja
jle
adc
dec
iret
xchg
negb
or
les
push
cmc
aad
mov
push
fbstp
fwait
decl
dec
enter
lret
fsubs
push
sbb
mov
pop
cltd
hlt
out
out
sahf
out
inc
into
aad
xchg
aam
stos
fistpll
out
outsl
clc
jg
shll
mov
iret
push
mov
sub
xchg
incl
inc
stc
sarl
cmp
cld
call
iret
pop
stc
gs
inc
faddl
sub
sahf
stc
adc
idiv
and
xor
hlt
adc
in
mov
sahf
cs
xor
sub
in
into
ja
and
lock
pop
cli
data16
cmpsl
decl
add
loopne
sbb
xchg
pop
test
mov
test
mov
inc
jmp
bound
mov
dec
jp
adc
fs
xor
jg
out
lret
push
aaa
dec
cmc
sbb
push
gs
mov
mov
cmp
ljmp
mov
aaa
pop
rcr
mov
mov
scas
stos
test
lret
jmp
out
loop
fnstsw
lea
sarb
jbe
mov
jmp
idiv
xor
pusha
nop
push
and
or
test
int3
insb
fs
outsl
stos
jns
cmp
and
push
jno
mov
pusha
mov
cs
xor
mov
cmpl
sbb
cmp
aas
pop
ret
mov
lret
xchg
mov
call
loope
jbe
or
inc
mov
test
dec
call
lock
lahf
mov
enter
sub
sbb
cli
in
sahf
fdivp
pop
mov
lods
adc
mov
cltd
jcxz
decl
fcoml
push
add
outsb
mov
or
int
xchg
dec
mov
mov
or
jl
dec
jp
sub
adc
ret
decl
clc
xor
inc
push
xchg
les
sbb
fisubs
scas
push
pop
out
cmp
cmc
adcl
push
popa
clc
aad
push
cwtl
dec
mov
mov
in
arpl
test
pop
or
out
aaa
ljmp
shr
xlat
lret
add
lock
mov
inc
out
adc
push
movsl
pop
mov
aaa
pop
daa
sub
xchg
rorb
loopne
jmp
lock
ljmp
dec
repz
pop
sbb
pushl
call
sbb
adc
jns
pop
mov
lret
mov
sbb
loopne
and
filds
out
ss
mov
aaa
dec
sbb
adc
adc
mov
mov
pop
out
cld
mov
pushl
jbe
mov
or
ja
repz
adc
jecxz
mov
dec
clc
ljmp
in
inc
and
aaa
fsubrs
pop
jecxz
push
mov
out
mov
mov
lcall
es
stos
lods
daa
xchg
clc
or
and
adc
and
cmpsb
ret
lcall
dec
into
and
lahf
pop
xchg
es
jne
mov
aas
decb
adc
scas
xor
gs
jns
ljmp
sbb
repz
fwait
inc
xchg
mov
fidivs
mov
loopne
inc
or
imul
cwtl
hlt
dec
loope
out
in
mov
out
mov
cmp
mov
mov
sub
mov
fwait
mov
lock
adc
inc
orl
jmp
and
dec
push
ret
pushf
push
test
aaa
outsl
inc
aas
pop
cmpsl
jno
cld
mov
jb
push
es
sbb
test
or
outsl
mov
xor
in
lcall
mov
inc
les
nop
sbb
and
test
mov
pop
jg,pt
icebp
jg
into
mov
xor
mov
dec
test
mov
lcall
stos
push
sahf
daa
add
mov
rorl
nop
mov
aaa
mov
jge
add
and
or
jecxz
arpl
scas
inc
push
and
mov
dec
add
mov
pop
mov
inc
insl
jne
xchg
scas
js
dec
mov
popf
pop
jae
out
cli
dec
sbb
loop
mov
mov
push
hlt
jmp
inc
cmpsb
push
insb
lcall
pop
fcompl
pushaw
xchg
test
inc
xchg
mov
dec
ret
sbb
jle
pop
test
cld
repz
pop
test
int3
sub
dec
jns
pop
loope
lcall
dec
fwait
mov
sub
imul
xchg
adc
in
xchg
mov
cmp
xor
test
xchg
decl
aas
add
aaa
mov
lcall
inc
clc
gs
call
mov
dec
es
xchg
mov
jp
cltd
cld
dec
jo
test
cltd
popf
rcrb
inc
push
push
fwait
jg
and
addr16
aaa
mov
clc
pop
adc
aad
in
mov
and
loopne
sahf
adc
out
cmp
and
ja
ljmp
mov
sub
pop
lcall
add
fists
popaw
in
pop
adc
inc
push
mov
ds
lock
cmc
mov
outsl
movsb
push
pop
xchg
xchg
mov
jle
outsl
out
shrb
and
addr16
push
pushf
jle
idiv
fst
call
enter
cmp
cwtl
and
repz
pop
jo
push
lock
pusha
popa
nop
pop
push
bound
js
les
jb
cmpsb
lea
loope
pop
movsl
inc
dec
leave
mov
add
jae
outsl
adc
inc
inc
rcrb
add
ja
mov
or
mov
mov
pop
loopne
pop
ret
ret
or
jno
into
mov
and
bound
pop
adc
rcrl
and
ja
mov
jp
adc
jae
lahf
test
push
int3
outsl
je
dec
dec
mov
repz
and
inc
pmullw
test
push
pop
sbb
test
jg
movsl
pop
push
pop
test
adc
xor
xor
pop
push
fisubrs
je
or
adc
push
xor
inc
inc
cmp
ret
clc
lret
xchg
and
or
xor
mov
in
mov
sub
cmp
in
cs
fwait
push
mov
add
add
xchg
and
addr16
es
inc
mov
aam
loopne
pushl
lcall
adc
inc
inc
xchg
sbb
cltd
mov
pop
into
pop
jge
pop
sahf
push
sub
ds
or
call
rclb
push
pop
enter
aaa
and
mov
mov
loop
mov
inc
dec
insl
jbe
test
sbb
ljmp
bound
aas
test
lahf
fwait
mov
add
rorb
mov
mov
mov
sarb
cmp
ds
jp
inc
insl
and
xchg
imul
fnsave
cmpsb
aas
adc
scas
sbb
pop
movsb
push
pusha
cmpsl
popa
or
fs
mov
es
mov
int
adc
inc
adc
push
push
ret
fs
ljmp
inc
xchg
popa
stos
inc
mov
xchg
and
std
push
call
cmpsb
clc
push
mov
xchg
lds
ljmp
sub
outsb
shll
imul
jge
and
int3
xchg
dec
or
lcall
push
aaa
cwtl
lock
pop
and
mov
testl
das
movsb
scas
push
and
ljmp
js
dec
cmp
int
adc
jge
mov
syscall
std
mov
inc
sbb
shll
jb
mov
xor
jbe
roll
dec
adc
sub
test
cmp
jmp
and
sbb
data16
push
out
ret
mov
adc
mov
subl
xorl
out
xchg
daa
dec
mov
mov
adc
decl
sbb
mov
inc
and
push
dec
mov
lcall
pop
iret
test
sahf
pop
imul
sbb
mov
test
mov
add
jbe
sbb
mov
sub
enter
inc
std
inc
xor
adc
push
scas
xor
aaa
out
dec
xchg
mov
or
setnp
incl
add
jnp
sbb
jae
ljmp
out
cmpsl
and
js
lods
push
mov
inc
mov
aas
and
mov
xchg
popa
inc
push
pop
jg
mov
lea
test
mov
pop
shll
and
lret
decl
mov
xchg
push
cmp
aas
rcrl
and
jg
lcall
icebp
pop
fs
pushf
ret
loopne
ds
pusha
jmp
arpl
cmc
incl
mov
sub
rorl
daa
les
push
jl
push
mul
insb
pop
xor
adc
loopne
shrb
push
xor
int
inc
inc
stos
loop
icebp
cmpsb
fldt
sahf
popa
les
ds
xchg
lock
ds
push
lds
jp
pop
cmp
outsb
jo
dec
xor
xor
inc
push
in
sub
popa
call
loopne
mov
mov
je
dec
loopne
test
push
int3
das
push
js
mov
outsb
loopne
nop
inc
dec
fbld
leave
adcb
das
outsl
push
loopne
std
scas
inc
push
test
test
popl
pop
mov
pop
ss
jge
ret
mov
fs
out
pop
js
add
xor
imul
inc
dec
ja
hlt
mov
mov
push
ret
inc
jg
xchg
xor
cmc
sub
ljmp
sub
mov
inc
pop
pop
dec
jge
xchg
mov
pop
mov
inc
xchg
mov
xor
gs
or
fldenv
xchg
sbb
enter
loopne
sbb
imul
out
mov
loope
or
ds
adc
add
add
adc
cwtl
inc
cld
call
dec
push
push
nop
adc
pop
mov
push
adc
mov
mov
ret
xchg
iret
rorl
mov
sbb
jb
push
repz
cmp
stos
add
dec
lea
les
pop
xchg
inc
mov
lea
sbb
add
incl
mov
sub
js
cmp
pop
dec
fs
push
mov
mov
gs
ret
and
cmp
fists
out
daa
inc
ljmp
sbb
cli
mov
pop
scas
lahf
dec
adc
pusha
call
xor
jg
ret
gs
push
inc
loop
dec
decl
xor
stos
mov
lret
ds
dec
jno
or
pop
cli
lcall
xchg
insb
pop
addr16
and
sar
mov
outsl
pop
push
aad
push
in
ss
push
pop
add
aaa
std
lcall
cmpsl
ret
jg
sub
sub
mov
add
scas
jbe
add
xchg
xchg
movsl
test
cs
pusha
call
or
je
xchg
mov
fs
dec
movsb
decb
add
xor
mov
lea
lcall
ljmp
sbb
jbe
pop
xchg
fstpl
add
sbb
mov
je
stos
sub
xorb
test
mov
mov
pushl
sbb
pop
bswap
hlt
lock
jns
cmp
fsts
imul
jg
lock
mov
push
dec
mov
xchg
and
ljmp
and
cmpsl
and
pop
fadd
je
subl
ljmp
lea
push
add
adc
mov
enter
adc
rolb
pop
je
movsl
movsl
mov
dec
fs
call
js
fs
jle
jmp
loopne
sbb
push
mov
inc
push
pusha
xchg
in
add
adc
push
xlat
lcall
scas
mov
push
adc
hlt
cmpsb
or
inc
shll
subl
icebp
data16
data16
cmpsb
fwait
push
xchg
inc
imul
jbe
and
cs
cld
movsl
std
and
mov
fwait
add
mov
push
ljmp
pusha
jge
mov
adc
push
lds
fs
jle
pop
insl
push
and
or
pushl
out
pop
add
es
sbb
adc
fildl
rolb
mov
rcrl
and
mov
lods
cmp
jmp
jno
scas
in
xchg
pop
out
cmpsl
mov
sub
repz
pop
jns
imul
sarb
and
arpl
popf
int
imul
dec
push
lds
push
or
insl
cltd
inc
jp
aas
pop
adc
inc
adc
ret
jg
cld
add
dec
mov
outsb
movsl
dec
jl
xor
fmul
mov
int3
mov
mov
mov
adc
mov
inc
dec
add
stc
imul
imul
jge
inc
xchg
daa
decb
inc
pop
pop
jns
pop
jb
out
frstor
sbb
arpl
mov
adc
fs
data16
push
jno
jg
mov
jno
add
cmp
jg
lods
subb
pop
jo
daa
xor
pop
aad
xor
mov
outsl
jbe
clc
inc
ret
dec
faddl
sub
push
adcl
lcall
pop
mov
push
push
aas
inc
scas
cmpsl
mov
aas
and
dec
pop
test
es
mov
sbb
int
pop
pop
mov
and
orb
pop
cmp
push
data16
jp
add
repnz
call
or
cmp
or
xchg
jg
or
or
ljmp
cmp
xor
stos
jne
xor
bound
aas
dec
mov
sahf
pop
jbe
das
mov
xchg
jmp
jmp
test
push
cld
jg
mov
or
inc
mov
das
lods
sub
fwait
sti
mov
daa
movsb
mov
mov
lea
mov
je
pop
scas
mov
add
and
pop
stos
push
jo
movsb
xchg
mov
pop
pop
push
ss
mov
jg
cwtl
jne
xor
movq
jg
inc
mov
cld
incl
es
add
add
ds
cmp
hlt
arpl
ljmp
or
test
mov
js
outsl
in
xchg
adc
lcall
data16
pushl
and
push
fwait
lock
test
ljmp
in
fwait
pop
fmuls
pop
add
add
repz
mov
pushl
jg
imul
dec
cmpsl
inc
clc
mull
in
leave
movsb
fs
jae
and
pop
add
mov
inc
out
mov
fldenv
and
pop
in
lods
pop
sbb
inc
inc
adc
cmpsb
es
andb
xchg
dec
push
mov
jle
inc
cmp
sbb
jb
xchg
lds
fwait
or
push
pop
cmp
movb
add
fmuls
and
push
xchg
lods
and
es
enter
sub
out
mov
push
js
and
push
fdivr
or
push
inc
sub
pop
cmp
stos
int3
mov
mov
adc
mov
pusha
ja
aas
mov
jmp
outsb
or
insb
jge
sbb
gs
xlat
stos
cmpsb
inc
outsl
dec
fildl
pop
fwait
pushw
gs
ds
mov
inc
jle
dec
mov
pop
mov
insl
xchg
cwtl
pop
nop
lods
lods
jg
idivb
adc
mov
jno,pn
loope
sub
pop
hlt
outsl
adc
cltd
rorb
pop
movsb
jle
dec
mov
dec
pusha
mov
or
scas
pop
inc
xchg
cld
ljmp
shrb
lods
adc
sbbl
xor
fwait
add
pusha
mov
pop
sti
imul
cld
decl
push
aas
push
movsb
cmp
xor
test
pop
pusha
loopne
ret
sbb
xchg
pop
out
outsb
dec
dec
and
arpl
lret
andl
into
decl
bound
cmp
loopne
jle
rorl
push
gs
push
mov
lock
sahf
lahf
pop
push
xor
mov
jbe
dec
dec
outsb
jno
sbb
jg
call
xchg
hlt
push
mov
lea
push
cmp
and
jg
cmc
push
dec
pop
inc
cmpsl
cmp
mov
jmp
or
xchg
pushf
cltd
mov
xchg
nop
outsb
push
xchg
add
shlb
jg
lock
loop
inc
out
push
repz
fisttpl
inc
iret
sub
push
std
xor
dec
rcr
out
arpl
gs
mov
leave
mov
adc
jge
fsts
xchg
rolb
ds
das
lcall
js
lcall
lret
dec
cmp
mov
fiaddl
ds
stos
cmp
fwait
test
scas
sbb
cld
mov
repz
lods
xor
dec
imul
incl
and
xor
cltd
out
and
lcall
fxtract
lcall
incl
fcomi
rcll
test
jmp
inc
push
not
shll
xchg
daa
sahf
dec
add
inc
ja
out
mov
out
xor
jb,pt
jp
insl
sub
dec
stos
incl
out
push
mov
xchg
mov
sub
inc
jae
pop
and
xor
sub
lods
in
adc
cmpsb
or
ja
incl
bound
ljmp
jo,pt
push
js
ss
mov
aas
mov
es
and
aaa
mov
adc
ja
dec
and
fiaddl
sub
lods
int3
sbb
arpl
xchg
add
jg
lcall
negb
dec
outsl
gs
ds
in
jg
pop
sbb
add
pop
in
dec
ret
dec
je
fistpll
push
lahf
mov
push
scas
fisttps
lods
fimuls
loopne
jno
mov
aam
cltd
scas
sbb
adc
or
push
in
js
loop
ja
dec
fstpl
inc
push
jno
cli
inc
les
jno
cmpb
jbe
rorb
or
inc
repz
mov
xchg
adc
push
insb
dec
mov
nop
add
repz
cld
ja
push
or
enter
lret
inc
xchg
mov
xchg
adc
mov
mov
xor
push
stos
outsb
mov
ss
cli
jmp
xchg
scas
repz
push
push
jg
test
dec
scas
das
dec
loop
xorb
push
fs
dec
das
cli
dec
std
lahf
ficoms
add
sub
pop
ljmp
ja
inc
inc
dec
inc
addr16
bound
bound
incl
jb,pn
aad
jbe
mov
cmp
sub
daa
ljmp
mov
xchg
or
jnp
gs
push
ret
jns
ja
add
cmp
int3
insb
ret
cmp
cmc
mov
jb
sbb
popa
ss
and
notl
add
inc
cld
push
mov
mov
dec
insb
je
lcall
sub
fbstp
push
out
push
daa
in
push
inc
sub
je
inc
inc
cmp
leave
push
mov
lcall
negb
cmp
and
xlat
jl
stc
nop
mov
call
std
pushf
outsb
jbe
cmc
push
mov
test
dec
ret
and
xchg
adc
jecxz
outsb
in
adc
mov
lods
outsb
lret
mov
decl
lea
lock
xchg
mov
xor
fwait
es
xor
jge
sub
dec
cmpsb
xor
inc
test
jl
add
push
fldt
lret
dec
inc
pmullw
lds
imul
jg
xchg
mov
imul
lea
push
aas
fsubs
jg
add
push
jb
es
stc
rorl
clc
call
inc
pop
mov
lods
sarb
mov
cmpsb
mov
fwait
scas
js
out
push
cmp
into
mov
ljmp
push
in
inc
jp
dec
fwait
jge
pop
addr16
incl
mov
sbb
push
aad
or
outsb
pop
mov
mov
inc
mov
test
lcall
in
jne
xchg
call
std
sbb
xchg
iret
jo
pop
inc
inc
inc
daa
lea
jae
stos
icebp
incl
rcll
inc
pop
add
lret
jnp
mov
pushf
out
push
jne
out
cli
lcall
fs
mov
mov
aaa
imul
gs
mov
jmp
adc
push
idivb
pop
negb
iret
dec
imul
or
cwtl
mov
lods
in
std
ljmp
xor
push
das
dec
xor
adc
shrl
scas
adc
pop
add
mov
or
xchg
insl
lret
jp
mov
sbb
xor
mov
iret
mov
adcb
jecxz
jb
lock
mov
sar
out
mov
gs
ljmp
daa
shll
std
incl
adc
insb
jae
inc
fdivrs
sarb
je
rolb
mov
inc
add
inc
jmp
jne
mov
push
cmpsb
dec
add
outsl
into
adc
call
pop
int3
sbb
push
arpl
imul
std
decl
cld
mov
leave
inc
jmp
jbe
dec
dec
in
xor
js
ds
add
dec
pop
test
jb
and
inc
mov
popa
shrb
and
mov
jno
pushl
cmpsb
jp
fsub
xchg
dec
adc
xor
ret
push
mov
xchg
jbe
cs
in
push
jl
pop
hlt
fildll
je
add
pop
pop
faddl
inc
push
lret
out
scas
in
dec
pop
sbb
incl
adc
xchg
push
push
mov
jl
mov
or
jbe
adc
jbe
mov
mov
cmp
cmovo
push
xor
leave
mov
inc
test
cmp
cld
jmp
xchg
push
xchg
mov
bound
fsubl
incl
sub
jecxz
insl
leave
inc
into
movsb
xor
cmp
lds
test
add
adc
shrl
and
negl
push
sub
dec
lcall
sahf
pushf
cs
and
in
mov
pop
fdivl
pop
test
popa
push
ss
dec
xchg
aas
dec
add
call
rorb
inc
xchg
popa
gs
sbb
xchg
or
stos
jg
test
inc
mov
inc
std
incl
imul
cmpsb
scas
or
popa
sbb
inc
jp
incl
xchg
adc
stos
lahf
inc
inc
pop
das
pusha
inc
push
dec
repnz
pop
sbb
in
dec
cli
jg
incl
jl
in
pop
out
movsb
inc
inc
ficoml
fs
addr16
ds
int3
or
push
out
cmp
sarl
jecxz
mov
add
std
and
les
lahf
lods
mov
dec
sbb
scas
clc
mov
or
fidivrs
push
inc
jp
cmp
mov
incl
dec
nop
add
and
dec
xchg
xor
aaa
inc
pop
dec
enterw
cmp
push
xchg
rcr
arpl
jg
push
cmpl
outsb
mov
dec
inc
lret
mov
xor
fldenv
shrb
and
mov
inc
cwtl
sbb
sahf
jbe
sub
stos
imul
inc
inc
dec
push
xchg
dec
sti
lcall
inc
testb
sub
repz
arpl
dec
out
lret
ljmp
fs
enter
cmp
mov
leave
mov
incl
lock
mov
cs
jp
jle
sbb
js
sbb
add
pushl
bound
sub
aam
sbb
adc
xorb
stos
decl
ret
fwait
xchg
ss
mov
mov
call
fwait
dec
lods
sbb
ds
mov
add
test
mov
stos
inc
cld
pushl
adc
leave
dec
imul
cltd
push
cmp
jg
pop
xor
mov
inc
mov
call
ds
xor
setae
inc
mov
xor
inc
mov
sar
es
imul
jg
mov
outsl
subb
stos
sbb
test
mov
pop
add
add
adc
scas
cmpsl
fldcw
push
sarl
mov
add
insb
nop
adc
dec
data16
rcll
std
push
les
mov
int
es
sbb
ja
adc
test
mov
lea
incl
es
cltd
xor
iret
mov
stc
sub
popf
movsb
mov
lock
pop
clc
ljmp
cmp
loop
mov
mov
stos
adc
adc
lahf
setp
lea
stos
jo
jg
incl
jg
xchg
jae
mov
in
movsl
mov
mov
inc
dec
out
outsb
int3
adc
push
push
lea
decl
inc
and
insb
cmpsb
adc
jg
lock
int
xor
add
sbb
out
cmp
pop
add
lret
inc
loop
fisttpll
mov
push
pushf
je
fsubp
lcall
sbb
xchg
push
aas
or
sub
dec
roll
test
out
aaa
scas
pushl
add
pop
jbe
adc
fldt
pop
insl
fstl
jg
incl
adc
fs
push
mov
push
ja
lods
aas
outsl
orb
ljmp
std
add
xchg
xor
xchg
mov
dec
cmpsl
add
pop
clc
js
das
sub
scas
repnz
fisttpll
cmovl
jg
lock
add
loope
mov
inc
mov
inc
xchg
add
leave
cmp
sub
and
sahf
mov
cld
decl
add
data16
xor
inc
mov
add
sar
add
adc
cmp
sub
jg
or
sub
imul
adc
sbb
fstpl
sbb
mov
cmpb
repz
lods
popa
sbb
fdivrs
jg
or
repz
inc
adcl
pushl
bound
lahf
adc
add
mov
pusha
xor
mov
jecxz
dec
outsl
jle
test
mov
xor
cmp
shlb
mov
add
jle
clc
add
dec
repz
adc
cwtl
pop
mov
scas
pusha
insb
xchg
sub
pop
lock
xor
mov
adc
jg
in
jb
or
popf
out
popf
aad
aaa
add
outsl
outsb
add
scas
cmp
outsl
mov
ljmp
mov
in
inc
ret
adc
mov
loopew
fimuls
in
nop
dec
pop
jne
and
dec
nop
pop
fisubl
in
mov
push
add
call
mov
out
add
movsl
fisubl
mov
fstpt
js
adc
mov
das
scas
bound
add
push
xchg
in
push
fcomip
test
adc
fidivrl
in
adc
mov
mov
scas
decl
push
or
mov
push
adc
ret
es
popa
add
lcall
cmp
push
jae
int
jns
shlb
incb
lret
xor
adc
filds
lock
dec
outsl
ss
std
mov
pop
gs
mov
enter
adc
aaa
adc
out
mov
ret
and
mov
mov
add
mov
aam
jb
repnz
ja
scas
sbb
sbb
cs
cwtl
imul
stos
push
rolb
movsb
ss
cwtl
mov
mov
out
cli
lcall
xchg
mov
shll
sahf
pushf
lcall
fs
lcall
inc
sub
in
dec
mov
dec
pushl
loopne
add
push
pop
add
sbb
cwtl
repnz
mov
or
pop
push
aaa
fistpll
lock
mov
mulb
aas
pop
cmp
push
les
fnstcw
pop
stos
repz
pop
xor
call
mov
popa
cmp
sbb
push
mov
clc
ljmp
or
data16
or
xor
rorl
rep
dec
das
mov
adc
mov
dec
std
aaa
fwait
daa
push
push
mov
mov
mov
jmp
and
ds
mov
mov
je
aaa
lock
out
push
cmp
jne
jp
jae
cmpsb
es
push
jmp
dec
add
sbbb
mov
inc
and
xor
cmp
cmp
sbb
fidivs
sar
sbb
xor
sbb
and
rcrl
pop
sar
push
in
cmp
sbb
inc
jp
shlb
pop
mov
push
imul
inc
sti
ds
pop
dec
jno
aaa
pop
enter
push
out
lock
stos
daa
insb
fimull
mov
xlat
dec
adc
cmp
jl
dec
sar
outsl
mov
les
inc
fs
and
loopne
fimuls
jnp
stos
xor
ljmp
add
rorb
jb
fdivrs
addb
es
sahf
loop
sarb
sub
and
hlt
filds
dec
inc
in
cmp
addr16
push
int
dec
mov
cmp
xor
lea
mov
std
pop
es
leave
adc
sti
popa
iret
jns
xchg
push
out
insb
outsl
icebp
mov
push
inc
mov
dec
xchg
aas
imul
mov
incl
xor
or
mov
jle
pop
movsb
inc
mov
or
loop
into
add
sbb
or
dec
pop
scas
inc
popf
pop
adcl
std
jmp
jmp
xchg
andl
fs
or
xor
adc
cmp
jno
and
clc
mov
or
push
dec
pop
insl
jb
incl
les
and
insl
insl
cs
fs
je
cltd
sub
les
sbb
scas
lret
and
inc
mov
mov
or
fsubrs
or
mov
out
pop
pop
jg
xor
dec
fimull
jb
push
insb
fcoml
push
gs
enter
jmp
cmp
aaa
in
cli
fldt
jl
sbb
lahf
and
adc
jbe
jae
and
call
sub
icebp
stos
imul
movsb
jle
and
popf
test
xchg
mov
pop
test
gs
aad
aas
xchg
clc
lret
insl
jge
into
es
lods
pop
sbb
cmp
aaa
faddl
and
xchg
and
mov
decl
les
test
ret
ds
pop
subl
sahf
loope
daa
xor
sub
jbe
adc
and
mov
clc
call
adc
fbstp
jl
test
and
dec
mov
dec
mov
lcall
fisttpll
jp
jb
inc
inc
jg
mov
and
fsubrl
rolb
inc
lock
sub
and
loope
cmp
push
rol
fistps
scas
xor
inc
mov
nop
mov
cmp
lcall
xchg
add
pusha
push
pusha
adc
push
or
hlt
add
lcall
adc
inc
cmp
sub
popa
sbb
adc
pop
nopl
pop
sbb
adc
repz
lods
cmp
enter
cmpsb
stc
test
inc
into
das
lahf
out
aaa
pop
ror
cmpb
mov
test
jno
fs
pushf
add
cmp
out
aaa
out
xchg
sub
push
stos
sbb
mov
incl
imul
add
inc
mov
xor
test
fnstsw
movsb
mov
cltd
mov
mov
sahf
cld
cmp
sub
std
leave
loopne
cmpsl
or
popf
adc
push
and
mov
and
xor
add
icebp
orb
mov
stos
mov
pop
lcall
mov
les
sahf
call
icebp
mov
sbb
lods
sbb
js
cwtl
sub
jge
das
mov
pop
adc
repnz
mov
mov
mov
mov
out
mov
mov
lret
rorl
out
and
clc
sti
sub
cmpsb
inc
jbe
adc
xor
jns
fsubrs
arpl
in
or
decl
cwtl
roll
sbb
mov
loopne
test
aaa
jmp
mov
lods
jbe
xor
push
cmp
jns
add
jmp
lea
lret
icebp
fs
pop
pop
lods
mov
out
lahf
repz
cld
cmp
in
mov
in
push
icebp
sbb
daa
jl
stos
inc
scas
ret
lahf
cld
mov
add
inc
and
jae
data16
inc
cs
punpcklbw
fcomip
sub
sub
cmp
push
or
jle
sub
pop
cmp
imul
xor
jg
sub
imul
or
es
lcall
sbb
inc
push
adc
or
cmp
and
sti
into
mov
in
jecxz
sarb
add
rcll
ret
mov
mov
xchg
je
mov
xor
mov
push
shlb
js
push
lods
xacquire
stos
push
mov
out
mov
shrb
mov
outsl
xchg
cmp
es
loop
adc
call
pop
mov
push
sahf
test
loopne
imul
outsb
or
in
movsl
sbb
sbb
fbld
mov
xor
dec
mov
mov
ds
sbb
movsb
mov
lods
add
pop
arpl
add
les
dec
iret
xor
fcomip
mov
push
int3
decb
pop
clc
mov
cmp
and
jge
stos
push
sbbb
cmp
pop
mov
pop
pop
cs
fcomip
and
push
lcall
test
or
fldenv
lahf
sti
clc
sbb
mov
stos
lahf
frstor
and
popa
call
sbb
cmp
inc
push
stos
push
jl
aaa
and
movsb
fsubs
outsl
enter
int
add
push
pop
lock
push
cli
jg
enter
adc
mov
mov
jne
add
sub
cmp
inc
lcall
mov
cmp
in
add
cmpsl
xor
cmp
add
jae
test
xor
lcall
xor
xor
or
jo
gs
lret
sub
das
jl
push
ficoml
xchg
push
adc
pushl
outsb
fs
test
pop
mov
adc
or
sahf
cmp
cmp
or
decl
in
push
push
sbb
mov
pop
and
pop
shll
mov
xchg
and
cmpb
xchg
movsb
lock
jb
add
aas
mov
ljmp
into
or
pop
xor
scas
rorb
and
cmp
mov
adc
cmp
add
mov
pushl
xchg
and
or
and
test
cmp
std
push
inc
aad
mov
dec
scas
adc
and
mov
sahf
jmp
ljmp
das
jp
daa
lahf
call
nop
int
inc
dec
dec
mov
add
pop
sbb
adc
ja
xchg
xor
adc
js
pop
dec
adc
clc
cmp
mov
xchg
pop
mov
mov
xor
xor
pop
push
add
cmp
sbbb
fwait
sub
fdivrp
sbb
enter
and
lahf
cmp
inc
inc
fwait
out
adc
or
decl
mov
xchg
push
adc
scas
jmp
sub
es
mov
in
mov
and
lcall
popa
push
inc
mov
cmp
add
mov
or
sub
mov
push
aad
adc
jle
incl
and
mov
cmp
fwait
test
rorb
loopne
pop
aas
and
test
jmp
pushf
xor
stos
mov
pop
dec
ljmp
pushf
int3
nop
push
cmp
mov
adc
dec
mov
or
add
pushl
push
pop
lods
adc
mov
pop
jg
sahf
rolb
cmp
and
add
aad
push
popa
inc
mov
xor
sbb
pop
xchg
out
mov
add
jmp
cmp
mov
adc
mov
jns
cli
cmp
and
ljmp
xchg
lds
xchg
and
mov
sub
xlat
mov
and
xchg
adc
mov
or
inc
xchg
sti
ss
sbb
lcall
and
adc
pushf
fists
mov
xchg
and
incl
inc
mov
push
jo
and
pop
mov
outsb
and
jmp
outsb
push
mov
inc
decl
outsb
mov
mov
add
push
dec
dec
add
lds
sub
add
cmp
shlb
inc
xchg
call
ror
dec
sub
lret
cmp
aam
jg
aas
add
or
xorl
mov
ljmp
mov
div
mov
xchg
add
loopne
xchg
push
sbb
enter
jg
daa
push
sub
add
xor
addr16
mov
add
call
into
loope
adc
scas
cmp
pop
mov
leave
inc
jl
mov
mov
cmp
cld
xchg
cmp
outsb
mov
fdivrp
jne
cmp
lcall
mov
cmp
mov
jbe
cs
lcall
mov
jg
mov
mov
add
dec
fwait
mov
fisubs
jns
push
insb
fdivrl
test
ret
pop
jno
das
aas
xor
daa
mov
repz
mov
clc
mov
ret
shll
push
jno
xchg
in
xchg
xchg
mov
rclb
sbb
push
push
and
test
ficoms
popa
mov
lret
jo
cld
loope
push
adc
fwait
mov
ljmp
scas
lods
mov
arpl
test
scas
adc
loop
mov
mov
mov
jnp
adc
out
mov
sbb
and
cs
test
sar
dec
clc
cmp
sub
xchg
adc
push
loopne
scas
mov
jb
or
fbld
jg
test
rol
adc
sbb
lea
outsb
sbb
in
cld
ja
and
add
inc
call
cs
imul
jmp
sbb
shld
orb
adc
lock
stc
int
jle
or
adc
mov
test
aaa
mov
ret
mov
sbb
and
fistpll
xor
lret
mov
movsb
icebp
jmp
out
mov
icebp
cs
sub
roll
loop
es
sub
enter
pop
les
repz
mov
or
lock
jecxz
sahf
cmc
sarb
in
mov
sahf
fwait
or
test
es
negb
in
mov
jecxz
repz
inc
xor
sbb
fldt
lret
sti
mov
cmp
in
jg
ljmp
jne
or
sti
es
cmpsb
mov
xchg
cmp
roll
xor
pop
les
lds
js
scas
jle
jbe
xchg
inc
sub
push
clc
stos
mov
enter
subl
mov
mov
pusha
jae
cmpsb
add
or
out
pop
ljmp
cmc
loopne
jbe
xchg
xor
cmpl
xor
nop
xor
loope
clc
ljmp
push
xchg
dec
push
sub
cmp
jmp
push
push
push
push
popw
push
inc
mov
scas
call
stc
sbb
jge
push
inc
add
nopl
cli
mov
pop
les
cld
sbb
das
cli
lcall
push
addr16
sub
inc
in
mov
jns
lcall
test
insl
push
ja
inc
mov
clc
pop
jo
adc
call
inc
pop
addl
mov
dec
add
pop
pop
dec
xchg
loopne
cli
mov
int3
sbb
add
adc
pop
cwtl
inc
lock
mov
push
pop
lock
jmp
jb
inc
scas
adc
test
add
mov
mov
aaa
mov
lcall
xor
cmpl
cmp
cmp
or
xor
ret
and
cmp
loope
cwtl
and
sar
ljmp
add
popf
into
add
and
mov
jbe
test
lcall
dec
push
adc
rcrl
jg
adc
in
jge
mov
xor
in
push
cmp
loope
jl
inc
cmp
jmp
daa
mov
or
cmp
fmull
inc
sti
test
dec
jp
xchg
mov
mov
push
sarb
pop
pop
mov
jle
mov
aaa
std
aas
dec
lret
in
movmskps
and
sti
push
mov
dec
shlb
push
cli
pop
fmul
inc
jp
add
insb
mov
ficomps
dec
ss
jbe
icebp
adc
into
test
shl
push
xchg
sub
push
mov
and
andb
out
ret
jno
adc
sub
ljmp
icebp
xchg
and
mov
ljmp
jp
push
es
pop
adc
icebp
sub
add
inc
clc
adc
test
shrb
push
inc
dec
push
pop
mov
push
cmpsl
push
lds
push
std
aas
mov
xor
push
jne
imul
ja
pop
or
or
inc
push
dec
jg
dec
je
cltd
jne
stos
push
ret
inc
lds
pop
xchg
ljmp
pop
nop
insb
push
sbb
cmpsb
js
adc
ljmp
xchg
xchg
push
mov
sub
enter
cmp
jg
mov
in
mov
push
insb
jbe
lds
sbb
jb
cli
mov
nop
xor
jle
cmp
es
icebp
and
es
jae
and
insb
inc
out
and
xchg
adc
mov
fisttpll
je
clc
or
pop
loop
out
jno
arpl
jge
jmp
cmpsb
and
in
lods
push
popf
lcall
mov
inc
loope
jl
xor
sbb
movsl
and
aaa
xor
jecxz
and
sbb
and
cmp
data16
inc
pushf
lret
xor
inc
sbb
sub
push
add
pop
stos
lds
incl
pop
sbb
push
aaa
cwtl
jae
ja
out
mov
dec
mov
sub
icebp
pop
icebp
cmp
sbb
sbb
movsl
inc
add
lods
loope
inc
add
pop
sbb
lcall
jle
push
push
dec
cltd
fisttpll
imul
pop
xchg
push
mov
loopne
dec
addr16
mov
or
adc
push
es
push
insl
insl
lret
stos
xor
push
sbb
je
sub
cltd
aam
insb
popa
dec
mov
daa
insl
or
push
jbe
mov
call
adc
or
and
jl
loopne
dec
adc
cld
xchg
ljmp
pop
cmp
inc
pop
or
aaa
mov
das
xor
mov
lret
and
daa
sbb
enter
icebp
push
jmp
lcall
int3
or
adc
ret
or
addb
incl
insb
add
fs
mov
std
push
jmp
add
andb
mov
add
ja
pushl
jl
and
incl
inc
jmp
iret
mov
pop
rorl
push
dec
adc
and
xorb
dec
movsl
lea
inc
lock
mov
adcb
inc
dec
repnz
call
sti
pop
ret
add
inc
les
outsl
cli
leave
add
sti
aas
cmp
xchg
push
sbb
aaa
hlt
sbb
fildll
adc
sahf
and
ljmp
ja
add
jecxz
icebp
loope
jno
repz
jbe
int
lcall
jmp
aaa
add
mov
fcoml
lcall
mov
shlb
mov
push
xor
enter
add
mov
xchg
ljmp
sar
call
dec
push
lret
adc
das
cmp
mov
sbb
xor
dec
cs
push
icebp
push
push
insl
aaa
add
outsb
ds
ss
daa
jae
pop
inc
pop
pop
jmp
xchg
jge,pt
jg
mov
imul
dec
cmpsl
add
aaa
out
cmp
out
idivb
ret
and
lcall
int3
sbb
mov
cmp
rcll
mov
es
xor
stos
dec
lock
push
insl
loop
sub
imulb
jg
mov
mov
cmp
je
jge
sbb
push
jne
or
gs
add
outsl
testb
jg
mov
jg
cmpsb
loope
mov
jp
push
mov
mov
sahf
and
rcll
outsl
decb
dec
in
mov
insb
std
and
lret
fwait
push
adc
xchg
inc
jmp
dec
xchg
and
shrb
sahf
inc
cli
scas
sahf
jp
jmp
mov
lock
add
adc
sbb
scas
subb
push
pop
sbb
xchg
add
decl
lods
pop
dec
cmp
fistpl
jbe
mov
sar
mov
jle
sub
mov
inc
out
mov
int
testl
sbb
dec
imul
xor
ret
insb
std
push
out
es
test
bound
jle
pusha
loop
xchg
mov
xor
cmp
push
rclb
pop
xor
and
dec
push
xchg
and
es
mov
pop
rorb
push
call
ret
dec
xor
push
mov
stos
ljmp
in
adc
sub
rolb
or
pop
add
push
repz
jnp
movsb
adc
aad
decl
mov
push
test
aas
rcrb
test
mov
push
pushl
or
arpl
addr16
xor
pop
add
loopne
mov
jmp
sbb
or
push
adc
movsl
call
mov
js
push
add
sub
loopne
aad
or
pop
push
adc
aas
or
scas
pop
insb
cmp
ret
insl
insb
dec
sahf
and
es
fucomp
mov
inc
dec
movsl
push
daa
xor
or
adc
lret
pusha
lea
test
aam
hlt
test
mov
ds
jbe
test
sbb
out
jle
mov
hlt
lock
mov
scas
notl
cltd
scas
loop
test
pop
in
xor
jecxz
xchg
adc
mov
adc
dec
mov
or
lret
ret
cmpsb
aaa
dec
jl
mov
mov
div
push
test
mov
push
ds
movsl
addl
pop
repz
jp
cmp
mov
arpl
mov
inc
mov
incl
leave
mov
dec
pop
test
push
push
cltd
pop
xor
push
out
ljmp
lahf
data16
movsl
and
dec
add
cmp
inc
push
cmpsb
pushf
fiadds
xor
inc
inc
jb
outsb
inc
std
decl
les
mov
cmp
xchg
adc
push
rolb
sbb
jp
gs
jg
icebp
jb
xchg
imul
aas
popa
scas
xor
dec
scas
sahf
mov
and
jg
cwtl
fnsave
cmp
dec
popa
mov
bound
sti
jb
mov
ds
add
or
cmpsb
fcomip
push
dec
aad
add
xlat
test
push
add
adcl
or
lea
push
test
es
addr16
scas
push
pop
jb
mov
adc
cmpsb
aaa
mov
repnz
gs
test
dec
sub
lods
frstor
mov
cmp
enter
cmpsb
sub
daa
pop
lcall
push
adc
out
out
dec
jb
inc
sti
movsb
std
mov
xor
std
in
cs
cli
cs
mov
xor
iret
stc
ljmp
ret
and
lods
aam
push
push
pop
loope
jg,pn
add
sub
mov
shrb
ds
jge
pop
sub
mov
xor
iret
xchg
pop
push
inc
push
ret
push
pop
jb
ret
and
clc
adc
mov
pusha
lahf
adcb
mov
dec
je
cwtl
lock
mov
jo
ret
fidivrs
cltd
xchg
sub
test
mov
lcall
fisttpll
enter
leave
mov
jle
out
mov
repz
stc
jae
lods
and
rcl
pusha
push
jg
test
or
mov
mulb
out
dec
add
sbb
cmpb
test
cwtl
lret
ss
clc
aas
or
dec
sub
out
es
dec
adc
stc
je
or
out
sahf
inc
lea
mov
mov
adc
dec
std
test
popa
mov
jmp
xor
test
mov
test
in
jg
mov
scas
pop
xor
mov
pusha
and
clc
pop
dec
push
arpl
mov
clc
mov
daa
imul
out
arpl
inc
mov
pushl
xor
and
insl
lret
fcoml
movsb
stos
xchg
fucomip
push
jl
icebp
mov
mov
dec
fs
pop
xchg
rep
sub
rcrl
call
shrl
outsb
jl
imul
jmp
out
mov
arpl
jae
aam
popa
aad
call
push
je
popa
in
mov
inc
out
inc
xor
pop
inc
push
dec
cld
mov
pop
incl
jo
push
dec
sub
add
popa
sahf
cmp
inc
testl
mov
subl
mov
test
xlat
and
adc
cmp
ret
push
or
lcall
iret
xchg
test
xor
cmp
cmp
inc
int
inc
and
repz
xchg
mov
pop
sbb
xchg
jle
push
decl
aaa
dec
xor
in
jl
ja
ret
out
gs
stos
fisubs
cmpsl
xchg
shlb
xchg
push
fwait
mov
imul
in
loopne
mov
imul
cld
xchg
pushf
fstpt
xor
add
jmp
xchg
mov
js
jp
push
loop
mov
push
mov
in
jg
mov
into
mov
jp
stos
ss
mov
push
or
ret
mov
sbb
pusha
jg
pop
pushl
pop
or
nop
adc
enter
sbb
inc
pop
pop
dec
jl
mov
push
ret
sub
adc
mov
mov
mov
cmp
fwait
lds
ljmp
jnp
xchg
fbld
mov
shll
cmp
cmp
mov
jg
fcompl
outsl
dec
cmp
lds
rcrb
decl
inc
fdivl
mov
movsl
dec
out
jno
jns
push
add
cld
out
dec
mov
lods
in
xchg
mov
sub
in
pop
cmp
mov
xchg
dec
pop
jne
adc
hlt
test
fwait
push
or
lea
pop
and
call
mov
nop
leave
inc
push
scas
xchg
lock
pusha
inc
hlt
push
gs
push
xchg
cs
xor
or
adc
mov
outsb
stc
jmp
adc
insl
and
ds
xor
out
xor
lcall
lods
int3
outsl
aam
inc
lret
pop
aad
lea
orb
in
data16
les
daa
xchg
sahf
shlb
push
sbb
mov
fcmovnu
push
mov
sbbl
cmpl
dec
out
jns
notl
pushl
nop
ror
sahf
push
inc
jnp
push
jae
je
adc
sub
dec
inc
sbb
pushl
lods
pushf
cs
nop
outsb
into
cmp
aas
test
xchg
stc
and
adc
push
ljmp
pop
and
xor
add
mov
push
mov
ljmp
fistpll
cmp
inc
mov
outsl
xor
fwait
aam
cmc
dec
imul
ss
mov
mulw
fists
ret
inc
insb
pop
adc
popf
lret
movsb
jle
mov
xor
add
call
sbb
mov
clc
mov
ja
scas
jecxz
push
loope
scas
loopne
pop
imul
inc
rcrb
sahf
test
xchg
pop
call
cmp
cwtl
mov
mov
mov
int3
testb
mov
jmp
sarb
mov
sub
cmp
loope
loopne
push
mov
cld
add
imul
or
xor
cmpsb
sbb
es
test
pushl
dec
fs
rcl
fdivrs
and
lea
add
lcall
lock
mov
xor
loop
ds
xchg
incl
std
cltd
xor
pushf
jle
pop
js
sub
dec
cmpsb
push
pusha
sub
cmp
pop
cld
mov
adc
loop
or
es
dec
inc
ljmp
es
pusha
push
movsl
dec
push
jns
loop
ja
add
sub
mov
or
pushl
push
jg
arpl
sbb
outsl
pop
enter
pop
ja
jbe
lods
call
mov
incl
push
add
pop
push
pop
or
jl
pop
arpl
push
cwtl
mov
fwait
mov
dec
dec
push
sbb
sub
out
outsb
xchg
jo
jle
mov
mov
adc
je
int
dec
ljmp
push
in
push
test
xchg
mov
mov
jne
jg
out
adc
sbb
mov
mov
push
dec
aaa
test
push
inc
mov
sub
inc
std
xchg
mov
xchg
mov
jbe
movsb
lcall
lret
lahf
dec
scas
inc
je
push
push
movsb
fucom
ss
call
outsb
push
pop
add
cltd
dec
int3
adc
xchg
stos
lds
jnp
and
lods
push
jbe
fbld
inc
cld
jo
dec
push
push
arpl
cli
movsb
loop
jno
inc
mov
adc
dec
lds
dec
outsb
mov
mov
dec
jns
sbb
adc
cmpsl
xor
lods
popa
int3
xchg
mov
pop
addb
mov
mov
cmp
pop
cmp
add
xchg
adc
dec
sbb
incl
pop
mov
dec
add
test
cmp
dec
mov
add
sti
inc
les
add
jo
xor
sbb
inc
pop
cli
sbb
sbb
mov
push
and
cmpsb
adc
movsb
dec
ljmp
sar
cmp
ret
add
dec
xchg
xor
rcl
mov
push
or
bound
and
sbb
pop
fldl
add
imul
cmp
mov
mov
ret
mov
test
stc
outsb
sub
pop
mov
push
sub
stos
ljmp
sub
dec
cmpb
sub
mov
sbb
dec
clc
jg
test
imul
xor
and
xor
cmp
movsb
cmp
jmp
jp
int
xor
fisubrs
nop
movsb
into
in
mov
test
dec
add
sbb
or
sub
jle
mov
push
mov
jg
add
pop
inc
xchg
cld
aas
js
ja
pop
and
icebp
fildll
cmp
mov
push
decb
out
shl
mov
sbb
or
jecxz
insl
test
cmp
sbb
in
adc
mov
es
or
mov
nop
ret
xchg
push
into
sahf
scas
jmp
xor
mov
push
add
sub
xor
or
jg
or
mov
adc
ljmp
into
dec
es
ret
aas
mov
sub
test
sbb
aaa
mov
push
and
jp
decb
test
sbb
mov
lcall
dec
fldt
mov
jp
mov
jbe
je
out
cwtl
aam
pop
loopne
pusha
jb
fwait
loope
test
cltd
mov
inc
push
fwait
ljmp
sbb
mov
leave
cwtl
jno
repz
test
cld
mov
mov
push
xor
test
add
lods
fs
pop
xchg
es
mov
mov
subb
jo
lcall
dec
cmp
pop
mov
or
cmp
inc
call
call
or
and
jno
loop
sub
inc
mov
push
aaa
shrl
add
icebp
or
cwtl
pop
xor
and
mov
inc
clc
test
lcall
scas
mov
into
cmovo
popa
jl
sti
mov
into
pushf
cld
pushl
cs
enter
in
pop
mov
dec
mov
push
pushf
test
push
arpl
decl
sub
movsb
fldenv
xorl
jno
inc
push
xchg
ja
xchg
sub
lcall
adc
jb
outsl
push
push
adc
fucomip
enter
out
outsl
stc
es
incb
pop
lods
cmpsb
inc
mov
lcall
lcall
mov
mov
mov
sti
cmpsl
into
lahf
sbb
sbb
jg
jle
and
add
xor
aaa
mov
sahf
or
inc
arpl
push
in
add
push
je
test
andl
xor
mov
or
pcmpgtd
jns
jp
ljmp
xor
scas
mov
sbb
adc
xchg
ja
xor
mov
sub
xchg
xchg
subl
mov
mov
pushl
cmp
ss
lahf
mov
fwait
in
mov
add
ljmp
test
ret
mov
pop
jmp
sub
sahf
jbe
inc
inc
mov
test
dec
adc
movsb
cmp
xor
lods
icebp
mov
scas
ljmp
lea
and
sarl
call
pop
sbb
dec
adc
or
mov
pop
jae
mov
ja
jp
stos
or
cmpsb
cwtl
es
ss
or
ja
stos
ljmp
and
push
pop
or
jg
dec
in
cmp
ss
inc
dec
sbb
sti
or
js
sub
push
int3
cmp
outsl
jb
dec
push
mov
add
inc
rcrl
cld
jle
das
pusha
sbb
aas
dec
mov
insb
roll
mov
sbb
jl
test
mov
sbb
fimuls
pop
clc
mov
jno
dec
int
xor
mov
aaa
out
icebp
cs
push
lods
dec
dec
lahf
lcall
inc
jbe
mov
ljmp
incl
mov
scas
and
jbe
xchg
xor
repnz
fbld
pop
push
jno
das
dec
jl
pop
cmp
fs
push
fisubrs
pushfw
add
xor
pop
or
pop
dec
daa
inc
mov
sbb
dec
ljmp
adc
jle
dec
cmp
aad
cmp
adc
mov
and
lea
enter
ja
fisttps
dec
sub
add
or
or
xchg
mov
stos
xor
popf
lea
cld
jo
adc
scas
gs
out
push
dec
ret
out
les
cwtl
push
inc
sar
mov
mov
mov
xchg
iret
push
icebp
mov
mov
roll
cld
fistps
ja
inc
dec
mov
stos
int3
inc
xor
pop
mov
popf
call
add
test
lret
sbb
lock
or
aaa
insb
inc
scas
decl
addps
cmp
sbb
sub
and
push
insl
pop
sbb
das
arpl
es
movsb
test
sahf
push
mov
add
push
push
les
xchg
mov
xchg
dec
xor
sbb
cmp
lea
push
decb
xor
insl
xchg
xchg
decl
adc
push
inc
test
cmpsb
movsb
subb
jb
jg
icebp
sub
cmp
cmp
and
popa
cmp
nop
inc
fwait
das
xchg
mov
adcl
out
out
inc
jg
fiadds
call
bnd
jne
fsubrs
popa
cmpb
ljmp
cli
and
jbe
push
adc
icebp
mov
cmp
in
outsb
addr16
sub
push
mov
pop
lock
xor
or
addr16
mov
mov
in
sub
cltd
leave
mov
and
inc
mov
mov
test
or
aas
dec
dec
push
filds
popl
jecxz
jp
adc
pop
add
fwait
lea
mov
in
sub
in
pop
movsl
fbstp
aaa
add
inc
dec
test
sbb
mov
inc
mov
sar
add
out
sbb
push
ja
insb
pop
mov
mov
loop
nop
scas
pop
jecxz
xor
loop
jmp
jge
icebp
or
jo
push
test
data16
sbb
imul
mov
mov
dec
scas
adc
call
mov
jl
and
ds
xchg
dec
arpl
add
insb
repz
jne
shlb
dec
imul
into
ja
incl
add
les
dec
push
inc
enter
mov
mov
orl
mov
jmp
dec
jmp
pop
data16
inc
rcrl
test
push
jo
rcl
data16
clc
mov
mov
ljmp
gs
loopne
push
dec
daa
dec
test
dec
mov
loopne
sahf
ja
hlt
push
sar
decl
dec
popa
add
into
pop
sub
in
cmp
rorb
ffree
sub
divb
icebp
pop
popf
push
fsubs
and
adc
mov
xchg
adc
sbb
push
fwait
sbb
xlat
add
lret
int
lea
cmp
push
loop,pt
sub
mov
pop
jl
xor
pop
sub
push
sbb
pop
dec
dec
cwtl
add
mov
fwait
mov
shll
pop
scas
or
bound
call
daa
ja
mov
test
adc
ss
in
lea
pusha
inc
push
and
mov
lcall
dec
das
jle
bnd
inc
or
push
dec
inc
or
js
ret
incb
jg
adc
adc
mov
es
push
pop
inc
mov
xchg
pop
leave
movsl
rcrb
lcall
xchg
out
loope
aad
je
push
arpl
push
push
outsb
stc
adc
jl
mov
jmp
test
or
mov
mov
mov
sahf
inc
testl
inc
movsl
pushl
push
jl
notl
sbb
out
int
push
push
pop
pop
jne
loopne
dec
dec
fsts
pop
push
ret
call
mov
aad
lret
fwait
lret
dec
pop
xor
inc
mulb
cmpsb
add
xor
call
pusha
pop
in
je
popf
add
xchg
jecxz
inc
cld
test
or
mov
lahf
arpl
mov
mov
es
push
dec
mov
int
inc
out
pushl
pop
mov
inc
das
push
push
cmpsb
push
and
sarb
cmp
mov
out
mov
dec
xchg
mov
mov
decl
outsb
xchg
out
sub
xor
push
mov
mov
int3
mov
lods
data16
enter
add
out
and
and
roll
sbb
ds
jns
gs
mov
mov
aad
or
outsl
inc
adc
xchg
in
movsb
rcll
imul
pop
lcall
add
movsb
adc
xchg
leave
xchg
jp
mov
adc
lcall
fs
dec
jp
jecxz
dec
aaa
pop
sub
or
push
lcall
adc
call
ret
insl
insl
inc
fsts
movsl
sbb
mov
lods
jne
mov
ss
enter
jg
jo
je
sbb
scas
mov
cmp
adc
das
clc
or
sub
adc
mov
xchg
mov
cmpl
out
push
ljmp
js
fistps
sbb
subl
mov
cmpsb
outsb
rorb
loop
cld
das
xor
xchg
jge
fildl
sti
mov
xchg
out
incl
inc
jp
std
mov
adc
iret
mov
or
std
sbb
adc
fs
mov
es
in
cltd
pop
mov
xchg
dec
fstl
add
cmp
es
mov
pop
cli
loop
pop
int3
movsb
std
loopne
pushl
jne
int
iret
nop
dec
int
push
pop
sarb
mov
mov
frstor
and
xchg
incl
int
addr16
push
push
mov
jmp
cmp
leave
mov
fisubrs
cld
jg
add
arpl
orl
inc
lcall
mov
pushf
jmp
jbe
das
clc
loopne
adc
push
jg
cmp
mov
mov
cli
movsb
jmp
pushf
jmp
dec
call
pop
lock
fstl
inc
es
jae
sbb
xchg
les
dec
je
add
cltd
fistl
or
jbe
jl
call
cmp
mov
ret
cli
mov
adc
les
add
and
sub
jle
sbb
rcr
and
clc
ret
mov
jp
loop
imul
xchg
into
rcll
ss
sub
es
lds
cld
imul
data16
dec
fidivl
mov
incl
insl
inc
shlb
jge
cmp
mov
cwtl
imul
fisttpll
imul
lahf
rclb
sbb
sub
icebp
ljmp
adc
mov
test
aas
jle
fnstsw
inc
roll
xor
cmp
loope
sti
das
enter
inc
lock
sub
push
mov
outsl
jge
ljmp
jg
mov
pop
js
js
sub
xor
xor
or
mov
pop
int3
pop
xlat
pop
push
sbbb
ret
cli
xchg
adc
pop
roll
jb
cli
ljmp
jp
jo
xchg
cmpsb
push
mov
mov
add
xchg
in
enter
mov
and
pop
rorb
jg
mov
in
mov
pop
sahf
fstpt
enter
pop
icebp
and
mov
jb
mov
neg
hlt
ljmp
pushf
cld
mov
fwait
sbb
jo
jae
dec
mov
and
call
mov
les
stos
mov
bound
fiadds
incl
xchg
imul
sbb
out
cmpb
popa
pop
mov
movsb
enter
cmp
fdivs
cld
jg
sub
pop
test
pop
shl
lret
sahf
mov
pushf
outsb
cmpsl
xor
mov
xor
fwait
mov
xor
jbe
and
jle
mov
fwait
clc
adc
pop
push
pop
mov
xor
hlt
lcall
pop
xchg
and
inc
adc
faddl
in
xchg
push
add
sub
cld
push
call
lods
inc
aad
mov
jbe
in
lcall
shll
dec
aad
pop
push
scas
jp
cmp
inc
mov
je
mov
mov
push
jno
movsb
int3
mov
iret
imul
ret
mov
lret
pop
mov
je
dec
xlat
lods
call
dec
ljmp
mov
popf
loope
lea
cmpsb
adc
call
xchg
dec
in
mov
jle
loope
pop
in
xchg
ficomps
mov
jg
fldt
jg
push
lcall
pop
jle
test
ficompl
mov
cld
call
mov
test
pop
xlat
aas
mov
inc
mov
iret
mov
sbb
mov
push
sub
xor
outsl
mov
fcoms
cmp
in
cwtl
jb
scas
lock
call
sub
inc
fidivrl
dec
sahf
icebp
or
jg
xrelease
and
inc
mov
mov
mov
and
ds
pop
mov
push
xchg
int
fs
jg
xor
fwait
enter
lahf
call
sbb
imul
add
int
push
test
adc
mov
ljmp
cmp
bound
lret
cld
mov
cmp
mov
jnp
incl
pop
jbe
jl
out
mov
sbb
lcall
jle
cmp
dec
mov
push
push
xchg
mov
pop
pop
mov
mov
ljmp
test
add
inc
xchg
push
call
out
aas
jne
fstl
xchg
fwait
mov
out
xchg
adc
fdivrl
lock
mov
xor
enter
inc
enter
ljmp
clc
stos
dec
in
xchg
sbb
jp
lret
fisttpl
icebp
lcall
mov
pop
push
and
pushl
mov
aaa
xchg
inc
xchg
aaa
push
jns
ret
sti
sbb
pop
xchg
std
or
jl
inc
lcall
cmc
stos
mov
sbb
pusha
mov
cltd
popa
call
cld
loopne
je
ret
xchg
push
rcll
ficompl
sahf
inc
testl
hlt
jns
mov
xchg
inc
shll
ret
mov
mov
or
out
add
jb
iret
xchg
dec
add
push
mov
call
shl
xchg
xchg
jbe
dec
or
mov
push
xchg
add
imul
push
fwait
les
add
jge
jg
push
lds
or
jge
stos
xor
mov
je
pop
sbbb
xchg
ds
dec
cltd
adc
fwait
sbb
scas
jecxz
pop
mov
fildll
mov
mov
fwait
aaa
incl
or
xchg
mov
mov
jns
incl
icebp
cmpsl
sbb
dec
xor
inc
lcall
cmp
inc
xchg
pop
imul
pop
movsl
icebp
xchg
hlt
nop
gs
or
ljmp
mov
addr16
add
lahf
notb
pop
in
icebp
adc
mov
pop
mov
cmp
jle
ljmp
pop
mov
mov
jle
out
mov
arpl
jecxz
sahf
adc
cli
jmp
cmp
push
mov
xchg
rcrl
test
cmpsl
lods
push
push
xchg
push
out
mov
push
jb
mov
adc
test
incl
or
xor
insb
xchg
xor
cmpb
jg
xor
clc
mov
mov
jg
adc
pop
shll
xchg
xor
mov
clc
out
sarb
je
into
stos
loope
mov
pop
call
cld
pop
rolb
mov
mov
pop
push
sahf
fstpt
mov
shlb
data16
xor
add
pop
pusha
les
mov
lahf
pushl
add
push
xchg
loope
pop
rorb
movb
add
int
xor
xchg
xchg
mov
pop
or
push
popf
mov
sbb
push
cwtl
test
mov
cmpsb
jle
outsb
call
scas
jmp
aaa
push
negb
mov
test
mov
dec
cwtl
sbb
cs
ffree
mov
inc
mov
sahf
push
enter
cmpsb
and
inc
mov
adc
arpl
lock
cli
adc
pushl
loop
lods
cltd
mov
out
sbb
jnp
add
addr16
fdivrp
shll
mov
fwait
mov
in
mov
mov
mov
cmpsb
jl
nop
adc
pop
pushl
int
out
movsb
mov
xor
pusha
test
jb
mov
call
mov
push
cmpsl
int3
xchg
les
mov
jnp
das
adc
pop
lds
cmpsb
xor
push
inc
lcall
bound
in
fiadds
cmp
loope
dec
repz
inc
pushf
adc
ror
lret
scas
fidivl
inc
sahf
les
jbe
out
and
loopne
xchg
mov
lea
sub
xchg
cmpsl
push
xor
push
lock
into
pop
repz
call
mov
inc
mov
call
xor
leave
repz
loope
stos
mov
out
mov
inc
das
clc
jp
xchg
push
repnz
adc
mov
ljmp
mov
or
xchg
fcoml
cmpl
mov
mov
mov
xor
xor
dec
repz
decl
sbb
mov
add
lret
mov
aam
divl
arpl
xor
cmpsl
mov
lea
pop
test
inc
ljmp
into
adc
cmp
cmpsb
scas
cmpsb
pop
mov
repz
push
lahf
shrb
rep
jmp
xorb
ja
mov
inc
and
ljmp
sub
mov
ficompl
pop
imul
jno
in
andb
xchg
push
and
mov
add
pop
movsb
scas
mov
pop
push
and
mov
in
repnz
repnz
enter
xchg
add
mov
xchg
test
sahf
test
xor
repnz
push
and
movsl
movsb
mov
iret
in
leave
lahf
mov
push
sub
jae
xorb
movsb
sahf
cmpb
push
xchg
mov
jns
mov
xorl
repnz
push
rolb
iret
in
andl
pop
xchg
pushf
cmp
add
dec
mov
fs
dec
cwtl
and
int
inc
cmpsb
and
cmp
sub
xchg
es
xlat
mov
mov
out
incb
repnz
mov
xor
sahf
arpl
decl
cmp
jbe
repz
pop
aad
mov
sub
cld
dec
mov
popf
mov
test
test
cmpsl
dec
rcrb
xchg
mov
jle
insl
cmp
aaa
adc
xchg
sbb
push
xchg
fnsave
sbb
mov
mov
xchg
xor
jge
push
xchg
dec
xchg
es
push
mov
scas
xor
call
add
xchg
arpl
adc
dec
jp
cmpsb
sbb
and
ret
mov
sbb
mov
xchg
negl
mov
xor
pushl
pop
movsb
cmp
mov
fisttpll
sti
orb
jg
stos
ss
and
or
pusha
std
or
incl
pop
mov
mov
sti
test
adc
fdivrs
or
lcall
pop
cmp
inc
mov
movsb
pop
clc
mov
cmp
out
ljmp
xchg
dec
xchg
test
imul
aas
andl
inc
inc
mov
lcall
cwtl
add
dec
incb
mov
inc
clc
sub
popa
mov
mov
out
ljmp
inc
jl
ja
xchg
mov
push
idivb
pop
or
ljmp
dec
dec
mov
mov
and
mov
pushl
cltd
imul
cltd
jnp
xchg
movsl
jmp
popf
imul
mov
jae
lahf
lcall
dec
lahf
xchg
add
lock
xchg
outsb
push
xchg
xchg
mov
cmpb
cmp
adc
xchg
jl
outsl
rcr
mov
mov
js
xchg
in
cld
xor
ljmp
rorb
test
xchg
pop
sti
cmp
xchg
mov
insl
pushf
stos
mov
cltd
xorb
lds
mov
repz
push
std
and
jg
sbbl
sbb
dec
jecxz
dec
pop
xchg
pop
subb
lret
dec
rcrl
cwtl
cli
xchg
das
clc
call
sarb
adc
es
pop
inc
mov
mov
fwait
dec
lds
push
loope
mov
pop
mov
cld
aaa
mov
lahf
jmp
pop
jb
test
mov
cmp
lret
cmp
stc
cmp
incl
or
push
pop
xchg
ret
xchg
pop
rorl
int3
cmp
inc
mov
push
mov
jg
test
push
js
lcall
cmp
push
mov
sbb
pop
mov
and
mov
bound
cmp
push
cmp
movsb
mov
add
fdivrs
stos
mov
and
insl
lahf
jae,pt
lcall
xchg
jmp
push
cmpsl
loop
jmp
inc
les
aam
push
pop
sahf
pop
xlat
push
mov
xchg
cmc
or
mov
inc
data16
lret
mov
jg
mov
aas
dec
stc
cmpb
addl
inc
js
call
cwtl
push
xchg
jp
mov
movsb
ljmp
outsb
cmc
adc
xchg
sbb
mov
pop
nop
test
sahf
mov
pop
mov
mov
or
mov
rcrb
scas
mov
mov
test
pop
jg
int
bound
cmp
xchg
test
mov
aaa
outsl
cli
adc
xlat
inc
dec
cld
jb
lcall
icebp
inc
decl
popa
fwait
xchg
notb
ljmp
inc
stc
xor
add
bound
iret
cmpsb
dec
xlat
mov
in
pop
fs
icebp
cwtl
jmpw
pop
loop
pop
dec
loope
cmp
mov
hlt
mov
mov
int
aad
inc
lret
shll
lock
out
jno
decl
jnp
cmpsb
dec
int
fimuls
mov
cmc
mov
call
out
lods
test
pop
ja
push
xchg
xor
push
inc
sbb
shlb
dec
push
movsl
add
xchg
out
fwait
push
sbb
out
or
add
xchg
cmp
jmp
jg
mov
inc
rolb
sub
clc
or
jb
das
clc
sbb
sti
inc
es
sbb
popl
imull
or
and
stos
and
fisttpll
imul
inc
loopne
lods
adc
or
aaa
sub
decl
jae
shll
push
popa
scas
pop
push
cltd
data16
lea
push
xchg
inc
dec
cmp
rclb
outsb
data16
push
arpl
mov
mov
addr16
scas
pusha
jge
push
add
imul
mov
sub
filds
jo
mov
dec
pop
inc
xchg
jno
fcomip
inc
mov
push
fidivs
inc
inc
fdivrs
dec
push
repz
mov
adc
divl
mov
pusha
inc
cmpsb
and
aam
inc
dec
jge
push
pop
mov
and
pushl
mov
xor
xchg
test
jno
std
lcall
fs
push
loope
daa
inc
lds
pusha
dec
pop
cwtl
push
scas
inc
pop
stc
lcall
ljmp
aas
jp
gs
test
outsb
jge
jbe
mov
fs
shlb
call
jno
test
jg
push
ds
cmp
xor
add
jns
push
mov
imul
and
xorl
orl
adc
or
push
mov
loope
mov
incl
add
xor
dec
ljmp
inc
dec
adc
mov
or
mov
push
mov
ljmp
out
push
jae
inc
sbb
push
dec
movsb
adc
lods
mov
clc
decl
popf
int
pop
push
ficoml
sbb
inc
ja
jmp
mov
and
adc
xchg
mov
xchg
sahf
jle
pop
std
outsl
mov
cmp
inc
inc
repz
sti
adc
or
outsl
mov
scas
cmp
pop
sub
jge
jmp
sub
dec
sub
push
out
inc
add
test
insl
mov
pop
jle
pushf
mov
dec
jg
ja
outsb
add
push
and
sbb
inc
pop
xor
test
fldenv
in
ja
test
mov
adc
jg
fs
lcall
fs
adc
inc
lods
sarb
scas
pop
pop
in
push
mov
or
cmpsb
repnz
jo
pop
add
dec
mov
add
dec
leave
mov
lcall
and
add
aas
adc
ljmp
pop
movsl
packssdw
in
movsb
mov
adc
add
mov
scas
mov
lret
mov
ljmp
push
mov
or
sbb
push
ljmp
sub
adc
fiaddl
out
xchg
aam
lcall
pop
and
cmp
idivb
mov
jns
adc
inc
dec
pop
mov
pop
inc
aaa
mov
js
mov
jns
xor
cmp
xor
mov
sub
das
mov
int3
add
decl
lods
push
dec
in
mov
sarb
sbbb
leavew
push
idiv
stos
lcall
daa
inc
daa
xor
mov
test
xchg
imul
ds
movsl
cmpsb
mov
mov
nop
xor
loopne
sahf
ljmp
push
dec
xchg
pop
insb
icebp
xchg
dec
dec
rorl
stos
mov
mov
add
mov
xor
sahf
call
push
pop
lahf
scas
and
sar
incl
mov
jecxz
jo
sarl
imul
mov
add
scas
test
adc
movsb
lock
popl
mov
mov
clc
aaa
push
mov
jne
pop
addl
mov
or
xchg
cmp
ret
or
icebp
test
adc
push
ud0
sub
addr16
js
mov
mov
ljmp
push
pusha
inc
hlt
dec
jge
mov
shll
cmpb
shrb
or
cmovl
int3
mov
add
test
mov
push
mov
clc
decl
dec
test
data16
adc
cltd
mov
sbb
into
popl
sbb
xchg
pop
clc
decl
ja
xor
push
or
lea
outsl
mov
jae
mov
lret
xchg
cli
decl
lret
inc
pop
repz
jl
clc
add
in
dec
jecxz
push
pushl
or
pop
pop
mov
loop
clc
lcall
test
adc
mov
sub
jae
cmpl
jg
lock
sahf
xchg
out
mov
lods
sbb
arpl
out
movsb
lock
cs
dec
mov
mov
or
es
ds
xor
loope
mov
into
popf
xchg
jg
fucomi
bound
in
mov
movsb
push
xchg
movsb
inc
les
fnstsw
dec
insb
mulb
jg
test
adc
in
test
into
xor
pushl
cmp
mov
les
mov
inc
fs
psubd
add
icebp
incl
dec
add
fwait
daa
inc
cwtl
add
xchg
aas
outsb
lods
loope
jl
xchg
jbe
add
pop
hlt
test
cmp
cmpsl
xchg
insb
pop
sar
jmp
push
sbb
lret
xor
jmp
or
adc
or
repz
xchg
clc
lds
sub
scas
sahf
test
mov
out
xlat
subl
insl
adc
and
jg
jns
into
fnsave
mov
xchg
jbe
push
mov
mov
es
sbb
jbe
mov
xchg
adc
mov
mov
dec
lock
lods
negb
xchg
adc
sub
push
test
test
fiadds
cwtl
sahf
cmpsb
repnz
ds
add
stc
lods
incl
enter
inc
int3
push
loopne
insl
xchg
scas
inc
jnp
in
sbb
xchg
xchg
pushf
push
decl
stos
mov
xchg
dec
sbb
mov
inc
lret
mov
inc
cltd
or
push
add
inc
mov
push
scas
or
fwait
mov
pop
push
jle
fwait
or
add
jle
xchg
and
jle
jne
fiaddl
adc
sbb
dec
sar
and
filds
out
fstl
popa
xorl
dec
jbe
loop
inc
inc
mov
je
pop
sub
popf
mov
loopne
lcall
fldl
sti
out
push
lahf
add
inc
pop
int3
insb
pop
ljmp
inc
movsb
ja
dec
scas
popa
xor
mov
adc
sbb
dec
dec
lds
rcrl
idivb
sahf
ljmp
arpl
jbe
ja
aam
bound
out
add
inc
mov
test
cmpsb
inc
sarb
out
push
call
out
imul
cld
hlt
push
test
cli
incl
cmp
popa
iret
pop
xchg
in
aas
mov
or
lds
inc
into
mov
movsl
bound
jb
call
mov
pop
jo
popa
mov
test
fisubrs
inc
loope
mov
movsl
and
mov
sarb
jg
jl
loop
jmp
int
xchg
cwtl
fwait
mov
jecxz
push
es
jg
inc
mov
dec
inc
push
addr16
add
push
jmp
xchg
push
es
cld
add
incl
xchg
negb
scas
mov
mov
add
mov
repz
inc
inc
out
adc
jo
out
dec
push
sub
inc
loopne
incb
pop
dec
mov
hlt
cmpsb
gs
and
out
ret
jle
jl
mov
decl
insb
mov
scas
fcmove
push
cmpsb
mov
arpl
ficoml
lcall
std
xchg
mov
into
stos
xchg
addr16
pop
test
cmpsl
cmp
outsl
jmp
cld
mov
fcomip
jo
jle
cmpsl
or
xchg
pop
add
lock
aam
into
mov
call
pop
lds
jb
add
ds
mov
sahf
xchg
jmp
xchg
bound
push
addr16
push
push
fidivs
or
mov
ds
mov
sub
sbb
fcmovb
insb
ja
pop
pusha
icebp
mov
insb
push
push
add
or
mov
push
inc
loop,pt
mov
mov
fcmovnbe
dec
mov
clc
lcall
sbb
cmp
jecxz
test
fcomip
sbb
pusha
adc
pop
imull
cmpsb
push
pop
leave
jbe
jp
or
push
data16
jno
lret
mov
mov
rorb
mov
out
pusha
frstor
mov
pop
rclb
pop
andl
jmp
inc
jns
int3
pop
inc
mov
arpl
iret
dec
push
aad
arpl
add
cwtl
ljmp
xor
out
dec
mov
pop
insb
in
inc
push
push
data16
inc
rcr
inc
inc
pop
es
sahf
out
repnz
clc
inc
lods
xchg
mov
loopne
aaa
cld
cmp
pop
ja,pt
shrb
lods
dec
imull
mov
leave
mov
int
push
inc
mov
into
sub
xor
call
sub
cwtl
bound
push
mov
decl
push
daa
dec
loope
pop
scas
mov
xor
fcomi
sbb
jle
je
rcrb
aas
or
inc
sbb
pusha
jl
loopne
jge
push
inc
int
clc
call
xchg
jmp
leave
push
nop
mov
lock
adc
insb
dec
jbe
rolb
repnz
dec
dec
std
fidivrs
inc
dec
ret
decl
or
mov
lds
orb
repz
es
push
jecxz
mov
mov
inc
aad
int3
outsb
mov
repz
jg
pop
loope
adc
cs
push
subl
or
int
jg
cmpsl
pop
out
push
in
jns
insb
add
push
adc
in
mov
sub
dec
dec
adc
int
cmp
fists
or
enter
stos
pop
add
outsb
mov
mov
jge
mov
clc
fst
inc
xchg
into
mull
sar
call
xchg
inc
lods
nop
lcall
insl
scas
inc
iret
xor
push
hlt
and
mov
pop
iret
jae
push
ret
sahf
mov
inc
pop
into
adc
inc
dec
ret
fwait
lods
rol
dec
movl
push
mov
cs
push
and
fcmovnb
xor
stos
xchg
pop
rol
incl
cli
or
cs
lahf
js
dec
sub
or
les
adcl
push
push
cld
jge
rclb
ret
stc
jae
lea
ljmp
decl
sbb
aam
mov
xchg
mov
loop
adc
cmc
popa
xchg
jecxz
dec
adcl
and
gs
rcrb
push
fisttpl
outsb
and
loop
test
decl
lods
cwtl
and
lods
pop
cmpb
push
fucom
pop
popa
loope
mov
inc
scas
inc
mov
es
cmpsb
and
dec
stc
dec
ja
push
scas
cltd
mov
lock
cmpsb
push
pop
incl
or
les
cwtl
mov
out
fmull
in
mov
leave
addr16
dec
sbb
jmp
mov
ds
test
inc
andl
clc
jae
pop
mov
pop
pop
jmp
mov
rcll
push
shr
movsb
jl
jp
cld
sub
aaa
in
jo
es
and
outsb
dec
clc
sbb
cmp
popa
loope
mov
scas
adc
movsb
and
scas
dec
jo
orb
jbe
adc
les
jp
out
add
ret
repnz
sbb
inc
stos
js
cli
ljmp
mov
xor
xor
repz
inc
sub
jb
pusha
inc
fistl
mov
cld
out
dec
cmp
ret
pusha
std
cmc
jae
ja
decl
lods
mov
sbb
aas
mov
mov
cmpsb
and
ljmp
mov
pop
mov
or
aas
into
xchg
xchg
sbb
xchg
and
shll
std
ret
rorb
addr16
mov
fwait
divl
fiaddl
arpl
adc
xchg
fiaddl
bound
test
jp
fnstenv
dec
loopne
sbb
push
adc
sbb
test
add
out
clc
mov
mov
cmp
jp
xchg
shlb
ljmp
xchg
outsl
dec
in
add
cmc
xchg
dec
cmp
xor
mov
loopne
mov
mov
daa
jno
sbb
xor
adc
dec
xchg
movb
xchg
popa
xor
pop
pop
push
mov
loop
add
dec
lret
and
xchg
movsb
inc
sbb
add
xchg
add
ljmp
jbe
dec
push
sbb
cltd
ret
pop
add
jmp
sbb
and
cs
jl
and
test
add
mul
sarb
leave
clc
incl
push
xor
imul
lret
lock
ljmp
je
in
push
push
movsb
sti
nop
cmp
stos
out
outsb
mov
push
push
mov
mov
mov
addr16
out
push
jae
sbb
add
mov
sbb
pop
es
mov
pop
les
mov
jbe
aad
lods
lea
jmp
jno
ficoml
sti
pop
mov
push
shl
dec
outsb
jno
sub
ljmp
stc
push
lcall
arpl
nop
sar
call
jo
jns
inc
and
or
les
insb
addr16
lods
aas
js
dec
xor
sbb
dec
mov
adc
sub
ljmp
push
shrl
adc
js
lcall
push
pop
les
xchg
shll
scas
stc
mov
and
mov
jmp
shl
stos
mov
push
shrb
dec
incl
mov
mov
imul
add
inc
mov
inc
shll
pop
cld
jmp
xorb
xchg
mov
rsm
pcmpgtw
nop
mov
fisttps
enter
push
adc
jp
inc
insl
mov
cmp
mov
insl
mov
loop
pop
cld
call
js
fs
push
jbe
inc
outsb
out
loope
push
movsb
adc
cli
ljmp
mov
push
mov
sbb
clc
icebp
sub
xor
mov
gs
inc
sbb
cmpsl
ss
decl
aad
pop
adc
cli
and
sub
add
and
add
cmpsl
lret
lods
push
and
aaa
push
incl
xchg
fdivs
leave
push
lahf
push
inc
pop
mov
jno
clc
jg
call
loop
imul
xchg
imul
push
add
pop
inc
cmp
adc
sbb
aaa
cmp
mov
out
pop
outsl
sbb
das
or
popa
xlat
sub
xor
jl
lea
sub
jmp
addr16
outsb
jne
mov
cmpsb
and
mov
jg
js
inc
mov
push
mov
jg
test
sahf
xor
mov
out
inc
lock
lods
mov
rcrb
bound
scas
lcall
std
mov
mov
mov
dec
sbb
outsl
out
xchg
dec
aas
test
ret
ja
test
je
jns
imul
stos
enter
mov
lds
xor
lcall
call
cmp
es
stos
add
push
pop
lods
mov
sub
outsb
jp
sbb
addr16
test
das
mov
stos
lods
and
xor
adc
aas
or
incl
out
fwait
scas
aad
inc
fmuls
push
ret
ljmp
push
in
xchg
pop
imul
or
frstor
pop
cld
cmpsl
movb
andb
dec
stos
cmp
es
pop
xor
cli
test
out
mov
jg
scas
push
scas
ret
or
mov
inc
ret
aad
xor
das
sub
cmp
addr16
sbb
sbb
pop
add
mov
sbb
cmp
cli
pop
imulb
cmp
push
ret
fnstcw
out
mov
incb
dec
xor
dec
es
in
es
movsb
pop
ljmp
xor
jecxz
adc
add
xor
sbb
xor
or
mov
dec
xchg
pop
sarl
mov
inc
jne
or
push
jb
or
out
inc
mov
fdivp
fwait
or
add
mov
push
sahf
inc
jmp
mov
bound
cmp
and
sbb
sub
inc
sbb
sub
pushl
dec
data16
jbe
ds
mov
inc
test
aam
cli
cmp
pop
getsec
mov
xor
xchg
mov
ljmp
add
pop
rcll
dec
mov
enter
loope
mov
insl
loopne
mov
addr16
aaa
dec
aas
mov
cwtl
push
push
or
mov
test
outsl
idivb
decl
inc
pop
jg
mov
incl
ds
movsl
popf
or
enter
scas
and
push
pushf
cmpsl
sub
mov
rclb
je
add
fmuls
xchg
mov
scas
add
mov
jmp
call
jbe
mov
pop
sbb
and
pop
push
adc
pop
inc
add
mov
push
inc
mov
add
push
sbb
mov
mov
bound
inc
jmp
mov
stos
rol
push
mov
push
dec
push
aaa
push
outsb
idivb
pop
dec
sbb
es
or
dec
scas
mov
std
inc
test
mov
aaa
cmp
jg
lcall
scas
mov
and
enter
or
sub
mov
xchg
ds
aam
inc
xor
or
xchg
or
pop
es
adc
jg
or
loopne
js
cltd
inc
leave
inc
sahf
sbb
cmp
sbb
dec
dec
push
nop
jae
or
mov
aaa
dec
les
outsb
ss
adc
gs
aaa
mov
das
iret
scas
pop
dec
popf
adc
outsl
sbb
add
lret
adc
pop
sbb
fdivrs
inc
pop
mov
shlb
fwait
and
mov
mov
cmpsl
xorl
out
loop
and
int
xchg
out
mov
xchg
in
mov
mov
aad
mov
cli
jg
mov
adcb
mov
lret
ljmp
arpl
jb
sbb
adc
adc
cld
mov
aam
sahf
dec
sbb
ljmp
ficoml
mov
xchg
data16
sbb
cmp
xchg
add
push
inc
fadds
mov
jmp
mov
fs
into
push
inc
jge
fs
adcb
into
mov
cmc
lcall
scas
dec
fs
call
loope
mov
cli
or
and
lret
sbb
pop
stos
pop
int
mov
pop
lret
insb
out
stc
testl
xchg
xchg
shr
es
scas
xchg
cmp
inc
mov
jno
sub
pop
mov
cltd
ljmp
arpl
jae
or
mov
push
jge
lea
in
xchg
imul
js
loopne
fwait
mov
pop
loopne
inc
mov
outsb
add
mov
xchg
mov
cmpsl
inc
enter
addl
jmp
push
dec
mov
decl
pop
jl
mov
cmpb
cld
mov
mov
repz
mov
cli
mov
call
test
decl
adc
push
filds
adc
mov
jns
stos
add
pop
incl
push
mov
inc
inc
jnp
mov
sbb
outsl
in
cli
mov
fsubrl
pop
scas
aad
mov
insb
adc
cld
inc
inc
push
aad
test
movsl
inc
popf
adc
inc
push
ljmp
fisttps
loop
pop
dec
outsl
and
movsb
popa
sti
jmp
mov
dec
in
ds
repnz
jne
popf
nop
mov
popa
test
call
mov
fbstp
lods
imul
std
sub
push
xchg
in
les
ljmp
mov
dec
jb
iret
mov
je
mov
es
stos
mov
ss
pop
push
in
mov
rolb
repz
ss
mov
pop
push
jge
mov
and
xchg
mov
out
sbb
mov
mov
cmp
ret
add
jecxz
or
pop
subb
in
lds
jne
mov
mov
lret
popa
push
adc
jmp
xchg
into
push
repz
loopne
fcoml
pop
subb
std
dec
std
xchg
cltd
lods
lods
inc
cltd
dec
data16
out
jae
jle
sbb
bound
pop
push
sbb
adc
sahf
cltd
mov
push
inc
xchg
fwait
scas
sahf
cmpsb
mov
cli
decl
divb
pop
cmp
jno
jbe
bswap
jmp
lcall
out
sbb
test
push
jle
inc
hlt
cmpsb
clc
cmp
fs
push
sbb
roll
or
pop
es
inc
rol
call
mov
pop
or
fsubs
inc
jbe
dec
fsubr
nop
pop
sub
jg
into
jmp
xchg
cwtl
stos
shlb
test
repz
cmpsb
add
mov
shl
push
and
mov
shl
jecxz
cwtl
aam
cmp
outsb
in
push
and
shll
jbe
incb
dec
sahf
sahf
in
mov
test
loopne
cld
ljmp
pop
jbe
cmp
xchg
inc
call
jge
popf
jnp
jne
cmc
pushw
es
adc
jg
stos
jg
je
lret
stc
xor
jp
sub
sbb
sub
push
cvttps2pi
ret
jbe
mov
loope
es
jbe
out
icebp
out
cmpsl
push
out
mov
push
les
outsl
jle
out
notb
fistpll
mov
enter
dec
addr16
mov
repz
int
push
inc
mov
clc
jg
dec
dec
shlb
push
scas
rclb
jg
ret
ret
jo
arpl
loope
mov
pushl
pop
pop
add
loopne
mov
ljmp
pushf
popf
mov
lods
mov
out
mov
fimuls
cmpsb
mov
les
cltd
and
adc
cwtl
fucomi
orl
ret
inc
int
push
insb
divb
dec
push
shr
mov
decb
scas
lods
sahf
mov
es
adc
icebp
sbbb
cld
xchg
iret
in
xor
push
jo
dec
add
dec
int3
fmuls
jmp
je
out
ss
push
cld
aas
jg
in
mov
imul
outsl
adcw
ljmp
into
iret
test
mov
add
pop
jle
xchg
idiv
scas
decl
inc
pop
movsb
arpl
and
pop
nop
clc
cli
xchg
mov
xchg
jecxz
xor
add
mov
xor
popa
shll
into
dec
loope
inc
inc
sbb
cmp
pushl
insb
sar
js
ljmp
frstor
fwait
mov
mov
xor
mov
push
icebp
add
inc
xchg
mov
scas
ds
je
add
push
cmpsb
lahf
mov
jg
test
jl
cmpsb
into
dec
imulb
jbe
stos
ss
mov
dec
push
xchg
cld
jg
jle
and
xor
imul
iret
outsl
push
data16
in
mov
icebp
rcr
test
mov
xchg
jp
inc
mov
mov
lcall
loop
mov
push
mov
repz
rcrl
mov
jl
shl
cltd
es
in
hlt
push
incl
loope
movsl
mov
sub
dec
test
je
jmp
mov
fadds
addb
jmp
outsb
gs
pop
xchg
out
cwtl
movsb
xchg
push
push
jo
inc
in
sub
add
lahf
xor
lock
lods
mov
xor
scas
repz
repz
cmp
icebp
cmpsl
lea
je
test
shrb
pshufw
mov
pmulhuw
out
data16
dec
les
push
jl
cmpsl
push
repnz
mov
sahf
mov
jp
enter
aaa
inc
mov
loop
fdivr
adc
sub
out
les
or
ss
int3
xchg
pop
repz
dec
push
mov
add
lcall
call
sahf
add
jnp
mov
ljmp
test
fidivl
into
xchg
repnz
cmp
call
outsl
adc
fucomp
mov
inc
or
in
clc
mov
mov
cli
mov
sub
push
cmp
aad
jg
incl
sbb
mov
pusha
imul
sub
jno
fdivrs
std
dec
xor
out
out
call
icebp
cltd
out
and
or
cltd
dec
shrb
sbb
hlt
pop
out
mov
incb
test
jo
addl
inc
jmp
notb
jle
jmp
movsb
test
and
das
cli
jecxz
xchg
sahf
mov
mov
arpl
test
leave
mov
lods
pop
mov
stos
add
addr16
and
leave
mov
adc
fistl
lcall
pop
jmp
movsb
mov
popf
cmpsl
je
ss
mov
adc
jg
icebp
push
add
xchg
mov
rcrl
outsl
ss
mov
pop
mov
test
dec
insb
pop
cmpb
loopne
cmpsl
cmpsb
jne
es
in
pop
sarl
js
stos
in
pop
dec
sbb
sub
icebp
das
sbb
mov
movsb
lock
add
popa
stc
ljmp
inc
mov
inc
rolb
lahf
in
movsl
cmc
jmp
add
aad
aad
xor
mov
mov
sar
lcall
sbb
inc
mov
js
xlat
sti
mov
leave
sahf
xor
out
rcll
iret
pop
sub
incl
xchg
pop
mov
scas
lock
insl
push
push
mov
xchg
xchg
call
xchg
mov
jnp
and
fnsave
mov
lock
call
mov
push
ja
imul
rolb
mov
jmp
pushl
lods
push
jl
jecxz
sahf
in
lock
mov
mov
bound
ljmp
cmp
mov
ret
mov
mov
or
pop
cs
inc
cmc
cs
lock
fildll
out
or
push
fidivl
pop
jne
pop
stos
lret
xchg
mov
mov
push
test
sahf
push
insb
push
subb
jge
lahf
mov
fwait
jo
cmp
and
stos
fimuls
xchg
mov
mov
popf
loop
pop
ds
mov
sub
ds
subb
mov
inc
pushf
mov
rcrb
mov
lahf
cmpsb
mov
fistpl
mov
cld
mov
lea
push
jb
add
jle
sbb
and
imul
inc
push
scas
mov
out
fmull
test
or
mov
das
clc
shll
clc
jbe
jmp
aas
add
lret
sub
into
adc
jg
clc
or
aad
add
loopne
clc
push
push
cmp
loope
sahf
stos
pop
rcrb
mov
out
jmp
dec
int
sar
or
iret
xchg
stos
mov
cli
sahf
xchg
add
call
lods
cmpsb
mov
aad
xchg
push
jl
jecxz
lock
jbe
or
and
sbb
nop
mov
push
jb
pop
jg
clc
jmp
ror
push
cwtl
aam
dec
out
out
lret
fmul
jg
xchg
test
loope
sahf
hlt
cwtl
and
insl
xlat
popa
fcoml
in
movsl
cwtl
nop
pushf
push
test
fildll
push
stc
clc
xchg
and
adc
inc
mov
pop
adc
xchg
inc
push
orb
stos
push
xor
not
dec
fldl
ret
rcr
int
lcall
int
pop
mov
mov
sub
sbb
push
mov
scas
push
pop
dec
test
incl
sahf
jle
jb
fs
jb
xor
jp
pop
mov
outsb
gs
sarb
xor
insb
add
incl
decl
pop
test
lods
std
add
add
stos
dec
xchg
and
sar
cmp
mov
jb
cmp
insl
subb
inc
or
mov
and
in
pop
jno
mov
dec
xchg
cmp
test
and
or
add
cmp
imul
sbb
flds
push
fs
adc
movsb
inc
mov
mov
or
mov
je
popa
sbb
or
mov
cwtl
adc
pop
sbb
sub
xor
push
cs
cmp
xor
clc
decl
stos
add
popa
and
jns
xchg
lcall
das
xchg
jbe
push
push
in
push
fnstcw
js
xchg
pop
ss
test
ja
stos
mov
addr16
adc
or
fmull
push
stos
dec
dec
dec
ret
or
addb
ss
push
inc
mov
add
por
inc
ss
xchg
pop
push
xchg
dec
gs
add
mov
jg
pop
xchg
cld
ja
fsubs
ret
or
xchg
xor
sbb
icebp
mov
mov
jbe
mov
insl
pop
inc
std
scas
scas
adc
leave
xchg
add
sbbl
and
jae
popa
push
push
push
insb
loopne
sar
xchg
testb
cmp
shll
jb
sbb
addb
xchg
ss
pop
cmp
mov
in
push
pop
mov
push
push
adc
test
out
cs
push
fildll
mov
jge
stos
sbb
and
in
mov
adc
aaa
add
adc
aaa
movsl
pop
xor
mov
add
mov
divb
adc
cmp
xor
mov
sbbl
dec
cs
dec
inc
mov
lea
xchg
aas
mov
and
int3
daa
pop
mov
pop
loopne
lcall
cmp
pop
mov
push
sub
add
out
xchg
push
es
incl
int3
and
mov
out
add
mov
xchg
inc
popa
jnp
inc
cmp
sar
cmpsb
call
jl,pt
cmp
or
push
test
cmp
push
in
or
xchg
sar
ficompl
dec
pop
push
imul
pop
fimuls
mov
jmp
out
dec
jae
mov
pop
aas
lea
jg
ljmp
push
xchg
nop
inc
dec
xor
mov
sub
mov
test
into
mov
and
push
mov
xchg
dec
jo
mov
or
xor
call
in
mov
xchg
add
push
dec
stos
dec
dec
jae
push
add
and
cmpsb
push
ret
push
xchg
add
pop
movsb
sub
out
jne
dec
ljmp
es
mov
mov
outsl
add
es
mov
push
mov
scas
sar
addr16
xlat
jnp
and
imul
dec
ds
popf
ja
test
mov
or
cli
or
ret
dec
loopne
add
and
sbb
pop
or
out
or
pop
mov
mov
std
adc
mov
fnsave
daa
dec
cmp
mov
or
push
gs
adcl
adc
mov
movsl
xor
or
lea
mov
mov
push
test
scas
pop
fidivrs
push
mov
inc
incb
add
out
in
push
fstps
mov
iret
pop
push
sahf
movl
pop
cmc
pop
add
ss
fadds
jg
push
jbe
arpl
pop
fcoms
xor
cmpsb
dec
jae
sbb
ljmp
or
push
scas
pop
dec
js
push
add
lods
or
gs
sub
add
sub
mov
scas
cvttps2pi
mov
sarb
cmp
mov
pop
sti
mov
mov
adc
inc
in
pusha
lods
sbb
movsb
pop
adc
call
cwtl
add
nop
shlb
sbb
mov
shrl
imul
dec
pop
dec
arpl
fcomps
adc
in
pop
fsubs
xor
inc
adc
mov
adc
push
xor
add
push
imul
aas
mov
xchg
lret
int3
sub
jno
or
dec
push
inc
stc
outsb
jae
divl
jp
mov
hlt
decl
push
pop
push
push
in
pusha
jo
mov
cmpsb
dec
cmp
rorb
push
sbb
out
xor
xor
call
xorl
pop
rcrl
test
jno
jg
jmp
mov
cmovo
jp
inc
repz
outsl
es
in
imul
clc
jg
dec
and
out
or
cmp
sub
cld
pushl
inc
cs
pop
adc
push
test
shll
addr16
lcall
ffreep
pop
mov
cwtl
pop
lret
lret
or
inc
leave
sbb
lret
add
jg
pop
js
stos
xchg
mov
sub
mov
test
or
inc
or
mov
pop
fsubrp
mov
vmread
mov
sbb
xchg
iret
adc
jo
inc
xchg
scas
lods
adc
push
cmc
pushl
pop
es
es
sbb
xchg
dec
adc
mov
sub
les
xor
mov
inc
add
cltd
xchg
ljmp
popa
jmp
jne
jp
scas
adc
push
test
scas
dec
sti
test
inc
outsb
les
cmpsb
dec
push
dec
out
add
leave
mov
adc
add
push
lods
stc
adc
call
xor
outsl
mov
outsb
pop
call
adc
aam
xlat
fwait
loope
aas
mov
fwait
xor
rcll
fstpl
mov
loop
mov
je
adc
lods
inc
dec
rcrb
mov
inc
jecxz
cmpsb
xor
cmp
incl
sbb
xchg
sarl
mov
push
in
jns
leave
pop
mov
pop
push
es
mov
adc
mov
jg
jbe
push
or
push
sbb
mov
cli
add
pop
test
push
daa
lea
arpl
aas
out
adc
xchg
xchg
xchg
jne
mov
push
xor
pop
pop
aas
cltd
jae
sbb
jmp
jbe
dec
adc
sbb
dec
jb
dec
push
fdivrs
pushl
push
in
sub
xor
cltd
mov
outsb
add
sbb
add
jo
add
pop
aas
add
add
in
xchg
aam
xor
xor
movsb
dec
add
je
fbld
loope
mov
out
into
sbb
cmpb
add
popf
mov
dec
mov
ja
shrl
dec
clc
cmpb
shlb
fbld
sahf
aas
dec
mov
dec
aad
scas
scas
cld
ljmp
push
jg
or
testl
mov
stc
movsb
les
pop
fiaddl
xor
xchg
add
sub
je
pop
pop
xor
add
push
cmp
or
fisubrs
fwait
stos
add
enter
int
adc
pop
jae
jo
cmp
decl
jb
add
sub
stc
or
incl
add
je
pop
mov
pop
dec
stos
cmc
or
dec
add
jbe
scas
ljmp
push
aaa
pop
add
mov
mov
sbb
inc
push
mov
rcl
jmp
aaa
jmp
int3
dec
jbe
mov
xchg
push
jl
dec
ljmp
jbe
cld
xchg
jno
add
jmp
data16
or
cmp
std
xchg
push
sbb
sbb
inc
pushf
mov
mov
inc
mov
inc
push
push
ljmp
adc
test
dec
leave
jbe
imul
pop
dec
and
xor
sbb
icebp
call
popf
or
xor
data16
incl
mov
and
shrl
jns
push
shll
pop
jb
pop
xchg
daa
sub
add
push
incl
and
push
and
jns
sahf
mov
scas
ret
push
add
xchg
rclb
les
decl
pop
or
mov
lods
mov
mov
dec
mov
mov
add
inc
adc
jo
pop
sbb
push
outsb
mov
pop
sbb
mov
jg
andl
push
cmpsb
mov
lret
or
push
pop
sbb
pushl
xor
mov
lods
incl
xchg
jbe
bound
cwtl
mov
cmc
scas
sbb
pusha
cld
popl
outsl
test
lcall
push
cmp
sbb
out
in
sbb
mov
das
xor
andb
cli
and
inc
inc
lods
jp
shll
clc
push
pop
enter
test
mov
and
and
cmp
lock
inc
mov
pop
inc
popf
popa
ret
adc
out
and
cmp
fcomip
inc
sub
push
inc
je
es
movsb
and
dec
adc
or
xchg
push
mov
addr16
test
pop
and
sbb
xchg
pop
add
cld
scas
push
push
ret
sub
add
mov
push
sti
or
mov
sub
mov
adc
sub
iret
arpl
imul
outsl
data16
push
adc
add
punpckhwd
pop
xor
cwtl
je
mov
cmp
pop
roll
adc
mov
jge
xchg
push
shlb
imul
daa
mov
pusha
sbb
jg
clc
push
and
push
icebp
pop
or
sti
dec
jo
jae
xchg
xor
mov
adc
pop
mov
lcall
out
add
xor
push
shll
decl
add
sub
push
gs
jnp
and
or
movsb
pushl
imul
inc
adc
decl
leave
orl
sbb
lea
mov
jo
or
das
and
xor
cmp
dec
fs
pop
imul
inc
mov
and
lea
aaa
movsl
mov
aas
sub
test
sub
lcall
cld
out
pusha
std
inc
mov
scas
jle
out
xor
push
cltd
and
add
cmpsb
stc
mov
pop
out
or
in
aaa
stos
sbb
dec
xchg
xor
mov
inc
pop
add
jmp
xor
cmp
pop
push
or
push
ljmp
jb
dec
push
jp
jno
push
mov
outsl
clc
jbe
stos
xor
cmp
stos
inc
jl
push
push
push
jge
addr16
add
jg
push
sbb
add
cs
lea
mov
jae,pn
xchg
jbe,pn
dec
adc
push
ljmp
in
or
and
pop
inc
out
scas
fs
in
decb
data16
fisttpll
outsl
mov
sarb
sbb
pop
sub
stos
pop
cmp
rolb
fnsave
icebp
cmp
push
mov
xor
sbb
cli
movsl
mov
outsl
outsb
adc
jno
push
aas
mov
pop
cwtl
cmpsl
in
xchg
push
lcall
daa
sub
xchg
inc
push
adc
mov
outsl
pop
jne
inc
jb
pop
cwtl
cmp
and
jg
push
lods
add
dec
stos
mov
jbe
mov
and
xchg
lods
into
outsb
fldenv
cmpsl
fs
ljmp
ljmp
push
adc
pop
pop
mov
mov
add
jae
jae
cmp
mov
lods
lcall
les
ret
cmp
adc
arpl
decb
movsb
inc
lcall
mov
inc
inc
dec
xor
cmp
leave
cld
mov
jo
outsl
imul
push
mov
pop
cmp
mov
adc
mov
nop
test
push
pop
mov
jle
add
lret
clc
add
xor
pop
push
push
hlt
popa
cmp
call
aaa
into
lea
push
sub
sbbl
ljmp
mov
and
xor
mov
imul
mov
sahf
sbb
inc
loope
call
cmpsb
add
sbb
outsl
inc
shlb
ljmp
jle
popa
sbb
jle
adc
push
cmpsl
push
add
scas
and
aaa
or
arpl
jg
pop
stos
xor
adc
and
add
frstor
mov
mov
push
les
jmp
pop
adc
dec
daa
popa
clc
or
pop
enter
dec
les
pop
mov
icebp
dec
mov
cmpsb
in
mov
out
push
mov
inc
dec
aas
dec
jp
mov
sbb
ds
incl
xchg
cmp
ficomps
addb
mov
mov
xchg
shll
loopne
pop
pop
aas
es
sbb
ds
out
lods
sahf
loopne
mov
push
xchg
mov
inc
push
adc
xchg
stos
adc
mov
push
push
dec
xor
jmp
test
xlat
dec
lods
outsl
mov
stos
push
stos
pushf
push
mov
mov
pusha
xchg
scas
jge
xor
dec
cmpsl
cwtl
incl
insl
stc
scas
push
mov
mov
mov
loop
cwtl
cld
sahf
inc
push
mov
xchg
cmp
dec
decl
inc
mov
pop
mov
outsb
pop
xchg
test
mov
pop
aad
pushf
mov
pop
sbb
imul
lock
pop
cli
xor
inc
add
sar
out
mov
test
jge
sbb
pop
call
push
jno
mov
pusha
mov
xchg
lcall
or
inc
xchg
dec
imul
push
push
sbb
mov
aam
sbb
daa
movsb
scas
call
scas
add
fbstp
xlat
inc
dec
dec
loop
stos
xchg
mov
inc
push
adc
into
pop
xchg
mov
jae
cmp
push
jo
shll
arpl
subl
testb
scas
addr16
in
mov
cmp
adc
sbb
out
std
adc
sub
lahf
dec
push
dec
dec
cmpsl
push
jle
arpl
add
xor
mov
mov
test
inc
imul
sbb
mov
lea
pop
lock
mov
js,pn
ja
scas
jbe
adc
or
cmp
icebp
sub
push
jo
push
mov
sbb
add
mov
adc
or
sbb
inc
cmp
sbb
test
pop
xchg
daa
mov
sbb
lods
insb
lcall
loop
jle
sub
mov
out
sahf
roll
cld
pushl
loop
mov
jle
mov
jp
jne
inc
sbb
push
or
sub
mov
clc
incl
dec
fisttpl
mov
and
mov
pop
rcrb
mov
inc
push
shrb
bound
cmpsl
push
sar
xchg
push
mov
jg
mov
sub
mov
adc
jbe
loop
incl
outsl
push
inc
adc
sbb
jb
inc
adc
ds
loope
loope
inc
dec
inc
mov
clc
ds
aam
push
movsb
push
pop
add
mov
and
mov
xchg
xor
scas
cmp
cwtl
lods
pop
aaa
movsl
outsl
ss
inc
pop
and
and
cld
pop
lock
dec
jle
hlt
inc
insb
movsb
push
test
gs
lock
ds
push
pop
outsl
pop
scas
jmp
push
lods
dec
cltd
push
lea
inc
cld
ljmp
mov
inc
add
push
push
push
jge
lcall
jae
and
jl
imul
mov
or
jo
test
xchg
mov
das
mov
jl
push
sbb
pop
sub
or
pop
popa
loope
mov
fdivrl
call
cld
hlt
into
cmp
addr16
mov
cmp
sub
pop
adc
jnp
pushl
mov
jge
xor
jmp
mov
js
pop
cmp
pop
sbb
arpl
push
mov
mov
dec
adc
pop
stos
in
pop
xchg
pushf
jge
dec
sub
cmp
sub
dec
out
and
sbb
dec
mov
and
pop
dec
mov
ljmp
icebp
xchg
bound
mov
push
mov
fldenv
mov
adc
adc
push
inc
jno
push
ljmp
xor
gs
cmpsl
cmpsb
and
shrb
cmp
cmpsb
dec
jmp
loope
fsubrl
stos
je
cmp
lods
fcom
decl
daa
adcb
stos
insb
arpl
es
adc
nop
nop
pushl
push
pop
jbe
or
test
cmp
dec
stos
and
sub
roll
ret
sbb
sbb
in
inc
addb
icebp
out
add
out
out
outsl
adc
andps
cmp
or
call
and
xor
pop
popf
movsl
sbb
xchg
scas
out
rcrl
sbb
fcompl
push
jg
inc
stos
ja
loopne
mov
push
and
dec
mov
arpl
mov
pushl
int
push
mov
lea
cmp
bound
sub
sub
or
xchg
push
test
sbb
push
mov
dec
cld
lcall
mov
ret
sub
dec
aas
sar
mov
mov
aas
dec
daa
inc
fidivrl
in
ficoms
repnz
in
hlt
sar
push
ret
inc
add
xchg
xchg
sbb
ja
and
popa
jg
mov
into
lcall
mov
dec
fwait
mov
dec
mov
inc
test
jg
ja
test
add
pop
lcall
xor
dec
arpl
nop
and
das
jl
test
and
pushf
xchg
mov
sbb
mov
mov
mov
jmp
mov
xor
lret
or
aas
jnp
aas
mov
add
fcomip
in
cwtl
in
stc
sbb
cmp
out
xchg
repz
push
dec
bound
aaa
jmp
lret
inc
sbb
std
push
movsl
and
cmp
scas
push
ja
lods
ret
dec
mov
aas
std
sub
stos
jle
test
mov
sbb
mov
xlat
xchg
test
pop
sahf
cmp
ljmp
push
mov
cmp
mov
mov
cmp
adc
push
jp
dec
sbb
dec
adc
iret
mov
mov
pop
dec
mov
scas
pop
inc
pop
cmp
mov
xchg
cwtl
rorl
pop
mov
test
es
and
push
mov
and
loop
mov
fildll
dec
or
adc
cmp
ss
jnp
dec
adc
xchg
mov
stos
sbb
cmp
adc
sub
push
xchg
or
xor
sbb
clc
sahf
adc
push
cld
jmp
rcrb
mov
shlb
inc
adc
cmp
pop
cmp
xchg
ud0
lds
xor
pop
loopne
mov
lock
adc
cmp
and
ss
or
jl
cmp
adc
dec
sbb
sbb
lea
fbstp
cmp
cmp
add
inc
mov
lcall
pushfw
imul
xor
ret
pop
xor
stc
xchg
cli
inc
in
mov
decl
push
mov
xchg
pop
pop
mov
push
imul
push
in
jg
les
dec
adc
mov
push
sbb
inc
and
xchg
mov
cmp
mov
pop
imul
je
push
in
imul
add
push
push
clc
pushf
xchg
mov
lcall
pop
rcrl
das
hlt
fucomip
xor
ljmp
out
insl
dec
xchg
stc
pop
mov
ljmp
movb
cwtl
sbb
adc
mov
dec
lcallw
out
push
xor
shlb
jne
push
clc
loope
outsl
pop
orb
bound
inc
mov
aad
ja,pn
cmp
es
les
sar
lcall
mov
repz
fwait
mov
xor
dec
jae
aam
sar
mov
loop
scas
pushf
dec
lret
xchg
inc
xchg
mov
imulb
das
inc
out
cld
gs
lcall
jg
pop
cmp
jo
lds
lods
pushf
cmp
or
pop
and
inc
push
inc
leave
or
ret
add
jle
mov
lcall
dec
out
xchg
push
push
mov
stos
xchg
scas
mov
sub
pop
aaa
mov
mov
stos
dec
loope
or
out
cmc
push
fstl
dec
pop
add
pop
add
mov
add
inc
and
jg
lods
int
inc
or
mov
loopne
insl
aas
lret
nop
es
push
in
pop
in
jne
call
test
lds
push
cmp
leave
xor
inc
adc
mov
fwait
push
or
jbe
xchg
dec
jg
push
jne
int3
push
jmp
loop
outsb
pop
sahf
add
rclb
adc
aad
xchg
adc
dec
scas
sub
lock
and
push
icebp
push
sarb
pusha
cld
scas
mov
adc
lds
xor
mov
push
lret
cltd
push
inc
xor
das
pop
in
lcall
or
xchg
inc
dec
icebp
fcomip
xchg
scas
leave
repnz
loop
mov
in
sub
xor
incl
mov
xor
aaa
mov
dec
loopne
push
lret
leave
sub
out
in
cld
aaa
xchg
inc
mov
mov
lods
mov
pop
stc
mov
insb
call
std
data16
mov
in
pop
lea
sbb
xor
jp
ljmp
cmp
sub
pop
dec
jp
inc
push
jae
aaa
inc
inc
subl
stos
outsl
dec
or
add
pop
xchg
lods
mov
incl
je
dec
sbb
dec
jp
and
pop
ficompl
fldcw
adc
inc
sub
cli
add
and
adc
int3
mov
lea
aas
les
mov
fdivr
mov
cs
xchg
je
jo
and
push
mov
aam
pop
xorb
mov
sbb
pusha
mov
outsb
xchg
sbb
pusha
loopne
iret
int3
and
ret
loope
hlt
fildll
and
push
into
repnz
aam
push
pop
imul
or
sub
mov
push
mov
movsl
cs
imul
les
pusha
or
add
cmp
mov
out
test
cs
aaa
cmpsb
and
and
cmp
inc
mov
das
call
mov
sbb
pop
negb
mov
cltd
add
add
cmc
lahf
call
fiadds
push
mov
sahf
clc
xchg
jbe
cltd
ljmp
cmpb
insb
push
test
jbe
dec
out
mov
out
xchg
mov
jl
mov
stos
rorl
mov
mov
sub
xchg
and
sti
call
mov
dec
pop
pop
adc
mov
test
sub
push
ss
inc
mov
jl
sbb
pop
js
xorb
mov
adc
sbb
aad
jl
loop
pop
pop
push
jne
jmp
cs
mov
inc
dec
pop
das
fsubrs
orb
sub
jns
pop
je
push
sub
imulb
cwtl
rolb
cwtl
test
movsl
daa
inc
mov
and
sbb
adc
fldt
aas
add
and
mov
repnz
inc
xor
stc
inc
nop
hlt
fildll
xor
imul
push
out
mov
xchg
mov
sub
lahf
lds
ss
push
sbb
ss
lcall
scas
mov
pusha
repnz
loop
mov
les
inc
push
les
std
mov
adc
aas
adc
ret
sbb
rolb
popa
rorl
test
adc
pop
push
aad
enter
bound
lock
jle
fs
mov
xor
cmp
nop
and
addl
outsb
sub
lea
sbb
mov
mov
inc
cmpsl
add
ljmp
add
loope
mov
test
push
repz
pop
dec
jp
aad
jg
out
aaa
dec
js
cld
ficoml
aaa
sbb
out
inc
add
xor
movsl
into
cmp
push
mov
aas
push
cld
push
sbb
sbb
mov
ljmp
push
sbb
incl
test
push
and
cmpsl
push
adc
mov
fcomip
sub
cli
popf
lea
in
mov
xor
add
outsb
lret
cmp
jbe
sbb
das
adc
test
incl
mulb
ret
dec
enter
sbbl
mov
and
push
ja
push
out
or
fildll
xor
mov
cmp
test
and
add
pop
mov
mov
sbb
pop
and
mov
and
pop
ds
jns
xchg
int
pop
fs
push
aad
adc
or
sti
sub
mov
outsl
cmpb
emms
decb
push
push
aaa
jecxz
lcall
or
rcll
adc
jae
ds
and
in
lret
ja
inc
cmp
pop
imul
dec
cmp
mov
outsb
sbb
mov
fucom
sbb
push
sub
mov
jl
mov
pop
ljmp
scas
pop
sub
jmp
pop
out
std
add
mov
imul
dec
mov
popa
pop
enter
cli
pop
inc
scas
xor
jno
dec
mov
push
dec
mov
outsl
dec
aas
and
xor
fs
mov
lcall
or
out
jmp
lret
sub
out
inc
outsl
xor
ds
sbb
clc
loope
fwait
sub
out
mov
es
fldenv
push
popa
add
test
push
jne
jb
addr16
sahf
jg
mov
inc
rcrb
cwtl
push
fiaddl
dec
ljmp
call
or
push
into
add
insb
add
inc
pop
push
jb
push
imul
decb
loop
push
inc
mov
push
stc
es
jge
jne
jg
call
jge
sbb
or
push
xchg
scas
gs
cmp
leave
mov
lods
sar
mov
in
add
dec
push
pop
shll
out
xor
leave
adc
xchg
call
dec
dec
sbb
jg
ss
and
jg
outsw
sbb
add
pushl
or
cmp
cmpsl
jbe
shrl
and
out
out
arpl
je
or
and
cltd
repnz
inc
mov
iret
or
ja
lock
dec
in
enter
add
shlb
mov
or
fildll
add
mov
jns
push
icebp
push
jmp
cmpsl
xor
mov
jle
dec
jns
add
je
inc
mov
fistpl
shlb
dec
cmp
xor
notl
mov
out
mov
aaa
cwtl
clc
jmp
mov
insl
add
pop
or
mov
adcl
rorb
cmpsb
mov
notb
push
jp
jecxz
data16
movsb
adc
outsb
ljmp
scas
adc
adc
in
out
movsb
push
enter
lahf
mov
adc
cli
out
ret
outsb
and
lret
loopne
mov
das
movb
shll
iret
loopne
mov
add
out
les
or
repnz
ret
popf
ret
push
outsl
ljmp
lock
dec
test
push
insb
fiadds
jecxz
and
cmp
cld
orl
adc
scas
and
lcall
int3
cltd
test
push
mov
dec
pop
sub
sub
push
sbb
stos
mov
hlt
mov
mov
ret
ss
push
loope
das
add
aad
adc
fwait
loope
clc
jg
jecxz
mov
adc
push
xchg
cwtl
js
jo
icebp
sbb
lock
push
sbb
clc
scas
and
cmp
gs
pop
mov
cmc
pop
cs
mov
out
jno
xor
jge
inc
push
loop
sbb
xor
popf
icebp
aaa
cmp
cli
dec
mov
jb
arpl
push
inc
xchg
sahf
dec
jg
ficompl
ficoml
loop
scas
and
xchg
loop
jg
push
scas
push
add
adc
stos
out
inc
mov
pusha
sti
cmp
decl
mov
dec
push
je
pop
mov
push
insl
xchg
add
add
pop
imul
jg
imulb
inc
dec
out
cmp
mov
xlat
sbb
mov
and
cmp
jno
dec
adc
dec
cmpb
cmc
dec
pop
shll
sbb
adc
cmp
lods
aad
pop
mov
xchg
dec
push
fwait
add
xor
push
mov
push
xor
push
sbb
ja
push
or
lahf
inc
cmpl
fwait
push
or
and
imul
push
fwait
push
inc
icebp
pop
xchg
data16
mov
sarb
push
pop
scas
adc
jg
push
ret
je
subl
into
scas
jle
xchg
sub
xchg
push
int3
sbb
fwait
push
jae
clc
or
loop
sbb
push
and
arpl
adc
pushl
dec
out
or
test
mov
scas
jmp
mov
sbb
into
push
jbe
and
inc
lcall
add
jp
sbb
push
xchg
dec
fldcw
dec
push
jl
dec
scas
pushl
data16
cmp
loopne
jo
pop
cmpsb
dec
fstpt
inc
inc
loopne
jo
int
jg
sbb
dec
lret
loopne
mov
push
inc
sbb
les
pop
dec
ret
outsl
out
xor
imul
or
ljmp
jbe
test
js
aas
arpl
cmp
js
sub
and
pop
dec
jp
dec
fs
inc
testl
movsb
insb
stos
fwait
push
adcb
ds
mov
push
push
mov
mov
clc
andl
addr16
xchg
js
adc
sub
mov
imul
les
sbb
je
add
add
mov
cmp
loopne
adc
popf
sbb
cmp
ss
mov
push
pop
jns
es
stos
dec
cld
incb
mov
jo
lcall
adc
pop
jge
lds
sbb
clc
cs
jo
jne,pt
call
or
dec
stos
sbb
and
fbld
loope
mov
fstpt
sbb
add
mov
xor
pop
push
jmp
cwtl
add
ljmp
mov
daa
sti
adc
push
insb
std
mov
mull
cltd
add
stos
xlat
push
roll
cld
or
popa
std
icebp
adcl
ja
shrb
inc
icebp
stos
pushw
jbe
and
lds
frstor
mov
in
movsb
frstor
rcll
test
fdivrp
mov
or
xor
mov
sar
into
add
pop
mov
lcall
cs
clc
aaa
lahf
jmp
xchg
mov
stos
dec
xor
pop
xchg
lock
sahf
jne
into
cmpsb
ret
pop
xchg
ljmp
and
sub
adc
daa
dec
ds
std
push
mov
xor
mov
decl
sub
inc
xlat
xchg
push
mov
dec
es
adc
lcall
rolb
mov
movsl
int
movsb
push
add
fbld
cmpsl
in
adc
ret
xchg
sbb
dec
loope
push
ja
outsl
filds
sbb
out
scas
push
sti
mov
out
add
sbb
sub
cmpsl
mov
dec
and
mov
xchg
cmp
adc
push
dec
jno
add
enter
push
jmp
shlb
fiadds
out
jp
je
ja
mov
jo
scas
inc
mov
jne
adc
jb
mov
xchg
incl
aas
popa
imul
test
loop
dec
loop
jns
out
cltd
and
xchg
in
mov
pop
clc
jg
push
push
mov
adc
add
dec
es
push
mov
cs
inc
jmp
jo
test
ljmp
push
lea
inc
arpl
and
into
mov
cmpsl
add
xchg
cwtl
loop
mov
push
push
fs
and
ds
cmpsl
xchg
cmp
sbb
scas
rcrl
pushl
cwtl
fwait
add
test
call
rorb
pop
mov
inc
xchg
into
xor
mov
es
mov
xor
jg
cmc
cmp
rclb
mov
pop
cwtl
movsb
sahf
cmp
jbe
ljmp
loope
dec
fimuls
cmpsb
sbb
mov
or
mov
out
dec
jo
aam
shll
xchg
cmp
jne
dec
cld
cmp
pop
ds
lcall
scas
test
ljmp
and
inc
xor
testb
lods
xor
sbbb
mov
push
lcall
or
mov
mov
jecxz
sbb
nop
fidivs
pop
xor
mov
lcall
dec
cmp
pusha
idivb
adc
incl
mov
push
push
call
loop
loope
inc
mov
js
in
fs
push
push
pop
mov
add
pop
call
add
subl
out
jae
subb
loopne
inc
inc
pop
call
cmpsl
stos
inc
shll
loopne
shll
or
mov
sub
cmp
mov
jg
sub
arpl
aaa
ja
add
mov
push
xchg
dec
mov
pushl
inc
push
xor
xor
sbb
pop
mov
pop
test
jns
popf
decb
movsb
stos
inc
sub
mov
movsl
arpl
push
push
lock
lock
test
cmp
mov
divb
subb
aas
jbe
add
scas
sarb
sbb
das
outsl
pop
dec
cmpb
fiadds
sarb
cld
pushl
data16
dec
xor
cmpb
pop
rorl
sub
push
cmp
test
push
adc
sbb
push
je
or
ljmp
stos
sub
imul
mov
sbb
sbb
mov
decl
add
sbb
stc
lcall
lret
mov
pop
pop
ja
xchg
adc
and
pop
mov
push
inc
aam
or
fildll
cmp
xor
xchg
in
scas
xor
mov
incb
ds
xchg
dec
popf
jbe
loop
mov
push
frstpm(287
jbe
sub
inc
mov
into
push
inc
cmp
mov
aaa
std
imul
outsl
cmpsl
nop
lcall
mov
jo
push
jnp
mov
sub
push
jl
incl
arpl
scas
cwtl
push
pusha
mov
stos
or
das
lea
stos
push
in
je
outsb
leave
orb
test
xchg
adc
inc
fstl
call
bound
lea
incl
mov
loope
into
lea
scas
mov
or
lods
rorl
and
lea
outsl
push
test
inc
js
test
jmp
jle
pop
mov
mov
std
bound
bound
clc
pop
addb
mov
mov
add
sbb
sahf
icebp
lcall
rcrb
fadds
push
ret
fcomip
scas
xchg
push
xchg
xrelease
mov
das
pop
arpl
std
aas
dec
pushl
cmp
lcall
and
mov
mov
sahf
jbe
aaa
dec
ja
xchg
inc
pop
cmpsb
aad
movsl
xchg
pop
lea
xor
mov
xchg
cmp
add
sahf
sahf
xlat
das
cli
lcall
and
loop
pop
loop
xor
adc
adc
icebp
sub
lcall
or
outsl
lret
rorl
cmp
xchg
lahf
fwait
add
scas
mov
movsl
shl
dec
sarb
push
inc
cwtl
fiadds
ljmp
ret
jno
imul
loopne
adc
lods
loope
and
mov
push
aaa
movsb
pop
incl
mov
cmpb
lods
int3
pop
hlt
xchg
xchg
mov
out
mov
scas
push
inc
out
cli
cmpsb
outsb
mov
sahf
push
mov
loop
inc
lret
test
inc
in
dec
push
clc
pushl
aas
sahf
push
fs
push
jb
pop
leave
sahf
enter
cmp
das
sar
pusha
cmpsl
mov
sub
jl
ds
rorl
inc
es
lods
xchg
mov
andb
mov
test
lret
test
mov
hlt
add
jmp
lea
or
scas
adc
adc
or
ds
or
adc
aaa
sbb
jb
dec
pusha
stc
lcall
mov
popa
pop
dec
and
mov
cltd
shll
jl
aas
lods
adc
addb
or
lods
dec
pop
xchg
arpl
mov
sub
in
or
push
and
jns
xorl
icebp
xchg
into
data16
adc
stos
push
mov
add
xchg
push
fsts
push
aas
add
arpl
jo
pop
aaa
popf
imul
out
xor
dec
int
inc
sub
mov
inc
push
inc
dec
ja
data16
out
mov
cmp
jne
mov
cmpl
push
clc
mov
mov
cltd
ss
enter
rorl
jp
addr16
or
cmpsb
movsl
or
push
cmpsl
fisttpl
decl
fidivs
insl
rcrl
pop
mov
test
pop
sub
or
sub
test
les
sbb
or
sbb
sub
enter
adc
push
es
or
sub
sbb
outsl
jge
in
push
mov
lea
pop
inc
sbb
push
pop
jo
mov
cld
push
inc
pop
gs
pcmpgtd
sbb
or
out
xchg
cmp
call
lods
and
sbb
mov
aaa
outsb
sub
jg
and
into
pop
popa
and
pusha
std
ret
add
fbld
xchg
cmpsb
into
jns
jns
js
mov
daa
xchg
mov
jb
jmp
hlt
lcall
cmc
pop
xchg
test
inc
cmp
lret
ds
insl
loopne
xchg
test
sahf
push
scas
inc
add
nop
fidivs
jmp
push
pop
dec
add
shll
ret
xchg
and
scas
push
ret
xchg
pop
dec
pusha
adc
ja
cmp
rclb
js
cltd
fdiv
mov
imul
dec
and
cli
aaa
nop
scas
movsb
dec
push
mov
in
js
cli
decl
mov
push
stc
cmp
out
add
jge
daa
add
xchg
add
and
and
imul
mov
mov
lret
popf
cmp
and
push
inc
insb
push
adc
cmp
into
push
dec
in
pop
pop
les
jl
xor
ss
icebp
pop
lock
outsl
pop
xorl
push
push
in
lahf
mov
jmp
add
das
out
dec
push
mov
addr16
sahf
and
jp
mov
je
outsl
adc
loope
imulb
cmp
add
jb
lods
pushf
data16
jmp
push
inc
mov
mov
call
jmp
sub
sbb
cwtl
aam
push
out
sbb
add
int3
in
aaa
adc
fwait
out
push
push
pop
pushf
push
ss
loopne
test
sbb
loop
arpl
push
adc
pop
inc
jle
sbb
push
loopne
jg
scas
ficomps
mov
cmpsl
adc
mov
cmpsl
xor
inc
aaa
mov
dec
pop
xchg
decl
jmp
pop
cmpsb
push
pop
jb
xchg
inc
jbe
jae
mov
sbb
lret
jp
push
inc
pop
cwtl
sub
mov
pop
into
out
insl
jne
add
movsb
cmpsb
clc
or
test
jne
mov
mov
add
sub
cmp
add
add
push
hlt
and
imul
cwtl
cmp
subl
inc
inc
shrb
xor
imul
mov
sbb
push
mov
or
scas
dec
fimuls
sbb
sub
mov
shrb
mov
and
lock
dec
push
inc
push
repz
das
jbe
out
popf
ljmp
test
jg
inc
enter
mov
aaa
jmp
xchg
xor
sarb
fiadds
inc
lret
incl
mov
mov
sub
clc
call
pop
push
test
jo
nop
xor
sbb
lahf
sbb
xchg
pushl
push
mov
ss
mov
sbb
mov
xchg
mov
jp
cmpl
scas
inc
sti
add
inc
gs
dec
stos
shrl
rcrb
xchg
aas
mov
jg
aaa
fwait
push
test
imul
fdivl
mov
ljmp
cmp
and
inc
adc
sbb
mov
popa
jbe
and
mov
dec
cmp
cld
call
enter
daa
cwtl
adc
testb
in
xchg
sbb
mov
data16
cwtl
cmp
loop
movsl
xchg
mov
xchg
fisubrl
pop
xor
fisttpl
lds
dec
faddl
adc
lea
sar
push
inc
dec
lret
or
mov
jge,pn
ret
push
jb
dec
insl
into
cmpsb
jo
decb
cmp
bound
iret
ljmp
aad
inc
fidivs
mov
out
jle
sar
jl
les
aas
icebp
decl
mov
cld
xchg
out
cmp
push
aad
pop
adc
ret
jmp
push
mov
movsb
lcall
inc
repnz
das
mov
daa
push
iret
xor
daa
je
aaa
pop
les
out
sahf
pop
mov
lds
mov
adc
push
gs
mov
push
std
ljmp
jae
sub
mov
jge
stos
sarb
jp
int
fwait
sub
int3
out
xchg
inc
or
call
push
notb
stos
mov
dec
lcall
mov
lahf
jg
push
arpl
mov
js
lock
fistpll
mov
and
mov
scas
push
pop
rcll
decl
scas
inc
iret
xchg
repz
jg
mov
pop
inc
or
sbb
mov
dec
pop
lcall
mov
lahf
sbb
inc
cmp
adc
sub
stc
xchg
cmpsb
pop
loop
adc
mov
dec
pushf
inc
push
icebp
and
cmp
xchg
or
mov
push
and
mov
scas
mov
jle
fsubrl
movsl
mov
lock
les
dec
aam
push
sbb
scas
cli
jo
mov
pop
mov
mov
pop
push
dec
mov
cmpsb
xor
cmp
int3
sub
cmp
das
push
stc
and
push
sub
ja
pop
dec
jne
inc
cmp
jg
loopne
enter
inc
out
movsl
adc
sbb
mov
xchg
and
push
mov
jl
scas
add
outsl
stos
jl
cli
outsb
dec
dec
sub
out
xchg
or
cmpsb
cmp
mov
jl
jb
arpl
popa
mov
xor
or
std
cmpsl
mov
mov
cltd
popa
mov
icebp
jmp
sub
sti
imul
push
fbld
outsl
decb
sbb
push
xor
leave
add
dec
iret
add
inc
imul
mov
icebp
filds
or
inc
pop
dec
enter
int
xchg
mov
aaa
enter
sub
or
decl
dec
push
or
push
mov
mov
aas
add
fldenv
aam
jg
sub
xor
or
out
mov
std
sub
pop
add
cwtl
mov
and
dec
sahf
cs
xor
mov
xchg
inc
inc
mov
filds
cmc
dec
mov
jno
mov
push
mov
and
jbe
insb
sbb
push
jle
adcb
adc
inc
sahf
cmp
adc
enter
data16
lock
call
mov
sti
lea
cmpsb
push
push
mov
outsl
mov
lods
cmp
pop
in
mov
push
decl
lea
mov
inc
inc
sub
cmp
sub
xchg
push
or
hlt
scas
cld
je
mov
gs
pop
jle
add
inc
mov
loopne
mov
add
sbb
or
stos
jbe
ljmp
xchg
add
bound
sub
or
sub
rcrb
push
jno
mov
popaw
jmp
mov
pushf
mov
mov
int3
push
xchg
sbb
cmp
mov
test
in
ja
clc
push
cmc
and
arpl
and
mov
or
out
and
test
jmp
addl
xor
pusha
subl
mov
mov
icebp
cmpsb
fwait
lea
adc
rol
or
pop
and
cmpb
repz
add
addr16
call
inc
push
iret
xor
push
rolb
data16
imul
inc
dec
lea
inc
lods
sbb
orb
outsb
es
adc
pushl
or
data16
dec
sub
aaa
mulb
sbb
or
push
mov
jbe
pop
xor
popf
jmp
stos
mov
mov
inc
cmp
mov
ficomps
dec
cli
scas
and
sbb
mov
je
push
push
dec
push
adc
scas
push
jl
push
gs
xor
jge
adc
dec
fcompl
push
jge
out
xchg
nop
dec
dec
stc
lahf
jnp
mov
adc
cld
cmp
push
cmp
cld
decl
xchg
arpl
arpl
mov
mov
dec
into
dec
mov
mov
lea
pop
out
jecxz
mov
movsb
push
xlat
popf
adc
push
pop
jns
mov
sbb
push
sahf
mov
mov
test
dec
xchg
loope
sub
push
iret
add
fldenv
imul
popa
cmp
pop
js
pop
inc
iret
dec
adc
incb
cltd
clc
add
mov
push
lahf
scas
inc
inc
aaa
adc
jle
mov
out
sbb
mov
ds
and
and
xor
mov
push
cmp
mov
popa
shll
lret
adcl
sbb
or
cmp
push
aas
or
icebp
xor
sub
and
stc
xchg
stos
imul
je
dec
adc
jbe
xchg
jae
cmp
or
pop
testb
ret
pop
xor
clc
xor
xchg
out
push
in
or
in
add
loope
jo
mov
push
gs
inc
add
inc
daa
jae
sbb
sub
mov
inc
mov
dec
lods
sub
in
jb
cmp
jge
loop
outsl
or
jg
fmull
dec
sarl
gs
lret
stc
pop
in
loopne
in
test
push
outsl
sub
push
scas
ret
aaa
popf
data16
es
adc
fistps
dec
scas
fiaddl
or
aaa
cld
aas
dec
cld
add
in
es
jg
add
fisttps
mov
rol
xchg
in
fwait
into
bsf
mov
movsb
clc
decl
pop
fbstp
pushf
fmuls
mov
push
adc
shl
xchg
add
ja
clc
mov
cmpsb
test
cltd
sbb
lods
dec
cmc
jg
rol
sub
fmull
jbe
adc
jg
sarb
ja
cmpsl
inc
lds
popf
xor
push
cld
cmpb
daa
adc
mov
stos
dec
jl
xor
or
dec
dec
add
decl
sbb
mov
cmp
push
push
mov
pushl
fidivs
or
inc
fmuls
inc
xchg
push
push
and
adc
sub
das
jb
pusha
in
and
pusha
jg
iret
xchg
pop
cmpsl
dec
in
adc
xor
popa
pop
sbb
xchg
adc
pop
cwtl
movsb
or
mov
es
jno
lds
and
pusha
decl
outsb
push
movsb
in
data16
orl
mov
adc
inc
clc
push
sub
and
mov
test
sub
ret
adc
lock
pushl
dec
rolb
dec
fildll
mov
mov
ja
cltd
mov
outsl
test
movsb
or
xchg
call
sti
push
pop
dec
sub
sub
sbb
inc
mov
add
test
adc
adc
push
data16
adc
push
movb
loopne
push
cmp
push
xchg
test
stos
mov
dec
sub
cmp
mov
sbb
add
daa
imul
mov
shll
jno
mov
lret
push
cwtl
dec
xor
inc
lods
jle
fisttps
sub
dec
sbb
loop
incl
or
ljmpw
xor
and
call
sahf
ss
xchg
fisttpll
mov
jecxz
add
add
cmpsl
xor
incb
aaa
xor
stos
sti
fmul
fidivrs
dec
sbbb
clc
cmp
ret
mov
xor
mov
jge
add
sub
dec
jecxz
mov
cmp
mul
adc
js
out
insb
add
pop
cmpsb
adc
jns
adc
popf
aas
pop
ret
cli
fistps
mov
out
lds
sahf
std
pop
cwtl
cli
std
push
movsl
pop
lods
cmp
pop
cmpsl
adc
outsb
fisubrs
xchg
fists
rclb
in
mov
cltd
js
sar
scas
jecxz
imul
icebp
mov
cmpsl
in
pop
test
pop
lea
lcall
std
xlat
xchg
jle
testl
mov
sbb
push
inc
dec
ljmp
push
inc
jnp
ds
jge
test
popf
or
and
xchg
cmp
movl
pushl
inc
clc
cmpsl
sub
popa
jbe
sub
invd
sub
mov
cmp
decl
jmp
sahf
xchg
pop
xchg
mov
inc
cmp
push
fcoml
imul
inc
mov
ljmp
ljmp
mov
dec
dec
mov
inc
ret
pop
cld
pop
inc
mov
stc
push
jg
das
jno
xor
dec
cmpsb
sub
sbb
dec
dec
mov
ljmp
push
mov
outsb
in
outsb
cmp
mov
add
sarb
push
jle
xchg
dec
dec
pop
ljmp
inc
sub
into
jb
dec
add
xchg
push
push
adc
dec
xor
inc
sbbb
incl
and
add
sbb
sbb
xchg
outsb
daa
incl
cs
rol
lods
cmpsb
lea
in
rorb
dec
sub
mov
ljmp
inc
pop
lods
adc
cmp
adc
pop
sahf
daa
push
sub
jmp
gs
cmpsb
cmp
fidivl
pop
dec
adc
jmp
ret
mov
add
inc
cld
decl
adc
jae
or
mov
dec
pop
outsb
popl
outsb
into
sahf
test
insl
out
add
pushf
sti
imul
popf
add
jmp
mov
or
cs
into
cld
xchg
lcall
bound
xor
js
test
cmpsl
pop
sbb
mov
or
add
lcall
outsl
add
mov
cmp
jg
and
mov
jl
push
adc
xchg
stc
xchg
aad
cmp
mov
dec
fcoms
js
mov
jmp
ja
popa
mov
lcall
mov
fwait
loop
out
pop
xor
adc
gs
loopne
decl
adc
mov
cmp
mov
gs
cmp
aas
jbe
adcl
test
cli
outsl
jne
xchg
decl
sti
cmpsb
pop
dec
popf
pop
sbb
mov
pop
out
movlps
mov
outsb
call
push
sub
dec
lcall
cmp
xor
cmp
ds
mov
cwtl
add
mov
inc
inc
mov
jnp
lcall
push
and
mov
pop
out
incl
adc
mov
xor
push
jp
pop
fildl
fimuls
adc
mov
xchg
fisubs
jnp
fbld
js
test
mov
jl
cmpsb
add
xor
scas
lcall
bound
outsb
sete
jl
mov
adc
std
jg
mov
outsb
sti
or
and
and
sub
std
ja
ret
or
and
std
call
inc
sbb
sub
push
adc
push
dec
jg
pop
out
xchg
aad
xor
xchg
dec
xchg
mov
push
mov
adc
iret
adc
cld
mov
lret
push
shll
fcoml
es
out
fisttps
inc
and
mov
adc
sahf
shlb
movsl
xchg
adc
sub
sbb
push
sub
clc
lock
decb
movsl
push
xor
rclb
hlt
jg
cmp
dec
in
add
scas
imul
stos
mov
pop
mov
jecxz
mov
mov
out
test
outsb
xchg
cmpsl
arpl
imul
incb
movsb
jno
cmpsb
cmp
pop
in
aaa
xchg
mov
lods
inc
and
aaa
js
decl
jecxz
iret
fsts
or
cld
add
in
mov
js
hlt
test
imul
ja
mov
out
adc
fwait
sahf
ss
pop
mov
jl
inc
cli
aas
adc
jb
xor
aas
ds
outsl
arpl
sub
push
fistpll
push
fbstp
inc
in
orl
cmp
sbbb
loope
jle
fs
mov
add
pop
stc
adc
xor
jb
sub
stos
rcrb
std
xor
jmp
mov
mov
sbb
jg
jmp
xchg
data16
push
scas
mov
or
lods
xchg
sti
ss
dec
or
fimull
mov
mov
mov
mov
push
or
movsb
sbb
xor
out
push
aad
cmp
add
pushl
pop
add
das
pop
inc
inc
ja
pop
xor
icebp
frstor
push
jp
data16
insl
ret
addr16
shll
inc
xor
add
lahf
pushl
inc
nop
adc
mov
or
pop
dec
jle
pop
addb
pushl
inc
push
mov
or
movb
mov
dec
jg
out
add
in
or
fidivrs
outsl
pop
aaa
aas
mov
cwtl
imul
in
push
ffree
jg
mov
push
adc
adc
add
das
add
pop
adc
mov
jno
shll
fimuls
cld
pop
in
inc
leave
mov
ret
inc
popf
sbb
int
test
outsl
jbe
or
gs
xchg
cmp
aam
sub
shlb
popf
push
ss
icebp
and
test
add
pop
aaa
sbb
imulb
mov
ficoml
sbb
mov
xchg
mov
jmp
sub
sbb
pop
cli
ja
fildll
cmp
jmp
pop
jbe
ret
fstl
sbb
sbb
xchg
inc
jne
add
incl
cmp
sub
mov
push
cwtl
ss
pop
nop
clc
inc
mov
iret
or
adc
and
xchg
ljmp
mov
cmpsb
jle
adc
push
push
inc
xor
inc
xchg
cmpsb
push
cmp
add
popf
jne
ljmp
add
lahf
inc
inc
sbb
jg
movsb
adc
inc
call
imul
xchg
cwtl
add
mov
and
lret
cwtl
pop
fsubrs
push
nop
mov
and
xor
jg
jmp
mov
in
push
ret
mov
les
imul
xchg
xor
cmp
outsb
out
push
js
mov
mov
cs
sub
insl
scas
fwait
xor
cmp
pop
ljmp
and
push
std
scas
mov
cmp
push
or
adc
mov
jne
mov
xchg
adc
push
outsb
adcl
aaa
xor
fisubrs
mov
sbb
aaa
int
or
sbb
pushf
lcall
aaa
inc
inc
mov
and
movsb
jae
push
push
xchg
out
sbbl
push
pusha
push
mov
mov
mov
inc
cltd
pop
jo
mov
pop
mov
adc
push
inc
cmp
xchg
mov
int
aaa
inc
and
popa
xchg
cld
out
dec
out
mov
sbb
into
cmp
rorb
test
fdivl
add
out
xlat
sbbb
sahf
cmp
push
push
push
ljmp
pop
push
inc
inc
and
sub
mov
call
aam
outsl
cmpsb
pop
daa
xchg
add
mov
lock
mov
out
cltd
jp
fstpl
inc
stc
sbb
pop
imul
sbb
loopne
adc
movsl
lods
rcrl
lods
into
aaa
mov
pop
pop
stos
adc
cmp
pusha
jg
jno
inc
aaa
and
and
sub
mov
add
pop
aam
pop
and
outsl
outsb
clc
call
xorl
push
adc
ss
dec
insb
daa
dec
dec
mov
push
jmp
mov
pop
aaa
hlt
decl
icebp
sub
push
sub
push
nop
aas
clc
dec
sbb
in
cmpsl
jbe
sub
jns
add
pushl
cmp
or
int
pop
mov
fistpl
inc
ljmp
arpl
das
bound
ljmp
ljmp
xchg
imul
pop
inc
jmp
jne
xlat
mov
sarb
and
mov
cld
aad
mov
sarb
inc
ja
xchg
push
push
adc
jbe
jmp
mov
incb
or
push
add
dec
loop
adc
in
in
decb
inc
push
into
and
mov
dec
sahf
adc
add
decl
push
lret
xor
adc
and
fwait
add
push
imul
pop
jne
cmc
push
xor
adc
or
jmp
mov
test
sub
aas
inc
ds
lea
imul
sbbl
push
mov
mov
icebp
cli
repz
dec
mov
jno
mov
dec
xor
jae
jg
pop
xor
jge
mov
mov
cmpsl
stos
sub
mov
pop
inc
cld
jmp
daa
dec
xchg
add
sbb
sub
das
pushl
cs
enter
push
xchg
sahf
cmp
cmpsl
outsb
jle
add
cld
mov
pop
fldcw
ss
leave
adc
scas
xor
sub
aad
push
mov
ja
dec
inc
aad
and
jo
jg
dec
dec
lock
sahf
ret
leave
sbb
dec
leave
jmp
out
aaa
xchg
imull
adc
pop
dec
xor
lds
stos
fs
inc
and
shll
popa
inc
imul
fisttpl
out
aaa
dec
pxor
inc
cli
adc
int3
aaa
mov
fcos
mov
jl
push
imul
out
cmpsl
sub
cmp
push
xchg
adc
clc
adc
scas
adc
add
dec
ljmp
scas
cmp
mov
les
mov
call
inc
lret
mov
bound
adc
pop
es
jg
clc
xor
stc
add
ss
xor
jmp
or
fucomp
sarl
jl
cs
dec
sbb
sbb
ljmp
inc
jge
loope
push
inc
jg
hlt
outsl
push
push
pop
inc
loope
in
xor
faddl
data16
or
aas
aam
inc
leave
in
sub
push
testb
test
sub
mov
idivb
jg
icebp
push
int
cld
mov
xchg
sbb
outsl
push
mov
add
mov
cwtl
add
cmp
xchg
aam
xchg
mov
test
std
sub
push
sub
shrb
push
dec
rcrb
adc
lods
adc
sbb
clc
xchg
mov
lods
mov
sbb
xchg
push
add
in
clc
cmp
gs
pop
daa
ds
pop
insb
int3
jg
mov
jbe
test
xor
sub
test
or
call
adc
jg
mov
filds
lret
lds
addr16
cmp
fdivr
ljmp
add
clc
push
inc
lret
fwait
sbb
imul
fisttps
fildl
mov
mov
hlt
into
addl
arpl
lretw
sbb
pop
shl
sahf
adc
nop
scas
xor
cmp
stos
and
in
mov
data16
adc
or
xor
pop
out
mov
fxch
pop
sub
xor
aad
push
dec
add
outsb
push
push
int3
add
mov
mov
out
push
or
and
scas
push
sub
jb
sbb
ss
xor
popa
insb
mov
sar
add
mov
je
mov
mov
cmpsb
dec
std
mov
dec
pop
mov
xor
fwait
rcrb
jg
xlat
pushf
pop
pop
cmp
jmp
pop
loop
inc
out
xor
enter
mov
cmp
lcall
or
adc
mov
pop
and
shll
cmp
push
test
add
cmpsl
dec
pusha
in
fs
ss
jns
out
mov
sub
jno
mov
lods
push
arpl
dec
jns
incb
test
scas
cmpl
mov
loope
jg
jo
addr16
stos
lcall
lret
addb
jmp
dec
sbbb
imul
pop
mov
inc
mov
push
pop
and
ss
or
adc
push
push
push
lods
out
sbb
push
jbe
mov
jne
scas
jle
push
rcll
dec
ja
add
scas
scas
and
fisubl
jbe
cmp
sbb
mov
dec
pop
cwtl
loope
dec
cli
jg
mov
sbb
lods
and
sahf
xor
in
mov
lcall
pop
pop
in
push
jmp
les
sti
inc
loope
rep
clc
fs
inc
cld
and
mov
ss
popl
outsl
cli
aaa
cwtl
popf
dec
sbb
loop
cmpsb
sub
js
aad
cmpsb
in
arpl
js
stos
aaa
inc
or
dec
fmull
or
mov
in
xor
pop
shll
ret
scas
adc
fwait
cmp
push
inc
xor
pop
add
sbb
dec
xchg
clc
call
push
clc
push
shlb
mov
cmp
jmp
mov
mov
test
xor
xchg
push
ficoms
xchg
jno
outsl
and
fisttps
jp
cs
dec
sub
pop
aas
clc
xchg
push
stos
add
cmp
loope
scas
dec
shrl
rorl
pusha
stos
inc
loopne
adc
rorb
es
mov
adc
push
xchg
pop
inc
inc
mov
xchg
add
dec
inc
inc
into
test
sbb
scas
in
sbb
mov
mov
or
and
sub
mov
jno
stc
mov
ss
inc
adc
sbb
mov
pop
mov
adc
mov
cwtl
mov
cmpsl
bsf
adc
sbb
mov
jg
lcall
and
fldcw
xchg
out
scas
push
adc
sub
decb
mov
pop
cmp
mov
inc
fildll
xchg
in
push
js
jnp
xchg
adc
lcall
loope
push
dec
cmp
mov
push
pop
inc
fidivrs
outsl
inc
ret
mov
mov
ljmp
rclb
lret
push
dec
clc
subl
cmp
jp
imul
insl
jmp
lret
inc
out
mov
lret
cli
pop
pop
pushl
dec
jae
xchg
push
data16
test
call
inc
xchg
out
pop
cwtl
add
xchg
fwait
dec
arpl
ret
xchg
sbb
push
push
orl
lea
add
push
pop
pushl
inc
pop
or
inc
adc
adc
jns
call
and
cmp
lcall
push
adc
fidivrs
das
xor
mov
fimull
ljmp
xlat
sub
lods
test
in
test
daa
inc
mov
sbb
pop
push
gs
add
dec
mov
push
push
and
jbe
or
xor
inc
adc
ss
jns
sbb
cmp
adc
jecxz
inc
es
adc
push
mov
and
das
or
mov
test
gs
inc
push
mov
sahf
pop
cmpsl
popf
push
mov
aas
scas
sub
inc
scas
fcompl
xchg
lret
stos
jno
mov
incb
push
lea
ljmp
and
pop
imul
je
les
xchg
jle
fsubrs
decl
pop
leave
mov
xchg
lds
adc
push
dec
and
push
xchg
rcrb
movsb
inc
popa
jecxz
pop
sbbl
cld
stos
loop
pop
jmp
scas
sbb
jbe
push
imul
jae
jg
adc
shll
and
xchg
cmp
mov
call
lahf
mov
pop
fldcw
cltd
sub
mov
std
mov
leave
mov
insl
mov
pop
nop
adc
mov
push
test
mov
movsl
mov
addr16
mov
mov
or
inc
fwait
xchg
adc
jg
pop
cmp
das
push
out
or
push
mov
jge
mov
adc
cmp
in
jge
int3
inc
pushl
push
mov
sub
xor
ljmp
push
bound
decl
push
test
pop
ja
mov
popl
jae
push
ds
cmpsl
cmc
push
dec
sbb
outsl
and
mov
sub
mov
jecxz
add
nop
dec
mov
icebp
pop
cmpsb
popa
pushf
push
ret
sub
repz
sub
sub
adc
incl
cmp
add
xor
add
pop
popa
sahf
jb
sub
callw
push
std
ljmp
push
sbb
fisubl
dec
out
pop
cmp
lods
inc
jbe
jmp
shll
push
dec
adc
pop
rcll
dec
cmp
dec
and
mov
sbb
sub
mov
aam
mov
xchg
sbb
pop
jp
mov
dec
inc
das
xor
lods
mov
inc
xor
cmc
call
bound
testb
test
or
fstps
ss
mov
filds
popf
out
test
xchg
cmpsb
into
xchg
mov
push
inc
sar
fsubl
jge
outsl
push
mov
test
jl
daa
xchg
mov
stos
sub
xchg
gs
xor
popl
icebp
packssdw
push
cmp
push
aas
jmp
loope
fs
jnp
pop
pop
incb
mov
aaa
lahf
fwait
jle
incb
outsb
push
scas
outsb
rcll
nop
xchg
mov
jns
cmc
das
clc
dec
xor
cs
pop
push
imul
cwtl
lock
out
cld
jg
cs
test
call
lea
fistl
cmp
pushl
dec
mov
cmp
or
test
jge
lea
push
and
sub
aaa
in
aas
mov
or
xor
js
ss
insb
add
mov
ljmp
xchg
bound
in
jp
pop
aas
idivb
sub
out
cli
lcall
imul
sbbl
pusha
add
incl
pop
imul
loope
scas
jnp
mov
outsl
push
lods
daa
in
adc
adc
lret
pop
cltd
xor
xor
adc
adc
pop
lock
push
sbb
mov
les
std
mov
jmp
pusha
pop
sub
push
xchg
incl
xchg
adc
sbb
insb
dec
test
dec
stos
imul
jns
pop
repnz
pushl
into
jle
mov
jo
icebp
cltd
mov
pop
adc
or
daa
inc
pop
andb
pop
cmp
je
push
push
inc
fcoms
loopne
stc
ljmp
rorb
loop
adc
inc
out
mov
aaa
pop
or
xor
jmp
push
lds
add
mov
xchg
cmp
cmpsl
or
popf
js
pop
call
or
inc
pop
push
xchg
loope
inc
push
addr16
cli
push
rclb
in
add
lcall
mov
mov
bound
adc
out
lods
in
add
cs
or
mov
inc
push
push
mov
stos
rolb
cmp
mov
test
jp
pop
adc
push
out
push
add
and
ds
jg
mov
mov
sbb
sbb
mov
xchg
call
mov
popa
cmp
sbb
pop
push
jne
mov
ja
inc
out
test
push
movsb
mov
jns
jp
leave
mov
cmpsb
mov
pop
call
icebp
sub
stos
popa
in
push
bound
add
nop
imul
jle
test
mov
or
push
and
into
rcrb
clc
add
int3
rcrb
jne
mov
sahf
movd
push
adc
xor
outsb
sub
scas
push
mov
push
addr16
xchg
mov
pop
ds
pop
xor
pusha
mov
iret
jg
mov
or
test
xor
das
inc
imul
ret
add
jle
repz
decl
popa
and
clc
or
ds
push
mov
sahf
outsb
pop
mov
or
pushl
adc
mov
adc
adc
enter
bound
out
clc
sub
push
pop
push
xorb
out
jg
pusha
pop
xchg
mov
cmpsl
hlt
cmp
dec
stos
in
and
add
adcl
icebp
or
addr16
sub
aaa
popf
xchg
dec
sbb
bound
xor
push
cmpsb
pop
out
insb
std
outsb
loopne
mov
cmpsb
push
repz
jg
push
les
movsl
cs
in
dec
pop
push
nop
sbb
data16
adc
adc
sub
mov
popf
and
call
pusha
mov
inc
xchg
push
mov
jg
std
dec
sub
ds
ljmp
pushf
adc
pop
cli
jge
test
inc
push
decl
xchg
cwtl
das
cld
xor
pop
mov
sbb
fnsave
jg
xor
int
mov
or
cmp
pop
popa
std
push
push
add
push
mov
push
ret
jae
adc
jmp
cmpsl
cmp
xchg
dec
lret
mov
and
inc
push
stos
aaa
dec
shlb
xchg
mov
mov
mov
add
mov
fadds
int3
xor
jg
xlat
inc
mov
imul
lcall
push
jg
nop
scas
xchg
mov
incb
and
pop
xchg
ljmp
into
mov
xor
les
mov
or
adc
xor
mov
pop
cmpsb
dec
addr16
cmp
pop
aad
getsec
jbe
xchg
jns
mov
xchg
push
fwait
mov
clc
pop
cld
cs
mov
outsl
scas
es
lea
adc
sahf
nop
test
sbb
push
es
addr16
test
jbe
and
cs
xor
cmp
pushl
xchg
lea
push
mov
inc
scas
or
decb
pop
and
push
inc
inc
daa
dec
adc
fdivs
out
dec
scas
pop
dec
fldl
arpl
imul
stos
mov
inc
xchg
pop
mov
jl
sub
inc
xchg
push
arpl
lods
scas
cmp
mov
lods
xor
sahf
lcall
dec
shrb
pop
scas
lods
mov
pushf
xchg
pop
rcrb
push
jns
xchg
pusha
or
icebp
sbb
scas
dec
out
jg
sub
scas
movq
push
mov
jbe
xchg
ljmp
adc
repz
mov
mov
stos
and
in
jg
stos
negl
dec
aaa
imul
xor
xor
jmp
pop
add
clc
and
xor
mov
sub
jecxz
lcall
ficoml
mov
aas
xchg
xchg
fnsave
xor
mov
dec
cs
push
jno
pushl
ljmp
cltd
push
cmp
lods
push
adcl
shll
aaa
pop
ja
lcall
xor
test
stos
mov
sbb
popa
movb
cmp
mov
sub
cli
lcall
aam
pop
addr16
out
xor
sbb
insl
cli
lcall
fldt
xchg
lods
jle
xchg
xchg
jmp
or
adc
es
and
sbb
stos
adc
sbb
adc
pop
pop
outsb
sbb
les
loop
aas
dec
add
inc
jp
cmpsl
add
sar
lcall
test
outsb
xor
jb
inc
dec
sbb
sbb
incl
fstps
pop
mov
xchg
xor
cmp
dec
aam
clc
and
test
adc
aas
mov
jecxz
xor
xor
fstl
inc
jbe
ds
push
scas
and
into
inc
aas
jl
or
cmpsl
insb
push
rorb
lret
push
adc
fstpl
inc
cltd
out
pop
aaa
inc
les
jbe
out
cli
pop
jnp
mov
cmp
js
test
test
mov
sbb
sbb
movsl
movsb
jmp
fimull
arpl
cmp
or
sbb
add
aas
push
bnd
or
push
xchg
addr16
daa
out
dec
jg
mov
pop
adc
daa
dec
scas
dec
in
outsl
xor
sbb
add
jmp
nop
std
jg
ss
sbb
das
dec
pop
lock
stc
sahf
pop
push
mov
ret
aaa
pop
std
mov
sub
out
ret
sbb
fs
adc
inc
out
cmpsb
mov
adc
jnp
mov
mov
insb
jbe
outsl
jle
pop
xchg
and
cmp
addr16
ret
or
push
cmp
sar
sar
ds
push
test
mov
mov
adc
pop
call
cs
out
gs
xchg
insl
stc
cmp
out
mov
gs
xchg
mov
arpl
inc
cltd
and
hlt
jl
lods
sub
cld
minps
movsb
scas
jg
inc
jmp
test
cli
and
ljmp
adc
add
mov
xchg
mov
fstl
pushf
cmp
out
ljmp
inc
sbb
pushf
imul
mov
adc
test
push
mov
adc
mov
in
imul
test
xor
scas
adc
sbb
fsubrs
inc
mul
push
nop
dec
fisttps
add
push
call
loopne
inc
pop
lret
cmp
cmp
fldl
xchg
jbe
xchg
add
sbb
or
das
sar
jnp,pt
lcall
inc
push
je
popf
fistpl
fs
push
pop
mov
dec
pop
mov
inc
psrad
popa
push
xchg
xchg
rcr
adc
shrb
cmp
test
pop
mov
lds
call
push
dec
mov
mov
loop
mov
push
cmp
xchg
lds
popa
dec
out
clc
dec
push
inc
jno
adc
test
outsb
mov
cmp
adc
jg
lods
dec
cs
jge
xchg
pop
mov
dec
insl
cmp
sbb
or
xor
push
inc
pop
inc
adc
pusha
xchg
js
jmp
push
pusha
push
sbb
sbb
mov
clc
sti
mov
mov
mov
add
nop
xchg
popf
lret
mov
movsb
pop
inc
xchg
jmp
pop
shrl
xchg
push
cmpsl
icebp
test
stos
jo
inc
pop
filds
pop
ds
or
fldcw
imul
pop
mov
sar
fildll
jb
cmpl
cmp
xchg
mov
push
test
insb
cmp
xor
aaa
lret
xlat
inc
cmpsl
out
nop
hlt
mov
popf
insl
sarb
xor
and
movsl
cmp
or
jmp
cmpsl
imul
mov
insb
std
lcall
pop
mov
sbb
mov
popa
sar
pop
add
add
fnstenv
mov
and
repnz
jo
inc
loopne
mov
dec
jp
mov
aaa
or
pop
or
stos
into
lods
inc
test
mov
into
lea
sub
push
jae
lods
dec
enter
dec
js
negl
xchg
int
push
arpl
sbb
filds
and
dec
sbb
add
cmc
repz
sub
push
or
sti
cmpsb
std
shll
cs
out
push
arpl
mov
or
imul
fnsave
xchg
cmpsb
das
insb
cld
adcb
out
into
sahf
or
stc
xchg
mov
add
mov
int3
mov
int3
mov
test
and
xor
pushl
imul
hlt
cmpsl
dec
jbe
dec
adc
lcall
jmp
push
xchg
sbb
out
jae
les
insb
movsl
decl
pop
cmp
adc
push
cmc
scas
adc
add
ret
lea
pop
insl
xchg
aas
inc
fistl
xor
mov
xchg
xor
pop
sub
incl
rorb
icebp
add
cvtdq2ps
inc
and
mov
jg
je
xchg
mov
repz
ja
imul
jg
cmpsl
dec
jle
pop
pop
gs
adc
scas
daa
lcall
inc
cmp
cld
inc
jno
dec
xlat
dec
push
or
jmp
pushl
jbe
xchg
ret
sahf
mov
inc
dec
jo
out
sarb
call
push
and
push
in
dec
pop
ljmp
incl
cwtl
je
jns
mov
mov
sub
fbld
in
stc
pop
enter
lds
mov
out
and
inc
adc
dec
xor
ljmp
and
scas
insl
call
in
fucomip
jp
adc
pop
ret
lcall
add
scas
pop
ret
mov
jns
or
adc
clc
add
sub
mov
mov
dec
sti
mov
mov
jmp
out
out
mov
dec
sub
addb
xchg
sub
mov
cmp
std
imul
loop
scas
mov
stos
out
mov
jmp
enter
pop
dec
push
movsl
mov
sub
insb
xchg
mov
ja
xchg
gs
and
xchg
pop
inc
xchg
jge
or
push
incl
add
call
js
cmp
mov
inc
scas
ret
ljmp
pop
mov
ja
or
test
popa
ljmp
sbb
lds
pushf
sub
decl
jmp
test
and
pop
fildll
mov
decl
pop
jb
in
cld
test
jo
xchg
sti
movl
fldenv
inc
mov
push
mov
into
mov
inc
dec
lock
stc
mov
fbld
sbb
xchg
cmpsb
call
mov
imul
mov
xchg
fwait
mov
push
inc
jmp
jb
subl
cmp
mov
lods
pop
cmp
cmp
pop
pop
in
insl
xor
or
cli
jmp
lods
add
push
mov
dec
sub
mov
aas
mov
mov
xchg
dec
mov
fbld
outsb
pop
and
fldl
dec
ja
int
sbb
jae
or
repz
fnstsw
gs
adc
rorb
fs
dec
out
mov
loopne
shll
adc
insb
fisttps
fbld
pop
cld
mov
out
or
mov
sub
cmp
pop
out
sub
call
cli
mov
jo
push
scas
cmp
jbe
push
push
push
icebp
decl
jbe
pop
lock
mov
insb
add
inc
ljmp
xchg
rcll
je
js
dec
rol
lds
inc
mov
mov
sbb
out
sub
decl
test
shll
xchg
popf
lods
mov
scas
or
ljmp
or
lret
mov
mov
dec
loopne
in
nop
in
xchg
mov
jle
out
add
xchg
shll
in
shlb
fcomip
es
in
lcall
popf
roll
gs
sahf
test
das
imul
mov
xlat
rcll
or
stos
adc
int3
or
clc
ljmp
int
jne
aad
dec
mov
das
or
xor
push
mov
mov
icebp
stos
dec
rcrb
fistpl
push
push
jns
scas
push
sahf
and
pop
in
cmp
in
int3
pop
mov
scas
jbe
dec
into
adc
push
mov
fisttps
mov
inc
push
ret
mov
mov
mov
or
incb
cwtl
ds
inc
into
mov
mov
andl
cmp
mov
movsl
mov
filds
lcall
das
ja
repnz
imul
roll
decl
fidivs
lods
fstpl
dec
out
lds
push
or
dec
sub
std
sbb
pop
cli
je
jge
jmp
dec
call
jns
xchg
int3
mov
fnsave
jmp
adc
idivb
loopne
add
or
push
test
ja
out
jge
mov
test
divl
repnz
movsb
insl
cmp
pop
and
mov
add
jb
stos
xchg
test
decl
inc
fdivrs
popa
int3
sub
pop
stos
cmpsb
xorl
stc
jns
sub
pop
fcoms
sbb
fs
pop
outsb
scas
push
out
adc
mov
aad
jmp
cmpsl
lods
pop
je
sub
push
loop
dec
adc
mov
xchg
decb
enter
movb
cmp
into
pop
decl
outsb
push
sbb
pusha
dec
leave
or
sub
decl
outsb
sbb
shrb
fdiv
and
incb
xor
sahf
icebp
scas
pop
imul
xor
lcall
imul
lahf
jge
jg
out
out
pop
mov
pop
push
push
movsb
in
lods
fildll
xchg
imul
xchg
jg
lcall
mov
into
cltd
mov
dec
inc
fmul
adc
mov
repz
xor
popa
int3
sbbl
fbld
je
push
testb
mov
lret
test
aad
jmp
pop
test
or
leave
test
jns
xor
xor
mov
js
rolb
mov
xchg
cld
sub
decl
shll
xor
cmc
adc
lods
jae
sarl
mov
jo
dec
dec
pusha
popf
xor
cld
sub
sbb
in
mov
jle
mov
add
shrl
pop
popa
pop
ret
xor
dec
xor
or
or
mov
xor
idivl
adcl
movsl
movsl
mov
js
stos
jge
fbld
dec
push
nop
pushf
sbb
mov
aas
push
xor
cltd
insb
lcall
pop
fcoms
push
fnstenv
popa
jo
popa
stos
add
jmp
pop
sti
dec
pop
jbe
push
push
insl
mov
push
sub
inc
jb
incl
pop
mov
cmpsl
adc
push
jecxz
ret
jb
adc
mov
insb
out
cs
nop
gs
arpl
cwtl
sub
mov
test
lcall
into
mov
loop
dec
xor
inc
or
cs
pop
sahf
jp
mov
loope
dec
fldl
inc
add
mov
icebp
subl
decl
jae
and
pushf
lea
or
mov
mov
addl
cmp
insb
fisttpll
fcomip
mov
out
mov
jnp
lea
add
out
xchg
add
jns
xor
pop
xchg
pop
loopne
decl
add
mov
jb
fisubrl
mov
movsl
cld
decl
adc
mov
lods
dec
xor
mov
xchg
cmp
jb
adc
dec
scas
insl
pop
int3
dec
jb
call
mov
shlb
mov
hlt
or
jmp
in
add
ljmp
pop
dec
jle
add
in
fmuls
jne
into
mov
movsb
jbe
call
or
inc
icebp
xchg
xchg
and
fistpll
or
or
into
imul
dec
stos
les
fistpll
jmp
sbb
push
incb
mov
jmp
cmp
sub
lret
push
and
jp
ds
fnsave
cmp
jmp
xchg
mov
or
cmpsl
push
add
test
push
xchg
stc
shll
out
ffreep
push
sbb
idivl
jbe
fcom
push
sbb
push
shrb
lods
ds
test
sub
stos
out
xchg
iret
lock
dec
stos
enter
test
push
jecxz
jmp
or
hlt
mov
arpl
add
in
mov
mov
incl
jge
stos
xchg
xchg
add
cld
test
xchg
sti
daa
mov
stos
jg
in
es
sub
fnsave
repz
fwait
xchg
scas
cld
mov
inc
jae
push
addl
mov
dec
lods
mov
sub
xchg
sub
popf
and
ja
aas
iret
lcall
inc
or
fstl
adc
imul
push
inc
mov
mov
imul
insb
test
outsl
pop
insl
sbb
in
add
decl
cmp
out
dec
enter
fldt
sub
lds
sub
jecxz
add
sbb
push
nop
into
pop
mov
sbb
push
mov
pop
incb
dec
or
xor
aas
clc
clc
cmp
sbb
cli
sub
fbstp
ljmp
xor
in
xlat
jp
inc
xor
lea
add
jb
lock
incl
jl
mov
push
jle
jle
adc
shlb
call
addr16
pop
and
dec
sub
push
arpl
dec
add
outsb
adc
lret
dec
ja
dec
xchg
std
ljmp
or
int3
test
orl
cmp
cmp
in
dec
ret
test
ljmp
jns
bound
jg
jo
mov
in
adc
das
xchg
xchg
inc
adc
inc
pusha
into
sar
inc
out
ss
movsb
xchg
sub
mov
cmpsb
out
out
adc
dec
daa
jno
and
mov
mov
enter
int
push
inc
sti
in
cli
decl
inc
pop
push
push
cmp
cmpsb
call
pop
pusha
xor
in
push
adc
fiadds
stos
test
dec
xor
jns
sbb
pop
outsl
adc
add
rcll
gs
clc
mov
dec
xchg
xor
jne
mov
icebp
sub
fiadds
dec
out
in
iret
pop
or
pop
into
dec
insb
insb
inc
cmp
pop
mov
out
or
clc
dec
or
jmp
push
gs
pushl
cmp
popf
push
je
jle
sub
dec
and
push
icebp
pop
mov
ja
push
lods
and
add
das
shl
or
inc
loopne
fidivl
adc
ds
gs
lds
mov
dec
cmp
mov
jb
ss
call
xchg
inc
stos
jg
decb
loop
xor
fsubs
lcall
pushf
xor
loope
incl
iret
push
or
and
in
xor
and
stos
in
inc
lret
data16
testb
xlat
jmp
inc
sub
cli
mov
lods
ret
mov
incb
inc
ljmp
inc
add
inc
into
cmpsl
out
js
xor
lea
gs
int
ljmp
outsl
inc
cmp
movsb
mov
sub
mov
and
adc
cmp
and
xchg
sbb
data16
push
mov
jg
dec
and
sbb
lcall
sahf
dec
aas
jmp
int3
or
addr16
mov
xor
call
fwait
cmp
xchg
in
ss
mov
outsb
lcall
stc
cmp
mov
movsl
ljmp
or
lret
xor
addr16
xchg
push
adc
jg
cs
adc
mov
fs
cs
out
jg
ds
push
test
je
sahf
insb
pop
fistpll
leave
nop
sbb
mov
adc
jbe
xor
into
filds
decb
loope
int
push
mov
cltd
pushf
or
inc
add
pop
and
movsl
psrlq
and
mov
mov
ss
mov
and
mov
push
adc
imul
aaa
push
jbe
ret
adc
and
arpl
mov
dec
arpl
out
or
dec
push
add
hlt
loope
push
pusha
fstpt
js
pushf
jae
imul
xchg
stos
roll
arpl
or
stc
lods
xor
je
mov
icebp
bt
std
scas
adc
out
inc
rolb
in
inc
xchg
fimuls
shrl
mov
mov
ficoml
js
inc
fsubp
gs
add
mov
sarl
dec
push
js
mov
repz
scas
push
repnz
push
std
jge
add
push
movsb
fistl
xlat
stc
sub
ret
cli
cmp
movsl
in
cmpsb
in
cltd
xor
outsb
mov
mov
fcoms
cltd
das
loopne
pop
sbb
stc
inc
into
mov
push
test
jno
lahf
pop
dec
out
jle
dec
xchg
jb
idivb
xchg
jmp
inc
rorl
int3
fmull
push
pusha
pop
mov
and
dec
push
dec
cld
das
add
cltd
sub
and
sub
sbb
dec
jle
mov
pop
jne
mov
inc
jle
add
adc
fisttps
and
cmp
xchg
adc
or
jg
add
cmp
pop
pop
pop
adc
adc
sbb
aaa
xchg
and
ficompl
mov
or
loope
aas
ret
call
pop
fadds
push
cmpsl
in
aaa
repnz
hlt
jg
and
ret
fisttpll
loopne
jnp
sarb
repz
inc
ret
and
test
ljmp
mov
into
data16
inc
ret
adc
call
enter
in
jno
sbb
dec
push
clc
add
sub
rcrb
fsubrs
out
jg
lock
scas
dec
cmpsb
push
out
mov
popa
in
xor
out
cmp
call
movsb
mov
mov
orl
push
hlt
popa
dec
popa
add
scas
mov
mov
into
pop
mov
push
iret
mov
add
filds
push
divl
mov
inc
ficompl
movsb
pop
sub
mov
mov
daa
mov
add
test
mov
lods
jae
cwtl
inc
mov
cmp
adc
xor
cmp
push
in
xchg
jo
pop
fcomip
sbb
pushf
adc
sbb
insb
sub
fcomip
out
popf
dec
rorl
xlat
adc
jg
cmp
jne
xor
jbe
inc
fsubs
sbb
sbb
scas
sti
adc
mov
mov
push
lods
rorb
push
and
push
lcall
imul
cmpsl
cmc
scas
sbbl
in
cmpb
inc
in
sub
scas
pop
rclb
mov
mov
add
fimull
rorl
xor
pushl
and
xchg
mov
ret
xchg
in
lea
dec
mov
cmpsl
sub
xor
in
fisttpll
int
dec
enter
ljmp
icebp
xor
lcall
inc
jle
popa
loopne
mov
lea
jp
scas
lret
pop
movsb
add
sub
inc
cs
jg
jg
scas
inc
cmpsb
pop
mov
dec
sbb
sub
sub
fsqrt
adc
sbb
mov
adc
push
mov
scas
mov
inc
jge
adc
inc
lods
or
push
addr16
inc
inc
into
pop
inc
mov
fidivrl
dec
push
inc
clc
pushl
add
jns
or
bound
xor
lcall
repz
jbe
adc
pop
push
add
push
xchg
int
loop
pop
pop
dec
cli
push
xchg
out
xlat
scas
jp
shrb
jg
inc
outsl
loopne
mov
and
mov
xchg
xchg
andl
mov
mov
mov
push
lahf
movsl
test
mov
mov
jns
and
rcl
pminsw
out
sbb
add
aaa
cld
pop
mov
stos
sub
xchg
xor
xchg
loop
add
in
ljmp
inc
dec
notl
sub
jne
xchg
mov
jbe
enter
inc
ljmp
rolb
mov
xor
test
scas
dec
inc
insl
insl
lock
sbb
ds
clc
dec
std
bound
cmp
clc
sarb
jg
jno
xor
xor
or
je
mov
add
shufps
adc
add
mov
pop
cmpsl
mov
rol
and
add
cmp
clc
scas
xchg
pop
je
inc
cmp
adc
sar
cmp
mov
adc
mov
hlt
lcall
xchg
and
mov
data16
inc
loop
cmpsb
dec
cmp
adc
cmp
jns
mov
fiadds
xor
popf
les
sbb
jbe
sbb
outsl
xchg
rorb
inc
add
fwait
inc
mov
mov
jmp
test
inc
popf
fisttpl
fsubrs
mov
fdivp
push
fs
mov
rolb
ljmp
frstor
out
sub
or
lock
inc
in
aam
pop
jle
push
dec
lds
mov
es
testl
lock
add
int3
xchg
jne
mov
mov
out
out
add
jg
adc
and
cli
outsl
lret
pop
jp
dec
outsb
sbb
mov
aaa
mov
dec
and
pushl
pop
gs
push
mov
ja
mov
sahf
sub
xchg
mov
push
ljmp
jmp
jnp
dec
mov
jecxz
mov
ss
adc
sub
addl
mov
jmp
das
push
repnz
jp
xor
loop
xchg
adc
inc
dec
and
fs
jl
sti
xor
and
clc
sub
jbe
xor
sub
mov
jae
sbb
cmpsl
sub
or
jg
add
push
inc
adc
sub
mov
pop
and
je
pop
add
dec
aas
into
enter
and
das
sahf
and
in
lea
dec
call
pushl
lock
loope
shrb
inc
or
dec
loop
fnstenv
ret
addr16
dec
jg
lock
xchg
xor
mov
fs
int3
push
out
adc
outsl
jmp
xor
adc
insl
mov
sbb
add
incl
sbb
or
xchg
cmp
das
fdiv
xchg
push
mov
divl
stos
push
sbb
sub
mov
xchg
test
mov
adc
cmpsb
pop
add
cwtl
mov
loopne
addl
aad
xor
aaa
daa
mov
subb
repz
push
jae
decl
int3
sbb
xor
mov
sahf
rclb
cmpsb
lock
call
mov
ret
adc
xorb
jne
into
ds
push
out
jae
ljmp
and
mov
dec
add
pop
mov
jbe
in
mov
xchg
cli
dec
arpl
push
aam
xor
or
add
lock
cmc
mov
adc
xchg
cmp
add
ljmp
mov
subb
jno
or
shlb
in
mov
pop
mov
in
mov
mov
sbb
or
mov
cmc
aas
out
lret
fstpt
in
stos
jo
pop
cltd
push
jbe
jmp
and
fwait
outsl
push
jae
lods
aaa
decl
push
push
cwtl
xor
cmp
out
adc
call
adc
xchg
jb
ja
jnp
in
mov
shl
mov
clc
lcall
jge
pop
iret
or
lahf
subb
mov
daa
cmpsb
cld
jg
dec
ret
jp
iret
lds
inc
xor
sbb
pop
movsl
cli
xor
mov
fildll
sbb
or
push
mov
xchg
push
mov
sub
inc
xor
scas
pusha
mov
cmp
sbb
pop
add
sbb
mov
cmp
mov
ds
movsb
sbb
mov
mov
push
adc
jne
and
cmp
xor
sbb
pop
in
aaa
subb
out
jne
xor
movsl
es
pop
add
cmp
outsl
pop
xchg
inc
hlt
add
loope
out
fdivs
cltd
stos
or
into
outsb
xor
frstor
mov
ret
loop
call
mov
fwait
inc
fmul
sbb
test
push
cmc
inc
cld
inc
lock
push
jl
loopne
lcall
outsb
inc
je
adc
ja
sub
filds
icebp
pop
negb
cmpsl
adc
ljmp
add
dec
add
stos
cmp
data16
mov
fnstenv
out
push
mov
cmp
loopne
dec
lea
and
mov
push
out
int3
mov
ja
scas
leave
add
sti
mov
push
xchg
pop
cmp
jp
je
push
mov
nop
xchg
mov
pop
addb
nop
sub
pop
loopne
mov
sahf
mov
leave
lcall
loope
push
mov
push
dec
mov
xlat
inc
cld
stos
add
in
or
mov
or
jl
mov
mov
mov
out
mov
cmc
pushl
jmp
or
pop
or
adc
lret
and
js
jb
xor
scas
xchg
jle
sub
xor
xchg
jb
ljmp
inc
js
sahf
inc
leave
inc
dec
and
xor
or
outsl
xchg
push
xchg
outsb
insl
sub
jmp
mov
jge
clc
and
mov
mov
movsl
cmpsb
dec
xchg
xor
push
xor
jmp
jbe
jbe,pn
ret
in
pop
mov
in
out
cmpsb
and
xchg
decl
or
mov
shll
test
lret
jnp
lock
or
pop
negb
xor
push
xchg
or
xor
sbb
mov
movb
dec
or
leave
inc
loopne
xchg
decb
mov
push
addb
pop
fdivrl
call
and
sbb
mov
ds
push
stos
sahf
inc
sti
dec
in
imul
jg
cmpsb
jg
jl
pop
ja
fisttpl
imul
fs
adc
mov
dec
or
pop
call
jbe
stos
movsb
out
push
clc
outsb
push
lea
fsts
lcall
dec
out
or
add
scas
jle
xchg
inc
xchg
icebp
add
or
mov
mov
mov
lods
aaa
pushf
lret
das
pop
or
push
andb
es
sti
add
or
stos
scas
stos
inc
stos
mov
loope
addl
push
test
xchg
cmc
mov
push
decb
push
shll
aaa
cld
lret
ljmp
in
xchg
scas
jmp
test
push
mov
and
ljmp
mov
pop
insb
pop
lods
xchg
mov
push
push
jb
stc
stos
into
jb
xchg
movsb
push
ret
jbe
call
adc
or
les
insl
mov
adc
je,pn
xchg
lcall
dec
in
popf
jb
pop
push
add
popf
lret
xchg
sbb
icebp
and
push
pushl
xor
cld
pushl
push
or
and
lods
pop
pushf
fs
rcrl
pop
hlt
lcall
inc
movsl
mov
scas
inc
int
mov
insb
adc
sub
and
xchg
cmp
test
push
sub
dec
sub
inc
xor
addr16
xor
cltd
cs
jge
and
outsb
sbb
jmp
pushl
dec
inc
or
push
mov
mov
mov
sub
gs
xor
xor
or
jge
xor
inc
pushf
cltd
mov
ss
lock
cli
das
jl
xor
push
in
ja
mov
adc
lock
data16
adc
mov
jae
imul
cltd
mov
push
adc
dec
movsl
push
xchg
push
arpl
sahf
xchg
xchg
jbe
xchg
inc
add
adc
xchg
outsb
and
int3
incl
dec
cli
lods
jp
addb
test
xchg
loopne
push
mov
addr16
movsb
pushl
leave
cmc
jo
pop
mov
insl
jnp
clc
insl
cmp
in
out
inc
push
xorb
jo
pcmpeqb
and
sub
data16
popa
test
inc
fs
negb
and
or
push
jae
pop
leave
out
adc
jbe
mov
xor
incb
dec
xor
push
movsl
mov
sbb
sarl
add
pop
dec
loope
in
cs
add
adc
das
pop
jbe
inc
dec
popa
push
push
mov
or
inc
pop
cs
dec
dec
push
sti
or
mov
push
inc
jg
data16
ret
movsl
push
and
mov
pop
jmp
jmp
adc
movsb
sbb
inc
sub
imul
jge
pushf
rcrb
lcall
sbb
leave
mov
jbe
decl
push
ds
jle
push
fs
xchg
aas
clc
mov
es
stos
cmp
mov
lea
xor
ljmp
pop
pop
cmp
xchg
mov
push
cmp
push
mov
icebp
pushf
inc
and
inc
lret
std
outsl
decl
adcl
push
xor
cmpsl
insb
mov
xchg
jne
sub
inc
pop
insl
inc
hlt
movsb
rcrb
cld
inc
dec
mov
sub
pop
inc
push
sbb
dec
inc
and
dec
xchg
es
aad
jmp
scas
jl
test
fs
mov
ss
xor
xchg
addr16
ss
fldenv
add
aad
pop
push
add
fbld
xchg
xchg
popa
fiadds
ja
mov
loope
dec
ljmp
lea
outsb
les
inc
mov
out
leave
pushf
cmpsl
jp
fbld
fbstp
add
add
jb
fwait
lea
dec
xor
xchg
mov
mov
test
addr16
mov
into
mov
and
lret
mov
pushl
scas
push
push
outsl
jo
fnstcw
pusha
pop
imul
push
js
out
xlat
pop
popa
push
adc
xchg
and
sahf
insb
push
fs
test
les
in
push
shrl
inc
and
lcall
mov
lret
lods
sahf
dec
mov
popa
ja
add
sbb
movsl
icebp
lcall
cmpsb
pop
shlb
dec
ficomps
popa
imul
and
dec
addr16
ret
dec
clc
out
xchg
xchg
loopne
das
jo
inc
push
rolb
outsl
push
push
shl
stos
pop
cli
addr16
push
inc
mov
in
dec
and
addl
jl
push
imulb
cmp
clc
cli
decl
and
into
andb
dec
loop
ret
push
gs
and
int3
mov
pop
sbb
xchg
inc
mov
ds
pop
popa
jmp
jp
orb
pop
add
out
jne
xchg
mov
fiadds
pop
cmpsb
adc
mov
sub
push
in
cmpsb
insl
popf
jle
xorl
mov
xchg
ret
or
xchg
jno
xor
lods
mov
push
dec
jbe
incl
clc
les
mov
cmp
sub
inc
lcall
sbb
inc
lea
movsb
jb
dec
jge
mov
xor
mov
push
dec
inc
dec
add
loopne
mov
inc
outsb
mov
pop
je
dec
in
scas
jb
pop
push
shll
or
sbbl
dec
mov
addr16
adc
dec
or
sbb
add
jbe
xlat
mov
or
repz
out
sbb
jmp
sub
mov
imul
sbb
out
scas
xchg
fwait
movsb
cmpsb
pop
movsb
lods
cli
data16
out
out
repnz
stc
mov
add
aaa
ss
push
pop
pusha
jg
clc
adc
cmp
or
inc
clc
mov
in
arpl
push
push
push
xchg
sub
pushl
cs
clc
push
outsb
in
dec
jp
push
pop
out
lcall
pushl
sbb
subb
jae
pop
sub
addr16
pushl
jecxz
xchg
lods
loop
mov
out
movsl
cmpsb
pop
push
popf
mov
fst
mov
in
or
jl
in
inc
pop
mov
call
inc
outsb
aas
fisubrl
adc
mov
cli
lcall
jp
or
sub
sbb
stos
dec
push
outsb
jnp
es
add
ja
out
sub
or
loopne
cmpsb
aam
and
add
call
mov
sub
sub
test
push
test
xchg
inc
or
addr16
pop
insb
in
cmpsl
scas
test
push
push
insl
mov
movsb
xchg
mov
inc
jnp
cmp
fstps
test
in
outsb
pop
fistps
push
fs
sbb
jbe
mov
xchg
or
cmpsl
into
das
gs
cmp
add
andb
mov
add
test
cld
ljmp
cld
sqrtps
mov
sub
adc
mov
arpl
sbb
inc
and
shrl
push
push
clc
call
sbb
std
pusha
shlb
xchg
pop
ljmp
cmpsl
sbbb
mov
gs
dec
jecxz
rorb
outsb
cmp
pop
out
pusha
int3
add
mov
cltd
cmpsb
mov
lcall
inc
cld
jl
call
xchg
mov
jno
fdivl
push
ljmp
inc
loopne
test
or
and
push
dec
fisubrs
popf
xchg
mov
pushl
insl
sbb
xor
arpl
pushl
sbb
mov
inc
and
adc
xor
ss
push
mov
lret
cwtl
jle
or
test
inc
stc
dec
jb
sahf
xchg
daa
insl
dec
jb
ja
sbb
test
ficoms
sbb
ret
push
cli
cmp
inc
push
dec
mov
es
jno
jge
push
dec
mov
mov
fwait
jg
outsb
out
sub
mov
ret
iret
add
jg
hlt
aas
mov
mov
pop
xchg
iret
scas
cmp
nop
cld
ljmp
outsl
cld
pusha
out
scas
jo
mov
mov
dec
jl
jmp
mov
lcall
or
push
cwtl
popa
cld
sti
cmp
lret
das
inc
in
shld
mov
inc
mov
and
or
adc
ljmp
popf
ja
xchg
mov
cmpsb
stc
ds
in
adc
add
call
mov
xchg
jns
mov
cmc
mov
cmpsb
pop
call
mov
or
add
push
mov
mov
jg
inc
jmp
pop
daa
pushf
mov
mov
int3
or
insb
int3
adc
es
inc
andl
insb
test
mov
pop
fisubs
jne
mov
sarl
sub
jecxz
xchg
idivl
jge
or
pushl
lea
stos
jnp
scas
mov
cli
mov
fcomps
pop
mov
fistpll
add
cli
cmp
hlt
mov
mov
mov
jecxz
mov
nop
xlat
std
pop
std
scas
pop
adc
mov
insb
je
mov
int
lea
insl
rolb
fstps
arpl
scas
push
sahf
shl
cltd
into
add
mov
sbb
mov
add
movsb
mov
add
dec
lods
cld
cmpb
cmpsb
enter
test
cmp
push
out
shll
mov
lcall
outsl
mov
stc
jae,pn
test
xchg
xchg
ret
and
mov
mov
fsubrs
call
dec
inc
xlat
cmp
test
push
mov
inc
inc
movsb
scas
mov
rcll
mov
jg
insb
inc
std
and
inc
cmpsl
xchg
loope
bound
in
in
cltd
mov
lcall
add
sti
sbb
pop
in
add
sub
jbe
pop
into
lahf
scas
pop
sbb
mov
fs
call
test
icebp
xchg
xchg
push
push
lods
xor
push
lahf
clc
and
push
clc
add
add
pop
xorl
or
shlb
mov
mov
jg
xor
xor
jg
lret
or
mov
lods
lods
movsb
lahf
mov
repz
mov
sti
js
push
or
cli
add
xchg
enter
sbb
rorl
icebp
shld
adc
nop
push
mov
lods
ja
cld
jmp
out
imul
jb
add
call
adcb
mov
mov
dec
scas
lods
mov
cmp
fcoms
ret
in
and
pop
cwtl
sub
sub
push
movsl
dec
insb
out
jne
into
loopne
pop
sarb
cmpsb
lcall
dec
add
ffree
cwtl
scas
mov
ljmp
push
faddl
shr
adc
test
pop
jecxz
lcall
mov
aam
mov
jmp
dec
je
mov
fstpl
pop
dec
pushf
add
xchg
inc
rorb
daa
mov
or
mov
pop
sub
pop
push
mov
divb
rorb
cs
cli
lret
or
add
mov
cltd
test
push
push
in
xor
leave
add
fcmovnu
sub
fs
mov
int
xchg
push
xchg
mov
add
les
mov
mov
ret
call
scas
pusha
nop
sahf
lock
mov
loopne
cmc
test
push
mov
clc
pop
push
int3
push
popf
movsl
lods
loopne
daa
inc
pop
loopne
add
jo
cmpsb
lcall
cwtl
out
inc
in
cmp
cwtl
mov
ljmp
pmaddwd
test
add
and
repz
icebp
fdivp
sub
cmpl
roll
idiv
cli
xchg
xor
xor
les
in
shrl
xorb
pop
or
nop
inc
mov
xlat
imul
pop
and
push
loop
or
out
adc
mov
add
mov
test
lahf
inc
bound
incb
mov
shrb
das
and
mov
cmp
stos
xchg
xchg
in
add
incl
sub
cli
add
mov
mov
pop
cmp
add
xchg
call
shll
and
aas
sbb
mov
xchg
mov
xchg
rcrb
push
ds
icebp
push
mov
ror
cmp
jmp
or
das
mov
shlb
cmpsl
lret
inc
loope
lcall
inc
mov
fiaddl
jbe
mov
mov
mov
std
inc
mov
fcoms
lock
cmc
lds
aaa
repz
cs
into
add
fildl
lds
lods
rcrb
ret
mov
rcrl
jno
mov
sahf
lret
std
pop
mov
es
cmp
push
ret
push
mov
pop
ljmp
add
out
or
and
cmc
mov
cmp
mov
dec
pop
cltd
cmpsb
shrb
xchg
pushf
mov
adc
and
jbe
orl
mov
mov
repnz
cmpb
into
or
add
out
daa
cli
inc
scas
clc
xchg
fldl
popf
dec
xor
xchg
mov
pusha
fwait
or
and
movb
xchg
mov
aaa
negl
sahf
sahf
lea
int3
dec
out
in
add
ljmp
enter
mov
daa
push
jcxz
mov
cmp
pop
lahf
je
or
fistpll
lcall
andl
xor
addr16
sbb
loop
sbbl
decl
lret
lods
cwtl
mov
sub
cmp
ficoml
je
dec
scas
in
push
push
jl
add
mov
dec
inc
hlt
daa
sahf
loope
mov
push
cwtl
movsb
nop
cltd
test
fwait
add
aam
and
aas
rcrl
jge
xchg
xor
bound
mov
mov
out
add
imul
jle
clc
cmc
xchg
lahf
data16
xchg
ljmp
xchg
jl
inc
pushf
dec
mov
mov
popf
xchg
lcall
or
mov
xchg
xchg
in
imul
repz
push
mov
xchg
mov
mov
cmp
rorl
sub
lcall
mov
mov
pop
iret
adc
scas
inc
mov
pop
nop
das
mov
ljmp
outsb
jne
aam
cmpsb
mov
incl
decl
stos
stos
inc
out
cmpsl
int3
xor
rorb
std
cmp
clc
add
stos
orb
fwait
cmp
mov
pop
pop
test
ret
mov
pop
mov
inc
dec
movsl
pop
callw
icebp
sbb
incl
ds
cmp
mov
insl
call
mov
add
mov
movsb
loopne
mov
sti
cli
mull
or
fsubl
mov
loop
inc
clc
inc
xchg
test
lahf
mov
lea
mov
loope
mov
xchg
fstl
xchg
mov
stos
scas
xchg
popf
jle
inc
pushl
mov
mov
mov
loope
stos
loope
lret
jmp
mov
lds
ljmp
rol
mov
test
jmp
inc
jle
sbb
mov
jg
mov
mov
es
fcmovnb
nop
ds
out
push
mov
sbb
outsb
jmp
fidivl
mov
fnstsw
mov
pusha
add
inc
dec
cs
scas
xchg
lock
sahf
inc
jmp
in
into
aaa
aas
dec
test
iret
cwtl
xlat
mov
pop
lcall
cwtl
mov
cltd
cltd
mov
sub
ja
js
mov
dec
fwait
arpl
popf
xchg
mov
mov
out
out
out
ret
imulb
inc
jnp
xchg
add
out
out
jl
outsb
jle
dec
scas
cltd
xor
movsb
sbb
into
in
stos
dec
arpl
call
mov
or
shlb
movsl
sub
mov
add
aad
jbe
push
mov
cld
cmc
push
jno
ljmp
int3
divb
fcomp
sub
fdivl
lea
call
inc
push
jae
rclb
clc
cld
dec
gs
cltd
dec
std
out
popa
jo
pushl
aam
mov
pop
xchg
sub
adc
fxch
add
arpl
push
repnz
or
sub
aas
jmp
push
popa
in
movsl
data16
stos
push
push
mov
dec
jp
mov
push
decl
add
push
test
dec
out
dec
inc
cmp
jae
das
shrb
dec
insl
xlat
lods
outsb
movsl
xchg
pop
pop
andl
outsb
dec
inc
lahf
data16
insl
popa
enter
jg
or
dec
dec
push
xchg
jno
xchg
gs
hlt
xchg
push
push
out
inc
inc
int3
lods
dec
jo
cmp
push
adcl
dec
jbe
dec
arpl
push
push
dec
stos
inc
pop
push
mov
xcrypt-cbc
cmpsl
push
push
and
push
insb
xor
and
insb
ss
mov
popl
data16
cmpsb
jnp
add
mov
insb
ss
scas
mov
mov
fwait
int
mov
movsb
dec
mov
mov
pop
sahf
pop
fwait
or
and
insb
ss
int
mov
lds
mov
mov
test
push
insb
ss
mov
jne
and
sub
mov
fstp
add
or
pop
xor
scas
rcll
jne
jecxz
dec
add
push
jge
shrb
loop
jmp
in
loopne
je
jecxz
je
orb
ja
pop
push
ss
ds
xchg
jge
pusha
inc
push
inc
scas
fiadds
push
push
sahf
jae
xor
es
mov
jg
cs
dec
push
aas
inc
inc
or
cmp
ss
push
cmp
daa
aas
and
sub
pop
cld
ljmp
mov
mov
les
dec
jge
and
scas
mov
inc
add
out
bound
add
add
negl
je
push
and
and
jg
lcall
xor
sbb
cmp
sahf
sub
or
cmp
adc
dec
sub
inc
nop
and
pop
adc
and
or
out
and
sbb
and
push
xchg
cmpsb
dec
mov
or
dec
push
decw
ljmp
inc
jno
jns
cmpsb
outsb
lahf
inc
push
arpl
jae
frndint
rcrw
sbb
dec
ljmp
xor
jno
push
loope
mov
test
jb
dec
pusha
inc
pop
inc
insb
dec
pop
inc
inc
popa
js
pop
pop
popa
ja
inc
outsl
fildll
push
push
inc
mov
scas
clc
aaa
cld
inc
pop
insb
inc
dec
dec
push
pop
push
bound
jb
push
push
pop
jo
jg
adc
sbb
sub
and
sub
push
sub
cmp
sbb
aaa
and
push
adc
or
push
xor
fsubrs
pop
and
sub
and
mov
add
pop
add
or
dec
adc
pop
je
pop
pop
inc
adc
jbe
lcall
jp
out
add
and
adc
and
sbb
adc
inc
and
jo
fs
push
jo
outsb
lcall
sub
inc
add
and
es
or
das
rol
jmp
and
add
or
daa
cmp
and
pushl
adc
das
xor
or
cmp
xor
adc
push
cvtps2pi
add
and
jbe
cwtl
add
inc
lds
scas
cwtl
loop
popa
ss
es
pop
inc
sbb
daa
and
inc
jb
mov
push
addr16
jle
add
packsswb
data16
push
addr16
ss
inc
subl
aam
pop
add
ds
mov
insb
inc
jge
jno
sbb
add
fmuls
cmp
clc
adc
jo
outsl
push
dec
dec
pop
inc
inc
inc
sahf
xor
cmp
ja
aas
cmp
cmp
pop
decl
sbb
insl
sub
jp
jno
push
popa
daa
fwait
xchg
int
aas
imul
icebp
scas
jae
xchg
outsb
inc
inc
fcomps
in
jle
dec
addr16
roll
nop
inc
bnd
inc
inc
jle
inc
fstl
test
push
dec
lods
gs
xor
mov
cmp
daa
or
loop
adc
jbe
dec
adc
subl
adc
aaa
adc
push
sbb
inc
inc
es
or
aaa
cli
mov
inc
jp
pusha
das
or
adc
daa
adc
jg
addr16
cmp
push
jns
pop
mov
sbb
or
add
cmp
sbb
push
decl
inc
pop
or
and
and
push
xor
sub
pop
inc
push
cmp
pop
sub
popa
cmp
filds
cmp
pop
or
cmp
inc
call
loopne
sbb
cmp
pop
xor
push
cmp
push
or
or
sbb
inc
and
adc
clc
idiv
cmp
inc
xor
push
add
sbb
call
push
xor
add
and
adc
sbb
dec
daa
or
clc
xchg
ret
xor
adc
sub
add
dec
incl
popl
inc
insl
pop
push
or
push
arpl
push
jo
xlat
pop
fs
sub
push
push
push
inc
js
popa
push
cmp
sub
ss
push
std
jg
fs
push
sbb
add
xor
or
adc
add
push
ja
incl
adc
add
cmp
ds
cmp
mov
adc
adc
and
sbb
sbb
sarl
or
and
pop
shlb
es
dec
adc
jg
gs
and
cmp
sbb
je
aas
add
sub
adc
add
push
lock
call
push
das
das
getsec
insb
sub
daa
dec
cmp
sub
mov
popa
insl
sub
xor
push
pop
or
jne
test
dec
add
push
cmp
cli
idiv
sub
sub
or
add
shlb
jg
incl
pop
push
gs
jns
add
pusha
pusha
jp
dec
push
inc
add
cmp
pop
pop
dec
add
or
add
or
inc
les
add
cmp
or
xor
add
jg
jle
jnp
push
loopne
arpl
insb
sub
ds
gs
and
and
fimuls
bound
push
push
push
sbb
jg
popa
push
jbe
sub
repnz
pop
push
or
ja
gs
and
sbb
and
aaa
add
cs
push
out
cli
jge
arpl
jle
inc
push
imul
sub
ds
sub
xchg
mov
clc
or
push
cmp
and
push
pop
icebp
pop
or
mov
pop
inc
ja
add
int3
push
push
and
or
add
sub
sub
insl
es
and
dec
pop
test
std
shrl
sbb
js
fsubrs
incl
sbb
add
sub
or
or
pop
add
add
cmp
push
aas
xor
mov
or
sub
gs
pop
jnp
test
add
jbe
ds
enter
and
xor
adc
das
add
sub
add
cmp
or
mov
outsb
and
bound
dec
outsl
or
dec
or
and
adc
ds
sbb
or
sahf
cmp
push
icebp
stos
rcrl
out
xor
pop
xor
sbb
sbb
fisubs
push
dec
push
ds
popa
cli
scas
js
or
and
pop
fs
push
add
aaa
sub
sub
push
pop
ds
inc
jp
jle
jge
push
xor
add
outsl
pop
pop
jbe
push
or
add
add
or
fwait
aaa
sub
push
jne
push
sub
scas
mov
mov
sbb
sbb
insb
pop
jg
stos
sub
pop
ljmp
push
das
pop
xor
shrl
xchg
out
and
push
sarb
add
and
dec
add
push
push
adc
pop
addr16
or
push
addr16
arpl
sub
xor
insb
sub
ljmp
jl
sub
push
add
and
and
cmp
and
cs
jbe
push
push
sar
jp
push
push
xor
es
xor
and
or
or
sub
and
ja
cmp
adc
add
jmp
sub
aaa
and
cmp
jne
inc
or
jbe
inc
incl
xor
aaa
je
xor
or
push
int3
xor
test
push
add
sbb
add
sub
add
fcomip
out
lahf
sbb
add
adc
aas
in
aaa
xor
sub
call
in
xchg
push
or
push
jo
cvttps2pi
pop
sub
sbb
or
sub
lcall
and
dec
inc
dec
dec
or
and
sub
out
push
inc
or
decl
js
add
and
sbb
es
push
pusha
je
pop
loopne
or
mov
cmp
adc
xor
and
decl
push
adc
adc
add
pusha
xchg
std
and
and
imul
decl
push
and
push
sub
adc
and
insb
add
add
and
pop
push
adc
add
pop
hlt
jg
dec
mov
push
cmp
add
fiadds
arpl
xor
sub
and
sub
and
popa
bound
dec
cmp
daa
xor
pop
arpl
add
insl
cmp
mov
or
incl
bound
and
es
js
daa
or
adc
ljmp
xor
sub
and
xor
inc
add
pop
mov
pusha
popa
adc
pusha
cld
dec
sbb
push
cmp
push
add
add
or
je
push
int3
cmp
and
push
or
or
divb
cmp
dec
mov
add
daa
dec
pop
add
adc
adc
add
sbb
pop
icebp
call
pop
push
or
dec
push
insb
sbb
or
aaa
adc
pushl
pop
cmp
das
cmp
adc
sbb
jbe
cmp
pop
sub
jp
pop
sub
cs
and
inc
sbb
aaa
clc
mov
aam
js
popa
xor
and
fwait
stos
add
fisubrs
insb
and
and
incb
add
jo
aaa
xor
pop
sbb
out
clc
or
push
ja
sahf
ss
sbb
das
jo,pt
add
pop
and
pushf
mov
adc
or
ret
loopne
mov
lock
and
sub
adc
call
jno
inc
das
adc
or
xor
ds
jg
sbb
adc
xor
sub
into
and
pop
jo
nop
or
xor
and
push
adc
or
es
adc
dec
xchg
lods
push
adc
push
dec
sbb
inc
das
scas
daa
adc
inc
xor
or
or
popa
cmp
out
lock
xor
popa
das
sub
push
pop
sub
ss
pop
jo
jo
and
or
xor
inc
jbe
xor
xor
cmp
push
es
and
daa
sbb
push
pop
adc
add
mov
pop
into
xor
dec
add
push
sbb
xor
sbb
es
and
rcrl
adc
and
add
push
cs
and
fistpll
cmp
or
or
sub
or
pop
and
jg
add
cvtps2pi
inc
xor
sub
and
pop
subb
pop
and
ds
cs
jbe
mov
rcrb
add
adc
jne
add
cmp
sarl
xor
adc
or
dec
ljmp
jo
pop
and
cmp
add
aas
and
inc
xor
icebp
mov
es
fs
and
adc
or
add
fwait
adc
pop
and
pop
sbb
and
ud0
or
mov
xor
add
or
pop
push
sub
mov
push
aas
ds
sub
and
inc
sub
push
and
and
xor
pop
aaa
std
outsl
adc
cmpsb
sbb
cmp
pop
push
sbb
pop
push
add
or
push
unpckhps
mov
sub
push
pop
cmp
push
push
sbb
sub
add
shlb
sub
sub
or
jb
push
sbb
add
xor
or
call
jg
outsl
stos
mov
cmp
inc
xor
adc
cli
push
pop
push
or
or
cmp
sbb
push
pushl
cmp
and
or
cmp
sbb
adc
test
sub
insb
insl
or
pop
sub
and
cmp
or
sahf
sbb
nopl
movb
and
stos
mov
sbb
imul
lahf
incl
cmp
xor
cmp
add
adc
xor
push
sub
cmp
jle
aas
dec
or
pop
testb
inc
aaa
add
es
cmpsb
das
sub
adc
add
push
sbb
das
cmp
or
orl
pop
sub
pop
mov
xor
push
sbb
adc
jg
aad
sbb
sbb
jle
cs
or
adc
mov
and
ds
jmp
xor
add
add
stc
aas
call
or
push
xor
adc
or
jno
mov
add
mov
mov
out
sbb
push
pcmpgtb
adc
jg
std
dec
jp
push
jne
inc
dec
pop
jg
inc
push
fwait
lcall
jb
pop
inc
sahf
insb
push
outsl
gs
push
cmpsl
cmpsb
sbb
sbb
fwait
scas
push
shrl
imul
outsb
dec
dec
push
jno
lcall
insl
pop
dec
pop
js
inc
pop
adc
dec
inc
dec
inc
sub
das
pop
data16
pusha
jg
push
pop
sub
push
ss
push
pop
lock
sub
push
jnp
insl
dec
cmc
mov
pop
pop
imul
push
inc
inc
enter
sbb
cmp
or
sub
cli
gs
sub
add
es
stos
lock
loopne
pop
popa
jp
or
push
xor
jg
movl
pop
es
ss
sub
adc
or
cmp
cs
or
cmp
aaa
adc
push
xor
adc
xor
push
xor
cmp
add
pushl
pusha
inc
fs
dec
push
in
inc
jae
jae
dec
icebp
jns
lahf
out
dec
push
mov
fbstp
cmpsb
cmp
scas
aad
gs
dec
jge
jne
fistpl
decl
jmp
jge
jmp
popaw
ret
jno
in
dec
je
testl
aam
jno
lcall
fsubl
out
push
inc
in
inc
push
dec
pusha
ret
lret
push
inc
fildll
jecxz
insb
pop
imul
dec
pushl
enter
loop
dec
in
ret
outsl
je
out
push
inc
or
push
jl
leave
push
jno
jecxz
gs
push
pop
adc
jmp
cli
aas
lret
cmpsl
fsts
out
xor
add
ss
int
add
out
jp
lahf
cmpsl
fldcw
dec
lds
popa
cld
fwait
iret
repz
pop
push
mov
and
fldcw
lret
iret
call
int
adc
jecxz,pt
ret
test
int
fldcw
sti
loope
in
adc
insb
ss
jmp
loopne
clc
push
enter
int
mov
in
mov
mov
stc
mov
insb
ss
or
and
fwait
int
cmpsb
roll
repz
insb
sub
imul
sub
call
jbe
outsb
inc
movsb
das
add
dec
jbe
jno
push
data16
sbb
outsl
imul
xchg
pop
push
rolb
push
dec
outsl
jo
pop
hlt
push
and
inc
jo
outsb
push
push
dec
inc
inc
push
push
jbe
push
pop
cs
jns
jle
pop
inc
inc
push
pusha
pop
inc
insb
inc
inc
pop
ja
popa
insb
decl
imulb
inc
in
enter
rcll
out
push
pop
fistpll
ja
pop
inc
pop
pop
jo
arpl
xor
push
cld
jp
jne
push
lret
jb
fildll
insl
dec
inc
outsb
dec
pop
jp
jno
push
or
push
push
dec
pushf
push
inc
push
and
jbe
dec
dec
jae
push
inc
jae
pop
lret
cmc
ljmp
dec
inc
bound
jo
rclb
jo
outsb
cmc
inc
outsl
push
int3
arpl
fs
inc
pop
imul
inc
push
push
jb
push
mov
mov
push
popa
push
pop
adc
dec
jnp
bound
inc
jno
pop
dec
outsb
pop
and
gs
bextr
dec
fs
inc
jo
push
pop
je
ja
jo
daa
dec
dec
jne
dec
inc
push
gs
mov
pusha
insb
dec
gs
addr16
inc
lock
mov
push
push
lods
dec
inc
inc
imul
mov
jp
ljmp
insl
jge
jg
arpl
pop
gs
xor
inc
jg
dec
jp
jno
push
jg
jl
ror
fs
pop
ret
lds
dec
call
jae
push
rcl
mov
scas
inc
push
out
out
outsl
testb
lock
jno
inc
leave
xor
push
addr16
inc
pop
push
push
push
jno
mov
lcall
insl
push
addr16
pusha
dec
dec
data16
sub
fs
inc
inc
pusha
ljmp
decb
push
push
push
push
jae
push
lret
inc
cli
dec
in
lret
inc
int
das
clc
call
inc
dec
jno
bound
push
inc
push
stos
outsl
dec
insl
fs
pop
pop
ja
js
das
sub
dec
inc
insl
dec
pop
lock
imul
jmp
dec
gs
pop
push
fs
push
pop
movl
jo
push
outsl
dec
inc
jne
dec
and
daa
data16
js
fildl
dec
addr16
imul
inc
dec
gs
pop
xorl
dec
dec
insl
je
dec
jb
jno
pusha
xchg
es
push
in
jae
dec
popa
shll
out
push
push
sbb
addr16
insb
sbb
dec
inc
je
lea
insb
gs
push
loopne
push
lock
pusha
dec
dec
je
imul
jo
inc
inc
arpl
clc
subb
jnp
push
inc
push
popa
push
push
dec
inc
jp
es
inc
dec
push
inc
mov
insb
repz
fcmovu
icebp
shr
lret
idiv
jmp
repnz
fdiv
ffreep
rcl
int3
xlat
shr
jmp
clc
in
ret
in
ljmp
in
aad
lret
sti
shl
cmpsb
test
xchg
mov
mov
addb
mov
mov
std
fldt
lea
add
xchg
nop
test
fwait
ja
pop
lock
inc
dec
jne
fs
bound
pop
xor
pop
jge
icebp
sub
jbe
gs
dec
insl
pop
inc
push
pop
jno
jp
xor
jg
cmp
push
dec
imul
jno
jg
pop
inc
inc
jl
dec
pop
and
decl
insb
or
and
push
sub
cmp
or
pop
cmp
xor
adc
push
sub
call
sbb
or
xor
xor
pop
cmp
ds
aas
cmp
pop
aas
add
adc
push
cmp
das
int3
add
rcl
aad
in
clc
ffree
int3
test
rcr
rcr
ret
aam
xlat
jmp
clc
jmp
imul
out
jmp
ret
repnz
cmp
clc
and
out
iret
rol
hlt
fildl
jg
mov
cmpl
xchg
xchg
lock
stos
mov
decl
mov
mov
mov
loopne
lcall
stos
scas
mov
shl
lret
leave
loope
or
ret
cmc
call
fildll
repz
fadds
in
clc
in
leave
jmp
in
in
call
jmp
fstp
int3
lret
fcmovb
repz
fcmovbe
icebp
aad
iret
int
out
mov
mov
decl
cmpsl
mov
mov
lea
xchg
mov
scas
xchg
lods
xchg
xchg
adc
subb
xchg
or
rcr
or
mov
mov
jb
arpl
incl
popa
gs
inc
dec
pop
pop
pusha
dec
inc
jg
jae
jbe
jge
fists
mov
push
pop
inc
dec
arpl
add
js
jge
pop
cmc
call
inc
gs
dec
jge
js
jns
jl
rdtsc
xor
xor
add
fisttps
sbb
and
add
stos
push
and
sbb
cmp
push
sub
and
push
or
movups
add
and
sbb
xor
push
sub
sub
clc
cmp
repz
aam
out
stc
in
sti
lret
jecxz
not
push
rol
aam
in
ljmp
icebp
lock
in
loopne
not
std
repnz
dec
cli
lret
fcmovb
stc
int
les
sti
fucomi
lock
test
xchg
orl
lcall
movsl
movsb
mov
mov
xchg
mov
test
mov
call
stos
mov
xchg
mov
movsl
mov
and
dec
aas
movb
divb
pop
xor
fs
push
or
add
jb
push
or
outsb
lcall
add
cmp
inc
add
sbb
add
sub
outsb
or
and
sbb
add
adc
sbb
or
cmpsb
cmp
sub
push
xor
es
or
xor
aas
jg
fbstp
cmp
inc
inc
add
and
lahf
jg
int
sbb
and
push
adc
and
sbb
cmp
cmp
stos
sbb
push
call
push
adc
and
xor
outsb
cmp
and
pushl
arpl
pop
and
pop
das
or
pop
and
push
push
sbb
pop
fmuls
sub
es
cs
aas
sub
add
aaa
incl
xor
push
cmp
sbb
push
sbb
daa
aaa
sub
or
fcomip
aaa
sbb
es
insl
ds
pop
and
insl
or
push
dec
push
cmp
call
adc
invd
popa
pop
ss
fs
sub
and
xchg
loope
xor
pop
dec
and
adc
es
cmp
jg
push
push
or
sbb
insl
lock
mov
add
xor
sub
push
ud0
add
sbb
dec
cmp
cmp
daa
sbb
adc
aas
and
xor
dec
cmp
es
mov
and
dec
adc
cmp
daa
jbe
cmp
stos
out
dec
xor
and
or
add
add
jnp
daa
and
push
mov
dec
sub
les
add
push
aaa
sub
sub
and
and
jbe
push
daa
jle
or
sub
sub
or
dec
sbb
xchg
push
push
inc
inc
std
and
or
xor
aas
and
sbb
xor
or
aaa
or
push
aas
clc
and
or
sub
add
push
sub
lea
incb
and
push
adc
and
jg
and
push
dec
add
cmp
inc
sub
add
cmp
adc
lds
mov
add
sub
or
icebp
pop
jo
aas
add
jle
sbb
adc
cmp
jbe
inc
pop
xor
cmp
sub
add
push
adc
fimuls
or
and
and
loop
nop
mov
es
addps
sub
sub
fdivr
or
outsb
pop
das
adc
es
jg
add
aaa
loope
sub
and
sahf
sbb
sub
fildll
sbb
add
push
jbe
sbb
xor
ljmp
sub
push
pop
nopl
xchg
xor
cmp
pushf
sub
sbb
sbb
xor
add
incl
pusha
mov
negb
jle
add
push
lods
or
pop
outsb
sbb
push
fdivrs
jne
add
sub
es
decl
daa
adc
sbb
sbb
sarb
ds
cmp
cmp
popa
or
stos
xor
cmp
adc
or
mov
cmp
sbb
sbb
push
xor
add
xor
cmp
mov
ja
sub
clc
push
popa
nopl
daa
sub
incb
jb
sbb
push
or
scas
push
jl
add
xor
push
add
jecxz
cmc
cmp
sbb
sbb
cmp
jbe
jns
and
mov
sbb
jg
lock
pusha
and
sub
xor
pop
or
add
xchg
dec
dec
sbb
cmp
or
sbb
jo
add
or
stc
decl
sub
and
das
jne
or
aas
and
add
push
push
cmp
add
jge
jle
push
add
xlat
pop
lods
fwait
mov
or
add
cmp
call
aaa
xor
je
and
test
fbstp
sub
adc
sub
sub
sub
sub
push
daa
cmp
add
add
outsl
sub
or
push
adc
adc
cmp
or
sbb
adc
aaa
or
dec
cmp
pop
add
sub
xchg
sub
ja
push
push
xor
jnp
pusha
pop
cmp
add
xor
cmp
decb
lock
lar
jnp
aas
sub
or
insl
cmp
and
push
or
sub
add
cmp
or
pop
push
sub
ss
sbb
push
or
or
mov
and
sbb
sbb
jle
stos
or
lahf
sbb
xor
sub
cmpb
or
and
add
adc
xchg
pop
dec
jbe
sbb
into
add
xor
arpl
or
cmp
or
or
and
cmp
adc
popa
add
adc
out
sub
sub
daa
fimull
adc
cmp
cld
call
adc
add
and
and
sbb
push
outsb
pop
and
scas
mov
dec
push
and
mov
je
sub
sbb
mov
addr16
add
pop
lcall
je
add
cmp
sub
sbb
push
push
incl
and
jo
add
sahf
xchg
and
outsb
jge
pop
push
cmp
cmp
pop
add
das
adc
push
ds
jl
sub
adc
sub
and
aaa
out
xor
xor
jb
out
mov
inc
mov
dec
jge
push
cmp
iret
add
inc
loopne
dec
xor
jg
mov
pop
xor
jno
aad
jno
or
inc
je
pop
cmp
or
jno
or
push
inc
adc
fcmovbe
testl
outsl
cli
push
dec
outsb
jle
push
ds
loop
dec
jae
das
pop
push
push
repnz
dec
sub
fs
push
inc
sub
insb
pop
fsts
or
xor
imull
addb
mov
stc
pusha
inc
or
sbb
ljmp
das
sahf
inc
jns
and
add
push
or
xor
les
add
or
imulb
sbb
enter
lcall
and
dec
lcall
dec
je
push
adc
ss
dec
in
dec
pop
sub
and
int
gs
adc
inc
push
jl
ljmp
push
inc
and
cmp
clc
insb
pop
and
inc
pushl
push
pop
pop
shrb
or
sbb
push
out
jl
xor
popa
pop
repnz
dec
jns
pop
add
push
mov
adc
push
mov
add
dec
stos
cld
dec
push
or
or
cld
xchg
int
jae
cmp
call
gs
int
push
add
outsl
jle
fwait
adc
sub
xlat
adc
or
add
push
dec
outsl
jle
iret
and
and
push
push
or
cmc
and
sbb
int
int
adc
cs
push
mov
sub
sub
cltd
std
xor
fimull
pop
and
hlt
cmp
aas
cld
repz
cli
push
add
jmp
std
adc
inc
cld
repz
daa
ljmp
adc
hlt
and
pop
inc
std
cld
repz
aas
adc
dec
jp
cmp
adc
mov
and
dec
mov
push
mov
int
mov
arpl
pop
mov
cld
out
mov
mov
popa
xchg
xor
sub
mov
filds
xor
testb
adc
or
stc
int
pop
sbb
cmp
and
lret
out
adc
gs
aas
fwait
int
or
insl
cmp
sbb
push
rcll
add
stc
int
jecxz
add
pop
xor
push
adc
add
adc
inc
repz
lret
cmp
aas
dec
jb
aas
xor
outsl
jle
sbb
imulb
cs
dec
cli
aaa
sbb
insb
mov
xchg
stc
pop
es
repz
xor
dec
jnp
dec
pop
js
dec
pop
push
pusha
ljmp
in
popa
jle
ljmp
adc
and
adc
stc
jmp
xor
or
and
pop
cli
out
out
in
popa
inc
push
dec
loop
inc
faddp
in
push
dec
or
xor
into
enter
inc
rolb
enter
jb
push
push
js
aaa
jmp
pop
pop
inc
push
cmp
out
pop
mov
add
and
sbb
push
and
fs
cs
imul
out
add
adc
pop
ss
or
ds
cld
ljmp
cs
inc
or
adc
sub
adc
or
cmp
add
sbb
aaa
xor
loope
pop
or
sbb
cmp
adc
add
adc
xor
lcall
or
push
cmp
sub
xor
push
add
fcomip
push
ljmp
sub
or
push
xor
test
cmp
cmp
decl
and
sub
sbb
and
and
mov
sbb
sub
sub
push
sbb
ret
jmp
sbb
cmp
add
sub
sub
sub
vdivsd
and
dec
jne
cltd
jbe
push
outsl
jne
mov
jo
sahf
mov
mov
sub
clc
add
xchg
inc
je
adc
xor
stos
fdivrp
out
inc
mov
repz
cmp
sbb
in
or
dec
shrb
or
sub
add
clc
jbe
cmp
adc
push
ret
dec
adc
mov
sub
jle
xchg
jno
jbe
jb
and
add
ret
xor
fisubrs
and
push
sub
ss
and
adc
add
adc
push
adc
cs
aaa
lock
xor
adc
add
cmp
adc
pop
add
ja
repnz
pop
xor
cmp
mov
push
fimuls
or
or
adc
dec
jl
loopne
xor
daa
and
dec
mulb
data16
ljmp
push
jo
xor
add
xor
add
test
add
and
or
sub
aaa
or
aaa
cld
add
jp
jp
popa
xor
sub
cld
incl
push
xor
dec
add
sub
push
and
stc
pop
or
adc
add
and
pop
out
and
jg
iret
ljmp
xor
xor
sub
inc
and
add
pop
ja
and
adc
push
xor
aaa
imul
xor
sub
or
icebp
test
cmp
popa
mov
xor
sahf
cmp
push
xchg
pop
sub
add
add
or
and
xor
mov
sbb
push
and
aaa
adc
es
sbb
pusha
push
ljmp
push
jb
sub
imul
and
push
sbb
das
cld
mov
and
xor
and
push
cmp
adc
push
pusha
inc
imul
sbb
daa
or
jbe
ss
incl
push
push
sbb
dec
sbb
push
popa
add
addr16
cmp
mov
inc
cmpsb
faddl
inc
and
jg
fwait
stos
mov
mov
jno
push
andnps
aaa
pop
push
sbb
sahf
add
dec
aad
push
jge
stc
jmp
pop
or
xchg
inc
fs
je
jg
je
jbe
pop
pop
push
jo
sbb
mov
dec
movsb
adc
dec
pusha
pop
pop
push
inc
push
xor
daa
arpl
out
dec
lcall
aad
sbb
test
addr16
inc
sbbb
jl
fcom
push
std
and
jno
imul
imul
jmp
or
xor
push
das
sahf
sub
ss
pop
lock
push
incl
fistpll
cmpsl
inc
lods
pop
data16
insb
inc
gs
ds
cmp
fwait
int
jl
push
cmpsl
dec
popa
inc
sub
jno
data16
cld
lea
inc
out
mov
fdivrl
int
sub
into
xchg
int
and
lock
sub
and
add
jecxz
popa
inc
sub
call
scas
es
mov
outsb
dec
push
loope
add
sbb
add
stos
push
add
outsb
jne
ret
es
sub
cld
push
jmp
jnp
dec
movsb
cmp
and
jg
ja
add
xor
cmp
cmp
xor
pop
sub
hlt
sarl
and
add
add
cs
sub
je
jo
enter
es
inc
jnp
adc
lock
jle
cmp
mov
jbe
xchg
lcall
xchg
outsb
ds
xor
loop
cmp
cs
jle
lds
out
fs
xor
add
pop
cmc
add
adc
or
pop
cmp
sub
mov
cmp
add
mov
cmpsl
inc
arpl
sbbb
inc
inc
dec
push
jmp
inc
push
inc
flds
shlb
mov
adc
jle
gs
fidivrs
and
sub
mov
push
inc
lds
icebp
xchg
mov
test
loopne
js
movsl
outsl
je
rolb
or
out
dec
loopne
es
xchg
pop
mov
mov
pop
mov
and
int
mov
xchg
insb
dec
enter
fwait
jecxz
imul
inc
into
aas
jne
fdiv
cltd
push
jno
dec
inc
xchg
add
mov
xchg
or
rcrl
subb
outsb
popa
jle
loopne
test
push
mov
add
mov
mov
mov
push
cwtl
mov
hlt
and
sub
fsubr
push
mov
xor
cmovl
lcall
dec
fistps
cwtl
dec
xchg
lahf
lock
aas
jg
dec
jge
subb
fidivl
es
jns
dec
pop
insl
je
xchg
and
dec
xor
adcl
addr16
inc
jo
jno
jb
fwait
lods
and
xchg
mov
test
and
pop
and
lret
jl
je
test
lahf
or
stc
lret
insl
jne
mov
fwait
jle
insl
jno
mov
xchg
or
jbe
jbe
pop
dec
push
mov
dec
daa
outsl
mov
mov
dec
cmp
sub
es
pop
mov
pop
lcall
popa
jmp
out
setnp
cmp
mov
mov
ss
cmp
loopne
test
or
clc
pushf
imul
mov
es
inc
mov
rol
ja
dec
adcb
jle
or
inc
xchg
push
push
inc
test
cld
or
fwait
mov
cmpsb
mov
inc
je
adc
cwtl
scas
scas
adc
jns
push
or
dec
pusha
mov
ds
daa
hlt
xchg
sahf
cmp
xchg
stos
mov
mov
ja
dec
ret
data16
mov
xchg
dec
hlt
cmp
in
lahf
data16
inc
dec
shll
lods
daa
aaa
xlat
jg
call
lds
inc
push
push
dec
jae
push
test
ja
push
mov
inc
dec
out
mov
cld
jmp
pop
cwtl
dec
jge
ja
sar
daa
xchg
inc
insl
pop
ds
adc
es
fidivrs
cltd
jle
mov
out
out
faddp
jae
lcall
outsl
es
outsl
je
inc
jno
cmpsb
push
adc
jne
sub
push
mov
mov
sbb
push
aas
decl
sahf
sbb
push
xchg
sbb
in
adc
dec
push
daa
out
push
push
jae
fsubs
dec
push
dec
ret
data16
xchg
loope
mov
or
pop
movsb
dec
ja
pop
es
pusha
repz
outsb
out
pusha
jbe
jns
adc
inc
push
ds
mov
mov
xchg
cs
hlt
xchg
aaa
xor
jmp
or
jo
es
outsb
jle
mov
das
jecxz
push
lahf
insl
insb
cmp
popf
mov
sbbb
lahf
mov
pop
test
roll
fistps
pushf
daa
pop
dec
mov
sahf
xlat
nop
shll
mov
dec
add
jecxz
inc
sbb
sbb
inc
or
jg
daa
mov
mov
test
lea
cmp
cmpsb
sahf
lahf
xor
push
add
pop
hlt
pmaxub
inc
adc
push
inc
push
dec
mov
push
insl
dec
xor
cli
dec
es
imul
incl
push
inc
add
dec
inc
pushl
push
cli
gs
das
cli
push
push
out
loopne
inc
mov
outsl
orb
outsb
outsb
inc
int3
insb
dec
ds
dec
arpl
in
push
push
movb
outsl
fs
jmp
push
push
loopne
push
insb
sahf
in
push
popa
mov
data16
les
fldl2t
jae
mov
je
dec
jp
fadds
mov
int3
jns
pop
iret
dec
inc
decl
inc
xchg
jae
cmc
imul
outsb
gs
lcall
popf
into
push
ss
ljmp
shrl
ljmp
rcl
es
enter
mov
insb
cs
loop
loop
sti
mov
inc
jecxz
fisttpl
cwtl
lahf
subl
dec
xchg
and
mov
popa
notb
xchg
lock
adc
out
mov
xor
jo
inc
add
movsb
sub
pop
data16
cmp
lahf
mov
fwait
aam
packuswb
push
fwait
or
xchg
scas
aas
mov
shr
daa
bnd
push
pop
cltd
mov
dec
daa
mov
jb
ja
out
mov
sub
ds
fdivr
les
sbb
mov
pop
cld
xchg
dec
jge
daa
mov
xchg
das
or
cs
ljmp
xchg
repnz
in
outsl
jle
in
ret
ss
mov
dec
stc
push
jno
and
push
cli
jb
dec
popf
push
andl
daa
stos
cmc
mov
dec
movsb
push
out
je
xchg
xchg
push
dec
mov
mov
add
fimuls
out
cmp
out
push
inc
pop
divb
cmp
loopne
dec
mov
xchg
inc
outsb
movb
shlb
dec
add
xchg
mov
inc
repnz
jne
lret
dec
mov
mov
dec
and
dec
pop
adc
test
sbb
sub
cmpsb
jbe
cltd
inc
push
mov
lahf
sbbl
xchg
dec
dec
mov
lahf
mov
test
imul
jg
lahf
mov
clc
cmpl
popl
lea
xchg
dec
cwtl
dec
dec
orb
xchg
cmpsl
cmp
mov
outsb
push
dec
push
jno
xchg
cwtl
add
dec
mov
js
ret
inc
fistpll
bound
add
daa
push
inc
insl
jno
pop
xor
sbb
pop
dec
cmpsl
mov
daa
xchg
pop
inc
ja
inc
mov
jae
imul
cmpsb
sti
sbbb
adcl
data16
or
popa
inc
outsl
js
mov
sbb
stc
dec
push
ret
or
dec
jae
les
pop
gs
xchg
je
dec
mov
pop
dec
ja
daa
gs
lahf
jl
data16
xchg
jbe
loope
jg
xchg
mov
rclb
push
pop
aaa
add
mov
pop
loope
neg
jg
or
es
fwait
out
loopne
mov
mov
inc
lods
mov
jmp
xchg
cmpsl
pusha
add
sub
sbb
dec
pusha
adcl
xchg
add
pop
mov
inc
jns
jno
dec
lahf
or
cmpsb
pop
sbb
sbb
jae
mov
push
lock
jbe
outsb
pop
sbb
es
aaa
push
dec
jo
push
outsl
inc
mov
or
jns
cmp
ret
mov
push
jl
test
and
out
xlat
cli
adc
cltd
and
jns
and
mov
adc
and
mov
and
or
adc
mov
enter
dec
gs
ss
push
lea
pop
jbe
inc
dec
jge
cld
jo
inc
push
daa
mov
dec
fildll
dec
dec
aas
xchg
pop
ja
push
dec
mov
filds
jmp
insb
pop
ficoms
jns
pop
inc
mov
push
jno
inc
out
cmovg
iret
jae
sahf
icebp
xchg
ja
fiaddl
std
cmpb
mov
fistps
push
ss
insb
jno
jo
dec
stc
test
ret
sub
cmpsb
test
adc
ds
aas
jmp
loope
push
jae
test
sarb
int3
xchg
inc
es
jmp
add
dec
mov
fisttps
dec
dec
cld
jl
mov
jb
cltd
testl
int
out
jecxz
dec
sub
pop
hlt
out
jbe
jmp
out
gs
jb
inc
insb
dec
cmp
inc
in
cwtl
lahf
jns
adc
loop
mov
fbstp
lret
data16
or
es
lock
xchg
ret
push
jne
inc
jo
lcall
adc
inc
xor
pop
daa
sti
mov
daa
push
xchg
jne
ret
js
mov
and
out
mov
jb
aas
add
inc
daa
pop
jae
je
jp
lcall
dec
jno
inc
ss
push
data16
push
lahf
out
dec
mov
inc
ret
dec
je
mov
push
imul
aaa
stc
ljmp
inc
ficompl
out
iret
stos
shrb
xchg
loope
mov
fnstcw
out
in
mov
mov
push
lret
inc
fstpt
je
pusha
stc
mov
push
icebp
sbb
sbb
jbe
jl
push
decb
int
pop
adc
jbe
div
pushf
rolb
gs
fdivs
notb
push
lahf
inc
fidivrs
mov
jbe
or
les
inc
popa
roll
popf
insb
pop
mov
dec
jno
jg
sbb
push
dec
cli
push
aas
iret
popf
adcb
dec
dec
ja
mull
stc
int3
icebp
sbb
lds
dec
jo
idiv
daa
fcmovb
cs
insb
ja
std
jbe
fmulp
bound
nop
insb
test
push
aam
aam
xlat
push
dec
jns
push
ja
dec
out
insb
out
iret
out
insb
inc
cld
push
pop
xchg
sub
rcrl
scas
adc
pop
or
es
jl
jle
mov
gs
pop
jmp
fildll
iret
or
mov
push
rcrl
scas
mov
cld
jmp
into
cltd
int3
dec
je
jge
pop
fmuls
mov
cld
push
je
ret
dec
dec
or
lret
inc
xchg
out
addr16
fwait
notb
pop
jne
xor
out
bound
adc
mov
into
daa
dec
pop
cmpsl
cmp
cltd
dec
jecxz
std
cs
lahf
mov
mov
xchg
add
inc
daa
rcrl
fsubrl
es
aam
inc
es
stos
jno
inc
pusha
lods
dec
lods
pop
data16
xchg
sub
cmp
dec
sub
daa
aad
nop
loopne
jae
adc
pop
fcoml
pop
daa
jecxz
in
test
mov
inc
out
sahf
pop
and
daa
cmp
leave
cmp
test
jg
ret
mov
mov
jge
pop
imul
cmp
xchg
push
pushf
xchg
push
ja
ror
push
shlb
jne
addr16
loope
loopne
aas
mov
inc
lods
sbb
mov
lahf
movl
xchg
pop
scas
mov
sub
inc
leave
shrl
or
shll
and
pop
testb
pop
push
js
jbe
mov
ret
sti
es
mov
lcall
loop
clc
inc
push
push
dec
fmul
sbb
nop
addr16
shrl
xchg
hlt
fsubl
mov
jae
or
shrl
and
push
lock
imul
pop
dec
push
inc
int
cld
jbe
outsb
pop
push
ds
aas
mov
je
sahf
xor
loopne
repz
inc
inc
sbb
jns
nop
add
jecxz
movb
inc
repz
sbb
es
rorl
cmpsl
stos
xchg
icebp
hlt
mov
sub
pop
push
rcr
mov
push
mov
insl
xchg
aam
cmp
dec
push
push
mov
js
hlt
push
les
outsl
dec
mov
gs
mov
lds
std
decl
test
sbb
data16
stos
or
aas
mov
xchg
scas
dec
jp
hlt
inc
push
and
dec
jmp
jae
sti
cltd
imul
sbb
std
mov
dec
jg
dec
lahf
jno
stos
nop
gs
movsb
nop
push
push
dec
lea
data16
stos
dec
adcb
xchg
outsb
add
stc
scas
insb
dec
out
dec
arpl
test
jmp
ss
jmp
push
insb
addl
jg
frndint
jae
pusha
push
jb
or
jns
in
movsb
dec
lcall
mov
xchg
leave
lahf
mov
outsb
gs
xchg
ljmp
cmpsl
push
movsl
outsb
dec
jo
data16
mov
add
inc
fldcw
and
ficoml
data16
scas
mov
mov
mov
insb
ss
subb
add
int
call
stos
test
mov
insb
lods
mov
inc
lea
int
test
and
mov
sarl
mov
lcall
xchg
pushf
orb
mov
int
mov
mov
ss
inc
aas
stos
xchg
fsts
xor
sub
push
cmp
cmp
cmp
jecxz
add
sbb
xor
and
or
sbb
sub
bound
and
mov
sub
sbb
adc
inc
mov
adc
adc
sbb
and
and
cs
sbb
imul
xor
jmp
es
sub
sub
push
adc
and
xor
sub
xor
add
aaa
decl
es
gs
or
sub
add
sub
push
es
dec
add
or
cmp
cmp
push
cmp
cmp
push
push
sbb
push
cld
adc
or
jge
imul
ds
orb
sbb
xor
xor
jg
sbb
adc
cmp
pop
inc
sub
or
subb
mov
es
sub
or
lcall
mov
sub
sub
add
pusha
dec
cmp
add
and
add
jg
and
cmp
or
out
xor
adc
add
sti
outsl
cmpsb
cmp
es
push
ds
sub
aaa
pushl
call
or
or
cmp
push
jl
sub
push
aas
sub
lcall
jmp
sub
add
pop
adc
adc
inc
sahf
push
or
xchg
adc
ljmp
es
pushl
jno
cmp
add
or
add
push
adc
add
push
add
sub
and
and
sub
add
adc
cmpsb
push
notb
adc
cld
fldt
adc
xor
arpl
cmp
cmp
out
push
xor
mov
add
adc
cmp
and
sub
inc
loop,pn
mov
sub
or
push
xor
adc
clc
mov
cmp
push
add
loope
adc
or
sbb
push
ss
lret
outsl
push
es
jmp
push
or
add
cmp
xor
sub
inc
inc
push
aam
add
push
adc
and
and
dec
push
js
test
push
adc
and
or
add
add
adc
and
out
jbe
dec
or
sbb
and
xor
xor
jg
decb
and
cmp
mov
sub
sub
sub
and
and
push
bound
push
sbb
mov
jbe
sub
inc
sbb
xchg
jg
jle
negb
push
add
cmp
xor
insl
jge
cmp
sub
lods
sub
add
bound
sahf
sub
mov
sub
adc
xor
sub
mov
sahf
inc
pusha
add
xor
pushl
sbb
add
xor
cmp
sbb
das
xor
adc
adc
je
and
add
sbb
push
das
and
fwait
dec
or
xor
cli
pushl
movl
inc
dec
and
adc
aaa
xor
cmp
cmp
ljmp
jne
push
or
sbb
cmp
das
or
sti
aaa
dec
pop
ds
sub
sub
fs
push
cmp
pop
sbb
and
pop
ss
push
sbb
push
or
cmp
xor
sbb
inc
push
adc
js
fs
shlb
ss
das
push
and
sbb
xor
add
mov
fisubs
or
push
pop
das
xor
adc
rcrl
sbb
and
pop
cmp
ss
lock
jge
and
add
cmp
mov
pop
adc
or
dec
fadd
adc
xor
and
sub
int3
imul
aaa
add
ljmp
or
inc
jne
ljmp
push
adc
and
xor
aaa
and
loop
mov
push
sub
dec
roll
or
mov
pop
adc
mov
cs
cmp
cmp
sbb
sub
or
inc
lock
imulb
inc
and
push
icebp
data16
jmp
push
cmp
push
add
push
lret
pop
jne
dec
or
js
aas
and
push
sub
dec
mov
das
sub
daa
stos
mov
push
dec
add
cmp
pop
xor
or
xor
ds
and
and
add
stos
loopne
dec
add
add
ds
cmp
inc
adc
add
and
mov
sub
inc
fcomip
ja
dec
jae
add
xor
bound
cmp
adc
sub
push
cli
and
and
push
or
test
and
or
pop
add
jo
daa
cmp
push
and
push
adc
xor
popa
in
cmpsb
sub
ss
dec
lods
mov
es
cmp
aaa
xchg
sbb
push
int3
out
inc
push
test
inc
frstor
outsb
adc
add
push
push
int
xchg
out
and
ss
adc
or
pop
add
and
dec
decl
dec
sub
add
add
adc
or
push
or
sbb
mov
cmc
sbb
sbb
add
stos
outsb
fcompl
sbb
push
add
enter
push
loop
adc
adc
std
push
fidivs
xor
daa
and
loopne
mov
cmp
sub
repnz
sub
pop
subl
cmp
xor
mov
jne
cmp
or
cli
mov
cmovge
clc
lcall
push
cmp
cmp
outsb
xor
adc
sub
xor
add
in
mov
sbb
adc
xorb
and
adc
jb
mov
xorl
sub
add
add
fimuls
clc
push
js
outsb
outsb
xchg
ss
arpl
out
pop
add
into
push
xor
inc
and
pop
push
cmp
mov
test
mov
lahf
pop
pop
jp
ret
lret
pushf
inc
lcall
call
arpl
and
and
pop
add
jo
fistl
xchg
push
testl
jmp
mov
inc
out
inc
dec
jmp
inc
lock
push
jl
pusha
push
jno
dec
gs
rol
aad
aaa
push
sbb
adc
push
test
testl
pop
testb
cmp
repz
pop
jne
outsb
jno
cmp
repz
pop
imul
cmp
dec
inc
pusha
inc
pop
inc
cmp
repz
insl
pusha
jl
repz
repz
pop
jg
repz
push
pop
jl
push
pop
inc
iret
repz
inc
inc
push
sahf
out
cwtl
outsl
push
es
outsl
and
out
fs
xor
out
push
xor
jns
inc
pop
inc
pop
imul
out
bound
int
out
sahf
out
inc
repz
sahf
out
sahf
pop
shrl
shl
cmp
dec
inc
leave
js
out
sahf
rolb
ja
inc
ror
jns
addr16
je
es
cmpsb
dec
iret
jp
pop
addr16
dec
scas
pop
daa
push
in
dec
scas
ja
dec
or
push
fildl
inc
addr16
enter
jbe
pusha
add
mov
inc
or
dec
adcl
stos
cmovb
xchg
add
orl
mov
push
jg
aaa
inc
es
pop
js
push
mov
mov
cmc
dec
ljmp
psrad
movsl
lock
jne
test
inc
mov
push
cmp
pushf
paddd
stos
movsb
xchg
cs
jno
fmuls
repnz
fistpll
ret
adc
inc
sbb
push
cld
repz
cld
inc
push
inc
es
rorl
das
adc
es
call
lahf
pop
scas
shlb
xchg
dec
je
loope
cld
repz
dec
pop
jg
dec
je
inc
push
imul
jl
imul
iret
sarb
aas
jg
adc
sub
push
jl
mov
gs
repz
aas
decl
ret
jae
bound
shlb
lock
mov
jae
ss
aad
jae
mov
mov
xchg
pop
adc
scas
out
fsts
jle
dec
movsb
fidivs
pop
es
loop
test
lods
leave
out
es
push
inc
nop
shll
fisubs
outsl
jle
fwait
cld
into
decl
lret
testl
inc
or
sbb
clc
loop
cmpsb
iret
mulb
or
repz
cld
pusha
inc
cmp
sub
inc
inc
or
sub
sti
jns
cmp
jle
dec
pop
lret
aaa
sarb
aaa
out
dec
jge
repnz
lret
sti
push
jge
stc
data16
insb
dec
shrb
cli
mov
int
ljmp
sahf
inc
insl
mov
daa
test
dec
push
dec
adc
push
push
das
clc
aas
jl
push
push
pop
je
dec
push
je
pop
pop
jl
pusha
pop
pop
arpl
mov
outsl
push
inc
inc
jb
inc
add
ljmp
push
gs
cmp
add
ljmp
and
daa
and
sbb
or
add
pop
push
cmp
adc
and
filds
std
ljmp
or
and
and
and
or
adc
inc
and
cld
sbb
cmp
sub
iret
cld
sbb
pop
pop
ja
popa
pop
jns
jne
jp
push
jno
cwtl
js
sub
push
inc
push
inc
movsl
hlt
lahf
pop
push
popa
imul
inc
adc
cli
imul
xchg
jg
or
pop
inc
std
ljmp
pop
or
cmp
cmp
sub
in
pushl
out
daa
adc
or
and
cmp
and
xor
pop
xor
sbb
sub
sbb
xchg
out
jp
add
loop
pop
call
sarb
xchg
inc
rcrl
xchg
shlb
sub
out
fstcw
adc
cld
dec
xorb
mov
mov
inc
imul
xchg
push
cwtl
xor
in
sub
fcomps
mov
testb
into
fwait
and
es
cltd
xor
or
pop
xor
cld
and
mov
jns
ret
pop
imul
push
pop
jmp
push
insb
movsb
ds
addr16
mov
test
inc
pop
inc
add
or
add
ud0
inc
mov
pusha
dec
push
js
lcall
inc
xor
jns
sbb
xor
out
clc
stos
dec
ret
or
gs
jge
sbb
loope
mov
pop
pushf
xchg
lock
and
jg
repnz
adc
xor
cmpsb
jb
dec
sbb
dec
mov
mov
sahf
xchg
mov
ja
jbe
jns
out
das
fadd
lods
mov
xchg
pop
lock
dec
es
jae
push
mov
out
es
repz
cs
cmpsb
mov
dec
jnp
imul
push
sub
les
scas
ja
mov
ljmp
dec
jp
xor
mov
sbb
outsb
sahf
and
cmp
sub
push
ret
jle
mov
mov
xchg
push
in
ljmp
push
add
or
cmp
and
push
mov
inc
ja
xor
adc
or
cmp
add
sbb
adc
sub
loop
insb
or
add
add
and
out
lods
aaa
or
aaa
and
or
sti
add
jg
subb
or
das
adc
and
sbb
in
pop
lock
dec
push
pop
addr16
movsb
sub
add
mov
lcall
and
adc
daa
sbb
cmp
pop
inc
adc
imul
daa
push
incl
pop
pop
sub
or
and
add
ss
and
sub
insl
dec
scas
test
and
xchg
imul
xor
xor
adc
push
adc
cmp
xor
daa
sub
add
dec
push
inc
cmp
or
xor
xor
aas
mov
cmp
adc
sub
aas
jl
add
lods
ljmp
sub
xor
es
cmp
cmp
sub
add
jle
sub
and
mov
jg
pop
dec
sbb
dec
cmp
and
orb
sbb
es
jg
mov
xor
das
add
xor
pop
aas
ret
inc
xchg
sub
add
push
je
add
inc
insb
and
mov
daa
popa
jae
and
sar
call
sub
sub
and
or
adc
xor
pop
xlat
dec
jle
adc
and
cmp
adc
sbb
xchg
sub
add
add
xor
es
aas
sub
push
pushl
and
aaa
mov
push
js
and
and
movhps
aas
xor
adc
jg
pusha
clc
and
and
pop
sbb
jae
lcall
push
sbb
cmp
xor
cs
dec
add
dec
mov
xor
pop
and
add
xor
testb
cmp
sub
add
xor
xor
lahf
fisttps
fdivrs
push
cmp
push
sub
or
and
mov
inc
and
sub
or
add
sub
in
mov
jo
xor
outsb
mov
sbb
decl
cmp
movntps
and
psubd
aaa
adc
adc
or
pop
cmp
call
das
mov
push
daa
push
and
in
xlat
dec
pop
xor
jbe
mov
sub
sub
mov
inc
adc
or
sbb
cmp
aaa
pop
pop
nop
sbb
aaa
xor
add
sub
push
lahf
adc
aaa
xor
scas
mov
xor
mov
insb
std
aas
adc
dec
pop
adc
mov
es
sub
push
ljmp
push
pop
or
ds
and
sub
sbb
ljmp
sbb
pop
xor
sub
dec
adc
xor
sub
sbb
and
add
das
adc
sysexit
adc
mov
lahf
sbb
sub
filds
or
cs
imul
popa
sub
push
ss
out
xor
imul
jg
jl
shll
jecxz
or
dec
and
mov
inc
or
in
loopne
dec
add
cs
xchg
inc
push
in
fmuls
adc
daa
inc
repz
lcall
enter
fldt
mov
push
imul
dec
sub
sub
out
pop
mov
mov
aam
out
push
mov
iret
decl
mov
jne
out
aad
cld
jg
ret
push
jnp
xchg
sahf
or
mov
movsb
rep
pop
in
loopne
mov
hlt
in
sub
push
jno
xchg
test
adc
lods
loope
mov
xchg
mov
sbb
mov
mov
rclb
decb
incl
mov
mov
xchg
decl
roll
ficompl
adc
add
cmp
xor
mov
adc
jecxz
dec
dec
push
iret
enter
repnz
xor
xor
out
lret
incl
mov
popf
out
arpl
adc
fwait
outsl
cmp
mov
mov
dec
leave
shlb
incl
sbb
inc
pop
adc
mov
ja
pop
sbb
add
iret
xchg
pop
pop
and
aas
aad
add
movsl
pop
mov
xor
mov
push
xchg
dec
aam
push
or
call
xor
insl
and
les
and
mov
push
xor
lods
mov
jmp
mov
or
rcr
iret
pushf
scas
dec
hlt
scas
aas
pop
ss
xchg
ret
lcall
xor
fcoms
fstl
mov
xchg
mov
sarl
adc
xor
mov
xchg
sbb
cmp
gs
xor
stos
addr16
insl
fld
shll
add
push
lret
lea
cmc
jmp
ja
jle
sub
icebp
test
mov
jbe
push
je
pusha
adc
sar
pushl
scas
jge
sbb
push
adc
inc
enter
adc
cld
dec
lea
jge
lcall
mov
out
insb
pop
mov
sbb
sbb
inc
jno
or
inc
mov
bextr
movsb
push
mov
into
lret
jns
sbb
inc
icebp
and
pop
adc
push
imul
sbb
dec
mov
imul
nop
xchg
dec
clc
stos
int
ds
push
fistpl
adc
push
mov
in
into
dec
fcomps
fs
gs
mov
mov
pop
das
mov
jae
ja
dec
data16
mov
orb
repnz
dec
popa
pop
inc
popa
shlb
dec
movsb
scas
pushf
mov
inc
outsb
gs
mov
jle
jae
dec
add
dec
iret
adc
and
das
and
sbb
pushl
std
and
scas
add
cmp
adc
xor
or
jb
sbb
or
or
push
aam
pop
add
xor
jg
lock
inc
jle
push
push
dec
inc
arpl
pop
pushl
add
sub
pop
cmp
pop
push
and
das
inc
cmp
incl
sub
cs
add
adc
and
push
sub
pop
push
imul
inc
dec
sahf
cmp
ja
pop
add
adc
mov
inc
inc
addr16
inc
popa
outsl
aas
sub
aam
cmp
and
cmp
and
add
jp
cmp
decl
or
adc
cmp
push
add
push
cs
es
xor
sbb
or
cs
sbb
daa
add
pop
xor
mov
cmp
adc
push
sub
das
push
xor
xor
push
add
in
call
pop
sbb
xor
push
push
js
push
popa
push
cmp
push
ds
or
pushl
adc
cmp
or
xor
pop
insl
insb
dec
push
dec
fs
pop
and
es
jbe
dec
gs
je
add
and
or
dec
dec
addr16
and
adc
or
cmp
call
or
or
es
or
adc
xor
das
pop
sbb
or
or
add
in
add
cmp
adc
add
loopne
adc
xor
xor
xor
adc
sub
sub
jne
call
adcb
dec
jb
and
jae
push
push
imul
push
loop
jge
inc
loop
lea
arpl
inc
xchg
addr16
pop
sub
jg
inc
sahf
push
pop
imul
add
lcall
push
or
jb
jge
pop
mov
add
fbstp
mov
arpl
sub
pop
push
sti
mov
pop
je
pop
ds
adc
insb
adc
inc
lret
imul
jg
mov
jne
jle
jge
jbe
pop
sub
inc
adc
lcall
push
push
xlat
inc
or
jae
pop
lds
jns
dec
filds
pop
pop
push
sub
push
pushf
insb
mov
push
inc
fs
dec
daa
push
dec
ljmp
push
cwtl
push
lock
jbe
dec
sbb
aam
int
ljmp
inc
jbe
dec
push
in
lret
data16
subl
jo
imul
sub
jge
sub
lret
jp
push
push
pop
jbe
mov
jg
rorb
dec
adcl
jge
jbe
jne
popa
lret
dec
incl
xor
push
pushl
pop
jbe
fwait
mov
jg
jbe
inc
add
pop
push
jl
push
cld
pop
repz
pop
inc
sbb
push
dec
inc
mov
call
outsb
bound
pusha
fstpl
jbe
jl
inc
aam
nop
addr16
push
pop
pshufw
int3
cmpsb
mov
pop
sbb
je
ss
add
push
aas
pop
loopne
pop
out
push
rcrl
pop
dec
sar
jmp
xor
pop
mov
outsb
inc
jb
inc
mov
mov
xor
jno
ja
arpl
push
cmpsb
mov
mov
push
sti
ja
pop
jae
out
lcall
lahf
fchs
jb
jp
dec
popf
inc
addr16
arpl
push
insb
push
push
int3
jmp
jle
inc
arpl
inc
arpl
inc
cmp
pop
xor
inc
mov
inc
or
ud0
pushl
jle
jo
push
clc
push
mulb
jnp
outsb
xchg
pop
or
jbe
arpl
pusha
aam
pop
repnz
mov
je
dec
jns
dec
jno
pop
stc
push
jmp
ja
inc
or
push
loope
enter
mov
jle
push
jns
dec
addr16
inc
pop
sbb
push
push
jbe
mov
and
add
push
adc
aaa
inc
dec
fists
pop
test
jg
and
mov
arpl
pusha
sub
ret
pop
push
pushl
leave
inc
jmp
shlb
icebp
pop
shlb
jnp
and
push
lahf
addr16
jg
pop
mov
jo
gs
push
pop
inc
push
dec
push
push
push
inc
inc
jp
jp
push
and
filds
jg
dec
out
cli
mov
push
push
jb
jno
gs
cmp
scas
fiadds
push
or
inc
lret
pop
cmp
push
ret
inc
out
push
jb
pop
pushl
dec
dec
inc
and
cmp
ja
push
aas
insb
fistl
data16
xor
jle
inc
shll
std
in
inc
test
stos
jb
jg
inc
insl
pop
dec
imul
push
aaa
jle
sub
cmp
jne
pusha
out
sti
pop
sarb
insb
lret
push
nop
lcall
pop
xchg
je
dec
fwait
jo
jo
pop
gs
imul
ljmp
movsl
sbb
sbb
xlat
imul
inc
inc
pop
jno
decl
fimuls
inc
pop
lcall
inc
aam
shll
pop
cmp
jns
decl
inc
cltd
pop
pop
push
add
or
insb
mov
jns
inc
pop
jle
inc
push
or
jmpw
sbb
pop
jmp
fidivrs
inc
sarl
inc
scas
pop
mov
arpl
mov
ja
ja
mov
outsb
lds
push
cmc
ja
cld
jmp
outsb
mov
pop
push
insl
push
or
inc
cmp
push
sub
jno
addr16
decb
pushl
ret
push
dec
outsb
es
jb
jns
jp
outsb
loop
jmp
mov
dec
pop
insb
push
std
pop
call
dec
jno
pop
pop
dec
loopne
js
push
xor
scas
inc
incl
push
lcall
pop
insl
imul
decl
shrb
dec
in
imul
hlt
push
pop
jge
pushl
jle
pop
negb
xor
mov
jg
push
addr16
ss
int
mov
decl
cld
decl
ja
ja
pop
mov
popa
push
cld
mov
gs
bound
xor
incl
jno
jp
jo
jo
fidivl
inc
adcl
jnp
sub
iret
pop
clc
jnp
push
inc
inc
out
insl
jmp
je
pop
add
dec
jle
pushl
mov
pop
or
push
ja
dec
push
insb
aad
mov
jmp
insb
dec
dec
pop
insb
outsb
and
push
data16
js
pop
into
pop
out
imul
test
jl
push
inc
push
ja
jle
jnp
daa
dec
aaa
jbe
jbe
pop
add
call
push
aas
js
outsb
fidivs
inc
xchg
insb
sahf
pop
mov
adc
call
shl
cmc
incl
and
js
push
movl
pop
frstor
bound
inc
xor
jb
push
leave
imul
mov
mov
xchg
inc
lcall
jns
inc
xchg
push
movsb
bound
ljmp
jno
data16
ja
push
dec
push
insb
and
push
xor
data16
ljmp
pop
fistl
idivb
inc
stos
jp
jp
push
negb
jne
arpl
popa
pcmpgtd
call
jne
jg
je
je
pusha
sub
inc
mov
popa
inc
ja
insb
insl
sub
jo
pop
ret
ljmp
dec
loope
mov
add
daa
dec
das
push
cmp
xor
pop
sahf
popa
stos
pop
pushl
mov
mov
pusha
dec
mov
dec
push
dec
pop
imul
jb
dec
negl
ljmp
dec
popf
push
imul
dec
jle
pop
and
mov
jbe
arpl
pop
popa
jge
push
call
pop
push
pop
pusha
jno
dec
clc
jne
jne
pop
outsl
push
pusha
js
outsb
sub
inc
mov
out
mov
jle
jne
jle
jge
imul
add
fists
arpl
pop
push
dec
inc
sbb
jo
pop
xchg
out
stos
mov
nop
inc
bound
push
add
push
jecxz
xchg
push
scas
popa
mov
outsl
inc
push
js
inc
push
arpl
decl
pop
inc
jno
jl
inc
addr16
pop
data16
jae
pop
jae
jg
jo
push
add
shll
ljmp
cli
sarb
insl
jae
push
jo
xor
outsb
and
push
lock
inc
jge
pop
stos
jg
push
cs
sub
jp
dec
cwtl
insl
out
imul
int
xchg
js
jae
fistpll
insl
cmp
dec
push
mov
jnp
push
mov
inc
mov
push
ljmp
pop
ljmp
cli
mov
push
pusha
outsb
jle
or
repnz
mov
imul
call
jns
je
dec
test
test
dec
xchg
push
jecxz
mov
pop
pop
pop
icebp
imul
outsl
xchg
xchg
jle
mov
pop
jl
ljmp
js
push
das
pop
ret
pusha
mov
fs
xor
xor
js
jae
jo
movsb
cli
adc
inc
cmp
ljmp
loope
cli
push
jmp
jb
pop
inc
ja
jle
dec
mov
mov
push
outsl
jne
push
decl
mov
adc
gs
cli
imul
jg
jb
dec
pop
pop
in
push
inc
jp
jbe
jns
pop
imul
fisubrs
push
loopne
push
mov
inc
mov
jp
jmp
jnp
je
outsl
arpl
pop
dec
pop
pop
movsl
and
je
adc
jg
jl
or
dec
es
incl
sbb
jnp
push
adc
push
jb
pop
fidivl
js
dec
lret
pop
lods
push
mov
rorb
insb
xor
ljmp
sub
int
mov
cmpb
xchg
dec
popf
pop
mov
push
lea
ja
jnp
pop
sbbl
addr16
outsl
fs
pop
nop
push
pusha
adc
or
jg
jns
jns
push
fcomps
cmpsl
popa
cmpl
jp
pop
fs
jmp
pushl
js
jae
jo
xorb
lahf
push
imul
inc
lret
jl
push
out
xor
outsb
adc
pop
mov
dec
lcall
fwait
pop
fs
pop
inc
dec
inc
lea
add
bound
pop
sub
incl
popa
pop
pop
and
jp
inc
lods
push
lea
inc
pop
mov
loope
fnstenv
push
or
fistpll
insb
mov
cmp
popf
ret
pop
lock
mov
cwtl
sub
push
ds
adc
icebp
decl
data16
dec
mov
inc
popa
jb
cmp
jbe
jne
popa
add
lcall
test
pop
adc
dec
shrb
jno
pop
add
and
jg
push
in
fbstp
inc
mov
pop
stos
jns
pop
std
jg
mov
bound
jo
dec
mov
mov
push
call
push
divl
jo
jb
hlt
dec
lret
shll
js
pop
mov
icebp
decl
xchg
data16
lret
pop
dec
popa
push
push
add
je
movsb
push
ret
decl
inc
sbb
push
pushf
pop
mov
jnp
dec
fldenv
push
data16
ljmp
sbb
jns
jp
outsb
push
jge
mov
dec
pop
insb
and
decl
fnstsw
push
mov
jb
inc
xchg
dec
sub
pop
cmp
pop
call
push
pop
subl
lods
dec
mov
insl
sahf
dec
lahf
insb
movsb
push
mov
jb
dec
jo
pushl
push
pop
pushf
jbe
lret
push
mov
sbb
shrb
jmp
push
mov
xchg
inc
pop
scas
push
loop
sahf
jg
inc
xchg
jge
jge
push
sbb
lcall
jae
data16
dec
jp
and
push
fisubl
jns
idivb
jnp
outsl
jge,pt
dec
push
pop
pop
inc
pop
dec
add
sbb
jae
pop
sbb
fidivrs
push
or
ja
inc
int
lock
dec
or
pop
les
pop
inc
outsb
outsb
jg
mov
in
insl
popf
dec
mov
push
push
inc
mov
dec
jmp
lret
insl
les
push
lahf
js
jne
jp
daa
push
dec
push
adc
dec
push
les
cmpsw
push
pop
jg
imul
adc
jnp
jnp
cli
call
pop
mov
jns
dec
jnp
and
jecxz
call
jle
jne
jbe
decl
jp,pn
inc
jae
dec
jns
pushaw
popa
pop
cmp
xor
inc
pushf
insb
or
ljmp
lcall
jne
jb
inc
adc
pop
sbb
xchg
bound
jno
dec
adc
and
aad
mov
aad
sti
inc
aad
pop
fs
jne
jno
mov
jb
push
pop
push
outsl
popa
pop
jp
outsl
cs
and
sub
pop
xor
out
inc
insl
call
jnp
dec
bnd
scas
add
sahf
dec
ljmp
sar
addr16
pusha
mov
scas
lods
jae
push
jb
jno
pusha
xor
pop
aaa
std
lcall
bound
outsb
loop
es
pop
adc
jl
push
jge
jne
inc
push
or
insl
popa
or
sbb
ljmp
aad
or
fisubl
mov
repnz
inc
pop
add
pusha
ficoms
jg
jae
jl
pop
sbb
outsl
loop
sbb
push
call
std
jnp
outsl
inc
arpl
out
or
ljmp
idivb
jle
pop
lcall
jle
push
into
insb
ljmp
pop
mov
jnp
jo
jnp
js
jg
jg
jg
dec
rcrb
inc
shrb
jne
and
fs
sbb
jmp
jge
jne
inc
cmp
pop
mov
incl
cmp
xchg
jnp
inc
pusha
cmpsl
inc
je
sbb
je
jns
ljmp
addb
sub
jne
jns
jbe
push
hlt
mov
outsb
jle
imul
fcoms
loope
sub
add
daa
jge
inc
or
stc
push
negb
ja
clc
push
popa
aam
orb
xchg
arpl
jo
jnp
jo
or
pop
scas
incl
push
das
dec
or
and
jp
push
pop
inc
and
jae
pop
lret
push
push
call
dec
testl
es
xchg
inc
xor
add
inc
add
adc
jne
js
inc
andps
jmp
inc
sbb
jbe
jp
jne
push
jecxz
jge
push
in
jno
fsubrs
push
std
lcall
in
idivl
mov
lods
js
push
mov
pusha
xchg
fimull
jg
out
mov
mov
jp
jno
jb
addr16
jne
inc
jle
addr16
inc
clc
jl
pop
fs
pop
dec
jns
push
pop
inc
je
inc
jo
pop
jbe
push
add
dec
sub
out
cli
mov
push
push
pop
imul
jge
inc
sbb
cmp
sub
sub
incb
ret
inc
notl
imulb
clc
mov
leave
jnp
je
push
cmp
jl
imul
sbb
push
inc
push
dec
push
outsl
jl
inc
inc
push
pop
hlt
ljmp
jbe
pusha
sub
es
xor
cli
fnstenvs
loopne
jmp
jp
jno
jb
data16
je
inc
mov
inc
cmpsl
pop
pop
popf
js
push
jae
insb
les
push
dec
pop
outsb
push
shl
incl
add
push
daa
imul
jge
inc
clc
add
inc
add
cld
popa
testb
clc
pop
sti
pushl
inc
mov
mov
xchg
ja
jnp
ja
push
jnp
dec
fs
jg
push
or
or
sbb
pushl
push
cmp
jle
inc
icebp
jp
jp
push
ljmp
jg
dec
dec
popa
push
fs
mov
bound
pop
jle
jne
jbe
bound
ja
dec
push
aaa
adc
popa
aas
pop
adc
jl
inc
sbb
cmp
jne
jge
decl
push
pop
or
jne
push
aaa
outsb
xor
xor
inc
hlt
jge
inc
call
rorb
lock
lcall
jae
jle
inc
iret
push
xlat
inc
fistpl
jo
jl
push
push
mov
push
fwait
pusha
mov
cltd
outsb
mov
push
movsl
ja
bound
push
lods
push
dec
jnp
inc
jns
gs
adc
pop
pop
jno
insb
ljmp
mov
shrl
jne
popa
push
jae
es
das
dec
xor
daa
adc
das
pop
in
jecxz
insb
popa
xchg
call
jnp
jae
inc
xlat
dec
rclb
pop
cmpl
scas
pusha
stos
pop
mov
dec
push
jb
dec
push
decl
dec
sbb
pop
jl
jno
dec
out
ret
ljmp
dec
notl
jg
jae
jl
pop
mov
mov
xorb
push
pop
push
jnp
outsb
pop
bound
out
clc
push
arpl
fidivrs
dec
sbb
add
push
mov
in
ljmp
ja
inc
std
outsl
mov
jo
jp
pop
insl
pop
jg
dec
push
pop
dec
jg
mov
inc
and
pop
outsb
sub
pop
pop
pop
dec
dec
stc
jp
push
out
js
pushl
inc
fisttps
push
test
lahf
js
pop
mov
mov
mov
dec
pop
ja
dec
pop
insb
adc
ljmp
push
xor
je
dec
out
pop
ret
dec
xlat
push
lret
jp
jbe
jns
pop
mov
mov
jno
mov
push
jle
pop
jl
imul
pop
adc
dec
ljmp
pop
push
push
ret
jnp
insl
in
jo
inc
stc
call
outsl
mov
jl
outsl
jg
push
push
ds
daa
inc
jmp
push
add
pop
decl
addr16
out
cli
jge
jne
inc
mov
jg
push
sbbb
inc
pop
push
outsl
pop
jns
jno
and
je
dec
add
ja
cmp
rclb
fidivl
adc
push
push
mov
mov
out
call
fidivs
push
xchg
dec
addr16
jl
imul
imul
push
inc
bound
jp
jp
push
sbb
jmp
scas
mov
add
pop
add
jns
jb
out
xchg
pushl
inc
lcall
popa
pop
pop
sbb
inc
loopne
mov
mov
mov
decl
add
inc
and
push
sbb
push
insl
iret
push
int
adc
inc
fdivrl
inc
lods
jb
mov
mov
inc
jae
dec
gs
pop
std
push
inc
push
pop
xor
out
int3
push
imul
pusha
jnp
decl
push
push
arpl
pop
push
or
das
jnp
inc
fcomip
incl
jg
jg
push
negb
jno
addr16
repnz
xchg
bound
popa
mov
test
arpl
jp
outsb
push
jg
push
dec
scas
dec
or
push
add
jo
pop
mov
out
bnd
jae
inc
jl
pop
ljmp
push
pop
outsl
popa
jae
adc
dec
sbb
cmp
imul
push
fwait
jl
jb
decl
pop
or
dec
add
std
jo
jg
pop
mov
mov
arpl
dec
pop
gs
decl
arpl
pop
and
ja
dec
int
lods
jae
pop
adcb
push
jge
insb
inc
jno
inc
jno
pop
outsb
add
push
mov
jle
push
loope
clc
stos
cli
dec
xchg
pop
jae
fs
mov
sub
decl
notb
jle
jbe
inc
xchg
inc
pop
jnp
dec
loope
decl
pop
pop
and
insl
shll
dec
mov
orl
fistps
push
imul
sbb
pop
cs
testl
jne
jp
pop
xchg
pop
cld
and
inc
push
lods
inc
pop
cmp
mov
fwait
or
pop
sbb
push
and
std
js
fsts
and
rcrb
nop
jge
dec
test
incl
cld
jg
inc
jo
jnp
jo
jae
addr16
push
ss
cmp
inc
sbb
jmp
pop
in
call
cld
push
dec
mov
dec
pop
pushl
cld
jg
pop
jl
push
jae
push
jae
jg
mov
cmp
inc
xor
add
incl
arpl
push
jbe
jnp
inc
call
pusha
filds
pop
fwait
jne
jns
jbe
push
outsl
push
pop
ja
aad
lret
insb
dec
pop
inc
gs
pusha
cld
repnz
lret
push
mov
push
jecxz
roll
jl
jl
push
cmpsb
pop
lahf
jb
mov
popa
inc
push
mov
data16
pop
jg
je
ja
arpl
cmovne
push
inc
and
pop
pusha
pop
pop
mov
cs
cmp
sbb
fsubrp
jle
dec
sbb
call
push
xlat
insl
rcll
sarw
inc
aam
in
mov
lock
pushl
jge
inc
scas
push
sahf
data16
mov
jg
jo
push
adcl
mov
cmp
ficomps
jl
imul
pop
cwtl
pop
mov
mov
movsl
jne
jbe
pop
inc
inc
jns
outsl
sub
inc
int
out
insl
stos
pop
mov
imul
in
je
inc
incl
dec
cwtl
inc
push
fs
mov
addr16
or
jae
pop
mov
jns
dec
add
or
inc
pop
sub
aaa
or
and
inc
gs
and
mov
add
daa
push
sbb
inc
inc
scas
dec
cmpsl
xchg
xchg
outsl
fwait
test
jmp
decl
outsl
pop
jecxz
jns
pop
mov
popl
test
cmp
cmpsl
lods
pushl
inc
sub
adc
js
push
add
lcall
outsl
aas
sub
xor
push
adc
imul
inc
mov
out
sbb
out
sub
jmp
xorl
dec
mov
ss
loopne
xor
shl
sub
jmp
adc
ljmp
push
int
adc
adc
call
shrb
movsb
cmc
stos
ds
in
rcll
or
iret
push
mov
call
push
lret
sub
out
add
mov
and
hlt
add
loopne
or
jecxz
sbb
ret
ret
decl
pop
cmp
and
inc
inc
pop
inc
pop
or
add
das
or
pop
jb
pop
arpl
jo
inc
repz
das
jb
pop
inc
lea
xchg
ja
inc
push
mov
mov
faddl
arpl
fldl
dec
imul
xchg
pop
pop
ja
push
inc
adc
pusha
stc
lock
and
xor
or
sbb
sbb
push
xor
xor
or
sarl
mov
adc
addr16
nop
int
je
inc
inc
pop
mov
bound
xor
mov
test
mov
testl
jae
movsl
inc
lea
je
inc
rcrl
popa
pop
xchg
aaa
push
fcompl
ljmp
lret
cmp
sbb
jae
in
mov
cmp
xchg
dec
mov
push
lcall
push
push
push
pop
dec
inc
mov
scas
xchg
xchg
adc
subb
fcos
sbb
jne
mov
or
call
jbe
mov
pcmpeqd
mov
ja
xorl
loopne
inc
cwtl
add
decl
mov
pop
flds
mov
mov
movsb
popa
jge
jns
dec
aam
mov
mov
mov
repz
popf
pop
mov
loop
sub
call
jo
test
jae
jp
inc
mov
lahf
fistpl
dec
ret
inc
aaa
jg
fisttps
js
push
mov
cmp
pusha
pop
ljmp
jb
push
xchg
xchg
fldenv
jbe
xlat
lds
sbb
decl
dec
clc
mov
sbbl
fwait
inc
mov
pushl
mov
fwait
es
fidivs
out
out
push
xchg
pop
mov
filds
popa
sarl
push
inc
jmp
mov
aad
das
push
mov
mov
xor
cli
add
push
mov
ret
ret
sub
dec
jmp
and
fsubp
xchg
imul
lahf
dec
in
clc
push
mov
stos
xor
jmp
cmpsb
ret
cmpsb
mov
push
and
mov
pusha
addl
push
pop
lret
cmp
mov
inc
and
mov
ret
gs
mov
mov
and
sbb
cmp
call
xchg
push
push
push
shll
out
push
mov
dec
add
xchg
icebp
jmp
pop
cmp
mov
or
sbbb
or
test
call
mov
xchg
dec
fsts
mov
and
lcall
mov
add
cmp
push
test
mov
xchg
test
sbb
jmp
dec
push
adc
jnp
popa
dec
loope
mov
fwait
orl
loop
decl
add
lcall
js
mov
jb
inc
insl
xor
mov
std
pop
mov
arpl
dec
add
test
dec
gs
jmp
lea
xchg
dec
xor
or
jnp
jb
jg
shr
dec
xor
lods
mov
bound
jae
dec
mov
jp
incl
incl
mov
insb
mov
das
dec
sub
lahf
pop
add
icebp
stc
stos
outsl
mov
add
scas
mov
adc
incl
cld
movsl
lods
jle
sbb
mov
pusha
cltd
sbbl
xchg
mov
fld1
incl
insl
stos
cli
aad
dec
xchg
push
dec
xchg
dec
jno
push
inc
fnstenv
call
dec
jl
sub
or
loope
movb
incl
ljmp
fisubl
iret
divl
cmpsb
or
call
push
fs
pop
dec
jns
jbe
mov
jl
jb
cmp
xchg
pop
pop
sbb
mov
add
stos
inc
hlt
inc
insb
imul
mov
jns
sti
inc
icebp
leave
stos
push
in
or
mov
inc
mov
push
loopne
nop
stc
mov
mov
lcall
jns
jno
fs
lods
xchg
lods
iret
in
push
xchg
xlat
stos
data16
out
cld
pop
dec
shl
sbb
xchg
mov
jns
mov
xlat
stc
nop
mov
mov
push
adc
xchg
outsl
testl
pop
add
lea
jae
push
and
scas
jge
test
jp
cld
jmp
pop
lea
jb
scas
lret
sbb
mov
scas
imull
popf
lahf
mov
push
push
fldt
mov
fildl
jbe
sbb
in
pushf
lea
mov
stc
cmpsl
ljmp
fwait
mov
lcall
pop
incb
xlat
shl
cli
xchg
jae
mov
lcall
pusha
and
popa
lahf
push
mov
fsubrl
ficoms
xchg
inc
lea
inc
mov
fistl
hlt
push
xchg
push
addl
cmpl
hlt
in
outsl
pop
or
arpl
push
imul
incl
inc
shlb
test
in
jge
fidivs
stos
in
ja
rclb
pop
inc
scas
jo
test
push
stc
loop
inc
jnp
dec
inc
push
push
lock
cld
push
repnz
std
pop
icebp
lds
push
int3
mov
pop
xchg
icebp
jne
inc
mov
cmp
dec
sub
xchg
in
cmpb
jbe
fs
fnstenv
jnp
pop
jno
mov
aas
sahf
xchg
aaa
cmpsl
add
jle
cmp
int
cmp
and
scas
pushf
pusha
call
inc
jno
xchg
enter
ss
fnstsw
ja
mov
fbld
jmp
lods
jle
cmpsl
scas
jg
sti
movsl
sbb
movsb
mov
jge
int
cltd
call
add
mov
mov
adc
loop
nop
dec
test
jecxz
or
cld
incl
sub
xchg
mov
out
mov
sub
push
icebp
xchg
mov
call
repz
les
call
pusha
mov
loop
addr16
and
dec
cmp
and
jae
xor
je
pop
sbb
xchg
mov
cltd
dec
sbb
loope
imul
fistl
or
xchg
add
sbb
jmp
mov
cmp
ror
imul
imul
rcrl
test
lcall
dec
or
add
dec
decl
insb
or
xor
cmp
and
mov
jge
inc
cltd
mov
jmp
jmp
sti
out
inc
pushf
dec
xchg
sarb
lods
cs
in
test
incl
add
pushfw
adcl
mov
jecxz
mov
jmp
jg
out
js
add
mov
sbb
lds
push
cmpsl
cmpsb
scas
iret
js
ja
clc
mov
subb
test
fpatan
pusha
jmp
jg
sub
jo
hlt
pushf
mov
pushf
mov
or
mov
mov
jecxz
popa
movsb
mov
mov
mov
mov
insb
pop
pop
mov
fstpt
xchg
jl
mov
mov
movsl
and
lcall
dec
push
sti
push
loope
sbb
pusha
js
sti
cmp
stos
ljmp
cmpsb
adcl
jnp
cmp
lods
pop
mov
jp
lret
lcall
aam
xor
sub
mov
lahf
fwait
nop
sti
add
push
mov
cmpsl
cltd
sub
push
ljmp
mov
mov
xchg
scas
movsl
fwait
jno
and
dec
addb
subl
repz
jne
pop
imul
push
push
push
dec
add
fstl
jnp
jb
outsb
arpl
cltd
inc
decl
push
insl
mov
and
ficoms
jns
jnp
push
loop
pop
mov
jp
call
cmpsb
test
test
adc
mov
cmp
call
iret
jae
pop
jns
in
inc
lcall
pop
or
mov
nop
xorb
jl
lods
jno
insl
inc
add
jb
add
inc
lcall
mov
adc
jns
test
push
out
inc
jmp
insb
clc
es
mov
push
or
cmp
sbb
xorb
mov
imul
inc
jl
pop
jns
filds
sub
jne
incl
stc
xchg
ja
lret
cmpsb
cld
jne
xlat
jo
enter
mov
xchg
and
dec
xchg
inc
iret
jbe
cmc
jmp
mov
sub
andb
inc
inc
mov
jg
mov
dec
or
frstor
push
mov
ret
addb
ret
loopne
add
sbb
scas
push
mov
add
in
jbe
fsubs
xchg
test
xchg
clc
dec
cs
mov
lret
aas
mov
and
inc
rcrl
jg
and
out
mov
sarl
push
mov
sub
arpl
or
lea
lcall
pushf
imul
jge
pusha
xor
push
pusha
je
pushl
xchg
outsl
and
adc
pop
test
sbb
cmp
insb
in
arpl
ficoms
push
push
mov
lcall
scas
pop
ret
clc
rcrb
lahf
cmp
jg
test
push
sub
adc
jns
push
cs
dec
xchg
insb
cltd
incl
mov
cmp
xchg
cmp
mov
sti
pop
orl
mov
mov
or
ja
inc
mov
fwait
cmpsb
and
jge
rcll
mov
pushl
in
in
mov
xchg
sbb
lock
mov
xchg
mov
and
jmp
push
gs
push
es
pushf
std
in
test
sarb
decl
lret
inc
mov
adc
lahf
xchg
lods
out
xchg
sbb
push
mov
insb
cwtl
sub
sub
idiv
jnp
into
dec
mov
addr16
les
filds
adc
push
in
sub
popa
xchg
scas
stos
pop
inc
sbbb
decl
jbe
js
push
xor
fbstp
mov
outsl
lods
incl
stos
pushf
jne
cwtl
repnz
hlt
mov
push
cmp
mov
cs
fisttps
sub
or
jl
xchg
jg
dec
mov
mov
incl
fistpl
popa
stos
pushf
pop
cwtl
int3
stos
aas
repnz
dec
push
push
cwtl
or
push
jo
or
decl
mov
rclb
and
push
jge
arpl
bound
cmp
ds
andl
stos
jmp
sub
mov
push
push
mov
push
lahf
std
mov
jmp
lahf
scas
loop
in
jp
jb
push
fwait
gs
inc
mov
push
push
mov
mov
jg
mov
clc
daa
pop
lahf
push
xor
mov
push
pop
insb
xchg
scas
mov
jae
dec
mov
or
inc
and
and
call
jo
pop
mov
or
pop
push
or
jae
pop
xchg
mov
mov
or
dec
ja
bound
or
sahf
dec
das
push
push
pop
cmc
decl
inc
mov
cli
xchg
dec
imul
mov
pushl
out
mov
push
in
out
mov
add
pop
popa
loopne
mov
xchg
cmc
jb
push
mov
mov
ret
popa
jg
jns
inc
cmp
jnp
xchg
xchg
jb
inc
mov
jg
push
dec
std
mov
jmp
cld
dec
in
enter
int3
mov
dec
xor
shrb
mov
ljmp
mov
and
leave
lret
xchg
mov
jg
flds
mov
push
push
call
std
fs
shlb
adc
push
pushf
movsb
and
sbb
inc
mov
cmp
xchg
js
push
inc
xchg
inc
lods
jbe
mov
push
int3
inc
xlat
dec
mov
inc
in
imul
divb
jbe
ljmp
daa
leave
inc
sub
cld
pop
and
push
pop
jecxz
mov
pop
fistpl
ret
loop
outsl
cli
call
mov
or
and
lods
popf
fldcw
push
inc
and
inc
stos
jmp
int3
cli
icebp
push
outsl
loopne
inc
loopne
or
mov
aas
icebp
mov
xor
add
dec
test
into
pop
add
adc
pop
sti
cmpsb
stc
ljmp
mov
xchg
inc
mov
sbbl
std
aam
push
inc
xchg
sahf
stos
mov
into
or
mov
adc
enter
add
aas
loope
ja
push
data16
insb
xchg
push
add
ret
rcrl
clc
incl
push
dec
stos
add
dec
lea
mov
pop
loope
or
ja
jmp
test
popf
fwait
xchg
roll
addb
fwait
orb
sbb
fsubrl
out
sub
xor
mov
push
push
push
mov
sti
lahf
es
xchg
aam
sbb
xlat
mov
js
scas
jo
imul
jae
jecxz
sbb
subb
ljmp
dec
fwait
mov
and
inc
mov
loop
or
pop
mov
and
cmp
mov
mov
inc
mov
cmpsl
xor
cmp
jg
lea
sbbb
pop
mov
in
and
movsb
ljmp
adc
cmp
and
cmp
add
push
mov
je
jge
ja
ret
adc
cwtl
scas
lods
and
jns
xchg
mov
xchg
imul
or
mov
into
push
fwait
cmp
inc
aaa
cld
dec
dec
jnp
cwtl
in
pop
mov
pop
outsl
mov
out
inc
xor
or
sarl
mov
cld
jg
ljmp
cmp
mov
dec
inc
loopne
out
jecxz
jg
adc
inc
add
xchg
jg
call
sbb
scas
and
popf
dec
data16
jmp
push
mov
cwtl
jl
aaa
fs
sbb
cltd
mov
mov
or
out
cli
pop
in
pop
or
test
fs
shll
lret
pusha
inc
sub
pop
and
xchg
nop
dec
push
dec
fs
sarb
lcall
loop
addb
cwtl
repz
jno
nop
dec
scas
jp
rcrl
mov
xor
imul
div
cmpsl
mov
sbb
lods
orl
js
movsl
push
fwait
mov
arpl
in
jo
add
mov
cmpsb
or
sub
lcall
jae
cmp
cmpsl
xchg
bound
mov
or
xchg
xchg
mov
pop
test
jg
mov
jbe
sub
lcall
cmp
xchg
ficompl
sub
xchg
sbb
cld
icebp
jmp
push
mov
inc
pop
gs
mov
popf
bound
mov
mov
cmpsl
mov
lea
scas
xor
lret
fsts
mov
sub
fmull
je
jmp
cmp
orb
xor
popa
mov
jg
decb
in
pop
add
ja
fildl
das
clc
decl
push
int3
in
fiadds
ja
movsb
repnz
and
mov
dec
jp
nop
mov
cli
mov
cmp
jge
outsl
in
or
lods
shll
mov
ljmp
int
out
rorb
mov
mov
aaa
jp
jmp
inc
jge
neg
mov
cmc
sbb
mov
clc
inc
lcall
ret
jl
jns
cld
inc
data16
or
jno
loope
adc
cmp
sbb
ja
sti
sbb
cmpsb
std
mov
mov
xchg
jp
shl
stos
push
mov
mov
shrb
mov
jno
jmp
jns
movsl
pop
mov
fistpl
xor
jne
pushf
cli
dec
pusha
mov
xorb
lods
test
lahf
les
push
ljmp
pop
add
pushf
frstor
outsl
repz
movsl
jns
add
dec
cmp
aas
and
filds
pop
inc
pushf
mov
sub
push
int
mov
lods
decl
xchg
xchg
call
xor
js
aam
loope
dec
pusha
fiaddl
sbb
out
mov
mov
outsl
test
idivl
fwait
cmp
addl
jmp
xchg
inc
mov
inc
scas
test
mov
out
sti
or
jmp
lret
rcr
call
fdiv
and
sub
nop
outsb
add
mov
int
and
or
cmp
decl
inc
cmpsl
xor
xchg
push
mov
in
insl
jp
das
cli
out
aam
adc
fimull
and
out
fnstenv
dec
outsl
jne
mov
or
out
lret
in
mov
fimull
int
cmpsl
test
add
das
and
popf
pop
lahf
pop
es
push
shrb
mov
mov
jmp
cmpsl
fistpll
mov
mov
mov
xor
jg
mov
clc
andb
sar
mov
fisttpl
push
mov
mov
in
cmp
cli
out
xor
and
pushl
ret
push
stos
addl
hlt
js
cmp
negb
test
pushl
jge
jl
pop
loope
fstpl
mov
mov
pop
mov
in
push
pop
adc
jg
movsl
insb
push
hlt
in
mov
je
cmp
ss
insb
jo
int3
shll
mov
and
lret
push
adc
mov
mov
mov
sbb
lcall
push
xchg
fsubl
lret
shll
inc
adc
loopne
mov
push
xorl
enter
popf
jb
clc
push
sub
das
xlat
mov
xor
das
jo
fcomip
aas
imul
xchg
cmpsb
nop
jo
pop
pop
movsb
mov
scas
in
test
popf
test
pushl
pop
imul
movsb
jle
xchg
lods
pop
in
or
jle
mov
dec
push
scas
test
imul
mov
mov
cmpsb
mov
int
test
test
jne
frstor
mov
decl
pop
or
mov
icebp
imul
scas
cwtl
mov
or
add
mov
cltd
inc
and
incl
icebp
sbb
mov
notb
cwtl
mov
daa
inc
jne
in
movsl
lea
inc
sbb
pushl
jno
ljmp
rol
fbstp
pop
push
adc
sti
mov
pop
out
icebp
pushl
lea
ljmp
jmp
lahf
xchg
nop
jle
cmpsb
fistpl
mov
aas
cmp
dec
mov
mov
mov
repz
sub
xchg
jg
xor
test
testl
dec
pop
loopne
mov
cmpsl
out
pushl
pop
aaa
xchg
xor
xchg
popf
xchg
addb
mov
ret
subl
fbld
jecxz
mov
pop
xor
cmpsl
scas
mov
jmp
lea
jnp
pusha
mov
shll
adc
xchg
call
fisttps
mov
ss
cmpsb
xchg
data16
das
push
mov
mov
mov
pusha
inc
mov
test
mov
sbb
xor
jmp
mov
mov
cmpsl
mov
mull
mov
xor
or
repnz
mov
test
xor
cmp
cwtl
push
push
add
jg
into
and
stos
or
mov
pop
jne
lods
mov
and
ja
call
in
shll
sub
mov
and
or
mov
outsl
add
fldt
push
mov
fwait
mov
cwtl
xchg
mov
dec
mov
xchg
fdiv
lahf
lock
stc
mov
mov
push
insb
stc
adc
data16
mov
dec
dec
adc
sbb
jge
jecxz
sub
cmp
test
aaa
incl
addr16
aas
lods
push
je
cmpsl
lods
jno
mov
jae
test
cmc
add
out
call
lods
mov
xchg
push
pop
jg
push
call
mov
in
lret
inc
test
arpl
ja
xor
ljmp
dec
mov
stc
and
fidivrs
filds
jp
pop
and
dec
pushl
push
or
mov
mov
lret
push
lods
out
ss
adc
scas
lods
test
sarl
cmpsb
lahf
sarl
and
cmp
lahf
fwait
test
scas
jle
mov
movsl
jp
sar
decl
cmpl
mov
jl
clc
fcomip
cmp
leave
in
call
xchg
or
notb
test
mov
dec
mov
pop
int
cld
addr16
xchg
out
jns
mov
fwait
lcall
mov
test
es
in
call
xchg
lret
shrl
jno
adc
je
test
pop
out
sti
and
or
call
std
mov
lods
push
cltd
mov
loop
pusha
daa
mov
test
or
add
fiaddl
xor
mov
xor
call
jae
jle
mov
mov
mov
test
mov
mov
lahf
xchg
mov
push
mov
rorb
cmpsl
std
mov
push
mov
hlt
lds
fistps
mov
mov
push
pop
pop
inc
cmc
fstl
or
mov
mov
es
xchg
xchg
mov
or
xchg
push
div
push
test
leave
push
pop
cmp
cmpsb
xor
and
mov
sub
jg
in
sti
or
xlat
cli
mov
jmp
mov
jmp
xchg
movb
cmp
out
sub
jbe
outsb
mov
xchg
or
outsb
pop
js
imul
xchg
push
cs
loop
xlat
sarl
rcr
jp
das
mov
lea
mov
xchg
cmp
inc
mov
mov
push
mov
xchg
or
lods
outsl
lret
cmpb
scas
xchg
mov
mov
in
jo
lret
loope
cs
adc
into
pop
stos
pop
jge
call
outsb
pop
call
pop
adc
jno
xchg
and
pushl
lcall
adc
aam
jo
and
insl
mov
xchg
lods
lcall
jne
in
push
pop
shlb
push
js
add
stos
xchg
xchg
and
sub
das
mov
sbb
out
call
dec
pop
shl
sbb
popa
xchg
push
mov
lea
lcall
jecxz
and
or
jg
in
ljmp
cmp
push
ja
fwait
pusha
and
or
or
dec
mov
test
fcomip
mov
loop
dec
adc
add
test
lahf
jb
push
jg
aas
loopne
aas
xor
inc
xchg
inc
jns
aam
pop
or
std
ja
loop
insl
daa
and
mov
pop
adc
sub
sub
xchg
sub
pop
xchg
mov
xor
rolb
sbb
mov
push
sbb
xchg
fcomps
add
inc
in
fnstsw
das
pop
jo
mov
cli
or
jg
cmp
ja
ljmp
push
cmovl
and
add
mov
call
jmpw
lcall
cmpsl
test
scas
xchg
dec
out
pop
mov
inc
subb
bound
mov
mov
scas
outsl
test
clc
in
add
or
fbld
push
adc
mov
lahf
insb
inc
fldl
xor
jg
push
push
push
lods
jge
jle
sbb
adc
inc
aad
mov
addr16
xor
xor
jnp
pop
test
fsubs
cmp
subb
sub
adc
pop
les
mov
ja
cmp
sub
adcb
xor
and
add
ret
pop
ret
sub
dec
and
pushl
mov
scas
aam
push
mov
cmp
cs
jnp
pop
or
push
inc
lea
loopne
imul
les
aad
shll
mov
dec
push
addb
pop
mov
stos
sub
or
mov
imul
test
adc
inc
out
ljmp
jmp
adc
test
xor
cmp
incl
jl
fldl
mov
pop
mov
mov
je
lcall
mov
fs
out
shrl
pop
aam
stos
les
pop
lods
fiadds
ljmp
ret
ror
or
js
test
int
sbb
mov
mov
ds
daa
xor
inc
scas
clc
push
adc
repnz
lock
mov
fcomps
data16
cld
mov
or
push
call
add
pop
xor
arpl
jns
stos
dec
mov
in
cmpsb
jge
inc
adc
loope
jl
or
aas
cld
push
mov
push
or
or
jo
cwtl
mov
fcomip
mov
ret
pop
jg
inc
cmp
jle
jl
pop
pop
add
dec
cld
mov
test
jbe
jb
out
inc
add
das
js
pop
test
mov
inc
mov
ret
add
icebp
jmp
xlat
sbb
xchg
jmp
and
loopne
fadds
hlt
mov
aas
xlat
pop
dec
test
in
push
push
outsl
mov
mov
mov
pushl
push
pop
jl
bound
rcrl
xor
fiadds
int
xchg
and
aaa
je
mov
mov
mov
pop
mov
in
xchg
ja
mov
jmp
and
sbb
cld
push
add
inc
lret
test
testl
fiaddl
movsl
aam
xchg
xchg
cld
test
mov
push
jl
mov
dec
fimuls
pop
jnp
ljmp
jno
aaa
shll
xchg
stc
jnp
ret
mov
jge
test
subl
fisubl
jb
mov
clc
pop
cmpb
jp
pop
xchg
fwait
mov
mov
lea
test
cmpsl
mov
sbb
test
mov
add
int3
add
xchg
sarb
outsl
clc
movsl
jg
pushf
mov
xlat
fcompl
push
out
jg
xchg
mov
mov
pop
test
xlat
push
std
jg
sti
cmp
mov
jmp
aaa
fistpll
out
jmp
sbb
cmpsb
inc
xchg
or
in
jae
push
push
lock
xor
xor
xor
and
cld
pushl
push
gs
shl
push
pop
pop
mov
cld
test
push
fdivrs
xchg
ljmp
rolb
enter
and
xchg
adcb
xchg
test
xrelease
push
mov
inc
roll
icebp
orl
aam
mov
fisttpl
scas
ret
fwait
std
mov
adc
in
call
cmpsb
cmpsb
jbe
stc
shl
rclb
jg
xor
mov
mov
sbb
es
jp
pushl
cmp
pop
cmpsb
mov
lahf
ss
bnd
shrl
gs
sub
xor
xlat
or
inc
cmp
fdivrl
test
push
mov
mov
push
cmpsb
repz
xlat
ljmp
popa
jno
test
call
cmp
xor
arpl
xor
rcrb
push
call
mov
stos
xlat
pop
mov
mov
inc
aas
dec
lahf
mov
call
push
stos
inc
jno
negb
je
pop
ljmp
cmpsb
dec
dec
mov
jno
dec
lcall
xchg
aad
mov
out
jge
fnstsw
out
and
or
push
scas
inc
push
mov
mov
mov
jns
rcrb
sbb
fwait
jbe
pushl
push
mov
pop
pop
mov
fucomp
and
jmp
push
cmpsb
xchg
adc
sbb
sbb
jmp
mov
addl
mov
test
imul
xchg
mov
repz
adc
in
lcall
out
clc
call
xchg
cmpsl
cmpsb
ror
in
pop
push
xchg
push
stos
push
arpl
mov
mov
leave
and
xchg
insb
adc
nop
outsl
stos
sub
jns
inc
mov
push
aaa
add
push
enter
outsl
dec
and
call
push
data16
xor
cltd
xchg
je
push
ss
xchg
mov
fstps
test
mov
in
mov
mov
jb
ljmp
mov
fwait
jmp
mov
xorb
test
inc
mov
insl
notl
scas
add
mov
mov
fwait
push
daa
pop
loope
xchg
fsubrs
jecxz
cltd
sub
mov
jg
push
xchg
jnp
pop
fisubs
and
int
add
fbld
fnstcw
inc
test
or
jns
inc
scas
add
xchg
mov
clc
dec
cli
incl
inc
ja
les
pop
jo
int
push
fwait
stos
lret
call
or
cmpsl
daa
jl
inc
mov
mov
bound
mov
fs
inc
nop
cmp
fisttps
std
mov
mov
jb
adc
call
push
adc
xor
inc
mov
insb
push
and
and
xor
mov
adc
push
mov
push
adc
ret
and
jne
jo
pushf
incl
test
mov
loopne
ret
xchg
out
adc
jnp
cmp
mov
or
pop
das
pop
std
std
pop
lock
mov
movsb
call
mov
ss
scas
push
insl
xchg
jg
add
adc
xchg
cmpsb
std
add
cmpb
dec
test
call
sti
mov
pop
jge
rolb
mov
mov
jbe
test
das
and
mov
rorl
mov
dec
mov
outsb
mov
iret
mov
lock
mov
scas
pop
push
cld
call
outsb
stos
clc
mov
test
sbb
mov
cmp
or
sub
sbb
lcall
mov
or
ljmp
sub
out
mov
dec
test
xchg
fcompl
cld
jg
sbb
xlat
inc
in
pop
ss
sub
popa
xor
add
mov
add
sbb
push
sahf
push
push
lds
mov
cmp
dec
mov
inc
jnp
fucomp
ljmp
fs
lret
shlb
lcall
xchg
xor
div
mov
adc
ja
mov
push
sbb
pushl
xor
pushf
sbb
xchg
push
out
sbb
xlat
inc
lods
je
incl
imul
enter
ret
xchg
in
pop
or
dec
rclb
mov
lcall
or
imul
imul
decl
xchg
mov
ja
jmp
insl
sub
xchg
and
lcall
adc
sub
cmp
repz
sbb
shlb
mov
lods
mov
mov
sub
imul
cmp
jbe
cli
mov
jne
inc
mov
ja
mov
jns
ljmp
mov
clc
sbb
and
mov
mov
bound
loop
ljmp
lods
test
mov
pop
icebp
mov
imulb
movsl
jno
mov
pop
pop
clc
fsubrl
sub
je
push
mov
mov
dec
mov
pop
sbb
pop
fisubrs
test
scas
adc
mov
clc
cltd
xor
mov
out
int
sub
dec
cmp
rorl
adc
das
test
incl
and
test
jns
add
or
push
cmp
mov
push
pop
mov
cmp
aas
data16
out
ret
sbb
push
mov
dec
lods
mov
jp
mov
cltd
lea
je
out
subb
decl
pop
or
hlt
mov
dec
sbb
mov
sarb
fstpt
inc
and
test
push
mov
sub
xor
inc
cmc
pop
js
or
lock
ffree
outsb
jns
sub
cmpsb
inc
fwait
xchg
in
daa
scas
mov
out
lock
add
cltd
int
mov
in
insb
sbb
loopne
pop
jmp
cs
in
ret
test
outsl
sub
push
js
sub
inc
fwait
xchg
into
jmp
sbb
or
notb
ja
push
into
xchg
cltd
stc
push
add
cmp
decl
stos
je
jnp
jb
mov
cmpsb
movsl
jge
push
movsl
and
jmp
sbb
sub
scas
test
mov
add
xor
ret
dec
push
mov
aaa
out
jbe
xchg
mov
repnz
fisubl
mov
cmp
dec
das
clc
dec
and
sub
fldl
cmp
test
lahf
sarb
pop
mov
jg
xor
cmpsl
mov
dec
test
movsl
iret
or
addb
adc
or
cwtd
lock
pop
xor
aad
push
scas
arpl
stos
hlt
add
dec
inc
xchg
scas
jno
aam
cltd
rorl
mov
mov
hlt
add
mov
test
lea
cmp
mov
call
scas
and
ljmp
or
and
loopne
scas
xor
pop
add
clc
adc
fs
pop
test
cmp
fistpll
mov
and
adc
mov
mov
fildl
filds
cli
fsubrs
jg
repnz
cmp
adc
idiv
movsl
mov
or
or
xchg
sub
push
call
in
sbb
ja
mov
push
cld
lcall
pusha
pop
jbe
cmp
das
mov
sbb
add
sbb
adc
inc
test
sub
adc
dec
xchg
lcall
cmc
aaa
or
out
lret
insl
push
iret
out
popa
loope
lock
pop
cld
fwait
sub
ret
cmp
call
fwait
cmp
sti
ljmp
jmp
xchg
mov
aaa
cmp
and
pop
scas
xor
mov
roll
jo
aad
push
sbb
push
orl
into
inc
xchg
inc
mov
in
sub
ret
lret
and
push
mov
lock
je
mov
xlat
push
test
call
lahf
mov
pop
insl
mov
mov
mov
fidivrl
mov
test
lcall
imul
cmpsl
mov
lock
mov
loop
xchg
nop
mov
jb
pop
adc
push
inc
add
lret
or
xchg
out
mov
sbb
mov
bound
push
loopne
mov
cmpsb
mov
sub
sub
pop
pushl
or
or
cmc
pop
mov
or
xor
roll
scas
jp
ljmp
ret
pop
fnstenv
scas
sub
out
js
scas
pop
test
fwait
enter
in
pushl
push
or
loope
and
mov
adc
ljmp
mov
xor
fs
clc
and
enter
inc
push
cmc
mov
out
and
adc
jmp
scas
xchg
jne
pushw
mov
adc
call
std
jmp
jl
data16
lahf
mov
mov
mov
stos
xchg
iret
in
push
hlt
pushl
mov
sub
inc
aam
push
cmp
sub
mov
fwait
hlt
incl
test
cmp
das
mov
mov
movsb
aam
sub
mov
and
add
pop
cs
push
xor
mov
inc
adc
movsl
scas
lods
call
movsl
push
xchg
int
push
stos
sahf
das
popf
mov
mov
push
ret
in
dec
sar
sbb
stos
adc
or
inc
int
cwtl
cmp
xor
cwtl
stos
cld
adc
cli
fcompl
and
lods
cli
jge
push
loopne
or
in
xor
rolb
cmp
jmp
mov
aaa
pop
aam
test
movsl
mov
cmpb
pop
push
and
mov
aas
loopne
test
cmp
cmp
xchg
outsl
mov
pop
mov
test
and
mov
pop
or
add
push
mov
push
dec
pop
ds
into
rcrb
xchg
orl
add
call
mov
or
inc
test
sub
pop
add
dec
cmp
push
pop
movsl
mov
jge
cmp
inc
pop
test
lods
or
mov
stos
xor
sub
out
cltd
mov
fcomip
decl
fwait
lods
scas
test
pop
sbb
jp,pt
cmp
leave
xchg
test
mov
sub
mov
push
inc
ljmp
push
ss
xchg
sbb
jns
outsl
cmp
push
adcl
stc
mov
jg
incl
pop
and
ds
inc
xchg
add
mov
insb
push
lcall
sub
or
fcomip
movsb
and
xlat
cld
xor
fptan
pushf
push
ds
outsl
pop
push
cwtl
xchg
push
mov
jnp
cs
loop
push
mov
sbb
outsl
loop
fs
aaa
imul
inc
add
scas
iret
mov
jg
incb
inc
enter
mov
ret
add
cld
call
adc
jle
cmpsl
cmp
dec
fwait
test
test
rorb
popf
hlt
jg
adc
or
hlt
mov
dec
fisttps
pushf
xor
pop
nop
in
or
test
pop
cs
ss
jg
jp
sbb
mov
movsb
cwtl
int
pop
xorl
mov
mov
outsb
fdiv
push
push
fsubrl
fwait
cmpsl
mov
jl
stos
stos
mov
mov
sub
pop
out
lret
lcall
cmp
cmp
mov
jg
mov
push
lods
insl
jae
xlat
push
lds
test
jg
jae
cld
fildll
data16
pushf
xchg
jae
push
jp
lret
es
lahf
scas
mov
xchg
sbb
inc
inc
mov
out
adc
std
movsb
movl
jl
jge
lcall
mov
mov
ljmp
and
inc
lods
scas
push
movsb
in
and
cld
dec
loop
aad
mov
addr16
add
mov
dec
loopne
lds
push
loop,pn
mov
pshufw
hlt
or
imul
jmp
fmuls
xchg
js
or
mov
pop
test
mov
ljmp
incl
cli
fcmovnu
push
pop
cli
inc
mov
fistl
ja
pop
push
clc
jg
mov
mov
ret
push
push
out
arpl
cmp
sbb
pop
xchg
insb
mov
mov
dec
jne
jmp
std
les
ljmp
push
xor
inc
mov
mov
mov
xchg
es
inc
ljmp
mov
repnz
ficoms
aas
xchg
jbe
mov
decl
cld
call
and
andl
lcall
ss
pop
stos
dec
and
arpl
test
mov
jmp
xchg
scas
bound
inc
cmp
ffree
nop
or
mov
rcr
aam
loop
xchg
xchg
inc
mov
jp
push
in
jp
loopne
pop
sub
mov
mov
mov
shlb
add
push
push
sub
addl
aad
adc
cltd
fsubs
clc
call
jmp
dec
test
data16
pop
aas
jg
outsl
or
jg
and
daa
in
and
push
adc
lcall
lds
cwtl
out
dec
and
mov
nop
adc
lret
das
cli
dec
fsubrp
aam
loope
jl
loope
cltd
jl
mov
mov
mov
loope
pushl
js
mov
aad
push
in
fwait
cmp
dec
cmp
andb
ljmp
cmc
pop
lcall
jnp
mov
xchg
int3
pop
sbb
pushl
into
aad
pusha
enter
call
inc
pop
fs
or
in
out
dec
jmp
push
jbe
cmp
cmc
push
or
push
jb
repnz
xorb
mov
inc
mov
loope
inc
std
call
stc
int
hlt
call
loopne
into
mov
mov
popa
pop
jne
jmp
push
in
or
lret
mov
sar
sub
fistps
add
push
outsl
lods
pop
inc
fildl
cmpsl
push
dec
mov
jmp
out
mov
fiaddl
sbb
lcall
daa
shlb
adc
inc
dec
fcmovbe
rorb
sbb
adc
jle
fcomip
incl
lret
repnz
pushf
or
push
je
outsl
mov
insb
loop
imul
bnd
jns
or
pmulhw
xorb
ret
fstpl
mov
leave
push
popa
pop
or
xchg
and
cmp
aad
cmp
jmp
jae
pop
inc
add
popf
test
pop
or
add
leave
aaa
stc
jns
push
push
ficomps
pushl
shrb
enter
aas
int3
xor
imul
inc
movsb
mov
sarl
add
adc
pop
stc
in
popf
scas
loop
in
out
clc
sar
mov
adc
mov
jae
cmp
insb
test
jle
jbe
sub
sub
dec
push
sub
jge
rcr
jmp
scas
stos
push
je
int
jmp
stc
aam
incl
cmp
inc
pop
mov
mov
movsb
lea
cmp
pushf
fsubs
push
stos
mov
sahf
and
mov
test
in
int3
stc
repnz
mov
jae
fwait
lea
jo
ret
in
shrb
push
inc
cmp
adc
dec
dec
pop
add
inc
push
mov
jge
insl
ss
scas
mov
outsl
jb
mov
xor
rcr
es
lea
adc
push
outsb
outsl
fwait
mov
sub
cmpsl
mov
xor
repnz
pop
mov
or
fmull
lcall
add
fcomip
shl
shll
lea
fmul
jmp
imul
ret
outsl
ret
push
fdivrl
lea
lock
incl
daa
je
cmpsl
xchg
mov
aaa
mov
inc
mov
mov
dec
lods
mov
cmpsb
mov
mov
jmp
loop
lahf
test
jbe
adcb
sarb
xchg
mov
lcall
mov
mov
mov
jge
movsl
mov
jmp
xchg
xor
inc
xchg
lea
xchg
jg
jg
push
test
mov
mov
mov
or
rcr
mov
dec
mov
inc
inc
cmc
push
mov
cmp
cmp
pop
add
inc
mov
push
aam
mov
ja
out
decb
xchg
lahf
cmpsl
xchg
or
push
stos
subl
rol
fiadds
mov
inc
jne
fisttpl
sub
mov
scas
mov
aad
icebp
inc
cltd
subl
cld
lock
int3
icebp
mov
scas
mov
pushl
les
mov
jecxz
xchg
jmp
scas
subl
inc
mov
mov
mov
add
jo
pop
or
enter
loopne
mov
jg
cmp
std
das
cwtl
in
add
push
xchg
mov
outsl
ret
push
mov
dec
movsl
mov
cmpsb
mov
add
and
or
mov
or
jg
dec
je
movsl
and
push
aaa
popa
rcll
test
fsubr
xchg
dec
dec
push
shl
jb
adc
fwait
loopne
cmpsl
int3
scas
test
icebp
out
pop
mov
fsub
notb
icebp
ljmp
mov
rep
test
mov
lret
in
loope
fbstp
iret
sub
lods
mov
in
imul
inc
pop
dec
cld
hlt
aaa
fwait
push
test
jae
cltd
xchg
scas
ds
pop
sub
jb
repz
push
jle
notb
cmpsl
mov
jmp
loop
mov
jge
popa
arpl
xchg
scas
mov
add
mov
cmp
scas
dec
mov
fs
mov
mov
imulb
pop
mov
call
js
sbb
jnp
bound
clc
jg
jbe
cld
inc
mov
push
fwait
or
jbe
push
push
mov
jb
cmp
or
or
andl
jnp
xorl
mov
cmc
bound
shrb
es
dec
add
xchg
test
lret
push
or
addb
dec
pop
jbe
out
fildll
dec
test
mov
mov
xor
idivl
pop
clc
pop
adc
fcmove
add
pop
sbb
mov
popa
ss
push
icebp
jmp
xchg
inc
mov
lret
inc
or
int
mov
cltd
pop
cmc
daa
push
stos
add
mov
add
cmpsb
jmp
fdivp
jb
pop
xchg
push
lods
sti
out
cli
out
dec
mov
xchg
std
in
or
xlat
pop
icebp
pop
hlt
pop
mov
lahf
fidivrl
stos
scas
fdivl
fsubrl
lods
fiadds
and
pushf
push
cmp
loope
adc
or
iret
addr16
jecxz
fadds
mov
mov
movsb
stos
fucom
popa
daa
jg
mov
mov
jmp
mov
mov
mov
out
cmpsb
test
mov
mov
testb
cli
lahf
es
jmp
loopne
jnp
rorb
push
aam
fdiv
adc
fsubl
inc
std
lcall
dec
outsb
cltd
enter
xchg
lods
mov
mov
lea
ja
xchg
push
xchg
mov
or
mov
andl
dec
pusha
jmp
roll
adc
clc
mov
and
pop
je
les
movsl
add
inc
outsl
mov
loopne
pushl
add
sub
xchg
cmpsb
pop
push
test
pushf
dec
aas
cmp
test
xor
inc
push
pop
outsb
pop
cli
pusha
mov
pop
lahf
sbb
ja
inc
sar
xor
test
test
decl
in
cmpsb
mov
cmp
mov
and
jg
lock
pop
inc
jbe
inc
bnd
cld
dec
movsb
add
rolb
push
jmp
mov
jnp
lahf
inc
xorb
add
pushf
or
pop
lcall
js
mov
cmpsb
push
xor
js
fcomip
mov
mov
dec
aam
lahf
in
jo
mov
sar
das
clc
mov
movsb
xor
or
cmpsl
dec
mov
js
mov
add
push
lcall
jns
test
mov
xchg
inc
add
call
shll
data16
fildl
adc
adc
mov
icebp
inc
icebp
push
or
cmc
int
mov
jb
cmc
jno
jmp
outsl
out
les
sbb
ret
scas
jbe
jecxz
sub
daa
je
jmp
push
divl
xchg
mov
mov
inc
cwtl
pop
or
jae
push
mov
dec
jle
xor
push
jg
lcall
aam
loope
loop
inc
xor
push
pop
enter
loop
xchg
jg
jne
or
jp
jne
cld
push
pop
bound
loope
stos
std
decl
inc
pop
sbb
shr
insl
add
inc
or
mov
push
in
sub
pop
in
pushf
into
jg
mov
out
leave
bound
mov
xchg
lahf
mov
jmp
jg
lea
cltd
sarb
test
imul
sar
lcall
dec
sub
ret
and
test
iret
jb
cwtl
test
or
jnp
decl
inc
imul
push
and
mov
jecxz
mov
jecxz
mov
pop
jle
aad
call
sub
xchg
call
fwait
mov
movsl
pop
mov
jmp
int
xor
jmp
mov
pop
pop
jge
jns
pop
add
addr16
repnz
arpl
jg
decl
xor
xchg
mov
or
xchg
pushf
out
ret
push
jns
or
pop
cs
push
push
add
out
inc
sbb
pop
popf
jmp
pop
lcall
decl
add
push
dec
mov
push
fs
or
outsl
xchg
rorl
cmp
xlat
jne
lea
insl
jmp
addr16
sbb
sbb
and
scas
jmp
sbb
orl
jns
cs
nopl
addr16
or
cmp
mov
push
xor
add
mov
jecxz
jmp
lret
mov
push
add
mov
jbe
stos
mov
pop
xchg
or
mov
arpl
jecxz
add
loopne
rclb
pop
cmpsl
and
je
gs
or
push
xlat
sbb
pop
rcr
jne
insb
push
cwtl
jmp
mov
mov
dec
daa
jp
sub
in
sbb
lcall
lcall
pop
mov
adc
add
je
or
cmpsb
push
sub
push
xchg
lret
lcall
jne
sub
ja
aaa
jns
nop
das
int
xchg
roll
fs
push
adcl
xchg
stc
mov
add
int
xorl
inc
stos
inc
sbb
loopne
shrl
inc
xor
jb
ljmp
data16
jne
push
xor
inc
mov
in
ja
fstpt
repz
lcall
adc
dec
push
je
or
pop
or
rcl
jbe
push
leave
push
movsl
and
mov
push
mov
or
mov
fldl
jno
pop
jbe
stos
or
aaa
std
pop
icebp
pop
fucomip
in
test
pop
or
pop
outsl
int
pop
cmp
xor
clc
aam
pop
lcall
ljmp
popa
fcomip
mov
les
fimuls
sbb
gs
jg
xchg
push
or
jmp
ret
jae
add
mov
icebp
lcall
mov
mov
ss
push
lcall
gs
lock
add
mov
daa
das
lcall
xor
jg
les
ret
sbb
or
lret
dec
je
ss
data16
incl
and
inc
leave
movsl
dec
and
xor
sahf
out
loop
jbe
adc
or
lods
decl
ljmp
xlat
lods
push
jmp
pop
clc
bound
addb
mov
dec
inc
push
cmpsb
jle
js
push
push
push
decl
mov
mov
lea
je
inc
mov
ljmp
pop
inc
outsl
cwtl
mov
pop
ds
imul
mov
pop
pop
dec
pop
cli
jmp
jmp
pop
lahf
mov
pop
rcrb
inc
adc
lcall
xchg
pop
dec
mov
jle
lods
stc
imul
scas
pop
lods
xchg
loopne,pn
and
jo
sub
pop
out
mov
pusha
add
xor
inc
decl
adc
outsb
cmp
or
pushf
adc
mov
mov
mov
es
in
gs
popf
aaa
es
jg
jo
or
push
sahf
incl
cs
jmp
xor
sub
jp
cmpsl
jbe
adc
loop
ja
jmp
push
adc
sub
push
es
js
add
lcall
mov
cmp
or
inc
dec
imul
jb
mov
lahf
popa
xor
popf
je
push
jb
push
je
cmp
mov
cmpsb
data16
subb
push
cmpsb
push
stos
je
mov
ret
jge
call
or
pop
xchg
and
shl
jle
sub
add
sbb
jmp
dec
shlb
push
jge
dec
scas
fidivrs
fwait
jle
xor
and
jg
jp,pt
es
jg
add
int
jle
and
sub
jo
mov
xchg
movsl
jle
inc
movsb
mov
insb
lea
push
push
fsubl
ljmp
and
xchg
mov
rorl
or
pop
jne
add
ljmp
inc
scas
movsb
cs
in
sbb
fistl
jmp
fimuls
adc
das
and
mov
fdivr
lcall
call
stos
inc
aaa
bound
pop
mov
mov
jmp
scas
dec
add
dec
mov
adc
fcomp
dec
push
add
nop
inc
mov
xor
jg
xor
push
pop
mov
stos
mov
dec
mov
jg
xchg
dec
mov
adc
or
es
add
icebp
cmpsl
inc
add
aaa
ja
adc
push
inc
test
test
insb
stos
push
sbb
pushl
ret
cmp
pop
cmpsl
fs
rcl
inc
push
jae
gs
popf
decl
jae
mov
push
add
and
and
lahf
or
mov
xchg
mov
fbld
push
mov
pushf
pusha
and
cwtl
xchg
mov
cs
adc
or
test
imul
jmp
cmpsb
or
xchg
outsl
pop
mov
nop
inc
push
sbb
jns
push
or
push
pop
cmc
jmp
mov
mov
or
xorb
pop
es
jle
mov
xchg
jnp
das
inc
stos
mov
int
cmp
or
in
adc
mov
sub
mov
call
pusha
rcr
fdivr
scas
push
xchg
and
push
push
dec
pushf
add
outsl
popa
ja
js
lcall
testb
pop
aad
inc
loopne
insb
lock
sbb
call
dec
repz
dec
shll
imul
dec
je
insb
aam
dec
stc
pushl
std
cli
mov
and
add
inc
fcoms
pop
in
lock
call
pop
xor
hlt
sti
popa
lret
jns
loope
mov
int
jne
std
outsl
decl
and
jae
negl
int3
jnp
lock
call
and
int
pop
sub
in
call
call
js
mulb
mov
arpl
into
xchg
jp
pop
fcomi
fwait
pop
adc
inc
pop
inc
dec
enter
or
jg
dec
test
push
jg
faddp
test
loopne
dec
rorb
lcall
ja
cmp
dec
testl
bound
nop
mov
call
cmp
es
cmp
js
shll
andps
jno
push
xchg
mov
fwait
push
imul
pushl
dec
repnz
lcall
and
jb
cmpsb
jg
dec
push
test
pop
mov
jae
and
popa
or
and
in
jnp
bound
lahf
ljmp
adc
mov
aas
ds
push
inc
cmp
call
xchg
cmp
inc
jns
movsl
in
pop
mov
ret
imul
pop
push
sbbl
pusha
daa
fs
ficomps
sbb
je
jb
fwait
pop
in
mov
mov
cmc
icebp
out
repnz
jno
xchg
inc
shlb
mov
cmp
repnz
pop
das
test
int
mov
pop
rolb
xor
jmp
mov
fcoms
inc
outsb
xchg
push
les
xor
lock
cld
ja
les
testb
les
mov
test
mov
call
or
jbe
push
popw
dec
pop
mov
mov
jmp
jmp
movsl
mov
loope
push
in
mov
js
sbb
je
dec
mov
mov
mov
cmp
lds
lds
push
clc
jmp
sti
inc
push
outsb
adc
jg
mov
adc
rcl
dec
insb
aaa
mov
ljmp
fisttpll
in
push
outsl
jns
mov
jle
ret
fildl
call
popf
ja
scas
andb
pop
jp
and
inc
aas
jg
add
outsb
add
xchg
pop
scas
js
mov
incl
test
xchg
test
fsubrp
out
decl
xchg
xchg
jno
cld
hlt
ss
inc
add
sbbl
mov
push
inc
or
out
jg
ljmp
mov
addl
xor
inc
xlat
push
ja
scas
arpl
sbb
xchg
dec
fcmovb
test
aam
mov
inc
stc
add
xor
or
outsl
clc
jmp
sub
aaa
aad
adc
sar
xor
push
and
clc
ljmp
fcompl
mov
loopne
nop
pop
push
test
outsb
and
mov
and
pop
pushl
cld
sbb
mov
es
xor
mov
jns
inc
jae
ljmp
cmpsb
aaa
adc
and
sub
pop
inc
sub
call
jo
mov
in
inc
je
push
fcoms
cli
fdivl
repnz
dec
xchg
stos
inc
mov
lcall
loopne
inc
push
popa
inc
sub
pushl
cltd
jg
jge
mov
xchg
mov
pop
pushf
dec
cli
cmp
mov
test
out
loopne
xor
int
cmc
pop
cs
sub
xchg
xchg
push
addr16
fisttps
call
mov
or
sbb
mov
clc
jp
inc
pop
jle
and
outsl
cli
add
fdivl
int3
ja
push
lock
inc
dec
movsl
lcall
or
cmp
lahf
and
add
repz
je
inc
push
jg
lock
sub
mov
lds
fs
push
adc
jg
decl
jg
jne
rcll
insl
mov
sub
addl
add
jg
insb
jae
sbb
mov
push
sub
push
test
out
inc
push
dec
out
incl
mov
outsl
test
xchg
sbb
cli
testl
sbb
cld
ja
jmp
push
dec
mov
mov
mov
pushf
pusha
add
push
test
sbb
loop
call
jno
mov
jbe
lret
out
cld
ljmp
sbb
jmp
and
bound
pop
mov
jnp
test
data16
add
mov
push
inc
xor
xorb
ss
decl
cmpsb
test
fmull
jbe
sti
sub
add
rclb
ljmp
jle
es
jmp
cmpsb
outsl
les
cmp
sti
pop
or
mov
bound
mov
sbb
and
jge
jbe
lcall
and
jne
jb
leave
push
inc
cli
dec
mov
or
and
add
pop
ja
adc
inc
jge
cld
fwait
outsb
ret
push
aaa
jp
or
addr16
push
lss
jg
dec
rclb
sbb
jb
hlt
pop
mov
push
mov
in
adc
decl
aad
pop
push
adc
pop
es
bound
fldcw
pop
xchg
test
dec
sub
hlt
jo
push
jb
xchg
mov
jle
jbe
xlat
cs
pop
adc
incl
test
jne
inc
stos
push
push
mov
test
and
jmp
fs
cmp
inc
fimull
mov
push
jecxz
mov
sar
add
ljmp
pop
sbb
jg
push
aam
in
jg
fcmovu
jge
insl
fiaddl
cltd
pop
push
pushf
xchg
pop
lcall
lcall
xor
gs
inc
push
lahf
clc
decl
add
push
les
test
jmp
mov
test
pop
pop
mov
push
in
fildl
int3
sbb
cld
jmp
mov
add
inc
or
or
scas
mov
js
mov
xor
clc
incl
add
xor
cmp
shr
pusha
dec
push
cmp
call
in
shlb
ret
push
decb
mov
push
sub
mov
add
jnp
fs
adc
xchg
mov
xchg
sub
icebp
decl
mov
sbb
dec
adc
adc
push
in
incl
cli
inc
jbe
jne
jae
mov
xor
jmp
jb
sub
mov
jb
adc
ud0
add
sahf
xor
mov
dec
adcl
in
popa
jmp
inc
incl
stc
push
sbb
cmp
dec
imul
or
mov
add
push
ss
movsb
push
xchg
and
mov
stc
popf
push
pop
mov
js
push
dec
xlat
xchg
inc
negb
xlat
push
lock
loopne
ret
sahf
push
icebp
and
inc
bnd
sarl
xchg
lcall
cmp
dec
push
or
mov
push
adc
out
dec
and
ret
xchg
loop
push
sub
and
decl
or
outsl
jno
mov
dec
sahf
test
lret
xor
xor
clc
fists
add
xor
push
xchg
xor
das
pop
hlt
das
lock
cmpsb
push
adc
push
test
out
inc
or
xchg
add
push
adc
push
mov
mov
sbb
icebp
jg
pop
lret
je
pop
push
je
jle
sarb
nop
jbe
inc
call
movb
mov
shlb
cmpsb
imul
pushf
lock
pushl
js
mov
in
mov
fdivrs
je
adc
mov
mov
decl
ljmp
pop
clc
add
inc
shl
dec
sub
mov
icebp
setne
mov
xchg
jecxz
mov
jb
pushf
dec
inc
sbb
out
jbe
dec
lock
mov
dec
fwait
push
aam
fwait
insl
jge
mov
jge
decl
xchg
jl
dec
jp
pop
sub
imul
sahf
adc
or
std
stc
push
outsb
pop
sbb
inc
mov
das
shl
pushl
je
jnp
xchg
sti
push
int
or
pop
pop
mov
xor
jbe
xchg
mov
fwait
inc
or
inc
adc
jno
jb
adc
mov
sub
and
jb
fwait
outsl
dec
pop
daa
jmp
pop
popa
sub
adc
cld
push
dec
push
cld
xor
aas
mov
jns
repnz
cmp
pop
add
mov
or
and
sbb
pop
add
jmp
inc
lcall
loope
mov
inc
imul
pop
jbe
mov
rcl
xchg
inc
rolb
push
ljmp
cltd
pop
inc
cltd
xchg
out
xchg
add
adc
push
add
sbb
cmp
pop
jl
mov
imul
inc
pusha
pop
and
add
stc
rcll
jl
fcomip
imul
dec
movsb
adc
test
mov
sbb
mov
popa
adc
sub
out
lock
jne
jno
xor
push
xor
lret
mov
je
mov
into
dec
sub
cld
outsl
push
cmp
mov
fs
jb
rolb
dec
loop
stos
repnz
aaa
mov
jmp
xchg
xchg
outsl
repnz
pop
imul
call
lea
scas
clc
push
pop
lods
movsb
push
cs
jecxz
mov
and
cmp
push
dec
push
jnp
pushl
pusha
mov
or
adc
xor
mov
cli
aam
push
xchg
mov
cs
cmp
sar
and
inc
scas
xchg
jle
fs
cs
shlb
clc
decl
inc
arpl
nop
lcall
fwait
clc
out
repnz
lahf
call
add
jg
push
mov
loopne
sti
add
cmpsb
adc
jg
sbb
test
add
je
into
jle
adcb
pop
das
mov
xor
shl
jne
ja
pop
jbe
or
fcmovu
push
ljmp
add
cmpl
sbb
inc
in
scas
jp
filds
jns
sbb
pop
push
aam
stos
popf
lret
in
ret
lea
adc
or
lret
or
pxor
xchg
mov
scas
or
movsl
popf
aaa
insl
inc
jg
clc
ljmp
test
pop
pop
push
jae
pop
pop
ja
jb
push
push
idivb
mov
daa
stc
int
jmp
stc
ret
stos
mov
hlt
jg
cs
xchg
fs
mov
and
sbb
je
jecxz
pop
adc
jle
and
xchg
mov
push
jno
nop
xchg
loopne
mov
fwait
cmpsl
push
push
dec
movsl
out
ja
push
cs
loope
les
mov
adc
push
sub
xchg
inc
in
icebp
ja
pushl
pusha
inc
add
jo
mov
mov
dec
jg
pusha
stc
daa
cmp
jle
loop
sub
cmp
and
enter
jbe
xchg
and
popl
test
in
jp
out
ret
jl
adc
or
mov
add
sbb
outsb
add
mov
sarl
xchg
fbstp
ljmp
out
clc
sbb
mov
jp
or
leave
outsl
xchg
jl
cltd
ficoml
dec
add
mov
jae
xchg
hlt
sub
and
jg
pop
inc
data16
arpl
mov
xor
fdiv
aaa
fwait
cmpsl
jecxz
dec
jl
je
cmpxchg8b
jns
cld
jmp
push
xchg
hlt
jmp
pop
mov
imul
push
repnz
fwait
jo
int3
sub
push
jno
xor
push
fidivrs
mov
jle
orb
fwait
xor
sub
cmp
jge
push
sub
push
push
push
lcall
and
mov
aam
sahf
mov
in
insl
cld
outsl
dec
ret
sbb
imul
sub
inc
adc
out
aaa
scas
aaa
clc
sbb
arpl
aas
jmp
repnz
push
jne
fdivr
decl
into
je
xchg
inc
popa
ja
rcll
xchg
dec
repz
pop
jmp
mov
sbb
add
inc
pop
push
fs
mov
jne
add
push
mov
mov
dec
push
movsl
sub
push
in
hlt
push
fidivrs
dec
add
sub
sub
into
jo
mov
xor
add
pop
jmp
int
pop
out
push
outsl
jg
jae
xlat
in
jnp
mov
ja
sahf
pop
xchg
mov
sbb
repz
lds
cld
cvtdq2ps
cmpsl
aas
mov
push
or
push
mov
out
sub
int
outsl
push
jno
sub
or
dec
xor
aas
lods
cld
add
jge
adc
xchg
ljmp
gs
sar
push
push
jne
push
loopne,pn
pop
lcall
dec
inc
cmc
fs
movsl
push
adc
das
test
and
inc
inc
cwtl
mov
pop
mov
or
cs
jmp
mov
shll
dec
int
stos
dec
les
rorb
pushl
testb
inc
inc
ljmp
xchg
enter
jp
es
xor
mov
int3
xlat
jg
icebp
decl
arpl
arpl
aas
cld
xor
and
jo
pop
icebp
pushl
xchg
imul
dec
push
les
mov
mov
and
mov
lds
shll
vpcmpgtw
into
das
fists
imul
push
out
mov
inc
push
lcall
inc
incl
mov
sbb
dec
popa
push
jae
fisttps
sub
enter
xlat
addr16
repz
test
lds
inc
outsl
pop
and
add
cmpsb
js
pop
lock
fnstenv
icebp
pop
sbb
imul
mov
rolb
pusha
jns
xchg
xlat
xchg
aam
add
adcb
hlt
mov
inc
or
jmp
xchg
jecxz
lock
cld
inc
adc
and
in
cli
add
mov
sets
xchg
cmpsl
jae
fsubl
cmpsb
loope
das
mov
fisttps
sub
fistpl
cli
and
cltd
lods
or
mov
or
lcall
mov
fisubs
add
push
push
push
hlt
int
dec
int3
xchg
pop
jo
mov
adc
call
jg
call
mov
mov
dec
or
pop
mov
orl
mov
repnz
ficoml
cld
xchg
jg
outsl
jae
add
fisttps
jle
ret
roll
jl
data16
in
and
fcomip
or
out
jg
dec
jno
aam
negl
cmpsb
adc
jg
jge
pop
idivl
imul
and
in
movsl
push
or
gs
jle
in
cmp
jg
push
je
ret
xor
xlat
js
jns
pop
ret
in
adc
in
mov
hlt
pusha
ss
push
out
inc
add
xchg
push
aas
dec
enter
cmp
inc
jno
or
or
push
rcr
xor
sub
call
jae
add
icebp
stos
sbb
push
jne
dec
add
cwtl
mov
jne
adc
icebp
sbbb
jbe
pop
ljmp
mov
das
push
fnsave
ja
mov
cs
pop
cmpsb
or
dec
mov
push
scas
jae
jno
movl
xlat
push
mov
lock
dec
sahf
pop
lods
push
push
xchg
cmp
cmp
xor
dec
ficoms
lcall
std
pushl
sub
jp
mov
sub
xor
dec
imul
inc
pusha
lcall
dec
push
cmpsl
fwait
adcl
movsb
inc
es
pushl
adc
decl
pop
cs
jns
in
and
dec
mov
xchg
or
popa
pop
pusha
xor
outsl
loop
mov
xchg
sub
sbb
dec
push
cmpsl
js
int
pushl
stos
in
fsubs
stos
xchg
fnstcw
jns
cli
sbb
push
and
pop
sub
mulb
mov
inc
xchg
test
jnp
pop
pop
decl
jbe
push
inc
pusha
mov
push
inc
cltd
jae
or
jp
mov
inc
rolb
push
mov
xchg
xlat
cli
lock
jg
or
xchg
repz
arpl
cmp
jge
scas
stos
and
or
sub
and
push
test
dec
cld
ljmp
inc
inc
mov
xchg
movsl
jmp
xchg
loopnew
nop
lds
je
and
movl
mov
outsb
push
leave
adc
mov
je
jg
loope
enter
ja
adc
stos
mov
mov
insb
popa
add
push
adc
ds
xor
aaa
std
push
sub
imul
xchg
sbb
and
and
add
jmp
jp
imul
adc
rol
ret
sub
ja
jo
aad
movsl
in
inc
push
add
fwait
test
xor
push
xorl
icebp
shll
call
dec
pop
xchg
pop
jbe
adc
pop
cmp
mov
repnz
shll
jle
jg
dec
das
pushf
jmp
aam
push
js
lret
hlt
push
rolb
mov
xor
incl
mov
add
xor
push
sbb
cli
out
push
or
jae
dec
rclb
mov
lcall
cwtl
bound
or
jno
pop
mov
outsl
scas
push
inc
jo
mov
inc
jmp
pushf
decl
decb
je
outsl
ret
and
outsl
pushf
popf
adc
jle
rorl
mov
mov
iret
idivb
jae
cmp
inc
pop
mov
cmp
mov
jmp
mov
or
fmuls
inc
push
mov
mov
dec
bound
xchg
pop
out
lods
pop
call
dec
loopne
sbb
inc
or
insl
pop
sub
sbb
mov
call
cmp
mov
fidivrl
data16
and
inc
sbb
dec
out
mov
push
jge
orb
adc
dec
jge
insb
jnp
jns
out
pop
cld
decl
pop
pop
das
cmpl
pop
mov
cli
pop
jmp
movsl
inc
lds
orb
hlt
jle
insb
xlat
adc
adc
or
cmp
stos
cmp
mov
inc
add
cmp
push
mov
out
mov
inc
data16
mov
fidivs
clc
jne
pop
jo
sbb
mov
xor
dec
notl
das
push
mov
mov
and
pop
push
call
fs
es
je
push
outsb
mov
outsl
ja
fwait
pushf
pop
je
mov
call
pop
and
notb
push
xchg
mov
loopne
es
jp
call
dec
jl
into
pop
pop
sub
mov
arpl
push
push
xor
scas
adc
dec
mov
mov
jg
inc
or
dec
add
push
add
aam
jbe
fwait
mov
pushl
movsl
imul
jno
lods
movsb
dec
jo
add
or
push
icebp
inc
jle
pop
push
xchg
inc
push
xlat
xor
cmc
pushl
inc
jge
cmp
insl
pop
mov
jns
btr
cld
in
xchg
ret
cmp
push
loopne
xchg
cwtl
jno
fcmovu
jge
gs
and
popf
or
call
fistps
xchg
cmp
ds
iret
stc
inc
pusha
push
jge
xchg
inc
jmp
dec
insb
xorl
cmp
test
sar
fisttps
outsb
data16
sti
ljmp
xchg
out
push
fcmovnb
dec
enter
mov
dec
mov
and
es
pop
push
fs
or
inc
ljmp
inc
je
mov
mov
pop
and
xchg
lock
mov
push
fmulp
hlt
dec
inc
push
or
in
ret
push
imul
mov
push
jg
and
cli
lods
jo
inc
dec
daa
lds
gs
mov
xor
add
fs
pop
fisubs
decl
rclb
mov
andb
mov
xchg
mov
lock
add
lods
das
xor
out
sub
cmpsb
outsl
push
js
or
jb
cmp
push
push
sbb
inc
icebp
dec
movsl
mov
clc
pop
lret
push
icebp
add
dec
data16
xchg
or
pushf
cs
mov
fisttps
jae
mov
les
inc
push
loopne
outsl
adc
mov
fidivs
loope
popf
fs
and
in
lods
rorl
mov
in
in
fisubrs
sar
mov
fdivrs
out
sahf
je
jno
pusha
push
sbb
pop
jge
ljmp
cmpsl
inc
aas
ljmp
push
daa
mov
jns
xor
jecxz
push
out
shrl
xchg
xchg
push
stc
std
xor
je
adcb
incl
cld
jae
push
bt
push
and
gs
mov
xchg
jg
mov
aaa
jecxz
mov
lods
mov
pop
test
and
daa
mov
ja
mov
push
aam
mov
loop
std
push
xchg
push
push
dec
xlat
jae
popa
mov
icebp
dec
fisubs
insb
sub
xchg
mov
imul
sub
pusha
call
xchg
inc
mov
dec
rorl
dec
stos
mov
mov
int
mov
adc
sbb
gs
fisttps
xchg
inc
mov
push
cmpsb
sub
dec
mov
jl
push
lcall
in
icebp
iret
mov
lcall
jg
mov
jo
jg
ss
jbe
xchg
or
pop
adc
inc
cmp
cmp
inc
pop
sbb
gs
dec
adc
lcall
and
pop
pop
movsl
cld
insb
movsb
inc
and
sub
enter
icebp
and
mov
push
out
shlb
outsl
push
jg
call
mov
pop
push
push
xor
gs
test
sub
adc
mov
ss
stos
leave
mov
push
xor
rorl
lcall
mov
jno
popa
sub
sbb
push
jnp
inc
jo
insb
mov
das
cli
pop
xor
xor
mov
insb
jno
jl
iret
or
arpl
mov
imul
mov
push
cmpsl
test
mov
xchg
mov
ja
adc
push
fsts
daa
test
add
inc
push
mov
hlt
ja
insl
stc
push
lcall
sub
lock
decl
inc
fs
push
je
xchg
add
sbb
jg
lcall
cmp
jge
sbb
inc
insb
mov
pusha
add
loope
pop
push
jns
mov
call
jnp
inc
sub
rorl
add
cli
or
outsl
push
scas
xchg
xchg
and
outsl
inc
ja
ss
andl
out
ja
push
pop
subb
inc
jbe
xchg
aaa
lcall
lds
cltd
jecxz
push
scas
and
lcall
or
adc
mov
inc
jmp
jle
mov
lea
leave
xor
add
je
xor
nop
or
loope
dec
les
cli
sub
jl
pop
imul
je
scas
imul
cmpsb
fwait
out
lock
fisubl
clc
insb
xchg
push
jecxz
sub
icebp
pop
xchg
xchg
jmp
pop
rolb
push
test
adc
jecxz
push
cld
inc
sub
cmp
pop
and
decl
outsb
sbbb
cmp
test
loopne
inc
inc
and
call
jns
lea
add
gs
mov
push
int3
stc
add
incl
xchg
sbbl
cmp
fimuls
ljmp
add
cmp
xor
int
adc
and
add
jmp
scas
inc
cmp
sub
ja
dec
imul
repz
push
adc
dec
hlt
sbb
mov
fisubrs
sub
movsl
or
ret
inc
scas
jae
mov
ss
fistps
test
dec
cmpb
xor
das
dec
jno
jecxz
lcall
push
movsb
pop
push
jbe
mov
fsub
inc
aaa
push
sti
out
xor
mov
fsts
mov
in
inc
xor
sub
incl
je
movsb
mov
xlat
popa
cmp
jecxz
incl
xor
mov
inc
mulb
test
xor
mov
ja
mov
jbe
out
push
or
lcall
imul
pop
jne
xchg
adc
pop
add
mov
frndint
leave
push
pop
jl
or
jno
mov
ficomps
call
xor
inc
pusha
push
shl
sbb
daa
jbe
pop
or
add
jae
cwtl
cmp
push
jge
or
pop
or
push
add
pushl
push
xchg
je
sub
cmp
sbb
in
jmp
pushl
setle
fwait
jp
ret
rolb
mov
xchg
clc
inc
push
movsl
or
inc
mov
push
das
mov
std
fbld
dec
lret
clc
lcall
inc
dec
dec
scas
pop
add
ror
sbb
add
cmp
cmp
sbb
int
adc
clc
fwait
mov
add
daa
push
jl
add
or
sbb
outsl
mov
scas
sbb
test
rcll
xlat
out
jb
cld
jbe
sbb
dec
dec
outsb
rorb
lock
jmp
test
gs
test
shlb
sub
push
arpl
cmc
jne
filds
pop
sub
sbb
test
outsb
arpl
lahf
call
adc
out
ljmp
call
adc
mov
inc
mov
scas
arpl
lcall
jmp
mov
or
add
das
jb
gs
add
mov
not
arpl
enter
test
adc
ja
lret
incl
in
jle
pushl
data16
jbe
or
jmp
mov
mov
decl
push
mov
pop
fiadds
xchg
dec
cmc
jle
insl
push
aad
imul
icebp
das
adc
sbb
inc
inc
jge
idiv
aas
or
fldl
push
and
jmp
push
sbb
mov
js
or
dec
ret
lret
les
data16
clc
or
sub
repz
lods
adc
or
dec
jecxz
repnz
or
jno
jae,pn
mov
insl
fildl
ficoms
cmp
int
stc
ja
dec
jmp
and
push
jo
jo
push
mov
xor
sbb
popa
push
push
cmp
std
and
ret
lret
imul
aas
aam
dec
popf
xor
in
outsb
mov
pushw
fisubl
fwait
outsl
jmp
repz
pop
arpl
bound
mov
pop
xchg
push
and
and
dec
push
loopne
je
fcoml
clc
jg
pop
add
aad
insb
lea
add
jno
loopne
xchg
ficoms
decl
imul
inc
push
adc
daa
dec
ja
in
mov
fnstenv
mov
lea
mov
imul
sub
in
pop
and
cmp
dec
jnp
fs
mov
repz
dec
out
add
js
xor
lods
arpl
jp
push
lret
ds
pop
xchg
xchg
fwait
push
aaa
mull
push
push
push
push
jle
xchg
jno
push
jl
jg
repz
and
push
ss
adc
imul
orb
xor
xor
daa
enter
shlb
incl
cmp
js
add
addl
in
ljmp
shll
mov
cwtl
ljmp
decb
popa
push
nopl
jo
mov
dec
xchg
pop
rcr
imul
movb
xchg
xchg
and
dec
jnp
push
mov
imul
inc
cld
cmp
sbb
ljmp
fisttps
sbbb
movsl
inc
and
test
std
shrb
iret
sub
push
jmp
in
add
cs
out
lock
in
adc
subb
insb
scas
push
insb
and
dec
nop
sbb
push
mov
mov
mov
lea
int
imul
out
push
fstpt
mov
fnstsw
or
stos
and
sub
lea
jg
lock
pop
fcompl
or
pop
mov
aam
call
incl
fcompl
int3
or
pusha
xchg
call
in
jne
call
pop
mov
mov
inc
dec
in
xorb
xchg
in
dec
xor
daa
mov
mov
fldenv
pushf
in
add
mov
sub
cmp
mulb
shll
nopl
add
ret
cmp
negb
lock
sub
repnz
xor
push
out
cmp
decl
mov
push
sub
dec
inc
or
lret
mov
cli
ljmp
out
jae
nop
rolb
jno
mov
sbbb
pop
scas
jbe
clc
jmp
out
ja
mov
jns
fnop
cltd
push
test
mov
decl
push
nop
adc
mov
dec
cmpsb
imulb
xchg
notl
icebp
jbe
mov
dec
ja
int
fdivr
test
out
leave
add
loope
mov
jnp
xchg
out
xchg
xor
cmpsb
les
fdivrp
mov
sub
loope
cltd
mov
in
js
xchg
imul
in
sahf
mov
or
ljmp
dec
movsl
rorl
mov
cmc
or
test
jg
popa
mov
rcr
shr
out
rorl
mov
ljmp
jnp
add
movsb
loop
jbe
insb
ret
xor
sar
ljmp
xchg
cmp
out
movsb
pop
cs
and
ds
inc
sub
ror
push
mov
push
clc
push
sahf
outsl
lret
mov
mov
add
ss
or
adc
addr16
push
jmp
cmp
out
adc
sbb
push
je
mov
es
arpl
or
fmulp
loope
imul
filds
dec
out
dec
xor
lock
pop
icebp
fsubs
in
mov
in
and
lods
lcall
pop
jl
jo
jo
push
push
sub
pop
mov
dec
outsl
or
test
xchg
push
ss
or
xchg
mov
mov
mov
dec
inc
and
push
mov
int3
addb
mov
cmp
jge
dec
loopne
outsb
mov
scas
inc
add
mov
adc
push
push
outsb
cmp
push
and
jmp
push
jge
jge
jmp
rsqrtps
pop
out
out
idivl
sti
int
test
mov
adc
decl
lods
pop
xchg
mov
out
sbb
loop
mov
leave
popl
std
cwtl
and
das
and
inc
imul
push
sbb
ja
sti
pushf
adc
fsubrp
and
mov
cs
je
imul
mov
test
icebp
ret
call
lahf
cmc
jg
and
pusha
xchg
mov
jg
dec
es
fstp
stc
loope
mov
repnz
ljmp
scas
sub
test
xlat
mov
adc
pushf
daa
movsl
jge
popa
push
sti
hlt
lcall
pop
pusha
or
faddl
sbb
cwtl
jns
ret
scas
aas
out
je
movsl
jp
cwtl
ret
fdiv
clc
or
sti
iret
xlat
rolb
into
movsl
pop
mov
push
mov
decl
mov
cmpb
insb
loop
adcl
aaa
test
pop
dec
das
ljmp
nop
xor
insb
pop
lock
decl
sub
fwait
lods
fwait
hlt
mov
add
jb
push
incl
jb
add
mov
pop
or
test
pmulhw
call
popf
in
repnz
xor
pushl
xchg
xor
inc
jbe
xor
lcall
jge
xchg
sti
xchg
mov
mov
sub
std
add
inc
outsb
jecxz
jge
fisubrs
sub
out
cmc
jbe
xlat
jecxz
lret
or
dec
es
and
push
push
jecxz
jg
jmp
jl
fwait
icebp
sbb
xor
ljmp
mov
jbe
xchg
add
push
push
jbe
ljmp
pop
cs
int3
sar
mov
stos
xlat
push
ljmp
cmpsb
fwait
sarb
or
xchg
xchg
mov
aad
push
pushl
jmp
sub
dec
mov
jmp
push
ret
decl
sub
mov
push
rcll
and
jne
bound
mov
mov
je
add
mov
jno
mov
sub
jne
fnstcw
decl
adc
push
loope
pop
or
fwait
rcl
push
sub
jmp
test
lock
mov
pop
in
insb
lea
shrb
xchg
sub
pop
cli
ljmp
mov
or
fnsave
mov
sti
push
pop
jmp
insl
cli
ljmp
add
jle
aad
js
repnz
mov
cmp
mov
outsb
in
loop
loope
sub
fcmove
xor
mov
ljmp
cs
xor
in
into
aad
lcall
pop
ror
incl
pop
into
mov
fistpl
or
pop
dec
xor
ja
in
xchg
fbld
fiaddl
mov
imul
mov
inc
add
mov
fwait
jno
fstpl
cltd
pushl
dec
decl
mov
scas
and
jns
mov
push
jb
aam
inc
or
ljmp
lret
pop
jnp
sub
inc
daa
jns
add
fildll
inc
pop
dec
mov
inc
dec
fcmove
sahf
xor
loop
es
lods
int3
ja
cs
lret
xchg
stc
push
push
mov
aas
leave
pop
ret
pop
call
movsl
cli
push
push
or
stos
jge
movsb
ja
movsb
dec
lods
ficomps
jg
pusha
xor
jle
nop
sbb
jmp
fmul
push
adcb
fimuls
push
stc
inc
aaa
roll
xor
addl
mov
movsl
popf
xchg
insb
sbbb
jg
xlat
scas
dec
xor
subb
lret
clc
add
lds
ror
fcomps
pushl
ret
vpsubd
in
fs
out
mov
cltd
jp
pop
mov
loop
adcl
loop
ljmp
fnstcw
xchg
negl
mov
mov
or
mov
add
jno
call
pop
and
test
cltd
aas
jp
mov
jge
jg
lret
mov
mov
jo
xorl
popa
sub
outsb
negb
cli
push
das
fisubs
pop
mov
mov
repnz
push
dec
ljmp
inc
mov
push
adc
cmp
jno
sar
jbe
mov
jle
aad
data16
mov
lret
movsb
push
pop
pop
es
or
popf
dec
mov
jle
repnz
adc
insl
nop
jle
movsb
cmp
sahf
pop
push
mov
imul
call
cld
es
push
cli
shrb
push
push
jmp
cmpsl
inc
mov
push
jl
pop
std
ja
ret
test
sub
shlb
dec
call
add
es
notb
js
fwait
jle
pop
xor
lret
movsl
and
jg
fstpl
cs
xor
jae
movsl
clc
push
cld
mov
push
cltd
push
xchg
mov
aas
test
push
andb
pop
and
ljmp
mov
jns
aad
outsl
xchg
int3
or
fiaddl
jmp
cmp
nop
movl
mov
lret
mov
mov
scas
icebp
js
mov
dec
push
scas
fld
jmp
rol
jg
push
outsb
inc
pop
cmc
cmp
xor
mov
inc
ja
clc
cs
add
lods
and
add
shl
std
faddp
fildl
jg
outsl
imul
jno
cmp
sbb
jo
stc
popl
xorb
out
adc
lahf
jmp
jb
sub
das
rcr
lcall
mov
pop
dec
mov
loopne
jecxz
cmp
pop
jmp
push
jmp
loopne
popa
iret
ljmp
loopne
iret
pushf
add
jo
jg
call
scas
js
dec
ds
xchg
jge
push
pop
mov
push
lcall
lods
fldl
das
push
xchg
add
imul
lahf
mov
and
das
xchg
add
ss
cmp
mov
into
cld
mov
lock
jge
xor
sbb
mov
orl
shr
jnp
jg
jg
out
movsb
dec
mov
jno
mov
push
xchg
iret
push
adc
inc
call
pop
mov
mov
rorb
push
scas
sbb
or
mov
mov
decl
ss
mov
mov
in
in
pop
ja
xchg
mov
sar
fwait
in
push
and
mov
fs
loope
pop
incb
mov
nop
jg
or
scas
mov
pop
pop
jge
xchg
repz
int
test
rol
into
out
pop
xlat
lcall
out
mov
jge
in
mov
cmp
jge
rcrb
outsb
dec
fs
sub
fnstenv
outsl
or
xchg
pop
mov
andb
scas
clc
xchg
dec
and
dec
pop
fdivs
mov
std
pushf
rcll
mov
sarb
aas
xor
call
out
out
icebp
or
adc
into
xchg
cmp
mov
call
sub
xchg
cs
xor
lods
or
icebp
cmp
sahf
add
xchg
xchg
loope
cli
jg
fcompl
lahf
test
push
cs
decl
sub
sarl
xchg
call
xor
inc
and
ja
push
popf
test
mov
arpl
mov
scas
cli
ljmp
mull
cld
in
mov
fsubl
js
sbb
call
push
and
cmp
inc
mov
icebp
jbe
clc
lea
rclb
mov
lcall
and
pusha
lds
pop
imul
mov
call
cli
ljmp
in
sbbl
mov
hlt
in
jmp
jmp
mov
rorb
push
shlb
loopne
sub
enter
mov
idivl
adc
sbb
ja
jnp
sti
inc
mov
push
pushl
sub
xchg
pop
mov
pop
jg
ret
aaa
incb
movsl
push
popf
mov
fnstcw
bound
cmpsb
push
adc
and
in
mov
inc
ljmp
sub
sub
je
cltd
fistps
inc
mov
ret
lret
int3
xchg
bnd
fiaddl
mov
add
sbb
mov
sbb
test
dec
dec
add
adc
scas
and
mov
incl
inc
mov
push
push
sub
push
xchg
jp
push
call
cli
cmp
add
out
jne
aas
movsb
mov
inc
xchg
icebp
mov
xor
inc
test
loopne
jmp
push
jmp
je
mov
xor
test
sahf
fdivr
je
call
stc
jg
adc
xchg
pop
test
or
imul
or
adc
jb
in
addb
dec
inc
call
ficompl
scas
jge
ljmp
jg
push
mov
xor
in
mov
fwait
in
loop
out
mov
addl
fistpl
dec
fwait
xchg
pop
enter
add
xchg
sar
ljmp
imul
xchg
pop
and
insb
pusha
insl
mov
mov
arpl
cmpsb
jp
aas
push
adc
and
push
test
sbb
cld
stos
cmp
adc
jmp
outsl
clc
mov
ja
ret
cmp
sbb
push
jne
lds
enter
xchg
cmp
mulb
pop
int3
cmp
lock
aam
out
mov
push
xor
shlb
andl
pop
lahf
xor
pushf
push
pop
add
cmp
loop
cli
pop
xchg
fcompl
incl
and
mulb
sbbl
lcall
out
push
cwtl
test
and
or
adc
inc
pop
cwtl
fstl
loopne
shrb
in
hlt
inc
out
lret
hlt
xchg
imul
jmp
and
inc
add
mov
rcrb
push
inc
xchg
aad
sub
lahf
cmpsb
je
jg
decl
in
lods
call
call
add
fisttps
jns
in
mov
mov
pop
xor
xor
push
xchg
iret
shl
in
cli
mov
jo
mov
aad
fiadds
push
out
enter
fisttpll
dec
ss
ljmp
cltd
xchg
and
xchg
les
test
cwtl
push
in
leave
fldt
jecxz
add
and
cmpsl
xor
incl
push
scas
mov
ss
adcb
je
push
pop
cmpsb
dec
mov
jb
cmc
sbb
sbb
stc
inc
xor
mov
jg
rcl
mov
sahf
pop
cmpsl
out
xchg
adc
xor
cmpsb
mov
call
lods
xor
jns
ret
mov
loope
adc
decl
mov
inc
jmp
cwtl
imul
xchg
jg
aad
push
shl
sar
mov
rcl
jle
jo
shlb
pushl
mov
jge
jge
jp
int3
mov
dec
xchg
fiadds
mov
outsl
push
aaa
es
cld
cmpsb
dec
fdivr
jb
fwait
jle
enter
mov
sub
inc
add
cmp
push
mov
js
hlt
jo
imul
jmp
mov
ljmp
inc
pop
sbb
out
out
fimuls
sbb
sub
add
or
push
adc
pavgb
call
xor
dec
mov
jno
int
ss
mov
jmp
jle
in
inc
test
mov
shlb
shll
scas
mov
jle
add
arpl
ljmp
mov
fcomi
push
in
fldenv
jle
cmpsb
ljmp
add
loopne
pop
xor
fsubl
push
fistps
in
insb
dec
jmp
dec
lds
jo
nop
popl
fidivl
inc
lahf
add
rolb
lock
out
push
mov
popf
test
jg
xchg
mov
push
cmp
push
add
mov
decl
or
test
mov
mov
les
inc
cmpl
inc
or
iret
jecxz
push
jo
lcall
test
or
sbb
stc
fmulp
sub
nop
or
shrb
loop
inc
xor
jp
loopne
mov
pushf
pop
mov
push
mov
leave
jns
fcomip
fucomip
mov
xchg
popa
fs
mov
sub
lods
dec
add
aam
fcomip
or
adc
fdiv
sbbl
decl
or
sub
cwtl
popa
outsl
cmp
pop
jg
imul
les
push
adc
xlat
add
add
cmp
cmp
inc
adc
iret
dec
xor
jb
dec
dec
add
xchg
sub
fwait
daa
pushf
in
loope
push
mov
mov
xchg
loop
jns
mov
cmp
jge
push
lcall
in
ret
call
cmovb
sub
jne
cmp
fisubl
in
aas
movsl
into
jle
hlt
push
loope
incl
out
xchg
inc
cmp
not
imul
hlt
es
xor
mov
loop
lods
mov
out
stc
fnop
xchg
les
jo
cld
mov
jnp
ret
mov
lea
jns
dec
add
xorl
das
xchg
or
neg
mov
push
aas
jl
pop
sbb
jg
lcall
repnz
mov
stos
push
sub
jno
jnp
pop
test
sbb
jmp
test
xchg
cmp
adc
push
testb
mov
push
dec
popa
dec
pop
shll
popf
movsl
push
movsl
jno
add
ss
xor
pop
add
mov
call
insb
stos
push
sar
test
ret
inc
jge
push
mov
jmp
ljmp
or
fisubl
rcll
je
mov
fbld
in
mov
ret
mov
addl
inc
sbb
test
ljmp
mov
push
xchg
lds
test
lret
mov
test
dec
xchg
inc
sub
movsl
pop
push
jge
clc
mov
jno
std
decl
add
mov
jno
mov
popl
shll
decl
pop
push
ficoml
push
faddl
sbbl
inc
ret
js
cmp
stc
jmp
scas
jmp
xchg
inc
and
mov
in
ljmp
push
mov
fwait
into
call
mov
stos
icebp
std
mov
jno,pt
lcall
cmp
or
fcompl
adc
filds
dec
jp
test
mov
mov
mov
mov
sbb
out
add
add
mov
dec
dec
stc
xchg
push
xchg
xchg
cmp
ja
push
aaa
sbb
jg
pushf
xor
out
lcall
push
push
pop
lret
pop
test
scas
lock
in
out
fadd
loop
sbb
cld
out
lret
jmp
loopne
std
mov
xchg
movl
mov
mov
jne
fcomip
decl
cmpb
adc
sub
add
push
pop
lock
mov
lea
inc
lcall
mov
push
push
fildl
mov
mov
adc
incl
cmp
ljmp
pop
test
mov
mov
int3
loopne
pop
or
mov
pop
add
fwait
add
inc
or
ret
sti
mov
out
mov
pop
sbb
in
in
push
jmp
mov
jno
out
imul
cli
dec
adc
jns
push
pop
and
lcall
out
seto
fidivl
mov
push
fiadds
lods
testb
mov
jo
xchg
lcall
jmp
jbe
pop
int3
ror
mov
rolb
out
nop
and
repz
inc
push
fimull
sub
mov
mov
mov
addr16
inc
lock
mov
sub
jecxz
add
outsb
pop
add
incl
imul
ficoms
leave
fcoms
sbb
or
sub
popa
xchg
mov
out
cli
iret
cld
lret
scas
mov
fcmovu
lds
inc
fstcw
cld
cwtl
sub
aas
pop
adc
pop
jle
aam
dec
pop
jg
fisubrs
pop
imul
and
adc
imul
scas
mov
sub
push
adc
sub
arpl
and
ret
cmp
cmpsl
bnd
rorb
clc
xchg
mov
loop
dec
ljmp
pop
inc
push
cld
xchg
cld
out
mov
inc
pop
add
cli
sub
push
or
dec
jp
aad
decl
movsl
mov
out
pop
jge
push
xor
add
cmpsb
popa
mov
mov
jmp
mov
mov
inc
sbb
test
fmuls
decl
or
jbe
inc
push
fbstp
pop
dec
scas
and
fcomip
pushl
and
push
stos
jmp
and
test
fwait
adc
rolb
xor
je
into
loopne
jno
in
loope
and
jo
mov
sub
flds
mov
not
push
fdivrs
and
mov
ljmp
icebp
leave
jp
sbbl
subb
ljmp
ficoml
aas
pop
adc
jle
lret
mov
jno
sub
mov
aaa
movsl
sbb
test
jmp
mov
in
jne
mov
add
outsl
outsl
xchg
roll
and
push
xor
sub
pushf
lock
lcall
shl
int3
cmp
or
lea
mov
imul
jns
shl
mov
or
in
mov
lock
jae
xor
out
xor
mov
clc
ja
clc
loopne
or
mov
test
lret
jae
cmp
jmp
push
in
push
incl
fs
loope
add
fwait
push
in
ficomps
sub
mov
add
and
pop
mov
pop
jmp
incl
push
jcxz
test
popf
int3
mov
and
loop
scas
cltd
push
cli
adc
jg
clc
cmp
mov
cli
cmp
push
icebp
jg
das
incw
fisubrl
lods
in
daa
mov
jg
adc
push
popf
pop
or
dec
and
out
mov
enter
dec
or
push
insb
mov
call
out
jno
iret
jmp
aad
scas
mov
rclb
lret
push
sub
lahf
jg
dec
in
push
fwait
rcll
sahf
cmpb
push
sub
cli
jle
push
mov
ljmp
outsl
sub
aas
orl
mov
jge
ret
sahf
inc
test
jno
call
jne
test
or
mov
ss
cmpsl
pop
js
add
insb
ror
cmp
sub
clc
decl
mov
into
push
jns
sub
out
pop
or
lock
scas
cmp
jecxz
ret
inc
scas
fsubrs
scas
movsb
decl
mov
jns
mov
fsubl
dec
imul
push
pop
lret
popf
insb
xchg
xlat
jg
scas
orl
ljmp
xchg
in
gs
div
sbb
aad
outsl
les
and
or
mov
add
mov
jnp
repnz
sbbl
addb
xor
lcall
fdivr
or
js
loopne
mov
push
cs
out
adc
push
push
fdivrp
lcall
bound
xchg
testl
push
mov
adc
mov
nop
insl
and
or
lods
mov
cld
ret
mov
push
mov
ficoms
lcall
sub
cmp
mov
sub
push
pop
mov
sub
mov
mov
cmp
cltd
and
dec
mov
jae
xchg
ljmp
stos
push
cmpb
push
xchg
js
les
push
cld
std
out
push
lock
add
pushf
xchg
adc
fdivrl
adc
jle
pop
pop
pop
dec
adc
shl
inc
outsb
fst
push
push
mov
scas
inc
scas
jbe
in
lds
add
cmp
and
sarl
fists
adcl
lcall
and
notb
xlat
and
inc
movsl
xchg
pop
sub
incl
loop
rclb
lcall
icebp
mov
lods
fisubrs
mov
pop
insb
jle
jmp
sti
stc
mov
gs
popf
dec
enter
mov
mov
pop
mov
ljmp
mov
dec
stos
ficomps
mov
jg
and
xchg
or
loope
push
js
lret
out
mov
cld
mov
rol
pop
push
in
in
add
ficomps
push
jae
incl
xor
lcall
add
movsb
inc
cmpsb
mov
xchg
add
xchg
or
sar
call
inc
les
fisttpl
and
xchg
jbe
sbb
and
ret
mov
pushf
mov
inc
pop
inc
inc
push
mov
xchg
cmpsl
test
push
das
inc
and
fisttps
dec
ret
dec
aam
mov
xor
push
inc
dec
push
cli
fsts
ficoml
push
fcomi
inc
cmp
sarb
in
jne
pop
jns
iret
or
sbb
js
pop
test
add
rclb
ljmp
std
aad
jmp
sbb
sti
rorb
rcr
mov
test
decl
loopne
mov
cltd
in
pop
aad
mov
in
pop
push
stos
xor
jg
lcall
sbb
push
ret
idiv
addr16
cmp
pop
clc
dec
xchg
mov
dec
jmp
mul
jne
push
xchg
xchg
ljmp
pop
inc
xchg
icebp
cmp
cld
pop
jb
jmp
lds
cs
cltd
es
in
test
div
cs
int
jecxz
mov
das
fs
mov
test
cmp
data16
pushl
pushl
fst
inc
leave
inc
mov
out
std
aad
jg
sbb
inc
dec
stc
ficompl
loopne
sbb
mov
aaa
adc
sbb
gs
mov
add
adc
dec
clc
pop
push
sub
and
add
movhlps
push
ret
mov
mov
add
les
cli
cmp
sbb
lret
jge
or
jbe
clc
inc
cld
popa
pop
push
test
int
rcll
sar
jnp
lock
push
push
out
ss
sar
ja
cmp
or
inc
push
mov
jmp
xchg
jae
inc
loope
adcb
and
push
push
out
mov
cmpsb
and
fidivl
sub
pop
movb
jnp
fdivl
or
mov
bound
and
call
pop
jae
lret
movsb
or
sbb
mov
dec
popf
mov
or
inc
mov
das
cs
push
sbbb
shl
mov
mov
outsl
add
fldl
psubd
jg
cmp
scas
mov
jnp
popf
ret
rol
in
enter
inc
mov
pop
or
jge
cld
push
leave
mov
test
das
lock
scas
adc
ja
jge
jo
ds
sub
mov
add
or
dec
loope
imul
xlat
jne
xchg
insl
insb
xor
call
cld
fbstp
shll
in
xor
or
les
cmp
decl
into
data16
xor
fldt
jne
test
or
in
lods
pusha
icebp
out
outsb
negb
call
movsb
mov
js
adc
in
mov
data16
ljmp
mov
and
es
in
fcmovnb
pushw
cmp
mov
mov
in
fsubrp
sbb
cmc
leave
xchg
pop
js
jmp
pop
movsl
fisttpll
jne
leave
jbe
adc
fcoms
cmp
jb
push
xor
cli
das
js
cli
pop
mov
cs
xorb
loopne
or
in
mov
cmp
ret
adc
lahf
mov
cltd
add
and
mov
sarb
clc
adcl
mov
pushl
adc
xchg
add
int3
jne
fs
decl
leave
leave
mov
daa
push
aad
sbb
daa
push
jnp
sbb
ja
mov
addl
rcl
je
out
jmp
sub
xchg
xorb
jle
rcll
clc
lahf
fcomip
shlb
popf
mov
loope
cmc
scas
dec
jnp
pop
daa
jl
je
ret
xchg
test
and
fcoms
dec
inc
int
lcall
push
inc
push
loop
xor
or
int3
pop
loopne
add
js
fisttpll
cmp
fwait
movsl
push
mov
lods
arpl
out
jge
sub
shrb
cld
jmp
jns
inc
push
mov
rclb
pusha
mov
push
das
jp
and
jg
int3
inc
test
mov
mov
xorb
idiv
add
scas
lods
mov
pop
scas
jae
mov
xchg
shrb
inc
xor
subb
es
add
add
mov
pusha
add
push
push
addr16
lock
push
mov
dec
out
bound
push
sahf
clc
push
add
ja
int3
es
out
lret
jns
shll
mov
jge
lcall
loop
int3
mov
jo
or
insb
fwait
push
xor
adc
inc
jge
popa
mov
jnp
pop
pop
lcall
js
cltd
mov
lahf
mov
cli
mov
lea
hlt
or
or
shr
jl
sbb
lret
adc
adcl
adc
ret
sub
iret
aad
xchg
insb
mov
jg
decl
ljmp
mov
and
orl
add
in
jg
adc
push
sub
mov
fucom
aas
loopne
jo
mov
out
add
lahf
mov
hlt
jmp
xchg
pop
into
mov
push
sarb
xchg
lea
pushl
or
lret
pop
dec
dec
popa
test
or
mov
repnz
mov
sarb
xor
ljmp
mov
mov
adc
pop
scas
incl
pop
popa
mov
jne
addb
inc
mov
clc
icebp
mov
push
adc
shl
icebp
mov
jle
pop
jo
cmp
lcall
cli
es
xchg
iret
in
xlat
dec
dec
xchg
shlb
pushl
dec
sub
lretw
adc
pop
outsb
xchg
inc
mov
xchg
out
incl
adc
mov
add
insl
cmp
inc
loopne
xchg
clc
pop
dec
jno
pop
mov
mov
xchg
imul
jl
adc
pop
xchg
out
aam
xchg
pushf
push
cs
mov
sub
mov
cmpsb
xorps
clc
test
out
cmpsb
sub
fiadds
lret
push
lcall
add
cmp
shrb
cmp
sub
lds
lods
add
shll
loope
aam
mov
mull
xchg
push
and
jge
push
or
movsb
lock
and
mov
mov
in
push
popa
out
movsb
es
xor
movsb
loope
cmpsb
jecxz
aad
push
adc
daa
xor
test
or
sbb
pop
push
push
jne
lahf
jne
xchg
sbb
andb
std
jg
cwtl
cmp
push
jge
mov
lret
cli
movnti
jb
mov
bound
or
ss
adc
push
das
or
mov
xor
push
pop
and
mov
mov
pop
das
add
inc
mov
inc
pop
mov
inc
jg
clc
out
and
ret
pop
add
xchg
push
pushl
inc
and
dec
pop
mov
scas
mov
push
and
jmp
mov
sub
es
sbb
mov
fucom
enter
mov
cld
movsb
sahf
xor
push
jns
in
and
cltd
or
shll
ljmp
popa
popf
add
je
mov
les
ja
clc
mov
sbb
test
inc
pop
sub
push
and
aaa
std
fcomip
jae
rorl
fwait
push
sbb
outsl
mov
jmp
jg
mov
fildl
or
nop
jle
loop
iret
push
fsubl
xchg
jae
movsl
jle
das
jns
and
aas
lock
and
xchg
xlat
into
adc
mov
fcmovnb
es
in
xchg
pop
dec
loopne
daa
and
jmp
push
add
jl
int3
mov
or
imul
negl
cmp
sbb
in
xor
sahf
icebp
or
inc
xchg
sbb
pushl
dec
mov
leave
sti
stc
mov
mov
pop
out
xor
pushf
sti
mov
dec
push
add
mov
scas
filds
leave
xchg
push
cwtl
cs
imul
and
daa
cmp
adc
pushl
jge
roll
sbb
mov
rolb
sub
fxch
je
or
inc
out
in
addr16
es
incl
mov
es
sbb
sub
xchg
mov
sub
mov
push
jg
jp
repnz
inc
cld
jg
jbe
or
orb
fsubs
pop
xchg
lea
sub
inc
mov
std
add
pop
jb
add
call
in
pop
mov
movsb
mov
adc
xor
cmpsb
add
pop
cmp
jmp
ljmp
inc
fstpl
jbe
fs
rclb
pop
js
mov
xor
and
clc
loop,pn
mov
or
pop
negb
jmp
lcall
add
divl
mov
in
aad
pusha
jb
fistpl
clc
incl
cmpsb
jne
adc
jecxz
popf
fcompl
jnp
add
data16
lcall
aad
jne
jmp
cmpsb
jle
rcll
mov
icebp
int3
sub
add
fs
push
and
adc
or
mov
decl
cmp
repnz
push
mov
fdivrs
and
and
and
pushl
fcmovnb
sub
or
daa
xchg
sbbb
jle
jns
and
lcall
pop
inc
rol
jnp
jge
icebp
shrb
jecxz,pn
aas
adc
push
sbb
jmp
xor
mov
mov
jecxz
mov
ljmp
mov
shll
fidivrs
cs
lods
popa
notl
sbb
dec
inc
ret
adc
push
cmp
fcomip
cmpl
mov
cmp
cli
push
jmp
dec
std
xchg
andl
pop
and
mov
das
jl
lcall
cmp
add
ss
push
xchg
jno
in
dec
pusha
cli
aaa
adc
mov
lret
or
subl
scas
andb
out
out
into
cmpsl
pop
push
mov
jbe
dec
pop
adc
pop
mov
adc
incl
and
sub
jnp
jae
clc
cmp
out
mov
xlat
loope
cmp
iret
push
std
lock
sub
jnp
sbb
fiaddl
cmp
jg
leave
in
fwait
bound
addl
inc
leave
jmp
cld
in
cld
hlt
std
lea
push
add
mov
or
out
int
jno
jl
fisttpl
or
lcall
dec
add
pushf
imul
mov
mov
ret
int3
or
cli
outsb
xlat
sti
ret
fwait
push
in
push
int3
mov
jo
mov
xor
test
or
sub
cld
jg
mov
popa
std
test
fisubs
sahf
add
pop
dec
ret
add
lret
push
add
cltd
mov
push
mov
pop
jmp
ret
adc
dec
les
fmulp
call
adc
jbe
xchg
ret
out
decl
mov
jns
icebp
jbe
xlat
ljmp
cmpb
pop
push
stc
cli
xor
fldl
pushl
shlb
add
cli
aam
sub
ljmp
pop
push
xchg
push
scas
pop
scas
or
mov
cmpsb
fcoml
pop
pop
repnz
add
out
jp
lock
xor
in
xchg
out
mov
jg
mov
inc
or
jp
decb
jecxz
adc
aad
mov
daa
mov
js
push
sbb
mov
add
hlt
aaa
lcall
mov
cmpsl
jle
cs
notl
add
rolb
add
fidivs
lret
sbb
outsb
inc
ljmp
loope
inc
xchg
inc
lret
lret
loope
cmp
jp
lret
rol
cmp
rclb
movsb
sub
or
ret
jmp
mov
fcoml
lock
movsb
cs
iret
lock
inc
dec
into
fsubl
sbb
or
or
jmp
inc
pop
aas
lock
jge
cmp
mov
cltd
lret
sbb
ror
cmp
test
sub
jno
fsts
decl
mov
in
cmpsl
mov
fdivs
jo
testb
jmp
or
addl
xchg
cld
cmp
movsb
movb
jmp
sub
pushl
data16
xchg
pusha
test
int
cmpsl
jo
inc
mov
repz
ja
ret
test
xchg
lds
mov
inc
pop
lcall
or
dec
pop
icebp
js
xor
sbb
call
lcall
scas
mov
stc
fadd
sti
mov
or
jle
call
cli
divl
fsts
pop
das
cmp
rcll
push
icebp
mov
adc
flds
mov
lods
push
dec
cld
sbb
mov
adc
in
aaa
push
mov
cmpb
pushl
das
xor
lea
pop
fistps
sbb
mov
aaa
std
call
jle
push
aaa
sub
xchg
pushf
ret
aas
xor
add
shlb
push
incl
in
adc
inc
lret
inc
lea
in
inc
and
lret
xchg
lds
inc
out
mov
mov
stos
ds
jne
subl
in
dec
scas
popa
pop
push
ljmp
lcall
aam
push
rorl
or
ret
xchg
inc
data16
repnz
dec
sbb
pop
pop
mov
les
imul
fcmovu
ja
cmpsb
mov
pop
std
test
adc
sti
addr16
lret
dec
sub
cmp
push
mov
push
inc
jmp
push
adc
jb
inc
ljmp
out
lcall
sub
push
xchg
pop
mov
out
mov
xchg
and
in
pop
mov
jnp
sbb
mov
out
sahf
js
add
ljmp
cmp
xchg
roll
xor
jns
mov
cs
ss
outsb
or
pop
clc
aaa
fldt
lcall
mov
add
mov
add
test
dec
adc
adc
hlt
xor
stc
lcall
or
rorb
cltd
cmp
inc
push
mov
pop
inc
cmp
xchg
sbb
outsl
pop
negb
lret
fcompl
test
mov
adc
xchg
dec
xor
xchg
js
addb
inc
scas
dec
pop
fimuls
lcall
adc
fsubrl
outsb
cld
pop
lahf
ficoms
daa
scas
mov
scas
cmp
je
jmp
push
cmp
xor
loop
inc
and
popa
xchg
push
es
add
mov
dec
inc
pop
loop
ret
mov
dec
add
loopne
jnp
mov
call
jo
push
sub
and
ficomps
pop
add
hlt
sub
scas
and
push
invd
mov
jp
dec
sbb
jo
jp
push
ljmp
and
jbe
push
adc
and
pushl
mov
mov
sub
jle
mov
sub
jmp
sub
mov
shlb
mov
push
aaa
daa
sarb
ja
or
shll
xchg
push
movsl
addb
push
pusha
les
es
outsl
mov
loop
popw
cli
mov
inc
add
mov
insl
loopne
jo
inc
outsl
stc
aaa
loop
inc
jecxz
xchg
cmp
inc
and
es
inc
jns
out
ljmp
out
jge
mov
mov
xor
sbb
and
sub
hlt
mov
testb
pop
xor
lcall
jmp
ljmp
shlb
ljmp
xlat
mov
aam
cs
rcrb
dec
inc
loope
mov
lret
es
xchg
adc
xor
or
mov
mov
fnstsw
jp
sbb
fdivs
mov
scas
mov
mov
mov
bound
dec
pushf
jge
mov
adc
mov
jg
fldt
mov
jb
xor
cmc
shlb
fwait
adc
jno
push
inc
adc
inc
filds
loope
mov
jecxz
adc
inc
cld
cmpsb
adc
jp
mov
fisubrs
test
inc
mov
lds
fstpt
jle
push
imul
jnp
sbb
jg
jl
adc
mov
stc
dec
xor
mov
in
shll
jns
cs
cld
jmp
xchg
push
jge
mov
mov
data16
push
sar
dec
mov
cmpsb
jmp
xlat
mov
adc
out
cs
pop
sbb
call
mov
adc
pop
xchg
jno
jb
adc
enter
xor
sub
jmp
dec
jmp
xlat
dec
push
cmp
cltd
loop
dec
js
inc
add
adc
mov
enter
jg
jnp
out
jmp
ror
mov
pop
or
scas
xchg
mov
test
inc
sbbl
pop
ja
pop
scas
clc
xchg
call
dec
mov
push
push
mov
mov
ret
out
push
test
mov
std
ja
mov
inc
xor
cwtl
inc
dec
int
push
lock
cmp
pop
test
jnp
clc
mov
xchg
outsl
push
mov
dec
push
test
xchg
lea
xor
in
mov
insb
adc
outsl
mov
lcall
sarb
push
jge
lahf
lods
push
xorl
call
xchg
cld
mov
mov
inc
mov
dec
and
sub
push
push
jp
sub
out
in
or
inc
xor
data16
mov
scas
decl
aaa
xchg
std
inc
sahf
pop
pop
ret
inc
sbb
mov
and
gs
jne
ret
jg
sbb
lcall
pop
xchg
xchg
or
repnz
pop
mov
fwait
hlt
pushl
inc
xchg
xchg
dec
cmp
push
or
jmp
push
out
cld
cmpsl
popa
dec
cmpsb
loope
stos
xorl
adc
hlt
jg
loopne
push
popa
or
dec
push
sbb
into
push
xchg
clc
jmp
clc
sbb
push
sahf
movlps
ja
in
push
pop
adcb
pop
and
mov
adc
cwtl
into
push
adc
sti
shrb
mov
aas
mov
jmp
data16
pop
push
mov
adc
cmp
push
mov
nop
ja
xchg
sbb
pop
gs
adc
nop
pop
add
mov
ja
jg
lcall
fwait
into
pushf
xchg
test
inc
inc
sub
negl
add
call
and
xchg
mov
int
in
pop
or
call
sti
pop
adcl
xchg
push
mov
jmp
dec
movsl
dec
es
cmp
mov
jb
mov
scas
addb
cmp
subl
jmp
lahf
lods
jp
adc
or
mov
xchg
iret
adc
add
push
jmp
lcall
shll
lea
xchg
fidivl
mov
icebp
jnp
cmpsl
test
inc
mov
int
pushf
dec
add
int3
scas
fiadds
jae
mov
in
or
fidivs
push
popa
pop
push
aas
mov
cmp
scas
cli
jp
fstps
aad
sbb
mov
repnz
pop
pusha
and
add
call
insb
scas
push
pop
lods
je
adc
imul
jmp
and
push
insb
lahf
xchg
cmpsb
out
lock
pop
idivb
das
std
mov
and
lcall
mov
lods
sub
xchg
shll
push
cwtl
ret
push
sub
lock
pop
lods
or
xchg
add
pop
pop
nop
fs
in
mov
lret
cmp
fcomip
mov
push
call
mov
pop
imul
mov
ja
jb
push
xor
jbe
pushf
mov
mov
push
adc
cmp
add
ss
rcr
jp
mov
inc
inc
js
cmp
mov
or
lock
mov
lock
push
in
pop
sub
cmpsb
jecxz
fisttps
jne
jnp
pop
ret
mov
xchg
sti
inc
inc
push
imul
xor
loopne
mov
push
jbe
dec
shll
add
push
dec
popf
push
push
in
dec
push
scas
pop
rcl
dec
jle
loope
jg
or
fnsave
inc
cmp
jmp
mov
popa
loopne
sub
popf
push
daa
jnp
in
movsb
xor
xchg
jg
cmp
and
xchg
or
sub
cmp
hlt
push
inc
xchg
add
imul
mov
adc
outsl
out
add
in
sbbl
or
sub
lcall
mov
rcrb
inc
add
mov
inc
test
pop
cld
and
loop
add
pop
fbld
fs
lcall
cmpsl
cmc
orb
adc
adc
jmp
inc
inc
fmuls
ljmp
dec
xor
mov
pop
push
loopne
push
xchg
test
or
adc
divl
and
jbe
incl
push
push
add
dec
adc
push
lret
cmpl
pop
fisttps
and
or
cmpb
xchg
lret
dec
and
mov
ret
add
stos
es
repz
sub
mov
jg,pn
dec
jmp
pop
xchg
mov
pushf
pop
jo
imul
aaa
cld
scas
test
ret
fs
inc
fstps
jle
js
test
shlb
incl
cmp
inc
cmpsw
mov
and
subl
sbb
add
fcomip
jecxz
in
out
fisubs
das
pusha
inc
negb
test
jns
or
sub
pop
es
mov
push
jb
sti
mov
mov
or
ret
mov
cmpl
jbe
cld
or
in
test
or
or
jo
xchg
sbb
jg
push
jmp
lret
cmpsl
call
sub
imul
cwtl
add
adc
lcall
jecxz
ja
jb
movsl
sbb
loope
pop
and
hlt
ljmp
shl
inc
jp
ret
add
jmp
pop
mov
push
out
test
popa
add
add
jp
push
scas
inc
inc
cli
aad
stos
push
xchg
cltd
push
les
incl
shr
lds
fiaddl
xlat
arpl
shlb
jle
push
mov
xchg
cmpl
jp
cmp
aaa
push
xchg
push
arpl
xchg
jge
into
add
mov
push
mov
loope
scas
mov
cmpsl
mov
dec
test
jg
js
in
mov
pusha
adc
shlb
mov
xlat
call
jb
bound
hlt
dec
sub
test
mov
lret
cld
push
ds
pushl
or
push
or
inc
jbe
pusha
jmp
fs
push
mov
ret
jno
mov
mov
pushl
jmp
inc
out
fcmove
jmp
pop
push
pop
or
loop
xchg
shlb
into
fnstcw
push
loope
nop
cli
movsb
inc
mov
mov
insb
cld
lcall
inc
scas
jbe
xor
mov
int
or
push
out
dec
push
mov
outsl
mov
jmp
mov
hlt
test
or
pop
or
pop
lock
out
rcr
and
inc
xor
aam
mov
lods
mov
aas
or
push
dec
pusha
and
fldt
mov
out
faddp
data16
mov
in
cli
mov
popw
cmc
movsb
lock
js
xor
jns
leave
les
pop
ret
les
push
or
mov
lahf
push
ret
jp
fsubp
pop
stos
rcrb
xchg
sbb
sbb
mov
push
or
mov
ljmp
std
ret
pushf
lea
and
popf
test
jno
loop
or
push
adc
inc
dec
dec
or
scas
add
xlat
jg
roll
cmpsl
out
pop
add
mov
xchg
dec
jp
jnp
bound
insb
and
dec
out
xor
lret
cmp
and
fwait
sub
jae
in
sbb
ja
and
test
ljmp
jo
push
js
stc
or
fadds
fidivl
push
mull
into
jns
or
jg
repnz
insl
push
das
callw
jg
cmpsb
loope
subl
jmp
stc
test
call
inc
push
das
stos
icebp
pop
push
adc
and
xchg
inc
jecxz
xchg
mov
inc
clc
js
push
and
sahf
shr
test
int3
add
incl
push
jns
out
xchg
lcall
pop
adc
fstpl
clc
pusha
adc
jae
mov
loop
inc
loop
pop
fbstp
or
push
push
fucomp
fwait
mov
add
cmc
inc
mov
mov
mov
and
jb
in
push
adc
push
mov
inc
loopne
jge
test
mov
inc
ja
and
pop
jne
xor
ljmp
insl
pop
jnp
fwait
jo
sahf
lret
inc
call
pop
push
in
cmp
cld
or
inc
out
pop
mov
insl
jnp
push
jp
cs
cmp
xchg
orl
enter
fnsave
mov
cld
mov
gs
mov
loope
mov
insb
loope
mov
mov
jo
push
mov
sbb
dec
fisttps
adc
pop
ret
insl
and
enter
pop
inc
jnp
mov
push
cli
xchg
xchg
ja
and
movsb
jmp
jnp
aad
fidivrl
cs
data16
sbb
cltd
out
int3
pop
or
or
cmc
shlb
sbbl
pop
je
sti
shlb
jg
pop
incl
cld
popf
ss
testb
inc
fimull
add
pop
dec
push
or
inc
loop
das
and
roll
insl
mov
std
sbbl
dec
add
xchg
push
scas
popa
int3
lods
jl
push
mov
or
cli
jbe
mov
adc
mov
inc
decb
imul
adc
jnp
push
inc
ljmp
jo
jno
ljmp
pop
xlat
scas
xchg
inc
sbb
flds
push
pop
cmp
outsb
bound
push
loopne
in
jb
inc
mov
push
mov
push
pop
idiv
jae
push
xchg
imul
push
inc
push
or
fwait
cmp
aam
push
filds
jle
sbb
mov
cmp
mov
sub
ljmp
insb
int3
repz
sbb
pop
jecxz
cli
jmp
sahf
out
xlat
push
dec
popa
addr16
push
daa
cwtl
cs
push
in
out
insb
popf
add
dec
mov
cli
jbe
cmp
lods
push
xchg
or
sbb
lds
inc
cmp
jnp
cmpsb
pop
pop
in
jg
xor
jmp
cmpsl
or
addr16
fisttpll
pop
jmp
ds
es
insl
outsb
lods
movnti
icebp
push
jge
adcl
mov
jo
daa
mov
mov
test
and
xchg
cmp
sub
hlt
add
push
testb
pop
clc
outsb
ss
pop
sti
scas
jb
ficoml
mov
or
jg
ljmp
lret
fsubl
push
pop
mov
stos
addl
das
popf
out
cmp
test
push
add
xchg
or
aam
push
dec
out
jae
rolb
push
jne
xchg
mov
fstpt
leave
xchg
sti
pop
fmulp
mov
pop
neg
jecxz
xor
push
dec
dec
mov
ss
push
jp
add
fcomip
int
push
and
xor
andl
insb
cs
mov
icebp
cmp
inc
pop
add
mov
aam
fwait
push
inc
lret
xchg
es
jmp
xchg
fbld
cmpsl
into
int
sti
jg
jle
mov
clc
ret
sub
or
das
cs
sbb
xchg
sub
int
pop
inc
pop
icebp
sti
mov
pop
sahf
adc
jnp
in
jbe
sub
push
fisubrl
mov
mov
jecxz
pop
popa
sti
pusha
and
pushf
icebp
dec
add
pop
xchg
lock
dec
xlat
pop
bound
mov
out
cmpsb
fldl
aas
add
clc
lds
aaa
popf
xor
xchg
adcb
push
bound
fisttpl
jg
out
jg
shlb
jnp
add
dec
cld
stc
cltd
inc
jno
mov
movsb
mov
call
inc
add
movsl
inc
adc
cmp
outsl
fidivl
idivl
jb
cmpsl
scas
pop
les
ret
inc
stos
adc
add
dec
and
andb
cmp
outsb
jecxz
loopne
idiv
pop
dec
inc
ja
lcall
mov
xor
inc
inc
in
xchg
dec
pop
loope
stos
mov
ds
js
imul
cs
jmp
fisubrs
pushf
fcompl
insb
jle
dec
jb
incb
add
jg
incb
add
mov
test
andb
cmp
shll
push
nop
mov
nop
sub
or
cmp
hlt
rcrl
xchg
mov
jb
lea
addr16
inc
mov
pop
or
pop
sub
sahf
imul
aad
and
xlat
std
pop
daa
add
js
loopne
fsubrs
scas
loopne
xor
xor
ljmp
or
jl
adcb
jp
push
icebp
sub
xchg
in
mov
mov
mov
adc
adc
lods
cli
jecxz
add
pop
inc
shll
and
es
lret
and
and
sbb
and
xchg
jno
test
fistps
clc
fcomip
inc
mov
xchg
and
mov
icebp
call
pop
push
adc
sub
std
stos
enter
je
mov
lcall
cmpsl
es
jl
mov
push
dec
or
cpuid
mov
xchg
outsb
or
shrl
test
mov
outsl
clc
ja
jmp
fsubl
aam
scas
push
push
xchg
xor
inc
pop
out
shlb
out
jle
inc
inc
in
in
filds
and
mov
cmpsb
lret
jge
pop
cltd
lock
jnp
sbb
icebp
inc
clc
xchg
mov
filds
inc
mov
out
cmp
loop
jmp
push
inc
mov
cmc
xchg
xchg
mov
aam
call
xor
adc
cli
ja
sbb
adc
mov
sbb
loope
pop
bound
jne
loop
cltd
pushl
std
fcomi
fwait
and
ret
js
test
out
jmp
fwait
pop
das
mov
sub
mov
call
and
aad
xchg
std
push
fiadds
ret
or
jno
adc
adc
shlb
lods
xor
cwtl
sbb
pusha
push
lods
mov
and
loopne
rorb
push
cmp
push
adc
ljmp
stos
or
cltd
xchg
subl
hlt
lds
inc
adc
les
repz
push
sub
incl
inc
pushf
mov
cmc
fidivrs
or
inc
test
xor
fistpll
shr
mov
mov
adc
je
cmpsl
pushf
push
test
lods
mov
pop
fbld
pop
adc
xor
shr
rclb
pop
xor
push
add
ljmp
int
xor
popl
cli
gs
and
mov
outsb
push
mul
inc
mov
pop
inc
mov
fs
int
jb
cmc
mov
cmpb
push
rcrl
pop
pop
pop
out
fistps
out
or
punpcklbw
push
enter
cmp
jbe
scas
inc
and
dec
and
rclb
repnz
scas
lods
add
xchg
jl
mov
sub
mov
inc
inc
fdiv
push
pop
out
out
out
xor
push
mov
cltd
nop
add
scas
cwtl
lahf
int3
inc
adc
or
xchg
push
adc
pop
adc
pop
add
xor
and
push
inc
fucomip
movb
push
bound
push
pop
and
xchg
pop
addl
mov
add
or
cmpsb
cli
int3
data16
repnz
sub
ja
and
jbe
clc
addr16
call
or
push
jg
in
jbe
push
xchg
hlt
jns
inc
pop
xchg
or
add
ljmp
xor
inc
loopne
idiv
lea
pop
shl
push
or
push
sbb
addr16
push
and
adc
cmp
xor
icebp
mov
jmp
aas
adc
jmp
or
fadds
jg
push
pop
sarb
dec
dec
mov
add
jo
lret
repz
or
mov
and
push
mov
cs
sub
jmp
sbb
outsb
mov
imul
pop
bound
rcrb
in
mov
push
cmc
dec
ret
jg
in
mov
dec
pop
pop
orl
sub
and
ds
ss
dec
sti
test
pop
pop
add
fdivp
mov
jmp
fcmovnb
inc
or
xchg
imul
ja
clc
scas
jp
xchg
fwait
jnp
lock
and
bound
roll
jnp
inc
jmp
sub
es
js
pop
es
jo
pop
and
mov
pop
push
fstps
push
jnp
add
jne
inc
sahf
pop
ja
test
cmp
gs
add
inc
inc
or
push
clc
push
cmpsb
sbb
inc
xchg
and
ja
call
icebp
jge
xchg
pushf
mov
loope
ret
clc
push
xor
repnz
sarl
xchg
sbb
out
xchg
push
cwtl
rorb
scas
adc
inc
pop
rcrb
pop
ja
shl
adc
fbld
incl
scas
nop
gs
adc
pop
mov
sbb
pushl
sar
into
repnz
sub
pop
xchg
or
cmp
repz
and
pop
jbe
in
add
pushl
fucom
xchg
pop
pusha
dec
push
fs
rcll
lcall
xor
mov
xor
push
mov
aas
sub
fdivl
and
enter
pushl
clc
xchg
fcomps
sub
cwtl
jns
rclb
decl
fisubrs
fsts
jno
add
add
mov
jmp
push
das
cmpl
test
movsb
bound
les
sub
cmp
add
clc
push
fistpl
inc
ret
mov
decl
hlt
outsl
clc
mov
xchg
xor
movsl
mov
lods
fisubrs
adc
lahf
jecxz,pn
push
out
stos
inc
push
sub
jg
inc
xor
je
orb
push
pop
pop
in
fiaddl
add
add
inc
mov
add
mov
add
inc
xchg
pop
fsts
or
inc
shr
nop
or
sub
fs
rcll
xor
jo
ljmp
or
mov
xlat
or
fsubr
bound
sub
pop
mov
loope
ldmxcsr
clc
icebp
jg
icebp
cmc
bound
cmp
scas
ret
jg
mov
mov
inc
mov
adc
lods
push
movsb
and
out
lods
cli
aaa
pop
or
sahf
popa
mov
mov
dec
jecxz
lcall
inc
adc
mov
je
fwait
rclb
mov
movsl
inc
xchg
xor
and
pop
dec
cld
dec
sbb
lret
xchg
fiadds
das
gs
or
xchg
xor
cmp
ljmp
fdiv
xchg
inc
add
je
xor
xchg
sti
mov
mov
test
cmpsb
lock
out
pop
mov
sbb
adc
mov
cs
clc
xchg
dec
pushf
jge
lcall
iret
loop
dec
into
cli
inc
je
fcomip
xchg
repz
cs
mov
dec
addr16
inc
and
jg
jp
push
jno
inc
add
jns
out
out
jo
cld
push
or
ja
decl
ficoms
sar
popf
clc
xor
rolb
or
xchg
in
add
fwait
aad
dec
sbb
push
mov
lds
ficoms
popf
or
sbb
fs
inc
xor
mov
out
and
sbb
lds
pop
adc
int
pusha
sti
pop
scas
lret
dec
cli
dec
and
clc
cmp
pop
imul
sub
mov
ljmp
lcall
repz
jne
leave
movsb
dec
aad
sbb
das
dec
and
push
dec
inc
inc
cmc
call
insb
loop
nop
or
push
rorb
decl
fs
jno
test
push
inc
xchg
into
loop
jecxz
loope
cmp
pop
dec
xchg
fsubrs
stos
pop
dec
xor
lret
jb
cwtl
pop
add
fwait
icebp
clc
je
jg
add
and
fisttps
jae
push
pop
loope
push
lret
call
cmp
fwait
icebp
mov
add
push
dec
fldl
mov
sarb
ret
jb
cli
and
lret
js
inc
add
sbb
lret
and
clc
aas
adc
fcomip
pop
pop
mov
ret
test
addb
mov
pop
psrad
decl
inc
or
sarl
mov
pop
dec
cld
mov
jbe
pop
testb
cmp
jbe
adc
jae
cmp
outsl
sar
sub
pop
scas
stc
dec
dec
dec
ss
lcall
addb
pop
inc
nop
mov
jae
lea
mov
jnp
rcrb
dec
adc
jl
stos
push
mov
filds
in
dec
mov
jp
lea
sbb
or
sti
push
jecxz
cmp
xchg
sbb
xor
push
dec
cwtl
pushl
in
pop
fadd
dec
lcall
xchg
bndldx
cmc
pop
add
inc
fcoml
fildll
xchg
in
cwtl
decl
test
sub
out
adc
jnp
mov
xorl
sub
loope
xor
sub
popa
popl
mov
in
adc
lock
shlb
aad
add
jp
inc
repnz
and
adc
iret
mov
imul
pop
push
in
pop
inc
jnp
mov
lahf
decl
xchg
popa
loope
or
dec
jg
cld
decl
out
std
loop
leave
sahf
push
test
add
push
hlt
push
push
lret
clc
mov
fisubl
pop
pop
in
mov
mov
pop
push
in
ffreep
jb
mov
popf
push
mov
outsl
mov
lret
std
push
ret
jns
cmpsl
fcomip
fidivs
mov
es
push
les
cmpsl
inc
mov
xlat
pushl
std
test
mov
push
mov
or
shr
fbld
gs
popa
data16
out
and
xor
jno
or
scas
mov
pop
and
sbb
fcomi
mov
outsb
pop
insl
push
clc
mov
cwtl
mov
sti
movsb
cmp
jmp
adc
push
mov
dec
loop
jle
inc
or
cmp
cli
inc
pop
inc
push
fsubrs
mov
test
inc
xchg
jle
xchg
sub
and
filds
jp
dec
xlat
aam
push
cld
add
lcall
int3
push
fimull
xor
icebp
jecxz
or
or
xlat
fistps
sub
repz
daa
leave
jo
mov
pop
and
cmpb
add
shlb
adc
inc
ljmp
sahf
mov
and
adc
out
inc
nop
or
out
mov
into
and
mov
shll
fimull
std
mov
fidivl
loop
cmp
out
je
loop
sub
in
pop
fwait
in
xor
inc
add
xchg
outsl
mov
fmuls
inc
push
jle
push
and
push
fimull
mov
push
mov
adc
movl
cmp
decl
xor
pop
cltd
test
adc
loop
push
adc
aad
push
std
popf
xor
mov
add
js
xor
lcall
inc
mov
mov
mov
aam
or
push
mov
lods
xchg
dec
sub
jle
sub
test
sahf
pop
daa
popf
mov
xor
decl
jle
jns
sbb
addr16
in
cs
inc
test
add
xchg
push
js
lock
or
push
pushw
adc
mov
lret
rol
shlb
adc
in
popa
sahf
adc
andb
sub
dec
jo
decl
cmpl
int
mov
into
jle
jmp
jl
add
dec
and
mov
fnstcw
cmp
and
adc
pop
push
jge
add
decl
in
out
pop
jno
popa
sbb
inc
mov
pop
out
add
mov
ljmp
push
mov
sbb
fsubrs
pushl
and
jmp
xor
imul
rolb
lock
jne
fs
inc
das
dec
mov
or
testb
movsl
push
push
lret
shll
sbb
idivb
fidivrs
ds
int
mov
adcb
sahf
ljmp
push
push
inc
ss
hlt
pop
add
xchg
inc
cmp
repnz
push
cli
jp
inc
mov
add
std
mov
ljmp
lods
xor
ret
dec
sbb
dec
insl
mov
fwait
popa
pop
out
add
mov
pop
and
loop
movsb
push
push
and
jmp
sbb
dec
jnp
dec
add
arpl
or
jmp
xchg
lcall
mov
or
cmp
sbb
repnz
hlt
inc
rsm
inc
fbstp
jbe
mov
shrl
and
mov
pop
ret
and
or
orl
outsb
shld
fwait
loopne
pop
push
xorb
imul
sbb
mov
inc
jg
xor
lcall
push
test
pop
loop
mov
in
inc
cwtl
inc
jmp
aaa
lcall
dec
mov
dec
lods
ja
push
js
xor
inc
xor
cmp
jno
inc
cmpsl
dec
mov
test
lret
test
pop
cmpsl
pop
mov
inc
adc
lods
and
imul
mov
arpl
jbe
jmp
loop
add
adc
pop
pop
ficoml
mov
mov
push
cmp
filds
and
push
xchg
call
stos
dec
pop
test
pushl
dec
in
add
shrl
mov
adc
jle
sbb
mov
and
inc
push
or
dec
push
mov
pop
shlb
inc
fldz
jo
out
cld
outsl
clc
lahf
shlb
pop
add
cmp
fstpl
jle
cmpb
call
dec
jbe
jae
or
les
insl
jmp
mov
push
mov
mov
jg
jge
and
loop
inc
adc
mov
mov
pop
leave
xchg
inc
dec
std
mov
cmp
mov
pop
lock
shlb
xlat
out
lahf
jns
daa
xor
aas
xchg
into
leave
sbb
pop
add
daa
ret
scas
shlb
movsb
mov
mov
in
and
movsl
mov
leave
push
push
xor
inc
loop
mov
cwtl
shr
jmp
out
inc
popa
sub
inc
add
push
pshufw
dec
fldenv
loop
clc
dec
testl
xor
add
mov
jne
sub
sub
vpunpcklwd
rcrb
mov
ret
mov
mov
and
xchg
movsl
nop
pop
xor
cmc
jge
es
clc
mov
icebp
iret
pop
cli
fmuls
mov
adc
fisubrs
mov
aas
push
shll
fistpll
jl
pop
ja
jb
jbe
sub
mov
and
fdivrp
test
push
aas
push
cltd
mov
mov
scas
mov
xchg
fimull
add
push
ret
xchg
mov
jmp
mov
lods
fldenv
lock
pop
shl
cltd
xor
std
mov
lahf
dec
or
dec
loopne
mov
mov
cmpsl
jmp
fcmovnb
pop
out
cmpb
stos
mov
daa
sub
andl
inc
jae
push
sbb
aas
rcll
incl
lds
push
addr16
lea
mov
pop
cmpsb
pop
inc
xchg
sti
dec
cmpsl
xchg
ja
push
outsb
pop
push
xchg
scas
call
sbb
loopne
cltd
test
xchg
in
insl
stos
insl
lea
fisubl
ljmp
loope
mov
ret
loop
adc
sbb
mov
cmp
sbb
call
mov
pushl
push
ja
sbb
sti
add
mov
mov
loop
sarl
sbb
das
and
adc
push
movsl
xchg
fcomps
mov
cmp
mov
sub
mov
es
je
sub
mov
push
ljmp
mov
loope
cmpsb
nop
iret
push
adc
lcall
and
mov
aaa
jle
sbbb
dec
mov
jo
shl
adc
xchg
out
pop
mov
or
shr
xor
pop
scas
mov
push
fsubs
or
pop
icebp
imul
sub
mov
test
call
cs
xchg
lret
inc
cltd
lds
xchg
test
fbld
inc
and
jbe
adc
sbb
icebp
adc
aaa
add
add
xchg
aad
jno
les
cwtl
aam
lcall
or
dec
jbe
ret
dec
aaa
mov
inc
ret
push
int3
sub
push
jg
insb
mov
jecxz
int3
mov
sbb
loope
inc
fsubs
in
mov
mov
push
or
incl
adc
xchg
movsl
push
pop
jnp
arpl
mov
push
adc
pushl
es
cltd
rep
test
or
fisubl
push
xor
jg
push
and
push
fsubs
xchg
cmp
mov
cmpsb
jo
mov
or
pop
or
cmpb
das
or
xor
lcall
ds
mov
push
xor
jb
mov
cmp
mov
test
jb
or
jle
shl
test
push
push
xchg
add
pushf
xchg
orb
lcall
cmp
movsb
lahf
sti
cmp
das
mov
in
shrb
stos
push
cmp
icebp
incl
mov
inc
aam
mov
fwait
test
mov
dec
lods
inc
adc
sub
or
sahf
lock
mov
xchg
mov
mov
pop
mov
call
sbb
loop
xchg
push
add
test
mov
jb
xchg
mov
std
inc
lods
popf
push
pop
cli
sub
jno
jg
pop
sbb
mov
scas
movsl
lock
call
cmp
dec
mov
rcrl
push
or
fists
adc
fistpll
subb
addb
test
xlat
pop
sub
pop
hlt
push
fdivr
mov
test
dec
mov
cmpsl
cmpsb
jge
clc
loope
test
andb
orb
or
cltd
push
adc
jg
mov
scas
sub
mov
scas
xchg
push
sbb
or
cmp
push
mov
or
test
pop
sub
pop
js
add
es
mov
sbb
stos
stos
push
push
adc
xchg
mov
dec
jbe
shrb
iret
aaa
outsl
cli
scas
jl
mov
bound
add
and
jne
gs
lcall
iret
ds
and
add
and
orl
inc
and
fs
sti
adc
xor
dec
lcall
scas
cmpsl
int
sub
push
les
maxps
cmp
and
pop
lds
or
js
adcb
xor
aaa
scas
bnd
movsl
loopne
das
and
xor
xor
mov
add
ss
or
adc
out
xchg
es
jg
adc
jge
inc
aas
test
jp
sbb
push
data16
mov
and
dec
or
jge
adc
mov
jo
or
stos
scas
inc
push
sbb
dec
or
clc
andl
arpl
test
add
cmp
mov
call
lret
xor
jae
test
pop
retw
inc
fisttpl
lock
mov
aaa
jg
ret
xor
pop
pop
jecxz
popf
loopne
je
ds
or
inc
push
sub
cmp
mov
dec
jecxz
cs
or
movsb
cmc
jge
sub
mov
push
aaa
incl
pop
push
imul
inc
sub
ljmp
sahf
imul
xor
dec
insl
int
add
dec
fbld
shlb
scas
ret
and
add
fmulp
pop
aaa
bnd
jbe
mov
jae
movsl
loope
or
mov
adc
push
mov
jg
xor
pop
ljmp
ret
jns
in
sarb
and
incl
ret
aad
cmpsl
ljmp
push
hlt
ljmp
and
test
add
lcall
pushf
push
dec
pushf
mov
or
mov
push
adc
lret
sub
sahf
add
cli
fisttpl
jg
and
lds
shr
jecxz
movsl
notl
lahf
adc
sbb
inc
outsl
jmp
mov
iret
add
cmc
cmpsl
xchg
jo
mov
inc
insb
nop
fimuls
decl
clc
jmp
fsubr
cmc
scas
iret
lock
dec
mov
leave
in
div
pop
xor
jmp
cli
jae
jge
mov
add
jmp
rorb
jo
inc
jo
inc
inc
popa
scas
pop
aam
std
shll
out
insl
lea
out
xchg
das
mov
cld
pushl
xor
inc
aam
fisubrs
mov
loop
loopne
pop
inc
pop
outsl
fwait
mov
gs
adc
adc
pop
cli
in
fs
rcl
repnz
push
out
fidivrs
cmpsl
adc
lret
mov
faddl
jmp
sub
mov
pushl
daa
in
daa
js
ljmp
pop
jge
mov
mov
iret
sbb
out
xor
les
adc
sbb
lds
and
aaa
pop
outsb
ljmp
call
or
pop
loope
dec
repz
aam
aad
lahf
pushf
mov
imul
pop
in
fucomip
ss
fcomi
in
or
ja
mov
shr
addr16
aas
and
xchg
loopne
cmp
out
fcomps
pop
lahf
sub
leave
mov
daa
pop
jg
rorb
mov
lcall
inc
jge
clc
outsb
mov
pop
rorl
jecxz
rcl
pop
jmp
jmp
pop
inc
jmp
jl
push
inc
sub
mov
sub
jg
cmp
out
out
xorb
push
jo
add
sti
aam
push
add
mov
adc
cmp
push
int
pop
push
les
clc
imul
mov
mov
sahf
xchg
xchg
push
jns
cs
push
mov
lret
out
ficoml
insl
jns
add
mov
sbb
cmp
jg
jle
movsb
mov
inc
in
mov
fiadds
sti
cwtl
and
fwait
in
jg
push
lcall
in
mov
rsm
lcall
xorb
in
cmp
mov
and
inc
scas
or
mov
popa
adc
sub
dec
movsl
sbb
xchg
aaa
sub
adc
or
or
mov
jbe
cmpsl
xchg
sbb
decl
add
xchg
movsl
xor
inc
xor
cld
or
lret
movsb
cs
or
movsb
movsb
hlt
jmp
daa
cs
lods
mov
ja
jno
hlt
and
filds
std
in
movsl
mov
lea
int
and
std
inc
out
nop
rorb
fwait
lret
or
xchg
mov
pop
clc
nop
mov
fsts
dec
or
je
push
lock
or
jnp
xor
dec
jecxz
mov
push
jb
ret
and
mov
ja
and
mov
std
pop
sbbb
push
mov
andb
test
adc
add
xor
mov
ficomps
or
sub
sub
xchg
rdpmc
fcmovnu
out
aam
imul
rcl
sbb
es
outsl
clc
lock
cmp
enter
roll
out
ljmp
sbb
mov
or
xchg
mov
movsb
enter
and
cltd
nop
clc
incl
stc
mov
push
loop
sahf
mov
mov
inc
into
sub
pusha
loopne
cmpsl
movsl
mov
add
cmpsl
sbb
dec
add
mov
xchg
fcomip
jmp
lea
sub
lcall
and
loopne
cltd
ljmp
sub
add
fcmovnu
lcall
mov
lcall
enter
ljmp
xchg
movsl
mulb
jns,pn
push
lea
es
inc
and
lcall
into
or
movsl
dec
cwtl
subb
fmuls
sti
jne
cld
pop
or
lods
mov
lcall
or
cmp
rolb
xor
mov
sbb
rclb
int
jbe
loop
mov
clc
mov
sbb
enter
push
mov
pushl
stos
xorb
fisttpll
repz
call
shlb
call
scas
cmpsl
decb
scas
or
repnz
cmpl
push
or
sbb
and
cli
adc
or
or
cmp
pop
add
xchg
out
jle
sbb
mov
ret
les
mov
push
sub
lret
mov
cmc
push
ds
cs
ds
rcrb
push
iret
xor
pop
or
or
stc
inc
fdivr
jg
push
add
movsb
mov
enter
adc
mov
mov
fucom
mov
mov
insb
sbb
inc
adc
aam
add
lock
lret
jecxz
inc
aam
adc
adc
rcrb
dec
and
adc
adc
dec
adc
rclb
rcrl
xchg
pop
out
push
pop
orb
push
inc
aas
add
add
push
call
test
dec
les
xchg
push
orl
push
inc
js
sti
arpl
jb
fistpl
xor
ljmp
pop
mov
mov
lret
test
fwait
sbb
data16
jp
fnsave
mov
scas
dec
mov
fwait
cld
add
cmp
jl
mov
sub
or
dec
pop
clc
push
mov
les
adcb
dec
add
in
mov
mov
jg
loopne
xor
shl
ret
xchg
push
pop
and
push
repnz
ror
jno
jge
dec
mov
aad
sar
pushf
sbb
in
xchg
in
mov
decl
popa
imul
push
mov
into
mov
loop
pusha
iret
fwait
mov
or
push
fwait
push
sbb
pop
clc
in
pop
dec
or
mov
fwait
or
out
and
xchg
push
mov
push
jno
decl
mov
inc
lock
mov
lock
push
mov
or
or
repz
mov
popa
fcoml
jne
mov
cmp
fdivrs
inc
rclb
call
je
inc
shrl
xchg
push
pushf
pop
pop
das
jg
pop
adc
xchg
push
xchg
add
enter
sub
lea
jg
ljmp
es
xorb
mov
fs
icebp
jmp
jl
lcall
pop
test
mov
push
les
out
cltd
scas
fcmovb
cli
mov
call
cmp
lods
in
mov
out
test
pop
xchg
xor
int
icebp
ljmp
pop
mov
loopne
fwait
movsb
push
std
mov
push
mov
sar
ficoms
add
into
nop
sbb
ljmp
bound
cs
out
adc
dec
test
xchg
sbb
fisttps
xchg
adc
xchg
shlb
sbb
add
jno
fs
mov
jmp
hlt
inc
scas
cmpsb
push
test
pop
pop
nop
mov
subl
call
movsl
xchg
cmpsb
stos
or
pop
inc
call
adcl
sbb
pop
xchg
mov
es
sbb
aad
fstpl
cmpsb
mov
xchg
aam
dec
and
add
call
in
rcrb
cwtl
icebp
or
test
push
pushf
nop
cmpsl
xchg
lock
fdivrp
jno
subb
clc
scas
nop
jmp
pop
dec
fimuls
test
mov
into
ljmp
jae
fldl
ljmp
xchg
jo
and
jge
xchg
pop
inc
or
pop
xchg
mov
pop
xchg
adc
pop
and
inc
jg
fiadds
lcall
add
movsb
xchg
into
push
scas
mov
sub
and
inc
mov
xchg
xlat
sahf
ret
jle
add
lock
movsl
inc
or
mull
push
test
cld
fldenv
cmpsb
cmpsl
test
dec
addb
in
cmpsl
push
mov
cmp
pushl
xchg
mov
xlat
std
movsl
and
mov
pop
push
add
les
mov
cmpsb
test
lods
insb
mov
in
lock
cmc
jne
mov
icebp
adc
leave
cmpsl
xchg
inc
ljmp
mov
or
lahf
pusha
es
or
popa
mov
sar
push
cltd
inc
andb
in
scas
mov
push
xchg
or
dec
les
ljmp
addl
mov
add
add
mov
ljmp
push
cwtl
sbb
mov
xor
mov
gs
out
jg
or
dec
mov
jno
xlat
call
mov
xchg
jmp
cmp
sub
imul
cld
push
fldl
decb
repnz
clc
sbb
pop
and
dec
inc
mov
dec
std
or
jge
mov
mov
and
adc
aaa
jmp
or
jg
lods
loop
mov
pop
push
aam
jb
pop
ret
and
sbbb
sub
xor
push
inc
cld
mov
lea
jmp
pop
jmp
pop
dec
cmp
sbb
or
lock
mov
pop
xchg
jae
cmc
fbstp
mov
push
out
icebp
mov
pop
mulb
sub
shrl
das
adc
pop
int
ror
jmp
jmp
out
sar
xchg
mov
push
jns
adc
call
test
inc
dec
ljmp
cld
push
out
mov
lahf
mov
add
fstpt
in
push
imul
xor
push
iret
mov
mov
std
mov
inc
or
jns
adcb
decl
movsb
mov
ljmp
jge
sub
pop
pop
test
repz
mov
pop
cmpsb
out
jbe
stos
test
mov
push
jb
arpl
call
dec
stos
adc
es
lea
loop
mov
jo
clc
arpl
decl
sbb
push
test
mov
fwait
or
xlat
fists
mov
jmp
ljmp
std
out
gs
mov
dec
dec
bound
lock
hlt
push
cmp
jne
fdivl
xlat
stc
shrb
push
test
push
adc
ja
adc
cmp
inc
or
pushl
inc
ret
dec
mov
call
sbb
scas
and
incb
mov
sahf
int3
xchg
pushf
xchg
lcall
fdivr
mov
or
test
xor
xchg
mov
pop
divb
ss
dec
test
jns
sbb
add
sbb
jecxz
mov
cld
push
add
jns
testb
pop
andl
push
data16
mov
inc
xor
ret
xchg
jbe
mov
pop
xchg
loop
push
sbbb
adc
clc
scas
lret
jns
adc
add
mov
add
inc
clc
scas
pop
and
subb
mov
jae
xorb
sbb
jno
mov
mov
mov
or
repz
lock
xor
ljmp
mov
jg
adc
sub
dec
or
fcomip
mov
cmp
jno
addr16
jae
xchg
inc
mov
cmp
mov
incl
insl
cmp
inc
push
js
or
sbb
loope
adc
in
cwtl
inc
mov
push
addb
mov
daa
arpl
jmp
cld
add
mov
rclb
xor
roll
pusha
cld
jne
lcall
lcall
cld
fsubp
clc
fwait
pop
rcrb
cli
sbbl
call
add
ret
sbb
jns
addr16
mov
xor
jecxz
xchg
cmpsl
mov
dec
adc
aam
call
sub
mov
push
scas
ljmp
ret
dec
das
out
pop
jg
sbb
clc
int
shrb
std
push
dec
call
mov
clc
out
loope
jg
push
sahf
dec
leave
in
pop
aad
decb
stos
loop
rorl
or
cmpsl
nop
and
xlat
and
jle
ja
ret
imul
out
add
inc
cwtl
test
hlt
loope,pn
push
mov
call
push
fld
or
lds
add
jbe
cwtl
clc
xchg
push
ljmp
pushf
pop
pushl
pop
lahf
mov
add
sub
std
jo
add
jge
jp
ficomps
loop
xor
adc
mov
pop
out
movsl
data16
outsl
dec
movsb
cmp
jl
and
push
and
mov
xchg
mov
and
jecxz
fdivrs
jmp
pop
aas
lds
or
mov
xchg
rcl
cld
test
and
pop
jle
cmp
dec
inc
push
ror
mov
or
pop
or
add
add
push
jmp
shl
jp
mov
movsl
sbb
sbb
jno
icebp
int
dec
adc
pushf
or
fwait
add
push
xor
flds
ret
xchg
cmp
or
inc
pop
sub
push
or
xchg
mov
dec
xchg
push
subl
pop
pop
ret
jl
jmp
rcrb
cld
push
and
or
sbb
push
sbb
or
cs
dec
adc
int3
xor
icebp
pop
or
push
das
aaa
jmp
add
imul
stc
xchg
cwtl
clc
decl
pop
jp
mov
xchg
mov
and
ljmp
push
sbb
sbb
pushf
lea
xor
or
add
and
adc
dec
cmp
xorb
inc
das
jg
mov
cmp
push
lcall
dec
cld
xchg
adc
mov
push
jg
dec
ffreep
mov
push
pushl
cwtl
xchg
inc
or
adcl
push
lcall
mov
xor
xchg
and
fstps
xor
mov
scas
clc
mov
hlt
jg
mov
mov
push
hlt
jecxz
sub
leave
xchg
mov
mov
es
jecxz
lea
dec
mov
pusha
sti
sbb
loop
std
mov
lcall
push
push
cmc
dec
in
pop
nop
fldl
mov
jnp
repnz
outsl
sbb
call
vcvtpd2psy
dec
cli
xchg
dec
or
fucom
push
and
dec
divb
pop
mov
lret
lods
call
sub
fcomip
stos
cmp
fwait
hlt
scas
je
test
push
mov
sub
js
dec
dec
shl
push
in
xlat
nop
add
pop
into
lods
arpl
push
pop
imul
pavgw
xchg
hlt
mov
scas
out
mov
out
dec
loop
es
jo
fimull
pop
mov
xlat
jl
mov
add
int
test
inc
dec
xor
jle
cld
ljmp
out
dec
movsl
push
stc
repz
dec
sub
fs
sbb
sar
fwait
cs
dec
std
mov
subb
std
ljmp
mov
icebp
lret
fwait
cmpsb
cld
sti
jmp
mov
fmull
rcrl
lcall
in
aas
or
mov
or
jge
jmp
scas
sbbl
pop
jl
std
lods
adc
nop
mov
jno
xchg
sbbb
scas
mov
lcall
mov
xchg
xchg
outsl
jbe
or
pop
dec
movl
lds
jl
and
sarl
push
inc
jl
xchg
push
cltd
mov
mov
push
lock
push
mov
jmp
test
jnp
in
into
data16
lret
adc
dec
mov
jmp
xor
and
xchg
jg
jbe
mov
pop
cmp
shrb
arpl
add
int3
ds
add
hlt
mov
mov
add
js
out
iret
loopne
cmp
dec
decl
test
mov
push
jne
test
mov
jmp
es
mov
pop
pop
cmpsb
orl
jae
xor
test
push
jae
testl
cli
pop
xorl
cld
insb
lea
das
data16
push
sub
daa
xchg
xchg
jmp
test
pop
push
push
jg
testl
sbb
jg
inc
clc
rolb
jecxz
std
sbb
sub
adc
mov
mov
stos
jecxz
xchg
jl
push
or
push
or
mov
mov
add
push
scas
inc
jp
shufps
cld
xchg
mov
push
lret
popa
or
dec
clc
fildl
out
nop
call
mov
es
sbb
addr16
cli
push
adc
mov
cmp
sub
jns
shrb
jbe
icebp
jg
ret
and
rclb
mov
jns
xchg
movsb
xchg
shl
jecxz
lds
stc
cmp
push
mov
leave
add
pop
pop
icebp
mov
gs
hlt
cmp
jl
scas
filds
cld
cltd
mov
cli
jecxz
inc
jno
mov
fildll
loopne
sub
cmp
movsl
xchg
mov
xchg
adc
les
jl
incl
stc
mov
jne
cltd
xchg
inc
xchg
jnp
xchg
ds
outsl
sar
ljmp
popl
stos
push
mov
push
shll
adc
js
or
clc
stos
mov
hlt
inc
cmpsl
cmpsb
add
jp
mov
jmp
ds
mov
xchg
test
lcall
test
ljmp
xchg
mov
testl
xchg
adc
push
cmpb
xchg
cmpsb
mov
or
xlat
adc
inc
loope
sahf
out
xchg
inc
and
insl
add
dec
lock
incl
pop
clc
mov
andb
ficoms
push
and
pop
cmp
or
test
pop
in
mov
scas
out
inc
call
mov
insb
cs
inc
push
mov
stc
or
jl
sub
aaa
jp
rcll
enter
ss
mov
pop
add
cwtl
and
shlb
test
xor
xchg
jp
out
dec
mov
lea
mov
mov
push
flds
das
add
pop
mov
push
imul
ljmp
and
adc
mov
push
mov
lock
xor
aas
addr16
lret
fistps
cli
mov
in
push
mov
pop
add
or
inc
xor
inc
pop
and
aad
jb
ret
push
lret
test
lahf
fimull
mov
jl
push
cmp
ss
popw
test
mov
push
mov
push
mov
lcall
daa
subb
pop
sbb
stc
mov
push
test
mov
bound
jns
filds
add
xchg
adc
jp
mov
dec
cmpsb
push
loope
decl
cmpsb
mov
jle
sbb
call
and
icebp
sub
ja
aas
lcall
xchg
cltd
lret
push
mov
jb
or
lret
add
data16
mov
cli
push
repnz
out
jno
push
cmpsb
push
lock
jg
addr16
lret
sbb
lods
mov
loope
pushf
and
push
out
filds
sub
push
ret
adc
mov
jbe
je
pop
mov
out
mov
mov
inc
and
add
pop
cmp
adc
and
popa
icebp
mov
mov
out
clc
pop
js
inc
adc
pop
adc
xor
push
and
sbb
jns
loope
into
push
jb
add
js
in
cmpb
mov
jl
mov
loop
test
mov
ss
lret
sub
and
jbe
mov
jns
rcrl
push
xor
push
xchg
xchg
int3
fsubr
mov
jno
mov
popf
mov
lods
fisttpll
jo
cs
lcall
mov
movsb
dec
push
mov
mov
inc
xor
mov
fwait
mov
std
xchg
inc
xchg
outsl
cmp
aaa
and
ficoms
xor
enter
xchg
mov
aaa
or
pop
and
int3
pop
popf
gs
jge
ljmp
push
mov
push
or
ljmp
es
lahf
push
test
stos
mov
dec
loop
push
mov
push
mov
jmp
ljmp
jns
in
enter
dec
pop
cmpsl
movsl
mov
inc
std
add
loop
insb
dec
loopne
nop
push
lds
pop
pop
shrb
in
call
xor
test
cmp
cmpsb
repz
inc
lahf
enter
clc
dec
ljmp
adc
adc
add
mov
mov
das
test
mov
inc
cmovb
aaa
out
rcr
and
stos
add
cli
mov
out
xchg
mov
cs
out
movsb
in
adc
dec
jae
in
inc
dec
loope
pop
xchg
test
mov
scas
pop
jecxz
fcomip
ret
jno
movsl
jge
mov
cs
and
mov
and
call
popa
xor
loope
pop
cli
jecxz
aam
dec
sahf
stos
stos
push
xchg
mov
or
data16
xchg
sahf
outsb
xchg
enter
mov
mov
mov
loop
stos
xchg
cmp
aaa
adc
mov
daa
inc
mov
jmp
pop
add
mov
stos
lock
jb
cltd
lds
jmp
pop
ja
mov
movsb
loopne
or
rol
lea
incb
aam
push
push
aam
rorb
push
aaa
leave
add
sbb
add
mov
inc
mov
scas
push
mov
fwait
data16
push
jne
mov
outsb
shlb
cmp
pop
push
fdivr
pop
clc
call
cwtl
and
cs
jns
or
pop
ja
pop
dec
clc
fldl
loopne
nop
push
lcall
cli
outsl
ja
xchg
inc
outsb
cmpsb
pop
test
mov
sbb
dec
cld
stos
adcl
mov
insb
cmp
cmp
cmp
lods
jb
cli
and
sub
mov
mov
divb
cmp
xchg
mov
ret
repz
pop
dec
jmp
dec
inc
and
lds
clc
stos
mov
inc
pop
loop
loope
out
xchg
imul
mov
or
daa
scas
mov
into
mov
jmp
jbe
xor
and
hlt
filds
pop
lret
add
sbbl
or
movsl
jne
std
rcrl
add
xchg
mov
mov
cmp
or
test
shll
aaa
icebp
add
stos
inc
jle
and
lcall
mov
pop
jb
test
mov
lcall
adc
test
mov
idivl
xchg
mov
push
adc
and
aaa
pop
cli
mov
fcompl
dec
sbb
dec
in
mov
push
popa
pusha
jae
mov
mov
sub
pop
ja
decl
or
repnz
leave
jno
lods
movsb
fimuls
add
jge
push
and
pushl
push
adc
pop
mov
scas
or
in
jnp
les
ret
insl
push
clc
outsl
fcomps
cmpsl
stos
xor
xor
push
jb
call
cwtl
ljmp
cwtl
cmc
dec
or
nop
mov
pop
pusha
outsb
decb
mov
cs
call
push
inc
xorl
fwait
xchg
fwait
stos
xchg
pop
cmp
add
stos
mov
push
sti
je
ds
incl
xchg
push
mov
add
dec
sub
cld
incl
mov
add
popf
add
dec
mov
inc
pop
lahf
xchg
lock
inc
xor
add
inc
jl
mov
sub
aad
cmpsl
mov
mov
incl
cmp
ss
in
insb
mov
lahf
outsb
cmp
inc
lret
mov
sbb
xchg
leave
jg
cmp
inc
stos
pop
dec
mov
lods
jl
test
outsl
mov
sub
cmp
xchg
pop
js
lock
or
insb
push
pop
mov
add
pop
mov
mov
or
test
cs
cli
xchg
inc
inc
fcoms
clc
arpl
push
testb
nop
icebp
mov
jns
in
in
lret
stos
or
fisubrs
out
mov
inc
bound
jle
jg
das
push
pop
mov
pop
scas
ljmp
push
je
clc
pop
dec
or
ljmp
out
mov
movsl
mov
pop
xchg
outsb
or
bound
mov
shlb
add
cmp
or
and
jle
in
sub
fdivrp
or
fimull
lock
mov
std
sbb
dec
xor
stos
and
les
fwait
out
add
and
pop
sub
lds
out
shrb
inc
ss
push
lods
mov
jg
repnz
in
test
fldenv
mov
push
and
enter
popf
push
daa
popf
pop
andl
pop
add
adcl
mov
push
jge
fbld
jmp
xchg
push
xor
int
sub
rcr
mov
mov
aas
lret
cld
push
mov
subb
and
incb
arpl
cli
add
out
pop
mov
push
in
scas
mov
sti
shrl
ljmp
adcl
and
repnz
jecxz
fcmovnb
ja
clc
loopne
into
ror
fimull
mov
or
xor
stos
fcmovnu
cli
subb
xchg
adc
es
pop
rcll
shll
mov
xchg
jecxz
xchg
jp
jge
and
std
or
adc
pop
ljmp
lret
insb
nop
lcall
or
sbb
mov
cmc
das
push
mov
xcrypt-cfb
cmpsl
pusha
sbb
xor
cli
push
int
add
mov
dec
loope
or
mov
sub
ljmp
icebp
call
sbb
adc
pop
cli
mov
mov
pop
rolb
sub
sub
sbb
or
mov
sub
scas
jo
xor
clc
decl
lock
push
imul
add
sub
mov
sbb
mov
repz
dec
xor
cmp
add
stc
mov
outsb
xor
aaa
xor
mov
orb
fldenv
mov
aas
push
std
or
add
push
xor
cmpsb
xchg
jp
dec
sbb
lods
fildl
push
mov
jne
enter
fildl
add
mov
aas
out
enter
xchg
dec
std
fidivl
jns
adc
out
xor
clc
das
bound
adc
dec
sub
jmp
popf
mov
into
cmp
data16
lcall
jg
icebp
jae
push
lds
in
xor
pop
push
ret
mov
cli
mov
lods
outsl
cli
or
cmp
push
daa
and
clc
aaa
loopne
adcb
and
cmp
xor
loopne
ja
push
pop
mov
mov
jmp
jne
mov
insl
cs
sar
scas
fstps
subl
test
push
fildl
pop
mov
cmp
dec
ficomps
xchg
adc
mov
fidivl
sub
cli
or
insb
and
sub
xorl
inc
jp
fiadds
imul
and
aad
mov
cli
dec
or
sub
movsb
inc
sub
dec
inc
xor
sub
aad
jnp
lea
pop
loope
clc
dec
push
adc
or
cli
push
aaa
push
jmp
flds
fwait
inc
mov
ljmp
push
dec
add
pop
sti
and
mov
filds
jle
jge
loop
faddl
dec
adcl
stos
inc
fmull
adc
loop
add
bound
outsl
ret
out
push
mov
ror
push
test
test
cld
sub
sbb
rolb
cld
outsl
cmp
test
icebp
inc
pop
jae
lock
push
and
aas
pusha
push
xchg
mov
push
pop
inc
clc
scas
mov
push
sub
jae
adc
cmp
mov
insb
sub
pushl
xor
xor
sbb
aas
jb
jg
add
das
xchg
dec
cmp
inc
jle
stos
pusha
cld
dec
js
push
xor
push
pop
pop
sti
in
pop
dec
sbb
cmp
pop
cmp
mov
add
push
cmp
cmpb
xchg
das
jecxz
xor
shrb
pop
jno
clc
push
dec
fs
ret
pop
addr16
sarb
dec
jo
xor
je
jnp
xchg
stos
clc
push
xor
xor
cmp
bound
pop
xchg
rclb
sbb
mov
fnstenv
ds
scas
mov
lock
pusha
pop
mov
add
cmpsb
cmpsl
scas
push
and
mov
dec
mov
push
ds
shlb
cmc
xor
mov
mov
or
push
or
sub
sbb
mov
xchg
pop
gs
mov
dec
lret
mov
xlat
or
mov
mov
clc
dec
xchg
pop
adc
dec
scas
filds
jl
ret
push
cli
or
mov
daa
lods
cs
or
jmp
sbb
test
xchg
push
jl
adcl
mov
clc
xchg
in
repz
mov
ja
adc
pushf
stos
outsl
mov
dec
dec
outsl
sbb
cmpsb
mov
jne
and
or
es
xchg
subb
add
pop
js
and
das
sar
nop
rclb
or
mov
jl
push
sahf
xor
popa
push
sub
xchg
sbb
icebp
push
dec
push
loope
sti
cwtl
pop
or
inc
push
cli
mov
loop
data16
xor
mov
aad
inc
add
out
add
lods
lock
sbb
fistpll
mov
mov
xchg
cmp
push
cmc
cmpsl
jle
fiadds
jp
lods
inc
mov
stos
sbb
ss
xor
add
cmp
jg
push
add
rcrb
and
filds
jp
and
jg
push
adc
sbb
push
pop
rcrb
in
sti
inc
push
inc
mov
pminub
imul
jmp
mov
xor
shlb
inc
push
ja
lcall
jle
pop
mov
jge
sbb
lcall
test
or
shrb
shll
jmp
scas
rolb
out
mov
stos
cmpb
dec
fcomp
push
adc
dec
in
dec
mov
dec
inc
jg
mov
pop
cld
and
xor
xor
pop
inc
test
mov
jp
push
mov
push
sbb
mov
bound
clc
fisttps
or
jge
out
jb
adc
pop
and
push
test
push
out
lcall
sar
or
cmp
adc
push
pop
inc
jg
inc
sub
mov
data16
lcall
shll
sub
movsl
pop
mov
or
sub
and
pushl
fbld
cli
test
lcall
push
iret
xchg
adcb
call
movsl
mov
push
push
das
cwtl
xchg
add
enter
incb
lcall
mov
lcall
sub
push
sub
push
ds
outsl
orb
loope
movb
xchg
mov
pop
adc
jecxz
out
and
mov
rorb
push
iret
sub
sti
jae
das
lahf
cld
add
lock
push
push
mov
cli
sar
imul
cmp
xor
loope
adcb
jl
mov
mov
cmpb
je
fistl
ljmp
mov
inc
and
mov
jg
jbe
dec
sub
jge
js
and
cs
jbe
test
adc
mov
rcrb
in
fiadds
movb
jbe
out
clc
out
into
mov
inc
add
mov
fsubs
adc
out
pop
hlt
ret
add
mov
jp
inc
pop
negl
lea
and
test
fstl
fildll
mov
das
sbb
inc
xor
fs
push
mov
push
xor
mov
popf
aas
fcomip
push
xor
sbb
pushf
push
push
dec
scas
flds
sbb
push
das
and
lock
adc
mov
inc
fidivrs
cmp
cld
orb
jl
mov
mov
adc
loop
cld
xor
iret
icebp
mov
sub
add
sbb
shlb
out
push
cmpsb
mov
xchg
sub
ds
adc
ljmp
xchg
into
clc
mov
xlat
imul
mov
cmpsl
xlat
cmpb
pushl
subb
jp
mov
xor
arpl
push
cmpb
lcall
mov
ljmp
ret
repz
jae
imul
rcr
pop
cmp
mov
cmc
out
fmull
pop
and
ljmp
mov
mov
mov
les
sbb
sahf
xor
testl
inc
push
out
bnd
mov
dec
sbb
pop
pop
test
pop
sbb
test
dec
ljmp
pushf
das
xchg
outsl
scas
mov
int
dec
adc
adc
js
xchg
push
mov
fbld
fstpt
cli
push
sbb
daa
mov
jae
dec
jge
stos
add
jnp
test
mov
mov
sub
clc
push
or
iret
push
push
test
out
aam
sbb
jp
pop
sahf
je
adc
pop
icebp
dec
bound
jmp
push
push
shr
lcall
add
jbe,pn
xchg
ret
sahf
jae
shlb
icebp
mov
fld
cmp
adc
jnp
and
int
inc
ss
cld
mov
jb
div
mov
mov
or
jg
mov
or
inc
sub
add
or
push
insb
cld
push
pop
mov
movd
lret
jge
decb
pop
or
fs
jbe
cmpsb
push
inc
sbb
dec
fisttps
stos
loope
cmp
push
test
cmp
in
enter
mull
clc
jg
out
mov
adc
fimull
cmp
movsl
jp
xchg
mov
ljmp
lds
sar
add
jmp
xchg
jle
je
test
hlt
mov
test
incl
test
mov
shrb
and
es
imul
loopne
call
into
in
es
push
lahf
cmp
outsl
jecxz
pop
add
repz
or
xor
pop
es
mulb
sahf
xchg
sub
ljmp
pop
xchg
movl
popa
outsl
outsb
loop
xor
test
xor
pop
or
pop
add
ss
push
cmp
push
lods
and
rclb
inc
ss
aas
lea
jb
mov
pop
and
xchg
ret
cld
out
and
mov
jno
movb
enter
aaa
loop
xor
hlt
and
pushl
aad
scas
pushf
mov
mov
les
xor
jnp
ret
test
or
pop
pop
dec
lret
add
fildll
es
ss
outsl
pop
xchg
and
aas
call
xor
das
mov
cld
scas
lcall
test
call
rcrb
mov
mov
push
xor
adc
testl
xchg
jle
aas
or
jb
aas
jmp
ljmp
pop
add
loopne
lds
ljmp
mov
jns
cmp
cli
mov
adc
push
cmpsb
xor
pop
sbb
mov
lock
push
fmuls
cs
xor
jno
std
sbb
mov
sbbb
jp
js
clc
jmp
popa
push
add
in
fwait
je
scas
test
xchg
jnp
int3
in
mov
jmp
mov
cmp
sahf
and
dec
decl
add
or
test
loop
scas
cltd
xor
pusha
jge
lds
and
stc
lods
ds
mov
ljmp
cmpsl
dec
jmp
cld
popa
insb
mov
mov
cld
mov
call
adc
pop
mov
push
sbb
cli
mov
jg
and
movsb
and
jge
and
in
lods
pop
hlt
movl
xchg
mov
das
cli
jmp
out
xchg
xor
ret
dec
sbb
outsb
pop
jp
dec
scas
mov
jbe
movsl
push
inc
inc
mov
jge
clc
je
mov
rolb
fwait
sub
xabort
ljmp
push
adc
imull
and
jl
mov
mov
jns
sbb
xchg
popf
xor
push
stos
xchg
or
aaa
push
clc
mov
mov
mov
and
sbb
jg
addr16
push
add
sar
sbb
test
jno
and
cmpsb
cmpsl
add
xchg
add
push
jge
test
int
or
push
dec
arpl
pop
jae
xor
mov
addr16
pop
ja
lea
jg
mov
and
pop
pop
clc
arpl
loope
mov
out
test
cmp
add
add
push
add
fbld
mov
pushf
jb
mov
push
add
pop
push
push
inc
cld
sub
sub
jb
pop
fwait
fs
cmpsb
push
fimull
fistps
jg
movsl
leave
js
sub
push
ret
cmp
and
lahf
cli
push
mov
popa
or
fisubs
push
mov
mov
xor
insb
and
fisttps
clc
fbld
dec
or
lds
das
add
pop
std
push
icebp
dec
lock
sub
lcall
fdivl
mov
rorl
jp
rcrb
pop
and
jg
pop
inc
cld
push
jb
jl
mov
fiaddl
adc
arpl
ret
cwtl
jnp
fiaddl
add
ret
aaa
rorl
cmp
leave
inc
sbb
sbb
aaa
or
in
insl
mov
fsubrs
les
rcrl
into
lcall
push
jbe
test
repz
cld
ja
inc
mov
cmp
xchg
pop
fnstsw
mov
inc
jecxz
inc
mov
inc
andl
rorb
jmp
sub
or
push
mov
jg
inc
insb
jb
mov
pop
pusha
lret
pop
push
cmpsb
nop
xchg
sub
data16
aam
mov
test
inc
call
pop
fbld
mov
jno
add
push
xor
inc
lahf
jg
mov
or
scas
xchg
xlat
pop
sub
test
test
push
sbb
ja
jo
cmp
stc
jp
subl
shlb
pop
and
pushf
mov
sbb
add
jae
and
lock
mov
in
shrb
push
push
stos
push
or
push
dec
test
lret
cmp
mov
out
pop
xchg
in
sahf
dec
es
ja
mov
cmpsb
scas
rclb
pop
or
arpl
pushf
into
insl
cmp
inc
add
or
adcl
ljmp
ret
adc
sbb
adc
sbb
mov
mov
roll
movsl
movsb
jae
sub
jne
jb
imul
fwait
sti
leave
dec
push
aam
cltd
xchg
repnz
push
mov
inc
inc
or
hlt
popf
rorb
cmp
and
dec
aad
outsl
sub
testl
jnp
mov
or
test
dec
les
jp
push
lds
pop
add
lret
clc
ficomps
cwtl
and
push
sar
movsb
mov
jg
cmp
clc
mov
js
mov
jnp
inc
or
inc
test
xor
cld
jg
mov
idiv
mov
inc
scas
add
dec
mov
pop
subl
test
rcll
mov
jmp
inc
mov
push
mov
pop
callw
inc
jp
pusha
lcall
inc
jl
pop
push
ljmp
cmpsl
push
inc
cmpsb
mov
pop
pop
push
sub
mov
int3
lea
sbb
cs
inc
xor
jno
mov
call
mov
roll
cmpb
pop
sub
icebp
iret
call
fldcw
out
mov
enter
dec
lock
cs
jg
cs
aas
fcomip
call
std
stos
fldl
pop
das
out
add
inc
push
xchg
push
cli
push
mov
cmp
out
push
or
mov
lods
aaa
outsb
sti
pop
inc
xchg
pop
or
inc
std
fldenv
jae
dec
inc
pop
mov
inc
jbe
loope
rcll
js
sti
popa
mov
mov
insb
lahf
mov
mov
cld
in
lods
push
jae
enter
pushaw
mov
pushl
lcall
insb
popf
xchg
aaa
push
rorb
xchg
aaa
sbb
jno
sbb
pop
das
inc
pop
leave
push
loopne
jl
das
es
stos
bound
testb
jecxz
pop
data16
lea
sbb
cmp
js
pop
xchg
mov
add
jg
cli
mov
jmp
jle
dec
add
jo
testl
add
lods
inc
xor
repz
into
scas
mov
pop
fs
cli
in
or
testb
movsl
mov
fstpl
insb
adc
in
test
cmpsl
mov
cvtps2pd
xor
jge
in
fidivrl
repnz
inc
cld
xchg
mov
xchg
push
mov
repnz
add
inc
loopne
adc
lcall
xor
jge
in
ja
xor
inc
push
into
popf
scas
xchg
inc
push
popl
scas
or
push
jnp
outsb
repz
sub
adc
pushl
mov
sub
jecxz
mov
jae
out
xchg
push
pop
test
jnp
in
mov
adc
icebp
in
fwait
lahf
mov
scas
fwait
shlb
push
lret
ret
das
repz
adc
pop
mov
adc
mov
mov
mov
popa
cld
jge
dec
xor
jne
andb
mov
jb
out
icebp
push
mov
scas
adc
pop
cmp
pop
push
push
lock
mov
pop
out
cs
ss
push
cmp
mov
cmp
ja
ficomps
mov
lods
les
test
jb
scas
push
fisubrs
loopne
fists
rol
lcall
cmp
pop
mov
push
jae
aad
rorb
or
in
cwtl
inc
push
and
sarl
add
je
scas
pop
scas
dec
imul
sub
sub
pushl
mov
xchg
jle
in
fiaddl
repz
je
std
icebp
js
mov
inc
dec
iret
mov
jl
les
clc
cmpsb
cli
and
cwtl
stos
dec
xor
push
pop
decb
lahf
arpl
dec
cli
mov
add
hlt
jg
shl
out
mov
pop
mov
sub
mov
lock
push
lea
ja
mov
add
xchg
push
jg
and
xlat
inc
iret
lock
push
add
sbb
push
int
aad
push
add
ljmp
loope
lcall
cmpsb
lcall
xorb
fbstp
or
and
lea
lcall
jle
push
mov
imul
xor
ffreep
mov
cmc
xor
and
into
inc
or
out
xchg
cld
mov
mov
inc
ja
push
cli
into
daa
lds
int
push
sub
loope
jmp
js
std
aam
inc
adc
or
test
xchg
inc
das
outsl
jb
outsl
lret
sarl
inc
dec
jecxz
fadds
jne
mov
cmpb
mov
mov
jg
lock
pop
mov
and
sub
or
movsl
int3
and
js
mov
lock
add
mov
mov
add
xor
pop
imul
adc
cmp
cmp
lock
mov
sub
sub
ror
sub
cmpsb
inc
cli
jg
andb
jno
cli
int3
sbb
fadds
std
mov
push
addl
jp
adc
push
popa
xor
loope
cmp
mov
jb
xor
pop
inc
jo,pn
mov
cli
and
jbe
scas
sahf
pop
mov
stc
imul
sahf
mov
adc
jge
xchg
or
cmc
idiv
dec
xor
test
clc
cli
loop
add
mov
adc
sar
fldcw
or
mov
movsl
cmp
in
andl
push
push
xor
mov
clc
aad
add
pop
inc
nop
sub
rcrb
add
int3
outsb
jl
jbe
xor
mov
call
sbb
or
fsubs
jo
or
int
mov
or
add
aaa
lret
inc
loopne
jmp
mov
sbb
mov
cmp
lret
push
mov
sahf
sbbl
arpl
mov
push
lods
sub
mov
adc
lret
push
call
cmpsb
cmp
mov
inc
mov
lcall
and
adc
pop
mov
addb
cmpsl
jecxz
js
dec
mov
pop
popf
inc
mov
push
rorb
pop
jle
ss
push
dec
mov
sbb
mov
dec
pop
or
adc
lcall
stc
mov
aam
repz
jnp
mov
call
or
out
mov
dec
pop
add
jnp
das
std
cmc
lock
ret
pop
pop
scas
in
stos
pop
outsb
addb
jg
sbb
push
scas
iret
cmp
or
or
cmp
cld
or
aas
pop
fistl
lret
cmp
xchg
or
jbe
jg
jge
call
movsb
or
leave
and
int3
int
loope
mov
mov
cmc
jp
dec
iret
ret
mov
js
push
repnz
push
mov
ret
mov
cmp
loop
aaa
or
fildll
inc
adc
aam
movsl
pop
dec
mov
inc
scas
or
pop
push
out
mov
push
and
pop
mov
nop
fimuls
xchg
jbe
pop
inc
cmp
sbb
inc
mov
xor
adc
mov
test
stos
pop
dec
mov
jae
testb
stc
fwait
aas
xlat
shl
cmpsl
cs
enter
adc
mov
aaa
jo
add
or
and
sahf
and
call
add
ljmp
mov
ss
cmpsl
push
icebp
or
call
fwait
jp
mov
pop
loopne
cmpsl
shr
xor
js
pop
aad
orl
and
pop
pop
icebp
dec
push
and
fisttps
movsb
pop
cmpsl
or
sbb
xchg
sbb
fwait
fs
cmpsb
cli
jg
or
push
jne
sub
inc
mov
fcmovbe
xor
pop
lods
and
jbe
test
bound
mov
fidivrs
lock
sub
mov
out
imul
lret
jge
inc
xchg
mov
sub
aam
and
mov
dec
test
xor
ljmp
cmpsb
shl
pop
test
mov
addl
jns
clc
aaa
call
rcrb
ficoml
mov
and
popf
mov
fidivrl
xchg
jns
ljmp
insb
insb
sbb
addb
jle
into
cld
pop
ss
fistl
push
pop
stc
inc
inc
hlt
cltd
hlt
adc
inc
cs
cld
jmp
mov
loope
jecxz
clc
sub
sbb
fistps
push
cld
mov
or
pop
in
mov
lods
int
dec
std
xorl
or
fdivs
hlt
inc
push
shl
mov
or
clc
mov
dec
mov
push
das
loope
mov
xchg
ja
decl
fistl
push
dec
data16
aad
xor
push
filds
iret
mov
mov
clc
decl
add
adc
lods
push
dec
sbb
or
ret
loop
jg
mov
inc
sbb
rolb
xchg
pop
dec
jecxz
jbe
pusha
cmpsb
add
mov
fnsave
and
lcall
movb
cli
mov
xchg
lea
jae
sub
push
add
or
pop
inc
sub
sub
aaa
jmp
push
and
dec
pusha
dec
pop
mov
adc
ret
xchg
jb
xchg
lock
or
imul
jb
in
jb
jg
pcmpeqb
push
stc
inc
inc
dec
add
push
jnp
dec
push
pop
sahf
push
incl
mov
iret
pop
fsubs
je
das
sti
and
push
push
cmc
mov
adc
add
fwait
pusha
bound
xchg
mov
cltd
pop
mov
xorb
push
cmpb
jbe
sub
stos
dec
stos
add
jle
mov
sar
sbb
sub
scas
adc
data16
pop
das
in
xchg
mov
inc
cld
or
imul
push
jg
push
rolb
add
ss
mov
mov
ret
xchg
subl
cmpb
bound
or
insb
push
cmc
jge
jno
pop
pop
fucomi
bound
movsl
andl
jae
leave
inc
push
or
add
inc
js
stos
jp
jne
cld
xchg
or
add
arpl
cmp
xchg
lcall
inc
xchg
cmp
cmp
add
pop
adc
outsb
adc
adc
pop
lock
dec
add
pop
rcll
jl
sbb
or
dec
push
pop
add
cmpsb
dec
jno
or
add
sub
and
daa
mov
negl
add
jg
cmp
mov
faddl
cmp
loopne
pushl
enter
cmpsb
push
aad
lret
repz
cmp
lret
mov
jbe
xchg
fwait
jbe
scas
popa
f2xm1
dec
daa
addb
adc
cmp
or
adc
movsb
or
lcall
cmp
mov
inc
and
dec
psubsb
cld
mov
pop
leave
xorl
mov
push
cmp
lds
ret
aaa
dec
dec
ret
call
xchg
mov
mov
out
incl
test
and
xor
sahf
fnstenv
je
sub
int
xchg
cmp
jle
scas
int
stos
xor
inc
sub
jle
jp
loopne
inc
imul
and
jg
cmpsb
xchg
mov
call
and
or
scas
sbb
sub
std
jg
cmp
pusha
lods
mov
out
cmpsl
or
xchg
inc
pop
mov
lea
and
mov
andl
dec
mov
or
rol
scas
mov
mov
imul
or
cmpsl
jae
pop
fcoms
jno
pusha
jecxz
lds
in
pop
adc
inc
adc
rcrl
push
dec
test
add
push
clc
mov
stos
mov
mov
push
inc
and
inc
inc
mov
cmp
int
mov
out
loopew
lahf
add
lds
xchg
sti
mov
bound
and
push
mov
iret
pushf
movsb
mov
adc
insb
mov
cli
test
cmp
lods
cmpsb
jbe
and
inc
add
mov
lcall
ret
inc
push
incb
sbb
dec
loop
sub
icebp
jmp
pop
hlt
sti
mov
and
xchg
outsb
xchg
out
push
push
mov
lea
das
adc
xorl
mov
in
pop
aaa
mov
push
mov
pop
pop
out
dec
rolb
lahf
ret
fistps
cmpsl
mov
rorb
test
fstp
cli
lcall
xchg
push
incb
jne
dec
add
testl
fbstp
cmp
mov
and
outsl
out
dec
test
adc
sub
and
ljmp
pop
push
dec
sub
aad
nop
add
mov
lret
fisttps
xor
loopne
ss
in
test
push
mov
mov
adc
pop
ret
test
mov
sub
or
aam
lret
push
push
mov
push
scas
lods
mov
lea
sbb
mov
clc
mov
jne
add
pop
push
rclb
pop
or
jmp
int3
mov
xor
shll
nop
xchg
xlat
adc
xlat
push
cld
aaa
dec
or
inc
push
jnp
lret
mov
mov
insl
cltd
or
cmpsl
mov
mov
rcr
push
jecxz
sbbl
leave
pop
rorb
jg
push
aad
and
js
pop
mov
lret
jns
jbe
or
sbbl
in
inc
add
pop
lock
in
cmpsb
lock
popa
rclb
leave
dec
sbb
mov
aas
hlt
pop
push
inc
push
or
cmpsl
and
fistpll
rcrl
mov
jns
sarb
fisubl
loope
int
lret
push
sbb
loope
ret
ja
adc
aaa
push
inc
outsl
incb
jmp
jmp
std
pop
ja
push
sbb
out
inc
je
pop
rolb
add
scas
push
mov
fadds
and
sbb
inc
sbb
push
cmp
fbld
mov
push
test
lock
cmpsb
inc
xchg
push
push
fidivrl
xchg
lock
out
add
icebp
stos
movb
nop
inc
xchg
rorl
arpl
je
cmpsl
xor
push
adc
cmp
call
jp
clc
xchg
cs
pop
ljmp
or
je
ds
bswap
std
scas
insb
push
ss
aaa
inc
sub
mov
sbb
icebp
push
sbb
hlt
daa
outsb
subl
mov
or
fdivp
ja
push
or
addr16
rcrb
xchg
movsb
xchg
lock
push
xchg
xchg
jl
and
jb
add
lock
and
loopne
pop
loope
outsb
jecxz
cltd
das
add
adc
andb
sub
dec
mov
cmp
subb
nop
pop
arpl
fiaddl
decl
mov
xchg
xchg
das
jp
rorb
jb
sbb
mov
or
mov
jne
subb
push
add
aas
push
clc
fwait
jg
sub
ja
and
mov
or
out
cmpsl
pushf
popf
rcr
mov
xor
ret
mov
call
stos
or
mov
loope
lock
and
mov
and
pop
inc
mov
mov
in
push
incl
test
mov
sbb
ljmp
ret
jns
xor
and
fldenv
fcomps
cmc
jg
call
inc
cmp
icebp
scas
add
sub
mov
cmc
ljmp
inc
lahf
dec
add
push
repnz
mov
in
shll
mov
xor
clc
push
mov
dec
scas
loopne
mov
roll
cmp
xchg
es
sub
sbb
rclb
fimull
xor
push
cli
decl
sar
mov
out
les
jecxz
shrb
lret
mov
decb
add
test
mov
add
aaa
scas
scas
insl
mov
or
push
ss
ret
cli
pushl
shlb
jle
in
push
adc
xchg
int3
mov
incl
xchg
pop
sahf
flds
mov
xor
adc
test
mov
fidivl
xchg
or
hlt
popa
sti
inc
mov
inc
or
lds
outsl
mov
bnd
les
pop
cmpl
mov
adc
loop
lods
fs
mov
cs
out
jno
scas
fistpl
fisubs
inc
mov
cmpsl
jg
cli
incl
fidivrl
int3
push
adc
mov
mov
aad
in
cwtl
jbe
jl
or
aad
mov
insl
cmp
jne
jmp
jae
xchg
mov
lcall
cmpsl
std
das
nop
fs
cmp
hlt
cmp
xor
movsb
mov
ret
popf
cld
mov
shll
mov
mov
call
jecxz
sti
scas
out
and
add
inc
jg
xor
mov
fsubrl
xlat
xchg
mov
xchg
dec
lock
lea
movsb
jg
push
lcall
pop
adc
pushl
push
test
adc
mov
imul
jmp
in
cmpb
inc
push
inc
stos
mov
fdivp
outsb
jle
mov
rcll
hlt
scas
mov
ja
test
cwtl
fisttpl
aas
int3
stc
or
cmpsb
setl
xor
pop
cmp
fsubl
mov
cltd
lods
pop
sbbl
mov
and
cmpl
jnp
mov
incl
repz
mov
pop
xchg
test
mov
mov
mov
cmp
cmpsl
add
mov
call
incl
nop
jle
push
sub
or
push
lret
xchg
repz
push
fs
sbb
adc
hlt
jge
loope
test
cltd
and
cmpsb
push
cmp
sar
bound
sub
outsl
jb
jns
fstl
push
jg
icebp
dec
cmpsb
fiadds
or
sub
ret
mov
push
test
mov
sbb
mov
jmp
out
pop
je
xor
loopne
add
push
cs
inc
call
test
pushf
ret
xchg
push
sub
jg
mov
push
push
ss
int3
fnstsw
fmull
stc
std
outsl
xorb
decl
dec
mov
jp
mov
into
lods
cwtl
sarb
inc
and
in
xchg
sub
xor
jmp
xchg
lods
fwait
push
movsl
mul
cmp
in
inc
loopne
push
scas
push
into
pop
fwait
jbe
mov
loop
or
mov
sub
ja
cli
out
nop
lods
xchg
in
jbe
adc
in
loop
scas
subl
loopne
push
jg
in
pusha
jmp
daa
faddp
or
add
jne
pusha
pop
std
fwait
sub
xor
out
shlb
pop
cmpsb
int3
mov
mov
jae
stc
mov
cld
decl
mov
jno
leave
lods
insl
pop
mov
mov
add
rcll
xchg
enter
cmp
fwait
lods
adc
mov
mov
loope
scas
or
je
xchg
cmpsl
data16
jne
xor
outsb
or
mov
imul
pop
das
int3
repz
mov
mov
hlt
jmp
shrb
test
fcmovbe
inc
cmp
test
jp
push
repnz
das
add
xchg
xchg
cli
in
imul
lahf
decl
loope
inc
cmp
xor
outsl
cmc
fcoml
inc
inc
lods
inc
loope
push
data16
scas
imul
and
scas
mov
inc
pop
shll
inc
sub
xchg
cmpsl
lret
cmpb
dec
push
jle
inc
mov
movsb
mov
inc
inc
push
lahf
jmp
mov
fstl
sbb
jb
rcll
inc
in
test
lock
mov
jg
mov
loop
imull
outsl
clc
outsl
scas
jno
call
push
inc
jge
enter
or
push
or
decl
add
dec
xchg
push
leave
inc
jnp
sarb
int
pop
int3
inc
test
orl
and
ret
cmpsb
push
inc
pop
dec
or
hlt
insl
loope
pop
sub
je
xchg
push
fsubr
aas
or
ror
lea
inc
or
pop
add
jae
inc
mov
sbb
lods
test
loopne
sub
stos
lods
add
inc
lock
or
xchg
dec
rcr
mov
aas
mov
imull
mov
fdivl
and
int
ljmp
fistps
popf
and
fisttps
sub
rcrl
push
push
adc
adcb
xchg
mov
dec
ljmp
insl
jp
icebp
sbbl
or
mov
ficoml
pop
adc
adc
inc
shlb
xchg
xchg
mov
xor
ljmp
imul
push
push
xchg
push
jo
mov
mov
or
add
mov
mov
fildl
insl
pop
dec
fdivrl
xchg
and
ljmp
or
icebp
adc
test
into
in
adc
xchg
aam
pop
nop
xor
or
popa
jl
cmp
push
hlt
pusha
and
shl
inc
mov
lcall
aaa
xchg
rcrl
xchg
cmp
bound
mov
mov
mov
mov
repnz
jne
sub
cmpsl
lcall
mov
repnz
add
push
dec
clc
ds
and
xor
rorb
cld
and
sub
pop
jl
ds
dec
out
push
mov
icebp
jo
xchg
popf
stc
stos
mov
es
sub
out
notb
inc
cmpxchg
scas
shl
pushf
dec
jecxz
cli
fstpl
push
mov
cs
sbb
cs
cli
aam
push
and
into
mov
add
fwait
adc
test
jmp
adc
les
xchg
test
clc
xchg
into
mov
into
ljmp
and
movsb
push
imul
cltd
fildl
mov
leave
pusha
push
and
inc
cmp
jg
pop
cmovs
lods
aam
push
fldenv
lcall
pop
mov
scas
mov
loop
inc
pop
push
leave
xor
jmp
lock
rclb
movb
lret
testb
cli
scas
jge
addr16
dec
popa
jecxz
mov
push
adc
adc
cmp
mov
cltd
jbe
push
or
xchg
push
pop
outsl
dec
jle
xor
test
xor
stos
push
jmp
pushf
mov
stos
push
cwtl
jbe
ror
sub
lock
aaa
sbb
add
cwtl
inc
adc
sbb
mov
sahf
push
or
call
js
test
xor
xor
sub
sub
inc
xor
adc
jg
mov
xor
push
add
mov
arpl
mov
subl
mov
cld
aas
mov
mov
lock
jge
movsb
bound
mov
adc
cmp
pop
jno
jg
std
mov
pop
fdivp
mov
js
call
decl
mov
push
jno
sbb
pushf
xchg
xor
mov
cs
popf
jno
out
adc
call
cmp
nop
rolb
xor
or
pop
test
jae
mov
pop
dec
push
sbbb
push
sbb
ljmp
test
jge
ja
aad
add
pushf
push
push
into
cmc
sub
or
xchg
dec
dec
mov
jle
sarb
orl
pushf
mov
cmp
or
inc
stc
inc
das
adc
add
sub
in
cmp
clc
decl
lea
stos
out
mov
and
cmp
mov
lock
fildll
ffreep
ficoms
or
mov
xor
pop
adc
nop
and
push
push
lcall
or
lock
nop
ja
out
add
add
ljmp
fstl
push
dec
pop
in
sbb
add
sub
sbb
adc
stos
shlb
inc
lret
push
xchg
pop
xorb
repz
incl
push
test
stos
jg
clc
sbb
pop
jecxz
xchg
add
imul
jg
rcll
xchg
sbb
pop
jg
or
stos
push
and
cmpsl
pop
ret
mov
scas
ss
loop
ret
or
ret
hlt
data16
jle
jl
pop
or
and
inc
out
mov
imul
stos
pop
int3
movsb
test
fildll
cmp
cmp
jb
or
cmp
jg
jecxz
mov
js
jl
lea
sbb
mov
ret
popf
bound
add
test
mov
mov
movsb
jle
cs
push
aas
in
out
aam
stos
push
mov
jne
mov
dec
push
icebp
jle
xchg
jbe
nop
subb
fbld
xor
int3
cld
data16
xchg
repnz
sub
aas
std
pop
xchg
add
lcall
outsb
inc
shll
mov
out
add
inc
fldenv
test
lret
mov
iret
cltd
dec
xchg
push
lock
adc
test
call
faddl
inc
ja
incl
loopne
es
aaa
mov
pop
subb
adc
in
imul
inc
incl
js
xchg
inc
jo
stc
lcall
sub
sbb
inc
leave
mov
jp
jae
pop
or
mov
data16
fs
sub
and
pop
mov
cld
jmp
dec
fsubrl
mov
jns
nop
jle
mov
stos
or
jle
test
loopne
outsb
mov
in
loopne
shlb
lcall
xor
mov
insb
outsb
jle
in
jge
pop
xchg
jmp
popa
lock
jg
shlb
dec
add
pop
stos
xor
and
andb
pop
out
mov
fbstp
test
fbld
gs
outsl
inc
shrl
jns
cmpb
out
rcrb
jbe
mov
in
ljmp
mov
and
pop
lahf
xor
mov
call
shl
mov
cmp
outsl
ret
push
bound
adc
push
repnz
ljmp
inc
push
idiv
sbb
pop
mov
mov
out
sar
mov
jg
jb
mov
stos
mov
inc
push
in
sahf
push
in
fldenv
ja
lcall
lcall
leave
sbb
movsl
in
fildll
adc
xor
test
xorb
pop
push
mov
inc
in
out
int
popl
in
xchg
push
hlt
jmp
testl
or
addr16
roll
cli
fldlg2
shrb
data16
dec
ret
pop
jmp
sub
or
sub
cld
push
loop
clc
cmpl
sti
cld
clc
lcall
mov
xor
pop
push
std
push
adc
leave
shlb
xchg
xchg
aas
sub
dec
jo
inc
jb
pop
cmp
inc
ljmp
add
cwtl
mov
pusha
dec
gs
sub
loop
pop
add
xchg
aad
jmp
pop
fcmovb
jnp
inc
push
push
aaa
xchg
cwtl
mov
mov
sahf
pop
jp
pop
sbb
add
dec
xor
out
cli
das
push
xchg
mov
mov
int3
data16
out
icebp
ljmp
jae
inc
aas
mov
enter
out
sub
jecxz
mov
jg
sub
lods
push
jne
push
xchg
xchg
hlt
xchg
jle
sbb
mov
dec
sbb
mov
sti
cwtl
pop
cmp
xchg
lret
test
jg
push
push
lret
jecxz
jno
fildl
cld
popf
and
es
int
popa
jle
sar
outsl
sahf
rcrb
loop
jg
jle
xchg
roll
cmpsb
pop
inc
cld
decl
jecxz
cltd
test
mov
shrb
incl
fcmovu
dec
and
pop
push
arpl
cmp
pop
inc
mov
push
xchg
outsl
fildll
ficoml
imul
xchg
enter
fidivs
mov
jo
push
xor
movsb
xchg
cmpsb
aaa
xlat
adc
in
fildl
outsl
jbe
inc
mov
dec
adc
cld
cmp
jne
add
dec
mov
mov
xchg
sbb
xchg
cmp
in
jne
je
adc
dec
mov
add
inc
cltd
icebp
pop
xchg
je
shll
push
inc
popa
enter
ljmp
cli
sarl
outsl
push
push
adc
jecxz
or
scas
scas
add
push
inc
jns
iret
data16
repz
nop
mov
push
lock
sti
jecxz
push
jbe
cmp
dec
aas
test
ljmp
pop
test
cmpl
mov
adc
int3
mov
bound
dec
incl
pop
pop
popf
shlb
repnz
int3
push
mov
nop
inc
sahf
das
jno
push
popa
or
fists
fidivs
in
sub
fcomi
add
xchg
decb
jb
sub
or
cmpl
jg
inc
push
ja
push
adc
shll
inc
ds
loope
xchg
movsb
or
outsl
iret
jg
fnstsw
push
and
aad
adc
push
add
sarl
cmpsb
xchg
rcr
arpl
ljmp
sbb
in
jae
outsb
and
xchg
repnz
xchg
jne
xchg
mov
jl
and
jmp
or
and
enter
pop
push
inc
mov
jp
cmp
hlt
and
push
popa
jecxz
mov
jnp
xlat
mov
and
clc
lcall
mov
aaa
popa
push
aad
enter
pop
loop
stos
inc
add
xor
inc
mov
mov
sahf
dec
cmp
fists
mov
bound
pusha
mov
pop
int
fs
lds
xor
xchg
cmpb
pushl
adc
mov
gs
xchg
mov
xor
fidivrl
decl
or
mov
pop
or
and
cmp
insl
lods
and
mov
bound
stc
pop
mov
addl
and
jg
mov
fs
daa
clc
outsl
push
sahf
xchg
aam
js
arpl
cmp
notb
dec
sbb
pushl
adc
jns
fsts
or
in
or
jmp
mov
mov
mov
pop
pop
sbb
fnsave
inc
dec
push
jo
jnp
inc
xor
stc
movsl
jmp
daa
out
pop
loop
cmp
test
sub
ljmp
movsl
adc
les
jbe
outsb
inc
int
outsb
adc
inc
mov
fwait
mov
ret
jne
jecxz
aaa
jo
inc
icebp
xlat
push
xchg
clc
xchg
cmpb
xor
test
mov
lcall
jno
leave
cmpsb
cmpsl
mov
sbb
xchg
xor
ljmp
jle
sti
mov
loop
cmp
mov
clc
cmpsl
mov
xor
or
mov
push
movsb
loop
jbe
int
sub
pop
cmc
mov
xlat
pop
or
sarb
subb
int
popa
imul
int3
jo
sbb
fisttpll
mov
sbb
lcall
movsb
mov
js
pop
mov
lret
dec
xor
fmulp
adc
aaa
jecxz
lods
mov
inc
inc
dec
pop
inc
xor
cmpl
jae
inc
outsb
dec
push
lods
in
push
adc
cmc
mov
dec
sbb
ret
aam
mov
jg
hlt
jno
pushl
add
arpl
mov
or
testb
in
xlat
add
sbb
repz
int3
inc
push
xchg
mov
lock
xchg
push
scas
in
mov
lcall
jge
adc
dec
test
jne
xchg
loop
stos
xchg
ficoms
cmpb
shll
popa
jne
int3
sti
inc
or
out
pushl
int
repz
mov
jae
fwait
insb
iret
jge
cld
adc
push
fmull
mov
jecxz
add
in
decb
lods
mov
sub
jne
fidivrl
xchg
roll
fldt
rol
out
ret
pop
sub
add
jmp
mov
outsb
fcomip
jns
cmp
popa
pop
inc
xor
cmpb
sbb
ficoml
mov
clc
stc
call
subb
pop
insl
pop
jnp
push
mov
xor
sub
jno
stos
jg
push
pop
divb
cs
dec
cmp
ret
add
sar
fists
push
jns
xchg
adc
dec
mov
mov
cltd
sar
pop
add
call
inc
ss
test
lods
lcall
jmp
pop
mov
rcl
out
cmp
shll
mov
jp
push
shlb
pop
in
jo
cs
dec
les
and
or
xorl
xchg
outsl
jp
stos
mov
dec
mov
sahf
xchg
gs
mov
sbb
jl
xorl
adc
add
jl
xchg
lods
and
gs
xchg
or
test
add
cwtl
inc
sbb
add
sub
sub
dec
inc
std
outsl
ds
popl
mov
lea
jle
js
dec
jb
pop
clc
inc
ja
xchg
neg
andb
pop
hlt
push
fidivrs
aaa
inc
in
jo
add
push
mov
iret
movsl
leave
clc
cld
xchg
fchs
pop
sbbl
jbe
gs
pushl
mov
in
push
inc
inc
push
xor
cld
cld
mov
std
mov
sbb
ret
in
sub
das
sub
call
rcr
jp
scas
insb
lcall
or
xchg
jmp
jbe
jb
jle
jae
sbb
ret
jp
into
test
mov
push
dec
jno
sub
in
jp
movsb
cmp
popf
ljmp
pushf
repnz
jnp
repz
push
pop
addr16
notb
mov
push
data16
insb
push
or
iret
mov
lcall
clc
jmp
shrb
int3
shlb
mov
decl
adc
aad
sub
jle
out
or
loope
int3
pop
add
cltd
push
adc
pop
insl
dec
mov
cli
pop
and
and
cs
test
int
mov
add
cmp
cmp
test
popf
aad
lahf
addr16
dec
cmp
jmp
scas
xchg
lock
xor
cmpsl
pop
std
out
jg
jns
pop
mov
or
cmp
fwait
es
in
push
jno
dec
push
enter
incl
out
or
lock
fs
pop
xchg
dec
pop
rcrl
lcall
jns
pop
push
xchg
ret
dec
xchg
cld
out
cmp
ret
repz
push
mov
inc
dec
pop
iret
xchg
jbe
out
les
jbe
outsb
dec
dec
aas
xchg
loopne
push
lcall
mov
mov
out
mov
std
jg
pop
xlat
out
mov
ljmp
arpl
fcompl
mov
push
adc
mov
clc
enter
sbb
lret
out
sbbl
repz
insb
push
div
push
and
xchg
call
pop
addb
jp
pushf
sti
shlb
test
lret
pop
fadd
inc
jl
lods
inc
push
das
jmp
pusha
in
sub
sub
pop
xchg
mov
out
aas
insb
clc
dec
cli
negb
mov
orl
inc
push
mov
pop
jns
mov
gs
rcr
push
fldcw
xchg
cld
stc
mov
ds
jle
scas
dec
ja
cs
jae
add
xchg
or
icebp
js
push
aaa
lods
push
pop
out
lret
in
mov
out
icebp
fists
pop
push
fsubr
or
push
int3
fdivrs
sbb
sti
pop
sbb
dec
adc
cld
xchg
or
pushf
push
les
inc
test
call
sub
loopne
test
cmp
movsb
mov
rolb
cmp
icebp
jnp
fildl
sub
in
jmp
into
repnz
add
out
addr16
xchg
xor
movsb
fistl
cs
out
xor
das
shrb
mov
dec
sub
gs
jb
fstl
out
sbb
xlat
mov
fistl
xor
js
lds
int
mov
icebp
aas
sub
push
cmpsb
xchg
shll
mov
xor
mov
pop
call
jno
ss
dec
inc
xchg
xchg
cltd
fst
push
pop
inc
jp
mov
je
clc
push
dec
or
cmp
ljmp
xlat
sbb
test
cld
test
push
or
movsb
mov
loopne
das
cli
clc
push
pop
or
dec
dec
ja
pusha
xchg
dec
sbb
fimuls
lock
xor
cs
cld
jmp
sub
xor
jg
movsl
fs
fidivrs
ret
dec
jg
int3
ja
call
cltd
xor
pop
mov
mov
mov
cli
cld
fdivl
test
cli
mov
je
test
adc
leave
cmpsl
dec
movsb
mov
mov
lcall
out
insl
ret
out
fcmovne
pop
mov
jmp
cltd
daa
pusha
cld
decl
pop
sub
lea
pusha
cld
fisttps
push
cmp
jbe
shlb
mov
call
jb
mov
sub
mov
push
sbb
mov
inc
arpl
inc
das
cmp
mov
leave
testl
dec
out
push
inc
imul
xchg
imul
inc
arpl
sbb
jmp
adc
dec
jns
sub
mov
hlt
pop
mov
in
adc
scas
ss
in
push
dec
adc
lcall
imul
int3
subb
bound
add
jmp
insb
and
loop
sahf
stos
ret
sbbb
pop
cld
stos
add
rcll
cmp
aam
mov
xor
pop
insl
std
jmp
mov
mov
xchg
cmp
mov
jbe
pop
adc
pop
test
mov
inc
clc
jb
jmp
dec
neg
repz
inc
jg
mov
or
pop
cmp
stc
pop
adc
push
fisubrs
stos
lret
aam
cli
out
mov
push
imulb
pushf
in
loop
test
aam
mov
inc
jge
data16
jns
out
mov
pop
fildll
mov
shlb
lea
adc
jne
pop
addr16
push
call
pop
jg
ss
dec
push
push
test
jb
cwtl
repnz
lods
loop
adc
out
lock
mov
xchg
rolb
out
dec
or
fbld
loopne
mov
cmpsl
cmp
dec
xor
sub
shlb
out
testb
stos
mov
lds
fstps
and
scas
subl
ja
popa
outsl
imul
lcall
mov
rclb
sti
mov
xchg
dec
add
dec
ljmp
pop
daa
xor
mov
dec
mov
and
int3
jno
cltd
cmp
jg
lds
jb
call
mov
ljmp
lea
test
cltd
negl
int3
jbe
jle
xor
lret
add
notl
mov
mov
imul
cltd
push
adc
lock
ljmp
cmp
call
xor
aaa
push
mov
sbb
decl
sbb
jecxz
pop
mov
pop
sub
clc
fistps
out
cli
dec
ret
fimull
fidivrs
mov
je
fistpll
fwait
out
xchg
mov
mull
xchg
fcompl
lcall
mov
sub
hlt
lcall
scas
stc
jb
inc
aam
or
sub
fmulp
dec
mov
cmp
in
shlb
loope
rcll
iret
std
push
gs
inc
sti
sarl
enter
in
pushf
cmpsb
pop
and
jo
mull
loop
iret
sbb
and
ret
rorb
ljmp
mov
or
loop
stc
insb
ds
movsl
jmp
std
cld
or
std
call
jmp
inc
adc
jp
xor
rcll
int3
add
add
sbb
loop
add
hlt
jle
sbb
mov
jg
jecxz
mov
rclb
push
inc
push
mov
lret
sti
mov
cli
in
divb
xchg
mov
shlb
subl
cld
gs
scas
call
icebp
jbe
clc
jo
xchg
clc
lcall
mov
int
and
in
pusha
ljmp
lret
icebp
jmp
loopne
iret
mov
and
pushf
ja
fimull
mov
hlt
mov
pop
xlat
stos
xchg
jg
outsb
pop
mov
push
std
push
cmp
jmp
sub
mov
dec
dec
jge
outsl
pop
lds
fsub
xchg
cmpsb
ljmp
add
in
jg
out
inc
fnstenv
loop
jg
mov
and
inc
je
mov
rcr
cwtl
std
jns
mov
fbld
jmp
fnstsw
int
jg
shr
pop
sbb
rcr
pop
mov
xor
addr16
mov
aaa
xchg
jmp
call
xchg
lcall
sarl
mov
ret
jnp
int
arpl
sti
cld
push
adc
roll
mov
loopne
add
cmp
call
stos
lret
xchg
xchg
sti
mov
fimull
orb
test
cmp
jmp
adc
pop
inc
jo
sub
jmp
sub
ja
das
add
movsb
dec
testb
push
jl
xchg
jno
ljmp
pusha
adc
mov
xor
or
cmp
fmull
add
int3
pop
es
call
loopne
test
hlt
fbld
jno
call
jecxz
clc
ja
cmpsb
in
mov
xchg
mov
std
inc
push
ret
pop
stos
jne
iret
pop
pop
mov
rol
mov
ss
lods
inc
inc
cmp
push
jle
cmpsl
bound
in
loopne
rcr
dec
mov
icebp
add
xor
or
mov
mov
pop
gs
data16
jmp
sti
cld
call
cld
push
out
jae
aad
mov
stos
lds
and
lahf
shl
sahf
cmpsl
add
ljmp
fistps
lock
pop
cli
ffree
jno
arpl
jecxz
cmp
jge
addb
jne
mov
fisubrl
xchg
push
cmp
pop
sbbl
hlt
jnp
ret
inc
dec
or
cli
dec
pop
adc
dec
jecxz
push
shll
out
repz
pop
pop
mov
cs
cmc
inc
mov
or
xlat
xor
mov
ret
jae
in
push
popf
ljmp
add
iret
add
pop
push
out
push
ret
gs
imul
cmpsl
incl
pop
mov
call
and
in
push
outsb
xor
cli
inc
xchg
out
inc
sub
sahf
sub
lret
rcll
out
lods
clc
incl
rolb
or
sub
mov
mov
mov
cmpsb
lcall
xchg
push
icebp
push
aam
lret
into
cld
std
mov
mov
pop
incl
out
sahf
cmpl
mov
das
data16
mov
pop
fisttpll
xchg
ret
ljmp
xchg
and
jecxz
cli
pop
addr16
mov
adc
fiadds
lods
pop
shrl
cmpb
movsb
jmp
ja
rclb
dec
jbe
cmp
sti
sbb
incl
in
roll
xchg
mov
lahf
mov
jae
xor
pusha
bound
fcomip
outsl
jle
mov
push
dec
gs
sub
notb
fcmovbe
mov
inc
fcomip
cmp
mov
in
adc
jp
aas
jmp
bound
jge
cmc
fnstcw
jmp
cmp
jp
push
add
movsl
notl
decb
loopne
mov
fisubl
negb
add
sbb
aad
mov
xchg
ss
ljmp
mov
lret
je
stc
mov
aam
inc
adcb
mov
lcall
mov
stos
xchg
mov
and
mov
xchg
fiaddl
mov
xchg
push
mov
jle
push
add
popa
inc
sahf
jle
outsl
mov
lret
mov
jmp
jmp
pop
xchg
adc
inc
xchg
jnp
mov
cli
or
out
in
pop
imul
std
inc
cld
jmp
out
scas
enter
mov
imul
enter
jmp
and
stc
iret
popf
sbb
inc
mov
sub
fwait
lahf
and
mov
sub
cmp
fiaddl
nop
pushf
jmp
int3
jo
movsb
ds
sarb
fisubrl
mov
leave
push
xchg
test
xchg
pusha
jmp
je
lret
aam
and
in
rcr
sub
sbb
call
ljmp
pop
sbb
mov
dec
decl
je
mov
lods
shl
mov
test
lock
pushf
xchg
mov
call
ljmp
lahf
mov
test
sbb
push
mov
pop
daa
cmc
aad
dec
fwait
sub
fwait
push
dec
rcrl
stos
adc
or
out
sbb
test
das
push
ss
ss
lds
rorb
icebp
call
iret
aas
mov
mov
cmp
sbb
inc
or
std
or
pop
jns
loop
xchg
push
je
push
test
push
mov
pop
test
std
les
cs
inc
and
jmp
and
jns
addl
lcall
sub
imul
jp
cmp
in
loope
ds
push
sbbb
jnp
mov
mov
xchg
pop
sbbb
jns
xor
jg
push
les
mov
mov
mov
and
fldt
add
shll
cvtdq2ps
fdivp
lock
pslld
int3
sub
in
xchg
adc
hlt
cmc
jb
or
jne
mov
sbb
sub
pop
inc
dec
mov
and
mov
mov
or
in
aaa
sub
jno
ficompl
sarl
jg
push
sub
out
or
add
push
addr16
outsl
insb
xchg
dec
jmp
hlt
pushl
clc
jae
pop
movsb
fwait
inc
dec
test
clc
decl
popa
and
fwait
push
inc
test
fildl
test
sbb
mov
add
arpl
or
es
xorl
ljmp
call
incb
fisttpl
adc
xchg
shrb
push
out
out
pop
xchg
in
in
add
push
out
hlt
out
pop
shr
jle
sbb
dec
mov
stos
icebp
incl
mov
mov
cmp
fildll
es
out
push
dec
stc
inc
or
jmp
fnstsw
loopne
pop
loop
dec
fcompl
push
cltd
inc
xchg
test
test
mov
or
mov
sub
jae
int3
pop
lahf
push
jo
cmpsl
popf
push
fcoml
jge
jmp
test
push
push
cld
jge
leave
loop
push
xchg
call
pop
jo
or
test
incl
dec
dec
in
movsl
sarb
ljmp
test
dec
jae
outsb
imul
cmp
das
xchg
ret
push
flds
and
inc
cli
sub
out
jl
mov
mov
pop
pmaddwd
outsl
imul
fwait
outsl
mov
orb
loopne
dec
clc
pushl
fdivl
mov
in
jg
mov
pusha
addb
repnz
ljmp
icebp
lock
push
cmc
clc
je
mov
gs
push
mov
xchg
xchg
jecxz
shrb
pushf
clc
sbb
cli
popf
jae
jg
add
faddl
xchg
arpl
mov
push
cwtl
push
icebp
outsb
xchg
loope
test
call
scas
push
out
std
lcall
mov
xor
sub
mov
jmp
inc
bound
inc
in
ret
loopne
add
decl
fldt
pop
xchg
sub
dec
xchg
addr16
and
jbe
loop
stc
dec
outsl
dec
jnp
inc
lret
lret
cmp
int3
xchg
les
sti
mov
cmp
mov
jae
inc
stos
inc
pop
int
add
add
push
mov
decb
dec
inc
sbb
jb
ljmp
fidivrl
rcrb
and
jmp
call
inc
dec
push
loopne
insl
jg
je
jb
mov
imul
mov
or
jo
aam
ret
xchg
mov
pop
call
decl
repnz
pusha
loop
ds
lcall
inc
bound
out
push
aad
ret
mov
int3
sti
and
xor
in
push
add
cli
jg
leave
and
mov
pop
mov
pusha
inc
fcmove
out
rolb
inc
popl
ficoms
lret
movsb
popf
les
dec
jecxz
jl
jne
dec
int
hlt
or
sti
jmp
addr16
in
adc
sbb
out
shr
inc
fdivr
in
xlat
jno
ljmp
lret
mov
shlb
dec
push
addr16
fstps
xchg
sar
jae
in
dec
add
jmp
pop
test
in
jnp
lret
push
sbb
decl
jmp
jnp
jmp
ss
int
aaa
mov
push
pusha
pop
push
int3
call
mov
mov
out
ljmp
mov
push
lcall
int3
push
fsub
or
mov
lock
pop
mov
cmpsb
push
push
jnp
icebp
outsb
jge
call
in
ffree
push
xlat
rolb
and
cld
stc
push
mov
dec
int
cmp
lods
rolb
pop
test
bound
loop
test
leave
push
mov
sbb
lods
cwtl
mov
xlat
jl
dec
dec
inc
jl
sub
sub
repnz
xchg
push
int
add
vpcmpgtd
cmp
lret
sub
fwait
mov
fstl
adc
movsb
fwait
xorb
inc
ja
aas
xchg
clc
idiv
fstpt
stc
cmp
mov
cli
fcomip
incl
pop
mov
jnp
mov
cmp
fwait
inc
rcr
push
call
decl
fdiv
leave
push
xchg
mov
repnz
stos
test
repnz
rcrl
scas
jb
jmp
fcomip
loopne
ficoml
sbb
in
dec
push
aam
rdtsc
mov
incl
or
push
leavew
dec
mov
mov
out
aam
loope
cmc
ret
and
lahf
ret
in
cmc
fdivr
ja
loop
es
push
decl
leave
xchg
pop
aam
and
fdivs
add
jbe
out
push
call
test
mov
mov
fsubrp
dec
pop
mov
jae
mov
loopne
gs
fcmovnu
icebp
cmp
lcall
loopne
repnz
lahf
clc
lds
stos
mov
scas
enter
stos
loope
incl
ret
incl
adc
loope
int
mov
lret
mov
cld
push
or
sub
lret
fldt
add
dec
je
jnp
jg
icebp
stos
xor
imul
inc
push
clc
cmpsl
lcall
int
rolb
dec
mov
sub
mov
out
clc
xchg
xor
mov
sbb
jo
push
test
push
icebp
push
mov
lcall
add
adc
or
pop
lock
fsub
pusha
adc
dec
std
movsb
jno
add
mov
out
pop
pop
and
in
cmp
mov
in
fimuls
lahf
into
mov
xchg
mov
ror
xchg
mov
addb
test
call
jle
jl
scas
ret
jg
lcall
mov
jmp
xchg
lcall
enter
lahf
in
inc
int
xchg
lods
mov
mov
imull
lret
mov
fwait
xorb
hlt
mov
rolb
sbb
jecxz
nop
cli
dec
add
test
rcl
andl
fmull
add
adc
mov
cmpb
mov
xchg
movsl
lcall
mov
pop
lock
mov
jle
xchg
ror
cmpsb
lcall
mov
mov
incl
lds
cmpb
sti
repnz
outsb
add
mulb
xchg
jne
jb
scas
and
out
add
mov
mov
cmpsl
nop
mov
sub
repnz
cli
mov
cmp
mov
ror
lcall
mov
mov
fdivrs
mov
testb
cmp
xorb
cwtl
cmp
fwait
pop
out
movsl
mov
nop
push
ljmp
andb
xchg
mov
mov
lcall
call
mov
iret
fistps
mov
cli
mov
lret
stos
xchg
loopne
std
incl
mov
fwait
jg
out
inc
inc
test
jb,pt
push
sbb
cmp
inc
sub
pop
or
mov
sti
push
loop
call
aaa
xchg
out
es
ljmp
mov
fidivl
mov
ret
add
ret
scas
ljmp
and
cld
dec
push
movsl
rolb
out
jp
pop
and
nop
mov
scas
popfw
lret
or
les
ljmp
sub
mov
push
fwait
les
ljmp
add
movsl
out
and
hlt
stos
adc
sarb
daa
rcr
cli
jg
loop
pop
mov
test
xlat
add
out
popf
clc
outsl
subb
pop
jbe
jmp
lcall
mov
xchg
dec
mov
push
adc
xchg
jb
sahf
mov
inc
or
push
sbbl
icebp
xchg
cmpsb
shlb
push
dec
lods
in
mov
mov
sbbl
push
in
add
test
or
sub
gs
lock
mov
push
adc
lock
add
ret
mov
in
repnz
out
loop
sti
mov
jg
lcall
nop
pop
clc
scas
cltd
andl
test
mov
cmpsl
rcrb
aaa
adc
icebp
adcb
mov
lcall
incl
fwait
lcall
mov
push
jb
sub
pop
cmp
dec
add
jbe
subl
mov
jno
sete
aaa
pop
sub
mov
lock
aad
push
std
mov
mov
cs
push
mov
scas
xchg
push
push
adc
test
sbb
in
pop
push
and
and
lcall
gs
dec
dec
cmc
sbbb
test
pop
call
fcomip
xchg
fwait
sub
test
xchg
enter
aad
or
sbb
push
stc
dec
mov
mov
mov
repz
mov
cmpsl
leave
loopne
js
nop
push
lea
popf
mov
and
xchg
incl
movsb
fadds
andl
xlat
or
lahf
mov
std
adc
cmp
add
fcmove
inc
stc
addl
dec
fbld
or
mov
out
adc
dec
loop
dec
pop
xchg
pop
iret
mov
jg
dec
into
pushf
cltd
push
decl
in
cmp
pushf
fs
gs
out
std
pop
add
dec
repz
ljmp
adc
loop
adc
push
push
cli
xor
icebp
and
sti
ds
inc
mov
scas
dec
iret
lret
mov
repnz
movsb
push
repz
inc
leave
test
popa
sbb
decl
jae
aad
mov
sbb
sub
pop
mov
lcall
idivb
insl
xchg
int
sub
mov
mov
data16
ljmp
in
inc
movsb
sub
icebp
and
xchg
and
mov
aaa
mov
dec
lret
xor
rcrl
jge
data16
je
daa
mov
cs
pop
pop
popf
and
aaa
xchg
push
mov
jbe
cmpsl
adc
stc
cld
in
addl
test
subl
inc
sub
aaa
jbe
mov
xchg
add
push
xor
push
decb
or
xchg
loop
push
xchg
dec
loop
mov
mov
adc
or
aaa
je
repz
xchg
add
cmp
mov
loopne
decb
mov
push
aam
inc
bsr
adc
cltd
mov
test
pushl
push
nop
test
lcall
xor
jo
add
jmp
int
jle
cmp
hlt
mov
das
clc
rolb
inc
xchg
jp
in
cli
in
decl
mov
mov
addr16
xor
dec
mov
pushw
mov
and
arpl
lahf
adc
lret
mov
push
pop
cmp
sbb
fldenv
mov
pop
out
sti
push
mov
xor
scas
mov
or
dec
pushl
mov
lds
cmpsb
lods
int3
sti
push
cmp
jle
incb
lahf
mov
mov
sbb
lcall
adc
rcll
or
inc
mov
or
mov
mov
pop
xchg
rcrl
mov
fldl
push
sub
lahf
mov
mov
xchg
test
movsl
mov
pop
ja
lock
mov
cmp
pop
lcall
mov
push
lods
mov
add
push
jne
mov
pushf
mov
jecxz
scas
and
push
fwait
arpl
test
pop
lret
shlb
stos
cmp
adc
jle
test
negb
inc
cli
inc
out
inc
push
mov
test
lock
inc
mov
cmp
cwtl
pop
add
mov
xchg
mov
fwait
pop
jl
pop
mov
loope
ljmp
dec
adc
sti
jne
push
imul
xor
rorl
lock
jle
jmp
dec
loope
test
push
mov
in
data16
or
push
ljmp
lcall
cli
and
xchg
fnstsw
jb
popa
dec
popf
jg
ljmp
ljmp
jo
daa
clc
call
icebp
stos
push
push
push
push
sub
sbb
mov
xchg
outsb
mov
repnz
and
jae
popl
call
jg
cli
lret
cmp
pop
test
xchg
mov
jnp
push
fidivs
cmp
cmp
or
into
scas
pop
jne
out
ret
pop
fucomp
push
xor
imul
cld
loop,pn
push
pop
mov
cmp
mov
xchg
fwait
sbb
cld
cmpsl
mov
sub
ljmp
mov
mov
mov
pop
andl
dec
add
push
cmp
fstpt
jns
lea
lahf
ja
repnz
inc
daa
mov
sti
jbe
mov
pop
mov
ljmp
add
pop
lcall
lcall
repnz
mov
cmpsb
jne
jbe
inc
loope
push
jo
mov
mov
test
adc
jmp
out
add
inc
aas
pop
pop
inc
cmc
test
sub
mov
sbb
or
ret
add
mov
call
clc
push
cmpsl
xchg
pop
push
lds
insl
jp
mov
lds
pop
test
mov
or
mov
cld
mov
lds
aad
repnz
bound
mov
sbb
jmp
dec
and
mov
sub
sarl
push
repz
inc
ljmp
xchg
test
cld
inc
jecxz
call
sub
sbb
fwait
and
ds
cmc
xchg
cs
push
ss
hlt
stos
insl
mov
in
mov
inc
hlt
faddl
dec
outsl
mov
cwtl
and
imulb
xorb
mov
out
push
lock
jbe
xchg
xchg
mov
cld
cld
cmp
pop
cli
jmp
xchg
inc
inc
mov
out
jle
fistpll
loopne
mov
lahf
pushf
clc
xor
mov
std
jmp
cmc
ljmp
addb
stos
push
mov
jnp
dec
xchg
or
mov
insb
shrb
sbb
int3
mov
xchg
pop
mov
ja
sub
call
pop
or
mov
and
pop
or
mov
cmp
mov
sub
xchg
inc
nop
push
pop
js
jg
sahf
mov
outsl
push
cmp
push
cli
cwtl
jle
testb
jbe
sbb
cmpsl
pop
aad
sub
enter
pop
icebp
ja
pusha
daa
push
adc
jmp
ljmp
fwait
or
dec
or
and
mov
lock
cmp
add
mov
sbb
sti
call
lock
mov
repz
je
int3
xchg
inc
sbb
and
decl
orl
out
jnp
jg
test
es
xor
mov
push
insb
dec
push
lahf
int3
push
out
pushf
add
fwait
frstor
jp
push
jge
in
clc
cmpsb
mov
dec
outsb
mov
push
lods
cmp
loope
push
push
add
shrb
sub
push
jp
test
cmp
rcrl
nop
mov
adc
scas
pusha
les
cld
xchg
imull
mov
nop
xor
clc
mov
fsubs
mov
xchg
in
jb
rorl
ljmp
mov
loop
lahf
pop
cmc
iret
rcr
lcall
sbb
push
cli
std
ja
clc
push
jne
jge
cmp
xor
out
scas
cmp
mov
cs
inc
sub
roll
lcall
mov
les
push
lret
into
xchg
popf
scas
and
pop
cmp
push
add
out
insb
imul
out
pop
popa
adc
iret
dec
pop
push
jg
lock
inc
lods
jns
push
ret
adc
mov
sub
incl
mov
adc
push
out
sub
push
repz
std
push
je
jmp
jbe
add
cltd
imul
in
push
or
mov
mov
mov
test
loope,pn
lods
in
add
jmp
js
cwtl
or
pushf
lret
cli
pop
mov
sbb
jnp
jo
inc
pop
clc
call
lahf
jns
inc
dec
hlt
mov
cli
sbb
push
and
icebp
push
ss
push
mov
jecxz
andl
shll
jp
mov
rcrl
cld
data16
jmp
cmp
lds
idivl
push
jmp
mov
call
push
inc
in
andb
mov
xchg
test
pusha
test
popf
and
mov
sti
aad
sbb
cld
xor
or
ljmp
ret
sub
cld
dec
mov
add
inc
shl
je
fnsave
scas
std
sbb
inc
jg
movsl
mov
push
repnz
ljmp
test
push
xchg
inc
add
cli
iret
inc
fisttpl
incb
mov
hlt
movsb
popa
push
fsubrl
mov
pushl
fsubl
pop
cld
fdivs
mov
fistpll
test
or
orb
and
dec
loope
lods
out
fmuls
adc
int3
ja
inc
mov
rclb
push
add
inc
xchg
push
test
out
mov
fsubs
ficompl
pushl
dec
into
sti
lds
push
jmp
push
imul
mov
ljmp
repnz
and
mov
dec
mov
push
jne
nop
fdivrl
ss
xchg
xor
popa
sbb
ss
push
pop
jge
cmpsl
jno
outsl
mov
data16
sti
les
sar
pushl
adc
mov
pop
cmp
mov
dec
data16
pop
loopne
rol
popa
add
and
dec
repnz
mov
ret
jbe
mov
pushf
xchg
mov
lcall
mov
sub
mov
mov
push
add
arpl
testl
dec
bound
cmp
lds
faddl
test
sub
insb
out
lock
shl
pushl
sbb
loop
sarb
ss
jb
outsl
incl
into
stc
sub
mov
scas
mov
and
inc
cld
test
outsb
mov
jp
popf
jbe
inc
iret
jg
mov
mov
shll
cld
mov
es
shll
sbb
scas
mov
jg
int
mov
adc
andb
cwtl
incb
xchg
fmulp
xor
pop
andb
or
lret
cmp
iret
je,pn
negl
cwtl
insl
xchg
inc
fstl
cmp
decl
sbb
movsb
mov
xor
imulb
movsb
fwait
mov
cwtl
push
mov
add
mov
fildll
ljmp
pop
fmull
or
inc
clc
ljmp
rclb
subb
bnd
insl
les
pushl
outsb
push
push
aam
imul
xor
xlat
enter
adc
call
jg
addb
in
insl
inc
xchg
lcall
stos
push
and
jb
pop
into
out
mov
sub
sbb
pop
push
incl
sahf
aam
or
pop
mov
out
mov
mov
add
sbb
arpl
pusha
pop
clc
mov
mov
mov
std
loop
lcall
adcl
sahf
sti
mov
in
sub
popf
mov
in
push
fsts
js
mov
ljmp
mov
inc
fs
mov
mov
push
xchg
cli
push
xchg
hlt
sahf
xchg
inc
push
jmp
mov
mov
jbe
push
xchg
xchg
icebp
jg
lock
int
fisttpll
imul
pop
mov
cmp
mov
es
and
aad
mull
decl
dec
data16
add
push
pop
hlt
les
rorb
nop
icebp
std
lock
rclb
mov
gs
fdivr
jg
jae
push
lods
lods
fisubrs
push
mov
not
or
rclb
call
and
xor
gs
cmp
mov
pop
dec
lret
filds
push
addl
mov
mov
inc
cmp
loope
negl
aad
stc
adc
std
cmc
mov
dec
jbe
imul
jmp
pop
push
leave
jo
xchg
inc
mov
in
lret
push
cmpl
xchg
mov
nop
jl
loopne
filds
adc
jmp
jnp
fists
rorl
push
icebp
pop
mov
dec
pushf
js
mov
out
pop
adc
lds
lcall
jmp
push
lret
jp
push
icebp
pop
pop
decb
cld
int
xorl
out
or
mov
inc
or
sub
or
lock
push
jmp
xchg
cmpb
stos
push
jg
pop
jb
sbb
mov
fld
sbb
sti
inc
pop
jbe
adc
xor
jo
or
lcall
pop
int3
fst
sbb
push
test
xor
mov
mov
jg
lock
jne
mov
mov
bound
bnd
mov
cmpsl
jge
add
or
outsb
cli
cwtl
sub
movsl
inc
xchg
or
xorl
mov
inc
int
jle
test
out
xchg
hlt
out
clc
cs
jo
sbb
mov
out
clc
mov
stos
es
pop
repz
int
fsubl
mov
cmpsl
xchg
jmp
enter
mov
pop
mov
insb
dec
jmp
call
jo
jmp
insb
cs
cmpsb
rcll
call
decl
je
jle
ja
das
pushw
icebp
mov
add
popf
mov
jae
pop
out
shrb
pop
mov
lock
ljmp
jo
std
inc
ja
aam
ja
int
and
add
jns
jg
fisttps
mov
jmp
mov
scas
or
out
dec
movsbl
fcomp
out
push
lods
sub
js
lock
out
fwait
adc
cmpsl
arpl
xchg
cmp
inc
dec
addb
ja
hlt
incl
push
pop
lock
movsb
repz
dec
or
ljmp
sub
push
inc
xlat
testl
loope
cld
rcrl
iret
pusha
pop
jmp
mov
lea
inc
lcall
xchg
call
pop
xchg
cmp
roll
mov
and
es
inc
mov
out
repnz
mov
in
stos
dec
push
shrb
stos
insb
push
jno
cmpsb
dec
cld
incl
fdivrp
push
jns
push
push
mov
popa
inc
rclb
ja
stos
cmp
xchg
cmpsb
pop
call
xlat
pop
xor
jae
adc
js
aad
xor
jbe
test
xchg
into
and
orl
call
mov
je
incl
out
mov
and
sbb
testb
jo
push
mov
xchg
adc
pop
leave
fstl
icebp
cmp
add
pop
popa
imul
mov
push
into
mov
aas
xor
add
nop
imul
movsb
jb
or
iret
cwtl
popa
mov
sbb
cld
mov
xchg
mov
push
jecxz
fs
sub
data16
filds
xor
loopne
pop
neg
adc
xor
or
cmpsb
push
std
pop
rolb
ficompl
inc
imul
push
sbb
lcall
cmpsl
xchg
movsb
inc
out
loopne
call
mov
outsl
add
lcall
inc
hlt
fs
push
mov
xchg
jns
faddl
pop
inc
in
mov
pushf
push
daa
push
cmc
jge
loope,pn
call
call
fldenv
push
iret
sahf
jo
std
mov
jnp
xchg
xchg
clc
pop
add
rcrl
sti
jne
sarl
lea
push
push
adc
dec
or
jbe
sbb
push
adc
bound
pusha
xchg
aas
xchg
incl
popa
imul
or
mov
fisttpl
in
stos
fdivr
fisttps
sbb
outsb
je
sti
pop
sti
jle
push
cmp
xor
dec
jno
fisubl
adc
mov
xor
inc
test
mov
data16
daa
and
pop
mov
stos
dec
sub
hlt
rolb
cmp
xchg
repnz
iret
jg
pushf
outsl
test
ljmp
dec
jbe
stc
dec
sti
dec
sbb
or
push
stc
fiadds
pushl
ret
sub
test
xchg
jp
inc
movsl
aaa
ljmp
and
icebp
cld
xchg
ret
out
adc
lret
push
inc
jge
movsl
mov
adc
mov
mov
outsl
push
out
decl
xor
out
jmp
mov
fistps
lahf
jle
push
and
jno
fwait
sub
popf
pusha
rcr
cmpb
xor
mov
movsl
daa
stos
inc
std
ljmp
loopne
jl
pushw
jmp
sbbb
dec
call
out
push
mov
cwtl
add
rorl
lcall
clc
lahf
xchg
push
out
ljmp
push
inc
les
and
add
sbb
ja
aas
scas
enter
pop
ss
xchg
dec
inc
outsb
push
aas
add
call
push
lods
mov
sahf
stos
cwtl
and
call
in
lret
lret
iret
je
jo
test
or
pop
sub
popf
incl
jnp
arpl
std
popa
inc
test
outsl
jnp
cmp
hlt
mov
xor
adc
rep
outsb
stos
adc
fisttpll
mov
mov
repz
push
push
mov
sub
xor
pop
jno
xor
movsl
pusha
shrl
mov
repz
jns
and
inc
mov
inc
shrb
mov
xlat
fxam
xchg
lods
fsubrp
jg
jmp
cmp
sub
cwtl
xchg
gs
mov
clc
pop
gs
inc
push
outsb
test
mov
jmp
pop
jnp
push
or
push
mov
std
push
test
xchg
ds
push
pop
in
data16
cmp
ret
jl
adc
and
jg
cmc
mov
orb
data16
stc
data16
jge
insb
mov
cmpb
cmp
sti
fsts
xchg
pop
outsl
out
cltd
xchg
test
es
mov
imul
mov
mov
cmc
mov
movsb
pop
mov
push
addr16
repz
lock
shlb
addr16
aam
shlb
fsubrl
int
push
mov
push
jp
std
mov
fwait
inc
sahf
jg
cmp
push
inc
aaa
test
addb
scas
pop
cmp
jg
test
mov
aas
lahf
pop
jmp
shlb
xchg
dec
push
in
xor
pop
call
mov
incl
mov
cld
idivb
push
mov
fwait
pop
cld
push
cmpl
add
jo
ljmp
inc
rcrl
pop
jne
cwtl
jl
das
sar
inc
lea
scas
pushf
sub
imul
scas
jmp
std
jne
dec
ljmp
icebp
mov
jl
out
lock
stc
dec
or
push
sar
aaa
filds
cli
pop
js
xchg
ljmp
mov
xor
hlt
incl
dec
sahf
imul
lcall
pusha
xor
add
push
rorb
mov
mov
push
mov
jg
call
into
cmp
lds
mov
mov
jecxz
popf
xchg
decb
mov
sbbl
in
lret
and
xor
sahf
int
sbb
xor
inc
inc
mov
dec
test
inc
pop
std
jmp
push
test
mov
pushl
cltd
cwtl
int3
daa
test
push
out
push
jmp
call
add
sar
hlt
jp
jae
nop
cmc
add
xor
mov
fiadds
dec
and
pop
divb
shll
jg
lret
mov
iret
lea
inc
dec
lock
sub
jnp
cld
xor
call
iret
push
pop
lret
pop
sbb
ret
and
cmp
lcall
pop
ficoml
into
mov
mov
push
roll
int3
sahf
repnz
dec
imul
cld
pushl
pop
ja
push
pop
jns
repz
loop
nop
les
mov
cltd
xorb
push
jl
nop
fstps
dec
fstl
sbb
pop
inc
mov
inc
inc
pop
push
mov
dec
js
pop
push
lret
movsb
inc
mov
push
xchg
inc
adc
sub
pop
out
jmp
dec
inc
sub
jo
mov
inc
jnp
inc
push
inc
test
call
test
xchg
inc
aad
jmp
xchg
fsubl
inc
test
sbb
loop
into
test
pop
mov
in
std
xchg
out
pop
and
test
cmc
xor
push
je
ja
push
push
pop
push
jecxz
fbld
lret
aas
jmp
sbb
clc
xor
sub
cmp
in
repz
test
stos
fcomi
mov
mov
bnd
clc
cmp
les
push
lret
push
sti
sub
hlt
outsl
aam
fildll
inc
mov
mov
mov
cli
aad
out
test
jnp
mov
icebp
sub
or
adc
mov
int3
sti
and
sti
inc
jne
mov
jb
inc
dec
nop
pop
mov
mov
inc
xchg
flds
stos
mov
outsl
cmp
sub
loope
or
mov
outsb
test
dec
clc
push
dec
in
push
rcll
add
out
jns
xchg
dec
nop
jg
mov
ja
sub
push
lret
jmp
dec
sbb
es
and
es
aas
test
dec
push
push
jmp
sahf
stc
jne
push
and
pusha
aam
push
loopne
dec
sub
imul
adc
inc
inc
lock
stos
int
mov
dec
imul
loope
cmpsl
bnd
repz
rolb
dec
jp
cmp
iret
shlb
shll
pop
push
mov
frstor
bound
fs
ljmp
pop
mov
push
scas
in
js
scas
repnz
leave
add
aad
push
adc
lods
adc
jmp
pop
loop
sti
cmpsl
in
xchg
out
out
jb
loope
decl
dec
sub
push
jg
mov
lcall
cli
pop
add
mov
pop
mov
push
je
loope
push
mov
insb
or
pushl
mov
sbb
loopne
mov
xor
test
int3
call
decl
js
xchg
pop
arpl
mov
ja
sti
stos
sub
andl
jmp
call
pop
inc
jle
mov
repnz
fistpl
jg
pop
pop
sub
dec
adc
cmpsb
push
mov
hlt
cltd
cmp
mov
or
aam
pop
or
inc
mov
inc
push
out
inc
xchg
lock
call
sti
xchg
loope
xorl
inc
mov
add
push
mov
incl
pop
inc
sti
cmp
testl
and
dec
call
ret
rcrb
shrl
or
push
mov
add
inc
scas
enter
jo
fidivrs
jg
mov
xor
push
cli
sub
hlt
shlb
adc
incl
xor
push
loope
dec
sbb
into
or
add
lret
lret
mov
fcmove
push
frstor
idivl
push
or
jns
cmpsl
mov
xchg
test
cmpsb
shrl
mov
inc
jge
dec
cwtl
lock
jnp
mov
push
jo
adc
xchg
out
shlb
out
mov
cmp
and
js
imul
push
cld
pop
iret
int3
cs
sub
inc
sar
je
popa
js
mov
call
inc
fisttpll
sub
pop
call
or
out
xchg
inc
test
inc
push
mov
out
pusha
pusha
call
jae
push
inc
insb
fisttpl
repz
repz
jecxz
jns
test
fsub
cltd
cmp
adc
cmp
stos
sub
fiadds
call
fwait
dec
cld
out
aam
push
je
outsb
adc
cmp
subb
jns
push
jno
lods
mov
jle
inc
adc
add
mov
pop
pop
push
pusha
mov
and
sti
jno
mov
repnz
lock
movsl
sahf
out
or
mov
test
and
insb
inc
das
scas
push
cmp
in
adc
mov
dec
scas
popa
push
lock
add
repz
in
bound
cmp
jg
jg,pn
outsl
add
imul
cld
jg
jo
or
and
sbb
call
cmc
add
jmp
pop
inc
fsubl
hlt
in
fidivrs
pop
pop
add
inc
jmp
arpl
test
mov
mov
sbb
ficomps
fdivr
std
mov
std
lcall
pop
idivb
xchg
repnz
in
bnd
mov
scas
div
clc
loope
mov
clc
mov
dec
lret
iret
or
test
cwtl
jae
cmpsl
push
in
sbb
dec
stos
lret
dec
aad
fimull
cmc
mov
mov
lcall
dec
fildll
int3
cmpsl
in
xchg
shll
hlt
ss
lret
sub
cs
mov
int3
loope
lret
rol
fs
int3
lea
lahf
int3
mov
mov
call
cli
mov
mov
fwait
cmp
push
xchg
cli
mov
incl
mov
pop
jl
imul
test
subb
jmp
je
mov
decl
push
pop
mov
mov
jno
and
jae
pop
mov
mov
inc
cmp
pop
add
div
lret
inc
mov
mov
je
adc
test
lcall
leave
cli
xchg
jmp
hlt
jg
pop
adc
hlt
stos
jo
leave
jns
mov
cli
sub
scas
hlt
xchg
ret
out
xor
out
sub
jecxz
xlat
mov
mov
xchg
mov
xchg
jg
jbe
mov
sub
add
fmulp
lcall
ljmp
fsub
mov
aam
dec
pusha
clc
cmp
shll
mov
data16
shrl
js
push
out
mov
ljmp
dec
mov
clc
jb
pop
add
mov
mov
jmp
cmpsl
loop
mov
shr
iret
cwtl
fwait
sub
ljmp
sahf
stc
into
sub
arpl
sub
leave
xchg
shlb
int
jecxz
call
rolb
pushf
push
iret
mov
jns
xchg
fcmovbe
sti
inc
inc
or
dec
sbb
loop
stc
jecxz
int
shr
xchg
clc
in
aaa
push
call
das
test
mov
rcrl
test
pop
jg
add
jmp
test
imul
pushf
test
scas
sbb
test
dec
clc
scas
pop
sar
mov
ljmp
jo
scas
mov
push
mov
nop
jl
cmp
jg
xchg
jmp
push
dec
lret
push
jbe
cmpl
je
pop
js
jbe
and
pop
push
in
sub
mov
mov
es
in
jmp
inc
cltd
insb
jbe
dec
mov
popa
ljmp
lahf
imul
lcall
leave
ret
lods
ret
das
cli
fisttpll
inc
jbe
fwait
ljmp
std
mov
enter
das
sub
jae
loopne
les
call
adc
jno
cmpsb
push
std
call
notb
addr16
fisttps
scas
xor
push
add
cmp
push
negb
in
aaa
cmc
ljmp
inc
mov
push
xor
lods
push
xchg
dec
xchg
jg
sbb
adc
cmpsl
pushf
mov
jp
sbb
add
xor
lret
cmp
outsl
mov
cld
mov
gs
xlat
jns
repnz
call
jno
leave
pop
pop
cwtl
shll
inc
mov
lcall
sar
filds
dec
js,pt
push
gs
mov
fnsave
mov
mov
in
clc
inc
loop
sbb
push
stos
sub
dec
cmpsb
or
and
repnz
or
std
ljmp
es
dec
pop
daa
lret
lret
test
enter
lds
push
mov
out
push
mov
iret
sub
mov
mov
pop
jecxz
push
test
test
es
push
in
add
jg
enter
call
sahf
repnz
pusha
inc
sti
push
mov
les
fsubl
or
stos
int
arpl
jne
mov
push
daa
or
fcoms
rcl
mov
scas
ds
aad
mov
mov
loopne
jb
cmc
out
fldl
mov
test
push
xor
sub
outsl
jb
test
cs
pop
int3
and
rcrb
sti
fs
lret
or
or
inc
in
mov
jg
xchg
pop
mov
xchg
dec
bound
fwait
push
arpl
mov
insb
popa
inc
mov
fiadds
fsubrl
loop
mov
jmp
aam
xchg
fstpl
test
loopne
sbb
push
cld
jg
dec
mov
xlat
pop
xchg
movsl
scas
xor
lcall
sub
sub
jmp
out
cs
jg
icebp
ljmp
out
clc
sub
mov
add
ljmp
call
insb
sbb
push
jecxz
dec
push
hlt
sub
rorb
jp
dec
fldl
jbe
jmp
aad
jnp
enter
decl
jo
fsubr
lret
insl
adc
iret
cmpsb
xchg
icebp
fwait
loop
xchg
fptan
add
ljmp
jg
push
insl
sti
and
push
lret
cmp
jle
es
iret
enter
ret
insl
daa
adc
cmp
adc
mov
mov
xchg
xorb
adc
ret
stos
add
jg
shlb
dec
mov
sbb
push
pop
inc
mov
push
xchg
test
inc
shll
xchg
dec
mov
cmc
mov
lret
fnstsw
pop
fwait
inc
or
incl
fsubrl
movsl
cli
xor
enter
jmp
mov
mov
pop
sarb
ljmp
ret
mov
mov
xchg
ret
jne
dec
dec
dec
cld
jg
ljmp
leave
iret
arpl
push
xchg
jg
mov
mov
mov
in
jae
add
sbb
jmp
dec
add
test
cmpsl
cmpsb
pop
xchg
jb
mov
scas
es
ret
pop
inc
mov
adc
or
sbb
icebp
xor
pop
pop
pusha
ljmp
lret
jne
mov
fwait
pop
fwait
dec
std
adc
div
ja
push
rcrb
push
add
out
mov
stc
jg
push
fisttpll
xor
mov
dec
mov
lahf
mov
aas
push
mov
stos
pop
sub
in
stos
jmp
dec
fwait
sub
fcoml
cmpsl
add
push
adc
std
lcall
mov
adc
inc
js
faddp
inc
pxor
xchg
add
ljmp
push
push
dec
mov
aam
cmp
mov
ljmp
dec
ret
cli
addb
pop
sar
mov
jnp
aas
aam
das
cmpsb
pop
fwait
out
clc
mov
test
inc
movsl
pop
mov
ljmp
and
mov
out
dec
daa
jg
jmp
enter
cmc
in
sub
dec
push
in
or
adc
sub
cmp
or
pop
sahf
pushl
push
lock
negl
sub
ret
and
or
mov
jbe
mov
movsb
fcoms
call
jns
shlb
push
inc
cld
push
ja
faddl
jle
cltd
aam
ljmp
lea
jnp
iret
pop
mul
repnz
mov
jne
xchg
or
push
xchg
ffree
jmp
popf
scas
xor
pop
dec
loope
jg
xchg
jg
jmp
shlb
jge
int3
sti
lds
pop
rcrl
in
das
xlat
lods
fisttps
call
cli
mov
and
in
add
lret
andb
loopne
push
lret
mov
jmp
push
popa
jb
xchg
fsubrs
adc
ljmp
out
or
push
push
jg
ss
sbb
out
decl
test
mov
push
pushf
jle
repz
fldcw
xchg
push
pushl
cld
push
fs
mov
adc
adc
mov
lahf
push
shll
push
inc
out
mov
push
lds
dec
inc
jmp
stos
inc
jae
iret
cs
pop
inc
push
int3
ret
fwait
icebp
stos
cmpsb
flds
icebp
in
inc
xchg
adcb
dec
and
xchg
fimuls
rcrb
inc
push
inc
lods
push
inc
loope
or
dec
dec
loop
mov
mov
pop
lds
cmpsb
in
sbb
stos
ljmp
test
sbb
mov
in
vcvttpd2dqy
lea
lds
mov
push
sbb
push
lcall
mov
xchg
psubusw
lahf
fucomip
pop
loop
mov
xchg
sub
in
cmp
out
inc
dec
rcl
cld
jbe
adc
insb
int
add
mov
out
sbb
insb
jle
jg
cli
cmpsb
andb
sbb
cmp
mov
pushl
or
jb
mov
pop
ret
jno
dec
andb
adc
sbb
incl
negl
push
mov
jnp
movl
mov
mov
idivl
test
fimuls
mov
jbe
sub
out
movb
xor
gs
stos
loopne
mov
incl
in
mov
test
mov
inc
cmc
jmp
cwtl
jmp
lods
push
dec
icebp
clc
pop
sbb
outsl
jno
mov
stos
sbbb
stos
jg
jmp
sbb
sahf
cld
pop
or
outsl
incl
scas
cmp
mov
clc
es
out
and
push
movsl
mov
ja
hlt
imul
or
ljmp
adc
into
lea
jg
test
or
adc
bound
insl
pushl
cltd
clc
lods
je
outsb
enter
jl
les
fwait
adc
sbb
jp
shl
ret
decl
cmpsl
jo
ret
fucomp
mov
ja
in
or
sub
ret
lahf
push
mov
and
push
or
cs
repnz
incl
cmpsb
hlt
divl
jb
in
xor
ja
fstpl
sbb
roll
ljmp
jge
pushf
cmc
cmpb
lcall
mov
rolb
std
jns
cli
leave
or
les
mov
ret
fdivs
pop
setbe
mov
test
adc
pushl
lret
push
in
xchg
lock
jl
dec
cmp
pop
and
push
stos
enter
cmc
clc
call
push
inc
or
mov
fadd
movsl
jmp
stos
xlat
int3
cli
test
ljmp
ret
cmpb
fwait
stos
cmpsl
jg
pop
cwtl
dec
outsb
aas
adc
pop
in
les
mov
lcall
lret
mov
cltd
lea
mov
dec
lock
movb
lds
stos
xchg
out
push
decl
call
mov
shlb
imull
mov
lock
mov
push
jmp
andb
loopne
sub
add
test
ja
mov
pop
xor
cli
test
add
sub
ljmp
insb
in
out
xchg
call
cmc
addr16
adc
lret
rol
stc
gs
repnz
sti
int3
push
xchg
jo
loop
mov
or
aam
fcmovbe
push
icebp
call
sbb
adc
mov
pop
mov
inc
into
jl
fcomp
les
adc
icebp
xchg
or
pop
or
mov
cwtl
mov
clc
ljmp
movsl
mov
jmp
xchg
jmp
enter
outsl
idiv
ja
in
fs
lret
movsb
push
hlt
pop
cmc
pushl
ljmp
or
jl
repnz
fcomip
jg
divb
orb
xor
push
sub
sarb
pop
sbb
rcrb
push
sub
je
scas
enter
dec
pop
jno
adc
loopne
int
nop
jnp
mov
add
xchg
cs
lret
and
jmp
adc
xchg
decl
mov
push
shl
sbb
dec
ffree
or
cs
out
jae
call
fmulp
iret
inc
inc
int
lcall
fidivs
cmpsb
scas
push
mov
pop
jg
popa
cld
lods
in
adc
jmp
cltd
sahf
sub
clc
lcall
pop
mov
push
int3
add
xlat
aad
loop
mov
mov
mov
mov
inc
cmp
pop
push
lds
inc
jns
fld
cmp
icebp
jl
fwait
out
add
cltd
xchg
fwait
push
jle
incl
jg
mov
daa
pushf
rcr
ja
std
ljmp
mov
add
mov
push
fnsave
fimuls
push
mov
and
adc
jmp
add
mov
mov
xchg
hlt
dec
clc
jle
out
hlt
data16
and
lcall
cmp
or
outsl
test
push
out
shlb
scas
decl
shrb
jae
jmp
loop
lcall
lahf
lret
jecxz
decl
mov
add
mov
inc
arpl
push
orb
inc
or
mov
outsl
clc
jmp
add
jle
sahf
or
into
or
push
jge
cmp
mov
push
lods
psubsb
sar
out
xor
fmuls
mov
test
cmp
call
push
enter
aas
test
fwait
inc
movsb
mov
push
and
test
outsl
push
sub
cs
jp
cmp
jmp
sbb
pushf
iret
push
sub
out
sbb
mov
pop
pop
test
fistpll
mov
loope
out
or
cli
pushl
push
inc
cli
jae
lahf
push
push
es
je
jmp
cld
std
jbe
push
inc
jecxz
lahf
hlt
repz
imul
xor
lock
push
jb
or
cld
or
or
xor
loopne
jp
mov
out
add
jo
mov
jecxz
xchg
dec
xchg
push
nop
dec
inc
mov
mov
les
mov
call
cmpl
inc
mov
jbe
daa
pop
add
pushl
inc
bound
and
push
rolb
lock
mov
ljmp
std
pop
pop
fdivrp
jecxz
sbb
add
ss
repnz
dec
xchg
cli
push
in
or
sub
pop
push
outsl
mov
mov
mov
scas
ss
push
data16
add
outsl
pushf
jge
call
loopne
dec
shll
sub
leave
mov
sbb
sbb
pop
das
rol
je
ljmp
pushl
xchg
pushl
rcrb
hlt
bound
shrb
cld
test
scas
fisubrl
adc
inc
aad
and
cli
movsb
sbb
cld
jg
adc
insl
inc
jae
sahf
fsts
or
loopne
cmc
mov
lcall
inc
mov
xchg
mov
out
or
call
mov
fcoml
jnp
sub
sub
das
daa
inc
or
lock
daa
xchg
mov
push
xor
rorl
ret
sbb
lock
repz
mov
jnp
pop
mov
cmp
sub
push
inc
fs
lock
call
jb
out
mov
mov
cs
lods
xlat
sub
mov
or
adc
push
mov
push
mov
jg
push
sub
in
sarl
ja
xchg
loop
adc
pop
mov
mov
push
jmp
repz
call
sub
bound
fimuls
stos
and
pop
push
aad
ss
cmpsl
js
adc
or
adc
decl
out
imul
bound
or
sub
mov
cmc
es
or
sbb
pop
dec
ljmp
push
aas
or
data16
ljmp
dec
shlb
clc
cmp
jo
popa
push
outsl
inc
cltd
leave
or
adc
xchg
imul
dec
lahf
test
push
adc
das
add
xchg
repnz
movsl
in
imul
jle
fisubs
mov
mov
sub
xor
cmpsl
inc
std
out
fnsave
jl
rcl
pop
aaa
xchg
push
mov
push
cli
incl
popa
mov
pop
mov
sbb
sbb
lcall
cli
mov
ss
ficoml
hlt
jmp
jno
xor
pop
xchg
add
cmpsb
in
add
dec
add
int3
cmpsl
insb
dec
cld
jb
and
inc
ss
mov
cwtl
add
or
adc
popf
mov
jo
inc
repz
popa
push
mov
inc
subb
mov
test
inc
xchg
clc
xchg
out
nop
jg
jecxz
jns
push
int3
lret
adc
xor
jbe
lods
sub
inc
fwait
icebp
call
je
cmp
mov
in
push
mov
inc
and
push
lcall
jb
cmp
cmp
sbb
test
jns
mov
sbb
cltd
push
popf
out
jnp
loope
out
xchg
into
push
into
jnp
divb
and
mov
or
in
js
mov
mov
outsl
ljmp
adc
popf
inc
mov
jne
test
jmp
ret
pop
push
out
pusha
xor
into
pop
inc
cli
push
jp
call
fcomip
push
movsl
es
mov
mov
adc
jns
dec
cmp
sub
test
jg
xor
ja
in
xor
adc
mov
xor
jne
icebp
inc
jnp
clc
incl
lock
call
mov
and
cmp
ret
pop
and
adc
pop
lea
mov
sbb
incb
or
aad
out
sub
cltd
mov
push
call
push
fsubrp
add
mov
cli
mov
iret
fimuls
shl
mov
das
mov
icebp
mov
xchg
outsb
pop
ficompl
fnstcw
nop
sub
repz
stos
dec
rcrb
jle
cmp
or
push
das
dec
cld
pushl
add
out
lock
ja
roll
je
rcll
mov
call
aad
je
mov
sar
inc
ljmp
dec
loope
inc
es
into
and
inc
jno
cld
loope
add
pop
mov
jo
pop
mov
pop
fmul
or
inc
cld
decl
xor
jns
pop
or
jnp
mov
and
xchg
pop
cmp
pop
xchg
dec
mov
shll
adc
dec
mov
sbbb
ds
pop
hlt
imull
sub
jle
outsl
mov
popf
lret
mov
cmpsb
aam
dec
mov
dec
push
dec
mov
fsubs
arpl
imul
cld
xchg
push
in
xchg
pop
aam
outsl
mov
insb
aad
or
cmpsl
pop
jbe
fildll
icebp
shll
xchg
test
hlt
sbb
call
add
adc
pop
popa
mov
inc
mov
inc
mov
mov
jno
or
ljmp
js
sti
jg
into
fisubl
dec
inc
pop
outsl
adc
inc
data16
cmpsl
jns
in
xchg
fsubl
inc
int3
jp
pusha
xor
push
or
xchg
push
adc
or
ret
xchg
sub
aaa
jbe
call
and
or
xor
jmp
cwtl
cmp
mov
fsubs
ljmp
divb
int
mov
insb
xchg
aam
fldt
push
pusha
sar
incl
fcompl
and
xlat
sbb
leave
jg
sarb
xlat
mov
fwait
in
adc
in
fwait
outsl
stc
cmp
mov
lock
cmc
mov
out
rorb
mov
xlat
pop
repnz
lret
add
repnz
mov
inc
lret
xor
test
inc
daa
jbe
sbb
dec
scas
pop
insb
ljmp
sub
cltd
mov
hlt
pop
daa
cmpsl
add
fdivs
sbb
ljmp
movsl
data16
fisubl
cmp
and
les
mov
push
div
jbe
movsl
out
ss
out
dec
loope
stos
cmp
call
and
inc
loope
imul
adc
mov
and
test
mov
xchg
cmpsl
pop
cli
xor
ret
pop
mov
je
mov
mov
test
cs
adc
dec
jo
adc
ljmp
fldl
ja
rcl
icebp
inc
pushf
in
das
cmpsl
add
rcrl
leave
add
andl
jg
xor
test
jl
cmp
jmp
loop
test
aam
push
or
add
mov
or
inc
outsb
cmpl
mov
sub
aaa
fiaddl
mov
test
inc
mov
pop
jg
and
dec
les
push
pop
inc
test
mov
xchg
mov
add
aad
sbb
xchg
aaa
std
mov
mov
mov
repnz
cmp
pop
sbb
sahf
xor
out
push
pop
and
rorb
jecxz
adc
add
mov
mov
jns
mov
dec
test
cltd
xor
sbb
into
ljmp
clc
pushl
std
mov
clc
das
pop
les
rorb
push
in
add
mov
xchg
pop
dec
sub
movsb
jle
into
pop
xorl
mov
mov
sbbb
jecxz
adc
adc
mov
push
mov
sub
test
into
int3
scas
imul
ljmp
imul
xchg
cmp
push
pushf
xor
push
shlb
negb
ror
pop
pop
imul
out
add
xor
xchg
add
in
lcall
addl
mov
inc
push
dec
orl
and
lahf
lds
icebp
lcall
add
addr16
cmp
inc
push
xor
stc
in
cmp
fadds
enter
sti
out
icebp
outsb
insl
jl
aas
push
cmp
or
cmpsb
push
xchg
or
aaa
decl
and
push
cmc
in
scas
mov
cmp
movsb
inc
push
shll
daa
hlt
ljmp
test
xchg
inc
ljmp
xchg
push
mov
jg
stos
mov
sub
pslld
lret
mov
in
push
out
ss
dec
mov
aam
ss
mov
mov
filds
mov
enter
jmp
ret
sub
and
adc
or
mov
and
test
mov
xchg
xlat
mov
and
xor
stos
loop
inc
push
push
out
pop
pusha
jecxz
jb
pop
out
push
mov
lcall
adc
mov
ljmp
daa
add
add
push
adc
and
imul
mov
mov
std
xor
test
jae
sub
int3
aaa
xor
ud0
mov
inc
or
sub
push
decl
jl
lods
repnz
addb
push
jnp
cli
cmp
pushl
jmp
xchg
repz
xor
dec
outsl
call
loop
push
add
je
pop
leave
aad
dec
jno
fcos
ljmp
imul
xchg
scas
sbb
lret
orl
push
lods
popfw
fsubs
jmp
mov
xchg
out
jl
adc
mov
push
pop
lret
jg
das
sbb
iret
inc
repnz
pop
add
lods
pop
pop
mov
mov
xchg
xchg
movsb
adc
ret
jns
push
sub
add
add
push
dec
test
lock
inc
pop
mov
ljmp
stc
int3
push
or
icebp
inc
aas
lods
lods
movsb
lret
sub
jno
lods
cmpsb
mov
adc
outsl
clc
aaa
cwtl
arpl
shlb
int3
ljmp
inc
mov
push
push
fimuls
cli
rcrl
popf
inc
std
jecxz
mov
cld
mov
inc
js
xchg
data16
adc
fldt
mov
decb
cmp
sub
lret
in
pop
mov
jno
out
out
test
ja
out
enter
call
push
decl
loopne
test
cmpsb
adc
cmp
mov
call
shrb
in
dec
or
adc
xchg
fisttps
push
les
mov
mov
out
loope
push
dec
mov
and
pop
sti
ja
sbb
pop
push
adc
push
pushf
fistpll
inc
push
add
jnp
enter
pop
sbbb
pop
cld
pop
or
arpl
push
psraw
jno
stos
pop
jle
cmp
ret
ret
out
jp
dec
fsubrl
push
xchg
loop
mov
sbb
pop
fistpl
jecxz
lret
xor
adc
jmp
pop
push
int3
push
test
aas
pusha
std
scas
lds
in
shrb
jmp
js
xor
fdivrl
inc
sub
xchg
insb
mull
imul
mov
cli
cmp
xchg
out
ss
sub
pop
xchg
mul
dec
and
prefetch
aaa
es
rol
jb
addr16
sub
fildll
ret
xchg
or
sub
mov
pop
or
cmp
push
fbld
lret
mov
test
mov
ljmp
mov
or
jb
cld
call
and
push
out
dec
inc
adc
cmp
fsts
and
jge
fwait
jbe
xlat
dec
call
cld
mov
mov
mov
ret
push
cmpsb
xor
add
stos
popf
cli
push
sbb
push
add
or
pop
pop
cwtl
ret
xor
mov
jg
lds
and
pop
jg
mov
mov
cmp
jae
mov
aam
adc
and
xchg
xchg
dec
in
loopne
mov
push
call
fisttpl
pop
mov
pop
mov
xchg
pop
inc
push
cli
push
xor
mov
sti
decl
or
fmuls
loop
in
mov
jmp
adc
cltd
mov
mov
and
daa
xchg
xchg
stos
jg
add
or
daa
or
jmp
es
scas
and
mov
mov
and
add
scas
cli
ljmp
nop
clc
mov
cld
aaa
das
cli
sub
pusha
scas
adc
dec
jmp
push
filds
jmp
xchg
ret
xor
xchg
rcll
dec
jp
cmc
adcb
xor
les
ljmp
loope
ret
leave
ds
push
dec
xchg
jecxz
xchg
cld
mov
aam
xor
int
lods
jge
out
cli
lcall
repz
push
mov
dec
mov
adc
decl
pushl
add
mull
jb
jnp
mov
jg
ds
dec
adc
mov
dec
loope
lock
push
in
ja
outsb
inc
cld
jg
push
mov
mov
aaa
pop
mov
out
cs
ljmp
pop
ds
pop
add
fs
mov
cmp
or
inc
movb
sub
add
jo
loope
jnp
cmp
xor
gs
mov
jl
xor
pop
clc
jg
lret
sahf
es
cmp
jecxz
shl
shr
jmp
xchg
dec
inc
int
stc
ret
adc
add
jp
pop
rcr
lods
repz
test
in
dec
dec
std
push
insl
test
push
lock
incl
repz
sub
pop
push
or
mov
inc
shr
pushl
sub
jg
lock
enter
js
mov
data16
xor
jo
push
lds
push
cmp
insl
sarb
out
xor
jmp
sar
xchg
test
dec
dec
or
cmpsb
mov
idivb
fsubl
xor
pop
loopne
test
xchg
push
xchg
cmc
leave
cmp
pusha
aam
xchg
aaa
fwait
gs
inc
jmp
mov
adc
test
mov
decl
loopne
shl
cs
lds
int3
jo
divl
adc
jmp
data16
fsts
bound
push
rcrb
pop
mov
add
push
pusha
lret
leave
xchg
in
add
dec
jge
in
push
cli
leave
shl
mov
jno
ficoms
pop
in
push
ja
pop
xor
test
icebp
add
loopne
cmp
clc
and
add
dec
pop
std
decl
mov
dec
jmp
mov
mov
lea
jns
pop
or
scas
push
adcb
imul
xor
push
rcr
movsl
sub
je
stos
inc
lret
mov
dec
fcomp
inc
dec
fiadds
push
sbb
pop
data16
inc
fs
add
mov
std
pushl
cltd
fmull
push
and
fbld
push
mov
movsb
and
fisubl
mov
pop
mov
cmpsl
out
mov
ljmp
sti
popf
nop
int3
sbb
jmp
daa
cmp
je,pn
loopne
shlb
push
std
xor
push
and
dec
cwtl
jle
or
push
fwait
push
fidivs
movsl
sbb
frstor
lahf
xchg
inc
cld
mov
add
rcrl
mov
push
movsb
fmuls
jle
decl
rorl
mov
movsb
cld
das
aas
and
add
aam
scas
adc
test
stos
add
sub
in
adc
push
jg
decl
test
jae
or
ljmp
incb
inc
cmp
xor
hlt
lods
and
cmp
pusha
insl
leave
cmp
popa
push
loop
push
test
and
lcall
outsb
cmpsl
jnp
and
pushl
cli
mov
cmp
push
les
les
push
data16
dec
test
ret
lods
inc
mov
adc
and
inc
pop
int
xlat
orl
std
dec
mov
stos
or
fnstenv
add
outsl
xchg
adc
mov
lret
stc
ljmp
lret
sbb
jecxz
mov
in
dec
cmp
repnz
cmc
aam
outsl
test
fdivs
movsb
fstps
inc
ljmp
fisubrs
lcall
popa
push
cmpsb
ja
aam
jns
push
cmp
fisttpll
call
rclb
outsl
jnp
movsb
stos
aas
lods
pop
push
mov
ret
mov
decl
jb
cmp
int3
jns
mov
cmpb
xchg
aas
call
xor
call
and
jno
add
push
adc
cmovae
or
mov
push
sti
xchg
jl
mov
add
repnz
lods
icebp
in
push
jmp
mov
shrb
arpl
mov
icebp
into
dec
lcall
sub
sbb
and
hlt
pop
push
das
cld
dec
sbb
mov
jbe
push
shrl
les
sbb
decl
sbb
les
shlb
insb
aas
insb
or
add
fdivl
in
sbbb
aaa
enter
stos
mov
gs
ds
call
sbb
jnp
int
dec
ja
test
mov
lods
and
decl
mov
dec
push
jl
lea
cmpsb
das
inc
cld
repz
jno
mov
cmpsb
mov
fwait
aam
or
mov
pusha
adc
cmpsb
idiv
cs
dec
repnz
mov
decl
cmc
flds
mov
fildll
xchg
xchg
mov
std
in
shrb
call
adc
adc
xchg
test
aam
addb
mov
and
jg
ss
inc
jle
mov
jno
pop
mov
xchg
clc
cs
dec
frstor
push
sub
in
stos
mov
fcomps
pop
xlat
pop
sub
sub
pop
xchg
cmp
jbe
add
jno
imul
jmp
xor
cmp
clc
sbb
imul
movsb
jno
or
nop
or
movsl
xor
or
sub
adc
xchg
mov
lahf
sarb
je
jg
decl
or
jo
popf
jo
adc
sub
push
dec
test
dec
jmp
fwait
cs
cmc
jnp
mov
jg
ljmp
in
xchg
xor
mov
divl
dec
scas
jbe,pt
push
lcall
sbbl
and
jmp
stos
decl
lea
pushf
repnz
dec
or
pushf
sub
popf
es
xor
sbb
pop
test
and
repz
lcall
sbbl
mov
fucomp
popf
add
dec
rcrb
xchg
jg
and
pop
pushw
in
lea
incl
icebp
mov
push
nop
into
xchg
jge
push
icebp
jne
jb
scas
pop
mov
mov
repz
push
mov
outsl
clc
mov
test
push
push
mov
mov
in
stc
mov
push
rorl
add
inc
sub
shlb
into
mov
cli
cmc
inc
sarb
dec
imul
jge
out
nop
sti
fisubl
sti
sti
fidivrs
popa
std
mov
push
xchg
imul
pop
pop
outsb
add
fwait
pop
push
movsl
mov
jl
jg
lret
ljmp
pop
add
push
in
pop
rol
xor
decl
pop
ficomps
xor
sub
das
gs
out
fdivs
mov
jmp
or
pop
add
add
call
test
out
add
mov
cwtl
sub
sbb
cmp
push
in
cltd
inc
fisubrs
sbb
xlat
pop
jg
ljmp
add
ret
movb
ljmp
add
sahf
or
lods
out
lock
stos
test
fbld
arpl
mov
sti
call
inc
push
fs
pop
mov
enter
adc
popf
dec
fbstp
scas
out
dec
data16
outsb
push
sbb
cmp
call
imul
sbb
stos
push
rclb
sbb
imul
pusha
in
lods
test
outsl
adc
pop
mov
jb
jg
int3
xchg
lret
enter
ljmp
jle
dec
mov
cmp
mov
cmpsb
and
jle
lods
pop
or
out
lcall
test
lock
mov
leave
push
iret
int3
faddp
pop
mov
int3
sarl
fildll
dec
jl
nop
dec
cmp
add
test
add
pop
fiaddl
adc
cmpsl
inc
xchg
add
inc
mov
cmc
jmp
arpl
mov
adc
sub
lea
push
lds
sub
jnp
leave
push
add
loop
jmp
cs
lret
cs
cmp
adc
mov
les
aaa
sbbb
aas
or
add
pushf
aam
pop
add
push
sub
cmpsb
dec
jne
push
mov
push
sbb
cwtl
scas
test
push
xorb
or
cltd
or
ja
pop
popa
rcrb
lcall
movsl
jmp
sub
in
jnp
xchg
mov
out
jge
add
mov
iret
stos
sbb
push
aaa
fcomps
or
insb
sub
jecxz
ret
jl
adc
loopne
cmpsb
jb
movhps
pop
nop
or
or
test
pop
clc
orb
sub
insl
std
pop
outsb
push
cmp
xor
sub
or
mov
push
je
rol
lods
lock
jmp
or
cld
ffree
in
lret
xchg
xchg
ficompl
lcall
popa
mov
daa
das
dec
mov
push
xchg
dec
dec
fwait
test
xchg
mov
scas
cmp
add
shlb
mov
cs
outsb
or
add
and
mov
pushf
sub
sub
pop
push
lcall
add
shlb
push
repz
repz
inc
push
cld
addr16
mov
push
adc
clc
decl
mov
mov
iret
adc
ret
out
cs
ret
or
hlt
ja
lret
cmp
inc
stos
cmpsb
push
dec
pop
sub
rolb
loop
sub
les
cmp
pop
test
sub
std
lret
out
jb
fidivl
ljmp
shl
mov
push
idiv
scas
das
sub
mov
lods
pop
ljmp
or
or
dec
testb
add
or
adc
xor
mov
pop
mov
shrb
cmpsb
lods
ds
inc
jg
mov
jnp
push
shll
jp
in
push
insb
movsb
jns
xlat
pop
sub
xchg
and
mov
mov
fwait
adc
jecxz
xchg
incl
or
add
in
xchg
dec
jmp
shrb
cmc
call
call
hlt
xchg
lods
add
mov
pop
cmpsl
pop
ljmp
and
dec
mov
dec
sub
add
int3
ljmp
push
shll
push
shrb
and
stc
mov
aaa
test
mov
jle
pop
pusha
jne
out
test
scas
pop
push
push
test
iret
data16
pop
loop
shrb
sub
test
and
loope
cmpsl
add
xchg
pop
mov
hlt
pop
sti
mov
mov
adc
xor
int3
jmp
and
add
popf
cmpsl
out
sti
test
shrb
ret
std
rolb
pop
daa
push
aad
pop
cltd
sub
xor
bound
pushf
sti
mov
inc
loope
add
call
mov
out
dec
mov
adc
xchg
mov
outsl
mov
fsqrt
inc
fimull
or
outsb
scas
pushf
into
xchg
stc
or
fsubrs
divl
cld
mov
les
ljmp
jle
or
aam
push
xor
sbb
cli
push
inc
inc
sbb
in
outsl
push
repz
pop
mov
iret
cmp
loop
in
dec
loop
push
fisubs
ljmp
pop
dec
rolb
push
sbb
fildll
mov
aam
test
inc
push
push
stc
push
std
mov
add
cld
in
sub
and
repz
clc
inc
add
dec
stos
nop
mov
or
mov
inc
outsb
mov
std
jecxz
mov
jp
dec
jl
out
insb
cli
incl
adc
fidivs
rclb
sti
iret
and
push
out
sbb
loop
mov
xchg
lahf
mov
nop
xor
in
pop
dec
cmc
cs
xor
lods
xchg
adc
jle
popa
mov
ret
lds
mov
adc
cmp
notl
xchg
pop
out
dec
rcl
xchg
and
mov
push
add
push
cld
and
arpl
mov
stos
ret
sar
adc
cs
fwait
mov
outsb
xor
jns
loopne
cmp
dec
sbb
pop
or
lret
adc
sub
clc
and
inc
mov
fsubr
push
or
mov
push
das
inc
cmovs
mov
push
imul
sub
shl
insb
fnstenv
les
outsl
loop
out
or
xchg
jg
call
push
fisubl
mov
pop
mov
add
push
pop
jns
hlt
jmp
dec
jmp
std
stos
sti
cmp
shlb
jge
add
icebp
cmp
addr16
fildl
push
rclb
aam
push
sub
adc
mov
test
dec
leave
clc
sub
push
in
aam
sbb
jmp
inc
xadd
iret
dec
fcoml
stos
fcmovnbe
cmp
in
mov
call
sub
pop
sub
in
cwtl
cmpsb
scas
sub
fwait
dec
cld
popa
ret
xor
jmp
xchg
sar
mov
mov
lahf
push
jo
push
icebp
pop
or
adc
decl
push
movsb
loopne
cmp
loop
add
inc
inc
aad
add
or
mov
add
or
cmpsl
arpl
fdivr
gs
mov
pop
push
add
xchg
sar
xor
lahf
pusha
xchg
rorb
xlat
add
pusha
clc
rcll
and
pop
cmpsb
mov
fimuls
mov
mov
loope
repnz
jmp
mov
cmp
les
dec
dec
xchg
clc
test
jmp
mov
ret
scas
fcomip
jno
hlt
add
cs
cmp
push
sti
pop
cld
adc
inc
adc
mov
mov
loop
adc
out
add
add
outsl
lcall
loope
iret
ja
inc
adc
cmc
fcomip
xor
scas
jle
dec
pop
adc
lock
cmp
popa
adc
lret
mov
fwait
ja
lcall
jae
mov
pusha
lock
outsl
mov
mov
or
pop
ret
jge
fisubl
or
fucomp
cli
push
insl
gs
ljmp
outsl
add
ret
and
cmp
adc
mov
jg
stc
mov
xchg
fidivrl
jo
in
sbb
popa
jb
ret
jo
and
or
inc
mov
mov
push
add
test
sahf
repz
imul
jmp
fnstenv
int
mov
fbld
lods
call
or
loopne
filds
cmc
fs
sbb
add
lcall
mov
push
xchg
adc
mov
in
jg
shl
mov
fidivl
decb
shrl
jp
jb
cs
mov
iret
rcrl
jmp
fisttpl
clc
stos
pusha
pop
sbb
pop
xchg
ss
jge
jmp
pop
aaa
cmp
pop
out
ds
test
pop
jle
mov
mov
sub
pusha
into
mov
nop
xchg
popa
nop
push
push
ljmp
adc
lcall
bound
ret
sbbl
jmp
push
and
clc
daa
add
lret
mov
in
loopne
addb
popa
mov
push
loopne
cmpsb
fistps
jecxz
cmpsl
notl
repnz
jge
xor
lock
fsubrl
add
scas
mov
scas
jp
xchg
je
push
inc
cmc
push
mov
test
incl
js
mov
jmp
push
ljmp
fisttps
push
mov
leave
call
jge
es
aaa
pop
mov
lds
add
stos
lds
ljmp
adcl
push
jle
int3
adc
and
ret
lods
ljmp
cmpsb
mov
ret
inc
fsubs
or
push
inc
adc
test
subb
sarl
mov
movsb
repz
xor
pop
clc
aaa
xor
dec
icebp
shll
cmp
or
iret
push
mov
cwtl
jmp
rclb
dec
mov
cmp
call
mov
push
shrb
notb
xlat
mov
jmp
jae
stos
inc
iret
loopne
mov
or
xor
pop
xchg
popf
and
add
popa
in
out
xchg
popa
lret
inc
push
push
jnp
sbb
mov
cmp
inc
cmc
daa
gs
mov
xor
clc
scas
inc
jnp
pop
lcall
lcall
cli
pop
fsubl
popa
stos
push
loopne
push
addb
inc
je
cmpsl
ficoms
ljmp
adc
daa
sbb
jbe
dec
test
xchg
mov
clc
sub
pop
out
fcomps
pop
sbb
bnd
and
in
inc
adc
cs
decl
enter
ss
es
insb
mov
mov
push
xchg
cmc
mov
jge
push
pop
in
mov
pusha
test
add
lcall
ds
sbb
push
aas
cmp
push
sub
lods
push
mov
std
push
out
iret
test
xorb
inc
jmp
in
mov
ja
fistpl
lods
ss
add
or
push
das
clc
jg
pop
pushf
push
lock
mov
movsb
jmp
in
cltd
fcoms
dec
or
push
push
cltd
clc
scas
add
rcll
inc
add
aas
push
cwtl
ret
mov
clc
test
push
mov
hlt
push
nop
adc
lds
add
in
jge
pop
pop
jle
dec
in
loopne
push
in
outsb
addr16
push
gs
icebp
mov
mov
and
pop
addr16
test
shlb
lock
jb
mov
push
xchg
cli
jecxz
xor
or
fcoml
mov
sub
and
sar
jg
pop
mov
icebp
cmp
jne
lret
push
cmpb
cmp
or
inc
mov
add
in
nop
jo,pn
filds
pop
pop
call
push
test
loopne
cli
and
and
mov
sbbl
cs
fstp
push
imul
pop
push
mov
out
and
dec
cs
push
sbb
push
data16
js
loopne
xor
mov
fwait
pusha
std
jg
aad
adc
cld
xor
push
jo
mov
inc
adc
std
sbb
lcall
adc
push
fcoml
rolb
mov
xchg
lods
fiadds
jmp
jbe
lahf
mov
push
mov
out
mov
mov
push
out
fisttpl
ja
dec
mov
dec
addb
mov
es
pushaw
adc
jae
shr
jb
filds
mov
data16
repnz
cmp
sbb
adc
jg
inc
les
ss
rcrb
push
mov
jecxz
loop
adc
pop
inc
cmp
enter
and
pop
and
loop
push
aaa
clc
mov
or
xchg
gs
repz
or
mov
mov
and
mov
mov
push
int3
mov
out
test
jmp
enter
inc
imul
daa
push
xor
decl
lock
icebp
imul
call
pop
adc
pop
fisubrl
scas
pushl
xchg
push
in
movsb
cs
cld
mov
cmpsb
subb
jmp
dec
sar
lcall
jo
cld
outsl
ss
xor
gs
add
outsb
add
jp
or
cld
adc
das
pop
data16
clc
test
pop
dec
pop
push
cmp
pop
mov
scas
or
loope
or
out
repz
sarb
sub
pop
mov
icebp
stos
stos
push
subl
mov
push
sbb
out
aaa
shrl
push
xchg
iret
pusha
mov
imul
inc
movb
test
subb
les
cwtl
stos
in
into
inc
shlb
ss
leave
cs
icebp
push
cmp
xorb
pushl
pop
pop
jb
mov
mov
repnz
in
jo
xchg
out
outsb
dec
push
shrb
ss
fdivs
adc
inc
jns
mov
pushf
mov
and
jecxz
adc
pop
sahf
and
outsb
pop
insb
loopne
scas
sarl
mov
dec
adc
arpl
jb
and
stos
dec
jo
nop
lock
ds
hlt
loopne
mov
add
cmpsb
outsl
dec
jge
jge
mov
std
add
dec
rclb
mov
lcall
ficoms
fstpl
mov
jl
mov
inc
fnstenv
subl
idiv
ljmp
int3
xlat
mov
pop
cmp
mov
int3
shrl
lea
sbb
sbb
repnz
decl
adc
cmp
push
iret
fmuls
adcb
mov
cltd
push
fs
lcall
jl
sub
inc
movsb
xchg
outsl
shrb
ljmp
jmp
mov
jns
test
clc
ss
enter
call
pop
popa
std
loope
mov
inc
push
add
inc
ret
lret
sub
fs
out
adc
shr
bound
sar
adc
jnp
or
filds
cli
arpl
das
imul
add
ret
aam
imul
ret
xor
out
or
mov
dec
adc
jmp
push
nop
aas
dec
fimuls
cmpsb
test
test
sbb
sahf
cmp
mov
pop
cvtpi2ps
sub
adc
lock
and
mov
xor
int
pop
test
pop
add
or
add
outsl
or
insl
leave
xor
push
push
pop
cld
int
pop
jno
lcall
in
test
pop
xchg
sarb
push
mov
push
lea
jno
pop
or
fdivr
push
adc
sub
test
xchg
xchg
and
loop
jns
icebp
jb
inc
mov
cmpsl
popa
pop
pushf
pop
ljmp
jne
ret
xchg
jns
iret
add
cmp
lea
fistl
pop
data16
mov
sbb
dec
add
cltd
ret
pop
mov
add
pop
data16
mov
jecxz
popa
addl
scas
rolb
add
stos
add
iret
test
pushl
mov
pop
fidivl
movsl
repnz
xchg
lods
adc
adc
cmc
fucomi
inc
add
inc
jle
cmc
scas
pop
std
and
inc
jg
hlt
insl
repnz
inc
into
mov
sub
sti
stos
jmp
or
dec
dec
and
popf
into
nopl
aaa
dec
or
out
out
mov
xor
clc
fldl
xor
bound
decl
dec
mov
nop
xor
lock
test
ljmp
lods
mov
or
in
or
incl
scas
test
xchg
xor
xor
inc
or
popf
or
test
leave
imul
jg
fwait
mov
les
jle
sarb
jecxz
cwtl
fmull
mov
test
jp
shrl
jg
mov
mov
das
and
pop
clc
jae
repnz
jge
cli
adc
pushl
imul
data16
push
pop
or
xchg
ja
cmp
jge
ret
faddp
cmpsb
sbb
mov
decl
bound
rclb
jbe
pop
and
mov
or
shr
cli
mov
aaa
or
pop
out
sahf
insl
dec
or
or
rcrl
dec
cmc
stos
popa
dec
inc
cld
call
add
mov
scas
dec
lahf
popl
rcll
adc
mov
mov
sbb
mov
loope
aam
push
fisubrl
xchg
jbe
lcall
lret
jg
xchg
hlt
movsb
cwtl
mov
cltd
je
adc
adc
test
fs
or
dec
cmp
lahf
mov
ljmp
aam
mov
pop
fstpl
ret
push
lret
lcall
mov
sbb
gs
lods
fmull
ret
push
cmpsl
testb
cmp
push
in
out
push
mov
or
aaa
out
xchg
cmc
sub
arpl
rorb
add
clc
test
cmc
jmp
mov
mov
ljmp
sub
loop
push
xor
dec
loope
orl
ja
jge
clc
pop
dec
add
xchg
lret
insb
xchg
fwait
sub
scas
ja
mov
jno
cmp
imul
loope
repnz
lock
sahf
dec
or
into
pop
xchg
in
insl
adc
add
cmp
ljmp
jo
push
es
ret
push
cmpsl
cmpsl
jecxz
xchg
shll
dec
xor
sbb
mov
pop
shll
inc
or
mov
aam
and
adc
shll
mov
fldl
subb
cli
and
daa
cmp
jmp
push
adc
fsts
incb
jle
loopne
dec
add
mov
jg
dec
mov
or
lods
inc
imul
lods
lret
incl
rcrl
dec
cli
mov
jg
cltd
sarb
pusha
scas
repnz
xchg
test
daa
iret
shrb
or
sarb
mov
lds
jb
sti
pop
adc
fxch
ljmp
ljmp
movsb
add
push
mov
es
leave
sub
xor
lcall
dec
pop
clc
shlb
lods
push
mov
mov
xchg
add
pop
mov
cli
jmp
movsl
jbe
clc
decl
ficoms
out
xor
out
jns
int
test
idiv
jg
fisttpll
jmp
mov
dec
push
fld
incl
or
pop
ja
aam
dec
gs
pop
mov
repnz
pushf
setp
dec
push
push
mov
cmp
loope
decl
pusha
bound
stos
adc
pop
hlt
lock
add
mov
lods
xchg
and
ja
repnz
popf
out
mov
sub
cmc
bnd
mov
pop
or
jecxz
std
pushl
xchg
cmc
in
ret
cs
pop
sbb
and
les
mov
pusha
jp
and
jb
psraw
in
daa
orl
pop
mov
outsb
add
xchg
scas
movsb
stos
add
push
mov
mov
decl
imul
push
xlat
leave
cld
pop
mov
aaa
dec
loope
fbstp
xchg
movsb
push
lods
cmp
cld
jnp
pop
mov
or
jg
movsb
test
test
mov
xchg
scas
or
ficompl
push
loope
jg
popa
cld
dec
cmpsl
xor
xchg
shll
mov
push
mov
clc
arpl
fsubrl
ss
cs
iret
in
ljmp
sub
lcall
jge
or
je
fdivrs
icebp
mov
sbb
and
lcall
repnz
ss
and
sbb
loope
push
outsb
popa
xor
mov
cmpl
push
hlt
or
mov
outsl
or
cwtl
std
pop
xchg
daa
pop
ficomps
add
push
jmp
xchg
jg
lcall
insb
testb
add
repz
cmp
xchg
outsl
adc
leave
insl
mov
lahf
cmp
out
adc
and
out
push
mov
push
lret
inc
add
jl
data16
mov
push
stc
cmpsl
pop
leave
lods
cli
jbe
pushl
push
add
loopne
imul
mov
inc
lcall
mov
fsubr
inc
push
std
ljmp
clc
sbb
dec
push
and
xchg
out
std
nop
jnp
xchg
pop
jmp
xchg
and
enter
lcall
inc
sub
test
out
xorl
inc
and
shr
es
inc
adc
jg
xor
loopne
jo
loope
repz
loope
dec
fs
aam
inc
add
jnp
out
xchg
icebp
add
jg
daa
jle
out
js
mov
ljmp
sbb
cwtl
pop
movsb
mov
addr16
cmpsl
jnp
adc
jnp
pop
mov
sbb
sar
jp
mov
add
mov
cmp
out
mov
out
xor
out
jl
pop
mov
mov
outsl
test
push
inc
xor
hlt
imul
push
fwait
aas
rcrb
inc
push
lock
jbe
jmp
xor
cmc
cli
ja
cmp
imul
mov
cmpsb
std
push
jbe
inc
les
rclb
std
movups
cld
add
or
or
inc
lcall
lods
addr16
mov
mov
popf
ljmp
dec
testb
adc
push
sti
mov
pusha
push
jne
je
jno
scas
add
mov
xor
sbb
shlb
jb
loop
fwait
sbb
or
sub
mov
pop
jo
decl
int
inc
jle
bound
xchg
add
fld
outsb
mov
xchg
fildl
push
adc
mov
cmp
mov
pop
shr
scas
push
dec
aam
pop
jmp
or
jle
incl
or
mov
pop
ret
jmp
fcomip
pop
and
jle
jge
js
cwtl
cmpsl
xchg
xor
pop
cmp
pop
imul
test
or
push
sub
pcmpgtd
add
sbb
jnp
ret
xchg
lcall
in
test
es
iret
mov
inc
les
test
push
mov
fwait
jg
aaa
test
fisubl
jge
add
out
xchg
mov
outsb
dec
int3
inc
iret
jg
pop
lret
outsb
or
lods
xor
jb
ljmp
fiaddl
pushl
adc
xchg
shrb
decl
and
fwait
adc
js
stos
sub
insb
mov
incl
pop
sub
sti
insb
dec
xor
jecxz
push
bound
and
pusha
out
cmp
jns
jl
in
sbb
pusha
outsl
mov
shlb
das
xchg
jg
mov
nop
flds
pop
and
lret
dec
inc
add
mov
ret
loope
or
mov
add
pop
xlat
xchg
loope
adcl
cmp
xor
fiadds
lock
xchg
jne
mov
shrl
mov
lock
mov
sbb
sarl
inc
jb
ret
ret
inc
repnz
dec
push
mov
aam
and
lahf
xchg
pand
scas
dec
sub
cs
and
ljmp
pop
jg
in
or
data16
pop
mov
mov
int
rcl
gs
mov
cmpsb
push
test
push
pop
repnz
pop
inc
push
stc
push
jg
hlt
push
pushf
mov
push
jo
test
mov
lret
out
jg
mov
dec
inc
out
mov
mov
lret
loope
xor
mov
imul
sub
pop
mov
xchg
pop
adc
je,pt
xor
jns
and
shll
pop
int
nop
dec
xchg
decb
outsb
and
ret
sub
loopne
inc
pop
jae
push
std
bound
inc
xchg
mov
stc
call
insb
inc
data16
xor
jo
enter
leave
cmpsb
sbb
mov
pop
shll
inc
pop
pop
divb
jne
lock
pop
push
out
mov
addr16
inc
sbb
inc
jmp
hlt
popf
cmp
pop
pop
inc
mov
pop
fidivs
fldl
stc
mov
push
add
jns
in
add
cld
es
imull
push
icebp
lcall
rclb
fists
loope
pop
ljmp
pusha
mov
call
inc
ficompl
lcall
fmulp
or
xchg
jbe
inc
add
mov
jg
pop
pop
xchg
into
inc
adc
imull
stos
cmp
sarb
add
xchg
inc
pop
rol
push
std
ja
pushl
mov
sub
mov
pop
and
push
pushf
fildll
mov
ljmp
cs
lcall
push
dec
data16
dec
jne
loopne
jae
xor
movsb
lcall
mov
cwtl
sahf
jmp
mov
jmp
xor
repnz
out
mov
xchg
int3
outsl
adc
adc
sbb
or
pop
cmp
fcomip
xchg
sub
pop
inc
xor
sub
stc
cmp
idivl
ret
mov
add
lock
push
je
sti
cli
jo
aas
pop
ret
lock
pop
stc
sti
dec
outsl
stc
push
pop
mov
mov
aam
pushl
test
dec
fadds
jno
fnstcw
lsl
jns
dec
mov
rcll
call
jmp
adc
mov
pop
insb
into
and
inc
and
cmpsb
pop
loope
cli
fwait
sub
out
shll
inc
int3
jns
cmp
xchg
ljmp
jno
aas
mov
mov
cmp
jp
jp
push
roll
lret
sar
dec
or
push
pop
jmp
cli
loop
loopne
testb
inc
push
ret
in
mov
xchg
int
push
or
imul
fbstp
sub
pop
out
pop
arpl
jp
ret
adc
or
mov
sub
inc
ret
pop
adc
sub
mov
cld
mov
and
fucomip
mov
scas
jg
jmp
inc
into
and
sub
inc
cmpsl
jno
push
ja
mov
sub
cld
pushl
stos
jl
cmp
dec
shll
push
add
call
lret
inc
mov
out
adc
push
clc
es
call
xlat
mov
mov
pushl
inc
jg
ficompl
mov
push
out
xor
loopne
inc
or
cs
in
ja
decl
insb
push
imul
dec
data16
pop
arpl
pop
pusha
out
jmp
dec
lcall
sub
in
add
inc
jg
dec
std
and
iret
out
call
leave
add
inc
fwait
stc
into
incb
pop
jmp
jp
std
dec
data16
xor
push
mov
ljmp
sub
jmp
inc
cmpsl
test
add
mov
repz
movsb
inc
sbb
push
popa
loop
push
movsb
xchg
and
cmp
fdivrl
mov
mov
std
in
push
in
out
cmp
ljmp
fwait
push
pop
push
dec
push
inc
add
sbb
or
call
into
lret
cmp
mov
xor
xchg
and
insb
sub
pop
sub
xlat
ret
sub
inc
cli
jg
cwtl
cmp
stos
addr16
ja
sub
jp
pop
cmpsl
cmp
xchg
clc
pushl
orl
mov
pop
or
ss
callw
imul
icebp
out
bound
adc
pop
adc
jl
xchg
mov
push
jb
push
cmpsb
xchg
and
ds
sahf
mov
and
decl
pop
popf
repnz
fnstenv
mov
pop
sbb
data16
jg
popa
cld
test
add
lahf
mov
xchg
mov
mov
ss
and
inc
inc
xchg
inc
push
mov
adc
cmp
push
xchg
xor
pop
push
pusha
movsl
in
call
push
inc
fwait
std
lret
dec
or
idiv
loope
dec
arpl
rclb
ss
mov
in
pop
cmp
push
je
scas
mov
mov
pop
or
jle
ja
into
cmpsb
add
icebp
incl
fisttpll
pop
bound
rcr
std
push
mov
fbld
cld
mov
aaa
inc
jle
xor
arpl
clc
mov
in
mov
repnz
pop
inc
clc
outsb
mov
jmp
lods
ret
inc
xor
xchg
xor
cmpl
shlb
out
sbb
mov
or
loope
jnp
cld
pop
add
adc
sbb
pop
xor
jns
ret
xor
pop
pop
adc
xlat
and
outsb
gs
cli
aad
in
js
cmp
push
dec
mov
jbe
cld
xor
sub
fistps
xor
lcall
sbb
or
int3
aad
add
push
or
cld
cmp
inc
sti
loop
cmpsb
add
inc
outsl
fnclex
je
fcom
scas
mov
or
out
cli
mov
lret
xor
mov
aad
fdivl
outsb
ljmp
jbe
dec
jg
jo
ljmp
int
add
jmp
sbb
enter
shl
push
and
dec
cli
repnz
mov
fmuls
ljmp
aad
or
mov
sub
pop
adc
call
test
push
clc
je
mov
jge
clc
mov
scas
pop
enter
leave
adc
mov
test
cli
incl
mov
cmp
cli
out
cli
fsubrp
ja
lods
into
cmpsl
cmp
ljmp
add
or
call
or
cld
call
repz
outsb
stc
lods
cmc
cmpsb
add
call
sti
shll
mov
repnz
leave
out
inc
frstor
enter
mov
nop
lret
lods
cli
mov
fistps
pusha
test
cli
mov
jmp
push
pop
fwait
inc
mov
mov
mov
mov
mov
xchg
pop
pop
fists
test
cli
push
jns
add
lcall
push
push
push
mov
cmp
outsl
add
outsl
or
lock
ja
and
repnz
cld
test
cli
xchg
jmp
mov
movsl
push
push
mov
rcl
rorb
mov
adc
call
adc
push
adc
jns
xchg
and
test
sub
insb
aad
jns
jmp
sbb
shr
jae
js
jne
lcall
fstps
or
outsl
clc
xorb
int
fsincos
mov
mov
mov
jmp
mov
push
aaa
jg
test
shrb
cmp
and
push
int3
iret
inc
lods
nop
call
xchg
push
ljmp
cltd
fidivs
pop
faddp
das
lds
cld
xchg
call
xchg
pop
sarl
cld
mov
cli
sbb
testb
int3
xchg
push
pop
imull
cmp
call
iret
inc
lret
out
xor
sub
ficomps
xchg
pushl
int
push
pop
loop
and
stc
shrb
fistps
hlt
lods
int3
ret
adc
inc
jp
or
lods
add
out
decl
insl
std
les
inc
js
aaa
mov
fucom
ljmp
jl
pushf
and
scas
xchg
push
fiaddl
js
mov
mov
ja
rorb
lcall
push
mov
jo
inc
push
test
cli
inc
pop
jns
xchg
addb
addr16
lahf
inc
xchg
inc
addr16
pop
mov
mov
imul
xchg
pop
cmp
cmpsb
mov
jecxz
je
out
xchg
mov
nop
xchg
into
fistps
pop
fwait
int
lret
ds
push
imul
jmp
out
lcall
and
push
daa
mov
pop
imull
mov
iret
cmp
cmpsl
add
repnz
jl
outsb
xlat
pusha
adc
and
xlat
mov
cmp
inc
jge
call
fiadds
lock
cmc
sti
mulb
fisttpl
jmp
lods
mov
sub
cli
sub
ret
sub
inc
mov
movsb
dec
pop
lret
incl
push
std
arpl
jo
pop
lea
orl
mov
loopne
sahf
inc
stc
das
push
ja
arpl
loope
cli
pop
add
mov
or
mov
inc
fwait
pusha
jecxz
int3
fldl
enter
and
add
cld
ljmp
pop
fnstcw
jo
in
sbb
cli
lcall
rcr
shrb
and
mov
push
mov
xchg
inc
popa
popa
fdivrp
adc
xchg
lcall
jle
sarl
outsl
lahf
mov
fsts
xor
pop
loope
fwait
jae
push
fcomip
jmp
stc
sub
movsl
jbe
dec
int
push
mov
jg
imul
hlt
lods
adc
fwait
push
shl
and
out
inc
xchg
ja
pushl
xor
js
sti
cmp
sbb
rcll
mov
loopne
pushl
push
cmpsb
lock
aaa
jecxz
inc
mov
in
push
or
outsl
add
movsl
dec
and
push
dec
popf
call
call
jnp
mov
lcall
cmc
push
pop
mov
movsl
sbb
jbe
adc
sbb
decl
push
dec
dec
inc
jae
sbb
sub
fwait
and
xor
adc
mov
mov
data16
and
jbe
int
in
xchg
loop
inc
mov
repnz
outsb
mov
gs
stos
ja
or
and
daa
pop
mulb
and
mov
fst
adc
mov
mov
mov
sbb
imul
adc
jg
or
pop
or
cltd
repz
push
adc
xlat
shlb
fstpl
outsb
inc
testb
cs
mov
add
ljmp
lods
jp
xor
pop
inc
push
shlb
out
ret
div
sub
mov
lea
std
cmp
or
outsb
sbb
lods
mov
jbe
sub
fstl
mov
fcompl
mov
call
aas
repnz
xchg
stos
dec
mov
mov
scas
je
out
fisttps
add
call
test
mov
add
pop
decl
test
outsb
hlt
xor
jl
in
and
fdivrl
jp
es
sbb
dec
inc
insb
bnd
out
push
pop
lcall
sti
in
repz
dec
jbe
mov
ljmp
pop
mov
in
movl
xchg
sbb
pushl
add
pusha
mov
loope
xor
icebp
jg
stos
cltd
repnz
out
ds
jl
xlat
add
pop
push
sar
jg
stos
or
aad
push
and
pushf
ret
movsl
cmp
add
jg
int
cmpsb
int3
or
rol
fisubrl
ljmp
push
stc
fxch
xchg
decl
xchg
les
mov
xchg
or
push
dec
mov
or
bound
adc
lahf
outsb
call
loopne
test
mov
out
cmpsb
mov
clc
and
loop
mov
ret
loope
push
lods
cld
mov
icebp
dec
aas
mov
lcall
xchg
nop
mov
xchg
add
out
mov
mov
sarl
fldt
call
fisubs
lock
mov
jl
in
fsts
lock
movsl
push
out
roll
out
ljmp
testb
pop
pop
mov
jge
stos
sarl
fcoms
mov
inc
mov
mov
scas
mov
dec
mov
mov
mov
fisubrs
mov
xlat
decl
int
jne
rcl
push
sub
xchg
mov
loopne
pop
mov
cmp
pop
mov
pop
push
push
shrl
loope
push
jp
lock
lret
mov
rcrb
rcrl
ljmp
mov
cld
stos
insl
imulb
sub
test
lret
add
pop
mov
jbe
xlat
pushl
mov
leave
inc
scas
push
sti
movl
loop
mov
or
add
out
push
mov
xchg
test
mov
data16
and
add
scas
ss
sbb
add
call
xchg
jle
mov
mov
loope
jmp
popa
into
jmp
push
out
decb
and
add
mov
mov
fnstenv
xchg
pushf
adc
push
mul
add
ljmp
cmp
or
inc
xbegin
int3
push
dec
loopne
jmp
push
lcall
dec
ret
je
push
test
cmp
lret
dec
pop
pushl
rcl
js
jecxz
jbe
xchg
mov
pop
scas
scas
aam
add
adc
lcall
icebp
inc
out
subb
mov
xchg
xor
decl
adc
dec
or
pop
ljmp
or
xchg
add
out
adc
or
fisttps
bound
mov
incl
xor
bound
push
das
push
ret
fisttps
dec
leave
mov
sbb
push
leave
dec
loopne
aaa
cli
jb
cli
jns
iret
xor
mov
sar
lcall
mov
jge
lret
sarb
jg
addb
pusha
inc
ds
push
incl
call
inc
int3
sbb
out
shll
xor
push
push
sub
or
decl
xchg
jb
pop
pop
pop
dec
inc
jns
out
push
pushl
lret
inc
leave
sbb
sbb
xor
lds
lods
stos
sbb
arpl
sbbl
testl
sub
ret
repz
mov
pop
push
pop
jmp
loope
mov
sbb
lret
ljmp
mov
cld
imul
pop
rclb
inc
fdivrs
and
call
scas
jbe
clc
imul
roll
outsb
out
dec
aas
ja
and
enter
fbld
std
int3
mov
sbb
fxch
inc
les
sbb
aaa
jmp
cli
xchg
inc
cmpsb
repz
movsb
leave
inc
xchg
outsl
insl
push
and
cmp
lret
jle
sbb
xchg
jnp
xor
into
dec
lahf
xchg
imul
sub
fisubl
and
push
jmp
sahf
pop
jge
in
std
sub
push
lds
and
mov
sub
lret
in
inc
xchg
fsubs
jnp
in
push
jns
mov
loop
cli
sbb
or
out
cmpsb
xchg
fs
incl
jbe
inc
xchg
sbbb
cmpb
jno
mov
ljmp
push
ficomps
imul
nop
fsubp
fldcw
incb
repnz
xchg
pop
jecxz
jle
and
jg
mov
mov
xchg
imulb
push
or
mov
out
inc
ret
add
push
jmp
mov
mov
cmp
mov
data16
sahf
cmpsb
inc
push
jecxz
jbe
mov
sbb
xchg
aam
test
xor
int
pop
mov
popf
rcrl
int
mov
test
push
in
fsubrs
fsubl
push
out
mov
jb
in
aas
inc
fsin
call
xor
inc
jb
xchg
push
pop
or
jg
xchg
in
fcoml
into
mov
data16
incl
mov
addr16
ficoms
cli
mov
lock
push
shlb
lret
cmp
cmp
push
sbb
xlat
ret
outsl
pop
cld
lcall
addr16
incl
iret
jae
jae
out
call
push
rcrb
sub
xchg
fwait
inc
call
push
cli
dec
out
and
out
or
out
mov
mov
aad
lcall
sti
fstpt
sbb
dec
movsb
cmpsb
mov
outsl
and
in
cli
mov
cpuid
mov
dec
push
insb
pop
jmp
sbb
xor
out
sarl
scas
dec
lahf
mov
cmp
push
cmp
xor
cmpsl
xchg
cld
in
pop
call
fdivl
fs
imul
add
int
inc
sahf
dec
adc
loop
aaa
hlt
push
jmp
lcall
jge
sub
cmp
pop
or
adc
test
mov
sub
pop
mov
adc
lret
dec
scas
adc
in
pop
aad
push
push
adcl
sub
test
jb
stc
pcmpgtb
enter
loop
ljmp
xor
scas
mov
xchg
jmp
inc
dec
fwait
jmp
mov
push
jg
mov
dec
scas
ljmp
adc
arpl
cltd
cmpb
mov
or
push
addr16
sbb
mov
push
cld
rcll
popa
hlt
jp
bound
xchg
fnstcw
and
jmp
loope
inc
ror
loopne
push
fidivrs
decl
pop
mov
pop
das
cmp
movsb
cmp
jno
mov
add
movsl
sub
push
aam
xor
and
mov
jg
test
outsb
pop
sub
mov
xchg
call
dec
filds
pushf
mov
pusha
lret
fstps
pop
dec
lret
out
lret
push
jmp
jmp
ret
aam
ljmp
ret
dec
lds
mov
decl
push
roll
xor
mov
adc
xlat
sub
stos
cmc
arpl
jbe
push
adc
jno
sarb
dec
dec
lcall
pop
push
out
or
inc
dec
inc
inc
jmp
incl
movl
jp
pop
pusha
test
push
inc
lret
mov
lcall
in
jo
xchg
loopne
icebp
fdivrp
inc
ficoms
jg
lahf
xchg
xchg
cld
jg
loope
sub
je
pusha
das
outsl
daa
jne
nop
mov
insl
pushf
insl
and
std
jmp
int3
ljmp
cmp
ret
test
int
pusha
ret
inc
sub
xor
adc
repnz
pop
push
sbb
mov
push
dec
or
inc
or
lock
aas
hlt
ds
mov
and
adc
fimull
shl
insb
mov
and
cmp
xchg
cmp
daa
jl
adc
dec
mov
push
and
inc
rol
stos
loope
jbe
jae
insb
fiaddl
jb
mov
in
jle
sub
cli
jg
dec
fcoms
cmp
es
add
mov
mov
sbb
xchg
out
fiadds
cld
daa
ret
stos
sbb
jb
out
data16
add
or
aam
cld
test
lods
mov
lret
mov
dec
add
mov
js
lock
mov
inc
sbbl
ja
icebp
test
mov
sti
lods
cld
add
push
out
mov
daa
dec
mov
outsb
mov
xor
dec
or
test
push
mov
movsb
pop
in
pop
cli
les
iret
in
cs
push
adc
inc
dec
mov
rcrb
jno
add
popf
mov
xchg
sbb
xor
lret
lret
sahf
fwait
sub
jg
ss
xchg
mov
jg
mov
adc
fs
mov
outsb
jo
add
or
outsl
test
mov
jge
jmp
std
jg
mov
jge
lods
pop
repz
out
fnsave
cwtl
jb
push
ljmp
test
in
js
sarb
out
mov
xchg
cmp
jg
xchg
mov
mov
pop
pop
scas
test
mov
jnp
pop
sbb
inc
sub
ret
jnp
mov
inc
dec
jp
dec
cmpsl
arpl
rcrl
cwtl
add
ds
pop
jnp
jmp
dec
sahf
hlt
and
pop
call
push
scas
into
fists
pushf
push
dec
out
out
jo
cli
mov
inc
mov
jge
enter
ljmp
bound
cs
mov
or
ss
inc
test
sbb
pop
cmp
push
mov
arpl
ljmp
pop
and
call
stc
sarb
cwtl
aam
pop
push
pushf
or
dec
sarb
js
fwait
mov
ret
push
jp
mov
add
jno
pop
jne
ret
cli
imul
enter
std
xchg
fists
insb
jg
and
or
sub
mov
call
and
push
jge
lock
mov
mov
mov
ss
cwtl
inc
jo
mov
test
add
mov
push
fbstp
and
jmp
popa
push
xchg
cmp
sti
loopne
jno
bound
push
mov
mov
iret
jp
inc
call
incl
xchg
jmp
jno
sub
popa
and
sub
sbb
sar
xchg
insl
mov
aam
mov
dec
neg
decl
dec
xorb
fldt
es
jne
jns
std
call
arpl
push
movsl
stc
fucomip
mov
pop
xor
and
loopne
ss
icebp
ljmp
cli
sub
rcrl
mov
mov
mov
out
and
add
or
push
pop
dec
mov
push
lahf
cmp
cmp
jge
jns
or
mov
sub
jbe
jne
jl
cmpsl
mov
mov
jmp
scas
and
push
inc
test
adc
jbe
cmp
decl
push
inc
xor
fsubs
loopne
pop
xor
test
lret
jmp
test
dec
sti
xchg
sub
push
push
add
aas
jae
cmp
popa
or
xchg
sub
push
mov
call
cld
fwait
push
sub
cmp
adc
sub
nop
mov
sbb
cmpsl
cld
inc
adc
xchg
enter
jle
fld
daa
dec
loopne
add
pop
fcoms
mov
adc
subb
and
daa
ds
cmp
adc
lds
test
mov
addr16
cli
jns
inc
js
sbb
decl
adc
pop
push
cmp
pop
cwtl
xchg
shrl
es
out
dec
cmp
or
fbld
dec
call
clc
push
cmp
repnz
and
fimull
xor
pop
adc
lcall
push
fwait
pop
sbb
add
out
arpl
pop
aas
popf
mov
test
mov
lds
ljmp
inc
jecxz
rclb
dec
cmp
fsubs
daa
push
scas
mov
stos
pop
mov
movsl
jge
sub
xchg
test
lds
pushl
sbb
or
cmp
ja
push
and
jl
dec
mov
add
mov
ficoml
subb
out
inc
add
xchg
sarb
jmp
push
mov
arpl
addb
inc
loop
cmp
cmpsb
pop
jbe
adc
icebp
pop
dec
js
shrb
pushw
out
pusha
push
pushl
cmp
movsl
dec
xor
dec
bound
mov
test
lods
and
cmpsb
hlt
cld
push
pop
imul
cltd
sub
jge
push
mov
scas
push
lock
mov
pop
push
mov
nop
jne
decl
dec
out
cmp
cmp
jns
xchg
sub
cmp
lret
movsl
fwait
push
les
mov
lcall
fs
jmp
je
std
scas
xchg
repnz
icebp
xor
mov
mov
lock
pop
add
pop
aad
xor
jge
out
push
jl
leave
push
xchg
push
loop
repnz
pushl
adc
js
mov
inc
inc
sub
cmpsb
inc
std
pushl
imul
loopne
sub
out
fwait
test
decl
ljmp
xchg
cs
adcb
incl
xchg
xor
jo
xchg
lret
mov
mov
cmpsl
daa
xchg
jmp
push
popa
jns
scas
jg
inc
je
push
cwtl
out
fidivl
xor
or
adc
or
jmp
lret
push
and
xor
mov
out
fld
mov
iret
mov
add
mov
or
movsb
mov
jge
sarb
sub
movsl
push
cli
sbb
cli
pushaw
dec
divb
pop
xor
pop
jl
jecxz
xchg
jle
or
decl
adc
jne
mov
and
pop
sub
sbb
mov
cs
loope
sub
and
pop
and
push
add
in
jp
and
outsb
sbb
out
stos
pop
dec
icebp
dec
int3
mov
cmp
push
cltd
in
pop
test
cltd
rcrb
icebp
fildl
stos
dec
mov
es
sbb
inc
into
icebp
stos
fisttpl
mov
or
push
insl
mov
add
adc
shl
movsb
fcmovne
push
mov
lea
inc
sbb
ja
cltd
mov
daa
int3
sbb
test
enter
mov
cld
int3
fs
movsb
push
arpl
xchg
lahf
add
shl
push
jns
popl
and
orb
clc
push
xorb
jnp
mov
int
es
jno
dec
inc
jl
xchg
pop
test
pop
pop
inc
incl
cmpb
das
in
xor
push
mov
jg
jmp
pop
jg
add
mov
mov
popa
sbb
scas
mov
insl
mov
mov
es
fs
cmp
jl
cmp
mov
pop
in
loop
scas
lret
ss
inc
ss
cmp
pop
jp
testb
add
ret
dec
lret
cmp
mov
sbb
or
ret
or
xchg
pop
gs
gs
clc
das
ss
jbe
mov
jno
icebp
add
cli
pop
mov
shrb
xchg
xor
pop
mov
push
or
out
and
push
sbb
fsubrl
iret
inc
shll
in
fsts
sub
adcw
loopne
adc
mov
stos
jns
and
pop
pop
add
pop
sbb
hlt
dec
mov
iret
pop
test
repz
hlt
lcall
call
cli
js
sti
sub
pushf
jne
frstor
filds
mov
ret
call
dec
incl
jnp
aad
pop
shrb
lds
idiv
aaa
std
jmp
mov
scas
pusha
mov
cltd
jnp
inc
aam
or
mov
jns
clc
mov
insl
pop
inc
pop
cmp
jmp
mov
data16
lcall
or
jp
jo
jmp
movl
cmpsb
push
fdivl
pop
mov
int3
jne
add
outsl
adc
pop
cmpsl
ja
cmpsb
sub
xor
daa
mov
arpl
les
icebp
sahf
dec
fwait
out
or
mov
jo
cwtl
or
and
dec
addb
mov
add
lcall
lods
xchg
cli
imulb
cmp
pop
lock
fsubr
push
addr16
vpaddq
push
lods
mov
aam
push
mov
mov
xchg
sahf
out
dec
add
jmp
fldt
clc
lcall
mov
incb
dec
push
incl
iret
push
sub
sub
jp
nop
cmpsb
pop
jns
movsl
push
mov
adc
mov
pushf
test
adc
dec
jmp
mov
sbb
fimuls
pop
dec
sbb
push
lret
addr16
aad
mov
sbb
out
roll
movsb
inc
neg
jne
inc
push
test
sahf
or
ds
pusha
inc
idivb
fucomi
or
loope
movsb
inc
imul
je
push
pop
fninit
out
lods
xchg
adc
aaa
or
stos
or
pop
xchg
mov
scas
mov
es
pushl
int
xor
xchg
dec
jae
sti
loopne
pop
push
fidivs
subl
sub
inc
pop
push
pop
add
sbb
stos
cwtl
xadd
cmp
sbb
cmp
mov
push
mov
je
into
sub
jecxz
outsb
mov
cmpl
jo,pn
mov
negb
sub
push
cwtl
mov
xchg
fadds
adc
shlb
push
cmp
xorb
jecxz
cmp
into
cs
rcrb
mov
xor
ljmp
in
mov
sbbb
insb
frstpm(287
lahf
test
cmp
mov
push
push
push
mov
mov
sub
clc
xorb
cmpsb
add
cld
clc
lcall
pushf
lret
fwait
insb
xchg
rclb
jbe
lret
sub
movsb
jns
pusha
jbe
mov
push
add
dec
in
movsl
cmp
ja
lcall
dec
sbb
movl
dec
dec
mov
dec
jle
pop
in
popf
je
add
mov
mov
mov
test
ja
ljmp
call
pop
push
ljmp
mov
shr
mov
pop
hlt
xor
clc
scas
cmpsb
fmull
loope
test
cld
jg
mov
xchg
movhlps
fsubs
pop
jg
sbbb
inc
loop
sub
mov
pusha
mov
add
rclb
jmp
mov
enter
pop
in
ss
aam
vpxor
push
lret
shrl
movsb
push
sub
ds
and
lcall
xchg
daa
jnp
jmp
inc
lret
cmp
pop
dec
cld
mov
xor
lock
test
sar
mov
pop
mov
fiaddl
aam
jecxz
and
rorl
stos
xchg
push
lcall
push
adc
push
cmp
cmp
fidivl
xchg
ljmp
jmp
loope
lcall
push
pop
ffreep
mov
cmc
int
jge
pop
icebp
fwait
or
jae
jmp
lret
ret
rol
hlt
push
es
pop
adcb
aad
sub
repz
std
pop
bnd
push
pushf
push
sub
mov
lcall
mov
mov
sbb
mov
xchg
xchg
test
xchg
bound
ljmp
adc
pushl
jmp
lds
loop
dec
lea
dec
out
jl
fsub
pushf
mov
sbb
notb
or
pop
adc
cmp
xchg
xchg
cmc
jle
dec
aam
dec
mov
stc
imul
inc
add
bound
mov
dec
add
bound
push
orl
sub
cld
cmp
test
push
incl
int
mov
sbb
pop
mov
cmp
cld
lcall
int
rclb
mov
lret
jmp
adc
jg
ja
aaa
cld
and
adc
sbb
pushl
push
add
push
cmp
sbb
xor
xchg
jae
jmp
insl
iret
mov
push
pop
ljmp
sbb
pushl
imul
adc
jmp
add
jp
jp
test
cmp
decl
pop
sti
aaa
adc
jnp
sbb
out
jo
sarb
or
fsts
add
pop
xor
cmp
mov
fdivl
pushl
dec
push
jl
icebp
decl
mov
lahf
out
mov
push
lahf
cld
test
adc
lea
inc
dec
mov
push
lcall
std
in
cld
mov
shrb
inc
shll
dec
rolb
test
add
push
test
ret
xcrypt-cfb
cmpsl
mov
push
mov
jge
xchg
js
test
in
cld
mov
jle
ss
jg
outsl
mov
stos
int3
outsl
lds
xor
dec
jmp
jno
mov
cmc
cli
lods
jb
xchg
in
jbe
xchg
mov
stc
test
cmpsl
mov
hlt
jmp
int3
pop
js
fnstcw
xor
rcr
pop
mov
add
mov
bound
popa
dec
cli
xrelease
pop
xchg
jmp
mov
pushl
std
shll
orb
shll
mov
stos
jmp
int3
push
ret
movups
sbb
cmp
nop
das
inc
shl
push
mov
add
lea
incl
fldl
xchg
jl
mov
push
lock
push
ljmp
cmp
pop
mov
dec
xor
test
and
cmpsl
outsl
jge
jmp
jecxz
and
and
push
das
adc
stos
clc
or
jbe
fdivl
sbb
filds
push
loop
mov
pop
shl
lret
je
imulb
out
fwait
out
mov
push
mov
push
fisubrl
inc
pop
xchg
lcall
imul
insl
xchg
pop
imul
fildll
dec
xchg
jecxz
mov
lcall
into
shrb
iret
stc
push
je
jmp
fs
cld
cli
sbb
xchg
pusha
mov
pop
lret
out
and
cs
iret
jo
adc
js
mov
addr16
adc
inc
stc
clc
ljmp
jge
push
cmpl
pop
pop
fnsave
mov
mov
mov
add
in
jmp
cmp
pushl
mov
mov
inc
icebp
push
fdivrs
rorl
call
push
out
mov
lods
sub
jle
or
outsb
into
cltd
lcall
loopne
jns
sbb
leave
xchg
inc
mov
pop
mov
pop
adc
ljmp
sub
fdiv
cmpl
mov
adc
aam
sbb
push
sbb
xor
aaa
or
mov
mov
je
pop
jne
mov
mov
mov
scas
clc
outsl
adc
cmc
inc
cltd
xor
sbb
lock
dec
pusha
jo
outsb
xor
xchg
jmp
test
mov
cli
jg
cmc
jecxz
add
cmp
repnz
roll
jae
or
inc
cmpsb
ds
push
lcall
scas
hlt
xchg
loope
mov
adcb
push
icebp
insl
icebp
add
adc
mov
sbb
cld
inc
mulb
xchg
out
fsubl
jae
out
es
push
stos
cmp
xchg
pop
gs
repnz
mov
adc
lds
adc
dec
xchg
fsubrp
mov
jmp
daa
mov
clc
mov
frndint
scas
call
leave
and
sbb
and
call
xchg
dec
cmpl
loope
mov
lret
sbb
mov
dec
aad
stos
insl
and
fsubr
inc
mov
aam
or
mov
xchg
pushf
jo
dec
clc
sti
cmp
ffreep
mov
dec
in
shrb
sbb
cltd
insl
jmp
cmp
jae
popf
mov
push
addr16
leave
pushf
mov
or
scas
jbe
jle
mov
jmp
pop
hlt
and
inc
shlb
std
adc
out
xor
ja
insb
jns
rcrl
enter
xchg
cmp
arpl
out
fistpll
inc
xchg
mov
std
int
push
or
into
jo
gs
in
mov
lock
repnz
data16
dec
push
jmp
ds
inc
outsb
ficomps
jp
add
jg
test
jmp
test
inc
cld
cmp
jb
adc
jne
mov
cmpsl
push
xchg
and
jg
xchg
lods
aam
cmpl
xrelease
jo
test
mov
sti
insl
cs
out
negb
mulb
stos
mov
es
pop
mov
imul
push
lock
in
mov
incl
or
jle
push
int3
push
xchg
mov
jmp
imul
incl
pop
pop
sarb
ret
enter
sub
idiv
mov
jg
cmp
jp
jns
mov
ja
xchg
notl
add
jb
pop
pop
in
call
push
sbb
icebp
pop
movsb
jno
dec
loop
imul
imul
movsb
mov
out
push
mov
rclb
test
mov
mov
movsl
fbstp
or
xchg
out
mov
pop
lods
fs
rol
cli
sti
cli
jns
mov
outsb
xchg
push
ljmp
jmp
cmpsb
sub
push
sbb
ret
scas
dec
test
mov
mov
cmpsl
push
jno
push
push
imul
incl
sbb
or
push
test
dec
stos
stos
fdivrp
incb
and
decl
inc
shlb
imul
jg
pop
add
add
mov
sbb
cwtl
ret
push
push
incl
xlat
repnz
lea
das
jns
loope
insl
cmp
ja
outsb
xor
in
mov
mov
push
lods
dec
cmc
dec
decl
fcomip
add
mov
in
das
aad
push
add
hlt
or
lcall
and
std
add
das
add
imul
mov
cmp
xchg
imulb
lods
data16
fcompl
decl
scas
jl
movsl
shlb
scas
xor
adc
jbe
sub
xchg
pop
test
jg
loop
js
xorl
repnz
cmp
inc
fidivrl
loope
jecxz
jg
ds
hlt
dec
and
cmc
sub
ret
ljmp
aas
dec
dec
mov
out
enter
ljmp
adc
cmpsl
sbb
jne
aas
sbb
jle
decl
mov
test
cltd
imul
push
jmp
cmp
rcrl
pop
xchg
mov
in
dec
sbb
pop
sub
ret
xchg
dec
dec
js
push
aaa
jg
mov
cli
jmp
loopne
shll
lcall
push
mov
out
add
pusha
mov
icebp
in
jae
jg
ret
pop
out
adc
ret
icebp
jno
shrb
loope
aam
adc
decl
lahf
into
into
or
jns
sarl
xor
jge
in
stos
and
out
adc
int
les
xchg
cmc
cmp
lcall
mov
mov
xchg
push
mov
incl
sarl
jecxz
push
into
sbb
add
sbb
mov
sbb
outsl
clc
mov
stos
or
sarl
mov
out
inc
mov
adc
pop
mov
dec
xor
sub
rorl
push
push
ret
mov
scas
fldl
data16
jmp
push
outsb
jle
xchg
and
add
inc
in
out
stos
cli
mov
adc
or
push
lcall
jl
jbe
mov
lret
add
scas
jmp
pop
push
push
rcrl
inc
push
inc
fucomp
jp
mov
pushl
pop
icebp
in
push
cmp
xchg
push
dec
out
leave
xor
cmp
add
lcall
and
clc
daa
push
into
lea
sarl
call
lds
test
loop
sarl
leave
test
rcl
adc
int
mov
icebp
adc
xchg
js
add
jg
and
std
fnstsw
push
dec
das
jmp
lahf
push
daa
xor
sti
push
aaa
mov
ljmp
cwtl
ret
inc
sub
incl
xchg
outsl
scas
in
inc
mov
adc
les
sub
cld
mov
gs
push
fwait
pop
mov
add
out
popa
loop
pop
inc
js
ret
das
inc
sahf
push
jns
loope
movsb
pusha
aaa
jae
sub
les
adc
sbb
int3
jmp
fildll
jne
and
leave
jg
sbb
outsb
out
add
daa
cmpsl
cli
jb
pop
dec
jmp
rcrb
cli
pop
mov
decl
addr16
sub
aaa
fisubl
fwait
and
stos
inc
add
mov
sahf
and
jecxz
cmpl
xchg
jo
lcall
or
test
mov
dec
in
mov
mov
daa
ljmp
jl
push
xor
lock
or
xor
push
in
xor
dec
test
or
mov
andl
or
mov
adc
ret
pop
bound
test
rorl
pop
sub
mov
mov
mov
add
and
ret
inc
fidivrl
mov
lret
cmp
ljmp
outsb
push
pop
repnz
clc
std
es
jb
ljmp
xchg
pushl
mov
sub
push
push
rcrl
insb
lcall
push
test
and
fwait
insb
xchg
sbb
xor
jmp
cmpl
movsl
fisttpll
mov
out
pop
xchg
or
std
xor
inc
loope
imul
jp
inc
xchg
xchg
xor
mov
inc
sub
aaa
insb
out
loop
fcomps
adc
fcomip
aaa
cltd
push
inc
nop
test
popa
adc
fmull
outsb
loop
lea
or
jae
in
insb
lar
pop
push
js
cmpsb
mov
mov
pop
mov
fdivp
mov
inc
mov
add
pop
add
fstpl
xchg
jae
outsl
cmp
test
xchg
stos
xor
outsl
andb
mov
sub
call
fcomip
mov
cmp
xchg
repz
sti
in
lret
pop
dec
add
mov
sub
rcpps
mov
call
sub
fimuls
fs
hlt
push
movsl
dec
adc
cs
lds
jno
adc
add
aam
or
pop
fnsave
xor
outsb
loopne
xlat
ss
pushl
movsl
or
xchg
xlat
dec
push
mov
and
call
fistpl
test
shlb
stos
pop
cmc
repnz
cmp
push
out
ret
jle
shll
lahf
xchg
dec
clc
push
dec
lret
jg
lods
cwtl
mov
adc
mov
push
add
mov
inc
xchg
std
push
jle
out
push
lret
fbld
xorl
filds
jbe
push
fisubl
cmc
mov
test
aam
and
cld
iret
loope
push
adc
cmc
movsl
lea
loopne
dec
rol
ljmp
pop
or
sti
pop
pop
or
cmp
mov
pop
dec
jns
clc
rclb
inc
outsb
push
xor
push
adc
lods
and
mov
jmp
ja
incl
mov
test
and
xor
testb
jne
iret
lods
bnd
mov
pop
incl
push
jg
ror
cmc
adc
cli
adc
mov
ds
pop
sbb
fdivs
lds
scas
xor
mov
push
xor
jecxz
jg
cmp
xchg
mov
nop
mov
cwtl
mov
les
jecxz
das
and
push
mov
ret
cmpsb
addr16
nop
aas
cmp
mov
pop
xorb
cmc
std
cwtl
bound
lcall
jb
outsl
dec
popa
daa
mov
stos
pushl
or
inc
int
jecxz
inc
clc
dec
mov
mov
clc
ljmp
cmp
jecxz
data16
mov
inc
subb
jmp
cmp
inc
mov
and
mov
int3
mov
stos
stc
lcall
adc
scas
cmpsl
pop
ja
or
int3
fwait
test
cmpsb
push
add
rcrb
pop
out
scas
pushl
clc
add
and
mov
into
inc
xchg
clc
dec
mov
cld
das
xor
int3
mov
shr
jp
mov
cmp
push
repz
cmp
jmp
push
cs
mov
les
mov
call
mov
scas
icebp
pop
push
ds
orb
inc
movsl
std
jge
popf
xor
jmp
fmull
xchg
cmc
jne
out
aaa
pop
jg
arpl
sarl
jle
and
push
orb
mov
xorb
je
mov
fists
and
cwtl
xchg
add
jmp
and
and
loop
jg
loop
insb
ret
mov
xchg
cltd
call
test
cli
int3
xchg
out
cmc
and
cmpsl
lret
xor
sub
dec
adc
iret
data16
repnz
push
fwait
in
orl
pop
je
dec
cmpsb
mov
cli
xchg
mov
rcrb
lret
aaa
mov
sar
ja
hlt
shlb
pushf
and
movsb
mov
push
test
leave
incl
sbb
add
cltd
mov
loope
loopne
adc
icebp
lds
aaa
dec
aad
pop
int
jae
in
imul
xor
push
outsb
dec
lret
loop
sbb
call
pop
daa
lret
xchg
xchg
sbb
push
incl
sbb
shrb
pop
inc
mov
cmpsb
scas
outsl
jecxz
push
pusha
shrb
bound
cld
ja
iret
outsb
dec
cmpsb
nop
cmpl
stc
std
sub
ss
shlb
movsl
cld
inc
xor
int3
idiv
jmp
cltd
jno
mov
push
aam
jge
orl
ret
sbbb
outsb
xor
sbb
pop
pop
mov
xor
xor
mov
dec
sub
jne
or
ja
push
mov
scas
aam
sbb
repz
aam
sub
out
fs
rcrb
in
and
hlt
push
mov
mov
ror
push
cmpsl
jmp
insl
daa
hlt
push
xchg
cmc
dec
stos
push
dec
inc
lock
clc
ja
rorb
loop
std
ret
push
or
jmp
sub
loope
mov
scas
fbstp
fstpt
sar
push
mov
mov
mov
mov
aad
cwtl
in
les
hlt
cld
sub
inc
xor
daa
jbe
data16
jg
mov
jb
jb
add
or
cmpsl
pextrw
inc
pusha
in
push
lret
and
fcomps
data16
cli
sub
out
addl
push
push
incl
push
or
jo
push
or
data16
sub
sbb
int
jo
push
fcomip
divb
xor
xchg
mov
and
stc
mov
out
push
test
cld
decl
xchg
sbb
leave
xchg
pop
jne
jns
cld
or
imull
decb
cmp
jg
dec
clc
ljmp
out
jae
or
inc
movsl
adc
and
arpl
call
mov
pop
fmul
cmp
sub
mov
in
or
xchg
and
push
lret
lock
cmp
jmp
xor
xchg
enter
loopne
cli
dec
fmuls
push
je
mov
hlt
xchg
dec
push
pop
ss
cmp
pop
xor
sar
push
fisubrl
fs
pop
adcb
jbe
mov
in
aaa
or
jnp
adc
add
pop
jecxz
sbbb
dec
fcom
fistps
cmc
cli
das
mov
xor
fwait
into
or
pop
or
jnp
aaa
jg
hlt
nop
test
ljmp
and
movsb
inc
xlat
call
js
add
jge
lock
cmp
cli
popa
rol
decl
addl
aas
dec
xchg
and
sahf
int3
out
sub
andb
mov
inc
xchg
inc
mov
in
incl
inc
es
out
loop
push
pop
je
jno
and
pusha
movsw
sbb
inc
loopne
cmp
insb
inc
mov
std
add
das
push
add
jge
decl
lock
inc
arpl
push
xchg
or
and
or
fwait
push
sbb
jle
xchg
inc
or
call
pop
movsb
inc
fdivrs
out
pop
mov
mov
les
out
cmp
dec
mov
jg
and
inc
jl
push
mov
pushf
mov
or
push
sbb
mov
cli
sub
lods
inc
lret
push
cmp
in
push
fildll
dec
xchg
mov
loope
aaa
outsl
jp
adc
fcomip
pop
lea
mov
push
arpl
and
jp
adc
pop
sub
sbb
add
add
inc
int
call
addr16
in
lds
je
dec
xor
je
std
dec
mov
jge
cltd
and
add
call
movsl
into
popf
and
pop
push
jnp
loope
sbb
pop
arpl
pushf
inc
loope
das
push
lret
xchg
lods
cltd
test
adc
sbb
pop
push
ficoms
in
inc
es
mov
fwait
push
mov
cmp
pop
movsl
out
rcr
push
mov
emms
inc
ja
lcall
pop
lock
pop
add
xchg
jmp
inc
adc
imul
mov
aam
jecxz
xchg
pop
mov
mov
lods
hlt
dec
sub
adc
fwait
mov
sbb
pushl
push
sarb
sub
sarl
les
mov
cmp
in
push
mov
test
jg
shl
loopne
lcall
dec
iret
cmp
dec
fs
dec
std
in
xor
imul
ljmp
push
xchg
jecxz
das
clc
jae
int3
mov
std
ja
sub
outsl
cli
jae
xchg
mov
sub
inc
insl
je
pop
cmpsb
push
lock
add
inc
adc
leave
add
sti
sub
sarl
cmp
cmp
push
pop
lods
fimuls
rclb
leave
add
rclb
dec
jle
push
incl
test
test
imul
clc
int
jl
xor
xor
push
in
mov
mov
incl
repnz
mov
leave
adc
pop
jge
or
mov
mov
sahf
loopne
and
mov
cmp
jno
and
orb
jg
std
mov
jne
insl
hlt
fldln2
je
push
mov
jmp
or
and
iret
pushf
popa
arpl
lock
test
pop
jmp
adc
shll
add
fiadds
adc
push
test
popf
fimull
sub
aas
add
fildll
add
sub
stos
mov
ficomps
outsl
ret
push
scas
dec
or
lret
pop
push
sbb
lret
push
jnp
push
insl
jmp
daa
lret
add
xlat
mov
xchg
ret
mov
int3
ffree
adc
mov
std
pop
das
jno
shll
hlt
lcall
xor
jmp
adc
lret
mov
push
inc
push
cwtl
cmpsl
ljmp
arpl
cmc
mov
push
fcomps
sub
xchg
in
jno
add
icebp
es
stc
jle
ds
stos
jle
or
enter
pop
insl
push
push
js
fbstp
xchg
push
fisubl
push
lcall
ret
and
fdivrl
xchg
xor
inc
push
mov
test
mov
das
jle
mov
fisttps
pop
test
xchg
pusha
pop
aad
nop
out
ret
inc
pop
cmpsb
lock
insb
add
mov
arpl
cmpsb
popf
add
lcall
xchg
xlat
std
out
ret
mov
dec
push
test
lock
loope
subl
sbb
jo
loope
test
jg
push
add
inc
mov
push
aam
dec
inc
sbb
mov
hlt
gs
adc
shl
lods
aaa
mov
es
pop
jb
aam
cmp
adc
ret
mov
pop
enter
ljmp
add
push
xor
push
andl
mov
xchg
lcall
std
lahf
add
incl
ljmp
xchg
in
mov
mov
pushl
idivl
push
jge
cltd
mov
push
push
dec
lret
stos
fwait
les
hlt
xor
mov
push
mov
mov
ljmp
std
in
je
mov
jp
lahf
inc
outsl
jb
cmp
mov
sbb
jmp
and
xor
in
pop
jg
fidivrs
insl
ret
loop
push
out
int
dec
cs
or
jbe
ret
cld
push
pusha
ret
xor
cs
fcom
insb
icebp
or
ss
mov
add
imul
pop
cmp
and
ja
leave
and
pushf
add
xchg
into
mov
push
dec
jg
cli
lcall
das
dec
add
es
lret
mov
out
lock
fmull
lret
mov
mov
mov
xor
sub
rolb
ret
mov
decl
mov
subl
mov
adc
mov
dec
fdivrs
inc
paddq
loop
jo
jecxz
bound
adc
cwtl
gs
call
mov
cltd
leave
dec
dec
fwait
aad
sub
mov
mov
pop
mov
mov
adc
call
pop
imul
imul
jb
mov
push
ret
mov
pushl
cld
mov
inc
pop
icebp
loop
pop
stos
test
aaa
and
stos
dec
decl
sahf
insl
jmp
hlt
dec
es
or
outsb
jo
push
enter
inc
pop
adc
jp
insl
sti
cwtl
mov
test
xchg
or
xor
jnp
cs
mov
not
sbb
and
add
aaa
cmpb
dec
pop
add
jp
xchg
inc
dec
out
lcall
push
adc
pop
bound
dec
clc
mov
xchg
cmp
push
je
shr
fnstsw
sbb
arpl
mov
aad
mov
push
test
dec
icebp
sar
add
push
hlt
pop
jp
sub
jmp
call
adc
iret
inc
pop
cmpsb
xor
into
sub
ljmp
pop
rorb
test
popf
dec
jp
fcmovu
sbb
sub
xor
sbb
jns
clc
lods
cli
pop
jge
cmpsb
cmp
inc
lret
cmp
sub
sbb
inc
or
sub
mov
push
je
call
loopne
out
pop
daa
pop
and
xor
test
incl
push
iret
mov
in
sub
sarb
scas
add
decl
pop
les
jb
inc
adc
mov
sarb
jbe
sti
dec
dec
cmpsb
movsl
call
mov
mov
sbb
lahf
call
pop
lods
ljmp
xor
mov
jnp
xor
xor
xor
push
int
cmp
icebp
cmp
mov
xor
repnz
lods
es
adc
xchg
pop
jle
int3
stos
jns
sub
cld
push
popa
pop
hlt
outsl
mov
scas
test
scas
in
inc
cmpl
mov
sbb
das
mov
popa
jmp
rol
call
add
call
jo
clc
mov
loop
push
pop
sub
call
jg
add
bound
out
push
add
xchg
lahf
fiadds
sub
add
pop
mov
mov
scas
mov
mov
jl
add
sahf
or
popf
cli
mov
mov
arpl
jmp
pop
and
mov
data16
loopne
nop
jl
loope
fdivrl
decl
fsubrp
sti
mov
mov
mov
inc
fisttps
cmpsb
push
incl
xchg
lock
lds
xchg
inc
mov
jg
movsl
jmp
mov
jb
push
mov
jbe
fistpll
or
add
popf
bound
mov
lods
daa
mov
or
pop
pop
inc
mov
js
and
mov
pop
bnd
js
test
jmp
out
outsb
clc
or
and
in
xor
int
and
or
add
xchg
jle
mov
pop
fwait
mov
test
cmpsl
xor
lock
lret
mov
popa
dec
dec
rep
daa
das
fcoml
std
xor
fimuls
or
cmp
insl
fldenv
js
andb
fimull
decl
fs
push
rcll
xchg
cs
mov
or
jmp
lcall
ret
mov
loopne
push
enter
sub
rcrl
cltd
xchg
test
mov
sub
outsb
dec
mov
cmp
push
sahf
xor
xchg
jl
lods
mov
pop
pop
jecxz
sbb
fidivs
xchg
mov
and
repnz
pop
in
int3
ret
aaa
out
pop
push
rcrl
aas
xor
lock
cmpsb
or
mov
pop
or
das
call
lret
xor
stc
and
imul
xchg
cmc
jmp
test
fwait
and
test
lea
iret
cmpsb
push
incl
add
jp
adc
ljmp
ret
cmp
inc
insb
std
pop
cli
in
mov
enter
dec
jae
inc
aaa
in
add
jg
scas
ja
les
and
es
xchg
push
mov
jb
or
jae
pop
int
fucom
rclb
sbb
lret
pop
nop
pop
mov
stos
xchg
popf
lcall
pop
cld
add
pop
inc
or
mov
pushf
mov
jge
ja
push
pop
inc
mov
xchg
cmp
cmc
sbbb
jbe
pop
pop
push
sub
insl
add
lea
shrb
ljmp
push
add
out
out
push
sub
xorb
mov
daa
push
xchg
add
inc
sbb
sub
cltd
cwtl
data16
mov
jbe
xchg
jp
repnz
add
pushl
mov
sahf
xchg
ret
cmp
lret
std
call
ficoml
mov
pop
pop
test
pop
ljmp
jg
scas
xor
cmp
test
fadd
xchg
or
inc
sahf
in
stc
jae
mov
scas
and
pop
dec
scas
xchg
push
icebp
jg
xor
mov
sub
js
icebp
mov
rcll
cmc
push
out
imulb
out
out
daa
aam
adc
pop
ljmp
icebp
jno
hlt
push
and
test
test
cmp
sub
lea
pusha
loop
pop
data16
out
fdivl
or
std
adc
rclb
int
jmp
les
cmp
clc
pushl
imul
neg
in
fdivrl
std
jl
in
leave
fdivr
mov
xchg
sbb
out
imul
jl
jecxz
loop
test
shll
dec
mov
mov
fcompl
pop
jo
and
test
jmp
stos
mov
mov
inc
pop
jmp
ret
and
mov
ret
push
mov
and
push
pop
fisubl
xchg
subb
adc
lcall
pop
jg
insb
loopne
call
mov
mov
cmp
push
jns
adc
es
imul
daa
loopne
jg
daa
test
andb
hlt
mov
loope
adcb
push
sub
data16
imul
and
push
mov
popa
outsl
inc
les
xchg
leave
lret
xor
mov
push
fsub
push
dec
pop
ja
jg
xor
shlb
xchg
mov
xchg
push
ds
cmpsl
into
lcall
into
popf
cmpsb
int3
push
cmpsl
push
pop
lcall
ds
push
shrb
pop
fcmovnu
xor
dec
mov
inc
pusha
adc
push
add
sub
inc
movsb
je
push
dec
inc
popa
mov
push
pop
sub
iret
sbb
enter
mov
mov
mov
push
orb
in
sub
inc
mov
addr16
mov
rorl
mov
iret
jbe
inc
icebp
pushf
add
xor
push
mov
push
cmp
std
std
mov
mov
cmp
movsl
mov
hlt
mov
stos
add
sub
mov
sar
popa
mov
mov
addl
out
subl
mov
loopne
mov
xlat
inc
out
lahf
jbe
pushl
decl
js
add
push
add
jnp
mov
add
jp
cmp
ret
or
mov
mov
pop
shrl
pop
dec
jae
cli
call
dec
jge
xchg
out
adc
and
dec
cld
jg
fs
out
fisubl
das
add
xchg
lock
rol
push
inc
xchg
push
dec
sub
cltd
das
inc
sub
inc
inc
pop
pushl
imul
dec
jns
sbb
pusha
stos
jge
imul
inc
iret
jge
dec
outsl
mov
sub
scas
add
shl
mov
ss
mov
push
data16
clc
mov
fidivl
sub
sbb
test
inc
fadds
int
pusha
fcmovne
inc
push
movsl
fdivl
mov
int3
dec
pop
lods
xchg
sub
and
arpl
jno
imul
adc
fbld
push
mov
das
icebp
es
xchg
fs
mov
add
stc
fnstsw
ljmp
mov
add
les
ret
addr16
daa
dec
mov
dec
sbbb
pop
mov
shr
xchg
jns,pt
adc
es
mov
cli
xchg
mov
je
out
or
in
cmc
jl
in
push
cmpsl
jns
mov
movsl
sti
das
add
mov
sub
ja
clc
mov
data16
out
lods
nop
ret
ss
xchg
ret
cmp
cmp
das
or
stos
leave
fs
add
adc
into
testl
lea
shrl
jo
call
movsl
xchg
jmp
xor
loopne
xor
pushf
push
cmp
pop
out
repz
orb
inc
ret
mov
pop
jno
mov
cmp
mov
xor
mov
scas
mov
sub
cmp
ljmp
fldcw
push
pop
fidivs
hlt
xchg
insl
jecxz
push
outsb
scas
jno
pusha
push
mov
mov
fistps
xchg
pop
xor
or
enter
hlt
xchg
adc
repz
hlt
cmpsb
cmc
cmpsl
xor
and
pop
pop
call
mov
lret
in
cmpl
mov
jno
decl
sub
fst
fisttpl
stos
jp
inc
aad
sar
mov
cwtl
cmpsl
cmpsb
push
pop
dec
in
pop
push
xchg
scas
cmp
sar
inc
dec
leave
mov
add
std
add
ja
sahf
mov
push
xchg
jns
lret
and
aam
or
pop
sub
imul
jbe
subb
or
gs
mov
dec
movsb
sbb
scas
jnp
jge
mov
mov
mov
xchg
repnz
xor
outsb
lea
nop
sar
andb
cli
stc
pop
lock
cmpsb
pop
cmpsb
mov
cwtl
pop
xchg
negb
out
popa
adc
lret
into
xor
mov
jg
cmc
mov
push
mov
in
mov
mov
inc
jg
pushl
cmpsb
mov
les
and
pop
inc
cmp
in
xchg
ss
push
jae
jp
int
aam
jae
push
ficoms
push
pop
test
jg
repnz
push
pusha
mov
test
aad
js
mov
mov
imul
mov
push
test
sahf
pop
dec
inc
inc
inc
out
cltd
addr16
incl
cmp
mov
clc
jbe
scas
lret
lock
and
imul
jnp
sti
out
sar
inc
cmp
pop
add
jg
sbb
mov
js
push
in
ja
cltd
stc
in
mov
xor
cli
orl
pop
sbb
es
jg
out
insb
sub
mov
jecxz
mov
push
das
cltd
sub
mov
mov
loope
dec
xchg
sahf
fstl
pop
test
std
in
sub
add
inc
iret
fnstenv
std
xchg
cmp
in
jge
out
cli
js
lret
jbe
repz
cli
leave
add
data16
cmp
xchg
fists
mov
sbb
idivl
cmpsl
rcll
insl
ret
jmp
and
fidivrl
mov
dec
in
cmpsb
jnp
cmp
out
lret
mov
jg
std
inc
popf
adc
aad
addr16
loopne
stc
jno
mov
lea
jo
mov
mov
shll
fstpl
push
push
jg
or
inc
repnz
mov
cmc
cmc
push
std
mov
es
aam
out
xchg
adcb
decl
sub
adc
adc
mov
push
push
idivb
jmp
mov
enter
xchg
cmpl
inc
in
mov
test
lret
cld
lret
mov
cmpsb
test
pop
icebp
ja
jge
inc
faddl
scas
jb
pop
mov
xlat
out
imul
fdivs
pop
mov
xor
call
push
adcb
movsl
mov
jne
sbbl
mov
fs
mov
stos
in
dec
daa
mov
in
das
mov
ljmp
sub
and
and
adc
mov
sub
ljmp
jbe
jmp
in
lcall
addr16
pop
dec
mov
lock
push
fwait
imul
loope
mov
nop
fnstsw
and
movsl
loopne
cmp
sub
mov
aam
cmp
lret
or
loopne
push
sti
inc
fistpll
mov
ljmp
ret
test
lret
inc
add
mov
or
insl
xchg
sahf
and
lret
cmpsb
adc
call
adc
and
sbb
pop
push
mov
xchg
adc
xchg
sarb
into
or
clc
push
cmp
dec
jbe
movsb
push
jg
loopne
movl
jecxz
mov
inc
mov
sar
xchg
mov
jne
ret
push
jo
hlt
add
pushl
dec
push
mov
movsl
dec
addb
andl
fs
push
iret
sub
stos
cmpsb
int
inc
jb
insb
fsubrl
addl
lock
inc
pop
das
xchg
push
or
adc
sub
rcll
add
sbb
test
sbb
cs
and
push
movsb
sub
mov
adcb
mov
xchg
cmc
sub
fxch
aaa
loope
mov
adc
adc
rcll
pop
jno
jo
push
sub
cmp
cmp
lcall
aam
out
mov
rcl
pop
ja
decl
inc
xor
and
hlt
mov
push
pushl
fcomps
mov
mov
ds
mov
cld
int
mov
fwait
test
push
ljmp
sbb
cli
notl
outsb
inc
push
jo
call
jge
shr
arpl
adcb
mov
shll
and
pop
cld
mov
jae
adc
out
les
jge
mov
push
push
clc
ljmp
pop
pop
xchg
sarl
mov
popf
jle
add
mov
pop
mov
data16
popa
test
call
cli
rol
cmpsb
mov
xchg
and
push
mov
xor
stos
leave
fsub
jle
fs
cli
and
fnsave
pop
mov
bound
clc
jecxz
cld
fs
and
rol
xlat
scas
fadd
lahf
sub
fucomp
xorl
incl
mov
xchg
xchg
scas
dec
pop
push
fcmovnu
in
aam
fisttpl
scas
add
es
mov
sbb
pop
mov
mov
adc
das
xor
call
push
jb
jle
push
fnstenv
lock
jg
arpl
adcb
xchg
aad
pushl
lret
pusha
jp
jmp
loope
pusha
ficomps
out
lds
fistl
decl
push
add
mov
dec
aaa
pop
pop
repz
mov
and
jmp
fnstcw
jp
jecxz
push
mov
cwtl
dec
sub
jl
lods
aad
loop
add
mov
mov
outsb
add
cmp
and
lods
push
mov
ja
js
pusha
push
add
stos
stos
sub
fs
incl
cmp
or
movsl
mov
loope
test
popl
push
or
arpl
test
cmc
insb
inc
cmpsb
scas
rclb
enter
mov
fdivrs
xchg
pushl
fldl
jae
faddp
cmp
mov
xchg
push
addr16
roll
sbb
mov
clc
or
xor
push
loope
in
mov
cmpsb
xor
jno
ljmp
ljmp
xor
das
push
push
mov
cltd
sbb
mov
imul
cwtl
fmuls
sub
mov
push
call
mov
lock
cmp
aas
insb
xchg
shrl
dec
push
push
and
mov
mov
ss
jb
mov
es
inc
mov
cmp
inc
pop
add
sarb
mov
push
add
pop
inc
xor
bound
cmpsb
add
pop
add
and
ljmp
xchg
mov
test
fisubl
mov
fidivl
sar
pop
or
pushf
pop
das
idivl
out
mov
dec
inc
adc
jne
aad
and
ds
jb
loop
add
add
lods
pop
xchg
jle
cwtl
or
mov
test
xorb
inc
call
sbb
or
icebp
and
mov
movsb
aaa
cld
and
mov
pop
scas
dec
mov
out
std
or
push
dec
fcompl
add
nop
sbb
sar
call
inc
or
xchg
fidivrl
sar
pop
fnstenv
movb
or
jle
in
fisttps
xchg
cld
rclb
cmp
or
push
inc
aad
and
push
ja
decb
cmp
adc
stos
mov
add
fwait
and
dec
and
inc
and
decb
add
pop
out
inc
nop
mov
cmp
pop
movsbl
aam
into
cmp
jb
clc
push
push
xlat
int3
pop
inc
scas
mov
pop
dec
ret
ds
pop
mov
pop
es
mov
std
xchg
add
cmp
jae
jmp
adcb
or
mov
pop
int
stc
mov
push
inc
fimull
mov
pop
and
pop
xchg
push
sub
dec
cli
mov
test
test
negb
xchg
jmp
arpl
pushl
push
push
mov
adc
enter
mov
inc
add
sub
pop
push
ljmp
sub
or
cmpsl
dec
je
inc
and
xorb
cli
push
add
dec
jmp
xchg
cli
fisubl
jle
sbb
inc
pushl
jbe
andb
ss
sbb
incl
ljmp
mov
loopne
lcall
inc
and
into
cmp
test
xorl
mov
mov
add
sub
int
lret
cs
jle
and
xor
mov
inc
mov
or
xchg
jmp
jg
dec
fdivrs
pop
or
scas
or
push
jp
push
inc
inc
out
or
sbb
jb
bound
inc
cli
inc
and
adc
les
call
fsts
adc
inc
mov
or
push
pop
adc
scas
sbb
dec
dec
filds
push
xchg
mov
das
jno
into
fildll
add
pop
sub
and
rclb
add
cmp
and
mov
jg
sahf
sahf
rorl
sbb
add
sbb
add
xor
cli
ret
dec
dec
mov
aas
add
jge
mov
jbe
pop
add
lret
adc
xchg
adc
xor
sarb
adc
sub
inc
loope
rorl
or
dec
pushf
xchg
dec
ret
xchg
outsb
sub
test
mov
mov
pusha
or
out
pop
fs
cmpsb
push
mov
mov
daa
mov
and
mov
adcb
rorb
int3
push
dec
sarb
xor
cmpsl
adc
jb
inc
fcoml
mov
sahf
xor
push
pop
add
pop
es
push
pushf
ds
mov
mov
add
inc
xchg
jo
pop
pop
mov
dec
imulb
push
pushf
and
xchg
cmp
into
cmpsb
movsb
scas
push
test
andb
adc
or
mov
mov
cmpsl
andb
cs
incl
ljmp
push
aaa
scas
xor
cli
lcall
sti
movsb
jnp
jg
test
aaa
mov
add
jmp
add
sar
shll
loope
rorb
jmp
add
stc
clc
pop
leave
push
mov
outsl
sbb
sbb
aaa
lahf
out
leave
ret
fists
lock
lcall
xchg
loop
jns
popf
clc
arpl
mov
nop
shrl
sub
or
mov
incl
sbb
cmp
aas
out
icebp
hlt
lock
jnp
icebp
dec
pusha
mull
dec
faddl
add
loop
jae
cli
fldl
mov
jno
add
jae
fnstcw
sub
adc
ljmp
jnp
pop
iret
mov
int
add
imul
dec
aam
and
add
int
dec
dec
daa
fimull
icebp
sbb
loope
js
lret
push
push
pop
jo
insb
dec
dec
push
dec
adc
pop
cmc
outsb
dec
push
xchg
jge
addb
pop
add
out
or
add
or
cli
mov
dec
ja
pop
je
inc
dec
data16
outsl
insb
inc
inc
dec
or
mov
push
dec
cmp
aam
shlb
cmp
inc
movsb
popa
xor
call
leave
adc
pop
sub
or
or
jg
xchg
inc
xchg
sbb
dec
shr
or
cmp
call
cld
lods
inc
jbe
jecxz
sbb
stos
insl
xorl
push
lret
mov
jb
shlb
test
std
pop
cmc
ljmp
mov
fisttpll
jl
adc
mov
add
rorl
xor
rorb
aaa
jl
aaa
movsl
ss
jns
dec
insb
xor
pop
push
in
fnstenv
dec
fnstcw
test
and
jae
dec
dec
adc
inc
call
mov
fmull
add
movsb
incb
xor
mov
pop
cli
das
add
sbb
lods
enter
inc
xchg
jle
sub
bound
insb
push
sbb
fstpt
pop
out
cmc
add
mov
imul
cld
sub
ret
test
or
leave
cmp
push
scas
sbb
das
jecxz
incl
push
cld
add
rorb
push
ja
sbb
rol
fnstcw
faddl
das
sbb
inc
sbb
inc
js
repnz
cmp
bound
cli
arpl
mov
add
call
jne
iret
loope
cli
out
jmp
lret
cmp
and
push
stos
sti
sbb
daa
aas
stc
add
cmp
mov
or
nop
icebp
call
sub
out
mov
incl
pusha
push
cld
scas
or
arpl
in
rolb
out
mov
pushl
ret
shl
push
hlt
sub
aaa
ja,pn
sar
adc
add
incb
push
and
clc
call
neg
iret
xchg
dec
ja
add
das
xor
es
ds
sub
xlat
jmp
decl
loope
fidivrs
fadd
sub
int
enter
mov
pop
hlt
add
xor
jp
adc
ljmp
mov
push
std
jbe
iret
iret
stc
xchg
or
jo
leave
icebp
int3
inc
jg
pop
xor
data16
push
flds
cli
inc
push
loop
lret
sub
push
cld
aas
lock
data16
fs
xchg
push
clc
jg
das
int
insb
out
scas
dec
shl
jae
adc
add
out
call
leave
iret
push
pop
push
fcmovnb
arpl
jg
outsb
cli
rorb
rclb
ljmp
and
add
decl
sahf
repnz
or
icebp
mov
jg
scas
shr
push
pusha
aas
ds
add
lds
push
xor
mov
push
push
mov
pop
sub
inc
dec
add
pushl
push
xor
jbe
jne
gs
push
xor
cmc
sub
in
lds
push
push
pop
inc
push
pop
imul
jl
test
loopne
shr
inc
ret
scas
in
fcomip
out
and
shll
iret
lahf
aas
call
lahf
stc
or
jg
and
roll
lret
lds
sti
pop
repnz
mov
clc
incl
push
jle
fisubrl
andl
cli
jb
jne
mov
in
das
xchg
cmc
pop
or
out
sbb
inc
xchg
sub
ds
pop
jg
popa
in
scas
ja
dec
out
aas
loope
pop
scas
dec
stc
addr16
lock
ljmp
and
cld
lahf
jmp
pushl
orl
pop
xor
sbb
shll
push
lcall
cltd
lret
cmp
jmp
fwait
push
xor
or
jmp
push
cwtl
sahf
adcb
out
push
out
jne
sbb
xchg
ljmp
stc
decl
xchg
fbstp
insl
add
sti
dec
mov
sbb
push
les
jg
adc
lcall
leave
idivl
data16
aad
sub
jmp
or
inc
int
div
mov
xchg
ret
test
or
mov
data16
fcompl
popf
cmc
in
cld
pop
stos
je
xor
inc
jns
stos
lds
cld
and
std
inc
repz
push
out
sub
in
loop
jne
ret
cltd
ficompl
xor
ljmp
and
rclb
inc
pop
rcl
jl
cld
iret
popa
aaa
loop
push
fildll
mov
js
orl
pop
mov
mov
push
add
lcall
subl
ds
adc
or
pop
loopne
ja
decb
das
ja
xor
dec
inc
dec
incb
xor
addb
push
aaa
pop
cmc
ret
mov
lods
int
stos
stc
adc
pop
mov
jbe
pusha
inc
ret
addr16
add
mov
incl
mov
fwait
aas
push
movb
decl
shll
adcl
pop
jp
add
push
cmp
push
rol
or
dec
pop
xchg
cmpsb
or
cmp
sbb
es
xchg
icebp
jg
mov
xchg
inc
js
fs
stc
push
lret
incl
xchg
cld
loope
leave
shll
andb
inc
pop
hlt
lock
xchg
out
pop
fistpl
jne
fwait
push
aas
out
inc
fcmovne
lock
or
jns
fildl
mov
inc
jg
incl
out
lcall
cmpsl
leave
inc
sub
cmp
orb
xor
ljmp
dec
aam
in
mov
arpl
in
jns
test
popa
imul
xor
stc
dec
out
pop
rcr
push
xor
cmp
cmpsb
lahf
ret
enter
xchg
mov
lret
scas
call
loope
pop
jge
or
fdiv
testl
out
clc
push
gs
cmp
bnd
pop
shll
mov
mov
pop
cvtdq2ps
out
mul
add
mov
repnz
push
decl
icebp
jmp
dec
fdivl
fldl
cli
cmp
inc
inc
cmp
dec
int3
sti
add
lods
or
fidivrl
stos
push
subb
sub
int
cld
mov
fsubrp
mov
push
lret
sbb
cmp
movsb
sub
pop
jecxz
push
in
mov
insl
ss
call
loope
or
ficomps
aaa
or
add
dec
je
jecxz
call
out
dec
and
shrb
clc
scas
ss
or
mov
lock
inc
pop
push
gs
mov
loope
mov
ljmp
adc
xor
leave
cmp
mov
sub
fwait
decl
mov
adc
lret
jns
fsubrl
stc
push
sub
dec
shr
scas
pminsw
cld
inc
lret
fidivrl
dec
jno
push
incl
fxch
shr
xchg
ljmp
js
jg
cmp
sahf
idiv
scas
mov
out
pop
loop
push
insl
dec
adc
cmpsb
ss
gs
ljmp
ds
jne
cmp
inc
fld
dec
add
sti
push
sti
jg
out
pop
or
mov
pop
ljmp
bound
cmc
mov
xchg
std
call
jne
push
aas
mov
push
push
test
popf
or
lcall
mov
repnz
pushl
outsb
pop
jbe
cmp
lods
pop
fldt
pop
jns
std
dec
and
outsl
iret
ljmp
xchg
inc
fisttpl
or
repz
lea
push
popa
aaa
aas
xorb
movsl
and
mov
lcall
and
cmp
adc
and
push
dec
sub
pushl
call
inc
movsb
xor
adc
or
pop
cwtl
cmp
enter
pop
sar
pushl
fbstp
jno
add
dec
cmp
mov
jno
fsubrl
mov
push
out
call
cmp
adc
sub
das
pop
lods
pusha
mov
ljmp
test
inc
aaa
sub
aas
xlat
jp
sti
les
jae
dec
aam
cld
push
jns
out
mov
jle
sub
sub
ret
ja
jb
add
pushl
push
imull
aas
jle
aas
cmpsb
add
and
push
or
mov
pusha
pop
das
xchg
pop
enter
call
pushf
sub
ja
fcompl
shll
add
addr16
pop
addl
in
jbe
ds
sbb
ljmp
aam
pop
mov
pop
pop
or
cmpsb
aas
jl
lret
xchg
jno
and
cmc
out
cs
push
out
and
das
dec
and
sbb
fdivr
pop
sar
enter
cs
cmpsl
cmp
and
sbb
ljmp
and
pop
mov
xchg
and
sbb
jo
pop
cmp
lock
rcll
push
lds
mov
les
mov
fildl
in
imul
stos
push
jl
out
cld
or
inc
jae
rcll
pop
mov
sbb
leave
xchg
and
ds
cs
decl
inc
lret
mov
rdtsc
inc
fs
das
test
filds
cmp
jnp
add
fisubrs
repz
cmp
push
fldl
add
jg
cltd
sub
jecxz
mov
pusha
and
dec
jle
jbe
repnz
incl
sbb
lret
loope
rcl
icebp
mov
sbb
dec
shrl
xchg
iret
add
add
ret
clc
ror
cld
xor
push
nop
sbb
lds
cmp
int
jle
jl
out
loop
idivl
sahf
stc
call
dec
sub
cmc
or
ret
icebp
cld
fwait
mov
stc
in
or
adc
cmp
in
aas
decl
inc
rcrl
lods
pop
pop
inc
dec
mov
or
mov
in
lods
or
icebp
mov
cld
sub
mov
mov
sbb
clc
mov
enter
leave
xchg
xchg
out
cmp
or
lcall
inc
stos
xchg
movsb
mov
loop
div
shl
out
inc
fdivrs
jbe
inc
xor
jecxz
cmpsl
mov
and
push
push
dec
cmpsb
xchg
xchg
hlt
repz
call
push
ja
pop
sbb
cmp
inc
pop
fldl
aam
push
mov
movsb
test
and
ficoml
mov
int3
test
call
mov
testl
clc
jmp
fmul
pop
add
out
idiv
hlt
cwtl
sub
inc
pop
xchg
fcomip
add
cmc
jno
ljmp
xchg
sbb
clc
mov
ror
pop
cmc
adc
jle
in
loopne
lock
push
mov
inc
popa
inc
popa
and
in
or
inc
push
loop
lods
jge
cmc
out
jmp
imul
add
call
std
sbb
orl
dec
sub
sub
lahf
sub
out
out
aas
mov
sti
sbb
pop
jg
lahf
dec
arpl
ret
repnz
push
int
jg
jg
jle
or
pop
popf
and
aam
je
or
or
aam
pop
hlt
insb
fldenv
xchg
xor
pop
loope
repnz
ja
pop
fisubl
and
daa
enter
push
pop
jge
aam
enter
or
xchg
jmp
cwtl
out
cmp
xchg
ret
dec
pushf
adc
in
enter
hlt
stc
fcmovb
loop
popa
inc
jb
iret
push
pop
enter
test
pop
sub
ljmp
insl
loop
and
mov
lcall
push
inc
jae
insb
lea
in
add
lds
push
cmp
sbb
push
push
adc
jg
or
insb
nop
shrl
xchg
arpl
enter
jp
std
shlb
pusha
insb
shrb
jne
out
loopne
adcl
aas
out
or
fisttpl
adc
mov
mov
add
jl
cli
sti
jo
pop
repnz
in
decl
lret
adc
push
arpl
jmp
and
mov
jle
mov
cmpsl
cs
xchg
leave
jp
popf
and
ljmp
ljmp
std
loope
lods
outsl
pop
fnsave
icebp
or
sbb
test
fs
les
xchg
add
or
jl
jmp
fbld
jmp
pop
push
fsubp
jp
cmc
pop
and
mov
adc
je
mov
iret
xor
pop
pop
imul
xchg
lret
adc
in
popa
iret
rorl
clc
in
dec
push
and
cmp
fwait
add
push
cmc
sbb
dec
pop
out
jnp
add
and
jmp
and
sbb
mov
mulb
jae
xchg
cs
lcall
out
adc
out
mov
add
outsl
dec
in
in
in
aam
lcall
pop
sub
stc
cli
out
mov
jb
icebp
pop
cwtl
lods
cmp
arpl
cmc
push
or
fdivr
enter
stc
jg
lcall
hlt
aad
iret
cmp
jne
out
xchg
sub
call
stos
jle
or
insb
sub
xor
fbld
loop
xor
inc
xor
push
add
loope
fadds
xor
push
sub
lret
jge
mov
fnsave
cli
mov
ja
mov
sub
int3
and
hlt
mov
adc
mov
mov
in
add
pop
mov
jae
repz
repnz
ja
and
out
xchg
or
hlt
fs
stc
shlb
sbb
out
dec
or
out
gs
pushl
out
push
pop
dec
mov
aas
push
push
inc
shl
sub
ljmp
inc
or
xorl
decl
xor
xchg
clc
call
mov
stos
insb
mov
and
jl
outsb
in
sbb
cmp
ficompl
jp
out
test
dec
mov
or
cmp
out
les
shr
popa
mov
sti
ljmp
js
in
aas
incl
inc
out
pop
pusha
cld
fisttpl
filds
or
xor
inc
test
cmp
push
data16
testb
jnp
push
push
sbb
jl
add
mov
cmp
ja
ror
fcmovnu
es
stc
in
int
mov
jmp
loop
iret
stc
cli
int
jbe
pusha
adcb
lret
pop
fsubrs
mov
int
das
jnp
sbbb
addl
jg
mov
sub
mov
incl
add
jg
inc
mov
pop
lahf
mov
pop
push
jg
mov
push
cwtl
inc
movsl
call
loopne
popa
xchg
inc
mov
inc
scas
push
mov
xchg
inc
stos
jns
addr16
insl
mov
pop
loopne
pop
mov
jl
jb
aaa
lahf
adcl
lea
add
lds
lea
mov
adcb
lods
jbe
dec
scas
js
insl
lods
jno
push
mov
adc
lcall
mov
mov
scas
leave
scas
ret
xchg
test
mov
mov
jg
scas
test
mov
xorl
cwtl
mov
scas
mov
mov
fisttpll
int
mov
push
mov
jo
movsb
decl
push
mov
pop
fisubl
pop
cmpb
push
test
test
mov
pushf
jl
pop
mov
stos
add
xchg
mov
inc
adc
sbb
popa
outsl
or
addr16
pop
add
test
incl
push
lcall
jge
cmpsl
add
bound
pop
jo
jbe
pop
jg
ja
jg
dec
popf
dec
das
call
mov
fmull
sti
ljmp
mov
scas
mov
mov
test
cli
mov
push
pushf
mov
lahf
mov
icebp
mov
xchg
movsl
mov
enter
out
push
int
std
sahf
in
fst
sahf
push
jo
jnp
dec
lahf
push
mov
pusha
scas
dec
xchg
lock
sarb
scas
inc
scas
pop
cmpsl
pop
xchg
xchg
xchg
sbb
decl
mov
pop
test
lea
inc
mov
shlb
or
lea
ljmp
or
or
movsl
aaa
dec
clc
mov
xchg
cmpsl
mov
xor
or
inc
mov
push
test
jo
inc
sahf
pop
mov
pusha
movsl
sahf
jg
das
sub
mov
mov
orb
mov
adc
popf
mov
hlt
stc
aad
fwait
and
sub
inc
inc
out
fbld
movsb
loop
dec
lcall
or
adc
fildll
mov
adc
push
int3
lret
sti
jno
cmp
and
ud0
dec
cli
repz
pushf
mov
or
adc
mov
lcall
and
out
es
adc
and
lret
sbb
sbb
xchg
lea
idivl
sahf
mov
incl
mov
pop
stc
incl
repz
cmpsb
push
ret
dec
pop
mov
fcoml
out
hlt
subb
dec
push
dec
xchg
cli
mov
mov
lcall
fildll
push
or
jle
sub
dec
sub
decl
add
les
stos
shll
gs
add
or
mov
cld
fucomp
incl
and
inc
leave
ret
les
or
daa
shrl
ljmp
ljmp
xor
out
into
jmp
xchg
dec
dec
cmpsb
outsl
out
shrb
push
or
popa
push
mov
jno
xor
popf
lcall
xlat
aam
stc
jno
mov
jle
cld
push
cli
or
sub
rclb
fnstenv
decl
iret
adc
push
mov
ficomps
or
jge
ret
sub
mul
push
jns
or
or
enter
mov
pop
xor
shll
xor
pop
aad
jbe
fimull
frstor
jbe
fs
sub
or
ss
inc
push
adc
sub
sbb
adcb
push
mov
aam
cwtl
clc
dec
fucomip
adc
sub
mul
mov
xor
repnz
xchg
in
jo
es
pop
lods
cmpsb
test
pop
pop
mov
into
in
lcall
dec
and
mov
jns
mov
loop
sbb
cmp
jp
and
sub
adc
int
inc
cltd
pusha
jl
jnp
or
inc
jle
push
jmp
ja
sbb
inc
aas
push
aas
cmc
adc
jmp
lret
mov
insl
sbb
out
inc
inc
push
mov
xchg
or
bound
xchg
mov
daa
pop
sub
mov
mov
mov
lods
mov
testb
sub
sbbl
movsl
je
mov
inc
jb
subl
mov
fwait
scas
dec
pop
mov
jg
mov
mov
mov
xchg
dec
int3
movsl
out
out
out
lods
lahf
sub
fldcw
int
mov
inc
stos
lahf
std
mov
and
jmp
jge
inc
fidivl
insl
cmp
int
ljmp
in
repnz
jb
inc
lock
loop
xchg
lods
pop
dec
or
jmp
out
jecxz
ret
fnstenv
test
dec
ret
jmp
or
popf
cmc
sub
inc
stc
loope
shr
scas
test
div
int
scas
cmp
fiaddl
mov
repz
xorl
cwtl
lods
or
call
xchg
loopne
ljmp
xor
fbld
fmull
shrb
pop
cmpsb
mov
enter
icebp
loopne
inc
and
ja
push
cli
lahf
sub
in
cli
push
mov
inc
xchg
and
cld
mov
popf
je
into
jecxz
jae
xchg
or
pop
in
sub
imul
xchg
test
pop
mov
cmc
add
daa
mov
out
clc
call
cld
scas
fildll
mov
out
jge
paddw
cwtl
leave
push
paddw
jmp
mov
cmp
fidivs
out
add
xacquire
outsb
fmul
ja
lock
xchg
leave
xchg
clc
mov
js
jmp
enter
xor
cmc
dec
sub
out
and
repz
mov
mov
xchg
ficoml
repnz
add
nop
jecxz
in
mov
out
xchg
inc
movsb
dec
xchg
out
aad
lea
xchg
mov
mov
xchg
mov
out
push
jns
imul
or
mov
mov
lock
js
cli
mov
cltd
cli
scas
mov
inc
mov
jl
dec
mov
jns
inc
push
outsl
add
addr16
push
xor
or
jge
loopne
dec
repz
nop
push
int3
mov
leave
pop
add
iret
xchg
outsl
shll
mov
or
pop
fwait
push
jecxz
aas
and
mov
test
jo
clc
cmpsl
jmp
fmull
mov
jp,pn
xor
cld
sar
push
sarb
dec
cmp
mov
xor
mov
test
orl
mov
cltd
push
hlt
sbb
or
dec
or
push
fwait
jbe
push
xchg
stos
addb
in
pop
pop
in
inc
sbb
test
and
mov
cli
mov
cmp
test
hlt
sbb
in
fimull
inc
pop
or
mov
xchg
outsl
jle
mov
and
inc
cli
sti
mov
in
mov
dec
xchg
icebp
frstor
and
pop
cmp
movsl
icebp
les
pop
pop
sub
pushl
push
lods
shr
cmpsl
mov
jp
mov
shlb
jnp
cwtl
rclb
incl
roll
push
dec
jne
sbb
adcl
add
jne
dec
pop
cld
in
lcall
aaa
sub
movsl
and
in
pop
pop
lcall
mov
dec
nop
jl
imul
inc
mov
stos
jb
insl
lods
decl
cmp
insl
mov
xchg
dec
mov
aam
jns
xchg
push
lea
hlt
decl
cli
outsl
mov
aas
imull
fucomp
push
stos
mov
inc
mov
ret
cmpb
cmpsb
fcomip
lcall
cli
fisubrs
cmp
push
das
xlat
outsl
cmpsb
sub
ljmp
jge
push
fmull
in
lods
jo
outsl
lods
or
mov
pop
xchg
pusha
rclb
xchg
jae
inc
mov
cld
pushl
xchg
dec
test
dec
cmpsl
jno
add
cmpsl
pop
lods
outsl
jg
decl
jno
or
pop
cmpsb
mov
pop
cwtl
xchg
movsb
jb
mov
ljmp
movsb
jle
dec
scas
cli
pop
bound
push
xor
popf
pop
push
sub
lcall
pusha
mov
pop
pusha
test
sbb
adc
push
xchg
jl
mov
push
mov
pop
xchg
lods
mov
pop
mov
ljmp
imul
mov
loop
mov
jno
int
lahf
stos
test
adcb
std
divb
insb
mov
fwait
popf
mov
mov
mov
mov
cmpsl
jne
out
mov
hlt
cwtl
push
pushf
loop
sarl
outsl
lea
lods
mov
int
aaa
or
aad
dec
popf
mov
mov
out
jns
mov
jb
inc
push
mov
jae
pop
jbe
cmp
das
imul
push
je
dec
push
int
repz
les
jge
sbbb
sbb
xor
pop
add
fwait
imul
cltd
clc
jmp
iret
lods
insb
cmc
popa
push
outsb
pop
dec
das
dec
jl
mov
in
push
mov
cli
push
cmp
test
in
jmp
push
mov
push
stc
add
and
fimuls
jbe
and
jmp
xlat
ljmp
fstpl
or
clc
ljmp
inc
fadds
add
mov
aas
fdivr
push
addr16
jno
jmp
stos
aaa
cli
subb
leave
repz
scas
mov
xor
cmp
adc
pushl
std
cmc
cmp
xor
clc
push
xchg
or
bound
or
ret
lds
mov
lcall
js
lret
lock
mov
and
imul
pusha
out
sti
and
call
mov
inc
adc
sub
addl
sub
aaa
ds
jmp
test
jmp
aas
clc
pop
push
jl
xor
mov
addb
xor
mov
lea
sti
push
cld
xorb
test
out
ja
mov
in
adc
repnz
fildll
ljmp
lret
or
sti
or
and
call
mov
lret
sti
xor
stos
mov
lods
cwtl
mov
inc
adc
mov
shlb
ret
daa
loopne
sar
cwtl
jo
lods
daa
loope
jecxz
cli
sahf
aam
cld
out
dec
jno
repnz
xor
mov
lock
in
repnz
xchg
add
jg
hlt
dec
push
or
push
lret
lea
mov
xchg
jg
aad
lcall
cld
xor
mov
pop
inc
or
das
je
add
ds
out
sti
inc
icebp
scas
sbb
mov
push
pop
jp
std
stos
leave
paddd
or
push
or
dec
inc
inc
insl
jmp
push
movsl
pushl
and
inc
imul
pop
stos
testl
mov
cmp
enter
sub
xor
jg
jmp
cwtl
xchg
mov
lcall
add
sbb
fcmovb
or
push
add
or
lods
stc
ja
out
aam
pop
imul
lcall
incl
add
mov
lahf
mov
inc
aam
mov
ror
fdivrp
mov
push
xchg
nop
cld
add
ret
adc
mov
iret
fwait
cmp
insl
jg
sbb
push
mov
das
dec
rcr
hlt
mov
lcall
lahf
repnz
out
repnz
cltd
xor
aas
std
pop
cmc
cmpsb
jp
fst
shlb
call
or
cli
inc
ljmp
or
mov
mov
jmp
or
test
adc
js
fwait
bnd
add
jecxz
and
imul
sbb
sbbb
adc
jmp
cmpsb
push
fscale
sub
out
mov
int3
mov
clc
mov
scas
loop
sarb
lret
fimull
rcr
fidivl
lret
ljmp
mov
pop
iret
and
rcrb
lock
in
pusha
xacquire
hlt
out
and
call
cld
insb
pushl
rcl
ss
push
scas
mov
les
or
and
jg
pop
and
mov
std
call
fucomi
mov
out
xchg
and
aad
mov
push
lea
sub
in
loopne
or
xor
mov
push
adc
mov
push
out
clc
loope
decl
sub
test
lret
in
or
pop
daa
movsb
enter
out
push
test
mov
adc
push
jmp
test
bnd
jge
scas
add
mov
sub
rorl
test
or
jmp
scas
lods
add
mov
imul
lret
out
cwtl
mov
push
ret
push
lret
out
cmp
sub
outsl
out
adc
xor
movsb
xor
xor
and
mov
fldcw
std
pushl
repnz
pop
add
ficoms
pop
xor
add
and
and
int
std
dec
mov
pop
or
rcrb
mov
fst
int
jmp
cmpsb
shrl
fmuls
mov
jne
rolb
fmuls
push
mov
xlat
fs
mov
dec
push
xchg
pop
pop
outsl
cli
decl
scas
and
outsl
cmpsl
mov
addb
pop
out
test
fcoms
out
sbb
jecxz
pop
jmp
andb
cmp
jnp
int3
xchg
jnp
fcomip
or
and
pop
in
xor
sbb
sbb
test
and
pushl
xor
icebp
mov
rorb
jg
jecxz
lret
jmp
inc
pop
notb
mov
xor
insb
dec
popa
mov
leave
pop
cmp
dec
lock
jbe
repz
and
inc
rcl
xor
adc
dec
sub
jge
iret
outsb
decl
pop
push
xor
test
xchg
jae
loop
pusha
hlt
js
popf
add
data16
out
push
mov
out
cmp
fistpll
fimuls
fbld
je
insb
push
rcrl
lret
xchg
aad
pushl
and
push
xchg
shll
lea
add
xchg
and
add
incl
ret
cmp
fs
xor
jno
sub
in
cmpsl
pop
mov
inc
mov
xor
jmp
subl
xchg
push
push
std
rcrb
dec
add
out
adc
popf
test
iret
inc
adc
jno
fsub
push
int
imul
ds
in
or
or
xchg
push
push
call
andps
cmpsl
push
iret
push
fsub
pusha
jmp
mov
decl
or
xor
and
and
xor
mov
filds
loopne
addr16
push
iret
fstpl
and
sub
int
add
mov
in
and
dec
push
pop
gs
shll
lock
arpl
jb
lods
ljmp
jp
fiadds
xor
sbb
ljmp
jg
in
sahf
js
dec
cmp
lahf
out
cld
and
inc
lock
leave
lcall
pop
iret
pop
pop
outsb
dec
rep
cld
roll
mov
or
stos
pop
in
inc
out
clc
jmp
mov
mov
iret
decb
hlt
enter
test
out
lods
decl
aas
lret
mov
jg
mov
shrb
pop
cld
sti
scas
outsl
inc
dec
loop
or
add
decl
cmp
cmp
jo
sbbb
clc
jae
jmp
scas
ljmp
ljmp
mov
jae
stc
lods
mov
call
std
lret
adc
jmp
and
fnstenv
pop
int
add
pop
xor
into
push
int
outsl
mov
sub
sbb
push
shl
jmp
push
out
xlat
jmp
lock
or
outsb
es
call
cs
cmpsl
cmpsl
les
incl
icebp
incl
push
roll
lea
ret
push
add
and
jmp
adc
rclb
das
fsubl
xor
enter
popa
jg
mov
imul
aas
fs
jle
add
outsl
mov
jmp
sbb
in
push
daa
addr16
pusha
fcos
mov
sahf
lahf
or
adc
push
popa
stc
cs
inc
xor
inc
sar
dec
int3
cmp
decl
cmc
jb
sub
shll
dec
stc
gs
mov
data16
adc
mov
or
test
ljmp
mov
inc
mov
add
das
gs
xor
and
aaa
loopne
idiv
ljmp
clc
outsl
add
filds
sub
ret
popl
loope
push
shlb
sub
inc
and
call
enter
leave
rclb
cwtl
lahf
dec
fidivrs
cmp
jg
ljmp
fcomip
in
pop
pop
stos
jno
out
or
or
sbb
cwtl
pop
gs
jmp
push
std
jmp
mov
aam
pmaxsw
out
pop
add
or
cmp
cmp
fidivs
cmp
or
daa
xchg
cli
mov
jg
xchg
or
dec
jnp
sbb
in
pop
jne
stos
sub
cltd
sbb
ret
rcll
ret
add
add
insl
lock
mov
dec
outsl
ret
push
xor
mov
or
jg
mulb
jg
pop
repnz
or
pop
mov
ds
adc
test
sar
fcomip
es
push
and
mov
lret
cld
cmp
dec
ljmp
incl
mov
or
into
inc
xor
inc
xor
call
aam
imul
xchg
mov
movups
das
fnsave
notl
or
mov
mov
adc
jp
testb
stos
add
sti
add
mov
mov
and
aam
pop
ret
sahf
mov
cmc
ljmp
jle
ja
std
and
lahf
add
int3
xor
inc
in
cwtl
inc
js
decb
cmp
bound
outsl
aas
jg
incl
pop
adc
sub
das
mov
ret
in
out
add
dec
cli
pop
je
in
lcall
fdivs
movsb
adc
sbbb
lods
inc
dec
call
pop
stc
nop
dec
mov
or
adc
jecxz
cmp
pop
push
pop
out
les
mov
push
mov
fisubrl
adc
inc
ljmp
imul
sub
popa
stos
push
mov
into
sub
pusha
xor
inc
jmp
jge
mov
adc
fwait
adc
and
pop
and
in
or
jg
and
sub
mov
popf
xlat
jo
xchg
test
cmp
jbe
mov
and
sub
lcall
je
add
push
xchg
sbb
inc
lcall
mov
jae
es
jge
ljmp
jg
cmp
fadds
push
adc
insb
jg
ss
mov
jno
mov
sbb
and
in
mov
and
pusha
mov
sub
jae
daa
lcall
out
jns
jne
jecxz
test
jne
pop
loope
sub
repz
stc
mov
adc
jae
cmp
aaa
les
ss
mov
cli
fwait
cld
jg
push
inc
in
in
inc
and
fldt
mov
stos
ss
fdivrp
jbe
rol
scas
lret
jg
mov
clc
and
inc
pop
ror
mov
jg
or
xlat
sub
or
aad
sub
pushw
pop
std
pop
xchg
add
or
dec
rorb
sti
out
xchg
pop
adc
fucomip
ss
pop
mov
lcall
sub
hlt
int
xor
nop
or
out
xor
int
pop
add
jg
in
mov
sbb
fdiv
jecxz
sub
repz
jg
ljmp
inc
push
push
sub
test
ror
pusha
loope
inc
das
jae
aam
sbb
aas
mov
add
push
and
xchg
adcl
lock
sub
or
icebp
dec
sbb
mov
pop
stos
out
inc
movsl
mov
or
xlat
ret
fisttps
push
int3
sbb
xlat
jno
and
or
cmp
cli
daa
pop
inc
lods
xor
sub
jno
into
dec
jb
add
and
test
adc
jecxz
push
loopne
incl
stc
insb
push
add
shrl
or
lret
jnp
xchg
pop
xor
ljmp
ret
rorb
decl
sub
enter
es
decl
xor
dec
pop
cmp
inc
add
add
adc
adc
out
rorl
dec
repz
imul
aas
icebp
or
sbb
push
pop
cmp
mov
mov
gs
mov
icebp
mov
arpl
ljmp
das
adc
loope
lods
es
cmp
sbb
inc
arpl
pop
xor
jg
xor
or
adc
arpl
or
push
mov
fidivs
push
pop
pushf
scas
push
inc
push
mov
test
mov
cltd
cmp
fwait
mov
repnz
xchg
mov
stos
mov
jmp
push
scas
test
mov
clc
test
int3
test
adc
xchg
out
pop
pusha
jmp
xor
dec
dec
cmp
or
stos
or
or
push
ficoml
jp
js
or
ljmp
repz
js
cmpsl
pop
mov
dec
inc
ljmp
inc
and
ret
fcoms
jae
mov
mov
or
adc
fwait
std
jb
cmp
lcall
push
adc
movsb
dec
jp
test
adc
les
adc
adc
push
out
call
or
pop
jle
xchg
aas
add
rcl
sub
xchg
adc
or
mulb
push
inc
sbb
push
rcll
jmp
movsb
and
mov
jmp
imul
cmpsl
repnz
hlt
sbb
mov
inc
fmul
ss
dec
pushf
rcll
pop
cmc
incl
add
aas
pop
sbb
pop
ficoml
sub
pop
mov
lcall
pop
adc
and
mov
sbb
rol
xor
lret
mov
icebp
jl
clc
jg
jmp
push
or
es
xchg
loope
push
ds
fidivl
mov
test
fcomip
mov
push
clc
test
mov
adc
or
pop
aam
popf
mov
outsb
pop
mov
cmpl
mov
and
lcall
notb
inc
push
jl
shld
pop
addr16
ret
adc
add
pusha
sti
gs
sbb
add
xor
sbb
in
fcmovne
add
ja
clc
call
cld
cmp
sti
add
cmpsb
adc
push
movsb
cld
int
mov
lret
jge
mov
lcall
add
jns
in
repz
xor
lods
sarb
mov
fiaddl
lds
or
jecxz
test
sarl
leave
loop
or
xor
add
decl
leave
push
popa
test
push
and
inc
rclb
add
loop
pop
in
mov
imul
clc
popa
push
rclb
lcall
xor
add
aaa
dec
ror
loopne
push
std
decl
js
test
fdivrl
lock
leave
push
and
bound
cmp
call
insb
and
adc
dec
mov
int
cwtl
inc
hlt
or
nop
jecxz
imul
push
sbb
gs
in
dec
icebp
jno
jae
adc
or
hlt
add
aas
in
call
call
leave
ja
and
mov
fbstp
aam
nopl
add
or
jl
cli
mov
or
push
sub
decl
adc
mov
test
ret
test
push
push
das
cmp
push
jb
loop
fwait
inc
iret
int
and
cld
insb
daa
inc
sub
lock
cmp
adc
repz
jp
dec
jae
and
and
cli
idiv
sti
xor
pop
fldcw
loop
cmp
not
rclb
out
jae,pn
mov
in
add
ja
scas
cmp
mov
out
or
lock
nop
mov
add
adc
jb
das
fmull
and
jno
cmp
call
fidivrs
push
adc
adc
add
xchg
mov
out
hlt
push
push
in
loope
xchg
ljmp
rol
cmp
in
add
pop
ret
and
rorl
cmp
call
loope
or
mov
lret
or
arpl
cmpsb
cmp
mov
loopne
push
repz
dec
ds
xor
cmc
clc
in
jnp
in
ljmp
or
out
lret
call
jae
or
or
mov
mov
cmpsb
and
movsl
push
lods
pop
add
pop
pop
jnp
sub
repz
sub
mov
pop
mov
pop
lock
push
ljmp
mov
push
pop
push
mov
aam
jge
hlt
jle
inc
dec
push
adc
movsl
icebp
inc
stc
push
popa
xor
aas
pop
hlt
imul
and
scas
or
iret
push
fistps
sarl
xor
pushl
imul
je
lods
push
cmp
lds
pop
push
inc
loopne
outsl
mov
hlt
pushf
rclb
jmp
jge
push
pop
jecxz
loop
rcrl
sub
das
add
xchg
mov
add
outsl
clc
jg
fisubl
lahf
cli
pop
lret
icebp
in
xor
out
push
loope
lcall
pusha
popf
push
cmpsb
or
mov
movb
push
cli
cli
sbb
ja
popf
ja
inc
loop
cs
inc
sbb
loop
test
cltd
ret
xor
xor
pushl
aad
jo
js
icebp
add
jg
cmp
rcrl
fs
stc
push
sub
enter
inc
in
ror
and
ljmp
imul
inc
dec
in
daa
push
lahf
inc
daa
or
rol
iret
push
std
das
scas
cmp
aas
push
icebp
lret
daa
mov
mov
push
mov
dec
add
mov
mov
loope
sarl
aad
decl
push
scas
lock
cmpsl
js
cs
or
pop
jns
sbb
in
cli
sbb
decl
daa
cmp
sub
sub
popf
inc
xor
les
iret
stc
cmp
inc
loop
lcall
or
adc
mov
movsb
cmp
pop
adcb
adc
xor
scas
pushf
pop
sarb
pushf
into
sarb
push
add
or
jb
sbb
rcrb
add
or
mov
xor
sbb
pop
jg
loop
mov
andl
mov
adc
push
ficompl
clc
jb
and
call
orl
and
jmp
loopne
pop
das
cwtl
and
push
sar
ss
xor
and
scas
test
sti
xor
loope
iret
icebp
inc
ret
pop
pop
add
add
fistps
mov
fsubrs
jb
test
jbe
pop
or
and
dec
mov
lret
and
inc
pop
and
adc
hlt
cld
aad
insb
mov
mov
mov
push
jge
aam
or
push
xor
ss
pop
cltd
jo
aam
test
dec
pop
pop
jmp
jno
xor
push
mov
dec
mov
push
sub
pop
fisubl
out
jno
cmp
ja
jmp
pop
shlb
jbe
ds
lret
adcl
rcr
pop
lock
call
push
popf
inc
jl
pop
mov
dec
adc
andb
and
dec
and
xchg
pop
xchg
cld
add
hlt
in
aad
xor
incl
nop
incl
leave
inc
jp
inc
in
ficompl
push
repz
dec
iret
int3
inc
decb
enter
testl
inc
lahf
xchg
xor
pop
or
jmp
push
sbb
aas
inc
mov
pop
int3
adc
pop
filds
push
dec
aas
in
lret
pushf
es
xor
in
repnz
dec
dec
roll
push
jg
xchg
test
lret
jne
call
push
or
pop
adc
pop
cli
add
pop
add
cld
jg
inc
sti
xor
jp
movl
nop
inc
outsl
xor
neg
push
call
fildl
adc
ret
pop
repnz
mov
js
jnp
imul
aam
rclb
repz
cli
jne
leave
or
aas
lea
and
out
mov
sub
jg
jl
push
pop
ja
cld
cmc
enter
loope
dec
outsl
incl
jne
xlat
fistps
push
insl
stos
cmpsl
mov
fcmove
adc
mov
sar
les
lock
and
mov
stc
pop
dec
jns
or
adc
negb
sbb
cli
pop
imul
loope
mov
mov
js
pop
mov
jno
cld
in
sub
pop
aas
push
dec
shrb
insb
xchg
aas
stos
test
sbb
mov
add
mov
daa
popf
push
jmp
insl
lret
cmc
rcll
jns
inc
push
out
adc
jae
dec
or
push
or
mov
jle
mov
add
jmp
add
jp
cltd
mov
inc
jge
in
adc
arpl
out
cmc
lock
cmp
bound
pop
lret
leave
jecxz
inc
adc
sub
adc
push
cs
add
scas
pop
in
sbb
ss
mov
iret
imul
jge
and
cmp
out
xor
dec
fnop
inc
pop
roll
mov
outsb
dec
or
cltd
sub
adc
cli
mov
lcall
cmp
push
dec
fidivrl
out
or
dec
adc
push
call
mov
push
and
xlat
inc
icebp
sahf
mulb
xorl
fdivrl
sbb
call
add
clc
mov
insb
cli
pop
call
outsl
sbb
call
inc
cmc
cmpsl
lea
subb
mov
inc
mov
std
call
fidivrs
in
xor
fldcw
jg
ficompl
lods
rorl
mov
test
fistps
push
push
rorb
cmp
test
cs
xchg
jae
imul
push
out
push
or
jl
jmp
stc
xchg
and
mov
add
repz
fistpll
mov
xchg
pushl
mov
aaa
fistpll
lea
js
pushf
les
addr16
fistpll
out
xchg
lret
jbe
loop
scas
cwtl
inc
jmp
xlat
fistpll
mov
mov
lods
or
test
scas
add
jns
loop
mov
mov
lahf
cmpsb
jle
les
imul
xchg
xchg
imul
jne
mov
xor
jle
loope
shll
repnz
data16
mov
ja
mov
fisttpl
and
xchg
add
xor
cwtl
mov
shll
xchg
rcrb
sbbb
shrd
adc
jmp
les
hlt
jl
cmpsb
pop
add
mov
cmp
in
filds
insl
lcall
mov
out
and
das
adc
sbb
pushf
jmp
daa
ja
popf
das
iret
scas
das
nop
outsl
mov
lret
cmp
lret
hlt
lahf
jg
adc
popf
mov
jnp
mov
push
leave
inc
inc
fsubrs
xchg
bswap
incl
inc
in
mov
inc
aam
shrb
decl
cmpsl
mov
mov
cmpsb
outsl
push
jecxz
das
ret
xchg
imul
mov
les
jns
jl
push
test
fwait
cmpsl
rorb
lret
insb
sahf
addr16
jns
int
cmpsb
mov
inc
or
mov
xorb
sahf
out
iret
xchg
or
shll
pop
movsb
sbb
shll
fbld
dec
shl
mov
mov
dec
repnz
daa
leave
xor
shll
jecxz
push
mov
push
mov
push
push
inc
in
sbb
dec
insl
inc
cltd
iret
repz
push
xchg
inc
and
lcall
in
pslld
jecxz
enter
xchg
lahf
cld
loop
in
hlt
mov
sbb
int3
stc
cmp
out
pop
jl
or
imul
or
aas
std
hlt
mov
fistps
mov
jnp
leave
int
dec
cmp
mov
aam
xchg
dec
xchg
mov
fbld
dec
int
fldl
mov
jno
xor
les
mov
xor
gs
mov
dec
into
lock
stc
bound
dec
cmp
mov
push
stc
cmc
adc
mov
mov
mov
push
fidivs
xchg
lods
push
push
ds
dec
in
mov
inc
xchg
popa
cmp
js
aaa
sub
jg
lcall
fwait
lods
mov
push
dec
mov
sbb
dec
rorl
xchg
push
pop
cld
sar
mov
or
ret
add
sbb
xor
cmp
xor
mov
push
push
lods
mov
inc
jb
divl
idivb
xchg
inc
ret
clc
decl
mov
xor
dec
fucom
jg
sub
push
jmp
jg
sahf
mov
or
lds
ret
imul
and
call
icebp
jecxz
adc
imul
inc
jno
bound
jno
push
in
je
les
lcall
xchg
xor
shrb
lds
mov
sub
cld
insl
fdivs
fwait
or
pushl
push
push
mov
jae
scas
lds
inc
fs
xor
mov
inc
pop
mov
pop
mulb
mov
push
loop
mov
xchg
fnsave
arpl
out
xor
and
adc
mov
add
stos
sub
ror
sarl
add
dec
push
lahf
push
or
mov
xor
lcall
arpl
repz
sub
xor
pop
jb
fisubrl
add
int3
mov
dec
xchg
adc
out
push
int3
aaa
and
and
jns
call
sbb
aaa
cwtl
push
imul
or
shl
push
jmp
in
cmp
es
incl
mov
outsl
xchg
adc
and
push
es
data16
mov
mov
lcall
jmp
sub
add
dec
test
sub
xor
mov
cmpsl
mov
enter
popf
cmp
inc
jmp
sbb
push
lahf
out
je
out
pop
popa
outsl
movsb
bound
inc
insl
sub
arpl
fnstenv
pop
mov
popa
in
loop
sar
inc
xchg
enter
push
push
mov
sarb
test
inc
push
jmp
lock
lahf
push
add
xlat
je
stos
popf
xchg
xchg
insl
push
retw
jne
ljmp
xchg
pop
jae
in
scas
cld
in
jb
testl
call
jne
insb
lds
sub
jg
mov
ja
lret
push
arpl
lods
and
fdivrl
add
jp
loop
imul
mov
mov
lret
inc
js
int3
addr16
pop
lret
stos
xchg
mov
loopne
or
jbe
and
dec
mov
xchg
pop
sub
push
mov
cmpsl
es
gs
ja
notb
pop
aas
inc
daa
cmp
push
and
and
dec
push
push
and
cmp
aas
xor
lcall
comiss
aaa
and
and
add
repz
jmp
sub
sub
adc
add
add
cmp
and
or
or
or
incl
or
sbb
pop
daa
add
adc
push
push
adc
sbb
add
and
xor
or
ss
push
cmp
xchg
lods
clc
pop
sarb
cmp
pop
inc
xor
push
pop
bound
movsl
inc
sbb
xor
ljmp
add
add
or
sub
je
sub
movhps
cmp
or
movups
sub
daa
and
add
aas
ljmp
es
ja
pop
add
daa
xor
push
xor
sub
pop
adc
stc
mov
inc
inc
cmp
add
push
xor
or
push
adc
or
cmp
jmp
clc
sbb
or
pop
test
push
push
cmp
adc
xor
popa
push
sub
add
xchg
daa
add
or
jg
xchg
sub
push
sub
or
add
adc
and
and
add
pushl
daa
push
or
int
scas
or
imul
sbb
push
cld
cmp
add
test
mov
loope
ss
or
mov
jbe
pop
sar
lcall
push
lods
pushf
ljmp
fdivr
std
imul
mov
jmp
decl
jp
cmp
mov
jp
mov
insl
mov
adc
call
lds
add
test
inc
mov
cmp
outsl
xchg
push
jbe
js
mov
popf
bound
push
into
mov
stos
mov
inc
dec
sub
mov
push
mov
jmp
andl
stos
mov
mov
gs
mov
test
push
flds
jbe
in
xor
repz
ljmp
out
pop
xchg
pusha
push
mov
sbb
or
push
pusha
xchg
cmp
scas
jno
add
jmp
mov
adc
jb
adc
adc
adc
sub
push
jbe
push
mov
mov
inc
mov
or
or
jg
mov
inc
dec
pop
cwtl
pop
in
pusha
fiadds
push
addr16
jle
ja
montmul
cmpsb
inc
call
add
push
push
push
pop
push
inc
test
jno
pop
ret
cmp
fadd
out
xor
pop
ja
push
out
cmc
ljmp
xchg
pop
jno
pop
gs
das
pop
inc
insb
jnp
lods
imul
jg
dec
push
rcrb
jle
pop
push
jo
lds
sub
and
call
inc
dec
pop
add
loope
imul
jp
sub
add
jb
loop
jbe
and
test
xchg
clc
call
pop
pop
in
pop
pusha
jnp
dec
sub
jns
dec
mov
jbe
adc
inc
push
sub
jg
cli
push
push
in
imul
or
loopne
pop
add
push
out
mov
push
pushl
jle
jle
cli
stc
jo
pop
hlt
pop
in
lods
data16
push
push
jecxz
jbe
sub
jg
sub
fimull
rcrb
lock
sbb
mov
shr
js
bound
outsl
mov
push
and
and
js
pushl
add
vpcmpeqw
pusha
popa
pop
xor
out
or
jg
incl
and
inc
lea
adc
sbbb
js
add
mov
dec
xor
inc
sbb
nop
cmp
push
out
sub
jns
sbb
into
decl
nop
clc
or
jb
inc
loopne
bound
pop
adc
cmp
lcall
mov
call
add
cmc
add
insl
push
sub
pop
sbb
daa
ds
in
or
insb
add
jg
cmp
in
pop
in
dec
sbb
cmp
ficomps
dec
es
dec
jno
cmc
cmp
dec
aas
dec
xor
mov
sub
dec
les
add
imul
add
sub
or
jno
into
fst
call
lret
aam
rcrl
dec
loopne
pop
out
jb
stc
and
shrb
sub
pop
leave
mov
push
jbe
mov
mov
add
cs
pop
loop
push
xlat
mov
inc
imul
inc
ficoml
dec
mull
iret
iret
iret
jnp
mov
fistps
ss
xlat
lcall
std
enter
arpl
cwtl
rep
jae
fimull
mov
out
jp
daa
dec
ljmp
loopne
insl
les
popa
rcrb
lods
leave
int
hlt
jmp
jp
gs
ret
cmc
jge
xlat
mov
cmp
pcmpeqw
push
repz
leave
test
insl
call
pushl
sbb
sub
shrl
les
sub
shrl
add
fists
jl
das
inc
jmp
dec
dec
daa
std
xor
loop
imul
inc
push
lret
and
cmp
or
sub
fcomip
adc
push
inc
inc
add
and
and
rorl
cmc
decl
mov
loop
js
mov
repz
jecxz
clc
dec
mov
inc
add
lods
xor
aas
ficomps
gs
push
and
and
push
adc
call
sub
daa
dec
cmp
popf
and
jnp
sbb
pop
dec
les
clc
int
adc
mov
rolb
cltd
data16
ret
shll
cld
aaa
inc
jmp
call
fstpt
in
sarl
jge
lret
push
add
add
fcomp
stc
sub
add
out
loopne
paddusw
mov
inc
xchg
std
rolb
outsb
xchg
dec
xchg
add
outsl
cli
jg
je
sub
adc
lea
adc
sbb
xor
sbb
lcall
and
push
cmpsb
or
jno
sub
pop
mov
call
pushf
ss
lods
or
ret
sbb
fsts
jg
xchg
iret
push
rcr
xbegin
insb
mov
mov
cmp
shlb
aad
stos
out
jg
push
mov
add
and
xchg
shrb
pusha
or
fldenv
sbb
ja
ljmp
movsb
sbb
dec
scas
dec
or
adc
fnsave
mov
sbb
out
inc
adc
jg
push
sbb
cmc
cmc
shlb
jmpw
lods
out
je
and
call
das
inc
cmpl
js
or
lahf
xor
pop
insl
jl
adc
inc
add
dec
add
mov
adc
out
mov
xchg
cmp
pushl
adc
pop
adc
popa
push
testl
cmp
mulb
cwtl
pushl
cmp
jl
test
ja
addr16
adc
bound
xor
call
test
imul
jns
cmc
mov
aad
pusha
sub
cs
inc
mov
xchg
jmp
inc
dec
mov
push
jb
ret
xor
adc
mov
repnz
ljmp
js
inc
push
adc
sub
push
and
push
pop
mov
cmp
jnp
sbb
rcll
and
jmp
jo
jb
xchg
dec
jno
mov
pusha
aam
leave
movb
jp
push
mov
dec
pop
pop
daa
cmp
int3
jle
test
das
dec
push
adc
push
movsl
or
outsl
incl
rolb
loope
pusha
dec
pusha
pop
outsl
xor
ret
or
addr16
out
mov
hlt
js
cmp
or
scas
cmp
clc
or
inc
mov
leave
cmp
mov
adc
cwtl
sbb
inc
stos
into
out
push
std
jbe
loopne
imul
lcall
rcrb
push
lret
sub
repz
hlt
mov
clc
sub
popf
xchg
out
xor
jg
push
pushf
loope
ja
push
dec
sar
test
cmp
and
int
ret
stc
and
jnp
aas
lcall
jmp
push
and
cmp
fwait
xor
stos
movsl
jns
dec
and
aad
decl
arpl
pop
pop
and
dec
add
push
out
shr
fildll
call
xlat
mov
or
adc
jle
enter
loope
sub
add
cli
call
pop
test
aam
push
imulb
aas
cmp
inc
push
les
dec
clc
fidivrl
addr16
inc
jno
jmp
decl
pop
dec
jp
lcall
ds
push
jo
xor
push
mov
push
push
sbb
aaa
outsb
jle
adc
mov
lods
mov
or
push
cmp
add
ljmp
lock
scas
fidivs
inc
fsub
insl
or
jg
das
jo
mov
or
ljmp
decl
imulb
popa
pop
jp
cmp
ljmp
scas
xor
ja
decb
sahf
jb
scas
popa
cmpsb
dec
test
movsb
in
push
js
fs
test
stos
call
cmp
clc
and
imul
je
ss
xor
jg
call
aad
in
cmp
movsl
aaa
shl
cwtl
dec
fiaddl
push
dec
push
push
fdivrs
lret
test
call
dec
ds
cmp
popf
push
xor
daa
popa
push
mov
dec
fisttpl
rolb
ljmp
loopne
popa
push
icebp
flds
adc
into
ret
arpl
lret
aam
out
jmp
cmp
pop
add
dec
inc
inc
sub
das
jno
dec
xor
inc
mov
mov
mov
mov
sub
mov
dec
dec
pop
insb
lods
lret
addb
test
dec
push
inc
aam
lcall
subl
ljmp
ljmp
imul
push
roll
call
lea
cwtl
push
adc
out
push
nop
sti
ja
leave
mov
xchg
add
mov
jge
cmp
js
or
or
sarb
jl
insl
fwait
xchg
xchg
adc
cmpsb
test
call
lahf
stos
push
pop
sbb
xor
pop
mov
pop
mov
cwtl
in
push
or
stc
mov
pop
push
jno
out
push
mov
imul
les
pop
push
movsb
dec
int3
mov
cmp
sub
inc
test
ret
push
pop
xchg
cmp
pop
fdivrp
pop
cmc
ljmp
ss
rcr
aas
mov
pop
mov
nop
add
repnz
push
jg
cmp
cltd
sub
sahf
sub
insb
pushf
cmpb
cmpsb
add
push
sbb
fwait
dec
jg
pop
mov
push
pop
mov
aam
xorb
inc
inc
sub
cmpsb
repnz
decl
sahf
or
jns
lea
xor
inc
nop
cmpsb
jl
fwait
mov
or
mov
call
rolb
fnstenv
into
loopne
lods
or
mov
mov
ljmp
push
sub
xlat
or
mov
sub
clc
pop
jle
cmc
mov
add
ljmp
ja
and
inc
push
cmp
mov
aaa
test
adc
sar
lock
and
stos
sub
add
pushl
sbb
inc
pop
mov
into
dec
lock
dec
iret
loope
out
notb
dec
mov
and
sti
idivl
xchg
cmp
repz
loopne
xor
dec
mov
dec
mov
jns
addl
pavgw
push
mov
add
call
leave
or
pop
dec
sti
jae
mov
jne
pop
decl
mov
sbb
addl
lcall
fimuls
pop
push
adc
mov
aas
adc
scas
pop
ss
call
in
jns
pop
jg
lret
or
je
add
stos
mov
mov
incl
outsl
dec
sub
jecxz
add
pop
adc
add
lea
incl
add
sub
push
stos
push
in
jae
scas
incl
ljmp
ret
cmpsb
jns
jecxz
cld
cmp
push
push
pop
dec
add
idiv
insl
inc
jno
cmp
das
adc
dec
cmp
or
sub
or
or
and
sub
add
lods
lea
stos
dec
iret
add
sarb
xor
lea
xor
call
inc
xchg
stos
mov
or
and
lods
and
incl
add
popa
pop
divb
pop
jp
xor
cmp
aam
xor
shrl
ljmp
pop
mov
adc
push
push
xor
xchg
xor
pop
sbb
jl
xor
dec
rdpmc
call
icebp
mov
cmp
aaa
add
mov
jp
call
xor
pop
add
adc
push
popf
stc
add
out
sbb
aad
sub
and
adc
inc
push
xor
loop
pop
adc
xor
nop
dec
mov
loop
je
or
std
ljmp
jp
pop
jmp
inc
arpl
leave
sbb
in
adc
jo
push
clc
or
jo
add
cld
and
jg
mov
mov
inc
pop
rclb
pop
cli
mov
mov
into
mov
mov
cwtl
push
inc
mov
lcall
pop
lods
pushf
jle
adc
xchg
pop
clc
mov
push
clc
ljmp
dec
jo
jle
mov
adc
push
add
or
sarl
or
lea
data16
push
mov
inc
jg
jp
mov
sbb
push
test
mov
and
sub
add
je
dec
decb
imul
jmp
dec
dec
enter
add
pop
jg
xlat
sub
bound
add
clc
cmp
je
jno
ret
inc
mov
lock
mov
mov
push
adc
jno
out
jmp
and
add
cmc
xor
js
or
fcoms
jle
popa
pushf
and
dec
fiadds
jne
mov
jnp
lahf
adc
mov
adc
addr16
cmp
mov
sub
cmpsb
or
sbb
fwait
iret
cmp
fs
lock
xor
sbb
push
pop
incl
push
mov
cld
xchg
push
xchg
lock
push
dec
cltd
in
pop
loopne
jp
ds
lcall
insb
int
push
pop
inc
repnz
cmp
push
mov
inc
scas
xor
ja
es
inc
std
incl
pushf
dec
fsubrs
cmp
cmp
cli
push
pop
jne
addr16
arpl
jle
add
pop
push
push
imul
pop
sub
push
jb
sub
lea
out
fldz
cmp
outsb
push
lock
add
cli
inc
imulb
push
inc
inc
pop
pop
aas
inc
push
push
xchg
dec
mov
inc
mov
inc
inc
aaa
sub
add
adc
push
pusha
sti
outsl
cli
mov
add
jg
or
dec
pop
jb
inc
add
push
pop
movsb
clc
jg
or
add
or
inc
inc
push
ljmp
ficomps
add
sbb
push
pop
adc
sbb
dec
test
mov
jp
pop
and
add
push
push
outsl
inc
sbb
and
add
or
pop
and
push
outsl
call
std
cmp
adc
add
or
pop
dec
sbb
and
pop
adc
lcall
sbb
sub
or
xor
jp
sbb
xor
xor
sub
pop
add
pop
sbb
incl
dec
push
sbb
pop
or
adc
mov
xor
add
add
push
add
jns
or
xor
cld
sub
cmp
cmp
sub
mov
cmp
xor
and
and
aas
cmp
pop
sbb
fwait
imul
ljmp
sub
or
dec
inc
push
arpl
or
add
fiadds
add
iret
fbstp
out
adc
cmpb
push
jge
sbb
pop
add
sbb
cmp
add
push
adc
das
sub
push
bound
jl
lcall
push
cmp
daa
or
or
cld
sbb
or
pop
sub
xor
pop
pop
xor
sub
sub
cmpsb
add
pop
mov
and
pop
add
sbb
aaa
cmp
das
out
pop
push
xor
or
or
sbb
pusha
adc
jg
jne
adc
notb
cmp
pop
pop
or
mov
into
xor
or
sub
jb
clc
jg
jmp
insb
jp
shlb
outsl
jno
dec
dec
outsl
jo
outsb
dec
pop
test
in
jg
jae
inc
outsb
dec
jp
push
js
push
imul
push
push
push
dec
push
push
push
jns
inc
jl
sbbb
dec
inc
push
add
dec
jbe
jns
inc
and
pop
je
data16
inc
pop
loopne
inc
add
outsl
inc
pop
push
jns
jmp
dec
jp
push
dec
dec
push
inc
outsl
js
inc
insb
dec
pop
push
outsl
out
inc
jp
dec
jg
in
fisttpl
pop
push
jbe
inc
or
bound
imul
push
pop
push
outsl
push
lock
mov
or
jno
dec
push
dec
outsb
insl
jp
inc
test
dec
mov
outsl
inc
pop
push
push
scas
and
outsb
jp
jae
js
insb
inc
inc
dec
push
insb
fisubrs
push
pop
push
imul
push
dec
je
insb
inc
and
ja
push
jbe
lock
clc
in
pop
jbe
push
inc
push
jp
inc
xchg
outsb
decl
outsb
dec
popa
gs
jp
push
dec
dec
push
inc
inc
popa
ljmp
adc
push
pop
data16
push
mov
push
cmc
mov
add
dec
aaa
aad
je
add
jns
xchg
adc
or
jns
out
adc
or
sahf
out
sahf
adc
sbb
push
pop
jns
out
and
and
sub
jns
out
cs
xor
sahf
out
sahf
xor
ds
pop
inc
jns
out
inc
push
push
push
push
add
out
sub
bound
cmp
sbb
push
in
lock
out
ds
cld
clc
add
add
sahf
out
sahf
pop
or
adc
sbb
sahf
out
and
sub
out
sahf
out
cmp
inc
sahf
out
sahf
dec
dec
push
push
pop
pusha
jo
out
fs
cmovae
dec
adcb
xchg
push
push
pop
add
adc
xlat
xor
testl
jle
arpl
das
std
testb
push
imul
inc
jo
add
sbbl
add
out
imull
imulb
push
adc
sarl
inc
adc
push
xchg
sub
sti
add
mov
push
or
cs
pop
out
mov
out
pusha
xchg
xorb
pushw
ja
pop
aas
pop
jle
pop
add
arpl
jb
mov
pop
jecxz
insb
xor
fstpt
inc
arpl
jo
insl
push
outsb
cmpsl
aaa
dec
out
in
subb
je
outsl
aaa
push
out
mov
ds
imull
mov
fs
jb
push
gs
jnp
mov
and
jne
das
scas
inc
mov
aas
fisttpl
fiadds
jae
addr16
stos
jge
jo
jg
loopne
daa
dec
das
je
jns
sbb
inc
out
pop
sahf
testl
adc
imul
push
push
jp
add
jb
mov
push
pop
push
arpl
addr16
imul
je
push
jae
push
sbb
out
jge
fs
ja
inc
cmpsl
shl
loopne
xchg
inc
pop
arpl
mov
mov
dec
push
popa
xchg
daa
fidivs
cmp
push
adc
adc
loopne
pop
ja
rcll
sbb
pcmpeqb
insl
aaa
dec
inc
jno
xchg
pop
das
push
xlat
mov
xchg
pop
das
pop
sbb
add
pop
js
and
scas
dec
push
arpl
xlat
mov
sti
outsl
mov
push
hlt
xchg
pop
es
leave
fs
leave
rorl
and
rcll
pop
out
inc
pop
mov
cmp
jb
push
pop
loopne
fisubs
das
mov
and
lock
es
or
jb
jmp
in
mov
and
push
push
xchg
or
test
push
jnp
push
push
inc
arpl
push
cmp
mov
pop
pop
push
sti
pop
add
pop
inc
jnp
insl
cmp
jmp
popf
xlat
add
push
shl
out
inc
dec
out
inc
mov
mov
push
aaa
add
add
adc
sysexit
in
sbb
pop
add
mov
or
pminsw
lret
outsl
adc
aas
pop
dec
sub
mov
test
scas
jg
add
lahf
pushl
adc
push
cmp
shrl
or
push
or
or
mov
jbe
or
aaa
or
or
daa
ss
das
and
cmp
inc
push
addr16
das
push
femms
outsb
mov
push
mov
insl
push
and
sbb
push
pop
andb
fildl
aas
addl
sub
popf
movsb
fbld
xchg
aaa
fdivrl
xlat
pop
sbb
mov
add
add
sub
cmp
push
or
fcos
push
popa
inc
inc
sbb
stos
arpl
dec
mov
and
add
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
popl
jle
test
shll
mov
inc
jg
pop
mov
pop
inc
mov
iret
mov
inc
sbb
in
call
adc
push
sti
sub
neg
pop
fidivrl
xor
fcomp
loopne
jb
push
jne
xor
scas
daa
mov
in
inc
mov
xchg
je
add
loopne
inc
cwtl
lods
scas
mov
mov
mov
jle
nop
loopne
aas
lcall
pop
xorb
icebp
daa
push
test
xor
pop
std
jle
rorl
push
jle
sub
add
cmp
out
or
mov
imul
mov
enter
sahf
adc
lahf
out
sbb
int3
mov
repz
rep
push
test
and
jl
iret
and
mov
lock
iret
repz
push
js
jns
jp
cmp
jae
push
cld
sbb
or
loope
les
outsl
pop
or
orb
cmp
outsl
daa
flds
push
xchg
aas
inc
insl
mov
pop
aas
and
add
repz
push
mov
repz
je
fs
repz
repz
inc
cmp
iret
repz
sub
and
sbb
cmp
repz
adc
add
shr
rcrl
aam
jns
out
int3
sarb
sahf
pushf
cwtl
mov
or
xlat
sub
fsubrl
push
jg
daa
xchg
add
cmpsl
cmp
pop
ds
repz
xchg
push
mov
repz
push
dec
insl
add
out
sahf
out
pop
ja
mov
jle
notl
insb
jg
inc
das
outsb
or
mov
outsl
sbb
arpl
and
add
outsb
addr16
inc
fisttps
pop
outsl
pop
jb
sbb
aas
pop
push
add
addb
push
inc
enter
fildll
inc
add
dec
inc
add
addr16
push
push
fbld
add
cmp
dec
incl
add
xchg
add
xchg
addb
rolb
and
enter
add
sbbl
add
das
or
idivl
sub
jg
mov
decb
add
subb
pusha
mov
jbe
pop
out
pusha
pusha
or
jle
jbe
pop
cwtl
mov
pop
out
aas
frstor
fiadds
in
lods
sbbl
xorl
out
rcr
rcrb
aas
xorl
and
mov
addl
loopne
out
insl
add
add
mov
mov
pop
out
jnp
fucomip
outsb
add
data16
orb
decl
lock
jmp
push
rolb
pushf
jl
stc
lret
shl
pushf
pushf
pushf
lock
cld
scas
sub
into
rcr
xchg
cmp
fcoml
and
add
std
cltd
pop
mov
out
jo
pop
loop
sti
rcrl
pop
jle
jg
mov
xchg
idivb
jo
push
out
pop
inc
ja
push
pop
addr16
jle
loopne
push
and
fnsave
xchg
push
mov
inc
sbb
push
add
mov
sub
push
xor
and
add
pop
sub
pop
jmp
pop
das
fsubs
xchg
das
mov
dec
sub
in
add
das
sub
xchg
mov
add
add
addr16
in
xchg
ja
pop
aas
insl
or
add
lea
mov
nop
pop
out
faddp
ss
mov
das
pop
das
add
xchg
movsl
mulb
shrl
sub
mov
das
mov
das
shrl
stos
mov
pop
shl
jnp
jg
shrl
dec
xor
lods
dec
shrl
add
faddp
jbe
outsl
ficoml
add
roll
cwtl
mov
inc
xchg
lea
pop
in
lods
addb
test
push
jnp
inc
das
shrl
or
popa
scas
js
das
data16
out
out
or
add
jmp
mulb
mov
orb
orb
vmread
psubusb
das
pop
or
and
jb
orb
loopne
and
jb
clc
cld
inc
jb
pop
incl
shl
and
jb
clc
cld
out
jo
leave
add
aas
pop
scas
adc
or
mov
lret
or
push
int
mov
fdiv
lret
add
or
or
fldcw
adc
push
add
and
sub
push
add
inc
add
mov
jl
push
push
push
xchg
add
es
int3
add
out
iret
jnp
adc
test
cltd
sahf
aaa
cmp
sbb
repz
jns
incl
xor
insl
jns
cltd
int3
insb
incl
xor
pop
fdivp
cltd
int3
xchg
incl
xor
xchg
cmp
int3
sub
out
mov
aad
pushw
cltd
daa
out
push
mov
std
push
xor
xor
xor
xor
xor
out
xor
xor
xor
jns
out
xor
xor
rcr
sahf
xor
xor
iret
xor
mov
ja
add
data16
repz
data16
repz
data16
out
js
push
data16
jns
xor
xor
int3
int3
in
sbb
out
incl
data16
ret
in
xor
test
add
mov
xor
popw
call
data16
out
xor
push
cs
cltd
pop
pushf
out
cltd
cltd
cltd
sbb
imull
cltd
cltd
xor
pushf
jns
out
pop
das
lcall
sbb
adc
add
xchg
xor
push
mov
pop
orl
push
data16
orl
int3
fmulp
xchg
add
int3
mov
jns
out
int3
int3
int3
pushl
push
int3
int3
jns
out
loop
or
push
jmp
jns
out
pushl
jns
int3
dec
mov
jns
jns
xor
int3
cs
out
sahf
out
int3
int3
int3
int3
in
jns
decb
incl
sti
ja
dec
data16
push
and
movsl
add
ss
int
add
xchg
xchg
add
add
add
add
add
add
mov
icebp
add
data16
jbe
mov
pushf
dec
add
mov
repnz
cmp
pop
in
cmp
icebp
lock
out
mov
mov
fsubrs
add
mov
pop
icebp
jg
sti
jnp
push
mov
push
fidivrl
imul
aas
loope
mov
mov
fistl
call
mov
mov
or
sarl
aas
pop
ss
mov
fsub
dec
push
ret
mov
fdivp
fdivrl
add
add
cmp
mov
negb
aas
inc
sbb
or
push
mov
fmuls
test
mov
mov
icebp
jg
sbb
or
add
sahf
cmp
push
out
mov
cmp
sbb
rcl
test
cmp
add
or
mov
testb
add
repnz
data16
add
xor
xor
nop
sarl
sbb
add
test
loopne
sub
dec
add
or
add
pop
inc
or
mov
cmpl
xlat
in
inc
sbb
inc
loop
aas
inc
lret
imul
aas
add
xchg
fdivs
js
push
add
mov
inc
jb,pn
push
pop
push
cmp
push
add
shrb
cmp
js
sbbb
sbb
xor
les
test
scas
mov
mov
hlt
add
xchg
add
and
pop
hlt
xor
aam
nop
add
inc
jg
icebp
add
insb
lds
add
mov
add
add
cmpl
push
add
dec
jns
test
sub
shll
loope
pop
push
loop
jae
pop
push
sbb
bound
daa
cmpl
lcall
fs
jg
loopne
or
loopne
jno
fsubrl
loopne
fs
daa
jbe
cmp
push
xchg
xor
dec
inc
xchg
xor
pop
push
or
popa
mov
xor
addr16
fistpl
mov
push
bound
mov
dec
lods
pop
or
and
loopne
insl
add
sbb
popa
sub
push
cmp
bound
fcoml
mov
popa
loope
mov
and
xorl
ja
pusha
fs
outsb
loope
mov
pop
pop
jo
imul
sbb
or
imul
loopne
outsb
imul
loope
loopne
or
and
rcrl
fidivrs
icebp
roll
xorb
daa
shl
outsb
add
and
iret
sbb
rorw
insl
jp
fisubl
repnz
or
rorb
and
ret
pop
mov
add
or
rcrl
xlat
pop
adc
inc
repnz
dec
mov
outsb
lea
push
lock
out
or
icebp
or
mov
popa
sbb
jae
add
pop
xrelease
ret
push
fldcw
shll
orb
xchg
or
push
je
mov
frstor
and
rol
mov
add
xor
sbb
pusha
int
scas
sbb
add
pop
imul
pop
add
pop
int
pop
mov
jae
into
sbb
push
bound
adc
popa
pop
pop
lds
jnp
xchg
imul
rorl
in
outsb
add
int3
loop
andl
pop
pop
pop
push
clc
or
pop
sbb
pop
or
xor
outsl
in
or
or
xorb
push
add
sub
je
dec
add
test
fndisi(8087
fwait
mov
pop
popf
cmp
outsb
push
push
mov
and
push
out
orl
push
pop
aas
fdivrl
test
add
ds
in
sahf
sbb
es
pop
mov
shlb
xor
mov
mov
or
mov
rolb
push
cmc
mov
pop
pop
mov
scas
xchg
das
and
jae
add
andb
mov
out
inc
fisubrs
inc
push
ds
hlt
clc
add
addb
cmc
fsubrl
mov
push
nop
nop
lock
add
test
and
ret
and
cmp
add
adc
sbb
or
xor
sbb
add
push
pop
test
ss
sbb
nop
rcr
outsb
pop
sbb
xlat
push
outsb
and
add
or
idivl
dec
push
ja
inc
loope
out
mov
aaa
or
imulb
mov
inc
dec
pop
imul
mov
add
aaa
and
mov
sbb
cmp
shl
out
dec
push
andb
pxor
sbb
inc
pop
js
or
js
je
pop
mov
adc
sbb
cmpsl
outsl
xorl
add
jne
std
sbb
pop
aaa
add
es
jns
inc
add
pusha
scas
rcll
call
add
repz
pop
insb
and
add
fs
mov
inc
sub
jo
cmp
xor
sub
fisubl
scas
xchg
dec
push
mov
and
inc
lcall
mov
inc
fnstenv
mov
gs
sbb
push
fimuls
imul
das
inc
add
xor
fimull
fidivl
popa
sub
jbe
sbb
push
jl
xchg
and
imul
das
add
pop
xchg
jo
pop
xlat
roll
bound
and
and
sbb
xor
in
mov
lea
xor
testb
fimuls
jb
or
push
jo
pop
add
dec
testb
pop
adc
sbb
jl
movsb
loop
rolb
sahf
push
stos
or
loopne
xchg
pop
psadbw
loop
add
es
inc
por
repnz
mov
pop
add
and
loop
fisttpl
dec
cmp
cs
mov
sbb
fnstsw
jae
xor
jp
cld
js
arpl
jb
and
mov
sub
adc
outsb
sti
mov
dec
or
jnp
neg
fildll
and
daa
sarw
aaa
lahf
jbe
or
xor
add
pop
jb
or
or
fmuls
pop
bound
or
jmp
xchg
add
jo
pop
shrl
lcall
adc
mov
out
mov
ss
push
push
jle
fisttpll
out
jns
inc
inc
jle
testb
fiaddl
ja
xlat
fcomi
loopne
insb
mov
pusha
bound
xor
jo
fcomps
bound
jae
pop
xchg
out
popa
add
stos
or
xchg
ja
pop
pcmpeqw
cmpsb
jns
js
or
sbb
mov
xchg
adc
or
outsl
dec
repnz
jae
adc
sbb
mov
cmp
inc
mov
adc
inc
shl
sbb
mov
jnp
adcb
fldt
pop
cs
scas
fs
adc
cmp
xlat
outsb
stos
push
outsb
sarl
das
sub
daa
incb
mov
sub
xchg
and
inc
add
sbb
push
sbb
xchg
xchg
orb
sub
ret
jae
out
outsb
popl
jns
mov
fbld
ret
pop
enter
cmp
mov
sub
sub
mov
sub
adc
mov
ja
pop
mov
imulb
loop
arpl
cmp
lret
adc
repnz
loopne
outsl
repz
jb
outsw
rorl
je
lods
popa
adc
andl
outsb
shrl
mov
or
sbbl
adc
imul
cmp
loop
loope
stos
inc
iret
pop
scas
or
mov
xor
mov
and
ja
xchg
push
or
das
insl
push
insl
xchg
jmp
inc
mov
outsl
dec
jo
mov
cli
scas
out
loop
push
outsl
and
mov
ja
out
push
loopne
pop
gs
inc
mov
add
sub
ds
fildll
rolb
insb
cmpsb
sbb
jmp
sbb
push
inc
jg
sub
fbld
pop
lret
inc
inc
fcompl
pop
adc
adc
mov
jecxz
push
inc
sti
insb
dec
adc
pop
inc
jo
jae
pop
add
xor
xorl
orl
and
pop
mov
fs
push
xor
mov
sahf
jno
jg
sbb
scas
adc
xchg
pop
inc
js
jns,pn
sub
xor
sbb
pusha
adc
dec
pop
or
shrb
sbb
or
maxps
fs
xchg
dec
mov
mov
sub
stos
lods
adcb
xchg
jp
mov
push
mov
adc
xchg
mov
insl
repz
data16
mov
cmpps
add
pop
xchg
adc
sbb
xchg
mov
subb
adc
call
cli
or
js
lahf
outsl
daa
andl
insl
rorl
addr16
or
imul
xchg
add
and
shll
fdivs
and
mov
push
arpl
adcb
xchg
scas
mov
add
jmp
mov
mov
insl
sbbl
push
pop
mov
pop
inc
pop
xchg
call
inc
pop
bound
popa
outsb
hlt
js
lahf
insl
ja
jecxz
push
loope
xchg
adc
and
pop
shrl
rcll
cwtl
test
push
cmp
imul
jnp
mov
dec
mov
xchg
pop
jmp
addb
pop
or
imul
push
rcpps
pusha
ret
aad
jbe
stos
popa
add
insb
int
mov
pop
jae
jg
stos
out
jecxz
pop
dec
loopne,pn
xchg
and
jns
dec
adc
movsl
stos
or
add
sbb
mov
pop
push
fwait
push
outsl
insb
and
imul
pop
scas
push
xchg
aas
pop
sbb
sbb
inc
lcall
loopne
xorl
and
xchg
repnz
rolb
push
in
outsl
bound
push
inc
popa
xor
repz
test
add
pop
adc
push
xchg
push
sbb
push
cmpsl
bound
pop
or
add
cmp
xor
adc
add
adc
add
inc
ss
jmp
pop
mov
pop
push
je
push
jmp
mov
ficompl
in
inc
in
aas
and
inc
es
imul
and
iret
outsl
dec
imul
inc
xchg
jne
cmp
xor
imul
cmp
push
mov
das
dec
adc
gs
pop
andb
mov
fists
les
sub
and
push
enter
xchg
adc
and
pushf
pusha
dec
mov
push
pop
adc
and
push
mov
dec
addr16
pusha
insb
lods
rcr
mov
push
sub
incl
imul
pop
dec
jae
inc
add
mov
adc
adc
out
adc
mov
push
mov
inc
xchg
outsl
testl
mov
add
mov
cmovno
loopne
and
adc
push
rcrb
jle
mov
mull
fldl
test
fmull
and
push
sbb
dec
gs
adc
jne
out
inc
jbe
insl
xchg
jmp
pop
jbe
or
jo
leave
sbb
pop
pusha
fadds
dec
pop
push
jne
jns
push
or
xor
add
pop
mov
scas
mov
cmpsl
dec
mov
xor
scas
push
jae
sub
sbb
xor
sub
push
sti
ret
icebp
dec
outsl
fs
cmp
fs
loope
fs
insb
sub
shr
pop
mov
mov
push
jne
lea
inc
push
lods
js
std
inc
dec
inc
dec
cmp
and
shlb
jb
jp
cwtl
sarb
in
mov
fs
ret
lea
inc
sbb
inc
addr16
xor
fnstcw
arpl
insl
sub
push
dec
test
dec
and
sbb
sbb
xchg
jae
cmp
popa
clc
jo
and
or
push
aad
push
fcompl
loopne
pop
stos
inc
jae
cmp
add
imul
ja
lds
jo
fwait
dec
dec
push
stos
ret
jns
push
pop
mov
std
shrb
mov
cmc
loopne
movsb
inc
bound
dec
push
jb
push
js
stos
fstpl
inc
data16
push
das
inc
pop
sub
insl
cltd
into
jo
sbb
pusha
adc
imul
stos
jle
jne
push
push
lret
cmp
in
loopne
fistl
pusha
vpunpcklwd
jbe
mov
pushf
js
cmc
sub
xchg
and
pusha
pop
insb
or
jne
push
loop
andl
popa
jno
sbb
sbb
sbb
cli
push
add
push
int3
xchg
notl
cs
fwait
es
add
sub
popa
cmpsb
push
xor
pop
and
and
ret
inc
in
inc
je
insl
inc
inc
cmc
ret
pop
idivl
int
adc
dec
jo
fistl
mov
xlat
mov
addr16
dec
gs
pxor
sbb
test
jno
fmuls
and
dec
or
and
mov
cmpb
arpl
aaa
lods
cmp
pop
add
or
popa
lcall
sub
enter
xchg
jmp
xor
adc
jb
and
pop
adc
sbb
call
push
lds
arpl
inc
jae
lret
adc
adc
inc
adc
inc
bound
mov
pop
cmp
rcrb
or
fs
dec
and
pop
pushf
jnp
imul
push
mov
xchg
cmc
and
or
add
inc
jo
and
imul
subps
icebp
in
arpl
xor
insb
cwtl
movsl
pusha
xor
dec
inc
inc
push
and
fldt
add
inc
push
sahf
test
push
fs
push
mov
insl
adc
mulb
popf
ss
mov
fs
ret
pusha
pusha
movsb
sbb
addr16
push
in
push
in
lds
clc
repz
xchg
push
xchg
scas
jno
push
adc
pushf
inc
imul
bound
dec
cli
outsl
add
mov
pop
cmp
imul
xor
mov
sahf
push
xchg
scas
insl
das
into
lret
mov
outsb
stos
insl
lret
shlb
roll
mov
jae
test
inc
push
test
inc
xchg
cltd
or
fisubrs
push
mov
cmp
xor
jo
lods
push
cltd
ret
iret
pop
insb
sub
cmc
cmc
sub
insl
inc
sar
push
arpl
rorb
push
inc
mov
push
iret
pop
mov
bound
jb
mov
mov
mov
jae
iret
xor
rcl
jno
mov
cmp
inc
and
adc
and
je
jae
icebp
dec
iret
lds
fmul
push
test
testb
sbb
pop
cmp
inc
jbe
inc
in
outsl
into
xorl
stos
jo
add
stos
jo
mov
jge
fwait
sarb
sub
and
push
fcomps
int3
stc
sub
lret
push
arpl
lods
push
and
ret
cmp
adc
test
imul
inc
rorl
dec
das
inc
insb
mov
cmp
cmp
addl
dec
popa
jns
jne
push
or
jge
imul
dec
cmp
jmp
jne
xor
repz
inc
shll
xor
mov
and
cmpsl
fwait
test
xchg
xor
lods
jns
sbbb
pop
adc
es
mov
outsb
dec
jbe
insl
inc
inc
push
lods
gs
push
outsl
xchg
or
push
and
insl
jno
ret
add
or
and
push
loope
jno
sub
sub
sahf
imul
dec
inc
or
scas
pop
and
pop
push
bnd
dec
push
add
pop
insl
cmp
ds
pop
aad
fdivl
xchg
dec
and
inc
cmp
or
sub
push
sub
sbb
mov
inc
addb
add
outsb
loop
pusha
xor
add
add
cmpsb
es
mov
mov
cmp
jnp
outsb
ljmp
push
push
push
test
sahf
cmovno
or
adc
inc
imul
sbb
mov
daa
cmpsb
fadds
dec
clc
add
sbb
or
scas
testl
jb,pn
loop
in
and
adc
faddp
fldt
dec
loopne
mov
fisttpll
add
rcrb
jbe
test
sahf
dec
sub
xchg
lock
jnp
mov
loopne
jg
mov
and
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
add
lds
adc
