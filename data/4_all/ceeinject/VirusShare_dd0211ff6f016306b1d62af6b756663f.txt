and
mov
repz
pop
stos
cmp
add
add
pop
pop
jns
lcall
inc
jg
cmpsl
adc
inc
lods
les
sbb
mov
jp
pop
dec
pop
push
sbb
into
ss
push
jecxz
fdivr
aad
mov
movsl
mov
fidivrs
jmp
push
xor
xchg
push
jb
xchg
mov
or
and
movsb
sarl
rorl
mov
jns
jmp
xor
enter
nop
add
pop
push
mov
cmp
jl
leave
pop
sarb
push
mov
cltd
adc
sbb
and
aam
lret
jl
or
stos
and
inc
cmpsb
xchg
test
xchg
or
aas
cmpsb
gs
inc
out
arpl
dec
jge,pt
jae
enter
pop
mov
add
stos
jb
mov
mov
xorl
mov
daa
xchg
sub
add
xchg
inc
rcrl
fs
push
jb
or
ljmp
adc
mov
xchg
add
jmp
cmpsb
je,pt
clc
ja
gs
add
add
das
and
jo
xor
mov
sub
xchg
xchg
pop
cs
mov
sbb
inc
dec
inc
cmp
jmp
xchg
clc
inc
add
cmp
clc
inc
imul
pop
add
jmp
imul
gs
outsb
mov
mov
add
cmp
xchg
jp
jle
xchg
loopne
sub
jo
jne
jno,pn
xor
ljmp
mov
lcall
cmc
mov
or
lds
test
std
jns
dec
mov
leave
add
push
cmp
or
cs
pop
fstps
add
cwtl
or
xchg
movsb
testb
inc
adc
sub
outsb
xchg
lret
jnp
roll
std
push
adc
ljmp
inc
xchg
lods
inc
pop
mov
push
sbb
and
and
mov
push
cmc
bound
sub
in
sub
sub
dec
rol
mov
xor
cli
sub
xorl
lods
and
dec
mov
add
dec
insb
inc
outsb
inc
inc
daa
iret
stos
sbb
inc
add
sub
mov
out
or
or
pop
or
int3
mov
or
adc
jns
pop
pusha
pop
pop
mov
xchg
push
dec
pusha
imul
pop
and
mov
inc
xchg
insl
jmp
sub
aad
and
imul
jne
mov
mov
std
dec
jecxz
addr16
das
addb
pusha
inc
pushf
js
inc
xchg
repnz
push
roll
inc
shrl
cmpsl
movsl
jb
mov
jg
cs
cli
pushf
mov
inc
fbld
shlb
pop
cltd
add
sahf
push
jo
mov
xorl
les
jae
dec
cmp
and
jae
fmuls
ljmp
xchg
xor
mov
inc
fst
call
cwtl
or
loopne
sub
push
mov
lock
aam
pushf
loope
mov
sub
test
and
mov
xorb
mov
pop
xchg
or
or
push
orb
add
jne
jo
lahf
arpl
lock
shlb
lods
scas
sub
adc
pop
cmp
cs
sub
add
test
add
ret
pop
and
insl
pop
jne
in
shll
jge
add
int
enter
inc
push
arpl
jne
repnz
cmc
or
fsub
enter
aas
out
jns
cld
mov
aas
push
push
dec
fldl2t
adc
jo
add
dec
or
js
rclb
orb
mov
ljmp
aam
hlt
jne
mov
lret
pop
cmp
adc
lcall
xor
inc
int
or
xchg
pusha
jne
fs
popa
adc
xchg
scas
xchg
add
ja
inc
adc
jmp
lods
dec
sub
pop
shlb
and
or
cld
mov
test
test
xchg
and
lods
mov
push
push
stc
pop
stc
arpl
sbb
insb
enter
nop
popa
pop
int3
mov
test
sub
dec
cltd
and
repnz
jo
xchg
inc
imul
pop
fisubl
cld
mov
repnz
stc
movsb
mov
cmp
lock
shrl
js
sbb
pop
cmpsb
cmpsl
outsb
adc
mov
cmp
sub
cltd
adc
cmp
add
outsl
pop
nop
shl
into
test
fs
dec
mov
into
mov
bound
bound
cld
arpl
pop
push
jmp
ret
out
lock
mov
loope
int3
push
pop
inc
movsl
mov
bound
dec
push
dec
sub
and
outsl
sahf
popa
xchg
sbb
out
xor
outsb
std
daa
shrl
call
or
lea
loop
pop
and
test
jnp
lea
in
adc
shrl
cmpsb
cmc
sbb
jns
sahf
cmp
lock
je
xorl
pop
ss
mov
mov
leave
in
je
xor
mov
xlat
sub
icebp
shlb
sbb
or
popa
test
mov
add
push
sti
or
jecxz
hlt
pop
aas
nop
fcmovnbe
cmp
xor
daa
mov
add
push
jno
adc
inc
cmpsb
loope
xchg
fsubrs
and
or
adc
add
lcall
incb
bound
fwait
push
lret
adc
cmp
in
cs
sub
push
je
test
inc
sub
fsubs
jns
xchg
pop
mov
loope
push
fsubrs
add
in
sbb
mov
sbb
jl
ljmp
sub
xor
mov
sbbl
negl
xchg
mov
pop
sbb
jae
adc
inc
sbb
sbb
lahf
mov
mov
sbbb
mov
jl
pop
ljmp
add
xor
in
repnz
or
cmpb
mov
inc
decb
jecxz
test
pop
add
int
pushf
mov
cwtl
lds
lock
cmp
mov
adc
xchg
repz
fcomps
iret
leave
adc
adc
les
cmp
rcr
rcrb
out
mov
mov
jg
mov
outsb
leave
in
lock
insb
call
mov
xchg
sub
mov
mov
dec
es
cld
adc
int3
xchg
sbb
jmp
inc
add
mov
sbb
sub
adc
ja
push
std
test
ret
xchg
divl
mov
cli
sub
xor
dec
inc
out
inc
sub
adc
popa
imul
lcall
fwait
mov
es
lret
andnps
jecxz
jbe
xor
leave
sub
lods
fwait
rcrb
aam
adc
ja
mov
sahf
push
pop
cli
in
cwtl
ss
xor
sbb
xor
mov
mov
mov
jb
xlat
stc
cwtl
mov
jae
shll
pop
lods
in
mov
rorb
dec
enter
mov
mov
dec
dec
cmpsl
bound
mov
test
sub
dec
mov
hlt
stc
or
lock
mov
sarl
mov
pusha
mov
movsl
fld1
nop
js
add
inc
dec
mov
adc
outsl
sbb
jae
jbe
xchg
test
pushw
fwait
subl
dec
pop
sub
iret
add
sbb
jo
nop
cmp
out
fsubl
xchg
or
aas
out
mov
mov
bound
addr16
push
fldt
sbb
es
es
jl
icebp
bound
aaa
or
aas
stos
mov
mov
test
pop
jl
outsl
add
scas
scas
aas
pushf
xchg
aad
mov
jns
nop
imul
ficoms
leave
adc
push
mov
outsb
mov
int
mov
call
xchg
mov
mov
mov
xchg
lock
mov
outsb
mov
call
nop
xchg
test
xchg
jo
les
sub
or
cltd
pop
scas
push
int3
adc
mov
outsb
clc
in
hlt
outsb
int3
call
mov
notb
rcr
jns
ffree
repnz
sub
or
adcb
pop
out
xchg
jecxz
push
je
lret
jmp
inc
sub
xor
mov
loop
das
ret
mov
orl
push
in
and
xchg
aam
dec
enter
xor
mov
loop
inc
dec
pop
add
and
mov
mov
jmp
and
jnp
add
inc
jp
xor
mov
loop
or
test
nop
in
cs
xchg
in
sub
cltd
sbb
jne
adc
mov
call
jle
notb
xor
in
pusha
push
movsl
cltd
ljmp
adc
jne
adc
xor
call
xor
test
loopne
popa
push
in
push
imul
mov
or
adc
aas
repz
in
sbb
ret
pop
xor
sbb
cld
jns
mov
shrb
insl
xor
addl
xor
cmc
cmpsl
mov
inc
jge
lods
xchg
or
adc
cmp
mov
popf
mov
push
movsb
sbb
and
mov
sbb
mov
jo
cmpl
adc
fdivs
pop
std
adc
out
mov
sbb
vminss
pop
inc
loopne
push
imul
push
push
movsb
stos
adc
andb
outsb
icebp
mov
xor
fwait
sarl
mov
js
push
nop
daa
into
rcrb
push
jb
lret
subb
pop
and
mov
ret
mov
push
pushf
jge
outsb
ret
adc
out
repnz
mov
mov
pusha
leave
mov
sub
mov
inc
jp
and
cmovno
xchg
pusha
adc
xor
loop
adc
jno
hlt
and
xor
xor
insl
imul
fidivl
adc
leave
cmpsl
xor
xchg
xchg
les
dec
adc
cmp
adc
mov
cmpsl
sbb
in
cmp
sub
jg
inc
addb
ljmp
push
fisubs
enter
pop
adc
mov
push
out
movsb
les
jl
test
mov
clc
adc
push
addr16
stos
mov
adcb
out
xor
lods
mov
imul
lds
pop
insb
outsl
dec
mov
adc
outsl
xorl
dec
ds
xchg
mov
lret
idivl
fwait
nop
mov
mov
js
push
nop
mov
jmp
pop
les
adc
lahf
popa
push
and
cmp
pop
inc
pop
data16
or
divb
dec
lahf
mov
inc
pop
pusha
dec
xor
cmpsb
mov
roll
mov
stc
push
gs
scas
mov
sbb
in
jmp
mov
mov
loop
pushf
mov
test
out
out
push
xchg
popa
pop
pop
lods
dec
cltd
mov
jno
out
repnz
mov
cmp
push
int3
adcl
lgs
or
aas
or
jnp
imul
lods
pushf
iret
sbb
sbbl
hlt
pop
push
cmp
mov
and
fisubs
dec
mov
add
pop
cltd
adc
aam
data16
sbb
jecxz
xchg
add
mov
inc
mov
fcmovu
enter
aas
insb
addr16
aam
mov
fs
dec
enter
shl
mov
arpl
adc
xchg
test
mov
shr
into
mov
dec
mov
hlt
dec
add
dec
dec
add
mov
cmc
or
mov
xlat
mov
into
mov
test
and
aad
fwait
leave
cmp
loop
mov
stos
mov
out
cli
cmc
out
lods
xchg
xchg
xchg
cld
jle
adc
shll
lret
jl
lock
rolb
test
sbb
scas
pop
inc
sub
sbbb
cmp
cmpb
fmulp
push
adc
push
daa
cmp
jns
bound
xchg
test
pop
jns
out
call
lahf
lcall
rcrl
rorb
loope
mov
adc
rcrb
jnp
push
les
int3
adc
mov
mov
popf
insb
iret
or
push
cmp
ret
stc
je
and
or
xchg
jbe
dec
mov
adc
in
cmp
ds
push
cmp
mov
ret
fldcw
pop
fnstcw
and
arpl
mov
jne
cmp
in
movsb
stc
fbld
scas
pop
jmp
cmp
cltd
inc
stos
push
into
xchg
pop
mov
adcl
add
or
leave
loopne
jns
std
pop
mov
iret
add
sub
int
cmp
cs
subl
xor
iret
mov
aaa
mov
enter
leave
push
sub
out
stc
jmp
pusha
data16
mov
lahf
aas
popw
cltd
sahf
fadds
pop
daa
jo
mov
outsb
add
clc
aas
jl
xchg
bound
in
sub
xchg
jp
addr16
mov
in
out
shlb
adc
das
dec
jge
lods
add
sbb
pop
mov
aas
inc
iret
test
int3
jo
enter
int3
mov
add
adc
mov
and
jle
pop
ficoml
movsl
lods
and
jae
or
rol
lea
test
leave
dec
insl
inc
shl
and
jbe
sbb
push
cli
xchg
sbb
add
xchg
and
push
lcall
repnz
mov
inc
add
dec
pop
and
or
popf
push
stos
sahf
add
enter
loop
cmp
xchg
mov
pop
xor
and
insb
xchg
lret
push
cmp
movsb
mov
dec
pop
push
and
and
sub
notb
and
scas
xchg
inc
mov
lock
stos
cmp
cwtl
sbb
push
jne
mov
jl
add
sbb
cs
inc
in
les
subl
pop
mov
sbb
in
dec
jae
add
add
jge
inc
sub
test
jnp
callw
stc
ss
xor
fldz
jge
adcb
loopne
sbb
push
sbb
sub
mov
sbb
mov
mov
sbb
mov
gs
sub
mov
shlb
test
cld
inc
test
lods
out
add
popa
testl
push
dec
dec
cmp
mov
pop
addl
jg
sar
loopne
push
inc
jns
xchg
push
cli
and
loop
pop
mov
mov
addl
lea
lock
mov
out
cmc
in
push
cmp
fnstcw
orl
dec
call
mov
push
jo
in
adc
outsl
push
add
inc
mov
pop
mov
mov
pushf
and
inc
push
js
adc
xor
cmp
push
movsl
xor
xor
mov
pusha
lea
orl
cltd
lock
lds
pop
push
mov
rclb
shl
lea
mov
xchg
fsub
sub
fwait
scas
push
mov
repz
adc
dec
dec
adc
adc
rcrl
loopne
es
lds
shll
cmovp
in
test
gs
scas
mov
add
je
loopne
int3
mov
pop
repnz
and
inc
enter
lds
pop
movsl
sub
mov
cltd
mov
xor
pop
in
fbstp
push
pop
pop
adc
insl
cmp
mov
jl
or
cmpsb
push
add
into
push
adc
jne
cmp
pop
out
sbb
imul
aad
jge
inc
xchg
xor
pop
mov
pop
mov
call
mov
cmp
pusha
xor
mov
nop
push
ss
in
dec
movsb
xor
push
cmp
xchg
int3
out
lea
bound
jmp
pop
push
sub
in
ss
xor
and
testb
nop
jae
ljmp
sbb
push
xchg
mov
sbb
outsl
mov
rcrb
and
adc
stc
aas
xor
repnz
movsb
outsb
fs
sub
xorb
mov
jg
leave
pop
insl
mov
xor
mov
enter
mov
call
data16
pop
aaa
xchg
mov
in
daa
and
iret
adc
jns
cmp
mov
inc
push
push
nop
cmc
out
adc
setns
imul
je
shlb
xchg
pop
jl
outsb
subl
daa
insl
aaa
lcall
mov
nop
push
sbb
rcrl
fistpl
dec
mov
push
in
sbbb
pop
ja
cmc
orb
sbb
jg
push
jb
and
mov
add
adcl
ret
push
out
ret
sbb
push
lahf
rcr
cld
call
push
push
jge
test
cmp
jno
xchg
std
or
pop
add
cmp
mov
mov
or
jecxz
popa
adc
ds
inc
pop
daa
xor
dec
push
jl
xor
inc
icebp
jo
jne
sarb
push
or
mov
insb
test
adc
adc
js
push
int3
adc
into
call
inc
dec
cmp
fistpl
mov
or
inc
addr16
sbb
xchg
adc
push
js
ret
or
push
out
pop
push
or
arpl
and
nop
push
mov
add
and
jp
xchg
rclb
push
js
add
lcall
test
nop
pushf
dec
or
add
and
mov
ret
push
jp
pop
lret
in
dec
mov
cmp
lea
je
dec
fs
stos
sti
pop
dec
shrb
cli
sar
stc
adc
fstps
ljmp
xor
repnz
xchg
cmpsb
in
mov
sti
inc
push
fs
sbb
mov
enter
in
jnp,pn
cmp
push
mov
push
aas
add
loopne
popf
test
sarb
xor
mov
fs
sbb
mov
inc
cmp
or
movaps
xorb
or
pop
xor
push
flds
fs
hlt
xor
aam
je
dec
sbb
mov
pop
xor
push
test
jmp
mov
dec
cmc
movsb
push
sti
aas
push
ret
dec
xchg
add
jae
and
xor
fwait
jo
bound
adc
daa
sub
push
dec
adc
int3
sub
xchg
jne
push
sub
mov
push
cmp
add
xchg
cmp
rorl
mov
movsb
mov
dec
lahf
cmp
aam
pop
sub
cs
mov
xor
jnp
or
nop
mov
push
cmp
mul
into
fdivrs
lods
mov
dec
out
pop
or
push
inc
es
scas
sbb
dec
add
aam
std
jns
jno
mov
pop
sbb
lret
sub
inc
inc
ss
loopne
push
mov
and
pop
mov
gs
xchg
push
int3
and
add
mov
jmp
xor
inc
sub
adc
xchg
mov
and
mov
js
stos
test
sbb
pop
xor
push
push
push
iret
hlt
sbb
cmpsl
cwtl
cli
int3
stos
pop
inc
push
insb
sub
xchg
and
dec
sbb
or
push
test
idiv
jbe
adc
in
dec
sub
and
imul
add
stos
popf
jecxz
mov
cmp
stos
mov
lcall
push
iret
inc
dec
mov
int3
inc
mov
mov
and
push
cmc
pop
add
insl
jmp
repnz
cmp
mov
repz
jne
cmpsl
mov
xor
pop
lret
sbb
orb
out
test
scas
mov
imul
je
dec
cmc
add
dec
mov
movsb
lcall
push
push
imul
add
or
ss
negb
inc
repnz
sub
bound
inc
testl
stos
cs
jno
add
dec
push
inc
push
or
jns
or
and
jo
stos
movsl
dec
dec
sbb
hlt
and
or
nop
adc
xchg
loope
mov
je
mov
xor
fsub
jge
in
loopne
xlat
mov
or
mov
add
jbe
adc
xchg
ret
ret
cmpsb
lret
cwtl
add
and
jmp
mov
cmp
popf
cli
cwtl
les
repz
adc
js
in
arpl
sbb
xchg
daa
loope
push
xlat
and
or
sub
pop
sbb
aam
mov
clc
addr16
subb
or
stc
pop
xchg
pop
and
cmp
test
in
cmovb
dec
test
xchg
mov
sbb
imul
icebp
dec
ficoml
inc
loop
je
xor
mov
testb
mov
shll
push
sub
fbld
dec
arpl
shrl
test
push
pop
lret
cmp
inc
push
cmp
push
stos
and
sub
fists
push
sub
hlt
adc
adc
inc
xlat
mov
sbb
push
loopne
sub
pusha
dec
lods
sub
jmp
push
insb
push
mov
addl
pushf
ret
pushf
sbb
out
sbb
sub
mov
popa
subb
xor
pop
rclb
push
xchg
mov
jle
mov
and
and
push
cmp
je
xor
ja
cld
in
sete
mov
add
push
pushf
dec
mov
inc
adc
test
jle
aad
push
jo
pop
insl
pop
cs
cmp
sbb
sbb
lods
cmp
mov
les
in
jae
bound
gs
int
mull
xlat
mov
outsb
cmpl
lods
movsb
pop
cmc
pop
mov
jne
inc
mov
xchg
test
mov
xor
mov
mov
insl
mov
pop
pmuludq
je
jo
call
add
mov
xchg
inc
movsb
inc
and
inc
cmpsl
repnz
into
mov
inc
fwait
mov
int
js
and
push
test
call
or
cmp
pop
sub
js
dec
xor
mov
xchg
test
mov
rorl
sbb
aaa
loopne
in
cs
je
push
lcall
add
out
popf
push
test
xor
cmpsl
stc
ds
pop
cmovne
add
sub
push
sbb
xchg
xchg
push
les
mov
out
dec
or
add
nop
iret
xchg
jecxz
imul
test
out
xchg
push
pop
push
movsl
popa
imul
xor
and
test
add
push
add
fcmovnu
and
mov
lock
inc
sti
or
decb
sbb
cmp
jg
cmp
and
cld
cs
jp
fs
and
adc
pop
mov
add
cmpsl
xor
push
cmp
test
pmulhw
lock
addr16
xor
adc
xor
orl
call
iret
sbb
dec
cwtl
stos
pushf
sub
into
push
push
aam
insl
call
pop
cmc
lahf
jmp
inc
mov
push
inc
xor
fsub
shlb
or
int
sarb
inc
out
lock
cmp
ret
pop
inc
push
mov
ret
stc
pop
pop
repnz
cmpsb
stos
sbb
xchg
inc
sub
xor
mov
add
lahf
fs
push
xor
xorl
or
movsb
fistpl
movsl
hlt
aaa
push
pushf
cmpsb
pop
dec
enter
adc
push
movsb
imul
rclb
lea
cmpsb
outsb
mov
mov
push
out
pop
jns
xor
mov
repnz
or
xor
lahf
mov
mov
fsubrl
outsb
or
dec
sub
daa
cmpb
xchg
cmp
ret
and
mov
rcll
add
jmp
lcall
or
sti
sbb
xchg
pop
fcom
movsb
aad
imull
je
mov
test
push
xchg
xchg
lahf
xor
mov
pop
xchg
lret
mov
js
nop
push
jb
mov
xor
out
std
mov
and
dec
pop
gs
fs
pop
cmp
and
adc
sbb
mov
adc
test
popf
fs
movsl
outsl
push
jne
pop
fisubrs
xchg
add
popf
jo
xchg
add
lds
scas
outsl
loop
fimuls
inc
adc
jno
jb
ret
popa
adc
cwtl
cmp
dec
dec
and
cmpsb
std
mov
rorl
xor
sarl
test
insb
adc
mov
push
in
fdivl
hlt
sub
xorb
fmul
les
sahf
pusha
je
sbb
cltd
outsl
imul
iret
pop
or
push
shl
xchg
sahf
cld
sbb
lret
sbb
stc
mov
pop
iret
mov
add
mov
push
ret
sub
mov
push
nop
jae
lods
cmp
push
imul
imul
lock
test
les
or
xchg
push
push
loope
shlb
jg
and
adc
mov
push
inc
data16
mov
les
mov
jbe
mov
add
adc
inc
pop
jns
loop
mov
mov
mov
mov
orb
cmp
addb
insl
adc
xor
or
insb
jl
in
test
mov
loope
and
lcall
mov
loop
popa
cmc
gs
xor
jge
xlat
jle
xchg
js
push
je
push
jl
mov
cmp
mov
ss
xor
fildll
jb
daa
fdivrl
call
adc
cli
jg
fcmovu
int
push
mov
add
testb
inc
pop
push
dec
aas
pop
mov
arpl
dec
push
sbb
add
xchg
cli
mov
ljmp
aad
lret
cmpsl
cmp
add
js
jo
jmp
orl
cmc
lea
ret
push
add
jp
in
es
out
faddl
lret
iret
pusha
repz
nop
xor
sbbl
int
ret
pushf
js
sbb
test
or
sub
inc
ss
imul
hlt
test
nop
lea
clc
push
push
or
push
call
jb
sbb
jns
cwtl
fs
mov
lcall
pop
dec
in
hlt
test
int
adc
lcall
loopne
loope
pusha
adc
xor
in
cmp
mov
push
jmp
pop
dec
cs
inc
jecxz
adc
lret
mov
hlt
cmp
js
dec
test
or
out
sbb
scas
inc
mov
les
jle
mov
popa
insl
shlb
repz
jmp
shll
sbb
dec
popa
cmc
repz
jb
dec
mov
jnp
jg
and
cli
inc
sarb
inc
xchg
insb
std
hlt
jl
sti
inc
push
or
cmc
mov
cmpsb
cs
xor
add
xor
call
fnstenv
inc
fs
cmpsl
out
push
or
fwait
clc
imul
sub
or
jb
test
pop
jne
mov
or
sub
jne
punpcklwd
mov
popf
aaa
sahf
push
push
in
dec
aam
jae
adcl
pop
je
arpl
hlt
fwait
mov
dec
fiaddl
test
movsb
sbb
cmp
xor
mov
enter
mov
das
sub
pop
add
and
add
adc
and
setae
inc
stos
int
sbb
lret
jae
scas
add
jo
jg
xor
ds
loope
jbe
sub
call
jbe
adc
ja
adc
stos
aad
repnz
insb
fs
imul
daa
fs
xor
sub
out
pop
arpl
int
push
out
add
pushf
push
add
bnd
mov
pminub
invd
dec
adc
push
stos
nop
fwait
jp
outsb
xor
lods
in
mov
sub
pop
mov
icebp
xor
rol
hlt
jge
scas
int
stc
xchg
push
cmp
jmp
pop
push
push
dec
inc
pop
mov
sub
fs
pop
mov
sahf
mov
ret
dec
mov
repnz
mov
cmp
inc
cmp
cmpsl
jmp
mov
cwtl
sbb
inc
pop
adc
ret
sub
inc
or
outsl
in
ds
das
cltd
jbe
mov
mov
inc
scas
dec
je
push
loope
adc
loop
orb
or
fisubrs
fmuls
jae
stos
ret
sub
mov
test
add
outsb
fs
xchg
adc
pop
fdivrp
and
out
adc
mov
pop
fmul
call
mov
push
jecxz
ret
aad
lret
mov
inc
lahf
and
mov
xor
vunpcklps
adc
test
cmp
cmc
sbb
xchg
out
loopne
cld
or
jge
mov
push
jge
mov
inc
add
xchg
orl
popf
ljmp
mov
xchg
aam
push
sbb
lcall
mov
imul
fwait
lods
loope
add
int3
mov
sbb
add
cmp
sbb
or
inc
movl
jmp
push
sub
dec
fmuls
or
and
sub
pusha
xchg
mov
xchg
xchg
dec
and
pop
jno
repz
call
jo
sbb
mov
jg
ljmp
add
stc
lock
lods
adc
sbb
inc
inc
xor
adc
js
popa
push
mov
loopne
shll
test
imul
loope
jb
pop
add
out
fldt
sti
cmp
ds
adc
mov
sbb
cmp
int
cmp
ja
cmp
pushl
add
fstps
sub
leave
das
pop
add
rcll
dec
dec
mov
jp
jle
sub
in
pushl
pop
jg
jl
push
xor
mov
pop
jbe
out
sahf
sti
jg
mov
pop
jp
scas
data16
int
pop
mov
add
push
lock
filds
dec
dec
push
jb
sbbb
and
jle
sub
mov
scas
or
gs
mov
loop
sub
test
xchg
add
out
sbb
jge
inc
imul
cs
cwtl
mov
jge
jne
js
lods
jmp
mov
ljmp
mov
scas
adc
push
into
xchg
loopne
inc
mov
jmp
lahf
aaa
sbb
je
xor
sar
push
jmp
sub
scas
jo
jnp
jle
icebp
std
push
rol
push
sti
cmp
jmp
ja
test
jbe
jae
jo
add
mov
jg
aaa
dec
or
incl
lret
ss
push
gs
fwait
push
mov
daa
lock
push
fs
mov
mov
sarl
pop
test
outsl
dec
add
cmp
leave
ljmp
and
dec
popa
insb
sahf
xchg
add
xor
outsl
cli
jmp
sub
jp
test
push
mov
shll
mov
add
pop
mov
aam
les
hlt
dec
mov
mov
cltd
mov
scas
xor
pop
fadd
decb
addr16
pop
mov
xchg
pop
jne
cld
dec
or
push
js
and
push
mov
pop
cld
andb
loop
inc
aas
and
cs
ja
test
cmp
jg
sti
mov
push
cmp
push
add
popf
lea
sahf
aas
das
adc
cmc
cmp
or
mov
add
outsl
add
call
stc
fmul
imul
sbbb
lds
cld
ret
mov
jle
sub
je
or
lahf
push
add
pusha
add
add
mov
shr
add
fs
sub
bound
cmp
gs
push
adc
leave
add
xchg
adc
cmp
cmp
jne
mov
in
imul
int3
cmp
jp
sahf
cmpsb
out
pop
adc
clc
xchg
rol
fcmovb
jnp
xlat
inc
ror
inc
mov
mov
inc
jnp
add
mov
mov
fs
jns
pushf
or
out
stos
roll
push
inc
push
sub
add
push
sbb
push
sub
jae
mov
addr16
xchg
leave
inc
ja
ja
cmp
mov
mov
push
pop
jb
test
pop
out
mov
cltd
insl
xor
call
dec
mov
adc
repnz
or
andl
gs
mov
leave
push
les
sub
movl
aam
in
imul
push
cmpsb
or
adc
mov
scas
or
test
pop
xchg
pusha
mov
and
push
or
int
shll
int3
lds
fwait
push
xchg
inc
dec
fdivl
adc
cmc
cmpsb
adc
enter
movsb
add
clc
add
lahf
jmp
and
push
leave
mov
dec
cmpsb
ret
in
out
fimull
mov
sti
xchg
iret
loope
cli
pop
inc
inc
fwait
clc
mov
iret
jnp
enter
inc
aad
or
xor
loopne
sub
hlt
leave
lret
and
mov
outsl
or
in
xchg
scas
shrb
cmp
jo
std
imul
faddl
mov
loope
mov
xchg
sbb
or
adc
roll
push
add
and
mul
scas
mov
rolb
xchg
outsb
mov
push
lcall
or
push
cmp
cmp
ss
stos
adc
jns
cltd
mov
mov
inc
pop
icebp
mov
cmp
push
fcompl
out
mov
xchg
inc
and
pop
and
push
fsubrs
mov
movsl
test
das
out
out
mov
jle
clc
repz
pop
repz
xor
int3
test
pop
lea
xor
out
loopne
dec
and
ret
int
mov
clc
call
fucomip
add
pop
hlt
in
add
and
or
jmp
or
lea
cmp
xchg
inc
or
dec
pop
adc
jp
add
in
cmp
es
and
jnp
stos
sub
pop
imul
out
mov
dec
cltd
add
push
and
mov
xor
xor
pop
ss
inc
leave
mov
cli
adc
xor
and
jo
scas
lock
daa
loopne
popa
insl
pop
pushf
sti
dec
nop
sbb
bound
lea
jo
mov
int3
inc
and
push
cmpsl
mov
psraw
shll
inc
mov
mov
mov
imul
rolb
shrl
mov
loope
cmp
add
jno
popf
inc
test
and
dec
out
xchg
rcr
mov
lds
pop
rcrl
fwait
pushf
mov
sahf
rcrb
fwait
aas
fidivs
mov
fcmovu
imul
mov
dec
or
into
call
xor
enter
and
add
pop
push
imul
cmp
sub
add
enter
arpl
or
cmp
pop
rorb
sbb
lahf
ret
dec
dec
or
add
addr16
jne
adc
adc
into
and
pop
push
add
sarl
ret
lahf
inc
add
mov
repz
jno
xchg
insb
xchg
fwait
and
call
pop
push
in
fistpl
inc
lahf
lret
shll
jle
lahf
sub
call
imulb
xor
mov
or
fwait
adc
sarl
popa
xchg
inc
cmp
jo
pop
add
jae
and
push
in
lods
ja
sub
sbb
xchg
das
sahf
pushf
faddp
push
sbb
xchg
flds
mov
ds
lea
mov
add
and
repnz
clc
or
mov
fneni(8087
xor
xor
sahf
add
int3
cs
int3
cmp
pop
push
aad
add
fucomip
sbb
stc
sahf
jmp
dec
push
xor
out
inc
lret
push
add
dec
and
mov
imul
movsl
cli
scas
add
mov
ljmp
dec
lock
mov
mov
jle
mov
out
jecxz
in
mov
cmp
and
xchg
call
ret
sarb
lcall
or
adc
shrl
pop
mov
push
enter
lock
and
scas
add
inc
dec
add
gs
xchg
mov
sbb
lds
pop
lea
in
adc
stos
test
mov
mov
xor
and
push
hlt
push
jle
jl
stos
gs
adc
pop
push
lcall
mov
scas
call
mov
jb
jecxz
movsb
push
add
in
jno
mov
or
add
ret
pop
xlat
lret
mov
out
add
jb
xorl
bound
nop
pop
pusha
mov
cld
push
mov
inc
mov
jno
inc
pushf
push
mov
push
or
dec
xor
arpl
insl
pop
pop
shlb
repz
popl
aad
sti
sub
stos
adc
pop
mov
out
push
cmp
notb
scas
inc
scas
mov
in
push
xor
stos
imul
fistpl
in
outsl
movq
inc
jo
jae
xor
lock
testb
mov
js
mov
inc
stc
adc
mov
stos
fadds
inc
mov
push
xchg
shlb
outsb
add
push
push
or
add
jae
adc
das
sbb
mov
fimull
xchg
ret
and
ficoml
sub
pop
in
pushf
xchg
dec
jns
stc
popa
test
jmp
or
fisttpl
push
push
das
adc
add
lcall
and
xchg
mov
rcrb
pop
fldl
loop
inc
dec
xchg
and
loope
and
cmpsb
adc
mov
dec
mov
sbb
shrb
jne
and
scas
hlt
inc
mov
mov
pop
adc
jb
pop
dec
add
xor
cs
jno
faddl
xor
pop
inc
inc
mov
lds
or
pop
movsl
inc
jae
push
jb
fimull
mov
add
daa
aad
mov
imul
adc
in
add
xlat
test
sarl
xchg
mov
cmovae
inc
sbb
pusha
repz
inc
div
adc
sbb
test
sti
test
cltd
repnz
loop
dec
fcoms
add
xchg
cmpsb
cmp
push
or
mull
mov
dec
push
xlat
or
outsl
in
sbbb
xor
fs
les
mov
orb
adc
lcall
lcall
test
sbb
xor
push
xorl
cmp
sbb
cmp
or
cli
push
lods
ret
rclb
xor
fists
inc
test
fsubl
icebp
push
in
or
hlt
xchg
imul
and
mov
loopne
xchg
pushf
lods
add
xchg
call
xor
fmull
cli
pop
sbb
cli
jb
data16
xlat
imul
mov
loopne
and
lcall
add
outsl
es
mov
cmp
inc
outsb
add
vpcmpgtw
pop
in
sbb
mov
and
mov
sbb
mov
add
sub
das
xor
mov
inc
icebp
adc
les
pop
ljmp
sub
jbe
aaa
cwtl
int
inc
stos
pop
lea
rorl
push
testb
pop
std
out
es
mov
xor
mov
sub
xchg
lahf
aaa
sbb
out
fdivs
mov
xor
in
cmpsl
fwait
push
sbb
pop
iret
fcomps
fistps
call
lret
push
mov
inc
lcall
xchg
add
cmp
fmul
push
test
inc
mov
mov
mov
hlt
sti
cs
cwtl
xchg
mov
lea
mov
push
fmuls
popf
fistps
xor
xlat
stos
xchg
dec
inc
push
push
lcall
sbb
cmp
inc
mov
xor
add
int3
out
les
jmp
inc
dec
sbb
jae
or
loopne
xor
cmp
mov
std
xchg
gs
stos
jp
mov
je
iret
aaa
lods
jno
and
add
nop
dec
rcrl
nop
imul
inc
dec
test
pop
movsl
ret
and
movsl
jo
jb
sahf
sbbb
scas
in
subb
adcb
lods
pop
or
dec
pop
fiadds
test
xchg
add
jno
mov
inc
aam
inc
stos
cmp
jp
faddl
lods
jnp
lcall
imul
or
xchg
repz
add
shlb
cmp
push
or
imul
mov
adc
mov
sbb
mov
or
cld
xchg
negb
fistpll
lret
push
jo
add
aas
loopne
or
jo
stos
cld
daa
enter
outsb
sbb
divb
jo
sbb
add
mov
mov
cli
xchg
call
mov
sbb
cmp
pop
rorb
movsl
cmpsl
loope
fldcw
adc
pusha
scas
lock
or
in
push
testb
inc
jmp
inc
and
or
loop
sbb
adc
int3
mov
add
cmp
addl
insl
loopw
jl
lcall
ret
ds
call
mov
gs
and
call
mov
sbb
push
movl
mov
aas
data16
add
jle
pop
mov
hlt
out
loope
call
mov
arpl
out
mull
loope
add
aad
inc
push
jbe
shrb
inc
fidivl
or
test
and
and
loopne
out
call
jbe
and
mov
rorb
shll
add
mov
xor
xor
jl
mov
repnz
sbb
rclb
int3
fwait
and
xchg
imul
xchg
ret
or
mov
lods
mov
fmul
jge
jbe
mov
mov
aad
lret
jge
add
call
pop
nop
or
int
cmp
pop
inc
mov
dec
mov
cltd
pop
lcall
jbe
jae
pushw
or
les
push
stc
scas
ds
cli
fsubs
dec
pop
int
inc
call
out
adc
mov
or
lock
fldt
sahf
aad
mov
cmp
out
ret
xchg
fnstcw
clc
ret
adc
mov
jae
movb
in
sti
es
or
sbb
sbb
rol
es
pop
mov
fdivl
test
sub
lds
xchg
mov
std
jno
inc
lahf
adc
cwtl
les
roll
mov
fsub
add
stos
adc
test
xor
sbb
imul
enter
out
arpl
push
jg
mov
add
movsb
pop
or
mov
fmull
jno
push
inc
add
sbb
shr
sbb
mov
mov
sbb
into
jne
dec
lret
call
ret
cmp
test
icebp
xchg
aam
test
lret
or
sub
push
pop
mov
jb
aad
mov
mov
jns
mov
fsubs
cwtl
ficompl
pop
jecxz
jmp
push
pop
push
fwait
mov
mov
shll
clc
fildll
sbb
xor
push
clc
mov
jle
adc
inc
out
rol
je
mov
sarb
and
fld
xor
shr
adc
cltd
adc
or
mov
xlat
outsl
push
jns
jb
push
imul
add
mov
sub
adc
sbb
les
stos
arpl
addb
mov
nop
pop
add
int
das
subb
or
xchg
adc
pop
insl
popf
pusha
scas
mov
push
loopne
mov
js
xchg
dec
test
push
scas
daa
inc
xlat
jp
js
mov
push
inc
sub
adc
cmp
outsl
in
and
stos
test
shr
sbb
inc
ja
mov
and
cltd
xchg
lea
add
adc
dec
inc
gs
js
adc
outsb
dec
jne
xor
or
andl
clc
push
mov
outsb
fs
add
lds
lock
sbb
cmpsb
add
mov
inc
inc
mov
sbbl
inc
ja
pop
loopne
mov
fdivl
xchg
adc
jge
in
add
je
pop
dec
add
fs
cmp
call
call
adc
vandnpd
mov
iret
adc
mov
fdivl
scas
and
jg
pop
pop
mov
xor
dec
xor
lcall
ljmp
pop
pushf
stos
pop
xor
in
fs
push
lcall
cwtl
mov
jb
and
sbb
xchg
in
xchg
gs
mov
dec
mov
inc
fucomip
stos
xlat
aaa
pop
adc
mov
inc
sub
push
scas
hlt
xor
push
inc
in
push
mov
shll
add
mov
cmp
addl
xchg
jbe
imull
add
rolb
addb
jge
test
sub
mov
clc
in
add
cmp
xor
pop
gs
pop
sahf
mov
int
insl
xchg
cmp
sbb
jge
lahf
cltd
in
pop
adc
ja
lcall
cmp
mov
xor
test
or
test
shlb
jne
lods
mov
test
lar
add
hlt
xchg
dec
mov
sahf
out
cld
jecxz
add
fcompl
cmc
leave
out
pop
jg
pusha
adc
faddl
ror
add
cmp
lea
popf
bound
sbb
lcall
dec
ret
rcll
stos
sub
stos
xor
andps
fwait
mov
cwtl
mov
loopne
sub
dec
push
or
sarb
add
lret
mov
jp
loopne
nop
rorb
xor
cli
push
leavew
add
xchg
fcompl
add
xchg
les
inc
inc
mov
fimuls
mov
stc
cmpsl
rcl
sahf
adc
fsubr
xchg
xor
mov
roll
aad
and
clc
add
mov
xor
orl
mov
cmp
pusha
ss
push
cltd
pop
cmp
xor
inc
lret
decl
gs
sbb
divl
incb
sbb
jae
xor
js
adc
out
outsl
shrb
pushf
outsl
mov
shl
pushf
js
mov
sub
mov
mov
enter
fwait
jns
add
dec
or
cwtl
ds
adc
xchg
jnp
cmp
outsl
push
pop
jp
clc
jo
notb
test
rorl
and
inc
arpl
mull
repnz
or
mov
add
loope
sbbl
lret
or
imul
shl
xchg
sbb
sbb
dec
shlb
mov
push
repnz
mov
xchg
sbb
push
call
rol
pushf
in
mov
xor
dec
sub
icebp
sarl
xor
cmp
mov
lcall
inc
sub
hlt
lahf
or
repz
or
gs
sbb
pop
add
or
cmpsl
daa
fisubrl
lret
and
cwtl
inc
and
fxch
add
jmp
pop
jge
repz
xor
or
xchg
jmp
cld
push
call
cs
into
jno
into
cwtl
addl
cmp
pop
popf
and
xchg
fsubrs
or
out
adc
lock
jns
sbb
mov
std
mov
mov
mov
iret
xor
add
xor
cwtd
pushf
mov
ljmp
inc
out
imul
pop
sbb
fnstsw
pop
nop
fimuls
lea
leave
loop
xor
add
push
mov
sub
cmp
add
add
sbb
cmp
filds
push
into
lds
sbb
ljmp
pop
cld
mov
popa
ret
cmp
mov
cwtl
mov
scas
jle
add
sub
xchg
mov
pop
dec
mov
andb
cmp
mov
pop
cmpsb
mov
dec
push
ficoms
jno
or
test
sbbb
iret
inc
add
mov
jmp
mov
pusha
neg
inc
inc
shrl
mov
test
and
repnz
ss
add
push
jnp
fsubl
hlt
out
mov
inc
test
cmp
mov
push
insb
xor
push
shlb
mov
mov
insb
ljmp
loop
push
mov
or
mov
idivb
outsb
inc
cmp
jmp
and
imul
incl
cld
mov
insl
mov
aas
aad
xor
sub
cli
push
or
out
and
test
xchg
fucomi
xlat
imul
cmp
add
jge
stos
repnz
sub
pop
push
cmp
leave
movsl
sbb
mov
int
mov
sahf
inc
aas
lcall
cmp
mov
stos
xchg
aad
cmpsl
filds
mov
sbb
jg
add
sti
add
out
inc
scas
dec
or
or
mov
dec
cli
add
fwait
and
pop
cmpsb
xor
and
push
mov
lret
add
rcr
inc
or
ret
call
xor
pop
cwtl
loope
mov
cld
stc
jmp
inc
imul
leave
add
cld
push
fnstsw
cmp
mov
add
sub
push
dec
fs
ret
ljmp
out
pop
add
mov
shr
ret
sub
sub
ljmp
fiadds
inc
xorb
sti
jg
ja
pop
ja
fiaddl
fildll
sbb
xchg
adc
and
aas
out
fsubl
addl
sahf
shrl
or
cmp
pop
adc
or
je
imul
sti
ss
repz
iret
jns
inc
cmpsb
rolb
push
xchg
cmp
dec
mov
jo
jmp
icebp
mov
mov
cltd
in
mov
std
ljmp
ds
pop
loopne
imul
lds
add
push
subb
rorb
mov
sub
add
and
test
inc
sub
mov
jl
in
xbegin
in
lret
xor
pop
mov
mov
cld
dec
pop
cld
jno
std
jbe
mov
inc
mov
lret
repnz
add
sbb
aas
mov
dec
nop
and
das
cmpsl
addb
fisttps
jne
je
lea
test
addr16
add
imul
movsb
mov
sbbl
jecxz
in
add
inc
js
mov
or
mov
sub
shrb
or
mov
xor
dec
stos
xlat
andl
aaa
dec
xor
insl
xchg
daa
or
push
add
lcall
test
popa
jl
fildl
adc
sbb
sbb
cmp
adc
add
out
movsl
mov
and
mov
add
pushf
and
fnstenv
xchg
mov
movsb
fs
fwait
add
adcb
pop
xchg
dec
adc
outsl
and
sub
dec
lods
add
sahf
sub
push
cld
push
pop
add
add
loopne
jns
cltd
prefetch
or
dec
loopne
sbb
or
jae
add
outsb
xchg
sbb
add
ret
cmp
xor
mov
sbb
mov
ss
adc
cmp
inc
inc
sbb
cmp
xchg
loope
cli
stc
sbb
pop
xchg
xchg
sbb
fsubrs
or
or
push
fldl
xor
or
and
mov
shlb
or
mov
enter
inc
add
mov
ja
or
cld
cmp
cld
mov
jmp
mov
out
ficompl
mov
adc
in
outsb
fldl
sub
dec
pop
ss
and
mov
fistpl
jmp
xchg
or
push
gs
cmp
movsl
roll
sbb
pop
mov
or
pusha
dec
out
mov
mov
cmpsb
add
xor
pop
rolb
je
les
jge
cmp
cltd
jmp
outsb
sbb
xchg
js
pop
sub
xor
ljmp
xchg
dec
push
dec
add
pusha
repz
out
insl
cli
pop
pushf
mov
or
pop
aad
ficoms
mov
mov
stc
pop
inc
mov
cltd
pop
pop
pop
scas
jb
sbb
iret
mov
or
sar
out
pop
out
adc
mov
xchg
dec
add
loope
lds
pop
loopne
outsl
outsb
lea
pusha
nop
push
test
xchg
adc
push
fsubl
les
hlt
mov
add
jno
dec
clc
repnz
cmp
shrb
enter
mov
popa
cmpsb
push
dec
daa
and
cmp
xchg
cs
sarb
cmc
ja
lock
xchg
jl
insb
in
sub
push
push
push
push
iret
add
lret
lds
push
das
or
mov
movsl
shl
dec
aaa
call
imul
lea
sbb
lock
pusha
mov
icebp
jno
mov
cmp
mov
cld
stc
mov
push
pop
dec
fidivs
bound
mov
inc
test
ljmp
repz
repz
dec
lret
sub
rcll
gs
jb
cmp
pop
xchg
movsb
mov
dec
pop
push
mov
cmpsl
jns
test
aaa
or
cld
cmc
push
push
xchg
xorb
xchg
rolb
cmc
addb
jo
dec
les
loopne
aad
and
xchg
sbb
jne
lret
js
andb
lock
daa
sub
xor
cli
ret
mov
pop
or
jns
scas
xchg
enter
dec
inc
add
xchg
add
pop
inc
jg
add
pop
mov
and
ja
mov
sbb
xchg
or
jg,pt
movsb
scas
mov
lret
loop
pop
aaa
faddp
xchg
xchg
xor
or
pop
dec
and
data16
lahf
imulb
sub
ja
pop
into
push
xchg
mov
sbbb
loopne
dec
mov
shll
stc
inc
dec
xchg
mov
add
adc
jae
mov
add
cmpsl
push
stc
test
mov
xchg
adc
sbb
sbb
in
into
xor
in
mov
push
lret
push
fwait
pusha
pop
and
mov
out
loope
add
enter
outsb
or
xor
cwtl
xchg
call
hlt
aad
repz
cmp
cmp
repz
pop
outsb
jge
gs
std
outsb
xlat
ret
dec
or
loopne
cwtl
xor
mov
mov
add
add
aaa
mov
cli
mov
pop
adc
mov
gs
xor
inc
cmc
jnp
insl
inc
scas
pusha
loopne
sbb
dec
sti
mov
lods
add
jmp
fimull
mov
push
or
bound
jp
movsb
adc
mov
jo
fildll
and
shlb
mov
in
or
aas
das
mov
mov
negb
and
loopne
add
and
out
push
addb
pop
push
mov
mov
je
jmp
lahf
hlt
popf
push
cmpsl
cmp
fisubs
dec
pop
sub
and
aas
movsb
out
cwtl
bound
pop
fs
adc
imull
inc
add
and
fsub
ds
call
push
dec
pop
shr
addr16
out
adcb
xchg
push
sbb
scas
mov
jl
add
jo
push
out
jb
push
push
xchg
out
je
movsb
mov
push
push
dec
add
in
mov
aad
lds
ja
cmp
dec
push
fstpt
pop
mov
leave
popl
int3
sahf
sub
movsl
popf
jns
cmc
mov
sarl
sub
dec
push
xlat
cmp
sbb
pop
dec
std
fisubrl
dec
mov
call
je
bound
mov
sbb
xchg
out
push
ljmp
test
inc
addr16
scas
repnz
call
popa
or
push
in
pop
inc
ucomiss
inc
pusha
jbe
dec
sub
les
cmp
imul
lret
mov
daa
mov
gs
mov
pop
test
sbb
jns
cmpl
jp
dec
cltd
popa
loop
add
sbb
add
push
sub
dec
call
loopne
fisttps
addr16
inc
jle
mov
inc
rolb
push
insl
lea
pop
jg
pop
sar
test
xor
lret
cmp
lods
js
sub
push
insb
test
xor
jo
or
adc
sub
cmpsb
jbe
out
xchg
mov
and
sbbb
jo
pop
xor
ret
ficoms
shlb
sbb
xchg
roll
rorb
adc
add
pusha
add
inc
add
pop
testb
mov
sub
add
cli
cld
push
or
add
test
and
add
add
mov
dec
call
sub
jecxz
inc
push
adc
cmpb
jnp
add
pop
lods
add
divl
rorb
pop
sahf
push
fmuls
imul
mov
or
cli
out
mov
pop
ja
adc
addl
scas
inc
push
clc
cmp
jo
nopl
push
add
sbbl
lcall
jecxz
fcomi
xchg
adc
aad
push
mov
add
cmp
cmp
sub
sbb
xchg
push
fsubrl
push
jnp
das
mov
jns
sbb
shr
cmovns
xor
jnp
push
fildll
clc
lcall
add
jno
dec
cmp
and
test
pusha
inc
sti
push
jne
adc
ds
xchg
hlt
inc
movsl
pop
ss
inc
lods
push
gs
clc
inc
cmp
cmpb
arpl
out
cmp
aas
xchg
es
xor
int
xlat
dec
rcrb
shlb
fcomi
cmpsb
add
pop
imul
and
cmp
push
push
push
mov
inc
sub
jp
cmp
aaa
ljmp
fnstcw
outsb
or
sbb
popf
mov
pop
jnp
mov
push
inc
mov
add
loop
call
pusha
shlb
push
dec
pop
movsl
imul
pop
jmp
and
add
dec
pusha
shll
loope
add
mov
xchg
pop
cmp
xorb
ficoml
pop
call
lods
ljmp
push
sarl
aas
rcrb
cmc
xchg
cmpsl
add
and
stos
mov
incb
or
push
scas
insl
push
xor
outsb
xchg
in
xor
lahf
sti
nop
lcall
in
pusha
xorb
and
push
or
dec
cmp
push
mov
cmc
hlt
inc
sbb
pop
sub
mov
in
movsl
stc
das
dec
out
mov
mov
pop
test
inc
and
jb
push
push
lods
das
flds
shr
push
push
test
or
inc
mov
call
add
int
sub
lods
push
sub
cmp
cmp
ja
cmovnp
outsl
mov
jmp
loopne
insb
cmp
push
mov
dec
xchg
cmp
push
lret
jmp
or
rol
aam
ja,pn
ret
mov
pushf
mov
insb
call
sub
pusha
imul
sub
out
iret
jg
or
in
outsb
pop
or
mov
mov
mov
lcall
inc
pop
sub
adcl
movsb
jne
mov
sbb
pop
pop
mov
movl
and
mov
dec
loope
lahf
xor
stos
xorl
in
outsb
mov
or
and
sahf
jnp
fisttpll
and
sbb
fmul
movsb
cmp
call
rorl
test
jns
test
pop
outsb
inc
jg
dec
adc
pop
dec
pop
inc
jne
jp
in
jle
hlt
fsubrl
mov
aas
push
and
fbstp
mov
addl
inc
ss
out
jo
ljmp
xor
adc
inc
cmp
sbb
push
jo
mov
jmp
cmpsl
lods
and
out
gs
iret
jp
add
and
cld
mov
cmc
and
mov
sti
mov
imulb
adc
mov
jle
in
push
scas
fdivrp
movsl
lret
mov
test
test
add
nop
xrelease
jp
nop
pop
xor
repnz
or
lea
inc
xlat
mov
ret
pop
add
outsl
mov
out
sbb
movsb
jmp
jne
int3
jae
inc
or
in
dec
sub
cwtl
loop
loop
jge
inc
dec
mov
push
gs
jmp
mov
adc
inc
cmp
jmp
mov
cltd
cmp
push
into
mov
or
sbb
out
aad
das
ret
popf
shlb
hlt
inc
cwtl
cli
mov
repnz
and
movsb
mov
daa
or
in
cmp
add
mov
inc
sub
stos
inc
repnz
or
push
add
iret
adc
incb
ret
add
mov
xor
call
mov
xchg
mov
test
mov
dec
mov
fnstenv
and
in
mov
pop
mov
imul
or
outsl
inc
pop
mov
pop
aas
xor
pop
in
adc
stos
pusha
iret
jecxz
ljmp
fiadds
jle
mov
loop
sub
shrb
push
cmp
jg
add
sub
or
push
or
cmp
adc
out
mov
call
aas
pop
push
loopne
lret
pop
jmp
push
das
cmpl
fsubrs
inc
in
sub
sbb
hlt
inc
xchg
into
andb
xor
adc
pop
push
and
in
push
cwtl
pop
mov
cmc
int
inc
cmp
mov
push
adc
or
not
and
xorl
jmp
cs
xor
sub
xor
xor
jb
js
or
inc
adc
sarb
add
xchg
int3
inc
fnstsw
inc
daa
add
sbb
sbb
mov
lret
add
lock
enter
mov
mov
call
fstpt
inc
pop
and
inc
mov
in
out
jg
sub
or
out
mov
xor
rol
mov
enter
mov
les
push
dec
ljmp
sub
or
loopne
mov
and
cmc
js
pop
in
mov
in
cmovo
sar
jg
mov
movsl
sub
and
push
pop
lcall
pop
mov
hlt
xchg
imul
ret
pusha
sbb
cmpsl
in
clc
clc
push
je
mov
ja
dec
pop
adc
pslld
and
sti
sti
xor
inc
dec
add
cli
cmp
fimull
or
push
jno
aas
sbb
push
xor
pop
dec
rorl
pop
pop
daa
sbb
pop
std
std
fcmove
adc
in
movsl
lock
int3
inc
sbb
mov
loopne
dec
mov
icebp
aaa
call
inc
pop
lahf
fists
jecxz
push
icebp
xchg
push
gs
sbb
xor
cmp
movhps
lock
and
mov
dec
mov
arpl
lock
dec
das
rorb
aad
push
or
dec
or
add
jl
subb
add
shll
mov
cltd
rol
jmp
rorl
fidivrs
add
jp
test
add
xchg
inc
or
or
lods
xor
sub
mov
subb
pop
cltd
pop
sub
mov
dec
ss
jp
add
xor
sub
lock
repz
testb
iret
mov
add
nop
lret
shll
test
push
add
cwtl
aad
test
sbb
enter
add
mov
sub
adc
or
popl
jg
data16
adc
stc
sub
adc
add
test
orb
jp
pop
sub
jo
idivb
test
mov
add
jl
cmp
dec
ss
xor
das
sbb
jl
es
ror
jle
adc
fs
popa
push
outsl
sub
lahf
inc
in
test
mov
push
and
mov
and
mov
jb
xchg
dec
push
push
pop
lea
pop
jmp
push
push
hlt
les
adc
mov
or
fildll
fcmovnu
call
cmpl
push
cmp
subl
cld
sahf
jo
add
out
pop
inc
sbb
push
in
or
std
or
push
imul
mov
adc
xchg
addb
repz
push
pop
xlat
addr16
in
icebp
xchg
xor
push
xorb
add
repz
mov
daa
lahf
and
ds
sub
fsubs
jns
mov
xchg
add
push
inc
insl
or
pop
mov
cmp
repnz
movb
jecxz
sbb
movsl
adc
dec
xchg
jmp
inc
daa
data16
dec
mov
xlat
jno
mov
sbb
sahf
or
push
cmpsb
pop
sbb
je
int3
jo
pop
mov
push
fsts
sub
pop
dec
outsl
rcll
push
jmp
push
or
es
jne
mov
aam
push
xchg
stos
cmp
test
xchg
js
in
dec
xchg
add
fistps
add
push
fdivs
test
lret
fstps
add
mov
xor
outsb
adc
lods
cwtl
dec
stos
mov
into
loop
sar
ret
dec
fwait
sub
leave
jle
sbb
loop
cld
jmp
jg
loopne
adc
jmp
or
ljmp
gs
bound
mov
es
or
xchg
and
hlt
or
in
xchg
cli
lds
pop
xchg
add
jno
inc
fidivrs
out
inc
sahf
addr16
cmc
ds
idivl
inc
ffree
inc
arpl
mov
jge
test
jp
scas
jge
add
cmp
lahf
loop
ret
cmpl
scas
dec
add
out
aaa
dec
pop
sbb
pop
out
out
pop
push
and
aas
mov
hlt
out
stc
sarl
mov
rol
pushf
imul
mov
push
sub
rorl
js
aaa
aam
cmpsl
adc
lock
dec
mov
adc
cmp
mov
pop
push
add
movsl
push
mov
rcrb
addr16
arpl
jmp
add
movb
mov
or
insb
sub
shrb
inc
movb
dec
rcrl
push
pop
pop
icebp
mov
lret
je
add
xor
addr16
std
lcall
adc
enter
adc
lock
imul
les
jo
add
adc
aas
add
shrl
add
mov
in
cmp
ret
mov
cmpsl
insl
ljmp
mov
xor
or
xchg
jno
scas
adc
push
xchg
test
inc
sbb
icebp
hlt
aam
shrl
arpl
addr16
loopne
inc
and
or
mov
pop
and
pop
add
jns
bound
pop
cwtl
sbb
cmp
mov
pusha
stc
push
mov
insl
push
cltd
pop
add
in
xchg
sar
push
dec
mov
cwtl
jne
mov
repz
lcall
out
addr16
into
and
sahf
popf
xchg
mov
ss
fsubl
cmp
imul
std
pop
jb
repz
outsl
push
js
mov
xchg
js
add
out
mov
repnz
mov
cwtl
aas
or
test
jp
add
sbb
inc
repnz
icebp
sbbb
and
aaa
xchg
inc
jg
mov
repz
push
andb
fmull
xor
lret
outsl
inc
cltd
xchg
test
cmpsb
xor
sub
inc
in
out
cmpsl
fcmovne
cld
mov
aad
pop
mov
push
gs
je
dec
inc
fwait
arpl
movsb
mov
add
iret
mov
lret
inc
icebp
repz
push
inc
adc
cmp
adc
inc
mov
sahf
xor
in
add
into
or
mov
pop
movb
das
in
xorb
push
sbb
push
push
push
outsl
mov
add
or
aas
cli
and
shrl
dec
stos
cld
push
xchg
add
jecxz
cmp
aaa
js
push
jo
xor
dec
add
jl
mov
dec
loopne
mov
mov
mov
das
clc
mov
out
inc
mov
mov
and
inc
mov
ljmp
inc
call
inc
dec
xor
mov
xchg
imul
add
sahf
push
mov
in
cmp
lea
adc
pop
sbb
inc
pop
lahf
cs
cmp
loop
add
and
mov
out
scas
and
int3
cmpl
push
leave
sbb
dec
mov
popl
or
push
push
cltd
add
fisubs
sbb
cmc
pop
inc
pop
add
push
jle
lret
mov
aad
fmuls
mov
jmp
orl
sbb
push
or
mov
pusha
je
push
adc
movsb
adc
cwtl
loopne
dec
push
adc
stos
add
mov
add
ljmp
repz
dec
add
lea
mov
shll
dec
jo
cwtl
cs
test
leave
loop
fsubr
into
and
rcrb
movsl
outsb
ds
stc
or
data16
cli
imul
push
test
out
sbb
ds
sti
sbb
mov
jne
and
lods
outsb
int3
and
add
mov
sbb
fcompl
jo
mov
ret
sbb
popa
imulb
movsl
cmpsb
inc
xor
add
add
mov
mov
icebp
inc
int
mov
mov
mov
dec
ds
rcrb
dec
add
mov
sub
or
push
add
sbbb
lret
mov
jmp
cmpsl
jne
mov
stc
dec
inc
mov
xor
outsb
popa
insb
xchg
mov
jmp
cmp
mov
ficompl
xchg
ficoms
imul
add
fcompl
dec
and
not
xor
cmp
or
mov
and
sar
mov
fwait
sub
in
add
into
push
mov
pushf
pop
push
inc
cmp
mov
scas
and
sbb
in
clc
or
jp
xchg
in
dec
rcll
out
mov
inc
fninit
gs
pusha
or
xor
inc
add
outsb
and
aas
xchg
outsb
jp
aas
add
es
outsb
sbbl
pushf
jnp
mov
call
xor
adc
fldcw
fcom
ljmp
push
or
ja
lea
adc
inc
scas
mov
add
movsb
sbb
xchg
xchg
pop
cmpsl
fcmovnb
xor
add
subb
mov
push
xchg
xor
push
int3
mov
cmp
xor
js
dec
bound
mov
dec
stc
imul
test
lret
add
leave
mov
dec
adc
idiv
mov
mov
or
cmp
xchg
fidivl
sti
or
or
mov
xor
mov
lods
cmp
sub
cmp
test
aas
push
xchg
into
lock
loopne
or
nop
mov
cmp
lea
xor
sbb
adc
and
lret
pop
aad
sbb
and
xchg
aad
mov
dec
xorl
dec
scas
das
je
std
pop
or
mov
sub
rorb
or
leave
popa
mov
mov
lods
dec
aad
xchg
lret
xchg
sub
or
je
in
test
test
cmpsb
fidivrl
lods
call
js
push
sbb
daa
les
cmc
stos
jns
pop
inc
shll
mov
mov
mov
xor
mov
data16
adcl
add
je
or
mov
jo
mov
pushf
faddl
lret
clc
xor
sbb
fisttpll
push
push
sbb
pusha
scas
add
rcrb
or
andl
mov
stos
add
outsb
jae
popa
pop
outsl
and
stos
and
cmp
out
pop
loopne
es
test
push
stc
xchg
lahf
clc
movsl
push
sub
pop
in
jbe
in
mov
pop
add
shll
pop
xlat
repnz
cwtl
sets
lods
in
add
or
jns
push
xor
jg
mov
cmp
push
pop
ljmp
js
cli
int3
js
mov
insb
call
cmp
pop
lods
inc
pop
push
jno
inc
mov
adc
fsub
pop
push
mov
not
push
sahf
cmp
add
inc
mov
enter
and
test
jnp
gs
sbb
pop
sub
outsl
stos
pop
insb
out
and
negb
cs
in
das
and
pop
std
outsb
jns
ret
jge
jg
cmp
repz
pop
lcall
or
inc
loopne
pop
lahf
mov
add
out
xchg
sti
outsl
push
cmp
fsubl
sbb
sbb
jns
bnd
push
xchg
enter
mov
addr16
aam
test
es
sbb
mov
xchg
push
xor
mov
lahf
jmp
iret
pop
xor
push
hlt
cwtl
std
add
cmpsb
test
repnz
cwtl
xchg
dec
mov
gs
std
cli
jl
pop
ret
call
lret
mov
jno
stc
or
sbb
call
aaa
lea
mov
shrl
inc
imul
inc
pop
jbe
mov
mov
jge
arpl
mov
repnz
ljmp
sti
ret
gs
lahf
mov
cmp
and
leave
xchg
cmpsb
in
popa
xchg
sbbb
out
mov
loopne
dec
mov
imul
rcll
cmp
jne
or
lahf
mov
ficoms
pop
aam
xchg
das
pushl
arpl
cwtl
test
inc
lock
loope
mov
pop
in
push
sub
fisttpl
mov
cs
testb
adc
mov
or
jmp
out
pop
dec
enter
or
fildl
lock
cmpl
push
es
fucomip
es
mov
add
outsl
lret
pop
lcall
nop
push
mov
jl
mov
sbb
fwait
jnp
jnp
ret
jb
rcrb
nop
ret
je
jno
ficompl
test
mov
push
inc
sub
cmpsb
mov
inc
sub
and
gs
insl
lcall
sub
fmulp
add
rorb
fwait
shr
in
inc
sahf
dec
enter
lods
push
cli
mov
aam
push
test
cmpsl
flds
test
push
and
mov
test
pop
aas
pop
lret
adc
inc
repnz
xor
mov
rorl
add
clc
cwtl
enter
add
lock
jle
cmp
fsubl
andb
jbe
cltd
jns
stc
movsb
stos
lods
in
hlt
cltd
inc
and
int
dec
jg
aam
add
rorb
push
jno
pop
out
mov
pop
sbb
adc
mov
cmp
lahf
sub
sbb
call
xchg
mov
js
inc
xchg
mov
jge
mov
iret
xor
add
xor
push
sahf
jns
or
adc
mov
mov
or
dec
xchg
ljmp
add
mov
outsb
adc
test
adc
decl
lds
push
push
shlb
pushf
sahf
mov
je
or
mov
jle
pop
or
add
and
clc
mov
sbb
adc
iret
add
in
inc
sbb
or
rorl
xchg
sub
sti
out
mov
jne
bnd
test
xlat
es
rorb
inc
pop
aad
enter
pop
inc
out
push
xor
push
sub
add
and
sub
inc
add
cwtl
dec
sti
cmpsl
xor
cli
data16
push
cmp
sub
call
add
push
adc
stos
push
or
mov
or
mov
and
mov
gs
adc
repz
and
adc
dec
hlt
into
rclb
dec
or
inc
pusha
movsl
mov
inc
insl
and
arpl
pop
shll
jp
es
mov
mov
push
mov
into
out
sub
test
es
sub
add
mov
lret
or
enter
mov
outsl
outsl
jp
aad
scas
sbb
insb
inc
mov
insl
leave
pop
aam
orb
inc
sti
xor
or
mov
outsb
das
pop
pushf
fnstsw
or
cwtl
pop
leave
in
loope
imul
sar
jne
lea
pop
mov
xchg
sbb
sub
mov
lock
mov
repz
and
xor
xchg
in
cld
sub
sbb
add
add
popa
mov
data16
mov
dec
cwtl
jb
mov
repnz
push
lods
dec
addr16
and
adc
add
mov
bound
cmp
or
push
xor
push
add
repnz
in
das
mov
pop
lcall
push
xchg
bound
mov
ret
in
mov
clc
inc
mov
pop
aam
gs
addr16
pop
and
pusha
leave
test
ficoml
mov
fistl
andb
orl
sub
nop
sbb
insb
and
push
bound
mov
xchg
imul
sub
lea
fsubrl
shlb
insl
inc
in
in
or
dec
inc
xchg
jp
imul
pop
inc
sbb
stos
mov
adc
and
pop
jno
mov
imull
mov
aas
mov
mov
scas
mov
pop
int3
jecxz
sub
inc
adc
add
ljmp
lds
repnz
jo
or
mov
lcall
xor
jb
xor
mov
aam
mov
cmp
mov
test
mov
xor
fdivrs
icebp
sub
out
test
lods
xor
insl
pop
dec
xor
cmp
dec
push
or
dec
mov
jno
mov
stc
mov
jecxz
movsb
push
and
mov
andb
shll
xchg
mov
push
test
stc
orb
stos
push
sub
inc
adc
mov
jo
or
movsl
jp
aaa
sbb
ds
mov
inc
push
clc
fidivs
fsubrl
jno
and
aaa
pop
inc
inc
mov
push
nop
xor
in
ficoml
xchg
adc
loopne
add
mov
mov
call
pop
jecxz
sbb
push
stos
shll
jp
and
aas
mov
mov
and
in
outsb
or
mov
rcrl
pop
call
pop
sub
ds
and
pop
scas
imull
jecxz
repz
push
dec
test
in
mov
add
mov
mov
sbb
test
sbb
scas
flds
cmpsl
das
inc
mov
add
dec
sbbl
pop
dec
out
mov
add
sub
jbe
sbb
dec
ret
or
out
add
push
aaa
aaa
mov
bound
pop
shr
addl
inc
cltd
mov
jno
repz
lods
sbbl
or
xchg
lcall
pop
orb
push
sub
repnz
cwtl
pop
adc
mov
ffree
flds
out
dec
pushf
fdivrl
cmpb
sub
pop
out
iret
or
scas
icebp
push
cmp
add
mov
outsb
jl
outsl
mov
mov
test
adc
mov
scas
fimuls
lods
repnz
sub
sbb
inc
mov
aaa
dec
pushf
pminub
fmull
push
pop
jl
sti
std
call
xchg
adc
mov
mov
lret
daa
ret
mov
out
mov
punpckhdq
jns
sbb
adc
call
mov
mov
xchg
jmp
lods
add
arpl
fwait
ficoms
mov
xor
mov
jge
pop
cmp
push
mov
cmp
and
adc
in
xchg
out
cmp
cmc
popf
sub
adc
cld
mov
mov
inc
push
test
loopne
push
loopne
rol
insl
fucomip
xor
sub
psrad
call
dec
xchg
xchg
dec
ret
mov
mov
xchg
jbe
mov
inc
or
and
inc
mov
sub
js
gs
xor
sbb
pop
and
add
lret
sbb
sar
cwtl
negb
test
inc
aaa
xor
xor
jp
sub
aas
flds
sbb
rolb
add
add
idivb
mov
push
gs
inc
xchg
ljmp
rep
jl
dec
inc
jl
rcrb
adc
mov
je
pop
pushf
out
push
into
xchg
gs
std
sbb
ljmp
cmp
icebp
sarb
and
xor
jg
xchg
or
call
cs
fs
or
sbb
sbb
sbb
sub
dec
sti
cmpl
out
sbb
jle
xor
sub
mov
and
arpl
fdiv
mov
cltd
incb
repnz
imul
cwtl
xchg
cmc
push
call
je
scas
daa
add
push
scas
das
or
dec
pop
scas
insb
jg
je
fdivrl
pop
push
sub
inc
mov
or
mov
mov
cwtl
fisttpl
xlat
and
pusha
ja
in
mov
dec
push
rorb
push
fwait
test
and
push
rorl
std
test
stos
lods
mov
jno
mov
push
mov
rol
or
sahf
btc
mul
and
mov
lcall
bound
sbb
lahf
dec
gs
push
out
and
mov
std
mov
shl
sub
sub
subb
jl
jmp
mov
cmp
push
push
pop
inc
fldl
lock
aas
add
dec
pop
pop
or
and
mov
xchg
scas
gs
jp
inc
and
lret
mov
and
pushf
xor
or
rclb
inc
enter
imul
cmp
cwtl
les
pop
fldl
pusha
xorb
test
lcall
jae
lods
cmp
lret
add
mov
mov
mov
jnp
shll
in
das
xor
mov
add
and
in
and
js
xor
cmp
imul
loop
mov
mov
in
inc
in
repz
loop
push
add
adc
fstl
sbb
stos
xlat
es
mov
sub
jno
call
xor
faddp
mov
cwtl
add
and
and
loopne
jp
pop
popa
add
pop
loop
lods
lret
add
xor
mov
stos
ds
inc
cltd
or
and
adc
add
pusha
inc
fbstp
sbb
movsb
add
fcoms
enter
xchg
popf
bound
mov
call
clc
daa
jnp
or
cwtl
ljmp
out
xor
pusha
xchg
sbb
dec
sub
enter
adcb
das
pop
cltd
icebp
sbb
add
sbb
mov
je
sbb
pushf
jns
adc
sub
divb
or
pop
lcall
add
in
sub
inc
loope
ret
and
jge
jl
mov
dec
addr16
loopne
dec
add
and
decb
lret
mov
mov
mov
filds
mov
lcall
xchg
mov
sub
xchg
dec
in
cmp
add
or
inc
xchg
sti
faddl
xor
add
pusha
pop
fldt
sub
mov
add
subb
sub
hlt
fldt
into
cwtl
xchg
fsubs
pop
adc
push
xchg
jnp
call
bound
scas
dec
mov
into
std
mov
shl
lea
adc
loope
fsincos
shll
mov
mov
jle
dec
ds
enter
cld
je
sbb
mov
add
iret
stc
popf
aam
repnz
add
mov
outsl
cmp
add
outsl
mov
xchg
ja
jne
mov
cmp
add
sub
inc
insb
pop
sbb
add
sub
cwtl
add
adc
movsl
xchg
cmp
inc
jmp
into
into
push
aad
jae
cwtl
mov
add
stc
pop
and
pop
xchg
push
and
cwtl
leave
jge
jge
sahf
pop
loop
fcmovu
pop
lods
sbb
pop
into
adc
cmpsl
mov
bound
mov
popa
rorb
faddl
xchg
inc
add
orb
lret
bndldx
inc
pop
cli
xchg
pop
jge
push
cmp
divb
repnz
mov
jmp
or
test
jge
jae
ret
xlat
or
push
out
inc
outsl
loop
dec
subl
xor
add
add
add
aaa
xchg
cmp
add
inc
out
add
aad
pop
push
test
cwtl
jp
adc
fsubrs
dec
gs
mov
ret
shrl
or
pusha
mov
cmp
xchg
fstps
andl
xchg
and
or
add
int3
adc
mov
rorl
aas
mov
add
js
shlb
scas
push
ret
mov
sub
xchg
mov
ljmp
mov
daa
mov
bound
sbb
int3
xchg
fwait
jp
sub
lcall
adcb
scas
add
dec
jp
shr
out
xchg
mov
cltd
ret
add
loopne
pop
adcb
lret
lret
outsl
adcb
mov
aad
or
or
sbb
xlat
add
push
or
jecxz
inc
push
std
pop
pop
test
pop
inc
add
mov
int3
int
cmp
scas
or
push
mov
sbb
jge
mov
pop
insb
lahf
lahf
xchg
jge
shrb
or
mov
adc
add
dec
adc
mov
mov
scas
fnstcw
lock
push
cltd
cmp
mov
pop
jl
mov
pusha
lods
pop
cmpsl
push
sbb
jae
shll
sbb
andl
jb
nop
mov
or
xchg
shlb
xor
cmpsb
shl
aaa
add
pusha
or
cs
mov
xchg
adc
shl
test
mov
mov
and
xchg
and
daa
lret
in
xchg
inc
sbb
jae
fisttpll
out
mov
icebp
cltd
aaa
mov
std
dec
repz
out
mov
sar
insb
mov
fstpl
outsb
sbb
sbb
inc
xchg
loop
inc
pop
sub
lea
test
outsb
pop
adc
mov
repnz
orb
inc
testl
push
aad
sub
es
test
divb
jl
adc
dec
cwtl
dec
adc
inc
test
rcrl
movsl
sub
lcall
pop
movsl
cltd
or
xchg
or
push
xor
call
out
mov
jns
and
ret
fistpll
push
add
jp
dec
in
fcomps
adc
andb
in
or
and
push
enter
and
sbb
sbb
in
mov
or
loopew
mov
cmp
cmpsb
scas
jae
bound
cmp
jmp
add
outsb
outsb
add
cli
mov
inc
lea
lcall
jae
mov
pop
xor
jle
mov
mov
pop
or
loope
scas
ljmp
jo
cmp
inc
in
dec
psubw
push
cmp
push
pusha
inc
or
sub
mov
jo
out
loopne
ljmp
push
aas
inc
fsubrs
je
call
push
pop
dec
daa
inc
sub
pushf
fldenv
shl
and
inc
in
cli
add
roll
inc
cmp
add
lods
fiadds
and
jno
pop
adc
inc
or
sbb
push
pushf
cmc
shrl
sbb
push
icebp
rcr
inc
inc
movsl
mov
mov
sarb
mov
inc
lock
pop
mov
sbb
push
cmp
or
mov
and
ds
add
loopw
dec
aas
pop
sub
lretw
mov
xor
pop
nop
mov
mov
sbb
jge
adc
inc
inc
pop
sahf
xchg
adc
dec
mov
pushf
mov
lea
call
ret
int3
shlb
jno
add
fs
mov
lahf
and
gs
adc
sub
leave
pop
daa
add
fwait
loopne
sub
inc
hlt
imul
sub
pushf
das
pop
and
jae
inc
ror
pop
xor
inc
in
inc
pop
push
xor
xchg
mov
xchg
lret
sbbb
push
jno
fsubrl
in
xor
add
push
nop
sbb
xchg
xchg
fdiv
xchg
adc
mov
xchg
leave
mov
out
xor
rcll
mov
rcr
inc
xor
pop
xchg
ljmp
jg
loop
fdivr
pusha
sub
testb
sub
add
movsb
ret
fdivl
rcll
lret
ret
dec
fabs
daa
lret
xchg
jne
subb
mov
movsb
cld
insl
out
fistps
add
cwtl
adc
jge
rclb
xor
cmp
rcll
fcmovb
ret
pop
add
aam
xchg
inc
jge
xor
mov
lret
inc
mov
inc
sbb
push
cltd
xchg
xchg
or
loop
mov
add
cmp
ret
rorb
add
xchg
ljmp
iret
adc
push
mov
mov
call
push
imul
inc
call
cmp
adc
mov
gs
addl
in
and
push
mull
jmp
test
or
push
push
pop
clc
clc
cmp
xor
fldt
js
mov
jmp
out
out
scas
adcl
dec
add
popa
add
rol
sbb
inc
pusha
ljmp
xchg
add
pop
push
jnp
repz
dec
dec
sbb
add
xchg
and
push
rcl
fsubl
sub
popa
pop
xor
add
cmp
adc
lds
nop
inc
jns
fdivr
clc
psraw
xchg
add
pop
cltd
jne
ja
mov
adc
dec
mov
jnp
pop
cli
ljmp
mov
sub
imul
adc
cmp
test
int
imul
pop
ljmp
sub
pusha
pop
lods
cli
adc
ret
adc
ja
xchg
cwtl
out
bound
inc
cmpsl
ss
or
mov
and
inc
iret
dec
dec
jmp
fwait
inc
xor
mov
mov
clc
scas
mov
push
mov
push
push
ljmp
imul
imul
pop
loopne
jge
jo
pop
sbb
in
mov
add
pop
fwait
notl
xchg
add
mov
cmp
enter
sbb
mov
outsl
nop
aam
or
xor
fs
aas
mov
inc
push
lcall
dec
testl
push
dec
lret
sbb
or
add
or
scas
aaa
add
stos
mov
ret
iret
repnz
push
test
les
sbb
test
aas
mov
mov
mov
sub
inc
pop
testl
in
push
les
adc
cmpsl
jl
lcall
pop
mov
adc
lcall
inc
andl
andb
lea
jmp
lock
arpl
std
pop
fmull
inc
push
mov
in
iret
or
xor
std
dec
loope
adc
cltd
xor
mov
jl
and
add
clc
ss
inc
test
and
icebp
cmpb
outsl
jle
sbb
cmp
mov
aad
lea
ror
pusha
movb
icebp
shrl
cs
and
loop
repnz
testb
ficoml
xor
lock
cmp
push
aam
cmp
jmp
push
aaa
inc
cmpl
loope
sub
push
mov
das
cmc
xor
bound
cmp
in
mov
jnp
mov
out
int3
adc
cwtl
test
sub
add
adc
shll
mov
or
xor
out
sti
mov
jmp
aad
mov
dec
jns
or
gs
pop
outsb
inc
jge
push
test
push
fdivs
mov
loopne
sub
repz
in
in
dec
lock
and
cmp
xchg
lock
pop
cmp
lock
out
add
outsl
push
addr16
icebp
xchg
jmp
cld
iret
pop
pop
movsb
add
jg
mov
cmc
pop
mov
adc
int
mov
out
adc
push
pop
imul
es
cmp
xchg
loop
or
push
push
xchg
sbbb
loop
test
je
pop
ror
das
into
add
dec
inc
rcrb
and
add
lea
add
sbb
pop
fmuls
aam
and
inc
pop
movsb
mov
jnp
out
xchg
dec
pop
aas
dec
insb
in
pop
mov
push
jne
jb
addr16
inc
xor
add
mov
data16
add
pop
xor
push
cwtl
inc
cltd
aam
adc
movsl
rolb
pop
outsb
jl
mov
mov
cwtl
jge
fldl
mulb
fnstenv
fwait
adc
jge
mov
pop
repnz
jno
sbb
lahf
and
jle
xchg
stos
leave
add
add
pop
shrb
sahf
lcall
jl
xor
xor
jle
sbb
mov
or
or
inc
setns
outsl
push
inc
leave
jecxz
pop
add
and
mov
push
push
mov
sub
mov
jno
out
sti
sbb
cwtl
mov
mov
in
lea
sbb
cmp
imul
mov
push
mov
shll
out
push
adc
adcb
fwait
lcall
add
add
fimuls
cmpsb
ficompl
or
cli
mov
fwait
push
in
push
das
mov
xor
int3
pop
imul
and
incb
mov
addb
int3
ljmp
jae
cmpsb
cmpsl
xor
cs
push
out
hlt
push
lcall
imul
adc
inc
push
mov
jae
mov
js
rorb
dec
inc
les
sub
mov
test
cld
or
mov
out
push
sbb
scas
pop
or
xor
sub
arpl
or
dec
dec
sahf
or
or
push
stos
ja
jb
jno
add
cli
mov
sub
inc
je
cli
inc
and
mov
scas
call
xchg
stc
dec
repnz
int3
inc
jbe
fildl
jl
add
sti
scas
cmpsb
xchg
inc
andb
xorb
xor
or
mov
movsl
xchg
and
loope
jbe
cmp
sub
push
jecxz
and
xchg
movl
in
mov
cmp
ja
and
aaa
adc
jmp
loop
repz
fwait
xchg
fsubs
fucom
jmp
add
sub
push
pop
aas
push
jbe
shrb
mov
lods
faddl
dec
subl
rcll
cs
fwait
jl
test
out
les
ljmp
ret
movsb
fnstcw
imul
inc
cmp
push
inc
jns
outsl
jge
mov
addr16
xor
addr16
inc
inc
pop
lods
sbb
loop
push
adc
inc
adc
and
pop
inc
sub
mov
pop
adc
xchg
int
scas
cld
cli
sar
sbb
mov
mov
mov
or
xchg
mov
scas
xor
jnp
cmpsb
aaa
cmp
or
shlb
add
jmp
loop
roll
scas
add
jge
lods
test
pop
movb
movsl
jecxz
inc
sbb
push
test
sub
or
rorl
mov
fsubr
frstor
insb
imul
pusha
je
jno
cmp
std
testb
mov
inc
jge
jb
inc
sub
out
mov
push
sub
sbb
pop
mov
jno
es
xchg
adc
imul
cmp
dec
fmull
inc
insl
dec
xlat
pop
dec
shlb
jl
sub
faddl
cwtl
fistpll
in
cmp
or
add
dec
adc
clc
movsb
mov
popa
outsl
add
adc
push
sbb
mov
cld
js
jg
lods
mov
sbb
mov
adc
rcrb
insb
cmp
xor
jge
pop
jp
out
orb
add
dec
or
loop
pushf
mov
pop
xor
xchg
pusha
mov
mov
sar
and
lds
in
mov
shlb
add
xor
xchg
jb
xchg
jo
fs
scas
lahf
jb
insb
in
and
push
cld
add
jb
cmp
xor
jno
and
sub
mov
lret
add
das
jecxz
mov
xlat
add
or
jo
xchg
call
push
lcall
je
ja
scas
fadd
mov
mov
add
dec
jl
mov
clc
pushf
push
cmp
xchg
add
mov
loopne
in
scas
out
mov
negb
xchg
lahf
addb
mov
pop
add
lcall
cwtl
mov
inc
divb
sub
push
push
lret
pop
cmp
xor
xchg
stos
sub
cld
pushf
jb
jo
xchg
sbbb
xchg
ds
or
pop
mov
sbb
les
mov
scas
pop
lds
mov
add
inc
pop
xorl
imul
add
sbb
push
cld
inc
xor
xor
sbb
lret
xchg
cmpb
ret
ljmp
sub
inc
add
xchg
mov
mov
fs
xor
fildll
popf
test
sub
gs
push
mov
movsb
xor
jae
fdivrl
mov
cs
dec
addb
pop
mov
jg
mov
xchg
sub
pop
adc
xchg
shrb
pop
pop
gs
lods
addr16
cmp
sbb
xor
inc
pop
push
sub
or
in
lcall
cmp
or
rcll
add
mov
mov
jno
loop
or
fdivrs
nop
sbb
or
cmpsb
push
popf
movsb
cld
mov
mov
test
jbe
lds
mov
das
fistpl
ror
rcll
mov
sbb
mov
or
push
ret
es
mov
cli
lret
jb
andl
pushf
lret
jmp
mov
add
adc
jbe
loope
loopne
rorl
jnp
call
mov
dec
mov
loope
xchg
mov
addb
scas
dec
pop
mov
cltd
add
inc
adc
andl
push
sbb
adc
insb
add
push
adc
loope
lods
fisubl
mov
out
mov
outsb
roll
sub
push
sub
sarb
leave
pop
enter
add
fbstp
cwtl
push
andb
pop
add
dec
daa
clc
add
push
adc
jb
cwtl
scas
mov
aam
loope
mov
loope
mov
jg
sbb
ljmp
adc
push
push
cmp
test
cmp
sbb
lds
add
mov
in
or
jnp
sub
inc
mov
or
je
inc
roll
mov
mov
idivl
outsb
movsb
in
iret
test
push
out
jecxz
sub
sub
lods
imul
adc
or
or
pop
js
fsubrs
jae
sbb
xchg
and
jle
cmpsl
xlat
insl
jne
or
repnz
inc
push
test
loopne
xchg
fldenv
pop
push
popf
inc
leave
xor
lea
pushf
repnz
aaa
add
dec
jo
xlat
iret
inc
ds
jecxz,pt
fs
and
mov
lret
call
shll
out
sub
gs
call
xchg
cmp
xchg
dec
rcrl
mov
sbb
rcrb
mov
outsb
jecxz
mov
push
mov
rcrb
push
rcll
pop
gs
sub
inc
mov
adc
fbstp
jne
jl
cmpb
adcb
push
sti
sahf
sbb
cmp
lret
or
cmpsl
ja
addr16
mov
ret
ja
cmp
push
cmpsb
inc
rcrb
push
pop
testb
loopne
sbb
aad
cmp
test
arpl
or
xchg
pop
mov
enter
push
das
push
mov
xor
std
sbb
push
movsb
loop
mov
fildll
mov
xchg
leave
dec
cltd
int
aam
xchg
sbb
mov
icebp
push
sub
loope
iret
in
adc
xchg
sbb
xchg
dec
mov
imul
sub
xchg
ficoms
inc
fcmovne
stos
pop
xchg
insl
arpl
mov
icebp
iret
add
out
mov
or
or
dec
lds
dec
imul
iret
int3
cld
ja
into
add
add
mov
and
mov
xor
sbb
pop
push
add
mov
pop
lock
mov
roll
and
dec
dec
xchg
scas
or
aam
outsb
loopne
outsb
aas
jmp
or
fstpt
push
lahf
xchg
sub
rcrb
and
imull
fiaddl
and
fildl
mov
push
ljmp
lea
mov
sub
and
shl
ret
aaa
pop
jle
cltd
mov
cmp
jb
rclb
sub
sbb
fnstenv
mov
mov
cwtl
or
popf
jg
or
imul
or
cltd
movsb
add
add
data16
mov
lcall
or
pop
sbb
outsb
cmp
mov
mov
sbb
cmp
lcall
and
cltd
pop
adc
sub
jmp
aas
gs
sbb
out
jae
adc
negl
sbb
rcl
xor
push
shll
add
add
inc
and
dec
lret
test
pop
cwtl
data16
pop
out
fwait
jns
into
sbb
fs
sub
pop
ja
cli
lret
cwtl
das
inc
xchg
push
addb
dec
xlat
pop
pop
or
popa
imul
pop
mov
cmp
or
das
rolb
and
mov
add
scas
sub
mov
mov
shlb
aas
clc
cmpsb
sahf
xchg
in
jb,pn
and
lcall
cmpl
scas
aad
clc
mov
lcall
aaa
sub
or
push
mov
push
rclb
mov
inc
test
xor
pop
dec
sti
outsb
mov
xor
daa
sbb
cmp
or
push
pop
scas
dec
je
mov
and
fwait
adcb
push
mov
push
sbb
addl
addr16
cmc
out
repnz
out
shl
cmpsl
inc
inc
ds
dec
loopne
jnp
daa
mov
shll
inc
lods
jno
jmp
or
cmpb
out
into
sbb
cmpsb
pop
test
out
loopne
fstps
push
pop
cld
jne
fadds
lahf
add
xchg
out
mulb
add
or
pop
popf
pop
sub
xchg
shl
cltd
sub
mov
arpl
sub
mov
cli
and
gs
xchg
or
push
jle
outsb
outsb
faddl
cwtl
mov
mov
push
shl
imul
xchg
lea
insl
sbb
les
xor
add
mov
pop
or
dec
scas
je
sub
addr16
mov
cmp
xchg
std
shrb
pushf
imul
sbb
adc
cli
int
and
sbb
lahf
inc
mov
adc
mov
add
mov
cwtl
pop
repnz
pop
js
out
lods
in
dec
popf
dec
cltd
inc
add
cli
orb
push
das
outsb
rclb
add
fisttps
mov
mov
xchg
inc
in
js
push
push
je
add
icebp
lret
push
jecxz
jns
pop
sub
inc
mov
xor
push
inc
lcall
inc
mov
incb
inc
push
ss
mov
jno
mov
std
mov
pushf
xlat
mov
mov
xor
mov
aam
or
or
add
sbb
ja
jae
add
inc
mov
xor
cmp
jae
ficompl
and
pusha
xor
adc
fcomip
pop
adc
fwait
sbb
movsb
jnp
test
mov
cmp
cltd
pop
and
pop
int
stc
cmp
add
loope
xor
adc
jmp
daa
ljmp
imul
mov
outsb
xchg
rclb
out
jne
pushf
testl
mov
andl
cmpl
aas
cs
enter
ja
inc
out
cmp
clc
arpl
outsl
aad
sub
push
xchg
insl
lock
jno
adc
cli
rol
lds
cmpsl
outsb
mov
fldcw
hlt
or
lcall
or
xchg
jne
xchg
scas
xchg
fldl
je
fcomp
push
lds
xchg
push
call
stos
mov
inc
mov
js
push
sub
pop
je
mov
je
pop
sbb
fsubr
std
mov
mov
xchg
nop
xchg
call
pop
jnp
addr16
insb
cmp
sub
xor
inc
sub
stos
jp
add
push
xor
mov
in
out
aaa
mov
xchg
xchg
adc
mov
mov
repnz
iret
mov
sub
push
inc
and
jge
jns
fcompl
testb
lahf
pop
pop
xchg
jbe
pop
or
lds
es
mov
cld
mov
jecxz
call
push
in
pop
sar
imul
jecxz
cld
pop
dec
inc
mov
and
pop
push
mov
add
scas
aad
and
repnz
pop
fcoms
adc
bound
inc
xchg
daa
mov
call
mov
stc
sbb
nop
lahf
pop
in
add
sahf
ja
ja
inc
jle
test
or
lret
and
out
nop
inc
scas
jg
sub
rcrb
sbb
and
dec
call
sub
arpl
xchg
scas
push
fstps
fistl
fst
cmc
daa
dec
push
test
cmc
pop
dec
inc
inc
inc
adc
sub
xlat
jp
add
mov
int3
mov
mov
jns
xor
repnz
in
xor
ret
push
je
and
fbld
adc
movsb
ja
mov
cmp
add
push
or
mov
push
cmp
mov
inc
jo
cltd
mov
aad
movsl
or
inc
mov
imul
repz
nop
adc
and
fisubl
pop
add
and
mov
rclb
rol
xchg
adc
sub
cli
xlat
or
insb
inc
and
fcoml
fdiv
idiv
fdivr
outsl
fimuls
dec
dec
mov
mov
negl
mov
cmp
fwait
cmp
rcll
jnp
ffree
mov
mov
icebp
and
and
out
popa
fcompl
test
jle
in
bound
test
sbb
jecxz
stos
sbb
jge
loop
and
lret
add
pusha
cld
mov
adc
in
or
or
jo
cmpsl
in
mov
cmpsb
les
lds
aad
cli
sub
gs
mov
adc
stos
loop
sbb
or
in
cmpsb
and
call
mov
mov
pusha
inc
adc
xchg
addr16
xchg
fnsave
sbb
jl
fwait
jcxz
push
mov
inc
jecxz
sbb
sub
dec
and
adc
notb
dec
int3
mov
jg
js
and
dec
sbb
fmull
call
mov
cmp
mov
xlat
push
in
outsb
rorb
dec
popf
mov
xchg
mov
loopne
xor
and
es
mov
or
cwtl
xor
cmpsb
nop
jbe
pop
cwtl
mov
mov
inc
shl
mov
add
sub
cmp
mov
leave
mov
outsl
cmp
testl
jno
adc
into
xlat
insb
mov
sub
gs
clc
mov
push
out
addr16
insb
adc
gs
lds
mov
push
movb
or
cltd
cli
push
mov
hlt
sbb
mov
cmp
pop
xor
arpl
nop
movsl
popf
xor
pop
lcall
mov
sti
mov
andl
hlt
adc
adcb
xchg
lock
mov
je
and
mov
xchg
or
pusha
in
lock
xchg
rol
mov
mov
add
mov
cwtl
jmp
loop
push
insl
sub
mov
jp
popf
pop
xor
jns
ds
pop
mov
cwtl
cmpb
jecxz
out
mov
out
dec
rorb
mov
mov
ja
jmp
inc
mov
cmpsl
cmpb
push
xchg
out
sti
imul
outsl
es
les
jb
push
or
aam
imul
mov
mov
js
test
xor
add
push
xor
pusha
jmp
lods
mov
lds
or
lret
lahf
fistps
mov
pop
dec
testl
mov
inc
mov
xchg
and
fstpt
mov
dec
ret
roll
or
xor
scas
lret
cmpsb
inc
hlt
bound
aaa
jae
sti
jmp
push
dec
dec
mov
outsb
imulb
jmp
loope
xchg
sub
clc
loope
or
scas
xchg
cmp
stc
xor
pusha
push
mov
xchg
and
movsb
call
jge
mov
mov
jns
mov
in
xor
fildll
pop
add
negl
sahf
or
add
cmp
mov
pop
adc
inc
daa
mov
push
fistl
lods
test
iret
mov
clc
stc
jo
inc
scas
push
dec
je
dec
jo
ss
mov
fmulp
inc
xchg
jne
or
clc
ja
jne,pn
pextrw
shrb
rorb
dec
push
shr
sub
mov
jmp
std
inc
dec
bound
adc
in
les
aad
xlat
enter
inc
ds
fs
fistl
and
stos
pop
js
sti
xchg
enter
inc
pop
cmp
stos
sbb
inc
jno
rorb
mov
or
fisubrl
mov
sbb
sub
icebp
pop
adc
leave
push
leave
les
arpl
gs
test
xchg
inc
scas
mov
ficomps
or
ljmp
icebp
inc
popa
aad
and
mov
lcall
movsl
xchg
xor
cmp
loope
sub
push
xchg
jmp
stos
ror
cmp
inc
pop
jns
jnp
sub
addr16
mov
pop
pushf
js
in
mov
sub
loopne
stos
inc
jb
cltd
das
insb
sti
inc
dec
push
sbb
or
or
das
mov
mov
pop
and
mov
loopne
sub
mov
scas
imul
dec
icebp
shlb
cmp
pushf
mov
jp
add
pop
shl
inc
cs
xor
js
loopne
mov
sahf
inc
nop
imul
out
repnz
xchg
ret
pop
mov
cmp
outsb
lds
decl
xchg
mov
in
in
fnstcw
add
arpl
dec
and
jge
dec
jmp
push
sti
push
fs
jno
std
negl
or
sub
xchg
shl
push
ret
mov
sti
add
sahf
cli
pop
pop
or
out
xor
push
out
outsb
lcall
mov
popa
inc
movsl
sub
add
mov
ds
cli
stos
out
xchg
ja
sbb
xchg
jge
lods
insl
sti
lret
popa
mov
xlat
sub
inc
sbb
or
cmpsl
loop
push
out
or
nop
lock
out
jmp
int
add
test
rorl
pop
add
scas
or
popf
mov
addr16
jp
xor
jge
loopne
fcoms
jp
arpl
inc
push
cld
fldl2e
mov
mov
add
dec
cs
les
imul
adc
adc
jp
lret
iret
rclb
add
xchg
xchg
cmp
imul
xchg
add
dec
movsl
cmc
popf
arpl
mov
sbb
test
pop
inc
shrb
enter
sbb
icebp
pushf
jl
lret
sub
mov
sbb
dec
in
ret
testl
inc
xchg
push
cmp
dec
das
inc
es
dec
bnd
mov
adc
pusha
test
pop
xchg
andnps
outsb
adc
mov
pop
cwtl
jns
data16
sub
in
add
dec
mov
lret
ficomps
mov
and
or
inc
fsubrl
loopne
stos
js
in
bound
mov
lods
xchg
pop
or
mov
or
xor
xchg
test
and
xor
mov
push
gs
popa
adc
pop
stos
test
jo
adc
and
push
frstor
mov
ret
cmpsl
xchg
loopne
out
test
std
jecxz
fwait
jae
pop
mov
je
ret
out
cli
scas
dec
push
jmpw
cwtl
rcr
in
insb
cwtl
imulb
jge
or
add
add
mov
call
lds
adc
push
fcoml
pop
xchg
pushf
ror
mov
dec
in
jo
montmul
cmpsb
inc
push
add
xchg
xor
in
scas
je
or
cmp
push
sub
xchg
cli
cwtl
dec
lcall
cmp
or
or
sub
mov
or
adc
fldl
mov
aas
call
inc
inc
pop
adc
mov
out
mov
ret
fldt
pop
in
or
in
cmp
sub
xchg
sbb
add
decb
add
xchg
sub
dec
out
adc
push
hlt
push
ljmp
in
dec
push
add
adc
and
fcmove
loopne
cmp
daa
inc
repnz
mov
test
dec
mov
loopne
rcrb
daa
repz
int
push
adc
or
sub
aas
sbb
sbb
fsubrl
test
test
jne
scas
xchg
push
cs
mov
push
mov
add
ljmp
sahf
lock
fisubrs
movsl
or
nop
or
add
jno
dec
mov
add
cli
call
insb
lds
pop
popf
adc
inc
jp
lret
fldt
sub
cmc
adc
push
lea
loope
js
pop
pushl
fidivl
sbb
cmp
adc
push
aas
nop
inc
lret
sbb
out
pop
int
mov
inc
sub
mov
clc
add
inc
mov
lods
sub
aad
xchg
xor
and
mov
shlb
outsl
fdivr
pop
jmp
ficoms
into
arpl
add
repnz
scas
arpl
outsl
popa
imul
fwait
je
or
mov
stos
rcrl
or
pop
imul
jbe
mov
mov
iret
ss
lcall
shl
cmp
and
push
cs
add
xchg
add
push
lock
mov
push
xchg
push
fstps
cmp
inc
push
fldl
out
test
out
hlt
and
inc
fildl
mov
jg
sub
mov
or
arpl
mov
into
cmc
or
and
fstpt
dec
push
pop
outsb
jns
pop
lahf
addl
lret
arpl
adc
shl
mov
jo
jmp
outsl
or
fadds
and
fwait
int3
mov
mov
rcrb
loop
xchg
adc
in
aaa
mov
jecxz
stos
mov
lret
lods
cli
xor
inc
call
lcall
inc
sbb
ds
mov
cmpsb
inc
mov
fisubl
push
call
add
into
push
mov
cli
add
inc
scas
adc
add
sbb
mov
xchg
jb
mov
pop
out
test
scas
lds
imulb
aas
xchg
jne
inc
loope
mov
xor
lret
shll
mov
mov
inc
push
outsl
mov
fucomip
xor
in
push
das
out
add
xor
imul
mov
in
mov
mov
pop
dec
jae
sbb
add
cs
mov
or
cmp
movzbl
rcrb
loope
mov
cmp
shlb
jg
adc
fcmovne
mov
add
push
scas
mov
lahf
lock
aas
cmpsl
and
xorb
sbb
add
xor
xchg
into
stos
push
pop
into
sub
jbe
xchg
push
jbe
lock
add
lahf
in
mov
sbb
in
test
je
xor
xchg
mov
sub
daa
int3
xor
leave
inc
xor
xchg
push
jns
or
and
dec
lock
or
sbb
add
xchg
jb
mov
cwtl
mov
cmp
fimuls
mov
cmc
int
xor
pusha
popa
lds
inc
sbb
mov
subl
sub
and
push
pushf
and
aad
add
sbb
roll
xchg
sub
inc
inc
out
mov
inc
sahf
sbb
fs
and
add
mov
adcl
mov
mov
mov
mov
scas
inc
test
cmc
cli
fisubl
cmc
sub
mov
push
pop
imul
sbb
add
xchg
xor
fcmovnb
cwtl
cmp
jbe
movsl
sti
cs
ret
add
mov
mov
jmp
popa
mov
and
add
sub
test
add
push
cmp
cli
imul
stos
inc
jmp
movl
push
pop
test
adc
lock
mov
fistl
ja
push
pop
pop
or
cmp
sti
push
insb
pop
inc
cmp
into
out
mov
mov
stc
pusha
movsl
into
jne
cmp
fadds
push
cltd
xchg
jl
inc
call
sub
push
or
sub
mov
jo
ret
je
ljmp
dec
cwtl
cld
add
sub
add
mov
icebp
jbe
xchg
jmp
dec
xor
fidivs
icebp
cmpsl
cmpsb
sbb
inc
mov
fdiv
jp
add
js
sub
mov
outsb
popf
fwait
aas
insl
cmpsb
fnstsw
into
nop
das
test
xchg
dec
out
xor
cmp
pop
enter
test
imul
or
sub
pop
pushf
xor
je
fmull
mov
or
sbb
stc
pop
cmp
js
filds
movl
push
pop
ficoml
stos
pop
repnz
xor
xchg
mov
arpl
loope
xchg
test
inc
rolb
xrelease
hlt
adcb
jecxz
mov
dec
fs
pushf
out
pop
sub
lods
jb
ljmp
ljmp
jecxz
js
and
rorl
scas
dec
sbb
gs
cwtl
les
jle
pmaxub
mov
popf
cltd
inc
ret
pop
mov
push
pop
cmpsl
mov
int3
and
jp
adcl
push
jg
adc
movb
adc
clc
xor
out
aad
jp
cmp
aaa
or
mov
adc
std
push
and
scas
mov
add
sub
fdivl
fmull
mov
mov
int3
icebp
data16
mov
inc
scas
jle
pop
jns
add
mov
xchg
cmpsl
shll
out
push
incb
pop
add
dec
sbb
repnz
mov
in
pop
jnp
cwtl
mov
iret
pop
xlat
test
xor
xchg
hlt
pop
in
dec
addr16
push
push
cld
xchg
adc
in
adc
mov
inc
pop
call
repz
cmc
mov
pop
jb
add
mov
mov
inc
mov
jp
aam
leave
fistps
sub
ficomps
mov
bound
mov
sbb
inc
testb
out
sub
push
ds
jns
dec
outsb
aas
dec
in
mov
push
out
cltd
insl
lahf
sbb
loopne
imul
mov
xchg
or
repnz
or
add
sbb
sub
out
cmp
dec
adc
call
add
dec
in
mov
cs
pusha
clc
sbb
imul
ss
sti
addl
jg
mov
push
jae
sub
popa
push
andb
outsl
sbb
in
jae
cld
or
cmp
rclb
inc
add
push
or
sbb
sbb
sbb
fmuls
mov
jl
call
popa
mov
jle
cmp
stos
out
cmpsb
adc
insl
std
inc
xor
dec
mov
dec
xchg
mov
inc
ds
sub
push
aaa
mov
jle
dec
rorb
mov
outsb
mov
pop
outsb
pop
or
mov
sub
push
loop
ss
sbb
mov
rorb
jae
inc
nop
push
sbb
add
hlt
xor
mov
shlb
fisttpl
xchg
mov
paddsw
mov
add
setp
xor
fcomps
mov
lods
jp
sub
popf
add
stc
dec
xchg
gs
fidivrl
add
fwait
inc
add
sti
out
inc
mov
add
pop
and
loope
cli
mov
cmpsb
sbb
jecxz
xor
stc
dec
sbb
push
and
dec
aam
sub
cwtl
cli
jnp
lds
ss
int3
inc
add
sub
push
mov
or
xor
out
nop
movsl
dec
jge
into
pop
or
add
add
rcrb
or
adc
add
rcr
push
pop
hlt
ja
push
jge
pushf
mov
fcomip
or
sbbl
add
aam
stos
cmp
xchg
inc
jbe
dec
lods
sub
sub
sub
add
es
dec
sbb
pop
xchg
imul
sbb
movsl
push
xchg
mov
add
shlb
js
push
out
inc
sbb
ds
arpl
fnstcw
dec
iret
inc
dec
out
inc
jl
inc
mov
mov
cmp
repz
mov
out
jmp
sub
push
dec
cwtl
inc
inc
repnz
shrb
pop
push
cmp
jmp
cltd
dec
cmp
and
mov
mov
dec
popa
les
pop
lret
test
shl
stos
mov
dec
adc
addr16
inc
xlat
mov
movb
push
pop
in
and
push
xor
jbe
push
jl
or
in
in
pop
adc
les
xchg
push
jne
adc
mov
test
dec
sbb
sub
ss
add
out
filds
add
adc
or
mov
into
sti
cmpsl
mov
and
test
dec
addb
jnp
add
enter
sbb
in
test
or
inc
insl
mov
or
test
or
movb
ret
test
cmpl
jne
fdivs
or
rcrl
test
roll
call
stos
data16
sbb
ljmp
shlb
xor
divb
and
aas
mov
adc
ds
mov
or
jne
mov
xchg
shlb
loop
imul
popa
and
ja
add
or
mov
iret
hlt
loopne
sbb
fstl
xchg
jo
fcoml
mov
pop
popa
push
clc
icebp
xchg
push
repnz
mov
xor
pop
enter
repnz
xchg
mov
fsubl
adc
xchg
mov
int3
mov
aam
pop
mov
shr
loopne
mov
mov
lods
inc
and
aas
ljmp
loop
jg
int
aam
gs
and
std
data16
sbb
fistps
xor
bound
fmull
inc
mov
or
sbb
arpl
jbe
mov
pusha
hlt
outsb
pop
sbb
cltd
mov
movb
add
ss
push
cltd
inc
push
xorb
cmp
arpl
cld
mov
addb
push
xor
cmp
mov
cmpsb
psubusb
add
fs
sub
push
push
pushf
add
sar
mov
test
xorb
aad
xchg
mov
pop
and
das
out
movsb
jno
mov
add
dec
push
mov
scas
inc
cmpl
mov
cmpsl
imul
xchg
les
int3
mov
or
jmp
inc
test
imul
push
rorl
cmp
xor
test
mov
xchg
pop
inc
aam
dec
mov
pop
lahf
jbe
pop
pop
inc
xorl
xor
lods
inc
pop
loopne
jp
or
or
test
cmp
mov
fsubrl
sub
repz
pop
loop
sub
xor
or
mull
or
push
mov
dec
pusha
xchg
ja
aas
mov
and
lret
dec
adc
sub
mov
imul
cli
mov
test
out
adc
cmp
movsl
mov
mov
cmc
scas
sub
xor
into
sbbb
jmp
sahf
daa
inc
or
ss
add
enterw
jmp
lcall
leave
xorl
cli
push
cs
leave
lock
sbb
gs
pop
push
inc
mov
fdiv
mov
push
inc
add
push
push
shrb
cmp
push
xchg
sub
mov
popa
sub
repz
xor
rcrb
lahf
push
js
outsl
outsl
jno
incl
jnp
mull
push
pop
out
in
pop
push
scas
add
push
incb
mov
out
arpl
fsubs
or
subb
icebp
mov
aaa
xchg
mov
imulb
add
sarl
xor
and
inc
adc
add
cmp
inc
or
or
or
dec
das
or
mov
pushf
dec
ja
jmp
pop
and
test
ror
gs
and
xchg
andl
cmp
inc
insl
add
jbe
pop
test
mov
mov
faddp
imul
inc
push
ficoms
pop
mov
mov
xlat
xor
mov
mov
cmp
cs
xor
inc
jae
stos
sub
test
push
xor
inc
xlat
addr16
arpl
mov
orb
lcall
leave
out
or
dec
add
sbbl
stos
inc
cmc
sbb
into
mov
cmp
add
cmpsb
add
ret
fwait
addb
mov
mov
dec
test
leave
push
out
out
sbb
jnp
jmp
inc
push
lods
sarl
mov
mov
lock
ds
cli
shrl
cmc
pop
nop
sbbl
sbb
add
cmp
les
pop
xor
inc
xor
mov
sarb
xchg
or
out
xor
xchg
sbb
mov
sbb
pop
scas
cmc
mov
sbb
fldl
jne
sbb
mov
xchg
enter
inc
add
int3
inc
push
jb
lahf
dec
mov
cli
das
pushf
mov
adc
pop
lcall
in
push
mov
pop
add
pop
adc
pop
imul
xchg
mov
cltd
sti
in
bound
insb
lret
push
pop
mov
lahf
cmpsb
cmp
jl
mov
push
aas
out
mov
mov
sbb
xchg
shlb
fisttpll
mov
dec
mov
jmp
stos
call
packssdw
shlb
cld
call
xchg
ret
mov
sub
mov
leave
mov
mov
dec
clc
test
mov
pop
ret
and
cmpsl
mov
lods
sub
jecxz
test
fisubs
adc
pop
rorb
test
in
pop
into
push
jl
outsb
test
and
clc
enter
clc
push
and
pop
pushf
and
dec
fdivr
sbb
mov
fwait
addr16
lock
repnz
lds
push
xchg
sbb
add
push
push
and
push
test
mov
in
pop
jg
lcall
pop
stc
jecxz
sbb
daa
decl
push
xor
testb
fldt
fs
cmp
adc
jb
jbe
adc
inc
out
dec
popf
movsb
stos
icebp
les
add
or
push
testb
dec
push
pop
popl
mov
orb
add
repnz
sub
mov
repz
pop
ljmp
sbb
pop
roll
stc
xchg
pusha
cmp
movsl
sahf
pop
adc
ja
sbb
vpshlw
sub
rcrl
mov
bnd
call
push
int
jns
push
mov
sbb
mov
fmull
sub
jo
push
fsubrl
or
add
dec
dec
cli
insb
jg
pop
lds
or
inc
out
jle
or
imul
mov
adc
out
jb
jg
lea
ret
sub
push
fistpll
sub
xchg
adcb
mov
pop
scas
cmp
sbbb
fimull
and
fcomps
sbb
negl
adc
push
dec
jno
fimull
fwait
ja
leave
dec
xor
dec
or
nop
add
pop
jge
lock
push
cmpsl
test
push
ljmp
cmp
aam
jne
mov
and
jne
std
or
xchg
aaa
faddl
testb
xchg
xchg
pushl
mov
jnp
jl
incl
fwait
sub
je
push
test
dec
cmp
inc
sbb
iret
arpl
stos
hlt
pop
sbb
lods
jmp
push
aas
xchg
es
aam
xchg
xchg
pop
dec
jg
sti
lahf
lcall
inc
movsl
mov
cmp
adc
mov
sub
and
scas
dec
xor
sbbb
push
sbb
and
fbld
stc
push
xchg
pop
mov
adc
popf
bound
xchg
jb
cld
and
dec
movb
pusha
popa
and
ljmp
shlb
je
punpcklwd
clc
nop
xchg
mov
roll
dec
daa
jo
andb
xchg
xchg
cmpsl
cli
test
pop
dec
sub
pop
aad
xor
xor
or
pop
inc
shrb
adc
xor
mov
roll
or
pop
les
mov
lea
add
imul
push
mov
jg
mov
in
xchg
mov
mov
sbb
sbbb
test
movsl
repz
sub
orb
sub
in
and
adc
and
les
or
scas
pop
inc
mov
dec
in
sub
sbb
xchg
stos
sbb
aaa
icebp
jmp
push
out
inc
imul
add
sbb
xchg
and
add
dec
or
mov
push
cmp
ljmp
push
call
pop
sbb
fnstcw
test
stos
xchg
andl
int3
sbb
cld
sbb
pop
dec
test
insb
jns
adc
ror
insl
mov
or
dec
lret
sbb
add
andl
sarb
mov
pop
or
clc
call
mov
data16
mov
add
mov
pop
cmp
adc
repz
aam
movsl
sti
adc
repz
fmuls
and
pusha
inc
test
fs
fidivrs
shrb
js
pop
inc
lahf
cmc
pop
push
das
or
rolb
push
lret
xlat
pop
pop
mov
fdivr
test
or
xchg
xchg
inc
pop
jecxz
jae
or
inc
mov
push
sbbl
push
pop
adc
dec
out
dec
cmp
mov
mov
sbb
movsb
xchg
and
cli
ffree
jmp
les
jno
xchg
sbb
and
dec
or
or
std
js
sub
push
lahf
cwtl
loope
into
insb
or
jle
mov
fwait
add
cmp
add
push
popa
xchg
test
fstps
scas
cmp
inc
adc
and
fisubrs
dec
test
adc
pop
fldt
add
mov
sbb
out
and
rorl
rclb
aaa
test
sbb
inc
push
xchg
jp
in
jl
loop
jb
aad
pop
repnz
sub
xlat
inc
fldcw
in
pop
mov
mov
pop
out
push
sahf
and
ljmp
sete
or
gs
icebp
and
dec
mov
mov
add
sub
push
lock
pop
mov
out
lret
out
sub
inc
out
cmpsl
cmp
cmc
test
mov
mov
push
cmp
cmpsl
jp
push
jge
in
inc
rorl
repz
mov
sti
push
outsl
xor
sbb
loope
lret
cwtl
das
mov
cltd
lcall
scas
lcall
lds
mov
xchg
in
movsl
and
add
stc
cli
push
dec
pop
dec
into
insl
icebp
pop
mov
jle
mov
lret
mov
mov
repnz
shrb
jge
fs
mov
fxch
popa
mov
or
jns
or
pop
lock
shr
loope
addb
add
cmp
inc
test
int3
dec
add
test
lods
std
fucomip
adc
jbe
stos
out
out
mov
sbb
sbb
dec
lock
xchg
pop
lods
test
into
lods
int3
dec
inc
mov
or
aam
cmp
ret
nop
leave
xchg
fsubr
mov
popf
add
jle
negb
js
fbld
or
or
out
test
sub
bound
call
sub
fdivr
cmp
rcrb
push
mov
lods
sub
out
push
mov
jbe
xchg
ret
adc
pop
inc
lock
pop
add
xchg
push
fmul
sub
outsb
shr
jnp
jne
jb
daa
xchg
call
mov
xor
jo
gs
jne
sbb
fmull
ret
lret
js
xor
cmp
push
jbe
scas
jp
add
loope
in
sub
add
ret
lret
lea
xchg
jo
imul
mov
popa
push
repnz
hlt
fdivrl
fimuls
outsl
adc
ss
push
cmpsb
iret
hlt
or
fisubrs
out
mov
fsubrl
pop
out
push
mov
pusha
aad
lods
sub
cmp
or
daa
ret
lahf
rclb
xchg
ss
push
inc
xlat
inc
ficompl
mov
gs
in
cmp
cmpsl
nop
push
bound
ror
sub
out
out
repnz
movb
dec
mov
sbb
xor
mov
mov
adc
fdivs
mov
cmp
inc
je
jns
mov
mov
sti
jb
inc
scas
les
xor
sahf
mov
push
dec
in
pop
mov
popa
sub
mov
jae
psrlq
shlb
addb
or
movsb
sbb
pop
mov
sbb
scas
in
cmp
or
xor
xlat
and
dec
pop
and
xchg
xchg
movsb
sub
fcmovnbe
daa
mov
xor
add
push
sbb
mov
push
cld
js
sti
jne
push
ret
repnz
jmp
adc
lcall
call
aaa
add
cmp
push
sarb
clc
addr16
inc
jae
daa
pusha
mov
xchg
mov
and
push
inc
jno
arpl
adc
imul
inc
outsb
clc
shr
cltd
jle
test
repnz
lahf
cmp
mov
neg
loope
inc
inc
subb
arpl
sbb
pop
into
xchg
mov
or
fisttpl
push
gs
lret
adc
inc
in
xchg
andb
dec
int3
inc
nop
push
jmp
mov
or
stc
adc
imul
clc
jbe
push
jnp
sub
scas
xchg
add
das
cmpsl
mov
pop
mov
add
imul
xchg
mov
pop
jmp
lock
jbe
mov
mov
jmp
loope
scas
pop
cmp
mov
pushf
inc
outsb
xchg
add
adc
cmp
pop
fidivrs
add
push
mov
jno
xchg
push
jl
repz
jae
cli
loop
lods
inc
mov
cmp
cli
lea
sahf
pusha
out
push
push
scas
imul
lds
pop
mov
not
mov
mov
es
push
inc
into
out
hlt
hlt
testl
cltd
std
xchg
call
dec
inc
mull
cs
cwtl
je
mov
or
push
addb
loop
add
pushf
pop
mov
xchg
push
xchg
subl
fmuls
leave
inc
mov
xchg
imul
test
and
pop
mov
mov
insl
ds
mov
sbb
jle
pop
test
and
sub
xchg
sbb
popf
hlt
je
cld
xchg
les
daa
xchg
cwtl
and
stos
push
jbe
sbb
jge
or
pop
scas
lea
ret
mov
jmp
popf
fdiv
mov
shr
es
adc
mov
filds
outsb
pop
addr16
loope
lods
stc
cltd
dec
test
repnz
inc
arpl
ljmp
mov
cmp
aas
sbb
pushf
mov
pop
cli
std
popa
cmc
mov
xchg
negb
fimull
push
mov
cs
out
insl
mov
jecxz
ret
popf
mov
lret
ljmp
in
pop
nop
pop
adc
lods
repnz
sbb
aad
push
jne
js
int
add
inc
ror
dec
or
xor
mov
sbb
popf
add
inc
mov
cwtl
sbb
in
sub
fistpl
fdivrl
mov
dec
in
mov
xchg
stc
repnz
roll
mov
adc
xchg
and
xchg
dec
jg
idivb
pop
add
das
sbb
test
inc
and
add
xchg
and
call
movsl
mov
js
test
or
sti
sub
aad
dec
ss
sub
ds
push
cmp
inc
jnp
test
rcrb
aam
mov
rclb
push
stos
sub
data16
jp
ret
loope
mov
aaa
xchg
pop
icebp
add
lods
or
fiadds
jp
cwtl
jp
repnz
fdivr
mov
dec
stc
pop
out
jne
js
fcoms
mov
pop
dec
push
mov
xchg
push
fildll
and
push
arpl
or
call
std
pop
icebp
mov
pop
mov
out
call
call
cmp
sub
jo
pop
fwait
insl
fadds
scas
movsl
jp
jle
add
jbe
test
pop
out
imul
inc
add
out
in
enter
mov
inc
jecxz
add
push
mov
xchg
lock
sahf
mov
es
mov
insl
sar
add
stos
push
hlt
mov
fwait
inc
sti
and
outsl
ds
add
jo
add
fsubrp
sbb
push
pop
adc
in
addl
jmp
sbb
inc
cmp
inc
add
cmpsb
or
mov
xlat
xchg
std
push
lods
inc
fs
mov
mov
out
out
fistps
shlb
mov
call
stos
les
movsb
pushf
inc
or
push
push
int
push
fs
jbe
xchg
xor
inc
dec
ret
out
popa
jge
pop
and
fists
or
pop
pop
jg
inc
aad
clc
push
push
outsl
ficompl
adc
call
and
pop
adc
or
jmp
loop
xor
ret
insl
push
mov
out
leave
ss
enter
add
es
pop
rolb
and
std
add
dec
pop
cltd
push
lcall
imul
lahf
jle
xchg
lods
rolb
add
sahf
lea
cmp
lea
aam
shl
cmpsb
pop
jno
lods
xorl
and
mov
and
xor
and
stos
add
xchg
jne
ljmp
mov
mov
and
nop
cmp
lods
inc
bound
fmull
daa
popa
jb
ja
jg
test
lahf
loopne
popf
mov
push
std
xchg
pop
push
mov
mov
ret
pop
jmp
sub
in
lret
mov
or
fiaddl
sbb
mov
xor
add
insb
pop
nop
shll
xor
cld
sbb
sub
cmp
mov
ss
out
jg
pop
fcmovnbe
cs
add
mov
pop
mov
inc
pop
sbb
into
popf
add
mov
add
leave
ds
lahf
fcomps
sar
xchg
ja
mov
add
pop
fiadds
dec
les
or
inc
mov
inc
rorl
dec
dec
inc
jne
and
pushw
mov
push
pusha
or
sub
inc
pop
xchg
jge
ds
or
out
dec
sbb
or
xor
xchg
pushf
ss
dec
mov
xchg
sub
sbb
adc
push
inc
mov
adcb
outsl
popf
daa
fldcw
fbstp
fildll
or
mov
xchg
inc
and
clc
jbe
into
mov
sub
fs
adc
stos
das
out
cwtl
movsb
stos
popa
mov
jns
dec
dec
pop
mov
fwait
imul
pushl
faddl
mov
cmp
or
cmpsl
push
or
dec
lea
outsb
les
nop
or
sbb
das
push
xor
cmp
push
pusha
std
cmp
add
cmp
mov
mov
lea
or
inc
cli
loop
fcmovnu
jl
adcl
dec
fwait
inc
loopne
dec
or
inc
mov
shrb
cmpl
mov
and
jns
int3
inc
mov
rcl
inc
jns
mov
add
in
xor
lcall
addr16
inc
movsl
and
mov
sub
clc
mov
xchg
enter
popa
rdpmc
adc
xchg
sbb
xor
mov
mulb
rolb
jge
sbb
sarl
jle
mov
in
in
or
in
add
fs
adc
pop
gs
pushf
or
cmpsl
mov
sbb
test
adc
sub
and
and
jbe
bound
pop
mov
inc
dec
dec
mov
ret
mov
call
sub
insl
fsubrp
jg
push
xor
mov
lds
sbb
mov
in
lret
mov
and
outsl
stos
mov
sub
into
xchg
decb
movsl
arpl
lahf
imul
lods
add
add
popa
daa
lret
mov
or
sbb
and
jae
iret
popa
add
pushl
into
lcall
jle
sub
push
lret
jns
or
cmp
xchg
mov
cmpsl
mov
cld
mov
mov
and
or
sahf
inc
dec
pop
outsb
inc
lods
xchg
mov
in
cmp
idivb
inc
movsb
pop
es
add
inc
xchg
push
jmp
leave
stos
callw
bound
es
cwtl
dec
jno
ja
or
cltd
add
sub
faddl
xchg
pushf
cmp
cmpsl
jno
mov
or
outsl
lret
jo
pop
lahf
and
adcb
int3
add
fwait
pop
mov
sbb
mov
jg
dec
leave
mov
arpl
test
xor
mov
add
mov
icebp
es
pop
add
xchg
pusha
mov
enter
lret
bound
es
xor
mov
mov
test
fstl
lret
mov
push
push
xchg
xchg
fiadds
jnp
add
jbe
inc
mov
loope
hlt
xchg
cmc
insl
xchg
push
xor
mov
lret
xchg
inc
stos
fildl
mov
sahf
and
movb
into
mov
stc
aaa
push
xorb
sti
fstpt
dec
mov
cwtl
and
adc
sbb
in
mov
mov
outsb
add
movsb
sbb
js
xor
test
mov
movl
orb
addr16
sbb
ds
mull
cmpsb
add
xchg
rorb
movsb
mov
cmpsb
dec
mov
lods
jnp
and
or
shlb
cmp
std
test
cwtl
xchg
js
fistpl
pop
pop
jns
loopne
xor
cmp
sti
mov
or
cmp
pop
mov
ret
inc
cmp
and
mov
fimull
and
mov
dec
out
cmpb
data16
sbb
fiadds
mov
popl
fwait
addb
test
sbb
add
mov
xor
mov
lret
xchg
fldln2
mov
test
test
cmp
andb
cmp
add
push
pop
cmc
leave
push
add
ret
add
push
out
mov
and
fdiv
pop
and
cmp
in
mov
mov
jle
cmpsb
testb
dec
daa
mov
mov
cwtl
mov
or
jle
pop
pusha
sub
push
mov
xchg
xor
inc
push
dec
frstor
push
push
dec
bound
pop
mov
sub
xor
ds
xor
push
mov
shlb
stos
and
add
mov
roll
pop
jae
xchg
dec
pop
shr
test
loop
lock
shlb
je
push
or
icebp
jno
lock
vphaddubd
mov
cli
fwait
cmpsl
or
mov
cli
xchg
cmp
popf
xchg
cmpl
cwtl
xchg
dec
call
cld
sub
mov
push
lods
jp
sti
cmp
mov
outsb
xor
xor
adc
fistl
sbb
imul
xlat
inc
sub
push
inc
mov
clc
add
mov
push
call
sahf
jnp
xlat
test
add
test
mov
mov
test
sar
sub
dec
inc
bound
mov
mov
movsl
inc
popf
jae
hlt
test
inc
pop
mov
cmp
pop
aam
jnp
adc
inc
loop
loopne
lret
lea
shll
cmc
aas
sahf
inc
test
push
in
cmp
cmpsl
cmpsb
push
inc
enter
mov
jle
jae
mov
dec
mov
out
sbb
testl
aam
jp
cmp
es
dec
and
stos
test
mov
add
push
pop
imul
dec
pop
test
lods
in
push
jo
dec
leave
xchg
outsb
inc
repnz
pop
out
mov
sub
jb
je
jne
or
and
loope
daa
mov
jle
adc
add
test
mov
push
loope
sbb
mov
mov
out
jbe
outsb
int
out
or
xchg
xchg
lahf
es
outsl
cmp
adc
roll
int
imul
jb
dec
pop
xor
inc
cld
outsl
dec
aam
xorb
int3
lock
sar
aaa
pop
lods
cwtl
dec
scas
out
arpl
and
test
cltd
aad
hlt
fiaddl
cmpsb
rcr
add
addb
add
cmc
bound
out
adc
add
aaa
mov
mov
pushf
cwtl
pop
and
sbb
xchg
clc
xor
cli
roll
adc
sbb
pop
insl
in
loope
or
jmp
add
or
xchg
add
push
shll
out
pusha
inc
cmp
adcl
pop
inc
getsec
aam
ret
mov
repnz
nop
lret
jne
repnz
cmp
mov
fadds
stos
addb
pop
xchg
es
mov
mov
or
cmpsb
out
daa
insb
test
cltd
inc
cld
shrl
push
gs
scas
cmovno
movsl
cli
or
dec
jp
aam
decb
in
pusha
test
clc
rclb
push
daa
rorb
mov
testl
insw
aam
lret
sarb
addr16
inc
pop
test
ss
loope
mov
or
fstps
popl
or
pop
add
adcb
mov
or
mov
pop
sub
cmpsb
test
jbe
push
mov
mov
call
mov
je
cmovge
mov
mov
push
mov
test
push
jno
add
jae
jbe
push
jmp
jecxz
adc
dec
popa
mull
testb
jbe
cmp
mov
lret
iret
sub
add
add
mov
scas
pop
stos
cld
jb
mov
add
mov
fmull
sub
dec
cmp
and
in
jp
xchg
fstps
sbb
sbb
pop
xchg
push
inc
and
aad
mov
and
sub
cmp
scas
inc
sub
and
aas
sub
xor
jns
mov
adcl
add
inc
inc
cmpsb
inc
sbb
sar
sbb
mov
call
je
sbb
xchg
sbb
loope
call
ret
xchg
xlat
sub
imul
jae
lcall
jae
je
pop
add
je
cwtl
adcl
inc
js
xchg
sbb
out
jmp
enter
push
and
mov
sub
fiaddl
mov
stos
test
inc
ret
ljmp
fldl
xor
xchg
cmp
movsl
xchg
jo
mov
and
insl
jge
xor
jne
sub
or
pusha
jb
add
daa
dec
sti
or
pusha
mov
xlat
enter
out
jecxz
or
or
mov
mov
mov
cmpsl
outsl
mov
or
cmc
add
mov
xchg
dec
mov
cmp
je
cs
mov
jbe
loop
xchg
pop
cmpsl
gs
pop
iret
mov
add
stos
insl
mov
shll
jp
cli
push
aaa
shlb
ljmp
lea
pusha
icebp
ljmp
adc
cmp
pushw
cli
repz
mov
sub
push
aas
add
inc
adcl
nop
sbb
jae
dec
iret
sbb
fisubrs
push
inc
test
sbb
sbb
cmp
loop
inc
andb
out
stc
cmp
je
and
add
xlat
int
pop
mov
sahf
cld
lcall
stc
dec
adc
inc
add
ds
pop
ljmp
aas
and
je
bound
adc
xor
iret
add
jo
add
mov
out
inc
dec
iret
mov
jmp
sub
lret
jo
xor
insb
or
xor
mov
add
sbb
rcrb
jl
outsl
sbb
or
xchg
cmpsb
shlb
xchg
aaa
jmp
and
inc
xchg
add
js
add
repnz
xchg
push
inc
cs
add
les
add
dec
fwait
pusha
lods
sahf
rcrb
and
adc
adc
out
cmpsb
mov
jnp
xor
push
popf
add
es
mov
add
dec
sbb
add
pop
cltd
popf
nop
mov
jnp
fwait
or
xchg
jne
xchg
dec
xchg
gs
hlt
or
add
lock
xor
cli
inc
test
jbe
cmp
das
adc
pop
decb
push
movsl
stos
shrb
sbb
daa
in
sbb
pop
std
bound
inc
pop
mov
mov
sub
aam
cmpl
sbb
js
fcoms
sbb
out
sub
cmp
jnp
xchg
pop
sub
stc
scas
bound
add
mov
sbb
sbb
fidivl
add
inc
xchg
sbbb
rolb
mov
js
std
mov
mov
mov
lcall
dec
fistpl
push
add
repz
pop
lock
xchg
add
inc
aas
cld
pop
cltd
add
outsl
mov
data16
xchg
testb
fs
mov
test
sbb
dec
cmp
sahf
sub
jecxz
cli
sub
test
mov
dec
ja
mov
shrb
ss
xchg
jle
push
or
inc
movsb
sub
shll
repnz
shrl
jbe
out
sahf
lcall
push
test
xor
pop
jge
out
pusha
mov
adc
iret
inc
inc
xlat
rolb
and
incl
into
icebp
hlt
call
sub
cld
faddp
stos
mov
int3
bound
add
xchg
inc
call
xor
push
add
cli
imul
or
push
daa
in
data16
out
push
add
pop
inc
aad
mov
ja
aaa
push
add
xchg
loop
cwtl
and
mov
push
pop
cld
add
push
sbb
testl
xchg
aas
mov
outsb
std
and
mov
imulb
loope
dec
fwait
rorb
sahf
add
add
cs
test
fsubl
xchg
mov
jp
stos
popa
pop
aad
adc
push
and
or
mov
dec
outsb
xchg
pushf
repz
outsb
sub
mov
aaa
and
sbb
sub
pop
sub
aad
ljmp
je
fiaddl
or
adc
cwtl
repz
mov
pop
inc
mov
aam
xlat
sbb
add
gs
jge
inc
rcr
sub
jbe
mov
roll
mov
xor
stos
gs
stos
enter
inc
cmp
cwtl
dec
pop
sub
mov
push
mov
jmp
dec
into
icebp
sbb
ds
fcompl
imul
or
fiadds
or
repnz
sbb
dec
seto
aaa
mov
add
jo
in
dec
mov
and
adc
icebp
add
stos
ret
mov
pop
xchg
inc
ror
cmpb
mov
jmp
arpl
int
enter
popf
sub
lods
mov
mov
ss
or
mov
xor
jg
fldl
into
push
js
pusha
jbe
ficoms
hlt
cmp
aam
ret
negl
mov
push
mov
add
jno
mov
cmp
mov
jmp
push
mov
in
roll
jge
roll
add
testb
inc
fs
xor
xchg
and
and
jnp
mov
call
int
mov
ds
cwtl
jae
inc
pop
add
cs
cltd
cmp
add
push
mov
inc
dec
in
pop
inc
fdivrl
inc
mov
xchg
addr16
loope
lock
mov
inc
movsl
mov
xor
test
ffreep
cmp
ja
and
movsl
notb
and
xchg
jmp
ds
pop
and
or
fstpl
cld
xchg
lret
jae
cli
dec
cmpb
cmp
and
hlt
and
sbb
jno
in
xor
outsb
lea
sbb
xlat
fsubl
popf
jno
in
mov
loop
loopne
push
je
or
add
bound
pusha
sub
push
xchg
add
pop
or
push
cvtps2pd
jl
or
or
pop
adc
sbb
cmp
pop
faddl
enter
arpl
add
add
or
cli
ret
inc
pushf
lret
daa
and
fcomps
jae
call
shll
incl
fs
and
add
aaa
pop
push
into
adc
cmp
stc
mov
sub
insl
dec
and
pop
lods
pop
cmc
outsb
mov
add
xchg
iret
lcall
xchg
mov
stos
sbb
jne
in
dec
mov
xor
xchg
jo
mov
call
jl
jmp
mov
iret
data16
in
adc
pop
inc
add
repnz
das
inc
stos
xchg
mov
les
and
mov
call
fwait
jge
add
lods
loope
imul
mov
stos
jne
fwait
push
push
xchg
inc
test
push
cmp
aaa
ljmp
push
pop
loopne
fdivrl
jae
cmpsb
imull
leave
xchg
or
int3
movsb
imull
jecxz
sbb
push
mov
sbb
lret
ror
roll
jno
cmp
mov
imul
fildl
lret
mov
xor
mov
push
ljmp
add
sub
add
and
pop
add
cmp
aam
mov
sub
loope
call
sbb
sub
jo
imul
cld
dec
scas
mov
mov
push
sub
add
cwtl
jmp
add
imul
lret
dec
dec
or
popa
stos
mov
fprem
rorb
loopne
xlat
pop
mov
roll
test
add
push
sbbb
mov
jmp
test
and
fcomps
add
xor
into
fwait
jg
pop
xor
pop
fisubrs
sbb
cmp
sbb
add
or
ja
add
inc
xchg
frstor
jecxz
or
dec
mov
mov
sub
mov
xchg
ljmp
adc
lods
pop
ret
int
pop
imul
pop
push
data16
dec
out
or
ds
cmp
add
jl
mov
inc
decl
sub
cld
divb
lret
mov
xchg
mov
invd
std
lods
mov
add
imul
insb
mov
ljmp
mov
int
subb
jecxz
out
and
arpl
inc
dec
aad
sub
cld
xor
out
sub
andnps
stc
cwtl
sbb
push
pop
into
mov
dec
loopne
fs
xchg
aam
xchg
inc
xchg
out
mov
repnz
mov
cwtl
dec
xchg
fldl
cmp
sbb
jns
shr
mov
inc
add
andl
in
jb
sbb
lret
popa
dec
push
push
sarl
in
jb
adc
sbb
jbe
lsl
out
inc
add
je
jno
cmc
xlat
push
orb
xor
or
test
sbb
mov
les
dec
mov
mov
shl
lahf
rolb
mov
lock
repz
movsb
jns
les
movsl
cli
jmp
imul
and
xor
mov
sti
add
test
leave
loope
xor
pop
sar
out
inc
mov
and
addr16
mov
sub
jne
mov
push
popf
adc
fwait
stos
imul
inc
popa
pop
pushw
outsb
inc
faddl
ja
imul
andb
arpl
jbe
das
add
cs
jb
xchg
movsb
lea
push
lods
push
push
push
cwtl
stos
in
cmovae
rolb
arpl
jp
lcall
outsb
sbb
xchg
aad
sbb
add
loop
cmp
pop
xor
sub
les
outsl
es
loop
imul
movsl
mov
int3
xor
inc
fsubrl
out
out
jo
sbb
push
mulb
mov
les
lahf
add
mov
jmp
lahf
fiadds
inc
xchg
sarl
aam
xor
popa
jne
push
or
in
mov
aam
cmp
sub
fs
rolb
mov
push
pop
sahf
es
add
stos
jl
inc
je
or
mov
lds
insl
push
lret
lahf
inc
add
fptan
pop
xchg
daa
fadd
fs
and
inc
std
dec
outsl
repz
add
and
xor
inc
stc
hlt
cmp
aam
gs
cltd
and
pop
adc
or
out
pop
cmc
mov
mov
imul
pushf
inc
inc
jl
push
pop
movsl
or
les
mov
sub
xor
add
inc
mov
jmp
out
fisubs
adc
mov
add
sahf
call
jno
out
mov
imul
js
xchg
jp
iret
pusha
inc
jnp
cmp
adc
stc
cwtl
fcomps
or
xchg
cwtl
mov
add
and
xchg
jne
movq
cmc
ret
test
push
outsb
sub
push
jne
sub
adc
mov
ja
incb
call
mov
adc
mov
jp
adc
jl
jp
sti
out
arpl
shrl
dec
dec
lds
call
mov
fnstcw
addl
pop
cmpsl
in
ret
mov
fisttpll
lcall
call
xchg
mov
or
aas
pop
xchg
adc
imul
inc
sarb
fldcw
adc
insl
jbe
sbb
dec
sub
call
jns
imul
pop
dec
out
or
insb
mov
jmp
pop
sbb
jp
clc
sbb
popf
in
insb
mov
cwtl
mov
ljmp
ja
test
or
mov
dec
daa
outsb
pop
inc
push
lret
dec
pop
cwtl
or
fidivs
adc
lds
jae
fistpl
cmpsb
out
clc
cli
ljmp
dec
or
jne
pop
add
jo
push
cltd
mov
cmp
dec
mov
sbb
cli
clc
std
repz
or
mov
cmp
notb
push
jl
add
xchg
aaa
iret
add
jb
or
ds
loopne
ret
movsb
push
mov
cli
out
insl
xchg
mov
sbb
mov
addr16
pop
pop
xor
sar
clc
jecxz
inc
repnz
dec
inc
jns
mov
lret
sbb
dec
pop
loopne
cmp
cltd
dec
mov
test
push
lret
lret
sub
mov
iret
xor
les
in
and
dec
xor
or
lret
popa
mov
or
mov
dec
rclb
lock
loop
mov
jo
hlt
jb
push
iret
pusha
test
jle
mov
xorl
dec
pop
stos
jge
inc
addr16
and
daa
insb
cli
rcr
fidivrs
sbb
pusha
sbb
jnp
mov
fistps
cmc
insl
out
lods
and
push
xchg
int
sub
add
leave
cmp
cli
cmp
out
addr16
mov
sar
sbb
mov
dec
push
cltd
mov
movb
pusha
insb
cmc
pop
mov
rorl
daa
sbb
js
and
lock
outsb
jns
orl
push
mov
fists
pusha
je
in
mov
push
lret
test
lret
sbbb
pcmpeqd
call
loopne
jo
ljmp
sahf
gs
and
leave
sbb
jle
inc
add
fcomps
or
ret
push
sub
cmp
and
mov
mov
sub
add
sub
into
mov
addr16
xchg
xchg
push
shrl
cmp
push
daa
inc
rcrl
push
mov
adc
movsb
jmp
jno
jp
mov
mov
xchg
out
xlat
inc
pop
aam
dec
cmpsl
pop
adc
and
add
fwait
cmp
push
jge
sbb
xchg
xor
inc
dec
mov
mov
into
call
inc
movsl
lcall
sbb
popf
pop
fdiv
pusha
cli
add
outsb
repnz
mov
rcrl
out
pushl
les
sub
addb
sbb
daa
movsl
mov
mov
or
leave
js
push
fsub
shl
sbb
jg
mov
cs
ljmp
xchg
mov
jb
dec
lahf
cmp
inc
aaa
mov
into
and
push
fldl
sbb
aad
rcrl
out
mov
popl
cwtl
pop
loope
xor
lods
pop
lods
add
push
fcoms
scas
adc
add
into
out
add
jns
or
imul
daa
rcr
leave
inc
std
ja
xchg
add
loopne
inc
pop
pop
jne
mov
js
scas
mov
push
movsl
lcall
jecxz
aam
sbb
cmp
js
xor
xor
repnz
stos
inc
call
pop
lock
mov
js
cmc
push
test
push
fcoml
sbb
aas
lock
or
lods
pop
outsl
repnz
dec
jno
aad
repnz
loope
xor
jo
gs
jnp
lcall
out
pop
out
sub
popa
push
jbe
lahf
das
sbbb
pop
cwtl
pop
xchg
fdivl
jae,pn
decl
ret
pop
mov
movlps
pop
and
xor
or
fbld
test
push
adc
imul
adc
sbb
outsb
in
cld
cmpb
add
fildl
jo
cld
out
scas
pop
sbb
decb
lret
pop
mov
mov
fldcw
fsubrl
add
xor
mov
jge
cmc
xor
mov
jns
ret
push
pop
nop
mov
inc
enter
mov
sub
add
loope
xor
jmp
fadds
out
adc
lea
cmc
inc
xchg
or
jb
xlat
sarb
and
sti
loopne
jmp
add
jne
push
sti
pop
dec
outsb
rol
and
out
xchg
inc
adc
xor
add
dec
sub
leave
cwtl
mov
lock
mov
jbe
xor
mov
push
xor
inc
sub
and
pop
sub
pop
fxch
stos
jbe
jecxz
mov
push
and
outsb
fxam
add
cwtl
pop
lret
enter
decl
sub
and
sub
lds
inc
prefetchwt1
mov
mov
xor
inc
pop
jg
xchg
test
ljmp
push
and
inc
fs
and
stc
jmp
flds
test
pop
data16
daa
add
pop
insl
jl
cs
inc
call
and
xor
push
lcall
adc
nop
mov
out
aaa
jbe
sub
xchg
sub
pop
mov
fsts
push
jmp
fldt
pop
push
or
adc
mov
jp
pop
jge
andb
leave
mov
scas
sub
adc
mov
dec
cltd
fcompl
arpl
test
inc
mov
movsb
cmpsl
jo
adc
arpl
std
pushf
lods
outsl
adc
mov
sbb
faddl
sbb
sub
inc
pusha
lret
cmpsl
push
enter
mov
enter
imul
outsb
xchg
and
lahf
mov
sbb
loop
sbb
cs
call
mov
pop
pop
jne
pop
cmc
int
out
flds
cmp
fcoms
jb
mov
lods
iret
mov
pop
pop
or
pop
push
aaa
mov
push
mov
cmp
sti
inc
dec
aaa
popl
cmpsl
cld
cmp
xlat
lret
adc
jle
jp
mov
add
je
mov
mov
jp,pn
icebp
or
ss
subb
xor
lret
les
pop
sbbb
stos
xchg
cs
ss
xlat
pop
pop
insb
out
cwtl
out
jbe
cmp
adc
cmp
inc
inc
addb
push
shlb
inc
lcall
idivl
cld
sbb
popa
mov
sti
cmp
outsl
pop
inc
adc
in
sbb
xchg
push
ret
in
mov
add
xor
inc
mov
sbb
out
or
sahf
jns
das
and
add
lods
jo
scas
adcl
ljmp
add
or
mov
insl
xchg
gs
add
inc
fldenv
mov
sbb
pop
aad
data16
adc
push
dec
xchg
fisttps
mov
push
inc
add
in
fcomps
or
adc
inc
mov
lret
sub
cli
lahf
push
mov
into
xchg
lahf
mov
xor
rep
push
dec
popf
add
loop
mov
dec
orl
push
out
mov
xor
clc
dec
call
mov
out
out
je,pt
mov
add
inc
inc
stos
cmp
in
inc
inc
stc
out
mov
stos
add
outsb
inc
fbld
push
pop
jae
gs
jmp
xor
pop
mov
loop
scas
leave
pop
mov
inc
mov
dec
add
ret
hlt
cmp
mov
jle
jno
jecxz
sahf
add
and
ret
add
mov
mov
gs
fiadds
fs
mov
mov
mov
sub
xor
push
outsb
inc
aam
cmp
cwtl
pop
and
mov
fdivr
in
test
add
lods
lds
jecxz
xchg
mov
xor
pop
add
or
xor
jb
or
sub
mov
jae
addl
lds
pop
dec
popa
into
mov
dec
sub
ret
adc
pop
mov
push
stos
push
push
mov
jne
jmp
mov
xlat
xchg
imul
std
xchg
int3
add
outsb
ret
dec
xor
outsl
fwait
call
add
sbb
or
or
mov
jb
add
add
sbb
inc
inc
sbb
fsubs
and
mov
jge
incl
pushf
pop
sub
mov
sbb
push
dec
mov
push
dec
push
aas
out
sub
mov
aaa
lea
hlt
xchg
push
inc
jmp
addl
sub
in
negb
inc
jg
scas
jns
out
rcrb
iret
scas
or
shlb
cli
pop
shlb
inc
push
std
int3
pop
xor
xor
adc
adc
pushf
xchg
les
push
inc
pop
or
mov
inc
cmp
js
sub
insb
jle
push
in
cwtl
test
and
js
mov
addr16
sub
inc
bound
and
jne
fnstsw
and
pop
sbb
add
vaddpd
rorb
enter
out
cmp
add
cs
sbb
and
sbb
mov
cmp
push
insb
andb
lret
or
xlat
adc
adc
mov
outsb
mov
jo
repz
cmp
movsl
fdivl
add
fistps
mov
movb
xchg
mov
pop
jb
push
inc
mov
fwait
cmp
aam
pushf
in
xor
pusha
add
cmp
cmp
repz
jge
xor
mov
dec
mov
cmp
out
fcoms
add
ljmp
decb
imul
jmp
test
lret
mov
mov
imul
ljmp
jo
inc
cmpl
insb
push
add
arpl
add
add
cli
into
mov
push
imul
popf
mov
int
xchg
or
add
movsl
jmp
xchg
lcall
xchg
out
push
aad
inc
in
dec
cmp
js
call
dec
add
inc
scas
sarl
das
adc
push
nop
xchg
imull
in
mov
dec
in
mov
filds
cs
lock
dec
shr
iret
movsb
aad
call
call
xor
pop
outsb
pop
in
push
jg
jne
jnp
add
jo
xchg
dec
sahf
popa
shrl
into
cmp
xor
inc
shrl
int
fnstsw
movsl
repnz
jecxz
pusha
pop
cmpb
popa
out
or
out
jp
sub
sbb
xor
sbb
fdivrl
jno
cmp
xchg
mov
lahf
dec
mov
adc
mov
and
ret
add
mov
sbb
into
and
sti
mov
scas
dec
cmpsl
pop
mov
imul
add
jmp
jbe
add
jae
jle
aaa
or
stc
dec
xchg
push
repz
repnz
cmp
pop
jle
cmp
jmp
cmp
mov
or
inc
outsl
dec
gs
xlat
add
sbb
xor
or
adc
addr16
ret
call
sete
mov
cmc
mulb
dec
call
adc
outsl
add
add
pop
jne
popa
into
xchg
leave
adc
test
add
or
sbb
xchg
pop
fmull
insl
daa
push
sub
dec
movsl
push
sub
mov
aad
addl
popa
test
mov
xchg
push
cmp
repz
and
imul
xor
sbb
int
sub
scas
das
adcl
loopne
push
inc
lods
cltd
pop
cmp
dec
test
jl
lcall
in
enter
loop
std
push
shrb
xor
and
inc
inc
jbe
pop
push
rclb
add
push
pop
pop
sbb
jmp
repz
jns
jns
inc
aaa
ja
rcl
mov
or
adc
je
mov
pminsw
and
sub
popa
mov
fwait
outsb
js
adc
xor
insl
ret
in
out
cltd
insb
push
shrb
cmp
je
imull
mov
call
adc
dec
sub
insb
out
jb
inc
outsl
jle
mov
pop
cmp
lcall
xor
clc
adc
push
add
or
inc
in
sti
repz
inc
mov
sbb
pop
fucomp
int3
ljmp
loop
sbb
jl
shlb
push
cmp
pop
and
ljmp
push
lahf
test
mov
pop
lret
mov
aas
cmp
mov
mov
rorb
or
mov
das
aam
inc
xchg
pop
das
jno
sub
adc
aam
scas
pusha
or
cli
xchg
stos
dec
mov
jle
and
ror
loope
dec
shll
ss
cs
flds
dec
and
lock
push
cwtl
in
inc
std
outsb
hlt
sub
rclb
mov
pop
add
dec
clc
jecxz
mov
push
mov
popa
hlt
lods
sbb
mov
pop
and
jg
jae
sbb
arpl
stc
and
shlb
andl
arpl
outsl
fildl
out
add
loop
call
clc
push
inc
mov
or
out
jl
sahf
std
sbbb
or
sbb
out
popf
call
add
mov
call
inc
add
les
adc
shlb
aaa
xchg
add
outsb
mov
fldl
in
cli
jl
add
daa
jns
or
or
std
in
pop
mov
xor
mov
fmull
xchg
push
xchg
add
in
push
push
js
insl
fisubrs
clc
jg
gs
sti
sbb
pushf
mov
ds
pop
dec
stc
test
in
jg
jecxz
xor
ret
mov
testb
adc
mov
or
fwait
sbb
ljmp
bound
aaa
or
nop
adc
cmc
aaa
add
into
cmpsb
stc
push
rcrl
jo
jle
dec
arpl
cltd
jno
pop
stos
rcrb
out
js
arpl
xchg
stos
add
push
dec
dec
push
fmuls
fisubrl
adc
mov
leave
mov
in
imul
mov
lea
dec
jo
mov
dec
roll
and
jle
adc
sahf
or
cmc
mov
jg
bound
mov
inc
aas
xor
mov
pop
cmpsl
fbld
ror
cmpl
inc
fldl
cmp
jbe
sbb
call
xchg
adc
scas
nop
mov
cmp
xor
repnz
or
pushf
imul
outsb
xor
add
or
in
clc
or
test
sub
sub
jp
push
add
insl
inc
fisttpl
push
out
inc
and
repz
rcr
pop
in
outsl
incl
add
mov
inc
popa
gs
int
mov
mov
test
rcll
dec
sti
movsb
jb
je
icebp
shll
sub
fs
subb
decb
aas
jmp
icebp
lret
sbb
and
or
pop
push
xor
rcrl
xchg
gs
roll
mov
mov
xchg
rolb
mov
jo
outsl
jns
out
fildl
imul
fs
dec
lcall
jg
leave
popa
aas
inc
add
pop
cltd
mov
adc
loop
jl
inc
jbe
cmp
jns
mov
pop
inc
xor
pop
loope
fdivs
cmc
lret
add
fldcw
mov
and
cmp
pushf
stos
out
add
mov
imul
jns
cmp
lea
or
stc
and
xchg
xor
or
mov
icebp
addr16
xlat
sbb
sub
sbb
cli
stc
pop
rcrb
ret
sub
or
loope
out
je
gs
lock
enter
sub
dec
sti
add
add
lock
sahf
push
or
xchg
out
jl
jg
in
ja
xor
in
icebp
inc
sub
dec
and
add
das
mov
ret
xor
loop
sbb
aaa
icebp
cwtl
lock
faddp
into
cmp
push
aam
adc
jne
ss
cmp
cmp
mov
fadds
mov
andl
addr16
loope
aad
mov
les
push
dec
sbb
and
in
inc
sbb
and
lods
sti
mov
pop
mov
data16
xchg
adc
jb
jl
xlat
dec
inc
inc
adc
xchg
sub
xchg
outsb
add
jecxz
cs
outsl
ret
test
pop
and
and
inc
adc
cmp
sbb
mov
leave
dec
test
aaa
leave
mov
pop
fs
lods
fcoms
daa
lock
je
out
js
andl
sub
sub
pop
int3
je
in
int3
clc
sar
clc
cmp
insb
movl
and
and
call
mov
or
scas
lock
xor
push
xor
imul
aas
mov
negb
mov
gs
push
sbb
xor
sub
mov
fldt
or
cmpsl
jo
jecxz
pop
xlat
pop
inc
mov
jno
cmp
gs
and
das
jb
dec
inc
dec
jnp
push
jo
push
pop
nop
mov
sbb
addr16
add
test
out
sbb
popa
les
lds
mov
inc
sub
and
popl
icebp
outsb
stc
ficomps
lret
adc
pushf
sbb
sbb
sbb
cmpsl
dec
popf
insl
je
in
add
cmp
pop
push
xchg
and
mov
imul
cmp
or
dec
xchg
mov
push
into
fldz
adc
in
dec
inc
pushf
add
sub
movsl
in
jns
mov
icebp
inc
fldt
cld
jnp
fidivl
inc
cwtl
pushf
mov
cmpsl
cmpsb
mov
mov
mov
and
add
je
pop
imul
imul
test
mov
test
mov
add
test
out
decb
cmpsb
adc
pop
mov
call
out
scas
lret
repz
add
test
cmp
int3
mov
add
adc
inc
ljmp
pop
xor
mov
hlt
push
outsb
pop
rcr
std
ja
xchg
or
xchg
pusha
cmpsl
sarb
rcll
push
mov
add
jb
int3
cld
test
or
or
xor
in
lock
pop
movsb
pop
test
scas
sahf
je
inc
lcall
pop
jg
outsb
inc
sbb
xchg
xor
cmp
aad
loopne
dec
test
rorb
imul
ficomps
mov
jecxz
ljmp
mov
jmp
inc
sbb
pusha
dec
xor
idivb
jmp
lods
jp
pop
stc
imul
xor
xchg
dec
xchg
mov
cs
xor
daa
outsl
push
dec
packsswb
fcmovnbe
js
mov
jb
cmpsb
push
ljmp
cmc
into
pop
xchg
xchg
leave
mov
mov
movsl
cmp
push
popf
nop
aas
mov
push
imul
dec
icebp
aam
push
mov
sub
lret
push
gs
or
push
push
ljmp
mov
aaa
mov
out
arpl
pop
or
aaa
push
into
ljmp
in
mov
mov
mov
lret
ds
std
pusha
sar
loop
dec
out
and
aaa
je
lds
popf
xor
insl
and
or
lods
cwtl
adc
js
cwtl
xor
addb
clc
cwtl
out
faddl
add
andb
add
mov
pop
inc
add
add
or
add
add
sbb
inc
xchg
cwtl
out
faddl
add
andb
fadd
add
xchg
dec
cmp
ljmp
inc
sbb
mov
fwait
pop
cmp
add
test
into
in
adc
dec
push
icebp
cmp
mov
push
mov
hlt
sbb
sbb
or
jge
jle
leave
inc
xchg
add
adc
fidivs
subl
out
lods
fimull
push
fwait
and
sbb
jb
pop
sbb
insb
andl
stc
shlb
mov
das
or
leave
inc
dec
inc
mov
mov
testl
and
test
sahf
jo
xor
or
movsb
outsl
mov
jb
shlb
sbb
jle
and
ss
nop
add
rcll
mov
das
shll
pusha
movsb
sub
or
in
adc
dec
sbb
data16
mov
loope
xchg
mov
jecxz
add
popa
sbb
addr16
push
ficoml
mov
arpl
pop
sub
repnz
stc
ret
xchg
push
fisubrs
dec
lods
movsb
jg
dec
xchg
or
xor
fdivs
scas
lea
shl
es
cmpb
mov
push
adc
push
ljmp
imul
pop
js
orb
cmp
or
dec
push
or
inc
push
and
je
mov
inc
repnz
je
enter
sbb
sub
ja
pop
outsb
add
sti
xchg
cs
addr16
push
aam
pop
scas
andb
hlt
lods
popa
movsb
sbbl
add
push
mov
push
mov
or
pop
fmull
scas
xchg
sub
dec
pop
push
repz
ljmp
popw
inc
push
dec
addr16
adc
mov
cmpsb
aas
or
adcl
add
jbe
push
lahf
sub
add
sub
aad
fists
mov
repnz
jmp
icebp
icebp
mov
addr16
inc
incl
cmp
enter
ja
add
sub
rcrb
xchg
dec
clc
push
cltd
addr16
inc
aas
lock
mov
mov
xchg
xchg
inc
cmc
imul
ret
lcall
mov
gs
mov
cwtl
pop
mov
call
shlb
cmp
mov
add
add
sbb
inc
xchg
cwtl
out
faddl
add
andb
add
mov
pop
inc
add
add
or
add
add
sbb
inc
xchg
cwtl
out
faddl
add
andb
add
mov
pop
inc
add
add
or
add
add
sbb
inc
xchg
cwtl
out
faddl
add
andb
add
mov
pop
inc
add
add
or
add
add
sbb
inc
xchg
cwtl
out
faddl
add
andb
add
mov
pop
inc
add
add
or
add
add
sbb
inc
xchg
cwtl
out
faddl
add
andb
add
mov
pop
inc
add
add
or
add
add
sbb
inc
xchg
cwtl
out
faddl
add
andb
add
mov
pop
inc
add
add
or
add
add
sbb
inc
xchg
cwtl
out
faddl
add
andb
add
mov
pop
inc
add
add
or
add
add
sbb
inc
xchg
cwtl
out
faddl
add
andb
add
mov
pop
inc
add
add
or
add
add
sbb
inc
xchg
cwtl
out
faddl
add
andb
add
mov
pop
inc
add
add
or
add
add
sbb
inc
xchg
cwtl
out
faddl
add
andb
add
mov
pop
inc
add
add
.byte
.byte
.byte
.byte
push
call
pop
sub
mov
push
pusha
mov
sub
mov
cmpb
jne
movb
jmp
popa
pop
mov
pop
jmp
jmp
jmp
mov
mov
test
je
add
jmp
add
call
push
push
push
push
call
mov
push
mov
add
call
mov
add
pop
call
push
push
push
push
call
mov
push
mov
add
push
call
add
mov
mov
add
mov
rep
mov
aad
ret
push
add
rorb
mov
int
mov
jbe
add
xor
shrb
or
add
mov
mov
inc
div
add
nop
call
int3
mov
cmpsb
mov
or
sub
sbb
mul
inc
pop
enter
push
outsb
push
sub
rorl
mov
sub
lret
or
cmc
cmp
sarb
pop
add
testb
mov
inc
add
out
adc
pop
add
add
call
enter
pusha
sbb
inc
sub
andl
mov
cmp
add
out
out
sti
loopne
push
lock
jmp
js
add
or
push
pop
pop
mov
ljmp
or
jmp
lock
in
adc
sbb
add
add
out
shlb
xor
ret
rorb
xorl
jne
fsubs
stos
dec
mov
sbb
pop
nop
push
fdivl
push
mov
cld
inc
cld
mov
mov
inc
aaa
push
push
push
jns
popa
add
pop
pop
pop
and
sub
test
sarl
or
and
call
sub
rorl
popf
das
mov
add
sbb
sub
xor
pop
mov
adc
movsb
dec
dec
test
mov
cltd
dec
in
add
loop
add
xchg
mov
xchg
mov
inc
and
clc
pop
push
sub
movsb
pop
mov
data16
lea
inc
and
mov
cmc
cmpl
aam
mov
inc
fbstp
in
push
or
mov
int
roll
pop
sbb
cwtl
movsb
jmp
sbb
pop
pop
mov
dec
mov
add
je
and
je
jecxz
inc
sub
inc
lds
je
or
lea
lret
sbb
push
inc
adc
push
rclb
adc
adc
pop
bound
push
mov
or
add
adc
adc
sub
mov
ljmp
sbb
mov
adc
test
test
incl
dec
mov
out
push
sub
movsb
stos
push
pop
dec
jmp
das
or
or
push
jp
mov
push
fstl
pop
jmp
jne
mov
add
and
add
jmp
or
addb
std
inc
clc
out
rcll
adc
sub
adc
mov
push
pop
dec
inc
dec
xor
fwait
and
int
scas
dec
and
inc
call
adc
cmpb
pop
add
sbb
adc
std
or
dec
dec
pusha
add
or
push
add
pop
lds
iret
push
xchg
xchg
cld
bound
test
sub
sub
bound
test
or
leave
add
adc
sbb
cltd
xchg
mov
enter
and
or
roll
cmp
adc
push
dec
cltd
jo
adc
cmp
mov
sub
sbb
push
and
cmpb
je
inc
es
sub
sub
subb
mov
mov
test
mov
dec
xchg
mov
push
adc
adc
dec
jge
ret
mov
shll
je
in
shlb
cmp
xchg
les
adc
adcl
ds
in
mov
cli
std
xchg
icebp
ja
mov
mov
mov
mov
inc
pop
or
adc
es
mov
cmpsb
daa
ds
repnz
or
ret
push
push
mov
stos
dec
jne
cld
pop
pop
in
pop
shrb
or
je
inc
add
ret
mov
shlb
jp
decl
xor
arpl
and
adc
sbb
div
or
jne
jmp
movsb
cmp
lds
add
jae
lds
or
cmp
and
jecxz
push
sub
ret
mov
insl
mov
shll
mov
push
xchg
cmp
adc
shl
dec
adc
jne
daa
mov
pop
jmp
scas
shl
ljmp
adc
mov
in
loop
lret
scas
sbb
outsb
mov
cmc
data16
cli
xor
adc
sbb
aas
xchg
and
or
daa
sub
sahf
cmp
cmc
jmp
and
test
adc
mov
inc
sbb
sti
inc
adc
or
cmp
cmp
out
xchg
push
dec
jae
push
shr
mov
mov
in
call
dec
lock
add
xor
pop
inc
lret
hlt
pop
inc
add
in
pop
mov
dec
fnstsw
in
dec
adcb
cmp
cmpsl
or
ficomps
rcrl
mov
mov
daa
mov
out
adc
add
pop
sub
push
push
lods
xchg
out
js
mov
mov
jmp
sub
mov
mov
add
add
fs
pushf
jl
lret
jnp
jmp
sub
push
push
pop
pop
imul
or
rcrl
enter
or
inc
shl
push
ret
push
mov
dec
int
in
push
fnsave
add
pushl
and
add
push
scas
push
jp
js
push
jmp
pop
mov
xor
orb
stos
sub
dec
pop
cmp
aaa
xorl
add
lret
or
push
xor
pop
adc
lea
repnz
in
add
imul
add
ret
mov
add
mov
cmp
je
cmp
je
ret
mov
imul
jmp
mov
imul
add
ret
mov
mov
shr
xor
mov
div
or
jne
jmp
mov
add
sidtl
mov
add
mov
add
mov
and
and
sub
ret
mov
ret
xor
mov
add
mov
add
mov
cmp
je
shl
dec
cmp
jne
add
mov
cmp
je
shl
shr
sub
cmp
jne
ret
mov
mov
mul
mov
xchg
scas
sbb
outsb
xchg
mov
cmp
jb
cmp
jb
cmp
jb
cmp
jb
add
mov
jmp
add
mov
jmp
add
mov
jmp
add
mov
jmp
add
mov
push
push
mov
mul
pop
shr
mov
add
xor
xor
xor
push
xor
mov
mov
shr
inc
cmp
jne
inc
add
add
cmp
jne
pop
pop
mov
ret
mov
mov
mov
shr
xor
mov
div
or
jne
jmp
mov
push
push
add
sidtl
mov
add
mov
add
mov
and
and
sub
mov
mov
pop
add
xor
mov
add
mov
add
mov
mov
shl
add
mov
pop
ret
mov
mov
mov
add
xor
mov
add
mov
add
mov
mov
shl
add
mov
ret
mov
push
mov
mov
shr
xor
mov
div
or
jne
add
call
mov
jmp
add
sidtl
mov
add
mov
push
push
add
mov
and
and
sub
cmp
mov
je
add
mov
add
mov
inc
cmpb
je
sub
mov
pop
pop
nop
add
mov
and
and
sub
mov
mov
mov
add
xor
mov
add
mov
add
mov
mov
shl
add
mov
mov
test
je
pop
ret
pop
sub
ret
add
add
add
scas
sbb
outsb
xchg
xchg
inc
shl
ret
push
mov
mov
mov
push
mov
add
push
pushl
mov
mov
jmp
mov
mov
add
mov
sub
add
mov
mov
mov
rep
sub
movl
movb
jmp
add
movb
sub
add
mov
mov
mov
rep
sub
movl
movb
mov
mov
popl
mov
pop
ret
xor
mov
xchg
mov
mul
mov
shr
mov
mov
shr
push
xor
xor
mov
div
or
pop
je
inc
mov
ret
xor
mov
xchg
mov
mul
mov
shr
mov
mov
shr
push
xor
xor
mov
div
or
pop
jne
inc
mov
ret
push
mov
pusha
push
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
pop
sub
mov
mov
mov
popa
pop
ret
mov
mov
mov
mov
nop
nop
mov
inc
dec
cmp
jne
ret
mov
mov
add
push
push
push
mov
add
push
push
push
call
ret
xor
mov
mov
xor
mov
mov
nop
nop
nop
mov
inc
inc
dec
cmp
jne
ret
xor
xor
xor
mov
mov
mov
mov
add
inc
dec
cmp
jne
cmp
jne
inc
cmp
je
jmp
mov
mov
rdtsc
add
mov
dec
inc
cmp
jne
ret
xor
mov
mov
add
mov
add
mov
sub
xor
lods
add
dec
inc
cmp
jne
cmp
jne
inc
cmp
je
jmp
push
call
ret
mov
add
push
push
push
push
call
pusha
cmpb
je
cmpb
je
nop
nop
nop
nop
push
mov
add
push
push
call
mov
add
mov
xor
cmpb
je
inc
inc
jmp
sub
mov
test
je
mov
cmp
je
add
mov
dec
jmp
nop
mov
cmp
je
mov
dec
jmp
inc
mov
add
xor
xor
mov
cmp
je
cmp
je
cmp
jne
inc
inc
inc
jmp
xor
div
mov
add
push
call
cmp
jne
mov
add
push
call
cmp
je
popa
mov
add
jmp
lea
mov
mov
cmpl
je
mov
mov
jmp
cmp
je
addl
jmp
ret
xor
mov
ret
mov
jmp
pusha
cmpb
je
cmpb
je
nop
nop
nop
nop
push
mov
add
push
push
call
mov
add
mov
xor
cmpb
je
inc
inc
jmp
sub
mov
test
je
mov
cmp
je
add
mov
dec
jmp
nop
mov
cmp
je
mov
dec
jmp
inc
mov
add
xor
xor
mov
cmp
je
cmp
je
cmp
jne
inc
inc
inc
jmp
xor
div
mov
add
push
call
cmp
jne
mov
add
push
call
cmp
je
popa
mov
add
jmp
mov
mov
add
mov
sub
je
mov
or
je
mov
sub
shr
mov
add
add
movzwl
ror
dec
js
sub
je
jmp
shr
add
jmp
shr
add
jmp
push
shr
mov
shl
mov
and
mov
pop
lea
mov
add
dec
jmp
shr
add
add
loop
jmp
jmp
push
push
pushl
call
mov
mov
add
mov
or
je
add
mov
push
call
or
jne
push
call
or
je
mov
push
popl
mov
or
mov
jne
mov
add
add
mov
mov
add
add
or
je
test
jne
lea
jmp
and
movl
movb
mov
push
pushl
call
or
je
nop
nop
nop
nop
mov
cmpb
je
mov
pusha
mov
mov
mov
cmpb
je
inc
jmp
movb
dec
cmp
ja
popa
movb
addl
jmp
mov
mov
mov
rep
add
mov
jmp
mov
add
jmp
ret
add
nop
mov
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
popa
add
inc
popa
add
push
popa
add
fs
add
jb
add
andl
add
popa
add
shll
iret
popa
add
add
popa
add
mull
add
bound
add
add
add
add
xor
add
add
push
popa
add
fs
add
jb
add
andl
add
popa
add
shll
iret
popa
add
add
popa
add
mull
add
bound
add
add
add
add
add
inc
gs
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
imul
jae
add
inc
jb
popa
je
push
push
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
add
add
je
jns
je
insl
inc
imul
jns
add
add
gs
je
inc
imul
jb
je
inc
imul
outsl
jae
dec
popa
outsb
fs
add
add
gs
imul
add
inc
gs
imul
add
inc
outsl
insl
jo
jb
inc
imul
add
inc
gs
outsl
fs
gs
imul
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
add
add
add
push
inc
push
dec
xor
inc
dec
dec
pop
inc
adc
add
loopne
xchg
sbb
add
add
add
add
add
add
add
loopne
add
push
add
add
add
add
add
add
add
add
dec
adc
add
add
add
add
add
add
andb
add
mov
pop
inc
add
add
or
add
add
sbb
inc
xchg
cwtl
out
add
add
bound
popa
jb
jae
gs
insb
jne
je
outsl
outsb
outsl
arpl
bound
popa
jb
jae
gs
insb
jne
je
outsl
outsb
cs
insb
add
je
jb
jae
add
add
add
add
add
add
add
add
je,pn
js
fs
je
jb
jb
add
add
add
add
inc
add
add
add
add
add
add
add
mov
sbb
add
or
add
add
add
add
add
add
add
add
and
add
adc
add
adc
add
adc
add
xor
add
inc
add
add
add
add
add
add
add
adc
add
loopne
add
loop
add
out
add
add
dec
gs
gs
xor
add
jb
jne
insb
inc
insb
insb
outsl
arpl
inc
insb
insb
push
imul
jb
gs
inc
jb
outsl
jb
outsb
arpl
outsb
je
jb
and
jae
insb
jbe
outsb
and
jo
jb
jae
or
and
fs
ja
insb
insb
and
and
insl
imul
add
je
insb
and
arpl
je
outsl
outsb
add
and
jp
add
add
or
add
add
popa
pop
mov
pop
jmp
mov
add
xor
lods
cmp
je
shl
inc
cmp
jne
mov
shr
dec
cmp
jl
shl
jmp
mov
popa
pop
mov
pop
jmp
mov
mov
popa
pop
mov
pop
jmp
xor
mov
inc
mov
inc
mov
inc
mov
shl
mov
shl
mov
shl
mov
mov
popa
pop
mov
pop
push
ret
nop
jmp
int3
int3
int3
int3
int3
mov
xor
mov
add
add
mov
mov
add
push
mov
dec
mov
inc
dec
cmp
jne
mov
mov
popa
pop
mov
pop
push
ret
nop
nop
inc
add
add
xor
mov
add
mov
push
mov
add
mov
xor
dec
inc
inc
cmp
je
cmp
jne
xor
mov
jmp
pop
jmp
nop
js
adc
and
xor
mov
push
test
je
mov
int
mov
jbe
add
xor
shrb
or
add
mov
mov
inc
div
add
nop
call
int3
mov
cmpsb
mov
or
sub
sbb
mul
inc
pop
enter
push
outsb
push
sub
rorl
mov
sub
lret
or
cmc
cmp
sarb
pop
add
testb
mov
inc
add
out
adc
pop
add
add
call
enter
pusha
sbb
inc
sub
andl
mov
cmp
add
out
out
sti
loopne
push
lock
jmp
js
add
or
push
pop
pop
mov
ljmp
or
jmp
lock
in
adc
sbb
add
add
out
shlb
xor
ret
rorb
xorl
jne
fsubs
stos
dec
mov
sbb
pop
nop
push
fdivl
push
mov
cld
inc
cld
mov
mov
inc
aaa
push
push
push
jns
popa
add
pop
pop
pop
and
sub
test
sarl
or
and
call
sub
rorl
popf
das
mov
add
sbb
sub
xor
pop
mov
adc
movsb
dec
dec
test
mov
cltd
dec
in
add
loop
add
xchg
mov
xchg
mov
inc
and
clc
pop
push
sub
movsb
pop
mov
data16
lea
inc
and
mov
cmc
cmpl
aam
mov
inc
fbstp
in
push
or
mov
int
roll
pop
sbb
cwtl
movsb
jmp
sbb
pop
pop
mov
dec
mov
add
je
and
je
jecxz
inc
sub
inc
lds
je
or
lea
lret
sbb
push
inc
adc
push
rclb
adc
adc
pop
bound
push
mov
or
add
adc
adc
sub
mov
ljmp
sbb
mov
adc
test
test
incl
dec
mov
out
push
sub
movsb
stos
push
pop
dec
jmp
das
or
or
push
jp
mov
push
fstl
pop
jmp
jne
mov
add
and
add
jmp
or
addb
std
inc
clc
out
rcll
adc
sub
adc
mov
push
pop
dec
inc
dec
xor
fwait
and
int
scas
dec
and
inc
call
adc
cmpb
pop
add
sbb
adc
std
or
dec
dec
pusha
add
or
push
add
pop
lds
iret
push
xchg
xchg
cld
bound
test
sub
sub
bound
test
or
leave
add
adc
sbb
cltd
xchg
mov
enter
and
or
roll
cmp
adc
push
dec
cltd
jo
adc
cmp
mov
sub
sbb
push
and
cmpb
je
inc
es
sub
sub
subb
mov
mov
test
mov
dec
xchg
mov
push
adc
adc
dec
jge
ret
mov
shll
je
in
shlb
cmp
xchg
les
adc
adcl
ds
in
mov
cli
std
xchg
icebp
ja
mov
mov
mov
mov
inc
pop
or
adc
es
mov
cmpsb
daa
ds
repnz
or
ret
push
push
mov
stos
dec
jne
cld
pop
pop
in
pop
shrb
or
je
inc
add
ret
mov
shlb
jp
decl
xor
arpl
and
adc
sbb
div
or
jne
jmp
movsb
cmp
lds
add
jae
lds
or
cmp
and
jecxz
push
sub
ret
mov
insl
mov
shll
mov
push
xchg
cmp
adc
shl
dec
adc
jne
daa
mov
pop
jmp
scas
shl
ljmp
adc
mov
in
loop
lret
scas
sbb
outsb
mov
cmc
data16
cli
xor
adc
sbb
aas
xchg
and
or
daa
sub
sahf
cmp
cmc
jmp
and
test
adc
mov
inc
sbb
sti
inc
adc
or
cmp
cmp
out
xchg
push
dec
jae
push
shr
mov
mov
in
call
dec
lock
add
xor
pop
inc
lret
hlt
pop
inc
add
in
pop
mov
dec
fnstsw
in
dec
adcb
cmp
cmpsl
or
ficomps
rcrl
mov
mov
daa
mov
out
adc
add
pop
sub
push
push
lods
xchg
out
js
mov
mov
jmp
sub
mov
mov
add
add
fs
pushf
jl
lret
jnp
jmp
sub
push
push
pop
pop
imul
or
rcrl
enter
or
inc
shl
push
ret
push
mov
dec
int
in
push
fnsave
add
pushl
and
add
push
scas
push
jp
js
push
jmp
pop
mov
xor
orb
stos
sub
dec
pop
cmp
aaa
xorl
add
lret
or
push
xor
pop
adc
lea
repnz
in
js
add
add
add
add
add
or
add
add
add
add
add
or
add
incl
push
add
add
add
or
add
incl
dec
add
add
add
jo
add
nop
add
add
inc
mov
movsl
popf
push
cmpsl
fnstsw
push
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
mov
add
incl
add
add
add
mov
add
add
adc
add
adc
and
add
sti
add
add
adc
add
sbb
and
add
add
push
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
inc
add
adcb
add
sub
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
addb
add
mov
add
add
add
add
jne
add
add
xorb
add
enter
xor
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
mov
add
add
add
add
add
add
add
add
fildl
add
add
add
add
add
add
mov
add
add
add
insb
inc
add
sub
add
mov
add
add
add
lods
fadds
add
add
add
add
add
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
sub
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
xor
xor
xor
xor
add
add
sub
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
add
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jb
outsl
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
outsl
add
add
js
add
add
add
add
add
and
add
add
add
add
add
jne
and
add
add
call
jne
adc
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
ja
add
or
push
ja
add
push
jo
add
push
add
add
push
add
add
incl
jo
add
add
out
loopne
add
add
loopne
incl
add
incl
add
popl
add
add
add
add
add
pop
add
rorb
add
sldt
rorb
add
sldt
rorb
add
jg
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
ja
add
add
add
or
incl
ja
jo
add
add
incl
ja
add
add
add
incl
jo
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
decl
add
add
add
decl
add
add
add
add
decl
out
mov
out
out
out
out
add
add
inc
cld
add
addb
clc
add
pop
clc
add
pop
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
aas
sti
ljmp
add
add
add
add
add
add
add
add
add
add
add
incl
inc
cld
cmp
inc
cld
pop
clc
aas
cld
pop
sti
cld
pop
sti
cld
jg
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
inc
sti
cld
cmp
clc
cmp
sti
ret
clc
aas
sti
inc
cld
add
rolb
clc
add
pop
clc
add
pop
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
aas
sti
ljmp
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
ja
add
add
add
or
incl
ja
jo
add
add
incl
ja
add
add
add
incl
jo
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
decl
add
add
add
decl
add
add
add
add
decl
out
mov
out
out
out
out
add
add
inc
cld
add
addb
clc
add
pop
clc
add
pop
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
aas
sti
incl
add
add
add
and
add
add
add
add
add
jne
and
add
add
call
jne
adc
add
add
sub
add
xor
in
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
sub
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
xor
xor
xor
xor
add
add
sub
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
add
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jb
outsl
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
outsl
add
add
js
add
inc
dec
cmp
cmp
data16
jno
cmpl
or
pop
mov
int
mov
push
push
jo
outsl
addr16
insl
xchg
outsb
pop
dec
je
bound
iret
jne
cwtl
imul
add
fs
inc
push
inc
inc
dec
xor
add
lods
pop
jo
sbb
and
sub
sbb
adc
call
push
mov
inc
push
sbb
inc
add
xor
or
mov
mov
mov
cmpsl
or
pop
or
fwait
dec
push
push
push
les
adc
or
add
loope
adc
sub
enter
sbb
adc
inc
jmp
cmpsb
gs
or
push
je,pn
gs
les
fmull
xchg
adc
or
mov
push
pusha
push
inc
dec
inc
dec
jb
and
iret
and
dec
shlb
sbb
popa
je
inc
outsb
mov
xchg
xchg
jo
aad
cmpsb
and
xchg
arpl
insb
in
cmpsb
hlt
aam
or
sub
outsl
arpl
cld
and
int3
add
cmpsb
or
xchg
xchg
dec
xor
mov
dec
bound
bnd
repz
inc
push
fisttps
dec
xor
rcrb
dec
rcll
out
or
push
push
aam
adc
cltd
or
push
int
pop
or
or
dec
dec
inc
inc
push
push
lcall
and
inc
test
pop
int
sbb
lock
mov
comiss
addl
std
mov
push
push
cmp
arpl
adc
sub
or
sbb
call
test
or
dec
and
js
and
fadds
andb
xchg
orl
nop
scas
xchg
adc
aam
sub
xchg
adc
bound
repz
adc
adcb
mov
sbb
push
sbb
ja
or
adc
lahf
sbb
xchg
bound
sahf
push
push
sbb
sub
arpl
out
xor
aaa
and
mov
aam
pop
cmp
into
sbb
mov
addb
enter
adc
mov
in
jmp
sbb
sbb
ror
mov
jp
lock
sbb
adc
xor
pop
out
mov
lock
ret
and
xchg
push
jo
adc
and
bound
adc
test
sub
in
lret
mov
xchg
dec
dec
adc
jo
sub
mov
inc
push
fldenv
xorl
cmpsl
and
aas
inc
jmp
loopne
push
and
jmp
cwtl
cmc
test
and
stos
arpl
dec
mov
or
push
loopne
mov
dec
sbb
or
sub
mov
or
adc
test
sbb
mov
add
dec
inc
arpl
ja
sub
inc
stc
lcall
xchg
stos
xchg
sbb
loopne
les
cs
rorb
lods
mov
sub
adc
jns
push
sti
sub
xor
inc
mov
leave
sbb
shrb
cmp
jo
or
xor
cwtl
xor
icebp
mov
or
xchg
pusha
ss
loopne
leave
and
xchg
sbb
xchg
dec
fwait
dec
mov
push
or
push
and
mov
or
test
int3
cmpsb
pushf
inc
sub
fnstenv
dec
movsb
fmuls
adc
lea
or
or
aam
push
rolb
ret
scas
les
adc
sti
sub
out
or
dec
xor
xchg
and
lods
mov
push
pushf
or
repnz
or
scas
add
mov
lock
les
ds
push
adcb
jg
adc
mov
mov
or
cld
sbb
in
sbb
clc
enter
leave
insb
dec
popa
arpl
das
adc
adc
jmp
jne
sbb
test
xor
mov
adc
jmp
in
inc
lahf
jmp
in
imul
dec
insb
or
mov
mov
cmp
adc
cmpsl
data16
push
mov
mov
test
les
jns
or
push
sub
arpl
xor
and
outsb
add
xor
mov
xor
add
iret
push
sub
test
outsb
mov
stc
popl
adc
dec
sub
aaa
or
jb
sbb
sbbb
adc
or
bound
cmp
stos
pushf
mov
xor
or
or
leave
adc
add
mov
sub
add
aad
xchg
inc
repz
mov
pop
and
aas
push
lods
shll
or
mov
mov
mov
sbb
ret
in
and
pop
imul
sub
inc
lea
jl
jbe
xor
mov
repnz
mov
or
or
sbb
pop
sbb
mov
in
scas
loop
mov
jmp
call
fidivs
cmp
and
push
xlat
shlb
pop
fs
or
leave
or
mov
call
sbb
push
mov
leave
mov
sbb
sbb
xlat
insb
mov
loopne
push
movsb
mov
add
lds
adc
xor
sub
mov
lahf
push
pop
mov
sbb
shrl
enter
adc
mov
and
adc
dec
cmpsl
xor
and
testb
orb
cwtl
add
fildll
shr
sbb
call
mov
les
add
or
sub
push
lret
ror
or
mov
leave
or
xor
xor
sbb
adc
cmp
jp
sbb
push
stos
fsubrs
xchg
call
shll
out
arpl
xor
lcall
cmp
jnp
sub
adc
lcall
aas
adc
mov
sub
test
sbb
fdivl
mov
out
and
jbe
xor
inc
icebp
leave
adc
hlt
dec
inc
loopne
mov
popa
sbb
mov
pop
pop
or
or
pop
or
push
pop
pusha
or
nop
or
or
or
ret
or
or
mov
mov
and
adc
dec
hlt
sbb
js
testl
insl
or
or
or
or
sbb
push
lods
xchg
andb
inc
aad
and
arpl
mov
xor
mov
jg
ds
andb
std
push
mov
pop
popf
or
or
mov
pop
les
pop
rcrl
sbb
or
andl
cld
test
arpl
cwtl
mov
sbb
and
adc
xor
xor
mov
mov
into
dec
imul
and
les
in
mull
mov
xor
and
inc
add
iret
movsb
mov
push
xor
stos
adc
int
hlt
xchg
add
sbb
push
lds
xchg
add
and
lods
call
and
sub
mov
jle
push
dec
xor
dec
or
adc
sub
addl
dec
pop
sub
pop
mov
mov
and
cmpl
lock
sbb
ffreep
mov
adc
sbb
and
or
lret
jmp
and
pusha
in
in
shlb
adc
aaa
or
xor
or
sbb
arpl
int3
xlat
xor
movups
out
and
and
pusha
enter
jge
filds
sbb
dec
loopne
ret
push
icebp
in
mov
popf
sbb
or
sti
xor
push
or
movsl
xor
mov
lods
mov
add
add
pop
xor
push
pusha
call
pop
dec
push
cmp
jno
pop
add
jecxz
cld
or
nop
aaa
ret
mov
movsb
mov
jne
or
jmp
test
dec
shlb
adc
es
lret
add
xor
cwtl
fsubrs
test
xor
test
dec
xchg
adc
or
xor
sub
out
or
frstor
push
arpl
shlb
sbb
in
mov
inc
push
and
xor
and
sub
sbb
fwait
xchg
or
cmp
dec
push
dec
adc
imul
jo
addr16
xor
pusha
cld
arpl
inc
cmp
sub
cmp
sahf
mov
pop
adc
adc
add
xor
dec
or
dec
add
dec
add
or
sub
int3
adc
xor
mov
mov
fldenv
sbb
sub
inc
es
lds
dec
in
shrl
loop
adc
adc
cwtl
aam
aas
mov
jmp
cmp
rcrb
dec
shll
or
or
inc
cwtl
push
pushw
and
adc
daa
les
int
or
mov
arpl
and
cltd
sub
movsl
test
cmp
sbb
or
popf
leave
or
ficompl
or
push
call
je
add
or
push
mov
adc
sub
cld
mov
cmpl
je
adc
or
push
mov
push
jo
add
push
jae
leave
je
jle
jl
sbb
pop
inc
cmp
add
add
sub
push
push
call
mov
enter
xorb
add
pop
mov
pop
pop
sbb
or
or
mov
movsb
mov
and
jmp
xchg
inc
cltd
mov
je
mov
popl
and
sbb
adcb
pushf
adc
enter
mov
sub
adc
fs
mov
xor
adc
mov
pop
push
and
adc
push
fisubrs
lret
sbb
lock
and
adc
rorl
or
ret
adc
adc
push
mov
call
adc
mov
lock
or
mov
lods
cmc
push
jno
mov
aam
push
les
jl
inc
enter
or
mov
mov
aaa
mov
sbb
mov
std
and
and
scas
sbb
mov
inc
and
push
or
and
or
sub
mov
jge
andb
cmp
call
stos
das
mov
cmp
insl
xchg
mov
or
inc
push
adc
mov
sbb
js
push
xor
gs
xor
std
inc
cmp
test
xor
or
mov
dec
sbb
cmp
popf
jne
mov
or
sarb
nop
pop
adc
popf
ret
rorl
xlat
in
inc
mov
cld
pop
cmp
mov
mov
inc
adc
jae
sub
lea
nop
dec
add
push
mov
push
adc
ret
bnd
fbld
ret
push
call
adc
loopne
and
cmp
or
call
add
xchg
icebp
daa
xchg
sub
dec
xchg
nop
xchg
add
dec
cs
adc
push
movsb
add
pop
sbbb
xor
xor
popa
and
cltd
jnp
andb
push
push
nop
addr16
scas
leave
or
and
aas
test
lea
ret
jecxz
jecxz
mov
sub
scas
cmp
loope
jo
cmp
or
xchg
test
ret
sarl
mov
mov
add
inc
lcall
and
xor
add
loope
in
stos
xor
adc
push
inc
adc
fisubrl
loope
and
pop
ret
push
loopne
push
idivb
or
add
pop
loopne
mov
xchg
add
pop
xchg
inc
add
sbb
lar
and
push
call
push
or
push
xchg
sbb
mov
mov
in
mov
pop
jmp
cmpsb
push
sbb
aam
push
push
mov
outsb
inc
jb
xchg
cmpsb
lret
cmpb
test
imull
icebp
cmpl
shrl
out
or
cmp
push
sbb
add
jl
cmp
jbe
push
dec
push
xchg
sub
pop
dec
or
mov
scas
pusha
inc
pop
sub
xlat
dec
lcall
repz
jb
jmp
inc
adcb
cmpsl
notl
inc
addb
ret
or
icebp
lea
cmc
push
mov
adc
jae
and
inc
sub
xchg
adc
jg,pn
cmpb
pop
inc
or
cmp
cmc
mov
ja
lock
fstl
mov
push
push
lcall
adc
pop
filds
add
inc
push
subb
clc
sbb
dec
push
push
cmc
dec
fistl
int3
jne
mov
inc
jecxz
into
ret
sub
test
jo
mov
cmpl
lret
je
mov
cmp
jne
or
out
sub
pusha
lret
shll
clc
inc
or
pop
lock
sub
and
add
mov
xor
and
es
mov
das
and
inc
xorl
cmc
les
cmp
nop
push
je
xchg
mov
mov
inc
fmuls
xchg
stc
pop
movsl
add
adc
adc
les
hlt
imul
nop
lea
pop
repnz
and
hlt
xchg
ja
xor
pop
dec
std
arpl
pop
sarl
mov
mov
or
enter
push
movl
mov
cmc
bound
daa
sub
and
adc
call
xor
cmp
mov
cwtl
insb
xchg
lahf
test
mov
loopne
ret
popa
jecxz
adc
sbb
inc
movl
pop
add
or
adc
add
jb
lea
adc
fistpl
adc
cmp
adc
cwtl
mov
mov
in
jmp
mov
inc
mov
pop
mov
add
movsb
dec
sub
inc
sbb
push
xor
sbb
in
add
test
insl
cmp
outsl
cmc
ljmp
fcomps
rclb
shl
icebp
xchg
dec
mov
shlb
outsb
add
test
dec
push
push
lds
xchg
add
ret
push
cmp
adc
leave
and
sub
push
jbe
sub
divl
jp
or
and
imul
adc
inc
push
xor
xor
pop
add
test
jb
lea
call
loop
mov
out
and
add
xor
push
dec
jno
push
xchg
test
hlt
adc
or
inc
adc
and
cld
pop
ret
adc
cmp
lods
decb
test
sub
adc
add
jmp
and
stc
fwait
add
stos
sub
mov
lods
pop
daa
sub
pop
and
xchg
rorb
or
push
xlat
xchg
dec
es
sbb
orb
mov
inc
test
out
dec
or
unpcklps
sbb
jne
lret
cmp
pop
xor
pop
lret
xor
es
or
sub
sbb
cmpl
add
cmp
and
jne
add
dec
mov
cmpb
inc
in
dec
or
ljmp
decl
lcall
cmp
sbb
dec
or
pop
inc
inc
lods
xchg
xchg
enter
push
inc
jmp
or
lods
adcb
xchg
jmp
xor
or
inc
add
jmp
idivb
pop
add
js
and
jo
cwtl
xchg
mov
sub
jmp
push
inc
dec
push
add
pop
inc
dec
mov
loopne
jmp
sub
loope
add
and
sub
pop
or
sbb
leave
mov
je
aad
or
mov
dec
cwtl
jne
mov
cmp
cmc
add
inc
sub
mov
adcl
out
push
sarb
mov
or
or
jge
pop
and
inc
ds
xor
push
mov
mov
xor
dec
mov
and
add
jmp
pop
xbegin
and
int
pop
into
and
rep
cmp
adc
mov
jne
lea
add
imul
pop
mov
add
sub
hlt
fs
xchg
push
sub
aas
push
fisttpll
mov
fs
xchg
fwait
iret
cmp
lods
pusha
mov
or
clc
add
scas
not
dec
mov
add
or
push
je
cmp
mov
add
loope
cli
sbb
mov
push
std
sub
cli
pop
inc
loop
call
mov
xchg
pop
lahf
jmp
scas
daa
cltd
jnp
push
sub
cmp
ja
cmp
bswap
add
movsb
mov
mov
push
xchg
mov
push
pop
mov
pop
sbb
and
jae
and
inc
xor
or
shl
adc
add
lret
xor
hlt
clc
add
jae
dec
or
cmp
mov
dec
adc
cmp
adc
cmp
pcmpeqw
popf
pop
xlat
and
cli
mov
or
sub
or
mov
imul
jo
arpl
sahf
sub
adc
sub
lcall
dec
jne
mov
out
ret
inc
add
shrb
mov
lods
movsb
or
pop
ljmp
adc
out
fsubs
lret
rcl
and
mov
unpckhps
loop
adcb
jmp
inc
push
adc
insb
rclb
enter
adc
adc
adc
inc
and
and
push
test
cs
loope
int3
jge
movsb
mov
mov
aam
mov
and
dec
adc
and
jecxz
xchg
les
jnp
fnstcw
cld
jae
nop
insb
outsl
sub
push
pop
dec
icebp
push
dec
rcrl
repnz
or
or
insl
ds
pop
xor
pop
fldcw
or
sbb
and
je
mov
add
push
or
or
jno
adcl
and
stc
cltd
dec
or
rcrl
ror
ret
lret
or
leave
enter
xor
les
stos
inc
mov
cli
out
dec
imul
into
push
test
or
push
sub
ja
stc
ret
add
jne
jmp
aas
jl
adc
imull
je
or
mov
pop
sbb
and
jne
or
cmp
adc
orb
adc
divl
sahf
push
xchg
movb
adc
repz
jmp
push
fiadds
mov
fdivrs
arpl
sub
or
push
xchg
outsb
push
aas
fs
push
mov
xor
hlt
mov
pusha
ljmp
mov
fadds
jmp
jge
mov
xor
mov
or
and
aaa
mov
cmp
inc
arpl
mov
add
adc
shl
sahf
adc
je
and
dec
add
jmp
adc
or
mov
mov
mov
sti
and
push
cmp
inc
sbb
mov
ljmp
push
adc
daa
mov
pop
daa
test
sbb
sbb
mov
jo
push
cmp
push
cmc
or
imul
inc
mov
inc
outsb
mov
mov
lret
sub
cmp
sub
and
test
js
mov
push
mov
enter
daa
test
and
sbb
mov
orb
jo
mov
mov
inc
mov
test
pop
test
and
xor
push
lahf
jecxz
and
test
sbb
xor
daa
clc
lret
mov
adc
and
rorb
xor
cmp
cwtl
test
outsb
push
mov
push
stos
aaa
sub
push
push
push
and
and
lods
cmp
int3
inc
push
mov
jmp
dec
add
and
adc
and
mov
jo
and
push
pop
mov
test
or
inc
mov
add
mov
js
orb
rol
inc
xor
int3
add
fmuls
add
mov
or
push
pop
lcall
inc
cmp
adc
adc
das
mov
mov
cmp
sub
xchg
dec
or
or
into
pop
inc
mov
mov
mov
sub
adc
cwtl
jb
jb
or
mov
sbb
call
pusha
dec
push
or
mov
pop
mov
lock
movsl
mov
fs
mov
sub
popa
pop
add
mov
mov
shl
call
xchg
mov
mov
in
and
lret
adc
jle
adc
lock
test
cmp
sbb
dec
andl
jge
xor
adc
dec
lods
push
cmp
add
icebp
xor
add
mov
pop
in
into
mov
int3
or
adc
call
sub
and
inc
ja
push
dec
or
or
mov
or
cld
and
or
adc
push
lret
pop
sbb
andl
decb
push
pusha
push
fwait
mov
mov
mov
sub
aam
js
arpl
adc
adc
mov
incl
cmp
pop
jne
cmc
push
xabort
and
adc
fwait
add
aam
mov
push
push
pop
mov
std
xor
jge
push
std
es
adc
cltd
adc
adc
enter
adc
rorb
fs
mov
fmuls
fmull
loopne
add
rol
call
dec
loopne
lock
or
mov
xchg
cld
jo
fnsave
push
cli
sbb
adc
mov
and
adc
and
xor
sbb
or
mov
and
push
sbb
mov
or
mov
xor
jo
cmp
orb
and
nop
nop
xchg
bound
adc
aaa
jmp
sbb
cmp
fadds
pop
lcall
pop
icebp
inc
or
in
and
call
xor
mov
and
loope
push
pushl
mov
sbb
add
or
sub
cmovge
loop
inc
aas
lcall
pop
add
inc
mov
lea
outsl
push
sub
inc
into
mov
mov
xchg
cmovg
or
cltd
xor
call
push
mov
popf
xchg
xor
or
dec
mov
push
dec
cmpsb
inc
sbb
lcall
enter
pop
xor
int3
pop
cmc
xor
sbb
mov
shlb
pop
imul
push
lret
xchg
jnp
push
call
jbe
int3
pusha
cmp
or
sbb
mov
sbb
stc
push
xor
mov
sbb
or
inc
mov
movsb
mov
mov
pop
xchg
jo
neg
push
rep
or
push
sub
mov
test
movzwl
mov
mov
xchg
loop
icebp
sbbl
cmp
sbb
push
mov
in
repnz
add
adc
adc
inc
or
cmp
or
mov
leave
and
sbb
mov
lock
je
clc
xchg
and
nop
pop
enter
inc
cmp
adc
mov
mov
cmp
enter
add
dec
test
cwtl
cmp
int3
dec
push
nop
inc
push
mov
sbb
hlt
pop
stos
or
sub
call
test
subl
add
adc
loopne
nop
mov
or
jbe
pop
mov
dec
cs
pop
cltd
idiv
push
and
mov
sub
push
das
adc
test
test
or
addb
mov
cmp
add
xor
movsb
cmpsl
add
jns
push
cmp
cmp
mov
push
and
inc
into
push
push
pusha
popl
sub
and
xor
in
sbb
repnz
jo
push
sbb
xchg
shll
adc
mov
cli
lret
stos
sbb
repnz
cld
out
cmpsb
adc
orl
push
inc
push
mov
or
nop
mov
pusha
add
aas
inc
lods
je
cmp
lds
xchg
cmp
adc
sub
hlt
mov
push
je
pop
arpl
inc
adc
inc
sbb
jne
cmpl
push
int
mov
sub
or
lcall
cwtl
cmp
mov
dec
and
mov
inc
fnstsw
cmp
xor
or
and
repnz
out
das
pop
scas
mov
xor
sub
xchg
and
pop
pop
push
ret
out
je
js
call
mov
xchg
xor
lea
xor
ficompl
xchg
in
lea
aas
in
xchg
or
sbb
adc
jmp
dec
jnp
sub
mov
out
add
cli
adc
test
cltd
int
push
xchg
sbbb
das
jo
mov
jo
lahf
xorb
mov
or
inc
imul
cmp
or
xor
inc
or
jae
and
cli
push
mov
xor
push
call
sub
fwait
pop
cmp
jmp
aad
out
shrb
or
mov
inc
iret
call
jl
fiadds
lret
movsb
ficoml
xor
fmuls
aas
dec
std
mov
inc
mov
stos
fldt
push
rolb
sub
sbb
jno
or
cmp
mov
insb
sub
adc
add
cmp
cwtl
sub
popa
movsl
push
xchg
mov
aaa
dec
mov
aad
xor
mov
lea
subl
push
pop
sahf
stc
add
mov
lea
cld
in
or
adc
mov
loopne
add
cmpsl
adc
mov
and
sub
sbb
xchg
pop
bound
and
imul
loop
ret
push
hlt
clc
xchg
push
cmc
test
lods
dec
and
adc
mov
in
aas
xor
dec
jne
mov
add
inc
in
mov
jae
adc
push
aas
adc
mov
or
push
pop
xchg
repz
mov
sub
pop
mov
dec
push
dec
lock
int3
mov
movsb
mov
add
inc
dec
and
fs
and
add
icebp
push
sbb
mov
xchg
mov
sub
orl
mov
les
mov
jle
push
scas
cmpsb
outsb
dec
sbb
dec
fs
sub
test
inc
or
pop
stc
cmp
cmpl
push
pop
xor
jbe
adc
outsb
push
cmpsb
andl
and
xchg
mov
dec
scas
or
inc
or
and
sbb
popf
inc
pop
out
sub
adc
orb
pop
fisubs
fs
adc
mov
or
femms
mov
mov
pop
shlb
add
pop
loope
mov
test
sub
add
pop
in
call
jns
or
cmp
jle
push
pop
lds
mov
in
cld
add
mov
mov
aas
sub
out
popa
pop
sub
in
sahf
sarb
repnz
enter
testb
bound
cli
jecxz
push
stos
push
fs
sbb
pop
jne
daa
pop
xor
lods
push
sub
and
jnp
pop
lahf
mov
test
or
aam
cltd
inc
mov
mov
jp
mov
dec
add
sbb
and
repnz
lahf
movsl
jl
and
sub
sbb
xchg
pop
mov
jge
jno
jb
push
jecxz
daa
pop
inc
out
pop
sbb
dec
dec
fs
adc
outsl
or
out
sbb
jb
sub
pop
or
push
xor
enter
addb
or
pop
test
mov
push
int
dec
jbe
addr16
sub
cmp
das
incb
mov
pop
sbb
push
mov
xor
call
sti
hlt
mov
scas
outsb
xchg
popa
rcrl
inc
lea
and
and
push
repnz
repz
add
ljmp
jmp
push
cld
aad
xor
sbb
stos
and
mov
or
or
mov
jne
sub
test
adcb
sbb
xchg
test
pop
enter
push
mov
jo
mov
xor
or
movsb
test
adc
mov
mov
add
inc
das
push
inc
jmp
testb
push
xor
shrb
dec
adc
stc
adc
enter
inc
or
cld
mov
add
repnz
movb
dec
in
xorl
mov
add
mov
adc
adc
push
push
pushf
push
push
or
push
mov
movsb
aas
inc
dec
adc
xchg
imul
outsb
pop
insb
mov
fdivs
push
jb
outsl
arpl
cmc
out
inc
in
popa
je,pt
sti
sbb
outsb
xlat
push
pop
clc
push
push
es
inc
or
mov
sbb
les
mov
mov
sbb
jle
or
enter
adc
cmp
dec
or
mov
loopne
enter
das
and
push
imul
and
inc
in
jno
xchg
or
and
inc
cmp
pop
pop
fcoms
stos
mov
and
inc
or
xchg
inc
and
imul
mov
leave
xchg
out
and
popl
mov
adc
popa
pop
bound
mov
dec
in
stc
adc
nop
and
inc
xor
push
adc
jge
xchg
xchg
mov
fisttpll
mov
or
and
dec
dec
xchg
popa
and
xchg
and
dec
out
stc
sbb
xor
mov
jg
xchg
dec
movsl
xchg
mov
lret
inc
mov
xchg
adcl
dec
dec
xchg
arpl
jne
mov
and
dec
out
sti
adc
xor
and
dec
insl
xchg
jg
xchg
inc
movsl
mov
and
inc
add
sub
arpl
mov
popf
and
dec
ret
xchg
aad
jmp
xchg
xor
xchg
insl
and
mov
dec
xrelease
sub
mov
jb
mov
xor
cltd
adc
and
dec
fistl
and
daa
cmp
mov
xchg
mov
sbb
mov
or
cmp
pop
inc
arpl
xchg
adc
jp
sti
dec
adc
dec
sub
dec
outsb
jecxz
popa
insb
bnd
sbb
pop
push
or
push
push
stc
mov
cmpsb
sub
shrl
outsl
jae
adc
adc
arpl
nop
mov
jo
lods
sub
or
push
lods
imul
ret
aam
pop
fsubrl
or
push
or
and
adc
in
sub
insb
and
mov
cmp
push
les
cmpsl
sbb
jnp
sub
pushf
jo
push
shlb
js
fs
and
xor
inc
popa
jo
add
outsb
adc
add
std
dec
sbb
push
outsl
jo
sbb
push
cmp
push
addr16
inc
rorb
or
gs
sbb
adc
jo
cmp
idivl
dec
std
gs
bound
dec
incl
sub
mov
xor
cli
popa
jp
adc
push
or
test
push
mull
xchg
inc
push
std
and
push
pushf
fwait
push
xchg
repnz
arpl
inc
movsl
adc
jns
xorl
inc
insb
inc
jno
std
mov
leave
int3
inc
jle
cwtl
cld
gs
and
inc
shrl
xchg
pop
insb
sub
inc
adc
xor
imul
dec
and
add
or
dec
js
sbb
shrb
inc
jle
jmp
pop
lods
adc
cmc
dec
jle
sub
lret
xchg
adc
xor
inc
inc
cmp
imul
lock
sub
dec
sub
and
push
adc
adc
andl
adc
jae
jmp
test
mov
push
push
outsb
push
jl
arpl
leave
push
sub
jns
int
jbe
dec
ja
add
mov
sub
scas
cs
pop
shrb
fs
popa
js
add
push
pop
gs
dec
sahf
jne
inc
cmc
cmpb
bound
test
sub
imul
inc
xchg
fdivs
mov
popa
jae
out
fisttpl
popf
or
push
mov
arpl
incb
das
lret
sbb
movsb
adc
jg
adc
sahf
add
push
jae
jb
call
or
dec
stos
sub
inc
lock
nop
decl
loope
and
add
addr16
push
inc
shll
and
xchg
sbb
dec
sbb
xchg
add
add
jo
jge
movsb
sub
cmp
and
pop
dec
cmp
inc
test
sbb
adc
nop
inc
push
pop
inc
adc
mov
movsb
adc
mov
push
and
adc
add
pop
adc
test
insb
sub
lods
dec
xchg
and
and
adc
test
in
ss
shlb
dec
cmpl
adc
add
xor
sbb
adc
and
adc
enter
mov
push
pusha
sub
je
dec
and
add
adc
sub
adc
inc
adcb
or
adc
xlat
adc
mov
test
sub
lret
or
and
push
and
shlb
daa
add
sub
add
xchg
or
push
sbb
and
or
add
and
or
inc
or
and
adc
or
and
add
push
loopne
push
mov
gs
mov
xchg
adc
test
or
pop
or
inc
mov
or
or
add
and
or
dec
mov
lret
dec
add
pop
push
iret
inc
inc
jb
mov
jecxz
jae
shrb
andl
jp
mov
out
imul
jne
xchg
inc
mov
push
icebp
je
nop
aad
mov
pop
or
test
add
push
shrb
roll
repz
dec
sbb
cltd
add
dec
sub
bound
add
sbb
jge
std
push
sbb
decl
sahf
add
or
add
sbb
dec
out
adc
adc
movsb
sub
inc
adc
fcmovne
add
xchg
dec
sbb
sbb
adc
or
push
add
and
mov
and
or
ret
mov
andb
ror
sbb
stos
xchg
loopne
xor
clc
sbb
or
push
sbb
pop
test
and
pusha
xor
es
loopne
push
sub
sbb
adc
sbb
subb
mov
add
aad
xchg
sbb
inc
inc
xchg
mov
bound
xor
call
int
es
int3
jo
add
ss
and
loop
inc
mov
sbb
pop
push
fidivs
xor
call
mov
bound
inc
mov
adc
mov
sub
into
roll
test
inc
nop
fnstenv
sub
and
push
xchg
sub
sbb
or
adc
pop
inc
lds
or
dec
fs
adc
and
inc
push
insb
enter
push
mov
and
and
loopne
nop
cmp
add
adc
test
sbb
fsubrs
jl
jo
inc
movsb
test
sub
cmp
and
loopne
adc
mov
push
xor
push
xor
js
adc
call
push
sbb
inc
push
sub
nop
adc
mov
or
or
insb
dec
adc
rorb
adc
or
push
mov
dec
cmp
nop
inc
mov
xchg
mov
shlb
inc
inc
adc
mov
pop
or
adc
or
sbb
enter
pop
and
nop
orb
mov
and
test
push
and
jno
movsl
add
shlb
mov
adc
xchg
fwait
and
and
xchg
inc
and
pusha
lock
dec
cmp
jo
andb
lock
int3
leave
enter
test
adc
inc
and
xor
cld
or
fs
or
dec
mov
or
fcoms
rolb
call
decb
sti
adc
and
dec
clc
xchg
mull
testb
sarb
out
and
enter
jmp
ljmp
inc
lods
cmp
adc
or
and
dec
adcb
rorb
imul
enter
inc
enter
cld
iretw
popa
fisttps
inc
cld
push
inc
cltd
and
pop
inc
mov
int
outsb
xor
orb
and
dec
mov
inc
repnz
inc
lcall
push
dec
fs
js
mov
mov
adc
and
dec
cld
lea
fwait
jmp
dec
inc
pop
outsb
mov
dec
mov
inc
hlt
push
inc
pushf
sbb
inc
pushf
inc
xor
push
or
jp
mov
fmuls
adc
xchg
dec
and
jo
jmp
mov
pop
imul
fisttps
xor
pop
jo
das
outsb
jns
jnp
inc
pop
push
or
xor
mov
sub
mov
cltd
push
scas
imul
add
jb
push
aad
pop
setno
adc
out
loopw
bound
push
popa
jo
sti
aad
jl
xchg
lds
dec
or
mov
inc
xchg
aas
dec
ja
mov
dec
ficoms
jno
adc
je
lahf
jg
dec
jl
cmp
movsb
stc
add
pop
out
cmc
insb
divb
outsl
jne
inc
push
in
pusha
jbe
inc
jne
jns
pop
test
sahf
sbb
push
popa
imul
in
mov
gs
jbe
cmpsb
and
jecxz
xchg
out
movsb
mov
pop
push
pop
out
push
adc
mov
repnz
sbb
push
repnz
push
data16
xchg
mov
sti
cmp
sub
mov
jo
sub
mov
movsb
fcoms
add
pusha
push
mov
je
sahf
inc
in
inc
adc
imul
adc
clc
push
xor
sub
mov
pusha
push
push
sub
adc
add
mov
sub
add
pop
inc
adc
push
xor
roll
les
sub
nop
xchg
in
mov
push
push
and
sub
fs
jl
mov
and
pushf
cmpb
adc
and
cwtl
xchg
clc
xchg
adc
enter
pop
and
loop
push
cmp
rclb
xor
or
or
movsb
clc
movsl
sbb
adcb
js
fsts
cs
dec
dec
fdivr
cmp
fs
or
dec
xor
pusha
jo
adcb
and
dec
mov
shlb
inc
loopne
mov
and
adc
mov
push
and
dec
jo
andb
inc
mov
test
loope
xchg
int3
dec
ror
sbb
or
scas
les
mov
adc
and
dec
cli
cltd
or
xor
nop
bound
push
cmp
inc
rorl
adc
adc
adcl
loop
adc
dec
jle
sub
add
aas
sub
sub
lods
aas
xor
adc
mov
sbb
mov
adc
cmp
jle
mov
sbb
jp
test
adc
test
jl
shrl
xor
orb
and
dec
pusha
xchg
cs
jecxz
jae
enter
int
loope
repz
inc
lahf
sbb
push
dec
gs
jns
mov
adc
xchg
jmp
std
and
mov
dec
adc
outsl
dec
adcl
iret
mov
adc
and
mov
xchg
inc
and
addr16
lea
lahf
and
dec
lds
call
inc
mov
dec
and
dec
jno
andl
inc
test
jecxz
cmc
inc
or
xchg
inc
and
addr16
lea
mov
xchg
fldenv
in
inc
call
insb
movsb
cmp
jno
test
mov
mull
or
xchg
inc
and
imul
mov
xchg
in
add
cmp
mov
test
mov
dec
testl
inc
push
imul
leave
and
inc
out
add
adc
and
dec
popa
mov
adc
xchg
in
stc
and
test
inc
adc
imul
xchg
and
fstl
in
or
inc
ss
mov
imul
and
fsts
jmp
stos
or
xchg
sub
cmp
or
jns
daa
in
pop
push
mov
lds
sub
stc
loope
sub
loop
pop
test
arpl
f2xm1
push
add
sub
nop
lret
jb
in
pop
xchg
mov
adc
pop
add
rcrb
lock
xor
pop
push
adc
push
mov
shl
rorb
dec
out
xchg
adc
pop
rcrl
call
pop
dec
inc
dec
pop
mov
xor
xchg
cmpsb
shl
cmp
dec
fwait
dec
push
add
test
push
cwtl
inc
mov
dec
sub
rcrb
cmpsl
rclb
mov
pop
push
xor
inc
dec
jo
dec
dec
lcall
stc
shl
add
mov
mov
out
lock
sbb
push
shrb
mov
pop
mov
std
jns
mov
and
dec
jmp
std
sbb
lods
leave
and
aaa
inc
dec
pop
mov
andl
iret
inc
loope
mov
lods
sbbl
dec
push
xchg
and
lea
and
dec
jmp
call
adc
dec
mov
jno
orl
test
jecxz
cmc
adc
scas
mov
or
das
shll
pop
inc
jno
mov
dec
rcll
or
inc
adc
imul
inc
mov
mov
adc
and
mov
adc
xchg
cmp
dec
inc
pop
mulb
and
cmc
adc
sub
xchg
dec
and
je
mov
jb
fwait
push
push
sub
fmuls
jae
and
and
xchg
inc
ret
enter
mov
xchg
dec
sbb
jne
jo
scas
js
adc
adc
addb
sahf
push
aam
mulb
gs
inc
adc
adc
clc
xor
push
test
rclb
jne
push
gs
adc
mov
insb
sub
imul
js
insb
pop
adc
pop
add
push
loop
mov
push
cmp
insl
adc
xor
pop
inc
lods
clc
das
dec
loop
orl
sarl
adc
dec
mov
sbb
push
sbb
or
push
lods
enter
movsl
jo
inc
adc
inc
xor
and
push
cmp
stc
mov
ror
and
enter
mov
loopne
lods
adc
xor
and
lods
adc
loopne
push
sub
adc
and
nop
pop
and
and
jo
sti
inc
jbe
mov
jno
mov
or
icebp
lock
or
sbb
xchg
or
and
and
bound
mov
adc
pop
dec
push
dec
int
ret
data16
push
or
dec
mov
dec
rorb
mov
enter
call
adc
dec
mov
ja
mov
movl
imul
dec
dec
pop
mov
lock
gs
sbb
mov
ror
add
and
nop
adc
clc
addl
inc
xor
dec
and
sub
cmpb
and
inc
in
decb
adc
and
dec
pop
xchg
jo
test
mov
testb
and
push
push
and
dec
mov
and
inc
in
shll
cmp
xchg
pop
and
test
and
dec
in
negb
or
inc
inc
push
mov
jl
mov
xchg
mov
enter
mov
es
cmp
dec
inc
pusha
jb
xchg
cwtl
and
dec
mov
inc
clc
or
push
mov
adc
dec
push
jl
nop
inc
mov
fsubl
inc
add
xchg
cmp
dec
inc
pusha
je
xchg
lcall
and
inc
repz
adc
sub
push
gs
shll
xchg
cld
and
stos
add
mov
xchg
and
inc
dec
add
ds
inc
out
addr16
outsb
mov
inc
dec
inc
inc
arpl
idivl
cmp
call
xchg
popf
jb
fistl
mov
sub
sub
sbb
xchg
inc
ja
adc
fs
sub
mov
insb
jne
push
push
jbe
or
fs
out
pop
dec
enter
jno
jno
das
adc
push
loopne
dec
outsb
sub
dec
test
jb
rclb
and
push
movsl
push
shrb
arpl
jo
mov
jo
cmpl
xchg
xor
mov
xor
sub
test
and
push
push
push
adc
adc
stos
adc
addr16
xor
adc
jo
add
and
sub
add
add
and
and
and
andb
mov
and
push
dec
leave
inc
add
cmpsl
loopne
sub
push
sub
ret
add
adc
fdiv
out
xchg
jl
pusha
movb
adc
sahf
mov
xor
shlb
or
aam
xor
lock
inc
add
xchg
add
and
sti
sub
and
les
xor
push
adc
int3
xor
push
xor
js
mov
and
jno
lds
add
loopne
sbb
or
add
mov
lahf
inc
fnstenv
cwtl
addr16
push
adc
aam
cmp
test
shrb
pushf
fnop
repnz
pop
mulb
mov
sbb
and
dec
fcoms
test
adc
dec
lea
int3
xor
sub
les
adc
sub
inc
mov
push
loop
add
addr16
cmp
pushf
pop
pop
rorb
or
loopne
outsb
inc
xchg
sahf
add
lahf
clc
mov
test
pop
std
cwtl
shlb
mov
or
sbb
cs
xor
or
imul
inc
mov
mov
adc
and
mov
xchg
cmp
dec
inc
popa
mulb
dec
cltd
xchg
lods
and
stc
adc
mov
dec
inc
xchg
push
and
jge
mov
dec
fstl
fldenv
or
inc
cmp
popa
adc
xchg
xchg
lods
and
inc
shl
mov
adc
xor
and
xchg
movsl
mov
dec
icebp
mov
rcll
and
std
adc
insl
dec
test
ret
aad
jmp
ret
dec
aas
xchg
push
and
adcl
xchg
repz
ret
and
inc
sub
gs
dec
mov
jmp
std
and
les
dec
aaa
xchg
dec
and
outsl
orl
dec
iret
xchg
loope
cmc
and
lds
mov
push
and
dec
jns
lea
lahf
inc
mov
and
dec
jmp
call
adc
and
pop
adc
orl
test
jecxz
cmc
adc
mov
or
and
dec
push
xchg
and
lea
and
dec
out
cli
adc
xor
push
adc
mov
addl
mov
dec
in
cmpsb
lock
inc
sub
fs
pop
dec
imul
mov
lret
adc
and
inc
add
or
xchg
sub
cmp
jne
mov
dec
scas
xchg
shll
inc
out
mov
xor
shll
pop
inc
insl
jg
xchg
adc
inc
fcomip
mov
sub
cmp
xchg
ja
mov
mov
adc
and
dec
sti
lea
int
xchg
or
insl
and
dec
xchg
xchg
cmpsl
and
repz
add
sub
aas
inc
push
mov
mov
and
inc
jmp
andl
dec
pop
xchg
outsl
and
mov
dec
repz
rcr
xchg
or
mov
mov
dec
mov
lds
xlat
inc
jmp
mov
rcr
aaa
adc
pop
dec
outsl
xchg
andl
inc
test
loope
cmc
inc
pop
rorb
sbb
push
mov
lea
dec
mov
lds
flds
mov
roll
dec
dec
pop
xchg
jno
addl
mov
dec
cmc
lea
aam
xchg
or
and
push
mov
mov
dec
mov
sarl
adc
and
xchg
cmp
inc
insb
popa
xchg
xchg
int
bound
xchg
idiv
push
ds
mov
cmp
inc
dec
popa
loope
lret
and
lcall
test
lods
jae
adc
aam
mov
mov
lods
mov
bound
repz
insl
and
add
jno
lock
mov
leave
fadds
mov
xor
and
es
xor
inc
push
loopne
xor
icebp
adcb
add
sbb
jb
addl
cwtl
jno
outsb
and
sbb
and
push
push
jle
js
jne
test
dec
push
dec
adc
shrb
adc
ret
and
gs
adc
bound
and
loop
mov
js
jae
shl
dec
mov
push
mov
lock
or
je
out
pop
cmp
popa
mov
lcall
xor
pop
and
and
xchg
ficoms
les
test
mov
testb
push
add
xorb
int3
add
jo
mov
mov
add
push
and
and
mov
loope
mov
mov
adc
sbb
mov
gs
xor
add
call
adc
inc
lock
sub
adc
ljmp
sub
xchg
adc
pop
lahf
and
sub
adc
mov
adc
inc
sbb
inc
push
je
rcrb
test
cmpsl
and
and
jmp
push
add
add
adc
call
lret
les
lock
and
cwtl
lock
pop
jg
sub
or
js
fs
pop
pop
ja
cli
dec
inc
fdivrs
sub
xor
mov
nop
dec
sub
movsl
jo
pop
push
xor
sbb
xchg
cmpsl
fisubs
loopne
mov
xor
imulb
scas
push
js
push
loopne
test
pusha
les
jbe
sub
aaa
push
jo
pop
add
iret
pop
aaa
int
xchg
push
xor
adc
xchg
sub
mov
inc
push
test
pop
add
dec
jae
jne
outsb
xchg
int3
or
test
in
push
lods
inc
pop
jge
inc
pop
adcb
xor
shll
clc
sub
dec
notl
sub
cmpsb
push
lret
jbe
jo
sub
xor
xor
pop
jo
or
mov
jno
add
inc
rcrb
push
loop
lahf
pusha
es
and
js
push
xor
fdivrs
dec
dec
xor
inc
add
test
push
pop
sub
mov
insb
popa
addr16
pop
adcb
imul
push
fidivs
shlb
dec
jne
insl
bound
dec
clc
inc
sub
cmp
or
sub
add
fs
jo
lock
jno
dec
dec
dec
xchg
push
dec
and
mov
sub
mov
aas
cmp
dec
jo
ret
cltd
push
add
add
mov
cwtl
mov
cltd
shl
nop
push
inc
xor
ja
mov
mov
jp
pop
sbb
xchg
adc
dec
push
xchg
sbb
xor
pusha
jb
adc
enter
and
js
mov
addl
mov
je
call
jno
pusha
and
dec
enter
and
movsb
pop
and
or
xchg
loopne
or
sub
shll
adc
dec
and
jmp
int3
adc
or
mov
dec
xchg
gs
fiaddl
xor
inc
inc
sbb
enter
int3
adc
and
in
call
orl
and
push
push
push
sub
jns
sub
or
fisubs
push
xchg
sub
frstor
rcrb
xor
imul
leave
inc
test
add
xlat
test
test
jg
popa
adc
in
test
xchg
jb
mov
xchg
pop
or
leave
loopne
cwtl
or
hlt
lahf
out
enter
rorb
jl
call
shlb
or
mov
pop
adc
inc
and
mov
push
and
dec
jo
andb
inc
mov
fst
pop
pusha
inc
lahf
dec
jmp
jnp
xor
outsb
mov
adc
jl
rclb
sub
adc
les
loope
dec
and
mov
loopne
and
int3
xchg
lock
adc
insb
clc
lds
xor
fadds
cmp
or
movsl
pop
adc
adc
add
mov
adc
and
jo
popf
in
imul
and
mov
mov
int
dec
add
test
out
jne
adc
jo
loop
cmpsb
test
or
adc
cwtl
pop
sbb
xchg
or
and
mov
jl,pt
adc
jb
icebp
and
dec
repnz
lock
divl
mov
dec
ret
mov
adc
add
and
pop
mov
adcl
mov
inc
repz
sub
aas
and
dec
gs
ja
mov
mov
pop
clc
xchg
jmp
fadds
mov
pop
and
dec
adcl
adc
and
fldenv
sub
and
jns
mov
dec
xlat
xchg
jmp
std
ss
inc
aaa
dec
mov
outsl
and
dec
xchg
xchg
test
fisttps
adc
add
dec
cmp
movsl
xlat
in
movsl
lds
mov
cmp
das
adc
xchg
out
clc
mov
mov
mov
mov
mov
jo
dec
mov
push
lods
outsb
cmp
mov
adc
sbbb
xchg
or
push
cmp
insl
sbb
xchg
js
push
cltd
dec
or
dec
mov
inc
repz
sub
aas
and
dec
gs
ja
mov
mov
adc
and
dec
std
mov
fstl
and
xor
outsl
adc
xchg
mov
xrelease
fcompp
sub
dec
gs
jns
mov
mov
adc
and
dec
std
lea
xchg
or
and
pop
outsl
mov
dec
mov
inc
cmc
pop
inc
loopne
mov
dec
addr16
jns
lea
mov
adc
and
dec
decl
and
inc
dec
pop
mov
andl
test
inc
jecxz
mov
loop
das
adc
push
dec
gs
jne
test
mov
dec
lock
adc
and
inc
cmp
mov
mov
subl
cs
adc
mov
mov
stc
lock
test
jbe
scas
pushf
loopne
out
test
sub
mov
and
shl
inc
outsl
ja
xchg
push
xchg
loope
popa
jae
out
xchg
mov
sub
cmpsl
sbb
sbb
mov
test
sub
dec
and
pop
inc
cmpsl
sbb
lock
and
or
adc
push
inc
or
ds
adc
lret
test
and
add
inc
shlb
cmp
js
mov
jecxz
xor
jecxz
cmp
inc
xor
jle
cmp
mov
push
mov
mov
pop
xabort
pop
jo
insb
dec
les
sub
mov
or
je
je
mov
data16
push
or
enter
lods
pop
lods
jmp
cwtl
adc
mov
mov
enter
mov
leave
inc
fucomi
mov
in
adc
dec
dec
xchg
popa
jge
xchg
cltd
and
dec
mov
inc
stc
or
add
and
dec
inc
xchg
push
and
jge
mov
dec
fstl
fldenv
or
inc
cmp
popa
adc
xchg
xchg
lods
and
inc
shl
mov
adc
into
imul
and
jne
mov
dec
aad
sti
mov
xor
shll
pop
inc
insl
jg
xchg
adc
xchg
jmp
fldcw
xor
and
adcl
xchg
repz
sub
mov
gs
dec
mov
ret
xlat
mov
adc
and
jmp
and
xchg
dec
and
outsl
jg
xchg
adc
xchg
fdivrs
adc
in
add
and
dec
inc
xchg
push
and
jl
mov
jl
mov
pop
push
test
fistl
mov
outsl
jo
mov
orb
shlb
mov
or
cwtl
cmp
or
inc
je
rclb
jb
in
stos
frstor
ret
dec
imul
cmc
push
adc
jns
mov
sub
out
xchg
les
insb
jp
nop
and
jp
adc
xchg
adc
sub
jae
jmp
mov
jp
sub
adc
and
rorb
inc
add
inc
sbb
nop
jae
adc
inc
or
jo
pop
mov
adc
enter
repnz
inc
rolb
xchg
enter
loope
jo
adc
push
mov
and
aam
adc
mov
and
cmp
adc
adc
inc
jo
aaa
outsl
inc
js
adc
rorl
pushf
enter
lret
les
popa
jnp
adc
mov
jmp
or
inc
mov
pop
adc
inc
in
loopne
inc
mov
std
push
xchg
loopne
push
hlt
jmp
mov
mov
loopne
inc
mov
fildl
mov
call
adc
or
test
add
rorb
mov
leave
outsb
cmp
xchg
out
rclb
pushl
movb
or
and
mov
adc
gs
ja
mov
popf
inc
mov
mov
adc
and
inc
pmaxsw
and
pop
outsl
mov
dec
mov
inc
repz
insb
out
sub
and
dec
adcl
iret
mov
adc
and
lock
dec
sub
inc
addr16
lea
lahf
and
dec
lds
call
inc
icebp
and
and
dec
jno
andl
inc
test
jecxz
cmc
inc
or
fxch
or
xchg
inc
and
addr16
lea
mov
xchg
fisubl
in
inc
std
or
sub
dec
xchg
jbe
mov
inc
imul
fcoms
cs
sub
jl
adc
clc
push
mov
lods
fcoml
jo
or
xor
cmp
xchg
imul
sub
pop
push
repz
or
mov
adc
and
hlt
add
dec
daa
xchg
cmp
dec
inc
popa
mulb
dec
cltd
xchg
lods
and
stc
adc
cmc
add
and
dec
inc
xchg
push
and
jge
mov
dec
fstl
and
inc
xor
pop
adc
jg
xchg
xchg
movsl
and
icebp
adc
testl
cmp
inc
jne
mov
dec
aad
out
sti
and
mov
dec
pop
xchg
insl
and
xchg
movsl
mov
dec
icebp
lea
sub
cmp
ja
xchg
dec
cmpsl
xchg
mov
lret
lock
call
push
adc
repnz
repnz
add
cltd
loope
or
add
cld
es
aam
hlt
shrb
aam
sub
pop
insb
mov
dec
mov
inc
repnz
sti
sbb
push
dec
fs
jbe
mov
mov
adc
and
dec
cld
popf
push
pusha
inc
and
dec
adc
outsb
dec
adcb
int3
mov
adc
and
std
sub
ds
push
and
mov
les
xchg
ljmp
or
mov
and
dec
xchg
xchg
test
mov
hlt
adc
incl
sbb
dec
inc
xchg
push
and
js
mov
dec
fcoms
adc
jl
and
ss
dec
xchg
pop
and
adcb
into
dec
loop
hlt
adc
add
sbb
mov
and
dec
mov
fmuls
adc
cmp
xchg
pop
and
test
dec
xlat
xchg
out
divl
pop
add
or
mov
bound
dec
mov
ret
lock
mov
shl
xor
push
adc
loope
jns
mov
imul
pop
popa
jae
or
cld
pop
adc
adc
xor
jle
sti
repnz
pop
pusha
xor
andb
push
push
adc
leave
mov
fidivs
xchg
sarl
or
jl
mov
rcr
clc
and
xor
jno
and
loope
nop
xchg
mov
inc
pop
shll
adc
xchg
mov
and
cwtl
and
dec
test
mov
pop
jge
mov
mov
fmuls
cmpsl
dec
sbb
or
mov
xor
mov
in
adc
neg
sbb
push
rcr
loopne
adc
dec
aam
or
cmp
dec
and
pop
bound
mov
dec
in
stc
adc
add
inc
mov
imul
mov
leave
fisttpll
mov
or
and
dec
dec
xchg
popa
and
xchg
and
dec
out
stc
sbb
xor
mov
mov
dec
scas
xchg
shll
inc
out
mov
xor
dec
pop
xchg
insl
and
xchg
movsl
mov
dec
icebp
mov
sub
mov
ja
mov
xchg
mov
int
fcomip
mov
sub
dec
push
xchg
and
mov
and
dec
jmp
or
and
mov
and
dec
xchg
lahf
and
call
or
pop
push
sub
mov
mov
adc
iret
aas
xlat
adc
sbbb
and
inc
jb
arpl
mov
imul
outsb
ja
dec
adc
mov
and
dec
xorb
hlt
lods
cmp
push
jns
test
mov
loope
mov
pop
push
cwtl
push
lock
adc
pop
push
enter
pushf
ficoml
lcall
xor
fsub
adc
add
int
jo
outsb
mov
push
call
adc
jo
sub
mov
and
inc
inc
mov
mov
adc
or
xchg
or
imul
js
lret
cwtl
mov
lock
cltd
test
stc
cmp
push
jl
nop
dec
mov
inc
fsubr
mov
or
and
dec
dec
xchg
pusha
and
lcall
dec
out
clc
adc
and
inc
xor
adc
jle
nop
xchg
movsb
and
lock
lar
and
dec
cmp
dec
and
je
mov
dec
aam
out
cli
and
inc
and
mov
pop
and
dec
jle
xchg
and
adc
and
sub
xchg
push
and
jbe
mov
aam
call
adc
or
mov
insb
and
dec
xchg
xchg
cmpsb
and
repnz
sub
xchg
dec
and
imul
adc
xchg
aam
out
cli
or
adc
or
mov
popa
sbb
mov
imul
jmp
push
push
xor
lret
and
call
roll
inc
xor
cmp
xchg
cmp
sub
sahf
test
dec
dec
sub
std
loopne
dec
sqrtps
inc
dec
mov
out
xor
aam
sbbb
test
xor
rcrb
fbld
hlt
repz
push
dec
lret
adc
imul
stos
dec
mov
inc
testb
adc
inc
and
dec
push
inc
mov
fisubl
push
sbb
and
dec
dec
xchg
pop
and
test
and
dec
in
negb
or
fldenv
or
inc
inc
push
mov
jl
mov
xchg
mov
enter
mov
es
cmp
dec
inc
pusha
mulb
dec
xchg
xchg
cmpsb
and
out
adc
and
sbb
and
inc
sbb
mov
xor
enter
mov
call
jns
loope
mov
mov
push
mov
and
xor
pop
dec
lret
lret
jno
sbb
mov
les
mov
adc
sbb
and
pop
mov
adcb
and
dec
mov
inc
hlt
push
inc
sbb
and
dec
inc
xchg
push
and
js
mov
dec
fcoms
adc
and
mov
pop
and
dec
adcb
fmuls
adc
dec
dec
xchg
pop
and
test
and
dec
loop
notb
or
and
xor
mov
jb
test
xchg
mov
enter
mov
es
cmp
dec
inc
pusha
jb
xchg
cwtl
and
dec
mov
inc
clc
or
push
mov
adc
dec
push
jl
nop
inc
mov
fsubl
inc
add
fxch
or
xchg
cmp
dec
inc
pusha
je
test
xchg
and
dec
mov
inc
lock
adc
dec
dec
pop
xchg
outsl
and
cld
sub
loope
movsb
mov
jo
push
adcb
outsb
jae
andb
stc
enter
pop
pop
mov
jae
nop
rcrl
push
loopne
pusha
and
mov
movsb
insl
cwtl
mov
es
mov
notb
in
mov
and
push
and
lret
push
xchg
jl
mov
in
dec
test
or
mov
cmp
cmp
lock
xor
movsl
insb
cmp
sbb
sub
cs
inc
jnp
je
cmp
lcall
push
jp
xlat
sub
lret
and
call
and
mov
inc
and
dec
insb
xchg
andb
inc
cmpsb
mov
and
inc
add
or
xchg
sub
ds
push
mov
mov
dec
mov
ret
inc
call
mov
inc
inc
push
mov
push
xchg
lds
adc
xor
or
push
pop
and
iret
sbb
fnstsw
jo
lods
dec
rorl
push
bound
daa
and
data16
rcl
je
or
add
inc
pop
and
mov
mov
inc
enter
shl
lret
or
and
dec
dec
cmpsb
lock
inc
fstps
jns
cmpsb
or
enter
andl
iret
and
inc
cmc
pop
inc
sbb
push
dec
addr16
jns
lea
mov
adc
and
dec
decl
and
inc
dec
pop
mov
andl
test
cmc
mov
jo
popf
dec
sarb
stos
and
sub
test
jbe
add
test
imul
sub
cmpb
adc
fdiv
or
mov
sbb
popa
mov
sbb
inc
mov
push
add
mov
cwtl
inc
adc
push
test
push
loopne
les
adc
mov
add
jae
ljmp
stos
sbb
dec
fcoms
and
and
push
sub
sub
xchg
cmp
jns
es
xchg
sub
mov
and
ljmp
mov
pop
call
inc
adcb
dec
loopne
hlt
adc
sub
sbb
mov
data16
dec
mov
fmuls
adc
add
dec
ss
dec
and
orb
dec
into
xchg
loop
hlt
or
inc
cs
mov
and
dec
mov
fmuls
adc
cmp
xchg
pop
and
test
and
dec
loop
notb
or
inc
mov
and
dec
mov
fimull
fxch
or
xchg
cmp
dec
inc
pop
insb
mov
and
dec
mov
lds
aad
out
int
outsb
mov
pushf
daa
jae
cmpsl
jo
mov
push
adc
enter
fs
lods
jno
fcoms
ja
mov
test
pop
daa
pop
sub
js
scas
test
cs
das
or
or
mov
pusha
and
dec
xchg
rcl
out
clc
and
add
dec
xor
push
mov
dec
lret
and
and
xor
mov
dec
and
dec
je
mov
lcall
out
cli
inc
or
or
mov
adc
dec
xchg
xchg
movsb
and
lock
mov
or
and
dec
push
xchg
bound
jbe
mov
aam
call
xor
ja
mov
pop
and
dec
adcb
int3
mov
adc
and
xchg
and
fs
mov
pushf
and
dec
ret
and
inc
cld
push
inc
and
pop
and
adcb
dec
loopne
repnz
aaa
fldenv
or
ds
mov
and
dec
sahf
xchg
mov
les
mov
adc
cmp
shll
pop
inc
outsb
orb
dec
into
xchg
loope
hlt
and
inc
adc
mov
inc
and
dec
push
jge
lea
mov
adc
and
dec
decl
and
std
adc
push
jle
nop
and
adc
gs
daa
dec
insl
sarb
and
push
and
stc
push
pop
in
enter
cmp
dec
mov
enter
fcmovne
fidivrs
jae
cmp
pop
inc
lcall
push
inc
push
fdivs
lahf
or
mov
pop
loopne
cmp
fs
movsb
jp
add
lock
and
fs
xchg
push
and
jnp
mov
dec
fistl
and
inc
daa
cmp
mov
test
mov
dec
testl
inc
push
imul
leave
and
inc
out
add
adc
and
dec
popa
mov
adc
xchg
in
stc
and
aas
inc
pop
xor
imul
xchg
and
fstl
out
and
inc
sub
xchg
dec
and
jne
mov
dec
rcll
or
xor
pop
adc
dec
xchg
lahf
and
in
clc
and
inc
add
push
repnz
insl
and
fs
dec
in
sub
dec
in
xchg
adc
addr16
test
js
jecxz
std
cmpb
js
mov
sbb
scas
test
inc
or
or
insl
adc
xchg
mov
xrelease
sub
dec
push
xchg
and
mov
and
dec
jmp
inc
and
inc
xor
outsl
and
dec
xchg
xchg
cmpsl
and
repz
inc
mov
or
xchg
and
mov
and
dec
jmp
std
sbb
inc
fldenv
or
inc
dec
pop
mov
jge
lea
xchg
mov
movb
push
insl
dec
daa
incb
push
aad
mov
divps
push
sbb
xchg
bound
or
xchg
push
and
mov
xchg
nop
inc
add
adc
lds
pop
cmp
in
xor
ficompl
jo
dec
fcompl
test
mov
push
sub
xchg
adc
cmp
xor
jg
sub
inc
jmp
inc
orl
cmp
popa
adc
xchg
xchg
lods
and
inc
shl
mov
adc
xor
inc
inc
pop
imul
dec
mov
lret
and
inc
icebp
add
pop
mov
adc
xchg
jne
mov
mov
adc
and
dec
sti
xchg
push
test
and
xor
dec
push
xchg
addr16
int3
adc
jo
and
push
mov
cmp
and
xchg
sbb
or
rol
and
or
ret
addr16
cwtl
loopne
test
icebp
dec
mov
inc
pop
push
jbe
fistpl
sar
nop
icebp
mov
mov
mov
sub
cmpb
enter
and
int3
mov
test
enter
lods
and
clc
adc
dec
add
and
dec
inc
xchg
push
and
jl
mov
dec
fcoml
adc
mov
jb
mov
lods
fiaddl
and
lods
adc
addb
mov
into
xor
scas
insl
lods
jg
enter
mov
cmp
push
jl
mov
dec
fcoml
and
sub
mov
pusha
and
dec
xchg
rcl
out
clc
and
add
dec
xor
push
mov
dec
lret
and
and
dec
inc
push
sub
bound
xchg
mov
lcall
out
cli
inc
or
or
xchg
xor
inc
inc
pop
insb
mov
xchg
and
dec
mov
inc
lock
push
sub
bound
xchg
mov
pushf
inc
scas
ret
adc
and
inc
push
push
fxch
or
inc
and
insb
orb
dec
int3
xchg
fisubs
repnz
inc
sbb
mov
adc
fs
jbe
mov
pushf
inc
mov
mov
adc
and
inc
push
push
or
xchg
xor
mov
outsb
and
dec
xchg
xchg
cmpsb
and
repnz
push
mov
or
ds
push
xchg
and
mov
and
dec
ljmp
and
ss
adc
dec
adcb
into
mov
adc
and
push
add
dec
sub
inc
and
data16
mov
sahf
and
dec
les
push
inc
pop
mov
push
and
dec
jp
mov
mov
fcoms
in
and
inc
adc
and
cmp
dec
inc
pop
jo
test
xchg
and
dec
mov
inc
testb
pop
sbb
adc
push
dec
push
inc
cwtl
test
mov
dec
out
mov
pop
adc
and
aaa
dec
mov
jo
orl
test
fmull
adc
dec
cmp
sub
insl
bound
mov
inc
jae
leave
arpl
sbb
push
lahf
jns
dec
sbb
push
je
addr16
cli
in
pop
inc
and
ljmp
imul
xor
dec
ds
mov
sub
sub
out
sub
scas
lret
idivb
push
sub
push
popa
addr16
daa
xorb
fsubrl
push
jb
movsl
sbb
fs
repnz
dec
inc
pop
or
clc
fmul
cmp
mov
and
jbe
enter
inc
inc
cmpsl
dec
push
jbe
dec
mov
cld
mov
sbb
loopne
repz
mov
xor
add
and
add
xchg
dec
sbb
pop
sbb
jo
jg
sbb
sbbb
push
xchg
push
lock
cld
xorl
hlt
fstpl
sub
cmp
ja
and
gs
jnp
jno
pop
jo
fs
sahf
test
dec
ja
fs
in
dec
cmpsl
inc
daa
pop
mov
pop
loope
int
jae
fidivl
mov
inc
sti
subb
jnp
inc
insl
cltd
xor
fidivs
inc
lcall
and
ja
lock
je
lds
push
cld
scas
sub
mov
push
jne
xchg
pop
movsl
push
frstor
dec
cmpsb
es
jg
xor
mov
dec
mov
dec
loopne
out
jae
and
push
popf
inc
je
add
add
pop
pop
sbb
test
das
nop
ret
pop
add
lcall
daa
pop
inc
out
les
daa
lock
push
mov
cmp
ret
dec
adc
add
add
sbb
or
clc
push
and
pushf
nop
and
sbb
dec
shr
mov
adc
testl
pop
and
test
fs
jl
mov
das
mov
loope
ret
mov
nop
and
lock
and
mov
shlb
pusha
out
jg
mov
inc
fcoms
xchg
repz
xchg
add
cmp
inc
adc
ret
sub
inc
sub
sub
push
cmp
and
inc
sub
popf
js
mov
inc
test
push
loope
nop
adcb
lock
push
nop
vcmpps
xor
shrb
adc
nop
adc
cmp
jns
insl
int3
xchg
out
cmp
nop
lods
adc
pushf
mov
and
aas
and
dec
loopne
int
rcrl
outsl
mov
xchg
out
ja
enter
push
pusha
or
mov
and
sbb
adc
jns
outsl
sbb
add
pusha
push
xchg
xorl
cmp
pusha
mov
orb
xor
js
nop
xchg
mov
push
push
outsl
mov
icebp
and
mov
mov
lret
jo
jo
lods
fs
or
lock
mov
shlb
and
stc
dec
mov
cmc
and
adc
std
in
test
fildll
mov
or
insb
ret
icebp
adc
mov
repnz
pop
push
bound
push
pop
or
mov
dec
xchg
ljmp
and
mov
dec
pop
xchg
outsb
and
mov
dec
hlt
mov
pop
adc
and
inc
push
mov
js
mov
xchg
mov
les
mov
adc
pop
add
ss
dec
xchg
pop
and
adcb
into
dec
loop
hlt
sbb
pusha
fldenv
or
inc
inc
push
mov
jp
mov
xchg
mov
movb
adc
popa
mov
or
and
dec
pop
xchg
jo
test
mov
testb
cs
inc
push
mov
jp
mov
xchg
mov
movb
andl
or
dec
cmp
jb
mov
dec
rclb
or
inc
xor
push
adc
jl
mov
enter
pop
add
or
and
inc
dec
pusha
mov
xchg
dec
lods
xchg
mov
clc
mov
sbbw
and
dec
push
xchg
push
jl
nop
mov
and
dec
out
lea
fsts
and
inc
dec
pusha
mov
and
dec
lods
xchg
shlb
inc
out
mov
or
adc
dec
push
jle
nop
inc
movsb
mov
lret
and
inc
add
push
xchg
sub
cmp
dec
bound
cwtl
dec
stos
xchg
mov
icebp
mov
push
adc
daa
and
dec
dec
xchg
pop
and
adcl
iret
dec
loop
repnz
imul
inc
and
test
xchg
mov
sbb
adc
pop
jmp
xor
adc
imul
dec
dec
cmp
jne
dec
jae
adc
add
ja
outsl
jb
dec
mov
lods
adc
dec
xor
sub
cli
jg
mov
sub
push
or
into
adc
adc
fwait
nop
fists
pop
mov
sahf
pusha
lret
ficoms
loop
int3
jge
or
nop
add
cwtl
and
ja
fsubs
or
mov
mov
daa
sahf
clc
lods
and
inc
leave
in
mov
loopne
dec
mov
out
sub
iret
loopne
push
int
insb
adc
and
push
ror
test
mov
fsubs
call
into
mov
decb
loop
mov
adc
fwait
mov
pop
imul
and
mov
mov
adc
and
dec
std
mov
insb
adc
and
outsl
adc
xchg
mov
xrelease
insl
sbbl
dec
push
xchg
and
mov
and
dec
jmp
std
sbb
outsb
fldenv
or
inc
dec
pop
mov
andl
iret
inc
loope
mov
outsl
sbbl
dec
push
xchg
and
lea
and
dec
jmp
call
adc
and
pop
adc
orl
test
jecxz
cmc
adc
jno
das
and
dec
push
xchg
and
lea
and
dec
in
xchg
lcall
adc
and
cmp
mov
test
dec
stos
xchg
mov
testl
and
imul
mov
xchg
in
add
inc
daa
cmp
mov
test
mov
dec
testl
inc
push
imul
leave
and
inc
out
add
adc
and
dec
popa
mov
adc
xchg
in
stc
and
ja
pop
das
mov
adc
pop
dec
outsl
xchg
jg
popl
mov
adc
and
dec
decb
and
inc
dec
pop
mov
andb
jecxz
fsubl
jle
insb
xchg
mov
jae
jne
fs
imul
enter
lock
and
lahf
pop
push
inc
movsl
jge
loopne
push
leave
inc
fs
xchg
mov
js
lods
add
inc
add
rorb
xor
sbb
adc
cmp
in
dec
xor
sub
jp
js
xor
adc
bound
inc
push
pop
pop
pop
in
movsl
push
xchg
loopne
inc
repz
dec
cmp
lods
jo
jle
mov
sbb
call
add
sub
mov
and
cmp
pop
cwtl
push
mov
pop
add
jo
lret
pusha
in
mov
or
xchg
fbld
repz
mov
adc
gs
ja
mov
popf
inc
mov
mov
adc
and
inc
or
xchg
xor
outsl
mov
dec
mov
inc
repz
insb
jnp
or
and
dec
jns
mov
lahf
inc
mov
mov
adc
and
inc
adc
or
xchg
dec
and
outsl
orl
dec
iret
xchg
loope
cmc
and
jge
sbb
and
dec
ja
mov
lcall
mov
jmp
jle
mov
dec
outsl
xchg
andl
mov
adc
and
inc
pop
jg
sbb
push
mov
mov
sti
fnstcw
mov
fnstenv
pop
fldln2
sub
dec
inc
repz
push
xor
push
sub
xor
pop
push
sub
xchg
jno
inc
pop
and
xchg
push
add
and
movsl
jg
enter
les
js
stos
sub
inc
rolb
test
cld
enter
mov
pop
out
lods
aam
jle
xor
pop
add
jae
lods
sbb
inc
and
inc
js
push
xor
pusha
mov
rclb
dec
movsb
scas
sub
nop
mov
rcll
or
xchg
js
stos
arpl
in
lock
data16
and
or
leave
inc
and
jp
lret
enter
xchg
push
adc
mov
mov
lds
fcoml
lock
xchg
out
fadds
fmull
xchg
fnsave
rcrb
xor
mov
lcall
movsb
adc
fildl
nop
and
mov
mov
rcrb
add
or
xchg
push
or
sub
inc
push
sbb
das
fcoms
test
push
nop
mov
orb
dec
dec
pusha
arpl
adc
ficoms
xor
push
in
add
xchg
mov
adc
pusha
adc
mov
test
rorl
ljmp
inc
and
jne
stos
and
loopne
or
jb
and
xchg
add
dec
pop
mov
jmp
inc
xchg
lea
leave
pusha
pop
or
sub
inc
cmp
pusha
mov
or
and
in
or
movb
adcl
xchg
mov
addr16
dec
adc
rclb
push
mov
test
dec
icebp
push
les
jmp
lock
adc
repnz
xlat
cmpsl
inc
jne
les
test
popa
pop
adc
add
push
mov
xchg
hlt
or
lahf
push
push
jle
add
test
and
push
cli
into
popf
fdivrl
gs
or
or
jle
dec
iret
es
add
pop
dec
test
inc
dec
add
cmp
xchg
adc
pop
mov
and
inc
pop
ret
data16
jno
inc
mov
sub
bound
push
scas
push
aad
enter
cmpb
dec
popf
hlt
jne
xor
rorl
mov
and
sub
pop
push
push
push
andl
xor
ds
add
inc
mov
push
movzwl
shlb
xor
push
or
ja
mov
pusha
jge
inc
push
in
jl
testb
filds
les
push
sbb
popa
pop
clc
jecxz
je
ficomps
cld
mov
inc
jge
leave
push
pop
xchg
call
aas
xor
fimull
orl
push
jnp
fucomip
add
mov
movsb
mov
push
std
aas
icebp
adc
andb
xchg
sbb
jg
cmp
es
hlt
enter
xadd
add
push
push
mov
inc
loopne
adc
arpl
fisttpl
lcall
or
fiaddl
push
mov
call
fadds
pop
mov
mov
call
fiadds
dec
movsb
sbbb
xor
cmp
inc
push
cli
sarb
jle
shufps
xchg
lods
add
dec
cmpb
je
mov
add
cmp
push
xor
lret
out
mov
cmpsb
dec
rcll
or
rclb
cmp
fisubs
rorb
inc
mov
adc
adc
sbb
sbb
and
sub
std
cmp
nop
jle
xchg
mov
inc
xor
sbb
or
mov
in
movsb
push
lock
sbb
adc
push
nop
jmp
out
movsb
jb
es
imul
pop
inc
adc
lods
jmp
and
xorl
or
enter
push
push
scas
xor
mov
inc
icebp
inc
xor
push
adcl
jo
mov
sbb
mov
test
sub
shll
inc
sub
ljmp
clc
jg
xchg
imul
jmp
adc
cwtl
or
dec
in
xor
imul
sti
outsb
insb
adc
bound
pop
leave
jge
in
xchg
out
lahf
cmpsl
rcrb
sbb
push
mov
pop
xor
dec
imul
sub
push
adc
inc
repz
cmp
adc
push
push
or
adc
and
loopne
sub
pop
cmp
jecxz
sbb
cmp
es
lods
mov
clc
mov
add
and
cmp
je
shll
add
cmc
bnd
and
leave
cmp
push
in
xchg
sarl
and
adc
popl
jge
push
sbb
push
dec
test
sub
out
dec
psubsb
pop
push
jnp
pusha
adc
and
cmp
cmpl
adc
fnstsw
dec
movsb
cwtl
mov
call
pop
mull
iret
pushf
xor
jne
and
push
mov
push
jmp
and
out
cmc
les
in
loopne
lds
mov
xchg
push
push
sub
nop
imul
xlat
add
movsl
mov
or
push
stos
and
dec
mov
enter
xor
pop
add
sbbb
push
mov
sub
adc
aam
push
push
cltd
fdivl
push
inc
fstl
jp
mov
jbe
and
notb
loopne
adc
ret
push
daa
sti
call
add
les
sub
repnz
bound
dec
loopne
mov
and
lock
daa
add
bound
adc
arpl
mov
cmp
adc
xor
jne
xchg
add
call
ret
mov
mov
add
add
call
jbe
das
mov
je
mov
mov
add
jno
or
inc
inc
push
xchg
push
lret
sbb
mov
inc
add
mov
mov
clc
adc
std
dec
pop
loop
cmp
push
mov
nop
mov
sub
adc
push
push
sub
ficoms
xor
std
rcrb
xchg
adc
dec
nop
and
dec
push
cmp
adc
inc
cwtl
xor
pop
dec
add
hlt
push
int3
xchg
or
test
sbb
mov
mov
jbe
or
jns
push
je
or
rclb
sbb
mov
jnp
cld
addl
cmp
sbb
stc
pop
neg
sbb
sub
nop
cmp
xor
arpl
push
push
and
lea
popf
stc
xorb
cmp
or
sub
add
hlt
sbb
xchg
aas
cmp
jno
gs
xchg
xor
add
sar
movsb
orl
clc
inc
cmovb
dec
in
or
sahf
xor
sbb
mov
xor
adc
sbb
cmp
sbb
xor
pop
dec
movsb
enter
icebp
mov
in
inc
mov
or
inc
inc
call
popw
aad
jb
cs
jp
xchg
and
add
or
pop
pop
sub
sub
xchg
loope
leave
jne
push
add
xor
mov
mov
and
lcall
call
faddl
mov
adc
scas
sbb
scas
pop
test
push
mov
sbb
mov
incb
rorl
stos
in
lea
test
pop
je
dec
jmp
les
lret
mov
or
adc
adc
xchg
xchg
scas
out
mov
xor
push
lods
sti
push
mull
xor
pop
inc
pop
push
shrb
cmp
rorl
pop
jge
xor
mov
sub
mov
lcall
pop
int
bound
push
std
adc
add
or
xchg
or
cmp
adc
in
inc
add
inc
add
aas
sub
in
xchg
je
in
cmp
mov
stos
add
push
lahf
push
pop
arpl
ret
movsb
test
stos
in
sbb
jp
dec
pop
mov
cmovne
sub
adc
cmp
jg
mov
adc
into
scas
enter
add
and
mov
xchg
ret
sti
sub
or
adc
add
mov
xchg
cmp
orl
rorb
data16
leave
adc
xor
rcrl
cld
enter
shl
xchg
mov
xorb
and
nop
add
mov
cmp
sub
jg
aas
lret
cmc
mov
psubsw
negl
hlt
xor
inc
dec
fldt
lahf
popa
in
push
adc
bound
jno
mov
xchg
inc
fsubs
mov
jge
pop
in
test
or
fs
mov
sub
imul
pop
add
dec
jno
mov
iret
inc
or
inc
in
adc
dec
call
orl
mov
ljmp
xchg
sbb
adc
or
add
rorb
add
add
mov
lods
or
sub
call
cmp
pop
add
or
xchg
rorl
push
push
int3
push
push
push
fs
inc
mov
mov
xchg
add
inc
or
cmpsb
insl
push
push
adc
or
cmp
dec
les
push
adc
lret
jge
mov
adc
and
pop
les
push
add
push
mov
pop
add
sbb
inc
or
adc
cli
lea
push
mov
repnz
lea
and
popa
dec
jne
call
nop
inc
pop
or
sub
adc
jmp
adcb
in
push
sbb
lcall
push
jecxz
int3
das
push
push
adc
daa
pop
ret
enter
enter
add
adc
or
jecxz
dec
outsl
xor
xchg
and
popa
shr
cmp
adc
add
add
dec
movsb
or
inc
mov
pushf
push
andb
inc
cmp
inc
nop
ss
jl
loopne
ret
pop
scas
xchg
movsl
or
adc
roll
jle
cmp
push
outsl
and
push
pop
inc
cmp
and
cmp
jns
push
test
push
icebp
ret
pop
lret
pushf
ret
xchg
and
push
adc
and
add
pop
xchg
cmpl
rep
data16
js
addr16
or
mov
aam
push
cwtl
daa
adc
inc
inc
cs
add
inc
push
shll
insb
add
cltd
xor
mov
inc
mov
add
adc
jns
jecxz
imul
aaa
mov
mov
cmp
push
adc
daa
push
fstpl
add
in
jmp
out
into
cs
insb
stos
fcoml
lea
adc
pop
sbb
or
jo
add
fstpt
popf
mov
cmpb
test
lret
in
adc
add
push
jne
cmp
test
push
rcrb
xchg
loopne
out
adc
push
rorl
mov
mov
test
mov
sub
push
hlt
push
mov
dec
imul
or
insb
sbb
mov
dec
nop
dec
xlat
aaa
icebp
mov
aas
jmp
lods
test
push
and
xor
or
cltd
pop
mov
test
das
mov
push
inc
mov
jbe
test
imul
jne
pop
pop
adc
popa
xorl
sub
jne
inc
sbb
xor
fsqrt
push
cs
and
sub
rclb
leave
adc
adc
mov
push
clc
add
cmp
jmp
jb
push
push
push
aam
adc
je
cmp
adcl
enter
cwtl
lahf
add
and
mov
shr
add
inc
and
les
je
mov
or
cwtl
xlat
lock
xor
push
add
cmp
jb
mov
clc
icebp
orb
ja
add
jmp
rcl
push
das
data16
pop
bound
lods
aad
in
fildl
lea
xchg
mov
sti
test
mov
fadds
incl
popf
sub
insl
and
out
push
fildl
jecxz
jl
xchg
jns
adc
inc
sbbl
cmp
xchg
and
xchg
icebp
scas
loop
push
xor
or
xchg
or
mov
leave
push
push
push
dec
mov
adc
inc
dec
je
cmpb
test
push
push
call
sub
pop
mov
cmp
sub
and
hlt
out
test
mov
jno
inc
push
je
sbb
add
mov
lret
lret
call
jns
ret
jmp
jne
sub
ret
pop
pop
jle
and
jmp
pop
sbb
jae
push
cmp
xor
enter
pop
inc
or
out
xchg
adc
shr
or
jmp
test
jmp
cmp
fmuls
push
movsb
and
int
sub
jns
add
shll
shrl
push
lea
lods
or
pop
or
repnz
repnz
insl
cmp
jge
inc
dec
movsl
and
and
push
dec
or
mov
add
sub
jb
mov
push
je
sub
adcb
popa
js
call
pop
inc
popf
jmp
or
sbb
push
rorb
pop
and
clc
popa
fidivrs
sti
and
sarl
and
ss
mov
push
mov
mov
or
inc
jb
lds
pop
cmpsl
dec
out
push
sbb
jno
push
icebp
insl
mov
enter
int3
xchg
addl
fcoms
and
in
out
int3
adc
sbb
sub
clc
adc
add
push
hlt
push
xchg
xchg
xchg
sub
push
jle
sbb
mov
or
popa
jmp
aam
sub
ret
xchg
xchg
cwtl
mov
jne
stos
test
dec
clc
and
andb
pop
cmp
and
xchg
mov
push
js
dec
or
fistpl
mulb
sbb
pop
sub
add
xchg
dec
rorb
adc
pop
mov
pop
jo
inc
and
mov
lock
adc
into
or
test
fsubrl
invlpg
je
loopne
xchg
pusha
or
rolb
push
ret
jne
int3
out
xor
lcall
lock
pop
rcl
xchg
inc
leave
sub
push
out
hlt
test
out
push
push
mov
sub
or
in
movsb
and
and
movsl
inc
nop
dec
imul
call
adc
pusha
mov
jbe
lea
jae
repnz
sub
cld
clc
mov
mov
shrb
dec
ret
adc
push
call
add
push
push
adc
shrb
sbb
adc
cwtl
movsb
orl
int3
cmp
jb
mov
in
mov
aam
insb
push
arpl
daa
mov
pop
push
mov
aam
call
add
cltd
scas
gs
mov
imul
jbe
or
push
sarl
je
mov
inc
push
lret
loopne
sbb
or
cmp
pop
push
mov
dec
testl
mov
es
mov
or
sbbb
sub
cmp
pop
mov
push
dec
dec
jmp
cmpsl
add
call
pop
lahf
insb
adc
cmp
lret
je
inc
cld
pop
jb
dec
add
pop
sub
test
dec
jge
xor
icebp
mov
xchg
imul
lock
or
addr16
popa
lret
push
inc
lds
mov
sub
or
dec
xor
mov
or
cltd
lcall
sbb
adc
push
dec
push
inc
shll
mov
xor
cmp
or
xchg
rorl
mov
cli
add
mov
arpl
jge
fidivl
stc
mov
and
ja
jno
jnp
jbe
aas
movswl
push
movsb
or
pop
int3
loop
add
rorl
mov
adc
mov
lea
or
dec
pusha
rcrl
mov
sub
pop
movsb
jo
lea
jmp
gs
stos
mov
jp
mov
jmp
xor
pop
inc
ret
dec
inc
mov
sub
add
pop
lea
cmp
push
push
sub
sub
push
shr
popf
out
loopne
mov
cmp
push
add
mov
nop
xchg
pop
fcompl
scas
sub
cs
decb
cli
mov
xchg
call
popf
xchg
or
popa
and
pop
xchg
add
dec
jle
jmp
lock
nop
arpl
mov
mov
adc
shll
jg
sub
add
lea
ret
sub
je
dec
enter
movntps
pusha
sbb
mov
push
mov
jmp
push
adc
out
nop
pop
push
arpl
or
sbb
cs
test
rcll
and
xchg
je
adc
ret
arpl
or
push
add
or
push
sbb
sbb
adc
jne
cld
decb
sahf
rorl
and
adcb
ret
shlb
jp
sbb
pop
or
loope
andl
aam
or
adc
dec
and
or
mov
movsb
mov
sub
xchg
adc
ret
loopne
aaa
clc
nop
pop
or
adc
xchg
or
ret
jne
wrmsr
movl
add
jne
test
sub
cmp
cwtl
movsl
pop
and
cmc
ret
pop
shll
sbb
outsl
in
or
pusha
aam
pop
mov
ret
sbb
push
mov
ud2
mov
test
int3
incb
shrb
mov
adc
xor
enter
mov
push
outsl
or
mov
push
and
push
xor
sbb
bound
push
mov
xor
outsl
in
xchg
and
movsb
adc
pop
and
rcl
jmp
and
inc
or
ror
and
pusha
or
cmovb
icebp
cmpb
call
pop
mov
cmp
int3
xchg
imul
add
dec
cmpsb
mov
sub
xor
push
add
mov
lds
push
sbb
sbb
inc
or
xchg
adc
movsl
mov
loopne
nop
mov
int3
pop
xchg
xor
adc
int3
mov
inc
xchg
enter
daa
push
test
enter
and
fsubs
arpl
push
mov
sbb
inc
test
sub
xchg
and
fs
movsb
adc
in
adc
add
loopne
lock
adc
or
hlt
nop
rcrb
mov
cld
nop
cmpsb
mov
xchg
or
add
jl
jo
or
fs
push
adc
adc
adc
sub
adc
adc
inc
sbb
incb
and
and
jmp
inc
and
aam
hlt
mov
sbb
sub
stos
inc
in
xor
fs
adcb
or
cmp
cmp
push
test
enter
and
adc
lods
test
movsb
sub
xchg
mov
mov
inc
mov
pop
fs
daa
push
test
enter
mov
pop
mov
insb
test
bound
mov
adc
adc
notb
inc
push
inc
das
lds
adc
push
inc
or
testb
or
add
cmp
push
jl
lea
xchg
call
test
sbb
pop
daa
mov
sahf
or
sbb
fisubrs
stos
mov
pop
pop
scas
dec
insb
pop
inc
xor
push
nop
xor
dec
lock
mov
cmp
or
or
adc
adc
xchg
out
add
xchg
out
mov
dec
orl
jne
cmpsl
fcompl
cld
cmpsl
out
push
mov
dec
pop
push
jmp
add
adc
cmpsb
fdivrl
scas
push
dec
dec
lret
mov
jp
dec
pop
adc
adc
pop
je
pop
inc
inc
insl
mov
sbb
sti
mov
bound
add
jg
test
daa
cmp
iret
sub
push
xlat
adcl
jl
in
fcoml
mov
jno
push
and
mov
negl
and
adc
jo
jns
data16
enter
mov
cmpsl
sbb
dec
xor
add
cmc
je
mov
jmp
jge
push
add
push
mov
xor
je
mov
jne,pn
pop
mov
imul
push
jno
insb
aad
nop
push
sbb
mov
lds
or
inc
pop
lock
jae
push
push
call
movb
popf
sti
int3
imul
sti
daa
mov
xchg
inc
mov
mov
or
push
call
pop
push
movsl
mov
mov
dec
dec
fnop
mov
movb
outsl
dec
mov
outsb
push
jnp
sbb
testb
pop
inc
test
jne
out
mov
rcrb
and
hlt
loop
data16
pop
or
das
mov
add
je
mov
jnp
lock
jb
xchg
push
mov
test
or
jle
fs
push
xchg
in
cmp
adc
movl
pushl
lret
mov
dec
add
mov
enter
pop
filds
ret
add
nop
and
push
push
push
jo
sbb
mov
or
xchg
push
scas
pop
sbb
push
adcb
clc
popa
inc
add
mov
push
fistpl
adc
sysenter
xchg
test
push
adc
mov
or
push
mov
mov
sub
add
cmp
mov
cwtl
inc
pop
inc
sbb
and
sbb
pop
jge
xchg
hlt
push
add
cmpl
push
mov
lods
jb
push
call
add
adc
cmpsl
cmpsb
mov
mov
cltd
mov
mov
inc
push
lods
sbb
nop
or
enter
and
sbb
mov
adc
scas
or
test
push
lea
pop
push
dec
and
mov
jb
lea
in
das
les
jae
or
or
push
adc
lods
and
inc
test
adcb
sbb
dec
das
movsb
lods
movsb
xorb
xor
cmp
outsl
push
dec
jo
xlat
jno
xchg
pop
jbe
daa
in
dec
or
jo
dec
adc
sbb
inc
jae
xchg
adc
push
in
dec
push
mov
into
jg
and
xchg
jb
or
call
inc
call
adc
orb
or
and
stc
xorb
loop
mov
sbb
inc
bound
push
filds
xchg
and
and
dec
adc
dec
repz
cmp
mov
inc
xor
inc
int3
xor
mov
push
clc
adc
xor
pushf
add
push
lea
jnp
mov
in
dec
xchg
inc
sarl
mov
pop
cld
adc
xor
mov
dec
shll
push
ret
xor
mov
inc
pop
and
sub
test
push
enter
sarl
or
cmpsb
je
adc
push
sbb
mov
out
jno
push
mov
or
and
jg
mov
je
dec
lods
aam
rorb
pop
cmp
sbb
and
movsl
push
mov
cltd
or
sar
add
push
enter
fcom
loope
ds
mov
push
sbb
adc
popf
mov
lahf
pop
imul
dec
hlt
lea
push
out
nop
push
xchg
inc
pushf
daa
mov
je
jecxz
jmp
adc
setne
mov
dec
or
cmp
pop
je
repz
fcoml
arpl
enter
mov
ljmp
fs
xor
xchg
sub
clc
repnz
call
mov
adcb
mov
push
push
jp
xchg
and
and
leave
shlb
cwtl
sbb
jbe
or
stos
ss
mov
shll
pop
and
push
adc
cmpsl
and
gs
mov
fmul
movsb
sbb
push
add
adc
cmpsb
adc
call
shr
xlat
movsl
inc
adc
sbbb
or
sbb
jmp
push
call
inc
mov
jne
jmp
jmp
sub
test
fprem1
or
or
mov
jg
sbb
je
or
aad
add
pop
fnstsw
mov
cs
pop
jne
bound
fs
test
je
arpl
testb
lret
fdivrl
ret
jg
jmp
mov
fmull
in
lods
xchg
jmp
push
cwtl
movsb
or
call
pop
sub
das
pusha
enter
aaa
sbb
fistpl
je
cmp
decl
adc
push
les
mov
fwait
leave
js
push
xchg
adc
mov
xor
fxch
xor
rclb
jmp
dec
push
mov
cmp
insl
sbb
call
adc
sub
add
and
in
cmp
sub
inc
std
push
push
xor
js
dec
sbb
add
inc
add
adc
adc
and
adc
jge
and
or
fidivl
or
leave
xor
inc
mov
lock
mov
pop
mov
mov
jecxz
pop
mov
mov
lea
scas
jne
movsl
mov
jl
js
pop
sub
dec
cwtl
adc
fwait
les
ljmp
scas
loopne
sbb
mov
jle
xlat
jo
mov
sub
jbe
push
in
mov
ret
add
push
and
or
jne
push
arpl
filds
mov
bound
in
mov
push
mov
mov
shlb
xor
push
inc
push
sub
fidivrl
inc
cmp
sbb
mov
push
cmp
inc
sbb
fnstenv
mov
jne
pop
push
ret
test
jae
or
cwtl
ds
mov
xor
xor
mov
push
mov
or
xchg
and
push
adc
cmpsw
push
pop
push
lret
sub
or
and
mov
ljmp
inc
jo
std
cs
adc
out
and
aad
stc
xor
adc
add
and
imul
xchg
push
mov
ret
lods
xor
sbb
pop
dec
call
add
inc
repnz
push
popa
movsb
dec
mov
cli
mov
sbb
adc
sbb
test
sbb
shlb
add
xor
int
pop
ret
jns
test
ja
adc
aas
sub
mov
out
pop
mov
mov
adc
rclb
incb
jge
jg
insb
in
xor
mov
je
call
push
mov
push
inc
arpl
lea
aad
aas
or
adc
lret
sub
pop
fs
add
jbe
mov
fldt
jbe
pop
pop
repnz
push
lds
mov
pop
shll
mov
repnz
test
lds
mov
enter
daa
pop
lock
pop
ja
or
mov
call
sahf
lock
pop
addb
jae
and
repnz
call
and
popf
sub
sarl
cmp
xor
sub
pop
cltd
sub
push
xchg
mov
xchg
int3
jo
sahf
ret
stos
adc
mov
call
push
push
xchg
xchg
inc
jnp
cmpsb
icebp
roll
adc
sub
and
adc
push
test
or
sbb
pop
sub
pop
sbb
add
incl
iret
xchg
adc
push
lahf
into
lret
mov
hlt
and
in
aaa
push
hlt
fs
pop
inc
mov
jp
mov
xor
xor
mov
or
cmp
push
cltd
cli
push
add
or
xor
xor
xor
cmc
jno
cmp
or
push
xchg
inc
pop
add
xor
flds
xor
dec
jmp
pop
cld
roll
call
or
xor
cmp
les
sbb
mov
mov
push
cld
mov
mov
les
xlat
sub
mov
cmp
and
dec
inc
inc
or
mov
movsb
xor
cmp
cltd
push
clc
xchg
icebp
in
adc
add
push
insl
adc
iret
jl
inc
mov
insb
sub
inc
jo
arpl
jmp
lea
sub
or
adc
jae
push
pop
pop
loop
orb
add
jecxz
in
hlt
pop
xchg
mov
repnz
dec
dec
push
xor
fs
mov
mov
push
movsb
mov
mov
push
cmp
lret
pop
adc
jg
test
loop
cmp
sarb
fsubr
xlat
adc
addr16
push
lea
jb
mov
jo
cmpsb
sub
test
cmp
jg
mov
sub
and
pop
dec
mov
xor
stos
daa
cmpsb
aam
js
cld
popa
or
stos
push
inc
fnstcw
push
mov
jne
cmc
push
cltd
push
jnp
xchg
pop
push
add
mov
mov
sub
test
test
in
mov
test
shll
shll
or
or
ds
or
mov
xchg
pop
lret
and
imul
js
cmp
cmp
inc
or
inc
and
xchg
sub
xor
push
inc
jo
inc
sarb
add
shl
and
pop
icebp
movsb
push
in
dec
push
jecxz
cmp
dec
xor
into
pop
mov
jge
in
insl
inc
popa
push
or
and
mov
scas
iret
sub
pop
lock
aaa
popf
dec
mov
lods
sarl
add
jge
mov
xor
ds
jecxz
jmp
mov
xor
push
fstps
cmp
mov
test
lret
sti
cli
mov
jmpw
pop
push
inc
or
xor
adc
fisttpll
call
enter
test
adc
lret
and
incb
mov
int3
lea
and
push
rcrb
inc
test
xlat
mov
shr
cltd
repnz
divb
imul
je
ret
mov
in
push
daa
loope
and
fadds
aad
pop
data16
leave
movsb
dec
decl
dec
or
mov
ss
pop
push
les
mov
and
and
sar
pop
or
gs
add
dec
or
shl
adc
inc
push
push
sub
cmp
push
clc
sub
pushf
adc
inc
mov
and
mov
fmull
xchg
inc
and
scas
mul
mov
adc
or
lea
pop
sbb
sub
cmp
faddl
cli
fldenv
xchg
scas
push
adc
inc
dec
sbb
mov
and
clc
or
int
sub
push
loop
xchg
enter
push
call
mov
ljmp
pop
dec
in
loope
fnstenv
notb
jae
jne
inc
jge
ret
adc
adc
andb
push
add
push
xchg
cwtl
test
push
mov
xor
dec
adc
sub
or
je
xchg
adc
cmc
movsb
dec
and
dec
call
rcrb
adc
push
fisttpl
adc
aas
in
jl
inc
add
lea
jne
pop
lret
add
add
ret
mov
shlb
rorl
out
sbb
movl
fs
inc
sbb
fistps
xchg
jne
xchg
cmp
rol
inc
or
in
add
xor
xchg
imul
mov
in
mov
cwtl
xchg
inc
jb
pop
pop
movsl
xchg
imul
inc
fdivrs
insb
or
in
stc
inc
jnp
std
pop
push
in
int3
in
enter
call
enter
xchg
ljmp
repnz
cmp
jb
or
push
scas
test
lret
or
ljmp
and
dec
in
and
pop
jge
hlt
mov
push
jo
clc
mov
lcall
aam
idivl
out
xchg
orb
and
repnz
adc
cmpsb
and
lcall
inc
loop
decl
jo
or
push
mov
adc
push
cmp
sub
sub
push
push
les
es
and
negb
adc
pop
push
imul
dec
push
push
dec
jle
dec
cmp
cmp
pop
loopne
inc
adc
loopne
push
jae
cltd
mov
call
jl
mov
loop
pop
cmpsb
dec
pop
lahf
inc
cmpsb
sub
loopne
xor
cmp
repz
je
mov
jl
add
pop
jne
outsb
mov
sbb
out
adc
sub
daa
movl
lahf
sbb
adc
cli
pop
enter
push
xor
and
xor
shrl
lret
pop
xor
lcall
aaa
xchg
inc
sbb
cmp
aad
and
int3
mov
dec
pop
popa
lret
pop
cmp
movsl
push
jae
daa
jno
mov
fs
pushf
dec
xchg
divl
ljmp
or
popf
xor
mov
xchg
and
test
out
lds
push
ret
ja
jae
leave
rcll
push
cltd
lds
push
dec
mov
xor
pop
jmp
xor
push
inc
jo
cmpsb
mov
sbb
jmp
shrl
jle
sub
cmp
adc
push
loopne
push
stos
jg
aaa
or
jmp
int3
imul
adc
and
scas
mov
lock
cmp
clc
into
adc
cmp
pop
popa
mov
cmpl
stc
jg
out
jg
pop
jmp
push
xchg
inc
lods
push
shlb
mul
and
iret
aas
or
es
cwtl
ds
rolb
addl
inc
xor
sbb
es
adc
mov
jbe
in
mov
jecxz
or
jne
mov
and
fxch
jecxz
add
ljmp
imul
out
add
ja
dec
sbb
jg
pop
sbb
cmpl
pop
jbe
iret
inc
push
and
ret
xchg
test
pop
scas
xor
pop
inc
or
cld
jge
xchg
inc
je
push
push
push
enter
sbb
out
fsub
jns
inc
in
pop
pop
mov
inc
cmc
dec
cmc
shlb
cmp
adc
pushf
shll
incl
lret
sub
adc
daa
push
sbb
xor
pushf
fdivs
rorl
iret
inc
sub
inc
imul
mov
testb
jl
adc
mov
inc
loope
clc
hlt
out
lahf
xchg
lret
imul
cs
mov
int
call
out
xor
aam
mov
lock
sbb
dec
sub
adc
pusha
sub
jg
aas
and
and
dec
adc
movsl
inc
fdivrs
lods
std
cmp
jmp
xchg
loop
call
xorb
call
jl
and
mov
cmp
cmpsb
sti
in
cli
dec
call
hlt
push
xorl
dec
sbb
loope
inc
jg
and
adc
cmp
inc
push
mov
xchg
outsb
and
push
adc
aas
pop
enter
int3
es
clc
adc
xlat
lret
or
fcoms
jae
cmp
jge
mov
or
mov
mov
dec
adc
adc
mov
jbe
mov
push
mov
fs
and
jne
imul
pop
mov
leave
aaa
inc
jno
or
xchg
lock
sub
cmp
daa
daa
ret
hlt
push
or
lcall
add
or
inc
loope
shlb
add
je
push
nop
lret
cmp
inc
leave
scas
xor
aas
adc
sbb
in
andb
and
inc
fisttpll
mov
jne
loopne
mov
xchg
daa
add
push
sbb
outsl
lret
bound
push
imul
mov
fisubl
cmpsl
dec
fucomip
inc
test
add
ret
das
cld
pop
add
sbb
sbb
outsl
gs
call
cwtl
and
shlb
mov
inc
push
xor
push
clc
jnp
pop
movsb
pop
inc
push
outsb
clc
jg
mov
or
inc
or
xchg
hlt
icebp
movsb
ficoms
pop
xor
or
pop
dec
pop
push
adc
and
out
mov
hlt
jne
sbb
mov
xchg
mov
ds
test
adc
or
out
xchg
mov
cmpsb
cs
fwait
xchg
xchg
jge
cmp
mov
popf
or
and
mov
cmove
lcall
pop
or
mov
sbb
mov
divl
cmp
test
mov
adc
or
pusha
xor
xor
repnz
shlb
mov
push
and
into
sbb
daa
or
or
lret
and
sbb
push
sbb
push
xlat
cmp
or
adc
xor
sti
jmp
sahf
stc
cmp
jg
and
sbb
les
xor
jle
mov
dec
sbb
insb
xchg
and
xchg
pop
shlb
pushf
add
sbb
mov
mov
fcoml
xchg
jb
call
sub
dec
enter
xor
jbe
push
js
addb
xchg
add
sub
movsl
sbb
dec
push
mov
cmp
adc
and
push
dec
data16
push
cmp
lret
cmpsb
test
push
ja
push
adc
lahf
out
repz
div
das
push
adc
lahf
inc
jecxz
cmp
sbb
or
or
jnp
mov
jmp
out
jecxz
sub
add
or
push
mov
cmpl
fisubs
sahf
in
push
mov
mov
adc
mov
ja
sbb
aad
push
lahf
mov
lcall
pop
or
or
mov
leave
sbb
icebp
test
push
nop
adc
lcall
mov
inc
push
test
jbe
cli
mov
call
lock
jne
or
loopne
xchg
add
inc
addl
jb,pn
outsb
nop
out
movsb
mov
popa
inc
sub
mov
jbe
fiadds
sbb
roll
cwtl
pop
incl
mov
sub
cmpsb
and
pop
cmp
jne
call
xchg
xchg
push
test
call
adc
fwait
ljmp
sti
cmp
adc
imul
jbe
adc
xchg
dec
or
jle
push
inc
inc
je
call
push
push
outsl
dec
jl
push
sbb
mov
jmp
jp
popf
push
dec
xchg
mov
and
fldcw
lcall
inc
icebp
adc
ljmp
or
pop
push
call
mov
sub
test
mov
pop
das
sub
das
inc
jbe
inc
pop
call
ja
push
imulb
push
test
sbb
sbb
scas
imul
imul
addr16
mov
mov
aaa
div
mov
add
out
stos
ffreep
insb
add
jne
and
adc
mov
fildll
jae
lcall
icebp
insb
movsl
in
bound
in
push
test
cld
jge
inc
ret
xchg
icebp
inc
insl
mov
cmc
or
addb
xlat
sbb
dec
and
adc
test
scas
dec
adcl
add
sbb
mov
lret
mov
out
xor
daa
lea
adc
filds
push
mov
xchg
mov
xor
movsb
mov
daa
xchg
stc
push
inc
jo
dec
pop
mov
inc
or
dec
cmpsl
pop
lea
add
call
daa
jge
std
and
xchg
adc
adc
imul
and
std
scas
add
pop
add
inc
callw
lcall
fs
jb
add
pop
divb
add
cmp
test
adcl
scas
into
xlat
xor
sbb
lock
dec
xchg
xchg
nop
cmp
flds
xor
fisubrs
out
and
inc
stos
xor
mov
push
dec
jo
push
adc
cld
push
stos
out
mov
mov
dec
and
call
mov
fldcw
cltd
push
push
sbb
or
jnp
jl
test
xchg
clc
xor
mov
or
mov
ret
shll
xor
xor
cmpsb
xchg
xlat
and
mov
sub
add
ss
jnp
push
cltd
xchg
xchg
icebp
je
test
jg
adc
push
cmp
out
fnstenv
adc
or
es
sbb
xchg
pop
mov
lea
or
dec
inc
adc
nop
cltd
idivl
or
je
mov
negb
push
mov
pop
mov
lret
push
xor
shlb
jmp
xchg
sbb
mov
xchg
sbb
lea
popa
mov
mov
mov
and
push
dec
mov
push
stos
test
mov
push
push
and
mov
mov
and
push
mov
nop
xlat
enter
adc
dec
xchg
ljmp
pop
in
jmp
sub
cmp
dec
cmp
sub
cmp
adc
fstl
jle
fidivs
push
or
out
fcomps
mov
mov
push
movsb
int
je
dec
add
rcrl
xor
jne
xor
sub
sbb
aas
sub
bound
ret
mov
jg
xor
jmp
clc
out
shr
iret
mov
cmp
sbb
jmp
cwtl
cwtl
cmp
test
add
inc
rcrb
popa
fsubrs
or
xor
xor
mov
push
or
push
sub
mov
enter
dec
mov
or
stc
lock
jae
cmp
jnp
and
iret
cs
mov
pop
shl
adcb
add
je
push
inc
popa
stos
jne
push
jle
jae
dec
les
bound
lret
mov
pushf
stos
jb
dec
sbb
dec
mov
aas
sub
sbb
or
test
mov
add
xchg
nop
sahf
cmp
push
call
cmp
sub
enter
movzwl
inc
mov
lea
mov
ret
pop
iret
loopne
rcll
mov
in
dec
test
ret
xchg
adc
sbb
inc
inc
cmp
cmpsl
inc
int
mov
pop
test
dec
adc
push
adc
leave
in
arpl
jbe
int3
jne
add
enter
decl
mov
mov
mov
jo
add
sub
mov
enter
jae
inc
xor
lcall
cmp
je
cmp
mov
inc
xor
mov
repz
inc
push
pop
movsl
push
pusha
shlb
stc
or
jge
data16
jbe
jno
ss
push
in
lods
loopne
inc
and
or
loope
in
mov
jnp
adc
not
add
xchg
push
cmp
push
fbld
cli
jno
daa
loopne
stos
push
or
push
and
add
inc
test
adc
push
adc
sub
xchg
inc
inc
and
sub
bound
or
xchg
pop
movb
cmp
and
jge
push
data16
sbb
mov
sbb
lret
loope
pop
and
enter
inc
adc
jns
or
test
add
out
adc
and
xlat
xor
hlt
push
dec
in
mov
shr
test
test
leave
xorb
push
adc
loopne
call
jbe
loope
xlat
stc
scas
adc
inc
and
mov
call
adc
push
and
ret
pop
mov
push
es
adc
cltd
rclb
testb
or
inc
fisubrs
push
push
cmp
or
push
cltd
fistl
add
and
cmp
loopne
add
fstl
adc
sub
pop
or
cmp
addb
push
fisubl
mov
sub
leave
mov
sbb
mov
mov
mov
lock
xor
ss
les
popa
or
je
popf
adc
jmp
fs
pop
negb
adc
idiv
nop
aaa
add
out
dec
adc
mov
test
and
xor
pop
and
repz
or
cmp
sarl
loop
in
inc
push
icebp
push
pusha
adcl
push
jmp
cwtl
add
test
jne
out
dec
dec
add
imul
hlt
push
cmp
rcrb
pop
xchg
sar
sbb
and
or
shlb
push
cmpb
loop
or
sub
lret
mov
xorl
sub
test
mov
or
inc
in
push
jmp
cs
into
test
sbb
fisubrs
jno
push
sub
sbb
add
push
sbb
add
add
test
push
pop
or
sbb
sub
or
movl
inc
mov
mov
xchg
stc
dec
inc
sar
and
fisubl
test
xlat
push
fs
out
dec
pop
rolb
or
hlt
ss
mov
add
or
mov
fidivrs
lock
test
adc
adc
or
sbbb
and
and
xor
mov
test
leave
sbb
jmp
and
sub
call
or
add
mov
jns
push
inc
sbb
repnz
aaa
testb
bound
jecxz
icebp
test
mov
xchg
ret
cltd
mov
xor
sub
pusha
std
jb
mov
sub
cmp
adc
xchg
mov
fcoml
call
scas
dec
lret
js
xchg
test
cmp
and
xor
ds
es
lods
xor
stos
cmpb
push
je
testb
je
lret
rclb
pushf
out
rclb
sbb
push
es
push
les
cwtl
sti
and
sbb
xor
mov
adc
inc
sbb
jns
stos
or
push
std
push
mov
or
inc
jmp
pop
xchg
loopne
and
mov
mov
xchg
outsl
add
dec
testb
adc
jmp
or
inc
cmp
sbb
and
insb
aad
add
adc
stc
sbb
cwtl
pop
mov
ljmp
push
jne
xchg
sti
jmp
mov
push
adc
mov
mov
jne
enter
cltd
inc
xchg
je
call
sbb
inc
xor
nop
push
orb
sbb
mov
push
nop
pushf
mov
fs
daa
or
cmc
decb
jl
inc
ljmp
je
push
sbb
xchg
or
mov
mov
sub
bound
test
ret
jmp
push
xor
lret
dec
push
dec
nop
and
add
cmp
add
aad
repz
not
sub
in
xor
data16
test
mov
or
test
push
hlt
mov
bound
xor
jp
imul
or
cmp
jmp
dec
add
movl
mov
call
mov
xor
push
cmp
enter
jmp
mov
sub
leave
push
jnp
rcr
xchg
stc
or
adc
lret
rolb
sahf
stos
fsubr
fistpll
push
and
test
cmp
stc
and
jae
leave
mov
pop
shr
addl
cmpsl
bound
inc
mov
mov
add
pop
ja
xchg
add
mov
pop
rcll
std
fisttps
cmp
sbb
ret
clc
lret
mov
jns
pop
cmp
push
mov
cmp
lea
cltd
sarb
dec
lahf
sbb
push
or
jl
cmp
or
mov
sub
clc
scas
les
enter
or
mov
cld
roll
cmc
pop
mov
inc
cmp
and
or
lds
int
hlt
cltd
push
sub
out
push
cmp
jmp
dec
xchg
and
subl
cltd
call
mov
mov
xchg
xchg
sahf
movsb
aad
push
fdivs
xchg
adc
add
loop
lret
jle
lahf
or
mov
jb
ja
and
jbe
call
cmp
sbb
push
imul
pop
int
xor
xchg
inc
adc
push
or
in
adc
hlt
add
dec
jne
xlat
ffreep
and
ret
sub
lock
sbb
outsb
ja
sub
adc
push
adc
dec
mov
dec
sbb
push
sbb
jge
loop
jo
xor
lret
pop
ret
loop
push
ret
jno
xchg
push
call
inc
xchg
movzbl
sub
cwtl
pusha
out
add
mov
popf
adc
int
dec
adcb
out
sbb
fs
adc
mov
mov
pop
add
jle
ss
adc
inc
cmpsb
mov
mov
xor
call
xchg
mov
into
out
or
rorl
mov
mov
enter
adc
mov
test
mov
arpl
mov
les
ret
rorb
cli
xchg
xchg
push
pop
test
lret
adc
adc
ds
mov
cmp
leave
mov
in
dec
or
insb
scas
and
icebp
jl
mov
mov
movsl
sti
popl
les
xorl
mov
push
or
fisubs
leave
data16
inc
ret
dec
ja
cwtl
jo
mov
inc
filds
jns
sub
clc
add
xchg
jae
mov
add
call
cmp
push
call
adc
nop
push
fsubrl
add
call
push
jnp
add
add
jmp
bound
roll
mov
movsb
ds
inc
adc
test
add
xor
rcr
or
xchg
push
call
sbb
pop
leave
lods
jae
xorb
or
xor
stos
lods
push
xchg
add
and
lock
sahf
inc
test
xor
in
xor
push
ffree
out
push
and
or
cmpsb
emms
adc
add
pop
cmp
pop
popa
inc
bound
sub
sbb
jg
test
dec
ja
mov
popf
rolb
je
adc
xchg
jnp
jmp
roll
cwtl
test
mov
sarb
cmp
dec
jecxz
and
sub
mov
stos
pop
xor
push
jmp
and
out
mov
push
inc
cltd
cld
cmpsb
loopne
fs
adc
sbb
insl
in
push
cmp
cmp
mov
pop
dec
cmp
mov
aam
pop
pop
push
imul
popf
mov
push
sbb
inc
call
sub
jecxz
test
fmuls
je
cmp
mov
or
cmp
jge
or
inc
add
mov
inc
neg
sbb
and
sbb
sti
pop
pop
jmp
addl
sahf
out
xchg
inc
inc
adc
shlb
sbb
out
lds
inc
mov
std
jne
inc
add
mov
add
inc
sbb
lret
sub
test
xchg
adc
jns
inc
mov
add
gs
mov
push
sti
and
call
mov
icebp
and
sar
sti
movsb
int
jg
cld
mov
jmp
push
lds
add
add
in
nop
pop
and
inc
sbb
dec
cld
jb
or
or
xchg
xor
mov
or
leave
jb
outsb
push
leave
mov
sbb
mov
mov
repnz
sarw
or
push
sub
push
mov
jbe
mov
test
pusha
lock
dec
ss
ret
push
or
in
hlt
mov
add
dec
xchg
insb
mov
shl
das
xchg
mov
push
icebp
sub
pop
or
test
mov
and
inc
adc
movl
push
push
sti
mov
fldcw
sbb
dec
add
aad
or
inc
jo
sbb
shlb
push
xchg
add
sub
jno
push
dec
add
sub
inc
mov
xchg
xchg
cmp
insl
jae
sub
stc
cmp
jbe
mov
xchg
dec
les
ss
fs
iret
adc
roll
insl
fisubs
push
dec
sub
sub
jae
sahf
orb
push
rcrb
cld
dec
inc
jb
dec
jbe
or
shl
sbb
jb
xlat
call
adc
jns
pop
push
daa
jmp
nop
pushf
je
adc
cmc
adc
inc
dec
pusha
dec
rorb
insl
adc
adc
pop
vpmullw
cmp
cmp
repnz
dec
mov
rcrl
xchg
rorb
and
mov
xor
push
sbb
movsl
xor
aam
push
hlt
mov
push
xchg
and
les
divl
inc
or
sbb
dec
push
xchg
pop
nop
pop
and
sbb
dec
sahf
leave
loopne
jno
fadds
jb
dec
xchg
mov
mov
test
enter
push
roll
mov
hlt
push
addb
push
ljmp
dec
cmpsl
or
xchg
adc
push
push
subb
hlt
mov
adc
std
sbb
sbb
fucomi
ret
cltd
sub
mov
inc
jnp
lret
and
cmpb
adc
and
add
mov
pop
mov
mov
pop
lcall
or
xor
and
dec
shr
mov
xchg
into
push
mov
push
cmp
and
mov
insl
test
push
repz
mov
mov
jmp
mov
pop
inc
mov
lret
push
sub
push
orl
test
dec
imul
dec
in
xor
pop
jnp
dec
or
pop
loope
test
and
and
xor
mov
dec
repz
adc
repnz
push
sub
inc
nop
jmp
aas
loop
cmp
and
je
push
mov
sub
lods
out
aad
lea
clc
sbb
pop
rcrl
cwtl
xchg
mov
sub
xor
imulb
sub
ret
jl
fldt
ljmp
rcrl
xor
pop
jb
mov
mov
adc
inc
dec
cld
je
pop
cmovbe
mov
jmp
sti
jge
lods
xchg
popa
cmp
cmp
sbb
jbe
cwtl
push
fcoml
mov
shr
xor
lock
shl
push
adc
ja
or
lds
or
mov
sub
stos
cld
out
cmpb
cmp
shll
and
cmp
aas
xor
pusha
sub
int3
sub
xor
add
hlt
sbb
lret
pop
lock
imul
jle
loope
mov
add
dec
sarl
jmp
push
mov
push
sbb
fwait
jecxz
mov
jb
test
andl
sbb
push
cmpxchg
sti
adc
daa
pop
fimull
sub
adc
fcomps
mov
mov
stos
cltd
pusha
xor
dec
mov
lea
popf
pop
test
mov
insb
aaa
dec
push
bound
ss
idiv
jmp
les
mov
push
cmp
jg
xchg
sub
es
cmp
leave
int
push
lds
sahf
push
pop
mov
mov
outsl
xchg
movsb
in
and
xchg
sbb
adc
pop
sbb
jno
lea
and
inc
or
clc
mov
or
xor
test
or
test
or
cmp
mov
inc
push
loope
mov
sbb
leave
movnti
xor
and
sbb
and
dec
cwtl
loop
pop
lods
pop
pushl
call
loop
stc
out
push
dec
shr
mov
push
dec
mov
jo
call
push
rorl
add
add
mov
xor
pop
mov
or
dec
cmp
push
call
add
leave
push
test
hlt
push
mov
cmp
sbb
sbb
mov
movsb
ret
xor
push
imul
adc
xor
cld
ret
xlat
sbb
aas
cmpsb
sbbb
cmp
adcl
cmp
insl
lods
fcoms
je
int3
lahf
cmp
ret
loopne
pop
push
out
nop
cmp
nop
push
nop
adc
and
int3
mov
repz
fs
jne
sarb
adc
push
inc
mov
mov
dec
and
mov
insl
movsl
pop
dec
or
mov
jne
push
out
push
fs
jbe
jmp
push
mov
out
mov
add
adc
mov
jg
jmp
in
push
mov
lods
out
pusha
rcrb
sahf
xor
mov
imul
sbb
aas
mov
and
pop
dec
adc
ret
fiadds
nop
adc
les
inc
add
dec
dec
pop
and
rolb
cmc
lret
jge
lahf
inc
mov
adc
cli
mov
mov
aam
movaps
pop
pop
pop
movl
pop
pusha
sbb
xchg
and
test
mov
cmc
js
xchg
mov
sbb
pop
mov
mov
dec
pop
cmpb
ror
jmp
loop
add
cmpl
nop
pop
push
je
mov
mov
test
inc
popf
mov
fisttpll
or
sub
pop
cli
pop
pop
cltd
in
repz
mov
cwtl
loope
dec
mov
mov
gs
mov
cmp
xchg
loopne
test
pop
sub
test
pusha
loop
fstl
sti
adc
jae
loop
sub
xchg
xchg
cmp
mov
or
jne
movsb
adc
dec
or
mov
es
sbb
or
sbb
ja
leave
lret
test
push
jl
inc
pop
adc
xor
enter
lea
das
mov
xchg
sbb
dec
inc
je
cmp
xchg
mov
jae
xchg
add
jmp
bnd
dec
addr16
or
mov
pop
adc
test
lea
sbb
sbb
mov
mov
add
and
js
rcrl
mov
shlb
xchg
inc
jo
or
xor
jbe
push
pop
or
or
adc
inc
push
sbb
and
stos
xor
ret
pop
or
rcrl
clc
call
mov
cwtl
sub
and
movsl
dec
mov
cmc
pop
scas
das
mov
mov
dec
clc
movsb
mov
sbb
sbb
cmp
mov
inc
pop
scas
inc
mov
jbe
popf
jb
jl
inc
rcll
add
add
cmp
xlat
mov
mov
dec
movsb
adc
mov
fs
push
and
jmp
scas
sti
and
cmpsb
cmp
sub
mov
movsb
mov
mov
and
or
cmp
or
arpl
cmp
mov
inc
addr16
push
push
pop
ret
add
cwtl
dec
pop
mov
pusha
out
fs
mov
mov
sbb
popa
pmuludq
dec
xor
xor
sub
stc
sbbb
jne
push
ret
data16
test
jl
cmpsb
mov
xchg
and
testb
sub
jne
orl
test
xchg
push
sub
adc
mov
mov
cwtl
ret
and
je
and
xchg
or
sub
inc
and
call
jl
test
cmp
pop
inc
nop
jne
mov
nop
ret
add
adc
js
orl
cwtl
icebp
inc
jmp
jl
jo
mov
test
cmp
iret
movb
pushf
mov
daa
into
aam
dec
jle
aas
adc
sbb
cwtl
dec
xchg
mov
fdivrs
xor
dec
clc
push
jl
cld
lret
pop
cld
inc
lods
xor
je
dec
data16
jmp
or
add
int3
popa
call
mov
jns
sub
push
notl
xlat
popa
es
mov
cli
cwtl
fidivrl
xchg
or
insb
mov
jne
aas
cmpb
movb
push
loopne
adc
imull
pop
call
cld
daa
mov
cmpsl
out
inc
adc
xchg
adc
or
mov
and
or
cmp
insb
add
fistpll
scas
repnz
fbstp
frstor
jae
add
icebp
xor
cmp
mov
jge
push
xchg
inc
leave
mov
xor
out
sbb
scas
call
int
ds
mov
push
jae
lods
pop
xor
lret
js
nop
dec
dec
push
icebp
test
pop
aam
hlt
adc
into
dec
xchg
mov
adc
pop
decl
cmp
daa
sbb
insl
pop
push
movb
push
adc
andl
test
push
mov
xchg
rol
cmp
ja
inc
pop
cli
cmpsl
in
pop
rol
pusha
jb
cltd
and
push
adc
mov
pslld
mov
sbb
sbb
les
push
or
ds
stc
and
inc
adc
fwait
mov
lods
rcrl
push
mov
xchg
jle
adc
scas
xor
xchg
mov
popa
rcl
adc
mov
xchg
loop
xor
je
cmpsl
inc
sbb
test
sub
dec
sbb
pop
mov
insb
xlat
test
jg
test
mov
push
push
push
sbb
dec
adc
test
xor
arpl
mov
push
or
mov
jmp
lret
test
dec
pop
add
push
xchg
adc
mov
lods
push
ret
jmp
xchg
pop
orl
test
jbe
pop
mov
cs
imul
cmp
fcoml
xchg
out
popa
pop
jns
or
int
mov
xor
push
rcll
sbb
add
test
sbb
jecxz
inc
jp
data16
idivb
push
call
inc
sub
in
outsb
adc
scas
div
sub
mov
and
outsb
fdivs
je
xchg
xor
int3
rol
or
xchg
jo
and
out
xchg
imul
xchg
shll
scas
xchg
dec
xor
outsb
andl
fisubl
subl
cmp
insl
sub
fsubs
fisttpl
je
mov
xorb
popf
icebp
mov
jb
icebp
inc
mov
lock
mov
add
cwtl
idivb
fisubl
test
ss
inc
jmp
testl
shr
and
and
mov
and
lret
push
xor
pop
mov
sbb
sti
xchg
jl
xchg
push
sbb
adc
or
lods
adc
test
or
dec
sub
dec
out
inc
or
sub
stc
jae
mov
mov
xor
js
xor
sub
rcrb
movzwl
mov
adc
icebp
xchg
in
jae
inc
or
enter
aad
push
std
inc
adc
xor
lea
pop
push
call
inc
sub
movsb
dec
xor
adc
int3
mov
add
sbb
aad
inc
in
cli
loope
cld
mov
or
in
scas
imul
pop
pop
hlt
push
leave
or
adc
xchg
dec
push
dec
mov
push
and
scas
push
and
and
mov
clc
or
inc
lods
dec
jle
xor
sub
fs
das
and
push
cmp
lods
pusha
negb
and
les
int3
push
fistl
adc
dec
call
imul
sub
or
pop
je
shl
mov
xchg
out
jne
mov
jns
mov
aad
cmp
mov
cmc
sub
adc
aaa
pop
mov
xor
adc
frstor
sbb
lea
lret
mov
fwait
enter
aaa
dec
push
sbb
je
mov
test
pop
clc
fsub
dec
inc
cmp
mov
cmp
pop
dec
cltd
push
and
das
cmp
sbb
aaa
std
mov
stc
shll
inc
lds
or
and
xor
jae
push
call
sbb
cmp
sub
mov
shrl
xor
rcll
xor
pop
insb
stos
out
cmc
cmpsb
in
daa
inc
adc
cmp
jmp
movsb
push
jb
add
sub
aaa
add
stos
lcall
add
fsubr
cmp
shll
pop
mov
adc
mov
pop
sub
mov
mov
adc
fcoms
inc
adc
sarb
jecxz
and
or
imul
mov
hlt
fisttps
and
push
mov
sbb
and
jb
dec
addr16
mov
pop
es
pop
inc
adc
clc
and
and
push
andb
push
push
mov
test
jne
jb
ljmp
bound
aad
pop
daa
dec
sbb
sar
mov
mov
dec
or
inc
shlb
ret
adc
mov
das
sbb
int
cs
cmp
adc
jmp
lcall
jbe
ss
sub
cwtl
insl
xchg
or
pop
roll
add
mov
call
jo
xor
jns
aas
je
jmp
cmpsb
dec
cltd
das
imul
push
dec
gs
dec
push
bound
add
cld
cld
mov
cmpsl
leave
and
xor
lea
test
push
cmp
xchg
inc
popf
into
gs
jmp
roll
push
icebp
xor
pop
and
cmp
push
test
adc
sahf
mov
jne
mov
sbb
inc
out
adc
inc
inc
sub
jmp
adc
xor
xchg
fwait
inc
stos
xor
and
ja
jmp
pop
mov
jne
ja
cmp
sub
push
cmp
and
and
rorb
dec
clc
popf
in
movups
ficoms
je
sbb
inc
orl
inc
adcl
fdivs
hlt
loop
jp
inc
push
pop
and
cmp
and
sub
mov
inc
adc
inc
enter
lret
sti
call
xlat
sub
test
neg
aaa
sub
or
iret
out
xchg
inc
cmpsb
jge
test
mov
mov
sub
cmp
add
or
inc
or
daa
subl
lock
add
push
daa
daa
pop
cmpl
out
add
jmp
adc
xchg
scas
cwtl
xchg
adc
sarb
iret
xchg
fildl
lahf
and
or
xor
loope
lahf
sub
sbb
cmp
xchg
push
lahf
mov
fcoml
loopew
popa
inc
stc
jb
imul
cmp
jl
push
mov
pop
js
jge
mov
pop
cs
cmpsb
fmull
push
es
jg
xor
lods
daa
pop
pop
mov
dec
in
sub
cmp
cmp
inc
pop
out
je
aam
jbe
add
lahf
add
test
jne
or
jbe
arpl
mov
addb
pushf
mov
push
cmp
fldl
sahf
or
jo
call
lahf
ljmp
ret
fld
scas
mov
lahf
xchg
mov
daa
mov
cmp
arpl
lahf
sub
add
sbb
and
jmp
imul
sbb
cmp
dec
cmp
stos
fcoms
lods
pop
test
push
and
stc
imul
mov
jne
cld
out
push
pop
orl
xorb
pop
adc
or
iret
and
push
inc
ljmp
adc
js
push
sbb
add
pop
mov
adc
ds
aas
ja
and
sub
enter
pop
xor
jnp
inc
outsb
int3
mov
sbb
jle
inc
cmp
jne
das
andl
movsl
loop
mov
sbb
lods
jo
les
mov
jns
repz
cmp
movsb
stos
lret
mov
dec
inc
jo
xadd
push
subb
add
aas
mov
sti
bnd
les
inc
add
out
push
mov
call
push
or
shlb
pop
xchg
ret
pop
xorl
add
xchg
mov
xorl
jmp
dec
dec
bnd
repz
adc
popf
xor
pushf
std
push
ljmp
loop
push
adc
fsubl
imul
push
nop
add
push
xchg
lods
sahf
xor
out
or
cmp
loopne
sbb
or
sub
fwait
out
mov
inc
sbb
add
addb
stc
xchg
test
xlat
xorb
fistl
push
call
jo
xor
sbbl
cmpl
sbb
int
cs
std
loop
mov
das
push
cs
loope
jge
cmc
in
jb
and
negb
ret
jne
cmp
movsb
pop
xor
add
sbb
testb
add
loop
add
testl
pop
sub
test
addr16
cmp
jne
ror
sub
adc
inc
rclb
add
jne
xchg
call
cmp
jl
cld
and
dec
movsb
pop
aad
mov
sub
sbb
cmp
loop
sub
jmp
sar
adc
aaa
iret
sub
lahf
outsb
cwtl
inc
pop
push
cmc
test
adc
mov
movsb
das
mov
scas
addr16
imul
sub
out
mov
add
push
push
test
dec
add
sti
sbb
js
xchg
add
outsb
dec
jne
das
jmp
mov
or
mov
dec
pop
in
mov
cwtl
push
test
and
icebp
cmp
dec
and
cmp
lock
cmp
add
push
in
push
jo
and
jmp
jo
sub
inc
hlt
shll
mov
cmp
mov
iret
popf
cmp
mov
cmp
dec
insb
inc
push
jmp
sbb
fildll
adc
push
adc
sbb
enter
jmp
xchg
push
inc
sub
les
mov
adc
test
xchg
ds
into
faddl
pusha
cld
testb
push
jg
xlat
popa
out
mov
ret
or
dec
inc
addl
adc
mov
pop
rcrl
sbb
rorb
std
or
cmp
or
pop
call
cmp
or
mov
dec
sub
inc
jg
jmp
dec
jb
loopne
sub
je
dec
jne
negb
cmpsl
inc
mov
call
loop
sub
and
imul
xor
pop
and
ss
cmp
mov
xchg
adc
jbe
mov
xchg
sub
push
or
inc
sub
dec
mov
pop
jmp
dec
jo
pop
cwtl
or
gs
cmp
in
inc
jg
or
add
adc
das
sub
lcall
dec
test
mov
dec
add
fmull
jmp
es
dec
pop
fcmovnb
outsb
xor
mov
imul
addl
sub
lock
sub
je
xor
call
pop
or
adc
mov
add
movsl
pop
mov
and
mov
push
xchg
ljmp
mov
add
ja
lea
loope
add
inc
das
movl
enter
jne
cwtl
leave
lcall
add
cmp
jbe
aam
ja
sbb
bnd
sub
cmp
sub
das
xor
sub
lcall
out
sbb
mov
pop
xchg
lea
call
pop
int3
daa
mov
pop
scas
dec
lds
leave
push
shl
push
les
add
sub
adc
adc
lea
push
call
mov
orl
cmp
and
mov
hlt
sub
xchg
mov
in
mov
jae
nop
jecxz
das
xchg
test
popa
vpaddsb
pop
push
add
or
pop
dec
push
nop
jmp
fnstsw
push
call
inc
xor
imul
push
pushl
ret
add
fcomps
adc
call
insl
gs
xlat
xchg
aam
negb
insl
xchg
push
lods
cmp
in
xchg
andb
jbe
pushf
in
xchg
leave
das
into
xor
into
call
xchg
fs
and
int
jg
inc
inc
fmull
je
rol
aaa
jmp
mov
inc
and
ds
sbb
shl
xlat
adc
psrad
lret
stos
in
and
lods
dec
data16
or
or
orb
lcall
lea
outsb
int
into
pop
or
in
cs
mov
daa
jbe
push
adc
push
xchg
mov
incb
pop
adc
xchg
push
js
push
inc
aad
pop
pop
cmp
into
adc
add
jge
mov
push
test
push
std
subl
clc
xor
je
rolb
push
push
cs
daa
lahf
push
int3
push
dec
cld
fildl
cs
fldcw
popa
mov
cmp
stos
fnstenv
cs
call
idivb
sbb
dec
mov
enter
dec
scas
rcrb
les
test
inc
repnz
mov
aam
cmpsb
fidivl
es
leave
pop
pop
jmp
sbb
and
or
inc
push
shrb
sub
xchg
cmpsl
stos
jo
and
sub
jecxz
or
jmp
fcmovnbe
mov
pushl
push
jge
jns
jl
add
mov
pop
xor
clc
dec
or
mov
ret
cwtl
roll
out
jbe
pop
mov
cs
mov
outsb
cmp
stos
daa
pop
int3
push
dec
adc
mov
mov
cmp
jae
add
scas
push
xchg
enter
xchg
dec
inc
aad
pop
lods
call
inc
sahf
adc
sbbl
popa
nop
cwtl
push
and
add
pop
out
je
cmpsb
cmpsl
sub
insb
and
add
sub
mov
adc
dec
call
or
lret
ret
pusha
sub
jle
inc
xlat
adc
ffreep
cmpsb
adc
push
movsb
push
mov
xchg
add
cmp
inc
lahf
cmpsb
jl
imul
inc
pop
in
test
je
jp
dec
and
ljmp
mov
adc
scas
dec
adc
imul
push
sarl
cld
mov
out
and
pushf
loopne
push
push
in
cmp
adc
sbb
pop
fdivs
push
or
sub
nop
sbb
jmp
push
test
and
shr
les
push
dec
cwtl
and
sbb
inc
fsubs
aas
or
ret
mov
xchg
sbb
daa
and
push
jg
enter
sub
push
sbb
adc
ljmp
sbb
inc
and
jmp
cwtl
shl
dec
xchg
jae
push
adc
addr16
shll
sub
pop
jns
rorb
pop
push
icebp
xlat
and
pop
popf
shll
mov
inc
sbb
outsl
xor
and
ds
lahf
sub
and
mov
jge
enter
jo
insb
xchg
jns
xor
mov
rorl
adc
and
and
xchg
pop
pop
mov
or
sbb
push
notb
push
sub
inc
sbb
or
sti
clc
push
mov
pop
xchg
jmp
into
enter
cmpsb
mov
adc
and
mov
xor
fcmovu
xchg
arpl
pop
out
sbb
pop
pop
aad
sbb
lds
xor
ss
xchg
mov
sahf
or
leave
mov
and
xchg
fdivs
xor
cmp
add
or
pusha
adc
add
mov
js
ret
push
mov
movsl
enter
mov
pushf
xor
leave
push
ds
ss
add
xchg
es
adc
out
lret
push
pushl
sub
jg
pushf
in
pushf
mov
mov
push
lock
mov
cmp
jbe
cmp
orl
xchg
cld
cmpl
inc
lea
clc
popf
and
push
sub
and
sub
mov
mov
outsb
xor
mov
add
lea
lods
cmpb
push
dec
cmp
jge
movsl
cmpsb
cmp
fldt
sarb
add
cmp
xchg
sti
xor
push
jb
pop
sbbb
or
push
pop
xchg
inc
lret
gs
xor
rorb
and
adc
std
addr16
jbe
and
lods
inc
clc
loope
daa
arpl
fcmove
cmpsb
aas
das
call
int3
pop
js
mov
push
lock
movsb
and
out
adc
xchg
lods
int3
popa
pop
add
sub
movsb
lcall
in
push
cmp
mov
addl
sbb
cmp
mov
sub
mov
fdiv
or
testl
int3
dec
or
lds
inc
jno
xchg
aad
int3
lret
clc
popf
or
stc
int
sub
jl
loopne
scas
aam
test
scas
or
fadds
adc
adc
in
sti
enter
nop
sahf
in
das
xor
mov
cmc
jo
sbbl
insb
dec
and
pop
and
and
jmp
sbb
dec
daa
add
ror
sub
fstl
call
imul
dec
pop
in
jg
mov
movl
cmp
sbb
bound
xlat
cmp
jo
cwtl
push
clc
dec
lahf
fmuls
sub
xor
mov
add
mov
jne
xchg
xor
testl
and
sbb
and
inc
fwait
dec
dec
movsl
adc
push
dec
push
jmp
or
or
mov
push
ljmp
insb
js,pt
or
mov
sub
repz
inc
push
ror
adc
sbb
adc
incb
add
xchg
test
les
pop
pop
inc
jnp
sbb
lret
pop
adcb
or
mov
addb
push
push
call
adc
lret
loope
and
jle
mov
add
push
aad
sub
and
inc
xor
and
push
pop
mov
xchg
or
or
mov
nop
and
rcl
mov
add
mov
sub
or
dec
popfw
fstpl
sub
clc
push
mov
and
pop
int
bound
xchg
and
adc
clc
adc
jns
xchg
jmp
idivl
xchg
mov
add
pop
clc
cltd
or
cld
sar
push
xor
pop
sub
mov
outsl
add
lds
sub
and
loope
sub
xor
incl
mov
pop
cmpl
jecxz
pop
stos
fs
or
cmc
xchg
or
pop
or
call
test
mov
adc
or
rorl
cmp
aad
ret
in
fistpll
jo
das
jmp
aam
push
loopne
push
mov
or
jge
push
xchg
int3
aam
scas
hlt
mov
sub
mov
sti
jb
js
stos
mov
cs
mov
push
cmp
add
mov
out
sub
pop
mov
out
sub
repnz
sbbb
push
push
stos
into
xchg
xor
push
sub
int
dec
shrl
mov
js
mov
mov
xor
adc
push
ss
dec
and
sti
push
mov
xor
es
or
stos
popa
push
and
mov
xor
mov
outsl
adc
lods
pop
notb
rorl
jp
sti
inc
fdivs
enter
or
sti
add
out
xchg
mov
adc
dec
add
movsl
rorl
inc
xor
jg
repz
je
rcrl
dec
cmpsl
pushf
xlat
mov
dec
out
enter
sbb
push
out
int3
movsl
mov
pop
or
cltd
in
cmovp
sbb
adc
cmovo
into
mov
pop
mov
sbb
push
stos
fcoms
and
add
movsb
or
ret
adc
stc
dec
movsb
sub
inc
clc
sub
mov
pop
mov
mov
test
aas
push
inc
or
cmp
and
imul
test
push
mov
jg
cld
dec
or
pop
fldt
cmp
lret
xor
adc
fisubrl
add
outsb
adc
icebp
sahf
sbb
xchg
mov
scas
mov
mov
js
pop
or
popa
sbb
push
jae
movsl
pop
mov
stos
mov
mov
xchg
loop
ds
push
xchg
pusha
dec
sbb
sbb
dec
add
lods
adc
fidivs
add
adc
adc
int3
out
je
xchg
or
adc
and
in
cs
mov
inc
push
mov
pusha
cld
mov
mov
cmp
pop
jns
clc
inc
sbb
icebp
sbb
xchg
or
inc
mov
push
ret
xchg
push
lret
inc
rorb
push
push
es
cmc
jmp
movsl
mov
je
das
test
cltd
mov
iret
cmp
mov
out
xor
pop
cmpl
xor
or
mov
add
lods
cld
inc
call
pop
xlat
inc
xchg
mov
adc
xor
dec
out
push
setno
dec
outsl
repnz
mov
mov
data16
push
push
test
sbb
push
mov
ljmp
fwait
out
or
jmp
mov
jmp
cwtl
popf
jne
ja
rorb
mov
push
mov
loope
and
inc
rclb
cmp
cltd
aam
les
sub
pop
int3
negb
xchg
cwtl
push
xchg
inc
jge
jle
lret
clc
movsl
out
and
movsb
in
andb
and
or
repnz
xor
jmp
pop
jns
inc
mov
mov
jmp
shll
test
addb
loop
cwtl
imul
leave
or
call
push
push
clc
aaa
mov
mov
inc
jg
and
jmp
inc
and
xchg
mov
inc
and
das
hlt
ljmp
xchg
xchg
cmp
and
leave
xchg
adc
jbe
cld
fstp
push
cmp
mov
into
sbbb
mov
mov
cwtl
cmp
sub
dec
sbb
es
push
cmp
pop
int
push
daa
movsb
mov
fs
popf
push
pusha
icebp
popa
jecxz
push
test
sub
bound
sub
out
mov
insb
rcl
or
fdivrl
xchg
jle
inc
pop
and
push
inc
iret
icebp
addr16
inc
andl
add
test
add
or
add
dec
lahf
xor
mov
fsubrl
dec
cmp
mov
ds
add
daa
push
sub
mov
pop
sbb
es
lret
dec
add
fistpll
fadds
data16
xchg
pop
in
xchg
outsb
adc
and
mov
cmp
adc
jno
mov
ljmp
pop
mov
mov
clc
cmpsb
jo
decb
push
add
or
pop
xlat
mov
dec
cld
es
xor
inc
jo
xor
inc
imul
cmpsl
inc
cmpb
inc
or
test
jl
orb
les
enter
call
rcrb
or
int3
sbb
or
aam
xchg
ret
cltd
popa
in
in
jne
aad
pop
lea
aas
dec
shl
add
pop
and
inc
rclb
or
or
cmp
jne
movups
inc
sbb
dec
inc
loope
push
sub
push
testl
subl
adc
loopne
mov
jns
push
lods
roll
into
or
test
aad
cwtl
dec
jo
scas
inc
xlat
or
pop
ds
sbb
add
pop
or
xor
arpl
inc
and
scas
jb
xor
insb
xchg
les
adc
dec
and
lods
xchg
sbb
jmp
clc
mov
cmc
jecxz
cmpl
pop
rcll
or
jp
jmp
mov
sub
mov
hlt
xor
cmp
ja
jns
jbe
push
dec
jge
push
mov
push
jg
jne
fidivl
addr16
adc
mov
mov
add
jns
jne
adc
mov
pop
call
cmc
push
aad
mov
cmp
dec
add
jbe
sbb
stos
das
adc
xchg
into
fstl
mov
andb
add
jmp
rorl
ret
pop
adc
pop
sbb
neg
xor
jnp
stos
leave
xor
xchg
mov
popf
sbb
mov
mulb
imul
and
add
js
roll
cmp
inc
test
jmp
mov
push
loop
adc
test
sbb
dec
loopne
loope
popa
mov
loopne
sub
ret
jg
mov
cmovl
rorb
dec
push
testb
jne
test
je
xor
ret
loope
je
adc
mov
jae
dec
or
subb
mov
add
xchg
or
push
bound
test
sub
sar
shlb
and
test
cmpsb
sbb
test
mov
jns
imul
add
sub
adc
sub
or
rorl
cmp
fisubs
clc
sbb
add
mov
aam
iret
dec
inc
ret
or
dec
or
sub
inc
pop
and
insl
mov
dec
orb
jbe
lret
jmp
mov
inc
enter
adc
push
or
and
or
sahf
leave
add
and
scas
mov
push
xor
push
mov
lea
cmp
jne
inc
orl
add
rcrb
add
enter
outsl
enter
loopne
stos
add
push
add
add
adc
and
cs
mov
rolb
call
cmp
cmp
rorl
mov
mov
xor
or
add
adc
mov
lret
std
je
shl
jne
push
and
stc
dec
push
xchg
push
inc
adc
mov
sti
ljmp
rorb
xchg
jmp
xchg
test
inc
sub
or
adc
rcrl
jl
addr16
jmp
sub
jmp
mov
in
inc
inc
or
test
xchg
rorb
mov
xchg
xor
dec
jno
lret
sub
jne
cs
fadds
xchg
push
inc
adc
pop
adc
and
or
jns
loopne
call
pop
shlb
inc
xor
std
aad
pop
adc
mov
call
repnz
inc
xchg
and
cld
sub
shr
push
mov
dec
sub
xchg
xorb
push
pop
mov
sbb
adc
xor
std
inc
test
inc
add
repz
push
movsl
hlt
push
sbb
hlt
xchg
rcl
mov
test
jmp
movsb
fmull
cmp
xor
jl
pop
jge
xor
cmp
aam
mov
xchg
push
and
testl
pop
cmp
push
inc
adc
fs
jo
data16
mov
into
pop
adc
pop
mov
adc
sbb
adc
dec
jb
ret
pop
jne
repz
jno
cs
aaa
mov
in
add
mov
adc
scas
adc
sbb
inc
test
negl
push
mov
inc
jne
or
sbb
inc
jnp
mov
adc
mov
and
and
jmp
cmpsb
jmp
cmp
jne
mov
stos
xchg
push
imul
xchg
rcrl
sub
or
orb
cmp
add
movsl
mov
pop
or
mov
dec
pop
lea
and
jge
push
push
rorl
lahf
dec
mov
push
lahf
mov
or
or
cmp
arpl
mov
insb
lods
sub
bsr
in
and
es
es
add
adc
sahf
andb
sub
add
push
stos
popf
cli
jg
std
add
sbb
cltd
inc
sahf
adc
mov
pop
sbb
leave
icebp
pop
adc
ret
hlt
pop
mov
pop
sbb
fs
and
stc
cltd
fwait
dec
mov
xor
mov
push
subl
push
pop
fmulp
adc
push
outsl
hlt
repz
test
mov
ret
push
es
add
into
mov
push
and
add
jno
sbb
sub
dec
into
mov
or
pop
mov
fs
dec
dec
sarl
cs
in
sahf
push
add
dec
and
out
dec
dec
mov
inc
and
fsubr
aaa
sbbl
mov
jo
ljmp
mov
adc
xchg
mov
xchg
icebp
loopne
pushf
adc
arpl
or
mov
ret
lea
aas
or
sub
jo
push
jmp
inc
cmp
ljmp
js
mov
outsl
mov
mov
in
mov
add
cld
and
xor
mov
push
cltd
or
daa
jp
pop
push
add
xchg
fisubrl
push
icebp
pop
dec
pop
out
daa
mov
pop
sahf
daa
fsubrs
mov
lahf
cmp
and
cmp
out
or
cmp
inc
sub
and
jecxz
mov
imul
ja
mov
dec
push
push
pop
sbb
lods
cmpsb
push
pop
push
and
nop
pusha
push
mov
add
sbb
push
fnstenv
movsl
clc
pop
cs
sub
shlb
mov
sub
sbb
push
fsubl
addr16
sarl
movsl
ficomps
sub
ret
ds
lods
pop
je
mov
push
in
pop
dec
mov
popf
and
mov
mov
mov
dec
add
and
sbb
mov
xor
push
and
xor
inc
daa
xchg
jmp
or
xor
xor
mov
repz
mov
pop
test
lret
push
inc
imul
xchg
rep
mov
das
mov
push
mov
repz
sub
inc
in
inc
jg
adc
mov
int3
js
sub
or
lret
mov
scas
ret
mov
lea
dec
setns
and
sbb
add
jne
pop
add
adc
pushl
call
or
or
aas
lahf
loopne
jns
push
dec
ljmp
pop
mov
sbb
and
xchg
adc
push
es
dec
and
shlb
adc
mov
dec
pop
add
mov
and
cmpb
test
xor
push
shlb
icebp
xchg
xchg
jmp
dec
jb
inc
or
dec
imul
sbb
out
test
mov
mov
cmp
and
push
sub
pushf
pop
ret
mov
xlat
mov
mov
xchg
or
adc
pusha
out
push
cltd
rcrl
mov
das
les
and
stos
mov
xlat
adc
and
dec
dec
sbb
dec
cld
hlt
js
lahf
fnstcw
clc
adc
mov
push
adc
sub
xchg
mov
xchg
in
rol
and
sbb
or
mov
shll
push
ja
daa
lods
push
lret
ret
push
sbb
xchg
cwtl
cld
test
daa
lea
dec
lods
sbb
or
cmc
xchg
js
lcall
loop
repnz
stos
out
sbb
pop
cmp
sub
hlt
mov
ja
mov
hlt
loop
mov
insb
push
imul
dec
dec
ja
cmp
repz
xor
jae
enter
js
jne
test
shll
lea
mov
jns
imul
clc
push
aam
sub
dec
or
xchg
push
dec
push
or
inc
xor
push
mov
xor
xor
mov
xor
jne
fisttps
call
add
cmp
xor
call
cmpsb
dec
sub
inc
xchg
sub
xchg
and
adc
push
iret
dec
mov
inc
and
cs
mov
rcrl
dec
mov
out
lret
test
mov
mov
mov
loop
xor
outsl
icebp
mov
inc
mov
xchg
xchg
cmp
push
mov
jmp
les
and
jmp
add
xchg
mov
xchg
stos
in
push
push
daa
je
into
jbe
adc
or
jmp
inc
loopne
nop
fmul
push
dec
gs
hlt
jmp
fcompl
insb
insl
fdivrs
outsb
lahf
jmp
test
and
das
xor
mov
xchg
cmp
jbe
mov
or
mov
in
sbb
nop
mov
das
mov
jmp
push
push
orl
dec
mov
and
jp
inc
daa
std
add
cmp
and
dec
enter
and
and
sbb
adc
mov
pop
xlat
in
test
pop
lods
testl
movb
dec
ja
xlat
call
fcmovbe
das
cld
ja
mov
jb
rolb
jl
lret
push
iret
fstpl
movsb
jp
and
lods
lea
aas
cld
mov
ret
jl
jmp
notl
xor
or
cmp
dec
jmp
sbb
sarb
aas
add
ret
sar
jno
mov
jns
cmp
jl
test
jne
subb
or
sub
fmull
xchg
xor
je
mov
xor
test
jle
mov
cmp
sbbl
jl
inc
fldl
cmpsl
test
loopne
sub
pop
shrb
pop
cld
lock
jmp
mov
cmpsl
sub
jne
pand
inc
jbe
xlat
fcoml
inc
adc
mov
push
in
std
mov
adc
adc
sub
jmp
mov
mov
pop
xchg
mov
adc
fwait
push
pushf
aam
or
mov
stos
test
bound
sub
and
aaa
adc
je
dec
push
sar
xchg
xor
inc
push
cwtl
popf
push
call
dec
inc
or
jb
push
inc
addr16
mov
mov
dec
sub
insb
lret
jg
cmpsl
aaa
push
stc
nop
inc
adc
and
shlb
ljmp
popf
aam
xchg
lret
aas
cmpsl
ret
aas
lods
sbb
mov
lcall
subl
and
and
imul
inc
dec
cs
cmp
cld
stc
ret
add
xor
adc
fisubl
jne,pn
pop
push
sub
adc
lret
and
ret
push
push
push
movl
aas
movsb
es
les
ret
jle
add
push
add
stos
push
scas
mov
mov
adc
test
inc
jmp
add
jb
scas
or
fwait
shrl
dec
rcll
cmp
mov
in
jne
jmp
inc
jmp
fwait
call
jnp
add
lea
movl
rcl
xchg
jne
loop,pn
adc
js
sbb
and
popa
xor
pop
lods
jl
lods
fs
test
push
sub
jnp
push
pushf
das
adc
jmp
adc
adc
adc
lds
push
ja
int
push
ljmp
scas
mov
test
mov
not
sahf
inc
addr16
sub
scas
dec
subb
inc
lods
dec
cmpsb
lods
das
call
lcall
les
lods
push
jecxz
cmp
fidivl
mov
in
addb
jne
push
sub
js
mov
or
xchg
jl
out
sbb
mov
pop
fst
push
aas
add
fcom
scas
imul
dec
inc
and
push
mov
sub
mov
insb
jbe
inc
inc
test
jae
xchg
mov
sahf
rcr
out
test
aam
test
fidivl
pop
or
xchg
sbb
xchg
fs
cmp
and
adc
sub
xor
shr
mov
loope
scas
or
test
and
punpckhwd
data16
mov
dec
insb
and
sub
scas
shll
and
xchg
fs
jl
cmp
adc
adc
jle
scas
sub
mov
ret
cld
fldl
lods
sbb
or
shrl
stos
jge
xchg
insb
inc
or
cmp
cmpsl
cmpb
out
and
pop
lods
cld
popf
icebp
dec
jle
mov
syscall
fcoml
insb
adc
xchg
lds
cmp
lock
push
hlt
adc
out
nop
clc
mov
sub
sub
rcl
mov
leave
cmp
adc
scas
dec
prefetch
std
jae
cmpl
je
stos
jl
xor
cmp
add
pop
inc
add
sbb
mov
inc
or
out
loope
add
shr
pandn
shrl
push
push
inc
inc
shrb
push
sub
and
xchg
fidivl
push
imul
xchg
dec
xchg
push
jne
xchg
and
push
jp
sub
jbe
inc
sbb
cld
lods
js
lods
xchg
std
mov
call
mov
andb
jns
cli
cmp
xchg
push
lods
es
nop
je
shrl
xchg
add
subl
pop
add
les
push
je
pop
call
sub
dec
hlt
outsl
in
xchg
and
inc
and
das
push
or
ds
lea
add
test
jbe
test
inc
push
or
mov
test
adc
mov
push
insb
add
mov
cmp
dec
or
clc
cli
jecxz
fs
stos
mov
dec
mov
stos
dec
cmc
push
or
jne
add
outsb
shrb
call
jmp
xchg
xor
sub
sub
push
movsl
pop
xchg
mov
ja
cmp
loope
pop
mov
lock
leave
in
pop
bound
and
inc
mov
inc
dec
movl
mov
xchg
inc
sbb
jle
call
mov
cmp
add
into
push
xor
ss
fsubrl
shll
sub
lahf
mov
mov
adc
sbb
pop
cmp
fwait
lds
mov
xchg
fwait
or
mov
cmp
cmp
and
aas
repnz
dec
lcall
into
dec
inc
dec
adc
out
jmp
jbe
xchg
decb
mov
sbb
daa
outsb
push
jp
xlat
sub
imul
aam
xor
loope
enter
jle
lea
or
mov
and
push
enter
mov
daa
mov
pop
pop
inc
lea
jno
std
push
push
pop
mov
push
iret
shl
popa
jae
stos
aad
mov
nop
or
mov
rep
cwtl
mov
insb
fmuls
pop
push
popf
enter
jo
sbb
test
rorl
dec
xor
pushf
dec
xchg
pop
je
pop
xorl
adc
imul
or
mov
leave
sub
fnsave
mov
inc
lock
pop
test
jg
nop
jno
rcrb
inc
std
jle
insb
pop
jl
mov
js
push
cmp
pop
ret
add
or
pop
jmp
shlb
adc
call
data16
ret
adc
add
stos
test
dec
sub
test
mov
add
insb
push
sbb
sub
lods
inc
mov
lret
movl
inc
movsl
mov
xchg
divl
push
outsl
cld
jnp
and
or
mov
out
pop
sbb
jno
dec
and
clc
aas
inc
add
rol
pop
push
loop
xchg
pop
push
leave
sbb
clc
lcall
cmc
gs
dec
nop
push
mov
dec
or
mov
adc
push
adc
pop
xchg
stos
ss
xor
mov
cmp
ja
cld
push
sub
sub
std
adc
icebp
out
stos
pop
mov
pop
cmp
sbb
inc
xchg
jle
movsb
and
add
daa
sbb
cmc
mov
popa
cli
jle
insb
cld
insb
loopne
sub
ret
xor
xchg
lock
inc
call
mov
xchg
ljmp
sbbl
sbb
pop
xor
pop
dec
lcall
push
mov
push
push
mov
lods
add
test
mov
fsubs
sub
fstp
lds
pop
sbb
ja
dec
sbb
dec
fcomps
lds
push
repnz
sbb
adc
dec
sbb
push
cld
outsl
mov
shll
jmp
pop
shll
lods
xchg
push
xor
mov
jle
xchg
jl
pop
push
std
adc
sbb
pop
adcl
inc
orb
icebp
sub
out
rcrb
test
not
sti
sar
out
push
mov
mov
adc
mov
push
mov
stos
or
call
and
sbb
js
mov
mov
aad
adc
pusha
and
sub
call
out
call
sub
push
leave
push
leave
mov
sub
je
xorl
aam
sub
es
push
adc
mov
das
scas
dec
inc
mov
xor
sub
xchg
dec
adc
aam
sbb
pop
jno
les
repnz
sbb
roll
aam
pop
push
push
jo
mov
mov
ss
push
pop
xchg
in
cmp
jg
subb
xor
cwtl
xlat
adc
mov
push
adc
push
lret
insb
adc
loope
cmp
mulb
dec
sub
ret
push
lea
mov
test
cmp
or
jl
test
shrb
scas
jl
fchs
dec
icebp
dec
pop
jae
inc
and
dec
push
movsb
sub
mov
shlb
insb
and
test
sbb
pop
push
sub
fxch
push
andb
shlb
cmp
mov
jbe
fs
lret
dec
mov
test
add
stc
inc
bound
test
cmpsb
sub
test
pop
xor
dec
add
in
aaa
sub
sbb
pop
arpl
orb
idiv
sarb
in
mov
mov
xchg
pop
mov
inc
popa
dec
sahf
iret
dec
mov
or
adc
ret
push
dec
int3
and
sbb
and
sbb
scas
push
mov
mov
push
fcoms
clc
adc
jge
rcrb
call
adc
inc
push
mov
pop
in
jmp
jnp
iret
and
call
hlt
test
mov
mov
mov
and
sub
inc
jne
xchg
dec
jl
jae
popa
fstpl
fs
icebp
add
sti
cmp
sub
fsubs
ljmp
fldcw
add
pusha
add
dec
in
xchg
mov
mov
adc
xor
aam
fildl
cmp
push
mov
insl
bound
mov
out
jp
mov
cld
test
cmp
add
mov
push
jne
xchg
scas
sbb
fmuls
pop
sahf
sti
adc
enter
jb
adc
sbb
test
and
inc
cld
jb
adc
mov
and
repnz
adc
es
jae
sub
and
ja
stc
cmpsl
dec
sarl
addb
notl
sbb
dec
out
es
or
in
mov
mov
or
mov
add
out
pop
addb
or
lcall
sub
ret
nop
ficompl
test
mov
out
or
loop
or
xor
or
and
sub
pushf
xchg
inc
loopne
mov
stos
cmp
gs
cmp
cmpsb
fisubrs
or
call
orl
mov
in
imul
bnd
test
test
in
aam
pop
into
inc
adc
xor
mov
mov
inc
and
decb
mov
cmp
add
xchg
and
or
les
jle
pop
dec
or
int3
je
push
push
mov
adc
and
cs
out
mov
add
cmpsb
sub
or
in
or
pop
xchg
sub
test
fmuls
cmp
stos
je
inc
lods
es
ret
inc
xchg
mov
pop
inc
fwait
sub
or
mov
rcll
ds
rorl
int
xlat
dec
xchg
int3
xor
sbb
ficompl
and
jle
or
icebp
cmp
mov
jl
inc
in
xor
aam
pushl
mov
push
dec
add
wbinvd
jne
push
dec
js
sti
xchg
inc
sbb
lea
fistpl
pop
leave
std
cltd
das
icebp
outsb
nop
shlb
xor
cs
push
test
jne
rcrb
aaa
sbb
mov
aam
mov
imul
cwtl
movsl
icebp
fwait
leave
rorl
dec
xchg
adc
lret
nop
popf
or
pushf
hlt
and
jl
xchg
add
sub
or
test
add
xchg
adc
ljmp
inc
mov
popf
out
jl
xor
and
orl
xchg
mov
out
cmp
or
and
sub
mull
inc
xchg
std
mov
add
dec
dec
inc
inc
push
push
xor
xor
inc
jge
lods
add
or
push
adc
ljmp
stos
ret
xchg
or
push
les
inc
lds
mov
cltd
mov
or
add
and
pop
nop
lret
and
mov
inc
int3
mov
mov
and
into
add
dec
pop
jns
aam
loopne
inc
dec
dec
push
cmp
cs
xchg
or
jnp
lds
nop
dec
mov
push
and
aad
xlat
pop
and
push
adc
adc
jmp
das
push
outsb
cmpsl
adc
jne
out
or
dec
and
and
scas
sub
sbb
mov
insb
push
orl
push
cmpsb
or
stos
mov
add
mov
mov
jge
adcb
and
and
sub
sub
xor
xor
cmp
cmp
sub
arpl
push
insb
insl
outsb
outsl
jo
dec
jb
add
ja
jns
pop
add
pusha
push
add
jge
jg
pop
add
ret
xchg
xlat
jg
xchg
or
pop
and
out
pop
or
cwtl
into
shr
movsl
and
mov
adc
scas
xchg
pop
cs
lds
idivb
xor
ret
sbb
sti
negl
push
pop
pop
xchg
add
mov
sbb
push
loop
add
mov
mov
inc
or
xor
loop
addl
adc
shll
fmuls
mov
adcl
adc
or
push
je
jbe
pop
dec
icebp
lea
mov
xor
pop
xor
or
ljmp
pusha
pop
pop
or
jge
mov
mov
loope
ret
es
addb
push
jg
adc
push
add
pop
xor
and
mov
adc
xor
popa
inc
ds
dec
jmp
inc
cmp
push
es
sbb
inc
sub
or
jns
dec
push
adc
xor
cmpsl
jle
or
and
or
cmp
push
gs
dec
or
xchg
xor
cs
or
ficoms
test
and
bound
or
testl
push
outsl
ja
dec
xlat
or
test
gs
aaa
insb
mov
inc
jno
nop
iret
hlt
or
xor
xor
push
fldt
xor
push
iret
mov
xchg
adc
xor
cli
mov
or
push
jo
arpl
push
mov
xor
dec
push
cmc
shll
push
loopne
gs
fisubl
cmpsl
adc
enter
arpl
cmp
pop
aas
je
lcall
jne
adc
jae
dec
mov
inc
inc
fiaddl
cld
dec
pop
imul
sub
cmp
dec
cmovl
addl
loop
xchg
sbb
xor
push
xor
and
test
cwtl
sub
repnz
sbb
and
push
pop
xor
push
jae
xchg
push
add
push
je
adc
mulps
dec
movsb
and
into
inc
lret
xchg
jae
push
fs
outsb
sub
adc
orl
adc
xor
lahf
cmpsb
jae
push
jb
imul
lods
sahf
and
int3
push
dec
test
inc
fcoms
arpl
je
pop
orb
bound
dec
mov
cmp
push
incl
arpl
push
xlat
flds
lret
mov
dec
ret
add
inc
xchg
or
and
add
aad
or
int3
sbb
daa
inc
ljmp
cmp
cmovge
push
push
neg
push
xchg
aam
icebp
pop
cmp
shrb
adc
inc
arpl
or
inc
push
mov
add
mov
or
xchg
and
xor
inc
mov
cltd
or
xor
jecxz
in
and
dec
push
adc
mov
mov
mov
inc
and
pop
jne
inc
or
sbb
or
lods
push
mov
mov
dec
push
mov
cltd
jbe
cltd
adc
dec
inc
push
push
add
dec
adc
pop
add
push
data16
push
inc
inc
jmp
addb
or
or
es
inc
mov
adc
or
fstps
cli
push
mov
sbb
mov
cli
push
cmp
lods
cmp
or
push
or
sbb
adc
mov
mov
or
les
or
loope
and
push
cltd
sbb
andl
inc
insb
adc
sbb
and
mov
enter
sbb
or
aas
dec
xor
arpl
and
cltd
sbb
orb
jge
aam
adc
sub
movsb
xor
add
sub
xor
lea
and
outsl
xor
jne
adc
dec
mov
sbb
ret
shlb
xor
pop
inc
inc
jp
call
xchg
sub
adc
pop
and
jns
mov
and
jb
inc
shlb
cli
jecxz
pop
push
js
mov
pop
inc
and
jmp
aam
lock
ja
mov
pop
loopne
and
inc
stc
dec
je
jno
leave
stos
lock
pusha
push
dec
repnz
js
loop
js
test
test
push
xchg
inc
addr16
xchg
mov
jno
das
pop
add
push
inc
sar
and
dec
and
call
shrb
nop
adc
pusha
add
loopne
pop
cli
add
cld
add
sbb
xor
or
push
jo
imul
adc
pop
aas
pushf
int3
jo
mov
les
sahf
and
cltd
pushw
iret
adc
pusha
rcll
inc
inc
mov
sahf
push
out
scas
sahf
sbb
push
outsl
test
rcll
sbb
xchg
cmc
xchg
inc
dec
stos
sub
or
cmp
shrb
mov
dec
repnz
cmp
jo
mov
fucomp
add
test
stos
pusha
push
push
push
xor
in
xor
push
inc
or
shlb
in
push
inc
sub
and
jb
jno
jno
add
sub
add
cmp
adc
rclb
inc
inc
sub
and
xchg
nop
lods
and
add
and
adc
enter
nop
cli
testb
mov
notb
scas
xchg
xchg
std
xchg
stc
mov
sahf
sub
cwtl
orb
pop
jle
jae
cli
mov
push
jo
cwtl
push
lods
push
add
push
dec
stc
xchg
push
gs
pop
xchg
adc
pop
jle
lret
push
and
fsubs
inc
imul
imul
mov
movsl
dec
inc
mov
jae
and
and
sub
or
out
add
push
adc
sbb
push
adc
inc
or
add
repnz
dec
test
adc
scas
fwait
mov
or
adc
mov
sub
and
lods
mov
jo
imul
inc
test
push
pusha
mov
mov
cmp
in
subb
sbb
mov
pop
adc
lock
dec
pop
xor
sub
fcoms
cmp
and
xchg
cmp
clc
dec
cmp
sbb
mov
inc
sbb
cmp
rol
xor
cwtl
dec
mov
enter
and
push
inc
fs
pop
sub
cmp
adc
dec
call
sbb
or
push
push
sarb
push
jle
sbb
and
or
jl
or
sbb
out
and
fnsave
add
mov
xor
into
or
and
mov
inc
nop
jp
adc
sbb
adc
jg
dec
xchg
sbb
and
test
in
jle
ja
xor
mov
dec
add
mov
test
test
or
mov
mov
repnz
jecxz
and
mov
enter
xchg
dec
or
pop
sub
aaa
adc
xor
and
inc
xor
or
xchg
pop
scas
inc
and
push
popa
enter
lds
xchg
inc
lods
jg
dec
adc
std
adc
add
mov
sub
mov
cmpsb
pusha
stc
lods
and
insl
hlt
or
cli
add
adc
or
xchg
mov
adc
cltd
jnp
push
outsb
sbb
add
das
xchg
push
dec
add
aad
push
or
mov
movsl
adc
mov
cld
cli
add
cmp
pop
mov
test
inc
loope
js
or
add
dec
xor
fimuls
inc
aas
ds
adc
or
les
jl
add
adc
sub
adc
inc
dec
rolb
or
mov
xchg
or
xor
cld
scas
and
mov
and
sub
arpl
clc
into
push
or
xchg
or
out
dec
and
mov
push
xor
inc
mov
clc
xchg
popa
rcrl
enter
xor
testl
adc
das
adc
or
sbb
sub
or
xor
adc
pop
loopne
enter
cmp
sbb
mov
and
pop
xchg
enter
es
add
pop
adc
js
inc
or
push
push
pusha
and
test
addr16
lds
mov
dec
test
test
push
gs
sub
and
xlat
cld
mov
lret
mov
or
jecxz
xor
add
xor
push
and
pop
shrl
pusha
sbb
xor
or
sub
xor
and
ret
and
mov
sar
or
dec
dec
fiaddl
cmp
adc
push
dec
dec
and
or
emms
popa
jb
jecxz
xchg
repz
mov
sbb
loopne
dec
repz
mov
push
int
shrb
loopne
shr
jmp
inc
inc
rcll
mov
cwtl
loopne
push
ret
ret
stc
les
and
jmp
iret
imul
dec
test
aam
mov
clc
in
mov
xchg
jnp
test
mov
pop
lds
ljmp
push
dec
test
xchg
push
add
jle
sub
ja
das
or
cmpl
pop
mov
notl
sbb
sbb
xorb
testb
xchg
mov
pop
xchg
imul
dec
adc
or
sbb
cmp
insb
adc
stos
call
sbb
inc
das
in
das
cmpsl
push
or
movsl
jae
push
popf
push
ja
xchg
das
pop
iret
pop
push
cld
sbb
cmp
mov
icebp
popl
dec
fdiv
std
xchg
add
jge
sub
mov
aas
cmp
push
mov
add
out
xchg
jl
inc
leave
push
xchg
sbb
xor
pop
imul
push
mov
inc
inc
adc
mov
jmp
ret
daa
ja
repnz
mov
jecxz
jne
fistps
lahf
jmp
sbb
and
nop
or
xchg
push
cmp
push
inc
subl
jle
xchg
or
jne
jmp
cmpsb
hlt
add
xchg
cmp
jle
push
jp
je
xor
mov
adc
xchg
arpl
jnp
sahf
cld
test
add
jg
call
loope
mov
movsl
mov
ljmp
jb
mov
adc
je
or
ja
ret
mov
xchg
and
call
jl
andb
movb
pop
sbb
xchg
xchg
jns
xchg
jp
mov
aas
lods
dec
ficoms
stc
stos
xadd
fdivs
inc
ljmp
or
push
jbe
lock
lods
xor
push
add
xor
or
pop
inc
movsl
mov
lret
into
pop
cli
sub
fsubl
jp
aas
mov
ret
jle
add
les
add
xchg
or
fidivl
push
loope
outsl
call
dec
xchg
adc
jne
push
inc
in
xchg
sbb
orl
pop
mov
aad
adc
xor
dec
xor
ret
jle
mov
js
push
inc
jmp
or
imul
add
add
leave
push
pop
sbb
cs
dec
repz
bound
nop
addb
out
mov
ja
cli
add
shrb
mov
pop
adc
add
sub
je
sti
subl
push
or
cmp
xchg
mov
bound
push
and
adc
bound
push
and
jmp
inc
xchg
sub
sub
push
mov
jge
test
sbb
push
xchg
mov
je
jns
sub
in
pop
push
mov
jmp
add
je
cmpsl
inc
test
aad
fdivp
into
jns
mov
sub
fcoms
sahf
dec
mov
add
pop
or
aam
cmp
and
ret
repnz
pop
icebp
out
lahf
push
xor
ja
scas
repnz
sbb
and
test
pop
dec
mov
test
push
scas
js
loop
sahf
xor
add
leave
popa
xor
out
mov
cmp
lods
dec
aam
out
ja
out
adc
or
iret
fnstcw
call
out
popa
mov
nop
push
aam
fdivrs
mov
cmp
jp
push
call
mov
scas
lea
push
sub
push
inc
or
movsl
xor
push
jo
loopne
pushf
es
in
mov
out
ret
mov
inc
cmp
add
cwtl
pop
and
add
jb
adc
push
ds
rclb
mov
sbb
jnp
inc
adc
dec
inc
mov
imul
gs
pop
dec
adc
and
ja
data16
push
sbb
sbb
stos
rolb
mov
mov
push
mov
and
sub
mov
sub
mov
inc
adc
ret
and
inc
pop
test
sub
and
sbb
scas
sbb
inc
lcall
dec
xchg
xor
adc
adc
adc
test
rcll
push
sbb
adc
in
add
mov
movsb
daa
dec
je
xor
sub
inc
add
sbb
in
or
and
sub
and
aad
xchg
lock
out
push
sub
xor
daa
in
mov
in
push
int3
xor
test
negl
sub
nop
scas
sbb
adc
test
mov
jg
outsl
ret
pop
inc
jle
incl
mov
and
or
jbe
xchg
loopne
mov
push
or
sub
lea
dec
push
mov
xor
es
sbb
out
or
sbb
adc
adc
pop
pop
and
pop
push
mov
xor
sbb
inc
int3
xchg
or
mov
or
inc
pusha
in
mov
or
sub
adc
call
test
je
enter
mov
cmp
shlb
shr
jae
psubsw
xor
mov
jbe
mov
cmp
mov
lods
sbb
es
and
sub
jg
xor
push
push
mov
and
cmp
jno
xchg
rorb
outsb
and
or
lret
aaa
dec
sub
xchg
pusha
jae
mov
xor
sub
xchg
sub
cld
add
jmp
cmp
notb
dec
mov
mov
cmpsl
push
pop
mov
mov
sbb
push
sub
or
dec
push
jne
mov
fisttps
pop
push
cli
pop
mov
and
push
cmpsl
pushf
pop
push
push
lea
mov
or
adc
ds
add
pop
fldcw
mov
jns
mov
dec
dec
sbb
mov
jbe
shll
imull
sbb
pop
jmp
aaa
mov
and
pop
push
push
cmpsl
jno
je
bound
sub
lahf
push
cmc
lds
aaa
in
push
push
dec
push
xorl
bound
inc
scas
bound
jmp
aad
xchg
push
push
dec
xorl
or
nop
adc
and
dec
sub
inc
inc
mov
fiaddl
jae
mov
mov
popa
arpl
push
sub
insb
pop
sbb
movsl
adc
jo
sub
and
pop
pop
lds
int3
pusha
or
dec
and
sub
pop
or
lds
add
notl
mov
or
test
lock
mov
mov
lcall
mov
mov
sbb
sub
mov
push
movsb
add
xchg
or
lcall
sbb
xor
fcompl
mov
int
inc
or
mov
lods
pop
ds
push
xor
in
fdiv
stos
cmp
push
mov
add
push
push
fwait
xor
ds
ret
cltd
sub
push
xor
cwtl
jae,pn
mov
sbb
movsb
jae
dec
rcrb
sbb
test
push
dec
or
adc
lods
arpl
sbb
add
je
leave
pop
jmp
pop
pop
dec
into
mov
js
adc
xchg
je
mov
push
xlat
cmp
mov
mov
test
dec
std
push
add
outsb
mov
das
mov
scas
cmp
mov
sub
sub
sub
jp
bound
or
xchg
data16
adc
jb
xor
push
jbe
dec
fwait
xor
xor
les
dec
dec
loop
test
movsb
int
je
push
pop
dec
fsts
pop
jecxz
fisttps
popa
test
cmp
mov
je
jecxz
sbb
push
into
nop
jno
inc
add
enter
call
ss
and
and
ja
sahf
cmc
dec
pop
jne
dec
inc
cmp
mov
int
popa
js
push
daa
enter
inc
sbb
mov
repnz
mov
adc
cli
xchg
data16
add
ds
adc
and
insb
and
adc
pop
jl
imul
daa
sub
imul
push
pop
dec
pop
add
sahf
inc
or
es
sub
pop
pusha
shl
icebp
or
or
mov
inc
pop
sbb
and
push
or
push
cwtl
ss
lret
or
mov
mov
push
and
popf
mov
cwtl
add
lret
or
aaa
movsb
ljmp
dec
or
sbb
lcall
adc
mov
cmp
lock
sub
jo
dec
js
or
test
addr16
stc
xchg
mov
ret
jne
jmp
and
xlat
xor
xchg
cmpsb
cwtl
repnz
pop
dec
int
dec
mov
ret
push
jbe
fs
out
outsb
mov
dec
add
and
push
pop
insl
jl
out
or
push
mov
jge
rep
ljmp
xor
in
pop
sub
scas
stos
pushf
inc
inc
xchg
push
cmp
mov
xchg
test
mov
sbbb
jmp
test
jbe
cmp
mov
movsb
iret
inc
xor
push
mov
add
and
add
fadd
mov
popa
notl
call
in
mov
and
or
sub
push
jns
push
add
mov
jmp
lea
aas
inc
mov
mov
jge
daa
repz
mov
idivl
cmp
cmpsb
sbb
push
inc
sbb
pop
in
cli
xor
mov
xor
inc
addb
add
shrl
jge
loop
jmp
or
rclb
mulb
jmp
xor
ret
xor
inc
xor
sbb
jbe
jnp
ja,pt
sbb
push
hlt
mov
bound
mov
cld
xchg
mov
ret
or
push
or
cld
xchg
sbb
shll
mov
out
ret
sub
dec
xor
cmpb
push
lds
dec
mov
je
enter
nop
int3
and
pop
fdivr
mov
push
jg
data16
cmp
jg
bound
dec
add
hlt
xchg
pop
dec
mov
in
push
xor
pop
mov
add
cmp
add
or
push
call
push
add
gs
stos
jecxz
cltd
test
repz
lods
mov
mov
int3
adc
adc
sbb
stos
add
dec
sarb
clc
cmp
jl
clc
stc
sub
cmp
mov
test
popf
mov
push
icebp
data16
add
cmp
dec
insl
pop
mov
in
test
nop
repnz
cs
xchg
ss
xorb
add
cmp
jne
pop
push
adc
xchg
inc
mov
das
pop
xchg
nop
dec
xchg
push
test
add
das
adc
dec
cmpb
push
or
xchg
negl
das
and
add
and
pop
mov
and
fcmovbe
pop
adc
pop
ret
out
add
inc
cmp
jbe
mov
ret
sub
nop
add
push
fdivr
sub
jne
call
mov
inc
pop
inc
ret
sub
add
dec
jno
jb
add
mov
xor
mov
ret
fneni(8087
jmp
and
fidivs
sbb
and
insb
mov
out
sbb
jecxz
sub
or
inc
adc
adc
adc
outsb
sbb
or
out
inc
test
mov
mov
mov
test
sbb
mov
jne
pop
cmpb
lea
jl
or
loope
jne
mov
mov
fisttpl
decb
sub
js
lea
dec
inc
adc
add
or
movsb
inc
push
cmp
sti
imul
jbe
aam
jmp
jae
jb
or
inc
adc
inc
push
inc
mov
icebp
xor
push
iret
insb
or
mov
test
and
lea
xor
fs
pusha
shrl
sarb
jl
stos
push
sub
and
push
jl
lret
cmp
jl
push
and
imul
negb
add
xchg
pop
push
inc
dec
sbb
push
inc
or
test
pop
clc
int3
adc
cs
or
push
adc
and
push
cmp
addr16
xchg
adcl
icebp
mov
inc
sub
add
arpl
dec
aaa
and
push
or
push
add
pop
xchg
or
or
pop
xchg
push
mov
xchg
jns
dec
dec
cli
ss
push
in
mov
push
or
and
das
jo
stos
xchg
pop
lret
jge
cmp
pop
or
dec
je
mov
fcmovnu
daa
aas
mov
hlt
adc
dec
jae
xor
cmp
inc
test
mov
cltd
daa
pusha
aaa
inc
and
subl
inc
or
pop
stos
insb
cmp
jbe
mov
push
xchg
ja
add
dec
sbb
out
shl
push
mov
push
test
jb
jae
and
and
sub
sub
repnz
xchg
adc
xor
adc
dec
mov
dec
or
pop
aaa
jmp
pop
dec
pop
dec
adc
add
orl
in
adc
ficompl
pusha
jbe
dec
sub
xor
mov
movsl
push
dec
dec
sub
test
jl
imul
push
orl
inc
dec
lock
es
dec
or
mov
xchg
orl
adc
jle
int3
ds
clc
sbb
xor
pop
lcall
fadds
fiadds
fs
push
sbb
das
mov
add
push
push
inc
dec
arpl
inc
mov
sub
xor
and
and
adc
mov
and
stc
push
mov
cmpl
in
jg
iret
lock
push
lret
or
mov
jo
cmp
and
dec
gs
sub
les
test
loope
fiadds
xor
xlat
sub
pop
mov
and
mov
mov
test
mov
xchg
adc
and
jbe
mov
hlt
idivl
cltd
mov
adc
test
jmp
aaa
xor
sbbl
inc
push
iret
and
adc
ficoms
sub
or
lcall
mov
andl
add
insb
cmp
xor
pop
sbb
je
inc
out
mov
mov
mov
fbld
pop
xor
sarl
test
and
rcl
jmp
cmpsl
add
or
stc
or
xor
xchg
xor
dec
dec
gs
add
jno
or
sub
ret
in
lcall
sbbl
or
orl
in
aaa
push
nop
mov
std
dec
inc
and
int3
pop
dec
or
sbb
dec
xchg
push
das
test
push
add
mov
mov
jae
sbb
adc
stos
enter
xor
xchg
jmp
mov
xor
inc
mov
cmp
test
daa
push
cmp
push
sahf
jnp
mov
or
push
sbb
or
cmp
cli
and
add
sub
hlt
push
push
and
test
test
sub
adc
lea
adcl
jmp
xchg
cmpb
sub
and
xor
fmuls
je
cmp
dec
cld
pushf
cmc
ljmp
pop
mov
outsl
mov
and
or
faddl
cmp
mov
insl
pushf
out
ret
xor
imul
ss
mov
jle
cld
or
xor
xchg
adc
sbb
sbb
xchg
imul
out
xor
pop
adc
jg
fimull
loope
mov
jp
mov
bound
adc
lods
inc
sbb
mov
popa
loopne
adcb
or
push
fcomps
nop
mull
push
or
pop
sbb
fsts
mov
pop
inc
leave
cmpsb
mov
pop
dec
call
or
outsl
and
push
inc
aaa
ds
dec
adc
fs
test
lea
pop
and
dec
je
jge
dec
mov
xchg
adc
enter
add
mov
push
fld
sub
push
fsubl
cli
xchg
adc
jo
mov
test
jbe
call
jne
in
ja
popa
cmpsl
test
sbb
mov
std
into
sbbl
imul
sbb
push
lahf
jno
sub
inc
or
mov
lcall
xchg
mov
mov
cmpsb
sahf
mov
mov
rcll
mov
dec
test
and
ficomps
mov
loope
call
jle
push
ret
xchg
push
cmpsb
push
inc
iret
xchg
jmp
stos
clc
mov
rcll
inc
cmp
test
popa
push
cmp
mov
je
or
or
movsb
lahf
cs
lock
inc
push
xchg
sub
pop
lds
call
push
sbb
pop
inc
mov
lahf
jb
add
shl
add
mov
adc
fldcw
dec
sti
mov
jge
jmp
bound
xor
add
pop
adc
leave
imul
adc
stos
daa
adcl
mov
push
xchg
push
adc
push
add
jmp
dec
push
nop
cmp
inc
orb
pop
push
dec
sub
jge
std
add
fistps
into
and
xor
clc
or
cmp
divb
add
rorb
push
es
adc
xchg
ja
movsl
pop
and
andl
leave
mov
ficompl
xor
std
cmpl
test
mov
es
pop
shlb
jl
inc
mov
shrb
roll
ficoml
push
fsts
nop
xlat
pusha
sahf
pop
add
pop
loop
sbb
sahf
adc
dec
push
jl
pop
sbbb
inc
addr16
pop
mov
push
adc
add
push
add
cltd
idiv
jmp
insb
push
xchg
cld
jb
inc
sbb
cmpsl
and
jno
testb
mov
imul
andl
or
scas
cmpl
mov
or
sub
xchg
xchg
inc
or
fistpll
test
clc
dec
lahf
fstps
lahf
mov
jnp
add
test
mov
aam
orb
arpl
sub
mov
sbb
ja
addb
lea
add
push
pop
jb
add
lret
in
dec
push
movsb
mov
add
or
mov
pop
movsb
es
adc
jecxz
and
ja
jmp
jp
test
pusha
mov
cmp
sar
shrb
lret
dec
xlat
adc
test
jnp
ss
dec
xlat
mov
or
mov
decl
push
ret
sub
mov
movsb
test
sub
sub
xchg
xor
mov
xor
adc
lock
das
in
jle
dec
dec
in
sahf
je
sarl
jge
and
adc
cld
push
sub
mov
push
jl
in
lea
add
jne
testb
stos
bound
mov
call
stos
lret
lret
and
xor
imul
or
mov
scas
ret
stos
rolb
jg
push
inc
cs
or
inc
sub
mov
scas
xchg
push
fsubrl
xchg
daa
mov
filds
jae
jmp
jmp
leave
mov
jbe
xchg
fsubr
xchg
pop
mov
adc
hlt
aas
sysret
mov
mov
ret
jmp
mov
js
xchg
inc
push
sub
xchg
scas
hlt
xchg
pop
cld
repnz
fldt
adc
mov
sbb
adc
inc
das
dec
or
and
pop
in
pop
in
cmp
add
adc
push
adc
test
test
call
loope
ljmp
push
and
adc
push
jbe
xchg
cmp
ficompl
inc
ss
and
rolb
cmp
jb
movsb
push
xor
popf
stc
std
sbb
dec
cmp
dec
pop
jbe
popa
shlb
or
hlt
add
cwtl
call
out
inc
test
push
push
fbstp
ja
scas
inc
nop
push
lock
mov
enter
cmc
or
out
mov
dec
jnp
shr
adc
sbb
popf
push
shrb
push
jmp
out
sbb
cld
loope
cld
or
push
fisttpl
mov
fwait
repnz
lods
shlb
ljmp
pop
mov
stos
out
ret
filds
push
es
movsb
mov
sub
outsb
stc
and
lahf
pushf
or
call
inc
push
js
add
cwtl
mov
cmc
test
stos
ret
xorl
xor
adc
jae
mov
insb
ret
call
mov
xchg
fwait
js
test
mov
inc
cmp
or
les
add
icebp
ljmp
xchg
and
movsb
xor
and
dec
cmp
loopne
push
pusha
hlt
nop
sub
shrl
jl
xchg
cmp
adc
lods
mov
in
adc
inc
cli
out
inc
xchg
jp
cmp
push
adc
test
test
sbb
or
sbb
mov
and
jne
lea
sbb
pop
jne
iret
lcall
mov
jecxz
arpl
push
pop
push
iret
and
mov
or
adc
jb
add
lret
test
je
xchg
xor
dec
stos
test
mov
and
push
dec
lds
lret
or
cmp
movsb
out
xchg
sarb
xor
repnz
in
jecxz
sbb
stos
mov
call
jbe
push
stos
and
cmpsl
mull
shll
push
inc
mov
dec
and
mov
pop
les
ds
cmp
ret
inc
arpl
or
mov
inc
les
add
shr
push
orl
add
out
aam
mov
rcr
in
fists
or
mov
inc
mov
adc
imul
out
stc
dec
sub
add
jmp
xchg
inc
mov
and
push
adc
push
jge
sbb
adc
orl
or
flds
movsl
add
mov
lock
rorb
pop
cli
and
dec
xor
mov
testb
aas
jb
inc
mov
sub
ja
clc
and
ret
frndint
xchg
inc
test
std
clc
cmp
adc
sub
lret
adc
or
sub
sub
nop
stc
mov
push
stos
int3
pop
inc
sahf
imul
out
out
mov
cwtl
movsb
xchg
or
cmpl
cmp
xor
inc
or
icebp
ret
insb
cmpsb
push
adc
or
es
xchg
adc
int3
call
imul
inc
add
push
sub
sub
shrl
add
hlt
mov
xchg
xor
andl
shlb
push
xchg
jne
dec
xor
jbe
bound
adc
cmp
jo
add
push
lea
movsl
sub
push
ds
out
add
aam
dec
mov
xchg
push
shrb
enter
xor
pushf
cltd
dec
cmc
pop
lds
test
xchg
push
hlt
test
xor
pop
lods
test
mov
cli
test
pop
lods
int
xchg
push
imull
xorl
or
setp
gs
stc
and
movsb
pop
inc
sub
cmp
ret
hlt
lods
lods
aad
jns
push
nop
roll
fnstcw
bound
jo
pop
jo
inc
mov
xor
and
repz
xchg
xor
inc
adc
enter
ljmp
or
sub
mov
push
or
xor
pop
cmp
aad
shlb
jmp
jne
icebp
mov
sahf
ja
sub
nop
push
dec
and
fs
ss
inc
mov
cmpsb
push
out
or
test
dec
repz
popf
stos
cmp
push
xlat
out
mov
mov
xchg
daa
add
pop
jmp
mov
fs
outsb
stos
xchg
cwtl
jg
push
clc
push
mov
shll
sbb
jo
mov
mov
movsl
pop
nop
xor
negb
enter
fsubrl
cltd
and
or
pop
dec
push
jmp
dec
adc
xchg
adc
push
neg
dec
sbb
push
lret
add
sub
sub
xchg
mov
imul
lret
incl
out
aam
mov
pop
stos
xchg
sub
cmc
in
cmc
mov
repz
dec
mov
call
clc
icebp
and
mov
je
adc
add
xchg
out
mov
jne
into
test
xchg
sub
les
and
in
push
and
cmpsl
adc
and
dec
sub
pop
repz
dec
movsl
lock
mov
xor
sbb
rolb
sub
ret
xchg
es
stos
sub
cld
sbb
dec
in
nop
enter
lds
add
inc
cmpsl
inc
cmp
push
inc
mov
sbb
push
in
push
pushf
push
mov
jno
das
inc
mov
dec
adc
adcb
or
and
push
mov
and
inc
mov
fdivrl
in
push
stos
inc
sub
je
jno
jmp
jg
push
xchg
sbb
xor
xchg
xchg
movsl
pop
imul
lret
movsl
ret
lea
imul
dec
sbb
xorb
push
pop
leave
xchg
jno
dec
call
pop
leave
dec
xchg
pop
push
bnd
mov
call
ret
or
in
push
adc
sbb
xchg
and
sahf
cmp
push
and
test
rcrb
push
jo
sub
test
stos
call
mov
mov
mov
dec
add
sbbb
or
sbb
lcall
call
fdivl
jo
add
pop
mov
xchg
fnsave
test
push
aaa
add
cwtl
nop
jmp
mov
or
inc
in
fbld
cs
mov
orl
mov
xchg
xchg
or
sbb
mov
and
and
jle
popa
lods
dec
loope
push
xchg
mov
push
xlat
adc
jge
mov
add
pop
stos
ret
sbb
repnz
shlb
subl
xor
in
dec
cli
push
ja
jbe
sarb
pop
rorl
ljmp
xor
gs
pop
dec
sbb
adc
sbb
push
inc
pop
mov
or
lock
mov
cmp
fsubs
mov
xor
xchg
cmp
mov
or
pop
push
inc
lret
mov
push
adc
and
cmpsb
and
je
and
and
int3
pop
lock
lcall
shl
aaa
imul
add
cmp
pop
cmp
inc
mov
into
xchg
or
jp
and
repnz
movsl
push
clc
stos
dec
sbb
data16
bound
test
leave
mov
movsl
jecxz
mov
add
cmp
cmp
dec
push
bound
outsb
and
fisubs
jl
inc
nop
test
mov
or
daa
fiaddl
sub
adc
sub
cmpl
jbe
xor
or
add
sbb
mov
fld
fcoms
xorl
dec
pop
push
xchg
std
and
cmp
inc
mov
add
adc
loop
cltd
mov
cltd
mov
test
inc
push
sub
das
jmp
fs
mov
mov
mov
into
push
and
into
pop
mov
sub
adc
cmpsl
inc
and
in
sub
rcll
and
daa
addl
roll
sub
mov
add
stos
push
adc
push
mov
sub
cmpsb
cmp
mov
pop
mov
xchg
pop
mov
dec
shr
in
inc
add
cwtl
enter
adc
xor
shr
xchg
sbb
mov
cld
mov
dec
ret
dec
lea
popf
add
hlt
inc
and
sbb
pusha
xchg
adc
mov
xor
and
mov
and
int
ds
sti
fxch
clc
into
push
xchg
int3
push
les
mov
test
sbb
inc
or
xchg
nop
cmc
pop
cmp
test
push
cmc
addr16
js
xor
inc
and
or
sbb
pop
test
mov
cmp
inc
addl
sub
xor
movsb
aam
inc
and
ljmp
sahf
mov
les
je
add
bound
arpl
andb
or
ret
jo,pt
divl
push
or
or
jnp
shld
mov
cmp
and
pop
jb
push
and
stos
lods
xor
sbb
jns
adc
stos
repnz
imul
sub
or
in
cmpsl
cmp
fsts
sub
pop
sub
push
testb
into
jnp
fbld
int3
int3
and
jl
stos
add
sbb
xor
test
pop
inc
xchg
adc
adc
mov
inc
nop
sub
icebp
inc
adc
sub
and
mov
mov
enter
sub
sbb
hlt
adc
pop
xor
loope
les
ret
addb
ds
and
mov
add
add
push
add
push
or
cld
outsl
jge
jnp
xor
and
sub
adc
xorl
mov
jge
ficomps
inc
iret
shrb
sub
mov
loope
add
push
or
or
adc
sbb
sbb
rcll
push
stos
fldz
mov
fcomps
fcoms
push
orb
inc
movsl
sbb
pop
sbb
decl
inc
inc
and
inc
add
jo
nop
push
cmp
cmp
dec
or
dec
adc
rcrl
popa
imull
lea
xchg
sub
xchg
and
cmpsl
mov
push
and
push
enter
pop
sub
xor
adc
dec
push
mov
test
movl
or
das
push
sahf
dec
out
adc
mov
dec
adc
mov
jno
pop
push
xor
xchg
ret
xchg
xor
packsswb
or
and
add
and
shl
or
add
mov
je
scas
rcll
adc
sub
add
jl
xor
inc
js
xchg
cmp
xor
sti
mov
ret
jmp
mov
stos
add
pushl
inc
inc
pop
and
repnz
and
hlt
aas
inc
inc
shlb
jns
cmpsl
enter
pop
dec
push
cmpsl
addr16
jmp
cmc
sbb
inc
cmp
es
movsl
aad
jo
xor
mov
dec
ret
dec
mov
or
sbbl
mov
in
lahf
xchg
roll
adc
sahf
pop
xchg
adc
mov
mov
mov
pop
mov
pop
sbb
lds
mov
inc
add
dec
push
push
pop
pushf
dec
and
lods
push
sub
call
mov
clc
lret
push
mov
pop
and
sbb
adc
sbb
and
in
mov
or
fnstcw
sub
ds
pusha
imul
leave
fcompl
add
sbb
jge
dec
fsubs
dec
cmp
filds
jae
roll
push
and
loop,pt
dec
in
xchg
dec
push
out
push
jmp
bound
imul
and
jne
outsl
pop
jecxz
es
inc
xchg
cli
in
jle
movsl
enter
add
fcoms
inc
loopne
push
dec
pop
in
stos
fdivrl
nop
mov
jl
rclb
and
test
add
inc
mov
mov
xchg
xor
pop
loopne
movsb
in
fs
rcrb
dec
mov
mov
dec
push
mov
pop
es
or
dec
call
aam
dec
jmp
mov
shr
sbb
data16
nop
dec
mov
mov
add
jg
sub
inc
mov
xor
adc
cmp
roll
das
jmp
lea
call
ret
movzwl
xor
mov
mov
dec
sbb
add
adc
pop
mov
popa
jmp
jae
push
daa
xor
push
jmp
lds
mov
jmp
cs
cld
xor
les
adc
loope
fwait
jmp
xchg
aam
sbb
test
mov
and
and
inc
mov
insb
test
mov
and
fimuls
mov
inc
xor
cmp
into
orl
data16
adc
push
scas
sbb
pop
inc
ss
push
pop
inc
cmc
add
push
adc
aas
or
jg
push
mov
jmp
jmp
adc
lret
clc
jo
push
xchg
adc
loope
mov
sarl
cli
outsl
xchg
aas
mov
jno
add
fstl
pop
inc
cmp
push
push
test
adc
push
sbb
scas
mov
js
mov
loopne
clc
or
xchg
mov
pop
dec
pop
ret
xchg
dec
pop
mov
je
sub
cli
mov
add
mov
rcr
aaa
inc
inc
push
pop
add
test
push
xor
test
xchg
jle
bound
lods
cmp
movsb
xorb
aas
repnz
lea
jne
cmpsb
flds
adc
push
into
and
sub
push
das
sub
outsl
repnz
xchg
in
inc
into
sub
jmp
jns
imul
mov
adc
add
jmp
inc
subl
add
adc
pop
mov
inc
push
je
adcb
in
sbb
push
dec
in
cwtl
out
shufps
add
push
fdivl
mov
flds
jne
mov
jb
stc
leave
mov
lods
std
sub
loopne
dec
out
icebp
es
pop
mov
shlb
add
cmpl
pop
subl
mov
add
stos
es
nop
aaa
and
add
jmp
pop
out
mov
mov
loopne
js
inc
pop
and
push
dec
fadds
jnp
xchg
pushl
add
sub
inc
push
cltd
cmp
inc
gs
test
sbb
mov
sub
rcr
push
add
mov
or
pop
mov
or
ds
push
push
dec
and
pop
or
pop
psubd
pusha
dec
incb
lret
fistpll
sub
js
push
iret
mov
imul
push
jnp
emms
mov
and
enter
adc
call
shr
scas
adc
mov
pusha
insl
lahf
pusha
and
movsl
das
lods
dec
dec
inc
adc
mov
add
and
and
xchg
ret
pop
ret
sub
mov
or
mov
out
inc
xor
sub
je
or
cmpsb
and
xchg
and
adc
xchg
pop
xchg
push
inc
imul
jmp
xchg
sbb
int
dec
bound
ret
push
mov
pop
lds
scas
in
test
pushf
leave
cmp
push
dec
nop
and
in
xchg
pusha
cmpw
rcll
inc
and
inc
pop
test
push
loop
dec
cmp
mov
lahf
lret
shr
add
mov
jl
adc
aam
adcb
push
sub
push
adc
push
push
movzwl
dec
pop
mov
fists
dec
sbb
or
mov
or
push
loopne
mov
add
lret
xchg
mov
ljmp
xchg
sub
dec
out
mov
ds
test
add
push
jle
xchg
mov
push
mov
dec
cld
frstor
pop
repnz
sub
push
call
out
je
fcoml
pushf
xchg
lahf
xchg
test
in
dec
dec
sub
addb
inc
jmp
sub
cld
jl
mov
push
xchg
scas
adc
out
leave
push
jo
sub
pushf
sub
ret
inc
xor
sbb
imul
pop
xchg
cltd
adc
adc
adc
testl
mov
and
adc
mov
push
loop
mov
pop
mov
stc
fcoms
loop
dec
aam
out
sub
mov
ret
ret
cmp
rclb
scas
movsl
incb
push
push
push
es
push
and
add
xchg
cmpb
cwtl
je
cmp
mov
xchg
outsb
jl
push
fs
and
add
jg
xchg
subb
nop
dec
ret
push
call
lock
inc
mov
test
lret
inc
or
inc
mov
inc
xor
lret
rol
cmp
lret
xchg
dec
or
or
popa
pop
mov
test
mov
adc
rcrb
push
push
stos
or
adc
jp
dec
dec
test
sub
shll
test
or
mov
mov
ljmp
movsb
into
and
cmp
cld
lods
push
xchg
sbb
ss
shlb
and
and
sbb
xchg
lods
in
cmp
xor
jbe
adc
jl
xor
cmpsl
gs
or
sub
rorl
mov
add
shr
imulb
mov
cmp
push
mov
pop
or
dec
adc
or
or
fsts
sub
mov
roll
push
scas
mov
mov
adc
sbb
adc
stc
xor
push
sbb
lea
stos
xchg
dec
lea
adc
pop
insl
lods
lea
jno
test
mov
mov
sti
mov
and
imul
loopne
jne
loop
push
and
notl
mov
jmp
movsb
std
imul
jge
jae
mov
sbb
js
push
push
push
clc
idivl
inc
push
inc
jmp
adc
or
pop
jbe
in
jle
aam
fists
pushl
jg
pop
test
push
jmp
int
das
sub
sbb
daa
jmp
rcll
or
sub
xor
dec
pop
lds
inc
jmp
stos
pop
mov
lods
push
std
or
sub
cltd
xor
and
mov
nop
mov
add
sub
sarl
sbb
popa
cmp
outsl
push
jl
pop
scas
xor
fld
dec
iret
imul
fstps
add
rcr
push
xchg
mov
xchg
push
sbb
popf
adc
lcall
outsb
and
shl
das
push
push
sbb
jnp
add
xor
out
cmp
clc
sub
sarb
insb
push
dec
icebp
and
jno
xchg
adc
xor
mov
pop
aad
stos
jp
adc
mov
pop
icebp
or
adc
out
pop
pop
push
cmp
mov
je
leave
mov
adc
or
sub
sbb
mov
push
jae
sbb
jmp
xchg
mov
xchg
xchg
pop
outsb
dec
pop
shrb
jle
push
adc
mov
push
push
adc
test
jmp
adc
jl
lods
lods
stos
or
inc
dec
in
iret
mov
push
xchg
inc
sub
sub
fmuls
push
jl
adc
stos
fdivrs
clc
or
push
jle
or
sbb
cmp
inc
xor
and
leave
sbb
push
in
lahf
paddd
ja
stc
movsb
pop
pop
sub
movups
xor
and
mov
pop
stos
mov
mov
cs
mov
sbb
or
sub
in
stos
xor
jp
div
pop
shrb
cmp
jo
bound
test
inc
stc
mov
lret
jmp
lcall
jbe
and
pop
roll
popa
cmp
call
sbb
sub
push
inc
testb
cmc
adc
mov
mov
ds
cltd
and
dec
fsubrs
adc
adc
pop
and
shll
movsl
adc
mov
cmp
lds
adc
jmp
cld
dec
and
stos
xchg
inc
sbb
out
add
xchg
adc
outsl
and
xor
or
jge
jmp
pop
sub
cmp
movsl
mov
pushl
push
call
add
push
push
sbb
adc
movsbl
adc
lcall
testl
dec
not
pmuludq
into
push
cmc
test
lock
cmp
or
adc
lock
inc
pop
jne
cmpsb
push
and
mov
pop
add
movsl
repz
in
cltd
dec
ret
adc
cmp
pop
sbb
adc
loope
lds
sbb
enter
sub
pop
nop
mov
push
cs
mov
iret
test
adc
adcl
xlat
shrl
jae
push
iret
xchg
lahf
or
lcall
jne
jb
or
stos
push
or
xor
stos
dec
je
mov
mov
outsl
loopne
call
mov
adcb
dec
mov
sub
inc
jg
in
jmp
lock
push
mov
push
mov
inc
pop
adcl
jge
jg
das
dec
xor
cwtl
jb
lds
pop
int3
adcb
jb
pushf
adc
dec
add
test
and
cmpsb
adc
dec
fidivrs
outsb
idivl
xchg
sbbb
fs
mov
add
lock
stos
sahf
cmp
cmp
mov
call
mov
idiv
fs
jnp
jp
ds
cmp
addr16
dec
pop
sbbl
cmpsl
cmp
pop
dec
sub
sub
inc
cmp
lods
shll
pop
add
dec
or
sub
dec
cmp
xchg
test
push
inc
lcall
sub
dec
push
fs
in
sbb
ja
loop
pop
leave
insl
das
rcll
push
addl
or
adc
or
or
ljmp
jbe
sar
dec
dec
add
inc
cmp
push
nop
fwait
lods
mul
adc
mov
xor
adc
es
xor
int3
adc
cwtl
popa
into
xor
pop
xchg
push
repnz
fucomp
jo
push
pop
pusha
add
and
in
call
sarb
mov
mov
cmc
fdivs
sub
adc
dec
clc
and
sub
mov
and
adc
es
add
lea
jmp
push
ret
lahf
lret
lds
push
prefetchw
or
dec
enter
scas
cltd
in
sti
ret
test
idivb
push
insl
test
and
enter
clc
xchg
mov
dec
ret
push
push
out
outsl
jns
or
mov
jle
enter
xchg
andl
iret
cmpsb
sub
push
adcb
adc
test
in
push
mov
lds
push
ss
push
call
jmp
ficompl
dec
push
adc
cmp
inc
inc
clc
imul
iret
push
or
xchg
adc
rclb
ret
pop
sbb
jecxz
sbb
clc
clc
loope
xor
mov
fsubrs
pop
jmp
cld
js
je
push
lret
adc
cmpsl
add
mov
and
jnp
push
push
cmpl
je
rcll
daa
adc
ror
pop
ret
and
jmp
xor
fmul
ja
ret
inc
cmp
dec
mov
and
inc
mov
or
add
in
call
aad
push
pop
pop
mov
add
xor
sub
sti
loop
sbb
jbe
cmc
add
lcall
rcr
jle
mov
fs
out
cmpl
daa
test
mov
sub
pop
sti
dec
fisubl
sbb
sbb
lret
dec
bound
rorb
lods
inc
jp
mov
aad
mov
xchg
jg
push
push
dec
add
mov
ja
out
xor
cwtl
clc
pop
mov
sbb
popf
pop
daa
lret
adc
popf
xor
ret
push
clc
mov
mov
scas
les
mov
mov
aad
and
jmp
inc
dec
jbe
sub
add
lea
jmp
les
clc
cmp
popf
fsubrp
iret
mov
dec
mov
xchg
notb
jmp
jno
cmp
roll
mov
hlt
inc
push
add
jge
stc
fadds
push
loope
lods
sub
mov
jle
sbb
icebp
pop
je
inc
and
adc
mov
sub
xlat
and
pop
mov
syscall
cmp
aam
scas
shrb
or
ret
das
popa
push
lods
push
xor
cmp
sbb
xchg
mov
clc
xor
or
or
cmp
out
adc
call
test
in
loope
aas
mov
xchg
out
xchg
scas
cwtl
add
rol
test
movsl
xor
mov
out
xor
xchg
pop
sbb
cmp
mov
je
fs
xchg
mov
inc
push
pop
clc
arpl
into
inc
mov
mov
in
das
push
adc
adc
jecxz
jnp
or
add
es
sti
push
adc
cmp
repnz
sbb
ret
cmp
and
rcrl
xchg
xchg
aam
aas
stos
inc
fsubrl
mov
mov
scas
inc
pop
decb
aas
scas
cli
sub
lods
js
jmp
and
dec
imul
or
ljmp
or
push
sub
pop
pop
movsb
inc
or
push
es
and
cmp
and
add
inc
xor
xorb
jmp
jle
sub
mov
dec
cmp
xlat
cmp
push
mov
inc
or
dec
mov
inc
mov
subl
pop
mul
pop
cli
and
mov
jbe
mov
loop
dec
adc
dec
orl
sub
data16
dec
test
adc
push
cld
push
dec
jecxz
es
inc
data16
pop
adc
test
popa
add
das
sbb
lret
and
pushf
cmpsb
in
call
jmp
inc
je
aam
dec
roll
orb
push
inc
xor
cmpl
std
xlat
sbb
jbe
xor
lock
push
cmp
stos
out
or
fidivs
rcrb
inc
adc
jmp
mov
sub
jg
xchg
jmp
cmp
mov
jmp
lock
mov
push
inc
mov
addb
out
bound
mov
adc
jge
and
rorb
adcl
sbb
xor
loop
mov
lds
imul
pop
cmpsb
cmp
xor
rcll
sete
test
mov
pop
test
lea
jne
adc
pop
inc
or
out
cmp
cmpsl
xor
and
dec
ret
push
jle
inc
sub
sub
dec
dec
xor
push
dec
clc
sub
cmp
sti
and
adc
aaa
add
add
fs
adc
in
dec
xor
or
adc
push
sbb
sbb
xor
xor
roll
popa
pop
or
mov
jle
xor
xchg
shll
gs
adc
add
nop
in
add
xchg
or
or
sub
dec
sbb
mov
push
jns
cltd
lods
xchg
outsl
or
test
xchg
mov
xchg
jne
adc
cmp
adc
jo
test
jbe
je
stc
jle
mov
cmpsl
pop
lret
add
inc
jp
mov
adc
dec
sti
sub
or
outsb
or
or
adc
mov
jnp
adc
xchg
xchg
into
mov
adcl
sbb
inc
xchg
push
pop
imul
jl
test
lahf
pop
xchg
jns
lea
adc
call
roll
or
loopne
jmp
repnz
dec
mov
into
xchg
adc
adc
mov
mov
out
nop
adc
into
cmp
lds
push
dec
sub
mov
jbe
imul
jecxz
mov
jge
aas
adc
repz
gs
gs
lds
push
lds
nop
and
andb
push
sbb
mov
loopne
mull
jmp
cmp
xchg
dec
sbb
sbb
jge
sub
pop
ret
out
std
mov
bound
pushf
call
jg
ficoml
mov
orl
std
jle
pop
jle
xchg
inc
pop
cmpsb
inc
or
or
xor
adc
push
mov
test
and
xor
test
iret
test
fsubs
push
xor
mov
fistpll
ljmp
lock
or
movsl
mov
push
cmpsb
or
xor
jno
dec
hlt
aad
sub
lcall
mov
stc
fcomps
or
arpl
sub
mov
xlat
notb
shlb
adc
and
push
mov
das
scas
or
sbb
jo
cmp
pop
int3
cltd
dec
and
std
movsb
addr16
mov
inc
mov
or
pop
inc
sub
add
testb
xor
cmp
shr
pop
dec
xchg
pop
les
testb
adc
xchg
out
or
shll
enter
rolb
push
aad
pop
bnd
cmp
xchg
jnp
inc
imul
mov
adc
mulb
push
mov
test
aad
sbb
rcrl
test
cmpl
ja
adc
and
stos
arpl
and
aam
xor
adc
xchg
adc
pop
cmp
or
or
xchg
pushf
lcall
call
mov
test
and
mov
aaa
fwait
and
jecxz
sub
scas
lcall
jb
or
jg
test
dec
fwait
out
insb
insl
jmp
mov
cmpsb
sbb
into
jge
scas
and
cmp
in
fsubrs
push
in
mov
jle
sub
icebp
sbb
xlat
adc
subl
sbb
rcrb
xchg
push
xor
js
sbb
push
cli
jne
push
xor
enter
sub
or
adc
adc
hlt
inc
sbb
in
or
and
js
sub
cmpsb
xor
push
mov
dec
or
lock
push
pop
sub
divl
xor
push
cmp
push
push
sub
pop
jmp
jmp
inc
jnp
jo
subl
vmread
pop
mov
fnstenv
inc
and
nop
sbb
sbb
dec
jmp
cmp
cli
add
inc
dec
cmp
cmp
outsl
inc
cmp
ficomps
sbb
push
push
and
inc
push
pop
add
adc
sbb
inc
push
fldl
sbb
push
enter
or
xchg
fdivl
inc
sbb
addr16
sbb
dec
mov
test
sub
gs
arpl
sarl
inc
xor
call
sbbl
or
push
lret
jl
xchg
or
out
adc
ljmp
das
inc
and
insl
sub
dec
push
xor
xor
xchg
test
fs
pop
push
in
pop
inc
lcall
or
mov
xchg
movsb
testb
daa
push
mov
push
or
mov
pop
push
mov
sub
shlb
adc
inc
jns
inc
loopne
jmp
inc
and
dec
rcrb
in
add
xchg
lock
or
inc
jp
arpl
sbb
xor
rorl
adc
fucomip
bnd
in
dec
cmp
mov
adc
xchg
test
rorl
sbb
mov
pop
popa
mov
and
imul
dec
push
sub
push
popa
shrb
adc
sti
aas
fs
ljmp
dec
push
inc
sbb
add
sbb
mov
daa
pop
push
adc
mov
push
es
sbb
pop
push
jecxz
pop
subb
pop
dec
pop
out
int
dec
in
enter
inc
push
pushl
cltd
notb
dec
and
xchg
data16
inc
xor
out
bound
dec
sub
adc
cmp
test
adc
arpl
push
test
sub
jmp
ss
je
xor
pop
adc
sub
adc
sub
jb
das
inc
mov
adc
ficoms
andl
cmp
rcrb
sub
daa
jne
xchg
and
cwtl
or
lock
jne
jle
iret
sub
push
bound
popf
sub
jmp
mov
ret
add
jnp
in
or
dec
xor
mov
jecxz
dec
pop
dec
jb
out
dec
sub
dec
les
sahf
cmp
inc
das
mov
pop
dec
aad
out
inc
adc
sub
adc
xchg
or
cmp
ret
ja
jle
push
daa
clc
jmp
mov
ds
mov
mov
mov
xchg
dec
push
mov
mov
test
or
cltd
lahf
xor
subb
adc
jne
mov
lock
je
pop
push
push
lret
adc
and
xchg
aam
pop
sub
lret
test
insl
cmp
mov
scas
and
jo
cmp
cmp
dec
push
call
and
dec
xor
sti
sub
push
inc
add
pop
sub
les
sti
aas
adc
and
daa
sub
dec
adc
cmpsb
or
push
testl
aad
push
jo
das
cmp
lods
add
cmp
jo
and
or
mov
ss
sbb
dec
test
sub
jbe
shll
or
insl
lret
stos
xchg
push
sub
push
or
mov
mov
push
insb
adc
mov
mov
sbb
cmp
test
inc
or
adc
adc
adc
adc
or
adc
jmp
mov
or
cmp
or
cli
ret
xchg
sbb
stos
cld
je
xor
adc
adc
subl
xor
sbb
sbb
mov
mov
scas
mov
dec
add
xchg
adc
inc
imul
add
cmpl
aam
mov
test
adcb
jmp
xor
icebp
xchg
inc
or
mov
rcrb
sbb
xchg
add
pop
cmp
mov
pop
test
enter
xor
adc
cmc
sub
pop
adc
xor
pop
nop
les
clc
insl
pop
pushl
pushf
jne
fnsave
test
inc
cmp
mov
int3
add
jle
xchg
pusha
aas
pcmpeqw
test
mov
inc
int
cmp
and
movsl
out
hlt
jb
nop
dec
add
out
aam
stos
sub
test
adc
lcall
jb
lcall
sbb
pop
sti
aad
sbb
jmp
lahf
sub
inc
in
lret
cs
std
pop
xor
push
mov
jl
sub
inc
sub
imul
xor
ljmp
cmp
movsb
or
add
sub
pop
xchg
push
and
sub
loope
jmp
sbb
std
js
addb
enter
xor
mov
inc
inc
aad
xchg
adc
dec
mov
mov
sub
cwtl
aaa
xor
in
dec
sti
les
sti
xor
pop
imul
out
xor
adc
add
inc
out
call
ret
clc
inc
mov
ss
andb
jg
test
incl
ja
push
call
pusha
push
and
je
call
and
fidivrl
adc
mov
sbb
push
icebp
jl
cs
sbb
or
mov
push
cld
push
pop
mov
sub
xchg
mov
popf
shrb
dec
inc
or
fmull
inc
inc
dec
faddp
inc
dec
fbstp
loop
inc
xor
pop
cmp
aad
gs
jmp
jl
lret
push
testb
ror
cwtl
pop
mov
movsl
ljmp
mov
movsl
aam
mov
cmpsl
mov
inc
lds
repz
aad
imul
ds
in
es
push
xorb
xchg
stc
ja
jo
pop
xor
sbb
shll
leave
mov
mov
mov
notb
cmp
int
jbe
cltd
push
notb
push
sub
cld
jmp
jo
mov
stos
or
or
push
sbb
jbe
test
pop
push
mov
dec
and
popf
js
mov
sub
xchg
js
mov
cmp
inc
inc
push
xor
add
jl
imul
xor
xor
imul
adc
pop
push
js
pop
inc
add
outsl
mov
popa
push
inc
push
mov
push
jl
push
push
inc
inc
adc
xlat
repz
add
ja
mov
daa
lahf
push
mov
adc
stos
mov
push
scas
arpl
push
lods
cmp
adc
push
fildll
or
leave
js
add
lods
rcl
pusha
cmp
pop
js
adc
xchg
test
cmp
fwait
jne
mov
mov
movsb
jnp
fs
or
push
fisubrs
push
xchg
jge
mov
adc
push
call
mov
jne
pop
scas
loop
mov
sub
pusha
sub
mov
dec
adc
in
iret
enter
pop
insb
mov
xor
adc
sub
and
pushf
or
jb
add
bnd
scas
fcoml
adc
in
mov
adc
add
orb
and
test
mov
cmp
adc
fldz
jne
es
push
movsl
call
push
push
mov
push
pop
push
fnstsw
lds
sub
aas
loope
jbe
cld
fwait
mov
stc
bound
or
adc
test
xchg
mov
or
adc
inc
mov
inc
inc
jg
sub
push
xor
lods
nop
jge
test
inc
jb
insb
sbb
add
mov
add
dec
push
jo
jo
adc
pop
mov
shll
mov
imul
pop
dec
cs
xor
push
icebp
inc
cmp
mov
leave
mov
in
scas
aam
rorl
enter
mov
adc
lods
out
mov
inc
bound
pop
pop
dec
add
out
cmc
mov
and
out
fdivs
jecxz
ret
pop
call
adc
push
call
lock
mov
mov
insl
test
cmpsb
aam
and
leave
add
repnz
shll
imul
inc
repz
jb
xlat
fxch
movsl
dec
fmuls
pusha
or
out
jmp
notl
loope
loope
xor
sbb
call
test
test
jecxz
fstps
loope
or
daa
or
push
and
or
sbb
inc
adc
movswl
xchg
or
cwtl
aaa
xor
or
mov
subb
pushf
ja
cltd
cmp
pusha
out
mov
fisttpll
mov
jnp
inc
push
cmp
or
sbb
mov
push
ds
lea
push
adc
adcl
xlat
push
adc
call
inc
fnstcw
and
lret
jle
jne
loop
cmpl
push
fistpl
add
push
push
adc
push
sub
and
mov
jmp
fldcw
in
ss
lret
adc
adc
das
sub
ja
dec
je
movsb
cmp
mov
jge
push
xchg
les
aam
stos
pop
fimuls
xchg
jne
xor
mov
mov
push
push
push
pop
loop
jle
dec
xchg
lahf
add
outsl
dec
mov
cmp
adc
and
es
andl
mov
inc
pop
push
imul
and
sub
aad
xor
enter
or
pusha
fs
or
pop
jne
jmp
cmp
fnsave
or
adc
dec
sbb
lds
test
xor
or
mov
sub
test
fbld
jmp
cmp
and
int3
adc
jns
test
jo
xchg
or
outsb
repnz
les
je
imul
mov
xchg
and
lods
daa
in
xchg
dec
and
jne
adc
dec
outsl
mov
push
outsl
pop
loopne
and
std
mov
loopne
cltd
insb
adc
adc
and
push
or
adc
dec
data16
mov
pop
mov
int3
rcrl
rclb
je
lods
pop
or
fisttps
mov
icebp
pop
ret
test
adc
jmp
lock
out
leave
ds
popa
mov
je
sbb
or
push
mov
dec
ficompl
mov
int
xchg
jno
add
add
lret
cmp
daa
ss
and
dec
and
cmc
xor
mov
xchg
stos
lcall
lods
popa
adc
enterw
inc
xchg
cs
mov
mov
cmp
mov
jge
and
add
jbe
leave
push
mov
fnsave
jo
test
mov
loope
add
dec
rorb
and
divl
jb
call
test
daa
dec
push
outsl
test
mov
jl
lcall
scas
sub
add
add
push
rcll
and
or
mov
push
imul
xchg
lcall
sbb
stos
fsubrl
mov
sub
cwtl
xchg
mov
js
pop
shl
movsb
xor
sub
sbb
sbb
std
stos
jbe
movsl
adc
inc
call
adc
popa
fsts
lds
mov
clc
mov
jl
sar
jne
cmp
pop
test
movsb
mov
loope
pop
sub
xchg
jmp
mov
dec
sbb
mov
jg
fadds
xor
pop
in
and
sbb
scas
inc
movsl
jl
jp
jp,pt
das
ret
ja
pop
jae
push
call
pop
cmp
or
dec
xor
mov
inc
andl
jns
mov
test
icebp
push
fmull
and
push
sbb
roll
sarb
inc
inc
jmp
fmul
jmp
jl
pop
jle
lcall
mov
mov
js
dec
or
out
lock
test
add
call
and
and
sub
imul
and
pushf
aad
pop
cltd
cmp
push
imul
cmp
push
nop
mov
inc
push
xchg
push
pop
or
in
xchg
cmc
mov
sbb
inc
test
mov
jg
inc
cmp
gs
ljmp
int
jo
aaa
xchg
jne
jecxz
sub
mov
add
iret
std
sti
int
sub
add
xchg
jbe
jnp
call
adc
call
add
push
sub
adc
call
out
test
out
jmp
das
adc
xchg
cmp
mov
dec
dec
out
cmpl
cli
test
mov
movsb
daa
cmp
icebp
std
leave
xchg
pop
mov
mov
push
out
cmp
hlt
dec
repnz
pop
hlt
mov
aas
push
jge
sub
in
jge
mov
daa
or
push
aas
lods
stos
dec
lds
lock
and
lods
push
shr
clc
hlt
outsl
dec
and
jne
sbb
xor
scas
mov
daa
dec
das
pop
inc
push
jbe
pushf
push
rcr
push
mov
or
pushl
adc
mov
cmp
cmp
out
xorl
jmp
mov
inc
xchg
ret
mov
adc
lock
outsb
xchg
pop
mov
clc
push
jg
and
jbe
dec
out
lea
cmp
inc
cmp
jne
xor
mov
push
dec
mov
jl
scas
test
loop
ja
cwtl
test
lods
comiss
in
cmpsb
fsubrl
and
andl
or
inc
notl
dec
and
mov
pop
je
push
sub
xlat
cltd
mov
cmpsl
jo
ret
xor
scas
xchg
mov
push
in
lcall
inc
xchg
cmp
decb
fnsave
inc
adc
cmpsb
adc
mov
fmuls
dec
mov
push
pop
mulb
jp
lret
sub
je
fildl
stos
shll
mov
iret
and
shr
outsl
pop
test
or
xor
sub
add
push
jae
jbe
rol
cli
bswap
inc
xchg
xchg
and
test
adcb
aam
mov
arpl
xor
mov
mov
out
ret
mov
out
insb
push
xchg
hlt
or
aam
or
and
adc
call
repz
das
int
sahf
scas
int3
mov
orb
shlb
cltd
add
cmpb
std
pop
dec
sbb
cmc
adc
in
push
or
stos
lret
jne
mov
adc
test
ljmp
inc
bound
mul
sub
mov
push
sbb
lock
xchg
add
leave
ret
jge
sub
push
fdivs
stc
mov
jb
dec
or
sbb
pop
push
jg
shr
and
nop
sbb
pop
je
call
shl
jg
pusha
stos
jnp
jl
std
imul
scas
fsubrs
data16
mov
jmp
aad
cld
xchg
and
inc
or
stc
daa
or
lds
push
icebp
std
sbb
push
add
and
sub
push
stos
addb
cs
sub
addr16
aam
cmp
cmp
xor
push
mov
adc
or
and
jge
push
hlt
setl
xchg
addr16
or
or
pop
sar
daa
out
dec
dec
mov
xchg
shlb
arpl
cmp
inc
shlb
or
enter
sti
jbe
sub
xlat
andl
lcall
movsw
sbb
or
sahf
sbb
xchg
dec
test
lds
hlt
repz
in
mov
mov
lea
int3
mov
mov
loopne
movsl
add
data16
cmc
in
dec
in
lock
das
mov
sbb
jmp
js
enter
pop
add
fdiv
xor
dec
ja
sbb
sahf
and
push
push
fwait
push
and
aam
in
sbbl
insb
pop
mov
aas
test
sbb
push
push
cmp
aas
sub
inc
andb
inc
idivb
mov
push
dec
std
aaa
pop
dec
scas
mov
cmp
mov
adc
outsb
mov
xchg
sub
mov
push
xlat
cmp
pop
sub
cmc
mov
int
dec
lcall
jae
pop
ja
shr
repnz
inc
xor
add
clc
sub
fidivrl
mov
pop
push
dec
dec
add
cmp
fnstsw
cmp
call
mov
in
pop
fisubl
xchg
xchg
push
test
jmp
dec
lds
test
pop
jne
or
cmp
std
inc
stc
sub
sub
jb
outsl
je
pop
push
mov
enter
mov
clc
push
sub
or
addr16
fbstp
rorl
jg
lods
int
movsb
and
mov
fisubrs
shll
cmp
xchg
int3
stos
sbbl
mov
pop
stos
cmp
mov
pop
es
ret
dec
lods
sub
jmp
xchg
call
pop
inc
dec
leave
out
or
lret
adc
push
push
mov
fcoml
aaa
inc
cmp
enter
fcmovnu
insl
sub
mov
push
repz
or
push
and
adc
and
pop
pop
lods
pop
mov
ret
push
leave
inc
mov
pop
aam
stos
dec
jb
lods
ror
xlat
mov
jo
push
xchg
xchg
imul
and
sbb
inc
pop
dec
ficoms
pop
mov
or
testl
push
or
xchg
pushf
mov
cmpsl
pop
pop
push
push
inc
push
jge
dec
hlt
and
inc
dec
inc
or
sbb
xchg
and
fs
xlat
negb
sbb
outsl
sbb
rorb
das
mov
ficoml
fbstp
call
and
push
push
scas
add
es
xor
sub
adc
aaa
scas
inc
cmp
push
mov
cmp
push
lahf
les
sbb
fcom
jmp
add
add
or
sti
mov
repz
xchg
push
cwtl
and
call
sbb
push
mov
mov
lcall
popf
repnz
jle
imul
scas
or
inc
push
push
call
push
cld
jmp
les
testb
je
xor
rcrb
inc
or
aam
sub
xchg
mov
sbb
sbb
imul
jge
fists
xchg
iret
stos
xor
cmp
rcr
enter
mov
fstp
push
int
gs
out
dec
xor
inc
and
dec
adc
lods
or
ret
pop
inc
adc
stos
and
xchg
andb
mov
std
dec
orl
adc
sub
dec
xor
or
cmp
add
flds
imul
out
lock
bound
or
cmp
mov
je
inc
or
mov
jge
repnz
test
sub
xchg
pop
sbb
ja
in
or
jns
cmp
cwtl
xchg
sbb
sub
faddl
cmc
cmp
adcb
sbb
jae
lea
dec
lahf
popf
lods
mov
push
jo
xchg
jae
and
sbb
loope
adc
xchg
mov
sub
adc
inc
call
push
mov
adc
lret
movsb
ja
xchg
pop
test
daa
inc
adc
dec
xchg
or
push
xchg
test
rolb
push
cmp
xchg
out
outsb
loop
ret
incw
push
movsb
push
mov
mov
pop
add
or
loope
fcomip
xchg
lds
repz
pusha
mov
jmp
fisubrs
and
mov
pop
dec
xor
mov
hlt
idivb
xor
orl
clc
mov
cs
cmp
mov
daa
cs
movsb
pop
hlt
enter
sub
add
out
xchg
js
mov
ds
sub
in
xchg
mov
dec
or
cltd
push
call
cwtl
cmp
xchg
and
mov
mov
sbb
pop
cmp
in
or
or
hlt
xlat
lea
stc
leave
xor
hlt
test
sbb
test
pop
push
testb
cmc
test
or
movsb
test
xor
rorl
or
xor
fsubr
dec
dec
fsubl
jbe
outsl
lea
outsb
loop
xorl
sub
add
fadds
inc
xor
pop
adc
jns
loope
add
and
or
mov
not
and
scas
lea
bnd
cli
bound
adc
add
inc
scas
inc
cmp
jb
lcall
lock
fbstp
xor
adc
cmpsb
ja
fs
sbb
cwtl
aas
mov
out
mov
or
lock
jbe
pop
in
jb
adc
push
push
sbb
mov
daa
ja
enter
lea
and
and
jle
mov
jae
xchg
leave
sbb
dec
lods
lcall
xchg
shll
es
aad
add
aas
mov
dec
or
add
ja
push
push
mov
pop
jge
ds
inc
cmpl
and
mov
gs
xor
test
push
nop
or
mov
mov
cmpsl
sbbl
les
push
lret
adc
push
mov
lods
leave
adc
mov
in
adc
ss
popf
fists
mov
lds
push
push
push
xchg
popa
mov
jmp
sub
notb
sub
inc
pop
inc
push
push
jl
inc
xorb
cmpl
xchg
or
fs
je
les
ja
decb
mov
adc
addr16
cmpl
add
and
push
call
push
jge
adc
pop
sti
dec
sbb
xor
jmp
push
mov
or
fistpll
sbb
outsb
mov
pushf
mov
ficompl
and
jns
dec
dec
dec
shll
fbld
inc
scas
std
push
pop
cs
inc
add
andb
inc
push
mov
outsb
cmc
fdivrl
sahf
mov
sub
daa
jle
lret
cmp
lods
imul
xor
jge
jbe
std
or
push
inc
dec
popf
hlt
xor
das
jb
cmp
push
xor
push
popa
mov
cmp
ret
mov
add
sbb
inc
into
xor
mov
gs
pop
cld
adc
mov
fstps
out
or
sub
imul
mov
enter
and
les
ret
adc
clc
adc
inc
inc
dec
fs
test
fs
add
iret
aas
jmp
in
mov
push
call
jmp
or
jl
cmpsl
dec
adc
xorb
xchg
out
addr16
sbb
dec
sti
stos
shl
das
dec
and
mov
outsb
sarb
and
or
jo
lret
movsl
push
mov
cmp
and
sahf
cmp
aad
popa
push
adc
lcall
or
ror
or
dec
mov
and
or
pop
xchg
call
insl
push
dec
mov
je
sub
and
dec
rep
jg
clc
pop
cmpsl
xchg
adc
fcomps
dec
fists
bound
pop
fisubl
out
pop
pop
and
cmp
pop
pop
mov
dec
inc
pop
test
cmp
xchg
sbb
testb
jg
cmp
insb
addl
inc
mov
mov
mov
js
cmp
popa
dec
lret
adc
fisubl
mov
leave
push
sub
es
sbbb
jge
fs
pop
cld
aas
mov
movsl
push
repz
adc
xor
and
cld
inc
push
jno
lods
stc
ret
adc
lahf
push
mov
repz
pop
fs
mov
nop
mov
call
inc
dec
lods
inc
addb
js
lds
jp
aas
je
add
jmp
add
jle
clc
mov
push
dec
out
and
mov
aaa
cmp
push
je
jmp
out
std
ret
shr
sahf
dec
mov
xchg
in
jmp
push
add
cmp
repnz
stos
inc
add
mov
mov
and
or
adcl
adc
add
cmp
xor
les
or
mov
out
xchg
jns
imul
test
push
fucomip
push
xchg
ljmp
in
cmc
mov
adc
js
popa
cmp
xor
loop
jmp
mov
jb
sbb
rorl
cmp
and
xchg
sub
mov
rcl
pop
adc
sti
dec
adc
inc
mul
leave
imul
pop
std
mov
aam
leave
pop
and
in
push
dec
push
xor
shrl
data16
push
daa
jmp
dec
popf
xchg
or
dec
dec
outsl
cld
jp
cs
loopne
pop
xor
sub
and
mov
test
pushf
pop
push
push
cli
cltd
mov
cmp
inc
dec
sub
pop
inc
dec
pop
mov
ljmp
mov
xor
lods
sub
jne
mov
mov
aad
sbb
dec
mov
sbb
jmp
jle
stos
push
dec
inc
aam
xchg
pop
mov
pop
adc
out
dec
inc
sub
inc
fdiv
push
or
dec
push
xchg
movsl
loop
jge
fdivp
add
imul
dec
mov
lods
pushf
stc
cltd
movsl
jl
xor
push
fldt
out
push
jno
cmpsl
and
push
push
dec
jbe
mov
jne
lods
stos
dec
xor
rcll
cmp
cltd
aam
jb
jg
es
fisubrl
mull
adc
clc
jne
push
imull
adc
jge
pop
cmc
jmp
enter
dec
sub
mov
lock
pop
ds
test
or
xchg
dec
pop
adc
inc
movsl
jne
or
dec
and
mov
dec
jno
test
adc
and
test
inc
or
jno
stos
std
dec
or
jmp
jg
jns
jb
dec
jae
mov
jno
dec
js
daa
test
jno
mov
xchg
dec
jbe
push
inc
dec
push
pop
jae
dec
repz
andl
mov
mov
add
or
inc
icebp
jmp
xlat
mov
lea
loop
xor
repnz
mov
pop
enter
mov
jb
adc
jbe
xor
sbb
push
inc
sub
lcall
inc
adc
xor
arpl
imul
mov
and
inc
xor
clc
inc
inc
and
test
push
and
fs
outsb
push
sub
int
adc
stc
push
fwait
push
cmp
mov
ret
and
sti
adc
push
push
xchg
jb
cmp
push
cwtl
jmp
ficomps
push
lahf
lcall
push
dec
xor
cmc
cltd
cmp
jnp
call
add
adc
rcrb
out
das
or
adc
xchg
nop
sub
push
je
fucomi
int3
cmc
insb
loope
jge
sub
mov
call
jg
push
std
rclb
lods
test
hlt
call
push
push
push
lods
mov
mov
adc
hlt
dec
in
leave
leave
fistps
pop
repnz
je
xchg
xchg
xor
mov
loope
stc
insb
pop
jecxz
cs
xchg
adc
aas
or
sbb
push
loop
in
jp
mov
cwtl
add
popf
pop
xor
xlat
xchg
cmp
push
inc
inc
xchg
in
fwait
pop
mov
cld
test
inc
mov
dec
cmp
in
jecxz
les
mov
add
or
aam
and
incl
shl
enter
mov
lea
inc
shl
loop
jns
mov
js
or
sub
pushf
dec
and
call
mov
push
das
in
popf
adc
aam
fs
das
jg
pop
pop
mov
mov
push
adc
sarl
cmp
jae
mov
nop
inc
popf
push
addr16
jbe
dec
cmp
outsl
out
sub
addr16
jle
xor
sbb
mov
adc
call
jb
adc
pop
push
xor
inc
or
mov
xchg
movsl
arpl
lods
push
xchg
adc
repz
adc
inc
or
shlb
mov
ret
pop
clc
sbb
or
pusha
cmp
inc
adc
and
xchg
call
adc
icebp
adc
rclb
je
adc
jl
sbb
xor
inc
insl
push
repz
rclb
sbb
clc
mov
pop
add
or
and
push
rcll
xchg
aaa
enter
orb
repz
sbb
enter
enter
or
int3
mov
cmp
lds
insb
mov
iret
push
dec
cmp
test
push
or
sub
mov
test
lea
popa
lock
mov
mov
jbe
mov
mov
or
pop
lea
or
shl
es
pop
adc
push
clc
fildll
stc
fwait
cwtl
sub
cld
mov
cld
imul
mov
out
adc
lea
sub
jnp
mov
sub
stos
dec
mov
dec
push
notl
std
sbb
xchg
xlat
call
je
push
pop
push
lods
int3
mov
jb
adc
sbbb
jmp
test
inc
jbe
in
fwait
mov
inc
adc
leave
movsl
cmpsl
pop
popa
fadd
dec
adc
push
sbb
dec
inc
or
lea
xchg
mov
dec
pop
adc
cli
adc
lret
mov
repnz
lahf
pop
pop
int
movsl
add
lods
shrb
xchg
pop
movups
les
sahf
imul
call
inc
xlat
push
push
xchg
lahf
jo
icebp
inc
movsl
xlat
dec
mov
hlt
cld
in
stos
cs
sbb
cmp
adc
push
adc
dec
inc
scas
and
pop
xor
or
popf
fs
xor
or
sbb
xor
push
and
mov
adc
fsts
dec
jo
stos
loop
sahf
pop
inc
and
pop
mov
lret
add
sbb
int3
sub
loope
in
adc
test
jo
push
mov
nop
jle
clc
sub
or
lea
xor
ret
and
push
push
int3
dec
ds
mov
pop
call
pop
sub
popf
shlb
sub
xchg
push
or
movsl
jp
ret
mov
and
inc
mov
cmp
sbb
or
xor
cmp
pop
cmp
push
push
inc
sbb
push
mov
daa
pop
aad
and
push
imul
push
mov
dec
popf
je
or
mov
push
mov
shrb
imul
push
and
adc
sbb
test
scas
jmp
dec
decl
ret
movsl
sub
mov
sub
push
pop
add
stos
sub
into
or
test
sub
repnz
lcall
enter
pop
shlb
mov
mov
pop
cmp
movl
mov
xchg
add
orl
cmp
outsl
sub
or
mov
fstps
cmp
jmp
jp
and
loop
xlat
bound
push
je
mov
fistpll
out
push
mov
xor
or
mov
adc
ljmp
sub
mulb
jp
sub
fdivs
push
jae
add
push
push
repnz
std
lcall
call
push
dec
js
inc
int3
mov
ja
mov
pop
test
sti
test
cvtps2pi
pop
jge
sahf
xchg
pop
cmp
push
nop
movsb
mov
mov
adc
lret
or
pop
in
hlt
or
sub
shlb
and
xchg
xchg
push
xlat
in
ds
mov
mov
inc
xchg
push
xchg
je
dec
add
out
mov
daa
pop
inc
in
repz
into
mov
xor
inc
adc
and
fimull
es
popa
cld
gs
cmp
sbb
movsb
push
in
dec
inc
cmp
jmp
fimuls
mov
dec
dec
push
push
or
hlt
push
lcall
sub
push
es
pushf
fsubrs
mov
fadds
jne
fidivrs
jl
clc
ret
dec
sbb
xor
into
enter
add
aas
or
nop
xchg
sbb
cmc
sub
aas
push
call
scas
cs
xor
stos
mov
call
dec
or
test
push
scas
mov
dec
fisttpll
rorb
pop
das
jmp
popl
addr16
arpl
push
fiadds
push
scas
inc
psubsw
lods
mov
and
push
dec
inc
fwait
push
xchg
out
pop
pop
cld
sti
dec
mov
adc
enter
mov
stos
fdivr
cs
or
test
bound
lods
stc
roll
jle
fwait
pop
das
fnstcw
push
scas
fsts
mov
jle
push
cld
sbb
adc
dec
cli
and
stc
inc
xchg
pop
inc
jb
jno
mov
pop
xchg
movsl
ja
or
cmpsl
cmp
push
add
outsb
mov
mov
or
lahf
popa
lea
adc
test
pop
mov
aam
sub
push
inc
pusha
decb
inc
cli
daa
movsl
jmp
hlt
and
cmp
cmp
mov
and
or
sbb
inc
lock
sbb
mov
pop
xchg
shl
inc
dec
adc
call
ljmp
mov
push
push
xchg
clc
call
push
enter
jl
inc
rcll
loopne
js
xor
jne
inc
sbb
xchg
test
sub
jnp
fs
adc
and
sti
mov
movsl
imul
sbb
movl
out
push
int
dec
or
dec
lods
fdivrp
sbb
add
aaa
and
mov
add
sbb
cmp
inc
loop
sub
and
inc
pop
or
in
cli
sti
sahf
mov
sub
pop
mov
aam
pop
mov
push
xor
add
ret
test
or
jne
daa
inc
add
cmp
test
mov
inc
dec
mov
testb
stos
or
mov
std
movsb
out
repnz
dec
pop
std
mov
cmp
pusha
and
and
push
movsl
fldenv
adc
cmp
and
movsb
push
imul
ljmp
push
dec
inc
nop
fwait
xor
pop
push
rcr
and
jb
mov
sub
sbb
imul
nop
add
pop
frstor
mov
frstor
popa
and
fs
dec
inc
jne
sub
and
mov
adc
sbb
dec
adc
pop
fists
insb
xchg
clc
inc
cmpsb
stos
push
sbb
inc
inc
adc
push
pop
dec
mov
adc
and
mov
or
cmpsb
int
sbb
cmpsl
jbe
cmc
ret
mov
js
cmpsl
add
ljmp
aaa
pop
mov
jge
push
jo
cwtl
jbe
jne
icebp
clc
adc
cmp
sbb
add
lea
ss
and
or
and
add
enter
mov
mov
add
inc
xchg
push
dec
ffreep
sbbb
sti
out
pop
xor
or
pushl
mov
pop
inc
cmc
jp
rclb
jge
les
ss
jae
cmp
cmpsl
shl
ds
sbb
push
std
mov
xchg
in
les
adc
popf
insb
sub
cmovp
and
pusha
stc
mov
loop
pop
cmp
jmp
scas
in
rcll
mov
incb
test
pop
aam
and
pop
pop
mov
repnz
sbb
pop
and
push
xchg
inc
xchg
lret
mov
cmp
dec
mov
jg
adc
lea
xor
dec
gs
out
ja
flds
adcl
pop
push
les
lods
scas
mov
inc
and
loope
es
xchg
mov
das
mov
dec
mov
and
mov
xchg
pop
movsl
push
cmp
out
and
clc
push
out
sbb
dec
mov
inc
push
cmp
aad
loop
xor
bound
jp
push
vcvtps2dq
popa
jmp
cmp
mov
imulb
test
shr
loop
iret
or
mov
sbb
loopne
sbb
shlb
xor
cld
and
push
lods
sbb
lea
push
mov
jb
fidivs
aad
ret
cmpsl
jns
out
sub
and
jae
imul
mov
dec
cmc
inc
and
scas
sbb
div
ja
sub
push
aas
pushf
js
fwait
jbe
orb
xorb
push
dec
push
ds
jne
mov
mov
mov
out
les
stos
repnz
jle
in
sub
adc
mov
cmpsb
ret
cmp
xchg
and
sbb
pop
out
jg
mov
sub
xor
mov
mov
jmp
cmp
dec
adc
mov
adc
mov
add
int3
repz
sbb
subl
daa
repnz
cmpsl
nop
xor
push
aam
cmpl
cmp
lock
sbb
lea
mov
jmp
cmpsl
dec
adc
pusha
add
pop
cmp
shll
pop
xor
sub
or
inc
and
call
enter
or
out
out
fsubl
call
ds
dec
mov
or
jne
and
insb
pop
xor
call
push
jecxz
call
mov
cs
addr16
pop
enter
mov
or
test
scas
mov
lcall
in
push
xor
jmp
pop
push
mov
out
test
xchg
or
push
sbb
inc
adc
and
push
js
lods
int
pop
lcall
push
sub
pop
xor
pop
xchg
inc
pop
jne
cli
test
sar
inc
movhps
rorb
push
jmp
aad
mov
out
and
rcll
xor
mov
push
and
pop
xchg
cli
mov
mov
call
sub
icebp
sbb
je
and
ss
or
movsb
cmp
in
int3
cmp
int3
inc
mov
out
mov
fists
scas
and
pop
pop
dec
test
fdivr
mov
or
push
add
add
ljmp
and
les
mov
repnz
xchg
fdiv
inc
sub
lret
test
adc
inc
add
arpl
add
sahf
fisttpll
mov
scas
sub
ds
scas
lods
aaa
loope
sbb
xor
icebp
push
pusha
and
das
aam
leave
add
push
sarl
push
push
xor
and
sahf
scas
adc
dec
stos
cmp
fsubrs
xlat
cwtl
mulb
lahf
loope
jge
dec
inc
push
push
dec
and
das
repnz
outsl
jae,pt
cld
mov
mov
xchg
mov
xchg
and
loopne
sbb
imul
les
pop
adc
mov
pop
sub
mov
dec
sub
xor
mov
lret
or
mov
cld
lea
call
push
sbb
jl
or
movsb
sub
mov
pop
jne
jmp
inc
xor
mov
adc
or
mov
inc
inc
adc
xchg
xchg
scas
mov
dec
lds
sbb
jns
loope
xchg
xchg
nop
lock
sar
pop
cmc
fidivrl
fcoml
cltd
out
fdivrl
aam
adc
in
mov
xchg
rolb
or
add
call
cld
or
in
jnp
and
out
or
xchg
mov
push
ret
jne
push
sahf
scas
daa
aad
out
andb
fdivs
in
jp
insb
fstl
test
mov
pop
cmpl
xor
and
loopne
outsl
dec
mov
aad
das
mov
xor
pop
ljmp
mov
mov
scas
sbb
pop
push
push
inc
sbb
hlt
xlat
or
fs
adc
push
xchg
jne
cmpsb
and
pop
and
sub
movsb
pop
or
jge
or
cmp
cmpsb
pusha
movsb
in
jp
inc
adc
push
in
nop
adc
lea
leave
push
pusha
loope
xchg
xchg
popf
jge
push
add
push
sub
adc
xor
cld
dec
xor
mov
shlb
xor
xchg
cmp
mov
sbb
sbb
push
adc
mov
dec
push
cmp
pusha
push
push
sub
adc
push
jno
inc
xchg
jmp
movsl
push
adc
icebp
pop
or
jle
fisttpll
jne
mov
and
jg
cli
sarl
out
mov
cmpps
ja
mov
xor
xchg
fcmovbe
adc
and
xorb
pop
adc
add
fsts
in
xor
and
xorb
movl
int3
cmp
adc
adc
xor
xlat
sub
sub
es
adc
test
daa
sub
jne
jg
xor
push
clc
mov
xchg
xlat
aas
add
cwtl
fcoms
or
sub
mov
andb
push
into
xchg
ss
mov
sbb
and
or
xor
xchg
ja
or
and
mov
hlt
add
out
shr
sub
or
lds
push
adc
and
mov
call
cmp
pop
adc
xchg
pop
sub
mov
add
mov
inc
clc
sbbl
dec
adc
dec
std
es
push
daa
adc
add
jl
adc
pop
push
sbb
mov
ds
adc
pop
mov
lea
mov
mov
jae
sbb
pop
sbb
or
shl
fsubp
dec
mov
add
imulb
xorb
pop
jmp
sbb
testb
or
mov
les
adc
stc
or
lods
and
jle
dec
add
or
daa
push
cld
add
adc
sar
mov
adc
jne
and
lea
lock
cmp
cmp
pusha
push
mov
add
dec
ljmp
fcoms
call
repnz
lahf
test
loop
cmp
and
or
scas
arpl
push
push
sbbb
add
lock
testl
jmp
xchg
rolb
mov
push
xchg
dec
mov
xchg
jo
daa
dec
or
clc
mov
cmp
jmp
push
data16
push
jecxz
pusha
daa
cmp
enter
xor
jns
clc
xchg
pop
push
test
dec
test
pop
mov
dec
out
bound
incl
push
inc
sbb
push
mov
and
mov
int
jl
enter
es
ds
mov
test
sub
iret
xchg
mov
dec
mov
shl
push
orl
fisubs
negb
dec
mov
repz
es
cmp
push
xchg
inc
lea
es
sbb
xchg
mov
cwtl
xchg
sbbb
es
cmpsb
mov
negl
jns
mov
mov
test
push
fsubr
sub
test
mov
jmp
xor
in
push
cmp
sbb
jle
sub
and
and
or
or
add
dec
cmpsb
or
sub
or
cmp
add
pop
xor
dec
and
loop
sbb
xor
ret
push
data16
cld
cmp
cmp
out
mov
out
adc
scas
repz
push
dec
leave
sub
push
ljmp
cli
mov
dec
mov
xchg
adc
or
push
xchg
push
pop
inc
inc
add
fmuls
inc
and
push
push
call
nop
sub
je
mov
jl
jbe
inc
sarb
inc
mov
into
jecxz
cmp
sarb
sub
inc
xlat
out
cmp
dec
or
hlt
lret
xrelease
pop
stc
sub
inc
sbb
mov
adc
push
and
and
xchg
rcrb
stos
push
aas
and
stos
in
scas
xchg
scas
shll
jne
ret
and
add
adc
mov
adc
jl
rcll
mov
icebp
xlat
sbb
rorl
test
or
shll
cmp
das
test
int
das
jmp
inc
xchg
cld
xor
add
test
fwait
out
push
or
dec
or
add
mov
push
and
add
adc
ja
rcll
sbb
call
in
roll
cli
adc
insb
sbb
ja
pop
pop
or
cld
add
mov
lock
push
scas
test
or
aas
data16
shrb
sbb
imul
jmp
ljmp
and
dec
dec
jmp
adc
push
aas
xchg
push
sub
lock
std
dec
mov
sbb
orb
lods
and
xchg
jbe
adc
push
adc
sbb
mov
cmc
or
dec
mov
or
cld
shr
rcr
fdivs
push
add
scas
or
add
cld
ja
push
insb
xorb
gs
lods
in
xchg
mov
pop
std
nop
cmp
test
cmp
adc
push
sbb
fildll
sub
inc
imul
loope
mov
scas
popf
add
repnz
push
and
cld
sub
adc
leave
lcall
add
mov
int
inc
push
add
xchg
int3
sbb
mov
jae
cmp
test
or
fldcw
xor
cmpsb
sub
mov
lods
sbb
insb
lock
dec
ret
add
test
andl
adc
jl
cmp
repnz
pop
push
and
pop
sub
mov
sub
mov
add
and
mov
testl
xor
jb
dec
mov
pop
lcall
push
inc
dec
jnp
cmp
dec
xchg
jmp
cld
cmpsb
xchg
pop
sbb
repnz
push
mov
jge
pop
mov
dec
xor
cmp
sub
push
dec
and
push
add
xor
jnp
and
lret
sbb
push
hlt
mov
roll
mov
imul
sub
push
jbe
popf
aad
jp
add
jo
cmp
loop
sub
sti
and
or
mov
and
cmp
inc
enter
stc
xchg
push
sbb
clc
pushf
xor
adc
in
adc
fstl
add
imul
outsb
mov
xor
sub
lods
cmp
jno
add
xchg
in
adcb
add
ja
mov
add
jle
sahf
pusha
adc
push
adc
lods
lods
cmp
loopne
pusha
adc
jl
inc
sbb
inc
pushl
lret
cmp
je
mov
sub
rcr
add
lea
cld
mov
aas
and
and
mov
leave
adc
repz
push
dec
jae
mov
xor
je
cmp
sub
xchg
scas
hlt
inc
fs
imul
mov
xor
into
xor
sbb
sahf
aad
mov
fdivs
je
xchg
fisubl
scas
in
cmp
sbb
mov
loope
mov
jecxz
sub
pop
in
xor
cmp
imul
xor
dec
xor
ljmp
mov
scas
or
ljmp
jmp
push
cltd
or
or
push
daa
jmp
mov
dec
movsl
xor
js
outsb
in
cmp
push
xor
jg
fbstp
push
jmp
mov
jo
ret
xchg
fdivrs
ret
lock
xor
pop
xor
jb
push
jl
data16
dec
orb
mov
xchg
pop
ljmp
lods
popf
aam
int
sub
cmp
into
movsl
aas
push
jge
fldcw
insb
dec
arpl
adc
inc
adc
push
xor
stos
cmpsb
roll
or
xchg
ja
push
push
scas
mov
call
cmp
pop
mov
cltd
adc
pushl
xor
lock
sbb
and
mov
jns
sbb
xchg
cmpsb
addl
sub
cwtl
push
xchg
rclb
scas
adc
dec
test
inc
mov
stos
icebp
test
shlb
shl
clc
dec
dec
ret
sti
pushf
xor
pop
dec
jno
push
call
lea
flds
in
int
sub
mov
cwtl
ljmp
movzwl
pop
xor
inc
xor
lahf
loopne
adc
mov
mov
mov
jno
mov
adc
jge
and
sub
xor
scas
push
xchg
or
jg
ficompl
lds
lret
xchg
imul
repnz
pop
fdivl
jmp
ljmp
call
mov
jnp
sbb
fsubl
frstor
inc
pop
mov
sbb
mov
adc
add
or
stos
sbb
xchg
xchg
test
xchg
scas
shlb
jmp
add
scas
fbstp
sbb
movsl
lock
dec
or
mov
test
je
sti
fdivs
add
aas
mov
sbb
pop
push
dec
add
pushf
shlb
std
jmp
adc
std
sub
ret
add
insl
out
push
scas
iret
xor
in
dec
cmp
loop
cmp
xchg
outsb
in
dec
loop
adc
dec
or
rcrb
cmp
mov
les
pop
enter
mov
roll
push
cld
jmp
pop
stos
xchg
jns
inc
dec
cli
or
jg
das
stc
xor
jb
and
or
inc
sbb
stc
mov
cmp
or
mov
ss
and
fmuls
test
xor
add
push
popa
jge
jg
fstl
sub
adc
in
adc
hlt
lea
and
ror
xchg
dec
dec
rcrl
push
push
shrl
inc
sub
adc
cmp
xchg
cmp
xchg
leavew
test
sbb
ja
xor
cli
lret
fstps
lock
xchg
and
lahf
shlb
ss
adc
and
dec
mov
ja
movsl
inc
push
loope
xor
mov
dec
xchg
or
cmp
cwtl
and
lret
fcomp
daa
mov
push
ljmp
jb
xor
xor
ss
dec
push
mov
pop
repz
out
aas
xor
adc
loope
cli
in
test
fs
addl
xchg
sbb
test
jo
xor
push
cmpsl
aaa
pop
movsb
and
or
icebp
inc
lret
mov
or
icebp
cmp
or
mov
mov
aad
push
notl
cmp
subb
test
or
xor
ljmp
xchg
lret
movl
sub
mov
pop
jns
dec
mov
lods
push
add
imul
dec
jne
xchg
es
pop
mov
test
test
rcrl
push
adc
pop
cld
push
lcall
loop
rorl
popa
inc
and
fldt
adc
xor
lea
jle
push
push
fistl
mov
cmc
enter
push
psubusw
fisttpll
push
xor
sub
xlat
xchg
xchg
dec
sti
gs
lock
inc
jmp
jne
hlt
and
dec
push
or
stos
xor
mov
jle
mov
mov
inc
xor
aad
adc
cmp
add
or
adc
inc
add
lea
call
popf
mov
push
stc
ja
sahf
dec
incl
and
pop
xor
jb
mov
lret
daa
std
rcl
xor
adc
int3
xchg
cld
jg
jecxz
lret
cmp
inc
add
or
mov
outsb
push
cmp
jmp
shl
mov
mov
nop
pop
mov
cwtl
dec
test
subb
mov
add
dec
push
scas
outsl
xchg
fnstcw
lret
pslld
loop
xor
mov
ds
imul
test
je
test
fdivrl
jp
pusha
insb
push
add
pushf
dec
push
push
loopne
push
je
scas
adc
adc
or
je
pop
scas
gs
out
dec
sub
clc
je
test
int3
shll
mov
jp
jmp
inc
ror
mov
dec
push
mov
adc
adc
adc
sub
mov
or
inc
jo
and
or
xor
mov
and
std
sbb
sti
or
into
sub
mov
push
push
add
jbe
lods
mov
sbb
mov
fmul
mov
cmpsb
loop
and
pop
mov
mov
adc
adcl
cwtl
sbb
inc
mov
push
mov
jne
in
aas
sbb
or
inc
dec
lods
mov
xor
mov
mov
and
daa
or
dec
insb
mov
pushf
hlt
mov
mov
test
jecxz
mov
test
or
mov
mov
mov
adc
lock
andl
hlt
cmp
dec
mov
xor
adc
mov
out
imul
add
cwtl
sarl
cs
jo
and
push
bnd
lods
pushf
xor
pop
test
pop
orb
pop
js
cmpsb
pushf
jne
xor
dec
xchg
inc
mov
sub
sbb
mov
pop
arpl
pop
inc
mov
popf
dec
mov
inc
sub
sbb
call
int3
mov
mov
sub
xor
stos
aaa
dec
test
repz
je
testb
lret
push
nop
adc
lahf
enter
lret
xchg
cmpsl
imul
stc
leave
lods
into
test
andw
inc
xlat
sbb
nop
mov
cmc
inc
test
in
inc
popf
in
lahf
xchg
adc
cmc
scas
inc
je
imul
mov
mov
or
clc
test
scas
cld
and
inc
out
loopne
imul
inc
stos
loopne
xchg
push
sbb
movsl
jmp
shll
shll
popf
jnp
lret
add
adc
aad
mov
pop
cmc
lcall
mov
out
or
outsb
jb
test
mov
ja
jnp
inc
dec
enter
dec
insl
or
movsb
xchg
mov
scas
mov
jns
mov
dec
lea
cltd
bound
pusha
sbb
daa
inc
mov
scas
fildll
cmpsb
js
clc
jecxz
sub
xchg
bound
je
add
jns
loope
push
mov
in
pushf
add
in
clc
jmp
ret
test
mov
push
mov
test
fwait
stos
in
xor
xor
imul
imul
xchg
movsb
inc
adc
and
test
cmp
sub
inc
jecxz
pop
dec
cmp
mov
mov
ret
data16
call
lahf
stos
sub
dec
xor
xor
ja
les
ret
or
pop
adc
out
push
sbb
loopne
dec
xchg
pop
adc
xor
push
and
sbb
bound
es
mov
stos
or
sub
dec
loope
shrl
imul
jns
cld
pop
push
inc
scas
jne
movsl
std
cltd
jbe
mov
pop
pop
push
adc
subl
and
or
push
popw
shr
pop
add
and
adc
and
test
enter
shr
inc
scas
cli
lock
inc
cld
and
jmp
xchg
adc
inc
jmp
shr
add
and
fisubl
repnz
mov
cmp
xchg
mov
ret
rolb
sub
dec
xchg
add
iret
std
sbb
inc
inc
inc
xor
inc
es
lcall
das
call
insl
dec
cmp
mov
loop
jg
addr16
movsl
lods
inc
cltd
cld
mov
imulb
cltd
mov
pop
loop
mov
push
inc
nop
ljmp
mov
add
mov
ljmp
xor
dec
lock
pop
inc
nop
loopne
pop
and
mov
out
into
test
dec
lcall
mov
adc
in
out
mov
lret
mov
rcll
mov
dec
pop
in
adcl
hlt
xchg
orb
sub
cli
lea
data16
sarb
je
adc
pushf
sbb
mov
or
hlt
sub
adc
xor
pop
push
imul
dec
shll
xor
lahf
push
out
clc
jo
sahf
js
or
mov
bnd
pop
jne
popa
add
leave
jl
lahf
pushf
cmp
popa
lods
dec
stos
mov
adc
add
testb
jl
idivl
mov
cli
adc
in
aam
les
inc
adc
ja
mov
movsb
pop
and
adc
popf
clc
repz
mov
mov
je
cmc
jp
xor
sub
adc
push
les
inc
add
aas
enter
push
daa
jo
pushw
aas
dec
rcpps
or
pop
or
adc
stc
add
inc
and
push
sbb
push
push
push
pop
in
push
mov
or
mov
movsb
pop
test
cmp
ljmp
and
daa
adc
and
add
cli
test
xlat
xchg
add
lock
or
pop
imul
clc
push
dec
xchg
pop
lock
inc
fs
push
cld
dec
adc
sbb
adc
mov
xchg
sub
rorb
pop
push
mov
sbb
and
loopne
gs
xor
jnp
add
dec
and
fdivrs
cltd
rcl
mov
push
in
rcrb
xchg
mov
sbb
cli
adc
out
pop
js
adc
jae
cmp
and
cmpsb
and
in
pop
dec
enter
test
inc
clc
pop
sbb
fdivrs
xchg
pusha
xchg
lods
subb
fnstcw
add
and
sub
mov
stos
jne
not
divb
pop
stos
icebp
jne
jge
mov
push
popf
sub
mov
lahf
enter
leave
fwait
fucomip
and
push
lahf
cld
inc
inc
pop
and
sub
lret
mov
push
add
mov
add
mov
xchg
fcoml
aam
or
push
cmp
sahf
sbb
and
jecxz
or
iret
cld
inc
sub
cmp
andl
imul
adc
aas
daa
imul
xor
imulb
mov
pop
cmpb
dec
xor
clc
push
cld
stos
pause
pop
jecxz
enter
mov
cmp
in
mov
push
mov
dec
pusha
fidivl
lds
sbb
xor
xchg
je
lahf
hlt
push
outsl
imul
je
dec
xor
push
xchg
push
jae
ret
orl
int3
cmp
call
fnstcw
jg
js
pop
or
xchg
mov
aad
mov
lock
pop
ljmp
adc
push
je
pop
test
mov
fdivs
sbb
test
or
xor
push
sarb
shl
mov
mov
fs
push
hlt
enter
sbbl
xchg
add
xchg
mov
push
cmp
and
fs
mov
inc
ret
xlat
in
in
mov
cmp
push
or
roll
fwait
sub
adc
xor
or
ljmp
dec
xchg
std
add
or
iret
xchg
imul
xchg
les
mov
cmc
jle
xor
call
jmp
addr16
cli
sub
mov
push
mov
push
sub
leave
push
push
pop
jge
shl
out
adc
cmpsb
divb
jp
and
and
mov
decb
test
mov
lcall
adc
ja
mov
and
lock
aad
sub
xchg
xchg
and
push
and
sub
movb
sub
in
data16
pop
jle
dec
ror
cmp
jle
das
test
mov
and
and
test
rcrb
xchg
outsb
adc
xchg
and
test
mov
rorl
add
xchg
decb
adc
or
add
sub
test
inc
xchg
cmp
xchg
andl
push
or
imul
mov
int
add
jmp
add
fnsave
notrack
stos
and
inc
cmp
and
test
dec
nop
ljmp
fsubrs
mov
cmp
jl
imul
lds
xor
jae
inc
clc
enter
pop
jp
imul
cmp
mov
push
mov
jle
rorl
data16
push
add
cli
pop
icebp
cmp
into
push
sbb
aas
and
inc
push
out
jbe
push
mov
fs
cwtl
cmp
adc
xor
lock
cmp
sti
mov
orw
lods
test
dec
push
cmc
shr
mov
and
cmp
enter
xor
loopne
ljmp
enter
mov
cmp
adc
inc
and
and
push
stos
loop
and
push
call
or
or
mov
in
pop
mov
loopne
pop
push
call
add
int
ljmp
jle
cmp
fmuls
jb
repz
ret
out
loop
xchg
scas
enter
xor
push
push
xchg
out
add
mov
in
jae
add
pop
aas
pop
xlat
mov
or
pusha
lods
hlt
xchg
push
xor
dec
cltd
or
push
push
in
lahf
aas
loop
push
mov
cmpsb
cmpsl
int
jae
xor
inc
mov
shr
movsb
cli
cmp
dec
mov
inc
int3
inc
jne
mov
enter
mov
dec
or
cltd
fs
gs
out
bound
test
add
add
pop
addr16
or
xor
adc
or
test
or
xor
adc
or
mov
inc
xchg
cmp
cmp
addb
test
test
nop
add
xchg
mov
enter
sbb
inc
imul
xchg
push
stos
cmp
lods
jg
out
dec
mov
jbe
cmc
outsl
cmp
and
adcb
sbb
or
push
pop
inc
xor
inc
cmp
cld
pop
lods
stc
cmp
push
es
imul
sub
mov
sub
dec
cld
and
and
sub
out
fwait
aas
in
ljmp
das
xchg
pop
std
rorl
shr
pushf
mov
std
push
and
adc
shlb
inc
fidivrs
xor
mov
adc
mov
jmp
lds
imul
adc
sar
and
adc
dec
mov
shlb
jnp
mov
and
rorl
inc
scas
sbb
push
mov
mov
movb
out
or
je
in
inc
adc
or
xor
push
xchg
data16
leave
cmp
mov
xor
sub
xor
sub
iret
jns
sub
xchg
daa
out
fisubl
fs
push
andl
movsb
cld
xor
hlt
xor
jl
dec
test
fiadds
and
iret
imul
icebp
stos
cltd
es
test
or
cmp
or
or
call
sub
add
stc
adcb
mov
lea
jo
lea
and
adcb
xchg
push
fs
inc
cmpl
mov
mov
xor
loop
xchg
adc
daa
test
daa
jge
stos
pop
cli
mov
and
cmc
fistpll
pop
movl
incb
sub
fwait
jno
lea
pop
aas
push
jns
jns
push
cs
jnp
push
jecxz
les
inc
scas
push
sub
sbb
push
mov
test
sbb
inc
and
cld
dec
pop
cltd
shlb
stos
lcall
lret
pop
lods
outsl
mov
jbe
sbb
sub
clc
pop
xchg
and
mov
cmp
das
out
or
adc
dec
cmpsb
or
adc
insb
pop
jo
cmp
fs
lods
jmp
test
or
push
dec
ret
or
or
call
cmpl
sbb
mov
mov
sbb
jno
test
in
xchg
push
add
loopne
shll
push
mov
movsl
fldl
jg
mov
xchg
xchg
and
ret
fs
lods
dec
and
into
xchg
dec
mov
mov
push
in
insl
mov
test
push
ficoml
mov
jmp
imulb
xor
mov
jne
fisubrs
or
lea
or
dec
or
aam
scas
lahf
adc
adcb
cwtl
lahf
in
shll
jl
data16
add
lock
cli
lea
sbb
js
or
and
loope
popa
leave
aad
xlat
jb
sbb
test
pusha
or
mov
xor
ret
xchg
movsb
std
ret
mov
lret
push
dec
mov
test
cmp
or
xchg
inc
pop
pop
fsubr
bound
xchg
or
push
in
jbe
insb
or
or
xchg
paddq
int3
adc
push
push
mov
dec
or
mul
adc
mov
repz
sbb
mov
mov
in
loopne
adc
jge
and
jmp
or
pop
inc
or
lret
or
loopne
mov
in
adc
in
add
add
mov
cwtl
xor
fisubrl
insb
push
cmpl
hlt
lea
add
fcomip
inc
xor
stos
cmp
fsubs
in
ljmp
dec
mov
addl
clc
sub
daa
push
push
inc
pop
sbb
push
je
lea
or
mov
loopne
mulb
test
dec
pop
std
lods
or
aam
rorl
or
stc
mov
adc
in
sbb
mov
ja
out
push
sbb
xor
cld
jge
gs
lods
es
sti
mov
and
into
xchg
dec
adc
cmc
in
daa
adc
inc
xchg
mov
adc
shlb
sub
sbb
pop
sbb
in
shr
outsl
add
xchg
call
xchg
ficoms
pusha
dec
mov
pop
inc
push
pushl
xor
jne
nop
jo
pcmpeqw
sarl
add
lret
dec
ss
xor
mov
scas
and
movsb
scas
loop
int
fs
mov
cwtl
push
fstpt
stc
bound
push
xor
jnp
and
cs
shr
mov
ljmp
mov
std
jno
and
pop
push
arpl
hlt
fcoml
sti
push
push
jnp
and
or
fldl
mov
out
int
cmp
dec
or
cmp
or
sbb
fadds
or
xchg
in
pop
imul
or
cmp
lods
mov
jge
sahf
jge
push
jns
sbb
lods
mov
dec
sbb
cmp
daa
call
jno
sub
xor
xlat
das
cmp
hlt
jg
into
ss
test
cs
popf
jb
loopne
push
and
or
sub
cwtl
or
adc
add
mov
es
outsb
xchg
es
pop
xor
scas
or
imull
sbb
in
adc
xor
aas
es
outsb
adc
dec
dec
add
je
notl
xchg
faddl
test
jne
test
mov
sbb
sbb
out
mov
xor
inc
mov
je
int3
aad
inc
pop
stos
loopne
aas
adc
xchg
cmc
cltd
sbbb
cmp
mov
xor
push
adc
stc
inc
inc
insb
xchg
cld
xor
and
inc
mov
pop
cmp
xor
adc
mov
pop
or
jne
ret
mov
add
cmp
jl
out
mov
jmp
and
repnz
pop
adc
fbstp
push
test
sbb
clc
cmp
ja
dec
push
stos
cltd
rcrb
inc
movsl
sub
add
cmp
aad
negb
inc
sub
or
lahf
lea
sub
adc
dec
movsb
ficoml
mov
xchg
jne
or
pop
mov
xor
iret
call
leave
xor
aam
add
jne
cld
mov
sub
sbb
sbb
rorl
mov
inc
add
jo
pop
pushf
xor
shrl
xchg
movsl
loopne
jl
test
inc
int
push
push
pop
xchg
aaa
cmp
je
push
enter
call
fucomi
pop
inc
call
addl
mov
je
add
addr16
adc
push
or
push
pop
pop
xor
jmp
movsl
ret
out
adc
pop
cmc
add
or
mov
mov
pop
out
inc
pusha
push
mov
testb
scas
xor
jmp
and
mov
and
cmc
test
std
inc
add
mov
leave
testb
add
sti
adc
inc
stos
es
sbb
xchg
cwtl
lcall
mov
pop
and
push
stos
cld
push
sarl
call
movsb
jecxz
cwtl
mov
jle,pn
jne
ret
orl
mov
scas
ret
fcomps
pop
adc
adc
jle
jb
ret
movaps
call
jmp
scas
repz
and
lret
repz
jmp
push
out
dec
lret
or
out
imul
in
sti
loopne
jmp
push
sarb
mov
test
push
in
or
pop
je
xchg
test
mov
mov
adc
sbbl
cmc
subb
dec
pop
xchg
push
or
pop
lret
sub
pop
lea
pop
push
xchg
xchg
test
int
xchg
pop
out
and
movsb
imul
add
pop
sbb
icebp
mov
add
hlt
dec
jns
sub
mov
adc
int3
add
adc
push
push
in
and
clc
push
push
mov
mov
fldcw
jne
pop
call
dec
test
jnp
and
cs
stc
xchg
cld
adc
outsb
std
xchg
test
mov
ss
cwtl
and
xor
daa
add
mov
insb
sub
cmp
xor
mov
sbb
xchg
inc
stos
ret
cmpsl
mov
ret
dec
pop
push
push
push
lret
adc
mov
pfmul
cmp
pop
cmp
mov
push
jnp
aam
mov
out
xor
popf
xlat
xor
push
mov
pop
push
imul
cmp
and
or
aad
fildll
inc
dec
sti
sbb
xchg
inc
daa
adcb
lcall
add
call
stc
test
sub
xor
pop
push
mov
sub
fimuls
sbb
jp
popf
inc
mov
or
aad
stos
cwtl
push
test
lret
jecxz
cld
call
jl
sti
cmp
pop
cmp
iret
test
mov
shlb
movsl
lret
xor
push
or
sarb
pop
in
out
mov
pop
mov
pop
lret
mov
stos
negb
sbb
je
dec
fcompl
aaa
negb
negb
test
mov
pop
fxch
dec
sub
push
push
cmp
and
adc
into
in
bound
fcomp
ja
cmp
mov
pop
mov
cmp
jl
xchg
jno
cmpsl
flds
xor
mov
pop
sbb
adc
jmp
fadds
and
cmp
fcoms
inc
into
pop
or
jmp
aam
ds
and
push
sbb
and
loop
adc
cmpsb
stos
xchg
mov
aad
fwait
jp
adc
movl
ret
push
pop
loopne
pop
dec
cmp
ror
lret
sbbb
inc
cli
nop
inc
and
push
add
pop
sub
cld
arpl
mulb
testb
add
fst
sub
mov
pop
sarl
sub
lret
or
push
cwtl
fnstenv
sahf
push
xor
xor
nop
sub
testb
adc
pop
sar
cmp
push
and
mov
inc
andb
xor
test
test
cmc
ljmp
hlt
mov
loopne
dec
call
fcoml
or
pop
dec
aad
in
dec
push
test
cmpsl
jg
orb
sub
enter
inc
mov
fisttps
js
lock
je
mov
stos
mov
in
fldenv
out
dec
imulb
int3
or
adc
je
lock
dec
dec
shll
cmp
scas
mov
add
psllq
div
leave
push
jecxz
add
roll
ret
out
xor
icebp
push
or
pop
inc
ja
loopne
dec
sbb
movl
scas
cmp
sarl
jb
xor
xchg
add
popf
push
hlt
popf
xlat
xchg
add
pushl
mov
in
ss
pop
adc
rol
mov
dec
and
test
add
fildll
ljmp
jae
push
enter
inc
push
sbb
xchg
ss
gs
aaa
inc
aam
gs
sahf
and
push
push
cmp
jno
out
enter
xchg
sbb
and
push
or
flds
hlt
sbb
inc
inc
and
loop
pop
push
adc
imul
adc
mov
lcall
mov
icebp
es
add
cwtl
aam
jb
jmp
and
or
je
lret
es
enter
std
push
adc
adc
cltd
sbb
test
sbb
jo
fdivl
sarb
test
and
aam
mov
loop
lods
ss
jp
mov
or
clc
push
lds
loope,pn
mov
push
in
xchg
pop
push
dec
or
or
out
and
call
adc
into
sub
mov
inc
jne
inc
movsl
das
cld
mov
mov
and
adc
dec
fs
ret
pop
xor
jle
mov
pop
xor
es
shll
pop
cmp
xchg
sbb
adc
imul
in
sbb
xchg
and
out
out
inc
sbb
push
loopne
xchg
mov
fcmovne
sbb
lods
xchg
mov
adc
jge
fcoml
dec
hlt
mov
or
divl
xchg
mov
test
or
pop
xchg
inc
mov
pop
sub
dec
xchg
hlt
adc
insl
dec
int
fbstp
lahf
outsl
sbb
repnz
jns
xchg
push
cmc
mov
addb
jmp
xor
sar
cld
lret
fs
ret
jns
movsl
jg
push
jecxz
inc
dec
sbb
adc
push
mov
cld
rorb
xor
into
jmp
lods
inc
rorb
xchg
or
add
push
movsb
mov
and
sbb
mov
and
stc
daa
xor
std
je
fistpll
jle
icebp
adc
sti
cwtl
adc
xor
cltd
jle
push
adc
mov
mov
dec
cltd
pop
jno
add
shl
dec
jmp
ljmp
aaa
movsb
fdivrs
shrb
mov
jmp
adc
call
std
popa
daa
pop
inc
call
jecxz
adc
mov
testl
insl
test
iret
dec
adc
fs
push
push
or
arpl
mov
lret
cmpsl
ja
orl
lods
stos
sbb
adc
inc
mov
pop
scas
inc
int
cld
pushl
sub
loope
add
push
and
cmp
push
jo
and
cmp
adc
into
adc
ret
sti
or
mov
sub
fcompl
or
call
nop
sbb
or
addl
add
testb
je
mov
cli
xor
fsubs
xchg
mulb
jmp
fiadds
and
ds
cmp
addr16
out
loopne
std
lock
loop
mov
and
inc
testb
pop
ljmp
lahf
in
insb
dec
push
dec
loopne
es
ficoms
and
les
and
mov
stos
pop
call
pop
push
std
cs
fnstenv
test
lret
mov
jg
push
jp
cmp
cmp
pop
dec
mov
es
jo
inc
sub
xchg
mov
cmp
or
shl
inc
sarb
mov
adc
mov
xor
je
test
and
je
sub
dec
lds
adc
popf
mov
jne
jmp
ret
orl
or
xor
push
push
scas
mov
jmp
mov
mov
jmp
repnz
inc
loope
fwait
imul
mov
pop
scas
pop
cwtl
inc
test
adc
mov
test
fbld
jo
mov
dec
ljmp
mov
clc
dec
inc
sub
pop
movsb
movsb
xor
test
ds
push
rcl
jne
or
movsb
aam
hlt
mov
push
mov
and
mov
adc
lea
stos
loopne
cmp
mov
sti
dec
inc
xchg
or
gs
or
imul
pop
mov
jne
call
pop
pop
and
adc
stos
sub
xchg
movsl
pop
ja
adc
inc
cmp
notb
je
adc
jne
into
aas
and
bound
je
mov
in
jecxz
lahf
cli
jo
aaa
xor
sbb
sub
adc
mov
imul
push
pushf
js
out
and
sub
adc
out
test
jo
cmp
push
and
pop
sub
out
int3
les
stos
xchg
stos
aad
das
lcall
or
jp
push
call
pop
xor
cwtl
test
loop
push
dec
cmp
pop
hlt
add
xorb
jns
adc
add
push
das
or
aad
shll
push
lret
mov
enter
xor
mov
fstl
and
lods
lcall
lea
or
xchg
cmp
arpl
repnz
fists
imulb
xor
inc
add
dec
mov
pop
sub
mov
lods
lea
rcll
cwtl
add
inc
cwtl
xor
cwtd
sbb
repz
int3
add
or
mov
repz
or
pop
mov
xor
outsb
movsb
or
or
cld
add
cmp
xchg
dec
lret
daa
push
ficoms
in
int3
cwtl
int3
dec
ret
cs
ds
lret
inc
sub
xor
aam
clc
jae
xorl
dec
xor
xor
idivl
call
ds
push
insb
loopne
aaa
mov
add
add
add
pop
cld
xor
out
imul
test
icebp
mov
jo
ljmp
popa
xor
jbe
inc
pop
lds
pop
into
aam
cmpsl
test
pop
lea
adc
rclb
xor
pop
mov
and
xchg
pop
xor
popf
enter
repnz
nop
rolb
jbe
loope
roll
inc
sbb
movsb
sti
add
cmp
or
in
pop
call
jbe
and
xor
cld
jae
subl
pop
shr
dec
mov
xchg
hlt
jmp
pop
cmp
jbe
mov
lret
sbb
sbb
ja
stos
fbld
test
or
jmp
faddl
dec
pop
setle
sbb
xchg
stos
daa
inc
cmp
mov
lcall
pop
jge
pop
cs
dec
xchg
mov
jg
adc
dec
call
test
aas
push
lahf
test
inc
das
pop
ret
dec
mov
fnstcw
nop
mov
notb
aaa
jne
push
std
sbb
xor
adc
aaa
clc
lahf
push
fsubrs
filds
push
mov
icebp
out
xor
xor
jae
push
cmp
mov
adc
cmc
xchg
lds
sub
xchg
pop
jp
fistpl
pop
repnz
clc
or
inc
mov
and
imul
js
popf
jecxz
push
push
and
jmp
mov
add
xor
dec
cwtl
and
mov
or
fistpll
or
outsb
js
dec
or
divb
sub
sbb
xor
xchg
push
sub
inc
sub
test
xchg
mov
jmp
cmpl
nop
or
dec
xor
iret
mov
test
jb
data16
popa
jne
mov
into
mov
ljmp
or
imul
sbb
inc
test
cmp
je
sub
or
addl
xchg
test
dec
int3
push
push
inc
test
push
or
push
lret
cmpsl
jae
out
cmp
decb
filds
shlb
cmp
add
mov
cld
sbb
mov
fcoms
gs
stos
mov
push
sti
enter
add
bound
adc
jecxz
int
popf
into
push
stc
clc
adc
out
mov
pop
in
enter
test
adc
sub
add
fdecstp
inc
gs
es
jp
rolb
out
sub
push
push
xchg
sbb
mov
stc
hlt
insl
xorl
pop
cmp
xchg
add
clc
jne
push
mov
and
jo
fisttpll
out
mov
es
xchg
rorl
leave
and
fisttps
or
sbb
cli
jle
lret
stos
dec
xor
fsubrl
jae
ja
jp
or
sub
cmp
push
mov
push
dec
sbb
js
mov
orl
xchg
int
dec
push
dec
pop
rol
leave
rcll
and
xor
into
xchg
jb
lea
subb
shl
push
or
mov
pop
scas
loopne
icebp
enter
or
pop
pusha
sti
testb
adc
xlat
xor
stos
mov
jl
push
fs
insb
inc
add
cmp
jmp
or
dec
add
dec
add
call
or
jb
shrl
repz
pop
ljmp
jmp
loope
sbb
xorl
aas
sbb
add
ret
lods
mov
sub
xlat
xchg
pop
push
ret
into
rorl
orb
nop
mov
mov
xchg
dec
sbb
inc
cltd
arpl
push
sub
adc
int3
ljmp
fstl
leave
filds
mov
and
and
stc
sub
movsl
push
cs
ret
into
and
movsb
or
and
aas
cwtl
cmc
and
cwtl
fsubl
cmpsb
orb
dec
xchg
in
cmp
ljmp
jae
adc
pop
fs
adc
lock
in
xor
imul
or
and
enter
push
movsl
loopne
call
fs
xor
dec
adc
loopne
dec
in
nop
test
pcmpgtd
cmp
and
push
sub
add
inc
xchg
aam
jae
pop
sti
push
mov
cld
mov
adc
sub
or
push
pop
in
lahf
cltd
jge
lods
imul
mov
daa
or
jns
pop
dec
adc
sub
adc
cmp
cltd
sarl
adc
aad
enter
jle
or
mov
push
clc
push
data16
rcrb
dec
lea
and
jle
push
and
jge
cld
aaa
popf
add
add
aad
imul
and
ss
jmp
shr
inc
shr
push
inc
jo
sbb
or
push
inc
lahf
xchg
dec
in
test
mov
gs
jl
jno
je
pop
dec
sahf
call
sub
xchg
popf
adc
ds
imul
push
icebp
jnp
movsl
cmp
mov
std
jns
adc
or
push
sarb
push
inc
lock
inc
fsubrs
in
in
rcr
sbb
cld
or
rclb
cld
push
xchg
call
and
ror
push
add
adc
jae
bound
jne
sbb
push
call
adc
jmp
pop
mov
or
ret
inc
jo
inc
in
std
lret
cmp
fcom
or
xchg
sbb
and
adc
in
scas
sub
cmp
aam
or
bound
cmp
adc
bound
call
cli
test
jle
and
pop
and
mov
sbb
test
pusha
xor
jle
inc
mov
xor
push
push
stos
mov
or
sbb
orb
pop
mov
xchg
rcrl
push
add
jmp
xchg
jmp
lea
testb
loopne
nop
inc
cwtl
mov
repz
daa
adcb
pop
cmp
testb
jp
or
or
mov
outsl
lcall
xchg
pusha
repz
and
sti
ja
or
and
sahf
push
sbb
adc
add
arpl
inc
and
inc
mov
daa
pop
pop
inc
mov
stos
mov
idivb
jle
add
cmc
pusha
sbb
and
popf
fsub
lahf
enter
mov
mov
push
aam
sbb
add
addl
je
lods
arpl
or
loope
dec
jnp
jns
mov
enter
jae
and
jo
clc
cmp
and
mov
stc
out
sbb
and
jmp
subl
lahf
sub
add
push
leave
jns
sbb
and
jge
in
ret
mov
repnz
add
outsl
adc
and
nop
or
inc
adc
inc
lret
and
inc
std
and
inc
sti
mov
push
nop
fwait
fs
lods
sbb
mov
sbb
sub
insl
xor
mov
jg
lods
or
out
pop
jo
add
jp
cmp
fadd
inc
pushl
jmp
out
mov
lcall
bound
rcll
push
xor
popa
loope
arpl
add
adc
cli
shll
mov
or
dec
cmp
pushf
dec
inc
inc
mov
dec
fwait
aad
out
jmp
call
dec
add
orl
sub
xchg
insb
or
xor
xchg
pop
xor
incb
jl
and
sub
je
mov
fs
push
adc
in
cld
jge
or
fimuls
bnd
aad
adc
push
xlat
add
pop
mov
cwtl
lcall
icebp
mov
jnp
mov
sbb
cmp
movsl
sbb
daa
push
mov
xchg
or
lahf
mov
adc
lds
pop
and
mov
pop
inc
mov
out
dec
daa
leave
jb
outsl
or
mov
test
fs
cmc
fnstcw
sahf
push
pop
xor
call
xor
push
mov
stc
int
js
test
or
and
mov
in
nop
inc
mov
scas
fs
push
lods
lret
jl
pop
add
jbe
push
sub
inc
cmp
popf
xchg
mov
ljmp
mov
lea
pushf
mov
inc
push
cs
sub
mov
mov
cmc
and
adc
adcl
xor
inc
mov
jbe
in
dec
push
clc
test
mov
daa
ja
jge
jle
popf
push
dec
lods
mov
pop
andl
scas
clc
pop
fwait
dec
mov
jle
addr16
stc
add
mov
rcl
pop
xor
loope
shr
cld
cld
repz
ljmp
daa
cmp
lods
jb
dec
stos
pushf
int3
repz
sbb
push
mov
mov
loop
les
xor
and
jnp
jp
jbe
arpl
rclb
repnz
mov
xor
in
aam
sub
cmp
mov
add
push
push
lahf
fdivrl
enter
int3
test
mov
enter
ds
sbb
sbb
sbb
sbbb
jno
lret
sub
cltd
cmp
or
adc
adc
pop
call
int
inc
hlt
rep
jle
mov
xchg
movsl
sub
in
dec
mov
jle
dec
call
mov
cld
jo
bound
add
addr16
mov
jle
stos
adc
mov
insb
cmovbe
pop
fmull
fnstenv
add
xchg
jle
xchg
and
aas
push
stos
mov
in
adc
dec
rclb
mov
adc
sbb
mov
push
fists
pop
loope
pop
shl
inc
and
pop
lods
clc
sub
imul
xlat
das
push
jbe
jo
jl
adc
add
adc
push
test
enter
fdivrl
xlat
sbb
arpl
sub
mov
push
stos
testb
add
inc
sub
in
mov
mov
or
je
jmp
sub
adc
mov
ret
je
les
ret
pop
dec
and
mov
imul
lret
push
push
mov
lock
dec
xchg
nop
sub
adc
stos
or
jle
or
popf
mov
dec
and
mov
mov
or
xchg
dec
in
popa
xor
push
mov
push
adc
subb
repnz
mov
sub
mov
jnp
or
adc
test
andl
enter
or
cld
or
pop
out
xchg
jl
push
push
inc
sbb
mov
add
cmp
jne
andb
jmp
jns
xor
test
or
and
sbb
jl
jmp
mov
xchg
pop
adc
cmp
jmp
repnz
jmp
sbb
mov
filds
jge
lcall
divl
jb
daa
hlt
lods
xor
cmp
mov
pop
xor
inc
rol
mov
out
cmp
adc
jg
dec
adc
mov
negl
pop
xchg
std
es
xchg
lds
add
je
scas
sub
pop
and
dec
sbb
mov
dec
aas
pop
xchg
push
mov
jb
inc
adc
fbstp
ss
cmpsb
mov
sbb
lret
cmp
pop
cld
xchg
jmp
xchg
sub
inc
incl
lcall
xchg
ljmp
arpl
jle
stos
push
mov
jnp
cs
int
dec
test
xchg
cmp
xchg
cmp
int3
jno
addl
aad
push
shlb
pop
adc
push
hlt
fldcw
cmp
xchg
cli
int
jl
sub
pop
and
jmp
jne
in
adc
lods
in
and
or
andl
div
xlat
push
jnp
mov
ja
loopne
xchg
fnstsw
fmuls
loop
hlt
movsl
dec
test
call
xor
cmp
cli
or
jo
inc
mov
pop
mov
inc
pop
cld
push
cmpsb
inc
sbb
pop
xor
or
fcom
mov
js
xor
rcrb
xchg
hlt
mov
jae
push
and
enter
jl
leave
jg
add
mov
cs
sub
or
rcr
popf
push
aam
daa
lock
sub
rolb
add
push
mov
hlt
xchg
into
mov
push
inc
scas
pop
clc
xor
adc
bound
jl
clc
cmp
sbb
idiv
aaa
dec
lret
or
mov
fs
fisubrs
das
fmul
pop
xor
or
ljmp
adc
lea
movups
mov
push
sub
mov
out
xchg
inc
std
lea
je
mov
bound
inc
ja
imul
cs
or
jb
jmp
jp
pop
xor
ja
pop
pop
rcrl
pop
sub
movsb
mov
cltd
call
adc
ljmp
movsb
adc
in
jbe
fisubl
dec
inc
stos
sub
arpl
popa
push
push
xlat
adc
push
pop
push
inc
and
fwait
push
pop
xor
ret
ds
js
fs
cmc
and
je
mov
int
inc
inc
fists
xor
and
inc
data16
cmpsb
xchg
and
dec
call
mov
jmp
inc
ret
jne
and
sub
fldl
popa
mov
lods
repz
in
in
xchg
ljmp
jno
test
cli
mov
push
frstor
aad
add
inc
das
xor
push
popf
jbe
scas
pop
int
pop
xchg
out
ret
mov
dec
std
xchg
xchg
inc
sbb
mov
pop
cwtl
mov
in
sbb
fldl
adc
push
push
push
cwtl
mov
test
pop
ficompl
inc
pushl
lods
xor
add
jb
cmp
inc
xchg
xor
test
adc
test
ljmp
cmp
ret
or
xchg
test
jbe
jo
test
jbe
sub
xchg
scas
imul
adc
mov
bound
test
mov
push
call
sbb
inc
push
mov
dec
dec
xchg
mov
mov
xchg
xchg
rcrb
mov
cmc
xor
and
xchg
hlt
enter
test
adcb
mov
mov
mov
sub
adc
add
add
or
jns
sub
mov
adc
leave
adc
lds
jmp
aas
sub
daa
les
mov
sbb
mov
sub
mov
jmp
lret
mov
inc
pop
stos
mov
sub
push
sub
inc
xchg
dec
popf
ret
cmp
pop
int
insb
sbb
dec
outsb
cwtl
subl
fs
insb
xchg
imul
push
and
test
sbb
push
mov
inc
mov
dec
sbb
push
and
cmpl
cwtl
push
cmp
pop
cs
inc
aam
cmp
push
daa
xchg
out
sarb
mov
sub
add
mov
rcl
int3
mov
xchg
test
mov
or
subb
stos
test
adcb
sub
push
mov
outsb
je
hlt
cmp
pop
repnz
pop
xchg
test
scas
fdivs
mov
mov
push
hlt
test
adc
pushl
jb
jg
mov
jne
add
dec
adc
js
imul
scas
cmp
sbb
add
fnsave
std
add
andb
je
jbe
lcall
cld
lock
fs
and
jmp
daa
push
xchg
call
test
and
adcl
mov
rol
pop
out
imul
or
dec
adc
in
push
lods
xor
out
sarl
xor
js
test
push
scas
and
bound
arpl
cld
jae
push
insb
jo
xorl
outsl
mov
adc
and
cmp
adc
inc
dec
decb
dec
jb
dec
daa
push
pop
xchg
fyl2xp1
push
inc
das
xor
mov
inc
mov
push
fnstcw
divl
xchg
leave
xor
mov
cmpsb
jo
or
push
jae
mov
in
movsb
jge
je
je
dec
adc
cmp
jl
outsl
xchg
lahf
xchg
imul
pop
inc
xchg
and
xchg
mov
lock
pop
inc
sub
sbb
dec
push
test
mov
jge
sub
insb
inc
cmp
push
lock
pop
mov
xchg
mov
scas
imul
jge
xchg
push
fidivrl
and
dec
fimuls
and
or
hlt
adc
mov
in
fcomps
call
in
jmp
and
sbb
ljmp
das
add
or
add
push
and
xlat
sbb
out
xchg
in
loopne
in
das
pop
mov
mov
inc
dec
test
jmp
movsl
scas
xor
cmpsb
mov
cwtl
push
pop
sub
or
leave
jge
jns
sub
aaa
in
jne
out
mov
pop
mov
lods
cmp
xchg
or
jbe
pop
lret
cmpsl
push
dec
in
jmp
and
cmp
fxch
and
xor
mov
push
mov
inc
cld
add
dec
sti
scas
pop
jecxz
cwtl
push
jne
ljmp
or
test
push
lea
xlat
jns
sub
sbb
adc
jmp
and
and
fisttpll
sti
fnstcw
sub
lahf
icebp
xor
movsb
lods
xor
jbe
jge
xor
pop
adcl
insl
imul
pop
arpl
jno
pop
pop
arpl
adc
or
xor
jne
add
lock
or
adc
inc
cltd
and
pop
xchg
fnsave
mov
stos
lds
in
adc
out
inc
js
lock
cltd
adc
mov
mov
je
call
cmp
loopne
push
jne
push
or
pop
mov
lea
outsb
xchg
pusha
divl
out
out
xor
mov
repnz
fimull
xor
pushf
mov
mov
je
sub
aad
mov
sbb
inc
pop
enter
inc
or
xchg
in
sub
pop
dec
push
insl
cmp
mov
in
xor
cmp
je
cwtl
sub
dec
mov
icebp
mov
cmp
and
shrl
adc
mov
sub
adc
clc
enter
mov
dec
and
push
mov
pop
adc
rcll
loopne
xchg
mov
adc
bound
sub
inc
and
enter
mov
add
lods
lods
sahf
push
add
push
adc
lds
mov
mov
dec
cmc
jbe
adc
je
adc
adc
cli
push
cmpsb
adc
iret
jg
mov
dec
cmp
movsl
mov
add
mov
std
cmp
test
call
das
push
adc
or
adc
out
push
xchg
xor
xchg
clc
lods
pushl
pusha
jmp
sub
sub
icebp
aaa
les
xor
adc
cmp
call
add
adc
sbb
and
into
sahf
xchg
lock
push
lahf
adc
dec
push
xor
fmuls
imul
cmp
push
pop
stc
rcll
xchg
sarl
loopne
jle
adc
cmc
mov
pop
gs
hlt
jmp
mov
push
cltd
aas
jge
sbb
cltd
je
shl
mov
mov
xchg
test
sbb
das
push
call
jne
mov
dec
stos
mov
pop
or
nop
jp
js
inc
and
sbbb
push
jp
lock
or
push
enter
and
mov
lahf
push
leave
into
pop
and
call
or
into
aam
sbb
adc
adc
jne
push
cmp
adc
xchg
sarl
mov
xchg
adc
in
push
xor
lret
xor
or
cmp
mov
leave
jge
xor
jg
je
mov
xor
xchg
or
pop
cmp
mov
push
shlb
dec
std
mov
jmp
push
sarl
out
pop
push
jle
sbb
das
fs
sub
popa
adc
xor
inc
loop
jl
push
push
jmp
and
fbld
js
jns
add
mov
sbb
pop
mov
mov
dec
mov
or
fisttpl
fstps
dec
or
adc
or
je
notb
data16
inc
pop
testb
fwait
mov
sbb
sub
mov
push
test
lods
mov
cmp
aad
hlt
dec
push
ljmp
sub
or
add
pop
pusha
shll
sub
inc
push
push
scas
mov
sbb
cmp
mov
push
jae
mov
mov
scas
xchg
fisubs
sub
lock
mov
in
push
sub
xchg
xchg
dec
pop
ja
mov
bound
pop
mov
jne
fldl
add
fldenv
mov
movzwl
cmp
stos
int3
bound
lock
jne
cltd
addr16
add
cmp
jnp
push
lahf
push
cs
shll
outsb
sahf
jmp
mov
or
adc
dec
ficoms
xchg
and
cwtl
adc
xchg
xchg
sbb
xchg
sub
je
push
mov
and
std
nop
inc
mov
mov
out
xor
aas
inc
icebp
adc
arpl
jl
enter
testl
mov
hlt
adc
aaa
outsl
dec
stos
mov
pop
cmc
ljmp
subb
test
loop
and
cmp
pop
and
daa
jge
cmp
dec
das
enter
cmp
je
rolb
pop
sub
jnp
pop
push
dec
mov
divb
sub
inc
pop
sub
out
in
daa
jo
jg
les
rcrb
pop
cmpsl
xor
sub
stos
stc
push
aam
and
adc
push
mov
loop
xchg
inc
mov
call
sbb
dec
cmc
loop
dec
inc
fwait
call
and
sub
and
sbb
pusha
stos
add
leave
cmpl
testb
out
hlt
js
mov
pop
loope
jo
test
push
mov
pop
cs
dec
daa
in
popf
push
cmp
pop
mov
pop
mov
cwtl
jno
adc
pushl
iret
incl
and
mov
and
leave
mov
inc
mov
cwtl
lea
aam
cmp
repz
fidivs
daa
ds
ljmp
por
stos
add
ret
cld
call
mov
cmp
pop
stc
push
adc
inc
mov
jge
pop
sub
push
jns
inc
pop
pop
and
adc
mov
cmpsb
out
lahf
shrb
push
enter
arpl
ja
fisttpll
call
inc
add
jo
mov
sbb
adc
in
mov
dec
cld
insl
sub
rorb
mov
and
fldenv
test
jae
push
inc
dec
cmp
xchg
outsl
adc
scas
cmc
push
imul
jno
and
and
lahf
sub
push
xlat
ret
or
cmpl
popa
lea
pop
test
je
fimuls
inc
jecxz
pop
push
cmc
push
cmp
push
xchg
adc
cltd
jno
outsb
push
inc
add
mov
shl
mov
cmpsl
jbe
lea
daa
pop
inc
sbb
je
fs
adcl
rolb
push
inc
sub
fnstcw
jg
mov
sub
sub
sub
jle
mov
or
test
popa
fdivr
or
out
or
std
or
std
or
std
or
std
or
std
or
std
sbb
int
das
push
push
xor
stos
and
imul
push
out
sub
pop
mov
sbb
push
mov
pop
and
mov
ret
cltd
push
adc
adc
mov
dec
or
mov
lret
ds
sub
data16
adc
jmp
into
push
orb
icebp
call
push
mov
mov
and
and
call
repnz
xor
xchg
lock
dec
xor
int
and
inc
or
test
dec
scas
sarb
add
sbb
add
ds
sub
enter
repz
or
xchg
testl
jo
mov
or
je
xor
adcl
mov
or
xchg
mov
dec
sbbl
pop
and
insb
lods
xchg
jge
addr16
push
add
lcall
dec
and
les
sbb
fsubl
movsl
jo
imul
jmp
pop
test
mov
and
sub
or
or
pop
call
test
mov
push
adc
push
fisubrs
es
push
sub
popf
insl
pop
mov
movsl
jno
imul
aam
cmpsl
sub
in
aad
mov
ret
xchg
fimuls
and
fstps
cld
mov
adc
xor
sub
test
movsb
inc
sbb
xor
hlt
xor
repz
out
mov
dec
cs
sbb
out
xchg
mov
clc
sahf
mov
lret
movsl
cmc
lcall
sub
inc
adc
add
sbb
ret
jbe
pop
adc
push
call
fdiv
imul
ret
fs
insb
pop
mov
cmpsl
dec
repnz
adc
mov
ss
mov
xor
xchg
lahf
aam
adc
push
lcall
dec
add
ficoms
fiaddl
cmc
or
mov
daa
cmpsb
dec
inc
ss
jle
xor
pop
push
inc
call
ret
aam
inc
cmpsb
xor
stc
es
add
push
mov
insb
and
mov
cltd
pop
push
sub
inc
scas
mov
pop
mov
inc
inc
push
fadds
xchg
inc
or
ja
fmul
les
dec
or
in
test
add
rolb
mov
pop
pop
mov
pushl
mov
xchg
in
out
enter
xchg
mov
jp
les
testb
repnz
dec
mov
movzwl
subb
mov
xchg
inc
pop
adc
inc
adc
fs
or
leave
or
push
scas
cli
xchg
idivl
rorl
clc
cmp
ja
dec
dec
xor
push
jl
mov
jne
fcompl
fmuls
in
mov
mov
ss
xor
cld
call
data16
add
pop
jmp
fistpll
lods
push
pop
outsl
xchg
or
push
xorb
push
fists
adc
inc
fs
jbe
inc
lods
lods
inc
xor
test
jae
and
mov
lock
or
cmpsb
push
mov
sbb
icebp
mov
testl
cli
icebp
test
loop
or
aaa
push
and
cmpsb
push
inc
inc
sbb
push
sbb
mov
daa
sbb
xchg
mov
shrb
or
sub
int3
sti
inc
orb
fisttps
and
and
cmp
mov
fs
test
icebp
sub
ret
sub
or
pop
lods
add
mov
fstl
xchg
inc
cld
je
add
sar
cmp
mov
jno
mov
jge
xor
push
rcr
pop
add
sub
push
fwait
dec
and
ret
dec
dec
jg
xor
push
mov
add
xor
and
je
or
xor
pop
cmp
sarb
xor
push
add
dec
insb
es
ret
mov
inc
push
call
call
test
jne
mov
sbb
add
dec
mov
push
push
notl
xor
push
adc
mov
shll
add
cmp
mov
call
fistl
push
cmp
add
int3
rcrb
icebp
hlt
dec
push
cmp
inc
sub
mov
inc
ret
adc
or
mov
inc
fs
adc
cmp
mov
jle
xor
push
dec
xchg
es
adc
push
xchg
xor
sbb
sub
mov
test
loope
cli
or
and
mov
jbe
arpl
or
sub
or
inc
aas
push
xor
and
pop
jmp
js
push
sub
lods
mov
inc
xor
xchg
xchg
push
push
rcrb
lods
mov
fmuls
jbe
inc
inc
adc
repnz
push
subl
push
sub
inc
cmp
inc
xor
pop
movsb
jmp
xchg
pop
or
push
dec
leave
push
inc
push
in
jbe
rol
cmpw
pusha
imul
adc
cmp
push
push
pop
js
mov
push
xchg
xor
jg
dec
and
fisttpll
je
xor
ljmp
mov
push
dec
or
push
hlt
shr
adc
out
loopne
cmp
jne
jmp
sbb
sub
mov
sbb
js
lea
js
lret
orl
enter
adc
dec
mov
or
test
imul
inc
jae
fistps
popf
shl
enter
lods
ljmp
lock
sbb
in
push
sub
stc
in
dec
shlb
and
cs
das
push
mov
call
fsts
mov
mov
pushf
andb
inc
sahf
mov
push
and
lcall
push
and
loopne
inc
or
jmp
fnstcw
dec
pop
mov
inc
ret
sti
jno
dec
sbb
aas
mov
ret
push
jecxz
pop
insl
cs
xchg
xchg
fninit
dec
add
loopne
add
sbb
incb
adc
hlt
test
xor
scas
adc
sub
nop
jbe
jle
shl
sub
leave
ljmp
add
inc
in
je
mov
iret
jle
sub
add
xchg
inc
xor
xor
and
and
jge
movsl
sbb
lret
adc
push
sub
sub
fs
mov
cmp
xchg
inc
push
adc
pop
dec
jns
shll
or
mov
es
mov
inc
mov
sub
xchg
mov
xchg
sbb
push
dec
sti
push
aam
movsb
add
lret
stc
jb
sbb
xchg
imul
cltd
dec
insl
divb
xor
add
dec
or
mov
mov
fstl
leave
and
stos
in
push
push
cmp
pop
dec
sbb
and
push
and
pop
pop
sub
out
int
test
fstl
in
dec
or
decl
mov
sub
adc
and
pop
je
movl
cmp
inc
mov
xor
and
test
daa
push
movsl
out
inc
lahf
jbe
push
push
fistpll
lock
inc
data16
push
int3
decl
adc
mov
pop
jae
cmp
jmp
orl
or
iret
enter
cli
mov
push
mov
mul
or
fs
lea
mov
inc
pop
jmp
mov
pop
data16
jbe
pop
inc
pop
adc
loope
stos
add
xchg
hlt
das
push
testb
or
in
into
push
mov
in
adcl
ljmp
sbb
shlb
pop
shl
leave
std
sbb
or
cmp
xchg
lods
data16
jl
adc
stos
fcmovne
sub
jl
gs
clc
mov
jbe
js
inc
nop
sub
push
push
fwait
sbb
ljmp
jmp
sahf
xor
add
sbb
xor
pop
test
xor
out
das
add
cmp
ss
in
stos
insl
fmulp
xor
cwtl
push
hlt
stos
inc
std
sub
in
addb
pop
lods
cwtl
sub
adcl
test
and
leave
sub
aam
push
inc
jb
add
packsswb
mov
repz
pop
or
pop
mov
push
das
scas
mov
mov
push
fisubrs
idivb
incl
xchg
and
inc
push
add
add
mov
test
push
stos
xor
push
sbb
insl
dec
mov
nop
test
lds
adc
rclb
cld
scas
fisttpll
je
cmp
mov
xchg
xchg
inc
or
inc
aas
or
cmp
adc
xor
fiaddl
adc
pop
sahf
clc
es
es
stos
icebp
loopne
adc
jmp
mov
push
add
imul
jo
fstps
add
cmp
push
addr16
aam
les
mov
test
aad
mov
inc
popa
test
jne
mov
adc
sbb
push
lret
movsl
outsb
enter
out
add
mov
lds
mov
sub
ret
xor
push
xor
pop
xchg
gs
add
cld
addr16
push
fisttpl
scas
int
cs
and
js
ljmp
mov
add
out
ljmp
xor
lock
jbe
sub
mov
pop
mov
ret
jle
stos
sub
ljmp
xor
fstpl
or
ret
rclb
into
adc
leave
into
imul
std
lds
push
testw
push
mov
dec
ljmp
out
ret
jbe
xchg
ret
stos
sub
stc
jns
mov
mov
mov
mov
movl
jne
test
inc
mov
mov
stc
ds
jno
decb
sub
pop
xchg
addb
testl
sub
scas
repz
cwtl
mov
push
sub
or
mov
sbb
mov
stos
testb
jbe
daa
inc
pop
cmc
jns
or
pop
adc
push
shrb
jbe
and
sahf
jl
xor
sub
rcrl
inc
lahf
pop
pushf
sub
sbb
movsl
mov
stc
jge
push
mov
bound
sub
in
adc
mov
and
in
sar
out
jmp
aad
dec
push
cs
xchg
adc
fdivrs
dec
rcrl
mov
movsb
adc
shr
loopne
inc
or
mov
inc
invd
and
mov
icebp
push
and
jmp
adc
das
popa
and
lcall
cltd
push
pop
loop
lcall
idivl
dec
jne
in
mov
jb
inc
call
push
dec
loopne
jne
mov
jl
push
pop
mov
or
sub
adc
mov
divb
cmp
mov
adc
mov
and
xor
jmp
mov
mov
dec
in
into
mov
mov
incl
or
inc
or
into
pop
mov
push
add
dec
lret
int3
adc
mov
dec
bound
dec
lods
inc
mov
xchg
sub
movsb
mov
xchg
stc
add
mov
pop
int
shrl
jl
fmuls
lahf
add
sub
and
nop
scas
sbb
adc
push
pop
call
enter
outsb
adc
adc
sbb
cld
fsub
inc
cmp
jae
push
add
xchg
push
jmp
cli
mov
adc
mov
push
enter
ds
sbb
inc
lret
pop
xor
push
dec
sub
pop
dec
repz
ja
adc
pushf
out
pop
movb
lock
repnz
call
hlt
das
int3
fucomp
dec
mov
and
out
sbb
stos
and
push
or
mov
and
adc
pop
mov
sub
push
mov
xor
das
shr
xchg
sbb
mov
decl
and
lret
stos
and
into
incb
mov
push
test
push
jne
xor
outsl
lea
cmp
mov
xchg
jmp
xchg
push
sub
mov
rorb
inc
lods
cs
call
fs
adc
cmp
push
ret
dec
or
outsb
add
scas
je
lods
jae
call
xchg
adc
add
lock
mov
test
pop
and
cmpb
cli
adc
and
mov
stc
scas
pushf
jle
imul
mov
fisttpll
leave
dec
hlt
pop
jno
push
push
scas
bound
jl
add
out
pop
scas
fs
mov
mov
sbb
scas
jno
pop
loopne
sbb
push
sbb
dec
jae
lods
mov
xor
ja
mov
add
jle
jg
adc
add
cmp
cmp
clc
sub
lcall
jle
dec
sub
jnp
push
dec
flds
cltd
fsts
jge
das
jmp
push
dec
jo
or
inc
jae
push
insb
push
or
adc
jmp
stc
fwait
inc
loope
mov
and
bound
les
xchg
les
xor
repnz
aas
inc
int
jnp
xor
xchg
adc
pusha
adc
add
fadds
pop
je
fcompl
les
aas
int3
or
dec
adc
sarl
sbb
cld
adc
sub
fisttps
pop
hlt
negl
dec
dec
add
cmp
cmp
xor
xchg
cmp
loope
jb
jmp
lret
scas
ss
mov
mov
jnp
jg
mov
and
push
xlat
pop
ds
fnsave
jmp
lds
jle
mov
push
mov
mov
out
and
cmp
fs
xchg
sub
sub
jmp
test
outsl
mov
push
cmpsl
stc
pop
in
add
mov
out
xchg
xchg
sub
testl
add
jnp
rorb
sahf
mov
lods
or
mov
adc
stos
sbb
and
insl
mov
xlat
jo
jne
jmp
push
xchg
nop
push
fsubr
cmpsl
mov
ja
adc
cmpsl
nop
loopne
jne
inc
fcmovnu
and
addr16
xchg
fcom
mov
push
fdivs
push
in
xchg
sbb
pop
ror
jae
enter
inc
imul
fadds
loop
mull
inc
loopne
pop
or
mov
dec
movsl
xor
inc
add
mov
sub
or
and
lock
int
sub
iret
fidivrl
push
add
xor
adc
xchg
push
mov
add
faddl
in
dec
cwtl
cmp
mov
mov
sub
push
lock
mov
scas
mov
jle
jne
fiadds
pushl
imul
test
iret
call
hlt
adc
lea
lods
mulb
mov
cmpl
pop
xor
pop
imul
push
pop
or
lods
inc
inc
int3
inc
cmp
push
adc
in
js
aaa
inc
sub
jnp
ds
fmull
lret
aas
repnz
inc
xchg
sarl
sub
cwtl
popa
dec
orl
leave
adc
jmp
and
sub
or
pop
xor
test
sub
test
and
aaa
into
and
adc
and
aas
xchg
xchg
gs
subl
nop
js
repz
inc
inc
pop
add
call
daa
or
sarb
dec
push
mov
aas
cmpsb
and
sbb
dec
fs
xor
int3
hlt
push
popf
flds
movsb
jns
js
xchg
call
and
dec
push
mov
pop
xor
mov
pop
nop
lret
mov
add
cmp
pop
lea
xor
dec
pop
shlb
orb
pop
scas
stos
xor
stos
cmpl
rorb
fcmovb
stos
ret
push
inc
inc
cmp
adc
lret
icebp
dec
push
cwtl
push
cmp
xchg
adc
std
adc
adc
add
push
mov
pop
popf
push
pop
sub
or
sarl
ljmp
aas
cmpb
pusha
or
pop
jmp
xchg
test
leave
add
push
push
and
jle
iret
adc
jns
dec
test
mov
or
adc
add
inc
and
jo
cmp
test
jp
jne
lds
sub
fdivl
jmp
and
add
addl
and
ljmp
sbb
out
xor
es
cmp
push
xchg
cli
enter
iret
add
nop
fstpl
jo
xor
cmp
push
mov
jne
adc
pop
lahf
gs
das
sbb
pop
cmp
fimull
lahf
loopne
fwait
sbb
enter
aas
lea
xor
push
outsl
aas
mov
inc
pop
in
cmc
aam
inc
adc
je
mov
das
sub
jmp
in
lret
push
pop
pop
sbb
cmp
push
jns
mov
mov
pushf
push
jmp
lret
daa
jle
and
out
or
adc
add
test
xchg
and
inc
mov
push
xor
or
test
mov
fs
cmp
xchg
pop
inc
inc
dec
pop
mov
inc
test
cli
xlat
push
jge
test
lock
sbbl
adc
es
je
push
add
and
or
daa
cld
inc
inc
push
adc
xor
mov
mov
sub
push
sahf
jnp
xor
lret
cmp
mov
decl
andl
mov
test
lea
push
jg
lret
out
sbb
rorl
jmp
inc
cld
adc
push
and
les
aas
outsb
lods
repnz
ds
ja
cwtl
imul
cmp
outsl
inc
pop
adc
pop
sub
push
pop
cmp
xchg
pop
enter
movsb
xchg
je
das
icebp
call
pushf
adc
or
add
dec
adc
xchg
add
adc
and
xchg
mov
aas
cs
sub
inc
xor
cli
xor
lock
in
jle
bound
push
or
orb
xor
pop
dec
sbb
jmp
pop
inc
int3
ds
jg
test
stc
dec
pusha
cmp
xchg
mov
mov
call
or
jle
push
fwait
sub
cltd
adc
pop
jae
adc
dec
pop
add
imul
repz
aaa
xor
icebp
int
sub
cmpsl
movsl
pop
cld
aas
movsb
out
clc
sub
cmpsl
std
mov
push
call
mov
inc
pop
mov
data16
push
or
inc
inc
test
out
stos
call
jle
shrb
divb
lret
cmp
push
or
push
and
in
xchg
gs
bound
sbb
push
xchg
loop
and
fmul
aad
mov
adc
add
mov
das
mov
mov
subb
dec
pop
adc
daa
push
jbe
addr16
jge
cmp
jge
mov
pop
pop
sahf
stos
sbb
cs
aaa
mov
jmp
or
mov
adc
rcll
fiadds
add
nop
stos
cli
cmpl
mov
mov
inc
movsb
sbb
or
mov
jmp
or
and
lcall
lahf
push
cld
lret
xchg
fbstp
fdivrs
cmp
imul
xor
jne
or
lea
add
adc
pop
into
loopne
add
std
pushl
jns
dec
out
xchg
cmp
js
dec
sub
data16
mov
in
fimuls
mov
sbb
into
call
jnp
das
jno
test
sbb
xchg
stc
push
mov
jno
bound
adc
stos
inc
dec
scas
jge,pt
inc
js
sbb
icebp
loope
sbb
icebp
pusha
leave
adc
adc
xchg
jmp
and
jne
pop
dec
repz
sub
nop
lea
or
clc
pop
jmp
fcoms
sub
popf
mov
add
xchg
add
mov
mov
pop
pop
and
loope
adc
and
shl
sub
hlt
outsb
gs
out
and
lods
imul
adc
jb
inc
test
and
inc
inc
adc
inc
or
inc
fsubrs
lahf
stc
cmp
rorl
jp
pop
mov
pushl
call
pop
xchg
mov
les
test
xor
movsb
cmp
clc
out
pop
cltd
cmp
xchg
or
mov
test
insl
lds
inc
sub
sub
mov
xor
push
ret
add
xchg
fxam
sbb
sbb
mov
dec
lods
cmp
fnstcw
or
inc
sbb
faddl
cld
adc
out
inc
mov
das
and
bnd
or
cmp
lds
callw
jns
sahf
test
out
adc
mov
decl
pop
pop
test
js
mov
imul
les
sbb
mov
cmp
cmp
andb
jg
dec
mov
scas
sub
adc
pusha
dec
fdivs
lret
inc
into
adc
xorl
fs
cwtl
out
ret
or
push
cld
enter
add
cwtl
sbb
adc
lret
jbe
mov
jmp
cmp
jmp
and
rcrl
mov
or
and
je
lcall
inc
pusha
cmp
dec
mov
mov
sbb
adc
add
gs
insb
or
dec
popa
daa
add
add
push
andb
sbb
dec
in
mov
adc
dec
mov
xor
popf
push
adc
out
xor
and
dec
in
clc
pushf
mov
clc
xchg
das
add
push
add
or
or
inc
jo
mov
pop
femms
jge
push
adc
adc
push
jg
push
push
push
pop
pop
push
cs
jbe
pop
push
leave
sbb
sbb
popa
movsb
and
and
and
and
roll
daa
ret
sub
sub
jo
mov
jae
or
sbb
sub
xor
clc
xchg
adc
mov
aad
add
xchg
in
xor
pop
add
inc
xchg
adc
or
data16
in
inc
out
scas
fs
and
cmp
mov
and
xchg
cmp
mov
hlt
xor
mov
push
push
or
adc
dec
sti
fcomps
cmpsb
cld
or
lret
nop
insl
repz
mov
ss
push
mov
push
or
adcl
js
cmpsb
rolb
push
out
xor
cmp
mov
loopne
mov
mov
pop
or
dec
push
and
popa
outsb
mov
loope
jb
data16
dec
mov
or
mov
negb
lock
lds
or
mov
dec
adc
and
xor
pop
or
pop
sbb
or
sbb
or
sbb
xor
shufps
adc
push
sbb
arpl
sbb
mov
push
punpckhwd
es
adc
push
pop
or
sbb
or
mov
adc
leave
adc
das
or
xor
inc
adc
imul
sub
mov
xchg
adc
push
push
sbb
jge
push
mov
jno
sbb
adc
in
jl
dec
add
push
pop
add
or
add
adc
adc
jns
adcb
sbb
loopne
sbb
push
pop
cmp
and
sti
mov
sub
mov
sub
inc
jo
xchg
adc
out
add
test
in
add
mov
fadds
inc
xor
push
push
stc
cmc
inc
arpl
jnp
repnz
ret
jb
and
jl
xchg
hlt
loopne
mov
add
adc
bound
dec
add
mov
test
int
rorl
repnz
xchg
and
jns
out
pop
dec
xor
into
adc
in
and
push
adc
xchg
and
mov
enter
leave
dec
adc
push
sbb
and
xchg
dec
xor
fmull
pop
pop
imul
dec
sub
sbb
xor
xchg
popa
sbbb
sbb
shl
nop
mov
out
jae
jle
sti
push
adc
imul
add
xchg
sarl
or
push
mov
js
lcall
aas
add
xchg
popa
sbb
ds
sbbb
pop
mov
aad
add
and
pop
push
imul
test
or
or
pop
ret
popa
call
lea
test
add
add
inc
sbb
outsb
sahf
subb
xor
adc
add
and
xchg
or
loop
inc
test
mov
add
cmpsl
xchg
shrb
inc
or
mov
or
mov
or
pop
int3
xor
or
pusha
into
sbb
iret
dec
mov
fldl
or
mov
and
mov
call
stos
xchg
or
into
cltd
and
mov
stos
xor
mov
cmpsl
dec
lcall
mov
push
push
or
jne
js
and
data16
inc
or
inc
mov
int3
adc
or
leave
sub
or
sbb
or
sbb
sbb
out
pop
sbb
or
sbb
fs
testb
jmp
jmp
mov
decl
lcall
pusha
sub
iret
mov
test
rclb
adc
in
xchg
loop
outsl
inc
xchg
and
fldenv
xorb
or
or
loope
stos
jae
loope
dec
inc
iret
sub
rolb
sbb
sahf
nop
push
lock
xchg
and
and
into
call
int3
sarb
inc
int3
pop
add
pop
roll
xchg
cmp
dec
inc
push
ja
xchg
adc
sub
data16
adc
inc
js
mov
stos
and
pop
pusha
or
sbb
inc
and
push
mov
xor
sub
cli
mov
inc
addl
push
cmpsl
xor
and
sbb
inc
lret
sbb
xchg
sbb
inc
dec
sbb
cmpsl
xor
mov
lds
xor
and
mov
int
dec
adc
mov
add
scas
adc
daa
xor
adc
jmp
mov
and
and
mov
xor
cs
inc
or
inc
push
stos
cmpsb
aaa
and
adc
loope
test
inc
add
ret
sub
pop
adc
or
mov
ret
lret
mov
inc
and
aas
add
mov
cmpsb
or
mov
sti
and
cmpsb
sub
sub
in
pop
or
mov
ss
dec
in
or
adc
and
stos
add
ror
test
pop
dec
cmp
adc
push
sub
inc
xchg
inc
into
adc
adc
and
pop
adc
xchg
and
sbb
adc
adc
lret
jno
rclb
pop
or
icebp
rorb
push
mov
std
addl
and
xorb
dec
dec
xor
nop
in
dec
cs
mov
mov
cmp
mov
push
pop
cld
mov
push
jae
or
inc
push
insb
jbe,pn
inc
js
stos
mov
jnp
inc
cmp
mov
cmp
popa
inc
or
xor
sti
xor
fimuls
sahf
inc
sti
in
jge
mov
pushf
es
pop
lcall
loopne
icebp
add
mov
add
jp
xchg
psubsb
adc
lret
mov
xchg
pshufw
xchg
stc
xchg
sbb
xchg
cltd
push
pop
es
fisubl
loope
pushf
insl
movsl
inc
std
cwtl
dec
mov
xchg
ret
and
jl
enter
jge
pop
jge
mov
jmp
add
jp
in
or
mov
mov
jp
dec
jo
out
xor
mov
adc
loopne
and
jne
repnz
xchg
lock
arpl
dec
and
sbb
or
jmp
test
sbb
adc
es
mov
scas
inc
clc
push
aad
out
stos
fwait
pop
in
sub
inc
call
add
mov
dec
not
push
pop
cwtl
lret
fmuls
push
pop
add
and
cmp
add
jno
and
into
fadds
xor
cmp
outsb
adc
mov
cmp
jg
out
out
pop
loop
jge
push
inc
adc
push
or
sub
inc
add
test
jne
sbbb
test
push
cli
push
or
or
shlb
and
insb
pop
mov
insl
mov
xlat
movsb
cmp
stos
daa
adc
inc
sub
sbb
cmp
and
cwtl
enter
fisttps
pop
dec
pushf
cs
or
pop
cmp
subl
popa
jg
mov
xchg
cli
clc
mov
das
call
mov
scas
inc
fildl
jmp
mov
mov
jb
pop
std
or
push
call
fadds
and
xlat
test
or
sub
dec
xor
mov
out
sub
mov
ret
sub
pop
sub
sub
jmp
sbb
jp
adc
in
or
in
xchg
clc
jbe
in
jmp
sti
adc
test
and
das
testb
test
xorl
mov
ja
or
cmp
sbb
testb
fsubr
fcoml
roll
shrl
dec
cmp
push
sarl
inc
or
mov
mov
xchg
fcomip
sub
mov
sbb
aad
stos
nop
lret
loop
or
push
jmp
in
and
and
call
ss
push
push
push
int3
cmp
cld
or
cmpsl
aas
pop
jle
inc
lret
adc
xchg
iret
pop
into
jmp
push
push
jae
mov
jns
stc
loop
jne
jp
sub
pop
adc
adc
ljmp
xor
and
pop
push
cmp
lock
leave
nop
scas
mov
shlb
adc
sahf
push
inc
sub
jne
jmp
stc
sbb
mov
sbb
sub
negb
hlt
xchg
jmp
adc
pop
cld
aam
inc
test
ljmp
inc
arpl
adc
or
lock
test
shll
jae
stos
rolb
imul
and
test
sbb
sub
inc
push
push
in
xchg
loopne
aad
xchg
mov
dec
xchg
sbb
push
push
fisttpl
pop
adc
das
cli
push
or
xchg
out
leave
push
mov
fisttpll
xor
and
js
mov
test
adc
jb
push
xchg
dec
rcrl
push
leave
mov
inc
mov
cwtl
movsl
addr16
popa
sub
test
mov
add
or
pop
or
mov
outsl
mov
not
pop
sub
das
inc
xchg
jo
and
movsb
sub
scas
and
push
lret
and
push
xchg
and
or
jne
inc
pop
nop
nop
dec
or
ret
xchg
loopne
dec
roll
add
cmp
push
das
dec
adc
adc
xchg
rorl
repz
pop
loopne
repz
call
fstpl
and
imul
add
add
test
loopne
jb
les
hlt
and
pop
mov
orb
pinsrw
hlt
lea
pop
mov
add
mov
ljmp
add
sbb
rcrb
add
test
movsl
dec
add
jo
pop
rcl
mov
ss
mov
scas
push
adc
cli
jge
mull
push
pusha
jmp
xchg
sub
mov
repz
jecxz
test
inc
sub
mov
repnz
je
and
xor
lods
test
adc
and
xchg
push
fs
inc
mov
mov
mov
push
add
mov
popl
in
cmp
out
jp
jmp
call
not
sete
shr
pop
in
push
adc
inc
mov
xor
mov
jnp
cmp
and
pop
or
das
les
adc
frstor
test
call
sbb
je
hlt
push
cwtl
xor
jns
out
cmp
adc
jno
sub
loop
sbb
xor
sub
push
jbe
pop
add
mov
inc
xor
and
mov
inc
iret
inc
icebp
push
scas
pop
add
aaa
inc
xchg
jns
xchg
hlt
ljmp
mov
and
push
add
lret
shlb
lahf
shl
jns
mov
lods
testb
or
jns
mov
lea
dec
jmp
lds
push
sub
xchg
cmpb
stc
sbbb
adc
hlt
cmp
xchg
add
dec
inc
cmp
or
mov
je
inc
ljmp
inc
inc
pop
cmp
mov
jecxz
test
in
mov
cmpb
sub
xchg
jle
lods
cld
test
and
and
xchg
jmp
cmp
test
lock
hlt
or
loop
dec
xor
add
sbb
add
stos
inc
aad
scas
jmp
adcl
dec
xchg
xlat
push
pop
sbb
not
push
cmp
test
incl
call
and
les
lock
testb
les
and
je
inc
cmc
aaa
push
movl
xor
inc
xchg
mov
xchg
mov
sbb
sub
adc
lcall
enter
iret
push
lock
in
cmpsl
scas
loop
jmp
mov
fadds
loopne
call
rcr
add
mov
push
scas
cmp
jmp
mov
ret
and
lret
in
xchg
dec
out
adc
ret
jo
cmp
test
xor
data16
xor
pushf
data16
ret
sbb
mov
add
adc
mov
dec
ljmp
adc
fwait
pushf
push
add
movsb
push
dec
and
iret
sbb
enter
add
jne
sub
push
mov
pop
pop
pop
call
jecxz
adc
loop
jns
or
rorb
mov
pop
insl
inc
inc
sbbb
rep
mov
sahf
lods
push
sbb
fiaddl
lahf
mov
nop
add
or
movsb
test
in
push
adc
out
clc
cli
jne
xchg
xchg
jl
movsl
jge
ss
push
dec
adc
lahf
jmp
ss
sub
rclb
test
dec
xchg
sbb
cli
sub
out
gs
andb
cld
in
and
jne
mov
jae
enter
aad
pop
test
mov
mov
sbb
add
pop
mov
push
dec
scas
lods
dec
lret
or
leave
xchg
push
sbb
push
sub
pop
mov
pop
inc
std
or
loop
xor
adc
fldl
sub
pop
adc
movsb
adc
mov
jmp
movsb
imul
clc
cwtl
push
lds
xchg
icebp
mov
clc
pushf
xchg
int3
add
mov
je
fists
inc
xlat
mov
dec
mov
in
xor
out
fadds
int
movsb
push
jo
test
je
add
adc
out
shll
lcall
sbb
mov
fwait
xor
or
jmp
mov
iret
js
mov
mov
mov
clc
sbb
xor
nop
fbld
push
or
mov
push
nop
lods
jne
cmp
mov
add
fists
and
in
or
mov
add
cmp
and
add
adc
and
and
pop
je
mov
mov
fs
push
sarb
enter
int
cmp
and
jo
inc
int3
xor
fdivl
das
sarl
in
and
shr
jmp
jne
pop
mov
test
jnp
pusha
jmp
and
insb
add
ss
dec
cld
adc
jb
or
jl
sub
lret
mov
mov
faddl
and
cmpl
imul
xor
inc
jae
jge
movsw
sub
loope
dec
clc
sbb
jne
xchg
push
mov
je
add
dec
int3
push
movsb
cs
cmp
jg
enter
sbb
jne
ds
adc
add
xor
dec
mov
test
repnz
call
push
cmpxchg
mov
dec
in
jmp
call
jge
sbb
xchg
daa
mov
cmp
push
lcall
xor
pop
jo
addl
cli
add
aas
cmpsb
test
adc
or
fst
mov
mov
mov
sbb
cmp
iret
xor
mov
mov
cmp
leave
ljmp
adc
scas
in
stos
clc
mov
mov
xor
add
or
dec
xor
add
adc
push
push
push
jb
lods
or
sub
sbb
dec
je
pop
fs
test
and
mov
xchg
dec
add
mov
into
jmp
adc
push
mov
jmp
fidivs
lcall
iret
movsb
cltd
in
or
pop
sub
out
or
call
fisubrs
daa
cli
adc
enter
inc
xor
jns
inc
iret
mov
xor
scas
xchg
pop
or
pop
mov
cmp
lds
sahf
adc
jmp
mov
negb
mov
push
and
lcall
inc
test
xor
call
hlt
push
push
mov
popa
add
xchg
xchg
insl
push
ss
ds
sbb
flds
sub
dec
inc
mov
or
mov
movsb
adc
inc
or
out
sub
xor
shr
pop
orb
and
or
push
push
pop
adc
sbb
test
push
mov
xlat
jle
testl
xor
push
pusha
scas
test
cmp
ret
add
adc
inc
push
stc
add
repz
mov
dec
and
mov
shrl
incl
jl
inc
out
inc
push
outsb
and
add
pop
scas
int3
pop
addr16
lret
repnz
mov
and
mov
hlt
adc
stc
cld
jmp
and
mov
out
pop
pusha
daa
mov
call
unpckhps
push
adc
pop
cmp
insb
fs
sti
xor
ss
mov
mov
or
push
das
mov
inc
sbb
pop
cmp
popa
or
jo
push
sub
in
adc
push
std
js
mov
in
leave
or
mov
movups
cmp
stos
or
add
adc
push
adc
sub
and
jo
xchg
xchg
xor
xchg
and
adc
pop
sahf
rcll
lea
stc
or
psubw
adc
add
sub
int
fimull
and
out
and
cld
jne
xchg
adc
enter
jle
or
jne
andb
lahf
and
xor
cmp
inc
xor
adc
mov
sbb
testl
pop
in
out
and
push
orb
fstpt
ror
lret
in
xor
mov
sbbb
or
es
sub
inc
daa
dec
sbb
js,pn
loope
in
mov
cmp
mov
cmp
lcall
pop
add
inc
adc
adc
mov
ja
inc
push
jmp
push
lods
cmp
jecxz
frstor
sbb
sbb
jno
xor
aaa
imul
xor
inc
sub
inc
outsb
xchg
mov
jne
mov
mov
lods
jmp
sub
cs
add
mov
and
jmp
clc
push
mov
push
call
mov
xchg
int3
fwait
aad
loopne
inc
jmp
push
das
insb
jno
subl
sbb
xor
das
mov
dec
sbb
inc
insb
jns
bound
cmp
add
inc
mov
mov
ds
or
sub
pop
mov
inc
or
cmp
fdivr
std
test
add
fs
pop
shll
pusha
repz
add
sbb
sub
and
shr
stos
pop
xor
iret
loope
inc
and
les
sub
jg
push
jmp
jnp
push
aam
data16
or
lea
or
jge
dec
jne
inc
push
mov
aas
dec
mov
loop
fcmove
pop
clc
inc
test
mov
pushw
jmp
hlt
bound
sbb
dec
pop
call
inc
std
pusha
sbb
daa
call
mov
mov
push
pusha
add
mov
ljmp
cmp
cltd
xorl
sbb
pop
and
or
clc
cmc
xor
push
push
mov
sbb
sarl
pop
jp
test
dec
and
lcall
insb
mov
shll
mov
cmp
jne
or
jmp
or
xor
scas
or
dec
xchg
push
inc
mov
mov
jg
jmp
fistps
jae
loopne
push
in
fdiv
fcmovnbe
lahf
push
inc
int3
jb
mov
les
shlb
xlat
sub
sub
lock
mov
fcoms
adc
or
cmp
cli
mov
or
and
je
sbb
adc
aaa
pop
aaa
rcll
adc
negb
inc
dec
cmp
adc
inc
das
pop
repnz
push
mov
shl
cmpsl
sub
shll
jmp
sub
call
int3
inc
loopne
sub
xchg
dec
sub
int3
push
andb
aam
push
test
jbe
adcl
mov
les
in
pinsrw
leave
push
dec
scas
ja
out
sbb
mov
ficoml
adc
popa
pop
push
xor
mov
cmovne
cs
mov
or
call
lods
fmull
and
daa
add
jmp
scas
ficoml
xchg
inc
mov
fnstenv
inc
mov
sti
pminsw
push
mov
pop
fdivs
jnp
mov
xlat
pop
mov
jle
mov
test
push
jmp
jmp
xor
sbb
pop
cmp
cli
jp
adc
hlt
or
mov
cmp
xchg
mov
or
mov
or
inc
repnz
int3
or
stc
call
fldcw
push
mov
jecxz
cmovle
xor
aam
or
jb
push
mov
or
push
and
push
minps
jg
jp
mov
sbb
arpl
cmp
arpl
xchg
inc
dec
mov
push
addr16
das
pop
in
daa
sub
sub
xor
xor
subb
xchg
inc
pop
adc
cwtl
xor
dec
adc
sub
ret
scas
xor
add
xchg
jbe
adc
movsb
adc
and
insb
xor
mov
push
sbb
outsb
testb
mov
sbb
sub
push
cmc
ja
xor
cmovne
aam
mov
or
pop
cmc
ljmp
mov
dec
jae
mov
test
sub
dec
fs
ss
shr
push
jmp
dec
mov
or
fists
jmp
je
or
pop
repz
mov
std
adc
stos
popa
dec
pop
pop
std
sub
sbb
call
les
sbb
lahf
out
icebp
sti
sbb
add
mov
out
in
fisubl
loope
iret
inc
or
icebp
test
test
enter
sbb
xchg
and
inc
ljmp
shr
jp
cmp
xchg
insl
mov
mov
or
cs
inc
adc
mov
adc
dec
cmpl
fisubl
je
mov
sub
inc
sbb
or
xor
mov
sub
ja
xor
sub
lret
cmp
jmp
cmc
fldt
push
pop
ljmp
test
jmp
dec
leave
and
andl
das
imul
pushf
mov
or
outsb
mov
ds
ret
mov
sbb
and
and
in
xor
dec
and
and
adcb
andl
xchg
insb
sbb
fcmovnbe
inc
std
jmp
neg
fwait
mov
maskmovq
mull
cmovns
push
or
test
xchg
mov
es
cmpsb
xchg
add
jmp
mov
jmp
das
bound
jge
jge
xchg
lcall
arpl
cmp
leave
mov
and
jmp
lcall
sub
data16
sbb
or
push
into
or
or
cmpsl
cmp
jg
xchg
inc
xchg
and
xchg
jge
mov
sbb
js
xor
jle
shlb
xchg
sbb
outsb
dec
ss
jbe
daa
jne
testb
add
popf
test
jns
mov
enter
scas
pop
scas
imull
xchg
imul
test
or
out
or
mov
call
gs
mov
xchg
pmaxsw
dec
inc
ds
inc
or
ds
jno
pop
add
jmp
int3
push
and
sbb
push
push
mov
inc
xor
cltd
add
adc
push
inc
shlb
popf
nop
or
aam
mov
rol
jmp
test
or
xor
mov
adc
test
and
daa
ja
cli
pop
clc
jmp
ret
adc
stos
fsub
lahf
ljmp
sub
and
dec
xchg
shrl
dec
mov
aaa
enter
xchg
mov
or
push
xchg
mov
cmp
jmp
ret
xchg
mov
fs
sub
test
in
dec
adc
or
push
test
stos
and
mov
psraw
or
xor
sbb
mov
test
add
pop
cmp
repz
adc
ja
or
xchg
sub
cli
dec
inc
movsl
js
adc
xchg
sbb
mov
sbb
pusha
sbb
out
cmp
inc
adc
jne
lds
dec
cmp
add
mov
xchg
test
lret
nop
mov
call
mov
sbb
adc
inc
sub
cli
inc
movsl
bndldx
dec
ud2
mov
cld
mov
push
dec
inc
inc
and
fs
inc
jmp
ljmp
xlat
jmp
mov
inc
adc
adc
xor
negb
dec
sarb
or
sub
hlt
movsl
jmp
push
sti
sub
adc
jb
dec
adc
or
push
sbb
ljmp
pop
or
popa
sbb
aas
pushf
inc
mov
call
and
xor
rcl
ret
mov
icebp
enter
mov
fdivs
xor
or
push
cmpsb
jecxz
push
and
push
add
mov
shl
adc
jo
mov
jmp
mov
shll
and
sbb
mov
pop
sub
push
sbb
imul
xor
cs
shrl
push
adc
or
aad
adc
mov
cwtl
push
call
mov
mov
sbb
lds
jmp
mov
out
cmp
in
out
or
rcrb
mov
test
adc
xlat
por
inc
xor
add
mov
mov
lods
mov
xchg
movsb
inc
sub
testb
adc
mov
xchg
push
daa
std
xchg
shl
mov
repnz
divl
roll
test
xor
pusha
call
push
push
xchg
fs
movsl
mov
and
push
call
fsubrp
and
test
in
or
ret
inc
hlt
xchg
aaa
cld
sub
xor
cltd
mov
je
cmp
sar
rorl
add
inc
adc
loope
sub
clc
add
cmp
aas
jle
mov
add
jge
jge
xchg
cmp
mov
or
sbb
ret
call
push
imul
js
push
pop
lods
fs
add
push
xor
push
jmp
fsubs
add
inc
add
adc
push
orb
or
rsm
movsb
adc
xchg
test
mov
jle
sub
in
xchg
add
test
xchg
adc
cmp
cmp
dec
push
xchg
inc
and
out
add
mov
je
add
xor
out
dec
sub
aam
rorl
and
je
and
fadds
mov
cmp
lret
xadd
not
dec
mov
mov
or
jnp
scas
push
mov
mov
lods
into
shrl
mov
mov
push
stc
inc
xchg
js
stos
cwtl
xchg
dec
inc
movsb
push
mov
ds
lea
xor
ds
mov
push
and
lea
fsubs
mov
cli
out
fs
insb
fsubrl
lock
loopne
sub
sub
ss
push
dec
pop
mov
imul
lods
adc
loope
jmp
push
push
pop
pop
in
cmp
cli
jo
pop
test
xor
pop
ja
xchg
inc
outsl
cmp
jne
add
push
or
aam
test
jecxz
mov
dec
dec
cmp
cmp
dec
push
icebp
xchg
jmp
add
aaa
mov
sbb
test
mov
jecxz
xchg
mov
push
adc
inc
popa
call
test
popf
hlt
xor
loope
and
xchg
decl
clc
xorl
push
jo
push
fldcw
inc
cmp
push
fsub
dec
cmp
in
into
mov
sbb
jl
push
aam
inc
fidivl
jne
jl
xor
les
dec
xor
xor
imul
daa
test
adc
movsl
adc
add
push
shrb
pop
push
adc
test
or
xchg
mov
mov
cmpsl
lods
and
xchg
sahf
adc
imul
add
xchg
mov
mov
dec
jmp
je,pt
inc
loopne
xchg
rcll
jne
push
dec
xor
mov
cmc
mov
sbb
inc
adc
cmp
and
call
hlt
das
and
sub
jbe
jmp
mov
jg
cli
insb
jl
inc
or
pop
les
jmp
mov
or
and
pushf
adc
out
jbe
bound
add
dec
js
sbb
mov
jnp
jmp
adc
int3
scas
lar
testl
and
ljmp
and
cmp
push
mov
fistpl
scas
sub
jns
pop
ljmp
sti
loopne
pop
xor
adc
jle
call
inc
test
arpl
xor
out
cld
mov
or
xor
inc
cmp
test
int3
sbb
mov
jmp
push
push
in
adc
push
lods
mov
push
dec
dec
mov
sub
inc
xor
mov
dec
lds
push
rorb
pop
test
and
push
lock
adc
pop
inc
and
call
cs
cmc
dec
addr16
cmp
stos
and
and
xchg
mov
and
in
nop
push
pop
mov
aaa
mov
or
push
shlb
out
xor
cli
and
pushf
std
pop
idivb
mov
mov
xchg
inc
push
mov
shlb
push
inc
lock
cwtl
add
inc
add
ljmp
sub
loopne
mov
enter
xor
add
outsb
mov
bound
adc
jmp
outsb
push
mov
push
add
sub
test
or
test
and
jg
mov
xchg
add
xor
je
push
mov
lea
mov
enter
jne
cld
lcall
push
es
pop
fdivrs
stos
dec
lret
insl
sahf
adc
inc
jmp
push
minps
xor
bound
mov
popf
dec
mov
lds
test
dec
shll
fisubs
sub
outsb
mov
adc
sub
cmp
mov
test
add
je
push
adc
ljmp
gs
dec
and
cmpsb
mov
ss
jnp
movsl
adc
dec
daa
repnz
scas
xorb
and
fs
sbbl
push
cmp
das
jg
repnz
ficomps
mov
inc
femms
call
pop
adc
push
mov
jmp
mov
mov
aas
xor
imul
popl
mov
test
jne
and
and
cmpsl
xor
movsl
movsb
xor
fcoml
jnp
cli
dec
push
ret
sarl
push
test
xor
jg
fstl
adc
adc
sub
mov
mov
add
je
cmp
sbb
push
push
sub
push
adc
jp
or
adc
xchg
je
and
repnz
loope
mov
inc
and
test
cs
xchg
sbb
pop
adc
push
cli
adc
pcmpeqb
mov
mov
or
jmp
jnp
push
add
push
mov
adc
mov
sub
and
lret
mov
cmp
dec
dec
les
out
cmp
pop
popf
push
adcb
mov
pusha
ljmp
add
movsb
sbb
sub
jmp
xchg
sbb
adc
jmp
push
in
call
add
ret
je
mov
adc
cwtl
cld
or
fmull
push
jl
aaa
jg
adc
push
adc
cs
jo
scas
cmp
mov
xor
ret
and
cmp
je
movzwl
popf
jbe
movsl
add
js
test
xchg
bound
into
sbb
test
jp
enter
jmp
mov
cmp
sti
or
inc
jmp
aad
jmp
pop
sti
sbb
stos
push
push
call
mov
leave
adc
lock
cvtpi2ps
mov
dec
test
add
push
xor
movsb
mov
mov
or
orl
je
adc
adc
xchg
dec
adc
in
out
adc
in
pop
inc
loope
or
or
rcl
call
push
mov
pop
ret
fs
fs
ds
add
jmp
enter
lahf
sahf
std
daa
in
in
cmp
addr16
out
jl
imul
xor
pusha
push
adc
xchg
lcall
inc
dec
pop
es
aad
cmpl
sub
fistps
push
popf
push
cmpsl
xor
rcrl
push
inc
cmp
jl
test
daa
adc
inc
jg
jl
inc
xorl
xchg
mov
mov
or
mov
add
xchg
or
mov
js
sub
scas
out
popl
dec
push
cs
sub
insb
imul
xorb
cmp
or
push
in
insl
mov
gs
cmp
add
inc
ds
xchg
mov
inc
cmp
stos
ret
pop
in
loopne,pn
ja
mov
test
stos
push
pop
in
pop
pop
mov
adc
dec
in
cli
test
and
call
outsl
push
movl
xor
xor
adc
add
pop
lcall
xor
adc
in
or
jge
cmp
aam
movsb
cmp
outsb
cmp
mov
dec
or
mov
jae
and
xor
pushf
sbb
test
orl
push
js
ret
clc
lods
mov
out
cmp
inc
push
outsl
rcrl
inc
inc
sub
adc
mov
add
or
push
shll
jno
dec
cmp
ret
pop
data16
xchg
mov
outsb
imul
inc
enter
xor
popa
mov
cmp
xchg
xor
push
mov
in
mov
sub
ja
cwtl
sahf
dec
int3
rclb
jle
clc
push
dec
push
cli
sub
lea
fmuls
cmp
cld
mov
bound
mov
or
sbb
loopne
sbb
jb
pop
jge
add
mov
cmp
jge
outsb
add
imul
jl
or
jge
lods
rclb
lahf
push
jg
inc
inc
cmp
jl
fs
dec
pop
rcl
ret
sub
pop
mov
xor
sub
cmp
call
sub
adc
icebp
and
nop
fdivrp
add
std
mov
int
inc
xor
cmpsl
ds
push
xor
push
call
lahf
inc
das
inc
pop
sub
xor
and
and
mov
jp
push
shr
push
and
enter
call
testb
push
jmp
sbb
cmp
pop
cmp
arpl
cmp
jg
addr16
pop
lea
adc
inc
mov
add
mov
adc
lea
xchg
xchg
push
jne
inc
jp
add
and
divb
pushf
or
and
xchg
cmp
mov
push
xchg
jge
push
adc
popf
fnstcw
push
dec
test
loopne
push
movsb
or
and
nop
idivl
and
inc
sub
shl
pop
lea
add
call
and
je
cmp
cmp
xor
cmp
fadds
xorl
adc
jmp
test
shr
push
sbb
mov
and
xchg
pop
dec
dec
push
push
mov
xchg
imul
jp
test
pop
sbb
sub
jnp
adc
test
mov
in
lret
xchg
adc
add
test
hlt
adc
jle
enter
dec
mov
mulps
nop
sub
adc
stos
xor
add
insb
pop
pop
xchg
lock
bound
mov
sbb
inc
push
lea
pop
mov
adc
push
leave
jmp
cmpsb
scas
scas
xchg
stc
sbb
jmp
or
adc
and
pop
jg
push
xchg
mov
sub
or
jno
mov
lods
iret
lds
cmp
outsl
fistpl
adc
mov
ret
std
inc
jle
lods
mov
dec
inc
inc
or
jle
daa
inc
and
dec
and
mov
push
push
sbb
push
mov
cmp
push
enter
rcrl
ss
movsb
sbb
test
ds
arpl
inc
xchg
mov
push
test
add
fsubrp
sbb
stos
xchg
adc
shlb
mulb
jl
adc
jne
std
jne
xchg
adc
push
jecxz
das
add
lret
mov
sbb
lea
sub
scas
mov
jo
repnz
ret
call
jg
xchg
inc
inc
cld
imul
cmpsb
movsb
lods
xchg
fldt
xchg
mov
jno
fcoms
test
ret
sub
ja
inc
ss
movsb
ljmp
push
and
pop
fsubr
data16
jae
enter
pop
or
sbb
dec
sub
lock
xchg
cmp
jg
xor
roll
inc
or
inc
iret
lahf
and
cmp
jecxz
rol
xlat
adc
xor
xor
and
sbb
repnz
push
cmpl
roll
add
jno
test
xchg
pushf
fcoms
loopne
and
cmp
and
add
sbb
dec
push
cld
sbb
sub
sbb
and
enter
jg
dec
lock
sbb
push
dec
xchg
xor
sub
ficompl
data16
fisttps
insb
mov
or
sub
or
jb
repz
jecxz
ljmp
or
orb
enter
je
jp
sarb
mov
out
lods
dec
test
cwtl
inc
jmp
jle
mov
add
popa
cmp
jo
fisubs
cmpsl
lods
jge
test
mov
push
mov
adcl
push
adc
sub
ret
and
jl
xor
push
cmpsb
imul
and
add
lock
add
add
cmp
test
sub
arpl
push
pop
mov
es
push
lods
lahf
push
xor
push
jmp
inc
addl
test
movsb
out
dec
add
inc
cs
lret
movsl
xchg
and
mov
xchg
pop
dec
xchg
movsb
es
dec
and
aam
and
and
jne
sbb
jns
add
je
jae
push
adc
icebp
mov
fldcw
das
and
add
lea
test
jl
lds
and
xor
mov
and
add
aad
out
and
push
iret
xor
scas
jo
and
mov
inc
testb
cli
mov
add
sub
popf
gs
xor
movsl
mov
cmp
cmp
imul
mov
push
xchg
pusha
cmpsl
imull
out
in
xchg
or
mov
scas
or
inc
in
push
fs
dec
addr16
fidivrs
sbb
or
add
and
dec
lahf
in
dec
hlt
push
xlat
mov
daa
mov
dec
inc
or
mov
je
xchg
push
sub
mov
mov
sbb
adc
inc
in
sub
xchg
mov
pop
loope
dec
adc
das
or
sbb
cmpb
push
inc
or
adc
dec
mov
sti
pop
sub
arpl
nop
aam
and
mov
inc
add
mov
cmp
ja
xor
fdivrs
loope
lods
adc
xor
sub
decb
ret
and
pop
xchg
or
or
repnz
test
hlt
add
push
icebp
xchg
test
clc
fdivl
adc
or
movl
mov
sbb
sbb
arpl
cld
jnp
xor
inc
fwait
adc
dec
sub
daa
mov
inc
sub
mov
sub
clc
rcr
in
cmp
jb
adc
mov
hlt
js
lea
icebp
push
and
and
sub
ret
pop
lret
flds
cmpb
lea
ret
pop
aaa
and
pop
addl
or
push
inc
inc
add
pop
jne
dec
dec
loope
sbb
jmp
fiaddl
pushl
psadbw
dec
xor
addr16
push
movl
and
call
dec
pop
hlt
inc
pusha
cld
fcomps
repz
inc
xor
out
sbb
movl
or
mov
and
adc
int3
mov
cmp
mov
inc
test
xchg
decb
or
scas
dec
sub
lock
call
ljmp
dec
cmp
orb
jno
cmc
out
push
gs
ds
or
push
sub
mov
lcall
adc
bound
push
and
test
adc
inc
push
fcompl
dec
pusha
push
sbb
inc
and
mov
test
push
std
xor
stos
pop
mov
xor
adc
cmp
and
idiv
pop
sbb
push
repz
mov
sub
data16
or
lea
stc
jmp
je
outsl
mov
and
mov
shll
fists
movsb
jb
lret
shl
imul
cli
icebp
ljmp
and
mov
jns
arpl
jne
stos
cld
scas
fists
cmp
push
add
addr16
enter
push
sub
push
cmp
and
pop
dec
je
or
xor
mov
iret
fbstp
jno
mov
je
bound
mov
xchg
fimuls
in
mov
add
pop
int
aas
xchg
pop
in
push
mov
pushf
sti
mov
or
add
int3
pusha
push
mov
js
sub
mov
loope
sbb
push
pop
popa
or
add
shlb
es
jo
push
sbb
pop
aam
pop
push
jecxz
cmpsl
add
mov
loope
jne
ret
add
sub
jg
jmp
adc
movsb
out
add
and
sbb
out
ret
fstl
cmpsb
jne
repnz
xchg
in
sbb
into
jo
adc
sub
loope
and
js
jmp
and
out
add
push
call
outsb
xor
and
jg
mov
enter
cltd
stos
rcrl
push
and
out
nop
mov
inc
pop
mov
jmp
adc
mov
js
enter
sub
add
adc
out
nop
push
arpl
movsb
cld
adc
vphaddudq
and
add
jmp
int
mov
push
std
sub
and
cmp
mov
sbb
jb
test
mov
enter
shl
out
ljmp
cmc
push
or
and
dec
push
inc
mov
movsb
xor
in
xlat
fcomip
imul
pop
ret
cmp
pop
sub
adc
orb
add
stc
lods
mov
pop
mov
adc
jmp
orb
pop
icebp
cwtl
inc
aad
xchg
pop
leave
enterw
cmp
xor
jmp
inc
sbb
inc
inc
push
stos
adc
aam
call
lcall
mov
call
pop
mov
add
mov
xchg
push
dec
call
push
inc
add
cli
call
push
xor
dec
add
data16
call
sub
int
lods
xchg
pop
ja
cmp
sub
push
outsl
mov
add
push
cs
inc
jo
cwtl
lods
sbb
jmp
jg
std
fcmovbe
cli
or
sub
cli
fsubr
pushf
xlat
movswl
fwait
xchg
or
adc
pop
jb
lret
cld
pop
cs
mov
nop
dec
pop
jle
jmp
jne
jnp
push
cmp
push
adc
xor
in
out
xorl
test
popf
arpl
pop
and
movzwl
inc
add
adc
and
sub
fadds
scas
and
or
adc
pop
sahf
xor
inc
mov
sbbb
cmpl
pop
push
push
adc
mov
and
xchg
xor
ds
fisubs
cmp
mov
ret
dec
pop
cwtl
iret
push
ljmp
je
jne
fmuls
add
movsb
stc
and
push
mov
or
xor
mov
jge
fsubs
shl
enter
nop
dec
sbb
xlat
in
xor
mov
js
dec
xor
and
lds
sbb
ret
sub
stc
mov
hlt
inc
jb
mov
fnstsw
stc
push
lcall
jp
add
std
push
mov
rcrb
and
adc
and
dec
mul
mov
mov
ret
lcall
leave
pop
and
jge
in
or
inc
sub
pushf
pop
movsl
jge
std
jge
cwtl
inc
xor
cmpsl
repnz
lret
aam
xchg
pop
dec
sub
mov
outsb
movsb
ficoml
arpl
sarb
test
mov
in
imul
xlat
push
mov
ja
fwait
or
test
jo
idivb
jne
dec
push
fwait
leave
sub
cs
or
mov
jmp
call
push
adc
sti
in
mov
dec
pop
loope
mov
call
pop
dec
sub
mov
stos
scas
cltd
fwait
mov
rorl
and
test
mov
xor
rcrb
xlat
and
stos
pop
jmp
jmp
mov
test
stc
push
xor
movsb
jne
jnp
adc
hlt
daa
or
sarb
aaa
int3
mov
push
mov
pusha
push
hlt
xor
and
or
and
fnstcw
js
xchg
stc
stos
movsl
clc
xchg
arpl
and
test
jmp
rcr
dec
xchg
mov
push
jg
cmp
adc
and
add
add
pop
xchg
int
xor
cmp
test
pop
mov
inc
idiv
flds
in
test
xor
ret
repnz
ja
or
pop
pop
lea
mov
push
mov
pop
jmp
jmp
sub
mov
js
jmp
jnp
jno
add
push
mov
pop
ret
fildll
testb
pop
dec
stos
or
lcall
fwait
or
jl
orb
movsb
add
xor
mov
xchg
push
sub
mov
mov
dec
mov
jl
or
ljmp
insb
outsl
jmp
call
mov
test
les
push
cmc
das
mov
mov
loop
addl
fimull
scas
xchg
fiaddl
or
fistps
push
or
or
inc
and
lods
popa
jne
jbe
cmpsl
outsl
std
add
int3
inc
popf
nop
mov
bound
out
mov
push
imul
in
adc
push
add
iret
push
and
or
push
insb
dec
push
cmp
int3
int3
push
test
cltd
and
inc
outsl
push
daa
leave
push
pop
jnp
mov
inc
sbb
push
xchg
bound
xchg
sub
pop
sub
in
cmp
sbb
mov
test
adc
in
or
adc
sbb
or
negl
xchg
xabort
mov
mov
xchg
andb
js
add
mov
mov
xor
sbb
jecxz
cs
adc
imul
int3
xchg
nop
mov
pop
push
insb
push
push
mov
das
lds
aaa
pop
iret
popf
loope
inc
movsl
lar
cwtl
arpl
enter
and
mov
ja
ret
and
xor
gs
and
imul
dec
scas
jno
jmp
push
call
push
data16
dec
xchg
popf
xchg
sarl
sti
aas
out
pop
dec
sbb
out
sub
or
and
jle
jo
shlb
mov
adc
icebp
je
and
arpl
adc
push
mov
sarb
sub
jae
call
clc
push
fcomps
and
jbe
or
scas
out
enter
mov
jecxz
sbb
jl
ftst
push
scas
xchg
inc
push
ljmp
adc
adc
inc
les
test
xchg
push
mov
or
add
jmp
jmp
mov
loop
outsl
imul
mov
or
xor
mov
jo
lea
sub
cwtl
mov
push
cmp
cmp
lahf
sbb
leave
shll
aad
repnz
adc
shrb
inc
mov
mov
imul
fcoms
cli
inc
xor
fdivrs
inc
and
mov
jne
jne
test
mov
mov
adc
jl
pop
adcl
nopl
call
sub
cwtl
pop
pop
mov
cmp
lea
clc
xchg
or
and
in
jl
pop
fdivrs
push
pop
mov
ret
pop
push
mov
push
and
cmp
jnp
cmp
scas
loop
sahf
mov
or
xchg
xor
inc
out
inc
xlat
subl
sub
subb
sub
sub
add
ret
adcl
sbb
add
mov
add
movzwl
or
inc
std
cmp
sbb
out
js
mov
xor
add
dec
inc
lods
mov
arpl
sbb
das
pop
mov
lret
subl
xor
push
pop
add
push
cmp
add
testb
outsl
push
cwtl
or
inc
or
jnp
adc
jmp
mov
inc
cmp
subl
pop
out
dec
mov
adc
nop
or
push
loop
lret
pop
inc
leave
mov
xlat
push
es
filds
or
aam
or
imul
cmp
inc
jne
insl
sti
push
adc
fstl
negb
pop
loop
mov
in
sbb
mov
fsubs
pop
jo
rcrl
leave
dec
insb
adc
rclb
int
sub
dec
inc
xor
jmp
or
hlt
fsubrs
rolb
imulb
or
mov
mov
clc
xor
jae
imul
jne
sbb
addb
movsb
jne
je
lahf
mov
mov
sub
les
pop
add
adc
pop
jbe
cmp
mov
or
repnz
mov
xor
dec
pop
pop
ret
arpl
adc
mov
aaa
mov
ror
fidivrs
or
scas
arpl
enter
les
shrl
stos
jecxz
cmp
adc
or
add
push
jns
enter
or
push
jns
mov
push
adc
lcall
or
rcrl
and
fsts
test
mov
and
test
je
je
je
roll
jp
flds
andl
scas
jne
xchg
fdivr
aaa
testb
aad
pop
hlt
xchg
cmp
xchg
push
jmp
in
repz
cs
push
scas
jl
movsb
insl
xchg
xchg
push
xchg
in
cwtl
xchg
inc
ret
xlat
lcall
sbb
mov
pop
lds
mov
or
enter
out
pop
mov
or
add
cs
push
pop
aas
daa
jge
jle
inc
add
daa
jne
aad
es
addr16
mov
pop
add
call
adc
and
pop
inc
lods
jbe
cmp
mov
movsb
nop
adc
push
mov
inc
dec
mov
and
sub
dec
xchg
sbb
or
shll
xorb
inc
xor
lret
loopne
loop
mov
xor
or
push
pop
fld1
jnp
dec
xchg
mov
cmp
mov
loope
call
mov
sbb
stos
and
or
cmp
add
mov
outsb
imul
pop
scas
leave
and
xor
or
mov
push
jae
sub
sbb
bound
sbb
fsts
scas
sub
mov
outsb
inc
mov
aam
mov
rcll
add
in
push
insl
insb
dec
daa
scas
sarl
pop
adc
adc
jbe
fs
ret
testl
sbb
or
loope
or
mov
jmp
xor
ret
xor
sub
and
jl
and
loope
or
sbb
adc
lods
xchg
pop
lahf
add
adc
repnz
pop
add
jmp
mov
jmp
cmp
fisubrl
pop
xor
and
shrl
ret
pop
lret
jmp
test
pop
nop
je
pusha
dec
mov
adc
repz
lea
mov
xor
inc
aas
adc
sbb
or
pop
jmp
in
fsubrs
xchg
pop
sbb
pop
mov
xlat
mov
test
test
jmp
test
jne
adc
xchg
add
cmc
je
sahf
push
pop
arpl
in
out
jmp
mov
push
iret
push
in
icebp
jmp
das
cmpsl
bound
sbb
xor
inc
cmp
inc
jmp
call
lret
mov
pop
mov
call
mov
stos
and
cli
push
sub
mov
mov
std
pop
push
cmp
and
push
out
dec
sbb
cld
mov
or
in
orb
add
dec
mov
and
mov
dec
shr
scas
notb
sub
sbb
ja
xor
insb
sbb
push
push
hlt
icebp
hlt
push
dec
push
andb
jne
andb
dec
in
jmp
inc
aaa
adc
adc
cmpsl
fists
cltd
add
and
xor
fdivs
lock
dec
je
sbb
lds
orb
dec
movsb
dec
add
loopne
ret
jnp
loope
xor
andb
add
mov
es
sub
or
cmp
cmp
and
scas
mov
cmp
mov
add
cltd
add
jle
or
add
or
mov
lahf
or
loop
sub
xchg
or
push
fdivs
ja
jl
adc
xor
gs
sbb
xor
scas
sub
sbb
sbb
nop
xor
add
pop
push
push
dec
inc
stc
push
adc
inc
adc
lods
rcrb
jmp
movb
rcrl
loop
icebp
or
icebp
sub
mov
jno
or
rcrl
movsl
pop
out
imul
pop
ret
pushf
jmp
and
adc
and
in
std
lods
and
pop
cmc
mov
inc
push
nop
pop
and
mov
movsb
jp
dec
icebp
scas
pop
cwtl
frstor
fisubl
movsb
jne
in
push
movsl
je
add
andl
mov
fimull
sbb
stos
jl
inc
or
lock
out
test
mov
popf
cltd
mov
dec
enter
or
cwtl
dec
pop
pop
mov
ja
sbb
orl
aam
outsb
subb
fbld
inc
jo
into
test
imul
fs
loopne
sahf
cld
sbb
pusha
in
cs
call
xchg
lahf
sar
cs
adc
in
lret
and
fldl
je
lods
push
and
xor
xor
lret
xchg
sub
xchg
imul
aas
push
roll
jge
cltd
pop
movsl
jmp
push
mov
sub
stc
mov
sbb
sbb
repnz
sub
or
scas
sbb
sbb
push
and
and
inc
inc
or
jno
pop
or
jnp
xchg
es
mov
sub
mov
sub
repz
jl
in
mov
xor
pop
in
ljmp
inc
rcrb
xor
ja
hlt
xchg
mov
das
push
divl
test
add
aas
and
imul
pop
das
mov
push
incb
push
gs
pop
sbb
call
xchg
jecxz
sub
daa
xchg
adc
lods
mov
clc
sub
jb
fsubl
and
xchg
mov
arpl
jmp
sbb
dec
jae
bnd
adc
adc
sarl
sbb
call
pop
push
lods
lock
lock
adc
out
jo
sbb
pop
mov
imul
sub
mov
call
int3
fs
mov
dec
stc
cmp
cs
dec
xchg
std
xor
mov
sub
sbb
test
arpl
dec
dec
loope
in
mov
adc
and
mov
add
and
popf
jg
in
jno
adcl
cmp
call
dec
sbb
push
sbbl
cmpsb
and
test
out
or
dec
mov
or
sbbb
or
ja
test
lock
cli
dec
pop
mov
mov
and
dec
push
or
jmp
std
mov
jecxz
dec
mov
mov
jmp
lds
or
mov
inc
mov
testb
in
scas
leave
adc
adc
jmp
movsl
pop
adc
jns
mov
or
adc
ja
je
mov
pusha
lahf
mov
inc
and
xchg
mov
nop
xor
mov
xchg
leave
dec
dec
and
nop
xchg
rolb
push
adc
insb
mov
imul
mov
push
xchg
dec
add
mov
mov
inc
int
jmp
mov
jno
pop
pusha
push
push
xchg
sbb
adc
dec
xchg
stos
aam
mov
xchg
adc
mov
mov
adc
jnp
ret
mov
shlb
push
ljmp
pop
subb
jmp
or
inc
and
test
xchg
scas
mov
inc
test
sbb
and
adc
adc
adc
inc
and
sub
incb
pop
xchg
rcr
jmp
sbb
inc
xor
sub
jne
out
push
rorl
rcll
call
mov
jne
cmp
or
mov
adc
and
adc
add
pop
jp
push
dec
and
mov
lcall
cmp
inc
add
int
sub
lock
push
push
push
cmpsl
ja
fsts
sbb
jno
mov
jne
jmp
inc
lods
inc
inc
xor
shr
cld
clc
mov
adc
cli
enter
xor
scas
add
or
mov
pop
in
sbb
and
pop
cmpb
sbb
xor
xchg
push
jmp
lahf
sbb
test
rcrl
ror
add
idiv
inc
js
mov
jmp
pop
mov
jg
adc
dec
xchg
add
adc
gs
lret
or
mov
test
push
inc
mov
call
movsb
and
or
ja
jmp
pop
lock
dec
or
or
inc
inc
je
les
jmp
xchg
sbb
and
lods
and
out
adc
scas
lret
adc
sbb
test
adc
fnsave
cmp
popf
movb
fdivs
cld
xor
enter
sbb
pop
outsl
add
pop
cmp
cwtl
dec
pop
mov
cmp
popf
push
mov
or
test
inc
adc
orl
adc
dec
aam
push
fnstcw
pop
scas
jecxz
lods
cs
ljmp
xor
out
jp
fidivs
mov
sbb
adc
mov
push
fnstenv
xor
outsl
push
stos
and
inc
adc
push
js
test
adc
cmc
dec
outsl
leave
fsubl
testl
mov
add
lods
fldl
cmp
lea
fldl2t
push
js
pop
mov
test
push
push
xor
jmp
dec
in
add
out
and
stos
cmpsb
or
je
loope
push
lret
jne
imul
push
jne
mov
inc
push
inc
mov
cmp
fidivrl
xchg
xor
hlt
stc
flds
sub
lods
and
pop
jmp
inc
sbb
mov
out
ds
or
movsb
mov
or
jb
andb
add
mov
mov
in
sbb
mov
xor
mov
bnd
inc
rcr
loopne
pop
push
sti
mov
sub
or
mov
cmc
push
call
loopne
jnp
rolb
or
push
test
jmp
loopne
jne
push
cli
mov
aas
mov
adcl
pop
in
stos
aam
inc
mov
adc
pop
push
cmp
aas
popl
push
and
jae
push
sub
mov
fs
fnstsw
ja
js
and
js
cmpl
mov
aad
lea
test
add
adc
fisttpll
sti
lret
outsl
cld
imul
mov
sbb
inc
in
jb
cmc
add
js
sub
in
mov
cmp
or
test
mov
sti
add
lods
sti
inc
sbb
sbb
push
mov
imul
inc
mov
fsubl
inc
pusha
stos
sub
ror
dec
es
mov
or
lea
mov
pusha
and
pop
int3
adc
push
in
call
out
test
addb
addb
xor
ljmp
xchg
pop
add
or
mov
jl
and
ret
repz
xchg
popf
cmp
je
cmp
je
sarl
push
mov
adc
test
div
ja
sub
mov
cmpb
aas
mov
cmp
adcl
je
push
in
mov
inc
mov
xchg
sub
sub
cmp
or
mov
arpl
cmp
scas
pop
and
jne
push
xchg
xor
adc
adc
std
lds
js
or
fstpl
inc
test
addb
push
aam
xchg
loopne
stc
mov
cmp
lods
aad
cwtl
jmp
clc
lcall
stos
ss
xchg
inc
xchg
dec
mov
pop
fdivrs
inc
out
nop
mov
les
mov
or
fsubrl
sahf
pop
arpl
push
mov
adc
mov
adc
dec
out
sub
push
mov
jmp
pop
pop
mov
mov
rcrb
jns
sub
mul
int
daa
and
loop
ret
push
xor
pop
pushf
push
call
cmp
repnz
inc
shll
inc
mov
xor
popa
jg
push
sbb
popa
xor
cmpsl
xor
iret
pop
push
sbb
jns
inc
and
es
xchg
hlt
dec
mov
call
xchg
enter
lcall
pusha
and
shr
testb
fst
and
jb
inc
or
jp
and
sarl
inc
mov
sub
inc
pusha
jmp
sub
pcmpgtb
mov
and
or
add
hlt
and
or
cmpsb
push
adc
jmp
or
sbb
or
lods
daa
roll
sbb
scas
je
sarb
jb
and
popa
fwait
cli
push
add
les
lea
test
pop
dec
jne
ret
out
sub
jmp
adc
fmull
sub
cmpsb
js
pop
push
lret
ja
int3
pop
cld
dec
out
inc
lahf
jmp
xchg
push
nop
mov
xchg
je
mov
test
cmp
cmpl
sub
adc
push
loop
mov
clc
or
xor
mov
mov
jmp
fstpt
xchg
xchg
push
out
mov
inc
in
dec
out
cmpsl
lock
and
icebp
enter
pmaxsw
cmp
les
fwait
add
sbbl
es
xchg
or
inc
inc
and
cltd
imul
js
push
repnz
sub
pop
std
int
scas
sbb
jb
mov
and
in
xchg
movsl
jno
cmc
loopne
adc
cmp
mov
sbb
shll
push
popf
push
cmp
dec
pop
jl
pop
je
xchg
stc
pop
sbb
fs
mov
jp
sbb
and
or
scas
inc
mov
sub
mov
or
add
pop
push
mov
je
fmulp
bound
or
popa
inc
jmp
pop
call
and
xchg
movsb
sub
push
mov
mov
mov
jge
adc
xchg
int
push
sub
sub
or
xchg
cmp
or
mov
fistpll
cmp
shll
mov
je
pop
or
out
scas
int3
add
mov
daa
push
shl
mov
jmp
dec
test
js
xchg
push
xchg
push
cmpl
push
jbe
in
sbb
mov
or
aad
lret
fwait
jl
inc
cmpsl
jbe,pn
cmp
mov
std
sub
jmp
pop
loopne
dec
sbb
into
call
mov
ret
mov
adc
inc
scas
xchg
je
push
adc
jmp
dec
xor
mov
xchg
push
or
adc
mov
imul
sbb
jmp
sbb
dec
add
shr
sbb
sti
adc
xor
push
bnd
and
dec
adc
jecxz
jmp
psubb
pop
push
insl
sbb
cvttps2pi
sti
notb
aaa
test
cmpl
push
nop
cmpsb
cmp
das
jge
int3
outsl
pop
mov
sub
insl
into
mov
lods
push
sub
adc
xor
push
adc
cld
shll
add
sbb
adc
das
sbb
adc
sbb
inc
pop
xchg
xor
test
mov
mov
leave
xor
mov
stos
leave
repz
inc
add
adc
pop
dec
ret
cmp
push
subl
or
mov
cld
cmpsl
dec
and
xchg
xor
rorb
and
pop
jmp
call
movsl
fdivr
stos
sub
lock
dec
inc
popf
jge
std
and
pushf
nop
fstpl
outsb
push
and
mov
sbb
adc
call
xor
movsl
push
std
adc
cmp
sarb
fs
jo
inc
cmp
mov
jle
jo
inc
pop
call
lods
sub
cmpsl
push
push
sahf
imul
cmp
fstpl
scas
bound
jmp
push
cmpw
aaa
ret
cld
mov
and
jmp
test
subb
addl
jnp
sub
lcall
sarb
jae
fimuls
push
fisubl
mov
ret
mov
push
push
scas
nopl
outsl
nop
push
adc
sbb
fistl
lods
add
es
ss
lea
sbb
test
inc
push
push
xchg
jb
push
push
dec
aam
adc
loopne
rclb
or
add
or
push
sub
adc
and
addr16
jo
lds
js
inc
jae
or
or
and
leave
loope
stos
mov
xor
adc
push
aad
adc
mov
fsubl
loopne
lds
ret
movsb
adc
addr16
sti
imul
cmp
movsl
xor
mov
cld
repz
or
mov
mov
std
adc
sti
jmp
icebp
xor
aas
mov
mov
sbb
fsub
scas
adc
inc
jbe
jmp
inc
inc
and
aaa
adc
cwtl
int
cmpsl
rclb
adc
mov
clc
lsl
sub
or
in
jne
adc
inc
push
call
adc
xor
xchg
lods
andl
ret
and
push
mov
xor
js
xchg
push
fmull
and
push
mov
or
sbb
push
mov
jl
or
ret
int
jno
mov
push
daa
pop
adc
adc
pop
xor
movsb
mov
and
cmpsl
xchg
jmp
cs
pop
cld
stos
std
push
popa
xchg
xor
xor
pop
inc
aam
ljmp
xchg
push
loop
push
mov
sub
adc
dec
vmread
push
orb
test
andl
aam
or
ret
sbb
mov
daa
xlat
sbb
inc
xorl
js
sbb
mov
rcr
lds
cmpsb
ljmp
mov
shlb
cmpl
pop
ja
or
and
cmp
xchg
sbb
mov
pusha
xchg
stc
mov
subl
adc
test
mov
shrb
xchg
jae
lods
sub
or
call
push
outsl
ret
mov
mov
lock
dec
cwtl
mov
jbe
cmp
lods
xor
dec
and
mov
add
cltd
outsb
je
popf
cwtl
mov
test
and
sbb
sub
cmp
or
mov
cs
xchg
or
xorl
lea
mov
stos
pop
add
mov
inc
inc
ds
pop
push
push
mov
aaa
xchg
clc
aad
jmp
inc
mov
out
or
rcrb
jo
cmpsb
xor
inc
dec
lods
aad
cmp
cmp
and
and
mov
xchg
loopne
adc
push
in
dec
test
cld
pop
nop
dec
mov
sub
mov
rclb
dec
mov
and
adc
enter
and
adc
loopne
mov
icebp
push
iret
or
dec
cmp
out
adc
cwtl
xor
imul
mov
icebp
or
or
ss
popa
or
xor
das
fmuls
mov
aad
pusha
jle
les
outsb
cmpsb
lds
cld
lret
jge
or
arpl
sti
and
jle
popa
sub
push
aas
add
adc
insl
std
or
or
lea
and
mov
and
inc
cs
pushf
mov
push
pusha
movsl
dec
test
repz
test
lods
adc
ds
insl
lcall
sbb
mov
icebp
pop
dec
and
or
mov
cs
stos
sub
xchg
leave
xor
cltd
sbb
bound
dec
mov
dec
pop
outsl
xor
daa
push
adc
jo
test
outsl
push
push
mov
xor
adc
push
and
xchg
stos
push
sbb
mov
loopne
inc
pop
and
sbb
mov
dec
inc
test
js
inc
xor
xchg
les
sbb
mov
push
xchg
outsb
adcb
dec
mov
out
adc
mov
jo
cli
je
ss
adc
mov
mov
out
icebp
jecxz
adc
cs
or
shlb
push
and
adc
inc
jg
loopne
cmp
cld
dec
mov
lahf
sbb
mov
test
push
repnz
lods
iret
push
sbb
mov
adc
or
pop
test
or
popa
pop
push
adcl
testb
jmp
insl
sbb
jge
mov
adcb
sbb
xchg
cld
cs
dec
mov
adc
xor
std
daa
sub
and
jne
sub
cmp
mov
inc
sub
ja
popa
mov
and
xor
lock
nop
ljmp
out
jecxz
test
ret
jne
pop
xchg
add
adc
xchg
push
or
cmp
push
dec
js
push
imul
cld
mov
or
imul
aam
and
inc
xor
aas
mov
jmp
xchg
adc
push
xor
clc
movsl
stos
fmul
pop
jno
outsb
repz
and
arpl
mov
lret
adc
stc
xchg
stos
vshufps
fbstp
push
mov
adc
cmp
aad
lea
add
xor
lock
movb
gs
insl
scas
or
sbb
mov
xchg
push
in
inc
or
nop
cmp
or
and
neg
sbb
ret
push
popf
lock
inc
mov
inc
sbb
dec
mov
push
aas
dec
daa
mov
push
jge
push
scas
mov
psubd
decb
lods
hlt
push
mov
cmpsb
pop
xchg
lods
push
lahf
cli
data16
clc
add
inc
cli
adc
mov
pop
outsb
gs
xor
ror
aad
cmp
pushf
cwtl
inc
push
jecxz
pop
or
add
xchg
call
hlt
scas
sbb
cli
mov
or
or
sti
bndldx
push
cmp
jbe
pop
ret
pop
dec
out
sbb
jle
daa
je
aas
xor
stos
dec
stc
jg
sub
adc
imulb
test
movsb
dec
lcall
add
adc
pushf
fsub
cs
stc
lods
sub
loope
jmp
lcall
pop
cmp
addr16
mov
jnp
sub
mov
mov
lea
push
push
jle
in
or
adc
or
cmpsl
inc
mov
xchg
adc
fisttpll
or
and
mov
push
sbb
jmp
clc
loope
loop
outsl
mov
repz
sbb
mov
pop
jnp
sbb
xchg
shrb
cli
jae
adc
jno
sub
jo
inc
push
loope
mov
xor
inc
lods
and
mov
or
push
movsb
pop
or
and
clc
cmp
dec
mov
das
push
and
mov
xchg
mov
jmp
scas
in
xchg
mov
cwtl
enter
xor
dec
mov
or
and
cmpsl
adc
aaa
bound
test
cwtl
outsl
xchg
pop
xchg
pop
pop
dec
lcall
movsl
jne
je
mov
movsb
sub
and
adc
adc
and
or
imul
fadd
lods
icebp
xchg
mov
inc
addr16
jmp
dec
mov
popf
dec
in
bound
movsl
cmpsb
push
dec
seta
jmp
test
mov
pop
and
jmp
mov
pop
out
and
in
adc
and
faddl
or
mov
lcall
bound
sbb
andb
adc
je
mov
or
or
mov
dec
ds
or
call
cmovp
popa
add
lret
das
mov
or
push
inc
mov
mov
jnp
adc
xor
repz
inc
mov
push
sarb
call
jmp
loope
int
fbld
xor
sub
mov
adc
xor
or
aaa
call
cli
ja
mov
jmp
pop
inc
aas
test
push
call
sbb
test
push
test
subl
mov
cli
pusha
in
not
mov
orb
in
xchg
push
push
and
iret
aaa
sbb
cmpb
adc
push
lret
sub
mov
push
lahf
shr
aad
daa
jo
sbb
jmp
addl
lea
scas
loop
pop
pusha
xor
mov
in
add
cmp
cmp
sub
les
xor
popf
jbe
inc
jmp
stos
loope
inc
or
subl
andb
or
leave
mov
bound
sub
daa
stc
add
cld
fcmovbe
inc
mov
loop
pop
sub
jge
mov
and
mov
leave
inc
pop
or
add
imul
pop
mov
fsubrs
dec
je
or
sbb
arpl
in
test
mov
xchg
js
cwtl
call
lahf
jle
cmpl
jne
dec
stos
push
dec
xchg
or
push
lea
sub
dec
out
and
mov
ror
and
popl
je
popf
adc
lcall
jmp
ret
cltd
or
adc
mov
jmp
xchg
iret
scas
cmp
and
adc
and
in
dec
mov
cltd
icebp
daa
push
les
arpl
or
ret
mov
mov
sub
sti
rcll
adc
mov
sub
mov
pop
pop
sub
xor
test
loopne
movsl
and
popf
mov
lcall
jecxz
jle
rcrb
out
sub
sbb
sbb
or
push
xchg
test
sub
movsl
repnz
mov
sbb
movsb
cmp
in
iret
out
inc
mov
stos
mov
mov
lock
sbb
xchg
stc
and
or
insb
pop
lcall
mov
lock
cwtl
sbb
das
aam
mov
mov
jne
cs
push
jne
add
and
mov
push
inc
or
mov
push
ret
jne
xchg
xchg
arpl
inc
pop
cmc
les
push
or
enter
or
int3
xor
daa
mov
jmp
repz
mov
setne
xor
sbb
jmp
lret
xchg
notl
pop
iret
call
nop
flds
jmp
push
aaa
cmp
xchg
mov
pushf
ljmp
jmp
mov
aad
sub
mov
movl
dec
in
push
dec
sub
in
xchg
ljmp
mov
cwtl
mov
pop
clc
aas
sub
xchg
pop
or
or
mov
outsl
mov
adcl
pop
mov
mov
mov
cld
leave
ja
add
jmp
or
mov
xor
cwtl
dec
pop
ljmp
and
aam
sbb
sar
or
lods
dec
orl
inc
and
mov
dec
inc
fmuls
adc
or
inc
add
xor
out
mov
xchg
stc
cmp
jl
jbe
and
cli
and
adc
and
fidivrl
sbb
repz
push
mov
mov
fidivl
std
pop
add
ja
add
inc
xor
les
xchg
shr
or
lea
xor
icebp
test
insb
mov
inc
js
pop
nop
or
jl
jmp
sub
cmp
inc
and
inc
dec
sysenter
sub
mov
xlat
nop
arpl
cmp
sub
jp
enter
enter
xchg
dec
clc
mov
mov
cmc
mov
xor
and
mov
sub
mov
imul
cltd
cld
insb
mov
mov
clc
mov
jno
sub
bound
push
xchg
aaa
adc
jmp
push
negl
lods
cmp
sub
movsl
cmp
or
adc
mov
mov
pmaxsw
test
cmp
jmp
test
mov
loope,pt
les
sbb
lcall
pop
mov
cmovp
or
mov
popa
or
mov
fwait
gs
fs
incb
cli
and
and
jne
out
xchg
rclb
inc
sbb
pop
adc
rorb
adc
add
push
sbb
and
and
sbb
shlb
jmp
xchg
cli
push
mov
jae
ljmp
push
ljmp
push
jge
std
sbb
ret
xor
inc
daa
fstl
or
aam
enter
mov
sbb
push
aam
mov
jnp
xor
pusha
pop
mov
or
lea
add
mov
mov
jge
adc
pushf
pop
mov
xchg
jge
fstp
add
pop
xchg
clc
mov
cmp
and
jle
sub
out
pop
fildll
and
xchg
dec
pop
or
ja
jno
cmpl
mov
xor
outsb
scas
sub
mov
clc
mov
movsb
adc
insb
lods
push
or
xchg
and
push
cmpsb
hlt
push
les
loope
movsb
add
pop
rorb
inc
les
fnstsw
mov
fiadds
pop
sbb
clc
fidivl
andl
fmuls
pop
add
popf
add
jne
push
pop
pop
mov
test
adc
imul
imul
adc
out
or
pushf
adc
in
test
xchg
pop
adc
aaa
push
pop
jmp
loopne
inc
xor
repz
insb
fwait
pop
mov
dec
xor
xor
cmp
sbbb
sbb
jae
cmp
repz
cmp
xor
pusha
jne
or
fsubl
lods
add
jb
lret
shlb
push
pop
daa
int
pop
jmp
icebp
xor
repnz
loope
icebp
xor
out
xor
loop
das
fisubs
fcmovb
or
cmp
add
iret
cli
sbb
xchg
imul
or
add
imul
add
gs
test
jo
test
cmpsl
ss
dec
mov
jns
stc
cmp
dec
nop/reserved
adc
shlb
push
je
pop
push
mov
test
sub
inc
add
mov
cmp
xor
adc
mov
shl
cmp
dec
call
mov
mov
pop
dec
mov
jl
lock
in
popf
sub
imul
jg
mov
mov
cmpl
mov
xor
daa
lods
into
jg
cltd
mov
out
repz
test
jp
adc
push
push
aam
mov
mov
imul
int
push
sub
clc
xor
and
clc
lea
mov
sbb
data16
xor
dec
imul
inc
and
mov
mov
add
push
push
call
inc
cmp
sbb
stos
ja
data16
mov
mov
xor
lcall
sbb
call
pop
je
dec
lcall
aam
int3
push
push
ret
pop
cli
jno
sub
pushf
paddsw
cld
cwtl
leave
pop
mov
xor
sbb
pop
inc
xor
imul
test
add
push
int
insb
sbb
test
stc
sbb
orb
adc
lcall
push
lock
adc
push
imul
xchg
push
xchg
adc
add
cld
and
cmp
fwait
inc
jl
outsl
lods
push
fwait
ss
and
push
push
nop
mov
pop
test
iret
xor
or
ficoml
and
jl
ss
dec
ja
sbb
pop
adc
jmp
out
popf
or
add
clc
jmp
orl
and
add
jmp
mov
test
adc
sahf
mov
in
mov
pushf
mov
pop
add
xor
mov
xor
and
enter
iret
inc
sbb
add
or
fs
bound
sub
shlb
call
in
out
stos
sub
add
push
nop
in
sbbb
jmp
fistps
jbe
rorl
mov
or
test
sbb
mov
ret
jae
fisubs
hlt
out
xlat
add
xor
test
push
daa
notl
and
inc
add
cli
dec
xchg
ja
adc
jb
lods
clc
scas
adc
fsts
and
test
ret
sub
ja
gs
outsb
pop
or
movsb
add
or
mov
adc
orb
imulb
inc
cmp
and
mov
or
mov
and
dec
push
loop
mov
andb
roll
dec
pop
in
mov
aam
fwait
jge
movsb
sahf
testb
cmp
mov
inc
je
jmp
adc
test
lock
jecxz
or
jmp
xor
pop
out
sub
pushf
cltd
roll
int3
nop
lret
xchg
sub
enter
push
fcoms
jecxz
test
lods
in
mov
xchg
push
fsubr
adc
lret
stos
imul
pop
xchg
incl
movsb
or
mov
fcomps
cmp
adc
xlat
outsb
mov
add
dec
and
or
int
push
jg
jg
inc
push
and
pop
and
sahf
cmp
jg
lret
xor
cmp
test
push
jmp
sub
inc
call
add
das
hlt
test
mov
jae
or
and
dec
sub
sub
and
and
sbb
adc
adc
bound
or
add
xor
cmp
mov
ljmp
mov
pop
cmp
dec
adc
add
push
or
mov
inc
pop
adc
dec
int3
out
sbb
adc
mov
mov
mov
mov
pop
xor
call
sub
adc
sub
adc
jmp
pop
pop
popf
lock
leave
adc
sub
add
mov
cmp
dec
mov
out
adc
xor
test
lods
dec
bound
push
fsubrs
mov
jae
pop
push
dec
cmp
mov
push
add
iret
or
adc
cmp
xor
shlb
cmc
or
aaa
xor
mov
popa
xorl
add
mov
movzwl
push
jmp
pop
lret
lea
int3
rorb
add
mov
or
push
xor
popf
mov
sub
lods
lret
shl
xchg
xor
nop
nop
mov
cmp
add
push
rcrb
jge
inc
adc
or
test
push
mov
push
or
adc
ret
subl
pop
mov
adc
inc
idivl
dec
inc
mov
aas
lret
sub
cmpl
fs
or
xchg
lcall
lods
xlat
sbb
inc
mov
sbb
inc
inc
push
jg
divb
cmpsl
cli
mov
lahf
aam
add
andl
lods
aad
or
adc
or
push
mov
cli
je
mov
sbb
stos
xchg
cmp
xchg
mov
or
sbb
arpl
jnp
adcl
jp
lds
xorb
dec
sbb
daa
push
or
sub
rcrb
cmp
je
pusha
lahf
sbb
lods
dec
or
jne
jge
add
or
and
add
ljmp
sub
mov
sti
cmpsb
lea
in
gs
sbb
mov
lock
jecxz,pt
jne
mov
cmp
cmp
lcall
sub
lret
cltd
pop
push
push
jecxz
cmp
and
push
addl
inc
mov
push
mov
shrl
xor
mov
inc
and
cmp
mov
jge
pop
pop
stc
ret
push
ret
jmp
into
call
cld
shrb
in
leave
popf
enter
cmp
pop
mov
jno
ds
jp
add
or
pop
dec
ss
xor
gs
test
push
jmp
push
sub
and
xchg
inc
add
add
add
push
into
aas
cli
xor
popa
call
mov
xchg
add
es
add
and
in
adc
jge
mov
daa
cmp
or
sub
jg
mov
call
fdivl
fdiv
ljmp
pop
mov
jmp
popf
sbb
lea
jg
add
jge
jnp
mov
pop
cmp
call
push
repnz
dec
xor
mov
adc
adc
mov
bound
push
pop
sbb
push
cmp
add
mov
sub
inc
leave
adc
jg
push
stos
aad
sarl
and
and
scas
mov
xor
rol
aaa
das
ds
inc
cmp
andb
les
bound
lgs
or
insb
xor
imul
push
jge
bound
pop
leave
lret
pop
ja
loopne
cmpsb
les
add
jbe
mov
lds
pop
sbb
xchg
dec
movsb
sub
cmp
inc
pop
sub
movsb
rdtsc
xor
add
xor
sbb
enter
add
inc
jl
and
mov
scas
scas
inc
push
pop
sbb
adc
fnsave
sbb
insb
dec
mov
inc
je
fmul
push
adcb
xor
pop
adc
sbbl
enter
push
pop
lcall
nop
push
stos
shrb
stc
or
in
out
and
aad
or
or
addl
ss
sub
xchg
mov
jp
cwtl
hlt
sub
xor
ret
je
bound
testl
or
mov
xchg
or
faddl
loop
cltd
out
shrl
jp
lds
dec
cs
das
or
jmp
add
dec
mov
xchg
mov
dec
cld
xchg
mov
adc
cmpl
test
loopne
mov
inc
sub
jmp
xchg
and
push
leave
int3
or
dec
push
test
fstl
inc
sbb
sub
xor
stc
pop
jle
sbb
sti
push
or
pop
lret
sub
rorl
cmp
push
je
lea
add
mov
addb
adc
adc
and
adc
and
adc
mov
pop
pop
jmp
gs
sub
xor
inc
sbb
in
dec
push
stc
sub
cltd
or
pop
push
jb
popa
sbb
ljmp
jge
std
jle
das
adc
dec
inc
xchg
lock
je
and
ja
scas
xchg
sbb
cmpsl
ljmp
test
jle
xor
and
adc
mov
push
sub
loop
lds
lea
mov
xor
orl
add
movsb
loop
mov
or
popa
and
inc
mov
push
ljmp
jbe
sub
movsl
jg
andl
push
xchg
out
in
inc
pop
xor
das
rorl
xchg
inc
mov
lods
and
mov
shll
not
add
push
js
or
aaa
pusha
or
into
insb
push
imul
jge
sahf
mov
js
fstpt
mov
lds
fldcw
and
test
mov
lahf
or
mov
adc
sub
es
rclb
sub
fs
adc
aaa
hlt
jne
or
fs
adc
inc
std
mov
jmp
dec
and
or
adc
sub
out
dec
mov
inc
or
lmsw
shr
cmp
cs
jmp
es
xor
popf
jmp
outsl
push
cmp
sub
sbb
aad
arpl
push
popf
push
rorl
orb
xchg
imul
mov
push
adc
cmp
adc
mov
sbb
cmp
lret
sarb
mov
sub
sbb
aas
push
xchg
ds
inc
bts
ljmp
mov
sub
mov
jns
cmc
adc
cmp
ljmp
inc
xchg
arpl
bound
mov
insb
xchg
jbe
cmpsb
stc
or
add
or
mov
mov
cmp
push
stos
mov
nop
dec
ret
mov
or
xor
mov
jmp
mov
push
xor
pop
stc
pop
test
incl
imul
adc
je
push
fstps
push
sub
push
out
pop
out
jnp
addr16
aad
nop
lea
mov
adc
sub
add
fstp
jmp
sub
int3
push
and
pop
sub
push
push
add
dec
or
aaa
jl
psubd
xor
cmp
cmp
jmp
shl
mov
push
popa
push
sub
inc
or
das
adc
push
cmp
jecxz
jl
sbb
std
inc
cmpsl
pop
adc
adc
stos
stos
xor
sbb
jmp
xchg
push
cmpsl
pop
pop
pop
enter
imul
mov
pop
jmp
sub
sbbl
add
sbb
or
and
loope
mov
or
arpl
jae
mov
rcll
cli
lahf
in
dec
cmpsb
cmp
mov
and
icebp
test
sbb
dec
out
pop
mov
into
sub
cltd
inc
sbb
or
dec
cmp
xor
fsincos
push
add
lret
and
inc
cmp
jne
dec
lea
push
mov
jbe
xchg
jge
call
mov
je
jge
lock
mov
cmp
cmp
xor
mov
mov
adc
mov
push
inc
mov
fs
lret
push
rcrl
push
sub
or
cmc
and
jle
pop
adc
push
call
xchg
bound
jno
or
fildl
mov
ror
jns
or
mov
clc
cmc
mov
or
or
popl
push
mov
ret
adcl
sub
dec
push
dec
push
jmp
call
adc
fidivs
xchg
popa
mov
ds
ss
mov
adc
and
push
and
adc
das
lret
nop
sub
and
mov
aam
inc
mov
adc
mov
scas
sbb
or
pop
mov
adc
dec
lock
loop
mov
jne
push
call
sbbl
outsb
pop
xor
add
cmp
dec
adc
or
add
nop
cld
jmp
sbb
push
clc
sbb
inc
clc
add
mov
pusha
sbb
xor
rorb
lcall
outsb
xor
hlt
mov
push
adc
movsb
dec
inc
lds
mov
std
sbb
inc
inc
jnp
adc
fcmovnbe
in
xor
xor
xor
mov
cmp
sbb
sub
or
mov
mov
imul
jmp
mov
add
or
inc
call
lcall
jl
addb
xor
mov
inc
inc
mov
adc
mov
dec
xchg
lcall
sub
mov
bnd
mov
aaa
fmull
stos
xor
cld
mov
int
in
imul
dec
xchg
out
jno
mov
pusha
pop
fadd
sbb
call
adc
mov
sahf
xchg
sahf
xchg
lfence
popa
or
daa
inc
sbb
lea
sub
pop
aas
push
pop
cwtl
movsl
adc
jno
int3
test
mov
sbb
jmp
icebp
sbb
les
cmc
adc
adc
sbb
xor
cmp
xor
popf
dec
pop
mov
mov
or
mov
cltd
mov
mov
lahf
adc
lods
sbb
icebp
scas
inc
pop
fcoms
test
jbe
xor
add
ljmp
ret
xchg
and
mov
add
pop
in
cmpsb
jle
je
xchg
adc
or
mov
push
add
sbb
pop
cmp
inc
enter
iret
mov
inc
and
xchg
cmc
rcll
adc
push
pop
sbb
pop
push
je
pushf
jne
mov
push
lods
lahf
movsb
stos
int3
ja
mov
sbb
or
jne
push
jg
cmp
shrl
rol
ss
dec
and
stos
jmp
xor
dec
lds
in
adc
enter
stos
mov
inc
sbb
rdmsr
jl
ds
adc
fwait
jl
and
mov
add
insb
pop
cmp
inc
into
mov
mov
lea
lock
ret
adc
xor
jbe
cmpsb
push
repnz
dec
adc
aas
addr16
or
sbb
inc
mov
sbb
enter
add
mov
sbb
dec
or
call
xchg
sbb
in
adc
stc
inc
mov
pop
movsb
gs
inc
repnz
sti
push
mov
mov
adc
or
pop
loope
push
adc
pop
xor
div
push
repz
inc
mov
push
jae
lea
and
dec
sub
mov
rol
data16
pusha
and
push
add
shlb
mov
add
rorb
mov
push
adc
xor
js
push
mov
movsl
and
dec
nop
push
pop
sti
add
add
nop
adc
data16
adc
aas
shlb
pop
adc
xchg
cwtl
xchg
inc
inc
dec
mov
jmp
adc
out
add
mov
loop
gs
or
xchg
lcall
inc
xor
push
icebp
scas
pop
hlt
arpl
cwtl
add
mov
notb
pop
pop
into
jb
mov
and
sub
sar
jnp
push
pop
or
jmp
inc
jne
vsqrtps
pushf
xor
je
scas
enter
adc
push
fistpll
scas
push
jae
cs
mov
jmp
ja
aas
sahf
adc
add
pop
std
and
jo
imul
mov
test
shll
and
dec
inc
mov
in
mov
out
mov
adc
xchg
shlb
jmp
push
mov
inc
cwtl
mov
dec
sbb
rclb
into
jne
je
insl
mov
mov
in
in
xchg
mov
loope
adc
dec
and
aam
rcl
call
mov
mov
movsb
inc
inc
jmp
mov
out
xor
or
mov
out
aam
sbb
scas
cmpsl
cmp
sbb
aam
adc
and
inc
push
daa
add
or
push
pop
iret
pop
ljmp
mov
ljmp
jbe
sub
mov
ss
addb
mov
jecxz
jns,pn
mov
fsubrs
andb
je
mov
movsl
nop
dec
orl
and
xlat
stos
fsub
add
call
in
cwtl
mov
mov
pop
mov
mov
mov
mov
cmp
loope
adc
call
pushf
scas
push
sar
mov
icebp
dec
out
insb
adc
lods
subb
cmpsl
mov
and
adc
cli
mov
sub
pop
cmp
pop
xor
and
and
sbb
cmpl
dec
testb
add
imulb
cmpsb
test
loopne
fs
mov
pop
iret
inc
push
push
roll
ret
mov
sti
sbb
xchg
test
adc
mov
push
out
popa
ret
or
add
outsb
fmuls
inc
pop
shlb
jmp
jmp
xchg
mov
leave
pop
into
pop
lret
push
adc
or
sahf
incb
lock
push
mov
mov
add
leave
push
jmp
push
xor
and
ljmp
dec
dec
sub
sbb
fdivrl
out
jp
je
jmp
mov
add
pop
popa
push
outsl
adc
xor
adc
lea
push
loope
jge
ss
sub
loop
test
sub
sub
adc
inc
add
mov
sub
dec
lcall
cwtl
jae
pop
sbb
adc
rolb
lea
xlat
test
dec
adcl
cmpsb
sti
in
mov
ljmp
incb
vpminsw
cmc
int3
mov
scas
sahf
pushf
movsl
ljmp
movsb
ds
pop
push
mov
dec
call
jp
movsl
dec
subb
testb
mov
mov
jle
inc
rorl
adc
fstps
shrb
adc
xchg
or
mov
stos
or
mov
jmp
fildl
push
xlat
mov
test
cmp
xorl
imul
adc
sbb
scas
or
jl
test
flds
fdivs
out
sbb
dec
or
ss
push
fiaddl
dec
sbb
or
xor
aas
lock
movsb
xor
enter
inc
xor
xchg
pushf
and
xor
or
ss
out
jns
pushf
insl
and
lret
xor
inc
push
enter
inc
add
subl
adc
lret
enter
test
or
inc
cmp
adc
ret
and
jo
and
ret
mov
or
mov
js
adc
or
push
push
mov
mov
int3
inc
push
or
fidivrs
jg
xor
subb
push
xchg
test
test
xlat
bound
jecxz
sbb
lcall
movsb
and
mov
xchg
popf
jle
fwait
int
pop
cmp
dec
adc
nop
cmp
push
xchg
sub
cmp
in
push
loopne
or
cli
push
adc
lea
mov
popa
push
pop
adc
pusha
or
repnz
pop
or
loope
mov
stc
hlt
ficoml
push
into
mov
push
fs
ret
fisttps
pop
dec
sbb
call
mov
ds
or
add
das
mov
in
adc
jl
cmpsl
push
mov
cwtl
lahf
sub
ljmp
gs
je
cmp
ret
in
mov
pop
pop
adc
cmp
in
insl
xchg
pop
xor
push
ret
clc
inc
mov
dec
pop
sbb
lahf
bound
ds
test
mull
inc
iret
mov
cmpsb
mov
sbb
roll
adc
inc
or
xchg
xchg
xchg
xchg
adc
sbb
adc
ud2
movb
mov
adc
dec
xor
jno
jecxz
pop
movsb
lods
adc
incl
mov
sbb
loop
add
jle
mov
ss
inc
mov
push
push
xchg
adc
cmc
inc
and
mov
test
push
sbb
add
mov
popf
das
fldl
inc
jl
mov
push
dec
mov
mov
mov
in
push
push
jb
jg
std
jp
or
cmp
test
adc
jmp
push
popa
ja
jbe
sub
or
pop
and
out
or
mov
gs
and
cmp
enter
jg
mov
adc
mov
pop
outsl
outsl
cmpl
sti
mov
lcall
cmp
jo
ds
xchg
lds
cld
ja
rclb
sub
xor
lret
jno
aas
fsubp
ljmp
in
jne
or
sub
mov
jl
mov
hlt
cmp
add
dec
mov
lea
push
xchg
push
jb
mov
xor
pop
inc
mov
js
add
dec
pop
dec
mov
jmp
mov
jo
dec
mov
cmc
jg
xor
sbb
dec
insl
out
cmpsb
imull
pop
loop
enter
mov
lret
xor
daa
mov
aam
and
pushf
inc
iret
and
js
popf
js
xor
and
loope
cmpsb
rcrb
pop
or
xchg
xchg
dec
or
hlt
ss
bound
push
or
shlb
addb
decl
cmp
stos
xor
adc
xchg
cmp
add
jae
je
stos
dec
adc
adcb
mov
jl
out
mov
and
pop
mov
jl
add
mov
jge
jp
js
push
push
mov
outsl
and
mov
mov
xor
pop
jb
pop
pop
xor
push
test
sub
outsl
and
jo
inc
pop
xchg
into
lods
cld
in
push
push
int
or
nop
adc
fcoms
dec
mov
push
push
jns
sub
push
std
jmp
pushf
sar
shlb
ret
scas
jmp
sub
nop
lea
jne
cmpb
add
xor
jo
ljmp
pop
jmp
xor
mov
pop
dec
sub
push
ljmp
push
aad
jg
decl
add
in
stos
adc
mov
pop
sbb
cmp
mov
sub
or
int3
sub
mov
push
sub
adc
sbb
push
sbb
and
test
jge
pop
lcall
or
test
inc
xor
loope
and
jae
jbe
fidivrl
fs
popf
xchg
and
aad
sub
pop
enter
sbb
or
divb
rclb
into
inc
mov
and
outsl
mov
out
in
in
loopne
and
mov
outsb
movsl
sbb
scas
inc
adc
and
aad
sbb
cmp
mov
cmc
adc
mov
lds
mov
xchg
dec
sbb
push
xchg
test
icebp
subl
call
pop
clc
pop
cmc
push
fidivl
leave
or
mov
cltd
xchg
das
bound
negl
daa
sub
pop
loop
jecxz
sar
pop
adc
add
dec
mov
jb
add
dec
inc
adc
test
sub
mov
loopne
push
pop
inc
cmp
shl
push
inc
aam
sarb
cmc
and
jb
pop
adc
dec
adc
icebp
push
in
clc
mov
inc
enter
daa
sub
sub
or
cwtl
mov
inc
pop
mov
or
jmp
ret
or
push
mov
dec
adc
xchg
xorl
cmpb
jbe
shll
std
push
ljmp
inc
or
jbe
adc
loope
xor
sbb
movb
adc
sbb
inc
inc
out
dec
and
mov
add
jle
add
and
cmpb
sbb
sub
or
cmpsl
dec
stos
dec
loop
mov
fmul
cmpsl
pop
loope
lods
dec
push
rorb
sub
inc
jns
xchg
inc
out
add
mov
bound
jl
test
out
mov
push
mov
jge
enter
or
pop
or
movsl
jmp
fs
mov
sub
ss
mov
loope
loopne
ret
inc
cmp
xor
mov
ret
and
adc
repz
adc
adc
pop
addl
dec
adc
inc
shl
cmc
dec
dec
or
pop
add
or
pop
jmp
cmp
push
movsb
cmp
add
out
pop
adc
dec
mov
mov
push
loopne
aaa
aam
lock
aam
pop
and
sbb
and
icebp
fisubl
push
sbb
aas
push
jmp
fcoms
out
or
sub
and
imul
es
es
dec
hlt
or
lock
fnstenv
inc
pop
test
pop
inc
pop
test
into
fimuls
adc
jbe
lock
mov
pusha
xor
mov
dec
imul
adc
adc
sbb
movsb
popf
push
mov
pusha
jae
add
hlt
push
lea
daa
rcll
or
les
hlt
xor
sbb
dec
sbb
mov
mov
and
je
mov
mov
cmp
jmp
mov
in
sub
test
jp
pusha
out
sub
sbb
xchg
in
ja
pop
shl
fiadds
cmp
mov
fbstp
sahf
out
xchg
add
les
xor
test
inc
mov
adc
push
xor
push
adc
sbbb
adc
shll
pop
xor
and
adc
je
adc
and
xchg
mov
in
in
xchg
xor
cs
cmp
xlat
cld
mov
ss
xor
clc
out
add
xchg
xlat
mov
and
lods
or
subb
popa
dec
jg
adc
ret
dec
add
fstpl
aam
or
addr16
cmc
mov
inc
ja
push
addr16
data16
pop
movb
push
les
icebp
inc
or
add
iret
or
mov
jle
lahf
fdivl
mov
je
or
inc
push
or
js
pop
sti
cld
pop
or
or
inc
ljmp
jge
push
mov
jg
hlt
sub
or
addl
push
pop
cmp
cmp
movsb
mov
sub
push
test
and
adc
mov
jbe
mov
lahf
int
sub
sti
xchg
mov
rcrl
pop
inc
and
daa
repz
mov
inc
pop
sub
xor
xor
adc
or
pop
scas
insb
and
scas
ficoml
pop
scas
sbb
lea
sbb
mov
repnz
sub
jno
jno
pop
push
call
outsb
gs
or
nop
xchg
or
rclb
enter
jmp
test
popf
and
fstl
das
sbb
cmp
xchg
mov
add
test
enter
loope
je
adc
mov
loop
adc
test
enter
lock
push
jbe
dec
mov
mov
or
inc
xchg
jae
ja
xchg
push
xor
scas
shlb
pop
dec
je
push
add
push
adc
test
push
sub
jbe
jns
or
orl
xor
dec
or
jle
or
movaps
fidivrl
push
adc
jmp
inc
inc
inc
data16
and
and
mov
test
fsts
call
jg
mov
jge
or
mov
js
jle
adc
jmp
cwtl
adc
dec
sbb
cmp
push
jg
mov
inc
push
cmp
jle
push
xchg
dec
les
mov
jp
or
add
in
andb
fcmovne
fnstenv
sbb
or
enter
ret
xchg
fadds
and
nop
clc
les
cli
and
pop
fsubrs
loop
xchg
shlb
jmp
adc
and
aam
cld
pop
mov
inc
jo
push
decb
loope
dec
or
mov
and
cltd
aam
mov
negb
sub
call
pushf
add
pop
clc
nop
sbb
and
xchg
sub
leave
cmp
test
or
add
xor
mov
sub
push
push
cmpsb
push
outsl
sbb
fdivrs
mov
divps
call
stos
and
mov
cs
dec
mov
pop
add
push
jnp
cmp
loop
out
inc
das
push
push
xchg
imul
push
data16
cmp
add
insb
in
jl
jo
in
out
cld
imul
pop
mov
xor
inc
pop
adc
sub
xor
fstl
adc
xor
roll
xchg
cmp
in
stos
xlat
es
test
dec
mov
imul
inc
jno
mov
mov
inc
sub
call
add
jge
mov
int3
sub
mov
stos
outsl
xchg
nop
and
jne
xchg
cmp
fmull
jne
call
add
push
das
mov
aam
sub
adc
adc
jbe
and
adc
fnstenv
push
lea
xor
mov
and
xor
cmp
sub
sbb
mov
add
push
inc
inc
es
adc
and
in
pop
and
jl
mov
gs
push
pop
pop
adc
movsb
and
and
or
jns
mov
or
adc
xor
jp
cmp
adc
mov
adc
insl
aam
mov
or
dec
adc
cmp
jo
out
push
mov
rclb
popa
pop
mov
in
stos
hlt
call
js
gs
adc
or
es
adc
mov
scas
xchg
ss
sahf
adc
adc
mov
xchg
scas
daa
ds
sub
int3
xchg
call
mov
pop
dec
mov
cmp
mov
cmp
or
pop
adc
mov
iret
pop
subl
or
rorb
sbb
adc
push
jbe
dec
sub
mov
loop
mov
or
push
psubsb
incb
mov
mov
movsb
std
xchg
mov
dec
xchg
dec
add
test
xchg
loopne
test
aaa
lea
xchg
je
dec
push
or
shl
dec
jle
xchg
pop
nop
lea
or
jnp
mov
rolb
movsb
insb
xor
scas
mov
nop
sub
enter
jo
inc
cmpl
lcall
lret
push
inc
push
xor
adc
movsb
sub
adc
and
fs
jo
lods
jp
cmp
mov
xor
inc
insb
and
mov
cmp
mov
adcb
ds
add
xchg
push
inc
sbb
negl
lret
mov
test
jge
mov
mov
xchg
sbb
mov
cmc
sbb
adcl
xchg
xor
and
or
fstl
jmp
pop
stc
out
je
stos
mov
je
andl
jmp
mov
push
ja
push
out
xor
ljmp
mov
sbb
js
testl
pop
push
sahf
xor
aam
mov
pop
clc
lods
push
bound
mov
adc
pop
jmp
hlt
add
adc
in
int3
pop
pop
jmp
and
lock
cmp
pop
xchg
repnz
xchg
test
pop
lock
xlat
insl
ljmp
inc
push
inc
movsb
out
xor
inc
inc
dec
bound
mov
shl
stc
cmp
push
sub
jno
pop
jno
jl
push
inc
xor
xor
push
adc
jmp
xor
mov
bound
and
out
adc
xor
mov
xor
daa
notw
jmp
scas
in
call
dec
cmp
mov
jmp
push
enter
mov
jae
mov
dec
pop
das
xor
sbb
inc
lea
push
or
imul
bound
jo
stc
jae
stc
pop
ja
fbstp
scas
push
mov
ljmp
movsb
push
and
dec
addr16
rcrl
xor
mov
and
repnz
mov
cltd
push
xchg
xor
hlt
sahf
movsl
jae
mov
cltd
mov
inc
jg
push
ret
dec
adc
loope
lods
xor
xor
adc
stos
gs
sub
inc
imull
jp
inc
iret
xchg
push
bound
xlat
inc
xor
and
xchg
xor
push
inc
leave
js
add
jmp
and
inc
mov
jnp
sahf
or
call
bound
rorb
iret
jo
fldt
aaa
fnstenv
dec
sub
test
mov
daa
xchg
nop
int
int
push
mov
sbb
cmpb
jmp
cmpsb
inc
mov
jp
mov
mov
imul
cmp
push
dec
lods
sti
xlat
dec
add
sbb
inc
adc
mov
pop
sub
and
jae,pn
rorb
add
mov
pop
lea
jge
sbb
dec
test
leave
push
hlt
popa
sub
add
icebp
dec
push
loopne
fwait
rorl
xchg
xor
pushf
xchg
or
int
and
dec
int3
ds
neg
rorb
inc
popf
loop
in
dec
bound
or
sbb
aad
sub
pop
and
xchg
or
adc
mov
enter
test
mov
icebp
sbb
js
push
mov
add
dec
sbb
shll
in
pusha
or
cmp
negb
cld
or
cs
inc
push
mull
mov
sub
scas
and
arpl
and
shll
or
inc
push
mov
mov
jp
and
adc
in
fldl
gs
push
jmp
xchg
dec
add
decb
je
sti
bound
aad
ja
jne
sub
andl
cs
out
jo
inc
add
enter
lea
mov
and
jge
les
xchg
mov
in
aam
mov
push
mov
movsl
or
clc
fmuls
inc
adc
and
inc
fisttpll
cmp
or
test
rorl
push
shrl
stos
fisttpll
jg
sbb
icebp
lea
push
jle
adc
sbb
sbb
cli
cltd
inc
xor
adc
aad
xchg
fisubl
and
in
call
push
add
sub
cld
and
xor
sub
sbb
jne
mov
push
add
setl
mov
cmp
sahf
xchg
sub
mov
xchg
add
push
xor
inc
lods
and
sub
pop
lcall
cmp
sbb
sbb
inc
jne
mov
sub
mov
sub
pop
or
je
fisttpll
push
adc
jmp
jne
xor
mov
dec
in
jnp
sbb
push
aad
xchg
je
mov
inc
lds
push
jmp
lock
dec
outsb
push
jle
jnp
test
lret
adcl
sub
and
insb
bound
dec
mov
dec
mov
jmp
xlat
lods
enter
dec
outsb
mov
jmp
mov
xchg
or
stos
xchg
jb
dec
lea
lret
imul
orl
sar
je
pop
or
fdivrs
jb
mov
push
jp
hlt
fs
insb
dec
repnz
xchg
rorb
jns
mov
push
xlat
jns
lret
push
push
fsubrl
xchg
add
xor
je
fdivr
test
cmp
cld
and
outsb
push
orl
iret
mov
add
cmpb
adc
mov
inc
aad
inc
add
push
iret
imul
mov
imul
cmp
or
lods
arpl
mov
in
les
loop
cmpsl
jp
aam
dec
or
lds
roll
add
sub
mov
sbbb
mov
jle
aad
dec
and
inc
add
and
ljmp
adc
inc
lcall
cmp
xchg
dec
add
sbbb
movsl
push
into
lock
pop
enter
data16
test
movsb
cwtl
sbb
icebp
push
cmp
test
fdivl
fs
mov
gs
push
pop
insl
fs
test
push
rolb
clc
les
push
and
xor
jmp
and
pop
xor
insb
stos
sub
lcall
mov
mov
mov
lea
int
repnz
mov
cmp
pushf
xchg
gs
lock
mov
mov
or
cwtl
sub
jmp
jg
xor
or
push
xchg
dec
enter
pop
testb
clc
push
hlt
mov
cmp
out
lods
subl
push
inc
or
or
out
push
adc
inc
sahf
xor
stc
cltd
sti
add
jg
das
or
mov
lea
sbb
sub
fiaddl
jl
in
sub
int
test
aad
sbb
aad
mov
dec
xor
dec
loopne
ret
jecxz
stos
mov
je
dec
jno
sub
out
movsb
cmc
loopne
jo
sub
mov
leave
pusha
jmp
mov
adc
adc
xchg
ljmp
jne
adc
lahf
mov
adc
aam
jmp
cmp
call
or
jl
in
jmp
or
and
fcoml
push
sub
cmpsb
sahf
add
and
fs
pop
lret
sbb
and
in
push
dec
data16
movsb
rcpps
cmp
call
mov
jmp
ja
fisttps
and
sbb
inc
bound
and
mov
ficoms
jg
adc
adc
sbb
xor
and
movsl
insb
sub
cs
rcrb
iret
inc
sub
test
loopne
ljmp
sbb
in
mov
or
outsb
imull
mov
and
push
mov
fldl
push
je
sub
sub
adc
push
or
mov
sub
je
pop
ljmp
dec
mov
xor
js
data16
jmp
sbb
loope
aas
xor
ret
sbb
dec
push
cmp
push
sbb
enter
out
daa
flds
sub
mov
adc
and
cmp
outsb
pop
pop
je
or
jl
loope
idiv
inc
fiadds
xchg
clc
add
push
fs
aaa
rorb
jmp
mov
les
mov
aam
and
cmc
cs
push
or
xchg
cmp
stc
xlat
out
push
xor
scas
sub
popa
outsl
sub
dec
cmp
dec
sub
pop
cs
push
popa
fstps
sbb
andl
cmpsl
inc
jge
and
dec
xorb
and
xorb
xchg
pusha
fimull
and
xchg
mov
ret
data16
adc
xlat
test
out
adc
push
pushf
mov
push
push
jge
mov
jp
mov
clc
dec
ficomps
adc
xchg
add
cmp
jb
movsb
or
inc
scas
pop
or
fisubrl
nop
and
lods
add
lods
in
sub
scas
mov
sahf
add
cmpsb
out
cmp
and
dec
stos
ficoms
sbb
leave
lea
push
dec
stc
mov
hlt
ret
out
push
scas
faddl
xchg
mov
ret
pop
rolb
xor
xor
xchg
xor
jle
das
aas
xlat
scas
lcall
mov
imul
lret
dec
push
mov
imul
jmp
test
mov
xor
mull
jle
fcmovb
sbb
xor
clc
nop
faddl
jle
cmp
cmp
mov
nop
leave
cmp
popf
pusha
push
addl
jo
jmp
jno
add
in
add
adc
and
cwtl
ret
push
les
stos
jo
loope
stos
add
pop
sbb
jo
loope
and
icebp
and
fucomp
stos
dec
push
out
data16
mov
hlt
fwait
dec
sub
mov
es
cld
xor
jg
pushf
pusha
mov
aam
ficoms
stos
inc
xor
pop
shrl
test
adc
dec
add
repz
jl
pop
cmp
je
cmp
mov
push
mov
es
push
out
adc
sbb
cs
cmpb
pop
pop
leave
fs
je
stos
add
ss
push
outsb
clc
nop
outsl
mov
push
push
push
mov
or
fildl
sub
xlat
call
mov
pusha
je
sub
xor
repnz
add
jp
mov
hlt
or
xor
out
int3
push
fcmovnbe
and
aam
lds
xor
cmp
xor
jg
inc
mov
lcall
sub
mov
lods
cmpsl
jg
clc
jne
mov
cs
pop
sbb
mov
push
or
jp
ret
dec
and
xor
adc
add
xchg
mov
mov
fidivs
les
inc
mov
ljmp
lock
and
ljmp
cltd
sub
call
lods
and
sbb
shrl
ror
jnp
scas
scas
lds
test
xlat
sbb
push
push
sub
mov
mov
inc
xor
inc
inc
cwtl
inc
or
jo
sub
cmp
bound
cld
sub
add
push
cmp
or
push
lahf
cmp
jg
lahf
dec
pop
xor
sub
jmp
mov
and
push
or
cmpsl
fwait
mov
xchg
add
inc
push
test
ja
es
mov
xor
jbe
out
and
adc
cld
xchg
test
loop
xchg
dec
sub
jo
xor
call
xor
aaa
sub
and
push
cltd
jecxz
sbb
mull
fidivrs
int3
xor
test
inc
cmpl
ss
scas
mov
push
xchg
rorb
push
xchg
xor
mov
sub
add
lret
pop
mov
aam
das
arpl
in
or
inc
pop
ret
lods
cmp
and
sbb
je
enter
xchg
or
push
inc
push
ret
pop
hlt
mov
pop
jge
jp
fisubl
and
sub
es
sub
fs
dec
cmp
cmp
loopne
int3
das
xchg
ret
pop
cld
sub
test
xchg
jno
xchg
lods
mov
stos
fnsave
and
push
mov
and
xor
and
or
sub
out
adc
jmp
sub
int
add
xchg
int
inc
push
add
shr
incl
cli
jp
js,pn
or
cmp
notl
jg
sbb
ljmp
pop
adc
push
pop
jle
adc
push
std
xor
pop
xor
out
xchg
call
repz
sub
add
dec
fmul
aas
sbbl
rolb
out
arpl
mov
xor
sarb
xchg
fmuls
shlb
adc
adc
hlt
scas
cmp
pmaxsw
mov
pop
push
pop
stos
xchg
in
loope
mov
push
aaa
sahf
or
cmp
popf
xchg
or
adc
adc
pop
mov
pop
and
inc
add
icebp
imul
das
sub
mov
aas
pop
mov
pop
adc
cli
nop
pushf
jne
push
test
in
xchg
or
xor
push
sub
jnp
cmp
jne
mov
lods
dec
adc
rol
and
out
pop
je
orb
lahf
movsb
inc
pop
add
push
jmp
xchg
bound
lds
xchg
pushf
inc
xor
pop
sub
add
int3
mov
clc
std
pusha
push
xor
add
pop
int3
push
test
popa
test
fsubs
mov
xor
je
rcr
jae
das
andl
mov
add
or
addl
roll
add
cmp
insl
jne
aam
icebp
push
jno
or
addb
sub
push
mov
negb
loope
push
insb
inc
pop
inc
pop
adc
std
sub
sbb
mov
mov
xor
lock
cs
jne
add
xor
dec
loop
lret
dec
dec
mov
pop
xchg
adc
jmp
mov
lods
orb
jmp
mov
subb
mov
cli
std
fistpl
xor
loopne
cmp
loope
jle
gs
xchg
adc
sahf
dec
push
push
sbb
push
sbb
test
add
stos
mov
cld
add
loop
ja
es
cli
mov
fwait
and
dec
and
std
dec
lods
pop
jo
pop
xor
xor
dec
int
jo
push
cmc
mov
call
fisubrs
inc
stos
xlat
repnz
hlt
sbb
mov
js
pushf
xor
jmp
inc
xor
add
cmp
dec
jmp
je
xor
shlb
xchg
test
in
dec
cmp
xor
cwtl
and
loope
jb
adc
leave
jbe
add
enter
pop
sbb
push
sbb
adc
dec
xchg
add
jmp
std
dec
mov
xchg
jp
jae
lret
pop
iret
lods
gs
outsl
test
test
ret
and
push
push
flds
arpl
pop
sbb
jmp
sub
adc
pop
xchg
scas
or
mov
and
outsl
loop
adc
push
nop
mov
scas
sub
test
fwait
xor
jmp
xorb
push
out
fnop
xchg
sahf
adc
xchg
fs
inc
mov
push
lcall
mov
adc
popa
xchg
adc
lea
jl
nop
addr16
adc
mov
adc
cltd
xor
std
and
push
inc
pop
jo
pop
testb
sbb
mov
xor
and
cld
mov
or
inc
sub
or
xorb
mov
and
pop
jl
loope
sub
mov
cmc
js
insb
or
fsts
movsl
cmp
bound
sub
fidivrl
dec
push
mov
ja
movsl
push
cmp
and
das
jp
sub
jg
inc
sub
push
aaa
push
jmp
inc
xchg
cld
adc
test
xlat
nop
cmpsl
jmp
push
xchg
xchg
mov
mov
xor
and
and
push
je,pn
mov
fmul
sub
test
and
xchg
mov
inc
aam
sub
sub
xchg
dec
pop
movsl
loope
xchg
mov
vpcmpgtw
or
mov
mov
int
daa
add
xor
push
aaa
es
sbb
das
repz
adc
adc
or
sbbb
and
dec
mov
sub
or
lds
sub
js
jne
pop
xor
jne
push
call
mov
cli
push
into
sub
push
lahf
jmp
mov
jmp
int
dec
lds
cwtl
push
lods
push
adc
mov
dec
aam
test
fs
add
fisubs
xor
xor
jae
insb
and
push
leave
and
lret
add
dec
dec
cmc
xor
push
call
dec
and
or
inc
adc
sahf
pusha
dec
push
xchg
loopne
in
pop
dec
out
fstl
stos
mov
and
pop
loop
roll
or
pop
sub
mov
in
loope
adc
test
push
xchg
jmp
ret
cmpsb
mov
daa
adc
push
mov
and
push
ret
jno
inc
adc
leave
stos
or
leave
adc
push
add
sub
or
dec
add
mov
ljmp
sbb
outsl
lds
sub
sub
loop
mov
out
testl
push
adc
incb
in
jns
cmp
orb
bound
or
movntq
inc
mov
mov
push
sbb
sbb
xchg
or
adc
fisttpl
adc
push
cmpl
insl
mov
sbb
loope
out
mov
dec
je
xchg
push
sbb
lahf
cmpsl
push
hlt
inc
pushf
test
adc
addb
jmp
in
adc
push
or
mov
mov
nop
in
mov
je
sub
push
mov
scas
jp
dec
push
xchg
stc
or
sub
int
ljmp
adc
pop
mov
lahf
or
cmp
mov
xchg
stos
xor
ret
daa
jmp
mov
aas
fcmove
insl
enter
xchg
xor
imul
or
roll
out
adc
inc
adc
cwtl
popa
orl
or
adc
sub
push
insb
dec
jmp
mov
in
movsb
jno
mov
out
sub
xchg
push
sbb
adc
inc
sub
ret
jae
push
pusha
movsb
dec
jb
add
cmpl
ret
sbb
mov
or
je
std
imul
jbe
loope
test
jmp
add
or
jne
pop
int
popf
pop
stos
sbb
inc
ret
hlt
jle
add
cmpsl
adc
stos
loopne
add
mov
in
fstl
cmp
in
lret
ja
add
clc
pop
dec
ss
and
call
dec
in
jle
sub
mov
lods
mov
inc
lock
lret
mov
les
jmp
dec
adc
xchg
push
jo
adc
aad
jmp
mov
sub
test
lahf
fdivrp
inc
xor
xchg
stos
out
and
in
call
lds
int
outsl
mov
dec
mov
inc
cmp
int3
jle
sbb
mov
sub
sbb
push
push
adc
mov
jnp
push
jbe
out
push
fwait
cmp
es
fldenvs
jb
add
hlt
jmp
mov
pop
lret
and
fucom
add
inc
inc
pop
or
jl
cmp
add
or
jne
add
lcall
lcall
adc
adc
fldenv
jmp
add
sahf
mov
cmpsl
or
call
jle
xor
push
pop
adc
inc
cwtl
xlat
inc
inc
adc
xlat
aas
adc
sbb
xor
inc
je
ss
mov
push
adc
jmp
mov
or
add
cmp
xchg
loop
add
loop
inc
loope
pop
mov
ja
out
call
pop
ficompl
andl
addr16
dec
sbb
adc
push
pop
cld
int
mov
push
int3
mov
pop
fnsave
pop
add
lret
cmp
cld
xchg
popa
out
sahf
pop
lea
xor
pop
and
inc
cmp
addl
nop
xchg
push
adc
cli
xor
cmp
mov
enter
in
add
mov
cmp
inc
push
cmp
fnstsw
adc
outsl
adc
adc
dec
xchg
stos
add
mov
das
lea
shl
pop
out
fildll
pusha
or
mov
call
test
mov
mov
cmp
fs
mov
and
adc
das
jne
pushf
or
lea
enter
lods
rcll
cmp
xchg
and
sbb
cmpsb
stc
push
add
xchg
bswap
mov
push
add
jge
jnp
fs
cs
push
mov
xchg
sbb
lock
pop
add
and
jle
push
mov
inc
into
or
pop
std
push
pop
stos
sub
add
cld
push
push
sub
push
out
jp
sbb
adc
push
sub
dec
jmp
push
cli
dec
das
rorl
sbb
jno
xchg
adc
bound
inc
or
popf
adc
inc
gs
loopne
jge
pop
mov
sti
and
cmp
push
andl
push
dec
add
jb
andb
jg
xchg
dec
jne
fidivs
pop
ret
jno
jl
xor
or
sbb
das
pop
pop
pop
cwtl
pop
mov
pop
adcl
jo
icebp
xchg
pop
add
inc
xchg
dec
push
call
sub
in
dec
jno
out
sub
data16
mov
sub
push
imull
xor
adc
mov
sub
add
and
popa
lcall
int
mov
in
sub
xchg
clc
pop
sbb
xor
bound
xor
push
popf
mov
sub
and
or
mov
call
inc
sbb
xor
jg
popa
or
testl
jge
mov
sbb
scas
lret
push
in
pushf
and
sub
mov
push
mov
scas
enter
sub
sti
add
jo
and
cmp
dec
xor
addr16
sub
jne
and
adc
shll
pop
push
std
xchg
data16
xor
scas
clc
cmpsl
or
jmp
mov
cmpl
push
cmc
cwtl
jecxz
jmp
mov
sub
movaps
add
or
or
xor
setg
jmp
std
lods
leave
xchg
std
mov
ss
sub
lahf
adc
jb
and
arpl
xor
in
aad
loope
sub
inc
mov
ljmp
lds
mov
adc
and
scas
cli
mov
pop
rcl
and
in
out
stos
cmpsl
inc
sbb
push
sub
mov
xchg
stos
out
insl
or
adc
mov
scas
sarl
inc
ror
mov
ss
dec
cwtl
xor
mov
mov
pop
jbe
lea
jl
push
xchg
dec
jnp
loope
push
in
add
loopne
push
add
test
les
and
lahf
pop
lock
xchg
fcomi
cmpsb
sub
mov
mov
push
sub
js
dec
cs
cmp
pop
bound
sbb
push
gs
adc
and
and
lret
mov
sub
and
pusha
test
cmp
pop
mov
ret
aad
inc
inc
into
adc
test
stos
push
dec
push
loope
pop
aad
rclb
aad
shlb
sub
aad
lock
mov
mov
lret
push
push
fistl
icebp
xchg
outsb
inc
or
ljmp
xor
andl
cmp
mov
cmovo
inc
in
push
mov
push
popa
inc
lea
or
add
idivb
ds
dec
sbb
or
ss
jno
lret
cmp
sub
inc
or
fsubs
orb
mov
add
sbb
pop
push
nop
xchg
mov
scas
orl
or
in
roll
jge
jae
jb
je
jne,pt
xor
mov
or
lds
rclb
cmpb
insl
sub
xor
ret
or
or
mov
aam
push
xchg
sub
jmp
pop
mov
jle
ret
je
daa
sbb
dec
or
xor
mov
or
dec
mov
mov
mov
or
and
imul
sub
lods
or
mov
mov
xchg
test
enter
fs
enter
lret
sbb
or
sbb
cmp
pop
xchg
add
push
mov
push
push
ljmpw
jns
xor
pop
dec
jmp
ds
sub
xchg
test
push
pop
mov
lea
jl
aad
fldl
imul
enter
push
xchg
cmpsl
scas
mov
mov
and
pop
jbe
add
jmp
fmull
cmp
je
aad
int
jmp
jbe
pop
movb
inc
popf
fmull
adc
jnp
sub
xor
push
mov
inc
cmp
xchg
xor
and
mov
push
adc
mov
pop
test
mov
mov
push
pop
push
repnz
adc
lods
xchg
sbb
test
mov
adc
mov
pop
je
mov
cs
mov
shrl
xchg
mov
sub
ret
lcall
jp
mov
lcall
rorb
add
ret
mov
scas
lods
lcall
mov
clc
fstpt
cmp
xchg
xchg
ret
or
adc
adc
cmpsl
sub
cmpsl
sub
lcall
push
cltd
mov
mov
pop
mov
mov
adc
sbb
adc
xchg
fcomp
sbb
cld
jecxz
mov
in
jnp
and
xchg
sub
push
std
adc
pop
subb
ja
cmpb
dec
rolb
xchg
push
cmpsl
and
sti
and
sahf
clc
adc
xor
cwtl
adc
cmp
lahf
mov
adc
jne
jecxz
pop
movsl
xor
push
shll
push
adc
cld
cltd
mov
adc
mov
outsb
fisubrs
in
jbe
dec
rclb
add
push
pushl
and
push
jnp
sbb
loop
xorb
mov
jns
ret
scas
add
addb
fsubp
sub
or
cld
fwait
shll
and
add
or
jbe
add
jp
and
sbb
inc
xor
gs
jb
ja
scas
pop
jnp
jbe
popa
hlt
push
aaa
aad
aam
pop
and
cmp
into
adc
sbb
mov
cwtl
ja
test
mov
jmp
adc
in
and
inc
mov
and
inc
fsubl
push
in
and
inc
cld
and
or
and
jl
test
enter
dec
and
das
push
dec
pop
data16
xor
sbb
dec
add
cmp
shll
xor
dec
mov
inc
or
push
and
mulb
cli
xor
jle
or
orb
mov
adc
mov
jne
gs
cs
mov
je
mov
push
mov
popf
inc
dec
pop
or
ss
xlat
dec
sbb
xchg
call
mov
adc
cwtl
sub
dec
mov
inc
jo
das
xor
push
add
xor
or
jmp
lock
or
cwtl
xchg
sub
in
fidivl
stos
jo
lea
fmuls
mov
cmp
lret
pop
dec
in
mov
aaa
cmp
xor
data16
cld
jmp
lods
cmp
repz
jbe
insl
or
orb
adc
inc
aad
pusha
and
cmp
mov
mov
sbb
dec
call
arpl
push
daa
and
ja
out
call
sbb
nop
lock
adc
pop
rclb
xchg
aam
in
orl
mov
icebp
adc
js
pop
xor
cmp
lods
add
jbe
movsb
mov
jns
cmp
lds
movsb
cmc
cld
xor
lret
sub
mov
sbb
nop
inc
js
dec
sbb
sub
xor
xorl
mov
xchg
lahf
ljmp
sti
inc
popa
jae
arpl
add
popa
jl
mov
mov
mov
lcall
push
jne
dec
jne
push
inc
mov
mov
inc
ss
push
cmpsl
pop
jmp
or
xor
lahf
mov
xor
or
or
mov
outsb
push
dec
aam
mov
fxch
cltd
cmp
dec
xchg
push
mov
jae
nop
dec
call
xchg
sub
pop
cmp
jnp
xor
mov
xor
loope
das
inc
mov
jne
imull
mov
dec
jmp
movsb
bswap
cmp
scas
jmp
cli
and
or
and
sbb
fisubrs
xchg
push
xchg
je
lds
lea
lret
and
lock
or
adc
mov
inc
mov
mov
inc
xchg
cmc
adc
mov
jmp
pop
mov
sbb
xchg
sbb
pop
mov
jl
rcll
fs
sub
ds
push
bound
xchg
mov
leave
inc
pop
lea
stos
xchg
mov
int3
ud0
pop
xor
pop
or
sub
add
jne
jne
js
nop
jnp
xchg
es
sub
dec
push
js
call
in
int
mov
push
dec
adcl
jae
xchg
jl
ljmp
or
adc
sub
add
fisttps
fldenv
addb
mov
jns
or
call
pop
aad
popa
sbb
repnz
pop
gs
mov
and
orl
es
popa
adc
mov
stos
and
dec
and
xor
inc
cmc
pop
subl
je
dec
and
and
stos
and
test
xor
push
lea
and
add
sub
xor
inc
adc
mov
jmp
add
cmc
jno
adc
pop
and
mov
and
or
fmuls
orl
in
push
cmp
mov
adc
popa
cwtl
sbb
mov
jmp
mov
and
ret
pop
add
stos
sub
add
arpl
clc
push
lock
cmpsb
xor
movzbl
and
xchg
push
cs
repz
testb
js
pop
push
and
and
into
test
xchg
es
push
das
hlt
je
push
sahf
dec
cli
jne
repnz
cmp
sbb
enter
int3
inc
call
jmp
mov
mov
adc
dec
ds
test
call
inc
xchg
das
movsb
test
pop
in
mov
jle
loopne
in
fwait
test
in
sub
adc
stos
cmp
sub
adc
fsubs
cmp
jle
call
lods
les
pop
pop
in
mov
in
push
push
adcb
imul
pop
out
clc
push
add
or
adc
std
mov
add
mov
push
pop
repnz
clc
cli
repz
fcoms
iret
add
call
dec
sub
mov
sbb
fdivrp
jecxz
cld
dec
mov
nop
orl
or
and
sub
xchg
sbb
inc
pop
adc
rcrb
xchg
inc
jae
mov
sub
fs
push
lea
fstl
inc
push
xchg
dec
cli
das
sbb
call
or
xor
lea
push
add
or
sub
dec
in
sarb
repz
jge
inc
lods
inc
mov
loop
mov
add
or
movl
mov
jmp
out
add
aas
push
rcrb
jmp
clc
add
xor
mov
inc
xchg
jle
pop
add
imul
inc
add
stos
sub
or
or
filds
sbb
in
or
sub
cwtl
arpl
mov
mov
or
push
ljmp
outsb
adc
adc
push
sti
xor
rcll
adc
push
in
aaa
loope
sbb
jns
xchg
scas
adc
adc
or
sbbl
adc
ja
lods
loope
jl
test
cmp
je
or
inc
dec
push
push
jno
jmp
adc
shlb
xchg
jns
or
insb
push
add
stos
mov
cs
pop
outsl
adc
sbbl
call
out
testl
mov
mov
ret
ljmp
push
add
pop
shl
call
fimuls
ret
and
in
xchg
call
xor
icebp
push
xchg
mov
adc
dec
aad
cmpsl
sbb
cwtl
mov
fdivl
outsl
or
adc
and
rorl
sbb
jo
xchg
stc
cmp
and
popf
aaa
sub
sbb
cmpsb
shlb
je
ja
lcall
inc
push
mov
pop
mov
cmp
sbb
dec
adc
dec
adc
inc
lahf
adc
push
sub
add
sarb
add
pop
adc
mov
fs
pushl
cwtl
repnz
fstpt
push
sbb
ret
mov
inc
je
dec
jo
cmp
mov
jmp
cwtl
popa
and
jmp
daa
sbb
jb
cltd
or
push
mov
icebp
outsl
sub
sub
sub
add
push
sub
mov
and
sub
lcall
adc
cmp
mov
push
xchg
enter
in
pop
mov
out
int
xor
jmp
mov
incb
decb
outsl
fs
cwtl
gs
add
fidivl
cld
push
pop
adc
inc
or
xlat
pop
les
mov
cmp
add
nop
jge
push
cmc
push
cli
das
inc
adc
add
adc
sbb
and
daa
enter
enter
jle
sbb
sbb
movsl
add
and
test
xor
sub
push
fs
ror
adc
test
dec
pop
xlat
lock
iret
sbb
lret
xchg
test
cmpsl
mov
jg
out
daa
test
test
jne
push
or
xchg
inc
mov
fcmovne
mov
in
mov
and
xor
cmc
movsb
jo
add
xor
jmp
add
shrl
aad
lahf
xchg
mov
aaa
jmp
xor
jne
inc
or
test
lds
rclb
cwtl
jb
dec
add
inc
xor
cmp
mov
enter
or
mov
sbb
shll
xor
fcoml
or
sbb
sbb
stos
or
leave
push
add
scas
ljmp
mov
sahf
mov
mov
xor
cwtl
sub
add
iret
jge
add
lcall
inc
xchg
pop
inc
inc
movsl
add
lahf
lods
andl
or
stc
xchg
je
mov
jbe
divb
push
cmpsl
mov
cwtl
repnz
inc
test
stc
mov
inc
add
mov
or
cmp
popa
jne
lcall
ss
ja
pop
xor
inc
push
mov
adc
test
dec
push
sub
test
mov
mov
mov
sub
adc
or
pop
fs
call
jmp
icebp
push
add
mov
dec
push
sub
pop
notb
sbb
adc
dec
jp
mov
loope
lods
aam
mov
mov
or
ret
inc
out
dec
lret
andl
add
leave
in
fldl
or
dec
adc
push
mov
inc
movsb
or
jmp
lret
sahf
and
add
jmp
test
mov
sub
push
inc
inc
jmp
jle
inc
jmp
mov
sbbb
mov
nop
mov
enter
in
rcrb
inc
mov
pop
or
fisubl
and
dec
mov
push
xor
nop
das
cs
cld
xor
lock
jmp
add
and
adc
sub
fldl2t
rorb
mov
insb
and
lcall
xchg
fcoml
mov
lods
or
and
mov
xchg
bound
push
dec
push
jo
in
jmp
push
push
mov
sbb
rclb
cmp
dec
push
mov
hlt
dec
dec
adc
inc
adc
push
out
rcl
aas
and
push
cli
repz
aam
outsb
or
and
dec
dec
into
push
mov
lock
push
imul
shl
pop
mov
mov
mov
std
imul
popa
mov
mov
lret
idivb
mov
adc
sti
faddl
sti
or
lret
daa
mov
cmp
xchg
enter
in
adc
add
call
test
ja
daa
adc
fnstsw
in
stc
mov
lahf
push
mov
pop
xchg
mov
jp
xorl
dec
mov
outsb
sbb
push
stos
dec
dec
pop
mov
adc
inc
loopne
mov
sahf
pusha
scas
jae
test
push
mov
imul
and
adc
and
pop
inc
adc
mov
pop
aaa
mov
adc
jo
or
shlb
ja
jae
pop
or
das
das
stc
lods
daa
pop
jle
nop
dec
adc
push
stc
mov
push
je
inc
cwtl
testl
and
pop
sbb
xchg
push
push
dec
stos
jmp
inc
cmpsb
lds
test
lahf
pop
xchg
addb
mov
leave
and
rcrl
jle
pop
adc
ja
jg
cmp
ret
xor
dec
daa
sub
xor
and
xchg
xor
or
or
stos
imul
hlt
test
jnp
insl
sbb
or
testb
lds
sbb
mov
sub
test
daa
orl
add
and
dec
jae
adc
mov
aam
adc
je
dec
lea
push
xchg
daa
push
call
mov
push
push
cld
adc
jno
in
push
adc
or
or
jmp
push
pop
add
orb
cmp
dec
or
sub
jae
ds
sarl
loop
ljmp
adc
dec
lods
jns
clc
add
dec
adc
push
in
popf
repnz
movsl
cmp
add
mov
test
push
or
scas
dec
mov
xchg
orl
xchg
es
nop
jecxz
cmp
cmc
inc
arpl
push
dec
pop
sbb
cmp
mov
frstor
lods
and
adc
aas
sbb
mov
push
ret
dec
cltd
jge
cmp
jmp
fcoms
mov
dec
push
cwtl
test
aad
mov
mov
jmp
push
push
lods
pop
lret
mov
mov
push
push
adc
sub
mov
aad
scas
cld
add
push
add
lods
mov
inc
test
bound
movsb
xchg
mov
cmp
and
int
enter
mov
or
fsubl
lds
sbbb
jo
mov
cwtl
mov
fdiv
adcb
in
mov
or
adc
rclb
inc
jns
mov
jne
movsb
push
in
push
cmc
adc
sbb
aad
stos
or
inc
je
and
dec
cmpsl
xlat
adc
xor
loopne
pop
repz
in
pop
push
and
dec
cmp
inc
xchg
cmp
add
and
adc
push
pop
cmp
in
and
and
mov
in
xchg
or
ds
bound
dec
bnd
cwtl
loop
lret
lahf
add
pop
nop
push
xor
mov
adc
bound
mov
shlb
imul
arpl
imul
enter
lcall
fsubrl
inc
or
in
das
dec
in
mov
jge
popa
sbb
or
cwtl
ret
push
push
push
in
ja
mov
add
xor
or
in
sub
pop
rolb
or
paddb
popf
movsb
rcl
or
sub
rcr
xlat
or
inc
insb
push
add
xchg
stc
lret
xchg
and
popa
bound
jle
fmuls
ss
cmp
push
or
mov
sbb
inc
aam
jmp
push
add
xor
sbb
mov
je
mov
push
call
xchg
pop
jbe
ret
sub
jmp
stos
and
repnz
dec
adc
cmp
dec
std
addr16
dec
adc
aas
out
adc
add
dec
cmp
dec
nop
push
call
adc
push
push
mov
xor
in
mov
cld
and
jnp
mov
xor
add
and
mov
cld
enter
mov
adc
lock
andl
cmpsb
in
pop
cmp
sbb
sub
push
repnz
dec
sbb
inc
clc
and
fcoml
jns
adc
js
or
add
mov
imul
cld
jl
lds
inc
and
shll
xor
mov
aad
xor
int
cmp
mov
mov
sub
leave
adc
sub
lret
scas
dec
add
add
or
lahf
shlb
and
xchg
push
or
xorl
jmp
or
je
fs
movsl
pop
lcall
lret
cmpsl
test
enter
imul
cmp
xor
mov
push
mov
rclb
fwait
sub
or
mov
call
cmp
sbb
inc
sbb
jmp
jno
add
add
jmp
loope
iret
adc
jmp
mov
jmp
lds
sub
xchg
and
pop
pop
movsb
cmp
rcll
adc
push
icebp
or
add
inc
fsts
jg
sbb
sbb
push
lcall
mov
sbb
lods
adc
mov
jg
push
add
jle
sbb
inc
inc
push
hlt
xchg
cmp
sbb
into
xchg
xor
aas
jecxz
sbb
and
jbe
sub
mov
or
or
and
aaa
sub
sbb
mov
mov
pusha
cmp
iret
pop
divb
int3
cmc
scas
sbb
jmp
mov
jmp
imulb
cmovae
cli
push
test
jge
js
xchg
inc
jns
sub
pop
inc
and
jmp
call
pusha
push
cld
imul
lock
adc
add
jecxz
pop
mov
xor
xor
push
call
test
sub
fisubs
push
sti
shrl
ror
sbb
mov
nop
mov
adc
adc
cmp
test
lret
xor
push
inc
sbb
push
jge
stos
jle
test
nop
cltd
push
xchg
dec
or
addr16
jl
mov
jbe
sub
add
dec
jle
arpl
out
out
push
fdivrl
xor
incl
mov
mov
adc
pushf
test
and
jae
cld
ja,pn
inc
inc
jle
orb
mov
es
hlt
jbe
dec
lea
adcb
sbb
adc
loopne
loopnew
cmp
sub
xchg
popf
or
lock
adc
and
cmp
xor
and
mov
xchg
cmpsb
xor
push
mov
clc
in
and
add
out
or
call
jbe
dec
xor
fdiv
jo
insl
call
in
cmp
cmp
je
mov
cmp
xchg
jp
xchg
and
rcrl
inc
cmpb
mov
fs
push
das
or
push
es
pop
mov
jbe
sbb
adc
push
adc
inc
add
jge
mov
xor
adc
inc
push
inc
pop
in
stos
push
dec
inc
jmp
les
mov
xchg
inc
jmp
ret
jno
fimull
pop
jge
inc
fsubrs
mov
and
ret
sti
icebp
xor
push
add
cmpb
clc
cmp
xchg
and
mov
inc
stc
xor
scas
cmp
pop
xor
sti
xchg
insl
lds
pop
xlat
movntq
inc
push
stc
jnp
insb
repnz
jmp
jo
pop
mov
xchg
xor
imul
clc
pop
adc
lds
sti
lods
movl
add
fs
fiaddl
dec
jl
leave
push
pusha
cmp
inc
pop
inc
std
add
ds
mov
bound
or
mov
sbb
ljmp
push
and
pop
sub
roll
pusha
movb
nop
adc
dec
out
sbb
int
push
sub
lret
leave
mull
test
adc
lea
icebp
jae
push
rcll
int3
iret
xor
mov
cmp
add
mov
daa
js
jmp
jl
daa
jle
nop
loopne
and
scas
cmp
movsb
xchg
scas
movb
adc
repnz
add
mov
cmpsb
adc
jl
mov
jl
add
test
aam
or
sbb
fisttps
dec
mov
and
dec
xor
insl
sbb
sub
std
add
cmp
rorb
fucom
mov
pop
push
idivb
pop
repz
xor
dec
js
inc
sub
sub
jmp
inc
cmp
test
xchg
xchg
shlb
imul
je
ds
int
ret
pop
sub
push
cmpsb
and
gs
nop
bound
xlat
popf
arpl
xor
ret
cmp
xorl
dec
iret
dec
daa
push
mov
inc
cmp
enter
fisubrs
push
and
sub
jns
mov
scas
mov
jle
hlt
dec
adc
xor
aas
cwtl
dec
lods
push
jl
cmp
jnp
pop
test
fs
ret
test
and
mov
out
push
mov
incb
sbb
cmp
popf
jbe
push
rcrb
xchg
outsb
adcb
sbb
cld
test
hlt
out
xor
cmc
mov
adc
test
fsubr
jmp
in
sti
or
cmpsl
ljmp
push
dec
ljmp
mov
sub
lcall
and
inc
and
je
fucomp
pushf
in
sub
lock
mov
aaa
and
adc
sub
or
mov
jg
fdiv
daa
push
test
clc
add
dec
push
push
pushf
cmp
das
inc
fdivrl
dec
jb
push
pop
push
sub
mov
jbe
sub
add
push
push
je
pop
dec
and
in
arpl
inc
mov
cmpsb
les
cmp
xor
mov
sbb
or
xchg
jns
imul
aam
sbb
push
ret
dec
sub
jb
lds
dec
xor
testb
sub
sub
sub
cmp
sub
xor
jmp
xor
mov
pop
das
rorl
test
pop
dec
mov
mull
lea
cwtl
cmc
jb
repnz
jae
sbb
in
and
mov
add
jmp
dec
je
and
xor
jb
imul
movl
bound
pusha
imul
dec
imul
test
and
inc
mov
xchg
xchg
js
dec
je
and
adc
mov
cmp
inc
sub
sahf
cmp
cmpsb
mov
je
sbb
xchg
add
pop
push
mov
push
pusha
shrl
xchg
cmp
xor
push
movaps
jbe
enter
idivb
popa
scas
insb
lea
sub
aas
push
rcrb
les
cmp
inc
jmp
and
push
pop
sub
and
imulb
movswl
mov
movsl
xor
gs
ds
bound
fisubrs
ljmp
cmc
rcrl
adc
push
or
js
lods
pop
stos
cwtl
je
sub
addr16
mov
inc
add
xor
lea
cld
xor
dec
or
jmp
xor
adc
pop
mov
and
lret
call
int3
lret
mov
out
adc
jmp
add
adc
inc
insl
ja
test
sarl
push
mov
and
mov
pop
inc
and
hlt
cmp
loopne
xor
and
scas
rsm
daa
test
loope
push
jmp
adc
pop
add
and
orb
jecxz
jle
sbb
sbb
lea
cmp
adcb
pop
xchg
fidivrl
or
mov
add
scas
das
or
mov
pop
sub
cmc
xchg
push
and
in
or
push
push
fnstsw
lods
imul
xchg
jmp
mov
outsl
add
xor
xor
imul
mov
js
call
or
ja
or
les
pop
cwtl
and
data16
fsubrl
sub
cmpsl
pop
aaa
cmp
pop
lods
sti
jno
mov
push
fbld
or
lds
int3
data16
push
mov
jbe
popf
rorb
push
add
test
adc
push
push
push
stc
adc
call
or
dec
jne
cmp
cwtl
scas
mov
call
mov
in
and
sub
enter
cmp
incb
mov
fs
cs
adc
movsl
dec
add
es
push
or
mov
add
mov
or
aad
fs
scas
rorl
sbb
pop
mov
test
lea
arpl
repnz
imul
xor
xchg
xchg
mov
and
jns
mov
orb
dec
test
sub
mov
mov
jge
push
xchg
mov
xchg
enter
rorb
xor
lds
pop
ret
daa
mov
mov
in
sub
leave
push
sbb
dec
and
rclb
jmp
daa
inc
lds
mov
push
call
add
hlt
jecxz
xchg
mov
inc
jp
cmp
dec
mov
into
jp
imul
mov
and
test
daa
fimuls
inc
add
add
ret
jmp
rcrb
pop
inc
xchg
adc
or
adc
mov
pop
xor
lds
xor
rclb
dec
adc
inc
adc
mov
loopne
sub
cmp
call
xchg
imul
and
adc
adc
add
sub
xor
mull
xor
push
push
push
lock
mov
notl
cmp
sbb
fldcw
adc
sarl
xor
das
negb
and
ret
out
or
testb
cli
stos
popa
scas
mov
call
sarl
arpl
dec
ret
pop
xchg
pop
cmp
inc
add
xor
adc
mov
inc
dec
add
adc
jge
inc
sbb
ljmp
jb
in
jp
data16
int3
dec
inc
cmp
aam
daa
icebp
jmp
mov
imull
loopne
mov
sbb
stos
mov
pop
jae
or
inc
add
inc
xor
mov
cs
jg
sub
notb
out
sahf
loop
in
fdivrl
cltd
or
pop
orl
push
or
stc
pop
in
aas
xorb
lcall
push
jbe
mov
and
dec
inc
lcall
repz
icebp
scas
sbb
arpl
in
sti
lea
xchg
pop
mov
clc
test
out
cld
sub
pop
mov
leave
clc
push
in
or
icebp
adc
mov
cmpb
nop
push
jne
daa
mov
mov
jb
std
adc
mov
jne
or
cmp
inc
pop
loop
scas
xor
inc
scas
inc
imul
xchg
adc
pop
decl
loope
push
fidivl
pop
push
scas
adc
jge
popf
pop
xchg
ljmp
daa
push
dec
dec
push
aam
cli
and
cld
js
sbb
hlt
mov
clc
inc
inc
jne
and
cmpl
inc
pop
add
dec
lock
dec
dec
cld
rol
aas
pop
daa
scas
pop
mov
jmp
scas
or
xor
and
pop
add
cmp
pop
cld
popf
dec
bound
adc
adc
fdivl
fsts
cli
and
fcomps
sub
movsl
and
jmp
lods
fistl
sarl
ret
mull
rol
mov
mov
xor
andb
sub
fwait
push
adc
ror
cli
mov
mov
stos
sbb
cmp
pushf
adc
mov
shrl
adc
pop
arpl
pop
ret
xor
sub
push
or
shrb
mov
cltd
sbb
aas
mov
mov
inc
cmc
sbb
xor
adc
dec
jo
cmovo
cwtl
fnstcw
push
mov
mov
dec
dec
test
aas
les
mov
pusha
sub
jns
mov
mov
popa
jne
call
iret
or
sbb
aaa
shlb
lcall
mov
repnz
cli
inc
mov
dec
and
and
xchg
lea
stos
dec
mov
mov
scas
xchg
push
movsl
push
stos
hlt
lods
shlb
cld
adc
fldenv
aam
test
dec
add
mov
jae
add
pop
cmpsl
inc
or
jmp
in
inc
inc
or
jmp
hlt
push
test
lds
test
push
clc
adcl
jg
sub
cli
pop
xchg
aam
cmpsl
pop
mov
sbbl
hlt
sub
out
inc
dec
daa
je
jge
cmp
sub
js
xchg
sbb
pop
mov
adc
mov
call
mov
mov
test
popf
push
mov
push
jmp
adc
mov
mov
xor
adc
mov
add
xchg
xchg
sub
aas
add
mov
push
fwait
or
popf
test
push
fisttpl
in
or
loope
in
outsl
mov
cmc
or
sbb
cpuid
mov
ljmp
and
xor
int3
mov
lret
sub
fildll
adc
mov
mov
mov
vpaddusb
mov
inc
stc
dec
mov
and
sbb
sbb
add
mov
sub
sahf
sub
nop
pop
rcrl
push
lret
push
adc
mov
lcall
xor
xor
insl
xchg
mov
sub
pop
fistpl
cmpsb
adc
xor
pop
xchg
jae
xchg
fimull
adc
loope
stc
in
in
and
push
cltd
popa
inc
fimull
add
xor
cli
or
xor
push
leave
nop
sbb
sbb
outsb
mov
call
jp
test
jo
and
mov
and
push
rorb
push
mov
sbbl
and
mov
jmp
icebp
push
adc
push
pop
adc
or
adc
push
adc
pop
loop
push
test
push
paddd
push
call
add
mov
or
pop
cmp
leave
jne
ja
or
in
call
jecxz
cmp
sbb
cld
sub
cmp
jbe
sub
dec
jne
leave
pop
sbb
ret
cs
clc
push
call
loopne
mov
sbb
pop
int3
lods
mov
jno
aas
movsl
popa
xchg
push
jl
shll
rcrl
mov
adc
fiaddl
push
mov
and
fidivrl
jmp
test
jmp
or
sbb
leave
ficompl
adc
mov
push
insb
cwtl
aaa
es
lcall
jmp
xor
adc
dec
out
lock
dec
movsb
fnsave
mov
add
shll
je
cmp
sub
cld
sbb
push
sbb
sar
cli
ljmp
mov
mov
test
and
mov
mov
mov
or
fsubrl
mov
and
pop
sbb
jl
add
cmp
mov
cld
sbb
std
mov
jmp
adc
mov
dec
jnp
jo
add
add
cs
dec
mov
push
addb
mov
push
jne
push
fldcw
and
hlt
das
sub
pop
push
xchg
pop
mov
and
cmp
or
push
push
xor
lds
es
and
inc
imul
xchg
and
iret
sub
sub
ss
and
and
jp
arpl
hlt
cmpsl
movups
dec
out
lahf
adc
or
fdivr
xchg
enter
sbb
jmp
push
rorl
add
push
push
jmp
cld
add
jb
sarl
jmp
es
cmp
out
lea
mov
sbb
lret
pop
push
das
pop
ret
push
or
jg
iret
lods
mov
cwtl
fmuls
add
or
out
or
pushf
rcrb
push
int3
subb
lahf
mov
or
and
inc
dec
cmp
dec
and
add
xorb
mov
adc
sub
sub
frstor
or
rcll
mov
fs
in
call
mov
push
loope
mov
gs
lret
rcll
mov
lret
mov
xchg
adc
sti
adc
mov
inc
or
imull
sub
mov
pushf
enter
cmp
jb
dec
or
mov
or
adc
gs
dec
push
push
fs
xor
std
out
stos
and
andb
inc
pop
lret
push
dec
nop
lahf
sub
push
dec
push
push
mov
pop
push
call
into
dec
pop
or
sbb
push
or
inc
cmp
mov
push
stos
mov
inc
or
and
jmp
sarb
or
in
sub
out
std
test
stc
sbb
push
scas
iret
dec
xchg
sarb
lret
pop
in
je
not
inc
iret
or
xchg
xor
inc
dec
je
popf
dec
lock
or
adc
dec
pop
jmp
push
dec
aas
lea
in
xor
add
mov
push
clc
es
or
pop
xor
pop
or
bound
jp
inc
mov
loopne
mov
push
add
fcmovne
idivb
test
fwait
insl
add
mov
add
ja
daa
pop
stc
jmp
sub
fdivs
loope
push
lock
inc
add
xor
jne
mov
push
xor
mov
and
jae
jmp
cli
jmp
je
std
dec
mov
pushf
bound
or
mov
dec
or
or
out
add
or
adc
jmp
adc
aam
add
push
adc
dec
aad
dec
aam
inc
test
and
loope
and
adc
fs
and
frstor
xchg
es
sub
sbb
fimuls
push
nop
adc
sbb
add
sub
xchg
cmp
bound
jne,pn
fisttpl
or
cmp
mov
pop
jmp
in
or
dec
jmp
inc
xor
cmpsl
mov
subl
ror
dec
sbb
mov
in
mov
adc
int3
aas
roll
add
xor
inc
cmpsb
filds
mov
xor
xor
mov
iret
and
mov
bound
push
push
xor
dec
sbb
mov
mov
cmc
inc
mov
aas
sbb
jmp
repnz
and
inc
or
inc
dec
jmp
mov
movsb
add
out
dec
cltd
addb
lea
mov
stos
xor
inc
jns
inc
xchg
and
mov
orb
popf
jne
jbe
mov
addl
hlt
jle
mov
stos
loop
js
jp
add
or
repz
test
mov
or
dec
jmp
fs
out
jnp
lcall
or
jns
xchg
push
stos
jmp
xchg
dec
fs
add
mov
xlat
cld
mov
ret
add
cmp
jbe
lahf
push
fidivs
add
insl
cld
mov
sarl
dec
lahf
mov
aad
push
and
loope
push
sub
out
adc
push
inc
lock
ret
mov
mov
test
adc
push
scas
push
adc
insb
mov
movsl
pop
mov
push
int3
movsl
xchg
add
jb
or
jne
and
ds
sbb
cmp
movsl
mov
sbb
cmpsb
mov
adcb
xchg
and
lea
xor
in
ja
cmp
sub
add
xor
or
leave
mov
mov
jl
imul
and
push
pop
dec
ljmp
sbb
pushf
adc
test
shr
mov
push
push
fbstp
mov
or
shr
adc
mov
sbb
adc
push
adc
sub
outsb
and
mov
push
push
push
push
xchg
inc
mov
mov
lret
pop
and
xlat
mov
mov
icebp
lret
xchg
andl
sbb
aad
push
xchg
push
pop
adc
sbb
sub
sti
ret
push
xor
in
pop
push
and
jge
adc
fildl
pop
shl
add
loope
pop
and
jne
xor
adc
jl
out
sbb
sbb
cmc
xchg
popf
push
dec
dec
testl
or
imul
cs
dec
lock
and
push
mov
and
test
jmp
fistpll
fadds
pop
aaa
xchg
rcrl
fadd
cmp
aam
dec
cli
mov
push
std
dec
and
xchg
fiadds
mov
js
daa
or
and
lret
xor
push
cmp
lea
call
xor
jle
and
or
call
cmp
adc
test
movsl
into
xchg
adc
aas
dec
rorl
jmp
lods
xor
push
out
push
cmpsl
xor
cmp
bound
push
addl
push
jge
add
and
cmc
inc
aam
inc
test
aas
mov
es
jbe
xchg
push
mov
aaa
xchg
mov
and
movsb
cmp
sti
and
jl
mov
into
push
xor
push
inc
dec
das
movsb
gs
dec
inc
mov
or
add
xchg
push
pushf
jo
xchg
jmp
push
outsb
and
fwait
and
sahf
jecxz
xor
inc
xchg
stos
gs
and
or
and
mov
out
adcb
shl
fsub
repz
inc
sbb
imul
push
sub
jg
pop
into
or
andl
test
mov
lock
and
jecxz
sbb
pusha
jmp
rcrl
xor
lret
mov
fistpl
or
pop
lcall
adc
sbb
mov
pusha
mov
inc
cmp
push
jg
inc
pop
jns
push
iret
sbb
mov
in
scas
cltd
mov
roll
rolb
dec
es
test
inc
and
aas
sub
and
mov
and
into
iret
int3
rcll
arpl
jne
das
adc
imul
sub
mov
aaa
daa
jmp
inc
and
adc
sbb
test
and
shr
push
fiadds
xchg
ja
gs
les
mov
pop
movsl
inc
js
loope
pop
push
call
loope
shlb
dec
ja
jne
xlat
xchg
test
sbb
iret
push
or
ds
popf
push
psubsw
pop
and
sbb
call
xchg
xor
mov
negb
mov
inc
push
push
push
ds
ja
xor
xchg
gs
cmp
xor
push
dec
push
cld
push
popf
pop
lods
insb
inc
mov
jno
xor
push
mov
lret
xor
jns
stos
xchg
push
insb
incb
test
or
dec
dec
inc
rclb
clc
mov
or
add
adc
mov
into
sub
and
mov
daa
and
sbb
lea
adcb
sub
sub
in
dec
xchg
adc
xor
iret
ret
mov
movsbw
nop
pop
inc
jae
pushl
enter
push
cld
shr
xchg
clc
or
pop
movw
and
daa
xor
es
or
pop
inc
mov
jne
call
mov
lahf
push
push
inc
adc
mov
faddl
and
adc
push
das
shll
inc
in
and
xchg
mov
mov
mov
or
dec
add
dec
movsb
adc
inc
lcall
pop
rcll
inc
and
mov
cld
adc
mov
aad
dec
insb
into
cs
sub
sub
adc
sub
push
test
inc
mov
mov
nop
or
push
aas
ret
jne
loop
ds
or
lahf
loope
mov
push
ja
call
push
push
ja
mov
scas
mov
es
sbb
inc
inc
jg
sti
sub
cld
shr
hlt
mov
pop
popf
sub
mov
and
mov
call
jle
ret
scas
sub
pop
or
and
cmp
inc
jmp
sti
add
xchg
adc
in
push
adc
add
sub
sbb
ljmp
repnz
dec
jle
fwait
dec
and
fnsave
movsl
or
add
hlt
push
jbe
push
adc
adc
ror
pop
inc
aaa
div
sub
xor
lret
das
push
popa
insl
mov
adc
or
push
and
add
cmp
cld
xchg
popf
out
push
mov
lods
sbb
mov
adc
xor
add
cmp
inc
mov
daa
repz
add
jne
cmp
jb
xor
enter
cli
dec
scas
arpl
xlat
cmp
xlat
and
in
nop
adc
pop
sbb
push
lahf
push
cmp
sub
and
lds
mov
xor
loope
xchg
mov
pop
cld
or
pusha
pop
cld
shl
fmull
add
dec
dec
mov
cmp
adc
imul
mov
adc
or
sbb
imul
sbb
cmp
mov
and
inc
imul
pop
dec
jmp
sub
ds
inc
repnz
xchg
orl
adc
push
push
cld
mov
push
nop
mov
inc
mov
sbb
fldl
sbb
sbb
daa
mov
push
adcl
or
jmp
cs
daa
gs
mov
andl
xchg
jl
arpl
mov
mov
inc
cmp
out
dec
mov
daa
das
mov
or
jmp
fisubrl
inc
cmpl
int
ret
leave
push
lods
xor
lods
pop
push
mov
or
fistpll
and
test
test
jl
data16
jle
add
je
test
nop
je
cli
and
push
push
jle
and
or
push
rolb
ljmp
push
shr
lock
push
jmp
mov
aam
popf
sbb
loopne
aam
test
xchg
xchg
cwtl
pop
fidivs
mov
mov
cmova
pop
sbb
dec
cltd
adc
push
pop
jmp
rcll
push
dec
ret
loope
outsl
int
xor
lds
jno
movsl
sub
adc
dec
dec
push
dec
nop
daa
stc
call
jge
push
mov
cli
mov
adc
stos
and
sbb
or
pusha
mov
mov
sahf
test
and
push
cmp
and
mov
jmp
push
ficoml
mov
lods
lods
add
and
or
dec
and
sub
stos
stos
xchg
test
test
push
inc
movsb
sbb
mov
adc
rclb
inc
into
mov
adc
stos
mov
leave
jbe
jbe
in
xlat
push
mov
inc
dec
stos
xchg
sbb
sub
test
pop
xor
notl
push
add
stos
mov
sub
cmp
push
mov
dec
daa
jmp
imul
std
test
jne
sti
in
icebp
push
popa
andb
loope
dec
or
jb
popa
lcall
jbe
bound
push
jge
lea
dec
js
jmp
ljmp
sbb
or
fs
push
pop
lcall
lea
jmp
jg
mov
and
not
sub
or
jne
sub
mov
cmovne
aaa
inc
inc
icebp
lods
inc
or
loope
adc
xor
clc
adc
and
fadds
aam
cltd
push
je
lea
clc
imull
ret
es
sub
adc
inc
int3
inc
push
adcl
push
inc
push
inc
insb
xchg
loop
inc
pushl
adc
and
loope
lcall
test
xor
test
and
into
cmp
xor
je
cmp
push
sub
mov
mov
int3
fisttpll
imul
les
ror
dec
mov
adcb
push
add
mov
lds
not
xor
into
inc
rorl
in
add
cltd
mov
sbb
int3
or
jg
es
popa
dec
imull
push
mov
xchg
sbb
mov
or
lret
dec
inc
ror
loopne
xchg
nop
lock
adc
movsb
pop
aam
mov
push
movsb
add
mov
stos
push
sub
dec
jo
pop
sbbl
outsl
loope
das
addb
es
dec
lods
leave
add
sbb
dec
test
fwait
sub
xor
sbb
popa
rcrl
es
lock
ret
push
iretw
push
sbb
push
scas
and
add
fs
out
xor
sbb
cltd
jecxz
jb
dec
aas
outsl
cmc
popl
shr
and
ret
shlb
sub
and
cmpl
add
push
leave
dec
add
inc
roll
lock
shrl
ja
or
jo
in
dec
jae
test
out
inc
cmpsl
cld
cmpsb
lret
cmp
xchg
push
sub
leave
push
out
shl
dec
or
inc
movsl
adc
lret
stos
leave
push
mov
in
and
jg
adc
aam
lcall
fwait
xchg
sti
adc
clc
or
xor
inc
loopne
inc
push
ja
add
inc
sbb
rol
dec
inc
call
mov
xlat
mov
and
jge
push
cld
mov
cmp
insl
jne
mov
or
xchg
outsb
call
sbb
dec
mov
push
or
mov
pop
sub
cmpsb
ss
jbe
adc
and
aas
fsubs
pop
sub
lcall
jne
aam
jnp
cmp
xchg
fiadds
and
or
lcall
in
and
mov
push
sbb
insl
push
inc
add
loope
cld
testb
ds
sbb
push
lds
and
add
pop
mov
xchg
jmp
rcrb
xchg
adc
cmp
mov
push
inc
test
aad
scas
push
iret
xor
out
inc
inc
test
mov
push
daa
aad
inc
roll
adc
or
push
pop
add
imul
sbb
cmp
cmpb
outsb
xor
clc
mov
inc
fwait
inc
sbbl
sub
mov
sub
pushf
scas
push
push
sti
shrl
add
loopne
push
lret
decb
sbb
test
add
jmp
xchg
sub
jne
dec
xor
and
mov
mov
and
dec
push
mov
aaa
shl
shl
push
ss
stos
sbb
inc
adc
xchg
andb
das
mov
or
jns
add
or
xchg
hlt
filds
dec
cmp
dec
gs
test
test
int3
call
repz
cld
jne
mov
in
or
je
pop
jle
pop
pop
xor
stos
andl
bound
sbbl
or
jbe
outsl
xchg
ret
fcoml
popa
add
fisubs
or
out
outsl
fbstp
insb
add
les
pop
call
cld
jg
add
and
adc
sbb
xor
clc
or
imul
push
aas
and
push
out
test
pop
scas
inc
cmp
pushf
cmp
push
and
je
out
or
sbb
pop
cwtl
movsl
xor
das
decb
sbb
popa
mov
cld
push
into
xor
mov
xchg
sti
pop
xchg
push
aam
adc
aad
xchg
add
sub
and
inc
sbb
cmp
sub
aaa
sbb
sub
pop
dec
lods
pop
or
mov
nop
mov
call
and
loope
cmp
popf
insl
push
adc
outsb
jmp
push
hlt
and
fidivl
inc
mov
adc
adc
xor
and
mov
push
mov
test
subl
lcall
adc
add
xchg
pop
adc
popa
pop
jne
push
jge
mov
push
inc
jo
pop
push
mov
mov
push
mov
or
or
pop
mov
and
insl
popf
imul
imul
sbb
fdiv
sub
inc
mov
stc
enter
push
hlt
sahf
dec
lea
and
xchg
bound
jmp
jbe
sub
inc
mov
inc
pop
rcrl
out
repz
mov
gs
lret
sub
imul
sbb
jmp
outsl
mov
dec
sti
jo
xchg
mov
xchg
movsl
xchg
xchg
in
sub
pop
popf
inc
mov
or
mov
inc
fldenv
pop
hlt
jae
jb
pop
icebp
aad
dec
pop
inc
fsts
fnstcw
adc
and
mov
jmp
dec
inc
mov
adc
cmpsb
cltd
mov
and
pusha
xor
adc
add
andb
mov
pop
shrb
xor
mov
mov
js
sahf
sti
popa
fcmovnb
pop
push
and
test
cld
dec
adc
pop
fisttpll
outsb
add
jbe
and
mov
sbbb
je
popa
add
into
bound
cmp
jb
pop
jmp
mov
push
or
inc
scas
pop
mov
adc
inc
aam
adc
out
pop
cmpsl
inc
adc
cld
dec
cmp
and
imul
jbe
mov
mov
repz
movsb
xor
mov
scas
and
ds
add
testb
je
das
pop
pushf
stos
push
sub
jnp
fs
xchg
std
jb
xchg
stc
insl
adc
rolb
adc
mov
cwtl
icebp
cmp
or
xchg
sub
pop
inc
hlt
xchg
movsb
mov
mov
shll
mov
dec
clc
aad
xchg
push
xchg
or
xor
add
cmp
cld
xchg
dec
aad
sbb
sbb
movsl
in
jo
xor
pop
daa
imul
mov
and
in
mov
sub
addl
insb
jmp
enter
cltd
jg
sub
movsb
movsl
in
or
dec
adc
fstps
add
popa
adc
sub
fsts
call
out
jg
inc
pop
lea
inc
or
push
and
add
jne
les
clc
fcom
xor
mov
add
cmpsl
pop
jne
sbb
scas
pop
les
inc
scas
repz
push
mov
push
and
sub
xor
adc
mov
cmc
fs
jge
nop
add
add
fdivl
cmpsl
and
pop
inc
push
sbb
lock
adc
mov
push
cld
test
je
push
dec
adc
jle
imul
cmp
fdivs
xchg
into
adc
fstpt
test
inc
pop
dec
sti
pop
inc
cmpsl
xlat
out
daa
mov
pop
dec
mov
xor
lock
mov
lea
jmp
cmpsb
or
in
cli
push
mov
pop
rcrl
clc
xchg
add
inc
jno
or
fmull
mov
cmp
ds
loope
adc
jecxz
sbbb
lds
or
cmpl
and
pusha
cmp
push
cmp
jne
sub
je
dec
adc
dec
movsb
call
cmp
cmp
nop
dec
or
mov
or
daa
push
imul
cmp
xor
sbb
add
xor
sub
push
popf
sub
and
cmp
push
leave
mov
cmpsl
xchg
sub
jno
sub
scas
inc
arpl
jae
lds
out
jmp
cmp
sub
popa
push
inc
and
leave
mov
jmp
inc
fistpll
in
adc
xchg
inc
or
enter
jbe
daa
sbb
xchg
cli
xchg
das
mov
pop
pop
and
stos
mov
xchg
jo
or
fs
js
push
pop
mov
nop
test
iret
aam
pop
and
pusha
jae
cmp
leave
gs
movsl
andb
jl
xchg
test
dec
ja
lea
call
sahf
imul
xchg
or
pop
cmp
add
fiaddl
fisttps
jb
pop
inc
sbb
icebp
popf
into
in
and
dec
fimull
jp
int3
andl
cmp
add
inc
add
xor
insb
push
sbb
mov
cmp
push
xor
ficoms
jmp
add
mov
inc
jmp
jmp
mov
pop
adc
dec
cmp
mov
test
and
aaa
add
lock
xor
push
sar
xchg
push
xor
and
or
jle
data16
sub
push
pushl
xchg
fsubrl
clc
inc
add
hlt
frstor
push
xchg
pop
lret
sub
push
add
push
popa
mov
xchg
pop
xchg
pop
dec
enter
inc
into
sbb
jbe
sbb
sub
jmp
mov
das
cmp
shll
push
pop
push
int3
jg
mov
adc
clc
jg
outsl
int3
movsl
lock
jb
pop
push
push
and
pop
mov
insl
jne
xor
ja
push
cmp
movsl
and
addr16
cli
sti
outsl
or
push
mov
and
ljmp
cmp
inc
std
jge
popa
sub
cmpb
popa
out
xor
out
int
arpl
cmp
shr
mov
movb
sbb
mov
inc
leave
pusha
aaa
aad
mulb
push
pop
jmp
jl
mov
jle
outsl
fcomip
push
adc
adc
dec
add
je
add
push
inc
scas
cmp
adc
or
adc
adc
pop
xchg
jmp
xchg
mov
push
mov
add
pop
fstpl
pop
ljmp
pop
dec
cs
xchg
push
or
and
orl
int3
sbb
outsl
xchg
add
mov
imull
add
aad
sub
jb
aaa
in
cli
jl
push
inc
push
adc
add
out
movsl
adc
jecxz
sub
lods
sbb
xor
insl
push
add
cmp
xlat
adc
movsl
dec
pop
out
inc
adc
lock
xchg
fsubrl
out
and
mov
sub
testl
push
pop
jmp
push
inc
insb
mov
and
sub
and
xchg
sbb
dec
add
or
js
add
add
dec
lods
inc
andb
fdivrs
cmp
loop
lods
shll
rorb
or
xchg
adc
prefetch
mov
jne
and
xchg
cmpb
ret
cltd
call
ficoms
push
xor
hlt
adc
inc
je
lock
jmp
mov
and
cmp
adc
or
add
mov
pop
pop
jbe
jo
adcl
xor
movsb
adc
cwtl
les
and
mov
or
lock
rolb
dec
push
in
cli
push
enter
lea
out
lea
add
orb
mov
add
loope
mov
dec
adc
adc
test
pop
inc
ss
test
loopne
je
inc
out
cmp
lret
sub
jne
and
jmp
mov
add
lock
rcrb
rcll
lea
sldt
pop
jmp
mov
jl
pop
sbb
shrl
icebp
xchg
or
jmp
cs
mov
inc
std
imul
or
nop
jae
sar
addl
in
xchg
mov
testl
cmp
add
mov
inc
test
adc
cmpsb
out
int3
adc
je
das
call
mov
xchg
scas
icebp
ljmp
and
int3
stos
xchg
adc
push
pop
jmp
xor
scas
cmovb
rcrl
test
add
clc
mov
add
jb
mov
push
adc
clc
aas
lea
and
rclb
cmp
xchg
mov
hlt
add
mov
in
sbb
daa
jmp
add
jbe
push
cmp
jbe
and
dec
mov
clc
sub
dec
cltd
xchg
xor
adc
push
in
pop
clc
lcall
arpl
adc
sub
lock
icebp
mov
je
aad
cltd
mov
push
mov
mov
jmp
ds
mov
loope
aas
in
call
mov
stc
movsb
call
shll
push
mov
or
pop
nop
adc
cmp
sub
mov
mov
cmpsb
daa
je
sub
push
dec
rolb
xor
push
jne
icebp
dec
push
xchg
fmuls
mov
fsts
add
inc
ss
das
repnz
and
xor
and
fcomip
daa
lret
pop
ret
cmc
sbb
adc
call
pop
xor
pop
cmp
or
sbb
das
mulb
push
jg
in
aaa
scas
mov
mov
or
cwtl
inc
jmp
lea
and
add
pushf
ret
sbb
jbe
sbb
xor
and
inc
mov
jae
movsl
push
in
dec
dec
push
int
and
in
sub
inc
xchg
jo
jmp
popa
or
movsb
xchg
sbbl
testl
test
hlt
cmc
pop
popa
test
mov
adc
sub
fidivrs
daa
mov
das
in
pop
mov
add
jo
mov
adc
pop
sbb
aaa
xor
and
test
mov
ds
mov
mov
dec
fidivs
pop
push
aad
adc
mov
mov
imul
cmpsb
lds
std
pushf
add
aaa
test
jge
jmp
xor
xor
in
ds
add
inc
scas
daa
push
jg
enter
lcall
subb
shr
imul
or
adc
lret
or
xor
push
hlt
push
or
cmp
cld
imul
mov
sub
xor
cmp
ret
push
imul
inc
cld
dec
mov
mov
stos
stc
jns
mov
pop
lret
push
jmp
or
scas
scas
xchg
call
fistpl
mov
inc
insb
daa
push
inc
push
cmpsl
push
das
loopne
mov
push
xor
sub
daa
push
lret
jo
xchg
jp
push
into
pushf
sub
push
sbb
sti
rclb
movsl
shlb
cmpsb
daa
jg
sub
out
ljmp
hlt
sti
pop
inc
jne
sub
daa
pop
xor
cmpsb
xor
mov
jne
push
mov
outsb
test
xchg
lods
mov
movsb
sbb
icebp
cs
xor
push
fcmovne
mov
push
add
cmpl
loopne
jne
nop
xchg
dec
jo
mov
es
pop
sub
lods
test
lock
or
lea
cmpsl
jb
xchg
daa
cmp
jmp
fwait
iret
lock
stc
call
push
push
adc
imull
xchg
outsl
inc
ja
jg
sub
push
hlt
test
adc
push
nop
xchg
sbb
pushf
add
subl
scas
test
jl
clc
pop
jge
fnstcw
inc
repnz
adc
xor
or
mov
adc
mov
xor
pushf
jl
add
movsb
or
cmp
es
jne
sbb
aam
data16
add
outsl
pushf
in
push
push
data16
jae
xor
test
pop
inc
or
push
or
xchg
fdivs
sbb
sbb
dec
jnp
jmp
push
test
adc
pop
mov
loop
sub
jle
adc
cli
cmp
jg
dec
mov
lcall
ss
pop
mov
inc
rorl
adc
adc
jmp
ret
pop
pop
insb
nop
cli
fcompl
adc
pop
push
xor
xor
xchg
cmp
and
ja
adc
pop
jg
inc
mov
push
or
xchg
imul
xchg
inc
orb
ret
xorb
and
enter
push
add
and
lds
sbb
xchg
testb
rolb
sar
incb
lea
jmp
jo
jmp
test
jne
adc
sub
scas
mov
mov
sbb
xchg
dec
pusha
loope
cmp
ja
sbb
pop
mov
mov
pop
daa
sti
scas
jno
jl
jo
data16
rclb
push
cmp
jae
imul
cs
jb
xchg
mov
inc
int
ds
mov
jae
and
cmpsl
jnp
enter
add
sarb
push
test
jns
add
icebp
loope
mov
je
inc
mov
loope
lock
add
adc
jle
lea
or
sti
in
lods
adc
mov
insb
js
jmp
jmp
fwait
mov
fs
lods
test
xor
sub
xor
js
pop
subb
xor
cmp
jne
or
test
add
or
mov
mov
sub
xchg
push
insl
into
ficompl
inc
les
enter
mov
and
add
loop
adc
sbb
mov
push
fcoml
lock
dec
sti
mov
shrb
pop
insl
es
jl
call
loopne
xor
push
or
testb
adc
test
sbb
dec
pop
or
pop
or
repz
shll
and
push
pop
insb
jge
lcall
pop
and
repz
mov
push
adc
gs
fidivl
cmp
stos
roll
and
sbb
lret
or
cli
mov
sbb
adc
mov
popa
dec
jmp
adcb
mov
inc
stc
and
sub
inc
sbb
mov
ret
jns
and
nop
and
mov
jns
add
es
cmp
repz
test
xchg
mov
out
mov
fdivr
lcall
jns
sbb
les
xor
pop
mov
jmp
push
xor
and
ds
xlat
pop
mov
xchg
push
icebp
and
fwait
sti
shlb
dec
sbb
jb
xor
push
cld
jbe
iret
or
sti
sbb
pop
dec
ret
push
mov
dec
mov
mov
or
or
jmp
inc
add
out
or
xor
jo
mov
adc
sbb
sub
push
push
dec
adc
inc
loopne
cmp
cwtl
adc
fs
inc
or
adc
ljmp
xchg
les
dec
sub
int
mov
jmp
xchg
mov
int
push
xchg
or
leave
sbb
orb
mov
test
fimuls
cli
push
inc
loop
and
shlb
mov
jne
vmovhpd
sarb
sub
xchg
loope
inc
inc
mov
fildl
shr
fs
push
fiaddl
fidivs
inc
inc
or
or
cmp
xor
xor
push
fisubs
dec
inc
jg
jle
and
test
sub
or
add
or
sub
addl
cmp
test
xor
jae
jmp
fmuls
adc
into
cld
fstpt
in
adc
adc
clc
sbb
add
push
cmp
and
into
cwtl
das
xlat
out
pop
imul
hlt
cwtl
mov
rcll
push
ret
jle
push
dec
and
fdivrl
cli
pusha
sti
ret
jl
loope
repnz
and
mov
and
and
mov
leave
pop
and
lcall
mov
int
sbb
push
inc
mov
xchg
mov
aad
fstpl
ja
jne
add
imul
fcoml
jne
movsl
inc
mov
dec
inc
mov
cmp
loope
jno
lods
aas
mov
sub
dec
leave
xchg
lahf
xchg
cmp
xchg
cs
adc
jo
mov
adc
xor
negl
and
jmp
aad
iret
push
hlt
and
adc
adc
movsl
mov
scas
and
mov
adc
shrb
mov
jo
cld
pop
cmpsl
cli
adcb
loop
adc
cmpl
sbb
adc
xor
int3
push
push
add
mov
or
subb
cli
rorl
inc
adc
es
add
sbb
stos
xchg
inc
xchg
inc
roll
adc
cmp
lock
or
ds
mov
push
adc
jle
and
orl
xchg
and
shlb
sub
ss
jo
std
mov
cs
add
ljmp
sub
cmp
xor
or
jmp
loop
aaa
ljmp
pop
xor
jns
daa
and
cmp
add
mov
mov
jmp
testl
mov
outsl
jae
dec
and
adc
ret
addr16
fcmovnu
popa
cli
mov
inc
push
call
push
sub
nop
xlat
push
mov
mov
xchg
xlat
xor
sub
adc
pop
jne
aad
es
scas
addr16
pushf
mov
pop
repnz
sbb
test
mov
xor
mov
decb
xor
js
sub
mov
in
cmp
push
push
insb
and
ficoml
outsb
sub
push
cwtl
shll
adc
std
std
push
xchg
and
mov
subl
jmp
repnz
or
clc
xor
cmp
push
sbb
cmpsb
sbbl
adc
sub
or
fdivr
jecxz
push
jecxz
sbb
or
mov
rcrb
push
adc
push
call
sbb
push
pop
loope
lret
movsl
gs
inc
sub
bound
daa
sbb
mov
ret
aas
test
and
pop
jne
dec
stos
cmpsl
mov
push
call
cmp
jmp
jp
jmp
sub
or
mov
sbb
inc
adc
and
popa
xorb
xor
or
xchg
nop
xor
in
pop
scas
xchg
pop
push
push
les
jge
and
call
imul
loop
fstpl
out
adc
mov
inc
aad
pop
push
rep
and
add
clc
cltd
clc
xchg
pop
in
push
popa
cld
xor
out
call
xchg
push
test
push
jmp
inc
dec
xchg
sub
mov
mov
add
mov
aad
orb
sti
mov
mov
mov
jbe
xchg
jle
dec
lock
xlat
lods
leave
mov
xchg
andb
hlt
test
jne
movsl
sub
dec
pop
loope
mov
mov
and
pop
data16
or
dec
decl
jmp
cmp
pop
xchg
sub
adc
sbb
lea
js
xor
jbe
je
das
aam
adc
mov
mov
and
mov
ljmp
cli
and
mov
jo
and
cmp
push
push
or
pop
add
add
push
jmp
fcomip
mov
cmp
pop
or
mov
in
mov
pop
loopne
add
inc
add
movsbl
nop
orl
add
outsb
shlb
push
pop
mov
push
push
rolb
jb
pop
sub
jg
fsubrp
push
in
incb
leave
cmp
and
jl
test
ror
mov
into
push
push
push
jbe
or
push
pop
movsl
add
and
and
repz
push
imul
push
incb
ffree
out
stos
jle
push
addr16
xorb
fidivrs
inc
sub
dec
sbb
adc
cwtl
mov
test
xchg
jecxz
mov
inc
sbb
nop
pop
mov
xor
jo
inc
xor
mov
inc
jno
pop
mov
ja
packssdw
ja
out
shlb
sub
mov
mov
adc
fsubp
orl
aad
pop
movsl
test
push
push
jbe
jne
cmpl
mov
add
imul
inc
sbb
dec
movl
out
xchg
pusha
adc
lods
inc
movsl
mov
inc
daa
jmp
push
sbb
out
aad
scas
shll
js
dec
je
fisttps
movsb
int
sbb
xchg
inc
loope
in
mov
pop
xchg
andl
pop
mov
repnz
dec
dec
loope
jo
add
inc
xchg
lcall
int3
adc
aaa
and
inc
fsub
mov
call
xor
shl
or
jl
jge
push
lock
or
xor
aas
jge
adc
enter
cmpsl
leave
jp
dec
int3
cwtl
sbb
jl
fidivrl
push
xchg
and
pop
inc
lds
mov
sbb
jecxz
xor
inc
mov
subl
jmp
test
push
test
adc
pop
std
sub
movsb
out
test
in
mov
and
pop
push
flds
sbb
std
mov
pop
push
sahf
shll
lret
mov
pop
add
push
push
aas
cltd
daa
cmp
and
call
hlt
cmpsl
leave
push
sbb
idivl
pop
or
jns
push
adc
imul
in
jg
pop
mov
or
xor
sbb
jne
xchg
mov
sub
mov
xor
ret
loopne
call
pop
inc
xlat
adc
jnp
dec
jns
pop
inc
sbb
cld
jno
sbb
push
aaa
add
jne
fs
stos
and
fildl
xor
out
inc
xor
dec
sbb
mov
push
sbbb
pop
outsb
and
jbe
or
push
out
jno
jge
cld
cltd
call
push
fucomp
mov
mov
xor
test
mov
stos
push
test
add
jmp
push
gs
mov
sbb
cmc
mov
adc
push
mov
insl
push
lods
les
pop
stos
pand
cmpsl
jbe
in
int
das
out
or
bound
gs
testl
push
xchg
mov
adc
enter
fsubr
sub
mov
jb
adc
pop
enter
dec
scas
inc
fisttps
mov
pop
or
lahf
xor
add
bound
pop
or
lea
dec
arpl
adc
mov
mov
test
ljmp
rcll
jno
mov
jno
or
pushf
out
push
repnz
js
xor
sbb
cs
jmp
das
sahf
mov
mov
je
push
cmp
cli
and
push
in
dec
jne
das
mov
xor
aaa
sbbb
adc
inc
sbb
and
add
jo
jmp
sbb
fiadds
sbb
and
or
out
in
jb
aas
add
addr16
and
fldenv
inc
ja
xchg
in
mov
sbb
rcr
movntps
add
or
aad
and
incb
imul
adc
lcall
fs
adc
or
dec
push
pop
pop
ret
int
and
xor
or
adc
push
or
push
shrl
sub
dec
sbb
push
stc
or
pop
cwtl
and
std
cmpsb
mov
mov
mov
sbb
adcb
adc
inc
testb
add
push
xchg
aad
pop
xchg
add
loop
mov
popf
pop
adc
xlat
or
js
pop
inc
ja
xor
in
test
xchg
mov
in
insb
mov
inc
sbb
adc
pop
not
and
fadds
push
dec
imul
or
rolb
mov
sahf
pop
fisttps
test
incb
push
lret
mov
and
jbe
mov
inc
pop
dec
and
sub
lock
mov
test
call
inc
sbb
jmp
std
add
fidivs
xchg
pop
arpl
or
ret
mov
pop
cmp
push
les
cmc
fstl
ret
mov
sub
dec
push
scas
ret
es
add
or
loopne
dec
cwtl
int3
and
cmc
pop
cmp
sahf
sub
jge
and
leave
push
pop
fdivr
xor
fcoml
and
jne
loope
in
lea
cld
loop
mov
inc
sahf
push
pop
xchg
data16
in
movsl
inc
xlat
out
enter
jne
jge
jecxz
sub
insb
leave
mov
push
mov
test
inc
lahf
nop
pop
cwtl
xchg
mov
pop
cmp
mov
mov
and
cld
jp
cmp
push
les
adc
push
or
sar
and
jne
cmp
lret
push
cs
and
pop
sub
aas
adc
je
lock
add
stos
and
push
popa
gs
stos
or
cwtl
daa
sub
icebp
jmp
lret
xor
sub
orl
push
das
dec
aam
mov
jne
and
jp
sbb
enter
lahf
mov
stc
jae
mov
aaa
mov
and
cmp
ret
out
cmpb
pop
lret
add
xor
orb
mov
xchg
fcompl
clc
ljmp
cmpsb
adc
bnd
lods
rcl
xlat
and
or
and
das
ret
xchg
adcb
das
hlt
sub
pusha
sub
sub
push
je
cmp
jae
cld
add
sbb
xor
ss
dec
dec
dec
jmp
outsb
stos
add
add
js
cwtl
cmpsb
pop
jmp
sub
in
jle
xchg
xor
push
lea
das
test
mov
or
or
fstl
and
xlat
paddb
sarl
enter
sbb
sbbl
cmpsl
out
inc
sbb
adc
je
jmp
rolb
dec
loope
les
dec
or
adc
sub
sbb
cltd
add
sub
sub
rorl
cli
cwtl
xchg
add
inc
pushl
adc
cmpsl
mov
push
mov
dec
ret
clc
mov
or
aam
mov
movsl
jae
mov
xchg
or
call
jmp
cmpsb
pop
adc
inc
jle
dec
mov
xchg
push
xchg
and
dec
sbb
int3
mov
xchg
inc
mov
mov
movsl
push
jg
or
mov
aam
test
xor
aaa
leave
jns
xchg
push
and
das
or
inc
out
xchg
mov
xlat
push
call
cmpsl
outsl
cmpsl
rorl
push
lahf
leave
rolb
push
jg
xor
das
addb
addb
cwtl
sbb
fs
inc
test
xchg
and
jmp
in
arpl
xchg
bndstx
mov
pop
lret
push
push
inc
adc
inc
or
cmpsl
mov
jmp
ret
cmp
mov
lahf
scas
sbb
cmp
inc
and
nop
add
int
xchg
fadd
push
enter
test
dec
mov
aam
sbb
testb
push
clc
pop
xchg
fdivrp
pop
push
lcall
sti
add
adc
or
or
outsl
or
int3
out
adc
adc
adcb
and
xchg
mov
test
stos
dec
push
in
inc
or
xor
jg
sub
in
rcr
movsb
and
rsqrtps
addr16
or
or
mov
sub
inc
or
or
mov
ret
mov
adc
xor
mov
fsubs
nop
mov
mov
push
sbb
xor
jmp
mov
inc
cmp
add
sbb
add
add
cmp
enter
xchg
inc
add
mov
xchg
and
aad
jmp
pop
mov
jmp
inc
ljmp
dec
or
fnop
std
outsb
adc
addl
inc
test
movsb
imul
out
mov
jmp
inc
and
fdivs
int3
pop
mov
fadd
sbb
call
inc
jl
or
jmp
pop
mov
or
adc
adc
mov
inc
mov
inc
inc
cmp
add
pop
adcl
out
cwtl
pop
insl
inc
adc
rclb
push
inc
test
enter
mov
inc
dec
je
sub
das
or
mov
ret
insl
xor
leave
cli
mov
push
inc
ficomps
dec
jne
rorb
pop
pop
mov
sbb
sub
or
and
mov
cmp
inc
cmp
push
sub
rorb
adc
rep
incl
and
das
rcll
or
pop
mov
enter
sbb
jae
lea
aas
xor
cltd
sbb
or
adc
int3
adcl
or
add
cmp
rcr
xor
daa
test
daa
mov
adc
sbb
xorl
call
xchg
and
jmp
and
jmp
fnstcw
dec
inc
rolb
lock
adc
arpl
dec
mov
jge
test
xchg
jl
dec
mov
mov
jb
std
mov
sarb
adc
dec
fldcw
xor
adc
sub
dec
data16
sbb
adc
add
dec
stos
dec
or
jp
sbb
push
out
repnz
xchg
imul
out
xchg
mov
push
cltd
test
mov
inc
movsb
lods
mov
sbb
xor
sbb
xchg
and
adc
cs
and
adc
cs
and
and
insl
int3
loopne
out
or
mov
jl
outsb
push
mov
ss
adc
sti
cmc
call
cmp
sbb
lock
jmp
imul
repnz
es
xor
dec
cli
cli
popf
test
push
inc
push
inc
dec
out
testb
adc
xchg
pop
scas
mov
or
pop
pop
sbb
clc
sbb
sub
pop
loop
inc
dec
aaa
jmp
adc
arpl
pusha
mulb
xchg
add
call
out
push
or
in
mov
push
mov
js
dec
mov
jno
inc
inc
int
or
hlt
mov
push
jb
call
and
sbb
divl
xor
mov
rcrl
test
mov
jg
lret
mov
cmp
jg
push
ret
mov
push
or
je
fistpll
jbe
inc
inc
pop
loopne
xor
sahf
mov
mov
adc
cmp
lock
adc
xor
scas
pop
sbb
daa
scas
or
or
or
dec
mov
mov
nop
scas
cltd
or
xchg
adc
lea
jmp
mov
and
jb
mov
bound
mov
inc
mov
xor
sub
adc
jmp
sti
xor
cmpb
ss
push
cmp
je
test
mov
and
adc
pop
push
or
inc
add
pushf
push
xchg
cmp
and
inc
jecxz
xor
push
rcrb
mov
mov
sbb
nop
mov
inc
imul
aaa
es
and
bsr
jns
xchg
and
sub
inc
stc
push
or
data16
and
xor
or
push
fistpl
lock
jl
adc
mov
inc
adc
push
adc
int3
in
and
sub
dec
lcall
xor
testb
je
push
xor
sbb
push
movsb
subl
scas
push
push
or
push
sub
mov
cmp
dec
xchg
orb
pop
pop
popa
adc
gs
add
mov
rolb
sub
cmp
push
mov
cmp
inc
xor
sub
jle
jl
mov
jb
mov
pusha
inc
movl
and
arpl
pop
stos
sub
add
sbb
mov
stos
inc
sbb
sub
mov
pushl
cmc
lods
sub
push
je
xor
jb
and
or
or
push
mov
jmp
pop
mov
add
call
dec
mov
sbb
es
sarb
es
data16
add
add
test
fwait
shrb
and
jmp
mov
pcmpgtb
inc
ret
aam
mov
out
pop
cmc
mov
cmovne
or
ss
pushf
xor
push
sbb
adc
orb
push
push
push
jg
and
sub
ja
push
add
sbbl
inc
dec
sbb
fbstp
mov
or
lret
push
inc
adc
sbb
ret
pop
fiadds
push
sbb
cmc
rep
mov
jmp
addr16
inc
or
mov
add
call
push
push
mov
sar
mov
xlat
jne
jecxz
push
xchg
ss
ret
jne
mov
ret
fidivrl
pop
divb
xchg
pop
pusha
aad
test
mov
shl
xchg
xchg
or
jp
and
fsubrp
out
push
lcall
adc
cmp
dec
dec
mov
and
dec
push
loopne
push
mov
sub
jbe
push
xchg
mov
adc
or
adc
negb
lds
test
std
lock
adc
adc
or
adc
iret
jmp
xor
call
cmp
mov
outsl
mov
mov
push
adc
cs
or
mull
sub
ret
mov
add
mov
fiaddl
jmp
xor
push
mov
and
pop
adc
adc
fdivrs
add
movsb
adc
push
dec
int3
adc
mov
sbb
dec
jmp
mov
xor
mov
xchg
fists
cmp
mov
mov
or
or
test
movsl
push
mov
xor
pop
jb
xchg
std
xchg
int3
push
sub
dec
xchg
mov
inc
invd
jmp
pop
xlat
dec
sub
out
pop
stos
out
sbb
push
fldt
adc
jne
mov
movsl
cmpl
bnd
inc
cmpsb
loope
adc
lea
dec
mov
push
incb
or
or
cmpb
btl
movsl
icebp
mov
ljmp
adc
mov
mov
nop
mov
or
or
sub
inc
or
inc
or
xchg
stc
pop
fiaddl
or
scas
fisttps
add
dec
lea
and
mov
add
dec
daa
ret
call
repz
enter
or
dec
insl
xor
mov
dec
sbb
inc
cmpb
cmp
mov
out
add
in
mull
sub
xor
xchg
mov
cmp
jp
mov
add
inc
inc
mov
cmp
std
jb
sub
pop
clc
out
cld
lds
mov
and
add
js
sbb
rorb
push
xchg
sbb
aaa
lea
and
loop
dec
popa
sbb
xchg
add
mov
push
dec
pop
or
leave
pop
jecxz
loop
fs
sub
cmp
ficoms
add
dec
mov
mov
movsl
ret
mov
or
xchg
adc
movsb
inc
cmp
mov
cmc
sub
test
adc
xor
pop
test
mov
jge
in
mov
mov
add
inc
lea
mov
add
or
pop
push
or
fwait
test
leave
out
push
mov
mov
fwait
sbb
add
les
push
call
jmp
lods
and
xor
std
jbe
and
iret
sub
push
cmp
jae
add
stc
mov
or
xchg
cmp
mov
dec
dec
sub
cmp
scas
into
and
cwtl
sub
sub
jecxz
je
xor
fadds
push
push
xchg
sub
mov
add
hlt
mov
or
add
lret
adc
add
jb
xlat
add
xlat
imul
call
out
ds
jecxz
dec
in
lea
pop
test
push
inc
inc
je
cmpb
sub
xchg
and
inc
mull
inc
xchg
inc
movsb
flds
test
sub
lret
pop
fldl
cmpsl
popf
push
add
test
call
push
cwtl
dec
jmp
mov
lahf
in
aas
push
std
push
inc
cmp
dec
je
gs
mov
loopne
push
adc
push
jmp
fstpt
jmp
sub
sbb
adcb
cld
unpcklps
jge
cmp
add
pop
fisubrl
add
jmp
clc
call
into
xchg
stmxcsr
into
sbb
xchg
pushf
adc
pop
sets
js
lahf
pop
or
and
push
fiadds
pop
lds
mov
inc
mov
add
jmp
xor
jbe
inc
or
mov
add
sub
or
jmp
mov
ljmp
std
sub
sub
inc
aam
adc
rorl
mov
ss
push
call
daa
dec
pop
sub
mov
xchg
cwtl
nop
jle
add
jae
push
popf
jl
pop
cmp
jbe
push
push
sti
dec
mov
aaa
dec
cmp
cmc
daa
mov
addl
mov
mov
dec
rcll
and
add
pop
mov
jne
data16
lods
mov
and
insb
xchg
dec
cmpsl
test
sub
add
or
addb
mov
roll
sti
push
adcb
icebp
mov
lea
test
jp
push
cmp
imul
inc
ret
aas
sub
jp
sub
sar
addr16
inc
stos
or
shll
xor
jge
shlb
inc
and
push
or
loopne
push
outsl
and
stos
adc
cmp
aad
ljmp
sub
dec
inc
cmc
loope
div
lret
xor
je
push
movsl
push
xchg
cld
dec
mov
add
cmp
add
syscall
mov
or
aad
push
lea
xchg
and
cmp
xchg
hlt
or
mov
jg
daa
pop
or
lret
jp
ffree
xlat
ret
or
adc
test
or
adc
dec
mov
stc
add
xchg
jae
mov
aad
dec
xor
sarl
sub
sub
stc
or
inc
mov
outsb
sbb
int
sub
push
scas
and
cmp
jb
mov
repnz
enter
stos
or
sbb
and
aaa
add
sub
mov
jb
add
adc
mov
cli
imul
test
mov
adc
mov
sub
arpl
jg
sbb
add
and
inc
ljmp
inc
fcoml
jmp
inc
les
mov
xor
push
sub
xor
add
loopne
push
push
fstp
inc
sub
mov
enter
push
jl
ds
std
les
adc
inc
pushf
inc
js
xor
mov
mov
push
movb
pop
rcrl
xor
sahf
cwtl
cmp
xchg
test
clc
or
cmp
inc
sarl
ja
fcompl
or
mov
jbe
add
int
es
and
add
jmp
in
call
jo
pop
in
adc
cmp
mov
add
xchg
lods
sbb
das
mov
clc
mov
stos
stos
hlt
inc
stc
and
ret
sub
add
les
fcoms
adc
nop
shll
sub
inc
or
add
add
cmp
sub
cwtl
mov
xchg
cmp
or
in
xchg
push
or
mov
xchg
lods
in
or
mov
aam
lods
sbb
push
xchg
add
and
cld
jne
mov
inc
ret
negb
inc
sbb
testb
mov
nop
rorb
inc
sbbl
push
call
inc
push
nop
or
arpl
jbe
adc
push
dec
dec
ret
xchg
mov
js
repz
adc
mov
adc
inc
or
pusha
fst
ret
icebp
mov
push
dec
push
fcomps
push
inc
cmp
shrl
adc
ret
add
lods
inc
or
incb
movb
mov
add
loopne
and
push
ret
jb
mov
or
pushf
ret
lahf
lds
mov
mov
rorb
dec
xor
jne
sub
and
sar
and
ret
mov
f2xm1
shrb
add
mov
decl
dec
inc
sub
mov
mov
jmp
pop
test
ret
nop
cmc
push
add
sub
cmp
sub
xchg
xchg
movsb
andnps
xchg
add
and
xor
mov
add
stc
and
bound
pusha
jp
cltd
push
xchg
stos
add
mov
push
pop
mov
add
cli
cmp
enter
jo
pop
inc
mov
mov
inc
jmp
shll
sub
dec
push
xchg
and
ucomiss
je
cmp
outsl
fbstp
mov
pop
dec
or
mov
nop
lret
and
imul
aaa
or
mov
fucomi
imul
xchg
sub
jmp
inc
or
dec
lret
lock
test
mov
jne
loope
sub
inc
fistpl
inc
xor
test
xchg
push
push
ljmp
repz
push
mov
inc
lds
cmpsl
sub
xchg
adcb
inc
mov
xchg
scas
mov
test
adc
cmc
imul
mov
or
sbb
js
mov
xchg
xchg
mov
sbb
es
mov
push
push
xor
xor
jb
shl
mov
dec
push
shrb
rolb
cmpl
jae
jae
nop
inc
popa
cmp
push
push
inc
mov
and
xor
dec
dec
adc
cmc
adc
testb
fidivl
pop
pop
int3
dec
pop
mov
bound
adcl
push
popa
arpl
ds
pmaddwd
jmp
or
notb
dec
dec
sbb
cmp
mov
or
and
xchg
lock
push
or
add
cmp
lret
inc
clc
xchg
jb
imul
jmp
in
loopne
cmp
adcl
or
dec
and
clc
sbb
pusha
ljmp
cmp
iret
pusha
push
push
out
pop
ret
and
xchg
jmp
notl
or
xchg
cmp
xchg
imul
jecxz
add
and
and
push
adc
fcoms
outsl
adcl
std
xlat
adc
dec
jecxz
in
or
mov
mov
lds
xor
push
imul
call
and
push
push
mov
pushf
aam
insb
ret
mov
mov
nop
movsb
sub
test
push
call
testb
shrb
sub
sub
aam
pop
xor
cmp
clc
jmp
push
sbb
aad
mov
and
cmp
jne
mov
mov
dec
andl
notl
and
inc
push
imul
cmpsl
xor
push
shrb
neg
pop
or
adcl
adc
je
fsubl
and
jmp
call
mov
inc
add
or
xchg
push
inc
cmp
outsl
xchg
notb
cltd
inc
hlt
adc
xchg
divb
adc
mov
inc
lock
sub
inc
out
jp
leave
push
push
or
std
push
adc
jmp
mov
loop
fwait
mov
fisubs
sahf
lods
insl
inc
lcall
cmp
xchg
mov
dec
and
lahf
mov
add
das
add
inc
fisttpll
int
mov
inc
les
push
push
adc
iret
add
xchg
pop
mov
adc
add
ljmp
pop
mov
xchg
xor
push
shl
pop
sub
pushf
push
xor
pop
cwtl
daa
popf
clc
push
xchg
and
inc
rol
aad
ret
and
xor
cmp
sbb
and
shl
add
call
lea
jmp
mov
xchg
adc
or
xor
test
sub
jne
and
adc
xchg
sbb
jmp
add
jecxz
gs
mov
sub
lea
or
cwtl
bound
pop
sub
adc
lret
in
dec
sbb
adc
xchg
push
adc
xor
fisttpl
cmp
mov
push
lret
and
mov
inc
loope
or
push
outsb
mov
shlb
and
jmp
push
test
jmp
mov
dec
icebp
sub
adc
mov
mov
inc
push
jle
adc
out
dec
push
sbbl
ror
jbe
imul
jp
movsb
jle
dec
les
and
aas
leave
jno
cmp
aad
xor
push
push
fistpll
aad
mov
fidivrs
push
push
fmuls
push
daa
call
fs
int
lea
sub
inc
movsl
push
xchg
aas
in
ljmp
push
inc
sbb
jne
xchg
cmp
int3
fadds
call
push
push
dec
rcl
imul
mov
push
sub
je
stos
outsb
cmp
shll
xor
sbb
es
push
sbb
idivb
nop
mov
insl
jae
inc
mov
dec
xlat
pop
rorl
inc
add
cmp
xor
std
fcoms
mov
cmp
out
inc
push
or
stos
and
lea
arpl
xchg
mov
push
inc
cltd
mov
mov
jo
cmpsl
jb
mov
or
sub
rorb
adc
mov
lret
or
jne
das
jne
shlb
bound
in
cmp
and
out
test
cmp
or
or
daa
jmp
int
mov
test
stc
insb
ficoms
fmuls
aad
mov
or
lds
jne
out
jle
push
pop
rorl
test
pop
cmp
outsb
sub
push
dec
pop
repnz
or
or
pop
xchg
and
inc
in
jbe
mov
lcall
inc
sbb
sbb
pop
pop
adc
sbb
ss
jge
mov
lock
adc
add
mov
dec
sbb
sbb
and
gs
mov
dec
inc
push
adc
pop
ljmp
inc
push
dec
ret
pop
push
hlt
dec
adc
movsl
fdivrp
cli
imull
inc
cmp
adc
imul
ja
dec
dec
rorb
pop
cwtl
push
mov
mov
push
mov
stc
push
xor
lods
mov
jg
pop
adc
cmp
ja
push
jle
mov
sbb
mov
je
jnp
mov
jl
lahf
push
fwait
les
andl
push
int
fsts
test
lods
fldt
lret
jl
pop
xchg
je
loop
mov
jmp
jbe
movsl
sub
cmp
es
or
pop
push
push
cmp
ret
add
sub
jnp
xchg
fwait
mov
les
ds
fisubs
cld
mov
les
mov
loopne
xchg
adc
cmp
shlb
push
subb
mov
inc
mov
mov
inc
fwait
orb
xchg
adc
lds
fmull
repz
pop
and
enter
fcomps
sbb
xchg
mov
fimuls
jl
imul
lods
mov
inc
and
dec
adc
es
or
pop
lret
or
adc
lcall
and
inc
lods
pushf
mov
sarb
test
jl
add
add
mov
mov
push
movsl
loopne
mov
divl
sbb
pop
sbb
jb
jp
andl
cmp
arpl
add
nop
push
adc
cmp
adc
add
add
push
mov
add
in
iret
or
sarb
dec
arpl
jle
adc
xor
adc
sbb
mov
shrl
push
xchg
shl
stos
xor
xor
adc
das
popa
xor
add
xor
roll
and
xor
fs
pusha
add
mov
sub
hlt
mov
push
xchg
rcrl
or
or
xor
insl
xor
mov
cmpsl
data16
orl
mov
mov
inc
aad
rcll
add
dec
adcb
je
sbb
sbb
adc
icebp
xchg
jo
mov
mov
mov
xchg
enter
test
sahf
xor
or
sbb
or
mov
inc
lea
or
lret
dec
and
mov
loope
jo
inc
sahf
bound
adc
arpl
pop
mov
add
mov
xor
cltd
jnp
sbb
xor
add
xor
or
or
pushf
dec
adcb
or
sub
xor
add
sbb
pop
mov
mov
sub
sbb
mov
and
decl
ja
or
xchg
add
and
jp
or
inc
mov
mov
adc
sbb
das
andl
mov
push
popa
xchg
dec
jbe
clc
sub
adc
enter
adcl
push
add
arpl
mov
adc
mov
mov
rorb
sbb
or
add
dec
inc
xchg
insl
sbb
cmp
xorb
sbb
and
adc
add
xchg
or
movsb
nop
imul
jecxz
cwtl
or
sub
inc
jae
jo
inc
pusha
push
pusha
sbb
fwait
loop
inc
sahf
bound
and
add
dec
mov
in
les
imulb
mov
rcll
adc
imul
jmp
mov
xchg
adc
subl
xor
mov
add
add
and
dec
aad
pop
jle
and
mov
test
mov
jo
loopne
or
pop
xor
outsl
fsubs
jae
lcall
test
mov
dec
push
pop
or
adc
mov
xchg
add
mov
mov
and
je
insb
fadds
mov
or
sub
or
adc
call
push
jmp
imul
sub
sarb
dec
inc
add
mov
push
and
jno
xchg
cmpsb
dec
clc
dec
and
lahf
add
dec
lds
cs
cwtl
inc
int
les
jg
or
test
cwtd
jecxz
and
push
sbb
xor
and
dec
or
mov
adc
sub
or
data16
mov
inc
or
sbb
sbb
jl
mov
dec
push
jns
fs
xchg
adc
mov
xor
mov
or
mov
adc
mov
sbb
dec
inc
decb
or
add
add
movsb
sbb
enter
or
mov
cmp
jp
lock
adc
and
or
cmc
and
jo
mov
or
adc
in
add
popa
pop
subb
jle
int3
sub
or
mov
mov
sbbl
bound
in
les
pop
lds
cmp
sbb
xchg
test
daa
inc
xchg
stos
mov
adc
sub
cld
and
push
push
jl
xor
aam
or
xchg
fwait
and
pusha
popf
add
mov
cmp
jne
or
pop
inc
out
inc
call
and
mov
jbe
cmp
clc
add
inc
mov
movsb
lock
and
sub
sub
enter
cmp
fistpll
scas
arpl
xor
jae
xchg
mov
or
je
adc
jns
cmp
sub
dec
enter
lcall
daa
pop
sub
test
xchg
mov
loopne
mov
aad
inc
std
fmuls
sub
lcall
add
xor
push
cwtl
mov
test
add
je
sbb
add
pop
cwtl
sbb
or
or
int3
jmp
aam
addb
or
les
dec
mov
or
mov
inc
les
pop
or
or
mov
orl
cmpsb
lret
int3
mov
adc
sbb
sbbb
orl
call
mov
test
jp
mov
sbbb
and
stos
mov
iret
mov
sahf
sbb
lea
nop
les
popa
xchg
push
inc
push
js
test
mov
cmp
add
xchg
nop
popa
xchg
adc
lcall
ds
sbb
sub
fs
or
mov
imul
cltd
adc
xchg
mov
push
cmpsb
sbb
enter
jno
nop
ds
or
mov
dec
mov
add
and
into
inc
dec
mov
sbb
push
and
stos
out
orb
mov
aas
pop
dec
dec
add
ret
pop
jl
fs
push
and
popa
push
add
lret
add
enter
mov
test
cld
adc
int3
add
and
dec
cmp
inc
jno
mov
dec
xlat
xchg
jmp
push
inc
es
mov
fs
dec
mov
mov
out
and
into
add
dec
sbb
xor
mov
push
and
dec
insb
xchg
jnp
mov
mov
dec
ret
xchg
int
xlat
inc
loope
mov
pop
in
or
xchg
sbb
sub
push
mov
dec
stos
mov
int
or
and
and
rolb
mov
dec
outsb
xchg
test
xchg
inc
fwait
mov
and
dec
mov
inc
aad
mov
rcr
xor
sbb
adc
pop
dec
mov
sbb
inc
jae
andb
mov
dec
in
xchg
clc
adc
shlb
sbb
mov
adc
pop
dec
addr16
jno
jnp
xchg
and
dec
mov
inc
loope
mov
adc
roll
adc
xchg
cmp
dec
inc
pop
mov
mov
and
inc
fucomip
mov
adc
aam
push
and
dec
ss
inc
and
addr16
mov
sahf
and
dec
hlt
cltd
popf
or
dec
aam
fisubs
call
push
lret
adc
xor
adc
and
dec
in
cmp
cmc
and
aad
sbb
and
xchg
inc
and
pop
imul
inc
jno
cltd
adc
or
adc
and
fcompl
adc
and
or
adc
enter
inc
and
pop
or
xchg
andl
mov
adc
and
inc
pop
xlat
or
sub
cmp
mov
xchg
dec
mov
int
faddl
mov
fcomp
stc
and
or
xchg
cmp
dec
inc
pusha
jo
test
xchg
and
dec
mov
enter
jmp
fnstenv
dec
dec
pop
xchg
arpl
outsl
inc
orl
xchg
shll
fldl
mov
and
and
gs
jp
mov
and
inc
rcr
mov
adc
daa
add
adc
and
inc
xor
pop
adc
js
mov
xor
into
inc
fdivp
mov
orl
inc
dec
push
xchg
pusha
and
jl
lret
adc
adc
xor
dec
jmp
fldl
aaa
dec
inc
xchg
push
and
jno
int3
imul
cwtl
adc
leave
and
inc
loope
mov
adc
fiadds
adc
xchg
aas
xor
pop
or
and
imul
lahf
and
ficoml
out
and
filds
dec
xor
leave
xor
inc
and
dec
cmp
pop
cltd
shll
or
mov
and
inc
aam
mov
adc
sub
xchg
dec
and
jae
mov
dec
into
mov
loope
push
dec
and
xor
inc
inc
dec
pop
mov
push
test
adc
inc
jbe
int3
or
sbb
lret
add
or
sub
or
mov
adc
and
loop
adc
xchg
sub
pop
mov
jb
jle
mov
mov
mov
adc
and
dec
cld
mov
jecxz
sbb
and
push
adc
fs
insb
xchg
jl
mov
mov
adc
and
psubw
lock
or
adc
in
sbb
mov
pop
and
dec
outsb
xchg
jl
mov
mov
fcoms
clc
pop
inc
in
mov
adc
and
dec
ds
dec
and
gs
adcl
and
dec
test
inc
iret
loope
icebp
adc
out
push
and
dec
ss
inc
and
arpl
adc
xchg
mov
out
mov
cmc
lods
mov
and
push
dec
pop
xchg
and
mov
and
dec
mov
inc
jecxz
mov
call
and
dec
ds
dec
and
pop
imul
dec
xchg
xchg
mov
into
mov
adc
and
inc
push
jmp
and
inc
cmp
dec
adc
dec
outsb
xchg
jl
xchg
mov
iret
xchg
and
inc
in
mov
adc
ljmp
xchg
inc
and
push
pusha
mov
je
test
xchg
cmpsb
and
ret
or
adc
and
dec
add
sub
and
dec
pop
xchg
and
jge
mov
mov
inc
loope
and
dec
decb
and
inc
ss
mov
and
dec
xchg
xchg
movsl
and
aaa
add
je
jbe
js
jp
jl
dec
pop
call
jecxz
dec
xor
testl
shrl
fnstenv
loope
jmp
jle
add
cmpb
jbe
jo
dec
test
jo
stos
js
movsb
mov
pushf
out
cmp
and
inc
cmp
mov
add
push
sahf
and
xor
fcoml
cld
pop
sub
sbb
adc
sbb
adc
mov
or
push
xchg
add
xor
add
cs
add
dec
out
dec
das
dec
outsl
push
scas
dec
ljmp
cmp
sub
jle
sub
cmp
and
andb
cmp
inc
push
mov
pop
jo
inc
mov
jno
rorl
inc
rorl
popa
push
xor
xor
les
pop
les
test
pop
les
mov
xchg
add
test
add
lds
clc
adc
and
adc
jp
cmp
push
adc
adc
rclb
sbb
sbb
adc
ss
mov
adc
sbb
sbb
pop
mov
push
sbb
pop
mov
push
adc
adc
adc
pop
jp
in
adc
aam
sbb
cld
pop
dec
pop
mov
push
loop
xchg
adc
dec
xchg
jb
in
xor
xor
popa
push
rcrl
fwait
and
dec
rcrl
push
shll
mov
xor
outsb
xor
shll
dec
xor
mov
mov
popa
cwtl
popa
fidivl
mov
push
rol
shll
rol
int3
rol
mov
pop
shl
adc
loop
bound
mov
popa
lods
shr
jmp
shr
es
rol
jno
shl
sub
repz
add
shl
cmp
stc
sar
sti
xor
sar
inc
jno
ret
addl
add
cmp
cmp
cmp
pop
aas
or
or
or
or
aas
adc
adc
adc
adc
adc
adc
aas
sbb
sbb
sbb
sbb
sbb
sbb
aas
and
lahf
and
es
daa
lahf
sub
sub
xor
xor
xorl
jle
cmp
inc
bswap
iret
inc
popl
iret
inc
iret
inc
iret
dec
iret
push
iret
push
int
je
sbb
sub
mov
pop
stc
pop
xor
jmp
pop
stc
pusha
stc
popa
stc
stc
arpl
fs
gs
data16
mov
aas
es
js
jle
jl
jle
jle
jl
jle
jle
jle
jle
jle
push
jne
rorl
adc
into
stc
ja
js
into
and
loope
jmp
jge
jle
jg
cmp
stc
cmp
stc
test
test
xchg
xchg
mov
mov
mov
mov
mov
stc
mov
stc
nop
stc
xchg
stc
xchg
stc
xchg
stc
xchg
stc
xchg
stc
xchg
stc
xchg
stc
cwtl
popa
or
mov
stc
fwait
popa
push
and
testl
add
test
fadds
das
daa
dec
inc
pop
addr16
imul
out
out
out
out
out
out
out
out
out
in
xchg
sbb
sbb
sbb
dec
out
out
in
xchg
cmc
addr16
mov
mov
cli
lahf
push
pop
daa
popf
es
push
push
pop
lahf
addr16
scas
add
out
out
out
in
xchg
and
cmp
sbb
out
loope
add
leave
aaa
stc
ss
dec
stc
out
inc
stc
stc
fdivr
fucom
fsubrp
icebp
aad
icebp
aam
shll
xor
jb
je
jbe
js
jp
jl
jle
jle
sbb
add
sahf
les
stc
xchg
filds
and
mov
xchg
xchg
in
lcall
pop
mov
lds
or
ds
inc
popf
inc
sahf
adc
adc
pop
adc
rcrl
inc
lahf
enter
lret
pop
in
lahf
int3
lahf
int
into
pop
xchg
add
addr16
in
xchg
cmpsl
sub
out
mov
cmpsl
ljmp
xchg
adc
pop
in
xchg
movl
jb
aas
out
mov
mov
sbb
in
movsb
out
or
mov
fsub
call
cmpsl
pop
cmpsl
test
lahf
xchg
cmpsl
cmp
cmp
dec
out
out
cmpsl
shl
loopnew
ret
movsb
ret
hlt
loop
test
lods
add
cld
imul
cli
cld
sti
mov
mov
clc
stos
cld
lods
cld
cld
cwtl
push
add
cmp
sub
cmp
cwtl
dec
cld
dec
sbb
push
inc
mov
inc
dec
popl
push
jae
jb
insb
jecxz
popa
imul
cmpb
arpl
or
inc
jb
push
repz
imul
jp
movsb
push
or
jo
adc
ljmp
inc
aaa
scas
mov
cmp
adc
data16
adc
test
aam
xor
inc
jns
lds
add
push
outsl
jne
movsl
shlb
pop
inc
jo
inc
popa
insb
push
xor
push
and
popa
push
outsb
addr16
xor
push
sbb
insl
push
jns
or
xor
ljmp
dec
xor
jb
pop
dec
jne
sub
cmp
xchg
mov
int3
inc
aad
pop
or
mov
cmp
and
mov
dec
fisttps
gs
jl
or
push
ds
jne
or
dec
xchg
jo
dec
outsl
data16
pop
cld
outsl
scas
or
insl
bound
inc
jecxz
or
push
adc
aas
add
push
dec
inc
pop
leave
dec
mov
jecxz
adc
inc
gs
inc
jae
data16
cmpsl
sbb
gs
adc
push
jne
data16
je
adc
cmpsb
mov
insb
sub
adc
inc
cmp
push
orl
push
inc
fidivs
pop
jmp
jmp
mov
push
aam
xchg
arpl
fsubs
js
mov
dec
sub
pop
jne
lods
cwtl
iret
cmp
mov
xlat
push
cmp
dec
adc
adc
inc
shlb
sbb
fisttpll
sbb
jbe
mov
inc
adc
aas
addr16
jbe
adc
subb
inc
push
xchg
or
dec
xor
aaa
dec
adc
xchg
adc
sub
dec
pop
cmc
sub
adc
jge
dec
sbb
and
adc
or
dec
js
lcall
jns
adc
loope
dec
stc
enter
and
sbb
fs
orb
cli
adc
adc
cwtl
push
ds
adc
and
inc
jae
sbb
fiaddl
sub
xor
outsb
popa
or
imul
imul
or
push
dec
sbbl
push
loop
xchg
mov
mov
movsl
cmp
and
lahf
sub
push
lds
xchg
xor
ljmp
cltd
or
sbb
mov
adc
push
or
iret
dec
ljmp
dec
stos
sub
imul
dec
and
dec
outsl
fs
dec
or
sub
sbb
push
inc
mov
lcall
jecxz
addr16
adc
push
jl
sti
or
or
or
mov
outsl
push
scas
mov
or
mov
jnp
jo
adc
movsb
les
test
sub
pop
lret
sub
lcall
xor
fcoml
sbb
lss
mov
mov
inc
pop
out
fs
xor
xchg
adc
jmp
imul
in
inc
movsb
adc
adc
sbbb
mov
jns
inc
scas
push
dec
cmp
pop
insl
bound
bound
push
iret
pop
sub
adc
test
push
mov
ljmp
ja
stos
repz
test
jo
sub
push
addr16
jae
imul
or
pop
movsb
cmp
mov
push
movsb
aad
xchg
mov
dec
mov
addr16
or
ficoml
insl
sbb
jp
xchg
xor
mov
sahf
inc
aam
xor
mov
hlt
repnz
rcll
or
dec
jbe
out
dec
adc
sbb
movsb
repz
mov
adcl
cmovnp
xor
and
jae
setl
inc
jo
scas
or
test
inc
imul
je
shrd
pextrw
dec
xor
xor
push
outsb
pop
sub
movsl
or
mov
popf
jne
dec
loop
mov
xchg
xchg
pop
inc
test
push
xor
mov
sbb
mov
test
push
dec
pop
inc
mov
ljmp
dec
jo
notb
push
push
jo
dec
adc
or
insb
lock
adc
arpl
cmp
and
cmp
xor
and
push
mov
dec
cltd
xchg
out
xchg
push
ljmp
push
mov
mov
into
jb
imul
cmp
jae
insb
cmovno
repnz
pop
scas
push
push
push
jecxz
cmc
jb
js
dec
iret
insl
cmpsb
or
dec
adc
push
adc
push
repnz
mov
cltd
arpl
insl
mov
push
pop
stos
cmp
xchg
lcall
dec
mov
test
les
or
xor
inc
js
mov
push
dec
ja
popf
xor
shlb
ficoml
setnp
stos
jb
inc
insb
dec
ss
pop
je
aam
test
jbe
jb
sbb
sub
adc
cmpsb
sbb
mov
push
ficoml
xchg
sub
inc
jp
mov
testl
loop
xchg
or
and
jo
jne
dec
inc
dec
sbb
movsb
cmp
fs
push
adc
scas
aad
jecxz
int3
imul
pop
test
sub
and
mov
sahf
cmp
jb
and
push
push
push
daa
scas
imulb
dec
mov
xor
and
xchg
jp
les
mov
pop
inc
mov
or
mov
lret
inc
mov
lods
adc
out
scas
adc
les
pushf
andb
scas
mov
or
inc
jb
call
or
adc
test
jb
pop
xchg
adc
pop
adc
pop
cmovns
or
fisttpll
outsb
mov
sbb
jb
push
ljmp
cli
nop
imul
xor
test
clc
clc
fsts
sbb
mov
xchg
push
fdivp
jae
sahf
loope
ret
mov
scas
lea
or
mov
arpl
push
pop
or
out
jae
cmp
imul
jne
mov
push
imul
jae
inc
ficompl
fistpl
push
pop
push
jne
fwait
adcl
xchg
mov
dec
or
sbb
lock
movsl
adc
test
insl
leave
pop
push
rcrw
sub
jne
gs
lahf
outsb
and
imul
insl
insb
hlt
xchg
cmpsl
jo
js
and
push
iret
scas
or
adc
arpl
mov
jmp
jo
outsl
mov
stos
xchg
adc
sub
rcl
dec
pop
clc
push
or
imul
push
sbb
cmp
in
leave
inc
test
jp
out
in
bound
or
mov
sbb
dec
push
insb
popf
xchg
mov
insl
clc
ss
pop
movsl
or
sbb
stos
das
or
sbb
imul
sbb
push
or
fs
outsb
sbb
cltd
movsl
or
or
inc
jno
jo
lea
sbb
ss
dec
xchg
lcall
or
fimull
mov
test
mov
testb
dec
movsl
push
mov
insb
rcll
sub
xor
sbb
lods
sub
push
mov
or
adc
pop
adc
sub
inc
outsl
sub
movsl
cmp
jp
aad
lfs
push
sbb
mov
and
or
ja
scas
or
xor
inc
js
jmp
mov
pop
and
dec
leave
sub
aam
adc
dec
mov
xchg
sub
movl
dec
lock
pop
and
xchg
xchg
push
pusha
push
pop
xchg
pop
movsl
cmp
pop
pop
outsl
into
pop
dec
rcll
sarb
xchg
iret
cmpsl
or
fisubrs
push
mov
je
add
fisubrl
data16
repnz
cmp
ss
jne
dec
sbb
jb
or
pop
inc
sub
dec
cmc
dec
mov
xchg
dec
dec
jo
int3
dec
or
mov
xor
and
insb
lods
insl
pop
lahf
jb
cmpsl
inc
inc
jle
xor
cmp
jae
lea
inc
jno
inc
adc
or
jg
xor
enter
sbb
jl
repnz
lods
or
jne
stos
lea
test
jbe,pn
test
mov
punpckldq
ljmp
push
or
arpl
shll
inc
push
cmpsl
push
adc
sub
popf
adc
mulb
adc
arpl
inc
imul
lods
aaa
btcl
xchg
sbb
lret
sbb
cmovp
jo
adc
cmpsb
push
dec
stc
jl
xor
in
adc
sub
push
dec
dec
iret
jg
inc
dec
push
inc
push
in
or
or
fsubs
pop
stc
aas
sbb
sbb
rcr
jnp
adc
dec
sahf
imul
and
movsl
rorl
mov
lcall
push
test
js
mov
fwait
jns
xlat
jb
jne
aaa
sub
daa
xchg
add
stos
adc
jp
push
push
lea
adc
scas
fs
into
push
mov
mov
pop
test
or
lahf
push
jns
movsl
insl
xchg
dec
jne
xchg
xor
push
sbb
xchg
jb
jp
push
dec
pop
cmc
out
dec
inc
push
jae
dec
cmpsl
shlb
repnz
push
dec
leave
pushl
dec
adc
mov
jnp
mov
lds
call
or
cmpsb
movzwl
inc
scas
bt
gs
adc
xor
push
addr16
and
stos
jle
xorb
and
aad
adc
stos
movsl
sbb
sbb
dec
imul
and
or
xchg
imul
xchg
fisubl
dec
dec
inc
mov
test
push
or
dec
pop
insl
cmpsb
fs
imul
shlb
or
dec
adc
or
loopne
inc
sub
or
and
adc
and
pop
ljmp
push
adc
lret
adc
adc
sub
aas
jg
dec
mov
lods
xlat
xchg
or
dec
and
xor
xchg
cmp
adc
or
pop
adc
aam
mov
fwait
bswap
push
mov
aam
adc
sub
cmpsl
cmp
addr16
xchg
loope
outsb
sbb
adc
sub
hlt
shrl
or
imul
lcall
mov
cmpsb
jbe
mov
jnp
mov
mov
pop
fwait
push
push
dec
mov
fwait
inc
leave
mov
pop
inc
scas
loop
inc
test
or
sbb
xchg
inc
xchg
mov
xor
test
sbb
test
push
or
or
jbe
add
sbb
shlb
js
jge
scas
dec
rcrb
insl
pop
adc
enter
and
or
push
dec
dec
inc
pop
pop
inc
xor
sub
notb
mov
jae
or
lret
rcll
jg
mov
out
or
fsqrt
mov
jbe
or
push
mov
mov
xor
push
daa
imul
sub
mov
dec
rcpps
dec
jmp
jecxz
lods
xor
aad
push
sub
ja
pop
inc
ja
push
mov
sarb
sub
xor
imul
not
fisubl
jnp
in
daa
cmp
out
sahf
in
dec
and
jecxz
in
cpuid
loop
adc
push
inc
fldln2
ss
add
push
stos
add
mov
mov
adc
xchg
test
addb
add
mov
dec
mov
pusha
inc
dec
dec
push
pop
inc
push
inc
push
dec
cmp
xchg
ficomps
dec
jae
or
and
cltd
and
jb
sub
les
or
cmp
inc
xchg
or
sbb
es
clc
xchg
add
push
adc
lock
andl
or
inc
xchg
adc
decb
fmulp
or
mov
adc
and
dec
adc
inc
push
bound
sub
add
add
adcl
pop
int3
sub
andb
int
aas
or
add
out
inc
lock
xchg
adc
xchg
or
xor
fwait
in
fs
mov
cs
adc
jns
pop
bound
das
test
ds
insl
mov
test
cmpsb
or
adc
out
stos
add
adc
sub
adc
and
cmp
push
scas
es
mov
mov
mov
ja
int3
nop
push
adc
les
sub
and
or
or
pop
adc
pushf
sub
jl
cmp
sbb
adc
cmovns
icebp
notl
add
sub
out
fsubrl
or
int3
xchg
sub
int3
sbb
or
mov
and
std
inc
enter
adc
inc
orb
gs
sbb
insb
adc
cmp
sbb
inc
es
or
enter
inc
lret
inc
sub
and
dec
dec
cltd
xor
pop
jge
test
sbb
es
xor
xchg
lds
add
push
and
adc
sub
js
fistpl
les
out
ret
or
cmp
or
andl
inc
movsb
aam
inc
fimuls
in
xlat
rolb
xchg
or
pop
dec
adcl
repz
add
dec
dec
xchg
and
mov
iret
adc
es
inc
dec
push
inc
lret
ficompl
cmp
jmp
mov
mov
fsts
adc
and
adc
mov
sub
xchg
add
push
dec
in
push
add
xchg
enter
rcrl
mov
xorb
pushf
or
mov
cmpsb
xchg
ret
push
xor
mov
push
mov
adc
and
inc
or
or
jmp
lret
lahf
mov
shr
shr
jmp
mov
sbb
arpl
xor
mov
adc
add
repz
or
or
mov
inc
iret
adc
pop
sub
test
lock
add
mov
add
add
or
cmp
ret
or
dec
pop
xor
rorl
jnp
inc
mov
addl
sbb
adc
cld
mov
push
cmp
jl
adc
adc
int3
popa
push
or
xor
js
inc
cmpsb
cmp
int
adc
xchg
or
xor
cld
scas
and
push
lret
mov
cmp
clc
into
push
or
xchg
or
xor
imul
xorl
mov
dec
clc
popa
shrl
nop
pusha
sbb
sub
clc
xor
and
jo
adc
inc
pop
xor
add
sub
shlb
mov
sbb
mov
adc
dec
enter
adc
mov
dec
push
add
push
test
andb
and
pop
and
std
dec
sub
dec
outsb
mov
mov
mov
lahf
lock
cmp
les
daa
je
jae
pop
sbb
jo
addr16
insl
pop
pusha
and
je
jne
enter
dec
inc
orb
and
jbe
addr16
push
inc
sbb
xchg
dec
mov
ja
bound
inc
and
cmp
add
add
add
or
or
sbb
jo
push
add
adc
or
and
movsl
or
dec
push
pop
or
or
cmp
seto
enter
adc
and
xor
inc
push
daa
push
adc
push
adc
sbb
sbb
and
push
xchg
lds
dec
and
push
xchg
push
cmp
and
jo
push
and
mov
cs
or
inc
mov
inc
jb
mov
mov
clc
xchg
roll
mov
xor
in
sarb
push
or
cmp
test
rcrb
dec
and
rcrb
adc
pusha
cmp
xor
inc
dec
roll
xor
xchg
jmp
push
push
rclb
mov
add
add
jno
adc
mov
idiv
jne
sub
and
or
cwtl
mov
sub
movsb
add
test
mov
loop
or
add
loopne
xchg
mov
clc
out
add
add
shlb
add
push
into
adc
dec
dec
xor
or
popl
test
adc
shlb
jne
les
in
or
shlb
mov
mov
loopne
or
sub
adc
mov
mov
adc
repnz
push
mov
inc
push
inc
mov
inc
push
fildl
add
fistpl
pusha
mov
ret
push
mov
xor
mov
push
adc
lock
mov
xchg
pusha
pushf
cmpb
notb
subl
mov
jp
sbbb
adc
pop
mov
ljmp
pusha
insl
add
and
or
bound
sbb
mov
xchg
add
loopne
in
popa
mov
rcr
icebp
xor
adc
inc
add
lods
adc
inc
add
daa
popa
jecxz
xchg
outsb
adc
es
add
aam
in
xchg
cwtl
out
jo
inc
and
cmp
push
adc
add
sarb
andb
adc
loopne
stos
push
xchg
aad
and
mov
mov
mov
lock
mov
xchg
dec
xorb
adcb
addb
mov
inc
xor
xor
push
pop
and
mov
mov
mov
push
mov
jo
sti
add
test
adc
ret
inc
and
xchg
dec
and
test
loopne
adc
adc
fs
cld
inc
cmp
xor
or
and
fcomps
add
call
mov
jae
push
adc
push
pop
and
xor
aam
inc
and
test
push
push
or
lret
fildl
push
xchg
roll
rorb
jecxz
fmuls
add
push
push
xor
pop
popf
xor
pop
inc
test
repz
cli
xlat
sub
fdivr
scas
adc
ds
jne
outsl
loop
aad
imul
leave
outsl
aaa
out
sbb
xchg
jns
adc
outsb
mov
dec
sub
adc
call
or
cld
dec
jne
mov
daa
and
movq
fs
outsb
iret
je
bound
xchg
lret
fldt
mov
dec
outsl
jmp
mov
scas
sub
and
or
inc
outsl
mov
arpl
sahf
adc
imul
and
adc
sar
pop
mov
shrl
adc
rcll
test
popa
into
push
dec
xchg
xchg
adc
stos
push
dec
mov
adc
jp
fidivrs
push
fs
mov
jecxz
add
adc
xchg
fs
sbb
inc
push
ss
jb
jge
jno
inc
dec
fmuls
mov
xchg
sbb
inc
push
stos
xor
cwtl
ret
sub
mov
inc
cltd
push
sub
je
nop
and
fs
adc
pop
xor
enter
mov
or
mov
inc
inc
xchg
in
les
int3
es
popa
data16
mov
enter
pusha
xor
lods
and
dec
pushf
xchg
dec
xor
pop
loop
inc
dec
jo
cmp
sub
and
dec
mov
adc
movsl
sbb
mov
mov
mov
imul
ja
sbb
jae
and
clc
arpl
popa
jo
inc
xor
lock
out
mov
test
imul
xor
sbb
leave
xor
fucomip
lods
in
pop
aam
fs
cmc
inc
inc
outsb
jbe
stc
pop
sbb
push
sbb
imul
mov
inc
mov
adc
dec
push
adc
fwait
jae
adc
jecxz
adc
mov
lea
aad
mov
pop
ret
lcall
push
push
outsl
adc
lret
push
jle
dec
aam
pop
dec
inc
pop
add
xchg
or
xchg
inc
mov
enter
dec
icebp
int
adc
jle
icebp
loopne
shlb
jb
subl
loopne
hlt
andb
inc
adc
hlt
xchg
in
loopne
sub
add
aas
leave
add
fs
loope
dec
push
outsl
and
sub
pushw
dec
ds
dec
and
cmpsl
xor
inc
aam
or
aad
pop
incl
loopne
or
sbb
or
push
push
dec
mov
xchg
xor
and
sub
cs
jo
and
inc
je
mov
in
pop
add
add
dec
or
dec
jo
std
shll
lcall
mulb
adc
and
dec
lret
and
and
sarl
iret
clc
lds
test
cmpsb
mov
push
cmp
pushf
movsl
ret
andb
xchg
or
add
push
dec
inc
pop
push
sbb
mov
dec
movsb
adc
dec
data16
xor
and
std
into
imul
ljmpw
sar
out
or
movsb
sbb
or
cmp
add
dec
ss
or
mov
and
clc
push
push
or
nop
bound
xchg
xor
mov
dec
mov
sbbb
push
rorb
sub
inc
cld
inc
push
cld
or
xchg
mov
or
sub
nop
cmp
dec
enter
sbb
stc
pop
or
push
push
cli
arpl
mov
xor
sub
xor
clc
adc
cmp
outsb
and
inc
inc
jge
jo
push
lds
add
jns
sbb
add
les
cwtl
lret
movsl
or
jmp
nop
push
fcompl
adc
or
and
adc
xchg
in
add
xor
cltd
adc
dec
or
xchg
and
xor
test
js
jo
pop
imul
sub
xor
ljmp
sbb
movsb
add
sbb
xor
mov
sub
arpl
mov
idivl
cmp
adc
xor
mov
jb
ss
mov
testb
pop
push
inc
dec
dec
inc
inc
inc
xor
imul
dec
aam
push
adc
jnp
add
xor
sub
inc
or
or
jge
push
in
jg
inc
jb
ret
insb
and
addr16
lcall
or
arpl
cmp
pop
inc
lods
clc
adc
lock
jno
adc
xor
mov
dec
repnz
fistpll
sub
sbb
pop
cmpsb
je
popf
loop
enter
adc
leave
in
addb
add
add
jae
pop
mov
push
ljmp
outsl
pop
data16
subb
imul
jne
inc
mov
push
arpl
ss
push
and
sbb
in
jmp
mov
xlat
xor
popf
sbb
and
orl
or
adc
call
dec
and
dec
rorb
popa
xchg
js
pusha
fdivl
cs
js
xchg
mov
movsl
js
dec
cmpsb
js
jno
ror
cwtl
mov
or
leave
testl
lods
push
xchg
or
jnp
pushf
out
inc
loopne
push
loope
and
inc
push
imul
popa
and
mov
sub
loopne
or
add
enter
inc
or
sbb
loop
xchg
add
insb
and
pusha
inc
dec
push
dec
jb
aam
and
cmp
testl
or
lds
push
out
arpl
sbb
adc
ljmp
sub
dec
push
lock
cmp
mov
xchg
or
inc
popa
or
rorl
lock
inc
clc
pop
test
mov
cmp
stc
adc
sbb
add
cmc
add
dec
lret
js
outsb
pusha
push
fsubs
pop
jne
sub
jmp
adc
mov
mov
cmp
inc
push
cld
push
sub
jecxz
mov
lret
mov
iret
mov
shrb
aas
clc
or
testb
mov
mov
xchg
enter
xor
add
or
pushl
dec
bound
xorl
jo,pn
jo
xchg
cmp
pusha
cltd
add
test
int3
xor
mov
inc
mov
xchg
inc
inc
and
insl
shlb
xor
aam
xor
lock
cmp
rclb
push
and
adc
pop
push
les
mov
in
mov
push
sub
popa
cwtl
stc
adc
xor
or
fsubp
sub
push
inc
out
cmp
mov
xor
or
cmpsb
sbb
adc
adc
cmc
and
sbb
mov
adcb
inc
push
orb
xor
add
add
and
dec
mov
jp
dec
mov
mov
adc
dec
mov
mov
push
fdivs
arpl
push
mov
mov
push
or
jo
outsb
jle
in
add
leave
sbb
jae
adc
cltd
dec
lock
insb
lahf
jmp
dec
and
push
test
ret
insl
imul
pop
pop
inc
dec
dec
adc
cld
or
mov
aaa
jo
jl
dec
enter
aaa
xchg
je
in
stos
push
imul
and
add
addr16
cs
ss
stc
push
ret
inc
sbb
insb
mov
sahf
stc
sbb
xchg
inc
inc
pop
je
xchg
jmp
mov
push
push
pop
test
or
sub
or
test
push
adc
jne
mov
or
dec
rol
jno
daa
add
insl
imul
adc
sub
push
mov
dec
mov
sbb
lock
mov
mov
in
repnz
loop
cmp
jl
or
test
leave
adc
js
lods
mov
inc
mov
or
jbe
mov
mov
aaa
enter
pop
les
sub
or
or
dec
js
xor
cs
mov
xchg
mov
clc
xchg
cmp
test
jp
push
jl
sub
lds
je
lahf
lret
negl
ret
test
call
gs
xchg
and
pusha
sub
add
adc
push
adc
stos
sbb
or
mov
xor
and
jne
aam
test
xchg
dec
sub
lods
xchg
adc
pop
dec
pop
dec
pop
push
add
adc
or
enter
sub
push
int3
and
insb
mov
xchg
pop
pushf
ds
push
cwtl
cmp
push
sub
sub
mov
mov
sbb
mov
adc
sbb
adc
iret
push
in
sbb
popa
imul
lret
and
fldl
int3
or
enter
mov
ret
xchg
or
adc
pushf
and
test
push
subb
or
adc
xor
mov
or
or
inc
mov
mov
mov
bound
or
test
mov
sub
or
scas
sbb
or
adc
imul
or
and
ret
dec
and
xor
fcoms
call
cmpsl
data16
jge
xor
or
pop
xchg
mov
and
ret
push
adc
sbb
or
push
mov
dec
dec
test
xor
shlb
lds
and
fyl2x
or
adc
and
inc
mov
add
je
and
dec
mov
stos
and
sub
jo
xor
inc
addr16
adc
mov
push
sub
mov
pop
dec
jne
push
push
jecxz
adc
cwtl
xor
int3
and
call
cmpsl
push
pop
call
sub
adc
xor
jmp
call
aas
or
lods
call
sub
xor
call
adc
inc
call
sbb
lods
or
mov
xlat
or
push
xor
ret
adc
and
in
popf
outsb
call
inc
cmp
call
sar
sbb
ss
lods
adc
pop
sub
jmp
pop
ljmp
jb
pop
or
sub
push
iret
pop
dec
and
pop
pop
dec
pusha
repnz
and
mov
mov
pop
mov
or
sahf
pop
adc
xor
pop
imul
bnd
inc
jp
pop
push
mov
fcomp
cmpsl
pop
ja
or
dec
sbb
jne
insb
insl
outsl
outsb
xchg
sbb
add
stc
pop
pushf
and
xor
pop
sbb
pop
or
xchg
bound
hlt
push
imul
xlat
stc
fadd
push
push
dec
push
movsb
stc
imul
push
lret
mov
jo
das
shrd
addr16
push
dec
outsl
int
dec
sbb
cld
inc
aad
or
test
mov
push
push
inc
lahf
pop
dec
leave
adc
cld
std
jo
cld
mov
scas
mov
cltd
sbb
xchg
or
repnz
push
adc
cld
jl
fistpll
and
lds
dec
add
and
inc
and
sti
cmpsl
jo
mov
and
shlb
sarb
hlt
xchg
mov
xchg
or
les
add
stc
adc
popf
clc
cmp
push
or
insb
xchg
jb
xor
or
and
out
and
xor
fimull
in
mov
inc
or
imul
or
jnp
lea
lahf
inc
int
rorl
loopne
add
or
or
aas
mov
mov
cwtl
inc
ret
in
mov
sub
mov
inc
shll
push
dec
mov
dec
test
decb
dec
aas
or
or
imul
mov
out
and
pop
push
iret
or
sub
or
sarl
jno
or
mov
or
ret
xor
popf
or
add
and
inc
cmp
sahf
and
and
push
xchg
inc
pop
sbb
icebp
inc
xchg
or
dec
enter
enter
movsl
enter
add
aam
xor
or
and
add
iret
xchg
loop
lods
xor
sub
je
sub
or
mov
and
or
push
push
enter
insb
and
jns
and
xor
or
pop
cmp
xor
push
mov
push
adcl
sub
or
sub
les
ljmp
push
or
and
adcb
cmp
or
insl
or
pushf
adc
or
or
dec
push
pop
enter
mov
out
jno
xor
inc
push
fmull
xor
outsb
sbb
xchg
or
pop
cmp
xchg
arpl
and
mov
out
repz
sarb
adc
inc
or
test
mov
or
adc
sub
cltd
ja
test
mov
jle
push
cmp
inc
push
push
pusha
fimuls
xchg
or
pop
or
nop
sbb
lea
arpl
cmp
and
or
int3
adc
mov
add
dec
xchg
adc
or
inc
adc
test
dec
mov
dec
mov
add
and
add
or
sub
inc
cld
inc
addl
inc
mov
fimull
jmp
xor
adc
and
lock
xlat
jmp
mov
or
dec
sub
insl
push
in
xchg
mov
or
xorb
shrl
mov
cmp
test
jl
cmp
outsl
or
mov
in
mov
xchg
inc
int
inc
ds
and
dec
scas
xchg
out
jno
movsb
push
cltd
mov
aas
or
inc
sub
inc
add
es
and
loope
or
xchg
add
stos
adc
and
xlat
and
inc
sub
jb
fdivrl
test
adc
add
and
add
out
push
pop
in
les
dec
mov
or
xchg
jno
lcall
fs
jg
xor
xor
pop
scas
mov
test
out
and
inc
es
insb
sub
sub
outsl
dec
add
sbb
xor
xor
pusha
in
shrb
cwtl
lret
es
xor
push
inc
xor
dec
mov
mov
dec
push
inc
sbb
dec
xlat
loope
xor
sahf
sbb
push
inc
cmp
into
cmp
push
jne
out
push
sbb
inc
add
add
or
jmp
xchg
adc
jmp
cmp
mov
mov
ret
call
or
imul
xchg
xor
mov
push
xchg
or
dec
and
rorl
mov
xor
jo
lods
pop
leave
xor
lods
pop
movsl
mov
js
or
pusha
adc
sbb
fs
cmc
dec
add
aas
inc
push
sub
mov
cli
int3
xchg
or
adc
push
pop
or
sbb
dec
jo
outsb
pop
push
rclb
mov
push
and
enter
aas
fdecstp
push
movsb
push
push
push
and
or
adc
push
aaa
jp
jg
push
push
mov
mov
push
in
xor
xor
inc
dec
aad
jb
push
mov
xchg
fcmovb
xlat
mov
cmpsl
fisubl
cltd
push
mov
dec
repnz
cmp
test
push
cmp
xor
lcall
cli
rcl
stos
cmpsb
adc
push
inc
aas
mov
in
add
enter
shlb
add
loopne
mov
adc
and
dec
pop
xchg
clc
and
call
adc
dec
and
or
mov
or
pushf
push
sub
clc
xor
and
outsl
and
cmp
or
dec
fsts
or
and
data16
push
or
les
fwait
or
or
mov
jnp
xor
or
pop
jge
cmp
int3
inc
fimuls
in
out
addb
into
adc
xor
or
and
cwtl
adc
ss
js
inc
jns
in
cmpsb
jp
inc
and
sbb
sbb
mov
enter
je
movsb
sub
adc
je
xchg
xchg
mov
add
movsb
adc
xorl
loopne
or
inc
sbb
and
and
daa
dec
inc
sbb
test
rcrb
push
loopne
rclb
ljmp
adc
xchg
cwtl
mov
or
pop
mov
or
mov
outsb
inc
nop
enter
inc
lret
mov
dec
mov
mov
fcmove
or
or
les
mov
loop
stos
inc
mov
enter
pop
lret
sub
inc
or
pusha
lret
inc
outsb
dec
test
pop
jl
adc
dec
arpl
adc
mov
and
xor
adc
or
cmp
pop
lret
clc
incb
enter
in
adc
mov
cmp
inc
sbb
int3
cmp
cmpl
add
inc
cmpsl
les
in
pusha
dec
and
test
sbb
enter
inc
cmp
adc
and
pop
mov
daa
shlb
and
push
dec
dec
orl
lds
repz
xchg
or
mov
adc
adc
hlt
or
and
or
dec
and
sub
pop
cmc
xor
andl
push
imulb
stos
push
aam
or
adc
mull
dec
aam
jl
add
push
add
pop
and
arpl
xor
dec
xor
sbb
dec
push
movl
fs
cltd
dec
mov
test
cld
add
dec
fistl
jo
sub
pop
push
inc
mov
push
mov
call
cwtl
data16
adc
or
mov
jle
xchg
ror
dec
adc
inc
ljmp
je
xchg
dec
inc
sbb
and
movsl
xor
add
dec
fmul
pop
sub
pop
rcl
cli
subb
fldt
rol
fs
cs
icebp
nop
rolb
or
mov
jno
pushf
xor
jo
sub
pop
xchg
sbb
add
fdivrs
inc
mov
cmp
jecxz
push
inc
lret
sbb
sub
mov
or
nop
fisubs
adc
mov
xchg
adc
rcrb
sub
adc
out
in
and
mov
push
dec
mov
mov
add
push
mov
cld
or
push
adc
enter
pop
lods
or
cmp
arpl
mov
mov
pop
lods
sarb
scas
adc
cs
sbb
and
add
inc
ret
xchg
push
pop
and
xor
or
push
sbb
enter
add
and
mov
mov
or
xor
or
mov
fcoms
fcomps
mov
pop
xor
pusha
and
and
cs
push
inc
xor
xor
sub
or
xchg
jae
mov
sbb
fs
or
inc
add
rcrl
or
test
lds
mov
mov
call
xchg
or
pop
mov
stos
or
pop
xchg
push
mov
jb
loope
dec
add
movsb
lahf
jae
jge
or
push
adc
adc
inc
incb
test
or
dec
push
fisubrs
jne
jb
arpl
push
cmp
bound
jb
adc
jo
jo
fs
push
outsb
ljmp
inc
shrl
xor
xor
jae
jb
sub
or
imul
xchg
dec
jbe
lret
jmp
xor
mov
sahf
add
js
insl
fimuls
and
jecxz
mov
or
mov
lea
mov
roll
mov
mov
mov
div
push
rorb
test
fldl
arpl
arpl
jae
dec
dec
push
es
xchg
imul
adc
dec
iret
int
add
dec
lret
addr16
add
add
mov
and
push
fiaddl
dec
mov
cmpb
insb
gs
dec
xchg
js
mov
out
popf
lock
jns
ljmp
pushf
adc
dec
outsb
call
xchg
adc
dec
inc
or
inc
mov
jb
shlb
adc
sbb
jecxz
or
lods
pop
jb
sbbb
or
mov
mov
cmpsb
or
adc
pusha
mov
adc
jl
lahf
fldcw
ss
ljmp
imul
fs
addr16
addr16
ja
mov
scas
mov
inc
xor
mov
lea
pusha
mov
or
xor
es
dec
cmp
mov
hlt
rorb
mov
jne
lea
mov
hlt
lea
xor
addr16
pop
mov
add
pop
cmpsb
ljmp
jns
decl
and
adc
fldpi
add
popf
or
sbb
push
cltd
or
inc
adc
jnp
stos
addr16
inc
xor
inc
js
lahf
adc
and
mov
dec
and
pop
rcrb
adc
or
adc
adc
xchg
pop
adc
and
mov
push
mov
adc
in
pop
and
loopne
les
mov
cmp
mov
jb
daa
mov
mov
out
pusha
std
dec
cwtl
push
jb
popa
incl
jecxz
pusha
test
mov
adc
adc
fildll
stos
lock
pusha
push
jge
sbb
adc
aam
push
aad
adc
arpl
and
push
leave
cld
jge
or
sbb
add
nop
in
dec
and
or
fisttpl
sbb
ljmp
lods
push
mov
or
xchg
nop
and
inc
andb
inc
and
mov
adc
and
and
inc
mov
and
and
dec
sbb
adc
dec
add
and
dec
add
enter
mov
or
mov
sub
xchg
js
insb
xchg
das
and
pop
mov
push
and
dec
dec
mov
adc
jne
xor
jbe
sub
ja
mov
sbb
jns
adc
jp
or
jnp
mov
dec
add
hlt
dec
jle
in
and
loopne
mov
adc
and
dec
sbb
lods
and
test
pop
and
and
dec
pop
cmp
sbb
cmpb
sbb
shll
push
jne
and
inc
jg
ficoml
sub
testb
sbb
arpl
addr16
out
pop
mov
push
mov
xor
lret
dec
dec
js
scas
or
movsl
pop
inc
sub
or
xor
cmp
jb
sbb
dec
inc
cmp
ss
xor
jb
mov
inc
lock
push
mov
lea
push
or
push
push
fmul
inc
gs
int3
cmp
dec
cmpsb
adc
cmp
xor
inc
push
adc
cmp
sbb
fwait
adc
bound
inc
push
test
push
push
sti
outsb
mov
dec
dec
pushf
dec
dec
adc
inc
or
push
sub
sbb
adc
mov
ret
mov
out
pop
push
inc
and
gs
push
push
in
adc
xor
and
push
jge
pop
mov
adc
fildll
cmp
dec
and
mov
movsl
and
dec
mov
mov
pop
dec
cmp
sbb
dec
jns
sub
sub
mov
and
scas
pop
mov
insb
loop,pn
dec
mov
mov
cs
sub
test
dec
or
outsl
jne
mov
das
xor
jge
icebp
and
mov
jae
pushf
lcall
test
jne
sahf
adc
mov
jge
mov
add
sub
and
orb
adc
jmp
lods
jnp
mov
inc
or
sbb
sub
and
loopne
rorl
ss
fs
adc
xor
dec
js
sub
dec
mov
arpl
jl
push
pop
dec
push
inc
inc
pop
push
inc
dec
mov
fs
aad
push
pushf
shrl
outsl
jg
mov
push
pop
push
add
inc
dec
dec
ss
sub
lock
sub
sub
pop
in
in
pop
nop
pop
push
push
popa
dec
sub
imul
dec
aaa
shr
das
mov
movsb
pop
adc
daa
movsl
cltd
or
or
outsl
icebp
ret
test
ret
mov
and
and
push
sub
in
ljmp
xor
inc
push
lcall
sub
push
inc
dec
inc
adc
cmp
adc
lods
sbb
jecxz
andb
mov
xor
push
push
inc
inc
rolb
leave
jne
sub
push
fs
xchg
fcmove
dec
imul
in
sbb
and
lods
xor
push
jne
and
aaa
mov
inc
xor
jbe
lods
arpl
cld
shll
sbb
jo
shlb
inc
sti
ja
lea
shrb
lret
std
mov
adc
sbb
push
dec
fldt
add
cmpsl
mov
lock
xlat
or
sub
inc
pusha
arpl
adc
mov
or
andb
mov
mov
or
mov
or
lock
lock
or
pop
mov
sub
add
push
gs
jbe
and
popa
mov
out
dec
push
es
dec
and
xor
cli
pushf
and
sub
push
movsl
adc
inc
dec
pop
add
aas
xor
add
in
lock
inc
adc
xchg
pop
mov
xor
push
inc
push
inc
movsb
mov
add
lods
pop
test
pop
sub
adc
sub
lods
jp
dec
and
dec
adc
lods
add
pop
sub
or
repnz
adc
adc
repnz
cmp
cmp
cmp
cmp
or
or
gs
or
or
xor
or
sub
loope
jns
mov
jg
iret
adc
pop
sahf
push
add
mov
add
mov
adc
dec
sbb
mov
adc
enter
cmpsb
xor
fs
xchg
push
xor
and
rcll
adc
mov
adc
aas
inc
push
inc
mov
inc
pop
xor
int
sbb
and
mov
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
shlb
dec
inc
mov
inc
mov
mov
adc
and
dec
inc
popa
dec
inc
pushf
cmp
or
adc
sbb
mov
adc
dec
dec
add
inc
and
adc
push
or
pop
push
adc
and
xchg
sbb
sbb
push
xor
and
and
cmp
jo
cmp
mov
and
xor
sub
adc
cmp
push
pusha
sti
les
lea
and
add
adc
or
sahf
adc
mov
or
push
or
mov
ljmp
fs
je
stos
xor
add
adc
into
and
dec
add
pop
add
adc
dec
or
jne
xchg
dec
lods
xchg
leave
and
inc
repnz
inc
stc
xor
dec
adc
sub
cmpsb
sti
jecxz
mov
adc
out
leave
into
test
add
add
cmp
repnz
call
in
sub
fs
cld
jo
dec
je
shlb
inc
cmp
insb
adc
dec
xor
fsubrl
xor
cmp
cmpsl
add
movsb
dec
cmp
scas
pop
adc
repnz
jne
mov
loop
cmp
cmpsb
insb
push
popa
js
inc
sub
std
mov
pusha
jns
and
mov
adc
push
cmp
adc
dec
add
jl
iret
shl
mov
dec
xchg
adc
les
test
out
mov
das
and
mov
lods
xchg
mov
cltd
mov
lret
dec
push
sbb
adc
or
aaa
dec
inc
fs
subb
jg
mov
add
js
mov
mov
loop
sub
xor
loop
or
xor
loop
dec
loop
xor
xor
xor
and
xor
loop
and
xor
test
enter
iret
mov
push
popaw
jne
repz
xchg
scas
pop
cli
pop
je
iret
push
js
push
cmp
push
sub
add
and
cmpl
jp
jp
or
mov
cmp
or
ret
mov
pusha
loopne
cmc
ffreep
dec
push
repnz
xor
mull
hlt
iret
hlt
pushf
or
mov
nop
dec
jp
outsl
enter
and
movsl
xor
or
rcll
and
dec
mov
and
lods
adc
inc
es
jmp
into
or
xchg
dec
sarb
or
jne
pop
or
fs
and
pop
cli
or
int
pop
lock
or
cmp
aas
cmpsl
pop
hlt
cmovg
or
jmp
xchg
cmp
jmp
jnp
stos
sub
or
cmpsl
shrb
jp
jp
leave
or
mov
adc
lock
xor
push
push
dec
rcll
stos
mov
add
mov
adc
add
add
inc
xchg
inc
inc
push
rclb
cltd
or
mov
mov
out
and
push
sub
add
xor
and
push
mov
testl
sbb
inc
and
jo
sbb
cli
xchg
pop
lea
out
lods
adc
add
dec
add
xchg
ss
add
scas
sbb
add
add
xchg
les
mov
imul
add
xchg
adc
adc
cmp
jnp
sub
jb
pop
scas
sub
add
das
add
sbb
jle
add
hlt
out
outsl
lahf
adc
mov
jbe
fbstp
mov
sub
jp
cmp
mov
mov
xor
dec
xor
scas
sub
sbb
insb
adc
mov
dec
mov
push
or
adc
test
pop
mov
inc
or
xor
mov
scas
adcb
inc
xor
and
or
mov
lods
and
adc
lahf
out
jae
or
int
inc
loop
mov
and
or
adc
pusha
dec
jne
rcll
mov
xchg
andb
xor
or
or
or
jmp
mov
stc
inc
cmp
incb
mov
int
lods
dec
aam
add
mov
inc
sub
sbb
bswap
pop
xorb
rolb
shlb
push
sub
nop
push
call
adc
push
sbb
andl
jmp
lcall
add
push
lea
out
leave
xchg
hlt
dec
dec
push
inc
mov
sub
push
or
xor
cmp
sub
xor
je
outsl
dec
imul
cld
sub
sub
inc
aaa
pop
test
jne
push
movsb
cli
shl
sti
or
imul
outsl
inc
je
outsl
and
pop
push
shl
mov
out
sbb
test
pusha
cld
pop
ficoms
js
das
test
pop
mov
pusha
xor
scas
clc
cmp
jo
mov
jae
lods
and
push
push
cmp
jp
adc
push
and
xchg
insl
addr16
lahf
pop
movsl
fisttpll
sbb
xor
ficompl
lea
pop
lods
insb
fildl
xchg
nop
aaa
xchg
xor
sub
push
jle
sub
je
pop
sub
cmp
aas
ljmp
and
sub
mov
fildll
addr16
or
cmp
daa
jb
sbbb
inc
sub
ficoml
popf
xchg
fcoml
lret
notl
push
aad
cmp
out
xor
vmovaps
ds
gs
jo
loopne
mov
aaa
add
fcmovnbe
sti
sbb
add
mov
cmp
cmp
pop
pop
or
aaa
mov
push
jl
and
mov
aam
push
jo
js
add
inc
pop
add
outsl
setp
pop
outsb
bound
sub
fcoms
pop
jns
xchg
or
enter
fstpt
das
insl
outsl
nop
dec
pop
push
adc
test
and
inc
test
xor
xchg
sbb
movsb
inc
popa
imul
mov
movsl
jbe
jno
xchg
sub
or
adc
cmp
inc
jmp
dec
xor
mov
stos
das
or
mov
xor
xchg
or
orb
dec
xchg
inc
lock
xchg
xor
jg
add
fimull
leave
sub
inc
inc
cld
mov
je
jl
mov
jne
adc
adc
gs
out
lock
mov
nop
xchg
push
hlt
xorl
lret
xchg
inc
xor
sbb
push
and
hlt
pop
sbb
mov
push
add
cmp
adc
stos
insb
mov
stos
xor
jno
dec
fcoms
popl
xchg
or
into
adc
mov
bound
pusha
mov
adc
mov
mov
add
mov
adc
mov
inc
mov
or
and
in
insb
inc
mov
and
shlb
add
adc
xor
add
sub
adc
adc
stos
roll
sub
je
and
nop
jl
sbb
mov
ds
bswap
sbb
sbb
das
add
call
add
cmp
and
adc
testl
or
jnp
mov
mov
daa
pop
inc
sub
repnz
dec
xchg
add
daa
push
lret
dec
inc
and
xorl
mov
mov
inc
lret
enter
pop
push
sub
adc
add
pop
test
leave
ljmp
mov
inc
in
add
adc
cs
adc
imul
inc
cmp
inc
add
jo
loopne
mov
inc
mov
jl
xchg
nop
in
insb
and
xchg
adc
scas
mov
add
std
pop
adc
data16
or
push
popf
add
and
lea
push
inc
xchg
or
push
outsb
pop
insb
push
negb
xchg
popf
mov
and
testl
xchg
inc
ror
fcoms
stos
and
mov
in
pop
adc
add
mov
dec
push
incl
push
push
popf
jg
pop
call
hlt
xor
mov
push
out
mov
cmp
jae
mov
and
stc
or
pop
pusha
xchg
adc
jae
push
mov
push
jmp
pop
leave
ret
lods
ficomps
push
push
push
pushl
out
jle
sbb
xor
add
es
cld
or
pop
add
mov
add
push
jne
adc
add
je
lock
jne
jp
sub
fdivs
rcrl
fnstenv
rolb
xlat
cmpsl
into
dec
outsb
inc
or
jmp
push
cmp
and
or
and
jge
mov
into
xchg
lcall
mov
or
pop
ret
fildll
jge
sbb
jne
pop
pop
in
rorl
ss
add
mov
cmpl
mov
xor
mov
addr16
mov
pop
sbb
adc
pop
test
ret
jmp
mov
xchg
inc
sub
stos
out
aas
lods
sub
mov
fwait
push
in
lret
add
test
cmp
jne
cld
in
mov
adc
mov
test
ljmp
mov
cld
out
dec
sarb
jnp
sbb
cmp
ret
sti
aad
test
stos
lock
je
iret
cmp
xor
call
add
and
jne
push
xchg
das
mov
mov
push
xor
pop
mov
and
mov
and
jg
lret
pushf
mov
bound
mov
or
pop
or
xor
adc
cmp
jne
add
fsubrl
loope
cmpl
and
sbb
in
in
das
push
xor
mov
loope
or
sub
or
or
jmp
and
jmp
leave
push
nop
add
mov
sbb
mov
xchg
pop
orb
dec
imul
inc
or
leave
inc
jne
in
xchg
dec
enter
and
or
in
inc
test
nop
and
sbbb
or
push
sub
movsl
sbb
jb
out
xor
and
push
shlb
dec
pop
into
dec
pop
cmpsl
leave
cmpsl
sbb
cmpb
imulb
int
or
push
or
jns
pop
fstps
push
sbb
sub
sbb
movsb
test
xor
push
mov
and
add
mov
push
jmp
xor
mov
push
xchg
mov
mov
enter
inc
sti
lahf
std
push
push
xchg
cmpb
lahf
lret
arpl
das
jl
cmpl
fadds
xor
es
sbb
xor
mov
adc
push
and
fnstsw
push
loopne
inc
push
mov
shr
push
jl
pop
pop
rcrb
or
cwtl
mov
push
call
adc
andl
fiadds
dec
or
repnz
sti
mov
data16
fbstp
lds
call
fdiv
adc
push
movsb
sbb
sbb
test
xor
sbb
mov
dec
nop
adcb
cmp
inc
in
sbb
sub
and
xchg
call
xor
adc
pop
pop
push
repnz
pop
hlt
add
adc
xor
enter
loopne
test
and
shrl
adc
stc
add
test
enter
loopne
mov
add
test
into
pusha
iret
lea
or
aaa
mov
xchg
xor
loope
add
jbe
inc
sbb
loopne
adc
shlb
mov
rolb
cmp
jnp
cmpb
pop
and
cld
out
punpcklbw
inc
or
in
movb
dec
cmp
decl
lahf
rcl
mov
int3
imulb
shlb
mov
ret
mov
push
adc
pop
jge
lock
je
test
or
pop
mov
jmp
and
or
call
xor
push
add
push
inc
aas
mov
pop
xchg
sub
mov
in
call
xchg
dec
push
lea
jge
movsl
add
mov
xchg
pop
pop
or
xlat
inc
cltd
andl
mov
cmp
add
cmpsb
or
cs
or
adc
mov
mov
sbb
call
imul
mov
inc
push
mov
inc
or
lcall
ds
inc
push
mov
jge
dec
mov
or
cmc
repz
daa
xlat
add
shrl
add
xchg
clc
loopne
cltd
sub
pop
enter
sar
xchg
clc
out
mov
push
push
loope
dec
add
pop
add
sbb
fimull
xor
ror
sub
inc
push
lahf
enter
sarb
jl
or
ja
adc
pop
push
jnp
or
mov
add
jge
push
imul
add
jmp
scas
in
add
mov
pop
ljmp
mov
or
xchg
inc
mov
movsb
xchg
cmp
inc
xor
mov
lahf
jp
leave
cmc
pop
cmp
mov
push
or
lret
xlat
pop
pop
push
mov
add
mov
dec
pop
lcall
push
xchg
sub
xlat
fisttpll
shlb
call
xlat
loopne
je
dec
push
mov
imul
pop
negl
arpl
adc
sbb
xor
rclb
jge
fs
mov
xchg
pop
cs
mov
cmp
sbb
mov
nop
clc
push
jle
out
push
movl
cwtl
lock
push
xchg
cmpb
jmp
and
pop
lcall
fs
adc
or
push
dec
push
jg
and
mov
sub
dec
test
orb
add
fs
bound
adc
pushf
and
bound
mov
aas
mov
jmp
xor
adc
xor
out
xor
in
leave
xorl
jg
adc
push
jle
or
sbb
test
ret
fwait
call
jmp
and
rclb
nop
pop
lods
sysexit
mov
test
vcvttsd2si
add
push
cltd
loope
mov
inc
pop
and
xchg
mov
or
xor
cmp
nop
dec
xor
pop
push
inc
sahf
inc
jae
fs
loopne
cmp
mov
lea
dec
inc
push
sbbl
or
je
lea
xchg
stc
and
xchg
mov
dec
imul
sub
fimull
imul
cli
cmp
xor
cld
cmp
push
mov
cmpsl
cmp
int3
gs
sub
out
call
lock
add
clc
fdivs
mov
and
decb
cmp
dec
adc
cmp
sub
mov
jp
mov
inc
sbb
rcrb
repz
adc
in
sub
cmp
xchg
add
lea
rorl
or
repz
add
mov
adc
roll
pop
lea
push
aam
mov
push
dec
pop
add
shrb
inc
shl
fdivs
push
data16
movsl
js
inc
cltd
mov
sub
push
xor
cltd
into
mov
adc
adcb
mov
lock
xchg
xorl
ficoml
xchg
call
iret
and
stc
dec
adc
and
mov
ja
xchg
jmp
adc
movsl
lret
push
dec
and
cs
inc
inc
cmpl
and
push
pushf
dec
dec
adc
push
movl
aad
dec
imul
test
hlt
push
je
lcall
fmulp
es
js
jmp
inc
or
lock
fimuls
arpl
adc
rorl
rcr
mov
cmp
jge
repnz
xchg
lret
xorl
mov
sbb
je
xchg
mov
cmpsl
or
push
and
jns
shll
gs
adc
repz
xor
stos
scas
enter
enter
pop
push
or
jp
mov
outsl
push
add
add
ja
je
cmp
xchg
adc
mov
dec
cmpl
cltd
xchg
inc
cmpsl
sbb
out
loop
jmp
cmpsl
jbe
les
leave
bound
xchg
push
inc
jmp
cmp
call
mov
pop
ret
pop
fsubl
and
shll
or
push
or
fcmove
push
sub
cmp
ret
push
mov
jle
js
andl
cmp
or
push
push
in
jmp
and
mov
add
mov
bound
dec
sub
or
jae
out
dec
js
jg
ljmp
lods
sub
fsts
int3
xor
dec
ss
jmp
outsl
jo
xor
mov
or
clc
sbb
mov
les
push
sbb
xchg
and
popl
xchg
add
push
sub
add
xor
push
push
push
test
xor
test
jecxz
sub
adc
dec
aaa
cmp
or
push
and
testb
adc
mov
inc
jo
dec
push
and
xor
inc
mov
add
je
cmp
dec
cli
lods
cmp
inc
fdivrs
out
fs
xchg
je
inc
cmp
jl
push
idiv
fs
push
lods
js
sbb
sbb
inc
cmp
adc
jbe
call
add
fistps
jmp
mov
je
push
sbb
cmovb
inc
and
adc
cmp
or
sbb
inc
cli
inc
mov
pop
jb
mov
or
jecxz
sbb
mov
jmp
cmp
or
xchg
inc
imul
inc
aad
or
xchg
or
pop
or
push
sahf
cwtl
std
and
jb
aam
mov
lea
into
orl
js
frstor
adc
xor
xchg
xor
dec
adc
dec
push
call
fmuls
addb
jl
daa
jg
pop
sbb
pop
fdivs
mov
mov
mov
and
int
outsb
mov
push
rclb
pop
or
sub
xor
sub
adc
pop
bound
xor
sbb
xchg
cltd
mov
and
addl
out
adc
lret
dec
in
push
inc
mov
xor
or
add
mov
and
icebp
pop
test
pop
jle
mov
gs
fs
fcomip
and
cmp
aam
cltd
add
call
test
clc
push
jmp
test
adc
push
push
mov
loope
shrb
loopne
add
clc
pop
test
sub
aas
push
or
push
inc
jl
inc
bound
mov
aam
and
push
push
mov
aam
das
mov
adc
rorl
sub
mov
jne
add
adc
add
setne
test
jnp
fldl
mov
cmp
push
sysret
mov
dec
je
cmp
xchg
push
cltd
mov
pop
jno
movsl
imul
adc
jne
or
add
mov
ret
cmpsb
sbb
clc
or
data16
test
in
mov
sub
sub
jge
iret
and
call
andl
inc
xor
jmp
and
push
pop
jmp
mov
xchg
sub
xchg
jmp
fucomi
stos
push
xor
cmp
pop
ljmp
or
fucomi
push
dec
push
shlb
test
pop
cld
jmp
xchg
mov
out
cwtl
es
xchg
or
aam
adc
and
sbb
mov
mov
jne
mov
je
jg
shll
cmpsb
xor
in
sahf
mov
sbb
sub
push
mov
push
ja
mov
or
mov
jmp
nop
pop
mov
mov
pop
insl
push
add
and
adc
test
adc
orb
push
andl
out
sbb
divl
mov
mov
and
inc
sub
and
inc
add
inc
ret
add
xchg
nop
in
les
mov
leave
test
jo
mov
dec
rcrb
sbb
je
mov
mov
cmpl
jl,pn
mov
xchg
outsl
gs
push
push
xchg
xor
dec
xchg
and
adc
jl
divl
imul
pusha
out
or
and
movsb
sbb
dec
test
rorl
jge
rep
addb
sbb
xorl
movsb
fsubrl
sbb
push
jmp
cmpsl
sbb
or
add
push
ret
push
pop
jmp
or
add
inc
lods
jl
lds
adc
jge
dec
push
push
sub
dec
mov
xor
xchg
test
leave
push
inc
push
fwait
adc
sarb
ljmp
mov
sub
pop
inc
subb
jae
or
xchg
or
push
mov
and
fsubr
mov
dec
push
fimull
jmp
cltd
push
mov
fisttpl
inc
sub
lahf
sbb
add
movsbl
je
ljmp
xor
or
cltd
push
or
cmpsl
loope
or
addb
in
or
lods
inc
push
jg
aam
xchg
cmp
push
mov
iret
mov
repnz
cmp
popf
cmpl
jne
mov
subl
popa
nop
lahf
push
daa
cltd
mov
inc
data16
fs
andb
sub
outsl
adc
loope
and
jecxz
push
rcrb
fmuls
lock
addr16
lahf
lret
jne
ljmp
ret
push
add
aaa
dec
into
rcrl
je
or
aad
cmp
jo
sbb
sub
pop
jmp
lock
sbb
dec
jp
push
push
mov
dec
push
xor
addr16
add
inc
dec
mov
or
add
call
in
jne
scas
aad
adc
repnz
jo
mov
test
xchg
xor
push
int
arpl
dec
lahf
movsl
les
nop
mov
stos
inc
enter
pop
aaa
cmp
mov
lds
fsubs
cmp
fildll
divb
xlat
inc
outsb
add
xor
add
or
mov
push
mov
fists
jne
mov
aad
sbb
or
add
adc
mov
fcomp
stc
push
sbb
pop
dec
xor
pop
cmp
sbb
insl
test
cld
out
dec
lds
pop
bound
add
dec
lsl
test
jp
sub
lret
cmc
icebp
push
xchg
orl
clc
or
jg
je
jno
or
mov
add
mov
push
subl
inc
es
insl
add
mov
insb
xchg
ret
sti
add
and
xchg
jg
je
icebp
popa
push
xor
sbb
or
aas
inc
pop
jle
push
jnp
and
jecxz
mov
rorb
loopne
and
pop
cmpsb
cmpsb
xor
and
jne
and
cmp
xchg
sub
dec
shr
shll
into
sub
sbb
adc
andb
call
push
test
ficomps
shlb
adc
nop
lea
mov
pop
pop
sbb
cmp
pop
data16
dec
cs
les
adc
lret
sub
and
mov
lret
int
scas
sub
pop
test
fists
adc
cld
cmc
or
adc
sub
sub
pop
cmp
xor
mov
xlat
dec
test
ss
and
test
mov
pop
xchg
inc
add
mov
cmp
out
sbb
cmp
call
scas
and
and
aas
mov
inc
cli
repnz
daa
shlb
enter
xchg
arpl
push
push
push
or
pop
sbbb
xchg
movsb
push
and
bound
push
aam
std
jnp
xor
add
loope
popf
subl
fmull
les
mov
fmull
rclb
addb
push
xor
addr16
insb
dec
ja
ss
fsts
xchg
fs
aam
sub
mov
loopne
enter
xor
outsb
and
stos
or
int
std
repz
xchg
bsf
mov
push
inc
mov
and
test
sub
test
sbb
pop
mov
xchg
cs
push
xchg
sbb
ja
dec
pop
stos
pushf
mov
sbb
insl
imul
lea
push
cmp
pop
adc
add
call
pop
xor
sub
pop
pop
xor
or
and
mov
aaa
cmp
je
inc
or
jne
mov
add
xchg
and
jp
fisttpl
daa
xchg
ret
lahf
pop
xor
mov
add
test
or
movl
cltd
and
icebp
and
jg
sbb
and
jne
xor
subl
in
repz
adc
xchg
int3
lods
loope
mov
sbb
add
xor
xlat
cmp
pop
xor
sbb
adc
call
sbbl
inc
rcll
and
fcompl
shr
mov
scas
test
mov
xchg
lret
adc
adc
jae
inc
push
fs
in
mov
push
or
and
lods
cs
adc
sbb
fmuls
in
sub
inc
fnstsw
mov
cmp
data16
pushf
lcall
cmp
and
stos
mov
add
push
push
dec
dec
dec
loope
add
jmp
leave
push
addr16
push
pop
pop
mov
inc
loope
in
cmp
push
jns
movsb
add
add
pop
mov
call
je
popa
jo
sarb
jb
mov
imul
inc
outsl
je
or
inc
cmpsb
sti
mov
adc
mov
mov
mov
pop
loopne
dec
xor
fbstp
inc
pop
and
sbb
nop
dec
or
dec
pusha
xchg
shlb
mov
or
fs
jb
push
xchg
adc
call
test
inc
test
bound
push
jo
mov
cmpsb
test
or
adc
mov
pop
ficomps
repnz
and
dec
and
mov
sbb
mov
push
adc
and
and
xchg
lock
xor
or
and
dec
repnz
lock
inc
cld
call
popa
jg
inc
add
push
aas
mov
or
and
cld
jno
int3
xor
call
mov
adc
sub
call
lds
adc
adc
call
add
and
add
or
inc
add
jmp
jecxz
xchg
add
jecxz
xchg
add
or
xchg
add
xchg
xchg
add
push
enter
or
xchg
pop
or
xchg
xor
push
aas
loop
sbb
jo
test
nop
or
fnstcw
or
xchg
mov
or
sbb
inc
or
in
xor
or
addr16
or
movsl
pop
adc
inc
mov
mov
or
xchg
jns
or
inc
ds
mov
sbb
mov
xchg
ss
sbb
mov
rcll
or
movsl
es
adc
fsts
or
xchg
adc
aaa
xchg
adc
push
repz
push
cmp
ss
pop
and
in
xor
lahf
in
xor
insb
ss
sbb
sub
sbb
rcrl
or
movsl
es
sbb
mov
nop
sub
pshufw
xchg
enter
insb
sbb
les
xor
ds
in
push
xchg
mov
and
and
nop
xchg
repnz
cld
loop
in
and
outsl
es
xor
and
dec
in
xor
and
fs
and
std
cmp
jg
sub
cmp
xchg
es
and
and
inc
sub
in
xor
adc
imul
mov
sbb
mov
xchg
add
mov
sbb
mov
xchg
orb
repz
clc
sub
es
pop
enter
cmp
xchg
enter
cmp
xchg
enter
cmp
xchg
push
pop
jns
or
movsl
dec
pushf
add
jns
or
lea
xor
cmpsl
es
xor
jmp
inc
push
enter
cmp
xchg
or
movsl
es
xor
pop
dec
pop
push
leave
xor
ja
nop
xor
or
xchg
jns
or
xchg
aaa
or
xchg
push
xchg
cmp
inc
fimull
cmp
jnp
cmp
and
nop
xchg
repnz
push
sbb
cmp
aam
xchg
jl
cmp
inc
xchg
es
cmp
xor
push
inc
and
aaa
push
and
xchg
bound
and
xchg
repz
xchg
inc
sbb
push
imull
cmp
xchg
lock
inc
xor
inc
inc
sub
es
xor
movsb
fs
xor
push
inc
inc
and
inc
xor
ss
and
pop
mov
sbb
mov
nop
xor
scas
dec
inc
movsl
cmp
xchg
into
pop
dec
dec
fs
dec
xchg
out
dec
les
pop
push
inc
dec
adc
dec
sbb
sbb
test
and
push
popf
cld
sbb
or
or
lods
inc
mov
das
dec
and
add
add
insl
xchg
lahf
xchg
pushf
xor
adc
pushf
xor
adc
insl
mov
or
nop
or
mov
clc
outsl
nop
mov
in
xor
adc
push
xchg
orb
cltd
adc
or
lea
adc
cs
icebp
enter
addr16
push
cwtl
xchg
or
add
lods
adc
and
xor
adc
push
pop
out
cmp
mov
data16
jmp
adc
xchg
push
xor
fbld
xorl
inc
pop
cmp
add
imul
add
ficomps
jl
inc
dec
bound
add
mov
enter
cmp
xchg
xor
insb
xor
xor
inc
xor
mov
or
and
inc
or
or
cli
xor
push
inc
xor
scas
xor
adc
xor
loop
sbb
out
pusha
xor
inc
push
pop
bound
fistpll
rdmsr
cmp
std
or
lea
adc
lods
cwtl
nop
adc
lock
mov
adc
xchg
push
enter
insb
adc
inc
jle
adc
xchg
enter
insb
push
xchg
xlat
fsubl
test
add
sti
cmpsl
loop
pusha
int
adc
mull
jb
xchg
lods
xor
enter
cmp
xchg
dec
enter
cmp
xchg
xchg
cs
inc
sbb
in
push
pop
xchg
fdiv
add
inc
inc
adc
stc
int
jnp
mov
inc
push
adc
das
mov
mov
inc
popa
mov
popa
or
das
fistpl
cmpsl
push
xchg
pushf
push
adc
add
sbbl
mov
fdivp
sarb
mov
and
and
popf
jne
into
xchg
sahf
mov
and
bound
cli
mov
or
pusha
mov
bound
sub
imul
inc
dec
xor
or
push
and
xor
test
pop
push
in
stc
sub
jbe
push
and
sub
ret
adc
and
test
popa
sub
pop
and
sub
ret
adc
and
sub
push
dec
jb
or
leave
sub
in
mov
fcoml
cmpsl
in
or
sahf
lods
jge
sub
in
or
pop
mov
cwtl
pop
or
es
xor
sub
in
dec
sahf
es
adc
mov
ss
adc
cltd
in
aaa
or
adc
push
ficompl
push
xchg
enter
sub
sub
sahf
push
lock
sbb
mull
inc
pop
gs
bound
pop
inc
mull
sub
jno
or
xchg
sbb
push
enter
or
xchg
pop
or
dec
sub
sahf
adc
mov
xchg
pop
or
dec
in
xor
inc
and
pop
push
decl
dec
daa
lret
cmp
sub
mov
sub
in
sub
adc
movl
mov
es
sub
jnp
sub
loop
cmp
sahf
adc
test
inc
push
loope
sub
test
sub
jecxz
or
daa
test
inc
push
loope
daa
or
daa
test
inc
push
loope
daa
or
daa
test
inc
sub
aam
sub
rcll
inc
mov
mov
sub
xchg
sub
outsl
sub
test
sub
dec
sub
test
or
push
mov
mov
or
push
mov
adc
andl
pop
inc
and
test
and
in
xor
push
inc
inc
and
fistpl
push
push
test
vandps
sub
jno
repnz
jl
test
push
pop
pop
push
and
push
test
sub
push
jno
repnz
dec
sbb
and
es
cmp
xchg
enter
gs
test
mov
les
mov
imul
dec
mov
mov
dec
mov
insb
jl
sub
and
xchg
sbb
enter
sub
xchg
clc
mov
fsubl
or
push
and
fs
mov
test
adc
cwtl
push
inc
adc
mov
ret
adc
les
pop
cmpsl
gs
mov
lock
mov
push
lea
push
pop
or
push
push
enter
mov
mov
lods
and
mov
adc
pop
mov
popa
and
pop
push
and
and
dec
fwait
addb
and
icebp
jl
cmp
mov
push
cmpsl
es
pop
enter
xor
ss
xchg
push
jge
mov
enter
cmp
xchg
enter
cmp
xchg
enter
cmp
xchg
pop
in
test
cmp
push
xchg
enter
insb
jbe
mov
adc
pop
pop
jl
fiaddl
loope
pop
or
adc
mov
add
push
push
push
fistpl
sti
mov
adc
push
push
sbb
enter
cmp
xchg
testb
xor
jge
repnz
inc
gs
or
adc
imul
sbb
loop
pop
jbe
push
and
sbb
and
nop
repnz
clc
sbb
mov
rcrb
cmp
mov
enter
nop
push
enter
or
dec
dec
adc
pop
sbb
sbb
dec
and
nop
or
and
jo
and
mov
sbb
enter
repnz
mov
enter
cmp
lea
ret
and
and
and
xor
and
dec
repnz
sbb
sbb
enter
es
mov
adc
and
fwait
cmp
lea
cmp
sub
pushf
jb
add
mov
cmp
bnd
adc
fiaddl
dec
mov
inc
push
adc
into
and
mov
sbb
or
pop
adc
or
hlt
subl
loope
cmp
dec
sbb
cli
dec
cs
dec
mov
inc
sbb
test
sbb
adc
sbb
sbb
cmp
movsl
and
xchg
push
pushf
jle
movsl
dec
stc
adc
add
mov
jg
ss
mov
jle
incb
xchg
in
xor
cmp
push
sbb
sub
dec
sbb
and
inc
push
sbb
ret
fcoml
bound
dec
pop
or
push
pop
or
sbb
mov
add
pusha
sbb
mov
or
lods
adc
sbb
lods
out
inc
pop
mov
or
enter
pop
inc
sub
mov
inc
loope
pop
or
xchg
pop
iret
push
das
xchg
pop
adc
iret
cmp
jno
cwtl
inc
or
in
imul
or
mov
es
or
or
or
jb
test
dec
inc
mov
prefetcht0
dec
clc
xchg
inc
mov
es
imul
mov
push
sub
inc
dec
in
xor
adc
sahf
es
adc
mov
adc
jbe
pop
mov
adc
es
push
mov
inc
pop
or
adc
es
xchg
enter
inc
mov
inc
sbb
notb
or
daa
adc
pusha
and
mov
adc
or
aaa
inc
int
adc
lds
adc
jns
or
xchg
cld
add
sahf
es
sbb
xor
push
bound
adc
inc
loop
inc
dec
jl
pop
cmpsl
inc
lret
jns
or
xchg
push
imul
pop
inc
mov
adc
and
nop
push
idiv
fs
mov
xchg
xchg
mov
sbb
cmp
xchg
adc
shll
or
pop
adc
cmpsl
dec
nop
daa
lds
inc
lods
or
inc
or
inc
jb
sub
dec
mov
mov
mov
inc
sub
adc
or
mov
xor
adc
or
es
sub
mov
idivl
mov
pop
jno
or
cmpsl
adc
add
mov
add
scas
js
out
and
mov
pop
sbb
mov
add
push
or
lds
and
test
cmc
cmp
aas
jno
into
adc
jae
test
adc
sbb
loope
adc
and
adc
into
adc
pushf
push
jae
test
jno,pt
pop
jmp
test
ds
add
adc
setg
cmp
xchg
lahf
xchg
push
popa
dec
enter
cmp
xchg
leave
add
mov
or
sub
dec
cmp
push
outsb
inc
cmp
adc
clc
subl
adc
das
mov
adc
cmp
fidivs
jp
clc
subl
or
nop
adc
xchg
fistpll
loop
mov
or
sahf
dec
inc
pop
and
cmp
and
nop
repnz
int3
cmovp
test
inc
cmp
sbb
fiaddl
or
xchg
xchg
mov
repnz
int
and
xchg
bound
or
pop
orl
shlb
cmpl
ljmp
les
add
enter
sbb
push
enter
insb
and
movsl
and
cmp
or
mov
and
mov
cmp
inc
out
add
pop
pop
nop
mov
out
ja
cmp
mov
fisttpll
jae
in
cmp
sub
fs
insb
sub
clc
cmp
sub
imul
xor
ss
sub
inc
in
xor
pushf
fimull
or
xchg
test
stc
or
das
sbb
mov
xchg
cmp
and
mov
or
dec
or
jns
or
xchg
fimull
xor
stc
sbb
nop
adc
sbb
xor
in
add
ss
leave
jb
repz
mov
or
repnz
jge
and
mov
sarl
or
xchg
cmp
xchg
cmp
xchg
cmp
in
pop
cmpsl
les
adc
ss
pop
or
pop
mov
dec
pop
sub
mov
in
xor
push
inc
inc
adc
pop
and
add
push
stc
xor
and
fildl
push
sti
xchg
cmp
inc
xchg
enter
xor
popl
push
jle
fwait
lods
inc
inc
xor
sub
push
inc
push
push
insl
rclb
dec
les
test
loope
add
cs
add
insb
mov
pop
add
add
mov
in
cmp
add
sbb
adc
adc
jg
or
popa
insb
stos
insb
push
pop
insb
bnd
ds
imul
or
lret
insb
cmp
push
inc
lahf
popa
mov
imul
adc
adc
aad
push
adc
and
imul
jb
adc
movsl
sbb
iret
jle
sub
mov
xor
lahf
sahf
xchg
and
ss
mov
pop
or
add
xor
add
sub
inc
cmp
lret
adc
or
add
xor
add
mov
jmp
xor
sub
or
inc
xor
ja
or
add
xchg
les
add
adc
add
filds
sub
inc
xor
or
adc
das
loope
add
test
das
adc
test
inc
das
loope
add
test
inc
mov
aad
test
inc
das
jecxz
test
adc
das
repnz
mov
test
push
lock
or
cmp
cs
inc
mov
sahf
iret
icebp
enter
cs
adc
cld
icebp
xor
ds
movsl
enter
cs
pop
jg
cld
icebp
out
or
shrb
jl
cmpsl
es
and
or
ss
and
out
loop
sbb
and
nop
shl
sub
sbb
add
and
mov
sub
push
adc
cld
icebp
mov
ds
sub
cld
and
cld
pop
ja
sub
cld
pop
adc
sub
adcb
sub
std
inc
cld
iret
dec
mov
in
inc
inc
std
cld
pop
adc
cld
loop
sub
push
stc
cld
xor
pusha
sub
xchg
cld
sbb
cmp
lahf
gs
arpl
nop
push
xchg
mov
xor
gs
xchg
enter
insb
xor
ss
xchg
out
sti
les
xor
inc
aaa
and
in
xor
ss
cmp
mov
std
or
sbb
cmp
pop
es
xor
inc
cmp
mov
cmp
ret
pop
add
sti
cld
jl
movsl
es
cli
cld
xchg
push
push
daa
mov
ds
clc
pushf
es
aas
and
mov
inc
cli
mov
fisubrl
stc
ficompl
cli
inc
cld
ret
cld
adc
jl
and
cld
pop
add
inc
cld
ret
cld
adc
jl
inc
sub
mov
cld
popl
stc
cld
clc
push
sub
pop
adc
daa
in
sahf
lods
inc
and
cld
loop
daa
pop
add
stc
cld
jl
inc
daa
loop
mov
faddl
adc
xorl
aad
add
pop
adc
add
loopne
into
js,pn
sub
pop
xor
add
or
pop
pop
fndisi(8087
pop
popf
pop
fcmovnbe
sub
jp
adc
xlat
mov
push
pop
jmp
sbb
jo
or
cld
in
inc
aad
cld
pop
xor
mov
clc
push
es
mov
dec
mov
inc
cld
mov
idiv
popl
cmp
stc
inc
cld
mov
idiv
popl
icebp
idiv
stc
shll
lret
testb
lods
clc
cld
adc
jge
and
jg
cld
jp,pt
mov
idiv
pop
cmp
mov
idiv
popl
sub
stc
out
and
ds
and
cld
jp,pt
mov
cmc
cld
repz
jmp
mov
stc
add
pop
add
cmc
cld
jl
inc
and
dec
cmc
cld
mov
inc
adc
sub
loop
sbb
and
add
push
and
cmpsl
and
pop
inc
cld
les
or
dec
es
add
inc
cld
leave
jae
mov
mov
cld
icebp
shlb
jl
lods
inc
and
cld
in
cmp
sbb
fs
pop
mov
cld
pop
sub
push
adc
repz
nop
inc
xchg
in
inc
lods
repz
pop
adc
cli
sub
xchg
cld
stc
dec
pop
cwtl
and
nop
popa
repnz
sbb
and
repz
insb
icebp
fwait
clc
inc
and
adc
jl
imul
and
repnz
cs
in
test
pop
cmp
pop
adc
xchg
mov
pop
mov
jl
jl
jno
or
dec
pop
jb
or
std
and
in
sub
push
adc
and
lock
test
icebp
cld
pop
adc
out
lret
movsl
icebp
sub
and
jg
or
icebp
test
inc
repz
icebp
or
icebp
test
inc
repnz
lock
lock
inc
repnz
lock
lock
inc
push
loope
lock
lock
inc
out
loope
lock
mov
out
cld
pop
adc
mov
or
out
test
fwait
jb
insb
or
inc
out
push
lods
sbb
adc
xor
adc
out
fisttps
adc
shll
out
cld
loop
sbb
lods
out
cld
jl
cmpsl
dec
nop
push
enter
or
dec
sbb
sub
popa
out
cld
ds
cmpsb
sbb
out
inc
cld
les
ret
cld
ds
negl
loop
mov
test
out
cld
sub
leave
in
cld
clc
cli
jmp
cld
mov
in
cld
popl
jge
cld
clc
in
popf
xchg
sub
sbb
mov
cld
lret
pop
push
sub
sub
and
in
xchg
or
dec
sbb
sub
sbbl
cltd
in
cld
pop
jo
sbb
sub
jae
sub
movsb
ljmp
in
outsl
sub
daa
xchg
jmp
xor
push
inc
sub
ret
sub
fucomi
cmp
dec
sbb
mov
popf
mov
pop
mov
cld
les
lcall
fldt
loop
sbb
or
lds
mov
cmp
lock
popf
insl
xchg
mov
inc
push
push
stc
push
mov
push
cmp
test
or
ret
push
test
movsb
in
xlat
test
sbb
ljmp
inc
xor
cmp
dec
sbb
ljmp
les
xor
jmp
rcrl
sbb
inc
sbb
jo
or
sbb
add
and
ljmp
aas
jmp
or
jmp
jo
jmp
pop
sbb
mov
mov
ljmp
ljmp
push
pop
sbb
mov
sub
push
jno
lret
cmp
pop
and
out
adc
adc
push
cmp
lods
xchg
inc
out
cld
adc
sub
adc
mov
sub
and
test
cwtl
cwtl
lahf
jno
push
std
out
cld
lds
sub
or
out
stc
ds
and
mov
adc
xchg
sar
ror
addr16
jle
cli
nop
sbb
pop
test
mov
sub
xor
and
scas
lret
cld
ds
jmp
in
shl
xor
in
sub
test
mov
popf
in
ds
nop
rcrl
ja
in
sub
cmpsl
dec
nop
sbb
or
dec
adc
sub
sub
test
pop
adc
ss
xchg
in
sub
out
xchg
or
and
pop
adc
sbb
bound
ss
push
adc
pop
mov
inc
cld
lret
jns
or
dec
in
ss
loop
mov
in
mov
and
jl
fstps
cmp
xchg
icebp
jecxz
ss
loop
shll
or
dec
jecxz
ss
push
loope
mov
movsl
cmp
xchg
adc
jecxz
dec
popa
cwtl
pop
repnz
pop
jecxz
ss
rclb
or
jnp
loop
adc
adc
mull
loop
test
in
pop
lods
roll
repnz
or
jae
in
insb
mov
loop
pop
mov
adc
jno
or
xchg
push
out
cld
adc
loop
icebp
nop
adc
xchg
xchg
int
or
dec
pop
aad
daa
cmovns
sub
dec
adc
cmpsb
inc
fmull
test
inc
dec
mov
dec
push
dec
negl
and
mov
orl
pop
xor
mov
les
loope
adc
push
loope
ds
out
loop
inc
cld
lret
jns
or
xchg
mov
hlt
adc
or
pop
loopne
icebp
rorb
xorb
cld
ds
adc
mov
test
loope
sub
out
cld
clc
leave
loope
cld
mov
popl
clc
jge
inc
cld
mov
mov
inc
push
bound
adc
adc
cld
jl
pop
or
fbld
cmp
fstp
cld
ds
or
mov
fidivrs
popa
or
lods
xchg
inc
fisubs
or
push
sarb
fists
out
inc
nop
pinsrw
push
sbb
enter
push
inc
mov
fst
pop
loop
fbstp
and
fstl
into
pop
adc
cld
jl
out
cmpb
ds
or
fldl
les
clc
repz
fstl
or
pop
in
inc
cld
lret
jns
or
pop
fdivrl
dec
or
movsb
mov
fdivr
xchg
fisubs
mov
rcll
jae
push
daa
push
fiadds
bound
adc
xchg
faddl
or
fcoml
or
adc
push
rcll
mov
push
and
popf
jl,pt
testb
xchg
fistl
and
inc
mov
mov
and
test
loope
fimull
test
out
sub
or
clc
cmp
mov
inc
xor
adc
inc
lods
mov
inc
test
test
les
sub
dec
inc
lods
cmp
test
inc
cmp
xchg
xchg
in
fstps
fsubrs
or
or
xlat
pop
and
xchg
push
and
push
aas
fildl
or
fistpl
fsts
fiaddl
or
ficompl
fcoms
fiaddl
or
fcoms
push
test
push
fcoms
and
test
pop
fcoms
and
xlat
push
adc
test
mov
push
pop
and
test
outsl
xlat
pop
or
pop
push
jo
test
sbb
adc
and
push
pop
add
adc
and
test
adc
jo
test
add
push
and
inc
roll
or
aad
and
jo
aad
dec
test
pop
and
test
ja
adc
and
push
adc
xchg
mov
aad
and
add
push
jno
aad
test
cmp
xchg
and
add
and
dec
aam
jnp
add
aam
loop
shrb
adc
les
mov
aam
stos
mov
ds
push
and
or
cmp
sbb
cmp
or
ret
cmp
ljmp
les
adc
mov
flds
sub
adc
stos
and
add
and
add
add
sar
sub
repnz
stc
pop
ficoms
add
sar
jl
and
cld
pop
cmpsb
rolb
ret
cld
adc
jl
and
cld
pop
pop
rolb
ret
cld
adc
jl
and
cld
pop
push
rolb
lock
sub
dec
inc
loope
rorl
mov
adc
add
cmpsl
dec
iret
mov
rcll
test
sub
adc
jecxz
add
test
les
sub
test
clc
add
pop
pop
adc
lods
xchg
inc
shlb
bound
add
incb
sub
inc
shrb
fldcw
push
into
cld
xchg
pop
add
iret
inc
cld
int
dec
imul
lcall
scas
iret
cld
pop
xor
test
inc
iret
mov
in
inc
iret
adc
and
push
push
rcll
iret
adc
rcrl
or
dec
into
jl
mov
cwtl
fstl
push
imul
movsb
into
test
std
add
les
sub
in
add
xchg
xlat
add
into
cld
jl
dec
call
into
mov
add
or
int
dec
in
add
daa
dec
dec
mov
lcall
mov
xchg
ds
imul
dec
int
jl
cmpsl
es
daa
enter
xor
sub
lret
dec
or
sub
fmul
lods
mov
inc
sub
mov
sub
sbb
mov
push
dec
imul
jns
int3
mov
bound
adc
dec
mov
pop
mov
loopne
xchg
xor
clc
lret
imul
cli
add
lret
test
cli
mov
inc
xor
lods
lret
mov
ret
add
and
leave
push
shll
or
pop
lret
cmpsl
add
stc
push
cmp
xor
push
fistl
lret
mov
push
and
xor
xor
std
xor
xor
fidivl
ret
cmp
mov
jmp
gs
xchg
rcll
or
inc
xor
test
or
xchg
mov
add
repz
inc
leave
mov
mov
leave
fnstsw
repz
clc
cld
sarl
or
pop
leave
cmpsl
repz
jns
or
xchg
inc
add
bound
leave
push
cmp
testl
repz
jmp
test
inc
lret
enter
lret
lahf
enter
lret
enter
lret
push
enter
lret
enter
testb
mov
enter
testb
loope
mov
bound
dec
pop
dec
push
and
test
outsl
adc
jb
and
push
jp
and
nop
and
prefetcht0
and
push
fs
test
xlat
adc
and
dec
in
inc
mov
adc
sub
gs
test
rorb
test
inc
mov
bound
pop
add
testb
or
xchg
pusha
inc
pop
xor
lds
icebp
movsl
sub
jb
popf
lds
sub
xchg
xchg
dec
or
push
pop
fdivp
add
test
and
cld
loope
repz
les
lds
xor
addb
dec
jns
push
ffreep
test
dec
popf
jno
push
mov
jnp
add
jl
pop
repnz
adc
test
inc
repz
les
test
lcall
dec
lds
push
and
ret
push
inc
add
mov
fs
push
sbb
es
push
jg
mov
clc
out
dec
add
ret
cld
out
cwtl
popf
in
inc
xor
adc
adc
cmpsl
iret
out
les
ret
and
add
ret
xor
or
fwait
ret
int3
shrb
xchg
sub
lock
xor
inc
das
sub
sub
jns
loop
sub
and
sar
bound
sub
repnz
sub
mov
xchg
xor
loope
add
adc
imul
fcomps
sbb
daa
sbb
pop
jge
test
cmp
push
sub
pop
mov
out
add
les
ret
rorb
push
lock
sub
jnp,pn
shlb
mov
test
mov
mov
sbb
add
add
in
add
adc
test
and
add
mov
pop
or
mov
adc
mov
pop
and
mov
ret
adc
and
test
pop
mov
pop
and
mov
into
dec
mov
repz
and
mov
xchg
adc
cmc
mov
or
in
inc
add
mov
jmp
adc
mov
push
outsl
in
xor
jmp
jb
sbb
enter
mov
inc
rorb
dec
or
jmp
mov
sbb
dec
lock
ljmp
mov
push
jnp
loope
mov
mov
inc
mov
inc
and
cld
mov
in
mov
test
mov
scas
sub
adc
ljmp
dec
ljmp
mov
inc
mov
test
sbb
cs
mov
mov
mov
sub
adc
jmp
mov
and
adc
imul
add
push
mov
mov
and
and
and
push
and
and
and
inc
and
jno
or
dec
mov
mov
mov
stc
cmp
dec
mov
mov
es
or
mov
xchg
add
sbb
jbe
or
outsl
adc
ljmp
mov
test
mov
mov
fs
mov
add
mov
pop
and
push
cmp
adc
and
mov
ret
adc
mov
mov
ds
bound
in
sub
or
cld
clc
fxam
sahf
sbb
dec
mov
push
out
push
inc
or
es
sbb
lea
mov
cld
mov
leave
add
mov
jl
dec
out
loopne
xchg
mov
mov
enter
mov
sbb
mov
mov
push
imul
jl
dec
in
outsl
les
sub
dec
stos
mov
and
sbb
ja
addr16
mov
repz
pop
cwtl
mov
or
mov
in
bound
adc
sti
lret
cmp
dec
hlt
add
mov
outsb
or
sbb
and
sbb
or
pop
fdivr
sbb
icebp
push
and
sbb
sbb
sbb
sub
mov
mov
mov
add
mov
inc
jmp
sub
mov
in
and
jo
mov
ret
adc
and
pop
or
push
and
cmp
test
mov
or
mov
and
mov
lock
inc
shlb
and
inc
or
pop
or
push
and
loopne
pop
mov
inc
mov
mov
and
pop
or
test
mov
lret
out
cld
imul
shlb
lods
lcall
adc
fcmovnu
inc
add
mov
fisubl
adc
mov
add
mov
mov
cmp
loope
xchg
sbb
lcall
xchg
inc
bound
adc
movl
and
mov
mov
fisubrs
sub
adc
scas
test
pop
fimuls
sub
or
test
fisubrs
sub
adc
jecxz
fucom
dec
mov
scas
aas
jl
push
xchg
jle
push
xchg
sbb
or
dec
lea
loop
mov
scas
sub
das
test
scas
jmp
add
fcomps
std
pop
or
fldl
push
and
ret
adc
pop
cmp
add
mov
mov
cmp
scas
xchg
es
push
cwtl
push
movb
imull
mov
stos
mov
lods
mov
jns
push
push
lods
test
scas
push
cmp
lods
adc
in
dec
in
cld
jl
pop
fldt
jo
loop
test
xlat
dec
lods
add
mov
arpl
stos
or
push
bound
xlat
fiaddl
lods
add
mov
xor
nop
xor
mov
xor
pop
stos
mov
les
adc
adc
inc
adc
mov
sub
sahf
adc
mov
push
adc
test
and
add
stos
test
test
push
adc
flds
lods
fldl
mov
bound
mov
xor
mov
stos
adc
and
stos
push
and
or
stos
pop
and
test
ret
adc
and
test
subb
fs
pop
test
or
mov
ds
inc
or
push
test
xlat
mov
dec
xlat
lods
jle
ret
mov
mov
pushf
test
dec
loop
xlat
push
fs
das
jbe
xchg
pushf
or
cmpps
and
push
dec
lgs
push
cmp
inc
or
repz
adcl
ret
add
sub
cli
movsl
rcll
cmpsl
test
inc
loope
cmpsl
or
in
inc
push
cmpsl
cld
pop
xor
xor
imul
jl
xlat
dec
sti
sub
or
cmpsb
cld
clc
dec
aad
add
test
aad
sub
cltd
cmpsb
cld
sti
adc
or
adc
sub
xor
mov
dec
cmpsb
cld
ds
aad
rorl
or
dec
cmpsb
shrl
jecxz
adc
cmpsb
cld
icebp
jecxz
jl
lods
fildl
mov
mov
add
xlat
xor
and
test
mov
cmp
push
mov
movsl
adc
and
movsb
push
shlb
adc
jno
test
cmpsb
pop
or
push
and
jo
movsb
test
cmpsb
pop
or
movsb
push
and
test
rclb
or
mov
jo
mov
pop
or
movsl
jae
mov
pop
and
push
mov
test
sub
pop
and
mov
ret
adc
and
xchg
vpunpckldq
dec
pop
in
dec
sub
add
roll
test
mov
add
adc
mov
add
mov
add
les
mov
push
mov
mov
mov
mov
inc
iret
mov
loop
mov
and
stc
int
out
mov
iret
add
or
mov
dec
jl
push
adc
pop
dec
lods
xchg
test
inc
mov
mov
pop
sbb
loop
mov
mov
cmp
sbb
mov
xchg
int3
mov
sbb
lahf
xchg
mov
or
es
dec
lahf
fildll
pop
and
cwtl
lahf
or
sub
loop
int
adcb
lahf
adc
push
and
ret
cmp
xor
and
adc
ja
test
add
lock
add
push
int
fnsave
mov
rcrb
les
pushf
mov
push
or
call
cld
jl
and
add
popf
pushf
ds
lcall
mov
cmp
icebp
xchg
lahf
or
lahf
mov
dec
lahf
or
lahf
mov
cld
sahf
or
lret
mov
xor
pushf
sub
bswap
mov
mov
or
sahf
mov
popf
lret
nop
pushf
test
inc
lret
fwait
or
fwait
test
inc
lret
fwait
or
fwait
test
nop
mov
jl
clc
push
fwait
inc
cld
ret
cld
adc
jl
and
inc
cld
fmull
cld
push
adc
lcall
test
loop
test
lcall
into
lods
outsb
inc
lcall
les
sub
scas
enter
and
mov
jnp
cld
inc
cltd
mov
mov
loop,pt
enter
mov
fwait
icebp
push
pop
mov
add
les
adc
mov
les
cltd
sub
movsl
in
mov
mov
into
repnz
sub
pop
mov
std
xchg
cmp
cmpsl
mov
cwtl
or
or
xchg
loop
mov
cwtl
or
adc
test
rcrl
push
cwtl
cld
stc
jne
in
cmpsl
push
loop
test
cmp
sub
insb
lcall
pushf
xchg
cld
pop
push
add
cld
into
lods
jbe
xchg
mov
add
xchg
mov
into
les
xchg
sub
xchg
lods
add
xchg
lahf
insb
and
sbb
jbe
push
adc
xchg
cld
icebp
inc
lds
insb
adc
xchg
outsl
adc
xchg
push
insb
xchg
out
mov
and
push
lods
les
xchg
adc
mov
iret
fcompl
iret
inc
aam
adc
xchg
cmp
scas
xchg
mov
xchg
mov
out
ret
add
cmp
mov
repnz
adc
or
pop
xchg
test
lods
lock
xchg
mov
aas
push
lret
jl
xor
ret
add
xchg
mov
push
cmp
sti
clc
and
adc
lods
sti
mov
ss
jecxz
aas
jge
lea
pop
test
cmp
sub
dec
cmpsl
and
ret
sub
mov
test
repnz
or
add
sbb
fidivl
out
cli
daa
cmpb
lahf
repnz
xor
cli
outsl
mov
sbb
cmpsb
xor
lahf
loop
pushf
adc
and
scas
cmp
imul
sub
mov
pop
loop
xchg
dec
cld
adc
hlt
xchg
mov
shrl
xchg
stc
nop
dec
and
test
inc
sbb
cmovnp
jns
mov
les
lret
adc
xchg
mov
xor
or
loope
xchg
or
xchg
test
inc
xchg
loope
xchg
or
xchg
test
inc
xchg
loope
xchg
or
xchg
test
dec
mov
nop
sub
mov
inc
nop
mov
mov
sub
in
mov
outsl
xchg
or
mov
mov
sbb
mov
pop
mov
sub
ss
mov
cltd
les
mov
dec
loop,pn
mov
stc
dec
outsb
mov
or
jmp
sub
lods
mov
inc
mov
mov
lahf
mov
adc
mov
mov
xor
push
mov
nop
test
sub
mov
inc
leave
mov
push
and
jo
lea
or
mov
inc
mov
push
imul
or
lea
mov
mov
and
mov
mov
cmc
pop
mov
test
mov
mov
ret
pop
mov
ds
cld
int
dec
push
pushf
mov
test
inc
repz
adc
icebp
repnz
cmp
loop
pop
iret
cmpsl
es
xor
test
repnz
sti
sarl
loope
mov
adc
mov
pop
mov
lret
mov
jae
movsl
mov
test
mov
pop
mov
test
mov
adc
mov
mov
or
mov
lea
cs
cld
xor
inc
or
fwait
mov
in
xor
inc
or
fdivl
dec
mov
jae
sub
cmp
or
daa
fisttpll
dec
jne
xchg
test
rorb
add
xchg
mov
stc
push
dec
dec
and
nop
imul
sbb
mov
ds
and
push
mov
pop
mov
adc
mov
xor
fisttpl
test
pop
mov
jno
lods
xchg
adc
xchg
lret
popa
xchg
or
mov
push
cmp
out
pop
cmp
xor
into
push
and
ret
loope
out
sti
or
xlat
adc
in
sti
mov
in
sti
hlt
push
push
jbe,pn
into
lock
mov
pop
or
pop
and
xchg
mov
ret
adc
and
test
xchg
or
test
xchg
or
in
bound
test
and
test
mov
ret
adc
adcb
test
mov
ret
adc
add
test
movsl
push
and
pop
mov
mov
into
test
test
nop
sbb
cld
mov
jmp
push
mov
adc
jl
cmpsl
es
adc
popf
jns
or
xchg
andl
xchg
ljmp
inc
ljmp
or
sti
push
sub
ljmp
bound
orl
mov
testl
pop
and
push
loope
popf
inc
add
adcb
or
adcb
jge
mov
xchg
cmp
dec
mov
lds
orl
mov
push
bound
pop
orl
adcl
jo
gs
mov
push
jb
sbb
mov
sub
inc
mov
jge
or
subb
enter
mov
inc
mov
orb
js
adc
test
inc
and
orb
mov
jmp
sarl
mov
jg
adc
subl
test
inc
and
icebp
sbb
jg
xchg
lods
mov
or
mov
inc
jge
jg
nop
cmpb
jle
lods
or
jle
inc
lods
bnd
nop
lods
mov
sbb
bound
jle
or
adcb
jle
inc
bnd
or
jge
and
jg
les
inc
cmpsb
jg
or
jg
js
test
jg
or
push
and
pop
sub
test
stos
shll
push
jge
ds
imul
out
dec
test
jl
jl
and
inc
cld
ret
add
jl
and
pop
outsb
jl
cld
ret
add
jl
and
inc
cld
ret
add
icebp
arpl
jnp
or
and
xchg
jns
jno
or
fs
dec
stc
lret
movsl
dec
pop
adc
jnp,pt
movsl
test
jnp
cmpb
adc
and
pop
int3
jp
inc
mov
sub
bound
mov
test
pop
jp
shrl
jp
or
and
jp
push
test
push
jns
dec
dec
test
inc
mov
jns
lea
dec
sub
adc
pushf
jns
test
test
lret
jbe
sub
frstor
mov
push
imul
test
jns
jge
jnp
test
jns
pop
or
jp
push
adc
js
lock
popa
mov
lcall
cld
lock
cmpsb
add
pop
or
cmpsl
add
inc
js
not
cmpsl
add
jl
dec
cmpsb
mov
or
ja
cmp
lcall
dec
inc
mov
ja
dec
lods
dec
push
mov
cld
lock
movsl
add
pop
sub
push
push
inc
inc
and
cmc
dec
scas
adc
jbe
icebp
sarb
enter
lret
repz
xor
jbe
xor
dec
cli
cmpsl
scas
ret
cld
ds
movsb
add
sbb
xor
cld
ret
add
jl
cmpsl
es
dec
out
cmp
inc
dec
aam
and
shlb
dec
sbb
sbb
dec
nop
lcall
mov
mov
les
imull
test
dec
xchg
push
jl
push
sbb
mov
clc
mov
mov
and
shl
push
sbb
movmskps
push
xchg
es
insb
push
xchg
enter
mov
pusha
in
xor
ss
push
and
in
xor
adc
push
xor
jb
inc
push
adc
jae
pop
sbb
dec
and
enter
sbb
dec
dec
and
mov
sbb
pop
nop
jl
pop
sbb
pop
or
movsl
es
pop
lds
xchg
enter
mov
lds
jae
insb
hlt
sub
imul
mov
fidivrl
stc
fnstcw
fsubr
fnstcw
adc
inc
int
cmp
es
fsincos
push
jge
inc
sti
cmpsl
jb
sti
adc
sub
fsincos
push
xor
inc
sti
mov
inc
or
sti
or
add
fdivr
insb
aad
fdivr
popa
sbb
sbb
pop
lret
jno
or
cmpsl
adc
sbb
imul
dec
das
sub
cld
inc
mov
test
outsl
cs
jo
cmp
loope
jo
test
jo
fnsave
test
sub
inc
jb
cmp
jo
mov
jo
adc
mov
shlb
test
outsl
sub
lods
jno
movsb
inc
outsl
mov
jle
sub
in
test
lods
pop
inc
outsl
mov
xor
adc
mov
out
jo
adc
outsb
test
inc
popf
loope
outsb
or
outsb
test
inc
popf
out
outsb
sub
fistpl
xor
sub
adc
outsb
test
inc
jo
add
test
outsl
cs
insl
test
inc
outsl
loope
insl
or
insl
test
inc
outsl
out
insl
sub
dec
outsl
mov
stos
fwait
or
fwait
mov
pop
fwait
or
fwait
mov
adc
sub
push
insb
mov
cmp
mov
insb
mov
out
imul
push
lcall
lcall
or
mov
push
imul
mov
imul
imul
jno
mov
cmpsb
cltd
cs
cltd
sub
lods
iret
cwtl
push
testl
sub
cmp
dec
dec
scas
jl
dec
cmc
das
jl
mov
cwtl
jecxz
aam
adc
sub
inc
cltd
mov
inc
cwtl
or
cwtl
mov
cmc
xchg
or
xchg
mov
add
or
inc
loope
push
mov
mov
adc
or
xchg
mov
and
sub
cli
xchg
mov
jns
dec
mov
addr16
das
sub
adc
addr16
rorl
stc
or
xchg
inc
add
mov
jns
pop
push
test
xchg
pop
or
addr16
imul
xchg
addr16
lock
xchg
add
pop
or
add
mov
xchg
add
pop
or
xchg
add
jo
cld
repnz
sahf
es
inc
and
dec
aaa
and
mov
or
gs
shl
out
lahf
pop
adc
testl
jb
xchg
xchg
sbb
dec
sbb
xchg
rorl
xchg
lcall
mov
sbb
sbb
dec
nop
sbb
push
sbb
lea
push
hlt
fs
es
push
and
in
xor
test
push
xor
and
xor
push
and
xor
ss
push
and
in
xor
xchg
mov
fs
loop
xchg
dec
jl
push
ljmp
sti
xchg
jnp
loope
lret
mov
sti
test
lret
add
sti
adc
lret
dec
mov
jno
push
jp
cmp
lret
lret
push
lret
lret
or
adc
and
leave
pop
ror
test
leave
cmp
scas
leave
ret
cmp
leave
test
leave
adc
sbb
inc
leave
xchg
adc
jmp
test
sbb
or
popa
push
sub
pop
fwait
popa
test
arpl
and
push
push
arpl
or
arpl
popa
push
nop
popl
out
popl
or
pusha
push
cltd
bound
or
mov
pusha
push
rorb
adc
and
pusha
push
push
pop
test
stc
pop
adc
and
pop
push
cmp
adc
and
test
popa
pop
adc
and
pop
push
sbb
pop
adc
and
pop
push
shll
ret
adc
and
test
jge
adc
and
push
cmp
ret
adc
and
pop
push
jb
test
in
adc
and
test
cltd
pop
adc
jae
test
pop
pop
or
push
and
inc
mov
push
and
mov
pop
test
mov
or
mov
pop
test
mov
or
push
and
mov
pop
test
mov
or
mov
pop
test
mov
or
pop
push
and
test
mov
or
mov
pop
test
mov
or
pop
push
and
test
mov
or
pop
push
and
mov
pop
test
mov
or
test
jnp
adc
and
push
aaa
and
imul
lock
pop
cld
popl
or
clc
jmp
inc
cld
mov
pop
cld
popl
mov
pop
inc
cld
mov
pop
cld
popl
jno
cld
clc
fadds
pop
cld
popl
and
xchg
mov
pop
cld
adc
add
inc
xchg
or
mov
cld
adc
xchg
lods
lea
pop
cld
loope
xchg
or
addr16
cld
ds
bound
adc
and
pop
push
addb
or
and
push
push
xchg
or
xchg
push
push
ljmp
or
test
and
push
push
stc
test
or
pop
and
push
push
push
test
push
push
and
test
test
and
loopne
cwtl
inc
dec
xor
push
xchg
push
jb
mov
mov
and
ret
cmp
and
mov
in
mov
pop
leave
mov
adc
and
test
mov
pop
fidivrl
and
add
adc
and
test
jg
adc
inc
stc
or
dec
push
lahf
inc
adc
push
mov
adc
push
sub
out
push
mov
leave
push
outsb
mov
mov
push
mov
jne
sub
push
push
mov
or
push
lock
popl
add
clc
xor
xchg
push
mov
fstl
inc
mov
push
push
and
xorl
or
adc
les
test
imul
mov
push
or
adc
loop
adcb
stc
push
push
das
pusha
sbbb
rcll
inc
cmp
lods
push
adc
xchg
inc
int3
sub
add
push
test
jg
ds
cld
mov
mov
jg
jb
out
push
test
jg
or
push
push
inc
loop
jg
inc
movsl
bound
jg
adc
push
das
in
jle
push
and
push
mov
je
xor
aas
push
dec
mov
cmp
mov
add
mov
inc
add
pop
mov
add
pop
mov
sub
divl
orl
and
push
aaa
jle
dec
sbb
push
jo
dec
test
push
pop
cmp
dec
push
in
test
fisttpll
or
dec
push
cltd
push
test
xchg
dec
adc
and
push
dec
push
test
inc
dec
adc
and
dec
push
add
ret
adc
xchg
cs
shll
addl
bound
push
inc
push
xor
inc
rorb
xchg
sub
xor
push
and
lret
pop
pushf
fsubrs
push
push
dec
or
test
loop
and
and
sub
fmull
imul
rclb
inc
out
inc
jae
ss
adc
mov
or
andl
sbb
add
sbb
loopne
popa
out
or
repnz
mov
adc
xchg
sbb
and
cmpsb
imul
gs
mov
or
mov
pop
mov
add
repnz
mov
and
mov
pusha
xor
mov
mov
pop
test
sub
and
cmpsb
inc
inc
idiv
inc
adc
adc
adc
pop
lock
add
pop
lods
lea
pop
and
pushf
adc
adc
mov
loopne
mov
pop
mov
mov
sub
mov
pusha
movsb
dec
inc
call
and
jo
mov
push
enter
xchg
xor
adc
imul
add
out
das
mov
sbb
addr16
mov
test
xor
out
mov
sbb
sbb
ss
or
sub
adc
add
push
daa
imul
stos
dec
pop
pop
adc
adc
pushf
or
test
inc
add
mov
push
or
and
inc
push
insb
test
shrb
or
aam
jmp
push
jmp
scas
test
test
xor
lcall
adc
out
outsl
cmp
or
lcall
jecxz
inc
cmp
mov
push
pop
leave
lds
and
test
lret
inc
or
push
adc
push
inc
enter
sbb
lods
movb
sbb
and
subl
imul
dec
sbb
aas
push
xor
addr16
sub
lea
mov
rcll
push
shlb
push
mov
pop
pop
pop
ret
xor
es
dec
xchg
hlt
decl
add
xor
pop
inc
bound
pusha
adc
test
sbb
lea
and
dec
movsl
jl
xchg
xchg
ss
std
stos
mov
pusha
cld
roll
push
test
je
xchg
sbb
mov
ret
adc
sti
lea
lea
push
iret
xor
cmp
jge
xchg
scas
mov
movsb
pop
jo
push
jl
cmpl
es
aaa
add
call
mov
pop
mov
es
scas
dec
xchg
stc
mov
popa
sub
push
inc
cwtl
push
xor
cmp
push
mov
cld
push
lock
add
jne
lea
mov
or
ret
mov
and
push
pushf
adc
push
xor
jg
sahf
mov
and
leave
cmpsb
inc
test
movl
mov
lea
clc
push
push
test
and
jl
mov
inc
mov
das
cwtl
mov
or
lret
test
lock
jecxz
cmp
sub
and
and
inc
xchg
xchg
call
outsb
test
repz
sbb
daa
mov
cmpsb
aad
sbb
pop
popf
pop
scas
push
call
lock
and
lea
inc
push
xor
xorb
mov
cmp
sub
movnti
inc
push
test
push
jns
pop
xor
mulb
dec
mov
cltd
jo
cld
xchg
jae
aas
or
sbbl
ret
pop
test
or
xchg
inc
sub
jno
cld
inc
and
je
xor
xchg
notl
and
aas
inc
or
pop
xchg
ret
add
popf
jg
sti
std
add
out
mov
pushw
call
clc
xor
jge
add
fsubr
jecxz
fadd
jg
add
inc
sub
call
and
iret
rcrl
loope
sbb
and
jl
into
push
jl
inc
call
jl
stos
in
or
popf
aas
adc
rorl
push
jne
mov
pop
dec
repz
jae
sub
adc
sub
inc
adc
pop
and
fcomps
into
dec
and
mov
rcrl
out
int
call
push
daa
mov
fdivs
mov
fldcw
push
daa
jge
dec
pop
pop
andb
inc
sub
adc
inc
and
add
test
pop
gs
movsb
scas
mov
ljmp
fnstcw
sbb
xorb
lret
mov
nop
es
into
xor
cmpsb
bound
lea
mov
push
lret
call
test
adc
notl
inc
lods
testb
mov
sbb
in
adc
ljmp
push
loopne
je
cmp
push
out
loope
lahf
adc
jne
rolb
fdivrp
add
lea
sub
enter
push
and
lea
rep
dec
or
mov
std
sbb
or
xor
les
inc
jae
push
rolb
int
leave
je
inc
in
adcb
jp
test
sbb
add
pop
loopne
push
adc
and
dec
dec
mov
mov
dec
xchg
cmpsb
jle
mov
call
sbb
sti
ljmp
pop
sub
pop
pop
jmp
jp
lcall
insl
movsb
jmp
cwtl
mov
sub
mov
mov
mov
cmp
jnp
inc
add
sub
fs
inc
adc
aam
rorl
pop
lcall
or
into
call
mov
pop
push
ret
push
jge
sub
add
shlb
jmp
dec
jmp
mov
jo
mov
test
sub
je
cmpsl
mov
rorl
imul
scas
mulb
xor
inc
mov
leave
movsb
pop
pop
sbb
cltd
cld
dec
inc
mov
ret
push
fisubs
loopne
fsubl
pop
cmp
jae
sbb
jge
or
in
adc
es
call
mov
mov
adc
jl
mov
rcl
xor
xor
sub
pop
pop
mov
inc
movsb
test
and
push
hlt
dec
push
aam
xchg
sti
inc
or
hlt
sub
and
and
sbbl
adc
fisubrs
and
lods
push
xor
push
mov
add
add
and
sub
ljmp
mov
jmp
mov
movsl
cld
inc
rorl
adc
jl
mov
xchg
sahf
loop
push
jbe
nop
and
cld
loop
cli
dec
dec
push
pop
or
push
dec
dec
adc
jle
mov
dec
push
add
dec
pop
push
bound
imul
mov
push
inc
jns
xlat
jne
adc
adc
jne
xor
and
lods
icebp
push
dec
mov
xchg
sub
inc
call
xor
xor
sub
or
lea
push
fildll
jg
mov
push
push
ss
or
jge
pop
mov
aas
fcomps
in
jne
add
adc
push
sub
xor
das
mov
int3
bound
jo
mov
call
mov
jl
pop
pop
inc
loopne
cli
in
sub
sbb
inc
sub
cwtl
fcoms
lahf
or
mov
inc
add
nop
test
mov
pushf
insb
dec
mov
cmp
push
leave
push
mov
xor
leave
mov
jne
and
push
pushf
cld
mov
aad
sub
push
xchg
push
bound
mov
mov
pop
repz
add
dec
push
aam
jmp
mov
das
std
or
sub
test
jg
add
mov
cwtl
xor
jge
cmpsb
adc
leave
inc
add
sbb
cmpsb
mov
aad
dec
aaa
mov
bound
adc
fwait
mov
xchg
xor
mov
xchg
sub
push
xchg
in
daa
neg
scas
insb
adc
sbb
and
push
je
lods
xchg
ljmp
inc
jns
push
call
les
jae
dec
jl
daa
in
enter
sbb
sub
clc
orb
and
adc
dec
mov
dec
dec
xchg
push
inc
dec
and
mov
adc
add
mov
test
push
xchg
popa
jae
xchg
adc
or
testb
mov
or
fsts
jmp
mov
jle
sbb
dec
push
std
cmp
dec
gs
xor
fdivs
decb
dec
mov
inc
mov
or
push
ljmp
jmp
mov
ljmp
or
jno
movsl
add
icebp
call
iret
xor
inc
dec
or
or
hlt
cmc
and
out
jle
adc
adc
and
rcrb
pop
cmp
jns
nop
pop
add
sbb
std
mov
cmovno
jne
mov
popa
ss
sub
daa
es
adc
add
movhps
push
and
cli
mov
fwait
pop
or
das
ret
incb
sbb
or
adc
repnz
fwait
jo
add
out
ret
pop
dec
push
add
mov
loopne
adc
lock
sbb
sbb
pop
mov
mov
cmpsb
test
push
push
int
int
cltd
inc
push
xor
fbstp
xor
loop
add
or
inc
and
or
and
aaa
pop
or
jo
jb
in
sub
mov
dec
inc
push
lea
inc
sahf
pushf
inc
push
filds
loop
add
adc
mov
arpl
sub
pop
mov
loopne
rcrb
and
ret
xor
or
pop
add
es
push
gs
imul
jge
push
stc
pop
mov
pushf
call
adc
lods
push
jnp
fdivrs
and
call
in
ljmp
cmpsb
call
hlt
cwtl
add
popf
sub
adc
std
dec
cmc
leave
inc
cmpsl
jb
dec
addr16
lcall
call
mov
clc
jmp
mov
mov
sbb
xchg
aaa
inc
iret
lcall
xor
push
rclb
add
cmp
andb
and
inc
fdivrp
pop
cli
lret
aam
add
pop
out
repnz
xchg
dec
sub
dec
add
mov
jnp
in
cltd
pop
cld
fs
movsl
push
jns
push
mov
fcoml
mov
and
cld
aas
fsubrs
push
or
add
repnz
not
or
inc
or
call
jle
int3
adc
dec
push
nop
push
sub
mov
push
popf
push
and
or
test
jp
add
inc
sub
jge
dec
sub
pop
pop
in
or
test
adc
inc
icebp
mov
jno
icebp
sarb
adcb
cmpsb
js
movsl
fdivr
in
fs
mov
mov
mov
cmpsb
cmpsl
jmp
adc
add
push
mov
lahf
gs
rorb
orb
inc
add
out
or
pop
pop
cmpsb
lock
push
rolb
jg
sub
dec
or
push
mov
cmpb
push
dec
mov
shll
rcl
fadds
sub
xchg
movsl
cltd
cmp
adc
or
out
mov
jge
les
add
loopne
je
rcll
xchg
jge
or
inc
int3
sub
push
pop
lret
mov
mov
inc
push
add
adc
movsl
sbb
outsl
repnz
and
shll
add
repnz
dec
push
sbb
out
cltd
dec
xor
push
cs
sub
push
mov
hlt
sub
aaa
mov
lock
dec
jne
pop
sub
or
xor
sub
sbb
or
call
sub
jg
ja
xor
dec
cltd
daa
adc
dec
pop
int
sub
xchg
jb
lcall
jo
mov
jmp
mov
fildl
fdivs
flds
pop
fwait
call
push
stos
fs
nop
jbe
or
push
cmp
add
movsl
lret
inc
xor
push
xchg
sti
push
mov
into
data16
dec
jbe
mov
pop
idivb
cmp
jl
dec
outsb
test
cld
cltd
xor
adc
and
push
pop
pop
xor
mov
inc
mov
dec
cmp
add
push
xchg
inc
or
xchg
inc
and
cvtdq2ps
mov
cmp
mov
sub
lea
fistps
and
pop
mov
push
add
mov
into
jmp
dec
out
pop
pop
mov
mov
icebp
fstps
shr
add
xchg
std
sbb
gs
mov
dec
mov
dec
and
sub
add
lods
out
pop
stos
dec
and
or
add
enter
adc
pushf
xor
xor
adc
add
mov
imul
cmp
jnp
nop
andb
add
mov
mov
stos
rcll
and
dec
into
xor
or
mov
sub
xchg
add
add
mov
mov
ret
xorb
mov
push
nop
insl
mov
dec
movsb
aaa
stc
and
adc
sbb
ja
das
scas
adc
fdivrl
cmpsb
adc
decb
push
push
pusha
sub
push
nop
call
sbb
cltd
adc
mov
jne
pop
mov
xlat
in
jl
es
iret
fs
inc
or
pop
inc
cmpsl
and
push
or
xchg
fwait
ret
cs
xchg
sub
stos
or
jl
mov
and
addr16
cmp
orb
les
or
mov
xchg
mov
stos
cmp
test
mov
sahf
dec
dec
aaa
and
and
leave
jl
rcrb
je
mov
push
insb
bound
adc
int3
bound
dec
dec
lock
pushf
fsubrs
mov
pop
jne
push
add
push
or
and
pop
mov
out
cli
xor
ss
daa
dec
std
or
xorl
ret
mov
sub
jmp
clc
xor
mov
sbbb
mov
pop
in
in
sbbl
xor
gs
sbb
out
inc
add
push
sahf
mov
and
mov
xor
sub
movsb
in
pushl
mov
push
xchg
gs
and
xchg
push
mov
xchg
aad
mov
enter
aam
and
and
shlb
or
mov
mov
jp
mov
popa
imul
adc
mov
and
je
cmp
or
xchg
fnstcw
pushl
cmova
push
sbb
push
mov
mov
es
ret
sti
push
xor
inc
mov
nop
or
or
mov
push
test
jne
jle
dec
mov
push
cld
and
or
sbbb
scas
inc
and
sbb
xchg
pop
or
pop
imul
ds
leave
ret
jbe
jmp
fiaddl
neg
popf
imul
test
cld
stos
dec
mov
iret
jp
es
xor
sub
jo
cltd
add
push
push
call
or
lret
jns
mov
inc
je
or
pop
adc
movsl
xor
dec
push
adc
aad
dec
nop
sbb
xor
mov
test
mov
push
fwait
shrb
ljmp
scas
movsl
adc
aam
inc
mov
adc
cmpsb
jns
mov
je
sub
iret
sub
sub
test
hlt
inc
dec
add
gs
pop
jle
push
push
push
and
roll
push
outsb
fs
movsl
inc
sahf
out
and
or
or
push
sub
sub
cltd
stc
or
out
jle
out
adc
test
mov
pushf
sbb
clc
xor
dec
mov
stos
push
push
fdivrp
popa
mov
cmp
mov
or
jo
sbb
push
pop
fistps
lea
test
push
add
enter
sub
test
pop
frstor
lock
jl
push
pusha
push
jl
adc
push
pop
ror
add
movsl
jge
out
push
pop
aaa
shr
mov
sahf
mov
mov
add
addr16
les
div
jbe
scas
dec
fdivs
dec
in
sbb
sub
testl
lock
inc
push
data16
adc
lcall
shr
nop
imul
loopne
jg
pop
jge
mov
pusha
out
or
mov
mov
mov
add
mov
jl
mov
or
cld
daa
js
popa
in
inc
adc
push
adc
add
dec
mov
roll
insl
fmull
dec
std
ror
sbb
push
push
cmp
ficomps
and
outsb
es
into
nop
jno
adc
out
sahf
lcall
enter
out
loope
jl
xor
lds
and
mov
xor
clc
pop
lret
inc
les
das
cli
mov
jb
mov
mov
add
pop
xchg
mov
sub
jl
repz
jbe
push
lahf
jno
xor
and
in
inc
pop
jmp
popf
xchg
xchg
popf
movsl
add
out
and
and
test
fsubs
sti
xlat
jecxz
arpl
nop
mov
repz
popf
xor
call
out
and
push
push
mov
sub
jecxz
das
xchg
adc
mov
xor
add
ffree
insb
add
dec
cld
stos
xchg
or
jne
sub
xchg
inc
xor
jns
nop
ret
mov
push
push
sub
xchg
fs
andb
mov
jl
aaa
mov
push
fcoms
pop
ja
cmp
pop
mov
and
push
push
sub
mov
adc
div
pop
pop
and
push
mov
push
mov
addb
sbb
clc
dec
lret
sbb
sar
test
or
xchg
xorl
push
arpl
je
leave
lcall
dec
sti
test
jp
or
mov
fmuls
mov
add
aas
and
leave
push
dec
and
shrb
mov
ljmp
sub
test
mov
leave
movsb
bound
repz
enter
cli
xor
imul
and
xor
mov
fbstp
mov
sub
pop
pop
iret
add
rcl
adc
mov
dec
jle
into
push
add
in
jns
jo
jge
jl
mov
call
int
xchg
push
loope
xlat
jmp
out
adc
loop
push
out
pop
lods
jl
xchg
mov
sbbl
fmull
lcall
int3
jmp
mov
shrl
mov
cltd
xchg
sub
or
je
sbb
push
push
sbb
inc
pop
pop
shlb
jbe
pusha
push
call
inc
arpl
or
das
and
jne
dec
lahf
sbb
aaa
and
popf
push
fildl
pusha
stos
or
mov
divl
and
mov
stc
lds
es
imul
mov
pop
mov
sbb
ds
test
jle
adc
rcl
movsb
setae
out
pop
jl
inc
into
loope
sbb
mov
dec
dec
stos
cwtl
dec
inc
xchg
inc
gs
sub
mov
xor
and
or
adc
fs
adc
adc
or
lea
push
lcall
leave
push
mov
testb
and
or
leave
sub
jb
inc
ror
dec
pop
jns
cwtl
push
call
je
in
or
nop
adc
lock
das
das
adc
dec
in
xor
daa
fsubl
ficoms
adc
call
mov
inc
mov
lcall
aam
fisttps
xchg
push
adc
into
aas
xor
enter
inc
orb
or
fwait
es
repnz
push
test
jae
nop
clc
cmp
adc
loop
shr
pushf
pop
pop
test
mov
scas
in
mov
inc
dec
hlt
enter
out
inc
push
cltd
rorb
cmp
cs
mov
push
push
mov
fistl
ljmp
jl
fcomps
ljmp
loop
pushf
jne
test
dec
xor
pop
inc
les
push
andb
and
call
les
hlt
mov
xchg
es
sub
clc
mov
pop
sbb
and
xlat
jecxz
adc
adc
bound
andb
push
aad
push
mov
push
inc
inc
lcall
lahf
add
enter
fcoms
arpl
adc
imul
enter
xor
push
mov
pusha
iret
xchg
daa
jl
inc
and
fdivl
mov
pop
sub
push
jle
and
ficoms
jbe
sbb
inc
popa
or
movsb
push
jnp
pop
mov
push
ss
in
xchg
hlt
les
mov
jle
les
jno
rolb
push
inc
adc
pop
loop
aam
adc
jecxz
push
shll
inc
shll
mov
mov
push
and
popa
das
scas
inc
addb
and
rol
add
inc
xchg
notl
adc
jae
add
es
or
pusha
and
call
pop
cld
push
leave
jp
adc
jnp
xor
mov
jp
stos
stos
mov
push
cmpsb
je
fisttpll
cmpl
adc
push
dec
outsb
push
shl
mov
insb
inc
cli
mov
mov
cmp
nop
aam
inc
dec
fmuls
sahf
pop
cmp
call
mov
test
and
leave
cmp
cmp
xchg
roll
pop
sbb
pushl
inc
je
push
adc
aam
in
lods
pushf
mov
out
loop
xor
mov
fdivrl
inc
test
pusha
jge
push
mov
or
pushf
inc
jmp
addb
movsb
movsb
nop
xor
push
call
pushf
fisubs
jo
test
adcl
pop
xchg
push
dec
jbe
and
test
mov
pop
ret
mov
cmp
out
mov
mov
dec
in
nop
pop
adc
and
inc
cwtl
inc
sbb
fadds
dec
icebp
xchg
xchg
movsl
adc
push
filds
imul
inc
xchg
call
rcrl
test
cmp
into
sbb
adc
jb
and
and
and
orl
mov
xchg
test
pop
xor
dec
xor
adc
popf
and
dec
jne
jle
leave
inc
sbb
jge
je
test
pusha
inc
push
or
sub
adc
adc
mov
imul
mov
and
adc
push
in
mov
push
mov
mov
in
imul
xor
loope
jmp
or
cltd
adc
mov
cmp
xor
push
dec
sub
bound
icebp
jge
xor
inc
inc
fisubrl
add
fisttps
and
pop
rcll
fisubrl
mov
xchg
sahf
push
inc
lea
mov
daa
mov
sub
mov
imull
roll
and
mov
cmp
jne
cld
pop
add
push
mov
mov
and
xchg
cmp
hlt
nop
outsb
mov
mov
push
nop
das
mov
je
in
es
adc
cmp
mov
scas
xor
adc
pop
adc
push
rcll
std
lcall
add
push
cwtl
inc
ret
mov
cmpl
dec
dec
daa
add
mov
ret
or
xor
mov
xchg
push
mov
sub
loop
loope
adc
and
jle
sbb
push
mulb
mov
add
lods
imul
or
or
clc
roll
pop
jo
add
lods
xor
adcl
push
bound
push
xchg
xchg
and
addb
nop
nop
mov
rorb
sub
cmp
and
cmp
test
lret
das
push
dec
mov
mov
icebp
mov
cltd
and
mov
xchg
imul
or
or
setne
movsl
push
mov
nop
dec
jbe
push
xchg
mov
jp
dec
pop
and
or
cltd
test
inc
dec
or
pop
mov
data16
cmp
ss
mov
xor
loop
jo
jo
dec
dec
add
test
sbbb
cmp
lahf
sub
ret
je
daa
adc
jmp
add
rcrl
pop
je
sbb
adc
xor
mov
push
xchg
daa
loop
stos
pop
xor
pushf
dec
orl
push
aaa
push
mov
or
inc
jmp
clc
mov
or
push
xor
jbe
frstor
je
and
ljmp
mov
test
and
pop
sub
mov
mov
cmp
test
xor
inc
les
inc
in
ret
fstps
or
cmp
popf
mov
iret
jmp
jmp
xor
add
call
push
into
jecxz
and
inc
stos
push
xchg
or
push
xor
mov
dec
dec
and
test
mov
pop
adc
sbb
flds
cmp
jo
and
jns
icebp
dec
clc
in
adc
enter
and
daa
push
xchg
jge
sub
lahf
out
fwait
popf
loop
mov
out
xchg
ret
les
int
mov
sbb
mov
dec
push
or
dec
ljmp
popf
popf
testb
int
xchg
sbb
mov
into
cs
xor
cltd
push
jmp
stos
push
jecxz
sbb
inc
mov
enter
inc
push
cli
and
jge
add
call
cmpsb
xchg
in
adc
fsubrl
out
fs
push
cltd
cmp
adc
jne
popa
jns
nop
adc
xchg
repnz
lods
jne
cmp
push
dec
push
aas
jl
adcb
sub
movsl
push
push
nop
loop
push
call
test
mov
loop
push
popa
das
je
and
es
fsts
inc
dec
mov
push
dec
inc
adc
divb
fildll
shr
in
icebp
int
aas
dec
hlt
sub
push
lret
imul
test
je
mov
cmp
clc
cmp
cmp
sub
cwtl
inc
pop
sub
aas
pop
cmp
adc
adc
insb
mov
jl
jmp
aad
or
out
cmpxchg8b
jbe
loop
add
cmp
xchg
push
repnz
adc
stc
xchg
adc
cmp
xor
imul
mov
push
dec
out
and
mov
aaa
and
jno
push
call
mov
mov
adc
inc
bound
sti
or
sarl
aaa
and
jne
pop
adc
aam
test
adc
mov
cmp
push
lret
mov
mov
das
and
mov
jno
lcall
test
popa
ja
notl
xor
mov
cmp
lret
rolb
push
data16
pop
mov
into
imul
into
flds
inc
sbb
mov
fdiv
xchg
xor
push
mov
call
add
rorb
jns
les
pop
jp
jmp
mov
inc
dec
jmp
leave
inc
push
je
and
rcl
add
ja
fstps
xchg
sbb
js
pop
sub
scas
push
mov
rcl
mov
sbb
icebp
xchg
sbb
cmp
loope
insb
jle
adc
bound
mov
cmp
enter
pop
dec
lock
fdivr
push
xor
in
jp
pop
inc
mov
add
cmp
ret
inc
frstor
cs
es
daa
roll
jmp
test
pop
daa
push
or
mov
fs
cmpb
jge
mov
xor
sbb
adc
or
and
test
jl
in
lcall
push
add
jl
cs
pop
inc
test
sub
ret
jne
mov
or
pop
in
xchg
cli
xchg
std
movsb
es
and
push
jmp
test
stos
dec
sub
imul
lret
and
xor
pop
adc
jge
pop
mov
hlt
repnz
div
iret
push
cltd
es
pop
xchg
inc
loop
pop
pop
das
loopne
dec
or
imul
push
mov
push
fbstp
out
nop
sbb
adc
ficompl
jbe
xabort
xlat
pop
ret
popa
inc
std
add
push
movl
pop
pop
jno
xor
mov
add
jg
nop
das
mov
mov
adc
xchg
sub
jnp
cmp
iret
inc
adc
cmpl
jne
cwtl
inc
mov
push
int3
inc
or
add
or
inc
or
or
aam
je
push
cmp
and
or
add
sbb
adc
and
or
mov
cli
mov
shll
mov
jnp
jle
mov
mov
data16
push
jl
pop
clc
jne
dec
cld
or
jbe
daa
push
int3
adc
int
ljmp
pop
dec
mov
pop
jecxz
adc
jecxz
push
xchg
cmp
mov
ret
adc
or
adc
loopne
mov
pop
in
push
inc
jne
call
mov
cs
orb
lock
clc
mov
nop
or
cld
nop
rolb
jmp
test
ja
arpl
adc
and
and
push
adc
enter
or
test
in
enter
jmp
push
xor
sbb
and
nop
pop
mov
add
inc
repnz
push
jmp
add
add
cmp
mov
and
nop
add
jno
shrl
call
nop
pop
sahf
pop
xor
sbb
inc
and
jno
jne
int
dec
mov
xchg
mov
mov
testl
punpckhdq
pop
adc
push
cmpsb
mov
cmc
jl
inc
or
rclb
inc
cmp
movsb
xor
adc
test
sbb
lods
dec
prefetchw
and
mov
sbb
hlt
and
nop
cwtl
iret
in
enter
clc
ret
adc
faddl
pusha
cmp
xchg
cld
cmp
and
inc
dec
roll
in
xor
push
setae
test
xchg
dec
xchg
jns
push
pop
jge
test
adc
jne
ss
sbb
faddl
fs
sub
xchg
sahf
add
jmp
dec
out
scas
mov
sbb
push
xchg
jle
popf
fisttpll
cmp
or
adc
sarb
sub
inc
mov
rol
mov
mov
add
jmp
mov
mov
mov
jp
xchg
inc
xchg
or
push
pop
test
test
xchg
dec
mov
inc
mov
mov
xor
loopne
nop
je
sbb
or
test
jl
jmp
testl
paddusw
sub
cmovb
popa
and
jge
or
xchg
mov
mov
xchg
cmpsb
aaa
mov
xchg
aaa
adc
ljmp
outsb
dec
movq
lcall
ds
mov
aaa
jmp
xlat
test
lahf
sub
jne
xchg
pushf
push
fstps
push
push
dec
sbb
adc
adc
insb
xor
je
mov
and
mov
js
push
jne
push
call
and
jmp
fdivl
imul
data16
or
fstpl
mov
addr16
xchg
subl
insb
lahf
push
rol
sbb
xchg
push
icebp
cmp
daa
js
shlb
sub
push
push
das
dec
lock
imul
loopne
xchg
divl
insl
pop
fsubrl
pop
movswl
pusha
ret
xor
call
out
sbb
cmp
jne
inc
inc
jmp
testl
or
or
pop
jne
dec
mov
mov
or
jb
pop
bound
jne
testb
add
sbb
mov
add
add
xchg
and
call
add
clc
ja,pn
sub
add
and
mov
and
dec
call
fsubr
arpl
lds
inc
or
mov
xchg
pop
sub
sub
test
push
or
dec
jo
push
jmp
aas
pop
or
jnp
mov
orl
pop
dec
ja
dec
jmp
xchg
movsl
mov
jmp
lahf
gs
es
aas
lds
mov
test
and
inc
notb
sub
loopne
in
sub
sbb
jmp
push
fdivrs
lea
jnp
mov
clc
leavew
push
jl
enter
xchg
xchg
out
push
loope
pop
sbb
sub
out
leave
and
and
stc
sbb
cmp
push
adc
cmpsb
and
int3
sbb
in
mov
adc
jns
push
push
add
ds
or
or
adc
inc
lea
addb
sahf
dec
jo
dec
jb
adc
adc
push
ret
jns
cmp
js
or
movsb
cmp
and
xor
nop
jmp
fdivl
repnz
mov
fdivs
sbb
cmp
xchg
push
lods
sbb
xchg
test
xchg
in
daa
cmc
cmp
xchg
and
pop
dec
add
pop
xchg
dec
pushf
or
sbb
dec
inc
mov
xchg
movsb
test
lea
and
xor
cmpsb
mov
push
rclb
mov
hlt
push
int3
push
adc
mov
and
nop
mov
inc
jbe
fcompl
stos
and
push
push
inc
in
sub
sub
test
adc
stc
in
sbb
mov
jnp
cmp
cmp
pop
push
pushf
sbb
dec
sbb
movsl
and
pushf
inc
and
add
cmpsl
and
or
or
popa
push
push
or
and
fs
push
xor
push
or
pushw
call
cmc
push
cs
xor
adc
adc
or
cmp
push
or
inc
sahf
pop
pop
mov
push
mov
push
add
loop
insl
mov
sub
loope
call
inc
and
je
fnsave
mov
add
and
and
jge
or
push
xchg
pop
mov
orb
sub
xor
rcll
mov
push
aad
movsb
cmp
shrb
into
mov
arpl
mov
mov
pushf
aas
add
popa
xchg
inc
push
add
ss
and
cmp
xor
or
pop
std
inc
push
mov
adc
inc
jmp
push
pushl
jae
outsl
cli
mov
inc
gs
push
sub
gs
sarb
jne
dec
test
xchg
call
test
sti
xchg
fdivrs
inc
mov
jb
dec
adc
jge
enter
adc
push
mov
jo
xor
aaa
lea
adc
sbb
lock
aad
jle
xor
sbb
out
and
sub
xor
inc
jmp
push
fmuls
adc
dec
inc
ret
add
test
and
cmpsl
xchg
dec
push
mov
or
bound
inc
call
inc
nop
mov
icebp
iret
aas
aas
ds
mov
das
cmp
pop
mov
daa
je
inc
daa
inc
lea
shll
lret
dec
push
xor
ret
add
or
push
pop
mov
push
sub
fstps
pop
and
ror
iret
push
shlb
push
lahf
aaa
lret
mov
scas
xlat
popa
in
mov
pop
push
and
stos
loope
testb
or
lea
pusha
inc
jl
mov
pop
mov
mov
pop
enter
imul
or
add
mov
pop
and
push
mov
mov
jo
stc
mov
xchg
adc
jne
jg
dec
mov
dec
in
or
cld
xchg
jnp
call
sbb
and
or
mov
inc
mov
mov
js
push
shr
notb
jecxz
outsl
dec
pop
xchg
inc
jmp
mov
pop
dec
dec
pushf
sub
ds
divb
xor
imul
sbb
pop
test
adc
sub
dec
xchg
ljmp
push
mov
adc
fstpt
pop
pop
rcll
sbb
add
repz
jne
cmp
cmp
call
mov
clc
dec
pop
test
push
jmp
push
imul
out
and
in
call
push
mov
dec
sbb
adcb
inc
stos
call
xorb
idiv
mov
out
popf
adc
orb
jecxz
dec
push
or
adc
nop
adc
dec
test
je
popf
pop
adc
xor
or
add
test
sbb
cmp
xor
or
push
push
and
push
or
dec
cld
adc
mov
push
aas
fldenv
inc
fimuls
repz
or
adc
and
or
xchg
cmp
mov
jmp
sub
sub
and
test
jmp
dec
mov
cmpsl
mov
fisubs
jne
testb
je
add
pusha
ljmp
inc
shlb
dec
iret
mov
pop
xchg
mov
ss
data16
mov
inc
jecxz
push
aaa
adc
sub
shrl
dec
icebp
mov
movsl
icebp
mov
cmpsl
and
ljmp
mov
mov
imul
add
pop
jno
push
test
ret
popa
inc
mov
sub
pop
and
sbbb
loope
push
sub
push
test
fdivrs
int
push
mov
negl
dec
add
adc
ret
push
mov
cmp
sti
jmp
rorl
xchg
fs
in
fidivs
sete
lahf
inc
jg
add
je
pop
mov
and
loop
shll
or
popl
push
out
push
cmpb
inc
imul
push
mov
lods
sti
aaa
outsb
je
sarl
aam
rcl
jl
push
cli
pushf
add
shll
jmp
scas
cmp
dec
sub
into
mov
or
sbb
xchg
sub
mov
dec
and
ret
sbb
push
pop
and
imul
sbb
add
mov
mov
int3
cmpb
repz
sbb
xchg
je
jo
fcomps
sub
and
out
jno
adc
push
sbb
cmp
or
and
iret
xor
pop
sbb
scas
adc
mov
cwtl
inc
aas
cltd
push
and
or
push
mov
xchg
mov
ss
sub
pusha
stc
fcmovu
in
sub
push
call
outsl
daa
push
mov
hlt
jge
repnz
call
adc
mov
sub
test
pop
cmc
push
cld
aam
scas
or
adc
repnz
sub
jp
mov
sbb
out
jge
xor
clc
sub
nop
jp
jge
or
jne
bound
push
fstl
stc
lods
data16
adc
dec
sub
stos
cmp
stc
pop
mov
aad
lret
sar
mov
or
rorb
lods
daa
adc
lods
lahf
movsb
leave
xor
xor
sbb
stos
push
popf
jle
iret
stc
xchg
push
clc
shlb
mov
or
sbb
push
sbb
jp
adc
sub
pop
out
sub
scas
aam
mov
cli
repnz
sub
stc
sbb
clc
jg
inc
cmp
mov
shrb
int3
pop
push
pusha
mov
inc
inc
jne
clc
test
jle
lea
shl
popf
aad
and
repz
stos
bound
push
movsl
push
pop
push
hlt
and
dec
loope
movsl
push
cltd
cmpsl
jge
int3
das
notb
jmp
in
inc
clc
call
cmp
jl
and
in
dec
push
push
adc
pop
leave
cmp
aaa
pop
jne
jne
arpl
and
roll
cmc
scas
sub
inc
int
jecxz
enter
dec
aam
mov
ljmp
std
cmpb
and
push
inc
inc
je
push
pushf
or
pop
dec
or
movsl
lea
add
xor
std
adc
mov
xor
mov
int3
mov
jne
ss
pop
cmp
adc
inc
xchg
xor
jne
inc
imull
das
clc
gs
cmp
and
dec
push
lret
mov
ja
dec
lock
and
test
inc
or
jge
aas
les
loop
insl
ret
and
sbb
and
cmp
jno
mov
push
and
dec
dec
lock
nop
fwait
dec
insl
sbb
inc
inc
sbb
ljmp
in
xchg
adc
and
cmc
test
jmp
lock
stos
arpl
out
test
jbe
push
int3
jmp
fidivs
mov
mov
pop
xchg
add
dec
aam
adc
add
aas
adc
pop
or
enter
push
jo
hlt
shll
jl
mov
pop
or
jne
push
pop
xchg
dec
mov
inc
repz
in
push
mov
cmpsb
cmc
xchg
in
xor
dec
xor
inc
addr16
lret
mov
xor
jmp
xor
daa
inc
jno
jo
xor
aas
sub
jbe
fnstenv
sub
fldt
jns
call
movsb
jecxz
aaa
jo
cs
call
out
and
les
push
daa
jl
add
push
adc
push
adc
jg
cmc
imul
cmpsl
add
jge
movsl
jo
lret
cli
in
pop
movsb
mov
jg
push
and
mov
xor
ss
inc
enter
les
mov
inc
enter
or
pop
loop
jbe
inc
add
or
daa
xor
mov
lcall
push
movsl
gs
fwait
push
and
xchg
in
das
fildll
test
leave
mov
js
and
inc
sub
lock
sbb
adc
dec
push
add
inc
adc
add
pop
aaa
stos
idiv
mov
enter
adc
mov
pop
loop
adc
int3
cltd
leave
dec
fstpl
dec
je
idivb
rcrl
sub
mov
cmp
push
mov
cmpsl
shl
adc
sub
les
mov
enter
mov
addr16
insl
mov
imul
dec
push
and
and
in
sbb
or
mov
push
cmc
lds
lds
pop
dec
xor
sbb
mov
shll
push
test
pop
push
dec
adc
add
sbb
cld
aad
xchg
out
subb
sbb
mov
sbb
xchg
addr16
mov
popf
outsl
fs
inc
gs
sbb
add
push
add
and
mov
dec
xor
push
sub
sbb
nop
dec
jmp
jo
or
push
push
push
and
std
cmp
int
ja
mov
mov
mov
push
inc
cmpb
ret
inc
sbb
test
js
pop
mov
or
pop
jb
xchg
mov
cmp
lock
cmp
or
add
adc
lock
out
test
cmp
out
std
pop
cli
and
je
xchg
mov
mov
jo
push
cld
pushf
adc
jmp
pop
pop
cmp
clc
ja
pop
or
jb
push
ljmp
xor
js
cltd
adc
aas
mov
subl
or
scas
and
das
and
sbb
nop
mov
sbb
test
dec
sbb
pop
or
add
fmull
push
int
xchg
std
cmp
pop
adc
loopne
test
and
push
gs
push
popf
adc
pushf
push
sbb
jmp
pop
mov
push
je
cwtl
adc
push
jne
push
sti
adc
adc
jb
and
sub
rorl
lock
cs
push
xor
enter
popl
insl
loop
cs
lret
xchg
mov
adc
jmp
mov
jns
pop
add
sub
dec
daa
jmp
in
xchg
jmp
and
add
dec
pop
adc
add
movswl
xor
and
inc
out
in
popa
ljmp
sub
addr16
or
cli
adc
sub
or
std
or
test
or
lea
mov
testl
sub
stc
and
sub
mov
inc
cmc
push
mov
nop
aam
mov
les
shrl
es
lahf
or
and
inc
adc
mov
dec
adc
scas
push
clc
jo
or
add
xchg
jecxz
int
dec
pop
push
je
jle
and
imul
add
sbb
subb
arpl
addl
rorb
xchg
or
and
paddw
xchg
add
loop
daa
push
rorl
jmp
add
pusha
cld
and
leave
rcrb
scas
fldenv
lea
shl
sbb
inc
popf
lds
gs
ret
mov
xor
cmp
inc
insb
jmp
ret
and
push
add
xchg
dec
xchg
jle
test
adcl
arpl
jns
or
pop
sti
xchg
add
jge
movl
mull
add
int3
mov
jno
loopne
call
mov
roll
fsts
ret
lret
movsl
pop
fwait
sbb
push
call
test
sti
mov
jg
lret
bound
xchg
or
sub
inc
mov
inc
mov
mov
adc
or
inc
bound
sbb
xor
in
loope
pop
subl
dec
jge
add
notl
mov
frstor
adc
and
sbb
leave
data16
and
or
inc
or
mov
test
or
inc
inc
push
idivb
cmp
add
adc
je
cmp
sbb
and
and
cwtl
cwtl
inc
cmp
and
sbb
roll
push
sarb
mov
loope
xor
cmpsb
je
jp
out
dec
mov
push
jo
jg
and
adc
in
sbb
push
aad
or
mov
add
xchg
sbb
jmp
dec
pop
scas
test
jmp
jmp
pop
inc
xchg
and
cld
fwait
sbb
jo
mov
sbb
push
adc
pop
or
push
xor
adc
cmpsb
or
incb
push
or
mov
push
clc
or
sbb
hlt
xor
mov
pop
loop
sub
adc
cmp
inc
hlt
std
lods
or
adc
cmpsb
or
push
jmp
dec
xchg
adc
hlt
seto
or
clc
enter
pop
mov
pop
push
mov
and
out
sub
stc
pusha
and
push
les
daa
insl
push
push
clc
sub
mov
push
adc
orb
or
rclb
faddl
inc
les
sbb
and
lods
dec
mov
add
jmp
pop
adc
inc
outsl
enter
or
push
fs
dec
subl
in
xor
repz
in
or
je
pop
hlt
or
lea
loop
icebp
pop
sbb
adc
hlt
xchg
pop
or
or
mov
daa
and
flds
or
pop
sbb
sub
movl
xchg
add
push
pop
or
or
inc
inc
adc
iret
sbb
into
sbb
ret
repnz
mov
mov
rol
lahf
or
pop
shl
daa
pop
pop
push
iret
jmp
xchg
int
in
clc
push
adc
mov
mov
add
insb
shll
pop
adc
in
into
movsl
gs
dec
cmpsl
mov
and
inc
sub
xchg
ret
insb
mov
scas
test
js
nop
inc
add
jle
cmpl
or
lds
or
sarl
jbe
daa
jg
fwait
stos
cmp
pop
inc
mov
je
lahf
push
jo
jne
cmp
push
sbb
cmpl
adc
rclb
add
enter
mov
add
add
lock
and
or
adc
jge
insb
out
je
cmp
bt
adc
mov
dec
pop
addl
mov
sub
sbb
push
lahf
cmp
adc
sbb
adc
stos
add
test
ret
jo
push
out
std
xor
adc
lock
pop
inc
cmp
scas
adc
addb
cmp
mov
rorl
ret
fs
jge
adc
hlt
cmp
call
mov
push
cmp
push
jecxz
and
enter
jle
call
sbb
xor
into
inc
cmp
push
dec
mov
pusha
xorl
nop
adc
add
push
push
cmp
and
pop
fcomip
orl
push
stc
fs
jp
mov
sahf
jmp
or
call
sub
mov
add
mov
dec
scas
lcall
and
ret
push
jmp
dec
ds
and
filds
fstp
subb
pusha
sub
mov
jmp
mov
pop
daa
push
gs
les
mov
or
or
xor
ss
sbb
mov
daa
adc
add
push
cmp
outsl
ret
inc
push
int
cli
mov
add
push
jo
push
xchg
pop
je
or
pop
push
or
dec
test
cmp
dec
jne
jmp
sub
and
mov
and
pushl
shlb
mov
add
or
sbb
jl
mov
test
cmp
adc
or
sub
decb
xchg
sub
sbb
or
cmp
dec
push
mov
repz
aaa
mov
and
loope
and
dec
test
xchg
in
int3
sahf
insl
and
js
movswl
push
cmpsb
xchg
inc
sub
cmp
imul
shr
mov
cmp
lods
or
jge
mull
pop
je
jne
stc
das
and
jbe
dec
pop
mov
rolb
dec
jl
shrl
test
mov
cmp
push
jmp
adc
mov
cmp
cmp
add
cld
mov
movl
dec
pusha
jae
call
inc
sbb
pop
flds
xor
or
fwait
jle
inc
xor
iret
push
add
bound
mov
mov
sbb
sarb
test
popa
xchg
sub
lock
xor
add
pop
sbbl
mov
xlat
dec
addr16
lods
lock
jecxz
push
pop
mov
add
int3
test
mov
arpl
inc
mov
adc
lock
push
push
adc
mov
out
mov
jge
and
bound
cmp
std
xor
add
sub
or
pushf
xchg
mov
inc
ss
and
sub
sub
hlt
dec
test
xor
add
push
mov
imul
mov
mov
popf
sub
das
leave
sti
jnp
movb
shr
mov
push
mov
cmpsb
test
out
or
mov
adc
pop
xor
xlat
jne
je
cli
in
add
sub
fs
add
sbb
dec
adc
lea
jae
push
nop
sbb
xor
push
xchg
sbb
sbb
mov
cli
int
pushf
push
sub
pop
sbb
sarb
rclb
add
mov
inc
cmpl
cli
jecxz
hlt
inc
cmp
loop
lcall
jbe
xor
adc
xchg
or
out
clc
push
mov
pop
jb
ficompl
data16
cli
push
clc
mov
jbe
push
cmp
xlat
es
or
xor
push
scas
push
cmpsb
fldcw
mov
or
stc
mov
inc
cltd
sub
push
mov
mov
jo,pn
call
xchg
or
fbstp
mov
adc
inc
xor
push
jmp
xchg
adc
sub
int3
jl
or
adc
into
pop
sub
pop
leave
mov
push
sub
cwtl
dec
mov
aaa
in
into
jno
idivb
add
test
mov
daa
clc
out
rclb
jb
jo
xor
push
or
add
dec
cld
lock
xchg
mov
pushf
dec
incb
imul
pop
cmp
xorl
sbb
enter
test
sbb
mov
mov
cmp
ret
dec
jg
xor
lret
cwtl
clc
ret
xchg
mov
or
jb
dec
adc
adc
test
jecxz
jne
or
call
sahf
aam
ljmp
and
add
inc
es
mov
cmpb
adc
flds
xchg
adc
sbb
push
jg
test
xchg
shlb
dec
push
lds
mov
fs
mov
mov
movsl
notl
add
adcb
or
lret
sbb
and
cmpsl
stos
add
and
sub
es
push
sarb
sbb
dec
add
insb
push
add
arpl
adc
push
sti
stc
mov
jmp
lods
mov
mov
add
mov
xor
stos
and
mov
add
daa
repnz
cmpsb
ret
adc
sti
loop
and
pop
rorl
cmp
loope
inc
or
xor
scas
les
push
icebp
mov
xor
jmp
mov
and
adc
xlat
imul
adc
xchg
mov
inc
gs
xor
mov
cwtl
or
mov
jb
push
cmp
fcmovu
or
ja
push
scas
or
mov
jmp
jmp
loop
jb
rclb
popa
push
dec
xchg
xor
jmp
enter
addb
or
cld
jmp
pop
sbb
or
addb
data16
inc
mov
adc
sarb
int
bound
and
dec
repnz
mov
lcall
bound
jl
xlat
add
and
test
xchg
push
mov
jne
in
inc
les
xchg
sub
xchg
lods
mov
add
adc
negb
into
adc
test
push
add
push
dec
pusha
shl
cli
out
arpl
fnstcw
lods
aad
cwtl
push
xor
push
in
add
jmp
dec
sub
call
and
pop
mov
xchg
inc
repnz
fnstenv
cmpsb
jle
lods
shll
js
inc
add
jge
sbb
xor
xchg
loope
sub
das
jns
jbe
jge
addb
sarb
pushf
mov
pop
lea
pop
inc
cld
testb
ret
xor
shr
fnsave
dec
or
adc
or
sub
lahf
pop
neg
sbb
out
xchg
fsubr
or
les
xchg
popf
push
pop
mov
stos
sbb
xchg
jl
pop
lds
adc
loop
sub
and
sahf
push
xchg
repz
fs
and
pop
lods
jmp
add
stc
test
push
push
scas
fsqrt
pop
jle
iret
pusha
fs
stc
jmp
mov
scas
inc
leave
or
adc
inc
mov
in
in
jbe
mov
and
shll
shrb
outsl
xchg
icebp
pushf
dec
xchg
dec
xchg
xchg
enter
pop
lahf
sti
add
cli
popa
pop
sbb
push
popa
nop
xorb
adc
push
bnd
xchg
inc
mov
bound
sub
sbb
lret
dec
lods
add
clc
gs
ja
sbb
mov
sub
dec
cmpsl
adc
out
sub
adc
inc
movaps
cmpsl
mov
lahf
mov
and
mov
std
xchg
or
enter
lods
mov
mov
adc
gs
or
adc
and
repz
inc
cmpsb
fadd
mov
cmp
mov
popl
loopne
addr16
sbb
lock
inc
pop
jbe
inc
in
inc
push
jns
lods
jo
xchg
lcall
pop
sub
jge
pusha
push
dec
rcrb
xchg
lcall
dec
shrb
lret
icebp
mov
loope
jne
push
movsb
push
xor
leave
testb
addr16
or
xchg
sbb
sbb
and
push
dec
adc
test
outsl
push
daa
push
add
pushf
scas
xchg
inc
sub
adc
enterw
stc
in
aam
or
sub
leave
cmp
mov
mov
mov
lds
jmp
push
clc
dec
push
shlb
pop
push
in
jle
cmp
ss
cmp
sti
xor
stos
sbb
pop
test
add
inc
add
jle
jge
add
decl
cmp
adc
clc
leave
add
orl
push
repnz
push
daa
xchg
sub
cmp
std
jl
jns
add
mov
push
push
stos
xor
decb
mov
inc
xchg
insb
xor
mov
test
add
inc
movsb
cltd
inc
pop
ljmp
mov
jo
out
xor
pop
je
lret
inc
call
adc
ja
pop
jo
pop
lds
lahf
add
je
pushl
shrl
cs
xor
repnz
and
cmp
jge
add
loopne
mov
adc
test
ss
and
dec
add
dec
pop
repnz
dec
lock
fs
fwait
add
push
xchg
popf
push
repnz
inc
push
bound
xchg
aas
or
and
ss
and
call
dec
repnz
sub
sbb
xchg
vpsrld
std
jne
push
fstps
out
xlat
adc
dec
pop
les
insb
pop
movsb
leave
js
pop
imul
fbstp
inc
and
mov
push
pop
cld
pusha
sub
enter
repz
fnstcw
xor
inc
cmp
adc
leave
and
enter
rcrb
and
movsl
cmp
fwait
adc
pushf
decl
cmp
mov
sbb
aas
or
imul
pop
cmp
add
push
gs
inc
or
loope
mov
xchg
aas
inc
add
ja
int
imul
fcoml
jno
jne
das
sbb
lret
dec
pop
xchg
cmp
mov
mov
lcall
popa
sbb
jle
test
cmp
jo
inc
fmuls
xchg
cli
inc
sbb
push
cltd
repz
pop
or
push
inc
lret
repnz
cmp
movsb
ljmp
adc
adc
stc
xchg
in
mov
push
repnz
inc
cmp
aam
cmp
aaa
fs
cmpb
stos
or
test
sub
push
sti
imulb
fdivs
xor
and
call
jmp
nop
inc
push
xchg
ret
or
outsl
push
and
mov
in
push
hlt
insb
mov
push
inc
dec
cmp
dec
sub
lcall
inc
aad
xor
in
dec
and
stos
and
cltd
inc
dec
dec
push
cwtl
lock
stos
xchg
pusha
inc
and
scas
xor
les
mov
cmpltps
dec
inc
and
daa
jmp
lock
xor
pop
mov
dec
jmp
aad
inc
mov
ja
les
inc
or
sbb
push
stos
insl
jnp
mov
mov
pop
pop
add
daa
inc
stos
and
inc
imul
jl
jb
xor
fcmovu
inc
dec
sar
in
jno
mov
jbe
aam
and
inc
and
jae
fsubr
dec
pop
pusha
scas
cltd
or
das
idiv
or
insb
inc
xchg
call
inc
dec
add
call
or
mov
test
dec
fsubrl
adc
cmp
imul
hlt
or
cmp
test
cmp
mov
inc
ja
or
jae
xchg
js
shll
mov
inc
or
push
rclb
outsl
adc
and
andb
cmp
pushf
int
mov
iret
sbb
pop
pop
mov
cmpsb
add
mov
and
inc
mov
outsb
xor
addb
insb
inc
inc
mov
jb
daa
sub
sbb
inc
movl
adc
xor
or
jmp
push
mov
push
ret
mov
sub
xor
push
iret
adc
mov
rorl
je
imul
mov
cltd
add
jnp
leave
jle
cld
inc
push
or
and
xor
cmp
add
xor
movsb
jns
add
mov
insl
sbb
in
sarl
adc
call
mov
aaa
push
clc
push
push
hlt
les
test
in
jae
fs
leave
push
rol
andb
push
push
push
add
in
push
test
outsb
mov
inc
mov
adc
lret
lcall
outsl
daa
daa
add
movsb
std
push
jo
cmp
lcall
lcall
cltd
inc
lock
mov
xchg
and
rcrb
xor
inc
data16
pop
xchg
jge
add
shlb
mov
lea
out
ss
mov
sub
inc
sbb
inc
mov
jo
push
inc
xlat
icebp
nop
and
lret
lea
adc
push
and
jp
gs
outsb
fsubr
mov
cmpsl
push
adc
sbb
mov
or
scas
mov
lret
popa
push
and
push
cmpsb
or
cmovbe
jg
adc
into
push
adc
and
and
xor
dec
pop
pop
call
xor
stos
and
andb
out
or
xchg
adc
push
mov
out
mov
popf
dec
sbb
mov
jnp
insb
jge
inc
popl
sub
or
mov
aas
push
and
cmpsb
or
dec
pop
xlat
pop
sbb
cs
xor
xchg
enter
mov
clc
adc
mov
cs
ret
push
in
push
push
xchg
dec
add
push
sub
ljmp
cs
test
dec
loope
push
rcll
imul
mov
sub
test
test
pop
stos
mov
xchg
dec
inc
pusha
mov
jp
andl
mov
loopne
test
dec
shlb
nop
movsb
repz
and
std
mov
ret
pop
pop
aad
pop
stos
lods
movsb
inc
jmp
mov
sub
cs
pusha
pop
adc
xchg
inc
and
jne
mov
add
sub
loopne
jg
repz
dec
pop
dec
xchg
pop
inc
fsubr
dec
aam
mov
pop
mov
and
adcb
xor
mov
or
push
mov
sbb
sbb
fsubr
and
dec
jnp
mov
in
stc
push
push
jg
mov
call
repz
loop
sahf
adc
and
test
rol
dec
lahf
add
test
cs
push
call
sub
movsb
xorl
vphsubwd
cmpl
das
and
sub
fistl
pop
sub
or
cmpsb
mov
je
dec
jmp
imul
dec
ja
outsl
and
lods
loop
mov
in
mov
adc
dec
sbb
jbe
add
loop
dec
and
cmp
es
pop
push
push
add
leave
xchg
sub
inc
xor
outsb
jl
leave
lahf
xchg
jp
jecxz
insb
aaa
ret
push
outsl
mov
sub
lods
sbb
xchg
in
dec
mov
fs
sub
aas
leave
and
ss
add
insb
pop
cld
cmpsb
mov
je
dec
jb
or
xorb
inc
popa
or
popa
sarl
jg
inc
and
jne
out
lcall
add
push
inc
mov
jae
add
pusha
or
jmp
mov
pushf
shlb
xchg
mov
or
mov
xchg
cmp
sbb
and
cmc
pop
pop
lcall
sub
cmp
push
cmp
xor
xor
aas
negl
push
or
inc
xor
jl
adc
into
icebp
test
lock
cmp
loope
cltd
test
push
adc
dec
fldt
jmp
mov
mov
inc
dec
sar
sbb
lds
mov
add
adc
sbbl
xchg
mov
mov
stos
rolb
mov
orl
cmc
sar
ret
mov
mov
sbb
not
out
and
adc
cmp
push
dec
mov
adc
sarb
fs
lock
adc
push
test
add
mov
jae
dec
adcl
adc
je
pop
rcr
sbb
and
push
or
je
or
in
mov
test
data16
add
xchg
cmp
mov
or
push
jg
jmp
orb
and
cmp
lock
cmp
aad
aad
cld
mov
dec
adc
jno
and
sub
mov
jmp
mov
repnz
xchg
les
push
jle
mov
push
xorb
pop
cli
xchg
sub
stos
jle
mov
movsb
adc
push
or
dec
ss
mov
sbb
push
jmp
ret
cli
into
push
daa
and
enter
jmp
mov
jnp
test
jle
test
sbb
in
push
jnp
daa
je
pop
jge
ljmp
ljmp
dec
and
sub
cmp
mov
fistpl
popa
pop
cli
stc
or
jns
jne
cwtl
test
mov
lea
xchg
mov
mov
scas
and
stos
inc
mov
scas
inc
inc
adc
stos
adc
fs
mov
push
xchg
cmp
mov
or
xor
mov
xchg
iret
jno
cmpsb
nop
ret
jmp
jmp
and
cmp
xor
and
pop
cmc
sub
fcoml
mov
stos
pop
rcrb
rcrl
mov
or
imul
and
or
sahf
scas
mov
sub
and
push
adc
cmp
sub
inc
mov
mov
loope
push
shl
lcall
push
call
cmp
mov
sbb
pusha
lods
pop
mov
or
neg
enter
mov
lret
push
adc
pusha
jle
addr16
jle
fisttpl
call
xlat
push
xor
inc
mov
sbb
add
or
push
mov
enter
outsb
xchg
hlt
lods
sub
jecxz
shll
adc
test
push
std
mov
cmp
ret
mov
dec
in
mov
jg
sbb
aaa
pop
test
inc
dec
cmp
outsl
adc
and
add
repz
mov
test
insb
or
pop
mov
insb
repz
sbb
push
out
gs
adc
push
or
dec
shr
xor
test
ljmp
adc
pop
sbb
pop
adc
je
mov
push
jg
xor
test
cmp
ss
push
xchg
inc
je
xor
hlt
inc
push
popa
jne
cmc
or
add
add
push
push
sar
pop
xchg
out
adcb
jmp
xchg
cld
cmp
dec
sbb
repnz
les
adc
dec
sbb
mov
cmp
les
and
cld
hlt
ja
sbb
mov
mov
inc
ret
hlt
pop
in
stos
icebp
cmpsl
je
clc
out
leave
sbb
dec
mov
imull
pop
push
int3
jbe
je
decl
hlt
mulb
es
pop
xchg
xor
mov
mov
mov
call
xchg
lret
push
loopne
jne
mov
add
icebp
mov
inc
mov
lahf
rolb
mov
insb
flds
popa
sub
or
mov
inc
jb
xchg
inc
sbb
ds
repnz
enter
jno
fs
adc
or
or
shrl
pop
sub
and
mov
dec
sbb
mov
daa
ret
shrl
or
dec
add
mov
in
or
and
ds
fcompl
test
add
je
shrl
stc
adc
or
inc
test
cmp
mov
mov
mov
and
ret
mov
and
pop
inc
xchg
in
fldl
xor
cmp
in
js
leave
jns
rcll
popa
sub
add
push
jb
pop
sarb
icebp
pop
iret
xor
adc
dec
xchg
es
jns
leave
or
icebp
add
push
push
sub
sbb
inc
dec
sub
dec
lock
push
mov
cmpsb
fists
ret
jg
mov
xor
mov
adc
and
push
cmp
test
dec
add
or
leave
xor
gs
dec
jno
push
push
cmp
enter
dec
test
aam
mov
ja
or
sub
inc
xorl
arpl
shrb
add
call
add
inc
adc
or
mov
xor
fdivs
int3
inc
xor
sub
dec
sbbb
test
inc
movsb
into
cmp
add
xor
jl
cld
jle
and
xlat
test
inc
ljmp
cmpsl
dec
pop
les
jmp
aam
call
ret
push
shlb
xor
dec
push
adc
loope
mov
mov
movsl
jg
dec
fisubrl
nop
sub
clc
jae
stos
adc
xchg
dec
cmovs
imul
pop
cmc
fidivrl
aam
das
cli
sub
adc
sbb
lret
in
jmp
push
fs
push
adc
shlb
jb
xchg
enter
cwtl
test
pop
jmp
mov
lea
fldt
sub
out
dec
cmp
dec
push
and
xchg
inc
mov
inc
sbbb
jmp
call
jae
pop
pushf
sbb
xchg
sbb
xor
push
jp
icebp
aaa
and
push
adc
lods
inc
push
or
jo
push
divl
add
cmp
aaa
xchg
add
dec
test
mov
mov
cmp
movsl
push
movsb
jmp
out
cltd
out
mov
cmovno
or
jmp
loope
je
into
fs
inc
pop
aam
movsb
lcall
leave
ss
dec
or
and
adc
pop
add
mov
mov
fs
or
mov
sub
cli
and
cmp
test
push
cmc
sti
and
inc
mov
and
xor
hlt
xor
hlt
or
aam
movsl
xchg
xchg
push
pop
sub
mov
or
jge
daa
call
pop
aad
mov
ret
lahf
xchg
jbe
jae
stc
cwtl
mov
add
adc
mov
pop
push
adc
aaa
pop
mov
leave
and
push
pop
loope
cmp
xor
icebp
push
pop
jo
insb
into
jbe
shlb
add
movsb
stos
sbb
cmpl
repnz
daa
jne
cli
xor
pushl
aaa
mov
aad
adc
dec
and
scas
fsubl
mov
and
xor
arpl
fcmovu
dec
in
test
cwtl
mov
das
jle
in
fucomip
push
adcb
rcl
pop
add
pop
sub
daa
icebp
stos
pushf
sbbl
call
gs
int3
pop
fstps
sarl
mov
jns
stc
fistps
jae
mov
push
dec
stos
adc
int
jl
adc
cmp
bswap
or
std
sbb
cmp
push
jmp
adc
push
dec
notl
pop
cmp
addr16
data16
xchg
and
es
inc
xor
adc
shl
gs
lock
or
ss
stos
add
sbb
jge
popa
leave
rclb
jae
call
cmp
push
inc
test
and
push
lock
xor
mov
fstl
mov
push
mov
add
or
dec
testb
jne
movzwl
xchg
sub
push
pop
ja
mov
push
movsb
dec
dec
test
shrb
aam
jge
out
xor
sbb
mov
imul
mov
jg
mov
xor
shll
jo
dec
mov
mov
mov
mov
cmpsl
dec
dec
mov
mov
mov
mov
xchg
sub
fsubrs
stos
nop
mov
mov
add
pop
add
mov
sbb
nop
xor
mov
mov
mov
mov
hlt
lock
mov
or
lock
test
and
shrb
xchg
push
mov
daa
adc
leave
movsl
add
adc
push
mov
rol
or
sub
inc
outsb
cmpl
xchg
jge
sub
call
dec
ret
push
scas
in
inc
inc
ljmp
push
dec
push
jmp
lretw
test
daa
test
dec
dec
lock
imul
call
pushf
insb
cs
push
les
call
outsl
push
imulb
dec
pop
xor
and
xorb
test
add
mov
or
inc
mov
jmp
jle
pop
mov
sub
ja
sub
rol
lea
xchg
cld
push
push
mov
fs
mov
popf
daa
lea
sbb
push
movsl
mov
mov
lea
pop
sub
sbb
xchg
fs
call
jmp
js
push
pop
or
adc
mov
mov
orb
adc
lea
sub
xchg
pushf
inc
push
orl
inc
push
inc
into
mov
shr
add
out
ljmp
cwtl
xchg
adc
lea
orb
dec
incb
fdivr
xor
push
cmp
mov
xor
xchg
or
push
scas
aaa
inc
mov
and
jmp
scas
sub
inc
push
cmp
rcr
mov
test
cli
pop
dec
cmc
out
push
or
pop
nop
sarl
mov
jp
xor
sbb
and
xor
xchg
sbb
rcrl
jno
mov
push
scas
mov
sub
cmp
push
cmpsl
adc
mov
sbb
lcall
cmp
sub
inc
pushf
cmp
mov
leave
movsb
cmp
add
shlb
sbb
hlt
and
pop
mov
jnp
cmpsb
divb
test
mov
sub
xchg
push
out
and
mov
test
movsb
in
sbb
or
mov
dec
jo
jo
add
stos
mov
stos
fistpll
mov
mov
xchg
sti
adc
pop
sub
and
jmp
out
mov
cmpb
je
sub
orl
shrb
pop
or
hlt
mov
sarl
push
cmp
xor
jne
mov
push
inc
mov
fsubrl
jge
lods
fstpt
scas
add
andb
test
shll
or
cs
add
pop
sti
ret
add
mov
jg
xchg
sbb
jnp
and
dec
fldl
sub
cmp
insb
xchg
mov
lea
add
xorl
inc
mov
loop
add
jle
imul
mov
cmc
sbb
aas
add
mov
movsb
test
call
sbb
xchg
pusha
aad
inc
adc
or
dec
mov
xchg
sbbb
add
mov
sub
mov
sbb
dec
popa
or
aas
cmp
dec
imul
jg
push
mov
jg
int
js
cmp
and
and
loope
cs
sub
mov
loope
insb
in
inc
popa
adc
cmpb
cli
sub
lods
jl
push
push
push
push
xlat
mov
adc
dec
and
cld
mov
mov
test
xorb
in
cmp
sarb
push
lret
rorb
dec
adc
sbb
sarl
je
dec
pop
sahf
rol
adc
add
cmp
add
call
ret
inc
cmp
sbb
ds
push
add
mov
inc
fisubrl
lret
mov
dec
adc
cmp
mov
jecxz
stc
pop
adc
call
add
arpl
fcomi
pop
cmp
lea
pop
and
stc
ffreep
jo
test
data16
je
pop
in
cmp
cmp
add
lods
and
sbb
xchg
loop
push
inc
daa
shll
sbb
pop
sub
or
jne
push
aaa
addl
shr
mov
pop
in
cmp
xor
jmp
mov
and
fcmovbe
out
lcall
adc
stc
sbb
or
lea
add
xchg
or
xchg
imul
mov
into
icebp
cwtl
mov
or
push
cmp
pop
inc
add
adc
sub
adc
into
mov
cmp
rclb
or
inc
pusha
cmpsb
adc
cmp
je
es
enter
xor
mov
stos
lea
jns
cmp
xor
pop
shll
sar
insl
dec
mov
jp
mov
jae
cmp
repnz
push
dec
sub
je
test
fcmovnb
outsl
jecxz
adc
cmp
cmp
sub
adc
pop
add
pop
jne
lock
sbb
cmp
push
cs
cmp
inc
sahf
aas
and
or
lcall
out
das
and
test
xchg
outsl
and
testl
cmp
rol
push
loopw
or
aaa
dec
orl
xchg
test
daa
or
xor
sub
mov
leave
sub
jmp
inc
or
push
pop
call
jp
aad
scas
popa
cmp
loop
xchg
daa
sub
arpl
mov
push
cmpl
notl
loope
dec
lret
push
je
leave
dec
repnz
adc
mov
jmp
call
das
out
mov
mov
or
adc
jge
inc
sub
sbb
push
call
insb
cmp
gs
and
push
insb
and
jl
inc
inc
nop
inc
or
adc
and
dec
lret
lea
jbe
mov
sar
movsb
lret
add
push
sub
in
das
flds
stc
cmc
and
lock
les
arpl
rcl
cltd
adc
jmp
sub
sub
mov
mov
push
test
cltd
push
adc
xchg
sbb
hlt
mov
cli
lret
sbb
adc
pop
sub
addr16
aad
ljmp
into
dec
sbb
jl
mov
adc
nop
lods
xchg
popw
pop
inc
mov
call
pop
fs
mov
cmpsl
dec
or
pop
push
cmpsl
inc
lret
pop
pop
or
imul
nop
movsl
addr16
cmp
scas
pop
fsub
sub
lcall
test
push
mov
dec
mov
add
pop
mov
mov
and
and
and
mov
mov
test
xor
enter
xchg
sbb
popa
std
mov
push
orl
add
sub
adc
xchg
push
mov
std
cli
or
hlt
into
ljmp
mov
xchg
sti
lods
cld
dec
inc
or
hlt
test
inc
push
out
cmp
push
xchg
mov
adc
aaa
nop
or
out
loopne
dec
aaa
subb
stc
or
and
or
xchg
sub
lcall
xchg
jne
jns
mov
movsb
ds
and
jge
scas
lods
inc
push
sti
std
sub
imul
adc
dec
pop
ret
pop
shl
adc
idivl
inc
pop
aaa
pop
or
ljmp
mov
or
adc
dec
cld
cmp
push
ret
pop
adc
adc
dec
sarl
sarb
xchg
and
lock
mov
cs
jne
notb
xchg
ja
ret
inc
mov
push
adc
mov
pop
mov
sub
pop
or
pop
pop
or
xchg
jg
mov
sub
mov
nop
out
out
xor
clc
mov
andb
push
xchg
or
or
cmc
inc
push
push
mov
je
push
xchg
adc
pop
xor
cmp
mov
adc
and
and
and
and
xchg
sub
lea
jge
add
push
sub
sub
pop
test
adc
mov
testb
mov
xor
fstl
sub
jae
push
adc
adc
mov
adc
or
jne
gs
sbb
in
and
dec
sub
lock
inc
xor
adc
aaa
push
add
mov
mov
orb
loop
sbb
pop
lock
cwtl
jmp
cltd
xchg
xor
andb
cld
inc
dec
fcompl
mov
mov
test
jmp
sub
or
sub
inc
xchg
inc
add
jmp
mov
xor
add
xor
cli
ret
je
rclb
push
dec
dec
sub
push
sbb
pop
inc
xchg
xchg
mov
and
and
jge
mov
cltd
cwtl
and
sub
lret
or
or
icebp
aam
xchg
mov
cmpsl
nop
js
sub
movl
push
loopne
sub
fs
adc
push
or
lret
gs
cmp
push
mov
or
jmp
xor
inc
push
push
cmpl
cmp
cmp
sbb
or
call
daa
sbb
sarl
out
adc
sbb
push
pop
pop
dec
and
sub
neg
sbb
dec
test
pop
jmp
push
pop
pop
frstor
iret
mov
push
push
cmp
push
mov
repz
jb
icebp
outsl
mov
jmp
testb
mov
cmpps
push
lea
jbe
imul
mov
clc
add
ret
jg
jge
pusha
mov
lahf
xchg
mov
sub
sub
pusha
rorl
rolb
xor
sub
pop
mov
xchg
in
test
xchg
mov
ret
adc
popa
popf
insb
aas
pop
clc
mov
into
fsubrl
push
gs
push
in
jb
mov
das
cmp
inc
das
mov
iret
and
int3
or
test
inc
ja
in
decl
pop
lahf
cmp
pop
and
and
dec
jg
mov
cs
and
push
inc
lock
loop
sbb
clc
cld
sub
add
in
neg
sbb
pop
xchg
roll
sub
mov
inc
rclb
mov
aam
pop
cmp
or
push
sub
loopne
sbb
push
bswap
push
sub
xchg
push
adc
ss
unpckhps
inc
push
lock
inc
je
sbb
push
call
aad
sarl
aas
mov
loopne
push
sub
lds
out
lea
sarb
sbb
adc
js
imul
cs
test
aam
sbb
sub
or
add
push
sbb
cmp
lahf
ret
mov
xor
mov
mov
inc
hlt
aam
add
inc
xor
lods
cmpsl
and
mov
push
aas
pop
mov
adc
pop
fwait
mov
sar
sub
in
xchg
loopne
into
add
push
sub
or
adc
test
repz
xchg
adc
inc
lea
out
stc
movsb
cmc
repnz
mov
add
inc
cmp
cs
jne
mov
repz
xchg
or
orl
mov
es
daa
pushf
and
sbb
sti
dec
movsb
adc
jmp
push
ficoms
movsl
jnp
cmpsl
or
pushl
nop
xor
addl
cmp
adc
adc
fwait
movsl
jne
or
nop
sbb
dec
fs
and
aam
bound
and
adc
mov
movsl
mov
dec
jmp
or
sbb
pop
int3
idivl
mov
or
jb
adcl
les
add
hlt
ja
lcall
popf
insb
add
imul
adc
add
jmp
mov
dec
dec
mov
dec
gs
or
push
or
xor
push
or
xchg
stos
adc
enter
test
adc
jno
jmp
cmpsb
inc
mov
cltd
pop
inc
cli
mov
xchg
aas
loop
add
jno
imul
sub
pusha
and
xor
add
repnz
pushf
mov
repz
ljmp
xchg
pop
lods
popf
pushl
mov
sbb
enter
sbb
roll
or
rol
nop
stos
mov
sti
add
ja
daa
xor
or
add
gs
mov
push
add
and
movl
sbbl
adc
or
test
xor
sar
in
push
lret
or
push
or
xor
xchg
inc
xor
dec
dec
add
es
dec
cld
sbb
xrelease
mov
xchg
xchg
mov
mov
jge
pop
sub
sub
or
inc
fdivrs
inc
xchg
mov
dec
or
xabort
sub
imul
dec
mov
divl
push
and
das
cmp
cwtl
popa
sti
inc
lock
cmp
and
es
jae
fcmovb
imul
out
sbb
imul
fisubrl
in
adc
fnstenv
push
mov
or
mov
divb
in
aad
mov
in
pop
inc
jecxz
or
out
push
push
pop
mov
push
decb
out
or
mov
scas
mov
cli
mov
adc
insb
xor
sbb
fwait
sub
push
adc
jle
lods
fs
mov
cltd
xor
jmp
mov
mov
cmp
adc
jecxz
imul
pop
stos
clc
or
pop
lods
lock
mov
in
or
je
push
stos
sahf
push
adc
dec
pop
xchg
sub
lods
movb
repnz
loopne
xchg
push
movl
inc
loopne
pop
mov
push
adc
gs
fcoml
jmp
and
pop
mov
dec
mulb
sub
jnp
andb
pop
jo
cmpsl
jecxz
lds
mov
lea
add
sbb
imul
jmp
sbb
cmpw
xor
or
adc
lods
xchg
movsl
cmp
lea
add
push
sbb
iret
cmp
icebp
pop
jae
sub
sbb
push
sub
pusha
sbb
divl
mov
inc
scas
fs
mulb
jb
cmp
push
sub
ret
add
sti
cmp
jae
and
push
outsb
divps
out
add
sub
or
mov
mov
mov
jno
mov
pop
mov
lcall
imul
shrb
sti
push
push
fs
test
insb
cmp
push
xchg
pop
sub
loopne
cmp
mov
xchg
pop
mov
xor
xchg
or
inc
or
jbe
dec
and
int3
sbb
and
add
push
pop
ljmp
fmull
add
jb
fs
jle
das
sub
shl
and
leave
mov
or
in
rorl
add
stos
leave
lret
js
out
stos
leave
inc
adc
dec
inc
adc
jl
cmp
mov
cmp
popf
jle
jne
push
xchg
ss
movsb
insb
sub
fs
push
sti
mov
mov
or
in
icebp
lds
jmp
inc
xchg
and
out
push
push
add
add
ljmp
mov
mov
xlat
loope
sub
testb
or
jne
sub
sbb
mov
sbb
push
mov
add
pop
sar
out
cmp
sbb
ds
rclb
movsl
dec
xchg
cmp
cmpsb
mov
cs
mov
mov
dec
movsl
ret
or
enter
dec
jns
push
adc
shll
jne
daa
lea
sub
pop
mov
aad
push
or
xchg
add
pop
add
daa
adc
sbb
cmp
lahf
and
and
inc
dec
pop
push
inc
push
inc
jo
push
sub
leave
or
adc
and
dec
add
inc
inc
jle
adc
mov
sbb
dec
sbb
pop
cmp
dec
xor
cmpsb
or
mov
jo
push
pusha
sub
xchg
jo
fsubrl
and
test
cmp
pusha
inc
dec
jae
inc
adc
dec
dec
jb
inc
and
inc
insl
mov
outsb
xchg
xor
xor
movsb
pop
aam
pop
lcall
push
pop
dec
adc
xchg
adc
mov
add
pusha
call
xchg
mov
jno
das
sarl
or
mov
adc
push
in
movsbl
adc
sub
or
lods
repnz
mov
mov
xchg
mov
or
mov
add
inc
xor
lock
into
mov
xchg
rclb
push
mov
and
cs
stc
cmp
insl
cmp
and
xor
xchg
dec
and
dec
push
or
movsb
loope
push
or
stc
cmp
pop
repnz
push
and
mov
adc
aam
adc
jmp
xchg
std
or
out
mov
xor
loope
test
jmp
pop
lret
jp
xchg
add
cmp
adc
hlt
in
pop
adc
cmp
shr
inc
adc
or
shlb
test
sub
hlt
mov
clc
insl
pop
push
or
and
repnz
sbb
out
push
subl
xor
or
xor
lahf
pop
jne
dec
stos
aaa
das
pop
push
es
cli
inc
int
inc
flds
popf
shll
sbb
xor
jmp
fstpt
inc
cmp
sbb
scas
emms
adc
push
repnz
adc
stc
test
jne
stc
mov
int3
dec
jb
incl
jbe
push
sub
jns
ja
mov
inc
adc
xor
mov
mov
mov
inc
pushf
test
rcrb
ficomps
shr
repz
sub
xchg
inc
mov
jg
inc
adc
or
cmpsb
pop
ss
mov
adc
mov
shlb
mov
and
or
je
fnstenv
pop
and
in
jb
xor
or
data16
push
cli
jae
sbb
xor
and
pop
pop
add
push
pop
sbb
push
pop
cmp
rclb
or
fistps
push
push
sarl
sub
aaa
jb
push
call
dec
ret
std
insl
into
gs
and
push
loope
repz
fstl
bnd
push
xchg
shrl
pop
decl
xchg
push
mul
or
dec
imul
push
fdivr
sbb
jno
push
xchg
cmp
add
mov
jb
adc
aas
dec
lret
xchg
aaa
jne
and
enter
mov
cli
or
add
push
add
xchg
or
jmp
imul
or
lret
aaa
and
mov
or
sub
push
aam
ret
xchg
cmovs
cltd
sub
or
mov
xor
pushf
jbe
fcompl
xor
xchg
sbb
das
push
aas
xchg
fnsave
js
and
jp
push
int3
sbb
jle
aam
mov
cli
xchg
pop
push
pop
mov
sbb
add
xchg
adc
jns
imul
inc
or
sub
xor
mov
je
pop
lret
sbb
lds
pushf
jns
add
nop
adc
mov
add
and
push
adc
lret
sub
adc
lods
subb
cs
mov
pop
adc
push
and
imul
popa
in
adc
push
push
cmp
jne
pop
jecxz
mov
out
push
call
lret
loop
inc
add
fcoms
ja
inc
and
add
cli
fstl
scas
int
inc
add
and
out
push
jmp
sbb
les
clc
std
xchg
or
push
addl
bound
mov
jne
nop
sbb
and
adc
add
mov
ret
int3
ret
xchg
imul
rcll
call
mov
in
cmp
rcr
movsl
adc
andb
jg
adc
cmp
mov
lahf
pop
pop
mov
sbb
sbb
ja
ja
jge
sbb
cmpsl
outsb
lock
imul
or
add
fs
decl
scas
aas
push
jecxz
popa
adc
in
mov
pusha
mov
jle
dec
pop
jbe
scas
aas
xchg
or
mov
cmp
sub
sarl
adc
data16
add
scas
loope
xor
call
into
in
push
mov
jecxz
adc
clc
mov
movsb
mov
jne
xchg
inc
or
push
mov
stc
nop
out
sub
adc
mov
adc
mov
push
pushf
andb
aaa
mov
insb
test
leave
or
pop
add
cs
dec
mov
call
stos
les
cli
and
or
dec
clc
cmp
movsl
fisubrs
leave
cmp
push
mov
push
or
add
jl
push
push
cld
push
lods
add
push
sub
adc
fs
pushl
cli
fsubrs
mov
and
inc
outsb
xor
cmp
xor
jg
test
pop
mov
rcrl
dec
mov
and
dec
sahf
rolb
sub
call
fldenv
or
mov
stos
mov
ljmp
popa
movl
inc
dec
cmp
data16
jbe
mov
push
inc
inc
xor
sbb
mov
cmp
out
cmp
add
mov
add
mov
cwtl
cmp
jecxz
mov
ret
je
das
enter
lock
test
scas
jne
push
mov
test
xchg
add
or
mov
jns
push
lea
and
push
int3
adc
mov
lret
xor
mov
repz
fcoml
loopne
jno
sbb
lds
cmp
mov
cs
sub
je
ljmp
xchg
cld
push
in
xchg
push
push
xchg
lea
test
je
xchg
sub
pop
adc
icebp
loope
cmp
add
sub
dec
dec
sub
cmp
nop
adc
stc
and
mov
xor
pusha
sub
mov
cmp
andb
jl
sub
sti
push
mov
ss
inc
adc
mov
xlat
mov
xchg
or
add
fadd
loop
test
leave
lea
jbe
fstpt
or
out
adcw
mov
add
adc
mov
sbb
testb
xchg
mov
aas
ss
movsl
add
cld
dec
dec
in
mov
pusha
inc
stc
out
push
mov
mov
inc
pushl
cmp
test
stos
mulb
add
mov
cmp
dec
roll
ljmp
dec
jecxz
es
aas
adc
sbb
mov
popf
pop
scas
popl
rcll
xchg
test
lea
cwtl
pop
les
jg
loopne
mov
mov
xor
dec
insl
scas
or
dec
clc
sbb
cmp
xor
mov
loopne
mov
add
dec
movsb
sub
mov
test
les
add
mov
leave
fsts
dec
pop
mov
pop
js
xchg
jl
mov
inc
sar
jg
dec
popa
dec
andb
pushl
pusha
ret
xchg
pop
jmp
dec
movl
adc
jmp
aam
dec
mov
fdiv
xor
jne
dec
shlb
stos
push
jmp
mov
lahf
pop
adc
and
add
cmp
mov
mov
sbb
loopne
cmp
sbb
add
in
sub
dec
sahf
jp
pop
jmp
xchg
xor
mov
mov
adc
xlat
shr
push
jg
jmp
out
or
pop
test
lret
sub
cld
dec
jo
pop
jbe
int
xchg
adc
xchg
add
and
aaa
aam
or
add
arpl
jg
push
sub
push
ja
push
popa
mov
int
stc
mov
dec
loopne
push
cs
xor
rcll
inc
test
mov
subb
lods
jo
fwait
arpl
cld
call
dec
les
add
ret
jle
add
shrl
jecxz
xor
push
push
cmp
je
jecxz
imul
sbb
adc
test
mov
push
call
pop
lock
xorb
pop
jmp
leave
iret
movb
sbb
lea
fdivl
and
sub
in
push
or
cmpl
andb
add
xchg
push
mov
dec
cld
iret
xchg
jp
je
aaa
jbe
adc
test
add
sub
sbb
cmc
inc
add
sahf
push
xchg
adc
in
lock
push
sub
stos
cwtl
xor
bound
jb
data16
test
xlat
mov
and
sahf
not
shr
push
and
out
dec
jecxz
cld
inc
adc
jmp
dec
orl
and
jb
imul
jae
push
inc
outsb
lock
adc
sub
xlat
mov
jbe
xor
mov
mov
loop
dec
mov
imul
test
or
or
and
sarb
adc
cli
pop
mov
rolb
mov
enter
dec
and
outsb
mov
and
or
cmp
dec
push
or
mov
or
inc
add
es
push
sub
and
xlat
dec
mov
xchg
enter
stos
sahf
jge
imulb
in
cmp
dec
mov
mov
sahf
insb
aad
jbe
fld1
pop
cmp
lahf
daa
fldt
adc
icebp
or
ljmp
push
push
sti
arpl
adc
inc
leave
cmpsl
popf
cmpsl
xchg
push
jns
cmpsb
mov
push
sbb
mov
jne
loopne
shl
bound
inc
fstl
adc
push
push
mov
xchg
iret
sub
mov
sahf
sbb
rorl
jmp
repz
ret
jno
cmpsb
mov
mov
and
ljmp
mov
jne
push
mov
jp
inc
add
je
mov
push
ret
pop
fwait
adc
xchg
rcll
sti
repnz
lahf
jbe
push
pop
fs
sti
out
push
and
call
or
out
sbb
pop
setg
pop
dec
and
xchg
testl
mov
xchg
rclb
daa
inc
js
mov
in
call
push
js
dec
je
nop
push
pop
and
das
sbb
and
sub
inc
jmp
notb
call
cmp
es
pop
sub
inc
daa
push
sub
fsts
xor
lds
inc
and
cmp
sbb
inc
popf
cmp
cmp
cmp
cli
jne
xor
aas
ret
or
inc
sub
push
dec
mov
out
mov
sahf
sbb
int3
pop
inc
dec
dec
mov
rclb
sbb
push
push
fnstsw
sahf
imul
in
aaa
adc
test
push
and
push
push
or
sbb
and
pop
xchg
movsb
imul
ret
jae
pop
adc
sbb
jno
aas
clc
scas
rcll
and
sub
xchg
pusha
xorl
push
and
and
jecxz
leave
mov
sbb
adc
add
and
shl
shr
or
or
push
mov
in
je
push
cld
jp
aas
push
stc
popa
mov
ret
psubsw
and
ret
jno
nop
je
in
dec
and
push
jb
or
jbe
xor
push
les
xchg
repz
loopne
cmpl
es
mov
jle
xlat
push
mov
cmp
xlat
lods
arpl
xchg
ret
call
daa
adc
jbe
and
ds
push
and
lahf
xor
pop
xchg
push
jle
inc
ror
and
les
xor
cmp
jge
mov
push
adcl
ret
call
xorl
xchg
out
jmp
popf
das
movzbl
mov
cmpsb
pop
xchg
or
mov
insl
lcall
dec
pop
push
jl
popa
or
add
repnz
and
pop
jp
rcll
mov
inc
xor
cmc
dec
pushf
mov
das
pop
mov
jecxz
pop
mov
dec
add
pusha
xorps
into
xor
jmp
jge
pop
or
jmp
cmpl
lea
push
loopne
push
in
pop
mov
jmp
adc
ret
pop
push
and
imul
pop
fistpll
dec
jmp
cmp
mov
and
cmp
cmpsl
adc
cmp
inc
add
arpl
out
or
sub
je
adc
inc
sbbl
mov
jmp
add
inc
mov
out
insb
adc
xchg
int
loop
dec
out
and
cmp
shrb
mov
sub
or
rolb
and
lock
pop
add
mov
dec
lds
std
jne
and
dec
and
sbb
test
ret
or
and
shll
or
lret
and
xor
push
adc
mov
mov
dec
stos
sub
lahf
test
inc
or
dec
jl
mov
cltd
cmp
add
sub
dec
rolb
shl
ret
lods
repz
sbb
xchg
adc
sub
push
js
pop
out
adc
cmpsl
push
movsb
out
mov
dec
mov
daa
push
stc
inc
xorl
push
fucomp
dec
mov
aam
dec
jb
adc
cwtl
sub
xchg
leave
dec
add
add
jb
mov
mov
or
data16
iret
or
mov
test
push
mov
bound
jle
pop
ja
fcoms
dec
incb
sarl
roll
xchg
ds
mov
stos
mov
pushf
cli
or
jge
movsb
dec
add
adc
pop
adc
loope
aam
int
pusha
fistpl
and
ror
cmpb
adc
fs
dec
adc
xor
imul
sub
stos
push
add
xlat
jmp
enter
and
jge
sbbb
cmc
bswap
outsb
xchg
push
pop
adc
dec
shl
movl
in
stos
xor
mov
fiaddl
sub
sbb
mov
cmp
fdivp
jge
in
jo
xchg
adcb
dec
or
popf
cmpsb
stc
push
je
pop
inc
enter
jno
inc
dec
out
sub
push
or
push
fisttpll
push
subl
sub
mov
movsb
xor
lea
jle
call
pop
sub
cmp
nop
hlt
fsts
es
push
and
dec
popa
test
mov
sub
xor
mov
push
or
mov
call
push
in
fsts
push
and
pusha
push
test
push
adcl
mov
rcr
pop
pop
add
inc
adc
cmp
jmp
dec
mov
dec
mov
and
repz
jae
aam
in
dec
mov
mov
cmp
sti
and
add
and
push
dec
mov
pop
cmp
add
lds
push
imul
and
jmp
xchg
add
mov
in
mov
imul
sbb
adcb
stc
xor
adc
mov
lods
aas
and
adc
sbb
cmp
cmc
dec
or
push
daa
sub
cs
inc
add
mov
popa
and
xor
loope
add
and
add
nop
or
add
lea
sub
lret
imul
xlat
mov
je
scas
pusha
into
push
mov
xchg
mov
out
and
add
lea
xor
stos
sbb
or
ljmp
cs
mov
gs
flds
jl
adc
jmp
mov
nop
cmp
jecxz
mov
push
aam
arpl
jmp
out
pop
gs
dec
lods
ret
and
sub
sub
loope
sbb
pop
add
jp
hlt
pushf
mov
hlt
mov
xchg
dec
inc
mov
mov
or
xchg
movsl
inc
or
push
imul
push
add
add
call
call
lock
ds
lds
or
shll
inc
sub
mov
cmpl
xorb
int3
in
cs
out
pop
mov
scas
je
cmpb
jmp
adc
mov
inc
inc
lahf
lock
sub
lcall
push
je
test
mov
or
push
sub
imul
sarb
push
jmp
xchg
cmp
sbb
mov
jno
add
inc
jae
cmp
shlb
and
popa
and
cmc
movsl
pushl
rorl
test
call
jmp
int
jno
pop
xchg
and
fsubs
insb
adc
dec
mov
cmp
lock
inc
cmp
out
ja
outsl
shlb
push
popf
inc
mov
push
dec
fwait
or
lret
lods
sbb
inc
mov
push
out
and
enter
stc
mov
je
and
pop
pop
xchg
push
cmp
mov
cmp
jmp
xor
out
adc
jb
and
sar
jae
or
inc
mov
aas
push
ljmp
xchg
mov
call
in
pop
fimull
fxch
mov
cmp
mov
jmp
aaa
mov
adc
push
xchg
test
xchg
mov
push
inc
rcrl
sbb
shlb
jb
and
iret
lock
jae
or
lods
cmpsb
xor
lret
sub
xor
ficoms
add
inc
mov
mov
ret
iret
mov
mov
sbb
rol
or
mov
sub
fdivrs
sbb
or
sbb
adc
lea
mov
xor
push
test
rcrl
push
mov
and
fidivl
pop
fistl
jne
add
lret
test
dec
enter
dec
lea
lds
insb
arpl
jb
ja
dec
cli
repnz
daa
push
testb
rcl
sbb
and
pop
test
adc
and
pop
test
push
adc
mov
add
mov
pop
call
dec
fsubr
mov
jmp
cmp
rolb
xor
cli
daa
or
pop
iret
pop
aas
add
into
add
call
xor
aas
lods
add
xor
lea
jmp
xor
pop
cltd
rolb
out
push
cmp
fimull
dec
test
bound
hlt
jae
gs
mov
lods
xchg
pop
xor
cmpsl
cmp
xchg
xchg
nop
stos
mov
jg
sbb
adc
clc
lahf
add
pop
dec
fwait
push
sbb
inc
mov
daa
sbb
adc
cmc
adc
cmp
adc
clc
xchg
mov
inc
adc
sub
inc
jmp
mov
xchg
inc
xchg
icebp
or
ficomps
out
cwtl
call
nop
mov
push
movsb
lret
sbb
pop
cmpsl
clc
xchg
movsl
mov
and
push
jnp
ret
jl
and
push
mov
out
loop
jne
loopne
fwait
or
pop
pop
inc
or
mov
pop
pop
or
enter
pop
mov
add
fsts
pop
add
cmp
cmpsb
popf
sbb
shll
push
xchg
adc
int
mov
adc
sahf
dec
push
push
push
jecxz
arpl
popf
inc
repnz
mov
sbb
nop
stos
das
rep
ljmp
add
movsl
ret
shll
pop
or
ret
aad
mov
adc
mov
push
int3
out
xchg
inc
xchg
stc
adc
jp
adc
xor
std
lds
sbb
mov
mov
xchg
inc
add
imul
testl
push
inc
adc
lods
mov
mov
pop
in
jg
mov
xorb
jo
ss
andl
jl
std
sub
mov
adcb
fwait
xchg
int3
cli
jl
sbb
pop
pop
test
and
sub
fwait
pop
dec
lcall
loop
test
add
test
xchg
push
mov
cld
xor
imul
lock
fwait
xor
mov
sbb
daa
or
fwait
stc
adc
das
ret
push
add
xchg
dec
pop
sarl
stos
loope,pn
inc
psrld
clc
mov
lods
movsl
or
jo
ds
sbb
pop
scas
pop
pushf
rorb
cwtl
push
mov
cs
xor
ret
popa
xlat
push
jp
inc
imul
push
sbb
test
aas
cltd
sub
and
cmpsb
les
dec
inc
dec
and
popa
push
into
aad
test
idiv
push
sbb
cmp
mov
push
xor
insl
xchg
push
adc
or
lahf
pop
ret
loop
mov
cld
push
or
xchg
insb
loopne
shll
add
and
dec
and
cld
sbb
push
mov
adc
mov
xor
xlat
dec
cmpl
xchg
sahf
pop
cmp
into
jmp
sarl
xchg
testl
dec
cmp
push
xchg
xchg
leave
xchg
test
call
sub
and
push
ja
xor
mov
xorb
lods
test
mov
cmp
adc
les
xor
cmp
pop
jno
js
and
int3
add
das
nop
adc
and
jg
push
mov
mov
fdivrs
movsb
push
cmc
xchg
xor
decb
mov
lods
mov
repnz
sbb
repnz
enter
cmpb
and
mov
mov
sub
daa
clc
std
and
mov
es
adc
lret
clc
insl
push
mov
iret
sbb
add
outsb
in
daa
jne
push
pop
leave
xorl
dec
pop
mov
jbe
test
cmp
cmc
fidivl
call
notb
jmp
adc
ds
dec
jl
jl
xchg
stos
mov
xor
ret
pop
xchg
push
cmp
or
and
lcall
shll
add
cmp
je
sub
sub
adc
jne
bound
mov
shrb
enter
test
hlt
leave
iret
push
mov
or
inc
pop
out
push
sub
sub
mov
test
or
fnsave
not
in
or
adc
push
ja
xchg
scas
jne
xchg
lret
push
and
add
test
in
lods
inc
int
sbb
mov
push
fnstenv
inc
jg
dec
push
popf
or
sub
sub
jmp
cld
imul
xor
mov
icebp
mov
add
sub
dec
call
mov
sub
loope
xchg
mov
push
sub
pop
call
outsb
bound
call
test
mov
jp
in
andb
mov
mov
imul
roll
cmp
sub
xchg
movsb
push
mov
lcall
jne
popf
dec
out
test
out
sbb
jp
mov
orl
jne
dec
pop
sbbl
push
nop
dec
inc
adc
ja
es
xchg
jb
mov
inc
and
xchg
pop
sub
lea
cwtl
inc
push
scas
lret
andl
repz
dec
push
cmp
xor
aam
inc
enter
enter
repnz
mov
negb
jecxz
and
addb
jo
xor
pusha
fs
xor
or
add
or
shl
leave
mov
pop
les
and
enter
push
or
jg
xlat
push
cmp
das
push
jle
in
lea
notb
shrl
pop
mov
adc
mov
and
es
lahf
and
mov
mov
sbb
mov
add
inc
mov
pop
and
adc
mov
or
outsl
jp
andb
call
mov
in
xchg
or
and
push
mov
pop
xor
cmp
and
mov
inc
stc
mov
or
int
loop
push
jb
cltd
pcmpeqb
pop
inc
sub
sub
lock
sub
aas
xor
lret
lock
push
stos
or
pop
pop
cmp
add
push
pop
movsl
add
xchg
mov
hlt
mov
pop
xor
mov
adc
ljmp
es
xchg
or
jbe
scas
cmc
aas
xor
or
hlt
test
push
in
pop
imull
or
sbb
mov
jnp
clc
sub
fs
sbb
and
mov
push
jl
inc
movb
sahf
mov
mov
sbb
int3
pop
scas
add
mov
sti
enter
aaa
les
mov
push
repnz
sbb
mov
call
mov
or
push
addr16
adc
mov
jge
push
int
push
test
jo
or
ds
pop
filds
movsb
adc
out
daa
ficoml
pop
jmp
xchg
mov
les
mov
mov
and
je
or
jp
mov
jg
bound
mov
pop
push
mov
es
outsl
or
inc
test
call
sarl
loop
adc
dec
mov
mov
adc
jecxz
lahf
lea
mov
movsl
add
call
add
xor
call
adc
shll
outsb
inc
pop
subw
xchg
dec
push
xchg
ljmp
inc
xchg
cmp
add
push
out
mov
gs
mov
pop
cld
adc
lods
ror
hlt
jge
xchg
inc
lock
xor
or
pop
mov
outsb
inc
dec
cmp
je
sbb
mov
sarb
sub
push
popf
rclb
push
sub
sbbl
dec
pop
mov
sbb
pop
pop
mov
fdivrl
shll
dec
and
add
adc
push
loopne
sar
aaa
cld
and
add
adc
js
lahf
icebp
or
mov
push
sub
inc
sti
dec
ljmp
mov
xchg
and
lcall
movl
imul
mov
pop
movswl
push
test
js
xchg
mov
pop
sub
dec
bound
movsl
jae
add
mov
pop
jmp
jne
sysret
enter
in
daa
pop
pusha
add
push
ljmp
jb
fs
dec
jne
sub
sub
cmpsl
or
pop
or
fcoml
push
push
xor
adc
test
fdivrs
sbb
push
xor
inc
sub
jmp
add
insl
sbb
and
fidivrl
jp
aad
xchg
add
cs
mov
into
bound
hlt
pop
test
adc
mov
sbb
and
dec
mov
xchg
movsl
rorb
clc
dec
and
inc
andb
push
je
popf
push
adc
push
cmpsl
nop
je
push
nop
jge
inc
xchg
add
or
push
lods
dec
out
insl
sub
shlb
add
shr
shl
add
push
inc
test
and
mov
pop
xchg
sub
pop
fisttpl
data16
adc
mov
pop
in
mov
or
mov
outsb
cli
shl
lea
jbe
xor
test
lret
das
js
pusha
inc
hlt
jle
jb
push
pushl
fwait
push
xchg
jo
inc
pop
dec
loope
jae
push
call
jmp
jne
divb
das
repnz
push
adcl
rorb
aas
movsb
and
pop
cmp
int3
or
ret
repnz
and
jle
cmp
icebp
jne
fwait
pusha
cmpsb
shr
jge
iret
das
clc
sti
inc
dec
cs
leave
cltd
shlb
jp
lock
in
popa
sbb
mov
cmp
pop
adc
adc
jg
iret
mov
xchg
fstl
hlt
push
ret
lcall
mov
out
pop
mov
fisubl
notb
dec
and
mov
mov
push
xchg
cmp
xchg
pop
sub
mov
xchg
jns
add
cmpsb
fwait
mov
push
pop
push
add
and
xlat
in
push
call
stc
fwait
dec
popa
fisttpl
and
push
pop
in
int3
inc
in
jle
ja
mov
call
jl
addr16
add
cwtl
mov
lock
add
sub
arpl
sbb
cmp
and
push
or
cmp
push
mov
cmp
jmp
and
pop
jns
sbb
stos
or
fildl
cmc
mov
inc
test
sbb
cltd
mov
ror
push
or
sbb
or
ret
pop
mov
rep
push
or
dec
aas
push
add
shll
dec
dec
push
loop
push
jl
mov
adc
jbe
cmp
mov
mov
stos
sub
push
lahf
pop
cltd
mov
inc
jecxz
mov
inc
in
pop
cwtl
mov
cmp
out
sbb
fisubs
and
pop
push
js
sbb
pop
and
pop
repnz
lahf
jo
repz
sub
aam
call
sub
jno
cmp
std
hlt
rclb
mov
cltd
push
sbb
pop
fisubrs
pop
cltd
fists
mov
or
stc
loopne
enter
sbbl
adc
mov
inc
mov
dec
popa
les
adc
jnp
jo
pop
jmp
sub
sub
loope
adc
xchg
testl
je
ret
jl
pop
dec
mov
in
enter
sbb
push
call
and
ss
stos
adc
xchg
ret
xchg
adc
and
out
enter
jno
push
pop
xor
test
jns
imul
call
sbb
mov
movsb
cli
lods
mov
popa
add
aad
mov
mov
cltd
push
push
adcb
cmc
out
cmp
sub
mov
hlt
lahf
pop
nop
es
clc
push
enter
nop
push
mov
loopne
cli
sbb
mov
or
or
xor
mov
testb
sub
and
sbb
jl
sub
inc
and
mov
jbe
adc
imul
or
clc
or
stos
fldl
into
ds
je
mov
inc
pop
mov
pop
xchg
and
cmpsb
inc
scas
inc
push
movsb
lgs
rorb
inc
pop
and
out
dec
pop
push
popfw
cltd
pop
pop
cli
dec
cmp
bound
and
inc
xor
daa
arpl
mov
cmp
out
call
mov
and
and
cmp
mov
adc
push
scas
int
push
call
mov
xchg
and
ljmp
test
xchg
ret
movsl
sahf
rcr
fldt
in
xchg
stos
outsb
push
add
lods
or
push
push
mov
es
jl
mov
lock
push
or
mov
push
jno
out
cli
fcmovu
pop
adcl
dec
xchg
cmpl
add
cmp
mov
and
sub
dec
mov
jg
mov
fcoml
imul
lods
or
jmp
fstl
cltd
jne
pop
jno
xor
hlt
xchg
or
popa
sub
and
push
test
cwtl
pop
clc
xchg
mov
push
jmp
cmpsl
movsl
test
inc
sti
incl
xchg
jns
cmp
add
push
xor
push
fdivs
fstps
stos
jo
sti
jmp
sbb
insb
jecxz
inc
fnstcw
adc
adc
sbb
push
dec
sbb
sub
pop
sub
clc
and
movsl
xchg
adc
fcoms
cmpsl
adc
sarl
and
or
and
in
and
pop
inc
sub
or
cld
sub
pop
lret
jg
in
clc
sbb
jp
dec
or
push
push
push
push
fcoml
inc
adc
push
jle
mov
push
test
adc
jo
adc
adc
lods
adc
sbb
mov
fistpll
dec
add
pop
inc
mov
insb
cmp
cmp
xor
sub
and
sbb
push
add
shll
or
out
or
inc
bound
test
mov
rorl
or
mov
jl
dec
xor
adc
ret
aas
mov
mov
inc
imull
lods
aam
sub
incl
pushf
adc
test
jl
mov
je
adc
pop
neg
and
push
cli
js
in
mov
push
adc
call
mov
mov
dec
mov
xor
xchg
jb
xchg
hlt
out
sub
xor
add
sub
stos
mov
adc
mov
dec
xchg
das
sbb
sbb
fimull
data16
push
push
mov
es
aam
pop
adc
cltd
push
das
lds
les
in
sbb
mov
xor
jmp
mov
or
adc
add
push
mov
mov
push
mov
hlt
je
lret
pop
cmp
jnp
cmp
jnp
movsl
shrl
clc
push
repz
mov
and
or
push
test
imul
push
adc
das
mov
push
repz
cmp
lahf
idivb
adc
jmp
push
mov
pcmpeqw
dec
xor
adc
inc
add
push
inc
dec
push
dec
js
int
and
jnp
test
push
push
insl
lret
xor
and
fldenv
xchg
aam
lahf
pusha
inc
adc
sub
cmp
inc
cmc
popa
cmp
push
or
cmpb
mov
mov
shr
jmp
pop
and
call
sbb
je
mov
outsl
jecxz
or
movsl
mov
pop
and
dec
adc
push
pusha
into
fmul
push
hlt
adc
and
inc
call
dec
fcom
lock
dec
xlat
jecxz
pop
mov
sub
ja
jle
cwtl
mov
push
test
pop
stos
and
mov
push
push
call
add
pop
daa
fs
es
xor
sbb
adc
push
dec
insl
cmpsb
and
in
adc
mov
mov
sbbb
mov
fcoms
sbb
lahf
stos
mov
mov
push
out
shll
jne
mov
aam
aad
or
jbe
mov
scas
rorb
iret
iret
lret
scas
pop
test
or
xorb
in
push
out
dec
dec
aas
push
stos
mov
das
loope
dec
lret
sbb
dec
repnz
push
lcall
push
subb
cmp
rcrb
or
push
lock
vcvtpd2psx
sub
call
sbb
sub
test
setno
adc
inc
out
xchg
and
sbb
lods
jns
sub
mov
xchg
sahf
loopne
sub
fmuls
iret
std
mov
call
test
add
stos
jmp
cltd
xor
pop
pushl
add
cmp
adc
rcll
mov
out
push
cltd
adc
and
sub
add
enter
inc
ss
adc
inc
and
iret
aaa
ds
mov
mov
add
fs
adc
orb
pop
cmp
mov
mov
pop
push
mov
jne
mov
imul
outsl
push
mov
pop
cmp
sub
nop
mov
or
inc
or
jnp
jne
xlat
add
cmpb
dec
xlat
sbb
ret
aam
lods
jg
cmp
push
dec
stos
dec
pop
mov
es
pop
and
sbb
test
rorb
and
mov
push
cmp
out
push
jecxz
out
dec
sbb
int3
out
push
mov
push
es
push
mov
cli
fstpl
iret
inc
and
popf
xchg
lea
pop
insb
xchg
xchg
int
fmuls
pop
sbb
fimuls
xchg
mov
mov
pop
mov
mov
imul
and
xchg
call
nop
and
into
xchg
fwait
adc
std
xchg
fldl
or
jo
adc
negb
pop
push
or
roll
and
lret
dec
addr16
decb
pop
sbb
or
jg
flds
mov
pop
aam
or
mov
adc
aaa
fadd
es
mov
nop
cmp
les
sub
int3
and
loopne
jmp
sub
mov
sub
add
xor
les
into
push
rolb
sbb
call
jecxz
int3
jge,pn
ret
test
std
sti
mov
jmp
adc
shlb
inc
les
into
cmpsb
push
jmp
fcomps
les
pop
inc
in
out
lea
pushf
jle
adc
push
loop
mov
insb
mov
mov
clc
push
in
dec
xor
cltd
fildl
and
insl
lods
mov
icebp
dec
aas
daa
clc
stos
jmp
push
and
sbb
and
aaa
hlt
dec
mov
push
aad
outsl
js
sub
jmp
xchg
inc
lock
adc
dec
addb
clc
movsl
xor
pop
test
push
inc
mov
pushf
test
dec
pop
pop
adc
idivb
test
cltd
repnz
enter
das
call
mov
test
outsl
lea
or
lea
jo
das
xor
lock
pop
add
xchg
and
sub
and
aas
popa
jb
lea
gs
jl
jae
jge
leave
inc
rorb
enter
lds
jnp
hlt
cmp
fildl
lea
xor
push
call
fs
jnp
pushf
xor
sbb
sbb
dec
gs
clc
or
inc
cmp
or
fnstsw
xchg
or
imul
mov
stos
inc
movsb
or
inc
xchg
cwtl
pcmpgtw
ja
loop
adc
daa
fcom
jns
in
adc
adc
dec
adcb
add
cmpsb
sbb
add
mov
sbb
add
mov
xlat
or
int
cmp
call
insb
adc
push
iret
call
test
popa
cmp
sbb
jp
sub
stc
inc
adc
mov
adc
mov
inc
cmovne
cmp
fwait
repz
jmp
xchg
or
xor
push
dec
mov
push
cmp
enter
arpl
aas
xchg
or
xor
cmp
and
push
fwait
cmpsb
lods
adc
scas
inc
mov
out
lret
cwtl
cmp
mov
mov
jp
mov
int
mov
mov
into
adc
mov
fs
sub
mov
mov
and
mov
sub
inc
dec
jmp
sbb
ljmp
shlb
add
loop
push
xchg
iret
clc
sbb
and
dec
mov
dec
aaa
mov
pop
enter
and
outsb
sti
inc
ret
cli
aad
mov
fiadds
or
push
sub
lods
inc
xor
fsubrl
cmp
loopne
dec
xor
add
dec
adc
push
andw
mov
xchg
lahf
mov
test
mov
jnp
adc
call
push
adc
dec
sub
leave
push
inc
fildl
push
mov
jne
adc
pop
cld
push
sbb
adc
cmp
push
add
jle
jge
neg
push
fdivs
adc
loope
fwait
test
and
inc
mov
sub
mov
scas
push
cld
mov
push
adc
psrlw
dec
cli
push
pop
xorl
and
clc
in
dec
nop
test
enter
pop
popa
adc
sbb
fnstenv
testb
je
stos
mov
push
loope
add
iret
jle
sub
mov
adc
cli
cmpsl
sarl
stos
push
cwtl
inc
rcrl
loopne
and
pushl
mov
xchg
inc
into
or
and
out
or
icebp
mov
repnz
jo
lahf
lods
dec
nop
sbb
cli
jo
mov
xlat
test
cmpsb
jno
sub
xchg
dec
sbb
or
inc
push
test
cmp
dec
cmpsb
popa
hlt
and
lret
adc
stc
pop
subl
mov
pushf
adc
add
sbb
jmp
jge
cmpsl
cs
ljmp
adc
cmpsl
jns
test
shlb
mov
cmp
push
inc
lret
dec
and
dec
in
fnstenv
sub
imul
rcll
sbb
xor
cmpsl
test
adc
and
stc
std
jg
inc
adc
repz
xchg
ds
out
sub
mov
mov
addr16
sbb
fsubrl
or
adc
add
dec
cmp
sub
fsubr
adc
push
xor
test
les
out
rorl
sub
push
adc
scas
cld
adc
xor
test
frstpm(287
mov
inc
les
sbb
inc
adc
lock
sbb
and
xchg
pop
shll
dec
and
dec
dec
mov
call
test
inc
xchg
mov
sub
xchg
mov
repz
pusha
adc
push
pop
push
fsts
nop
sbb
sbb
jecxz
jns
in
mov
adcl
cmp
bound
xchg
xchg
ss
mov
push
adc
sahf
stos
movsb
fsts
sbb
std
lret
mov
movl
push
sbb
and
push
mov
push
fisubrl
jl
addr16
sbb
orps
testb
and
pop
and
call
aas
and
call
mov
xchg
call
sub
and
xchg
js
xchg
mov
push
push
movsb
push
movsl
push
sbb
xor
mov
int
xor
dec
xor
mov
mov
hlt
ret
repz
xchg
loope
jecxz
movsl
sbb
xor
test
pushf
into
and
xchg
call
jo
xchg
dec
out
dec
adc
mov
push
adc
dec
cmpl
dec
or
test
mov
divl
repz
pop
rolb
add
lret
xchg
mov
jl
std
mov
mov
pop
and
nop
mov
ret
mov
aad
mov
or
shrb
movsb
mov
and
call
cmp
and
push
popa
and
sub
lods
mov
adc
loopne
das
push
sbb
repnz
clc
pop
cmp
hlt
add
mov
push
lock
hlt
mov
and
push
adc
lea
test
pop
sti
iret
xchg
inc
in
inc
mov
fisubrl
in
shlb
push
push
push
xchg
xor
adc
adc
inc
or
mov
mov
and
ljmp
push
in
fwait
cmpl
ss
stos
hlt
shll
int
sbb
pusha
sub
xor
pop
aaa
jne
cmc
cmp
mov
adc
mov
inc
leave
sub
fs
xchg
pop
repz
scas
jae
dec
es
in
adc
call
sub
jmp
mov
in
cmp
add
sbb
gs
inc
lock
cs
std
stos
les
test
xchg
jl
inc
sub
jns
pop
lea
decb
bound
test
enter
push
cmpsb
mov
loop
mov
popf
adc
ds
lea
mov
xchg
test
movsl
arpl
int
ds
xchg
and
mov
pop
lods
call
fnstenv
adc
sub
dec
pop
push
leave
dec
lods
jge
and
xchg
pop
sbb
mov
push
xor
mov
fwait
pop
jecxz
jle
test
xchg
xchg
dec
stos
and
in
xor
mov
or
or
jge
mov
adc
xchg
bound
ficoml
bound
lea
mov
push
jns
bound
movsl
mov
cltd
fs
mov
bound
inc
jmp
dec
sbb
xor
or
ret
ret
ljmp
jno
dec
jge
fs
pop
test
xlat
les
push
mov
vmovsd
loope
dec
push
mov
adc
rcrl
sbb
cmp
pushf
or
adc
sbb
xchg
push
push
andl
mov
and
adc
inc
pop
mov
dec
push
and
adc
sub
mov
hlt
and
jecxz
cmp
push
jb
push
test
or
inc
call
outsb
test
jl
sub
mov
and
inc
or
jae
push
jp
setbe
sar
cs
sub
aad
cltd
pop
and
ret
jle
insl
xchg
fs
inc
cltd
pop
add
mov
sti
jne
inc
adc
jmp
jo
dec
pop
daa
add
repnz
push
in
xor
jno
arpl
bound
int
je
mov
out
jae
mov
in
cli
mov
sub
into
stc
or
mov
inc
testb
pop
jne
cmp
pusha
ret
dec
sub
ror
lea
lahf
mov
push
dec
sarl
outsl
inc
bound
jge
pop
jmp
mov
dec
inc
decl
adc
push
testl
ss
push
lods
movsb
push
mov
sbb
dec
fildl
xchg
dec
sbb
mov
mov
call
dec
adc
pop
cld
cld
or
push
mov
jl
test
bound
inc
and
and
lea
pushf
sbb
lret
stc
repz
nop
add
xchg
out
pop
add
daa
hlt
mov
int3
lds
dec
cmp
lcall
push
lret
test
insb
sahf
stos
cs
mov
push
xchg
shlb
clc
add
testl
adc
data16
sub
jp
push
cwtl
pusha
sbb
cwtl
pop
es
and
xor
mov
hlt
xchg
xchg
xchg
fisubrs
jmp
xchg
xchg
fisttpll
pop
test
lea
lea
aam
xchg
cmp
fst
inc
or
shl
call
mov
inc
jmp
cld
stos
bound
pop
out
cwtl
xchg
mov
push
lea
lret
xchg
push
mov
adc
add
popa
add
mov
jmp
mov
xor
fxch
mov
jg
leave
test
test
orb
add
dec
ja
test
rol
rep
mov
fdivrs
testb
push
fcoml
and
in
in
mov
or
in
sbb
lock
subl
into
mov
and
push
popa
shl
xchg
sbb
mov
xor
lea
adc
ret
ja
push
fcomps
out
stos
addl
and
insb
jae
and
sbb
or
push
cmc
fs
ljmp
dec
jb
inc
outsb
je
rcll
stc
inc
mov
cmp
sarb
orb
xrelease
das
inc
movsb
push
and
gs
shrl
cmp
dec
mov
shlb
cmp
inc
and
sub
mov
movsb
sbb
and
or
data16
mov
xchg
push
pop
sub
mov
inc
and
lds
ss
jg
xor
add
cmp
out
cmp
loopne
addb
lret
fs
mov
mov
js
lcall
sub
inc
call
pop
gs
cld
xchg
cmc
xchg
or
and
in
cmp
and
shlb
inc
cmp
or
xchg
mov
shlb
mov
repnz
or
call
mov
scas
fldl
xchg
enter
pusha
ss
in
add
xor
rorb
adcl
inc
fbld
in
jbe
mov
arpl
push
outsb
rcrb
jecxz
lea
mov
leave
dec
and
cwtl
adcl
test
pop
fsubrp
mov
popa
cmp
jmp
mov
xlat
fcmovbe
pop
add
xchg
xor
lcall
addr16
push
cmpsl
ja
mov
leave
xor
shrd
rcrb
call
out
pop
repnz
and
hlt
xor
sbb
imul
sbb
andl
movsl
std
in
pop
pop
dec
ret
mov
into
ljmp
imul
mov
mov
hlt
out
jo
mov
inc
push
add
add
mov
sar
xor
fsubrs
pop
addb
test
clc
scas
sub
fsub
pop
loopne
sbb
jle
shll
or
or
adc
repnz
notb
or
xchg
loopne
jnp
add
push
mov
sub
or
dec
xor
lock
mov
pop
mov
adc
xchg
stos
mov
inc
mov
inc
jmp
movsl
cmpsb
inc
outsl
dec
lret
push
add
call
aaa
int
mull
xor
dec
push
in
fsts
cld
notl
cmp
enter
testl
mov
push
aad
mov
test
fs
stos
out
sub
pop
push
cwtl
sbb
and
pop
dec
dec
dec
add
push
loop
aam
shlb
mov
in
adc
jb
push
xor
push
dec
jecxz
subb
inc
jno
mov
and
xchg
jp
enter
jp
cmp
ljmp
leave
out
out
inc
and
sub
adc
mov
dec
cmp
xlat
mov
sub
mov
lods
shll
test
inc
or
push
shrl
inc
cltd
xor
call
gs
icebp
out
jge
inc
cmp
sub
call
adc
movsb
pop
rcll
mov
scas
inc
loope
inc
jg
mov
movsb
adc
or
and
adc
jp
adc
xor
push
cmp
adc
cld
mov
mov
adc
dec
sahf
js
dec
mov
adc
sub
call
adc
out
popf
mov
or
hlt
and
xchg
ja
sbb
rclb
or
lods
dec
ficoml
push
mov
dec
inc
or
inc
add
mov
ficoms
imul
add
push
cmp
jbe
jae
call
adc
test
mov
pushf
and
lahf
lret
dec
icebp
mov
push
sub
adc
jl
xor
mov
es
pushf
inc
adc
dec
cmp
shl
rolb
and
push
adc
in
mov
rclb
jmp
insb
mov
add
and
xchg
dec
add
adc
stos
and
adc
sbb
sarb
sbb
lea
push
call
jl
test
fisttps
jmp
cmp
adc
push
adc
dec
adc
shrb
test
dec
lahf
add
shl
cmp
xchg
nop
clc
andl
mov
ret
or
mov
les
pop
in
lock
lea
inc
fstl
xlat
or
lock
fdivp
sbb
sti
xorl
cmp
insb
lods
lahf
outsb
mov
push
call
or
lods
push
aad
out
stos
adc
les
in
mov
push
movsl
sbb
mov
and
in
lea
sbb
das
mov
pushf
int3
jmp
je
mov
lret
xor
test
ja
test
adc
adc
push
sub
sbbb
dec
sbb
sbb
xchg
loope
and
in
es
dec
sub
and
inc
aam
lods
fstpt
or
iret
divb
dec
pop
sbb
jnp
sbb
test
push
stos
inc
push
cmc
and
push
mov
nop
fdivl
stc
scas
notl
sahf
inc
es
ficoml
in
loop
leave
movsb
pop
orl
into
int3
dec
push
sbb
cwtl
adc
dec
mov
rclb
dec
dec
push
mov
jo
mov
fldenv
mov
adc
pop
adc
push
test
stc
adc
push
mov
mov
sbb
and
xchg
test
rcrb
notl
popf
adc
sti
mov
push
xor
dec
jb
call
pop
add
xchg
test
push
imul
dec
dec
loop
inc
dec
mov
js
xchg
sbb
adc
sahf
in
rclb
inc
dec
inc
pop
sub
bound
push
sub
cmpsl
and
push
cmpsb
jp
adc
cmpb
xor
pop
adc
xchg
cld
and
test
push
in
adc
bound
push
pop
lcall
and
movsb
mov
or
mov
lahf
add
or
adc
and
add
sbb
and
stc
inc
xor
cmp
cmp
jge
addr16
inc
inc
pop
mov
fadds
or
mov
and
adc
imul
inc
mov
pop
fwait
adc
add
and
and
mov
std
int3
cmp
test
pop
mov
cmp
imul
push
lcall
roll
sbb
test
imul
jle
in
mov
jo
push
shlb
or
imul
cmp
add
sbb
xor
stc
fmull
lea
and
sahf
mov
bound
cmpsl
dec
sahf
or
xchg
stc
je
movsl
les
stos
fmuls
dec
jne
push
jne
pushl
adc
push
fsubr
inc
mov
push
in
nop
inc
dec
jg
fldl
sub
je
popf
adc
das
out
pop
cltd
clc
adc
lods
sbb
enter
push
cmpxchg
sti
xor
adcl
sub
lock
lods
pop
les
inc
jmp
leave
cmpl
lods
pop
movl
dec
pop
mov
and
es
sub
dec
add
or
dec
jl
das
jmp
xor
bnd
sti
fs
call
jecxz
and
mov
and
adc
cpuid
in
sti
outsb
hlt
cmpsl
leave
add
test
dec
or
lea
mov
aaa
xchg
inc
scas
mov
mov
shrl
nop
mov
cmp
xor
pop
pop
mov
sub
mov
in
enter
jmp
jb
jmp
lcall
nop
xorl
sub
arpl
and
js
lea
mov
cmp
push
xor
cmp
sbb
loope
lods
mov
in
fs
push
test
call
in
dec
pop
mov
data16
mov
mov
sbb
shr
push
lds
into
cs
cmp
push
cmp
je
mov
fwait
imul
adc
sti
xor
add
jle
mov
mov
and
pop
pop
inc
push
inc
adcb
add
mov
rorb
push
cs
dec
xor
int
data16
or
xor
sub
jge
pop
rclb
xchg
movsb
or
xlat
inc
or
mov
sbbl
and
sub
adc
mov
push
and
ret
cmc
stos
mov
xchg
jmp
rcrl
inc
repz
std
jecxz
or
lock
shr
ds
mov
sbb
aas
repnz
adc
or
add
lock
mov
iret
inc
sub
or
and
add
lea
sti
dec
popa
andl
mov
xchg
push
push
pop
dec
hlt
lea
ja
push
lcall
dec
dec
cld
ss
jecxz
jae
add
out
or
mov
imul
add
xor
stc
xor
hlt
pop
sub
sti
cmpsb
pop
lret
testl
or
fs
lock
sub
dec
push
or
jp
outsl
adc
add
test
leave
insb
insl
shrl
inc
xchg
and
cltd
les
cmpsl
insl
xchg
cwtl
call
mov
imul
add
push
push
jp
stos
clc
pop
adc
sbb
mov
mov
in
pop
jp
add
jno
rorb
jbe
pop
sbb
cwtl
xchg
or
addb
pusha
cmp
xchg
push
inc
inc
aam
add
and
loopne
xor
movsb
sar
mov
mov
jb
ljmp
jl
jo
or
loope
mov
in
enter
mov
cmp
pushf
insl
xchg
inc
inc
jmp
lcall
pop
bound
adc
add
lcall
cmp
xor
pop
cmp
lds
push
sub
scas
pop
arpl
fxch
pusha
aaa
shl
mov
call
adc
cmp
nop
sahf
rcr
ret
or
pop
mov
adc
dec
repz
in
cmp
jle
dec
test
xor
dec
cmp
xchg
rcll
push
loop
cmpsb
xor
sbb
xlat
mov
mov
xor
psubsw
jg
sbb
dec
cwtl
or
repz
cmpsb
sbb
das
in
jns
xor
xchg
mov
nop
cmp
movsb
stos
ret
adc
inc
jmp
push
mov
lret
jmp
cmp
push
add
imull
scas
mov
cmp
dec
dec
push
test
lcall
xor
ss
nop
and
enter
lret
xchg
or
mov
bound
fistpl
jns
inc
xor
mov
cli
mov
mov
adc
nop
xor
xorb
adc
adc
xchg
xchg
jmp
cmp
sbb
push
scas
test
push
loopne
call
sub
mov
mov
push
call
mov
jmp
fildl
clc
push
sbb
dec
mov
xlat
inc
pxor
dec
aaa
fisubl
pusha
or
mov
xor
out
les
cmp
cs
not
xchg
lahf
jae
mov
fnstenv
xor
push
fmuls
xchg
and
repnz
jb
dec
cli
sbb
int
or
and
or
and
mov
adc
add
ret
jo
push
not
aaa
test
leave
enter
out
cvttps2pi
push
data16
popa
add
adcb
and
pop
or
movb
not
and
dec
out
out
xchg
mov
pop
int3
jp
notb
cmp
decb
shl
jbe
shlb
fiadds
ljmp
sbb
xor
and
or
test
sar
xor
pop
xor
sub
push
out
push
pop
jmp
mov
sub
test
in
aas
loop
js
push
lea
push
dec
or
inc
mov
adc
xlat
jmp
loope
jg
xor
jo
mov
jmp
mov
repnz
add
push
lea
movsl
jl
mov
push
or
and
xor
inc
pushf
sub
xchg
gs
cld
xor
inc
add
and
mov
or
pushw
mov
xchg
addb
and
push
dec
sbb
mov
mov
int3
lcall
call
xchg
arpl
sbb
jl
sbb
js
adc
adcl
inc
or
or
orl
xchg
cmc
adc
dec
cld
sbb
and
inc
xchg
push
push
and
pusha
add
les
xchg
xchg
or
fs
sbb
cmp
test
xor
cs
popf
hlt
gs
aam
sti
mov
ss
jns
jge
jmp
sub
mov
mov
add
cmp
in
or
in
mov
sbb
sub
in
inc
jne
inc
mov
je
or
and
mov
jmp
jg
in
in
xchg
sub
imul
sar
pusha
mov
popa
test
mov
movsl
inc
andl
lcall
xor
das
scas
mov
gs
jl
lds
movsl
adc
lods
ja
nop
sbb
popf
xlat
jge
sarb
and
push
loope
sub
add
dec
pop
shlb
dec
dec
pushl
outsb
es
jnp
hlt
push
call
adc
adc
push
dec
daa
movzwl
adc
iret
jle
adc
push
sub
add
inc
cmp
jb
add
xor
push
pop
pop
mov
pop
jns
push
pop
cmp
xchg
pop
and
nop
and
mov
xchg
clc
mov
in
push
inc
cmp
xchg
daa
mov
xor
cmpl
in
es
in
dec
sbb
add
mov
insb
out
dec
stos
dec
repnz
xchg
push
cmp
pop
and
out
xor
int
push
mov
jp
push
and
stc
jne,pn
call
sti
fmuls
jg
fldcw
cmp
add
push
add
leave
adc
xlat
adc
xlat
mov
arpl
and
cmp
push
cmp
inc
call
mov
stos
ja
jl
mov
cmp
push
pop
jp
rcrl
jmp
mov
not
shll
pop
out
in
cs
xor
add
pusha
movsl
ret
push
ret
jnp
sbb
push
inc
inc
mov
outsl
mov
dec
sbb
mov
clc
sub
inc
ret
in
adc
pop
jge
xor
inc
iret
ret
jp
cmp
jmp
test
jl
scas
xor
in
xchg
dec
mov
xor
inc
popf
pop
dec
fwait
pop
popf
stos
add
sahf
dec
cmp
pop
jne
ljmp
ficoml
and
adc
mov
movsb
dec
sub
push
pop
jl
pop
clc
jp
inc
push
or
call
fdivr
xor
dec
dec
add
dec
sbbl
ret
aad
shlb
imul
adc
jmp
loop
lret
test
cwtl
fists
data16
sub
dec
push
push
lds
jnp
inc
jge
jbe
add
sbb
movsl
paddusw
jl
gs
cmpsl
popf
dec
out
jne
add
flds
inc
cmp
jmp
inc
arpl
sbbl
mov
or
je
xlat
mov
adc
je
mov
js
push
popf
xchg
loopne
adc
push
inc
pop
call
dec
xchg
sbb
jge
and
outsl
ret
push
mov
dec
movsb
addr16
ss
in
or
add
nop
pop
frstor
loop
jecxz
mov
mov
clc
scas
push
out
mov
or
jmp
mov
adc
sbb
push
daa
repz
adc
dec
mov
out
push
inc
int3
sub
arpl
push
jmp
ret
shrl
jge
fcmovnu
and
das
je
fsubrp
jbe
sub
mov
xchg
jmp
les
es
inc
add
jl
push
fsubs
out
adc
je
inc
push
push
inc
push
xchg
jbe
movsb
mov
jmp
mov
xchg
clc
dec
and
or
push
or
inc
mov
repz
stos
sbb
inc
in
inc
cld
clc
mov
xor
lret
xor
mov
push
pushf
data16
inc
mov
test
aad
test
stos
mov
sti
push
push
xchg
out
or
loope
fisubs
je
mov
xchg
leave
shll
out
add
push
loopne
or
push
xor
jg
cli
or
inc
add
mov
movsl
xchg
adc
nop
mov
add
lret
call
adc
push
test
call
cmc
cmp
iret
adc
and
xor
cmc
xlat
mov
jne
cmp
push
pop
lods
loope
push
scas
into
je
in
es
shrb
mov
cli
pop
xchg
in
add
pop
in
sub
lea
scas
sub
inc
movsb
ds
sbb
cltd
andb
xor
adc
in
popf
inc
adc
in
dec
inc
lea
jb
dec
inc
test
je
hlt
cmp
mov
iret
call
dec
adc
mov
in
push
lock
gs
cli
dec
jg
and
mov
xchg
in
dec
lret
negl
mov
je
inc
cli
into
pusha
mov
jne
andb
add
sub
adc
push
xchg
loop
sbb
mov
sub
dec
insb
xchg
in
ret
js
xchg
pop
inc
out
jbe
xor
adc
jmp
push
insb
test
cltd
dec
sti
mov
pop
shlb
mov
pushf
aam
adc
ljmp
fcoms
test
push
cli
test
out
testl
cbtw
lds
mov
scas
int
jp
roll
fisttpl
cmpsl
cmp
loope
leave
dec
outsb
mov
sub
jg
xchg
stc
pop
push
ss
int3
push
call
das
xchg
sahf
out
and
adc
stc
out
sub
and
add
xchg
adc
imul
xchg
pop
lds
jns
ror
imul
hlt
scas
jo
ss
sbb
sbb
inc
insb
sbb
aad
add
mov
test
stc
jb
mov
roll
pop
add
jle
jl
int
cmp
or
fildll
mov
dec
push
or
data16
pusha
pop
js
divl
lea
dec
cs
lods
sub
test
push
clts
mov
jo
adc
int
lret
jle
out
push
push
int
pop
push
aaa
add
mov
int
or
inc
stos
add
push
or
jo
cmp
jns
cmp
pop
cmp
in
add
xor
sub
dec
xchg
or
ja
shr
adc
mov
or
and
je
push
shll
dec
mov
ret
lret
push
repnz
test
out
inc
cmp
add
sarb
xchg
out
or
xchg
popf
pusha
insl
add
fcompl
bswap
jmp
cmp
lock
mov
aaa
xor
or
add
sbb
jmp
mov
or
scas
outsl
add
repz
jno
leave
or
dec
push
mov
cltd
arpl
pop
sub
sbb
adc
aam
les
jmp
pop
adc
dec
ljmp
ret
inc
fs
jge
push
and
ret
mov
fimull
bound
and
pop
cs
xchg
addl
inc
sub
loop
scas
test
xchg
jg
fcmovbe
imul
ret
pop
out
pop
or
jb
push
sbb
xchg
and
push
or
push
dec
daa
add
sbb
mov
fdiv
dec
push
cld
out
cld
loopne
adc
xchg
sub
xchg
fsqrt
adc
dec
mov
mov
pop
cs
pop
imulb
ret
sub
ljmp
int3
enter
js
and
adc
adc
lods
xorl
shll
cld
mov
cmp
nop
push
cmpl
dec
imul
mov
push
mov
push
cwtl
call
pop
cld
adc
lret
and
xorl
pop
jge
mov
enter
inc
xor
rorb
and
sbb
xchg
mov
jg
es
adc
pop
or
fcomps
jp
loope
inc
pop
jg
dec
and
shl
pop
jb
cwtl
sbb
sbbb
or
enter
enter
test
and
dec
push
cli
and
arpl
pavgb
movsb
cs
test
fisubrl
pop
sub
pop
cwtl
inc
ret
nop
sbb
call
fnclex
lods
fwait
xchg
pop
test
jecxz
dec
lods
pop
jl
jae
nop
add
shr
fstpt
cmp
mov
add
pop
outsl
sub
insl
push
pop
sti
lcall
int
adc
mov
clc
mov
incl
shlb
test
inc
sbb
mov
add
je
cmp
push
testb
adc
clc
pusha
xchg
cltd
or
ds
lds
sub
mov
cmp
pop
mov
adc
mov
jbe
nop
call
push
adc
out
insb
xchg
inc
cmp
pop
lods
enter
and
sbb
popf
out
imul
add
lods
push
adc
add
mov
les
jmp
and
test
add
jns
pop
rcrb
inc
test
jl
xchg
lock
into
inc
sbb
jne
shlb
repz
push
orl
addb
add
out
push
fisubl
loopne
pop
mov
jbe
sub
and
jg
aad
push
shlb
std
xchg
mov
xchg
push
xor
inc
repnz
mov
sbb
push
nop
dec
jmp
add
add
xchg
stos
dec
repz
hlt
or
fsubp
out
mov
imul
fmuls
jle
testb
adc
sub
daa
call
inc
cmp
test
test
sbbb
mov
cli
sub
push
stos
xor
dec
xchg
ss
dec
or
mov
dec
shrb
andb
sbb
pusha
jecxz
jmp
mov
in
xor
inc
shlb
cmp
lahf
sbb
push
and
mov
dec
test
push
and
shll
lahf
fidivl
repnz
mov
cmp
scas
add
adcl
inc
inc
outsb
pop
mulb
dec
inc
hlt
cld
mov
hlt
cmp
sbb
push
push
dec
aaa
clc
mov
push
sub
mov
mov
fsubs
arpl
pop
sbb
call
cltd
xor
sub
jmp
sub
mov
mov
shrl
pop
mov
mov
inc
and
dec
jb
cmp
adc
jo
popf
ljmp
or
lock
pop
std
lea
xchg
xchg
hlt
out
sbb
cmp
or
test
movb
sbb
jne
leave
jnp
fstpl
out
movsb
addr16
push
out
pop
push
daa
push
mov
push
push
pop
inc
jg
jle
mov
add
and
add
andb
add
push
and
test
bound
inc
cmp
jne
scas
or
push
mov
push
push
pop
dec
out
and
add
jle
mov
mov
sub
aas
dec
or
das
mov
jne
aas
mov
cmpsl
movsb
xchg
pop
mov
sub
add
sub
inc
jl
xor
mov
dec
xor
daa
and
or
nop
push
adc
xchg
daa
cmpsb
cld
add
pop
push
stc
je
or
mov
jle
inc
cmp
dec
sub
adc
in
mov
rorl
and
inc
mov
mov
int
ja
shl
dec
and
aad
pop
pop
sti
xor
call
ljmp
ja
out
add
sub
push
sbb
pop
ljmp
mov
std
dec
xor
pop
pop
sbb
jge
das
push
jge
popa
mov
push
sbbb
xchg
out
pop
mov
mov
and
popf
inc
jp
mov
mov
xchg
inc
lea
cmp
gs
lea
ljmp
dec
je
sarl
inc
aas
shll
cmpsl
shll
leave
lods
cmpsb
arpl
ss
sahf
adc
ljmp
test
xor
mov
pop
sti
hlt
gs
fisttps
lahf
jg
mov
sub
jne
mov
scas
fsub
inc
sbb
xchg
loopne
inc
lcall
stc
xor
sbb
sub
lgs
cmp
dec
adc
and
add
pop
cmp
sub
mov
add
enter
adc
xchg
add
adc
jnp
sbb
jbe
loope
adc
enter
add
jmp
push
sahf
mov
add
out
nop
xchg
mov
cmpsb
mov
aaa
mov
sahf
push
stos
adcl
test
mov
je
data16
push
es
call
out
mov
inc
insl
cld
decb
ret
lahf
aam
push
outsl
sbb
xor
out
add
mov
pop
je
and
adc
je
frstor
add
inc
sbb
pop
lret
in
out
stc
mov
cmpsl
adc
mov
pop
jne
adc
and
inc
cmp
cmpl
pusha
sar
pop
fadd
fucomip
xchg
mov
cmp
cli
out
imul
sahf
out
mov
jl
pop
dec
pop
mov
hlt
or
cltd
and
add
adc
jmp
sub
and
bound
inc
cmp
sti
imul
sub
inc
es
xchg
pop
and
push
sbb
loopne
loopne
inc
pop
push
enter
push
orb
pop
or
adc
mov
ret
jmp
and
daa
or
out
ret
mov
insb
xor
sub
jmp
sahf
sbb
push
push
mov
mov
aad
dec
insb
push
int3
cmpsw
mull
sbb
sahf
jnp
lock
negb
cmovge
pushf
jne
mov
jne
cmp
out
xor
or
icebp
jg
cmp
jo
popa
ljmp
mov
or
dec
test
clc
lea
pop
flds
sahf
add
pusha
int3
push
adc
mov
cmp
mov
sbb
iret
ret
je
pop
movsl
xchg
scas
jecxz
adc
lods
fsts
xchg
pop
push
lahf
pop
lahf
jno
and
mov
mov
mov
loop
jno
stos
ficoms
add
pushf
xorl
in
mov
mov
int3
jle
movsb
xchg
adcl
inc
cmp
mul
aas
popf
cld
fucomi
push
adc
inc
test
sahf
lods
mov
adc
jl
ja
call
rolb
sbb
sahf
ds
push
leave
dec
xor
inc
cld
cmp
adc
jmp
mov
jge
in
mov
in
inc
call
xchg
push
fwait
in
sub
loopne
sub
fdivs
push
jmp
lret
pop
jmp
out
lret
icebp
sbb
sub
inc
ljmp
cmp
loopne
xor
inc
pop
add
ja
jle
pop
test
and
stos
pop
cli
adc
or
jmp
aad
dec
mov
and
sbb
xchg
pop
add
dec
push
es
inc
or
popa
pop
push
xchg
xchg
nop
lock
pop
push
xor
lea
jae
lret
imul
and
and
test
test
call
call
jp
push
lea
lea
xchg
adc
xlat
nop
mov
cmp
push
adc
adc
dec
add
add
push
test
adc
jae
and
jmp
shr
ret
scas
iret
xchg
cmc
gs
aas
pushf
mov
clc
add
mov
ret
nop
fs
imul
push
adc
jbe
push
push
fcmove
xor
jae
inc
or
jg
xor
lock
add
add
and
jnp
test
pop
xchg
lcall
dec
or
lock
xchg
hlt
pop
outsl
in
rorl
or
adc
idivb
sub
ret
sub
test
xor
ja
jno
loope
push
js
cmpsb
pusha
lds
xchg
adc
cltd
or
jnp
lret
in
add
mov
stos
cmc
or
cmc
jae
cmp
mov
push
adc
cmp
mov
and
push
lea
rclb
adc
mov
outsb
int3
sbb
adc
ja
addl
call
push
movsb
fs
test
xchg
fs
cmpsb
ds
ljmp
adc
loope
add
mov
dec
sub
iret
dec
lret
sbb
pop
adc
xor
mov
scas
enter
push
fcmovnb
dec
mov
rcll
pop
pop
in
scas
bound
in
lea
mov
enter
sbb
or
sbb
out
mov
data16
std
dec
cmp
sti
out
adc
and
adc
sbb
shrb
inc
jb
push
mov
xor
mov
cwtl
or
mov
mov
daa
jl
sbb
mov
negb
stos
pop
or
sti
xor
ljmp
push
add
mov
cli
aad
jl
scas
andl
mov
mov
mov
push
incl
jo
cmpl
clc
sbb
out
std
imul
test
rcll
jg
mov
leave
enter
mov
mov
mov
mov
lahf
icebp
lock
pusha
lret
cwtl
sub
ss
or
adc
push
pop
dec
or
addb
mov
mov
pop
inc
aad
adc
mov
out
xor
out
mulb
add
push
xchg
scas
xor
in
and
sbb
je
stos
rcll
inc
xor
rcrl
int
pushf
popf
shlb
dec
and
mov
dec
mov
sbb
inc
inc
sbb
cli
andb
mov
xchg
pop
sti
lea
add
jmp
dec
test
cmc
out
daa
mov
xor
call
cmp
add
mov
adc
test
popa
dec
mov
lods
jge
add
fimuls
inc
cmpsb
jne
cmp
enter
outsb
scas
mov
mov
dec
je
dec
jl
imul
xchg
cwtl
cmp
popa
dec
dec
call
and
push
dec
mov
and
call
fs
dec
cs
dec
test
sub
aam
and
cmp
clc
jge
sub
mov
aas
cmp
sbb
xor
es
xor
cmpl
add
insb
mov
mov
in
push
inc
fimull
shl
ret
pushf
pop
lock
mov
cmp
divl
shl
jle
mov
cmp
and
enter
adc
mov
shl
loopne
cmpsb
call
in
pop
in
in
in
jle
or
inc
and
mov
ret
and
pop
jbe
push
jmp
push
nop
test
add
ja
mov
cld
ret
lods
mov
push
nop
push
jp
insb
xor
mov
addl
jne
mov
fcoml
loopne
pop
or
mov
cmp
xchg
adc
test
rcll
jmp
and
cmp
xor
test
pop
aam
add
lods
push
fsubr
jmp
xchg
xchg
pop
les
and
fsubl
aaa
mov
test
add
and
fidivrs
mov
xor
mov
dec
dec
push
imul
adc
ret
ret
popf
stc
int3
movsb
mov
adc
testl
sub
mov
xor
push
xchg
fstpl
and
cmp
fs
push
movsl
sarb
std
cmp
or
loope
inc
jne
pop
and
cltd
or
cmpl
sti
nop
lret
adc
shrb
jae
push
push
xchg
jecxz
mov
pop
subb
movsl
ds
mov
enter
call
push
mov
adc
inc
hlt
mov
ja
push
sub
xor
imul
dec
stos
adc
addr16
mov
push
jl
pop
pop
adc
ficoms
push
mov
pop
fstps
inc
push
scas
lret
push
jl
or
inc
or
loopne
push
mov
daa
shll
cmp
xchg
xchg
add
nop
mov
xchg
or
dec
cmpsb
mov
cmpsb
xor
adc
and
sbb
cmp
mov
sub
dec
and
and
or
fcmovnbe
hlt
xor
dec
loope
sbb
stos
pop
pop
push
push
ljmp
test
call
add
loopne
inc
xchg
jmp
push
aam
aam
dec
sbb
scas
push
movsb
sbb
mov
ds
lods
push
sub
push
cltd
dec
lods
push
or
ficoms
mov
es
fidivl
mov
pop
fs
or
call
cs
push
int3
cmpsl
sub
es
pop
pop
jmp
cli
xor
add
mov
push
adc
std
cmp
mov
test
mov
fisubs
out
outsl
add
mov
sysexit
mov
gs
in
push
in
inc
jnp
sbb
adcb
dec
in
or
ffree
mov
push
mov
outsl
in
in
mov
cmp
subb
popa
cmp
ljmp
adc
adc
add
jno
subb
popa
push
adcb
push
testl
gs
inc
cmp
and
mov
push
inc
je
push
inc
xchg
packuswb
jl
cmp
ja
mov
inc
adc
ret
ret
lahf
mov
add
adc
push
mov
shr
mov
lock
ds
add
pop
cmp
inc
adc
shll
push
cli
jno
pop
and
or
loopne
add
cmp
stc
lahf
jl
jmp
and
and
out
xlat
push
test
sar
or
add
inc
cmp
je
fucom
mov
sahf
push
movsl
add
ljmp
pop
sbb
mov
shl
cmp
inc
pop
dec
sub
jo
dec
sub
pusha
push
push
pushaw
jo
loopne
dec
clc
or
pop
jg
addr16
or
dec
sti
movsl
jp
xor
stos
pop
cmp
popa
aas
sti
adc
cmp
mov
cmp
filds
push
xor
fistpll
mov
or
sub
les
push
sbb
push
cmpb
dec
push
inc
aaa
push
test
fidivs
adc
push
mov
pop
mov
mov
hlt
adc
ljmp
roll
and
jo
cmp
jne
andb
inc
jmp
mov
mov
into
jns
sub
aam
jge
add
jmp
push
pushf
fdivs
fdivrp
cmpl
push
call
sbb
sub
push
or
fs
cmp
push
and
cmc
outsl
aad
mov
add
push
cli
mov
andb
jmp
ret
push
lahf
sub
fs
leave
cmp
mov
hlt
adc
sbb
mov
sbb
inc
dec
cmpb
in
addl
jl
push
mov
cmp
stos
mov
adc
fcomps
mov
stos
xor
sbb
cmp
jecxz
cmp
lea
jb
nop
add
mov
push
push
call
adc
leave
xor
and
ret
mov
bound
mov
sub
js
push
popf
cmp
test
scas
mov
push
jo
pop
not
pop
pop
roll
and
mov
jne
adc
and
dec
call
cmpl
sub
call
das
xchg
js
adc
je
add
mov
fists
int
icebp
and
xchg
add
xor
es
jne
ror
xchg
addl
adc
adc
xchg
jle
mov
push
and
loopne
sbb
pop
cld
push
xor
fisttpl
adc
mov
movsb
inc
inc
add
push
mov
push
mov
ds
dec
and
in
pop
mov
adc
out
test
mov
xchg
mov
dec
push
aaa
pop
jne
adcb
hlt
inc
add
mov
sub
xchg
lods
mov
pop
mov
push
cmp
inc
int3
jmp
dec
adc
adc
pop
cmc
adc
aam
aam
je
ret
repnz
lret
or
imul
mov
arpl
xor
jp
int3
push
adc
mov
stc
das
loope
push
push
pop
sub
test
jmp
jns
dec
inc
and
sbb
stos
xor
cli
jnp
mov
xchg
stc
dec
xchg
and
push
or
xor
scas
pop
mov
push
mov
xor
push
jge
and
adc
sub
insl
test
push
mov
nop
and
out
enter
push
pop
push
mov
xchg
cmp
adc
add
sub
or
adc
adc
mov
roll
lods
sub
xor
shufps
sbb
cmp
test
pop
dec
lret
mov
test
inc
add
arpl
inc
sbb
push
add
cmpsl
mov
sbb
mov
dec
mov
push
sbb
inc
imul
adc
movl
cmpsl
cmp
imul
or
out
jbe
inc
ret
mov
jmp
cmp
push
xor
sub
call
dec
adc
mov
lret
mov
adc
lods
mov
cmp
fcmovne
dec
sbb
shrb
pop
or
or
in
cmp
mov
imul
push
and
inc
int3
sub
or
test
xor
daa
enter
push
sub
inc
push
and
push
inc
adc
jmp
sbb
adc
push
xchg
or
xor
or
or
push
daa
mov
mov
nop
push
adc
rclb
adc
in
pop
out
ds
mov
add
aam
dec
dec
or
jns
mov
pushf
push
add
mov
mov
push
roll
scas
xchg
data16
cwtl
dec
movsl
cmp
adc
adc
xor
push
inc
adc
or
jae
xchg
mov
mov
push
repz
adc
aad
into
or
mov
push
or
adc
cmpsb
cmpsb
pop
mov
pop
mov
stos
loop
movsb
dec
pop
fdivrl
lock
mov
xor
gs
push
mov
jne
xchg
dec
push
sbb
hlt
andb
xchg
cmpsb
int3
cmpsl
jne
sarl
push
sbb
cli
and
scas
fcoml
push
gs
push
gs
mov
das
or
mov
shrl
adc
adc
jo
sti
and
dec
std
mov
shrl
xor
testb
add
rorb
cs
jl
inc
pop
jg
add
and
lods
xlat
adc
shr
loopne
adc
cld
push
call
push
push
imul
fadd
pop
jmp
imulb
in
add
push
sbb
pop
sub
shll
jecxz
movb
es
lock
lea
jne
or
gs
pop
mov
push
inc
inc
jmp
andb
test
inc
jmp
pushf
out
in
or
pop
push
mov
imul
std
and
pop
and
pop
pop
ret
jnp
jns
push
jge
push
sar
rep
mov
popf
fldl
xchg
push
add
loope
and
push
shrb
xor
push
sbb
mov
add
dec
ror
sbb
test
mov
fidivl
dec
aam
inc
or
add
inc
icebp
fstpl
sbb
mov
repnz
sub
fdivrs
or
sub
outsb
lods
and
dec
ljmp
xor
aad
mov
jo
push
xor
fisttpll
adc
sbb
inc
pop
and
stos
mov
pop
sub
and
test
sub
popa
xchg
and
ret
push
insl
mov
mov
xor
pushl
adc
sbb
adc
testb
sbb
mov
stc
mov
lock
imul
fildll
adc
shrl
sub
sub
sub
mov
enter
push
cmpl
ret
adc
loope
sbb
rcl
mov
xor
insb
lods
repz
cmpsb
test
jp
ljmp
in
xchg
adc
dec
or
andl
fwait
out
adc
push
push
sbb
subb
cmc
out
aad
ficoms
cmp
pop
sub
movsb
jo
rcrl
push
cltd
lock
adc
in
imul
hlt
push
xchg
push
and
loope
mov
leave
cmp
sbbb
jg
sub
idivl
cmp
dec
mov
out
js
ret
icebp
dec
and
cli
adc
test
jp
inc
cld
movsl
aam
sbb
mov
decb
std
rolb
leave
mov
push
addr16
push
ss
inc
lds
movzwl
adcb
mov
xor
bound
push
cmpsl
ds
push
scas
sub
push
dec
call
stos
iret
mov
das
fs
je
sarl
add
jle
cltd
sub
sar
mov
push
rcrb
lods
imull
mov
add
xchg
mov
rcrl
in
jge
shll
cld
stos
ret
pop
mov
dec
push
sub
in
jle
dec
dec
pop
adc
push
stos
dec
cmc
pop
xor
sarl
xchg
ss
mov
fisubs
push
repnz
or
push
leave
lods
cmp
and
rolb
cmc
outsl
mov
pop
clc
pop
enter
mov
pop
mov
xchg
ret
clc
sub
sti
insb
push
sub
jl
xchg
mov
cltd
imul
in
adc
dec
leave
push
cli
xor
add
ret
push
mov
and
clc
inc
cld
call
mov
xchg
ret
push
pop
mov
or
call
mov
sbb
and
mov
add
std
outsb
dec
mov
pop
fpatan
cmpsl
dec
loopne
out
iret
and
inc
sbb
das
test
sbb
mov
adc
mov
and
sahf
fidivrs
mov
out
inc
int3
mov
xor
xor
sub
lret
push
push
pop
push
adc
hlt
stos
add
cld
js
lds
jge
or
sarb
cwtl
xor
cmp
das
inc
jae
push
mov
sbb
shr
mov
in
loope
or
lret
stos
mov
lcall
dec
cmp
adc
loope
notb
sub
dec
inc
add
or
lock
xor
cmpl
in
jne
push
pop
lods
inc
mov
and
addb
adc
jg
push
daa
jge
or
add
push
push
jmp
mov
xchg
sub
test
fstps
test
dec
in
adc
paddb
mov
mov
mov
add
movsb
push
and
hlt
sbb
repnz
mov
pop
scas
shl
hlt
lea
roll
dec
pop
dec
adc
cli
mov
lods
dec
xor
mov
jmp
imul
lods
inc
aam
xor
push
movups
sbb
rolb
push
push
or
sub
aam
push
and
or
or
jb
push
fisubl
cmp
or
das
jmp
je
mov
lea
push
sbb
data16
loope
mov
jle
sub
mov
sbb
js
or
xor
lahf
in
xchg
lret
bound
loop
sub
std
adc
jb
cmp
sbb
and
gs
add
in
adcl
imul
or
test
xchg
xor
call
mov
call
cld
ja
lods
xor
cmc
push
ja
adc
push
jb
inc
adc
lea
fisubrl
repz
aaa
out
sbb
jg
int
mov
jmp
pop
je
sbb
push
loop
jo
xchg
dec
fstps
and
or
sub
pusha
ret
mov
jae
cwtl
dec
pop
mov
and
and
add
lahf
aas
std
test
and
and
lock
push
lock
in
and
and
jno
cmpsl
decl
inc
lock
xchg
xor
push
imul
push
es
rolb
call
cmp
popa
clc
dec
aaa
imul
adc
and
push
inc
ljmp
packssdw
push
test
les
lods
test
inc
jne
xchg
daa
cmc
test
sub
test
pop
add
imul
jmp
pop
sub
adc
dec
mov
divb
mov
push
cli
fistpl
jbe
outsl
push
mov
pop
cld
in
mov
sub
sti
bound
fcmove
popa
inc
clc
call
add
dec
push
pop
inc
and
je
push
add
es
and
adc
and
pop
push
xor
jmp
rcrl
cltd
sbb
in
sbbb
jecxz
in
mov
push
adc
mov
mov
lods
inc
dec
cs
enter
lods
and
push
sub
mov
in
js
and
and
cmpb
sub
pop
push
add
mov
and
in
mov
call
and
cltd
scas
sub
repz
cmpsb
std
cwtl
addr16
adc
cmp
sub
xlat
push
jnp
fcompl
and
add
adc
cmpsb
jne
loope
cmp
xlat
cmpsl
mov
in
cmp
cmp
movsb
pcmpeqb
mov
and
ficoms
add
aam
mov
cmp
jns
negb
call
mov
mov
pop
dec
dec
cmp
xchg
mov
lods
push
push
xor
or
jne
nop
jecxz
push
or
push
mov
enter
loop
divps
sbb
mov
js
mov
adc
test
neg
xchg
mulb
mov
or
fimuls
mov
pop
mov
jge
push
adc
test
cmpsb
dec
push
or
call
adc
js
push
push
movl
jb
movsb
test
aad
xchg
out
ja
or
add
lods
dec
push
mov
pop
sar
js
leave
pop
dec
ljmp
push
cmp
incl
hlt
push
pop
pusha
insb
ja
imul
iret
fstl
sar
xor
shr
push
sub
sahf
push
lret
add
xor
pop
loop
and
int3
mov
fisubs
jp
jmp
jne
andl
xchg
mov
jl
stos
enter
xor
inc
and
mull
lods
cmp
dec
scas
mov
int
leave
pop
mov
sbb
sbb
andl
push
lods
ret
rcr
test
scas
jbe
mov
jne
ljmp
int3
jb
or
jae
out
and
inc
sbb
je
sub
insb
adc
repz
mov
jbe
out
cwtl
pop
and
mov
cmp
or
das
jmp
arpl
out
rcr
pop
push
mov
xchg
out
out
pop
mov
jae
xchg
and
push
enter
add
lcall
fildll
or
daa
jb
cmp
xchg
pop
xchg
sub
es
mov
add
adc
push
add
enter
xor
dec
mov
jne
xchg
pop
mov
and
jmp
xlat
into
adc
sahf
leave
and
mov
add
lahf
icebp
iret
dec
and
pop
mov
sub
jno
push
roll
frstor
test
icebp
leave
or
out
inc
decl
or
sub
test
or
ret
les
mov
je
daa
sub
lock
in
movsb
mov
mov
outsb
dec
mov
movsb
loope
in
dec
inc
out
mov
mov
pop
dec
xchg
cmp
orb
inc
jnp
inc
in
and
imul
push
je
mov
lods
repz
inc
mov
pop
xchg
xor
les
pusha
jle
adc
add
or
mov
int
arpl
rolb
xor
jns
lds
add
inc
pop
or
or
mov
add
push
test
into
dec
mov
sarb
icebp
call
mov
xor
adc
mov
or
xchg
jl
dec
push
rol
imul
mov
lock
pop
test
shrl
mov
cld
adc
jae
add
and
and
sbb
xchg
aad
or
rcl
jmp
or
sti
xchg
lods
call
sbbb
lea
inc
mov
dec
nop
or
mov
ds
mov
mov
das
pusha
dec
pop
jmp
rol
popa
pushf
xor
or
mov
or
mov
into
ret
es
jmp
dec
pop
leave
xchg
mov
and
nop
xor
ljmp
sub
sub
cmp
sub
push
insb
dec
mov
cmpsl
inc
xor
cmp
sub
push
adc
mov
push
dec
jne
mov
je
push
inc
sbb
lret
adc
xchg
adc
rclb
sub
adc
mov
test
xor
adc
adc
xor
orl
stos
test
mov
jne
jbe
mov
inc
dec
ljmp
push
sbb
jmp
cmp
push
push
sahf
push
push
lock
push
push
sbb
or
loopne
inc
sbb
adc
adc
sub
xor
dec
addl
shrb
scas
adc
mov
lock
sbb
mov
repz
sub
mov
out
cmp
add
lcall
fdivrp
xor
lods
test
leave
ret
sub
sbb
push
lahf
sub
inc
pop
mov
cmpsb
sub
ds
jecxz
loopne
popa
cld
mov
stos
mov
sub
push
add
sub
data16
lcall
dec
add
int3
lahf
daa
adc
xchg
jns
sub
push
mov
rorl
push
mov
aam
jbe
push
aaa
mov
sub
xchg
cld
insl
sub
daa
fiaddl
or
xchg
push
aaa
aam
jb
movsl
pop
adc
pop
loope
xchg
push
out
sub
sub
int3
iret
sub
inc
xor
je
mov
cmp
mov
jl
iret
sub
fdivrl
pop
call
aad
or
insb
sub
mov
jbe
jl
pop
cmp
incb
mov
mov
jmp
nop
cltd
bound
sub
push
dec
cld
ss
inc
faddl
push
mov
les
jmp
push
push
das
fisttps
dec
push
rorb
cmp
cmp
pop
sbb
adc
mov
and
adc
cmc
mov
sbb
pop
mov
pop
lock
movsb
incl
sahf
dec
mov
inc
cmp
pop
push
xchg
fldcw
cmpb
jne
stc
inc
test
mov
dec
pop
pushf
les
in
mov
cmc
lret
ljmp
sbb
adc
ljmp
and
inc
push
and
clc
and
inc
or
cmp
or
mov
call
or
push
mov
and
mov
clc
and
xor
sbb
test
popf
push
mov
stc
push
xchg
orl
push
fdivl
mov
int
cmp
pop
cld
addr16
cwtl
insb
mov
adc
push
mov
push
pop
mov
mov
sbb
orb
popf
bound
fucom
inc
scas
jo
adc
inc
push
mov
lods
xchg
or
adc
clc
daa
pop
pop
jg
pop
inc
shrl
mov
inc
bound
mov
std
orl
addb
notb
mov
in
lods
xor
pop
jmp
and
push
lret
out
sar
hlt
mov
or
sbb
or
sbb
mov
add
xor
mov
or
pop
jae
mov
jno
addl
cmc
lret
jecxz
data16
adc
sbb
or
pop
mov
enter
loopne
addb
add
adc
mov
dec
adc
mov
or
mov
adc
cmp
xor
dec
push
mov
int3
push
addr16
cltd
push
or
mov
adc
adc
mov
pop
or
xchg
mov
push
nop
out
jne
adc
pop
out
lea
xchg
fwait
xchg
std
xor
sub
and
dec
sbb
mov
pop
fists
incb
or
out
adc
sub
or
arpl
cld
mov
cltd
arpl
lret
dec
clc
jae
cmp
mov
adc
push
sub
arpl
mov
or
rol
add
push
jnp
scas
and
es
in
mov
cltd
popa
xchg
cltd
stc
test
in
xchg
push
std
push
movsb
lds
hlt
daa
pop
xchg
stc
sub
sbb
pop
pop
inc
mov
adc
fwait
test
mov
xor
int3
adc
cmp
cmc
xchg
pop
test
xor
xchg
dec
adc
inc
pusha
and
xchg
mov
sbb
sti
mov
dec
inc
mov
call
popa
or
hlt
lods
and
aaa
addr16
mov
loopne
lea
out
inc
push
adc
pop
mov
xchg
leave
xchg
data16
add
call
stos
xor
or
mov
cltd
mov
in
push
adc
cmpsl
lods
ret
jle
sub
stos
add
in
add
add
addl
add
dec
push
pop
cmp
cmpsl
outsl
mov
jnp
add
popa
or
cmp
mov
or
subl
jo
in
outsb
and
cmp
or
adc
dec
ss
sub
mov
inc
orl
add
xchg
or
push
sub
push
lods
inc
cmp
push
mov
es
or
mov
xchg
push
inc
mov
movzbl
or
sar
jmp
fcompl
xor
shl
decl
sub
shrb
dec
daa
les
dec
aad
pop
sub
loopne
popf
or
jbe
add
sbb
popa
insb
call
mov
das
add
jns
push
pop
mov
sti
fisubrl
ja
cmp
fdivrl
mov
sbbl
faddl
mov
adc
inc
or
and
mov
sub
jmp
mov
out
push
clc
ret
and
cwtl
xchg
call
cli
or
push
stc
add
jle
or
mov
inc
repnz
xchg
jmp
adc
in
mov
sarb
or
lods
fsubrl
mov
decb
pop
data16
lahf
push
rol
stos
movzwl
xchg
mov
dec
insl
mov
mov
adc
lds
psrlw
lahf
cmp
addr16
psubw
lods
sub
push
addr16
jbe
xor
add
call
xor
pop
movl
inc
loop
ret
aaa
jb
or
lds
or
push
push
xchg
stos
xchg
sbbb
sbb
mov
movsb
aad
and
pop
pop
test
hlt
mov
push
shl
ljmp
cmp
cmpsl
pop
lahf
jmp
pop
notl
inc
cmp
inc
mov
repnz
xchg
sbb
pop
fsts
xor
imul
dec
sbb
fldt
pop
push
mov
push
cli
push
cli
add
mov
lods
je
leave
and
sub
cmpsl
lcall
jns
imul
jp
adcl
daa
push
xlat
adc
and
lock
stc
adc
pop
call
and
mov
xchg
not
jno
rorb
add
xor
adc
sub
jge
inc
and
xlat
loop
adc
inc
inc
mov
call
add
xchg
adc
mov
in
loopne
enter
bound
push
sub
scas
or
stos
cs
popf
pop
data16
or
cs
and
xchg
add
adc
push
adc
fisubs
repz
xchg
jge
push
mov
in
or
lods
xchg
arpl
sub
test
cmp
lods
sbb
mov
push
movsl
pop
or
dec
and
xchg
aas
fstpt
jmp
and
movsl
adc
push
xor
iret
outsl
in
mov
and
pop
nop
mov
aam
aam
push
hlt
mov
and
adc
inc
adc
lea
fimull
pop
or
leave
push
sub
repz
jmp
hlt
adc
das
jle
cmp
je
test
lea
pop
ljmp
and
ds
lahf
scas
gs
mov
mov
sub
add
cmpsb
pop
dec
sub
mov
gs
xchg
leave
stos
lds
mov
daa
add
xlat
outsb
mov
adc
or
sbb
adc
xor
shlb
jmp
popf
push
imul
mov
xchg
cmp
cmp
sub
testb
inc
popf
mov
fadd
or
or
mov
dec
or
push
cmp
push
cli
jge
push
xchg
sub
push
pop
and
ja
cmpsl
fistps
loope
xor
sbbl
stos
mov
idivb
xor
scas
lods
pop
test
inc
fwait
and
mov
sub
cli
mov
push
loopne
push
test
add
push
mov
or
or
dec
sub
cmp
clc
test
inc
fidivrl
test
jmp
scas
incl
loope
push
call
pop
mov
and
loopne
shll
out
cs
inc
fs
mov
lahf
and
xchg
icebp
out
inc
cmp
xlat
pop
jle
in
jg
inc
pop
inc
xor
movzwl
das
cmc
inc
xchg
hlt
cld
ljmp
inc
and
in
leave
dec
push
push
jg
mov
nop
inc
mov
cmp
sti
lea
pusha
inc
hlt
mov
dec
in
and
mov
add
push
inc
jle
push
scas
lock
jmp
pop
mov
in
pop
jg
sub
cld
or
jne
mov
out
or
fists
mov
mov
punpckhdq
push
add
fistpll
daa
jmp
jne
repz
andl
fiaddl
jns
mov
rcr
dec
decb
popf
cltd
nop
push
shl
fwait
das
cli
jno
jne
das
cli
ja
mov
pop
inc
loop
jmp
out
mov
mov
jno
or
jmp
rcll
repz
test
sbb
ret
push
add
jmp
adc
push
mov
and
mov
enter
leave
and
dec
in
inc
les
ljmp
sub
inc
add
sbb
inc
or
cmpsb
inc
xor
sub
xchg
imul
and
loope
insl
popa
and
std
adc
mov
int
stc
lea
inc
sub
jne
dec
and
xrelease
pop
loop
lcall
xchg
mov
inc
xchg
sub
std
ljmp
cld
mov
outsb
das
push
push
sti
cs
xchg
pop
dec
movsb
test
or
push
subps
dec
mov
mov
in
mov
fisubs
imulb
jb
sarb
imulb
clc
dec
fistpl
add
xchg
jg
imul
out
cltd
inc
dec
xor
add
repnz
jecxz
push
dec
xor
fdivl
pop
data16
mov
inc
loopne
fnstenv
faddl
adc
fisubl
out
inc
cmpsl
cld
call
cmp
dec
push
mov
shll
je
sub
adc
xchg
inc
pop
sub
mov
gs
aad
and
out
in
add
cli
xor
or
push
lds
pushf
add
ds
incl
xchg
movsb
and
add
daa
scas
push
pop
add
fwait
jo
jbe
and
fwait
jp
add
repnz
push
cs
push
xchg
pop
pushl
pop
lret
jne
test
mov
add
push
or
add
inc
mov
jo
inc
and
jb
and
adc
mov
and
jmp
ja
std
jo
mov
cli
lods
pop
mov
scas
pop
inc
rclb
stc
test
enter
loop
or
lea
outsb
xlat
lret
mov
or
xor
icebp
jg
push
arpl
push
sub
dec
jne
dec
inc
sti
mov
out
dec
cmp
jge
outsl
imul
pop
xchg
mov
aaa
pop
lea
mov
dec
cwtl
call
or
orb
fists
fs
stos
sub
inc
mov
adc
aaa
dec
or
call
cmp
cmp
adc
or
push
sbb
push
les
push
daa
or
and
jge
inc
mov
mov
xchg
out
aas
xchg
push
and
push
cmpsb
cmp
cmp
insl
fdivrl
xlat
or
inc
adc
adc
mov
and
sub
loop
in
inc
mov
pop
adc
lret
add
fdivrl
jl
push
push
nop
cld
mov
movsl
jno
das
aad
rorl
mov
or
imul
pop
vphsubwd
adc
in
lock
pop
push
jmp
sub
aaa
cmc
rorl
outsb
cmp
mov
or
aaa
mov
mov
test
ds
fimull
insb
xchg
cmp
loopne
and
test
or
push
push
sub
and
rcrl
adc
and
bound
outsb
fs
mov
into
popa
sub
outsl
fistpl
or
mov
lods
movsb
test
push
push
inc
push
enter
test
push
mov
dec
lods
mov
adc
sahf
push
outsl
sub
pop
test
mov
xor
test
sbb
and
xchg
mov
fcmovnb
out
dec
in
jg
out
call
pop
out
xchg
xchg
xor
pop
and
sbb
pop
add
std
xor
jg
pop
das
andl
add
lock
out
popf
leave
and
das
sbb
cmc
cmp
in
pop
lahf
stc
jne
in
repz
pop
and
mov
fisubrs
jb
push
jne
cmp
or
cli
test
and
je
jmp
in
xor
pop
cmc
jno
or
ljmp
mov
mov
popa
call
das
mov
mov
adc
sub
mov
fldcw
movsl
add
inc
in
add
outsl
cld
add
xchg
pop
adc
rcll
inc
fs
pop
push
mov
jbe
lret
mov
xchg
leave
pop
js
cmpsl
jle
or
enter
lods
dec
int
cs
inc
mov
in
pop
and
out
movsb
test
push
cmp
enter
cmp
xchg
std
dec
jae
adc
addb
dec
mov
push
int3
leave
jbe
insl
cmp
mov
mov
mov
in
cmp
mov
or
cmp
adc
inc
sub
repz
test
sub
pop
cld
xchg
out
push
jle
stos
std
sub
xchg
add
ffree
push
std
bound
dec
fcoml
addb
pop
call
or
bnd
daa
pop
xor
sub
scas
and
xchg
mov
mov
jne
call
mov
or
pop
fcompl
mov
jnp
sahf
scas
leave
and
push
into
loop
adc
cmp
fsubs
pop
push
into
in
fsubl
stos
jmp
mov
sub
xchg
je
sti
bound
or
pop
cmp
shrb
rcrb
push
nop
lods
pushf
jecxz
lock
sahf
push
in
mov
push
hlt
sub
adc
movsb
push
mov
cmp
adc
pop
and
shlb
pop
mov
aaa
loope
or
and
xchg
jb
fisubrs
pop
insb
fcmovbe
fldl
imulb
mov
pop
hlt
call
insl
rorl
adc
mov
into
and
adc
cs
and
pop
dec
mov
fnstcw
push
dec
xchg
cwtl
sub
push
je
fistpl
adc
jno
lea
gs
aas
shrl
jb
and
dec
or
nop
mov
jno
sub
sub
test
mov
stc
and
pushf
inc
lret
add
push
call
adc
sti
leave
and
cmp
aad
mov
mov
cmp
dec
subb
or
fisttpll
adc
lock
mov
push
inc
mov
mov
mov
call
jmp
jne
clc
push
les
mov
sbb
decb
sti
sbb
cli
or
cld
and
wrmsr
mov
or
lret
xor
mov
in
or
insl
adc
arpl
pop
adc
pop
cmc
push
jno
dec
out
or
dec
push
pop
adc
aad
xchg
mov
stc
xor
leave
mov
das
add
je
mov
lahf
mov
test
gs
and
add
adc
negb
cltd
push
add
cmp
das
jne
jl
addb
inc
dec
dec
adc
add
mov
aad
sbb
jbe
pop
data16
lret
out
leave
jae
mov
mov
rcrb
fsubrp
js
mov
pop
or
push
pusha
inc
push
push
fisubs
jge
jl
adc
int3
add
mov
aad
out
xchg
xchg
les
decb
jne
jge
lds
shrl
push
jmp
mov
es
leave
jp
repnz
in
je
test
stos
rcl
cli
mov
jns
and
push
or
add
inc
mov
inc
jmp
or
xlat
jle
jmp
push
mov
in
incb
fs
stos
ds
fs
cmp
mov
push
orb
xor
push
adc
jmp
inc
jmp
mov
push
out
loope
cli
jne
lret
dec
lock
or
pop
mov
push
or
out
and
push
repnz
popf
fucomp
std
adc
push
xchg
popf
sub
lods
or
and
and
push
pop
repz
jg
iret
mov
nop
int3
xchg
push
lahf
and
andb
jnp
mov
adc
jge
adc
and
fxch
das
xor
adc
rcl
add
xor
mov
inc
mov
mov
and
push
and
xor
test
mov
mov
and
xchg
or
mov
lcall
fcoms
inc
jne
shll
mov
mov
pop
adc
add
dec
scas
cmpsb
mov
jne
xor
dec
cld
roll
mov
mov
out
lcall
mov
sbb
popf
pushf
xor
jmp
inc
imul
adcl
cmp
mov
or
fstpl
test
sub
lret
stos
dec
test
nop
sub
enter
push
dec
cmpl
mov
call
push
add
xlat
jmp
push
je
adc
adc
fadd
xorl
out
mov
and
cltd
out
or
mov
add
es
out
inc
inc
or
fadd
test
out
and
inc
xchg
dec
icebp
pop
ds
cmp
test
pop
rorb
adc
fstpl
mov
and
inc
or
sub
jns
clc
push
xchg
push
pop
scas
rorl
cmp
test
xchg
pop
mov
sub
shll
sub
push
and
pop
xor
mov
mov
clc
xchg
pop
out
rol
jno
xor
cmp
aad
test
dec
sbb
repnz
cld
icebp
cld
add
lock
fwait
xchg
adc
mov
or
cmp
mov
ss
aam
jecxz
scas
shl
in
adc
leave
push
xchg
inc
push
call
cmp
mov
dec
adc
dec
sbb
and
inc
cmp
testl
or
ss
add
test
mov
add
push
adc
push
popa
adc
and
in
aad
icebp
std
mov
mov
or
push
sub
shrl
cmp
rolb
les
stc
sub
adcb
adc
xor
and
inc
or
test
and
lods
lds
sub
or
cmp
sti
loope
cmp
pop
push
and
test
int3
adc
add
jne
push
cli
int3
roll
sub
fcompl
fs
mov
mov
daa
nop
mov
cmc
cmp
xlat
jns
add
clc
inc
and
lods
decb
leave
inc
call
pop
je
mov
sarl
or
xchg
sub
repnz
shll
cmp
scas
mov
mov
aad
test
jmp
xchg
dec
dec
sub
ds
inc
jnp
jo
jmp
xlat
sbb
test
rolb
push
daa
jbe
mov
xor
fstpl
or
decb
pop
and
adc
push
clc
clc
dec
dec
inc
xchg
push
xor
pushf
mov
das
pushf
jecxz
in
and
jmp
push
or
out
loope
sub
lds
roll
repnz
push
call
jmp
xor
xchg
cmc
add
fucom
mov
shrb
loopne
or
push
xlat
xchg
cwtl
lea
movsb
jae
dec
xlat
pop
sub
pop
xchg
in
aas
jl
nop
xlat
jl
xchg
std
xor
nop
sbb
cmp
fwait
and
ss
jge
aas
mov
daa
pop
into
pop
mov
xchg
xor
and
int
hlt
shr
sub
pop
lock
and
sub
pop
pushf
call
or
and
add
xor
cmpb
flds
in
out
loop
je
in
nop
dec
cli
lods
sub
adc
repnz
sub
or
push
jmp
mov
push
es
jg
dec
inc
sub
push
mov
push
enter
fldenv
cmp
cmp
les
add
xchg
cmp
cli
adc
ret
ja
jne
jge
xchg
and
add
jmp
pop
je
dec
call
cmp
mov
adc
pusha
lcall
sbbb
out
add
call
and
sub
cmp
and
mov
adc
xor
push
loope
sub
cmpb
iret
inc
fcmovb
pop
add
lds
subb
ficomps
add
sbb
and
cs
and
gs
test
mov
dec
adc
push
test
cld
jmp
ret
push
inc
sbb
std
sub
test
rclb
mov
mov
sbb
fbstp
ljmp
adc
jb
push
sub
dec
adc
test
push
data16
pusha
int3
jbe
rcrl
mov
ss
jno
mov
xchg
addl
xor
aas
xchg
xchg
inc
cmp
loope
fnstsw
adc
and
jmp
or
loop
pop
ss
fs
xchg
aaa
adc
int
cmp
lods
xor
clc
in
push
aas
test
pop
mov
repz
inc
or
shlb
or
xor
sub
push
pop
dec
dec
and
je
cs
sbb
insl
and
and
or
push
and
sbb
inc
add
or
xor
subl
mov
ja
jmp
mov
sbb
stos
subl
aas
hlt
divb
push
xchg
loop
test
push
jl
lahf
push
pop
lods
ss
or
test
out
mov
call
pushl
or
pop
sub
loop
flds
aas
sub
adcl
loope
fcompl
and
xchg
and
xor
sub
push
ja
fbstp
mov
mov
mov
sub
outsb
push
movsb
movsl
mov
stos
or
mov
stc
add
pushf
mov
mov
pop
dec
jmp
repnz
push
cmpl
sub
jl
sub
stos
cmp
cs
jne
in
xchg
mov
cmc
mov
adc
sub
test
mov
jbe
in
mov
inc
pop
mov
jno
adc
enter
and
add
mov
data16
sarl
push
popl
jo
imulb
mov
add
sbb
or
xchg
pop
push
cmp
pop
sarb
test
bswap
or
sub
call
imul
xorl
fiadds
adc
repnz
arpl
movsl
jge
xchg
push
inc
mov
sub
mov
mov
dec
push
testb
mov
push
movsb
mov
les
xor
es
cmp
mov
mov
cmp
inc
add
cmp
les
and
jmp
divb
push
sbb
jno
mov
and
jne
inc
dec
dec
dec
bound
cs
sbbl
xor
sub
inc
mov
shlb
dec
mov
repnz
pop
dec
fidivrs
aad
add
dec
cmp
das
fdecstp
cmp
loop
adc
pushf
mov
mov
mov
push
xor
inc
bound
aam
dec
call
mov
dec
stc
xor
sub
stc
lds
add
scas
sbb
push
nop
sub
xor
jl
jl
push
jne
stos
out
ja
add
movswl
hlt
push
imul
xchg
cwtl
in
pop
mov
repz
cmp
xchg
addr16
xor
scas
lahf
add
loopne
mov
gs
jl
pop
xchg
ret
loopne
dec
decl
mov
inc
loopne
test
and
inc
sar
lret
test
scas
movsl
jp
aam
dec
or
repz
cmpsl
xchg
sub
call
cmpsl
jnp
mov
or
ret
imul
mov
mov
les
cmp
inc
fcoms
leave
ret
cli
aam
xchg
mov
jmp
mov
or
sub
or
xchg
sbb
mov
inc
push
orl
mov
inc
xlat
lods
mov
mov
inc
mov
sbb
xchg
sub
xchg
orl
xor
jge
cmc
pop
das
loop
jg
ss
jl
repz
pop
cmp
lahf
lock
cld
aas
push
dec
push
inc
fsubrl
mov
clc
cmp
nop
out
mov
push
pop
push
call
inc
outsl
add
aam
stc
mov
push
inc
adc
cmpb
out
sti
xchg
sbbb
adc
stos
xchg
xchg
mov
imul
mov
clc
mov
imul
cmc
in
adc
mov
je
call
mov
dec
loopne
cmpsl
sbb
jo
sub
adc
mov
sub
scas
insb
idiv
push
push
into
fs
pop
push
push
mov
push
sbb
fsubrl
or
mov
nop
stos
ss
std
sub
or
mov
loope
ljmp
jne
sub
xor
dec
les
mov
in
or
add
sbbl
leave
inc
sub
lret
add
sar
pop
call
or
adc
xor
adc
cli
sub
mov
or
jmp
lods
sub
mov
mov
je
push
call
ja
fs
add
call
cmp
testl
es
xchg
push
cmp
inc
push
mov
sbb
jne
mov
xchg
roll
pop
push
les
xor
add
jno
lea
cltd
dec
into
mov
imul
cmp
or
pop
fmuls
and
mov
and
xchg
loopne
mov
inc
mov
adc
add
pop
xchg
movsb
or
mov
stos
or
aad
add
sbbl
jne
popf
jge
and
add
and
xchg
cmc
stc
loopne
pop
pop
test
xor
mov
cmpsl
sub
adc
inc
aad
jg
xchg
push
pop
andl
sahf
ficomps
repnz
dec
out
push
cld
movl
xor
mov
jge
push
leave
adc
dec
adc
iret
push
xchg
jne
pop
inc
sub
mov
mov
jae
pop
push
push
dec
test
cmp
cmp
adc
adcl
jnp
nop
mov
xor
std
inc
and
mov
lret
and
or
push
das
mov
ljmp
out
lods
out
push
sub
xchg
cmp
adc
push
adc
add
in
into
jb
outsl
movsb
jle
xorb
out
bound
pop
adc
stos
and
push
lds
jmp
enter
stc
cli
arpl
jns
mov
aad
adc
jmp
icebp
mov
and
and
sti
cltd
adc
loopne
fistl
outsb
iret
dec
imul
lock
mov
mov
adc
sbb
addb
pusha
scas
lock
sbb
inc
orb
dec
pusha
push
aad
jecxz
adc
push
add
push
fcompl
rcll
push
pop
jne
popa
hlt
xchg
mov
lahf
mov
testl
push
push
inc
mov
push
cmp
and
adc
add
xor
repz
xor
push
cmp
dec
cmp
outsl
and
stos
cmp
ficompl
adc
mov
adc
mov
cld
mov
adcb
push
out
pop
sbb
stos
les
movsl
subl
sbb
inc
inc
push
xor
minps
xchg
into
mov
mov
xchg
movups
jl
pop
push
enter
xchg
out
xor
scas
adc
mov
mov
push
dec
add
pop
stos
cs
xor
mov
out
sub
push
imul
call
imulb
into
or
inc
and
mov
lcall
mov
jbe
sbb
testb
mov
cmc
push
loopne
jmp
out
sub
jp
jmp
jne
dec
fstpl
dec
jle
fistps
cmp
add
push
out
mov
loopne
rcr
popf
test
sti
faddl
out
mov
adc
jne
aas
mov
pusha
jae,pn
pop
pop
into
out
popf
pop
pop
call
jmp
cli
jnp
push
mov
jmp
sub
push
mov
mov
mov
dec
dec
push
call
lret
or
sbb
cs
cli
imul
and
and
push
jmp
dec
jg
dec
pop
into
mov
sbb
xor
dec
push
pop
pop
loop
inc
repnz
dec
stc
inc
add
jecxz
pop
or
or
jp
popa
pop
inc
inc
pushl
or
bound
pop
cmp
stos
sub
pop
dec
or
and
push
push
cld
adcl
test
dec
dec
mov
jge
mov
sbb
and
cmp
xchg
xor
lock
inc
loopne
sbb
testb
inc
adc
dec
push
mov
out
sub
fsubrl
movsb
mov
jmp
and
jmp
jnp
cmp
adc
add
xchg
adc
in
int3
rorb
in
jne
rcll
mov
jne
push
aaa
push
jg
popf
dec
pop
repz
and
cmp
dec
pop
xchg
fldcw
jecxz
and
xlat
data16
testb
loop
mov
cmpsb
jg
and
lahf
sti
popf
pop
push
xor
inc
lret
daa
adc
inc
pop
jle
push
mov
test
pop
scas
popf
add
mov
dec
push
stc
cmpb
fisttps
lods
hlt
pusha
mov
dec
popf
pop
insb
in
push
je
sub
leave
pop
xor
sbb
and
mov
outsb
lods
sub
sbb
push
jo
enter
jmp
adc
test
mov
das
push
or
js
aad
jo
jl
adc
mov
jmp
shl
pop
mov
jg
rorb
je
jmp
push
fwait
shll
popa
aad
mov
pop
or
mov
pop
call
inc
mov
or
rclb
jmp
rcll
push
jnp
mov
negb
test
xor
push
push
into
mov
jge
or
inc
or
pop
push
add
push
jo
aam
inc
dec
roll
sbb
mov
stos
call
mov
add
shlb
nop
mov
add
test
jg
adc
mov
scas
pop
lea
xor
xor
test
scas
int
call
inc
pop
xchg
jl
icebp
push
push
mov
pop
xor
push
popa
rorb
test
inc
xor
out
jmp
sbb
stc
test
inc
push
je
movsl
lea
mov
add
enter
jbe
cmpl
jnp
pushf
ret
dec
movsl
dec
xor
xor
sbb
and
pop
cld
fists
outsl
and
mov
sub
test
sub
fsubp
inc
dec
cs
mov
xchg
das
push
and
enter
mov
cmpb
sub
push
gs
mov
push
inc
rorb
pop
mov
call
cmp
inc
dec
roll
sahf
pop
sbb
and
inc
aam
out
adc
jle
mov
lods
mov
mov
lds
pop
out
xchg
mov
andl
cmp
pop
loope
cli
inc
addb
push
stc
sub
pop
cmp
ljmp
and
add
add
icebp
insb
popa
add
inc
sub
cmc
push
sub
imul
lretw
sub
inc
cmc
and
jb
jo
mov
movsl
imul
inc
xor
push
push
sub
testb
push
call
aaa
add
push
push
push
int3
push
sub
jo
dec
push
cld
cmp
lea
movsl
mov
mov
movsb
or
and
lcall
bound
push
mov
xchg
dec
and
adc
push
push
ljmp
dec
sub
inc
add
cwtl
es
xchg
dec
sbb
imul
into
daa
arpl
out
push
les
adc
mov
dec
mov
bnd
pop
cmp
rcll
and
mov
mov
in
cmc
and
pop
dec
add
mov
and
mov
stc
sub
dec
jne
mov
jmp
cltd
call
and
lock
xor
in
je
lret
sbb
push
movsb
mov
stc
in
or
sti
dec
es
xchg
fsubrp
imul
push
shrl
hlt
push
sub
out
pop
imul
hlt
inc
fmull
out
cltd
xchg
mov
push
test
mov
lock
dec
push
mov
test
movsl
aas
push
push
jmp
mov
jae
push
jb
pop
xchg
mov
xchg
jmp
inc
cli
or
jge
js
push
adc
pop
lea
mulb
gs
mov
fidivrs
scas
push
push
aaa
xchg
and
outsb
mov
xchg
into
in
icebp
ret
inc
test
les
fcomps
xor
lock
stos
pop
jmp
pop
cmp
outsl
sbb
cmp
rcrl
add
xchg
pop
adc
pop
mov
inc
adcb
or
rsm
push
pop
popf
and
dec
push
cmpsb
xchg
sub
std
sub
cmp
or
dec
aam
xchg
push
add
decl
xchg
movb
les
sbb
mov
cmc
in
jnp
and
stc
pop
fildl
adc
maxps
jecxz
mov
scas
ds
ret
adc
adc
repz
xchg
sub
xchg
lea
dec
mov
pop
inc
xchg
add
xchg
fdivl
int3
stc
add
bts
test
mov
xchg
stos
or
xchg
cs
adc
xor
xor
inc
pop
push
mull
xchg
pop
pop
jle
jmp
adc
and
inc
notl
je
bound
and
mov
shll
cmp
fisttpll
push
dec
push
xlat
mov
ror
push
adc
push
call
fnstsw
jg
add
int3
dec
sub
pop
loope
mov
bound
xor
mov
dec
or
mov
or
cli
int3
pop
or
jp
sbb
loope
ret
jg
gs
mov
push
push
test
mov
mul
or
lds
jne
lret
xor
xchg
adc
leave
movsb
jecxz
hlt
add
imul
jg
sbb
in
lock
xor
push
loopne
push
rclb
ficoms
inc
jge
push
mov
mov
jle,pn
ss
dec
mov
push
xor
inc
fs
mov
mov
decl
cwtl
out
push
or
loope
push
xchg
mov
ret
popf
fsubs
std
cmp
lret
aam
dec
sbb
hlt
jmp
or
or
or
adc
push
xorl
push
cmp
sub
cmp
xchg
or
inc
adc
cmp
das
scas
xor
mov
js
xchg
mov
test
push
das
leave
lock
dec
or
jb
sub
es
adc
jge
pop
imul
push
push
push
imul
push
imul
sub
test
adc
add
push
aam
push
push
je
test
xchg
sub
mov
and
mov
leave
jle
mov
jb
imul
push
mov
push
je
pushl
add
pop
push
aas
jb
push
and
and
add
dec
dec
inc
push
gs
cmp
pop
imul
mov
test
mov
sahf
ljmp
inc
and
fsubl
adc
pop
das
bound
fistpl
lds
sbb
je
aad
data16
xchg
cmc
cmp
sub
or
daa
pushl
jns
dec
mov
push
inc
cmp
xchg
adc
ficoml
add
xorl
mov
and
lds
inc
dec
sysret
sti
cmp
dec
add
mov
jmp
pop
jns
push
add
cltd
jecxz
mov
jns
push
mov
movsb
xchg
sub
inc
and
inc
jo
test
adc
rclb
sub
push
repnz
jmp
mov
insb
pop
lret
cmc
int
inc
stc
popf
sbb
test
jbe
lods
inc
push
push
push
aam
sub
xlat
inc
loopne
adc
add
pushl
and
inc
in
mov
and
jge
mov
and
jmp
shlb
into
adc
pop
or
mov
movsb
sbb
fcompl
and
jle
and
fcoml
icebp
pusha
push
cld
push
adc
lock
xor
push
pop
mov
cmp
pushw
sbb
or
sub
lds
mov
fmull
sbb
xchg
xchg
mov
add
jo
in
add
pop
push
push
hlt
xchg
shll
cmp
xor
push
lods
and
mov
sbb
adc
pop
mov
sub
jle
loope
cmp
pop
cld
xchg
mov
orl
daa
xor
sti
cmpsb
push
adc
int
dec
xchg
std
and
and
bound
ja
lods
movsl
jp
push
mov
je
js
cmp
xor
clc
xchg
loope
ficoms
xor
dec
add
inc
sub
jne
stos
int3
or
push
cld
js
mov
lret
sub
adc
or
xor
xchg
and
xor
ja
fcomps
jecxz
insb
ficoms
xchg
scas
push
lea
push
cmp
sbb
cmp
xor
pop
xchg
mov
dec
mov
xchg
sarb
fldl
sub
push
js
xchg
stc
ret
xchg
pusha
mov
jl
pop
xchg
push
add
daa
lea
cmpsl
push
or
ss
mov
out
repz
andl
ja
xor
mov
jge
fucom
arpl
mov
pop
into
call
cli
aaa
fimuls
sub
cld
aam
mov
imul
jmp
and
adc
mov
jge
cmp
sub
repnz
or
adc
int3
orl
mov
or
sub
aaa
adc
int
punpcklwd
cmp
ret
testl
mov
jne
pop
inc
push
mov
cmpsl
jge
mov
sbbb
dec
decl
cmc
xor
call
cld
arpl
pop
inc
sbb
mov
inc
jae
xor
push
test
js
mov
or
and
adc
sub
call
std
hlt
pop
loopne
stc
pop
sub
and
pop
shr
sar
mov
bound
xor
test
pop
push
fcoml
adc
in
je
cmc
lds
cmp
jnp
imul
daa
fdivrp
mov
ds
jbe
pop
push
mov
push
or
xor
sub
scas
cmp
shr
cli
push
adc
sahf
mov
pop
inc
rcrb
nop
test
sbb
lcall
lea
inc
dec
loopne
push
push
mov
decb
rcrl
dec
fstpt
movzwl
push
rorb
scas
xchg
cmpsb
sub
outsb
dec
aas
mov
mov
xlat
xor
and
stos
cmp
mov
pushf
xchg
cld
cld
mov
push
mov
mull
mov
dec
push
or
push
inc
dec
jae
mov
loop
and
mov
mov
xchg
hlt
dec
jmp
inc
mov
orb
mov
mov
or
nop
sbb
adcl
clc
dec
add
pop
fisubrs
sbb
popf
push
adc
aas
push
fstl
sbb
jle
ret
out
adc
jmp
ds
or
and
ljmp
xor
mov
mov
and
jb
inc
bound
das
imul
in
stc
pop
xchg
movsl
sahf
cmp
icebp
and
push
mov
and
testb
mov
outsb
mov
dec
jne
int
jne
or
mov
fdivrl
mov
add
push
mov
daa
call
mov
lds
xor
je
adc
repnz
or
adc
add
outsl
mov
mov
loope
add
les
mov
cmp
inc
push
push
pop
leave
cmp
mov
adc
xchg
pop
push
sbb
cmp
xor
clc
call
pop
fldl
adc
add
repz
outsb
pushf
adc
mov
or
add
xor
and
jne
mov
add
sub
mov
test
sar
add
test
pop
xor
push
cmc
xchg
pop
movb
jnp
arpl
pop
push
add
test
or
sub
inc
rcrl
iret
popa
sbb
add
push
pop
cmp
push
ss
push
and
aaa
pop
rclb
scas
xchg
adc
popl
jmp
std
jnp
scas
mov
mov
mov
or
jo
jecxz
daa
mov
ret
mov
iret
sbb
sbb
add
inc
sbb
push
idiv
js
cmp
and
xchg
xlat
scas
mov
add
int3
xor
out
out
xor
pop
xlat
sub
inc
push
ret
cmovs
hlt
jnp
cmp
mov
push
scas
les
push
je
sbb
or
dec
xchg
dec
cs
push
push
push
adc
outsl
arpl
jne
outsb
je
jb
jo
cmpsl
ja
mov
inc
test
add
jbe
arpl
and
pop
outsb
push
adc
fdivl
rcll
dec
or
or
out
mov
adc
push
or
adc
add
mov
add
movl
pop
or
fs
dec
or
enter
adc
adc
adc
adc
lret
bnd
icebp
out
pop
jae
insb
and
decb
test
je
push
test
add
inc
or
pop
pop
push
fldcw
xchg
push
push
sub
popa
adc
and
push
and
cmp
jb
sub
or
fcomps
into
and
add
push
decb
loop
vmread
sbb
jl
dec
add
and
push
dec
data16
sbb
push
aad
adc
fs
mov
sub
dec
push
mov
stos
xor
andb
leave
jg
and
inc
cltd
data16
or
dec
clc
mov
hlt
pop
inc
icebp
and
fcomps
hlt
in
adc
gs
into
dec
pusha
cli
push
xlat
dec
pop
inc
cli
mov
mov
out
cld
pop
das
das
fdivs
jle
fisttps
jmp
sub
and
cs
outsb
adc
mov
and
mov
jo
lret
in
movsb
add
sti
cltd
sub
push
inc
je
negl
mov
call
and
add
sub
and
inc
cs
push
loopne
enter
ds
jmp
in
mov
or
adc
iret
fnstcw
pusha
inc
and
or
ss
and
nop
push
and
sub
and
xchg
test
aas
sahf
not
or
sar
mov
xor
or
leave
mov
push
mov
mov
cmpsb
jmp
mov
out
cld
fisubrs
fbld
pop
out
enter
and
jbe
dec
sub
hlt
cmp
inc
sub
outsl
sbb
repnz
push
mov
mov
repz
mov
jno
dec
pop
orb
test
cmc
enter
sub
push
and
push
mov
mov
mov
inc
shll
mov
xor
sbb
aam
inc
pop
mov
and
sbb
jp
dec
cmp
ss
adc
xchg
lcall
and
push
add
in
mov
pop
outsb
adc
jle
or
aam
xchg
sbb
or
xchg
bound
out
adc
in
call
mov
movsl
subl
push
inc
xchg
adc
pop
push
jge,pn
cmp
mov
movl
mov
and
je
push
stos
add
xor
call
push
pop
les
pop
decb
pop
push
lret
mov
xor
adc
sbb
fiaddl
mov
fisubs
dec
push
cmp
shl
push
xchg
adc
or
in
std
mov
pop
inc
enter
jnp
push
jne
cmc
sbb
imul
addr16
mov
cld
int3
rclb
jmp
cld
push
rcll
call
das
and
popf
bswap
ss
adc
sahf
cmp
or
pop
inc
lock
mov
push
pushf
std
mov
sarb
mov
inc
jg
mov
dec
adc
cmp
shlb
jl
cmp
js
orl
call
push
dec
mov
divb
loopne
jbe
adc
mov
fsubs
mov
and
push
cld
repz
js
push
and
ret
inc
hlt
adc
inc
ret
aas
hlt
push
pop
fbstp
mov
adc
or
add
push
cli
in
pop
inc
mov
lods
sub
mov
push
and
movsl
mov
out
mov
jle
out
adc
dec
or
jecxz
mov
mov
or
fdivs
mov
xor
inc
or
xchg
roll
dec
dec
pop
jne
scas
mov
out
stos
xchg
cs
pop
mov
pop
mov
repz
iret
cmp
stc
inc
test
cmp
add
push
push
mov
mov
adc
mov
xor
mov
add
and
call
into
or
orl
shll
fs
mov
int3
inc
mov
rolb
push
test
pusha
hlt
stos
cld
fmuls
jne
fstps
push
push
mov
jmp
aam
call
stc
daa
daa
frstor
or
and
xchg
mov
mov
cltd
jmp
mov
push
popf
adc
in
mov
fildl
test
cmp
mov
jg
jmp
push
loope
roll
adc
add
mov
push
stc
lahf
mov
mov
sub
or
ss
incb
sub
mov
bound
mov
gs
push
xorb
xchg
ljmp
insb
mov
and
gs
or
orb
call
and
sub
add
lret
and
jb
xchg
out
lock
lea
add
push
clc
push
xchg
push
hlt
enter
clc
mov
clc
sub
or
call
sub
sbb
cli
or
mov
and
loop
negl
icebp
xor
pop
push
mov
cmp
cmpsb
or
jmp
ljmp
jmp
movsb
cmpsl
jp
test
test
imul
or
pop
mov
pop
sbb
or
dec
ret
int
xchg
sub
mov
add
push
nop
pop
mov
ds
test
jns
pop
ret
and
rclb
mov
sbb
icebp
jge
enter
add
fnstsw
das
add
push
test
jne
mov
pop
ljmp
sbb
test
mov
or
jl
shl
and
ja
add
push
in
andl
pop
cmp
or
daa
sbb
in
js
cmc
xchg
pop
mov
pop
sbb
cmp
add
cmc
and
push
les
pusha
in
fcoml
add
jns
sub
int3
adc
pop
add
jno
clc
dec
lret
inc
dec
clc
fs
ret
push
push
pusha
call
dec
test
js
sub
inc
and
dec
sbb
unpcklps
sub
push
lahf
jnp
movsb
cmp
mov
jmp
test
stos
test
xor
fwait
icebp
daa
insb
lcall
adc
js
lock
aam
or
aam
or
rcrb
jne
push
enter
dec
dec
push
ljmp
xor
cwtl
enter
cmp
push
pop
fldl
inc
mov
xor
adc
add
xchg
or
pop
jmp
and
rcrl
pusha
adc
add
push
decb
out
cmpsl
pop
insb
mov
in
push
ja
adc
popa
pop
clc
sub
in
iret
mov
push
ljmp
shlb
ja
out
inc
push
add
xor
cltd
dec
sub
xchg
imul
int3
sbb
daa
inc
xchg
push
je
scas
int3
jl
mov
inc
in
and
pop
pop
jb
push
cld
adc
cmpsb
xchg
in
test
nop
sub
aas
fistpll
shrb
push
mov
std
and
fistpll
out
inc
xor
jo
jnp
int3
xchg
stos
or
out
stc
jmp
dec
out
dec
test
icebp
inc
push
jbe
dec
xor
mov
dec
bound
pop
push
add
push
in
push
in
ds
sbb
imul
push
cmc
clc
dec
and
mov
pushf
cwtl
mov
or
das
push
cmp
jecxz
inc
dec
repz
cmp
nop
pusha
aas
les
out
and
xchg
ja
cmp
lret
pop
push
xor
mov
cmp
test
xor
cld
insl
int3
push
sub
xor
dec
push
mov
jle
movsb
ret
imull
hlt
lods
push
push
dec
xor
sub
leave
aad
fs
and
mov
sub
jmp
cld
push
push
inc
dec
lock
sub
out
dec
aaa
je
pusha
sarl
mov
test
jne
nop
addr16
pop
loopne
jge
jg
xor
test
movsb
mov
adc
add
sbb
dec
jmp
or
xor
push
sub
cs
mov
out
xor
or
pop
pop
lret
jge
sub
movsb
jns
xchg
mov
out
pcmpeqw
je
or
aad
mov
mov
mov
mov
sbb
sub
fnstenv
inc
out
sub
aaa
bound
cwtl
fnstenv
movsb
call
idivl
push
pop
call
adc
pop
cld
push
jg
xor
dec
nop
cmp
bound
push
movsb
pop
mov
fs
mov
je
cld
pushf
test
xor
lea
pop
dec
das
dec
test
lcall
stos
mov
or
aam
jle
out
or
repz
push
out
out
dec
adc
lock
fldenv
inc
xchg
je
push
pop
in
aaa
inc
lahf
rcrb
xor
ret
jge
call
scas
aam
rolb
in
xchg
popa
nop
adc
xchg
xor
jge
movsl
add
enter
push
dec
mov
mov
popa
sahf
jle
cmp
test
mov
add
call
adcl
mov
push
xchg
imul
pop
xchg
mov
xorl
repz
pop
xor
notl
addl
pop
and
or
das
push
sti
cmp
test
cmp
mov
mov
mov
ret
iret
cmp
lods
iret
rorb
lods
push
pop
mov
test
pushf
push
mov
sub
pop
call
test
aam
orb
std
shll
jge
test
dec
adc
push
adc
push
ja
pop
daa
cld
inc
jno
xor
push
dec
add
inc
out
test
mov
repz
imul
outsb
mov
jbe
jbe
push
or
jne
imul
pusha
push
cmp
jo
fadd
sub
je
sub
adc
mov
push
xor
mov
sarl
dec
into
orl
hlt
cli
aaa
mov
pop
add
testb
mov
sub
xchg
scas
push
call
call
gs
in
cs
clc
in
add
push
out
push
xor
jl
sbb
call
aad
sbb
xor
pop
imull
es
cmp
add
sti
lret
ja
xor
sub
mov
jmp
jnp
jo
int
int
stos
add
xlat
add
mov
mov
in
mov
movsl
xchg
div
push
inc
add
test
cmpsb
xadd
das
mov
imul
dec
mov
in
xchg
sub
andl
call
mov
fcmovbe
leave
bound
ret
push
mov
loop
add
or
pop
xor
add
xchg
mov
test
xor
cmc
mov
int3
mov
inc
adc
lret
jl
loope
or
sub
jle
cmp
pop
adc
out
gs
hlt
enter
inc
in
mov
inc
test
sti
ja
push
inc
lock
dec
adc
cmp
inc
in
cld
xchg
jno
in
and
int
cmp
mov
or
std
jle
in
dec
scas
iret
rorb
add
mov
and
pusha
sub
aas
pop
pop
int
and
pop
das
lods
mov
xchg
jb
inc
pop
xlat
adc
sub
in
mov
sbb
and
in
loopne
ret
adc
push
loopne
ja
stos
pop
sub
int
xchg
mov
pop
out
movsb
lahf
in
adc
inc
add
xor
push
adc
xchg
jle
and
or
lock
jle
adc
xchg
push
dec
ret
test
test
decb
pusha
call
into
sti
push
out
jb
std
in
inc
mov
daa
movntps
or
and
mov
add
jmp
mov
les
adc
sub
adc
cwtl
scas
pop
pop
and
in
sbb
in
jne
in
shr
lret
lods
push
push
cmpb
pop
cmp
or
adc
sbb
sti
xor
pop
sub
pop
xor
push
jns
fs
mov
adc
pop
rorl
or
mov
mov
mov
dec
mov
jne
mov
add
push
cmp
lds
fimull
mov
adcl
mov
fs
push
in
mov
shrl
inc
sbb
inc
jle,pn
cmp
in
mov
xchg
scas
iret
sub
orl
adc
inc
insl
into
sub
pop
jne
enter
inc
add
and
push
mov
nop
xor
or
xchg
cltd
aaa
sub
sbb
sub
pop
inc
cmpl
mov
or
jmp
je
adc
mov
mov
loop
cli
sahf
repnz
and
mov
stos
mov
mov
jae
xchg
dec
mov
aas
idivl
lret
adc
dec
dec
xchg
jo
filds
mov
out
and
push
push
xor
jecxz
rcrl
les
inc
hlt
lcall
inc
mov
add
jb
inc
sahf
dec
pusha
fdivrl
orl
push
mov
mov
push
or
mov
movsl
loop
cmp
popa
or
cmp
push
adc
adc
adc
adc
mov
push
add
stc
sub
aaa
je
push
test
sbb
dec
xor
pop
xor
adc
pop
xor
rcl
xor
nop
adc
inc
cmpl
xchg
jb
mov
push
leave
jmp
jne
je
into
and
or
rolb
xor
inc
nop
or
inc
loopne
xchg
inc
add
mov
adc
dec
push
cmp
inc
cmp
jge
push
addb
add
push
adc
cmp
orl
adc
jg
call
push
jmp
push
adc
jl
cmp
sub
mov
inc
pushl
call
mov
out
imul
stos
dec
pop
lods
clc
js
xor
arpl
lahf
addb
clc
pop
push
clc
jecxz
mov
dec
js
lds
push
add
sahf
dec
xor
jle
in
push
add
push
lea
icebp
pop
xor
mov
push
ljmp
add
xor
test
je
mov
ret
jmp
into
rcrb
int3
push
cmp
inc
nop
and
aam
outsb
lret
add
adc
push
shlb
dec
clc
dec
shl
pop
xor
push
jle
jmp
dec
es
adc
or
mov
test
add
or
out
scas
movsl
sub
scas
dec
cwtl
gs
inc
mov
push
xchg
or
mov
fldt
call
jne
xchg
dec
dec
nop
sub
push
scas
addr16
inc
je
xchg
lcall
shrb
clc
call
cmp
mov
inc
rclb
push
add
xchg
add
xchg
and
fdivl
xor
test
mov
ret
movsl
pop
adc
lahf
loope
dec
lods
and
dec
clc
mov
out
stos
mov
xchg
xchg
xchg
add
dec
lahf
jl
jmp
xchg
cwtl
in
leave
push
clc
add
push
je
insl
mov
xchg
jnp
xchg
jne
gs
mov
pop
pop
mov
jae
push
sub
xchg
call
pop
je
aad
inc
loopne
je
mov
addl
sti
aas
and
pop
mov
mov
pop
lock
test
xchg
xor
adc
adc
rep
cmp
cld
dec
hlt
leave
pop
shrb
mov
cs
cli
pop
dec
pop
fsubrs
pop
inc
or
mov
iret
xor
and
cmpsb
or
js
movsl
lods
test
imul
hlt
inc
adc
sbb
adc
xlat
adc
pop
in
xchg
xchg
lods
leave
adc
and
xchg
and
scas
jmp
sti
cwtl
mov
sbb
into
jl
xor
imul
fisubrs
adc
mov
test
inc
push
adc
push
daa
fcoml
sub
adc
cltd
mov
adc
mov
dec
mov
mov
inc
test
jge
pop
mov
das
pop
ss
stc
es
sub
adcb
mov
sbb
push
cmpl
jne
push
outsb
test
jle
pop
sar
or
loop
push
inc
mulb
cwtl
ja
or
addb
cs
daa
jne
dec
movsb
xchg
and
out
mov
sub
cld
pop
sbb
xor
pushf
sbb
movsl
jne
jmp
in
je
rorb
scas
lock
ret
sbb
sti
addr16
xchg
and
push
f2xm1
mov
push
push
je
int
xchg
push
add
movsb
sbb
add
adc
test
aam
int3
inc
popf
lcall
fmull
dec
pushf
sub
and
aas
or
sub
mov
in
mov
fdivrl
xlat
scas
hlt
fsubrs
test
lea
filds
cli
sarl
daa
mov
mov
fnstenv
adc
daa
jmp
push
push
int
push
imul
sub
stc
punpckhwd
sbb
in
or
dec
scas
adc
mov
andl
fwait
dec
fdivr
push
and
xlat
fistpll
and
inc
movsl
dec
sub
pop
cmp
notb
lods
mov
sahf
cli
push
int
and
cmc
xchg
or
xor
pop
push
mov
pop
enter
mov
sub
sub
es
sbb
gs
inc
sub
adc
fdivrl
stos
test
mov
mov
daa
aas
push
pop
cmp
daa
jg
je
ret
lret
sahf
jns
pop
hlt
scas
xor
jmp
sub
leave
ljmp
cltd
mov
and
ljmp
or
and
jle
xchg
jmp
push
fs
test
shrb
stc
adc
testl
mov
out
xchg
xor
sbb
in
lock
outsb
dec
nop
arpl
or
sbb
das
rcll
xchg
xchg
out
xlat
fidivl
jl
push
jae
lahf
lods
jl
in
push
mov
pop
das
xor
cld
push
pop
inc
sbb
or
addb
add
push
fimuls
sbb
mov
pop
dec
or
or
push
in
cmpsl
xor
dec
lret
dec
pop
gs
sub
and
fsubr
out
lret
rcll
add
add
push
jmp
or
cmpl
fdivs
rcrl
inc
add
clc
cmp
pop
pop
cmp
gs
inc
sub
and
js
arpl
sbb
or
and
cmp
inc
cli
cmp
inc
inc
int3
out
enter
mov
cmpsb
cltd
inc
repnz
dec
lcall
and
movl
jae
sbb
adc
sbb
push
inc
adc
jns
jae
daa
pop
push
sub
add
pop
jmp
je
mov
mov
sbb
xor
movaps
ret
jecxz
or
insb
sahf
ficomps
imull
jmp
in
push
test
out
mov
xchg
mov
lds
icebp
leave
mov
sbb
pop
leave
cmp
ficomps
push
imul
dec
incb
and
mov
call
xchg
ss
sbb
cwtl
push
push
inc
cmp
je
add
popa
xchg
outsl
test
int
ja
xchg
hlt
pop
sti
gs
mov
fcmovbe
pop
push
push
adc
popf
dec
outsl
mov
mov
dec
or
cwtl
push
leave
or
push
sub
xor
adc
fisttpll
sbb
insb
sbb
stc
jns
lods
and
ss
adc
popa
mov
adc
loopne
lock
jmp
adc
mov
ret
mov
cmp
push
jnp
pop
jmp
pusha
scas
inc
ja
push
mov
xor
mov
push
dec
sbb
inc
push
push
outsb
cmp
jbe
jb
popa
insb
outsl
insl
lret
push
inc
outsl
jno
repnz
pop
or
jae
loope
inc
adc
adc
push
cli
dec
pop
dec
dec
cs
dec
sbb
cwtl
push
mov
iret
or
xchg
mov
sub
das
jae
mov
jp
sub
push
popa
aaa
nop
mov
cltd
mov
and
pop
mov
les
push
xor
sbb
addb
test
push
jns
popa
xchg
inc
js
test
mov
push
push
push
or
je
loopne
mov
adc
popa
pop
push
dec
int3
mov
sbb
jo
jo
rorl
inc
outsl
insb
les
negl
aam
inc
ss
inc
fcoml
test
bound
inc
int3
sub
mov
dec
xchg
pushf
and
test
dec
dec
mov
or
outsl
adc
adcb
push
cmpsb
cmp
mov
xchg
cmp
jb
into
mov
scas
inc
popa
jbe
and
mov
push
add
leave
dec
stos
arpl
sub
mov
inc
cmp
lret
xchg
les
clc
adc
and
arpl
dec
sub
fmuls
cwtl
pop
mov
or
add
mov
ja
aam
movsl
pop
loope
ret
shl
xor
leave
pop
fwait
xor
adc
dec
mov
xchg
dec
cmc
inc
fmuls
cwtl
add
sub
adc
push
and
dec
rorb
mov
and
aam
call
arpl
or
bound
js
test
es
daa
sub
mov
mov
ljmp
ret
mov
sub
cmp
incb
xor
ret
notl
jne
int3
mov
mov
xchg
sub
rclb
pop
cmc
add
outsl
mov
pop
sub
add
cmp
jne
sbbb
ljmp
and
repnz
bnd
je
scas
xchg
insb
pop
sub
sub
xlat
jne
ds
xor
inc
and
ljmp
data16
jl
add
in
mov
cld
adc
adc
xchg
xlat
lcall
rclb
sub
sub
mov
into
xchg
cld
lcall
inc
ficompl
xchg
jg
or
add
cmc
sub
lods
cmp
lods
mov
test
test
inc
and
push
call
std
outsl
adc
sub
popa
negl
fsub
inc
loope
dec
out
in
shlb
adc
or
hlt
and
sti
shlb
std
rcll
xchg
rcl
pop
lret
dec
iret
pop
and
arpl
push
test
movl
gs
dec
and
xor
adc
adc
dec
inc
ss
sbb
bound
jl
adc
test
cmpsl
imul
adc
sbb
push
mov
or
mov
iret
jmp
push
sbb
stos
mov
notb
cmp
mov
cmp
out
int3
pop
mov
mov
psubsb
ss
or
dec
or
or
or
adc
bound
lods
ror
idivl
bound
pushl
sbbl
dec
push
cmp
repz
mov
das
cs
push
or
or
mov
repnz
xor
mov
mov
call
nop
cwtl
shlb
test
or
pop
pop
jmp
mov
mov
pusha
test
push
xchg
ljmp
adc
dec
push
inc
dec
out
enter
inc
push
data16
or
fs
or
or
adc
ljmp
or
lea
sub
in
mov
pop
mov
cltd
xor
ret
movsb
iret
xchg
and
or
je
lahf
inc
fadds
adc
daa
rcr
push
leave
push
stc
or
leave
orb
dec
add
daa
pop
sub
aas
push
xchg
in
std
test
les
mov
adc
sub
call
push
movsb
mov
add
push
fcoms
clc
and
and
paddsb
pop
cmp
sarb
dec
pop
incl
and
or
cmpb
insl
xchg
pop
bound
repnz
adc
add
xchg
sub
mov
xchg
fsubs
mov
cmp
sub
ficomps
jmp
dec
push
test
stc
out
outsl
mov
loop
sbb
int3
jg
lahf
hlt
rol
push
jne
fsts
push
shl
add
movsb
adc
inc
and
sbb
add
hlt
imul
ljmp
stc
jb
in
fcomps
sbb
adc
iret
rorl
mov
jmp
cmc
insb
adc
mov
sti
xor
or
pop
or
inc
and
dec
int
sub
call
stc
add
sbb
je
pop
inc
mov
fcoml
cmp
shlb
popa
inc
fiadds
sbb
sub
push
jle
mov
push
ret
xchg
pushf
fists
pop
lea
cmp
pop
pop
imul
mov
pushw
add
cmpsl
jne
cmpsl
leave
adc
add
clc
cmp
jge
jecxz
mov
or
lret
mov
mov
sar
int3
and
xlat
sti
hlt
and
loopne
insb
cwtl
in
jmp
xchg
push
dec
iret
dec
out
sbb
xor
add
jl
pop
pop
int3
test
xor
test
jmp
rcrb
or
adc
and
and
imull
add
ja
je
mov
enter
mov
push
sti
dec
sar
ss
or
mulb
or
push
mov
adc
cltd
or
inc
inc
aam
adc
jmp
sarb
adc
repnz
adc
dec
insl
cld
fwait
dec
pop
cli
nop
call
aaa
popf
loop
test
sbb
and
mov
push
or
xchg
sub
in
add
mov
incl
sub
vmovdqa
pop
in
sub
call
xchg
mov
or
adc
out
xor
rclb
or
pop
xchg
sbbb
mov
push
in
pop
mov
cli
and
xchg
nop
rorb
movsb
idivl
add
mov
pop
xchg
test
xor
cs
and
push
push
and
popf
xlat
lcall
add
push
inc
cwtl
sub
iret
roll
inc
cwtl
ret
stos
loope
int
loop
or
dec
imul
rcl
mov
jns
mov
mov
clc
mov
loopne
neg
inc
and
mov
shrl
movsl
mov
adc
pop
push
jmp
mov
cmp
cmp
inc
pop
dec
xor
or
xor
sbb
jne
cmp
adc
js
push
gs
enter
mov
push
push
loop
and
ljmpw
adc
sub
sbb
jo
leave
test
push
scas
icebp
nop
cmp
mov
pop
add
mov
jmp
pop
orb
rclb
aas
jl
jmp
decl
mov
icebp
roll
daa
clc
jb
xchg
cmc
adc
push
movsl
adc
mov
jns
add
mov
dec
push
xor
pusha
xchg
hlt
pop
imul
jns
int
mov
sub
clc
fstpl
mov
cmp
jle
cmpsl
dec
mov
lahf
adc
jl
jno
sub
and
test
jne
cwtl
repz
mov
not
fcompl
and
mov
pop
dec
loopne
mov
gs
xlat
adc
sti
fisubrl
jne
and
fstl
daa
adc
cmp
mov
pop
lret
pop
or
mov
loop
dec
clc
jge
cld
clc
cmc
mov
jl
xor
xchg
rcll
push
std
adc
inc
push
and
dec
and
jl
dec
subb
xor
orl
push
jge
xor
push
pop
xor
and
lods
mov
jmp
fldenv
and
push
pop
pop
repnz
cmp
inc
out
jno
jbe
add
mov
cmpb
jne
clc
push
mov
notl
jmp
mov
cld
mov
inc
in
jmp
inc
pop
and
mov
inc
jl
test
mov
ret
push
mov
lds
cmpsb
xor
sbb
andl
jno
enter
jne
mov
dec
push
mov
xchg
repnz
loope
add
and
xchg
in
xchg
or
push
mov
inc
pop
call
mov
mov
xorl
into
fldpi
xchg
inc
pop
mov
xchg
lret
inc
or
in
lret
mov
imul
mov
cwtl
dec
jno
adc
hlt
or
mov
fsubp
or
xchg
push
jne
push
pop
jo
insb
loopne
push
xchg
jno
mov
mov
mov
or
lcall
adcl
mov
cwtl
fdivs
mov
stc
iret
xchg
jg
sbb
ret
lea
mov
fbstp
das
jmp
ljmp
push
mov
lds
cmpb
dec
cmc
dec
cli
inc
mov
jnp
clc
stc
xchg
xchg
rcl
sbb
and
push
iret
in
ror
inc
orb
and
jmp
and
cld
dec
and
add
push
scas
int3
mov
mov
test
sub
push
scas
leave
repz
mov
push
movsl
ret
rclb
dec
int3
mov
push
dec
push
jmp
stos
inc
inc
adc
je
fldln2
in
popa
loopne
inc
pop
cmpw
cwtl
sahf
aas
fldl
jmp
jb
dec
or
scas
ss
sub
push
fcompl
adc
stc
sub
aad
inc
or
and
cmc
or
lock
or
outsb
inc
andb
jmp
mov
cmpsl
cmp
and
rcrl
out
and
cmp
adc
xor
and
mov
or
je
sbb
daa
ss
mov
je
test
sbb
frstor
call
mov
inc
add
fildl
imul
mov
or
xor
xor
ss
pusha
call
jp
enter
test
cmp
rcrl
je
stos
daa
js
out
xchg
sub
mov
mov
mov
mulb
movsl
xor
xchg
sbb
add
ds
fidivrl
lock
push
jp
shlb
cld
push
jne
push
cmpsl
popa
add
xorb
adc
pop
stc
nop
push
adc
jle
push
push
test
sub
adc
pop
or
aam
stos
mov
or
pushl
jne
add
pop
or
ret
orb
movsb
push
xor
mov
dec
dec
pop
add
outsl
inc
test
imul
movsb
imul
xlat
lock
fs
push
push
je
pop
lods
imul
lock
test
fisubrs
int
push
aaa
jge
mov
dec
lock
jg
push
stos
jbe
and
mov
outsb
cld
cmc
in
sub
cmp
mov
pop
jne
and
dec
mov
clc
mov
shrd
pushf
pop
movsb
cmp
testb
movsb
test
dec
mov
push
mov
dec
add
je
rol
rolb
xchg
add
call
dec
sub
stos
insb
xchg
mov
insb
pop
shrl
repnz
push
adc
mov
mov
sub
in
stos
fs
inc
stos
xor
ja
sub
test
mov
mov
in
lcall
xor
jp
enter
test
sti
imul
fdivrl
mov
sbb
stos
or
hlt
adc
cmpl
adc
jbe
xchg
and
adc
rorb
and
loopne
in
cmpsl
sub
xor
addb
scas
xchg
ret
sub
and
sub
mov
cltd
or
mov
push
test
mov
jecxz
mov
insl
mov
add
adc
mov
add
js
inc
test
dec
stos
outsl
fnsave
adc
loope
cwtl
pushf
sub
pop
jmp
ljmp
mov
pop
cmp
shrb
bndldx
dec
idivl
fmul
imul
sub
ds
sbb
cmp
jbe
push
scas
sahf
jge
flds
mov
inc
ret
push
xchg
push
icebp
xor
xor
mov
pop
imul
or
xchg
roll
enter
pushf
call
or
push
cwtl
xor
dec
mov
mov
push
lahf
inc
inc
and
push
inc
in
es
sbb
jl
pop
aas
insb
sub
loope
mov
aad
ds
xchg
into
and
add
mov
dec
xor
cltd
jbe
mov
sarb
add
fsubrp
adc
and
lret
jle
call
push
xchg
out
icebp
dec
dec
cmpl
imul
and
pop
mov
test
push
sbb
gs
lret
jg,pt
inc
pop
lock
cmp
mov
loope
and
std
jno
dec
cmp
test
movb
data16
sbb
pop
es
mov
ljmp
sbb
cmp
mov
and
cmpsb
in
sbb
pop
inc
repz
mov
push
dec
sbb
outsl
cmp
mov
jge
xlat
addl
jmp
loopne
sub
cmc
pusha
sti
int
jp
popf
daa
adc
mov
sbb
cmpsl
adc
and
stos
rorl
push
mov
inc
daa
add
xor
test
ret
out
mov
mov
dec
push
ljmp
adc
xchg
cmp
ja
xchg
mov
or
es
xchg
jmp
andb
aam
mov
pop
dec
dec
push
jns
jbe
inc
mov
jo
dec
push
aas
adc
or
fstpt
add
or
or
push
pop
mov
push
add
bound
in
push
push
xor
testl
adc
shrl
inc
and
test
test
out
out
in
jg
rcrb
outsb
int
ss
ss
popf
cwtl
jle
imul
and
pop
cmp
jle
scas
enter
inc
es
in
xchg
xor
pop
in
or
jmp
pop
scas
push
je
lahf
test
ljmp
mov
das
jmp
jb
popf
pop
mov
inc
add
jne
adc
int
pushf
pop
popl
cltd
or
and
sti
lods
xor
dec
loop
sbbb
inc
clc
adc
ljmp
jmp
int3
fldenv
jecxz
daa
cld
fdivl
pop
push
push
inc
jo
mov
sbb
mov
movsbl
das
test
push
add
and
imul
adc
sub
sub
adc
sbb
cmpsl
outsb
cld
lds
sbb
push
cmpb
movswl
mov
inc
pop
cld
sub
jns
sbb
inc
cwtl
cmp
jge
mov
xor
jmp
lret
cmpb
mov
sub
fcmove
popf
inc
lds
or
call
nop
xchg
aad
pop
ud2
jle
inc
cmpb
rorb
jnp
les
cmp
call
pop
add
and
ja
aam
mov
inc
sbb
xchg
fwait
sahf
xchg
jb
inc
jne
and
adc
jp
rcll
push
loopne
or
insl
jle
dec
cs
pop
add
in
fists
dec
mov
dec
adc
hlt
mov
lcall
gs
es
xchg
sub
xchg
sbb
push
cmp
sbb
xlat
sub
ret
int
pop
int3
push
enter
pmovmskb
xlat
push
stos
add
dec
adc
and
inc
xchg
pop
test
xchg
jmp
lahf
push
add
add
jae
mov
xchg
out
xor
jns
enter
incb
sbb
movb
icebp
mov
sub
js
dec
sbb
add
xor
stc
mov
jne
sbb
cmp
fbstp
fstpl
add
xchg
sub
mov
pop
pop
push
mov
cmp
or
adc
jge
nop
xor
mov
inc
mov
outsb
jne
je
mov
sbb
mov
inc
and
rolb
jne
in
xlat
and
inc
adc
into
push
sbb
sub
or
push
mov
enter
popf
jae
scas
data16
push
push
mov
adc
ss
decl
and
ffreep
push
cmp
idiv
daa
push
adc
mov
mov
enter
adc
mov
mov
xorb
insb
call
test
inc
shl
and
inc
push
je
cmp
adc
hlt
pop
orl
loope
cmp
ds
movsw
loope
fcomps
xchg
fisttpl
hlt
mov
mov
data16
and
fadds
xlat
stos
or
lock
push
pushl
lds
cmp
jmp
loop
jno
push
lret
bound
pop
sub
js
test
push
fisubrs
pop
jle
xchg
pop
scas
mov
cmp
xchg
pop
jnp
xchg
inc
cmp
inc
mov
cmp
roll
cmpl
rcrl
rorb
or
xchg
lock
cltd
cmpsl
frstor
sub
ret
pop
not
or
subl
or
or
scas
movsb
cmp
in
out
cmp
mov
push
je
push
or
mov
and
dec
cmp
jne
jg
cmpsl
and
and
sbb
popa
push
pop
jg
mov
mov
pop
jae
xor
mov
cmpl
mov
je
inc
lock
pop
ret
sbb
jne
xor
or
adc
xor
lret
scas
sbb
ret
cmpl
sti
mov
push
cmp
push
jno
adc
adc
dec
pop
sub
sarl
jo
out
mov
xorb
and
cmpsl
jge
hlt
cmpsb
pop
mov
lret
jmp
jmp
or
xor
ret
popf
jge
std
dec
mov
push
dec
jo
add
mov
and
and
mov
push
andb
cmp
jp
dec
jge
iret
leave
pop
fs
sub
pop
faddl
inc
movb
add
push
inc
sub
or
mov
jle
mov
sarb
pop
xchg
dec
jae
mov
xor
push
adc
je
sarl
add
je
jno
xchg
push
cmpsl
jne
call
incl
jge
push
lcall
pushf
jnp
sub
lea
add
subl
fsubs
and
out
mov
or
mov
andb
xor
cwtl
test
imul
and
mov
out
pop
adc
adc
add
dec
aam
std
enter
sub
adc
xor
gs
or
outsb
popa
mov
push
das
cmc
cmp
es
push
mov
adc
jecxz
or
out
mov
mov
xchg
xor
call
pop
fucom
cmp
xchg
pop
decb
push
in
mov
inc
adc
dec
or
cli
mov
xor
jmp
inc
add
nop
xor
or
lock
jmp
mov
fld
ljmp
fsubs
movsl
ljmp
mov
rolb
rorb
imulb
dec
cs
and
push
ret
fdivrs
mov
jl
cli
xchg
pop
mov
xor
shrb
in
pop
lock
sbb
or
mov
lret
adcb
jl
pop
loop
dec
push
xor
or
adc
cmp
shr
xchg
imul
ljmp
dec
decb
imul
dec
fdivr
mov
jge
inc
inc
jne
lret
jmp
movsl
adc
sub
push
add
jle
flds
stos
sbb
or
push
push
sbb
push
add
add
push
lock
imul
mov
loope
mov
not
test
or
mov
rclb
lods
repz
mov
xlat
pop
test
mov
or
test
xorb
call
jmp
adc
xchg
dec
pop
aad
and
jne
cltd
arpl
and
pop
dec
int
sahf
movsb
fdivs
mov
je
push
and
mov
adc
nop
movsb
lea
jns
add
call
sti
es
sbb
and
lret
mulb
fs
xor
inc
jge
test
sub
je
dec
fwait
sub
inc
jne
cmp
sbbl
jns
xchg
daa
sete
inc
ss
push
movsb
or
pop
shlb
jmp
mulb
sub
add
jmp
cmp
loope
lahf
bound
push
xlat
push
push
stos
popf
fsubs
clc
adc
push
test
scas
cmpb
dec
mov
cmp
bnd
test
rcl
push
dec
neg
lahf
enter
clc
sti
fmul
cmpl
push
pop
inc
xchg
enter
cli
imull
test
out
sbb
aad
idivb
enter
pop
mov
aad
pop
mov
cmp
pop
mov
xor
and
sbb
add
in
pop
enter
cmp
fists
iret
call
adc
movsb
mov
or
cmovo
jmp
xlat
lea
fsubrp
inc
and
jg
stc
mov
pop
call
ljmp
push
xor
shll
stos
and
add
scas
jmp
dec
mov
adc
out
mov
jo
cmp
xchg
scas
jge
or
sbb
subl
and
out
xchg
stc
stc
add
pop
fcomps
mov
or
mov
adc
push
sbb
mov
ss
hlt
call
cwtl
mov
cmpl
dec
xchg
dec
pop
mov
popf
and
sub
nop
clc
xor
push
cld
scas
dec
mov
xchg
sbb
mov
push
jne
dec
inc
push
in
pop
sub
cwtl
adc
jecxz
jae
push
shrl
mov
xchg
mov
cmovbe
or
and
jle
push
dec
movsl
or
cmp
cmpsl
pusha
sbb
mov
xor
stos
sub
sub
test
rcrl
pop
mov
insl
in
jmp
mov
mov
push
sub
mov
inc
xchg
pop
je
push
mov
dec
nop
xor
cmp
add
aaa
xchg
andb
dec
push
cs
jnp
push
push
mov
test
jmp
std
mov
mov
jne
div
lcall
pusha
movsb
pop
sbb
pop
in
call
sub
pop
scas
inc
push
and
movsl
stc
in
add
lea
pop
mov
dec
movsb
clc
mov
dec
decb
pop
scas
sub
sbbb
fnsave
xchg
lock
faddl
mov
adc
jno
and
inc
int3
push
mov
push
dec
sub
movsb
adc
pop
xchg
in
lret
arpl
mov
mov
push
out
mov
lods
loop
out
movsb
nop
inc
dec
andb
shrl
add
or
adc
popa
pop
jne
sub
xor
jl
pop
xchg
mov
das
enter
cmc
sbb
xor
pop
adc
movsb
and
cmpsl
sub
sbb
stos
sbbb
sbb
ficompl
add
inc
dec
push
gs
jo
inc
push
shll
test
out
dec
sti
and
movsl
adc
push
mov
add
movswl
cmp
fwait
xchg
dec
icebp
and
leave
xchg
movsb
mov
or
popf
sbb
aad
fisttpl
or
test
daa
mov
mov
inc
fsubl
fadds
pop
es
xchg
enter
out
cmp
flds
arpl
dec
das
push
int
test
adc
jmp
mov
ds
es
inc
push
pop
gs
out
jecxz
sbb
daa
dec
sbb
mov
ja
and
inc
mov
sbb
inc
xchg
hlt
bound
sbb
scas
or
cltd
adc
cltd
sub
les
lods
andb
pop
bound
inc
lret
inc
sub
pop
push
aaa
and
mov
add
je
fcoml
jb
xchg
je
jle
pop
jle
cmpsb
je
jmp
jae
jb
hlt
dec
push
jmp
and
insl
sbb
mov
xchg
jl
fcomi
pop
pop
mov
arpl
lret
lea
mov
push
push
daa
push
and
or
call
test
fwait
cmp
inc
adc
push
cmp
out
addr16
imul
movsb
inc
add
mov
cld
jne
and
push
mov
scas
pop
inc
sbb
sub
pop
sub
jle
jo
mov
and
fsubr
out
lret
mov
sub
xchg
jle
outsb
jb
insb
xlat
push
ljmp
mov
sbbb
xchg
in
shll
dec
lahf
pop
aam
jmp
insl
sub
out
fsubr
xchg
xchg
sub
popa
or
push
dec
pop
sbb
dec
in
adc
les
out
loope
mov
or
daa
xlat
stos
loopne
cmp
jge
es
ret
mov
lods
add
nop
jne
xor
mov
repnz
and
mov
cwtl
add
xchg
push
hlt
dec
pushf
jl
dec
lock
adc
call
arpl
xchg
enter
sbb
or
mov
and
cmpsb
mov
jge
frstor
push
pushw
bound
mov
out
nop
dec
lods
into
jl
cmp
mov
cld
clc
test
sbb
inc
mov
jns
out
sbb
add
or
das
or
mov
test
adc
les
and
test
pusha
das
mov
and
push
mov
stc
adc
dec
xor
sub
fists
lea
sub
jl
fucom
push
jge
mov
sub
pop
aam
cmp
jne
in
adc
jecxz
xor
rolb
mov
fadds
mov
and
adc
cli
cmc
mov
jge
and
sahf
es
insb
jg
mov
fcoml
sub
fcompl
sbb
addr16
push
and
fnstcw
hlt
call
inc
push
mov
mov
push
cmp
mov
and
stc
sub
adc
mov
stos
les
push
push
cwtl
push
mov
xor
push
fsubrs
or
aam
inc
cmpl
mov
jae
and
loopne
jl
sub
mov
push
loop
call
les
out
mov
add
mov
dec
mov
mov
mov
push
test
pop
adc
pop
std
inc
pop
out
mov
test
sub
inc
pop
andl
and
clc
dec
fistps
mov
mov
and
push
push
mov
sahf
pushf
mov
bound
and
gs
lret
pop
test
jb
cmp
sbb
pop
push
add
inc
sub
pop
inc
and
enter
dec
movb
adc
jmp
stos
sub
push
mov
cmp
cmp
sbb
call
inc
push
pop
je
ja
imul
mov
imul
int
dec
mov
ljmp
cmpsl
adc
or
pop
and
sti
cmc
adc
cmp
lock
rolb
adc
push
std
in
and
loopne
adc
adc
mov
dec
mov
add
push
adc
cmc
outsl
mov
mov
push
xchg
jp
aas
fsts
sub
push
movsl
popf
aam
inc
ljmp
jg
leave
xchg
push
ljmp
loopne
lret
in
add
jne
shlb
sub
jle
dec
lret
in
cmc
xor
jne,pt
decb
sub
or
in
sub
jbe
jnp
or
inc
jmp
mov
push
fdivrs
imul
mov
adc
mov
inc
push
add
repnz
leave
mov
jae
xor
xchg
cmc
add
aam
inc
in
inc
mov
cmc
cmp
shlb
sub
dec
arpl
and
hlt
movsl
je
mov
xor
call
xor
rorl
dec
mov
mov
fidivrl
je
data16
lcall
pop
adc
adc
adc
sbb
mov
dec
test
sub
adc
test
and
jge
xchg
xchg
adc
call
jg
adc
or
jmp
ret
dec
dec
popl
fidivrs
pop
inc
mov
clc
jg
loope
imul
das
nop
or
and
pop
inc
lea
sub
lcall
fists
lods
cmc
inc
popa
adc
dec
push
cltd
inc
stos
xchg
adc
mov
dec
mov
xchg
stc
xor
pop
xor
mov
mov
cld
bound
mov
sub
jmp
loope
das
cmp
ret
sti
je
sbb
and
adc
dec
add
mov
jo
loope
ljmp
or
test
lahf
hlt
pop
add
jne
mov
sub
dec
jmp
jne
shlb
popa
out
adc
sbb
adc
xchg
sbb
jle
das
test
hlt
lret
xor
scas
sbb
jp
sti
jle
out
lcall
call
es
inc
sub
rol
xor
adc
aas
les
test
pop
pop
es
or
das
imull
xor
dec
cmp
lret
jne
dec
pop
std
ja
dec
data16
test
notl
adc
daa
stos
or
pusha
mov
sbb
adc
mov
andl
iret
mov
jnp
popf
pop
and
push
hlt
dec
adc
ja
adc
pop
xor
mov
call
dec
aaa
or
sbb
int3
insl
jl
xchg
jno
je
fs
jne
test
pop
lods
out
xor
push
orb
add
push
into
sahf
rolb
pushf
sti
out
adc
xlat
sbb
test
add
push
gs
adc
xchg
loopne
stc
fs
sbb
pop
adc
pop
call
outsl
shlb
pop
mov
cli
sbbb
es
jle
int
pop
cmpsl
pop
dec
push
sbb
pop
negb
jmp
push
sbb
call
fistps
push
test
jbe
or
repz
pop
and
sub
ja
cmp
xor
and
fsub
je
adc
aad
inc
test
test
adc
mov
in
jmp
jecxz
xchg
add
jge
or
jge
push
addr16
sub
sub
lock
add
out
arpl
pop
mov
stos
mov
and
or
and
or
lret
je
dec
jmp
mov
adc
mov
sbb
jne
inc
cmpsl
out
stos
adc
mov
xor
jmp
xchg
in
sub
adc
aaa
push
cs
mov
fucomip
and
and
inc
cmp
push
push
sub
adc
sub
mov
mov
cmc
cli
xor
mov
test
xor
das
jb
or
dec
cli
dec
leave
ljmp
out
or
pop
stos
add
inc
adc
and
add
rorb
mov
shr
add
jge
pop
pop
push
and
call
adc
fisttpll
inc
jne
test
test
aaa
push
pushf
pop
xchg
mov
pop
ret
or
pop
dec
mov
push
pop
mov
mov
in
adc
inc
hlt
jge
push
movb
nop
sbb
lock
or
cmp
lock
pop
adc
mov
test
test
mov
std
cmp
xchg
jno
stc
mov
pop
ret
inc
adc
cld
rolb
roll
hlt
pop
int3
adc
imul
and
mov
lret
shlb
outsb
jmp
push
add
jle
pop
mov
xchg
loop
pop
repz
mov
jne
cld
pushf
pop
adc
mov
inc
or
jne
xchg
mov
sub
bound
sbb
or
and
sbb
es
lds
jnp
xchg
push
or
test
mov
xchg
xor
ljmp
fistl
push
daa
add
sete
in
cs
xchg
js
hlt
and
sub
inc
cmp
xor
cwtl
mov
data16
das
jl
test
lret
or
sub
add
adc
or
sar
cmp
or
mov
mov
sub
call
daa
jbe
add
dec
ljmp
addr16
sub
xchg
fsubs
cmp
in
bound
sti
fmul
jno
jg
shll
push
cwtl
add
or
or
xor
xor
cltd
mov
or
sbb
iret
jo
xor
lret
aam
in
pop
fld
inc
sub
dec
pusha
clc
add
mov
dec
sub
lret
mov
and
cmp
lret
mov
xchg
int
xchg
sbb
mov
or
mov
data16
mov
add
dec
sbb
xchg
sub
jo
dec
lea
and
and
test
andl
push
push
push
push
aam
orl
lea
add
push
push
std
fwait
adc
xchg
cmp
dec
jmp
push
ljmp
xchg
mov
and
call
push
hlt
loopne
push
fmul
adc
pop
sub
xlat
push
jno
push
adc
sub
push
add
push
cmp
lcall
push
pop
add
inc
lock
push
enter
ret
mov
jbe
js
mov
lods
xor
or
loopne
pop
add
lds
dec
daa
stos
push
inc
imul
orl
mov
xor
push
push
sbb
mov
lods
and
push
push
jg
or
jnp
xchg
sub
bound
inc
xor
mov
push
sub
jne
clc
xchg
out
xchg
pop
cwtl
pop
and
in
ficoms
mov
mov
pop
ss
sbbl
cltd
xor
cmp
push
jmp
lea
cmp
mov
test
inc
imul
test
adc
jge
sti
inc
sub
adc
ss
add
jbe
hlt
cmp
pop
mov
sub
sub
xchg
gs
cld
sub
mov
in
or
movsl
push
scas
mov
add
es
sarb
cli
test
and
push
in
xor
xor
test
jbe
pop
cmp
stc
push
icebp
scas
or
adc
push
add
sbb
xor
lea
in
and
jp
nop
cmp
mov
inc
pop
push
push
jl
vmaxpd
mov
add
ret
stos
loopne
sub
loope
and
lds
mov
adc
mov
outsb
mov
cmp
aas
and
jg
in
loopne
add
mov
mov
push
sub
insl
lea
jne
lock
mov
inc
adc
scas
call
lods
repnz
mov
pop
push
rcl
dec
sbb
iret
or
sub
jmp
sub
mov
std
push
cmp
nop
sbb
or
add
push
call
mov
rcll
outsb
das
jb
lods
andl
or
pop
mov
xor
mov
push
xor
xchg
sub
sbb
es
addr16
xchg
repnz
jl
jbe
cs
out
inc
daa
adc
daa
sbb
jp
gs
or
movsb
imul
ret
in
lods
jecxz
inc
jge
and
fsub
cmp
mov
bound
idiv
jle
pop
clc
mov
cmpsw
mov
mov
pop
aad
cmpsl
mov
cld
dec
test
push
out
mov
push
sub
push
bnd
push
add
xchg
ljmp
pop
add
mov
fisttpl
repz
call
jmp
cmpl
mov
or
daa
jne
mov
mov
fisttpl
jl
insb
idiv
xchg
mov
mull
push
jne
daa
inc
adc
push
push
or
sub
clc
jmp
adc
mov
call
inc
rcrl
pop
icebp
xchg
sub
nop
cld
add
push
jne
lahf
out
xor
dec
sub
cmp
pushf
or
addl
mov
out
leave
or
dec
popf
pop
loopne
enter
fsubrl
push
mov
sub
aaa
and
inc
pop
mov
inc
std
sub
stos
and
and
push
pop
pop
sbb
fcoml
xchg
cmc
adc
dec
pop
jl
dec
and
addl
push
ds
mov
or
lock
repz
sti
in
pusha
xor
inc
dec
stc
or
pop
fsubl
cmp
sub
test
jmp
dec
in
xchg
aam
int
enter
push
mov
jne
xchg
push
enter
xchg
sbb
repnz
jp
shlb
mov
scas
and
pop
mov
movsl
mov
and
mov
xor
xor
cld
bound
sbb
test
dec
cmp
and
popf
cmp
inc
and
push
popf
jns
gs
jns
dec
adc
push
push
mov
add
xor
cmpsl
in
sti
ret
jp
je
and
push
sub
insb
and
dec
clc
lret
je
aam
add
push
adc
and
or
mov
sbb
lea
push
popf
sbb
adc
adc
xor
mov
sbb
test
inc
pop
xor
jmp
in
push
loopne
jns
loop
movsb
call
mov
sbb
mov
pop
and
mov
daa
dec
adc
imul
sbb
xor
adc
or
mov
pop
xor
jle
aad
popa
inc
adc
int
xor
call
stos
negb
aaa
push
pop
push
xor
es
loope
loope
push
call
fdivl
std
mov
dec
ret
imul
les
mov
and
jbe
dec
ficompl
jl
rcrl
and
int
mov
in
scas
push
push
ljmp
pop
leave
movsb
scas
jae
pusha
jmp
lds
and
mov
mov
mov
mov
mov
mov
add
jne
push
mov
loopne
or
or
gs
int3
xor
xchg
sbb
adc
insb
repz
and
dec
xor
sub
or
inc
ds
addr16
xchg
mov
ret
les
pop
or
addl
adc
fisttps
xchg
ret
data16
fmull
or
loopne
mov
or
je
leave
test
jmp
and
push
shrb
mov
xor
add
mov
pop
sbb
xor
jmp
adc
fdivl
xchg
sub
hlt
cmp
int3
icebp
inc
jmp
push
jg
fs
sub
mov
jecxz
adc
push
mov
cmp
jl
aam
dec
pop
dec
js
sbb
das
je
cli
enter
push
cld
sbb
mov
cltd
adc
inc
or
or
loop
fisttpll
sbb
negb
lock
ret
mov
inc
push
push
push
or
test
push
push
in
fimull
rorl
mov
mov
push
cli
push
jae
movsl
xlat
in
cs
cmp
in
cmp
aad
adc
adc
push
pop
aad
push
out
and
mov
test
mov
bound
mov
shr
in
mov
mov
inc
xlat
loop
or
jl
push
roll
mov
inc
data16
jge
xor
stos
sub
cmp
adc
cmp
jne
mov
adc
push
fsubp
pop
adc
aad
add
and
out
imul
outsb
jmp
outsb
push
aas
adc
pop
int3
movsb
adc
cltd
xchg
loope
cmp
movsb
and
mov
and
or
loopne
lret
lahf
es
mov
rcll
inc
push
gs
cmp
pop
xor
idivb
das
xor
cmp
fscale
mov
les
mov
fs
cmpsb
ret
pop
enter
xlat
addr16
mov
dec
push
xor
add
imul
je
ljmp
mov
adc
adc
and
frstor
or
lahf
sub
push
adc
pusha
and
xchg
push
sub
dec
xor
adc
sub
push
cmp
dec
jmp
je
loopne
mov
and
jl
pusha
imul
or
ret
mov
inc
sub
add
sbb
mov
xchg
xchg
repz
and
fucom
sub
test
push
pop
pop
and
pop
loope
or
ss
push
inc
dec
and
sub
in
push
mov
je
dec
pop
adc
mov
fdivrl
cwtl
cmpsl
fldl
imul
add
inc
push
outsl
orb
addr16
imull
push
insb
push
dec
test
aad
push
or
jge
loop
leave
ret
jnp
pop
xor
xchg
stos
daa
fisubs
jl
outsb
mov
xchg
adc
enter
add
je
cs
shrl
dec
dec
dec
mov
outsl
iret
push
pop
mov
dec
ror
dec
sub
inc
call
andb
adc
push
popf
negb
rcrb
movl
xor
fistl
je
push
fldenv
pop
imul
dec
jmp
cmpsl
pop
sbbb
push
aad
sub
pop
dec
adc
lret
xor
repnz
xchg
data16
push
jno
jmp
cmp
dec
push
xor
pop
xchg
inc
clc
xchg
mov
orl
add
jb
and
enter
dec
out
add
nop
and
push
out
fdivrl
scas
fs
adc
call
or
in
sub
jb
xor
push
es
inc
in
popf
ja
ret
call
clc
adc
xchg
jg
or
push
add
xor
ds
or
call
out
xchg
jl
or
adc
cmp
push
fsubs
and
movsb
or
icebp
inc
fildll
jae
adc
push
pop
and
sbb
push
loop
testl
mov
or
mov
in
sub
adc
jmp
test
jmp
xchg
adc
dec
jle
movsb
pop
addb
daa
push
shlb
call
xor
shlb
daa
push
cmp
adc
cld
mov
cmp
pop
push
jns
cmpsl
fmull
sbb
out
add
mov
jg
dec
and
mov
mov
mov
mov
leave
rclb
sbb
sbb
adc
jne,pn
mov
xlat
insl
xorl
hlt
or
and
sbb
lea
adc
cmc
imull
push
jge
rorb
fdivrs
pop
test
add
jge
xchg
push
dec
fsub
dec
jl
dec
dec
dec
pop
add
insl
push
xchg
shrl
cmp
test
mov
jne
in
jne
das
mov
adc
mov
test
cs
rclb
adc
or
adc
out
mov
iret
stos
and
dec
aas
je
and
lods
pop
pop
mov
push
call
cmp
sbb
mov
mov
int
pop
mov
mov
or
sbb
push
js
pop
notl
mov
sbbl
sbb
xlat
adc
jg
sub
inc
stc
sub
sub
sbb
mov
dec
jb
mov
jns
push
push
cmp
scas
xchg
lds
popf
inc
cli
inc
xchg
jmp
fwait
mov
push
andl
xor
movl
sti
xor
push
or
adc
pop
lahf
xlat
inc
icebp
stos
call
lock
mov
pop
jmp
jo
or
inc
ja
std
xchg
mov
or
mov
addr16
mov
aas
jecxz
push
xor
sbb
das
in
fcoml
sub
aas
leave
icebp
decl
das
cmova
push
fistpll
daa
in
and
inc
cld
loope
js
lret
lahf
cs
cmp
pop
xor
aad
xchg
sub
hlt
ret
adc
pop
xor
mov
mov
dec
inc
sahf
dec
push
jne
dec
or
jle
test
mov
xchg
mov
lea
out
xchg
cmp
roll
fidivrl
sti
dec
mov
sbb
in
mov
shrb
sbb
pop
fists
out
ja
push
es
adc
mov
pop
pop
add
pushl
movsb
dec
fsubrl
sbb
inc
adc
jbe
or
xor
idiv
imul
fwait
add
sahf
dec
movsl
fdivrl
popf
test
pusha
lret
push
jb
js
jns
je
bound
jae
imul
add
outsl
jb
jae
fldl
imul
xor
test
sub
lock
shll
idivl
adc
and
push
sub
pop
scas
mov
leave
sbb
in
movsb
sbb
das
mov
or
decb
xor
mov
push
mov
ret
cmp
mov
gs
or
jmp
push
out
mov
and
loopne
inc
movsb
dec
out
or
ret
inc
xchg
push
loop
mov
push
adc
cld
data16
sub
aaa
xchg
or
mov
fstpl
xchg
fadd
inc
and
dec
push
xor
cmp
jle
out
test
loopne
or
dec
fucom
shl
adc
add
scas
loop
bound
jmp
repnz
outsb
hlt
push
pop
orb
cmp
mov
jmp
adc
xlat
mov
insb
jp
icebp
sub
jge
xlat
ljmp
pop
lea
out
add
loope
adc
pop
aad
test
nop
dec
cmpl
popa
aas
in
mov
gs
inc
pop
adc
dec
sbb
scas
int
cmp
lods
and
dec
loop
adc
jmp
xchg
mov
js
pop
ljmp
pop
rorl
pop
push
push
test
lahf
adc
push
xchg
fistps
test
push
push
leave
or
mov
mov
and
pop
mov
adc
sub
or
pop
or
test
shl
jmp
adc
or
adc
or
pusha
xchg
and
push
es
xor
imul
jns
adc
ja
mov
das
pushw
dec
shll
fwait
xchg
insb
cmp
push
pop
enter
js
popf
sbb
dec
clc
cmp
orb
movups
js
je
lret
call
mov
mov
or
loop
scas
pop
rcrb
push
daa
push
in
xchg
pop
push
push
xor
test
push
clc
adc
lahf
adc
xchg
outsl
cwtl
xchg
sub
adc
cli
mov
sahf
fnstsw
inc
mov
dec
inc
je
aam
xor
xchg
xor
jmp
loopne
test
daa
dec
push
add
xor
lock
jo
inc
stc
inc
push
test
ja
push
jmp
push
add
pop
mov
and
testb
stos
neg
sub
pushl
or
mov
fs
loop
fstl
ljmp
sbb
inc
xor
push
ficompl
xchg
or
cli
dec
push
push
cmp
test
dec
cld
out
jbe
xor
or
jnp
sub
dec
jp
repz
gs
std
mov
xorb
js
jo
cltd
push
ljmp
dec
hlt
cs
mov
fsubs
shrb
or
add
sub
iret
adc
mov
push
and
leave
jecxz
insl
mov
cmp
repnz
mov
sahf
xchg
mov
enter
loop
and
test
clc
fisubrl
dec
mov
push
inc
push
in
aam
js
hlt
pop
jp
cmp
add
or
rclb
mov
inc
push
or
imul
push
sub
sub
dec
data16
pop
test
mov
mov
stos
or
xchg
pusha
icebp
hlt
add
and
inc
mov
std
push
lods
push
cmp
sbb
sbb
mov
pusha
pop
dec
xor
pop
push
or
inc
push
xchg
mov
les
xor
sub
jg
adc
dec
shll
inc
call
and
negl
mov
add
pop
and
xchg
ja
inc
mov
stos
push
ss
push
and
nop
repnz
sbb
xlat
mov
cmp
mov
std
clc
ljmp
xor
cld
loop
add
or
setp
out
in
bound
mov
adc
dec
mov
sub
loopne
dec
xor
cmpsb
dec
cmp
call
insb
mov
sbb
pop
ja
mov
js
cmp
scas
inc
mov
je
sub
xchg
pop
in
push
cmp
inc
mov
movsb
inc
je
add
je
sub
dec
push
ljmp
clc
out
aaa
or
subb
inc
mov
inc
and
pop
loop
fxch
push
cmpl
movsb
lea
and
mov
jl
or
mov
out
inc
xor
mov
or
mov
pop
cmp
je
sbb
mov
push
loope
sub
mov
mov
push
fldenv
adc
adc
test
aas
test
stc
das
sbb
sbb
loopne
add
inc
inc
stc
cmovs
clc
mov
mov
in
xchg
mov
adc
add
pop
or
add
cmpsl
fildll
jl
fs
leave
stos
loope
bound
cli
and
aam
mov
sti
pop
or
jno
cli
pop
inc
in
adc
movsb
or
in
inc
jmp
popa
call
cmp
test
orb
sub
mov
jmp
inc
and
mov
in
and
adc
xchg
scas
jno
jno
or
push
aas
cmp
dec
popa
dec
xor
or
clc
popf
movsb
pop
rolb
nop
pop
call
lahf
shrb
pop
out
outsb
cmp
das
pop
and
and
int3
pop
or
push
pop
imul
xor
dec
cmp
pop
adc
xor
cmpsb
mov
xchg
lret
pop
subb
xchg
push
jne
push
call
cmp
popf
mov
adc
mov
adc
cli
enter
call
out
add
sbb
scas
xchg
xor
pop
xor
andl
andl
pop
adc
and
cltd
inc
xor
and
dec
sub
adc
lock
dec
lret
adc
mov
or
and
adcl
test
push
add
call
into
jno
jo
cs
js
jne
jge
movsb
fscale
cmp
call
or
mov
pop
lods
or
out
nop
and
test
cmp
daa
cmp
fstl
push
fnstsw
mov
jno
xchg
push
lret
or
push
add
pushl
scas
push
or
lret
in
mov
jne
loop
dec
mov
dec
aas
and
inc
leave
jmp
mov
pop
mov
adc
and
call
mov
mov
inc
adc
sub
add
dec
ret
xor
sbb
cmp
movl
scas
fsts
pop
test
stos
in
mov
je
scas
jne
xchg
add
jmp
add
xchg
fsubrs
dec
enter
hlt
sub
std
sbb
popa
pushf
xor
call
or
cwtl
inc
lret
jns
xchg
push
in
dec
inc
outsb
inc
shrl
ret
int
adc
fs
adcb
add
cmp
add
jo
xchg
les
xchg
out
int
cs
mov
ds
mov
cs
test
enter
dec
or
mov
test
repnz
mov
aas
ljmp
sbb
dec
sub
dec
and
dec
sbb
mov
pop
leave
jae
aad
dec
stos
xor
test
push
push
stos
xor
mov
mov
cmp
push
in
std
push
hlt
xor
mov
jne
rorl
clc
cmp
xor
loop
daa
lods
inc
sub
xor
push
pop
sub
hlt
test
es
stc
sub
xchg
jge
xchg
cld
inc
push
mov
mov
sbb
movsb
and
les
arpl
sub
add
jmp
mov
jmp
jae
inc
sbb
mov
ret
and
sbb
jecxz
pusha
and
in
stos
popf
jae
popa
jmp
sub
mov
das
mov
jle
inc
mov
or
xor
jne
fists
inc
clc
ja
notl
pop
es
add
xlat
scas
cld
add
aas
divb
pushf
iret
mov
pop
and
pop
jae
int3
icebp
dec
inc
or
cld
xchg
adc
out
nop
rolb
call
sbb
dec
mov
das
rol
sub
fsub
std
push
in
xchg
pop
sbb
jl
add
andb
test
outsl
xor
mov
stc
test
lods
sbb
add
aaa
mov
inc
test
jb
dec
push
pushl
add
into
stc
cmc
ja
movsb
out
int3
sbb
sbb
loopne
pop
add
sbb
jns
stos
leave
sub
pop
cwtl
cwtl
adc
mov
cmp
xor
lds
shll
out
ror
je
cmc
mov
or
aad
stos
mov
xor
pop
lods
adc
dec
imulb
inc
adc
cmp
in
pop
cs
mov
cli
cli
mov
xor
or
sub
pop
and
jg
sti
cmpsl
addr16
fsubs
mov
cli
sbb
add
and
jge
fnstsw
clc
or
jne
pop
mov
frstor
stos
mov
pop
jne
pushf
pop
ret
pop
nop
jmp
cmp
adc
popf
xor
or
hlt
and
mov
or
adc
fiadds
cli
sbb
push
adc
pop
mov
add
jp
lods
cmp
adc
ret
dec
punpckhwd
outsb
mov
push
inc
add
adc
rorb
inc
xor
lcall
pop
gs
jl
test
aad
mov
push
adc
call
pushf
enter
shrl
dec
lret
rcrb
das
dec
or
pushf
bound
outsl
dec
push
cli
fs
pop
mov
daa
dec
sti
cld
xchg
call
mov
sarl
jns
pop
cmp
cli
xorl
stc
cld
cmp
popf
sub
aas
xor
cmp
jae
sbb
repz
mov
xor
movsbl
or
mov
out
jae
ficomps
fiaddl
stc
jae
inc
dec
loopne
jb
cli
push
lea
sub
inc
pop
xor
imul
repz
popa
cmp
ja
mov
in
add
mov
adc
adc
add
or
inc
cmp
jbe
andb
mov
std
push
fadds
loope
pop
mov
out
xchg
stc
dec
scas
push
xchg
jo
data16
adc
ljmp
adc
call
sbb
or
out
fists
pop
mov
mov
and
inc
dec
clc
adc
fsubs
xchg
push
ret
negl
cmp
xchg
jp
jne
dec
sub
leave
inc
xlat
jp
pop
sbb
push
mov
or
rcrl
out
aad
xchg
imul
pop
lds
sbb
cmp
loopne
test
lea
mov
push
test
dec
adc
loopne
outsb
mov
rclb
push
lock
popf
mov
jo
shlb
sbb
icebp
pop
or
mov
or
push
loop
inc
cmp
fisttpl
lock
cltd
loope
lcall
jmp
cs
mov
pop
inc
pop
sbb
jo
push
ja
daa
cmp
lock
push
or
ja
ljmp
adc
jmp
hlt
popa
cmpsl
movsl
daa
das
dec
aad
push
or
leave
and
lds
lret
cli
xor
mov
pop
mov
inc
lret
flds
and
scas
nop
adc
es
xchg
fnstcw
mov
push
sub
adc
pop
xchg
cmp
jb
sub
jge
jmp
adc
xchg
adc
mov
adc
pop
mov
add
les
pusha
mul
repnz
pushf
in
pop
rorb
inc
and
clc
out
mov
rcl
clc
je
mov
cmp
in
lods
push
dec
jl
mov
das
testl
jb
xor
mov
fimuls
jbe
lahf
adc
sub
cmp
je
das
arpl
cmp
outsl
pop
imul
in
ljmp
das
out
sub
jmp
mov
ret
pop
fyl2x
insb
in
mov
fimull
repz
xchg
ss
pop
insb
push
push
test
mov
add
movl
clc
arpl
aaa
or
jecxz
push
mov
sbb
push
lcall
jecxz
jb
sub
clc
out
mov
int3
sub
leave
movsl
repnz
jne
jae
adc
xchg
sub
sub
cwtl
add
lods
in
adc
adc
jg
dec
aas
lods
dec
cmpb
sti
nop
dec
sahf
add
and
jmp
cltd
mov
fdivp
pop
mov
mov
enter
neg
lea
push
cmp
leave
lahf
and
lea
inc
pusha
xchg
mov
push
lahf
pop
jp
dec
pop
pop
cli
inc
inc
shlb
stos
sbb
mov
push
mov
popa
mov
loop
add
dec
cmp
mov
cmp
mov
push
popf
fists
inc
out
repnz
xchg
test
push
sbb
sub
mov
notl
mov
jle
inc
push
scas
int
imul
jns
push
test
jl
sub
ds
js
imul
movl
arpl
mov
aas
aas
cmp
mov
sti
enter
std
aam
sbb
test
mov
mov
shll
jmp
out
xchg
sbb
or
xchg
idivb
inc
cltd
push
or
cmpsb
sysret
cmp
movsl
inc
fdivrs
xchg
adc
inc
push
lock
lods
jp
lods
xchg
or
into
lret
in
xchg
xchg
pop
in
nopl
adc
ret
push
push
jp
mov
mov
push
dec
add
and
lods
cmp
xor
or
call
enter
divl
or
inc
repz
xor
adc
ja
sbb
daa
or
pusha
add
or
and
xor
stc
call
mov
pop
cmpl
out
adc
repz
mov
shr
inc
out
mov
xchg
inc
loop
cmp
inc
test
pop
jmp
xor
inc
fsubrl
sbb
sub
sbb
leave
scas
adc
stos
push
outsb
cmp
or
andl
mov
leave
ret
cli
stos
xchg
adc
dec
sahf
movsb
sub
pop
test
xchg
test
cmp
je
push
xchg
mov
inc
sub
mov
insl
pop
push
in
in
stc
jg
inc
and
inc
sbb
xlat
stos
adc
or
lods
test
jbe
test
lods
out
jmp
push
gs
jne
ficoms
adc
xchg
xor
sbb
dec
hlt
fsubl
sub
inc
mov
ud0
and
sti
mov
and
mov
scas
lods
bound
scas
leave
in
idivb
shrb
movsl
jb
dec
jne
or
mov
or
inc
mov
leave
pop
loopne
add
mov
pop
mov
cld
lock
jge
idivl
dec
data16
jo
and
dec
xlat
hlt
xor
fs
cltd
dec
por
dec
jne
and
adc
cmp
loopne
xor
clc
inc
dec
xor
mov
adc
push
fidivrs
leave
inc
clc
testl
ret
mov
pop
mov
shrb
and
push
sub
scas
push
fwait
dec
cmp
fimuls
lods
test
cmp
adc
jmp
and
pop
dec
movsb
cld
push
dec
int
adc
nop
pop
lcall
enter
adc
sub
xchg
insl
lods
and
xchg
or
cmp
fldenv
icebp
or
ss
in
loope
or
and
cmp
and
sub
push
mov
mov
adc
out
xchg
mov
das
inc
aam
or
pop
adc
lock
dec
push
ljmp
test
mov
push
dec
pop
int3
dec
pop
sub
fmull
call
push
dec
fdivs
icebp
push
fsubl
aam
cld
inc
cs
xlat
jae
add
mov
jns
mov
imul
out
inc
stc
push
loope
fistpl
and
or
xchg
scas
pop
adc
dec
push
call
jge
or
cmp
stc
js
jge
cmp
pop
test
lea
xchg
xor
lcall
mov
call
push
pushf
rclb
cwtl
idivl
rorl
mov
test
xchg
mov
jle
stos
jmp
jecxz
mov
add
imull
stos
testl
negb
adc
std
sub
mov
cmp
scas
mov
enter
pop
lcall
ficomps
or
and
cli
and
pop
cmp
scas
rcrl
mov
cmp
dec
push
jmp
push
pop
pop
push
imul
jne
jne
faddl
repnz
dec
jb
call
push
push
loope
ds
ja
push
xchg
in
mov
pop
pop
and
adc
test
dec
out
and
test
or
push
xor
lea
fwait
mov
inc
mov
add
xchg
arpl
and
push
inc
dec
je
mov
xchg
lods
jno
inc
cmp
std
xor
test
xor
mov
out
int
mov
pop
mov
sbb
and
stos
lds
int3
out
inc
and
xchg
jl
jmp
mov
pushf
adc
call
adc
adc
pop
loop
sbb
leave
adc
roll
aam
bound
inc
xchg
scas
xchg
adc
jp
and
jmp
and
push
and
push
dec
cmc
out
mov
jl
mov
and
fldenv
daa
sbb
push
insb
cmpsb
mov
testb
add
push
or
subb
cmp
bound
fldl
call
mov
mov
orl
mov
ret
jo
inc
movsb
hlt
cltd
call
movsb
sub
loop
inc
stos
enter
addr16
popaw
or
sub
lds
jmp
push
mov
mov
mov
mov
dec
hlt
inc
mov
jge
icebp
dec
mov
sub
cmpsb
fisubrs
and
mov
ljmp
adc
call
cmp
popf
mov
ret
adc
and
stos
cmpsl
aas
in
add
sub
lret
mov
mov
pop
sub
test
fsubl
sbb
daa
adc
pop
leave
std
les
lahf
fldcw
out
xor
or
jb
loop
hlt
stos
mov
das
mull
movb
inc
push
dec
pop
xchg
mov
mov
pushf
xor
add
fdivrl
in
dec
inc
sti
int
das
dec
adc
pop
in
jmp
movsl
mov
lock
pop
inc
pop
mov
pop
jg
fwait
sarl
mov
or
out
not
sub
and
pop
jmp
pop
or
sub
jns
movsb
cmp
ljmp
adc
fcoms
mov
inc
adc
test
into
push
mov
mov
data16
jo
dec
cmc
pop
add
fildll
pop
test
add
test
jmp
adc
iret
sub
imul
inc
out
stos
push
xchg
dec
fimull
ds
mov
pop
shll
fsubrl
xor
cld
movl
sub
mov
pop
sub
jmp
adcb
add
cwtl
loopne
inc
cmp
out
mov
leave
sub
out
pop
inc
mov
and
cmpsb
in
out
pop
lahf
push
inc
fs
adc
fstl
adc
test
and
push
mov
pop
sti
or
jg
xorb
clc
push
mov
inc
jl
rorb
and
fimuls
sti
cmp
cmp
data16
sbb
jnp
aad
test
mov
cmp
cmc
mov
test
mov
orl
push
mov
hlt
mov
aam
shrl
xchg
cli
std
imul
mov
call
sbb
jl
fnstsw
add
roll
sbb
movsl
mov
jge
bound
inc
in
cli
adc
jb
hlt
mov
mov
ljmp
and
cmp
mov
and
pop
adc
jmp
fs
adc
xchg
pop
push
add
aad
test
test
and
sbb
push
rcrl
nop
mov
sbb
call
cmp
sbb
inc
dec
mov
add
gs
stos
pushf
loopne
das
jmp
lcall
scas
popf
dec
lods
sub
daa
push
jg
mov
xor
dec
or
xchg
notb
nop
ret
and
and
add
push
lcall
in
mov
mov
xlat
or
adc
mov
mov
dec
insl
subl
cmpsl
popf
pop
cmp
je
inc
mov
cmp
cli
jb
mov
dec
jae
mov
popa
cmp
jae
jge
daa
or
or
sub
dec
jns
inc
adcl
lret
repz
jo
pop
push
mov
mov
adc
push
lods
ja
bound
pop
repnz
bound
sub
ljmp
sahf
shlb
sahf
xor
add
sbb
mov
movsl
ret
xchg
mov
or
sbb
nop
push
adc
dec
loop
pop
adc
ret
mov
ret
xchg
sbb
mov
dec
scas
fs
aad
insl
inc
and
inc
jle
imul
fdivrl
out
cs
std
das
pop
or
xchg
call
je
out
imul
in
xor
sbb
js
ljmp
je
outsb
mov
sub
push
jne
scas
mov
shll
pop
les
mov
fadds
dec
scas
xchg
test
sbb
ret
mov
mov
cmp
jmp
je
jne
xchg
sub
cmpsb
xchg
loop
shl
decb
stc
sbb
sarb
mov
sbb
jmp
ja
out
imul
mov
pop
sbb
insb
stc
cmp
cmc
imul
sbb
xor
push
mov
mov
jl
mov
inc
hlt
mov
inc
push
stc
mov
cmc
dec
sahf
jb
rorl
jbe
call
xor
daa
ljmp
ds
lea
sub
push
in
adc
xor
out
and
and
inc
mov
xor
mov
cli
int
mov
bound
fnsave
adcl
push
test
mov
push
jbe
pop
inc
lds
mov
mov
mov
inc
push
fmull
sbb
ss
push
sbb
mov
dec
fwait
sti
cwtl
jl
mov
push
je
and
push
cmp
pop
mov
arpl
mov
outsb
xor
mov
hlt
sbb
cmp
or
leave
push
cmp
cmpl
shlb
inc
sar
repnz
movb
push
das
sub
pop
mov
mov
andl
adc
push
mov
xor
and
cmp
scas
inc
adc
mov
cmp
movsl
fcomps
xor
out
push
ss
fdivl
or
jecxz
incl
movsb
out
int
clc
gs
dec
movsl
ljmp
and
in
nop
jge
inc
and
inc
mov
cmp
sahf
jne
push
xor
push
test
insl
mov
add
push
mov
rcll
adc
fstps
inc
xor
adc
and
test
mov
mov
dec
jmp
bnd
out
roll
test
or
or
les
sbb
dec
scas
shl
outsl
shll
and
xchg
xchg
mov
test
test
jmp
jp
push
movsl
mov
call
js
mov
imul
mov
jns
das
stc
xor
add
mov
and
nop
lahf
aam
arpl
jl
lods
jno
adc
ret
cmpsl
jmp
mov
and
clc
or
sub
sbb
ja
stos
xchg
pop
test
pushl
lcall
fdivs
pop
fidivl
jmp
sub
adc
inc
adc
jne
cli
data16
adc
and
jmp
mov
dec
push
shrl
dec
cmp
push
pop
mov
push
nop
adc
jnp
fstpl
popf
push
mov
inc
mov
push
loop
or
shlb
mov
shlb
ret
cmpsl
sahf
ja
adc
dec
mov
in
out
pusha
in
and
mov
cmpxchg
dec
mov
ret
aaa
mov
sub
fs
mov
inc
lock
mov
mov
dec
imul
lods
adc
dec
into
lahf
sbbl
sub
das
add
loopne
add
imul
jae
stos
and
adc
jne
clc
pusha
or
loopne
push
call
adc
subb
rcrb
bound
aad
dec
insl
and
gs
in
imul
jne
mov
xlat
mov
mov
jp
jbe
inc
push
adc
clc
add
jnp
push
lock
sub
int
and
mov
decb
mov
sub
rorl
and
xlat
sbb
jo
inc
or
pop
clc
xor
stc
sbb
pop
mov
pop
cld
pop
icebp
jecxz
adc
mov
arpl
les
repnz
xchg
movlps
inc
jl
cmp
or
push
xchg
scas
push
pop
xchg
filds
push
or
fnstcw
xchg
or
out
fsubr
sbb
test
xlat
pop
idivl
repnz
mov
jg
pop
jl
add
fnstsw
jne
test
les
stos
push
xlat
sbb
xor
mov
add
pop
inc
mov
mov
js
daa
sbb
jb,pn
xchg
jmp
or
idivb
aaa
mov
add
pop
bound
push
mov
sbbl
andb
mov
jne
mov
adc
jne
ficoms
jle
mov
scas
push
dec
mov
test
xorl
jmp
or
sbb
sub
clc
push
mov
call
mov
xor
jne
push
call
test
inc
std
test
lret
leave
adc
push
push
leave
pop
jmp
jmp
dec
push
pop
fwait
mov
or
jp
jmp
or
xor
nop
pop
clc
xchg
inc
or
addr16
mov
in
jno
xor
enter
pop
sti
adc
leave
cmpsl
in
push
push
mov
rclb
inc
stos
gs
call
ror
inc
repz
pop
hlt
gs
out
mov
insl
jb
sub
scas
bnd
jmp
pop
clc
fcomp
cmp
mov
out
imul
and
test
and
and
cmpsl
mov
xchg
fidivl
fwait
lahf
mov
iret
ret
jl
out
inc
scas
push
sahf
lea
push
sahf
test
test
insb
or
dec
movsb
mov
jle
fsubr
adc
jecxz
dec
loope
das
mov
jo
cmp
jle
jp
je
dec
mov
sub
inc
xor
je
xchg
push
mov
mov
test
dec
xchg
lods
xor
push
dec
cmp
into
and
movsb
mov
sbb
ret
icebp
add
cmp
jl
xor
push
sub
adc
repz
push
ss
ret
sbb
cs
stos
jb
add
nop
mov
mov
dec
fadd
or
cmpsl
aas
and
push
xor
imul
push
cld
sbb
dec
push
repz
out
enter
sub
stos
and
sub
out
xchg
push
and
adc
jl
dec
sahf
push
inc
shlb
inc
shlb
aad
and
xchg
fists
mov
cmp
sub
push
mov
adc
dec
sub
and
fisttpl
test
cmp
xchg
jmp
fstps
icebp
sub
mov
and
jns
push
push
daa
dec
xor
push
mov
repnz
leave
push
pop
sbbb
stc
testb
or
mov
inc
or
adc
jg
push
nop
pop
out
or
or
adc
adc
mov
fsts
inc
push
das
sub
dec
inc
inc
aad
rolb
clc
je
sub
cmp
adcl
push
add
sbb
cmp
mov
loop
jb
repnz
mov
xchg
jge
pop
mov
mov
adc
ljmp
pop
pusha
adc
rolb
jnp
xchg
push
cld
push
test
push
mov
mov
icebp
jmp
imul
ja
ljmp
mov
add
lds
ret
cmc
push
dec
cmpsl
push
mov
cld
cmp
pop
or
inc
xchg
mov
push
loop
loop
fisttpll
cltd
sbb
daa
je
clc
rcl
sbb
test
inc
sub
add
dec
xor
das
out
sub
xchg
call
sbb
jmp
cmp
shrb
sar
ja
dec
xchg
push
pop
and
or
lea
xor
pushf
lds
pop
add
sub
leave
out
popf
push
aas
adc
mov
pop
ffree
lods
or
stos
lea
test
pop
out
std
mov
xchg
sub
mov
pop
mov
push
inc
stc
add
test
pop
out
xor
mov
stc
xchg
mov
and
cmp
call
or
dec
xor
dec
scas
jecxz
inc
mov
and
adc
icebp
jnp
and
sbb
sub
dec
cmc
dec
loopne
mulb
cwtl
dec
push
call
in
add
push
or
outsl
adc
shll
jmp
inc
sahf
push
push
and
and
imull
je
or
shrl
cmpb
and
test
test
sbb
sub
adc
sti
push
mov
xchg
push
push
push
or
push
out
xor
pop
pop
sub
jne
test
ds
cmpl
clc
sbbl
jbe
dec
fsubrl
push
stos
je
and
adc
sub
mov
imul
les
push
fcmovnb
test
pop
mov
inc
arpl
shr
dec
cmp
rclb
adcb
cli
jnp
shlb
addr16
jmp
push
xor
xchg
ja
jmp
push
arpl
pop
sub
mov
aad
mov
sub
ror
lods
jnp
mov
pop
jp
xchg
jmp
testl
insb
or
mov
ret
and
adc
cmp
jne
ljmp
xor
loop
jbe
jl
lcall
fnsave
mov
std
pop
push
jle
push
lahf
add
cld
jno
push
and
movsl
roll
arpl
jmp
or
and
or
sbb
dec
adc
fsts
sub
mov
xor
sub
sub
dec
stos
test
sbb
mov
sbb
in
hlt
mov
pop
push
sbb
xchg
xchg
aaa
cmpsb
data16
push
xor
imull
or
xchg
outsl
loop
push
gs
mov
ret
pop
add
pop
cmp
pop
sbb
inc
imul
lcall
mov
scas
pop
mov
pop
leave
mov
js
xor
jns
shll
loopne
cmp
enter
and
stc
and
pop
pop
xchg
incb
inc
out
adc
bound
lea
sbbl
pop
adc
xchg
cwtl
inc
aad
jl
xor
ret
movsl
mov
xchg
push
imul
mov
fldenv
lcall
loop
mov
stc
or
xchg
fdivrp
les
test
xchg
push
push
mov
and
inc
sub
sub
dec
fidivrl
jle
imul
jmp
fiadds
xchg
inc
xchg
inc
push
orb
test
ja
aam
fdivl
jl
pop
mov
andb
das
push
mov
dec
and
out
inc
jp,pn
push
test
into
adc
lret
mull
or
sbb
inc
mov
loope
mov
aaa
fcmovnbe
dec
flds
in
push
dec
les
nop
shlb
stos
mov
sbb
test
adc
ret
sbb
dec
pop
mov
or
and
pop
lods
or
dec
and
test
cltd
or
jno
popa
pop
xor
and
lret
movsb
mov
mov
inc
and
pop
jnp
bound
aas
sub
test
push
jo
es
aaa
fiaddl
pop
pop
in
push
push
add
jbe
and
and
dec
jmp
jbe
daa
dec
mov
or
test
mov
pop
and
pop
mov
dec
pop
sub
movsl
sbb
push
inc
mov
lods
dec
dec
dec
cld
ss
adc
and
ss
imul
xor
pop
gs
inc
daa
icebp
call
xor
insl
andl
dec
lea
inc
ds
cmc
xor
inc
jl
adcl
add
dec
add
cmp
push
insl
and
push
cmp
shrb
loopne
test
xchg
fucomp
xlat
cmp
mov
xchg
movsl
jne
test
dec
pushf
jae
push
push
mov
cltd
out
pop
and
adc
xor
push
jg
int3
int
shlb
divb
rcrl
inc
dec
sub
xchg
push
push
and
push
movzwl
rol
xor
movb
jne
pop
pop
pop
imulb
dec
pop
dec
dec
hlt
jg
xchg
pusha
sbb
int3
or
push
sub
adc
ret
sub
sub
sub
sub
call
shl
xchg
mov
leave
add
pop
xor
lret
mov
dec
adc
xchg
ja
and
aad
out
pop
jmp
jns
jne
in
jl
es
xchg
shlb
dec
into
stos
fdivs
out
push
and
cmpsb
or
jnp
or
sub
add
mov
or
xor
call
mul
mov
inc
sub
dec
and
rorb
shll
sbb
dec
imul
jb
into
and
mov
and
test
in
and
cld
push
dec
or
vmovntps
cli
shlb
mov
ret
xchg
fdiv
sub
cmp
loop
cmp
idivl
mov
int
ret
inc
and
adc
les
scas
sbb
lret
dec
sbb
lea
xlat
xchg
ja
int
test
mov
inc
xor
imul
push
ficoms
mov
rorb
sbb
repnz
sub
dec
or
jmp
jne
into
pop
clc
cmc
out
into
or
and
cmc
icebp
andb
pop
push
cmp
je
jne
sti
cmp
ret
or
cs
cli
nop
sub
mov
jbe
mov
gs
cmpl
jne
pop
lock
mov
cmp
jmp
adc
je
pop
int
push
dec
mov
and
ja
cld
xor
in
das
cmp
incl
aas
imul
adc
adc
les
push
push
xchg
lds
sbb
or
lcall
insb
stos
insb
test
cmc
fldenv
mov
add
inc
adc
dec
adc
int3
in
xorl
jge
inc
mov
shlb
mov
adc
in
andl
fwait
aad
stos
or
and
insl
push
in
xor
cmc
lock
ss
fwait
shrl
jle
popf
sar
arpl
mov
push
test
or
cli
add
test
push
js
jns
push
popa
or
and
fistpll
dec
cwtl
test
aam
adc
and
dec
shl
jmp
rcll
and
or
and
mov
dec
lea
lea
dec
push
outsb
mov
dec
add
cmp
lret
dec
arpl
mov
jne
pop
sub
dec
or
outsb
rcll
test
dec
inc
lret
mov
xor
mov
adc
push
enter
or
xchg
push
push
adc
inc
push
in
mov
adc
pop
leave
adc
out
xchg
push
sub
and
jnp
test
push
decb
inc
cld
mov
das
push
add
pop
jle
sbb
jne
ja
jns
lods
fidivs
and
push
mov
jl
or
add
clc
addr16
add
adc
inc
push
cltd
jmp
cmp
andl
adc
jmp
out
call
aaa
xor
push
or
pusha
jge
or
jmp
arpl
adc
dec
jmp
xchg
ss
pop
call
shrl
pop
add
xor
mov
push
xchg
jne
mov
xor
and
or
test
sub
dec
enter
lret
mov
or
add
test
xor
push
je
mov
inc
add
xor
push
adc
jge
jge
cld
sub
add
add
or
adc
lret
stc
test
and
mov
pop
cli
sub
inc
pop
sub
repz
or
adc
ss
xchg
mov
ret
jmp
push
fdivrs
and
mov
mov
sbb
mov
pop
jnp
pushf
stos
inc
inc
scas
cwtl
imul
mov
xor
mov
push
cmp
cmp
push
je
stos
int
jp
dec
or
push
pop
add
push
jge
xlat
push
mov
test
adc
pushl
add
dec
mov
out
daa
out
push
movsl
jo
xlat
xlat
mov
pop
jne
and
push
add
or
or
hlt
negl
sbb
push
mov
imul
jl
cmp
movsl
sub
imul
jo
mov
jmp
movsl
sti
pop
mov
shr
and
daa
sti
pusha
nop
lea
mov
test
outsl
mov
sbb
scas
mov
decl
xlat
test
mov
daa
mov
jge
and
mov
push
xchg
or
adc
xchg
cwtl
shlb
dec
add
add
push
push
mov
call
sti
push
or
mov
mov
jg
or
negl
or
or
sub
cmp
lahf
mov
adc
mov
inc
ljmp
ret
push
mov
scas
shlb
les
repnz
dec
dec
cmp
fxch
push
jb
dec
push
test
ror
xchg
push
or
jne
xchg
into
lret
sti
movsl
add
mov
ja
push
or
and
ljmp
outsl
dec
sbb
mov
icebp
push
cli
movsb
stos
imul
inc
arpl
sbb
add
xor
dec
sub
pop
add
and
ljmp
testb
ret
outsl
pop
fsts
adc
sub
nop
xchg
or
jno
push
xor
out
in
je
xor
das
push
lea
stc
push
dec
jne
sub
cmp
sbb
jbe
cmp
movsb
les
jp
arpl
pop
cltd
lea
lret
daa
loope
ret
out
mov
adc
cmp
dec
add
pusha
mov
ds
jp
cmp
jne
jecxz
ror
lea
or
push
xor
adc
inc
push
subb
add
dec
inc
cmp
pop
je
mov
cmp
cmc
xor
xor
das
int
jg
rclb
and
sarl
mov
push
je
fnstcw
loopne
mov
cmc
jmp
push
push
jmp
push
test
xchg
loop
inc
inc
in
call
cmp
adc
leave
push
icebp
sub
das
adc
add
xor
push
mov
aam
pop
lahf
fidivl
aad
jb
popa
fs
incl
int3
push
add
sarb
add
mov
lcall
out
fldt
es
xchg
inc
outsl
cmpsb
sbbb
dec
cmc
popw
ficoml
fs
stos
adc
lea
test
mov
mov
mov
jmp
scas
cmp
les
cmp
movsb
xorl
cwtl
adcb
cmp
jb
test
mov
sub
and
stos
inc
lea
int3
inc
cmp
sub
test
jle
and
adc
sub
dec
jmp
mov
pop
mov
cli
scas
repz
dec
and
stos
jmp
je
rcl
sbb
sti
aam
andl
inc
fadd
adc
jne
movsl
mov
mov
fsubs
jbe
lea
or
or
sub
aad
addl
cmove
push
imul
dec
imul
fldcw
mov
jb
loope
mov
inc
pop
cld
push
leave
and
pop
lcallw
ret
mov
push
cmp
das
jmp
ficomps
adc
pop
pop
push
lods
loopne
jne
lea
clc
pop
xor
dec
or
loope
lods
dec
push
xor
and
stc
push
add
xlat
dec
bound
je
pop
xchg
push
fmuls
out
insb
mov
mov
test
ja
inc
test
jge
and
pop
rcrb
or
or
cltd
in
push
les
mov
outsl
idivl
lock
or
adc
sbb
inc
push
jmp
jb
xchg
push
inc
pop
das
rcr
pusha
cwtl
cld
in
movsb
in
sbb
jge
ss
stos
jbe
je
jge
add
lea
sbb
addl
adcb
jnp
push
adc
shlb
xlat
loop
pop
mov
jne
inc
adc
push
dec
lea
push
fs
imul
adc
dec
icebp
jae
jne
std
pop
pop
fcmovnu
and
push
inc
push
fadds
push
in
scas
jecxz
pop
movsb
out
inc
push
sub
push
fiadds
adc
std
fwait
adc
jne
loope
pusha
inc
cmp
jl
xchg
mov
dec
mov
loopne
pop
mov
jle
cmp
subb
inc
lea
mov
adc
popa
dec
jmp
cmp
popa
mov
adc
scas
mov
cmpsb
sbb
pop
fcoml
push
xchg
pop
sub
mov
hlt
loope
push
push
push
and
clc
dec
daa
hlt
fs
push
mov
loopne
mov
mov
sbb
adc
nop
stos
lahf
dec
aad
xor
pop
imul
sub
jbe
das
dec
sbb
cmp
sbb
xlat
cmp
push
lret
cmp
mov
dec
enter
iret
pop
add
pusha
dec
add
mov
inc
sbb
or
jno
pop
push
add
xor
sti
call
leave
xor
pusha
subb
fs
dec
jge
pop
out
sub
inc
jae
push
mov
into
xchg
pop
hlt
push
mov
test
je
mov
ret
push
pop
mov
push
add
pusha
into
jle
xor
sti
dec
push
in
add
clc
dec
das
and
jl
mov
lahf
hlt
loope
outsl
shlb
stos
adc
and
push
aad
pop
movsb
cmpsb
dec
loop
push
mov
jmp
push
rorb
mov
or
aad
jns
in
inc
inc
data16
jecxz
pop
xor
loope
mov
inc
popf
andl
mov
mov
fs
stos
sarl
test
lock
aas
xchg
cmp
arpl
and
sub
dec
xor
je
cmc
sub
jb
sub
imul
fnstenv
jl
call
sbb
call
xchg
push
xchg
lods
pop
flds
mov
scas
jno
sbb
jmp
xchg
bound
int3
fwait
jle
xchg
push
xchg
jmp
in
loopne
sbb
test
inc
popf
gs
scas
movsl
push
pop
movsb
jns
add
dec
adc
aam
mov
movsb
jmp
mov
push
repnz
lods
sbb
adc
movsb
jle
cmp
cmp
add
and
in
int3
jle
dec
nop
xor
inc
or
mov
rclb
pushl
call
jmp
jbe
cmp
mov
lods
je
add
shll
inc
outsb
sbb
js
adc
dec
aas
jg
adcl
cli
pop
daa
test
lock
and
xor
push
call
adc
lahf
and
ljmp
xchg
pushl
popf
clc
dec
mov
pop
mov
mov
clc
insb
aad
clc
pop
mov
idivl
faddp
scas
jnp
or
rolb
jne
mov
cmp
movsl
pop
popa
outsl
xchg
cld
xchg
daa
push
repz
cmp
dec
imul
xchg
rcll
jno
je
stc
fwait
dec
idivb
fisubl
call
stos
dec
incl
or
mov
imul
iret
popf
xchg
jns
and
pop
push
add
call
push
imul
mov
push
xchg
or
jnp
mov
pop
sub
or
std
pop
insb
mov
pop
pop
dec
dec
jmp
and
stos
lods
mov
sti
sub
dec
ja
sub
pop
push
ss
iret
adc
cli
xchg
push
ljmp
ret
loope
xor
jmp
cmp
and
movswl
clc
loop
cmp
dec
leave
test
mov
adc
mov
stos
adc
and
mov
push
jecxz
cmovl
push
es
cmp
scas
add
mov
jne
mov
inc
sbb
in
jmp
xchg
dec
cmp
sub
pushfw
in
leave
sub
adc
xchg
push
jle
cld
xchg
sub
test
adc
outsl
mov
mov
imul
mov
mov
add
adc
mov
mov
push
pop
mov
mov
push
pop
mov
and
call
fsubrs
mov
push
mov
push
in
ret
push
inc
mov
xor
enter
cmpsb
vpshlw
stos
shll
adc
pop
and
es
loop
call
pop
and
les
xchg
imul
sub
cmp
add
adc
xchg
push
cld
sbb
and
or
orb
loope
stc
daa
leave
push
push
dec
dec
adc
ret
je
pop
adc
add
and
jmp
cld
mov
dec
or
adc
xor
sar
sub
repnz
cmp
jg
or
pop
mov
cmp
adc
jnp
sub
sbb
ret
cmp
mov
ss
adc
mov
sbb
dec
cmp
sub
xchg
mov
cmp
mov
frstor
push
inc
repnz
mov
ss
push
pop
fidivrl
and
rclb
mov
inc
ds
call
xchg
push
sbb
mov
test
fcoml
dec
iret
xchg
add
sbb
pop
dec
cmp
lahf
xchg
xchg
pushf
in
sarl
arpl
pop
mov
xor
ret
out
sub
ret
aad
xor
push
call
xor
call
push
shl
jp
mov
jbe
jo
stc
cs
call
pop
aad
jno
out
cmp
mov
fdivrs
jnp
xlat
mov
mov
call
push
dec
scas
dec
je
imul
int3
inc
insb
les
mov
cmp
xchg
aas
lret
mov
or
stc
movsl
fisttps
add
inc
hlt
xchg
shll
add
out
or
loopne
mov
push
mov
call
insl
in
mov
push
pop
inc
movsb
mov
pushl
push
jg
pushf
stc
cmp
sbb
or
test
ja
movsl
or
jns
aaa
xor
sbb
test
mov
pop
aas
or
clc
pop
jmp
cmp
fs
insl
cmp
mov
jge
dec
push
cmp
addr16
mov
dec
insb
pushf
loopne
call
and
lock
repnz
inc
cmp
mov
push
mov
xchg
shlb
inc
cmp
pop
sbb
xchg
pop
leave
pop
hlt
push
cmpsb
fstpl
mov
jo
mov
cltd
out
imul
fimull
sub
fwait
lock
cld
jno
dec
jmp
xchg
repz
pop
pop
and
into
ljmp
mov
fsubs
daa
repz
and
push
clc
mov
lahf
mov
push
daa
push
add
mov
sbb
sub
sahf
push
and
sub
push
mov
xchg
sahf
xchg
loopne
mov
std
sub
std
lahf
mov
stc
inc
std
std
or
sar
sub
fmuls
enter
pop
or
leave
pop
push
daa
cmp
test
andb
pop
pop
adc
or
and
into
xchg
sbb
mov
inc
call
aam
test
mov
in
push
dec
mov
cmc
jmp
xor
mov
pop
aas
cli
div
ds
cli
cwtl
clc
push
sahf
fwait
pop
mov
jae
add
in
cmp
rorb
sub
or
iret
int
lods
bound
cld
loope
mov
sbb
insb
dec
pop
mov
xor
jo
pop
mov
push
mov
push
shlb
inc
andl
and
daa
insl
mov
inc
and
jmp
fisubrs
sbb
pop
data16
add
sbb
movsl
cmp
popf
cmpsl
jp
filds
or
mov
push
cmc
cwtl
lods
inc
lock
push
mov
inc
mov
std
inc
mov
mov
jno
sub
mov
xchg
cmpsl
xor
xor
enter
inc
ljmp
pop
push
loope
leave
inc
jno
arpl
pop
repz
pop
mov
push
mov
push
mov
inc
cli
popl
xor
add
dec
cmpsl
pop
xchg
inc
repz
cmc
pop
mov
sbb
data16
mov
push
adc
jg
xor
in
dec
sub
mov
rclb
adc
mov
call
xchg
icebp
insl
mov
mov
call
rcll
push
pop
dec
mov
inc
dec
movsl
rclb
mov
mov
push
sub
cmp
mov
cwtl
sub
lahf
jp
sub
add
imull
scas
and
fs
xor
sbb
or
mov
push
in
out
ret
mov
rorb
xchg
or
push
adc
xor
sub
icebp
or
inc
or
mov
sub
cmp
outsb
testb
aam
cld
sbb
push
ljmp
pop
xchg
out
or
pop
or
ljmp
jmp
jbe
pop
cld
xchg
sub
std
sub
or
pop
stos
add
movsb
andb
fdivp
push
jb
lret
inc
stos
xor
jg
inc
cmp
lret
inc
or
add
fs
mov
pop
adc
cwtl
sub
xchg
jnp
or
mov
and
add
not
mov
out
add
stc
add
inc
and
jne
cmp
mov
add
adc
je
push
adcb
enter
mov
or
jmp
call
xor
fldenv
xor
or
stos
mov
adc
inc
cmp
andl
pop
mov
in
cwtl
sahf
sub
fwait
mov
xchg
aas
push
fwait
adc
add
ret
cmp
fmuls
push
test
out
and
or
clc
mov
xlat
sbb
inc
cmpsb
pop
adc
test
mov
adc
and
dec
frstor
mov
mov
lods
xchg
out
mov
or
inc
loopne
xchg
pop
pop
jp
cltd
mov
push
into
negb
fsubs
inc
mov
mov
test
nop
push
sub
mov
push
sahf
cmpsl
andps
leave
jne
iret
push
faddl
mov
pop
bound
test
and
jnp
inc
adc
cmp
cmp
push
fisubl
ja
pushf
inc
call
jmp
mov
dec
fiaddl
push
ret
xchg
fiadds
lret
and
loope
das
shrl
dec
decb
mov
mov
imul
shrl
adc
ss
shrl
and
fnstsw
jne
es
sahf
dec
xor
dec
mov
std
mov
add
or
inc
lahf
bound
jp
fnsave
sub
or
or
sahf
mov
sbb
jmp
fimull
sti
rolb
test
pop
arpl
ljmp
imull
mov
inc
and
call
fnstsw
pop
or
ss
incb
dec
sub
mov
push
xchg
aaa
dec
or
xchg
ja
and
mov
pop
cmpsb
es
clc
dec
je
jbe
jmp
fmul
jns
inc
adc
or
cltd
or
xchg
jo
test
std
cltd
arpl
dec
adc
xlat
mov
sbbl
arpl
cmpl
in
xchg
in
ja
movsl
test
add
mov
mov
movsl
sub
aam
scas
dec
fisttpl
xchg
push
xor
inc
push
mov
xchg
cld
lea
xchg
adc
adc
call
push
cmp
sbb
out
jle
xchg
es
jno
mov
leave
lea
mov
mov
mov
stos
jns
mov
imul
adc
adc
das
test
dec
int3
xchg
pop
int
pop
adc
jo
cmp
xlat
fs
out
or
add
xchg
in
jns
sbb
leave
sti
test
out
sbb
or
movb
push
ret
mov
rorl
jo
push
jne
mov
inc
aaa
adc
xchg
orw
mov
dec
mov
cmpsl
test
cmp
into
push
push
jmp
das
jo
enter
push
xor
iret
fdivrl
sub
es
and
and
shl
or
xchg
out
or
sbb
push
push
push
add
and
pop
adc
push
xor
loop
int
push
xor
mov
movsl
out
xchg
popa
ljmp
sub
and
mov
fwait
pushf
push
dec
fbld
add
inc
xor
icebp
imul
pop
out
jg
lds
je
push
adc
sub
loop
inc
mov
add
fadds
adc
enter
xor
push
sub
cltd
dec
loopne
push
adc
jl
pop
lds
inc
divl
stos
xchg
fwait
xor
dec
push
push
pop
fs
jne
cmpsl
mov
jmp
sub
int
inc
adc
stos
leave
xor
mov
push
mov
xchg
mov
sarb
movsb
js
mov
mov
lea
jmp
imul
sub
mov
adc
test
std
loope
in
stc
jbe
inc
push
mov
and
dec
popf
jmp
std
fistl
call
ret
outsl
jb
pop
cmp
or
or
bound
jmp
dec
lea
mov
jne
stc
add
sbb
das
cmp
imul
mov
pop
push
ljmp
pop
outsl
sbb
sub
dec
jp
mov
mov
or
lea
mov
cmpsb
or
int3
ret
cwtl
adc
push
in
cmp
pop
dec
xchg
mov
add
nop
cmp
out
adc
or
mov
pop
mov
and
jne
or
fnstsw
dec
fnstsw
fs
sbb
pop
push
call
outsl
sarb
or
adc
repz
popa
ds
jne
stc
icebp
sub
mov
imul
sahf
pop
cmp
mov
cltd
sub
jo
lcall
stos
xor
hlt
mov
jae
sbb
sub
aas
xchg
fisubl
inc
push
in
mov
aad
sub
jge
push
aaa
paddb
jl
adc
push
daa
push
mov
jns
sbb
xor
mov
push
mov
clc
cli
pop
add
adc
or
fwait
sub
rclb
dec
fiaddl
push
sti
and
sti
test
xlat
and
or
or
xchg
ja
pop
shll
sub
or
or
sub
shlb
das
test
add
fistl
xlat
stos
int
imul
jno
je
daa
sti
sub
sub
jns
daa
loopne
mov
add
xchg
stos
xor
stos
mov
adc
inc
and
sbb
data16
test
push
jne
cmc
and
fsubrl
sti
push
popf
inc
adc
ljmp
dec
stos
cmpb
sbb
dec
xchg
pop
or
mov
cmpl
dec
mov
push
mov
lods
add
shlb
sarl
pop
jmp
popf
std
mov
ret
cld
or
or
cmc
xchg
push
pop
adc
adc
mov
out
jmp
inc
dec
cmp
dec
jne
movsb
je
lds
lds
je
sub
jb
mov
loop
add
enter
adc
cwtl
shrl
jg
sbb
dec
test
pop
xchg
adc
xchg
test
xor
sub
push
xor
push
push
jbe
pushl
call
mov
adc
mov
jmp
fstpl
pushf
mov
and
addl
sbbb
jp
shl
leave
xchg
int3
or
sar
shl
das
push
outsb
lahf
inc
ds
cmpsl
xor
inc
xor
ljmp
iret
movsb
xor
and
pop
retw
jmp
pop
loop
pop
shrl
in
cmp
ja
cmp
jb
or
daa
add
push
jl
xchg
push
mov
dec
cmpsl
clc
sbb
test
jne
ret
pop
jnp
sbb
or
adc
mov
rorl
sbb
push
sbb
popa
les
xchg
pop
add
push
pop
jmp
std
lock
iret
pop
dec
pop
repz
ret
and
add
inc
dec
mov
jmp
movsb
xor
sbb
push
dec
jmp
mov
out
shr
popa
nop
inc
xor
aas
adc
in
mov
or
test
cmp
pop
fdivr
fisttpll
mov
xor
incl
push
mov
adc
andl
jmp
popa
shlb
mov
test
inc
shll
aad
sub
fldcw
sbb
pop
iret
ret
add
lock
push
add
loope
rcr
nop
mov
ret
push
imull
data16
mov
jg
pop
hlt
add
in
sub
add
xchg
fistps
mov
push
pusha
xchg
push
sub
sbb
gs
and
gs
or
scas
or
les
sti
movsl
daa
xor
cmp
repnz
and
jmp
rorb
or
add
pop
leave
das
pushf
daa
and
pop
loope
dec
sub
in
adc
cmpl
jge
lret
imul
or
xchg
push
push
push
sarb
idivl
cwtl
inc
adc
popa
out
out
and
call
sub
fdivrs
adc
fildl
out
pop
mov
jecxz
es
lock
and
repnz
cmp
and
and
push
adc
xchg
out
or
ds
push
aaa
je
sub
test
pop
push
jbe
mov
or
dec
mov
add
movzwl
shll
ja
loopne
loopne
sbb
nop
movsl
fadd
je
loop
xchg
mov
ja
inc
pop
sub
movsb
or
stos
scas
shll
or
ret
xchg
jns
pop
divb
add
fisttps
mov
ja
arpl
add
xchg
inc
adc
and
mov
jge
dec
jge
fimuls
lahf
dec
gs
mov
jbe
xchg
and
jb
add
jp
mov
adc
icebp
mov
or
jle
mov
iret
add
add
comiss
and
or
pop
clc
cmp
mov
popf
mov
xor
movsb
sarl
movsb
leave
jmp
fcoml
xchg
in
inc
dec
mov
test
mov
mov
pop
or
lret
adc
rcr
xchg
ret
dec
jl
ror
push
dec
add
push
add
dec
call
mov
xchg
pop
jl
fisubrl
push
push
idivb
ret
pop
dec
jmp
int3
testb
pop
xor
cmp
mov
mov
xchg
add
add
inc
lods
inc
xor
aad
and
sbb
sahf
or
fwait
divb
xchg
xchg
xor
adc
xlat
adc
fsubrp
mov
std
xchg
loopne
pushw
mov
sub
and
adc
or
and
sbbl
mov
xor
lods
out
mov
and
adc
mov
mov
xor
cmp
sbb
xchg
ja
mov
jp
loope
jge
adc
and
cs
test
fwait
add
xchg
xchg
sbb
fneni(8087
add
pop
dec
adc
test
jl
arpl
mov
cmp
cmpsb
frstor
cwtl
pusha
mov
or
test
mov
sbb
jg
pop
dec
stos
xchg
cmp
cmpsb
cltd
cmp
sbb
dec
sub
imul
cltd
dec
adc
mov
out
cmp
sbbb
jbe
jmp
je
mov
lea
in
push
bound
dec
shr
cli
and
mov
mov
push
pop
imul
xchg
jno
loope
outsb
mov
outsl
sub
arpl
je
inc
adc
imul
mov
cld
jb
mov
dec
sahf
jbe
icebp
or
xor
ds
xor
dec
ret
xor
in
pop
mov
ds
mov
push
xchg
mov
xchg
ret
push
xchg
test
push
push
in
jmp
dec
stos
lea
pop
push
lods
push
orl
adc
cmp
dec
or
cmp
daa
lods
mov
jge
push
mov
mov
push
repz
ror
push
jmp
int
pop
ret
daa
pop
subb
xchg
push
lahf
jns
pop
and
inc
je
jle
cmp
scas
fwait
loopne
popf
sti
push
dec
xchg
inc
and
mov
imul
mov
fs
repz
push
mov
xchg
les
jb
lret
test
bswap
es
repnz
mov
mov
fcomps
add
andb
pop
adc
xchg
dec
enter
das
mov
pop
jmp
or
cld
xor
movsl
adc
and
push
scas
dec
sub
adc
mov
mov
mov
inc
rcrl
cmp
test
xor
jmp
sub
andb
xchg
int3
mov
leave
adc
negl
and
mov
sarl
or
clc
jl
scas
test
cmpsb
jb
push
shll
adc
in
adc
mov
jns
lcall
jne
es
loopne
mov
mov
sbb
cld
add
out
sbb
jecxz
xlat
sub
daa
mov
xor
and
pushf
inc
jo
push
sbb
stos
inc
negb
or
mov
mov
cld
outsl
cmp
movsl
dec
xlat
stos
and
jmp
shlb
pop
dec
mov
mov
sub
daa
cmpsl
pop
cmpl
data16
and
jb
sbb
xor
mov
pop
or
in
pusha
mov
sbb
repnz
pushf
rclb
fstl
or
cmc
xor
ret
inc
pushf
loope
clc
mov
movsl
je
inc
sub
jbe
xchg
cltd
pop
xchg
sub
pushf
out
push
dec
pop
sub
xchg
push
adc
xchg
rorb
mov
cld
add
cltd
add
push
push
movsl
decb
pop
xor
sbb
lcall
jl
lret
addr16
xchg
or
incb
sbb
pop
mov
dec
pusha
sub
lea
xchg
cmpsb
xchg
sub
mov
or
incb
and
mov
nop
add
cmp
repnz
sbb
aaa
or
sbb
lea
insb
push
sub
movsb
mov
xor
lds
jmp
and
sbb
xchg
imul
cmp
add
test
stos
enter
clc
sti
loop
sub
push
out
and
test
mov
xor
jmp
loop
pusha
jecxz
pop
cmp
xchg
sbb
push
push
push
lret
and
jle
ret
mov
cmc
add
add
dec
fadds
cs
pop
lods
popa
xor
xchg
xchg
push
jns
adc
or
sub
mov
inc
sbb
sarl
mov
inc
xor
pop
mov
mov
xchg
push
cltd
pop
or
cmc
inc
mov
jne
push
mov
sar
ss
push
sub
addl
jb
lret
rcll
mov
xchg
jmp
popf
stc
fldt
inc
mov
mov
jne
aam
adc
adc
mov
dec
adc
out
lret
sub
xor
mov
rclb
fidivs
mov
adcl
bnd
dec
scas
js
push
lcall
shrd
testb
xor
cwtl
sub
loopne
or
out
rolb
inc
xor
adcb
dec
leave
add
push
dec
out
push
pusha
ljmp
mov
xchg
dec
or
cmpl
and
jae
and
test
or
and
repnz
int
jo
push
enter
jne
inc
mov
rclb
hlt
dec
cli
insl
xor
in
sub
icebp
and
leave
xchg
add
or
je
inc
ret
rolb
and
jmp
adc
hlt
sub
enter
stc
xchg
adc
data16
adc
xchg
dec
inc
rorl
repnz
icebp
movsl
testl
sahf
xor
fucomi
je
mov
push
inc
push
jne
ret
pop
cmp
jo
adc
cltd
xchg
xchg
and
mov
dec
xchg
or
incl
mov
add
add
lahf
cld
push
stos
adc
mov
adc
inc
lods
cmp
mov
sbb
xor
js
mov
repz
push
dec
dec
cld
cmpsl
addr16
incl
ljmp
jecxz
or
inc
ljmp
repnz
or
cmovp
jp
xchg
cli
icebp
incb
cmp
add
xchg
js
pop
loop
lds
sbbl
push
lcall
inc
mov
in
push
dec
jecxz
pop
push
cmp
mov
dec
bound
rorl
mov
adc
cld
dec
sub
mov
jge
adc
repz
mov
mov
leave
arpl
movsl
bound
lcall
nop
and
fnstcw
cwtl
in
imul
enter
mov
outsb
jne
je
push
inc
adc
cli
aad
add
and
xchg
fs
dec
add
push
xor
lds
mov
mov
idivb
imul
and
aam
aaa
sbb
and
arpl
inc
cwtl
push
cli
mov
xor
or
xchg
mov
push
mov
xchg
dec
pushf
mov
data16
cmp
cltd
ret
and
sti
fwait
or
adc
xor
call
push
mov
push
hlt
xor
fs
pop
and
cwtl
sub
repnz
mov
sahf
jg
fsubs
rorl
fsubr
push
into
lock
fwait
xchg
and
mov
sbb
push
push
sub
dec
inc
sarl
ljmp
mov
mov
xlat
flds
sti
xchg
sub
dec
loop
mov
movb
icebp
fimuls
or
leave
mov
cmp
sbb
les
dec
sbb
pop
jp
call
jo
sahf
add
shr
and
mov
cwtl
mov
cld
mov
push
stc
add
andl
popf
cmp
push
mov
or
or
fdivs
and
cmpsl
push
jmp
les
sbb
cmpsb
cmp
loope
movl
adc
push
push
push
inc
cwtl
pop
xchg
dec
jl
in
sahf
ret
sbb
ficomps
sub
sbb
cli
sbb
fdivs
enter
scas
testl
addr16
add
mov
fcomps
mov
js
inc
mov
inc
push
lea
adc
jecxz
push
or
lret
inc
jmp
or
jecxz
pop
mov
test
adc
sbbl
bound
jle
inc
outsb
inc
scas
cmp
dec
adc
cltd
mull
inc
roll
dec
jns
xor
xor
cmpsl
cmp
cmp
mov
lcall
fisttps
jns
test
pop
adc
fistps
imul
xchg
mov
lcall
mov
cli
es
push
xor
imul
cmp
mov
jmp
jle
jl
jle
call
dec
dec
out
xchg
fwait
in
sub
dec
jg
mov
je
add
jl
invd
in
push
cli
mov
sub
jle
cmpsl
in
push
cmpsl
mov
mov
repz
sbbl
jmp
dec
enter
je
and
push
jns
lret
or
fs
in
mov
pop
adc
in
and
xor
jb
or
and
xchg
jae
out
insl
cmp
adc
inc
mov
sub
out
pop
filds
out
adc
shlb
jge
mov
pop
and
add
stc
mov
push
sbb
lret
jg
jl
mov
ret
sbb
mov
mov
pusha
inc
jmp
sahf
ficoms
in
int3
ficoml
dec
push
mov
add
or
xchg
or
dec
dec
jg
cmpsl
inc
sbb
push
popf
aam
in
dec
jno
jge
sub
mov
fs
fstps
jmp
xor
mov
jo
jg
cmpsb
in
aad
push
movsb
dec
stos
arpl
pop
sbb
jmp
and
or
xor
stos
inc
mov
in
loop
lcall
xchg
xchg
xlat
fwait
cmp
add
jo
fs
dec
test
jb
pop
inc
test
scas
dec
enter
and
push
push
pop
out
pop
add
pop
cmp
push
popa
js
mov
jae
aam
scas
and
sbb
inc
lcall
jnp
adc
sbb
and
ret
lret
pop
and
test
sbb
pushl
ret
mov
mov
mov
pop
outsb
dec
inc
dec
sub
dec
dec
ret
mov
mov
sbb
flds
or
mov
adc
ret
lcall
std
push
mov
cmp
push
mov
and
and
fcmove
xor
xlat
test
jl
ljmp
or
adc
pushl
push
into
push
call
scas
mov
mov
jne
je
inc
mov
mov
les
pushf
cs
mov
popf
adc
dec
jne
and
mov
xchg
push
and
xor
popa
call
rclb
test
and
mov
xchg
jne
dec
inc
adc
decb
in
jmp
mov
mov
mov
mov
adc
xchg
add
push
hlt
or
fsubr
dec
inc
cmpb
pop
call
push
push
push
mov
dec
xor
call
fisubl
cmp
sub
lea
fdivr
stos
sbb
adc
jge
repnz
ljmp
jmp
mul
pusha
mov
test
or
daa
inc
or
mov
fsubrl
pop
mov
push
inc
jge
ret
push
clc
in
xchg
pusha
and
xchg
jbe
pop
addb
mov
test
adcl
adc
mov
inc
test
imul
lret
lret
je
fmuls
lods
call
jle
ds
pop
inc
mov
cmp
jnp
cltd
je
jmp
inc
es
xchg
cwtl
xor
in
shlb
sub
pop
int
inc
mov
pop
test
aad
jmp
push
nop
adc
mov
aas
rcrb
xchg
shrl
mov
lahf
inc
jle
int3
adc
ret
pop
pop
lea
jo
test
mov
push
adc
pminsw
jmp
adc
sbb
push
inc
jo
mov
cmp
xorl
ja
mov
add
fmull
push
sbbb
mov
or
mov
push
fiadds
shll
xchg
fsubrl
xor
xchg
jbe
mov
push
and
xchg
push
adc
imul
pop
and
addr16
adc
adc
add
or
mov
xchg
jb
movsl
inc
pop
xchg
sbb
les
test
cmp
dec
inc
ret
xchg
lods
adc
push
xlat
outsb
aam
mov
jmp
les
mov
shl
test
cmp
orl
xchg
add
dec
inc
mov
fdivrs
sbb
xor
cmp
or
push
lock
mov
dec
divl
cmp
adc
xchg
lret
ret
mov
mov
dec
and
out
xchg
adc
daa
jmp
push
or
sub
cli
int
mov
in
mov
sub
das
jmp
jle
in
stos
test
or
and
jns
push
ljmp
fldt
loopne
xor
dec
mov
xchg
push
pop
pushf
std
xchg
inc
push
aam
arpl
mov
jmp
sub
jecxz
xor
je
jnp
lcall
jb
xchg
rorb
aad
shlb
or
adc
inc
fmull
or
mov
sub
mov
test
roll
bound
add
inc
mov
jbe
push
addb
scas
mov
jb
jg
orl
repz
lcall
loop
ljmp
dec
mov
pop
sbb
in
stos
xchg
pop
adc
mov
cmp
sub
and
dec
int
ljmp
sbb
cld
pop
and
in
xor
inc
int3
inc
shlb
adc
test
pop
mov
sbb
push
push
test
mov
dec
stos
sub
cmp
pop
sbb
rcll
jecxz
add
jmp
iret
js
pop
fisubrl
fcomps
and
mov
stc
int
jb
cmp
xchg
sub
ds
sbb
cmp
sub
xchg
xor
pop
hlt
sbb
pop
pop
out
inc
push
test
sub
fs
fstl
std
adc
cwtl
sbbb
add
pop
lods
push
ja
out
inc
adc
pop
xchg
cld
out
adc
fsubrs
or
clc
inc
dec
cmp
je
inc
lods
dec
mov
std
aam
mov
aad
mov
cld
inc
sbb
xor
mov
call
pop
and
jns
jbe
push
or
cmpb
cli
pop
push
inc
inc
stos
mov
and
mov
dec
cld
fnstsw
in
rorl
jo
mov
jp
dec
pop
clc
lds
dec
push
cmp
sahf
sarb
popa
sub
inc
add
push
mov
add
sbb
andl
or
pop
orb
decb
jo
lret
or
mov
pop
dec
mov
pop
dec
lods
in
jae
add
sbb
sbb
outsb
jmp
add
inc
mov
xchg
into
fistl
mov
cmp
mov
nop
test
xchg
xor
xor
mov
or
add
push
sbb
sub
sti
cmp
addb
jmp
mov
insb
outsb
cld
and
mov
and
cmpl
push
or
popf
or
cmp
sub
xchg
xchg
fsubrl
pop
and
orb
adc
sti
test
add
pop
orb
add
movsb
lret
adc
call
call
dec
out
lock
dec
push
dec
iret
iret
inc
adc
push
and
nop
sub
lret
popl
aaa
test
inc
sub
fs
mov
scas
and
and
mov
enter
out
add
and
and
bndldx
enter
sbb
xor
and
cld
mov
mov
adc
daa
inc
fsubs
test
mov
sahf
push
push
sbb
mov
dec
fcompl
pop
jae
out
dec
cmpsl
outsl
mov
scas
sbb
lods
inc
xlat
stc
dec
pop
jne
sbb
push
ss
sub
aad
pop
sub
aam
xchg
add
loope
dec
or
adc
popa
mov
xchg
aam
mov
int
xor
subl
sbb
and
leave
mov
xor
je
aad
out
test
mov
jne
jb
inc
push
mov
stos
icebp
xchg
sti
dec
inc
ds
sub
sub
sub
push
cltd
mov
or
aam
jge
sub
cltd
nop
dec
enter
adc
rcr
es
loop
push
xchg
sbb
jne
andb
xchg
ds
stos
sub
loope
add
xchg
push
test
push
sub
mov
cmp
jge
or
mov
sbb
std
add
jmp
rep
sub
xorb
je
stc
shlb
xchg
add
stc
jge
addl
inc
cmp
jne
xor
je
xlat
fimuls
mov
xor
jge
mov
or
daa
loope
aam
xchg
jne
xor
jg
out
jno
ja
pop
ficoml
pop
mov
dec
or
mov
arpl
mov
jae
jmp
std
add
adc
jmp
movsl
lea
mov
jne
lds
cmc
sbb
or
enter
pop
cmp
and
pop
pop
sub
push
sbb
in
mov
into
pop
lock
mov
sub
inc
insl
fbld
xchg
mov
xchg
pop
scas
or
or
sub
adc
pusha
out
adc
and
jne
imulb
lahf
je
inc
dec
inc
pop
add
or
push
adc
icebp
jp
mov
lods
call
mov
cmp
xchg
xor
sub
xlat
insb
orl
into
mov
pop
call
aaa
jecxz
or
xchg
adc
daa
cmp
pop
in
enter
mov
push
ds
mov
sbb
pop
shrl
fadds
xchg
fistps
mov
jp
movsl
sub
jecxz
pop
add
push
or
dec
in
pop
cwtl
xlat
sub
arpl
adc
and
pop
or
movsl
pop
adc
mov
neg
sbb
and
std
adc
fnstenv
fs
dec
xor
push
lahf
daa
repz
scas
and
mov
adc
pop
lods
arpl
sbb
dec
inc
sub
dec
xchg
pop
adc
or
hlt
adc
sub
daa
adc
ja
inc
sub
test
jo
push
fs
div
das
lock
push
in
loop
pop
mov
iret
jne
and
mov
scas
push
insl
movsb
hlt
popfw
pop
es
cmc
lods
and
lock
pop
inc
nop
cmp
xor
andb
test
jle
dec
push
dec
inc
inc
lds
push
daa
mov
xor
pushl
pop
fisubs
imul
dec
dec
call
or
fildl
pop
out
dec
out
daa
mov
adc
imul
cmp
xchg
les
push
mov
push
push
push
and
pushf
mov
fdivr
mov
fs
in
or
sbb
aad
adc
sbb
cmp
orb
cmp
adc
dec
scas
xchg
aad
dec
xchg
rolb
fstpl
and
leave
sub
jo
add
daa
andl
dec
mov
mov
scas
inc
add
sar
rorl
inc
je
and
stos
int
ds
loopne
ljmp
pushl
xor
jb
and
clc
sahf
mov
push
cmp
mov
push
push
pop
inc
mov
hlt
inc
and
dec
inc
pop
and
in
cli
mov
and
movsl
mull
shrb
lock
lods
jns
xchg
pop
aas
ret
addl
imul
pop
xchg
roll
shll
add
loopne
mov
int3
mov
xor
mov
inc
mov
ljmp
int3
push
add
adc
mov
push
adc
cwtl
ud2
addl
in
rorl
pop
leave
inc
sbb
fstp
imulb
xchg
ffree
into
mov
add
lds
push
idivl
out
aam
push
push
sbb
fcompl
mov
and
mov
mov
pop
out
add
mov
jp
mov
mov
test
inc
inc
push
pop
test
xchg
sub
push
fstl
sub
mov
xchg
stc
fsubs
cld
inc
loop
cwtl
pop
stc
nop
mov
fmulp
xchg
adc
cmpsb
sbb
loopne
cmc
dec
leave
push
leave
adc
arpl
rolb
mov
lret
cli
je
test
lds
pop
inc
pop
or
xchg
pop
sub
dec
lds
lods
data16
jbe
movzwl
inc
add
push
shl
jns
push
cmp
call
jne
xchg
test
mov
call
rcll
mov
rol
adc
jmp
popl
ljmp
call
mov
lods
fs
cmp
rclb
andb
cld
lds
sbb
inc
in
and
add
loop
xor
push
add
cli
ret
scas
int
push
ljmp
cmp
js
jbe
outsl
fldt
pop
xchg
ret
pusha
je
inc
fdivs
push
jne
jle
mov
pop
fs
mov
out
pop
cmp
mov
add
cmp
insb
push
lret
and
or
jmp
mov
inc
in
jo
fs
pusha
mulb
nop
dec
dec
push
imulb
cmp
adcl
or
jne
xor
jge
insb
testl
data16
loopne
cmpsb
inc
jg
mov
inc
lock
ja
imul
fdivrl
mov
jl
cmp
pop
adc
mov
lock
call
imul
xchg
adc
ljmp
adc
sbb
sbb
cli
sbb
adc
enter
xchg
mov
push
test
mov
xor
je
loope
repnz
rcl
call
mul
jns
test
enter
jl
cmp
pop
in
popa
aad
loope
hlt
or
mov
or
jecxz
je
aaa
or
sahf
pop
lea
xchg
repnz
hlt
xor
push
cmp
mov
mov
mov
inc
dec
fucomip
fidivs
and
push
cmp
fists
pop
jo
mov
add
cmp
or
pop
in
ret
mov
pop
sub
or
fsubs
loopne
dec
adc
adc
cmp
adc
xchg
or
stos
xchg
xchg
mov
or
jne
push
push
call
fsubs
stos
lds
jmp
mov
je
add
jne
cmpl
movsl
aam
sub
inc
stos
dec
jo
xchg
jno
pop
push
jg
dec
jbe
and
sbb
and
or
adc
mov
sbb
pop
xchg
mov
and
cltd
je
test
adc
lcall
or
orb
jb
xchg
cmpsl
imul
pop
les
fdivs
inc
push
jge
mov
bnd
int3
dec
pushf
and
je
dec
add
pop
push
sub
stos
or
in
add
xchg
dec
lods
sbb
jno
stos
adc
daa
loopne
int3
mov
jmp
mov
mov
cs
xchg
rolb
subl
sbb
sbb
fstl
loop
jbe
jno
inc
add
fs
add
das
negb
cmpsb
sbb
int
sbb
mov
int3
jmp
push
xchg
mov
sub
mov
or
dec
jbe
leave
xor
inc
or
push
sbbb
ljmp
test
inc
adc
adc
pop
out
adc
das
or
cld
pop
jnp
adc
stos
mov
faddl
or
add
dec
pop
adc
add
movswl
shl
ljmp
pusha
in
push
jns
inc
jl
fistl
test
stos
stos
cmc
cs
mov
dec
subl
xchg
aam
cmp
jl
and
xorb
jne
jbe
dec
faddl
jl
fsubl
push
lds
push
daa
lock
mov
push
test
dec
add
lcall
push
pop
enter
inc
dec
add
and
mov
call
jae
or
inc
ljmp
jmp
pushf
cltd
bound
adc
inc
mov
test
lds
push
push
push
andb
xchg
sub
add
adc
adc
sbb
inc
xchg
sub
jns
xchg
adc
icebp
mov
in
jb
and
jecxz
andl
or
insb
je
add
int3
or
sarl
mov
push
and
pusha
pop
sbb
cltd
xor
sub
cmp
jge
adc
mov
in
fwait
dec
add
leave
mov
imul
push
aam
xchg
ret
cmp
mov
fiadds
sti
or
stos
sub
mov
xchg
jns
xchg
sub
mov
pop
jmp
mov
and
sbb
jmp
pop
lock
bswap
scas
scas
pop
outsb
add
dec
outsl
adc
add
popf
add
mov
xorl
mov
adcb
test
push
ficomps
lods
adc
fs
push
add
addl
les
add
add
push
or
mov
adc
and
sub
mov
out
adc
cwtl
pusha
jb
add
pop
sahf
inc
je
lods
dec
inc
addb
add
mov
jno
mov
inc
adcb
and
pop
leave
mov
add
jmp
xor
lahf
or
or
enter
out
adcb
pop
adc
mov
push
sti
xor
sub
jbe
dec
push
bound
push
inc
pop
inc
cli
lods
xor
sbb
cmp
in
jmp
rolb
jmp
xor
xor
dec
daa
xor
inc
insb
pop
or
sbbl
lret
add
shll
enter
dec
mov
sbb
aad
shl
cwtl
test
clc
test
mov
push
fisttps
cmp
jmp
pop
je
push
sbb
mov
push
stos
lea
pusha
mov
rorb
push
or
and
pop
xchg
fsts
pop
add
mov
sbbb
pop
insb
jmp
enter
xchg
inc
leave
jp
xor
dec
movsb
lea
inc
je
dec
cmpb
push
lcall
mov
sub
xor
inc
sti
std
xchg
test
lds
sub
xor
jp
add
inc
dec
jo
xchg
cmp
mov
push
inc
test
test
add
lods
std
inc
lods
cwtl
xor
jne
xorb
push
adc
and
push
inc
or
ljmp
ja
lret
and
dec
and
clc
inc
jnp
es
into
pushf
push
or
sbb
stos
and
jmp
pop
dec
mulb
sub
test
lds
rcrl
outsb
shl
push
fisttpll
mov
pop
cmp
xlat
lret
hlt
bound
sti
adc
inc
cmp
dec
clc
in
out
ud1
mov
inc
idivl
inc
lea
shll
out
push
or
mov
dec
cwtl
xor
jbe
push
jg
push
in
jmp
jle
cmp
push
notl
adc
popf
xor
or
ja
mov
jmp
dec
lcall
lret
adcl
scas
jno
jmp
push
push
imul
lea
mov
dec
leave
mov
out
dec
or
inc
insb
inc
int
ret
and
mov
mov
sub
adc
in
inc
pop
push
add
cmp
lods
or
rcll
pop
hlt
push
pop
add
add
shll
jne
mov
cmp
mov
cmp
out
repnz
or
sbb
jae
loopne
rcr
out
sbb
push
pop
mov
filds
sbb
xchg
mov
addr16
adc
mov
sti
jp
mov
js
pushf
mov
dec
dec
lret
call
fisttpll
mov
repz
adc
sbb
jne
adc
dec
cmp
test
push
ljmp
sub
cli
and
inc
sub
push
adc
and
subl
inc
out
loopne
push
ret
jl
push
ja
sbb
mov
push
push
adc
nop
inc
imul
pop
lds
mov
jo
popf
cmp
pop
mov
add
push
jo
loop
adc
xchg
xchg
or
xlat
adc
pusha
out
jge
jno
lock
dec
sub
inc
repnz
mov
mov
cmp
shll
push
aam
or
add
jns
xor
mov
ss
xchg
cmc
xor
mov
loopne
pushl
cwtl
push
fdivs
and
adcl
adc
jae
jno
xchg
and
push
adc
mov
and
dec
push
mov
loop
or
push
loopne
in
xor
mov
adc
and
inc
dec
jae
xor
test
int3
scas
dec
inc
mov
sarl
mov
lods
ret
repz
les
stc
mov
xor
jo
call
and
xor
int3
mov
sarl
mov
dec
test
aam
xchg
adc
jmp
out
roll
fs
sbb
out
pop
popf
negb
jae
aam
lea
stos
adc
cmp
addl
cmp
je
scas
mov
push
outsl
mov
loop
and
cmp
cs
addr16
leave
jge
inc
jne
adc
adc
xchg
incb
or
sahf
adc
mov
clc
jmp
repnz
fsubrl
fs
pop
mov
cmp
sub
push
js
push
adc
aas
test
sub
sub
lock
test
or
movsl
inc
movsb
loopne
xor
lods
push
and
xchg
push
andl
push
jle
xlat
or
mov
mov
push
cltd
loopne
sbb
cmp
cld
xlat
push
pop
mov
or
xlat
loop
sub
cli
nop
enter
lock
add
adcl
pushl
adc
xor
push
lea
sbb
pop
imul
fiaddl
in
push
dec
rcrb
cli
and
jl
popf
xor
add
rol
jo
push
test
jne
fmuls
dec
aaa
scas
dec
mov
push
aam
mov
fsubl
add
mov
idiv
lcall
into
bound
aad
sub
mov
test
lret
and
aas
fwait
push
enter
or
lahf
hlt
out
inc
sbb
leave
cs
enter
lret
mov
iret
push
xor
lock
enter
ror
mov
iret
js
iret
push
mov
clc
xchg
mov
in
pop
xor
adc
mov
jl
mov
and
shrb
mov
rcll
inc
cld
sahf
dec
cmpsl
xchg
adc
mov
int3
push
jecxz
xchg
adc
ljmp
call
sub
adc
enter
sub
add
jae
and
mov
or
sbb
push
popf
cmp
gs
pop
or
mov
mov
jmp
pop
push
enter
mov
out
ret
xchg
cltd
mov
or
jb
testb
sbb
or
bound
adc
adc
and
lea
jno
cmpsl
push
mov
popf
push
jbe
and
inc
dec
popa
push
jl
xor
popa
xchg
jge
dec
add
pop
je
pop
fdivrs
addr16
nop
push
sub
movsb
cwtl
lods
xchg
sub
adc
add
std
test
out
and
mov
call
mov
mov
jnp
repnz
scas
dec
adcl
fidivl
push
nop
clc
add
std
aaa
sub
inc
xlat
cmp
push
mov
or
repz
xchg
push
and
stc
push
push
clc
sbb
and
test
pop
mov
pop
aaa
popa
imul
nop
jg
stc
push
inc
mov
add
stos
pop
or
enter
mov
rolb
testb
inc
inc
inc
or
pop
jno
es
push
ret
das
pop
repnz
sub
cmp
xor
pop
push
mov
sub
xchg
lods
out
repnz
sub
push
fcmovb
xor
xor
lock
mov
or
inc
insb
fidivs
mov
mov
addr16
nop
call
push
addr16
call
shlb
jo
clc
adc
mov
cld
daa
scas
cmp
jne
loopne
dec
mov
xor
incb
das
xor
xchg
xchg
lock
sbb
sbb
mov
fdivrl
sbb
cmp
outsb
xchg
xchg
clc
ror
and
inc
or
outsl
fcmovbe
jge
sbb
push
jg
adc
scas
ret
lods
push
cmp
jnp
mov
jne
arpl
pavgb
jl
jmp
pop
push
icebp
and
mov
ret
test
push
mov
clc
dec
mov
addr16
fcomps
lds
pop
ret
mov
push
mov
mov
dec
pop
outsb
lea
mov
and
inc
sub
push
and
or
mov
mov
pusha
and
or
xchg
and
bound
and
outsb
sub
dec
rclb
js
orl
mov
add
or
je
stos
push
jmp
cmp
rcrl
mov
mov
nop
mov
xchg
push
and
les
enter
jae
jo
ror
popa
out
getsec
aam
testl
mov
sbb
mov
adc
lds
je
sti
push
aam
adc
add
push
cmpsl
jo
mov
sub
ds
push
les
dec
add
mov
nop
sbb
subl
aas
roll
sbbb
mov
jmp
stc
adc
dec
jae
inc
sub
jmp
jnp
push
and
orl
movsb
adc
call
mov
dec
jne
mov
nop
leave
inc
push
mov
lcall
push
cmpsb
xor
push
ffreep
xor
jne
ret
hlt
sub
or
dec
xor
leave
jl
xchg
dec
enter
es
divb
pusha
and
leave
fsubrs
jae
mov
dec
and
push
pop
loop
lock
xchg
sub
jp
push
mov
and
cli
out
or
into
push
pop
subl
ja
and
xor
and
sbb
mov
jmp
fsubp
sub
jmp
pop
sbb
subb
inc
adc
sbb
cmp
scas
push
mov
ret
test
mov
xchg
jmp
out
bound
adc
mov
inc
xchg
add
mov
iret
nop
adc
sbb
jbe
test
cwtl
les
push
adc
or
vpsrlw
notb
lock
out
out
pop
sub
insl
inc
lretw
cmp
mov
js
repnz
mov
jmp
sub
in
jge
mov
sti
jl
push
xor
or
xor
sub
loop
sbb
or
jle
pop
and
dec
fs
xchg
and
popf
pop
jbe
out
adc
xor
out
ja
mov
add
pop
cmpsb
jb
test
mov
push
and
outsb
mov
xor
mov
cmp
cltd
push
adc
or
dec
or
adc
clc
cmp
scas
mov
pop
jmp
cmp
sub
sub
dec
xor
mov
dec
rolb
test
add
adc
add
pop
in
pop
inc
jo
lahf
gs
das
dec
lret
jmp
stos
cld
dec
lea
test
and
mov
and
ret
repnz
pusha
add
or
or
sub
jmp
dec
inc
mov
fcoms
xchg
sarl
lret
and
and
stos
xor
add
jecxz
in
fisttps
adc
xor
push
or
shrl
jne
lcall
js
mov
xchg
push
push
mov
mov
dec
js
hlt
stos
movsl
push
in
fs
popf
push
out
pushf
mov
inc
mov
mov
addb
hlt
or
sahf
addl
cmp
mov
push
js
mov
in
loopne
into
add
mov
add
add
sub
add
jno
mov
or
xlat
cmp
mov
mulb
call
or
outsl
inc
outsb
mov
mov
adc
inc
stos
mov
mov
jge
xchg
out
or
xchg
cmpsb
mov
jg
sub
pop
inc
mov
mov
dec
pop
and
push
mov
mov
xor
in
test
mov
and
or
cltd
adc
aad
and
mov
mov
adc
jg
mov
and
jne
push
inc
push
push
mov
sar
pushf
ret
push
test
loopne
addb
lretw
and
mov
clc
iret
std
mov
les
stc
mov
push
jno
cmp
add
adcb
ja
repz
jae
bound
sub
fwait
insb
lock
push
imul
mov
xchg
cmpsb
ret
adc
jb
repnz
dec
inc
stos
dec
sarl
xchg
push
mov
inc
sub
sbb
or
insb
inc
jo
xor
push
and
mov
arpl
dec
mov
jle
fcoms
daa
shll
nop
adc
dec
cmp
add
dec
mov
xor
and
mov
cmp
mov
std
adc
clc
jmp
scas
loop
dec
xor
rcl
sahf
dec
in
and
fldt
test
lods
cltd
leave
dec
and
add
push
sub
rcrb
xchg
shlb
or
clc
cmp
or
fisubs
scas
ss
test
insb
and
dec
out
ja
push
mov
in
mov
stos
jns
mov
aaa
xchg
add
push
sub
adc
pop
dec
xor
mov
mov
je
imul
orl
int3
mov
jne
xor
mov
mov
pop
ret
cmp
xor
stos
mov
jno
dec
or
ljmp
mov
adc
pop
adc
fisttpll
ret
or
clc
bound
ss
push
cmpsb
mov
xor
jmp
add
leave
sub
clc
test
xor
dec
mov
cmp
inc
bound
pop
cmp
jle
std
sbb
xor
addr16
bound
das
test
test
dec
mov
mov
mov
adc
jmp
push
or
int
xor
xor
jmp
sbb
adc
std
movlps
push
aam
rcrb
and
sbb
mull
mov
or
push
mov
sbb
cmp
mov
stos
xchg
inc
call
cmp
jnp
sub
sti
ljmp
call
mov
sbb
in
hlt
and
cmpl
je
pop
rol
jnp
das
xor
lods
sbbb
or
push
xchg
je
and
add
mov
push
push
dec
inc
sbb
imul
and
jmp
sub
xor
ja
xchg
shr
addl
cmp
pusha
movsl
pop
fisubrs
jo
jne
notb
and
adc
jge
je
push
dec
cmp
cmp
movsl
dec
jo
popf
stos
out
inc
cwtl
and
ffreep
sbb
xchg
pop
add
nop
fs
or
movsb
outsl
int3
call
add
bound
adc
add
add
xchg
sbb
mov
cmpsb
in
or
adc
pushl
pop
iret
cld
loope
filds
xor
or
or
mov
pextrw
add
jbe
mov
dec
repnz
ja
and
cmp
iret
test
inc
bound
mov
std
push
xlat
push
push
in
test
adc
jns
adc
jmp
inc
and
and
dec
bound
adc
test
in
or
das
int
sahf
jae
xchg
sbbb
push
xchg
cld
mov
jnp
mov
mov
nop
push
pop
divb
mov
lods
mov
xchg
adc
add
enter
js
dec
cs
mov
xchg
andb
jns
adc
test
inc
adc
stc
and
cmp
cmpsb
fs
cmp
mull
incb
repnz
xchg
and
cmpl
sbb
call
inc
mov
pushw
adc
add
mov
call
jmp
adc
lds
push
enter
pop
pop
dec
sbb
push
loope
imul
test
std
stos
mov
dec
xchg
shrb
or
out
mov
imul
cmc
and
outsb
jg
rolb
or
mov
and
aad
cmpsb
arpl
push
or
push
adcb
inc
jne
mov
call
adc
mov
dec
lea
inc
jmp
pop
or
push
cs
out
das
jmp
outsl
int
fs
push
cli
lahf
dec
xor
sbb
adc
jne
pop
ja
xlat
lcall
mov
dec
adc
sbb
xchg
push
inc
jne
ss
add
adc
orb
cltd
and
ljmp
xor
popa
add
xchg
dec
dec
sbb
xchg
pop
sbb
jmp
cmp
lock
lahf
cwtl
dec
mov
adc
mov
sub
push
sbb
sbb
mov
pop
hlt
in
jmp
rcrb
push
jge
mov
inc
cwtl
inc
fwait
add
push
insb
adc
mov
xchg
in
sub
xchg
jp
inc
dec
fsubs
add
jp
jmp
cmpl
mov
outsb
adc
cli
jo
call
bound
leave
scas
fsubl
rorb
loope
xchg
call
clc
out
das
ja
and
push
call
mov
cmp
mov
cmpsb
inc
or
push
add
sub
pop
push
mov
call
xor
out
jne
idivb
add
into
push
add
xchg
mov
fsubrp
xchg
out
xchg
fstps
mov
inc
pop
nop
pop
call
setne
ret
inc
push
lds
mov
and
repz
es
je
xor
or
sub
mov
fwait
pushf
push
push
jne
mov
std
fisttpl
mov
mov
jmp
mov
inc
and
cwtl
sub
cwtl
mov
jmp
push
cld
adc
jbe
mov
ret
or
dec
mov
jbe
int3
lock
mov
add
hlt
sbbl
or
loop
scas
push
inc
jge
push
pop
and
and
lods
cmp
loopne
cld
rolb
hlt
jmp
dec
stc
inc
test
cltd
adc
cmpsl
pusha
outsb
adc
xor
sarb
repnz
inc
pop
loope
adc
inc
cmp
adc
or
xchg
icebp
cltd
aas
sbb
pop
jne
jle
push
or
jns
cmp
lods
or
adc
jo
inc
aas
imul
leave
faddl
dec
aad
outsb
adc
pop
pop
mov
fdivrp
lcall
insl
mov
xchg
pop
rcll
dec
popa
sbb
xor
shlb
xor
das
cld
xlat
xchg
jae
daa
push
mov
stos
aaa
fwait
push
ja
roll
xchg
push
das
call
int
lahf
cmp
jmp
sub
dec
mov
in
subb
sti
mov
and
popa
cmp
iret
or
dec
adc
es
pop
mov
xor
scas
pop
mov
push
xchg
imul
mov
dec
jmp
ret
arpl
test
jmp
ja
lds
sti
add
and
adc
and
pop
mov
xchg
ret
sub
lahf
dec
scas
inc
scas
pop
pop
je
dec
inc
sbbl
mov
outsl
test
scas
fwait
js
sbb
movsl
dec
rorl
cmp
dec
out
int
sub
jo
xchg
add
adc
pushf
popf
shlb
cmp
mov
fmuls
out
js
inc
sub
inc
call
xchg
ljmp
adc
push
mov
xchg
ja
xchg
add
mov
dec
cwtl
inc
xchg
ss
dec
and
loope
push
sub
fcoml
lret
adc
dec
ret
jmp
push
sub
ret
xlat
lret
adc
inc
cwtl
mov
xchg
or
xchg
adc
loope
fistpl
adc
out
add
int3
mov
jmp
sub
cmp
cmp
mov
sti
inc
inc
sub
shrl
das
out
xor
inc
es
xor
or
lock
hlt
pop
lods
cs
xor
ret
bnd
call
lea
sbb
add
fcomps
adc
call
adc
push
add
pop
adc
cltd
pusha
cli
into
inc
sub
add
imulb
mov
dec
xor
or
je
out
push
aaa
hlt
cld
outsl
dec
dec
stos
pop
std
and
push
push
mov
xor
stos
stos
lea
pop
loope
mov
sbb
jb
mov
insl
gs
std
inc
jl
xchg
and
mov
push
js
pop
imul
aam
dec
jl
mov
mov
xor
dec
jmp
or
xor
aad
dec
dec
fsubrs
popf
pop
ss
das
pop
mov
mov
pop
inc
stos
or
mov
std
mov
cmp
inc
jecxz
in
repz
into
cwtl
lock
mov
iret
js
iret
pusha
ror
dec
ror
cmp
iret
sub
and
dec
pop
dec
shrb
test
mov
scas
loopne
xchg
and
and
pop
dec
add
adc
in
pop
daa
adc
bnd
dec
push
sahf
test
sahf
inc
mov
enter
leave
mov
jle
sub
fsubrs
sarb
out
bound
loop
outsl
adcb
shl
inc
dec
pop
xchg
js
jecxz
out
loop
jne
fisubs
fmull
test
sub
dec
jns
test
test
mov
addb
ljmp
loop
adc
test
mov
add
and
sbb
aad
fildl
mov
and
js
xor
cs
cmp
adc
or
inc
jl
es
sub
sbb
adc
adc
nop
sub
pop
fiaddl
jmp
sub
add
cmp
or
dec
js
and
inc
push
cltd
pop
inc
rolb
cmp
adc
cmc
inc
dec
leave
add
hlt
clc
sbb
imul
cwtl
inc
mov
and
or
cmp
ret
sub
sbb
cli
sbb
cli
sbb
sbb
mov
jl
mov
xchg
add
dec
xchg
or
and
adc
inc
jo
sbb
and
or
and
fcomps
adc
enter
mov
xchg
xchg
and
cwtl
and
pushf
and
test
sub
mov
dec
and
clc
mov
or
adc
inc
test
inc
pop
addb
dec
adc
iret
jo
iret
pusha
ror
dec
ror
xor
loopne
sub
cmc
or
push
mov
inc
sbb
mov
or
inc
adc
sbb
dec
ljmp
sbb
ja
sarl
push
mov
or
nop
push
lret
dec
or
push
inc
jae
adc
mov
push
push
push
cmp
dec
lea
pushf
mov
adc
pushfw
test
mov
push
or
push
call
cmc
in
or
ljmp
cwtl
cli
sbb
dec
test
in
inc
lret
sbbl
mov
xchg
xor
and
adc
or
push
jns
lcall
std
add
adc
jne
nop
push
or
sbb
push
roll
add
pop
or
push
bnd
rorb
nop
int
lods
mov
push
inc
cmp
cmp
cmp
js
jmp
mov
mov
clc
test
stos
dec
cs
or
cs
fbld
mov
call
xor
sub
adc
cmp
dec
cmp
cmp
adc
cmp
adc
repnz
fdivr
cltd
and
xorl
dec
in
lds
or
into
jle
push
push
test
mov
call
out
test
arpl
lcall
and
cld
pop
loope
xchg
xchg
out
and
adc
cmp
sbb
dec
dec
loope
cli
je
jle
popf
push
cld
pop
adc
std
icebp
dec
add
stos
inc
pop
clc
jae
add
cmp
mov
push
mov
xlat
stc
push
and
fs
mov
insl
movsl
mov
jmp
sub
and
xchg
fadds
lea
inc
popa
gs
imul
or
popl
pop
inc
test
mov
fisttpll
jae
xchg
lcall
popf
cwtl
push
ret
mov
arpl
sub
pop
pop
ret
jge
sbb
adc
pop
sbb
or
sbb
push
lods
pop
adc
popf
orl
add
mov
call
sub
outsl
dec
in
lea
dec
int3
subl
pop
xchg
mov
mov
cwtl
jae
lcall
mov
adc
mov
adc
fmull
int3
clc
xchg
push
xchg
push
inc
add
mov
stos
xor
xor
push
hlt
mov
sub
fwait
imull
cs
std
mov
repz
or
test
push
clc
into
and
xlat
cmp
jge
fadds
push
movsb
adc
cli
mov
push
mov
sbb
insb
fidivs
mov
xor
loope
push
stos
xor
and
xchg
jne
and
lds
stos
adc
jp
jmp
mov
adc
jmp
mov
test
mov
adc
jl
mov
test
movsb
mov
movsl
push
or
xor
andb
pop
xor
cmp
cmp
addr16
pop
sub
cwtl
aad
lcall
inc
ret
adc
jnp
lock
dec
fistpl
sub
jge
pop
lret
test
jne
out
xor
mov
xchg
int
scas
imul
add
cltd
sub
cltd
dec
mov
sbb
imulb
stos
mov
fsubs
sub
lea
call
xor
adc
fiadds
lea
sbb
and
mov
mov
int
xchg
xor
lret
out
xchg
es
fs
gs
lds
jmp
call
adc
and
je
loope
xor
shl
and
orl
mov
decl
inc
jmp
fdivrs
adc
and
mov
dec
mov
lcall
sub
mov
and
gs
gs
sbbb
sub
xchg
and
test
dec
mov
mov
out
pusha
int3
out
inc
dec
adc
or
test
and
sub
rcll
sbb
shlb
out
enter
mov
in
add
jmp
or
jbe
arpl
mov
lea
add
les
mov
test
enter
xchg
adc
cli
enter
jb
out
jmp
inc
and
rcrb
pop
or
imulb
mov
rolb
loope
fnsave
loopne
xchg
and
xchg
das
xor
sub
cli
mov
mov
mov
push
adc
add
cmovs
sbb
in
fstpl
xchg
rorb
and
or
sahf
outsl
push
stos
lea
xchg
bound
adc
rolb
arpl
sub
out
bound
jbe
adc
sbb
mov
movl
cmpl
xlat
scas
xor
data16
or
loop
lds
inc
adc
hlt
ja
test
lea
mov
push
mov
aam
fwait
or
push
inc
stos
push
repnz
insb
inc
test
out
out
sbbb
jg
insb
jno
mov
mov
je
das
idiv
negl
fmul
fdivs
inc
clc
orb
stc
adc
jp
clc
lds
std
dec
out
mov
push
scas
lret
xor
repz
xlat
dec
notb
fs
jg
stos
mov
rorb
mov
sbb
jl
insb
push
in
test
cmp
sub
pop
adc
mov
pop
xor
sub
mov
stc
mov
popl
jmp
in
sub
test
pushl
or
in
fmul
nop
addl
stos
adc
dec
sub
test
push
push
push
lahf
mov
cmp
push
out
rcr
jmp
jo
test
jmp
adcl
scas
push
inc
mov
in
scas
xchg
cmc
cs
adc
mov
xchg
mov
and
cmp
inc
lret
pop
jp
and
or
xchg
rclb
mov
mov
dec
add
push
loopne
lea
jge
rep
movsl
popf
push
mov
sub
mov
adc
push
movsl
shlb
add
popa
adc
int3
add
aam
test
in
popf
test
imul
dec
fimuls
arpl
pushf
mov
mov
push
xor
sub
pop
and
add
bound
std
push
xchg
add
add
cld
xor
sbb
divl
mov
mov
push
call
push
pop
jmp
cmc
shlb
mov
insb
or
adc
push
xor
xchg
jmp
cmp
popa
and
ret
cs
mov
test
mov
pop
or
test
call
mov
inc
mov
pop
jnp
sub
test
mov
mov
sbb
adc
je
aam
pop
jbe
xchg
sub
mov
cmp
mov
data16
inc
lea
call
inc
mov
test
lea
push
add
loop
in
les
sbb
adc
dec
pusha
out
loope
xlat
and
cltd
divl
jo
sbb
inc
int3
negl
lea
push
aam
ret
xchg
mov
push
test
movsb
or
in
adc
xchg
data16
fisubs
xor
mov
jne
pop
movsb
or
bound
sub
mov
cltd
lea
push
pop
adc
mov
lods
loope
cli
xchg
pop
out
stos
xchg
adc
clc
mov
add
inc
jmp
mov
testb
sub
pop
fcoml
mov
lahf
popa
xor
cld
and
stos
adc
jo
inc
pushf
and
in
and
cmpsb
pop
sub
inc
bound
mov
push
xor
jnp
out
jno
sbb
jle
in
ja
sbb
int
xor
push
xor
mov
jne
xchg
rclb
ret
test
and
rclb
inc
dec
call
cmp
inc
int3
sub
sub
adc
push
pop
jns
push
lret
cwtl
dec
es
mov
mov
or
enter
mov
call
ret
fs
sub
mov
fmull
loopne
in
cld
lret
aad
fmull
jecxz
outsl
xor
loopne
imul
adc
push
sti
add
fimull
ficompl
jp
mov
lds
clc
mov
bound
cmp
push
ljmp
push
sub
inc
sbb
push
movsb
pop
test
dec
test
and
pop
dec
nop
aad
sub
sbb
mov
in
inc
dec
lods
inc
arpl
ss
dec
push
test
shr
and
mov
dec
test
sahf
adc
inc
mov
mov
push
push
push
sub
fmuls
push
dec
dec
movsl
das
lea
xchg
adc
mov
sbb
out
xor
inc
les
jl
les
loope
mov
in
inc
je
inc
arpl
por
pop
ret
mov
push
std
lret
mov
and
nop
in
and
lods
pop
getsec
cmc
jl
sbbb
sub
sub
pop
adc
or
push
xor
jmp
add
or
je
and
or
push
ret
insb
push
icebp
pop
bnd
je
test
fwait
sbb
and
dec
faddl
jmp
pushf
xchg
or
popf
sbb
movsb
xchg
jmp
pop
rcl
sub
and
sbb
jge
cmpsb
lods
lcall
adc
scas
jmp
push
pop
mov
sbb
xchg
popf
imul
daa
add
shlb
dec
das
jg
inc
ja
movsb
adc
test
out
mov
jbe
pop
adc
std
or
sub
pop
je
pop
stos
adcl
cmp
jg
sbb
jle
push
add
rorl
xor
dec
fnstcw
sbb
cmp
push
or
out
add
add
or
jae
pop
or
cmpsb
lret
mov
adc
jmp
out
adc
and
inc
stc
sarl
pop
mov
rdtsc
mov
cli
icebp
push
lock
add
bound
mov
sti
or
xlat
mov
inc
dec
inc
jo
roll
and
dec
les
adc
in
loopne
and
sahf
adc
lret
rcr
inc
enter
loope
sub
jg
sub
mov
sbb
jns
adc
fwait
dec
fcmovne
cwtl
test
and
fsubrs
and
sbb
sub
lock
daa
xor
dec
mov
fwait
pushf
inc
inc
lods
push
add
leave
push
cld
jle
dec
je
imul
scas
cmp
add
mov
mov
dec
outsl
hlt
sub
je
pop
call
lcall
pop
ja
xchg
mov
es
jb
andb
add
shll
mov
loope
sub
lods
push
incb
and
jmp
push
add
adc
je
adc
and
sbb
mov
incl
cmp
ja
pusha
ss
jle
fadds
jb
mov
jbe
enter
je
adc
test
cmove
or
push
jmp
fucomp
insb
add
xchg
andb
mov
inc
stos
jecxz
sub
dec
imull
pop
push
or
ljmp
or
outsb
add
aam
push
jne
psubsb
cwtl
testl
mov
ret
pop
inc
aad
fists
popa
shrb
in
sysret
adc
cltd
les
stc
test
xchg
mov
mov
xlat
stos
ss
mov
and
dec
push
or
sub
push
sub
add
imul
lahf
xchg
inc
test
and
dec
clc
mov
testl
lahf
mulb
mov
sbb
mov
xchg
out
cli
pop
jne
orl
sub
in
and
dec
pushf
hlt
dec
addl
call
sbb
mov
xchg
in
cmp
xchg
push
and
loop
sbb
xchg
sbb
cmpsl
and
jle
gs
jb
adc
pop
sbb
inc
das
and
clc
std
jnp
cmp
or
sar
repnz
dec
shr
les
stc
sbb
imul
lret
sbb
jmp
xchg
or
jb
adc
and
pop
ja
inc
daa
push
enter
mov
and
in
jle
inc
xchg
and
mov
and
mov
and
push
mov
std
xchg
inc
and
cmp
lea
xor
sub
pusha
cwtl
inc
pop
push
not
test
out
dec
mov
xchg
je
mov
or
jnp
mov
addl
or
xor
add
subb
inc
xor
sbb
or
addl
jo
xchg
idivl
cmp
and
push
inc
icebp
jp
movsb
outsb
inc
mov
pop
adc
mov
cmpsb
inc
pop
jae
or
sub
push
bound
pop
es
insl
clc
push
mov
cmpl
add
inc
inc
test
je
repnz
ds
pop
clc
das
popl
notrack
push
ds
adc
lahf
and
mov
sbb
clc
cmp
fidivs
mov
loop
xor
mov
jmp
sti
sub
inc
outsl
sub
inc
push
mov
ljmp
and
test
mov
pop
icebp
mov
test
clc
sbb
mov
das
adc
mov
pop
in
aad
push
xchg
and
adc
jge
cmovne
pop
cmp
ds
pop
aad
mov
adc
xchg
xchg
push
push
orb
mov
xchg
shrb
pop
cmpl
xor
pop
hlt
stos
mov
data16
adc
push
movsb
jae
xchg
je
in
clc
dec
in
loope
inc
stc
push
or
loopne
call
aaa
inc
push
jl
inc
aad
push
jmp
jg
adc
inc
add
and
aad
imul
mov
inc
repz
mov
fwait
sub
xor
jnp
xor
rclb
inc
int
negl
sti
push
inc
fisttpll
add
jmp
jle
iret
int3
in
mov
cmp
clc
dec
add
lea
neg
lods
in
movsl
subb
rclb
and
in
nop
mov
adc
cmp
divb
mov
mov
sbb
mov
sbb
enter
test
cld
mov
or
xchg
mov
inc
invd
sbb
push
dec
sahf
cmp
clc
cmp
std
shrl
mov
outsl
sbb
add
xor
add
dec
adc
push
shr
ja
cmp
and
inc
cmp
inc
dec
inc
mov
dec
adc
add
mov
scas
test
xchg
stos
shl
pushf
pop
adc
sub
sub
push
popl
ja
aad
or
or
push
jno
xchg
inc
test
bswap
adc
mov
inc
sbb
mov
int3
add
or
adc
cmovb
lds
mov
xchg
sub
mov
loope
mov
or
pop
add
inc
push
dec
or
dec
orps
inc
sub
das
inc
mov
rcrb
push
cmp
test
sub
pmaddwd
mov
jl
jno
mov
inc
pop
adc
and
mov
and
sub
movsl
pop
cltd
addr16
cmp
rcll
mov
and
and
nop
cld
xchg
lods
test
mov
inc
into
ja
je
adc
cmp
nop
mov
dec
xchg
mov
sub
dec
bound
dec
sub
xor
dec
popf
jecxz
adc
add
dec
fdivs
mov
xchg
inc
repnz
inc
jl
clc
or
jg
mov
xchg
mov
jp
adc
mov
inc
xsaveopt
into
cwtl
pop
das
test
scas
sub
pop
cli
inc
orl
aam
cmpl
adc
and
inc
push
dec
push
sbb
push
cmp
movsl
dec
cmovs
push
pop
sub
les
adc
and
inc
push
lds
adc
or
xchg
dec
std
in
repnz
cltd
cmp
adc
rcrl
jmp
call
cmp
pop
cmp
pop
cmp
dec
cmp
std
and
icebp
adc
test
enter
bound
movsl
cmovno
push
lock
enter
pop
and
test
adc
testb
dec
std
jo
andb
and
or
mov
inc
lods
dec
lahf
sbb
adc
lock
jo
xchg
jg
jg
sub
das
call
mov
adc
aam
sbb
aaa
int3
push
xchg
add
movb
sbb
sbb
dec
popf
scas
mov
xor
adc
test
lea
stos
int3
jle
mov
push
clc
int
push
dec
sbb
jle
pusha
and
shr
pop
or
push
inc
sbb
adc
push
adc
pop
add
hlt
inc
push
xchg
popf
nopl
int
adc
repnz
mov
cmpsl
xchg
jmp
push
jmp
xor
fsubl
cmp
orb
mov
ljmp
pop
inc
jmp
inc
stc
xchg
inc
jns
lahf
push
clc
aad
outsl
pop
test
pop
repnz
dec
jmp
adc
test
push
pop
adc
inc
or
or
cmp
push
and
adcb
adc
fcmovb
jns
or
mov
and
push
jg
push
inc
xor
sti
cmpb
or
or
jg
clc
and
inc
scas
ss
sub
loopne
xchg
daa
popa
scas
add
ds
push
xchg
sub
and
loop
push
or
cmp
je
cmpl
decl
mov
sar
xchg
cmp
xor
jbe
add
push
out
sbb
gs
mov
xor
xchg
jne
rcrb
push
sub
pop
xchg
mov
incb
jbe
call
and
jmp
cmp
rolb
push
mov
movsl
jne
cmp
pop
sbb
mov
push
cli
int
in
sub
mov
outsl
and
adc
mov
movsb
pop
xlat
adc
sbb
andb
mov
mov
adc
dec
sub
or
dec
daa
mov
movzbl
sbb
je
mov
sbb
adc
mov
and
add
xchg
lret
xor
push
sub
fcomps
cmp
mov
sbb
int
pusha
mov
pop
daa
out
aam
add
cmp
push
jmp
mov
mov
ss
ror
push
scas
lret
or
inc
scas
push
xchg
mov
pop
loopne
cmp
xor
mov
aas
aad
jb
xchg
lods
push
jle
imul
mov
stos
add
mov
jge
jne
stos
into
in
mov
or
xchg
nop
add
add
into
mov
xchg
jae
leave
dec
adc
and
andl
lock
insb
call
jb
adc
pop
push
dec
lahf
inc
inc
mov
es
std
data16
and
arpl
push
adc
push
adc
dec
mov
mov
push
jo
movsl
inc
dec
push
dec
push
les
cmpsb
mov
adc
mov
inc
test
dec
int3
xor
dec
pop
inc
or
or
mov
imulb
test
ret
loope
and
dec
cmp
test
and
sbb
roll
pushf
fs
sti
xor
or
mov
stos
and
les
sti
aam
out
in
aaa
repnz
jne
push
xchg
icebp
mov
imul
in
sbb
push
push
lcall
adc
jl
je
mov
dec
mov
lret
dec
xor
jnp
dec
das
add
in
pop
mov
mov
xor
jmp
arpl
or
pop
lock
iret
dec
dec
mov
sub
mov
and
jne
fsubr
cmp
dec
std
in
scas
data16
xchg
out
jno
push
repz
rclb
add
out
mov
sarb
cmp
jge
pop
adc
push
jnp
jp
clc
xchg
pop
mov
orl
pop
mov
mov
xchg
lods
push
mov
push
rorb
aam
pop
mov
mov
cwtl
out
jne
clc
pusha
nop
cmp
and
jmp
xchg
jbe
cli
shl
add
in
dec
ret
jb
jne
or
mov
jae
xchg
push
inc
pop
push
cmpsb
pop
addr16
mov
jb
pop
adc
inc
and
es
ret
popf
aam
jmp
imul
and
pop
in
shl
push
mov
test
push
addb
push
lret
loop
sub
call
adc
jbe
and
jl
push
mov
pop
mov
jl
xchg
js
movsb
mov
mov
aad
lret
and
xlat
add
je
jb
mov
ljmp
repnz
testb
adc
loopne
push
xchg
pop
dec
jb
enter
lcall
aam
cwtl
jmp
outsb
ret
or
push
lret
push
push
mov
adc
mov
mov
scas
jo
pop
fldcw
fstpt
pop
xorb
and
dec
xchg
leave
mov
sahf
xchg
leave
pop
pop
icebp
fists
adc
jne
testb
pop
push
ljmp
ficoml
jo
jecxz
cwtl
add
in
cs
pop
and
pop
mov
adc
mov
iret
jb
ljmp
call
sub
fs
cld
mov
jl
jp
xchg
stos
inc
xor
insl
das
or
adc
mul
orb
int
xchg
cmp
inc
cmp
sbb
lods
push
shrl
mov
inc
pop
jl
dec
inc
sbb
push
dec
and
cld
out
dec
clc
cmpsb
mov
sbb
adc
lods
dec
cmp
jne
adc
scas
xchg
inc
out
and
jecxz
sub
xchg
mov
sbb
orl
stos
jbe
inc
notb
pop
test
cmp
inc
rclb
pusha
push
loopne
xor
ss
push
inc
in
scas
pop
pop
jb
cmp
fidivrl
jge
adc
adc
add
mov
xchg
scas
cs
test
out
lcall
jne
lods
jb
je
out
repnz
cmp
add
xlat
adc
das
into
fnstenv
cmp
stos
sub
lods
jl
mov
or
mov
cmp
push
ljmp
daa
jmp
lods
pop
fsubrl
in
mov
out
test
rcll
and
movsl
stc
loop
push
inc
les
push
cmp
or
movsb
mov
pop
inc
lock
lock
cltd
lods
pop
inc
sbb
aaa
jns
xor
sti
sbb
push
add
sbbb
mov
add
xchg
jl
and
push
in
or
sbb
loope
into
ret
frstor
or
lahf
jns
xor
inc
mov
std
xor
cmpsb
data16
aam
xchg
rcr
push
and
xchg
movsl
or
adc
xlat
jns
or
mov
dec
inc
jmp
dec
push
mov
movb
pushl
xchg
or
lret
pop
or
sti
and
sbb
js
clc
jae
push
add
adc
fidivl
shrb
cmpl
subl
inc
xchg
cmpb
test
pop
fdivl
js
mov
cs
inc
iret
push
and
add
xchg
add
pop
sub
xor
pop
sub
add
mov
or
clc
sbb
out
sub
out
pop
out
mov
leave
cmp
inc
aas
dec
and
inc
jg
jns
in
pop
test
mov
fsts
mov
cmp
or
push
stos
push
aaa
bswap
stos
and
inc
xchg
push
sbb
cmp
add
dec
movsb
sti
fwait
adc
cltd
pop
mov
or
loop
adc
push
sbb
mov
add
pusha
call
repz
cs
test
or
cmp
add
das
jmp
sub
jmp
push
inc
daa
es
fcoml
adc
xor
push
cmp
mov
push
pop
inc
xchg
mov
xor
mov
outsb
enter
ret
loopne
mov
or
sub
dec
testb
ret
jmp
mov
lret
add
lcall
mov
test
dec
mov
sub
push
rcll
movsl
pop
es
addr16
cmp
jbe
jns,pt
andl
xchg
aas
cmpsb
mov
notl
xchg
mov
push
and
leave
sti
inc
push
shl
push
js
cmp
sbb
fcoms
imul
jb
sub
inc
aam
pop
arpl
scas
and
pop
inc
pop
stos
jno
les
int
jmp
in
jge
jno
lcall
push
mov
leave
pop
mov
stos
dec
daa
scas
or
in
xchg
mov
xor
xlat
pop
xor
jmp
xchg
scas
push
test
add
dec
mov
jmp
mov
lahf
inc
dec
sbb
add
mov
idiv
xor
movl
nop
movb
jmp
push
jo
ret
pop
add
je
sbb
adc
mov
cltd
sub
and
loopne
jae
nop
pop
cmp
dec
loope
or
lds
jmp
xor
call
fstl
dec
in
jmp
mov
int3
shrb
add
rorl
pop
xchg
clc
add
shr
test
dec
sahf
mov
jmp
outsb
and
mov
cmp
adc
xchg
adc
fucomi
imulb
adc
stc
mov
or
shl
jle
ja
adc
push
jmp
jmp
mov
dec
and
dec
test
pop
and
jb
pop
jne
push
dec
test
push
cmpsb
jle
adc
and
enter
cmp
or
push
cmp
xchg
icebp
mov
sbb
clc
mov
pop
stos
pop
or
mov
aas
push
xorl
push
pop
add
mov
in
data16
sub
sbb
push
dec
imul
lret
loopne
cmp
sub
pop
clc
imul
mov
or
loop
and
aas
mov
sbb
or
sbb
push
enter
int3
popa
mov
inc
out
pop
mov
push
pop
into
ljmp
push
dec
mov
push
decb
mov
lods
lods
xchg
push
push
push
push
cmp
in
clc
movsb
cmp
stos
fildl
xor
xchg
clc
mov
test
xor
xor
mov
push
imul
push
test
dec
jne
and
xor
clc
orl
push
sqrtps
jge
push
cmpsb
mov
cmp
movsb
hlt
fldcw
pop
sbb
sbb
mov
push
or
out
mov
pop
cmp
popa
inc
clc
or
andb
jb
fisubrl
jle
add
cmpsl
xorb
jge
negb
negb
ljmp
pop
xchg
rcrl
pop
adc
dec
cmp
dec
xor
sub
cmp
push
movsb
clc
dec
pop
call
mov
and
ret
rorl
adc
jmp
int3
jne
mov
sbb
je
push
lods
repz
jg
mov
hlt
insb
lret
jmp
push
sbb
pushf
sub
xor
notl
fiaddl
inc
pop
push
adc
mov
mov
add
xchg
loop
add
lea
push
cmp
imul
cltd
pop
aam
in
lret
cltd
mov
and
fdivs
pop
mov
pop
jae
xor
inc
sbb
test
loope
ljmp
push
test
push
jns
inc
int3
inc
lock
aad
pop
push
popf
xchg
push
aad
pop
push
js
scas
mov
daa
or
adcb
dec
aam
push
or
ja
and
mov
jae
arpl
frstor
inc
addb
fidivl
mov
add
mov
xchg
insl
inc
cmpsl
xor
imul
sub
into
clc
in
enter
lock
push
or
and
enter
jo
push
xchg
adc
push
and
push
cmp
adc
aam
mov
mov
dec
cld
push
call
call
push
mov
dec
and
sub
loope
adc
cltd
sbb
or
div
insb
sbb
test
jle
cmp
sbb
rcrl
lds
testl
ds
comiss
sbb
inc
loopne
sub
push
inc
mov
push
xchg
subl
bound
inc
and
xor
push
in
imul
nop
push
imul
and
xchg
popa
stc
js
scas
mov
or
jne
std
xorb
pop
nop
mov
jg
ds
shlb
push
jne
pop
jae
jecxz
pop
mov
cmpl
dec
or
iret
aam
push
mov
je
xchg
fidivl
push
scas
ss
add
add
cmp
and
inc
push
pop
mov
mov
push
call
and
je
pop
fidivrs
daa
push
dec
jno
cmp
mov
pop
mov
imul
xchg
xchg
xor
push
sbb
sub
in
and
or
sbb
sub
imul
or
aam
jp
cmp
xchg
sub
xlat
arpl
sub
jno
xchg
mov
and
add
mov
mov
and
fldenv
sbb
leave
and
push
jns
movsl
push
adc
inc
sub
push
jp
and
icebp
jle
pop
sub
cli
push
xor
pop
scas
pop
aaa
stos
into
ljmp
xor
push
push
and
lds
cli
loopne
push
mov
xlat
cmp
loop
daa
or
push
clc
out
ljmp
daa
imull
andl
and
daa
mov
xorps
mov
push
rorl
mov
push
loope
or
sub
jne
jae
jnp
fbstp
inc
jnp
xchg
push
loopne
pop
mov
pop
add
jl
xorl
ja
pop
sub
pusha
and
inc
je
call
lea
push
sub
inc
aaa
clc
cmp
fs
mov
xor
mov
jecxz
pop
cwtl
inc
sub
cmp
xchg
addr16
adc
mov
lahf
pop
jo
jnp
lea
les
sbb
dec
or
popa
and
imul
fisubs
jbe
fcmovnb
movsb
xor
push
add
push
call
lahf
mov
adc
mov
push
loope
sbb
jbe
repz
or
call
push
or
push
fdivp
lret
shl
mov
stos
mov
jmp
lods
mov
inc
in
in
iret
sub
xor
sub
mov
out
xor
adc
push
popa
or
push
xchg
or
push
les
stos
or
mov
pop
dec
test
push
orb
or
test
out
mov
aam
sub
lcall
je
xor
jae
mov
dec
aam
xor
je
inc
sub
mov
push
push
call
mov
cmp
inc
push
push
out
dec
sub
clc
aas
jmp
inc
add
push
inc
cwtl
and
jno
outsb
lock
std
mov
clc
dec
test
imul
fistpl
push
jno
jbe
call
popf
fstl
push
mov
dec
addr16
lea
and
mov
pop
jle
rol
lods
imul
add
mov
mov
push
mov
inc
xor
pop
cli
movb
push
xor
push
enter
pop
mov
pop
hlt
inc
lret
aas
rol
dec
stc
mov
pop
adc
and
je
mov
and
stos
push
jns
push
push
mov
imul
push
add
xchg
sbb
jae
adc
btsl
pop
add
adc
pop
lock
pop
call
sahf
test
movswl
sub
test
xor
xor
adc
fldt
fdivs
mov
or
adc
es
aam
loop
test
or
cmp
mov
mov
mov
iret
push
shl
or
nop
aad
jmp
test
andb
xchg
sbb
push
scas
sub
push
xchg
xlat
daa
inc
shrb
inc
adc
adc
dec
mov
test
cmp
mov
sub
jo
add
data16
mov
or
stos
ss
pop
mov
xchg
aas
out
sub
stc
lcall
stos
sub
adc
xchg
xchg
inc
ret
mov
xorl
sbb
leave
aas
pop
mov
and
jp
xchg
jge
sbb
inc
stos
sub
movsl
pop
ret
adc
mov
xchg
xchg
pop
add
dec
aam
stos
repnz
or
sbb
test
adc
pop
or
out
xor
push
xor
lods
ret
outsl
mov
scas
icebp
cmpl
pop
and
jnp
ljmp
xor
cli
ret
gs
mov
lds
scas
sub
pop
sub
lds
inc
mov
mov
cmpsb
test
pop
lret
cmp
pop
daa
fcmovb
mov
imull
dec
decl
rorl
push
cmp
dec
leave
xor
in
sub
loop
xlat
std
icebp
mov
dec
inc
mov
scas
das
jg
cmpsb
xchg
fsubs
push
and
popf
adc
rolb
xor
dec
into
inc
mov
movsl
dec
and
lret
jno
jmp
ss
pop
les
pusha
dec
sub
fs
sub
push
pop
aaa
xchg
push
mov
test
aad
cmp
mov
dec
sub
xchg
xchg
subb
dec
sub
aam
hlt
cmp
sub
push
insl
popf
pop
inc
jmp
loop
pop
pop
push
jb
sbb
jo
jmp
pop
mov
jne
dec
inc
jo
mov
stc
clc
test
pop
testb
stc
or
xchg
xor
jae
fs
push
testb
ja
vrcp28pd
notl
dec
jle
jmp
ja
aad
stc
idivb
cmpsb
jg
add
pushl
inc
and
adc
push
dec
jo
cwtl
push
scas
pop
adc
push
ja
es
scas
aaa
insb
cmc
xchg
mov
dec
mov
and
test
mov
xchg
js
jp
xor
jns
jns
sub
inc
or
cld
inc
lea
push
inc
jmp
aad
adc
jmp
mov
shr
sub
xchg
in
sbb
dec
clc
rcll
imul
mov
sbb
divl
mov
push
mov
or
inc
stc
cmp
not
xchg
pop
push
in
pop
push
pop
pop
lahf
dec
mov
adc
call
adc
mov
stos
mov
in
cwtl
xchg
push
data16
ss
sbb
popf
fistpl
push
sbb
push
pusha
mov
adcb
push
fs
in
jbe
and
mov
add
jmp
xor
sarl
lods
insb
xchg
out
in
enter
ret
push
pop
mov
mov
sub
insl
inc
scas
sbb
adc
mov
cmpsb
adc
leave
sbb
jp
xchg
inc
sub
out
jne
cmpsl
ja
dec
xor
ds
and
pop
push
fs
inc
or
jl
inc
es
inc
sub
adc
cmp
xor
lods
push
daa
push
push
or
rcr
xchg
or
xchg
sbb
les
xor
lock
push
add
push
stos
xor
mov
or
cwtl
dec
or
std
jg
das
pop
sbb
hlt
addb
in
dec
mov
or
mov
out
sub
dec
stos
and
ljmp
inc
jmp
nop
xorb
push
test
pop
pop
ret
inc
pop
pop
cs
dec
push
loope
sar
sub
xchg
cmp
inc
sub
push
mov
mov
fprem
inc
jl
dec
pop
dec
sbb
push
sarb
in
fsubrs
mov
lea
xchg
or
mov
cmp
xor
icebp
mov
dec
notb
and
out
adc
or
xor
sub
jmp
cmp
cmp
jne
pop
notb
and
adc
pop
lahf
out
push
mov
stos
push
push
inc
mov
sub
xchg
and
push
pop
mov
test
dec
or
pop
or
sbb
sub
mov
jne
push
iret
push
cmpsl
push
dec
movsl
jae
xchg
sbb
or
mov
dec
push
test
lods
call
push
jge
push
in
in
push
or
clc
orl
mov
aaa
icebp
pop
push
inc
mov
icebp
adc
sbb
jg
inc
rol
and
pop
or
cmp
and
std
or
popf
data16
lcall
test
push
lock
roll
je
aaa
inc
xlat
inc
fwait
std
add
andl
je
es
aas
or
dec
adc
adc
enter
pop
das
call
sub
mov
mov
jecxz,pn
call
sub
je
mov
sub
call
push
movsl
cld
clc
test
cmpl
mov
add
mov
and
movsb
push
push
add
cmpw
ja
fwait
andl
jne
aaa
inc
dec
xchg
sub
xchg
popf
fisubrl
cltd
jl
mov
sbb
adcb
ljmp
mov
and
lods
addb
fs
push
mov
and
or
out
in
and
sbb
xchg
push
cld
in
in
test
mov
xor
or
mov
pop
sbb
pop
push
arpl
stc
lret
xor
rcrb
jne
sbbl
lret
add
lea
push
push
jl
hlt
mov
cltd
bound
push
mov
jmp
stos
xor
push
dec
sbb
and
xor
dec
add
repz
orb
xchg
xchg
shll
sub
inc
sbb
or
push
add
shl
push
jo
bound
mov
filds
or
xchg
or
jmp
in
sub
fmuls
cmpsl
jns
or
cld
sub
adc
and
and
push
or
add
orl
mov
orl
jne
or
push
popf
push
fsubl
jmp
lahf
lds
mov
mov
inc
xorb
pop
cmpsl
das
inc
push
sub
and
cmc
adc
psubsb
mov
jle
or
lods
cli
add
mov
enter
xor
sbb
dec
jge
inc
sub
add
adc
sbb
sbb
and
xchg
decl
sti
shrb
adc
sti
dec
mov
sbb
jmp
adc
mov
xor
mov
lcall
lcall
pushf
pushf
or
adc
push
add
sub
mov
pushf
xor
push
jg
and
jle
pop
and
rep
popf
cld
add
xor
pop
inc
call
or
push
xor
xchg
shrb
cmp
pop
out
add
add
xchg
clc
and
add
mov
fisubl
fcmovnbe
cmpl
pop
and
incl
mov
daa
rol
cmp
loop
pop
jne
jmp
jo
jns
xlat
dec
mov
inc
adc
fidivl
cmp
jbe
ret
adc
in
leave
iret
jno
ficoml
jmp
push
loope
fmull
jnp
jno
frstor
push
sti
in
push
sub
dec
mov
rorb
out
and
in
and
clc
out
fisubs
dec
shlb
add
adc
mov
mov
insb
or
fisttpl
lds
adc
push
sbb
jb
mov
adc
les
test
outsb
inc
test
ret
mov
mov
sbb
mov
lret
adc
lret
cmp
in
daa
pop
mov
and
sub
stos
pop
filds
popf
je
imul
test
xchg
push
ss
pop
push
das
pop
cltd
adc
inc
xchg
cmp
out
adc
xor
adc
and
les
loopne
inc
test
fdivrl
push
dec
mov
in
add
call
push
stos
inc
jl
inc
add
imul
xchg
adc
notb
and
gs
jecxz
lods
inc
push
push
push
or
ljmp
sbb
mov
dec
gs
mov
das
push
sub
and
movsl
cltd
jle
popa
pop
pop
pop
vhaddps
test
gs
push
push
sti
std
mov
mov
jecxz
lea
push
push
adc
das
jmp
cmp
push
xchg
hlt
test
repnz
std
outsb
gs
mov
xchg
xchg
adc
and
mov
loopne
xchg
ret
push
mov
in
dec
test
jl
xchg
pop
adc
inc
lds
or
cmp
jg
sbb
jmp
mov
sub
fnstenv
pop
or
inc
pop
cs
sub
xchg
sti
mov
or
lret
pop
fsubl
sub
or
xor
jmp
mov
stos
add
call
lods
nop
jg
out
dec
cld
sti
or
inc
stc
loope
sbb
jb
call
test
stc
jne
das
scas
jge
jle
and
call
sbb
enter
add
call
or
xor
addl
mov
je
xchg
lods
push
xor
inc
lcall
xchg
pop
hlt
je
pop
movzwl
leave
insb
push
pop
call
jne
xor
jbe
xchg
cld
inc
inc
fwait
out
mov
popf
sbb
cmc
in
call
adc
pop
push
mov
sub
andl
data16
bound
jmp
mov
push
xchg
cwtl
repz
mov
add
and
dec
mov
or
testb
clc
dec
push
push
repnz
mov
jmp
cmpsb
mov
cmc
movsb
pushf
xchg
dec
mov
inc
push
and
mov
test
std
push
pop
aam
rclb
adc
xor
mov
inc
fadd
xlat
dec
xchg
lods
daa
sbb
sbb
out
or
push
and
cmp
js
sbb
cltd
outsb
ja
test
add
sbb
je
ret
jmp
fwait
jecxz
sub
and
adc
pop
jns
and
mov
fstpt
sub
iret
test
sub
or
mov
xor
add
jne
mov
mov
jmp
nop
daa
cld
ja
sbb
bound
push
imul
std
and
sub
inc
ret
and
adc
adc
inc
xchg
lret
push
sti
lret
gs
jmp
add
mov
adc
xor
out
fxch
inc
sub
daa
je
inc
sbb
push
mov
xor
test
pop
shll
cmp
ljmp
or
adc
jo
stos
mov
cmp
ret
aas
xchg
les
and
loop
decb
enter
lods
divl
cmpsb
imul
ret
movsb
flds
dec
mov
add
movsb
std
neg
imul
mov
imul
push
sub
daa
jo
sar
sbb
push
pushl
sbb
dec
aas
mov
xchg
scas
out
and
cmp
xchg
cmpsl
cmp
jne
push
push
jmp
call
mov
push
aam
dec
adc
lahf
jae
push
add
jne
mov
test
inc
insl
pushf
roll
jmp
or
cwtl
and
and
adc
aad
mov
and
mov
and
dec
mov
movsb
jmp
stc
out
nop
notb
push
ficompl
sub
cmc
push
jnp
mov
and
gs
adc
loop
xor
xor
add
and
and
mov
inc
mov
cld
add
jle
mov
xor
cmp
mov
mov
jg
stos
mov
mov
push
push
scas
fcomi
adc
lods
xor
mov
xchg
dec
and
mov
scas
dec
outsl
push
out
std
cmp
test
mov
xor
lahf
jne
movsb
cmp
lods
jne
call
inc
ljmp
and
cmp
push
push
lahf
shll
add
cmc
pop
xor
icebp
popf
mull
clc
push
lock
xor
pop
cli
stc
lahf
or
adc
imul
push
sub
push
or
dec
cmp
mov
sbb
cmp
jge
mov
adc
jbe
add
xchg
adc
adc
jns
adc
inc
dec
mov
jecxz
jp
lret
adc
movsl
mov
dec
adc
cmp
sub
push
mov
sti
or
add
mov
daa
ja
in
aam
cmpsl
std
add
add
mov
std
push
mov
cmp
call
xchg
and
sub
addr16
sub
push
stos
dec
pop
mov
adc
jge
add
popf
jmp
inc
push
add
push
xchg
call
adc
add
cs
inc
push
call
pop
pop
rol
shrb
push
imul
in
ret
cld
dec
adc
sar
or
lret
lods
jle
sub
adc
pop
stos
xor
hlt
stos
sub
adc
push
ret
lcall
sub
insl
test
fwait
mov
stos
aad
nop
aad
or
jo
aad
add
inc
add
push
sub
mov
jbe
mov
jo
or
fmul
push
push
sub
addl
shl
out
leave
insb
into
inc
cmp
decl
jno
call
in
mov
inc
lret
xchg
cmp
leave
clc
daa
rolb
fldl
push
repnz
push
sub
orl
notl
mov
icebp
pop
call
mov
sbb
addl
lret
adc
mov
sbb
enter
mov
jmp
sub
mov
and
and
sub
mov
fistpll
andl
xchg
mov
add
nop
and
inc
dec
loope
add
fstpl
sub
movsl
jne
sub
adc
xchg
cmp
out
cmp
mov
cwtl
mov
out
mov
shr
jl
cmpb
sub
xchg
jle
inc
dec
push
jo
test
cltd
cmp
add
xor
push
test
repz
xor
xchg
jl
mov
mov
mov
scas
daa
shll
push
xor
adc
or
and
ljmp
insl
cmp
jmp
mov
adc
int3
dec
adc
xlat
scas
leave
adcb
pop
inc
mov
push
mov
shrb
sbb
push
push
setbe
mov
popf
inc
out
movsb
and
sub
call
push
cltd
inc
add
xor
fistpll
call
jp
cmp
or
jmp
dec
pop
rcrl
je
push
mov
test
mov
cmpsb
js
jb
pop
sub
push
mov
or
icebp
fidivrl
jg
lcall
incb
push
xchg
push
xchg
or
lds
out
mov
lahf
xchg
and
fcoms
mov
mov
fnsave
and
xchg
xor
push
adc
movsb
inc
inc
cmp
mov
xor
cmp
and
pusha
out
cmp
cmp
pop
dec
stc
lds
push
sub
dec
jbe
xchg
or
outsl
and
jge
ds
sahf
mov
xor
inc
test
or
insl
lock
adc
stc
pop
repnz
fbstp
jno
xor
leave
adc
call
or
mov
lods
pop
sbb
ljmp
push
stos
sbb
aaa
jns
mov
xchg
adc
adc
clc
pop
dec
add
jae
adc
jecxz
pop
sub
inc
dec
add
imul
dec
sub
iret
sub
adc
cmpsl
and
scas
das
push
push
std
mov
xchg
push
xor
out
cmp
jl
push
je
movsl
pop
in
call
dec
pop
and
and
std
sbb
test
jae
push
scas
insl
xchg
pop
and
or
popf
int3
mov
add
pop
and
je
cmp
sub
mov
push
mov
nop
sbb
adc
dec
mov
pop
or
repz
data16
in
pop
cli
and
scas
or
add
ret
fstpt
aad
push
fidivrs
or
dec
sbb
xchg
sbb
ss
sbb
push
cmp
loope
xlat
into
or
inc
sbb
decb
orl
aam
scas
xor
xorb
sbb
jmp
xchg
mov
ret
and
ret
dec
cmp
nop
pop
add
push
not
xchg
rcr
out
sub
mov
sub
dec
mov
and
xchg
mov
stos
mov
enter
sub
xchg
sahf
adc
popf
xchg
sub
sahf
pop
sub
aad
sub
shl
sbb
mov
aas
outsb
es
jl
pop
xchg
js
inc
daa
loopne
call
hlt
inc
call
test
stc
cmp
fbld
pop
dec
xor
and
push
cli
inc
pop
pop
xor
ja
mov
clc
test
pusha
push
inc
jb
mov
ds
cmp
into
mov
sbbl
push
dec
push
add
in
ja
in
pop
xchg
mov
loop
ljmp
and
sbb
leave
jne
js
imul
pop
outsb
and
jbe
movsl
sti
push
stc
stos
lret
inc
enter
dec
cmpsb
sbb
jmp
movsl
pop
and
aaa
sbb
cwtl
outsb
out
and
fsubrl
mov
or
sarl
cmp
sub
or
and
push
push
pop
sbb
or
and
push
mov
or
pop
test
xchg
sub
andl
or
call
jl
fistpll
jbe
xor
cltd
test
in
lret
daa
push
adc
lea
xchg
out
sub
mov
jp
test
lods
orl
xchg
adc
test
pop
test
pop
xchg
push
xchg
inc
test
les
dec
cs
sub
call
fs
adc
mov
call
xchg
mov
mov
sub
mov
stos
mov
adc
inc
jmp
mov
gs
pop
adc
add
sub
das
xchg
movb
ljmp
xor
adcl
jl
pop
jle
jno
cmp
pop
scas
ss
loope
push
ss
jle
dec
in
enter
cmp
sub
adc
cmp
pop
shlb
add
adc
mov
add
pop
or
icebp
pop
inc
lahf
push
adc
mov
call
xor
lea
aaa
mov
insb
inc
sub
fisttpll
push
adc
cld
fwait
cmpsb
adc
cmp
pop
pop
repnz
push
xchg
andb
subl
add
call
jb
xchg
mov
loope
int
aas
sarl
lcall
out
in
and
pop
fstp
cwtl
rorb
and
pop
fldcw
mov
cmp
xor
dec
popa
push
test
pop
jge
inc
dec
add
mov
add
xor
cmp
jge
movsl
outsl
push
xchg
xchg
out
jo
je
push
pop
sbb
daa
sub
std
lock
rcrl
mov
push
fs
aas
cmp
dec
adc
and
loope
mov
push
push
or
adc
mov
xchg
dec
lock
inc
addb
ljmp
xor
movsl
jns
lods
xchg
cmpsl
lcall
ljmp
adc
jle
repnz
dec
xchg
xor
es
std
outsl
std
inc
shlb
fisubs
call
in
lods
and
daa
adc
inc
and
ret
inc
mov
lcall
push
inc
dec
mov
add
push
adc
andb
or
cmp
jmp
inc
aam
adc
mov
mov
daa
das
hlt
aas
push
and
xchg
out
sub
fistps
jne
xchg
push
dec
test
ds
jae
mov
mov
fistl
and
push
sub
cltd
out
mov
push
xchg
cmpb
adc
inc
mov
aaa
xor
aas
stc
lcall
gs
pop
xchg
and
in
xchg
push
ret
push
push
sub
mov
adc
push
mov
mov
out
push
pop
ds
xchg
mov
xor
cmc
cmp
push
fistl
mov
add
adc
scas
cmpsb
ficompl
mov
and
fwait
xchg
mov
cmc
movsb
cmp
mov
dec
cld
mov
das
adc
jbe
dec
and
pop
push
jno
dec
fmuls
mov
sbb
push
sub
xchg
fcoms
popa
andb
pop
outsl
shrb
jb
and
inc
jae
add
sbb
mov
xchg
ret
or
mov
jne
sub
push
hlt
xor
mov
pushf
push
adc
mov
test
loope
adc
sub
or
repnz
inc
sbb
xchg
cwtl
push
hlt
cmp
pop
add
jmp
add
in
das
mov
add
xor
xor
push
mov
dec
cli
fucom
outsb
jne
mov
mov
fimull
mov
daa
mov
or
nop
mov
into
lock
outsb
das
lds
scas
aaa
inc
mov
push
and
aad
das
and
gs
out
outsb
xchg
pop
ljmp
std
cmp
testl
in
push
xchg
sbb
xor
pop
stos
or
sbb
cwtl
mov
cmp
jle
je
outsl
cltd
lea
or
or
pop
pop
jmp
movb
pop
pop
xchg
xchg
xchg
test
ja
out
xor
inc
and
popa
std
into
ret
mov
clc
push
out
sub
fwait
jecxz
adc
je
dec
mov
test
dec
loop
sbb
adc
xchg
movsb
out
or
xor
fldl
test
mov
pop
mov
jmp
cmp
sub
adc
ret
or
rolb
xchg
jne
push
pop
jecxz
mov
dec
decl
and
jg
sub
cld
push
mov
adc
in
sbb
or
sub
orl
jmp
inc
adc
xor
andl
cmp
mov
pop
jmp
ja
push
loope
call
flds
das
shr
rolb
daa
jne
filds
inc
stos
in
std
jbe
popf
dec
repz
push
test
sub
aam
out
lods
sbb
mov
sbb
popf
shll
loop
adc
mov
push
gs
jl
mov
add
or
mov
cld
jecxz
mov
pop
sub
dec
pop
mov
xchg
cmp
push
test
call
push
mov
adc
sub
or
pop
push
jmp
xchg
inc
jl
cmp
adc
sbb
or
push
xor
cltd
adc
pop
mov
adc
aad
ret
pop
dec
sub
loop
mov
repnz
push
adc
repz
rclb
repz
std
out
idivl
and
fdivrl
dec
pop
pop
rolb
cmc
decl
clc
cmp
out
loop
inc
pop
fildl
dec
stos
cltd
outsb
clc
int
inc
xor
clc
add
mov
mov
mov
jno
jl
jno
push
stos
jbe
imul
sti
dec
mov
es
gs
int
sub
push
pop
adc
push
pop
jge
mov
movsl
mov
xchg
dec
shlb
sub
sub
hlt
sbb
xor
xor
pop
sub
cmp
push
mov
push
sub
movsb
mov
or
mov
inc
inc
push
push
cwtl
adc
add
test
or
xchg
adc
adc
bound
cmp
sbb
pusha
jnp
jb
rolb
test
mov
cmc
or
or
shlb
mov
cmc
or
push
mov
mov
loopne
mov
cmc
or
js
mov
xlat
scas
and
repnz
mov
xchg
je
sub
inc
into
jg
xor
and
push
inc
mov
push
sub
mov
inc
mov
sbb
testb
out
in
mov
pop
in
mov
dec
or
mov
push
add
adc
or
loop
cmpl
insb
xchg
inc
adc
and
mov
stos
lret
je
mov
mov
rorb
out
xor
pop
or
xchg
ds
and
xor
cwtl
rorl
pushl
fs
ficoms
lds
adc
decl
push
ljmp
cmpsb
out
mov
sub
inc
in
and
popf
test
jge
loop
xchg
jbe
sbb
inc
mov
les
push
test
push
lcall
mov
adc
push
push
test
sub
jo
nop
aad
xchg
cmpsb
mov
fists
pusha
repnz
jae
pop
or
mov
fld
jno
lahf
push
rolb
jl
adc
pop
dec
adc
push
nop
sbb
mov
adc
push
inc
iret
ds
cli
add
xchg
add
pop
adc
and
dec
and
je
inc
xchg
jge
jno
inc
in
jae
push
push
sti
out
adc
push
adc
fsub
xchg
repz
je
xchg
in
jl
dec
xchg
cmp
je
or
lock
inc
add
mov
aam
or
inc
inc
or
test
or
aam
sub
jb
and
mov
mov
ss
fmuls
shl
add
call
adc
addr16
or
fmuls
or
pop
xchg
fmull
sub
push
mov
sarl
jmp
inc
mov
push
aaa
push
push
inc
or
or
jmp
dec
das
adc
mov
sbb
pop
sbb
outsl
sbb
inc
dec
push
cmp
je
mov
aam
cli
lret
movsl
push
nopl
xchg
cmp
jmp
xchg
push
mov
in
dec
pavgb
test
xorb
jg
notb
test
jne
orl
mov
mov
push
stos
mov
and
leave
sbb
cmp
divb
inc
rcrl
adc
clc
movsl
add
std
cld
push
stc
fwait
sub
xchg
pop
sub
clc
add
add
std
sbb
loopne
imull
adc
andb
mov
push
mov
addl
add
cmp
dec
jbe
jbe
sbb
or
push
repz
or
sbb
and
out
mov
jg
jp
push
call
jb
popf
mov
mov
or
or
or
loopne
stos
int3
cmp
rclb
jecxz
cmp
push
sbb
add
jge
dec
in
aam
enter
insb
test
mov
ret
dec
jp
mov
pop
daa
cmp
bound
pop
inc
xchg
stc
adc
stos
out
sub
test
mov
or
leave
dec
scas
cmp
sub
jne
mov
mov
xchg
push
lds
mov
sbb
pop
sbb
ret
jp
mov
lea
lods
sub
cmp
jo
sub
xchg
icebp
outsl
xchg
jns
repnz
cs
inc
adc
pop
divl
mov
add
pusha
leave
pop
mov
mov
push
push
mov
mov
inc
es
test
add
pop
and
popf
movsl
dec
lea
dec
push
mov
and
sbb
mov
mov
aas
jl
mov
lahf
dec
xchg
or
mov
ret
es
inc
lods
adc
xor
int3
icebp
add
sub
pop
out
xor
sub
repz
sti
mov
and
xor
mov
mov
bound
and
and
nop
jno
sbb
xchg
ret
xchg
rorl
xchg
test
bound
das
mov
and
or
stos
mov
clc
gs
jo
push
pop
push
sti
mov
imul
jne
inc
inc
xor
jp
cld
xor
or
push
pushf
jecxz
mull
or
mov
lock
jle
push
cmpsl
mov
xchg
gs
cltd
jmp
inc
test
mov
adc
imul
and
xchg
pop
mov
gs
sarl
xor
imul
mov
adc
adc
aad
cmpsb
ljmp
mov
jmp
neg
and
je
dec
or
ret
imul
jge
jbe
cmp
add
push
pop
ret
xor
sbb
or
shlb
add
call
cmpsl
clc
das
push
push
dec
inc
dec
cmpb
sub
dec
mov
cs
adc
xorb
adc
mov
push
inc
xchg
movsb
clc
clc
out
or
jmp
fsubrs
scas
fstpl
dec
je
xchg
sbb
mov
mov
xchg
aaa
or
and
or
mov
pop
shll
xchg
pop
loope,pn
cmp
subl
jne
xchg
jbe
in
push
push
aas
xchg
repnz
cmp
add
hlt
clc
cmpsl
add
mov
mov
adcb
cmp
xchg
pop
scas
xor
scas
jmp
aaa
or
mov
ds
inc
dec
subl
scas
shl
adc
add
sbb
out
inc
mul
mov
loopne
shll
clc
inc
rclb
inc
mov
in
lea
mov
lea
in
movsl
add
cmc
jmp
push
lock
arpl
testb
jbe
pop
and
or
jg
inc
mov
push
push
cmpl
test
fildll
pushf
orl
inc
push
xchg
adc
push
push
adc
in
addb
fnstcw
jbe
jmp
and
jmp
sarb
sbb
pop
loope
push
or
scas
push
mov
aam
mov
orl
fiadds
adcl
mov
enter
adc
aaa
adc
push
movb
jmp
pop
loope
lea
ljmp
mov
or
mov
sub
xchg
cmp
and
dec
cmp
and
adc
mov
adc
enter
sub
loop
popf
fisubrs
call
push
mov
inc
cmp
adc
xor
mov
outsl
or
xchg
dec
stc
mov
inc
mov
sbb
mov
dec
loope
in
pop
cmp
xor
lods
mov
pop
movsb
sub
ret
and
jmp
adc
adc
mov
pop
jae
dec
cld
xor
adc
insl
sbb
cwtl
mov
jmp
testb
sub
lock
cld
sub
movsl
mov
and
aam
insb
insl
sbb
aad
mov
cltd
xchg
jbe
cltd
adc
mov
mov
ret
or
dec
hlt
mov
into
pop
clc
xchg
cld
jo
push
push
call
jno
jl
int3
xchg
mov
clc
add
out
loop
pop
or
and
repnz
pop
push
mov
jge
xor
inc
lahf
aad
push
push
scas
mov
sti
imul
roll
push
fnstsw
pop
adc
call
jne
push
mov
sti
ret
adc
shl
les
stos
cmp
nop
lods
hlt
sbb
add
or
test
loop
sub
fldl
cmc
out
jb
das
sub
gs
cmpsl
ficoms
clc
sub
leave
dec
negl
cmp
mov
addl
sub
data16
or
adc
sbb
push
pop
push
mov
test
daa
sub
imul
dec
add
jl
and
loop
fdivrl
push
lahf
xchg
and
leave
add
aam
cli
xchg
sbb
loope
xchg
clc
iret
lret
gs
cmp
mov
test
jmp
aam
push
stos
push
cmp
dec
dec
jecxz
aam
imul
fs
pop
sub
je
mov
in
cmp
scas
and
push
subl
mov
sub
inc
loopne
dec
cs
sub
mov
test
and
push
insb
movsl
aas
test
push
notb
mov
jne
push
cwtl
lahf
repnz
or
jmp
std
xor
adc
insb
cltd
cmp
nop
pop
shlb
and
xchg
jle
inc
fisttps
add
mov
dec
sub
cmp
test
sbb
add
jbe
call
mov
pop
fdivrp
xor
xor
icebp
cmp
addl
mov
lret
scas
into
dec
fstpl
dec
insb
pop
pop
pop
push
xchg
jl
pushf
inc
push
push
push
ds
cmp
fiaddl
dec
pop
sbb
jecxz
jmp
repnz
adc
push
call
mov
mov
movsl
ja
aad
xchg
inc
dec
dec
push
lods
push
adc
jb
mov
dec
movb
roll
mov
mov
mov
xor
jge
xor
nop
daa
inc
les
sub
fldcw
dec
jmp
push
call
dec
sbb
inc
and
call
push
adc
push
int
inc
ret
or
pop
push
cmp
pop
hlt
pop
push
mov
push
push
lock
out
push
addr16
mov
filds
subw
and
lret
je
les
inc
or
push
push
push
jmp
cli
jmp
icebp
mov
aam
jmp
dec
sbb
mov
push
pop
mov
mov
or
lea
addr16
inc
mov
or
pusha
cli
cmc
push
cmp
adc
mov
mov
push
sarb
add
sub
dec
iret
dec
cli
mov
mov
movl
jg
movsb
cld
mov
pop
pop
adc
or
push
jne
cmpl
pop
sti
das
roll
adc
add
adc
cltd
push
push
jl
and
and
movsb
mov
cwtl
dec
dec
call
sbb
xchg
sub
dec
add
and
mov
out
add
xchg
sub
sbb
js
lea
adc
shll
cmc
jmp
push
push
adc
jmp
loope
xchg
jbe
dec
xchg
and
lods
test
stos
mov
pop
lods
aaa
push
jbe
shll
inc
add
mov
lock
shll
std
push
push
mov
mov
push
aam
push
cld
lahf
sub
in
mov
mov
insb
add
inc
cmp
aad
push
int3
out
adcb
xchg
mov
popf
inc
mov
pop
enter
jle
movsb
jno
jae
sub
das
rcrl
je
movsb
and
aam
or
sub
sub
sar
add
push
dec
inc
pop
hlt
out
inc
out
xor
imul
or
mov
xchg
push
jmp
xor
mov
xchg
push
jecxz
and
dec
lds
sub
mov
lods
das
out
and
push
mov
dec
push
scas
lret
push
and
and
fnop
cmp
sub
mov
cmp
inc
insb
or
sbb
and
pop
xchg
loopne
inc
or
gs
das
sahf
mov
push
inc
das
fists
sarb
dec
movsl
frstor
push
lret
push
test
pushf
cmpl
nop
adc
push
jno
pop
jne
movsl
cmp
imul
clc
sbb
cld
lea
adc
adc
repnz
adc
sbb
adc
aam
scas
mov
mov
jb
into
aaa
daa
push
dec
inc
push
cltd
jecxz
xor
pop
out
xchg
dec
or
fxch
testb
fists
add
and
pop
dec
jge
in
add
stos
or
fucom
dec
or
adc
out
cmp
push
call
sbb
xor
lds
push
int3
mov
outsb
lcall
jg
xlat
int3
xchg
inc
js
mov
lea
scas
int
jp
inc
xchg
scas
dec
loopne
dec
cmp
hlt
loop
jne
loopne
je
sti
dec
pop
in
xchg
aam
dec
mov
mov
aam
std
outsl
dec
xchg
and
sub
movsb
fninit
lret
xorb
stos
or
cld
je
adc
push
pushf
nop
inc
adc
int3
sub
movsb
and
scas
loop
cmpsl
in
jmp
cli
stc
and
xchg
adc
fdivrs
aas
aas
gs
mov
call
pop
out
mov
jmp
aam
out
ret
xor
cmpl
popf
cmpsb
add
hlt
mov
adc
das
jl
pushl
enter
scas
push
mov
xlat
lea
xchg
out
leave
adc
fmuls
and
lods
and
inc
xor
ja
mov
out
pop
xor
mov
inc
jne
pop
mov
imul
je
jg
adc
lea
sub
ja
cmpsl
xor
imul
shr
mov
and
fcmovnb
mov
test
test
xchg
jp
push
loop
test
daa
icebp
push
mov
sub
fld
arpl
dec
mov
or
sub
ret
ja
mov
or
mov
push
out
xor
jmp
and
push
cmp
mov
mov
cli
xor
adc
and
dec
xor
loopne
and
adc
clc
sub
bound
jge
lahf
mov
xchg
cmp
cmp
ret
daa
dec
and
adc
mull
cmp
or
outsw
nop
xchg
and
icebp
sub
inc
or
cmpsl
cwtl
stc
fmull
daa
je
jg
outsb
andl
stos
lea
aas
xor
in
adc
ds
es
je
cld
mov
mov
or
sti
or
mov
sbb
icebp
loop
xchg
mov
push
cmc
in
loop
enter
mov
mov
sbb
popf
adc
jecxz
mov
daa
inc
add
jnp
fsubrl
cmp
stc
or
cmp
outsb
aam
push
jle
push
mov
push
lret
mov
jne
out
imul
scas
cmp
mov
xor
push
mov
jle
out
jl
out
sub
jne
pop
or
cld
fdivr
fs
stos
int3
mov
inc
je
mov
adc
jne
test
les
lods
cld
mov
sbb
imul
jbe
push
aam
cli
mov
xor
movl
and
jp
xchg
mov
adc
dec
ljmpw
pop
xchg
negb
ljmp
aam
leave
mov
ret
inc
daa
or
mov
mov
sbb
lcall
xchg
das
xchg
sbb
in
cmp
jne
out
mov
cmp
aam
push
adc
sub
and
fsts
adc
das
adc
andl
ret
cs
jne
in
call
in
in
sbbb
or
into
push
dec
and
and
pop
jne
jno
and
std
and
call
mov
add
je
fs
stos
and
cs
add
or
push
shlb
push
inc
enter
cld
xor
scas
enter
or
call
test
xor
sub
sbb
jb
int3
inc
scas
gs
enter
les
or
xchg
insl
or
or
xchg
and
or
adc
call
or
fdivrs
jne
in
or
fcompl
jmp
xor
and
jmp
test
xchg
adc
repnz
cmc
icebp
xlat
mov
jmp
xchg
jmp
and
hlt
adc
imul
add
lock
enter
push
or
push
stc
inc
enter
rolb
inc
or
shll
add
sbb
pop
fmull
xchg
int3
jl
cmp
sar
sbb
xor
xchg
mov
mov
sbb
int
lret
shrb
imul
pop
not
push
fcompl
push
and
sub
sbb
in
sub
or
inc
bound
sub
push
int
scas
insl
inc
sub
lcall
push
sbb
shrl
pop
int3
or
int
dec
jnp
push
sub
daa
adc
and
cmpsb
jmp
pop
jl
testb
xlat
mov
jb
ljmp
cltd
push
test
mov
jecxz
dec
dec
das
movsb
insl
gs
imul
insl
xchg
test
xchg
add
ljmp
jnp
movl
xor
push
cli
aas
xchg
std
sbb
ret
jge
xor
inc
push
pop
loopne
or
inc
jae
mov
push
out
mov
clc
fstl
je
xchg
mov
stos
push
add
and
or
pop
cltd
pop
mov
fdiv
incb
inc
popf
pushf
lock
push
test
sub
data16
jl
lret
jle
push
orb
cwtl
mov
lock
mov
test
push
imul
hlt
imul
data16
lea
fs
push
nop
les
adc
aad
push
inc
cmp
xor
sub
ret
mov
dec
push
sti
and
mov
mov
xchg
jge
ja
mov
xchg
and
jmp
rolb
les
adc
jl
incb
out
add
push
fidivrl
rolb
mov
inc
mov
es
sub
jle
mov
aas
mov
test
shll
daa
test
push
or
push
push
call
adc
mov
xchg
shrl
clc
push
jge
dec
sub
cmp
xor
sbbl
xor
lock
fsubp
xchg
push
and
push
jecxz
mov
xor
xchg
xchg
mov
push
dec
and
outsl
jle
les
mov
pop
jno
or
mov
mov
test
push
lret
lock
add
mov
in
addr16
jl
dec
mov
jmp
pop
les
pushf
adc
call
jmp
jl
cmp
mov
mov
sbb
inc
sub
mov
mov
mov
pop
out
push
loop
cmp
mov
sarl
mov
dec
out
cwtl
mov
and
popa
sahf
lea
lds
fmull
mov
test
pop
add
sarb
add
ror
jmp
jg
sahf
adcb
sub
xchg
sbb
fs
insl
jl
clc
cmpsb
push
inc
or
dec
loopne
mov
adc
dec
mov
add
cli
into
mov
or
mov
xlat
sti
push
cmpsl
jmp
pop
xchg
xchg
std
dec
xor
fmull
jne
push
mov
lds
cld
imul
icebp
sahf
sbb
icebp
mov
cmp
in
or
mov
ds
sub
dec
add
les
test
out
sub
sub
mov
xor
mov
das
jmp
pop
xchg
out
sub
daa
cmp
sub
test
jge
xor
inc
loop
and
jle
scas
adc
push
cmpsl
sahf
bound
mov
pop
fcmovnb
sub
mov
mov
icebp
aam
jl
lret
jne
or
xchg
inc
mov
in
cmpb
and
cmp
push
stos
jg
adc
shrb
in
pop
test
xor
out
dec
out
jnp
or
pop
mov
int
out
mov
and
pop
aam
into
orb
adc
leave
jbe
fists
jb
cmp
je
inc
orl
sbb
rorl
push
mov
jl
pop
xor
mov
fmul
and
clc
mov
enter
sbb
jecxz
daa
cld
push
jmp
out
pop
imul
shll
mov
movsb
inc
inc
sahf
xchg
test
pusha
sub
mov
adc
xor
adc
or
mov
inc
shlb
cwtl
sub
aam
stc
incl
push
push
test
sti
jb
fnstsw
rorl
sti
lahf
push
dec
int3
arpl
shll
jo
xchg
pushf
cli
out
add
pop
mov
jge
mov
jmp
fs
out
inc
dec
out
cltd
ret
sub
jo
dec
and
int
push
bound
adc
ret
call
std
mov
push
xchg
jns
or
pop
ja
or
jge
push
fucom
gs
mov
aas
ret
sahf
jno
adc
adc
jne
or
xchg
adc
lds
push
xor
push
dec
popa
adc
add
jl
rdpmc
pop
and
and
dec
repnz
sarl
daa
std
ja
or
cmpsb
cmpsl
movsb
adc
cli
jne
push
clc
call
push
movsb
lods
sbb
addr16
inc
push
cmpsl
inc
pop
pop
inc
adc
adc
in
inc
arpl
mov
mov
stos
sbb
and
jmp
lods
cmp
loop
and
xchg
shrl
jmp
pop
fists
gs
mov
push
push
xor
push
add
dec
cld
gs
dec
adc
or
lret
dec
imul
test
adc
mov
push
testl
xchg
jne
dec
or
push
enter
or
cmp
sub
call
jno
lret
jo
or
call
movsl
std
outsb
jmp
push
inc
or
xchg
jge
mov
inc
lea
cmp
jp
push
xor
xchg
xor
cmp
enter
push
pushf
cs
dec
ficoml
das
loop
sub
mov
adc
movsl
sbb
dec
mov
orps
lcall
incb
add
pop
mov
sbb
stos
add
call
leave
or
push
mov
sbb
adc
xor
cmp
daa
add
cmp
push
mov
loop
and
mov
mov
cmp
xchg
cmc
sbb
leave
xor
jge
pop
rorl
or
lret
pop
movsb
jmp
daa
pop
ret
jns
xor
fisubrs
inc
leave
jmp
cmp
push
mov
mov
jne
and
addb
fldpi
fidivrl
inc
test
xor
and
mov
jne
repz
cld
or
cmp
or
xchg
pop
xlat
sub
push
aaa
arpl
and
das
mov
lods
or
adc
xchg
and
sbb
out
scas
rorl
imul
sub
cmc
in
adc
in
dec
es
adc
or
add
and
ja
imul
cmp
cltd
pop
pop
scas
push
sahf
sub
inc
inc
negb
or
mov
inc
aas
and
adc
mov
scas
cmp
push
and
data16
fisttpll
inc
ss
outsl
out
inc
push
lret
cmp
xlat
cld
or
pop
orw
cmp
mov
push
jno
cmp
push
sub
sub
sti
stos
push
inc
sub
dec
or
pop
xlat
mov
jne
clc
or
jne
pop
aam
jo
rcrl
clc
pop
pop
jle
loop
push
pushaw
inc
sub
pop
popa
or
mov
jmp
or
push
lahf
nop
push
pop
mov
add
dec
loopne
jns
add
imul
ret
and
mov
dec
scas
leave
dec
xchg
ja
scas
cmp
fs
xchg
sbb
lea
mov
das
sbb
cld
mov
inc
add
mov
dec
out
flds
cmc
imul
jmp
mov
or
xor
adc
mov
sub
jmp
and
push
push
stos
pusha
adc
sbb
adc
push
leave
lahf
les
push
adc
push
xchg
pop
pop
or
mov
jne
and
xchg
cli
ljmp
jmp
jg
cmp
in
cmp
movb
sub
testl
pop
pop
xchg
setl
imul
and
sbb
call
xchg
in
test
lret
mov
mov
lea
inc
loopne
adc
xor
idivb
inc
mov
and
popf
pop
adc
cld
add
ret
add
jl
rcl
mov
cs
add
ja
push
je
fidivrl
push
popa
jno
in
add
inc
push
hlt
and
shll
dec
xchg
lock
fs
sbb
repz
jmp
decb
sbb
push
lahf
inc
sub
jge
loopne
jmp
aad
es
push
shll
movsb
inc
or
aas
lods
and
pop
scas
jbe
push
pop
adc
int3
xor
push
js
xchg
repz
push
adc
negb
inc
fwait
jge
lret
rorb
adc
lods
mov
push
inc
lods
mov
jecxz
sub
dec
mov
call
out
lods
cld
mov
sbb
leave
call
jno
xchg
mov
out
mov
mov
mov
movsb
jbe
hlt
call
roll
fmull
push
mov
mov
jge
das
jle
out
adc
inc
xchg
je
jecxz
xor
xchg
inc
ljmp
adc
add
call
fimull
pop
cld
sti
mov
fs
std
outsb
mov
mov
lds
jle
push
in
dec
out
or
xchg
repz
sub
gs
and
addr16
sbb
xchg
out
scas
and
or
sbb
mov
sti
jns
cltd
and
js
mov
fbstp
test
loopne
xlat
repnz
sub
mov
imul
jne
adc
push
and
and
mov
test
repz
xchg
push
or
cld
ja
ret
mov
cmp
pop
shlb
aad
sub
push
movsb
push
mov
cmp
test
outsl
push
and
sahf
dec
sub
cmc
dec
push
add
jb
mov
push
mov
and
add
hlt
clc
dec
addr16
sub
adc
dec
or
xor
or
cmp
or
push
decb
das
mov
or
jge
inc
adc
or
mov
mov
and
adc
xor
push
jg
inc
sbb
sbb
test
idiv
in
cmp
push
sti
das
lods
repz
std
dec
or
jb
adc
mov
ljmp
cmp
or
lods
repz
pushf
or
in
mov
and
inc
sbb
test
jno
lret
icebp
movsb
ljmp
adc
and
cld
ret
adc
cld
lods
mov
stc
ret
fstp
push
inc
outsl
cmpsl
in
and
cmc
or
cmpsl
test
repnz
call
repz
dec
cmp
pusha
push
cmpb
mov
mov
or
in
jae
ja
mov
sbb
inc
lcall
jnp
imul
or
cs
pop
or
mov
sbb
xor
adc
clc
pinsrw
ret
mov
and
add
ja
jnp
sub
dec
dec
aam
das
push
shlb
cmp
cmpsb
push
shrl
pop
je
cmc
or
test
and
and
push
call
lods
xlat
and
pop
inc
dec
and
mov
inc
pop
mov
cmc
cmpsl
xchg
mov
adc
fs
jmp
pop
xchg
mov
sub
push
sub
das
push
sub
inc
mov
mov
jo
jne
dec
sbb
lcall
ror
push
or
das
lea
sub
add
rcl
mov
and
loopne
and
dec
es
mov
inc
inc
push
inc
sbb
mov
inc
push
jae
pop
push
dec
sbb
push
cmpsl
test
cmp
rolb
leave
or
xlat
jns
adcb
mov
fwait
imul
pop
push
jmp
push
ds
add
and
pop
popa
mov
pop
mov
lds
fnstenv
mov
lock
pop
inc
or
or
pop
mov
mov
je
mov
jmp
push
cli
push
and
js,pt
cmp
ds
lods
push
call
lock
shlb
icebp
mov
dec
cmpsl
push
das
or
jge
mov
push
dec
pop
adc
or
test
negb
cmp
dec
fdivr
fisttps
adc
dec
push
mov
add
into
pop
dec
inc
out
push
sub
jmp
aam
jmp
lock
ja
jg
clc
jno
or
push
xor
fstpt
jl
dec
decb
mov
xor
fwait
cmp
pop
sbb
inc
sub
sbb
xor
cwtl
push
or
cmpsb
sub
adc
xchg
xor
sub
push
test
mov
or
cld
dec
or
pop
jae
inc
jne
mov
adcb
popf
outsb
sbb
pop
cmpsb
out
sbb
push
adc
les
sub
in
lret
cli
add
add
or
in
pop
dec
roll
adc
iret
mov
mov
or
adc
mov
cmp
pop
or
or
mov
jne
mov
out
xchg
or
add
aam
pop
inc
ljmp
mov
xor
popa
and
inc
cli
in
push
mov
adc
push
cmp
daa
add
je
rcrl
fimull
int
repnz
push
adc
sbb
cmpsb
inc
adc
movsl
out
cmpsb
push
push
mov
xor
sbb
out
dec
or
fiaddl
imul
push
mov
jo
add
cld
mov
or
sub
push
rorb
lods
inc
mov
fidivrs
adc
sub
leave
xchg
loopne
pop
mov
mov
sub
cmp
pop
adc
int3
enter
stos
or
or
in
inc
mov
adc
ret
inc
ds
scas
push
andl
sub
rcrl
cs
dec
arpl
push
push
repnz
jl
push
pop
xchg
dec
aam
sti
popf
jns
and
lods
pop
sub
jne
dec
lea
push
cmp
xor
lea
pop
push
call
sub
mov
xchg
cwtl
mov
mov
jecxz
jp
lcall
pushf
fcmovu
xchg
adc
mov
xchg
or
outsl
sbb
imul
xor
push
rclb
dec
sub
push
sbb
and
and
mov
mov
dec
cmp
xchg
in
and
xor
in
std
clc
sti
push
call
adc
sub
cmpsb
lods
xor
adc
jo
sar
adc
fdivrp
sbb
lcall
loope
jne
ds
add
cmp
push
ss
cli
std
xchg
ret
arpl
sbb
das
outsb
xor
repnz
push
xchg
push
sti
and
jbe
lcall
fisubrl
mov
push
inc
and
dec
ret
out
stos
in
pushf
ret
outsb
test
insb
push
fidivs
lea
jb
cmpsl
add
sub
vmovaps
into
lcall
in
adc
jle
bound
inc
jo
jg
mov
sbb
mov
ss
ds
cmp
add
cmpxchg
pop
sbb
push
nopl
sbbl
lea
or
aad
mov
mov
test
sbb
inc
lea
push
in
jmp
fadd
lahf
int3
cmpsl
xchg
fstl
cmpb
sahf
push
movl
and
sbb
jle
adcl
mov
dec
imul
pop
push
xchg
call
jmp
dec
mov
and
fildl
in
xchg
fmull
fs
cmpl
adc
enter
xchg
push
and
or
aad
xchg
fnstcw
add
push
xchg
icebp
and
inc
sub
mov
mov
pop
dec
or
or
mov
xchg
and
adc
push
pusha
jmp
mov
or
jnp
xchg
stos
lret
clc
and
lock
in
decb
scas
int
outsb
cld
dec
dec
mov
xchg
out
xorb
pop
jb
hlt
and
push
cmp
inc
push
in
popl
pop
std
dec
mov
andb
and
loop
fldenv
inc
add
test
fstps
aaa
cltd
push
add
sub
jae
enter
xchg
idivb
or
mov
ret
daa
lea
adc
rorl
lock
lock
cmp
lods
divl
pop
js
dec
sub
sub
scas
sub
pushl
add
jb
ret
pop
mov
push
addps
mov
pop
xchg
shll
ja
es
sbb
in
xchg
xchg
jns
movsl
xorb
or
in
dec
jmp
xchg
nop
xchg
mov
fadds
out
or
xor
fiadds
mov
out
xchg
sub
popa
sbbl
mov
call
or
push
js
inc
adc
mov
adc
sahf
adc
push
jnp
js
lret
dec
enter
fldcw
mov
jae
push
push
or
movsl
add
sub
pop
daa
repnz
jmp
mov
or
mov
jmp
dec
cwtl
orl
mov
cs
jbe
pop
jne
cmp
push
ss
test
test
push
rorl
push
xor
sbb
fsubs
je
push
add
stc
or
imul
sbb
test
lret
outsl
push
and
dec
int3
lret
je
dec
sub
lret
xchg
dec
lret
and
nop
int3
jl
je
sbb
push
sahf
shlb
push
sub
stos
push
inc
repz
sahf
enter
lret
sbb
lret
and
mov
ret
push
sahf
aad
sub
shrl
sbb
mov
mov
mov
leave
pop
or
jnp
icebp
and
cmpsl
pop
or
mov
mov
aam
jg
out
sub
pop
les
jl
dec
scas
and
out
mov
adc
cmc
xchg
mov
jo
add
clc
and
lea
je
mov
out
ds
cli
filds
and
hlt
pop
dec
mov
mov
call
mov
bound
in
add
in
mov
cmp
dec
out
push
roll
add
aam
jns
outsl
cmp
add
fists
xchg
fnstsw
inc
inc
das
push
iret
xchg
out
push
sbb
or
push
push
or
push
xor
push
push
adc
xor
je
popf
push
and
or
jmp
xor
and
test
sub
pusha
mov
cltd
add
and
push
sbb
inc
pop
xor
inc
or
sbb
prefetch
or
lods
cli
dec
jbe
stos
and
xor
adc
adc
fucom
mov
dec
mov
jae
push
cmp
dec
inc
in
and
add
dec
lock
ljmp
fs
cmp
xchg
rorb
nop
inc
outsl
out
adc
scas
pop
sub
pop
add
enter
mov
or
sbb
mov
mov
int3
pop
mov
cmp
ja
cmc
js
xchg
je
add
testb
push
insb
loope
bound
dec
xor
jecxz
pop
cmp
mov
mov
out
loope
cmc
push
mov
jo
fmuls
push
add
push
call
mov
add
cmp
push
and
in
add
ja
je
test
or
lahf
aam
out
test
push
in
pop
mov
and
in
sub
jo
iret
and
out
out
dec
fmuls
outsl
dec
push
idiv
jmp
jo
sub
xor
pop
sub
testb
adc
push
or
push
test
dec
lret
notl
sub
ljmp
iret
add
pop
movsb
mov
push
pop
adc
xchg
je
pop
and
cmp
je
loopne
leave
loopne
orb
jg
adc
lcall
mov
lahf
je
push
push
push
lcall
push
das
jg
fstl
test
dec
jne
add
sbb
ficompl
sbb
pop
and
jb
pop
mov
jmp
xchg
bound
pop
push
cmp
imul
push
call
lahf
test
or
jmp
xchg
aas
or
rclb
outsl
push
daa
cmc
xor
mov
push
ret
jne
jg
orl
je
sbb
adc
mov
stos
mov
dec
add
sub
xchg
testl
stc
xor
mov
or
stos
jmp
les
lahf
or
or
jge
xchg
xchg
sti
jecxz
dec
sbb
cli
push
mov
je
lret
stos
cmp
nop
or
ds
xor
and
mov
or
push
sub
out
sbb
or
sub
mov
xor
add
rclb
decb
mov
out
xchg
cwtl
sub
xor
es
ljmp
push
movsl
xchg
sbb
js
lock
aam
outsl
loopne
test
mov
scas
sbb
mov
test
adc
or
in
and
pop
sbb
and
testb
roll
push
cmp
push
inc
daa
mov
jecxz
in
inc
je
popl
add
mov
mov
mov
cld
test
or
fmull
push
sbb
cwtl
push
ljmp
adc
lods
aaa
dec
out
fdivl
mov
cli
inc
inc
jmp
cmp
pop
negl
inc
mov
jnp
sub
cld
out
jp
gs
jge
rcll
ret
test
cmp
das
repnz
pop
sbbb
into
jns
xlat
repnz
ljmp
cmc
out
jp
cmp
fs
ljmp
inc
mov
outsb
lods
gs
adc
xchg
adc
adc
push
and
addr16
sbb
and
arpl
mov
insb
xor
div
pop
mov
popf
in
fmull
lea
add
sub
sub
sbb
arpl
push
mov
inc
or
movsl
loop
push
ss
jo
filds
and
xchg
push
xchg
xchg
mov
pushf
clc
push
orl
fimuls
cmp
sub
aam
cwtl
xor
jb
fstpt
clc
fmuls
lods
shll
lahf
loope
shl
xchg
adc
call
or
fcoms
lods
cmp
scas
cmp
and
push
cs
adc
mov
lods
add
cmp
or
ret
loope
xorl
cltd
cld
push
push
clc
fcmovbe
fs
and
xor
sbb
testb
mov
inc
dec
jl
data16
sub
pushf
jae
jmp
mov
add
add
push
adc
add
add
ds
mov
test
jl
mov
pushf
jmp
jno
sub
inc
stos
addl
mov
sbb
push
xor
inc
leave
subl
in
call
movl
loopne
dec
inc
ds
push
bound
arpl
mov
data16
cmp
mov
into
hlt
push
push
fidivs
dec
jmp
clc
inc
mov
jbe
aas
int3
aaa
mov
jmp
test
sti
repz
testl
cld
ss
mov
iret
call
adc
ds
dec
adc
dec
and
jmp
push
push
je
add
inc
shrb
cld
cmp
push
test
jl
mov
out
xchg
fwait
pop
jbe
xchg
call
add
fcompl
mov
dec
repnz
push
push
push
xchg
fcoml
ret
or
sbb
jno
sub
mov
or
jmp
add
mov
cwtl
adc
push
mov
push
rolb
rorb
cmp
in
jbe
inc
mov
int
push
sbb
mov
or
pop
movl
movsb
or
in
push
sub
mov
data16
std
inc
push
icebp
sti
lret
jge
fistl
ret
out
das
bound
nop
pop
mov
mov
pop
push
push
stos
rclb
fstl
add
cmp
lea
xor
pop
lret
or
mov
mov
pop
in
lahf
cld
insb
push
clc
inc
and
call
outsb
pop
popf
std
lcall
sahf
pushl
stos
call
cmc
ljmp
pop
sub
mov
mov
ljmp
lcall
test
sub
and
and
jmp
xor
sub
mov
mov
mov
sbb
cmpb
xchg
cmp
adc
or
test
mov
jbe
push
mov
add
shr
mov
test
and
je
addr16
or
pop
test
ja
sub
inc
push
jge
push
or
push
test
push
xchg
push
pop
inc
push
fs
jp
subb
cmpsb
pusha
mov
mov
div
lods
mov
push
call
test
inc
xchg
insb
cmp
xchg
pop
cmpsl
jge
jmp
mov
negl
das
push
pop
push
inc
rorb
adc
jne
jl
jge
movsb
popa
loopne
inc
sbb
mov
jmp
xchg
inc
call
xor
hlt
adc
dec
xor
dec
fists
mov
dec
stc
or
jmp
pushf
mov
roll
sub
adc
out
mov
jg
or
sub
jge
push
add
pop
fdivrs
cmp
pop
pop
mov
mov
into
je
scas
movsl
shll
pop
sub
orb
push
adc
push
test
inc
push
push
stc
shrl
push
jbe
or
jle
adcl
bound
and
cli
jg
mov
scas
iret
bound
add
insl
push
daa
call
mov
jo
popf
push
xor
inc
xchg
cwtl
jge
scas
pop
cs
pop
mov
lret
cld
jmp
sahf
dec
cmp
cmp
or
mov
pop
loope
sbb
jo
push
cli
mov
sbb
pop
jmp
test
cmc
and
pop
mov
pop
push
lds
xor
mov
mov
add
push
sub
cmc
mov
aaa
test
ss
pop
push
or
not
lods
int
shr
aad
or
enter
je
inc
adc
sub
add
xchg
stos
mov
inc
cmp
loop
std
mov
inc
cld
ret
mov
inc
in
and
out
movsb
loop
mov
ret
adc
and
shl
aad
scas
mov
sbb
sbb
push
outsb
sbb
sub
sbb
sbb
sbb
sbb
sbb
fs
aam
inc
loopne
loopne
loopne
loopne
mov
jb
lret
xchg
gs
inc
subl
jo
jo
and
or
repz
int
outsb
dec
nop
hlt
jae
dec
js
sbb
jl
int3
dec
and
add
sub
data16
arpl
push
jp
dec
dec
lods
mov
fsubrs
pop
arpl
fcoms
gs
fs
cmp
dec
ja
inc
jno
sub
ss
jae
and
fistpl
popf
loopne
inc
sbb
nop
insb
and
inc
and
ss
inc
sub
sub
mov
sub
sbb
cmp
push
pop
dec
stos
dec
inc
mov
push
ret
pop
hlt
add
inc
imul
lea
inc
adc
ss
sbb
inc
dec
add
cwtl
sbb
mov
dec
pop
sub
or
enter
add
inc
ds
scas
test
push
sub
ss
xchg
sub
cmp
cmp
or
inc
pop
and
inc
or
js
aaa
pop
mov
and
jl
mov
scas
loopne
enter
xchg
adc
mov
and
mov
sbb
das
shlb
and
xchg
aad
xor
push
jmp
inc
or
xor
pushf
push
pop
or
cld
inc
inc
adc
inc
and
sbb
cmc
inc
add
andb
adc
ljmp
xor
xor
popl
orl
or
mov
pop
rdpmc
ret
jo
inc
cltd
cmp
lahf
call
mov
iret
dec
ror
sub
test
test
adc
inc
xor
sbb
les
xor
rorb
mov
pop
jns
sbb
dec
ret
push
xor
push
cmp
inc
add
or
dec
and
pop
pop
jg
gs
or
mov
cmp
add
mov
and
je
add
rorl
ret
mov
adc
push
dec
fs
js
jl
mov
mov
or
pushf
and
nop
enter
int3
push
mov
xorb
sub
sub
push
sub
mov
in
sahf
aam
xchg
fmuls
call
pop
out
xchg
or
gs
lods
lea
mov
mov
pushf
pop
insb
push
xchg
inc
jo
loope
fcompl
jo
shl
mov
orb
xchg
adc
add
or
sbb
add
pop
jb
mov
rol
add
repnz
fldenv
je
call
shll
or
rclb
sub
jg
or
je
and
add
cmp
stos
xchg
sub
mov
jg
daa
adc
sub
jne
mov
xor
push
iret
mov
xor
or
cmp
pop
mov
testl
xchg
push
mov
push
mov
je
push
xchg
dec
adc
pop
ret
jmp
aad
aad
push
xchg
clc
mov
sub
nop
dec
xchg
in
xor
jmp
dec
mov
add
je
cmp
and
xor
pop
dec
call
in
add
xlat
fs
mov
or
in
sub
aam
jb
sbb
cmp
adc
mov
test
data16
add
sbb
lcall
adc
xchg
mov
les
outsb
mov
ja
clc
cmpsl
jb
xlat
enter
enter
aad
mov
negb
push
xor
call
andl
ficoms
loopne
mov
cwtl
xor
dec
xchg
testb
sub
inc
sub
xchg
mov
and
nop
in
mov
jg
mov
movb
adc
mov
cmp
cmpsl
cmp
cwtl
cmp
mov
ret
adc
mov
pop
sti
inc
sub
adc
cmp
cmp
jmp
testl
in
unpckhps
mov
cmp
jg
mov
cmp
sbb
aad
mov
fnstcw
and
rol
cmp
or
mov
or
rcrb
pop
push
les
xchg
ret
sbb
jae,pt
repz
jg
mov
push
cvtps2pd
dec
nop
jo
jmp
jno
imul
sti
call
push
fidivs
test
ljmp
push
push
call
jmp
xchg
inc
adc
popf
mov
mov
imul
not
scas
pushf
jmp
xchg
aad
pop
jg
mov
fdivr
out
cmp
shll
or
add
push
mov
call
fbld
pop
mov
pop
xchg
xorl
mov
cmpl
jnp
ret
lods
push
xlat
int
and
sbb
push
rol
xor
mov
adc
xchg
sub
pop
xchg
cmp
dec
xor
in
mov
jle
sub
in
aam
dec
icebp
jmp
add
ss
test
adc
push
xchg
and
call
scas
aad
jb
sub
or
pop
dec
pop
adc
xor
push
xor
mov
sbb
outsl
loope
or
add
outsb
scas
pop
push
push
out
imul
sub
adc
add
adc
push
cmp
adc
shll
jl
hlt
jmp
je
stos
mov
adc
out
sahf
lret
fists
out
dec
adc
je
inc
je
jne
testb
push
jmp
mov
test
mov
lea
pop
add
fadds
out
out
sub
xorl
xor
std
outsl
ja
xor
push
push
gs
and
mov
stos
lods
scas
aad
dec
mov
add
data16
std
jg
sub
movsb
dec
hlt
test
xor
sbb
fdivrl
and
jbe
or
divl
xchg
fcomp
cmp
scas
and
shll
add
pop
dec
cld
or
adc
and
mov
idivl
or
push
fwait
cmpb
lahf
sarb
or
test
imul
shll
adc
cwtl
popa
mov
adc
dec
into
cmpl
mov
pop
push
dec
jne
mov
sub
lahf
push
push
push
push
mov
xor
or
mov
jl
add
inc
inc
add
clc
insb
jne
push
xchg
fwait
lahf
and
nop
xchg
adc
mov
andl
hlt
in
push
stos
popf
adc
mov
and
lock
fidivs
not
jp
pop
push
adc
popf
push
and
mov
sbb
push
adc
lods
mov
sbb
dec
test
push
or
imul
lret
dec
mov
pop
gs
jo
inc
fistpll
lock
sub
mov
lea
lea
or
mov
jne
push
or
and
xlat
arpl
ljmp
pop
aaa
scas
sub
mov
xor
jo
pop
pop
sti
arpl
pushf
enter
inc
or
push
inc
push
jb
sub
mov
ja
dec
cmpb
sub
pop
hlt
xor
pop
push
pop
xchg
les
jl
push
jne
mov
cltd
andb
jmp
outsb
ljmp
adc
adc
jecxz
clc
rcll
incl
pop
dec
dec
sub
sub
neg
stos
sarl
shr
mov
push
sbb
xor
dec
jb
gs
xchg
out
jbe
fstps
xchg
sbb
leave
sbb
js
outsl
stos
pop
inc
push
clc
fcompl
sub
or
sub
xor
sbb
sbb
ljmp
es
enter
hlt
out
movsb
cmpsl
hlt
stc
std
in
stc
cmc
and
mov
push
push
xchg
and
dec
movsl
je
push
jne
fsubr
or
xor
or
mov
ss
adc
and
mov
das
movsl
lods
add
xorl
mov
rcrl
jmp
cs
sub
pusha
cmp
adc
lock
pop
xchg
js
cmp
push
xchg
xchg
mov
dec
ljmp
sbb
mov
inc
and
inc
pusha
jnp
mov
dec
loopne
insb
pop
in
mov
mov
push
push
dec
lds
aaa
pop
xchg
push
add
sub
sarl
cmpsb
inc
xor
add
or
mov
and
xchg
sbb
cld
clc
push
xchg
pop
jg
mov
and
cwtl
jecxz
mov
sarl
daa
cmp
cmc
mov
hlt
aad
lret
out
popa
sti
push
rcr
cmp
mov
cmc
divb
sub
pop
mov
pop
stos
and
mulb
imul
repz
repz
jmp
fldcw
sub
aam
mov
lock
inc
pop
das
stos
or
pop
stc
xchg
add
je
stos
dec
clc
adc
popf
inc
and
mov
mov
sarl
stc
xor
inc
ret
or
adcb
add
hlt
frstor
icebp
idivl
sub
push
test
jmp
mov
inc
clc
push
cmp
dec
ja
xor
sbb
das
cvtdq2ps
scas
xor
out
negl
xor
sbb
mov
cli
push
aad
xor
orl
mov
into
cmpsl
ret
fdivr
cwtl
lods
inc
jmp
ds
sub
or
push
xchg
push
jmp
cld
inc
in
cld
inc
movsb
mov
sbb
and
outsb
jmp
jge
add
dec
int3
inc
inc
cmp
leave
imul
fistpl
jl
cmp
xchg
push
je
sti
lret
or
hlt
or
mov
jns
sbb
mov
cli
imul
xor
fs
pop
push
test
pushl
sbb
inc
sbb
cmpsb
mov
fstl
lret
ss
sub
mov
std
jmp
in
int3
pushf
jge
adc
movsb
movsl
or
mov
jmp
in
pop
dec
stos
lret
into
jp
mov
dec
aaa
cmp
je
popf
or
inc
and
inc
adc
out
mov
adc
movsl
dec
push
cmp
mov
dec
out
out
mov
jl
icebp
inc
lds
and
lods
stos
daa
inc
ja
inc
inc
adc
cmp
pop
lds
or
and
fstps
clc
bswap
and
fsts
fnstenv
das
orl
adc
pop
adc
daa
call
mov
lods
mov
or
lods
mov
cmpsb
daa
lcall
scas
pop
push
and
fbstp
outsl
hlt
sbb
iret
and
shll
fdivl
pop
adc
lcall
repnz
das
add
movl
pop
dec
dec
dec
out
xchg
cmp
pop
inc
sbb
in
cmp
xor
test
inc
popa
dec
repz
jl
sub
mov
mov
mov
add
jmp
ss
aas
leave
add
xor
sbbl
call
gs
xor
and
pop
movsl
sub
loope
adc
mov
mov
imul
stos
dec
pop
cmp
mov
fucomi
lahf
cmp
sub
adc
add
push
inc
and
mov
sbbl
enter
and
adc
mov
js
ret
aas
rol
sub
dec
sahf
push
sbb
or
jmp
jle
and
xchg
ret
iret
cmp
cld
orb
jae
sahf
jl
cmp
clc
pop
adc
mov
xchg
sbb
repnz
dec
inc
jo
push
clc
or
and
adc
mov
jle
lds
or
sub
xlat
xor
ffreep
fs
push
inc
sub
push
inc
es
iret
push
push
adc
iret
imul
stos
sub
pop
pop
pop
test
leave
xchg
mov
test
push
scas
aaa
fldl
inc
cld
sub
cli
fwait
adc
jg
lods
mov
push
lret
sti
dec
pop
es
sbb
adc
xor
push
stos
mov
pop
sbb
mov
clc
mov
or
sub
cld
mov
lcall
call
and
add
jo
divl
pop
xchg
lret
mov
repz
pop
cmp
and
xchg
jmp
cmpl
xchg
jge
std
cmp
mov
test
inc
sbb
jno
or
or
cmp
and
inc
jno
std
bound
or
mov
jne
icebp
cwtl
and
cmp
push
xorb
inc
aas
jl
pop
push
lock
push
pop
mov
dec
in
out
es
lds
repz
jmp
out
cwtl
xchg
push
mov
mov
pop
sti
cmpsb
push
pop
mov
adc
in
push
icebp
mov
push
sarb
xchg
dec
stc
mov
inc
sbb
pop
mov
cwtl
xor
jo
sbb
dec
and
jo
lret
test
inc
sub
stos
mov
stos
loop
or
test
cmpsb
push
sbb
push
ljmp
andb
inc
or
movl
pop
and
and
fsubs
data16
movsl
bextr
jmp
dec
sbb
ljmp
jmp
adc
cmp
and
ret
pop
or
test
push
out
or
and
cmp
imul
xchg
jno
push
or
pop
movb
fwait
mov
orl
xchg
iret
test
dec
sti
ficoms
mov
or
pop
insb
cmp
xchg
mov
jae,pt
das
jmp
pop
ljmp
insb
mov
int3
cmp
cmp
push
xchg
stos
sub
dec
lods
aaa
test
jnp
mov
xchg
xchg
popf
and
or
mov
sarl
loopne
mov
add
add
or
or
or
push
add
shr
into
dec
out
addps
nop
xchg
sbb
jl
mov
sub
daa
jl
scas
jbe
inc
adc
lahf
sub
stos
cli
jne
xor
and
dec
jo
push
pop
push
dec
inc
add
js
inc
adc
sbbl
inc
pop
addl
and
push
jp
pushf
ret
dec
fcoml
gs
fldenv
imul
dec
add
push
sub
sub
int3
test
and
sub
pop
or
into
gs
inc
dec
out
inc
mov
lds
push
scas
lea
mov
dec
xchg
mov
sub
sub
inc
mov
push
lock
cld
xchg
lods
jecxz
and
adc
cltd
dec
push
or
mov
xlat
movsb
sbb
jecxz
daa
mov
std
inc
negl
sbb
mov
inc
or
cltd
mov
inc
or
jne,pn
or
sub
idiv
push
jmp
out
cmpsb
jmp
fmull
pop
shlb
or
nop
fs
cmp
pop
ds
repnz
push
dec
js
clc
dec
cmp
pop
dec
pop
push
push
add
sbb
sahf
and
cld
imul
pop
sbb
loope
cltd
idivl
mov
mov
in
mov
hlt
pop
clc
int
xor
cs
ret
dec
sub
jmp
dec
imul
pop
test
pop
out
outsl
mov
mov
push
adc
xor
mov
dec
mov
fidivl
subb
fimuls
pop
adc
daa
shll
pop
out
cmc
sbb
fdivs
pop
or
jl
mov
das
rep
push
sbb
outsl
mov
dec
push
lds
add
inc
sub
outsl
subl
movsb
frstor
cmp
xlat
sar
sub
ret
hlt
addb
sub
adc
sub
popa
je
cmp
adc
rcll
lret
and
sub
orb
mov
pop
xchg
jne
shlb
je
xchg
mov
in
fwait
xchg
stos
add
cmp
pop
bound
jmp
xor
jmp
fidivl
repnz
inc
rcll
iret
out
and
sub
sub
push
lea
xor
push
sbb
or
lds
pushf
add
stc
adc
stos
add
fldl
mov
jmp
mov
or
xchg
rorb
push
rorb
xchg
mov
adc
mov
pushf
cwtl
sub
or
pop
push
aaa
xchg
mov
push
shr
dec
test
ss
loope
popa
aam
xor
jle
push
or
sub
xor
or
adc
cmp
mov
stos
sbb
movsl
mov
or
xchg
stos
gs
jecxz
fsts
fsubrl
cld
adc
jg
xlat
stos
ss
xlat
orl
pop
xor
mov
inc
dec
lcall
lods
cmpsl
sbb
ficoml
fldt
mov
nop
push
into
sti
mov
jmp
sarb
cs
stc
jne
push
push
dec
aam
cmp
andl
or
sub
adc
repz
stos
dec
std
fmuls
jnp
xchg
cmp
xchg
pop
clc
int3
mov
sub
pop
dec
cmp
push
xor
cmpsb
bound
into
cltd
xor
sbb
mov
addb
jb
fimuls
fsubrs
add
sub
mov
pop
sbb
rolb
popf
divl
movsb
xchg
cltd
rcrl
call
jae
jle
xchg
push
sbb
mov
mov
loope
cmpsb
adc
pop
sbb
pop
pop
outsl
leave
xchg
je
call
dec
or
sub
jle
nop
xor
or
ljmp
mov
nop
fldl
testl
push
sti
cmp
jle
test
sbb
sbb
loope
adc
sub
sub
fsub
push
mov
xor
mov
enter
test
shrb
fs
and
loope
clc
loope
cli
daa
mov
and
shl
lret
nop
mov
mov
and
mov
sbb
int3
int3
sbb
dec
pop
les
clc
jns
das
test
mov
xchg
sbb
mov
daa
pop
sbb
dec
push
dec
cmp
push
decl
xor
movsb
das
pushl
xchg
gs
xchg
enter
lahf
shrl
lods
es
push
enter
cmpsb
enter
push
fildll
inc
and
push
pop
adc
mov
xor
sub
or
pop
push
or
outsb
adc
dec
push
adc
imul
dec
mov
pusha
mov
or
cmpl
repz
push
sbb
xchg
fsubr
pop
push
sbb
mov
out
gs
mov
push
adc
mov
and
andb
sbbb
xor
notb
out
and
aam
call
sub
rcrb
int
imul
lds
xchg
test
mov
out
dec
cld
fmul
es
mov
push
mov
fldcw
mov
shr
or
xchg
mov
outsl
jb
xchg
dec
daa
movsb
lcall
neg
or
addr16
xorl
jg
xchg
cmpsl
mov
mov
movsl
les
mov
and
fs
loopne
mov
mov
stos
mov
rcl
and
inc
leave
mov
jmp
lods
negl
cmp
lds
sbb
test
cmp
xchg
push
inc
sub
xor
inc
scas
enter
notl
movsl
cmp
cmp
lret
add
push
push
push
push
addl
jl
ljmp
leave
lock
xchg
les
je
subl
add
cmp
jge
add
fs
dec
call
aam
xor
mov
test
mov
push
cmp
mov
xchg
xchg
mov
or
mov
add
cli
loopne
and
sti
adc
mov
outsb
xor
xor
ds
mov
cmc
lcall
cmpl
fmull
and
dec
or
mov
adc
imul
nop
pop
push
pop
push
std
insb
push
imul
and
repz
vphsubbw
ljmp
je
imul
cwtl
sti
mov
cmpsl
inc
jge
push
std
leave
jle
mov
je
incb
mov
aas
in
mov
pop
xorb
add
loope
cmp
xchg
rcrl
or
push
jns
adc
add
and
out
pop
jno
call
inc
std
or
movsb
fisubs
insl
pop
leave
or
fbld
mov
in
ret
cmp
call
sub
loop
xor
test
shrl
insl
das
push
pop
inc
fadds
test
push
mov
aad
or
or
pop
hlt
fs
lea
xchg
ror
or
sub
xlat
sub
out
cmpsl
notb
repz
sbb
xchg
test
sub
repz
push
mov
add
daa
test
mov
push
or
mov
mov
aad
mov
push
mov
ret
jbe
pop
dec
and
nop
movsb
lcall
stos
dec
std
or
mov
or
adc
mov
adc
into
neg
ret
pop
add
sub
aas
or
adc
sahf
rorl
mov
nop
or
addr16
mov
jge
ss
lcall
data16
dec
rcll
ds
cmp
jo
jnp
rorl
dec
inc
jmp
ret
and
cwtl
cs
add
dec
dec
stos
push
fdiv
inc
sub
clc
cmpb
inc
in
push
dec
mov
mov
push
lods
fmul
outsl
pop
sbb
mov
fs
push
enter
mov
mov
mov
xor
push
repnz
adc
je
cmp
pop
or
xchg
ja
or
dec
push
xchg
push
cmc
fstpl
jmp
jmp
push
xchg
in
clc
push
push
mov
mov
xor
sbb
jns
add
push
push
inc
adcb
lret
cmp
jns
jbe
jmp
xchg
xor
xchg
dec
sbb
stos
insb
sbb
push
push
jno
outsl
xor
sub
out
add
adc
data16
dec
shlb
add
movsb
into
sub
lcall
jbe
ficomps
scas
test
mov
sbb
cld
fwait
icebp
std
sbb
pop
dec
je
pop
pop
push
sbb
shrl
add
adc
inc
sbb
cs
jae
ss
lock
sbb
in
sub
lcall
and
cmp
sahf
out
inc
jo
adc
loope
shll
out
lret
jecxz
clc
movsl
cli
sti
out
mov
and
ds
dec
ja
sbb
aad
out
inc
ljmp
mov
xor
out
and
frstpm(287
enter
gs
adc
mov
mov
xchg
cli
or
loopne
dec
dec
xchg
inc
adc
jno
je
cmpl
inc
cmp
push
sub
cmpl
or
xchg
jge
jb
dec
popf
inc
shrl
dec
pop
pop
stc
bound
push
sub
data16
jg
push
in
add
test
jne
push
mov
add
mov
bound
or
jne
int
jno
inc
adc
rorl
lea
push
xchg
mov
mov
or
push
lds
cwtl
cmp
leave
lret
std
loop
push
push
outsl
xor
sbb
clc
sbb
test
sarb
fs
mov
sub
adc
inc
jmp
imul
mov
leave
push
bound
dec
shlb
fsubrl
cmp
negb
test
ret
jge
cltd
adc
je
out
loop
movb
sub
or
push
sub
sub
cmp
fcomip
fistpl
xchg
xchg
adc
and
xchg
stos
enter
push
dec
sti
add
mov
shrb
ret
mov
sbb
jp
clc
imul
sti
push
jne
lea
sti
lcall
scas
lock
dec
stc
aam
jg
decb
push
jne
mov
arpl
inc
or
push
sub
jmp
mov
ret
add
pop
and
jmp
push
xchg
clc
sbb
das
daa
mov
mov
cmpsl
mov
mov
adc
in
sub
out
pop
xlat
sbb
or
cmc
shrb
ss
or
fmull
adc
call
xchg
jns
iret
daa
jbe
push
cmc
push
loopne
add
outsb
push
or
jge
mov
das
sub
movsb
xchg
pop
dec
mov
mulw
outsb
mov
and
add
insl
push
add
loopne
dec
fbld
push
ds
mov
shrl
jae
inc
mov
add
ret
push
adc
leave
add
sub
and
push
dec
xchg
adc
std
mov
aaa
shrl
sbb
adc
mov
das
adc
jo
mov
cwtl
andb
jns
sub
iret
test
mov
push
push
insl
in
pop
jbe
jp
sbb
loop
adc
add
je
rcr
pop
js
daa
dec
movsb
adc
adc
cmp
mov
sub
jae
sbb
mov
fwait
decl
push
dec
push
inc
push
push
mov
jp
xchg
pop
jnp
inc
cmpsl
int3
gs
and
cmp
setge
xchg
fsubrl
jmp
mov
push
xchg
dec
cmp
xor
or
sbb
sbb
clc
das
addb
orb
lods
mov
pop
dec
clc
ljmp
scas
push
popl
cwtl
nop
add
jmp
rcrb
pop
push
sub
ss
or
call
mov
push
mov
test
hlt
xchg
push
push
rclb
or
paddd
call
mov
push
cmp
mov
loopne
mov
mov
jg
sbb
ss
and
mov
dec
and
mov
inc
and
mov
fnstcw
mov
push
xchg
scas
lcall
dec
mov
cwtl
and
jnp
xchg
aad
bndldx
sbb
adc
sub
sbb
shl
in
add
adc
test
pusha
mov
pop
popf
push
mov
sub
cmp
cld
sbb
jne
incl
imul
xor
or
jmp
test
adc
das
cmp
pushf
bound
adc
jbe
or
jmp
pop
dec
sbb
adc
popa
inc
arpl
rcr
decb
sub
iret
and
sub
scas
adc
daa
or
inc
decb
stos
call
adc
scas
or
add
adc
popf
movsl
jl
lret
push
xchg
xor
dec
add
and
pop
cmp
sub
adc
sbb
loopne
lea
xchg
call
pop
jl
or
xchg
sbb
or
and
adc
ljmp
aas
mov
rorl
pop
pop
daa
ret
add
mov
orl
or
jle
adc
add
add
pop
push
xor
cld
cmp
lock
mov
adc
mov
pop
das
jmp
cli
sub
mov
fucomi
and
clc
xchg
xor
leave
pop
push
ljmp
xchg
jg
pop
mov
add
push
in
mov
xchg
mov
dec
dec
arpl
popa
xchg
lods
dec
push
sub
dec
data16
stos
xchg
jle
cmpsb
cmp
xor
push
or
adc
sti
inc
add
lea
cmp
cmp
sti
sbb
push
dec
xchg
adc
clc
sub
push
adc
xchg
push
out
gs
rolb
fs
xor
inc
or
push
push
push
adc
lods
stc
pop
stos
sub
or
out
dec
mov
stos
rorl
cmp
jl
or
add
cmp
mov
inc
push
and
cmp
dec
dec
movl
adc
scas
rcll
push
lock
push
push
push
or
or
int
movsb
inc
mov
mov
adc
dec
mov
aad
rdtsc
lea
jmp
inc
xchg
fwait
push
push
cli
adc
dec
mov
push
dec
inc
sbb
mov
push
adc
in
jne
mov
and
push
mov
sub
ficompl
int3
sub
sbb
cld
popf
loop
jmp
sub
inc
push
sub
ja
push
xor
mov
stos
push
inc
mov
jge
inc
or
test
ds
pop
add
mov
iret
out
xor
jmp
movsb
pop
loop
iret
push
xchg
adc
cli
dec
leave
pop
idivl
das
loop
adcb
sub
mov
subb
addr16
push
cmp
jl
lock
pop
jge
int3
mov
sub
stc
hlt
inc
mov
mov
xlat
ret
leave
inc
push
dec
inc
es
sbb
aam
sbb
push
mov
mov
rcrl
arpl
hlt
push
xchg
les
loopne
test
ljmp
cmp
pushf
xchg
add
push
xchg
pop
mov
sbb
push
adc
cmp
or
mov
daa
daa
jmp
jns
or
sbb
sti
inc
add
cmc
std
xchg
mov
and
jge
cmp
data16
aaa
mov
and
pop
mov
in
dec
insl
push
pop
jp
push
cmp
divl
dec
andb
mov
dec
add
dec
mov
sub
fsubr
push
aaa
call
incb
sbb
std
add
dec
je
popf
push
and
push
push
lret
push
sub
xor
ror
flds
adc
sbb
mov
movsb
lock
jno
mov
xchg
mov
frstor
shll
xor
xchg
nop
dec
or
mov
cmpsl
sub
lods
int
fidivs
jl
sub
stos
add
pop
cmp
jge
enter
xor
lods
int3
cmp
sbb
dec
cmp
fldcw
adc
lock
adc
adc
jnp
ret
sub
adc
das
test
cmp
xchg
aam
bound
or
mov
scas
xor
int3
adc
dec
frstor
push
xor
inc
push
iret
js
movsl
test
push
insb
cmp
adc
mov
and
xlat
es
data16
mov
dec
test
lcall
leave
or
xor
xlat
out
jmp
rcl
test
push
fucomp
cmpb
bound
scas
shrb
pop
aam
out
sub
in
nop
or
es
xchg
call
sub
jmp
dec
adc
dec
cmpsl
inc
stos
xor
jl
adc
or
ja
repz
xchg
xchg
popf
push
and
dec
test
xchg
pop
or
cwtd
rclb
push
imul
pop
push
xchg
jnp
call
std
pop
jmp
jmp
int
pop
inc
push
pop
rcrb
xchg
or
incl
gs
sub
rolb
lds
out
cwtl
scas
call
les
movsl
jle
repnz
xor
test
mov
ja
gs
sahf
inc
add
xor
mov
mov
loop
mov
fnstenv
push
push
lahf
pop
pop
ret
adc
jle
gs
clc
shl
push
sbb
imul
sahf
ret
jmp
aad
imulb
inc
lret
hlt
xchg
insl
sub
lods
adcl
sahf
loope,pn
movsb
mov
xchg
pop
jle
push
push
adc
and
jo
cld
xchg
jae
scas
and
xor
decl
push
sbb
xchg
cltd
lock
xchg
sti
jne
rcl
or
imul
ljmp
ljmp
pop
adc
add
lret
adc
mov
cmp
mov
bound
pusha
faddl
push
pop
or
sbb
push
jae
jge
aas
pop
loopne
imul
push
movsb
mov
clc
popa
pop
xor
sub
enter
push
xchg
fistps
mov
es
lahf
or
xor
fistl
mov
or
into
iret
mov
mov
scas
je
test
test
ucomiss
push
cmc
repz
or
jmp
shll
dec
shr
pop
ljmp
out
int3
fwait
data16
or
int3
push
aam
scas
mov
add
mov
in
cld
dec
mov
cli
aam
dec
sti
push
addb
aam
mov
xchg
adc
loop
aaa
or
or
push
mov
and
push
call
es
fsubs
mov
arpl
mov
test
cmp
sbb
inc
xlat
sub
in
in
mov
or
xchg
dec
inc
sbb
lcall
pop
mov
mov
mov
mov
call
divl
push
or
and
mov
fs
loopne
sbb
dec
in
jle
jne
cmc
fstps
xor
or
jmp
sub
gs
aad
jb
ds
sub
lcall
shrb
sbb
dec
mov
ljmp
push
and
imul
add
lods
sub
or
xchg
inc
or
push
mov
data16
roll
mov
out
mov
fwait
xor
mov
decl
jne
push
xchg
pop
inc
jb
enter
shrl
ljmp
xor
pop
fidivrl
cwtl
inc
add
mov
or
in
jg
adc
add
or
out
dec
lock
loopne
mov
roll
adc
push
sub
test
inc
pop
and
push
fwait
je
pop
xchg
aas
aam
push
xchg
dec
fldt
int
movsl
imul
lods
jno
jmp
sbb
mov
pop
xor
popa
push
lahf
pop
fsubp
jmp
dec
push
cmc
ret
xchg
arpl
sub
push
xchg
test
ret
lret
or
adc
jmp
scas
lock
cmp
das
sti
stos
pop
or
sub
inc
and
enter
or
inc
scas
jnp
adc
clc
testb
xor
mov
movsb
scas
or
hlt
je
and
imul
push
insl
aaa
sub
xchg
popf
dec
push
jae
or
sbb
mov
iret
loop
pop
and
push
push
stos
cltd
lret
and
dec
or
scas
xor
repnz
icebp
or
adc
ret
pop
call
dec
jp
and
inc
aas
and
push
sub
inc
pop
ret
or
in
cwtl
adc
lods
and
in
movsb
sub
mov
imul
push
jb
inc
pop
movsb
cmp
test
mov
sahf
or
popa
pushf
adc
xor
sti
les
je
mov
pop
pop
pop
jne
xchg
adc
push
shl
add
push
ja
cli
add
cs
jle
in
push
dec
adcb
cli
imul
jge
pop
pop
adc
ret
xor
jl,pt
mov
es
push
inc
pop
mov
dec
outsb
push
int3
or
jmp
cmc
adc
leave
xor
popl
pop
or
pop
dec
jb
mov
shlb
fcoml
mov
iret
in
sub
push
pop
adc
cmp
call
dec
sub
mov
les
jmp
not
push
jns
lock
mov
fidivs
daa
fimuls
lret
arpl
pop
xchg
and
or
xlat
arpl
or
adc
ret
leave
dec
addr16
pop
xchg
push
insb
vxorps
outsl
hlt
xchg
out
pop
sbb
or
popa
mov
xor
aas
cmp
or
mov
pop
inc
pop
dec
cmpl
in
and
jo
jns
fs
stos
adc
xor
shlb
ja
sbb
push
or
iret
pop
mov
rcrb
ljmp
aam
jmp
cmpsb
call
or
xlat
mov
leave
pop
xor
push
nop
mov
movsb
enter
test
cmpl
cld
cmpsb
and
push
setne
sbb
or
fs
push
outsl
dec
and
out
stos
mov
inc
or
hlt
push
push
cli
call
xchg
pop
int3
lods
pushf
mov
ja
cld
call
mov
xchg
jmp
or
cmp
js
push
add
jne
mov
mov
sbb
loope
add
cmpl
lcall
incb
push
xor
icebp
jae
inc
push
shl
dec
lock
in
scas
int
sub
and
inc
rol
shrb
sub
sub
sbbl
ret
mov
push
inc
je
inc
ficoml
fcoms
adc
test
sahf
add
pop
jle
notl
jle
aaa
inc
mov
cmpsb
cmp
dec
adc
mov
xor
shlb
push
pop
push
xchg
ret
je
jae
pop
ja
mov
loope
mov
stc
xorb
mov
and
xor
enter
adc
inc
sbb
or
loopne
or
icebp
mov
and
inc
mov
addr16
fdiv
scas
or
into
iret
in
xor
test
into
call
adc
mov
test
mov
pop
lahf
fimuls
adc
adc
ficoms
mov
pop
lds
or
and
jmp
adc
and
mov
adc
jno
mov
jne
mov
xchg
test
iret
in
jbe
dec
daa
movsl
adc
pop
outsl
mov
testl
xchg
push
adc
mov
popf
add
mov
test
or
js
add
scas
aad
ret
adc
stos
mov
sub
adc
test
mov
notb
sahf
xlat
jmp
push
sti
adc
test
add
xor
adc
jbe
pop
push
fidivs
lret
cltd
sbb
and
je
pop
mov
sbb
imul
pop
push
movsb
fmuls
adc
mov
jle
leave
lret
dec
test
xor
cmp
call
add
jmp
adc
xchg
shlb
push
xorl
or
dec
ja
xchg
dec
ret
mov
adc
cwtl
pusha
sbb
sub
cmpsl
adc
xchg
icebp
xchg
mov
mov
stc
sbbl
icebp
cmp
movsb
js
add
sbb
sahf
inc
sub
add
and
adc
mov
int3
and
jge
cli
jg
xor
inc
xor
xor
adcl
sti
dec
int3
call
xchg
outsb
aad
stos
int3
xor
push
enter
jb
push
sbb
ljmp
xor
rorl
or
aad
icebp
dec
shrb
push
cmp
mov
and
sbb
imul
movsb
cmp
push
fwait
sub
or
addb
xor
and
push
or
cltd
call
pop
js
fbld
mov
sbb
sub
sbb
mov
loop
push
push
mov
or
lods
mov
sub
add
xor
mov
mov
or
arpl
push
lds
inc
adcl
or
lods
push
js
js
fwait
add
add
add
loope
scas
and
les
pop
xchg
add
loopne
sub
lahf
adc
pop
jmp
aad
push
mov
jg
sub
movzbw
cmp
cli
cwtl
sbb
mov
push
orl
mov
loopne
and
gs
xor
mov
lods
or
mov
cmc
int3
shlb
mov
imul
push
lods
imul
mov
jne
xor
ljmp
sub
xor
or
sbb
mov
dec
xor
scas
in
popa
pop
incl
xor
inc
repnz
pop
lea
mov
rcrb
or
shl
shll
push
add
mov
jmp
sbb
jle
and
cmp
xchg
sbb
sbb
sub
mov
cmp
out
hlt
pop
mov
pop
xor
inc
inc
in
inc
mov
out
stos
push
fwait
ds
adc
sub
push
xchg
jg
push
jge
test
mov
sar
loopne
stos
jecxz
test
jbe
icebp
add
jl
mov
mov
inc
mov
loope
clc
bnd
adc
jl
data16
or
lea
std
pcmpeqw
orl
pop
mov
xchg
mov
das
bound
jne
incb
dec
jg
mov
jmp
sub
daa
fsubs
or
js
and
test
repnz
cmc
call
fmul
jmp
ret
sub
mov
and
out
push
je
addr16
dec
addl
shr
xchg
arpl
xlat
loopne
cld
lods
inc
cs
inc
or
jbe
sbb
mov
add
sbb
push
orl
push
push
lods
in
std
adc
push
vcvtss2si
adc
repnz
cld
pop
movsl
fnsave
push
or
mov
xchg
fsubs
jne
push
cli
xlat
mov
cmp
dec
or
sbb
xchg
push
pop
and
rorl
incb
das
jb
mov
sub
sub
or
jecxz
mov
popa
lret
xor
call
nop
sub
adc
jbe
mov
mov
dec
and
and
and
xlat
mov
xchg
inc
pop
inc
add
xchg
inc
int3
aad
enter
aam
sahf
stos
das
rclb
bnd
mov
jne
dec
pop
and
pop
ljmp
es
dec
push
out
mov
xchg
rorb
cmp
cltd
inc
jno
or
mov
mov
add
pop
pop
out
inc
mov
fildll
in
fcmovne
rcll
dec
repz
push
dec
je
int3
subl
loop
jle
fs
mov
dec
mov
xor
fstps
orl
out
scas
dec
mov
mov
sub
scas
xor
loopne
jae
adc
mov
push
mov
mov
sbb
push
jl
decb
mov
mov
test
adc
in
lret
cltd
and
mov
je
sub
push
adc
popa
adc
cmpl
push
pop
mov
jne
or
push
stc
mov
das
bound
adc
jae
xchg
xor
jnp
push
pop
mov
mov
popf
cmp
aam
out
and
ljmp
lods
mov
je
mov
pop
mov
sub
das
push
fprem1
inc
cmp
and
jecxz
mov
jmp
fisttps
mov
or
adc
sub
divl
add
flds
pop
imul
push
push
sbb
rorl
xor
pop
cmp
inc
inc
ds
dec
xor
xacquire
in
and
addl
pop
clc
cmp
mov
rcrb
int3
mov
dec
popa
daa
sbb
popf
shll
stos
mov
mov
inc
push
push
xor
test
call
xor
in
ret
pushf
rorl
add
andl
mov
mov
lret
loopne
and
jae
hlt
xor
ret
mov
insb
hlt
jbe
in
jmp
push
or
iret
rcl
xchg
sub
dec
mov
sub
push
insb
and
mov
test
add
jne
and
loope
jg
inc
cmp
mov
outsl
cmp
or
push
mov
repz
jbe
test
movsb
mov
mov
jns
sti
or
xorb
shrl
cltd
clc
out
cwtl
add
xchg
cli
xchg
stos
cltd
fprem1
cmp
sbb
inc
test
scas
jecxz
adc
push
or
and
mov
call
xchg
adc
dec
clc
in
adc
subl
cmp
sbb
mov
pop
and
int
jae
and
jbe
inc
daa
decb
jnp
lea
shrb
inc
adc
cmp
adc
mov
inc
fs
ret
js
push
mov
into
rolb
jge
mov
sti
adc
leave
aaa
test
jg
cld
and
lds
jp
inc
sbb
xor
sbb
mov
add
lods
stos
mov
jno
shrl
mov
add
call
jns
sub
sahf
shll
sbb
nop
daa
sbb
push
xchg
or
icebp
sub
testb
outsb
push
popf
xchg
xor
and
pop
xchg
push
and
and
scas
push
int
cltd
cmp
adc
scas
in
or
sub
cmpsl
add
roll
adc
xchg
fnsave
push
clc
or
xchg
mov
mov
xchg
scas
das
inc
daa
and
stos
pop
popa
test
nop
or
xor
push
clc
xchg
cld
mov
jmp
std
loope
jne
or
test
popa
imul
push
mov
or
push
aam
dec
sti
sub
dec
push
pop
sbb
js
xor
xor
shlb
jne
stos
stos
sbb
dec
and
lea
cmp
mov
imul
cli
in
aad
int
sbb
cmp
dec
push
adc
mov
and
cmp
inc
jne
mov
xchg
sbb
repnz
das
adc
addr16
lods
add
inc
aaa
cmp
ret
or
sub
and
dec
jmp
movsb
or
sbb
andl
rol
sbb
and
sbb
fildl
mov
pop
lock
adc
inc
xchg
dec
lds
adc
and
mov
clc
mov
call
ljmp
call
daa
push
fcmovnbe
mov
ljmp
js
jns
adc
cmp
aas
pusha
les
aaa
xor
or
movsb
dec
inc
mov
lahf
inc
mov
mov
add
rorb
jns
mov
cmp
and
repz
add
iret
sub
pushl
jle
pop
sub
inc
adc
mov
pop
movsl
loope
insb
cs
sbb
pcmpgtd
xor
ss
mov
inc
sbb
lret
out
fmuls
mov
hlt
mov
lods
in
mov
push
jne
adc
or
sbb
test
inc
test
add
sub
or
sti
out
jle
pop
sub
cmovno
enter
in
test
popf
outsb
jne
mov
repnz
enter
jl
ret
lock
pop
in
cmp
inc
sub
in
inc
xchg
movsl
shrl
sub
or
push
dec
lcall
adc
mov
push
add
adc
and
mov
or
inc
mov
or
leave
test
push
icebp
fmull
or
pop
leave
test
xchg
inc
jno
lods
cmpsl
xchg
imul
cld
cld
inc
das
or
push
mov
ret
nop
in
je
movl
dec
es
loopne
or
negb
sub
ja
mov
xchg
sub
or
push
adc
sbb
jl
mov
mov
repnz
push
js
shlb
xchg
pop
xchg
jmp
out
and
mov
ret
dec
movsb
dec
adc
adc
and
and
push
sub
or
dec
mov
xchg
test
in
les
mov
mov
sahf
out
mov
and
test
add
push
lret
sub
pop
psubsb
jne
imul
push
pop
jmp
shl
xor
cmp
cld
das
jmp
push
xor
and
jne
cmp
pop
divb
inc
jbe
mov
int3
jg
int3
scas
fwait
clc
fs
divb
fs
mov
out
sbb
divb
je
test
popf
imul
imul
dec
sbb
aas
inc
cmp
shrb
push
mov
jmp
fildll
and
je
cmc
movsl
ljmp
pop
outsb
or
sub
inc
xchg
ljmp
mov
shrb
sbb
mov
fldcw
or
jecxz
out
adc
lock
leave
ja
xor
aaa
lahf
outsl
jge
jne
mov
jmp
jb
arpl
add
jmp
out
dec
jb
in
or
sbb
or
test
pop
enter
mov
jne
mov
scas
push
jl
jmp
cmpsl
inc
sub
push
adc
cmpsl
into
jg
mov
call
iret
mov
sahf
ds
aad
addr16
loopne
xchg
lods
daa
rorb
push
jecxz
and
sbb
jmp
push
cmp
xchg
mov
push
adc
sbb
js
xchg
pop
sub
shlb
adc
mov
pop
push
push
mov
sub
nop
mov
cmp
loope
sub
sbb
mov
fstpt
pushf
jge
jo
jnp
mov
shlb
jl
aad
ror
lret
mov
cmp
push
adc
aam
ret
jg
mov
mov
aad
shrb
jge
xchg
insb
cmp
notl
jae
push
in
mov
push
das
mov
cs
bound
and
mov
add
pop
adc
mov
jmp
pop
push
in
aaa
sbb
mov
test
scas
push
mov
add
dec
ljmp
out
push
push
add
sbb
scas
jo
push
mov
sarl
int3
xor
and
add
pushf
or
mov
lcall
les
sbb
push
in
adc
xchg
push
sarb
js
sbb
rcrb
das
leave
je
stc
xor
mov
pop
cmc
dec
and
scas
je
push
stos
sub
pop
in
push
dec
pop
out
mov
mov
loop
pop
testl
mov
daa
sahf
std
push
sub
push
inc
mov
sahf
enter
pop
testl
push
xlat
pushf
cmc
and
or
adc
test
push
cmp
scas
pop
or
push
pop
inc
das
xchg
gs
mov
jg
jo
mov
scas
cmp
je
lcall
adc
mov
imul
push
out
and
adc
shr
mov
jp
pop
adc
jno
cmp
cltd
push
push
or
outsl
std
cmp
jmp
gs
sbb
rolb
leave
sbb
das
mov
mov
mov
leave
or
in
pop
fs
je
repnz
push
dec
int
dec
test
pop
adc
orl
lds
fsts
cmp
aam
cmpsl
mull
aas
mov
cli
das
mov
sbb
dec
xchg
push
stos
push
sub
orl
xlat
popa
ss
and
inc
pop
jo
jb
add
push
jge
fistl
adc
stos
mov
push
enter
push
sub
xor
and
cmovle
je
mov
adc
sub
jnp
adc
inc
mov
addb
sbb
push
rcll
adc
pop
js
sbb
lods
mov
std
je
leave
adc
daa
pop
sub
dec
mov
sbb
mov
movaps
or
int
mov
mov
jne
inc
cmp
lds
lods
add
sub
in
andb
dec
fs
sbb
enter
push
dec
xor
cmpsl
push
xchg
pop
sbb
xchg
xchg
sbb
xor
cltd
popf
adc
cmp
adc
dec
inc
enter
adc
push
mov
xlat
test
pop
push
cmp
pop
lahf
cld
rorb
bound
push
sbb
dec
shr
adc
pop
shl
mov
and
push
dec
scas
or
inc
arpl
and
subb
call
stos
daa
lock
jmp
jns
data16
inc
int
cmp
lock
sub
add
idiv
jp
addl
ss
dec
andl
add
test
xlat
dec
mov
dec
or
push
jge
adc
call
push
adc
push
jmp
movsb
rcll
pop
je
cltd
mov
and
std
xlat
xor
fldcw
cmp
imul
jne
jmp
push
jmp
call
fistps
inc
dec
enter
sub
jb
adc
and
cltd
jg
mov
call
mov
add
cmp
pop
je
or
or
loope
or
addb
xlat
cltd
push
stos
or
clc
and
daa
dec
pop
decl
enter
or
sub
leave
mov
jmp
pop
push
repnz
cmpb
cmp
scas
bound
call
int
pop
and
jmp
cli
movsb
imul
lds
or
icebp
je
sub
pop
or
dec
fadds
sbb
scas
ljmp
pop
add
shr
sbb
add
pop
ds
xchg
or
inc
lock
xchg
es
dec
add
clc
mov
popa
or
jo
leave
mov
or
push
dec
out
notl
call
iret
nop
lea
shll
rorb
adc
pop
inc
pop
popf
ja
sub
mov
dec
push
mov
mov
cs
dec
adc
arpl
leave
jns
ret
bound
mov
fdivrp
jmp
inc
les
shlb
add
xchg
ret
loop
sti
in
xor
mov
fnstenv
pop
daa
sub
jmp
sub
push
pop
or
mov
daa
stos
adc
push
test
xor
jle
stos
inc
inc
in
push
xchg
sub
cmp
movsb
xchg
std
fwait
xlat
scas
xor
jmp
jnp
aad
pop
je
or
inc
adc
mov
xchg
jge
add
dec
scas
daa
lods
add
push
mov
inc
push
adc
xchg
je
dec
pop
dec
and
ss
cltd
add
jmp
cmp
and
cmpsb
pop
in
jns
xor
adc
mov
push
fistps
pop
xchg
dec
jge
push
cltd
xor
sub
sub
xchg
out
cmp
inc
push
or
sti
push
fbld
xchg
cmp
andb
in
jp
test
jmp
and
sub
inc
inc
mov
or
adc
mov
sbb
and
push
notb
pushf
pop
ljmp
dec
sub
pop
icebp
or
ret
xchg
lret
push
dec
add
add
inc
test
je
mov
jmp
mov
lret
inc
test
push
test
xor
mov
mov
mov
outsl
xchg
out
mov
sbb
xor
cmp
cld
jle
clc
shr
xlat
cmp
mov
xor
or
mov
xor
mov
dec
repz
pusha
or
add
test
add
stos
enter
pop
in
dec
jnp
jp
xchg
das
or
inc
mov
xchg
xor
jmp
mov
pop
lahf
enter
pop
mov
in
xchg
in
add
dec
mov
in
cs
push
call
or
pop
inc
pop
adc
sub
test
mov
sbb
popf
or
adc
popa
test
push
es
sub
push
or
lcall
pop
pop
dec
scas
sub
hlt
mov
iret
iret
imulb
outsb
mov
out
mov
loopne
xor
ja
mov
in
sub
arpl
add
clc
xchg
lea
xor
sbb
xchg
mov
jne
mov
jge
cmp
cmp
cld
mov
jg
push
lcall
xlat
cmp
mov
rcl
aad
in
mov
insb
cmp
cs
daa
or
jge
movsb
insb
dec
jne
adc
inc
sbb
test
arpl
lock
testl
sbb
add
jmp
inc
call
cmp
mov
jno
call
mov
fwait
gs
lock
push
push
movsb
mov
flds
lock
ja
test
ret
jle
lea
pop
jbe
ds
fsubl
push
aam
mov
stos
and
vcmpss
fcomip
es
and
roll
push
pop
cld
lea
jmp
loop
ret
inc
xor
add
xchg
dec
scas
enter
sbb
jge
or
pop
pushf
cli
xor
push
and
data16
in
ret
and
sub
aas
adc
mov
js
mov
mov
cmp
adc
cmpsl
lret
jne
ljmp
repnz
pop
outsb
fstpt
sti
adc
sub
and
xchg
dec
inc
sub
and
inc
jge
cmp
jmp
test
fcoms
xchg
mov
sarb
jne
insb
loope
adc
xchg
inc
ljmp
jl
push
mov
adc
pop
jmp
jne
inc
and
mov
xor
aaa
mov
dec
jmp
pushf
ficoms
sub
mov
lea
movsl
mov
inc
dec
xchg
fistps
stos
push
orps
push
scas
sub
jge
es
push
sub
sbb
lods
dec
in
mov
xchg
xchg
jo
jecxz
pushf
jg
lahf
ret
fwait
cmp
sbb
dec
add
xor
in
bswap
sub
mov
in
ljmp
mov
icebp
in
and
stos
clc
lock
aam
xchg
das
movsl
sarl
xchg
subb
test
mov
imulb
sbb
cmp
sbbl
test
aam
and
les
mov
or
sub
addr16
mov
cld
fwait
std
adc
push
xor
push
sti
sub
inc
and
and
fidivl
jge
imul
adc
stos
leave
inc
lds
mov
and
ds
in
mov
dec
add
push
xchg
cli
jmp
jne
add
loopne
adc
adc
adc
imulb
loopne
pop
xor
mov
rcll
sub
xor
xlat
adc
mov
pop
nop
in
dec
jge
dec
mov
jl
and
xchg
push
enter
popf
push
outsb
test
add
mov
dec
or
rcrb
pop
sbb
pop
adc
mov
cmp
fcomps
call
push
imul
and
pop
stos
pop
mov
or
xchg
pop
dec
and
test
ror
psllw
test
push
add
add
fldl
gs
adc
xor
mov
jmp
insl
leave
xor
xchg
test
jae
lock
xor
cmc
les
stos
jne
stos
repz
dec
test
and
jne
jb
jnp
fdiv
pop
mov
xchg
add
jb
mov
xor
add
sete
mov
mov
and
in
mov
add
lea
and
dec
mov
jmp
xor
loop
sahf
dec
lret
std
arpl
cs
mov
sti
cli
gs
scas
popa
stos
lods
repz
mov
add
inc
mov
scas
mov
fimull
dec
adc
movsb
lock
pop
sahf
xor
cmp
lahf
push
cmp
push
lods
push
adc
dec
sub
sbb
cmpsl
sub
push
mov
xor
jg
adc
xchg
hlt
iret
or
jb
hlt
pop
test
call
lds
xor
mov
sub
data16
mov
push
movl
xchg
ror
cltd
out
cmp
mov
aad
and
jle
repnz
bound
mov
or
ss
ret
stc
std
xchg
shlb
pusha
cs
mov
cld
xchg
jmp
pop
mov
inc
cld
push
les
push
xchg
rorb
in
and
jl
in
mov
dec
sub
outsb
inc
mov
mov
sub
adc
push
jns
movsb
pop
xchg
or
mov
jae
lods
fs
xchg
pop
mov
les
sahf
sub
jbe
icebp
and
incb
fcmovnb
sbb
sub
shlb
push
fstl
mov
mov
xchg
sub
cmp
push
sbb
cmpsb
adc
and
xchg
add
sbbb
inc
mov
mov
dec
das
mov
shrl
jb
adc
cmpsb
dec
mov
sub
jns
mov
repnz
mov
pop
pusha
pop
cmc
rorb
das
fcoml
xchg
pop
jmp
sti
lret
das
pop
mov
cwtl
adc
repnz
xchg
shrb
and
mov
jns
aaa
je
inc
mov
cld
mov
dec
xchg
repz
sarb
cmp
repnz
fidivrl
shll
lahf
dec
cmp
in
and
sub
jne
fldenv
fidivl
fsub
lock
inc
pop
dec
sbbl
sarl
aaa
xor
in
mov
mov
testb
sub
and
in
lret
rcrl
enter
fwait
push
movsl
insb
or
ds
jle
or
in
cmc
fs
or
nop
dec
sbb
mov
cmp
or
cld
jp
iret
ret
inc
lret
push
dec
cld
out
mov
dec
xchg
data16
fsts
subb
ds
pop
add
ss
and
sub
cmp
adc
pop
xor
rorl
cwtl
jle
jmp
dec
cli
or
fwait
rcrb
push
jmp
cmp
movsb
or
ret
push
int3
cmp
inc
sub
or
xchg
dec
aaa
out
in
out
int
and
or
fs
push
lret
push
xchg
cmp
cmp
pop
add
dec
in
mov
repnz
adc
fs
pop
mov
ss
mov
sbb
mov
popf
lea
add
xor
sub
sbb
cmc
jecxz
mov
leave
sub
and
ret
jbe
adc
sbb
ror
nop
fmul
enter
ret
sete
pop
mov
sbb
rdtsc
or
nop
das
adc
call
lret
fs
stos
mov
jne
jno
xor
adc
imul
push
enter
cltd
movsb
pop
add
sub
dec
cmp
jle
out
sarb
mov
and
lock
mov
jns
xchg
cs
test
rclb
sub
sbb
and
insl
ret
mov
mov
ret
push
jp
sub
sbb
jmp
shr
loope
cmp
or
les
out
adc
pop
mov
sarl
xor
ds
sub
cmp
adc
or
movzbl
pop
sub
je
ffreep
inc
add
jl
cmp
movsl
aam
hlt
and
inc
enter
pop
les
rolb
cmpsb
mov
push
push
mov
imul
dec
movsl
loope
addl
inc
imul
dec
and
xlat
jge
and
les
loope
or
leave
fiaddl
pop
ss
jne
test
andl
outsb
mov
cmp
add
or
push
jbe
rcll
sub
and
sub
imul
sub
or
push
and
cmp
cs
mov
or
pop
add
sub
add
dec
jg
int3
cmpsl
jmp
jmp
jge
add
adc
jbe
sub
mov
xchg
push
outsl
loope
cld
inc
or
pop
or
cmpsl
inc
adc
scas
sub
inc
push
adc
test
mov
sub
lds
notb
sub
adc
push
cmp
pop
push
inc
jmp
push
push
test
xor
push
in
mov
cmp
cmp
adc
test
jp
sbb
pushl
rorl
lds
mov
pop
adc
dec
fsts
inc
sbb
scas
popa
add
jne
sub
mov
sbb
and
sbb
add
jo
sub
pop
push
sarl
test
pushf
mov
push
in
dec
or
dec
add
mov
mov
push
push
push
pop
ljmp
push
push
push
sbb
int3
add
cmp
dec
cmpsl
pop
insb
or
adc
imul
pop
inc
sub
mov
adc
pop
push
inc
test
and
mov
mov
add
add
test
adc
or
and
rorl
or
cld
mov
dec
ret
mov
les
call
jle
jecxz
mov
das
push
add
ret
jg
cmpb
repnz
dec
push
test
dec
push
popa
push
testb
push
adc
adc
mov
dec
and
inc
jmp
in
cmp
xlat
icebp
pop
sub
dec
lock
punpckhdq
dec
mov
mov
push
mov
push
daa
dec
aas
push
mov
push
xor
inc
cmp
ja
test
mov
cmp
xchg
pop
mov
pop
push
call
add
xor
call
sub
inc
dec
jne
movzwl
ffreep
mov
jnp
sbbl
inc
adc
push
adc
cmp
daa
add
ds
aad
mov
and
notb
xchg
andb
jg
and
cld
adc
or
jo
bound
mov
ja
sub
push
cmp
mov
inc
aam
sub
notl
iret
pop
cmp
daa
ja
push
and
mov
mov
dec
dec
in
test
fisttps
out
aad
enter
xor
push
and
cmp
add
adc
filds
fsubs
add
add
ficoml
bound
xor
xlat
pop
add
xor
inc
mov
adc
jbe
adc
push
mov
jg
mov
mov
jge
and
imul
rsm
mov
and
call
hlt
jl
ficomps
xor
or
loop
hlt
adc
daa
pop
and
or
lds
mov
into
adc
dec
jo
sbb
jl
adc
mov
push
out
push
xchg
sti
aam
lahf
cmp
cmp
sbb
mov
sbb
add
inc
call
out
adc
push
in
pushf
push
mov
mov
inc
pop
or
pop
pop
lds
dec
sbb
mov
loop
mov
mov
lock
cmp
sub
pop
mov
shlb
push
jns
mov
int3
cmp
pop
jmp
xchg
push
lock
in
pop
sbb
jmp
daa
sbb
push
xor
jne
out
repz
mov
repz
dec
hlt
xor
push
mov
xor
jge
sub
adc
or
push
icebp
in
in
and
adc
add
adc
jl
sti
sub
std
les
push
and
cmp
or
adc
xchg
maxps
scas
jb
and
icebp
pop
movsl
push
bound
or
jne
add
adc
mov
xchg
call
mov
das
sbb
push
jb
fsts
adc
cmp
add
daa
ja
xchg
xchg
in
dec
add
xor
adc
push
std
ljmp
jle
dec
mov
out
or
pop
clc
imul
or
lret
dec
pop
je
adc
iret
mov
mov
into
gs
movsl
lea
mov
pop
cld
test
sub
fs
pop
push
inc
mov
repnz
sbb
sbb
into
push
cmp
adc
mov
inc
or
jb
jecxz
push
inc
xchg
pop
aaa
add
jne
push
jo
scas
cmpsl
push
pop
jl
push
jl
inc
dec
mov
andl
mov
push
mov
lock
push
or
inc
cmp
adc
jo
mov
add
std
pop
jae
cmc
sbbl
test
aam
push
mov
sbb
in
or
lret
ja
or
jne
jl
mov
les
call
loop
cmpsb
and
ljmp
in
cmp
adc
not
dec
dec
imul
ficompl
sub
ficoms
stos
sbb
test
inc
adc
repz
test
mov
loopne
jmp
cmp
jne
pop
cmp
and
repz
dec
push
imul
cld
mov
sbb
leave
or
pop
push
sbb
nop
loop
sub
mov
popf
push
or
jl
and
aam
scas
mov
push
or
mov
mov
inc
out
inc
fsubr
dec
test
jecxz
sub
movsb
lret
scas
lcall
dec
add
jbe
fiaddl
or
jl
pop
sbb
hlt
inc
pop
test
sub
mov
sbb
jo
xor
push
push
cld
scas
movsl
cmp
out
popfw
or
and
mov
hlt
mov
test
jle
int
adc
dec
push
xchg
mov
mov
xor
dec
jne
lret
dec
ret
loop
rorl
jns
push
xor
jge
mov
mov
mov
adc
call
rcrl
les
hlt
mov
pop
lds
mov
arpl
sbb
and
jno
sub
rolb
mov
cltd
push
and
js
test
or
fisttpll
mov
mov
dec
mov
loope
adc
or
adc
test
subb
sbb
test
lcall
or
inc
add
dec
adc
decl
push
scas
in
and
outsb
jmp
sbb
out
ds
add
jne
leave
pop
pop
xchg
scas
mov
data16
mov
cmpsl
hlt
xor
adc
dec
sbb
cwtl
inc
mov
mov
fldl
test
dec
jbe
xchg
mov
je
addl
testb
jns
shrl
and
push
dec
dec
mov
aam
and
push
fs
and
push
rcr
adc
push
aas
and
inc
and
inc
dec
je
cwtl
push
lods
push
xchg
arpl
pop
iret
jl
aam
mov
sti
movsb
pop
in
jg
mov
stos
xlat
repnz
mov
or
mov
pop
dec
add
push
adc
enter
sub
or
cwtl
cmp
addb
inc
xchg
cmp
or
cmp
and
movsl
shrb
gs
mov
ja
or
xlat
mul
lcall
mov
push
pop
jle
les
pop
out
mov
pushf
and
shll
and
mov
scas
adcl
loope
lods
cmpsb
adc
jmp
cltd
int
pop
xor
add
pop
subl
imul
add
xchg
call
mov
pop
push
mov
sbb
or
imulb
push
mov
dec
push
orw
daa
je
dec
ficoml
add
divl
loopne
sbb
adc
stc
cmc
test
sub
cmp
pop
lea
xchg
icebp
xchg
daa
jns
ljmp
add
sbb
adc
and
imul
xor
and
dec
or
cmpsl
dec
push
shll
mov
dec
push
out
fisubs
cmp
push
aas
adc
sub
inc
inc
mov
push
dec
xchg
sbb
test
addb
push
fdivrs
inc
push
xor
daa
sbb
hlt
sub
cli
mov
dec
push
aad
sbb
mov
dec
and
dec
call
adc
sub
push
dec
adc
cmp
jge
es
jecxz
and
jp
dec
loop
xchg
das
adc
out
cs
adc
cmp
clc
or
push
shrb
mov
mov
jp
cmp
cmp
and
push
sub
sub
mov
enter
mov
aam
jne
jl
mov
loopne
lock
call
mov
adc
and
jmp
and
or
pop
mov
orl
mov
movsb
and
addr16
fnstenv
xor
cmp
jge
data16
xor
jne
loopne
je
or
push
das
dec
jmp
aam
dec
jmp
aam
iret
sub
loop
push
mov
data16
ss
or
mov
cs
ss
and
stos
clc
test
out
outsb
cmp
mov
mov
sbb
jb
fildl
jmp
dec
pusha
mov
adc
fistps
aam
and
and
xchg
pop
adc
pop
pop
mov
mov
pop
mov
andl
sbb
inc
jo
add
cmp
mov
sub
imul
jmp
adc
dec
sbb
repnz
mov
out
scas
mov
xor
test
fldcw
movsl
loop
lock
jge
loop
dec
sti
lea
pop
and
jne
dec
and
je
and
and
pop
jmp
inc
mov
push
fmulp
push
sub
rclb
xor
sub
scas
push
aam
jl
jle
sub
roll
es
stos
dec
mov
push
add
cltd
test
or
outsb
lea
lahf
int
sbb
jmp
dec
xchg
jb
jge
gs
test
add
pushl
cmp
push
enter
xchg
jbe
xchg
jo
fcom
test
fsubl
dec
and
cmpsl
push
cmp
fwait
mov
xor
cmp
jo
jns
inc
jmp
jl
orl
or
mov
pop
sbb
jne
divb
mov
adc
cmp
push
adc
in
loopne
ds
fisubl
cld
fsubrs
enter
xor
js
mov
sar
fiadds
push
pop
add
sbb
and
call
dec
mov
push
dec
or
mov
jmp
movsl
adc
or
pop
pop
dec
jmp
mov
mov
gs
cmp
jne
stos
mov
and
jle
and
push
jb
leave
movsl
inc
dec
pusha
add
enter
jae
mov
xor
mov
std
mov
or
adc
add
xchg
aad
mov
fucomip
or
sbb
sub
inc
ja
mov
adc
sbb
adc
dec
inc
test
xchg
add
push
mov
cld
adc
or
lahf
popa
inc
clc
outsl
test
mov
add
add
dec
rolb
fidivl
pop
gs
mov
shrb
repz
sub
adc
fmul
or
jl
lret
push
pop
fidivrs
fwait
dec
inc
enter
or
mov
or
jne
xchg
xor
xchg
xor
inc
add
adc
jae
pop
leave
mov
dec
adc
call
sub
jbe
mov
mov
rcrb
adc
movsb
aaa
push
das
js
icebp
fnstsw
test
popa
imul
mov
adc
sub
xchg
cmp
jo
or
movsb
ja
test
lret
cmp
cmpl
xlat
shrb
xchg
jae
adc
mull
cmpsb
push
mov
cli
jnp
daa
or
mov
sub
add
dec
jne
push
stc
in
cli
out
daa
cs
iret
fdivl
scas
mov
jle
cs
mov
das
fsubrl
rolb
push
xchg
mov
divl
faddl
bound
fdiv
cmpsb
inc
adcb
add
fcomip
xor
es
sbb
fs
int
das
cmpsb
pushf
and
add
enter
mov
mov
data16
cmp
ljmp
scas
add
sti
mov
jno
das
mov
mov
adc
add
mov
cltd
dec
xor
xor
frstor
push
mov
scas
jmp
push
fisubl
xchg
mulb
mov
push
and
adc
repz
mov
jae
xchg
mov
jnp
xchg
or
aaa
adc
cs
adc
push
fcomps
test
adc
adc
pop
call
pop
pop
in
cli
jb
dec
push
inc
test
out
mov
xchg
loopne
sub
pop
das
test
inc
push
adc
and
lret
inc
pop
mov
js
cmc
sbb
test
sub
and
int
jb
stc
leave
or
cli
push
lahf
andl
rorb
or
jne
push
out
daa
dec
negb
fsubs
and
mov
std
push
adc
repnz
xor
ficompl
inc
cld
xor
cmc
jae
sub
daa
movzwl
inc
clc
push
shll
movsl
outsl
fcoms
call
push
mov
in
insb
inc
movsl
scas
popa
add
sbb
push
scas
jae
adc
and
xor
push
and
pop
jmp
or
adc
mov
jmp
lcall
add
jle
mov
fldenv
and
addl
push
mov
fiaddl
push
fisttpll
mull
out
test
adc
xchg
or
ss
or
mov
stos
xor
jg
roll
sub
lock
push
add
ljmp
mov
leave
ds
std
jmp
mov
add
jo
shl
idivb
push
dec
in
je
or
bound
cwtl
xchg
xlat
xchg
imul
insl
push
imulb
cmpsb
and
cmpsl
push
jo
or
negl
add
jne
sub
hlt
push
cmpl
push
jl
mov
sti
in
jmp
fildll
ret
cmp
jle
add
and
mov
dec
ja
fdivrp
iret
loopne
adc
sub
gs
sub
jmp
dec
mov
testl
push
mov
dec
and
leave
insl
cmc
shl
loopne
mov
cltd
mov
pop
push
dec
fsubrl
js
sub
outsl
adc
loope
std
or
xor
repnz
sub
cmp
hlt
arpl
inc
mov
push
out
mov
fs
dec
xchg
mov
aam
cld
hlt
xchg
or
getsec
sbb
cld
add
loope
syscall
scas
mov
insb
mov
xchg
mov
cmc
adc
int
fcmovne
adc
pop
dec
mov
mov
mov
daa
fbld
adc
js
inc
mov
ficompl
es
je
fnstcw
jae
jb
inc
mov
add
push
shl
ja
mov
lcall
aad
adc
jge
mov
inc
adcb
mov
jp
scas
pop
inc
sub
mov
cmp
into
add
cwtl
fistps
pop
int
cmc
jo
test
loop
popa
mov
es
pop
sbb
jbe
stos
movsl
inc
xor
or
cli
arpl
dec
je
mov
cmp
dec
out
imull
pushl
jg
leave
dec
sub
mov
call
sti
xchg
adc
inc
loopne
repz
imul
xor
add
mov
movsl
jae
mov
inc
mov
sub
cmpsl
mulb
push
xchg
ret
stos
enter
fstpl
push
xor
mov
or
sbb
jge
into
dec
push
add
cmp
je
push
icebp
xchg
fs
jne
dec
add
ret
negb
leave
das
mov
jno
jecxz
dec
sti
cmp
xlat
xchg
js
je
push
adc
and
fcompl
jl
push
xchg
repnz
xlat
mov
cmc
jecxz
pop
jne
xchg
incb
xchg
data16
inc
fisubrl
or
mov
jb
cmp
cmc
aam
popa
leave
lock
push
or
int3
pop
cmp
xor
sbb
loopne
jbe
pop
cmp
add
mov
cmpb
fildl
shll
mov
jmp
fs
repz
je
adc
or
or
pop
loop
clc
push
or
stc
stos
repz
and
leave
mov
push
jge
iret
or
pop
idivl
ret
xchg
cmc
or
xchg
or
shlb
and
dec
cltd
sub
roll
lods
dec
sbb
or
cmp
ret
xchg
ja
out
xlat
data16
mov
xchg
add
aad
stos
push
cs
lock
call
sub
and
stos
ja
aad
popa
xchg
call
xchg
sub
rclb
or
pop
inc
or
rolb
jmp
push
and
loopne
cmp
jb
aas
and
iret
jne
xchg
or
pop
cmpsb
push
insb
mov
push
pop
dec
hlt
adc
nop
dec
notb
cwtl
je
mov
mov
fiadds
jne
mov
stos
lock
adc
mul
xor
push
out
mov
punpckhbw
enter
jo
pop
imul
insb
scas
imul
daa
test
xchg
mov
daa
loope
jns
add
jp
push
test
xchg
test
jne
test
sbbl
cmp
or
pop
mov
or
adc
lahf
roll
test
push
push
orl
js
mov
ficoms
jo
popa
iret
cmpsb
and
or
inc
cmp
ja,pt
add
test
jbe
cmp
mov
or
pushl
push
push
adc
cmp
je
or
and
jne
inc
fcomps
cmc
lret
int3
stos
jb
and
std
jb
loopne
xchg
in
lcall
push
nop
rcrb
ljmp
or
sub
data16
jae
cwtl
mov
loopne
push
sub
subl
aaa
test
mov
add
and
in
sarl
ret
pop
mov
push
cmp
enter
data16
shrl
sbb
push
jp
xchg
jl
push
cs
xor
pop
popa
pusha
fcompl
xor
mov
imul
jbe
pop
lock
test
inc
inc
sub
sbb
out
hlt
and
ret
jle
ret
fbld
ret
arpl
xor
add
add
testb
mov
repnz
mov
les
mov
cmp
insl
dec
or
jmp
push
mov
xchg
out
andl
sbbb
addr16
dec
and
sbb
add
movsl
xlat
jecxz
test
fnsave
enter
xchg
lds
out
int3
stos
push
inc
pop
jl
and
sub
fadds
aam
stos
mov
and
and
mov
adc
scas
lret
adc
and
dec
inc
mov
loope
add
push
scas
ret
ss
pop
pop
mov
sbb
jmp
call
add
cmpsb
dec
inc
or
jg
xchg
lea
je
scas
aaa
in
push
movsb
out
or
pop
pushf
cmp
dec
sbb
sub
xor
and
sub
int
jnp
pop
push
pushf
dec
cmpl
btc
dec
xor
jne
pop
fisubrl
xlat
sub
dec
fisubrl
jecxz
mov
scas
mov
dec
mov
inc
mov
loop
xor
add
pop
loope
leave
adc
xchg
add
js
cli
sub
ja
pop
xor
call
lea
adc
xor
pushf
xor
mov
fdiv
push
mov
sub
inc
ret
jne
roll
xor
cmp
fildll
xchg
or
add
cld
fnstcw
or
inc
les
adc
testb
ja
scas
pop
mov
dec
rolb
jge
push
sahf
loop
mov
jmp
imul
push
cli
xchg
mov
mov
jnp
and
xchg
faddl
dec
call
push
das
inc
and
jns
aad
jle
sbb
mov
jne
lods
sha1nexte
out
out
dec
dec
adc
in
sti
cmpsl
pop
std
jns
bound
mov
xor
and
adc
divb
xor
xchg
xor
jne
xchg
or
or
inc
xor
cmpsl
aas
pop
bound
jb
xchg
adcl
mov
and
dec
mov
leave
ficomps
push
adc
dec
jmp
les
clc
mov
stc
jge
sub
out
add
in
jbe
sub
cmp
xchg
xor
stos
movsb
push
ss
mov
mov
lcall
mov
clc
je
sub
ss
mov
pop
or
mov
in
pop
xchg
cltd
stos
xor
popa
cs
xchg
adc
pop
sub
push
push
mov
inc
lea
lods
sub
filds
cmp
sahf
push
xchg
push
in
mov
out
mov
nop
popa
dec
or
mov
and
cmpsl
mov
pop
nop
dec
movsl
daa
and
adc
daa
or
push
push
mov
cmp
cmp
jbe
dec
push
rorl
xchg
fsubs
cmp
cmp
xor
or
mov
pop
sbb
sub
push
setl
mov
nop
sub
mov
nop
adc
mov
jmp
push
xchg
js
lahf
xchg
dec
lret
movsb
mov
pop
xchg
push
mov
bound
mov
dec
fidivl
mov
fs
adc
adc
sbb
mov
inc
popf
and
shll
sub
or
pop
gs
daa
inc
dec
les
pushf
clc
jmp
push
lcall
push
inc
xchg
mov
rorb
jge
or
ret
push
jne
xor
iret
cmpl
dec
add
jne
test
sub
and
insb
int3
dec
ljmp
mov
pop
inc
cmp
out
xor
xchg
jb
gs
fdivrs
inc
add
sbb
lods
fists
jbe
sbb
cwtl
std
or
push
and
mov
pop
dec
dec
add
rorl
lods
mov
cld
jmp
movsl
fbld
and
imul
pop
mov
dec
sbb
lock
jge
lret
fnstenv
mov
shl
outsl
repnz
mov
lret
add
ljmp
imul
arpl
cmp
jl
jecxz
loope
or
xchg
fmuls
or
push
je
xor
push
cmpsb
call
or
lahf
jo
inc
sbb
cmp
out
enter
adc
shlb
popa
cs
or
mov
lock
lret
aam
xchg
es
adc
push
sbb
mov
mov
jl
lods
jle
cwtl
mov
cmp
das
je
dec
pop
fdivs
sub
sub
cmovle
jne
pop
in
xchg
ljmp
inc
sbbb
jb
stos
adc
mov
outsl
mov
cmp
adc
mov
jae
and
cltd
insb
push
outsl
setg
sub
jl
dec
int3
xchg
and
lahf
adc
je
cmpsb
pop
pop
jmp
iret
cli
mov
pop
into
push
xor
adc
ret
jmp
lds
mov
push
or
xor
pop
rcr
xchg
cmc
xchg
ja
arpl
das
pop
push
pop
out
mov
mov
inc
sub
out
mov
add
bnd
scas
lret
call
add
push
xchg
data16
aam
mov
or
sub
stos
add
pop
adc
loope
push
cmp
mov
push
cwtl
loop
inc
mov
sub
xor
jmp
ljmp
xor
shrl
pushf
in
mov
jmp
adc
imulb
mov
clc
je
mov
push
addr16
pop
xchg
fldcw
lret
adc
push
jne
push
es
add
shl
add
cmp
nop
ljmp
out
sar
push
lds
mov
js
inc
mov
das
sbb
xchg
push
rolb
mov
scas
cmp
push
xchg
js
js
lods
stos
test
lcall
icebp
aam
addr16
xchg
hlt
xchg
jno
es
lcall
nop
aaa
add
roll
cmp
pop
mov
stos
xor
or
int3
xor
ja
jp
push
and
adc
jg
inc
cmp
stos
std
adc
xchg
sub
daa
push
popf
ljmp
inc
dec
in
movsl
adcb
lods
fmull
jge
dec
sub
jg
jle
and
sub
pop
in
rclb
dec
insb
push
xor
adc
push
inc
cmp
iret
pop
ror
cmp
xor
incl
cmp
popf
push
mov
sub
fildl
adc
jecxz
aaa
sbb
arpl
pop
daa
and
mov
cld
out
jns
call
mov
sub
lahf
out
iret
xchg
icebp
gs
push
mov
test
fwait
daa
gs
push
popa
sub
adc
cmp
int3
call
aad
scas
mov
add
int
mov
stc
jb
mov
shll
xchg
sbb
fistpl
push
mov
aad
cltd
xor
sbb
pop
push
hlt
mov
adc
adcb
xchg
push
inc
xchg
rcl
inc
psadbw
mov
movsl
inc
sahf
movsl
add
ret
xorb
xchg
imul
lods
stc
int3
xor
cmp
jmp
xor
xchg
sbb
xchg
dec
xchg
pop
adc
mov
sti
leave
hlt
jp
mov
insb
sbb
push
call
jge
ja
mov
dec
ficoml
outsl
push
pop
lock
mov
adc
inc
fucompp
inc
jne
and
push
ljmp
into
int
jp
and
push
pop
jb
sbb
filds
popa
sub
in
lock
adc
mov
jne
out
or
mov
lcall
push
inc
push
cmp
push
xchg
mov
rolb
jne
mov
dec
mov
dec
sbb
xor
mov
pop
imull
ds
shll
movsl
outsb
jne
sahf
dec
dec
jp,pt
sbb
fnsave
jmp
call
dec
push
or
sub
mov
xlat
movsb
cmp
jmp
daa
fisttpll
subb
mov
cmp
lcall
imul
push
mov
push
and
sbbl
xlat
in
sbb
jle
sub
inc
sub
pop
sub
push
xor
cltd
cmp
fists
ljmp
mov
bound
pop
notb
or
jmp
mov
mov
mov
adc
aam
jmp
outsl
push
fidivs
xchg
add
mov
cmp
ljmp
ss
mov
stos
fstps
push
sub
add
and
loopne
fdiv
xor
or
push
pop
mov
int3
sbb
adc
or
add
arpl
cltd
pop
and
sub
push
aad
sub
repz
mov
dec
lcall
filds
mov
cmp
xlat
lahf
in
and
mov
xchg
clc
lahf
push
sub
add
pop
xlat
arpl
iret
mov
jns
mov
test
xchg
xor
mov
mov
cmp
xor
and
leave
push
xor
int3
xor
mov
mov
cmpl
xchg
mov
adc
cwtl
inc
aad
push
xchg
and
lods
adc
push
mov
jae
xchg
xchg
and
dec
sub
daa
jmp
and
fbld
jae
es
cmp
outsb
ja
ja
ds
or
loope
mov
fiaddl
mov
aas
in
rcrb
mov
mov
fistpl
adc
xchg
scas
adc
les
sub
mov
xor
adc
and
push
jb
outsl
mov
jne
cmp
cmovno
roll
add
pop
imul
insb
imul
inc
sub
xor
push
xlat
or
xchg
ljmp
pop
sti
xor
push
sub
clc
out
fs
and
rol
sbb
mov
pop
or
xor
sarl
fsubrs
loop
mov
in
into
lock
xor
out
mov
or
inc
fcoml
das
sar
in
mov
fdivrs
xor
xor
push
movsl
jmp
xchg
adc
push
pop
push
or
inc
lock
cmpsb
adc
and
dec
aaa
or
jmp
adc
push
mov
mov
cltd
mov
outsb
mov
dec
sbb
fs
xor
testl
adc
rdseed
dec
test
mov
arpl
es
loop
mov
push
xor
fcoml
sbb
fists
das
out
and
add
stos
sbbl
add
jmp
call
fnsave
xchg
out
pushf
rorb
fisubs
xor
popf
enter
xchg
mov
cs
xor
add
pop
bound
aaa
adc
hlt
call
and
or
call
adc
hlt
dec
lock
mov
je
jb
das
in
aaa
in
xor
cwtl
jl
cmp
in
push
xchg
cmc
adc
pop
das
stos
and
push
dec
mov
xor
jmp
mov
mov
mov
dec
lods
pushf
adc
loop
test
and
add
sub
add
add
into
test
mov
leave
pop
pop
push
cmp
sub
cmp
enter
dec
mov
or
sbb
rcll
cmp
xor
ret
mov
cmpsl
jecxz
adc
fiadds
out
mov
loopne
rol
dec
or
xor
mov
dec
jg
outsl
inc
loopne
jo
popa
movsl
add
push
or
es
push
lcall
mov
dec
push
sarb
cmp
or
fsub
mov
leave
movsl
cmpsb
lods
or
xor
subb
push
fdivrl
jmp
jae
sbb
push
in
inc
or
mov
cmp
sbb
and
xor
ret
lahf
inc
xchg
push
cmp
cmc
pop
inc
cmp
sti
sub
shrb
pop
sbbl
ds
cld
add
in
cmp
dec
mov
or
cli
mov
hlt
add
cmp
push
jne
xchg
clc
lahf
xchg
std
nop
push
push
cwtl
dec
and
or
add
std
fbstp
jmp
push
push
mov
mov
lock
fidivl
pusha
sub
adc
popf
mov
xor
dec
incb
ja
rorl
cld
or
xor
adc
jne
dec
xchg
cmovl
enter
lods
jne
and
rcr
sub
enter
adc
xor
sub
cmp
fwait
loopne
cs
dec
jns
sub
gs
mov
outsl
loop
mov
or
jmp
and
dec
mov
sub
int3
and
jmp
push
jns
out
dec
mov
neg
inc
fwait
pop
fiaddl
push
adc
cmpl
cmpsl
inc
xor
sub
mov
in
mov
sbb
inc
and
pop
std
add
inc
pop
mov
adc
jmp
push
mov
mov
xlat
mov
or
lock
mov
aaa
adc
mov
aam
pop
or
cli
xor
shll
js
xchg
mov
inc
push
jmp
push
sub
ror
or
adc
inc
xchg
aad
fstpt
jo
mov
inc
fnsave
push
data16
mov
insb
push
sbb
adc
jle
out
push
loope,pn
jno
outsb
or
fsubs
pop
or
std
dec
rcll
cmc
push
push
dec
addl
iret
mov
cmp
fidivrs
push
sub
andl
add
dec
jne
stos
jecxz
xor
push
mov
ret
or
repnz
clc
into
lds
push
imull
mov
inc
daa
jo
pusha
pop
dec
sub
ljmp
push
in
dec
test
mov
lods
insl
cmpsb
mov
jne
out
popf
dec
xchg
call
xchg
sahf
jmp
pop
xor
jg
int
cmp
xchg
dec
cmpb
or
es
in
das
idiv
sbb
xor
lock
xor
loop
cmp
xlat
pop
fdecstp
inc
pop
mov
xor
mov
clc
cmp
jl
lret
mov
iret
loopne
cmp
mov
pop
xchg
dec
mov
in
inc
add
and
scas
push
out
pop
jp
mov
or
jge
gs
in
sbb
mov
daa
and
and
and
rcrb
push
hlt
filds
outsl
mov
aam
es
sbb
pop
sbb
push
lods
outsb
adc
cmp
je
adc
mov
ljmp
dec
jl
pop
ja
add
push
lea
cmp
stc
pop
dec
shl
cmp
repnz
call
je
cmc
inc
std
or
and
adc
mov
and
popa
dec
cmp
je
aam
and
roll
and
and
shll
xlat
mov
jecxz
jne
mov
jmp
repz
stos
adc
adc
stc
test
mov
inc
adc
jnp
xor
xor
lcall
add
das
fstps
dec
sbb
insb
les
mov
cmpsb
fcompl
divl
popf
inc
and
push
orb
jmp
fcomi
imull
add
movsl
mov
mov
sbb
jge
scas
rcrb
out
dec
stc
or
cmp
cmp
cs
inc
mov
pop
dec
and
add
mov
xor
or
jmp
hlt
sub
hlt
jo
call
jmp
mov
push
mov
loop
xchg
fwait
jo
cmpsl
or
ljmp
je
ss
mov
cli
push
shll
pop
inc
push
xor
sub
dec
mov
test
js
fisttps
pop
or
mov
mov
push
mov
test
dec
test
test
push
mov
cmp
js
xchg
loope
dec
add
mov
xor
mov
ljmp
adc
iret
pop
out
mov
jg
jp
push
inc
push
mov
sbb
push
movsl
sbb
dec
outsb
jae
xchg
dec
aas
push
mov
icebp
mov
push
mov
movsb
imul
sbb
gs
popa
fists
dec
and
inc
or
sbb
dec
cmp
mov
sub
mov
test
jne
push
xor
sbb
or
test
pusha
push
adc
movsl
fsub
mov
and
fs
adcl
fwait
lods
cmp
pop
dec
andl
add
sub
adc
stc
sahf
mov
dec
inc
das
inc
add
out
mov
jo
shlb
inc
andl
outsb
xchg
enter
or
xchg
ficomps
cmp
sarb
int3
or
cmpsl
cmpb
push
inc
push
lret
cld
jmp
mov
fdivrl
push
push
stos
xchg
sbb
aas
push
xlat
sub
mov
adc
je
jl
and
lds
cmp
mov
jl
fiadds
xor
jne
pusha
cmpb
xor
mov
jne
inc
cmpb
cmp
jge
jmp
in
push
cmp
xchg
nop
stos
xor
inc
icebp
dec
popa
je
pushaw
or
fldl
fldl
dec
loope
enter
sbb
xchg
jb
lahf
pop
dec
dec
and
enter
rolb
dec
sbb
mov
pop
ss
sbb
test
sarl
add
jge
dec
inc
pop
jg
cli
sub
jbe
test
ficoms
dec
xor
inc
repz
hlt
insl
jg
mov
dec
xor
fldz
movsl
movsl
inc
shr
push
pop
fwait
orb
add
mov
and
repz
fnstsw
rsqrtps
xor
jmp
cmp
inc
repnz
icebp
outsl
and
aas
xor
sbb
jne
xlat
and
sub
pop
out
mov
adc
lods
scas
xor
das
sub
psllq
or
pop
hlt
ljmp
xor
push
push
inc
lock
jb
pop
push
mov
and
adc
ficomps
lods
leave
jns
imul
dec
orl
or
jle
movswl
jae
cmp
je
dec
nop
in
add
pop
sbb
or
push
cmp
inc
and
mov
pop
cmpsb
xlat
adc
jl
sahf
daa
je
add
mov
mov
aad
or
inc
jbe
daa
mov
pushf
iret
sub
xchg
inc
jmp
subb
test
jecxz
pop
xchg
pop
pop
mov
jne
push
test
sub
rorl
ljmp
jp
pop
jne
cmp
push
imul
test
pop
mov
and
sti
pop
xchg
test
push
arpl
cmp
inc
inc
mov
pop
xor
push
stos
nop
sbb
mov
add
lock
or
jno
adc
dec
enter
push
mov
ds
nop
jns
popf
adc
call
jp
jecxz
enter
out
sub
pop
in
push
inc
and
inc
inc
in
lea
pop
push
popf
leave
jno
jg
xchg
mov
adc
or
or
es
sbb
in
movsl
addl
ret
adc
jmp
cmp
shlb
je
dec
icebp
jg
cmp
jne
sbbl
and
int3
fists
decl
xor
rcll
add
pop
arpl
gs
mov
cld
adc
sbb
dec
and
loopne
pushf
mov
subl
or
fldenv
addb
js
dec
lods
pop
dec
test
mov
inc
push
xchg
stos
dec
inc
call
je
popa
sti
aam
mov
jb
cmp
scas
mov
sbb
mov
pop
sbbb
stc
cs
daa
mov
mov
shl
leave
push
pop
inc
xor
or
sbb
jl
in
aas
mov
test
xlat
xchg
movb
jl
inc
dec
dec
cmc
rcr
dec
iret
sub
orw
mov
push
lcall
pop
movl
pushl
inc
inc
add
cmp
jne
dec
and
adcb
and
leave
and
sub
inc
xchg
stos
add
jb
rcrl
adc
pop
leave
cmpsl
jge
aam
inc
dec
cmp
lods
jecxz
jns
movsl
fcoml
sub
push
cmp
jecxz
push
lahf
adc
and
clc
ret
lret
sbb
mov
push
jne
jne
scas
addl
dec
rol
incb
jno
inc
add
shll
dec
ss
inc
lds
stos
inc
jbe,pt
xchg
rclb
aaa
leave
dec
or
add
pop
stos
and
cmp
inc
std
adc
loopne
push
scas
repz
mov
imul
cmp
mov
scas
push
orl
push
pop
shrb
sbb
xchg
cwtl
sbb
push
push
loop
pop
nop
xchg
fistpll
testb
mov
and
outsl
adc
mov
add
xor
add
mov
or
xchg
icebp
mov
xchg
jmp
jns
xor
rcrb
les
call
fs
cmp
shrb
mov
data16
adc
addb
jno
mov
data16
inc
jmp
xor
mov
leave
dec
dec
xchg
push
mov
jmp
cmp
movsl
shl
imul
push
push
mov
push
out
int
aam
adc
inc
add
scas
dec
fmuls
test
jge
pushf
mov
bound
jmp
dec
and
add
cmp
xchg
mov
fdivrs
cltd
mov
shll
pop
popa
pushf
mov
aam
xchg
cmp
lock
sub
loop
ret
into
add
dec
push
cmp
mov
push
xchg
out
and
adc
call
pop
push
stc
outsb
inc
inc
pop
sub
mov
lock
push
call
fs
ljmp
xchg
add
and
cmp
push
scas
jae
adc
fstpl
and
adc
call
cld
insl
out
dec
mov
bound
pop
adcl
xchg
out
or
add
or
sub
cmpb
or
nop
gs
add
bound
stc
xor
adc
aad
add
ret
push
mov
je
and
aad
icebp
shrl
mov
mov
pushf
sub
and
lcall
dec
in
mov
cmp
mov
dec
mov
dec
enter
andl
sbb
or
adc
xchg
xor
lock
pushf
mov
push
fsubs
pop
or
sarb
xor
jge
jbe
fwait
into
and
repnz
cmp
mov
mov
hlt
and
dec
adc
mov
add
and
mov
mov
int3
mov
mov
cmpl
inc
test
mov
andb
aas
xchg
test
and
rclb
je
es
cmpl
push
dec
cld
movsb
int3
and
add
adc
or
js
test
popa
sub
xlat
sub
and
xor
adc
adc
push
inc
jae
fdiv
or
daa
lods
fwait
shlb
inc
gs
fnsave
adc
or
mov
and
fiaddl
stos
mov
dec
xchg
mov
add
dec
fnstenv
pop
or
push
sahf
roll
cli
add
test
and
mov
mov
jmp
xor
jns
mov
roll
cmp
and
ret
sbb
mov
icebp
or
xchg
push
mov
nop
repnz
sub
jnp
in
divb
sub
lea
adc
xchg
pushf
ret
insb
push
out
cmpsb
add
mov
rorb
mov
mov
orl
cmp
fdivl
stc
fisttpll
pop
rolb
nop
mov
pusha
inc
jge
pop
and
fnsave
mov
inc
jl
push
inc
sub
push
adc
nop
or
int3
lds
dec
or
mov
or
pop
test
sub
cltd
mov
bnd
and
xor
je
shr
scas
int3
or
movsb
call
or
pop
lahf
jecxz
movsb
popa
lods
push
in
mov
cltd
push
mov
xchg
call
clc
or
andb
movl
sti
stos
nop
pop
ret
movsb
stc
sti
jae
pushl
or
cmp
adc
je
enter
negb
sub
out
jb
and
fsubs
dec
pop
jnp
gs
scas
sub
jmp
jg
outsb
push
icebp
sub
dec
push
bound
inc
cmp
pushf
pop
lods
sub
insl
cld
add
mov
mov
enter
inc
adc
jo
jmp
popa
push
xchg
mov
adc
push
xlat
push
dec
xchg
xchg
bound
or
push
pushl
mov
lahf
fsts
fldcw
jne
aad
xchg
and
xchg
gs
push
dec
int3
xor
das
add
and
mov
stc
or
and
adc
dec
push
popl
int3
enter
lahf
push
push
pushf
mov
add
adc
inc
aam
sub
adc
je
scas
mov
dec
fldenv
mov
subb
mov
mov
xchg
or
push
stos
testl
mov
pusha
mov
xor
adc
jge
dec
hlt
pop
subl
test
adc
scas
jno
fwait
push
xchg
sbb
jle
cmp
xchg
adc
in
and
cmpsl
call
data16
bnd
icebp
fcoml
and
sub
mov
inc
flds
or
jmp
sub
fwait
pop
bound
ret
rcrb
mov
fcmovne
popf
push
pop
xor
stc
cs
ficoml
mov
jns
loope
outsl
lods
out
xchg
add
ljmp
sub
fs
or
jo
test
fbld
jg
jmp
xchg
mov
mov
inc
push
mov
sub
xor
sub
or
orl
enter
data16
cld
out
add
call
mov
dec
and
xchg
pop
adc
mov
out
rorb
loope
sub
decb
imul
inc
out
lahf
sti
cli
cmpsl
push
imul
xchg
subb
fsubr
adc
fmuls
mov
xchg
xchg
nop
ja
push
stc
sbb
xlat
stos
sbb
xor
pusha
call
inc
xchg
nop
lea
cmp
lret
xor
sti
fstpl
ss
mov
pop
or
inc
cmp
and
clc
jo
andl
loopne
andb
mov
pusha
and
loopne
or
mov
pop
cli
fcmovb
ret
dec
mov
mov
je
loop
inc
scas
jmp
andl
call
mov
or
lcall
or
add
dec
fstl
jp
mov
dec
pop
in
and
jg
and
ret
filds
test
in
scas
aaa
xchg
js
negb
loopne
out
movhlps
sbb
pop
wbinvd
ja
ja
mov
mov
dec
mov
test
shrb
incb
mov
sub
and
cmp
adc
pop
aad
and
mov
or
cmpb
imul
lahf
aam
jno
and
or
shr
adc
sbb
ret
or
jmp
pop
test
push
call
adc
xchg
sbbb
mov
push
mov
xchg
mov
dec
push
xchg
leave
jne
pop
pop
dec
inc
adc
repz
fs
dec
stos
cld
mov
jae
mov
xchg
in
imul
jae
test
scas
mov
aad
adc
mov
mov
test
dec
in
and
add
pop
cmp
repnz
push
dec
mov
inc
movsl
fadds
xchg
or
and
or
cmp
mov
mov
mov
je
test
jmp
into
and
stos
movsb
andl
cs
adc
push
dec
push
or
add
dec
mov
ret
lret
xchg
push
aam
clc
rcrb
out
and
dec
push
or
dec
and
call
fsubl
popa
xor
add
xor
in
aaa
dec
xor
cmp
dec
mov
cmp
and
stos
int
test
xchg
push
pop
clc
inc
inc
pop
xor
sti
movsl
inc
std
subl
aam
fs
and
pop
dec
inc
xchg
addr16
push
pop
inc
pop
sub
enter
push
or
fstps
push
push
stc
rcrb
xlat
shl
lcall
jne
sbb
cld
test
push
loopne
mov
xor
or
jl
pop
out
pop
call
and
jmp
xor
pop
sbb
daa
fstl
cs
adc
and
xor
sub
lock
inc
or
push
push
mov
cmc
int
cmp
cs
jle
nop
xor
fmull
shl
daa
cmp
add
cld
loopne
pop
pop
jmp
mov
pop
xchg
xlat
stos
mov
mov
push
je
xchg
es
sbb
in
in
leave
adc
push
push
pop
mov
sbb
testb
clc
push
sub
dec
and
pusha
mov
cld
inc
jl
and
das
movsb
sub
scas
es
fmull
jl
mov
and
or
fistl
shll
cmpsl
ret
dec
mov
fs
adc
enter
mov
cld
inc
or
mov
inc
inc
out
jae
call
or
or
popa
leave
lea
fadd
fsub
push
or
das
add
repz
bound
daa
cmpsb
cltd
jl
and
xor
lahf
and
and
adc
adc
xchg
nop
hlt
inc
push
stos
sub
xchg
lock
lock
outsb
je
enter
dec
dec
push
fimuls
rcll
mov
js
lahf
pop
pop
leave
adc
mov
push
mov
jg
or
je
dec
xchg
adc
into
out
rorb
fs
or
jmp
mov
icebp
in
fisttps
or
mov
ror
and
add
pop
inc
les
push
mov
sub
jmp
mov
xor
movsb
pop
subb
cld
clc
xchg
cwtl
sub
inc
xchg
jg
lea
sbb
in
jnp
jge
jg
ds
stos
pop
dec
rclb
jno
dec
rclb
jmp
pop
cmp
pusha
cmp
xchg
cmp
mov
cmc
mov
push
cmp
or
pushf
stos
xchg
and
adc
enter
subb
cmp
in
mov
fcoms
adc
push
cltd
pop
lock
enter
sub
lea
repnz
xchg
sbb
fwait
cmp
pop
pop
fwait
adc
loope
xchg
add
fiaddl
xchg
dec
pop
daa
pop
rcll
push
sarb
hlt
movsl
mov
mov
push
push
enter
inc
mov
imul
pop
fisttpll
dec
mov
inc
sub
push
jne
cli
shrl
loop
in
inc
and
jnp
xchg
sub
and
adc
sub
call
dec
inc
lods
dec
mov
lea
xor
xor
cli
adc
data16
out
sub
lahf
pop
ljmp
inc
jmp
dec
mov
jecxz
jmp
add
push
push
negb
shl
notb
xchg
cli
int3
inc
call
add
ljmp
mov
lea
inc
jne
mov
cltd
and
sbb
adc
fdivs
adc
popf
loope
aam
js
rcrb
ficoms
xor
test
lods
lods
jle
cmp
ja
xchg
and
mov
jnp
movsl
push
notl
stos
xchg
pop
mov
or
lret
pop
mov
pop
loopne
mov
es
xorl
mov
hlt
cltd
mov
loop
inc
popf
test
mov
sahf
cld
jno
stos
jecxz
xchg
xor
cmpsl
leave
imul
fs
jg
cmp
jmp
dec
mov
ja
sahf
dec
or
mov
je
call
mov
cmp
fdivs
outsl
les
cmp
shrl
mov
into
mov
daa
sbbl
popf
cmp
das
sahf
in
lahf
add
clc
sahf
loop
popa
daa
dec
ficoml
mov
dec
mov
sbb
cmp
pop
subl
inc
cs
pop
mov
and
push
pop
push
xchg
sub
in
push
pop
movsb
inc
mov
ror
stos
sub
cltd
or
jmp
lea
cli
sbb
andl
lods
and
mov
in
lret
dec
outsl
cmp
popf
jbe
movsb
cmp
xor
xchg
mov
or
cld
pop
or
adc
sub
call
lds
mov
movsb
fwait
outsb
sbb
and
add
sbb
jg
ss
lahf
fiadds
xchg
jae
pop
sti
lahf
xor
sbb
mov
imul
mov
or
and
lahf
pop
pmulhuw
or
jns
sbb
lods
adc
ret
sbb
pop
lahf
test
clc
js
sub
stc
inc
push
shl
mov
push
je
ret
cmp
jmp
mov
stc
jmp
int
push
out
or
hlt
das
cmpsb
mov
jns
loopne
sbb
mov
xchg
jae
xor
jbe
or
rorb
mov
mov
les
inc
clc
in
xchg
inc
mov
shlb
cmp
imul
fcoms
pop
xchg
or
dec
imul
xor
call
dec
pop
lods
call
lods
dec
sbb
cmp
mov
push
or
mov
mov
or
cmc
mov
push
xorb
cltd
stos
lock
mov
add
mov
fistpll
xchg
stos
dec
add
or
xor
push
rol
add
fwait
and
gs
lcall
jns
xchg
les
push
repz
xchg
out
dec
call
jo
sbb
adc
ror
andl
je
fisubl
or
cli
mov
adc
inc
stc
pusha
ret
or
fcmovb
jnp
dec
xor
jnp
mov
test
pop
pop
and
jecxz
pop
jb
jle
and
sbb
adc
fiaddl
inc
insb
fdivrp
dec
cmc
sarl
aam
sub
sub
push
mov
enter
mov
add
je
xchg
xor
push
push
jp
icebp
mov
out
jae
or
hlt
cmc
in
inc
cmpsb
cmp
lock
mov
fildl
lods
pusha
push
adcl
mov
test
pop
add
inc
cld
stos
push
adc
lahf
aam
ja
push
leave
clc
adc
fmull
push
adc
mov
call
cmp
add
inc
fwait
inc
in
mov
jmp
jne
mov
cmpsb
cs
xchg
jp
mov
xor
dec
ret
pop
dec
and
adc
pop
loopne
call
not
or
adc
sarb
xchg
fnstcw
mov
in
shlb
pop
xchg
fwait
jmp
scas
mov
mov
and
call
loope
adc
andb
je
xchg
push
pop
js
scas
scas
mov
pop
int3
movsb
xor
decl
push
dec
push
mov
xlat
ror
pop
std
or
sti
or
xchg
daa
jo
jg
xor
in
and
xchg
in
test
dec
or
fmull
mov
mov
mov
pop
inc
sbb
stos
test
jno
imul
ret
test
add
pop
imul
push
dec
cmp
push
shrb
imul
push
cmpsb
sub
dec
jg
leave
add
aaa
sub
sub
sbb
pop
fwait
cli
pop
outsb
mov
or
jmp
lods
cmp
mov
call
xchg
lock
dec
scas
jg
add
xchg
and
jo
dec
add
dec
cwtl
je
test
xor
push
xchg
inc
mov
mov
popf
and
enter
js
shlb
add
aaa
movsb
rorb
aam
movl
arpl
pop
mov
adc
sti
lret
pop
test
inc
add
jge
test
jne
sub
xor
push
jno
jb
xchg
lods
dec
add
dec
cmpl
jg
lock
mov
and
mov
adc
jb
jmp
lock
hlt
jmp
mov
jmp
jnp
pop
aam
addr16
fmuls
dec
call
popa
scas
jmp
pusha
arpl
ljmp
push
adc
pop
inc
jge
sub
cmpsb
mov
lahf
pop
int
int3
scas
cmp
jae
adc
or
out
adc
fwait
mov
pusha
in
call
mov
jo
xchg
inc
push
xor
sahf
mov
mov
sti
in
inc
mov
test
jge
test
xchg
cld
dec
mov
pop
subl
test
and
or
and
stc
adc
lods
pop
push
push
dec
mov
cmp
cmp
add
jno
dec
rcll
jl
jne
push
add
leave
jl
dec
in
cli
js
fs
inc
out
test
sub
in
out
cmpsl
aad
xchg
sub
fiadds
notl
inc
leave
inc
cwtl
mov
mov
and
mov
mov
mov
push
movzwl
ja
sub
mov
or
sbb
pop
call
testl
push
cwtl
adc
fdivs
push
sti
js
fcompl
imul
mov
adc
sub
inc
and
stos
ret
pop
subl
imul
lock
sbb
lcall
add
test
mov
in
jne
aas
adc
jbe,pn
add
arpl
dec
mov
call
or
lret
mov
fisubl
mov
mov
in
ljmp
sbb
add
adc
cmp
jae
push
fbstp
xchg
loope
pop
outsl
test
test
popa
sub
pop
sub
jmp
pop
rclb
or
push
outsl
rcrl
shl
mulb
pop
jne
pop
jmp
mov
inc
pop
dec
test
leave
pop
clc
cmp
call
jno
push
cmp
shrb
or
mov
outsl
inc
inc
mov
push
mov
aam
lcall
xchg
aaa
xchg
mov
idiv
sbb
cltd
es
mov
pop
mov
push
lea
push
lret
jae
xchg
xchg
adc
add
push
and
lret
jb
test
sbb
mov
jle
jo
mov
jp
sub
testb
imul
add
mov
dec
das
mov
xchg
loop
movsb
inc
cli
or
xlat
or
ficomps
orl
xchg
fdivr
scas
imul
pop
sub
pop
and
mov
mov
sbb
mov
push
push
shrl
out
jmp
cld
mov
fmull
adc
adcb
xchg
push
scas
mov
scas
je
stos
in
adc
add
inc
cmpsl
pop
into
roll
xchg
adc
loop
adc
xchg
xor
add
push
mov
roll
ljmp
daa
je
jne
sbb
and
or
mov
and
xor
daa
inc
lret
add
jbe
cmp
push
pop
cld
pushf
push
push
mov
push
xlat
jge
xchg
cmpsl
fisttps
jmp
mov
mov
mov
jb
pop
lret
or
jns
xorl
cmp
xchg
popa
or
push
cwtl
out
lea
jne
push
pop
bound
incl
xchg
pop
add
lea
add
add
jmp
or
jmp
sub
ja
icebp
jle
out
scas
enter
shl
xchg
push
sub
push
int3
pop
mov
enter
sub
adc
jo
call
xchg
cli
mov
sub
push
jo
push
sub
adc
inc
data16
neg
xchg
pop
dec
data16
and
pop
push
ret
int3
hlt
test
movsb
or
or
hlt
jae
lahf
pop
inc
dec
inc
inc
mov
ja
inc
or
and
adc
pop
adc
xchg
and
adc
add
pop
jecxz
jl
ret
popf
insb
subb
jmp
mov
sbb
inc
cmp
inc
push
add
push
pop
cmp
popf
inc
aaa
mov
sub
fistl
jnp
loope
mov
jg
popa
and
adc
or
pop
push
scas
mov
stos
in
lahf
jae
shll
mov
jmp
and
popa
jle
dec
lret
divb
mov
and
mov
and
or
jbe
adc
mov
sub
inc
sbb
aas
jg
or
andl
ja
jg
dec
mov
jl
test
mov
inc
ds
stc
xor
test
std
nop
jb
add
and
aaa
movsb
test
aas
fs
mov
inc
jns
adc
int3
frstor
iret
addl
nop
adc
adc
cmp
adc
inc
adc
je
aas
push
iret
mov
xchg
in
sub
adc
int
mov
cli
stos
pop
xchg
mov
fs
inc
cmp
jl
shll
xor
xor
mov
stos
adc
imul
mov
xor
cmc
push
push
ret
or
lea
sub
pop
cltd
pop
daa
xchg
mov
jle
inc
imul
ret
pop
imull
jge
push
and
daa
add
call
ss
push
test
test
clc
add
add
xchg
add
pop
aad
jl
adcl
pop
inc
sbb
ror
and
or
clc
mov
test
jb
lea
psubb
cmp
rcrl
sbb
inc
or
fcomps
xor
popf
jb
xchg
and
setne
push
jmp
pusha
nop
inc
call
out
add
sub
sbbl
dec
and
fimuls
mov
mov
push
test
lcall
je
or
loopne
or
add
mov
sbb
push
or
outsl
int
in
sub
pop
mov
mov
and
jge
and
fs
movsl
cli
sub
pop
test
iret
cmp
xchg
adc
jecxz
ret
adc
mov
or
cmp
daa
push
mov
or
cltd
dec
jge
ror
jo
sbb
imul
push
sub
cmp
mov
sti
cs
push
cmp
dec
fs
call
pop
lret
loopne
jp
xchg
add
shll
pusha
ljmp
push
adc
and
and
pop
push
in
push
jne
fidivrl
push
fisubl
inc
jmp
mov
dec
nop
div
inc
cmp
dec
pop
cmpsl
push
push
mov
push
and
push
addr16
out
jno
gs
inc
fistps
ret
sbb
mov
into
push
add
mov
pop
ljmp
aas
out
mov
lret
dec
dec
iret
mov
and
or
inc
adc
popa
mov
shlb
rdmsr
or
sbb
lea
jmp
cwtl
ja
call
mov
xadd
add
and
call
mov
imul
mov
pushl
sub
or
pop
outsl
call
fistl
and
push
aas
fisttpll
test
out
ror
cs
and
push
mov
call
xchg
popa
pop
test
and
les
out
in
cmp
test
pop
jecxz
cmp
or
dec
push
outsb
loop
sub
pop
sbb
ja
imul
cmp
icebp
mov
sbb
ret
aas
mov
js
aas
pusha
inc
aas
dec
inc
aas
cmp
sub
push
sahf
pop
jmp
sub
nop
aam
test
scas
test
xchg
int3
mov
aad
inc
adc
xchg
adc
je
or
addr16
push
iret
sub
outsl
xor
sub
scas
mov
aad
loopne
sbb
scas
dec
pop
call
jnp
in
pop
xchg
push
stos
push
push
adc
add
dec
mov
in
rcrl
jo
xchg
in
mov
aam
adc
add
or
jb
push
dec
rclb
scas
push
xor
cmp
fists
adc
sbb
xor
dec
mov
enter
pop
lahf
ret
fimull
pop
jge
jp
add
outsl
sub
cld
pop
das
std
or
std
movsb
leave
and
mov
mov
sgdtl
adc
shll
lcall
call
and
mov
dec
cmc
dec
into
aad
jp
adc
cmp
sub
fwait
mov
lea
xchg
nop
test
jae
mov
adc
std
popf
jmp
pop
mov
cmpsl
insb
cmc
cltd
pop
imull
adc
fistl
ljmp
and
pop
cmpsb
insl
les
cmc
stos
xchg
pop
popa
push
jmp
dec
pusha
push
stc
or
mov
jmp
sbb
push
cld
and
push
vmovsd
cmp
and
push
sub
inc
fcoms
and
dec
xchg
jbe
mov
mov
ljmp
popf
mov
stc
adc
jne
xlat
ret
sub
icebp
xor
out
cmp
jp
pop
xchg
add
lds
call
or
outsb
ret
cmp
adc
jmp
mov
aad
adc
ds
test
fs
mov
push
add
jne
push
pop
push
mov
fstpl
fcompl
sbb
pop
dec
adc
sarb
nop
mov
or
or
call
inc
popf
push
xchg
cmp
outsb
mov
testl
sub
push
push
pop
test
jne
cld
call
lea
adc
ds
and
cmp
in
mov
int
imul
or
sti
jge
inc
inc
add
fistps
mov
lods
dec
and
inc
or
sbb
adc
mov
cli
cmc
push
gs
push
mov
cmp
inc
or
stos
dec
jnp
adc
ficomps
or
in
and
jmp
out
xor
xchg
dec
sahf
dec
or
out
inc
js
std
and
mov
mov
mov
daa
mov
lods
lcall
movl
mov
xchg
and
nop
clc
lret
nop
fmul
fsubrs
movsb
imul
push
xchg
xchg
xchg
xchg
xchg
clc
cmp
les
xor
and
pop
lods
push
ja
jge
sti
and
xor
xchg
add
mov
add
adc
mov
xchg
add
adc
repz
jae
ds
lock
and
xor
pusha
dec
mov
ficoml
push
int3
or
mov
cvtps2pi
inc
cmp
mov
je
ja
sub
cmpsb
push
movsl
jne
add
add
or
inc
push
addr16
and
xor
test
pop
scas
cmpsb
mov
mov
jnp
subl
or
cltd
dec
push
and
inc
cmp
stc
outsl
xchg
div
push
add
loope
test
mov
rcll
add
test
mov
adc
insb
xor
inc
add
int3
mov
push
adc
dec
shlb
aas
call
xor
je
cs
cli
lods
lcall
sbb
dec
jle
cmp
sbb
dec
movsb
sub
jnp
xchg
pop
into
dec
movsl
pop
sbb
das
fmull
mov
mov
pop
xor
xchg
mov
pop
adcl
popl
popa
fs
imul
insb
push
sub
sbb
push
cmc
mov
push
addb
mov
push
push
movsb
xor
addb
push
call
pop
orb
imul
or
mov
sarb
decl
int3
push
shlb
test
lret
test
sub
sbb
and
insl
mov
push
gs
jle
mov
adc
pusha
fucomi
adc
inc
xlat
test
movsb
mulb
test
shrb
loop
mov
mov
and
jle
mov
pop
out
xor
and
lret
adcl
and
hlt
mov
sub
and
jbe
movswl
sbb
icebp
aas
aaa
push
shl
or
lcall
ret
or
or
pop
pop
inc
pop
loop
dec
ret
and
xor
shlb
stc
incl
push
subb
xchg
push
mov
xlat
pushf
or
jnp
pop
dec
cwtl
je
xchg
imul
mov
sub
fs
je
and
mov
imul
add
cmp
rcrl
les
sahf
pop
fldenv
adc
mov
xor
inc
sbb
mov
movsl
fs
xor
jle
pop
imul
xchg
push
cs
loop
push
sahf
rorl
cltd
test
and
sub
shr
in
ds
jo
xor
and
push
call
pop
fwait
xor
push
dec
das
sub
mov
jge
inc
mov
push
leave
test
adc
ret
icebp
int
movsb
loop
or
sbb
ljmp
push
inc
call
cmp
and
cmp
int3
aad
push
xchg
adc
and
cmp
mov
aad
notb
jmp
sub
mov
pop
fadds
stc
lahf
lcall
mov
sub
cs
jle
push
sub
scas
out
pop
lret
les
inc
mov
loopne
sbb
sub
mov
insl
aas
adc
fimull
je
adc
sub
out
stos
outsl
test
cli
addr16
fwait
mov
push
and
cmp
adc
mov
cmpsb
inc
add
nop
icebp
bound
pop
test
pushf
or
je
or
jmp
cltd
movsl
push
cld
add
dec
cli
divl
push
pop
es
lea
jmp
mov
rolb
scas
js
bound
mov
sbb
xchg
mov
pop
int3
and
imul
pop
nop
pushl
jp
adcl
mov
and
xchg
push
scas
jmp
call
add
into
daa
push
sbb
xor
mov
mov
das
ja
addb
pusha
xchg
or
negb
xchg
mov
jns
popf
fists
mov
cmc
test
inc
sbb
clc
cmc
lods
mov
fwait
pop
jae
pushf
int3
insl
push
inc
cmp
and
xchg
mov
xchg
and
jno
icebp
pop
cmp
mov
add
xchg
sti
sarl
fmull
jmp
jg
mov
in
lods
stos
mov
test
decb
mov
imul
xchg
pop
pop
icebp
dec
mov
xchg
add
ds
out
std
das
ds
xchg
add
sbb
cmp
mov
or
or
bound
insl
xchg
xor
pop
leave
xor
ret
je
mov
adc
inc
cmpl
fnstsw
jmp
leave
jge
imul
hlt
das
push
imul
and
jmp
lret
insb
cmp
imul
inc
jo
sbb
int
xchg
push
je
or
in
xor
add
inc
sub
dec
jle
mov
outsl
xor
jl
cwtl
loop
push
add
roll
or
mov
push
xor
lret
in
push
and
int
push
loopne
or
hlt
jge
and
pop
test
test
dec
pop
shll
loope
andb
int
scas
inc
or
inc
enter
sti
sarb
jg
decl
rcl
ja
je
movsl
sub
in
cmc
data16
push
push
sub
mov
jge
mov
int
ficoms
xchg
sbb
je
xchg
repz
add
sub
sbb
mov
pusha
andb
cwtl
mov
aas
mov
fisubs
push
lea
lret
inc
enter
lea
out
sarb
pop
jmp
mov
or
jmp
rol
xor
notl
ss
mov
xchg
pop
lods
int3
daa
adc
cmp
push
pop
cmp
xchg
lret
je
inc
mov
jp
jne
les
add
rcrb
cld
and
sub
hlt
mov
sub
xor
and
jmp
icebp
rcll
pop
jb
mov
aam
movsl
dec
mov
int3
leave
push
xchg
adc
push
rolb
adc
mov
ret
scas
pop
cs
in
xchg
and
push
scas
push
loopne
xchg
mov
por
pop
je
into
and
decb
je
adc
jmp
mov
and
or
dec
jnp
les
cmp
or
inc
xor
loope
and
lock
jnp
icebp
push
je
popa
xchg
inc
xchg
jb
inc
inc
xchg
in
cmp
repnz
stos
push
rolb
push
xchg
pop
fldl
or
and
pop
or
outsl
outsl
and
and
pop
sub
inc
cmp
push
je
adc
jge
bnd
cmc
stc
int3
or
and
xor
sub
and
jo
push
adc
mov
sbb
add
or
jbe
enter
xor
sub
or
jmp
and
clc
jae
in
test
xor
insb
loopne
scas
dec
and
dec
inc
mov
mov
cmp
and
bndstx
push
addb
inc
jg
and
aam
test
sbb
outsb
mov
aad
adc
xchg
adc
jecxz
adc
adc
adc
add
add
lret
add
xor
mov
das
test
ret
xchg
inc
in
fdivrp
fwait
stos
add
sbb
std
adc
lods
add
mov
cmc
pop
mov
loope
fs
jmp
xchg
xor
adc
inc
dec
call
stos
push
shrl
jl
mov
enter
shll
and
lret
enter
fcmovnu
push
adc
dec
lret
mov
add
cmp
out
cwtl
lds
test
lea
cmp
mov
in
push
shr
add
out
decb
cmp
push
jbe
or
cltd
push
mov
sub
sub
fisubrs
or
dec
push
inc
iret
push
push
shll
or
sahf
xchg
test
in
pop
dec
inc
test
jecxz
rclb
sbb
cmpb
adc
add
pop
cli
sub
and
jae
sbb
cmp
sbb
cmp
or
sbb
popa
sti
xchg
sub
sub
and
sbb
stos
int
test
sbb
push
adc
test
jne
rorl
push
data16
inc
xchg
clc
je
lret
push
ja,pt
mov
test
test
mov
addr16
dec
nop
or
int
jmp
pop
test
mov
xchg
add
xor
mov
mov
ljmp
scas
xor
jmp
call
mov
adc
cmp
repnz
ds
sub
add
test
popf
fsubrp
lret
int
cmpsl
ja
dec
shll
adc
test
scas
add
push
push
xor
push
and
mov
sbb
and
jnp
hlt
data16
iret
xlat
inc
adc
call
cmp
orb
cmpsl
mov
add
mov
jne
push
inc
imull
fsubr
outsl
mov
pop
add
jge
or
or
mov
rcr
or
push
mov
xor
lea
mov
add
sbb
or
inc
fmull
enter
out
daa
jp
daa
jge
sarb
cmp
dec
and
ds
pop
roll
push
or
lret
and
dec
and
outsb
jae
arpl
or
cmp
mov
sub
outsb
lcall
loop
test
xchg
pop
inc
xchg
jp
cwtl
ss
sub
adc
test
adc
push
push
push
clc
push
inc
insl
push
and
lret
je
mov
jmp
aad
imul
lock
js
push
adc
popa
sbb
push
pop
push
xor
and
jns
mov
sti
add
test
sti
lcall
dec
push
fdivr
lret
push
divb
or
je
adc
mov
sbb
cltd
aaa
cmpsb
adc
outsb
push
popf
ja
fsubl
rcrb
push
inc
push
dec
hlt
test
push
inc
sbb
jp
fs
cmp
in
stc
insb
inc
dec
sub
les
and
xchg
aas
mov
pop
aam
jg
into
mov
mov
je
or
xor
test
xchg
adc
movsl
mov
jns
movsl
loopne
jne
nop
cmp
sbb
ja
or
sbb
or
sub
out
out
jnp
lods
mov
mov
dec
cmc
inc
stos
call
jmp
sbb
pop
shrb
sbb
stos
adc
in
enter
aaa
flds
sbb
lea
je
nop
arpl
or
cmp
jg
adc
jp
shll
mov
movsb
js
loope
xchg
pop
and
mov
push
adc
cmc
mull
out
hlt
mov
or
and
xchg
roll
in
hlt
jb
ftst
jmp
mov
out
cld
and
and
cwtl
roll
push
lahf
imul
jne
push
lret
inc
mov
or
in
ror
movsb
or
mov
add
adc
jo
std
or
adc
or
add
rorb
ljmp
repnz
jecxz
mov
stc
mov
insb
daa
jbe
daa
inc
loopne
fs
enter
outsl
int3
pop
push
cmp
sub
adc
jg
in
fadd
add
cmc
dec
xor
js
jmp
xor
jmp
or
inc
mov
test
leave
push
icebp
mov
sub
push
orl
ret
or
add
dec
xchg
les
outsl
dec
mov
mov
sbb
cmp
fs
fildll
loopne
test
ljmp
xchg
imul
aas
push
pop
add
imul
pop
fimuls
jmp
xchg
aam
lds
mov
push
fidivrs
mov
or
fs
lret
test
mov
cmp
xchg
dec
push
jno
mov
jne
cltd
mov
push
xor
push
cmp
xor
push
and
in
call
xchg
jo
mov
add
add
and
or
lahf
cld
ucomiss
div
inc
or
je
iret
sbb
imul
push
fisttpll
ljmp
mov
push
hlt
sub
push
xor
or
cmp
test
adc
in
or
rcrl
mov
shrb
jne
pop
mov
pusha
stc
jb
int3
rcl
enter
int3
sub
in
scas
mov
stos
inc
shlb
and
push
push
adc
pop
cmp
int3
push
std
out
inc
clc
repz
mov
mov
sbb
pop
dec
scas
fisubrl
aad
xchg
sub
je
xor
je
cwtl
enter
mov
test
test
testl
lahf
outsl
mov
aaa
push
loope
dec
pushl
in
mov
imul
xchg
outsl
push
xchg
sub
mov
les
sti
xchg
popf
cltd
aas
in
and
push
shll
pop
mov
push
mov
sbb
or
sub
jg
fs
leave
sahf
je
loop
dec
mov
es
fsubl
or
decl
sub
or
sarl
adc
push
jae
outsl
sub
test
bound
loope
movsl
fs
inc
repz
stc
lret
jmp
sbb
add
scas
add
subb
sub
or
mov
push
daa
sbb
and
aas
or
mov
add
jmp
jb
mov
sub
call
push
cwtl
cmpsb
and
shll
stos
cmp
jbe
call
repz
movsb
addb
daa
adc
mov
inc
push
and
and
test
mov
jne
cmp
xor
cltd
xchg
inc
mov
pop
sub
mov
lock
cmp
mov
mov
xchg
dec
lret
jne
xor
inc
jae
cmp
fildl
sbb
sbb
xor
nop
dec
inc
dec
sbb
mov
dec
imul
push
adc
dec
lea
je
push
les
xor
out
movsl
jb
inc
adc
sahf
or
push
sub
std
pop
imul
leave
jnp
ret
jns
stos
insb
dec
sub
movsl
mov
sub
sbb
and
sti
mov
inc
adc
leave
push
repz
xor
nop
into
pusha
jmp
test
in
shr
std
push
sbb
inc
jge
cmp
lret
xor
jb
mov
rcrb
les
call
mov
push
xchg
sbb
inc
pop
or
stos
jl
js
xor
int
and
out
mov
loop
mov
dec
xor
push
adc
ret
jl
imul
pop
add
dec
sbb
push
push
stos
pushf
mov
movsb
outsl
dec
jmp
icebp
push
push
cmp
push
mov
xor
mov
lock
or
dec
mov
and
lods
loop
enter
cmp
pop
call
xor
dec
shrl
sbb
or
call
pop
fisubrs
xchg
gs
or
sub
xor
sbb
xor
jnp
addr16
push
ret
pop
jmp
enter
adc
scas
and
aad
mov
adc
lahf
lret
lods
subl
das
pop
cmp
mov
or
push
das
push
xchg
dec
pop
dec
mov
jne
mov
test
push
jle
andps
adc
add
addr16
jns
dec
aas
jmp
mov
xor
pop
ljmp
loope
jle
xchg
test
in
arpl
sub
jbe
clc
lahf
xchg
pop
or
and
aas
mov
nop
add
sbb
or
cwtl
cmp
add
push
xchg
mov
or
dec
mov
add
loope
cld
flds
stos
or
test
or
sbb
movsb
xor
xor
xlat
rol
std
inc
pop
lahf
add
sbb
adc
mov
lods
cmp
xchg
cmp
sbb
dec
pop
repnz
jb
sub
push
pop
cmp
xlat
enter
repnz
popf
jg
inc
sbb
lret
inc
xchg
xor
jp
jne
fmuls
sbb
lahf
jne
push
dec
xor
mov
push
xchg
or
sub
cmp
dec
test
cmp
cmpsb
mov
mov
je
inc
mov
jmp
and
sbb
pop
repz
cltd
cmpsl
mov
and
in
stos
and
sub
sub
rcrb
enter
in
das
and
pushl
shrl
dec
insb
cmp
adc
mov
dec
push
lods
pushf
and
mov
xor
push
sub
jmp
jl
push
sbb
and
xchg
jle
jecxz
jp,pt
xchg
dec
daa
jmp
mov
jne
fcmovbe
cs
cmp
sbb
xor
aad
in
test
adc
loop
fadd
sub
mov
push
adc
inc
or
popf
jp
lea
dec
push
or
add
jo
testb
sub
jnp
lahf
push
push
test
stc
adc
pop
dec
fdiv
in
cmpsl
jb
outsb
push
sarb
push
shr
mov
call
stos
pop
pusha
pop
cmp
ljmp
fdivr
cmpsl
mov
movsb
xchg
push
std
lcall
cwtl
ret
push
and
cmp
fdivrs
int
jle
dec
shlb
or
jl
mov
jp
sbb
cmp
dec
in
dec
imul
jl
bound
nopl
or
sarb
sarl
xchg
inc
das
shrb
xor
mov
stos
mov
xchg
addb
daa
in
cmp
test
mov
clc
inc
adc
sub
out
sub
adc
push
in
sub
stos
cmp
mov
dec
mov
adc
lea
insb
mov
mov
pop
mov
dec
cli
adcb
lcall
repz
in
mov
sub
or
scas
inc
punpckldq
ss
enter
push
imul
xchg
sbb
sub
testl
cltd
mov
mov
adc
sbb
push
push
es
jb
mov
stos
fnstenv
je
mov
cmpsl
dec
imul
les
mov
xchg
adc
sub
popa
dec
repnz
cltd
sub
pop
xor
cmc
sub
push
jae
xor
in
loope
jbe
mov
jmp
sbb
xlat
icebp
popf
lret
add
jmp
subl
dec
lahf
jge
sub
push
xchg
push
mov
lods
sub
sub
fxch
in
and
mov
add
and
inc
push
jmp
and
jl
jge
xor
xlat
pop
or
and
flds
cmp
inc
sbb
jg
fdivs
dec
push
push
movsl
mov
hlt
push
push
and
sub
adc
shl
cmpl
gs
rcrl
dec
cmp
push
dec
test
decb
in
adc
mov
mov
sbb
jne
xchg
adc
cmp
hlt
jmp
outsl
and
add
jl
sbb
call
mov
cmc
add
xchg
das
push
xchg
jae
or
sub
cmp
xchg
je
push
sbbl
jmp
jbe
in
push
cmp
shr
add
and
xor
popf
repnz
sbb
jno
add
mov
jae
push
cld
cmpsb
mov
adc
call
xor
lahf
into
ja
hlt
jns
sub
or
fs
xor
push
cmp
push
lret
and
js
adc
lock
push
daa
add
ljmp
stc
test
pusha
jmp
andl
inc
aam
add
and
push
adc
cmp
sbb
iret
or
enter
enter
sbb
daa
inc
pop
and
imul
sub
sbb
adc
xor
stos
adc
jmp
outsl
mov
and
jmp
add
movsl
push
mov
rcll
bnd
push
shll
in
mov
pop
stos
xchg
push
adc
cld
jo
push
push
add
xor
xchg
inc
imul
movsb
loop
data16
xor
bound
mov
add
adc
test
or
cmc
in
and
or
mov
test
inc
insb
push
sub
push
fs
push
rol
andl
xor
mov
je
int3
push
xor
pop
lock
stc
in
stc
xchg
orb
dec
repz
xchg
stc
lock
lcall
dec
inc
movsl
or
jle
sub
outsl
test
fs
je
pop
mov
scas
mov
dec
push
mov
or
movsl
aad
pushf
sub
repz
lods
inc
and
data16
and
test
sub
mov
addr16
inc
ljmp
negb
sub
adc
sbb
mov
dec
pop
mov
cmp
push
adc
xor
or
jg
aas
pop
add
add
jbe
and
jbe
mov
and
cmpsl
xchg
jno
jns
inc
inc
daa
mov
xor
out
or
mov
lret
test
adc
xchg
orl
mov
ljmp
call
ret
icebp
cmp
ja
es
and
rcrb
cld
xchg
insb
xor
push
sti
popf
cltd
add
mov
jecxz
jne
jb
cmpsl
ja
out
xchg
out
add
das
je
mov
cmp
les
mov
pop
faddl
adc
sub
xchg
push
xchg
stos
inc
mov
jne
imul
mov
ja
repnz
mov
and
and
lahf
xchg
mov
xchg
xor
addb
push
fistpll
pop
jmp
mov
int3
ss
adc
push
aas
push
or
outsl
xchg
data16
adc
aaa
add
sub
adc
iret
adc
cmp
sub
sub
lods
jl
je
push
sbb
push
mov
mov
push
lods
ret
or
dec
lock
adc
les
pop
decl
xchg
mov
add
gs
outsl
inc
mov
aam
or
lock
mov
lods
pop
add
xor
jg
nop
in
adc
lods
inc
mov
jnp
call
jno
adc
push
mov
push
push
ljmp
or
call
leave
pop
ja
rcrb
adc
push
cmp
je
pop
adc
cmp
and
das
gs
mov
inc
movsb
or
or
mov
sub
xchg
scas
imul
add
shlb
lahf
inc
jnp
loopne
and
jo
mov
jmp
fdivrs
ret
cmpsl
sti
aad
int
inc
mov
aad
dec
sub
orb
scas
movb
ds
add
xor
out
icebp
lea
das
test
xlat
jne
mov
pop
push
pop
imul
aaa
cmp
and
mov
adc
pop
inc
rcrl
cld
jp
je
lcall
cmp
xchg
cwtl
pop
jmp
pop
es
je
leave
in
or
test
inc
lcall
mov
or
push
pop
add
or
scas
sti
jno
rcrb
mov
loopne
xchg
push
andl
jmp
or
clc
fmul
rorb
test
push
into
aaa
rorl
push
mov
sub
sbb
scas
hlt
jo
or
je,pn
adc
aam
dec
xlat
mov
mov
pop
les
xor
jge
sub
cli
xor
pop
addb
ljmp
jbe
dec
pop
jmp
mov
sahf
sbb
arpl
or
add
addb
rorl
mov
jmp
jge
pop
dec
cmp
jns,pt
inc
shrl
cmp
and
pop
add
and
dec
adc
iret
popa
sub
ss
mov
es
xor
xchg
fmuls
jl
and
mov
int
jmp
mov
test
enter
push
aad
lret
std
out
addb
xchg
and
mov
xchg
mov
dec
xlat
data16
adc
and
mov
data16
push
lcall
or
push
arpl
lret
shll
pop
pop
mov
dec
gs
dec
dec
adc
pop
cmp
ss
mov
scas
push
gs
sub
jmp
and
mov
mov
test
pop
jb
dec
sub
gs
ficoms
or
rcrb
sbb
inc
adc
sub
mov
es
sub
adc
mov
in
icebp
sbb
jge
jno
fsubrs
or
clc
cmp
lods
lods
fists
test
xor
neg
push
adc
or
test
inc
jns
ss
int
incl
sub
outsl
inc
jne
xor
cmc
stos
pop
insl
push
pop
testb
inc
jle
sub
xor
mov
mov
je
add
mov
clc
fidivs
dec
hlt
mov
or
mov
ret
push
inc
rcrb
inc
push
call
pusha
stos
test
or
arpl
scas
push
in
sbb
mov
enter
imul
dec
pop
xchg
dec
jecxz
add
sbb
call
cld
or
push
adc
lcall
ret
insb
push
pop
jmp
sub
scas
cltd
mov
cs
cmp
imul
adc
out
add
pop
pop
mov
jg
sbbl
sbb
or
test
and
mov
or
cmp
stc
sbb
lea
adc
subb
pop
xorb
jle
pcmpeqb
inc
repz
pop
nop
pop
and
add
mov
jno
jl
or
pop
gs
imul
test
movsl
or
or
adc
mov
mov
mov
daa
adc
add
call
clc
dec
adc
pushf
mov
or
lock
jno
sahf
dec
pop
cmp
inc
mov
rorl
adc
or
or
or
orl
mov
fists
mov
jmp
jecxz
and
test
imul
stos
sub
cmpsb
fsubs
push
add
adc
pop
cmp
push
std
or
push
dec
or
push
jg
adc
int
shll
jp
cli
push
cmp
cltd
cld
insb
push
adc
xchg
sarb
stc
hlt
cmpsl
lcall
jmp
test
xor
dec
imulb
and
add
cwtl
cmove
cs
je
leave
xor
or
sub
push
leave
jno
or
cltd
btc
cmp
les
push
inc
je
dec
or
dec
jne
sbb
dec
jg
loop
pop
loop
jo
mov
adc
call
push
mov
adc
and
mov
add
push
loop
gs
adc
cmp
inc
jb
xchg
or
push
jns
leave
aam
dec
xchg
imul
call
cmp
hlt
popf
in
pusha
xor
and
xor
pop
outsl
into
sub
sbb
add
dec
mov
ret
mov
lret
out
inc
sub
int3
adc
pop
xchg
and
dec
push
and
iret
sbb
jge
fwait
cmp
mov
mov
les
sub
rdpmc
aaa
cmp
xchg
pop
sti
sub
xchg
push
fistl
push
call
lahf
data16
repz
dec
add
xor
jl
inc
push
dec
hlt
mov
lods
inc
xor
or
loop
leave
jbe
scas
aad
cli
adc
and
call
or
xchg
sub
out
pop
xor
pop
les
mov
les
add
push
push
orb
push
sub
movsl
mov
arpl
fnstenv
sbb
imul
push
pop
or
sub
js
jge
pop
lahf
ret
popa
mov
jp
int3
lret
and
aad
fadds
loopne
clc
pushf
sti
cmp
jecxz
enter
cmp
xor
cmp
shl
jle
jns
mov
addl
jmp
jge
sahf
mov
sti
popf
push
or
fldcw
and
das
mov
lock
shlb
lods
adc
dec
adc
in
dec
adc
sarl
pop
inc
dec
cli
dec
js
cmc
dec
and
pop
dec
jmp
pusha
push
call
add
in
cmp
fwait
fs
mov
enter
push
ljmp
cwtl
mov
lea
inc
add
clc
movsl
and
sti
xor
clc
je
repnz
popa
sbb
stos
mov
sbb
loopne
repz
repnz
loopne
ja
dec
adc
cmp
loopne
iret
rcl
iret
rcl
test
iret
nop
ror
adc
jo
and
jns
jg
or
popa
movsl
sub
cmc
cmp
pop
sbb
adc
pop
xor
push
adc
ja
fstpt
outsb
rolb
movsl
mov
mov
push
repz
cs
mov
add
test
xchg
lods
push
jne
mov
test
outsb
adc
cmp
pop
call
imul
xor
repnz
or
int
jmp
jp
hlt
sub
mov
mov
aad
push
mov
jmp
dec
test
test
decl
push
dec
xorl
cld
xchg
loope
movsb
pop
cli
mov
mov
fdivs
fdivr
mov
ret
mov
pop
xchg
leave
mov
push
jmp
lods
pop
out
or
out
lea
cmc
dec
xor
dec
jae
ret
inc
in
push
test
dec
pop
adc
push
cmc
mov
sti
and
jno
pop
je
or
mov
and
sbb
movsb
xchg
test
adc
pop
jmp
mov
clc
mov
inc
lea
mov
dec
sbb
cmp
ja
popf
rcrl
adc
jecxz
and
call
fisubs
mov
pop
insb
loop
and
mov
mov
push
test
mov
add
or
jmp
stc
es
or
ljmp
daa
cli
sub
and
lock
and
andl
jmp
or
daa
jmp
test
sub
cld
fisttps
sbb
mov
enter
lock
push
test
inc
test
das
cmpsb
mov
in
ret
movsl
sti
inc
and
sub
test
sbb
ljmp
sbbl
mov
xchg
sti
adcb
cmp
nop
and
jns
sub
bound
push
in
ds
test
or
mov
orb
in
pop
add
sbb
movb
mov
xchg
adc
mov
mov
fnstenv
cs
adc
mov
and
les
inc
adc
in
adc
je
stos
and
aad
sbb
adc
sub
inc
loopne
sbb
mov
jl
inc
mov
or
in
rcrb
cmp
iret
invd
or
daa
sti
lret
dec
clc
dec
repnz
iret
and
adc
nop
popw
mov
mov
pop
jmp
mov
inc
or
popf
dec
ss
daa
fmuls
lahf
loopne
xchg
ljmp
mov
popf
das
adc
data16
pop
push
loopne
mov
push
jmp
or
xor
lock
or
dec
jmp
cwtl
out
mov
fwait
sbb
adc
pusha
mov
xor
mov
out
cmp
cld
movb
sbb
fmuls
enter
roll
sbb
int
xchg
mov
gs
std
adc
ljmp
cli
push
add
pop
fs
jecxz
push
mov
popa
or
js
dec
adc
loop
sbb
mov
fisttps
fcompl
and
ja
stos
and
shlb
pop
mov
in
and
stos
pop
out
adc
jle
dec
mov
mov
insb
movsl
pop
jg
jbe
mov
mov
push
pop
jne
pop
fiadds
dec
call
xor
outsb
jb
fs
cmp
mov
jge
or
popa
popf
and
pop
daa
jmp
push
js
gs
loope
into
loope
mov
cmp
movsl
mov
mov
inc
std
outsb
or
sub
jae
test
fldcw
push
sbb
lods
pop
xchg
add
xlat
push
ljmp
pop
test
test
repz
xor
and
sbb
jmp
lods
pop
test
cmpsb
cld
lahf
sbb
inc
sub
jge
icebp
daa
pop
scas
lret
jbe
inc
mov
and
mov
xchg
arpl
addb
jne
int3
push
push
das
xlat
mov
push
daa
lahf
movsl
divb
cmp
sub
sbb
push
test
call
pusha
notb
dec
inc
cmp
dec
push
mov
aas
mov
inc
jbe
out
add
cmp
rcrl
movsb
aad
pop
rol
or
shl
mov
xor
xchg
loope
jmp
mov
clc
dec
xor
and
pop
stos
mov
faddp
mov
mov
lcall
cmpb
lea
push
es
fxch
push
sub
mov
clc
or
sbb
xchg
jecxz
sub
test
movsl
outsb
mov
mov
sbb
rorl
cs
in
into
or
xor
lahf
cmp
add
icebp
adc
lea
clc
mov
push
mov
and
jp
dec
mov
and
leave
sbb
f2xm1
or
inc
fstpl
and
popa
dec
lock
cmp
out
loope
adc
sub
xchg
cmovg
mov
cwtl
lods
push
outsl
inc
mov
jecxz
call
pop
mov
sub
fwait
add
dec
mov
dec
mov
jp
add
push
cmp
jne
mov
jmp
pop
or
inc
jbe
push
cmp
mov
out
dec
das
mov
push
mov
repz
cmp
xlat
lea
popf
clc
enter
adc
in
jmp
mov
call
or
mov
out
pusha
cmp
je
push
call
xor
cmp
cmp
in
or
add
andl
dec
push
xor
cld
pop
stos
push
or
das
dec
mov
jmp
push
xor
cmp
jl
dec
lea
dec
adc
add
sub
inc
sbb
repnz
xchg
mov
stos
sahf
mov
sub
in
jne
cmp
jne
jmp
inc
out
dec
cld
dec
les
inc
scas
sbb
or
fsubrs
mov
dec
movsl
jnp
test
bound
or
add
mov
je
pop
xchg
jmp
fidivl
leave
xor
lods
dec
pop
mov
jg
xchg
pop
mov
dec
pop
sahf
fs
decl
clc
mov
in
push
xor
sub
cmpsl
mov
jmp
popf
jle
jmp
and
ret
je
push
arpl
jecxz
pop
and
clc
add
inc
test
adc
scas
int
and
push
add
cmp
adc
inc
dec
addl
adc
in
std
test
or
or
jle
push
das
test
adc
pop
and
lods
pop
mov
in
push
daa
jne
aad
fwait
push
pop
fstpl
stc
jle
jge
jl
push
icebp
cmp
lahf
call
loope
test
pop
test
xor
xor
cmpsl
cld
and
daa
xor
in
stos
cmpsl
iret
mov
jae
loop
cmp
enter
mov
jle
xchg
xchg
xchg
xchg
mov
adc
hlt
or
sub
mov
or
inc
gs
and
cld
test
rcrl
or
push
inc
adc
cld
and
and
bound
adcl
jge
or
shlb
int
mov
dec
sub
int
dec
cmp
sahf
jnp
xchg
jae
sbb
mov
or
lea
outsl
jge
clc
cwtl
stos
jge
cmp
mov
jbe
and
stos
mov
pop
mov
aaa
push
inc
mov
xor
clc
jne
xor
pmullw
aas
inc
cmp
mov
ds
sub
int
cmp
loope
mov
mov
roll
sti
cmp
sub
ja
cmp
mov
je
call
push
adc
dec
scas
imul
jne
ret
fisttpll
push
inc
mov
mov
sarb
and
sub
adc
enter
scas
or
inc
or
mov
and
loop
mov
stc
sub
and
sbb
push
cwtl
add
das
xchg
pop
cmpsb
repz
sbb
and
test
or
fimuls
movsl
hlt
jnp
icebp
loopne
jge
mov
aaa
jne
lret
fs
cwtl
mov
pop
adc
mov
or
iret
xchg
cli
xchg
and
push
popf
inc
fdivs
call
xor
cli
dec
lds
xchg
enter
push
pop
push
ljmp
push
adc
jmp
xor
xchg
test
cmpsl
iret
jno
or
jmp
iret
cli
dec
pop
lcall
jmp
dec
xchg
mov
dec
cmc
xchg
mov
loop
iret
cli
rorb
sbb
leave
cmp
pop
not
sete
adc
add
inc
add
roll
pop
int3
or
mov
sahf
jmp
or
fsubs
arpl
in
ds
mov
fcoml
xchg
mov
call
pop
xor
or
mov
mov
mov
fsubl
pop
add
ss
insl
or
lret
xor
mov
repz
cmc
xchg
fwait
pop
and
lock
call
dec
adc
xchg
and
cmpsl
inc
xchg
jl
push
daa
and
cmp
xor
leave
dec
or
mov
push
xchg
outsl
inc
icebp
test
sub
or
cmp
jp
scas
xchg
or
fistps
push
bound
ficoms
xchg
mov
xor
cld
inc
mov
lds
data16
or
push
or
mov
movsb
sub
add
push
or
dec
imul
xchg
xor
or
cmp
push
xchg
insl
sub
ret
ja
sbb
xchg
lds
es
dec
and
adc
pop
mov
xor
pop
mov
cmp
data16
gs
lahf
movsl
cli
push
call
fs
adc
lods
or
dec
xcrypt-ctr
cmpsl
push
xlat
adc
push
push
outsl
in
cmp
sar
js
inc
in
mov
sbb
push
xchg
xchg
in
cmp
jmp
or
mov
sbb
or
sub
xor
and
std
adcb
daa
pop
cmp
or
fcmovu
imul
mov
xor
out
xlat
xchg
stc
dec
cltd
pop
and
sbb
loop
inc
pop
popf
imul
inc
stos
mov
or
ds
xchg
mov
and
xchg
xchg
bound
leave
sub
rorb
add
pushf
jnp
out
rorl
inc
div
movsl
nop
fbld
orl
test
mov
adc
pop
jmp
push
outsl
int3
ds
stc
pop
lret
sbb
sbb
mov
sar
imul
dec
cmp
xchg
mov
dec
test
sub
mov
ret
mov
les
xchg
jmp
push
push
adc
repz
sub
imul
and
jge
inc
add
aam
dec
pop
add
jne
xor
repz
adc
add
fists
or
mov
mov
push
rcrl
jecxz
push
xor
dec
adc
add
xlat
sub
and
les
cmp
imul
cld
sbb
aam
lods
insl
js
lds
xchg
xchg
mov
int3
sbb
adc
icebp
inc
pusha
leave
xor
jno
dec
mov
inc
and
add
sbb
enter
mov
push
mov
fs
sbb
jae
push
iret
rclb
enter
mov
sbb
jb
lods
push
icebp
and
push
rcll
sub
inc
lcall
sub
pop
stos
xchg
xchg
mov
sbb
insl
push
rcll
mov
inc
add
les
add
xlat
testb
out
je
jbe
push
sub
rcl
daa
sti
sub
dec
aas
mov
inc
pop
mov
dec
inc
in
aad
or
mov
push
or
pop
ret
xchg
test
xor
sub
cmp
pop
addr16
sub
sbb
add
adc
adc
pop
test
popf
leave
pushf
pop
xor
fldenv
jb
test
cmpsl
aad
enter
add
or
add
or
imul
ja
jg
aam
xor
push
loope
mov
xor
push
inc
arpl
mov
ret
sbb
mov
and
movsb
gs
xchg
sub
and
or
test
mov
or
les
std
out
jne
or
cld
adc
out
cmp
cmp
stos
sub
and
addr16
sbb
cmp
mov
mov
lahf
mov
cmp
push
mov
xchg
cmp
in
into
cld
adc
into
lea
jmp
popa
xor
nop/reserved
mov
jb
icebp
cmp
mov
sub
mov
ret
cld
dec
enter
push
pop
xor
adc
cld
lea
sbb
sub
popa
add
movsb
cld
push
push
cmp
sbbl
jmp
xor
or
cltd
rclb
mov
mov
lods
les
dec
sahf
sub
fwait
or
add
sbb
mov
sub
dec
dec
adc
cld
dec
std
dec
es
in
popf
add
mov
mov
enter
dec
bound
add
adc
je,pt
outsl
outsl
call
inc
mov
sbb
ret
pop
iret
jle
inc
repz
add
add
dec
notb
push
arpl
fiadds
cmpsb
cwtl
adc
add
push
mov
jecxz
pop
adc
cwtl
lds
jne
andb
bound
pop
jp
imul
fisttps
xchg
int3
xchg
mov
pop
mov
mov
push
and
ret
arpl
mov
test
cwtl
xchg
ds
outsl
outsb
pop
in
les
adc
ret
adc
cmp
push
push
add
pop
xchg
or
test
stc
add
add
jmp
std
arpl
push
pop
and
lods
xchg
data16
sub
insl
xor
xor
jmp
pop
mov
mov
incl
or
xchg
stc
div
jno
jnp
fwait
xor
stc
mov
inc
push
je
or
jbe
icebp
xor
cltd
sub
pop
dec
sbb
int3
adc
sub
jg
cmpsl
rcrl
lods
test
jne
mov
jge
lret
xor
sub
add
neg
pop
sub
lea
outsb
jo
dec
mov
jge
jge
xchg
fnstcw
jp
dec
repz
jno
jge
lahf
jbe
test
and
test
sub
xorb
pop
add
insb
xor
dec
inc
scas
mov
add
and
xchg
pushl
jmp
mov
sbb
adc
mov
sub
xchg
loop
push
jmp
adc
push
and
mov
cmp
jmp
cld
insb
sbb
dec
and
sbb
pop
add
out
sub
not
sbb
push
sub
scas
or
pop
push
mov
dec
test
push
sub
cmpl
inc
flds
fmuls
dec
jnp
fsubs
xchg
pop
sub
jle
leave
push
adc
mov
bound
sub
adc
jp
scas
roll
and
xchg
and
js
cmp
dec
and
cwtl
lcall
clc
bsr
jne
je
dec
and
imul
lods
sbb
imul
enter
jmp
and
fwait
push
in
jmp
push
pop
jmp
or
xorb
mov
xchg
jge
or
loopne
add
divb
xchg
inc
orb
lods
xchg
fdivrl
sub
or
sub
cmp
mov
adc
mov
cmpsb
adc
movsb
mov
and
push
xor
pop
rclb
ja
jmp
pushf
ja
cld
push
fisttps
jecxz
xchg
adc
cld
or
or
pushf
or
das
push
shrl
cs
popf
iret
outsl
repnz
and
iret
test
mov
pop
loop
push
leave
mov
cs
or
sub
push
lock
incb
lret
adc
ja
mov
jb
and
add
inc
retw
into
or
dec
out
xor
pusha
sub
push
mov
std
icebp
adc
ljmp
call
lods
lcall
mov
hlt
cmpb
xor
or
repz
or
rcl
shl
ss
sub
jne
dec
fcmove
mov
push
mov
dec
pop
adc
insb
xor
xlat
mov
and
push
loope
sub
in
popf
push
xchg
lahf
icebp
std
ds
xor
push
push
aad
mov
jl
sbb
inc
insb
stc
push
jnp
stos
mov
fsubl
je
xchg
mov
les
and
ds
out
or
std
or
std
or
std
or
std
or
hlt
dec
xchg
fdivs
xchg
enter
push
ret
pop
push
std
jb
stc
adc
mov
daa
out
pop
or
and
ret
fildll
and
dec
push
sbb
rcl
and
sub
fistpl
lods
push
sete
cmp
xor
sub
loopne
rorl
dec
movsl
repnz
sar
cmp
sbb
jo
mov
or
push
and
mov
xor
je
push
sbbb
sbb
aas
cmp
mov
jl
sub
leave
cld
outsb
dec
js
nop
ss
ret
xor
test
push
push
xchg
xchg
pop
push
dec
push
mov
loop
push
decl
cmp
push
and
lds
bnd
inc
jg
xchg
push
cmp
dec
mov
adc
daa
int3
data16
adc
dec
mov
enter
xchg
or
out
xor
pop
mov
cmp
push
jl
adc
je
mov
or
or
push
repnz
inc
nop
xchg
sub
ds
sub
out
mov
rcrl
mov
jg
xchg
hlt
lcall
pop
push
inc
dec
clc
push
addr16
lahf
pop
shl
mov
push
stos
cwtl
out
push
mov
aad
out
sbb
xchg
ja
sub
jne
jmp
dec
push
enter
jae
xchg
mov
arpl
ficomps
xor
fldenv
pop
sbb
xchg
lea
mov
roll
pop
mov
mov
add
mov
adc
dec
popf
loop
jmp
movsl
adc
jbe
adc
fdivr
jl
pop
mov
dec
fadd
mov
fmulp
daa
pop
les
out
mov
inc
add
enter
mov
or
cs
scas
inc
pop
enter
sub
ljmp
je
sbb
cmc
and
adc
mov
inc
sub
and
pop
adc
jbe
mov
cmp
int
and
mov
dec
shrl
pop
xchg
dec
daa
adcb
sub
fsubr
mov
fisttpll
fstps
ret
mov
lea
sti
test
inc
inc
cmove
mov
inc
push
pop
or
pop
test
ret
cmc
std
push
loop
mov
and
aas
push
mov
pop
jle
sub
dec
adc
scas
es
fs
mov
adc
in
stc
loop
lock
xchg
rcrl
xchg
sbb
pop
jnp
clc
mov
push
enter
fdivrl
xor
rolb
enter
std
dec
sub
inc
cmp
gs
div
cmp
fsubrs
mov
lds
loop
xchg
xchg
dec
adc
add
add
div
jmp
cmp
xchg
dec
fs
xor
xchg
fists
mov
fs
fsubrs
pop
jecxz
cld
aaa
pop
std
popa
int3
pop
popa
sbb
and
in
dec
loop
jae
inc
adc
inc
popa
cli
dec
cld
shl
mov
dec
mov
adc
fmulp
fmul
cld
mov
mull
mov
add
lret
pop
fadds
sub
call
popf
sbb
fdivl
sar
bound
push
jl
add
mov
inc
push
cmp
jle
mov
or
movsl
fimull
in
or
jmp
pop
repz
adc
adc
sbb
sub
or
cmp
pop
in
lea
add
sbb
jl
mov
inc
icebp
out
loopne
jg
add
xor
sub
add
lea
mov
and
leave
push
lahf
stc
pop
popf
push
dec
js
bound
xor
jmp
arpl
repnz
mov
add
inc
adc
das
mov
repz
ja
data16
xchg
push
add
mov
mov
and
or
test
push
or
jne
rcr
mov
jmp
pop
imul
in
int3
test
sub
addb
sbb
cmp
or
xchg
and
pop
inc
jno
cmp
out
mov
adc
jecxz
sbb
pop
adc
andl
xchg
pop
mov
out
scas
ljmp
int
push
push
cmp
test
push
pop
fldcw
pushf
mov
add
push
push
loope
outsl
inc
incl
mov
aam
pop
sub
cmpsb
adc
jne
call
sub
sbb
insb
ret
jecxz
jp
xchg
mov
add
cmp
and
scas
ljmp
js
xchg
xor
jmp
call
mov
jb
mov
jne
mov
dec
mov
or
xchg
pop
xchg
adc
push
pop
in
cmp
pop
dec
sarb
gs
xor
je
mov
mov
mov
outsl
dec
jge
inc
cmpb
out
jno
call
xor
pop
les
shlb
sti
xchg
pop
lock
adc
cmp
jbe
pop
lock
xor
jb
dec
sub
fs
mov
cld
jne
sbb
xchg
xor
and
push
mov
gs
gs
shrl
push
sub
nop
xchg
stos
leave
adc
xchg
mov
repz
sbb
cmp
xor
jne
mov
pop
ret
sbb
fisttps
mov
push
xor
leave
jg
ljmp
xor
hlt
dec
repz
addr16
mov
and
jns
pop
rclb
push
xchg
mov
push
fidivrl
xchg
cmp
xor
sub
jnp
ljmp
sub
insl
sbb
push
imul
xchg
inc
int
mov
jnp
pop
fisttpl
dec
sbb
inc
jecxz
push
mov
je
and
lea
pop
shl
cmp
andl
mov
adc
mov
lcall
inc
fisttps
mov
lock
fs
in
outsb
int
xchg
adc
pop
test
xchg
pop
push
call
push
cmpsb
mov
notb
push
or
scas
sub
dec
jb
inc
push
mov
or
mov
mov
fsub
dec
push
data16
dec
adc
pop
sub
mov
pop
jo
sub
cltd
popf
xchg
in
repnz
nop
negl
mov
mov
dec
icebp
xlat
std
in
jb
jmp
inc
inc
sub
adc
fsts
popf
pop
test
and
sbb
inc
xchg
aaa
out
in
cmp
sbb
test
mov
sbb
sub
mov
cmp
mov
mov
ljmp
push
or
call
shrd
mov
loope
mov
loope
or
decl
decb
scas
xor
sbb
inc
sbb
pop
fwait
out
add
std
enter
add
loope
in
mov
adc
jb
push
xchg
or
cmp
shlb
lds
mov
popa
cmpsl
lea
dec
pop
test
mov
mov
cmp
fsubrp
push
cli
sbb
and
adc
push
xorb
inc
sbb
icebp
ret
jmp
jle
fs
xchg
adc
jmp
jmp
or
ja
leave
dec
int3
xchg
mov
xorb
fbstp
cmp
or
adc
mov
scas
mov
xchg
fwait
ljmp
icebp
test
push
inc
mov
pop
aam
ficoms
out
aad
jmp
jnp
pop
ss
mov
shr
repnz
mov
pushf
pop
repz
cli
adc
sti
loope
dec
test
mov
xor
mov
push
xchg
sbb
mov
insb
dec
pusha
leave
sbb
je
test
or
sbb
add
or
sbb
xorb
js
fldcw
or
inc
adc
mov
leave
test
dec
pop
mov
test
jge
push
jge
call
and
mov
adc
push
pop
mov
repnz
push
adc
or
in
cmp
shrl
or
stos
je
mov
xlat
mov
mov
jbe
mov
je
int3
and
sub
mov
cs
addb
and
mov
or
sub
mov
push
aas
test
cs
jge
cld
dec
incl
dec
call
jl
cli
mov
je
out
adc
repnz
cmp
popa
adc
sub
mov
push
scas
mov
or
imul
lea
push
and
mov
and
les
jmp
sub
popf
xchg
in
lahf
mov
sub
nop
pop
aaa
daa
and
js
in
call
stos
push
sub
dec
clc
dec
mov
test
fdivs
ss
inc
sub
push
sar
add
push
lock
mov
mov
dec
aaa
push
pop
dec
cld
insl
ret
pushf
push
inc
cltd
xchg
adc
icebp
adc
aaa
int3
and
bound
push
push
add
inc
gs
pop
lds
and
js
les
add
inc
shlb
sub
adc
lods
jl
lahf
lods
dec
fstl
arpl
inc
push
pop
push
lret
push
mov
adc
call
mov
pushf
push
mov
sub
inc
inc
daa
mov
fsubr
cmc
dec
popf
andl
aam
scas
mov
les
popa
pop
aas
or
out
or
std
or
std
or
ds
out
or
std
adc
xchg
xchg
mov
adc
push
mov
jl
movsl
inc
gs
and
popf
push
orb
xor
mov
mov
pop
and
dec
jae
xchg
daa
ret
stos
push
lea
and
and
xchg
mov
pop
mulb
jo
mov
xchg
mov
sbb
aad
jae
daa
mov
jne
ja
pop
jp
mov
pushw
sbb
adc
jle
mov
inc
hlt
cltd
insb
sub
xchg
inc
add
dec
mov
incl
adc
push
and
roll
andl
adc
pop
int
push
pop
xchg
jmp
mov
xor
inc
insl
out
or
push
add
mov
adc
cmp
mov
popa
xor
mov
out
mov
or
je
add
jne
cwtl
inc
sbb
pop
mov
roll
jmp
add
and
sub
rclb
cmp
xor
mov
push
aas
sbb
movsl
adc
inc
enter
or
pop
push
dec
ror
dec
shrl
inc
sub
or
lahf
add
inc
fadds
test
les
mov
sub
sahf
lods
sbb
das
pop
inc
or
add
pop
jmp
scas
int
mov
mov
or
and
and
subb
fs
xor
or
or
xchg
inc
out
adc
fucomi
pop
pusha
mov
mov
inc
or
out
or
mov
and
pop
mov
lahf
cwtl
mov
je
mov
sti
xor
dec
push
lret
inc
add
jb
aam
mov
mov
pushf
jne
stos
sbb
or
jge
xor
imul
data16
dec
sarb
dec
loopne
rorl
ljmp
pop
mov
and
std
dec
lret
ljmp
inc
cmp
test
push
mov
inc
inc
cmp
add
sub
jge
add
cmp
add
shlb
pop
add
add
dec
push
enter
jge
push
cld
call
dec
xchg
cmp
lret
inc
ds
lds
add
lret
add
push
es
cmp
ret
dec
repnz
orb
pop
aas
jno
or
adc
add
jmp
cmc
aaa
mov
lods
and
movsww
in
sub
rclb
sti
cltd
rcl
sti
add
jne
xor
jl
scas
test
clc
decb
adc
idivl
fnstsw
aam
xchg
pop
out
in
mov
mov
inc
mov
xor
push
sub
push
dec
adc
inc
lcall
outsl
push
or
xorb
es
test
lahf
push
jnp
ss
leave
cli
push
imul
idiv
mov
into
xchg
mov
pop
ficomps
dec
or
pop
mov
xchg
jmp
lcall
stos
lret
pop
loopne
xchg
cs
mov
repz
lods
fwait
xor
or
adc
push
aad
add
jge
pop
sub
call
mov
xchg
sbb
dec
xchg
test
mov
fbld
mov
stos
jecxz
and
mov
scas
push
cltd
pop
sbb
xchg
pop
cmp
xor
jmp
aad
mov
lcall
movl
xor
sbb
pop
or
js
in
and
xor
inc
and
lahf
aam
stos
shr
bound
sbb
testb
mull
cli
xchg
aas
mov
or
mov
pop
dec
stos
fsts
call
out
loope
sti
cwtl
pop
or
hlt
lea
test
es
insb
push
or
xchg
add
dec
imul
mov
xchg
ja
int
in
ds
sub
rcrb
and
adc
leave
adc
xlat
mov
fcoms
cmc
push
rclb
pop
daa
leave
adc
cld
lret
mov
jns
cmpsl
mov
adc
and
fxch
fsubl
adc
out
test
adc
roll
cs
pusha
or
inc
data16
pop
call
cmp
adc
adc
adc
shr
mov
mov
sbb
and
add
xor
and
push
push
or
and
adc
inc
pop
mov
xchg
and
push
pop
out
xchg
pop
xor
ret
je
push
cld
les
cwtl
and
in
xchg
aas
test
and
test
cld
and
jno
daa
loope
mov
hlt
mov
dec
mov
aad
jg
xchg
xor
adc
or
jb
sub
sub
addr16
xor
mov
push
rorl
loopne
mov
dec
pop
xchg
sbb
fdivrl
shrb
or
outsl
push
sbb
arpl
fmuls
addr16
addr16
call
push
xchg
jle
cmp
or
lea
push
cmp
add
add
in
sbb
sbb
mov
push
test
lds
inc
jmp
mov
xlat
pop
rep
shrb
xchg
pinsrw
xchg
and
loope
or
adc
out
mov
repz
dec
or
out
mov
data16
ret
mov
mov
jg
xchg
jle
pusha
clc
call
cmp
mov
or
cmp
mov
xchg
sub
add
push
push
stos
mov
and
lahf
mov
inc
ret
das
cltd
jle
int
sub
or
cld
jne
push
cwtl
sarb
lret
mov
addl
cs
sbbb
hlt
adc
subl
jg
and
sbb
imul
mov
cmp
sub
add
add
sbb
lcall
sub
sahf
cmpsl
xor
je
stos
je
out
or
test
xor
leave
popa
in
fbstp
mov
xor
jle
dec
sahf
add
cs
ljmp
outsb
and
js
mov
cmp
adc
and
test
jge
xchg
or
es
dec
xchg
jmp
stos
cmc
pop
fmul
cmpsl
rclb
dec
scas
dec
fs
mov
mov
inc
sti
or
jmp
cmp
outsb
dec
mov
dec
jne
daa
movsl
jno
mov
jp
xchg
sbb
jle
and
sub
sub
pusha
sub
imul
insb
jae
inc
std
xor
adc
sbb
adc
nop
jl
dec
lods
push
jmp
adc
and
fisttpll
in
mov
ret
cmp
sub
push
rol
sub
pop
and
das
sbb
mov
ficoms
movsb
mov
sbb
lea
aas
aas
nop
pop
jecxz
and
loop
add
cli
cmp
icebp
cmp
mov
je
push
pop
jp
mov
jo
outsb
cld
add
sbb
xor
sub
andl
rorb
clc
sub
or
or
sub
adc
push
mov
cmpsl
sbb
or
pop
xchg
push
call
cs
in
sub
pop
clc
and
shr
or
push
adc
shll
lret
or
pop
mov
and
sub
and
and
mov
inc
xchg
pop
mov
inc
lcall
adc
je
aas
aas
iret
cld
or
push
adc
pop
inc
data16
fdivrp
dec
or
xchg
sbbw
dec
cmp
jge
mov
mov
pop
or
insb
xlat
call
cmpsb
test
push
dec
pop
sbb
xchg
shll
cmp
int
xchg
xor
inc
ror
cs
mov
pop
adc
and
inc
outsb
xor
or
fidivrl
pop
mov
inc
mov
rcrl
sbb
jge
movsb
lret
sub
out
rcr
push
pusha
pushf
and
sbb
mov
inc
test
inc
stc
add
mov
dec
adc
js
and
dec
jbe
pop
jmp
movsb
inc
push
test
dec
cltd
nop
mov
and
inc
pushl
cmp
or
jne
orl
xchg
mov
and
jbe
fs
js
loope
sahf
rcll
lret
lcall
xor
adc
out
add
out
aas
mov
sub
adc
mov
jo
mov
imulb
dec
pop
sub
push
mov
push
movsl
xor
je
ret
jmp
mov
push
adc
rorb
push
push
or
sbb
adc
sub
aas
cmpsl
mov
mov
mov
jmp
sbb
jge
ret
jp
insl
adc
or
add
xlat
les
mov
call
movsb
int
stos
mov
sbb
mov
mov
xor
pop
add
loopne
jmp
lds
pop
aas
scas
mov
add
fs
adc
test
push
les
and
cmpsl
push
add
sarb
dec
scas
dec
test
jmp
ljmp
loop
and
mov
rolb
sub
or
xchg
inc
cmpsb
mov
popa
icebp
je
outsl
mov
and
mov
mov
push
mov
or
add
loop
mov
pop
out
sub
pop
subl
je
sti
pop
inc
lods
mov
js
cmpsb
movsb
mov
fcoml
add
and
cmp
in
mov
pop
daa
test
stc
pop
lods
icebp
dec
or
cmc
lds
stc
cltd
push
inc
sbb
jmp
mov
or
out
jmp
fcoml
push
xor
in
pusha
sbb
int
adc
cmpsb
dec
adc
dec
dec
clc
dec
clc
or
aas
mov
das
jmp
punpckldq
pop
dec
and
xor
pop
ret
adc
inc
push
cli
dec
cld
fwait
call
sub
inc
mov
mov
mov
loope
sbb
repz
inc
mov
adc
mov
ljmp
jne
jb
test
call
testl
adc
jnp
mov
jae
adc
and
sbb
sarl
adc
inc
mov
xchg
int3
dec
and
decb
std
jg
adc
movsl
or
out
das
les
sbb
test
jmp
add
pop
rcll
pop
loop
scas
cmp
into
mov
dec
call
mov
jge
cmp
jecxz
mov
rolb
addb
jmp
inc
loopne
adc
pandn
leave
imul
cmpsb
sub
cli
cld
scas
cmp
movsl
insl
lret
jmp
gs
pusha
push
xor
clc
gs
inc
mov
jp
jg
mov
xchg
pop
test
dec
push
dec
push
mov
lahf
rcrb
inc
in
and
adc
or
test
jl
stc
or
or
adc
cli
pop
push
mov
cld
sti
clc
or
imul
dec
mov
nop
sbb
scas
xor
lods
mov
jp
js
sbb
xchg
mov
sbb
test
inc
cltd
cld
lods
xor
dec
mov
or
xor
fiadds
cld
xchg
jp
or
rcl
pop
xor
sub
dec
loope
loop
lahf
sbb
mov
test
or
push
xlat
imul
jle
outsb
fbld
rcll
pushf
andl
and
mov
test
insb
scas
adc
mov
xchg
sahf
gs
popf
or
dec
into
sub
mov
add
outsb
jno
add
pop
jns
outsb
xchg
sti
iret
in
and
cmp
in
das
lds
sti
push
movsl
xchg
std
gs
or
xor
andl
sbb
dec
inc
and
dec
loopne
insb
fidivrs
sub
sub
mov
cli
mov
jne
dec
and
sbb
loopne
jbe
std
mov
test
aad
jo
inc
or
mov
push
lret
aas
lcall
xchg
mov
and
scas
jmp
pop
mov
insl
push
sbb
in
cmc
xchg
sub
sti
adc
fsubrl
cmp
pop
mov
cld
sub
filds
mov
pop
and
push
cwtl
pop
iret
push
xor
mov
lcall
and
mov
and
dec
jmp
pop
cld
das
test
mov
jne
shr
jl
or
and
rcrb
add
dec
mov
pop
pop
cmp
mov
mov
dec
iret
jge
lahf
pop
sbb
test
test
sti
pop
mov
arpl
lods
or
jne
mov
sub
add
sti
mov
jmp
sbb
mov
adc
fmull
scas
jge
add
mov
mov
mov
ja
invd
aam
sbb
fildll
mov
xor
testb
cltd
in
jb
jmp
adc
test
push
xchg
in
xor
ret
inc
jne
mov
pop
mov
in
inc
test
scas
xor
xor
lcall
add
dec
sbb
cld
dec
scas
and
mov
pop
cmpsb
dec
xchg
adc
add
scas
and
mov
push
stos
ficoml
mov
xchg
in
pop
mov
mov
jge
popa
or
mov
jl
mov
xor
inc
mov
nop
mov
cmc
enter
inc
sarb
pop
lods
fnsave
or
pop
rcrb
pushf
mov
jmp
inc
stc
adc
mulb
cmc
xchg
lret
les
jmp
ror
or
xorl
mov
add
jno
xchg
jge
imul
cmp
jns
xlat
mov
dec
sbb
mov
add
nop
mov
roll
sub
js
adc
loop
ja
xchg
adc
push
test
je
orl
jl
std
pop
jo
and
jge
out
dec
pop
jecxz
pop
adc
cwtl
movsl
jp
nop
mov
or
movsl
mov
ds
lret
and
mov
scas
sub
test
das
and
pop
push
cmp
ret
pop
cld
or
out
xchg
pop
cltd
test
mull
sti
orb
enter
iret
cmp
jne
dec
rorb
sarl
inc
cltd
and
and
rcl
dec
push
xchg
sub
lds
lea
xchg
push
lret
and
test
faddp
ret
mov
neg
push
sbb
or
push
leave
mov
push
loope
add
dec
xchg
cli
push
inc
jp
lea
add
lret
or
fisubrs
stos
pusha
pushl
neg
jbe
sbb
pusha
out
mov
cmpsb
mov
mov
fs
sub
ljmp
xchg
pop
cmp
inc
jmp
cmp
cltd
or
or
xor
sbb
sbb
jg
in
xlat
test
movsl
lcall
rcl
sbb
inc
fidivl
lds
in
sbb
cwtl
xchg
mov
test
push
or
je
inc
jl
mov
test
sbb
mov
rcrl
sbbl
cmp
mov
adc
push
mov
popa
mov
push
mov
inc
les
jecxz
iret
lcall
clc
and
dec
mov
icebp
mov
sahf
pop
mov
dec
mov
ret
loope
xchg
cmp
insb
inc
sti
cmp
in
test
sub
sbb
jmp
and
cmp
aaa
pop
sub
jnp
cmpsl
int
mov
xor
sub
adc
cld
inc
je
std
popf
negb
pop
addl
add
jne
push
xchg
adc
pop
and
mov
push
push
mov
jbe
sub
lods
in
and
lahf
pop
push
in
test
jmp
mov
subl
je
call
scas
mov
insl
dec
push
fs
sub
lock
nop
mov
notb
jecxz
push
call
sbb
sub
cmp
daa
xor
mov
dec
adc
and
fidivrl
or
mov
mov
push
xor
movsb
loopne
and
sbb
pop
les
mov
jne
inc
lahf
leave
int
pop
push
inc
fstpt
sub
iret
sahf
xor
stos
orl
pop
cld
jle
and
or
ret
cmpsl
hlt
and
push
je
mov
es
dec
xchg
fistps
pop
xchg
cwtl
test
or
ret
movsl
xchg
lock
fdivrs
jno
ljmp
jae
xchg
pop
and
ds
sarl
shl
shr
pop
push
and
xor
cmp
icebp
jno
loope
jg
sub
das
inc
cmp
int
das
enter
jo
dec
or
movsb
in
sub
daa
sub
jbe
stc
in
push
sub
add
and
adc
sbb
sub
data16
and
dec
inc
dec
test
mov
cs
mov
call
jns
clc
cli
loopne
aam
ja
sub
mull
rorb
test
jne
js
jno
jae
adc
mov
jne
push
popf
icebp
inc
stos
sbb
sub
mov
jecxz
test
mov
cmc
adc
imul
add
push
dec
cs
lock
inc
cwtl
add
js
mov
adc
inc
mov
gs
icebp
outsw
and
std
shlb
add
mov
jmp
xchg
rcr
sbb
ljmp
jne
lock
fstpl
sbb
adc
inc
cwtl
pop
cmc
test
out
mov
jge
jnp
jbe
dec
and
ret
outsl
leave
or
jp
ljmp
out
imul
lcall
sbb
adc
scas
xchg
fildll
fldcw
ljmp
js
sub
inc
and
fdivrp
dec
idivb
pop
cwtl
push
inc
push
ja
xchg
sbb
shll
jb
jne
mov
fdivl
cltd
adc
or
sub
mov
inc
int
lea
popa
es
xor
or
xor
stc
enter
into
add
pop
repnz
mov
dec
cmpl
push
mov
adc
in
les
xor
xor
xor
xor
hlt
xor
hlt
aaa
call
and
sub
cmc
or
mov
das
daa
data16
adc
mov
iret
mov
mov
jb
jge
xor
mov
cmp
repnz
ljmp
xor
sbb
sar
add
xchg
and
push
and
or
in
aas
add
push
insb
stc
adc
sahf
and
push
xor
pop
mov
inc
test
or
hlt
adc
mov
incl
sbb
pop
decl
xchg
cld
sub
or
mov
lock
xorl
pusha
adc
pop
inc
loopne
push
mov
scas
push
nop
fmuls
int3
push
adc
les
pop
fs
or
cmp
and
inc
in
scas
les
mov
dec
mov
mov
inc
adc
and
mov
fadds
stos
addr16
jecxz
push
push
adc
and
adc
in
out
push
dec
jbe
xchg
leave
xchg
and
push
jne
mov
into
out
pop
adc
int3
mov
cld
inc
mov
imul
cltd
and
sub
pop
push
movsl
mov
push
jne
mov
jmp
fildll
jno
mov
lods
xlat
push
mov
fsubr
je
pop
enter
roll
adc
dec
mov
cwtl
pop
and
pop
jnp
lcall
repnz
xchg
clc
mov
add
jg
lahf
in
and
fcompl
fstpl
cmp
aas
popa
scas
add
fdivrs
popa
cmp
adc
cmpsl
cltd
xor
pop
xor
loopne
cli
push
jb
sub
mov
push
sbb
sbb
mov
movl
ljmp
sar
in
pop
out
push
adc
add
test
sbb
or
mov
or
jnp
and
inc
cmp
aad
xchg
pop
cld
jl
adc
pop
jo
xchg
outsl
xchg
push
jae
jp
test
jmp
add
add
jg
movsl
mov
push
sbb
jne
dec
fs
xor
and
outsb
cmp
push
jo
xrelease
push
mov
adc
jp
jb
jp
cmpsb
xchg
push
jp
out
cmc
das
into
add
inc
push
push
pushf
sbb
inc
dec
fidivs
test
out
mov
addr16
lcall
and
stos
imul
or
xchg
cwtl
add
inc
jo
or
loopne
pop
inc
sbb
sbb
cli
sbb
cli
sbb
call
xor
or
std
sti
mov
mov
pop
jge
pop
inc
inc
jne
lods
sbb
xor
in
test
testw
dec
clc
and
pop
xor
push
adc
call
jmp
add
pop
mov
add
fucomip
fisubrl
hlt
lcall
or
jle
pusha
sbb
pop
arpl
out
sub
scas
daa
xor
mov
or
scas
add
sbb
lret
pop
test
insl
dec
ret
jmp
fistps
inc
sbb
mov
call
daa
das
pop
decl
push
cli
aam
stos
mov
cltd
or
adc
pop
or
jnp
dec
mov
loope
cmpl
cld
ljmp
arpl
add
adc
jae
add
je
clc
adc
jp
cld
loope
inc
mov
daa
push
cmp
pop
mov
bound
punpckhwd
pop
xchg
inc
lcall
dec
cli
ja
sub
aad
and
in
inc
xor
pop
and
xchg
dec
outsb
mov
dec
pusha
test
add
aas
aas
cmp
mov
sbb
loop
test
stos
flds
and
js
or
push
push
imul
ds
hlt
pop
cmp
jg
mov
sbb
lock
mov
xor
rcrb
je
adc
icebp
lret
cmp
jmp
js
fsqrt
mov
push
outsb
adc
pop
aaa
cld
fimull
std
scas
add
orl
jmp
mov
je
inc
mov
or
sub
and
testb
inc
ja
je
das
push
adc
sub
or
sub
add
add
and
lahf
dec
push
stos
pop
test
push
enter
push
and
test
insl
and
cmp
xchg
jo
scas
in
mov
cmp
push
push
push
xchg
dec
iret
cmp
xchg
cmpsl
inc
pop
jb
dec
pop
inc
dec
fwait
mov
bound
adc
mov
je
pop
adc
inc
cwtl
and
and
dec
or
dec
and
push
and
adc
jb
stos
jb
data16
xchg
arpl
lods
xchg
or
rcrb
push
test
mov
test
or
pop
setne
or
adc
je
adc
inc
pop
cmp
addb
push
mov
fldenv
outsl
int3
incl
andl
fdivr
sbb
jp
adc
pop
cmp
leave
les
jbe
dec
pop
clc
push
jno
push
add
shll
aas
xchg
in
dec
fs
nop
push
jmp
jmp
mov
push
test
jb
into
les
push
daa
xlat
pop
adc
cltd
and
adc
push
jg
fcoml
je
and
mov
inc
std
and
xchg
mov
mov
call
mov
xchg
loop
testb
dec
leave
por
pop
and
xorl
push
cmp
sbb
sub
mov
fs
cli
enter
cmp
adc
push
dec
dec
adc
fwait
xchg
sub
adc
call
lods
neg
xchg
ret
cmpl
adc
mov
jo
dec
mov
mov
js
idivb
cld
mov
loope
xor
stc
inc
cmp
jmp
outsb
inc
or
adc
jle
push
hlt
adc
xlat
push
dec
add
inc
orb
int3
stos
mov
mov
dec
and
sbb
or
cmp
movb
jns
mov
mov
in
lahf
cltd
loop
and
sub
pop
pop
roll
and
sbb
pop
or
xor
inc
dec
es
daa
or
scas
jmp
xlat
inc
cmp
push
and
pop
cmp
cld
xlat
and
dec
xor
fdivrs
leave
dec
xor
and
imul
push
pop
aas
push
xchg
mov
cmp
jns
inc
call
imulb
or
je
dec
xchg
aam
push
add
and
mov
stos
or
sub
pop
addb
lock
sub
loope
fwait
shlb
addb
dec
jge
sti
and
inc
test
and
push
lock
inc
out
mov
dec
and
mov
lods
dec
mov
fisubrs
pop
out
lods
mov
or
dec
mov
stos
int3
xchg
dec
push
xchg
inc
inc
jg
cmp
push
andl
adc
lds
adc
movsl
orb
xor
js
mov
jl
iret
movsl
jle
mov
xchg
xchg
pop
aad
addb
in
xor
mov
xchg
or
sub
xchg
or
sub
push
cwtl
ret
pushf
sbb
hlt
outsl
pop
movsl
push
nop
and
pop
pextrw
cmp
test
jb
sti
cmc
adc
push
stos
push
sub
push
push
jae
cmc
adcb
mov
lods
mov
mov
sbb
adc
fidivs
xor
int3
add
and
stos
xor
cmpsl
faddl
pop
xor
call
dec
ret
push
adc
mov
lret
push
jnp
mov
mov
adc
pop
and
adc
call
sub
jne
sub
sub
xor
sub
dec
fmuls
inc
cltd
shrl
lock
dec
add
push
andl
dec
mov
dec
inc
xor
lea
push
dec
lock
xchg
enter
or
mov
jge
and
dec
in
addr16
test
inc
filds
push
fistps
fstl
mov
cmc
test
xor
mov
xchg
bound
lea
xchg
call
mov
psubd
push
pop
jmp
mov
push
dec
xchg
popa
test
inc
subb
xchg
cmp
fidivrl
add
dec
xchg
in
xchg
push
xchg
xchg
loop
inc
aam
inc
sub
push
in
jnp
jo
aam
out
add
call
jbe
push
push
imul
adc
adc
aad
push
cmpb
push
in
bnd
adc
fs
out
lds
jp
xchg
mov
sti
cmp
inc
cmp
negl
push
add
pop
into
pop
ljmp
jmp
inc
andb
sbb
and
fcomps
pop
mov
es
out
or
jg
sub
ljmp
in
stc
pop
leave
clc
jne
fs
push
add
packssdw
jl
mov
pop
addr16
gs
cmp
ss
sbb
mov
mov
mov
call
sub
aaa
sbb
adc
xlat
in
pop
cmc
cmp
ret
xor
mov
mov
push
cld
das
ret
pop
sbb
pop
inc
int
shrb
sbb
adc
mov
xor
insb
sub
push
orl
int3
in
push
loop
dec
sub
and
xor
and
repnz
repz
daa
adc
push
xor
cmp
sbb
pop
xchg
mov
fucom
push
jg
or
and
sbb
jle
jb
and
std
or
pop
or
jne
xor
ljmp
push
mov
fldl
sub
ret
cmc
sbb
inc
xchg
xchg
cli
sbb
inc
xchg
xchg
xchg
xchg
mov
cmc
inc
insl
cmp
clc
dec
add
dec
xchg
das
lods
add
sbb
jle
or
clc
mov
push
add
adc
cld
je
xchg
leave
enter
cltd
push
jne
jno
mov
sahf
stc
inc
out
add
adc
jmp
in
mov
sbb
push
add
stos
repnz
push
push
pop
mov
xchg
dec
lcall
inc
into
das
shrl
ljmp
fisttpl
adc
xchg
mov
jp
dec
mov
pop
jmp
repz
cmpsb
or
and
add
in
cld
xor
xchg
and
mov
cmp
movswl
das
call
icebp
mov
lea
cwtl
inc
sbb
in
mov
loop
pop
jbe
in
pop
jg
and
rolb
sbb
sbb
pop
and
inc
test
push
call
lds
out
dec
pusha
jne
push
call
stc
test
push
mov
sub
aad
loope
push
mov
adc
xchg
sbb
clc
cmp
xchg
outsb
lret
pusha
push
mul
jne
or
push
sbb
and
enter
jl
adc
scas
cltd
jo
mov
dec
shrl
inc
lds
push
pop
rcll
addr16
add
data16
inc
daa
sub
test
test
je
mov
lods
sbb
push
push
mov
dec
aam
vcvtsi2sdl
rcll
jg
jmp
les
or
add
es
sub
jmp
or
add
outsl
sbb
insl
pop
xchg
mov
sbb
stc
scas
xlat
jp
outsb
dec
cmp
movsl
loop
pop
jae
add
loopne
xchg
or
xchg
testl
xchg
mov
jne
xchg
data16
shl
or
test
sbb
cmpsb
mov
jns
mov
push
adc
and
mov
sbb
std
jb
adc
or
fmul
xchg
mov
nop
dec
stos
cltd
mov
mov
lret
movsl
enter
sub
or
jmp
xchg
pop
orl
sub
add
test
inc
hlt
into
mov
xchg
mov
aad
loop
lods
push
stc
and
scas
shrb
leave
ror
inc
ljmp
pop
mov
and
xchg
mov
rcr
jb
xchg
leave
test
clc
xlat
mov
sub
imul
or
cli
mov
sbb
je
sbb
dec
push
rcrb
clc
ss
push
xchg
mov
adc
push
invd
inc
pushf
and
jmp
jb
pop
add
push
mov
data16
lret
int
cmp
xor
popf
rolb
sbb
cli
cmpsl
adc
lock
ja,pn
xor
add
lret
adc
bound
jmp
push
out
push
addr16
mov
jmp
bound
push
jns
cmp
minps
call
movsb
mov
out
sub
push
jne
jle
mov
iret
aas
sahf
push
push
cld
je
pop
rclb
mov
test
jmp
or
add
test
hlt
push
mov
enter
es
js
adc
in
jge
push
shll
pop
stos
mov
sub
stos
outsl
bound
dec
xor
sar
shr
pusha
and
test
stos
testl
mov
rorl
push
in
mov
scas
testb
xor
test
mov
xor
and
aaa
sbb
adc
dec
leave
aam
imul
push
aad
jae
into
mov
addl
lret
adc
and
sub
adc
push
xor
in
mov
adc
mov
shl
inc
shlb
rcrb
mov
andb
scas
sar
push
inc
lret
loope
add
repnz
aas
and
cmp
sbb
or
jg
adc
dec
cmc
andl
aam
dec
scas
and
xchg
xchg
loop
out
hlt
pop
out
adc
fimuls
fsubs
push
clc
pop
test
call
or
push
sub
sub
iret
cmc
int
push
call
pop
in
mov
inc
cmp
in
sbb
rorb
cs
adc
imul
push
mov
push
mov
mov
dec
and
jo
test
sub
addb
rorb
and
push
inc
adc
or
repz
icebp
jmp
sarl
xchg
and
out
mov
es
xchg
testl
sbb
pop
sbbl
data16
dec
in
jo
push
sbb
daa
in
iret
es
dec
shr
std
add
and
push
cmc
push
in
jne
pushf
subb
jbe
shll
mov
adc
inc
and
dec
fwait
sbb
adc
push
arpl
or
out
fbstp
ja
mov
or
lcall
xor
sbb
incb
adc
pop
xchg
jo
inc
xorl
or
test
mov
hlt
jae
dec
pop
dec
ret
popf
rol
enter
mov
sub
mov
cmpb
cltd
push
and
cli
pop
es
inc
cs
xor
lea
and
sub
fs
add
aas
pop
jmp
add
mov
pop
mov
push
dec
dec
bound
inc
int
add
loope
xchg
mov
mov
mov
add
les
ja
aad
or
mov
mov
xor
aam
rclb
pop
lea
call
cld
leave
ss
movsl
push
xchg
packsswb
mov
fildll
das
mov
push
mov
adc
cmp
push
add
mov
and
rol
lcall
jbe
jne
and
cmp
stos
xchg
fiaddl
in
insb
inc
pop
ss
clc
movsb
push
int3
movsl
push
cmpsb
add
jmp
stos
shl
fildl
shll
push
push
push
push
test
and
jmp
mov
inc
int3
cmp
push
mov
push
inc
jle
xlat
imul
xchg
and
pop
inc
call
jmp
inc
jbe
sub
in
in
cmp
push
pop
aaa
xchg
jbe
aad
push
in
xchg
adc
icebp
dec
jg
mov
cmp
insl
and
je
and
mov
inc
add
sbb
lahf
or
dec
mov
push
sub
adc
aas
add
adc
or
vmovntps
or
push
fisubs
cld
sub
jl
add
mov
adc
jmp
xor
or
mov
adc
and
ja
setns
flds
scas
xchg
repz
inc
adc
or
or
aas
or
push
adc
dec
pop
sbb
sub
in
stos
sub
pop
pushf
adc
inc
inc
ret
inc
add
mov
js
cmp
adc
and
aas
jmp
mov
push
mov
rorb
mov
cmpsb
adc
mov
cmpsb
adc
xchg
gs
mov
and
cmp
push
sahf
mov
or
repnz
dec
sti
clc
outsb
rcrb
aam
ret
pop
push
aaa
sti
dec
cs
negl
loopne
push
cmpl
enter
mov
push
les
mov
enter
push
inc
or
and
popf
out
nop
andb
inc
stc
and
mov
jno
or
xchg
mov
and
rorl
add
add
add
add
or
ja
out
and
rcrl
dec
scas
cmp
inc
inc
xchg
sbb
mul
movups
dec
mov
loop
lahf
pop
dec
cmp
aad
adc
jmp
sbb
hlt
and
push
js
test
addb
std
shlb
cld
test
xchg
or
lret
ret
in
mov
xchg
enter
mov
jns
mov
adc
in
push
call
mov
cld
and
push
push
sub
notl
xlat
shll
sub
xor
adc
pop
mov
adc
mov
clc
fists
shr
ja
add
arpl
xor
fs
jbe
out
pop
ret
mov
movsb
sti
hlt
or
mov
xor
lock
sub
call
lea
mov
push
lock
jge
pop
adc
jg
xchg
mov
inc
xchg
jno
out
dec
dec
popa
mov
jge
cmp
push
adc
jmp
test
mov
mov
adc
sbb
sub
mov
pop
jne
mov
add
addb
das
mov
pop
adc
inc
xchg
pop
sub
fnstenv
sub
jmp
int
mov
xor
dec
mov
pop
adc
or
dec
add
mov
mov
aad
push
aas
pop
push
pusha
iret
dec
cli
fcoms
xchg
pop
mov
jo
hlt
add
fdivl
add
mov
out
dec
aad
dec
jns
jmp
sub
fcmovnbe
adc
daa
adc
push
pop
or
pop
jmp
ss
xor
sbb
jmp
lahf
dec
repnz
popf
icebp
in
addb
ficompl
sbb
mov
mov
inc
inc
inc
push
js
push
inc
pop
push
pop
or
or
and
fmull
pop
lea
push
push
push
mov
cmp
adc
sbb
xor
loope
push
and
mov
add
data16
addr16
insb
rclb
push
jns
ret
push
sarb
sbb
jns
sbb
and
inc
sub
fwait
push
not
adc
pop
ret
gs
addl
pusha
iret
repz
test
mov
or
orl
fldl2e
lods
sbb
jmp
dec
mov
sbb
mov
push
pop
andl
cli
and
sub
mov
inc
ret
mov
dec
ljmp
nop
adc
int
or
sti
mov
and
jns
cmp
inc
cmp
sub
or
sub
inc
and
ja
or
sub
sub
dec
mov
adc
aas
sub
xlat
xor
xor
xor
push
adc
cmp
cmpsl
push
in
das
ja
in
outsl
cwtl
jge
jg
insl
dec
sbb
mov
push
and
test
and
dec
xor
sub
sti
mov
dec
mov
sub
push
dec
mov
adc
cmpsb
and
sbb
jnp
aaa
mov
add
adc
adc
inc
and
daa
pop
in
xor
std
mov
movsb
dec
xchg
jne
sub
dec
cmp
jno
cmp
ficoms
inc
xor
and
pop
shlb
or
cwtl
fsts
pop
and
pop
mov
cld
add
or
push
adc
sbb
xor
xor
lock
or
mov
and
les
je
ljmp
addb
lock
pusha
ror
push
ror
cmp
iret
and
iret
adc
fdivrl
inc
xchg
lea
fsub
jne
stc
lret
inc
ss
sbb
jnp
rorl
adc
sti
ss
adc
les
xchg
in
and
cltd
jp
mov
loopne
and
std
mov
add
aam
lods
push
xchg
out
mov
xchg
sbb
arpl
loope
adc
jmp
movsl
dec
xor
mov
adc
sti
mov
jmp
mov
dec
push
test
dec
xor
mov
adc
je
mov
call
adc
mov
jnp
addl
xchg
daa
or
xor
aad
pop
inc
add
es
jmp
push
clc
inc
mov
push
bound
das
sub
sbb
push
mov
das
nop
xor
sub
inc
cmp
dec
push
mov
aas
xor
sbb
lahf
xchg
push
mov
cmp
cld
std
cmpsb
mov
repz
lods
scas
mov
sub
outsl
lods
test
pop
sub
hlt
test
aam
cmp
adc
es
ds
pop
sti
jge
insl
sbb
inc
or
mov
je
daa
add
pop
enter
inc
cmc
out
and
jmp
jecxz
mov
ds
test
in
in
xchg
push
add
xadd
push
ljmp
testb
add
or
sub
imul
cmp
mov
shr
int3
hlt
ljmp
jmp
int3
orb
nop
pop
push
daa
imul
call
lcall
fucomi
in
ficomps
mov
sbb
ds
push
adc
adc
xchg
or
orl
pushf
movsb
push
sbb
sbb
ljmp
fisttpll
out
inc
lahf
jl
mov
mov
push
popf
push
test
inc
mov
dec
into
push
jge
repnz
or
out
or
bound
cmp
or
inc
cmpsb
add
mov
push
dec
lods
xchg
xchg
fimuls
shrb
mov
dec
test
sbb
mov
ret
shrb
sub
gs
push
in
push
push
xchg
xor
sub
push
push
mov
sub
out
in
lds
ja
adc
push
loope
ds
xchg
and
jno
push
mov
and
sbb
sub
push
push
cmp
and
inc
push
dec
xor
enter
and
pop
cmpsb
dec
daa
xchg
decl
leave
sbb
adc
test
push
imul
adc
stc
sbb
mov
lods
push
add
pop
sbb
dec
ds
or
adc
sub
xchg
stos
sbb
ds
cmp
dec
and
daa
dec
inc
add
dec
xchg
daa
mov
cmpb
imul
push
fchs
jo
mov
adc
ljmp
add
or
jne
call
lcall
and
cmpsb
inc
ret
xchg
add
test
sbb
inc
mov
adc
call
xlat
add
mov
movsl
dec
sbb
in
mov
sti
sahf
sbb
and
lret
in
idiv
leave
push
js
and
in
sub
movsb
dec
hlt
mov
push
and
inc
clc
lock
ss
movsl
cmpb
mov
mov
pop
enter
and
dec
mov
loop
unpcklps
mov
mov
xor
push
stos
sbbb
popf
lea
and
mov
sub
scas
adc
pusha
add
mov
mov
or
rcrb
xor
inc
add
lea
clc
mov
inc
fmull
cwtl
push
mov
je
xor
loopne
in
add
movsb
cmp
aad
push
push
adc
jbe
sub
roll
adc
mov
lcall
cmpsl
pop
add
fsubl
hlt
and
ja
jno
mov
mov
imul
mov
pop
movsb
bnd
call
add
pop
dec
or
mov
add
cmp
das
xchg
mov
or
int3
adc
jo
nop
lret
xor
loop
call
jge,pn
push
rcrb
pop
call
adc
jne
ds
call
je
cmp
or
pop
dec
movsl
test
das
dec
pop
mov
or
popf
pusha
adc
call
sti
inc
and
adc
xchg
les
mov
sti
inc
inc
pop
sbb
or
or
ss
mov
das
add
pop
jmp
mov
loop
dec
int3
push
xor
rolb
shl
lea
push
push
push
leave
cmp
adc
adc
xor
adc
testb
test
xchg
mov
lea
xchg
icebp
sub
push
popf
lds
push
cltd
in
and
dec
es
inc
xlat
cli
lods
cmp
xchg
loope
or
out
in
in
xchg
data16
adc
fs
pop
repz
push
cmpsb
cmp
mov
in
fmull
push
xchg
dec
cmp
sub
or
mov
xchg
movsb
dec
xor
ret
leave
xor
mov
xchg
fsub
sub
mov
xchg
cltd
dec
and
xor
aam
psubsb
roll
int
call
aaa
ja
dec
sbb
sbb
mov
dec
test
mov
sub
enter
clc
dec
sysexit
test
xor
push
mov
call
scas
xchg
fimull
or
adc
cld
std
imulb
sbb
dec
ret
adc
and
shrl
rclb
pop
andl
and
push
ret
jne
andb
inc
inc
sbb
fsubrs
mov
hlt
add
add
pop
test
or
xchg
repz
addr16
jg
pushf
sub
sub
and
jnp
pop
xor
cmc
fdivrs
mov
sbb
cmp
sub
lcall
cmp
and
sti
or
or
jnp
aad
notb
adc
or
stos
popf
fabs
adc
daa
inc
hlt
push
addr16
stos
xor
jmp
ja
add
lret
mov
stc
jno
les
dec
xchg
clc
cmc
cmp
pop
adc
pop
leave
xorl
inc
dec
xchg
imull
cli
and
xchg
out
pop
movsb
aam
ljmp
repnz
push
imul
data16
dec
pop
inc
push
movsb
push
mov
fcomps
lods
inc
shlb
mov
cmc
mov
inc
mov
xchg
xorb
sbb
pop
sub
fsts
or
xor
or
andl
add
cmp
loope
push
mov
push
adc
or
pusha
mov
adc
enter
adc
ss
fistps
mov
pop
hlt
into
sub
or
inc
jno
mov
clc
jle
hlt
and
movsl
inc
lock
mov
inc
dec
adc
xchg
lahf
push
sbb
mov
adc
cmp
push
push
jmp
fidivrs
xchg
xchg
push
bnd
in
es
and
and
movsl
lock
call
jge
xchg
pop
mov
push
int3
ljmp
pushf
jge
popa
repz
and
lret
fldenv
pop
mov
add
adc
hlt
in
call
jns
ds
ficoms
or
test
je
ds
ss
and
insl
data16
xor
push
pop
or
test
in
in
sbb
idiv
movsb
add
push
push
testb
mov
ror
insb
push
mov
gs
push
into
and
cld
pop
cmpsl
mov
or
nop
cs
push
inc
dec
sbb
inc
adc
call
sub
adc
mov
pop
fs
mov
imul
push
push
into
adc
out
cmp
and
repnz
mov
cmpsb
xor
notl
sbb
or
mov
lea
daa
adc
or
push
push
push
ds
dec
xchg
sbb
and
mov
adc
into
ja
push
inc
xor
cltd
inc
or
jo
es
cmp
pop
das
pop
jne
hlt
mov
mov
jle
pop
sar
add
sbb
jle
push
sbb
jae
std
and
dec
jne
aam
cwtl
push
ja
sub
push
xchg
je
dec
cld
fwait
enter
dec
and
mov
xor
jnp
inc
lds
jmp
daa
mov
sbb
adc
xlat
push
inc
inc
adc
mov
stos
xchg
adc
lds
stos
mov
xchg
and
lods
xlat
inc
xchg
test
pop
fsubrs
stos
leave
nop
inc
sbb
fldt
aam
sbbl
loopne
push
dec
sub
insb
push
jge
out
loopne
inc
sbb
adc
call
clc
cmp
andb
xchg
push
cmc
ret
ja
dec
into
setb
sub
pop
cmpl
mov
movsl
jne
lea
xchg
adc
ds
and
jle
lds
mov
inc
and
outsb
add
cmc
push
jmp
fstps
inc
xor
imul
push
int
push
clc
cli
mov
sub
std
cmp
inc
jnp
xor
xchg
mov
adc
and
stc
les
hlt
in
mov
jmp
int3
data16
jge
xor
push
sub
imull
enter
hlt
sub
fists
lret
aaa
cltd
and
inc
je
push
mov
loop
jbe
ja
xor
lock
cs
mov
or
fdivp
arpl
dec
sbb
subb
dec
push
sub
xchg
mov
lret
hlt
idivb
movsb
xor
or
mov
mov
and
mov
push
sub
fsts
lock
cmp
xor
adc
adc
frstor
and
addr16
jbe
lret
je
jg
in
push
ljmp
call
adc
scas
leave
stos
jg
call
mov
jne
adc
lds
adc
dec
jle
leave
jb
out
mov
ja
push
ja
rolb
push
in
push
sbb
dec
cmp
cltd
sbb
sbb
popf
popa
inc
cld
ret
hlt
aaa
inc
loopne
iret
fsubl
into
jmp
add
pop
mov
sub
xlat
xchg
cmpsb
mov
int3
scas
in
mov
cmp
pushf
dec
and
cmp
in
pop
mov
decb
jns
mov
push
push
test
fwait
call
sub
std
jo
sbb
test
push
push
mov
int
sub
mov
xor
xor
mov
inc
imul
nop
dec
enter
xchg
out
sbb
xchg
das
out
popa
pop
xchg
push
cmpsb
ja
into
mov
das
push
jmp
xchg
inc
sub
mov
loopne
mov
in
in
repz
scas
repnz
jg
sbb
sbb
or
or
xlat
es
dec
or
mov
mov
mov
push
pop
push
pop
and
add
jl
das
mov
cwtl
sub
mov
lcall
sub
mov
in
cmp
iret
outsl
pop
data16
xor
jo
pop
xchg
dec
and
or
adc
jge
or
mov
out
xchg
pop
fdivrl
sub
lcall
popa
lods
dec
dec
mov
or
mov
jge
dec
or
sti
xor
aam
inc
sbb
lock
mov
shr
es
pusha
inc
jno
sahf
dec
gs
nop
sub
mov
and
test
pop
bound
push
std
sub
leave
adc
clc
enter
mov
mov
cli
xchg
arpl
dec
push
pop
sbb
aam
lret
xor
daa
loopne
jl
lods
sub
inc
push
enter
push
sbb
loopne
mov
mov
test
add
cmpsb
jp
mov
sub
dec
add
hlt
xchg
sbb
cmp
nop
sbb
or
lods
out
inc
mov
xor
ss
inc
aaa
pusha
icebp
xchg
lea
call
push
jne
in
aaa
clc
or
or
je
push
ljmp
push
ss
aaa
daa
ds
pop
orb
inc
add
lock
jmp
and
je
jae
jae
xor
rorb
notb
pop
jecxz
push
push
cmp
mov
inc
adc
lret
ds
or
push
push
pop
push
aaa
inc
adc
imul
repz
cld
sbb
and
push
mov
push
add
call
and
or
fdivs
jmp
jg
mov
dec
dec
flds
xor
pop
add
mov
leave
shll
stc
loopne
test
jmp
popf
out
jle
dec
jmp
daa
sarl
lods
inc
repnz
loope
lcall
iret
lret
dec
pop
sub
sbb
or
jp
adc
xchg
ja
inc
xchg
shr
sbb
jmp
mov
je
push
xor
int3
loope
or
daa
jp
dec
push
mov
mov
sbb
jmp
das
out
push
fstpl
xor
push
dec
dec
or
mov
dec
fwait
pop
in
mov
add
pop
dec
fidivrs
push
cmp
xchg
push
fisttps
pop
test
fbld
fwait
inc
fsubrl
jae
mov
sub
lods
or
into
and
pop
sti
mov
sub
lods
mov
sbb
and
and
popf
or
inc
ret
jmp
mov
das
jmp
add
jae
xor
pop
je
pop
dec
rcrl
es
jbe
xchg
xchg
sbb
or
lods
push
lret
or
and
adc
push
bound
testl
pop
inc
rclb
ret
mov
or
xor
aad
and
orw
dec
call
mov
adc
ljmp
test
sub
call
lock
and
xchg
cld
xor
push
pop
mov
gs
test
test
sbb
adc
lahf
mov
sbb
mov
cld
adc
mov
push
adc
adc
sbb
sbb
sub
sbb
inc
mov
jo
rorb
inc
cld
lahf
sbb
pop
lea
pusha
and
cmp
popa
stc
lret
dec
ret
popf
scas
jge
add
sub
sub
pop
fs
add
lahf
cld
imul
pop
xchg
faddl
xor
pop
push
push
push
or
leave
lea
adc
mov
fs
test
ficomps
dec
test
sbb
or
cmp
loope
xchg
sbb
or
inc
nop
imul
roll
stc
sbb
inc
inc
repz
xorb
inc
call
add
adcl
sub
pushf
testb
adc
gs
stos
dec
aad
add
sub
jno
ds
sbb
cmpsb
call
jne
xchg
aas
movl
decl
mov
push
cmp
inc
or
mov
dec
add
flds
push
nop
add
adc
pushf
mov
or
pusha
sbb
cwtl
test
repz
sbb
xchg
dec
sbb
orb
add
loopne
push
stos
outsl
mov
mov
and
xor
jge
add
or
mov
jmp
and
clc
jmp
dec
stc
outsl
clc
pop
fists
mov
mov
mov
cmp
imul
sub
push
xchg
stos
inc
cli
jmp
mov
xor
jge
cmpb
scas
pop
js
and
mov
in
jne
inc
ds
hlt
xor
mov
ja
adc
nop
dec
inc
jns
push
and
ficoml
test
mov
push
mov
mov
push
fldl
jmp
or
leave
push
cmp
movsb
jbe
dec
cmc
dec
hlt
push
mov
xchg
movsb
push
adc
dec
or
xlat
loop
add
mov
mov
inc
or
push
cmp
std
xor
aas
dec
and
gs
or
jne
mov
fistps
adc
call
cmp
ja
dec
pop
out
xor
or
cmp
or
or
dec
or
and
mov
inc
cmpsb
sbb
inc
test
test
nop
adc
in
dec
and
cmp
pop
out
int3
jae
mov
sub
sub
jmp
mov
test
mov
mov
bound
jg
pop
jg
ret
inc
nop
fsts
sub
addr16
ja
adc
loopne
xlat
popa
sbb
jnp
hlt
jg
pop
cmpb
aaa
enter
test
jns
cmp
call
mov
xchg
dec
clc
sbb
sub
insl
es
sbb
sbb
mov
and
jge
and
xchg
xchg
xchg
and
jmp
in
lret
test
pop
in
pop
jmp
inc
xor
je
fs
pop
repz
lcall
loope
in
imul
mov
adc
sbb
mov
mov
or
pop
cmpsb
imul
inc
movsl
mov
jmp
idivb
fiadds
mov
adc
fsubs
dec
outsb
cmp
dec
lods
sub
insl
cmc
and
lods
cmp
int3
movsl
frstor
mov
mov
push
loop
bound
push
add
push
add
pop
or
pop
inc
inc
ret
jmp
in
mov
dec
mov
sub
mov
outsb
popa
clc
ja
xchg
mov
and
jae
sub
sub
ds
cmc
mov
mov
js
icebp
clc
jnp
adc
push
stc
sub
loopne
mov
push
mov
les
mov
mov
jmp
loope
sub
fwait
into
out
addb
pop
push
repnz
mov
mov
pop
jmp
inc
add
jmp
push
cmp
sub
inc
sbb
jae
cmp
jne
xlat
or
out
bound
xchg
insb
xchg
mov
sub
leave
or
jl
jo
dec
jb
std
je
push
scas
arpl
jle
mov
or
fdivp
dec
mov
xchg
push
cmp
sti
inc
stos
sub
and
in
mov
xor
hlt
mov
jp
in
aam
adc
lea
push
les
mov
inc
fcomps
cmpsb
and
dec
loop
dec
sahf
les
out
loop
adc
sbb
inc
cmp
ds
cld
xor
or
mov
sahf
fdivr
push
pop
clc
clc
mov
imul
and
sub
push
int
and
inc
mov
dec
mov
jmp
mov
repz
or
add
subb
dec
bound
les
sbb
sub
out
sub
sbb
test
push
rcrb
std
sti
test
sbb
lea
shrb
xorb
ficompl
and
leave
mov
push
xchg
mov
push
cmp
mov
mov
cld
sub
pop
lcall
popf
rolb
out
or
enter
dec
mov
add
ss
mov
push
cmp
or
and
ljmp
imul
xor
cmp
pop
fwait
mov
dec
out
mov
push
data16
into
enter
pop
add
clc
dec
mov
fs
xchg
pop
inc
lcall
adc
and
shrb
jne
test
mov
xor
sbb
fs
mov
jns
mov
or
xor
jb
push
xchg
and
push
and
repz
jmp
cld
mov
jmp
fiaddl
stos
pop
jne
lods
test
out
add
jo
call
dec
mov
mov
sub
jne
pop
pop
or
test
lahf
les
mov
pop
adc
push
aad
jno
cmp
fcmovnb
xchg
jb
hlt
fldl
cmp
xor
addb
and
cld
adc
xor
sbb
add
push
push
adc
cmp
popf
shll
aas
lods
hlt
dec
pushl
jne,pt
xrelease
mov
xor
cs
mov
imul
out
iret
push
fsubr
mov
daa
adc
lcall
or
mov
or
push
cmp
cwtl
fldl
inc
sbb
insb
push
dec
cld
out
cltd
push
and
mov
data16
psubsb
fcomip
sbb
xor
add
cld
test
dec
movsl
cmpsl
outsb
bswap
or
push
push
hlt
fsubrp
push
xchg
mov
jg
dec
movsl
push
push
pop
mov
mov
or
mov
nop
push
sub
push
mov
jne
cmp
and
and
les
push
inc
in
movsl
pop
fidivrl
lcall
adc
xor
push
push
outsb
dec
and
cmp
sti
xor
fcmovu
fwait
repz
pushf
xor
je
es
incb
mov
call
pusha
pop
inc
mov
add
push
jo
cltd
xchg
fwait
sub
dec
movsb
xchg
test
cmpsb
pop
inc
test
je
xchg
sbb
add
es
and
outsl
or
ljmp
jmp
dec
jae
and
shlb
jmp
xlat
flds
dec
inc
inc
inc
mov
out
pusha
fdivrp
jne
xchg
shlb
xor
jl,pt
shlb
stos
mov
dec
ljmp
inc
out
lcall
jbe
out
jb
jge
cmpsb
jmp
push
push
icebp
and
clc
ljmp
or
jmp
xchg
pop
push
or
and
test
sbb
hlt
and
push
or
call
adc
pop
sbb
pop
jae
addb
push
shl
sub
lret
xchg
scas
mov
sbb
mov
jl
mov
xor
pop
lahf
sahf
leave
hlt
inc
jno
mov
mov
loopne
xlat
pop
mov
jp
adc
or
lea
rorb
rorl
mov
imul
mov
jp
push
mov
sub
clc
inc
pop
sub
push
loopne
inc
fcmovb
push
dec
sub
into
je
mov
scas
adc
add
stc
cmpsb
cmp
xchg
sarb
call
add
xchg
icebp
inc
insl
daa
jl
pop
add
mov
cli
mov
add
xchg
sub
orb
imul
add
cmp
pop
pop
lods
frstor
bound
and
add
cmp
loop
fidivrs
add
call
rolb
inc
jne
sbb
mov
mov
jg
mov
repz
jl
daa
in
inc
mov
out
rcr
dec
testl
and
jnp
adc
fcomi
and
sti
xchg
popf
dec
jmp
xor
sub
sub
xor
test
rcll
aaa
lret
xchg
pusha
push
sbb
mov
cmp
add
push
call
sub
cltd
gs
stos
inc
pop
test
cmp
jbe
sub
pop
repz
fcomps
hlt
mov
add
jnp
push
sbb
lock
pop
mov
jmp
adc
mov
push
aad
mov
pop
xchg
inc
cmc
sarb
lds
cltd
xorl
adc
sub
mov
adc
gs
or
lea
call
enter
mov
outsb
mov
aas
push
mov
sub
cwtl
mov
call
in
daa
lods
or
inc
jne
mov
gs
scas
mov
xlat
mov
call
mov
and
dec
lret
adc
pop
mov
dec
xchg
in
inc
mov
sub
rcll
fadds
mov
inc
cmp
aad
js
data16
adc
pop
movsb
sbb
adc
stc
adc
xchg
mov
sub
jg
and
outsb
shlb
inc
mov
mov
sti
fcompl
and
negb
dec
adc
xchg
mov
pop
stos
nop
sbb
mov
sub
lret
and
lods
sub
or
adc
addb
mov
xor
outsl
push
rolb
rcrb
clc
jmp
and
cmp
jecxz
jno
xchg
dec
xchg
mov
or
jnp
dec
leave
pushf
sbb
sub
das
je
or
mov
adc
rclb
nop
cwtl
jge
xchg
es
pop
imul
sub
xchg
sbb
imul
jnp
clc
orl
rolb
aam
xchg
inc
sbb
lea
repz
je
pop
jmp
and
movsb
xchg
xor
push
aad
std
add
cmp
xlat
mov
int3
int
push
cwtl
cmpsl
cmp
js
xchg
cmp
loopne
dec
adc
push
push
insb
dec
and
and
fs
stos
push
adc
bound
nop
test
mov
sub
mov
movb
imul
aaa
sbb
gs
jg
pop
push
aad
cli
inc
add
mov
sub
jmp
jg
lds
or
ja
inc
or
in
lock
fimull
aas
rorb
movsl
popf
sub
fiadds
mov
dec
clc
jmp
repz
pcmpeqb
cltd
mov
sahf
test
gs
loop
inc
pop
in
aas
inc
adc
call
add
jle
lea
jbe
gs
jb
test
mov
xor
es
push
ljmp
rol
mov
dec
mov
stos
adc
mov
sub
ret
ja
mov
stos
or
lods
lret
shrb
cmpsb
aaa
mov
out
inc
movsl
je
out
ss
sbb
cmp
sub
in
dec
pop
test
jge
mov
inc
pop
in
hlt
and
cwtl
push
sbb
sti
shl
cld
lea
add
xor
inc
sub
mov
leave
jb
push
inc
mov
in
loop
pop
push
jmp
xchg
fwait
sbb
push
iret
jno
or
ret
mov
mov
imul
dec
ljmp
or
sbb
add
movsl
pushl
pop
sahf
cmp
mov
xchg
mov
sbb
and
and
or
sub
push
cmp
nop
push
and
mov
les
mov
adc
push
gs
ret
xlat
in
push
mov
bound
stc
push
sbb
push
sti
enter
dec
mov
insl
cmp
mov
adc
jne
imul
mov
cmp
push
xor
lea
je
mov
sti
xchg
pop
and
rcrl
test
filds
jbe
fdivr
inc
cs
popa
dec
jge
cmp
jp
mov
sahf
jns
popa
jmp
jmp
ss
and
mov
xor
sub
adc
adc
push
pop
jmp
out
mov
leave
fldenv
sbb
insl
sbb
jmp
sbb
jae
int
data16
daa
sbb
adcb
outsl
adc
sbb
int3
xchg
fs
loop
mov
dec
shrl
mov
xor
and
mov
imul
sub
and
mov
lods
gs
cmp
or
sub
and
cmc
movsb
lods
or
xor
inc
scas
push
mov
enter
clc
and
cmpsb
in
and
shlb
imul
inc
mov
mov
xchg
inc
lods
lcall
push
xor
push
jl
or
cmp
aad
pop
mov
sbbl
push
test
test
test
mov
push
sub
fnsave
lea
sbb
in
sub
and
not
mov
or
dec
or
inc
push
sbb
inc
or
adc
add
add
or
dec
jp
stos
loop
dec
xchg
jecxz
jbe
call
cmp
lock
popf
and
lock
enter
pop
adc
leave
pop
cmp
imul
inc
adc
cmp
jp
das
stc
stc
adc
repnz
in
lods
hlt
pop
in
or
or
aas
in
inc
ljmp
mov
call
mov
push
insl
sbb
inc
sbbb
adc
push
pop
cmp
add
lret
inc
fidivrl
clc
test
and
xchg
pusha
sub
lcall
and
mov
or
or
test
test
lods
pop
cli
or
sbb
sbb
pop
aam
notl
cmp
adc
xchg
daa
and
dec
sub
mov
add
data16
fcoml
ret
stos
dec
sub
xchg
ja
lock
sub
xor
push
cld
adc
push
je
mov
leave
mov
sub
clc
cmp
jge
cs
push
add
mov
xor
mov
xchg
mov
test
sub
adc
xchg
mov
ret
in
inc
movsb
cmp
xorl
pop
adc
jecxz
lods
xchg
pop
pushf
sub
inc
sub
adcb
hlt
push
lcall
lock
in
sahf
popf
js
imul
js
dec
xlat
mov
pop
enter
mov
push
xchg
test
pop
out
dec
not
cmp
dec
movsl
test
sub
jo
jl
and
or
mov
push
call
arpl
incl
and
sub
test
pop
movsb
enter
sarb
fisttpl
xchg
push
xchg
cltd
sbb
lea
out
mov
cmpl
mov
pop
xchg
inc
inc
or
inc
and
adc
mov
jbe
daa
sbb
add
inc
rolb
add
es
lds
call
imul
sub
mov
cltd
xlat
or
dec
in
je
movsb
and
mov
dec
push
mov
mov
addr16
lea
popa
xchg
negl
jo
jecxz
pop
out
popf
loopne
data16
sub
movsl
mov
jne
mov
addr16
xchg
in
shl
jp
dec
lds
xor
xchg
imul
xor
mov
cli
rol
inc
mov
ja
mov
push
aas
adc
inc
pop
movzwl
movsb
pop
aas
or
push
xor
out
ficompl
les
jno
lret
add
lock
push
loope
and
jno
icebp
or
lret
inc
xchg
mov
dec
jg
test
in
nop
movsb
mov
int3
clc
push
or
inc
ss
je
add
adc
sub
in
xor
int
fs
xchg
dec
daa
xor
jae
adc
xchg
sbbl
pop
std
push
aad
mov
hlt
push
and
test
sub
data16
movlps
jp
xchg
out
adc
or
push
cmc
pop
subl
ret
adc
adc
adc
jp
add
adc
adc
test
fsubr
js
push
add
stc
add
mov
fimuls
inc
out
xor
pop
jl
jg
dec
xchg
mov
or
and
push
inc
push
xor
pop
insl
ljmp
mov
adc
mov
int
or
or
xchg
cmp
push
push
dec
enter
mov
mov
mov
cmp
pop
sub
and
xor
std
dec
sub
sti
test
add
adc
in
mov
pop
jecxz
cmp
mov
out
dec
mov
adcl
daa
or
xor
sub
stos
sbb
sti
in
pop
inc
sbb
jmp
cli
jnp
cwtl
add
cmp
jg
je
into
push
adc
mov
adc
addb
dec
dec
test
adc
push
sbb
jg
jle
scas
adc
adc
jle
push
adc
in
or
pusha
push
data16
mov
push
andb
pusha
repnz
jecxz
adc
push
jmp
mov
sub
sbb
mov
pushf
xchg
or
xchg
adc
jp
add
hlt
cs
mov
daa
inc
clc
and
adc
int
mov
ds
pop
cmp
mov
or
sarl
nop
or
and
cmp
inc
lret
in
loope
cmp
ror
pop
and
adc
rcrl
dec
add
cmp
xorl
sub
adc
jle
or
and
add
xor
enter
push
adcb
fnsave
cmc
rorl
xchg
test
dec
pop
inc
test
xor
ffree
mov
and
test
dec
in
leave
add
xor
stc
sub
mov
mull
jmp
dec
mov
xchg
adc
sbb
mov
adc
dec
mov
cmp
push
das
mov
int3
dec
sti
test
andw
add
es
mov
xchg
jns
xor
jo
clc
int
pop
insl
inc
jno
jbe
pop
lods
ljmp
sub
int3
loope
pushf
xor
pop
jp
fistps
repz
cld
ret
push
enter
jle
iret
mov
nop
or
or
mov
test
add
nop
dec
fidivl
mov
test
dec
pop
clc
es
xchg
and
inc
outsl
outsb
xchg
loopne
daa
or
lods
sarl
lret
mov
sbb
pop
sbb
pop
jmp
push
xor
pop
inc
xchg
jmp
dec
or
in
adc
stc
dec
int3
sub
repnz
lea
and
xchg
jb
dec
pop
cmc
jmp
push
mov
dec
dec
int
scas
adc
mov
jle
test
call
dec
dec
outsb
test
inc
mov
popf
sar
popa
cvtps2pd
adc
sbb
aas
sbb
and
sbb
call
inc
decl
popa
stos
inc
ss
sahf
in
xchg
mov
sbb
mov
jne
cltd
add
sub
insl
pushf
stos
push
sbb
mov
pushf
hlt
ja
mov
out
and
rcll
or
je
enter
call
dec
xchg
cwtl
popf
fistps
mov
push
adc
es
dec
fs
jne
movsb
pop
int3
int3
mov
test
jmp
aam
jb
push
inc
sub
mov
incb
enter
jge
mov
cs
xchg
cmp
pop
xlat
cmp
pop
jae
call
push
jg
jg
dec
xor
push
jo
iret
dec
sub
jae
fsubrs
popf
jge
mov
cmc
icebp
in
sbb
cmp
jmp
mov
and
xchg
lea
aaa
lock
sub
sub
xchg
and
mov
gs
sub
sub
negb
sub
movsb
xor
mov
adc
xor
adc
hlt
cmp
pop
sbb
sbb
pop
das
test
mov
xor
cmp
shl
pop
and
fmull
pushf
stos
jmp
cmc
scas
in
popf
dec
add
cli
mov
cmp
xchg
or
or
jne
cli
data16
and
iret
call
push
ljmp
cmpsl
outsb
fidivrs
call
aaa
sub
and
test
adc
test
adc
xchg
dec
add
xchg
aam
add
pop
push
push
mov
in
sub
notb
xor
xchg
sub
sbb
call
call
fwait
and
add
jecxz
adc
mov
push
and
popa
lret
adc
in
push
sub
lret
pop
adc
mov
std
adc
adcl
call
pop
push
and
popf
adc
mov
cwtl
dec
lret
outsb
mov
call
xor
push
lret
and
call
pop
mov
mov
inc
adc
in
xchg
dec
sub
add
je
cmp
inc
jmp
nop
pop
pop
ficoms
jne
push
data16
lea
inc
decl
je
xchg
imul
pop
dec
adc
cmp
jg
je
dec
rclb
ja
jmp
lea
fs
or
sub
or
add
push
daa
mov
test
out
or
sub
push
xchg
dec
push
or
je
sti
xchg
jmp
fstpt
or
jns
das
mov
adc
pop
call
push
adc
xor
loopne
mov
loopne
mov
pop
cmpb
out
mov
jle
jg
or
and
cli
mov
adc
out
andl
popf
movsb
mov
sbb
imul
notl
push
mov
pusha
mov
movsl
push
xchg
push
xchg
mov
neg
in
enter
cld
incl
gs
std
mov
stos
push
ret
adc
inc
and
mov
mov
lods
insb
test
xor
push
inc
or
push
and
sarb
movsl
or
mov
mov
loopne
mov
sbb
adc
fcoms
clc
and
mov
incl
push
test
shr
sbb
or
rol
lds
scas
mov
jne
adc
jmp
gs
push
pop
dec
fnstenv
test
sub
pop
xchg
test
mov
sbb
inc
movaps
js
aam
xchg
loop
adc
test
xor
shll
mov
leave
push
stc
movsl
cmpsl
ret
scas
scas
imul
add
push
push
xor
jae
adc
cmp
hlt
push
orl
sbb
dec
jae
lret
fcoms
mov
xlat
repnz
rcl
or
xor
movsb
inc
xor
xor
loopne
mov
mov
sbb
adc
adc
scas
jbe
ffree
and
adc
push
cmpsb
lods
xchg
mov
push
jecxz
in
cwtl
jge
and
xchg
jmp
push
shlb
pop
lret
out
jbe
add
fldcw
bound
jl
das
inc
push
aas
xchg
cmp
mov
je
cs
mov
shrl
pop
inc
lret
inc
jo
and
add
je
cmp
mov
add
pusha
mov
test
jl
movsl
loop
mov
push
sbb
das
ljmp
call
shl
popa
nop
test
or
adc
cmp
add
mov
inc
shlb
add
enter
mov
or
xor
cmp
mov
pop
xor
push
test
push
xchg
loope
jl
sbb
cltd
scas
in
icebp
mov
notl
fadd
push
push
pop
mov
jae
mov
ja
stos
or
inc
push
cmp
popf
jno
lock
or
sub
loopne
push
js
bound
shlb
adc
in
divl
je
push
mov
cmp
and
inc
add
nop
fs
push
push
xlat
fs
pop
sbb
rolb
jmp
and
adc
mov
jl
or
jge
and
mov
out
mov
mov
push
out
xorb
or
mov
dec
clc
mov
lods
jbe
or
mov
daa
mov
shl
icebp
push
dec
xor
xchg
xchg
or
andl
enter
aas
mov
mov
cmp
enter
mov
xchg
imull
xchg
push
loop
add
stos
mov
das
sub
adc
push
cli
rolb
xchg
mov
xchg
sbb
push
add
lds
push
xchg
imul
fnstsw
test
mov
sub
dec
insb
aad
pop
sub
shlb
js
clc
dec
push
dec
addb
push
cmc
xchg
and
push
les
jo
inc
int3
daa
clc
loope
mov
adc
std
mov
cmp
and
roll
sbb
dec
inc
push
cmp
jne
popa
mov
jns
adc
rclb
pushl
cmp
mov
push
pop
rcrb
lahf
cwtl
fwait
jge
popf
insb
loopne
push
call
inc
int3
xchg
cmp
cmc
mov
and
xchg
mov
mov
lret
rorl
dec
dec
or
in
clc
xchg
mov
movsb
daa
jo
cld
loope
jo
mov
push
jge
xchg
or
jno
jp
adc
or
faddl
je
out
loop
sub
or
and
ffreep
stos
stos
mov
xor
pop
mov
out
popa
pop
jmp
sub
cmp
jno
lahf
notb
cld
xchg
xchg
repnz
call
notb
imul
inc
cltd
push
testl
leave
and
adc
cmpl
or
and
movsl
adc
and
inc
add
xchg
cmpsl
leave
lock
pushf
push
inc
sbb
xor
test
cs
out
push
hlt
mov
paddq
scas
ss
pop
inc
nop
and
repnz
cmp
and
repz
push
push
je
push
mov
jo
popf
pop
inc
mov
jne
mov
push
add
push
sbb
fwait
cmp
hlt
enter
cmc
subl
mov
push
cmp
mov
int3
mov
mov
pop
jmp
pop
stos
or
ds
or
mov
inc
add
xor
or
inc
arpl
pop
inc
adc
adc
sub
jge
xor
js
xchg
imul
push
cmpsb
mov
cmpsl
subl
push
xor
mov
dec
dec
pop
cmp
and
les
in
and
les
push
mov
pop
pop
lds
mov
sub
sbb
leave
dec
sbbb
sbb
cmpsb
notb
orl
arpl
add
cmp
or
pop
imul
push
adc
sbbb
push
cmp
repz
mov
fwait
sub
add
jo
and
sbb
xchg
bound
push
adc
ljmp
mov
shl
mov
adcb
sub
jmp
xor
insb
dec
scas
mov
imulb
xchg
jnp
xchg
mov
int
pop
inc
sbb
jne
pop
mov
cs
bound
scas
aam
idivl
mov
sti
xchg
sub
inc
mov
orl
cmpsb
mov
push
bound
sub
xchg
adc
dec
leave
mov
lods
inc
scas
lock
xchg
push
pop
rorb
xchg
lcall
push
xor
lock
sub
std
movsl
les
and
test
cmp
xor
gs
call
add
idivl
cmp
push
push
adc
std
out
ljmp
mov
aam
enter
push
mov
fadds
cltd
ja
mov
fldenv
dec
mov
push
jmp
out
inc
jmp
and
mov
in
xchg
jge
mov
add
mov
scas
and
inc
cmc
adc
dec
or
mov
aad
stos
insl
jne
or
js
add
xchg
xchg
sub
lock
jge
push
lret
xchg
les
rcrb
lret
idiv
jno
lock
popa
enter
jecxz
push
xchg
and
inc
mov
or
arpl
movsb
and
xchg
mov
ds
fcoms
dec
push
dec
imul
in
adc
dec
outsl
mov
test
jno
call
mov
fldcw
or
out
std
cmp
mov
or
enter
jmp
xor
imul
movsl
cld
scas
push
test
js
ljmpw
cmp
jne
aas
movl
dec
pop
push
insl
cld
pop
aas
imul
adc
insl
xchg
or
repz
cmp
mov
test
xchg
xchg
stos
pop
jnp
mov
push
in
pop
jle
xor
jge
es
sub
or
push
aam
test
gs
xchg
mov
adc
and
mov
or
pop
in
mov
pop
in
sarb
jne
das
movswl
sub
je
sub
push
add
loopne
cmpsl
mov
sar
es
xchg
mov
push
adc
pop
jmp
xchg
mov
push
xchg
dec
add
pop
jge
rcl
popf
int3
jle
dec
scas
xchg
aaa
mov
daa
sub
leave
sbb
loop
adcl
dec
je
or
inc
push
jmp
mov
ljmp
stos
mov
fstp
cmc
pop
adc
xor
add
push
shrl
scas
icebp
jns
movsl
pushf
pop
lea
and
xchg
pushf
dec
jb
adc
push
lds
je
fxch
jno
push
jb
pop
xlat
divl
insb
mov
mov
pop
jl
addb
dec
sub
cli
add
mov
bound
jno
sub
test
and
cltd
mov
push
out
je
test
std
jg
mov
decl
sub
xchg
sbb
add
xor
jp
addr16
adc
inc
push
mov
daa
jmp
fcoms
in
mov
sub
lret
movsb
cwtl
test
inc
stos
dec
stos
sbb
mov
aam
cmpb
les
mov
dec
pop
mov
adc
lods
cltd
shlb
mov
lahf
push
push
cmp
int
icebp
inc
sub
mov
fs
addb
mov
pop
push
xchg
ljmp
fildl
adc
cld
sub
cmp
jo
cltd
loope
xor
mov
xchg
xor
xchg
pop
dec
mov
add
add
je
mov
test
lahf
int3
stos
sbb
test
outsb
dec
mov
mov
cld
mov
or
fcoml
stos
int
fbld
mov
lods
loopne
mov
jb
or
pop
repnz
xor
cld
fisubl
xchg
jmp
inc
ljmp
xor
add
mov
clc
dec
inc
hlt
iret
inc
push
xchg
maxps
in
or
push
cmp
mov
or
push
test
pop
pop
inc
pop
les
adc
rcrb
pop
mov
pop
dec
pop
mov
dec
adc
lods
xchg
mov
and
dec
ljmp
incb
and
pop
in
and
daa
and
push
inc
add
fistps
hlt
add
and
add
sti
or
pop
dec
mov
scas
clc
jne
mov
cld
jge
mov
lods
sub
pusha
sbb
enter
sub
das
cltd
imul
adc
je
mov
pop
test
sbb
movsl
cs
jecxz
ja
je
push
push
cmp
cmc
adc
popf
mov
pop
and
cmpsb
push
mov
xchg
or
push
les
sub
adc
inc
jle
ljmp
jecxz
adc
adc
xchg
push
xchg
enter
xchg
in
and
hlt
ljmp
in
pop
push
jne
or
push
sub
jmp
out
xchg
mov
dec
and
inc
and
xor
adc
mov
shrl
mov
das
jl
sub
clc
dec
push
cs
jp
mov
xchg
adc
lock
adc
aad
fcomp
xor
pop
pop
push
xchg
mov
out
adc
xor
xorb
cmpsl
adcb
popf
xchg
inc
add
js
fbld
xchg
or
xor
sbb
daa
xor
or
mov
andl
mov
mov
push
das
data16
cmp
cmc
les
mov
shlb
push
stos
cli
pop
sub
lea
push
or
stos
scas
imul
inc
daa
addr16
push
jns
cmp
mov
jno
add
inc
add
jge
lea
pop
pop
add
pop
hlt
je
cmp
inc
clc
dec
dec
or
and
and
std
js
inc
xor
sbb
mov
add
jle
lea
push
das
push
mov
or
sbb
imulb
adc
pusha
mov
out
add
test
jne
inc
add
jbe
jl
or
and
jo
adc
loopne
sbb
pop
sbb
xchg
fs
nop
push
jbe
pop
mov
dec
or
ret
out
and
repnz
pop
add
lock
in
std
jl
movsl
je
data16
adc
cmp
mov
in
cmp
dec
and
out
or
loopne
inc
mov
jb
xchg
leave
je
cmpl
cmp
aad
stos
dec
lret
push
adcl
inc
jbe
or
rcr
pop
sub
sub
out
aad
call
mov
add
pop
push
adc
or
int
fsubs
arpl
dec
stc
xchg
inc
sbb
add
jne
jo
loop
repz
sub
xchg
push
push
push
sub
aam
lods
pushf
lea
pushf
mov
int3
fs
rol
daa
pop
push
adc
pop
mov
popf
hlt
mov
cmp
imul
mov
push
xor
sti
or
xchg
adc
ja
jl
dec
hlt
lcall
push
cmp
push
jle
or
mov
mov
decb
daa
inc
sbb
outsb
lret
jge
mov
push
mov
cmpsb
and
xchg
push
jl
clc
into
jbe
sub
push
pop
call
fwait
adc
iret
or
les
cwtl
pop
les
sub
mov
pop
arpl
scas
pushf
or
xlat
and
out
dec
testl
fstps
add
dec
adc
pop
stos
scas
jnp
daa
mov
fbstp
dec
call
out
in
in
push
orb
call
clc
je
ds
or
scas
jp
in
mov
loopne
and
in
call
cmp
lcall
ss
incb
xchg
add
xchg
pop
out
negl
sub
ljmp
pop
sub
cmp
mov
rcrb
jo
inc
jbe
xor
aam
out
movsb
mov
pop
xchg
or
pusha
add
or
cmp
pop
ret
mov
add
push
scas
inc
popf
pushl
fists
jbe
jge
mov
mov
pusha
mov
ja
pop
adc
out
jp
push
mov
and
push
mov
ds
push
dec
sbb
jge
lea
jg
adc
xchg
addl
out
adc
pop
pop
pop
and
lret
xor
stc
ret
int3
cmp
insb
lods
dec
mov
adc
add
and
mov
push
test
xor
add
mov
push
sbb
lret
into
insl
cli
dec
shll
rorb
and
sub
mov
adc
mov
movaps
out
inc
sbb
mov
inc
inc
adc
imul
xor
popl
mov
outsl
repnz
jne
ficomps
inc
popf
out
sub
jmp
dec
pop
pushf
hlt
ljmp
jne
add
lret
scas
bt
or
lea
test
push
dec
jne
fcmovnbe
adc
ljmp
cmp
scas
lahf
pop
and
aaa
or
sahf
push
movsl
jge
jl
fidivs
movsb
push
sub
les
call
mov
bound
dec
nop
inc
enter
pop
jmp
cmc
dec
dec
xor
rorl
sti
xchg
imul
sbb
fs
clc
mov
mov
dec
in
push
xchg
in
cld
imul
mov
cmp
mov
cmp
inc
sub
dec
xchg
out
xchg
bound
scas
mov
jnp
sub
popf
dec
lea
aam
pop
inc
xor
add
mov
scas
and
cmp
jmp
scas
les
cmp
das
mov
sub
mov
add
inc
inc
clc
xor
xchg
mov
add
in
cli
leave
stos
ds
loope
push
cmc
fwait
mov
push
xchg
jl
sbb
shl
sbb
ret
xchg
and
popf
stc
imul
mov
sarb
flds
add
in
sbb
scas
js
pop
imul
imul
test
push
sub
iret
xor
idiv
loopne
lock
loopne
cwtl
mov
jmp
outsl
dec
les
xor
cmp
inc
div
scas
popf
lret
cli
in
xorl
and
orb
mov
ret
sub
ffreep
xchg
push
xchg
push
test
shrb
or
or
add
dec
add
insb
or
xchg
cmp
or
je
adc
repnz
lea
xchg
push
adc
push
mov
dec
mov
cmp
aad
out
push
sub
rcll
push
or
jno
sub
mov
pop
adc
jmp
jmp
pop
mov
inc
adc
inc
dec
sbb
jmp
movsb
pop
inc
lods
or
jmp
jmp
and
xchg
adc
push
adc
fs
sub
mov
and
incb
jne
lods
mov
rcl
xchg
or
xor
lret
repnz
sbb
je
jg
dec
fisubrl
or
inc
fidivrs
lods
mulb
push
cmc
mov
addr16
call
jo
addr16
call
cmp
xchg
jb
cs
cmc
test
mov
pop
inc
adc
cmpsb
sub
das
fcompl
mulb
dec
jmp
jae
orps
out
ljmp
dec
xor
pop
imul
adc
lret
push
push
mov
xor
sub
not
loop
add
push
push
and
sti
hlt
pop
filds
shl
or
test
sub
dec
loope
ret
push
fcmovnbe
push
inc
popf
jmp
lods
dec
sbb
pop
push
push
sub
sub
push
test
fmul
inc
fadds
pop
push
sub
fdivrp
inc
mov
cmp
sub
shlb
scas
xor
das
call
in
aas
dec
adc
arpl
jp
push
fs
stos
mov
jp
fstl
add
test
xchg
subb
in
test
enter
cmc
inc
pop
fiadds
inc
stos
mov
in
popa
add
mov
inc
and
jo
imul
sbb
sub
cli
adc
adc
push
int3
out
inc
cmp
enterw
xlat
xchg
or
shr
push
or
mov
push
mov
push
dec
push
pushf
sub
movmskps
xchg
outsl
mov
jo
imul
dec
fadds
loop
ds
jmp
xchg
test
pop
xor
adc
scas
sbb
jle
cltd
jmp
xchg
mov
and
and
sbb
in
mov
mov
dec
mov
scas
mov
not
sub
mov
or
ljmp
cmpsl
push
into
jns
shlb
std
dec
movsl
jge
sbb
adc
sbb
inc
daa
and
xor
and
xchg
mov
jp
mov
mov
call
jge
push
call
cs
add
and
or
and
pop
ja
jge
fs
sbb
and
xor
call
decl
rol
dec
adc
dec
leave
lret
dec
and
mov
add
dec
mov
pushf
push
aas
inc
pop
xor
mov
sub
mulb
jb
or
dec
mov
out
pop
add
popa
or
jne
cmp
push
cmp
jns
sbb
test
scas
std
in
mov
or
xchg
pop
pop
and
lock
dec
aas
pop
jmp
and
addl
push
mov
mov
pop
sub
sbb
adc
je
mov
and
add
dec
jl
mov
pop
xchg
or
push
adcl
cmp
dec
add
ja
pop
shrb
pop
test
setl
ret
loopne
jne
dec
sti
dec
call
out
jnp
dec
jge
push
push
rolb
push
sub
xchg
xlat
stos
push
test
mov
loop
clc
or
add
outsb
ds
pop
fwait
sbb
popf
jne
jnp
mov
cmc
testb
std
xchg
push
lcall
inc
and
push
add
out
nop
imul
jl
lea
jle
test
stc
leave
mov
std
out
xlat
pop
mov
or
pop
in
xor
jne
xchg
jo,pt
push
repz
inc
xchg
jbe
aam
jmp
inc
sub
loop
xchg
aaa
and
and
dec
stos
shr
lea
cmp
xchg
sub
inc
cmp
cmp
jmp
les
rclb
loop
adc
or
outsb
or
mov
adc
and
fwait
push
push
adc
or
pop
fwait
push
inc
push
je
das
jmp
aas
jb
aas
and
js
mov
rorl
mov
popa
add
js
mov
push
pop
push
fwait
adc
inc
pop
pop
mov
in
pop
pop
stos
je
fstl
xor
test
les
mov
dec
lret
add
sbb
sub
push
fcompl
daa
xlat
xor
andl
add
xor
xor
cwtl
push
pop
pop
js
mov
jmp
aam
insl
jne
aam
data16
add
inc
sub
dec
fs
push
ljmp
imul
pop
pushf
repnz
data16
push
data16
push
xchg
movsb
mov
jmp
xlat
sub
popf
xor
mov
das
cli
add
xchg
mov
pop
push
sti
mov
mov
fmuls
testb
pop
pop
push
or
sub
mov
jo
int
pusha
je,pt
or
sub
jle
jnp
jnp
jg
fs
xchg
aam
add
imul
idiv
aad
or
inc
call
icebp
popf
xchg
mov
lock
jge
mov
push
and
sbb
fimuls
aaa
cmp
jle
enter
sar
dec
mov
div
icebp
add
jmp
cs
sub
jbe
mov
xchg
stc
jnp
dec
sbb
test
sarb
test
xchg
adc
and
jns
mov
adc
shl
subb
add
lock
mov
mov
push
mov
push
xchg
jl
das
fistl
add
jecxz
dec
adc
decb
fstl
insb
xor
fcoml
inc
dec
adc
into
push
fistpll
aas
xor
decl
std
or
test
les
dec
xor
push
xlat
sub
lea
enter
in
mov
jnp
scas
xchg
repnz
je
mov
pop
cmc
es
pop
mov
cmp
inc
mov
mov
jle
pop
pop
lock
jecxz
test
mov
jp
mov
addb
sub
inc
sub
fbld
mov
test
lods
xor
and
pop
mov
in
lods
inc
mov
call
fadds
cmp
xor
mov
lea
les
je
xchg
jle
sahf
movsl
mov
dec
bound
adc
or
mov
or
xchg
repnz
mov
imul
mov
fdivr
mov
jo
test
add
lods
inc
enter
jecxz
clc
adc
xor
jmp
out
sbb
fldl
sub
push
and
adc
pop
adc
outsl
adc
aad
add
jmp
jg
fstl
mov
addr16
and
sub
xchg
enter
push
and
cwtl
mov
adc
xorb
push
jp
outsb
clc
in
mov
in
test
gs
or
ds
push
popa
hlt
stc
sub
leave
sti
orl
inc
cmp
pusha
int3
roll
push
iret
xchg
jo
out
dec
aad
enter
sub
add
inc
push
incb
jmp
jecxz
xor
cwtl
dec
or
add
xlat
fld
clc
fistpl
insb
mov
xchg
mov
pop
add
xor
pop
or
insb
xchg
scas
mov
in
sub
not
or
dec
pop
call
loope
mov
lods
js
push
sbb
repz
push
push
std
mov
clc
sbbl
rcrl
outsl
pop
cmp
mov
loopne
inc
mov
pop
aas
stos
xchg
or
xchg
pop
and
inc
test
lret
sbb
into
inc
enter
test
iret
leave
leave
clc
outsl
int
and
mov
sub
clc
out
arpl
add
xchg
add
inc
test
add
push
xchg
pop
pop
lock
xor
andl
push
call
pop
xor
cmp
mov
push
adc
rolb
pushf
adc
mov
mov
aaa
push
and
sbb
clc
pop
in
les
fcompl
in
loopne
pushf
iret
lock
mov
insb
dec
push
jmp
scas
dec
stos
out
js
sbb
adc
clc
popf
pusha
inc
js
hlt
dec
fisubrs
movsl
jnp
adc
into
pushf
cli
lock
xchg
mov
push
and
test
ja
xchg
mov
fists
adc
dec
sbb
and
cmpsl
xchg
jge
int3
cmp
fistps
jbe
data16
imul
dec
adc
inc
ljmp
push
arpl
jmp
and
jnp
add
into
or
test
push
add
aas
daa
pop
test
popf
jle
mov
push
adc
xlat
movsl
pushf
or
sub
les
mov
jecxz
push
dec
jmp
inc
xchg
inc
add
adc
lea
mov
push
and
test
and
xchg
dec
pushf
movl
push
add
add
add
or
ja
push
clc
cmp
test
jns
push
rcrb
test
mov
mov
test
mov
ss
imul
mov
mov
sbb
je
cmp
pop
out
fcoms
adcl
dec
les
ja
or
loop
mov
sahf
push
xor
push
nop
mov
and
pop
rcrl
fcomps
cld
push
rep
push
lret
mov
sub
xor
out
adc
add
push
movb
and
push
adc
push
xor
and
cwtl
or
mov
mov
add
loopne
fwait
pop
test
inc
shlb
mov
xor
inc
dec
push
lahf
push
or
fimull
or
inc
adc
xorb
add
push
mov
or
inc
inc
mov
inc
lods
and
sbb
jmp
mov
and
xchg
and
jmp
xor
shll
test
cmp
pop
pop
pusha
dec
sub
sbb
jne
unpcklps
sub
and
insb
xor
and
sub
push
xchg
dec
inc
cmp
mov
aam
push
sbb
push
and
adc
subb
test
es
rcrb
xor
jmp
mov
call
stc
push
mov
cmpl
or
dec
and
cmpb
sub
dec
dec
shl
push
lret
dec
sub
mov
daa
jmp
sub
jns
cmp
dec
add
cmpsl
sub
inc
adc
movsl
dec
nop
ret
push
je
xchg
sub
jmp
or
std
shll
mov
test
stc
mov
jmp
mov
push
testl
add
dec
fadds
cmp
das
inc
fiadds
stos
mov
orb
add
add
jno
inc
addl
sub
les
pushf
cmp
push
mov
push
fcmovnu
or
aam
icebp
outsb
lret
or
ret
ljmp
addl
test
fldl
and
dec
loop
inc
call
cwtl
mov
mov
int
xor
cmp
test
test
out
dec
mov
add
or
cli
in
lret
data16
push
xchg
mov
scas
jae
mov
push
mov
testb
or
nop
scas
aad
nop
hlt
xchg
push
in
in
add
dec
inc
ljmp
movsl
inc
sub
outsl
adc
and
mov
aas
adc
jno
addr16
insl
xor
push
mov
or
jmp
pop
inc
mov
sbb
sarb
mov
adc
pop
ret
xchg
adc
popf
push
jo
inc
dec
xor
cwtl
xor
aad
jae
negl
js
jne
fnstsw
sbb
push
repnz
daa
jge
loopne
test
lahf
test
inc
and
into
push
cmpsl
mov
ret
je
or
add
jg
rclb
jno
aad
int
push
std
add
ficompl
xchg
mov
shll
je
int
mov
sub
scas
negb
xlat
or
jb
push
iret
push
mov
mov
and
mov
in
push
inc
es
das
arpl
cmpsl
or
jl
jmp
lock
sub
mov
out
cmc
imul
sub
inc
adc
in
mov
dec
daa
mov
dec
rolb
or
sub
sbb
les
stos
loope
pop
push
push
mov
mov
jae
or
adcb
lods
xchg
xor
nop
adc
leave
ficoms
inc
xor
fnstenv
iret
sub
mov
dec
adc
in
and
jne
repz
push
iret
mov
jae
sub
bnd
push
mov
test
fsubrl
ss
jmp
push
movsb
mov
es
and
aam
addr16
or
jmp
ja
xchg
out
xchg
cli
dec
and
data16
shr
push
fdivrl
iret
add
sti
pop
pushl
ss
out
movsb
inc
ret
jl
push
adc
or
lods
push
inc
sbb
pop
js
out
inc
lds
decl
xor
add
or
jnp
test
js
push
sbbl
movsb
mov
ds
push
dec
rorl
add
xchg
out
int3
adc
bound
dec
cmp
out
or
push
daa
imul
stc
add
daa
sub
mov
test
pop
loop
or
ficomps
dec
add
lret
into
push
push
ja
mov
add
lret
negb
out
out
pop
cmp
adc
ret
jmp
call
and
pusha
jae
adc
jb
aam
enter
xchg
cmp
sahf
sbb
adc
adc
popf
scas
mov
or
lods
fwait
mov
jmp
jmp
sub
sub
inc
and
add
mov
pop
mov
xor
sbb
shll
add
iret
outsl
lret
dec
pop
cmp
test
or
or
push
adc
and
add
ds
xor
std
insb
pop
test
jge
add
or
jp
add
inc
jmp
dec
push
push
cmpb
adc
add
int
jb
popf
into
nop
mov
jge
mov
fnstsw
mov
push
scas
xlat
aam
orb
jge
inc
mov
es
sub
push
movb
cmp
mov
dec
or
pop
and
mov
cmp
adc
inc
or
fstps
add
sub
push
ljmp
fisttpll
jl
shll
mov
ret
or
jl
push
pop
or
inc
shlb
mov
loop
add
push
dec
and
pop
add
shll
adc
ljmp
push
repz
inc
jae
das
call
jl
push
inc
jne
or
cmpsb
mov
pop
imulb
or
push
push
push
dec
jmp
mov
les
and
jecxz
or
call
stc
inc
subl
sub
js
mov
xorl
push
stos
push
lcall
push
lahf
and
ret
or
popf
call
cs
push
mov
dec
jg
js
fstpt
xchg
mov
adc
and
sub
movsb
jbe
xchg
int
cmp
xor
push
pop
lea
xorl
imul
adc
andl
xor
or
adc
and
mov
sbb
scas
inc
arpl
xor
aam
or
add
fs
inc
mov
mov
mov
in
movsl
push
or
sub
jg
jle
sbb
jl
or
and
dec
mov
mov
jne
jle
adc
outsb
les
mov
mov
pop
cs
pop
ret
or
mov
loop
xchg
les
push
dec
sbb
cmp
cwtl
push
xchg
popa
adc
dec
pop
cmp
inc
or
mov
sub
dec
loope
sub
pop
icebp
push
and
aam
out
push
xor
xor
bswap
cmp
stc
dec
sti
add
and
or
ret
jmp
sub
pop
xchg
loopnew
mov
cmp
stc
lcall
inc
fistl
out
imul
xchg
je
dec
aaa
inc
cmp
push
sub
test
xor
xchg
out
mov
and
and
jbe
dec
xor
mov
push
inc
xor
pop
xor
mov
gs
adc
push
inc
fdivr
adc
movsl
mov
cld
and
jne
in
pushf
xor
inc
inc
jmp
test
clc
in
orl
jnp
jo
stos
dec
aad
pop
sbb
add
sbb
push
cwtl
int3
xchg
cld
inc
jmp
cmc
cltd
add
pop
adc
pop
sarl
sbb
fists
mov
dec
in
sub
lea
mov
and
hlt
jmp
ret
or
adc
mov
mov
and
inc
pop
mov
pop
movsl
or
mov
xchg
and
inc
or
stos
aas
mov
or
add
clc
cli
xor
adc
jne
test
mov
cltd
sbb
mov
xchg
push
les
stos
adc
xor
mov
pop
jl
sub
fs
cmp
mov
sbb
outsl
cld
mov
lret
andb
inc
sbb
inc
add
dec
std
scas
shrb
andb
mov
jno
pop
aaa
xchg
jmp
test
mov
push
std
repz
fucom
push
enter
jg
jns
and
mov
mov
mov
push
sub
jne
xchg
push
mov
sub
daa
and
push
fstpl
icebp
sub
mov
and
std
adcb
mov
pop
aad
jns
aam
mov
push
lods
jbe
lahf
xchg
out
pop
stos
jne
push
push
push
adc
and
push
or
mov
imul
adc
cmpsb
test
mov
xchg
push
mov
stc
pop
mov
and
dec
outsl
mov
rcrb
and
test
mov
xor
mov
cmp
or
je
inc
xlat
or
out
or
aad
cli
mov
and
jg
aas
repnz
pop
cwtl
xchg
lcall
mov
jno
iret
les
mov
xchg
out
adc
loopne
ret
pop
add
popf
emms
shlb
mov
mov
jae
xchg
cwtl
ja
push
and
and
jnp
push
sbb
sub
pop
xchg
push
mov
inc
jbe
or
cltd
add
popf
sub
pop
or
adc
pop
sub
inc
sub
jle
ds
mov
pusha
mov
and
xor
push
add
xor
imul
dec
ret
notl
xor
cmpsb
jb
xchg
mov
sahf
cld
inc
je
fadds
mov
dec
mov
outsb
movsb
lcall
scas
push
pop
hlt
fsubr
xchg
aam
dec
popf
sbb
xor
adc
es
ret
cli
push
bound
jo
xor
je
xlat
add
jl,pn
dec
or
xchg
xorb
push
ja
push
leave
std
test
adc
mov
repnz
and
push
push
inc
pop
cmc
pusha
repz
addr16
inc
add
xchg
mov
xor
xor
or
add
push
jb
in
adc
call
psubsw
fstp
cmc
jmp
xor
arpl
inc
cmp
inc
or
adc
in
mov
inc
push
cmp
dec
sub
inc
dec
xchg
pop
mov
adc
pop
sarb
dec
pusha
push
cmp
dec
mov
cld
int3
scas
mov
jbe
jmp
sub
push
decl
cmpsl
js
push
je
imul
shl
adc
jg
xchg
fcmovnb
xchg
push
rorb
das
adc
imul
xchg
mov
mov
jmp
rorb
cmp
ds
push
nop
adc
mov
addl
push
cli
nop
cwtl
xchg
xchg
cmp
push
jmp
test
lahf
jo
out
add
cmc
sbb
daa
idivl
xchg
mov
mov
add
mov
adc
inc
inc
in
js
out
mov
or
shlb
and
push
mov
test
inc
pushf
adc
mov
cli
out
or
sub
pop
mov
scas
js
mov
mov
repnz
cld
inc
mov
pop
cmp
mov
dec
clc
adc
xor
cmp
hlt
cmp
ljmp
jbe
mov
push
daa
sbb
dec
loope
das
mov
dec
lcall
fs
mov
shlb
inc
xor
pushf
mov
mov
add
fwait
pop
cld
test
leave
xor
mov
repz
pusha
in
cmp
adc
add
push
jmp
pushl
lret
hlt
movsb
cld
int3
ljmp
call
xchg
xchg
inc
mov
lcall
movl
movb
push
add
dec
adc
cmpsl
fnstcw
xchg
movl
jecxz
pop
icebp
cmpl
xor
sub
mov
xlat
adc
addr16
xor
lea
push
clc
mov
push
push
outsb
xor
iret
and
fs
mov
jl
divl
add
jl
in
push
inc
sub
mov
sub
lea
sub
ss
leave
xor
mov
mov
test
pop
dec
jae
inc
in
and
das
inc
jbe
dec
adc
xchg
xadd
xchg
in
jnp
cld
xor
jo
enter
dec
pop
adcb
sub
mov
add
fimull
ds
pop
sbb
inc
inc
lahf
in
mov
dec
cltd
inc
dec
or
add
dec
dec
stos
and
add
rcrl
adc
fisubs
adc
ret
push
adc
or
adc
movsl
pop
push
adc
or
ret
icebp
jp
mov
data16
sbb
adc
stos
push
xchg
pop
hlt
fwait
adc
int
sbb
stos
jo
popa
out
dec
leave
inc
jo
jbe,pn
scas
lcall
or
sbb
xchg
je
imul
push
push
lret
jl
hlt
lahf
jno
dec
mov
xor
sbb
loop
xchg
incb
test
add
cmp
je
cmp
and
outsb
pop
nop
cmp
es
iret
push
pop
test
jne
mull
pushl
inc
cmp
adc
nop
lds
mov
adc
or
lret
je
push
mov
mov
xchg
xchg
cmc
insl
xor
and
jmp
pop
dec
ds
cmp
jle
lods
and
xchg
push
mov
stos
sbb
les
sub
jp
push
daa
adc
and
push
xchg
and
or
cmp
xor
pop
mov
cmp
mov
xor
adc
lea
out
mov
pop
jmp
in
xor
push
adc
push
ss
out
push
mov
mov
push
or
jne
sbb
xor
inc
loope,pt
inc
mov
pop
aaa
notb
sub
inc
rorl
adc
jle
nop
insl
sub
inc
clc
sbb
imul
inc
test
xchg
push
sbb
out
es
inc
dec
fs
fmul
mov
sub
shrl
out
xchg
dec
fmuls
adc
cmp
xlat
lret
cmp
shr
dec
adc
push
jge
fildl
icebp
xchg
test
aam
push
notl
mov
pop
cmpl
je
and
ret
dec
ljmp
test
jne
add
mov
add
repnz
cmc
sti
add
pop
dec
xchg
or
and
pop
or
lds
jge
mov
or
lock
pop
lods
push
and
sahf
xor
jle
insl
or
jmp
xchg
lret
pcmpeqw
jmp
adc
cmpsb
xor
js
or
scas
sbb
pop
popa
aaa
ja
mov
push
in
and
adc
int3
dec
and
daa
mov
push
mov
push
pop
lock
shlb
xor
jl
mov
testl
push
scas
int3
hlt
mov
cmp
xchg
fs
mov
in
xlat
loope
sub
xchg
mov
cmpsb
subb
movl
adc
das
out
aam
dec
call
pop
jne
push
dec
cli
push
xor
dec
pop
or
adc
mov
adc
and
lock
and
ja
lock
sub
inc
outsb
cmp
sub
testb
call
sub
outsb
adc
cmpsb
insb
add
call
xor
sbb
xchg
popa
mov
xchg
lret
sarl
bound
dec
and
inc
or
inc
mov
fimuls
inc
cmpsb
sbb
and
sbb
sub
xchg
lcall
jno
fsubr
or
arpl
jl
inc
emms
pop
je
push
shrb
dec
jbe
into
push
add
lret
or
scas
test
or
or
xor
out
int
das
mov
or
push
sbb
inc
inc
inc
inc
and
in
ret
in
dec
jecxz
dec
jbe
bound
sbb
dec
mov
iret
das
mov
xchg
movsl
andl
gs
jno
test
xchg
push
cmc
xchg
adc
pop
pop
test
je
cmpsl
push
dec
jne
sbbl
in
sub
fsubrs
js
adc
sbb
cwtl
cmpsl
push
xlat
in
mov
loopne
cmp
jne
dec
sbb
sbb
jge
push
inc
out
adc
leave
and
and
and
shlb
cli
xchg
ja
dec
adc
ds
cmp
cltd
xchg
ret
and
push
call
push
stos
adc
cmp
cmp
jne
and
adc
pop
sti
les
adcb
cwtl
lds
push
pop
push
fists
ret
pop
cmp
aas
je
push
pminsw
mov
adc
push
adc
loopne
leave
sar
outsb
mov
mov
push
out
pop
pusha
mov
jne
mov
rcl
jo
mov
nop
adc
jbe
mov
xor
xchg
sbb
sbb
adc
push
adc
and
mov
xor
xchg
aam
das
jmp
mov
fsub
xor
pop
and
and
rcl
inc
and
add
call
js
add
std
fisubs
inc
sbb
mov
aad
jl
add
jl
add
and
push
sarl
mov
cwtl
cltd
push
mov
xchg
adc
jbe,pn
jno
adc
orb
or
jne
mov
mov
jbe
adc
mov
pusha
xorb
dec
lock
lahf
aam
ret
add
sub
andb
add
cmp
call
sub
je
push
pop
push
icebp
loop
push
repz
cmp
aad
mov
pop
movsb
fwait
cmovg
notb
inc
mov
inc
rorb
repnz
pop
lcall
push
jmp
scas
mov
pop
rcr
cmp
xor
add
lret
push
scas
mov
nop
fsts
mov
and
shl
xor
pop
pop
pop
stos
xor
jge
jno
sub
and
cmpl
xor
in
adc
lret
test
adc
pushf
es
sbbl
scas
push
dec
pop
xchg
cltd
push
andl
test
push
pop
add
testb
jge
ljmp
mov
add
add
and
xchg
testl
xor
rorb
inc
push
mov
add
pop
pop
and
pop
clc
mov
pop
fadd
sti
lret
std
ret
lods
jl
inc
or
mov
andb
cmpb
out
jae
adc
xor
mov
test
lds
mov
stos
les
in
enter
pop
jge
dec
mov
adc
xchg
pop
adc
mov
pop
enter
call
adc
inc
inc
pop
xlat
loopne
push
outsl
cmp
dec
adc
mov
inc
cs
fstpl
cmp
das
in
das
fists
cmp
aaa
imul
or
outsb
push
add
fscale
push
inc
xor
sub
movsl
ljmpw
push
cs
in
xor
xor
mov
mov
jns
pusha
test
xor
mov
cmp
add
adc
and
adc
mov
nop
inc
mov
mov
orb
push
loopne
mov
aas
xchg
std
cwtl
lods
test
xchg
adcl
in
adc
movsb
daa
mov
test
lea
dec
push
push
mov
mov
or
inc
call
dec
out
push
pusha
cmc
int3
or
pop
push
daa
icebp
fstl
jp
push
enter
mov
sub
call
jl
xchg
insb
lods
inc
cwtl
push
imul
pop
cmp
popf
and
shll
arpl
pop
mov
mov
inc
mov
mov
xchg
cli
jmp
shlb
inc
sub
dec
lock
sub
or
je
call
or
jmp
push
inc
jbe
sbb
iret
and
es
in
lds
incl
mov
lea
cli
jecxz
pop
dec
push
or
sarl
inc
je
rcrl
jne
das
std
into
leave
adc
add
inc
sub
xor
adc
adc
mov
mov
icebp
xor
dec
push
aaa
xor
push
jecxz
sub
lods
fnstsw
mov
mov
mov
mov
ret
call
in
mov
inc
aam
jp
out
arpl
adc
sub
add
pop
in
adc
loope
sub
lock
mov
ds
jb
adc
push
fucomi
movsl
out
hlt
cmp
sbb
push
mov
outsb
ficoml
outsb
jge
mov
adc
or
lock
sub
jne
mov
adc
sarb
enter
push
fs
in
outsl
lock
popf
jno
sub
inc
enter
int3
xor
addr16
testl
cmc
dec
jnp
sbbl
fstps
cmp
and
dec
jae
dec
je
sub
leave
or
inc
hlt
push
xor
sub
jno
mov
sti
add
xor
push
sbb
popa
cwtl
scas
or
dec
insb
loop
aad
out
xchg
out
xchg
jmp
loope
aad
outsb
fs
leave
mov
sbb
call
xor
or
or
jne
sbb
rcrl
daa
ret
ds
ffree
out
xchg
ret
and
push
dec
and
dec
xor
sub
jbe
dec
mov
fisttpll
ret
imul
inc
or
sbb
jle
lahf
and
or
push
inc
sbb
push
jmp
push
jne
push
pop
mov
mov
cmp
or
push
mov
sbb
popa
push
call
xor
inc
adc
test
mov
dec
mov
adc
sbb
and
pop
xlat
dec
aad
pop
adc
xor
outsl
xor
test
push
push
test
cmpsl
scas
xor
inc
adc
jo
push
mov
and
mov
shlb
mov
jnp
outsl
lret
in
jo
lods
inc
dec
xchg
sub
xor
fildll
or
jp
mov
inc
popf
or
adc
daa
dec
inc
aas
jge
ret
call
es
or
mov
clc
adc
xor
push
rclb
pop
and
lcall
lea
adc
adc
aam
fs
test
ss
mov
das
dec
enter
das
gs
push
lret
aaa
xor
and
cwtl
andb
sahf
and
cmp
inc
mov
xlat
pusha
lcall
lea
add
daa
push
sub
inc
bound
call
push
add
adc
cmp
adc
push
mov
daa
and
aad
repnz
decl
flds
pop
test
push
and
sar
das
les
cld
fisttpl
adc
jbe
js
add
sti
and
jge
and
cmp
pop
xchg
test
or
jmp
or
insb
cmp
or
dec
and
mov
cltd
jmp
and
mov
lahf
inc
jg
negl
adc
xor
xor
mov
bound
fiaddl
xchg
dec
adc
xchg
nop
inc
notl
ret
in
std
fstl
inc
mov
ret
pop
cmp
sar
mov
mov
jmp
rclb
test
enter
enter
roll
mov
int3
pop
cmp
int
es
push
inc
lcall
dec
adc
jp
push
daa
ficomps
fcompl
mov
out
push
add
lcall
cmp
loopne
cmp
xchg
sub
xchg
xchg
mov
lahf
ja
push
popa
adc
cmp
mov
inc
fsubl
mov
shlb
sbb
decl
out
pop
lds
adc
adc
adc
aad
repnz
jne
or
add
push
movsl
xchg
sub
and
sbb
inc
data16
pop
jp
mov
adc
sbb
mov
and
sbb
sbbl
fisubrs
push
xchg
and
sbb
in
pop
mov
xor
dec
fisubs
in
sbb
add
sti
xor
adc
xor
fsubrs
idivb
pop
push
xchg
pop
cmp
mov
popf
push
fwait
push
in
mov
mov
adc
dec
outsl
pop
add
jmp
lahf
andb
add
ficomps
inc
add
pop
lahf
jmp
pop
rolb
inc
jge
ja
push
inc
push
add
pop
dec
xor
cmpl
je
adc
std
xchg
pop
push
lret
pop
add
mov
movsb
inc
lahf
js
push
setno
pushf
rclb
mov
mov
movsl
push
ja
ret
dec
jno
sub
mov
test
xor
stos
ljmp
sti
mov
sub
leave
fsubp
mov
testb
mov
stos
or
adc
cmp
xor
fcmovbe
xchg
lods
or
jecxz
pop
test
cmp
adc
push
mulb
hlt
xchg
rcrb
loope
fnstenv
jmp
hlt
xor
mov
dec
sarl
imul
std
arpl
fisubrl
or
jne
out
shll
aam
cli
rorb
fwait
stos
inc
lock
ds
push
push
xorl
cld
ficoml
imul
dec
bound
je
sarl
pop
test
or
jne
jne
xchg
imul
arpl
int
sbb
add
mov
popf
shll
add
adc
xchg
jl
push
sbb
mov
or
inc
js
xchg
and
fs
jnp
inc
jmp
mov
inc
mov
cmp
inc
scas
dec
push
and
lods
adc
xlat
adc
stos
xchg
dec
lock
pop
mov
lea
das
inc
and
call
add
cmp
add
xor
andl
or
mov
mov
pop
pusha
addl
mul
les
xchg
gs
mov
inc
jne
xchg
inc
imul
loopne
pop
xchg
inc
xchg
les
sub
xor
xor
dec
js
adc
push
sub
shrl
fstps
frstor
outsl
xchg
xchg
mov
stc
mov
das
loop
mov
ja
jge
aas
add
dec
out
hlt
cmp
sbb
inc
call
mov
mov
cltd
mov
inc
and
cs
arpl
xchg
cmp
push
in
xor
bound
push
adc
sbb
hlt
rcll
xchg
jge
xor
cld
pop
icebp
sub
clc
jmp
xchg
xchg
hlt
push
or
push
cmpsb
stos
dec
fcomip
aam
stos
and
mov
fmull
push
push
pop
xlat
jne
or
cwtl
arpl
or
add
inc
rorl
xor
int3
in
sub
mov
ret
rorl
das
adc
outsl
cmp
lret
int
int
and
push
cmpsb
andl
jmp
ja
sub
loop
adc
inc
or
jg
aad
xor
in
ljmp
inc
lds
jmp
sarl
cmpsl
mov
xchg
pop
inc
cmc
or
push
popa
fwait
push
leave
pop
jmp
push
mov
fnstsw
loope
insb
enter
cmp
jne
and
push
mov
pop
xor
stc
dec
sbb
arpl
insl
fcoml
mov
pop
adc
cmp
icebp
fildl
je
jge
std
or
imul
daa
das
outsb
xchg
or
jmp
data16
adc
je
push
lds
fs
je
mov
fsubs
inc
jmp
mov
les
scas
mov
xchg
test
iret
mov
xchg
xchg
shrl
les
xor
mov
mov
sbb
pop
aad
pop
pop
cmpsb
hlt
outsl
mov
and
xor
div
test
add
sbb
inc
pop
add
mov
mov
int3
xor
fsubrl
stos
stos
push
cmc
jno
dec
add
in
push
and
xchg
nop
jecxz
pop
out
rcll
lahf
pop
sbb
cmc
mov
jb
mov
add
mov
movsl
fwait
and
js
jle
adc
pop
outsl
jo
orl
adc
cs
cmp
int3
mov
pusha
out
sub
data16
ss
xor
pusha
cmp
xor
push
or
loope
cli
cmpsb
xchg
adc
sbb
jne
int
das
scas
or
or
push
pop
stc
adc
movsb
add
lea
dec
rcll
std
add
js
je
addr16
cmp
enter
inc
mov
call
jmp
sbb
sub
insl
cmpb
jb
outsb
je
push
rclb
in
out
mov
push
movl
dec
mov
add
dec
inc
jo
sub
andb
push
jae
rcr
or
xor
call
cmp
xor
mov
pop
push
outsl
shrb
mov
out
mov
daa
xor
mov
xchg
and
pop
lea
inc
push
cli
jae
or
call
dec
cmc
sbb
mov
repnz
aad
mov
add
call
out
or
dec
mov
cmpsl
js
push
call
popf
test
sbb
jge
inc
sbb
push
pop
push
call
rclb
rorl
fwait
inc
testl
inc
adc
inc
inc
dec
or
sbb
xor
push
dec
and
or
inc
adc
xor
and
sbb
pop
inc
insb
add
shlb
push
lret
adc
add
aaa
pop
orb
jg
aad
add
push
and
pop
jnp
int3
jo
loope
jl
push
pop
test
inc
mov
adc
push
adc
or
dec
sbb
mov
out
icebp
popf
sub
pop
pop
out
test
mov
xor
cmp
nop
and
jmp
loopne
in
es
dec
pop
rcl
xchg
mov
xchg
dec
in
inc
pop
and
mov
and
scas
inc
fsubrs
push
loope
out
popa
inc
cmp
in
add
mov
xchg
clc
cli
aam
scas
adc
jnp
daa
aad
mov
jbe
test
pop
jl
dec
mov
xor
call
pop
pop
dec
test
movsl
inc
fcompl
into
push
inc
sub
lret
sub
fisttpll
ljmp
cli
in
jnp
mov
xchg
lcall
ret
ss
and
xor
inc
int3
out
fisttpll
mov
pop
inc
adc
sbb
mov
jge
cmp
stos
fmulp
test
lock
aaa
sbb
ss
adc
dec
mov
fildl
jno
or
jmp
rorb
incl
das
enter
repz
lods
lahf
inc
adc
jl
mov
test
int
and
lea
aas
and
je
ficomps
das
shrb
mov
cvtps2pd
push
call
loop
test
aad
pop
dec
lret
fs
jne
and
pop
cmp
sbb
adc
adc
adc
mov
adc
scas
fcompl
lods
sub
lock
dec
std
jo
pushf
push
and
lahf
pop
call
stc
jo
stos
sub
jbe
nop
adc
dec
lea
fs
jb
sbb
das
and
xchg
shll
adc
inc
push
adc
mov
subb
xor
cmpl
inc
xor
inc
nop
mov
jne
push
pop
sbb
pop
cmp
dec
mov
jne
dec
adc
xchg
push
inc
inc
adc
mov
dec
mov
jp
jmp
stos
hlt
inc
add
inc
cmc
sub
mov
rol
loopne
xchg
push
xchg
dec
dec
mov
or
adc
adc
jns
and
mov
pop
sbb
in
fisubs
std
call
out
lahf
dec
jbe
jg
js
pop
mov
in
decb
jecxz
pop
push
mov
dec
adc
mov
and
sbb
movsl
sti
pop
mov
or
fstps
lret
loopne
stos
cmp
xchg
or
push
shll
ljmp
cmpsl
adc
mov
pop
add
cmc
cmp
or
das
shrd
mov
or
test
testb
shlb
jg
add
push
call
mov
int3
decl
add
das
mov
add
jne
testb
je
mul
add
mov
data16
stc
insl
jl
shlb
popa
and
loope
sbb
enter
mov
daa
lret
out
inc
push
mov
std
insb
dec
sqrtps
pop
push
daa
add
adc
or
pop
out
mov
popf
inc
add
sbb
or
in
push
inc
sub
cmc
pop
rcrl
mov
cs
fsubs
movsl
mov
das
xchg
xchg
int
xchg
xor
jg
daa
lods
xchg
movsb
dec
mov
push
sbb
enter
cmp
mov
push
cmp
mov
shr
mov
js
jmp
or
ds
push
data16
test
std
dec
lret
fdivl
sub
or
pop
sub
and
cmp
mov
movsl
jno
mov
cwtl
and
lods
clc
pop
sarb
stc
je
test
lret
or
rcr
movsl
rcrb
mov
test
repnz
lcall
mull
inc
test
xchg
push
cmp
push
push
repnz
out
imul
iret
sbb
aad
loop
xchg
dec
icebp
push
ljmp
pop
mov
jg
mov
das
stos
adc
xchg
jp
jmp
scas
lds
test
mov
jbe
sbb
or
std
cmp
mov
dec
sti
xchg
sbb
hlt
ret
xchg
mov
add
rclb
cwtl
insb
outsb
dec
xor
cmp
inc
imul
and
in
xchg
push
sub
dec
pop
inc
or
mov
scas
lock
add
gs
inc
sbb
test
mov
pop
mov
ds
je
sub
jmp
pop
in
dec
leave
add
xor
aam
or
rcrb
xor
shrl
mov
lds
xor
iret
jge
add
ds
adc
jnp
mov
xchg
dec
ret
sub
lods
xor
fists
divl
mov
jb
jbe
test
pop
fstpl
jbe
dec
jo
sub
inc
movsb
push
sub
ret
out
ficoml
inc
shrl
rdtsc
mov
dec
jmp
push
cltd
sub
mov
jbe
mov
testb
jne
push
and
ljmp
das
clc
sahf
sub
cli
adc
fimuls
in
and
icebp
xchg
and
imul
insl
cmpl
lahf
enter
push
sbb
jne
inc
leave
xor
and
rcl
sbb
in
push
and
dec
ret
adc
dec
push
negb
cmpsl
jne
jo
mov
and
scas
lret
mov
xchg
cli
in
pop
lcall
in
mov
mov
andl
jne
adc
lods
mov
lods
sbb
lods
dec
push
xor
cmc
cli
call
mov
mov
lea
dec
ds
fwait
add
aam
cli
call
cli
adc
xchg
dec
pop
movsb
lcall
cli
add
adc
mov
cmpsl
lret
rclb
inc
jo
and
or
add
add
clc
or
push
and
mov
sbb
mov
push
push
sub
repz
jmp
sar
mov
jmp
aad
test
scas
shr
and
push
popa
sbb
pop
sbb
push
ficoms
cmp
setne
and
test
dec
pop
and
or
daa
cmp
in
dec
imul
mov
or
ret
sub
scas
subb
jmp
and
sti
out
xchg
test
add
and
lods
sti
data16
mov
xor
test
sbb
dec
jmp
jmp
test
js
or
shr
pop
mov
pushf
mov
mov
fbstp
je
dec
mov
jp
in
unpcklps
and
test
lock
sub
inc
mov
lods
loope
cmp
mov
jmp
sub
mov
incb
cmp
fisttps
dec
orb
mov
ret
sub
out
fld1
dec
imul
clc
pop
enter
sbb
ljmp
mov
je
aas
in
mov
enter
xchg
push
mov
xchg
es
jb
mov
out
loope
sarb
jne
leave
mov
sub
mov
in
xlat
lds
into
xor
mov
jge
push
jecxz
and
pop
jmp
test
jp
cmpl
movsl
sub
popa
xor
mov
adc
ljmp
das
out
and
inc
push
inc
mov
dec
std
sub
clc
sub
lahf
sbb
hlt
xlat
add
sbb
push
jecxz
jbe
cmpsl
insb
subl
subb
push
ljmp
lds
xor
or
or
sbb
scas
mov
push
je
ja
dec
add
pop
popf
adc
pop
pop
add
xor
orb
inc
mov
push
sub
add
xor
hlt
push
pop
xor
sub
add
jmp
in
push
pop
sbb
repnz
mov
jae
mov
shlb
add
push
mov
push
pushw
and
sub
sbb
cmp
shll
push
mov
or
xchg
test
sbb
std
pushf
dec
rcll
sbb
push
lret
scas
xor
pop
xchg
les
popa
mov
movb
ja
inc
adc
jbe
test
mov
xor
rclb
sub
xchg
mov
inc
and
filds
nop
push
adc
jecxz
pop
enter
les
jl
cmpsb
aad
xlat
mov
push
sub
stos
imul
mov
dec
fildll
ficoms
loope
sbb
outsl
pop
push
jge
stos
aad
insb
mov
daa
scas
ljmp
sub
loope
lea
loopne
dec
mov
mov
pop
pop
xor
out
adc
xor
and
incl
push
jnp
lds
jmp
mov
stos
out
jge
mov
bnd
arpl
add
rep
push
mov
mov
ret
sbb
dec
pop
mov
cltd
cmp
cmc
inc
cmc
xchg
sub
sbb
cwtl
mov
out
adc
jp
testb
nop
adc
inc
adc
int3
adc
nop
xchg
insb
adc
push
and
cmp
or
imul
pop
out
pop
jo
jle
lret
into
sahf
sbb
test
cli
sbb
nop
lea
fisttpl
cmpsl
jge,pn
ss
pop
or
addr16
repnz
push
rorb
in
ljmp
push
pop
ret
dec
adc
call
mov
int
or
add
push
je
fbstp
xor
cs
dec
adc
jecxz
jge
pop
je
and
sbb
or
mov
inc
cmp
arpl
push
push
in
lds
dec
dec
pushf
pushw
pop
clc
sti
shlb
out
imul
add
push
jo
ljmp
sub
jbe
int3
mov
sub
outsl
stc
jp
jae
ffree
lahf
nop
sub
dec
imul
or
dec
loopne
pslld
and
call
out
adc
xchg
stos
pop
lods
and
add
leave
fsts
push
je
mov
xor
adc
xchg
and
dec
inc
enter
loope
addl
push
jns
add
sbb
cld
push
and
or
sbb
sub
es
jl
sub
or
shl
mov
pop
pop
lock
loope
decl
pop
outsb
sub
xchg
js
cmp
pop
add
and
testl
addb
mov
inc
adc
cs
inc
or
pop
jl
jne
pop
sbb
and
scas
lea
lods
int
and
mov
push
sub
pop
je
inc
sbb
mov
ret
push
add
roll
jmp
sbb
aaa
mov
and
pop
leave
push
push
push
jmp
push
jno
mov
test
sbb
push
adc
mull
addr16
inc
ret
mov
inc
int
mov
lds
lea
imul
cmp
sub
ljmp
jns
repz
addb
adc
jge
add
pop
jg
mov
pusha
lahf
fadd
jle
dec
push
mov
mov
std
lock
stos
xchg
ja
sbb
mov
and
or
and
push
popl
gs
push
or
push
cmp
nop
data16
push
out
jg
je
xchg
pop
mov
push
jmp
cmc
out
je
enter
adc
das
cli
mov
push
and
jmp
mov
mov
push
pop
stos
cmpxchg
adc
pop
dec
jns
sub
and
into
cmp
sbbb
mov
fcompl
test
out
rol
sub
push
pop
repz
xchg
gs
ret
jge
xor
push
subb
mov
and
mov
mov
pop
pop
lcall
fstps
sub
xchg
ret
jns
daa
push
sbb
and
popf
push
sub
stc
ret
or
lahf
js
hlt
call
inc
jne
call
out
push
shlb
mov
adc
lds
ror
pop
mov
or
or
cs
fsubr
mov
ss
xor
lcall
dec
mov
adc
ljmp
and
sub
into
xchg
or
push
aad
mov
out
mov
cli
insb
sbb
push
inc
push
lcall
daa
adc
jge
cmp
pop
jne
cmc
pop
aad
or
aaa
sbb
stos
adc
jae
jmp
outsb
fcoms
inc
lahf
data16
xchg
mov
sub
or
mov
jne
nop
imul
dec
xchg
fisttps
addr16
rorb
movsl
dec
push
cmc
in
icebp
push
jge
push
jg
loope
xchg
stos
adc
inc
scas
dec
lea
mov
es
push
jl
call
mov
and
pop
test
sub
sarl
js
mov
mov
mov
push
mov
ds
mov
push
repnz
call
aas
mov
xchg
mov
lods
fstpl
mov
hlt
out
push
in
cmpsl
or
outsb
rorb
popf
dec
mov
pop
testb
sbb
sar
lea
pushf
mov
add
cwtl
dec
call
aam
jmp
dec
mov
dec
lea
jo
mov
addr16
or
push
or
or
lcall
mov
jp
push
dec
cli
lret
enter
mov
fldenv
fmuls
and
adc
mov
pop
push
mov
aam
jmp
or
mov
popl
sti
xor
les
mov
sbb
lahf
dec
sbb
adc
imul
xor
cltd
mov
cmp
adc
in
pop
mov
pushf
mov
rcrl
loop
stc
outsl
ds
int
xor
sub
adc
loope
mov
loopne
and
loope
mov
test
pop
std
cmp
push
les
xchg
push
fstpl
push
aaa
or
push
adc
cwtl
in
mov
sahf
jmp
fcoml
jg
push
sbb
sbb
pusha
dec
dec
add
xlat
sub
mov
testw
and
fs
xor
pop
jp
in
cltd
out
inc
push
lock
xchg
imul
pop
mul
cltd
or
jecxz
sub
pop
cmp
in
or
std
xor
pop
inc
pop
aas
lds
dec
dec
push
pop
pop
flds
push
out
pop
test
push
clc
or
lea
pushl
divb
add
mov
std
mov
lea
xchg
divl
mov
iret
pushl
xorl
fsubl
inc
mov
std
mov
add
jge
rclb
dec
push
enter
std
fldcw
in
cwtl
sahf
mulb
xchg
test
sti
add
mov
pusha
mov
mov
mov
movsl
push
inc
dec
fcom
cltd
mov
popf
nop
push
ficomps
mov
xor
xchg
ret
nop
dec
mov
jmp
popf
cld
sti
movsl
loop
jne
mov
and
add
sbb
or
repz
or
jg
jl
movsb
add
jne
or
sti
jne
cs
sub
int
xchg
popa
lret
or
iret
xchg
mov
xor
iret
xchg
test
xchg
adc
push
inc
and
adc
sti
outsb
sub
movswl
andl
ds
gs
jne
stc
punpckhdq
pop
in
or
jp
push
mov
in
mov
push
sub
xor
scas
pusha
pop
mov
xchg
add
les
jo
clc
in
pop
or
or
xchg
pop
adc
stos
and
mov
push
insb
add
bswap
mov
daa
test
xchg
in
xchg
rorl
je
sbbl
cltd
loopne
out
pop
mov
je
jmp
popf
cmpsl
popa
nop
inc
jp
pop
aad
pusha
sub
and
lock
cmp
cwtl
testb
and
or
pop
pop
dec
ret
std
dec
das
pusha
pop
adc
xchg
sub
ds
scas
pop
jae
cld
imul
or
mov
or
mov
jns
or
imul
adc
hlt
fs
jge
les
push
pop
mov
and
dec
adc
cwtl
popa
call
call
pop
jmp
arpl
call
repz
jmp
inc
push
sti
and
mov
inc
adc
das
pushl
or
test
jmp
cltd
rclb
push
push
fisubrl
jno
das
popa
inc
push
es
and
mov
mov
lahf
jmp
add
inc
insl
rolb
cs
cmc
sbb
mov
add
ret
sub
dec
int
lods
mov
mov
jb
pop
testl
pop
or
cld
pop
lret
or
scas
mov
arpl
or
dec
scas
movsb
dec
std
adc
pop
or
test
adc
push
cs
out
aaa
subl
push
jo
nop
js
call
jg
ljmp
cmp
sub
outsl
mov
and
repnz
imul
test
test
xor
inc
adc
xor
dec
inc
cli
xchg
push
push
inc
es
leave
pop
xor
sub
or
mov
push
xor
push
sub
test
jge
mov
jne
cwtl
loopne
lds
movsl
aam
jp
jle
pop
and
clc
call
inc
cltd
adc
sub
inc
jmp
insb
mov
cmp
jne
nopl
pop
bnd
jmp
lcall
jne
call
iret
adc
jns
negb
outsl
pop
dec
testl
nop
adc
leave
adc
call
std
and
mov
dec
leave
lock
mov
hlt
jle
jp
imul
sarl
stos
aad
pop
hlt
daa
rorl
add
sahf
adc
sub
and
imul
imul
xor
xchg
mov
adc
sarb
lea
ret
incl
out
cmc
or
leave
les
sahf
imul
adc
das
mov
lds
xchg
sbb
dec
mov
outsl
adc
sbb
outsl
insl
dec
cmp
repz
push
push
fs
mov
clc
push
push
push
das
push
add
push
stos
test
cmp
clc
xor
jge
inc
push
xchg
push
push
rorb
pop
pop
inc
and
lret
push
inc
test
pop
or
and
xor
call
jo
lds
pop
std
mov
das
je
lock
push
jne
dec
rol
add
repnz
loop
cmc
mov
ret
icebp
xor
jl
not
lcall
jb
mov
jl
popf
test
add
xor
inc
or
push
addr16
dec
ds
mov
neg
sbb
dec
mov
inc
addr16
sub
xchg
or
outsl
or
lret
xor
push
sub
xor
adc
loopne
mov
inc
mov
cmp
adc
imul
inc
jecxz
jae
fidivl
fildll
sbb
sub
add
lock
mov
adc
repnz
mov
mov
into
sahf
in
imul
jne
cli
hlt
test
cmp
mov
push
repnz
ret
adc
mov
push
or
pusha
movsl
sbb
and
adc
mov
or
add
dec
mov
or
stc
cmpsb
lret
and
sub
mov
jp
cli
cmp
push
sub
dec
scas
popa
inc
clc
xor
add
adc
xor
mov
dec
pop
stc
adc
or
imul
lret
call
cmc
lods
bound
or
callw
sbb
dec
mov
stc
nop
adc
jno
leave
or
shll
fimuls
dec
enter
fsubp
jo
xor
imul
mov
and
and
out
pop
movsb
enter
aam
rorl
sbb
mov
test
push
and
stos
outsl
push
aad
dec
or
fdivrl
add
cmp
adc
leave
add
mov
jl
xorl
xor
xor
idivl
aam
inc
push
leave
aaa
mov
jne
or
lds
jo
adc
inc
push
dec
stc
in
xor
fists
mov
les
jmp
repz
mov
out
add
push
mov
scas
mov
dec
in
sti
mov
fsts
pop
cmp
hlt
xorb
es
add
stos
adc
in
adc
xchg
mov
mov
aam
pop
push
imul
popa
cmpsb
mov
pop
movsb
mov
add
lea
movsl
add
or
mov
and
adc
test
out
dec
mov
cmpsl
jae
jbe
sub
mov
push
mov
lock
jne
and
je
jae
pop
pop
cld
sbb
push
mov
push
sub
out
fsubl
or
mov
or
push
ret
jl
push
aam
inc
mov
xor
add
and
or
clc
jae
cmp
xchg
push
fildl
push
adcb
push
xchg
jmp
adc
and
aam
es
jge
sub
sbb
pop
cmpl
testl
scas
cltd
in
call
push
adc
dec
out
gs
rclb
pop
shlb
test
mov
shrl
or
cmp
xor
std
inc
rorb
pop
in
push
xchg
cmp
mov
sti
jbe
jg
xor
popa
cmp
fwait
mov
push
nop
pop
and
xchg
mov
cmc
es
lods
add
inc
cli
and
jl
cmp
adc
hlt
rcrl
xchg
xor
mov
and
std
in
or
ret
mov
nop
insl
mov
inc
mov
adc
and
jmp
jge
aas
pusha
sbb
or
cmp
push
jne
lea
fistpll
pop
jle
add
dec
in
push
sbb
cmp
and
sbb
sub
call
add
dec
mov
sub
xchg
lock
ds
cli
or
stc
ja
lods
mov
add
test
push
scas
push
add
int
sub
lret
adc
mov
add
sbb
clc
sub
loopne
lock
and
je
xchg
mov
test
pop
nop
pop
jmp
iret
push
lret
pop
leave
sub
add
and
mov
adc
es
sub
xchg
and
int
cmp
je
xchg
push
sbb
sub
test
dec
xlat
int3
push
mov
push
das
out
sbb
adc
cld
mov
xor
das
sbb
sub
add
dec
push
xor
push
mov
rclb
das
sbb
ja
and
mov
pop
sub
sti
mov
push
push
pop
lea
mulb
push
in
pop
dec
dec
call
dec
mov
test
add
push
dec
jno
cmp
test
dec
push
call
popf
stc
cltd
pushf
hlt
or
cli
and
je
mov
rclb
pop
mov
loop
add
add
cmp
jb
das
add
jl
jmp
jae
xor
mov
jb
jl
test
and
jmp
orb
mov
push
sub
adc
jb
or
jae
mov
sahf
mov
dec
in
mov
xchg
pop
les
xchg
add
shll
sub
shl
add
loope
jmp
inc
ret
std
movsb
sbb
stos
je
nop
push
pop
int3
dec
cmpl
stos
clc
inc
xchg
sub
mov
pop
adc
adc
lahf
repnz
inc
inc
cmp
sub
or
nop
pop
mov
xor
aam
ljmp
cli
mov
xchg
adcw
in
add
test
rorb
mov
adc
dec
push
add
jle
add
movzbl
shl
jns
nop
mov
nop
dec
inc
jae
aaa
stc
dec
or
lock
jmp
cmp
and
mov
fsubs
out
gs
inc
in
mov
in
sub
xchg
jmp
lds
add
outsb
movntq
or
and
data16
inc
push
jge
leave
pop
jnp
dec
add
mov
inc
inc
jne
xorl
je
push
mov
jle
loopne
cmp
xlat
push
imul
jecxz
push
or
or
push
mov
inc
sbb
mov
mov
dec
fimuls
push
mov
sar
adc
push
andb
and
test
xor
mov
mov
clc
fwait
stc
aas
mov
inc
inc
rcll
pop
add
repnz
leave
cmp
xchg
popf
inc
sub
jg
mov
sub
dec
jmp
and
xchg
aam
sbbl
or
adc
mov
ret
push
lcall
imul
movsb
mov
lcall
dec
lock
pop
dec
add
stos
jecxz
dec
cltd
dec
add
int3
mov
xchg
or
lret
hlt
push
sub
pop
add
sbb
loopne
add
lcall
sbb
pop
insl
pop
bound
arpl
call
test
and
xor
mov
lcall
adc
xchg
jne
loope
in
pop
repnz
fcomps
inc
jo
fisubs
adc
mov
and
push
iret
or
sbb
pop
mov
xchg
cltd
pop
or
dec
into
orb
dec
cmp
stc
push
jb
inc
sar
sub
jno
adc
in
fs
enter
imul
push
sub
or
jmp
imul
and
jbe
push
mov
popf
xchg
push
incb
mov
in
push
lods
nop
xchg
insb
and
xchg
pop
or
sub
mov
sbb
and
jbe
out
jl
push
adc
push
decb
inc
xor
add
pop
push
iret
inc
movl
cmpsb
cltd
push
sub
push
aas
mov
outsl
jmp
jne
or
andl
xchg
xchg
pop
pop
jbe
push
cmpsb
cmp
xchg
add
push
ror
lcall
sub
xor
mov
dec
xor
mov
daa
or
mov
cmp
cmc
jo
ret
jmp
cltd
rclb
dec
cmpsl
inc
loop
pop
jl
dec
mov
xchg
xchg
mov
pop
popf
or
and
or
dec
mov
lea
in
or
loop
scas
shl
jne
xchg
and
push
mov
cltd
jbe
mov
sub
sbb
inc
mov
mov
lret
rcrb
sbbb
xor
add
test
push
sub
shl
gs
shlb
xor
fs
enter
xchg
jmp
test
cmc
ljmp
loop
fdivr
loop
or
mov
cmp
jle
pop
lock
and
jecxz
pop
push
adc
jmp
sarl
sub
sbb
idivb
testb
fs
lock
push
jno
setne
in
mov
pop
push
lock
push
or
mov
sqrtps
mov
push
mov
inc
jb
push
jne
lock
sbb
call
or
call
pop
pusha
mov
sbb
mov
mov
mov
mov
pop
inc
cmp
jb
cmpl
lods
stc
nop
xchg
rorb
mov
pop
dec
add
jb
ret
push
cld
jb
sub
call
push
jno
insl
sbb
sub
push
popf
imul
nop
push
or
pop
movsl
stos
and
dec
dec
lcall
std
popf
out
dec
dec
stos
and
mov
repz
pop
cmp
daa
and
loopne
add
xchg
inc
jmp
sub
pop
in
in
int3
mov
dec
repnz
adc
test
sub
cmp
adc
add
xor
push
sub
sub
and
jge
test
in
sbb
add
push
jb
adc
push
add
push
lods
shl
hlt
push
leave
bound
arpl
mov
shl
popf
or
lea
adc
loop
out
cmp
sbb
clc
jecxz
out
stc
jl
mov
loope
sub
cmp
aad
xor
orb
fisubrs
add
add
or
push
and
push
ret
data16
daa
outsl
cmpsb
pop
push
aam
pop
add
push
or
adc
pop
push
mov
clc
rolb
lret
popa
or
jge
cmp
ljmp
xlat
icebp
insb
call
mov
jns
sub
push
pop
sub
cmp
movsb
xor
imul
into
sub
sub
adcb
add
dec
mov
adcl
testl
mov
ja
mov
push
movsb
sbbl
aam
leave
jne
push
cmp
dec
push
les
jmp
nop
jl
test
stos
mov
shrb
inc
lahf
push
push
outsb
mov
clc
sarl
enter
adc
pop
or
jmp
je
lea
push
push
cli
cltd
cli
jo
jle
add
movb
sub
outsl
or
xchg
sarl
pop
dec
jae
ficomps
hlt
adc
inc
stos
and
out
shlb
bound
mov
and
aad
adc
ds
push
and
and
inc
mov
jbe
xor
or
cmp
icebp
clts
cmpl
pop
sbb
add
cmp
jp
iret
or
adc
xchg
pop
adcb
clc
insb
inc
add
or
mov
stc
lods
add
pop
call
xlat
out
aam
test
ret
in
das
cmp
jge
lret
sub
scas
adc
mov
sub
pop
jg
aad
push
jnp
test
push
lock
out
sub
mov
sub
out
push
repnz
xchg
xor
mov
prefetch
jno
test
cmpsl
add
push
popa
or
inc
jne
jne
into
jmp
daa
je
fists
mov
sbb
adc
mov
dec
mov
pop
push
cli
clc
mov
push
fdivs
in
decl
sbbl
idivb
sbb
dec
mov
jmp
xchg
mov
or
je
mov
add
imulw
cmp
mov
in
jne
test
jl
push
lods
into
push
xor
fidivl
xor
out
daa
push
mov
push
jp
fmuls
enter
pushl
mov
and
je
std
and
jne
pop
push
push
stc
mov
ret
sbb
hlt
adc
inc
or
or
jl
adc
stos
js
adc
xorl
imul
xor
sbb
js
jmp
fs
nop
and
call
push
sub
cwtl
jmp
dec
or
jl
sbb
sbb
adc
mov
test
roll
cmp
pop
loope
js
sub
mov
jl
mov
aas
stos
arpl
call
and
xchg
inc
jmp
xchg
sbbb
sub
and
pop
sub
and
sub
or
cmp
inc
sbb
and
jmp
inc
push
pmaxsw
lods
jbe
xchg
jbe
idiv
jg
pop
jmp
dec
and
mov
push
jae
fsubrs
mov
pop
mov
xchg
cli
add
adc
xchg
and
adc
call
cmp
push
gs
push
punpckhdq
call
incl
aas
or
dec
fsubrs
mov
add
mov
adc
addr16
out
loop
push
mov
sub
pusha
insl
aam
jne
xor
push
hlt
mov
fisubs
push
jne
push
dec
movsb
mov
push
mov
adc
xchg
pop
xchg
push
sub
fbld
arpl
push
cmp
inc
lret
push
and
xor
lds
push
test
enter
ljmp
xlat
jne
jo
pop
inc
and
call
daa
scas
xor
or
mov
adc
push
mov
fdivs
lock
push
popl
and
mov
adc
push
mov
inc
xor
jns
push
mov
ss
sub
sbb
adc
in
add
jnp
sbb
fisttpll
addl
pop
movsb
sub
pop
push
jmp
mov
lock
add
mov
and
lret
jne
or
decb
push
fisttps
mov
loope
jge
push
bound
inc
xchg
lret
in
adc
in
sub
arpl
adc
enter
cmp
mov
imul
jb
xchg
rcl
push
fcom
push
call
aas
lds
jbe
aas
cbtw
andl
push
push
enter
push
je
call
jne
add
ret
aam
or
pop
aad
fidivrl
shr
or
fsub
loope
add
adc
je
mov
dec
sub
dec
inc
sbb
jne
push
cmp
call
jmp
sub
or
cli
into
push
and
data16
mov
ljmp
lods
divl
movsl
mov
jecxz
fmuls
enter
fsubrl
and
icebp
pop
cmp
pop
mov
adc
stc
out
sub
pushf
xchg
pop
adc
bound
mov
and
and
cmp
cmp
push
mov
in
cmp
fdivl
rol
xor
xchg
adc
cmpl
adc
xor
enter
xchg
lret
adc
stc
movsl
scas
enter
es
cltd
loope
mov
xor
or
cmp
in
jge
or
cld
push
push
dec
sbb
add
push
lds
jecxz
mov
lcall
cmovae
inc
nop
in
cmpsb
js
dec
int3
pop
xchg
push
add
push
cld
xchg
fbld
sahf
fucom
pop
in
or
inc
cmp
xchg
test
dec
mov
and
sub
lret
js
ret
and
xor
arpl
add
ret
and
push
xchg
jge
ret
jmp
cld
push
mov
ret
dec
sub
xor
sub
add
dec
inc
fdivr
gs
sub
xchg
inc
js
dec
fdivr
sbb
mov
sub
push
dec
mov
fidivrs
jge
adcb
cmpsl
dec
xchg
jmp
shl
push
bnd
inc
loopne
enter
jmp
lock
inc
mov
cmpsb
into
and
imulb
ja
jne
push
imul
sbb
jo
xor
in
push
ror
adc
popf
adc
cmp
jmp
pushf
adc
sbb
inc
cwtl
jmp
mov
pop
sub
xchg
dec
mov
ret
mov
icebp
scas
pop
inc
or
adc
pop
xor
sub
push
test
or
mov
ds
push
dec
les
xor
mov
aas
fsubrl
jl
movsl
test
xor
mov
mov
in
jmp
xchg
fimull
inc
or
test
jmp
nop
xor
frstor
xor
in
xchg
sbb
int3
mov
push
loop
xor
flds
movsl
int3
push
mov
pop
inc
imul
mov
in
dec
or
sub
sub
das
scas
xchg
jae
shrl
movsb
xchg
and
jp
jae
daa
xchg
out
push
push
add
popf
jp
xchg
mull
xor
lods
in
pop
lea
mov
jo
fdiv
int3
adc
ds
pop
leave
and
jo
adc
hlt
out
aas
cld
ljmp
in
jmp
movsb
pop
push
jne
lods
xchg
adc
mov
sub
loopne
adc
lods
sub
mov
das
mov
add
je
cmp
aam
mov
inc
imul
pop
into
dec
bound
inc
jl
aad
cltd
sub
loope
nop
mov
mov
mov
daa
cmp
jge
out
mov
mov
fs
cld
push
lods
pop
jmp
cli
je
andb
pop
xchg
clc
int
dec
subl
das
dec
icebp
in
in
jg
je
nop
push
xor
or
xchg
imull
pop
jecxz
xor
lret
aam
push
hlt
cltd
pop
aam
decb
gs
stos
mov
sbb
lods
dec
push
movsb
push
sub
dec
jl
dec
xchg
clc
mov
mov
shll
cmp
jmp
jns
dec
movsb
ds
in
xor
and
mov
jge
adc
les
or
cltd
add
int3
push
mov
pop
outsb
repz
jp
ljmp
xor
cmpsb
jno
sbb
mov
xchg
or
mov
ss
int3
fsubp
adc
imul
je
sahf
lcall
out
jl
pop
lret
push
adc
jg
adc
pop
pop
xchg
jbe
in
push
push
push
in
xchg
jo
sbbl
cmpsl
pusha
mov
xor
mov
loop
or
xor
push
xor
scas
mov
clc
or
xor
call
shl
xchg
pop
fwait
scas
adc
stc
lock
rcrb
mov
pop
inc
mov
in
inc
xchg
lahf
mov
in
jno
or
push
and
inc
add
bound
inc
lahf
adc
adc
push
dec
push
cld
xchg
xchg
pop
or
enter
out
dec
rcrl
movsb
rclb
mov
fidivs
lret
je
add
rclb
or
pushl
lret
mov
insl
popf
xchg
fadds
sbb
adc
andl
shll
mov
cmp
jecxz
add
sbb
adc
mov
arpl
pop
xchg
lds
imul
add
or
out
sub
or
movswl
incb
rorb
outsb
xchg
jle
pushf
cli
and
adc
jne
jne
jg
ret
push
mov
jl
dec
xlat
dec
aaa
pop
stc
movsl
scas
icebp
or
fistpll
mov
mov
sbb
cvtps2pi
lea
sbb
lock
pop
pop
sub
shll
add
pop
mov
arpl
sbb
adc
adc
sarb
shlb
subb
mov
fmuls
lds
and
push
jb
push
xchg
cmp
ds
cmc
in
sbb
enter
andl
jmp
dec
ffreep
test
jmp
roll
xchg
inc
jle
or
adc
adc
js
or
push
jne
aad
jmp
xchg
daa
lahf
jl
dec
mov
and
shlb
jne
arpl
pop
les
lods
jp
push
mov
add
push
xor
ficompl
arpl
jge
adc
fdivs
inc
jmp
int3
fsubrs
mov
xor
test
adc
push
aad
mov
jp
jbe
lret
mov
or
out
aas
movsl
pop
inc
inc
andl
pop
out
lret
lea
das
icebp
sub
push
or
inc
lods
cmp
inc
inc
std
bound
jl
cmpsl
xchg
jo
mov
popa
and
mov
xor
nop
fimull
into
pop
mov
jmp
add
xchg
arpl
adc
test
xchg
add
les
xchg
adc
xor
mov
imul
ret
xchg
dec
loopne
push
pushf
arpl
in
xor
daa
push
push
int3
push
push
and
lcall
or
scas
and
pop
jne
aam
mov
fidivrs
xchg
ljmp
mov
fiaddl
ljmp
in
iret
jno
stos
sub
xchg
mov
xchg
push
bound
or
movsb
scas
out
push
sbb
sbb
push
adc
lea
mov
les
lret
or
and
mov
and
push
sub
add
add
push
mov
and
xor
push
push
lret
pop
inc
mov
dec
or
cmpsl
aas
faddp
movsb
jp
out
dec
push
sub
cmp
sahf
cmpb
and
or
jo
inc
das
std
xchg
test
jns
fwait
xor
test
push
push
das
int
jne
or
pop
push
adc
mov
jns
inc
cmp
mov
icebp
je
daa
das
fwait
es
jmp
mov
xchg
push
or
js
pop
adc
mov
pop
std
or
loope
cmpsb
lret
adc
add
sbb
push
std
push
push
dec
cmp
mov
jmp
lods
sub
das
jmp
faddp
movsb
test
and
rclb
hlt
fmull
jmp
js
lea
jle
imul
out
je
sub
pop
mov
sub
adc
dec
dec
stc
add
outsb
xchg
pinsrw
iret
fisttps
and
lods
dec
mov
sar
or
loop
jmp
inc
push
pop
mov
mov
cmpsl
cmc
mov
jge
jo
sub
lock
test
popa
nop
jge
test
push
xor
lret
jl
push
test
bound
mov
jb
nop
xchg
pop
movsl
xchg
lret
in
push
mov
push
and
mov
mov
stc
or
push
ja
or
int3
lret
xchg
rorb
enter
xor
popl
rclb
cmc
aas
rol
sbb
inc
mov
std
sub
cwtl
adc
stos
loopne
pop
mov
jg
cmp
push
jbe
bound
test
mov
ljmp
shll
dec
lock
dec
mov
out
loop
mov
lret
xchg
or
adc
std
aas
sub
cmp
jge
scas
cmp
cmp
call
cwtl
js
jp
dec
sub
stos
inc
inc
ja
pop
inc
jne
in
dec
adc
scas
mov
int
sub
cltd
bound
mov
es
icebp
aaa
lret
mov
push
xchg
push
cwtl
add
insl
push
icebp
jnp
xchg
rcll
jmp
adc
cmc
sub
dec
es
sub
stos
cmp
sub
gs
dec
jb
pop
and
dec
std
adc
js
je
pop
imul
or
adc
fadds
shl
je
enter
jno
loopne
mov
jmp
jb
jle
mov
iret
sub
test
sar
xor
and
sub
in
mov
and
dec
add
or
mov
dec
inc
clc
lcall
bound
jmp
jne
lret
jmp
jecxz
push
mov
testb
push
xchg
jl
xchg
xor
and
loopne
clc
inc
push
add
pop
setge
cs
fsubs
dec
push
push
mov
push
dec
shlb
ljmp
sbbb
inc
pop
cmp
jmp
pop
movb
pop
dec
pop
mov
inc
insl
lcall
fdecstp
inc
mov
hlt
in
dec
movsb
cld
in
test
call
mov
int3
or
lods
clc
mov
adc
push
fwait
xchg
gs
call
mov
movsl
fs
mov
and
cli
mov
fwait
push
inc
gs
sbb
lret
fldl2t
scas
test
mov
rorl
cs
cld
xchg
jge
jne
cmp
jg
inc
mov
mov
pop
add
repnz
sub
and
test
out
mov
mov
xchg
inc
pop
and
pop
sbb
rol
mov
mov
dec
jb
jbe
cmpsl
stc
push
or
dec
lret
push
pop
push
sub
xchg
inc
aam
cld
sbb
sbb
or
inc
push
sti
push
sub
pop
pop
imul
pop
lcall
push
jnp
fs
xor
ret
call
iret
or
pop
mov
mov
pop
pop
pop
adc
daa
jnp
imul
je
ljmp
addb
jae
daa
pushl
repnz
jp
inc
mov
scas
cwtl
mov
push
add
fs
push
push
adc
sbb
scas
aas
imul
and
rorb
je
mov
sbb
jne
xor
push
mov
hlt
and
xchg
jbe
xchg
in
pop
pop
cwtl
and
sub
ds
jl
insl
push
pushf
adc
repnz
adc
dec
dec
cmpsb
lock
jecxz
sarb
xchg
lock
cli
and
mov
jg
adc
lcall
pop
or
lods
jno
das
and
push
hlt
mov
mov
out
nop
hlt
out
push
lock
jnp
dec
lahf
aam
pop
mov
mov
scas
inc
mov
mov
test
jl
es
jmp
ds
jne
adc
jmp
inc
mov
push
imul
xchg
adc
sub
sub
pop
leave
xor
aas
push
add
sbb
sbb
pusha
mov
aas
add
arpl
call
inc
test
adc
mov
hlt
mov
sbb
arpl
sbb
test
cs
pop
and
fcom
pop
aam
or
bound
and
xchg
les
or
std
cmp
test
loop
pop
enter
sahf
jg
lea
shl
add
das
scas
xorl
mov
decl
lods
add
jmp
ja
cmpsl
xchg
xor
dec
xor
xor
in
dec
in
sbb
loope
jno
xor
push
call
xor
ja
jp
pop
test
pop
push
sbbb
lods
cli
or
movsb
daa
and
int3
dec
rorb
test
inc
movsl
sbb
xchg
jns
outsb
fmull
cmp
or
in
int3
pop
inc
push
push
sub
mov
mov
in
dec
ljmp
enter
aam
adc
cld
iret
cltd
mov
hlt
sub
mov
in
and
push
push
sti
lds
das
cwtl
pop
inc
imul
jmp
scas
in
cltd
dec
jmp
and
mov
test
mov
dec
dec
xchg
sub
sbb
insb
or
in
je
rcl
lds
dec
sar
vmaxss
cltd
push
sub
lds
pop
mov
fdivl
or
push
sbbl
mov
push
movsb
daa
add
les
sub
push
dec
dec
mov
les
daa
cmc
cltd
shlb
fcomps
out
fistpll
jne
jmp
fwait
out
js
mov
sbb
add
sarl
pop
sbb
notl
mov
in
pop
clc
push
mov
shlb
add
and
xor
push
pusha
sub
mov
arpl
push
sub
shrb
pop
xchg
dec
lcall
dec
xchg
jne
test
ficompl
adc
jne
adc
daa
dec
jae
jns
je
mov
push
je
dec
cmp
cmp
lahf
les
mov
dec
movsl
mov
lea
jmp
jle
ss
ret
lock
inc
repz
jno
push
fbstp
mov
gs
frstor
cmpsl
inc
dec
mov
out
out
lret
pop
in
and
cmpsl
fcom
and
rcr
fidivl
cmp
fs
in
mov
sbb
cld
imul
cmp
add
testb
or
xchg
mov
cld
pushf
lds
stos
fadds
aam
adc
pop
push
xor
mov
pop
lea
pop
mov
mov
ljmp
jg
inc
pop
jle
inc
push
jmp
push
cmp
fimull
pop
stos
and
jmp
xchg
lods
and
adc
mov
repz
adc
rcrl
inc
and
add
cmp
jne
je
push
add
arpl
pop
inc
mov
and
loop
jb
inc
lea
inc
inc
mov
ss
inc
rol
aam
data16
xchg
lds
adc
cmp
push
mov
loop
jle
sbb
xorb
mov
loopne
stos
jecxz
cmp
jl
and
and
outsl
mulb
push
xchg
nop
leave
xor
adc
jo
leave
enter
or
xchg
and
sub
pop
xor
adc
ret
and
adc
dec
scas
and
fstl
xor
pop
and
lods
mov
xor
movsl
dec
fildll
and
ret
aas
inc
push
call
test
shrb
popf
adc
shr
test
andb
adc
and
mov
add
incl
mov
push
ret
cli
repnz
mov
push
mov
xchg
and
mov
mov
xchg
negl
vpcmpeqb
outsb
and
or
mov
and
lods
or
dec
popa
dec
push
or
jmp
repz
scas
fstps
jo
movsb
push
je
lahf
stc
push
or
add
adc
inc
mov
pop
push
sbb
sub
cmpl
sbb
push
adc
sbb
and
mov
gs
leave
orb
int3
adc
dec
lcall
lea
mov
and
movsb
imul
and
jnp
pop
mov
std
xchg
xlat
rol
mov
scas
repz
cmp
jp
mov
push
or
mov
daa
mov
push
add
sub
idivb
dec
xor
sbb
jo
lret
movsl
lods
mov
les
and
xlat
sub
inc
pop
jne
and
cli
mov
and
push
push
jp
sub
add
push
mov
pushf
sub
jne
mov
loope
adc
pop
orb
mov
cmc
loop
or
add
sub
add
nop
ret
mov
mov
je
mov
cld
std
adcb
ret
pusha
inc
cmp
push
lea
icebp
cmp
fisubrs
inc
fistps
movsb
call
xchg
sbb
push
push
adc
scas
or
sbb
clc
sbb
je
jmp
and
mov
push
xorb
out
dec
and
xchg
faddl
push
adcb
sub
int3
push
cmp
test
jle
or
rep
push
aad
mov
or
imul
in
push
xchg
mov
xor
or
pop
add
mov
sub
xchg
inc
xor
xchg
testb
or
cmp
mov
nop
test
dec
call
and
adc
or
inc
cmpl
add
inc
or
adc
jbe,pt
rorb
mov
stc
sub
and
or
or
jbe
mov
push
clc
je
pop
scas
aaa
inc
sub
push
pop
add
bound
jb
push
sbb
aaa
adc
stos
jo
add
jmp
psrlw
js
jmp
sbb
xchg
sahf
push
inc
fildl
loop
dec
pop
push
mov
push
sbb
clc
dec
pop
mov
daa
jmp
push
push
dec
cwtl
xor
or
jo
std
popa
dec
sub
aad
cmp
adc
jle
popf
je
lods
jle
adc
sub
mov
cs
fstpl
int
and
push
push
test
repnz
adc
cmp
mov
fwait
nopl
into
jge
aad
cmp
fsubrs
out
dec
jge
gs
adc
leave
mov
jae
leave
xlat
sbb
sbb
repz
and
rolb
jg
test
xor
xchg
scas
ror
adc
test
or
cmpxchg
aaa
adc
jmp
sbb
mov
xchg
xor
imul
andl
mov
xchg
lea
xor
call
push
in
dec
inc
cs
mov
repnz
dec
jmp
jnp
ret
in
cs
iret
call
je
xchg
pop
ret
rcl
jp
jns,pt
icebp
cld
dec
pop
adc
xor
mov
adc
inc
imul
cltd
inc
xorb
repnz
dec
add
xchg
sub
pop
js
iret
repz
cmpsl
sub
or
or
mov
cmc
ljmp
into
cmpsl
pop
outsb
cld
pop
xchg
and
cmc
scas
or
sub
push
adc
and
xchg
data16
xchg
es
outsl
dec
xchg
and
repnz
repz
je
sarb
mov
aas
xor
or
call
pop
shll
or
adc
jp
dec
enter
pop
cli
sub
dec
sub
push
sbb
jb
or
incl
jbe
dec
push
addl
jmp
sbb
add
xor
xlat
sbb
ja
mov
lds
sbb
mov
mov
lods
leave
sbb
testb
int3
dec
bound
push
inc
sbb
daa
adc
mov
clc
xor
and
xlat
cs
and
add
je
scas
hlt
insl
xor
push
dec
adc
push
sub
push
and
push
call
clc
stc
lea
xor
xor
xchg
sbb
jp
xor
pop
cmpsb
push
out
test
in
dec
sub
or
mov
or
ficoml
lahf
pop
adc
jg
fcoml
loopne
and
shll
inc
pusha
dec
mov
and
aam
cmp
inc
sub
notl
pusha
imul
mov
or
xor
mov
xor
inc
in
pop
mov
jl
test
je
push
aaa
incb
mov
mov
xchg
or
mov
pop
pop
sub
sub
int3
aaa
stc
pop
ret
adc
popf
mov
loop
xchg
mov
and
or
shrb
xor
cmp
adc
testl
push
cmp
outsb
movsb
push
xor
sub
lret
inc
or
xchg
shrl
mov
xchg
stos
sarb
push
pop
push
dec
push
mov
push
mov
sub
insl
jmp
out
push
dec
mov
repz
or
sbb
fdivrl
std
inc
pusha
fdivrp
dec
and
xor
icebp
lea
popf
popa
imul
push
cmp
sbb
adc
mov
push
or
hlt
push
and
pushf
jmp
cmc
xchg
or
insl
stc
movsl
jne
cmp
ljmp
cld
divb
push
xor
inc
pop
idivl
and
pop
add
andb
or
ds
fsubrs
inc
adc
lea
inc
add
and
inc
adc
xchg
dec
or
out
adc
lods
lahf
sbbb
push
lcall
jo
inc
nop
dec
xchg
push
sbb
dec
cmpsb
push
les
mov
sub
pop
test
and
insl
lret
es
fisttps
add
scas
and
rolb
dec
cld
call
cmpsb
dec
sub
or
and
data16
mov
jno
sti
xchg
fisttps
xor
sar
push
stos
add
shr
and
add
fwait
je
and
pusha
dec
push
mov
cmp
or
xor
xchg
sbb
inc
push
dec
jne
jae
jge
in
adcb
adc
mov
mov
pop
sub
fs
sti
xchg
scas
inc
push
data16
sbbl
insb
adc
push
pushf
or
test
jne
push
je
jnp
push
sbb
jmp
fsin
cmpsl
iret
fmuls
dec
adc
or
jne
out
xor
repnz
inc
insb
mov
push
mov
scas
fisttps
mov
test
lcall
dec
jne
sbb
mov
sub
testb
push
sbb
enter
dec
and
dec
out
pop
out
add
mov
or
sbb
jbe
sub
inc
sub
cld
in
into
leave
stc
int3
mov
ja
sub
dec
shll
lcall
sub
lret
inc
xor
insb
pop
mov
mov
push
arpl
push
idivb
push
jne
cld
mov
jo
and
imul
cmc
push
mov
mov
inc
je
add
js
lock
pushf
xchg
inc
xchg
scas
mov
dec
and
xchg
mov
dec
sub
xchg
sub
or
icebp
js
movsl
xchg
xchg
or
cmp
fstl
sub
and
inc
adc
in
neg
xor
icebp
fwait
inc
mov
test
push
popf
push
dec
movsb
or
and
or
cmpsb
mov
jb
adc
mov
add
mov
sbb
call
push
inc
aaa
push
imul
pusha
mov
sub
sahf
pop
enter
cmp
cmpsl
jae
pop
mov
mov
jne
inc
bound
fs
mov
xchg
or
lea
pop
es
push
adc
fildll
adc
int
or
and
and
adc
mov
or
in
inc
or
inc
loope
push
or
je
inc
call
outsb
test
out
mov
cwtl
mov
sbb
push
ret
pop
sbb
dec
imul
leave
push
push
and
and
and
mov
call
test
mov
sbb
popa
sti
addr16
cmpsb
dec
sahf
int3
mov
fdivrp
xlat
jbe
mov
jmp
pushl
shlb
jo
test
es
inc
imul
ret
sub
dec
cmp
jb
ljmp
inc
pop
lds
jne
mov
popa
pop
jmp
jge
xor
pusha
jbe
in
mov
movsb
outsb
cmp
subb
adc
xor
mov
mov
scas
rol
cli
cmp
jo
jne
call
cmp
or
mov
inc
icebp
clc
arpl
cmp
jle
je
jg
popa
popa
inc
mov
bound
in
out
push
or
jle
bound
js
jge
pop
dec
adc
sub
and
movsb
jl
cmp
bswap
jb
inc
push
adc
mov
jno
cld
shll
add
decl
out
and
fisttpll
xchg
adc
shrl
jmp
notl
lret
sbb
adcb
jns
sub
daa
xchg
sarb
incb
jne
fidivrs
xor
jno
ja
or
jb
test
mov
xor
js
sub
cmp
pop
sbb
mov
inc
or
test
mov
sbb
adcb
add
sub
cmp
cmp
cmp
push
xchg
push
fildll
mov
out
nop
call
rclb
or
cmp
stos
add
fcmovnb
mov
add
and
nop
adc
push
xchg
add
inc
pop
cmpsb
lock
and
rorl
add
add
pcmpgtd
fnstcw
pusha
int3
inc
push
xor
hlt
movsl
cmp
mov
nop
sub
inc
add
xchg
sti
adc
sub
add
cmpsl
cmpsb
lcall
int3
and
mov
cmpsl
clc
sbb
adc
out
test
xor
flds
mov
test
jo
fistpll
cmpsb
shlb
es
jbe
out
xchg
ret
mov
push
int
push
mov
pop
inc
or
adc
and
pop
push
sahf
and
gs
push
call
and
sbb
lret
mov
mov
fwait
ret
int3
mov
lea
push
shr
lds
mov
test
mov
push
xchg
xchg
jo
popf
lods
sti
mov
ret
dec
mov
int
dec
and
and
add
leave
mov
dec
shrb
xchg
and
in
jg
cmpsb
xchg
sti
into
lock
mov
or
adc
lock
stos
das
mov
sar
cmp
xchg
dec
push
gs
jle
inc
push
inc
shrb
repz
out
add
mov
shlb
cli
pop
add
cmp
jne
decb
push
aam
pop
add
xor
out
pop
sbb
in
mov
cs
cs
sbb
scas
mov
jge
in
call
pop
sub
dec
xor
push
out
jecxz
xor
test
rep
int3
or
int
sbb
inc
fwait
pop
les
mov
test
jmp
ljmp
xor
jb
cld
shl
sbbb
or
in
dec
or
cmc
sbb
jnp
lea
cmp
aad
mov
in
push
aas
aam
test
int3
sub
and
inc
out
fldcw
out
mov
push
xor
or
and
das
jmp
mov
cmpsl
pop
inc
adc
cli
mov
daa
add
adc
add
in
and
dec
mov
push
adc
cmp
sbb
mov
dec
ret
jmp
mov
je
mov
daa
punpcklwd
xor
out
popa
rorl
add
mov
and
jmp
jne
pop
mov
cmp
push
sub
mov
adc
movsl
scas
jae
cmp
sbb
js
adc
or
or
cmp
in
cmc
movsb
cwtl
push
push
xchg
add
call
pop
mov
push
les
sub
xchg
and
ret
jns
loope
mov
test
lea
inc
or
lcall
xor
adc
mov
push
sti
mov
xchg
or
scas
pop
pop
fldcw
dec
cmp
dec
in
mov
adc
mov
sub
mov
lret
cmp
pop
cmpsl
sahf
jae
jge
jge
and
clc
push
imul
pop
inc
jge
lret
push
jmp
sub
fmuls
cmpb
sahf
dec
insl
xchg
lret
lea
ret
ds
or
repz
fistpll
stc
adc
imul
xchg
jle
lods
mov
jle
fistpl
imul
add
push
xchg
sbb
adc
stos
mov
xchg
inc
cwtl
inc
incb
js
aam
incl
inc
inc
xlat
sub
push
mov
call
inc
sbb
add
and
dec
pop
inc
sub
repnz
adcl
insl
jno
jne
test
clc
lods
xor
jno
mov
psubusb
jb
je
cld
xchg
rcrl
mov
test
sbb
mov
adc
xor
movsl
mull
inc
aam
rorl
cltd
push
mov
xchg
push
dec
or
inc
decb
cli
rclb
dec
sub
jle
iret
sub
jge
int
cmp
and
adc
mov
dec
pushf
and
dec
in
xchg
mulb
fistpl
icebp
inc
add
fs
push
xchg
mov
dec
sbb
inc
mov
insl
jmp
cs
push
sbb
adc
xchg
fldt
sub
xchg
pop
sti
xor
sub
dec
inc
in
loopne
jne
test
push
call
repnz
push
in
pop
or
cs
mov
mov
jg
rcll
lods
rcll
out
mov
push
pop
movzwl
cwtl
add
jnp
sbb
loop
xorb
adc
aaa
aam
push
and
xor
pop
je
mov
sbb
pop
stos
popf
inc
sub
dec
dec
jae
pop
sbb
adc
jo
mov
sbb
push
mov
mov
and
cmp
sub
xchg
adc
mov
std
xchg
repz
test
mov
adc
xchg
adc
rcrl
lds
sbb
bound
lods
mov
and
and
or
push
sbb
mov
pop
mov
mov
imull
xlat
cltd
jbe
add
adc
cmp
add
cmp
sub
and
xor
stos
sub
dec
adc
lock
jl
decl
fcompl
pusha
cmpsb
stos
xlat
xor
shl
xchg
add
dec
adc
xchg
mov
cmp
add
jl
add
push
mov
push
xchg
and
mov
adc
sub
jno
loop
push
je
jp
jecxz
sbb
ljmp
ds
or
mov
push
or
lret
cmc
out
js
jle
xchg
or
sbb
mov
loope
sub
push
push
jnp
push
aam
orl
lret
xor
inc
fdivrs
cli
divl
pop
xchg
enter
ljmp
decl
jmp
pop
sarb
stos
test
test
lret
mov
pop
loopne
cmp
jg
adcb
lods
int
lods
das
xor
nop
mov
mov
xchg
xchg
inc
or
push
and
outsb
or
adc
xchg
call
pop
in
push
or
jmp
jo
cltd
arpl
orl
insl
es
call
cmc
pop
repnz
les
lcall
popa
mov
sub
sbb
and
lahf
push
sbb
and
aas
adc
dec
mov
lahf
dec
clc
les
mov
loopne
and
in
or
fs
push
fmuls
xchg
insb
rcrb
jle
int
cld
mov
add
test
sbb
cmp
inc
and
and
pop
sub
xchg
addr16
sahf
enter
push
aaa
and
cmp
repz
inc
push
lods
push
les
jge
adc
pop
in
fstl
cmp
xchg
dec
mov
aad
js
rcl
not
push
stos
lea
leave
or
pop
icebp
lds
out
jle
ror
or
int
xor
aad
int
mov
pop
cmp
mov
add
test
mov
call
pusha
pop
cwtl
sub
sub
xor
es
inc
lcall
fists
sti
aam
mov
das
sub
bound
xor
imul
jge
xchg
add
xchg
jne
xchg
jae
dec
lods
fdivrs
xor
mov
nop
xor
jmp
imul
push
dec
add
test
out
pop
call
xchg
mov
lock
movsl
out
loope
daa
jle
inc
nop
lea
movsl
pop
mov
inc
pop
jmp
push
jg
and
mov
sub
inc
jns
cmp
stc
pop
inc
fsubl
orb
clc
cmpb
adc
inc
sub
sbb
rcr
push
pop
add
jne
jecxz
sbb
idivl
jecxz
cwtl
or
inc
hlt
or
jmp
pop
cmpsb
ds
sbb
out
fstps
dec
lods
inc
into
xlat
fisttpl
jmp
cmc
push
pop
ret
or
push
jo
mov
mov
mov
cmpsb
mov
and
test
dec
inc
bound
jnp
dec
jge
js
dec
adc
mov
call
dec
xchg
pop
jne
or
push
mov
add
call
enter
mov
lcall
jns
fldt
test
mov
mov
push
push
ret
orl
insl
into
and
pusha
cmpsl
cs
adc
add
pop
adc
sbb
ja
xor
rorl
xchg
pop
sahf
push
pushf
or
icebp
inc
cwtl
cmp
sbb
inc
or
mov
and
fnsave
jl
sbbl
pop
repz
sti
push
jg
addr16
lds
mov
mov
mov
xor
repz
lock
push
push
push
js,pt
inc
or
movsb
sub
idivb
mov
add
add
push
jns
sbbb
adc
mov
fstp
repnz
dec
lock
jmp
dec
lahf
sub
sahf
mov
mov
add
cld
and
mov
repz
call
mov
mov
arpl
or
cmpsb
mov
xchg
xor
inc
dec
lods
cmpsl
pop
and
sbb
pop
movsl
xchg
push
xor
adc
jne
xor
or
call
clc
and
call
test
sub
or
mov
int3
xor
inc
out
enter
jle
sahf
cmc
out
out
inc
xor
adc
enter
add
sbb
xchg
jmp
js
xchg
pop
push
xchg
adc
loopne
jne
mov
adc
inc
mov
adc
or
je
push
pop
and
sti
cwtl
testl
pop
push
dec
jg
inc
push
in
imul
cld
pop
dec
dec
movb
pop
mov
push
or
pop
dec
mov
mov
stos
movsb
inc
mov
xlat
leave
repz
loope
inc
sbb
dec
mov
push
adc
cli
inc
xchg
cvtdq2ps
inc
mov
or
bound
mov
decl
dec
jne
jg
xchg
mov
sub
xor
mov
fbld
shlb
mov
jg
movsb
pop
push
jnp
test
ja
jmp
aam
add
and
movsl
pop
xchg
sbb
mov
test
mov
push
jmp
mov
or
mov
add
les
mov
cmp
add
push
sbb
sbb
and
cmpsb
jl
sub
das
subb
push
xchg
push
push
sub
pop
pop
dec
rclb
cmp
xorb
add
mov
subb
and
sbb
and
loope
or
test
pop
push
mov
or
shrl
push
dec
js
dec
mov
lock
call
movl
stc
call
push
mov
lods
das
pop
lret
ret
xchg
inc
jne
mov
jbe
dec
cld
ljmp
outsb
nop
sbb
and
xchg
ret
or
inc
adc
cs
xchg
cmp
jp
test
test
nop
jo
mov
jl
dec
mov
stc
adc
and
inc
inc
fisttpl
xchg
mov
push
mov
add
and
jle
ds
mov
mov
xchg
sub
mov
xor
push
testl
xchg
xchg
jmp
pop
mov
ljmp
dec
ret
push
aad
mov
daa
pop
ljmp
inc
mov
mov
imul
decb
mov
push
mov
sbb
mov
and
mov
xchg
pop
dec
cld
xor
push
mov
or
aas
mov
pop
imul
stc
das
lods
xchg
std
popf
repnz
or
xor
inc
and
leave
popf
push
push
and
adc
clc
push
dec
mov
lcall
push
mov
call
sub
sti
and
je
xor
scas
xchg
mov
loop
dec
clc
and
cmp
xor
pop
lea
add
nop
repz
sbb
stos
sub
inc
call
out
jmp
cmp
push
pop
inc
jmp
push
adc
movl
retw
mov
cltd
mov
sti
dec
pop
add
jbe
shlb
movb
incl
mov
inc
arpl
test
call
test
pop
je
shlb
idivb
mov
aam
pop
jae
adc
aaa
sti
and
push
pop
dec
add
xor
pop
push
es
fs
and
push
testb
jbe
pushf
mov
popa
pop
movb
jo
inc
sub
rorl
jb
xor
test
ficoms
pop
mov
adc
mov
mov
scas
inc
jmp
nop
pushf
add
xchg
mov
sbb
daa
inc
mov
mov
adc
inc
and
call
in
or
rclb
ficoml
xchg
das
jns
imul
pop
daa
aas
mov
ret
ljmp
cmpsl
lea
adc
xchg
ja
push
lock
lahf
pop
pop
loope
push
add
push
jne
cmp
mov
fcomps
mov
shr
ret
sbb
lods
test
jns
lcall
addr16
add
call
xchg
adc
dec
call
ljmp
sbb
cmp
and
xchg
push
aam
push
xchg
mov
or
rolb
cld
jmp
ljmp
jmp
enter
or
jo
sbb
stc
jmp
push
call
adc
dec
and
mov
aam
xchg
dec
notl
push
movsl
test
fwait
and
lcall
mov
insb
pop
push
cmpl
jne
data16
cmp
adc
and
jne
ds
loopne
hlt
std
stos
cwtl
daa
stos
and
adc
mov
in
insb
jge
mov
and
sub
inc
sub
pop
stc
or
mov
jbe
jl
inc
sbb
xchg
test
xchg
stos
adc
scas
int
jl
xchg
out
push
sub
push
cmp
mov
repnz
sarb
shlb
into
adc
lods
dec
jbe
jne
pop
and
cmp
add
pusha
call
es
test
and
mov
mov
in
mov
lret
out
xor
out
mov
imul
dec
pop
in
or
push
sbb
jge
jo
test
cmp
mov
or
add
inc
rol
cmp
jb
xchg
inc
sub
aad
adcb
mov
shll
mov
mov
jbe
jno
pop
fists
dec
push
adc
lods
fsts
filds
aad
and
jmp
movsb
sbb
mov
dec
and
push
fdiv
push
je
mov
in
cltd
in
inc
mov
cmp
inc
sub
adc
push
mov
outsl
dec
pop
or
adc
aad
and
or
sbb
mov
orb
inc
lock
inc
dec
idivl
and
push
sub
or
sub
pop
sbb
xchg
xchg
fimuls
and
ds
dec
jl
jg
es
cmp
adc
fiadds
movsb
pop
jle
dec
movsl
xchg
repnz
repz
popfw
cli
sarb
jne
and
dec
jae
add
cmp
lea
scas
in
inc
pop
sub
sbb
jl
shl
call
inc
sub
pop
mov
cmp
and
lahf
push
ss
add
pop
iret
mov
sbb
loope
mov
iret
add
movsb
lret
and
aas
mov
add
std
les
cli
rcll
clc
ret
cwtl
mov
fsubrl
mov
push
mov
inc
lcall
rorl
scas
adc
add
inc
add
pop
mov
pop
aas
rorb
sub
mov
mov
mov
fiadds
lock
sub
in
pop
pop
mov
andb
pop
es
inc
inc
out
adc
fadds
or
add
out
dec
cmpsl
push
pop
es
clc
gs
or
jns
aad
jmp
jmp
pusha
test
jle
mov
mov
mov
cmp
mov
bnd
hlt
xchg
lods
daa
cli
and
in
popf
inc
lea
sub
cs
jmp
clc
adc
push
sub
call
ds
fnclex
mov
shlb
sbb
adc
or
js
jns
out
rorl
pop
pushl
addb
xor
cmp
inc
dec
cld
mov
cmpsb
sbb
test
cmp
mov
push
sub
xchg
lock
pusha
das
pop
cmp
test
out
push
lds
mov
push
pop
int
mov
repnz
add
adc
call
lret
shr
add
loop
hlt
pop
mov
idiv
inc
pop
jo
lea
stos
and
and
or
rorb
add
mov
and
cwtl
stc
adc
or
cmpsb
push
sbb
xchg
or
jne
or
push
jo
js
push
out
xor
add
sub
roll
jg
std
pop
arpl
dec
and
push
ljmp
lcall
mov
call
in
imul
out
xchg
jbe
setae
loop
push
sub
mov
sahf
xchg
subl
mov
nop
push
pop
jno
dec
call
fcoms
ja
gs
mov
sub
mov
inc
push
sbb
adc
and
cmp
rorl
mov
add
jne
and
or
and
scas
andl
cs
mov
test
jge
shrl
movsl
ja
mov
leave
pop
in
add
mov
xor
data16
add
sahf
test
add
cmp
jbe
and
lea
lods
sbb
rcrl
outsb
sbbl
mov
add
call
scas
mov
push
sbb
scas
mov
xchg
push
pop
insb
rcrb
jo
jb
mov
testb
aaa
xchg
fcoml
sub
sub
inc
and
aad
mov
je
lock
pop
xchg
adc
push
lds
push
outsb
lea
mov
add
into
cmp
cmp
cli
mov
test
jecxz
cmpl
imul
call
ret
mov
inc
jmp
les
pushf
dec
shll
iret
or
in
cmp
pop
dec
lds
or
push
je
std
sbb
jbe
rol
cmp
xlat
ss
push
push
addb
sbb
pushf
movsb
adc
popf
cltd
jle
sar
pop
in
jnp
pop
push
push
xlat
xlat
cmc
push
and
add
and
xchg
jle
jno
push
fisttps
push
push
stos
int
add
pop
pop
push
mov
lcall
sti
and
cmp
add
xlat
inc
ficompl
scas
cmpsb
sub
push
stos
jp
sar
sbb
jmp
mov
mov
movsb
push
add
out
sbb
jl
lret
push
xor
sbb
mov
and
hlt
repnz
lcall
mov
lods
pop
push
add
mov
imul
cmc
fcomp
xchg
outsl
push
inc
and
push
cmp
gs
daa
loopne
fcos
inc
push
push
push
call
dec
xor
jne
shrl
movsl
arpl
xchg
sbb
mov
rcl
add
pop
stos
mov
cltd
inc
mov
sbb
stos
repz
dec
out
and
pop
xchg
jecxz
inc
sbb
push
jge
fsubrl
add
xchg
pop
and
mov
xchg
push
sarw
test
add
pop
mov
sub
xchg
mov
inc
sarl
enter
dec
outsb
mov
push
jbe,pt
push
jne
pusha
pop
or
leave
push
mov
add
push
ficoml
push
jne
out
ret
mov
adc
add
movsb
and
add
add
ficomps
movsl
mov
andl
sbb
inc
mov
lea
cmpsl
stos
aas
or
sbbl
testb
adcl
mov
fcomps
adc
and
fisubrl
and
scas
push
mov
or
mov
mov
lahf
jne
inc
push
loope
mov
jno
pop
or
push
clc
sub
cmpsb
dec
xlat
rorl
add
lea
mov
mov
dec
in
and
cmp
push
xchg
dec
jo
outsb
pop
out
push
popl
cmp
stc
fld
mov
lock
or
lea
sub
cmp
dec
sbb
xchg
pop
test
fidivrl
pushf
and
int
je
add
nop
lretw
sbb
frstor
outsb
ror
outsb
dec
sbb
xchg
adc
das
cmp
mov
insl
xchg
mov
jg
xchg
xor
xor
mov
mov
and
sub
movsl
out
dec
jno
clc
jmp
js
shr
dec
int3
or
inc
and
sub
or
mov
mov
or
enter
add
fimuls
adc
mov
sbb
daa
aad
fbstp
mov
pop
test
xchg
xchg
stc
inc
mov
xlat
cmp
xchg
test
aaa
incb
out
push
decl
mov
enter
jl
sbb
push
xchg
push
out
mov
jo
lret
dec
test
and
in
sub
sbb
mov
fidivs
lods
cltd
shlb
clc
jnp
nop
inc
sub
gs
or
xchg
add
and
mov
push
push
push
rcrl
call
dec
rcrb
cmp
mov
shll
sbb
scas
test
roll
cmpsb
outsb
dec
cs
push
aaa
lock
jns
push
push
call
fdivr
decb
les
je
test
pop
loopne
push
mov
fstpl
xchg
push
adc
les
xchg
lret
lock
daa
mov
rorb
adc
inc
data16
add
or
popf
in
mov
jmp
fidivs
xchg
sti
mov
mov
test
enter
js
bound
mov
xor
mov
ret
or
pop
xchg
cmp
lods
mov
cmp
adc
add
cltd
cmp
adc
mov
sbb
sahf
push
adc
jne
scas
pusha
je
mov
repnz
daa
jne
imul
add
push
pop
test
mov
movsl
repnz
mov
shrl
and
fld
movl
push
mov
nop
dec
cmpb
pop
out
dec
add
and
and
repz
dec
jns
jmp
xor
lods
push
cmp
pop
pop
adc
push
int
lret
inc
lds
inc
pop
xor
loopne
add
test
je
stc
inc
cmp
aaa
addb
jnp
ficomps
fbld
pop
cmp
int
mov
call
test
jno
out
or
stos
push
call
leave
pop
imul
pop
cmpsb
ja
push
rep
push
std
test
or
hlt
addr16
fmul
or
xchg
scas
jb
bound
ret
fdivrs
pop
and
and
sub
xor
cmp
call
pop
add
jg
nop
mov
mov
daa
fisubl
outsl
push
adc
lods
push
sub
mov
mov
inc
add
loop
stos
fwait
movsb
xchg
or
add
ret
jle
imul
push
or
mov
push
jmp
dec
or
sub
jo
push
sbbb
std
or
mov
call
notb
jp
adc
jae
cwtl
push
inc
out
push
mov
push
aad
pop
nop
sahf
lock
xchg
xor
sub
mov
push
inc
xchg
ds
or
xchg
cmp
sbbl
sbb
mov
hlt
cmp
add
das
jne
lods
xlat
xor
inc
sub
push
shrb
dec
mov
imul
movsl
stos
mov
pop
add
jmp
call
scas
xchg
je
inc
hlt
xor
sbbb
pop
test
push
adc
cmp
sub
daa
or
dec
and
je
fisubs
pop
inc
scas
push
movsb
cmp
and
and
rcll
fcomp
popf
ljmp
adcb
xor
xchg
pusha
test
jmp
push
cmp
je
insl
inc
adc
mov
in
dec
mov
mov
lret
scas
mov
outsb
push
lret
dec
jo
adcb
xor
fldcw
lds
arpl
mov
xchg
push
mov
pusha
dec
fisubrs
pop
mov
push
aaa
cbtw
or
jo
or
cmp
sti
mov
pop
mov
sub
lcall
mov
mov
xchg
adc
lods
loope,pn
xor
inc
xchg
push
push
inc
adc
cmp
push
fadds
test
push
adc
inc
es
cmpb
pusha
movsb
sbb
bound
adc
std
rcrl
mov
xchg
pop
add
mov
gs
fs
aaa
cmp
and
ret
stos
push
es
xchg
inc
or
mov
or
inc
push
fnstcw
push
sub
xlat
inc
xchg
sbb
dec
dec
je
push
jl
fidivs
sbb
push
cmc
jns
stc
mov
or
nop
fbstp
xchg
sbb
insl
xchg
jle
inc
lods
fists
mov
pop
fsubr
push
orb
lea
push
or
dec
clc
adc
xlat
out
dec
out
push
mov
movsb
ud1
daa
xchg
jbe
add
xor
xchg
enter
adc
cmp
mov
cmp
mov
or
enter
cmp
je
test
jle
aaa
cltd
and
push
mov
pusha
jbe
je
imul
hlt
mov
dec
push
aam
enter
add
xorl
and
sub
and
mov
arpl
adc
jne
lret
mov
rcr
push
pop
xlat
and
cwtl
outsl
orl
adc
mov
loope
mov
pop
and
adc
cmp
xchg
jge
sarb
push
test
bound
push
out
les
mov
mov
cmpsb
inc
or
inc
push
roll
mov
adc
sbb
fsubp
popa
push
or
in
inc
repz
push
adc
or
pusha
or
add
pop
test
sbb
xchg
sub
xchg
mov
xor
adc
jo
ss
cwtl
and
pusha
movl
mov
pop
cmp
ret
xor
hlt
jns
or
mov
ds
mov
push
pop
sbb
and
and
sub
je
push
and
add
stos
ja
sbb
outsb
jb
mov
cld
ss
cmp
push
xor
adc
cmpsl
fwait
scas
scas
push
sub
sbb
mov
mov
or
insl
and
inc
ss
adc
xor
mov
and
negl
jae
in
adc
and
or
jp
nop
decl
xor
insb
adc
nop
inc
sub
enter
add
mov
rcll
sub
adc
add
movsl
data16
inc
sub
imul
push
pop
ds
xchg
fucomp
lcall
pop
push
jo
push
adc
pop
add
sbb
movsb
les
pop
cltd
daa
adc
lock
and
jle
push
push
xchg
aad
inc
call
jno
dec
pop
movb
jmp
xchg
and
jg
or
xchg
jmp
sub
daa
sub
in
sbb
push
lea
cli
out
popf
fcmovne
add
jo
dec
ret
dec
call
cmp
pop
push
pop
lcall
inc
inc
imul
jne
outsb
sbb
mov
sbb
fstps
test
xor
add
mov
leave
jbe
mov
and
dec
adc
daa
lret
outsl
push
ljmp
lret
xor
and
cmp
mov
push
and
test
adc
enter
repnz
inc
cwtl
and
adc
bound
sbb
and
imul
js
push
adc
adc
adc
jecxz
dec
outsb
std
jecxz
test
jno
dec
movsb
popa
xchg
and
sbb
shl
push
xor
scas
jbe
add
add
mov
cmp
mov
inc
xor
xchg
adcl
jle
decl
push
xchg
sahf
lahf
mov
movsl
xor
shll
cwtl
xorl
xchg
mov
push
repz
lds
mov
jnp
dec
xchg
mov
mov
ret
dec
jmp
mov
mov
jmp
and
shlb
push
add
jecxz
xor
and
mov
sub
sub
xor
sub
push
xor
dec
jne
sub
or
jbe
push
int
push
add
jecxz
cli
data16
vmovaps
mov
callw
xchg
mov
and
cld
push
lods
push
xor
sbbb
sahf
jmp
or
fistl
add
or
push
and
iret
or
jns
movsb
mov
jb
call
and
das
jo
sub
ds
pop
lea
mov
push
sbb
xor
adc
or
inc
and
jp
mov
cmp
or
lea
jge
adc
rcrb
sbb
out
das
rol
xchg
or
jne
fdivrp
xchg
sub
push
inc
in
jl
xchg
pusha
scas
je
cwtl
xchg
inc
or
lods
das
jb
jmp
jmp
lahf
adc
sub
imull
sar
push
data16
or
push
push
inc
xchg
pop
or
das
add
add
push
sbb
jmp
xor
loopne
adc
pop
jne
mov
mov
mov
mov
mov
jmp
cmp
and
jae
je
imul
push
int
in
jo
push
mov
or
movb
loop
je
leave
push
and
hlt
mov
sbb
loop
dec
mov
mov
pop
jo
pop
xchg
or
mov
sbb
adc
mov
call
and
xchg
mov
sbb
mov
sbb
sub
and
jle
push
lret
push
dec
mov
les
das
mov
shll
pop
push
ljmp
out
add
pop
push
ljmp
xor
mov
push
mov
pop
pop
jb
pop
in
jo
push
sub
bound
inc
xor
mov
lea
lret
daa
mov
push
dec
mov
jp
and
cmpl
sarb
dec
int3
clc
or
cmp
dec
jne
jmp
nop
push
jecxz
sbb
push
imul
push
jecxz
push
mov
sbb
add
call
test
jp
test
mov
leave
mov
imul
push
cltd
pop
push
test
sub
xor
nop
xchg
adc
push
push
fdivs
in
mov
push
call
mov
pop
cmc
jmp
add
inc
adc
ret
pop
popa
je
push
pop
fs
xor
inc
or
fnsetpm(287
aaa
push
insb
fsubl
push
xchg
sbb
push
xor
xchg
test
nop
xchg
mov
sti
push
or
call
mov
xchg
adc
clc
mov
dec
cli
add
add
jl
ret
or
push
bound
cmp
lcall
push
push
push
out
test
sub
pusha
cltd
mov
push
cmpsl
cmp
gs
je
push
add
adc
or
mov
inc
nop
je
popf
xor
sbb
test
cmp
cltd
lock
push
arpl
mov
adc
mov
stos
pop
les
lahf
loopne
inc
mov
adc
lret
adc
jp
and
pushf
inc
repnz
push
jb
addr16
or
pushf
xchg
ja
cld
in
out
and
dec
incb
or
add
mov
or
or
cli
imul
sbb
daa
dec
adc
push
cmc
sbb
add
decb
pop
mov
dec
leave
dec
sub
push
and
mov
insb
mov
out
popa
stos
mov
xchg
into
adc
pop
pop
cmp
popa
push
hlt
mov
rorb
cmpsb
das
xchg
les
in
adc
inc
sbb
lea
xchg
dec
in
clc
sbb
jle
and
addb
cld
jmp
or
pusha
pop
sub
lock
push
inc
mov
movsb
add
or
inc
pop
xchg
dec
fs
hlt
sub
push
and
jne
jle
push
clc
out
movsl
xchg
outsb
pop
or
jnp
push
test
lock
outsb
lock
out
push
dec
push
xor
and
or
adc
movl
sbb
pop
jo
orl
jne
loopne
clc
add
mov
shrb
inc
hlt
push
cltd
inc
jne
popa
mov
pop
sbb
lods
push
add
lcall
pop
cmp
cmp
inc
jp
in
mov
mov
jae
je
arpl
fidivs
call
sbb
dec
out
loopne
sbb
cmp
or
add
cmpsl
nopl
fbld
cli
ret
jae
mov
mov
pop
jg
inc
fwait
out
cmpsl
xor
fcomps
or
stos
push
hlt
je
cwtl
inc
jge
xchg
jecxz
lret
pop
sub
ret
arpl
shr
pusha
loop
ror
je
arpl
dec
decl
cld
andl
mov
xchg
sub
lret
call
and
adcb
jbe,pn
call
rorl
je
mov
jne
mov
inc
push
repnz
pop
pop
inc
dec
pop
jmp
xor
mov
and
xor
incb
enter
mov
sub
dec
push
cld
mov
fsubs
dec
bound
sub
dec
dec
cmp
in
push
scas
popf
and
sti
and
cmc
dec
jle
jo
inc
cmp
and
cmp
or
mov
ds
adc
cmp
push
xchg
je
xchg
push
icebp
cmp
or
enter
mov
sub
sub
xchg
imul
sub
mov
push
adc
push
xchg
mov
cli
adc
sti
outsl
adc
sub
cmpsb
push
dec
test
sub
repnz
mov
push
mov
pop
mov
pop
movsl
out
mov
mov
push
fisttpl
ds
cld
xor
lea
sub
je
cmp
and
sbb
mov
mov
lock
inc
out
call
jg
mov
push
pop
sbb
xchg
inc
lods
sbb
mov
flds
aaa
and
shlb
inc
jecxz
pop
jmp
xorl
inc
cmp
movsl
jg
inc
push
dec
sub
adc
test
mov
mov
fsubrl
daa
rclb
test
or
imul
inc
cmpb
push
je
push
jne
jno
je
dec
pop
add
push
push
je
push
aam
sbb
pop
adc
mov
adc
sbb
inc
test
push
adc
ljmp
xor
addr16
or
loope
movsl
imul
mov
add
pop
mov
int
scas
repz
inc
scas
scas
pop
mov
iret
pop
mov
outsb
jecxz
and
adc
jmp
and
push
ret
sub
lcall
stos
test
xchg
pop
shrl
out
lea
xchg
push
pop
xor
stc
xchg
pop
js
lock
mov
jl
lret
rep
nop
dec
loopne
cmpb
movsb
xchg
js
xchg
pop
mov
bound
fs
cmp
lods
add
push
mov
jne
cmp
movsb
out
cmc
xchg
cmpsl
f2xm1
js
push
stos
and
or
cmp
subl
and
call
xor
push
add
imul
cli
pop
pop
and
pop
test
stos
xchg
ljmp
test
push
push
daa
push
mov
imul
sub
mov
sbb
lods
sub
outsb
repz
dec
adc
jno
mov
call
mov
ds
jle
push
scas
es
orb
jo
pcmpeqw
jmp
adc
dec
push
jne
mov
xchg
sub
jb
add
sbb
dec
cmp
lcall
jmp
jp
in
and
fs
or
jnp
into
adc
mov
fucomp
or
outsl
scas
addr16
inc
mov
pop
in
ret
stos
and
jmp
inc
dec
jmp
pop
adc
jo
clc
xchg
addr16
mov
pushf
jo
arpl
mov
jns
cmpb
dec
add
add
push
sbb
jbe
mov
pop
jns
jecxz
fdivrs
jmp
repnz
test
jg
icebp
adc
test
xchg
sub
and
sahf
adc
dec
ret
xorl
std
mov
xchg
andl
cld
add
mov
push
push
addr16
add
pop
jmp
or
rclb
push
xor
push
jl
nop
adc
xlat
mov
or
mov
pop
xor
std
add
pop
push
ss
push
add
push
and
xchg
adc
jmp
push
call
mov
and
and
xchg
popa
cwtl
cs
mov
xchg
or
jne
add
std
pushf
sbb
lds
dec
dec
pop
mov
mov
push
scas
cli
xor
jg
repnz
xchg
shll
xchg
dec
adc
sub
adc
push
cmpb
ds
cs
sbb
add
sub
jp
dec
jbe
adc
int
out
ljmp
push
push
test
fildll
and
jb
lcall
dec
cli
sub
jmp
inc
mov
jg
dec
pusha
sbb
mov
scas
ret
out
stc
out
adc
ja
jmp
scas
xor
cli
lock
dec
xor
mov
cmp
cmp
in
arpl
testb
pop
stos
adc
push
call
fidivrs
fsts
pushl
in
jle
rclb
push
sub
fisubrs
dec
and
xor
or
sub
inc
sbb
test
and
push
dec
xor
jbe
nop
push
cmp
cmpsl
mov
lds
add
cmp
lea
lock
and
or
hlt
sub
sbb
in
adc
mov
push
mov
push
push
les
pop
sbb
enter
push
add
cltd
gs
cmp
in
inc
jmp
mov
mov
sub
ljmp
or
out
data16
or
push
adc
adc
js
push
mov
dec
lods
roll
int3
mov
sbb
add
pushf
sub
pcmpgtw
int3
xlat
dec
add
cld
test
in
push
mov
mov
jo
dec
in
clc
push
jp
inc
in
das
outsb
jne
and
push
sbb
pop
push
adc
outsb
outsl
mov
ljmp
leave
sub
jmp
in
push
jne
xor
insl
jge
jg
jne
inc
xchg
mov
popf
hlt
mov
push
stos
add
lods
pop
xchg
or
mov
adc
inc
add
push
rorb
inc
incl
cmp
sub
xor
push
adc
mov
outsl
mov
jmp
mov
hlt
fsubr
dec
push
dec
sbb
imul
lret
xchg
dec
out
xor
sbb
pushf
push
inc
dec
rcrb
mov
xor
icebp
fbstp
dec
and
dec
dec
gs
ja
jl
ljmp
int3
gs
xlat
and
cltd
dec
mov
call
out
push
xchg
dec
test
jo
lds
and
repz
mov
cmp
insl
or
jl
cmp
xchg
dec
mov
jl
ja
mov
cmp
jle
push
lcall
orb
jp
nop
adc
push
pop
mov
lods
mov
inc
ret
xor
add
lds
and
mov
mov
ljmp
push
xchg
aas
inc
push
xor
cmp
movb
dec
ss
mov
sub
jg
dec
xchg
adc
mov
movsb
lea
lods
and
js
iret
push
dec
std
add
sub
aam
mov
fdivrs
loop
movsb
sbb
and
jne
outsl
jmp
pop
xchg
inc
inc
mov
cld
aad
push
push
mov
out
mov
fisttpll
mov
or
int
adc
ret
mov
push
in
jae
jns
cmp
or
fs
xchg
daa
cmc
push
fistpll
sub
xor
pop
xor
or
cmp
nop
inc
frstor
insl
cld
pop
lods
aam
imul
sahf
mov
out
test
push
and
mov
xchg
sbb
mov
lret
xchg
xlat
mov
mov
jp
push
out
sub
xor
pop
cmp
xchg
lahf
inc
mov
mov
das
icebp
es
lock
shrl
pushl
clc
push
sub
faddl
imul
xor
scas
imul
sbb
idivb
sub
insb
repnz
lock
add
adc
mov
les
int3
xor
test
xchg
iret
dec
mov
mov
dec
repz
data16
add
es
xchg
popf
fsubrs
ljmp
add
xor
das
mov
jge
pop
cli
imul
mov
ja
cmc
add
dec
rcr
inc
ret
mov
aam
lret
repz
push
test
aad
mov
add
cwtl
mov
idivb
cs
and
jne
jle
adc
hlt
out
test
cmp
fcompl
jle
pop
nop
push
dec
xor
adc
mov
je
jne
mov
pop
push
std
fs
mov
mov
stos
mov
inc
xchg
dec
sub
lock
and
jge
add
adcb
jmp
repnz
movsl
add
ljmp
adc
mov
or
pop
fldpi
or
nop
sub
jne
in
adc
sbb
or
clc
push
pusha
xor
push
jge
jecxz
lret
roll
imul
outsl
add
push
and
repnz
pop
in
cwtl
fcompp
sbb
in
cmc
fildll
adc
cmp
outsb
sub
jg
ret
sbb
or
push
push
rolb
cwtl
sub
add
and
ja
cwtl
sbb
mov
jns
mov
and
and
out
test
in
popa
mov
shrl
sub
ds
aas
push
xchg
dec
fnstcw
fsubl
std
cmp
push
add
bound
xchg
pushl
cmp
rolb
lcall
pop
lock
fisubl
jne
dec
fnstcw
ret
sbb
inc
call
ljmp
aad
ret
push
inc
dec
adc
inc
and
push
dec
cmp
push
sbb
adc
mov
cltd
fsubl
fistps
shrl
mov
sahf
fcoms
insb
jge
mov
test
fiaddl
nop
pop
mov
adc
popa
xchg
and
jne
outsb
out
jbe
push
xchg
insl
and
sbb
dec
sbb
loop
fdivs
cltd
or
inc
sarl
pcmpeqw
adc
mov
ret
inc
xor
out
orl
cmp
pop
sbb
test
aaa
cltd
add
and
or
fcomip
sbb
sub
inc
pop
add
icebp
in
xor
dec
and
je
push
jle
pop
add
pop
sbb
or
leave
jg
xor
push
and
and
hlt
call
inc
xchg
push
xchg
int
arpl
and
int
add
push
ljmp
repz
cs
pop
jo
test
cwtl
xor
leave
ret
cmp
das
vphadduwq
xchg
imul
ljmp
jne
pop
hlt
roll
sti
xor
mov
mov
pop
fadds
add
popf
mov
pop
or
out
sub
push
fcom
and
orb
inc
adc
lods
mov
push
mov
or
cmp
int3
pop
inc
mov
stc
pop
in
mov
ljmp
aad
int3
push
mov
sahf
push
idivl
push
inc
stos
loopne
jnp
sbb
push
add
leave
adc
xchg
or
jg
dec
xor
pop
mov
cmp
loop
ja
xchg
sbb
adc
pop
jbe
xchg
cwtl
loop
pmulhw
xorl
jle
sub
cmp
add
or
iret
jl
or
inc
jne
and
lret
add
ds
fs
push
hlt
ljmp
or
cld
fimull
or
call
cld
outsb
inc
fcompl
xchg
xor
pand
sub
outsl
out
stc
bsf
add
call
orl
call
das
je
ljmp
cmp
xchg
repz
push
inc
xchg
xor
mov
xchg
sti
int
arpl
jge
test
fdivrl
stc
mov
push
addr16
push
jg
ret
dec
gs
dec
jmp
testl
push
test
xor
mov
mov
sub
daa
mov
shl
mov
and
sarl
jno
mov
scas
pop
outsl
repnz
imul
mov
jmp
insb
rcrb
fistl
inc
adc
pop
pop
jmp
cmp
or
dec
add
jmp
jae
in
hlt
jns
adc
lds
in
in
and
sub
stc
jmp
movsb
cmp
pop
test
or
push
into
in
jle
sbb
fcmovnbe
sub
aas
xchg
xchg
loop
xor
mov
xlat
stos
and
jp
aam
rorl
push
push
mov
xor
out
xchg
mov
cmp
cmpsb
stos
add
and
lar
in
mov
fidivs
clc
inc
and
add
mov
pop
int
and
push
popa
out
push
xor
loop
xor
insb
je
cs
repnz
inc
inc
inc
or
inc
jge
hlt
adc
mov
push
aam
inc
jl
dec
or
mov
push
in
clc
sub
icebp
aas
test
mov
push
jmp
push
je
test
popa
adc
sbb
aad
nop
ss
int
cld
sub
adc
or
xor
sbb
mov
int
mov
jno
sub
or
lcall
jp
cmp
mov
adc
adc
or
ret
fsubp
push
dec
dec
outsb
xor
jmp
push
inc
adc
and
clc
decl
mov
mov
add
xchg
enter
sbb
and
fadd
cmp
sub
in
cld
cwtl
sbb
mov
add
call
jmp
inc
add
jg
push
rorl
push
test
sub
xor
or
add
scas
or
xor
xor
sub
insl
pop
pop
xchg
fs
sbb
stos
les
xchg
pop
dec
xchg
jbe
or
inc
push
testb
and
and
aaa
jmp
xchg
pop
stos
xlat
push
inc
jmp
add
mov
hlt
mov
movsl
int
movsb
leave
or
mov
clc
enter
nop
push
enter
xchg
adc
and
mov
insb
lcall
xor
pop
mov
hlt
push
push
xchg
dec
mov
add
fstpl
add
adc
and
cmpsb
add
cmpsl
add
dec
ja
inc
jmp
xor
xchg
divb
adc
xchg
sub
xchg
lods
addb
xlat
in
test
pop
nop
pop
dec
inc
xlat
ret
je
lock
sbb
dec
and
pushf
mov
pop
jmp
scas
notl
adc
daa
scas
cld
pop
xchg
fdivr
mov
fbstp
outsb
push
call
xlat
cmpsb
leave
int3
cld
nop
push
sub
hlt
push
push
xchg
fiadds
mov
bound
in
cmp
push
xor
das
movswl
xor
xchg
xor
jbe
sbb
aam
lods
and
cmp
adc
adc
cmp
incl
imul
dec
outsb
xor
jne
or
clc
sti
movsl
add
or
mov
rorb
mov
and
movsb
cs
orb
xchg
mov
dec
js
and
pop
adc
mov
mov
xchg
fcoms
leave
xchg
jns
dec
sbb
push
sub
enter
push
sbb
pushl
enter
in
loop
or
mov
leave
movsb
sub
dec
mov
push
push
stos
xor
stc
inc
jmp
in
mov
pop
mov
mov
add
jle
cli
dec
ss
jo
lea
jno
fldcw
push
test
dec
cmp
rcl
loopne
in
fldl
bound
aas
add
outsl
loope
jne
orl
rcll
fdivrl
mov
jecxz
addr16
push
push
mov
ja
push
es
cltd
push
pop
dec
in
xor
in
xchg
xor
nop
std
gs
es
or
pop
sub
cmp
add
push
out
call
adc
adc
adc
push
loopne
and
inc
loopne
stc
mov
or
mov
and
inc
in
std
mov
cmp
nop
adc
mov
fsts
sub
nop
or
insl
lret
in
dec
cmp
lea
cmp
adc
dec
lock
and
xchg
and
adc
xlat
mov
mov
out
xor
stos
adc
mov
xchg
rclb
xchg
mov
in
cltd
sbb
push
jns
adc
out
adc
push
movsb
sub
call
xchg
mov
dec
fsubl
loopne
lods
or
in
mov
mov
loopne
cmovne
jmp
cld
jl
in
jno
or
add
mov
add
out
jno
push
mov
adc
aas
aad
fnstcw
adc
xchg
cli
scas
and
cmc
dec
loope
es
or
and
loopne
inc
add
mov
xor
sbb
xchg
fstl
inc
pop
nop
repnz
mov
test
xor
push
add
in
inc
or
in
test
and
rorb
inc
adc
or
inc
mov
mov
inc
movsb
and
adc
test
or
jo
and
pusha
test
adc
pop
inc
push
xor
and
in
xchg
and
rdtsc
jo
les
dec
push
sub
lret
inc
or
test
and
inc
sub
mov
mov
pop
xor
mov
jmp
test
mov
movsb
das
sub
inc
mov
scas
nop
mov
mov
sub
adc
lea
insb
sti
bound
cmp
fimuls
jb
notb
or
ljmp
or
jl
sbb
sbb
jae
cld
test
sbb
repz
sti
imul
aas
lea
cmpb
lea
lret
jns
leave
lds
xchg
xchg
jge
movsb
fcoms
or
inc
adcl
push
and
pop
pop
inc
call
or
xchg
lods
xchg
rclb
or
or
inc
inc
shlb
and
lods
inc
lahf
xchg
xchg
or
mov
dec
fsts
testl
enter
cltd
adc
or
adc
imul
xchg
adc
xchg
into
xor
xchg
push
mov
mov
ja
je
inc
push
jmp
cmp
dec
in
inc
addr16
hlt
and
out
call
inc
push
bound
cli
adc
jmp
push
fisttpll
clc
inc
pop
and
repnz
adc
scas
jb
sahf
into
or
test
push
std
orl
jnp
sub
inc
pop
cmp
stos
inc
and
movsb
out
jp
scas
loop
std
das
lcall
pop
inc
adc
adc
ljmp
adc
pop
xchg
gs
jb
rorl
inc
adc
movsl
repnz
stos
insb
mov
pop
sub
and
sbb
push
fs
push
push
push
in
or
inc
xor
mov
push
xchg
or
jl
inc
clc
lahf
pop
je
jge
dec
cs
loope
addr16
ret
inc
push
test
dec
enter
dec
cld
mov
jle
add
mov
test
pop
lods
adc
xlat
pop
jmp
xchg
push
xchg
adc
cmpb
mull
cld
outsb
leave
jge
stos
xchg
mov
push
cmp
jns
ds
mov
fistpll
popa
rcl
lea
int
leave
andb
inc
mov
mov
push
loop
sub
inc
dec
sbb
pop
inc
fadds
adc
rcrb
pop
or
negl
xchg
test
mov
aaa
call
push
fsubrs
dec
std
xorb
lock
adc
fsubrl
dec
scas
cmp
and
aas
lea
push
push
push
mov
xchg
cmpsb
dec
and
js
mov
outsb
daa
ljmp
mov
lock
xchg
push
xchg
in
popfw
adc
and
aas
or
call
das
and
pop
or
iret
adc
mov
emms
xor
pop
jo
data16
xor
test
add
xor
inc
push
subl
int3
aam
sti
adc
popf
pop
repz
pop
sbb
sub
cltd
sahf
jg
aam
adc
sub
inc
scas
adc
clc
mov
mov
imul
rclb
enter
out
adc
jbe
fstps
imul
inc
mov
cmp
repz
xchg
scas
dec
xor
lea
or
cmp
mov
dec
jbe
pop
dec
mov
rorb
movsl
ficomps
cld
jb
test
loop
dec
jmp
and
rcl
xlat
cmp
add
test
clc
imul
jmp
ret
scas
xor
hlt
int3
push
xor
xchg
lea
push
call
mov
inc
mov
push
lret
test
call
mov
nop
mov
and
inc
imul
cmp
test
test
cmc
push
in
dec
stos
inc
insl
lahf
test
mov
test
test
xor
jae
sub
mov
sbb
push
cwtl
std
jbe
hlt
sbb
das
xor
jo
lret
inc
cmc
fidivrl
mov
mov
or
test
stos
mov
cmpl
mov
cmp
push
dec
jne
and
pop
sbb
jb
pop
adc
cmpsb
jl
jne
imull
jp
xchg
popa
scas
mov
dec
call
sbb
jp
loopne
and
std
inc
fildll
shlb
outsb
push
xor
xchg
test
sbb
enter
add
xor
pop
pop
lds
dec
lcall
push
jo
xchg
mov
in
xchg
sbb
and
or
xchg
xchg
inc
push
dec
nop
xchg
dec
add
or
cmp
test
push
mov
push
das
xor
jg
mov
sub
cmp
lock
imul
ret
inc
out
leave
outsb
imul
aam
pop
movsl
pushl
jp
mov
shlb
jnp
add
and
xchg
xchg
add
pop
and
jmp
lods
dec
xchg
scas
adc
test
and
sub
ret
mov
insb
or
sub
out
leave
jge
adc
popa
cmpsb
call
jmp
pop
and
vaddps
xchg
je
sahf
pusha
adc
dec
mov
sbb
out
xchg
inc
mov
and
push
and
jnp
jns
ljmp
cs
jmp
shrb
in
jb
jge
test
movsb
lcall
add
into
lock
je
xchg
jp
jl
adc
xor
or
pop
add
mov
xlat
pop
jb
xchg
cmc
jbe
push
cmp
mov
mov
lea
push
mov
add
push
rolb
add
imul
mov
dec
sbb
or
add
test
icebp
inc
nop
cmp
rclb
rolb
fildl
repnz
jbe
aaa
adc
and
ss
cmp
ds
hlt
mov
ficompl
mov
insl
out
sub
lcall
dec
add
push
nop
push
aam
sbb
mov
sbb
push
mov
and
testl
inc
arpl
mov
loopne
call
mov
jne
inc
sar
lret
decl
sbb
sub
aad
adc
push
push
sub
ret
lea
andl
inc
and
sti
daa
jmp
xor
lcall
or
js
jmp
pop
aas
lock
inc
insb
add
sahf
stos
jne
mov
push
ret
in
xor
enter
add
or
leave
mov
inc
push
push
or
pop
cwtl
xlat
cli
xor
loopne
sbb
xchg
xchg
loope
xchg
nop
or
xchg
or
or
xchg
std
mov
adcl
or
mov
push
or
aas
push
mov
inc
fimuls
in
fdivrp
fldl
sbb
push
jae
addb
jno
adc
aad
dec
push
xor
pop
or
test
jo
or
jmp
pusha
loop
xchg
icebp
in
mov
dec
mov
xchg
hlt
addl
sub
or
and
push
ds
lea
inc
cmpsl
mov
xor
mov
or
add
mov
ret
cmp
sub
ret
sub
aad
pusha
sbb
outsb
mov
sub
xor
adc
push
jae
and
aad
dec
mov
mov
pop
js
mov
mov
pop
pushf
or
add
sbbb
push
vcvtsd2si
dec
add
shrl
aam
cmpsl
push
xchg
and
adcl
dec
pop
jl
dec
mov
cs
movsl
out
sub
shll
clc
pusha
testb
fcomps
mov
pop
xor
mov
sbb
adc
add
jae
dec
popf
push
fdivrl
sub
ds
jbe
push
dec
xchg
adc
or
inc
ja
and
mov
sbb
clc
push
mov
and
pushf
pop
pop
je
and
pusha
jmp
call
pop
dec
or
and
sub
mov
fldenv
cmc
jno
lock
jl
sbb
mov
inc
notl
pushl
push
nop
sbb
dec
daa
sub
testl
lds
push
cmp
dec
scas
mov
sub
cltd
dec
fistl
daa
lcall
lahf
mov
xchg
pop
lret
or
flds
push
push
test
adc
popf
cmp
daa
ja
ss
mov
cmc
or
xor
ja
out
or
xor
and
and
popa
es
cmp
fisubl
gs
repz
and
es
xor
data16
xchg
fisubrl
int3
adc
adc
mov
loop
notb
pushl
push
jmp
aaa
push
loopne
or
inc
out
repnz
lahf
mov
cmc
sub
add
leave
xchg
push
fs
lea
cmpsl
aad
inc
scas
pusha
inc
in
out
call
imul
pmaxub
adc
jb
call
arpl
adc
jno
add
xchg
inc
dec
stos
and
xchg
inc
or
sub
repnz
stc
lret
mov
ds
arpl
xor
and
ud2
pop
cmp
push
and
in
and
add
call
add
outsl
or
and
or
dec
js
test
add
sbb
mov
push
adc
mov
mov
sbb
in
das
js
add
push
imul
pop
push
mov
aam
inc
out
cmp
xor
sub
js
imul
and
imul
bnd
lea
or
dec
sub
push
mov
idiv
and
lods
mov
push
loopne
lahf
mov
lret
sbb
hlt
pop
div
mov
dec
clc
sub
and
xchg
fdivl
lods
insb
and
int3
inc
sbb
pop
push
dec
xchg
cs
and
xor
mov
dec
xchg
mov
fmull
cs
leave
or
push
add
dec
and
xchg
in
cmpsb
dec
sbb
popa
dec
pop
jne
cli
loope
jmp
cli
or
pop
cwtl
inc
dec
xchg
push
pop
cwtl
mov
dec
pushf
jns
adc
gs
and
xor
lcall
pop
imul
adcl
inc
decb
jne
cli
call
add
xor
cmp
or
push
popf
add
jmp
aam
push
cld
inc
ret
call
dec
out
test
sub
das
jne
imul
lods
es
repnz
xor
xor
pop
jae
loopne
inc
cmp
loopne
push
xor
jno
jne
pop
imul
add
daa
dec
push
mov
imul
cmpsb
sub
mov
addr16
hlt
fldl
inc
adcl
inc
jge
push
into
mov
ret
insb
add
cmp
and
add
bound
mov
sub
xor
das
je
test
jne
dec
xlat
cmp
enter
repz
bound
mov
xor
sub
xchg
icebp
mov
xor
leave
mov
inc
sbb
or
dec
hlt
push
or
rorl
call
sub
ret
es
ss
std
xchg
push
sbb
or
loope
push
in
xor
test
push
xchg
jbe
ds
lds
lret
push
jle
pop
pop
dec
lea
cmp
ds
andl
jmp
xor
mov
and
sub
mov
adc
adc
xchg
sbb
adc
clc
cmc
popa
movl
and
ljmp
jge
pop
jg
sbb
das
and
and
mov
out
or
pushf
add
call
dec
mull
xchg
lret
incb
test
xor
cmp
in
nop
mov
cmp
nop
stc
mov
jge
inc
lock
inc
incb
jmp
sub
shr
xchg
stos
mov
ret
sub
imul
jl
incb
inc
sbb
pusha
or
push
sub
sub
and
xor
jmp
lcall
scas
fistps
adc
scas
ja
lea
ss
adc
dec
jge
aaa
cmp
je
inc
push
int
add
cmp
sti
test
mov
mov
dec
and
and
push
dec
sti
jle
inc
push
sbb
inc
lods
xchg
push
xchg
call
mov
shll
test
dec
jg
cmpsb
cltd
ret
mov
or
xchg
or
cli
cld
xchg
into
and
add
out
jge
jbe
sahf
dec
mov
in
inc
inc
daa
lock
mov
rclb
fmuls
mov
cmp
fs
hlt
dec
xor
xor
or
sub
dec
hlt
add
push
push
call
add
call
rorl
sub
popa
sub
cmp
sub
add
ja
imul
data16
mov
test
xor
jns
mov
sub
xor
addr16
fildl
pop
inc
push
mov
lea
movsl
jb
cmp
lea
push
cwtl
adc
enter
data16
mov
clc
and
leave
ret
cmpsb
ret
mov
or
ret
negb
push
pop
in
insb
push
xchg
arpl
sub
inc
out
sti
cmpl
decb
xor
or
mov
std
cmp
bound
push
push
inc
or
lods
mov
mov
pop
pusha
stos
push
lret
xchg
push
and
mov
and
pop
cmp
cltd
add
push
not
cltd
push
jge
pop
jle
movsl
das
push
pop
in
push
repz
lds
add
xor
push
test
push
xor
add
sbb
cmpl
mov
push
inc
xor
add
xor
inc
fstl
fs
sub
jmp
xchg
push
test
adc
jbe
mov
push
jmp
enter
mov
ljmp
dec
jle
pop
gs
pop
enter
jmp
adc
loopne
jmp
dec
inc
into
dec
mov
insb
mov
xor
adc
test
push
mov
dec
orb
adc
or
adc
jbe
fistpll
dec
test
dec
inc
cli
aad
ret
imul
call
in
dec
push
leave
or
add
leave
dec
repz
imul
jbe
push
and
xchg
lcall
xchg
dec
adc
lret
inc
lret
mov
and
jg
mov
or
popf
sbb
fs
push
daa
mov
shlb
lfs
ret
dec
or
fldpi
fsubp
or
faddl
push
push
call
pop
sahf
jae
sbb
je
mov
cmpsl
aam
or
pop
das
out
adc
mov
add
fisttpl
and
loopne
insl
sbb
fabs
pop
adc
je
psubsb
and
jg
push
fisttps
pop
jmp
or
stos
or
lret
sub
outsb
cmp
scas
dec
pop
lock
push
outsl
cmp
fcoml
and
test
and
sbb
jle
and
mov
pop
adc
and
fldt
std
xchg
sub
lods
push
out
mov
rcrb
les
sub
add
or
push
rcll
dec
imulb
mov
jne
push
imul
test
pop
lret
sbb
and
hlt
push
pop
sbb
std
add
push
call
aad
fs
xchg
sbb
mov
call
adc
jp
sbb
pop
pop
cmpsb
mov
insl
incl
sub
sbb
sarl
adc
adc
fld
inc
nop
add
loop
scas
adc
lea
xchg
movsb
add
add
sahf
or
sbb
or
in
sti
mov
adc
xchg
in
iret
scas
jge
fadd
stc
jmp
cmc
jmp
or
xchg
fisubrl
mov
mov
iret
xchg
or
jne
sub
xor
shlb
sbb
sub
outsl
dec
xor
xor
adc
popa
sti
adcl
sahf
or
cmpsl
sub
jmp
daa
adc
xor
adc
sbb
lock
and
or
dec
sub
jmp
movsb
push
sbb
xorb
push
shlb
cmp
jne
call
es
cli
cmp
and
adc
add
ja
push
inc
xor
push
imul
int3
dec
insb
and
mov
and
and
cmp
leave
add
imul
jae
and
xchg
mov
loopne
mov
pop
call
xorb
test
and
je
aad
and
dec
sub
mov
or
sbb
push
popa
sub
shll
es
and
adc
and
xchg
sbb
shl
dec
mov
mov
sbb
adc
jmp
test
add
int
push
cs
into
sub
inc
inc
mov
adc
iret
add
xor
mov
xor
adc
orb
stc
push
and
xchg
jg
jbe
dec
pop
push
sar
adc
ss
dec
push
das
jmp
jecxz
jl
movq
push
jmp
leave
fbld
fs
lods
inc
mov
and
icebp
movsb
sbb
add
xchg
es
mov
in
push
inc
pop
loop
js
inc
rcrb
pop
add
xchg
in
sub
inc
loop
sbb
xchg
xor
ret
stc
adc
xorl
mov
dec
cmpsb
pop
inc
push
out
dec
sbb
xorb
and
inc
movsb
cmp
leave
sub
mov
nop
sub
or
xchg
inc
mov
les
aaa
roll
push
jecxz
clc
jp
or
cld
pop
inc
cwtl
sub
sub
movsl
in
or
or
adc
std
mov
push
jg
in
fs
inc
rolb
out
into
lret
push
loopne
mov
dec
pop
mov
ret
cmpsl
mov
xchg
mov
je
ljmp
shld
das
mov
xchg
shll
xor
jne
mov
and
push
add
nop
xchg
jle
sub
sub
les
jmp
out
lods
sbb
aad
jecxz
mov
sub
in
dec
lea
push
cmp
xor
iret
pop
push
inc
das
mov
fistpll
cltd
pop
sub
and
rolb
cmp
jle
and
pop
mov
decl
mov
inc
dec
sub
jmp
ja
adc
jmp
roll
pop
push
repz
inc
jge
jne
clc
push
and
dec
sti
add
or
sbb
cmpsb
popf
push
mov
dec
adc
pop
and
mov
clc
ljmp
roll
and
adc
stc
add
push
mov
je
cmpsb
aaa
mov
andb
mov
adc
test
mov
push
xlat
pop
lods
add
test
je
fidivrl
or
jmp
and
aam
pop
cmpsl
cmp
or
lods
inc
leave
lea
icebp
out
push
jmp
notb
or
fstps
out
fstpl
sbb
inc
push
fildll
bound
aas
lods
add
int
nop
jne
sbbb
pop
loope
xchg
movsl
or
or
adc
or
or
mov
pushf
lea
push
out
mov
mov
xorb
inc
pop
mov
dec
cmpb
loope
push
cwtl
sub
je
lret
or
cmp
cld
and
push
repz
pop
rcrb
jnp
lret
aam
repnz
xlat
icebp
jle
repz
call
popf
lock
stc
flds
xor
add
popa
push
pop
adc
gs
das
mov
cmp
shll
pop
scas
lret
stos
es
and
push
or
addb
mov
je
mov
pusha
lock
in
adc
cmp
hlt
add
cmp
jle
loopne
mov
or
stc
or
dec
or
leave
mov
setg
push
add
ljmp
idiv
or
inc
cmp
and
lock
mov
and
lods
mov
or
movsb
dec
lds
mov
mov
push
jno
in
adc
cwtl
scas
and
push
or
sar
xchg
jo
fwait
xor
cmp
inc
scas
xor
push
push
aas
lea
outsl
leave
iret
xor
pop
add
aas
mov
dec
lret
or
or
loop
mov
ss
dec
jmp
adc
mov
call
jp
mov
ret
lods
jle
lods
sbb
sub
pop
stc
and
sbb
cmpsb
cs
jmp
and
dec
cld
or
adc
sub
movsb
call
or
push
cmc
cmpsl
jge
lds
scas
les
or
inc
std
and
dec
push
or
repnz
sub
or
and
and
fisttps
xchg
in
dec
push
movsl
subb
dec
hlt
jg
ss
std
push
fbld
mov
test
inc
mov
subb
jnp
mov
sbbl
xchg
lock
and
adc
sub
mov
jmp
adc
sti
cs
cmpsb
xchg
jo
jle
xchg
orl
jmp
add
hlt
pop
leave
and
repnz
or
dec
stos
xchg
push
xor
jb
push
icebp
dec
push
scas
popa
das
call
hlt
jmp
add
call
fcomps
add
imul
outsb
cmp
movsb
add
in
dec
aas
leave
pushf
loopne
add
mov
inc
cmp
pop
pop
mov
xlat
test
fcom
lock
inc
dec
ds
cmp
pop
dec
inc
sbb
adc
sub
cltd
dec
mov
inc
stos
xchg
push
pop
xor
sbb
cs
jg
adc
jl
dec
pop
xlat
mov
and
cs
shrb
sbbb
sub
xchg
rcr
dec
pop
dec
push
adc
sub
fimuls
arpl
aam
or
push
mov
mov
pushf
jmp
sarb
xchg
mov
arpl
cmp
add
mov
pmullw
clc
movsb
push
mov
add
mov
icebp
jne
aaa
in
sti
lods
stos
movsl
scas
rcrb
pushw
std
push
fbstp
xchg
shr
test
pop
mov
xchg
enter
movsl
adc
adc
mov
push
les
ja
fmul
xchg
jno
mov
xor
add
mov
add
mov
dec
sub
cs
and
jl
jl
mov
clc
ret
enter
sbb
mov
and
inc
icebp
or
stos
add
and
inc
sub
jnp
into
les
push
sbb
xor
test
add
testl
mov
push
aaa
push
push
sbb
jo
jmp
sbb
mov
pop
shl
pop
push
pop
in
xchg
ret
pop
cmc
bound
rol
fiaddl
sarb
mov
out
dec
mov
jmp
xlat
pop
loope
fstp
jno
fnstsw
rcl
xchg
cmp
sete
movsw
pop
inc
jmp
cmc
int3
xlat
xchg
imul
sarb
inc
or
or
pop
repz
repz
cli
lods
daa
das
sub
sub
lds
add
lods
aad
inc
dec
mov
xchg
sub
mov
dec
nop
xchg
pop
or
jmp
push
sub
pop
movsb
sbb
mov
push
pop
sub
stos
daa
mov
leave
inc
sub
into
mov
ret
xchg
cmp
test
jnp
cmp
lods
jb
shlb
or
into
dec
add
jmp
add
pushf
xchg
adc
cltd
loop
jo
and
imul
jl
cmc
icebp
push
inc
push
mov
cmp
pop
leave
js
mov
and
jle
push
fs
mov
mov
and
sti
add
movzbw
ds
xor
jne
push
scas
jmp
aam
inc
mov
clc
fnstsw
mov
ret
or
add
sbb
shrl
jg
imul
inc
ss
inc
inc
inc
hlt
jne
into
or
jmp
into
in
push
mull
sarl
sbb
add
jne
mov
mov
aaa
push
xchg
cwtl
pushl
outsb
mov
scas
mov
lock
cmp
jns
ljmp
aas
addb
mov
in
sub
mov
das
lods
lcall
inc
rorl
jg
mov
jmp
mov
xchg
jmp
sarl
pop
push
or
cmpsl
in
stos
enter
mov
add
push
push
push
loope
xchg
js
adc
push
cmpsl
call
mov
cmpsb
adcl
jle
mov
cmp
out
sbb
cmpsb
sbb
push
push
pop
cwtl
mov
adc
jmp
stc
dec
push
push
push
daa
xor
loopne
popa
inc
mov
decl
popl
xor
test
or
adc
vmwrite
mov
loopne
cmp
or
sub
sbb
movsl
cmp
fidivl
repz
lods
sbb
scas
inc
and
outsb
repz
push
lea
or
shll
cmp
push
loopne
add
xchg
in
shlb
jge
and
pushl
and
push
jb
mov
mov
lods
adc
stos
push
lret
mov
mov
and
das
jo
imul
mov
popf
dec
push
push
pop
xor
in
sbbb
shlb
add
in
mov
cmp
xchg
jo
stos
or
mov
jp
add
imull
pop
xor
add
xor
js
add
test
int
push
push
daa
push
loope
and
movsl
and
jmp
xchg
xor
ds
je
repnz
sub
mov
daa
dec
jge
add
das
add
or
xchg
testl
out
fmuls
shrb
push
jae
jns
mov
test
jmp
jb
out
jnp
mov
lods
lea
addl
repz
adc
icebp
push
push
aaa
xor
gs
aaa
outsb
push
imul
inc
cli
stc
cmp
dec
xor
adc
jg
inc
pop
push
sub
out
into
pslld
lods
pop
mov
fs
sub
inc
mov
push
sub
sub
jge
and
mov
out
outsl
lret
or
xor
hlt
or
cwtl
mov
je
test
xor
jmp
sbb
test
sub
testb
dec
in
or
or
scas
push
add
cwtl
jl
and
add
pop
cltd
idiv
jge
or
push
add
int3
inc
add
cltd
add
idiv
lea
push
cld
add
pop
push
ret
clc
dec
dec
push
xchg
std
clc
or
add
xchg
cs
ja
ret
dec
and
push
jae
add
mov
cmc
adc
sub
push
adc
adc
jmp
push
pop
ljmp
and
jne
pop
test
and
jae
push
sub
sub
adc
mov
inc
lds
repz
sub
xchg
add
fcomp
mov
ljmp
imul
xor
or
andl
jge
xchg
icebp
mov
or
pop
imul
pop
add
adc
or
mov
repz
push
imul
nop
hlt
or
sub
imul
cmpl
xchg
inc
xor
call
iret
jno
jge
ficoms
sub
xorl
shl
mov
pop
idiv
push
push
stc
push
jle
or
clc
scas
adc
and
cmp
lret
jb
push
jmp
div
or
mov
xchg
test
pop
push
test
daa
mov
icebp
dec
test
mov
cwtl
inc
loope
adc
mov
adcl
adc
push
mov
lcall
cmp
pop
adc
dec
mov
and
pop
fs
cs
sub
mov
les
daa
jge
shl
inc
push
cmp
gs
sti
mov
xchg
mov
and
test
jne
cs
inc
push
sbb
inc
or
std
push
adc
dec
inc
push
cmp
pop
sbb
lea
jp
sub
scas
cmp
push
cmp
aaa
jmp
aam
jae
push
mul
mov
stos
scas
fistpl
mulb
scas
push
and
call
pop
in
sbbl
mov
cli
inc
jo
inc
std
test
adc
outsb
mov
sti
push
jae
sub
and
pop
add
push
pop
xor
xchg
adc
mov
jne
stc
cmp
xchg
mov
mov
das
add
dec
call
daa
jge
sub
xchg
sub
pushf
dec
daa
jge
xor
push
clc
and
pop
je
call
or
or
xor
jns
or
adc
sarb
shrl
lods
push
and
cmpsl
aad
mov
cli
mov
pop
jns
ljmp
clc
xor
movsb
inc
add
fistl
sbb
and
imul
add
mov
dec
repz
ds
dec
or
jmp
pop
cmp
inc
jne
scas
cmp
xor
pop
pop
pop
cli
shld
push
movsb
push
sti
ret
cmc
pop
fisttpll
notl
div
cmp
fwait
pop
movsb
aaa
or
add
or
dec
adc
cs
pop
ret
lcall
lock
les
xor
sub
fdivp
xor
iret
and
pop
es
roll
pop
jmp
and
and
movsl
das
cmp
mov
enter
ret
sbb
mov
sbb
push
mov
and
jmp
stos
stos
outsb
dec
push
popl
cmc
adc
fisttpl
adc
repnz
movsl
push
inc
into
mov
cmp
test
cmp
inc
les
js
popf
std
xor
xchg
adc
or
sub
test
clc
push
cmc
rorb
dec
aad
push
pop
mov
xchg
jae
outsb
cmc
insb
push
ret
and
dec
scas
and
jl
mov
test
mov
sti
call
imul
pop
psrlq
dec
imul
cltd
lods
aam
and
cmpsl
dec
pop
loop
data16
adc
mov
daa
lock
cld
and
dec
cli
mov
and
pop
in
ss
xchg
inc
test
hlt
pop
ljmp
mov
xchg
notb
or
pusha
inc
dec
aaa
push
or
fmull
les
aaa
jmp
inc
add
rolb
leave
inc
or
mov
daa
inc
test
inc
dec
add
jmp
xchg
mov
fisubs
pop
imul
ja
loope
arpl
lock
fnstcw
pop
xor
rol
out
nop
ljmp
inc
push
fidivl
inc
inc
in
sbb
nop
mov
add
xor
repnz
pop
pop
adc
and
aaa
insb
push
dec
add
outsl
mov
pop
push
dec
ret
push
enter
jb
sahf
sbb
sub
mov
pop
mov
je
push
pop
jmp
cmp
pop
jp
adc
adc
clc
scas
leave
dec
xlat
rolb
xor
adc
mov
into
dec
cmp
cltd
sub
mov
insb
push
and
imul
adc
add
sub
push
adcl
xor
add
push
les
adc
jge
dec
dec
jae
cmp
adc
lock
mov
dec
sub
call
mov
and
xchg
inc
and
ljmp
out
xchg
in
push
inc
pop
dec
push
dec
pop
xor
cmp
icebp
in
xchg
jmp
jne
sti
cwtl
std
cmovp
add
inc
push
ljmp
pop
sub
dec
xor
push
outsb
das
sahf
sub
shll
pop
dec
rorl
leave
jne
imull
ds
add
cwtl
bound
cmp
cld
pusha
test
push
dec
xor
fadds
out
or
or
notb
mov
xchg
dec
in
push
ret
pop
push
mov
or
adc
test
push
inc
push
mov
fcomps
sti
mov
pop
push
mov
inc
aam
mov
push
and
xchg
iret
inc
add
cmc
out
and
movsb
subb
repz
xor
sub
push
stos
and
mov
outsb
dec
lea
mov
xorl
jg
jbe
gs
sti
ja
add
call
fadds
repz
sbb
adc
jbe
cwtl
jns
imull
push
jo
add
pop
ret
push
push
stc
mov
xor
add
and
movsl
or
xchg
out
lcall
stos
fsubl
pop
adc
cli
daa
push
testl
lods
jns
cli
sub
dec
and
jo
mull
filds
pop
sub
sarl
inc
enter
fcomps
and
es
mov
cmp
mov
adc
lea
lret
cltd
add
xor
fwait
daa
sysenter
mov
add
lods
and
int
sub
inc
jmp
and
repz
sub
mov
stos
bound
adc
shrb
imul
andb
push
push
insl
pop
rcr
inc
mov
ds
test
push
or
and
pop
test
rcrb
fs
insb
sub
or
jne
dec
or
pop
testb
and
hlt
jmp
mov
and
mov
mov
pop
sti
sub
push
hlt
ds
jl
jne
xchg
fwait
push
dec
mov
pop
rcl
add
sub
fwait
pop
xlat
imul
movsl
pop
nop
mov
add
jl
or
icebp
mov
sbb
pusha
pop
sbbb
and
loope
outsb
mov
loope
pusha
das
test
or
or
jne
mov
or
jmp
and
and
xor
mov
cmpsb
sub
cmp
fwait
bound
cmp
dec
push
pop
pop
outsl
xchg
inc
nop
mov
cmp
jmp
and
jl
in
or
add
adc
pop
sub
xor
or
dec
notl
adc
jo
dec
pop
or
call
add
add
pop
dec
mov
jle
push
sbb
movsb
add
pop
push
or
cmpsl
xor
cmp
pop
stc
cmc
mov
adc
es
jmp
call
dec
paddb
xchg
dec
pusha
mov
ja
cmp
push
xchg
mov
add
movsb
push
sub
rclb
jae
pop
daa
mov
int
and
push
mov
xchg
jp
fsubs
mov
nop
add
adc
xor
shlb
scas
mov
test
shll
or
rcr
popf
jbe
or
sbb
xchg
dec
mov
and
and
cmp
dec
cld
repz
and
movsb
lret
inc
sbb
pop
add
imul
inc
mov
clc
popf
movsb
sti
xor
std
sub
and
jne
jb
push
mov
mov
filds
arpl
pop
loop
lret
lcall
xlat
sub
dec
pushf
xor
enter
adc
addl
and
mov
je
adc
jle
xor
sub
cmpb
es
add
mov
fcoms
sbb
lock
das
mov
sub
sti
dec
and
out
add
out
adc
inc
inc
stc
and
and
add
lea
xorb
or
cmp
mov
mov
dec
or
jl
adc
cmpsb
dec
push
das
dec
sub
add
add
mov
icebp
mov
notb
test
addr16
dec
xchg
and
sub
inc
or
mov
cld
inc
sbb
jle
xchg
xor
xchg
jne
inc
or
nop
sbb
inc
mov
mull
pop
adc
inc
xchg
inc
push
cmp
adc
cmp
xchg
jecxz
cmc
lods
cwtl
jge
inc
lahf
mov
mov
and
adc
out
test
push
sbbb
pop
adc
call
mov
xchg
cmp
lret
es
adc
je
push
push
adc
cwtl
add
nop
movsb
mov
nop
inc
inc
rcll
popf
in
mov
lret
mov
call
aam
adc
and
sahf
add
inc
ds
mov
xor
mov
add
ljmp
sti
leave
mov
xchg
jbe
into
daa
std
inc
xchg
push
and
push
test
adc
or
dec
mov
sub
cli
in
mov
rorb
mov
movsb
call
mov
stc
sub
jb
stos
pop
inc
mov
inc
and
mov
std
scas
les
adc
xor
jge
gs
call
stos
das
mov
ja
jnp
bound
push
sahf
mov
lea
jmp
adc
les
cli
cltd
sti
inc
rorl
jmp
lret
lock
pushf
inc
inc
mov
in
mov
add
in
mov
push
or
adc
jno
add
loope
inc
add
cmp
jl
cld
inc
or
sub
dec
adc
xor
enter
push
mov
jmp
stos
push
push
loopne
add
mov
dec
cmp
dec
inc
femms
jg
in
ss
or
sub
or
jge
cld
fwait
mov
add
push
add
loope
pop
jmp
fstpt
xchg
push
jne
lock
addr16
out
imull
xchg
ja
lods
fcoml
imul
adc
jl
or
jle
sbb
js
sbb
int3
data16
pop
xor
mov
inc
aam
add
or
lods
mov
pushf
or
jle
sbbl
rcrb
nop
xchg
jmp
sbb
pop
insl
inc
dec
push
imul
cmp
adc
add
pop
inc
add
add
and
xlat
inc
inc
jo
cld
add
ret
frstor
jmp
jae
xchg
ja
and
sti
ret
pop
sub
movsb
pop
push
pop
add
sub
or
dec
push
aas
adc
or
imul
aad
pop
sub
cmpsb
push
cmp
sbb
ja
mov
sarb
or
out
les
scas
fsts
or
clc
push
cmpsb
sbb
and
nop
adc
sbb
insb
int3
daa
pusha
imul
dec
clc
daa
rorb
dec
jge
int3
inc
shrb
mov
cli
xchg
jecxz
pop
jno
sub
test
pop
scas
bound
sub
xchg
sub
sub
pop
xlat
in
or
nop
push
hlt
cmp
je
sbb
sahf
sub
pop
stos
and
xchg
shl
shr
pop
in
xor
xchg
or
fs
and
add
or
jbe
push
jg
mov
sbb
outsl
or
jl
stc
xchg
sub
and
mov
js
xchg
mov
ja
pop
dec
sub
stos
cmp
in
out
sub
dec
dec
cmp
xchg
flds
adc
xchg
sbb
dec
jns
sbb
jecxz
push
adc
aam
mov
xchg
adc
sbb
cmpsb
ret
sbb
xor
inc
adc
pusha
or
or
into
call
jmp
sbb
pop
imul
jae
data16
mov
add
pop
xor
push
mov
loope
es
pop
jmp
dec
xor
adc
dec
dec
push
add
dec
mov
incl
jnp
dec
push
jne
ficomps
cmp
lea
jno
ljmp
jle
loope
neg
das
dec
xor
into
jae
and
cmp
sub
add
imul
and
test
or
lock
fwait
adc
lret
shrb
jmp
cwtl
enter
add
shl
and
pop
jmp
or
aaa
mov
in
add
jmp
outsb
mov
jp
mov
es
cwtl
ja
dec
xchg
cmp
sbb
scas
fdivl
pop
dec
ret
jmp
or
pusha
add
and
adc
cld
cmp
mov
daa
inc
arpl
out
adc
lcall
ret
std
add
dec
and
push
cmp
add
lds
mov
insb
mov
nop
cmp
call
orl
ret
hlt
std
ret
jne
sub
adc
pop
mov
xchg
icebp
ljmp
and
cmp
jbe
add
int3
mov
sbb
sub
adc
jmp
stos
mov
dec
mov
jmp
mov
loopne
dec
pop
pop
in
das
fcomps
jns
cmp
ja
frstor
inc
sub
push
out
xchg
inc
or
or
mov
loopne
jg
ret
jge
cli
cmp
jle
push
pop
loopne
sbb
out
pop
cltd
or
jmp
mov
inc
test
mov
subb
mulb
sbb
add
lds
rclb
shll
scas
repz
call
adc
dec
push
and
jne
mov
sbb
and
xor
jmp
hlt
mov
dec
fisttpll
je
pop
adc
lret
xor
nop
pop
in
lea
lahf
add
add
dec
jp
les
mov
add
dec
sub
std
mov
jl
popf
int3
fscale
or
mov
inc
pop
test
movsb
sti
and
sub
adc
ja
fidivrs
xchg
xor
xchg
cs
fstpl
scas
push
jmp
call
cltd
adcl
mov
std
cmp
in
jb
rorb
jge
jns
clc
mov
daa
mov
inc
cmp
ljmp
cmp
push
pop
adc
ljmp
pop
aas
lods
jbe
inc
mov
jg
push
mov
shll
xor
adc
scas
and
leave
ds
imul
cld
mov
or
xchg
leave
jp
sbb
dec
xchg
or
add
pop
mov
ret
jmp
je
sbb
into
push
adc
or
push
orl
mov
xor
mov
scas
enter
imul
jno
cmpsb
es
xchg
fiaddl
sub
ret
inc
dec
fs
jns
xchg
pop
je
inc
push
sub
sbb
or
mov
mov
jne
mov
adc
cmp
hlt
push
cwtl
cmc
daa
call
int
sbb
das
push
adc
insl
ja
out
add
jns
xor
xor
mov
mov
jl
mov
and
cmp
jb
cld
stos
mov
dec
mov
sub
mov
pusha
add
ss
sub
les
or
dec
stos
lret
jns
data16
pop
jmp
lock
je
and
jl
push
jge
lods
xchg
xor
movsl
sbb
xor
mov
add
stos
dec
sbb
sub
fdivr
sub
adc
shlb
jl
dec
and
test
or
les
jne
loop
stc
add
add
ret
jl
fldl
mov
adc
test
or
and
lods
mov
rorl
sbb
or
jmp
push
sub
dec
xchg
cltd
push
pop
or
dec
subl
test
xchg
cmp
mov
mov
mov
gs
pop
enter
push
incb
dec
or
sbb
ret
mov
pop
shlb
les
xlat
scas
adc
dec
jp
cli
push
sar
mov
test
test
jge
cli
xchg
adc
jnp
mov
daa
push
jno
addb
mov
aad
pop
push
dec
add
inc
cmp
inc
arpl
add
and
je
mov
pop
sub
adc
in
mov
jo
imul
ja
push
popf
ret
stos
adc
jne
sub
out
mov
dec
ret
or
je
or
jne
adc
push
lds
imul
lods
scas
test
mov
mov
sub
or
or
ss
mov
and
inc
je
scas
inc
ljmp
inc
sbbl
lock
jg
into
jbe
pop
xchg
ljmp
mov
xchg
je
enter
aam
inc
hlt
scas
jno
adc
push
jb
das
sbb
pop
pop
mov
sbbl
adc
mov
dec
or
xchg
add
mov
dec
ret
stc
mov
test
push
dec
sti
and
stos
repnz
dec
call
inc
hlt
push
push
lods
lahf
xchg
jbe
fcom
adc
ret
mov
daa
movsl
shlb
clc
scas
jp
mov
push
pusha
dec
mov
sub
mov
jae
out
mov
push
mov
dec
stos
xchg
pop
lds
or
hlt
adc
dec
call
inc
sub
sbb
fnstsw
outsl
int
push
cmpsl
xor
mov
jg
je
mov
lcall
add
push
pop
aas
dec
mov
shr
jbe
adc
mov
daa
xlat
test
cmp
jne
cmpl
jmp
stos
sbb
scas
jnp
or
mov
add
test
xchg
push
or
adc
add
jb
pop
scas
xchg
test
bound
mov
rclb
loopne
jl
insl
pop
mov
jbe
std
jp
sub
xchg
dec
mov
push
test
testl
movsb
push
cvtps2pd
sbb
repnz
sub
and
adc
daa
call
xor
lahf
hlt
mov
mov
ja
fists
or
fwait
xchg
adc
repnz
sti
fsts
repnz
adc
jb
outsb
dec
adc
push
arpl
xchg
adc
jmp
mov
dec
xor
push
jge
xlat
sub
cmp
test
out
insl
cmp
out
gs
cmpsl
mov
jmp
jb
push
jne
lods
cmpsl
pop
and
call
mov
dec
pop
mov
push
xchg
or
xchg
shll
push
dec
xchg
push
and
or
or
push
xchg
fisttpl
xchg
call
mov
push
push
test
xchg
clc
jnp
adc
jecxz
cmp
mov
ret
pushf
dec
mov
insl
inc
push
xor
mov
fstps
adc
aad
idiv
xchg
call
stos
dec
mov
ds
mov
imul
dec
push
xor
movsl
and
decl
xchg
scas
fcompl
faddl
sub
lods
cs
movsl
mov
push
insl
aam
sub
and
adc
cli
xchg
dec
and
insl
hlt
sub
xchg
jb
sbb
imul
and
inc
aaa
orb
xor
test
mov
les
xor
mov
scas
lcall
push
cwtl
pop
out
mov
or
cld
mov
mov
mov
sbb
pop
or
mov
sub
pop
jl
js
shll
jb
cmp
sub
nop
test
add
mov
decl
fcomps
push
mov
fadds
xchg
xor
adc
sub
lea
mov
or
cmpb
imul
or
int
sahf
cmpsl
out
test
sub
or
cmc
mov
jl
or
fsubrs
dec
xor
cmp
adc
xchg
xor
lock
cmp
cld
repz
push
lea
sbb
pop
mov
push
orb
mov
shl
call
mov
mov
mov
adc
sti
adc
mov
call
andb
int3
jle
xor
jae
xchg
pop
mov
movsl
pop
mov
mov
shr
ljmp
aaa
adc
mov
mov
cli
xor
adc
sub
jmp
push
or
sub
rorb
jg
push
mov
out
xor
pop
push
adc
jmp
push
ljmp
sub
pushf
jg
pop
dec
scas
add
fcom
inc
das
sti
push
mov
adc
jbe
sti
out
fisubl
aad
sbb
pop
mov
dec
cld
cwtl
lahf
mov
lret
push
mov
lods
mov
mov
push
popa
pop
mov
xchg
jbe
ret
fbstp
pop
push
cmp
sub
cmpsl
inc
sub
aad
xor
cmp
rcrl
sub
jl
xlat
xchg
testb
xor
dec
mov
mov
mov
cwtl
mov
ret
mov
and
xchg
fildl
mov
sub
push
cmp
jbe
push
les
push
push
mov
sub
decb
or
stos
lock
add
jo
mov
xlat
push
test
mov
sbb
inc
clc
mov
call
add
pop
sub
pop
adc
add
clc
jb
inc
mov
gs
xchg
fisttpl
pusha
or
enter
mov
into
push
mov
cmpl
sub
enter
mov
sbb
mov
in
and
stc
test
into
or
mov
xor
jns
dec
add
dec
sub
jno
mov
in
ficoml
mov
sub
dec
addl
add
scas
inc
pop
cmp
or
hlt
cli
sahf
sbb
jg
sbb
jne
push
addr16
filds
or
dec
or
call
add
lahf
leave
pop
fildl
fsub
xor
adc
clc
cltd
jo
bound
adc
fistpll
nop
into
pop
push
out
jb
lahf
das
fisttpll
xchg
xor
xchg
rol
daa
cmp
jmp
mov
imul
push
les
mov
mov
jmp
loop
sub
sbb
test
mov
fmull
imul
in
xchg
sti
mov
rclb
f2xm1
aas
mov
and
call
test
lds
dec
push
mov
in
add
add
cmpsb
mov
or
clc
popf
jp
dec
lret
mov
xchg
pusha
mov
test
sbb
xor
xchg
sub
mov
mov
out
in
mov
jecxz
dec
test
je
enter
pop
mov
out
or
inc
js
pop
sbb
int3
inc
enter
inc
daa
inc
in
repnz
fildl
notb
ja
andb
mov
xchg
scas
or
inc
jmp
jg
test
fxch
test
adc
push
pop
dec
add
imul
push
fidivrs
sti
cmp
pop
push
pop
push
add
call
movsl
sub
xchg
sub
xchg
xchg
sbb
ljmp
mov
test
sub
or
inc
out
add
sbb
sub
nop
push
sbb
notb
sbb
push
dec
lret
and
mov
les
inc
sub
icebp
dec
scas
pop
aas
movsb
leave
dec
mov
add
mov
fiaddl
loopne
das
mov
jl
aam
jnp
orl
in
push
in
mov
lods
inc
imul
dec
inc
mov
insl
cmpsl
aad
mov
add
testb
lret
das
or
ja
push
push
data16
cld
call
in
pop
mov
imul
cwtl
pop
sbbw
fwait
jge
mov
scas
aad
inc
sahf
fwait
pop
push
adc
dec
ljmp
pushf
call
fmull
call
or
and
aas
sub
inc
add
cmc
clc
cltd
cmp
inc
dec
lock
pop
cld
and
xorl
hlt
fstpt
xor
sahf
xchg
mov
or
testl
jl
xchg
mov
mov
incl
xor
rcl
pop
jmp
call
ret
push
mov
jnp
mov
pop
inc
mov
fsubrl
adc
popa
ja
xchg
and
ret
push
cltd
std
jmp
test
jbe
popf
ljmp
mov
xor
loop
imul
sub
jmp
push
sub
leave
cmpsb
ficoml
fldenv
loopne
shlb
add
push
fsubs
into
cmp
lcall
mov
or
ret
sub
cmc
cmp
je
adc
stos
pop
xor
test
sbb
fdivs
cmp
add
shrl
out
arpl
jmp
pop
or
push
jne
push
jl
cmp
cmp
test
xchg
call
mov
ficoml
pop
jmp
pop
and
sbb
add
mov
sub
call
push
push
les
cmpsb
mov
dec
pop
dec
mov
sbbb
fcoml
jmp
jb
xchg
outsb
adc
into
push
jno
inc
jp
mov
xchg
iret
leave
rcll
rcrl
call
jge
loopne
mov
lcall
jg
pop
add
push
lea
xchg
xor
scas
push
sub
scas
add
cld
cli
fs
out
lret
cmpsl
scas
cmpb
xlat
xor
xor
jne
lret
add
rcrl
leave
sub
add
rcrl
mov
fwait
movsl
and
lods
and
add
jno
mov
stc
jo
sbb
inc
or
aad
push
xchg
sub
mov
dec
or
lea
dec
not
mov
mov
in
inc
add
jmp
add
jnp
mov
inc
mov
add
xchg
cs
sub
xchg
outsb
shlb
hlt
mov
shr
xchg
lahf
jns
or
lret
cmp
sub
pusha
jg
pop
mov
dec
sarb
subb
leave
test
lds
push
ljmp
sub
adc
ret
imul
pop
pop
push
cld
inc
daa
ret
or
cmp
shr
xor
test
inc
sub
adc
clc
adc
test
fadd
mov
mov
cmp
lret
out
aaa
inc
std
xor
mov
pop
dec
cld
pushf
pop
xor
inc
cmpsb
sbb
jbe
xchg
push
mov
xchg
pop
mov
fs
bound
inc
adc
mov
cmc
sbb
dec
mull
pop
jae
pop
insl
mov
dec
pushf
sub
mov
clc
jmp
and
jne
pop
insl
movsb
scas
jmp
or
add
xchg
in
jmp
mov
adc
push
xor
clc
std
cmpsb
or
jge
test
inc
push
lret
inc
cld
or
sbb
adc
mov
or
xor
dec
into
out
pop
sub
xchg
jp
loope
sub
cmp
mov
xorl
dec
addl
mov
fmuls
xorps
sub
cmpl
add
pop
push
inc
leave
pop
sub
aam
test
cld
dec
subl
adc
or
mov
repz
mov
ja
xchg
cmp
iret
std
xor
mov
push
adc
adc
xlat
or
lret
stos
adc
call
mov
xchg
inc
repz
sbb
and
fs
pop
ds
sub
jns
imul
xlat
fimull
call
mov
call
ret
inc
hlt
xchg
sub
fisubs
push
or
sub
push
add
adc
mov
add
mov
adc
les
inc
or
cmp
cmp
inc
inc
jo
inc
add
jb
int
sbb
mov
and
mov
je
adc
or
add
cmp
cltd
xchg
pop
jmp
sbb
or
das
mov
or
lea
pop
ret
inc
sub
inc
lret
cmc
add
movsl
inc
testb
cmp
icebp
dec
popf
push
lods
je
jle
call
sbb
ret
arpl
fnstsw
push
adc
sbb
mov
ljmp
scas
mov
dec
stos
and
call
lods
cmpsl
xchg
jl
imul
jg
call
movsl
cmp
add
outsb
insb
mov
movsl
push
xor
data16
stos
mov
ficoms
in
fcompl
jmp
ja
out
inc
rolb
mov
dec
add
aaa
cmp
test
repnz
adc
testb
sub
sahf
or
jne
push
cltd
shll
sub
popa
jne
nop
mov
or
push
jne
repnz
fidivrs
fidivrs
pop
push
es
jns
pop
mov
ja
or
mov
add
or
push
dec
adc
mulb
ljmp
out
aaa
mov
test
and
int3
or
les
lret
mov
push
push
mov
ret
mov
xor
movsl
dec
jae
xor
jmp
ss
sti
and
pop
jb
jle
sub
ret
or
sub
mov
sbbl
or
orb
adc
fisttps
push
mov
andb
or
je
into
stc
or
jb
lock
int
sbb
mov
mov
loop
aam
outsl
or
fnstcw
mov
fwait
dec
les
out
sub
and
sbb
and
mov
fs
dec
andl
sub
sbb
lret
jne
sbb
xchg
add
icebp
repnz
sar
sub
dec
ljmp
xchg
test
hlt
aad
push
cmp
insb
leave
xor
sub
stos
push
stc
or
lock
mov
or
inc
orb
and
mov
test
aaa
repz
xchg
into
adcb
sub
jbe
adc
orb
jbe
and
mov
fs
and
pop
push
cmp
mov
dec
mov
scas
incb
mov
lea
add
mov
dec
in
sbb
roll
cs
lret
mov
pop
xchg
mov
pop
repz
sub
test
adc
inc
jae
dec
jne
jae
mov
out
bound
adc
mov
add
xchg
xor
repnz
sbb
icebp
and
cmpsb
cmp
hlt
pop
mov
pop
mov
sbb
dec
pop
in
xor
mov
dec
cmp
mov
test
shll
sub
sub
pop
sbb
lods
mov
jge
dec
mov
inc
inc
lcall
or
dec
repnz
pop
test
shrl
sbb
or
push
ror
push
cld
jge,pt
inc
int
inc
divb
pushl
fmul
loop
dec
pop
jecxz
test
lea
jo
pop
mov
hlt
pop
pop
jmp
adc
adc
or
inc
xchg
or
push
std
cwtl
loope
jnp
sbb
lcall
orl
les
nop
lods
dec
add
add
cld
int3
mov
ds
or
or
sbb
adc
jbe
adcb
clc
arpl
shl
jbe
fs
ficompl
xchg
add
das
sub
dec
pop
repnz
sub
inc
mov
clc
xchg
jmp
aad
dec
enter
rorl
sub
aam
push
jle
add
shl
mov
aad
and
in
push
stos
push
popf
mov
je
cmp
cltd
cmp
in
ret
fildll
add
inc
mov
xchg
inc
cld
xchg
movsb
ja
adc
jne
mov
cli
inc
push
shl
dec
sbb
inc
popf
rol
push
test
in
nop
sub
and
test
xor
cmpsl
stos
sbb
inc
pop
sti
add
jle
adc
and
mov
and
or
push
push
call
inc
repnz
push
push
xor
jmp
or
or
dec
cmp
push
movsl
mov
icebp
xor
lret
dec
cmp
cmp
loope
mov
popa
jae
aam
xor
push
iret
mov
mov
and
cmc
scas
lock
jnp
xor
mov
adc
pop
or
je
subl
ret
and
outsl
add
in
cltd
scas
mov
sbb
leave
sub
sub
rolb
dec
add
lret
lods
dec
xor
popa
ljmp
pop
push
pop
leave
and
push
stos
dec
sbb
xor
and
adc
fnstenv
mov
filds
sub
sti
loop
shr
xchg
clc
xor
mov
jne
cmp
or
dec
out
ljmp
movl
in
mov
and
stos
addr16
pop
add
ret
mov
and
add
xchg
xchg
add
out
cmp
roll
loope
push
sbb
cmpl
lret
push
ljmp
inc
nop
call
or
mov
inc
add
dec
sbb
push
loopne
in
das
scas
jae
push
dec
jno
dec
lods
movsl
jne
jle
adc
cmp
adc
inc
movsb
and
repnz
fwait
andb
jbe
mov
test
mov
pop
scas
gs
inc
mov
push
ja
mov
je
xor
push
jno
das
cld
pop
cmpsb
sbb
add
or
mov
clc
mov
std
jb
jge
test
mov
fdivr
lds
jmp
scas
lds
pop
sub
jns
or
test
sbb
in
xor
daa
ds
ret
ror
jmp
pop
das
repnz
das
and
push
test
sti
int
xor
mov
enter
mov
inc
push
xchg
and
dec
sbb
or
xor
fldcw
enter
movsb
cmp
xchg
out
test
xchg
xchg
aaa
scas
and
pop
cltd
bound
sub
mov
repnz
xor
xchg
shll
mov
mov
sub
pusha
mov
ret
call
repnz
nop
pusha
and
or
nop
jl
in
or
or
lds
or
mov
or
test
test
and
les
xor
jae
push
testl
lea
jl
push
add
sti
and
shl
js
test
stc
pop
push
jb
jl
aas
cwtl
lds
pop
je
add
xlat
push
sahf
sbb
adc
jp
mov
adcl
ja
or
mov
jmp
into
add
in
inc
mov
add
ficoml
repnz
adc
scas
push
mov
xchg
hlt
inc
jns
pop
shlb
ret
push
ljmp
mov
dec
sarl
inc
sub
mov
loopne
push
sub
jge
test
xchg
lods
data16
add
or
fidivl
xchg
xor
loop
sbb
push
push
push
jmp
add
jle
outsb
and
popf
shlb
roll
sub
pop
and
pop
adc
xchg
xor
insl
adc
test
inc
in
mov
repz
iret
add
pushl
out
daa
lret
fs
pop
out
adc
out
jg
mov
cs
xchg
nop
test
scas
cmp
or
lcall
mov
adc
fstpt
xor
jne
sub
sub
popf
iret
dec
inc
sbb
js
pop
scas
popa
or
cmp
test
mov
mov
sbb
mov
fistpll
scas
shrl
and
clc
in
xchg
dec
cmp
sbb
fcmovbe
sbb
jmp
insl
cmp
cmp
outsw
xlat
push
aam
cli
adc
push
dec
in
fcmovnbe
adc
dec
out
test
out
or
mov
jae
jle
pop
cmp
and
and
lret
sub
pop
xchg
add
and
mov
or
stos
mov
or
jg
addr16
and
sub
loop
sub
inc
mov
jmp
mov
fdivrl
dec
not
fs
enter
lcall
adc
pusha
lods
jnp
fsubrp
leave
pop
inc
adc
in
or
fcom
cmp
imul
adc
fisttpl
pop
adc
jbe
mov
cld
repz
mov
scas
int3
cli
mov
pop
cwtl
into
mov
add
cmp
in
push
in
inc
mov
popa
hlt
cmpb
les
add
sti
jl
pop
outsb
sbb
or
adc
jbe
in
test
or
arpl
adc
insb
jecxz
and
mov
dec
out
mov
negl
sbb
call
mov
jmp
scas
enter
mov
xchg
int3
xor
pop
scas
jl
ljmp
jge
push
lahf
out
ss
outsl
adc
push
or
enter
sub
dec
popf
push
inc
sbb
sbb
dec
mov
in
das
sub
and
push
aad
mov
adc
xchg
xchg
xchg
test
push
mov
lods
mov
in
dec
dec
push
push
call
daa
in
lahf
addr16
dec
cltd
jl
push
stc
in
in
je
jb
jb
test
add
push
arpl
dec
pop
cld
les
sti
push
push
adcb
loop
mov
push
mov
mov
fidivrl
pusha
push
mov
jns
or
lret
fcmovbe
push
sbb
call
push
xchg
add
outsl
repnz
jne
inc
push
cmp
mov
lds
push
mov
call
les
inc
jge
mov
mov
aam
mov
mov
dec
add
loope
sbb
mov
or
sbb
adc
in
addr16
push
adc
jg
and
jae
sub
mov
call
jb
sbb
or
push
out
pop
sub
inc
icebp
adc
mov
sbb
jne
fcoml
cltd
jle
sbb
js
adc
in
push
fs
push
frstor
adc
aaa
fsqrt
aas
pushf
lahf
xchg
or
fisttpll
jb
add
je
sub
sub
mov
dec
or
add
leave
int3
lock
push
fldenv
fadds
sbb
mov
loop
xor
into
es
adc
xchg
lods
daa
xor
lock
test
cmp
rcrb
aad
fwait
lods
cwtl
add
or
cmpl
enter
inc
push
sbb
decl
adc
sbb
jo
dec
jmp
sti
aad
bound
or
jle
in
or
lods
pop
aaa
imul
lods
push
sub
pop
and
outsl
and
leave
push
dec
and
add
mov
in
xlat
int
daa
in
push
xor
and
cmp
movsb
mov
sahf
and
sub
std
ret
dec
loope
das
or
orb
cs
jl
call
mov
xlat
hlt
rcl
aaa
and
or
int3
adc
shrl
popa
das
fildll
or
mov
leave
ret
call
jmp
xor
jns
enter
das
repnz
mov
in
hlt
stos
movsl
mov
mull
fadds
nop
xlat
or
div
sahf
xlat
push
or
cmc
cmc
inc
inc
mov
add
and
ret
pushl
push
nop
cmp
pop
enter
repz
and
and
xlat
inc
sub
fwait
xor
es
mov
push
orb
dec
mov
add
or
cmp
test
jne
je
mov
rcrb
push
or
rol
dec
xlat
dec
mov
dec
push
insb
pushl
push
sbb
pop
adc
push
aad
pop
fstl
push
scas
pop
aaa
inc
pop
push
push
jmp
mov
fsubrl
adcb
daa
ja
lcall
test
jbe
adc
sub
cmp
je
mov
cmpsl
fnstenv
mov
xchg
cmpsl
sbb
call
sti
inc
imul
mov
xor
inc
xchg
cwtl
test
lds
add
pushf
sub
add
aaa
or
jo
iret
dec
repz
adcb
loop
test
mov
sub
sbb
pop
hlt
insl
inc
or
inc
clc
pcmpeqw
lcall
push
push
jns
sbb
sub
mov
push
pusha
mov
in
jmp
pusha
dec
push
inc
mov
cmp
pop
mov
test
and
push
rorb
and
jmp
push
pushf
and
push
and
add
push
call
mov
adc
aam
dec
and
stc
insl
adc
adc
pop
and
push
fidivl
das
repnz
xchg
imul
cltd
xor
adc
xchg
dec
xchg
or
push
jecxz
cld
cli
inc
dec
or
pop
push
icebp
divb
jne
xchg
mov
fsubs
cmp
xor
dec
jne
mov
dec
push
call
sti
mov
and
add
and
inc
push
prefetch
add
jle
je
sbb
mov
imul
jb
xlat
xor
cmpsb
cmpsl
fldcw
adc
mov
xor
or
dec
jae
or
mov
lods
mov
push
sub
clc
inc
dec
lock
mov
mov
scas
shr
jmp
rcrb
test
in
cmp
daa
push
stc
fidivrs
movsw
sbb
push
mov
enter
repz
popf
jl
dec
stos
mov
cmpsl
dec
leave
dec
pop
jno
adc
add
adc
js
jge
jno
push
and
and
sarb
xor
movsl
popf
and
and
sbb
popa
cmp
mov
js
push
out
mov
iret
sub
mov
xchg
hlt
test
inc
cmp
inc
xor
iret
int3
or
or
add
rcrb
das
xchg
call
push
inc
sub
mov
adc
dec
in
enter
cld
dec
in
nop
adc
jo
movsb
das
inc
cmp
mov
pop
cmc
int
sub
adc
push
sub
adc
ja
jge
lahf
xchg
jmp
adc
daa
mov
and
mov
loopne
inc
lock
fwait
sub
push
movsb
imul
dec
sahf
dec
adc
mov
or
or
cld
push
jl
fs
xor
cwtl
sub
cmpsb
adc
and
leave
cwtl
lods
es
add
roll
stos
xor
shld
nop
and
loopne
aad
scas
or
push
mov
jb
adc
adc
mov
push
test
jmp
ret
cmp
xor
pusha
lcall
popa
adc
xor
cltd
pop
and
xor
push
int3
cmp
and
mov
loope
test
movsb
xchg
jmp
xchg
test
sbb
jns
mov
dec
sbbb
mov
in
mov
es
imul
cmp
add
xor
ds
stos
lods
ds
es
push
aam
jmp
es
and
xchg
and
jmp
into
or
repnz
and
xchg
push
mov
adc
pslld
ljmp
xor
inc
xor
dec
xor
inc
or
mov
jne
das
xor
cld
test
add
rcrl
int3
test
sti
or
push
in
arpl
mov
pop
jmp
pushl
inc
stc
call
push
cs
adcl
adc
pop
pop
lds
addb
sub
repnz
sbb
or
adc
and
les
imul
mov
lock
fstl
vrcpps
pop
cmp
xor
add
jno
and
push
and
lea
jae
or
xlat
mov
cmovo
mov
lret
loop
das
fidivs
dec
das
nop
xchg
sti
movsb
daa
imul
test
lcall
and
fldt
cmp
ja
pop
sub
push
dec
or
mov
je
fs
or
cmp
push
push
sub
arpl
in
pop
test
or
test
adc
inc
aaa
jo
jbe
and
push
xchg
and
sub
and
imul
inc
and
mov
inc
imul
push
das
lock
fcoms
sbb
jne
repnz
lea
mov
data16
aad
mov
out
shr
jae
dec
push
fs
stc
icebp
cltd
pop
push
add
je
das
cmpsb
ret
je
sub
mov
pop
sub
and
outsb
lret
adc
jl
or
dec
orb
lea
jo
sti
and
dec
mov
jle
push
movsb
mov
test
sbb
push
pop
aad
adc
inc
pop
sub
xchg
subl
cmp
shll
int
aas
pop
xchg
inc
inc
nop
add
mov
ftst
jl
mov
cmp
ret
sbb
jge
mov
push
movsb
out
enter
dec
into
pop
mov
and
and
xchg
jp
pop
lock
sub
adc
and
cli
pop
adc
cmc
push
dec
stos
adc
loopne
adc
adc
out
popa
push
xor
ljmp
ret
jmp
testb
cmpsb
cmp
add
lretw
insb
and
movswl
jmp
out
mov
pop
mov
gs
insb
fs
jbe
add
jmp
hlt
lods
jl
push
daa
call
fcomps
or
pop
in
lret
data16
jle
in
test
mov
mov
shll
jmp
mov
leave
lret
ret
icebp
daa
sbbl
sbb
test
adcl
xchg
inc
or
and
mov
test
cld
xor
mov
jg,pt
push
dec
mov
movsl
psadbw
mov
push
aad
imul
cltd
mov
inc
cmpsl
add
jmp
xchg
cmp
cmpb
sbb
dec
cmp
das
add
fs
pop
sub
pop
lock
sub
mov
je
jg
mov
movl
push
scas
xchg
push
stc
pop
out
pop
clc
stos
aam
pop
leave
pop
into
add
adc
add
pop
stos
push
cmp
sub
mov
sub
cmp
and
pop
in
cmp
jmp
push
incb
mov
inc
test
push
push
mov
stos
lds
sbb
imul
push
jo
call
xor
dec
pop
mov
mov
sub
adc
imul
call
dec
std
xor
sub
cmpsb
mov
sub
hlt
adc
jbe
lods
or
lea
divb
xlat
mov
add
lock
adc
js
and
or
xchg
es
aaa
pop
cwtl
imul
call
mov
sbb
je
fidivs
adc
lds
mov
push
in
push
popf
push
mov
pop
dec
xchg
lret
movsb
pop
pop
or
and
cmp
stc
push
dec
movsl
push
aam
scas
es
mov
sub
pop
loopne
jle
cmpb
and
push
cli
sti
repnz
push
pop
jecxz
stos
add
jp
adc
add
mov
ret
mov
jno
or
fwait
rorb
movsb
cltd
or
lret
adc
mov
jne
mov
and
hlt
cmp
testb
mov
fidivl
pop
movsb
popf
push
std
jo
sbb
movsl
scas
mov
or
je
fldcw
sbb
mov
jno
mov
push
pushf
insl
test
mov
lea
push
pop
inc
jno
js
jl
and
xor
fsub
or
mov
sbb
scas
sub
fidivl
or
pop
orb
and
sbb
adc
xchg
dec
adc
mov
jmp
mov
fcompl
cmp
mov
dec
pop
xchg
stos
test
cmp
and
mov
jmp
pop
jno
rcrb
jb
mov
jmp
inc
pop
hlt
push
push
sub
xchg
shr
jbe
out
cmp
mov
dec
pop
cli
dec
lcall
jmp
push
cli
mov
lahf
icebp
or
and
lock
sub
leave
pop
dec
inc
cmp
movsb
push
xor
stos
adc
dec
rol
push
popf
pop
fwait
out
push
push
cli
mov
ficoms
rcr
mov
imul
jmp
clc
rclb
sbb
rcrb
std
mov
push
inc
mov
nop
xchg
outsb
call
add
dec
insb
jecxz
test
push
cli
cmp
fdivr
sub
mov
or
mov
push
incb
or
lcall
dec
jno
aam
push
rcll
mov
les
imul
cwtl
mov
in
dec
daa
lret
data16
popf
ja
das
inc
mov
xchg
aam
inc
cmp
xchg
adc
dec
cld
mov
adc
sti
push
gs
out
repnz
mov
test
xchg
xchg
fdivrs
inc
push
bound
add
arpl
andl
test
clc
mov
fsubl
sahf
jmp
mov
cmp
or
popa
test
aad
xor
jmp
adc
std
stos
mov
dec
cmp
inc
dec
loop
adcl
mov
or
pushf
mov
jne
ss
shll
out
das
inc
mov
mov
inc
dec
push
sbb
repnz
and
rolb
cli
mov
fstl
popf
je
push
ret
call
cmp
psllw
mov
sarb
std
inc
cmp
push
dec
ja
jne
push
sbb
fs
call
mov
test
sarl
pop
mov
in
sub
adc
and
in
inc
enter
inc
cmp
imul
jae
mov
xor
and
ljmp
cmp
cmp
inc
cmpsb
adc
js
fsubl
sub
mov
inc
pop
jmp
jb
aas
and
out
or
nop
inc
stc
addb
imul
inc
mov
cmp
outsl
jmp
sub
test
mov
scas
sub
add
int
adc
push
push
add
fstpt
sbb
xor
pop
push
jb
sbb
mov
mov
in
lahf
or
sub
adc
sbb
push
loopne
inc
js
push
or
sbb
cmc
adc
adc
cwtl
arpl
jne
mov
sub
pop
add
adc
pop
mov
movb
push
out
sub
xor
lods
repnz
xchg
push
cmpsl
pop
pop
dec
fisttpll
mov
mov
lret
add
mov
pop
js
xor
inc
push
inc
xchg
push
daa
xor
jmp
sbb
ret
inc
adc
or
mov
inc
mov
leave
fsub
and
rcrl
ja
add
icebp
leave
rolb
xor
clc
enter
jmp
push
mov
mov
push
movsb
fisubl
adc
call
or
clc
sbb
jb
movsl
daa
cwtl
je
sub
jae
add
stos
subb
xor
sbb
rolb
or
in
aad
adc
cmpb
jbe
sti
inc
lret
adc
mov
fcomps
jne
push
mov
pushf
cli
lea
cs
add
das
addr16
mov
sub
ret
sti
xor
dec
xor
jae
fldenv
xchg
jae
popf
sbb
lret
sub
sbbb
out
or
cmp
push
cmp
cmp
mov
hlt
adc
pop
mov
call
ja
mov
mov
adc
push
loop
test
and
daa
xor
in
xchg
push
mov
jne
pop
mov
in
cmp
ret
mov
jge
lds
push
adc
pop
gs
pop
jle
dec
sub
add
je
mov
je
adc
push
jecxz
jne
incb
xchg
shrl
sbb
and
mov
add
sub
das
mov
out
movsl
jmp
and
cmp
in
jb
sbb
psubsw
mov
shll
pop
test
jmp
jmp
lea
cmpsb
es
pop
into
cmp
dec
movsb
adcb
fdivl
cltd
push
jno
pop
xchg
jmp
lret
lret
dec
inc
mov
or
jle
movsb
sbb
dec
ret
inc
xor
sub
sbb
jno
add
and
xor
or
mov
add
cmp
sub
les
daa
clc
push
addr16
fistps
jmp
idivl
jmp
dec
mov
js
jno
rorl
mov
iret
aad
dec
repnz
jno
int3
outsb
inc
icebp
inc
xor
dec
or
ficoms
mov
dec
call
inc
push
add
test
adc
leave
divl
push
mov
call
push
lahf
andl
jns
dec
lods
xor
push
push
dec
gs
cli
idivb
dec
call
les
mov
aas
or
or
test
mov
jg
or
mov
enter
or
scas
mov
jmp
sub
push
mov
mov
pop
fs
cmp
fcompl
les
lea
add
in
dec
popf
mov
and
inc
les
ror
stos
xchg
dec
mov
jle
mov
xchg
inc
dec
stos
shlb
mov
lock
aam
inc
mov
xchg
xchg
test
adc
adc
lds
mov
clc
xchg
push
enter
sbbb
mov
push
sbb
xlat
shrl
jmp
jo
mov
dec
jne
ljmp
cmp
loope
fmuls
shl
mov
inc
vgetexpss
repnz
fdivrl
adc
jnp
enter
sbb
cmp
cwtl
dec
dec
cmp
call
lea
cmp
mov
adc
xchg
mov
pop
stos
data16
imul
mov
and
jmp
hlt
xchg
stos
aaa
lcall
stos
sbb
pop
cmc
mov
mov
cltd
add
cmpsb
cs
pop
adc
and
dec
ljmp
mov
stc
cwtl
js
jb
xchg
fs
mov
setne
ja
jnp
js
pop
in
and
push
repnz
push
call
repz
cmp
les
dec
xchg
mov
and
xchg
pop
xchg
in
sbb
push
stos
pxor
icebp
jmp
push
call
daa
sbb
or
cmp
data16
push
fstpt
sbb
loop
shll
xchg
xorb
aad
stos
dec
dec
sub
fdiv
mov
aas
mov
adc
xor
insb
push
sub
and
dec
sbb
adc
test
inc
imul
xor
fucom
imul
imul
nop
sub
push
imulb
mov
mov
mov
fbstp
adc
cs
push
aas
mov
pop
aad
adc
in
push
call
leave
loope
jno
in
mov
push
lea
jo
push
outsb
and
insl
insl
sub
sub
shl
insl
cmp
dec
and
stc
cmp
cwtl
push
pushf
repz
mov
and
adc
lret
and
or
push
push
hlt
sub
push
pop
sub
push
and
and
popf
push
and
or
mov
les
xchg
and
sbb
stc
push
scas
leave
lea
cmp
and
std
repz
fnstcw
mov
cmpl
je
push
cmp
out
jo
mov
int
mov
cmp
stos
adc
adc
cwtl
cmpl
dec
adc
es
adc
push
push
nop
and
mov
sbb
pop
mov
mov
cmp
fldcw
sbb
jecxz
mov
jnp
bound
push
hlt
pushl
adc
repz
aas
pusha
movsb
jo
hlt
lahf
pop
lods
movsb
insl
xchg
jns
xor
scas
hlt
lods
push
jo
je
test
std
test
push
es
mov
dec
sub
ret
shll
std
push
and
test
jl
negl
popf
and
lahf
loope
sub
xchg
add
pop
std
jnp
movsl
jne
cs
add
pop
cmp
wrmsr
test
aas
cmp
xchg
out
xor
mov
jne
xchg
push
and
mov
in
fldenv
or
jno
add
stos
add
mov
jb
sub
mov
pusha
mov
add
in
jg
xor
xor
lcall
adc
es
sub
andl
push
push
adc
or
clc
xor
adc
and
and
test
outsb
inc
scas
jmp
nop
mov
dec
aaa
or
inc
sub
cmp
or
mov
repz
push
call
xchg
or
daa
mov
mov
inc
hlt
dec
inc
jns
cmc
dec
xlat
jmp
stos
jnp
sbb
daa
push
or
je
mov
insl
faddl
and
rcll
cld
pop
sub
mov
inc
push
and
ss
stos
fisubrs
inc
outsl
cs
icebp
inc
and
mov
std
arpl
mov
dec
mov
xor
or
sub
divb
fldt
mov
stos
negb
pop
dec
xor
xor
jmp
jnp
pusha
jg
pop
es
adc
cmpsb
jge
pop
and
rorb
rorb
jle
jmp
jle
inc
push
cmc
repz
mov
xor
cmc
mov
pop
lcall
adc
xlat
sarb
shrl
mov
cmp
jmp
xchg
inc
mov
sbb
mov
fwait
sbb
iret
aaa
push
jbe
aam
jmp
jecxz
insb
mov
push
call
xchg
xor
cmp
std
add
push
pop
ret
out
and
jo
pop
or
inc
mov
idivl
cmpsb
sbb
cmp
add
cmp
mov
sbb
jo
sub
movsb
sub
inc
inc
add
int3
adc
fdivrs
sub
idivl
mov
xor
dec
jmp
call
mov
lock
mov
movsl
lock
pop
xchg
fisubs
xor
loop
or
ret
or
add
scas
dec
cmp
nop
adc
fsubrp
adc
pop
mov
enter
mov
aam
aad
mov
or
push
aad
test
or
dec
adc
int3
jmp
imul
add
cmp
test
pop
dec
fdivr
roll
loope
daa
inc
jbe
nop
add
cmp
lret
leave
xor
stos
or
sub
cmp
pop
push
mov
test
je
mov
orb
or
adcl
inc
movsb
addr16
xlat
jge
inc
pop
pop
js
ds
push
pop
ficoms
adc
inc
and
jmp
movsl
jno
lds
and
bound
popf
dec
lcall
pop
and
push
lods
imul
ret
mov
xchg
mov
movzwl
and
cli
pop
add
inc
lds
movsl
pop
xlat
mov
es
pop
add
push
push
dec
adc
xor
sub
rcll
adc
fsts
enter
add
mov
xor
mov
rcrl
sbb
fbld
nop
add
rolb
les
push
pop
or
mov
inc
hlt
in
repnz
inc
movb
gs
mov
stos
repnz
mov
and
ret
test
dec
ljmp
add
cmp
je
leave
mov
loopne
inc
add
push
push
dec
push
add
xor
jnp
cltd
mov
pop
movsb
dec
sub
mov
scas
mov
imul
and
or
test
sysret
ret
xchg
ret
dec
add
iret
in
mov
jecxz
aad
mov
cmc
das
fs
push
push
cwtl
fiadds
lds
and
inc
inc
xor
sub
mov
dec
popa
mov
aad
xchg
pop
fstps
aad
fidivrs
mov
pop
xchg
push
outsb
sbb
sbb
call
inc
cld
mov
hlt
adc
pop
clc
and
dec
cmpsb
insl
inc
pop
stos
xor
rolb
test
test
and
xor
xchg
cmp
xchg
rcrw
adc
cld
enter
hlt
pop
mov
test
pop
lret
xlat
pop
mov
mov
jo
cmc
cmp
lds
inc
insl
inc
mov
and
mov
addr16
push
inc
loopne
dec
jl
pop
ds
cs
cmp
pop
in
pop
xchg
mov
jo
mov
cs
add
stos
sub
or
dec
xchg
xor
xor
or
xchg
mov
nop
pushf
clc
cld
cmp
pushl
dec
into
and
fs
lret
and
cmp
mov
xor
push
call
mov
mov
inc
mov
dec
pop
xor
push
sub
into
mov
xor
mov
xchg
out
lock
mov
daa
cmpsb
mov
mov
fdivrs
jae
ret
outsb
lea
fs
and
stos
lea
adc
ljmp
pop
or
pop
ljmp
inc
cvtpi2ps
lcall
jns
clc
nop
adc
xchg
mov
lods
xchg
xchg
aam
jb
pushf
sub
ret
adc
pop
imul
std
call
pop
mov
mov
cmp
dec
in
orl
sbb
in
cmp
cmc
mov
popf
lret
cwtl
mov
jg
mov
ljmp
leave
push
add
add
dec
and
push
lret
and
scas
dec
cmp
sub
adc
je
cmp
mov
sbb
bound
and
or
je
sbb
mov
sub
or
je
or
pop
fildl
bound
sbb
dec
and
rcll
movsbl
push
dec
adc
jle
stos
cmp
loop
pop
mov
jnp
push
push
sbb
inc
push
or
lea
mov
js
xor
dec
mov
pop
add
stos
cmpsb
or
or
and
sub
jne
sub
adc
or
adc
push
jns
dec
mov
xchg
out
xlat
cmpsb
push
stc
push
iret
clc
pop
movsb
stos
jne
inc
fildl
je
push
jnp
push
call
shr
in
cwtl
xchg
adc
lahf
pop
stc
movsl
rol
mov
or
mov
lods
push
push
aas
test
fdivs
push
mov
xor
popf
mov
mov
test
fcoml
cwtl
inc
into
inc
jo
repnz
lret
adc
jle
push
pop
insb
or
pop
xchg
xor
and
push
jno
mov
lret
inc
adc
mul
cmpsl
push
and
iret
mov
mov
stos
and
cmp
or
and
pusha
and
add
popw
xor
cmp
pop
js
xchg
pop
lcall
movsb
push
sahf
push
adc
or
lahf
sbb
jecxz
test
jmp
fldcw
sbb
sub
ret
jbe
and
clc
and
dec
or
pop
xor
daa
or
and
inc
xor
pop
inc
ja
mov
das
push
or
jmp
fld
xor
sub
sub
jne
cmp
push
mov
lret
or
add
mov
cmpb
and
test
add
mov
and
repz
pop
push
and
pop
mov
and
and
pusha
xchg
add
and
xor
les
add
xor
add
dec
data16
in
push
lret
aas
pusha
adc
mov
jg
fists
dec
pop
adc
mov
rcrb
and
jp
fldl
hlt
nop
sbb
push
push
push
cwtl
cmc
xchg
xchg
adc
mov
pop
xchg
frstor
sub
cmc
xchg
stc
pop
repz
pop
pop
dec
jae
shrb
sbb
jne
rorl
in
int
or
and
mov
pop
dec
repz
sbb
leave
cmp
testl
scas
movsb
mov
pop
pop
lods
xor
push
mov
in
popa
push
jmp
and
or
ret
mov
push
call
inc
call
ret
pop
rorl
stos
repnz
push
lock
stc
lahf
or
pop
push
jle
push
in
popf
iret
jnp
lahf
dec
dec
imul
negb
popf
xor
out
je
nop
xchg
inc
dec
aad
mov
pop
sti
shrb
jg
test
jmp
sub
ret
into
pop
inc
xchg
push
adcl
or
repnz
pop
push
add
add
mov
ja
fcoms
test
jb
in
scas
ret
nop
pop
stos
dec
stos
xchg
adc
fs
pop
mov
scas
adcl
pop
ljmp
inc
or
shlb
xchg
es
sar
or
pop
cmpsb
jb
rclb
and
jmp
xchg
fidivs
sub
pop
sbb
mov
lret
mov
int3
or
fildl
aaa
sub
pop
mov
fnstcw
pop
pop
fadds
pop
pop
fldcw
arpl
jp
icebp
bound
loope
bnd
and
movsb
inc
movsb
bound
xchg
pop
push
dec
push
sbb
in
inc
aas
jle
adc
insl
mov
jmp
ja
push
mov
sub
test
push
cmpsb
adc
inc
fsubs
jne
and
push
or
cmp
and
test
jb
adc
push
jae
and
stos
add
pop
jmp
mov
es
xchg
mov
cmc
out
push
xchg
mov
ret
and
stos
push
push
xor
push
sub
lret
jecxz
push
stc
adc
call
ljmp
jmp
inc
popf
ljmp
or
imul
outsb
mov
sbb
push
pop
sub
push
push
cmp
mov
test
in
andl
aam
add
dec
and
xchg
add
outsl
lods
lea
jmp
stos
dec
jno
push
push
push
xor
mov
shlb
rorb
loop
pop
dec
xchg
push
add
jo
add
mov
jne
orl
sub
add
jge
mov
out
push
outsb
or
enter
mov
notb
mov
bound
xor
push
and
test
fimull
mov
outsl
mov
aam
add
mov
cmp
jne
lahf
insb
outsl
aas
mov
dec
leave
sti
mov
or
jecxz
xor
jmp
push
fstl
ljmp
mov
movsb
fidivs
mov
movsl
pop
mov
call
mov
push
das
enter
inc
xor
loopne
hlt
pop
sub
sub
xchg
jg
mov
std
sub
xor
xor
add
sub
rcrl
cmp
jae
sbb
add
je
rclb
dec
call
jmp
cmp
jbe
xchg
sub
or
call
mov
in
inc
movsl
inc
jb
add
fimuls
jl
repnz
jp
push
fcomip
roll
jnp
mov
mov
push
push
mov
jnp
in
pop
frstor
cld
mov
jae
mov
mov
mov
lea
jge
rep
pop
or
sub
imul
inc
pop
and
pop
cwtl
scas
and
enter
sbb
nop
adc
in
mov
lods
adc
clc
cwtl
pop
popa
test
or
pop
leave
cmp
std
push
maxps
pop
lea
test
add
mov
subb
movsb
cwtl
fmuls
sbb
adc
mov
ret
jp
dec
mov
addl
mov
repnz
roll
xor
loopne
or
movsl
adc
scas
inc
stos
mov
push
mov
inc
or
pop
jns
sub
and
cmp
cs
test
push
lcall
dec
sub
add
call
roll
fstps
mov
and
push
lock
sarb
push
cmp
xchg
fs
in
push
cltd
cs
enter
aad
push
pop
scas
shrb
add
shlb
or
ret
hlt
or
or
sub
cmp
cmp
insl
lret
cmp
inc
mov
mov
xor
mov
push
ja
subl
gs
out
out
sub
or
push
dec
mov
jge
sbb
fcmovne
and
dec
jnp
dec
pop
imulb
mov
divb
jne
jmp
fisubrs
hlt
push
sar
jo
inc
push
xchg
filds
cmp
leave
push
dec
cmpsb
sub
dec
xor
call
ret
jle
stos
xchg
adc
push
in
outsb
mov
inc
std
mov
cmp
test
push
or
mov
mov
xchg
aas
scas
popfw
popa
sbb
pop
xor
push
loope
movsl
adc
dec
movsl
cmp
jmp
aam
pusha
xor
test
mov
aad
gs
pop
sbb
pushf
fsubs
push
sbb
adc
ljmp
mov
jnp
ret
push
cs
jb
xorb
pop
and
mov
popf
loope
iret
adc
sub
cli
pop
lock
xchg
test
mov
xchg
call
clc
pop
and
shr
adc
cmp
mov
xchg
jp
ljmp
andl
adc
xor
mov
inc
xor
xor
adcb
fcomi
add
push
xlat
lret
andl
out
jle
push
stos
clc
push
ss
popf
mov
fs
adc
add
lock
aam
jmp
stos
call
push
mov
push
out
mov
mov
xchg
lea
sbb
sub
xchg
ja
call
out
ret
mov
hlt
stos
xchg
divl
push
push
negb
xor
pop
push
xchg
fists
push
adc
hlt
mov
ja
jnp
test
bound
je
call
adc
mov
rclb
adc
adc
adcb
mov
jno
push
pusha
inc
je
call
dec
mov
lret
dec
in
lret
popf
dec
add
jnp
dec
pop
push
mov
dec
cltd
lret
adc
sub
pop
scas
and
sbb
adc
or
enter
movsl
fdivr
inc
pop
and
rcll
sub
test
inc
mov
insb
mov
pop
add
lock
lods
mov
mov
and
adc
xchg
mov
jae
push
jbe
clc
add
xchg
or
or
test
hlt
sub
adc
or
arpl
dec
cmp
push
pop
mov
shr
rolb
sbb
or
int
hlt
decb
xchg
jge
mov
xor
and
or
and
das
mov
xchg
add
xor
sub
and
imul
andl
mov
pop
push
call
xchg
add
xchg
dec
pop
mov
adc
xor
xchg
jle
lret
inc
push
mov
scas
fstps
dec
dec
pop
push
inc
pop
xchg
aad
inc
mov
out
pop
test
test
cmp
bound
pushf
popa
inc
dec
sub
pop
adc
out
imul
pop
insl
jo
inc
add
jmp
std
hlt
call
pop
clc
or
wbinvd
sbb
sbb
inc
or
js
cltd
add
mov
pop
sub
lock
cmpsb
orb
mov
xchg
push
mov
mov
jno
lret
mov
fdivl
push
cmp
or
add
adc
cli
xchg
mov
pusha
jns
jnp
sub
adcb
sbb
push
insb
enter
push
adc
cmp
inc
nop
and
xchg
inc
shl
add
fdivr
adcl
adc
inc
xchg
call
cltd
test
mov
jle
add
je
cmp
stos
inc
ja
iret
fcoml
movsl
ljmp
sbb
sub
jns
push
push
xchg
aas
jg
je
test
outsb
ds
cmp
dec
adc
lods
addr16
push
rclb
fstps
push
popa
dec
jl
leave
or
and
pop
or
sbb
and
or
pop
mov
adc
xchg
fadd
or
aam
mov
cmp
mov
inc
fwait
fs
stos
mov
cld
pop
shll
jg
sbb
inc
cltd
mov
movsb
sarb
mov
data16
stos
or
mov
push
notb
inc
cmp
aaa
mov
cwtl
sti
and
decb
mov
and
shlb
and
mov
push
shlb
daa
cli
add
jmp
mov
shrb
adc
call
dec
add
push
mov
ret
cli
mov
inc
jbe
sub
jnp
xor
and
mov
or
jmp
jo
xchg
sbb
fcomps
cltd
xor
add
inc
add
test
adc
sbb
pop
stos
in
mov
jmp
jle
xor
test
and
pop
adc
xor
sub
push
dec
inc
push
inc
jmp
dec
vpsubsw
mov
adc
ljmp
cmc
adc
or
test
data16
fsubrs
push
sub
and
pop
jmp
aas
and
and
inc
fcoml
test
loopne
adc
nop
dec
inc
dec
xchg
shrl
sbb
arpl
jmp
push
fimuls
xchg
fsubr
mov
daa
jmp
mov
ret
es
push
jp
jb
inc
and
xchg
push
inc
loop
inc
adc
or
cli
inc
inc
sub
mov
fwait
inc
inc
shlb
and
or
enter
xchg
cmpsb
inc
fdivr
sub
cmpsb
ds
xlat
cmp
and
push
leave
call
lock
neg
cmp
sbb
mov
and
loope
xchg
test
loopne
sti
sti
out
pop
pop
mov
daa
and
jo
pushf
or
or
mov
inc
add
fdivrs
jmp
test
and
mov
adc
subb
test
decl
pop
pop
dec
cmp
cmpl
add
and
in
pop
or
sub
das
sarl
nop
jbe
movsb
std
jg
incb
cld
mov
cmp
or
jl
lods
add
jns
shl
test
push
or
jne
cli
sub
inc
cmp
dec
jb
mov
test
jbe
mov
inc
ja
adc
cmp
sahf
out
add
fidivl
inc
stos
call
jmp
or
pusha
outsl
call
jbe
push
mov
fnstsw
call
lcall
in
pop
xchg
jge
pop
xor
inc
lahf
xchg
xor
sti
shl
inc
jmp
lea
mov
and
scas
jno
push
add
ja
jno
movl
push
xor
fstl
enterw
sbb
or
push
mov
xchg
mov
jns
enter
sub
adc
xchg
xor
push
pop
pop
test
inc
jl
mov
add
and
mov
mov
sub
pop
inc
sub
int
pop
scas
fbstp
adc
stos
vpminsw
mov
mov
mov
adc
push
cmpsb
lea
rolb
test
mov
jge
imul
stc
pop
mov
mov
aad
scas
test
sbb
dec
add
aad
add
xor
aas
jo
outsb
aaa
data16
mov
xchg
sbb
testb
xchg
add
icebp
dec
fmuls
sub
lret
sbb
mov
sbb
repnz
into
insb
cld
movsb
xchg
out
pop
mov
dec
rclb
insl
xlat
push
mov
ljmp
adc
cld
push
movsl
add
call
and
fiadds
imul
add
or
or
out
dec
std
mov
sub
xor
push
lock
fiaddl
sub
mov
dec
imul
adc
or
push
dec
jo
or
mov
iret
mov
push
and
dec
or
fcomp
rcrb
xor
cmp
sub
loopne
lahf
pop
push
sub
outsl
daa
jne
xchg
and
sub
insl
dec
rcrl
jmp
xor
add
adc
mov
sarb
aas
sbb
in
push
cld
jbe
push
lea
fwait
lock
lea
push
sarl
sub
cmp
imul
mov
call
in
dec
xor
and
mov
inc
aam
adc
push
loop
adc
xor
mov
dec
adc
ret
xor
mov
and
insb
add
test
pop
cld
mov
jb
lods
cmp
je
cs
nop
jb
inc
xor
xchg
movsl
std
inc
xchg
dec
xor
lock
xor
call
shrl
or
aas
fsin
dec
sbb
enter
sub
mov
pushf
repnz
jne
or
cwtl
lcall
mov
imul
jg
repz
stos
or
sub
int3
dec
push
inc
jno
jl
pop
ljmp
cwtl
inc
std
and
fisubs
imul
bnd
mov
fisubrs
js
inc
or
push
loopne
je
pop
sbb
test
xchg
mov
jg
and
out
or
push
dec
sub
sub
js
sar
dec
mov
adc
fdiv
sti
bound
das
pop
push
jp
adc
lret
lods
inc
mov
push
sbb
cmp
xchg
sbb
pop
and
xor
mov
sub
xchg
mov
mov
adc
test
jge
sbb
leave
cld
fstl
xchg
adc
jmp
dec
lods
sbb
and
je
inc
xchg
jge
insb
xchg
lret
daa
jp
pop
adc
les
jne
ret
mov
mov
jg
idiv
out
jle
repnz
xor
and
inc
jo
push
stos
lret
shl
jecxz
mov
inc
inc
imul
fsubs
pop
dec
test
dec
push
lret
and
mov
ret
inc
or
xor
jle
shll
insb
mov
ja
sarb
jne
call
adc
aad
xchg
adc
lods
xor
jbe
jmp
ds
xchg
or
push
cmp
or
std
inc
jnp
in
mov
xchg
jne
push
push
jmp
test
gs
sub
sahf
das
jbe
sbb
sub
notl
cmpsl
adcb
je
popa
cmpl
mov
xchg
mov
jmp
les
add
lods
pusha
mov
adc
ret
dec
adc
inc
in
push
mov
call
push
pop
xor
mov
mov
xlat
inc
aad
mov
loope
mov
idivb
js
adc
call
jmp
mov
push
movl
inc
jg
cwtl
out
into
adc
adc
add
fsub
lods
clc
mov
adc
xlat
test
aaa
fisubrs
xor
fs
outsl
xor
fbld
xor
mov
or
dec
push
out
and
std
push
shrb
push
test
flds
popa
xor
mov
in
and
add
mov
dec
aas
and
pop
into
cli
and
xchg
mov
inc
popf
leave
cmp
xchg
jns
mov
fidivrl
xchg
movsl
fldl
xchg
or
jbe
lret
jo
mov
in
call
or
inc
jmp
int3
mov
mov
mov
cmpsl
clc
inc
adc
push
sbb
out
ja
dec
bound
movl
sbb
mov
scas
push
mov
adc
inc
cmpsb
enter
mov
je
and
mov
sub
adc
mov
iret
jmp
adc
sahf
sbb
notb
pop
xlat
jb
xchg
sbb
add
push
rclb
pushf
ret
jmp
call
orb
adc
push
dec
nop
xchg
movsb
and
push
jmp
loopne
jmp
mov
jno
mov
pop
orb
mov
out
loopne
mov
das
jmp
call
cmp
imul
and
outsb
cmpsl
subb
push
inc
sbb
add
stc
js
daa
inc
call
xchg
lret
lcall
fdiv
rcl
jmp
lds
scas
int3
or
dec
pop
repnz
inc
sbb
jmp
nop
and
stc
cmp
mov
push
cmpsl
out
adc
addb
sti
mov
cmp
jne
and
into
cld
xchg
xchg
dec
in
rcr
lret
jne
jecxz
xor
inc
lock
adc
call
adc
pop
in
mov
inc
lock
mov
sbb
cmp
insb
mov
dec
cmp
sub
nop
hlt
stos
int
rolb
fucomip
fimull
addr16
jbe
dec
fstl
xor
fsubrl
inc
mov
sbb
stos
sti
dec
and
push
sbb
popl
or
dec
je
dec
xchg
sahf
test
nop
mov
mov
iret
iret
mov
outsl
shlb
or
movsb
push
popf
sbb
les
or
shl
pop
inc
cmpsl
test
inc
nop
inc
ja
pop
pop
add
je
jne
movsl
mov
push
cmp
sub
or
inc
push
into
nop
scas
mov
sbb
dec
cs
lods
cmp
or
hlt
pusha
in
aam
xchg
xchg
jle
aaa
or
lock
shlb
hlt
xchg
test
adc
pop
and
je
cmpl
aad
xlat
fs
lea
or
mov
xor
pop
lock
xchg
repnz
jl
adc
mov
and
inc
cmp
push
push
incl
popf
push
jno
test
cmp
mov
pop
in
fsubrs
fs
stos
or
in
jo
xchg
cmpl
je
xchg
lock
mov
cmp
xchg
test
fadds
test
mov
inc
or
pop
pop
or
xor
mov
out
out
rorb
sub
inc
pusha
mov
mov
xchg
jo
and
std
in
pop
cmp
pop
addb
dec
sub
pop
test
jne
adc
jns
loope
lods
push
lahf
push
dec
dec
add
jge
push
mov
cmpsb
fwait
inc
inc
ljmp
jbe
rolb
mov
pop
pop
mov
and
push
idiv
test
loop
mov
mov
orb
jb
or
jno
dec
mov
pop
dec
pop
adc
mov
cltd
sbb
cs
or
add
cmc
mov
pop
leave
or
stos
add
and
enter
xor
add
scas
enter
or
add
push
sbb
xchg
push
in
or
or
cwtl
and
popf
push
cmp
out
cmp
push
fidivl
jmp
mov
cmp
push
mov
adc
sub
pushf
sbb
xchg
jecxz
and
cmp
and
daa
notb
inc
dec
dec
test
xchg
rclb
aam
imul
scas
adc
pop
push
sahf
loopne
inc
fmuls
dec
test
sti
cltd
xchg
push
push
divb
inc
and
mov
clc
pop
push
leave
inc
gs
push
stc
cmc
movsb
outsl
xchg
jmp
cmp
xchg
xor
scas
sbb
pop
ret
pop
sbb
add
push
xor
cwtl
cs
or
sub
js
pop
mov
inc
xor
dec
hlt
xchg
sub
xchg
je
pop
mov
push
or
adc
xor
lcall
cmpsl
mov
adc
mov
out
xacquire
imulb
cltd
cmp
jo
push
adc
divl
rcll
daa
loopne
es
dec
sahf
and
adc
inc
lret
inc
aad
pop
pushf
mov
fisubl
out
or
subb
jg
pop
je
pop
jl
adcb
jle
sbb
rol
outsb
inc
rorl
sub
mov
fists
adc
orb
stc
and
push
xchg
aaa
cmp
sbb
xor
stos
dec
repnz
dec
in
push
adc
xor
mov
outsb
mov
dec
popf
std
mov
ficoms
outsb
das
push
xlat
adc
xchg
aas
xchg
push
lods
rcrl
insl
and
mov
xor
inc
je
push
fs
test
mov
fiaddl
xor
push
int3
push
lock
test
dec
clc
stos
leave
adc
int3
xlat
push
cld
adc
loope
add
sub
je
dec
jg
jmp
jo
mov
shll
and
test
pushf
hlt
push
sub
dec
imul
sbb
scas
push
push
lret
xor
movsb
pop
sbb
mov
jge
jb
mulb
xchg
or
data16
es
cmp
inc
push
ja
sti
movsb
and
jnp
popa
ficoml
xchg
shr
dec
push
lods
jl
xor
mov
xchg
cli
test
into
fwait
inc
rep
call
mov
dec
inc
insb
test
push
mov
stc
cmp
aaa
fs
push
add
push
leave
mov
std
fwait
push
xchg
jo
pop
pop
xchg
sbb
pop
int3
adc
or
push
jae
insb
fcompl
add
xchg
fwait
jne
mov
dec
push
in
xchg
dec
in
pop
roll
cmp
jge
fs
mov
mov
jne
mov
cs
dec
or
repnz
inc
add
cmc
aas
and
aas
dec
test
jbe
mov
pusha
jle
adc
mov
jne
dec
cmp
jbe
call
xchg
les
movsb
sub
mov
cmpsb
push
adc
clc
mov
inc
adc
notl
cmp
je
mov
inc
repz
dec
pusha
outsl
and
pop
jbe
sub
not
mov
push
push
call
xchg
pop
mov
in
cmp
or
mov
in
jl
inc
nop
and
inc
push
lea
std
inc
push
push
adc
add
popa
icebp
arpl
adc
sub
rolb
xor
test
int3
stos
sub
and
shl
pusha
adc
cmp
or
mov
push
jmp
pop
mov
cltd
pop
add
cmp
or
je
call
dec
lahf
lock
xchg
adc
mov
arpl
outsl
jmp
xlat
pop
or
or
loopne
xchg
dec
mov
ret
fwait
mov
es
stos
cld
and
sar
aam
xchg
xchg
inc
xchg
fmull
dec
test
jns
call
jb
cmp
inc
fdivl
push
ror
lahf
xchg
cmp
push
adc
mov
leave
add
int
lahf
ret
adc
mov
jmp
enter
je
push
shrl
mov
push
lret
adc
sub
call
fdivl
hlt
pop
scas
test
mov
fisubrl
imul
incb
test
adc
sub
jge
and
adc
push
push
push
jnp
and
mov
push
js
outsl
mov
mov
rclb
mov
hlt
aam
jb
mov
fstl
in
xchg
and
mov
inc
and
hlt
stos
mov
cmp
or
lock
out
and
int
pushw
jl
jae
dec
inc
pushf
or
ret
dec
gs
and
rcr
sbb
xchg
xlat
push
xor
pop
daa
mov
mov
fdivl
mov
stc
push
pop
sub
outsl
jle
in
push
lods
fmul
xchg
aad
ds
pop
xchg
cmp
dec
stos
repnz
mov
xlat
inc
outsb
in
push
cs
mov
xor
sub
ja
clc
dec
cmp
push
call
outsb
sub
pop
adc
call
addl
or
push
pop
pop
shlb
std
pop
jno
and
inc
stc
aas
sub
jl
pop
loopne
std
inc
xchg
aas
ret
mov
xlat
ret
xor
shl
cli
test
in
xor
xchg
or
lret
fs
je
dec
xchg
jmp
mov
mov
jge
cwtl
inc
or
add
dec
ret
add
js
push
pushf
cld
inc
ficoms
shlb
mov
test
repz
jecxz
push
ucomiss
hlt
out
rcrb
jle
jbe
leave
mov
or
mov
std
enter
adc
lds
jle
or
mul
sbb
push
push
xchg
bound
push
dec
adc
lods
jle
lea
cs
xchg
add
je
cmp
movsb
cmp
dec
jl
push
dec
cmpsl
push
addr16
enter
mov
testl
jle
inc
jmp
andb
xor
mov
inc
pop
pushl
fwait
push
cmovl
insb
push
xchg
gs
scas
repnz
cld
jge
bound
ret
out
pop
out
shrb
aas
dec
stos
xchg
mov
mov
jns
xor
cwtl
loopne
add
cmp
rcrb
negb
loope
rcr
bound
push
dec
and
lahf
cmpsb
mov
ret
sub
or
sub
cmp
stos
push
add
mov
push
lock
mov
jle
cmp
jbe
inc
pop
jmp
jbe
or
fnstcw
mov
loop
adc
rcr
cmp
cmp
push
push
push
xchg
push
adc
xchg
or
xchg
dec
ja
xorl
jmp
ljmp
xchg
lahf
ficoml
insb
inc
int3
in
and
icebp
fcoml
adc
cld
dec
test
and
out
shrb
fistpll
es
and
mov
xor
int3
cmp
or
sub
xchg
sub
test
insl
adc
sub
push
and
dec
les
cmpsl
dec
icebp
popf
adc
add
nop
mov
pop
mov
xor
enter
and
and
lcall
and
push
xor
rorb
xchg
mov
inc
inc
fwait
xor
pop
and
gs
xchg
add
test
stos
dec
adc
sbb
dec
in
dec
mov
add
dec
fsubl
leave
lcall
clc
xor
xor
movsl
and
scas
lcall
dec
aam
add
shrb
dec
push
adc
add
dec
mov
imul
sub
cmp
movsl
dec
xchg
sub
ljmp
dec
mov
mov
or
and
repnz
mov
inc
fcompp
out
popa
fisubrl
lock
clc
ds
filds
pusha
fcmovu
enter
sub
stos
xchg
add
sar
gs
cmp
fildll
sahf
xor
mov
fs
cmp
jmp
xchg
xchg
jno
sub
mov
pop
negl
rcrb
adc
and
cltd
clc
je
movswl
arpl
xchg
jmp
pusha
sub
sub
or
lahf
imul
add
sahf
pop
pop
jmp
dec
fsubs
sti
outsl
inc
xchg
mov
jmp
adc
and
xchg
xchg
ja
push
mov
in
jno
and
cmp
mov
test
or
adc
mov
dec
jle
inc
add
push
sub
lret
test
cmp
gs
push
sub
xchg
dec
mov
movsb
lds
enter
shlb
rcrb
add
adc
jp
and
shlb
insl
scas
repz
mov
loope,pt
cmp
xlat
cli
cmp
cmp
jp
mov
add
sar
mov
adc
out
add
iret
mov
ret
mov
xor
into
or
scas
and
inc
or
push
insb
push
add
jne
sub
xor
jbe
repnz
mov
out
int3
lods
inc
dec
adc
std
push
inc
sub
imul
xchg
scas
jg
add
out
aas
std
inc
dec
lea
sub
push
clc
lea
or
rolb
fwait
add
scas
pop
aas
xchg
insb
test
mov
pushf
or
sbb
xor
mov
or
movl
cmp
jle
push
outsb
aam
push
lea
ds
push
fnsave
and
xor
push
mov
stos
dec
mov
mov
jp
mov
or
rolb
jne
adc
jg
jae
ret
pusha
stos
lcall
dec
inc
dec
jmp
dec
mov
fstpt
nop
mov
jle
adc
out
rolb
xor
dec
xor
adc
enter
and
push
fs
mov
push
mov
jg
rcll
scas
es
push
and
xchg
xor
lret
push
jmp
xchg
mov
imul
push
mov
icebp
sub
movsb
sbb
dec
or
mov
call
xchg
fsubl
sbb
mov
sbb
cmpsb
jne
dec
jb
movsl
sbb
je
or
push
adc
xlat
xor
add
pushf
mov
lods
sbb
sbb
push
sbb
sub
insl
xor
and
mulb
imul
pop
and
mov
mov
or
adc
push
negl
pop
nop
repz
aam
push
sbb
or
and
std
mov
adc
unpcklps
sbb
add
sti
cmp
imul
push
mov
in
xor
push
jne
mov
jmp
adc
push
sub
jle
cmp
arpl
daa
mov
adc
mov
xchg
ret
lods
adc
inc
es
and
fdiv
jp
orl
cmp
pop
lock
inc
push
sub
mov
sarl
lea
xlat
pushf
push
es
push
pop
aas
pop
cmpl
cmpb
cmp
mov
mov
jp
xor
push
adc
inc
cwtl
lret
mov
unpckhps
ds
in
xor
adc
jne
and
aas
mov
sbb
pop
xchg
jg
or
mov
sbb
cwtl
pusha
mov
rcrb
pop
enter
pop
push
cld
aaa
mov
cltd
ds
xchg
cmp
dec
xor
test
mov
xchg
jnp
xchg
dec
sbb
inc
jo
or
pop
and
jg
mov
aas
adc
add
movsl
pop
int
mov
cs
xchg
mov
in
and
std
adc
adc
stos
mov
mov
jge
addr16
adc
je
shrb
call
jge
jle
inc
mov
adc
lea
push
inc
dec
aam
dec
jmp
jmp
or
sbb
add
cmp
mov
xchg
and
mov
mov
xchg
pop
pop
inc
jg
or
cld
jmp
dec
push
imul
cmpb
pop
hlt
je
lods
cmp
sbb
push
mov
sahf
sbb
and
sub
sti
jmp
out
mov
sahf
dec
lret
sahf
add
lea
adc
lcall
dec
mov
scas
mov
das
cmc
orl
xchg
ja
mov
or
dec
or
push
pushf
sti
inc
data16
mov
dec
aas
add
stos
out
insb
jo
je
cmp
stos
xor
daa
test
mov
loope
in
ret
inc
xchg
sbb
movzwl
out
sub
ret
sub
push
sub
and
xlat
nop
enter
int3
add
push
inc
cmpsl
inc
repnz
and
stos
shll
ljmp
jo
mov
sub
ret
xchg
xchg
insl
in
or
fisttps
jne
stos
out
ljmp
push
lock
testb
push
lcall
stos
cmc
jne
push
push
xchg
xchg
push
adc
and
cmp
push
push
fs
push
xor
add
lea
popf
ficoms
mov
push
inc
sub
imul
testl
lock
xchg
add
or
jbe
or
lret
cmp
call
scas
mov
cmp
inc
or
ds
orl
dec
sti
push
inc
cmpsb
out
clc
mov
cmp
ret
imul
adc
outsb
pop
adc
loop
out
jo
dec
and
and
xchg
cwtl
jnp
dec
add
test
push
jb
push
not
cwtl
xchg
cmp
and
pop
adc
cwtl
pop
inc
jae
std
bound
pop
push
pop
lcall
jne
sub
leave
shl
lea
adc
popf
inc
scas
dec
sbb
xor
int
xor
adc
push
sbb
push
pop
std
lret
or
ds
rorb
out
popa
lea
test
ds
add
into
fs
mov
aaa
sbbb
add
sbb
inc
pop
or
and
in
xor
sub
xchg
fdivs
cmp
scas
push
stos
stos
push
roll
and
jle
outsb
adc
clc
or
mov
lcall
scas
push
lods
xor
sub
jbe
mov
mov
das
jmp
push
cmp
add
dec
je
int3
daa
xchg
test
jle
lcall
bound
mov
das
mov
or
jmp
cmp
sub
nop
push
dec
inc
xor
or
dec
sub
pop
jle
repnz
jmp
push
inc
hlt
dec
jmp
add
push
mov
mov
cmpl
jmp
fwait
cmp
cmpsb
enter
adc
mov
mov
mov
push
into
mov
cltd
lcallw
in
jnp
and
mov
cmp
addl
or
aaa
sub
xchg
divb
push
cmp
data16
add
xlat
cld
subb
aad
pop
push
rcl
push
lret
inc
popa
add
mov
mov
mov
dec
pop
xor
sbb
or
or
cmpl
push
pop
pop
push
jmp
or
jg
int
and
jle
jge
or
movsl
add
jmp
adcl
stos
jp
mov
test
mov
mov
xchg
iret
dec
js
dec
push
mov
xchg
dec
add
sbb
or
pop
push
jmp
lcall
movsb
ja
movsl
push
cmp
jp
sarb
bound
pop
cmp
icebp
lcall
pop
dec
aas
in
sub
das
stc
enter
pushf
fidivrl
jne
test
gs
out
fists
add
mov
or
mov
sub
out
es
add
add
cld
jmp
hlt
ja
pusha
imul
mov
dec
mov
or
or
cwtl
movsl
cmpsl
inc
adc
cwtl
jl
stc
fwait
push
aas
mov
jge
movb
jbe
xor
fbld
cmp
lods
test
cli
jb
sbb
sbb
xchg
dec
imul
ret
push
inc
sub
outsb
xchg
pop
push
jmp
in
jle
inc
out
xchg
cmpsb
mov
push
dec
clc
shr
or
nop
push
repnz
adc
or
xchg
sti
das
push
pop
push
mov
mov
pop
sbb
pop
mov
jge
cltd
and
xchg
daa
cld
pop
pop
mov
cltd
cmpsb
add
push
daa
lcall
mov
xlat
mov
xor
add
call
clc
pop
xor
dec
mov
mov
ds
pop
mov
or
mov
add
test
adc
ret
stos
mov
repz
aaa
mov
mov
xlat
popa
push
lret
mov
dec
add
roll
jp
out
dec
add
cli
test
pushf
inc
mov
imul
jg
or
sub
xchg
inc
mov
test
pop
test
sbb
sub
mov
sbb
imul
add
ret
sti
sub
mov
push
add
push
decl
dec
dec
call
lds
incb
mov
popa
adc
adc
mov
sbb
lods
shlb
push
dec
fs
push
dec
or
xor
int
inc
or
push
mov
inc
xor
add
movsb
jp
loopne
push
dec
bound
stc
in
arpl
rcr
mov
iret
cmp
and
add
xchg
jp
jp
push
ret
mov
cltd
sub
xchg
mov
sahf
sbb
clc
nop
mov
push
jbe
inc
adc
cltd
imul
das
test
push
mov
out
xor
or
fldenv
lret
add
dec
push
and
jbe
icebp
adc
push
dec
test
push
jo
inc
cmp
leave
cmpsb
roll
adc
mov
push
rep
out
fisttps
sub
jne
mov
mov
mov
dec
rcll
cld
add
jo
pop
sbb
push
cli
and
lods
sti
add
fs
mov
cmp
jne
dec
movsl
test
lret
adc
popa
and
add
daa
push
pop
sbb
sbb
fcmovu
insb
and
and
in
xor
clc
xchg
add
mov
dec
loopne
xor
sarl
adc
mov
aaa
js
fsubl
out
das
lods
xor
add
pop
pop
shrl
add
cmpsb
ss
mov
testb
inc
test
cmc
mov
fs
icebp
inc
hlt
and
fdivrs
cmp
jne
inc
ds
and
dec
and
jmp
js
ljmp
lret
je
xchg
cmp
cmp
push
fadds
push
sub
push
js
bound
fst
stc
incl
mov
call
rolb
cmp
mov
jnp
lret
movsl
inc
lret
mov
subb
jnp
xchg
stos
daa
push
sub
or
in
mov
insb
pop
lret
adc
push
stos
pop
push
add
xlat
push
ds
les
cmpsl
mov
adc
inc
loope
dec
push
mov
int
scas
mov
xor
das
out
hlt
and
or
and
adc
push
hlt
test
or
add
and
decl
push
add
sbb
fdivrs
or
clc
das
add
fistpll
push
sub
andb
std
inc
cmp
dec
out
jp
inc
or
inc
dec
jle
popf
cmp
inc
imul
lods
cld
fs
scas
in
adc
not
dec
mov
inc
sbb
push
cmpsb
daa
inc
jo
mov
add
call
and
stc
orl
jmp
je
dec
xlat
sbb
cmpsb
lret
cld
test
mov
int
inc
out
popf
loope
sub
loop
sub
orl
add
enter
mov
test
jns
les
outsl
call
or
fists
or
popa
sahf
or
mov
lret
inc
lds
adc
stc
loope
inc
push
add
xchg
aas
out
dec
bound
mov
aas
jge
and
sbb
call
sub
enter
icebp
fmull
jmp
pop
push
jg
pop
jbe
jne
inc
push
adc
stos
xor
inc
sbb
or
gs
mov
push
call
or
xchg
jle
inc
pop
xchg
movsl
cmp
jb
clc
adc
xchg
and
mov
and
popf
pop
sub
push
and
sub
pop
dec
sbb
or
mov
test
push
cli
cwtl
push
push
mov
mov
jne
pop
sub
mov
repnz
adc
jge
push
adc
jne
aad
or
mov
mov
push
loopne
lds
inc
sbb
js
push
lret
or
fcompl
or
xlat
jg
add
shll
push
or
lcall
sub
mov
jnp
stos
aad
jmp
add
sub
pusha
push
fisttpl
mov
sbbb
push
rclb
or
dec
adc
jge
fidivrs
popf
fbstp
mov
jg
or
aas
add
jmp
push
pop
push
dec
in
xchg
cli
or
outsb
loop
pop
mov
xchg
mov
fisubs
rol
push
add
cld
lods
leave
push
and
sti
xchg
mov
sub
gs
mov
jmp
dec
xchg
lock
inc
jb
cmpl
inc
int3
cmp
xor
iret
setb
cmp
xchg
aaa
rolb
lret
dec
mov
mov
insl
adc
and
das
shll
insb
ljmp
mov
mov
out
popa
xchg
xchg
jg
adc
cmp
test
xchg
cmp
push
or
nop
adc
cld
nop
shrb
sub
dec
and
mov
mov
xor
push
push
nop
das
pop
or
xor
int
mov
and
int
mov
mov
dec
or
add
pop
fwait
add
hlt
imul
or
hlt
mov
push
sti
or
push
and
loopne
jns
lahf
je
mov
cmp
scas
mov
push
sub
jmp
fimull
in
mov
repnz
ds
xor
jle
sub
push
add
in
out
sbb
leave
or
les
or
stos
rclb
pop
inc
xor
sub
sub
jo
lods
xchg
inc
shll
ja
sbb
mov
repnz
add
lea
call
xchg
notb
sub
movsb
sbb
ficoml
dec
cltd
cmp
ja
dec
add
mov
push
lods
and
jle
or
fmuls
mov
leave
push
lcall
or
daa
daa
cmc
mov
mov
pop
call
insl
inc
mov
aam
jmp
xchg
push
jne
jle
sbb
inc
dec
sahf
in
or
scas
dec
push
cmpsl
imul
sub
mov
dec
sub
call
lods
xchg
inc
jno
inc
and
jne
mov
daa
ljmp
subl
outsl
jno
lock
xchg
repnz
pop
loope
icebp
jp
or
cmp
das
adc
mov
push
fst
ret
mov
and
mov
or
cmp
mov
push
sar
int
test
jg
pop
shl
lret
pop
xchg
pop
jmp
pop
xor
filds
cmp
jae
stos
dec
jp
insl
imul
sbb
sub
sbb
arpl
test
jae
add
lret
sub
push
mov
and
dec
aam
mov
or
lret
push
jb
mov
mov
sub
scas
sub
push
jne
popf
push
or
cmc
in
xchg
push
sub
xchg
and
inc
jo
aas
insl
mov
sti
mov
fists
sahf
jge
imul
sub
jnp
jae
dec
pusha
mov
push
scas
cltd
mov
mov
jnp
jl
xor
mov
fcomip
test
shlb
ret
loope
push
sbb
add
je
jo
lock
cmp
jae
movsl
ret
push
sub
add
das
lret
incl
movsb
movsb
in
cmp
movsl
movl
int3
nop
ffreep
xor
outsl
push
mov
push
ss
pop
or
lods
ljmp
cmpsb
xchg
clc
data16
loopne
fdivp
iret
sub
or
xor
je
inc
jb
ja
dec
pushf
inc
jp
mov
add
inc
jae
sahf
or
jbe
sub
push
sub
sar
push
ret
jmp
xchg
ds
dec
dec
lret
ret
inc
sub
mov
cli
movsb
imul
mov
xchg
push
sti
fstps
bound
icebp
aam
scas
fs
test
jb
mov
pop
jle
xor
and
sarb
sbb
push
adc
lock
enter
jmp
in
mov
loopne
mov
mov
adcl
adc
adc
adc
or
and
dec
ja
sar
bound
aaa
imul
jmp
popa
pop
gs
jge
mov
pop
jae
pop
call
nop
movsb
sti
sub
lcall
roll
pop
scas
mov
adc
out
lea
mov
cld
mov
mov
shr
mov
jbe
pop
outsl
adc
and
je
mov
sbb
inc
push
test
xchg
cmpsb
in
not
mov
stc
shll
inc
movb
mov
test
xchg
in
test
fwait
mov
es
adc
and
int3
aaa
xor
fwait
sbb
and
and
fcoml
push
es
sbb
mov
stc
sub
call
pop
lahf
movsl
shrb
repz
repnz
push
xor
std
jp
xchg
lret
outsl
pusha
or
daa
pop
dec
adc
sbbb
add
sub
xchg
js
insb
scas
ss
test
jo
cmc
sub
sub
push
test
pop
sub
pop
aas
fists
stc
imul
jmp
xor
sbb
or
push
sub
fisttps
int
dec
sub
adc
sub
mov
scas
mov
push
cmp
aas
je
sub
incb
adcb
sahf
cmp
je
jo
lahf
loope
test
mov
sbb
jo
inc
fldcw
mov
dec
ds
xchg
adc
sub
push
jecxz
jns
addb
movsb
mov
sub
and
imul
mov
lret
or
xlat
imul
pusha
call
dec
jno
sub
inc
and
icebp
adc
mov
and
mov
lock
icebp
cmc
leave
sub
cmpsl
test
imul
mov
sub
jb
inc
pop
in
fbstp
add
fcoms
cmpsb
shll
popf
adc
mov
jns
cmpsl
jge
divl
pop
push
test
test
stos
push
push
add
jns
pop
xor
je
xchg
pop
fnstcw
int
pop
int
iret
jmp
xchg
mov
adcl
xor
mov
dec
nop
and
or
imul
xorb
sub
dec
mov
test
clc
adc
loopne
adc
mov
lret
inc
lock
add
xor
or
test
cmp
jo
add
add
mov
push
cs
mov
jmp
push
push
pop
xchg
adc
or
cwtl
xchg
inc
lea
sbb
jbe
dec
inc
jne
or
mov
xchg
pop
add
dec
jnp
push
scas
cltd
pop
jecxz
push
addl
jmp
mov
and
ljmp
in
in
mov
in
loope
xchg
or
inc
test
mov
out
int
imul
mov
inc
loopne
shr
stos
cmpb
jmp
ret
mov
xor
hlt
pop
sbb
cmp
xor
in
inc
push
and
test
pop
sti
xlat
outsl
xchg
adc
jmp
cwtl
or
out
mov
pop
je
cmp
ja
or
jbe
mov
mov
je
movsb
inc
jne
mov
sub
or
xchg
push
dec
ret
rcrb
popf
enter
shlb
sti
out
rdpmc
je
sub
xor
pop
mov
jmp
fwait
imul
jns
repnz
adc
sub
jb
xchg
adc
dec
add
add
add
add
add
or
add
decb
or
jp
pop
dec
cld
push
add
cmpsw
je
cmc
loope
fsubrs
aam
out
cld
mov
add
fdivs
or
add
xor
mov
mov
inc
test
push
mov
sub
mov
enter
mov
or
scas
je
push
mov
xor
add
sbb
and
mov
jnp
xchg
lods
rclb
jo
inc
xlat
mov
fnstcw
add
add
clc
add
mov
hlt
inc
roll
dec
and
pop
cltd
mov
outsl
movsb
pop
xor
adc
xchg
dec
or
or
mov
cmp
lret
push
les
sub
aaa
or
ja
sahf
cmp
adc
push
dec
push
inc
int3
cmp
adc
pop
mov
cmpl
pusha
or
mov
cmpsl
xchg
cld
mov
add
or
adc
data16
clc
ljmp
jg
mov
jp
mov
adc
popf
xchg
xor
shrb
mov
out
daa
outsb
or
clc
push
scas
inc
push
call
lock
inc
int
aas
call
flds
push
sub
mov
push
adc
cmp
sub
pop
repnz
xor
push
out
int3
pop
jmp
test
and
or
nop
roll
aaa
add
inc
dec
stos
inc
inc
or
dec
lock
je
and
faddl
leave
xchg
or
out
dec
add
add
cmc
xchg
and
and
leave
dec
add
ret
stc
or
out
jle
leave
mov
pop
mov
dec
push
sub
pop
xor
ja
mov
mov
push
js
call
aad
pop
xor
and
lret
je
or
inc
dec
push
mov
js
les
mov
int
adc
clc
sti
ret
dec
jge
inc
sbb
call
cmp
cli
xchg
dec
or
and
pop
add
mov
mov
push
rorb
adc
mov
jecxz
lods
sti
xchg
push
fmull
fsubrs
inc
jl
sbb
jae
std
sbb
subl
mov
les
and
jg
cmp
add
leave
lea
lret
xchg
mov
cmp
jl
mov
mov
adc
outsb
inc
mov
push
pcmpgtw
sub
jg
int
adc
cmp
cmp
adc
out
add
shrl
dec
addl
sbb
pop
sbb
pop
adc
and
movsb
xor
daa
movb
push
lret
lcall
sub
push
jno
mov
in
and
or
pop
sbb
bound
cmp
sub
cmpb
jae
add
stc
push
leave
rorb
ljmp
pop
mov
cmpsb
stc
inc
adc
jo
cmp
jne
inc
fsubrs
cmp
fildll
or
rclb
add
das
mov
cli
sbb
es
insb
add
mov
add
lea
xchg
push
pushf
sub
xor
sbb
and
sbb
jne
sbbl
push
leave
popa
dec
mov
add
in
inc
fcmovnb
iret
ss
enter
ja
adc
cmpsb
adc
or
add
inc
cwtl
sbb
jo
imul
push
adc
jbe
enter
sbbb
xchg
sub
inc
loop
xchg
in
push
cmp
xor
and
jns
push
sbbb
fwait
mov
enter
test
daa
cmc
test
adc
cmp
and
mov
decb
fadds
js
mov
dec
xor
daa
adc
pop
pop
sbb
adc
jmp
jne
push
xor
xor
loopne
pop
mov
testl
lret
or
or
inc
fisttpll
mov
push
lods
mov
sbb
adc
aam
pop
lods
int3
jg
push
repz
sub
inc
cli
imul
mov
lods
sbb
pop
les
loope
sub
rorb
and
xchg
cs
in
xor
jbe
daa
gs
push
xchg
daa
or
imul
repnz
lea
cmp
shrl
add
pop
mov
mov
cltd
push
dec
dec
cltd
popa
jnp
sbb
les
xchg
mov
mov
enter
jns
push
sub
push
std
sbb
pop
lret
sbb
cmp
cltd
int3
repz
xor
and
mov
or
push
add
cmp
mov
xchg
fsqrt
bswap
fucomip
bound
adc
pop
mov
pop
xor
mov
dec
lea
fmulp
push
nop
inc
lcall
sub
adc
adc
jnp
mov
lds
sbb
mov
in
push
pop
or
pop
arpl
pop
subb
aas
add
loopne
sub
and
push
sub
dec
and
mov
mov
or
stc
movsl
adc
test
xchg
pop
loopne
popa
rcrb
sahf
xor
mov
sbb
pop
inc
push
fidivrs
cmp
sub
cmp
nop
push
or
movsb
push
test
sbb
rorb
lock
insl
add
push
in
dec
cld
fldt
adc
aas
dec
mov
mov
ss
jbe
or
xchg
cmp
jne
cs
popa
mov
out
mov
push
add
imul
cmp
repz
add
xchg
mov
repnz
nop
xor
jg
mov
mov
pop
nop
ret
pusha
bound
jge
enter
repz
pop
gs
loopne
cmp
paddq
in
jmp
bound
add
pop
xchg
outsl
and
or
push
add
movsl
xor
pop
push
mov
shrl
bound
sub
jmp
pop
lock
icebp
inc
dec
push
add
jmp
fcoml
or
sub
mov
or
call
adc
or
mov
inc
dec
int3
call
lea
test
inc
rcrb
ret
aad
mov
sub
outsb
test
inc
adc
outsb
in
jns
adc
subl
test
or
mov
adc
push
cli
inc
divl
xchg
pusha
add
add
mov
sub
mov
ret
cli
dec
inc
cmp
pop
jp
and
inc
inc
movsb
mov
xchg
jp
dec
adc
cmp
cmp
ret
stos
xor
xchg
dec
int
shrb
lret
or
inc
or
into
pushw
jmp
sahf
stos
test
pushf
les
add
fisubrl
pop
mov
mov
inc
xchg
cmc
adc
scas
mov
leave
movsb
adc
add
dec
sbb
hlt
jmp
pop
in
adc
xchg
repz
repz
movl
xor
cmp
das
enter
jle
sbb
or
sbb
adc
loope
push
mov
xlat
add
neg
imull
adc
sub
fiaddl
push
hlt
mov
in
cmp
jnp
add
mov
adc
xor
xor
cmpsb
or
pop
cmp
je
movsl
and
jo
push
and
je
lea
cwtl
nop
shlb
xchg
cltd
xchg
test
push
ds
mov
cld
add
repnz
inc
xchg
ds
fisttpll
jne
push
or
jae
ja,pt
not
sbb
xchg
mov
out
cmp
jbe
jmp
dec
sbbb
sub
and
imul
in
pop
cli
psrld
pop
cwtl
xchg
or
add
lret
jmp
jg
xor
adc
jmp
lods
adc
loop
in
sbb
or
lods
push
and
sbb
daa
push
movsl
insb
das
cli
mov
pop
adc
add
mov
mov
and
jae
inc
pop
inc
jno
jmp
push
loop
xchg
nop
dec
and
rorb
nop
dec
and
mov
push
push
xchg
lods
xor
jmp
add
fs
cmpsl
gs
or
fdivl
xchg
sbb
in
cmpsl
push
xor
cmp
inc
int3
jmp
lea
push
sub
mov
jecxz
data16
jg
cmp
ds
dec
adc
ja
rcl
mov
stc
or
jne
dec
mov
dec
pusha
pop
cmpb
dec
scas
dec
add
mov
xchg
jg
add
sar
jne
loop
or
sub
mov
test
jne
xor
dec
in
fchs
test
fcoms
cmp
je
sub
mov
add
sar
push
push
out
xor
pop
insb
int
pop
dec
xor
push
inc
sti
or
push
lcall
or
loope
fildl
je
pop
inc
ljmp
ret
sahf
lea
sub
inc
or
mov
shll
daa
clc
cmp
mov
daa
sahf
hlt
sub
or
or
daa
iret
mov
or
mov
daa
out
push
inc
or
test
sti
lods
lods
mov
test
stos
adc
push
adc
sbb
pop
push
movsb
push
cmp
pop
cli
pop
loopne
pop
aaa
repnz
sub
mov
xchg
jmp
gs
dec
mov
xchg
push
jge
add
mov
cmp
push
xor
mov
stos
jmp
into
sbb
orb
and
push
ds
fldenv
inc
sub
xchg
add
out
mov
aas
xor
je
or
cmp
rolb
jge
mov
jle
add
sbb
clc
out
call
add
mov
fs
sub
movsb
pop
lds
pop
inc
push
loopne
cmp
and
lds
cmp
test
and
jnp
rclb
mov
ret
ja
decb
daa
sbb
push
mov
xorl
frstor
out
hlt
sbb
les
and
xor
shlb
or
xor
and
xchg
adc
pop
or
inc
daa
ret
jne
add
daa
xchg
jo
sub
xchg
mov
clc
aam
jge
clc
cmp
inc
and
sbb
xor
sub
andl
adc
mov
inc
sbb
sbb
lret
out
add
je
push
stos
push
or
or
stos
stos
fsub
inc
sbb
dec
call
or
mov
inc
orb
inc
cmp
out
fs
and
or
adc
xor
push
inc
add
jmp
or
add
inc
jbe
or
push
outsb
dec
mov
hlt
fidivs
pop
lea
incl
and
cld
je
mov
inc
aam
imul
clc
sbb
sub
and
jns
xor
sub
movsl
pusha
sub
xchg
or
mov
adc
scas
movsl
fdivrl
stos
daa
add
pop
inc
push
xchg
mov
scas
out
push
stos
in
dec
xchg
jmp
and
ds
push
adc
xor
loop
shrb
push
or
insl
addb
pop
fdivs
shll
lret
cmpsl
jns
stos
nop
jno
mov
xchg
sbb
stc
dec
stos
shrb
cmp
dec
push
in
and
xchg
sub
hlt
daa
mov
sub
inc
outsl
sarb
gs
sub
or
jbe
imul
je
addr16
xchg
push
sub
and
xor
adc
stos
mov
push
mov
lods
dec
add
jne
xor
push
fidivl
push
xchg
inc
cld
jle
pop
clc
cmc
xchg
xchg
sbb
std
insb
xchg
dec
xor
pusha
mov
jne
fstpl
and
jae
cld
add
mov
xchg
clc
jmp
inc
jmp
pop
jecxz
mov
aad
insl
cltd
mov
or
loop
inc
push
clc
dec
and
cmp
outsb
mov
lcall
pop
clc
jmp
out
jne
call
push
adc
jle
adc
or
movswl
lds
add
ja
xchg
lea
mov
int3
pop
mov
adc
sbb
fwait
dec
vaddps
or
xchg
sub
mov
repnz
stos
jge
shll
imul
xchg
test
adc
into
mov
into
rclb
clc
lea
push
push
pop
int3
add
mov
cmp
fnstenv
adc
sub
rolb
add
inc
jge
neg
sub
aam
add
and
sub
and
iret
jmp
fistpll
xor
xchg
test
in
sub
lea
dec
enter
jl
enter
cli
mov
dec
push
fxch
pop
add
or
aad
mov
int3
add
xchg
adc
adc
push
ficomps
jo
mov
test
test
fmulp
cmpsb
mov
mulb
call
add
sbb
nop
pop
cmc
ret
ret
mov
movsb
pop
inc
fisttpl
movsb
loop,pn
xor
inc
test
xor
jo
stos
movb
sarb
xchg
shrl
jle
jo
or
aad
lods
popf
xlat
push
aas
scas
pop
dec
mov
call
dec
jp
into
cmova
jmp
inc
mov
dec
and
and
dec
pop
xlat
rorb
cld
add
scas
ss
sub
pop
inc
pop
jl
repnz
test
pushf
mov
test
cmp
push
xchg
fistps
in
mov
lea
add
adc
pop
mull
add
and
adc
mov
adc
inc
add
arpl
lods
scas
in
cmp
and
cmp
push
inc
pop
loop
add
faddl
call
and
movsl
enter
adc
mov
xor
pop
lea
aas
dec
sbb
push
fidivrs
fmull
daa
pop
pop
mov
cmp
jb
push
push
test
mov
fidivs
adc
clc
xor
adc
mov
push
ss
ret
push
mov
pop
gs
push
lret
cmp
enter
xchg
imul
inc
sbbb
repnz
xchg
pop
outsl
test
xchg
cltd
inc
and
and
imul
stos
insb
repz
jmp
xor
test
jmp
push
or
pusha
repz
les
jmp
jg
mov
adc
mov
adc
add
adc
popl
push
out
mov
adc
mov
sbb
hlt
push
lods
jg
xchg
jae
rol
cmp
in
es
jge
inc
jb
cmp
jle
daa
and
add
data16
ja
ljmp
cmc
out
jle
ret
push
or
out
or
inc
pop
mov
fnstenv
out
add
repnz
jg
popa
lret
jmp
pushf
insb
add
xor
or
add
or
mov
sbb
sti
lea
add
sub
inc
sub
and
and
or
pop
test
pusha
mov
nop
adc
jle
mov
push
jns
or
inc
fmuls
mov
lea
into
pop
xchg
loopne
or
jne
pop
mov
lea
push
add
mov
mov
fucom
xor
enter
jmp
push
out
xor
inc
cld
inc
adc
adc
xlat
repnz
jmp
call
push
push
push
or
adc
jmp
out
aaa
mov
mov
mov
add
jne
lds
cmpl
sti
or
flds
scas
xor
mov
push
cli
pop
pop
ret
jns
mov
mov
out
popf
div
test
adc
or
jne
mov
clc
inc
or
or
sbb
test
idivl
idivb
mov
stc
adc
cmp
call
pop
insl
js
ret
fisttpll
stos
push
sub
and
push
stos
in
xchg
mov
adc
sbb
mov
imul
xlat
inc
xor
jge
sbb
mov
mov
inc
inc
xlat
sub
sarl
je
push
idivb
popf
mov
inc
hlt
jge
nop
sbb
push
cmp
hlt
leave
dec
xlat
vmovss
adc
sbb
sbb
cmc
and
dec
sbb
notl
or
mov
lret
sub
dec
ja
andb
inc
and
mov
adc
push
xchg
sbb
mov
enter
pop
inc
sbb
mov
jnp
pusha
pop
mov
adc
scas
fcmove
pop
mov
push
repnz
push
les
icebp
jge
mov
std
or
lock
push
sbb
jl
lahf
repnz
ljmp
or
pop
mov
imul
sub
add
repnz
xchg
out
pop
jne
pop
aam
mov
jmp
enter
ret
or
ljmp
fldenv
xor
xor
add
call
mov
jge
dec
shrl
pop
adc
inc
lods
sbb
jnp
pop
test
loop
ret
xchg
pop
jae
sbb
ja
jle
dec
ss
adc
cs
aaa
sbb
or
call
dec
cmp
mov
adc
sub
pop
mov
cmovb
call
inc
sbb
mov
test
or
fxch
rorl
push
inc
repz
xchg
stos
aaa
sub
testb
std
mov
lds
inc
or
ljmp
and
ret
shl
or
clc
sahf
popf
and
add
ds
and
pop
xor
addr16
inc
or
add
pop
testb
push
outsb
mov
test
xlat
pop
mov
sbbb
mov
roll
pop
repnz
xchg
and
lret
cmp
and
xchg
or
jbe
dec
xlat
sbb
loop
pusha
lcall
enter
xchg
inc
add
cs
inc
cwtl
daa
inc
out
jmp
xchg
pop
rcr
jmp
dec
sbb
xchg
les
lock
pop
lock
cmp
or
sbb
jne
movsb
xchg
pushl
jae
cwtl
inc
dec
xor
sti
idivb
mov
cmp
xchg
cmc
fcmovu
cli
add
into
sub
mov
ljmp
jmp
inc
push
lods
dec
mov
jg
inc
add
test
xor
cmp
sti
int
jmp
or
or
fcompl
mov
add
xchg
xorb
cmc
sbb
insb
movsb
sbb
xchg
pop
lret
cwtl
add
cmp
and
sbb
mov
cmpb
or
cmc
fsub
pop
add
inc
cmpsb
jl
dec
adc
xor
push
xor
pop
hlt
mov
and
cmp
cmp
lret
cmp
cmp
lods
scas
sbb
dec
sub
mov
and
stc
stos
test
push
mov
mov
jo
hlt
cmp
add
cmp
and
xor
hlt
jnp
in
push
add
imul
jp
add
adc
icebp
adc
es
add
xlat
adc
rorb
adc
xor
mov
dec
scas
js
fisttps
lret
sub
je
dec
int
cmpsl
push
push
adc
inc
cmp
adc
jmp
loope
das
jb
inc
dec
scas
dec
or
das
das
stc
add
sub
inc
sbb
gs
sti
into
je
in
repnz
int
pop
adc
push
mov
je
dec
mov
call
cmp
sub
shll
adc
push
sti
int3
dec
jbe
or
cmp
dec
clc
push
leave
scas
shrb
fs
rorb
push
popf
lret
inc
test
rcll
and
mov
mov
popa
ds
add
test
lea
iret
xor
adc
cwtl
pop
dec
lock
adc
cltd
dec
cmp
mov
dec
icebp
leave
cmc
lods
cmp
mov
into
cmp
testl
aam
adc
lret
cmpsl
sbb
cs
in
lcall
cltd
xor
or
cmp
or
ja
adc
or
and
push
mov
pop
xchg
data16
add
ljmp
inc
mov
mov
add
sbb
enter
pop
es
or
push
push
xchg
push
or
and
or
xor
pusha
dec
push
push
fcomps
jb
xchg
jg
bound
mov
cmc
test
xor
add
push
leave
dec
push
out
cmpb
inc
cbtw
iret
jo
xchg
push
cmpsb
lods
cmp
sub
push
pop
mov
test
push
xor
daa
pusha
adc
mov
jp
xchg
fnstenv
movsb
stos
dec
or
into
mov
mov
cmp
and
add
call
lea
and
fsubs
xchg
cld
xchg
sarb
push
and
stos
xorb
ss
aaa
or
adc
sbb
loope
jbe
mov
sbb
xchg
mov
enter
mov
shl
add
push
lret
or
adc
pop
es
inc
jp
inc
test
lock
mov
out
jl
lcall
sub
push
mov
dec
push
add
mov
fxch
sub
cli
mov
dec
or
sub
xchg
xor
rcll
aam
in
sbb
pusha
cmp
jne
sbb
dec
arpl
xchg
mov
push
pop
push
or
shrl
das
fisubl
jl
and
push
sub
leave
sub
xor
xchg
or
cmp
pop
jbe
sbb
xchg
jns
scas
push
jmp
ljmp
test
aaa
es
lock
sub
sub
das
clc
mov
inc
lock
rcll
dec
inc
and
mov
out
lock
pop
arpl
pop
testl
and
lret
or
cs
xor
pop
and
rcrl
adc
push
sbb
push
movd
adc
mov
je
cmp
jmp
lds
in
stc
pop
or
cld
imul
sbb
sbb
cld
test
test
pop
pop
out
xchg
test
inc
mov
mov
cld
xchg
mov
lods
dec
js
mov
push
je
popf
mov
out
inc
or
inc
test
scas
test
xchg
and
mov
mov
or
lret
sub
int
inc
push
cmp
addr16
push
iret
add
loope
ja
cmp
lods
out
in
or
rorb
mov
pop
mov
lahf
icebp
add
pop
pusha
inc
add
mov
cwtl
lcall
pop
mov
sbb
das
or
dec
inc
push
push
and
fildll
inc
test
push
sub
pop
adc
sbb
sub
or
xchg
aaa
add
ja
xchg
add
cli
add
or
cmp
test
or
clc
jl
adc
adc
std
adc
adc
adc
jecxz
sbb
sbb
pop
or
stc
sbb
pop
add
cld
and
adc
and
jg
xchg
adc
insb
jno
subl
dec
imul
adc
mov
mov
and
sub
leave
movsl
out
je
xchg
adc
add
jmp
xchg
add
lock
mov
fdivs
lret
or
inc
incl
mov
setne
push
ja
fmull
xor
lahf
jmp
into
sub
lds
test
pop
jle
icebp
adc
cwtl
lock
lock
pop
je
lcall
in
rorl
fdivrl
popa
ja
scas
xor
shrb
fists
out
pop
aas
cltd
lea
push
ljmp
je
mov
data16
std
jle
add
sub
add
lea
andw
mov
int3
mov
inc
and
popf
cwtl
jge
out
clc
int3
popf
pop
xchg
xchg
pop
ljmp
jne
call
pop
lret
lock
addr16
fcomps
data16
jbe
sub
das
lret
xchg
jge
pop
movsb
shrl
sarl
jbe
cmpsl
cmpsl
stc
je
movsb
repnz
and
mov
sub
dec
bnd
xor
fiaddl
adc
mov
push
mov
dec
out
push
or
xor
add
faddl
call
push
push
andl
add
addb
call
dec
loope
mov
lcall
rol
out
adc
repz
mov
xor
add
mov
out
rcl
stos
mov
mov
adc
in
fmuls
xorb
enter
xor
nop
sub
ljmp
push
pop
mov
jl
inc
sbb
mov
push
loopne
enter
movsb
orl
leave
or
mov
xchg
aam
ljmp
or
sub
pop
push
sub
sub
into
mov
pop
mov
push
and
push
pop
inc
pop
and
dec
ja
test
mov
gs
push
push
call
xchg
movl
insb
sbb
xchg
cmp
jmp
mov
mov
cld
xchg
jb
lahf
inc
xor
in
sbbb
add
nop
imul
sbb
mov
jo
pop
inc
fwait
test
inc
jmp
andl
xor
push
jae
add
nop
loope
dec
cwtl
pop
iret
or
jmp
or
subb
mov
shlb
mov
cmp
faddl
lock
adc
loopnew
and
dec
xchg
les
xor
adc
jae
iret
or
or
cmp
cld
into
lea
subb
addl
add
inc
cmp
inc
mov
ret
push
mov
icebp
mov
inc
mov
jbe
or
adc
mov
lods
mov
ds
jne
cs
adc
fcoms
jmp
fwait
lea
fs
lret
push
or
jl
cltd
add
and
jne
fcoms
shrb
mov
pop
push
xchg
cmp
or
int
bswap
mov
push
mov
mov
or
stos
or
adc
mov
movsl
ficompl
mov
adc
mov
fs
push
mov
jp
insb
push
je
pop
push
imul
stos
int
iret
fisubl
dec
divb
repz
out
mov
pop
cs
imul
ja
outsb
dec
and
sub
mov
sub
cmpsb
mov
mov
push
call
inc
mov
bound
pop
ds
rcr
mov
mov
or
imul
mov
pop
or
jmp
aas
test
pop
mov
scas
pop
pop
cmp
js
call
popf
fists
mov
ja
cmc
pop
xor
inc
adc
xor
cmp
stos
or
mov
or
lock
or
ds
mov
xchg
movsl
xor
loope
pop
movsb
clc
popa
mov
xor
mov
mov
and
jle
push
cmp
je
jae
subl
push
cs
mov
add
lea
popf
sbb
js
cmp
ss
fdivrs
adc
mov
push
cmp
push
and
roll
movsl
jle
hlt
lea
dec
sbb
mov
cmpsl
jmp
fsubrl
mov
sub
test
mov
mov
stos
or
adc
or
lahf
mov
xchg
bound
loopne
push
cmpsb
pop
mov
imul
mov
lret
cmp
push
mov
xor
xor
ds
or
adc
popa
cs
or
xor
sbb
sub
mov
pop
adc
dec
out
stc
and
mov
inc
sbb
adc
int
movsb
outsl
add
test
lret
adc
mov
lahf
xchg
inc
jne
push
jno
call
lcall
int3
add
jnp
jl
inc
loopne
push
shll
cmp
pop
sub
xor
mov
aaa
movsb
daa
mov
push
mov
adc
pop
je
inc
fildl
xor
pop
inc
jne
sub
dec
dec
xchg
adc
outsl
clc
mov
xchg
mov
jmp
xchg
je
les
jecxz
push
mov
movl
repz
das
pusha
or
dec
pop
test
sar
xor
mov
sbb
outsb
xchg
ss
xor
cmp
cmp
sahf
mov
xchg
jp
pop
fdivs
xor
push
xlat
loopne
or
jge
push
cltd
pop
aaa
dec
pop
sbb
fcmovu
pop
pop
ret
ret
jmp
fcompp
inc
inc
sub
fcos
inc
push
jmp
jne
fs
pop
cwtl
repnz
sbb
negl
loope
call
test
xor
inc
mov
rcrb
sub
lods
adc
or
xor
add
and
or
sbb
mov
ds
jb
pop
jne
js
sbb
mov
loop
enter
paddsb
jbe
andb
dec
push
arpl
push
ds
and
add
cmc
jne
dec
lea
push
ljmp
mov
mov
stos
ja
pop
loop
pop
pop
hlt
in
hlt
fildl
jmp
test
xchg
push
add
lea
fstpl
xchg
hlt
mov
mov
push
jnp
push
jmp
test
movl
add
push
sbb
xor
jno
cmp
sub
cmp
jecxz
movsl
xchg
jl
add
xchg
xor
ljmp
push
stos
icebp
jo
daa
je
sarl
test
push
movl
and
and
pop
ret
push
push
call
dec
xchg
adc
pop
adc
cmp
imul
daa
outsl
xor
bound
push
mov
call
sbb
fidivs
pushf
bound
popa
push
mov
push
push
call
leave
cmp
icebp
shrb
sbbb
ret
xor
cli
push
or
les
mov
jmp
out
add
mov
pop
mov
arpl
ss
cs
sub
sub
cwtl
mov
xchg
and
sbb
jg
and
push
into
pop
add
or
in
mov
sub
lea
sub
cltd
orb
cld
lods
jbe
xor
jmp
sarl
dec
push
sub
mov
cli
dec
mov
aam
shrl
cmp
xor
sbb
inc
inc
roll
decl
sbb
or
sub
imul
rorb
pop
test
lods
test
scas
push
push
sbb
addb
cmp
and
push
adc
divl
out
inc
lods
test
repz
jae
stc
push
pop
or
jg
repnz
cmp
fldcw
xchg
or
push
jp
or
push
mov
adc
and
stos
mov
popa
lret
repnz
adc
inc
mov
cmp
das
jb
out
rorl
std
movsl
inc
sbb
xchg
pop
hlt
fstcw
dec
inc
sbb
mov
cld
jae
sbb
jge
or
movsl
es
and
leave
das
imul
add
pop
cli
sti
movsl
sti
nop
push
xchg
mov
das
push
jne
cmp
xchg
or
sarb
inc
or
stos
jae
lcall
and
bound
enter
adc
xchg
movsl
in
fnstenv
shrb
xchg
xlat
xchg
outsb
imull
or
xorb
push
push
mov
aas
adc
ss
rclb
cmp
sarb
xchg
mov
arpl
cmp
adc
loopne
cmpl
nop
or
cmp
les
notl
mov
adc
shlb
sub
or
push
cmc
pusha
pop
je
adc
jns
sbb
sbb
pop
lahf
faddp
outsb
rcl
test
cld
mov
xchg
clc
push
jo
inc
into
aad
mov
adc
add
and
jg
daa
rcll
push
pushl
test
pop
xchg
pusha
jo
pop
mov
xchg
jno
sub
mov
std
rorb
jp
push
add
xlat
cmp
shrl
repz
adc
call
jmp
popl
lea
push
mov
dec
int3
insb
dec
push
inc
jbe
or
pop
pop
outsb
jno
or
daa
cld
call
scas
mov
and
sti
push
adc
loop
jns
push
jae
jnp
dec
mov
lea
push
xchg
push
ret
imul
out
pop
pop
test
or
dec
mov
sbb
adc
and
adc
push
test
and
add
lods
or
jns
push
jnp
fnstenv
jmp
push
mov
mov
jmp
icebp
arpl
decl
pop
fisubrl
cld
fs
lea
daa
pop
pusha
out
ds
mov
or
mov
mov
inc
int3
daa
inc
cmp
sub
cmp
mov
and
and
roll
je
rolb
mov
pusha
inc
lock
and
sbb
xchg
cmp
push
jg
push
mov
test
fadds
and
push
mov
sub
cmp
je
mulb
sub
dec
or
enter
clc
ret
jmp
movsb
or
push
call
movl
and
dec
fnstenv
jge
sbb
mov
xchg
push
lods
cmovp
mov
or
lcall
mov
mov
arpl
sub
adc
add
cmp
rolb
cmp
add
add
and
mov
push
sub
or
xor
mov
lret
push
xor
jns
push
les
mov
mov
mov
mov
mov
adc
stos
add
or
push
mov
push
add
pop
rclb
mov
leave
cpuid
push
test
inc
dec
xor
hlt
xchg
push
push
outsl
sahf
sub
sub
push
or
push
and
mov
aad
sub
xor
push
push
bound
call
in
xchg
mov
sbb
das
sbb
mov
and
scas
push
add
or
sbb
jmp
lret
lcall
push
push
sub
inc
cmpsb
push
push
enter
push
cmc
inc
loope
in
push
js
daa
neg
aad
add
popa
xor
icebp
cmc
mov
leave
or
outsl
jbe
add
push
mov
inc
add
loope
push
sbb
mov
mov
add
fidivs
pop
mov
test
mov
test
lret
sbb
xchg
mov
nop
or
push
push
call
hlt
test
push
gs
out
dec
adc
aas
inc
dec
push
pop
sub
std
or
xlat
roll
jno
sub
not
push
mov
inc
pop
mov
popf
daa
inc
lock
mov
mov
or
mulb
enter
je
xchg
cmp
test
ret
inc
jb
prefetch
push
fs
sbb
inc
lret
addr16
sub
dec
adc
xor
sub
mov
shll
in
je
cmp
push
sbb
mov
in
sub
mov
outsl
test
icebp
pop
call
movsb
fstp
or
and
jmp
fs
and
sti
jecxz
lret
jg
mov
xchg
or
pop
lods
xor
lret
mov
push
add
xor
sbb
adc
xchg
add
ss
sbb
or
enter
sub
xchg
sub
dec
sub
lea
sub
stc
xor
push
mov
rcll
daa
mov
mov
push
sbb
lds
ret
pusha
jnp
sbb
repz
cmpsb
or
push
fstl
mov
enter
je
dec
adc
cmpsb
orl
xchg
rcll
sahf
xchg
sbb
je
dec
sub
cmp
cmpsl
out
leave
ret
dec
lods
ret
sub
call
add
jbe
adc
aas
out
xor
adc
call
push
push
sub
or
jle
sub
ret
pop
jbe
sub
inc
jge
cmp
mov
push
call
push
mov
inc
push
ror
xor
mov
jl
aas
popf
cmp
mov
jae
lcall
cmp
sbb
xor
shlb
out
lea
ljmp
adc
in
cs
cmp
mov
adc
cmp
sbb
lea
into
ss
gs
scas
pop
mov
inc
push
cmp
push
adc
push
test
xchg
fisttpl
ja
push
adc
add
or
cmc
lock
push
push
test
sbb
rcll
clc
ja
pop
ret
clc
pop
movsb
icebp
jbe
aad
cmp
push
je
sbb
dec
mov
jb
add
sbb
adc
jne
pop
pop
xlat
sub
shl
push
lods
loope
push
push
int3
dec
stc
shlb
in
jne
jmp
jg
jmp
fwait
mov
fidivl
dec
xchg
sbb
loopne
test
pop
ret
jle
ss
adc
cli
cld
je
or
or
push
push
neg
or
and
adc
test
push
dec
and
std
mov
leave
addb
xchg
mov
data16
or
push
in
xchg
push
out
jmp
mov
rorl
sbb
imul
adc
jle
mov
add
mov
sub
daa
cmp
std
or
shll
mov
xor
jno
pop
xor
add
pop
add
cmp
repz
inc
hlt
xchg
enter
int3
data16
add
inc
add
rcll
mov
decl
loop
enter
xor
sub
inc
insb
incl
or
enter
and
lret
call
sbbl
loopne
sbb
sub
or
adc
icebp
cmp
push
cmp
sub
adc
sbb
dec
repnz
cwtl
sbb
add
fwait
sbb
les
mov
add
add
ret
into
add
inc
lods
mov
xor
aas
xchg
sub
or
and
sub
push
test
pop
push
cmp
inc
mov
rclb
daa
jle
dec
pop
xor
dec
mov
push
mov
and
jl
xchg
loopne
xor
mov
leave
js
jp
dec
notl
cmp
incb
xchg
repz
mov
add
ja
je
dec
sbb
stc
mov
inc
push
mov
dec
lods
jo
lods
rcr
sbb
ja
or
jb
rcrl
and
add
sbb
ss
adc
sub
adc
xchg
test
imul
daa
adc
pop
dec
adcb
push
xor
jmp
lock
adc
and
jnp
shr
repz
lahf
fcoms
or
push
ret
stos
xchg
jae
inc
pop
and
push
cmp
sahf
dec
mov
es
iret
pusha
sub
and
push
stc
push
movaps
std
adcl
sub
scas
cwtl
outsb
sbb
mov
aad
or
cmp
xchg
cmp
or
jne
push
cmp
outsl
push
stc
inc
adc
xchg
and
dec
ret
push
xor
aam
int3
frstor
sbb
fsubl
and
dec
in
mov
gs
dec
push
data16
dec
fs
pop
dec
loope
xor
sbb
hlt
call
clc
and
xor
and
push
fsubrl
jnp
inc
and
call
cmp
sub
mov
push
fs
out
mov
xchg
repnz
faddl
inc
daa
sahf
incb
out
pusha
inc
push
add
mov
dec
xor
lods
xchg
add
mov
xchg
mov
test
loop
sbb
mov
out
dec
idiv
add
je
push
call
push
push
cltd
pop
xor
xor
or
lods
fwait
bound
lods
jbe
mov
and
cmp
mov
fwait
push
push
sbb
daa
pop
ret
loope
aam
push
mov
pop
mov
scas
or
add
jle
mov
jmp
stos
or
enter
inc
push
cmpsl
fcomps
and
inc
or
roll
idiv
nop
sub
jno
and
or
inc
nop
fs
inc
ret
pop
and
dec
dec
stos
adc
push
and
pusha
push
shl
xchg
adc
jl
or
jp
pop
call
test
sub
sbb
cmp
add
cltd
adc
sub
push
fmuls
inc
cmp
ret
jns
insl
mov
cmp
imul
mov
mov
inc
inc
push
mov
aam
sub
cmp
sti
mov
mov
jnp
xchg
push
mov
call
jmp
sub
pop
add
shll
cmpsl
xor
dec
push
add
jmp
dec
adc
mov
add
and
sbb
cwtl
popf
push
push
sub
inc
push
fwait
data16
dec
adc
pop
jmp
ret
movsl
or
mov
mov
sbb
dec
jl
lock
or
pop
cmpsb
and
pop
xor
adc
push
lock
hlt
into
mov
mov
xchg
add
mov
adc
pop
push
xor
test
sbb
aad
call
mov
test
ret
outsb
jecxz
sbb
imul
and
popa
push
jne
inc
aam
lock
js
sub
mov
adc
jmp
mov
jecxz
mov
mov
sbb
lods
fimull
xor
rcrl
jmp
xchg
adc
cltd
dec
cmp
and
cwtl
xchg
mov
es
xchg
push
cwtl
scas
call
test
cmp
xor
inc
or
xor
sub
test
pop
clc
movsl
xchg
push
and
sub
jae
cmp
and
je
test
fucomp
jmp
ss
sbb
and
in
xor
push
sbb
je
adc
and
adc
rcrb
push
sbb
aaa
push
out
xchg
cmpsb
pop
cwtl
dec
jp
and
mov
mov
cmp
popf
xchg
ljmp
outsl
mov
ret
leave
mov
cmp
in
xchg
adc
jne
mov
mov
mov
and
or
jne
xor
sbb
push
les
jle
xor
jnp
pop
fstcw
cmp
sub
jne
adc
stos
cmp
cmpb
inc
or
call
mov
sub
sub
or
adc
xchg
mov
cs
adc
pop
inc
bts
or
repz
aaa
mov
and
inc
bt
jae
icebp
mov
pop
cwtl
push
mov
imul
mov
call
mov
imulb
inc
imul
adc
and
ret
add
xor
jmp
xchg
stos
shl
sub
pop
jb
or
and
adc
sbb
lret
cmp
jne
mov
xor
or
je
push
jb
enter
mov
subb
and
fnstcw
pcmpgtw
push
lods
pop
mov
ret
add
xor
xor
call
test
pop
pop
sarb
stos
ret
or
pop
mov
test
dec
popa
cmp
sahf
sub
and
dec
or
jne
call
in
and
adc
call
xchg
xor
frstor
xchg
push
dec
sbb
sbb
test
ficoms
lret
int3
ret
jnp
sub
decb
adc
pop
js
stos
inc
cwtl
shll
ljmp
jge
inc
adc
mov
push
push
push
pop
mov
pop
int3
call
in
cmp
call
jb
push
pusha
mov
lds
jg
clc
jmp
divb
repz
stc
mov
cli
cmp
mov
test
mov
pushf
and
cwtl
test
mov
pop
add
add
pop
sub
or
push
sbb
dec
and
mov
inc
sbb
ds
cwtl
jecxz
cmp
aaa
or
loopne
mov
xlat
adc
test
push
or
fs
sbb
sub
mov
sti
xor
push
or
inc
cltd
int3
rclb
out
mov
shld
push
or
pop
cmc
add
je
int3
push
and
pop
js
outsb
jno
xor
ds
sub
add
je
or
jmp
faddp
or
fsubr
inc
push
lea
adc
jmp
adc
aad
xchg
xor
mov
xor
je
push
and
gs
and
add
and
adc
pusha
je
call
insb
cmpb
pop
mov
pop
pop
add
pusha
mov
dec
jp
dec
out
daa
pop
adc
inc
xchg
pushf
movsl
addb
loop
dec
push
ficomps
rcrl
sbb
leave
call
stos
mov
adc
insl
push
mov
mov
or
rcll
adcb
sbb
mov
daa
and
jg
mov
add
scas
iret
add
cmp
cmp
ja
sbbb
je
push
test
pop
pop
out
ret
jne
lea
dec
testl
push
push
pop
sbb
daa
jge
bound
sbb
mull
push
cmp
pusha
sbb
popa
in
push
push
gs
sbb
mov
push
dec
inc
pushl
and
push
imul
jecxz
int3
push
jle
jmp
in
orl
ret
inc
adc
or
xor
scas
push
test
jmp
xor
inc
lret
jecxz
or
filds
and
mov
das
jle
stc
xor
push
arpl
add
dec
cld
cmpl
add
roll
ret
lret
inc
cs
imulb
or
int
push
std
fs
push
stos
xor
scas
adc
inc
mulb
cmp
rorb
jle
jle
popa
fstpl
jne
int
sahf
push
insl
addr16
fs
add
mov
stos
or
sub
mov
popf
pusha
loopne
or
je
mov
mov
push
push
or
dec
or
or
mov
jp
inc
out
mov
shl
shll
pop
ret
pop
lret
dec
stos
inc
push
shr
shlb
sbb
sub
fcomip
outsl
test
arpl
jne
outsl
and
ljmp
in
or
xor
adc
xor
je
cmp
in
leave
add
inc
inc
pop
inc
mov
cld
push
or
dec
mov
ljmp
xchg
mov
push
xchg
in
xor
adc
dec
xor
sbb
push
cwtl
outsb
repz
xor
mov
xor
xor
xchg
ret
push
push
sbb
mov
fisttpl
push
dec
shl
dec
push
push
and
repnz
or
ficomps
jl
push
lahf
scas
leave
pushf
pop
sub
roll
xchg
lret
pop
daa
arpl
or
lods
scas
dec
popa
push
lods
call
adc
fbstp
lcall
fdivl
insb
shll
test
popa
in
pop
mov
lahf
lcall
or
push
pop
cli
dec
add
mov
pop
movb
lea
add
jle
mov
and
adc
les
cmp
inc
movsl
fcoms
xchg
test
movsl
repnz
jbe
pop
adc
sbb
aas
and
push
inc
testb
inc
cmpb
xchg
dec
add
jns
add
cmpb
add
push
imul
sar
mov
jge
mov
sbb
jle
cltd
mov
stc
fs
inc
data16
or
or
add
pop
mov
or
xchg
jl
push
inc
adcb
mov
sub
or
push
mov
dec
sub
subl
movsb
pop
ret
fiadds
adc
xchg
popf
incl
ljmp
lret
cmp
rorb
je
push
clc
mov
sti
adc
sbb
push
or
and
cmp
push
mov
jle
add
movb
inc
test
cli
push
mov
push
mov
sbb
jge
aaa
mov
testl
movl
jp
sbb
push
bound
adc
add
shrl
notb
inc
mov
mov
fwait
push
lea
bound
xchg
and
push
and
sub
ds
mov
push
and
inc
add
shll
sbbb
popf
mov
mov
xorl
loopne
push
leave
imul
push
shr
popf
adc
pop
sub
dec
lea
mov
cmp
xchg
cmp
inc
mov
sbb
push
xchg
test
sub
push
and
lds
daa
ficoms
inc
flds
decl
xor
fmul
xor
cmp
sbb
stos
push
mov
add
dec
fcomps
sti
cli
add
push
pop
xchg
mov
push
clc
mov
rclb
cmp
jae
sbb
ja
push
sub
inc
sbb
lock
xor
pop
ret
jge
in
adc
xchg
ss
cmp
enter
jo
push
inc
adc
cmp
popa
pop
movsb
decb
pop
xor
inc
je
mov
sarl
push
imul
popf
add
mov
aam
or
push
movl
sbb
popf
fcoms
test
mov
and
mov
and
jne
ror
push
ret
rorl
loope
pop
test
xchg
movl
insb
js
sub
pop
mov
ret
cmp
jne
ja
inc
aas
adc
lods
adc
inc
ds
or
push
das
jg
inc
mov
cld
push
sub
jl
dec
cwtl
push
arpl
sbb
inc
mov
inc
sub
sub
pop
call
fisubrl
pop
cli
inc
push
inc
lcall
pop
and
out
adc
aad
pop
ret
cmp
std
and
orb
sbb
pop
pop
mov
jbe
mov
roll
loopne
inc
xor
icebp
idiv
pop
scas
insl
int3
sahf
rcrb
out
pushf
xor
cmpsl
adc
loopne
jae
cmpb
adc
neg
or
jg
test
ja
stos
add
lea
sub
adc
ficoms
add
xchg
inc
fs
and
sbb
in
or
add
hlt
movsl
push
cmp
jmp
push
fwait
daa
aad
pop
fucomp
outsb
xchg
jo
mov
add
and
out
xor
lahf
jmp
mov
test
cmp
pop
test
inc
mov
test
inc
and
test
and
push
and
push
call
cmp
cmp
dec
gs
add
mov
stos
daa
add
sbbb
adc
jo
sbb
jmp
or
cmp
aaa
xchg
mov
out
mov
xor
popa
fstpt
ja
or
lcall
ljmp
fwait
mov
dec
push
dec
mov
js
pop
adc
mov
shr
push
mov
and
std
test
xchg
int3
fs
mov
fsts
sbb
or
adc
xor
cmp
mov
nop
cwtl
cmp
jb
dec
jmp
jb
push
jge
push
mov
test
mov
std
sub
add
mov
pop
je
es
into
push
push
leave
xchg
add
xor
sub
jo
xchg
inc
adc
sti
int
dec
xchg
popf
mov
push
divl
inc
call
jmp
lcall
push
push
mov
and
adc
adc
push
mov
push
ret
je
xchg
int
jo
call
ds
sub
call
sarb
jmp
add
int3
adc
jmp
adc
push
add
push
pop
pop
movsl
nop
xchg
push
push
loop
dec
and
imul
mov
adc
into
cmp
jl
or
jp
inc
loopne
add
inc
mov
push
lea
cmp
adc
lea
dec
lea
adc
pop
pop
or
aas
sti
lahf
and
rolb
xor
or
dec
dec
or
out
test
mov
lahf
and
or
or
jb
adc
in
pop
ficomps
pushf
insb
adc
enter
mov
adc
loope
addr16
push
or
fcomps
push
xchg
lds
rcrl
aaa
inc
jno
inc
and
sarb
fwait
std
lock
test
lock
mov
pop
sbb
dec
lock
jmp
cmp
roll
or
inc
push
stos
push
sub
clc
adc
push
fisttps
mov
mov
inc
or
adc
sarl
into
and
pop
aaa
cmp
add
pop
add
sbb
inc
loope
bound
stos
stos
jmp
jne
adc
or
adc
call
repnz
push
inc
push
inc
mov
pop
daa
jl
cwtl
aad
mov
push
xlat
mov
cmpsl
push
inc
movb
js
inc
pop
arpl
or
cltd
or
mov
sbb
jle
mov
cli
jb
dec
or
sbb
fnstcw
lret
jge
daa
lea
shl
gs
push
push
inc
mov
xor
and
or
dec
jnp
pop
jecxz
popf
xor
pop
cmp
pop
and
cmc
mov
je
rorb
jge
insl
inc
fisttpl
adc
adcl
les
lea
and
xchg
xchg
mov
nop
mov
sbb
adc
add
lret
ljmp
mov
shl
and
pop
and
pop
mov
jae
cmp
jne
xchg
adc
cmp
push
push
test
sbb
xchg
repnz
div
test
adc
rcrl
dec
popa
cs
js
mov
fucomi
ljmp
div
xor
push
lcall
shll
arpl
push
ja
ret
pop
pop
sbb
dec
mov
push
inc
and
inc
sbb
push
es
push
sbb
icebp
and
or
enter
or
cmpsb
arpl
loop
iret
jbe
sub
mov
ficoml
add
mov
jle
das
adc
sub
dec
inc
add
sub
jno
sub
jl
xchg
dec
xor
mov
and
es
dec
sub
stc
repnz
pop
inc
push
push
jne
mov
pusha
std
inc
pop
adc
and
mov
pop
cmp
test
test
jo
js
push
push
mov
jecxz
fsts
mov
in
gs
stos
dec
xlat
add
add
lock
lcall
inc
repnz
pushf
aaa
movsb
orl
or
and
mov
push
inc
xchg
push
adc
scas
stc
enter
nop
test
push
push
das
pop
pop
sbb
mov
aam
mov
and
add
rcll
and
popa
shr
fsubrs
and
lods
xor
sbb
fmuls
jo
inc
mov
or
xor
js
adc
call
sbb
cmpsl
inc
insb
gs
adc
cmp
je
jmp
mov
or
or
decb
sbb
xlat
or
mov
stc
dec
mov
xchg
sub
sar
mov
out
mov
cmp
test
xlat
mov
jl
jg
repz
sti
or
add
inc
adc
push
push
add
call
jp
add
cmp
les
jmp
push
and
lea
inc
or
cmp
add
and
xor
ret
movsb
popfw
inc
subb
push
push
push
lcall
lds
dec
inc
sahf
pop
and
stc
ret
lcall
inc
je
add
pop
std
iret
ds
pop
cltd
cmp
les
sub
iret
orl
inc
mov
bound
outsl
inc
xchg
adc
or
fwait
stc
xchg
fbstp
xor
out
cld
dec
inc
imul
cmp
mov
test
pop
shr
xchg
inc
adc
pop
mov
jg
imul
addr16
or
gs
xor
pop
inc
push
cltd
mov
ljmp
jne
dec
sub
push
ja
outsb
pop
xor
in
sub
mov
std
outsl
jo
and
and
daa
add
pop
cmpsl
pop
add
dec
gs
cmp
mov
and
ret
xor
cmp
push
inc
cmp
jb
repnz
mov
lock
outsb
xchg
or
in
les
stc
sbb
outsl
adc
popf
push
xchg
fisubs
cmp
add
mov
jo
sbb
mov
leavew
movsb
dec
or
call
cmpsl
dec
xor
stc
adc
jbe
sbb
add
dec
push
mov
lahf
inc
aaa
mov
xor
xchg
add
and
jbe
aam
lds
dec
imulb
xor
mov
mov
mov
out
jb
out
pop
lret
dec
imulb
sbb
push
rep
mov
push
and
mov
ss
sbb
test
xor
mov
pop
push
call
xchg
jmp
mov
inc
loope
dec
cmp
fwait
or
hlt
xor
adc
cmpsl
fs
loopne
shrb
mov
dec
pusha
adc
dec
mov
jb
mov
cmp
ds
or
jae
xchg
repz
das
or
jp
and
cmp
mov
push
mov
cmpb
call
int
push
xor
imul
push
cmp
ja
mov
xor
adc
pop
or
adc
fildl
mov
pop
add
adc
jg
jb
cld
push
in
pop
push
sub
jl
fcoms
jne
mov
addl
push
jle
and
sti
sub
out
sbb
push
or
push
loopne
cld
out
shrb
add
sti
mov
pop
or
jne
dec
ss
push
fcomps
enter
mov
push
dec
sbb
xlat
in
frstor
sahf
adc
add
pushf
and
xchg
jg
lea
xchg
xor
or
or
fisttpl
xchg
jmp
mov
fdivrl
add
push
push
dec
mov
sbb
cs
cwtl
inc
and
out
jmp
shrl
mov
xor
mov
xchg
fwait
push
sbb
adcl
inc
in
and
dec
xchg
add
sarb
ret
cmpb
and
xor
mov
push
sbb
clc
lods
add
ja
sub
mov
aas
bound
cmp
hlt
inc
or
sub
fcoms
pushl
xchg
xchg
mov
jne
orb
dec
add
loopne
stos
pop
int
repnz
xor
mov
adc
pop
mov
nop
add
cmpsb
add
lcall
or
sbb
sub
lea
jb
and
jge
test
or
add
mov
mov
sub
mov
es
mov
inc
rcl
inc
jmp
in
test
push
adc
lea
inc
sbb
bound
test
add
fcmovnu
jno
rorl
dec
rclb
daa
stos
movsl
icebp
dec
out
mov
cs
fcmovnbe
pop
repnz
xor
adc
or
pusha
mov
jne
and
sbb
dec
loope
cmc
int3
decb
test
mov
jne
or
mov
aad
in
add
imul
je
scas
pop
xchg
dec
movsl
pop
inc
xor
mov
inc
jmp
test
jne
sbb
push
mov
movsb
int3
inc
cmpb
adc
pop
xor
or
cmpsb
and
sub
clc
inc
pop
cs
and
sbb
inc
or
push
xor
xchg
pop
xor
pop
cmc
repnz
inc
ds
rcrl
into
testb
inc
je
test
add
and
adc
push
push
sub
dec
stc
dec
or
push
out
mov
inc
mov
fimuls
dec
and
push
xchg
aaa
sub
mov
or
mov
push
or
call
sahf
rcrl
and
lea
jecxz
loope
push
mov
inc
jbe
imul
push
and
insl
jp
push
repz
add
xchg
shll
stc
sbb
das
xchg
lods
mov
ret
jmp
mov
inc
push
call
test
xor
inc
jmp
mov
insl
es
push
test
call
mov
push
in
cmp
shr
mov
aaa
xor
mov
sub
dec
clc
decl
and
mov
sub
icebp
dec
icebp
mov
jl
scas
jb
jle
push
lock
loop
adc
mov
cwtl
and
or
mov
pop
push
xchg
xchg
cli
sarl
jne
sti
aam
lds
pop
std
or
inc
inc
imul
repz
adc
push
mov
inc
dec
adc
insl
movsb
mov
push
push
adc
mov
jp
std
ljmp
les
push
jmp
push
pop
sarb
test
leave
sbb
aas
mov
xor
adc
push
lds
pop
scas
mov
push
dec
repz
cmc
push
and
fs
test
shl
pop
je
push
adc
out
mov
jae
adc
push
cmp
fs
testb
push
and
mov
loope
jne
data16
add
lods
pop
lcall
or
push
xor
adc
ljmp
xchg
ficoms
dec
inc
fst
and
xor
and
add
xchg
mov
fwait
sub
js
xchg
adc
jp
orl
arpl
mov
fdivr
mov
out
xchg
dec
enter
insb
dec
mov
or
mov
and
pop
mov
mov
mov
pop
jg
cmc
into
or
xchg
inc
pop
dec
pop
cltd
add
push
push
push
push
xchg
dec
jns
and
out
mov
add
mov
js
ss
cmp
lock
add
cmp
xchg
mov
cmpsl
sub
jmp
or
les
pop
mov
test
stc
cli
push
imul
xor
add
push
sahf
or
jmp
cmp
mov
lds
les
jb
push
dec
inc
add
scas
sub
xchg
cmp
into
sbb
lcall
and
repnz
push
mov
mov
push
inc
xchg
jbe
mov
inc
xor
pop
fmull
adcb
and
testl
and
sub
inc
test
lahf
adc
mov
cli
add
or
jne
xchg
fwait
jp
sbb
sbb
wrmsr
jmp
add
mov
data16
adc
and
insl
xchg
jbe
pop
xchg
stc
lret
adc
out
push
dec
push
scas
rorl
inc
sti
rcr
or
jae
das
or
and
xor
sub
mov
and
loop
out
add
testb
or
mov
loopne
enter
mov
sub
add
mov
xor
sub
add
nop
insb
jno
xor
add
inc
xor
jecxz
hlt
xor
jle
xor
xor
pop
adc
cmp
or
push
and
fwait
or
push
test
adc
leave
add
sbb
add
cmp
pop
inc
or
or
and
or
or
pop
dec
push
inc
jmp
xchg
or
cli
adc
pop
adc
adc
pop
or
jne
js
out
repnz
subl
cld
in
or
dec
ret
idivb
sub
jle,pt
scas
je
mov
push
mov
mov
or
dec
int
dec
leave
jg
fldcw
cmp
scas
jbe
sbbl
push
inc
call
adc
out
cmp
or
mov
or
clc
popl
lds
imul
mov
jbe
jl
pop
jecxz
outsl
test
adc
inc
loopne
addr16
or
add
fiadds
xor
push
ficompl
pop
repz
icebp
sub
inc
enter
push
out
xlat
inc
xchg
push
push
dec
push
leave
mull
inc
push
in
das
sbb
mov
pop
add
lock
jne
aaa
pop
clc
adc
jle
test
mov
adc
mov
and
push
adc
call
ret
in
xor
and
out
and
pop
or
or
and
adc
in
sbb
push
pop
xchg
insb
mov
xchg
or
sbb
gs
inc
xchg
and
sub
inc
cs
push
ljmp
mov
aad
test
jae
jp
pop
adc
movsb
sub
xor
es
push
jl
js
mov
movsb
mov
jmp
call
imul
mov
push
push
add
mov
mov
jl
sub
sar
mov
cs
adc
mov
les
xor
leave
adc
mov
xor
icebp
iret
xchg
mov
pop
add
out
adc
sub
dec
pusha
or
inc
out
mov
mov
cli
je
lcall
not
and
adc
or
lret
leave
push
lea
sub
cmp
call
sti
or
xor
inc
std
loop
test
sbb
pop
mov
dec
lahf
sub
sub
mov
je
scas
call
dec
or
pop
pop
xchg
in
adc
xchg
push
xor
inc
and
inc
sbb
or
or
fisubrl
add
stc
loopne
seta
pushf
pop
push
ffreep
xchg
add
dec
and
lret
imull
jae
sub
add
cmp
mov
mov
adc
out
ljmp
jne
push
or
xor
pop
aaa
dec
adc
int
inc
jmp
adc
cmpsl
dec
inc
call
dec
jmp
jle
daa
ret
lret
sbb
inc
mov
sbb
adc
and
and
and
and
and
test
sbb
fs
adc
jb
or
rcrl
xor
and
and
ja
jmp
pop
dec
pop
pop
repnz
test
push
and
orl
jmp
fsubrs
lods
gs
mov
sub
mov
jmp
or
or
stc
aam
adc
adc
sti
sbb
jp
jp
ds
mov
push
jle
sbb
pop
ds
mov
andl
daa
rep
pusha
and
inc
inc
inc
push
add
call
push
pop
mov
and
mov
sti
and
sbb
scas
xchg
clc
jne
pop
nop
or
and
pop
push
arpl
fidivl
push
test
inc
xor
call
inc
cmc
loop
mov
js
div
lods
ret
clc
and
stc
add
das
pop
test
pop
pop
daa
sete
sbb
mov
mov
or
push
call
add
jmp
fistpll
popf
jg
mov
dec
and
cmpsb
rcl
fsubs
fisubrs
jo
or
add
sbb
in
rorl
mov
mov
inc
inc
add
gs
mov
add
mov
gs
and
mov
xor
pop
or
into
and
push
test
test
mov
sub
stos
and
pop
test
inc
daa
adc
mov
sbbl
in
add
les
aas
mov
insb
out
sbb
outsb
sub
shrl
ret
add
push
call
or
add
stc
pop
into
or
inc
xor
xchg
xchg
mov
or
xchg
pop
pop
xchg
shlb
and
dec
std
out
mov
jmp
jae
add
shll
cmp
add
xor
push
jge
push
mov
test
je
xchg
mov
mov
push
sbb
add
sbb
jg
aas
sbbl
sbb
dec
mov
test
adc
addr16
and
push
mov
jmp
lcall
sub
enter
out
nop
sbb
sub
xor
xor
movsb
xchg
cmp
push
aam
mov
addr16
push
imul
test
jbe
sarl
xchg
fstp
repz
mov
insl
dec
movsb
xchg
sbb
jmp
and
jne
sub
jge
insb
or
inc
aam
daa
ficoml
fcompl
adc
push
add
jg
call
or
ret
test
nop
and
leave
mov
inc
dec
push
sub
inc
cmp
icebp
in
add
int
xor
shlb
add
pop
mov
mov
adc
sub
jbe
mulb
jmp
adcl
cmp
pop
and
leave
or
enter
mov
add
stc
pop
test
cli
scas
and
js
cmpsb
jb
adc
sbb
and
cmp
in
sbb
sub
xchg
cmpsl
push
sahf
sub
loopne
bound
and
cmp
pop
or
mov
push
jp
nop
stos
dec
push
stos
int3
mov
das
test
push
popa
ljmp
mov
push
popa
mov
jle
adc
test
jne
shl
test
xor
inc
add
add
loope
xchg
inc
je
push
xor
jge
std
cltd
sbb
sar
fsubrl
push
daa
push
sub
push
adc
mov
and
and
loopne
out
cli
inc
outsl
shlb
ljmp
push
movsb
mov
sub
loop
leave
jge
fdivr
mov
inc
das
scas
dec
jge
push
rcrl
pop
jge
fldcw
push
mov
mov
cmp
inc
xor
fwait
mov
icebp
mov
jl
sbb
sub
movsl
mov
enter
icebp
imul
jmp
sub
stos
inc
adc
or
cmpsb
lcall
lret
call
and
pop
loope
aas
cld
push
inc
jl
shr
mov
push
mov
sub
fmull
push
bound
pop
cmpsl
rep
outsb
push
jecxz
mov
clc
mov
lret
mov
idiv
xor
sbb
inc
cmc
push
mov
je
mov
enter
shll
jb
inc
adc
adc
lds
call
sub
add
push
jno
or
mov
xor
push
add
sbb
pop
adc
sbb
add
gs
or
out
jne
adc
rcl
sbb
daa
mov
test
lcall
push
push
dec
mov
cld
lock
jge
push
imul
ja
sbb
sbb
push
adc
and
add
std
inc
pop
push
out
push
pop
loopne
lret
pop
lods
lods
cmp
in
fldl2e
das
fmulp
xchg
cmp
shl
imulb
inc
je
or
cmpl
adc
sti
test
outsl
rcl
or
mov
dec
cmc
add
fdivr
pop
pop
loopne
jmp
out
cmpsb
in
or
cwtl
cmp
cmp
mov
cs
push
inc
clc
or
jge
sarl
xchg
push
je
inc
addl
sub
cld
pop
inc
mov
loope
fstpt
lock
xlat
jb
pop
jmp
repnz
dec
cwtl
mov
or
push
sbb
cmp
pop
jbe
call
data16
pop
mov
test
popf
insb
adc
jbe
bswap
cmp
les
cld
call
pop
movsl
les
imul
sbb
cmp
popf
pop
lds
mov
fildll
stc
jb
fldl
fldcw
in
aaa
test
scas
jnp
sub
mov
sub
pop
jne
test
test
jmp
add
fldl
inc
add
xlat
pop
adc
loope
mov
jae
or
sub
ds
mov
xchg
xor
adc
incb
add
pop
xchg
cmpsb
cli
iret
jae
movntq
out
mov
repnz
pop
test
mov
mov
and
popf
xchg
fnsave
mov
loope
stc
adc
sti
mov
xlat
xchg
or
lea
add
jmp
data16
aas
adc
scas
aad
andb
fstpl
lods
movsb
jae
imul
loopne
faddl
mov
sbb
fstps
or
add
les
enter
push
call
xor
sub
mov
push
or
leave
dec
inc
jmp
fs
and
loope
mov
xchg
and
loop
adc
dec
lret
pop
in
or
insb
or
imul
mov
dec
movsl
dec
cs
xor
mov
mov
add
adc
jg
jg
inc
aaa
push
pop
aas
rorb
enter
loope
and
or
fldt
hlt
or
hlt
nop
dec
inc
pop
add
pop
movsb
inc
call
or
add
or
cmp
cld
dec
and
cmp
inc
addr16
fsts
pusha
add
and
inc
add
xchg
or
test
dec
and
sub
pop
xor
push
mov
or
jno
shr
jne
xor
iret
push
push
sbb
loope
call
sub
jp
fs
sub
jmp
mov
insb
jmp
cmp
sub
add
jne
dec
imul
sbb
sub
out
pop
sub
jnp
pop
push
jmp
cmc
dec
lods
adc
push
scas
jne
push
push
roll
pop
sahf
jo
rorl
inc
sbb
mov
add
ja
mov
cmpsl
xlat
add
push
push
and
adc
mov
subl
icebp
je
inc
push
sbb
jge
mov
cmp
add
or
xor
lods
sub
push
outsl
dec
inc
rclb
pop
cmp
movsb
cld
sbb
call
add
sbb
jmp
push
je
cmpsb
mov
xor
inc
stos
ljmp
sub
insb
and
in
add
fimull
inc
add
shl
add
cli
lock
adc
dec
sub
push
or
lret
mov
or
shl
sar
nop
or
not
or
shll
ret
pop
inc
clc
insl
sbb
mov
sbb
jmp
and
push
and
or
mov
push
push
insb
not
stos
xor
rcl
loopne
mov
jae
push
push
aam
pop
sbb
ret
dec
js
dec
and
in
xchg
jmp
faddl
test
out
test
push
jge
rorb
push
std
mov
lea
stos
lods
mov
jle
push
inc
dec
lds
adc
push
repnz
loop
add
jb
mov
mov
cmpb
adc
push
je
inc
adcb
xchg
fsubl
mov
mov
adc
sarb
push
test
and
mov
mov
sub
cmp
stos
js
daa
mov
rcl
lods
lahf
adc
stos
jb
push
test
mov
mov
dec
xor
and
push
push
ljmp
xcrypt-cbc
cmpsl
push
inc
xchg
paddsb
pop
adc
push
pop
call
adc
push
adc
dec
cld
xor
push
dec
push
sub
sub
mov
fistl
cli
jge
ja
sarl
push
call
add
xchg
mov
iret
sub
out
or
addr16
jecxz
mov
dec
fidivs
adc
mov
xor
popf
pop
or
sbb
aas
inc
shrl
loope
xor
int
and
call
test
sub
jmp
mov
mov
and
sqrtps
jmp
jmp
sub
push
mov
add
sub
jmp
aas
orb
loopne
les
jg
push
sti
add
out
cmp
sbb
pop
and
popa
push
fisubrl
ss
adc
adc
mov
or
mov
adc
out
jg
insl
push
and
or
adc
cmp
shlb
icebp
mov
xor
popa
dec
jno
sub
rcll
out
jb
sbb
call
sarb
add
xchg
std
fcoml
je
add
inc
add
fiaddl
repnz
jge
pop
xchg
mov
fimull
fdivrs
sub
xchg
mov
dec
push
in
inc
dec
xor
push
push
gs
aas
xor
and
ja
decb
adc
jl
xor
and
add
or
jnp
outsb
sbb
enter
cmp
pop
addl
dec
adc
adc
dec
push
xchg
repz
adc
jg
push
push
xor
popf
cld
xor
or
and
xor
and
pop
sar
push
mov
mov
adc
test
std
cmp
or
xchg
dec
out
jo
pop
mov
stc
push
and
cwtl
bound
fldcw
or
jg
dec
jb
pop
mov
xor
stc
lea
jge
fmul
pop
xor
jle
jle
add
adc
inc
mov
mov
out
addr16
imul
cmp
push
lock
sbb
jne
xor
cmp
ja
jge
xor
mov
mov
std
mov
jns
sub
push
jb
cmp
bound
adc
adc
sub
out
out
les
sub
adcl
and
inc
pop
movswl
adc
mov
add
xorb
xchg
fldenv
pop
fs
push
xchg
cld
adc
add
rorb
mov
out
out
sbbl
sub
fbld
lret
cmp
push
lea
adc
xor
loop
cs
dec
out
out
sub
dec
add
jne
mov
add
cli
add
shr
or
add
adc
and
rorl
and
cs
loopne
cmp
cmp
sub
xchg
adc
sbb
sti
xor
add
xchg
mov
mov
insb
shll
cmp
push
sub
push
add
stc
sbbb
sub
aad
idivl
dec
mov
pop
xchg
mov
xchg
jge
imul
and
test
movsb
xchg
bound
jmp
dec
sub
or
and
push
fwait
stos
jecxz
daa
add
add
repz
pop
movsb
push
push
mov
ljmp
cltd
xchg
dec
mov
es
sub
push
mov
add
ror
sub
je
dec
jecxz
adc
mov
fadds
inc
jbe
movw
push
popf
push
inc
in
mov
cmpl
cwtl
sbb
jne
xchg
adc
push
stos
negb
cmpsb
loop
dec
shl
fistps
dec
aas
movsl
adc
inc
sub
ficoml
jle
pop
pop
pop
loop
imul
push
inc
mov
in
dec
xchg
mov
push
sub
sti
mov
xchg
mov
stos
push
or
push
xchg
xchg
dec
sub
jae
jl
fildll
pop
fldcw
scas
cmp
push
inc
pop
or
pop
dec
push
shrl
in
aas
mov
jecxz
push
push
push
pop
dec
dec
sub
fcoml
movsl
fs
sahf
mov
cmp
pop
lahf
and
sub
test
adc
movsl
lret
jmp
nop
fmul
pop
push
pop
mov
sbb
shrd
dec
push
cmpsb
jmp
fldcw
cwtl
adc
lcall
lahf
inc
cld
pop
mov
call
js
cmp
jns
xchg
mov
ja
insb
rcrl
push
jg
pop
shr
mov
push
decl
bound
xchg
aad
sub
jmp
or
inc
jne
sbb
test
mov
or
nop
cmp
dec
lret
filds
cmp
xchg
pop
adc
into
and
pop
popf
inc
and
pop
movl
les
lea
pop
add
mov
out
sub
in
in
mov
in
enter
dec
and
das
push
sbb
mov
jns
pop
movsb
sbb
movb
sar
cld
aad
and
push
push
push
sbb
call
xchg
movsb
sub
or
insb
push
lret
ret
sub
mov
mov
add
mov
pop
cmp
roll
mov
rclb
rolb
mov
push
lret
or
icebp
cmc
jl
divb
push
jmp
and
inc
or
pusha
or
cmp
cmp
sbb
cmp
cmp
clc
in
fcom
cltd
inc
adc
ret
adc
jle
and
jae
add
leave
mov
inc
pop
push
not
push
push
lea
rcrl
sbb
idiv
mov
sub
das
es
outsl
shlb
fdivp
or
call
and
ljmp
cmp
push
shrl
jmp
and
cwtl
push
xchg
cmpsl
jbe
inc
inc
push
mov
in
adc
sbb
dec
das
fildll
mov
push
and
or
jbe
mov
call
and
adc
mov
dec
jmp
mov
lea
lods
adc
mov
pop
scas
inc
or
daa
insl
into
imul
aad
push
sub
cmp
or
daa
add
mov
int3
push
gs
push
jo
mov
cmp
inc
ret
fimull
add
scas
adc
pop
adc
sbb
jmp
test
adc
movsb
enter
jo
ja
mov
inc
push
adc
test
mov
pop
mov
loope
sub
ror
dec
pop
es
mov
sbb
movsl
insb
dec
cwtl
xor
push
xchg
dec
lods
test
enter
push
or
pop
cmp
clc
loope
jg
sbb
mov
and
adcl
std
cmc
leave
cld
jmp
adc
mov
xchg
cmp
in
cmc
or
daa
or
pop
mov
or
push
test
fdivrp
ret
shl
cmpb
jne
xchg
jns
cmpsl
mov
pop
pusha
fnstcw
mov
or
mov
and
sub
sub
or
pop
fmuls
leave
or
inc
sbb
mov
mov
xchg
decb
push
xchg
imul
je
pop
lcall
jae
push
fsubr
jecxz
ret
fildl
push
fwait
push
mov
fdivrs
sub
xorb
xchg
popa
pop
fmuls
int
xchg
or
daa
pop
lret
mov
cmp
adc
mov
ret
out
flds
or
sti
sbb
push
aad
mov
aaa
fs
push
push
lcall
fisubrl
test
movsl
and
fwait
pop
fdivrl
lret
scas
cwtl
cmpsb
aas
inc
mov
js
mov
roll
pop
inc
insb
and
adc
lret
pop
cmp
inc
inc
es
movsl
and
push
sbb
cld
push
sub
inc
loop
jb
lret
xchg
pop
push
enter
movsb
inc
int3
enter
addr16
mov
mov
aas
inc
push
js
mov
sarl
pop
sub
int3
pop
dec
rorb
movsb
fxch
or
lods
pop
testl
fdivrp
test
movsb
dec
aas
inc
sti
adc
sub
or
inc
lcall
orb
cmp
cmp
and
test
push
jne
push
sub
into
pop
push
faddl
into
cltd
movsb
iret
sbb
into
xchg
mov
push
pop
inc
and
aas
jle
dec
js
mov
push
stos
sbb
jne
aad
lret
cmp
adc
adc
push
jae
adc
fnstsw
sbb
scas
push
ret
add
xor
mov
idiv
test
cmp
adc
call
sub
push
or
fdivs
dec
pop
or
aad
dec
mov
inc
imul
pop
fisttpll
push
lea
adc
jns
push
das
mov
filds
dec
xor
fisttpl
sti
repz
and
pop
dec
add
lret
icebp
mov
pop
and
jle
js
decb
inc
icebp
sub
je
stc
std
jmp
clc
cmpsl
rolb
pop
push
xchg
cmpsl
cmc
xor
add
loopne
shr
or
pop
jle
shrb
bnd
or
inc
cs
lea
dec
sbb
aas
test
mov
cmp
loopne
xor
sub
sbb
sysenter
mov
sar
sub
pop
sub
mov
roll
lahf
ja
pop
cmp
or
pop
lods
loop
adc
adc
movsl
clc
test
sub
add
ret
jne
or
fildll
dec
sbb
xor
pop
cmp
ljmp
enter
cmpsl
ret
add
orl
loope
movsb
mov
rcll
pushf
mov
leave
fmull
sub
jne
mov
pop
sbb
sub
push
push
sub
push
jne
stos
xor
pop
cmp
sbb
adc
mov
or
shlb
cmp
rcrb
adc
adc
cli
pop
add
add
mov
stc
je
sbbb
pop
shr
mov
clc
jmp
push
push
cwtl
inc
sbb
sbb
rorb
lret
daa
call
xor
dec
pop
mov
mov
fwait
pop
or
add
dec
adc
je
and
lock
add
sbb
push
sub
jbe
sub
inc
aam
push
cs
shrb
mov
cmc
pop
cld
cmc
lea
lret
mov
lods
xchg
push
repnz
cli
and
push
xchg
push
dec
add
cmp
ja
aas
rcrl
push
mov
mov
call
shrl
ret
pop
push
push
nopl
repnz
or
sub
fisubs
dec
mov
scas
dec
outsl
es
aam
je
adc
inc
adc
cmc
mov
call
decb
fmuls
ds
das
pop
imul
inc
jecxz
lods
xor
adc
out
inc
adc
orl
adc
push
lcall
xchg
adc
and
add
cmp
and
push
add
outsl
cs
loope
imul
or
adc
mov
jle
push
xchg
sbb
lret
inc
into
jae
inc
mov
aaa
adc
or
out
aaa
xchg
call
sbb
loopne
dec
pushl
shl
push
push
sbb
lea
push
hlt
lods
mov
push
jp
mov
popa
adc
sbb
lock
wrmsr
mov
push
cmp
xor
xor
js
je
add
mov
psubsw
or
int3
dec
pusha
xlat
jo
add
ljmp
cmc
and
push
jle
iret
pop
bnd
stc
shl
cmp
or
mov
sbb
ljmp
pop
rcrl
psadbw
add
push
cmp
mov
cs
or
leave
mov
imul
jg
mov
xor
jle
ret
call
in
dec
or
cmp
and
sbb
adc
test
movsbl
in
xchg
fwait
jne
or
push
test
xor
dec
or
cmp
aad
cmp
repz
enter
dec
scas
dec
cs
cmp
shrb
mov
int3
push
je
aam
mov
ret
jne
inc
push
and
fistpll
je
mov
mov
pop
pusha
mov
lea
cmc
out
adc
or
stc
sbb
outsb
iret
xchg
inc
pop
sbb
cwtl
stos
xor
or
cmp
cmp
sub
or
jmp
dec
cmp
stc
sbb
or
mov
or
jmp
mov
xchg
adcb
rcll
jae
pop
out
cmpl
or
or
adc
lods
out
test
test
mov
leave
imul
push
jbe
adc
mov
test
mov
imul
or
adc
inc
mov
dec
lods
xor
jbe
pop
les
adc
adc
leave
mov
mov
std
xchg
mov
lea
sub
xor
scas
jbe
jle
in
push
sbb
test
sub
mov
or
mov
add
mov
outsl
mov
sarl
fistps
insb
repnz
les
leave
xchg
outsl
rolb
mov
je
popf
movnti
or
shll
push
push
les
inc
or
fdivrl
pop
mov
call
or
mov
push
mov
loop
out
dec
push
je
inc
sub
rclb
out
adc
mov
mov
imul
xor
imul
add
xchg
push
cmp
add
leave
xchg
mov
inc
paddq
inc
add
xor
or
sub
aas
push
and
cmp
cmp
or
mov
data16
daa
sbb
xor
sub
inc
mov
movsb
cmp
shll
push
push
fs
pop
ja
hlt
sub
dec
adc
pop
in
xchg
mov
cmp
in
mov
insb
movl
dec
sub
xor
push
lret
stos
xor
pop
je
leave
negl
lea
or
xchg
cmp
test
mov
jl
mov
test
pop
mov
mov
cld
push
dec
aam
or
aad
mov
lods
imull
sub
xchg
in
mov
dec
cmpsb
test
int3
popf
adc
and
aam
ret
and
ja
lea
xor
out
dec
push
mov
xchg
push
mov
add
sbb
je
push
or
push
popf
sub
jne
add
popa
mull
pop
mov
dec
push
hlt
xchg
lea
cmp
sub
adc
xor
stos
aam
mov
mov
push
nop
je
xchg
repz
xlat
scas
sub
shll
mov
jmp
stos
jg
and
push
je
add
into
xchg
push
popa
sarl
sub
out
and
push
sub
jne
xchg
mov
mov
xor
test
pushf
dec
out
inc
jb
fidivl
or
sbb
and
sti
mov
mov
inc
or
lahf
loope
and
cmp
pop
sbb
pop
ficompl
js
jmp
fcmovbe
adc
adc
mov
shl
xchg
aam
push
xchg
mov
loopne
mov
dec
and
adc
aam
enter
push
inc
xchg
pusha
adc
cmp
or
nop
and
sbb
inc
push
add
push
call
jp
in
mov
pop
je
lcall
pushf
mov
insl
cmpl
and
inc
mov
jo
int
cmp
add
dec
pop
cwtl
inc
push
and
fs
add
add
aaa
push
or
jg
add
push
add
cld
jnp
add
nop
push
sub
cld
xchg
add
cld
jnp
loopne
pop
lret
jbe
cmpsb
xlat
mov
or
dec
or
or
or
xchg
pop
push
xor
data16
mov
push
sti
or
loop
cmp
adc
sub
fnsave
cmp
jne
ret
divb
ret
fcmovnb
sub
mov
cwtl
cmp
or
add
ret
push
sub
dec
mov
inc
jmp
jmp
inc
dec
hlt
cli
leave
or
jg
jne
test
je,pn
das
mov
data16
adc
push
ret
mov
rcrb
out
sub
mov
je
dec
icebp
cmp
inc
into
and
jo
ds
sbb
xor
add
add
xchg
jl
xor
push
mov
cmpsb
xchg
iret
cmp
xchg
xchg
mov
ret
shr
test
mov
out
or
pushf
dec
sub
add
test
enter
sti
pop
cmpb
ss
inc
or
push
mov
sub
out
call
jmp
push
pop
rclb
add
sar
adc
or
fstpt
loope
sub
xor
lea
and
inc
call
mov
aaa
xchg
jp
sub
insb
xor
ljmp
scas
jmp
sub
add
sub
mov
mov
repnz
mov
call
or
jne
dec
sbb
pop
fisubs
jne
call
add
add
arpl
cmc
lds
jp
inc
das
cmp
and
call
mov
pushf
dec
es
loop
push
inc
movsb
pop
inc
cmp
int
das
inc
jle
pop
xor
sub
mov
or
jne
mov
xor
cmpl
addb
xor
ret
inc
data16
pusha
rcr
sub
pop
xchg
pop
call
leave
mov
jg
adcl
es
fcoms
add
and
xor
xor
sub
bound
fwait
stc
cmc
dec
movsl
push
into
cld
adc
push
inc
dec
jne
adc
or
ret
inc
jl
daa
fcmovb
gs
sub
inc
xor
dec
or
mov
sbb
dec
or
sub
push
mov
in
jle
mov
cmp
lea
inc
xor
out
dec
loopne
addl
fidivrl
mov
jg
daa
or
xor
or
ret
mov
and
inc
push
pop
inc
addb
xor
inc
out
cmp
fildll
movsl
or
sub
mov
sub
cmp
adc
das
int
push
cmp
adc
mov
test
xor
or
jle
pop
adc
nop
fistpl
pop
leave
sti
xchg
pop
cld
test
out
or
pop
push
push
push
imul
or
push
jle
or
stc
dec
and
mov
push
cmp
ficompl
or
adc
out
nop
xchg
push
jno
insb
ret
lret
xor
xlat
add
inc
dec
push
push
jg
adcl
mov
mov
xchg
xor
sub
mov
mulb
jecxz
jae
xchg
adc
mov
jg
bound
xchg
fnstenv
xchg
mov
pop
inc
mov
ret
xchg
push
lock
test
sub
push
stos
stc
or
pop
mov
pop
shll
lds
sahf
and
aaa
aaa
imul
in
fidivl
orb
sub
xorb
or
ds
adc
enter
lods
xchg
sbb
rorl
mov
cltd
mul
mov
ljmp
sahf
jb
and
jmp
or
sub
xchg
mov
or
pop
xor
fiadds
inc
add
cmp
inc
push
fldcw
fisubrl
push
lcall
daa
inc
or
sbb
mov
or
insl
jge
jmp
jp
mov
pop
xchg
push
ret
cmp
push
inc
dec
dec
repz
sti
pop
lods
bound
pop
int
add
cmp
push
cmp
fstpt
and
or
adc
and
and
repnz
mov
pop
or
in
int3
cld
inc
cmp
divb
repnz
or
inc
cmc
inc
inc
cmc
inc
out
fwait
dec
or
pop
push
and
popf
dec
lahf
cwtl
pop
adc
push
mov
dec
cmp
pop
fs
sub
sbb
inc
repnz
mov
push
pop
fs
inc
loop
bound
inc
pop
stos
lods
cmp
sbb
cmpsb
and
fldcw
lret
loopne
call
push
gs
lahf
loope
push
cltd
push
or
add
jmpw
enter
xor
or
xchg
adc
adc
or
xor
sbb
nop
inc
sbb
xchg
xchg
jge
mov
or
jg
jne
dec
cmp
stos
in
push
xor
aam
fmul
mov
insl
adc
xor
lret
adc
movsb
add
push
push
push
repz
cmp
outsb
icebp
adc
scas
mov
sbb
bound
push
push
repz
ret
negl
sbb
test
jno
movsl
dec
xlat
bound
cli
loopne
xor
add
dec
adc
in
jmp
fisubrs
mov
sbb
cmp
pop
adc
dec
icebp
in
lds
sub
cmp
das
je
adc
jo
mov
mov
and
repnz
call
mov
jmp
cli
jge
js
insl
mov
fs
sar
push
cmp
scas
cmp
arpl
das
es
mov
jp
sub
sbb
call
push
or
mov
clc
loope
cmp
push
cmp
scas
test
loopne
outsb
push
xchg
aam
adc
or
cmp
aad
dec
adc
daa
xor
jge
aaa
dec
sub
xor
movsbl
or
into
je
outsl
jmp
mov
and
pop
or
test
and
push
call
jns
insb
cltd
ret
lea
or
adc
mov
dec
fistpll
incb
sub
les
pop
adc
xor
mov
add
xchg
out
inc
sub
sbb
add
xor
call
or
and
ds
mov
dec
aas
lds
addr16
ror
cmp
sti
mov
and
ds
daa
pop
aad
lret
sbb
mov
fisubl
jmp
xchg
mulb
imul
jmp
inc
jg
xchg
xor
mov
and
jne
and
ja
xchg
or
push
aam
mov
jg
cmp
jge
cmp
push
jbe
popl
and
cmpsb
xchg
pop
xchg
std
push
fidivs
inc
sbb
sbb
or
and
les
mov
pushf
xchg
pop
push
fisubs
bound
nopl
scas
jbe
push
and
loopne
divl
lahf
hlt
loope
rcrl
inc
jmp
push
cli
stc
das
xchg
mov
xchg
and
push
std
das
out
je
jmp
xor
mov
clc
sbb
cmp
mov
bound
or
daa
hlt
pop
cmp
filds
xchg
pop
pop
dec
jg
xchg
push
jbe
adc
inc
add
jmp
xorl
ljmp
movsb
pop
cmp
lds
test
frstor
add
add
popf
jg
jne
pop
hlt
cmp
push
incl
fiadds
cwtl
sub
ret
out
add
xchg
cltd
je
rorl
pop
les
jl
mov
mov
aad
daa
in
push
add
dec
xchg
push
dec
test
pop
nop
and
pop
cld
push
clc
jne
dec
fdiv
inc
and
mov
jge
and
jl
or
imul
ja
xor
and
lahf
orb
sub
cltd
adc
sbb
rcl
push
sub
mov
jmp
addb
mov
mov
ds
pop
out
mov
ja
mov
or
push
cli
fdivl
push
nop
loope
adc
jge
add
je
mov
mov
xchg
lds
add
sti
add
jbe
lret
jne
cmp
sbb
mov
outsb
and
push
inc
sub
push
ja
decb
ja
les
repnz
mov
xchg
repnz
push
scas
test
jmp
cmp
stos
test
push
sti
or
dec
mov
lds
dec
jl
adc
and
push
decl
lds
adc
add
mov
sbb
xchg
or
inc
mov
inc
dec
pop
repz
nop
xchg
sahf
jmp
leave
adc
mov
mov
scas
mov
sub
daa
mov
sbb
cld
pop
bound
pop
ja
adc
inc
dec
idivl
fnstcw
xor
sbb
adc
leave
jg
xor
lret
pop
sub
ja
cs
and
mov
out
pop
push
mov
add
adc
movsl
mov
fsubr
ret
cld
loop
mov
dec
sahf
mov
jbe
xor
sbb
and
mov
and
push
test
sahf
adc
ret
fldz
inc
sbb
inc
aam
scas
subl
adc
cltd
lock
push
popf
or
dec
movsl
jmp
add
and
xchg
nop
and
mov
mov
test
pop
xor
outsb
xor
sub
gs
and
adc
fsub
pop
scas
mov
sbb
add
call
xor
pop
mov
cmc
lds
stos
mov
sub
dec
aas
inc
jae
cmpl
ret
inc
dec
and
jp
sub
movsb
cmp
adc
ja
or
mov
pop
aaa
push
xchg
push
and
ror
inc
inc
sbb
cltd
nop
fsubrs
sub
popf
cld
mov
mov
dec
call
and
call
or
sbb
popf
xlat
daa
xchg
add
add
outsl
std
adc
inc
loope
add
and
lea
lcall
out
hlt
add
imul
mov
xchg
push
adc
push
mov
cld
adc
adc
ss
int
cmp
dec
inc
push
and
adc
imul
jecxz
es
jbe
mov
cmp
das
cmp
or
iret
data16
scas
stos
adc
and
inc
mov
lods
sub
fwait
es
int
inc
jmp
inc
loop
lahf
push
jecxz
push
sbb
fdivrs
call
loop
movsl
and
test
aad
sub
ss
jp
rcll
push
mov
sub
lock
mov
or
dec
adc
loop
adc
cmp
ss
sbb
js
lods
mov
sub
and
test
inc
jmp
inc
filds
sub
push
lret
add
inc
cmp
and
arpl
add
outsb
icebp
ret
gs
dec
mov
and
dec
mov
adc
cmp
mov
inc
adc
cmp
xor
xchg
lret
mov
pop
xchg
rclb
dec
xchg
es
jne
mov
dec
inc
cmpsl
lret
adc
lods
aad
fldl
nop
and
jb
sub
adc
ret
sub
push
in
mov
mov
xlat
pop
push
out
dec
test
aad
and
inc
int3
out
or
addr16
fldln2
jne
push
icebp
pop
repnz
sub
and
leave
and
stc
jmp
dec
add
adc
cmpsb
ja
dec
test
xor
and
and
cltd
aad
es
jg
xor
or
lcall
push
or
adc
ret
dec
adc
into
pop
loopne
sbb
and
xlat
dec
popa
sub
je
push
out
dec
arpl
stos
mov
mov
outsb
int3
adc
xchg
call
inc
icebp
mov
xchg
jne
cmp
push
clc
push
jbe
shlb
hlt
pop
fcmovnu
push
mov
insl
push
clc
lods
push
pop
repnz
xor
pop
and
push
mov
movsl
rcrb
dec
and
and
inc
cmc
loopne
sub
call
cmp
cmpsl
sbb
arpl
int
add
enter
cmpsl
inc
mov
and
push
jl
ret
adc
dec
lahf
and
jns
xor
sub
jne
jb,pn
and
xor
push
cmp
mov
imul
xor
inc
je
sub
mov
pop
dec
mov
sub
nop
fs
cmp
orl
mov
hlt
add
cmp
jg
pop
push
pop
inc
cmp
and
movsb
inc
mov
cmp
and
jmp
mov
inc
xchg
inc
push
dec
jle
jl
fcoml
xor
test
inc
dec
and
out
loope
sarb
push
test
rclb
inc
in
dec
arpl
pop
add
jne
jno
fs
orb
data16
fadd
mov
in
cltd
inc
mov
cmp
test
or
sub
mov
adc
xor
jl
jp
jp
loop
movsl
fnstsw
sbb
xchg
not
icebp
dec
or
test
add
dec
aam
xor
jecxz
dec
sub
adc
mov
test
movsb
push
jnp
inc
stos
test
adc
inc
mov
mov
inc
xor
mov
in
popa
lcall
lcall
adc
inc
cltd
jns
subb
test
test
and
in
jbe
ud2
gs
cltd
dec
cmpsb
adc
jae
cmp
nop
negb
test
sarl
mov
dec
mov
push
pop
shrl
rol
out
sbb
call
insb
das
mov
lret
xchg
sub
and
imul
popf
jmp
xchg
insl
or
jge
inc
or
fadds
cltd
mov
out
mov
es
out
shll
xchg
add
adc
imul
sbb
shll
mov
and
movsb
xchg
daa
inc
test
ja
test
out
sub
js
rol
adc
mov
rolb
sbb
insl
pop
ss
push
and
sub
jmp
loopne
dec
mov
imul
pop
adc
pop
sbb
mov
je
in
sub
dec
jno
lahf
cmp
cmp
mov
adc
mov
in
adc
jnp
je
lcall
dec
adc
aam
sbbb
dec
adc
push
pop
and
mov
or
push
xchg
mov
jge
sub
in
push
xchg
sub
cmp
clc
cmp
inc
xor
pop
push
or
sti
inc
mov
std
addr16
add
cmp
push
psubusw
setl
lock
add
out
setg
leave
add
insl
jle
adc
xchg
jns
pop
lea
xchg
inc
clc
rorb
sbb
test
outsl
inc
push
jg
jnp
push
and
pushl
or
fsubl
fstpt
sarb
xchg
lcall
out
xchg
stos
aas
lret
sub
xchg
or
mov
inc
scas
into
fs
lret
mov
call
dec
les
pop
adc
mov
leave
push
adc
and
rcll
js
out
and
adc
add
adc
mov
lret
mov
lods
adc
sub
adc
jecxz
adc
and
call
pop
dec
sbb
push
mov
mov
loop
sbb
je
jno
dec
mov
adc
cmpsl
sub
daa
and
das
cmpsl
lcall
lds
mov
mov
sbb
out
je
subb
and
fcom
sub
ret
mov
cmp
stos
mov
mov
adc
jae
daa
xlat
inc
sbb
addr16
cmp
xor
pop
dec
mov
jp
rclb
mov
mov
xor
mov
test
lea
outsl
cmp
pop
push
das
pop
pop
pop
push
imul
fdivrl
adc
fcomip
lock
push
jge
inc
mov
push
adc
pusha
push
push
stos
or
or
xor
in
inc
pop
dec
or
or
mov
push
mov
sub
notb
or
jmp
lret
faddp
and
nop
or
pop
ja
sbb
in
lock
dec
or
aam
add
js
xchg
dec
bound
adc
fstl
daa
lock
out
sbb
mov
rcrl
mov
retw
adc
mov
dec
jne
adc
or
add
or
mov
and
cmpsl
xor
in
cld
inc
push
mov
adc
test
js
idivl
adc
mov
jb
xchg
repz
sub
sub
int3
into
mov
outsl
mov
fdivrs
mov
hlt
and
mov
ja
push
out
cli
sub
sub
xchg
lock
adc
and
push
dec
push
or
dec
sub
xor
fildl
or
xor
xchg
push
mov
rolb
xor
xor
stos
jge
push
mov
cmp
js
imul
sti
and
jp
xchg
out
push
cmpb
push
mov
sub
jp
push
add
pop
mov
push
jmp
jb
aaa
adc
push
mov
repz
cld
inc
bound
out
mov
mov
xchg
mov
sub
enter
lea
adc
xchg
stos
mov
inc
dec
add
lret
mov
pusha
pop
scas
or
ror
fdivrl
mov
bound
out
es
ret
adc
fcomps
in
adc
test
mov
jg
mov
lods
push
test
mov
add
push
push
mov
push
xchg
insb
mov
pusha
sti
xor
jl
push
popf
popa
sbb
or
cmpsl
adc
in
jne
inc
fdivrp
loope
pop
pop
insl
out
xor
pop
enter
das
push
repz
dec
and
or
les
push
or
aam
adc
je
movsl
jmp
insb
cmp
cmc
mov
dec
adc
iret
mov
adc
aas
jl
imul
adc
pop
add
arpl
and
mov
push
sub
repz
ret
fdivl
cmovns
mov
popa
or
inc
add
cmp
add
hlt
dec
aam
pop
addl
and
movsb
pop
fiaddl
mov
ja
sub
xlat
out
xor
int
call
xchg
xor
js
sub
mov
mov
cmp
test
mov
mov
cmc
pop
ljmp
mov
lahf
add
les
and
mov
arpl
and
xchg
xlat
sbb
mov
call
push
or
test
xlat
loopne
les
jo
stos
mov
dec
test
in
sub
or
sub
mov
sub
dec
or
in
loopne
mov
cmp
mov
adc
pop
call
push
xor
stos
sbb
cmp
xor
rorb
dec
out
adc
pop
aam
dec
out
xchg
sahf
jl
sub
dec
mov
in
mov
xchg
push
sbb
ret
lock
pop
cmp
dec
loopne
icebp
push
and
lock
xchg
scas
mov
dec
xor
negl
push
inc
inc
adc
sbb
inc
sbb
or
jmp
nop
dec
jae
dec
repnz
pop
rorl
inc
pop
push
mov
cmp
mov
clc
lods
ss
mov
popf
test
sbb
adc
pop
cmp
je
push
dec
fmul
inc
add
outsb
out
pop
adc
adc
mov
call
lret
mov
mov
movsb
xor
mov
adc
and
and
shrl
push
mov
mov
inc
jge
lahf
inc
and
stos
cmp
mov
shlb
mov
test
call
cmp
jle
inc
pop
cli
and
jg
mov
xlat
cwtl
push
popf
cmc
add
cmp
sarb
outsl
les
mov
or
in
leave
fisubl
testb
mov
push
push
ljmp
fisubrs
leave
push
push
mulb
lret
lret
popf
out
xlat
pushf
and
push
mov
pop
add
cmc
xor
adc
push
sub
mov
push
pop
fdivr
js
push
cwtl
in
pop
in
enter
push
hlt
adc
add
call
roll
adc
xor
pop
cmp
xor
jge
add
js
push
pusha
lret
jmp
inc
pop
push
in
push
or
ret
dec
aas
mov
shlb
or
cmp
gs
inc
push
sbb
inc
xchg
pop
fdivrl
aas
jne
loopne
or
sbb
sbb
notb
lock
mov
jne
leave
adc
cwtl
pop
inc
mov
mov
mov
es
adc
jg
decl
cli
add
mov
push
add
push
sub
jnp
fisttps
leave
fcoms
mov
daa
aad
imul
in
mov
adc
test
add
sbb
lea
jmp
adc
loop
cmp
cmp
mov
call
xchg
sbb
and
inc
push
cmpl
inc
andb
mov
aam
arpl
xchg
in
sub
movhps
xchg
jge
ljmp
inc
sub
add
in
and
aad
repz
jg
movsl
add
dec
push
call
push
sub
cmp
jle
lea
nop
adc
jge
fisubl
inc
mov
push
fsubrs
ret
push
push
stos
popf
push
xor
and
lea
xor
sahf
pop
rcl
add
imul
mov
addl
inc
jne
lret
cmp
mov
mov
adc
adc
add
dec
mov
push
loopne
inc
mov
mov
xchg
and
or
pop
fdivrl
pop
and
pop
lods
nop
cltd
cmp
inc
cmp
hlt
dec
adc
xchg
das
adc
test
or
test
and
sub
mov
add
imul
push
add
roll
push
cmp
mov
cmp
jae
dec
mov
sub
sar
ds
mov
shll
test
inc
cmp
cmp
je
ss
and
cmp
add
jne
lcall
mov
pop
stos
jecxz
dec
or
push
sbb
xor
pop
je
mov
adc
fwait
adc
pop
mov
jae
push
adc
xor
jnp
mov
leave
cli
inc
fisubrl
push
mov
adc
jno
ffreep
pushl
mov
push
ljmp
mov
lock
mov
mov
sbb
jmp
bound
xchg
ret
mov
mov
cmp
jmp
mov
adc
idivb
adc
mov
into
push
lea
mov
aam
das
pusha
sbb
popa
dec
adc
xchg
cmp
adcb
adc
sub
test
test
pop
and
clc
pop
out
mov
xchg
xchg
xlat
mov
repz
pushf
dec
adc
push
mov
pop
dec
repz
and
adc
sub
insb
mov
pop
or
push
jmp
js
insb
adc
faddl
in
dec
stos
daa
mov
cmpsb
adc
es
pop
movsl
repnz
cwtl
cli
ds
je
sbb
mov
and
loop
dec
push
or
dec
sub
mov
fmuls
inc
jae
jecxz
arpl
sub
rcr
sbb
cltd
or
cs
sbb
adc
inc
add
mov
or
pop
test
dec
das
mov
xor
lea
add
cmp
xchg
adc
push
mov
mov
iret
dec
dec
test
les
loope
dec
scas
leave
clc
addl
scas
ja
mov
cld
push
dec
xchg
sub
adc
push
pop
sbb
jl
dec
out
sub
lea
fwait
jns
mov
mov
add
push
xchg
cwtl
movsl
and
test
cld
sub
sbb
mov
cmc
mov
fsubl
pop
jge
dec
push
mov
push
aas
loope
das
mov
push
fisubrl
mov
test
dec
inc
test
push
hlt
cmp
push
mov
push
dec
dec
test
sar
add
dec
pop
shll
adc
pop
xchg
rorl
sub
jb
dec
jge
push
jne
sub
sbb
jp
cmp
stc
inc
xchg
sarb
push
and
lret
hlt
inc
in
jbe
inc
iret
daa
lock
mov
arpl
adc
mov
inc
sbb
adc
cmp
test
mov
fsubrs
mov
dec
xor
dec
xor
ds
or
fnstenv
nop
fsubl
in
inc
and
je
es
push
aam
sub
rcrb
adc
pop
mov
das
add
pop
shll
jle
add
movsl
or
repz
cltd
loopne
loop
jo
push
pop
pop
jmp
mov
jge
add
inc
mov
movsb
cmp
xchg
pop
in
jmp
fidivs
test
adc
xchg
mov
int3
sbb
dec
add
sbb
notl
and
pop
sbb
dec
cli
fisttpll
cmp
loope
mov
sub
shl
repnz
pop
dec
inc
test
add
jne
ret
test
or
scas
jl
dec
inc
pop
inc
and
mov
fwait
into
push
adc
xorl
cwtl
xchg
or
leave
sub
cwtl
xchg
test
adc
imul
inc
adc
ljmp
dec
or
xchg
mov
cmpsl
je
inc
inc
xchg
mov
lds
and
fmull
clc
lea
sar
jecxz
add
shll
jb
loope
pop
sbb
nop
dec
push
adc
nop
sub
stos
adc
and
jmp
and
and
cltd
xor
or
mov
add
movsb
xchg
sbb
dec
and
adc
push
in
sub
jne
out
daa
lods
add
push
jb
test
or
and
out
inc
add
mov
imul
fidivrs
adcb
inc
shrb
jmp
lret
cmpsl
std
sub
jno
pop
push
lds
jmp
lods
int3
jns
into
dec
pop
cli
xchg
pop
mov
jo
cmpsl
iret
jl
push
mov
and
mov
add
jle
popa
lret
jbe
lock
add
cmp
dec
mov
mov
jne
out
test
inc
adc
jge
and
clc
dec
aas
sar
mov
les
mov
pop
push
test
shrb
adc
inc
cmp
test
pop
jns
inc
sbb
push
shlb
mov
pop
and
sbb
dec
jmp
add
adc
or
enter
jo
mov
shrl
dec
cmpsl
inc
dec
movsb
fiadds
cmp
xchg
into
sbb
mov
inc
cltd
mov
nop
jp
jge
dec
inc
aam
sbbb
in
les
mov
cltd
rcll
pop
imul
data16
std
fs
pop
adc
lds
data16
fimuls
call
lods
test
mov
scas
mov
mov
jp
pop
dec
pop
mov
mov
ret
jmp
dec
or
add
ss
pop
out
imul
ds
bound
orl
mov
dec
sti
test
mov
or
sbb
xor
call
iret
int
int3
inc
inc
mov
in
mov
movsl
push
dec
push
mov
push
lock
out
addb
add
or
xorb
mov
bound
cmc
or
xchg
je
push
adc
dec
xchg
adc
inc
push
adc
cmp
shrb
sub
mov
mov
sbb
xchg
rcll
dec
fcomps
mov
sbb
fmull
xor
push
das
inc
std
aam
hlt
int3
rorb
aas
pop
ror
xor
push
mov
test
lods
push
cmp
ret
push
pop
mov
push
popf
adc
inc
sbb
mov
pushl
push
int3
std
ds
lahf
or
pop
and
decb
test
xor
push
leave
les
cs
adc
pop
cwtl
cld
lea
xor
enter
pop
lret
imul
outsl
mov
test
dec
stos
or
add
dec
push
sub
xchg
cmp
adc
dec
rorb
popf
jns
add
inc
gs
leave
out
pop
jb
mov
leave
mov
test
mov
cmpsb
jp
mov
in
mov
pop
pop
pop
loope,pn
inc
idivb
jae
lods
push
insb
leave
push
or
movsl
cld
or
mov
rolb
into
jne
leave
es
js
or
xor
or
mov
scas
jge
mov
add
jae
mov
dec
jl
jl
jne
mov
loopne
clc
add
push
pop
mov
xchg
xor
lock
inc
or
das
adc
cmp
mov
pop
addb
lock
xchg
call
inc
test
xor
movb
sbb
cmp
or
int
cwtl
push
lock
jb
nop
sbbl
xchg
shlb
jmp
cs
cmp
xor
dec
daa
js
sbb
mov
or
shll
je
mov
into
scas
inc
push
xor
leave
dec
sbb
test
adc
and
in
xchg
or
or
das
mov
ss
mov
cmp
testl
fisttpll
inc
adc
je
movsb
aas
inc
cmp
mov
je
cmp
pop
inc
adc
bound
adc
mov
sub
mov
daa
jno
add
dec
sbb
cwtl
mov
je
adc
dec
dec
jne
aaa
inc
loopne
and
mov
or
subl
mov
and
mov
jno
sub
cmpsb
scas
or
test
enter
inc
cmp
inc
dec
or
xchg
jo
mov
xlat
std
mov
pop
sbb
push
mov
cli
imul
leave
cmc
pop
cmp
mov
cmp
jne
or
sbb
clc
push
xor
or
jmp
leave
push
fwait
arpl
imul
sahf
jb
or
or
sub
mov
mov
inc
or
jns
or
and
js
mov
pop
mov
jl
les
sbb
jne
test
inc
jno
xchg
cmpsb
mov
mov
icebp
jae
xor
cld
das
add
adc
mov
jb
cmp
ficoms
sub
ljmp
xchg
mov
mov
ljmp
or
divb
testl
cmp
ja
push
outsl
lcall
imul
jnp
push
or
push
sbb
xchg
or
and
pop
outsl
or
sub
pop
pop
shll
dec
ss
enter
pop
and
xchg
jno
inc
sbb
je
popa
add
jnp
lods
lods
sub
adc
popf
and
shlb
and
in
daa
cmp
shll
dec
xchg
jo
mov
repz
push
fmull
xor
roll
iret
push
nop
call
dec
ljmp
pop
dec
and
push
jno
push
fldcw
scas
test
mov
bound
fisubs
lea
stos
lret
push
cltd
ljmp
jne
in
lcall
ficoml
inc
in
adc
adc
inc
in
dec
aad
mov
mov
jno
stos
test
jb
fstps
mov
jae
sub
and
js
stos
popa
inc
adc
adc
jmp
ljmp
clc
fnstsw
jmp
adc
mov
mov
adc
gs
mov
cmp
jno
into
xchg
or
inc
test
pop
and
jne
cmp
inc
pusha
xchg
lock
mov
cmpsb
movsb
jnp
cmp
and
lret
mov
call
data16
sub
fimull
mov
mov
mov
mov
dec
push
inc
pusha
nop
push
enter
std
sbb
xchg
repnz
push
test
jnp
fsubl
rclb
cli
scas
jno
cltd
pop
inc
add
and
es
lea
fs
xchg
sahf
lcall
inc
mov
push
and
test
and
jno
stc
repnz
lock
pop
inc
ljmp
jne
xchg
insb
add
xchg
cmp
mov
cmp
mov
or
pop
es
sbb
push
pop
pop
cmp
cmp
sub
add
mov
add
cmp
adc
push
bound
mov
or
sbb
push
adc
push
sbb
pop
test
popa
cmp
gs
inc
jecxz
sbb
inc
xorl
bound
dec
add
mov
pushf
adc
fdivrs
inc
push
lods
inc
mov
sbb
sub
jno
adc
inc
dec
rclb
mov
dec
inc
push
jae
add
cs
mov
or
inc
dec
cmpsb
or
jae
push
push
or
or
dec
dec
inc
inc
push
push
pop
sbb
mov
insb
and
addb
test
mov
rorb
or
out
and
and
xor
dec
and
dec
jle
cwtl
and
or
imul
or
mov
adc
inc
in
ret
or
mov
adc
push
and
inc
and
mov
push
test
and
fadds
mov
dec
adcb
and
rolb
mov
dec
dec
xchg
inc
and
inc
and
add
lock
and
dec
mov
mov
pop
mov
and
dec
and
lock
inc
fadd
mov
dec
xchg
xchg
xchg
je
fs
mov
adc
and
inc
dec
or
xchg
fsubl
lret
mov
cmpsb
adc
xchg
jo
pop
inc
dec
mov
adc
and
inc
test
loopne
shlb
mov
cmpsb
mov
push
dec
cmp
adc
inc
out
mov
adc
and
dec
test
xchg
and
adc
and
dec
adc
inc
adc
and
inc
shrb
dec
jb
bound
push
inc
inc
xor
add
test
in
xchg
loop
rolb
mov
int3
add
push
add
sbb
mov
or
push
cmpsb
and
dec
lret
and
and
fldl
mov
adc
pop
dec
push
xchg
or
push
inc
add
inc
out
mov
dec
jl
outsb
and
dec
cmp
xor
and
push
inc
cld
aad
enter
les
mov
pushf
orb
dec
cs
push
and
loope
lock
in
dec
lret
and
jbe
push
xchg
and
inc
or
inc
shr
mov
adc
and
dec
mov
inc
mov
outsb
adc
inc
dec
ss
and
adc
add
inc
xor
insb
rorb
adc
xchg
js
push
pop
dec
mov
adc
and
dec
adc
and
inc
fmul
mov
dec
mov
pop
dec
mov
adc
and
inc
cld
rorb
in
xchg
fisubs
into
inc
mov
xchg
and
dec
outsb
xchg
push
and
inc
xor
mov
adc
and
iret
add
dec
aam
enter
stos
sahf
mov
dec
pop
xchg
dec
and
inc
sub
mov
adc
into
mov
or
and
dec
mov
mov
jle
jb
pusha
and
dec
inc
xchg
and
inc
push
or
adc
and
dec
mov
repnz
inc
xchg
rorb
dec
jo
and
inc
inc
xor
inc
fimull
enter
cmpsb
or
adc
and
dec
xchg
xchg
jle
ss
pop
dec
mov
adc
and
pop
rcr
and
inc
ljmp
outsb
dec
xchg
xchg
mov
xor
push
cld
inc
fsubs
adc
or
int3
sbb
or
mov
dec
dec
xchg
push
pop
inc
and
xor
or
int3
xlat
inc
repnz
nop
adc
xchg
je
add
xor
not
add
add
push
or
mov
and
int3
inc
mov
inc
pushf
mov
push
and
dec
cmp
outsb
test
mov
enter
call
fists
mov
adc
and
dec
pop
xchg
and
mov
and
dec
ficoml
or
inc
and
mov
dec
and
dec
jo
andb
inc
mov
and
dec
out
xchg
clc
adc
and
inc
adc
mov
dec
and
dec
push
inc
xchg
movsb
mov
dec
ljmp
xchg
or
and
inc
cmp
outsb
dec
jl
mov
sahf
inc
scas
ret
adc
and
inc
or
or
xchg
xor
inc
inc
pop
jo
jp
xchg
dec
movsb
xchg
mov
movb
adc
in
sbb
dec
xor
bound
mov
mov
fstpl
int3
int3
and
or
mov
adc
sub
or
pop
dec
push
js
mov
mov
push
cld
adc
or
icebp
or
mov
jo
orb
mov
aam
addl
jmp
or
mov
xor
sbb
mov
mov
pushf
adc
xchg
cmp
sub
mov
ljmp
dec
nop
xchg
jbe
pop
inc
cmp
or
clc
xor
out
aam
les
lcall
pop
adc
cs
sbb
or
clc
call
mov
and
dec
push
inc
xor
mov
out
in
adc
and
dec
mov
inc
subb
adc
inc
dec
cs
sbb
or
adc
out
loope
jecxz
add
movsw
or
test
or
movsb
sub
stos
or
mov
adc
and
dec
sbb
mov
mov
and
dec
mov
pop
and
inc
sbb
mov
or
mov
dec
push
xchg
adc
sbb
adc
sbb
lahf
jns
sub
adc
and
dec
push
xchg
and
pop
mov
and
dec
outsl
cltd
insl
or
jno
jo
inc
xchg
cmp
dec
mov
sbb
insb
sbb
outsb
lock
call
popa
jo
mov
arpl
mov
rorl
lock
jb
jae
mov
js
loope
and
jb
fcoml
or
fs
movsl
xchg
jo
dec
or
jle
call
push
fwait
movsb
sbb
jo
jl
push
sbb
popa
fdivs
addl
dec
inc
jle
xchg
push
je
pusha
xchg
inc
inc
inc
push
outsb
dec
and
jns
dec
mov
mov
testb
int
stos
fsubrl
xor
lcall
inc
aas
jb
jb
arpl
push
data16
push
mov
jns
sbb
pop
push
inc
dec
pop
pop
jo
popl
mov
das
rcrl
sbb
jae
dec
popa
clc
fs
or
add
xor
inc
xchg
push
clc
xchg
adc
inc
push
ss
jbe
push
xor
inc
push
jg
and
inc
push
xor
outsl
ja
mov
and
push
push
dec
sbb
ds
int3
cs
push
dec
jae
fldenv
mov
push
jns
adc
cmc
pop
popaw
jne
aad
or
mov
push
cmpsb
gs
hlt
sbb
and
inc
mov
cwtl
mov
imul
outsl
in
inc
daa
data16
pop
cwtl
dec
or
popa
mov
mov
and
mov
adc
sahf
push
imul
mov
dec
popa
loop
jo
bound
xchg
ret
imul
jae
jne
test
cmp
adc
mov
gs
sub
sub
jns
cmpsb
push
shrl
mov
adc
loopne
cmpsb
adc
aam
sbb
jne
sub
add
push
andb
adc
loop
jae
adc
pop
cmpsb
inc
mov
adc
push
push
outsb
jp
fs
mov
dec
ficoms
jo
jmp
lret
fcmovnb
lock
sbb
lock
push
mov
xchg
in
and
rorl
dec
cli
adc
dec
and
sub
cwtl
pop
dec
outsl
dec
imul
sub
cmpsb
xchg
leave
and
xor
or
test
ret
mov
es
push
mov
mov
insl
orl
pop
xor
push
xchg
je
jne
sub
stos
es
ljmp
stos
enter
push
inc
dec
sbb
xchg
xchg
ficomps
mov
clc
and
lcall
leave
dec
adc
push
xor
dec
adc
inc
insb
mov
cltd
outsl
rclb
xor
push
xor
sbb
arpl
ds
fsubs
mov
jmp
push
push
mov
sub
sub
flds
orb
in
addr16
das
push
push
inc
lcall
mov
lock
sub
out
mov
push
inc
xor
fdivs
inc
aam
cli
push
iret
push
lret
sub
cs
sbb
adc
sub
cwtl
add
rorl
leave
push
fsubl
xor
adc
js
ret
push
mov
push
stos
loopne
cmpsb
xchg
cmc
test
sub
test
push
stos
add
cltd
lret
sbb
push
es
jb
push
add
int3
sbb
xchg
into
cmpsb
insl
leave
or
sub
gs
or
push
dec
in
stos
ljmp
je
or
loop
and
and
addl
sub
je
push
shll
push
out
cmp
dec
leave
push
js
frstor
sub
leave
and
adc
adc
out
inc
add
mov
outsl
lds
sub
imul
xor
outsl
ljmp
lea
sub
int3
jnp
jb
int
or
push
dec
mov
outsl
jbe
sbb
testb
mov
sbb
jge
cwtl
push
fisubs
nop
push
inc
popa
out
pushl
mov
dec
out
mov
pop
adc
scas
xchg
movsb
mov
je
jle
into
sub
pushf
adc
adc
adcb
or
dec
mov
outsl
mov
xchg
aad
pop
mov
sub
fs
in
jb
dec
inc
leave
or
add
movsb
pushf
imul
js
sub
and
push
sub
push
rcr
xor
xchg
push
popa
push
scas
jo
pop
xchg
xchg
fcmovne
and
mov
mov
sub
ds
movsb
cltd
dec
in
repnz
push
xchg
push
ja
xor
dec
int3
mov
or
jns
and
xchg
sysexit
out
cmp
push
js
pop
or
push
and
fcoml
sbb
pop
pushf
sub
cltd
jo
jb
rorb
xor
push
shrb
dec
jo
orl
lods
sahf
and
adc
iret
fs
pop
shlb
fcoms
mov
insb
mov
fsts
jecxz
fstl
repnz
jbe
lret
cmpsb
lea
and
lock
adc
adc
push
mov
insl
adc
cmp
mov
jecxz
and
dec
fs
int3
fcomps
sbb
add
dec
inc
dec
mov
jbe
dec
bound
dec
cmp
fs
xchg
push
mov
jp
inc
xchg
test
sbbb
mov
sbb
jecxz
je
nop
push
sub
ret
inc
cmp
into
jae
pushf
adc
aad
rclb
sbb
insb
or
xor
jne
sub
xor
push
in
jo
jnp
push
xor
xorb
add
and
mov
sarb
jns
cmp
jmp
inc
gs
in
sub
fidivrs
ss
push
dec
xlat
es
es
int
push
inc
inc
data16
insl
add
shlb
test
pop
shrl
push
or
xchg
xor
sbb
jo
roll
pop
adc
les
push
lret
imul
cs
or
sub
xchg
test
mov
xor
movsb
inc
jmp
push
mov
sub
mov
sahf
jo
adc
test
cmp
cmpsl
js
inc
mov
in
pop
cmpsb
xor
es
movsb
cltd
imul
push
call
outsl
lds
rclb
jne
add
adc
jns
outsl
sub
fs
cmp
jle
insb
clc
int
and
lock
cmpsb
xchg
cld
in
test
mov
inc
inc
fnstcw
and
in
cmp
cmp
jae
int3
sub
fidivrl
icebp
repnz
pushf
scas
js
mov
pop
clc
dec
or
mov
sbb
pop
ret
pop
pop
xchg
xor
call
cmp
mov
or
data16
dec
push
iret
dec
add
cmp
scas
imul
jae
push
inc
jbe
int
arpl
out
sub
stos
sub
fwait
js
fs
jbe
int3
and
lea
addr16
es
and
insl
lcall
adc
cli
pop
jne
xor
mov
ret
sbb
insb
ds
dec
and
mov
pop
push
xchg
sbb
jle
aas
jo
rclb
push
mov
push
inc
push
insb
mov
xor
jno
jns
xor
adc
in
mov
mov
movsb
push
add
pop
adc
sbbl
repz
movsb
jecxz
dec
and
push
add
mov
data16
fadds
dec
imul
cwtl
sahf
sbb
add
bound
gs
pop
xor
pop
insb
push
leave
and
inc
xchg
in
mov
push
mov
xchg
mov
and
dec
dec
pushf
data16
xchg
stos
inc
jecxz
push
xchg
cs
adc
test
push
js
int
and
mov
dec
ret
and
jo
add
and
lahf
and
or
mov
lahf
stos
jmp
out
sbb
insb
jo
or
inc
xchg
jne
push
movsl
les
push
adc
xchg
fdivrs
xchg
mov
or
int3
sub
mov
inc
add
mov
and
lock
inc
jge
cmp
or
mov
popa
mov
fwait
es
imul
sub
mov
xor
popa
lret
lcall
pop
outsl
fsubs
cmpsb
hlt
nop
xchg
push
dec
cwtl
xchg
push
int3
aad
cltd
mov
mov
and
jb
pop
dec
jne
mov
adc
sbb
add
push
leave
sub
jmp
xchg
dec
dec
xchg
lret
xor
sbb
xor
insb
and
imul
jl
xchg
pop
in
sahf
bound
sahf
jg
aaa
pop
mov
filds
fistpll
inc
insl
outsb
and
push
cltd
mov
iret
xchg
mov
fdivrl
mov
mov
dec
mov
xor
push
bound
sahf
clc
mov
fwait
popa
sub
inc
push
push
pop
dec
or
imul
dec
push
and
mov
idivl
sbb
jo
clc
push
iret
mov
inc
jo
jo
int
mov
pop
or
mov
xchg
jno
xor
push
jbe
popf
mov
repnz
xchg
ror
ret
fcoms
jne
stos
int
dec
and
mov
aas
lods
out
mov
pushf
jo
loop
and
and
test
mov
mov
pop
lds
xor
push
xchg
pop
pushf
repnz
dec
sub
inc
sbb
mov
lcall
in
dec
je
adc
dec
insl
inc
inc
jbe
push
arpl
jl
faddl
sub
xor
mov
pop
mov
insl
int
daa
out
adc
outsl
fwait
lret
cwtl
push
or
fs
leave
sub
sbb
dec
sbb
xchg
pusha
inc
push
add
mov
adc
xlat
sbb
fs
add
add
rcrl
and
mov
rorl
push
xor
subl
fs
mov
jns
push
leave
push
pop
out
scas
lret
add
rorl
aam
pop
push
imul
in
and
dec
push
mov
movsb
push
push
and
lcall
sub
pop
das
mov
dec
repnz
aas
rclb
sbb
mov
lahf
outsl
push
xchg
xor
out
idivl
pop
jg
push
inc
popf
xchg
push
leave
dec
cmp
dec
xchg
xabort
scas
adc
call
shl
nop
xor
or
lds
dec
cmp
sub
ljmp
hlt
test
lods
cmp
arpl
lods
jb
push
imul
fcoms
movsl
xchg
inc
add
jno
or
or
inc
in
movsl
push
inc
sahf
aam
dec
cli
pop
mov
nop
sub
xor
cmp
inc
test
mov
scas
xchg
pushf
into
push
dec
adc
cmpsb
push
daa
mov
adc
pop
into
sub
cmpsl
dec
loop
mov
dec
jl
jbe
imul
cmp
jbe
xchg
sahf
punpckhwd
mov
imul
leave
sub
or
ss
or
mov
movsb
insb
xor
mov
jae
adc
lods
dec
jb
jno
adc
mov
adc
lret
cmp
jo
repnz
lods
sub
inc
push
pop
adc
mov
adc
pop
outsl
or
out
push
cmpsl
jb
jbe
dec
leave
dec
mov
sub
pop
stos
inc
mov
dec
daa
lods
dec
push
and
lret
cs
inc
jge
fiaddl
mov
mov
pop
inc
sbb
mov
sbb
sbb
sbb
mov
imul
pusha
mov
pop
es
rorl
dec
out
test
lods
mov
ljmp
pop
cmp
outsb
dec
arpl
inc
inc
enter
leave
xchg
inc
or
push
in
les
jb
push
adc
mov
bound
sbb
add
xor
imul
aaa
test
push
jae
push
int
push
mov
test
lret
outsl
loope
inc
out
je
das
push
rclb
adc
leave
dec
ljmp
xlat
xchg
adc
imul
sub
dec
adc
data16
fimuls
xchg
outsb
inc
enter
ds
and
mov
insb
adc
insb
imull
test
movsb
bound
pop
push
aaa
imul
pop
pop
dec
xchg
lret
dec
pop
es
mov
mov
aam
lcall
add
push
cmp
pop
adc
sub
sub
xchg
push
mull
ss
fdivrl
xchg
cmp
adc
pop
dec
and
sbb
fiaddl
stos
daa
xchg
ja
outsl
xor
pop
and
jne
push
out
inc
ja
aam
sub
jbe
clc
mov
xor
push
push
shrb
cwtl
inc
mov
int3
bound
xchg
aaa
sbb
or
xor
push
insb
xor
dec
mov
outsl
xor
mov
arpl
cld
sub
das
cltd
pusha
arpl
outsb
pop
xchg
or
int3
insl
push
xchg
or
fcoml
xchg
shlb
das
add
adc
dec
xor
scas
loop
mov
dec
jl
xchg
int
inc
cld
jae
jmp
inc
xchg
loop
es
jb
in
xchg
sbb
mov
inc
jno
cmp
dec
lds
scas
imul
and
pop
test
xchg
sbb
dec
adc
or
and
dec
imul
xchg
adc
movsb
xchg
pop
test
es
fs
es
dec
js
and
xor
and
sarl
inc
inc
dec
mov
xchg
ret
xchg
xchg
mov
jle
loope
mov
sbb
and
push
adc
lea
cli
jle
inc
js
ficoms
and
sub
and
dec
xor
aad
dec
or
aad
push
xor
or
dec
out
lret
push
dec
inc
xchg
jo
jle
repnz
negb
or
aaa
pop
pop
mov
popa
dec
mov
xchg
ror
loop
cmpb
dec
adc
popa
and
adc
mov
cs
mov
jl
sub
inc
dec
loop
push
lods
dec
or
cmpsb
xor
and
xchg
into
push
push
dec
cmpsl
into
mov
bound
divb
stc
mov
xor
mov
in
js
adc
xchg
mov
and
mov
mov
dec
or
repz
push
lds
shll
adc
int3
dec
mov
mov
lret
sbb
insb
cmp
jo
lret
mov
test
out
js
dec
insb
lods
pop
popf
xchg
test
jnp
adc
and
inc
push
es
add
imul
push
stos
test
pop
push
inc
loop
test
rclb
stos
fwait
mov
cmp
nop
cwtl
xor
jl
bound
lea
in
mov
push
imul
mov
mov
call
fs
leave
ss
or
or
adc
popf
dec
sbb
adc
push
pop
pop
sbbl
pop
sub
lcall
mov
mov
xchg
insb
mov
dec
and
nop
cmc
push
xchg
gs
dec
pop
and
and
inc
push
stos
jno
or
inc
cmpsl
and
inc
and
lret
mov
popa
and
sbb
and
xchg
cmc
and
test
imul
and
pop
je
sbb
jne
jb
add
into
sub
dec
out
mov
xchg
fs
push
pop
xchg
push
insb
and
scas
mov
and
daa
push
cltd
push
es
adc
sbb
es
fldenv
mov
ljmp
mov
or
cmp
mov
int3
push
adc
dec
dec
xor
movsl
add
mov
pop
bound
adc
mov
sbb
call
mov
lcall
shll
mov
fidivs
jl
inc
std
clc
pop
aaa
xor
or
lea
jne
xor
stos
js
sub
dec
stos
sub
sbb
test
lea
mov
push
pop
adc
inc
das
outsb
stos
bound
inc
sbb
sbb
and
cmp
mov
push
mov
sub
dec
fstps
push
cs
daa
pop
inc
jbe
sbb
shlb
push
test
roll
push
sub
inc
pop
orb
cmpsl
lret
and
pop
and
or
pop
push
scas
sti
std
and
lods
jle
js
rorb
movsb
mov
aaa
dec
push
adc
add
xchg
sbb
push
adc
push
and
add
ss
loope
sub
outsb
dec
pop
lcall
sub
imul
sub
mov
scas
push
xchg
movsb
hlt
xchg
cmp
and
sub
jne
jns
push
mov
sub
gs
lret
dec
mov
mov
test
in
xchg
jp
push
mov
xchg
mov
jmp
pop
dec
sbb
or
ds
push
adc
aam
loop
stos
insb
out
lret
jl
pop
push
push
push
inc
inc
dec
test
dec
mov
adc
rcl
mov
dec
pushf
sub
adc
addr16
adc
shrb
mov
lds
mov
es
shlb
jnp
dec
push
and
pushf
xchg
mov
jb
stc
cmpsb
pop
rclb
outsl
notb
mov
jp
jp
sahf
mov
sbb
or
xchg
push
cs
shrl
sub
mov
mov
dec
or
mov
push
adc
pushf
inc
pushf
fdivl
xor
xchg
jns
or
rcr
es
adc
adc
sub
nop
push
repnz
outsb
xchg
in
jle
outsl
push
adc
insb
adcb
xchg
mov
dec
xlat
mov
test
les
sub
jge
dec
and
fninit
scas
test
mov
xchg
inc
push
cmp
jne
je
cwtl
dec
push
pop
sbb
js
sbb
clc
cmp
push
adc
int3
push
or
push
add
lds
push
mov
mov
mov
mov
inc
sbb
jo
adc
push
add
and
dec
ret
adc
mov
pop
mov
dec
xchg
ret
push
xor
xchg
ja
mov
cmp
and
lock
aam
push
mov
jae
add
imul
mov
dec
push
les
mov
in
add
clc
cmp
nop
jb
mov
sbb
int
loope
sub
mov
call
addr16
int3
lock
cmpw
lcall
inc
movsb
lea
adc
clc
adc
jns
pop
mov
inc
and
adc
jmp
roll
divb
neg
add
inc
pushf
test
push
in
stos
mov
inc
xchg
lock
pop
cli
push
testw
and
mov
sbb
inc
loopne
fidivs
cmp
outsl
push
aam
outsl
cmp
cmp
sbb
roll
gs
inc
pop
add
or
jne
in
ss
dec
outsb
push
daa
add
inc
cmpsl
mov
unpcklps
add
sub
call
lock
imul
mov
mov
idivb
dec
insl
inc
ljmp
adcl
ds
sbb
and
mov
jecxz
mov
pop
dec
dec
aas
sub
xor
nop
add
icebp
testl
call
jno
rorl
push
call
imul
movsb
test
sub
sub
pop
in
sbb
mov
add
adc
xchg
xor
mov
push
xor
lret
and
cli
test
push
shrl
or
mov
movl
addr16
pop
dec
add
push
lahf
jg
jge
mov
cmp
push
lds
jo
dec
inc
jo
in
mov
lahf
jmp
notl
xor
push
adc
inc
test
add
jo
push
push
insl
movsl
sub
sti
inc
jae
inc
push
and
dec
adc
daa
fdivrs
pop
mov
popa
pop
lock
cld
cld
ret
lock
dec
push
push
cli
loopne
call
jbe
jo
mov
hlt
mov
clc
call
pop
and
call
mov
lds
push
repnz
mov
cmpsl
pop
sub
orb
dec
cwtl
pusha
outsb
call
ror
push
aam
and
cli
adc
or
and
je
add
mov
mov
mulb
mov
or
dec
sbb
sbb
in
jne
rorb
cmpsb
in
push
lea
cmp
mov
jo
sub
pop
test
es
gs
xchg
pop
aad
xorb
insb
cmc
and
sbbb
fdivr
jae
or
ljmp
iret
jmp
push
cmpsl
inc
in
inc
jbe
add
fldt
shlb
jmp
mov
push
jg
dec
movsl
xchg
rcrl
dec
jp
fdivrp
fistpl
sbb
fistl
lea
pop
jo
ljmp
adc
xor
adc
call
dec
fildll
ss
push
int
or
call
or
outsb
sub
dec
jg
in
pop
or
out
jmp
xor
frstor
sub
dec
push
int
lcall
or
jecxz
loop
call
dec
rorb
push
and
push
add
xor
mov
sahf
or
cmp
clc
push
sbb
sarb
cld
adc
pop
bound
icebp
add
ds
mov
dec
arpl
clc
xor
test
add
add
adc
int3
sarb
add
mov
bound
loopne
cmp
addl
cmpl
imul
sbb
out
mov
pop
aam
popf
add
pop
xchg
pushf
xchg
xchg
pusha
push
popf
jmp
call
jmp
cmp
test
xor
pop
not
pop
jmp
das
scas
xorl
inc
push
int3
clc
or
pop
dec
mov
testb
mov
adc
mov
leave
retw
mov
or
or
mov
ret
sbb
in
add
scas
dec
cwtl
jp
jmp
pop
xchg
sbb
or
add
lock
inc
and
mov
pop
ljmp
shlb
lret
push
iret
sub
mov
xchg
push
and
enter
loope
es
ja
push
and
xor
orl
add
imul
mov
push
jae
cmp
mov
or
loope
adc
test
xor
pop
add
rcrb
shrl
aas
adc
dec
ljmp
dec
or
mov
xchg
add
loop
xor
repz
mov
jnp
or
cmc
or
lret
or
clc
push
in
adc
dec
jp
popa
xor
push
or
or
jnp
fs
or
insb
imulb
mov
pop
inc
aas
mov
push
add
and
and
insb
loope
push
jmp
cmp
lahf
popa
jmp
sbb
mov
dec
pop
or
out
popa
xlat
sub
adc
shll
sbb
xor
cmp
xor
fs
adc
push
or
out
dec
jl
inc
or
xor
and
push
or
imul
addb
jno
daa
int3
adc
clc
inc
jno
sub
jne
or
mov
popa
push
enter
call
test
pop
outsb
aad
cld
adc
repnz
cmp
add
or
aaa
push
or
push
and
jno
or
xchg
xor
xor
push
test
xchg
cmpsb
adc
add
test
xchg
mov
pop
inc
daa
inc
mov
je
add
xor
adc
repnz
pop
and
aas
adc
lcall
call
mov
jnp
xchg
dec
mov
push
or
sbb
and
inc
adc
scas
and
roll
inc
cmp
arpl
jnp
popl
or
xchg
sub
orl
dec
mov
bound
or
inc
push
mov
adc
arpl
fists
and
inc
xor
insl
cltd
adc
cmp
loope
lods
mov
pop
xor
and
adc
or
and
dec
pop
xchg
outsl
and
andl
fisttpll
mov
jg
sub
xor
mov
lcall
and
or
sub
adc
and
dec
mov
mov
sbb
sahf
and
dec
leave
mov
inc
or
adc
or
jno
fwait
mov
rol
or
mov
adc
sub
hlt
aam
or
cmpsb
add
add
or
aam
loop
cmp
and
xchg
push
scas
add
and
pusha
rclb
add
and
pop
cmp
dec
nop
movsb
xchg
push
mov
sub
jnp
or
xor
xchg
mov
lods
pop
pop
push
mov
or
std
xchg
int3
adc
jge
and
mov
addr16
pop
and
jl
xchg
fcoms
fnstcw
and
mov
adc
jmp
xchg
aaa
cmp
sub
jl
jmp
fldenv
int
mov
imul
shrl
dec
lahf
int3
inc
aad
xchg
mov
adc
daa
in
leave
mov
inc
dec
popf
add
data16
and
xor
adc
or
or
mov
dec
xchg
pop
push
jnp
jns
bound
addr16
sub
mov
lret
dec
dec
and
mov
mov
jb
iret
clc
lods
cld
push
xor
lock
xchg
or
xor
cwtl
and
dec
je
add
xchg
inc
sub
gs
or
popf
sbb
cmc
xchg
dec
in
fs
xchg
ret
xchg
add
adc
xchg
and
and
subl
out
or
cli
mov
sbb
adc
mov
popf
or
mov
loope
add
inc
negl
pop
push
inc
inc
icebp
adc
faddl
or
lds
mov
subl
cs
adc
test
out
fsubs
lods
push
xchg
dec
mov
add
adc
mov
std
mov
and
not
pushf
clc
push
repz
or
mov
inc
movb
add
popa
push
pop
pusha
adc
xor
or
dec
push
outsl
lahf
xor
dec
adc
or
xchg
fimull
pop
repnz
cmp
mov
push
ret
cwtl
sar
cmp
les
dec
adc
cld
inc
and
pop
inc
jns
cwtl
js
repz
xor
lock
pop
xor
clc
add
dec
aam
mov
popa
lods
xchg
adc
mov
add
rorb
aas
popa
mov
xchg
and
dec
mov
sbbb
dec
add
icebp
and
and
mulb
inc
jno
dec
jl
inc
cmp
cwtl
or
or
cmp
shlb
mov
iret
rcll
imul
out
cld
daa
mov
push
and
push
outsb
cmp
mov
outsl
add
or
jo
in
adc
adc
mov
dec
fdivs
sbb
or
cltd
or
popa
orl
fs
or
or
and
mov
mov
mov
dec
clc
adc
leave
loopne
call
pop
adc
add
and
add
scas
dec
mov
shlb
in
loopne
adc
adc
cmp
pop
jb
sbb
adc
scas
outsl
add
jno
clc
data16
mov
mov
adc
nop
mov
add
push
jl
mov
repnz
sub
mov
ljmp
fistpl
imul
adc
add
mov
jb
js
inc
jns
adc
push
ret
mov
xlat
mov
jo
or
enter
xchg
dec
sbb
push
das
adc
enter
aaa
and
adc
sub
lcall
sbbl
rorb
inc
out
inc
pop
pop
or
cltd
and
dec
dec
shlb
and
or
inc
xchg
sbb
andl
or
mov
push
mov
cmp
movsb
shlb
test
aad
test
inc
pop
rclb
clc
lods
je
mov
mov
data16
mov
movsb
push
add
push
addr16
pushf
mov
push
imul
fiadds
xor
in
rclb
stos
test
outsb
js
mov
imul
mov
test
test
shrb
or
mov
jp
xchg
movsb
nop
out
mov
jg
adc
outsb
push
hlt
cwtl
in
or
pop
mov
test
xchg
mov
or
add
mov
test
push
add
div
ja
mov
xchg
or
and
and
cltd
dec
rorb
mov
inc
lods
xchg
movsl
push
icebp
xor
jge
xor
sub
mov
clc
lret
out
cld
jmp
adc
or
lret
sbb
inc
adcb
sub
vphsubdq
pop
inc
xor
inc
push
mov
adc
cmc
jo
rclb
mov
mov
adc
xor
hlt
pop
dec
fs
rolb
imul
adc
dec
mov
aaa
test
fcmovu
xchg
fsub
mov
out
ja
inc
adc
mov
jae
xor
dec
inc
xchg
sbb
and
inc
call
xor
ljmp
inc
inc
or
xor
data16
xor
adc
enter
mov
sub
sbb
lea
push
cmovo
or
subl
popa
outsb
cmp
add
jo
movsb
je
inc
mov
nop
or
cmp
inc
jo
outsl
fwait
or
adc
adc
and
inc
cmp
or
cmp
or
cmp
inc
insb
push
imul
into
and
inc
jno
mov
dec
ret
xchg
cmp
bound
popf
and
or
and
imul
mov
jno
dec
ja
xor
and
aas
or
imul
rclb
adc
add
dec
mov
jge
or
lcall
sbb
rorb
inc
in
sbb
adcl
outsl
mov
maskmovq
divl
clc
inc
jno
xchg
xor
lods
adc
xchg
subl
je
insl
cmp
inc
or
inc
mov
inc
or
sub
addb
sbbl
jns
enter
adc
imul
pop
sahf
shlb
cmpsl
or
and
mov
or
sbb
and
pop
addb
sbb
int3
jo
mov
fisttps
mov
ds
push
or
inc
cmpsl
cmp
lds
in
or
test
insb
mov
call
enter
ret
dec
fdivrl
or
or
inc
imul
add
cmp
add
testl
xor
mov
int
out
pop
adc
sbb
pop
cwtl
mov
inc
pusha
xchg
pushf
aas
cmp
push
rclb
xor
out
or
add
and
add
add
inc
pushf
inc
or
adc
les
inc
dec
add
dec
cwtl
or
lret
les
cmpb
movsl
pop
sbb
sbb
or
test
sbb
data16
and
or
pop
push
divps
ss
adc
ljmp
mov
mov
js
cmovl
or
dec
jle
enter
dec
andl
pop
rolb
adc
ds
mov
or
insl
push
jmp
jg
xchg
data16
adc
dec
scas
dec
cmp
shlb
or
push
or
popf
push
mov
lock
lods
cltd
adc
adc
clc
lcall
out
hlt
jg
mov
xchg
xlat
sub
out
jmp
inc
call
insb
sarb
call
adc
lea
stos
push
js
xor
push
das
dec
jne
xchg
jle
cltd
icebp
lock
jp
out
mov
lds
dec
xchg
idivb
push
jb
jne
add
aaa
push
inc
cmp
xor
mov
dec
cmp
push
inc
push
mov
push
or
lret
stos
push
iret
stos
xchg
xchg
push
mov
mov
loope
rorl
sbb
stos
ret
pop
repz
movsl
fildll
sub
dec
iret
add
in
push
xor
push
sbb
bound
inc
or
fisubrl
das
jl
popa
movswl
pop
cmp
xorb
fdivrp
inc
push
dec
jge
add
mov
or
pusha
insl
subl
and
jle
aad
mulb
xchg
shll
mov
lods
imul
inc
mov
adc
cmc
add
dec
and
xchg
je
xchg
hlt
bound
mov
ja
mov
push
jns
ja
mov
push
movsb
std
xor
mov
push
nop
in
inc
or
nop
xor
xlat
in
daa
xor
dec
cmp
mulb
add
mov
ret
push
icebp
push
adc
mov
or
pop
fwait
insb
jge
sbb
mov
jg
cld
xor
xchg
adc
dec
xchg
inc
jne
push
cltd
call
sbb
mov
xchg
data16
sbb
add
sahf
sbb
mov
lcall
mov
fisubrs
aaa
and
and
data16
or
lcall
push
mov
movsb
push
and
mov
les
aaa
push
dec
push
sti
mov
and
mov
xchg
and
cmpsb
test
pop
mov
jp
imul
cmp
push
ret
out
push
push
call
lahf
jne
xchg
ja
push
dec
sub
cs
mov
adc
lahf
push
and
icebp
pop
ret
mov
and
cli
lret
pop
loop
lods
sti
push
clc
loope
call
enter
push
and
dec
imull
pop
leave
das
cmc
mov
sub
lods
in
lret
loopne
bswap
cltd
or
and
std
mov
pop
repnz
pop
push
pop
mov
iret
jo
xchg
inc
cmp
sbb
ss
mov
sub
sbb
sub
cmp
pop
lret
adc
inc
sub
dec
push
stos
popf
sub
cmp
cmp
movsl
sbb
cmpsw
popa
pop
pop
mov
sbb
jno
vmwrite
ds
or
imul
mov
test
and
mov
testb
lea
inc
js
movsb
mov
arpl
movsl
pop
shr
inc
adc
cld
lret
add
and
push
repz
mov
pushf
or
cmpl
or
sub
and
jle
popf
push
aad
xchg
cmp
mov
mov
inc
fistpl
test
dec
nop
xor
test
aaa
andl
sub
arpl
dec
push
xchg
mov
lret
add
pop
push
mov
dec
push
dec
dec
sub
dec
not
loop
push
std
cmp
push
jns
cmp
jae
mov
add
or
cmp
sub
shll
and
ljmp
inc
test
insl
shl
adc
cli
mov
aaa
inc
ss
dec
testb
testb
xchg
push
or
xor
std
dec
les
or
push
stos
out
dec
dec
adc
xor
les
mov
push
mov
mov
xchg
in
rorb
mov
and
cld
mov
and
arpl
js
xchg
adcb
pop
xchg
repnz
out
in
jae
mov
pop
outsl
push
aas
push
cmp
hlt
inc
leave
mov
mov
jo
sub
mov
inc
addr16
fcmovbe
adc
inc
gs
adc
xor
lock
jb
cmp
sbb
mov
and
xchg
mov
jb
cmp
mov
adcb
jb
cmp
push
mov
and
cmp
xor
sub
cmp
sbb
mov
jo
and
push
adc
fisubs
loopne
fsub
shlb
cmp
sbb
mov
and
in
jb
cmp
jo
push
in
jb
cmp
cmp
xchg
and
sbb
adc
cmp
mov
sbb
mov
and
xchg
enter
mov
sbb
mov
and
in
jb
cmp
pusha
mov
and
dec
enter
jb
cmp
sbb
mov
and
xchg
or
and
ja
in
jb
cmp
sbb
mov
and
in
jb
cmp
andb
xchg
jo
push
cmp
dec
mov
and
xchg
xor
sub
and
cmp
sbb
mov
sbb
inc
sbb
lock
fmul
shl
enter
mov
test
mov
in
jb
cmp
jo
inc
push
enter
jb
cmp
sbb
mov
and
xchg
sbb
adc
or
loop
sbb
lock
fmuls
xchg
ror
in
jb
cmp
nop
and
in
jb
cmp
pop
mov
and
inc
enter
jb
cmp
sbb
mov
and
mov
mov
out
xor
loopne
fdivs
cmp
sbb
mov
and
in
jb
cmp
js
jo
push
jb
cmp
inc
mov
and
xchg
sub
and
sbb
cmp
sbb
mov
jns
inc
loopne
fcoms
shlb
mov
test
inc
mov
enter
jb
cmp
push
pop
xchg
push
enter
jb
cmp
sbb
mov
jg
inc
adc
or
mov
out
xor
loopne
fdivs
cmp
sbb
mov
and
in
jb
cmp
js
jo
push
jb
cmp
inc
mov
and
xchg
sub
and
sbb
cmp
sbb
mov
jns
inc
loopne
fcoms
shlb
mov
test
inc
mov
enter
jb
cmp
push
pop
xchg
push
enter
jb
cmp
sbb
mov
and
xchg
adc
or
adc
clc
adc
jb
cmp
sbb
mov
and
xchg
mov
jb
cmp
mov
adcb
jb
cmp
push
mov
and
cmp
xor
sub
cmp
sbb
mov
jo
and
adc
lock
loopne
fsub
shlb
cmp
sbb
mov
and
in
jb
cmp
jo
push
in
jb
cmp
cmp
xchg
and
sbb
adc
cmp
mov
sbb
mov
and
xchg
enter
mov
sbb
mov
and
in
jb
cmp
pusha
mov
and
dec
enter
jb
cmp
sbb
mov
and
xchg
or
and
ja
in
jb
cmp
sbb
mov
and
in
jb
cmp
andb
xchg
jo
push
cmp
dec
mov
and
xchg
xor
sub
and
cmp
sbb
mov
sbb
inc
adc
lock
fmul
shl
enter
mov
test
mov
in
jb
cmp
jo
inc
push
enter
jb
cmp
sbb
mov
and
xchg
sbb
adc
or
loop
adc
lock
fmuls
xchg
ror
in
jb
cmp
nop
and
in
jb
cmp
pop
mov
and
inc
enter
jb
cmp
sbb
mov
sbb
mov
sbb
inc
mov
mov
fmul
shl
enter
mov
test
mov
in
jb
cmp
jo
inc
push
enter
jb
cmp
sbb
mov
and
xchg
sbb
adc
or
loop
push
xor
sbb
fmuls
xchg
ror
in
jb
cmp
nop
and
in
jb
cmp
pop
mov
and
inc
enter
jb
cmp
sbb
mov
and
mov
mov
out
xor
loopne
fdivs
cmp
sbb
mov
and
in
jb
cmp
js
jo
push
jb
cmp
inc
mov
and
xchg
sub
and
sbb
cmp
sbb
mov
jns
inc
loopne
fcoms
shlb
mov
test
inc
mov
enter
jb
cmp
push
pop
xchg
push
enter
jb
cmp
sbb
mov
and
xchg
adc
or
adc
clc
or
cmp
jb
cmp
sbb
mov
and
xchg
mov
jb
cmp
mov
adcb
jb
cmp
push
mov
and
cmp
xor
sub
cmp
sbb
mov
jo
and
or
lock
loopne
fsub
shlb
cmp
sbb
mov
and
in
jb
cmp
jo
push
in
jb
cmp
cmp
xchg
and
sbb
adc
cmp
mov
sbb
mov
and
xchg
enter
mov
sbb
mov
and
in
jb
cmp
pusha
mov
and
dec
enter
jb
cmp
sbb
mov
and
xchg
or
and
ja
in
jb
cmp
sbb
mov
and
in
jb
cmp
andb
xchg
jo
push
cmp
dec
mov
and
xchg
xor
sub
and
cmp
sbb
clc
pop
sbb
mov
sbb
mov
and
xchg
enter
mov
sbb
mov
and
in
jb
cmp
pusha
mov
and
dec
enter
jb
cmp
sbb
mov
and
xchg
or
and
ja
in
jb
cmp
sbb
mov
and
in
jb
cmp
andb
xchg
jo
push
cmp
dec
mov
and
xchg
xor
sub
and
cmp
sbb
mov
sbb
inc
add
and
xchg
fmul
shl
enter
mov
test
mov
in
jb
cmp
jo
inc
push
enter
jb
cmp
sbb
mov
and
xchg
sbb
adc
or
loop
add
lock
fmuls
xchg
ror
in
jb
cmp
nop
and
in
jb
cmp
pop
mov
and
inc
enter
jb
cmp
sbb
mov
and
mov
mov
out
xor
loopne
fdivs
cmp
sbb
mov
and
in
jb
cmp
js
jo
push
jb
cmp
inc
mov
and
xchg
sub
and
sbb
cmp
sbb
mov
jns
inc
loopne
fcoms
shlb
mov
test
inc
mov
enter
jb
cmp
push
pop
xchg
push
enter
jb
cmp
sbb
mov
and
xchg
adc
or
adc
clc
add
cmp
jb
cmp
sbb
mov
and
xchg
mov
jb
cmp
mov
adcb
jb
cmp
push
mov
and
cmp
xor
sub
cmp
sbb
mov
jo
jo
mov
jns
inc
loopne
fcoms
shlb
mov
test
inc
mov
enter
jb
cmp
push
pop
xchg
push
enter
jb
cmp
sbb
mov
and
xchg
adc
or
adc
stos
pop
outsl
sub
dec
adc
sahf
js
add
in
cmp
out
in
or
xchg
dec
add
les
add
add
out
xchg
je
int3
or
adc
enter
hlt
or
sbb
add
movsl
inc
sub
addb
add
or
sbbl
add
pop
nop
in
adc
insb
or
mov
fwait
sub
pop
inc
pop
or
or
or
adc
or
test
jl
sbb
sub
push
call
push
add
rclb
push
fisttpll
fwait
stc
or
or
and
cld
cmp
mov
pop
sub
xor
roll
inc
push
call
xor
mov
jne
data16
ljmp
add
mov
mov
dec
pop
mov
jmp
or
leave
je
icebp
ja
sub
or
andb
cld
add
roll
inc
xchg
pop
call
mov
sbb
inc
inc
jmp
leave
dec
push
push
mov
je
xchg
jns
inc
cmpl
sub
jmp
stos
mov
sub
mov
xchg
jnp
mov
call
incl
orl
inc
jns
jmp
sbb
rclb
mov
dec
cmpsl
jnp
jmp
mov
out
pushf
sti
aas
call
adc
or
fnsave
pop
ds
or
je
cmpw
jne
adc
ds
fildl
mov
pop
cmp
adc
add
loope
addb
adc
sub
out
cmpl
ret
cmp
jne
jecxz
pop
adc
sub
jl
cmp
or
add
dec
jge
aas
dec
jecxz
scas
iret
mov
nop
jmp
xorl
or
mov
fstp
pop
std
xchg
shlb
dec
push
mov
das
mov
push
sahf
push
inc
imul
adc
je
add
jmp
flds
inc
sub
add
sub
loope
fsubrs
daa
pop
pusha
or
push
cmpsl
pop
xchg
in
xor
mov
sbb
adc
or
sbb
mov
cmpsl
push
xchg
lahf
sub
adc
push
int
sbb
push
or
sbb
cmc
jns
push
sub
and
repz
or
and
pop
pushf
pop
call
adc
push
cmp
int
inc
sarl
sub
jecxz
pusha
mov
sub
pop
add
cs
fstps
adc
iret
mov
lds
dec
lds
sbb
lock
mov
outsb
mov
push
xchg
pop
sbb
adc
stos
int
xor
and
imul
clc
jmp
scas
push
ds
xchg
loopne
out
xchg
mov
push
mov
push
push
gs
inc
push
pop
mov
mov
shr
xchg
xor
ja
adc
xor
in
jge
cmpsb
out
and
loop
mov
int3
adc
or
je
push
jne
add
push
daa
in
push
mov
movsb
jmp
loope
ret
and
xchg
push
xchg
mov
dec
ds
jne
mov
leave
xchg
idiv
xor
add
lret
sub
mov
ljmp
mov
cmp
add
je
dec
addl
and
in
sbb
pop
push
push
call
xorl
xor
cld
inc
dec
or
sub
inc
sbb
push
mov
jae
jnp
adc
into
pop
movsl
add
movw
icebp
fistps
ja
fnsave
aam
ret
push
inc
divb
sbb
out
jns
and
int
pop
lcall
mov
sbb
xchg
and
mov
push
pop
jae
call
cmpb
repz
add
pop
push
leave
and
ja
dec
js
sub
jae
mov
and
push
and
aam
push
mov
jb
push
incl
mov
in
jne
js
add
dec
js
mov
or
cmp
and
adc
or
adc
ljmp
and
test
pop
icebp
sti
cs
aam
roll
xor
call
lcall
inc
rorl
add
xchg
push
xor
cmpsb
or
add
es
adc
or
jo
mov
and
ja
mov
int3
sub
pop
leave
mov
mov
or
nop
ss
ret
sbb
xor
mov
jmp
orl
or
push
add
xlat
call
cmpl
add
or
pop
pop
sarb
ja
leave
or
ja
stos
xchg
int
sbb
jg
out
xor
adc
loop
jmp
fld
daa
call
adc
adc
daa
mov
ljmp
sbb
call
mov
test
jg
movsl
inc
and
mov
jmp
stos
push
and
hlt
fistl
std
dec
xor
and
xchg
jmp
mov
xor
cmp
into
nop
sub
pop
sbb
stos
push
push
inc
divb
sti
into
dec
push
adc
testl
mov
push
fildll
fdivs
or
f2xm1
in
add
adc
fistpll
sub
les
jnp
movsl
aad
adcl
push
jns
shlb
sarb
fs
inc
push
lea
jns
fcomip
sub
add
jmp
push
pop
dec
lds
fbld
fisttpl
sub
leave
movsb
out
int
pop
push
and
mov
sahf
in
stos
xchg
fstps
xchg
jae
cmpsl
daa
xchg
sub
out
loop
aam
gs
fstp
mov
leave
add
cmp
in
adc
or
fistpll
dec
inc
and
cmp
or
pop
jmp
iret
subl
adc
ftst
mov
fstp
sahf
mov
mov
mov
inc
mov
aas
push
or
mov
or
pop
imul
pop
mov
test
sub
rorb
add
sahf
cltd
cli
pop
or
adcb
mov
fstps
or
pop
add
scas
dec
and
inc
shlb
adc
scas
adc
push
ljmp
dec
sub
insl
pop
adc
mov
adc
inc
push
pop
inc
jmp
fcoml
lahf
jbe
dec
push
or
or
rorl
test
sbb
adc
movsl
xchg
inc
pop
jl
sbb
loope
or
inc
mov
sbb
push
mov
xchg
shr
dec
pop
and
out
push
xor
fisttpll
add
or
shlb
inc
stos
cmp
xchg
add
andl
pop
fnstcw
push
or
nop
or
add
fstps
popf
lahf
add
push
cwtl
in
pusha
imul
xchg
xchg
pop
push
sub
mov
ss
add
sub
call
out
lret
lcall
or
in
pop
clc
std
popf
icebp
sub
and
dec
or
jbe
xor
pop
jl
dec
or
dec
xlat
mov
lock
in
cmp
in
pop
mov
push
aam
into
int
int
dec
mov
dec
adc
dec
sbb
decb
cmpsb
push
mov
jnp
sub
cmp
addl
sub
add
or
mov
xchg
ljmp
movsb
inc
fists
jp
xchg
sbb
and
jno
inc
or
xchg
int
in
lock
sahf
dec
les
enter
or
push
xchg
leave
outsb
aam
inc
push
dec
sbb
pop
scas
repnz
push
add
int
andl
and
push
sbb
daa
cs
call
or
daa
adc
repnz
outsb
int
xor
mov
movsl
or
push
ficoms
cmp
clc
push
pop
fmull
pop
aad
fs
aas
cmpsb
push
adc
stos
cmp
push
and
iret
xchg
movsl
rorb
lock
inc
repnz
nop
js
and
xchg
inc
pop
add
sbb
jl
or
mov
add
mov
xlat
sarb
and
push
xchg
fimull
or
rcrb
setge
pop
dec
push
push
xor
cmpsl
push
stos
and
pop
daa
in
sub
add
or
mov
dec
add
roll
lret
cmp
dec
clts
and
pushf
add
push
push
lea
popa
dec
sbb
aam
es
and
fsubr
insl
dec
lea
xchg
xchg
jp
repz
repz
js
or
enter
cmp
out
adc
or
shll
iret
and
call
jl
push
pop
adc
adc
lret
mov
insb
jp
mov
fs
popa
scas
sbb
scas
iret
and
bound
leave
jb
ret
psubsb
cmp
mov
lea
dec
inc
je
add
cmp
add
adc
mov
loop
mov
pusha
into
insl
inc
fmull
ficompl
mov
dec
mov
and
jb
push
inc
mov
daa
jge
mov
pop
xchg
xor
js
lret
inc
pop
add
pop
sti
rcrl
push
add
inc
push
je
movsl
aas
xor
jne
stos
sub
mov
addb
fistpl
nop
ficompl
lret
push
jmp
push
ja
mov
sbb
pop
jmp
out
leave
std
add
mov
cmp
ja
sahf
sbb
rorl
or
in
ds
xchg
jmp
mov
scas
sub
xor
cmpsb
sub
cmp
movsb
or
jns
push
scas
sub
mov
mov
jle
mov
leave
mov
fnsave
mov
and
pop
xor
push
xchg
add
sarl
vpcmpgtd
add
repz
xchg
push
or
push
cmp
and
rorl
add
cmp
xchg
sub
cmp
outsl
insb
fisttpll
fmull
jo
fisttpl
or
jbe
in
cmp
mov
call
das
hlt
pop
stos
xchg
adc
testb
xorb
leave
jno
pop
dec
adc
repnz
jb
outsb
loopne
add
mov
fdivrl
add
pop
les
add
inc
pop
sub
inc
dec
repnz
push
mov
subb
mov
or
inc
or
xlat
add
inc
ljmp
dec
cld
jl
dec
ds
jge
xchg
sahf
xlat
or
xor
cs
sub
mov
mov
xchg
adcb
scas
outsl
fdivrs
inc
push
pop
inc
push
test
or
push
or
inc
es
inc
loop
xchg
sbb
push
xchg
aam
aas
cltd
mov
xchg
or
imul
in
inc
lea
pushf
aas
shrb
cmpsb
mov
jg
mulb
pop
es
adc
shl
decl
pop
fcom
and
nop
sbb
or
shl
cmpsb
adc
inc
dec
adc
in
wrmsr
test
sub
idivb
push
push
cmp
xchg
sub
adc
rolb
add
xlat
mov
out
mov
or
push
pop
sbb
rcrl
cli
mov
sbb
shll
and
sbb
push
pop
repnz
mov
ret
mov
push
addl
jecxz
mov
push
pop
jle
pushf
stc
pusha
sub
cld
xchg
jl
jne
mov
add
xor
das
sub
lds
add
push
ret
inc
jno
or
fistl
add
fcom
mov
movsb
and
shll
iret
pop
and
js
sti
sbb
fstpl
add
inc
pop
enter
test
arpl
outsb
aad
mov
faddl
rcrl
shlb
fmull
test
dec
test
into
jmp
mov
add
and
fnclex
mov
out
jns
jno
fcomi
pop
idivb
xor
and
sbb
or
icebp
push
and
mov
movsl
dec
or
inc
xor
xor
ss
and
ss
dec
sahf
loop
mov
and
mov
adc
or
push
and
das
inc
sbb
xchg
cmpb
xchg
popf
mov
xor
nop
sub
jbe
lret
sarb
out
and
js
mov
xchg
sbb
mov
inc
inc
sarb
daa
out
sub
push
sbb
adc
dec
mov
add
adc
mov
cmp
or
cmpsl
dec
jmp
inc
inc
je
jo
mov
add
mov
lret
loop
xchg
mov
add
shr
ret
test
lcall
test
leave
pop
xchg
in
leave
xchg
out
inc
inc
sub
cmp
dec
jmp
pop
and
jmp
mov
inc
jmp
pop
fs
pop
xor
loope
das
das
inc
aaa
ss
sqrtps
das
or
addr16
gs
jae
mov
lock
xchg
inc
and
sti
dec
call
mov
mov
push
scas
into
push
aam
push
sbb
jecxz
add
xor
sbb
fisttpll
ret
sbb
sbb
pop
lahf
sbb
adc
add
cld
sbb
adc
into
sbb
mov
sub
outsl
ljmp
sbb
fldcw
sub
sbb
lahf
jg
pusha
test
lahf
sbb
sub
cli
dec
arpl
lret
inc
xor
and
lods
es
mov
inc
shrb
dec
pop
std
and
cmp
push
test
push
shrb
dec
dec
mov
sub
inc
inc
in
jbe
cmp
sbb
data16
in
fimull
push
push
sbb
fnstsw
sbb
push
sbb
test
sbb
push
sbb
xor
dec
pop
cmpsl
movsb
inc
clc
adc
loop,pn
je
es
push
dec
pop
ret
cltd
sbb
mov
fwait
aas
cld
or
int3
mov
push
out
sub
mov
mov
cmpsl
push
pop
adc
and
arpl
push
dec
gs
sbb
test
push
mov
rclb
add
xor
mov
scas
pop
divl
call
jmp
pop
push
scas
mov
nop
fstpl
nop
xor
sub
aaa
mov
mov
push
pop
jge
sbb
loop
mov
inc
xchg
test
push
in
imul
push
sub
movsl
popa
sub
push
shr
push
push
ljmp
jb
push
adc
sbb
call
lahf
mov
rorb
push
ret
xchg
cld
dec
mov
mov
xorl
bound
xor
inc
inc
add
movsb
dec
out
inc
pushf
test
fidivl
mov
xchg
es
dec
lret
jmp
dec
shll
push
dec
dec
and
push
fisubl
pop
inc
jmp
sbbb
inc
leave
push
jne
scas
lods
push
push
adcb
fisttps
mov
clc
add
ficoml
dec
inc
shr
adc
xchg
mov
inc
out
rolb
xchg
pop
scas
arpl
jmp
add
sub
cmpsb
mov
add
jl
push
shr
sbb
add
lods
inc
mov
mov
cmp
add
addl
pop
cli
inc
aad
push
push
pop
dec
jno
dec
push
das
sub
arpl
pusha
push
xor
inc
xchg
mov
ds
cwtl
hlt
daa
cltd
push
outsl
sahf
mov
push
iret
xchg
fbstp
and
movsb
xlat
mov
mov
sub
xchg
adc
ret
mov
scas
adc
adc
mov
sbb
ljmp
inc
mov
aas
mov
movsl
ss
jns
sbb
add
cmpsl
and
xor
adc
sub
and
mov
pop
add
jb
shrb
add
and
mov
xor
adc
ss
xchg
cmp
sub
sub
push
push
inc
scas
insb
mov
sbb
lea
dec
add
or
imul
xor
jecxz
aam
and
push
push
lcall
push
js
out
dec
leave
jecxz
dec
mov
test
cmp
jbe
push
xor
push
mov
adc
adc
adc
push
adc
mov
out
and
mov
stc
dec
push
test
or
in
jo
or
pop
sub
mov
cmp
xchg
jae
scas
loop
xorb
call
je
sbb
add
lret
mov
sbb
or
mov
mov
mov
mov
dec
lret
jns
fs
fchs
fwait
out
push
pop
neg
push
stos
les
add
pop
dec
repnz
ljmp
ljmp
cmpsl
ja
loope
div
out
adc
lock
xor
adc
cmpsl
loop
notl
sarl
divl
adc
scas
mov
jmp
add
or
cmp
fnstcw
cmpsb
push
pop
cmp
cli
in
jb
add
mov
call
fistpll
xlat
adc
in
pusha
es
mov
jae
cmp
inc
add
shr
cmp
adc
mov
aaa
adc
lea
sbb
inc
cmp
ror
jns
xchg
cmp
sbb
loopne
or
test
rcrb
push
mov
ds
push
mov
cmp
inc
adc
lahf
mov
xor
adc
adc
adc
pop
and
adcl
mov
pushl
push
test
ds
xor
sbb
je
cmp
lock
sbb
jle
clc
push
fcmovu
out
sub
shl
push
cmpsl
sbb
add
sbb
scas
int
es
xlat
or
mov
xchg
mov
jp
jnp
repz
js
pop
mov
add
cmpsb
hlt
xor
flds
inc
frstor
cmp
inc
sahf
sub
inc
jnp
dec
or
inc
in
sub
addb
sub
loope
push
push
mov
push
push
imul
push
jae
leave
pop
pop
xchg
cltd
or
je
add
scas
sub
dec
rolb
cmc
pop
int3
ja
jmp
inc
and
xchg
stc
xor
call
test
pop
mov
stc
fcomi
sub
lea
inc
and
stos
mov
insb
mul
scas
xchg
push
xlat
movsl
inc
push
push
andl
scas
aaa
int3
inc
jns
pop
xor
cmp
hlt
dec
add
mov
popa
sub
pusha
test
mov
cld
xlat
mov
pop
les
mov
shr
call
cli
mov
ss
push
movsb
jne
test
clc
jb
mov
je
cwtl
test
add
ss
ret
add
movsb
add
mov
inc
add
xor
popa
adc
jmp
loope
int
mov
cmpsl
xchg
into
xchg
int3
fidivl
out
std
inc
rorl
or
or
lock
mov
fidivrs
fists
xchg
jl
call
lahf
pop
stos
adc
mov
testl
jne
or
push
outsb
pop
je
inc
jmp
mov
ljmp
sbb
sti
sbbb
sub
jge
aas
xor
sbb
call
test
jne
test
push
out
xchg
adc
inc
jmp
bound
adc
xchg
inc
mov
sub
imul
jmp
sahf
mov
jmp
cltd
es
call
push
sub
mov
and
std
jmp
lods
mov
adc
pop
jmp
gs
jnp
adc
bound
cltd
push
push
mov
dec
sub
push
adc
sbb
lret
sub
repz
mov
cltd
jp
adc
cwtl
int3
cltd
add
add
mov
adc
call
and
mov
push
pop
int3
xchg
xchg
cmpxchg
fisttpl
test
dec
lods
mov
jmp
fucomi
in
xor
rorb
js
push
fwait
pop
and
adc
xor
xor
sbb
insl
adc
sbb
push
sub
test
mov
sbb
shrb
push
cmpsl
push
std
mov
test
je
mov
adc
push
push
or
test
pop
xor
sub
mov
jmp
jecxz
jl
div
idiv
pop
jl
lds
call
pop
xchg
jmp
inc
or
loop
insb
xchg
or
mov
mov
jmp
sub
pop
hlt
sti
hlt
iret
cmp
jmp
std
out
jecxz
or
and
push
dec
rclb
sarb
movsb
sub
sbb
aaa
xor
test
adc
mov
push
xchg
stos
test
call
and
jno
leave
cmp
xchg
in
jl
cmpl
xchg
xorl
das
shll
shl
push
mov
stos
adc
cmpsb
sub
in
in
cli
aaa
and
xchg
xor
test
jmp
sbb
adc
ljmp
sub
add
push
call
inc
inc
mov
dec
or
or
dec
aam
call
repnz
mov
ja
enter
mov
jg
cmp
pop
inc
cli
mov
jae
orl
mov
es
xchg
das
test
cs
and
pop
shll
loope
lcall
scas
aas
add
xchg
inc
rcr
lock
sbb
cmp
jb
ret
je
inc
adc
lret
jmp
mov
or
mov
mov
xor
add
dec
push
and
loope
dec
inc
in
dec
push
shlb
in
and
push
call
jmp
out
outsl
popa
stos
call
icebp
sahf
pop
call
in
test
mov
jbe
xchg
add
mov
xor
push
lret
repnz
ss
push
aas
fwait
aad
clc
jecxz
jmp
pop
cmp
add
pushf
xchg
jl
cmp
inc
outsb
loop
fdivr
out
adc
jmp
loop
test
sbb
or
rorl
inc
lock
xchg
cmp
push
push
movsb
lock
call
sahf
add
or
sub
fisubs
movsl
insb
popf
iret
sbb
mov
flds
lret
fmuls
dec
jmp
call
sbb
loope
repz
push
adc
mov
das
mov
mov
sti
jmp
mov
ja
flds
xor
je
fstps
jne
push
fs
lcall
jne
and
adc
js
jmp
mov
jne
inc
test
test
push
mov
loope
in
insl
popa
bound
add
les
add
jbe
dec
jle
sbb
jle
push
hlt
je
or
and
dec
mov
rolb
shr
jae
mov
xchg
or
sub
xchg
pop
push
xchg
pop
hlt
iret
lret
or
or
push
ret
add
mov
mov
les
jno
cltd
mov
sti
subl
out
shlb
outsb
and
pop
cltd
repnz
mov
fstpl
adc
and
icebp
shlb
enter
clc
cwtl
in
cwtl
xchg
mov
mov
aaa
xchg
adc
nop
jo
faddl
mov
ret
jbe
cli
cltd
pop
add
and
xchg
rolb
push
add
lock
repnz
in
andb
and
xor
adc
pop
pop
xchg
test
jmp
into
in
stos
les
jecxz
sub
or
add
std
movsb
cwtl
mov
inc
adc
pop
sbb
popf
aaa
mov
scas
cmp
adc
lods
nop
xchg
movsl
repnz
loop
popf
inc
nop
and
and
push
js
sub
sub
fnclex
and
insb
mov
adc
mov
sbb
bswap
push
dec
or
pop
nop
adc
lahf
enter
lock
inc
out
and
pop
xor
xlat
xor
sbb
sub
push
or
mov
jne
into
mov
xchg
mov
rcrb
mov
aam
mov
es
pop
test
lock
or
mov
cvttps2pi
dec
fsubrs
jge
cltd
testl
bound
push
adc
fprem1
jb
xchg
mov
movsl
mov
shlb
xchg
adc
insb
std
ret
dec
je
lahf
movsb
test
shlb
call
clc
pushf
adc
jmp
movsb
mov
test
and
xchg
jg
cmp
imul
jle
inc
add
mov
inc
push
mov
adcb
enter
and
scas
push
pop
cltd
out
push
rcrl
push
mov
daa
jmp
fwait
sahf
jo
test
jmp
mov
imul
icebp
adc
sub
fnstsw
ficoml
dec
aas
sub
xchg
sbb
push
jne
je
unpcklps
pop
pop
pop
jmp
mov
and
xor
fstl
call
cmpsb
mov
les
mov
lods
xchg
pop
jecxz
repnz
mov
sbb
pop
ret
jo
sub
mov
sbbl
cmp
cmp
sbb
aas
jne
inc
fnop
lods
scas
sub
pop
and
xlat
pushf
push
and
push
xor
push
and
scas
mov
lods
and
mov
inc
or
sti
insl
outsl
imulb
insb
repz
test
sub
out
cld
loope
call
mov
jnp
sbb
add
inc
or
add
cmp
test
call
jp
scas
or
loope
mov
leave
or
cmp
dec
rcrb
lret
xchg
cmpsb
cmp
ss
call
adc
jmp
aam
pop
xor
mov
cmp
push
mov
or
nop
int
or
shrb
inc
sahf
icebp
fldl
add
or
fnstcw
jmp
loop
inc
pop
fistl
jecxz
adc
scas
jb
outsb
adc
xchg
lods
imul
inc
mov
adc
cmp
adc
arpl
adc
out
adc
push
and
sub
decl
add
bound
add
sbb
leave
jae
adc
nop
sbb
mov
cmp
or
xchg
test
adc
mov
push
repnz
adc
test
cltd
push
and
adc
or
imul
loop
sbb
or
push
and
adc
rorb
stc
jl
clc
jbe
enter
add
adc
fildll
sub
push
dec
sahf
jg
jns
push
sub
fidivrl
daa
xchg
cmp
ds
sub
pop
adc
cmc
icebp
pop
fs
pushf
inc
cmovns
push
mov
mov
int3
ss
xor
xchg
std
int3
inc
jg
lods
dec
cmp
ljmp
add
push
insb
aaa
call
add
cmc
xor
xor
xchg
sbb
fwait
xor
pop
stc
adc
icebp
dec
mov
push
call
push
mov
xchg
cmp
mov
in
jno
push
lea
sbb
adc
sub
push
add
push
call
sbb
xchg
arpl
lds
test
add
or
gs
sbb
stc
inc
dec
jns
movsl
cmp
xor
or
test
jmp
fisttpll
lea
sbb
adc
mov
jo
jne
push
or
fcoml
andw
adc
ljmp
jmp
fsubrs
mov
inc
mov
aaa
xchg
lea
pushf
inc
xchg
test
int
dec
xor
cmp
out
movsl
adc
mov
mov
push
jmp
clc
and
push
adc
cmp
cmc
dec
mov
ja
xlat
dec
repz
ja
mov
fistps
push
rcll
fbld
inc
sub
push
call
call
lret
jmp
or
call
inc
or
add
jae
inc
mov
push
sub
repnz
cwtl
or
mov
shll
outsb
mov
aam
pusha
inc
or
shll
cmp
lds
push
je
mov
sbb
adc
xor
shll
mov
add
call
inc
notw
testl
movsl
testl
nop
sub
and
mov
push
adc
and
daa
sbb
inc
xchg
xchg
mov
pop
fs
or
pop
sub
push
adc
stos
cmp
popa
push
xchg
fcom
xchg
jnp
je
sub
lret
cmp
fisttpl
xchg
aas
add
or
push
iret
call
jp
and
add
out
fldenv
test
xlat
std
inc
aam
repnz
push
mov
dec
or
dec
mov
or
dec
and
inc
push
jl
push
push
push
lea
ljmp
xchg
or
inc
push
call
mov
inc
and
mull
push
dec
add
adc
sbb
inc
pop
jmp
call
test
aas
inc
testb
adc
adc
and
jp
iret
xor
clc
sarb
jmp
sbb
inc
ret
call
rcrl
jne
jnp
cmp
pop
andl
mov
data16
add
mov
push
stos
aas
or
push
clc
jmp
and
jmp
xchg
sbb
call
add
loop
aam
and
or
mov
adc
nop
clc
jecxz
test
mov
ffreep
jecxz
xorl
jnp
lcall
pusha
imul
ror
add
push
cmp
cld
mov
in
xor
sarb
jmp
add
sub
jbe
cmpl
mov
jb
mov
inc
cld
fdiv
inc
test
push
ret
xor
mov
mov
add
pushl
push
cmp
lock
std
pop
fisubrs
cmp
stos
xchg
scas
adc
jg
repz
movsl
jp
dec
enter
push
cld
fiadds
push
push
push
aas
sub
push
outsb
sti
dec
push
sbb
pop
push
mov
jnp
orb
loope
cmp
add
imul
xchg
nop
lea
test
or
jb
outsb
imul
xchg
xor
in
scas
jbe
inc
adc
int
imul
mov
push
into
cmp
out
shrl
adc
pop
or
xchg
test
or
sbb
mov
stos
cmc
mov
sub
jbe
xchg
in
movsb
mov
add
dec
dec
add
fs
and
inc
xor
insb
imul
push
mov
add
dec
dec
dec
out
and
jmp
outsl
cmp
sub
xlat
inc
or
xlat
dec
testb
cmp
jne
fildll
aam
ds
and
jnp
enter
adc
inc
lea
push
or
mov
push
repnz
push
mov
into
sbb
and
pop
and
roll
adc
or
or
rorl
add
rolb
dec
repnz
jb
rol
sbb
lea
jb
lret
mov
add
lret
and
outsb
cmpsb
push
and
mov
dec
inc
cmpsl
push
rcll
jmp
cltd
out
push
pop
mov
or
jno
cmp
dec
in
cld
lret
mov
pop
push
xlat
sti
pop
sub
lods
xor
push
add
andb
push
push
sbb
xchg
insb
jl
xchg
push
xchg
or
dec
and
mov
adcb
dec
push
push
js
enter
pushf
and
or
add
and
enter
lea
push
lods
mov
sarl
sbbl
loope
and
add
mov
mov
js
jbe
ss
pop
ficoms
rol
rep
or
in
push
aam
jl
pop
pop
cld
pop
in
stos
stc
xchg
sbb
add
cmp
adc
cltd
mov
sti
addr16
es
cmp
nop
mov
push
adc
clc
xchg
jge
push
lock
inc
icebp
mov
sbb
out
cld
popf
test
mov
jo
stos
mov
sbb
jge
test
out
or
es
mov
mov
sti
or
js
das
cli
dec
adc
ljmp
pop
into
sbb
or
idivb
adc
enter
lret
rorl
test
or
and
imul
jp
inc
add
in
adc
mov
in
add
cmp
in
sbb
sbb
loopne
ja
xor
cmp
dec
and
mov
xor
gs
push
imul
xchg
push
dec
sub
xor
dec
lods
sbb
ss
dec
nop
and
out
shll
add
push
repz
mov
and
cmp
sbb
xchg
mov
sub
adc
cmp
pop
js
mov
jnp
aaa
notb
xchg
scas
cltd
cmpsl
jno
jne
jno
out
push
in
pop
call
cld
xchg
mov
aas
sbb
cltd
push
fcompl
and
inc
inc
xor
aad
dec
andb
jne
push
hlt
and
or
pop
jle
dec
and
or
jo
and
imul
sub
cs
mov
test
rcll
enter
sahf
xchg
mov
mov
stos
cmpsl
std
les
jg
jbe
sub
mov
stos
mov
pushf
xor
es
mov
icebp
adc
sbb
push
sbb
leave
js
jmp
gs
dec
test
int3
xor
jp
dec
iret
nop
pop
orb
enter
dec
mov
test
mov
dec
or
sar
lock
cmp
lea
and
mov
out
mov
xor
dec
and
lahf
inc
fs
sbb
jne
es
push
gs
sbb
mov
call
insb
leave
insb
dec
sub
mov
das
jne
cmc
push
lock
xchg
mov
and
dec
out
pop
addr16
psubb
pusha
jns
lea
popf
daa
dec
cmpl
and
mov
mulb
decb
cltd
push
mov
push
pop
ljmp
adc
mov
push
push
push
mov
adc
cld
shlb
or
cs
test
out
dec
push
add
lds
outsl
lock
adc
dec
adc
push
mul
push
adc
enter
inc
jo
aad
or
or
push
and
test
adc
inc
jno
cli
lds
lret
mov
cmp
pop
add
pushf
jbe
lea
hlt
scas
sub
xor
dec
jne
ret
pop
add
jb
push
idivl
xor
and
gs
push
mov
je
xacquire
or
pushf
mov
imul
jle
jle
or
ljmp
js
inc
subb
cmp
sbb
lock
pop
adc
dec
sbbw
pushf
inc
mov
leave
dec
push
out
lea
call
outsl
add
dec
cld
lds
sub
inc
or
mov
push
scas
in
lret
out
or
dec
mov
sbb
or
jmp
xor
jmp
jno
jmp
sbb
pop
sub
cmp
xor
rcrb
out
adc
cmp
xchg
adc
fs
push
push
jnp
jge
ret
xchg
dec
jg
mov
cmc
sub
sbb
cld
mov
cmc
mov
dec
pop
push
and
pop
call
pop
ret
seto
fcoms
lea
add
xor
out
call
clc
or
and
add
call
cld
nop
dec
sbb
mov
or
fwait
mov
lds
dec
mov
xchg
and
dec
insb
cmp
push
test
movsb
sbb
stos
mov
scas
shr
dec
aad
adc
ret
filds
mov
cltd
nop
push
popf
adc
sub
es
gs
dec
subl
adc
lods
cmp
pop
pop
cmpsl
dec
xchg
inc
test
or
inc
ds
cli
ficompl
cwtl
xorl
inc
or
or
sub
push
jle
decl
jns
xchg
adc
int3
shlb
into
pop
pop
inc
dec
lret
lods
aaa
cmpsb
push
pop
ffreep
sub
daa
push
xor
fucomi
inc
nop
add
or
ret
mov
jnp
xchg
pushf
sahf
das
daa
xchg
fstpt
dec
lds
movl
cmp
iret
mov
out
adc
push
cmovs
fists
dec
pop
fmulp
xlat
or
jl
rolb
mov
xchg
push
adc
jg
mov
jg
jo
push
rorl
inc
push
call
lea
shrb
mov
dec
mov
dec
orb
jne
mov
mov
shll
cmpsb
imul
and
mov
xor
adc
push
jno
pusha
push
call
xor
fwait
sub
rorl
jle
jp
call
mov
clc
repz
inc
or
insb
mov
ja
outsl
fs
or
out
adc
jmp
push
mov
push
or
jnp
push
push
pop
fwait
or
sbb
pop
and
mov
sti
add
fisttpl
mov
into
gs
jge
add
fs
push
push
rclb
les
sbb
cmpsl
test
sti
icebp
psubusb
add
sbb
sbb
in
std
inc
pop
fstpl
cmc
orl
adc
jmp
ret
sbb
sbb
pusha
daa
mov
or
imul
rol
cmp
dec
sbb
inc
lcall
pop
push
adc
mov
jne
nopl
bound
je
and
xor
and
in
das
or
and
adc
mov
or
fisubrl
div
ficompl
sbb
adc
adc
fldl
rolb
and
xchg
xor
push
jge
jmp
push
sti
push
imul
cltd
scas
add
sahf
mov
push
jne
movsb
nop
push
divps
push
lods
insl
test
xchg
push
shll
jb
pop
cmpsb
adc
js
push
pop
pushf
adcl
sub
pusha
pushf
call
pop
loope
jge
fcomp
add
inc
xchg
or
and
popa
adc
and
in
sbb
and
dec
decl
cltd
fsubl
sub
adc
push
out
add
es
es
imul
dec
push
inc
mov
add
pop
cwtl
xor
movups
movsb
jo
stc
adc
add
add
pop
jmp
cmp
sbb
jl
mov
push
sbb
inc
pushf
push
sub
cli
or
aaa
adc
cmp
pop
ret
fisttpll
sbb
negl
cwtl
pop
cmp
data16
mov
out
sar
out
or
push
mov
adc
enter
stc
pop
push
call
ja
and
std
lock
pop
ficompl
ds
jp
ret
mov
sub
mov
imul
stos
aaa
test
xchg
dec
mov
push
in
fbld
test
scas
lret
add
add
movsl
test
mov
ret
int
insb
pop
pop
fdiv
mov
addb
insl
stc
test
sub
cmp
dec
sbb
pop
mov
cmp
idivl
fs
inc
sarb
inc
outsb
sub
inc
pushf
cmp
cmp
lret
sti
pusha
adc
or
enter
mov
adc
and
sbb
mulps
enter
lahf
inc
mov
leave
xor
pushf
je
cmpl
xor
sbb
pop
cld
in
push
loope
mov
and
mov
pop
pop
in
adc
and
imul
or
jnp
shlw
int
mov
mov
adc
pop
pop
cli
jge
std
movsb
icebp
sbb
movl
push
lret
pop
testb
out
dec
inc
repz
rclb
xchg
sahf
dec
or
jmp
cmp
lcall
sarl
jb
mov
ds
jne
movsb
mov
lds
daa
sahf
cli
and
mov
add
sti
cs
mov
lret
push
mov
adc
push
and
push
sbb
nop
xchg
push
fs
int
ror
arpl
nop
jns
pop
in
jno
movsb
mov
sbb
jo
shr
cmpb
cmp
jl
cmp
jle
or
or
clc
test
testb
xlat
push
ret
push
push
fsin
and
idiv
inc
faddl
adc
iret
jbe
xor
xchg
cmp
or
sub
sti
mov
out
xchg
push
mov
or
xor
movsl
movsb
adc
in
jno
pcmpgtb
movsb
lcall
pop
push
int3
push
push
sbb
mov
or
jo
out
jb
dec
icebp
push
jb
sub
lock
push
shrb
js
fcomps
fwait
in
push
sti
or
jb
mov
mov
mov
enter
js
lea
inc
and
or
jbe
divb
mov
inc
sbb
jg
enter
pop
cmpsl
sahf
lret
adc
pop
mov
enter
mov
adc
cld
les
xchg
pop
sub
das
iret
pop
lock
mov
ret
push
xor
and
ret
scas
cmp
xchg
pop
xchg
sub
lahf
fcomi
xchg
ret
sub
in
push
stc
cmp
ret
cli
out
xchg
sub
xchg
adc
mov
xor
sub
movsb
dec
and
decb
mov
jae
pop
int3
in
push
xor
jg
xchg
add
rolb
xchg
inc
xchg
cmpl
es
stos
jl
xor
jle
cmp
adc
lods
mov
inc
inc
enter
push
dec
cmpsl
xor
pop
mov
xor
mov
or
sbb
cmp
xchg
adc
mov
test
inc
mov
stc
push
or
shrl
sbb
sub
call
cld
rcrl
xchg
pop
call
mov
and
pop
or
in
mov
into
or
ficoms
das
call
xchg
or
pop
sahf
int3
add
sub
arpl
add
sub
push
scas
mov
daa
in
push
aam
or
xchg
sub
pusha
icebp
je
enter
push
sub
inc
call
call
jl
or
frstor
aam
data16
mov
dec
lock
xor
fidivrs
xorb
cmp
and
jge
lock
pushf
out
sub
int
jle
xor
mov
aam
sub
outsb
sbb
dec
mov
jno
jmp
mov
fbstp
and
icebp
pusha
test
xor
adc
xchg
dec
pop
pop
fcoml
adc
aad
pop
push
aad
rcrb
loop
lret
pop
dec
leave
fsts
xchg
mov
xchg
and
mov
ret
movzwl
or
or
dec
mov
pop
sbb
fdivr
lea
imul
xchg
inc
cs
add
adc
jnp
mov
testb
xor
xor
xchg
inc
movl
push
repnz
clc
or
xor
loopne
xor
cltd
push
sbb
mov
cltd
inc
or
les
adc
sbb
add
lock
or
cs
cld
push
or
aad
and
push
jge
mov
and
hlt
cwtl
outsb
ret
dec
icebp
loop
sub
into
or
bound
es
in
sbb
clc
inc
pop
fcoms
mov
stos
xlat
test
and
push
fsubs
jge
inc
call
push
pusha
and
push
adc
cmp
aam
xchg
loopne
call
adc
negb
les
fadds
insb
lcall
ds
xchg
mov
shlb
mov
std
in
sub
cmp
in
cmp
into
insb
adc
movl
push
jge
inc
inc
ljmp
jg
cmp
jle
fcoms
outsl
daa
xchg
and
adc
sub
or
push
sub
push
sbb
testb
add
andb
cld
mov
dec
aad
push
mov
ss
adc
add
loopne
adc
sub
mov
nop
mov
add
lods
add
lock
ret
in
jae
popa
outsl
mov
int
cld
pop
clc
adcl
loope,pt
add
mov
fdivp
inc
lret
add
jne
fsubl
and
addr16
cvtpi2pd
shll
adc
lea
imul
push
mov
xor
push
and
and
gs
repnz
or
mov
pop
loopne
mov
pop
jle
mov
sub
inc
mov
cmp
mov
and
pop
call
jbe
sbb
push
inc
imul
in
inc
sarb
aaa
mov
mov
pop
insb
inc
jge
xor
inc
mov
lods
les
pop
cmp
mov
inc
pop
rcll
or
pop
xor
test
jbe
lret
mov
inc
mov
or
xor
dec
push
cwtl
movsl
sub
cmpl
orl
xor
xchg
adc
fs
sahf
adc
xor
jmp
and
sbb
popf
fs
xchg
loop
scas
adc
sbb
sbbl
adc
movsb
mov
les
adc
mov
and
mov
movsb
testl
cli
scas
js
test
scas
popa
sarb
push
mov
mov
jl
gs
lret
js
mov
aam
mov
push
and
imul
les
scas
and
inc
adc
adc
sbb
in
xchg
dec
jb
xchg
insl
fstpt
loop
cmp
test
mov
ret
xorl
mov
mov
and
lahf
inc
inc
cmp
test
or
js
cmp
push
sub
xchg
inc
jg
lret
dec
add
inc
and
inc
imul
sub
push
adc
hlt
jns
inc
push
jnp
adc
ja
mov
sti
enter
dec
cmp
push
push
or
shrl
sub
adc
loope
lock
nop
clc
sub
mov
fldenv
out
enter
mov
fsubp
pop
pop
je
addl
and
dec
mov
jge
push
scas
jno
adc
sarl
dec
xor
pop
leave
sbb
inc
jmp
loopne
push
popa
adc
adc
cmp
fwait
test
mov
les
sahf
xor
add
ret
aad
mov
and
dec
scas
movsl
pop
lret
push
inc
sub
jge
mov
lret
fsubrl
subb
push
push
xor
xor
orl
push
rcll
mov
scas
pop
pop
outsl
dec
cmp
or
or
and
lock
ljmp
stos
fcoms
cmp
sbb
call
aad
test
icebp
dec
mov
adc
leave
xor
pop
mov
fmuls
push
and
mov
lock
sub
insl
sarb
cltd
call
dec
push
pop
jle
in
xor
fimull
les
int3
pop
and
mov
outsl
or
cmp
popa
aad
sub
and
sub
add
out
inc
or
je
jle
bound
xor
inc
or
ja
cmpsb
mov
arpl
push
xchg
mov
push
fistl
sbb
pop
inc
aam
addb
and
fmull
in
or
addb
je
ret
push
push
mul
popa
jmp
lea
out
popa
push
in
or
fistps
in
das
xchg
pop
push
push
outsb
push
repnz
inc
insl
jne
popf
data16
or
or
cs
nop
aas
dec
pop
mov
call
cli
jns,pt
enter
test
and
cmp
andb
and
sbb
rcrb
andl
xchg
gs
imul
mov
cld
sub
sub
loop
sti
movsl
add
jmp
ss
mov
ret
push
fs
xor
andl
out
mov
into
and
add
sbb
jmp
cmp
movsb
loopne
lds
jmp
xor
lcall
lods
adc
add
inc
lods
adc
stos
mov
and
cmpsb
or
or
push
adc
pop
test
rcrl
cs
and
int3
jb
loope
je
adc
movsb
sbb
outsb
or
enter
repz
lock
ds
cld
test
and
test
jg
xchg
loop
ret
jg
cmp
je
mov
jne
scas
clc
push
and
mov
cmp
mov
sti
jns
aas
push
pop
test
dec
cmpsb
mov
cwtl
addr16
sbb
add
push
std
insb
mov
xor
xor
mov
adc
stc
fcmovb
sti
push
adc
out
pop
cmpsl
pop
fdivs
lea
call
rolb
outsb
cmp
sbb
and
lock
je
dec
push
mov
push
orl
and
mov
sbb
cmpsl
popa
mov
das
scas
fs
testl
out
cmp
pop
push
push
loop
inc
ja
out
adc
adc
ficomps
data16
pop
mov
mov
insl
movsb
xorl
push
shrl
je
xchg
adc
or
test
jne
test
xchg
xchg
shrb
add
les
scas
cmp
mov
jmp
ja
cs
and
push
and
ss
pop
pusha
or
sarb
and
push
sub
jne
lahf
jbe
sub
and
cmp
shll
mov
adc
cmp
sub
movsl
rol
adc
mov
mov
mov
lods
inc
loop
jmp
add
cmp
jne
ds
cs
adc
shlb
dec
sub
and
push
mov
ror
dec
nop
mov
xchg
jmp
sub
xchg
loop
movsl
or
movsl
or
call
sbb
dec
mov
inc
loope
push
and
sbb
out
sbb
dec
inc
lods
shll
lcall
xor
inc
jl
cmp
test
jmp
xlat
inc
movsl
daa
arpl
lahf
in
test
aaa
loop
int3
mov
stos
clc
setb
dec
test
fsub
call
cmpb
ret
push
jne
xor
arpl
xor
call
pop
sub
or
aaa
push
shr
outsb
pusha
adc
cs
pop
fmuls
sbb
xchg
mov
or
push
fs
pusha
popa
mov
lods
adc
pop
push
inc
test
ret
cmp
nop
fs
sbb
adc
mov
cltd
sub
mov
push
and
xchg
pusha
idiv
ficompl
out
xor
repz
sub
sub
xchg
push
push
nop
inc
sub
push
popa
cmpsl
mov
push
cltd
rol
push
sub
or
push
mov
stos
and
inc
jb
lods
dec
and
inc
pop
xchg
clc
lods
pop
inc
repnz
inc
inc
cmc
mov
cmc
repz
dec
and
or
push
dec
add
sub
adc
lret
je
mov
add
pop
cmc
gs
aaa
add
sbb
pop
or
and
sub
sbb
test
lea
cltd
adc
cmp
mov
cmpsl
push
mov
rcll
xchg
inc
je
lahf
loop
mov
pusha
sbb
jbe
sbb
test
dec
and
xchg
adc
push
adc
idivl
shlb
push
inc
push
aad
and
pop
lock
push
push
or
and
sub
pushf
pop
dec
mov
or
ror
imul
dec
adc
xor
call
jge
or
loop
dec
or
dec
mov
fnsave
jns
enter
data16
push
push
sbb
movsb
adc
mov
jle
sbb
ds
sbb
repz
rcrl
jb
test
jecxz
jns
mov
out
add
ljmp
sbb
clc
pop
mov
test
inc
add
call
sbb
incl
test
sahf
shll
int
pushf
es
pop
jmp
inc
mov
out
ja
sub
leave
fsubrl
mov
or
stos
dec
ror
or
iret
mov
test
cmpsb
adc
fwait
mov
pushf
sbb
mov
mov
test
and
push
call
mov
and
loopne
adc
fnsave
in
leave
jg
or
dec
and
mov
hlt
and
ss
mov
mov
je
test
or
push
ret
mov
dec
xor
push
cmp
or
test
or
xor
and
mov
movsl
or
je
inc
sub
push
faddl
xchg
pop
or
mov
push
sbb
outsl
pop
int3
sahf
or
jne
dec
ja
lahf
pop
mov
push
mov
out
mov
fs
push
mov
loop
xor
insb
fmuls
pusha
fcoml
push
clc
mov
bound
das
sbb
je
ret
and
sbb
sahf
loop
jmp
std
dec
stos
lock
inc
lahf
jge
xchg
cmc
rcrl
call
jmp
xchg
jmp
jnp
fcmovne
jmp
lea
push
scas
nop
faddl
and
je
notb
or
jnp
aad
inc
sub
inc
mov
popf
mov
fistl
adc
test
sbb
add
or
cmp
imul
test
xor
arpl
adc
jmp
push
dec
mov
orl
adc
mov
inc
sub
les
int3
incb
jge
pop
xor
cs
pop
je
dec
jmp
xor
mov
outsl
mov
sahf
clc
subb
lea
icebp
cmpsb
adc
or
push
push
call
dec
mov
shr
stos
xchg
imul
scas
and
fcmovu
push
sbb
stos
pop
pop
or
and
cwtl
ja
mov
push
and
lahf
out
inc
or
pushf
ljmp
or
add
xchg
add
mov
jl
movsl
test
mov
jmp
mov
fldln2
bound
psubusw
js
stos
and
xor
xorb
add
cltd
jbe
popf
jno
sbb
out
inc
cmp
lods
xor
es
int3
and
test
xor
cmpl
imul
dec
adc
repz
lds
jb
mov
jmp
mov
pop
push
or
push
jae
popf
outsb
mov
xchg
loopne
cmp
mov
vpshlw
push
adc
push
push
repnz
mov
push
into
fwait
push
xorb
bound
inc
xor
mov
dec
push
jmp
jno
jmp
add
push
pop
xor
push
jle
call
push
push
cmpsl
inc
call
jl
and
jmp
in
mov
mov
adc
dec
or
lea
xchg
push
pop
sub
jg
dec
mov
mov
push
sub
push
ret
mov
and
push
lock
loop
and
cmp
dec
jbe
xor
fisttpll
adc
sbbl
sub
inc
xchg
adc
cld
dec
test
inc
or
push
test
inc
xor
andl
pop
nop
cmp
pop
sbb
call
dec
in
sbb
sbb
stc
or
stc
xlat
dec
sbb
mov
popl
mov
clc
pop
cld
addr16
sub
pop
xchg
repz
inc
xchg
repz
sub
or
push
jp
lret
fists
mov
cmpsl
mov
inc
in
icebp
stc
ret
xchg
xor
add
lea
adc
clc
test
iret
test
aam
cmp
call
and
push
lcall
pop
clc
sbb
pushf
fsubl
add
push
sbb
push
xor
stc
xor
ds
js
push
dec
xchg
icebp
test
in
jg
jge
cmp
jne
lods
ret
xchg
bound
xchg
in
fdivr
and
add
ja
cmp
inc
add
add
int
repz
jne
ss
es
in
or
add
ret
insl
sarl
mov
xor
jmp
push
add
jae
add
cmp
dec
add
into
cmp
adc
stos
stos
stos
pop
jmp
push
sbb
mov
pusha
adc
aam
loopne
loopne
rolb
xchg
sbb
xchg
jns
adc
cmp
nop
cmp
xchg
movsl
add
movsb
add
cmpb
mov
cmpsb
fisttps
or
loopne
test
inc
jle
int3
test
sarl
fisubrl
and
cmp
sub
and
pushf
sbb
pop
lods
inc
nop
mov
sbb
ficompl
rcrb
ret
add
fcomp
loopne
add
jle
je
in
loopne
sub
fs
xchg
fldenv
in
out
cli
mov
sbb
dec
xor
push
pop
mov
fcoms
xchg
lahf
mov
dec
lret
xchg
and
inc
in
testl
dec
cs
cmp
inc
inc
dec
pop
mov
jo
jnp
xchg
cmpsl
mov
mov
dec
ficoms
decl
inc
sub
sub
dec
inc
xchg
dec
and
bound
js
pop
add
xchg
and
add
dec
mov
inc
stc
push
inc
xor
mov
adc
bound
xchg
mov
mov
loopne
cmc
and
xor
dec
cmp
mov
sub
daa
sbb
push
jl
movsl
add
and
sub
repnz
add
inc
lds
add
add
in
xor
scas
add
inc
shll
cmp
sbb
loopne
push
lret
dec
inc
mov
cmp
inc
call
adc
and
push
dec
xchg
or
pop
sar
mov
roll
or
ret
pusha
adcb
or
in
sbb
scas
leave
xchg
or
clc
push
adc
js
and
clc
test
dec
add
incl
dec
jno
mov
insb
pop
dec
mov
push
and
clc
shlb
sub
dec
or
enter
mov
dec
andl
adc
dec
loopne
sub
pop
enter
sbb
pushf
fmuls
rcrb
sbb
and
dec
sbb
jns
or
mov
or
arpl
add
push
cmpsl
fadds
fs
movsb
sub
adcb
andb
aam
les
sub
xor
or
sub
dec
rorb
push
mov
sub
js
mov
adc
and
ret
adc
sbb
or
xor
fs
xor
inc
xchg
xor
nop
add
inc
outsb
call
shlb
sub
jl
gs
or
adc
and
add
mov
sbb
in
bound
fcmovnu
push
fsubs
sub
dec
adc
cmp
or
mov
mov
or
push
or
sbb
sub
sbb
mov
data16
ror
daa
adc
jmp
and
js
lea
inc
inc
add
into
mov
scas
or
add
mov
mov
or
or
add
pusha
xchg
dec
xchg
mov
or
xchg
cmpb
loope
or
and
fcompl
lahf
dec
or
nop
ret
add
bound
dec
inc
in
push
aam
fcoms
sbb
les
xchg
dec
push
lock
dec
lock
cltd
lods
fsubs
sub
and
xchg
fwait
pop
fmuls
loopne
nop
adc
or
adc
sahf
xor
inc
pop
jbe
xor
sub
sub
and
and
pop
mov
pop
loop
pop
fbld
mov
sub
in
xchg
push
pop
out
and
in
adc
and
inc
cmpsb
mov
in
fsubs
adc
clc
inc
popa
repnz
add
sub
pop
dec
cmc
cld
popf
test
and
das
pusha
je
pop
sub
push
stos
or
or
xor
sub
adc
aam
push
mov
pop
or
inc
sbb
lods
mov
enter
sub
mov
xchg
pop
or
es
xchg
cltd
leave
or
inc
and
add
sub
mov
xor
out
adc
xor
sub
adc
sub
dec
mov
mov
xor
ret
sbb
or
xchg
mov
rorb
sbb
inc
or
icebp
test
cmpsb
movsb
lock
mov
jmp
mov
and
push
mov
dec
xor
pop
lods
or
xchg
pusha
sub
fdiv
mov
sbb
xchg
push
adc
push
rorl
sub
add
push
add
adc
cmp
mulb
or
xchg
add
sbb
rol
js
xchg
fcoms
mov
sbb
dec
pop
inc
dec
shll
loope
adc
mov
sahf
and
int3
xor
dec
dec
and
into
add
sbb
dec
mov
ja
jne
dec
add
add
push
rclb
and
push
adc
dec
adc
push
or
mov
fcmove
xchg
fistpl
rorl
jmp
or
mov
push
adc
cmp
fmull
sub
out
test
xlat
sbb
mov
xchg
push
js
cmp
inc
jae
sub
add
je
and
push
pusha
lret
stc
sub
jle
jns
rcll
enter
and
add
jno
dec
add
add
cmp
and
mov
add
loopne
and
inc
cltd
jnp
jae
add
jecxz
cmp
js
out
inc
lock
jg
pop
sbb
and
adc
sbb
ror
inc
nop
xlat
dec
rolb
jmp
and
out
test
jo
xchg
push
pop
push
jecxz
jmp
cmp
pushf
add
mov
adc
xchg
or
pop
inc
or
mov
sub
sbb
or
push
lcall
adc
lcall
cltd
adc
inc
mov
xor
push
sbb
gs
xor
sbb
and
dec
sbb
jb
lret
xorb
cltd
or
push
test
xchg
inc
sub
nop
sub
mov
xlat
cmp
lock
or
add
shll
mov
mov
mov
pop
dec
fldt
sbb
pop
cs
or
jle
cmp
xlat
adc
push
adc
cmp
sbb
adc
mov
lods
pusha
mov
mov
adc
or
dec
cmpb
jl
mov
xchg
or
rcr
sarb
adc
and
mov
in
sub
lock
or
nop
icebp
sbb
or
sub
xchg
xor
cmp
and
inc
dec
shrb
or
pusha
cmp
cmpsl
rcrb
test
ljmp
and
adc
in
pop
push
jp
xorb
lock
xchg
push
xchg
and
in
and
xchg
mov
rcll
repnz
das
or
insb
inc
popa
push
push
push
pop
nop
mov
inc
pop
inc
mov
jae
or
add
test
cmp
cs
dec
cmp
sets
dec
pop
insb
add
inc
repz
sbb
adcb
adc
cmp
sbb
adc
add
icebp
pop
mov
sub
push
test
add
add
add
js
aam
into
or
or
sbb
dec
clc
popf
xchg
inc
sahf
push
daa
mov
or
lcall
add
xor
xchg
adc
adc
jl
or
mov
jo
enter
fmuls
test
add
adc
sbb
loope
adc
inc
xchg
and
push
inc
push
jle
xchg
fisttps
jno
in
add
pop
inc
xor
or
dec
dec
add
pop
adc
push
invd
stc
inc
xchg
adc
sbb
or
and
dec
rclb
cld
mov
sub
xchg
cld
push
loopne
and
xchg
mov
je
loopne
adc
or
pop
xor
push
sub
add
cmp
xchg
dec
les
and
xchg
fmull
adcb
cmp
nop
mov
mov
pop
sbb
test
and
js
cmpsb
or
mov
sub
cld
adc
inc
and
dec
cwtl
adc
dec
or
pop
and
xorb
cltd
int3
into
out
push
add
add
movntps
sbb
xchg
sbb
adc
mov
adc
and
jbe
ss
and
and
mov
add
sub
jno
or
sub
add
pop
arpl
cmp
sub
das
jbe
scas
cmp
inc
cmp
adc
dec
adc
xor
adc
xor
adc
xor
adc
and
stc
xor
push
stc
xor
sbb
je
sbb
adc
adc
outsb
jl
in
rcrl
and
pop
icebp
das
and
icebp
xor
das
icebp
xor
and
xor
pusha
icebp
xor
shll
aaa
ret
inc
cmp
sub
cmp
sub
cmp
sub
cmp
pop
push
es
sub
sbb
pop
das
sbb
pop
xor
pop
xor
pop
xor
dec
pop
aaa
sbb
pop
xor
pop
pop
xor
sbb
pop
aaa
sbb
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
inc
add
movl
inc
jge
inc
jle
inc
jg
inc
movl
movl
cmpsb
dec
cmpsl
dec
test
dec
lods
dec
scas
dec
mov
dec
mov
dec
mov
push
mov
push
mov
push
mov
push
mov
pop
mov
pop
mov
pop
leave
pop
lret
lret
pop
int3
pusha
int
popa
into
iret
arpl
loope
fs
loop
gs
data16
call
loope
lock
jl
out
dec
push
je
imul
lea
adc
mov
outsb
icebp
outsl
icebp
scas
icebp
jo
nop
jno
mov
jb
mov
jae
mov
je
test
jne
sbb
jl
je
dec
ja
js
js
sbb
jl
jl
jl
jl
jl
jl
jl
jl
dec
jle
jl
jg
and
cmpb
jl
jl
sti
icebp
xor
icebp
test
sub
test
sub
xchg
sub
xchg
sub
mov
mov
mov
cmp
mov
mov
mov
les
adc
pusha
inc
pop
movsb
enter
mov
js
push
cmp
dec
sbb
or
cld
pop
and
inc
fdivrl
rcrb
shlb
xchg
add
cmc
inc
cld
notl
inc
add
add
pop
jae
push
xor
xchg
insl
rcrb
loopne
jo
ja
dec
mov
adc
xor
add
fstp
sub
or
sti
sub
stos
dec
lock
ror
adc
xchg
movsb
push
cmp
push
and
inc
and
mov
adc
and
adc
sbb
xchg
sbb
fsubl
js
int3
jns
mov
dec
cld
mov
pushf
and
gs
or
sub
inc
sbb
loop
pop
movsb
loop
pushf
xchg
adc
and
adc
or
insb
mov
adc
dec
pop
xchg
push
and
adc
adc
or
dec
xchg
or
inc
inc
adc
xor
dec
sub
sbb
and
dec
adc
and
and
or
pushf
pushf
lock
jg
adc
incl
mov
adc
orb
adc
dec
xor
xchg
mov
cmp
xor
cmp
adc
jo
out
dec
inc
adc
inc
push
inc
outsl
dec
or
jl
xchg
ficomps
sbbb
and
sub
xchg
mov
roll
mov
mov
pop
jae
adc
push
add
sbb
and
cmp
xchg
mov
aam
repz
dec
xor
xchg
es
lods
push
adc
mov
push
cmpsb
mov
cmp
inc
adc
jg
pop
xchg
push
or
mov
data16
dec
jb
js
xchg
inc
cltd
scas
mov
hlt
mov
adc
sub
mov
jl
xchg
dec
test
enter
out
mov
andl
dec
insb
xchg
jno
mov
mov
adc
and
inc
adc
adc
inc
push
push
and
dec
mov
inc
clc
or
popa
and
cmp
pop
and
dec
ja
jl
pushf
inc
mov
mov
jns
add
or
add
pop
leave
pushf
or
or
addps
inc
adc
or
mov
mov
xor
mov
ret
dec
add
lock
mov
sub
imul
sbb
addl
xchg
xlat
xchg
inc
push
pop
add
sar
mov
adc
pusha
cmp
cmpsb
iret
lcall
dec
pop
js
loopne
loopne
mov
or
mov
mov
cmp
jl
rcr
fdivrp
add
push
inc
mov
int3
repnz
test
andl
stos
clc
jne
pavgw
cli
sub
aam
imul
loope
dec
jp
iret
inc
gs
movl
mov
inc
or
addl
in
xchg
cmp
pop
xor
filds
pop
cmp
sahf
xchg
cmp
lock
add
pop
enter
pop
mov
xchg
clc
pop
repz
mov
subb
leave
fwait
xchg
and
les
int3
add
add
sti
aas
jno
or
mov
lock
add
fisttps
xchg
outsb
adc
shrl
pop
mov
icebp
add
mov
inc
sbb
lods
pop
lds
mov
insb
scas
pop
add
shlb
mov
aad
mov
std
loop
add
adc
stos
in
das
dec
add
dec
les
leave
js
add
jne
int
icebp
lcall
xchg
cmp
push
mov
out
lock
pop
loop
sarl
popa
mov
mov
jle
push
jl
mov
add
lea
mov
outsl
inc
dec
ret
movsl
jmp
jg
test
add
mov
add
fstl
arpl
add
and
call
cli
cmp
jp
and
lods
cmp
mov
cmp
add
xlat
cmp
mov
or
mov
jecxz
cmpsb
add
movb
inc
inc
pop
mov
jne
add
cmp
jno
shlb
lock
out
dec
nop
pop
cmp
push
fisubl
xor
add
adc
add
in
add
push
scas
into
imul
pop
add
movsb
rcr
jge
call
out
pop
push
xchg
cmp
mov
dec
dec
gs
std
add
adc
ror
add
frstor
cmp
dec
push
cwtl
aam
push
addr16
sahf
add
sbb
popa
je
nop
push
arpl
mov
das
imul
pop
add
ja
lock
sahf
or
or
enter
push
das
mov
add
lock
add
push
and
add
mov
or
mov
push
inc
cwtl
adc
xchg
add
enter
add
clc
and
cmp
dec
adc
sbb
or
nop
sbb
sub
pop
sbb
pop
pop
and
movsb
pop
inc
jo
mov
dec
cmpsl
xchg
mov
rclb
or
mov
add
call
enter
xor
dec
adc
and
dec
pop
xchg
js
or
mov
dec
or
lods
dec
fcomps
lock
lcall
xchg
cmp
mov
or
push
xor
push
adc
cwtl
dec
push
xchg
mov
push
inc
enter
adc
clc
dec
pop
mov
pop
adc
sub
mov
pop
and
dec
jo
pop
and
pusha
adc
xchg
imul
sahf
sbb
sbb
inc
insl
dec
mov
pusha
and
dec
js
cmp
adc
test
jb
mov
fsubs
dec
lock
jne
inc
or
and
ja
cmp
xchg
push
and
push
and
dec
cwtl
xchg
aaa
and
cmp
loopne
cmp
clc
xchg
adc
or
inc
inc
sub
inc
adc
pop
dec
dec
xchg
jo
dec
inc
mov
mov
mov
xchg
and
call
loope
xchg
adc
and
dec
adc
push
add
xchg
enter
js
sbb
and
xchg
sbb
lods
cltd
sub
and
fadds
mov
mov
sbb
test
movsl
sbb
dec
aas
and
push
inc
mov
cwtl
pop
nop
test
mov
and
stc
call
and
or
sub
cmp
dec
pop
nop
pop
cld
push
and
test
inc
mov
fdivr
call
adc
push
clc
sbb
cmp
dec
bswap
pop
jle
push
mov
cwtl
xchg
test
and
fdivrs
call
or
jl
sbb
sub
nop
cmp
dec
xchg
pop
aas
and
js
enter
cwtl
repnz
nop
mov
fdivrs
and
stc
clc
pinsrw
and
stc
sub
enter
dec
repnz
pop
nop
push
mov
and
mov
fcomps
nop
call
or
pop
adc
cld
sub
dec
stc
pop
bswap
push
mov
nop
cwtl
cld
test
in
push
push
dec
adc
mov
fsubrs
mov
clc
adc
cld
je
je
xchg
pusha
jo
mov
stc
mov
add
jo
inc
add
std
sbb
and
pusha
cmp
les
js
mov
pop
xchg
enter
add
inc
mov
adc
rolb
add
call
ljmp
adc
lock
sub
inc
pushf
repnz
sub
repz
inc
mov
mov
sbb
mov
adc
sub
and
arpl
and
fdiv
or
add
dec
mov
add
cmp
jl
mov
jo
int3
sbb
orb
ds
and
add
in
cmp
inc
loopne
loope
and
add
js
pop
push
jno
adc
push
adc
or
or
subb
cwtl
inc
sbb
adc
in
push
or
pop
test
lcall
loopne
js
and
or
fmuls
sub
inc
outsb
adc
test
pop
cmp
shlb
sarb
and
and
and
adc
out
jo
inc
xor
and
bound
add
sbb
call
les
or
and
xchg
adc
xor
ss
int3
pop
and
cmpsl
nop
mov
and
push
and
inc
add
jno
add
xchg
adc
xchg
and
and
ret
add
cmp
inc
movzbl
sbb
xor
add
sub
bound
iret
pusha
or
sub
test
mov
xor
and
push
adc
inc
movsl
lock
adc
and
insb
adc
adc
fdiv
push
adc
in
push
lock
js
pop
fcompl
pop
dec
bound
ljmp
mov
jo
push
add
pushf
inc
sbb
dec
ret
or
add
or
cmp
popa
cmp
jae
pop
gs
imul
jne
push
cwtl
mov
outsb
push
enter
or
or
sub
adc
pushl
sub
mov
or
daa
subl
mov
sarl
loopne
sbb
aam
pop
inc
cwtl
and
mov
inc
fistpll
jecxz
ds
adc
adc
push
sti
dec
push
sub
push
aad
dec
js
cmp
sub
xor
aam
addb
or
push
add
or
and
jg
pop
xchg
add
testb
inc
incl
jo
push
xor
pop
ja
adc
sti
push
add
movsb
adc
adc
ret
ret
mov
xor
push
cmp
jno
lods
adc
lret
fs
cmp
roll
cmpl
aas
pop
clc
gs
stos
or
inc
jg
push
incl
aas
addl
sti
push
add
mov
loope
clc
or
lock
int
xor
ficomps
rcll
flds
push
loopne
jbe
out
pop
jge
push
clc
inc
add
inc
add
mov
or
jg
xor
aad
orb
push
add
out
pop
jo
sahf
punpckhwd
mov
or
or
push
inc
gs
and
clc
dec
sub
or
nop
xchg
or
adc
and
inc
call
or
add
inc
push
add
dec
rcrb
cld
mov
add
mov
lock
mov
adcb
adc
adc
and
cmp
push
mov
xchg
sbb
adc
inc
shlb
mov
add
dec
loopne
inc
push
adc
jo
aam
inc
sbb
dec
enter
adc
test
or
and
test
mov
mov
adc
add
faddl
or
and
and
inc
cwtl
cld
mov
add
mov
inc
push
and
mov
add
inc
cmpxchg
mov
xor
inc
inc
adc
dec
and
enter
xchg
jl
addb
and
lock
ret
add
std
add
adc
fnsave
lret
mov
subb
dec
lods
xor
icebp
and
or
adcb
xchg
fistpl
cmp
sbb
ret
clc
or
cld
xchg
mov
addr16
or
into
and
inc
xor
xor
mov
mov
push
call
cmpsl
pop
xchg
add
push
sbb
mov
andl
add
loop
fs
or
sbb
inc
add
mov
xchg
sub
inc
js
cwtl
cltd
leave
or
dec
push
xchg
add
clc
nop
mov
xor
popa
push
mov
or
arpl
push
mov
push
mov
cld
inc
jo
jmp
fucom
jb
sub
shl
je
push
jae
shrl
cli
negb
shlb
mov
adc
adc
or
mov
sub
adc
shlb
jnp
shrl
or
add
or
cmpsb
or
jle
and
or
or
adc
pop
shl
sub
adc
xorl
jmp
scas
pushf
or
call
cwtl
cmpsb
or
pop
mov
jmp
movsb
or
hlt
jl
push
pop
sub
mov
push
addl
sbb
mov
wbinvd
fmull
xor
or
fwait
pop
xchg
shll
adc
lea
ss
or
cwtl
cltd
pop
sbb
int
cltd
rcl
fs
adc
fcoml
enter
lret
data16
fs
or
adc
nop
enter
fs
xor
fs
mov
mov
mov
jbe
adc
jo
jl
loopne
cwtl
xchg
mov
pop
stc
je
inc
push
adc
test
clc
cmp
dec
fs
mov
andl
call
adc
pop
loopne
or
fwait
inc
mov
cmp
pop
mov
sub
sahf
inc
xor
inc
shlb
in
ret
inc
nop
icebp
inc
dec
and
movsb
sub
sbb
lret
inc
and
pop
dec
push
xchg
sbb
push
sbb
pop
adc
pusha
in
dec
sarl
mov
orb
sub
sbb
jl
lret
dec
loop
cltd
adc
sbb
shll
adc
mov
and
inc
clc
shll
movsl
enter
loopne
inc
test
inc
clc
sarb
clc
sbb
nop
call
pop
sbb
andl
mov
sbb
negb
xorl
xor
leave
loope
and
and
or
xchg
in
adc
add
mov
test
and
js
pop
pop
fs
sbb
in
ljmp
fs
or
mov
enter
inc
dec
negl
mov
mov
or
xlat
cmpsl
mov
sbb
lcall
popa
lock
cmp
popa
cld
push
add
mov
aam
push
and
decl
call
movsb
in
xor
rcrl
dec
sub
xchg
in
addr16
sub
mov
js
dec
enter
mov
push
inc
fsubrs
xor
and
jmp
nop
dec
dec
mov
clc
mov
pop
dec
push
xchg
sub
mov
in
enter
or
je
les
or
mov
hlt
push
push
fs
adc
and
xchg
cwtl
enter
je
pop
sub
mov
push
cmp
adc
cmovno
shll
push
das
mov
fdivl
and
testl
das
js
mov
loop
cltd
fs
sbb
mov
clc
andl
push
pop
xor
or
sbb
inc
push
and
inc
or
adc
pop
in
dec
and
add
jb
cmp
fs
or
pop
and
xor
bound
add
pusha
fs
je
pop
xor
sub
fsubl
or
inc
mov
cltd
sbbb
inc
pop
dec
push
cltd
xor
jo
cs
loopne
movsb
jb
and
pop
and
xor
adc
clc
xor
mov
stos
cmp
and
in
fs
xchg
pop
and
aaa
daa
dec
je
cld
bound
add
or
cmc
shll
mov
inc
inc
and
pusha
and
jmp
inc
jne
mov
cmp
and
push
cmp
mov
loop
cwtl
adc
mov
sub
push
dec
cmp
mov
fs
in
cs
stos
and
sub
fs
les
or
pop
mov
jl
js
mov
xchg
dec
and
pop
ret
xor
cmpl
int3
mov
int
insl
inc
mov
rclb
loopne
adcb
and
mov
fs
aas
enter
sarb
movsl
fs
test
in
or
sub
popa
and
jnp
add
dec
stc
pop
call
adc
fs
pushf
sub
adc
fs
divb
xchg
mov
add
push
bound
cltd
fs
adc
nop
mov
inc
sub
inc
adcl
movsl
fs
add
dec
and
inc
inc
rclb
inc
xor
inc
rorb
push
cmpb
adc
inc
inc
pusha
sbb
je
scas
fs
pop
repz
adc
add
lock
repnz
mov
enter
inc
enter
inc
mov
pop
add
sarb
in
jb
cmp
sbbb
pop
inc
or
nop
enter
leave
inc
fwait
rclb
lods
enter
sub
pop
les
xchg
leave
sahf
je
pop
aad
js
es
and
in
das
sub
fs
lock
or
jle
dec
js
mov
sub
fmul
stc
fcomps
inc
or
jo
jne
push
or
xor
sbb
lock
and
addr16
add
dec
mov
cld
and
pop
adc
fs
je
adc
sbb
add
sbb
enter
and
lock
clc
je
hlt
push
jo
and
mov
enter
sbb
rolb
pop
dec
rclb
mov
inc
and
or
sub
xchg
nop
enter
clc
cmp
cmp
dec
loopne
pop
xchg
loope
mov
js
push
pop
adc
or
or
and
add
daa
hlt
repnz
push
pop
lret
fs
jo
mov
call
or
pop
lret
fs
and
stc
push
rorb
cmpsl
adc
mov
orb
adc
cld
push
adcl
and
push
loopne
xchg
mov
out
xor
loopne
fs
xor
nop
stos
push
cwtl
fs
in
das
and
xchg
jo
sub
xor
cltd
sahf
cwtl
pop
mov
or
nop
lret
pushf
dec
fs
mov
fxch
push
or
mov
cltd
fs
enter
pop
and
adc
lods
pop
loopne
mov
add
lahf
hlt
lret
fs
imul
stc
pop
mov
add
inc
dec
cmp
add
or
mov
dec
pop
sub
pushf
enter
call
cmp
pop
push
mov
fs
movsb
adcb
xchg
lret
pop
inc
les
call
and
add
adc
xchg
js
sbb
or
hlt
enter
mov
pop
call
and
jns
and
mov
test
fwait
pop
repnz
cltd
enter
xor
sbb
pop
xor
cmp
int3
rorb
icebp
pop
aam
call
orb
movsb
sub
jo
insb
and
in
test
lock
xchg
or
dec
pop
and
or
and
add
sub
in
out
leave
jnp
adc
incl
popl
sbb
fxch
adc
mov
sbb
and
mov
gs
bound
xchg
scas
sbb
cmpsb
sbb
push
lds
adc
pop
and
xor
and
xchg
inc
and
es
nop
mov
shl
lods
leave
cli
adc
test
dec
sbb
mov
les
add
ds
sbb
xchg
call
lods
sbb
and
loop
add
dec
enter
mov
js
sbb
xor
inc
inc
push
dec
mov
pop
dec
pushf
cmp
lods
sbb
loopne
testb
xchg
shlb
mov
bound
xor
pop
sbb
cwtl
xorb
xchg
pop
pop
das
push
into
adc
lds
stc
jge
dec
cltd
test
pop
xor
pusha
or
sbb
aam
mov
lock
enter
push
or
xlat
jl
inc
or
fsub
xorb
inc
in
inc
push
stc
es
inc
nop
xchg
lock
adc
dec
or
mov
pop
xor
sub
push
xor
fdiv
je
sbb
pop
and
lahf
dec
adc
daa
or
cmp
or
fdivp
push
punpckldq
test
add
cld
mov
fbstp
mov
adc
loopne
sbb
loope
fnstenv
ljmp
dec
fimull
pop
and
xchg
xor
push
loop
xor
mov
adc
mov
das
pop
adc
and
inc
lock
mov
fxch
xchg
out
mov
and
dec
out
in
adc
and
jl
inc
adc
xchg
int3
jmp
jle
movsb
ljmp
xor
jmp
mov
and
dec
in
stc
loopne
mov
outsb
jg
jae
cmp
pusha
adc
inc
push
cmp
xorl
sti
adc
mov
shrl
es
nop
sahf
icebp
or
aas
aaa
enter
jl
xor
loope
jo
mov
push
sub
std
and
xor
test
or
call
add
lret
or
mov
sub
add
lods
xchg
adc
mov
xor
xor
sbbb
adc
popa
xlat
cmpsl
inc
xor
pusha
nop
nop
push
adc
push
imul
push
pusha
sbb
enter
push
mov
mov
sbb
call
fisttps
xor
lods
arpl
popa
dec
ds
nop
jp
mov
sub
addr16
adc
and
xor
lea
pop
sbb
test
lock
or
xor
pop
mov
mov
jmp
rclb
leave
and
or
les
lea
sbb
call
jl
dec
sbb
pop
mov
aad
cmp
mov
jns
and
cmp
jae
icebp
xor
mov
mov
or
push
xor
xor
or
adcl
push
cmp
leave
and
cmp
and
add
sbb
imul
ds
mov
dec
movsb
pop
push
inc
add
pop
and
sub
lods
sbb
add
sbb
imul
sub
mov
call
inc
popa
push
xor
adc
and
inc
and
les
mov
and
xchg
lds
mov
sub
fsubs
test
push
xchg
rolb
in
popa
jae
jg
mov
orl
pop
and
mov
fs
cmp
popa
loop
xchg
outsb
jns
mov
add
aas
in
xchg
xor
inc
sbb
popf
sbb
xor
cli
shlb
in
enter
add
adc
inc
push
add
mov
xor
xor
or
or
cli
test
loopne
lcall
ds
xor
mov
or
inc
cwtl
mov
xor
add
or
imul
int3
pop
mov
scas
push
inc
lret
inc
jnp
push
cltd
xor
add
mov
mov
movsb
or
dec
add
sbb
pusha
adc
fdivrl
ljmp
nop
mov
dec
pusha
test
std
jecxz
fildll
pusha
jo
add
outsl
insb
xor
out
aam
push
lds
dec
or
push
rolb
sbb
fs
je
jb
arpl
jne
in
rclb
pushf
push
add
adc
dec
insb
inc
sbb
adc
mov
loopne
imul
mov
add
popa
imul
mov
jo
xor
data16
aam
xor
mov
faddl
inc
popa
pop
dec
mov
add
xor
jl
call
xor
insb
dec
sar
inc
inc
dec
and
inc
push
rcrl
mov
cltd
popa
in
or
dec
cmp
rorb
leave
sbb
call
stc
insb
cltd
mov
cwtl
nopl
mov
repz
call
mov
inc
sbb
or
inc
xchg
in
sbb
inc
nop
cmp
fs
movsb
mov
enter
cmp
push
fs
inc
cmp
insb
and
popa
pushf
int3
jno
xor
push
hlt
dec
sbb
push
pop
orl
sub
mov
imul
adc
cmp
test
clc
adc
cmp
mov
sub
xchg
cld
sub
or
or
mov
jns
xor
or
das
add
xchg
push
flds
stc
xchg
es
aam
pusha
cwtl
mov
push
push
dec
aad
mull
jmp
popa
xor
int3
dec
outsl
ja
je
dec
outsb
cmp
sti
lods
imull
inc
lock
arpl
jo
cltd
or
and
gs
fs
cmp
jb
jns
push
inc
fs
fadd
adc
dec
outsl
addr16
jbe
sub
xchg
not
push
test
add
jne
jb
push
outsb
sub
imul
add
cmp
mov
push
add
arpl
je
pop
scas
mov
cltd
stc
push
cltd
gs
nop
add
ds
fsubr
sbb
roll
inc
insb
imul
jb
inc
in
dec
add
mov
arpl
cmp
dec
add
test
iret
les
fst
cmpsl
add
test
xor
push
ret
jb
pop
decl
or
sbb
sahf
fsubrl
insl
out
ljmp
inc
adc
add
mov
arpl
pushf
add
mov
inc
pop
inc
push
xchg
addb
test
push
ret
ljmp
rcll
pop
mov
inc
arpl
test
pop
popa
sbb
add
cmp
add
cmp
clc
sbb
lcall
dec
and
add
push
mov
popa
push
ret
inc
inc
add
stos
pop
sub
insb
test
sub
int
cmp
int
hlt
test
xor
imul
cld
or
mov
add
and
push
in
or
jl
dec
insb
fs
push
mov
pushf
inc
andb
inc
xchg
sub
sub
add
inc
add
jb
addr16
jg
push
pushf
loopne
cmp
mov
lock
and
xchg
pushf
and
pop
add
cmpsb
dec
dec
mov
sbb
rorb
mov
mov
and
dec
sahf
arpl
sbb
sbb
mov
inc
push
in
jbe
adc
inc
or
insl
mov
push
jmp
xchg
inc
cmp
outsb
push
addr16
xchg
cmpsl
int3
pop
in
incb
and
cmp
fs
jmp
or
pop
dec
gs
add
sub
inc
pop
push
mov
jne
arpl
jne
cmpl
insb
aam
sarl
cmc
pop
inc
pushf
test
push
bound
gs
mov
sub
cmp
mov
outsb
sub
xor
mov
cli
dec
push
or
fcoms
cwtl
test
pop
sub
and
leave
pop
or
and
int3
jne
pop
and
push
mov
ficomps
push
xor
sub
scas
dec
dec
mov
ja
push
sub
out
xor
mov
jmp
iret
test
xlat
xor
mov
mov
sbb
shlb
imul
test
bound
mov
enter
imul
xor
sub
ret
inc
or
adc
enter
dec
sbb
cs
adc
cwtl
lea
jb
popa
dec
bound
les
jle
inc
push
popa
jae
adc
fs
mov
inc
push
ret
xor
sti
sub
pop
popa
or
loop
adc
adc
adc
subb
and
lea
xor
dec
push
sbb
sub
lahf
push
and
and
jg
call
nop
mov
xchg
push
je
cmp
pop
jae
push
and
inc
mov
fmuls
jecxz
mov
adc
pop
loopne
jbe
cmp
loopne
in
push
mov
nop
cmp
in
inc
add
pop
push
inc
xor
or
subb
pop
sbb
inc
or
xor
sbb
and
sub
dec
test
adc
enter
cmp
in
sbb
add
insl
bound
sub
add
add
xor
mov
mov
test
sahf
bound
sbb
jns
sub
lret
cmpsl
pop
inc
mov
pushf
xorb
sbb
test
test
ljmp
or
lods
insb
cwtl
sub
mov
xor
aam
sbb
xchg
fstpl
fildll
test
loopne
xor
jb
int3
imul
adc
sub
cld
mov
xchg
fadds
js
xchg
adc
adc
sahf
and
cmp
lods
pop
call
loopne
dec
or
push
test
pop
clc
imul
inc
dec
insb
test
aam
ret
mov
nop
push
adc
std
leave
dec
inc
xor
arpl
es
and
and
sbbl
call
ja
stos
and
cmp
mov
mov
and
test
pop
jbe
push
jmp
cmpsl
sub
lahf
dec
shlb
jo
sub
cwtl
and
or
cmp
sub
push
dec
push
xchg
sub
xchg
xor
jns
ret
test
inc
sbb
rolb
pop
insl
dec
cmp
and
xor
sbb
mov
push
push
sub
sub
bound
das
pop
xchg
sbb
inc
mov
pushf
jp
es
lock
int
xor
mov
xchg
cmp
and
push
and
pusha
or
fwait
push
dec
sbb
sub
inc
movsb
enter
dec
xchg
or
and
add
dec
push
notl
mov
sbb
in
icebp
mov
adc
jbe
sbb
gs
push
data16
sar
aam
push
xor
adc
sbb
and
call
push
jmp
jecxz
jne
int3
push
insl
inc
les
insl
sub
movsl
and
mov
sub
dec
and
dec
mov
enter
xlat
ja
cltd
jae
add
xor
pop
inc
sub
sbb
push
or
xor
test
jo
adc
mov
call
les
jge
daa
sub
mov
inc
jl
mov
fs
push
mov
in
mov
sub
arpl
lea
xchg
mov
push
sub
push
xor
adc
mov
sub
js
push
pop
jo
xor
xor
inc
lret
fisttpl
aad
jp
adc
xor
repnz
inc
pop
inc
popl
inc
pop
push
pusha
cmp
rcrb
inc
mov
int3
push
sbb
loope
mov
mov
xchg
inc
gs
push
xorl
sub
fdivr
dec
cltd
push
pop
push
imul
sbb
mov
lcall
pusha
loopne
and
inc
xor
inc
xchg
push
adc
lods
bnd
sub
mov
inc
mov
push
into
and
and
add
sub
faddl
jge
jmp
pushf
xor
jne
jae
mov
mov
adc
inc
nop
jbe
jbe
stos
mov
pop
add
xor
shll
mov
xor
add
xor
mov
cltd
mov
sub
and
add
xor
imul
jge
loopne
mov
mov
bound
les
cs
or
shlb
shl
in
cmpsb
inc
mov
sub
mov
adc
cwtl
or
jns
pop
aad
xor
mov
pop
and
loop
rorl
inc
push
aam
repz
sub
push
adc
dec
mov
push
popa
jae
je
jbe
push
loopnew
sbb
nop
lods
or
dec
or
dec
in
movsb
push
dec
mov
mov
mov
push
mov
dec
inc
push
jb
push
pop
outsl
ja
movsb
push
stos
sbb
stos
push
or
nop
mov
imul
rorb
inc
dec
test
or
int3
inc
movsb
cmp
pop
stos
sbb
fmuls
push
or
cs
jns
insb
ror
int3
dec
imul
xchg
enter
or
addr16
int3
xor
imul
je
subl
lcall
adcb
and
fwait
inc
jbe
mov
xor
inc
inc
sub
inc
loopne
dec
test
les
sbb
scas
add
push
aam
es
incb
push
xor
nop
push
outsl
je
xchg
xchg
in
nop
mov
mov
out
dec
test
dec
lcall
or
or
push
push
icebp
push
xchg
cmp
mov
cltd
sbb
jecxz
insb
scas
sbb
xor
adc
andb
xchg
insb
or
xor
ret
push
jb
in
lret
movsb
and
xchg
nop
adc
jmp
jnp
xchg
adc
add
cmpsl
adc
imul
xor
pop
sbb
out
je
insl
mov
movsb
xor
pop
sbb
call
insb
cmp
sbb
add
xchg
imulb
popf
or
pop
pop
adc
and
jge
inc
sub
call
or
shl
and
outsb
push
sbb
adc
sub
jne
push
jo
push
sbb
punpckldq
adc
cmc
xlat
cmp
sub
mov
test
cs
lock
inc
pop
je
cmc
xor
aad
xor
sub
jecxz
and
push
dec
mov
mov
adc
add
xchg
cmp
leave
pop
pusha
insl
jne
and
test
ja
jp
aaa
shlb
mov
sbb
arpl
daa
jmp
in
lods
lds
and
dec
fnstsw
pop
adc
sub
mov
out
pop
push
jne
jae
call
test
in
int3
add
push
sub
dec
and
and
jmp
jbe
mov
sub
ret
xor
sub
and
add
inc
or
dec
inc
movsl
inc
and
or
iret
mov
mov
jle
imul
jb
and
adc
addb
and
and
or
jl
sub
push
cmpsb
adc
in
out
push
test
mov
loope
cmp
sbb
inc
inc
add
in
dec
imul
and
nop
movsb
pop
push
push
cltd
sbb
inc
sub
jmp
inc
push
mov
and
leave
cli
and
movsb
adc
inc
push
sbb
push
push
adc
movsb
jecxz
jb
sbb
jl
add
mov
inc
outsb
shr
sarb
sub
pop
cmc
pop
sbb
jne
popf
test
add
test
push
cmc
std
push
movsb
cld
jo
sbb
inc
and
inc
inc
dec
sbb
enter
lock
fidivs
jns
cmp
lds
adc
add
je
std
pushf
roll
pop
sub
sub
lea
lods
int3
dec
sbb
pusha
movsl
sub
adc
lds
push
pop
and
dec
dec
jp
addr16
add
sub
outsb
xor
push
sub
xor
mov
movsb
cmp
xor
jns
je
sbbb
and
adc
add
leave
or
je
jno
lods
dec
xor
movsb
mov
jb
mov
lret
xchg
sbb
popa
sub
inc
sti
call
and
mov
adc
daa
add
sub
sbb
mov
shll
inc
cld
mov
xchg
jle
pop
rorb
xor
les
xor
xchg
sbb
lods
adc
xchg
in
inc
xor
pop
and
stc
sbb
jne
insb
test
jo
loopne
pop
mov
jns
in
sub
cwtl
inc
mov
pop
loopne
je
clc
cmp
int3
mov
fadds
dec
icebp
mov
fmuls
cmpsl
mov
fwait
nop
sbb
pop
sub
push
add
adcb
pop
ja
push
mov
stos
je
or
das
dec
xorl
cmpsl
out
push
sbb
or
sbb
mov
fisubl
sbb
jl
mov
sbb
fmull
adc
dec
jno
sbb
scas
push
push
adc
ret
sbb
lods
or
sbb
jne
inc
in
push
adc
add
mov
popa
mov
or
mov
rcrb
mov
adc
inc
daa
out
sub
adc
sbb
pop
xor
sub
aam
xchg
adc
lds
fs
mov
lock
mov
dec
mov
adc
sbb
inc
adc
dec
in
lods
cld
adc
iret
fstps
sti
dec
ss
sbb
pop
sbb
push
sbb
inc
or
sbb
jo
xor
dec
sbb
lea
xor
outsb
gs
cmpsl
inc
sbb
bswap
pusha
push
add
scas
pushf
insl
leave
insb
insb
arpl
jne
and
mov
popa
pop
ja
pop
sbb
pop
sbb
jae
xor
dec
pop
and
cmp
add
xchg
sbb
sbb
inc
sbbb
js
dec
mov
outsb
popa
int3
push
mov
push
in
sbb
lods
imul
dec
inc
call
test
fildll
mov
jp
stos
sbb
mov
nop
adc
sub
sub
clc
adc
push
mov
mov
int3
cmp
push
adc
popa
inc
js
lods
sub
push
mov
add
or
pop
dec
xor
sbb
call
sbb
push
sbb
lods
pusha
pusha
aad
push
and
mov
xor
mov
xor
test
sub
lods
sbb
pushf
sub
sub
pop
and
or
sub
rclb
mov
addr16
cmp
push
outsb
sbb
xor
pop
pop
and
sbb
fiaddl
dec
cltd
or
fsubrs
mov
jg
imul
mov
mov
mov
xor
inc
mov
orb
xor
dec
jecxz
movsl
inc
dec
dec
pop
and
xchg
out
jo
sbb
sbb
push
jo
dec
dec
int3
test
cmp
lds
mov
mov
pop
scas
xchg
dec
pop
and
pop
xor
sub
xchg
adc
cmp
sub
inc
adc
adc
xlat
aad
xor
mov
lret
cmc
sbb
adc
sbb
notl
and
test
iret
or
sahf
mov
aam
jbe
sbb
outsl
and
dec
jmp
movb
cwtl
or
inc
sbb
icebp
in
lods
inc
cs
dec
xor
jmp
sbb
or
lods
add
mov
cmpsb
lock
jmp
dec
xor
dec
mov
inc
and
dec
jne
insb
outsl
bound
pusha
sar
mov
lcall
push
push
push
inc
dec
and
dec
adc
mov
loopne
adc
mov
aam
cmp
les
or
in
inc
inc
adc
sbb
in
inc
popa
lock
out
inc
inc
adc
adc
mov
call
push
adc
jmp
push
adc
sbb
xor
pop
test
and
fs
adc
mov
in
les
call
inc
dec
adc
push
mov
les
cmp
in
adc
test
inc
repnz
cld
dec
fdiv
mov
adc
popa
push
inc
push
adc
and
push
xor
sbb
cmpsb
push
inc
pop
sub
xchg
stc
mov
movsb
dec
adc
iret
adc
xor
lods
cltd
sub
sbb
mov
push
popa
jl
or
mov
adc
pop
mov
les
aad
inc
and
mov
js
xlat
sbb
mov
sbb
adc
mov
in
mov
inc
lock
jbe
dec
sbb
shll
or
inc
or
testb
movsb
xor
push
adc
adc
xor
cli
mov
inc
fmuls
test
sti
push
sbb
inc
cld
mov
inc
sbb
std
sbb
cmp
mov
pop
sub
movsb
lret
inc
sbb
xor
or
pushf
insb
dec
stos
outsl
mov
mov
insb
push
and
push
mov
int3
je
arpl
pop
scas
pop
cmp
ret
insl
pop
or
xor
dec
mov
sub
mov
pop
xor
sbb
xchg
nop
xchg
adcb
bound
xor
test
xor
mov
sbb
sbb
inc
xchg
ss
adc
xchg
sbb
and
mov
cmp
and
mov
push
mov
nop
jmp
sbb
in
adc
xor
mov
adc
mov
fs
sub
lock
ss
pop
pushf
lods
xchg
pusha
stos
sub
pop
sahf
pop
jl
cmp
sbb
inc
or
sbb
or
movsb
and
inc
and
inc
inc
and
mov
or
push
and
adc
inc
dec
and
nop
and
or
and
adc
and
dec
test
mov
dec
test
push
jo
adc
sbb
daa
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
push
cs
les
and
andb
pop
inc
push
sub
mov
sub
jns
or
sbb
xor
or
aam
sbb
push
movsl
jo
dec
sbb
fnstenv
sbb
xchg
enter
xor
ss
xor
or
mov
fnstenv
lock
and
icebp
sbb
aaa
mov
inc
repnz
cmp
cmp
and
jl
push
cld
mov
ret
test
js
mov
or
pop
adc
xchg
cmp
dec
and
push
inc
xor
sub
and
pop
xor
xchg
mov
cmp
out
test
jl
out
or
ss
xor
adc
fs
sub
cmp
inc
cmp
and
adc
xchg
test
and
inc
or
add
inc
inc
bound
cmpsl
and
nop
xor
add
inc
xor
inc
and
loop
xor
push
test
xor
pop
test
bound
aaa
lds
cmp
xchg
or
adc
xor
aam
xor
or
inc
lret
repnz
les
adcb
and
push
lds
and
fsubs
arpl
xor
in
xchg
loop
xor
mov
adc
popw
adc
and
adc
push
push
nop
imul
sub
push
cmp
xor
xchg
xor
mov
sub
or
in
lahf
js
push
jae
and
push
dec
inc
int3
enter
adc
mov
jbe
adc
sbb
pop
int
stos
inc
cmp
subb
clc
mov
imul
jo
jo
loopne
xchg
into
jecxz
inc
insb
cmp
adc
mov
or
inc
jb
stos
xchg
adc
cmp
daa
inc
dec
mov
outsl
ja
adc
jge,pn
adc
enter
gs
inc
sub
or
notb
jno
adc
push
lds
daa
add
sub
outsb
ds
add
pop
dec
pmuludq
adc
clc
mov
mov
pop
mov
or
pop
or
mov
out
or
je
shrl
mov
enter
sbb
insb
xlat
sub
fdivrs
push
jp
inc
pop
popa
dec
push
push
cmp
hlt
and
data16
cmpsb
push
and
es
inc
and
or
imul
ljmp
test
bound
inc
jne
dec
cmp
sub
add
xor
iret
movsb
push
mov
cmp
inc
mov
xchg
fcoms
add
cld
and
dec
pushf
push
xor
mov
sub
ds
dec
sbb
aam
clc
adc
in
fsub
and
fs
cmp
push
sarl
adc
mov
push
and
sarl
dec
je
adc
push
sbb
xor
push
cmc
push
xchg
sbb
das
nop
movsb
mov
inc
popf
mov
inc
leave
mov
sub
sahf
shlb
and
cmp
xor
jns
loope
adc
cwtl
mov
dec
adc
xor
pop
and
sbb
adc
insl
cs
pop
test
sbb
and
xchg
movsb
gs
test
movsb
cs
stos
xor
lret
pushf
pop
fs
jo
mov
int3
sub
adc
loopne
dec
sub
enter
sbb
sbb
pop
sub
sbb
pop
fcoml
dec
adc
loope
test
cmp
ja
sbb
daa
cli
in
imul
pop
jbe
sbb
sub
dec
sub
int
xchg
push
push
adc
faddl
les
xchg
popa
insl
push
dec
sbb
xchg
clc
popf
sbb
mov
enter
sbb
xor
orb
cwtl
fmull
pop
jae
jno
aad
push
clc
pop
push
mov
mov
push
add
lea
mov
js
test
sbb
inc
push
movsb
lds
pusha
imul
inc
imul
inc
sbb
and
inc
adc
xchg
arpl
jp
lods
jno
push
jecxz
jle
inc
sbb
or
or
inc
cmp
addr16
loopne
shr
lret
mov
jnp
loope
xor
jns
or
ljmp
das
pop
or
fsubrl
fs
dec
jo
shrl
sbb
push
push
lods
and
pop
fdivl
insb
imul
dec
inc
pop
add
add
pushf
daa
movsb
pusha
das
push
dec
adc
popf
push
sub
cwtl
adc
sbb
fstps
pop
inc
test
les
ss
int3
cmp
cmp
nop
adc
cmp
sub
xor
lock
fsubrs
adc
or
jl
aam
inc
es
cmp
aam
pushf
xchg
nop
cmp
sub
jecxz
adc
dec
addl
sub
mov
xchg
ret
inc
gs
mov
sbb
dec
inc
mov
sbb
cmp
outsb
mov
sub
insb
bound
insb
cltd
adc
flds
sub
inc
and
jnp
test
and
sub
call
push
jo
push
sub
nop
xor
out
or
jo
addr16
aam
or
jnp
dec
mov
movsb
mov
ljmp
inc
fs
loope
jae
dec
xchg
dec
sub
jl
cmp
sarl
xor
dec
mov
lock
daa
nop
adc
mov
mov
push
movsb
nop
sbb
repnz
cmp
fsubl
sahf
das
insl
inc
aam
sbb
shrb
xor
push
xor
adc
xor
insl
xor
adc
nop
cs
pop
dec
lcall
push
and
inc
adc
mov
loope
or
pop
ljmp
jl
stos
xor
mov
sbb
push
jo
xor
pop
je
sub
mov
sub
mov
mov
dec
sub
test
xor
mov
sbb
call
shll
loopne
xchg
inc
out
fstpt
and
fs
xor
mov
outsb
mov
pop
mov
adc
lods
push
aad
adc
xor
adc
mov
arpl
pop
das
inc
adc
gs
jb
clc
and
push
inc
mov
sub
test
sub
inc
push
inc
adc
mov
push
sub
test
push
clc
and
dec
sbb
mov
push
sbb
pop
inc
sbb
aam
lret
imul
and
imul
push
es
inc
pop
inc
push
push
sbb
mov
out
push
sbb
pop
xor
mov
scas
or
gs
and
adc
popf
gs
test
movsb
push
dec
and
or
inc
sub
sub
sahf
xchg
popf
addr16
inc
sbb
adcb
je
cmp
lret
clc
xor
lds
ljmp
push
push
rolb
sub
fnop
lock
push
adc
das
inc
and
imul
or
lret
or
mov
insb
push
adc
cmp
enter
inc
push
stos
sbb
pop
jnp
pop
jge
or
adc
adc
orl
push
test
int3
mov
adc
sbb
les
and
ja
je
push
sbb
arpl
inc
pusha
sub
dec
or
fs
movsl
mov
and
mov
out
or
rorb
mov
fmull
testl
sbb
pop
sbb
mov
ljmp
enter
inc
sbb
ftst
inc
sbb
inc
dec
xor
mov
sub
fldt
mov
xor
xchg
outsb
dec
sbb
into
mov
in
sub
mov
mov
cmp
and
sub
test
xchg
xor
sbb
sbb
sahf
and
outsl
mov
packssdw
or
fisubs
movsb
xor
inc
pop
loop
gs
aaa
sbb
aaa
enter
cmc
sbb
loope
inc
addb
add
sbb
push
adc
or
pop
pop
outsl
loop
mov
mov
mov
adc
lret
and
cmpb
pushf
and
inc
gs
sbb
mov
inc
xor
mov
xor
push
cs
mov
adc
popa
sar
add
add
sbb
sub
dec
or
cmp
or
imul
js
xchg
adc
cli
dec
pusha
jnp
gs
xor
cmp
mov
cmpsl
clc
mov
daa
sbb
xor
test
mov
es
bound
dec
inc
xchg
sub
insb
and
lods
adc
inc
gs
xchg
loopne
cwtl
adc
hlt
pop
sbb
je
push
xchg
mov
jns
sub
pusha
les
xor
test
hlt
loop
and
jae
mov
mov
inc
sbb
pop
imul
sbb
dec
push
nop
mov
mov
xchg
cmp
and
mov
call
mov
stos
adc
or
xor
sbb
sub
out
mov
cmp
inc
and
in
cmp
dec
aad
in
js
xchg
and
js
or
xor
jge
and
loopne
adc
inc
movsl
and
adc
or
adc
rorb
xor
dec
pop
and
mov
movsb
popa
pop
dec
push
inc
dec
jb
mov
bound
sbb
cmp
xor
movsb
sbb
les
test
mov
mov
or
fwait
sbb
out
mov
inc
hlt
and
push
inc
movsb
sbb
jl
sbbb
in
sub
in
sbb
nop
cmp
cmc
adc
lea
jmp
sbb
test
aad
push
jo
sbb
cmp
daa
and
and
mov
les
sbb
hlt
jb
jl
and
fldcw
dec
add
imul
lods
adc
stos
sbb
add
sbb
inc
dec
push
inc
dec
push
jo
xchg
add
pushf
cmp
sbbb
rcrl
pusha
cmp
xchg
sbb
lcall
repz
xchg
sub
cmp
ja
movsb
sbb
adc
sbb
nop
jl
adc
clc
sub
cmc
sbb
xor
pop
and
sbb
adc
and
push
pop
test
outsl
xlat
cld
je
or
inc
inc
lret
jecxz
mov
pushf
fs
sub
out
mov
sbb
cwtl
ds
hlt
and
movsl
sbb
ret
lods
dec
mov
and
mov
ss
sub
nop
clc
jmp
push
dec
sbb
sbb
mov
or
sbb
xchg
mov
test
aas
and
sti
dec
lcall
inc
adcb
and
pop
flds
leave
push
lods
sbb
sub
test
dec
inc
push
sbb
cld
jb
sub
cmp
in
lods
aam
dec
pop
test
hlt
cmp
xor
xor
test
dec
cmp
cmp
mov
aam
xor
push
and
mov
call
test
sub
lds
shll
inc
sar
out
sbb
cmp
inc
sbb
push
jne
fsubrs
sbb
inc
xorb
adc
int
or
mov
mov
sbb
and
lcall
movsb
sbb
outsl
mov
jl
mov
lcall
nop
dec
inc
fwait
scas
sbb
xor
negl
bound
inc
mov
mov
inc
cmp
fdivs
add
inc
adc
adc
lock
sbb
inc
pop
sbb
and
adc
inc
pusha
sbb
or
inc
dec
lds
popf
sub
inc
xor
xchg
nop
xchg
fistps
mov
nop
pop
mov
xor
and
in
aaa
add
sbb
dec
enter
sub
xor
xchg
sbb
mov
popa
mov
loopne
scas
sbb
or
xor
cmpsl
inc
sbb
inc
lret
pusha
sbb
test
xor
sub
aas
xor
in
in
outsb
push
insb
fs
repz
sbb
and
xor
cmp
mov
adc
cmp
adc
shlb
je
xchg
and
lock
lods
xlat
rorb
sti
scas
sbb
sub
jecxz
cmp
pop
jne
sbb
data16
sbb
push
js
sub
sub
or
push
stc
push
xor
insl
stc
popa
pushf
aad
pop
sbb
push
push
xchg
jl
inc
les
adc
adc
dec
cmp
push
clc
cmpsb
inc
cmpsb
sub
enter
ljmp
sub
shlb
push
sbb
icebp
mov
or
dec
push
inc
pusha
movl
mov
inc
or
push
call
nop
pusha
sub
sbb
cmp
sub
add
arpl
or
pusha
pop
push
mov
test
pop
aas
movsb
in
dec
sahf
test
adc
aas
inc
jns
pop
xchg
pusha
jae
sub
aaa
inc
adc
out
push
sbb
pusha
mov
xchg
sbb
push
lods
pop
movsl
ljmp
and
enter
repz
std
jo
jno
movsl
pop
cld
inc
adc
pushf
add
sub
push
cmp
inc
test
sub
hlt
jo
inc
push
cld
cltd
adc
sub
sbb
xor
cmp
push
xchg
jns
xchg
dec
xor
adc
xchg
mov
sbb
mov
or
xchg
sbb
insb
shll
push
pop
xor
push
sbb
xor
adc
sbb
mov
sbb
fcmovne
xor
and
mov
das
jne
or
pushf
push
inc
xchg
in
lret
add
mov
js
leave
mov
cld
ja
lea
sbb
lock
add
lret
dec
jns
stos
push
and
sub
icebp
and
sub
dec
adc
pop
test
and
xchg
orb
in
inc
xchg
sbb
adc
cmp
addr16
lods
inc
sbb
insb
sub
loop
adc
inc
inc
or
ljmp
pusha
sbbb
cmp
addr16
cmp
xor
xchg
inc
leave
or
notb
imul
xor
cmp
inc
adc
sbb
cmp
mov
cmp
stos
popf
jmp
sarb
addb
repnz
test
aaa
mov
cwtl
jne
jmp
sub
push
add
adc
dec
loope
push
jg
movsb
adcl
and
cmp
inc
pop
fs
or
jbe
std
push
dec
call
sbb
jp
dec
insl
inc
and
cmp
cmp
mov
lods
sub
xor
cwtl
jne
enter
inc
or
cmp
sub
pop
mul
pop
jecxz
and
dec
movsb
test
ret
push
movsl
and
dec
clc
mov
push
jecxz
test
movsb
and
mov
insl
jo
movsb
dec
sub
and
js
pop
cld
sub
inc
outsb
jne
enter
dec
sub
fidivl
and
push
cmp
aaa
and
mov
ret
test
adc
xchg
mov
push
sub
nop
ja
mov
xor
sub
sub
dec
pop
gs
sbb
rcrb
fmul
push
xchg
mov
sbb
addl
adc
js
inc
jno
lret
inc
jno
test
aam
jae
push
jl,pn
gs
adc
sbb
cmp
or
push
call
insb
pop
adc
addr16
mov
add
push
outsb
and
jae
sbb
mov
pusha
das
and
push
push
nop
push
sbbb
inc
andb
pop
fidivl
in
mov
push
fisubrs
nop
sub
dec
orl
sub
ljmp
mov
shlb
lds
xchg
test
mov
cld
dec
inc
fnstsw
add
inc
sbb
lret
jae
outsb
xchg
leave
mov
test
mov
enter
shlb
lods
or
pusha
xor
add
aad
mov
test
dec
dec
adcl
in
lret
jns
sbb
test
inc
in
shlb
fbld
xor
sub
sbb
xor
and
scas
mov
adc
or
add
sub
inc
sbb
stc
test
xchg
js
push
ljmp
clc
cmp
cld
int
icebp
mov
dec
adc
test
enter
mov
mov
int3
or
pushf
inc
outsl
pop
ja
je
sbb
mov
adc
gs
xor
inc
inc
adc
pop
mov
jbe
xor
cld
dec
lds
push
pop
add
mov
or
dec
loopne
dec
mov
xor
mov
sti
push
sub
inc
and
cmp
adc
test
or
dec
insb
sbb
sbb
jae,pn
dec
sbb
xor
sbb
adc
push
mov
or
mov
pusha
dec
mov
mov
xor
inc
pop
and
inc
add
dec
dec
aad
clc
mov
jp
and
and
dec
push
push
mov
inc
enter
mov
xor
insb
dec
bound
dec
std
clc
and
repnz
xchg
pop
xchg
dec
sbb
cmp
inc
cmp
cwtl
int
dec
dec
push
mov
aas
adc
out
adc
dec
and
or
sarb
mov
cmp
fwait
js
mov
dec
sub
dec
inc
inc
mov
mov
dec
push
ja
cltd
loopne
xchg
mov
sbb
lods
movsb
jo
loop
inc
es
stos
in
pop
dec
or
cmp
and
push
jmp
addl
getsec
and
xchg
jo
bound
cmpsb
sub
dec
addb
push
in
movsb
mov
int
cli
test
rorb
adc
push
pop
adc
mov
sbb
dec
test
mov
sbb
shlb
push
xorl
les
mov
push
icebp
lcall
insb
cli
dec
or
scas
adc
mov
inc
in
add
imul
xchg
inc
and
lcall
and
adc
rcr
jb
mov
push
jae
jne
icebp
jo
mov
in
out
and
dec
push
cwtl
aad
aam
xor
inc
dec
pusha
outsl
or
inc
dec
dec
pushf
sbb
hlt
addr16
and
rol
scas
into
shrb
cmp
ja
xchg
subb
inc
shlb
pop
out
sbb
les
mov
in
stos
dec
sbb
xor
sub
insb
data16
push
fs
cld
sub
outsl
and
movsl
loop
push
xchg
scas
mov
mov
push
js
xchg
mov
outsb
xor
mov
pop
pop
insb
inc
mov
push
int3
dec
repz
xchg
push
xchg
insl
push
mov
fstpt
or
stos
out
sbb
and
adc
es
fidivrs
in
add
mov
inc
cmp
adc
mov
sbb
jae,pn
xchg
sub
jmp
mov
sub
dec
pushf
pop
fwait
nop
and
leave
jge
ret
push
sbb
cmp
cmc
pop
dec
xor
mov
dec
push
xchg
jno
movsb
je
adc
cmpsl
test
xchg
pop
mov
stc
sub
mov
sbb
fldt
test
pop
dec
in
adc
inc
xchg
pop
cmpsb
dec
mov
imulb
gs
insl
push
loop
jecxz
test
xor
or
loopne
sub
mov
mov
cs
loope
out
sub
pop
leave
adc
jns
aaa
pop
out
push
insb
pop
xchg
adc
jne
jne
call
lods
sub
pop
xchg
inc
mov
sbbb
lods
dec
icebp
mov
or
cmp
dec
aaa
cmp
sub
dec
sub
arpl
dec
push
xor
sub
shll
xlat
int
and
out
lock
push
movsl
es
add
lods
sub
jl
push
sub
and
in
jne
ljmp
in
cli
mov
sbb
aaa
add
enter
ja
cli
and
push
dec
and
mov
jae
adc
jp
sub
xchg
dec
push
xor
jo
test
cmpsb
push
loop
sbb
aas
adc
outsl
mov
dec
movsb
pushf
inc
sub
jb
movsb
xchg
repz
movsl
adc
stos
ljmp
pop
mov
stos
fsubr
das
xchg
outsb
mov
and
gs
cmp
les
call
insl
sbb
mov
jp
xchg
xor
xchg
stc
dec
pop
fists
jo
jg
or
and
push
inc
lcall
pop
xchg
das
xchg
test
stos
pop
xchg
jo
cltd
sbb
adc
mov
mov
adc
loope
arpl
add
jno
and
fbstp
ret
arpl
imul
inc
ja
pushf
in
pushf
xor
jnp
push
jl
mov
cmp
push
sbb
cmp
xor
sub
cmp
and
xor
jle
jb
adc
aas
sub
xor
xchg
push
les
jmp
adc
push
jne
cmp
cmp
dec
std
scas
in
daa
cmp
das
inc
imul
imul
jmp
cmpsl
ret
pcmpeqw
stos
rol
mov
sub
cli
sub
cld
sub
scas
sub
out
insl
popa
xchg
filds
insb
inc
out
pushf
pop
jmp
ss
lahf
mov
out
cmp
and
jle
imul
pop
sub
jl
inc
inc
sub
inc
push
insl
push
jno
aas
sub
test
jae
imul
adc
xchg
sub
mov
and
cld
mov
sub
inc
dec
cmc
ds
movsl
xor
and
clc
shr
cmp
movsl
ret
dec
pop
sub
xchg
xor
push
daa
in
sub
push
ds
fcmovb
mov
jne
hlt
call
imul
inc
popa
aas
int3
sub
pop
scas
push
cs
lods
and
pop
dec
cmpsb
insl
pop
out
imul
inc
adc
push
jle
ja
push
repz
cmp
fdivrs
and
jnp
mov
cmpsb
imul
xchg
int3
and
in
dec
jb
loopne
sub
jbe
dec
jge
mov
les
mov
repnz
push
cmpsb
sub
or
push
notb
dec
mov
cmc
bound
sub
leave
daa
mov
push
sbb
xchg
xor
test
arpl
pop
gs
cmp
hlt
fdivl
inc
adc
ljmp
jecxz
out
xlat
cmp
cmp
js
lret
jg
popa
pop
lock
mov
movsb
mov
mov
xchg
mov
mov
and
dec
lods
sub
lock
sub
mov
push
lret
popa
lods
inc
sub
push
pop
dec
mov
jne
adc
in
movsl
mov
cmp
push
push
xchg
push
stc
pop
dec
pop
cmp
pop
dec
cmp
mov
pop
cmp
xchg
out
mov
mov
lret
cmp
xor
mov
aam
mov
add
dec
mov
pop
es
jae
pop
imul
mov
leave
mov
pop
bound
xor
fwait
pop
fimuls
dec
insb
fimuls
mov
dec
cld
mov
sti
fstpt
scas
mov
dec
inc
pushf
shr
sub
jb
daa
fwait
outsb
out
mov
std
ds
pop
adc
mov
xchg
ss
mov
mov
adcl
scas
mov
lods
aad
in
dec
and
movsl
mov
push
leave
xchg
in
xchg
cmp
cmpsb
popf
jmp
adc
mov
dec
inc
mov
cltd
push
insl
aas
mov
mov
cmpsb
movsl
jmp
and
mov
push
mov
sub
pushf
pop
aam
jb
jnp
push
pop
jge
sub
insl
pop
xchg
mov
insb
and
lds
lods
mov
into
lcall
andb
dec
jb
cs
les
das
sbb
dec
scas
sub
mulb
jo
cli
and
xor
stos
inc
adc
inc
lcall
dec
cmp
or
mov
ss
stos
outsb
push
lret
push
lcall
sub
xor
je
mov
dec
shlb
push
jecxz
xlat
out
fnstenv
pop
dec
and
aam
mov
cwtl
and
dec
mov
xor
jnp
xor
imul
xor
xchg
push
push
mov
lret
inc
push
rcrl
call
pop
dec
rcll
int
fs
pushf
nop
outsb
jp
cld
mov
xor
ficomps
into
xor
imul
xor
dec
shrl
fisubl
aad
xchg
xchg
mov
repnz
aad
imul
insb
insb
pop
xchg
movsl
out
cltd
adc
rcrl
fs
bnd
mov
repnz
and
cmp
xor
jle
pop
ret
aad
xor
mov
add
mov
mov
iret
mov
pushf
stc
cmp
xor
inc
mov
mov
cs
dec
push
xchg
jmp
push
sub
inc
std
xor
dec
and
loopne
xor
mov
vxorps
cs
dec
sbb
movsl
movsl
ret
sbb
mov
lods
lods
fucomi
push
mov
jge
test
insb
movsl
inc
jb
jo
rclb
push
pop
je
outsb
inc
cmc
sti
dec
shr
mov
sub
fdivr
mov
movsb
lret
pop
movsl
adcb
push
jl
addr16
jne
inc
rol
push
xchg
nop
insl
mov
pop
ficoml
xchg
mov
pop
icebp
mov
scas
jno
daa
fcoml
dec
leave
decl
dec
in
lods
push
mov
mov
pop
ljmp
jno
pop
fs
push
test
dec
and
call
adc
movsl
std
test
mov
push
push
pop
push
aam
xchg
out
xor
int
jb
movsl
repnz
imul
lret
dec
pop
xor
cltd
jns
pushf
sub
adc
dec
sti
insb
inc
xchg
mov
jp
pop
adc
add
pop
sub
sahf
jae
cltd
sbb
and
insl
das
mov
xchg
clc
daa
mov
out
test
mov
jp
add
xchg
xchg
notb
fnsave
jmp
add
fstps
and
pop
ja
ret
clc
fcoml
dec
std
sub
ja,pn
nop
movsl
adc
mov
cmp
cmc
jg
mov
insb
lods
mov
fmull
mov
adc
and
arpl
inc
jb
out
push
iret
push
mov
jl
dec
fmul
mov
lock
and
loop
mulb
mov
push
fidivrs
dec
rorb
push
pop
mov
add
and
fistpll
imul
jle
adc
lods
xor
sbb
xor
in
xchg
inc
dec
scas
das
addr16
push
pushf
sub
ja
pop
shrl
push
das
dec
or
and
mov
shlb
jne
cmp
imul
mov
push
mov
jo
lahf
stc
sub
jnp
repnz
lahf
cli
xchg
xor
test
loop
dec
sub
repnz
in
inc
sub
fildll
mov
cmp
sar
xor
loope
mov
push
inc
mov
cmp
inc
pop
outsb
adc
mov
dec
jecxz
test
ret
mov
push
imul
ja
js
call
testl
mov
lret
mov
push
pusha
mov
xor
fsubrs
sub
cli
je
ret
inc
push
fadds
cmp
imul
rcr
roll
dec
test
mov
movsl
push
daa
inc
push
sub
sahf
lahf
push
inc
jo
push
inc
mov
jp
mov
sub
mov
inc
inc
inc
mov
xchg
fs
or
inc
mov
adcl
gs
aad
call
fsubrp
mov
arpl
sub
sub
push
pop
xchg
ret
inc
push
push
cmp
rcll
push
das
xchg
xchg
daa
push
leave
aad
xchg
loop
fwait
lahf
ja
movsb
sub
xchg
mov
jne
xor
inc
push
sub
pop
cmpsl
cltd
mov
lods
cmpsb
push
xchg
outsb
dec
inc
test
jo
mov
jge
lahf
xchg
inc
sbb
insb
imul
insb
ja
sbbb
push
xor
loope
mov
push
das
cmp
xlat
arpl
jae
xlat
or
outsb
js
imul
push
stos
sub
aad
repz
push
daa
cmc
in
pop
pop
lods
stos
aad
clc
dec
and
jns
ret
mov
loopne
mov
sub
sbb
and
shl
sub
in
fs
adc
mov
mov
dec
mov
jmp
jo
imul
nop
jno
lret
out
pop
jne
mov
pop
push
dec
mov
xlat
cltd
xor
pop
sbb
lret
fadd
cs
adc
jge
popa
xor
imul
cs
movsb
dec
jo
or
test
mov
dec
jb
es
in
push
cli
push
sbb
xchg
xchg
cli
ffree
dec
sbb
push
stos
loope
into
loop
pop
fcmove
inc
mov
movsb
push
mov
xchg
sub
scas
and
mov
sub
adc
movsl
data16
push
jns
rcr
outsb
iret
leave
ljmp
aaa
and
push
pusha
mov
and
xchg
pop
sub
dec
xchg
loop
inc
addr16
pop
sub
mov
pop
pop
scas
ljmp
and
js
mov
outsl
sub
gs
mov
sub
popa
sub
push
out
dec
sub
enter
sbb
addr16
das
imul
push
push
push
and
mov
stos
shl
mov
push
movsl
subb
lds
lods
sarb
adc
dec
repnz
xchg
mov
outsb
xor
lret
pop
push
sub
nop
aam
xchg
mull
inc
xor
jo
insl
xchg
xor
arpl
sub
mov
cmpsb
sub
sbb
sbb
pop
aam
sahf
fnsave
mov
lock
inc
add
cmp
imul
sbb
jle
outsb
mov
push
call
repnz
pop
arpl
push
pushf
loop
aam
fists
dec
fucomp
xor
mov
inc
xor
xchg
jl
sarl
push
scas
mov
daa
arpl
sbb
leave
aas
dec
dec
xchg
mov
dec
mov
scas
sahf
out
mov
test
scas
sub
cmp
jae
dec
xchg
pop
xchg
insb
imul
jl
pop
pop
sbb
loope
scas
push
aas
mov
fs
inc
sbb
addr16
mov
ret
pop
test
sub
pop
repz
pop
and
sub
dec
push
sub
test
sarb
mov
movsl
shlb
sub
jo
or
bound
cs
je
lret
push
lahf
xchg
push
lret
rcrb
sub
mov
nop
sub
mov
loope
push
push
pop
inc
js
jo
sub
cmp
int3
xchg
jg
test
and
xor
cmp
xor
jbe
jle,pt
sub
sub
adc
cmpsl
sub
fs
mov
jl
cmp
les
dec
leave
leave
jbe
adc
push
frstor
in
cld
scas
mov
js
or
adc
lcall
loope
inc
insl
and
push
les
dec
pop
dec
xor
int3
stos
sub
das
xchg
dec
cmpsl
adc
out
mov
ja
fildl
cltd
addl
les
cmp
aam
push
push
xchg
aas
mov
xchg
xor
inc
jle
or
adc
dec
ja
aad
dec
int
and
pushf
pushf
inc
and
repnz
mov
pop
inc
xor
mov
pop
insl
pop
leave
adc
push
push
lods
jb
dec
lods
jb
test
dec
daa
push
je
addr16
mov
sub
sbb
cld
mov
jo
mov
outsb
imul
popf
mov
sub
popa
outsb
lods
pop
dec
ljmp
divb
mov
pushf
push
or
call
adc
adc
mov
dec
push
mov
push
ror
insl
mov
insb
mov
ret
pushf
dec
xchg
jle
into
test
xor
dec
ss
sub
pop
loop
jo
jne
outsb
cmp
clc
cmp
sub
pop
adc
dec
ss
sbb
cmp
cmp
in
pop
push
or
sbb
adc
mov
cmp
jmp
jl
sbb
sahf
sub
popf
mov
aad
sub
and
sub
nop
std
or
sub
xor
dec
xlat
lds
xor
xor
push
nop
test
bound
push
or
inc
dec
inc
and
push
push
and
push
adc
inc
dec
push
test
mov
sbb
test
push
mov
mov
out
mov
loop
pushf
test
lcall
mov
or
jg
popa
cltd
sub
ret
ret
mov
adc
cmp
lcall
pop
or
xor
mov
sub
movsb
adc
cmpsb
lods
push
adc
pop
push
adc
inc
jb
cmp
mov
and
dec
enter
jb
cmp
mov
and
push
enter
jb
cmp
mov
and
pop
enter
jb
cmp
sbb
mov
and
xor
jb
cmp
or
movsb
push
xchg
mov
add
imul
popf
xchg
in
xor
enter
xor
xor
xchg
xor
aaa
jg
cmp
cmp
into
daa
push
scas
jne
or
rol
fcoml
das
add
sub
jae
push
and
mov
es
scas
rclw
mov
dec
inc
das
movsl
rorl
inc
xor
sbb
cmp
xchg
inc
ss
mov
inc
or
push
xor
inc
xor
xor
mov
in
lret
adc
add
xchg
add
test
notl
push
pop
test
addr16
push
jge
dec
testl
cmp
insb
lret
sub
sbb
loop
jl
out
xchg
fs
divl
sub
adc
mov
mov
xchg
xor
imul
push
cltd
add
cmp
popf
xchg
sbb
sbb
pushf
sub
push
sub
std
stc
push
pop
jb
adc
inc
push
adc
imulb
mov
xor
sbb
mov
sub
mov
loope
imul
inc
adc
dec
test
fwait
sub
in
sub
mov
sbb
roll
inc
pop
fstpl
xchg
mov
lret
fs
or
aam
jno
cmp
and
jae
or
in
loop
mov
dec
mov
jle,pn
inc
mov
jno
mov
xor
jmp
and
pop
loope
mov
pop
int3
or
dec
les
lods
nop
mov
jo
test
inc
lods
out
push
in
mov
scas
adc
rep
adc
jmp
inc
in
sub
imul
inc
cli
fs
pop
dec
sub
cwtl
cltd
cmp
fwait
cld
push
int3
xlat
push
push
cmpsl
push
dec
std
loop
xchg
cmp
popa
push
cmp
movsl
stos
push
lret
pusha
movsl
loop
lcall
dec
mov
pop
cmp
adc
rcrl
es
dec
sbb
mov
bound
mov
stos
pop
cmpsb
push
sub
out
shr
mov
out
xor
push
mov
mov
and
notl
dec
and
push
fisttpl
lret
jae
push
repnz
fs
int
dec
sbb
cltd
inc
sbb
xchg
sbb
repz
xchg
xchg
mov
pop
add
mov
lds
mov
inc
xor
test
dec
pop
pushf
xchg
and
jne
xchg
jae
loop
inc
dec
mov
insb
in
adc
dec
sub
movsb
ret
push
xchg
sub
jb
sub
ja
fwait
pop
les
push
shl
lock
jae
in
and
dec
std
jo
daa
mov
jo
es
dec
adc
scas
sub
fdivl
movsl
lret
jno
sub
xchg
jl
jns
sub
xlat
jecxz
dec
mov
movsb
sbb
pop
scas
sbb
cmc
and
pop
sbb
das
int
cbtw
push
sbb
sbb
dec
inc
lahf
aad
loop
fwait
sbb
cmp
xchg
ss
cmp
popa
dec
jmp
loope
aas
mov
push
lret
cmp
rolb
and
inc
push
xchg
sbb
fnstenv
imul
call
pusha
ds
xor
adc
mov
lea
jge
adc
fnstsw
aaa
movsl
hlt
int3
dec
shr
adc
sbb
push
cwtl
imul
inc
sbb
cmp
sbb
stos
cmp
cmp
sbb
adc
inc
aam
in
lock
fiaddl
cmpsb
fs
dec
cmpsl
sbb
rcll
push
xor
push
and
mov
test
push
fiadds
insl
in
aaa
lahf
mov
lods
cmp
or
mov
push
in
add
jo
adc
cmp
mov
movsb
mov
jne
les
mov
xchg
or
push
and
ljmp
sub
das
popf
cmp
ljmp
test
out
push
pushf
insl
in
cmpsl
push
pop
loop
xchg
icebp
and
adc
mov
loop
xchg
and
sbb
jns
dec
sbb
push
dec
call
sbb
movsb
scas
jno
dec
sub
xchg
cmp
xchg
sbb
jp
push
sub
inc
sbb
imul
jg
stos
lods
cmp
push
daa
hlt
clc
ljmp
cmp
aad
sub
xor
mov
dec
xor
adc
mov
in
sub
movsl
cld
dec
adc
push
dec
call
cmpsl
test
cld
stos
push
inc
pop
or
push
cld
lods
sbb
jmp
scas
sbb
adc
sbb
jb
int3
lods
es
cmpsb
pop
clc
leave
mov
pop
daa
jecxz
cmc
insl
and
test
dec
pop
pop
fucomi
and
sbb
loop
push
jo
das
loope
mov
lods
cld
cmpsl
pop
repz
xor
mov
fists
sub
xor
pop
mov
mov
lcall
push
gs
push
lds
pop
in
jle
movsb
pusha
dec
mov
xlat
dec
mov
dec
sub
cmp
xor
sub
decl
ret
xchg
inc
movsl
push
add
arpl
ss
push
scas
data16
sub
lcall
dec
jmp
imul
dec
jmp
inc
xchg
je
push
movsl
jno
push
jl
add
jae
cmp
inc
lods
inc
jae
pop
bound
je
xchg
dec
dec
mov
sub
hlt
sti
jmp
pushf
dec
or
xor
enter
cwtl
sub
cltd
shll
sub
cwtl
fistpl
adcb
xor
mov
hlt
pop
not
jns
inc
ret
ja
pop
aam
jb
sbbl
xlat
push
shrb
adc
dec
aam
cmpsb
and
adc
push
addr16
or
dec
sub
dec
dec
jbe
ljmp
jp
test
cmp
push
sbb
loope
cmp
sub
pop
pop
fwait
fs
scas
and
jae
jl
int
and
leave
inc
jne
mov
push
xchg
sahf
lods
sub
shrl
jae
jmp
dec
sti
daa
jb
jp
cs
stc
int3
dec
jmp
sub
mov
pop
pusha
fwait
ljmp
jl
out
fldt
sub
sub
jmp
inc
imul
sub
push
push
sub
mov
push
out
and
push
dec
loope
mov
add
fists
xchg
in
xchg
dec
jne
mov
mov
loop
cs
push
fsubs
repz
jge
ds
mov
xchg
sub
or
fmul
fs
lcall
xlat
out
mov
push
xchg
lahf
push
rcrb
dec
jne
push
loopne
lahf
cmp
adc
mov
outsb
popa
cmpsl
push
das
test
xchg
pop
test
stos
lods
inc
sub
sbb
inc
jo
nop
stc
jnp
sahf
js
pushf
dec
push
lret
sub
sti
mov
decb
aas
insb
sbb
dec
xor
sub
arpl
call
adc
mov
repnz
sbb
sbb
push
jo
jne
bound
aam
stos
or
and
rcl
movsl
xor
fstps
sbb
imul
aam
mov
mov
sub
xor
test
cmp
jo
push
push
imul
dec
inc
cs
pop
daa
push
push
pop
cmpsb
pop
dec
push
pop
xchg
mov
xchg
sbb
and
pop
and
mov
xchg
and
sti
gs
jae
xchg
cmp
push
mov
lret
outsb
lret
xchg
jb
and
fldt
push
jb
in
mov
clc
xchg
cmp
jno
xchg
lcall
ja
push
jo
mov
hlt
stos
sub
xchg
inc
cmc
mov
imul
mov
punpckldq
cmpsl
and
and
pop
jecxz
and
xorps
in
insl
pop
lcall
xor
dec
data16
sbb
repnz
daa
push
ljmp
push
adc
fs
sbb
inc
sub
daa
sub
inc
ja
mov
cmp
sub
mov
cmpsl
xor
lret
rcl
xchg
movsl
cmpsl
adc
pop
mov
scas
cmp
mov
sub
pop
sub
push
arpl
mov
xchg
sub
jne
jp
and
out
adc
lock
pop
xchg
repz
xor
cmp
js
mov
push
mov
xor
sub
test
push
rorl
fidivs
mov
call
inc
aaa
sub
push
stc
adc
jns
and
addr16
insb
loop
adc
or
mov
sub
pop
aaa
mov
rclb
xor
dec
xor
and
insl
lods
dec
xor
sub
js
es
sub
dec
xor
mov
inc
adc
xchg
and
inc
and
xor
test
leave
xor
mov
pop
jl
stos
inc
xor
cmp
push
lds
and
pusha
dec
out
pop
mov
clc
sub
inc
mov
inc
and
push
push
mov
insl
adc
nop
mov
xchg
push
bound
negl
leave
cmp
xor
pushf
jmp
idivb
xor
sbb
inc
xchg
sbb
fs
outsl
and
es
adcb
dec
push
jo
imul
xchg
sub
xor
test
iret
xchg
cmp
pop
jns
pop
pushf
sub
pop
mov
adc
jno
xor
pop
sub
daa
push
push
addr16
sbb
ror
sbb
mov
sbb
inc
push
sub
xor
imul
je
leave
pushf
aad
xor
pop
xor
loopne
in
repz
sub
stos
lret
xchg
inc
lcall
xlat
inc
lret
imul
movsl
jo
xor
push
xor
dec
aad
inc
cmpsl
sbb
pop
out
pop
xor
aas
fsts
popf
stc
cld
xchg
jae
and
jl
aad
repz
mov
push
xor
popa
repnz
mov
pop
xchg
jne
xor
hlt
jmp
mov
mov
xchg
push
add
mov
mov
rol
and
lds
mov
push
xor
xor
dec
dec
mov
cmp
ret
pop
fldenv
inc
shrb
test
sub
lods
and
sahf
mov
and
cs
cs
inc
mov
test
or
add
imul
xchg
mov
adc
pop
les
out
fldl
jne
mov
adc
sub
pushf
inc
sub
sbb
dec
sub
xchg
jbe
sbb
mov
and
scas
push
popf
mov
shrl
lret
mov
dec
mov
push
mov
pop
adc
jne
inc
dec
jne
jmp
in
mov
xor
inc
div
imul
dec
lret
jecxz
mov
fnstsw
push
xchg
adc
lock
nop
adc
inc
dec
daa
push
adc
daa
fcoml
mul
dec
push
xor
xchg
test
shll
stos
xchg
lcall
leave
push
and
xor
or
xor
stc
ja
cmpsb
dec
shlb
mov
mov
and
mov
sub
inc
xchg
in
stos
ds
fnstcw
addr16
push
push
sbbb
lcall
sub
inc
scas
xor
jo
dec
push
ja
sub
das
xor
stc
jle
scas
jb
sub
jae
dec
dec
xor
imul
push
mov
cmc
ds
lret
sub
insl
mov
cs
push
sarl
lds
insb
push
push
std
lcall
and
cmp
xchg
shll
push
pop
dec
inc
aam
pop
imulb
fsubl
mov
cmc
clc
mov
pop
jb
in
mov
or
loopne
mov
add
pushf
lahf
sub
mov
xchg
pop
sti
sub
fcmovbe
mov
shlb
in
nop
imul
fcom
jne
in
or
push
scas
lret
mov
mov
inc
mov
lcall
lea
aam
dec
pop
sbb
loop
fstpl
movsb
pop
xchg
pop
test
je
jp
sbb
fcoml
add
in
aam
xor
mov
aas
jb
sub
lock
push
jae
leave
mov
test
sahf
mov
call
outsb
mov
dec
call
dec
popa
popf
shll
aas
cltd
cmpsb
inc
jmp
aam
imul
and
sub
pop
movsb
in
xchg
arpl
adc
gs
mov
jne
push
mov
mov
enter
mov
mov
cwtl
adc
pop
cmp
xor
jae
cmpsb
cmp
push
outsl
dec
mov
mov
lcall
push
lods
aas
ljmp
mov
push
scas
pop
cmp
lahf
sti
out
ljmp
ljmp
mov
and
sub
and
mov
clc
pop
push
imul
pushl
testl
bnd
dec
mov
pop
lahf
call
mov
sub
cltd
cmp
cmpsl
adc
mov
dec
mov
mov
stc
idivb
cli
lahf
mov
pusha
push
sub
pop
pop
pop
mov
fs
sub
mov
sahf
ja
xchg
mull
aas
sub
rcrb
in
out
pop
cmpsb
addr16
mulb
adc
popf
dec
lods
ret
leave
jae
or
sub
mov
shl
push
adc
jp
notl
jbe
jns
dec
je
bnd
inc
loop
movsl
pusha
aaa
cld
stos
pop
mov
xor
cmp
sub
lret
fimuls
sub
mov
sub
popa
lahf
stc
xor
jnp
out
ss
cmp
push
imul
cltd
push
es
mov
popa
clc
xchg
fbld
je
iret
fistpll
adc
fcoml
cmp
dec
and
mov
xor
popa
sub
dec
bound
cmpsb
movsb
push
pop
push
std
out
inc
andb
cmp
xchg
int
cmp
jge
ljmp
mov
pop
imul
mov
mov
aad
dec
movsl
cmp
jae
jb
jge
pop
xchg
pop
jno
pop
inc
adc
pop
das
fldenv
movsl
jns
scas
cmp
scas
in
mov
pop
mov
int3
fs
push
jecxz
jb
add
hlt
xchg
jne
mov
mov
das
mov
cli
cwtl
pop
jecxz,pn
fdivr
ds
imul
xor
jl
pop
data16
sub
in
or
mov
sub
pop
xchg
push
leave
xor
xchg
mov
xchg
jb
hlt
lods
in
mov
mov
std
pop
bound
push
int3
push
sbb
xchg
scas
push
clc
rcl
or
push
outsb
sub
cwtl
repz
push
call
sti
mov
data16
das
xchg
out
push
aam
fldt
outsb
dec
cmp
mov
adc
aam
push
mov
jmp
cwtl
xor
test
push
mov
xchg
addr16
and
dec
mov
hlt
mov
cmpsl
je
pop
adc
pop
outsb
xchg
dec
inc
sbb
ds
xchg
out
cmp
in
inc
inc
mov
stos
xor
movsl
je
decl
loope
pop
dec
fisubs
xchg
test
into
jge
push
lods
mov
pop
mov
adc
loop
fisubrl
pusha
sub
xlat
push
ret
xchg
push
test
cmpsb
jb
cmp
mov
dec
sub
sbb
mov
dec
fcomip
jge
leave
xor
fiadds
dec
cmpsb
sbb
push
fwait
rclb
stos
cmp
fs
fsts
movsb
out
lret
push
scas
cli
sub
xor
mov
aas
repnz
mov
cmp
fcoms
dec
xor
jmp
xor
dec
call
xor
in
movsl
jl
out
pop
test
popf
data16
in
lret
ljmp
ficompl
imul
cli
jg
iret
jmp
or
inc
lods
pop
sarl
std
mov
into
cmp
and
xchg
dec
mov
scas
xchg
dec
jp
mov
inc
dec
aad
or
xor
fsubl
aas
not
outsl
sub
jecxz,pn
xor
xchg
bound
inc
mov
jmp
lahf
popa
inc
xor
call
or
push
jo
push
popf
sub
xor
inc
sub
xor
sahf
addr16
cmp
fistps
mov
aas
insb
movsl
cmp
push
mov
je
stos
into
pop
dec
mov
cmp
jno
repnz
push
xor
cmp
pushf
lods
test
add
sbbb
sub
pop
mov
leave
cmp
pop
scas
inc
jmp
sbb
ss
xchg
push
cmc
push
mull
ja
mov
cmp
and
mov
pop
icebp
sbb
loopne
push
daa
jae
movsl
pop
bound
push
jns
and
cmpsl
jno
in
sbb
cmpsl
mov
pop
insl
rorl
mov
cld
insb
xor
leave
shll
out
int
cld
xor
inc
mov
mov
fidivs
push
inc
push
dec
push
dec
xchg
add
dec
in
jne
cmp
movsl
dec
lods
or
test
and
sti
jmp
cmpsl
dec
dec
les
dec
je
out
mov
inc
pushf
cli
xchg
or
jb
xor
nop
sub
jo
scas
mov
mov
push
mov
and
fs
adc
test
icebp
mov
xchg
in
dec
jae
movsl
scas
mov
in
push
mov
cmp
call
dec
push
jge
sbb
sbb
jb
dec
mov
stc
outsl
pop
nop
lret
cmp
dec
sar
pop
cmp
das
mov
repz
push
popa
out
std
pop
xchg
ja
lret
jne
mov
cs
in
lods
xor
data16
fldt
test
and
dec
jne
aad
lcall
jmp
leave
js
xor
rcrl
xor
adcb
sub
cmp
or
adc
mov
ret
sbb
test
xor
adc
test
sub
adc
adc
inc
in
jb
cltd
or
add
aad
dec
sub
enter
inc
xchg
or
inc
cld
inc
push
mov
xor
cmp
push
mov
sub
enter
jb
cltd
or
dec
sbb
clc
enter
add
adc
adc
and
adc
bound
sbb
push
pushf
sbb
xor
dec
cwtl
sbb
push
mov
adc
lock
jae
test
sub
faddl
xchg
add
add
add
jb
cmp
sbb
mov
and
or
jb
cmp
sbb
mov
and
adc
jb
cmp
xor
std
cmp
sbb
mov
push
mov
add
and
or
jnp
xchg
and
enter
fsubl
mov
cmp
adc
fnstenv
add
std
adc
and
cmp
jle
cmp
pushf
cmp
lea
mov
xchg
add
call
adc
add
cli
das
sarl
test
roll
and
mov
repz
fistps
les
std
fs
jno
mov
mov
jo
xor
mov
mov
jo
lcall
pop
je
in
and
out
and
xchg
cmp
out
xchg
xor
sub
nop
push
movsb
mov
or
lods
in
das
mov
stc
pusha
inc
adc
adc
xor
test
sub
push
mov
xor
dec
sub
fcompl
or
sub
outsb
das
fsubl
or
mov
inc
mov
in
dec
lock
mull
or
xchg
lods
lock
xchg
test
cmp
xchg
test
inc
mov
sbb
sub
and
imul
enter
sbb
inc
aas
and
pop
sub
inc
lahf
in
inc
sub
ss
adc
or
sbb
inc
and
or
nop
push
sbb
or
xchg
or
sbb
dec
and
fs
dec
dec
nop
fs
sbb
sbb
cmove
xchg
cwtl
xchg
dec
sub
sub
fwait
cld
int3
push
or
mov
adc
and
dec
or
fsubrs
or
dec
test
or
xchg
cwtl
ds
lock
add
xchg
or
mov
or
or
cmp
pop
or
test
add
or
push
sub
daa
sbb
clc
shlb
enter
clc
outsb
testb
pop
dec
sbb
mov
sub
insl
lods
dec
pop
imul
sub
imul
xor
sub
insb
xor
sub
sub
mov
push
es
daa
fs
xchg
or
jl
xchg
clc
jno
and
jno
mov
mov
inc
cmp
jb
sub
jb
xchg
pushf
xchg
sbb
mov
sbb
dec
inc
imul
xor
dec
sub
lahf
dec
sbb
cld
dec
sub
cmp
push
cmp
dec
sbb
mov
sbb
jns
and
mov
lahf
mov
sub
jl
orb
lods
push
jl
push
xchg
push
dec
jl
cld
jge
mov
sub
data16
push
lock
mov
mov
mulb
cmp
mov
stc
adcl
adcl
and
stos
loop
xor
push
in
fcoml
and
les
sub
test
jle
xchg
sub
pop
dec
sub
xchg
jle
mov
sub
mov
test
sub
push
dec
mov
pop
sub
clc
adc
je
fcompp
push
icebp
mov
les
std
and
cmp
xchg
lea
cmp
nop
sub
jl
sbb
push
xchg
xchg
push
xchg
or
mov
stc
js
cld
mov
sub
iret
inc
enter
sub
xchg
dec
and
loop
dec
int3
mov
icebp
jb
mov
push
mov
sub
xchg
adc
and
xchg
ds
mov
icebp
xchg
adc
and
and
xchg
sub
js
push
mov
add
lcall
mov
jle
pushf
mov
sub
popf
push
fsubrl
leave
popf
lahf
mov
sahf
aam
and
push
sahf
arpl
repnz
and
xchg
dec
sub
mov
mov
nop
mov
push
mov
inc
mov
and
gs
fsubs
sub
or
fcoms
mov
adc
push
pop
and
les
call
sub
or
and
adc
push
jns
stos
dec
loopne
cmpsl
mov
dec
mov
inc
test
movsl
sub
nop
cmp
insb
inc
stos
xchg
jl
es
loopne
inc
lods
xchg
movsl
sub
test
subb
jl
add
rorb
and
mov
xchg
mov
call
adc
inc
test
inc
stc
shll
jecxz
sub
js
fs
mov
cmp
xchg
and
or
cmp
and
mov
adc
mov
pop
sbb
and
loopne
inc
mov
movsl
sub
mov
adc
les
sub
lret
mov
rclb
mov
ror
xchg
test
mov
out
in
dec
lods
sub
jae
repnz
mov
je
adc
pusha
and
dec
int3
xchg
in
clc
pop
xor
adc
mov
enter
adc
loop
pop
xchg
pop
and
mov
and
mov
or
or
repnz
call
rcrl
aam
inc
cmp
ret
dec
sub
ret
test
ret
dec
in
jns
dec
aam
and
inc
sub
inc
lds
lds
push
mov
mov
aam
in
pop
cmp
enter
sub
enter
sub
leave
inc
sub
cmp
mov
stc
sbb
sbb
sub
push
mov
movsl
push
xchg
lret
mov
dec
sub
int3
mov
push
pop
int
cld
into
mov
pop
inc
or
mov
dec
sub
iret
push
pop
inc
or
mov
dec
sub
rclb
push
filds
into
xchg
sub
and
push
and
inc
rcrl
inc
sub
mov
rclb
mov
push
and
repnz
repnz
int3
clc
aam
andl
inc
aad
xchg
sub
fdivr
mov
loop
sbb
mov
insb
data16
fsubs
inc
sub
sub
repnz
and
dec
je
movsb
aas
and
push
cmp
fsubl
xchg
fldenv
stos
clc
add
and
dec
sub
inc
mov
sub
nop
out
or
xor
push
mov
xchg
or
adc
fmull
test
lret
pop
pop
xlat
dec
aam
fcoms
test
loope
dec
gs
pop
fiaddl
sub
adc
sub
inc
cld
fmull
xchg
sbb
push
mov
loopne
les
es
jle
movsl
sub
into
xchg
sub
imul
insb
in
jecxz
adc
xchg
jecxz
pop
and
push
dec
sub
in
rol
in
jl
pop
in
or
sbb
and
pop
jmp
lods
movsl
pop
xchg
out
cld
call
call
push
push
jmp
popf
insb
and
movsb
les
jmp
cld
sub
jmp
lahf
sub
in
repnz
pop
mov
das
xchg
in
das
je
add
out
ficoms
out
pop
inc
adc
sub
push
fs
jecxz
loop
and
pushf
inc
pop
inc
or
mov
icebp
cs
and
sub
in
repz
sub
das
cs
and
inc
hlt
insb
movsl
sub
adc
cmc
das
cs
and
inc
testb
fs
notl
movsb
insb
sbb
inc
clc
and
and
nop
test
stc
sbb
sbb
and
xchg
and
sti
and
cmp
xchg
enter
and
in
xor
ss
and
mov
mov
xchg
adc
lock
or
lea
cld
fisubs
xchg
adc
testl
notl
push
sbb
sub
xchg
sub
mov
sbb
and
std
adc
push
inc
add
sbb
add
inc
repnz
sbb
and
add
enter
adc
and
cmp
xchg
enter
and
xor
mov
mov
and
pop
and
or
pop
ss
xchg
jecxz
clc
mov
sub
flds
or
xorl
or
xor
ss
inc
or
les
and
and
int3
jnp
xor
inc
inc
push
mov
mov
xchg
and
dec
fdivrl
or
lea
in
adc
dec
mov
adc
push
inc
adc
xchg
dec
and
inc
hlt
enter
insb
dec
mov
adc
push
inc
adc
sub
adc
add
jno
or
lea
or
adc
mov
adc
inc
push
and
nop
sbb
pop
sbb
sbb
dec
inc
sbb
nop
sbb
das
fsts
sbb
cmp
xchg
enter
jp
nop
sbb
xor
push
adc
and
cmp
xchg
enter
and
xor
ss
push
sbb
sbb
and
dec
push
jns
or
lea
pop
enter
insb
push
mov
adc
and
aaa
fs
dec
and
cmp
and
and
and
cmp
pop
adc
and
cmp
xchg
enter
and
inc
xor
xchg
enter
and
inc
xor
mov
mov
xchg
sub
movsb
in
xor
ss
xor
and
xchg
inc
mov
and
dec
mov
sub
lea
mov
insb
cmp
inc
sub
inc
cmp
nop
int3
repnz
pusha
inc
cs
nop
cs
adc
and
cmp
xchg
enter
adc
loop
sbb
and
xor
push
inc
xor
dec
fs
xor
dec
insb
mov
adc
xor
dec
fs
mov
fs
insb
mov
adc
fs
repnz
and
aaa
hlt
xchg
push
cmp
adc
sbb
cmp
dec
imul
inc
repnz
push
sbb
insb
inc
cmp
nop
cmp
push
fldcw
cmp
mov
cmp
push
sbb
outsb
inc
cmp
xchg
outsl
adc
xchg
enter
cmp
fs
insb
jno
aas
adc
push
inc
aas
and
jb
inc
nop
sbb
inc
sbb
and
inc
sub
fnstenv
das
push
repnz
sbb
and
inc
inc
xchg
jbe
inc
and
cmp
xchg
enter
and
inc
xor
js
mov
inc
xchg
pop
mov
and
dec
jo
inc
or
lea
jl
dec
fs
insb
jnp
dec
adc
pusha
fs
dec
nop
xchg
repnz
sbb
and
dec
mov
fnstcw
dec
and
cmp
xchg
enter
and
push
scas
outsl
insl
mov
or
mov
adc
and
dec
adc
jg
xor
or
and
dec
sbb
sbb
and
dec
and
and
sub
dec
sub
sub
xor
dec
xor
xor
cmp
dec
cmp
cmp
fcoms
inc
inc
mov
inc
and
dec
dec
xchg
dec
and
dec
dec
mov
dec
and
dec
push
xchg
push
and
push
push
mov
push
and
dec
pop
xchg
pop
and
pop
pop
mov
pop
and
dec
pusha
xchg
popa
and
arpl
int3
dec
in
cld
adc
pop
mov
mov
dec
mov
loopne
sbbl
dec
pusha
nop
and
mov
in
inc
add
or
xchg
cmp
push
inc
push
mov
les
xchg
in
dec
xchg
test
or
inc
cmp
mov
and
dec
mov
inc
fdiv
mov
sbbl
dec
push
xchg
push
movsb
mov
dec
hlt
movsl
fcmovu
fs
xor
xchg
pop
and
pushf
mov
cld
lea
rcll
js
mov
mov
xchg
or
and
aaa
or
dec
mov
or
and
adc
aas
fimull
mov
or
orb
shlb
inc
dec
jo
cwtl
sub
xor
call
cmp
or
mov
push
add
add
dec
mov
sub
push
test
nop
mov
or
add
dec
pop
xchg
cmpb
inc
sar
add
and
or
dec
jo
and
adc
or
cmp
mov
fsubrs
sarl
and
push
inc
js
mov
repnz
inc
sbb
fcoms
nop
and
or
mov
add
dec
test
shlb
clc
and
or
cwtl
adc
daa
call
adc
and
mov
adc
and
dec
js
enter
dec
inc
idiv
inc
pop
test
ds
sub
xchg
repnz
mov
sub
popf
sub
add
sub
cmpsl
sub
int3
test
stc
int3
push
popf
sub
or
test
jle
push
cmpsl
sub
test
test
push
sbb
popf
sub
pop
lret
sub
push
mov
rorl
push
insb
push
sub
cmpsl
sub
test
test
push
insb
push
popf
sub
adc
and
adc
xchg
lods
push
lea
xchg
sbb
sbb
mov
pop
sub
rcrl
sbb
sbb
sbb
and
push
pop
push
sbb
pop
pop
pop
imul
push
sub
cmpsl
sub
lods
cld
test
pop
cld
push
popf
sub
and
sub
sub
lret
sub
es
cld
sub
shll
imul
push
sub
popf
sub
sub
sub
sub
lret
sub
sub
xchg
cld
sub
shrl
sub
cmpsl
sub
pushf
test
fstps
mov
movsl
cmp
daa
xor
dec
sub
lret
sub
xor
xchg
pushf
sub
shll
sub
cmpsl
sub
pushf
test
fstps
mov
xor
xor
xor
xor
xor
xor
xor
movsl
cmp
das
inc
inc
push
dec
sub
mov
call
sub
roll
push
push
sub
cmpsl
sub
call
mov
push
push
popf
sub
dec
mov
das
dec
inc
push
dec
sub
mov
mov
sub
fs
or
xchg
movsb
and
inc
fdivr
mov
xorl
dec
test
fdiv
mov
daa
subl
adcb
lock
sbbl
inc
cwtl
mov
rclb
in
and
sub
dec
inc
xchg
pusha
and
loopne
in
and
cmp
pusha
or
xchg
loopne
dec
adc
xchg
arpl
and
addb
loopne
in
and
or
insb
and
cld
adc
sub
dec
mov
call
movsb
mov
lock
testl
jmp
push
pushf
inc
int3
leave
pushf
jno
jae
push
mov
and
call
sahf
faddl
push
ret
decl
fs
mov
push
mov
pop
inc
pop
cmp
leave
mov
das
mov
sub
mov
cmpsb
xchg
cmp
inc
push
mov
mov
dec
mov
pop
pop
movsb
sbb
adc
movsb
inc
movsb
out
adc
xor
sub
cltd
adc
and
movsb
pop
movsb
mov
xor
cmpsl
xchg
movsb
jns
cltd
adc
and
movsb
pop
data16
test
leave
test
adc
mov
inc
movsb
out
adc
xor
sub
stos
xchg
xchg
in
insb
inc
lods
xor
sub
lods
jns
jno
cltd
adc
and
pusha
adc
xor
ss
sub
lret
in
push
pop
sub
das
cs
jo
mov
xor
fs
in
xor
xor
dec
mov
in
or
mov
hlt
xchg
sub
lret
in
mov
mov
xor
aaa
sub
mov
xchg
in
nop
adc
mov
in
cbtw
adc
leave
mov
in
fs
gs
test
mov
xchg
in
nop
inc
push
stc
cmp
and
in
test
adc
movsb
xchg
push
shlb
repnz
or
mov
in
movsl
sub
mov
adc
sub
adc
adc
sub
lret
in
and
and
xchg
xchg
in
mov
mov
in
data16
xor
sub
mov
pop
push
mov
mov
cwtl
adc
xor
cmp
mov
int3
xchg
and
in
cld
adc
das
add
and
dec
jo
mov
movsb
inc
mov
adc
add
dec
dec
push
inc
mov
mov
adc
xor
fs
jl
xchg
and
cld
or
ret
and
jnp
and
shlb
insl
and
mov
int3
les
andb
xchg
xor
xor
mov
enter
xor
repnz
pop
clc
mov
adc
adc
inc
dec
push
int3
enter
push
and
and
cmp
leave
aas
and
push
and
lret
stc
pop
push
mov
test
sbb
cmp
push
int3
cmpsl
mov
jns
bswap
into
nop
insb
repnz
inc
test
inc
repnz
cs
mov
mov
clc
add
and
loope
push
fsubrs
enter
mov
xor
sub
test
dec
mov
lock
and
inc
dec
bound
and
shll
xchg
jo
rclb
push
xchg
sub
jo
rorl
rcrl
jle
aam
movsl
sub
aad
les
fisubl
std
sbb
in
dec
sub
hlt
shlb
xlat
xor
cmp
sub
jle
dec
mov
test
or
fdivr
xchg
jo
test
xchg
cmpb
jo
fisubl
xchg
jo
fistl
js
sub
jo
fmull
fdivl
inc
aas
jo
ficoms
sub
ficomps
jo
fbld
fsubr
and
inc
int3
loopne
hlt
movsl
sub
xor
xor
cmp
push
popf
add
sub
push
popf
add
sub
push
popf
add
sub
fs
in
cmpb
jo
sti
and
inc
cwtl
lret
out
jo
fsts
adc
jo
enter
int3
bnd
xchg
push
jmp
repnz
mov
sub
inc
shll
dec
mov
shr
mov
adc
jmp
xchg
nop
dec
sub
testb
addr16
fs
sbb
cmp
xchg
in
dec
sub
pop
in
sub
int3
mov
xchg
dec
sub
adc
sub
out
stos
ds
and
push
subb
out
push
int3
jl
lock
movsl
sub
icebp
mov
pop
int3
icebp
repnz
xchg
sub
mov
loop
and
xchg
addr16
hlt
dec
cld
sub
sub
int3
mov
mov
aas
jno
bswap
notb
lahf
int3
adc
sub
repnz
int3
clc
clc
mov
int3
icebp
stc
adc
mov
loop
and
mov
push
xchg
movsb
dec
or
or
mov
adc
add
and
dec
dec
xchg
pusha
and
nop
movsb
mov
adc
and
inc
or
mov
jnp
fadd
adc
or
in
jns
sub
or
sub
in
pushf
clc
adc
adc
jl
adc
mov
mov
aaa
lods
xor
pop
or
add
roll
stc
cld
adc
ds
and
push
mov
nop
decb
sub
cmp
dec
sub
nop
jl
clc
cmp
nop
add
sub
inc
sub
cmp
xor
add
add
fdiv
mov
cmp
lret
push
adc
add
loope
xor
lcall
sub
add
add
push
push
jl
fisubl
inc
jo
pop
xor
sub
pop
imul
mov
jo
or
xchg
or
mov
mov
xor
sub
dec
cmp
xor
and
dec
test
les
in
clc
mov
movsb
cld
or
jle
movsb
stc
push
adc
sub
movsb
cld
jns
shld
push
aas
movsb
and
push
jl
leave
adc
movsb
xchg
adc
xchg
sub
movsb
enter
sub
adc
les
and
movsb
xor
inc
adc
push
xor
sub
or
lds
insb
inc
sub
movsl
and
test
mov
and
dec
lods
xchg
enter
cmp
add
sub
mov
sbb
inc
enter
inc
jno
or
mov
sub
sbb
js
sub
xchg
push
sbb
lret
inc
enter
sub
sub
inc
aam
and
and
aam
and
push
test
leave
and
and
das
inc
push
js
mov
and
cmc
adc
and
sbb
and
and
mov
and
push
or
mov
and
xchg
dec
mov
inc
jno
or
test
pop
sub
or
movsl
mov
sub
or
movsl
mov
sub
or
scas
push
xchg
sub
sbb
sub
adc
enter
sub
sub
sub
and
subb
sub
adc
lock
sub
and
and
dec
les
xor
data16
das
xor
sub
das
fs
insb
loopne
xor
push
push
inc
xor
sbb
xor
sbb
and
inc
xor
xchg
clc
adc
and
sbb
xor
sbb
imul
mov
sub
nop
mov
and
xchg
sub
sub
aaa
fs
insl
mov
cmp
lock
sub
dec
mov
xchg
cmp
and
cmp
mov
mov
dec
cmp
push
inc
mov
mov
adc
cmp
jo
mov
call
mov
dec
and
dec
jl
xchg
and
daa
or
pushaw
or
mov
adc
sub
adc
adc
mov
cmp
and
or
ds
fsubrs
leave
ds
lret
aas
and
in
mov
out
xchg
inc
adc
loop
addr16
xchg
insb
or
add
pop
or
jl
sub
call
mov
push
pusha
int3
inc
xor
sub
inc
xor
hlt
mov
test
mov
mov
mov
sub
hlt
loop
and
pushf
hlt
jl
dec
xor
mov
xchg
pushf
xchg
dec
sub
fs
loop
in
pushf
dec
mov
pop
hlt
and
pushf
sub
cmp
mov
xor
hlt
and
inc
dec
int3
movsl
sub
mov
in
xchg
sub
cs
jp
dec
adc
push
and
add
push
and
pushf
hlt
pop
inc
add
sub
push
pop
hlt
adc
and
dec
sub
push
pop
hlt
adc
and
aam
leave
push
or
mov
das
and
inc
push
xor
hlt
mov
xchg
push
sub
fs
loop
loop
and
dec
subb
push
cmp
mov
xor
hlt
xchg
and
pop
and
pushf
hlt
pop
xchg
loopne
pop
adc
push
loop
jno
jb
loopne
pop
cmp
hlt
xchg
and
pop
cs
sub
adc
pop
adc
cs
and
inc
pop
movsb
movsl
sub
pop
xchg
pop
sub
sub
hlt
loop
and
pushf
hlt
pop
or
inc
sbb
cmp
hlt
pop
inc
or
cmp
sub
bound
hlt
adc
and
fs
arpl
clc
test
lret
sub
or
lahf
xchg
clc
sbb
movsb
dec
sub
gs
and
xor
push
les
enter
cld
clc
test
lret
sub
or
lahf
xchg
clc
sbb
or
movsl
sub
push
push
push
imul
mov
push
xor
push
sub
adc
push
xchg
sub
les
sub
or
mov
les
xor
sub
insl
gs
sub
adc
push
sub
outsb
gs
outsl
xor
dec
sub
outsl
xchg
cs
les
sub
or
mov
les
xor
sub
jno
xor
xor
sub
jae
xor
outsl
mov
sub
pushf
push
gs
hlt
sub
jne
pop
xor
adc
jbe
xor
sub
sub
xor
inc
xchg
sub
sub
js
xor
js
aaa
outsl
mov
mov
cwtl
movsl
sub
les
xor
sub
jp
pop
cmp
les
sub
cmp
adc
adc
sub
jl
cmp
gs
cmp
jge
pop
cmp
les
sub
sub
jg
lock
sub
jg
ds
les
sub
aas
fists
or
sub
or
mov
lods
and
push
fstps
int3
adc
es
and
cmp
pop
xchg
jo
mov
mov
adc
sbb
xchg
or
push
inc
push
mov
mov
inc
adc
and
jl
cwtl
adc
clc
pop
rcrl
or
dec
mov
and
push
pushl
or
add
cmp
push
xchg
insb
and
adc
and
inc
adc
or
les
jl
pushf
and
dec
fdivrl
jne
pop
dec
imull
ss
mov
test
jno
mov
mov
xchg
test
mov
dec
sub
call
js
xor
leave
xchg
jno
rclb
inc
mov
inc
push
mov
mov
xor
sub
nop
push
int3
mov
leave
mov
jno
in
inc
mov
movsl
sub
inc
andl
mov
out
mov
mov
xchg
add
mov
sub
add
or
mov
cmp
pop
mov
xchg
xchg
sub
pop
sbb
xor
dec
and
dec
js
xchg
and
lock
inc
add
and
pop
add
inc
jo
les
mov
lret
xchg
jno
icebp
xchg
adc
xchg
sub
iret
adc
xchg
mov
jno
daa
sbb
push
rcrb
aam
call
push
sub
cmp
repnz
mov
push
xchg
mov
and
out
nop
cld
testb
notl
insb
push
push
idivl
mov
movsl
insb
stc
jl
xchg
cli
dec
mov
cli
movups
inc
cmp
inc
mov
xchg
push
xor
imul
jb
sbb
mov
cld
jo
insb
enter
dec
push
insb
enter
repnz
adcb
sub
andb
push
movsb
sub
sub
lahf
pushf
adc
and
loop
stos
in
jp
fs
xchg
lods
dec
mov
enter
xchg
or
xor
in
inc
xor
xor
cmp
xchg
xor
jns
dec
loopne
or
orb
cmp
mov
je
aam
pusha
inc
or
pusha
xchg
popa
dec
and
pop
popa
dec
aam
bound
aam
arpl
mov
aam
insb
inc
mov
lock
push
les
mov
push
mov
stc
push
adc
xchg
sub
mov
cmp
das
push
aam
pop
and
dec
aam
cmp
add
call
adc
or
inc
and
mov
test
int
sbb
je
jecxz
orb
cmp
test
cmp
shlb
or
add
adc
add
adcb
movsb
stc
ret
adc
mov
add
test
add
cmp
mov
mov
ss
gs
shlb
push
and
add
ret
and
dec
lds
inc
add
jae
aam
insl
push
stos
sub
js
or
nop
or
add
cmp
mov
cmp
add
inc
push
in
dec
add
dec
xchg
and
in
pop
arpl
push
mov
adcb
inc
adc
pop
jo
sbb
pusha
mov
push
or
hlt
add
insl
dec
inc
adc
sub
dec
cmp
dec
insl
xor
test
movsb
mulb
push
hlt
insb
cmp
xchg
test
nop
xor
es
xor
add
push
pusha
mov
mov
sub
xchg
insb
fsubl
push
gs
cmp
push
frndint
fidivrs
sub
dec
mov
add
fsubl
stc
add
cld
xor
or
test
xchg
nop
sbb
cmp
insl
test
fmull
inc
test
sbb
lods
sub
dec
nop
mov
data16
push
pop
xor
xchg
int3
inc
adc
aam
mov
pop
push
call
xchg
imul
shrl
dec
lea
inc
inc
fmul
inc
stc
and
push
lcall
sub
lret
cmp
mov
shlb
cld
or
dec
mov
xor
inc
rclb
add
xor
cmp
test
dec
rcll
jl
dec
sbb
dec
dec
mov
in
cmp
jns
nop
js
enter
arpl
test
cmp
cmp
gs
sub
inc
dec
insb
lods
cmp
dec
jl
cmp
and
adc
sub
cmp
adc
and
push
push
inc
xor
push
xchg
dec
adc
loop
inc
sub
pop
sub
test
mov
cmp
or
push
and
mov
push
inc
inc
and
xchg
push
sub
jbe
nop
inc
enter
dec
hlt
stc
push
or
or
or
xchg
in
pushw
and
or
dec
nop
or
push
xchg
movsb
repnz
adc
sbb
addr16
adc
push
test
sbb
clc
subl
lss
js
xor
stc
add
and
stc
ret
inc
std
xor
inc
or
inc
dec
aas
xchg
and
cmp
cmp
dec
aaa
xchg
and
inc
and
mov
pop
dec
push
inc
mov
mov
adc
and
dec
add
dec
cmp
pop
and
mov
pop
pop
pop
mov
and
bound
or
mov
test
inc
pop
jno
adc
push
xchg
mov
cmp
push
mov
and
loopne
mov
xchg
lock
cmp
cmp
and
sarb
cltd
clc
or
lcall
push
sar
dec
sub
add
adc
adc
adc
dec
dec
dec
dec
aam
pop
cmp
nop
lods
push
aam
dec
inc
add
lds
and
lcall
test
mov
inc
popf
std
xor
jmp
mov
icebp
lahf
or
mov
mov
dec
sar
popf
adc
mov
and
push
mov
mov
cmp
mov
xchg
adc
stc
push
movsb
push
jl
cmp
movsb
pop
and
push
cmp
or
js
add
mov
movsw
push
sub
cmp
movsl
sub
sub
cmp
xor
sub
sahf
push
jbe
cmpsb
push
push
insb
cmp
movsl
lock
push
pushf
cmp
cmpsl
push
sahf
push
stc
or
mov
mov
test
cmp
mov
push
push
sahf
sbb
mov
insb
dec
clc
xor
sarb
inc
add
or
rcrb
jns
dec
push
push
push
call
push
or
js
add
dec
scas
sahf
sub
push
add
pop
xchg
or
mov
call
sbb
xor
dec
in
jb
cmp
fimuls
cmp
add
hlt
jbe
mov
out
leave
xchg
and
push
add
les
ja
or
inc
push
inc
xchg
mov
jo
xchg
mov
jns
call
mov
adc
sub
insl
dec
inc
jp
adc
repnz
int3
xchg
push
fcoms
outsb
mov
mov
call
jge
insb
mov
mov
or
jnp
pop
out
adc
aam
sub
mov
adc
enter
cmc
or
ss
inc
xchg
adc
add
jmp
xor
or
jno
movsl
and
in
sbb
mov
sbb
cmp
xchg
int3
inc
lods
or
icebp
cs
mov
jl
icebp
jmp
sub
sub
dec
fwait
inc
icebp
repnz
push
mov
mov
adc
add
cmp
sub
repz
lods
cmp
repz
bound
mov
push
fsubr
xchg
repz
icebp
xor
add
push
push
cmp
pop
xchg
jbe
xor
jl
cmp
mov
mov
mov
push
lods
cmp
xor
mov
sub
cmp
sub
push
sbb
push
sbb
sub
add
push
sub
in
sbb
xor
jo
test
fs
and
stos
mov
call
jno
xchg
imul
or
in
cmp
and
pop
dec
jne
test
cld
and
push
clc
jle
and
insb
insl
xor
dec
shlb
cmp
cltd
mov
lods
in
push
movsb
and
out
cmp
xor
adc
cli
adc
lcall
in
jl
push
inc
hlt
xchg
adc
in
add
xchg
inc
jb
sbb
shrb
push
pushf
or
dec
xor
shlb
int3
xchg
adc
rcrb
sbb
xor
dec
add
rol
and
mov
push
jb
call
push
clc
adc
push
inc
push
clc
mov
pushf
adc
fdivrl
es
cmp
and
jmp
adc
rorb
xchg
pop
push
mov
bound
scas
and
pop
dec
inc
pusha
mov
orb
and
adc
loopne
add
adc
xor
pop
mov
xor
sub
cli
adc
orb
jo
out
xchg
stc
dec
lods
mov
js
push
cltd
rcl
dec
add
mov
adc
adc
lock
xchg
sub
adc
pusha
dec
push
adcb
shrb
mov
lcall
xor
sbb
adc
push
and
jp
int3
push
cwtl
lods
mov
mov
inc
jo
pushf
in
dec
test
sbb
insb
and
xor
fwait
pop
xchg
es
inc
fs
sub
test
lods
or
sub
mov
sbb
and
add
negb
and
push
dec
andb
adc
push
je
dec
xorl
nop
or
add
xor
inc
sub
jnp
jns
adc
je
and
das
push
cmp
inc
cmp
cmpb
mov
cwtl
mov
in
mov
movsb
pop
pop
adc
dec
js
jl
stos
and
in
lret
pop
out
cmp
pusha
mov
add
mov
sub
jne
mov
out
fs
mov
hlt
jne
or
dec
frstor
pop
aas
pop
and
je
lret
pop
in
pop
les
xor
pop
jge
mov
fs
or
mulb
lods
fs
js
inc
gs
jbe
gs
cmp
clc
inc
mov
sub
xor
pop
and
jo
sbb
mov
movsb
and
and
out
or
dec
insb
loopne
cmpsb
or
or
fs
mov
ds
sbb
pusha
pushf
lcall
mov
mov
mov
push
sbb
push
cld
cmp
test
in
sti
ficomps
xor
jg
std
test
inc
sar
cmp
cmp
das
lock
push
xor
in
orb
shlb
mov
push
or
add
cmpsl
add
aas
add
xchg
add
int
es
add
dec
adc
add
mov
dec
add
adc
push
adc
cmp
incl
xchg
push
movsb
pop
mov
dec
dec
lea
ret
jae
inc
jo
lock
push
pop
push
out
push
stos
xor
testl
xchg
pop
or
insl
push
and
xchg
or
lea
xchg
push
push
mov
stos
mov
lahf
fs
or
jle
mov
popa
loope
cmp
mov
addb
sub
jg
and
inc
adc
data16
pusha
mov
cmp
add
and
adc
cmpb
pop
idivl
aas
xchg
xor
and
movsl
mov
jg
decl
andb
aas
mov
add
lods
inc
cmp
rolb
xor
lea
and
bound
pop
or
or
pop
inc
cltd
xchg
inc
js
push
and
ljmp
loopne
lods
inc
enter
adc
mov
push
push
pop
in
dec
adc
ds
jo
push
movsb
push
loope
xor
pop
cmp
cmp
push
cwtl
or
mov
aaa
xchg
aas
mov
adc
or
cmp
and
pop
loope
or
or
jnp
or
xchg
pop
sub
or
arpl
loop
push
out
out
and
bound
inc
pop
and
adc
repz
push
add
enter
fbld
add
or
lea
push
call
lds
mov
mov
lods
or
lret
jno
loope
dec
xchg
or
sbb
clc
js
imul
lock
mov
and
sub
sbb
xchg
and
cmp
sbb
out
call
mov
adc
call
sarl
js
sbbb
mov
xor
movsb
push
jno
xchg
pop
dec
sbb
and
call
push
lods
sub
or
inc
pop
xor
xchg
or
or
adc
jg
test
push
add
imul
or
sbb
repz
mov
push
add
psubd
inc
movsl
lea
sti
mov
jmp
push
inc
mov
pop
or
sub
inc
sahf
add
lock
adc
stc
cmp
cld
sbb
or
repnz
rcr
dec
jmp
fdivrs
push
js
mov
lock
or
push
inc
out
jle
out
adc
out
lods
or
loopne
dec
out
pop
xchg
add
clc
jg
rolb
and
loopne
pop
in
movsb
push
inc
add
fisubs
xor
or
sub
addr16
sbb
pop
mov
or
stos
or
pusha
push
mov
add
subb
mov
dec
or
cmc
inc
pop
fisubrs
out
push
adc
xadd
aas
xchg
or
sub
mov
dec
das
mov
lock
loop
dec
ss
pop
mov
mov
popl
mov
sub
add
adc
jo
je
and
movsb
inc
mov
es
out
movsb
jo
push
aam
adc
and
icebp
mov
xor
sbb
xor
movsl
push
push
out
xor
xor
push
push
fisubl
push
shlb
fbld
push
jo
movsl
adc
and
or
out
adc
jg
mov
pmulhuw
jo
pop
mov
and
icebp
jae
pop
or
or
fimuls
pop
push
jo
cmpb
or
lret
out
adc
dec
dec
jo
inc
bound
or
dec
or
movsl
adc
out
test
cld
add
push
lods
push
xchg
rorb
and
in
cmp
add
or
fldt
or
or
or
push
aaa
pushf
and
clc
dec
cwtl
cmp
sub
inc
test
into
mov
or
lock
add
loopne
cld
pop
jmp
cmp
push
test
repz
adc
jle
adc
js
jo,pt
pusha
inc
incb
fmull
jbe
pop
inc
xor
push
sub
dec
xor
mov
dec
inc
cs
hlt
sahf
or
sub
mov
xor
pop
sub
add
cmp
mov
mov
add
and
inc
aas
cmp
or
inc
inc
jo
inc
dec
sti
jnp
icebp
sbbb
decl
js
inc
inc
mov
push
clc
push
addb
inc
jo
xchg
or
mov
imul
jo
negl
push
andb
orb
adc
stos
push
sbb
ret
xchg
pop
stos
or
sub
xchg
cmp
jl
xorl
mov
sub
mov
cmpsl
cmpb
jmp
stos
ljmp
push
dec
sbb
mov
adc
and
pop
jns
gs
inc
jp
pop
push
jo
jb
or
sahf
dec
xor
mov
pushf
clc
sub
nop
andb
jg
jb
push
and
adc
push
dec
addb
dec
std
jo
scas
push
pusha
push
or
icebp
adc
push
cmpsb
adcb
sub
std
cltd
jno
xorb
outsb
mov
divb
or
jmp
test
ja
test
inc
shrb
loopne
xlat
add
je
std
and
adc
adc
inc
loopne
push
rcr
scas
repz
pop
adc
and
add
cmc
dec
adc
je
movsl
or
ja
sub
pop
rcrb
lock
aam
push
and
jmp
int3
les
sub
add
fdivs
iret
and
or
inc
xor
jmp
or
add
xchg
nop
or
pushf
sbb
push
movsl
xor
dec
notb
fs
or
dec
icebp
xchg
loope
rcll
sub
sbb
fs
mov
and
adc
and
mov
inc
mov
xchg
dec
orl
lahf
and
push
sub
mov
js
repnz
pop
cmp
xchg
ja
mov
stc
outsl
xchg
notl
cmc
jae
subb
lock
mull
or
inc
xor
xor
mov
or
and
dec
mov
lods
push
xor
sub
js
adc
mov
jbe,pn
nop
jmp
xchg
sub
sub
push
xchg
push
lock
sub
lcall
cmc
ja
push
fidivl
push
sub
fimull
xchg
push
sub
push
push
inc
add
push
imul
adc
xchg
inc
jmp
add
mov
shlb
pop
jg
adc
leave
stos
jbe
push
movsl
arpl
int
or
in
or
push
js
jmp
clc
stos
xchg
pusha
push
mov
nop
mov
int
notl
jne
inc
or
pop
push
or
dec
clc
jo
sub
add
das
adc
cmp
or
inc
aad
aad
aad
fisubs
push
xchg
and
and
or
cmp
dec
mov
xchg
jp
push
or
or
xor
scas
push
add
or
cmc
popf
mov
aaa
ljmp
jp
cmp
loop
hlt
mov
into
mov
ret
xchg
fs
sub
push
sahf
js
lock
js
or
jecxz
test
cs
lret
pop
xor
sahf
and
inc
pop
test
cmpsl
sub
xchg
sub
push
or
das
add
in
sub
push
leave
into
call
push
mov
idivb
mov
cmp
mov
dec
sub
js
cmp
or
and
lock
sbb
pop
sbb
negl
sbb
movsl
cmp
sbb
scas
shrb
push
roll
inc
loopne
xchg
inc
add
inc
and
into
inc
or
addr16
add
xor
enter
or
dec
orb
dec
rorl
loopne
xchg
inc
push
cmp
setl
adc
push
or
addr16
add
xor
adc
push
rcll
loopne
xchg
inc
push
cmp
pop
pushf
pop
adc
into
pop
or
addr16
add
int3
xor
loopne
test
or
loopne
xchg
inc
push
cmp
xchg
jne
and
jbe
and
jo
inc
and
js
and
or
pusha
mov
daa
lods
or
mov
or
mov
or
mov
stos
or
mov
or
mov
or
mov
stos
or
mov
inc
add
mov
or
mov
or
mov
stos
or
mov
or
mov
or
mov
stos
or
mov
or
mov
xchg
or
mov
or
mov
stos
or
mov
or
mov
or
mov
stos
or
mov
or
mov
or
test
dec
pop
push
push
fimuls
adc
sub
adc
pop
or
xor
adc
mov
add
sub
mov
pop
or
mov
cmpsb
jl
jae
loop
add
int3
cmp
outsb
ss
adc
insb
gs
data16
enter
xor
or
xor
dec
or
xor
dec
insl
sbb
push
jns
jecxz
sbb
xchg
arpl
lretw
cs
jb
push
popa
int3
and
pop
bound
inc
sub
jae
lret
es
inc
push
stc
cltd
xor
popf
inc
adc
pop
data16
lret
sbb
dec
pop
xor
pop
nop
push
push
dec
and
pusha
jae
pop
shrl
xor
sub
mov
cmp
je
xor
int3
push
fwait
xchg
inc
or
adc
cmp
cli
into
in
push
or
sub
movsb
cld
lret
insb
and
fsubl
mov
cmpb
cmpsb
jo
jo
push
xor
and
adc
add
repnz
inc
fs
sbb
jo
jle
scas
xchg
sbb
pop
or
inc
and
sub
dec
stc
and
imul
and
popa
sub
subl
push
cmp
mov
lods
xor
mov
or
xor
movsb
into
xor
adc
rorl
je
jbe
ret
in
lret
bound
cmp
xchg
loopne
dec
cltd
hlt
xchg
js
dec
ret
xchg
insb
loop
push
mov
test
inc
dec
sub
sbb
scas
int3
add
ljmp
insb
sbb
or
in
or
push
add
adc
add
push
pop
push
mov
and
cmp
sub
sbb
adc
and
rolb
cmpsb
add
and
xor
and
cli
fadds
mov
sarb
hlt
pop
les
dec
adc
roll
fsubr
bound
dec
insb
jmp
xor
cld
adc
test
or
out
xor
mov
xchg
mov
mov
adc
sub
inc
aam
sbb
test
and
cmp
adcb
nop
inc
sbb
cmp
dec
adc
add
sbb
cmp
sub
xlat
out
dec
cwtl
enter
mov
sub
mov
xor
scas
adc
and
xor
jmp
adc
into
push
sbb
mov
shlb
loop
and
cltd
cs
and
xchg
int
orb
fs
or
xor
sub
outsb
psubw
cmp
mov
mov
push
lods
dec
mov
ret
adc
mov
adc
fs
lea
or
bound
dec
xchg
mov
and
pop
js
jl
mov
push
sbb
or
enter
or
xor
or
test
lods
jge
adc
dec
pop
mov
repnz
mov
sbb
sub
insb
push
test
in
inc
enter
jno
sub
test
jo
add
sbb
leave
push
add
fsts
mov
popa
push
push
es
fsubl
sub
and
or
and
cmp
enter
jle
adc
mov
fldenv
pop
rorb
push
add
push
mov
mov
push
andb
mov
inc
dec
sub
mov
cwtl
movsl
fs
mov
jmp
mov
sbb
and
jp
pop
lods
dec
fs
mov
aam
dec
fs
add
mov
in
dec
rclb
or
jns
addr16
in
enter
inc
enter
lods
dec
mov
push
addl
inc
comiss
loopne
lock
shrl
dec
push
xchg
mov
les
add
mov
ret
adc
xlat
and
or
mov
cltd
pop
and
and
cwtl
clc
pop
xchg
int
loope
dec
and
xchg
stos
dec
push
sbb
leave
mov
inc
or
inc
cmp
push
or
xchg
fs
and
sbb
dec
cltd
hlt
test
add
pop
xor
fs
insb
cmp
and
fcomps
inc
or
adc
add
xchg
pop
int3
inc
pop
scas
sbb
mov
add
sub
adc
enter
rclb
add
enter
stos
loop
xchg
jb
pop
pushf
sbb
mov
pop
adc
mov
enter
add
ljmp
and
subb
inc
test
jl
mov
lds
sub
adc
cld
fs
call
fs
cli
insb
test
lods
movsb
push
sub
or
jne
sahf
hlt
jns
cmp
mov
add
sub
insl
iret
adc
adc
push
ljmp
and
in
jb
ds
sub
lret
fsts
sbb
pop
add
sbb
add
sbb
stc
call
xlat
pop
mov
pop
in
leave
in
rorb
add
and
mov
arpl
and
xor
sub
imul
add
fildll
mov
xor
adc
pop
js
sbb
or
mov
aaa
sbb
mov
cmp
fdivs
or
xchg
sbb
sbb
adc
pop
dec
addl
mov
rolb
add
pusha
jle
dec
sbb
mov
sarb
pop
add
adc
lea
mov
sub
iret
and
and
mov
add
imul
cmp
pop
cltd
mov
or
mov
lahf
dec
nop
and
js
mov
cmp
test
sub
sbb
lods
movsl
fcomps
sbb
cmpsb
xor
mov
or
enter
orb
push
out
adc
and
fwait
call
sbb
pop
push
cwtl
jl
movsb
in
lock
adc
add
sub
sub
outsl
insb
xor
fildll
ja
cmp
and
and
mov
and
data16
imul
xor
fdivrs
data16
cld
sbb
mov
mov
imul
dec
int3
cltd
fs
jo
jns
push
cmp
or
and
xor
xor
and
imul
adc
aaa
and
sbb
adcl
mov
cs
pusha
cltd
cltd
shlb
and
sub
mov
add
xor
sbb
pushf
cltd
dec
pusha
or
dec
js
aaa
lods
jmp
adc
test
mov
mov
mov
cmp
push
mov
int3
jno
xchg
and
pop
aam
xor
je
rorb
outsl
aam
stc
jmp
dec
call
int3
loope
xchg
js
and
push
mov
pop
sbb
push
jmp
popa
test
mov
sbb
sub
inc
sbb
rol
cltd
pop
adc
push
hlt
push
daa
xor
jge
lods
stc
push
pop
les
int3
sub
mov
inc
adc
mov
mov
movq
in
shlb
loop
adc
push
pushf
dec
or
cmp
sub
and
ja
lock
xchg
xor
jae
aad
sbb
mov
adc
fidivl
cwtl
cmp
mov
sha256rnds2
inc
imul
push
sub
pop
rolb
fidivl
mov
mov
mov
inc
popa
jns
sbb
push
gs
imul
dec
dec
jb
push
sbb
inc
dec
jbe
jo
push
pop
adc
inc
mov
pop
add
xchg
sub
inc
jo
push
imul
mov
sbb
xchg
gs
popf
cmc
adc
add
fdiv
xor
popa
bound
inc
imul
add
push
imul
mov
lea
rorl
push
ljmp
lds
xor
pop
dec
fs
leave
dec
push
lahf
pop
outsb
pop
test
faddl
cmp
xchg
xlat
adc
dec
sub
mov
push
fstps
pop
sbb
dec
mov
or
iret
add
inc
inc
xchg
cmpsb
xchg
pusha
jmp
pop
cld
mov
sbb
mov
xchg
xlat
cmp
loopne
cmp
cs
xchg
push
push
loope
xchg
fsubrs
cmp
scas
xchg
cmp
or
add
pop
dec
imul
inc
and
imul
rcrl
arpl
enter
inc
mov
jb
divl
in
push
pusha
mov
xlat
js
pop
jb
call
in
pop
cli
loop
mov
pusha
iret
nop
jmp
push
lods
addb
lret
pushf
jbe
xchg
frstor
sbb
sub
inc
xor
mov
sub
sub
data16
loopne
adc
dec
cmpsb
addr16
adc
or
aad
adc
call
and
mov
pop
add
mov
push
or
test
sbb
push
jno
cli
sub
repnz
les
imull
sub
add
rorb
push
xorl
xor
inc
sub
inc
aad
lret
bound
or
lretw
orl
xor
xor
sub
loope
pop
aam
dec
ss
inc
clc
sarl
or
xor
push
jl
dec
mov
test
cmp
push
pop
sub
mov
dec
pop
hlt
jbe
adc
and
js
adc
fbld
jo
adc
push
and
subl
push
pushf
jae
ret
xor
jno
inc
add
jae
outsl
cmp
sbb
clc
sbb
xor
icebp
adc
dec
xor
or
and
daa
mov
dec
test
lret
push
jne
jae
push
sub
enter
arpl
inc
aam
jecxz
stc
jbe
bound
xor
mov
inc
mov
sbb
cmp
mov
sub
push
xor
mov
adc
mov
xor
sbb
dec
nop
inc
and
mov
lcall
or
sbb
andb
sbb
jo
pop
mov
sub
dec
pop
sahf
cmp
sub
int
cs
adc
adcl
gs
push
push
add
xchg
and
cmp
daa
out
xchg
mov
push
or
sub
outsb
and
cmp
sub
pushf
call
test
es
enter
add
and
je
fldenv
xor
shlb
sub
insb
je
rcll
and
mov
adc
add
adc
in
adc
cmp
test
adc
test
push
sti
mov
mov
or
pop
pop
fidivrl
push
xchg
add
addl
test
xor
adc
les
jo
test
mov
ret
shlb
xchg
mov
call
outsl
xor
lret
add
sbb
add
fs
in
add
ja
and
lret
xchg
dec
dec
inc
imul
aam
test
sahf
and
pusha
clc
scas
sbb
loope
or
cmpsb
or
mov
pop
es
cmp
insl
sub
mov
pop
xlat
shlb
adc
les
xor
inc
nop
rorb
mov
adc
sbb
cmpb
push
xchg
enter
and
add
inc
inc
out
or
fs
outsb
sbb
hlt
fsubl
movsl
or
jne
xor
cltd
mov
lods
inc
imul
jo
test
mov
dec
sbb
dec
mov
les
and
xor
pop
cld
lods
sub
mov
sbb
sbb
cwtl
scas
in
xor
dec
test
inc
mov
adc
add
or
add
sbb
cmp
repnz
movsb
roll
and
movl
push
pop
xor
xor
clc
sub
sub
imul
or
sbb
and
mov
sbb
xor
jl
test
jl
dec
fcoml
and
pop
scas
cmp
inc
inc
imul
and
movsb
pop
fadds
xor
lea
adc
pop
movsb
adc
dec
loope
dec
jl
mov
mov
push
jge
or
and
std
cmp
xor
daa
jne
sbb
adcb
sbb
xchg
stos
lods
pop
mov
sub
jmp
or
fdivrl
faddl
add
cmpsb
stc
in
popa
jns
js
push
sbb
push
or
subb
test
stc
adc
popa
js
mov
mov
lods
push
aam
push
xchg
sbb
clc
jno
sbb
or
pop
and
int3
inc
popf
inc
popf
xlat
stos
cmp
xchg
test
push
or
lods
and
push
xchg
push
or
lret
clc
int3
sub
jge
aam
stos
into
and
adc
bound
cmp
dec
inc
inc
insb
inc
cs
sbb
test
mov
in
sbb
pop
push
fnstcw
insb
ret
inc
outsb
js
sub
sbb
or
xor
rcr
adc
sbb
sbb
sub
push
push
out
xor
pusha
push
push
gs
dec
xor
pop
cmp
push
sbb
adc
pop
inc
cs
imul
or
push
jb
adc
fcom
or
sbb
mov
insb
dec
pop
mov
add
repz
adc
movsb
ja
xor
hlt
push
rorb
sub
or
inc
cmovb
or
push
fs
cmc
test
or
pop
popf
jne
mov
pop
sub
ret
int
inc
sbb
rcll
pop
sbb
rorb
cmpsb
dec
aam
les
scas
lods
xchg
insb
dec
dec
adc
dec
jmp
pop
gs
dec
xorb
and
inc
adc
bound
push
and
mov
push
fdivrs
movsb
xor
mov
js
sbb
mov
sbb
and
sbb
popa
jmp
xchg
imul
sbb
fdivrl
xor
jne
jae
mov
sub
lods
loop
and
fsubrs
pop
jb
outsb
jae
aam
push
in
mov
daa
testb
sub
pop
cmp
sbb
in
or
inc
fs
loope
push
xor
inc
sbb
lods
dec
xor
dec
dec
push
pop
xor
sub
sub
ficompl
jp
push
mov
cs
fisubrs
mov
or
inc
in
jo
pop
push
sbbl
mov
pop
dec
pop
jns
sbb
xor
cld
mov
push
push
adc
add
push
push
test
xor
sub
inc
sub
xchg
cwtl
lds
subb
xchg
int3
mov
ret
inc
xchg
test
or
push
sbbl
sbb
push
loope
sbb
sbb
mov
and
outsl
push
xor
sbb
adc
jbe
xor
sbb
and
es
xor
sub
mov
jnp
xor
lods
xor
and
and
cmp
sub
cmp
xor
sbb
or
xor
mov
sub
adc
enter
les
mov
scas
inc
fisubs
adc
stc
mov
sub
sbb
xor
movsb
jmp
jae
pushf
scas
mov
sub
popf
pop
push
xor
lods
nop
imul
or
int3
push
xor
push
mov
cwtl
sbb
or
push
push
dec
sbb
push
xor
sbb
loopne
nop
enter
xor
and
aad
xor
pop
or
daa
lcall
or
inc
popf
sbb
mov
rclb
loope
inc
popf
ja
jae
clc
mov
mov
inc
and
repz
jbe
pop
xchg
dec
lods
rolb
dec
daa
fbstp
push
test
popf
jne
sub
enter
lods
gs
jb
sbb
jl
bound
ljmp
mov
jae
xor
fdivrl
and
dec
add
iret
mov
call
mov
adc
test
inc
pop
xor
inc
push
loope
dec
frstor
adc
stos
mov
lods
pop
fs
and
std
dec
adc
xchg
push
sub
test
or
and
je
inc
pop
pop
fisubs
and
or
lods
dec
and
arpl
gs
xchg
lcall
sarb
sbb
pop
repz
jmp
lret
dec
mov
into
test
push
push
jae
push
in
jo
ret
mov
jo
outsb
cmpsb
pushf
and
adc
push
pushf
pop
arpl
outsb
sub
dec
jl
mov
pop
adc
pop
aas
xchg
fldt
or
repz
icebp
jl
inc
adc
sbb
pop
mov
adc
icebp
mov
enter
mov
inc
mov
adc
fwait
add
sbb
push
push
gs
mov
pop
and
lock
jno
xor
sub
cmp
add
jbe
stos
jl,pt
and
push
jns
es
dec
sbb
mov
js
daa
stos
leave
mov
int
push
and
and
aam
cld
loope
sbb
mov
clc
insb
cmpsl
sub
add
aas
add
arpl
sarb
adc
jne
dec
cmp
jno
or
xchg
xor
add
dec
xchg
adc
sbb
lea
loop
mov
test
mov
cmp
cld
or
outsb
loopne
dec
gs
test
adc
loopne
sbb
pushf
or
dec
arpl
xor
stos
sbb
or
mov
inc
mov
mov
mov
mov
inc
mov
push
push
fsubl
test
sub
jb
or
loop
or
adc
mov
cmp
lock
insl
inc
fwait
in
adc
inc
dec
aas
adc
adc
orb
cmp
inc
sub
call
in
mov
adc
int3
iret
sub
adc
or
cli
lahf
sub
rclb
pusha
and
inc
dec
nop
xchg
sub
aam
movsb
adc
or
insb
dec
shlb
sbb
jecxz
popa
push
js
adc
add
and
fwait
js
sbb
sbb
out
adc
fs
mov
nop
push
test
inc
xor
sub
sub
pop
push
sbb
orl
inc
lahf
push
mov
mov
dec
addl
pusha
sbb
icebp
inc
pop
lret
lods
enter
movsb
pushf
es
mov
sbb
xchg
aam
xor
xor
faddl
sub
xchg
or
dec
dec
mov
pushf
xchg
mov
sbb
dec
jno
mov
pop
jl
hlt
mov
inc
push
and
dec
and
push
or
in
cmp
adc
xor
pop
and
sub
pop
sbb
and
sub
dec
adc
push
inc
in
adc
inc
mov
mov
mov
call
mov
push
inc
sarb
or
mov
pop
sbb
mov
lea
inc
in
jg
sub
add
xlat
push
push
sub
in
inc
xchg
push
sbb
pop
cltd
adc
stos
xchg
adc
int3
inc
dec
push
je
dec
push
movb
scas
adc
jl
orb
pop
inc
and
dec
dec
imul
sbbb
adc
ds
cmp
adc
pusha
clc
inc
fcompl
push
insl
movsl
sub
jecxz
inc
push
adcb
pop
nop
nop
inc
xchg
pop
mov
cltd
rorl
hlt
jnp
push
mov
xor
sbb
je
movsl
pop
adc
push
sbb
in
or
inc
jb
dec
or
xor
sbb
inc
push
push
popa
hlt
inc
int
sub
push
paddsb
leave
cmpl
and
aam
or
jbe
pop
imul
data16
or
xor
jnp
mov
sahf
push
mov
aam
shll
cwtl
mov
test
sub
push
jns
and
adc
ljmp
js
cld
adc
push
sub
sbb
dec
rcrl
icebp
add
or
pop
adc
xchg
adc
loope
and
sbb
and
ja
and
adc
repnz
adc
test
and
movsb
daa
imul
sbb
mov
ljmp
pop
test
jb
in
pop
xor
rcrl
cld
imul
cld
push
xor
aam
and
nop
cld
sub
fmull
inc
xor
cld
test
xor
pop
jne
mov
push
mov
sbb
les
xor
data16
cmp
xor
add
aad
xor
or
cmp
add
inc
adc
sbb
dec
pop
loope
adc
adc
push
adc
and
mov
sbb
repz
outsl
xor
cld
xchg
mov
sbb
pushf
xchg
dec
jae
push
xor
sub
dec
and
sbb
push
inc
cwtl
mov
sbb
stc
sub
fsubs
fcoms
dec
push
adc
fs
in
sub
iret
movsl
loop
lds
push
push
addr16
scas
les
jecxz
push
adc
xchg
orb
dec
cwtl
arpl
imul
or
cmc
xchg
mov
push
adc
or
xchg
inc
scas
jo
mov
sub
mov
dec
inc
mov
movsb
sbb
inc
adc
dec
into
push
inc
push
inc
and
test
and
or
test
sbb
dec
inc
out
lea
int3
and
ljmp
mov
enter
test
mov
movsb
adc
mov
test
lcall
cmp
adc
inc
sub
cltd
or
loopne
push
jno
sub
sub
sub
dec
and
mov
dec
mul
mov
insl
popf
jg
mov
aad
inc
dec
inc
and
xor
inc
outsl
sub
dec
push
adc
loopne
adc
xchg
pop
das
in
sub
inc
clc
mov
or
nop
call
xchg
lock
push
insl
fdivl
or
xor
mov
adc
xchg
faddl
cld
pop
push
and
sbb
adc
pop
and
ret
sub
xchg
fsubrs
inc
sbb
sub
jl
sub
js
jb
nop
lcall
jno
inc
pop
dec
mov
push
pusha
adc
sub
xchg
push
mov
and
mov
cltd
cmp
push
sub
dec
fmuls
push
push
inc
popf
dec
adc
add
pop
push
adc
push
xlat
mov
sbb
sbb
scas
mov
aam
daa
xchg
int3
sub
dec
xchg
dec
jge
mov
sbb
divb
push
outsl
sbb
adc
sahf
inc
mov
lea
shl
push
cmpsb
jecxz
cmp
mov
push
je
dec
int3
call
das
cmp
imul
lods
sbb
shr
mov
sbb
movsb
sbb
ss
push
ja
arpl
pusha
das
cwtl
imul
sub
sub
and
popa
fnsave
and
sbb
sbb
pop
lods
dec
sbb
test
mov
pop
jp
dec
adc
xor
fnstcw
icebp
adc
push
adc
mov
stc
adc
adc
or
xor
cmc
push
push
lods
mov
dec
jo
and
test
mov
jae
sub
movsl
scas
loopne
cmpsl
test
mov
push
or
add
push
popa
lret
mov
subb
and
adc
sub
push
jb
daa
sbb
pop
les
scas
jg
sbb
and
daa
xlat
pop
iret
mov
enter
mov
and
dec
inc
test
fs
fcompl
mov
mov
jo
add
sbb
inc
sub
popf
jbe
cld
sbb
pop
inc
ljmp
add
fs
jmp
cmpl
and
inc
and
pushf
pop
inc
dec
jg
cltd
nop
and
test
mov
stos
adc
push
sbb
addb
adc
inc
pusha
mov
stos
sahf
xor
enter
mov
sbb
iret
mov
dec
sub
cld
rcrl
sub
mov
add
aad
jno
or
push
adc
sub
inc
adc
push
and
cld
adc
inc
lods
add
cmpsb
dec
xor
and
aam
and
dec
fmul
in
bound
test
movsb
leave
addr16
adc
and
mov
cld
xchg
and
dec
imul
inc
scas
add
and
adc
or
fs
xorl
lods
bound
mov
test
add
mov
push
je
and
enter
inc
loopne
ret
aad
xor
pushf
push
or
dec
push
and
sub
sbb
pop
xor
sahf
aam
adc
dec
pop
inc
test
and
add
inc
jne
or
xchg
into
push
jo
cmp
xor
and
xlat
mov
inc
cmp
leave
xor
test
jno
xchg
bnd
daa
sbb
mov
add
lods
xchg
dec
or
sbb
gs
xor
or
mov
jbe
cli
sbb
inc
dec
cld
cld
ret
dec
scas
int
and
push
xor
mov
dec
mov
dec
sbb
dec
mov
sub
cli
aas
je
mov
dec
out
cmp
xor
cs
ljmp
xor
xor
sbb
xor
sbb
clc
pop
nop
inc
push
je
xor
jb
pop
bound
daa
je
adc
and
and
adcb
push
je
adc
hlt
and
push
adc
jl
test
jmp
mov
and
adcb
sbb
orl
adc
adc
adc
push
adc
les
and
aas
and
and
inc
daa
add
and
or
test
inc
rclb
adc
jle
push
or
adc
test
movsb
adc
repnz
push
push
mov
push
push
push
adc
and
xor
adc
add
adcl
mov
inc
push
dec
and
sub
xchg
xor
and
xlat
mov
arpl
or
inc
andb
adc
sbb
aam
xchg
dec
ljmp
lcall
data16
sbb
movsb
xlat
ret
jo
imul
xchg
jo
jae
adc
jp
jmp
mov
or
sub
sbb
adc
dec
sahf
pusha
cmpsl
mov
mov
sbb
or
gs
xchg
pusha
xor
adc
cli
sub
sbb
fadds
dec
repz
sbb
and
insl
sbb
or
adcl
mov
sbb
pushf
and
inc
mov
adc
and
leave
imul
pop
xor
and
iret
dec
mov
leave
jle
adc
dec
daa
inc
push
js
pop
negb
je
cld
or
movsb
jo
sub
push
jns
daa
jge
and
ss
pop
dec
andb
dec
jb
pop
or
dec
insl
push
jno
idiv
push
ret
gs
push
fiadds
push
sbb
mov
jnp
adc
and
bnd
lds
cmp
daa
arpl
mov
xor
jle
popf
fnsave
pop
jp
push
sbb
mov
jle
stos
push
mov
daa
mov
or
lcall
dec
jg
pop
xor
scas
stc
cmp
pusha
adc
jle
lret
rorb
mov
jno
imul
xchg
pop
mov
es
outsl
lcallw
jl
inc
dec
stos
in
clc
hlt
mov
push
push
mov
mov
insl
cmp
pop
mov
cs
fdiv
inc
pop
jns
xchg
cs
and
paddsw
cmp
out
enter
mov
push
cmp
add
jne
shrl
and
dec
sbb
inc
or
and
or
mov
sub
sbb
test
jg
dec
sub
pushf
adc
sbb
cmp
sub
xchg
enter
out
mov
and
mov
les
repz
lods
xor
inc
sbb
scas
mov
shrb
leave
subb
sub
ficomps
xchg
adc
adc
das
rcr
mov
add
or
aaa
sbb
or
enter
jae
lds
and
or
dec
mov
paddsw
pop
jns
jp
sub
sub
pop
jns
push
popf
sub
sub
jge
test
sub
xlat
adc
jge
test
sub
xlat
adc
jge
test
sub
xlat
adc
jg
sub
sub
std
xchg
sub
sub
jg
sub
sub
std
xchg
sub
sub
nop
cmc
cmp
daa
adc
shlb
and
lcall
loopne
je
bound
add
mov
mov
mov
mov
call
mov
out
xor
sti
push
shl
movsl
add
xchg
cmpb
pop
lods
adc
repnz
pop
test
lret
mov
jb
sub
pop
cmpsl
sub
lods
sub
roll
cs
cmp
cmp
and
cmpsl
sub
mov
call
cli
popf
sub
or
nop
leave
or
out
mov
sub
or
jne
inc
or
push
mov
adc
adc
inc
push
adc
or
jbe
adc
adc
adc
add
add
dec
add
test
cwtl
dec
repz
aam
call
dec
fs
jecxz
and
movsb
mov
cs
daa
cld
push
sbb
cmp
push
daa
je
xchg
or
jne
mov
cli
mov
mov
sub
add
in
pop
xchg
jb
repnz
sub
xchg
xchg
adc
push
sub
push
jo
dec
sub
fidivl
mov
ds
mov
jle
dec
sti
ds
sub
and
mov
xchg
xchg
test
dec
pop
jo
sub
std
icebp
add
sub
jo
adc
pop
movsl
cmp
pop
adc
xchg
mov
xchg
dec
and
test
mov
adc
xor
ljmp
sub
pop
cmpsl
sub
movsb
sub
rolb
lret
xchg
movsb
jb
sub
pop
cmpsl
sub
out
movsl
adc
cmp
clc
mov
enter
inc
cmp
push
sbb
data16
test
mov
std
dec
sub
jmp
sub
jmp
sub
mov
pop
or
add
sbb
popf
push
dec
adc
sub
inc
xchg
test
shlb
das
movsb
loop
pop
in
das
leave
fwait
pop
add
pop
or
je
xchg
movsb
in
js
cld
inc
jnp
popf
pop
lods
sub
sub
push
sub
mov
sub
add
dec
mov
sub
pop
jle
or
lods
dec
sub
sub
sub
mov
sub
or
nop
mov
sub
movd
sub
push
sub
mov
mov
jns
push
xchg
sub
pop
js
sarb
mov
dec
into
and
mov
clc
test
test
adc
rcr
cld
outsl
call
pop
and
xchg
mov
cld
jl
mov
iret
call
paddq
jmp
sub
dec
sub
jmp
sub
or
scas
xor
cld
movsb
fldl
je
dec
jecxz
stc
pop
sub
push
movsb
cmp
scas
sub
push
push
les
enter
dec
mov
cmpsl
inc
loop
js
test
cmp
pop
and
sub
sbb
xor
insb
sbb
sbb
xchg
sbb
sbb
or
cmp
pop
mov
xor
outsl
int
outsl
xchg
mov
sbb
xor
ja
rol
ds
push
or
jle
call
xchg
or
lods
js
pusha
jo
xor
jo
dec
sbb
aam
lods
xor
dec
sbb
adc
xchg
cld
mov
movsl
scas
mov
das
add
mov
mov
adc
sub
inc
dec
xor
mov
and
lahf
out
add
sub
sub
icebp
cltd
ja
push
sub
sbb
sub
test
sahf
negb
push
sub
sbb
sub
in
negb
push
sub
sbb
sub
in
mov
clc
and
push
xor
mov
in
xor
in
xor
jo
in
push
cmp
ret
aam
add
pop
and
pushf
rcrb
inc
and
gs
sub
and
js
adc
mov
bound
and
cltd
test
push
cmp
cmp
add
add
loop
sbb
outsl
aad
mov
sbb
or
mov
push
add
enter
les
cmp
push
test
add
and
cltd
cltd
js
mov
ljmp
fcompl
adc
and
push
lcall
push
sub
test
pop
xor
push
inc
or
or
insl
xor
push
push
test
test
or
mov
movsl
and
xor
mov
jns
cli
loop
out
lret
ss
adc
mov
enter
loop
xchg
or
pusha
and
inc
je
cmpsb
test
enter
jb
jbe
push
sti
test
or
jns
rorl
mov
push
mov
out
loopne
xchg
mov
push
nop
or
int3
aaa
pop
xchg
call
imul
dec
sub
pop
jae
ret
or
push
adc
mov
dec
fidivl
f2xm1
repnz
adc
lea
or
rorb
repnz
pop
sbb
mov
ds
adc
jl
add
fwait
cwtl
mov
stc
adc
in
jnp
adc
adc
outsb
sbb
dec
movsb
cwtl
faddl
enter
jb
push
inc
das
mov
ds
push
adc
fidivl
fsts
or
mov
enter
nop
adc
sbb
cmpb
pusha
or
jns
add
and
adc
int
ds
adc
movsl
shrb
push
mov
shlb
cwtl
sub
fsub
pop
dec
sbb
cwtl
sahf
pop
fcomps
xchg
aas
hlt
int3
adc
xchg
loopne
sbb
push
popa
test
pop
dec
jbe
sub
sbb
repnz
stos
sbb
xchg
sbb
sub
cmp
cmp
inc
push
enter
ja
jns
pop
js
pop
in
xor
cmp
js
jo
and
mov
loopne
cltd
cmp
movlps
sbb
mov
out
xchg
mul
push
and
enter
and
sbb
in
loop
mov
mov
adc
negb
stc
ss
sub
jl
or
loopne
loopne
test
insb
xchg
test
nop
mov
enter
lea
mov
pusha
enter
mov
jns
sbb
and
inc
sub
mov
mov
fnstenv
adc
mov
in
insb
mov
cmp
sub
mov
and
sub
movl
lods
xchg
pop
sub
je
xor
out
imul
and
adc
sub
push
adc
and
push
sub
enter
add
cltd
push
adc
mov
dec
dec
test
xor
push
test
enter
pop
je
nop
sub
and
fstl
and
cmp
addb
je
xchg
das
mov
mov
ret
adc
adc
in
dec
add
loopne,pt
shll
pop
mov
xor
hlt
xor
test
inc
push
pushf
pop
mov
push
pop
fsubrl
push
and
xor
and
sbb
rorl
sub
inc
or
adc
mov
aam
adc
icebp
repnz
enter
pop
lods
repnz
stos
lods
insb
jb
push
xor
and
mov
adc
popa
cmp
adc
inc
dec
lahf
sub
sbb
push
xor
mov
add
jns
dec
les
sbb
js
fmuls
ds
dec
nop
jecxz
in
lock
test
sbb
xor
js
lds
nop
cmp
lcall
je
adcb
ss
and
inc
in
aas
test
dec
je
and
jl
int3
add
pop
aaa
xlat
xchg
or
mov
adc
and
dec
or
or
mov
adc
jno
mov
psubb
or
inc
sbb
mov
adc
and
dec
sbb
inc
and
mov
adc
and
dec
and
inc
sub
mov
adc
and
dec
sub
inc
xor
mov
adc
and
dec
xor
cmpb
push
cwtl
mov
lock
adc
and
dec
mov
int3
fs
dec
in
cld
or
subl
jl
xchg
and
or
or
cs
sub
rorb
or
and
test
mov
and
inc
or
and
or
test
mov
jle
outsb
adc
inc
or
leave
xor
adcb
and
add
mov
int3
mov
sbbl
pop
and
hlt
mov
frstor
nop
pop
cmp
adc
xchg
pop
mov
or
rcll
and
or
adc
fidivs
andb
and
fmull
xor
add
inc
and
or
mov
adc
rorl
movsl
in
fmul
pusha
daa
dec
lds
cmp
cmc
dec
loop
bound
jl
pop
rcll
xor
sbb
insb
js
xchg
and
loop
jecxz
adc
repnz
push
sbb
lods
cmp
add
movsb
inc
xchg
adcb
pop
push
push
adc
or
pop
pop
mov
add
repnz
xchg
push
repnz
sbb
fwait
pop
cmc
xchg
mov
mov
gs
xor
sarb
mov
adc
rcrb
jl
or
enter
or
or
shlb
jns
or
je
test
mov
push
inc
mov
xchg
sub
or
nop
xor
jl
or
adc
pop
push
cmp
cmp
sahf
js
jge
enter
cmp
popf
xchg
nop
lods
cmp
jle
lret
dec
add
cmp
nop
push
cmp
jg
iret
sub
adc
test
insb
addb
sub
adc
addb
inc
adc
mov
and
aam
in
and
cmp
push
inc
in
test
pusha
lods
js
adc
cmpsl
addr16
fs
jb
push
pop
jmp
lods
pop
lods
cmp
pop
les
bound
dec
cli
and
dec
or
imul
jecxz
inc
add
dec
test
in
cmpb
adc
xor
enter
and
inc
aam
xchg
ja
fs
jae
or
adc
push
push
dec
xor
test
dec
int3
xchg
fsubr
mov
pop
jecxz
and
cld
mov
int3
je
out
xor
or
jae
adc
mov
das
gs
xor
mov
mov
sbb
ret
test
sub
cmp
adc
or
xchg
enter
adc
repnz
xchg
je
dec
cmp
loopne
mov
call
xchg
cmp
sub
popf
xor
lret
xchg
dec
int3
inc
add
enter
add
inc
sbb
inc
in
jb
sarb
or
leave
lds
movsl
in
adc
add
inc
cmp
mov
add
push
cmp
push
and
nop
inc
repnz
jae
in
jb
push
push
lock
test
xchg
cmp
adc
addr16
cmp
or
inc
cmp
adc
sahf
les
cmp
or
inc
sbb
xchg
js
push
lret
adc
dec
jecxz
jecxz
orb
xor
test
sub
sub
mov
sbb
adc
xchg
sub
in
push
xchg
je
cmp
pop
cmp
sete
jns
inc
inc
les
sahf
aam
or
rclb
jb
mov
icebp
into
movsb
inc
xchg
shl
jb
sbb
mov
jns
push
leave
adc
sub
rclb
xor
mov
dec
adc
push
cmp
test
jl
fiaddl
adc
xor
pop
push
or
xor
or
addb
in
adc
xor
sub
inc
and
dec
pusha
xchg
jo
test
mov
add
dec
dec
adc
xor
or
or
mov
das
lock
push
push
pop
out
int3
enter
jp
mov
les
cwtl
push
in
rcl
cmp
add
cmp
dec
loop
int3
das
and
pop
dec
sti
push
insl
js
lcall
push
add
xor
adc
mov
ds
push
testb
dec
clc
xchg
enter
sub
mov
sub
dec
sbb
sub
push
nop
sbb
fidivrl
lock
cmp
push
in
div
push
cmp
pop
in
xor
sbb
xchg
or
and
xchg
dec
enter
jecxz
inc
or
inc
push
and
in
jb
cmp
rorl
pop
enter
xor
push
inc
sbb
aad
insb
mov
fs
and
push
xor
insb
push
xchg
pop
insl
adc
push
lods
jno
jge
xchg
xor
adc
repnz
cmp
sarl
jg
arpl
pop
xor
inc
xor
sbb
enter
adc
jl
adc
sbb
inc
mov
es
hlt
js
sbb
pop
xor
xchg
fcoms
push
sbb
jmp
imul
cmp
movlps
sub
jmp
in
outsl
and
adc
cmpsl
in
cmp
fwait
nop
in
imul
mov
sbb
jne
inc
xchg
lret
cmp
add
rcl
push
subb
add
xorl
xor
loop
mov
add
in
add
or
jne
fsub
std
jo
pop
xchg
xlat
or
jns
adc
pop
jo
xor
nop
sbb
enter
arpl
sbb
rcl
xor
sub
popf
mov
cmp
mov
hlt
lcall
les
dec
in
lods
adc
imul
inc
or
or
je
mov
mov
imul
imul
mov
sub
and
mov
xchg
insb
stos
bound
dec
mov
mov
mov
js
push
xor
orb
and
fldenv
push
and
rolb
xor
lods
in
and
repnz
adc
addr16
or
popf
mov
mov
xor
mov
mov
push
inc
aaa
and
test
add
cmp
cs
test
push
xchg
mov
das
in
jl
pop
nop
pop
les
inc
add
clc
sbb
jb
cmp
push
push
add
or
cmpsb
cmp
xor
push
push
lahf
popf
mov
xor
or
or
cmp
sbb
xchg
dec
sub
cmp
in
mull
xor
scas
cmp
or
mov
mov
je
fs
dec
insl
in
cmp
mov
lods
push
push
and
or
shr
out
inc
jns
push
aam
and
fs
jl
stc
add
cltd
or
and
pop
int3
leave
je
or
nop
and
dec
or
cmp
and
mov
dec
sbb
or
stos
mov
dec
popf
xor
inc
fs
xchg
data16
dec
cld
inc
push
les
hlt
mov
dec
aam
mov
fstpl
mov
insl
xchg
inc
mov
and
loop
loop
sbb
popa
dec
inc
pop
cmp
pop
stc
sub
dec
les
add
dec
pop
mov
push
sub
loopne
dec
jl
mov
enter
icebp
dec
popa
iret
cmp
clc
lret
test
or
pop
jmp
and
xor
pop
and
adc
push
mov
fsubrs
call
or
sbb
dec
test
mov
adc
push
jecxz
cmp
jns
push
xor
xchg
jp
mov
sbb
loop
sar
sub
sub
jo
push
and
push
mov
rcrl
subb
adcb
repnz
sbbb
or
rclb
sbb
xchg
cmp
js
or
xchg
call
mov
cwtl
cmp
mov
aad
xchg
sub
and
sbb
call
cwtl
jge
lret
stos
cmpsb
pusha
inc
cltd
or
cltd
dec
mov
in
mov
jl
push
in
call
lret
jbe
enter
out
nop
push
int3
add
scas
rolb
inc
jecxz
mov
cmp
rorl
and
mov
push
dec
lret
push
je
mov
jno
pop
dec
fwait
or
jl
fnsave
movlhps
loop
sub
and
pushf
pusha
adc
mov
shlb
out
push
mov
inc
and
test
sbb
sub
xchg
movsb
rclb
or
lret
fs
xor
stc
inc
or
cmp
add
cmpsl
call
push
in
and
push
test
rclb
or
sbb
loopne
fwait
add
adc
push
inc
mov
out
aaa
adc
cld
pop
push
insb
loop
push
dec
mov
jmp
lret
xor
dec
cmp
int3
movsl
cmpsl
hlt
loopne
sbb
push
hlt
or
inc
loopne
and
add
xchg
cmpsl
fcoml
sub
jo
test
or
je
mov
pop
mov
adc
adc
and
xor
push
js
xchg
adc
and
push
mov
cwtl
cltd
enter
inc
jl
jno
jp
add
or
js
shlb
cs
and
call
sub
cmp
cs
test
shlb
xchg
sub
mov
mov
in
cmp
mov
jle
sub
add
out
cmp
and
pop
add
and
mov
out
fs
add
inc
inc
and
adc
adc
and
fs
cmp
xchg
adc
mov
push
xor
cltd
cmp
mov
pop
push
popf
lock
or
jns
dec
mov
or
or
cmp
or
or
dec
push
inc
inc
mov
outsl
pop
nop
or
jge
fs
cmp
pushf
cmp
dec
aad
cmp
inc
jl
or
jge
clc
jo
lock
fwait
int3
mov
jmp
xor
inc
inc
push
mov
call
xchg
pop
mov
or
sub
aas
test
push
pop
xor
mov
mov
and
lock
and
test
dec
or
adc
pusha
or
hlt
imul
dec
mov
cmp
test
test
jb
int
nop
mov
and
jg
pusha
mov
scas
push
add
ss
movsb
or
test
mov
jl
pop
mov
and
mov
jl
xchg
and
jno
roll
fyl2x
test
xchg
mov
and
aas
nop
in
stos
and
in
xor
out
loop
and
mov
les
movsl
fsub
in
iret
sub
or
fsubrs
int3
fsubl
cld
lret
dec
fs
or
insb
xchg
or
nop
stos
icebp
loop
mov
and
dec
fcmovbe
sahf
mov
addb
cmpsl
dec
sub
push
dec
or
pusha
jmp
adc
aam
std
sbb
dec
push
lods
xchg
test
push
mov
dec
mov
cltd
dec
shrb
xchg
in
lods
dec
push
xchg
and
leave
cmp
or
frstor
jecxz
xchg
hlt
mov
mov
dec
cmp
in
add
push
imul
andb
mov
mov
and
add
ss
sbb
mov
std
pop
insb
sub
cmp
aaa
jnp
add
add
fs
add
xchg
insl
in
add
add
push
stc
pop
icebp
sbb
sub
push
mov
aam
pop
cld
cmp
test
xor
pop
mov
mov
test
add
popa
cmp
or
mov
sub
push
dec
lods
iret
hlt
xchg
in
je
hlt
or
add
fnsave
aad
mov
or
jl
daa
or
lds
xor
mov
xor
add
pop
or
data16
sub
sub
push
sub
add
xchg
adc
xor
enter
xor
fs
sub
ror
fs
sub
xchg
and
aas
or
test
fwait
das
nop
and
or
mov
or
or
xchg
loop
jo
loop
inc
or
sub
or
pop
insl
or
repnz
ficompl
add
xor
xor
or
pusha
push
pop
cmp
xchg
xor
sub
xchg
adc
mov
adc
adc
in
sub
xchg
adc
inc
adc
dec
adc
jle
pusha
nop
push
enter
or
xchg
xor
and
adc
insl
insb
cs
loop
adc
xchg
icebp
fs
or
test
sbb
enter
or
xchg
jbe
jno
or
test
pop
sub
leave
icebp
mov
fs
ror
sbb
xchg
xor
loop
aas
lods
mov
jl
js
test
mov
pushf
cs
leave
les
mov
cld
in
adc
push
and
or
leave
sbb
out
fs
mov
shlb
repz
call
pop
or
mov
lock
inc
and
fdivrs
mov
bound
test
xchg
pusha
daa
nop
mov
lock
adc
sahf
mov
mov
gs
pop
shrb
jns
js
pop
jecxz
mov
out
mov
add
xor
mov
mov
xchg
stc
insb
mov
div
mov
adc
loop
add
popa
jp
jnp
les
xor
lods
pop
test
mov
or
movsl
pusha
fs
js
or
push
pop
insb
scas
cmp
movsb
xchg
pop
inc
add
pusha
xchg
and
rcrb
insb
pop
inc
sub
sbb
aas
mov
pushf
xchg
push
test
mov
mov
filds
loop
nop
xchg
xor
or
pop
add
pusha
add
add
push
xchg
or
or
fdivs
push
sub
inc
sub
clc
pop
xor
xor
test
sets
cltd
or
nop
sub
xorb
or
push
inc
ljmp
mov
or
fmull
lock
js
call
xchg
ror
daa
jp
in
dec
dec
les
push
adc
cmp
xchg
mov
pusha
lods
int
sub
out
test
or
hlt
cmp
sub
mov
and
sub
xlat
stc
test
cld
test
add
adc
dec
jno
imul
stos
add
or
daa
gs
or
jns
cmpsl
hlt
jne
add
gs
pop
or
pop
outsb
sub
inc
jne
lock
into
and
or
data16
cwtl
mov
adc
mov
pop
sub
jnp
andl
jg
in
jecxz
bound
loop
jp
jbe
stos
jae
xchg
xchg
jmp
mov
xor
shll
adc
ret
loope
push
pop
or
loope
outsl
int
dec
adc
loopne
xchg
sub
push
push
or
jmp
or
mov
test
push
fcoml
and
scas
jo
pusha
and
xchg
xor
xchg
rolb
subl
arpl
imul
dec
xor
in
ja
loope
fs
sarl
cwtl
mov
mov
cmc
outsb
mov
pop
insb
in
and
lcall
dec
push
ja
pushf
mov
lret
add
fisubl
add
mov
pushf
adc
sbb
pop
lcall
or
or
pop
jo
ss
and
dec
ss
xor
cltd
dec
daa
and
repnz
scas
fs
bnd
push
jl
mov
mov
sub
adc
gs
push
dec
inc
mov
bound
ljmp
nop
pushf
or
adc
xchg
and
jl
pop
dec
push
dec
xor
mov
loop
sbb
cmp
dec
mov
push
or
rorl
inc
xchg
push
xor
lcall
mul
dec
pushf
xorb
adc
sbb
or
lret
xor
or
cmpsl
xchg
data16
addr16
dec
mov
lret
pushf
in
enter
cmp
cmp
adc
cmp
and
pushf
dec
adc
lods
pop
and
xchg
sub
dec
adc
mov
pushf
jo
add
cmp
xchg
mov
jnp
scas
and
imul
and
inc
es
pop
push
dec
dec
push
es
ljmp
or
js
sub
test
xchg
mov
cmp
sbb
movsb
rclb
rorl
sub
insb
insb
cmp
cltd
ljmp
out
lock
dec
inc
outsb
dec
inc
lret
jo
push
push
or
inc
daa
jbe
push
ds
cld
ror
pusha
inc
sub
imul
cmp
repnz
jp
add
iret
lods
pop
orb
sub
push
cmp
mov
out
testl
jge,pn
fs
push
bound
insb
cmpsb
int3
pop
jl
push
imul
jo
xchg
int3
test
adc
sub
xor
mov
cmp
sub
stos
js
cmp
xor
adc
push
dec
fsubs
mov
pop
dec
scas
sub
adc
push
mov
dec
xchg
pop
cmp
sub
incb
and
adc
lods
sub
insb
lock
dec
gs
aam
das
push
dec
pusha
repnz
test
adc
ja
fdivrs
or
imul
and
sbb
cmp
jne
mov
xchg
pusha
lret
shlb
and
xor
clc
dec
adc
xor
insl
jge
mov
icebp
sbb
and
push
imul
movsb
cmpsb
test
push
and
sub
cmpsb
mov
mov
adc
lock
xchg
sub
rol
int
xor
dec
movsb
movsb
in
push
adc
dec
lock
push
cmp
daa
test
insl
outsb
stos
xchg
fsubrl
jl
xchg
insb
sub
jge
dec
movsl
sbb
dec
pop
mov
sbb
jae
cmpsl
cmp
mov
dec
dec
mov
es
outsl
push
xor
xchg
cmpsb
xor
or
dec
dec
mov
popa
cmpsb
jo
pop
dec
jae
cwtl
je
cli
mov
xchg
xchg
sub
scas
aad
mov
push
in
in
cmp
movsb
repz
pop
sbb
sub
inc
in
idivb
call
sub
xchg
fs
and
ss
test
and
aam
jmp
xchg
imull
inc
movsb
push
push
rolb
in
xor
fwait
mov
sub
movsb
into
jp
outsl
pushf
jbe
sbbb
add
lcall
pop
dec
adc
mov
add
cmpsb
xor
loop
dec
pushf
pop
outsb
fwait
test
and
dec
inc
ss
jo
cmp
inc
fs
pushf
ja
dec
push
mov
mov
leave
lcall
mov
rcl
inc
cmp
and
or
rcr
in
xchg
mov
sbb
push
out
adc
dec
aad
xchg
in
cmpsl
mov
cmp
push
lret
fbld
xchg
jo
xor
jns
mov
in
jb
pusha
mov
xchg
test
adc
lea
outsb
jo
ljmp
lret
ja
call
insl
lock
je
dec
fwait
xor
add
lds
movsl
pushf
aam
arpl
xchg
test
pop
adc
cmp
pop
jne
js
es
xchg
movsl
scas
adc
cltd
mov
test
dec
test
xchg
fsubr
xor
pop
jle
pushf
sub
gs
cmpsl
sbb
jns
cmpsl
mov
leave
insl
jl
and
js
rclb
mov
cmp
and
push
lea
jl
insb
popa
mov
test
ror
lds
dec
in
pop
cmc
imul
dec
insb
shrl
dec
data16
jae
cmp
int3
adc
push
movsl
xor
jl
popf
or
idivb
push
imul
aad
push
pop
fnstcw
pop
sbb
scas
out
insb
adc
out
insb
mov
push
pop
pop
inc
cmc
bound
fs
mov
orb
pop
bound
jo
data16
push
movsb
imul
scas
dec
stc
jne
xchg
and
or
jecxz
dec
xor
orb
movsl
mov
pushf
repnz
pop
lods
movsl
dec
lcall
jo
pop
xchg
int3
pop
jae
jmp
xchg
hlt
push
sub
adc
mov
lods
mov
fwait
ret
mov
xchg
sub
push
jmp
mov
dec
jns
cmp
sub
inc
jp
cmp
imul
cli
int
adc
push
mov
fs
jns
cs
enter
mov
pusha
jb
mov
dec
jbe
cmp
pop
jae
ror
and
and
shrl
lret
cmp
mov
push
push
in
cmp
sub
sub
inc
ficoms
push
test
pop
gs
fimull
lret
mov
sbb
mov
dec
add
jl
fldenv
repnz
sub
adc
lods
pusha
in
in
int3
movsb
jp
sub
cwtl
fstpl
xor
mov
sub
dec
dec
cmp
js
push
leave
inc
xor
push
cmp
pop
adc
lds
stos
fadd
jae
cmpb
mov
inc
push
add
ds
pushf
inc
jp
shrb
sbb
ds
jne
sub
mov
repnz
xor
pop
sub
hlt
jmp
cwtl
dec
arpl
scas
fs
mov
ror
xchg
loop
mov
push
cmpsl
shlb
fsubs
stos
sub
in
mov
lret
jae
scas
movsb
jb
and
push
xchg
fsubrs
cwtl
pop
dec
push
jae
sub
test
and
out
jge
aad
xchg
jns
cmp
dec
or
mov
inc
xchg
mov
sbb
call
fs
adc
sub
cmp
xchg
xchg
mov
daa
test
mov
cwtl
pop
gs
shrb
testl
daa
leave
addr16
movsb
mov
xchg
ja
hlt
push
loop
mov
xchg
cmp
aam
mov
aam
test
fcomps
and
fdivl
insb
daa
xor
mov
insl
mov
lods
movsl
inc
dec
movsb
hlt
fisttpl
adc
rcrb
dec
les
sub
mov
inc
add
enter
push
int
dec
jl
fdivl
lds
in
push
cmc
lret
push
mov
cmpsb
loopne
fwait
xchg
call
and
push
jb
pop
sub
daa
sub
imul
and
push
xchg
jne
cwtl
jns
sub
movsb
pop
in
fs
cmpsl
and
cmpsb
cmp
and
and
jns
fisubrs
cmp
mov
loop
xchg
mov
lret
bound
or
cwtl
cmpsl
addr16
and
jb
add
dec
mov
inc
lret
insl
dec
push
std
fcmovnu
xchg
bound
inc
cli
imul
dec
xchg
push
sub
leave
cmp
xchg
push
movsl
stos
movsb
xor
sbb
inc
pusha
cli
addr16
sub
adc
out
xchg
repnz
xchg
int3
call
xchg
fisttpl
fs
adc
cmp
js
and
inc
xor
push
inc
cmp
scas
adc
pop
inc
sub
jle
lock
push
stc
ficoms
das
fs
test
scas
dec
lret
mov
sbb
push
mov
jbe
daa
ss
sub
dec
jmp
int3
cmp
mov
mov
cmpsb
into
scas
inc
nop
adc
cmp
inc
xchg
dec
rclb
pop
aam
in
cmpsb
fs
jp
cs
aam
insl
jle
iret
adc
mov
mov
sbb
sub
and
pusha
cs
cmpsb
cli
dec
fs
test
daa
mov
mov
mov
sbb
clc
in
jo
sub
popa
xchg
adc
mov
test
push
pop
push
in
mov
push
sbb
loopne
ss
fbld
mov
shlb
mov
sub
movsl
inc
loop
jge
outsb
scas
cmpsb
and
in
jo
gs
push
test
bound
mov
into
addb
sub
jae
orb
jbe
jmp
mov
insl
dec
mov
mov
mov
in
mov
rorb
fidivl
dec
gs
dec
or
push
sarl
xchg
push
xchg
sub
adc
sbb
push
ss
outsb
pop
push
pop
add
in
xchg
leave
je
dec
lea
lret
lret
or
inc
js
sub
fcmovb
cmp
addr16
push
popf
inc
pop
sub
lret
scas
jp
stos
jb
into
aad
pop
dec
mov
dec
sub
jae
hlt
jmp
cmp
mov
sbb
sub
push
lahf
adc
xchg
xchg
cmp
ds
sub
xchg
push
dec
cmp
xor
pop
bound
test
insl
adc
in
and
hlt
pop
jns
jp
arpl
mov
dec
fs
cmpsb
xor
cltd
into
sub
aam
inc
mov
and
dec
xchg
leave
sub
and
jo
jb
shll
mov
dec
push
leave
out
and
pop
cmp
push
ret
icebp
push
or
daa
inc
xchg
arpl
fs
shr
and
lret
mov
mov
nop
leave
shrl
les
rorl
lret
push
mov
lret
pushf
push
mov
xchg
insl
adc
ds
dec
dec
mov
xchg
jecxz
sar
push
mov
jmp
loop
adc
pop
push
push
push
sbb
mov
mov
sbb
gs
pop
fsubr
cmp
mov
inc
into
mov
or
dec
jo
xchg
pop
sub
ds
mov
repz
and
loop
es
dec
xchg
gs
movsb
int3
leave
ret
sbb
jle
pushf
stos
and
mov
je
add
addr16
jns
sub
je
cmp
inc
push
inc
aas
cs
add
mov
push
jae
xchg
inc
lret
rclb
ficoms
dec
push
dec
imul
jae
pop
push
cmp
xchg
push
push
xor
fs
dec
shl
nop
sbb
push
xchg
mov
xor
insl
negb
popa
inc
loopne
inc
jbe
ss
dec
aam
in
repnz
dec
push
jp
imul
es
cmp
cmp
push
fidivs
js
mov
jp
jp
test
repnz
jp
sub
cld
test
pop
mov
lret
out
into
dec
push
lods
push
mov
popa
aas
fisubl
fnstsw
bnd
pop
pop
xchg
test
outsb
out
mov
mov
sarw
dec
push
test
std
and
pop
dec
cmpsl
mov
lcall
incb
and
jl
push
adc
stos
mov
jns
push
movsl
pop
push
and
je
stos
sahf
mov
jae
int3
xchg
cs
push
lock
insb
call
dec
cwtl
lret
rclb
jmp
cmp
dec
cld
bound
pop
idiv
shrb
and
repnz
nop
pop
sub
pop
es
lahf
inc
pop
jl
inc
mov
dec
xor
jg
out
sub
pusha
sub
ss
push
fs
lahf
push
push
mov
sub
xchg
stc
xor
into
and
mov
ret
lcall
shlb
clc
scas
adc
lods
ds
adc
out
gs
lock
mov
cmp
push
mov
cmp
jl
dec
cmp
mov
push
add
je
loop
dec
les
dec
fnstenv
inc
fistl
dec
popf
fisubrl
adc
cwtl
in
das
jg
pop
add
daa
hlt
dec
adc
xor
xchg
loope
jnp
shlb
imul
push
sbb
sub
cld
mov
xchg
dec
cli
and
pop
jle
into
and
imul
test
mov
xor
cmp
mov
mov
mov
int3
leave
inc
dec
dec
adc
pop
inc
or
in
dec
je
fisubrl
push
xchg
inc
lahf
in
imul
fmul
add
fimuls
enter
xchg
xchg
movsb
mov
mov
push
clc
push
push
jmp
fisubl
fs
js
sub
repnz
pop
adc
ljmp
or
je
mov
aam
sub
xchg
sub
xchg
call
mov
mov
fs
fadds
inc
pop
dec
xor
push
aam
mov
inc
push
sub
cmc
jmp
call
jp
jo
xchg
ficoml
cli
mov
add
stos
sahf
cmc
icebp
xor
inc
xchg
jge
imul
push
xchg
lahf
pusha
and
fildl
lods
mov
pop
push
inc
and
aas
cmp
gs
loop
in
js
adc
jp
mov
add
xchg
loop
test
inc
xor
clc
or
mov
sub
enter
dec
adc
notl
lock
mov
cmp
sub
push
xor
fidivrl
sbb
mov
stos
je
in
dec
cpuid
shl
mov
or
push
mov
sbb
lds
sahf
movsb
mov
test
int3
stc
mov
and
dec
xchg
in
add
testb
leave
cs
xchg
jl
sahf
movsb
lods
popw
jae
outsb
xchg
fmuls
je
lods
dec
adc
std
push
ss
inc
dec
add
jo
int
movsb
mov
mov
xchg
mov
pop
repnz
xchg
enter
pop
inc
inc
mov
js
sub
sbb
cld
loopne
mov
xchg
gs
fs
xchg
mov
push
sbb
jg
loopne
out
add
mov
enter
and
js
aam
fsubrl
outsb
xchg
pop
xor
je
jno
pop
pop
std
mov
xchg
mov
xor
jo
fs
pop
mov
movsl
or
sub
dec
dec
adc
adc
int3
in
loopne
dec
jge
or
cmpsl
mov
push
in
je
fsts
cmp
icebp
leave
push
cmp
inc
inc
daa
ss
pop
push
sub
cmp
mov
fcoml
inc
sub
push
stos
mov
ljmp
daa
popf
cmp
sub
sub
pop
inc
sar
cmp
mov
ds
push
cli
lret
hlt
mov
rcrl
xchg
jb
lock
stos
int3
push
popa
mov
call
xor
dec
mov
xor
inc
stos
lret
cmpsb
adc
sbb
jne
adc
push
push
or
xchg
jne
xor
mov
xchg
xchg
xchg
cmpsb
movsl
mov
scas
gs
cs
iret
cs
sub
sub
sub
movsb
test
mov
xchg
mov
xchg
dec
mov
xchg
cmp
loopne
inc
inc
fiaddl
xor
mov
sub
bound
mov
xchg
push
jns
push
je
sub
fstl
mov
lcall
jl
in
clc
cmpsb
push
scas
hlt
es
les
adc
pop
lcall
xor
xchg
test
push
adc
mov
xor
dec
jo
dec
insb
bound
jae
loop
insl
pop
test
push
sbb
movsl
mov
push
aad
into
xchg
shlb
decb
lahf
nop
scas
out
mov
adc
and
pop
fs
sbb
dec
mov
dec
push
addr16
aas
lods
pushf
xchg
addr16
push
push
mov
repnz
jne
xchg
daa
insb
xor
mov
mov
out
fsubrl
movsb
gs
adc
insl
push
inc
movsb
lret
fs
loop
ror
rcl
bound
out
mov
mov
add
sub
cmp
push
push
mov
loop
rcr
cs
cmp
imul
jbe
fcoms
add
push
mov
scas
rorb
rcl
mov
insl
std
adc
mov
jo
dec
dec
cltd
imulb
lahf
adcb
repz
fisubl
cmp
inc
dec
cmp
and
cmpsl
mov
jo
lahf
xchg
mov
jb
add
push
outsb
leave
pop
xchg
jb
jae
ljmp
push
jo
xor
cmp
push
test
lods
mov
addb
xchg
and
jb
les
and
cs
movsl
jbe
dec
xor
push
pop
nop
dec
push
push
sbb
pop
push
sub
or
pop
movsl
sub
outsb
sbb
adcb
in
xchg
test
cmp
xchg
imul
pop
in
jl
sub
es
xor
inc
jmp
push
pop
pop
push
push
xchg
mov
cmp
dec
cmp
jecxz
pop
adc
jae
sbb
sub
xchg
into
ficompl
push
push
mov
shll
movsl
sub
test
shl
push
pop
lret
test
jae
shlb
push
ret
pop
mov
inc
mov
dec
popf
into
aam
dec
cmp
mov
movsb
mov
cli
fdivrl
aaa
lcall
add
sub
mov
jp
pushf
xchg
push
xchg
mov
insb
shrl
addr16
ljmp
jae
xor
or
roll
das
or
rol
sub
jb
addr16
or
sarl
inc
jb,pn
fldcw
jns
loop
pop
xchg
adc
cmpb
movsl
xchg
lret
mov
mov
ljmp
shlb
and
mov
inc
daa
sti
sub
sub
sti
hlt
push
into
dec
push
push
pop
xlat
push
xchg
add
mov
xchg
outsb
leave
push
and
out
jmp
in
insb
xchg
inc
xchg
in
repnz
push
mov
cmc
popf
jl
adc
jno
repnz
stc
test
ja
inc
dec
inc
mov
inc
imul
flds
xchg
mov
fcomp
sub
scas
jns
pop
pop
fdivrs
fucom
sub
sbbb
mov
dec
hlt
stos
ss
das
rorl
mov
std
sahf
adc
subl
sub
sub
jmp
jp
stc
push
icebp
imul
jbe
xor
pop
cmp
mov
inc
push
xchg
and
mov
repnz
push
dec
dec
push
ss
enter
pop
fs
dec
andb
push
popf
iret
cmp
rclb
out
and
push
out
imul
int3
pop
pop
cltd
jecxz
xchg
sarb
jecxz
orb
mov
aam
jnp
stos
cmp
mov
or
xorb
mov
lds
in
cmp
mov
lahf
cmp
or
cmpsb
in
sub
stc
push
das
mov
and
pop
xchg
jmp
mov
mov
inc
add
je
js
inc
mov
push
aad
dec
lret
xor
sub
insb
mov
pop
mov
cld
fs
sbb
jb
dec
enter
ds
dec
mov
inc
fcompl
insb
pop
popf
icebp
push
out
adc
push
hlt
xchg
sub
jp
push
jmp
subb
push
mov
and
sub
push
mov
push
push
insb
jmp
adc
sbb
fdivp
clc
sub
and
mov
mov
xchg
xchg
imul
in
jle
push
in
out
jns
addr16
xchg
push
cs
andb
mov
std
sub
pop
loopne
xchg
jae
jb
clc
les
mov
test
sbb
adc
sub
dec
repnz
mov
add
fdivrs
jecxz
rcl
dec
jnp
mov
cli
jge
ds
cs
push
icebp
mov
xchg
sub
mov
jo
xchg
cs
ds
mov
daa
mulb
mov
cmp
lcall
pop
or
sti
ljmp
dec
adc
mov
mov
xor
push
mov
repz
xor
xor
push
imul
xor
inc
lahf
inc
inc
dec
cmp
push
and
ss
dec
jbe
into
mov
cltd
cmp
pop
dec
arpl
push
push
fsubrl
sub
sub
sub
cmp
test
sub
in
insl
ljmp
inc
sbb
inc
fs
insb
dec
lea
inc
dec
enter
sbb
dec
fs
insb
push
lea
inc
push
pop
lret
adc
push
dec
and
push
push
in
insb
pop
lea
inc
add
xor
xor
xor
aaa
and
xchg
cmp
fsubrl
jb
lods
adc
xor
xchg
xor
aaa
leave
cmp
and
push
adc
xor
mov
dec
mov
test
test
and
aaa
push
inc
cmp
push
adc
xor
xchg
nop
push
inc
and
and
outsb
sub
sbb
xor
enter
ss
aaa
movsb
ljmp
cmp
repnz
adc
mov
inc
sub
xchg
sbb
fs
dec
push
adc
imul
jg
into
loop
jae
and
pushf
sub
sub
dec
sub
xchg
or
ds
pop
jae
sbb
xor
cmp
rolb
jl
xor
xchg
bound
lret
push
mov
je
cmp
stc
cmp
mov
sbb
ljmp
jne
xor
dec
shll
push
enter
xor
push
xor
fs
bound
pop
mov
pop
inc
xor
xor
sbb
jmp
push
jno
and
lods
xchg
add
imul
jmp
in
es
mov
inc
inc
fcmovnb
mov
mov
je
pop
pop
add
mov
inc
cmp
mov
mov
sahf
rcrb
out
mov
jp
iret
int3
daa
in
pop
mov
mov
loopne
insl
ja
push
xchg
popf
pop
ds
dec
mov
add
pop
jp
stc
jl
mov
mov
jp
mov
ffree
dec
mov
sbb
adc
int3
movsl
sub
adc
and
jl
arpl
pop
xchg
jp
imul
insb
jecxz
orb
data16
mov
push
jl
pop
push
sub
fnstsw
movsb
pop
jb
fs
pop
pop
xchg
jae
pop
js
xor
mov
sub
xor
nop
sub
adc
cwtl
and
pop
ror
es
fldenv
add
adc
imul
out
rclb
sbb
push
dec
and
pop
mov
dec
sarl
jno
leave
clc
pop
pop
loopne
fs
arpl
fsts
lret
mov
jae
lret
mov
movsl
hlt
jmp
mov
sbb
shrb
mov
shll
leave
shll
cmp
cmp
push
call
pop
push
dec
adc
xchg
in
push
cmc
and
inc
pop
xor
mov
gs
addr16
push
jb
push
fisubs
pop
test
lods
and
xchg
mov
aas
lret
push
faddp
hlt
push
or
lret
adc
sahf
sub
mov
fsubp
pop
adc
mov
dec
mov
cmp
addr16
pop
or
in
hlt
cmpsl
leavew
cmp
mov
cld
jns
outsb
bnd
pop
pop
push
mov
stc
ds
pop
sarl
hlt
aas
cli
pop
mov
sub
push
push
out
jp
daa
cs
aam
jbe
hlt
scas
cmp
push
inc
sub
cs
lahf
adc
mov
leave
add
cmpsl
cmp
fcoml
je
mov
cs
adc
xlat
std
push
dec
outsb
dec
dec
sub
adc
push
aam
test
jge
add
dec
inc
mov
clc
jmp
xor
pop
lds
xchg
movsl
pushf
cmp
imul
mov
ljmp
shll
loop
fists
outsb
fidivl
xchg
js
test
mov
imul
adc
out
in
scas
dec
sub
pop
dec
inc
iret
in
movsl
pop
lcall
hlt
test
jecxz
cmc
mov
jnp
push
sub
jp
imul
xchg
test
out
sub
and
lods
push
test
xchg
sub
icebp
hlt
jle
and
mov
fwait
push
dec
cmp
pop
mov
dec
jp
out
imul
je
into
pop
cmpsl
mov
out
popl
fmul
movsl
cmp
mov
das
sub
dec
ret
cmpsl
mov
jo
xchg
aas
push
adcb
stc
daa
roll
out
lret
sub
loop
adc
test
ret
xchg
ficoml
mov
and
jl
push
mov
push
int
adc
cmp
cli
sub
insl
jl
repnz
pop
fsubrs
jle
imul
or
sub
test
pop
cmp
sub
je
mov
jge
hlt
idivl
shrb
sahf
rolb
cmpsl
mov
lds
ja
xchg
xchg
xor
mov
enter
mov
dec
and
xchg
and
data16
pop
and
fcomps
push
negl
in
mov
sti
test
push
sub
xlat
inc
mov
add
xchg
pushf
pop
inc
mov
pop
pusha
xchg
fs
mov
dec
rcrb
inc
fcoms
ret
out
fstps
dec
dec
mov
pushf
mov
std
pushf
inc
stos
loop
sub
sti
negb
arpl
clc
jp
es
aam
jmp
fsubrs
inc
jo
out
pop
mov
sbb
jae
sub
pop
inc
push
xchg
inc
pop
mov
mov
dec
jmp
xchg
addr16
lods
push
xchg
jge
in
cwtl
shrb
adc
sub
repnz
scas
sub
dec
scas
in
aam
lods
repnz
into
je
xor
hlt
scas
test
cmp
pop
jp
cmp
cmpsb
pusha
loop
stos
push
into
cmpsl
fldcw
push
lock
sub
outsl
push
pushf
adc
test
xor
cmpsb
aam
mov
mov
iret
mov
xchg
ljmp
data16
loop
fistps
jns
rorl
push
stos
hlt
mov
arpl
das
push
jno
leave
gs
jae
addr16
pop
add
popf
in
daa
inc
or
test
mov
stos
push
push
xor
loopne
mov
mov
sahf
xor
and
push
loopne
xchg
push
push
ror
subb
test
shl
insl
push
mov
jne
movsb
popf
bound
in
pop
and
dec
mulb
mov
sbb
adc
push
dec
pop
test
insb
or
mov
jle
add
in
and
pop
pop
andb
push
fldt
movsb
mov
data16
mov
push
push
pop
add
pop
pushf
push
jae
sbb
jb
cmp
pop
add
es
sub
adc
sub
pop
stos
dec
in
sbb
aad
stc
and
cs
mov
pop
sub
mov
inc
pushf
mov
js
sub
jns
inc
adc
sbbb
jmp
adc
dec
adc
fadds
mov
pop
mov
push
es
data16
scas
aam
jns
cwtl
sub
fldcw
and
cs
sub
sub
inc
or
jb
xor
mov
or
cmc
push
les
lods
and
mov
popf
stos
cmp
ss
call
mov
fs
outsb
gs
insl
je
and
pop
sti
lret
adc
stos
bound
mulb
jb
insb
les
lret
jle
test
adc
jmp
cmp
dec
bnd
cmp
fwait
mov
mov
mov
repz
lock
in
call
cmp
addr16
insl
cld
cmp
cld
lcall
cld
std
cld
add
cmp
push
cmp
cmp
sbb
mov
dec
xorps
iret
mov
aas
pop
xchg
push
mov
pop
shll
shl
add
pop
xor
jb
jg
xchg
xchg
shrl
xor
sahf
int3
push
xchg
inc
inc
addr16
xchg
mov
shl
fabs
push
xor
leave
aas
rorl
icebp
xchg
mov
xchg
stc
scas
stc
lret
stc
jecxz
jmp
icebp
stc
idiv
sti
clc
pusha
xor
data16
sbb
xor
push
daa
bound
addr16
arpl
jo
jl
loope
jmp
icebp
clc
or
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
sbb
cmp
sahf
xor
inc
lahf
push
pop
popa
lahf
push
lahf
nop
lahf
scas
lahf
mov
mov
lahf
leave
lahf
iret
lahf
aam
fistpl
ljmp
cmp
cmp
sbb
push
push
sbb
lahf
sub
xor
inc
lahf
dec
lahf
dec
lahf
push
lahf
pop
lahf
pop
lahf
arpl
jne
jns
jg
test
xchg
xchg
lcall
mov
js
in
mov
cld
xlat
cld
fdivr
jecxz
out
in
cld
repnz
xchg
sbb
cmp
popf
nopl
sahf
sbb
push
xchg
and
nop
cmp
aas
out
out
out
out
out
in
xchg
sahf
imul
repz
jge
xor
xchg
repz
repz
repz
repz
mov
repnz
dec
mov
loopne
in
ljmp
sti
cmpl
sbb
and
es
sub
test
cmp
cmp
inc
stc
inc
stc
dec
and
pop
cld
pop
cld
arpl
push
cld
jle
mov
mov
ret
cld
leave
cld
out
out
cld
pop
cmp
insl
cmp
cmp
sub
jg,pn
push
lock
cmp
mov
mov
mov
xchg
idivb
jle
jle
jle
jle
jle
loopne
loope
stc
dec
cmp
cmp
sbb
cmp
xor
cmp
inc
aas
dec
aas
dec
aas
pop
aas
pop
aas
fs
sbb
jns
orl
iret
cwtl
iret
pushf
leave
mov
mov
out
out
out
out
out
out
out
out
loope
xor
fnstenv
ds
nop
stc
lahf
stc
movsl
stc
mov
sar
stc
clc
add
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
dec
test
aas
mov
mov
aas
fidivrs
call
xor
dec
sbb
xor
cmp
iret
push
iret
pop
iret
imul
iret
or
iret
fwait
iret
mov
iret
ror
fmulp
out
jb
loope
xor
leave
cmp
fsts
push
jmp
test
stc
xchg
stc
lahf
stc
test
mov
mov
stc
aad
fdivrp
in
jmp
std
clc
cmp
jbe
js
sbb
ss
popf
xor
mov
mov
lahf
loop
in
xchg
aaa
dec
daa
gs
jne
jnp
xchg
fwait
out
out
in
sarb
call
xchg
hlt
lcall
cld
lret
cld
fdivr
cli
std
sarb
in
call
sbb
cld
sub
repz
repz
repz
repz
repz
repz
lock
and
sub
xor
hlt
dec
clc
pop
cld
jp
mov
movsb
cld
mov
mov
cmp
dec
mov
iret
mov
and
ret
dec
scas
mov
ret
cs
loop
sub
cld
sti
cld
add
and
sbb
js
jp
jl
jle
jle
jle
jle
jle
loopne
jb
pop
or
jbe
adc
jl
jle
jle
jle
jle
jle
dec
xor
jle
cmp
jle
jle
jle
jle
jle
jle
jle
pop
pop
sbb
fs
lahf
insb
lahf
jo
je
js
jl
sbbb
lahf
nop
lahf
xchg
lahf
cwtl
xchg
pushf
dec
movsb
iret
test
lods
iret
mov
mov
mov
iret
iret
enter
ror
aam
fmul
fmul
loopne
in
call
iret
hlt
iret
clc
iret
cld
fmull
aas
add
or
adc
sbb
and
mov
xor
xor
flds
jle
repz
repz
repz
repz
repz
repz
repz
repz
js
jl
xor
repz
mov
nop
repz
repz
repz
repz
rep
repz
mov
mov
stc
enter
sar
aam
fdivr
fdivr
loopne
in
call
aas
clc
aas
cld
jo
inc
xchg
jge
fdivl
add
or
or
aam
adc
sbb
jle
jle
jle
jle
iret
add
cmp
cmp
inc
cltd
loopne
std
push
stc
push
stc
pop
stc
pop
stc
pusha
xor
push
cld
je
js
jl
cmp
cld
mov
mov
nop
cld
xchg
cltd
repnz
mov
lahf
lods
lahf
mov
mov
clc
mov
iret
enter
ror
aam
fmul
fmul
loopne
in
call
mov
push
sub
dec
cmp
js
mov
shlb
clc
loope
xor
lret
xorl
daa
and
addr16
test
adc
cld
mov
cld
call
xchg
push
sbb
pusha
lahf
jo
sbbb
lahf
rcrb
dec
pop
and
mov
punpcklbw
popl
iret
lods
iret
mov
ror
leave
loopne
jbe
sbb
and
in
xor
jmp
push
stc
pop
stc
pusha
stc
insb
stc
jo
jl
cmp
stc
nop
stc
pushf
stc
mov
mov
cld
sarb
in
jle
jle
loopne
jb
je
jbe
js
dec
sub
jl
push
je
jo
mov
xchg
aas
cwtl
cs
xchg
enter
movsb
pushf
adc
jb
mov
ret
push
shll
jo
xor
repz
repz
lock
cmp
push
xchg
sub
data16
rolb
jl
cmp
pop
lock
hlt
lahf
clc
lahf
cld
mov
or
adc
sbb
sbb
and
repnz
jle
jle
jle
jle
jle
jle
jle
dec
push
or
inc
pusha
fs
push
stc
je
js
jl
shrb
cmp
cmp
cmp
cmp
or
mov
mov
adc
jmp
nop
stc
mov
stc
sar
loopne
lock
xorl
push
jmp
cmp
stc
mov
enter
clc
aas
cld
jo
ss
or
or
adc
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
js
jl
mov
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
out
out
out
out
in
mov
cld
call
aaa
pop
daa
pusha
inc
insb
repnz
subb
lahf
pushf
lahf
mov
mov
iret
ror
aam
and
out
in
xchg
sub
repz
repz
repnz
leave
xor
leave
or
or
cmp
sbb
sub
sub
scas
out
in
add
dec
dec
inc
or
daa
push
push
negl
pop
xchg
pop
fs
pop
insb
pusha
aas
je
js
jl
xchg
test
xchg
stc
cwtl
stc
pushf
fs
cld
test
lods
mov
jle
jle
pop
mov
enter
lahf
aam
fadds
repz
hlt
stc
clc
stc
cld
sub
mov
mov
notb
sbb
sbb
movsb
and
sub
sub
xor
dec
mov
lret
dec
sbb
add
mov
insb
xchg
ret
js
jl
enter
stc
mov
cld
cwtl
cld
pushf
mov
jle
pop
test
iret
mov
mov
out
in
xchg
in
repz
fmul
ljmp
lock
hlt
stc
clc
stc
cld
sti
cmpl
or
adc
adc
sbb
sbb
cs
out
out
out
out
out
out
out
out
out
in
mov
pop
cld
pusha
cld
fs
pop
insb
lahf
jo
je
js
jl
sbbb
nop
repz
repz
repz
repnz
jle
jle
jle
jle
jle
jle
imul
mov
dec
loope
cwtl
icebp
test
mov
in
call
xchg
clc
xor
or
dec
jp
pop
sbb
lret
sub
sti
aas
add
inc
aas
dec
cs
pop
lahf
push
lahf
pop
xlat
pop
dec
fs
push
je
js
jl
and
shll
nop
out
jle
jle
pop
movsb
jle
lods
aas
mov
mov
lahf
mov
dec
mov
lret
rolb
fdivr
fsubrl
mov
cli
loope
hlt
stc
clc
stc
cld
je
add
or
and
sbb
lods
xor
ds
insb
shrb
lods
stos
aas
fdivrl
loopne
in
xchg
hlt
sahf
xor
fisubrs
xor
imul
subb
mov
and
sarl
leave
sub
cmp
cmp
mov
xchg
aas
cwtl
and
mov
pop
mov
mov
repz
shl
aam
fimuls
or
in
mov
hlt
xchg
cld
out
add
inc
or
lock
sbb
sbb
and
and
sub
lahf
cmp
inc
lahf
inc
lahf
dec
lahf
dec
lahf
push
lahf
push
lahf
pop
lahf
pop
lahf
pusha
lahf
fs
jo
je
js
push
xor
repnz
push
jle
jle
jle
jle
jle
jle
jle
pop
lods
pslld
pmulhuw
lret
enter
stc
fdivs
aas
in
call
hlt
dec
hlt
cld
fmull
xor
push
push
cli
or
and
mov
lar
or
mov
enter
cld
aam
fdivr
fcoml
xchg
in
andl
repz
repnz
push
es
je
dec
or
sub
dec
sbb
stc
sub
sub
cmp
xor
cmp
out
in
mov
cld
pop
xchg
dec
pop
fs
push
je
js
jl
push
jle
pop
mov
jo
leave
xchg
inc
pusha
pushf
stc
mov
sub
push
mov
mov
mov
leave
les
int3
stc
sar
aam
fdivr
fsubrl
jle
in
call
and
je
mov
andb
je
loopne
cmp
or
jo
popf
cwtl
adc
pop
stos
daa
cmp
pop
pop
jmp
cmpb
mov
cs
cmp
enter
rclb
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
cld
adcl
adc
adc
sbb
pop
and
sub
scas
xor
cmp
push
pushf
in
lock
mov
mov
in
repnz
aas
aam
fsubrs
fdivl
cli
push
mov
adc
jl
inc
aas
inc
aas
dec
sub
out
in
mov
mov
js
jl
inc
test
mov
mov
dec
jle
jle
pop
pushf
test
test
stos
mov
mov
pop
mov
mov
pop
int3
lahf
rclb
cld
in
mov
repnz
xor
jo
add
cli
lahf
mov
je
jbe
js
pop
dec
or
pusha
loope
nop
jae
pop
repnz
mov
lock
ficoml
inc
sbb
fisubrs
loopne
je
dec
mov
cs
call
xor
cld
mov
loopne
int3
pop
fsubrs
mov
push
movsl
xchg
test
test
dec
xchg
inc
dec
cs
inc
cwtl
shrb
das
adc
lock
cmc
jge
sub
shlb
js
je
pop
jo
jle
adc
lock
sbb
pop
movsl
fbstp
mov
cmp
cmp
mov
add
jl
pop
mov
pop
or
sahf
cli
loopne
mov
mov
addb
rclb
mov
leave
lods
loope
mov
mov
je
loope
int3
stc
sar
aam
loop
fdivrl
loopne
in
call
hlt
lock
cld
xchg
pop
stos
add
or
imul
lock
sbb
mov
or
sub
mov
cld
dec
mov
xchg
push
adcb
leave
pushf
fs
xchg
je
push
jl
xor
shll
push
xor
es
inc
sub
dec
sub
push
gs
les
scas
scas
aas
lock
das
xchg
mov
cld
lock
hlt
cld
clc
cld
cld
sahf
mov
or
cmp
adc
sbb
sbb
inc
and
sub
sub
mov
xor
cmp
orl
repz
repz
repz
repnz
push
dec
inc
fs
lods
dec
je
js
push
pop
test
xchg
and
movsb
xorl
mov
pusha
jb
test
cmp
shlb
je
xor
sub
lcall
and
mov
pop
loopne
mov
repnz
in
call
mov
ljmp
dec
pop
test
lods
mov
dec
ds
add
and
dec
add
adc
je
push
push
movsb
movsb
outsb
nop
xchg
dec
xlat
nop
nop
and
push
push
pop
push
push
jne
inc
xchg
js
cs
adc
sbb
sbbb
xchg
sub
mov
mov
in
mov
push
js
jl
test
cmpsb
mov
mov
xor
mov
jbe
fadds
test
hlt
mov
scas
mov
xor
push
jo
rclb
mov
adc
mov
dec
shl
sub
pushl
sub
mov
aas
and
lods
mov
jno
js
sub
stc
mov
mov
xchg
aas
cwtl
and
addr16
jg
xor
mov
test
xor
or
inc
sub
stos
dec
adc
mov
inc
loopne
lods
or
dec
push
mov
push
test
xchg
test
jl
jle
lds
mov
cmp
push
nop
mov
hlt
cld
mov
fsubrl
test
cld
jb
lods
mov
rorl
scas
mov
fsubrs
lret
add
cmp
xchg
or
add
xor
loop
repz
or
mov
in
call
nop
iret
mov
icebp
xor
push
sub
mov
dec
loop
stc
imul
mov
pop
ss
push
sub
mul
jge
loopne
loope
mov
loop
mov
pop
mov
and
inc
cmp
mov
inc
push
jle
mov
test
enter
and
push
dec
dec
js
nop
sarl
xchg
hlt
or
in
jmp
fdivr
jbe
dec
lcall
in
jnp
std
insl
aam
test
dec
cwtl
movsb
test
call
push
cli
mov
xchg
rolb
pop
test
sub
sub
out
cmpsl
jnp
ja
mov
pop
imul
or
dec
andb
bnd
xchg
loopne
inc
aam
ret
and
ss
pop
ds
repnz
push
cld
dec
pusha
or
mov
jno
das
and
push
xchg
dec
pusha
jb
fs
jmp
or
inc
inc
shrb
test
and
xor
xor
in
push
dec
or
sbb
iret
imul
dec
andb
mov
rorb
jmp
fildl
lock
xor
cmp
push
sub
xor
xchg
mull
add
scas
shl
fldl
ds
adc
add
and
cli
popa
shlb
xchg
xor
mov
clc
mov
cld
out
std
cld
add
dec
addps
test
stc
mov
stc
clc
push
aaa
jb
je
jbe
dec
dec
inc
es
cmp
xor
mov
mov
or
cmp
or
sarl
mov
and
jecxz
jmp
cmp
xchg
js
mov
daa
xchg
movsl
in
mov
fists
scas
cltd
xchg
sbb
ret
cmpsb
popa
scas
mov
in
jmp
or
sub
inc
cmpsb
dec
addl
es
cld
cmc
popa
sub
aaa
leave
insl
sarl
stos
cs
out
mov
add
add
xor
in
call
fistpl
adc
pop
inc
and
xchg
push
lds
out
mov
aad
sti
lock
xor
in
mov
ja
jg
xorl
cltd
pop
sahf
xchg
aas
test
mov
or
cmpsl
mov
in
rorl
stc
clc
adc
mov
movsb
push
push
stos
pop
mov
xchg
add
adc
mov
push
xchg
xchg
in
cld
push
aas
scas
push
scas
xor
shlb
sbb
popf
and
sub
cmp
es
addr16
insl
lahf
jae
xchg
xchg
lret
mov
xchg
aas
fidivrl
in
out
aas
imulb
pop
push
xor
shr
fptan
loope
gs
pusha
pop
or
pop
das
mov
mov
jle
jle
pop
jne
sub
es
scas
dec
jo
jbe
pop
int
rcrl
std
adc
add
mov
imul
cmp
aas
mov
xchg
aas
lahf
daa
stos
xchg
mov
ficoms
decb
and
andb
mov
xchg
inc
les
movsb
addr16
jno
lcall
xchg
cmpsb
dec
mov
sbb
ljmp
push
or
dec
sbb
add
xchg
cmpsl
inc
les
push
arpl
insl
lcall
xchg
dec
mov
shl
stc
loope
jmp
idivb
cmp
daa
adc
xor
loope
pop
stc
imul
inc
sub
das
mov
fucom
out
xacquire
cmp
ljmp
xor
gs
aas
jp
cmpl
push
mov
mov
cld
mov
out
xchg
addr16
mov
lock
aaa
aas
adc
psadbw
notb
jle
xor
xor
out
stc
outsl
rcrb
int3
pop
aaa
xor
mov
mov
jle
jle
adc
daa
mov
jle
pop
pop
adc
lret
enter
loope
xor
repnz
cmp
imul
xchg
mov
adc
in
cmc
subl
nop
or
xchg
ds
mov
dec
cmp
cmpsl
inc
mov
mov
jmp
popa
add
adc
jo
aas
hlt
dec
mov
es
stc
jle
subb
mul
add
bswap
push
and
jae
jg
and
xchg
inc
cltd
mov
sar
cld
loope
stc
cld
cld
add
movsb
jp
imul
lahf
aad
fisttpl
repz
cmp
and
push
xchg
test
mov
pop
cmpsl
mov
jmp
xchg
inc
jge
mov
shlb
xor
xchg
adc
ret
les
sub
pop
loop
insb
ss
xor
sub
pavgb
jmp
jl,pt
jle
jle
cwtl
mov
push
nop
stc
inc
inc
cmp
sub
cmp
mov
stos
adc
mov
stc
idiv
outsl
ret
dec
les
fstps
loope
jmp
or
pop
cs
fs
rcrb
push
lret
and
stc
loope
les
repz
repz
add
sbb
aaa
mov
aas
dec
sub
mov
outsb
mov
push
jle
cld
mov
xchg
cltd
in
mov
mov
sbb
mov
adc
or
xor
repnz
cmp
xor
inc
xchg
je
cmp
inc
in
jge
in
stc
clc
add
int3
je
jbe
dec
lcall
push
ss
xchg
inc
mov
push
dec
roll
xchg
das
mov
lret
rcl
testl
rcrl
pusha
cmp
dec
bnd
or
dec
cmp
push
jns
mov
mov
shll
cmp
and
jne
repnz
lock
testb
ds
movsb
sbb
enter
mov
lods
cli
push
out
iret
test
leave
xor
pop
fldenv
fs
sahf
xchg
xchg
lock
cmpsl
cld
mov
mov
mov
lods
aas
mov
lret
cmp
scas
inc
mov
sbb
push
leave
shll
pop
jb,pt
dec
arpl
dec
out
loope
cmp
or
fcomps
aaa
dec
stos
add
loopne
ret
out
cwtl
je
mov
cltd
jle
pop
push
cmp
cmp
lret
push
pop
jae
data16
mov
cs
mov
mov
negb
cmp
mov
loope
mov
cmp
leave
push
inc
pop
mov
xor
ret
dec
fadds
pop
js
jp
dec
jbe
pusha
xchg
xchg
inc
repnz
aas
mov
mov
shlb
sbb
jne
testb
xor
cmp
cmp
push
dec
xor
or
inc
cmp
shll
arpl
lock
test
jb
pop
test
jecxz
jmp
add
out
loopne
cmp
mov
mov
les
jbe
mov
roll
mov
inc
mov
push
rorl
shll
xchg
insb
clc
das
and
jbe
js
jp
jl
jle
push
xchg
movsb
scas
xchg
cli
adc
scas
pop
xor
or
xor
xchg
xchg
or
add
cmp
mov
mov
dec
sbb
cmp
xchg
and
loopne
mov
jbe
mov
mov
pop
and
push
fwait
mov
lret
adc
test
lods
pop
add
cmpsb
inc
mov
fs
popf
in
adc
cmp
xchg
sub
xchg
xor
dec
aaa
mov
add
cmpl
xchg
xlat
dec
inc
icebp
adcl
inc
mov
ret
enter
cmp
mov
andb
imul
mov
or
dec
fsubs
pop
js
cs
push
xchg
mov
test
push
xor
push
sbb
pop
iret
movdqa
scas
iret
loop
popa
sub
test
aam
dec
jo
xor
xchg
ret
sahf
mov
in
std
add
adc
ror
pop
and
lock
push
fdivl
popa
in
call
inc
adc
clc
xor
push
mov
xchg
pop
pop
cwtl
sbb
cmp
shll
and
push
ret
pop
push
push
ret
xchg
sub
xchg
and
in
in
and
scas
popa
adc
cmp
sub
cs
xchg
test
mov
xor
mov
out
clc
xor
mov
mov
movsl
ret
dec
mov
in
add
adc
mov
mov
je
mov
pop
daa
push
mov
mov
fadd
jmp
leave
add
jp
pop
out
xor
mov
outsb
or
jg
out
cmpsl
stc
mov
aas
sti
push
sbb
inc
dec
push
popa
sahf
cmpb
ds
push
push
cmp
mov
or
push
sarb
decb
std
or
nop
and
sahf
lock
bnd
jle
push
aam
sub
ljmp
and
bound
mov
lock
sub
das
call
push
cmpsl
jno
cmpl
out
add
fimuls
xor
dec
sbb
rol
xor
and
mov
hlt
data16
push
movsl
xchg
lret
test
push
mov
mov
cltd
js
das
mov
mov
sahf
xor
js
jp
jl
pop
orl
int3
xchg
mov
sub
xor
cld
or
enter
pop
push
gs
mov
cld
lcall
cvttps2pi
enter
divb
xchg
test
and
cmp
dec
mov
pop
xchg
test
push
sarb
jbe
popf
negb
sub
mov
dec
rclb
xchg
popa
out
in
mov
loope
test
sar
ljmp
cmp
mov
xchg
movsl
adc
cs
mov
imul
lahf
dec
cmpsl
out
jmp
test
mov
testl
adc
ficoml
xchg
cmp
pop
push
cmp
lahf
pop
cmp
shlb
cld
dec
xchg
dec
mov
push
xchg
cmpsl
mul
jbe
or
pop
pop
pop
xchg
and
pop
test
adc
ds
mov
pusha
mov
push
adc
in
mov
mov
sbb
adc
jo
pusha
mov
push
test
lret
inc
daa
fadds
dec
inc
sub
or
cmp
pop
lcall
imul
adc
out
jle
ja
push
fidivl
adc
sahf
ja
addr16
jbe
cmc
cmpsl
mov
mov
jnp
notb
cmpsb
aaa
rol
mov
arpl
mov
loop
fcompl
cmp
mov
rdpmc
cmp
popf
inc
push
dec
xor
mov
push
adc
mov
lret
inc
rorl
cmp
cmp
xchg
dec
jmp
jo
sbbl
add
xor
repnz
push
or
es
inc
mov
rcll
xor
sbb
stc
sar
or
or
aaa
jo
js
jp
adc
xor
ret
xchg
aas
push
ss
jbe
dec
jmp
mov
inc
loop
sarl
into
cmp
sbb
call
ret
or
mov
aas
into
and
jle
pop
loope
cmp
das
add
mov
xchg
sahf
cmp
test
ret
std
lods
dec
pop
mov
pop
in
call
and
sahf
sub
xchg
lahf
stos
lahf
mov
dec
push
mov
pop
and
aad
movsb
or
jge
dec
inc
cmp
je
jbe
dec
out
or
xchg
mov
fwait
cmp
mov
xchg
shlb
inc
out
cmp
cmp
inc
sub
data16
insl
cld
mov
xchg
mov
repnz
sarb
into
and
in
loope
push
rolb
lock
jbe
js
jp
dec
jns
call
sbbl
push
je
adc
ds
push
adc
mov
xor
fmull
add
popa
add
daa
cltd
inc
lahf
fs
and
and
lahf
xchg
pavgb
and
and
jb
dec
rorl
ficoms
or
ror
loope
je
mov
std
and
mov
enter
hlt
sar
loope
add
xchg
xor
adcl
fistpll
dec
test
sarb
sub
xchg
jbe
add
aad
fildl
adc
mov
dec
je
pop
daa
call
andl
dec
out
adc
es
mov
call
popf
push
adc
dec
push
lods
xchg
fnstsw
or
dec
fmul
mov
popf
loopne
lret
dec
push
clc
test
scas
ret
stos
pop
les
fnop
and
push
and
xor
cmp
das
xor
push
ja
jns
jnp
jge
pop
ljmp
xor
iret
leave
std
push
dec
cmp
pop
fcoml
cmp
enter
dec
in
dec
xchg
mov
js
ret
fstl
xor
in
or
imul
push
in
dec
jp
shll
inc
mov
and
push
and
push
xorl
ret
cli
rclb
push
cwtl
dec
cmp
or
ret
rolb
sub
cmp
dec
xor
pusha
cmpsb
mov
lods
fdiv
mov
ljmp
or
pushf
rol
fmuls
ljmp
fldl2t
loope
jno
leave
lret
fstps
ds
mov
push
sub
push
xchg
mov
rcll
inc
push
or
or
sbb
xor
lahf
jae
daa
ret
pusha
pop
xor
in
call
iret
push
jp
je
subl
lahf
sub
popa
addr16
mov
cmp
data16
push
sarl
dec
or
ret
pop
sarl
push
sub
dec
jle
fists
cmpsb
daa
dec
pop
mov
dec
repnz
aas
dec
sahf
es
add
xor
stos
inc
sub
insl
ds
leave
pop
inc
lock
adc
bound
mov
mov
lcall
cmp
das
flds
cmpl
mov
jp,pt
pop
sar
adc
adc
arpl
shll
aam
rolb
pushf
cmpsb
cmp
pop
mov
xor
cli
pop
inc
dec
push
jl
and
loope
aam
sub
push
cmpsl
adc
adc
adc
jecxz
or
fdivrs
dec
mov
push
inc
call
int
sahf
push
aam
and
call
popa
or
roll
daa
cmc
xchg
mov
subb
mov
lock
out
pop
sbb
dec
and
loopne
jle
bound
xor
dec
dec
ret
push
loop
or
ljmp
adc
out
call
fwait
cs
xlat
and
rcl
jbe
js
adc
cmp
mov
movsbl
pop
adc
orb
mov
dec
mov
xchg
cwtl
or
dec
push
or
and
jl
mov
loopne
sbb
ss
shl
and
adc
jnp
cmpsb
in
mov
pop
incb
cmp
cmpb
dec
mov
mov
mov
ret
inc
cmp
scas
mov
sti
loope
cmp
and
sub
into
adc
and
cmpsb
les
test
test
sub
and
mov
repz
xor
adc
xlat
inc
mov
cmp
leave
push
sbb
push
fcompp
jecxz
lock
adcb
out
shl
fmul
pop
add
or
aam
lock
push
sbb
or
jl
and
aad
jle
ljmp
push
xor
mov
xor
sbb
jle
mov
shr
inc
or
push
cmp
and
rorl
shr
cmp
in
pop
cmp
jb
sahf
jmp
notl
sbb
inc
fwait
mov
jmp
addb
or
ss
or
fstp
xor
daa
and
cmp
cwtl
xchg
ret
js
mov
ds
inc
mov
jnp
dec
pop
lret
add
mov
lods
ds
fcompl
movsb
push
push
pop
mov
cmp
mov
xchg
cpuid
icebp
aas
ja
xchg
or
cmp
bound
lret
xorl
aas
daa
mov
sar
inc
fcompl
daa
xor
in
push
loop
incb
js
dec
adcb
rclb
sbbl
ret
ret
rolb
add
js
mov
rorl
icebp
outsl
push
and
test
in
xchg
cld
lcall
pop
rcll
lock
xchg
in
dec
aas
sbbl
aaa
dec
dec
sysenter
orl
dec
xchg
hlt
jo
xchg
xchg
test
push
jo
je
dec
movsl
lods
int3
xchg
cmc
cli
pusha
or
std
add
mov
cmp
adc
and
sub
mov
pop
add
sahf
cmpsl
fldt
push
pop
add
pop
subb
sahf
mov
push
jg
les
mov
and
jecxz
dec
pop
icebp
test
aaa
xor
mov
ror
loope
enter
dec
cmp
mov
test
xor
jl
fdivl
lock
add
pop
sub
pop
imul
cmc
out
pop
outsl
out
pop
imul
mov
dec
mov
inc
mov
imul
cmpsl
inc
scas
dec
loop
sar
sbb
das
popl
dec
mov
ret
or
pop
sbb
aas
and
lcall
dec
mov
movsb
mov
scas
shr
lods
lods
fldt
mov
movsb
mov
sub
sarl
ds
aas
and
sbb
out
sub
hlt
mov
jb
pop
dec
mov
or
push
ficoml
or
int3
test
jb
and
inc
addr16
fnstenv
sbb
mov
mov
adc
xchg
test
adc
out
sub
mov
inc
dec
jo
popa
push
push
and
sbb
lds
or
xchg
and
jb
xchg
xchg
mov
xor
xchg
jle
je
sahf
test
addr16
mov
xor
cld
push
xchg
inc
clc
scas
aaa
add
nop
lcall
int
push
cld
fsubrl
addb
testl
jnp
fwait
xchg
lods
sub
cld
adc
mov
mov
daa
bound
gs
movsb
cltd
clc
movsb
adc
xor
popf
push
mov
enter
ret
pop
mov
cmovb
ud0
clc
push
cmp
push
mov
negb
loopne
xlat
mov
cmp
push
or
sbb
mov
lds
int3
outsl
xchg
jge
lods
fdivrl
sbb
inc
push
lcall
cmp
hlt
cmpsb
mov
jbe
in
rol
into
aam
push
hlt
pop
or
lcall
insb
pop
ljmp
sbb
in
jnp
jo
movsb
je
adc
ds
pop
pop
mov
pushf
xor
pop
out
add
pop
xor
xchg
jno
ja
inc
dec
stos
or
xlat
loope
mov
ret
popf
cmp
cmp
cmp
sub
inc
cmc
cld
scas
and
test
xchg
cmp
daa
and
addr16
xchg
gs
pop
cmp
es
jno
sahf
test
xchg
test
stc
in
sub
shll
sub
cmp
popa
adc
push
fidivrs
xor
xchg
mov
leave
mov
ret
repnz
and
mov
in
pop
xchg
fcomps
jl
jmp
dec
aas
lret
push
inc
push
cli
stc
ljmp
popa
aam
je
clc
push
cmp
and
inc
ret
sub
sub
inc
fisttpll
or
mov
xor
and
test
cmp
or
xor
mov
or
xor
pusha
ljmp
movaps
or
cmp
rolb
jb
dec
xchg
cmp
add
out
inc
push
and
push
mov
add
mov
xor
pushl
cmp
in
mov
cmp
jp
das
xor
loope
test
xor
push
xchg
outsb
mov
pop
lods
pop
js
les
sbb
cmp
xchg
push
ret
ficoms
ret
sbb
push
jecxz
repz
pop
repnz
xorb
loope
cmp
or
movsb
mov
or
ficomps
dec
push
loope
xchg
das
pcmpeqb
or
rcl
roll
clc
or
daa
jecxz
push
and
cmpl
xchg
xchg
std
mov
call
sarl
xchg
leave
jns
ds
xchg
inc
sbb
icebp
mov
or
shlb
rsqrtps
or
popa
idivb
test
and
rolb
dec
bound
lods
jle
mov
mov
mov
and
jbe
dec
cmpl
cmp
dec
ret
subb
icebp
jnp
bound
mov
xchg
and
out
in
cli
enter
jecxz
sub
add
js
jp
dec
aaa
or
mov
loopne
je
mov
jecxz
or
outsl
push
push
dec
jg
and
cmp
in
incl
outsl
call
popf
imul
call
rclb
inc
and
cmp
aas
sub
jnp
mov
xor
xchg
sub
shll
lock
pop
cmc
add
pusha
sahf
xor
in
xor
pop
cs
mov
fcomp
dec
test
xor
stc
or
sub
and
ds
daa
roll
sub
decb
loop
mov
daa
xor
lods
push
icebp
popa
stc
cmpl
movsb
mov
dec
and
lret
and
sub
cmp
jp
xor
leave
xchg
push
pop
out
push
add
adc
lock
jno
daa
cltd
pop
sub
out
out
in
loopne
or
rorl
dec
xchg
pop
or
out
das
subb
xor
adc
mov
sbb
push
mov
sub
cmp
ds
repz
repz
repz
repnz
leave
out
out
mov
dec
aad
pop
and
testb
fimuls
and
mov
adc
movsl
sub
cmp
push
fdivrs
dec
shll
xor
in
popf
test
imul
testb
and
mov
imul
fabs
loopne
xor
jbe
js
sbb
ss
mov
xchg
mov
imul
xchg
rorl
ficoml
mov
fistl
adc
jo
cwtl
lock
mov
aad
inc
mov
xchg
cmp
xchg
popa
mov
cmpb
daa
lock
cmp
xchg
into
jae
cmp
daa
inc
add
mov
sbb
jbe
push
mov
les
add
xor
push
sbb
mov
sbb
inc
inc
mov
js
jp
pop
adc
inc
inc
ja
cwtl
jb
cmpsb
cltd
cld
lahf
xchg
sbb
mov
add
add
into
ss
add
push
in
lods
mov
sbb
popa
add
cmp
cltd
sbbb
jo
rcr
pop
scas
loope
and
adc
or
sbbb
push
ret
and
cli
pop
push
xchg
adc
stos
pop
mov
dec
xchg
and
cs
rcrl
out
daa
mov
loop
icebp
add
loopne
adc
xchg
xchg
push
xchg
sbb
cmp
xchg
mov
cmp
jo
xchg
lock
mov
cmp
or
xor
and
out
cmp
daa
pop
add
das
adc
mov
sarl
flds
dec
js
addr16
imul
cld
mov
cld
cld
sub
aaa
dec
loope
jo
and
jmp
xchg
cmp
call
mov
or
std
or
push
inc
xor
pushf
pushf
mov
cld
adc
mov
xor
push
loop
pop
dec
movd
or
loope
imul
je
mov
sarl
loope
cmp
sub
mov
daa
push
sub
ss
in
mov
inc
pop
or
and
dec
xchg
test
ljmp
cli
lock
fwait
das
cmp
in
sbb
ds
popf
imul
shlb
inc
pop
jmp
pop
loope
int3
sub
inc
scas
sar
fs
lea
dec
xchg
out
mov
adc
and
or
xor
fiaddl
jbe
xchg
xchg
test
mov
notl
sub
inc
call
add
aas
cmp
or
pop
cmp
and
in
rcrb
test
movsb
adc
aas
fisubl
clc
add
jb
dec
sbb
adc
dec
lock
ja
xchg
mov
icebp
daa
outsb
test
mov
pop
mov
add
je
test
ret
test
push
jbe
dec
in
or
xor
test
xor
lods
addb
jbe
js
dec
jge
les
pop
es
and
dec
das
or
inc
jle
adc
jo
jmp
test
cmp
cmp
push
cmp
scas
loope
jmp
dec
xor
and
sub
add
popa
push
xor
leave
and
inc
test
xor
dec
dec
test
shrb
ss
subl
dec
fisubrs
gs
and
cmp
xchg
hlt
ret
push
cmp
nop
sub
xor
pop
std
add
mov
call
pop
push
imul
dec
sub
fsubs
and
xchg
jo
jbe
dec
inc
shlb
pushf
push
sbb
pop
cmp
andb
imul
jmp
popf
pusha
push
add
lock
lock
hlt
pop
mov
pop
jp
test
pop
lret
xchg
gs
mov
mov
iret
lret
leave
sar
ds
fldl
sti
clc
add
mov
ss
cld
inc
insb
cli
dec
and
jne
jg
loopne
out
out
in
mov
sbbl
aas
das
cmp
sub
shrb
clc
je
pop
sbb
ljmp
stos
xor
xchg
lea
aam
lahf
inc
add
pop
inc
xchg
mov
insb
push
xchg
subl
rclb
xchg
cmp
mov
dec
and
pop
mov
cmp
mov
loop
aaa
push
dec
xchg
popf
pop
xchg
test
cmp
xor
xor
sbb
mov
bound
sarl
cmp
jle
cmpb
daa
mov
jle
push
dec
xor
aam
add
cmp
lods
cmp
popa
pop
xor
mov
dec
int
pusha
sbb
mov
xchg
clc
mov
adc
sub
loopne
dec
xchg
push
in
mov
ljmp
mov
movsb
sbb
bound
jnp
mov
mov
mov
es
pop
cmpb
ss
imul
xchg
pop
leave
imul
push
popf
stc
add
push
push
fcompl
ret
adc
ror
pop
push
cmp
add
fs
mov
shrb
cmp
inc
out
inc
sub
dec
sbb
loopne
or
inc
dec
push
cmp
xchg
inc
jns
cmpb
mov
mov
ja
test
adc
mov
out
hlt
jae
adc
or
int
hlt
orl
rorb
ret
fstl
orb
cmpsl
fildl
pop
daa
push
test
rolb
xor
xchg
daa
xor
js
dec
mov
jg,pn
mov
xchg
sbb
inc
sahf
dec
adc
mov
mov
daa
filds
adc
mov
out
nop
mov
leave
in
cwtl
sub
inc
push
lods
scas
and
clc
or
hlt
sub
inc
xor
pop
daa
jp
in
roll
repz
call
sub
mov
je,pn
xor
insb
jecxz
repnz
ficomps
movsl
fcmove
lds
nop
add
hlt
or
xor
popa
subb
cmp
push
xchg
sub
sub
test
leave
push
sub
and
or
pop
loope
pushl
xlat
pop
or
mov
mov
xor
outsb
or
loope
adc
call
pop
adc
clc
jle
pop
pusha
sbb
xchg
in
dec
xchg
mov
movsl
cld
mov
sbb
ret
add
mov
dec
and
pop
not
sbb
cmpsl
xchg
mov
cmp
and
rcrb
pop
add
push
movsb
loop
xlat
lods
mov
pop
mov
ljmp
clc
xlat
cld
imulb
push
clc
or
sbb
aad
pop
fcmovu
xchg
call
push
xchg
shlb
inc
mov
int3
xchg
out
pop
push
inc
push
ja
gs
jge
push
movsl
push
dec
cli
aam
cli
jl
push
jmp
add
or
sahf
out
dec
pushf
stc
xor
icebp
adc
mov
ficoml
fisttpl
outsb
inc
pop
ficompl
negb
fildl
outsb
cmp
push
cmc
ljmp
sti
jnp
pop
mov
mov
sti
jnp
pop
mov
mov
mov
pop
mov
xlat
in
pop
in
sub
or
scas
jnp
dec
mov
je
lret
cmp
ss
mov
es
scas
stos
ror
es
test
loopne
adc
aam
sahf
sub
in
scas
icebp
adc
pushf
idivb
rcrb
lahf
mov
jp
jbe
ja
sahf
ficoml
loop
aam
jno
fidivrl
mov
cmp
pop
inc
push
ficoml
bnd
xor
std
scas
icebp
ss
scas
icebp
imul
gs
je
cmc
imul
imul
int3
popf
sarl
std
movsl
xchg
xchg
push
enter
lods
xchg
aas
cmp
cmp
adc
adc
push
cmp
adc
mov
pop
sub
rorl
mov
dec
rcrl
in
sub
mov
push
dec
cs
mov
jnp
dec
cld
pop
stos
rcrl
stos
dec
mov
inc
mov
jle
rorl
xor
fstpt
cmp
mov
fidivrs
out
jg
mov
iret
je
out
mov
push
sub
xchg
push
dec
sub
dec
test
mov
aas
dec
dec
fidivrs
jmp
sub
dec
bound
add
cmp
push
mov
adc
dec
loop
mov
jo
dec
push
or
pop
xor
or
test
and
out
dec
ficomps
mov
shlb
scas
rorl
std
aas
fildl
jecxz
in
cmp
mov
mov
ljmp
pop
in
fisubrl
rcrl
dec
repnz
add
lods
dec
lods
cmp
lods
cmp
in
das
mov
add
mov
mov
push
mov
dec
lret
cmp
sbb
out
lret
sub
dec
cld
or
shrb
push
mov
iret
jb
jg
aam
add
movsl
ljmp
sti
dec
lods
push
scas
shlb
pusha
in
sub
mov
mov
sub
scas
mov
lret
fdivl
imul
lock
shrl
insb
rorl
lods
cmp
add
fst
sub
jmp
cmp
cld
inc
inc
shrb
and
adc
xor
sbb
adc
aad
push
or
aam
daa
in
xchg
leave
cmpb
clc
fsubs
dec
pop
enter
in
sub
xchg
pop
adc
push
add
leave
pushf
rcrb
movsl
lds
jno
pop
stos
lds
push
dec
imul
push
cmp
mov
add
lret
add
sahf
cwtl
out
sub
and
cmp
mov
ret
jle
pop
pop
mov
push
jmp
emms
xchg
xor
mov
repnz
push
xchg
jo
aas
enter
xor
test
out
pinsrw
mov
ret
filds
es
cmp
ret
scas
ret
mov
std
nop
push
or
jb
dec
and
mov
sarb
jb
je
pop
mov
mov
ss
xchg
cmpsb
dec
nop
fld
or
jae
cmpb
sti
or
or
cmp
pop
cmp
andb
std
inc
xor
push
mov
outsb
xor
sbb
adc
xchg
pop
pop
notb
add
rorb
mov
pop
inc
jl
int
push
mov
add
sbb
sub
cmp
push
pop
mov
data16
loopne
jnp
test
cld
mov
push
daa
roll
xchg
out
in
loopne
cli
cld
add
sbb
xchg
js
cmp
aas
addr16
jne
mov
mov
fucom
ds
cld
push
cmp
adc
mov
push
sub
sbb
xchg
push
mov
rcrb
rcll
cmp
xchg
inc
in
call
pop
ret
leave
sahf
in
mov
xor
push
aas
mov
adc
mov
cld
cli
leave
xchg
subl
lret
lock
sbb
xor
mov
aaa
imul
aad
push
out
std
popa
jne
jmp
pop
out
mov
sbbb
pop
cmp
daa
flds
aas
ljmp
inc
inc
xor
xchg
test
inc
nop
ss
iret
push
inc
adc
scas
or
fiadds
repnz
cwtl
pop
xchg
das
aas
pop
mov
sahf
cli
jb
test
pop
xchg
subb
aas
and
cmc
mov
mov
and
rcrb
js
dec
lods
dec
fidivl
lahf
sti
xchg
xor
addr16
cmpsl
stc
les
push
mov
pop
cmp
imul
sub
mov
inc
popa
jb
sub
cmp
and
jp
fs
push
rcrl
and
push
jbe
dec
mov
cld
in
sbb
pop
dec
dec
dec
cmpsl
xor
in
mov
adc
cmpl
cmpsl
mov
in
stos
vmread
jmp
mov
mov
les
xchg
inc
subb
jle
jle
jle
jle
adc
scas
pop
ljmp
into
push
push
jecxz
repz
loop
out
inc
out
fs
cld
cli
cld
mov
dec
and
pop
xor
lods
sub
mov
ret
sbb
pusha
pop
outsl
addb
rclb
mov
jecxz
out
or
adc
sbb
jp
ss
mov
nop
insb
dec
mov
sub
inc
mull
mov
push
lcall
mov
lods
adc
call
xor
loop
sub
sub
push
and
sbb
sub
add
cmp
das
and
cmp
int3
aam
mov
mov
mov
mov
push
sbb
and
push
cmp
cmp
daa
pusha
push
int3
add
xor
lock
push
pushf
fildll
dec
pop
sarl
sub
cmpsb
out
sub
mov
or
jle,pt
push
cmpsl
aas
mov
ret
lds
lock
scas
and
lcall
cmp
jge
lds
je,pt
jbe
js
imul
lret
pop
jne
in
mov
das
push
pushf
repz
add
or
sub
fucomp
adc
rorb
into
mov
mov
imulb
stos
mov
std
pop
loop
and
mov
icebp
inc
aam
xchg
popa
mov
pop
or
loopne
shll
pop
adc
mov
ret
test
repz
out
mov
jnp
pop
addr16
xchg
insl
stos
and
ret
clc
out
loope
xor
insb
add
cs
popf
pop
xchg
addr16
mov
lods
movsl
inc
inc
or
jb
pop
inc
and
pop
clc
mov
dec
push
faddl
sahf
aaa
cmp
insb
cmpsb
shll
or
and
daa
adc
andl
sub
mov
dec
or
cmp
push
mov
leave
es
mov
ljmp
and
jo
xor
and
mov
sbb
and
xchg
jo
xor
outsl
cmc
pop
sarb
push
and
push
sbbl
mov
ja
ds
stc
cmp
daa
inc
add
jo
ror
ds
daa
lock
hlt
sbb
lcall
xor
xchg
inc
sbb
popf
adc
fidivrs
lock
lods
mov
sub
cmove
in
pusha
inc
add
pop
mov
in
push
mov
repnz
in
jmp
mov
sbb
faddl
jno
cltd
loope
push
mov
inc
cmp
iret
stc
leave
pushl
out
and
shlb
sub
repz
add
js
push
maxps
mov
xor
cmp
in
xchg
lock
and
movsl
adcb
sahf
pop
push
push
xchg
ds
dec
mov
stc
cmp
lock
push
jb
jns
xchg
push
mov
ret
repnz
lock
push
mov
out
xchg
dec
mov
sahf
lret
push
iret
lahf
rcrl
xlat
lahf
fistpl
out
jmp
mov
sti
iret
dec
subl
cmp
or
cmp
addl
jno
cmp
movsl
add
xor
mov
bound
inc
inc
test
and
xchg
in
cltd
xchg
bound
iret
js
cmc
sub
and
outsb
shrb
mov
mov
fcoml
cmpb
in
je
add
sub
leave
pop
jmp
push
sbb
mov
je
mov
lods
sub
cmp
daa
and
xchg
xchg
cmp
imul
xlat
nop
mov
je
pop
icebp
jecxz
xor
add
add
xchg
mov
inc
out
push
pop
dec
mov
add
cltd
dec
hlt
adc
jbe
pop
loopne
repnz
xor
fwait
lahf
mov
ficomps
jne
jnp
xchg
pop
jl
das
movsb
test
dec
loopne
jle
nop
mov
dec
stos
add
and
sub
mov
movsl
loope
jmp
outsb
sub
add
xchg
out
dec
lock
xor
stc
add
in
pop
lock
ja
jle
mov
lahf
xchg
pop
dec
push
lods
cwtl
cmp
cmp
hlt
js
shr
and
cli
repnz
hlt
sbb
jg
dec
std
xor
mov
mov
loop
aas
mov
shll
lahf
aad
loop
out
pop
out
leave
bnd
movsb
imul
das
xchg
push
ljmp
mov
or
and
push
shlb
icebp
cmp
adc
sub
sbbl
sub
movsb
iret
jle
aas
test
rorl
xchg
repz
jae
adc
mov
xchg
jle
dec
and
xchg
outsb
ret
faddp
loop
ja
add
leave
jb
sub
add
inc
dec
arpl
adc
pop
lods
call
insb
nop
push
je
dec
xchg
pop
cmp
xorb
cmp
hlt
push
cld
test
xchg
sbb
or
mov
mov
jp
pop
enter
jne
lahf
dec
cmpsb
mov
sbb
fdivl
adc
mov
fwait
call
pop
adc
enter
stc
xor
negb
cmpsb
lock
test
xlat
sbb
add
dec
sbb
jge
popf
ds
das
push
dec
mov
gs
mov
and
pop
push
jp
dec
inc
je
push
stos
pop
lret
mov
cmpl
or
rclb
daa
and
loope
jmp
sub
jbe
dec
outsb
sbb
sti
or
pop
inc
js
add
bound
mov
push
lods
inc
je
cli
jecxz
jp
cmp
shlb
clc
dec
das
cmp
out
mov
daa
xchg
inc
scas
incl
jbe
cmp
nop
lock
sbb
push
add
ret
fsub
mov
pop
pop
pushf
mov
sbb
cmp
je
fs
adc
add
mov
pop
sub
adc
inc
inc
mov
movsb
xor
subb
pop
sbb
jp
inc
xor
bndldx
xchg
jo
jle
dec
out
ljmp
push
das
mov
mov
adc
rorb
jbe
push
jl
push
mov
sub
dec
sti
ret
jbe
adc
loop
inc
xchg
cmp
jle
loopne
pop
loop
pop
movsb
daa
das
inc
cld
test
filds
inc
sub
push
dec
fimull
test
popf
call
jae
mov
subb
mov
dec
mov
push
xchg
cld
jbe
sahf
ret
ret
stos
dec
stos
mov
mov
js
jb
dec
adcb
clc
decb
mov
mov
out
jl
pop
pop
or
mov
jbe
dec
stc
inc
or
cmp
out
dec
stos
mov
xchg
pop
negl
arpl
and
xchg
pop
bound
or
sub
xor
pop
jns
cli
pop
lahf
fwait
xchg
mov
xchg
out
in
repz
rclb
sub
into
icebp
stos
stc
mov
cld
aas
lret
adc
lock
idivl
mov
mov
lret
and
adc
pop
push
data16
cmp
addl
and
sub
in
test
sahf
adc
xor
les
movsb
test
rcrl
into
popf
add
xchg
sbb
pop
adc
push
stos
jl,pt
xchg
dec
sar
fstps
or
adc
inc
clc
rorb
fwait
stc
xor
jmp
scas
sbb
inc
das
or
jle
js
pop
xchg
loopne
mov
xchg
push
cld
dec
pop
test
add
or
in
rorb
jo
cmp
sub
pop
sbb
cmp
popf
sub
out
mov
jge
aas
movsl
lods
inc
scas
repz
or
aas
clc
test
add
pop
and
out
scas
dec
jmp
dec
rol
rolb
lahf
icebp
mov
or
addr16
insl
mov
loopne
in
call
stos
hlt
mov
mov
pop
and
push
mov
mov
push
cld
xchg
or
fadds
fcomps
je
adc
xor
cmc
add
and
lea
shl
or
aaa
xor
inc
sub
cmp
sub
inc
lcall
call
dec
inc
mov
lret
lret
sub
hlt
fistpll
and
insb
repnz
insb
hlt
fcompl
push
xchg
call
jmp
push
push
insl
push
jle
es
fmuls
enter
push
add
scas
dec
not
push
pop
pop
adc
loopne
outsl
hlt
jp
push
pop
mov
mov
call
jb
fisubrs
jle
jle
pop
adc
in
mov
xchg
icebp
stos
or
fs
test
or
cmp
popf
jb
xchg
or
lahf
xchg
cmpsl
test
fxch
fildll
decb
data16
dec
pop
mov
cli
or
ja
push
stos
jnp
adc
add
movsb
jbe
dec
pop
or
jne
pop
pop
mov
test
xor
test
das
jnp
clc
pop
mov
pop
enter
mov
cmp
das
push
inc
mov
mov
popf
orl
mov
pop
sti
mov
xor
les
dec
lock
data16
adc
test
mov
pop
add
and
lock
push
lock
cmovb
jp
out
fwait
xchg
add
mov
jbe
adc
out
push
les
enter
jb
jns
cltd
add
push
cmp
xchg
pop
mov
ss
jnp
lock
cmpsl
xchg
lds
cmpsl
mov
dec
mov
ret
fmull
xor
pop
inc
xor
sbb
sub
pop
outsb
call
ljmp
shll
ja
clc
ds
and
xchg
or
fld
push
aam
or
sub
inc
adc
mov
mov
lock
xor
addb
xchg
mov
xchg
add
adc
and
inc
mov
dec
xchg
je
aad
xchg
cld
push
mov
adc
cmp
daa
push
add
sub
lahf
add
stos
add
repz
lock
xchg
sub
bound
or
pusha
sub
xchg
cs
add
mov
inc
out
pop
ljmp
lock
hlt
sti
xchg
xchg
sahf
incl
arpl
mov
jbe
pop
add
fsubrs
cltd
add
cmpl
ficoms
paddsb
popf
aas
adc
dec
xchg
js
je
pop
mov
cmp
sbb
outsl
cmpl
adc
or
inc
push
popa
or
cmp
and
inc
push
subb
ret
inc
std
xor
and
ret
adc
daa
loop
push
xchg
push
inc
lahf
dec
pop
jbe
popf
xchg
mov
xor
dec
and
dec
dec
test
ret
les
xor
in
call
sub
mov
shr
les
js
add
enter
incl
lret
mov
das
adc
inc
mov
ljmp
sub
stc
mov
dec
and
push
cmp
xor
xor
cld
mov
pop
jmp
push
dec
sahf
sub
ret
dec
sub
daa
xor
jae
jns
test
repnz
pop
xchg
icebp
jp
ljmp
push
inc
rorl
or
rcl
sub
mov
pop
ljmp
ret
ds
leave
push
ljmp
and
je
push
or
or
xor
xor
fmull
in
rolb
push
mov
test
jbe
je
xlat
lcall
and
sub
xchg
inc
es
outsb
lcall
xchg
mov
dec
push
mov
xor
pop
mov
fcoml
imul
jmp
cli
sub
test
adc
je
andb
stos
test
cmp
out
or
push
rclb
or
je
xchg
test
test
mov
cld
inc
mov
adc
xchg
or
pop
pop
outsb
adc
rcr
push
mov
call
cmp
lods
and
or
test
and
inc
in
push
divps
sbb
ret
scas
rol
jecxz
repnz
dec
pop
push
icebp
mov
mov
cmpsb
xchg
test
mov
out
sub
cmp
cmp
inc
sar
jl
sub
stos
xorb
js
js
jp
jl
pop
push
orb
inc
push
cmpsb
add
or
inc
loope
pop
sub
fimull
stc
aad
or
fisubrl
cld
loopne
jb
hlt
ljmp
mov
bnd
mov
std
outsl
aas
ljmp
jle
jle
mov
jb
pop
sbb
cmp
and
or
addr16
jle
jle
pop
mov
or
pop
loope
in
loope
cmp
cmp
jg
mov
mov
sub
jmp
loop
je
push
movsb
mov
add
cmp
test
sub
mov
pop
enter
call
dec
cmp
call
or
loope
scas
subb
pop
movsb
inc
fs
mov
adc
mov
popf
into
sbb
and
mov
sahf
pop
dec
ret
cmp
outsb
jne
jle
jle
pop
xchg
test
xchg
stos
pop
lret
xchg
or
push
sub
jbe
cmp
pop
outsl
ret
rol
pop
sub
stos
jo
pop
adc
adc
dec
cmpsb
cwtl
pop
repnz
and
es
adc
and
aas
stc
pop
cmp
fs
mov
mov
or
push
adc
cmpsb
das
adc
cwtl
cs
dec
popa
push
mov
lods
js
in
sbb
cmp
mov
scas
je
jbe
jmp
dec
sub
movsb
je
enter
testl
jl
mov
mov
in
xchg
xchg
mov
movb
mov
cli
daa
in
call
xor
das
scas
popa
or
and
inc
test
cmp
daa
int3
add
and
dec
je
loope
sub
xchg
jnp
push
enter
jle
cmp
ret
movsl
push
add
adc
imul
and
out
inc
stos
imul
pop
or
jmp
loope
or
daa
push
orb
xchg
loop
inc
test
xor
lret
mov
jb
jbe
testl
cmp
cmpsb
stos
je
test
xorb
in
call
cmp
insl
and
xor
pop
daa
aas
sbb
adc
xchg
clc
mov
rcrb
cmp
insb
jbe
ror
or
leave
cmpsb
int3
repz
daa
xor
sbb
popf
ss
mov
add
mov
test
cltd
mov
cmp
adc
popa
in
jl
sub
jp
push
cmp
xchg
bound
leave
pushf
lea
or
lock
mov
or
sarb
inc
mov
popa
lcall
negl
mov
mov
shr
cli
fucom
sub
inc
loop
into
pop
fldl
cld
int3
adc
mov
repz
das
xor
push
stos
mov
bound
lahf
lds
jmp
dec
es
les
mov
or
pushf
sub
cmp
mov
movsb
movsl
incl
fwait
mov
ds
xor
or
add
inc
inc
clc
mov
push
aas
mov
test
clc
dec
add
sub
jbe
dec
jge
fs
clc
iret
cld
fdivrp
cvtpi2ps
dec
rcrb
movd
ret
sub
cli
adc
loope
jle
mov
jns
mov
sub
fimuls
lods
inc
cs
add
push
loopne
mov
mov
add
movsb
call
fisubrl
incb
imul
lret
and
daa
xchg
inc
orb
je
jecxz
and
mov
lcall
lahf
int
rol
data16
imul
jbe
ret
je
sbb
loopne
pop
inc
add
sub
mov
mov
jle
jle
pop
add
inc
mov
xchg
pop
xor
gs
repz
rorb
mov
and
scas
or
jne
xchg
movsb
loopne
aam
cs
xor
sub
xchg
xchg
mov
xor
xorb
pop
mov
lods
xor
and
popf
mov
loop
rclb
pop
add
and
jb
mov
call
mov
and
or
mov
pop
dec
push
xor
inc
into
imul
mov
rorb
adc
cli
dec
outsb
loopne
in
mov
xchg
test
jle
jp
std
mov
cmp
or
cli
push
add
and
xchg
ret
adc
jae
mov
sub
sub
sub
mov
je
dec
jmp
sub
or
hlt
jbe
aas
sub
ret
jo
pop
xchg
ljmp
push
orb
clc
add
fst
lret
sahf
xchg
popa
pop
cmp
inc
sub
push
clc
mov
leave
movq
dec
lahf
jb
xchg
bnd
or
mov
or
jae
mov
jmp
cmp
imul
mov
pop
pop
pop
ljmp
mov
lods
jmp
loope
movsl
cmp
or
mov
call
outsb
daa
test
cmpsb
hlt
or
out
in
test
cmp
and
adc
pop
pop
xchg
pop
push
mull
ss
or
shll
pop
lcall
iret
std
leave
push
daa
pop
int3
inc
shll
test
mov
pop
mov
je
jbe
pop
out
and
lcall
js
cmp
lcall
xchg
mov
out
push
and
icebp
je
mov
test
mov
xor
out
or
sti
mov
popf
adc
cmp
sub
mov
fldcw
adc
xchg
add
decb
pop
aam
push
pop
xchg
ret
xchg
mov
fnstcw
sbb
or
jle
pop
cwtl
push
mov
js
dec
sbb
mov
or
clc
or
pop
gs
mov
adc
jmp
sbb
mov
jo
dec
jle
out
xchg
lods
and
ljmp
aas
xchg
adc
js
mov
jle
jle
jle
sbb
xor
mov
dec
push
xchg
stos
out
out
in
loopne
jg
jecxz
ljmp
sbb
ss
and
mov
scas
pop
mov
clc
fsts
adc
dec
int3
or
sub
scas
sub
jo
cmp
or
cmp
mov
sub
sahf
cmp
or
dec
cmp
lcall
or
insb
stos
pop
lods
push
jle
or
jbe
shlb
push
adc
push
daa
je
in
test
and
xor
jmp
dec
sbb
add
dec
lret
aam
lock
cld
or
cli
pop
cmp
hlt
xchg
mov
rclb
outsl
mov
or
int3
push
lock
les
and
pushf
gs
push
roll
xor
pop
and
inc
pop
xchg
jl
leave
jb
sub
add
mov
hlt
push
sbb
popf
pop
adc
or
repnz
test
push
lahf
or
shrb
and
int3
movsb
insb
pop
out
push
inc
cmp
mov
adc
repnz
dec
aam
aaa
stos
mov
dec
pop
push
adc
inc
vphsubbw
mov
mov
pop
ds
aas
xchg
and
mov
cmp
mulb
pop
cmp
cmp
daa
adc
sbb
icebp
jp
fcoms
jl
add
push
xchg
jbe
pop
lcall
mov
push
dec
push
loope
inc
and
dec
xchg
test
jno
pop
jns
jge
cmp
cld
xchg
cld
std
cld
popf
mov
dec
pop
push
cmp
cmp
push
or
leave
imul
mov
push
decl
adc
imul
loope
mov
mov
fisttps
add
movb
jb
je
dec
repz
push
sub
xor
xchg
mov
sub
dec
jmp
push
cld
jp
sahf
sbb
enter
loopne
xchg
add
stc
shrl
sub
pop
aas
dec
mov
aas
pop
subb
jno
jne
or
cld
cmp
jo
mov
lcall
ljmp
in
test
test
cmp
and
loopne
cltd
cld
fidivl
iret
dec
mov
repnz
jo
test
sbb
xchg
cmp
sbb
xchg
mov
jle
push
into
lcall
sbb
lock
and
jl
dec
fdiv
sti
clc
adc
mov
pop
mov
mov
mov
cmp
idivl
call
or
mov
rolb
call
mov
and
sub
push
jge
cld
sbb
test
daa
push
fsubrp
adc
mov
push
scas
movsl
popf
pop
pusha
mov
mov
hlt
jle
jle
dec
or
xchg
dec
push
icebp
nop
loop
mov
sar
xchg
test
dec
out
mov
push
jecxz
nop
lock
push
popa
xor
mov
mov
out
ret
imul
jle
add
in
mov
mov
xor
pop
test
jns
pop
aas
fisubl
adc
jp
push
data16
pop
outsb
and
jp
mov
stos
cmp
push
das
and
dec
test
ds
add
pop
dec
outsb
ret
testb
xchg
dec
fs
and
shlb
lret
lock
mov
decb
mov
inc
mov
jle
dec
pusha
sbbb
cltd
rorb
stc
popf
jle
jo
pop
sbbb
leave
loopne
sub
dec
decb
jb
pop
or
mov
push
stos
and
arpl
xchg
mov
adc
dec
xchg
clc
pop
xchg
push
cwtl
cmp
mov
dec
mov
xor
pop
push
and
or
adc
xchg
jo
mov
bound
push
js
jle
cld
jne
xchg
cmp
jmp
out
orb
pusha
jp
dec
les
cmpb
xchg
fs
popf
add
dec
mov
clc
xchg
push
loopne
or
daa
push
shlb
dec
imul
popf
pusha
cld
sbb
jb
pop
nop
cli
add
mov
ret
clc
xor
dec
aas
shll
add
pop
ss
cmp
inc
xor
xchg
xor
ret
add
sub
and
mov
pop
fucom
pop
sti
popf
pop
aam
sbb
rcrb
popf
pop
enter
cmpsb
mov
mov
aas
xchg
aas
mov
test
pop
les
lods
dec
add
dec
cmp
loop
inc
adc
or
loopne
in
adc
add
xor
call
mov
dec
xor
ljmp
lret
lahf
aad
in
mov
aas
shlb
fmuls
enter
push
and
sahf
mov
jb
add
cwtl
rolb
push
in
lock
push
lahf
shl
fstps
je
and
leave
in
clc
adc
cmp
mov
pop
es
adc
call
xor
push
push
fadds
out
pop
sub
jo
fmuls
adcl
insb
shlb
pushf
jle
dec
push
lock
mov
ficomps
push
lahf
imul
dec
into
cmpsl
movsb
repnz
les
mov
dec
es
subb
dec
aad
or
inc
ret
out
mov
cmp
in
lcall
dec
cmp
out
je
pop
add
adc
xor
and
adc
inc
mov
and
das
xor
cwtl
and
pop
addl
pop
lods
popa
out
lret
jp
hlt
out
rclb
cwtl
dec
mov
movsb
add
or
add
or
sub
inc
pop
nop
js
jg
pop
sahf
lahf
popa
push
scas
stc
mov
psubd
ret
xchg
jmp
cmp
sti
lock
int3
lods
and
sub
push
js
xchg
lock
sar
xchg
shrb
adc
sub
jmp
popf
jge
adc
pop
test
lds
adc
mov
movsl
sbb
data16
ret
stc
xlat
repnz
cmp
lods
stos
fnstenv
and
mov
in
pop
mov
jo
jle
adc
mov
or
mov
mov
jnp
clc
mov
pop
xchg
push
sub
add
bnd
movsb
fsub
cmp
in
pushf
pusha
push
shr
daa
xlat
rcr
leave
xchg
outsb
or
cmp
and
in
xor
push
jo
iret
or
popa
and
cmp
xor
in
sub
out
xor
test
or
pop
fdivs
test
pop
fimull
ljmp
sub
push
enter
push
dec
out
mov
nop
pop
mov
or
cmove
loopne
sub
aas
push
das
pop
add
jo
cs
test
mov
cwtl
jle
dec
repnz
jle
pop
pushf
xorl
push
ljmp
je,pt
jbe
js
dec
lods
mov
ret
daa
sbb
xor
ss
addb
cld
int
out
jb
add
test
pusha
dec
add
or
add
xchg
roll
jne
test
cwtl
clc
pusha
cmp
cmp
push
mov
test
repz
orb
cmp
jge
nop
jb
ss
lods
dec
mov
sub
movsl
or
mov
and
jp
movsb
push
xor
pop
xchg
es
mov
adc
pop
insb
jmp
cli
rorl
sbb
in
inc
lock
hlt
jge
pop
adc
loope
xor
mov
rorl
dec
xor
js
lahf
jo
mov
push
repnz
mov
dec
sbb
cmp
inc
push
xchg
sub
or
adc
das
dec
repz
scas
popf
fisubs
ret
fldl
push
push
scas
lods
inc
stos
repz
and
stos
or
fadd
jbe
js
adc
js
data16
in
jecxz
inc
lret
inc
pop
test
hlt
mov
cld
shlb
push
xchg
add
jle
dec
inc
fdivr
divb
cmpl
int3
or
adcb
mov
xor
mov
push
lock
mov
fwait
xchg
or
test
and
lock
out
in
scas
push
push
cmp
pop
js
and
sbbb
adc
shr
fnstenv
pop
pop
in
les
sub
jnp
je
jle
adc
rcl
daa
inc
or
add
xor
mov
xchg
mov
pop
test
neg
sbb
loopne
pop
call
xchg
pop
in
cli
xchg
adc
in
mov
daa
adc
sbb
jno
outsl
push
mov
popa
fistpll
jl
outsb
xorl
inc
pop
mov
xor
out
hlt
cmp
cld
mov
mov
cld
shll
repnz
loope
add
ret
push
in
pop
mov
cs
daa
into
lds
gs
subb
or
fadds
cmp
jg
xchg
lret
mov
dec
cli
or
jbe
dec
lret
or
xor
std
xchg
bound
cld
pop
clc
push
iret
enter
flds
call
cmp
pop
and
icebp
addr16
scas
fldcw
dec
test
jge
jle
push
shll
cmp
pop
xchg
fisubl
mov
es
call
stos
lock
jecxz
add
xor
xchg
jp
aaa
cmpsb
cmp
pop
divb
cmc
stc
mov
inc
fdivs
xor
add
xor
lcall
xchg
movsb
loopne
mov
lahf
loop
adc
dec
jmp
dec
loope
push
or
fstpt
aas
cmp
mov
push
in
xchg
test
dec
clc
xor
xchg
insb
dec
mov
push
imulb
adc
test
cld
sar
fnstcw
pop
cmc
xchg
cld
mov
push
push
inc
push
dec
mov
bound
jo
ja
or
leave
inc
sbb
shrl
push
sub
stc
xchg
push
loop
cmc
cltd
or
inc
aam
and
clc
adc
fadd
push
inc
mov
dec
jnp
push
push
sub
mov
shl
imul
stc
std
jle
and
push
ss
movsl
xchg
les
or
mov
push
lock
push
pop
nop
xchg
mov
xchg
mov
add
xor
call
push
hlt
lahf
sti
add
fiaddl
sbb
cmp
mov
push
inc
lret
jnp
dec
invd
and
adcl
loop
dec
enter
add
adc
add
xor
mov
and
repz
repz
repz
rep
repnz
xor
jo
jle
xchg
jmp
dec
pop
in
or
fidivrs
sbb
xchg
inc
lock
mov
shll
dec
cld
xor
jmp
push
sbb
dec
sbb
das
xchg
jbe
fists
imul
pop
cmp
pop
pop
movsl
and
xchg
add
push
add
insb
lock
xorb
movsb
bound
add
and
insl
or
decb
mov
push
mov
cli
ret
dec
mov
bound
dec
jmp
sbb
ljmp
mov
mov
js
dec
jg
aam
dec
mov
icebp
cmc
and
aaa
xchg
pop
inc
jnp
sub
iret
leave
not
adc
jmp
mov
xor
push
leave
jo
hlt
pop
pop
in
fdiv
jecxz
pop
movsb
cli
jl
xchg
popa
jle
sub
dec
outsl
mov
mov
testl
ret
mov
adc
mov
adc
loope
pop
cmp
push
push
testb
xor
cmp
sbb
call
dec
cmp
outsl
andl
mov
ret
jmp
push
stos
test
sub
or
daa
mov
and
xchg
test
stos
pop
sub
mov
fdivs
sub
clc
cmpsl
fldl
subl
out
fsin
test
sub
ss
and
or
ret
sub
fcomps
xor
sub
idivb
push
mov
ret
cmp
lret
sub
cmp
aaa
lret
fisttpll
ljmp
mov
cmp
jns
xchg
push
ljmp
or
dec
clc
xchg
daa
push
test
decl
popf
aam
lahf
jmp
icebp
in
insb
or
xor
popa
pop
pop
loope
imul
sub
ret
ror
add
sbb
mov
lock
pminsw
or
shr
imul
cmp
nop
dec
mov
and
stos
or
mov
ljmp
dec
daa
mov
rcl
in
rcrb
jo
adc
cmp
orl
push
jo
pop
mov
sub
loopne
cmp
xchg
push
outsb
cmp
adc
rorb
xchg
nop
push
xor
lds
jle
xchg
daa
jge
out
mov
cld
cmp
mov
pop
add
and
loopne
les
xlat
pop
inc
xchg
inc
xchg
mov
dec
jo
dec
jno
ret
mov
push
and
xor
xor
aas
xchg
cwtl
xchg
push
or
divl
daa
outsb
shll
loope
cmp
cmp
and
inc
loope
jmp
mov
or
sbb
gs
jbe
cmpsb
clc
mov
ljmp
scas
or
sub
jp
loope
jmp
mov
sbb
mov
andb
andb
push
daa
lock
adc
mov
inc
nop
push
js
sub
xchg
xchg
out
shl
xchg
outsb
and
cwtl
sub
inc
inc
daa
cmpsb
inc
ret
mov
imul
lock
cld
inc
push
xor
adc
repnz
loopne
push
in
call
aam
movb
dec
outsb
cmovl
loop
stc
dec
pop
push
dec
dec
mov
cmp
ja
ret
leave
fsubr
sub
mov
imul
ss
clc
add
int3
add
outsl
or
jnp
add
shrl
sub
test
cld
hlt
dec
clc
and
and
fsts
add
js
dec
cmc
cld
jb
pop
sub
sarl
jmp
mov
fidivl
xor
ret
faddp
inc
xor
jae
mov
jp
test
mov
and
ret
fcoml
lock
mov
aam
or
cmp
inc
push
cld
push
mov
xchg
jmp
lods
call
mov
xor
lds
aaa
mov
xchg
push
es
cld
out
and
fs
pusha
xchg
jno
aas
shll
sub
imul
cmpsb
bound
push
ret
fs
dec
mov
ljmp
sbb
dec
shl
push
lods
insl
popf
inc
es
jecxz
and
lods
jle
push
sti
pop
add
int
out
or
mov
js
pop
test
and
xor
xorl
jo
js
dec
xchg
mov
sub
xchg
dec
dec
dec
lock
out
mov
xchg
shr
out
or
push
pop
nop
push
data16
and
subb
es
pop
adc
push
das
in
ds
xchg
lret
and
xor
xlat
inc
push
jbe
js
pop
pop
xor
enter
adc
ret
cld
adcb
loopne
pop
in
bound
sar
xchg
lock
add
repnz
and
cli
test
loop
pop
shll
cld
out
roll
sub
inc
ret
std
in
loopne
enter
dec
ret
in
loop
hlt
add
cmpsl
xor
mov
sub
sarb
cmp
inc
scas
cs
adc
add
jl
mov
sub
mov
dec
sub
jp
dec
add
sub
cmp
aam
js
pop
jp
dec
mov
add
and
inc
xchg
cli
or
into
add
cmp
xchg
mulb
push
lods
mov
and
mov
jl
mov
jl
imul
cmp
jle
call
fucomi
xchg
ds
lcall
loope
js
aas
hlt
sub
testb
cmp
das
jp
inc
ror
outsb
ret
js
js
jp
jl
pop
fucomp
inc
repnz
stc
loope
and
jnp
pusha
add
dec
inc
movsb
mov
xchg
rcl
mov
in
loopne
sub
inc
mov
add
xor
loope
jp
push
or
dec
mov
inc
rclb
out
pop
mov
pop
jns
incb
pop
mov
dec
ljmp
adc
data16
stos
in
cmp
or
adc
mov
push
pushf
xchg
xchg
mov
pop
dec
push
xor
jp
dec
clc
xchg
das
cmp
cld
popf
adc
movsb
pushf
test
loopne
or
add
xor
lock
repnz
sbb
subb
sbb
mov
xor
dec
leave
adc
push
cmp
repnz
test
add
cmp
aad
sub
cwtl
das
lds
sbb
xchg
inc
mov
jl
rol
fcmovbe
and
mov
cmp
or
sub
scas
xchg
test
clc
jb
xor
cmp
mov
mov
in
inc
add
mov
js
cwtl
stos
push
xchg
outsl
loopne
mov
and
data16
loop
and
and
inc
xchg
or
or
outsb
inc
mov
ss
ds
aam
sbb
xchg
inc
add
movsb
mov
mov
data16
adc
sub
push
adc
js
pop
mov
fdivl
xchg
dec
cwtl
repnz
sub
adc
leave
repz
xchg
nop
pop
pushf
pusha
ds
lahf
add
and
jmp
dec
lock
imul
push
mov
sete
leave
add
dec
mov
loope
mov
sub
sbb
clc
fimull
lock
mov
dec
out
xorl
pop
xchg
je
jbe
pop
cs
pop
push
mov
js
ja
mov
and
mov
jns
jo
cld
xchg
nop
adcb
mov
and
jno
inc
or
arpl
fsubrs
mov
cmp
loopne
sbb
dec
and
fidivl
fmul
push
pop
xchg
push
mov
cmc
push
xchg
test
dec
aaa
sarl
pop
dec
stos
add
test
movsb
cmpsl
mov
aam
cmpsl
or
dec
sbbl
pop
shrb
test
inc
xor
or
mov
ret
mov
aad
jp
dec
pop
or
ret
pop
mov
inc
adc
aas
pop
movsl
lods
jo
js
xchg
jnp
sub
scas
add
adc
pop
daa
and
cld
sti
jmp
popa
repnz
hlt
add
xor
call
jle
pop
fisttpl
fsub
js
dec
cmc
ret
push
xchg
les
or
add
pop
mov
daa
fisttpll
andb
or
xchg
stc
adc
or
loope
sub
xchg
pop
daa
cmc
pop
add
pop
nop
xchg
push
in
adc
fiadds
or
cwtl
push
mov
cld
inc
add
cmp
test
push
jp
jno
xor
adc
loope
inc
les
xchg
dec
push
loopne
lea
or
cmpsb
pop
repnz
dec
push
sbb
scas
pop
jmp
loope
lock
cmp
andb
scas
pop
dec
inc
sub
loopne
rcrl
dec
in
push
mov
pop
jo
add
lcall
cmp
cmp
jo
je
pop
mov
data16
enter
rorb
in
orb
mov
outsl
and
jbe
pop
test
aam
movl
lds
or
push
sbb
pop
movsb
push
loop
mov
fcmove
outsb
or
dec
push
enter
jae
loop
push
mov
in
test
pop
adc
xchg
js
or
and
inc
sub
push
stos
andl
mov
dec
jl
pop
mul
push
dec
mov
ret
or
push
sub
cmc
es
inc
addb
pop
cmp
mov
xchg
xor
jo
mov
or
je
jbe
into
test
xchg
adc
lret
loopne
lahf
les
xor
pop
dec
in
lods
das
jl
mov
jp
mov
shlb
in
aaa
mov
xchg
repz
cltd
mov
xchg
push
daa
jo
dec
or
jo
adc
mov
dec
mov
mov
or
mov
lods
orb
adc
loopne
sub
push
in
data16
enter
pushf
movsl
or
nop
mov
mov
les
push
xorl
test
mov
fildll
and
jg
test
ret
stos
shlb
mov
ss
aam
inc
jmp
add
and
clc
push
cmp
andb
pop
pop
in
push
repz
add
fsubrs
dec
daa
cmpb
rclb
sbb
lods
jle
int3
movsb
or
insb
loop
test
loop
mov
pop
into
or
sbb
dec
mov
stos
jmp
daa
inc
roll
insl
fcomps
xor
adc
adc
sbb
lock
xchg
adc
sbb
mov
sub
mov
icebp
les
mov
ret
mov
cmp
sbb
mov
out
loope
jnp
or
sarl
rcrl
sub
mov
in
xor
and
xor
dec
cmp
or
subb
cmovs
or
js
je
dec
ja
push
jg
cmp
mov
jle
pop
xchg
or
pop
pop
jle
pop
push
push
cmp
xchg
jp
adc
and
pushf
lods
jmp
mov
dec
js
pop
sub
mov
cwtl
and
test
loop
jmp
test
or
xchg
xchg
hlt
adc
adc
lods
aas
mov
or
mov
je
push
subl
ret
je
xchg
pop
in
pop
fiadds
sbb
fs
cmpsb
movsb
cs
clc
lret
movsl
cmpb
or
sub
inc
xorl
popa
hlt
pop
pop
cltd
lock
enter
loope
subb
mov
fldt
adc
dec
push
mov
dec
scas
mov
push
cmpl
adcl
jmp
push
into
movsl
add
xchg
push
clc
ffreep
jbe
push
insb
xchg
fiadds
call
mov
aam
in
mov
sub
xchg
xorb
dec
shrl
into
pop
pop
aas
mov
xor
test
movsb
dec
add
cli
outsl
out
or
ret
je
inc
in
xor
jl
mov
push
movsl
stc
scas
sub
inc
or
jb
sbb
sub
dec
dec
pop
test
pop
rcr
xchg
js
mov
pop
cli
movsb
add
cs
inc
loopne
pop
mov
out
shlb
add
notb
incb
mov
popf
mov
pop
shlb
adc
call
dec
cmp
adc
mov
in
pushf
popf
pop
push
into
and
pop
ret
add
adc
testb
push
inc
ja
and
lret
in
xchg
jl
xchg
fldenv
mov
int3
test
inc
xchg
pusha
or
jl
pop
mov
adc
andb
and
call
xchg
and
jo
cmp
xchg
fnstcw
je
mov
int
shll
aad
int3
shlb
xchg
idivb
xchg
ja
sbb
jge
into
fs
xchg
mov
popf
adc
push
xor
or
jl
sbb
scas
fnstenv
pop
pop
adc
addb
pop
rolb
aas
xor
cli
fstps
sub
clc
fdivrl
pop
incb
imul
lock
movsb
sbb
sub
sbb
loop
mov
mov
dec
das
or
jp
push
sub
das
or
pop
jo
scas
cmp
fidivs
mov
sub
sbb
xor
shr
test
push
push
lret
push
fsts
loop
addr16
inc
lods
pop
aas
push
sub
out
call
lods
push
jnp
ds
enter
cwtl
lock
lcall
add
inc
push
adcb
cmp
test
dec
push
push
dec
and
mov
cli
mov
or
mov
ret
sub
test
cmp
into
adc
loopne
push
mov
or
enter
in
movl
jo
adc
dec
pushf
fwait
push
leave
pop
mov
mov
repz
dec
inc
mov
lret
repnz
mov
xor
lcall
int
dec
dec
mov
dec
or
push
mov
cmp
lcall
pushf
jmp
enter
rcrl
shll
loope
push
pushf
dec
out
jp
inc
sub
mov
mov
lret
adc
push
or
out
mov
adc
lret
mov
ficoml
incb
clc
add
lret
add
cmp
sub
mov
jmp
sub
andb
fdiv
jb
je
pop
pusha
mov
add
fsubs
pop
push
cmp
rcrb
cli
pop
hlt
sub
loopne
out
jmp
add
repz
pop
sti
call
pop
mov
mov
repnz
sub
pop
repnz
movsb
mov
loopne
imul
push
cwtl
fisubl
or
or
adcb
inc
leave
popa
ss
es
roll
jmp
out
out
xor
xchg
xor
inc
mov
outsb
shrb
fsubl
es
mov
inc
pop
test
mov
popa
mov
or
jno
rclb
test
and
rcrb
cmp
mov
cmpsb
ucomiss
ret
data16
jbe
aam
scas
dec
dec
orl
mov
jns
decb
pop
movsb
inc
lods
call
mov
xchg
std
mov
jl
xor
test
stc
int3
dec
test
xchg
test
sub
icebp
fnstsw
or
xor
orb
lret
addb
mov
and
sahf
sub
call
adc
push
dec
cltd
jmp
nop
lock
xchg
xor
sbb
cs
sbb
cli
gs
sbb
outsb
and
mov
mov
cs
shl
xor
cmp
lods
xchg
cld
inc
sub
pop
xchg
inc
cmpb
add
and
jmp
sbb
xor
inc
cld
and
mov
int3
and
and
xchg
stos
push
jae
or
sahf
pop
pop
fistl
pop
clc
and
lods
shrb
xchg
push
sbb
inc
movsb
ds
or
loopew
icebp
cmp
stc
imul
xchg
dec
push
or
xchg
ret
dec
loope
je
ss
in
dec
stos
xchg
push
push
mov
lds
test
and
or
xor
call
mov
jb
xchg
fcoml
pop
shrb
push
sahf
lock
dec
dec
je
lret
ret
mull
pop
shll
hlt
cmp
fs
je
ss
jle
xchg
push
mov
mov
cli
cs
push
and
lret
add
push
aas
sub
jle
push
mov
mov
mov
xor
clc
inc
dec
cmp
and
dec
ffree
ficomps
and
push
inc
adc
and
dec
jge
xchg
pushf
mov
pop
imul
mov
inc
cmpsb
loope
sub
or
add
add
mov
lock
mov
faddl
dec
rol
aaa
adc
cmp
lods
int3
and
xorb
je
push
mov
inc
pop
mov
jp
je
mov
jbe
js
dec
lcall
in
jge
jg
jp
adc
aas
and
or
push
pop
movsb
cwtl
dec
and
dec
sub
xchg
mov
inc
push
cli
dec
shlb
aam
inc
pop
mov
sahf
inc
adc
mov
daa
add
jno
mov
rep
push
aas
lds
aad
pushf
dec
adc
or
dec
jns
pop
lds
jb
push
je
dec
out
lcall
xor
imul
nop
loope
ret
sub
mov
lods
call
xchg
stos
push
jp
xchg
sub
call
sbb
push
das
jno
les
lock
lcall
dec
ret
or
repz
cmpsb
and
jbe
rorb
jp
nop
add
leave
inc
cmp
sub
cs
xchg
repnz
adc
add
rorb
pop
pop
sarb
xchg
sub
lock
test
nop
nop
and
xor
xchg
xchg
cmp
jbe
js
adc
xchg
xor
cwtl
aas
decl
inc
push
sbbb
ljmp
scas
das
addb
mov
les
inc
addb
cs
sbb
decb
lods
mov
mov
adc
cmp
cmp
subl
dec
iret
cld
repnz
shll
inc
cmp
jl
cmp
das
cli
inc
push
daa
cmp
pop
add
daa
sbb
imul
dec
mov
sub
testb
dec
mov
stos
or
imul
xlat
mov
clc
push
mov
hlt
mov
and
inc
loop
mov
or
repnz
adc
sub
stc
fldenv
imulb
cmp
xchg
jno
test
clc
es
into
ror
loope
cmpsb
sbb
xchg
imul
xor
scas
in
daa
loopne
xor
jno
pop
cmp
out
nop
scas
pop
xor
push
bnd
data16
lret
lahf
loope
out
xorb
xchg
sub
data16
ljmp
out
into
dec
pop
cs
pop
aam
out
mov
loop
mov
sbb
jne
test
xorb
pop
dec
shrb
std
and
jl
addb
scas
and
test
or
sbb
das
push
inc
dec
pop
push
rolb
nop
hlt
in
repnz
and
lods
and
sub
and
cmp
pop
cmc
loopne
pmulhuw
ss
pusha
rclb
les
sub
xor
or
push
mov
je
jle
cltd
shll
pop
sbb
in
out
and
push
jle
cmp
xor
ret
imul
push
insb
xchg
jp
push
test
mov
mov
xor
adc
movsb
pop
or
dec
push
dec
leave
pop
jo
jl
adc
adcl
dec
sbb
ret
icebp
inc
push
call
shll
rorl
fcomps
ds
inc
and
in
out
or
stc
mov
iret
fmul
fbstp
hlt
stos
and
xlat
jno
lahf
xor
lret
stos
dec
lock
shrl
xor
je
bnd
dec
cwtl
mov
roll
ss
pop
cmp
and
sub
pop
dec
clc
pop
jle
pop
xchg
or
push
push
int
outsb
aas
out
and
xor
adc
jb
popf
inc
bound
jb
pop
push
mov
imul
es
mov
rclb
jo
jmp
push
out
mov
dec
push
orl
push
xchg
mov
lcall
xor
aaa
jp
call
test
adc
lods
lock
jns
pusha
mov
jecxz
arpl
repnz
js
je
dec
push
xorl
sbb
call
pop
dec
and
cmp
push
xchg
mov
jo
je
popf
fwait
xchg
mov
add
call
push
les
cmp
jp
mov
test
loop
cld
das
popl
inc
sub
sub
sbb
xchg
test
adc
das
or
ret
xchg
inc
hlt
and
xorb
lock
movb
cmp
xchg
cmpsl
rol
or
cli
shll
pop
sbb
mov
jp
add
xchg
mov
out
cmp
in
shlb
mul
sbb
and
pushf
je,pn
pmuludq
cmpsb
aas
fsubl
cli
add
fs
mov
jo
mov
leave
add
sarb
xchg
clc
push
fmuls
push
push
mov
sub
pusha
mov
pop
je
das
mov
and
inc
popf
loope
popf
imul
cmp
ffree
sahf
icebp
sub
es
sub
lock
fdivrs
add
sub
ret
jg
les
out
out
in
cld
lods
das
push
rclb
pop
xor
jg
push
in
mov
xchg
sub
push
add
out
dec
std
jl
sub
xchg
mov
bound
mov
xchg
add
add
ds
xor
jae
inc
xchg
mov
and
ss
jnp
dec
and
adc
inc
sbb
xor
add
sub
add
sbb
pop
fisubs
or
fisubl
mov
adc
push
xchg
xchg
mov
sub
scas
add
or
add
test
lcall
mov
pop
sbbb
into
cmp
pop
imul
mov
adc
dec
or
vpaddb
mov
int3
inc
stos
push
pop
jle
xlat
rcrb
imul
xchg
add
mov
jp
xor
sar
fscale
insb
orb
xor
cs
or
push
ficoms
pop
test
das
lahf
rcrb
and
js
pop
ss
out
lret
add
in
imul
cmp
into
cmp
add
or
sahf
fstl
jp
incb
mov
mov
loop
jo
or
ret
out
mov
jp
or
xchg
jge
mov
adc
das
xor
nop
adc
jne
mov
leave
rcr
push
mov
outsb
adc
inc
jns
mov
hlt
rcrb
and
incl
aaa
lock
and
and
sub
xorb
fdiv
and
cmp
in
dec
xor
lahf
or
xchg
or
pop
mov
mov
or
jmp
lcall
fs
adc
test
push
or
cmp
mov
leave
lahf
xor
or
test
js
icebp
pop
add
or
push
xor
xchg
xchg
mov
clc
dec
pusha
sbbl
je
loopne
add
dec
mov
into
add
stos
mov
jp
rcll
loopne
mov
dec
js
sub
inc
dec
rcll
xor
ret
jmp
idivb
ret
cwtl
lahf
mov
adc
push
mov
test
xorb
sbb
add
inc
pop
lods
les
sub
cmp
adc
andb
inc
in
test
shlb
sbb
clc
out
xchg
push
dec
pusha
mov
dec
xchg
add
cmpb
das
or
pop
out
je
jbe
mov
das
push
rcrb
ljmp
xor
aad
in
test
bound
in
dec
fadd
imul
xor
in
pushf
dec
push
ret
mov
dec
mov
adc
aaa
mov
dec
xchg
ret
adc
jecxz
repnz
dec
mov
push
xor
mov
sbb
push
jg
pop
cmp
cmpsl
mov
mull
fsubs
xor
xor
je
stos
in
push
or
imul
mov
inc
sahf
sarl
out
xor
and
xchg
cwtl
xchg
add
and
push
stc
in
cmp
adc
mov
dec
dec
and
loopne
ja
cwtl
push
sbb
ss
ret
mov
adc
pushf
dec
xor
xor
in
adc
mov
dec
sbb
adc
xchg
movsb
lret
mov
pop
cmpxchg
in
imul
push
scas
lock
insb
shrl
push
je
and
push
repnz
dec
xlat
adc
out
mov
lock
mov
lahf
test
cmp
and
fists
sub
stos
pop
ret
bound
pushf
mov
cld
lock
inc
xchg
pop
mov
pop
push
shlb
pop
addr16
imul
jnp
test
push
adc
sub
cmc
mov
mov
dec
sub
stos
jp
push
jb
je
jbe
pop
push
xorb
scas
pop
cmp
mov
cld
inc
decb
mov
je
subl
cmp
mov
xchg
lock
push
fdivl
rorl
or
push
inc
ret
nop
je
aam
add
std
mov
sbb
mov
and
adc
fdiv
mov
outsl
and
pop
add
loope
dec
das
push
pop
inc
jbe
js
dec
scas
adc
cmpsb
jle
outsb
sub
sbb
push
dec
push
and
mov
add
lock
pop
je
add
cmp
outsl
sbb
stc
cmp
pop
sub
adcb
ljmp
pop
loopne
into
lock
fsubrp
xchg
and
stc
scas
push
das
cmp
adc
cmp
out
or
andl
or
orb
add
add
add
stos
or
and
push
pop
and
daa
in
pop
inc
ds
fs
arpl
push
test
js
mov
lea
mov
pop
stos
jnp
stc
cmp
pop
out
mov
sbbl
test
popf
cmpsl
lock
add
dec
and
pop
daa
ret
in
mov
data16
push
gs
pop
aaa
and
add
xchg
add
jmp
inc
fs
xor
rol
xor
mov
xor
ss
fwait
imul
xchg
dec
loopne
lods
lock
je
jbe
out
das
or
mov
les
sbb
pop
outsl
call
dec
cmp
mov
cmp
cmp
mov
dec
xchg
adc
inc
push
xchg
leave
pop
sub
dec
mov
negl
icebp
push
jo
ja
testb
sar
lods
add
xor
aad
mul
loope
jnp
out
loopne
insb
sahf
les
cmc
and
clc
mov
pop
cmp
sub
mov
jl
dec
pop
ret
mov
repnz
cwtl
push
push
mov
and
ss
xor
out
xchg
push
inc
jb
loopne
dec
push
mov
xorb
lock
cmpb
clc
dec
dec
aaa
sub
mov
test
shlb
je
sbb
cmp
push
inc
xor
lock
xchg
pop
inc
push
les
or
dec
sbbb
and
xchg
push
fcom
cmp
loopne
sub
inc
test
and
ds
sub
cmp
inc
test
lahf
inc
mov
out
or
and
pop
fisttpl
add
sub
addl
test
push
push
jl
das
lock
push
in
jo
dec
iret
lock
sub
in
in
ds
and
sub
fists
dec
outsl
cmpps
leave
jg
repnz
xchg
mov
push
mov
pushf
cs
mov
sarb
lret
mov
xlat
in
push
and
out
push
mov
js
das
aad
jo
push
mov
xor
or
ss
cmpsb
stos
sarb
ficoms
mov
mov
movsl
btc
inc
out
js
jb
fs
pop
loopne
dec
popf
pop
xor
inc
mov
popa
push
inc
flds
mov
cmp
lahf
fwait
dec
orb
inc
inc
sbb
dec
push
lcall
mov
inc
dec
inc
xchg
addr16
test
xchg
and
pop
sub
xchg
scas
pop
sub
stos
popf
test
mov
push
scas
inc
mov
punpcklbw
leave
dec
mov
cmp
and
cmp
loopne
aaa
xchg
popa
push
jb
mov
iret
xchg
push
cmpsb
xchg
loopne
xor
es
and
mov
ficoms
sub
sub
mov
ss
dec
leave
aam
cwtl
je
enter
imul
lahf
add
dec
sub
dec
sbb
xor
dec
inc
mov
dec
cmp
or
adc
add
sub
or
jbe
or
xchg
pop
imul
adc
sbb
test
fldl
ret
and
mov
idiv
sahf
hlt
dec
call
jb
je
pop
and
sbb
fcom
pop
movsb
cmpb
push
popa
inc
inc
sub
call
or
adc
sbb
fdivrs
movsl
lds
adcb
fdivs
leave
sbb
popf
lock
test
mov
outsb
lods
mov
call
add
add
dec
pop
shlb
lods
push
test
in
repnz
xchg
popa
push
mov
and
push
push
cwtl
inc
iret
insl
jo
cmpsl
dec
ffree
daa
cmp
dec
jge
daa
mov
ss
ret
mov
mov
jmp
repz
outsl
call
negb
mov
and
dec
popa
xorb
ljmp
push
push
imul
ss
add
push
mov
ret
push
mov
xchg
aam
inc
fs
sarb
and
mov
pusha
fdivrs
jb
mov
xchg
je
pop
mov
add
pop
rcr
push
pop
fs
jns
icebp
in
jne
push
cmp
and
loopne
out
mov
lcall
xor
jecxz
addl
sahf
mov
mov
adc
in
mov
mull
cs
ljmp
and
xchg
jmp
sub
pop
xor
ds
adc
mov
in
movsb
or
shrb
loope
mov
lods
cmc
jo
mov
sarb
rclb
mov
push
lcall
aad
dec
jl
pop
das
or
hlt
mov
cmp
dec
pop
adc
ret
lcall
dec
add
dec
cmp
jnp
fs
ret
imulb
push
sub
and
xlat
pop
jp
xchg
sbbb
add
enter
cwtl
cs
inc
cmpb
pop
loopne
sbb
shll
inc
pop
loopne
cmpsl
mov
fs
mov
pop
mov
stos
push
addr16
push
lahf
fld
pop
mov
cmp
xchg
xchg
push
xor
dec
cmp
test
loope
cmp
aas
lcall
push
mov
adc
cmp
push
xchg
out
in
shrl
lcall
rorb
push
test
lahf
jns
daa
fcmovb
je
jbe
pop
inc
mov
add
dec
jbe
adc
movsb
shll
push
fisttpl
fsubrs
mov
dec
mov
sub
xchg
pop
sbbb
or
js
pusha
adc
add
aaa
sub
leave
xchg
sarl
mov
add
and
outsb
aam
push
xchg
mov
add
incb
sub
lea
xor
dec
push
loope
inc
cmp
in
push
xor
ret
or
repnz
sbb
cld
aam
and
inc
popa
jp
cs
adc
icebp
hlt
jb
addr16
inc
sub
je
push
jne
popl
repz
hlt
in
or
rcrl
adc
xor
sti
and
inc
inc
outsl
invd
xchg
test
lock
call
notl
ja
enter
iret
cmp
sub
cwtl
sub
mov
mov
lds
andl
xchg
out
or
gs
sbb
lods
mov
ret
push
cld
lock
mov
ret
fidivs
push
in
dec
sub
or
mov
adc
into
negb
or
das
test
mov
mov
jle
mov
jo
dec
mov
sahf
mov
mov
cld
jo
clc
pop
and
pop
xor
ret
mov
leave
ret
add
das
mov
adc
adc
jmp
pop
pop
fsub
jp
lahf
pop
je
iret
or
push
leave
jbe
jg
jbe
fsubs
sub
jp
mov
lock
add
add
adcb
dec
scas
or
mov
mov
xchg
jbe
xchg
and
jle
leave
mov
ss
repz
aaa
mov
arpl
adc
add
mov
cmp
xor
shll
fwait
js
dec
and
ret
mov
pop
lock
or
pushf
pop
loop
or
je
pop
mov
pop
movl
leave
push
and
push
popf
jns
pop
xchg
adc
sahf
jle
lahf
je
push
fst
xor
fildl
pmaxsw
cs
aam
outsl
mov
inc
ljmp
cmp
ret
jno
dec
mov
mov
daa
es
imul
mov
movsb
and
int
mov
out
add
xor
dec
popf
stc
xor
icebp
pop
xchg
xor
jb
push
mov
cs
push
cmp
ret
cld
inc
sbb
lahf
dec
xor
jo
dec
mov
out
fnstcw
fsubrs
pop
fbld
nop
xchg
shrl
dec
sti
mov
dec
push
mov
nop
mov
mov
stc
dec
and
pop
mov
inc
xchg
add
xchg
pop
push
jle
jle
pop
pop
ret
js
pop
mov
out
xchg
in
dec
mov
pop
jl
test
mov
sbbl
repnz
fsub
sbb
xchg
pop
cmpb
dec
or
mov
push
pop
lret
lahf
rcll
rorl
pop
cmp
test
aas
fnstsw
jmp
and
pop
je
jbe
js
dec
xchg
scas
dec
rol
popa
mov
enter
add
dec
mov
dec
pop
xchg
mov
sbb
mov
mov
jg
cltd
cmp
add
cmp
dec
and
aas
pop
stos
pavgb
lret
sbb
xchg
dec
ret
jne
int3
repnz
mov
xchg
inc
cs
out
sbb
pop
scas
in
aam
pop
loopne
je
xchg
in
in
leave
popf
loope
jmp
xchg
sbb
bound
ljmp
sbb
sub
push
andl
xor
and
push
inc
dec
test
fmuls
mov
pop
xor
daa
cmc
inc
mov
daa
add
xorb
lret
pop
cmp
dec
add
cs
shl
loope
das
push
adc
dec
cmp
mov
mov
mov
push
es
sbb
ss
add
dec
lock
clc
sar
xchg
cmp
mov
inc
call
mov
adc
das
in
xchg
cmp
add
repnz
jg
xchg
and
push
cs
daa
aas
cmp
les
pop
cmp
in
movsb
inc
test
inc
lret
fmuls
dec
jecxz
jl
es
inc
cs
daa
jle
sub
or
jl
pop
cli
xchg
pavgb
aaa
call
outsl
lock
stos
adc
scas
ret
filds
shrb
jge
mov
movsb
xor
clc
and
or
fldcw
jae
jg
mov
daa
fwait
xchg
into
in
decl
dec
or
les
leave
xor
push
clc
xchg
nop
adc
loopne
jp
xchg
sahf
cwtl
and
xchg
adc
aam
out
xchg
hlt
xchg
shll
sbb
inc
mov
cli
clc
outsb
dec
dec
push
cmp
mov
cmp
xchg
dec
icebp
jno,pt
sub
jo
adc
jl
pop
push
dec
pop
sbb
test
rcll
fcom
xchg
xchg
daa
jnp
mov
mov
insb
aas
std
sub
into
push
sub
push
lahf
icebp
jbe
pusha
cmc
pop
lahf
add
daa
je
nop
inc
int3
daa
jle
pushf
dec
shlb
je
dec
movsl
or
jmp
lods
mov
adc
jl
cmp
xchg
xchg
push
pusha
ljmp
rcrl
or
cmp
outsl
pop
scas
dec
mov
pop
mov
enter
mov
mov
xchg
popa
loop
push
mov
cwtl
and
clc
enter
rcrb
sar
cmc
icebp
sub
jne
mov
leave
ljmp
negl
sub
scas
mov
lcall
enter
sub
pop
arpl
xchg
insb
je
rcrl
sbb
orb
ret
pop
jb
ljmp
fsubl
stos
adc
cwtl
and
push
divb
push
xchg
xor
lods
jb
je
pop
xchg
or
js
jge
pop
xorb
icebp
enter
sub
sbb
inc
sub
orb
push
idivl
sbb
push
pop
out
dec
mov
add
dec
push
ret
push
pop
adc
and
inc
inc
adc
cmp
push
scas
loopne
cli
in
cld
mov
ss
shlb
ds
push
jle
mov
popa
frstor
sbb
jl
pop
sti
mov
and
add
dec
push
das
add
push
loopne
cwtl
ret
in
mov
cmp
mov
shll
adc
cmc
add
cmpsl
lock
fsts
sbb
mov
repz
pop
popf
test
loopne
xor
movsl
outsb
int3
loopne
std
jp
fs
xchg
test
pop
xor
in
jns
daa
mov
cmpb
adc
cmp
mov
xchg
lds
pop
cmp
sub
inc
pop
insb
or
insl
sub
cwtl
xchg
dec
add
jae
inc
rorl
shl
dec
pop
inc
es
imul
mov
movsb
sub
sub
insl
pop
imul
sub
decb
leave
lock
adc
repnz
cmp
testb
dec
int
das
insl
nop
cs
mov
dec
mov
cmp
and
inc
xor
mov
in
dec
loopne
fsubl
imul
sbb
jl
mov
and
cmc
adc
fldcw
xchg
mov
popf
mov
xchg
inc
sarb
push
jb
push
adc
cwtl
xchg
movsb
and
or
xorb
aas
fnstcw
dec
rcrl
push
jl
dec
mov
jl
pop
and
fistpll
sub
fists
pop
aas
or
add
fs
cmpsb
mov
and
mov
dec
mov
mov
jb
and
aam
test
in
data16
hlt
popa
bound
or
and
and
push
daa
xor
push
dec
dec
ljmp
inc
jl
jno
adc
mov
xor
les
aam
lock
in
dec
hlt
ret
jbe
adc
sbb
lock
mov
xchg
lds
pop
cmpsb
mov
push
jle
jle
xchg
insl
sub
repnz
in
mov
mov
push
push
pop
push
test
sub
data16
pop
outsb
mov
jbe
shll
subb
mov
fdivs
or
pop
fnstsw
inc
cmp
xor
pop
adc
shl
dec
push
push
jb
ljmp
bound
