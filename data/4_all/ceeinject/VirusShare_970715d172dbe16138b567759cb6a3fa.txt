call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jp
xor
sub
cmp
add
aas
pusha
dec
aas
jl
ret
subb
shr
cld
aaa
or
sbb
sub
cmp
dec
jo
inc
insb
push
add
mov
mov
shr
cld
cmp
sbb
sub
cmp
dec
imul
mov
cwtl
mov
push
jg
push
dec
inc
jle
push
out
negl
dec
jmp
xchg
mov
enter
and
xchg
add
mov
mov
cltd
jbe
clc
dec
arpl
popf
fcomps
adc
lods
or
adc
sarb
cs
jno
push
lahf
dec
sub
cmc
outsl
in
pop
fnstenv
inc
lock
and
loopne
fwait
imul
pop
test
push
adcb
pop
gs
mov
std
sarb
pop
jl
mov
les
pop
test
dec
rclb
lahf
icebp
fmull
sub
rorb
jl
dec
sti
xchg
mov
popf
dec
iret
jg
xchg
test
and
shr
loopne
xor
sub
cmp
dec
push
inc
insb
dec
jl
mov
mov
shr
xchg
push
or
gs
cmp
sub
sub
cmc
mov
repnz
dec
mov
mov
and
jns
dec
adc
and
adc
mov
flds
mov
add
adc
bound
inc
insb
push
jl
mov
mov
shr
cld
and
sbb
sub
cmp
dec
jo
inc
insb
push
jl
mov
mov
shr
cld
and
je
sarl
cmp
jecxz
mov
pop
jle
cmpsl
fstps
pop
int
jge
push
adc
adc
push
cmp
lods
xchg
popf
cmpb
xlat
out
mov
sub
mov
pop
lcall
push
jno
jmp
call
inc
imul
jae
pop
mov
imul
ds
pop
mov
xchg
jge
clc
das
adc
int3
les
stos
xor
aas
add
push
ss
and
addr16
testl
fildl
ljmp
push
in
xchg
jb
push
lcall
out
in
movsl
icebp
out
rorb
out
int
iret
jnp
idivb
fcom
shlb
sarl
mov
stos
cmp
stc
mov
gs
je
xchg
lret
jle
daa
push
add
call
dec
mov
ret
sub
test
dec
mov
loope
hlt
inc
ret
and
adc
cltd
std
out
repnz
pop
and
or
cmp
sub
sbb
xchg
dec
or
sub
rep
cmp
add
mov
inc
aas
negl
insl
sbb
sahf
push
fs
adc
orl
lds
mov
jae
jne
mov
mov
dec
addb
pop
ret
or
pop
cmp
push
pop
mov
or
mov
xlat
iret
inc
pushw
inc
sbb
lods
jns
push
dec
and
lret
test
jns
mov
scas
movsl
cwtl
cli
loope
jmp
out
aad
sub
push
sub
lods
testl
sub
in
in
mov
in
jecxz
adc
xchg
mov
rcr
in
push
xchg
dec
push
ret
mov
xchg
pop
jmp
mov
int3
mov
iret
jno
dec
mov
inc
cmp
xchg
mov
push
shll
arpl
dec
mov
add
sub
or
cld
sarl
fs
xchg
mov
sbb
push
idivl
push
jg
cmp
cmp
cltd
push
or
fcmovu
cmp
cwtl
shl
xchg
data16
shlb
mov
xchg
andl
sahf
pop
popa
jne
jbe
pop
ss
aas
xchg
or
sahf
inc
mov
subb
data16
sbb
imul
inc
fstps
les
test
add
mov
rcll
push
ficoml
popl
enter
pop
outsl
ljmp
push
ja
ss
outsl
cmp
cmp
xchg
and
xor
xchg
das
jnp
aam
jmp
mov
mov
or
jnp
dec
xchg
dec
imul
js
leave
dec
jo
in
mov
bound
pop
xlat
xchg
inc
mov
or
scas
ljmp
fmull
mov
movsl
lret
insb
pop
sbb
or
jecxz
adc
pushf
cmpsb
fpatan
sbb
inc
jb
mov
jae
sub
fistps
rep
jp
bound
pop
jp
inc
pop
jg
jg
cmp
scas
or
shll
cmp
iret
jmp
imul
les
push
or
out
fdiv
mov
push
xorb
push
sub
sbb
clc
sbb
iret
sbb
pop
inc
and
loope
push
jns
inc
aaa
dec
das
rcll
scas
fistl
scas
popf
sub
jl
scas
or
mov
loopne
pop
in
sub
sarl
push
clc
xor
mov
push
inc
nop
mov
pusha
cmp
sarb
aas
stos
xor
mov
inc
imul
clc
cmp
push
dec
jmp
or
dec
lods
and
push
mov
mov
sahf
push
xor
shll
jmp
ljmp
in
xor
add
xor
dec
mov
xchg
adc
push
rol
mov
push
sbb
movsb
pop
push
cmpsb
pop
xchg
sub
push
add
sbb
mov
ja
xchg
cmp
mov
sbb
lret
cltd
daa
mov
xchg
lea
sbb
or
and
std
jle
pop
and
jl
sub
and
push
inc
cmp
das
ljmp
xchg
movsl
jb
std
cltd
jmp
mov
xchg
outsl
outsl
mov
shlb
out
jecxz
daa
arpl
adc
ss
fmul
lret
mov
sbb
pop
aam
pop
test
mov
in
xor
pusha
pop
clc
jne
ds
decb
add
add
xlat
out
ja
fisubs
movsb
pop
imul
andl
packssdw
dec
call
dec
fdivrs
adc
daa
inc
ficompl
dec
xor
xchg
xor
and
push
in
dec
ret
mov
mov
jg
push
test
repz
sub
inc
into
pusha
pop
pop
lock
out
popf
fcomip
mov
dec
add
in
orl
inc
es
icebp
int3
mov
out
xor
outsb
xchg
dec
jle
or
adc
adc
sbb
xchg
fucom
xor
xchg
push
pusha
lds
inc
sarl
or
mov
push
mov
and
sub
je
dec
dec
fimuls
push
mov
loop
data16
add
lea
shlb
mov
rcrb
jecxz
arpl
outsb
in
sub
xchg
int
rcrl
sbb
repz
or
notl
leave
outsl
loop
mov
lods
std
lret
inc
pop
mov
ror
mov
fmulp
loope
popf
jno
mov
push
in
shll
out
and
inc
mov
daa
pop
scas
or
cmp
movl
xchg
pop
lods
dec
mov
adc
sub
adc
daa
mov
addr16
test
ljmp
cmpsl
xor
sub
int3
xchg
xor
push
data16
lock
mov
lret
std
sti
fs
rclb
out
lahf
mov
fdivrs
push
adc
insl
pusha
or
popf
xor
fldt
imul
fs
lahf
cmp
ss
clc
sbb
frstor
daa
in
ficompl
dec
inc
ds
test
invd
out
fs
out
mov
pop
int3
cli
and
inc
cmp
add
divb
jnp
pop
stc
xchg
jns
je
into
pusha
imul
rclb
and
cwtl
shlb
jae
add
push
ljmp
popa
lea
sbb
sub
sarb
stos
adc
test
push
or
jp
jmp
mov
mov
xor
gs
sarb
add
and
std
xchg
repz
stc
mov
dec
push
mov
loop
icebp
adc
xor
mov
xchg
inc
int
test
arpl
push
repz
mov
jae
ja
adc
sti
cmpsl
insb
inc
ret
and
and
add
lods
lods
mov
inc
jmp
or
jmp
in
jbe
cmpsb
ss
jo
mov
or
cmp
lods
sub
subl
jbe
loop
xchg
mov
mov
sub
push
sti
adc
fisubl
cltd
ja
xchg
jl
push
sub
inc
sub
dec
int3
stos
inc
inc
ja
pop
cmpsl
push
sbb
mov
jecxz
icebp
mov
jo
sub
cli
je
dec
mov
stos
pop
pop
mov
aas
lcall
imull
add
mov
pop
test
pop
movsb
inc
dec
rcll
cmp
into
repz
loopne
lods
mov
call
call
cmp
xor
jae
lret
daa
subl
xchg
inc
xchg
mov
dec
scas
test
pushf
push
mov
clc
or
or
jp
cmpsl
pop
xchg
dec
pop
mov
xor
test
mov
or
mov
addr16
insb
pop
cld
mov
fisubs
add
inc
inc
cli
pusha
js
mov
sbb
sti
test
cmp
cmpsb
test
xchg
dec
popa
rclb
jecxz
xor
mov
stos
fsubl
xchg
fimuls
mov
mov
cmp
iret
inc
xchg
jge
xchg
les
add
fs
in
push
mov
push
pop
sub
jle
inc
jbe
mov
fwait
stos
scas
js
push
sub
shrl
mov
cmpsl
das
das
or
sub
enter
inc
mov
loope
cmp
mov
and
fldl2t
sub
je
aam
mov
xor
sahf
addr16
test
into
and
jp
sti
mov
lods
clc
xchg
cmpsl
loope
negl
fndisi(8087
aam
sub
adc
movsb
or
jns
mov
mov
imul
lock
shlb
push
das
cmp
xchg
sti
imul
jmp
inc
nop
lret
inc
xor
xchg
fcoml
mov
push
push
cmp
incb
push
aam
repnz
pop
nop
and
and
and
sub
int
je
adc
pop
jae
xorl
xlat
dec
and
arpl
leave
dec
pop
inc
dec
push
dec
cmpsl
jecxz
inc
dec
imul
dec
sbb
cmp
std
fidivl
inc
pushf
test
cmovl
adc
or
adcb
inc
push
mov
mov
push
das
shl
out
fsubr
cmp
fildl
push
in
lock
inc
ret
adc
in
mov
xor
daa
sub
rcrb
stos
adc
sub
pusha
xor
xchg
dec
xchg
mov
adc
cmpsl
aaa
xlat
fldcw
adc
je
out
popf
fisubl
outsb
xor
mov
xor
aam
callw
popa
aad
push
inc
push
xor
inc
nop
mov
in
xor
in
lods
pop
aas
dec
mov
push
and
cmpl
adc
inc
cld
mov
in
mov
jecxz
pop
jns
push
test
movsl
in
mov
or
arpl
call
and
mov
gs
sbb
das
addr16
inc
pop
inc
mov
roll
adc
iret
xor
pushf
dec
mov
repz
inc
rol
inc
cmp
outsb
push
push
adc
cmp
push
xlat
aam
xor
mov
sub
ret
dec
ja
mov
mov
imul
fs
test
mov
xorl
icebp
or
add
jmp
ds
xchg
pop
stos
outsb
and
push
test
jb
in
push
push
shrb
fsub
sub
inc
sbb
jmp
call
aas
jl
adcl
cmp
mov
lock
mov
sbb
or
mov
rcrl
cmp
xchg
dec
insl
mov
lret
mov
add
push
adc
sysexit
mov
fcomp
movsb
fbld
or
test
jmp
mov
inc
inc
cld
dec
out
cmp
xchg
scas
cmpb
dec
lea
shlb
xor
and
insb
lock
test
cmc
cmp
pushf
ror
call
dec
ret
into
jecxz
in
xorl
jo
sub
mov
lret
pushf
loopne
and
adc
pushf
jbe
dec
addr16
ret
aad
fsubs
insl
loope
push
jmp
cmp
std
push
and
push
rorl
xchg
nop
shl
shll
lcall
loopne
ljmp
orb
dec
lcall
pop
cmp
std
in
and
shll
pop
adc
cli
cmp
xchg
jg
int3
testb
xchg
push
imul
jne
adc
stos
out
xlat
lss
dec
es
insl
xor
dec
and
jp
cld
and
lock
ss
int
inc
rcr
int
mov
aad
jmp
lret
out
push
push
cmpsl
push
sub
and
xchg
movsl
push
cmp
mov
jbe
jl
lcall
sbb
mov
mov
dec
ss
mov
push
loopne
out
xchg
mov
stc
add
dec
rclb
inc
pushf
mov
nopl
jle
and
sbb
cltd
fstl
xor
movsl
jno
bound
and
sub
add
imul
jo
int
iret
inc
dec
inc
enter
jo
das
in
icebp
sub
lcall
stc
pop
insb
mov
dec
inc
jo
psrlw
sahf
push
cli
lretw
repnz
sbb
jge
and
call
sbb
stos
lret
sub
add
les
rcll
dec
ret
movsb
mov
pop
fiaddl
and
xor
ja
adc
sbb
xlat
fcompl
fildll
negl
or
ja
push
std
mov
xchg
lcall
sub
mov
addl
sahf
inc
push
jecxz
xchg
push
lods
lods
dec
ja
bnd
inc
aam
lods
mov
xchg
push
push
clc
test
nop
dec
out
arpl
fbld
jle
lods
xor
cmp
push
mov
imul
test
or
cs
int
jo
push
add
pop
mov
lds
std
paddb
dec
add
xchg
sub
mov
pop
cmp
add
jnp
sbb
xchg
mov
je
mov
leave
inc
rorb
lret
stos
stc
and
stos
mov
andl
and
scas
shlb
jl
cmp
fsubs
pop
jmp
out
jo
cli
movsl
sarl
in
xor
push
push
adcb
ja
scas
xlat
xor
pop
adc
sub
ljmp
adc
in
inc
sub
in
mov
dec
push
in
arpl
push
adc
mov
jge
into
cmp
mov
lret
xor
mov
xchg
inc
cmp
jg
shrb
arpl
mov
lahf
insb
fadds
fwait
out
push
or
sar
inc
jle
sub
insb
pop
icebp
jns
divl
clc
je
outsl
stos
mov
jle
pop
mov
and
daa
test
out
mov
xchg
add
add
pop
test
test
jg
sub
shrb
int3
es
xor
pop
sbb
aam
popf
mov
popa
leave
shrb
jp
jno
inc
push
imul
jne
ja
mov
sub
cltd
pop
jb
cmp
lea
cmc
fsubrl
lret
cmpsl
push
int3
mov
jl
fcmovnu
xchg
inc
inc
addr16
in
dec
push
dec
jae
or
jo
es
cli
pusha
pushf
sub
sub
jae
mov
or
xchg
es
cmp
or
adc
xchg
push
push
xchg
xor
add
mov
mov
pop
aas
jge
mov
push
jmp
lahf
ret
xor
push
cmpsl
sub
test
jle
xchg
cld
add
jg
sbb
mov
out
js
xor
jnp
out
mov
pop
lret
out
fsts
lcall
pop
out
lret
fnsave
idivb
pop
xchg
pushf
push
cmp
test
and
pop
push
in
or
jmp
mov
pop
scas
aam
es
es
test
cmc
iret
pushf
in
mov
add
xor
add
push
sub
jmp
in
addb
push
test
arpl
divl
mov
enter
andl
lds
jecxz
jns
lds
push
push
daa
cmp
mov
mov
mov
cs
test
or
pop
dec
pop
aaa
fcmovnu
fs
pop
call
sbb
ss
adc
jbe
and
add
xchg
movsl
sbb
cmp
jecxz
int3
pop
pop
insb
or
enter
outsl
sub
sub
mov
dec
out
jno
mov
fstpt
pop
or
adc
mov
out
adc
shll
rcrl
mov
pushw
cltd
inc
push
loopne
int
rol
aam
pop
dec
rcrl
push
push
xorl
test
ret
aad
jge
jb
or
movsl
inc
clc
shll
add
dec
xchg
loopne
add
repnz
pusha
jae
out
inc
popa
push
adc
bound
mov
arpl
fidivrs
lcall
into
add
andl
and
ljmp
xor
arpl
cmp
inc
mov
mov
fcmove
inc
jae
ja
ret
xor
das
push
fld
incb
loop
dec
inc
xor
popf
xor
sub
mov
cmpb
lds
es
call
dec
cmpsl
jl
push
in
dec
jo
mov
les
xor
jge
xchg
outsl
fldt
orb
push
cmp
xor
xchg
orl
out
repnz
sbb
sbb
paddusb
cmp
xor
mov
sbb
dec
out
jmp
lret
xor
test
pop
icebp
dec
addb
rol
xor
rcl
jo
mov
and
repz
jb
pop
ficoms
dec
push
inc
cwtl
pop
push
ret
ds
mov
fwait
xor
cmp
shlb
xchg
xlat
scas
pop
dec
loope
inc
or
mov
jb
stc
cwtl
push
orb
int
jle
mov
int3
adc
mov
fnsave
jle
pop
lods
test
loopne
test
div
std
mov
mov
int3
sbbb
out
and
aam
add
dec
pop
inc
gs
jecxz
fdiv
and
pop
push
frstor
xor
aam
jae
lahf
ret
decl
iret
push
js
out
xchg
in
dec
jne
call
jb
xchg
pop
mov
add
lds
mov
inc
or
out
cmpsl
and
mov
inc
nop
dec
paddq
iret
xchg
push
jmp
mov
jo
mull
repz
repz
into
sbb
pop
in
ret
aas
inc
xchg
ljmp
xchg
mov
arpl
pusha
stc
aam
cmpb
lods
movsl
jne
out
mov
ds
and
inc
cmpl
xchg
adc
out
call
inc
lret
adc
imul
sbbb
mov
rcll
dec
movsl
jae
mov
mov
icebp
in
push
sub
rclb
dec
notb
jno
and
cmpsl
aad
lock
mov
flds
sahf
sti
add
jae
jge
arpl
xor
pop
test
lahf
push
mov
ret
mov
push
test
shlb
inc
ret
jp
lret
pop
sbb
loop,pt
mov
dec
inc
ss
sbb
incb
add
test
in
sub
outsb
cli
cmp
in
pop
jns
mov
aam
fwait
mov
inc
addr16
shl
sbbl
aaa
cmp
sub
out
adc
clc
push
sarb
fwait
dec
xchg
inc
stos
mov
and
dec
jge
sub
dec
and
sbb
into
inc
sbb
pushf
outsl
mov
mov
add
sbb
cmp
out
cltd
xor
lret
rcrb
loope
stc
leave
jle
stc
fs
xchg
push
mov
push
or
inc
imull
out
xchg
in
cwtl
adcb
icebp
add
xlat
arpl
pop
movsb
fiaddl
inc
inc
xor
les
or
testl
iret
sub
movsl
sbb
or
sti
dec
or
fwait
icebp
inc
dec
in
clc
mov
mov
add
push
in
loope
or
pop
repnz
mov
popa
adc
gs
jle
xchg
les
jns
sub
lcall
sahf
insl
jnp
addb
dec
inc
ss
jbe
xor
loope
and
lock
fs
dec
mov
mov
stos
sub
xor
outsb
pop
xor
push
and
cs
mov
insb
push
fimull
fmuls
insl
lret
mov
test
push
dec
dec
jne
cmpsb
bound
cmpsl
and
lods
leave
adc
mov
sti
add
movsb
dec
jo
fnstcw
sbb
mov
cld
inc
xchg
cmp
pop
nop
dec
inc
js
and
cmpsb
movsl
test
fistpll
jbe
mov
and
sti
push
add
add
cmp
mov
je
pop
jmp
sub
jo
dec
ret
jecxz
in
dec
mov
adc
sbb
lcall
inc
outsb
ret
dec
push
mov
mov
sldt
rorb
lock
imul
pop
jg
rcll
pop
and
or
sub
out
inc
stos
lds
pop
shll
mov
in
outsb
cmp
enter
push
adcb
push
loopne
adc
add
pushf
pop
loop
lret
repz
jo
aam
lret
test
or
jl
mov
xor
pop
xor
outsl
sahf
loopne
pop
sti
cmpsb
jp
and
push
mov
imulb
test
jae
fldln2
xchg
lcall
xchg
fs
and
mov
bound
rolb
add
insb
pop
mov
mov
pusha
loop
cld
or
xor
adc
dec
jo
inc
insb
push
jl
mov
mov
shr
cld
and
sbb
sub
cmp
dec
jo
inc
insb
push
jl
mov
mov
shr
cld
and
sbb
sub
cmp
dec
jo
inc
insb
push
jl
mov
mov
shr
cld
adc
add
ss
cmp
dec
jo
shrb
mov
sub
and
adc
add
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
mov
imul
shl
pop
and
jno
arpl
push
leave
inc
dec
mov
mov
imul
pop
mov
xor
add
adc
inc
xchg
and
mov
ja
sbb
push
aas
pop
fxch
out
lcall
mov
popf
and
jne
or
jo
insl
jns
xchg
int
sbb
xor
inc
lods
stc
in
int
fstpl
lds
lds
inc
lock
sbb
pop
adc
jno
jns
adc
jo
mov
xlat
mov
movsb
jl
imul
ja
dec
mov
cltd
mov
push
mov
push
cmc
jno
mov
xor
mov
into
mov
std
push
jo
sahf
enter
movsb
xor
sub
test
rorl
faddl
lods
and
pusha
xor
mov
or
nop
bound
xor
sbb
sahf
leave
push
fcmovb
jb
outsl
push
or
add
dec
or
inc
outsl
mov
out
add
cltd
sti
push
fldcw
inc
jecxz
mov
push
test
mov
ja
fs
gs
push
mov
hlt
pop
loopne
lock
add
or
into
push
jmp
mov
nop
and
sub
push
out
rorl
xchg
jns
dec
rcrl
test
adc
popa
leave
push
flds
mov
mov
imul
pop
shrl
cltd
add
jno
popa
leave
push
flds
mov
jbe
xor
lods
cmpsb
push
sti
mov
icebp
dec
dec
ljmp
jno
lds
lret
loope
pop
outsl
mov
adc
sub
nop
sarb
cmp
push
push
jge
loop
jmp
cwtl
aam
mov
adc
xor
aaa
jl
lock
sbb
push
inc
mov
jecxz
gs
sbb
mov
je
fstpt
ljmp
stos
inc
ficoml
mov
ds
lea
loopne
popf
xchg
cmp
pop
fwait
cmp
icebp
sti
pusha
ret
arpl
movsl
lcall
push
dec
test
inc
insl
or
fsubrs
lods
mov
jne
mov
push
push
push
or
addr16
ds
ret
fistps
jmp
aam
ja
inc
or
mov
in
lret
xor
out
jb
mov
mov
dec
add
clc
or
ficoms
xor
jb
dec
lock
cmpsl
shll
lods
sub
out
or
out
pop
lahf
icebp
xor
mov
pop
in
shll
jb
jmp
mov
std
cmpl
and
lds
push
fucompp
mov
filds
cld
mov
pop
sub
sahf
cld
xchg
dec
lret
repnz
in
sub
es
pop
mov
in
mov
jo
push
mov
pop
sub
adc
outsl
adcb
inc
orb
int
dec
ljmp
dec
cmp
lret
sbb
outsb
sbb
mov
mov
mov
dec
pop
insl
add
int
mov
ljmp
lcall
fstps
ds
in
rolb
adc
aam
ret
push
mov
xchg
xchg
jbe
aas
fwait
xor
into
cmp
jno
or
xchg
or
int
movsl
inc
mov
mov
aaa
adc
and
mov
cmpsb
sub
mov
loope
mov
je
sbb
sub
push
stc
push
pop
call
push
into
mov
jge
lea
push
xor
jecxz
fldl2e
mov
movsb
xchg
sbb
js
lods
pop
mov
sbb
hlt
test
inc
push
dec
lock
das
adc
add
xchg
ror
jl
insb
lahf
call
stc
xchg
sbb
fildl
pop
cs
cmpl
loope
aad
or
pushl
pop
jnp
insl
mov
xchg
mov
jne
add
push
ffree
xlat
pop
cld
cmp
jns
add
pop
imul
daa
popa
insl
loopne
cmp
hlt
jmp
jecxz
jle
fwait
and
pushf
mov
mov
scas
xchg
enter
ss
add
xchg
inc
sbb
lods
push
lcall
jns
or
in
scas
push
add
insl
fsubs
mov
ljmp
mov
pop
jg
shlb
dec
ret
rorl
aad
inc
and
fs
sbb
repnz
push
mov
xchg
sti
adc
int
mov
adc
in
shll
popf
enter
out
cmp
scas
xorb
into
arpl
add
mov
dec
popa
aaa
push
mov
cld
ss
sahf
xor
or
mov
mov
fwait
mov
lcall
or
mov
or
pop
ds
sarl
xor
cltd
ret
pop
incl
jno
dec
xchg
iret
aad
and
push
scas
mov
jmp
les
push
pop
aad
jmp
cmp
out
dec
mov
inc
mov
cmp
jne
xchg
cmp
fcmovne
sbb
aad
dec
pop
sbb
ret
sbb
in
icebp
dec
movsl
loope
stc
pop
xchg
mov
out
jg
mov
mov
popf
imul
scas
lods
dec
int
sub
add
notl
rcll
cvtps2pd
sbb
push
push
sahf
rcpps
mov
mov
sbb
cmp
fiaddl
add
cld
outsl
dec
pop
ss
testb
inc
int
cltd
or
fwait
aad
in
ljmp
dec
mov
ror
imul
notb
lahf
inc
pop
jg
pusha
pushf
test
cmp
test
mov
ljmp
iret
in
int
and
mov
dec
cld
nop
xlat
inc
and
push
or
xchg
xor
in
rol
icebp
sub
outsb
pop
dec
repnz
shr
push
mov
xor
jns
pop
adc
or
repnz
mov
and
mov
test
cmp
jmp
mov
dec
lods
jle
int
imul
jp
xchg
outsl
leave
sbb
lods
push
xchg
or
mov
add
mov
or
gs
std
mov
and
push
sbb
cmp
das
aam
cmp
lods
push
jp
push
mov
mov
mov
mov
push
push
push
idivb
in
add
inc
xor
imul
cltd
test
lea
lock
jne
mov
clc
dec
rorl
dec
pop
lcall
xchg
fadds
push
das
jmp
cmpsl
popf
dec
mov
cmpl
outsb
or
and
lahf
jns
dec
aam
ds
dec
push
mov
int3
lret
push
es
mov
adc
and
scas
jbe
xchg
popf
addr16
ret
mov
sbb
loopne
inc
lea
shlb
std
cltd
in
jmp
push
sub
push
imul
rolb
lahf
push
sub
xor
test
shll
adc
jmp
mov
pop
add
in
test
cs
cmpsb
xor
das
push
lea
in
jge
iret
mov
cmpl
pop
adc
sarb
iret
adc
icebp
mov
int
inc
testl
mov
mov
cs
outsl
pop
mov
mov
add
outsb
mov
aaa
push
fbstp
dec
cwtl
das
mov
push
dec
dec
jmp
push
ss
add
mov
ss
dec
and
push
leave
mov
in
jge
xorl
out
mov
clc
fcompl
jb
pop
ficompl
sbb
jne
test
inc
out
and
hlt
ficoml
inc
mov
aad
subb
mov
cwtl
mov
mov
repnz
loopne
jmp
scas
xchg
inc
jecxz
add
cs
cmp
push
mov
inc
arpl
or
sub
mov
and
jno
or
sub
xchg
out
mov
mov
pushf
fsubrl
lahf
movb
addr16
jno
mov
add
mov
aas
mov
js
std
jae
or
and
dec
je
out
roll
inc
xlat
js
out
fwait
push
daa
inc
xchg
xor
arpl
es
lea
mov
jbe
lret
aaa
xchg
mov
lret
out
jmp
sub
mov
pop
test
xchg
lock
in
fdivl
push
cmp
rcr
mov
scas
push
or
aam
in
lods
fisubs
jg
or
je
outsl
jo
shlb
dec
into
ja
outsb
pop
cs
adcb
repz
cwtl
sarl
int
insl
stos
bound
cltd
int3
in
jecxz
sbb
addl
dec
imul
sbb
inc
sbb
rcll
ficompl
popf
loop
stc
inc
lahf
jnp
jno
scas
inc
adc
xchg
test
lods
clc
movsl
orb
and
adc
add
add
and
lea
and
lret
jg
idivl
pop
cmpsl
xor
mulb
sub
and
and
jo
cmpsl
add
ret
mov
mov
xor
insl
sbb
and
les
adc
imul
je
lods
inc
stos
mull
repnz
shlb
xchg
insb
cmpsb
jg
mov
and
pop
push
fdiv
or
mov
movsb
out
jge
into
xchg
pop
adc
and
testb
dec
sbb
and
data16
cmpsb
or
cmp
cmp
ret
insb
rcrl
movsl
stos
push
lock
mov
jp
pop
ss
int
jae
mov
adc
sub
inc
jmp
sbb
mov
cs
insl
iret
cli
xchg
dec
pop
xor
dec
mov
sub
jb
fdivrs
fs
adc
xor
push
iret
leave
shl
pushf
adc
xchg
fists
ljmp
push
addl
xchg
cmpb
lods
mov
je
cmp
pop
popa
ret
les
adc
mov
mov
inc
mov
or
imul
cmp
adc
inc
mov
sbb
lea
xor
cmp
pushf
mov
scas
add
stos
es
mov
pop
fcomps
cmp
mov
cli
lods
in
sbb
aam
aaa
pavgw
shl
cli
pushf
and
sbb
addb
pop
leave
or
mov
cmp
out
mov
push
inc
mov
push
sub
mov
mov
roll
insb
popa
sahf
push
bound
or
and
outsl
mov
xchg
aaa
psadbw
push
inc
push
getsec
stos
dec
jle
in
push
push
cli
scas
ljmp
jle
pop
xchg
dec
sbb
rorl
push
sti
cli
into
test
mov
cmp
js
add
aad
xchg
je
sahf
aas
push
imul
ret
cmp
or
pop
je
mov
lods
jl
pop
jl
insl
mov
mov
out
pop
xchg
data16
lods
cmp
out
sbb
outsb
adc
gs
aaa
mov
adc
mov
loopne
imul
repnz
dec
cwtl
or
xor
sub
jmp
push
cmp
in
mov
mov
jnp
lods
xchg
popf
pop
in
mov
jle
call
icebp
out
sti
leave
fdiv
aad
cwtl
and
push
fists
xlat
sbb
mov
hlt
add
imulb
imul
lods
pop
roll
movsl
je
bound
movsl
fcmovnb
testl
and
shl
jno
into
ret
or
push
inc
rolb
stos
mov
out
je
push
fs
mov
icebp
cmp
cmp
mov
xor
rclb
push
jb
mov
hlt
jns
xor
rcr
inc
mov
sub
jmp
mov
stos
stc
sub
dec
xchg
imul
mov
cli
outsb
jnp
dec
mov
push
out
dec
push
xchg
jg
push
mov
clc
int3
sub
push
jmp
inc
lods
cmp
sbb
hlt
adc
es
mov
lods
faddl
xchg
add
icebp
fidivrs
arpl
jo
mov
orl
popl
mov
movsb
cmp
jp
pop
or
hlt
leave
xchg
aam
out
dec
or
add
dec
mov
jl
mov
out
shlb
xlat
sub
cmp
push
push
adc
xor
dec
stos
lss
arpl
and
sti
pop
mov
mov
push
pop
push
aad
stc
aad
ret
mov
pop
test
or
adc
xchg
repnz
and
adc
xor
and
int
loopne
jp
aaa
fisubrs
scas
mov
sub
jmp
dec
out
addr16
into
sarl
push
push
sbb
dec
push
pop
cmpsl
sahf
pop
jnp
inc
sahf
rcrl
pause
shrl
in
lcall
mov
scas
fiaddl
xchg
cwtl
shlb
dec
and
mov
in
add
add
mov
cmpsl
cmpsb
pop
sub
outsb
push
cld
inc
lahf
es
pop
sub
cmp
push
mov
inc
lret
push
shlb
xchg
push
dec
pushw
sbb
dec
sub
push
pop
ret
outsl
mov
ret
div
push
scas
shll
std
cmp
inc
cli
lret
dec
jns
fdivl
cmp
lea
popa
mov
lret
jno
push
adc
pop
xchg
xchg
dec
test
push
xchg
push
daa
push
xchg
jl
dec
push
rcll
add
jae
and
mov
adc
pop
sahf
dec
mov
insl
cmp
cmp
sbb
inc
stc
bound
repnz
jl
in
pop
fbstp
jbe
cmpsl
insb
adc
pop
push
insl
pop
outsl
int3
jbe
fimull
popf
ret
adc
mov
mov
mov
xchg
add
pop
imul
mov
mov
add
push
inc
and
push
or
test
icebp
loope
pop
shld
clc
pop
mov
nop
add
into
pop
jecxz
insl
repz
push
inc
fwait
ss
sbb
ficompl
popf
loop
dec
adc
nop
movsb
andb
gs
mov
pop
pop
inc
cld
stos
jge
fs
loope
mov
xorb
or
dec
bound
repnz
inc
sub
leave
pop
or
sbb
dec
and
iret
push
inc
or
scas
lcall
jl
sbbb
popf
outsl
fsubl
sbb
mov
imul
mov
mov
call
mov
in
cmp
popl
gs
cmpsb
sbb
fwait
add
mov
jge
lds
gs
or
sub
xor
fimuls
sbb
scas
test
leave
cmp
jl
jo
daa
inc
cmp
loopne
mov
ror
mov
insl
js
jbe
xchg
aam
jb
imul
sub
push
jp
pusha
popf
mov
jl
das
mov
mov
sbb
lahf
cltd
add
popa
inc
repz
addr16
fwait
mov
adc
mov
cmp
mov
lock
jb
lock
inc
out
lods
lret
int
cmp
setge
jbe
sbb
mov
fcom
and
pop
in
imul
mov
pop
pop
pop
imul
gs
ficoml
lret
push
leave
cwtl
xor
stos
sub
popf
inc
jb
inc
xor
and
cld
sbb
fdivrs
mov
xlat
mov
subl
push
stc
fistpll
mov
or
or
jecxz
add
int3
and
xchg
in
scas
mov
jl
mov
in
xor
or
ljmp
xchg
hlt
pop
cmp
add
stc
jnp
dec
xchg
mov
imul
push
xor
lret
mov
jnp
sbb
xchg
in
jne
xor
dec
lea
sahf
repz
fwait
lahf
or
inc
mov
push
push
and
lods
pop
push
sbb
pop
pop
cmp
adc
cmp
andb
adc
xchg
loopne
mov
outsb
insl
sahf
mov
xor
mov
add
outsb
sbb
adc
xor
xchg
xchg
ljmp
scas
sbb
pop
or
jo
adc
and
outsb
stc
sahf
xchg
push
xor
cmp
fwait
push
leave
addl
jo
imul
lea
sar
xchg
pop
pusha
fcmovbe
ljmp
std
aaa
sub
xchg
je
sbb
movsl
mov
mov
or
jnp
xchg
ja
inc
jns
std
int3
lods
clc
and
js
test
jmp
shlb
mov
movsl
pop
lcall
cmovae
mov
cli
test
lods
movsl
xchg
pop
sahf
stc
lock
and
inc
repz
mov
popf
mull
or
xchg
or
xchg
push
and
mov
insl
idivl
mov
xor
xor
inc
jmp
imul
fistpl
inc
clc
das
xor
mov
inc
lcall
or
repz
jnp
xor
cltd
std
add
cltd
jb
adc
test
xchg
push
ret
sub
fisubrs
inc
arpl
jbe
and
jl
je
in
in
in
push
and
cmc
push
cli
aad
cli
jecxz
add
mov
push
add
cmp
inc
push
addr16
inc
data16
xchg
xchg
lods
addr16
aam
and
and
inc
xor
mov
int3
insl
adc
cmpsb
lock
or
pop
jmp
dec
mov
int3
xchg
outsb
cmp
pop
jno
stc
and
push
sbb
or
icebp
addr16
cwtl
cmp
gs
jb
ds
cmc
repnz
js
mov
jns
mov
mov
outsl
cmp
ljmp
or
fs
ja
ds
push
dec
jmp
pop
pop
fstl
pop
jecxz
mov
aas
lds
xor
mov
push
shlb
cld
mov
push
repnz
adc
and
int
mov
jns
dec
cmp
add
and
jns
jmp
push
mov
jl
mov
adc
enter
add
jo
sbb
jp
aas
inc
lods
mov
inc
loopne
lcall
push
push
rcrl
in
aad
sbb
sbb
test
hlt
mov
repz
push
adc
mov
xor
jo
lahf
sbb
cltd
sbb
sarb
inc
popa
mov
and
or
test
insl
cld
out
icebp
das
dec
mov
or
cmp
mov
out
cmp
movsb
lock
jle
jmp
lahf
mulb
fdivrl
insb
jle
mov
hlt
js
fs
fwait
in
xor
pop
aad
outsb
cmp
cs
bound
push
loope
ja
sub
xchg
add
punpckldq
sbb
ss
std
xor
adc
xchg
mov
ret
icebp
fistps
test
andb
ret
leave
dec
push
jmp
adc
cmp
pop
repz
or
adc
rcll
pop
dec
push
xor
inc
loop
das
shll
mov
pop
icebp
in
cmp
or
sub
sbb
les
jg
mov
push
push
shlb
aam
pop
lret
sidtl
fistpl
ds
and
shrl
iret
jg
aad
enter
cmpsl
in
sbb
movsb
push
out
push
sbb
push
ficoml
jnp
pop
cmc
icebp
add
or
sub
lea
clc
subb
addl
sub
leave
cmp
xchg
xor
xor
int3
out
xchg
dec
jge
pop
cmp
lcall
lret
imul
add
mov
sub
sub
dec
push
push
push
xchg
push
inc
orl
mov
fidivrl
pop
mov
inc
daa
add
mov
movsb
jbe
scas
lock
data16
loop
scas
adc
rorl
imull
loop
jns
jmp
call
push
jne
mov
mov
or
mov
mov
xor
mov
push
imul
movsb
call
or
push
mov
jmp
ret
daa
add
push
mov
movsb
sbb
enter
test
or
add
cmp
add
test
scas
dec
xor
push
shrb
inc
xchg
mov
sub
aam
cmpsl
sarl
add
scas
div
lock
dec
jp
dec
das
push
arpl
jno
shlb
xor
cmp
fsubl
adc
xchg
adc
jno
inc
jle
sahf
cli
dec
and
sub
cmp
mov
pop
pop
jnp,pn
dec
lahf
xchg
mov
sbb
xor
push
out
cltd
popf
cmc
sbb
mov
jle
pop
lcall
pop
jp
rolb
and
mov
cmp
cmpsl
mov
fcomip
push
je
mov
inc
mov
iret
call
jno
fsts
and
test
jl
andb
push
or
fadd
xchg
insb
add
add
aam
aaa
decl
jb
es
mov
mov
lret
loop
add
aas
fimuls
mov
std
mov
adc
call
push
cltd
rol
mov
cli
fisubl
nop
mov
addr16
data16
and
loopne
out
inc
movsb
ljmp
out
and
cmpsl
js
mov
gs
je
mov
rol
sar
incl
adc
ljmp
xchg
insb
lods
cld
loope
or
test
sub
hlt
hlt
inc
cmp
int3
aas
and
and
fmull
sbb
test
mov
das
mov
mov
call
add
sbbl
jno
cmc
loopne
jecxz
outsb
mov
push
pop
shlb
sahf
inc
int
imul
push
xchg
cwtl
cltd
inc
in
negl
pop
loope
adc
daa
test
mov
pop
lcall
mov
sub
leave
xor
fisubrs
pop
ret
sbb
aas
dec
push
pop
adc
jne
aaa
in
push
pop
cltd
sbbb
ret
loop
push
lock
arpl
dec
push
stos
cmp
ljmp
add
lcall
and
xor
test
enter
mov
les
and
mov
movsl
insb
sub
add
js
mov
imul
pop
shrl
cltd
add
jno
popa
leave
push
flds
mov
mov
imul
pop
shrl
cltd
add
jno
popa
leave
push
flds
mov
jmp
stc
icebp
jns
dec
rcrl
and
cltd
add
jno
popa
leave
jno
inc
cmp
xchg
cmp
dec
push
fld
test
adc
sahf
ss
es
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
push
jp
pop
xchg
lds
cmp
sub
sbb
or
js
push
dec
stos
dec
mov
cwtl
push
jp
or
sbb
sub
cmp
lret
sbb
push
cli
js
pop
lcall
mov
subb
loope
lock
sub
cmp
hlt
or
js
pop
incb
pop
mov
cwtl
push
xchg
stos
int3
call
fnstcw
ljmp
andb
jae
inc
push
sbb
jnp
test
bnd
xor
ljmp
pop
stos
mov
inc
pop
push
mov
into
push
cmp
xchg
push
sub
xlat
and
out
test
js
xchg
test
mov
imul
ret
leave
push
stc
sub
sub
fldcw
rcll
call
mov
lock
aad
insb
cmp
clc
leave
addb
cmpsl
stos
pop
ljmp
ja
pop
shr
sub
sarb
out
pop
cli
cmp
mov
mov
cwtl
push
jp
or
sbb
sub
cmp
lret
add
adc
pusha
mov
inc
stos
dec
cld
aam
int
std
sub
cmp
mov
dec
enter
inc
mov
test
out
jecxz
sub
adc
push
sub
fadds
cmp
dec
mov
mov
add
fildll
fstpl
les
hlt
push
loopne
mov
call
cmp
lret
sbb
or
js
push
mov
cwtl
push
jp
or
sbb
sub
cmp
lret
sbb
or
js
push
mov
daa
cwtl
sti
stos
xchg
iret
mov
jge
inc
sbb
push
mov
adc
stos
jmp
movsl
sbb
setno
xchg
push
gs
xor
rorl
cwtl
push
decl
xor
xchg
mov
mov
mov
xchg
and
add
lods
in
stos
xor
leave
int3
xor
iret
movsb
in
sub
insb
mov
or
insl
test
aas
xlat
pop
inc
out
dec
loop
pop
xlat
addr16
cwtl
popf
and
imulb
fmuls
and
mov
addr16
mov
dec
inc
lds
jp
adc
push
loopne
inc
stos
sub
mov
lret
dec
and
mov
dec
stc
sbb
sub
fs
andb
outsl
and
fdivrl
adc
icebp
ret
cltd
jl
mov
pop
test
pop
leave
push
dec
jbe
aaa
push
push
stos
jle
push
mov
inc
adc
adc
fisubl
rol
mov
popa
arpl
stc
inc
inc
xor
rolb
mov
dec
xchg
ja
inc
clc
cmp
push
cmc
in
push
push
mov
sbb
sbb
pop
mov
stos
or
mov
or
in
add
lods
aaa
cmp
pop
and
xchg
arpl
popf
push
rcrl
fs
lahf
sti
sub
cmp
incl
xchg
cmp
aaa
cmp
or
sub
pop
mov
push
mov
ljmp
das
and
adcl
mov
aas
and
fnstcw
ret
lcall
les
jo
or
push
jmp
loopne
or
mov
pop
sbb
fistps
mov
es
mov
or
inc
inc
cwtl
les
lods
pushf
fidivrs
ljmp
xor
in
popa
test
imul
mov
stos
pop
gs
sub
lea
rcrb
dec
cmpsb
clc
mov
sti
inc
dec
push
xchg
int3
fadds
jnp
push
jno
ja
hlt
sahf
mov
lret
xchg
sub
sbb
dec
fmul
jle
or
loope
fisubrl
test
hlt
mov
cmpsb
xor
ds
fs
mov
sbb
hlt
fsubrl
push
scas
mov
cmpsb
xchg
cltd
pop
aad
into
sahf
inc
push
js
push
mov
les
jo
sub
nop
sbb
in
mov
pop
add
arpl
aaa
int3
inc
jmp
mov
mov
test
sub
or
aas
xchg
rcl
jp
pop
mov
jge
dec
pop
jnp
push
jg
xor
lock
add
mov
je
push
pop
or
jnp
cmpsb
xchg
aaa
jmp
mov
loopne
scas
arpl
aam
sub
shlb
inc
sbb
mov
mov
mov
je
xlat
push
or
sub
mov
data16
daa
stos
sub
push
jecxz
cwtl
test
adc
xor
mov
jl
lret
popa
sub
movsl
int3
adc
xor
sarl
dec
xchg
loopne
sbb
jbe
mov
jno
or
das
xchg
jnp
lret
lret
xchg
mov
jp
adc
mov
inc
and
lock
and
jne
push
inc
cmpsl
rorb
dec
sbb
leave
and
jle
pushf
mov
add
mov
jg,pt
add
mov
imul
or
add
mov
or
shll
jo
jg
in
sub
push
dec
xor
lods
sub
int
loop
jo
imul
xchg
jne
pop
mov
leave
jge
rcrb
outsb
insb
rolb
outsl
shl
mov
adc
push
xchg
sub
mov
push
pop
sbb
movl
push
adc
movl
cmp
fsts
xor
ljmp
lds
adc
stos
cmp
ja
cmp
stos
ljmp
sbb
pop
add
ficoml
push
dec
stos
mov
jg
xor
push
clc
mov
dec
push
or
cmp
xlat
or
movsb
pop
dec
stos
gs
inc
lea
movsb
cmp
aaa
or
je
dec
and
roll
xchg
dec
xor
push
mov
inc
outsl
mov
lods
pop
push
leave
dec
mov
pop
scas
jmp
rorb
out
adc
idivl
ds
in
ret
cmp
fwait
mov
xorb
fisubl
adc
mov
fisubrl
mov
push
call
fnsave
out
adc
mov
arpl
xchg
jne
push
into
cmc
clc
sub
imul
xor
adc
add
ficoms
addb
inc
mov
in
add
sbb
pop
pop
cmpsl
ja
pop
movsb
jnp
shrb
sti
shll
xchg
jb
push
xchg
fcmovb
inc
push
inc
cs
hlt
sahf
mov
je
pop
stos
sbb
movsb
div
jne
fxch
fs
pop
into
fiaddl
sbb
inc
xchg
insb
pop
or
les
lret
dec
dec
gs
mov
aad
or
add
add
frstor
std
add
jnp
sub
pop
mov
dec
lock
bound
add
lods
repz
sub
pushf
inc
lods
fstps
jp
incl
loope
jmp
cmpsl
dec
scas
adc
lock
lods
cmp
mov
outsl
dec
out
cmp
inc
fisubrs
push
xor
inc
sbbl
mov
add
mov
sub
add
jp
dec
leave
xor
or
pop
xor
sahf
xchg
imul
addl
push
rolb
dec
cld
xchg
ja
in
sub
inc
insb
inc
cmp
pop
popa
in
sub
xchg
in
or
js
lcall
sbb
mov
lahf
mov
leave
sahf
ret
nop
cwtl
out
sbb
test
mov
stc
imul
ficoml
movsl
sarl
mov
mov
shl
sub
pop
push
ljmp
push
movsl
jg
mov
lock
cmp
cltd
mov
adc
mov
gs
shll
cmp
mov
sub
xor
mov
rcrb
pop
lock
pop
xchg
push
cwtl
xor
add
ficomps
xor
mov
sub
push
jae
lods
xchg
jnp
xchg
pusha
bound
push
testl
adc
sbb
into
aas
adc
notb
test
ss
inc
mov
lret
sbb
adc
imul
or
xor
pop
inc
mov
dec
gs
cld
sub
sti
outsb
cmp
jb
cmp
mov
pop
rclb
mov
mov
movb
pop
or
icebp
ret
and
int
movsl
stc
cmp
in
in
out
lahf
xchg
in
jle
adc
mov
jecxz
sbb
bound
call
std
dec
add
xchg
mov
sub
pop
mov
mov
ljmp
aad
mov
bound
push
fwait
jmp
push
xlat
jno
adc
dec
cmp
cmp
in
inc
pushf
adc
out
das
push
popa
jmp
bound
scas
mov
flds
outsl
shrb
insl
fs
scas
lods
arpl
jns
dec
add
xorb
out
xchg
js
push
push
cltd
or
fwait
lock
sbb
mov
movsl
push
adc
in
loopne
xchg
add
jb
mov
shrb
test
sub
pop
mov
inc
or
inc
loop
stos
arpl
mov
aaa
pushf
cwtl
pop
inc
popf
idiv
test
shlb
mov
mov
fiaddl
sub
mov
push
pop
arpl
roll
sbb
shr
cld
cmp
test
cld
dec
cmpsb
rclb
xor
jae
cmp
adc
mov
dec
fimull
rorl
icebp
out
shrb
leave
jbe
stos
pop
outsl
jo
sbb
cmp
jle
jg
js
mov
sub
inc
xor
out
aam
lcall
lock
pop
sbb
sbb
add
xor
mov
push
test
dec
mov
insl
dec
out
lahf
xchg
lea
loopne
ret
pusha
pop
rclb
psllw
test
mov
mov
std
insl
or
rorb
mov
or
popf
pop
ljmp
aas
popf
ss
lods
mov
adc
cmp
cmp
push
fistps
xchg
add
push
jno
scas
add
xchg
sbb
cmp
lds
inc
fildl
mov
test
jae
sub
loop
inc
add
ljmp
push
jne
shlb
and
repnz
xor
mov
test
jb
dec
loopne
pop
je
fcomps
mov
inc
push
add
cmp
add
popf
adcb
xor
push
les
xchg
xchg
mov
cmp
mov
push
xchg
lahf
sub
mov
xchg
dec
pop
xor
or
mov
pusha
pushf
pop
cld
push
cs
pop
loopne
xchg
add
gs
jae
fdivs
in
jb
mov
inc
xchg
test
lock
shrl
fsubs
popf
enter
cld
jle
in
jmp
mov
fmull
sarl
push
scas
add
shlb
scas
and
ret
adc
jne
mov
frstor
mov
or
ja
insb
int
and
and
icebp
out
push
jecxz
loope
sahf
jae
fnsave
in
fimuls
pushf
jo
jno
xchg
xor
data16
test
clc
inc
fiadds
aam
int3
into
test
into
subb
lods
push
inc
cmpsb
sub
or
clc
pop
jle
fcompl
mov
incb
and
sbb
ret
outsb
push
lcall
xor
dec
jle
shrb
ret
jmp
lea
loopew
gs
xchg
sub
mov
mov
pop
add
dec
adc
fcomps
stc
lods
mov
cmp
cmp
pop
inc
sbb
clc
std
shlb
xlat
js
ss
mov
and
adc
stos
mov
mov
jnp
adc
insl
cmp
scas
xor
inc
xor
or
je
ja
std
dec
sbb
mov
pusha
xor
pop
fcmove
pusha
mov
add
leave
pop
or
enter
movsb
sbb
test
clc
mov
mov
push
movsl
jns
stc
mov
insb
pop
dec
ss
inc
xlat
inc
sbb
jg
jbe
and
in
jae
xor
rol
jmp
int3
and
jp
or
out
jb
gs
mov
cli
cmc
and
cli
fists
into
sbb
popf
out
nop
mov
cmc
fistpll
shlb
std
cli
or
pop
out
lea
jnp
out
jmp
xlat
xchg
dec
mov
pop
in
sub
or
cmc
xor
sbb
sahf
xchg
leave
and
and
ret
iret
ljmp
in
stos
das
add
add
jmp
push
jo
test
out
and
cmp
xor
lea
xor
mov
mov
and
imul
insl
ret
ja
fucomi
push
lea
mov
adc
inc
mov
inc
mov
mov
push
xlat
popf
lahf
test
fidivrs
xor
cmp
mov
add
cmpsl
sti
mov
sti
in
mov
pop
xor
cmpb
mov
loopne
mov
inc
and
mov
xorb
shll
dec
and
adc
je
mov
add
sub
fyl2x
jns
pop
inc
scas
sti
xchg
out
sbb
aad
mov
in
nop
jge
dec
int
cmp
rolb
xchg
decl
jl
inc
sub
xor
daa
and
lret
adc
push
repz
ror
push
test
and
cmp
pop
sub
or
cmp
or
mov
mov
test
xchg
lret
subl
add
push
push
and
pop
or
loop
test
sub
dec
imul
push
outsl
adc
jae
xlat
xor
in
cmpsl
xlat
inc
shlb
push
stos
inc
pop
add
jmp
lods
decb
subl
mov
inc
and
inc
fwait
lea
inc
xchg
cmpsb
mov
dec
adc
lahf
mov
aaa
loope
lret
ret
leave
lods
mov
ds
jo
push
add
das
xchg
push
das
mov
cmp
xchg
cmp
adc
les
out
lods
push
jge
outsb
sub
xor
lret
pop
ret
fstpl
test
fisttpl
test
aaa
mov
jp
pop
fucom
mov
aad
out
adc
or
jge
cmpsl
sbb
pop
call
subl
pop
enter
ljmp
popf
inc
sbb
sbb
xchg
push
jmp
mov
sbbl
pop
out
jl
dec
int3
lods
fistps
lods
pop
iret
lods
xor
scas
ret
cwtl
arpl
adc
mov
loopne
dec
repz
jb
out
aaa
jp
sbb
push
adc
jg
popf
decb
test
jl
andl
stos
push
adc
stos
insl
fxch
inc
sbb
bound
and
in
jp
xchg
push
sbb
push
inc
std
testb
mov
mov
adc
nop
fcoms
xchg
fs
cmc
inc
out
sub
inc
inc
jle
jne
add
mov
cmp
mov
stc
jno
clc
loopne
ds
rolb
je
pop
cmp
cld
rolb
imul
mov
or
sti
rcrb
sbb
xchg
add
xor
jns
mov
mov
pop
out
and
xchg
fsubrl
dec
cmp
les
jle
pop
or
ss
push
push
stos
or
mov
xor
lods
sar
in
add
mov
cs
pop
stos
push
cwtl
jnp
clc
cld
mov
sbb
sahf
push
or
lock
or
jbe
mov
je
pop
sahf
pop
aad
lcall
cmp
inc
jns
cmp
ja
pop
dec
fwait
dec
icebp
or
daa
inc
mov
popf
stos
bound
div
push
scas
add
pop
leave
lea
mov
xchg
lcall
fimuls
adc
in
xchg
sub
cwtl
jbe
mov
in
stc
outsl
movsb
adc
dec
mov
lods
push
mov
dec
fidivrl
lahf
iret
sub
cld
add
rcll
xor
cwtl
test
mov
or
mov
mov
fucompp
inc
sar
mov
fs
xor
cmc
inc
js
lahf
jae
mov
popa
insl
jecxz
and
xor
jmp
and
iret
and
sbb
repnz
in
jmp
flds
pop
push
rorb
outsb
outsl
adc
cs
out
pop
push
xlat
fcompl
icebp
icebp
ds
adc
xchg
shlb
leave
rcrl
icebp
outsl
dec
int3
popf
sbb
shr
les
cld
lods
or
sub
dec
cmp
movsl
xchg
orb
lods
inc
dec
push
das
cmp
ljmp
loopne
xchg
lret
sbb
int
adc
nop
xor
cmp
mov
jo
pop
jmp
fsub
leave
mov
inc
xchg
stos
add
or
bound
cltd
cmp
scas
cmp
bnd
addb
vmwrite
cld
loope
in
lcall
cmp
xchg
in
lcall
stos
push
sbb
jg
jbe
rcrb
sub
xor
cmpsb
or
add
rcll
cmp
mov
add
insl
insl
into
scas
js
test
or
mov
shrl
jle
das
in
sub
sub
push
test
jle
imul
and
popa
roll
inc
cmpb
not
addr16
data16
repnz
dec
movl
push
xchg
hlt
or
xchg
push
sarb
rdmsr
push
jecxz
loopne
mov
rorb
dec
je
inc
ja
sbb
cmp
loop
add
js
pop
and
imul
jae
adc
add
mov
je
mov
pop
push
test
dec
icebp
pop
fs
cmp
test
push
push
xchg
jns
daa
xchg
cmp
adc
add
pop
cltd
fmull
mov
add
and
add
outsl
addb
out
jmp
mov
jecxz
arpl
sbb
inc
push
shl
cmpsl
sbbl
or
jmp
mov
loop
mov
bound
daa
inc
adc
mov
xor
mov
sbb
jmp
movsb
mov
out
arpl
repz
push
lahf
mov
xchg
sub
shr
jno
sti
inc
stc
out
mov
lods
xchg
hlt
fbstp
xor
movsb
sbb
lods
xchg
xchg
pop
addr16
les
sahf
adc
scas
or
ret
scas
and
mov
dec
sub
inc
in
pop
ja
push
fs
test
fcomps
push
pusha
sarl
pop
jo
jg
dec
cltd
add
daa
leave
adc
and
mov
or
inc
std
test
fdivl
sbb
mov
cmp
mov
pusha
jo
push
push
push
in
sbb
fwait
mov
rorl
add
cwtl
mov
cltd
into
mov
scas
pop
fwait
lret
xchg
mov
mov
mov
into
pop
mov
stos
gs
dec
mov
mov
out
das
pop
out
lds
sub
insb
imulb
push
jecxz
push
xchg
adc
or
dec
jp
push
leave
in
dec
dec
jo
jl
and
jg
xchg
mov
lret
movsl
xchg
loope
adc
xchg
js
int
push
xor
mov
in
outsb
push
adc
xchg
sarb
mov
mov
test
mov
jle
jbe
repnz
xor
pop
cs
cli
mov
pop
movsl
lcall
mov
rcll
shl
push
lahf
mov
pop
sbb
shrl
inc
mov
mov
mov
pop
sbb
push
mov
jnp
lcall
adc
and
push
ret
xor
sub
scas
mov
push
dec
cmpsl
sbb
pop
xlat
push
mov
clc
inc
mov
dec
xor
mov
std
test
out
dec
out
or
rcrl
xchg
mov
js
mov
pop
xchg
cmp
stc
mov
push
sbb
loope
outsb
cmp
and
sub
and
ja
jno
les
mov
fistpll
mov
fisttps
loopne
fwait
inc
push
or
push
mov
ficomps
or
mov
rol
add
sbb
pusha
in
leave
mov
inc
lahf
mov
jle
adc
inc
inc
xchg
mov
xor
push
mov
fwait
mov
or
jb
mov
loopne
inc
adc
pop
xchg
mov
mov
aas
mov
jo
mov
cmp
mov
sahf
daa
mov
and
ljmp
dec
sub
mov
xor
jae
cmc
les
push
insl
or
test
xor
pop
push
fstl
sub
push
xor
sub
out
or
cmp
inc
jle
rcrb
push
dec
mov
or
hlt
scas
repnz
pop
mov
divps
sbb
or
sbb
orl
push
cmp
dec
enter
leave
mov
das
aam
pop
addr16
sub
cmp
fld
xchg
xor
inc
hlt
xor
aad
cmp
dec
rcrl
aam
xor
jmp
imul
or
stc
push
addr16
xor
push
sahf
jae
mov
leave
call
iret
push
jle
test
in
ja
inc
push
jle
or
push
add
add
fs
jp
jmp
push
scas
sbbl
sbb
cmp
xor
push
in
out
lock
cmc
outsb
and
and
popf
mov
push
mulb
mov
ret
sbb
leave
cmp
mov
cld
mov
push
inc
cwtl
adc
or
aaa
mov
ret
xchg
fdivr
push
sbb
andl
push
jp
mov
add
jno
popa
rolb
pavgb
dec
clc
inc
xor
inc
mov
int
stos
dec
jmp
pop
dec
ret
dec
push
out
adc
and
dec
mov
sbb
dec
inc
pop
aam
sarb
jbe
sub
cs
add
mov
clc
jae
fsub
scas
movsb
lahf
out
jecxz
mov
push
popa
sbb
and
rolb
or
stos
jb
xchg
imul
out
mov
push
pop
xchg
pop
xchg
imul
fsubrs
enter
sub
sbb
or
js
push
mov
cwtl
push
jp
or
sbb
sub
cmp
lret
sbb
or
js
push
mov
cwtl
push
jnp
or
sbb
sub
cmp
lret
sbb
or
js
imul
cltd
push
jle
or
lcall
xlat
jo
ljmp
cmpsl
push
mov
test
mov
xlat
out
mov
lods
out
mov
jbe
push
sbb
daa
js
dec
pop
pop
pop
test
mov
xlat
call
xchg
jecxz
imul
jl
sbb
push
js
dec
pop
pop
pop
test
mov
iret
call
lahf
fmuls
jnp
and
push
ss
stos
mov
mov
outsl
clc
jbe
and
mov
dec
push
jecxz
push
outsb
and
add
jge
adc
inc
ret
js
push
test
popf
test
inc
insl
imul
xor
sub
pushf
mov
ss
push
ja
sub
icebp
mov
mov
sbb
repz
sub
ficoml
clc
pop
pop
push
int3
or
cmp
ret
fcos
cmp
xchg
out
in
jp
test
dec
xchg
push
sbb
pop
adc
push
js
push
sbb
push
vmwrite
dec
add
mov
xlat
call
xchg
mov
cmp
pop
sbb
aas
js
dec
sbb
roll
test
cltd
repnz
je
or
push
lret
mov
mov
enter
dec
adc
adc
pop
push
or
pusha
pop
arpl
out
mul
mov
clc
mov
xchg
xchg
sub
ja
inc
sbb
daa
js
dec
pop
pop
pop
test
mov
xlat
call
xchg
xchg
sub
ja
inc
sbb
daa
js
dec
pop
pop
pop
test
sbb
aad
sub
sub
mov
dec
mov
leave
hlt
mov
test
popf
add
hlt
sub
shl
ja
jno
fwait
sahf
iret
stos
sub
add
sbb
dec
lret
jno
inc
sub
sbb
stos
clc
lods
adc
test
sub
stos
jno
push
inc
pop
ficoml
fildll
cmp
adc
test
mov
sub
mov
jle
cltd
mov
sub
inc
jle
inc
mov
sub
push
ss
mov
xor
scas
push
jge
and
push
test
mov
pop
testl
cmovnp
shlb
scas
enter
sahf
fwait
insb
xor
jmp
mov
fidivl
mov
cld
cmp
or
adc
or
add
inc
fsubrl
imul
push
inc
mov
jo
jmp
inc
orl
sub
cmp
push
dec
test
mov
sub
divb
sahf
pop
jb
pop
testb
and
xor
dec
addr16
add
int3
xchg
test
scas
jmp
and
pop
mov
jb
mov
mov
dec
cltd
push
mov
push
sub
mov
mov
cmpsl
dec
xor
dec
pop
cmp
add
in
cwtl
in
ljmp
cltd
sbb
xchg
sahf
lret
lcall
jp
pop
lcall
orl
pop
or
mov
adc
add
adc
push
jbe
adc
inc
add
xchg
sbb
adc
push
push
in
rorl
cmpsb
add
mov
push
mov
in
pop
fs
adc
loopne
pop
aaa
xor
sahf
cmpsl
test
mov
pushf
popf
push
jne
ret
fisubl
aas
jb
bnd
jnp
xor
inc
in
stos
pop
or
fcoms
sub
sub
pop
addr16
gs
popf
incb
and
stc
les
inc
sarb
pop
shll
scas
push
cs
sbb
add
lret
jno
pop
and
sub
pop
jmp
pop
iret
lods
je
and
mov
push
imul
adc
mov
jge
pop
int3
inc
and
mov
xchg
cmc
pop
lods
stc
push
je
out
mov
push
ja
inc
test
cmpsl
xchg
aaa
sar
repnz
pop
cmp
sbb
xchg
lret
arpl
outsl
shlb
pop
gs
lock
dec
sahf
popa
adc
pop
add
minps
repnz
jae
pop
fs
push
xor
xor
popf
dec
inc
sbbw
stc
inc
jl
cmp
in
and
int3
fnsetpm(287
cmpsb
xchg
test
sub
or
cmpsl
sbb
xor
aam
push
or
add
mov
mov
leave
addb
add
jecxz
pop
jne
scas
leave
inc
dec
add
ss
repz
test
push
test
and
mov
push
outsl
in
pop
pop
jnp
adc
inc
pop
pop
aad
sbb
loop
clc
xor
sbb
popf
test
rol
pop
imul
lea
popf
outsb
ds
bnd
fwait
jecxz
xchg
popf
aad
xor
add
xlat
inc
sbb
mov
push
decb
das
push
dec
scas
rclb
je
add
push
adc
repz
pop
mov
xchg
les
int
inc
inc
jae
aad
std
dec
ds
and
inc
hlt
and
pop
mov
outsl
scas
loopne
daa
pushf
test
cmpb
idivl
xchg
and
xchg
test
dec
add
inc
add
xchg
sti
lahf
sahf
sub
xchg
cwtl
aas
leave
add
or
sub
or
pusha
gs
jge
jge
pushl
xchg
ret
lds
push
bound
out
push
dec
daa
xor
nop
pop
xchg
loop
cltd
mov
jmp
ljmp
inc
sbb
jle
int3
jle
jo
mov
imul
bound
sbb
outsl
push
outsb
xor
xchg
scas
jbe
xorl
inc
icebp
lret
pusha
or
or
mov
enter
mov
cmc
popf
add
lds
inc
shll
mov
out
movsb
aas
jmp
mov
xlat
and
repnz
fninit
ret
sub
loope
loop
mov
xor
pop
mov
cmp
dec
xchg
cmp
mov
enter
mov
movsb
push
push
insl
mov
add
push
dec
jb
push
pop
sbb
xlat
jae
frstor
aaa
pop
leave
mov
pop
or
cmpsl
mov
ja
ficoml
and
adc
js
dec
insb
or
jmp
hlt
repz
inc
mov
jae
or
movsl
push
jae
stos
pop
lcall
pop
pop
mov
into
sub
outsb
ljmp
lods
lea
iret
cmp
adc
push
cmc
sti
xor
lcall
aad
jnp
ret
rolb
das
mov
jno
repnz
and
pop
sbb
inc
mov
xchg
lock
mov
xchg
pusha
and
std
lret
xchg
aaa
inc
fmuls
in
lret
pop
pop
cmp
fstpt
dec
ja
orb
or
jns
mov
inc
xchg
repz
push
arpl
in
xchg
imul
dec
push
cld
inc
mov
ret
mov
mov
cli
mov
inc
andl
arpl
jo
cmp
mov
or
adc
ret
inc
mov
push
and
inc
ljmp
inc
mov
xchg
xor
inc
fwait
cmp
pop
xchg
subl
add
into
je
jmp
in
jnp
and
loop
add
std
fiadds
hlt
setbe
mov
dec
sbb
xorl
inc
in
into
add
mov
mov
repnz
jp
xor
xchg
jnp
icebp
or
dec
icebp
ror
addr16
push
cmp
test
pusha
movsl
popa
sub
mov
xor
in
in
cmp
loopne
xchg
lea
lcall
cwtl
push
inc
fs
out
jl
lret
xor
inc
or
ds
mov
stos
pop
repz
xor
ds
cli
ret
or
es
gs
add
push
notl
insb
loop
mov
subl
fstps
add
push
pop
xchg
sbb
in
loope
mov
or
jae
jmp
pop
jl
cmp
stos
push
subl
xlat
andb
out
push
sub
imul
sbb
sub
mov
push
cmpsl
pop
popf
mov
or
out
jle
outsb
pop
fmuls
push
push
sbbl
mov
jmp
push
cmc
pop
enter
push
arpl
jl
out
lret
insl
insl
fwait
sub
pop
dec
lcall
dec
mov
sub
push
das
ret
or
nop
adc
or
jg
test
fidivs
jb
mov
lds
push
popf
enter
hlt
and
inc
adc
sahf
icebp
dec
xor
aas
inc
mov
imul
sbb
mov
inc
cmc
out
out
fstp
movsb
lret
inc
inc
and
inc
pop
cmp
fiaddl
aaa
int
repz
adc
hlt
or
xchg
and
fwait
arpl
pop
mov
dec
ret
bound
mov
or
sub
or
dec
sahf
loop
fmul
insb
aas
andb
out
or
es
jg
sbb
or
jp
loopne
repz
ret
test
dec
int
dec
inc
test
mov
sbb
popf
pop
add
sarl
xor
test
rcl
push
cwtl
adc
mov
cmp
adc
inc
lcall
roll
dec
sbb
jge
mov
fsubs
mov
dec
loop
push
into
int
mov
mov
movsb
push
leave
call
ret
cli
push
outsl
insl
mov
loop
sbb
and
or
aam
jge
lret
ljmp
fldcw
loop
bound
loope
cli
and
xchg
andb
fistpll
sbb
sbb
add
mov
mov
scas
xchg
jno
xorl
lcall
cli
movsl
pop
add
pop
shlb
jae
dec
popf
test
push
aas
push
test
cmp
mov
add
add
sub
aas
lods
jns
push
ljmp
orb
lods
or
pop
dec
aaa
xor
and
push
sahf
add
mov
test
or
cmp
add
mov
push
leave
fwait
pop
adc
mov
mov
sahf
repz
ljmp
sub
mov
jo
cmpsl
push
or
or
mov
outsb
inc
jmp
dec
in
das
sahf
gs
lds
xor
sarl
mov
cmpsb
filds
mov
pop
lcall
and
pop
cs
nop
arpl
int3
xchg
mov
inc
or
fwait
ret
mov
in
cmpsl
popf
lock
cmp
adc
mov
dec
cs
sahf
dec
push
shlb
out
cli
movsl
out
int
xchg
inc
add
loope
pop
push
jp
push
mov
sbb
sti
cmpsl
push
mov
or
scas
mov
mov
mul
loop
sub
in
adc
push
into
mov
movl
lods
and
stos
cmp
jmp
loope
add
sar
in
push
ljmp
add
shrl
mov
mov
negb
adc
add
xchg
mov
mov
cwtl
insl
sbb
loop
bound
int
mov
mov
jg
push
leave
fcomps
out
pop
ja
push
mov
out
jge
ret
outsl
out
jno
lret
dec
div
and
mov
cmp
pop
dec
int
adc
inc
push
inc
dec
sub
enter
mov
cwtl
ret
and
push
shrl
mov
fsubl
lods
ret
inc
inc
xchg
xchg
xorb
pop
addb
pop
ret
jb
nop
test
mov
xchg
inc
cmp
lds
jmp
mov
mov
adc
inc
jl
dec
ret
cltd
addb
in
add
cmc
jp
dec
inc
jb
nop
fbstp
loope
mov
icebp
sbb
cmpsl
inc
loopne
stc
or
sub
stos
movsb
push
es
lods
pop
mov
daa
ret
mov
sbb
scas
loop
bound
mov
cmp
fisttpll
adc
sub
pusha
jp
mov
js
adc
enter
mov
mov
sete
push
lods
adcb
or
arpl
in
in
mov
cwtl
fdivs
jo
cmpb
lds
aam
test
fildll
clc
mov
lds
or
xchg
push
mov
ret
jae
mov
or
aam
imul
jmp
lock
inc
or
mov
clc
xchg
add
fimull
mov
in
inc
out
mov
and
jbe
jno
push
mov
fwait
add
adc
mov
push
mov
lret
out
es
scas
fisubrl
push
das
int
rorl
xor
inc
push
lds
jmp
shll
sub
rcll
sub
and
negl
insb
push
push
jbe
pop
nop
inc
fstpl
outsb
and
xchg
out
in
mov
jge
xor
out
nop
xchg
iret
aad
sbb
aad
push
push
push
jge
shr
mov
das
jge
jnp
and
jae
rep
enter
imull
mov
pop
inc
push
and
and
cmp
xchg
mov
xchg
jbe
gs
sub
push
and
pop
mov
dec
cltd
adc
sahf
pushf
out
pop
pop
fsubrp
mov
sub
cmp
shlb
cmp
aaa
sahf
and
jo
daa
aad
repz
and
sbb
mov
or
lods
mov
repnz
clc
and
mov
pop
cmovg
andb
xor
shlb
mov
adc
fildll
pushf
ret
mov
inc
jecxz
lock
mov
mov
pop
scas
aad
cwtl
xor
mov
dec
lret
pop
push
loopne
shl
call
fsubl
xor
xor
mov
jbe
xor
call
lds
jecxz
cmp
mov
adc
lods
dec
in
xorb
fwait
mov
scas
loope
jp
cmpsl
push
cltd
xchg
movsl
lea
xchg
imul
pop
push
jb
mov
outsl
lcall
repz
std
fists
push
imul
cltd
or
sti
mov
inc
or
cmp
mov
shrl
xor
jae
pop
pop
fs
pop
fnstenv
cmp
xchg
and
sub
or
cmpsl
mov
cmp
cmp
jnp
jmp
mul
aam
cmp
stos
repz
aad
imul
sarb
clc
sbb
sbb
mov
xor
bound
mov
xchg
iret
inc
insl
jo
imul
or
loop
or
je
iret
pushf
loop
fstpt
movsb
test
mov
mov
aam
pop
iret
or
adc
in
fidivl
js
loopne
jl
fildl
push
int3
pop
loopne
or
jle
std
rcrb
mov
out
fsubrl
push
push
addr16
or
fwait
jnp
sbb
xlat
jecxz
or
mov
outsl
pop
mov
dec
or
imul
repz
sarb
fcoml
ds
sbb
mov
mov
mov
divl
xchg
ss
cmp
mov
mov
cmp
sub
iret
dec
mov
dec
and
sub
cwtl
ret
push
push
dec
push
data16
push
adc
das
xchg
mov
sbb
mov
fs
jns
aaa
xchg
add
dec
scas
or
ljmp
popa
sub
dec
jge
test
sub
iret
cmp
ljmp
in
divb
xchg
mov
jle
leave
adc
aad
push
fcmovnb
cmpsl
scas
mov
scas
nop
bsf
insl
mov
xchg
rorb
adc
cmp
xchg
cmpsb
sbb
dec
lock
jge
push
test
or
and
add
aaa
mov
pushf
jbe
sbb
inc
hlt
adc
popa
sub
mov
xor
dec
inc
cli
popa
cmp
mov
inc
sbb
jmp
shrl
fistpll
sbb
pop
cmpsb
jno
inc
xchg
mov
sub
ds
ss
adc
rcrb
pusha
loopne
and
or
xchg
mov
jmp
cmp
cmp
mov
mov
insl
iret
sbb
sub
push
jmp
sub
jmp
add
mov
cmp
sub
jne
xor
jp
jo
sahf
xchg
or
or
shrb
mov
mov
jbe
aaa
push
adc
les
push
mov
notb
repz
mov
cmp
mul
fs
xchg
cli
jo
xchg
stc
sahf
adcl
push
in
jp
loopne
dec
repz
cmp
sub
cmp
mov
cmp
inc
jmp
mov
ja
jnp
das
popf
sbb
orb
xorl
sbb
andb
fs
sbb
es
xlat
andl
sbb
in
mov
dec
movzbl
jmp
pop
test
dec
enter
movsl
mov
loope
and
aam
sbb
xchg
or
xchg
lds
dec
add
hlt
jno
or
mov
sbb
outsb
mov
stos
or
call
fwait
insl
rcll
xchg
push
fwait
pop
repnz
mov
imul
test
jo
aam
pop
mov
les
cli
stos
xor
mov
lods
sub
pop
adc
std
sub
in
mov
div
lret
xchg
adc
mov
push
daa
mov
cwtl
xchg
lock
stos
lods
loopne
mov
sub
adcl
and
dec
push
and
imul
sbb
mov
dec
add
cmp
addr16
leave
adc
shl
ret
mov
scas
rcrl
pop
into
add
add
sbb
push
ret
adcb
dec
push
inc
dec
icebp
or
jae
add
mov
cmpsb
in
fisubrs
cld
mov
jbe
xor
incl
iret
mov
pop
mov
test
movsb
push
cmp
aaa
aaa
push
push
xchg
xchg
add
mov
mov
daa
adc
jecxz
daa
jg
faddl
pop
sbb
dec
push
cmpl
std
nop
gs
xor
adc
aad
int
mov
aad
push
pop
mov
pop
jno
sahf
xchg
cmpsl
ficoms
push
sub
fimull
dec
mov
pop
scas
mov
arpl
sbb
out
mov
bound
imul
sub
loop
pop
sbb
pop
jne
mov
jnp
ret
mov
jnp
clc
adc
arpl
es
xor
flds
fwait
test
add
test
ret
into
jg
les
scas
sbb
hlt
ficompl
inc
daa
lret
dec
and
jge
cmpsl
and
jecxz
xor
int3
jp
nop
outsb
jo
sub
mov
imul
lods
jp
fsubr
xchg
mov
jg
sbb
jg
popf
jle
or
mov
rcrb
daa
test
pop
in
inc
mull
jae
roll
cmp
dec
pop
jns
or
sti
dec
or
pop
inc
sbb
cmpsb
mov
rcll
jmp
stos
movsb
imul
mov
out
cmp
jno
adc
dec
or
dec
jo
and
and
movb
hlt
cli
fstps
add
adc
rorb
add
or
jno
xchg
push
pusha
push
ds
fnstcw
bound
je
inc
dec
mov
inc
popf
addr16
imul
stos
sbb
mov
shlb
add
push
hlt
mov
cmp
mov
ret
and
push
ljmp
cmp
add
aam
and
cltd
sub
mov
sbbb
and
ss
jp
hlt
mov
and
decb
xchg
xor
push
outsl
mov
insl
mov
fldt
mov
dec
outsl
ss
pushf
xor
xchg
ret
mov
inc
sub
bound
popf
fdiv
out
mov
loop
inc
push
mov
mov
xchg
mov
mov
lea
movsb
fwait
mov
arpl
dec
mov
into
fcmovbe
cmp
jne
pusha
gs
sub
sbb
push
icebp
loop
imul
adc
cli
mov
or
ljmp
and
pop
push
outsw
out
testb
jmp
ss
jmp
gs
mov
dec
lock
inc
les
or
je
mov
xlat
fsubl
or
std
mov
fwait
xor
xchg
or
in
or
xlat
mov
orl
dec
sub
test
int
jne
sub
jbe
sub
lods
loopne
ss
xorb
or
pop
imul
pop
mov
jle
mov
movsl
xor
iret
push
daa
les
push
std
data16
ret
inc
mov
pop
leave
lahf
dec
dec
fdivrs
jb
rcrb
nop
cmp
aaa
mov
pop
mov
push
inc
push
loop
xchg
xor
pop
outsb
or
inc
arpl
in
jge
lret
add
ja
cmp
adc
mov
cmp
loopne
rclb
fcmovb
leave
lock
lods
sbb
mov
and
out
mov
test
stos
jae
cwtl
jge
es
popf
and
adc
out
movsb
push
icebp
mov
jno
lret
mov
jle
rolb
adc
inc
lret
lahf
push
outsb
insb
jae
dec
mov
popf
pop
jmp
stos
cwtl
nop
roll
pusha
add
adc
ror
ljmp
push
mov
add
or
fwait
loopne
mov
inc
xor
daa
adc
mov
or
loopne
ret
mov
sub
inc
jno
push
cmp
and
fs
mov
push
pop
lea
pop
jb
or
jecxz
mov
sbb
out
outsl
adc
and
leave
popl
insb
cs
into
insb
mov
call
mov
lods
cmp
sarl
nop
sti
loopne
popf
pop
stos
inc
lock
jo
pop
iret
push
add
scas
lock
mov
insb
loopne
inc
jnp
mov
rorb
out
lret
mov
test
xlat
call
xchg
xchg
sub
ja
inc
sbb
daa
js
dec
pop
pop
pop
test
mov
xlat
call
xchg
xchg
sub
ja
inc
sbb
daa
js
dec
pop
pop
pop
test
mov
xlat
call
xchg
xchg
sub
ja
inc
sbb
daa
js
dec
add
test
mov
xlat
call
xchg
push
sub
frstor
scas
lock
mov
cmpsl
push
and
xor
dec
imul
pop
xchg
xchg
mov
mov
in
hlt
fadds
adc
and
xor
inc
push
je
test
mov
les
hlt
fadds
adc
and
xor
inc
push
je
test
shl
les
popf
scas
jo
jne
and
pop
jge
rolb
xchg
dec
lcall
sub
rorl
pop
lea
mov
call
leave
xchg
inc
js
cmc
cwtl
rcrb
ja
lea
jo
mov
cmp
dec
fidivrl
adc
sub
mov
xor
pop
pop
les
hlt
adc
movsl
xor
sub
stos
js
inc
je
je
sbb
dec
dec
sbb
sbb
jg
push
call
leave
adc
cwtl
sbb
pop
test
lods
sub
cwtl
xchg
mov
hlt
cmp
jno
cs
mov
adc
fcomip
rol
rol
test
mov
and
xchg
sub
and
xor
inc
push
je
test
mov
call
hlt
sahf
popa
sub
bound
pop
and
cmp
sub
icebp
mov
inc
pushf
xchg
mov
jb
pusha
push
inc
inc
jne
and
pop
cmp
test
lret
mov
xor
sahf
mov
adc
bound
pusha
add
js
dec
je
test
mov
call
hlt
fadds
adc
and
xor
inc
push
je
test
mov
call
hlt
fadds
jne
mov
popf
cmpsb
sti
xor
jmp
aaa
mov
mov
xchg
fdivs
adc
xor
push
mov
sbb
xor
addr16
mov
out
cmpsb
bound
fcmovb
pop
inc
aaa
or
cmp
push
loope
das
mov
xor
sbb
ja
xor
aam
lea
sbb
xchg
push
imul
les
cmp
outsl
imul
or
sub
int3
shll
gs
stc
add
out
loopne
mov
mov
pop
pusha
stos
mov
int3
or
xchg
sub
xchg
cwtl
sub
incb
cmp
shlb
dec
repz
inc
pop
adc
cli
sub
push
mov
or
repz
sub
scas
add
ret
adc
dec
mov
movsl
jmp
sti
sarb
mov
add
jp
fidivs
xchg
mov
in
add
inc
xlat
pop
cmp
xchg
push
add
pusha
cmpsb
xlat
dec
enter
jbe
fucom
cmp
jge
lods
bound
repz
insb
xlat
pop
pop
mov
inc
cmc
and
test
stos
xchg
push
xor
mov
add
push
mov
mov
gs
lods
sbb
pop
adc
mov
ds
enter
adc
mov
ljmp
xchg
aaa
mov
into
sub
mov
popa
sarl
mov
repz
mov
cmc
mov
adcb
mov
movsb
jge
push
push
dec
jbe
adc
xchg
mov
mov
ret
jo
pop
outsb
insl
cmp
repz
jl
jbe
xlat
inc
xchg
sbbb
mov
std
cmp
add
mov
push
rcl
mov
lahf
flds
lret
pop
cmp
ljmp
inc
mov
mov
sub
xor
fsubrs
push
push
add
mov
and
test
out
jmp
and
xchg
ss
push
mov
arpl
mov
inc
fisubs
imul
cmc
cmpb
dec
xchg
cmp
pop
movl
int3
stc
popf
pop
xor
inc
outsb
sub
lds
mov
dec
test
in
fidivs
mov
lods
sub
sub
aaa
dec
xchg
popa
xchg
aaa
addb
jg
test
clc
lret
push
add
jmp
cmp
movsb
pop
shll
ds
push
fidivrl
jb
pop
add
dec
jg
push
mov
stos
jns
mov
xor
inc
jl
push
dec
mov
add
fwait
adc
and
aam
mov
dec
std
arpl
loope
xor
fs
jns
jge
inc
and
jo
or
daa
adc
nop
add
or
test
sbb
cmp
ret
add
jo
lcall
insb
stc
dec
mov
mov
xor
adc
xchg
rorb
roll
cmc
xchg
inc
jno
repz
pop
mov
cmp
or
movsb
pop
or
xlat
or
mov
adc
or
push
inc
clc
loop
jmp
mov
mov
mov
in
sub
in
imul
mov
mov
fwait
sti
and
sbb
out
ret
dec
ja
push
adc
outsl
insl
insb
adc
xor
sub
sub
iret
or
test
mov
enter
or
add
pop
aas
je
scas
sbb
dec
fnsave
sbb
push
and
fdiv
cmpsb
enter
aad
in
add
mov
sub
dec
adc
out
add
jnp
sub
xor
cwtl
mov
out
or
mov
sbb
nop
xor
scas
jmp
adc
gs
pop
aaa
or
dec
enter
xlat
lret
inc
dec
sbb
test
cltd
scas
dec
sub
enter
es
out
pop
jge
jl
dec
aas
xor
jnp
es
je
push
or
add
mov
movsl
jg
sbb
iret
mov
pop
fstp
aaa
and
hlt
sar
mov
pusha
addr16
cmove
fcmovu
adc
mov
repnz
pushf
std
daa
or
arpl
mov
xchg
pop
or
fnstsw
cltd
or
mov
dec
mov
xchg
fimuls
loopne
mov
xchg
paddd
imul
lahf
pushf
scas
int
adc
pop
sbb
push
test
lods
xchg
outsl
jl
mov
fstl
out
jle
in
dec
xlat
pop
inc
test
jmp
inc
xlat
inc
bound
inc
scas
loopne
sbb
cmp
fwait
add
inc
popf
dec
mov
and
jle
mov
cmp
mov
mov
aad
popa
xchg
fwait
and
cld
fwait
add
icebp
gs
xchg
adcb
ja
test
jmp
sbb
fdivs
push
repz
repnz
or
mov
insl
mov
jo
mov
mov
cmp
adc
sub
xorb
les
fcoml
imul
jns
mov
adc
outsl
jecxz
add
xchg
inc
int3
adc
adc
or
mov
mov
add
ljmp
cmp
and
fisubs
out
and
scas
ret
enter
ds
pop
jmp
xlat
cmp
cmp
loope
xchg
ret
enter
cmc
mov
mov
dec
fwait
or
mov
add
gs
or
aam
or
hlt
mov
sbb
lcall
mov
cmpl
out
push
and
out
pop
or
in
dec
daa
ds
dec
orl
cmpsb
push
inc
push
xchg
pop
mov
daa
mov
aas
insb
add
dec
das
int3
jnp
xchg
or
jno
and
dec
int
mov
mov
jbe
lods
jbe
cwtl
cmp
mov
jnp
jg
inc
xor
aas
insb
and
push
sti
xor
cwtl
mov
dec
pop
leave
lea
pop
add
xchg
sbb
ret
pop
dec
enter
lock
xchg
mov
aas
cli
mov
xor
and
sbb
dec
mov
ficoml
mov
adc
dec
js
rorx
in
pop
cmp
pop
and
idiv
mov
repnz
in
ret
mov
and
jge
xor
xchg
sbbl
gs
cmp
inc
test
je
lods
icebp
test
push
stos
mov
add
out
mov
sub
mov
inc
cmpsb
pop
aaa
das
movsl
mov
fs
insb
xlat
mull
mov
sub
mov
ret
and
andl
mov
imul
or
scas
mov
inc
mov
pop
fwait
add
insb
mov
adc
imul
je
jb
xchg
cmp
pop
xor
imulb
scas
adc
mov
fisttpll
pop
daa
pop
dec
sbb
mov
cmp
outsl
sbb
jns
ja
sub
pop
jge
cs
mov
scas
lods
aad
pushf
push
jbe
ja
int
sub
pop
jge
out
mov
jp
dec
insb
shrb
nop
jns
sub
aaa
clc
aam
mov
add
sub
push
push
push
rcrl
nop
aaa
in
data16
jp
mov
sbb
inc
mov
ds
mov
cmp
je
pop
sub
ror
xor
mov
mov
scas
inc
add
mov
addr16
cli
popf
sbb
cmp
imul
adc
movsb
xor
es
xchg
mov
jnp
inc
movsb
xchg
icebp
shrl
jbe
and
or
inc
je
loope
push
out
push
int
adc
jbe
out
adc
sbb
inc
jns
or
dec
out
dec
adc
mov
sub
mov
ror
imul
adc
mov
add
adc
repz
jbe
push
testb
add
sahf
aam
loop
cmp
xor
push
adc
ja
cmp
mov
push
xor
mov
push
arpl
mov
pop
xchg
pop
aad
xchg
mov
or
mov
cltd
push
imul
or
dec
je
shll
mov
mov
fidivs
rclb
mov
jge
stos
test
inc
mov
nop
cld
insb
cmp
frstor
mov
jmp
dec
loope
lods
sbb
outsl
test
cmpsb
lcall
mov
sbb
dec
ljmp
push
sbb
aad
push
sub
cld
sub
cmp
faddl
ss
adc
mov
fcmovnb
outsl
add
repnz
push
mov
popf
lret
mov
in
int
cmp
ret
adc
mov
hlt
sbb
insb
ss
jno
xlat
mov
jne
mov
inc
cli
mov
in
xchg
adc
sub
pop
inc
ret
loope
fs
aas
push
scas
pop
clc
mov
lret
popf
mov
dec
add
pop
xchg
lret
push
add
arpl
repz
out
jp
cmp
pop
mov
pop
lods
mov
int3
lahf
xchg
daa
mov
ja
adc
cmp
inc
push
jb,pt
ret
in
icebp
movaps
sbb
imul
inc
add
add
mov
sbb
test
dec
cmp
mov
sti
jns
sbb
or
inc
xor
mov
mov
xor
mov
xor
in
bnd
xchg
and
pop
xchg
pop
inc
sub
mov
iret
jmp
cs
into
repnz
fs
orl
inc
ljmp
jp
cs
mov
xchg
lods
fcoml
pop
es
fimull
or
popa
das
jp
push
iret
aad
inc
movsb
inc
cs
push
popa
hlt
and
cmp
into
jmp
inc
iret
fsub
pop
cmpsl
inc
das
cs
popf
mov
sbb
jns
outsb
arpl
pop
xor
jb
dec
pop
xchg
jo
popa
pushl
ss
xor
mov
gs
fisubs
jle
addr16
pop
sahf
pop
jp
sbb
xchg
addr16
out
loope
cmc
dec
push
and
loopne
jecxz
inc
xlat
mov
pop
dec
sub
pop
push
add
xchg
aaa
rcrl
into
push
sbb
scas
sti
or
mov
mov
out
out
inc
jmp
xor
aas
ret
cmpl
adc
fcomps
daa
inc
test
int3
incl
adc
nop
iret
or
cmpsb
xor
sub
pop
sub
popw
and
pop
push
and
and
sbbl
fcmovb
adc
adc
mov
push
pusha
mov
pop
cmp
pop
and
lds
scas
sbb
push
insl
dec
fistps
xchg
out
pop
dec
push
mov
cwtl
xor
push
jns
in
sbb
leave
inc
repz
sbb
inc
cmpsb
hlt
mov
mov
mov
cmp
subb
nop
mov
inc
ret
out
outsl
sub
sub
sbb
jb
aas
mov
ds
lods
cmp
push
lea
popf
aas
stos
lds
int3
scas
push
mov
xchg
dec
mov
mov
nop
test
push
adc
adc
lods
pop
daa
mov
cmp
aam
out
xor
push
and
mov
test
mov
gs
xchg
cmp
sub
fnstsw
mov
repnz
test
add
adc
dec
xlat
jae
clc
add
pop
jle
fsubs
loop
jp
inc
mov
inc
and
mov
imul
mov
arpl
mov
ror
je
bound
fwait
xchg
filds
pop
mov
sub
and
aam
data16
push
out
inc
push
pop
cltd
aam
loop
jo
repnz
pop
out
imul
xor
sbb
jb
or
xor
pop
jns
mov
push
es
lods
fcoml
arpl
subb
daa
sbb
lret
icebp
out
cmp
xchg
pop
sub
push
ret
cmp
jg
and
rol
sbb
mov
js
push
xor
popa
push
pop
pop
xchg
call
pop
mov
inc
pop
popa
xor
cmp
pop
jp
insb
and
fcompl
mov
sub
fisubrl
in
mov
mov
inc
lahf
inc
cld
pop
sub
stos
adc
mov
mov
dec
xchg
popa
std
aam
jle
mov
loope
sub
dec
adc
adcb
pop
add
pop
pop
pop
popa
add
fwait
xchg
stos
lds
jno
sub
sbb
jecxz
dec
fisubrs
dec
mov
int3
jbe
cld
dec
lret
movsl
outsl
jns
sbb
and
pop
imul
cs
mov
jne
in
sub
rcl
fdivrl
clc
pop
adc
push
sbb
sub
pop
into
dec
test
imul
jmp
or
std
push
xor
sbb
or
outsb
fisubs
jo
ret
icebp
jne
mov
inc
pop
sub
inc
int
push
loopne
jb
mov
jno
push
mov
mov
jmp
lds
mov
adc
jns
cli
cmp
add
xlat
std
fs
lcall
pushf
jg
pop
mov
in
adc
fcoml
cmp
xchg
and
mov
pop
pop
and
pop
or
jp
loope
push
gs
mov
adc
inc
cmpsb
push
lock
pop
dec
movsb
xor
xor
rcrl
push
gs
sbb
dec
fmulp
pop
sbb
mov
jno
jo
push
arpl
outsb
movq
pop
xor
or
rol
add
cmp
or
push
leave
cmp
ficompl
dec
inc
jbe
push
ja
pop
movl
fisubs
xchg
sahf
and
fmul
and
gs
ret
mov
addr16
movsb
nop
push
mov
push
push
icebp
mov
jnp
push
pop
adc
cmpsl
out
mov
das
cmp
jo
es
mov
push
xchg
imul
js
das
adc
xchg
dec
push
adc
stos
xchg
pushf
and
jnp
push
mov
imul
fstpl
cmpb
int
adc
and
insl
push
jmp
out
movsb
mov
push
push
outsb
loop
cmp
mov
lds
adc
test
sub
xchg
ret
mov
inc
mov
cmp
mov
cld
cmp
push
xlat
sti
mov
mov
mov
cmp
push
dec
pop
xchg
outsl
shrb
jbe
and
jmp
ljmp
daa
push
sbb
mov
xchg
mov
lds
jns
xor
jns
xlat
shll
pop
inc
aad
rorl
add
aad
xor
unpcklps
push
pop
adc
ja
inc
jle
ljmp
adc
shl
mov
insb
ja
sub
mov
sbb
sbb
add
sti
cmpsl
jp
hlt
stos
loop
jmp
and
push
ljmp
jmp
dec
int
out
in
jmp
mov
mov
cld
daa
scas
cmc
arpl
adc
mov
mov
push
jbe
add
int
pop
out
mov
fidivs
mov
mov
add
fsub
cmpsb
add
into
add
cwtl
popf
loopne
pop
push
or
adc
sub
cmpsl
or
sbb
sub
sub
sbb
das
test
jg
pop
repz
mov
xlat
in
push
xchg
lahf
outsb
test
repz
stos
data16
cmp
outsb
test
mov
mov
into
or
dec
and
pop
push
leave
punpckldq
cmpsl
push
cli
imul
mov
pop
dec
in
jnp
adc
mov
fldcw
mov
and
xchg
aas
in
test
enter
data16
xchg
lock
and
insl
push
js
cmpsb
and
xor
cmp
jns
scas
dec
pop
shrd
out
filds
push
pop
insb
lea
clc
daa
int3
test
les
inc
or
lea
cmp
roll
inc
pop
mov
sahf
in
lods
push
and
adcb
add
inc
mov
hlt
test
icebp
jne
insl
mov
stos
xchg
sbb
mov
mov
push
mov
pop
push
or
clc
shlb
pop
or
add
js
pop
add
and
adc
and
out
stos
xor
xchg
dec
aam
cwtl
mov
repz
mov
dec
sahf
enter
xor
jecxz
pop
movsl
push
cmp
loop
jge
es
jnp
or
lret
mov
cmc
jg
push
cld
lahf
shll
shlb
call
add
sbb
cmp
orb
cmp
ret
adc
mov
in
xor
in
insb
cmp
mov
lret
adc
popa
lret
int3
push
test
pop
out
mov
ret
stos
mov
mov
mov
adc
jb
out
push
test
out
mov
jmp
xchg
les
mov
lods
cmp
fstps
ja
or
push
repz
movsb
jecxz
sub
fsts
aad
xchg
out
jnp
arpl
rcrl
insb
lds
jb
jae
ret
notb
mov
out
js
or
mulb
xor
pop
jg
fildll
int
or
inc
orl
nop
mov
xchg
sbb
dec
lahf
dec
mov
jno
push
arpl
call
or
push
lea
das
or
xor
gs
adc
outsb
xchg
add
fildl
cmp
insb
rorb
xchg
ficompl
sbb
add
stos
xchg
jae
xchg
bound
mov
scas
daa
out
dec
js
fsts
xor
xchg
pop
mov
mov
pop
fdivs
xchg
sub
push
test
or
fmuls
and
addr16
jp
pop
and
and
es
insl
lea
sub
mov
push
aaa
sbb
in
pop
pop
stos
repnz
pushf
add
jp
cwtl
repz
jo
fistps
dec
arpl
idivb
fistl
orl
cmp
test
imul
sub
cltd
pop
cmp
jae
inc
xor
jne
ja
sti
out
jle
inc
insb
ja
mov
ljmp
xchg
pop
mov
test
pop
inc
ret
lea
les
int
movsl
or
rorb
add
in
repnz
jmp
in
dec
mov
pop
arpl
sub
add
add
scas
push
test
cs
jle
stos
xlat
in
jbe
cmp
clc
mov
jp
adc
pop
aam
mov
or
imul
fwait
push
pop
enter
cwtl
sbb
adc
mov
leave
out
xchg
jle
jo
xchg
iret
loop
cmp
xchg
or
cmpb
xchg
xor
xor
cmp
mov
lock
notl
nop
cltd
inc
in
mov
rcll
bound
hlt
dec
mov
cmp
pop
popf
mov
sbb
or
mov
bound
leave
cmc
mov
add
aam
xor
jmp
stc
mov
imul
add
push
cmp
xor
ljmp
jmp
xchg
and
out
ficoml
mov
in
ljmp
sarb
lea
mov
imul
outsl
sbb
mov
arpl
sbb
pop
xchg
leave
jmp
mov
push
adc
push
mov
bswap
dec
mov
lock
mov
das
mov
jl
and
push
jb
add
sarl
mov
mov
pop
popa
xchg
outsl
jae
imul
loopne
movsb
xchg
pop
popf
popa
test
add
sbb
pop
ss
add
stos
jbe
jge
cmp
lcall
decl
sarb
inc
dec
dec
cmp
jns
cmpsb
lret
jge
dec
mov
sarl
xlat
daa
inc
mov
adc
clc
mov
daa
pop
xchg
jns
out
inc
dec
sahf
pop
notb
or
scas
cmc
dec
jle
and
adcb
cld
das
push
jp
push
arpl
fwait
les
xlat
andl
mov
test
and
lret
xor
pop
inc
cmc
hlt
sbb
jg
into
cmpsl
sub
pop
dec
fwait
das
fidivs
xor
sar
jo
negb
mov
pop
sub
fs
mov
iret
ficomps
xchg
mov
inc
iret
pop
sahf
dec
jo
loopne
sbb
xorb
stos
fadds
mov
icebp
cmpb
ds
std
sbb
int
popa
sub
shrb
or
cld
clc
popl
xor
call
or
xor
repz
xchg
jg
push
add
xor
cmp
or
inc
push
je
test
mov
call
hlt
fadds
adc
and
xor
inc
push
je
test
mov
call
hlt
fadds
adc
and
xor
inc
push
je
test
mov
call
hlt
fadds
adc
and
xor
inc
push
hlt
cwtl
jnp
imul
mov
sbb
or
btc
push
das
fs
je
and
jne
pop
sahf
fsubrs
test
xchg
out
mov
mov
inc
pop
push
das
fs
je
add
adc
and
xor
lahf
aam
les
inc
out
movsb
pushl
jl
insl
dec
sbb
jg
daa
mov
hlt
iret
lds
mov
inc
jnp
das
adc
xchg
aam
fs
push
pop
es
mov
mov
sbb
mov
pop
ljmp
sbb
hlt
inc
hlt
xor
faddp
mov
mov
dec
adc
push
sub
push
and
popl
adc
pop
jg
lahf
xchg
mov
mov
adc
push
inc
fs
inc
push
jl
lret
add
or
xlat
lahf
imul
lock
mov
fwait
rclb
cmp
sub
and
mov
dec
loopne
in
fs
lea
lods
cmc
loop
jg
fadd
outsl
rclb
in
xlat
push
loope
pop
jg
ret
inc
pop
inc
das
je
outsb
dec
add
adc
cmp
lahf
int3
scas
std
mov
sub
call
dec
and
inc
gs
jne
push
sub
pop
lods
cli
lods
scas
mov
fwait
into
jmp
mov
push
dec
adc
jno
ja
es
inc
sub
mov
nop
mov
sti
or
shrl
pop
xor
push
add
push
jg
pop
lahf
aam
in
hlt
iret
test
xchg
out
movsb
pushl
fs
je
add
adc
and
xor
les
hlt
iret
test
xchg
out
movsb
pushl
inc
adc
cmp
test
scas
mov
dec
scas
mov
fdivr
test
mov
push
dec
orl
ret
push
arpl
jle
dec
pop
cmp
xchg
cli
lahf
addr16
jecxz
lods
sbb
dec
lret
pop
fcomip
mov
clc
inc
repnz
add
int3
or
jae
push
in
popf
sbb
fwait
xchg
pop
adc
jne
add
push
pop
jecxz
movsb
or
add
mov
pop
pushf
xchg
jge
sub
xchg
add
insb
fwait
push
cmc
push
and
jb
sarl
and
lret
cmp
xchg
and
inc
fwait
pusha
push
add
nop
mov
pusha
mov
ja
jl
push
lods
repz
push
xor
mov
jo
fimull
insb
movsb
fidivrl
push
in
into
leave
gs
popa
inc
aam
nop
andb
pusha
jle
jl
stos
dec
shl
imul
cmp
lret
fisttps
in
data16
mov
mov
mov
test
jno
add
movsl
scas
sbb
push
xchg
roll
stc
bound
mov
dec
pop
cmp
ret
dec
dec
mov
adc
xor
mov
enter
xchg
dec
insb
loop
dec
add
cltd
sub
popl
lahf
add
loope
pop
jno
cld
or
mov
popa
mov
sub
xor
xor
loope
cld
fdivrl
xor
jb
xchg
lock
dec
pxor
sar
popf
sub
loope
push
xchg
cwtl
xchg
cli
xchg
cli
test
inc
filds
xor
sbb
arpl
std
fdivr
pop
add
mov
mov
sub
stc
jg
jnp
dec
and
jnp
or
roll
or
iret
inc
test
loope
nop
and
push
mov
xchg
ljmp
cmp
clc
stos
push
ss
aam
icebp
insl
js
adcb
out
and
jmp
jecxz
inc
xlat
sub
scas
out
clc
fwait
jge
cltd
xor
stos
xor
into
mov
cmp
xor
or
mov
xchg
and
in
dec
ds
and
xor
movsl
shll
pop
stos
je
sbb
sahf
adc
push
or
or
sbb
in
lods
xor
or
in
cmp
push
movsb
push
sbb
sub
add
fs
loope
or
loope
jecxz
cmc
fcomps
loopne
out
xchg
movsb
addr16
mov
outsb
les
cmp
test
push
dec
stos
adc
push
xchg
or
rcrl
lock
mov
lods
bound
sbb
push
xchg
mov
lods
pop
fidivs
xchg
fdivrl
ja
jmp
adc
icebp
pop
add
adc
xor
dec
jmp
insb
cmpsl
mov
into
jae
push
rcl
pop
inc
icebp
fbld
sar
movsl
roll
cmp
lods
cld
scas
movsb
cmp
sarl
or
repz
imul
xor
aad
xor
test
lea
xchg
inc
fmul
in
cli
add
or
push
xchg
mov
and
and
xchg
je
cmp
add
stos
cmc
loop
jnp
jmp
cmp
repnz
stos
std
ret
cmpsl
inc
push
outsb
dec
in
inc
jp
negb
mov
jge
dec
jge
inc
movsb
aam
xor
and
ficomps
sbbl
nop
cmp
nop
xlat
and
sbb
inc
test
imul
stos
adc
mov
mov
mov
lahf
rcl
call
ret
inc
xor
insl
mov
xchg
loopne
mov
push
clc
cmpsl
jg
in
cmp
lret
pop
outsb
jg
push
pop
adc
stc
fbstp
pop
cmpsl
xchg
fildl
mov
mov
insl
arpl
xchg
rolb
mov
dec
sbb
jo
insb
or
xor
inc
dec
cmp
cmp
or
repz
inc
inc
xor
lds
mov
incl
xchg
push
or
fistpll
outsl
mov
sbbb
pusha
xchg
loope
fldenv
pop
es
jge
addr16
popa
mov
sub
adc
push
imul
inc
dec
popa
xor
aas
sub
ret
xchg
jnp
insl
cmp
push
pusha
and
popa
inc
push
sbb
lret
sub
dec
outsl
sub
xor
sbb
out
push
adc
mov
mov
dec
jecxz
push
fmul
fsubrs
or
into
call
out
mov
les
push
ret
lret
andb
xor
or
cmp
adc
mov
mov
js
mov
push
pop
sbb
test
jo
incb
adc
mov
jns
xchg
insl
xchg
sti
xchg
rcrb
in
fwait
pop
arpl
incb
scas
sti
movsl
test
jo
lahf
mov
in
ret
and
jmp
mov
xor
notl
stos
insl
jmp
inc
sbb
mov
jbe
dec
cli
lahf
fidivl
and
jg
push
xchg
lds
sbb
dec
dec
mov
dec
jnp
push
pop
jecxz
test
mov
pop
jmp
xor
and
int
cmp
je
popf
fiadds
fwait
stos
sub
dec
lock
fbstp
or
jae
mov
xchg
cmp
add
mov
mov
jnp
mov
cmp
fs
inc
push
mov
pop
mov
pop
xor
stos
int
ret
ret
sbb
stos
pop
jle
testb
lcall
movb
inc
lods
dec
rcpps
dec
call
shlb
xor
in
std
and
mul
or
inc
shr
pop
sbb
fwait
das
popa
pop
xchg
xchg
bound
jno
xchg
rcll
fcmovnu
adc
sub
shll
add
inc
lock
movsb
add
pop
jae
jns
and
add
mov
inc
add
mov
test
mov
adc
sti
les
lds
xchg
xchg
sbb
ret
xchg
or
xchg
xor
aad
int3
add
leave
stc
mov
cmp
xor
mov
or
into
pop
add
mov
sub
cmp
ja
sbbb
or
mov
jae
insl
je
xchg
xor
insb
cs
mov
jae
sahf
iret
push
push
sub
in
inc
rorb
cmp
push
adcl
add
mov
pop
int3
pop
and
cltd
mov
aas
jo
nop
push
bound
push
cmpb
hlt
js
add
push
jle
xor
lods
les
out
out
adc
stos
jnp
test
loopne
roll
leave
sbb
bound
pop
filds
cli
dec
repz
pop
inc
out
out
sarb
fistps
dec
out
aam
popf
mov
popf
and
add
sbb
or
pop
dec
popf
popf
cmp
jmp
sarl
jp
inc
psubusw
sbb
xchg
jb
adc
ret
adc
mov
dec
xor
push
sub
inc
daa
jp
mov
mov
push
pop
lcall
add
xlat
add
stos
mov
jmp
or
sub
outsl
into
or
cmpsb
mov
int3
pop
aad
adcl
ret
mov
mov
lock
pop
jl
shr
repnz
jno
mov
ficoml
outsl
out
dec
jge
inc
xchg
push
inc
xchg
inc
and
push
mov
cmp
mov
mov
dec
loop
pop
mov
mov
sub
inc
shrb
mov
out
push
test
cmp
xchg
cmp
sbb
aad
dec
dec
daa
lcall
jmp
xchg
mov
iret
icebp
mov
test
pxor
loopne
mov
and
jecxz,pt
pop
ds
sub
imul
adc
test
cmpb
cmp
pop
push
push
pop
cwtl
scas
insb
adc
cli
fsubrs
jns
mov
outsl
ds
test
inc
test
mov
imul
daa
notb
nop
cmp
and
mov
rcl
std
repnz
dec
scas
fcomps
xchg
push
xor
fimuls
std
xchg
xchg
pop
xor
mov
sub
sbb
inc
cs
loop
xor
lea
mov
js
dec
data16
cmp
rcrl
mov
jg
and
shlb
ret
imul
and
data16
xlat
adc
push
pop
xor
pop
arpl
popf
jb
insl
add
test
stos
xor
cs
adc
push
xchg
xor
dec
outsl
jg
mov
xor
andl
es
xchg
lahf
push
mov
lret
in
jg
jmp
and
loop
fmul
mov
mov
or
rcl
test
mov
das
pop
out
les
nop
iret
cmc
jg
cmp
shlb
cmp
xlat
ja
push
xchg
lret
jge
adc
xchg
insl
push
loop
lea
and
sbb
test
or
push
aaa
sub
dec
mov
inc
jns
xor
movsb
sub
push
popa
ja
shlb
jne
mov
adc
jo
ljmp
and
out
cmovge
dec
jl
lds
int3
jnp
adc
mov
je
negb
stc
xchg
cli
adc
cmp
push
xchg
mov
sub
popa
sub
sub
out
xchg
in
dec
test
mov
stos
pop
or
fidivrs
subb
sahf
shll
cs
daa
xor
add
mov
cli
jo
lret
sub
mov
ljmp
mov
iret
mov
std
ljmp
mov
into
push
cmp
cmp
push
cwtl
imul
cmpb
xchg
dec
mov
subl
in
mov
jg
and
add
outsl
push
sahf
dec
jg,pt
pop
or
add
scas
fimull
shrl
sub
xchg
leave
pusha
fildl
jmp
clc
cmp
std
addr16
fcmovne
xor
mov
mov
xchg
stos
das
mov
arpl
ss
aam
pop
es
cmp
mov
fwait
xchg
jp
jbe
fisubrs
imul
mov
fistl
pop
xchg
stos
sub
dec
mov
shrl
jmp
adc
insb
insb
pushf
add
mov
popf
or
mov
pop
mov
and
mov
and
or
push
inc
inc
mov
pop
mov
or
sbb
and
sbb
xchg
arpl
leave
fst
aad
es
or
jae
inc
imul
fld
jmp
mov
and
repnz
out
hlt
outsl
loop
and
mov
add
ret
bound
mov
or
mov
std
add
shrb
mov
out
inc
js
adc
adc
and
xor
jmp
mov
push
lds
mov
mov
mov
jmp
sub
pop
movsb
push
out
leave
mov
lret
mov
fs
out
push
lret
xchg
cmpl
mov
inc
xchg
clc
xor
popf
xor
cmpl
sub
daa
adc
and
inc
les
daa
mov
push
xor
in
cmp
mov
sbb
leave
mov
adcb
xchg
dec
sbb
lret
mov
pop
faddl
mov
js,pt
lcall
jmp
adc
neg
push
xchg
jno
cmpsb
fcoml
dec
fcmovnbe
dec
fstl
out
push
sbb
inc
add
fs
and
fs
lock
lock
ja
mov
mov
rcl
add
hlt
psrlw
mov
jp
cs
xchg
icebp
cmpsl
stos
sbb
fsubr
idivl
jns
sti
sti
jmp
loop
inc
shlb
sub
sti
cmp
in
jge
adc
jno
xchg
mov
add
ret
add
negb
insb
xor
loopne
in
jb
frstor
mov
mov
je
and
pop
mov
xor
mov
pop
out
cld
movl
dec
push
dec
push
mov
ror
enter
cli
and
jnp
push
jae
jne
xor
sbb
jg
insb
add
clc
xlat
lea
mov
xor
outsl
lcall
in
jp
mov
not
xchg
es
sahf
popf
popf
fcompl
shrb
mov
popa
pop
lret
test
das
jg
lea
inc
in
or
xchg
ds
lret
adc
sar
lea
bound
and
dec
out
jge
ljmp
dec
jbe
jmp
insb
push
xlat
jmp
jp
sbb
dec
jmp
xchg
mov
pushl
fmuls
insl
xorb
ret
and
scas
add
or
mov
movsb
push
stos
mov
pop
and
sbbl
cmp
icebp
xor
mov
or
pop
shrb
rolb
and
test
jle
clc
insb
cli
imul
and
sbb
xor
fisubs
fstl
adc
call
popf
pop
mov
aam
mov
repz
xchg
shll
cli
adc
jo
lods
int
mov
outsb
mov
iret
inc
mov
outsl
insl
cwtl
mov
mov
cmpb
inc
in
push
outsb
sub
add
jp
and
inc
xchg
jecxz
xor
js
movsb
fsubl
rol
lea
push
std
inc
mov
mov
dec
mov
lods
or
jno
arpl
arpl
xchg
pop
inc
pop
jg
je
aas
out
cmp
popa
mov
sahf
lds
sbb
jle
dec
pop
fucomi
insb
test
mov
idivl
sub
dec
adc
lods
xchg
push
sub
mov
lret
addr16
std
pop
cmp
push
fldz
imul
jecxz
sub
sbb
inc
mov
mov
xchg
jmp
jmp
mov
movsb
icebp
push
xchg
pop
and
pop
nop
ret
rcrl
pop
out
sub
ljmp
rcrl
subb
xchg
sbb
imul
sahf
out
or
adc
in
gs
or
mov
stos
sub
popl
adc
adc
movsl
clc
add
pop
out
fs
daa
sbb
nop
negl
loope
mov
xlat
loope
fnstenv
ljmp
mov
loop
faddl
xchg
pusha
and
shl
jne
int3
out
sbb
mov
adc
adc
fs
ret
add
mov
adc
and
sub
xor
shll
lahf
fsubr
sub
adc
cmpb
roll
and
cmpsl
xor
and
dec
xor
gs
or
add
adc
mov
enter
add
pop
pusha
ret
std
negl
sbb
sahf
jbe
movl
and
cwtl
mov
das
inc
pop
xchg
pop
mov
in
jl
inc
push
or
roll
or
mov
nop
jg
sub
rorb
lods
mov
dec
iret
dec
add
mov
filds
add
pop
pop
pop
inc
fsubs
xchg
stos
leave
je
xchg
dec
ja
icebp
repz
das
add
je
aad
jno
out
popf
xor
aas
mov
adc
shr
inc
fldenv
xlat
jbe
imul
cld
cmp
sar
dec
enter
jle
ret
jmp
mov
push
stos
repz
push
aam
sub
or
lods
pop
push
or
fidivs
test
push
cmp
rol
cmp
cmp
mov
mov
mov
lea
xor
stos
in
outsl
mov
cli
insb
sub
xchg
fistl
and
iret
scas
sahf
push
stos
sti
xor
xchg
loope
jg
push
jecxz
leave
stos
jbe
cmpsl
cmp
imul
adc
imul
stos
lock
mov
repnz
cmp
mov
cmp
jg
sbb
or
xor
sbb
lret
inc
jne
xorl
lock
mov
xchg
out
lcall
mov
jp
fstl
mov
lret
cmp
fistl
sbb
pop
add
popa
sbb
xor
xchg
xchg
mov
das
jle
mov
pop
push
fs
push
mov
out
dec
cmp
xchg
loopne
aad
sbb
rcl
cmpsl
pusha
pop
adc
mov
lods
jo
jmp
pop
fwait
xchg
sahf
dec
stos
imul
sbb
neg
sar
out
jns
sub
add
inc
adc
jnp
adc
and
add
push
repz
push
sti
push
stos
pop
or
arpl
cld
xor
jge
cmpsl
add
inc
push
les
mov
lods
lds
mov
std
push
mov
dec
cmpsb
push
lret
jge
mov
sbb
sbb
mov
js
mov
xchg
inc
jo
out
jno
push
mov
pop
popa
outsb
pushf
adc
lods
inc
sub
orl
adcl
pop
xor
stos
push
jno
sub
adc
sub
ljmp
cmp
jb
sbb
adcl
adc
lret
hlt
xlat
pop
cmpsl
or
cmp
or
sub
lds
add
in
stc
sbb
and
in
mov
lea
idivl
sub
adc
pop
adc
div
adc
popa
adc
or
pop
js
and
adc
xchg
mov
inc
nop
test
mov
inc
roll
xor
inc
push
movsl
adc
lcall
or
dec
std
pop
add
test
lahf
and
sbb
pusha
add
out
mov
mov
stos
fnstenv
fldcw
adc
adc
lods
sub
xchg
add
scas
dec
mov
fisubrl
cli
aad
cltd
mov
ja
outsl
xchg
into
push
sbb
das
cwtl
cmp
mov
mov
outsb
or
push
in
call
jge
inc
sbb
aam
mov
ja
or
pop
fptan
pushf
jb
enter
sbbl
cli
int
jl
outsb
cmp
xor
lret
in
xchg
mov
fdivl
and
movsl
mov
inc
sahf
push
mov
ss
adc
pop
mov
mov
imul
das
int
daa
mov
jae
int
dec
sub
add
mov
sti
ret
dec
bound
imul
pop
nop
testl
ficompl
mov
xor
or
fcmove
imul
pop
jl
cmp
pushf
jae
mov
or
push
cmc
and
lds
adc
jp
repnz
loop
xor
push
repz
outsl
xchg
jle
mov
out
jecxz
stc
and
fwait
aam
rorl
xchg
cltd
cli
jmp
in
je
roll
push
dec
popf
cmp
adc
sbb
int
jne
in
out
dec
in
cwtl
jg
call
dec
clc
mov
lods
sbb
fisttps
mov
movb
adc
outsl
jmp
jno
testb
jo
and
dec
mov
mov
push
pop
movsb
lock
inc
xchg
movsb
stos
mov
adc
fnsave
int3
mov
test
push
repz
mov
mov
lcall
lds
imul
jle
popf
outsb
adc
test
inc
pop
mov
shl
mov
pop
sbb
ficoml
rcl
inc
fwait
mov
fildl
icebp
scas
outsl
pop
sub
ficomps
popl
mov
dec
mov
notb
gs
push
lea
sub
loop
nop
inc
or
xor
pop
daa
stc
push
icebp
stos
repz
mov
jmp
out
iret
stc
and
lahf
test
imul
sbb
loope
xchg
scas
cltd
dec
lods
push
out
and
mov
or
xor
shrl
in
add
mov
out
mov
sbb
xor
pop
xchg
cmpsb
aam
ret
sbb
sbb
stos
fisttpll
push
push
fsub
call
in
in
mov
cwtl
faddl
imul
dec
xchg
sti
dec
andb
dec
nop
jp
mov
fldenv
push
push
into
inc
call
xchg
inc
clc
push
repz
cmpsl
jg
je
daa
xor
lret
clc
or
pop
jbe
aaa
sbbb
int3
push
mov
sub
cmc
cltd
add
mov
mov
sti
incl
pop
jnp
jl
shrl
icebp
sub
je
mov
lahf
mov
test
cmp
xor
movsl
mov
mov
je
add
adc
and
xor
les
hlt
iret
test
xchg
out
movsb
pushl
fs
je
add
adc
and
xor
les
hlt
iret
test
xchg
out
movsb
pushl
fs
je
add
adc
and
xor
les
cmc
iret
test
xchg
out
movsl
pushl
fs
je
add
adc
and
xor
les
cmpl
dec
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
dec
sub
cmp
or
sbb
add
pop
pop
stos
dec
mov
sbb
or
lret
sub
fisubrl
lret
or
sbb
dec
stos
pop
pop
stos
dec
fistpl
mov
sbb
or
cmp
lret
or
sbb
dec
stos
pop
pop
add
sbb
setnp
arpl
sub
fs
mov
cwtl
inc
xchg
cltd
pop
cmp
push
sub
jo
ret
mov
mov
fwait
call
fistps
das
inc
mov
and
cmc
pop
xor
lret
sub
cld
mov
out
stos
xor
fbstp
sub
xchg
data16
ljmp
sbb
movl
jnp
les
xlat
jnp
or
sbbl
daa
lret
xor
in
push
outsb
mov
push
aas
in
sub
dec
sti
bound
mov
mov
outsl
loop
push
inc
testb
mov
setnp
lcall
sub
test
lret
or
sbb
dec
stos
pop
pop
stos
dec
mov
sbb
or
cmp
sub
xchg
bound
std
add
clc
iret
adc
mov
push
leave
pop
lcall
mov
pop
mov
shll
into
add
pmuludq
jns
push
xor
push
fldt
jnp
dec
stos
pop
pop
stos
dec
mov
sbb
or
cmp
sub
fisubrl
lret
or
sbb
dec
stos
pop
pop
stos
dec
mov
sbb
or
cmp
sub
fisubrl
iret
jb
mov
add
dec
dec
adc
stc
adc
pop
sbb
pop
and
mov
add
push
mov
jne
fmull
insl
and
dec
jb
out
pusha
test
sbb
movsb
lcall
mov
scas
cli
and
or
dec
xchg
and
jp
cmc
dec
pop
xchg
les
add
mov
lods
dec
push
das
or
xchg
std
nop
ljmp
pop
clc
lret
jae
fdivl
dec
xchg
jae
add
or
cmp
hlt
jle
mov
jb
xchg
in
and
aam
cmc
xorb
inc
or
ja
mov
xor
xchg
movsb
shlb
arpl
bound
push
jbe
jnp
stos
jae
jbe
push
dec
sbb
push
in
sub
repz
setns
leave
les
and
ljmp
jbe
jae
lds
pop
sbb
dec
xchg
lea
or
push
aaa
stos
insl
repz
sub
lret
or
sbb
jae
inc
lods
mov
inc
scas
or
test
fs
dec
lret
sub
out
in
daa
xchg
aas
loop
adc
sub
and
test
xor
repz
mov
inc
adc
imul
mov
out
cmpsl
aaa
stos
mov
cmpsb
outsl
jne
jne
inc
adc
std
cmpsl
inc
pop
inc
sub
fisttpl
rep
xor
vpsllw
jl
mov
xchg
sub
jmp
push
mov
lds
sar
sub
subl
push
mov
lret
push
cmp
push
and
inc
pop
mov
push
mov
sub
mov
jo
aaa
loopne
and
xlat
outsl
ss
data16
pop
or
cmp
inc
or
add
lret
pop
mov
ja
insb
ljmp
insl
lahf
cmp
push
jecxz
out
mov
pop
aam
les
in
and
orb
add
sti
mov
in
xchg
cmc
jns
mov
test
mov
gs
into
dec
je
rorl
popa
ja
xchg
cmpl
sbb
mov
push
ffree
aad
test
js
xchg
push
push
imulb
sti
fldt
jecxz
es
push
push
mov
fdivs
mov
outsb
popf
mov
xor
outsb
pop
mov
lock
int
pop
fbld
cmp
pop
fisubl
into
loope
pop
xor
je
xchg
scas
iret
mov
mov
into
jnp
add
cmpsl
fildll
out
out
jl
into
or
jbe
and
and
push
adc
mov
movnti
pop
jle,pt
cwtl
add
fadds
mov
fmulp
cld
bnd
cmpsb
sub
in
push
iret
and
xchg
mov
sub
cmp
aaa
xchg
out
add
iret
int
jo
inc
jge
adc
loope
cmp
repnz
adc
cmp
and
fidivrs
pushf
mov
sub
or
mov
mov
out
xor
cmp
notb
inc
sbb
jnp
dec
sahf
cmp
hlt
push
pop
push
mov
in
mov
push
aaa
cmp
stos
mov
push
movsb
into
popf
fs
das
int3
sbb
xor
roll
insl
and
jmp
fcomp
dec
xor
and
xchg
mov
mov
repz
je
dec
jp
pop
jl
xor
add
fs
inc
cmp
push
mov
je
mov
sub
pop
adc
cmp
popf
andl
fiadds
out
call
cmp
outsb
scas
jae
test
adcb
push
dec
push
imul
inc
dec
ficoms
and
xor
iret
hlt
mov
sbb
mov
inc
sbb
dec
xchg
lahf
mov
out
pop
scas
ret
lahf
imul
lods
mov
sbb
testb
ds
ja
pop
loop
mov
mov
push
or
cltd
jecxz
pop
mov
ljmp
xor
pushl
mov
and
daa
push
in
lahf
je
divl
or
decb
scas
xlat
test
jp
push
pop
cmp
cld
sti
pop
fimull
cmpl
and
sti
push
mov
dec
xor
out
mov
arpl
loopne
xor
pop
fwait
push
out
pop
icebp
sub
rclb
insl
adc
test
pop
adc
mov
dec
mov
dec
inc
lret
cmp
insl
mov
mov
sbb
bound
adc
pop
pushf
scas
repz
pop
sbb
adc
test
and
cmpb
fdivl
fs
bound
xor
addr16
shlb
fimuls
ret
scas
cltd
adc
adc
bound
hlt
pop
cmpsb
fimuls
inc
addb
jp
mov
cmpb
sar
cmp
inc
and
leave
mov
les
insb
rorb
leave
scas
vmread
push
mov
jle
jbe
adc
hlt
pop
popf
push
test
icebp
add
add
adc
jmp
and
xor
sbbb
cmp
xorb
test
fwait
ror
js
inc
and
and
movsl
cwtl
dec
push
xor
jecxz
fists
es
jns
inc
or
jp
fmul
mov
loopne
loop
xchg
inc
mov
pop
unpcklps
test
push
shlb
push
lods
les
stc
cmp
data16
fwait
jb
shl
cltd
jge
jp
push
mov
adc
mov
push
xchg
daa
ja
stos
sbb
sub
nop
adc
mov
sub
cltd
mov
pop
or
ret
scas
mov
loope
imul
ds
mov
add
adc
jl
ljmp
mov
add
mov
mov
arpl
sub
jnp
or
sahf
dec
lods
in
popa
xchg
sbb
sub
nop
test
iret
xor
cmp
outsl
xor
cltd
mov
xchg
pop
mov
and
adc
outsb
cmpb
stos
mov
sti
test
or
in
cmpsl
dec
outsl
adc
dec
push
add
xchg
int
sar
lret
mov
inc
sbb
mov
and
cmp
in
out
pop
inc
inc
or
divb
loope
mov
sub
or
arpl
leave
lahf
adc
es
cmpsb
lds
cmp
mov
addl
mov
ret
out
xchg
bts
imul
addr16
flds
inc
dec
movsb
dec
into
shrl
paddw
fidivrl
or
sbb
jae
aad
jecxz
and
rcll
pusha
add
mov
mov
pop
ret
push
push
sahf
cli
push
addr16
lods
lret
sbb
jae
scas
ss
rcll
pop
xor
cs
sti
mov
test
add
ds
cmpsb
push
add
sbb
int
js
call
into
es
fidivrl
nop
movsb
cmp
push
jae
leave
testl
fcmove
xor
sbb
or
sbb
pushl
fwait
pop
fbld
gs
rorb
mov
jno
outsl
jge
jle
xchg
jl
sbb
push
jp
mov
sub
pop
orl
in
pop
sahf
aaa
shrb
push
fldcw
shl
imull
jmp
lahf
or
adc
icebp
inc
pop
mov
and
imul
out
add
xor
pusha
lods
sbb
fcmovne
movsl
sbb
jmp
clc
xorl
or
mov
mov
adcb
dec
test
inc
sbb
sub
pop
xor
xchg
mov
jl
adc
movsb
adc
loopne
mov
inc
and
decl
mov
outsb
push
sub
add
xor
adc
jnp
aam
aaa
ja
inc
inc
icebp
mov
inc
mov
inc
mov
leave
pop
and
fwait
mov
mov
xchg
sbb
nop
cmp
mov
popa
cmp
dec
ret
ret
pop
sbb
adc
mov
mov
in
push
aad
cmp
mov
outsl
push
jno
int3
cmpsl
or
mov
mov
xor
xchg
loop
scas
xchg
pushf
inc
mov
xor
push
es
cmc
dec
ja
xchg
mov
mov
or
sbb
cmp
testl
lahf
xor
stos
or
add
loope
fmulp
adc
je
and
loope
inc
pushf
nop
push
imul
imul
pop
and
jae
sub
xor
aas
mov
sti
lods
clc
pop
jg
clc
int3
out
out
push
cmpsb
and
mov
jmp
repnz
int
pop
lods
nop
jmp
xor
sbb
fimull
jmp
shr
adc
in
out
xchg
cli
popa
jmp
cmp
jle
mov
lea
jbe
mov
xchg
inc
sbb
push
ret
add
cld
push
cmp
daa
popf
mov
jecxz
outsl
mov
test
jnp
out
mov
pop
jg
scas
mov
sti
aad
push
ret
roll
cmp
cli
into
lcall
push
inc
ret
push
loope
and
test
mov
std
pop
out
mov
fisttps
jne
outsb
fs
mov
inc
out
sub
mov
cmp
add
dec
sarb
ss
add
jge
mov
les
inc
xchg
jecxz
repnz
dec
jns
xor
fstps
fcmovne
pop
adc
dec
std
fnstcw
xchg
aam
test
jp
xor
sbb
mov
shlb
or
inc
aas
add
jbe
pop
inc
std
xchg
ds
pop
xor
sub
mov
aaa
adc
and
aam
xor
mov
adc
test
xchg
and
xchg
mov
rcr
jo
ret
jl
rorl
inc
and
xor
ss
mov
aaa
dec
test
js
xor
sub
sub
sub
jg
mov
adc
in
inc
adc
xchg
add
sub
mov
inc
jg
jo
arpl
in
add
jo
lock
in
xchg
mov
fisttpl
cmpsb
sub
outsb
cmc
adc
iret
cmp
ja
xchg
test
pop
inc
fsubs
fimuls
mov
mov
mov
hlt
outsb
mov
test
hlt
lret
hlt
xchg
jg
push
out
in
cmpsl
outsl
fmull
leave
hlt
xor
sti
mov
movsl
push
jae
sbb
rorl
ss
xor
adc
aaa
lret
mov
stos
outsb
xor
aad
insl
jle
arpl
int
lret
pop
les
lea
iret
push
nop
ja
addr16
push
repnz
cmpsb
xor
ret
rcrb
push
scas
imul
call
and
icebp
adc
inc
push
fnstsw
mov
aas
pop
add
cmp
dec
inc
dec
cmp
mov
insl
hlt
jmp
pushf
sub
jnp
jp
scas
jae
sub
insb
aam
xor
mov
mov
push
mov
loope
jns
lods
mov
test
cmp
push
gs
subl
push
mov
add
dec
das
push
sbb
jmp
dec
jae
xor
arpl
psllw
push
jp
dec
enter
push
es
xchg
jnp
lcall
push
adc
lea
mov
nop
and
jge
lret
div
outsb
ds
aad
mul
mov
mov
and
jmp
stos
add
out
mov
aad
out
in
lock
jne
imulb
inc
sub
gs
dec
aam
mov
das
xchg
out
loop
daa
std
sbb
mov
mov
adc
jp
xor
gs
pop
jmp
xor
cmc
stc
mov
xchg
fwait
es
or
mov
jnp
xchg
in
push
scas
fdivs
repz
not
ds
fwait
cmp
mov
xchg
sub
pop
inc
pop
inc
cmp
jge
shll
iret
and
lcall
test
fcomp
cld
and
xchg
int3
sbb
in
repz
loop
adc
xchg
int3
insl
movsb
dec
decb
mov
inc
jnp
into
cltd
mov
out
popa
fimuls
sti
sbb
sub
dec
xor
sub
movb
inc
cmpsl
xor
ja
loop
jge
mov
les
shll
add
jg
xchg
and
aas
pop
sbb
xchg
cltd
add
dec
in
cmc
jl
hlt
pop
nop
mov
bswap
sbb
sub
mov
ja
cmpsl
mov
xchg
mov
mov
test
pop
shll
push
hlt
aaa
test
xchg
inc
in
inc
xor
dec
inc
jmp
mov
pop
and
cmc
enter
dec
sbb
fdiv
data16
adc
ds
aad
cld
lcall
xlat
dec
rolb
ja
xchg
cmc
fsubs
shrl
sbb
mov
stos
push
test
scas
sub
rclb
dec
test
jge
pusha
fsubrs
clc
fs
dec
mov
pop
neg
or
pop
jbe
or
jo
popf
cwtl
cmpsl
and
ljmp
movb
push
jle
jmp
mov
adc
aad
outsl
lea
rep
push
das
fisubs
rorb
sti
aad
std
add
rcr
test
popa
clc
cmc
mov
xlat
divl
fnstenv
int
cmp
xor
xor
sbb
cwtl
lock
mov
lret
icebp
aaa
xor
and
stos
xchg
into
int3
jle
xchg
pop
mov
sub
mov
push
cmp
icebp
repz
or
inc
jmp
fidivl
shrd
nop
test
xchg
pop
les
fisubs
mov
inc
sub
arpl
pushf
ljmp
or
push
cmp
insb
xchg
inc
mov
jle
push
jecxz
fisubrs
cmp
jae
je
jo,pt
inc
cmp
roll
ret
loopne
dec
popf
mov
outsb
push
mov
sub
in
lods
mov
pusha
pop
adc
popf
mov
and
and
mov
lahf
stc
sbb
push
lea
dec
or
add
je
push
pop
inc
sub
out
lahf
jo
daa
push
xchg
jb
decb
sahf
mov
leave
lcall
shll
lret
cwtl
out
fs
inc
int
add
lea
outsb
push
inc
pop
mov
faddl
mov
adc
jp
sbb
dec
jp
rorl
ja
cmpsb
xor
jae
or
jns
cli
cmp
das
sub
jge
push
push
lds
inc
insb
imul
jbe
push
fldpi
aam
xorl
vpmaxub
inc
out
call
das
dec
pushf
in
icebp
addr16
cld
mov
pop
push
cmp
jb
cmp
inc
jl
pop
out
pop
aas
jne
shlb
add
in
xchg
mov
dec
mov
leave
push
flds
add
scas
cmp
sahf
jne
iret
cli
nop
daa
not
jb
insl
fnstcw
stos
ficompl
push
out
cli
dec
pop
jecxz
xor
mov
int3
orb
fs
sub
into
mov
sub
pop
mov
addr16
stos
mov
push
dec
out
test
rclb
push
mov
sub
popf
jb
imul
stos
mov
aas
push
pushf
pop
cmp
enter
outsb
stos
inc
mov
mov
in
fwait
jg
jmp
addr16
mov
jl
mov
ljmp
out
ds
sbb
push
cmp
inc
inc
push
movsl
in
xor
stc
stc
ss
cmp
icebp
add
dec
sbb
movsb
inc
fwait
push
ficompl
lods
adc
or
sub
push
jns
fsubl
int
shl
call
jmp
sbb
inc
scas
ret
sub
lahf
cld
cltd
fbld
pop
cmp
mov
or
mov
xchg
sahf
sub
pop
cmc
dec
lret
push
add
cmpsl
lock
cs
push
sbb
mov
aad
jns
popa
push
cvtdq2ps
mov
push
arpl
add
test
pop
insl
incb
cwtl
jge
ror
pop
sbb
fisttps
xchg
and
test
pop
leave
test
inc
jl
lret
inc
outsb
daa
test
push
mov
mov
mov
mov
lcall
or
xlat
clc
nop
stos
leave
neg
sbb
insl
push
stos
jecxz
push
cmp
ret
notl
scas
aad
dec
xchg
test
mov
adc
jnp
js
call
mov
xor
jb
movsl
outsl
cmc
mov
les
lss
push
or
outsb
lods
cwtl
cmp
call
sbb
jne
jbe
outsl
cmpsl
sbb
push
mov
xchg
out
xchg
and
pushl
call
adcl
add
mov
cmp
jb
movsb
xor
cmpsl
je
mov
iret
movsl
cmp
sub
jo
stc
adc
ss
shlb
add
das
add
fisubrs
pop
add
mov
or
mov
cmp
xchg
sub
out
jnp
fsubl
bound
jns
ret
xor
ds
addr16
push
adc
in
ljmp
cmp
adc
sarl
mov
fstpt
xchg
cld
xor
push
inc
add
pop
cmp
lock
sarl
pop
sbb
popa
xor
mov
test
fsubp
xchg
ret
fs
mov
inc
cmpsl
mov
cmp
and
pop
sub
js
mov
mov
pop
insl
mov
inc
aad
cmp
or
repz
frstor
lret
xchg
sbb
fbstp
and
js
adc
mov
push
out
nop
adc
subl
inc
repz
stos
mov
mov
je
or
jmp
or
jecxz
fiaddl
pop
adc
fbld
jl,pt
call
mov
test
xor
mov
addb
mov
xor
xor
adc
outsl
mov
xchg
test
out
sbb
or
pop
jbe
ds
cmp
fwait
dec
push
rorl
in
dec
fwait
aam
jb
add
icebp
sub
sbb
je
xchg
pop
mov
mov
dec
jns
dec
into
fsubrs
cmp
mov
xor
or
mov
jb
pushf
lods
mov
int
xchg
fsubs
ljmp
push
jnp
xlat
je
fsubl
fisubl
in
push
nop
mov
mov
pop
stc
push
loope
fistpl
adc
mov
push
xchg
scas
in
ljmp
int
aas
mov
test
or
mov
or
fstpt
jbe
bound
jge
cmpl
sub
jns
dec
fdivrl
push
and
push
cmpsb
bound
es
loopne
xor
data16
mov
add
adc
mov
jecxz
sub
xor
scas
stos
add
movsb
lods
test
fisttps
mov
adcb
cmovnp
add
shl
scas
cmp
nop
mov
add
test
out
sbb
mov
icebp
xor
xchg
dec
xchg
icebp
jne
jb
cmp
sub
enter
lcall
lret
xchg
mov
cmpsb
xor
jb
or
xchg
cmpsb
orl
loope
sbb
dec
push
mov
lods
out
mov
test
les
stos
shrl
subl
insl
and
lret
mov
fwait
sub
pop
enter
or
or
push
test
adc
xlat
je
ficompl
pop
jno
fsubr
mov
jg
or
and
mov
mov
repnz
pop
pop
ret
cs
push
xchg
or
andb
mov
movsl
je
daa
mov
or
inc
nop
inc
push
add
pop
xor
sbb
dec
cmp
repz
outsl
repz
jb
fadd
adc
insl
jbe
js
jmp
mov
add
push
std
aad
jl
mov
lret
mov
jns
push
mov
mov
hlt
iret
aad
sbb
data16
lea
inc
cwtl
adc
push
ret
iret
mov
negl
mov
push
aam
or
iret
cmpsb
out
int3
jo
cmp
std
xchg
in
negb
inc
cmpsb
mov
cmp
cld
push
inc
cli
push
cmpsl
jnp
sahf
adc
jg
ss
push
js
pop
stc
loopne
jbe
outsb
or
lods
stos
adc
sbbl
inc
insb
sub
mov
mov
jae
negb
xor
inc
mov
out
addr16
pop
es
push
outsb
dec
add
dec
out
and
sbb
int3
aam
xchg
lcall
lea
lcall
stos
or
pop
jo
movsb
fxch
rcll
outsl
lcall
lods
jle
pushf
mov
jmp
dec
sub
pushl
sub
orl
ret
sbb
dec
stos
pop
pop
stos
dec
mov
sbb
or
cmp
sub
fisubrl
lret
or
sbb
dec
stos
pop
pop
stos
dec
mov
sbb
or
cmp
sub
fisubrl
lret
mov
sbb
dec
stos
pop
pop
sub
jp
push
sbb
or
cmp
sub
fldt
lret
cmp
or
sbb
dec
stos
pop
pop
stos
dec
adc
mov
insl
arpl
and
outsb
adc
cwtl
dec
mov
or
ds
cli
or
jge
push
lcall
mov
sub
cmp
or
xor
ljmp
js
or
pop
mov
int3
sub
sbb
sub
ljmp
pop
stc
xor
das
clc
cmp
stc
mov
fcompl
aas
jae
lods
ret
fmull
sub
mov
jne
shll
add
repz
dec
in
adc
jecxz
std
mov
add
stos
jo
cltd
ret
lods
cli
lock
js
xlat
ljmp
in
stos
pop
pop
pop
std
push
jp
dec
fstpl
ds
or
lret
sub
xor
push
dec
jne
out
mov
dec
movsl
pop
sbb
pushf
lret
and
leave
js
out
or
mov
push
pop
cmp
aas
sub
leave
pop
jp
sbb
mov
or
sbb
out
pop
cwtl
ds
clc
sub
lret
push
ror
out
xchg
jbe
pop
xchg
sub
lret
adc
xchg
popf
push
lret
jg
pop
pop
test
imul
mov
cmp
xchg
js
push
add
fs
or
lret
lcall
call
sbb
ljmp
js
push
lcall
mov
sub
cmp
or
sbb
ljmp
js
push
lcall
xlat
mov
dec
xchg
mov
movsl
cltd
cmpb
xlat
dec
in
dec
sti
add
sar
push
or
adc
enter
mov
mov
negb
pop
inc
push
inc
xor
stos
lock
mov
aad
push
inc
sub
sub
insl
adc
and
test
push
scas
std
out
add
shl
lret
imul
mov
in
icebp
andb
lcall
xor
mov
mov
hlt
ljmp
adc
sub
cs
mov
and
inc
mov
dec
sti
cmp
movsl
and
dec
xor
xor
xor
push
inc
fisubs
xchg
pushf
in
aas
fs
jb
pop
add
and
push
test
scas
leave
inc
test
fiadds
rorb
jne
addb
and
int3
out
inc
stos
das
nop
fnsave
fucomi
add
dec
cmp
pop
xchg
cmp
imul
xchg
jns
adc
dec
inc
mov
pushf
mov
gs
xchg
inc
or
lahf
mov
xchg
push
shlb
and
fs
mov
cs
outsl
stos
push
in
fidivs
leave
sbb
fstl
fdivrl
cmc
and
fnsave
or
mov
xor
mov
xchg
cltd
pop
popa
mov
adc
xchg
mov
lret
push
xchg
scas
jo
loope
xor
cmp
xor
push
lcall
xchg
ds
cwtl
arpl
jbe
stos
ja
hlt
test
jmp
jecxz
nop
jns
mov
imul
pop
cmp
jp
out
lds
les
les
lret
adc
inc
fdivrs
andl
xchg
mov
sbb
into
push
push
cmp
fcomip
mov
iret
sub
mov
mov
fnsave
loop
call
jne
jl
insl
and
data16
inc
xchg
mov
mov
dec
stos
in
jae
mov
push
aaa
ljmp
xor
dec
int
fiaddl
xchg
jg
mov
sbb
push
mov
push
pop
push
jmp
pop
out
stos
mov
and
lods
pusha
orb
xor
sbb
mov
scas
push
cli
scas
lahf
loop
sub
iret
pop
push
jmp
cmpsl
mov
fsubrs
ret
out
push
lock
mov
adc
das
fcompl
sahf
push
imulb
inc
xchg
lea
imull
sbb
xchg
es
pop
sub
cmp
scas
mov
jecxz
jl
xchg
mov
jge
xlat
lret
or
call
stc
insl
pop
imul
inc
jl
mov
or
hlt
nop
pop
ret
mov
int
sub
std
pop
push
pushf
mov
sub
negb
addr16
adc
fistps
and
mov
dec
aas
pop
shlb
mov
test
testb
push
and
ret
push
ret
and
or
dec
adc
cmc
adc
lds
aas
outsl
loopne
rorb
hlt
lock
lods
test
fstpl
push
add
pop
mov
insb
cli
cmc
setp
xlat
xor
push
mul
mov
mov
call
mov
sub
jle
inc
test
pop
andb
pop
repnz
es
push
cld
mov
aaa
pop
jo
or
repz
jmp
push
push
bound
xchg
pop
lods
mov
xchg
or
test
mov
inc
sub
mov
mov
imul
dec
test
push
fs
dec
dec
sbb
inc
sub
icebp
and
dec
imull
xchg
sti
jbe
cmp
int
jb
mov
mov
test
sti
xor
jle
jle
out
inc
aad
push
pop
sub
enter
lods
push
lret
cmp
jge
inc
adc
pop
fiaddl
orb
xchg
rorl
roll
mov
cmp
dec
inc
lods
mov
pop
in
lcall
les
lret
outsb
add
fistpll
loope
pop
in
mov
xor
lds
or
aad
mov
and
adc
shll
pop
jle
dec
out
add
or
mov
xor
mov
dec
fstl
or
pop
iret
insb
mov
xor
sub
in
inc
out
in
iret
xchg
mov
arpl
adc
mov
sahf
inc
mov
xlat
dec
or
add
into
sbb
mov
mov
adc
adc
das
repnz
push
fs
sbb
cmp
push
push
pushf
inc
aaa
adc
jb
xor
jb
sub
mov
xchg
leave
jmp
push
sbb
lahf
push
pop
add
imul
adc
jae
mov
push
cltd
dec
jbe
fmuls
cwtl
ret
xorl
aam
cmp
pushf
and
xor
stc
jle
xchg
repz
pop
mov
aas
fsubrl
mov
mov
lods
pusha
je
cmc
adc
push
cmp
push
imul
sti
adc
mov
fcomps
xchg
frstpm(287
cltd
pop
pop
sbb
sbbl
psubd
aad
jecxz
push
jmp
mov
int3
sarl
push
dec
insl
test
mov
adc
jo
mov
or
fldcw
fwait
or
sbb
mov
ja,pn
stos
in
jl
and
cltd
dec
nop
icebp
lods
xor
jl
or
aad
hlt
jmp
mov
test
movsl
push
shlb
add
mov
xchg
mov
rorl
mov
je
push
mov
outsb
xor
xchg
push
xchg
pop
pop
push
mov
sbb
addb
shrl
mov
mov
inc
jnp
mov
or
and
pop
xor
xor
sahf
lret
cltd
lahf
push
ja
daa
fs
pop
int3
mov
xchg
mov
fcompp
pop
outsl
mov
inc
jbe
rolb
or
adcb
in
sbb
add
add
jmp
mov
arpl
fwait
mov
fisttpl
jg
cmp
mov
cli
add
mov
push
inc
aam
daa
add
pop
cmovbe
xor
test
jecxz
std
popl
ljmp
sahf
fwait
nop
cvtps2pi
insb
int3
fdivs
pusha
hlt
rol
rorl
out
inc
mov
aas
call
sub
nop
mov
test
lea
inc
xor
cwtl
xchg
add
inc
lock
insl
push
inc
fwait
nop
push
lds
ss
jns
incb
sub
lea
push
divb
movsb
pop
arpl
xchg
cmpl
bound
daa
mov
iret
leave
pushf
scas
cwtl
in
loopne
inc
xchg
call
jge
int3
dec
push
xchg
lret
xor
pop
jle
out
jmp
pop
lcall
pop
dec
dec
cmpb
scas
push
imul
je
out
xchg
or
les
xchg
int3
roll
decb
mov
add
adc
jno
and
call
mov
adc
notl
sahf
mov
xor
and
jno
stos
jg
dec
es
inc
lcall
or
mov
in
loopne
test
stos
clc
loop
icebp
imul
dec
popf
cmp
cmp
int
es
cwtl
and
sub
add
cmp
lds
mov
out
push
fucom
push
loopne
sbb
or
sub
lcall
jl
jno
jmp
cltd
jno
mov
hlt
mov
fmul
sub
cmp
mov
xchg
xchg
test
cltd
int3
in
dec
pusha
mov
cmpsb
mov
jo
bound
pop
cld
cld
int3
sbb
out
ret
xchg
and
and
push
inc
sub
roll
mov
mov
imul
je
imul
adc
imul
mov
ret
popf
das
popf
pop
or
jp
mov
inc
cltd
popa
mov
insl
mov
sub
pop
movsl
push
jle
aam
icebp
jne
add
inc
jg
enter
jo
cli
sbb
xchg
in
int3
lock
xchg
push
cmp
enter
test
mov
xor
jb
out
popf
mov
rcrb
les
mov
push
insb
xchg
mov
add
xchg
xchg
push
cmp
mov
lcall
inc
adc
ja
aad
xchg
jle
xchg
cmove
add
mov
xchg
enter
xchg
inc
ror
xchg
pop
cmp
pop
push
push
in
out
test
mov
pop
fs
xor
in
loop
push
jp
fs
cmpsb
jmp
jl
sti
xchg
pop
cmp
inc
aaa
lods
fldl
push
int
in
xchg
xor
std
imul
push
pop
mov
icebp
rclb
loope
addr16
pop
or
push
mov
push
imul
loope
and
cld
outsl
xor
pop
lahf
push
ret
push
push
adc
mov
rcrl
sbb
scas
dec
adc
push
mov
xor
sub
sbb
adc
lret
xchg
std
adc
subb
add
imul
mov
in
cmpsb
push
sbbb
pop
iret
cmp
pop
mov
je
cmc
adc
out
add
mov
int3
popa
cmp
aas
enter
or
add
mov
xchg
cmpsl
movsl
push
adc
push
ss
push
push
xchg
dec
jle
sbb
add
xchg
data16
mov
subb
mov
outsl
push
out
test
push
adc
adc
and
sbb
mov
mov
inc
hlt
mov
in
jo
dec
pop
sub
sub
mov
ds
xchg
ds
arpl
dec
sbb
mov
fidivrs
pop
scas
xor
pop
jge
out
shr
dec
das
and
fmull
loope
xor
pop
insl
vpsrld
outsl
js
movsl
dec
or
test
pop
add
mov
imul
add
popf
ljmp
in
aaa
les
add
mov
fldenv
ret
inc
imul
mov
push
mov
repz
aaa
add
cmc
cmp
inc
adc
leave
imul
mov
pop
sbb
add
loop
push
es
negl
ja
ret
mov
inc
bound
xor
out
sbb
sbb
jg
jle
cmpsb
mov
xchg
add
in
leave
inc
and
push
scas
pop
out
fildll
cld
xchg
adc
sahf
pop
inc
pop
mov
xor
cmpl
jp
pop
or
mov
cmpsl
enter
cli
push
imul
mov
ljmp
pop
lock
mov
xorb
mov
push
lock
or
repz
jb
rclb
rcl
test
pop
cld
mov
pop
xor
dec
jne
inc
fwait
mov
inc
cld
mov
pop
orb
lcall
imul
leave
mov
arpl
mov
addr16
andb
mov
push
jge
jmp
aad
or
dec
push
and
pop
xchg
lahf
repnz
insl
mov
dec
xchg
ret
sarb
mov
loop
pop
cmp
jg
xchg
mov
mov
jo
dec
add
add
mov
pop
add
fidivs
std
mov
frstor
repnz
xor
xchg
mov
push
iret
mov
fists
xor
inc
shrb
adc
stc
stos
test
lods
js
aad
popa
and
into
fiadds
jp
and
push
das
jns
xchg
inc
jns
test
cwtl
into
fbld
andl
dec
lods
out
mov
out
pushf
lods
rol
pop
mov
int
xchg
lods
or
cltd
add
mov
popf
loope
jecxz
sbb
test
fisubl
mov
lods
push
lret
inc
xchg
iret
xor
mov
or
fldenv
pop
pushf
orb
dec
ljmp
xlat
and
xor
dec
es
push
adc
fildll
cmpsl
adc
mov
or
xchg
cmpsb
or
clc
inc
fsin
sbb
lods
aas
inc
push
mov
mov
jge
mov
and
push
lret
or
cmp
scas
fs
shll
pminsw
andb
xchg
mov
out
adc
inc
shrl
es
iret
je
fdivrl
aam
movsl
lods
ds
mov
fwait
je
data16
xchg
mov
aaa
mov
push
nop
xor
clc
and
insb
jno
add
enter
pop
repnz
or
sbb
scas
inc
mov
pop
inc
pop
cmpsl
jbe
xlat
out
cwtl
mov
in
mov
inc
xchg
insl
enter
sub
mov
out
loopne
inc
ss
push
and
test
dec
out
out
fwait
pushf
mov
jmp
in
push
inc
jmp
cli
mov
fadds
and
pop
inc
jb
out
fsubrl
scas
adc
mov
out
xorb
pusha
and
lret
jo
inc
sbb
push
mov
rolb
cs
lcall
and
fcmovbe
jne
outsb
or
dec
push
call
and
pop
xlat
pop
mov
sbb
jmp
addr16
xchg
fstps
je
mov
adc
gs
in
ja
lret
and
test
and
pop
sub
jne
fsubp
imul
mov
pop
shrb
add
aam
inc
loopne
fildll
shll
stos
xchg
pusha
push
pop
pop
cmp
lods
jmp
adc
inc
and
inc
inc
mov
jle
or
stos
mov
jp
sub
enter
fidivrs
es
adc
add
push
sbb
adcl
sbb
push
sti
loope
add
lock
pop
add
xor
cmpsl
xor
dec
sbb
xlat
inc
shl
arpl
jbe
mov
pop
xchg
xchg
out
xor
rclb
lea
sbb
das
dec
sub
imul
mov
bound
fimull
stos
add
gs
ja
addb
mov
sbb
lcall
test
incl
sti
bnd
mov
jnp
fnsave
fistl
dec
test
popa
cltd
ljmp
push
xchg
pop
decl
es
mov
mov
stos
mov
push
js
test
mov
aaa
dec
inc
inc
cmp
jo
push
cmc
dec
pop
push
push
xor
subb
test
int3
xor
nop
shl
lcall
mov
das
shl
cmpsb
lcall
outsl
mov
xor
xchg
in
xchg
repz
add
add
dec
mov
nop
jmp
dec
rdmsr
sub
push
jl
or
popa
xchg
jns
lcall
xor
pop
pop
mov
cs
int3
loop
sar
mov
xchg
stos
xor
cmpsb
lock
sbbl
push
mov
and
ror
jnp
xchg
sbb
cmpsb
mov
jecxz
mov
dec
repz
lods
scas
inc
ret
xlat
jmp
int
sbb
lcall
int3
scas
insl
cli
sbb
test
xchg
adc
jno
test
hlt
and
xchg
insb
fsubl
jno
or
xlat
mov
notl
xor
iret
adc
cmp
mov
push
pop
mov
in
rorl
mov
xchg
and
test
mov
int
sbb
sbb
fdiv
pusha
push
pop
int
scas
xchg
mov
shr
mov
mov
xor
filds
sbb
pop
ret
and
aaa
sub
lret
lods
xchg
mov
out
fstl
incb
lret
jne
test
jbe
add
push
std
pop
mov
icebp
gs
mov
icebp
mov
push
push
jp
push
js
js
adcb
cmp
loop
inc
aaa
mov
scas
jmp
dec
repz
pop
or
in
mov
push
inc
cmp
incl
dec
push
fsts
inc
iret
dec
es
pusha
sbb
lahf
sub
scas
sub
adc
out
push
mov
xor
icebp
clc
mov
pop
push
out
in
pusha
push
int3
pop
call
xlat
mov
loop
xchg
sbb
adc
scas
adc
jmp
jbe
xchg
aad
cmp
xor
jecxz
and
sbb
lods
inc
mov
fcmove
push
push
jnp
dec
ja
sbb
sub
or
rorl
test
out
push
adc
xchg
stos
adc
repz
and
jp
ret
test
cmp
inc
cs
adc
or
ss
and
cmp
sar
fs
inc
clc
xor
movsb
pop
daa
arpl
icebp
xchg
add
or
int3
ljmp
and
lcall
xor
push
cmpsl
xor
cld
out
gs
mov
mov
in
xor
fs
sub
int
ljmp
sbb
push
adc
or
in
cld
ret
clc
pop
lock
ja
int3
aam
xor
out
adc
xlat
fsts
push
stc
push
aad
jmp
push
jnp
mov
shll
sbb
adc
push
mov
adc
sarl
xchg
jno
and
pop
push
sahf
subb
jecxz
hlt
sbb
icebp
aas
mov
clc
sbb
or
mov
test
add
test
xor
out
mov
inc
push
add
jecxz
or
cmp
shrl
scas
and
mov
adc
shlb
pop
mov
cltd
popf
mov
fldt
pop
rorb
xchg
loopne
cltd
imul
sub
inc
push
add
pop
call
xchg
sub
push
into
out
outsl
xchg
inc
fisubs
and
movsb
push
inc
das
pop
hlt
xchg
ja
mov
sahf
cli
cmpsl
cmp
add
dec
add
je
stc
sbb
mov
clc
aaa
mov
and
insl
fstpl
push
or
ljmp
mov
rorb
aam
push
imul
mov
inc
xchg
orb
push
dec
jo
popa
xor
roll
inc
sahf
pop
insl
scas
rorb
movsb
sub
push
fs
cltd
sbb
jmp
into
adc
pop
add
sbb
subl
mov
mov
ret
enter
push
add
aad
inc
cmpsl
leave
push
movsb
out
sbb
jae
int
xor
hlt
pop
das
push
cmp
adc
sbbl
fs
mov
pop
mov
inc
mov
lods
subb
dec
call
xchg
jge
negl
lret
mov
out
stos
fiaddl
add
in
or
out
fildll
mov
sti
mov
test
ror
shll
arpl
push
mov
and
inc
push
and
lods
mov
or
or
dec
loopne
sahf
loopne
ljmp
sub
xor
aaa
xor
mov
sti
test
push
int3
jns
and
mov
mov
lret
cs
or
cmpsb
xchg
mov
mov
dec
mov
cli
dec
movb
into
cld
inc
mov
js
xlat
cltd
jl
xchg
ss
in
xlat
cmc
loopne
push
jmp
adc
sub
lahf
sub
mov
dec
mov
lahf
repz
push
adc
jae
fadds
cmp
and
inc
pop
dec
arpl
pusha
cmp
cmc
loopne
loopne
fsubs
cmp
fsubl
xchg
popa
xchg
inc
cmpsb
or
dec
add
es
rcr
int3
outsl
pop
and
enter
jnp
fninit
push
cld
pop
inc
leave
aaa
sub
pop
push
add
pop
push
xor
in
fisttpll
aam
dec
clc
mov
mov
insb
xchg
mov
addr16
enter
test
pusha
and
mov
pushf
fistpl
loop
pop
aaa
sarb
push
test
dec
mov
sub
daa
loop
dec
mov
fsubrs
outsl
sub
fidivl
enter
movsl
dec
out
mov
jne
mov
mov
push
incb
aam
and
les
cmp
mov
push
mov
sub
addr16
dec
dec
outsb
or
in
mov
lret
mov
lret
push
mov
sbb
and
push
cli
pop
aad
push
or
xchg
daa
add
into
xchg
mov
cmp
pop
sbb
inc
scas
push
push
pop
shlb
jecxz
cld
push
or
sbbl
add
shll
cmp
iret
sahf
int
push
xchg
sarb
sarb
popa
dec
cmp
nop
filds
dec
arpl
ds
or
ret
roll
push
cmp
jge
leave
or
mov
jno
hlt
roll
push
mov
jp
xlat
sbbl
add
mov
fldz
mov
push
pop
pop
mov
stos
mov
idivb
ret
stc
push
xor
xchg
pop
adc
xor
xor
stos
arpl
ret
push
dec
jp
dec
xchg
pop
clc
sub
cmp
or
sbb
ljmp
js
push
lcall
mov
sub
cmp
or
sbb
ljmp
js
push
lcall
mov
sub
push
fmuls
leave
sbb
sub
adc
or
js
jno
pop
cmpl
mov
clc
sub
cmp
mov
cmp
or
cmpsl
repnz
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
mov
and
mov
add
add
add
add
push
add
add
add
add
cwtl
add
int
jl
scas
add
sbb
add
add
add
add
add
daa
add
add
add
sub
jl
or
and
mov
daa
add
rolb
add
add
add
add
add
add
add
add
add
adc
and
out
testl
faddl
sub
outsb
add
add
inc
add
add
adc
xor
add
add
add
add
push
add
mov
inc
add
imul
add
cmp
or
loope
mov
dec
add
add
add
stos
add
add
add
add
add
add
movsb
add
filds
and
inc
add
add
add
and
clc
add
add
add
jne
sbb
cmp
cmp
push
add
add
testl
fs
add
add
add
add
add
add
outsl
add
add
add
add
and
pop
add
add
into
add
add
testl
pop
add
add
add
add
or
add
add
add
add
mov
add
add
add
lret
add
add
inc
add
add
add
add
add
add
add
and
pop
add
fildl
pop
add
add
add
add
in
add
add
push
add
add
add
verr
add
cmp
cmp
push
add
add
or
movsb
add
dec
add
add
stos
add
add
add
add
and
bound
stos
add
add
add
arpl
pushf
add
leave
add
adc
ja
jmp
add
add
add
add
add
add
add
insb
add
ja
or
das
add
pop
add
add
add
fwait
add
add
add
add
les
push
add
add
add
add
add
add
mov
add
add
add
add
add
dec
add
add
inc
add
add
add
add
lret
add
popl
test
mov
add
add
cwtl
add
add
add
add
add
or
js
cmp
and
cwtl
add
popa
add
add
add
or
rolb
scas
add
add
add
add
sub
scas
add
add
add
add
add
add
add
add
mov
mov
dec
add
pop
xor
add
add
add
sbb
add
add
movl
filds
and
imul
add
add
aaa
add
add
add
movsb
add
add
add
add
imul
cmp
cld
add
add
add
add
add
add
or
add
in
pusha
add
add
add
add
cmp
or
push
add
add
add
add
add
add
add
add
add
add
sbb
popa
add
into
add
pop
add
dec
add
add
add
add
cmp
or
int3
add
add
testl
mov
xlat
add
add
add
stos
ss
fmull
xchg
jne
or
and
in
or
flds
sub
xchg
dec
sbb
in
inc
or
sbb
js
jmp
xchg
and
pop
adc
inc
pop
jge
sub
sahf
cli
jo
scas
lock
mov
in
cmp
sub
jmp
das
pop
xlat
shrl
fstpt
mov
enter
xchg
cmpsl
sub
mov
add
fstps
adc
adc
jae
stc
fst
push
testb
hlt
xchg
cld
and
sbb
sbb
inc
lahf
stos
fbstp
stos
ror
pop
push
inc
push
inc
fistpl
test
int
pop
shll
mov
mov
dec
cs
inc
adc
cli
es
daa
push
fstpt
lcall
sbb
enter
out
dec
mov
test
pop
sub
xor
inc
inc
mov
aas
in
jecxz
jecxz
pop
shrb
xor
jo
movsl
dec
jnp
adc
or
mov
add
mov
clc
pusha
adc
jecxz
pop
es
insb
or
jo
xchg
jns
add
loopne
roll
dec
cmp
dec
fsubs
add
and
dec
and
push
mov
push
imul
stos
in
xor
leave
cmp
add
cmp
sub
leave
pop
lahf
inc
dec
ljmp
lahf
stos
add
inc
outsl
mov
enter
jl
jae
mov
cs
inc
cmp
mov
jno
or
je
dec
push
add
stc
fsubl
fcomip
ror
mov
das
bswap
mov
inc
pop
sub
mov
jle
fwait
push
push
lock
mov
mov
push
sub
cmpl
sbb
stc
xor
jecxz
pop
arpl
jb
add
repz
scas
fs
or
insl
in
mov
dec
fnstenv
dec
pop
xor
iret
dec
scas
addr16
push
jp
lods
jg
repz
lahf
sbb
sbb
out
jle
insl
xchg
cs
mov
mov
mov
dec
jo
pop
push
insl
pusha
push
jmp
add
gs
stos
push
mov
out
fimull
xlat
sbb
pop
mov
dec
test
je
xor
mov
lret
movb
in
jge
rorl
xchg
mov
pushf
sbb
scas
jno
jecxz
sbb
imul
mov
mov
fdiv
cltd
sub
mov
xorl
into
scas
cmp
mov
and
leave
test
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
