call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
hlt
loop
repnz
sarb
mov
data16
inc
inc
push
xor
and
adc
add
hlt
loop
repnz
shlb
test
je
fs
inc
inc
push
xor
and
adc
loop
repnz
shlb
test
and
and
xor
push
gs
insb
insl
popa
adcb
sarb
or
sbb
inc
sub
mov
sbb
cmp
mov
insb
cwtl
enter
stos
push
mov
sti
inc
add
or
mov
mov
stos
jbe
pop
jno
lret
incl
add
xchg
hlt
cmpsl
ret
pop
ljmp
int
test
jmp
mov
and
in
or
mov
dec
sub
jne
insb
fnstcw
movsb
xor
add
enter
out
sarb
xchg
lahf
mov
xchg
xlat
xor
and
ja
roll
push
pop
aaa
loop
repnz
shlb
test
push
inc
inc
push
xor
and
adc
add
xchg
out
mov
ret
rol
lret
les
movb
jae
daa
add
mov
gs
jno
je
addb
rcl
into
out
shr
shl
sub
or
adc
dec
inc
xor
outsb
jge
cmpsb
in
xchg
mov
mov
mov
je
fs
inc
inc
push
xor
and
adc
add
hlt
loop
repnz
shlb
test
push
inc
inc
push
xor
and
adc
add
hlt
loop
lcall
push
pop
les
mov
imul
aaa
sbb
mov
sub
enter
and
sub
pop
imul
hlt
adc
int
ret
xchg
and
jns
loop
jbe
dec
or
flds
xchg
lahf
orl
mov
mov
mov
xor
call
cmpsl
popa
xor
or
adc
incl
xchg
add
lds
jp
sbb
jns
flds
out
adc
mov
addr16
mov
xlat
mov
pop
push
mov
jns
cmpsb
jno
out
int3
sbb
jmp
xor
mov
jo
scas
int3
pop
mov
js
xor
xor
adc
push
sti
adc
sahf
pushf
lock
das
dec
lret
or
popl
add
xor
fwait
push
sub
jge
sbb
fistpl
inc
mov
push
pop
sub
xchg
sarl
sub
fsubrp
flds
outsb
mov
pop
push
sub
sub
rorb
aaa
sar
mov
xchg
fiadds
pop
push
xorb
int3
gs
or
mov
cltd
cmp
sbb
jbe
mov
jp
leave
in
icebp
adc
sub
push
mov
popa
mov
scas
add
int3
cmp
into
movsl
test
movsl
inc
ja
mov
add
icebp
add
mov
int
adc
lahf
jmp
jg
inc
mov
push
fadds
pop
dec
mov
ret
pop
xchg
movsl
sbb
adc
repz
ficompl
inc
cmp
mov
fidivs
das
mov
add
fistpll
jbe
loopne
je
call
mov
cld
rsm
inc
fstpt
push
inc
adc
in
xchg
mov
mov
rolb
and
cltd
nop
xor
jo
jb
cltd
cmp
test
ds
pop
xchg
mov
inc
xchg
outsb
xor
mov
xor
jp
into
call
mov
popf
jbe
mov
das
test
aas
leave
push
ret
ret
add
sbb
loope
pop
repz
out
or
rorb
cld
or
cli
idivl
rorl
push
rorb
imul
jno
pop
sbb
arpl
sbb
pop
sub
sbb
dec
mov
inc
and
mov
or
ret
pop
fsubl
adc
push
mov
sub
jns
adc
mov
jmp
xchg
jle
iret
fdivrl
pop
xor
pop
pcmpeqw
adc
xchg
xor
cmc
mov
fwait
inc
out
mov
add
outsl
dec
test
xchg
mov
push
or
xor
push
mov
inc
jl
xlat
ret
xchg
and
lret
push
adc
insb
pushf
subl
test
lret
daa
push
cmpsl
repnz
les
loop
inc
lods
mov
stc
icebp
cmpsl
or
xchg
push
jle
arpl
loopne
dec
push
add
adc
lea
jle
or
jl
pop
xlat
mov
add
sbb
mov
xchg
in
mov
ds
movsl
cmp
lods
stos
aas
mov
adc
imul
jg
jmp
daa
inc
dec
cld
clc
sbb
mov
sbb
inc
push
pushf
mov
push
push
outsl
out
xor
out
mov
pop
mov
jmp
rclb
mov
out
xor
inc
mov
les
inc
mov
cmp
test
cmp
mov
dec
ficoml
lret
shl
adc
add
mov
xor
jne
call
lds
mov
jo
enter
mov
nop
out
jbe
int
negl
cmp
inc
lds
add
pusha
faddp
lods
test
pop
jg
arpl
mov
inc
hlt
xbegin
or
adc
adc
fistpl
icebp
xchg
xchg
or
sarl
outsb
and
ja
rol
imul
addr16
jno
das
jge
lods
adc
sbb
or
cs
cli
test
dec
sbb
mov
push
cld
movsl
cmp
incb
arpl
inc
nop
pop
xchg
outsb
je
in
pusha
lds
lret
dec
shlb
dec
mov
adc
mov
jnp
adc
sbb
mov
mov
inc
call
test
xchg
mov
sbb
fyl2xp1
shll
lret
icebp
js
mov
popf
testl
pushl
mov
or
shr
fisubrs
ret
stos
rcll
pop
imul
out
pop
jle
jle
in
mov
and
add
pushf
das
inc
insb
add
mov
popa
or
cmp
mov
mov
lret
in
fistps
out
stos
jne
add
dec
imul
rcll
xor
int3
loop
push
adc
movsl
dec
leave
ja
xlat
mov
inc
cmpb
mov
push
dec
jle
jge
push
mov
sar
mov
aam
clc
loope
jl
aad
push
inc
inc
jbe
sub
outsb
cwtl
andl
scas
stc
jb
xchg
xchg
cmp
push
add
lret
sahf
call
push
xchg
daa
lea
jmp
cld
pop
push
shrl
aaa
pop
and
adc
lahf
adc
jnp
mov
into
mov
or
cmp
mov
or
jl
mov
xor
mov
imul
imul
pop
lds
mov
jb
pop
fildl
mov
imul
mov
mov
in
out
icebp
mov
dec
daa
frstor
pop
jp
mov
inc
call
mov
sub
or
scas
pop
js
or
mov
popf
sub
jne
stc
adc
divb
imul
and
fcmovnb
gs
or
int
mov
dec
jno
cmp
mov
int
mov
testb
adc
adc
scas
or
sti
shrl
lods
repnz
or
jmp
fnsave
rclb
push
cmp
jbe
ss
push
adc
push
imul
stc
clc
lret
js
cmp
inc
push
sub
loopne
xor
xchg
mov
jl
out
or
adc
negb
push
lcall
mov
popa
xchg
pop
popf
jmp
incb
rorl
dec
push
decl
lcall
cmpsl
dec
push
pop
xor
add
and
fldcw
decl
sti
lods
hlt
add
add
sub
rorb
sub
outsl
cld
mov
xchg
sub
lahf
add
repnz
xchg
inc
mov
push
lahf
paddusw
cltd
out
pop
add
aam
out
in
xchg
test
je
push
cmp
mov
fwait
imul
hlt
shlb
dec
sub
fs
or
cwtl
lahf
icebp
dec
or
jmp
adc
addr16
mov
cmp
lds
incl
inc
pop
jne
jnp
enter
sub
ficompl
adc
aas
inc
dec
aad
test
ds
add
mov
test
jp
stos
or
mov
or
sbbl
sbb
sti
test
xor
stos
push
mov
stos
or
daa
push
xchg
iret
lcall
aaa
xor
sbb
mov
jmp
js
stos
cli
or
cmc
movsb
jb
pop
in
shll
sub
jbe
imul
mov
repz
aad
jmp
enter
xor
push
xchg
int
shll
scas
mov
and
mov
les
and
sub
in
stc
cltd
mov
incl
adc
sbb
or
std
mull
cmp
stos
xchg
mov
add
out
xchg
jo
jnp
test
cltd
jmp
xchg
orl
loopne
fcoml
repz
std
inc
icebp
lcall
fwait
in
popf
jo
pop
inc
xor
cmpsl
fildll
xchg
icebp
pop
sbb
inc
fistpl
clc
sahf
adc
pop
inc
lea
or
popa
out
out
shrb
dec
xchg
out
mov
stos
mov
sub
loop
leave
mov
pusha
mov
sub
xor
mov
outsl
and
popa
les
shld
jne
mov
out
loopne
daa
mov
aaa
out
loopne
lods
lds
aaa
sbb
cmpsl
cmp
std
jb
js
mov
aad
dec
fistpll
enter
mov
jge
data16
push
dec
ror
and
mov
inc
add
cmp
mov
push
aad
iret
mov
fcomi
sub
cmpsb
adc
and
cmp
inc
dec
add
pop
inc
into
mov
out
aaa
pop
int3
xor
cs
xchg
mov
mov
loope
movsl
sub
sub
pop
pop
add
cmp
xorb
fs
hlt
lcall
repnz
pop
mov
movsl
cmp
sbb
or
call
test
mov
pusha
aas
mov
loop
mov
adc
imull
andl
gs
inc
mov
lret
xchg
jmp
xor
sub
pop
pop
inc
addr16
sbb
push
push
test
cmpsb
mov
outsl
cli
mov
dec
fwait
cmpsl
int3
in
insl
push
mov
push
jmp
movsl
inc
adc
adc
outsl
xchg
pop
ret
xor
sub
dec
mov
jae
daa
pop
sahf
testl
dec
fildll
popl
int
test
ljmp
mov
pushf
daa
push
mov
mov
bound
jmp
mov
inc
push
insb
inc
cmp
and
lods
ret
adc
xor
outsl
mov
mov
inc
dec
call
sub
pop
or
cmpsb
cltd
cs
orb
adc
shl
cld
ja
out
repz
cmpsb
sbb
dec
mov
dec
jl
scas
xchg
pop
xchg
ja
sbbl
jmp
sbb
cmp
shr
add
fsts
repnz
add
aas
push
sub
cli
mov
cwtl
push
sbb
stc
add
nop
aaa
sub
cmpsl
divl
or
lahf
adc
cltd
ss
and
jne
repnz
das
sub
icebp
xor
cmp
dec
out
push
add
mov
movsl
push
ds
dec
jb
scas
rcll
loop
mov
inc
mov
fmull
lret
push
dec
leave
jecxz
ds
sbb
sbb
out
sbb
mov
mov
cmc
pop
jecxz
movsb
sub
imul
cld
jno
sti
lods
jbe
les
xor
lret
lret
sbb
lods
adcl
insb
jns
push
aam
sbb
and
sub
std
enter
lods
cmpsl
inc
dec
xchg
mov
and
pushf
xor
adc
daa
aam
mov
popf
jb
ja
inc
rcll
mov
inc
push
xchg
adc
jecxz
or
xlat
out
stc
les
or
push
push
mov
jnp
dec
out
outsb
xchg
mov
xor
aam
lock
shl
and
jno
inc
and
add
popa
adc
mov
nop
add
lahf
mov
movsb
imul
jg
aaa
incl
jo
cmp
add
mov
lods
pop
add
out
mov
adc
int3
and
xor
inc
mov
mov
jnp
imull
pop
pop
lea
fs
out
bound
cmp
sahf
enter
adc
sub
loopne
lret
mov
in
and
call
or
out
js
repnz
dec
adc
inc
test
popa
loopne
dec
inc
lret
pop
in
pop
xchg
pop
scas
je
add
insl
sbb
lea
mov
add
nop
and
idivb
pop
jp
xchg
ljmp
push
out
out
in
xchg
imul
push
movb
mov
adc
mov
addr16
imul
and
shl
jo
popf
mov
gs
hlt
cmp
mov
push
imul
out
call
call
cmp
add
movsb
popa
cmpsl
pop
sub
shlb
xchg
dec
in
sarb
loopne
xchg
push
ret
dec
imul
push
in
cltd
or
test
dec
sbb
xchg
cmp
inc
popf
push
cli
outsb
or
xor
add
fidivrl
inc
aas
je
popf
adc
scas
lods
jo
dec
ljmp
xchg
adcb
movsl
push
xor
push
xor
aas
xchg
sahf
add
scas
jne
das
int3
mov
test
pop
fwait
add
lcall
jecxz
lods
cmpl
jmp
jle
xchg
adc
cmpsl
fcoms
pop
ret
flds
in
lret
fadd
insl
and
je
xchg
daa
xchg
cmc
mov
and
jge
scas
mov
and
les
mov
xor
in
xchg
or
adc
push
pop
mov
cs
je
outsb
insb
mov
xchg
repnz
pop
xchg
add
or
adc
mov
stos
adc
fsubl
mov
mov
fdivr
adc
sbb
popa
jo
movsb
inc
test
jle
scas
lea
ja
push
xor
push
scas
sahf
ljmp
test
lds
jge
pusha
jecxz
wrmsr
fidivrs
jb
sub
or
je
adc
negl
push
inc
mov
adc
fnstsw
je
fsubl
pop
fsubs
ret
aas
sbb
inc
push
mov
loope
jae
jp
popa
add
lret
sub
pop
loopne
test
das
test
xchg
fs
fs
jp
xchg
push
mov
push
mov
or
icebp
add
aas
sahf
pusha
lds
je
and
into
sbb
shl
dec
gs
out
push
test
mov
call
push
stos
nop
adc
cmp
pop
ss
insl
sub
push
mov
xor
es
jle
or
test
bound
les
add
cmp
dec
xchg
add
fcompl
dec
in
ljmp
mov
jg
jg
xor
push
jns
jle
push
test
cmp
hlt
into
fld
fidivs
pop
jns
push
adc
adc
sub
pinsrw
inc
push
sar
je
cmp
sti
cmpsl
jmp
jge
mov
insb
mov
sbb
pop
push
push
addr16
xor
cmc
mov
cwtl
add
mov
imul
shl
cmp
out
and
int3
ss
push
add
mov
and
jg
aad
out
mov
testl
rcrl
lret
xchg
ja
xchg
xor
add
xlat
mov
int
or
aas
pop
mov
or
int
add
sbb
push
push
cmc
and
jmp
leave
cmc
jns
cmp
or
pop
mov
mov
inc
fdivrl
pop
push
mov
jns
mov
jne
iret
push
scas
test
lret
sbb
mov
idivb
and
push
dec
mov
jo
ljmp
in
jmp
icebp
add
test
push
dec
push
xchg
push
shrb
stos
je
lahf
cmp
loope
std
jne
das
fwait
pop
fstps
in
scas
sub
test
testb
mov
lcall
cmpsl
js
dec
sar
subb
inc
mov
es
jo
orl
pop
mov
pop
ljmp
pop
dec
inc
or
add
mov
dec
jecxz
xchg
and
adc
mov
add
pop
mov
in
add
pop
or
xor
fistpl
arpl
mov
aaa
fs
sub
lea
pusha
mov
mov
ljmp
lds
cmp
pinsrw
pand
lret
adc
pop
jnp
leave
mov
push
imul
in
call
in
rclb
je
adc
icebp
dec
xor
mov
xor
adc
insl
out
xchg
jnp
sub
cmp
pop
and
dec
inc
iret
jl
lret
test
xor
sub
mov
adc
fldt
push
jnp
or
xchg
insl
scas
push
mov
sub
push
int
add
jne
jnp
adc
popa
add
jnp
adc
loop,pn
leave
inc
jge
inc
mov
sub
mov
ret
out
sbb
jno
addl
jmp
cmpsb
dec
mov
xor
or
scas
sbb
ret
loop
out
or
jno
adc
aad
push
xchg
and
jnp
jae
pop
scas
andl
mov
imul
pop
push
sahf
sub
sub
xlat
xchg
aad
sti
lret
inc
or
in
pop
push
adc
mov
jecxz
mov
and
sub
jne
cmpsb
xor
jns
adc
mov
icebp
cmp
cmc
fildll
insl
fs
or
ljmp
or
dec
das
js
mov
push
popa
pop
xorl
dec
popa
hlt
sub
jle
mov
mov
movsb
xchg
mov
xor
icebp
or
rcll
aam
xor
dec
mov
pop
lds
mov
fucomp
cmpl
jecxz
das
mov
loopne
aaa
rolb
popf
subl
test
cmp
jo
stc
sti
dec
mov
lahf
ljmp
add
jnp
cli
cltd
mov
shrl
adc
movsl
test
bound
sub
into
cmpsl
loope
cmp
outsb
pop
jo
lea
arpl
mov
fwait
pop
mov
scas
hlt
aaa
es
icebp
movsl
sub
and
loopne
fsubrs
xchg
hlt
ja
add
pushf
leave
lods
fnstcw
add
push
into
mov
rolb
fdivrs
mov
lods
push
sarl
jb
int3
adc
push
ljmp
mov
cmp
pop
mov
aad
leave
xor
lcall
movsl
insl
into
mov
mov
push
fists
push
outsl
pop
stos
and
lcall
ljmp
inc
mov
test
pushf
rorl
and
mov
in
push
adc
repnz
cmp
dec
aas
push
loopne
testb
sahf
out
xchg
pop
loopne
lock
adc
call
test
pop
jno
pop
shlb
and
testl
test
movsb
mov
cmpsl
cmp
gs
xchg
jne
jp
sbb
adc
jp
and
xchg
cmp
aas
mov
popa
loop
mov
push
mov
sti
ret
outsb
push
push
cwtl
loope
cmp
into
mov
or
fwait
push
or
decb
dec
lret
call
pop
fiadds
push
cmp
cs
cmp
loope
loopne
xor
scas
xchg
movsl
nop
movsb
lods
add
fiadds
dec
adc
mov
xchg
and
sbb
mov
lods
add
subl
sahf
sahf
pop
stc
fistpl
add
inc
outsb
dec
or
jp
gs
repz
out
out
add
fnsave
sbb
sbb
mov
add
sub
fdivs
add
dec
sub
adc
mov
cmpsb
sarl
sahf
mov
nop
loop
mov
insl
scas
std
into
fsubs
ss
ja
stc
xchg
mov
clc
mov
xchg
cltd
popa
inc
sub
in
inc
cmp
ret
leave
dec
adc
jge
bound
add
xchg
mov
in
lea
leave
or
sub
les
push
or
inc
insl
push
sbb
pop
jns
cmp
imul
shr
jbe
imul
mov
sbb
dec
scas
jo
mov
sahf
es
ja
xchg
rorl
add
or
das
fisttps
or
add
mov
push
mov
mov
test
dec
inc
jle
mov
cwtl
daa
in
sub
xor
mov
jbe
int
lock
movsb
sti
or
testl
dec
movsl
mov
mov
or
cltd
mov
and
fcmovne
xchg
mov
ljmp
mov
rolb
dec
adc
lret
xchg
testb
mov
movsb
mov
dec
je
and
adc
mov
xor
add
push
fimuls
out
insl
push
sahf
xor
push
outsb
xor
add
push
nop
addr16
mov
jle
dec
stos
add
sub
mov
sbb
fdivl
fs
sbb
mov
mov
mov
dec
mov
ds
ss
sbb
sbb
fisttpll
sbb
mov
sbb
inc
mov
ficompl
or
mov
pop
xor
je
sbb
mov
adc
and
subl
scas
testl
mov
movsb
mov
addb
inc
inc
push
xor
and
adc
add
hlt
loop
repnz
shlb
test
push
inc
inc
push
xor
and
adc
add
hlt
loop
repnz
shlb
test
push
inc
inc
push
xor
and
adc
loop
repnz
shlb
add
mov
fdivr
inc
inc
and
in
std
cld
in
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
out
cmp
mov
in
mov
outsb
sarl
adc
ds
out
test
xchg
into
movsl
fidivs
mov
sahf
fldt
jle
cmp
ds
push
gs
jne
and
push
into
aas
faddp
scas
cmc
mov
outsb
add
jo
inc
push
pop
xor
jo
cmpsl
sar
mov
lret
add
mov
movsl
popf
cs
sbbl
push
cmp
push
dec
test
cmp
sbb
cwtl
cli
push
jmp
rcll
or
out
loopne
push
in
jne
push
cld
push
inc
lock
scas
outsb
add
add
mov
fidivs
mov
shrl
js
subb
fidivrl
rclb
fmuls
lcall
movsb
pop
out
adc
and
or
addb
xlat
lds
ss
adc
push
sarb
gs
mov
jno
adc
inc
mov
sbb
sub
jbe
mov
mov
rcr
mov
lds
outsb
add
pop
or
jns
mov
test
xchg
cli
stos
leave
mov
mov
das
inc
jp
sub
add
dec
adc
in
ret
mov
sahf
mov
xchg
fs
emms
sbb
jl
push
push
xchg
lcall
mov
cmc
outsb
add
pop
xor
push
gs
jne
test
xchg
into
movsl
fidivs
mov
sahf
cmc
outsb
add
pop
xor
push
gs
jne
test
jne
cli
pop
je
adc
aaa
dec
or
fdivl
out
iret
cmp
inc
movsl
test
mov
mov
lods
xorb
mov
lds
icebp
int
lret
jbe
xor
lcall
aaa
adc
inc
clc
clc
call
cmpl
xchg
xchg
outsb
adc
ss
dec
xor
mov
ret
pop
pop
push
sub
cltd
mov
out
cmp
ja
scas
or
imul
xor
sahf
add
rcl
mov
rclb
pop
stos
or
adc
xchg
mov
cmp
ret
push
mov
fcmovu
pop
mov
xor
adcl
xchg
mov
dec
test
dec
jae
push
xchg
repz
aad
jmp
inc
push
xor
jae
inc
mulb
cmp
addr16
cmp
adc
and
cmp
jl
dec
jbe
roll
std
mov
jp
push
xchg
testl
mov
adc
mov
lea
js
adc
push
shrl
push
mov
imul
lret
cmp
inc
decl
mov
lret
inc
adc
pop
mov
dec
push
es
mov
sub
fsts
movsl
and
sbb
sbb
decb
cmc
popf
jns
mov
mov
dec
fcoms
hlt
rclb
xchg
int3
cltd
test
and
mov
in
popa
pop
xchg
notb
sbb
lcall
daa
or
pop
movsl
dec
je
scas
sysret
inc
fisubs
cmp
test
inc
inc
sub
xchg
sub
call
in
mov
lods
push
mov
aas
aaa
shlb
iret
mov
push
mov
push
mov
aam
fistpl
data16
inc
xchg
sbb
dec
fidivs
sub
push
inc
nop
mov
jle
inc
jp
aaa
push
out
popf
in
test
inc
imul
popf
jo
sbb
add
loope
push
pusha
lds
and
mov
lods
cltd
add
adc
into
scas
mov
das
push
out
outsl
push
adc
ret
leave
push
sahf
push
ss
inc
in
std
adc
push
adc
fnstcw
mov
or
fnstenv
mov
shr
adc
push
and
and
xor
cmp
dec
xchg
mov
dec
push
or
push
inc
fs
mov
pop
pop
leave
mov
test
cmp
setg
into
cmpsb
scas
adc
pushf
es
rcrb
push
mov
mov
fbld
push
add
aam
mov
mov
xchg
stos
imul
cwtl
pop
push
ss
sub
shll
sar
jg
loop
fidivl
int
inc
stos
cs
out
push
mov
push
pop
ljmp
repz
nop
cld
xchg
mov
mov
xor
mulb
int3
lret
xchg
sbb
xlat
cmpsl
inc
adc
imul
sbb
cmpsb
icebp
fs
sahf
sbb
sti
imul
enter
xor
mov
jb
and
mov
or
push
fiadds
add
nop
cltd
xor
enter
orb
pushf
sub
push
cmpsl
xchg
imul
jno
dec
addb
fwait
inc
mov
mov
xlat
outsb
lods
xor
cltd
cltd
cmc
leave
jmp
adc
into
das
mov
ret
inc
jnp
add
mov
sbb
mov
mov
cmp
xchg
jmp
jb
pop
mov
clc
roll
mov
sti
icebp
or
scas
dec
add
out
insb
push
insl
cli
inc
sti
add
xor
xor
inc
sbb
pushf
popf
test
sarb
addr16
movsl
into
cmp
mov
lods
add
rorl
cmp
fst
push
dec
cmc
popa
xchg
mov
cld
adc
xchg
pop
add
xor
imul
popf
pop
pop
mov
scas
cmp
jmp
into
scas
sub
arpl
sub
dec
lret
inc
push
in
xorb
sbb
aad
inc
mov
iret
ret
push
pop
cmpsb
fwait
add
inc
xchg
pop
sub
and
shrb
testl
inc
pop
iret
mov
inc
dec
jmp
jns
clc
xchg
pop
mov
je
in
mov
aas
add
ss
add
scas
into
jns
idivl
xor
xor
aas
fnstenv
or
dec
and
add
add
jmp
test
shll
or
cmp
xor
jb
aaa
nop
jge
es
push
xchg
sbb
lret
mov
push
fistl
jmp
vphaddubq
mov
or
xchg
push
push
push
sub
lock
xor
dec
jg
rclb
movsl
test
lahf
xchg
push
dec
dec
and
cwtl
xchg
mov
cwtl
lds
data16
dec
push
es
jp
ret
jbe
sbb
jae
prefetchw
or
std
pop
add
xor
xchg
in
pop
add
dec
out
lahf
mov
inc
notl
rcr
pushf
and
mov
les
cmpsb
outsb
push
pop
mov
or
enter
adc
or
outsb
scas
add
stos
mov
in
adc
lahf
push
aam
lods
nop
sarl
aaa
push
or
fidivrs
xchg
fisubrl
insb
aad
jnp
cwtl
xchg
fimull
div
setg
rcll
in
dec
adc
dec
fsts
add
sub
in
xchg
fnstsw
jp
adc
cli
adc
ljmp
sub
mov
dec
mov
and
cmp
and
cwtl
mov
cli
jmp
jg
jle
cmp
pop
lock
adc
icebp
addb
inc
inc
jmp
out
inc
rorb
dec
sub
add
ljmp
dec
jl
or
mov
push
mov
repz
cmp
sbb
gs
mov
inc
jmp
and
cmpsb
iret
jl
xchg
sbb
je
pop
jbe
xchg
cmp
imul
lock
ror
mov
inc
xor
stos
lret
xchg
imul
std
ljmp
gs
mov
xchg
nop
fs
and
dec
cli
movsb
jae
call
push
rorb
ret
ds
xor
stos
sti
in
std
fcoms
xor
mov
inc
mov
icebp
bound
sbb
push
mov
jl
pop
adc
pop
movsl
cmp
push
add
std
sti
cmp
add
inc
xchg
fs
inc
and
ds
shr
inc
fcompl
or
test
lods
cmp
nop
cs
pop
sub
ss
fs
ds
imul
jae
fsubrs
in
jnp
dec
push
fisubrs
ss
mov
mov
subb
inc
andl
fisubs
inc
sub
in
pushf
aas
mov
and
xor
and
xor
mov
pop
dec
aam
imul
sbb
fistl
loope
outsl
les
bound
and
and
cs
push
fptan
mov
test
add
jnp
pop
push
sub
sbbl
sbb
imul
xchg
lcall
outsl
mov
mov
xor
gs
mov
xor
add
int3
cmp
mov
outsb
xchg
scas
push
in
pop
mov
lods
into
mov
sub
inc
dec
insb
adc
into
jp
jo
mov
repz
lret
loope
dec
sub
mov
mov
repz
cmc
mov
arpl
inc
push
mov
jecxz
fwait
repz
xchg
add
cmp
in
imulb
pop
cmpsb
pop
or
push
mov
and
cmpsb
cmc
push
sti
shlb
add
inc
shrl
mov
mov
icebp
dec
stc
in
push
insl
lret
int3
mov
js
mov
jge
cltd
mov
das
and
pop
insl
cs
xchg
or
jno
stc
xchg
push
bnd
mov
xlat
bound
push
and
adc
aas
dec
out
adc
sub
into
test
pop
cltd
sbb
testl
mov
or
je
ds
in
cmpsl
mov
ja
mov
push
les
inc
xchg
mov
fstl
pop
addb
cmc
out
out
lds
mov
rorb
lret
movsb
clc
inc
xchg
jnp
push
fldl
pop
mov
mov
jge
fwait
int3
jbe
xchg
or
dec
mov
lods
ret
movsb
push
jecxz
in
push
in
mov
fcoml
sub
gs
xchg
call
int
dec
jl
rclb
cmp
aam
inc
addr16
lret
lods
mov
jb
cltd
idiv
pop
xlat
adc
loopne
cmpsl
jp,pt
stos
inc
jmp
les
ja
or
inc
aas
test
mov
test
dec
jmp
popa
out
iret
cltd
psrad
sbb
and
dec
in
test
outsb
jg
lods
jle
and
test
mov
push
dec
int3
cwtl
push
add
out
mov
xchg
jne
addr16
movb
pop
dec
stos
add
xchg
jp
ja
mov
jmp
push
enter
scas
nop
std
fisttps
or
call
clc
jl
dec
pop
mov
in
pop
flds
and
jo
pop
enter
out
jo
mov
lret
test
dec
or
jne
out
cmp
bound
movsl
dec
insb
adc
ja
mov
les
jmp
outsl
xchg
dec
pushf
cmp
pop
pop
mov
lods
push
out
in
jo
dec
push
ljmp
loop
or
fimuls
rclb
pop
or
vpaddsw
ficoml
jnp
jmp
adc
or
mov
int
jns
adc
pop
dec
mov
jle
clc
test
mov
gs
push
ljmp
adc
xor
aad
mov
add
add
mov
clc
mov
sahf
jmp
ret
sbb
jecxz
cwtl
bts
outsl
pusha
adc
xchg
dec
cltd
stos
cmc
fdivl
in
fcomps
cld
and
popa
cmp
xlat
popa
mov
fadds
stos
add
pop
insl
or
mov
xchg
in
sbb
sahf
xor
lea
in
popf
pop
sti
or
lcall
push
xor
xor
test
addr16
cmp
inc
xchg
and
into
add
or
enter
out
cmc
sbb
xchg
icebp
fisubrl
div
lds
sub
dec
jecxz
out
sub
cmc
inc
jg
sbb
fists
sbb
or
ss
cmp
xor
test
aad
xlat
imul
pushf
leave
pusha
or
xor
mov
test
imul
daa
adc
arpl
and
cwtl
stos
dec
dec
and
stos
inc
rcr
daa
into
sbb
fsubs
jne
lods
hlt
movl
fbld
pop
xor
and
cmpsl
daa
mov
dec
jo
cwtl
mov
test
add
test
jecxz
mov
aad
inc
lret
jae
add
faddl
pop
andl
fiaddl
inc
loopne
daa
jl
fadds
adc
cmpsl
or
jg
or
aas
jns
jns
mov
and
mov
jg
adc
sbb
or
xor
sti
jmp
stos
adcb
scas
sbb
mov
decl
cmc
out
cltd
or
xchg
inc
or
addb
mov
or
pop
xchg
mulb
js
cltd
aam
mov
jae
push
ret
lret
mov
in
sarb
pushf
pop
push
cmp
test
aam
aaa
sti
xchg
std
inc
bound
sub
das
sbb
daa
sbb
sub
and
pop
rclb
jae
jbe
out
fnsave
xchg
mov
idivb
mov
cmova
mov
add
repnz
push
pop
or
sub
lret
adc
add
push
pop
mov
popa
inc
pop
and
push
jo
popf
inc
int3
mov
push
push
sbb
arpl
xchg
sub
add
loope
cmp
push
add
jp
lret
orl
xchg
ret
mov
pop
sub
ret
imul
mov
in
pushf
lock
fcoml
push
inc
in
mov
lahf
adc
push
adc
imul
adc
xor
lahf
push
pop
sbb
sub
cmp
jbe
insl
add
xchg
ret
xchg
cltd
mov
push
dec
and
call
incl
gs
scas
sbb
mov
pop
movb
push
test
dec
pushf
jle
xlat
mov
mov
cs
inc
adc
idivl
fbld
dec
insl
fs
call
add
cmp
cld
sub
fisubs
dec
or
dec
and
mov
js
cmp
jb
fsubs
loop
cmp
stos
adc
adc
adc
adc
cmc
idivl
scas
or
mov
js
dec
mov
add
cs
jle
cltd
sahf
pushf
mov
aaa
sbb
inc
cmp
mov
ljmp
daa
test
rorb
cli
xchg
addr16
call
movsl
pop
xchg
jae
add
sub
shrl
xchg
hlt
push
pop
push
push
push
or
cs
ljmp
cltd
cltd
pop
neg
int
sbb
stc
cs
fidivs
add
adc
sub
lods
xor
pop
pushf
enter
mov
fwait
xchg
jno
add
into
inc
and
jb
pop
push
cli
dec
jno
stos
js
add
fidivs
outsl
stc
push
xchg
loope
mov
pusha
js
adc
sub
jl
sbbb
jbe
aas
andb
push
xchg
test
sub
jb
jl
mov
out
or
dec
sbb
dec
lea
arpl
mov
inc
fwait
inc
jg
sbb
mov
arpl
push
in
leave
sub
js
inc
in
imul
les
pop
jnp
jno
mov
cmp
hlt
jbe
aad
dec
dec
and
pop
add
data16
je
xchg
jb
inc
pop
loopne
lods
ds
mov
dec
sbb
mov
cmp
jg
fisttps
xor
dec
out
aad
sbbl
das
add
pop
add
inc
jb
add
imul
dec
inc
cwtl
cmp
mov
fbstp
enter
mov
les
xchg
sub
test
lods
in
outsb
movsb
xlat
pop
inc
daa
xor
mov
lret
mov
sbb
xor
xor
lock
cmpsb
stos
sub
push
bound
ds
sarl
fstl
es
daa
sbb
fdivrl
xchg
ficompl
pushf
adc
xchg
fstl
push
pop
xor
jl
testl
mov
cld
and
push
push
rclb
stc
popa
inc
daa
jmp
ror
jno
cmpsb
adc
pop
in
inc
bound
mov
sahf
frstor
pop
push
inc
scas
mov
pop
mov
jg
fs
rcrl
fnstenv
std
jns
cli
fs
dec
je
fildll
pop
pop
cmpsb
mov
and
lds
mov
push
mov
orb
rolb
mov
test
cmpb
mov
inc
js
cmp
icebp
aad
sbb
xchg
mov
incb
adc
sub
add
cmpsb
lds
push
std
andb
rol
repnz
and
mov
mov
or
lret
jne
es
repnz
cmpsl
mov
xor
nop
sbb
mov
movsb
stos
ss
popa
enter
dec
mov
ret
jl
jns
ljmp
push
popa
les
dec
jp
int
das
xchg
xor
mov
mov
pop
stc
sub
rcrl
dec
pop
mov
cmp
sbb
and
aas
je
inc
mov
inc
aad
jl
sbb
test
hlt
mov
push
in
scas
xchg
aam
mov
sub
sub
dec
jbe
cmp
or
enter
cli
jmp
sbb
in
adc
dec
mov
test
out
xchg
idiv
mov
fistpl
std
adc
add
call
ret
out
jle
sbb
inc
lret
aas
in
push
shll
movsb
pop
xchg
shlb
out
std
in
mov
nop
mov
fstps
aad
cmp
pop
xor
outsl
fsub
mov
sbb
xor
pop
int
inc
popa
xor
cli
jno
rcrl
out
cs
push
push
dec
jae
inc
outsl
mov
mov
mov
sub
test
repnz
jmp
nopl
or
icebp
loop
paddusw
cs
adc
xchg
push
pop
aam
add
jb
push
dec
call
push
and
dec
nop
xchg
sti
es
push
mov
and
jle
dec
ds
cmp
inc
paddsb
pop
or
cli
mov
lds
mov
xchg
sub
jle
inc
mov
inc
js
andl
and
in
xor
mov
xor
jle
add
xchg
repz
cmpsl
mov
stc
mov
lock
xchg
inc
insb
add
jbe
jecxz
mov
jecxz
dec
repnz
mov
fmull
shrb
fstl
mov
out
dec
scas
and
mov
stos
sahf
cs
push
xchg
and
adc
mov
push
test
and
jno
xor
lods
or
das
add
xchg
daa
imul
stos
bound
out
pop
jne
and
push
adc
insb
sub
loopne
cmp
xor
mov
jge
inc
add
loopne
cli
je
mov
fwait
addr16
cmpsl
ljmp
add
rorb
xlat
pop
sbb
dec
inc
push
adcl
xor
sbbl
dec
mull
addr16
int
sbb
jbe
jns
aam
cmp
mov
mov
shll
cmpsb
pop
daa
cmp
and
sbbl
sub
arpl
and
sbb
jb
ljmp
add
mov
not
lock
hlt
inc
fistps
xchg
cmpsb
stos
mov
mov
sub
mov
xor
mov
and
sub
xchg
add
cmp
and
add
push
lds
xchg
inc
inc
push
jmp
call
cmp
xchg
dec
xchg
adc
mov
fsubrp
fstps
lods
lods
sbb
and
mov
lea
stos
fwait
in
push
and
lods
mov
and
push
test
jns
test
imul
repz
outsl
push
xchg
stos
shlb
andl
imul
or
shll
cmpsb
sub
push
fstpl
loope
icebp
lret
test
sub
outsb
pop
ret
leave
nop
rcrl
xchg
jns
shll
push
jl
inc
imul
mov
mov
jo
insl
orl
das
fwait
andl
cmp
std
add
push
mov
xchg
sarl
scas
popf
dec
ficomps
and
sbb
push
mov
mov
inc
jnp
and
out
shll
jae
in
es
cltd
add
mov
adc
xchg
movl
cli
sbb
popf
fsubrp
adc
push
lcall
or
out
add
jl
lods
pop
mov
push
in
cltd
mov
jo
cmc
lods
xor
xchg
mov
mov
jg
cmc
fisubs
stc
sarl
cmpsb
cmc
mov
push
test
hlt
adc
mov
fistl
test
push
xor
mov
cmp
bound
in
add
mov
pop
add
push
sub
mov
out
add
or
push
movsb
rcl
in
popf
cmp
sar
stos
pop
inc
lahf
mov
fdivrl
dec
jae
pop
xor
hlt
inc
add
pop
mov
mov
cmp
aad
xor
ss
fwait
jnp
inc
adc
mov
jp
add
lds
stc
cmp
or
cmp
sbb
fnstenv
pop
mov
sub
add
inc
inc
pop
dec
pop
xchg
jl
mov
xchg
mov
dec
movb
dec
jo
or
xchg
sub
push
rcr
gs
ret
mov
add
mov
int3
push
lods
outsb
and
sahf
iret
loope
sahf
loop
or
aad
iret
stos
fbstp
out
mov
mov
xchg
test
jae
clc
out
sub
imul
jne
lret
repz
mov
pop
pop
mov
inc
xchg
mov
mov
mov
pop
clc
shrb
shr
inc
sub
daa
outsb
loope,pt
or
mov
xchg
lret
mov
pop
lds
aas
cwtl
pop
pop
and
repz
clc
cltd
and
aad
repz
pop
imulb
loop
in
popf
push
testl
stos
jle
adc
xchg
xchg
mov
mov
cmc
outsb
add
pop
xor
push
gs
jne
test
xchg
into
movsl
fidivs
mov
sahf
cmc
outsb
add
pop
xor
push
gs
jne
cmp
mov
lds
cmc
outsb
add
adc
pop
cmp
inc
ds
push
insb
push
xchg
out
popa
jno
inc
fdivp
scas
lds
xor
in
pop
inc
pop
cmp
loope
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
aad
lds
cmc
add
adc
negl
fisttpl
scas
push
push
mov
fs
adc
shlb
xor
add
adc
inc
movsl
push
push
mov
gs
aad
add
rcl
cmp
xor
sbb
or
pop
movsl
dec
push
inc
data16
cmc
gs
adc
xchg
dec
rorb
je
fwait
pop
push
test
xor
mov
cld
test
fs
mov
mov
in
push
test
test
rcrb
lcall
shrb
repnz
nop
je
ss
xor
mov
jne
movsl
adc
push
ds
xor
inc
nop
mov
sbb
dec
mov
outsl
ljmp
mov
adc
inc
test
sub
sbb
shlb
das
cmp
add
push
pop
ja
cmp
fldl
mov
dec
addb
test
movsl
rcrb
lds
cmc
adc
or
pop
movsl
dec
push
mov
mov
shlb
pushf
add
shrl
cmp
jne
sbb
mov
mov
mov
adc
int
idivl
fsts
ja
rcll
imul
popa
lds
popa
mov
or
jo
inc
movsl
push
push
mov
gs
adc
shlb
cmc
add
adc
inc
movsl
push
push
mov
gs
adc
shlb
push
pop
xchg
and
je
jbe
pop
pushf
xchg
lcall
rolb
roll
push
mov
sbb
or
outsl
loope
imul
testl
push
or
mov
mov
dec
js
roll
scas
adc
push
es
lret
adc
out
pop
inc
mov
push
loopne
jns
cmpl
or
arpl
pop
mov
jae
imul
movsl
jno
mov
insl
rclb
sahf
jge
inc
pushf
pop
mov
mov
mov
arpl
outsl
jnp
mov
push
mov
rdtsc
cmc
in
insl
jnp
fisubrs
outsb
and
mov
sbb
nop
pop
inc
lds
testl
iret
xor
xor
rcll
lret
lods
push
ret
pcmpgtw
stos
and
fiadds
pop
xchg
sub
addl
in
mov
sub
repnz
lods
mov
inc
mov
cli
adc
imul
std
mov
mov
fsubrl
and
pusha
shll
daa
repnz
jnp
repnz
adc
mov
dec
loope
mov
lret
mov
ljmp
sbb
sbb
push
sbb
mov
loopne
shll
pop
clc
xor
rclb
add
jno
pop
popf
jns
and
add
sub
adc
dec
jecxz
insl
je
push
lcall
cmp
mov
in
repnz
fsts
pop
imul
push
adc
push
sub
into
jp
fsub
pop
lock
add
push
inc
push
mov
std
out
inc
push
sbb
jmp
rcrb
in
cmp
repnz
inc
pslld
push
adc
mov
inc
fsubrs
cmp
xor
mov
rolb
xor
add
insb
mov
stc
fldl
out
ss
cmpl
fldenv
mov
movsb
xchg
rcrb
div
jp
mov
mov
adc
in
or
cmp
xor
add
xchg
add
inc
mov
xorb
mov
cltd
mov
test
gs
or
xchg
popa
lcall
stos
dec
inc
xchg
mov
in
movsb
inc
mov
ja
leave
idivl
jbe
push
pushf
mov
xchg
jge
ret
cmpsb
sar
inc
lock
stos
jmp
adc
push
orl
lods
aam
adc
out
test
add
adc
jno
fs
mov
and
testl
aam
mov
add
lods
scas
fimull
inc
cmpsb
dec
sub
lcall
mov
fwait
sahf
xor
inc
das
aam
push
subb
cltd
pop
dec
mov
outsl
push
jl
call
into
lret
sub
call
or
xlat
es
iret
add
jp
aas
jno
cmpsl
lods
cmp
xor
pop
cwtl
adc
mov
adc
fcmovnb
pop
lock
lahf
and
cmp
outsb
mov
dec
repnz
or
outsb
rcl
call
and
popf
or
js
push
or
sbb
or
test
pop
pop
test
xchg
addb
jmp
int
imul
test
daa
mov
testl
stc
or
sti
jle
push
enter
fsubs
or
and
cli
leave
push
or
push
sub
xchg
and
dec
or
dec
aas
adc
lock
sub
es
stos
nop
pop
xor
test
push
and
testl
fdivs
adc
pop
in
cwtl
testb
fsubr
inc
mov
cmp
jmp
push
dec
add
test
xor
or
pop
jl
movsl
dec
andl
mov
cld
add
scas
push
daa
andb
leave
repnz
shlb
fs
cmpsb
and
xor
jae
xchg
cmp
aaa
daa
sti
repnz
jno
dec
dec
inc
or
test
mov
pop
sbb
dec
imul
mov
in
sub
jge
sbb
cwtl
inc
ljmp
loopne
pop
and
mov
adc
adc
mov
mov
inc
stc
addr16
fsubp
insb
add
fnstcw
mov
adc
adc
push
xchg
mov
inc
faddl
ret
lods
and
cwtl
sbb
pop
loope
push
cli
adc
sbb
add
pop
jb
popf
dec
or
inc
movsl
xchg
repnz
cmpl
adc
dec
sbbb
mov
loopne
xor
cli
cmp
int3
sbb
out
mov
cmp
push
pushf
or
cmpsl
mov
imul
lods
ficoml
sub
hlt
dec
sub
arpl
imul
or
sub
pushf
jge
cmp
cld
or
in
lds
ds
and
cld
jecxz
mov
subb
fdivrs
fsts
fstps
mov
test
popf
pop
fstpt
push
inc
cmp
xor
cmpl
dec
xchg
aad
fsub
add
repnz
xorl
cmc
mov
std
lcall
rclb
cli
inc
pop
loope
js
leave
xlat
arpl
cmpsl
test
cs
pushl
daa
sbb
pushw
es
xchg
addr16
or
mov
in
jg
decl
lock
aad
in
jecxz
mov
out
and
sarl
inc
jb
push
cmp
dec
sbb
xchg
adcb
ret
adc
xchg
xchg
loopne
cmpsl
add
cld
xchg
mov
filds
adc
call
mov
aaa
xor
lret
pop
leave
mov
mov
adc
mov
mov
or
or
lds
in
dec
push
dec
sub
cltd
add
lock
xchg
and
cmpsb
mov
scas
jg
loopne
and
cwtl
cmp
sbb
repz
add
mov
mov
inc
enter
ficoml
scas
aaa
lret
ret
rcrl
lock
js
lret
mov
inc
js
lods
pop
cmp
mov
mov
loop
mov
les
out
push
js
arpl
jmp
dec
pop
sub
addr16
daa
mov
pushf
sarl
das
ret
std
xor
sbb
lcall
aaa
nop/reserved
ret
in
cmp
pushf
inc
inc
in
leave
notb
je
dec
out
and
and
cwtl
sbb
mov
ss
xchg
mov
dec
sub
stc
hlt
fistpll
dec
and
int3
push
jae
mov
jge
mov
mov
int3
data16
fisttpl
aas
clc
cwtl
sbb
mov
int
call
outsb
and
cmp
push
jbe
mov
sbb
inc
fdivr
inc
xchg
je
adc
lods
jae
repnz
daa
bound
inc
xlat
xor
outsb
cs
ja
fidivs
fisubrl
sarb
add
xor
test
jbe
and
mov
adc
dec
mov
dec
add
cmpsl
xchg
data16
aam
jbe
rorb
mov
push
pop
add
sti
push
mov
cmp
mov
add
pop
add
mul
ja
dec
jbe
test
test
sub
dec
xor
in
xor
push
aas
shll
cmp
push
mov
or
jge
aas
shl
mov
pop
xchg
mov
and
cli
pop
xchg
popa
rorb
adc
pushf
cmp
subb
or
push
call
sub
or
fnsave
xor
js
int
cmpl
xor
lock
adc
out
pop
out
xor
in
mov
rorb
xchg
push
push
jp
ja
pop
sub
roll
cld
lock
cltd
mov
inc
jmp
inc
std
cmpsl
in
dec
lret
inc
xchg
xor
jecxz
add
out
aas
int
push
sbb
push
mov
inc
lock
lret
sbb
lock
sbb
call
xchg
adc
ret
lock
xlat
and
ja
sub
shrl
fstl
push
fwait
pusha
cmp
stc
into
mov
mov
ja
sbbb
fsubrl
inc
popf
xor
pop
js
jmp
jno
mov
pushf
ja
pop
lods
pop
adcl
pop
mov
adc
addr16
pop
push
ficoml
cwtl
enter
push
or
and
addl
adcb
testl
dec
inc
bound
gs
cmp
fistps
mov
or
daa
lds
sub
mov
pop
loopne
add
push
fsts
jbe
add
or
and
add
add
push
lds
jno
cmp
das
or
push
inc
test
pop
lock
or
daa
jecxz
jb
mov
outsl
and
cmp
adc
andl
stc
pop
push
mov
adc
add
add
lods
ljmp
pushl
pop
das
jns
repz
inc
scas
test
std
mov
fldcw
movsb
push
jnp
xchg
rclb
jo
lret
cmp
push
orb
fsubrl
in
cmp
sub
pop
ja
mov
sbb
mov
inc
arpl
push
addr16
cmp
test
push
lds
sub
mov
pop
popa
mov
cli
push
outsl
adc
aam
mov
stc
andl
cmp
in
mov
inc
mov
mov
sbb
stos
jb
movsb
inc
mov
dec
inc
push
out
xor
loopne
pop
js
mov
test
stc
rcll
aam
xchg
scas
ljmp
push
pop
sbb
icebp
inc
adc
xchg
rclb
mov
push
pop
pop
ljmp
das
dec
popf
aam
addr16
sbb
shl
ficoms
push
pop
sub
fiadds
rorl
jo
mov
bound
cli
push
mov
sub
clc
fistl
dec
cmp
arpl
jae
push
inc
dec
daa
roll
loope
or
hlt
xchg
fisubs
cmp
cmpsb
shld
shr
shll
add
repnz
sub
mov
daa
test
wbinvd
subl
jne
and
popa
leave
mov
ret
mov
mov
mov
pop
icebp
sub
sbb
mov
push
push
lea
cmp
movb
add
sub
scas
jbe
gs
int
jg
pop
jae
popf
sahf
lcall
insb
orl
lcall
test
leave
out
mov
sbb
outsb
jb
xchg
lcall
insb
mov
push
xor
das
popf
dec
inc
sbb
cmp
inc
pop
push
stos
imul
push
jmp
mov
xor
inc
insb
repz
fisubs
pop
jl
ljmp
int
mov
sbb
push
popa
insl
sub
mov
xchg
xchg
cs
shll
hlt
pop
stos
push
cli
inc
sub
inc
sbb
cwtl
icebp
loope
adc
sbbb
fisttpll
xorb
ljmp
movsl
add
mov
sub
aam
sti
movsb
inc
imull
xchg
sub
push
xor
dec
inc
inc
cmp
mov
push
dec
mov
cli
mov
adc
mov
jb
out
add
fnstsw
push
and
inc
sub
xchg
sbb
das
and
insl
popf
push
pop
pop
iret
ss
sbb
icebp
mov
gs
cwtl
fwait
pusha
mov
shll
std
es
ds
aam
inc
pop
jmp
outsb
jnp
out
das
inc
in
push
aas
mov
repnz
in
jae
pop
inc
jno
xchg
daa
popf
pop
mov
xchg
mov
adc
fcom
fistl
call
jb
pop
clc
mov
rol
or
insl
hlt
decl
test
stos
sti
aad
into
inc
loopne
add
imul
lret
mov
mov
sub
roll
jo
pop
std
hlt
aad
in
push
pop
jmp
movsb
or
imul
imul
out
popf
out
ljmp
and
cld
mov
jge
stos
test
popa
insb
dec
fistps
lea
push
sti
aas
insl
fisttpll
outsl
push
inc
pop
and
pop
mov
in
scas
xchg
adc
mov
lcall
out
pushf
sbb
pop
repnz
rolb
shrl
rclb
dec
mov
daa
js
dec
sbb
repnz
pushw
cmpsl
imul
cmp
adc
mov
or
pop
sarl
fwait
inc
ja
dec
mov
push
mov
test
add
leave
push
push
sub
jle
in
jl
das
idivl
idiv
xor
add
mov
aad
cmpsl
sti
adc
xchg
cmc
iret
in
lea
test
fcomps
cld
lods
cltd
cltd
xchg
and
into
ljmp
mov
mov
mov
lock
gs
jno
ja
xchg
add
mov
scas
pop
lock
sbb
pop
scas
test
xor
ljmp
mov
sub
daa
test
or
aam
fs
and
lock
fisubrl
in
in
popf
pop
mov
fdecstp
dec
scas
sub
jmp
add
dec
pop
inc
adc
cmp
loop
sub
pop
jae
push
inc
sbb
sahf
add
push
cltd
jp
add
push
cwtl
in
fisubl
shrl
sbb
or
or
sbb
je
in
and
cmp
imul
jl
lds
pop
xchg
push
dec
repnz
sub
ja
in
mov
pop
push
test
icebp
sbb
jmp
xchg
add
aad
adc
pop
add
or
fwait
and
sub
lods
mov
push
in
sub
add
int
adc
adc
lds
xchg
or
push
sahf
inc
das
das
mov
insl
and
pop
xchg
sbb
ror
mov
cltd
mov
sub
xchg
xchg
dec
mov
frstor
int
sbb
sub
in
lods
xor
nop
fbld
mov
push
sub
fcoms
shll
cmp
sti
jp,pt
jmp
jmp
add
mov
cmpsl
push
shll
push
mov
push
repz
mov
mov
inc
fnstcw
or
repnz
in
dec
mov
addl
push
out
scas
xor
rcr
pop
pusha
mov
add
xchg
in
mov
popl
cmp
sahf
mov
sub
xchg
fs
jae
dec
sbb
jno
push
ja
xchg
adc
loopne
and
in
pop
aad
out
test
rcr
iret
pop
in
push
aam
mov
call
and
daa
xchg
orb
aad
pop
into
sub
sbb
bnd
jnp
lods
aaa
xchg
jns
aam
int
inc
push
sarl
cmc
fdivr
cmpsb
mov
mov
das
lea
mov
lret
inc
js
inc
push
inc
mov
dec
adc
out
out
mov
in
xchg
pop
loope
jmp
adc
and
xor
and
pushf
and
std
jmp
inc
test
rcl
and
pop
leave
lods
outsl
pop
test
mov
inc
ret
es
mov
xor
mov
push
std
and
stos
jge
flds
and
das
rcr
jo
pop
cltd
xor
ds
mov
clc
dec
imul
push
fwait
sub
sbb
mov
scas
mov
xor
lods
mov
das
loope
mov
pop
fs
xor
xor
adc
mov
sbb
sub
aas
stos
subl
inc
in
pop
js
jecxz
enter
sbb
cmp
mov
sarl
jmp
sub
add
fstp
lock
sub
inc
pop
lea
cmp
cmp
sbb
dec
xchg
stc
mov
stos
or
mov
jb
cwtl
shlb
cltd
aas
ret
js
orl
xor
cmpsb
fisttps
jbe
ds
dec
shll
xor
repz
fsub
inc
orl
loop
shlb
out
mov
aam
sbb
pop
inc
aaa
outsb
mov
xor
mov
push
add
xor
cmp
pop
adc
push
test
imulb
add
or
xchg
mov
pushf
lods
rclb
sarb
test
call
add
mov
sbb
jns
add
xchg
aad
std
mov
cltd
jp
push
xor
mov
cli
mov
xor
push
adc
pop
and
pop
jle
sbb
ljmp
fildll
loope
or
mov
mov
cmp
dec
iret
inc
jmp
inc
pop
out
pop
imul
push
or
mov
cmc
ss
dec
es
or
pushf
inc
xchg
sub
mov
test
cmp
mov
mov
lcall
iret
xor
pop
inc
xchg
jmp
xchg
jge
cmc
addr16
nop
inc
lock
pop
les
cltd
inc
push
push
out
add
or
fisubs
adc
sbb
cvtps2pi
negb
dec
xchg
clc
pop
push
test
sti
lods
outsl
sub
leave
jnp
pop
mov
xlat
popa
and
pushf
cmp
roll
loop
sarl
add
outsl
loope
call
lahf
mov
and
sub
push
test
test
mov
lcall
dec
add
jmp
mov
sub
cwtl
xor
push
cli
mov
mov
insb
inc
xchg
pop
sbb
jb
in
mov
adc
jmp
mov
sbb
gs
hlt
out
adc
scas
or
xor
lahf
pop
jne
andl
mov
cs
xchg
icebp
insb
and
jne
pop
mov
xchg
sub
jg
movsl
inc
js
stos
mov
sbb
jae
sub
push
push
mov
push
mov
js
or
stos
leave
sbb
inc
and
xchg
fs
sub
mov
out
stos
jae
pop
jb
jbe
push
push
call
aam
mov
ret
pop
test
popa
mov
fldt
int
or
pop
sti
outsb
int3
and
dec
gs
push
in
mov
lods
add
xor
hlt
push
aam
scas
or
push
sub
adc
inc
insl
data16
pop
jne
es
rorb
mov
andb
mov
stc
cmp
pop
jg
lcall
sub
jno
push
adc
sbb
in
mov
adc
scas
sub
jno
out
test
ficoml
fildll
and
aas
push
aaa
push
and
addb
xor
shl
gs
mov
movsb
popf
sti
inc
mov
out
jbe
insb
stos
push
arpl
inc
imul
xchg
dec
test
ljmp
adc
stos
xor
inc
cmc
adc
jo
shlb
pop
mov
test
adc
sub
mov
shrl
mov
idivl
cwtl
adc
arpl
and
fwait
mov
hlt
cmpsl
inc
nop
cld
loop
es
insl
scas
jo
ja
int3
test
jmp
aaa
in
scas
sub
lock
mov
or
jbe
cmp
enter
xorb
rcrl
inc
adcl
repz
mov
mov
or
push
movsl
mov
pop
dec
inc
dec
fs
or
mov
mov
xorl
xchg
int
mov
or
mov
jle
pop
pop
xor
dec
rorl
jo
adc
faddp
test
ljmp
andl
fs
std
pushf
xchg
and
mov
mov
out
shl
mov
daa
mov
out
mov
cmp
and
shl
add
movsb
cli
pusha
cmp
xor
aaa
lahf
stos
mov
daa
push
and
dec
xchg
push
repz
inc
enter
sub
in
ficomps
or
xor
or
scas
icebp
inc
or
add
jle
nop
pop
mov
bound
adc
and
sub
jae
sub
dec
mov
xor
scas
dec
fnstenv
adc
sub
pop
int3
mov
test
jp
pop
cltd
fadd
js
adc
loop
cltd
cmc
mov
call
lcall
in
push
push
sbb
dec
pop
push
nop
pop
rcrb
inc
ret
pop
push
xor
mov
mov
push
sarb
mov
sbb
and
xchg
ret
or
popf
fiaddl
or
mov
cmp
and
pop
mov
adc
xchg
iretw
mov
pushf
enter
rcl
loop
cmp
jle
xorb
hlt
pushf
xor
out
in
xchg
pusha
test
inc
movsl
push
push
mov
gs
adc
shlb
cmc
add
adc
inc
movsl
push
push
mov
gs
adc
shlb
jne
in
adc
inc
and
mov
andb
loopne
lock
and
xor
add
adc
inc
movsl
push
push
mov
gs
push
push
das
inc
sbb
or
cmp
sub
cmp
pop
sub
mov
jmp
or
sub
pop
pop
dec
dec
jp
push
nop
cltd
mov
fcmovu
lret
leave
cli
stc
ljmp
cmp
sub
push
dec
bound
imul
mov
jmp
jbe
inc
lds
mov
dec
jp
mov
jb
jae
inc
scas
fidivs
adc
jb
and
adc
popf
mov
mov
jmp
sbb
adc
jae
call
ret
jb
cwtl
pop
jne
ljmp
cli
push
push
sub
or
cmp
pop
xchg
nop
push
scas
stos
loop
mov
mov
enter
cmc
arpl
pop
aam
pop
mov
xchg
fdivl
scas
inc
stos
lcall
adc
jne
cmpsl
pop
out
rorl
inc
in
gs
inc
mov
fidivrl
ficompl
or
cmp
cmp
dec
jp
jae
sbbl
test
cli
stc
repz
imul
ds
or
pop
sbb
cmc
mov
enter
mov
scas
mov
jnp
mov
pop
or
cmp
jle
cmp
addr16
push
das
imul
mov
cmpsb
mov
jge
dec
sub
xor
push
lcall
test
cli
stc
ljmp
cmp
sub
dec
dec
jp
push
lcall
test
cli
stc
ljmp
lret
inc
clc
jne
pop
lds
xor
mov
stc
dec
inc
loop
out
idivw
testl
lcall
add
pop
cmp
shl
jo
or
push
sbb
sti
rcrl
inc
cmp
jne
repz
cwtl
stos
hlt
sbb
lds
inc
loopne
test
sub
insl
outsb
fidivl
lret
sub
pop
xchg
push
call
jl
pop
mov
jle
lret
jno
idiv
xlat
das
aad
stos
hlt
pop
icebp
enter
xlat
dec
testl
mov
sub
xchg
sbb
outsb
sarb
mov
call
xor
fnstcw
movsb
jne
test
fimuls
pop
shll
adc
mov
jae
adc
inc
pslld
xchg
inc
inc
xchg
test
or
ss
push
outsb
jmp
movsb
push
rcrl
fildll
jo
pop
xorb
rcl
push
mov
dec
lcall
push
jno
addr16
std
aad
cmp
mov
scas
gs
dec
jo
in
out
mov
sti
jnp
fsub
stos
sti
into
das
mov
mov
ja
inc
mov
mov
and
pop
fstpl
and
ret
sti
mov
mov
xor
jbe
push
jns
mov
clc
mov
shlb
sub
push
stc
xor
test
cmp
sub
adc
cmp
aad
mov
or
jmp
pop
je
mov
fwait
jmp
scas
ljmp
push
les
inc
mov
call
pop
cmp
and
inc
mov
idivl
addl
push
and
hlt
sahf
stos
dec
jbe
xor
mov
mov
sub
mov
fidivrs
jmp
shl
and
xchg
or
cwtl
lods
daa
nop
movsl
push
xor
es
je
push
insb
mov
push
mov
roll
push
lods
in
jecxz
inc
pop
dec
data16
aam
shll
outsl
out
cmpsl
into
dec
aam
pop
xor
adc
pop
mov
push
push
movsb
popa
les
push
cmp
mov
into
ljmp
mov
xchg
push
jmp
movsl
lret
inc
mov
mov
push
out
xchg
lret
int
aaa
subb
xor
andl
popa
test
insb
frstor
sbb
in
xchg
mov
inc
or
adc
out
push
addr16
outsb
test
push
pop
push
jnp
je
and
push
push
andb
scas
pop
dec
mov
or
mov
mov
je
sahf
xchg
ds
ljmp
sbb
rcrl
sub
test
mov
sub
pop
jnp
dec
dec
andl
loope
push
sbb
out
cmp
jmp
push
clc
sti
aad
and
lahf
out
in
xchg
mov
cmpsb
push
add
and
cwtl
xchg
or
mov
clc
in
cmp
xchg
push
lcall
popa
mov
mov
and
in
dec
sub
dec
add
inc
cmpsb
jl
push
sub
inc
popf
dec
mov
add
stos
mov
xor
dec
and
add
mov
stos
xchg
pushf
inc
add
mov
out
hlt
lods
shr
push
jb
lea
pusha
mov
int3
vcvttss2si
push
push
out
push
push
divl
xor
sbb
in
or
sbb
out
cmp
mov
addr16
clc
loope
fidivl
ret
sbb
ljmp
cli
dec
fiadds
jmp
dec
mov
scas
cmp
xchg
outsb
push
outsb
leave
mov
or
or
js
sub
pop
adc
jmp
xor
hlt
lea
mov
push
xchg
push
jne
add
pop
hlt
outsl
aaa
jg
loopne
and
out
hlt
cld
mov
inc
add
ret
iret
loope
xor
ret
lret
gs
outsl
jno
les
ret
cmp
arpl
or
xchg
insl
xor
lods
hlt
mov
pop
arpl
das
cmc
jp
and
out
lret
pop
out
cltd
and
popf
fisttpll
mov
ret
and
pop
bound
xor
dec
xchg
mov
aas
mov
or
pop
and
xor
pushf
jno
and
ja
or
popa
roll
test
ds
cmp
sub
stos
add
jg
sub
pop
jp
mov
jae
mov
or
cwtl
shll
scas
arpl
pop
xchg
inc
cld
jb
popa
outsb
mov
mov
dec
sbb
xchg
pop
or
push
jp
js
push
push
fwait
ret
and
out
jp
rcll
fidivs
sbbl
sub
cld
loopne
pop
adc
add
mov
mov
out
fldpi
arpl
cmp
sbb
dec
mov
pop
lcall
pop
mov
mov
jmp
fucomi
ss
into
sbb
ljmp
inc
aas
and
pop
jg
and
dec
push
in
push
movsb
push
stos
push
lods
dec
xchg
mov
dec
lcall
push
frstor
xor
imul
iret
out
pop
dec
or
decb
imul
adc
vdivps
pop
cmpsl
pop
in
popf
iret
dec
inc
jno
sahf
dec
mov
movsb
push
je
cld
sub
movsb
mov
mov
fsub
fdivrp
arpl
cli
cmc
call
dec
sub
inc
loop
pop
mov
popa
mov
xchg
sbb
cld
inc
mov
mov
mov
fyl2x
xor
in
or
test
pop
cmpsb
xor
mov
mov
or
mov
hlt
mov
adc
mov
mov
and
jno
xchg
mov
mov
popf
aam
mov
inc
mov
aaa
jge
ret
mov
inc
xchg
arpl
std
js
or
dec
sbb
xchg
add
and
insl
jmp
es
push
xor
repz
pusha
lahf
mov
mov
jle
adc
scas
leave
xchg
fcomp
sub
xor
outsb
pop
adc
mov
mov
xor
popf
sbb
out
inc
mov
fcomps
push
sub
into
jl
inc
fimuls
mov
push
dec
movsb
cmpsb
rcll
loopne
and
fdivrl
sbb
mov
push
push
js
nop
mov
xchg
gs
dec
add
adc
pop
hlt
popf
mov
shrb
ljmp
adc
and
add
rolb
inc
cmpsb
push
xchg
jo
out
dec
test
add
jecxz
in
in
mov
or
je
mov
xchg
inc
push
scas
or
bnd
and
mov
emms
je
jae
push
stos
fsubs
test
movsl
lock
pshufw
enter
mov
es
pop
test
imulb
out
jl
test
daa
fisubrs
cmpsl
popa
push
sbb
xchg
andl
sbb
into
or
push
mov
mov
into
pushf
mov
pop
push
jno
imul
and
mov
popf
addr16
xchg
addr16
mov
xchg
aad
or
js
scas
gs
aas
cwtl
cltd
or
nop
sbb
repz
cmp
jne
aas
popf
aam
sub
out
mov
cli
in
fldcw
sahf
add
mov
ret
jg
inc
jo
jecxz
jmp
std
jp
lret
test
push
lcall
lea
ds
mov
xchg
aam
sub
pop
test
push
push
cmp
jae
in
out
jp
jge
mov
cltd
aas
cwtl
sbb
jp
push
imul
mov
movsl
rcl
jle
adc
lods
int
xor
icebp
movsb
xor
jmp
popf
lods
cwtl
dec
xchg
mov
lret
nop
cmc
push
cltd
fcoms
insl
xchg
jmp
sub
repz
insl
pop
bound
shl
lds
xor
dec
add
pushf
icebp
adc
icebp
adc
mov
repz
repz
orl
xor
jmp
cld
loopne
xor
add
lret
popf
shll
mov
mov
jbe
test
dec
imulb
xor
loopne
jno
cmpsl
pop
push
test
and
inc
loopne
pop
push
mov
in
xor
fld
sti
push
pop
in
sbb
out
jmp
jge
mov
dec
es
dec
jnp
lcall
ds
mov
cmpsb
jg
pop
mov
or
xor
cs
leave
dec
push
adc
repnz
arpl
add
clc
test
scas
fisubs
mov
mov
int
data16
loop
or
mov
dec
aaa
into
mov
aad
sub
mov
xlat
addr16
sahf
fnstcw
cmpsb
icebp
addr16
cmpsl
mov
fbstp
lcall
roll
cmc
aas
cwtl
into
xchg
or
push
in
xchg
fsts
adc
push
test
xor
cli
add
fimuls
push
test
jae
sbb
pop
jge
shlb
or
out
mov
je
mov
mov
or
push
mov
repnz
sub
sbb
push
mov
notl
repz
fs
mov
adc
aaa
jmp
insl
xchg
jae
jg
divb
mov
inc
jmp
xchg
mov
enter
jb
push
pushf
mov
push
inc
inc
mov
loope
push
fstps
and
lods
pop
orl
sub
xchg
inc
jbe
addr16
add
call
pop
sbb
cmp
jae
shll
jnp
in
push
mov
fcmovb
out
jp
mov
mov
jb
fcoms
ret
jbe
imul
push
scas
stos
sub
lods
xlat
xchg
mov
decl
jne
roll
mov
paddw
cmp
jbe
mov
or
inc
mov
sbb
dec
pop
cmc
into
ljmp
idiv
popa
gs
mov
stc
mov
mov
pop
push
adc
aad
mov
xor
lret
divb
or
jne
insl
rcl
inc
sbb
loope
sub
loop
pop
js
out
inc
test
xchg
push
dec
jo
xor
cmpsl
lods
mov
andb
in
scas
aad
push
scas
xor
je
add
aam
repnz
cltd
orl
rcrl
inc
dec
iret
xchg
lock
and
imul
stos
dec
out
cmp
pop
lret
add
es
ljmp
pop
icebp
fisttpll
mov
push
pop
sbb
cltd
sub
mov
in
imul
aad
hlt
pop
pop
loop
hlt
daa
xor
out
hlt
inc
xor
sbb
sahf
ror
ret
stos
aam
rcl
jle
adc
dec
xor
lcall
sbb
fistl
popf
mov
bound
mov
negl
pop
imul
pop
mov
add
out
or
xor
mov
rclb
pushf
shrl
bound
pop
lods
jl
xchg
dec
in
or
cli
add
dec
fisubl
lds
xor
mov
loopne
or
addl
cmp
shlb
decl
sbb
jae
xchg
leave
ss
fsubr
es
test
test
mov
adc
repnz
mov
jnp
fcomps
nop
cmpsb
push
enter
xor
sbb
jae
std
es
jbe
cmpsl
shlb
mov
jmp
stos
cld
jb
inc
jne
push
icebp
lret
out
mov
sbb
shl
ja
jecxz
clc
daa
sbb
outsb
inc
push
fmuls
dec
aaa
stc
lock
daa
dec
std
cmpsb
jno
mov
pop
mov
cmp
sarl
add
imul
pop
bound
fdivrl
xchg
or
mov
push
in
inc
imulb
aaa
fsts
aas
pop
incl
add
jl
xor
mov
movsb
push
ss
addr16
inc
ret
lahf
inc
dec
lret
jo
mov
in
sub
out
sub
cmp
shlb
mov
popa
xchg
add
dec
cmp
lea
rorl
mov
int3
or
push
inc
xor
fmuls
mulb
aam
sub
fisubrs
mov
lahf
push
xor
xor
insb
ds
int3
add
std
jae
push
int3
out
scas
adc
popf
hlt
and
setp
pop
fidivrs
xchg
test
in
aad
popf
sarl
scas
movsb
mov
cmpsb
xor
xorb
jmp
idivb
outsb
pop
xor
aad
arpl
vcvtpd2psy
cld
xor
xchg
pop
pop
lret
mov
sub
std
repz
or
sub
popa
xchg
rorb
dec
sahf
or
gs
cltd
push
dec
add
scas
in
sub
scas
sub
add
js
adc
jecxz
sbb
aaa
pop
pop
push
imul
xlat
pusha
inc
nop
popf
fiaddl
sub
adc
ret
std
mov
lret
divb
jl
push
jbe
push
and
cmp
xchg
icebp
rorb
insb
dec
mov
push
adc
xchg
or
push
aad
lods
mov
dec
pop
shll
mov
cmp
cmpsl
mov
xchg
mov
stos
lcall
stc
jmp
pop
sub
lods
repnz
ret
ljmp
add
push
daa
jmp
stos
xchg
fdivp
fdivs
xchg
iret
push
sub
xor
stc
push
bound
movsb
xor
icebp
ljmp
pop
mov
std
lods
jge,pn
push
xor
lcall
sbb
cmpsl
loop,pt
mov
popf
pop
outsl
movsb
or
clc
add
sbb
jp
mov
xchg
jp
xchg
cmpsl
cmp
push
inc
imul
out
sub
sbb
inc
out
inc
cmp
sub
pop
nop
shlb
mov
xchg
push
push
cmp
or
dec
in
insb
sbb
movsl
lret
adc
dec
inc
ljmp
push
jge
fmull
mov
pushf
mov
sbb
mov
mov
dec
shrl
mov
adc
and
cmp
adc
icebp
mov
mov
jno
sbb
push
leave
or
mov
in
cmc
js
add
push
sub
loope
shlb
mov
inc
and
mov
popf
xor
xlat
iret
or
iret
xchg
and
arpl
ja
cmpsb
ljmp
cmc
lock
lcall
repz
stos
pop
add
xchg
and
jmp
or
xchg
inc
sahf
and
les
sbb
ja
jno
arpl
loop
mov
cmp
jb
leave
jb
lahf
out
mov
cmpl
adc
daa
pop
gs
or
and
xchg
pop
mov
pop
dec
movsl
xchg
mov
in
mov
sti
push
adc
xchg
call
add
jmp
addr16
xor
xor
adc
or
add
jecxz
inc
cmp
cwtl
push
lods
cld
lods
ffree
aaa
test
dec
and
cmpsl
push
stos
push
jmp
dec
inc
dec
mov
mov
push
cmp
adcb
sahf
clc
pop
insb
sti
pop
rorb
cwtl
ljmp
and
or
jp
outsb
add
add
stos
jle
add
cmp
fists
and
adc
dec
push
pop
jge
into
add
jae
aam
or
add
int3
lods
in
aaa
dec
les
out
lea
xor
int
sub
or
mov
mov
jne
pop
jg
movsb
rcr
loop
mov
inc
push
ljmp
jne
aas
push
jmp
push
xchg
pop
mov
mov
pusha
les
andl
mov
cmp
xchg
inc
divb
xorl
sysret
je
pop
adc
jge
cmpsl
test
fsubrs
pop
push
inc
dec
cwtl
repz
enter
pop
outsb
cmp
scas
pop
ds
jge
jl
cltd
sbb
lcall
sbb
mov
mov
insl
pop
js
into
pop
adc
adc
repnz
call
popa
sub
data16
stos
and
aas
hlt
pop
inc
aad
inc
roll
cmp
cmp
rolb
stos
int
jmp
push
outsl
lahf
or
xchg
pop
sbb
and
xchg
mov
jecxz
mov
mov
pop
sub
incb
out
fucomi
fdivs
mov
js
cmp
clc
call
adc
fistl
cmp
mov
mov
fs
mov
xlat
dec
adc
movsb
cs
or
and
inc
xor
fs
or
jg
popa
aas
in
dec
cmp
test
test
xor
out
xor
ret
aam
in
jmp
rorl
mov
cmp
stc
pop
add
fwait
xchg
mov
sbb
out
inc
sub
orl
cmp
dec
js
fsubr
xchg
out
arpl
mov
iret
pop
inc
sbb
pop
or
in
pop
dec
xor
or
push
mov
xchg
dec
in
adc
pop
aas
inc
popf
push
or
fildl
adc
mov
addb
aad
fiaddl
xchg
cmc
mov
mov
out
push
push
xchg
sbb
push
imul
lahf
rclb
and
fistpl
push
push
mov
loop
mov
mov
adcl
ja
pop
dec
jae
imul
pop
ds
fstpl
dec
inc
jle
jle
adc
ret
in
popf
cmpsl
xchg
mov
mov
mov
mov
dec
ret
push
lods
cmp
lock
or
repnz
pop
inc
xchg
lahf
gs
mov
pop
imul
shl
out
mull
repnz
pop
push
clc
push
jb
addr16
sbb
fcmovu
add
mov
leave
adc
jne
inc
mov
pop
int3
jl
test
push
das
outsl
in
leave
mov
cltd
pop
adcl
insl
rcrb
inc
cmp
mov
cmp
pop
mov
mov
or
push
daa
ret
mov
leave
es
je
in
dec
mov
or
cld
stos
dec
push
lods
in
xchg
enter
add
fs
cmp
cmp
push
mov
dec
jb
xor
dec
pop
lds
aam
jge
fldenv
xor
in
adcl
mov
cmp
jecxz
and
sub
mov
lahf
ljmp
pop
in
pop
add
mov
mov
les
add
pop
xchg
leave
mov
sub
mov
sahf
mov
jmp
int
shlb
rorb
adc
sub
mov
out
push
or
out
sub
jns
pop
fdivrs
sbb
cmp
dec
fisubl
in
mov
cmp
jb
repz
or
inc
in
add
push
xorl
and
in
test
cmpsb
sbb
enter
fdivrl
jge
hlt
and
jbe
mov
xchg
cld
out
mov
ffree
lods
ret
rorl
dec
je
jne
imul
xor
dec
jae
mov
sub
pop
jo
xor
push
xorl
imul
icebp
push
mov
loop
clc
pop
mov
in
and
sbb
push
jg
cmp
popf
jbe
jbe
cs
aas
xor
imul
loop
in
push
std
frstor
insl
int3
push
pop
je
adc
push
push
enter
in
xchg
adc
mov
stos
pop
jb
lods
add
out
mov
or
pop
and
jg
pusha
ds
and
aad
pop
out
stos
aaa
lahf
pop
test
jo
lock
push
pushf
add
mov
sub
iret
test
outsb
mov
dec
push
sbb
xchg
enter
mov
pop
cld
incl
inc
jle
and
cwtl
lods
test
jb
and
xchg
cwtl
pop
dec
ljmp
jne
pop
pop
jae
sbb
jo
mov
push
sub
in
lea
jo
out
adcl
jns
push
pushf
in
int3
pop
int3
notl
cmp
ds
les
std
xor
jmp
stc
insb
imul
jne
aam
xchg
call
testl
mov
mov
stc
lods
mov
sti
and
and
mov
dec
push
mov
pop
je
mov
mov
rorl
fidivs
call
jno
push
es
mov
lcall
rcl
pop
xor
add
xor
int3
stc
lahf
mov
mov
int3
lods
adc
mov
or
push
or
into
cvtdq2ps
fsubp
test
sub
xchg
push
sbbl
and
add
xor
pop
cwtl
mov
leave
fs
xchg
ljmp
icebp
xor
rcrb
fisttpll
es
dec
pop
ds
xlat
dec
and
cmc
pusha
adc
int
es
mov
mov
outsl
pop
mulb
test
rol
mov
sub
dec
dec
jp
push
lcall
test
cli
stc
ljmp
cmp
sub
dec
dec
jp
push
lcall
test
cli
stc
ljmp
cmp
sub
dec
dec
jp
push
lcall
test
cli
stc
fucomi
sbb
or
sub
cli
stc
ljmp
mov
inc
ss
inc
scas
push
sahf
mov
insl
pushf
jp
add
into
aad
in
cmc
jle
outsb
adc
pop
mov
inc
scas
push
repnz
add
into
xor
jg
push
cmc
test
pop
out
mov
inc
pop
push
or
push
jne
add
into
xor
jbe
imul
rcrb
xlat
adc
sahf
or
and
ret
add
in
jns
sbb
jo
inc
outsb
push
pop
lods
dec
ja
adc
push
add
mov
xchg
push
and
enter
fwait
in
js
lock
cmc
mov
inc
sbb
cwtl
sbb
mov
fldcw
sub
and
sub
pop
jb
bound
jnp
bound
add
adc
aas
push
cs
sub
dec
cmp
mov
mov
add
add
inc
mov
cmp
xor
cmpsb
pop
inc
cmp
xor
add
cwtl
and
aad
mov
aad
cmc
cli
hlt
pause
cmp
mov
inc
clc
push
sahf
mov
add
push
aad
in
cmc
test
movsl
dec
sub
push
ljmp
adc
mov
imul
cmpsl
sub
repz
lret
push
in
gs
pop
xchg
dec
mov
push
fwait
xor
push
test
pop
out
aaa
rorb
rorb
push
decl
out
adc
lds
aad
in
cmc
jle
outsb
xchg
pop
movsl
dec
mov
inc
scas
push
sahf
mov
add
into
xor
push
in
cmc
jle
outsb
xchg
pop
movsl
dec
mov
inc
or
xlat
dec
xor
leave
push
test
push
daa
fisttpll
jecxz
mov
jbe
jp
lock
xchg
adc
sub
add
hlt
in
ds
push
push
and
mov
mov
mov
jne
pop
popf
rolb
mov
fs
loope
mov
adc
icebp
rcl
and
pop
sbb
out
dec
call
and
add
dec
adc
xor
push
xor
int3
mov
loope
sahf
in
in
imul
push
inc
mov
xchg
mov
int
pop
pop
and
xchg
mov
xor
push
cld
pop
pop
sbb
in
out
out
xchg
inc
add
pop
sbb
and
cmc
in
in
inc
repz
cs
in
lret
jmp
outsb
loope
dec
daa
pop
xchg
dec
icebp
sub
cld
movsb
pop
jbe
adc
lods
inc
cmp
cwtl
adc
iret
cmovge
jmp
xchg
js
sbb
jp
xor
pop
out
mov
hlt
aam
and
and
push
add
stos
pop
mov
jns
jge
lods
mov
pop
sbb
xchg
mov
fwait
in
add
stc
aam
fsubr
fsubrl
push
icebp
push
inc
xlat
pop
test
ret
arpl
push
and
mov
pop
out
jb
sbbb
xchg
jae
mov
dec
jo
dec
sub
sbb
shrl
cld
enter
mov
cmp
int
pop
std
mov
pop
std
mov
sub
mov
ss
mov
lds
lcall
inc
adc
add
rep
gs
mov
push
nop
mov
add
inc
inc
insb
fwait
jle
cli
imul
push
mov
stc
add
jo
mov
cwtl
pop
add
mov
jge
or
pop
push
mov
sbb
out
sub
mov
stos
xor
sub
and
dec
test
jg
and
cltd
cmpsb
inc
stos
rclb
js
in
test
test
push
pop
stos
mov
fucomp
fists
mov
mov
ret
or
push
mov
mov
pop
push
sbb
subb
rcr
fwait
das
jl
adc
insb
jns
push
cmp
insl
lea
push
cmpsb
pop
adc
sub
sub
out
sbb
inc
gs
xlat
xlat
lods
mov
cmpsb
jl
ret
adc
jmp
xorb
call
add
jae
pusha
lret
inc
jg
mov
mov
mov
dec
fcomps
inc
pop
xchg
ret
imul
scas
fwait
push
aas
push
es
rcrl
pop
adc
xlat
insl
jmp
xchg
negl
dec
imulb
jae
stos
jmp
mov
lahf
lahf
inc
cltd
and
in
int3
clc
cmpsb
std
push
jno
push
mov
call
sbb
xor
pop
cmp
mov
add
and
lods
iret
cmc
dec
aam
popf
push
rcl
dec
lret
sbb
repnz
aas
out
call
jne
inc
inc
add
jo
xor
pop
gs
xchg
fstpt
pop
fistps
imul
cli
test
mov
cmp
out
pop
into
pushl
mov
ds
adc
xchg
push
iret
push
cmpsb
rorl
mov
test
rep
and
in
into
sbb
movsl
ret
shl
mov
jge,pn
sub
cmc
jmp
cmpsb
push
imul
test
mov
jecxz
testl
imul
xchg
push
or
xor
fxch
loopne
dec
jmp
xchg
cmpsl
mov
shr
adc
scas
mov
out
idivl
sub
rcrl
sbb
movsb
xor
into
xchg
adc
pop
sub
add
int3
out
xchg
pop
mov
sbb
mov
ss
out
xor
jae
lea
pop
cwtl
or
jne
mov
pop
add
push
rolb
sub
outsb
fisubrs
por
out
lods
aaa
cmpsb
ds
aas
in
cmp
ljmp
or
cs
or
shrl
ret
push
loop
fdivrp
xchg
fs
sbb
xchg
ficoml
dec
cld
and
mov
sub
sti
xor
pop
in
xchg
and
stos
lcall
cmp
mov
mov
mov
jg
and
fcmovnbe
and
jb
xor
data16
and
cmpsb
mov
jl
popa
lds
mov
lods
inc
pop
das
stos
xor
sbb
add
rolb
or
xor
add
fcoml
iret
adc
mov
ds
sbb
bound
jmp
cmpsb
dec
inc
xchg
jmp
ss
xchg
mov
and
int3
adc
iret
xchg
jns
imul
jbe
cld
enter
shll
stos
rorb
add
into
inc
sahf
cli
popa
and
data16
sub
shll
xchg
pop
mov
mulb
add
test
mov
scas
js
je
and
orl
hlt
push
das
jbe
in
push
out
mov
sub
push
inc
push
into
jmp
xchg
test
inc
inc
gs
mov
xor
movsl
mov
add
outsb
idivb
cmp
or
adcb
cmp
movsb
mov
xchg
inc
sub
dec
inc
pop
out
mov
mov
jg
fistpl
js
out
and
push
lods
sbb
loop
pop
cli
jecxz
adc
xor
bound
test
add
jmp
aam
mov
stos
lea
movsb
push
inc
mov
lea
inc
test
jbe
insb
fwait
adc
enter
mov
dec
cmpsl
mov
jb
xor
and
mov
js
lret
push
jle
jl
out
and
jb
subl
loope
insl
push
push
xchg
hlt
mov
push
gs
adc
je
pop
cmp
mov
enter
push
imulb
push
and
gs
imul
mov
xchg
ss
mov
jbe
iret
sub
icebp
stos
ret
std
into
mov
xchg
add
jo
imul
cmp
mov
out
jecxz
fildl
sub
and
sbb
loop
scas
rclb
push
pop
dec
rcrl
fcomi
push
jg
sbb
aas
dec
fiadds
mov
mov
mov
int
sti
adc
cmp
fldenv
addr16
ret
inc
xchg
push
sub
cwtl
in
scas
call
out
lock
imul
ds
pushl
pop
or
stc
lcall
test
into
sub
add
push
mov
mov
aas
cltd
dec
adc
aaa
inc
mov
cmp
inc
leave
push
and
cmp
jo
ret
js
adc
enter
fnstsw
std
movsb
sbb
push
push
add
pop
mov
js
sti
arpl
jbe
out
out
es
rolb
adc
jnp
leave
rclb
mov
sbb
bound
icebp
inc
jmp
pop
rcll
mov
push
add
cwtl
mov
cmpps
cmc
pop
adcl
lret
icebp
mov
mov
adc
mov
or
lret
ret
xchg
mov
add
inc
xchg
les
lret
addr16
fdivr
mulb
loopne
lret
test
cmpsl
or
std
insb
xchg
mov
xchg
jg
lahf
jne
jnp
mov
js
popf
fsubs
imul
adc
in
es
in
jle
xchg
test
cmpsl
ret
cmp
mov
sti
push
sbb
rorb
jg
push
mov
sbbb
lods
fnsave
xchg
imul
cmp
push
bound
loopne
and
mov
mov
repnz
or
pushf
lea
and
insl
jle
ljmp
cmp
lods
xchg
sbb
jae
scas
xor
loope
mov
ja
cmp
mov
sub
inc
sbb
pop
ja
nop
fwait
les
jmp
dec
xchg
ss
lds
inc
inc
les
jne
pusha
lds
test
mov
pop
and
stos
daa
mov
or
push
jle
sbb
rolb
insl
notl
scas
cmp
test
xor
clc
aaa
lret
or
scas
lods
pop
xlat
pop
xchg
mov
mov
pop
mov
test
sbb
mov
js
pop
push
jle
lahf
xchg
adc
push
cmp
adc
jle
test
cmp
mov
enter
stc
lock
iret
mov
rcrl
jecxz
shrb
jb
hlt
cmp
into
aaa
mov
paddd
jb
dec
mov
or
jp
pop
dec
ret
cli
out
fimuls
xorb
mul
mov
dec
push
leave
das
jge
addr16
mov
popf
dec
sbb
mov
ljmp
int3
gs
repz
and
push
test
movsl
mov
jmp
stc
jno
pushf
adc
or
xor
cmpsl
cmp
repz
dec
shrl
mov
cltd
rcrl
insb
add
mov
test
adc
pop
push
mov
mov
sbb
push
mov
pushf
fisubs
test
cmp
xchg
xor
pop
gs
movb
sahf
sub
pop
addr16
xor
mov
dec
outsb
and
jns
and
loopne
lods
dec
push
dec
or
roll
test
mov
pop
sub
popa
mov
inc
xchg
xchg
mov
jbe
lahf
cld
cwtl
insl
push
out
ret
pop
add
dec
lock
ret
push
lods
adc
fs
cmp
fsubp
xor
movsl
jae
sub
in
inc
std
fcompl
test
cmp
xor
mull
mov
dec
dec
mov
mov
shrl
clc
jb
adc
shll
movsb
pushf
rcrl
xchg
mov
sub
aas
fistl
in
jne
push
ret
fwait
pushf
insb
ss
scas
bound
jp
xchg
push
xchg
clc
loope
or
and
xor
mov
lcall
and
pop
xor
adc
loope
adc
or
jle
lcall
sti
rol
sbb
mov
shr
and
jo
fmuls
outsl
mov
mov
cmpsl
sti
je
pop
xchg
add
xor
xor
ficomps
jmp
out
leave
push
cs
or
xor
xor
test
daa
and
in
xchg
insb
inc
icebp
dec
pusha
dec
adc
add
shrl
push
test
inc
mov
dec
cmpb
fsts
mov
sub
or
aas
rorl
rolb
or
pslld
xchg
lea
rep
push
stc
adc
xor
pop
or
jecxz
xchg
lcall
je
cmp
test
and
and
daa
jp
xor
inc
fisubl
pop
xchg
and
fidivrs
pop
sarb
std
sbb
rorl
sub
or
sbb
jg
jo
imul
pusha
pop
xchg
outsl
ja
je
pop
cmpb
in
out
popw
pushf
mov
leave
xchg
pop
push
jb
repnz
cmp
cmp
dec
rcll
jg
ret
sbb
ljmp
repz
test
cmpsl
push
call
es
cmpsb
mov
cs
test
cmpsl
bound
jecxz
mov
push
adc
cmpsb
mov
iret
stc
and
adc
jo
jno
or
fisttps
pop
xor
les
aad
cmpsl
lock
shrl
sbb
test
xor
xchg
lahf
outsl
adc
and
stos
subl
push
push
adc
push
sub
pop
sbb
push
or
cwtl
and
mov
sub
cmp
inc
ljmp
int3
cwtl
enter
fiadds
fbstp
popa
fsts
pop
dec
inc
lcall
adc
idivb
xor
add
aaa
repnz
ss
test
lock
sub
pop
inc
or
pop
shlb
loope
sbb
scas
jo
xchg
jmp
and
jg
pushf
adc
add
rcrl
and
loope
adc
jmp
jns
or
jecxz
stos
addb
iret
mov
inc
jp
js
imul
push
sub
and
and
jp
test
jae
addr16
mov
vmovhps
and
popf
pop
imul
mov
lock
or
mov
mov
push
push
xchg
sti
movsb
lea
add
sbb
je
les
add
jge
pop
dec
and
sbb
push
les
push
lds
dec
sub
pcmpeqw
cmp
mov
sub
enter
out
sbb
or
mov
outsl
adc
sahf
adc
popa
into
aaa
jno
aas
lahf
cmp
jecxz
xor
jnp
icebp
icebp
sbbb
js
and
addr16
mov
cmp
outsl
dec
test
inc
jge
mov
imul
js
cs
loope
xchg
cmovnp
lock
fiadds
ret
xchg
mov
mov
mov
sbb
push
cwtl
aam
mov
lret
les
mov
daa
imull
cmpsb
popf
jns
andb
inc
out
xor
inc
cmp
mov
adc
aaa
push
jno
cmpsb
dec
mov
rcl
rorb
mov
jg
inc
lret
data16
xorl
push
hlt
test
lds
or
add
pop
jmp
insl
mov
ret
adc
jle
jno
and
psubd
add
enter
sub
call
push
sbb
pop
cltd
push
mov
cwtl
faddl
mov
xchg
mov
mov
ljmp
or
or
in
cmp
pop
call
or
fcomps
push
pop
test
sbbl
nop
xchg
out
in
pextrw
sub
push
pushw
fdivrs
in
inc
inc
aam
test
jno
mov
into
xchg
pop
mull
movsl
xor
test
mov
out
lock
push
mov
push
xchg
add
and
dec
rol
shrb
push
fwait
and
jl
dec
and
subb
enter
mov
inc
addr16
inc
js
movsl
imul
mov
sar
loopne
std
inc
bound
je
mov
sbb
test
jmp
lock
jbe
jg
int
js
stc
in
ret
in
in
das
mov
mov
leave
pop
in
and
fwait
clc
bound
outsb
insb
out
and
repz
pop
imul
imul
out
fstps
sbb
xchg
scas
std
aam
adc
sarb
mov
repnz
push
adc
icebp
inc
testb
aaa
rcrb
dec
dec
cld
sub
lret
insl
mov
and
nop
in
lea
stos
lret
xor
leave
mov
lods
adc
out
mov
jnp
cld
cmp
out
adc
rolb
lods
std
mov
mov
jp
adc
xchg
mov
push
cmp
enter
push
imul
out
cmp
imul
icebp
es
scas
orl
mov
pop
pop
jmp
icebp
inc
lods
in
push
mov
dec
adc
lahf
repz
addr16
mov
inc
sub
test
xchg
and
rcll
sti
test
adc
adc
cmp
outsl
shl
xchg
cmpb
pop
iret
xor
pop
inc
lahf
cwtl
popf
test
mov
fsubs
pop
fcompl
test
cltd
mov
data16
rcrl
jno
inc
lea
fwait
cmpsl
jno
jp
pop
pop
xchg
pop
mov
inc
or
scas
pusha
sti
mov
and
sbb
xchg
mov
cmp
pop
jp
iret
sbb
jnp
mov
mov
jg
std
out
sbb
aam
jbe
add
pop
sbb
mov
fstpl
mov
lock
fimull
scas
out
cwtl
sbb
repz
push
inc
imul
fwait
or
inc
jb
orb
sbb
mov
je
cmc
adc
dec
lods
lds
mov
push
xchg
das
addl
jne
lcall
sahf
ljmp
mov
push
or
jns
and
cmp
xlat
mov
popa
jns
or
mov
pushl
lea
or
jo
push
cld
pop
nop
aad
mov
lods
cmp
adc
xor
mov
adc
cld
in
pop
push
push
xchg
in
mov
aad
xor
rol
add
pop
push
jg
mov
mov
cmp
mov
inc
rcrb
lds
clc
cld
sbb
mov
jg
clc
push
dec
sbb
stos
or
cmp
adc
sbb
mov
dec
inc
mov
sar
in
test
adc
xor
lods
add
dec
xor
cmpsb
sub
adc
into
es
movntq
es
subb
push
lods
ja
lret
pop
out
repz
out
sub
pop
push
and
push
xchg
cmp
jno
mov
cmpsl
xor
sbb
dec
fcmovne
pop
jo
add
out
aam
pop
pop
adc
jp
mov
mov
mov
mov
adc
pop
pop
stc
jo
mov
cmp
rclb
insb
pushf
push
into
dec
xchg
scas
cmp
idivb
fidivrl
sub
dec
and
xchg
dec
popa
div
testb
and
sbb
mov
mov
mov
cmpsl
pushf
js
nop
xchg
mulb
subb
fwait
cs
mov
rcrl
ds
mov
mov
loopne
or
loopne
call
cmp
aaa
in
push
cmp
mov
aas
leave
sbb
fwait
shrb
xchg
aad
test
rolb
cmp
and
jmp
popa
fsubrl
pop
jo
fistpll
push
cmp
cmp
add
xor
sbb
mov
int
repz
mov
imul
add
test
aam
test
imul
xchg
into
push
xor
std
sub
add
add
out
repz
mov
mov
jecxz
mov
mov
leave
loop
and
add
xchg
xor
cmpsb
xlat
outsb
inc
out
sahf
in
pop
and
nop
ljmp
stos
fidivs
cmp
js
add
pop
mov
ss
adc
mov
sbb
xor
insb
scas
roll
aaa
and
fildl
jmp
scas
xchg
fs
push
dec
or
mov
add
fmuls
lock
aas
jae
sbb
adcb
adc
pushl
sbb
add
bound
call
rorb
inc
rorb
mov
shrl
cltd
icebp
pop
hlt
in
das
ret
dec
xchg
adc
dec
mov
std
or
pop
andl
and
dec
out
inc
cmc
pushf
push
icebp
dec
pop
dec
or
imulb
in
pop
and
adc
push
loopne
adc
jge
push
mov
out
push
fisttpl
into
fsubrl
cmp
or
mov
mov
fldt
jp
dec
xrelease
loope
xchg
das
xchg
push
and
inc
mov
push
movsb
or
jae
and
out
inc
and
out
iret
push
mov
lret
sarb
push
pop
mov
push
idivl
popf
sarb
clc
mov
enter
push
scas
or
mov
popf
jae
std
jmp
mov
cmp
daa
out
leave
pusha
or
xor
outsb
fidivrl
push
sub
jne
cmp
and
push
xlat
hlt
xchg
roll
fdivp
movsl
call
pop
and
repz
negl
fisubrl
mov
sub
lock
shl
js
repnz
push
stos
out
cmc
push
push
and
mov
faddp
mov
inc
push
mov
adc
les
xchg
unpcklps
cltd
xchg
sub
jne
inc
inc
mov
je
dec
jbe
push
dec
loop
sti
adc
inc
push
cmpsl
jmp
call
and
mov
pop
add
call
arpl
add
pop
insl
sbb
jae
add
or
lea
fildl
or
dec
in
xlat
js
adc
ror
push
fisubl
mov
ja
nop
loop
cld
and
test
add
xorb
cwtl
div
in
loop
cwtl
and
add
repz
frstor
mov
xchg
mov
mov
or
test
out
aad
out
adc
repnz
adc
inc
ret
shl
test
adc
cmp
stc
push
sahf
stc
sti
inc
in
push
cld
es
outsb
out
and
fldenv
jne
add
into
xor
push
in
cmc
jle
outsb
xchg
pop
movsl
dec
mov
inc
scas
push
sahf
mov
add
into
xor
push
in
cmc
jle
outsb
xchg
pop
movsl
dec
mov
inc
sahf
aad
in
jne
add
push
xor
out
in
cmc
jle
jle
pop
movsl
cmpsb
mov
inc
repnz
les
jne
add
dec
xor
mov
push
orb
out
mov
orl
push
mov
or
cld
push
in
fsubrl
int3
pop
mov
outsb
mov
pop
scas
dec
fidivrs
mov
push
cld
push
int3
fsubl
int3
pop
sarl
jle
outsb
mov
hlt
mov
movl
out
adc
and
mov
and
cmp
sub
sbb
add
aam
push
push
mov
jbe
push
inc
dec
and
divl
movb
lock
cmp
jnp
fldenv
mov
push
mov
xchg
add
jb
dec
inc
call
adc
mov
icebp
imul
pushf
mov
jle
outsb
pushf
lahf
mov
mov
and
inc
add
out
repz
add
mov
mov
je
imul
leave
and
imul
sbb
int3
cmpsb
out
dec
lods
orl
push
jbe
jnp
scas
or
cld
addl
sbb
or
xchg
pushf
mov
cmp
sub
testl
nop
push
push
fs
outsb
loop
cs
fistpl
fisubl
dec
test
mov
out
imul
test
movsl
pop
shrl
fmuls
out
sub
mov
into
pop
jb
pusha
pop
cltd
imul
in
and
out
sub
sub
or
das
xchg
pop
into
sub
sbb
or
cld
push
in
fsubrl
int3
pop
mov
outsb
mov
pop
scas
dec
fidivrs
sub
sbb
or
cld
push
in
fsubrl
int3
pop
mov
outsb
mov
frstor
movsl
lods
paddb
inc
aas
cmp
test
mov
sbb
mov
lahf
mov
pop
lret
fcomip
jnp
pop
cmp
mov
mov
sahf
filds
call
imul
xchg
add
int3
xchg
test
pop
daa
pusha
jmp
cmp
inc
jg
push
pop
out
jg
pop
mov
stos
stc
int3
lret
push
out
jbe
sbb
jecxz
push
das
out
dec
js
call
push
mov
push
xor
insb
xlat
or
js
mov
mov
rcl
cmp
ds
add
hlt
std
clc
enter
imul
scas
push
jnp
push
test
fs
push
xchg
stos
and
mov
cmp
push
movsl
test
dec
sbb
mov
lahf
xchg
in
sub
je
or
jnp
test
movsb
aas
arpl
xchg
jns
add
pop
jbe
jne
dec
cmpsb
dec
inc
inc
daa
sub
stos
rcrb
and
adc
out
mov
adc
inc
dec
cltd
adc
mov
test
pushf
pop
ja
push
cli
push
out
mov
in
fcompl
or
add
das
xchg
gs
rcrl
xor
push
cmp
fsubs
daa
push
cmp
xchg
mov
xchg
repz
addl
sbb
sub
push
mov
insl
xor
jmp
add
mov
test
fbld
faddl
fwait
xchg
mov
sbb
sub
pop
jg
cmp
shll
pop
lret
fs
jbe
pop
adc
add
adc
shll
in
cmp
enter
sbbl
push
pop
pop
dec
das
jmp
ljmp
outsl
dec
pop
fwait
lea
lods
dec
adc
cmp
insl
nop
push
add
pop
in
and
mov
mov
das
in
fstps
out
out
dec
sbb
jg
dec
mov
subb
std
sub
fmuls
insl
adc
inc
sti
hlt
popf
cmc
hlt
add
decb
imul
push
jl
loop
popf
mov
cmpsl
add
daa
jo
orl
xchg
hlt
or
cmp
jo
addr16
jge
mov
movl
lods
roll
in
loope
sahf
pop
push
dec
stc
pop
cmpsb
pop
dec
jle
mov
lods
lret
rcrb
stos
insb
push
fcmovne
dec
shr
sub
out
ljmp
jb
ret
sbb
mov
out
add
and
jl
and
add
xor
or
dec
and
rcrb
pop
movsl
jne
int3
xor
call
jnp
and
adc
and
pushf
sbb
pop
ss
mov
je
loopne
add
dec
push
data16
imul
in
imul
inc
and
insl
in
mov
in
xor
xchg
fimull
xchg
add
shll
out
in
in
insl
pop
push
or
inc
inc
outsb
or
fs
xor
jp
mov
ss
cmp
dec
roll
and
mov
mov
mov
fst
mov
arpl
cmpsb
jmp
lcall
sub
or
or
push
xor
dec
in
enter
cmp
adc
hlt
add
pop
std
sbb
mov
test
push
mov
dec
mov
mov
sub
cwtl
mov
pop
or
out
mov
add
xchg
es
cmp
insb
int3
push
dec
xor
jo
pop
int
xchg
into
sbb
sub
pop
add
push
cwtl
mov
push
jge
outsl
xor
xchg
clc
scas
inc
ret
pop
jl
mov
pop
and
cli
inc
mov
out
test
mov
dec
arpl
cmp
repz
inc
dec
mov
push
ss
data16
mov
sub
fdivl
pop
clc
sub
loop
out
scas
adc
xchg
cmp
ss
push
test
xlat
jns
loope
xchg
fbld
push
cmpb
ficoml
dec
daa
jmp
scas
push
xlat
scas
test
fmul
iret
mov
aad
dec
lret
xlat
jns
mov
sbb
bound
pop
imul
test
rcrb
inc
roll
push
xor
rcrl
stos
fxch
pop
push
cmc
jo
addb
fwait
mov
insl
dec
or
dec
add
cmp
xchg
dec
test
movsl
and
vunpckhps
pushl
movsl
or
dec
xlat
lods
mov
inc
into
gs
and
and
mov
cvtdq2ps
orl
repnz
jg
ss
in
and
stos
inc
stos
adc
mov
sbb
testl
aam
jnp
inc
jge
dec
or
mov
add
scas
cwtl
jg,pt
xchg
cmp
ret
push
pushf
repz
es
and
stos
test
and
fisttps
push
jecxz
or
std
addr16
out
mov
in
add
fists
xor
outsb
pop
push
stc
test
into
or
jecxz
test
inc
popa
jmp
popa
lret
sbb
or
fnop
gs
or
jb
add
xor
ss
xchg
jecxz
js
ret
test
in
xchg
test
out
or
jp
and
mov
inc
adc
lods
filds
adc
jl
outsl
mov
push
int
lds
test
adc
imull
daa
pushf
push
and
mov
mov
loopne
in
int3
pop
pusha
push
jo
addr16
mov
jns
jnp
inc
addb
adc
pop
adc
inc
sub
jmp
stc
jecxz
mov
test
stc
sub
sub
or
or
loop
cld
mov
cmp
clc
lock
pop
sub
sarl
lret
dec
fldt
ret
pop
leave
and
or
je
xchg
add
dec
in
pop
mov
mov
sar
sbb
dec
add
mov
jo
fnstcw
addl
int3
push
add
sub
hlt
jb
jbe
aad
repnz
mov
out
ds
fsubs
daa
sub
enter
mov
mov
pop
pop
fs
cmp
jb
pop
insl
cld
pop
mov
insb
mov
adc
pop
mov
iret
cld
enter
divb
jmp
pop
mov
cmp
test
out
jno
fdivrs
mov
pop
subw
push
inc
xlat
bound
sbb
push
mov
arpl
mov
out
pop
jl
adc
jle
mov
lahf
lahf
jae
test
jne
inc
stos
ds
adc
cltd
cmp
jne
mov
mov
fbld
dec
mov
sbb
mov
push
sbbl
addl
dec
stc
and
sub
jbe
cmp
cmc
sub
enter
mov
in
add
dec
fdivl
mov
jle
out
aam
dec
insb
mov
lret
inc
ret
pop
cmp
and
ret
dec
imul
mov
sub
mov
push
mov
sub
dec
sub
cmc
adc
pop
sbb
push
inc
and
push
clc
andb
push
rclb
in
xchg
lods
pop
sub
mov
and
xchg
push
add
sbb
das
movsl
jns
pop
fchs
dec
xor
pop
lds
stc
push
push
xor
out
aaa
popf
insl
insb
inc
push
test
outsl
sahf
adc
leave
cmpsl
mov
call
xchg
sbb
das
mov
xlat
je
pop
fnsave
adc
xlat
push
loop
and
es
mov
orb
icebp
dec
and
push
and
and
jb
xor
push
inc
sbb
sub
pop
loop
and
dec
outsl
mov
jle
cmp
jno
xchg
xor
shrl
out
jo
mov
popf
test
mov
xchg
cmp
jnp
pop
pop
jae
stc
push
push
popf
daa
fs
jle
or
in
out
std
pop
stc
mov
xlat
mov
jecxz
scas
nop
xchg
stc
and
ds
inc
cmp
adc
std
push
stos
pop
data16
test
daa
push
adc
and
jb
xchg
and
bound
cmp
roll
adc
mov
inc
out
xchg
cs
jmp
test
es
mov
mov
add
push
mov
and
ja
out
arpl
mov
out
lret
subl
mov
aaa
push
ds
xchg
inc
sub
fwait
mov
outsl
push
cmp
dec
sahf
sbb
inc
frstor
or
mov
cmc
ret
rcll
mov
adc
mov
loop
fbstp
in
dec
pop
jbe
or
lock
enter
adcb
mov
call
mov
push
outsb
lds
push
or
mov
nop
lea
pop
lret
dec
pop
xor
push
pop
stos
ljmp
in
nop
push
enter
xor
jo
jp
jp
ja
pop
ror
cmpsl
push
dec
sbb
pop
mov
or
sbb
arpl
shll
out
adc
mov
xchg
movb
jo
mov
dec
daa
cmp
sub
cmpsl
aam
imul
mov
ljmp
mov
cmp
shll
out
pop
jnp
cli
inc
add
mov
cli
dec
pop
int
cmp
imul
lret
addr16
xor
adc
or
pop
mov
sbb
push
sbb
repz
cmp
dec
fmuls
add
lods
jne
push
dec
aad
negb
xchg
sahf
scas
xchg
cli
pop
inc
xchg
jmp
mov
jp
add
rolb
xchg
dec
mov
jge
push
xchg
adc
sub
aas
aam
cmp
bound
lahf
inc
insl
cmp
pop
movsb
ja
inc
pop
bound
add
gs
cltd
sbb
cwtl
sub
jb
lock
pop
jo
lds
or
jg
and
lcall
adc
mov
add
aad
cli
and
stc
jae
ja
ds
sbb
pop
add
loop
xor
inc
loope
jne
pop
addr16
jmp
aam
push
pushf
ds
lock
inc
xchg
inc
jmp
bt
arpl
dec
das
mov
push
enter
fists
or
or
and
mov
insl
mov
mov
dec
repz
inc
roll
pop
or
jne
out
jne
adc
fldl2e
jne
cld
push
mov
sbbb
jle
aaa
rcll
ja
cli
mov
mov
and
fists
push
dec
aam
out
rol
xor
sub
pop
mov
aas
pop
movb
lcall
mov
push
mov
cltd
fidivrl
dec
add
pusha
xchg
outsb
sar
pushf
push
adc
into
xchg
push
mov
xchg
xchg
push
add
fldl
inc
or
lods
out
sub
sbb
cmp
push
cwtl
inc
jecxz
cmp
xchg
or
cmp
sbb
icebp
jbe
icebp
mov
mov
mov
es
mov
in
mov
fsubrs
xchg
lret
dec
cs
sub
int3
call
xchg
or
andl
xchg
scas
sub
adc
fnstsw
mov
rolb
fidivs
and
daa
enter
leave
repz
je
dec
push
push
les
mov
or
push
or
aad
imul
lret
pop
jl
out
jmp
vmovlps
shll
in
jae
int
dec
jae
cmp
xchg
mov
inc
dec
push
fsubr
repnz
fcomps
sarb
test
push
mov
fistpl
std
nop
xor
push
sbb
jl
clc
daa
popf
leave
test
jmp
cmp
cmpsl
movl
mov
and
sbb
add
mov
or
mov
repz
daa
xor
jns
enter
pop
sub
jo
pusha
out
clc
add
lret
call
sbb
fistps
lea
cli
add
jle
jge
rclb
out
mov
xlat
add
aam
push
jo
jbe
in
push
dec
mov
fistpl
pushf
jne
shlb
add
pusha
xchg
or
out
sub
sbb
xchg
cmp
cwtl
ret
and
lods
cmc
ss
je
sarl
xchg
loopne
cmc
cmp
bound
adc
adc
stos
imul
and
pushf
dec
pop
push
ret
test
adc
cwtl
cltd
lcall
movsl
jp
repnz
in
mov
leave
repnz
pop
mov
mov
pop
lahf
jo
scas
cli
das
pop
fisubl
scas
xchg
cmp
or
movsb
fstl
dec
mov
adc
mov
mov
xchg
stc
cld
add
idivl
xchg
into
ja
push
mov
add
data16
cld
adc
das
testl
add
mov
out
mov
jae
sub
lea
rclb
mov
ret
inc
sti
clc
push
stc
xor
and
fs
jo
jp
popf
xchg
add
jle
pop
and
mov
push
out
ret
jecxz
loop
fs
adc
cmp
daa
stos
movsb
dec
nop
sub
sti
lock
inc
seto
sti
push
pop
mov
push
decl
cmp
xchg
jl
push
loopne
jg
pop
insb
imul
call
sbb
cwtl
stc
test
sub
lds
clc
repz
or
push
mov
xchg
mov
push
dec
inc
xchg
push
lret
mov
inc
or
mov
mov
jg
insb
adc
sub
mov
xor
and
jmp
and
fiadds
jg
inc
cmc
dec
sbb
lret
fisubrs
or
jo
dec
and
mov
bound
and
ret
daa
pop
push
fs
movsb
fcomip
arpl
into
mov
addr16
sbb
mov
xor
xchg
cli
sub
jnp
jne
mov
in
sub
jmp
ret
loop
cmp
or
push
lret
fmull
out
mov
add
into
dec
dec
add
inc
cmc
call
sarb
dec
add
or
inc
add
subb
add
lock
test
dec
cmc
pop
hlt
aaa
jecxz
negb
aaa
cld
fwait
mov
mov
cmc
xor
scas
mov
or
push
pop
jbe
and
jo
lret
dec
in
sbb
outsl
lret
cmp
dec
push
sub
and
fnstcw
and
xor
cmpsl
xchg
ss
out
pop
and
notb
jnp
jno
mov
sub
xchg
dec
leave
fidivs
add
dec
ret
aaa
sub
xchg
sbb
pop
jle
sbb
jmp
push
or
test
mov
inc
push
movsb
ret
xchg
jg
js
or
jo
add
push
arpl
pop
fwait
pop
dec
inc
mov
cmp
sbb
dec
mov
jmp
inc
xchg
mov
mov
push
mov
dec
xchg
enter
adc
ffreep
sbb
in
cmp
xchg
or
js
les
sete
insb
out
ficompl
ja
clc
cwtl
cmpl
test
data16
js
outsl
divl
sbb
test
cmp
xor
push
xchg
fs
fs
inc
dec
fisttps
outsb
clc
push
sbb
mov
adc
sbb
enter
arpl
xchg
sub
leave
lcall
pop
pushf
cmp
cmp
and
sahf
add
mov
mov
adc
mov
push
add
xchg
mov
jmp
out
outsl
jl
decl
stos
ret
mov
xlat
xlat
repz
stc
repnz
std
lock
sbbl
std
pop
ds
aam
push
mov
mov
jp
mov
push
sbb
out
ret
xor
push
repz
cs
jnp
cmp
aaa
sbb
xchg
cmpsb
sub
stos
ss
xorb
sub
bound
add
loopne
jg
mov
push
jno
push
fwait
das
dec
outsb
lret
xor
jne
sbb
adc
sahf
lods
cmp
mov
sbb
jbe
mov
loopne
mov
in
movsb
sbb
cwtl
movsl
xor
sbbb
sbb
adc
mov
fsubrp
stos
xor
push
push
push
addr16
push
or
mov
push
sbb
decl
pop
push
adc
dec
and
jmp
mov
fwait
pop
into
cmp
adc
sahf
and
push
sub
pop
jecxz
cmp
repnz
xchg
rol
push
ret
mov
lods
mov
popa
addl
push
inc
rol
sbb
out
les
inc
add
mov
xchg
ret
imul
xor
dec
clc
lahf
sbb
popa
mov
sbb
mov
in
xchg
mov
inc
adc
int3
push
xorl
gs
test
mov
es
leave
hlt
divps
cmp
fwait
addr16
mov
jecxz
adc
or
xchg
inc
jnp
shlb
fildl
loopne
inc
fidivrs
lods
mov
jmp
cmp
xchg
inc
mov
push
cmp
arpl
or
aad
mov
loopne
or
test
pop
push
fstpt
pop
outsl
pop
add
and
push
fbstp
inc
pop
xor
mov
out
mov
pushf
push
aaa
loop
jle
mov
pop
mov
sbb
dec
movsl
jp
ja
int3
inc
test
mov
mov
add
pop
ja
or
xor
fildl
jge
push
mov
mov
gs
sahf
push
insb
push
leave
dec
frstor
mov
pop
stc
into
push
repz
push
aam
dec
sub
jl
mov
stos
push
pusha
or
shll
sub
or
loope
enter
rcl
mov
lds
sbb
lcall
push
imul
outsl
repz
jge
xorb
inc
mov
adc
and
dec
add
adcb
pop
lock
jnp
test
push
jo
pop
push
jl
lods
mov
movsl
pop
push
jae
loop
mov
jl
pop
out
and
out
hlt
and
out
jbe
lods
xchg
inc
xor
pushf
jae
dec
sub
sti
out
subb
xchg
out
jbe
sub
inc
ss
cmpsl
jbe
mov
fadds
lea
rolb
mov
push
std
sub
and
xor
sub
addr16
dec
jmp
scas
or
sub
mov
cli
push
cmp
adc
test
scas
jecxz
int
mov
lahf
icebp
and
jae
sub
gs
stc
repz
ret
scas
pop
or
dec
mov
sbb
cmp
pop
mov
test
mov
pop
dec
xor
cmp
repnz
jb
and
inc
push
adc
out
adc
xchg
dec
push
jo
and
imulb
sbb
rorl
fwait
ja
adc
and
pop
sti
iret
movsl
add
inc
push
xor
mov
inc
adc
xchg
ja,pt
out
imul
ljmp
lcall
or
inc
xor
call
popa
mov
inc
mov
or
arpl
mov
jle
ds
fsts
sub
xchg
jge
and
pusha
pushl
es
xor
mov
lcall
insb
push
clc
jle
in
fsubrs
inc
xchg
pop
in
cmc
popa
inc
cld
je
cs
xor
mov
jnp
call
sub
jb
sbb
xchg
fdivrs
pop
adc
add
pop
sbb
in
imul
lods
lock
movsl
add
shll
push
pop
hlt
jnp
addr16
jbe
ljmp
pop
push
shr
aas
fidivs
jg
inc
addr16
leave
aas
cmp
outsl
sbb
adc
faddl
jmp
gs
jecxz
testl
jmp
hlt
dec
xchg
jle
imull
sub
inc
pop
xchg
or
ljmp
roll
cmp
cltd
mov
lock
shl
js
jg
ds
ss
repz
shl
inc
jae
fucomip
js
cli
push
jae
dec
bound
mov
mov
inc
xor
jne
mov
leave
mov
lock
in
adc
in
into
test
sub
out
inc
xor
ljmp
xor
xor
fisubrs
fwait
pop
sbb
push
clc
dec
xchg
icebp
mov
btr
ret
and
je
jle
jl
pop
movsl
popa
iret
xchg
dec
adc
and
ret
jo
pop
pop
insb
imul
push
stos
add
sahf
bound
lcall
shll
mov
add
inc
in
cmp
out
addr16
je
vcvtsi2sdl
or
pop
jns
sahf
cmp
aad
sub
imul
out
dec
mov
addr16
jb
scas
outsl
push
add
pop
leave
jbe
sbb
mov
jno
lahf
repnz
mov
adc
in
push
mov
add
rcl
or
cmp
jae
push
lds
or
movsl
adc
into
jl
jp
push
iret
and
mov
shll
ud2
push
ret
fcomps
jmp
mov
xor
sub
sbb
or
cld
push
in
fsubrl
int3
pop
mov
outsb
mov
pop
scas
dec
fidivrs
sub
sbb
or
cld
push
in
fsubrl
int3
pop
mov
outsb
mov
and
dec
fidivrs
test
sbb
or
and
in
fsubrl
int3
pop
mov
insb
mov
pop
scas
dec
fdivrl
sub
pushf
outsb
or
add
inc
xchg
fsubrl
mov
andl
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
bound
inc
shlb
or
and
jb
iret
push
cmc
inc
in
xchg
and
push
loop
shll
gs
mov
inc
jb
lds
hlt
inc
in
lock
repnz
loop
shlb
gs
mov
and
xor
dec
fnstenv
shrb
sbbb
xor
cmp
mov
repz
popa
cmp
adc
inc
dec
mov
push
outsl
push
cmpsl
pop
sub
add
imull
or
iret
lock
test
ficomps
or
jecxz
frstor
sub
sbb
mul
jb
xor
add
mov
mov
xor
pusha
xor
cmp
movsb
cmp
stos
pusha
rolb
or
orl
andb
or
popa
dec
xchg
xchg
inc
or
push
pop
lret
inc
insl
push
pop
push
push
inc
lods
aad
shll
iret
sbb
and
adc
loop
shlb
gs
mov
and
push
cmc
inc
in
xchg
and
xchg
cmp
xor
and
push
jno
push
out
sbb
es
inc
loope
ret
jbe
lods
cmp
push
xlat
push
movb
cli
or
mov
mov
xchg
daa
mov
lock
adc
sbb
push
mov
loop
repz
mov
and
push
cmc
inc
in
xchg
and
repnz
loop
shlb
gs
mov
and
push
cmc
inc
in
xchg
and
repnz
out
pop
sbb
xchg
bound
lds
fcmovnbe
xchg
xor
divb
or
cmpsb
mov
adc
mov
stos
or
aam
lret
push
xchg
jno
cltd
cmpps
sbb
andb
mov
mov
inc
addr16
outsb
fwait
pusha
adc
int
stc
subl
rcll
mov
push
popa
call
mov
push
lea
sbb
push
fisubrl
hlt
push
pop
sbb
repz
out
faddp
ret
daa
std
std
mov
scas
dec
icebp
or
adc
fs
ss
lahf
mov
popa
std
insl
add
mov
ljmp
mov
xor
mov
fwait
cli
aas
push
pushf
sbb
or
test
pushf
sub
jp
into
cmp
outsb
std
sub
xchg
inc
xchg
int3
imul
fnstcw
stc
movsb
cmpsl
sahf
aad
mov
mov
xchg
ljmp
pop
les
mov
fdivl
stos
cmp
ret
imul
lahf
inc
add
fsubs
or
adc
or
xor
lea
jp
icebp
movsb
jle
mov
mov
int3
or
pop
repnz
shr
pop
std
and
xchg
cld
mulb
ficoml
sub
sub
mov
mov
ss
xchg
std
adcb
sarb
push
cwtl
and
ja
movsb
push
xchg
and
xorl
push
not
jnp
jecxz
aas
jno
lret
push
xchg
sbb
cmp
pop
lods
mov
ljmp
mov
mov
mov
add
pop
cli
out
push
xchg
fistpll
mulb
adcl
imul
imul
push
ret
jmp
pop
icebp
dec
xlat
dec
inc
inc
jmp
ret
pop
push
lret
and
mov
nop
add
popa
stc
mov
xlat
gs
or
lods
sbb
mov
push
push
rcll
adc
mov
popl
push
rcrb
outsl
aam
hlt
out
push
fsubr
inc
fisttps
mov
pop
sub
ja
add
fmull
push
pop
mov
clc
lock
sbb
popf
jecxz
xor
dec
xchg
insl
aam
sbb
jb
lret
pop
lods
mov
xchg
pop
jmp
or
sub
inc
sbb
inc
stos
popa
mov
xor
pfcmpge
inc
jns
sub
in
dec
pop
xchg
movsl
lods
pop
cmp
add
cmp
faddl
shlb
dec
sbb
mov
mov
stos
test
mov
pop
out
out
mov
mov
pusha
jmp
push
mov
sbb
idiv
inc
pop
lcall
pop
bswap
inc
push
xor
or
cmp
int
xchg
inc
jo
sub
xchg
and
push
and
es
into
andl
movq
and
adc
in
out
imul
insl
pop
cmc
aad
sbb
rolb
push
mov
add
scas
adc
popf
dec
and
cwtl
pop
mov
dec
dec
adc
fistpll
enter
xchg
inc
out
push
mov
jmp
and
dec
jl
jle
mov
pop
cltd
xchg
xlat
fcmovb
pop
xor
test
daa
jno
lret
mov
fwait
pop
jecxz
inc
cmpsl
mov
outsl
xchg
mov
cli
sarb
jae
push
inc
je
jns
jmp
xchg
ljmp
dec
fnstenv
aas
xchg
dec
xchg
fldenv
popa
sub
addb
xlat
test
stc
jmp
jle
lret
les
enter
aas
mov
dec
adc
xchg
fs
stos
sbb
sub
mov
adc
push
icebp
adc
std
mov
pop
ret
dec
dec
push
sbb
data16
clc
xchg
dec
clc
and
js
es
dec
xchg
pop
and
arpl
push
xor
pop
jne
mov
push
lds
mov
fucomp
mov
mov
sahf
xchg
sub
js
adc
cld
std
cmp
les
push
das
jbe
sub
xchg
adc
stos
nop
outsl
loopne
sub
lods
stos
daa
aad
mov
aaa
lret
out
mov
inc
andl
inc
mov
aam
xchg
or
sub
cs
shrb
fwait
stos
lods
jecxz
lret
movsb
cmp
or
in
pop
push
add
jnp
aas
mov
flds
pop
andl
and
mov
sub
ljmp
repz
xlat
mov
push
adc
add
adc
push
and
or
out
mov
in
adcl
push
add
or
stc
push
push
mov
rcrl
mov
sbb
xchg
mov
or
fidivrl
jnp
lods
stc
inc
cmp
pop
nop
push
xor
push
rorb
dec
imul
push
fcompl
and
cld
or
push
fldcw
lea
and
mov
pusha
test
js
push
test
adc
cmp
add
lahf
mov
jg
sbb
mov
pop
mov
push
iret
sub
and
inc
xor
sbb
sbb
sbb
test
xchg
push
jae
adc
adc
popa
loope
in
push
push
and
out
inc
data16
sti
push
icebp
cwtl
cwtl
pop
xchg
add
or
cld
pop
shrb
into
add
out
pop
mov
das
add
dec
shlb
popf
mov
adc
xlat
fsubr
xor
or
sub
pusha
jl
rcll
mov
add
lret
in
int
mov
xor
faddl
sahf
xor
ljmp
loopne
mov
pop
pop
stc
mov
jae
cmp
pop
pushf
or
shlb
mov
push
data16
rol
jle
mov
mov
je
mov
arpl
xchg
leave
add
into
lret
dec
mov
sahf
pop
mov
scas
jg
mov
inc
inc
adc
ss
mov
dec
cmpsl
add
data16
xchg
mov
dec
fistps
inc
ljmp
xchg
add
push
stc
mov
pop
jl
ds
push
dec
inc
jne
lahf
test
fbld
iret
push
mov
fsubrs
ret
ret
cwtl
and
ret
sti
or
xor
fidivrs
lods
push
sub
in
pop
je
push
testl
mov
mov
xchg
iret
sbb
dec
imul
sub
ret
ljmp
dec
and
lret
fdivr
lds
in
xor
loop
iret
filds
je
dec
or
rolb
in
rolb
cltd
and
jl
dec
mov
adc
sbb
hlt
loope
mov
mov
xor
mov
outsb
leave
icebp
outsb
adcl
and
xor
inc
push
mov
ret
ret
add
adc
imul
push
hlt
dec
mov
mov
iret
xor
mov
inc
lret
and
jle
fnstenv
movsl
ljmp
ret
push
dec
cmc
inc
mov
sbb
and
mov
and
adc
mov
shlb
loopne
fdivrl
in
or
xchg
sbb
adc
pushf
fmuls
pop
mov
sarl
jg
dec
mov
repnz
stc
pushf
mov
xor
in
jg
xchg
fldt
dec
pop
lahf
mov
lcall
adc
inc
cld
pop
addr16
or
mov
sti
add
fiadds
imul
inc
jae
decl
push
adc
mov
dec
repnz
lods
pop
sub
popf
ss
or
mov
fs
fcomps
out
xor
div
cmp
fildll
nop
sub
mov
pop
cmp
in
sub
and
lahf
push
into
test
mov
mov
lock
and
xor
pop
lret
mov
popl
sub
neg
lock
dec
dec
mov
or
cmp
and
lahf
in
jle
mov
aaa
mov
jle
out
dec
or
mov
sub
ret
jnp
mov
sti
cmpl
cmpsb
mov
mov
sub
lahf
add
rolb
jmp
shll
pop
xchg
leave
aaa
sbb
adc
je
aad
mov
or
imul
cmpsb
jg
push
aad
lods
mov
and
inc
jo
pop
jl
add
jbe
dec
into
mov
and
dec
sbb
adc
mov
and
inc
subl
dec
xchg
add
rclb
jp
or
jne
test
add
push
mov
mov
lret
rcrb
fstps
sbb
and
cmpsl
mov
adc
sub
test
fmuls
sbb
adc
rcl
sbb
sti
mov
cmc
imul
vpcmpgtd
inc
jmp
mov
repz
xor
push
inc
jge
dec
mov
dec
mov
xlat
notb
mov
cmpl
pop
das
out
pop
mov
mov
ljmp
xchg
sub
add
ret
stos
dec
push
pop
mov
pushf
pop
iret
cli
add
out
stos
cmp
pop
nop
xlat
loope
ror
push
in
jecxz
mov
mov
add
sub
lahf
shlb
loopne
mov
xor
jge
mov
cmp
loop
jns
xchg
push
jnp
jmp
mov
sahf
lret
out
lods
ficoml
loop
push
pusha
bound
movsb
fdivl
mov
adc
roll
sub
mov
push
mov
push
inc
jno
inc
and
dec
pop
jmp
mov
sbb
xchg
repz
jg
or
cwtl
vpmulhw
stos
jbe
xchg
jne
push
add
adc
aam
mov
andl
cs
sub
or
lea
into
dec
cltd
xchg
jne
mov
int
cmpsb
or
cmpsl
xchg
lds
js
or
and
pop
cmp
stc
btc
fcomps
adc
xor
cmpsl
adc
sbb
les
lods
lret
or
xor
xor
imul
adc
std
outsl
jecxz
daa
push
lret
faddl
mov
setge
xchg
repnz
idiv
pop
movsl
jb
push
cld
popa
sub
rclb
cwtl
out
lea
packuswb
mov
iret
mov
dec
push
jb
jle
out
push
popf
mov
arpl
stc
jnp
sub
addr16
jno
push
mov
aad
inc
cmpsb
dec
fcoml
pop
jnp
jmp
repnz
mov
and
ret
lcall
mov
test
fbstp
repz
rorb
jge
out
mov
push
xor
stos
aaa
sbb
adc
mov
out
and
out
xchg
dec
repnz
and
mov
leave
adc
pop
add
loope
loopne
idivb
and
inc
int3
jp
rcr
enter
add
inc
inc
jecxz
cld
mov
mov
xor
push
mov
inc
jp
in
or
xorl
jle
es
and
outsl
xor
jge
lret
push
out
and
and
xor
dec
mov
add
cld
mov
fisubl
mov
loopne
fstps
cld
cli
jo
cltd
sahf
pop
out
lcall
mov
jbe
xor
repz
int
pop
push
lcall
and
test
xor
je
pop
mov
add
mov
out
xchg
mov
jl
mov
test
sub
push
lret
icebp
imul
movsl
xor
mov
inc
sbb
or
mov
cltd
push
adc
dec
jp
inc
adc
in
jno
ret
cmc
aas
and
push
in
loopne
cmpsb
movsb
inc
mov
or
jge
cmpsb
fdivs
xor
fcoml
or
loope
fsubrl
dec
or
aam
fwait
inc
cmpl
and
in
cmpsl
fwait
icebp
push
fidivl
jle,pt
inc
sbbb
mov
xchg
adcb
es
repz
pushf
sub
roll
xorl
mov
jmp
push
push
lahf
insl
je
inc
sbb
xchg
addr16
cltd
push
adc
test
ljmp
inc
pop
push
pop
dec
push
and
jno
lods
enter
mov
sub
mov
daa
xchg
rcrl
out
icebp
aad
cmp
inc
in
sub
xchg
sti
int3
adc
repz
dec
fmulp
aas
jo
jnp
adc
mov
test
fcomp
stc
dec
dec
adc
mov
pop
dec
std
pop
sahf
push
cmp
lds
int3
mov
xlat
out
lcall
mov
xor
push
adc
add
pop
push
mov
aas
push
push
mov
fistpll
inc
in
hlt
test
pushf
xchg
add
adc
push
sub
in
lahf
subl
adc
adc
fcomps
jnp
sub
test
les
enter
pop
inc
jb
sub
loope
cltd
mov
ret
mul
arpl
ds
outsb
sahf
pop
xchg
ljmp
xor
xor
sub
and
not
popa
add
mov
inc
mov
fcomip
bound
push
shrb
decb
xor
adc
cmp
inc
loopne
ds
sbb
mov
push
xchg
xchg
movsb
cld
insb
push
mov
xor
lods
or
pop
dec
cwtl
inc
mov
enter
mov
push
addr16
pop
fldt
std
loope
int3
sbb
xor
inc
fildl
test
jnp
jmp
pop
mov
dec
jp
mov
dec
sub
jnp
sti
aad
xor
ret
in
lea
out
jns
or
in
shlb
jb
jmp
lock
jne
fucom
mov
fs
mov
mov
inc
pop
cmp
das
and
jae
cltd
mov
jle
test
lcall
adc
sti
bound
fstpt
ret
daa
cmp
aas
cmp
sti
test
pushl
fiadds
xor
jmp
nop
stos
std
mov
enter
push
test
and
pop
pop
gs
xor
ss
testl
lahf
and
xor
pop
cmpsl
fistpl
fists
mov
adc
push
subl
cmc
add
ljmp
fisttps
loop
xor
lods
out
icebp
xchg
ljmp
pop
fildll
push
mov
xchg
dec
popf
xchg
cli
xor
outsb
iret
mov
call
iret
xchg
or
adcb
mov
gs
ficoml
pop
pop
je
pop
xor
jp
repz
push
pop
mov
into
cmp
enter
stc
aas
pop
xor
or
dec
mov
mov
mov
push
xchg
je
sbb
cs
xor
orb
sub
insb
pop
addb
int3
jo
rcll
pop
fisttpl
dec
popf
lret
push
push
cmp
frstor
cs
mov
add
bnd
das
sahf
daa
daa
insl
addr16
hlt
ja
pushf
movsl
lods
xchg
jns
fldenv
int
ja
jecxz
int3
nop
cmp
mov
dec
xlat
dec
push
stos
mov
push
mov
mov
fwait
dec
fldcw
xchg
xchg
subb
aam
lock
pop
rcrl
fmull
aaa
call
adc
jae
in
mov
repz
clc
ja
js
ficompl
dec
xor
mov
repz
xor
andl
or
jns
sub
push
in
enter
or
lea
out
fildll
gs
sub
sub
insb
jecxz
fwait
inc
fistpl
or
adc
aas
cmpsb
dec
sti
cltd
mov
movsl
jb
aam
xor
js
mov
inc
in
mov
add
shlb
mov
imul
jge
mov
sub
rcrl
aaa
hlt
cmp
mov
mov
fdivrl
imul
dec
jae
lcall
jecxz
clc
cmp
and
jl
cs
push
adc
xor
mov
cmp
cs
sar
leave
andl
xor
xor
fldt
jl
sbb
std
sti
push
popa
clc
fisttpll
icebp
and
mov
inc
out
cmpsb
int3
jb
adc
imul
sbb
and
or
pop
repz
clc
xor
push
lret
push
push
decl
sub
mov
sub
or
insb
mov
cmp
cmc
inc
data16
pop
push
mov
add
scas
outsb
test
lds
fistps
ja
ret
sti
scas
aas
mov
arpl
data16
cmp
xchg
cld
popf
cli
lock
sbb
inc
dec
mov
out
or
cltd
inc
add
xchg
jmp
cmp
fistpll
jnp
das
sbb
repnz
cld
jae
mov
jae
aas
lret
or
imul
lahf
xlat
cmp
sbb
or
mov
xor
mov
rolb
inc
ds
ror
jge
inc
pop
jmp
mov
inc
fdivrs
add
in
pusha
cmpsl
dec
inc
stos
push
lea
sbb
pop
dec
addr16
mov
cltd
orb
adc
popf
mov
add
cmp
pop
xchg
lea
sub
out
jg
popf
mov
mov
jne
in
dec
jb
sub
aad
sub
iret
pop
popa
sbbb
out
test
in
fistl
push
xor
cwtl
mov
ret
cmp
xchg
into
pop
sarl
xchg
jne
jmp
xchg
cmp
out
sbb
and
mov
xor
xchg
mov
push
and
pop
push
mov
pop
push
mov
mov
into
xlat
inc
lret
out
dec
sub
lods
mov
das
daa
cli
cmpsb
xchg
xor
or
xor
sub
pop
lods
adcl
jns
dec
pusha
sbb
mov
sub
aaa
stc
sbb
cmpsb
dec
xchg
lcall
cmp
jge
cs
push
push
mov
mov
sti
jle
push
pop
mov
pop
movsl
lds
test
aas
jg
xchg
pushf
in
nop
mov
mov
stc
scas
push
dec
imul
data16
hlt
mov
mov
popf
push
jae
xor
fcoms
test
fmull
icebp
jnp
ficoms
fadds
je
xchg
outsb
fsubr
gs
xor
adc
ja
mov
push
in
jl
jg
cmpsl
push
fisttps
lea
xor
daa
je
and
cmp
cmc
clc
in
jb
jmp
out
sub
adc
push
jne
daa
xor
xchg
cmp
js
inc
or
push
jbe
pop
testl
imulb
inc
mov
mov
testl
sbb
sbb
out
and
push
insb
sub
push
push
xor
idivl
push
pop
das
lods
pop
lret
lods
pop
jne
sbb
ds
inc
xchg
xchg
add
inc
sahf
outsl
jmp
xchg
scas
pusha
sbb
sbb
icebp
fsubrp
jmp
or
jns
testb
jae
sub
jne
xchg
imul
dec
iret
jne,pt
mov
mov
imul
xchg
cwtl
xchg
push
mov
sbb
lret
insl
fyl2xp1
xlat
jp
fnstenv
std
enter
int3
sub
add
pop
dec
xor
mov
xor
xor
or
add
mov
js
imul
mov
push
cmp
test
cmp
stc
dec
lock
int3
mov
mov
ret
ret
popf
add
repz
xor
fnstenv
ret
int3
mov
push
lret
test
mov
pop
mov
out
nop
fdivrs
cwtl
sbb
hlt
adc
lods
cmpsl
int3
xor
dec
xor
lahf
popa
cmp
push
fisubs
rcrb
cmpsl
lahf
xor
jle
in
aas
outsb
add
adc
fwait
jns
xchg
add
je
out
sub
pop
shll
push
push
clc
ss
inc
in
sbb
jl
mov
int3
sti
or
sbb
adc
jmp
mov
adc
fstps
inc
push
push
mov
sub
in
xchg
inc
stc
decl
mov
lods
outsl
mov
shlb
sbb
movsb
jne
dec
mov
jp
addr16
push
sub
push
sbb
jne
ljmp
inc
scas
leave
movsb
shlb
mov
inc
jp
mov
orl
iret
mov
aad
out
dec
jle
sbb
inc
sarl
xchg
mov
mov
xchg
fwait
xor
and
mov
dec
bound
lds
dec
flds
out
aas
mov
rolb
movsl
shlb
cmp
pop
mov
jns
in
inc
jne,pt
gs
mov
and
push
cmc
inc
in
xchg
and
repnz
loop
shlb
gs
mov
and
push
cmc
inc
in
xchg
and
repnz
loop
shlb
gs
mov
and
push
cmc
inc
in
xchg
and
repz
jecxz
shll
gs
mov
in
aad
outsl
clc
cmc
inc
xchg
inc
sbb
std
pop
aad
xor
mov
and
test
cmp
jns
sbb
js
push
leave
mov
cltd
enter
call
dec
push
jns
imul
push
sarb
loope
icebp
enter
aam
adc
pop
add
js
adc
cmovnp
inc
fsts
fisttps
cld
pop
jmp
sub
mov
cmpb
filds
lock
roll
push
pushf
cmpsb
cmc
mov
sub
xchg
fnstsw
push
stc
leave
in
enter
mov
adc
hlt
pop
pop
testl
mov
aaa
insb
fldl
std
mov
stc
int
sub
mov
xlat
in
and
xchg
cmp
push
push
cld
mov
movsl
pop
mov
subl
sbb
push
lods
sbb
add
sub
mov
lock
xchg
xchg
fnsave
dec
jmp
stos
into
mov
mov
cltd
mov
ljmp
jo
add
js
or
ljmp
mov
aad
int3
jns
dec
dec
push
jl
or
das
inc
cwtl
mov
mov
mov
test
fwait
and
inc
imul
sub
pop
ljmp
lods
popf
stos
enter
call
dec
cmp
imul
push
leave
mov
cltd
enter
call
dec
cmp
imul
push
ficoml
jle
jmp
adc
mov
sarb
int3
call
ss
jns
push
lock
pop
imul
and
jmp
sub
or
mov
xchg
cmp
clc
mov
out
jmp
mov
imul
sub
xchg
pop
add
push
jmp
cmp
or
scas
mov
outsl
fs
inc
outsl
sub
test
sti
mov
inc
xchg
insb
repz
iret
mov
inc
movsb
xor
phaddd
push
xchg
xlat
xor
shrb
push
adcl
shlb
mov
imul
xor
dec
fcompl
js
sub
popf
and
rclb
lds
cs
mov
push
out
int
inc
aad
es
fnstcw
add
int
xor
cli
pop
jmp
jae,pt
lret
lahf
jne
pop
daa
pop
jl
js
push
iret
xor
sbb
xchg
dec
lcall
leave
mov
xorl
iret
sbb
popf
ljmp
pop
dec
dec
decb
dec
pop
jbe
jne
mov
fldenv
cmp
adcl
add
cmp
testl
in
inc
jae
mov
test
xchg
xor
adc
out
test
jno
mov
out
aaa
mov
es
lds
xchg
les
jns
push
push
sbb
mov
nop
push
pushf
inc
cmp
test
sub
mov
call
dec
enter
xchg
and
andl
repz
and
dec
pop
outsb
sub
iret
pop
xchg
sbb
repnz
pop
scas
mov
sub
inc
clc
fildl
ja
pop
mov
mov
adc
mov
imul
sbbl
mov
loopne
sbb
lods
rcrl
out
mov
and
push
cwtl
cltd
test
int3
dec
aaa
push
nop
outsb
outsb
enter
test
inc
int3
jae
xor
sahf
and
mov
add
inc
stc
lods
push
aam
xchg
aad
fisubrl
iret
lock
jl
insb
pop
or
push
add
out
pop
jle
das
sbb
orl
divl
inc
push
sbb
out
js
inc
pop
add
adc
xchg
adc
in
in
notb
mov
sbb
jge
lds
and
scas
dec
cltd
cltd
mov
popa
mov
pop
into
and
scas
sub
bound
adc
ja
mov
les
and
add
jmp
mov
add
sub
mov
jae
addl
dec
sub
push
mov
pusha
push
pop
inc
imull
cld
dec
sti
rcll
and
int3
ret
int
mov
inc
popf
in
outsb
imul
inc
xchg
inc
lods
repz
mov
xchg
fwait
cmc
lcall
leave
and
pop
sub
and
rolb
fnsave
clc
mov
sub
jl
mov
push
and
dec
dec
in
xchg
rol
test
xor
addr16
roll
sahf
test
insl
jbe
dec
mov
or
push
mov
or
cmp
pop
push
out
shll
mov
mov
mov
ret
xor
mulb
emms
fmull
push
xor
dec
push
push
push
lea
jo
arpl
dec
rcrl
in
roll
mov
lea
add
movsl
aad
and
mov
lret
mov
lcall
jge
movsb
js
add
imul
mov
push
mov
les
insl
test
in
dec
sub
push
aas
sbb
imul
sti
repnz
aad
sbb
shr
or
popa
mov
es
jo
inc
adc
jbe
push
adc
fldcw
pop
scas
stc
push
pop
test
test
dec
imul
je
faddl
cmpsb
sahf
mov
adc
cltd
jle
push
xor
or
inc
sbb
jl
in
jmp
mov
inc
aam
adc
mov
je
and
andb
rclb
shlb
pop
or
imul
aad
xor
out
mov
fdivs
pop
pop
push
and
adc
xor
pushf
subb
leave
and
int3
pop
loope
adc
mov
aas
repz
loop
test
pop
rorl
lods
push
cs
jnp
sbb
insl
imul
jl
andb
adc
inc
mov
cli
int
test
decb
jbe
fbld
rcrb
je
out
cli
xor
xchg
lods
sbb
negl
repnz
push
jns
out
adc
sbb
dec
rcrl
hlt
enter
insl
sarb
jo
stos
repnz
mov
jmp
mov
les
pop
out
jnp
push
pop
loope
push
and
pop
xor
ss
pop
sahf
dec
mov
test
leave
fwait
jo
gs
xor
and
pop
sbb
lods
mov
mov
outsl
clc
sbb
es
sbbl
mov
cmp
ror
inc
std
push
loopne
xor
and
jno
es
pop
std
mov
mov
iret
nop
cmp
enter
imul
xor
fsubrs
sarl
mov
test
rcrb
push
jmp
lret
rcll
aas
mov
icebp
in
add
jge
cs
push
xchg
and
push
mov
jle
je
aad
lahf
loopne
stc
dec
fldl
jbe
shll
lods
loop
aad
into
rolb
imul
inc
xor
mov
icebp
popf
cmp
repnz
inc
into
ja
std
jge
in
arpl
lods
or
sti
aad
jno
xor
lods
xchg
adc
lcall
roll
adc
mov
into
fbstp
pop
lods
jo
xor
nop
stos
repnz
mov
lahf
cmp
loopne
sar
adc
xor
add
jns
arpl
rorb
cmp
jb
imul
xor
push
cmp
ja
pop
push
lock
dec
xor
out
loopne
adc
mov
mov
or
adcl
movl
pop
push
int
inc
insb
xchg
sub
cmpsl
jle
push
sub
out
loopne
mov
fwait
adc
hlt
mov
xchg
shll
sti
sbb
push
push
repnz
xchg
out
mov
arpl
add
pop
stos
mov
lods
popf
cs
mov
jle
add
xor
xchg
add
xor
add
xor
sub
mov
sbb
jmp
pop
jl
mov
pop
aam
mov
das
fsubrs
loop
imull
cs
lcall
out
sub
fmul
jmp
cwtl
inc
push
shrb
add
dec
test
call
fdivs
loop
pop
pop
call
es
stos
adc
icebp
push
mov
xchg
pop
imul
adc
xchg
adc
dec
addr16
jo
cmp
jecxz
stos
loopne
pop
mov
test
roll
add
mov
sbb
int
add
push
mov
scas
aaa
lock
lcall
insb
push
lea
or
xor
push
jmp
push
cmpsl
lods
cmc
sub
movsl
or
dec
or
sub
insl
pop
cmp
sub
lcall
test
out
ja
mov
lods
inc
push
sbbb
cltd
jl
xor
jb
insb
dec
lods
int3
lds
adc
aam
gs
divb
mov
cmpsb
sbb
fucomp
xor
xchg
push
into
je
lea
sbb
movb
lds
jbe
pop
nop
pop
cli
add
xchg
or
dec
es
cwtl
mov
cmp
lock
popa
lds
shrb
push
sti
fdivrp
cmp
jns
rclb
addr16
shr
push
or
jne
push
js
lods
stos
shrl
and
cmp
or
xchg
sub
dec
popa
insl
arpl
xchg
loopne
cmp
aam
std
mov
dec
cmc
jg
pop
lret
mul
mov
fwait
jbe
pop
repz
dec
mov
out
stos
add
stc
xor
sub
data16
ljmp
mov
loope
xchg
add
inc
xchg
push
dec
shlb
stos
loopne
cmp
jle
icebp
int
xchg
ret
push
or
mov
xor
jo
pusha
sbb
mov
push
insl
pop
dec
mov
aas
xchg
ret
jo
mov
mov
jge
cmpsb
call
pop
adc
jnp
or
xor
cwtl
xchg
iretw
jbe
dec
pop
lret
into
or
negb
fbld
mov
inc
xlat
push
or
inc
xchg
lret
mov
aad
add
dec
inc
lret
add
push
mov
bound
std
gs
shll
imul
rorl
sbb
inc
pop
dec
jp
lods
xor
mov
outsb
in
testb
jns
insb
idivl
fsubl
xor
clc
mov
cmp
xchg
in
jge
ror
pop
daa
push
sub
inc
sbb
jmp
aaa
mov
adcb
mulb
stc
rorl
cmc
call
lret
adc
shlb
and
ret
out
jb
mov
stos
js,pn
enter
push
aad
out
addr16
mov
testl
pop
xor
jo
sbb
sbb
sbb
gs
test
xor
mov
enter
cmp
pop
jne
pop
sub
sub
sub
xchg
inc
aas
mov
dec
jns
push
dec
lea
subl
pop
push
lcall
rolw
xor
sub
mov
mov
pushf
cs
or
adc
frstor
push
inc
scas
inc
or
add
add
in
mov
aas
xchg
add
jl
pop
xor
sub
scas
xor
xchg
sub
leave
push
lds
adc
push
adc
jns
and
stos
cmovae
std
cmpsb
push
xchg
jns
mov
sahf
test
ds
and
rclb
movsl
stos
dec
fwait
sar
pop
inc
fstl
xor
sbb
xor
xchg
cmpsb
fdivrs
pop
cli
mov
in
scas
push
mov
mov
jge
outsb
add
mov
or
jmp
cmpsb
dec
insl
jmp
ret
popf
jae
in
and
cmc
cmc
sbb
das
xchg
popa
lock
push
cwtl
mov
scas
sbb
les
out
shlb
jle
or
adc
jae
pmaddwd
call
inc
mov
lock
jle
inc
andl
js
dec
popf
cli
mov
sbb
pop
into
jo
jo
xor
sub
mov
inc
pusha
hlt
mov
lret
pushl
movsl
xor
in
xchg
pop
push
ja
cmpsb
stc
cmp
add
ficoml
push
test
xor
mov
loopne
fdivrl
sbb
xchg
int3
dec
scas
cli
mov
cwtl
dec
sbb
in
mov
and
fsts
xor
sbb
pop
xchg
mov
loop
push
push
sub
sub
add
test
enter
clc
mov
jmp
push
pop
stos
dec
scas
in
aaa
push
je
xor
stc
pop
and
mov
out
xchg
stos
xor
jae
sub
clc
xchg
dec
sbb
stc
xchg
call
test
jb
xchg
xor
xor
adc
mov
stc
and
and
dec
mov
sti
xor
int3
int
sub
push
pop
inc
add
or
loop
sub
cmp
aad
insl
push
and
push
insb
rcll
repnz
loopne
repz
ljmp
jo
mov
scas
mov
jl
xchg
data16
sarl
or
shl
fldt
xchg
push
idiv
jbe
push
arpl
mov
dec
loope
dec
push
or
sarb
adc
xor
sub
xchg
add
shlb
lods
sbb
and
or
push
mov
fisubrs
and
xor
add
cmp
das
xchg
jne
jbe
mov
dec
mov
mov
sub
movsb
jnp
scas
lret
xchg
pushf
mov
sahf
mov
inc
subl
jmp
mov
sub
adc
js
mov
and
dec
dec
jge
scas
and
sub
ljmp
jo
std
lahf
lock
or
dec
insl
loope
xlat
pushf
pand
xchg
ja
or
sahf
clc
ja
mov
leave
popf
sahf
or
int3
mov
cmp
nop
shrl
lahf
push
loop
in
xor
pop
scas
ret
scas
mov
mov
test
xchg
mov
popa
add
xchg
pop
das
add
dec
cmpb
in
adc
add
add
in
adc
pop
cmp
or
mov
stc
movsb
jmp
aad
les
mov
sar
xor
fistpll
std
addr16
mov
xchg
jmp
pop
fisubrs
lea
xchg
xor
sbb
jbe
les
cmp
and
pop
cmp
andl
loop
andb
mulb
xchg
lcall
das
icebp
jge
xor
lret
or
inc
mov
das
pop
cmp
les
and
lcall
inc
xchg
adcl
aas
sub
je
and
fstpl
fidivl
nop
in
ret
loopne
xchg
push
mov
bound
stos
fnstsw
in
sbb
leave
repz
ds
xchg
sbb
push
xchg
ret
negb
movsl
jnp
push
int3
cwtl
or
test
out
xor
out
mov
or
movsb
or
mov
jg
sbb
adc
out
jno
push
addr16
fnsave
ja
adc
cmp
sti
push
xor
bound
and
and
sub
and
add
sti
mov
int3
cld
push
mov
scas
fimuls
push
inc
xchg
xor
mov
push
sub
scas
fcompl
cli
movsl
loop
jg,pn
jbe
call
bound
dec
cmp
inc
arpl
mov
in
or
pop
add
loop
fbstp
mov
fwait
sti
pop
inc
int3
xchg
enter
popa
pop
in
jns
cs
mov
cmp
mov
loop
dec
jb
or
call
sbbb
pop
shlb
jecxz
push
xchg
scas
sbb
push
daa
push
fcomps
xchg
pop
lds
adc
rclb
lcall
mov
int
fidivrs
jge
xor
fdivs
fwait
jo
jg
mov
lds
sbb
mov
popa
fidivrs
xchg
fwait
je
cmpsl
xchg
aas
or
push
add
stc
dec
mov
adc
dec
sbb
aaa
or
sub
ja
jb
adc
push
xor
bound
push
fs
test
jle
xchg
je
cmpsb
hlt
pop
jmp
jno
outsb
stos
push
into
leave
xor
out
fnstsw
cmp
js
int
cmp
jbe
and
test
andl
jbe
mov
subb
cmc
insb
jne
fwait
lret
dec
adc
leave
mov
out
xor
xchg
clc
insb
cmp
dec
jo
das
jns
xchg
arpl
icebp
push
fdivl
es
inc
rsqrtps
jg
cmp
ret
fcom
jecxz
test
jl
aam
addr16
cli
sub
jle
jle
pop
adc
sbb
into
mov
cmp
cmc
loopne
mov
mov
and
inc
in
scas
jno
mov
dec
test
rolb
adc
sahf
stos
pusha
sbb
jl
cs
es
shl
std
loop
mov
aaa
dec
outsl
jg
ret
dec
addl
xchg
push
sbb
das
jno
mov
fnstcw
xchg
pop
fldenv
mov
pop
xor
cltd
cmpl
out
clc
push
jbe
rclb
cld
adc
mov
fidivrs
pop
sub
mov
sub
dec
outsb
sub
add
ja
ljmp
cmpsl
xchg
neg
xchg
sbb
xchg
add
fidivl
sub
mov
mov
aaa
xchg
mov
in
sti
fisttpl
mov
repnz
or
mov
sahf
lea
mov
mov
les
mov
test
inc
pop
sahf
ss
push
adc
test
lret
xor
ficoms
rol
ret
loope
xor
xchg
out
push
push
arpl
in
sub
mov
pop
roll
sub
mov
add
xchg
mov
dec
inc
sbb
adc
jmp
outsl
xor
mov
and
lcall
sub
cmpl
filds
jle
mov
mov
aas
insl
loop
stos
lock
jae
inc
jns
add
inc
inc
jno
sbb
push
es
loop
cmc
or
and
inc
dec
cmpsb
stos
shl
inc
out
in
mov
mov
dec
lcall
jnp
enter
and
stos
xlat
test
push
hlt
xor
stos
adc
jecxz
cmpsl
je
push
mov
movsl
sub
add
xor
xchg
test
mov
divb
add
mov
mov
xchg
jns
xchg
lock
pop
cmp
addl
arpl
xor
sub
idivl
mov
movsb
addr16
mov
dec
div
stos
data16
pop
cs
es
push
mov
sti
sub
in
dec
mov
push
dec
cmp
cmpl
mov
sti
sub
js
rorb
xchg
and
xor
mov
mov
pusha
ds
cmp
jb
cmpsb
and
fs
dec
sarb
xchg
bound
pop
fistps
testb
in
mov
add
insb
pop
dec
pop
adcb
push
xor
xor
in
cwtl
cmp
cli
mov
addr16
push
out
and
dec
dec
fwait
lahf
jno
pop
mov
jnp
repnz
scas
jnp
xchg
adc
push
and
loope
lock
dec
loop
mov
pop
push
test
jno
clc
inc
stos
xor
mov
iret
jnp
or
imul
incb
xchg
int3
push
adcb
mov
ror
loopne
jo
bound
inc
clc
repz
cmp
push
test
and
mov
push
push
dec
cmp
mov
cmpsl
les
decb
faddl
clc
jge
insb
xor
insl
push
push
loope
pop
fsubrl
scas
cli
and
fldenv
or
and
xor
xchg
pop
out
xorb
sub
adc
ds
mov
mov
lock
jle
out
stos
je
in
xchg
scas
pop
sarb
or
lock
ljmp
in
aad
shrl
xor
loop
test
filds
add
faddp
fdivl
push
pop
inc
popf
jno
imul
lods
sbb
ret
stc
movsb
xor
sub
push
rol
aas
imul
popa
inc
pop
add
iret
ja
repnz
sahf
push
scas
fisubl
ret
pusha
lods
dec
inc
cmpsl
hlt
jecxz
cmp
mov
xor
sub
into
jo
arpl
push
hlt
jecxz
xlat
and
mov
push
cwtl
xchg
mov
mov
pop
inc
popf
dec
and
xchg
rcl
inc
cmpsl
pop
mulb
push
outsb
cmp
xchg
dec
xor
loop
dec
aas
fildl
xchg
int
push
jb
loopne
out
push
mov
jno
into
mov
add
cmp
pop
adc
fucomp
jno
in
in
pop
clc
pushf
stos
pusha
pusha
repnz
inc
insb
jp
mov
pop
divl
and
js
mov
cmp
push
mov
lret
push
push
xchg
mov
mov
mov
inc
fcoms
mov
pop
into
subb
and
pop
imul
in
lahf
push
dec
pop
adcl
add
mov
xor
shr
in
xor
lcall
jo
imul
pop
inc
lcall
inc
mov
mov
into
jo
or
mov
aad
loopne
or
lods
cltd
fistpll
in
sbb
sub
dec
sub
dec
pop
cltd
push
clc
sub
mov
ss
out
cmpsb
addr16
std
pop
pop
mov
add
push
sub
ds
clc
loop
push
and
mov
dec
sbb
pushl
pop
scas
mov
mov
cmp
dec
cmp
fs
jo
cltd
das
cmpsl
int3
xchg
mov
push
mov
aad
test
popa
aaa
pushl
adc
add
mov
push
push
and
mov
inc
xchg
pop
subl
pusha
test
inc
cmp
mov
out
sahf
dec
or
movsb
xchg
adc
sbb
cs
pop
les
mov
testb
and
jg
mov
push
ficoml
rcr
stos
inc
shrl
lods
lods
sbb
xor
dec
cmp
sub
sbb
out
leave
sar
mov
fcomps
call
dec
cmp
imul
push
leave
mov
cltd
enter
call
dec
cmp
imul
push
leave
test
test
fstps
jmp
dec
xor
insl
pop
sbb
jl
pop
sub
xor
sub
cltd
fmuls
sbb
jecxz
jns
push
das
xchg
shlb
xchg
push
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cwtl
sbb
in
mov
rcrb
jo
pop
dec
or
add
or
add
add
in
add
add
add
outsl
add
add
add
add
sub
lock
dec
add
pop
je
xchg
add
mov
cmp
loop
xchg
add
add
pop
movsl
add
imul
sub
dec
add
add
add
add
add
add
add
sub
push
add
add
add
add
add
push
add
add
add
add
mov
add
add
add
mov
add
add
add
add
in
add
add
push
add
add
pop
add
add
add
add
add
add
push
add
add
add
jns
outsl
add
push
add
add
xchg
add
pop
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
add
sbb
push
add
popa
add
dec
add
add
add
add
add
add
add
add
add
add
and
cmp
and
mov
add
add
and
addl
add
add
add
add
aad
in
add
add
xor
pop
add
in
add
cld
add
add
add
add
or
sub
fiadds
fwait
add
xor
call
add
lods
add
scas
add
jg
cld
add
add
add
add
add
add
add
push
add
add
dec
add
add
das
add
or
jbe
adc
add
fiadds
dec
add
add
cld
add
add
add
add
movb
inc
add
add
dec
add
add
add
sub
jl
flds
fildl
or
dec
add
adc
insl
add
push
add
mov
add
faddl
jg
cld
add
add
add
add
add
xchg
add
add
add
pusha
add
add
adc
loopne
sbb
scas
add
add
pop
or
pusha
add
add
cld
add
add
add
aaa
add
popf
add
add
cmp
sub
outsl
add
add
or
add
add
add
or
dec
add
jbe
ret
add
add
add
add
add
add
add
add
dec
add
add
add
xchg
add
add
lods
add
add
and
add
jnp
lods
add
add
inc
add
add
cmpsb
add
add
add
add
enter
ret
add
pop
add
add
add
add
add
add
add
add
add
add
and
sub
jg
addb
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
jo
inc
add
add
add
add
add
add
add
movsl
add
add
add
rolb
xchg
add
pushf
add
jle
xchg
add
add
add
fiaddl
sbb
outsl
add
cmc
add
add
add
xchg
push
insl
push
cli
jg
mov
pop
inc
cwtl
pop
pop
lret
fwait
mov
inc
loop
mov
mov
mov
mov
ja
cmp
xor
xor
pop
inc
mov
sbb
mov
xchg
adc
ret
mov
lock
jmp
add
dec
movsl
xor
rcr
lods
cmc
mov
mov
leave
subb
out
test
lahf
test
sbb
jb
sub
inc
mov
pop
daa
or
adc
lods
jae
push
pusha
dec
inc
pop
adc
pop
mov
mov
insb
repnz
xchg
and
cmp
xchg
mov
xchg
gs
pushf
adc
jecxz
aaa
lods
and
mov
inc
scas
or
enter
inc
fsubrs
push
add
xor
pop
xor
xchg
fildl
mov
call
mov
mov
shrl
jns
push
into
insl
fistl
push
sub
pop
dec
inc
sbb
iret
ds
fnsave
sub
inc
xor
mov
jb
fbld
gs
fldenv
in
sub
scas
and
cmp
notb
adc
and
cmp
pop
xor
out
xor
jne
les
sub
jne
test
xchg
ds
mov
scas
cld
jo
mov
scas
mov
push
xchg
je
jnp
jo
ret
daa
lock
aam
jp
or
push
fs
adc
cmp
adc
jo
jle
mov
out
mov
arpl
jp
inc
cmpsb
mov
in
push
inc
std
jle
mov
scas
gs
addr16
lock
lret
jecxz
mov
xor
xchg
sub
loopne
ret
pop
pop
icebp
cs
push
add
lds
sub
push
xchg
jmp
jae
mov
sahf
je
test
dec
lods
xchg
in
rcll
insl
or
mov
outsl
inc
and
aam
movsl
cli
mov
add
push
rcr
cli
lret
mov
adc
and
mov
pop
pusha
mov
or
std
scas
in
xchg
pop
or
test
nop
cmp
mov
xor
jecxz
jns
out
push
call
push
aaa
dec
gs
rorw
push
ficoml
data16
xchg
shl
jmp
push
fmuls
les
adc
test
fiadds
loop
jmp
sub
pop
and
es
mov
pop
or
pop
push
sub
inc
mov
mov
inc
pusha
push
inc
ljmp
fwait
pusha
ja
jle
push
adc
insl
incl
jno
dec
sub
jns
jge
mov
cwtl
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
