call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cld
test
push
pop
int3
lret
fmull
pop
jmp
ljmp
sub
sbb
or
cld
jp
push
pop
int3
dec
mov
sbb
sub
dec
lret
sub
sbb
or
cld
call
int3
dec
mov
hlt
mov
jl
insb
mov
test
push
in
dec
ret
push
out
bound
scas
das
mov
mov
mov
sbb
mov
fisttps
icebp
push
jnp
add
xchg
cmp
xchg
pop
jp
mov
inc
mov
ret
mov
repnz
add
outsl
adc
inc
fs
mov
cmpl
inc
pushf
lcall
mov
dec
dec
repnz
loope
cmc
jl
jl
shr
push
ret
push
sbb
push
flds
outsl
cwtl
xorb
cmpsl
outsl
popf
adc
cli
dec
sbb
cs
cld
mov
jne
mov
sub
inc
jge
test
sub
push
andb
push
sbb
fs
mov
fmulp
inc
mov
rorb
lret
cmp
sub
sbb
or
mov
sbb
inc
stc
jae
outsl
cmp
scas
and
pop
fistpl
aas
sahf
sub
rcrb
je
sbb
or
outsb
sti
or
xchg
sub
sub
mov
sbb
pop
fimull
mov
or
cld
jp
push
pop
int3
dec
mov
sbb
pop
fimull
mov
or
cld
jp
mov
mov
xchg
inc
adc
mov
popf
mov
aam
mov
xchg
cltd
js
ja
std
mov
and
mov
mov
xchg
push
cmpb
xor
pop
rcll
fwait
cmpsb
xlat
adc
push
dec
inc
lea
mov
sub
dec
ja
aas
xchg
cmp
aas
cmp
repz
mov
add
add
cmp
add
imull
int
mov
sub
jne
mov
imul
xchg
sbb
loop
sbb
push
popl
sbb
push
mov
dec
bound
mov
mov
pop
leave
and
jecxz
dec
pushf
pop
cmp
inc
negb
mov
pusha
rolb
jnp
mov
test
lock
fs
xchg
frstor
cli
push
sti
dec
dec
cmp
jo
jge
xchg
inc
sti
sub
cmc
and
pop
pop
push
lahf
aam
lea
mov
pusha
cmpsl
cmp
xchg
in
into
cmc
fimuls
mov
pushf
push
mov
call
out
cmpsl
inc
outsl
ret
cmp
or
lfs
jne
rclb
xchg
jno
or
jecxz
push
dec
jnp
mov
fdivp
mov
dec
dec
inc
ss
dec
call
aad
sbb
pop
lds
push
cs
jp
cltd
shlb
fiaddl
jge
lret
clc
lods
xchg
movsl
ret
ja
add
dec
rcr
mov
and
and
xchg
inc
les
mull
mov
frstor
mov
repz
pop
out
pop
orb
lcall
out
aad
rol
add
pusha
hlt
sub
loop,pt
inc
xchg
mov
imul
sti
pop
test
mov
nop
push
mov
pop
test
stc
out
pop
pop
sub
adc
fwait
xor
mov
fiadds
cmpl
mov
jbe
or
sahf
jge
xorb
inc
into
faddl
stos
lret
lea
insl
xchg
lds
dec
and
fld
dec
fildll
aad
pop
mov
fidivrs
int
cmpsl
dec
push
lock
scas
ret
sbb
ja
cli
dec
sub
nop
push
push
mov
inc
out
mov
test
out
fs
scas
dec
fdiv
inc
jno
and
int3
dec
icebp
testl
cli
cli
xor
cmc
call
outsl
push
in
ja
xorb
fucomi
push
aam
cmp
inc
mov
pop
inc
dec
gs
jecxz
xor
jnp
dec
add
push
jg
push
cmpsl
int
and
or
iret
cmp
je
push
sbb
xor
insl
test
fidivrs
int3
inc
xchg
lret
push
mov
inc
push
js
xlat
es
or
sub
push
test
iret
outsl
int
cmpsl
sub
jo
mov
xchg
sub
mov
mov
loop
push
gs
xchg
push
hlt
mov
mov
sub
rol
loope
sub
mov
sub
inc
in
xor
repz
jge
cmc
movsl
popf
and
dec
mov
in
std
shl
leave
xchg
cmpsb
cmp
push
or
xor
outsb
add
mov
scas
inc
movsl
pop
xor
pop
test
scas
sbb
xor
mov
pop
lret
sbb
lods
mov
fidivrs
add
fwait
and
rol
pop
adc
pop
cmpsl
inc
jno
dec
mov
xchg
jg
xor
lds
mov
into
fsubs
xchg
sub
mov
in
add
cmpsb
sarb
in
incb
adc
cmp
inc
add
pop
cld
mov
fucomi
sbb
pop
fwait
dec
shlb
xchg
sbb
cld
lods
mov
pop
adc
mov
lahf
test
and
sub
das
dec
cmp
lods
fidivrl
in
mov
xchg
loopne
mov
call
test
or
cmc
cld
inc
ss
out
out
and
scas
inc
jl
push
mov
adc
push
or
add
js
cmp
push
add
xchg
sti
test
lret
adc
inc
fwait
xchg
rcrl
push
rcrb
fwait
imulb
xor
push
in
imul
or
sbb
nop
aam
jne
jmp
cmp
mov
sbb
sbb
lods
les
mov
int3
shlb
cmp
cmp
push
pusha
cltd
lds
cmc
clc
mov
cli
cmc
imul
loope
loope
lods
lods
cmp
dec
xchg
and
cmovp
stos
loop
pop
ljmp
or
lcall
sbb
pop
cmp
sarl
daa
mov
xchg
mov
ss
inc
xchg
rorb
jne
jae
xchg
mov
ret
inc
ficoms
aaa
mov
sub
sub
mov
sahf
mull
adc
mov
cltd
bound
shrl
pop
pushf
mov
add
inc
pop
jns
mov
into
iret
ja
adc
cmc
decb
cmc
jle
sbb
loopne
mov
mulb
popa
and
je
or
ss
sub
repnz
jl
sbb
fistpll
aad
push
jmp
daa
adc
or
loop
sbb
pop
lret
adc
imul
imul
add
or
shlb
xchg
enter
mov
cmp
or
clc
inc
mov
test
xor
mov
pop
or
push
mov
stos
loop
mov
popa
fistl
iret
in
sbb
aaa
mov
rcrb
shrl
rcll
in
xchg
mov
sub
pop
jmp
add
fiaddl
into
andl
fwait
mov
or
test
testl
pusha
push
xchg
aas
out
add
addl
xchg
pusha
test
or
xchg
ja
insl
bound
pushf
fsubrp
scas
push
sbb
jl
xchg
dec
and
push
cmp
stos
push
cmc
aas
test
pop
and
mov
lcall
ja
lock
loop
movsl
add
jns
jb
aam
jno
insb
inc
xor
sbb
bound
xor
ja
clc
sub
and
andl
mov
mov
push
loop
sbb
pop
nop
inc
mov
pop
bound
push
cmc
and
loop
mov
push
insl
add
pop
sub
pushf
xchg
mov
mov
jecxz
imull
inc
fwait
mov
push
or
or
xor
sub
sbb
mov
incb
mov
jmp
dec
xor
cmpl
mov
movlps
std
pusha
cld
jp
lcall
add
lods
push
add
push
mov
mov
lret
pop
iret
and
mov
cmp
ficomps
cmp
imul
fstpt
sub
inc
cmp
imul
add
in
or
in
xor
sub
pop
jno
mov
xchg
dec
in
mov
sti
jle
test
ljmp
xchg
int
jg
repnz
js
push
push
sub
pop
mov
std
pushf
push
xchg
dec
mov
sub
fldz
movsb
mov
add
xchg
adc
or
pop
add
iret
test
fsubrl
js
mov
cmp
js
jecxz
pop
hlt
insb
push
dec
mov
enter
outsb
fcmove
arpl
in
rcl
xchg
fldcw
scas
es
mov
add
icebp
jg
xchg
fnstsw
ss
fcoms
and
push
mov
jecxz
xor
mov
or
pop
lcall
or
dec
push
test
movb
jnp
dec
xchg
addr16
ds
pop
xchg
xchg
icebp
inc
iret
sbb
test
dec
popf
cltd
jbe
mov
mov
mov
mov
pop
and
dec
add
and
ret
outsb
mov
or
and
rorb
dec
xchg
mov
mov
or
sub
inc
fwait
pop
xchg
aas
lods
sbb
xchg
in
push
scas
and
fstpt
dec
pop
inc
pushf
test
sarb
pop
popf
push
out
adc
imul
test
mov
repz
mov
inc
fisubl
push
jne
ja
in
inc
sbb
jecxz
pop
pop
fwait
sub
cmp
ret
ja
adc
bound
adc
xlat
lcall
pop
gs
xchg
inc
xchg
iret
xchg
mov
add
test
push
imul
hlt
movsb
scas
xchg
icebp
lcall
mov
mov
xchg
add
out
or
pop
bound
jle
popf
sub
arpl
or
addr16
sbb
adc
mov
mov
into
fiadds
inc
repz
xchg
mov
and
xlat
mov
in
adcl
repz
xlat
rorb
push
push
xor
aad
ljmp
les
jmp
addr16
jmp
not
icebp
add
jg
pop
mov
out
xchg
sbb
mov
ja
loopne
sahf
jmp
ret
leave
clc
lcall
mov
inc
ret
pop
dec
hlt
mov
in
repz
pop
cwtl
mov
out
jmp
jecxz
xchg
add
ret
jns
xor
jb
mov
sub
rcll
loop
or
aad
sbb
xchg
sti
add
jnp
sahf
xor
xchg
pop
sbb
std
xchg
je
insb
ret
cmp
sbb
rorl
mov
int
xchg
mov
adc
cld
sahf
sub
add
inc
scas
fimuls
ret
sbb
adc
insl
and
lea
ret
fstpt
sub
mov
in
jg
mov
xor
and
scas
jns
mov
movb
xchg
fisttpll
sahf
js
sbb
mov
dec
fidivrs
pop
fld
xor
aas
pop
sti
jnp
mov
jbe
popa
mov
and
jns
lahf
imul
xor
add
xor
adc
adc
rcr
xchg
fnsave
mov
mov
adc
mov
pop
jp
and
out
cs
outsb
int3
data16
cmp
or
or
lret
clc
cltd
sbb
or
cmpsb
andb
or
pushf
jg
jecxz
sub
inc
aad
sub
movsl
sub
mov
and
mov
stos
xchg
stc
int
shrb
adc
das
mov
aaa
sbb
sbb
jecxz
jmp
mov
add
adc
push
loopne
fcomp
xchg
add
xchg
test
xchg
je
push
gs
out
push
mov
mov
fcomi
inc
aas
ja
scas
in
lret
ret
ss
push
push
cmpsb
dec
cs
mov
dec
lea
das
xchg
loopne
inc
cmc
push
add
imul
cltd
imul
sarl
dec
mov
aam
fcmovnb
dec
stos
or
mov
out
dec
or
sbb
leave
sub
mov
lret
in
cmpsb
mov
aad
sbb
cmc
iret
loopne
test
adc
push
xchg
jns
imul
out
lret
enter
push
movsl
or
cmp
push
call
mov
sahf
inc
lahf
jmp
inc
into
adc
mov
pop
fisttpl
pop
push
add
ljmp
pop
add
add
cmp
js
clc
pop
leave
shrb
xlat
mov
fs
mov
cmc
lock
lcall
or
dec
scas
cmc
adc
mov
mov
cmp
mov
sub
out
dec
in
dec
addr16
xchg
sub
cwtl
push
cs
adc
sti
mov
mov
sbb
in
mov
jecxz
pusha
mov
inc
xchg
js
mov
and
or
cld
dec
jns
pushf
sbb
fwait
pop
mov
sbb
or
cmp
pop
idivb
popl
xchg
mov
out
addb
lock
xor
and
leave
int
xchg
xchg
fimuls
mov
mov
sbb
jo
imul
sbb
jno
sarl
in
adcb
fwait
and
jp
scas
lods
pop
mov
push
push
cwtl
repnz
gs
out
dec
in
int
dec
arpl
int
sbb
cmc
fisubrs
sbb
sbb
xchg
xor
adc
sub
ja
aas
lock
adc
mov
push
jns
add
mov
in
pop
jmp
and
cwtl
aad
sti
push
test
mov
dec
cmpsb
sub
jns
push
mov
or
jbe,pt
dec
lcall
adc
adc
dec
sbb
int3
test
enter
and
mov
fsubr
push
and
dec
fcomps
test
test
sbb
sbb
mov
ljmp
push
lods
inc
jne
in
imul
sub
mul
jge
cmpsl
dec
dec
incl
js
pop
lcall
cmp
jb
pop
jle
in
xchg
dec
dec
insb
ljmp
mov
test
lods
mov
je
push
push
inc
jne,pt
inc
cs
or
mov
movsl
jge
repnz
cmp
mov
push
sbb
aad
pop
mov
dec
jbe
add
mov
push
sahf
popf
mov
add
adc
add
jb
xor
inc
test
enter
cld
cmp
jle
mov
pushf
pushf
lods
sub
xlat
pop
jnp
mov
sub
es
jb
fwait
test
jnp
or
add
ljmp
sbb
dec
and
jle
jl
test
inc
push
and
mov
in
cs
sti
test
fidivl
fistps
jle
fs
testl
and
or
adc
lds
or
test
pop
lock
mov
sbb
lea
int3
fxch
mov
insl
clc
xorb
xchg
adc
push
insl
pushf
out
push
aaa
sbb
and
adc
pushf
jl
fneni(8087
jl
fistpl
push
imul
es
and
xor
or
jae
xchg
imul
sub
push
je
sub
pop
lods
cmp
xor
jecxz
scas
adc
rorl
les
cmc
out
mov
shrl
cmpb
ss
out
shrl
xlat
in
adc
xor
test
dec
outsb
mov
or
mov
clc
out
and
push
inc
int
and
add
das
push
dec
pop
shlb
dec
aam
jnp,pt
test
ss
add
cmp
mov
ljmp
dec
mov
outsb
pop
mov
test
sub
inc
adc
inc
pop
std
out
into
xor
ficoml
xchg
addr16
fisubrs
and
sub
add
inc
or
cmp
mov
push
jmp
stos
push
jl
sub
out
inc
out
add
les
int
or
mov
mov
ds
cs
sbb
lods
and
lahf
xchg
sbb
hlt
lret
ss
bound
mov
inc
popa
xchg
mov
mov
rorl
dec
mov
xchg
fidivl
cwtl
dec
pop
fsubr
ror
stos
shll
mov
ret
popf
mov
pushf
push
rclb
xchg
imul
adc
sbb
jne
lods
jno
xlat
cmp
mov
mov
mov
loope
dec
negl
mov
sub
dec
aas
stos
in
xorb
mov
stos
imul
into
or
jns
dec
cmp
xchg
pop
jge
inc
xor
adc
sbb
cmpsl
addb
mov
fsubr
aam
cwtl
mov
xor
pop
or
aad
mov
xchg
sbb
push
dec
icebp
pop
into
outsl
push
dec
pop
adc
subb
inc
inc
mov
jb
add
adc
das
movsb
or
jl
and
sbb
fists
leave
cmp
cmp
xchg
ret
shl
jnp
andl
push
push
mov
inc
ret
jno
in
or
sahf
sub
test
cltd
aad
vpsrlw
inc
push
xor
cs
cmp
stc
or
add
mov
lcall
lret
jmp
jecxz
xchg
aaa
sub
notl
lret
dec
add
lret
pop
movb
gs
jcxz
inc
pop
mov
mov
ss
je
popf
or
xchg
dec
fidivrl
fistpll
movsb
mov
mov
fsubs
repnz
or
mov
int
xor
adc
cmc
mov
mov
lret
and
sub
adc
jns
ja
lret
popa
movsl
pop
or
inc
inc
sub
sub
pushf
jg
loop
mov
adc
jbe
jmp
imul
lock
mov
fwait
and
out
adcb
mov
dec
testb
xchg
push
shrl
adc
pop
daa
roll
test
push
nop
xor
or
mov
mov
adc
or
sub
xchg
clc
out
mov
popl
mov
pop
int3
push
xchg
inc
jmp
addr16
fisttpl
cli
enter
xchg
mov
in
out
dec
in
jb
std
psrld
push
pop
bound
xor
dec
sbb
clc
aam
data16
fwait
jo
sahf
outsl
outsb
pop
dec
les
pop
fwait
jp
push
cmp
xchg
cmpsb
loope
sbb
out
push
xor
lea
nop
inc
xchg
subb
lock
xchg
loopne
scas
stos
and
xchg
data16
jnp
jp
sbbl
stos
jecxz
hlt
mov
mov
jno
pop
adc
mov
fstpt
jne
jne
and
fmul
ret
lret
mov
pop
rorb
pop
pop
and
mov
dec
stc
mov
pop
cmp
repz
xor
aaa
add
xor
setno
mov
push
popa
stos
xchg
jbe
pop
push
xchg
push
push
dec
and
out
scas
sub
dec
mov
fsubr
push
lahf
scas
xor
mov
push
arpl
mov
in
mov
rolb
ret
rol
icebp
sbb
jle
fnstsw
lcall
sub
xchg
ret
xchg
stos
rcl
mov
rcrl
stos
jg
fs
and
and
dec
mov
mov
mov
mov
aas
add
loop
pusha
sahf
jle
and
or
in
or
adc
fstpl
jno
xchg
dec
push
xchg
cmp
mov
jnp
xlat
pushf
mov
in
repnz
addr16
lock
in
inc
movsb
inc
out
push
jb
dec
in
hlt
sbb
mov
xchg
insb
inc
jle
pop
into
lods
aad
cmp
addl
jo
es
sbb
adc
adc
or
out
mov
aaa
or
pop
out
lahf
mov
and
push
dec
dec
pop
xchg
add
loop
mov
in
outsb
pusha
js
mov
hlt
popf
enter
push
ja
xchg
imul
xor
sahf
sbb
shr
xor
push
insb
std
jae
adc
in
hlt
sub
data16
add
cmp
into
jle
add
sub
fsubrl
jnp
pop
jns
dec
jge
push
cmp
inc
push
ficoms
push
push
cmpsb
inc
or
push
jne
xlat
xchg
pop
ljmp
pop
pop
xchg
jge
and
testl
aas
jl
ds
jge
and
bswap
leave
xor
scas
pop
mov
mov
adc
sti
enter
pmaddwd
or
in
in
js
jmp
ljmp
jno
jne
aas
jle
adc
add
mov
popf
enter
mov
add
ss
mov
lods
xchg
pop
xor
jmp
mov
fwait
bnd
dec
and
mov
sbb
leave
lods
insb
push
cld
ljmp
out
pusha
push
mov
mov
lcall
stc
rcl
pop
inc
push
add
pop
sub
xor
test
sbb
divl
xchg
push
repnz
mov
neg
jg
jne
es
sub
push
lods
aaa
xchg
mov
xchg
out
cmp
repz
xchg
and
fisubrl
ja
lods
loopne
mov
out
les
and
jo
push
mov
aam
or
dec
xor
lods
movsl
inc
cltd
fsub
pop
leave
adc
faddl
push
cmpsb
cmp
mov
aas
inc
xchg
dec
mov
jmp
xor
xor
xchg
movsb
sub
ja
data16
icebp
ss
mov
add
push
daa
je
jae
pop
xchg
xor
sub
mov
xchg
ss
iret
xchg
ret
adc
aam
ret
dec
lcall
inc
sahf
mov
adc
lock
dec
dec
xor
decl
xchg
lcall
pop
cmp
sbb
into
inc
sbb
and
jmp
push
push
sub
and
mov
cld
jo
ja
jge
inc
dec
lcall
ss
dec
mov
sbb
pop
fimull
mov
or
cld
jp
push
pop
int3
dec
mov
sbb
pop
fimull
mov
or
cld
jp
and
and
dec
mov
sbb
pop
fimull
mov
or
cld
jp
push
pop
int3
dec
mov
lcall
neg
dec
mov
jecxz
repz
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
cltd
into
test
sarb
scas
or
sbb
jle
outsb
dec
push
pop
push
imul
cltd
into
test
sahf
or
dec
sub
outsb
dec
jb
push
imul
cltd
into
test
sahf
or
insl
pop
or
cmovns
pop
sub
pop
std
lods
clc
xchg
mov
jb
sarl
push
les
push
xorl
inc
imul
adc
sub
push
push
pop
aas
sub
fdivp
ret
ret
xchg
lock
and
sti
mov
or
cmp
mov
push
ljmp
ljmp
es
mov
stc
push
stc
mov
mov
push
pop
lock
xor
das
fisubrl
inc
arpl
push
stc
pop
adc
mov
mov
sbb
push
xchg
jns,pt
mov
popa
inc
xchg
out
inc
scas
loop
push
inc
dec
mov
jmp
dec
pop
sbb
lods
push
or
jnp,pt
dec
ficomps
out
leave
sahf
or
dec
sub
outsb
dec
push
pop
push
imul
cli
out
out
lods
sti
mov
xchg
jge
jns
jl
pop
sbb
pop
sbb
inc
or
mov
clc
out
lods
repnz
ret
mov
aaa
push
sub
cmp
add
inc
out
lcall
mov
stc
scas
or
dec
sub
outsb
dec
push
pop
push
imul
cltd
into
test
sahf
or
dec
sub
outsb
dec
push
pop
push
imul
clc
cmpsb
xor
sub
ljmp
mov
ds
or
push
sub
pop
push
push
inc
lret
pop
mov
cwtl
int
into
daa
sahf
push
mov
out
or
shll
loope
pop
daa
fistps
jg
push
adc
dec
sub
mov
xchg
or
iret
popf
imul
mov
sbb
hlt
mov
push
imul
cwtl
push
sbb
lahf
jge
add
dec
jecxz
dec
jl
inc
lds
push
mov
in
or
test
mov
pop
jne
lea
das
push
rorl
add
ljmp
pop
cmpb
push
sbb
xchg
mov
ret
out
xchg
jmp
push
cwtl
mov
push
push
dec
jbe
inc
popl
mov
push
mov
push
add
and
pop
sbb
pop
movsl
mov
shr
cmp
js
push
fimull
sub
mov
adc
bound
imul
sub
sbb
push
sbb
lcall
clc
sub
xor
push
sbb
xchg
insl
pusha
aas
pop
add
aaa
cwtl
jmp
sbb
insl
pop
int3
adc
sub
das
das
daa
and
adc
xchg
aam
adc
clc
cli
lock
lea
push
dec
movsl
pop
hlt
sbb
push
mov
sub
fs
sbb
rcr
lcall
or
cmc
pop
add
ret
hlt
sbb
mov
sbb
sub
in
jne
faddp
int3
addr16
stc
iret
sbb
sbb
mov
orl
fs
pop
inc
insb
cltd
imull
lret
adc
and
jbe
insl
add
adc
mov
dec
fwait
mov
shll
mov
mov
in
in
inc
loope
aaa
addr16
fldenv
mov
imul
pop
sub
push
jae
ret
add
push
push
push
bound
mov
imul
mov
push
fcmovnbe
jo
rolb
xor
push
adc
test
and
iret
and
xchg
jo
sub
jnp
pop
mov
dec
test
add
sbb
pusha
jmp
and
and
inc
sahf
jno
lods
into
hlt
aaa
add
and
mov
add
inc
xchg
mov
data16
cltd
stos
pop
mov
mov
fsubrs
sbb
adc
out
jmp
or
lahf
ret
fucomp
sub
pop
loope
cld
pop
xchg
mov
push
in
cmpl
pop
cmp
add
and
rorl
aad
testl
dec
jmp
jb
out
and
mov
and
xor
nop
incb
popa
sub
aam
jg
outsl
cmpsl
jo
inc
pop
jge
cmp
jae
xchg
loop
les
out
sbb
fmuls
dec
sub
sub
xchg
imul
lods
mov
fcoms
popf
bound
mov
mov
movb
adc
movzbl
adc
dec
add
sub
mov
lods
fcoml
and
hlt
or
sub
dec
pop
push
xchg
mov
insb
shrl
mov
mov
jb
arpl
dec
dec
lea
pusha
inc
iret
jbe
dec
cmp
jb
mov
rcrl
mov
xchg
push
in
mov
xchg
cmpsb
push
jo
jmp
sbb
popa
out
movzbl
mov
cmp
leave
cvtps2pi
shlb
xchg
mov
cmp
in
lahf
in
sarl
sbbl
shrb
and
adc
mov
out
pmulhw
ds
jae
mov
lods
jno
arpl
daa
add
inc
mov
xor
push
add
xor
cmp
lock
rorl
pop
xchg
rol
xor
xor
out
adc
mov
xchg
cwtl
fldt
xchg
mov
push
jo
arpl
push
lahf
cmp
mov
add
xor
fbstp
ds
mov
mov
mov
mov
pop
and
nop
mov
fs
or
mov
outsb
scas
sbb
sbb
stos
cld
and
xor
push
cmpsl
mulb
push
lret
push
sub
jp
jo
pop
repz
ret
push
imul
adc
lea
pop
sub
and
ja
cmp
outsl
adc
mov
cltd
jmp
xor
push
and
lea
pop
sub
lods
pusha
fmuls
dec
push
cwtl
sbb
mov
pop
je
cmp
imul
sub
jo
mov
jmp
inc
sysexit
addb
icebp
mov
jle
jg
js
sub
dec
xor
dec
mov
mov
jne
pop
cmpl
cld
push
mov
xchg
test
xchg
cmp
int
dec
idiv
rolb
call
push
push
mov
push
inc
xchg
pop
out
jns
and
test
loope
adc
xor
adc
xor
ss
rolb
je
or
mov
inc
daa
mov
mov
jae
sbb
mov
jmp
xlat
bound
inc
dec
sahf
test
lds
adc
sub
adc
sti
add
das
mov
pop
rcrl
rorl
es
mov
sbb
mov
lds
dec
fcmovu
and
imul
xchg
dec
dec
sub
push
loopne
mov
inc
jnp
or
mov
aaa
push
scas
scas
mov
nop
mov
imul
cmp
dec
xchg
sbb
cmpsb
std
xor
add
mov
inc
sahf
xchg
mov
int
js
loop
inc
jg
arpl
sub
insb
das
sub
sub
js
and
add
xchg
cltd
movsb
push
jecxz
inc
lret
mov
mov
aas
xchg
aaa
sbb
or
aam
jo
xor
jae
push
jne
or
xor
es
xlat
sbb
add
ss
movsb
push
or
jne
fists
mov
or
push
push
scas
xor
jno
stc
dec
xor
mov
shll
hlt
ljmp
call
imul
imul
gs
lds
or
jecxz
add
lret
cmp
fnstenv
mov
jne
or
xchg
sbb
dec
imul
lret
sbb
hlt
mov
imul
divb
mov
call
and
xchg
mov
out
or
add
adc
out
fstps
or
shl
subb
push
dec
psubq
or
ret
fildll
push
sub
adc
shlb
pop
mov
adc
push
cltd
sub
inc
call
stc
sbb
test
into
popa
out
adc
mov
pop
lret
inc
push
mov
add
xchg
testl
jns
loop
push
jp
push
movsb
lcall
stos
and
jmp
lock
data16
jg
add
dec
jne
mov
pop
xchg
xor
aam
cltd
sarl
dec
dec
inc
xchg
adc
and
lahf
jae
pop
rolb
adc
mov
push
adc
mov
psrld
scas
adc
lahf
jne
xchg
mov
sbb
push
repz
fisubrl
fstpl
fstpl
inc
cmp
xor
sbb
ja
pusha
and
xor
fnstcw
sub
in
fsubrs
jae
and
dec
mov
cmpsl
mov
sub
adc
sbb
mov
pop
ret
lahf
sbb
jp
insl
push
lea
xchg
jnp
test
fists
add
bnd
mov
repnz
mov
jo
sbb
lods
hlt
push
shlb
fldt
pop
mov
inc
ja
fdivrs
movsl
je
xor
pop
cmpsl
xchg
xchg
and
mov
addr16
test
push
in
dec
fsubr
test
addr16
add
dec
jne
dec
push
movsb
sub
cmpsb
sub
out
sub
mov
push
jecxz
jno
cmc
cmpsl
xor
in
sub
adc
cltd
xor
add
pop
orl
fwait
jp
push
inc
cs
push
cld
cltd
xchg
test
push
xchg
daa
out
dec
cmp
mov
dec
test
mov
repz
iret
cmp
mov
jo
xchg
cmpsb
sbb
mov
xlat
push
add
rol
int
ljmp
mov
testb
sbb
int
pop
nop
mov
ljmp
and
add
ds
popa
cld
mov
pop
or
int3
jmp
lcall
and
mov
dec
mov
pop
insl
xorb
subl
jae
movsl
imul
fs
mov
xor
dec
push
sarb
pop
inc
dec
rorb
pop
lahf
aas
aam
sbb
pop
lods
mov
xchg
add
jb
icebp
aaa
mov
pop
pop
and
clc
jg
jns
lock
dec
jns
add
rorb
dec
ror
cmp
sub
cmpsb
aad
mov
add
int3
xchg
insl
scas
flds
xor
cld
imul
fwait
xchg
add
cs
jmp
cwtl
in
xchg
mov
push
in
sbb
sbb
xchg
push
cmp
mov
mov
fdivr
jno
mov
pushf
push
mov
mov
cmpsb
mov
dec
ja
cmp
cld
add
popa
xor
insl
cmp
inc
fisubrl
int3
fadds
adc
jp
add
fwait
pop
xchg
addr16
pop
dec
xchg
pop
pop
dec
push
je
das
call
push
pop
dec
jl
aas
xor
mov
push
cmp
in
cmpb
test
outsl
xchg
adc
in
mov
mov
jmp
sub
adcl
cmp
mov
push
ja
jp
js
jp
ret
mov
cs
pop
inc
pop
push
mov
fimuls
outsl
adcb
mov
inc
push
sbb
movsb
shr
popa
insb
test
mov
nop
cmp
dec
xor
repnz
mov
test
mov
jno
shll
or
jb
jmp
mov
dec
jo
lds
jnp
stc
outsb
je
pop
add
jge
pop
xor
mov
lods
stos
push
adc
mov
adc
inc
sub
push
inc
les
mov
les
jb
loopne
in
mov
leave
xsave
sub
sti
ror
outsl
push
mov
or
mov
xor
push
inc
jmp
mov
filds
jo
fnstsw
inc
mov
icebp
icebp
cmp
add
popf
imul
rol
scas
into
sbb
pusha
lock
mov
lret
icebp
xchg
mov
sbb
push
negb
in
rol
mov
pop
lea
and
mov
add
push
aad
scas
loope
push
push
jmp
test
mov
fstl
adc
outsb
dec
out
icebp
cmpsl
mov
pop
xchg
aam
mov
sti
out
xor
ja
loopne
mov
xor
pop
nop
sub
sub
cmpl
out
stos
es
sti
insb
cmp
stos
xor
pop
mov
imull
pop
mov
mov
pop
cmp
movsl
cs
adcb
test
loopne
adc
ret
dec
inc
xor
add
aas
adc
das
jecxz
rcr
cmp
fidivl
movsl
push
push
mov
xor
sub
adc
add
gs
push
sbbb
and
scas
lods
xor
xchg
and
mov
scas
jmp
mov
jecxz
ljmp
mov
push
imul
aad
stos
aad
into
cli
rorb
ss
shr
xchg
out
cmp
jecxz
test
xlat
xchg
add
lods
gs
in
mov
mov
push
js
cli
les
lcall
jb
push
jne
mov
dec
inc
xchg
push
insb
lret
orb
outsl
cs
pop
stos
out
ret
insl
inc
aaa
mov
iret
or
fld
push
cwtl
repnz
mov
loop
sbb
mov
cmp
fucomi
sbb
mov
push
push
lcall
fisubs
out
mov
lock
pop
xchg
mov
dec
popf
push
imul
mov
iret
sub
lcall
mov
shlb
mov
test
rcll
sbb
shr
cmp
pop
js
repnz
jecxz
pop
data16
ljmp
pop
in
fsubs
fidivl
repz
mov
push
cmp
dec
shlb
cld
mov
or
into
push
xchg
adc
aam
jbe
mov
ret
mov
cmp
loop
ja
loop
les
enter
pushf
sub
pop
cwtl
repz
and
cli
push
xchg
loope
fs
inc
sub
lea
movsb
cwtl
push
dec
dec
add
and
adc
arpl
jmp
pop
fs
pop
xchg
out
push
gs
lahf
mov
mov
xlat
das
sbb
jns
mov
jae
push
gs
aad
mov
pop
xor
sahf
lods
mov
jns
cltd
sbb
cld
cmc
dec
mov
push
pop
fcmovnbe
adc
outsl
scas
das
push
repz
mov
leave
pop
pop
dec
mov
sub
mov
sub
push
dec
cltd
ja
outsb
sti
mov
mov
mov
pop
rcl
out
enter
push
fwait
movsl
lea
scas
mov
push
or
mov
pop
xchg
nop
fwait
push
in
fnstcw
fcom
dec
push
imul
adc
inc
inc
aaa
fiadds
jbe
xor
sbb
les
pop
xchg
cmp
jl
hlt
jne
and
fs
cmpsb
enter
push
notl
std
sbb
lret
and
shrb
lea
repz
rcll
ficoml
jl,pn
push
repz
mov
pop
xor
push
scas
ret
int3
aas
test
jb
aaa
outsl
fdiv
pushf
xor
inc
xor
pop
sahf
insb
push
imul
mov
or
stos
or
repnz
orb
addl
addb
jo
ljmp
add
lahf
imul
inc
incl
je
insl
fdivrs
outsl
mov
xor
std
in
mov
push
sbb
mov
std
mov
movsb
repnz
sahf
add
stos
addb
loop
xor
fldl
mov
push
jae
push
insl
test
jnp
pop
mov
clc
cmp
sahf
mov
icebp
push
cmp
pop
sbb
jge
xchg
divb
push
mov
rorb
pop
pop
cmc
aad
mov
or
sub
xor
push
stos
inc
mov
lret
mov
daa
outsb
dec
cmp
xor
jp
stos
popa
pop
xchg
mov
mov
add
fildl
sub
sub
adc
int
mov
xchg
cmp
scas
nop
sub
lea
inc
mov
sub
push
and
mov
jns
imul
add
test
jno
xor
out
mov
lods
sub
dec
testl
xor
mov
mov
pop
lahf
mov
out
xor
ret
and
and
adc
les
je
pushf
loope
aaa
pop
adc
and
jnp
add
lcall
mov
mov
push
ret
rcr
pop
js
or
jae
xchg
int3
push
repz
pop
cmp
lds
mov
ss
sbb
xchg
mov
mov
inc
and
outsl
push
lret
pop
mov
add
jnp
lret
scas
or
mov
in
inc
sarb
add
cmp
sti
aam
popa
out
pop
test
and
mov
inc
scas
jmp
outsl
ja
mov
jnp
movsl
cmpl
cmp
mov
pop
in
mov
xchg
movsb
or
loopne
nop
adc
cmc
outsb
insb
xor
mov
js
outsb
push
mov
sub
je
std
inc
add
fnstcw
inc
js
xor
push
mov
mov
lods
ds
sbb
add
inc
mov
jle
pop
out
nop
push
pop
add
leave
jmp
dec
sarb
push
jo
flds
imul
orb
repz
mov
adc
mov
pop
jne
mov
loopne
xlat
iret
fldenv
fs
test
movsb
stos
jmp
pop
and
adc
fwait
mov
xor
sbbl
lea
inc
call
gs
loopne
jle
dec
test
pusha
cwtl
dec
sub
ja
xorb
mov
add
out
mov
push
xchg
mov
das
fistl
mov
mov
or
inc
sbb
adc
mov
push
and
add
cli
or
mov
call
in
mov
pop
mov
in
sti
aad
mov
mov
push
test
pop
popa
dec
sub
cs
adc
xor
sarl
iret
es
push
or
test
lret
push
pop
iret
push
in
leave
sbb
ljmp
pop
cmp
testl
xor
iret
pop
and
les
mov
inc
lods
mov
loop
dec
cld
iret
xor
es
jecxz
push
fwait
adc
add
mov
dec
out
ljmp
adc
pop
inc
push
jg
sbb
lods
mov
add
int
out
les
dec
dec
jmp
inc
dec
adc
dec
dec
out
rclb
add
and
cmp
ja
or
push
sbb
cmpsl
lcall
mov
adc
inc
mov
addb
push
cltd
popf
arpl
cmpb
inc
inc
test
call
rclb
out
ds
adc
dec
xchg
cltd
inc
lcall
cmp
cld
sub
out
mov
fnstenv
xor
inc
add
aas
enter
daa
aaa
test
ds
fsubp
fs
ret
or
xor
js
stos
adc
pop
adc
inc
mov
sub
addr16
jge
pushf
call
xchg
jbe
push
push
lds
out
outsb
pop
ljmp
push
cmp
ljmp
mov
loopne
leave
lret
xor
fxam
pop
fucomip
or
lea
xchg
jmp
jecxz
in
jbe
jle
shlb
es
pop
pop
push
or
sarl
scas
mov
rcrb
cmp
push
jl
jbe
xchg
movsl
mov
mov
lret
enter
xchg
in
push
cli
loop
jl
or
cmp
jns
in
xchg
lds
dec
sbb
xchg
mov
popf
ret
add
pop
jnp
insl
out
mov
mov
mov
es
cmovo
dec
mov
mov
cmpsb
ret
js
iret
hlt
pushf
xchg
mul
bound
mov
pop
stc
mov
xchg
mov
bound
loope
out
xor
ds
sub
faddl
sub
jecxz
shl
push
daa
mov
sarl
out
jl
adc
mov
loope
fisubrl
int3
sbb
int3
adc
push
xchg
xchg
fsubrp
or
addr16
sti
inc
mov
cli
or
scas
dec
in
add
stos
dec
cmc
jmp
dec
mov
or
mov
icebp
loope
inc
out
sbbl
dec
iret
pop
inc
and
sbb
fwait
push
sub
pusha
test
out
adc
out
test
add
idivb
adc
xor
mov
lods
add
mov
or
cmpsl
sub
cmc
lods
dec
or
jmp
fcomps
mov
mov
push
push
fcoms
arpl
jbe
fsts
lret
mov
inc
test
hlt
icebp
push
push
in
loope
sbb
jmp
and
gs
and
jge
movsl
mov
pusha
jmp
es
pop
xor
arpl
jp
sbb
std
in
pop
mov
fs
mov
add
push
xor
repz
xor
xor
sbb
push
push
sbb
sub
js
mov
jle
out
push
or
testb
jge
pushf
jmp
out
push
mov
jg
enter
fsub
data16
and
mov
inc
and
push
pop
and
stos
es
and
xor
sub
and
dec
xchg
mov
test
pop
mov
pop
out
push
sub
subl
and
aad
lahf
ds
cmp
mov
adc
daa
inc
jp
into
shll
icebp
cmp
xor
and
xchg
aaa
jb
mov
dec
insl
ds
and
push
and
mov
sub
fwait
xor
push
dec
xchg
xchg
fmull
xor
adc
dec
push
xor
icebp
fbld
mov
movsb
and
adc
cmp
push
mov
mov
adc
add
cmp
imul
xor
xor
xorl
aaa
xchg
sbb
arpl
roll
jae
ljmp
sub
dec
test
xchg
lahf
pushl
mov
fmuls
movsl
scas
adc
pushl
ss
fs
mov
fisttpll
cs
cld
mov
popa
xor
xchg
mov
mov
mov
sbb
jle
outsb
dec
push
pop
push
imul
cltd
into
test
sahf
or
dec
sub
outsb
dec
push
pop
push
imul
cltd
into
test
sahf
fmuls
or
dec
sub
outsb
dec
push
pop
push
push
ficomps
out
leave
sahf
negb
in
jle
sbb
xchg
shl
xchg
roll
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ret
out
jb
iret
test
and
push
mov
ret
pop
loop
xchg
aas
subl
incl
jae
iret
adc
and
xchg
pop
loop
xchg
aas
subb
pop
mov
out
jb
iret
adc
and
xchg
cmp
inc
xchg
insl
int
and
inc
mov
mov
sahf
cltd
js
dec
leave
inc
adc
std
or
movsb
in
sub
pop
test
and
adc
iret
cmpsl
xchg
cmp
ret
jge
mov
cmpsl
inc
std
jge
add
mov
adcb
sub
inc
out
xor
out
xchg
ljmp
adc
and
movsb
add
repz
rcl
mov
pop
mov
xor
mov
and
xorl
shrl
shll
loopne
subb
out
repnz
lret
outsl
sub
dec
outsl
dec
out
sub
or
out
jb
iret
adc
and
repnz
loop
xchg
aas
subb
pop
mov
out
push
mov
cmpsb
push
shll
jne
inc
fistpll
aaa
xchg
out
into
pop
fistps
add
push
fildll
mov
xor
pop
popl
xchg
fstps
loop
mov
mov
push
mov
and
repnz
loop
xchg
aas
subb
pop
mov
out
jb
iret
adc
and
repnz
loop
xchg
aas
subb
pop
mov
cmpsb
ljmp
mov
or
inc
loope
dec
lds
mov
sub
xchg
cmp
test
cmp
sub
or
push
and
test
ljmp
lcall
jno
stc
mov
loope
dec
imul
and
loop
jg
push
mov
iret
jbe
xchg
aaa
and
adc
stos
mov
pop
bound
rcll
aad
data16
xchg
outsl
xchg
out
std
mov
rol
jge
pop
dec
adc
adc
cwtl
cltd
sub
aaa
rcrl
push
push
call
mov
outsb
and
xchg
jg
add
ljmp
cmp
or
push
int
mov
adc
popa
jle
inc
arpl
fdivs
mov
jg
shll
lcall
jp
in
jnp
ljmp
aas
fnstcw
adc
aas
and
xchg
int3
pop
ret
add
pop
mov
mov
imul
add
repnz
scas
lods
sub
in
jp
aas
pop
mov
adc
mov
test
fcompl
sahf
jae
pop
push
shll
call
out
cmpsl
enter
mov
push
mov
lods
gs
cmp
add
jno
shlb
popa
or
push
sbb
es
xchg
adc
outsl
inc
in
into
decl
mov
rcpps
fsubrl
xchg
mov
jns
sub
xchg
jge
mov
sub
dec
push
sbb
jb
mov
and
jae,pt
xchg
movsb
xchg
sti
mov
pusha
fistpll
hlt
cmpsl
cmc
int3
mov
and
mov
cwtl
mov
xor
aam
inc
fisttpll
sbb
mov
scas
push
mov
jb
leave
and
cmp
pop
jb,pt
aas
dec
pushaw
fstpt
pop
testb
xchg
cmpsl
adc
cmp
sub
insl
fiadds
mov
push
cmp
pop
xor
or
xor
lcall
inc
mov
mov
mov
xchg
pushaw
lcall
loope
push
add
scas
xchg
jns
pop
adc
adc
rcll
xlat
inc
push
xchg
xchg
jae
lahf
and
or
outsb
insb
adc
mov
and
mov
nop
xor
jle
pop
lcall
xlat
xor
mov
roll
pop
push
push
mov
mov
cmp
mov
dec
mov
lahf
ljmp
sbb
rcr
pop
add
divl
sti
test
xchg
in
inc
rol
mov
xor
adc
leave
or
mov
or
xchg
adc
jns
flds
and
int3
mov
imul
xchg
jbe
cmpb
sbb
mov
pop
prefetch
fimull
push
pop
sbb
ja
clc
fucom
es
fsubr
cltd
icebp
scas
dec
or
jae
fmuls
sbb
sub
and
outsl
jno
push
xchg
dec
xchg
loop
imul
sbb
xor
mov
mov
push
pop
inc
out
lods
mov
orb
xchg
adc
inc
xchg
lret
negl
ss
daa
repz
test
in
lods
and
iret
jp
xchg
mov
jb
xor
cmp
out
lcall
nop
in
in
mov
cs
cltd
out
mov
push
xchg
mov
mov
icebp
fcomps
fnsave
mov
pushf
mov
test
mov
shlb
outsb
shlb
fdivp
out
sbb
mov
dec
aad
push
xchg
sub
psubsb
lods
mov
dec
data16
dec
xor
xor
les
inc
popf
mov
je
inc
mov
mov
gs
xchg
cmp
data16
pop
loope
pop
mov
cmovne
ljmp
cmp
sub
mov
test
push
dec
cwtl
sub
or
push
fwait
aaa
sub
sbb
ljmp
cld
sbb
xchg
xlat
adc
rorl
mov
mov
or
insl
dec
mov
clc
add
push
jnp
ss
jns
out
mov
or
pushf
mov
idivl
add
mov
sar
and
lock
fs
pop
jmp
in
aaa
mov
mov
mov
ret
jnp
push
idivb
mov
pop
mov
aad
lds
rcll
ljmp
loop
and
dec
mov
jnp
scas
mov
ret
pop
sti
cltd
andb
into
jo
pop
mov
shlb
into
push
push
push
pop
aam
imul
adc
and
and
jno
cld
inc
sub
test
pusha
inc
pop
xchg
lea
inc
push
add
push
push
pop
cmp
testb
sub
cmp
sbb
mov
shr
scas
mov
fbstp
inc
dec
push
out
aaa
add
push
test
dec
lcall
jns
fisubrs
cmpsb
leave
fists
push
cli
daa
out
mov
loopne
popa
lcall
pop
fistpll
mov
ret
cmpsb
outsb
sahf
repz
jns
rcrl
pop
je
fidivl
mov
mov
jbe
mov
jb
push
add
fprem
faddp
push
jecxz
or
cmp
sti
and
test
or
clc
je
dec
scas
gs
push
mov
arpl
jg
jl
jb
pushf
pop
outsl
pop
jmp
pushf
imulb
mov
and
es
mov
add
mov
pop
or
loope
in
sub
adc
sbb
xorl
dec
mov
push
xchg
dec
ret
pop
inc
scas
mov
mov
out
mov
dec
cli
mov
xchg
push
movsl
hlt
push
or
mov
repz
xor
ror
daa
out
sahf
xor
in
inc
mov
or
xchg
repnz
inc
movsb
xchg
jns
mov
movsl
xor
jb
hlt
mov
nop
mov
leave
pop
ds
mov
sbb
repnz
push
adc
pop
les
movsl
jns
loope
inc
call
aaa
ret
dec
sub
jmp
sub
frstor
jno
sub
dec
cmp
repz
fstl
cld
js
mov
stos
adc
and
fbstp
adc
or
imul
cwtl
subb
cmp
inc
jnp
mov
push
mov
les
test
cmp
jbe
jae
or
leave
jge
int
shll
int3
and
stc
pop
inc
pop
push
mov
les
cmp
inc
pop
or
data16
mov
jbe
add
test
add
xchg
mov
ljmp
mov
scas
subps
xor
fcoms
dec
dec
xor
pop
jg
dec
jnp
inc
scas
push
pop
rcl
les
mov
fdecstp
push
stos
pushf
sub
and
cmp
jge
enter
push
or
and
lret
outsb
push
and
cmp
inc
mov
push
sub
pop
rclb
imul
test
faddl
scas
inc
and
mov
mov
fwait
or
mov
inc
add
cmp
pop
stos
arpl
and
outsl
cltd
aam
inc
inc
lock
adc
enter
in
xchg
mov
adc
adc
jge
hlt
adc
pop
mov
nopl
xchg
mov
xor
push
push
dec
or
or
ds
in
dec
fsubrl
lock
outsl
xchg
xor
mov
push
outsl
scas
inc
lret
jp
aad
push
dec
lea
sahf
cmpsl
dec
bound
sbb
mov
inc
ds
repz
nop
movsl
sub
jl
sub
dec
dec
cmp
jno
stos
into
ljmp
ret
xchg
int3
shll
lea
fisttpll
cmp
and
in
fnstsw
xchg
jp
cli
pop
std
mov
loope
sbb
pushf
dec
imul
sub
inc
jle
pop
inc
cli
add
add
movl
dec
fsts
push
test
dec
add
xchg
dec
fcoml
push
xor
lods
inc
pop
mov
scas
loope
sbb
mov
adc
pop
sbb
pop
add
out
add
xor
es
or
mov
cmpsb
roll
mov
stos
adc
jae
push
in
mov
xchg
mov
rclb
wrmsr
lea
mov
insb
mov
mov
push
rolb
dec
data16
ret
mov
mov
pop
push
sahf
in
jg
mov
icebp
mov
push
pop
sbb
test
jne
sahf
jecxz
or
aas
icebp
stos
cmc
sbb
add
xor
sub
inc
insb
inc
out
mov
test
dec
out
adc
jbe
in
in
nop
mov
add
shll
xchg
sbb
or
push
pop
loop
or
cmp
mov
in
stc
or
lahf
pop
loop
sahf
inc
pushf
push
loope
xlat
inc
leave
iret
xchg
ljmp
aas
xor
repnz
out
mov
fidivs
inc
push
cmp
push
mov
xchg
fs
adc
lea
dec
das
and
cwtl
inc
shll
jge
sub
fsubs
aaa
out
and
cmp
enter
dec
orb
scas
loope
xchg
sub
sbb
and
adc
cmp
or
push
jb
dec
pushf
jne
ja
loope
adc
pop
pop
push
aam
jge
xor
out
daa
cmpsb
int3
fcoml
lock
mov
pop
push
add
xchg
cmpsl
or
leave
data16
ror
xlat
adc
push
jecxz
adc
repz
sub
push
in
and
xchg
or
mov
lods
push
add
cmc
fwait
cmp
les
test
cmpsl
fnstcw
fnstcw
push
jmp
cli
out
ds
push
test
scas
fmuls
mov
bsf
icebp
mov
xchg
lods
pop
mov
arpl
stos
lods
xchg
mov
fmull
sbb
or
scas
jb
push
aam
sti
shlb
daa
in
aas
xor
cwtl
and
leave
sub
sbb
push
loopne
shl
jnp
xchg
mov
rcrb
test
push
sub
orb
cmp
stos
xchg
lret
dec
fsubl
lret
mov
sub
xchg
daa
movaps
mov
dec
jns,pn
ja
cmp
jns
fnstenv
push
lret
mov
mov
push
shll
addb
add
mov
dec
je
sbb
lret
sti
and
js
xchg
inc
dec
jne
pop
and
xchg
sub
mov
mov
dec
aam
dec
adc
popa
scas
aad
dec
adc
dec
hlt
cmp
pop
pop
push
sub
xchg
mov
fsts
inc
pop
scas
and
ret
jb
push
shlb
adc
out
cmp
mov
push
mov
mov
jnp
lods
adc
add
adc
data16
loop
ret
test
sbb
clc
rcrl
ds
mov
mov
mov
pushf
add
clc
dec
add
sub
xor
xlat
fldenv
repnz
sub
mov
mov
out
push
in
sbb
popa
xlat
in
stos
das
not
scas
xchg
leave
mov
stc
into
dec
push
or
dec
inc
fistl
pop
mov
test
popa
scas
clc
nop
jle
std
jle
mov
jbe
push
mov
jne,pt
ss
cmp
xchg
out
or
mov
addl
jbe
iret
stc
fs
ret
lahf
mov
pop
dec
xor
mov
and
sbb
fs
cwtl
lcall
mov
das
ret
shll
shlb
add
xchg
int
sbb
add
jmp
jno
adc
xor
subl
and
inc
rcrb
cmp
dec
mov
in
loope
popa
push
pop
cmpsl
or
test
jl
inc
addr16
out
and
xchg
ret
addr16
lret
ret
mov
add
or
mov
sbb
js
and
insl
pop
pop
ljmp
xor
pusha
testb
in
inc
pop
and
jbe
or
jle
stc
cmp
ljmp
pop
jecxz
sbbb
insb
inc
mov
cld
addl
jecxz
adcb
call
aaa
movsl
ljmp
xchg
pop
int3
aad
mov
aad
pusha
into
inc
xlat
push
add
lock
repz
das
loope
loop
add
daa
pop
daa
push
sbbl
jl
mov
push
cld
cmp
or
pop
fstpl
xchg
pushf
leave
or
sbb
into
je
xchg
sbb
stos
jbe
ja
loope
sub
xor
rorb
push
xor
aas
clc
push
ficompl
outsb
shll
xchg
in
xor
or
dec
push
cli
mov
mulb
xor
or
lds
cmp
cmp
jb
stos
les
fmuls
repnz
pop
sbb
adc
daa
lds
push
mov
push
loopne
loop
mov
jnp
fcom
mov
adc
mov
jne
push
cmpsb
popf
loop
daa
pop
pop
xchg
movsl
jle
out
roll
sarl
mov
mov
cmp
sub
out
adc
mov
call
addr16
pop
cmpsb
pushf
xor
sub
dec
and
xchg
xchg
cmc
sub
push
pop
mov
cmp
push
jmp
add
and
mov
push
inc
xor
xor
jo
mov
aad
test
jb
inc
jae,pt
push
pushl
inc
fcoms
inc
mov
nop
mov
add
or
mov
jns
jl
fidivrl
je
mov
out
mov
mov
insl
xor
or
imul
lods
cmpsl
adcb
lret
sbb
cmc
cmpsb
ss
cli
pop
and
mov
int
ficoml
loop
jb
xlat
fdivp
lcall
ljmp
imul
push
jns
dec
std
in
or
aam
dec
call
inc
addr16
xchg
popf
daa
inc
popf
das
mov
mov
pop
cmp
enter
test
inc
xchg
test
pop
sbb
daa
and
inc
mov
int
cmp
xor
add
adcb
push
mov
mov
pop
mov
dec
mov
into
fcomi
or
outsb
loop
sub
loope
in
or
fbld
mov
cmc
shlb
sbb
int
dec
mov
jb
cli
cmp
pushf
cmpsb
inc
cmpsb
push
das
out
repnz
std
pop
push
clc
and
sub
or
popa
xor
cli
test
xor
hlt
pop
dec
xchg
jb
xor
cmpsb
dec
xchg
das
xor
and
lahf
dec
fldcw
loop
mov
mov
cwtl
loope
pop
mov
push
es
jns
sub
sub
and
ljmp
sti
jne
insl
aaa
adc
cmc
cmpsb
jae
add
cli
cltd
cmpsl
xlat
mov
xchg
call
push
bound
pop
mov
dec
inc
fidivrs
and
mov
stos
push
pop
jb
fs
cmp
movsb
jmp
pop
test
lret
adc
add
push
cmp
test
mov
leave
in
jno
mov
sbb
test
testl
ret
lock
rclb
pop
jne
nop
lret
hlt
fisttps
mov
stc
add
add
mov
fwait
scas
outsl
mov
jbe
mov
add
jl
push
movsl
and
popa
cmp
insl
jmp
cmp
jecxz
inc
jg
andb
insb
mov
aad
cmp
cli
fisubs
std
mov
stc
bound
mov
fldt
pushf
in
jge
jl
inc
or
dec
popa
mov
pop
jg
cli
cs
test
lods
std
addb
mov
insl
add
inc
mov
jnp
xchg
mov
inc
pop
mov
mov
push
fs
mov
daa
filds
leave
stos
and
ret
mov
int3
les
jne
jae
scas
mov
mov
mov
or
lea
jg
jle
mov
jmp
mov
fadds
fsubs
lods
xchg
into
adc
adc
add
imul
loopne
lahf
call
inc
sbb
popa
ret
pop
fildl
push
cli
out
popa
sbb
or
and
shrl
lahf
push
sub
sub
mov
gs
adc
add
mov
pop
mov
inc
xchg
loope
cwtl
xchg
push
adc
xor
sub
and
cmpsl
inc
mov
hlt
sahf
adc
cmpl
es
dec
mov
cmpb
call
jno
ret
outsl
ja
mov
pushf
xor
push
cmp
inc
adc
call
mov
and
inc
add
push
push
js
dec
inc
pop
aam
inc
jns
xor
or
rcrb
cs
sbb
fdivl
in
and
mov
in
mov
xchg
dec
fwait
adc
jb
xchg
mov
mov
insl
lock
shr
daa
xchg
into
mov
and
mov
xchg
shrb
sub
mov
pop
out
shlb
adc
das
outsb
push
or
loope
adc
std
outsb
lock
in
lcall
int
stc
in
cmpl
fldenv
in
in
nop
sbb
shr
jns
fistps
rcr
loope
cli
xor
scas
push
mov
and
dec
sbb
clc
movsl
in
dec
push
pop
movsb
jno
push
stc
add
out
push
cmp
pop
xor
ljmpw
loopne
iret
pop
mov
daa
mov
jecxz
sahf
xchg
mov
push
and
shr
je
mov
div
stc
or
push
add
call
imul
mov
mov
test
pop
jle
ds
mov
out
adc
scas
jns
mov
popa
sahf
push
mov
scas
sub
insl
sbb
mov
call
mov
mov
xlat
ss
pop
mov
xor
imul
mov
cmc
jns
add
nop
sub
mov
adc
idivl
dec
dec
and
inc
mov
fmull
lret
movsb
xor
adc
stc
or
xor
fidivrs
and
or
sbb
nop
nop
mov
fldenv
je
leave
mov
lods
enter
test
int3
xor
and
jnp
sub
cmp
repnz
call
fwait
stos
adc
pmulhuw
sub
hlt
mov
hlt
push
push
clc
dec
aad
mov
cmp
pop
in
mov
inc
movsb
sbbb
and
lcall
es
xor
das
mov
outsl
jne
rol
jl
mov
push
cmp
icebp
ja
pop
xchg
pop
aam
adc
pop
mov
jp
push
movsb
std
xor
xchg
mov
negl
push
popf
test
mov
push
push
lret
cmp
aam
cwtl
push
inc
test
or
adc
dec
jge
pop
xchg
sbb
inc
push
xchg
cld
mov
stos
nop
fs
scas
cld
scas
cmc
inc
xor
jb
pop
cmpsb
xor
lea
sbb
xchg
mov
xlat
jl
and
je
push
movsb
popa
movsb
repz
cmc
in
daa
pusha
sahf
xor
rol
and
mov
lahf
repz
aas
jb
ficoml
sub
inc
mov
push
lock
inc
mov
inc
xor
or
sar
roll
stos
xor
jns
cmp
cltd
jmp
rcrb
mov
loop
in
pop
rol
pop
clc
sbb
fsubrp
mov
add
mov
mov
js
sub
push
lods
push
loop
inc
fcmovbe
inc
lcall
lea
insl
dec
fildll
mov
negb
xorl
and
jbe
mov
mov
repz
shrb
dec
das
dec
scas
mov
or
jecxz
mov
aas
iret
test
enter
pop
dec
stc
adc
add
pop
and
jnp
out
sbb
pop
lds
subl
movsb
push
das
pusha
cwtl
xchg
aaa
je
mov
adc
mov
xchg
add
pop
fcmovne
in
pop
call
loopne
xor
xchg
call
pop
xchg
pop
sbb
cmp
jns
fnsave
jo
add
xor
repnz
jne
mov
in
xor
stc
pop
jnp
and
addr16
lods
mov
paddd
bound
inc
mov
dec
jl
and
bound
cmp
lods
out
jo
popf
ret
out
iret
fbld
adc
and
repnz
loop
xchg
aas
subb
pop
mov
out
jb
iret
adc
and
repnz
loop
xchg
aas
subb
pop
mov
outsl
jb
iret
adc
and
repnz
loop
xchg
aas
subb
pop
mov
out
jae
iret
adc
and
pop
pop
loop
in
or
dec
loopne
lock
adc
add
xor
and
fldcw
cmc
sbb
sbbl
mov
shrb
dec
sbb
or
sti
adc
add
xor
and
jb
push
jnp
imul
mov
or
sti
or
sbb
sub
cmp
push
js
xchg
dec
mov
cmp
lea
cmpsl
inc
jb
and
sbb
iret
shlb
outsb
dec
dec
or
pusha
mov
and
popf
xchg
jl
loop
pop
les
xchg
stos
mov
imul
imul
xchg
aas
sbbb
pop
imul
jle
or
mov
lret
jno
push
mov
out
jb
jl
dec
and
out
imul
ds
or
cmp
xor
loop
stos
aaa
sbb
or
dec
sbb
aam
dec
mov
adc
sbb
inc
test
fcomps
push
jae
xor
fwait
call
imul
and
mov
aaa
add
lret
and
jb
jnp
xchg
imul
lret
sbb
or
mov
push
mov
and
push
mov
jnp
push
sbbb
cmp
dec
mov
inc
cmpsl
dec
mov
push
fsts
out
out
xlat
dec
mov
ja
jle
sahf
adc
add
stos
inc
fwait
jb
bound
imul
shrb
ret
or
sti
adc
add
xor
and
jb
bound
imul
shrb
ret
or
sti
adc
adc
in
inc
fldcw
jge
or
pop
stos
jb
mov
mov
cmpsl
testb
and
add
out
push
andl
fcmovne
out
add
xchg
or
xlat
call
jne,pt
sbb
inc
scas
in
pop
int
scas
clc
push
dec
mov
xchg
inc
cmp
repnz
movsl
ljmp
lcall
dec
in
jp
or
aam
xchg
jns
or
gs
fs
xchg
popf
movsb
loop
sarl
mov
add
outsl
mov
mov
aas
gs
test
adc
out
aad
cmp
pop
and
pop
pop
adc
rcll
mov
rol
mov
les
int3
jmp
mov
pop
dec
inc
xor
push
cmp
dec
cmp
cvtps2pi
daa
adc
ds
or
adc
rcr
sbbb
mov
subl
or
sub
arpl
stc
dec
into
jo
mov
adc
adc
scas
lret
sbb
iret
dec
stos
arpl
repz
or
shlb
jae
fsubrs
add
dec
xchg
xchg
push
imul
mov
xchg
dec
outsl
test
in
xchg
mov
cs
out
outsb
arpl
arpl
aad
ds
mov
sub
gs
popf
cmpsl
push
jle
sbb
pusha
stos
cltd
mov
ds
mov
imul
lods
push
jp
fists
loope
data16
mov
shrl
fmuls
or
push
mov
jle
jnp
test
mov
fists
fs
scas
das
mov
aad
shlb
mov
xor
imul
js
out
xor
mov
mov
xor
cmp
xchg
sbb
das
aad
js
dec
cli
shll
push
xor
xlat
and
sub
mov
jae
dec
hlt
dec
cmp
xor
or
xchg
idiv
mov
pop
addr16
cmp
ret
icebp
xchg
loopne
push
test
decb
dec
inc
mov
add
aam
push
stos
popa
clc
and
stos
adc
add
outsb
lret
push
lea
lret
mov
sti
mov
enter
jae
stos
pop
mov
dec
mov
lea
xchg
xor
lods
ret
and
sbb
or
mov
addr16
xor
lods
cs
mov
inc
sub
jne
cltd
je
je
insb
aas
aad
xor
lods
fsubr
out
and
int
in
dec
xlat
push
pandn
cltd
scas
into
bound
sub
into
add
popf
or
xchg
mov
scas
loope
mov
pop
imul
scas
jl
pop
jecxz
testb
outsl
pop
or
rorb
mov
aas
sub
xor
pusha
test
sahf
push
inc
jg
stos
push
mov
aad
out
in
iret
aam
lods
pop
mov
jno
clc
movsl
lcall
xchg
push
mov
push
movsl
push
cwtl
mov
sub
jl
mov
cmpsb
or
jo
xchg
das
dec
rorl
clc
fucom
cmpsb
cld
jl
outsl
pop
faddl
or
push
cmp
or
inc
int3
and
pop
mov
pop
enter
repz
sbb
dec
sbb
imulb
mov
adc
jo
xor
sarl
mov
jmp
mov
dec
arpl
cs
dec
pop
jne
inc
iret
mov
orl
inc
lret
adc
mov
popf
insb
loop
cwtl
xchg
pushf
add
aas
sub
cmp
ljmp
aad
inc
xchg
cmp
push
lea
xchg
mov
sbb
std
int
pushf
or
jns
lret
push
jae
add
fistpll
out
add
or
out
cmp
lods
dec
pop
push
in
test
fmul
out
adc
insl
sbb
or
pop
jge
pop
xor
cmp
rorb
jns
mov
fsub
incl
push
xor
mov
pop
arpl
enter
ret
les
lahf
inc
ret
dec
mov
mov
bnd
push
adc
out
pop
nop
pop
sbb
fbld
mov
cltd
or
movsl
add
pop
sbb
push
out
jb
push
xchg
inc
pop
xchg
hlt
xlat
fidivl
sbb
shrb
jmp
or
dec
ret
mov
cwtl
lods
mov
adc
mov
lahf
lock
xchg
inc
hlt
iret
xchg
push
imul
jmp
mov
outsb
mov
ret
popa
jl
mov
sub
add
mov
insb
movsl
xor
xor
xlat
sbbb
shrb
or
sbb
in
mov
sbb
test
insb
cmp
inc
mov
stc
push
lods
imul
cltd
xor
cld
mov
xchg
fstp
and
mov
test
popf
jecxz
mov
mov
mov
pop
in
dec
xchg
sahf
mov
or
iret
roll
gs
orb
pop
test
add
in
outsl
xor
iret
mov
mov
aaa
and
or
pop
icebp
jae
sub
out
and
or
cmpsb
cltd
cmp
sbb
push
movsl
imul
xchg
xchg
mov
orb
movsl
enter
or
dec
cmp
jp
lds
stc
fwait
xlat
adc
cmp
or
cmp
push
imull
adcl
call
pusha
aad
cmp
sbb
sbb
pop
insl
ljmp
sti
push
jle
sbbl
adc
mov
mov
inc
test
dec
es
call
jo
insl
lods
sub
icebp
jo
push
cmp
cmp
or
pushf
rorb
dec
jo
lods
sbb
loop
cli
sbbl
mov
dec
xchg
mov
mov
pop
cld
les
fwait
in
cmp
inc
js
gs
out
insw
or
scas
dec
xor
js
loope
add
test
mov
psadbw
adc
jae
aas
xor
mov
addr16
dec
ret
mov
popa
mov
add
lea
nop
ja
outsl
cmp
es
addl
adc
push
dec
call
dec
stos
pop
mov
or
xchg
inc
xchg
aad
subl
xor
or
adc
nop
shr
fcmovnb
std
repz
popf
and
fldenv
repnz
movsl
xchg
adc
add
push
inc
or
adcb
inc
jecxz
mov
xchg
shr
cwtl
sbbl
rorl
jnp
sub
push
sbb
mov
dec
mov
jg
std
jmp
sbbb
dec
jg
shr
lods
cmc
shrb
mov
xchg
adc
imul
nop
add
adc
dec
rol
scas
lret
xchg
mov
pop
shll
inc
xchg
dec
adc
sub
or
push
inc
aaa
sub
sbb
jge
das
mov
jmp
into
loopne
outsb
xor
fsub
pop
xor
into
repnz
xchg
adc
or
ret
shlb
mov
std
mov
add
jo
stos
push
sub
mov
xor
pop
call
xor
in
mov
push
std
test
test
das
insl
and
shrb
mov
pop
cmp
push
cmp
adc
jecxz
push
sub
movsl
dec
pop
jo
jae
ljmp
add
add
jge
nop
dec
and
xchg
ja
mov
clc
shrl
mov
jb
push
xchg
sub
ret
cmp
fsub
loope
xor
xchg
dec
dec
inc
jmp
mov
nop
sub
jg
ret
adc
ds
scas
shrl
push
add
arpl
stc
push
cmpsl
clc
add
int
stos
mov
push
push
pop
push
sbb
or
adc
add
into
mov
repnz
mov
inc
out
jo
sbb
adc
or
lea
xor
mov
mov
mov
xchg
adc
cmpsb
and
ror
cvtps2pi
int
cmp
test
scas
aaa
pop
or
in
jle
pop
mov
mov
xor
pop
scas
int3
rorl
popf
sbb
ja
xor
cltd
or
mov
push
push
fwait
cwtl
pop
addr16
sub
int
stos
push
inc
mov
test
inc
out
sbb
scas
iret
ja
jb
mov
int
pop
pop
mov
or
pop
jecxz
sub
pop
sbb
mov
and
daa
loopne
and
cld
bound
inc
inc
stc
jne
getsec
iret
sub
adc
out
ret
rcrl
cmc
and
xrelease
inc
insb
cmp
shll
mov
xor
jle
mov
mov
pop
andb
push
lahf
lds
push
nop
daa
out
sbb
mov
je
sub
sub
cli
ja
rcrl
gs
jae
push
clc
mov
lea
xchg
push
mov
push
pop
inc
dec
scas
imul
lods
in
pop
dec
sbb
in
inc
xor
lods
push
test
xchg
adc
pop
pop
sbb
fildll
mov
iret
xchg
pop
sub
sub
mov
les
into
jo
sbb
inc
js
jnp
fwait
test
out
dec
xchg
cmp
and
dec
sbb
pusha
ja
cs
dec
arpl
push
mov
xrelease
pop
stc
lods
and
push
push
sub
mov
mov
repnz
mov
adc
js
f2xm1
ret
cmpsb
adc
pop
xchg
enter
mov
or
xor
pop
mov
imull
mov
jns
mov
popa
sbb
sub
adc
dec
imul
iret
mov
jp
mov
rolb
push
movsl
mov
and
test
lds
mov
sbb
mov
insb
add
mov
add
mov
mov
out
sarl
paddw
ja
xor
xchg
mov
mov
dec
daa
cmc
int
int
adc
int3
jle
leave
sbbb
insl
push
adc
jmp
pop
rcll
xor
dec
outsb
xor
jmp
push
sahf
sbbl
aaa
mov
cmpsb
mov
insl
flds
shl
pop
adc
in
pushf
mov
hlt
andb
jbe
mov
das
sbb
pusha
sbb
sbb
imul
inc
cld
shrb
ret
mov
enter
int
stos
adc
lea
pop
rcll
ss
fcoms
xchg
xchg
enter
and
pop
nop
xchg
cmp
mov
dec
pop
jmp
pop
cs
sub
xchg
add
mov
sarl
sub
ja
cld
pop
ss
add
mov
dec
xchg
lahf
inc
incb
sbb
aam
push
dec
add
sti
inc
test
fisttpl
jle
or
loope
loopne
sahf
add
orl
sbb
dec
jnp
lahf
dec
adc
xorl
pop
or
leave
shr
xor
cmp
js
add
inc
out
pop
mov
sub
xchg
mov
lds
dec
imul
or
bound
mov
or
repz
into
or
inc
sub
mov
js
xor
jle
stc
in
das
into
push
mov
mov
hlt
fistl
jp
and
lds
iret
rcrl
cmp
mov
inc
movsl
repz
lret
xchg
mov
ss
sahf
xor
push
inc
popf
pop
pop
ds
pop
add
pop
push
and
pop
pop
out
pop
addr16
mov
push
sub
mov
mov
dec
les
aam
loopne
push
mov
or
fisttpl
jge
xlat
ja
pcmpeqb
lock
jb
ds
mov
and
sub
pop
inc
in
faddp
dec
nop
or
mov
call
int3
push
push
movsl
push
stos
fisubl
jnp
lret
arpl
aaa
je
fcomip
lods
cmp
mov
jp
cmc
pop
xchg
mov
loop
xchg
jmp
mov
dec
test
jle
adc
lcall
in
clc
mov
mov
mov
lea
int
pop
cmp
inc
mov
pop
jne
jmp
outsl
stc
aam
cmpb
jb
mov
aaa
mov
dec
lods
test
mov
mov
fdivrl
and
push
mov
data16
out
es
cmp
mov
and
js
jle
sbb
out
ds
mov
rcll
js
ja
mov
mov
or
jnp
pop
cwtl
dec
dec
fistps
cld
int3
movsb
cmp
das
cmp
nop
inc
adc
mov
dec
dec
daa
dec
jmp
mov
xchg
push
xchg
stos
and
push
dec
ljmp
addr16
xchg
mov
push
and
aas
pop
inc
rclb
arpl
je
leave
movsl
add
out
xor
jmp
mov
inc
enter
fnstsw
add
lahf
pop
imul
mov
sub
mov
call
in
mov
push
stc
fsubs
cmpsb
imul
dec
pop
imul
mov
icebp
scas
mov
xchg
dec
ja
jbe
adc
mov
jmp
cli
jg
pusha
repnz
jp
pop
arpl
cltd
imul
dec
xor
lods
adc
inc
push
mov
lods
repnz
std
and
std
pop
jmp
jl
sub
jno
decl
push
sub
sub
mov
dec
inc
mov
dec
pop
loopne
xor
ret
pop
imul
cwtl
inc
call
pop
fs
aam
pop
iret
pop
or
scas
ss
mov
jg
pop
aad
add
add
push
bound
and
f2xm1
xchg
pop
out
lea
cs
mov
sbb
pop
and
jbe
mov
les
repnz
in
cmp
jns
stos
mov
dec
xchg
test
jecxz
mov
adc
das
shlb
nop
pop
jbe
leave
ss
test
fidivrl
ret
cltd
xor
nop
push
push
aaa
sbb
rclb
das
dec
loop
aam
inc
push
imul
xor
add
sub
test
jno
sbb
inc
imul
dec
xlat
gs
addb
andnps
mov
or
sub
mov
mov
mov
pop
aam
decb
sub
xorb
xchg
mov
mov
aas
cwtl
insl
dec
inc
dec
jae
mov
ds
fnstcw
sub
je
shll
dec
ljmp
xchg
data16
int
sub
in
or
sub
icebp
add
mov
out
and
sub
dec
and
push
jnp
sub
jae
push
stc
test
fwait
cmp
ss
adc
pop
push
mov
mov
ret
cmpsb
jecxz
mov
ss
and
sbb
jp
push
xchg
push
inc
cmp
sbb
mov
push
popa
mov
cmp
push
lcall
cld
ret
push
jo
repnz
xlat
fnstenv
sahf
push
fsubr
pop
mov
pusha
inc
stos
cmp
sub
cwtl
jl
xchg
push
and
inc
rorl
push
out
lock
mov
cmp
ja
jb
pushf
iret
test
in
push
xchg
loope
insb
and
xchg
sub
cmp
fsubp
sbb
lods
or
into
insb
cmc
pop
xchg
into
xor
cs
sub
inc
jmp
out
mov
pop
out
stos
mov
out
mov
in
daa
lock
push
subb
neg
mov
fstps
test
mov
push
pop
adc
sub
pop
movsl
aad
lahf
rcrb
and
inc
shlb
sub
add
pop
add
or
test
daa
add
in
aam
std
sub
mov
cld
jb
sub
cmpsb
xchg
mov
push
outsb
bound
imul
xchg
cwtl
mov
aaa
push
pop
dec
adc
pushf
adc
add
loopne
ja
and
pop
jns
shll
mov
jl
xor
push
scas
lcall
jno
adc
aam
bound
btcl
adc
cs
xchg
pop
mov
lods
adcl
jns
jp
inc
xchg
mov
in
adc
rol
fists
xchg
sub
mov
inc
jae
mov
and
or
inc
pusha
xor
repnz
les
or
mov
bound
ja
sub
jne
out
dec
faddl
mov
movsb
fwait
pop
push
pop
aaa
and
dec
mov
mov
popa
shlb
push
push
test
les
or
shrl
cmpsl
push
fsts
and
mov
mov
pop
mov
jbe
xchg
push
xor
cs
xor
sahf
lcall
xchg
mov
aaa
push
push
ss
mov
jnp
les
mov
mov
mov
int
mov
sub
sub
icebp
inc
sub
jo
ds
dec
lret
daa
mov
mov
cltd
lea
xor
mov
sbb
cmc
sub
add
jmp
and
aad
xchg
icebp
rorl
fs
es
nop
adc
inc
out
pushf
ffree
int3
in
and
inc
sarl
hlt
xchg
cwtl
sarl
lods
es
add
jne
in
ljmp
insl
sbb
pop
pop
pop
sub
mov
cs
subl
in
push
adc
jae
sub
add
sbb
cmp
inc
inc
int
cmp
push
fstl
mov
add
test
std
jne
push
out
jb
dec
and
and
andb
icebp
insb
mov
pop
sbb
pushf
scas
mov
ds
pop
aaa
ss
dec
andb
cmpl
inc
cmp
aad
cmp
cltd
roll
leave
and
mov
outsb
jmp
divb
and
inc
mov
out
test
into
jg
stos
sarb
cwtl
in
mov
fstpt
push
or
pop
dec
test
andb
mov
push
pop
out
inc
test
mov
jae
fdivl
sarl
push
jnp
cmp
mov
push
cmc
push
adc
pop
and
mov
add
sbb
push
and
cmp
or
out
push
std
cmp
or
sbb
out
in
push
jl
gs
xor
jecxz
shll
lahf
and
mov
sahf
movsb
xor
inc
movl
popf
inc
add
popf
inc
lock
cmp
int3
ret
push
push
aaa
or
ljmp
dec
jp
push
mov
cli
pop
test
test
inc
or
imul
aas
mov
and
cli
pop
push
push
push
and
lock
shll
enter
and
or
outsb
xor
out
je
in
test
ret
pop
data16
daa
push
hlt
clc
sub
jge
push
pop
sbb
mov
mov
scas
adc
jns
jle
adc
test
xchg
pop
sbb
push
xorl
mov
cltd
mov
push
shlb
data16
testl
fcomip
xchg
mov
or
je
lock
mov
mov
adc
imul
adcb
mov
sbb
rorb
mov
sti
sarb
inc
cmp
stc
adc
clc
and
jle
lods
push
and
test
loopne
rcrb
movb
adcb
popf
mov
dec
int
dec
jns
dec
repz
xchg
ds
fisubl
clc
or
adc
mov
repnz
xor
negl
enter
jmp
sub
and
adc
adc
mov
pop
ljmp
jne
lods
js
xchg
xor
or
int
stos
out
push
push
mov
ret
sub
ljmp
cs
insb
jno
xchg
daa
movsb
xchg
adc
mov
rcrl
icebp
loop
push
fcoms
jle,pn
sub
cmp
dec
testb
xchg
adc
outsl
push
jmp
addr16
in
jg
icebp
push
mov
nop
dec
jno
aas
pop
jecxz
scas
pop
xor
mov
cld
jg
and
or
dec
shl
mov
push
xor
xchg
popa
stos
push
cmp
scas
ljmp
push
mov
test
loop
aaa
adc
xor
or
sub
xchg
leave
inc
lahf
sbbl
sbb
fucomip
cmp
sarb
mov
cmp
int
inc
jg
fwait
sub
movd
mov
jns
mov
aas
mov
sub
push
inc
popf
lret
decl
and
loop
outsb
lock
repnz
cltd
dec
int
ja
imulb
cmp
fucomip
mov
incl
fidivl
lret
and
jb
bound
imul
shrb
ret
or
sti
adc
add
xor
and
jb
bound
imul
shrb
ret
or
sti
adc
pop
xor
and
push
stos
inc
fwait
jb
bound
imul
shrb
ret
or
sti
push
jmp
lret
and
jb
mov
icebp
mov
aad
pop
pop
mov
dec
push
pop
inc
aaa
jo
pusha
dec
adc
push
pop
or
shrb
lret
xchg
xlat
xchg
xchg
add
inc
pop
jo
pusha
push
adc
ja
addr16
popf
rolb
loopne
cmc
movb
push
push
inc
das
jo
pusha
dec
adc
outsl
xor
xchg
rorb
clc
mov
test
mov
addr16
xor
dec
add
inc
xor
cmp
stos
dec
stos
mov
dec
call
push
aaa
sbb
in
nop
add
stos
pop
sarb
rsm
cmc
imul
icebp
lcall
cmpsl
sbb
into
gs
jecxz
sarb
out
pop
pop
sub
mov
fstl
push
xlat
lods
ss
push
add
sub
aas
mov
sti
gs
adcb
nop
clc
mov
pop
fwait
xchg
addr16
ja
lahf
das
js
mov
ret
nop
jp
pop
inc
testl
stos
push
xchg
mov
js
dec
test
rclb
mov
pop
xlat
push
pop
inc
aaa
jo
pusha
inc
adc
ja
jle
mov
lahf
shrb
filds
fs
bound
push
xor
xor
je
push
or
xchg
lds
mov
lds
cmp
sub
cmp
inc
sbb
push
xchg
mov
mov
xchg
shlb
xchg
out
jle
xor
sbb
and
ja
and
shlb
movl
aaa
jo
pusha
push
adc
ja
and
shlb
movl
outsb
pop
dec
cmpsl
js
imul
shl
dec
adcb
cli
or
fmull
mov
out
sub
aaa
das
ret
das
sbb
add
sbb
pusha
jmp
jnp
shlb
xchg
movsb
cwtl
icebp
addr16
and
pop
add
icebp
mov
lret
ret
out
add
test
sub
jle
pop
adc
mov
xchg
lret
lea
clc
mov
data16
and
xor
imul
mov
das
sub
xchg
pop
mov
bound
leave
pop
sbb
out
cs
lcall
test
lcall
cli
out
fwait
ja
add
icebp
dec
xchg
mov
dec
push
jmp
decb
les
nop
dec
sub
fs
test
syscall
je
rolb
mov
jb
pusha
mov
and
loope
les
rcrb
jno
lahf
cmc
mov
cmp
dec
ss
into
insb
les
ficomps
mov
pop
jbe
test
test
lret
int3
pusha
inc
icebp
addr16
push
cmpsb
and
xchg
mov
je
sub
push
hlt
xchg
aad
fistps
mov
pop
fwait
popa
test
fiadds
cmp
mov
sbb
mov
hlt
xlat
je
pusha
mov
mov
pop
aam
dec
xor
stc
push
xorl
xor
jae
mov
cli
sub
or
xchg
inc
je
pusha
push
mov
adc
es
add
push
cmp
popf
inc
mov
push
repnz
cmpsb
into
test
xchg
nop
sbb
test
stos
pop
mov
lods
xor
sti
addr16
mov
ror
daa
and
out
sbb
es
jo
mov
sbb
test
sbbb
lock
fisubrs
outsl
in
dec
mov
aaa
into
movq
nop
in
dec
xlat
in
jle
call
and
dec
loope
sbbl
jno
jp
mov
inc
clc
push
imul
push
mov
or
xor
data16
repnz
les
loopne
sbb
call
pop
cmp
sbb
sub
insb
mov
jl
jno
mov
mov
mov
pop
aaa
sbb
sti
mov
sub
jle
insl
mov
add
sub
sub
insb
jp
jno
dec
sub
fwait
out
lret
fidivs
and
push
outsl
mov
sbb
int
xchg
insl
sti
in
clc
cmp
dec
cmpsl
bound
cmpl
pop
ffreep
add
push
clc
or
ret
std
enter
bnd
enter
sub
arpl
and
push
add
jns
fmulp
lock
js
sub
pop
jp
mov
or
push
mov
and
std
enter
push
daa
repnz
enter
addl
icebp
int
xchg
test
mov
ret
in
mov
dec
icebp
mov
imul
push
inc
lock
hlt
shlw
xchg
in
add
clc
inc
nop
cld
xchg
fs
add
mov
cmp
inc
mov
outsb
push
jo
imul
pop
int3
adc
arpl
and
adc
push
ret
aas
inc
in
and
mov
enter
repnz
jg
pop
aas
loop
loope
jp
push
pop
insb
testl
xchg
decb
dec
mov
or
mov
imul
mov
pop
inc
cmpsb
inc
or
mov
sbb
push
ret
jp
sbb
mov
jmp
fsub
in
ja
jnp
dec
lea
jns
jg
ds
ja
add
mov
xor
inc
cmpsl
scas
ds
push
sub
mov
mov
fwait
mov
or
rorb
jecxz
test
adc
mov
in
cmp
cmp
fsts
sahf
mov
push
xorl
fcomip
sti
outsb
mov
jl
pop
jne
push
cltd
insb
std
or
test
cmp
addr16
das
jb
out
mov
mov
imul
jmp
inc
lcall
pop
cld
lock
lock
mulb
add
dec
adc
dec
aas
push
push
sbb
ja
jns
int
cmp
mulb
int3
dec
arpl
movsb
stos
test
sbb
shld
push
mov
les
cwtl
sub
push
aaa
mov
mov
sub
addr16
jbe
jmp
mov
test
xchg
rorb
adc
or
ret
inc
lret
dec
dec
mov
lds
leave
sarl
mov
xlat
sub
jl
iret
int3
mov
stos
push
add
idivb
cs
push
adc
mov
push
popf
add
cmp
call
ljmp
aam
cld
pop
jo
push
cmpsb
std
push
cs
xchg
jae
dec
cld
inc
jno
repz
pop
sbb
lods
add
sbb
sub
cmp
ret
mov
fstpt
and
and
out
fld
push
ja
les
lea
movsl
xor
mov
xor
jle
and
mov
roll
aaa
rorl
mov
adc
adc
push
int3
pop
pop
scas
xor
sub
sbb
pushf
das
arpl
adc
inc
ljmp
mov
push
xorl
mov
sub
adc
and
stos
sub
loope
jecxz
scas
jo
mov
xchg
sub
cmpsl
and
es
xlat
inc
mulb
std
sub
fnsave
lods
or
push
push
test
jle
pop
pop
mov
out
push
stos
outsb
rorl
pop
pop
pop
jmp
mov
xor
test
xor
inc
cli
dec
data16
dec
lret
scas
dec
mov
inc
in
sub
inc
mov
aam
es
clc
add
adc
mov
scas
inc
outsl
cmpsb
jae
in
ja
sbbl
xor
je
enter
mov
push
mov
jp
and
mov
add
dec
aam
dec
orl
mov
into
icebp
fistpll
loopne
dec
in
push
mov
popf
cs
add
dec
mov
out
test
jo
dec
sbb
and
xor
pop
push
lock
cmp
in
inc
adc
xorb
mov
jp
jge
jno
pop
out
std
sbb
xchg
movsb
leave
loope
push
mov
push
cmc
ret
cmp
push
mov
mov
xchg
xchg
cmp
loope
ljmp
in
es
jl
inc
push
xlat
std
mov
je
mov
lcall
sub
aas
mov
das
lahf
icebp
in
mov
stos
fisubs
pop
pop
jae
or
lret
mov
add
fldenv
cmp
insl
hlt
or
mov
pushf
jmp
mov
push
mov
subl
std
or
scas
sar
push
fdivrs
jns
addr16
pop
pop
call
and
adc
test
cmp
pop
data16
in
sbb
faddl
test
stc
xchg
adc
gs
pop
mov
aaa
ret
pop
mov
cmpsl
fimull
arpl
pop
push
dec
movsb
sbb
in
sub
push
scas
in
lds
adc
stc
add
cmp
dec
jo
hlt
outsb
sub
cmpsb
mov
testb
xchg
dec
xor
lret
mov
jno
inc
cli
arpl
lock
push
xor
mov
lea
mov
mov
jle
mov
inc
pop
sub
xchg
add
jmp
xlat
fs
sbb
xchg
or
add
cltd
in
cmp
mov
movsb
jno
xlat
push
cmp
jne,pn
push
ret
mov
popf
les
jb
add
jle
mov
and
cmp
add
pop
mov
add
add
pop
inc
pop
ficompl
fildll
pop
cmp
adc
pop
cmp
jl
inc
fldcw
mov
in
or
leave
gs
test
mov
roll
xlat
sarb
jg
and
lahf
aas
mov
push
leave
sbb
xor
and
mov
in
ja
aas
in
mov
add
dec
mov
xor
or
mov
jno
jae
out
les
mov
or
mov
es
and
movsl
mov
lock
ss
dec
adc
mov
addr16
push
pop
aaa
or
xchg
into
cltd
jge
cmp
fcomi
subb
cmpsb
int
jle
jnp
sbb
movsl
add
lock
adc
inc
movsb
adc
push
test
adc
sub
xor
imul
inc
lcall
in
mov
xchg
stos
inc
inc
test
mov
adc
fstps
or
dec
mov
or
add
mov
xor
icebp
adc
or
add
push
jmp
jg
push
fisubrl
les
sahf
in
test
aaa
cwtl
jmp
fldt
mov
adc
test
adc
xor
pop
mov
jge
cwtl
xchg
sbb
and
jnp
stos
push
addr16
push
dec
loopne
mov
lods
mov
lret
sub
mov
jl
jne
inc
push
imul
out
mov
jbe
pusha
mov
les
xchg
add
subl
lds
fiadds
stos
arpl
lcall
xor
cltd
jb
std
or
jbe
dec
insb
popf
adc
and
and
mov
xor
mov
pop
push
sub
mov
jecxz
push
pop
jl
pop
jp
lcall
push
add
mulb
xor
mov
xor
jge
fwait
mov
iret
cmp
inc
jmp
sbbb
clc
int
mov
ficompl
sub
fstps
ret
scas
cmovg
sbb
dec
xor
or
jae
push
pop
xchg
push
fdivrs
inc
mov
pop
push
mov
lods
xchg
ja
imul
add
les
mov
jl
cmpb
mov
push
add
push
loop
cli
vmovaps
inc
jnp
int3
hlt
lea
xor
in
rorl
inc
push
sti
adc
cmp
rorl
ja
dec
stc
pusha
cmpsl
push
testb
loop
xchg
nop
pushf
pushf
sbb
mov
jnp
cmp
iret
jge
pushf
aas
xchg
sub
clc
inc
repz
aam
iret
jae
pop
add
imul
xor
sub
iret
adc
cltd
push
fisubl
sub
sbb
jl
das
into
mov
movsb
repnz
push
push
andl
cmp
mov
lret
aam
cwtl
push
mov
sub
cmp
daa
es
jg
fsubp
sbb
mov
std
fwait
dec
leave
adc
mov
mov
or
clc
out
es
jp
jl
rcll
push
ret
out
outsb
shl
adc
test
sub
xor
add
dec
and
aam
aad
bound
add
jmp
cltd
nop
cmp
gs
pop
pop
lcall
in
imul
shrb
sbb
cmp
sub
shl
add
jbe
push
push
mov
pushf
pop
sahf
mov
push
and
testl
arpl
lea
inc
mov
cmp
fucomi
aas
mov
inc
cli
and
dec
movsl
sbbl
ds
mov
mov
push
dec
mov
push
aaa
add
clc
xor
ret
imul
add
jae
cmp
imul
ret
pop
stc
lock
stos
divl
ret
aad
je
and
ds
ret
imul
stos
add
cmp
dec
sub
lahf
insb
fdivl
js
and
popa
lcall
or
and
ret
out
or
jns
arpl
inc
cmp
std
scas
pop
call
pop
stc
pushf
dec
pop
lock
scas
lret
fwait
imul
xchg
xchg
testb
xchg
xor
xor
push
sbbb
movsb
pop
jbe
test
inc
jl
hlt
xchg
push
pop
ss
jnp
xchg
in
mov
and
sti
mov
loope
xchg
lods
or
cmp
xor
push
sub
and
out
lock
add
jbe
push
stos
adc
xchg
hlt
cltd
aad
leave
repnz
cmpsl
cmpsb
dec
mov
test
ss
mov
lret
addb
push
pop
dec
lea
and
fwait
jmp
adc
adcb
xor
mov
mov
fstpl
inc
stos
movsl
test
fucom
pop
inc
dec
dec
jne
inc
test
inc
das
mov
mov
js
pop
adcb
fisttpl
ja
faddp
movsl
inc
push
sub
xchg
mov
cmpsb
iret
and
repz
mov
jae
aad
loopne
into
push
sarl
pusha
and
addb
ret
cwtl
loope
mov
iret
mov
jbe
sarb
xchg
xor
pusha
lods
dec
xchg
add
inc
shrl
sub
mov
dec
inc
or
mov
push
loope
add
out
rorb
leave
jmp
leave
inc
mov
mov
cmc
cmp
mov
call
inc
and
pop
das
dec
jl
fmull
or
popf
popa
mov
ficoml
push
push
push
lds
jge
je
xchg
pop
xor
lret
add
lret
sbb
push
or
aam
xchg
mov
inc
or
or
add
bound
scas
mov
jo
push
mov
test
add
ret
xchg
xchg
insb
ja,pt
setno
je
aaa
cmpsl
in
and
push
and
jne
add
push
movsb
stos
pop
push
jne
in
add
pop
fdivr
cmpsb
std
pop
jge
out
xchg
shll
enter
ret
mov
jnp
loope
dec
fucom
and
in
test
enter
std
dec
sub
testl
jge
xor
pop
jnp
and
mov
mov
pop
xchg
les
fisubl
stos
mov
pop
mov
lret
adc
out
call
inc
int
mov
adc
jae
imul
pop
adc
xor
aam
lods
pop
mov
cltd
insl
lock
or
hlt
int
dec
call
or
push
outsl
and
dec
lods
push
inc
jae
mov
push
std
mov
sub
fcoms
iret
sahf
inc
and
or
jo
inc
ss
cld
jae
jp
cwtl
arpl
lahf
dec
cmp
addb
bound
sub
test
and
or
sub
iret
xor
divl
jge
ficompl
adc
std
arpl
lret
and
pusha
mov
arpl
sub
mov
outsb
pop
sbb
xchg
aas
mov
xor
enter
inc
jnp
fisubrl
test
sbb
dec
popf
cmp
das
pop
pushl
jge
fstpt
mov
imul
jnp
xchg
and
inc
popf
icebp
pop
out
or
push
fnsave
pusha
jnp
jns
in
outsb
sub
aam
hlt
cmp
push
jp
lods
stos
xchg
stos
mov
shl
je
out
into
push
imul
test
insl
mov
add
pop
dec
xor
adc
xlat
and
pop
push
test
aas
stos
jmp
cli
subl
pop
in
orb
push
repnz
sub
movsb
mov
mov
scas
mov
mov
mov
mov
pop
shll
jmp
out
loope
mov
sbb
pop
cmc
hlt
pop
fimull
shlb
cmp
mov
xor
xorb
aad
dec
lret
lcall
inc
int3
and
inc
sbb
cmp
jge
mov
idivl
push
scas
inc
xchg
repnz
and
xor
repz
aam
cmp
or
mov
mov
mov
push
dec
out
pop
cwtl
push
jecxz
arpl
lods
lcall
xchg
mov
fwait
pusha
xor
mov
scas
dec
decb
cmp
and
ja
stos
stc
mov
in
push
fdivs
adc
push
ret
cmpsb
out
loop
ret
dec
jne
push
xchg
sbb
test
cmc
xor
shll
es
fwait
pop
negl
add
fildl
mov
or
lods
pop
push
mov
sub
out
add
mov
outsl
mov
xor
push
lods
imul
push
loopne
cs
inc
sbb
clc
xchg
adc
sbb
xchg
dec
aad
pushf
icebp
and
ljmp
mov
add
jp
cmp
xchg
cli
cmp
sbb
and
pusha
cwtl
std
out
jne
dec
insb
push
lcall
popa
jecxz
fists
push
xchg
mov
mov
sbb
push
inc
dec
xchg
dec
xchg
or
jnp
mov
cmc
lcall
movsl
adc
sub
adc
xor
push
in
mov
imul
mov
mov
scas
mov
in
pop
mov
inc
xor
jl
or
repnz
cs
sbb
ss
ret
xchg
or
cmp
xchg
dec
adc
nop
test
jg
scas
xchg
pop
mov
inc
shll
rcr
aas
jg
in
popf
loopne
jl
inc
cmpsb
or
cmp
movsb
mov
cmc
movsl
loop
jns
test
fdivrs
in
inc
jns
out
aam
imulb
sub
jecxz
fldcw
dec
hlt
inc
scas
lock
push
roll
mov
dec
jo
mov
popa
sub
dec
pop
aaa
aas
pop
mov
je
nop
cld
dec
insl
imul
test
in
out
es
pop
xchg
or
push
rcrb
mov
adc
test
into
sbb
adc
sub
dec
cld
lea
add
xchg
mov
inc
push
das
mov
pusha
icebp
dec
xor
xor
jmp
or
pop
pop
pop
repnz
push
sbb
sbb
daa
testb
pop
shll
out
dec
fs
fbstp
jl
cmp
fisubrs
daa
pop
iret
xchg
movb
xchg
jg
mov
repnz
mov
sbb
xchg
nop
push
jmp
jns
push
ljmp
and
pop
xchg
data16
jge
mov
push
stc
pmaxub
addr16
add
inc
pop
or
push
movntps
popf
push
jae
cli
shlb
or
stc
pop
lret
pop
sar
call
mov
imul
inc
inc
sbb
jge
lock
cmpsl
in
sub
das
inc
fistpl
mov
jns
or
out
jbe
hlt
dec
jle
lret
notb
cmp
movsl
pop
ss
pop
fmul
daa
dec
bnd
xor
lret
sbb
fwait
xlat
xor
mov
test
arpl
sbbl
mov
lahf
out
dec
sti
add
inc
iret
faddl
test
or
dec
add
inc
jl
stc
pop
jl
mov
or
jno
jns
sbb
xor
sub
ja
or
pop
outsl
imulb
add
imul
and
sbb
lret
xor
repz
jge
push
add
adc
sub
mull
xchg
out
add
or
cld
popf
pop
or
jp
mov
jg
cmp
fucomi
repz
addb
inc
push
ljmp
mov
loope
repz
sub
lcall
jne
sbb
adc
inc
aam
daa
or
jns
ret
int
sbb
aaa
mov
and
sahf
cmp
popfw
ror
mov
mov
imul
and
mov
sub
cmp
pop
std
and
outsl
fmulp
out
push
pop
movsb
pop
ljmp
sub
nop
movsl
aam
adc
and
cmpsb
cs
cmp
call
sub
mov
mov
sub
ret
gs
xor
add
fidivrs
add
jp
push
jne
pop
jo
dec
xchg
jp
lahf
and
outsl
aas
sub
movsl
scas
pop
add
loope
mov
or
jl
out
adc
in
xchg
jg
xchg
jbe
addl
pop
mov
mov
mov
div
stos
pop
data16
or
lea
jp
sbb
mov
addr16
or
jb
lret
pop
mov
mov
xchg
sti
inc
sbb
xor
add
pop
or
push
stos
dec
push
adc
js
in
hlt
push
rolb
cmc
or
jle
out
cwtl
ret
mov
dec
xchg
jbe
cltd
xchg
mov
push
mov
jo
pusha
push
adc
ja
and
shlb
movl
aaa
jo
pusha
push
adc
ja
and
shlb
movl
aaa
jo
pusha
push
adc
ja
and
shlb
ret
xor
mov
add
pusha
push
adc
divl
out
push
lock
xchg
mov
dec
sbb
sahf
pushf
mov
scas
mov
inc
push
cld
push
sub
cmp
dec
pop
pop
push
insb
jle
outsb
call
mov
fmul
in
cld
out
or
sbb
dec
ds
or
pop
dec
insb
jle
outsb
xor
outsb
mov
mov
mov
out
push
dec
pop
cs
or
sub
sbb
outsb
loop
sar
lods
fcmovbe
inc
enter
ss
xlat
or
jae
mov
or
xchg
push
xchg
pusha
into
sub
cmp
es
xor
jno
cli
mov
shrb
sahf
add
insb
jle
xchg
jb
fstps
dec
stos
ret
popf
inc
in
iret
outsl
pop
ficomps
cmp
cmp
pop
pop
sbb
addl
dec
mov
adc
cld
mov
test
ret
or
jl
jae
xchg
jb
push
push
xor
ja
sub
lahf
cvttps2pi
jns
or
jo
jae
add
mov
xor
imul
sbb
movsl
cmp
shll
outsb
xlat
sahf
lret
mov
movsb
into
in
pop
out
lret
push
pop
ds
add
push
dec
pop
jle
sub
repz
pop
fdivr
call
cwtl
fwait
cld
sahf
or
dec
addr16
push
pop
inc
xor
aaa
add
fidivrs
mov
out
imul
sub
inc
inc
xor
or
cli
int
out
ficompl
cld
out
or
sbb
sub
cmp
dec
pop
pop
dec
insb
jle
outsb
mov
mov
into
in
cld
out
or
sbb
sub
cmp
dec
pop
pop
dec
insb
jle
outsb
mov
jl
add
xor
subb
lret
pop
push
mov
fidivl
fdivr
insb
or
adc
testl
cmp
mov
adc
push
cli
in
adc
cmpsl
les
cmp
cmp
in
je
mov
mov
pop
pop
xchg
push
daa
mulb
xchg
dec
pop
cmp
mov
sub
mov
cmp
cmp
xor
sbb
sbb
xchg
jae
lock
scas
cld
sbb
sub
test
cmc
sbb
push
xchg
add
sub
inc
xchg
xlat
sahf
inc
xor
cmpsb
je
sarb
daa
out
push
inc
movhps
jns
sub
mov
fwait
mov
fisttpll
daa
and
inc
jae
adc
out
sbb
or
xor
push
mov
add
add
and
repnz
pushf
nop
out
pop
adc
or
in
mov
int3
call
shlb
dec
mov
std
dec
iret
fwait
repz
or
adc
cmp
out
cmp
imul
jne
push
arpl
jb
jl
daa
sti
or
in
aas
scas
scas
out
and
mov
out
sbb
dec
xchg
inc
clc
sti
xor
sbb
mov
loope
push
or
dec
cmp
cli
popa
mov
mov
push
out
iret
sub
cmp
roll
push
pop
and
hlt
fiaddl
mov
add
inc
enter
adc
test
lahf
push
mov
pusha
out
cmp
cmp
test
xchg
sahf
lods
nop
gs
stc
sbb
mov
cmp
nop
imul
xchg
fdiv
mov
push
and
push
fiaddl
lret
in
jo
fbstp
insb
in
pextrw
xchg
mov
xchg
pop
shrl
inc
push
cmc
test
or
scas
xchg
popa
mov
divl
adc
stos
cmc
scas
sti
push
daa
sahf
jno
or
sahf
fstpl
xchg
icebp
mov
inc
cld
jge
and
jge
mov
std
sbb
cmpsb
push
pop
mov
shlb
aam
mov
das
add
mov
mul
sub
fidivrs
push
jns
and
mov
cmp
sub
mov
clc
mov
inc
push
jmp
lea
xor
cmc
rolb
lret
fstps
stos
lea
outsl
ss
cmp
test
cltd
cmp
or
test
mov
pop
je
inc
sub
adc
test
inc
inc
pop
jae
mov
cmp
sahf
icebp
add
inc
xlat
push
je
negl
pop
sub
lea
push
push
adc
jmp
pop
lahf
fcoml
and
int
stc
sub
or
cld
mov
cmp
jo
daa
icebp
mov
outsl
int
ret
in
cmp
jo
inc
mov
mov
das
push
add
sub
sub
dec
bound
pop
sub
std
sub
jge
xchg
xchg
fstpl
imul
fwait
cmpsl
mov
ljmp
pop
mov
and
jle
mov
cmp
ret
pop
push
ljmp
pop
push
xor
roll
pop
cmc
mov
icebp
pop
or
pushf
cwtl
mov
dec
pop
loopne
fcompl
push
mov
lret
adc
jno
and
push
push
or
pop
adc
xlat
mov
cmp
mov
mov
xchg
add
imul
push
ljmp
cmpl
or
daa
push
movsb
cmpsb
cwtl
adc
cld
mov
adc
out
jo
mov
ffreep
or
testb
bound
xor
jo
enter
lds
mov
int
xor
xchg
dec
sbb
xchg
jge
sti
dec
push
push
test
outsb
repnz
shll
pop
sbb
rorl
test
cmpsb
ss
aad
icebp
aas
scas
daa
repz
insl
xchg
xor
sbb
rcrl
push
in
mov
sub
xor
cmp
inc
inc
daa
sbb
pusha
jmp
out
stos
repz
in
inc
sub
jecxz
pushf
pop
jae
pop
mov
jno
adc
mov
mov
or
mov
or
xchg
or
mov
sbbb
mov
xchg
in
or
dec
fcmovnbe
mov
push
adc
in
xor
mov
xor
sbbb
out
adc
sub
scas
fsubrs
inc
cli
lret
jnp
insl
pop
cli
or
cli
into
pop
in
enter
xchg
inc
pop
xor
sbb
mov
pushf
ret
push
fbstp
imul
mov
cltd
sub
mov
icebp
dec
sub
push
mov
pop
testl
enter
out
fs
ficomps
push
rcl
pop
fsub
or
add
popf
aad
dec
pop
scas
mov
inc
mov
mov
dec
push
sti
or
mov
adc
mov
mov
xor
fldenv
jge
mov
pop
mov
push
pushf
notb
shll
test
lret
pop
in
addw
pop
mov
test
pop
mov
jo
in
mov
dec
dec
sbb
ljmp
inc
movsb
in
sub
cltd
add
jno
lods
lea
sbbl
add
xor
lcall
push
adc
iret
xor
cmpsb
pusha
cwtl
jge
inc
cmp
push
push
mov
xchg
outsw
xchg
or
lahf
adc
xlat
and
mull
insl
sbb
xchg
stc
mov
push
xor
imul
cs
jnp
xor
push
adc
jnp
add
mov
and
leave
ret
jnp
enter
mov
cmp
or
or
sub
outsb
movsb
fstps
or
jg
xor
rcrl
jo
fstpl
fwait
lret
jbe
rorb
xor
int
out
cltd
mov
xor
push
cmp
push
hlt
ret
ret
push
mov
movsl
popa
cmpsl
stc
xchg
cmpsl
idivb
push
cmpsb
lret
inc
fsubrs
cmp
ret
repz
aaa
aas
push
jbe
jg
sub
pop
push
test
neg
imul
push
jmp
lock
push
mov
daa
sub
ficoms
jnp
sbb
dec
aas
push
jnp
lock
je
nop
xchg
and
jecxz
aam
pop
xchg
aam
fcmovu
vpsubusb
ds
sub
mov
push
mov
lods
fidivrl
cmc
fs
dec
lods
xor
add
adc
xchg
cmp
pop
mov
add
pop
mov
lock
mov
jne
sub
xchg
inc
lahf
mov
push
sti
xor
pop
fucomip
bound
stos
jb
insl
sub
in
inc
push
imul
imul
lods
lret
add
dec
popa
cmp
push
les
cmc
inc
pop
addl
sub
mov
or
sbb
inc
icebp
pop
fnstsw
adc
insl
pop
outsb
stc
mov
pop
popf
clc
lods
scas
std
fcmovnu
cmpsl
in
xchg
in
cvtps2pi
out
stc
sbb
shlb
sub
iret
pushf
popf
jns
fs
inc
outsb
inc
mov
mov
ret
les
and
stos
mov
inc
and
mov
pop
mov
aad
xor
cmp
and
adc
es
push
rolb
jbe
jg
ret
mov
dec
lock
add
cmp
arpl
data16
sbbl
in
mov
cli
sbb
std
aas
shrb
push
sub
out
mov
inc
push
push
mov
push
subb
sub
lret
xor
scas
in
and
dec
icebp
jno
out
or
jb
bswap
daa
or
mov
or
fsubp
adc
sub
repnz
sub
scas
push
sbb
in
test
add
loop
mov
push
lret
sbb
jle
push
cmp
orl
inc
cmp
out
pop
xchg
test
cmp
mov
add
pop
cmp
ja
jg
ljmp
sbb
rcrb
shl
pop
add
shrb
call
mov
or
or
sahf
scas
ds
movsl
outsb
aam
ds
cmpsl
or
cld
push
ljmp
mov
sti
dec
jno
pop
xchg
pop
mov
popa
xor
es
adc
popa
lahf
fidivl
ficompl
fsubp
out
fsts
shll
cmpsb
ffree
das
adc
sbb
mov
daa
mov
adc
sub
jno
or
jns
bound
mov
scas
lock
inc
cmpsl
push
inc
lcall
push
xchg
mov
and
call
inc
or
xlat
add
aas
and
loope
adc
outsb
lret
lock
popa
sbb
ljmp
stos
or
sub
sbb
addl
ret
xor
xlat
and
adc
test
addr16
xor
frstor
pusha
in
das
pop
hlt
push
notb
push
test
inc
ds
dec
adc
add
jo
andl
lods
jl
jne
test
push
sbb
cmp
mov
mov
mov
and
cld
mov
pusha
cmpsl
lret
repnz
outsb
test
les
dec
jae
mov
xchg
ret
xorl
push
lock
imul
pop
pop
push
mov
lcall
enter
rorb
or
clc
pusha
lock
mov
cmp
js
mov
add
adc
pop
push
sbb
push
mov
cltd
cmp
and
push
adc
dec
addl
ret
shlb
pop
push
adc
out
fsubp
outsb
inc
mov
jge
xor
and
jge
xorb
int3
inc
adc
cmp
es
rcl
jns
xchg
je
daa
ljmp
pop
or
sbb
test
add
push
scas
xchg
pop
sahf
lahf
push
mov
imul
xchg
popa
lret
inc
sub
mov
outsb
loopne
mov
xchg
shl
out
lods
lock
sbb
cli
stos
mov
add
loope
popf
je
push
pop
add
jecxz
adc
cli
aad
inc
cld
xchg
jns
out
xor
dec
dec
cli
movsb
jge
fcmovbe
sub
mov
xor
psubsb
mov
out
mov
add
pop
sar
inc
data16
leave
jp
roll
or
xorb
iret
push
rcll
cwtl
das
es
stc
pop
das
dec
daa
xchg
rorb
stc
sti
test
xor
repnz
rcrb
nop
lret
aaa
jecxz
pcmpeqd
or
and
mov
jae
dec
fwait
xor
mov
add
dec
popl
jno
push
rorb
mov
daa
mov
push
in
out
inc
pop
mov
test
cli
pop
ss
cld
mov
xchg
xor
sbb
in
add
das
fadd
mov
or
nop
push
xor
int
push
mov
arpl
jmp
out
out
pop
in
fcomps
out
mov
sbb
or
jecxz
sbb
inc
popf
xor
inc
fisttpl
cwtl
or
insb
pop
pop
frstor
pop
out
dec
inc
xchg
cmp
dec
push
bound
cmp
outsb
out
xor
xor
fsubrs
mov
push
pop
adc
jae
sbb
imul
inc
xchg
fistpll
daa
cmpsb
adc
ljmp
lret
shlb
pop
outsb
adc
sbb
xchg
pusha
stos
jae
push
sub
rclb
popf
dec
inc
pop
sbb
jns
xor
and
cmpsl
addb
outsl
shr
jns
ffreep
dec
push
xor
inc
fs
cmp
cmpsb
push
or
mov
cmpsl
test
dec
sarl
sbbb
inc
fimuls
mov
iret
cmp
lcall
inc
pop
fbld
fisttpl
rcl
push
movsb
xlat
jo
cs
xchg
push
cmovae
jmp
push
sbb
shrb
mov
sbb
xor
adc
movsb
data16
and
outsb
inc
push
pushl
in
clc
test
or
imul
jl
ret
stos
pop
push
and
push
into
mov
mov
sbb
or
sbb
jl
popf
mov
mov
loope
xor
push
mov
add
push
stos
jnp
xchg
daa
mov
xchg
in
arpl
push
inc
mov
test
sub
pusha
xchg
gs
pop
ret
and
adcl
jle
xchg
or
add
adc
xchg
push
les
shl
add
sbb
mov
out
dec
insl
mov
lcall
jne
push
in
or
fstps
mov
in
into
cmp
addb
je
out
ucomiss
jb
fucomi
in
add
sbb
or
sub
es
fiadds
bnd
or
sub
xchg
or
test
outsb
jmp
add
pop
mov
aam
lret
push
dec
mov
lods
mov
mov
aaa
add
push
sbb
das
dec
push
and
mov
mull
movsl
inc
sub
jg
sub
push
push
cmpsb
in
mov
dec
mov
adc
pop
pop
daa
inc
in
push
lret
adc
inc
jns
shl
push
push
sub
pop
inc
fists
mov
and
out
add
cmp
cmp
pop
ss
mov
add
or
jmp
fsubp
pop
push
mov
out
and
das
push
jb
push
notl
xchg
ficoms
stos
jnp
push
aam
adc
in
jle
enter
xchg
movsb
mov
sbbl
inc
in
jno
cwtl
adc
fisttpl
xchg
test
aad
scas
in
jg
js
jecxz
sub
pusha
daa
add
xor
adc
add
xchg
pop
and
push
clc
adc
or
in
ljmp
jp
dec
xchg
pop
dec
clc
xor
in
sti
pop
es
xchg
and
into
aam
cli
inc
jne
mov
in
inc
and
loope
mov
sub
mov
icebp
test
in
push
mov
xchg
mov
jae
push
jl
aas
add
xchg
jge
stc
mov
in
and
int3
cmp
adc
stc
das
pop
loopne
fsubs
inc
in
fcmovnb
or
fisttpl
shrb
pop
pop
loopne
sub
pushf
push
cmpsl
fst
out
daa
cmpsb
test
aad
outsb
adc
jge
xor
scas
inc
pop
inc
rolb
dec
push
imulb
int
into
sbb
inc
jecxz
out
lods
xor
mov
adc
js
mov
lahf
loop
xchg
inc
mov
mov
ret
sub
cmp
xor
jp
outsl
jbe
dec
test
lods
jb
popf
mov
je
pop
adc
movsl
fprem
clc
adcb
mov
adc
aad
adc
xor
and
pop
cwtl
shlb
push
mov
or
fdivs
test
leave
mov
sbb
ds
mov
mov
sbb
stos
xadd
cltd
addl
cwtd
movsb
fmulp
inc
add
inc
in
fcoml
das
cmp
fdivs
in
dec
push
bound
inc
test
int3
jmp
outsl
fsubrl
out
push
fsub
mov
mov
mov
jnp
xchg
icebp
hlt
imul
les
cmpsl
and
xchg
in
hlt
inc
sbb
cmp
xchg
mov
mov
repnz
pop
and
das
sbb
sbb
mov
adc
sbb
pusha
dec
addr16
popa
test
jl
icebp
dec
add
je
push
lret
push
cmp
imul
sub
loopne
das
in
inc
cmp
jmp
lret
push
inc
test
int3
repz
push
jae
lret
sub
xchg
icebp
insl
leave
das
adc
sub
adc
les
mov
jno
out
out
enter
jecxz
xor
sbb
xchg
mov
or
add
xchg
xchg
mov
gs
andb
jmp
dec
fmul
cmp
ret
mov
mov
mov
aas
pop
in
add
jecxz
sbb
and
scas
movsb
test
lret
push
push
dec
insl
jnp
adc
out
in
cltd
and
imul
js
xchg
fs
inc
leave
push
xchg
xor
test
adc
lods
into
es
call
mov
cmc
or
dec
dec
adc
xchg
inc
mov
dec
sbb
adc
inc
dec
lahf
addr16
imul
xor
mov
ljmp
out
mov
mov
sbb
sub
or
pop
push
sahf
jle
adc
cld
xor
scas
ss
mov
leave
and
xor
dec
je
xchg
clc
sahf
inc
mov
into
rclb
pop
arpl
pushl
or
xor
jo
sub
out
or
lret
mov
mov
aam
push
push
jbe
xor
popw
mov
jns
pop
sahf
fcoml
mov
test
fs
sub
mov
adc
clc
jle
jmp
sti
and
cmp
lret
inc
mov
ficoml
rclb
push
stos
cwtl
fs
fs
xlat
decl
popf
sbb
mov
dec
adc
bound
neg
xor
addr16
lahf
xor
sub
das
add
dec
mov
jnp
push
inc
mov
dec
xchg
loope
xor
scas
movsb
test
pop
add
lock
push
ret
inc
add
icebp
in
push
xor
enter
out
sub
jbe
inc
cmp
or
jecxz
loope
loope
inc
pop
sub
or
repz
mov
pop
sbb
daa
pop
pop
jns
jns
fs
cli
lret
mov
arpl
addr16
leave
adc
inc
xchg
pop
pop
stc
pop
loope
mov
and
sub
clc
lcall
push
pop
mov
pop
mov
scas
lret
cmpsl
add
sti
xchg
dec
and
fs
imul
jb
ja
jno
test
dec
mov
lds
dec
fistl
lods
out
jp
sbb
shlb
xor
fistl
lahf
aas
stos
and
pop
push
mov
loope
xor
push
mov
adc
xorb
jae
jp
xor
adc
mov
cli
or
outsb
push
push
mov
mov
push
xchg
push
lods
sarb
inc
test
fstl
jne
xchg
mov
test
add
pop
in
in
out
and
ja
jecxz
daa
add
xchg
jp
stc
into
clc
xchg
sub
push
and
fdivl
pop
vhaddpd
pop
inc
push
fnstsw
push
push
rcll
push
mull
and
stos
pop
sbb
enter
call
lahf
aas
out
adcl
test
aas
xlat
sarb
incl
or
xchg
hlt
mov
ret
lds
sub
out
gs
loopne
xchg
cmp
jp
mov
jle
punpckhdq
mull
out
test
pop
or
mov
cmp
enter
shrb
adc
test
scas
xor
jbe
mov
inc
cwtl
stc
fwait
jp
push
mov
sbb
test
shrb
jmp
mov
and
stos
mov
je
adc
mov
or
mov
dec
inc
adc
jp
notl
in
push
mov
enter
arpl
aas
je
sub
jb
dec
test
hlt
mov
fmull
adc
pushf
sbb
xchg
sbb
bound
in
aaa
push
xlat
sbb
cmp
add
push
test
loop
inc
and
sub
ljmp
push
js
fbld
cmp
mov
scas
cmp
arpl
cmp
pop
cmpsl
arpl
adc
cmp
mov
xlat
frstpm(287
inc
mov
xorb
adc
mov
xorb
dec
clc
xchg
js
out
rorb
mov
xchg
insb
jne
fbld
pop
lret
lret
mov
das
adc
cmp
lds
sarl
ret
pop
movsb
cli
inc
push
dec
stos
cmpsb
leave
xchg
scas
sbb
data16
ds
cmc
ret
aas
gs
mov
jne
mov
mov
ja
push
and
stc
pop
mov
nop
pop
test
in
lahf
loope
dec
dec
leave
in
push
or
jbe
add
mov
mov
jmp
inc
cmp
je
scas
xor
jne
xchg
aad
std
dec
push
fistl
daa
into
jo
addr16
andb
jno
iret
clc
jns
xchg
adc
negb
sbb
jmp
adc
inc
xchg
pop
sbb
out
fucom
lret
repz
clc
fs
cmp
jmp
cmp
addb
mov
pop
lcall
lret
mov
rol
stc
xchg
pop
js
push
add
or
jbe
test
jnp
js
adc
inc
int3
loope
pop
out
outsb
xchg
and
fsubrl
popf
mov
packuswb
inc
push
ret
or
jge
mov
mov
fmul
in
cld
out
or
sbb
sub
cmp
dec
pop
pop
dec
insb
jle
outsb
mov
mov
into
in
cld
out
or
sbb
sub
cmp
dec
pop
pop
dec
insb
jle
outsb
mov
mov
into
in
cmp
or
sbb
fdivrl
cmp
dec
pop
dec
dec
insb
jle
outsb
cwtl
sahf
rorb
fmulp
dec
in
jle
adc
jecxz
xchg
cmp
cmp
aam
xchg
addl
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
and
xor
add
adc
shrb
and
movsl
lea
in
neg
aam
aam
and
xor
add
adc
fs
je
inc
insl
push
jge
mov
test
les
cmp
xor
insb
inc
pop
jne
addr16
fsubr
mov
cwtl
mov
pop
je
pop
bound
test
xchg
mov
or
es
loope
adc
cmpsb
movsl
push
lret
pop
jl
test
dec
je
shl
cmc
and
push
mov
in
in
sub
divl
pop
cmpsl
sbb
pop
iret
sbb
mov
fisttpll
ffree
adc
std
and
sub
jne
mov
fnsave
inc
sbb
aam
je
mov
fstpl
cmp
jb
test
fs
cmp
les
int3
add
std
inc
sub
jbe
mov
pop
lock
mov
mov
mov
cmpsl
test
adc
in
in
or
adc
jae
fs
inc
je
fs
mov
movsb
cld
aad
lret
aam
dec
push
pusha
cmp
sbb
xor
add
in
in
clc
lock
mov
mov
sbb
or
je
inc
or
adc
hlt
sar
test
aad
in
lahf
mov
xorl
dec
sub
je
inc
insl
push
jge
lea
in
hlt
ffree
in
aam
and
xor
add
adc
fs
je
inc
insl
push
jge
lea
in
hlt
ffree
in
aam
and
sbb
or
cmp
xchg
xchg
test
hlt
imulb
mov
mov
mov
leave
hlt
icebp
xor
jb
cwtl
mov
mov
inc
mov
int
movsl
add
adc
jge
xchg
loope
dec
call
jge
adc
outsb
das
cmc
lcall
ja
lcall
pop
cld
xor
nop
cld
xor
adc
enter
scas
sbb
and
push
xchg
outsl
mov
mov
rcll
in
sbb
mov
out
jmp
adc
loope
int
lret
cli
shll
cmp
inc
dec
or
cmp
enter
push
loope
xchg
shlb
inc
add
out
cld
pop
fnsave
pop
insb
jmp
jno
shll
push
lds
jge
loope
adc
mov
in
movsl
mov
popa
int
and
in
and
repnz
mov
lock
mov
shrb
pop
mov
adc
cmp
test
pushf
arpl
int
adc
add
inc
xchg
jne
and
lods
mov
and
add
push
in
xchg
test
xchg
clc
subl
xchg
mov
stos
out
in
loopne
jo
xor
add
clc
push
xchg
movsb
ret
sub
aaa
repz
adc
jb
call
ljmp
sarl
into
dec
mov
sub
push
jno
add
data16
mov
dec
sahf
jne
lcall
sbb
inc
mov
das
cmp
ja
ja
add
ucomiss
jmp
mov
sub
sub
mov
incb
or
imul
fs
ljmp
add
enter
sarl
out
loopne
dec
out
cs
or
push
leave
mov
aad
test
jl
pop
mov
and
xlat
dec
sti
mov
pop
mov
sar
dec
dec
ret
adc
call
pop
add
shrb
lods
shrb
mov
jns
fsubrs
testl
flds
xchg
aam
xor
sub
dec
iret
pop
addb
test
mov
std
adcb
or
push
out
push
aad
rcrb
imul
xor
xchg
out
iret
mov
and
stc
aam
in
pop
add
cmp
adc
push
iret
xor
mov
xchg
jno
lock
insl
insl
xchg
insb
arpl
pop
stos
addl
in
dec
jns
aas
js
mov
sub
lret
icebp
pop
mov
xor
pushw
aam
xchg
ljmp
or
push
xor
push
jno
lret
dec
gs
push
push
out
sub
clc
into
sbb
jo,pt
dec
dec
cmp
xor
lock
add
out
test
jne
sub
cmp
push
mov
shll
outsl
pop
and
sti
sbb
jecxz
push
mov
loopne
cmp
add
pop
sub
push
dec
pop
vmwrite
push
xchg
mov
dec
popf
in
mov
je
rep
shrl
repz
sub
dec
jmp
je
arpl
pop
aas
pop
push
and
xchg
push
lock
and
sbb
out
jne
pop
shlb
jg
cli
loope
jnp
je
adc
mov
bound
cmc
iret
sbb
dec
ss
sbb
jno
rcrb
push
jle
push
dec
push
mov
iret
inc
mov
iret
ljmp
inc
cmp
out
add
lods
insb
scas
mov
outsl
or
sbb
pop
sbb
xchg
hlt
out
pushf
mov
jmp
fldcw
lods
pusha
sahf
push
fisttpll
out
andb
pushf
andl
mov
mov
outsb
movsl
mov
mov
sti
lret
clc
jmp
and
pop
jmp
rorb
push
sbb
or
inc
out
xlat
jp
hlt
fwait
push
enter
dec
cmpl
sahf
mov
rolb
mov
cli
xchg
out
inc
mov
je
adc
loopne
add
lods
xchg
aas
iret
add
js
rorb
jge
out
add
js
jno
push
popf
stos
xchg
clc
lea
repnz
pushw
and
pop
mov
mov
out
pop
xchg
add
out
jecxz
insl
enter
jp
arpl
into
aaa
sbb
push
lret
fs
pop
or
bound
shr
xchg
adc
stos
and
cmp
dec
mov
add
lea
cmp
push
sub
rclb
pop
fdivl
or
icebp
dec
pop
push
insb
mov
dec
add
xor
or
xor
adc
sbb
into
inc
imul
push
cwtl
jae
mov
loopne
mov
mov
xor
insb
xchg
mov
lock
das
out
popa
xlat
cld
xor
in
adcb
vminss
loope
mov
daa
jb
es
aaa
pop
das
jl
mov
leave
test
push
or
fnstsw
and
data16
cwtl
cmc
push
and
cmc
sbb
loop
inc
lret
rclb
sarl
shll
jnp
outsb
push
cwtl
and
fistl
mov
mov
rcl
sub
cltd
pop
xor
mov
loope
and
cli
jl
push
shl
jecxz
push
add
mov
iret
data16
pop
and
pop
xchg
daa
fstps
pop
loopne
mov
out
lea
ror
or
xchg
or
cmpl
fnsave
stc
sub
insl
in
movsb
out
mov
pop
and
dec
repnz
lret
xchg
cmp
mov
out
gs
dec
fdivrs
pusha
es
jl
pop
shll
sub
mov
mov
into
inc
lea
repz
insl
popf
mov
dec
scas
xchg
xor
or
xchg
cmp
adc
jb
and
push
cld
sub
lea
outsl
mov
mov
mov
xchg
fldenv
inc
rcll
mov
scas
loope
in
inc
hlt
xchg
daa
push
orl
jge
jmp
mov
dec
inc
in
fwait
mov
scas
dec
testl
ds
outsb
mov
andl
outsl
and
add
rol
cld
sbb
lea
mov
ljmp
mov
daa
fs
in
inc
lods
lods
pop
sbb
adc
js
add
mov
es
cmp
pop
sbb
push
mov
cli
cwtl
incl
adc
xlat
in
inc
cltd
icebp
in
mov
or
xlat
test
push
imul
fldcw
add
jnp
cmc
dec
lods
arpl
mov
shrl
mov
mov
cmc
inc
aad
cwtl
inc
repz
ja
cmp
rorl
imul
dec
js
mov
movl
mov
push
cmpl
xchg
clc
cmp
jge
xchg
xchg
stos
xchg
mov
jne
daa
fcoms
cmc
aam
js
pusha
add
rorl
dec
adc
lods
cmp
and
js
lock
xchg
stos
cmp
dec
or
repnz
or
or
aam
or
inc
xchg
ret
mov
mov
fnstcw
js
cmp
cltd
lock
cmpsb
mov
xchg
fnsave
test
das
in
sbb
aas
inc
jnp
rcrl
xor
push
insb
int
popf
jno
xor
dec
pushl
and
outsb
pop
dec
mov
inc
jne
or
or
daa
popa
jb
es
mov
mov
imulb
mov
push
sbb
bnd
leave
jmp
mov
xchg
sbb
push
std
cmpsl
add
rorb
fs
cltd
push
cmc
pop
jp
sbb
pop
xor
sbb
cmp
popa
jecxz
imul
pop
push
sbb
jb
pop
add
mov
jle
test
mov
push
add
int
xor
jg
inc
jne
mov
hlt
pushf
adc
jmp
inc
ret
clts
std
outsb
jbe
mov
popa
and
jbe
inc
push
sbb
or
lods
int
pop
inc
and
test
dec
leave
and
inc
jb
xorb
mov
insl
jns
idivl
cmc
inc
shll
inc
outsb
test
xchg
iret
cmp
adc
push
das
scas
mov
fidivs
flds
in
mov
clc
lods
lock
int3
outsb
sub
sti
mov
ljmp
cmpl
cmc
and
test
hlt
jno
or
cld
dec
ss
push
mov
dec
aad
mov
adc
mov
aaa
das
pop
test
out
lahf
ja
cmpsl
sub
mov
sub
lods
pop
leave
pop
pop
dec
idivl
sbb
int
aas
xor
jbe
out
jmp
imul
jl
nop
cmp
fstpl
pop
loop
add
jae
add
cmpsl
inc
inc
gs
cmpl
rcr
js
movsl
out
jecxz
stc
loope
aaa
pop
leave
fdivp
dec
push
sbb
jp
cltd
ljmp
andb
std
lret
mov
xor
ficomps
nop
movsb
mov
cmpb
jnp
fldcw
cmp
lock
out
pop
cmp
int
pop
wrmsr
mov
jmp
dec
xor
mov
scas
mov
ds
int
jge
push
in
push
movsl
xor
shll
aad
pop
ds
dec
push
repnz
and
push
mov
jl
lcall
mov
test
fwait
mov
icebp
lcall
xchg
les
jns
mov
subl
je
outsb
fmull
imul
jl
cmp
int
das
push
add
movsl
pop
pusha
mov
data16
pop
fistl
leave
ret
pop
pushw
push
imul
jp
in
lock
lods
xchg
js
xor
inc
aam
sub
ret
adc
sub
pop
jecxz
adc
out
jl
scas
mov
roll
push
ret
sbb
lock
out
push
jb
xchg
stos
dec
xor
sbb
add
and
imul
xorl
daa
shr
out
pop
addr16
adc
sub
das
stos
pop
jne
fs
push
sbb
xchg
mov
mov
mov
mov
push
mov
sbb
or
mov
dec
call
stos
ret
fcoms
add
jl
jp
lods
inc
loopne
push
sbb
dec
add
movsb
mov
jge
sahf
out
mov
jge
xor
mov
dec
addr16
in
push
mov
jle
or
push
dec
dec
or
stos
les
fstpl
ljmp
lcall
push
sbb
out
les
icebp
testb
inc
test
cmp
ret
clc
inc
cmpsl
subb
cli
pop
loope
inc
push
lret
pop
movsl
and
clc
dec
imul
cmp
dec
and
out
icebp
push
push
push
dec
lods
movsb
pop
cmpsb
sub
aam
mov
movsl
sbb
sahf
pop
inc
cmpsl
daa
xchg
fwait
mov
imul
divb
mov
test
loope
test
fstl
push
clc
shl
data16
pop
mov
test
push
cmp
into
nop
outsl
dec
push
or
arpl
into
sahf
mov
jne
xor
in
push
jle
lcall
xchg
cmp
adc
mov
xchg
push
cs
adc
pop
mov
fcmovb
cmp
out
cmpsl
or
push
repnz
mov
bound
sub
popl
mov
mov
mov
and
bound
xorl
pop
ljmp
je
into
mov
sbb
pop
sub
cmp
or
sub
add
xchg
and
sbb
lea
jo
jge
mov
add
sbbb
lods
lock
inc
in
sub
or
pop
xlat
pop
add
xor
imul
mov
and
jo
ret
das
cmp
jg
clc
in
or
push
sbb
imul
sarb
push
rcll
jmp
sub
fdiv
shlb
sbbb
idivb
add
addb
mov
leave
lret
add
push
mov
add
adc
test
mov
dec
xor
test
popa
movsl
js
dec
test
mov
push
in
popf
inc
mov
xchg
push
cmpl
arpl
and
cmp
jmp
xchg
loope
lds
stos
cmp
popa
push
or
sbb
or
pop
test
pop
sub
mov
mov
xor
pop
test
or
push
add
stc
mov
dec
out
leave
cmpsb
iret
shrb
cmp
push
xchg
cmpsb
jnp
ja
shlb
xchg
mov
xor
test
out
es
push
repz
aas
out
pop
jmp
mov
jg
xorl
pop
sub
sub
jns
insb
outsb
sbb
mov
and
test
fucom
insb
xchg
bound
fnstsw
ret
rorb
cwtl
mov
leave
jo
mov
pop
imul
jp
jg
sub
int3
pop
adc
shlb
jle
ret
cmp
js
bound
sbb
sbb
movsb
popa
sbb
inc
cmp
fld
adc
or
mov
inc
pop
pop
or
decb
sub
fnstcw
jge
retw
fnstsw
xchg
cmp
mov
or
xor
push
or
adc
ficoms
pushf
push
cmp
int3
add
adc
pusha
adc
enter
ret
push
sub
or
add
mov
and
dec
lods
inc
mov
push
test
loop
xor
mov
pop
pop
adc
js
jp
dec
mov
lods
adcl
mov
cli
push
mov
dec
mov
mov
pop
notb
push
fwait
add
add
or
test
fwait
ljmp
and
xor
pop
lret
add
add
mov
dec
xor
jmp
add
jmp
xchg
push
dec
push
repnz
lds
or
out
das
xlat
in
jge
outsb
adc
fisubrs
or
xchg
pop
and
shlb
cmpsl
dec
icebp
out
add
pop
lods
xchg
scas
and
repnz
sbb
fucomi
xchg
adc
or
jbe
jmp
jp
dec
adc
arpl
not
mov
cmp
leave
adc
into
xor
jno
ror
mov
idiv
imul
jge
adc
int3
stos
mov
inc
aad
add
sbb
mov
imul
mov
and
lock
jnp
sahf
fidivl
pushf
pop
pop
js
hlt
sub
lods
jns
and
dec
sbb
mov
or
inc
jl
dec
dec
sarb
mov
in
or
pop
add
mov
mov
int
pop
sub
sub
xor
mulb
out
imul
das
dec
or
fld
mov
sbb
xlat
arpl
loope
cmp
push
bound
push
scas
inc
pop
sbb
jne
je
add
add
sbb
lret
shl
rcll
and
mov
out
cmp
xor
cmp
fcoms
push
jmp
mov
cmp
push
dec
cmp
pop
je
cld
or
pop
cmp
mov
in
dec
iret
mov
into
mov
int3
sarb
xor
mov
subb
jne
je
sbb
push
or
mov
repnz
jo
pop
out
mov
add
rclb
repnz
lock
idivl
insl
lods
jb
pop
mov
dec
jns
inc
data16
or
fiadds
push
outsl
gs
cs
imull
enter
mov
cmp
cmp
sar
adc
mov
mov
fs
test
stc
mov
jnp
mov
inc
fisubl
mov
or
into
cmp
mov
scas
xchg
mov
in
addr16
leave
add
xor
mov
test
out
mov
pop
or
xor
cld
loope
pop
mov
inc
and
jle
in
sub
imul
mov
cmp
mov
mov
sbb
dec
ds
or
adc
lods
cmpsl
lret
push
roll
rclb
mov
push
add
sahf
gs
out
inc
and
mov
push
and
add
add
or
add
and
ss
mov
ds
pop
mov
mov
stc
in
xchg
jno
in
push
rcll
sbb
out
push
mov
dec
inc
mov
or
out
daa
push
mov
cmp
sub
push
inc
adc
aad
dec
lods
sub
sbb
push
dec
ds
aad
inc
cli
bound
pop
sbb
mov
int
pop
adc
frstor
loope
xlat
fadds
push
add
les
mov
aad
sbb
dec
sub
push
dec
xchg
and
xchg
mov
outsb
jnp
aad
test
data16
or
popf
xchg
mov
pop
sarb
adc
mov
shrb
ret
xor
mov
lret
jne
insb
adc
mov
cld
dec
adc
push
ljmp
popa
adc
jbe
pop
loope
pop
int3
jp
or
repz
mov
sti
jl
hlt
sysexit
repz
sub
enter
add
sub
fsubr
mov
mov
scas
cmp
lret
add
test
mov
loopne
nop
leave
iret
push
fs
jno
sub
dec
rorb
lret
gs
mov
mov
pop
ljmp
mov
mov
in
mov
fwait
mov
insl
jb
sahf
inc
jmp
repz
mov
inc
lock
or
imul
dec
cmpsl
icebp
addb
ss
xchg
add
in
mov
xor
xor
push
lock
cmp
lea
into
leave
and
xor
inc
mov
dec
stc
push
cs
push
shlb
xor
adc
mov
mov
adc
aas
and
jae
mov
sarl
add
adc
mov
popa
push
orb
sbb
cli
mov
mov
or
lahf
inc
rcrb
fs
in
ljmp
pushf
pop
fdivp
adc
mov
outsl
push
adc
sbbb
int3
sub
ja
adc
cmpl
int
ret
leave
adc
orb
mov
xor
repnz
adc
into
xor
push
xchg
mov
mov
loop
push
dec
mov
mov
or
fdivrs
mov
jmp
sbbb
sar
icebp
push
add
arpl
test
push
push
mov
jnp
or
loopne
popl
jo
imul
mov
push
into
xchg
push
mov
push
sti
push
mov
pop
ja
xchg
mov
sub
pusha
push
out
or
mov
sarb
and
push
xchg
fsts
rsm
outsl
jl
add
popf
cld
jno
mov
or
lret
mov
inc
icebp
jmp
into
leave
xchg
cmpsl
test
popf
sbb
fs
notb
xchg
fistpll
or
pushf
nop
mov
and
test
mov
jns
ljmp
in
xchg
pop
lcall
mov
dec
sahf
repz
cld
outsb
rolb
aam
jp
clc
mov
pop
mov
pop
test
out
bound
push
loop
push
je
jnp
rcrb
dec
fldt
mov
ret
push
cmpsl
icebp
mov
stos
xchg
gs
cmp
scas
fidivl
ret
mov
xor
in
push
fmuls
mov
or
sti
xchg
mov
sar
inc
test
in
and
push
or
or
mov
gs
push
loopne
in
test
adc
xchg
inc
aas
or
mov
xchg
mov
daa
push
fdiv
jae
lret
pop
jmp
insb
pop
and
and
dec
mov
data16
push
dec
add
xlat
inc
mov
push
es
jge
iret
xchg
adc
jne
xor
cmp
xor
enter
mov
les
jmp
xor
sub
xchg
sti
jo
or
gs
sub
jmp
loopne
xchg
adc
ja
repnz
inc
xchg
xchg
fadd
and
inc
xchg
mov
jmp
pop
stos
jl
push
fwait
ss
lea
ret
sbb
xchg
psubusb
xchg
mov
cmpsl
mov
test
xchg
lcall
rclb
sub
stos
hlt
push
mov
mov
mov
dec
jb
das
sbb
jge
notl
lock
ficoms
fiaddl
xorb
mov
push
adc
push
repnz
hlt
int
mov
or
lret
push
les
aas
sbb
fs
je
inc
insl
push
jge
lea
in
hlt
ffree
in
aam
and
xor
add
adc
fs
je
inc
insl
push
jge
lea
in
hlt
ffree
in
aam
and
xor
add
adc
fs
je
inc
insl
push
jge
lea
in
cmc
ffree
in
std
and
ss
dec
je
les
jge
lea
lods
xchg
lret
jl
cmp
sub
testb
pusha
mov
and
adc
add
fistpl
rorb
lock
imul
dec
mov
inc
stos
push
fwait
pusha
mov
add
adc
and
push
imul
shlb
scas
seto
dec
mov
out
xchg
sbb
xor
add
rolb
subl
sub
cmp
cli
add
adc
xor
adc
fbld
sub
adc
sbbb
pop
cs
push
pop
jp
mov
cld
xchg
mov
adc
dec
iret
mov
pop
loopne
xchg
cli
iret
fisubrl
std
jmp
mov
xorb
jmp
jnp
aam
in
cmc
push
test
insb
test
adc
incb
push
out
fidivs
adc
and
loopne
mov
or
hlt
icebp
notb
mov
ds
push
lods
fs
dec
popl
push
int3
sti
jecxz
xchg
add
add
repz
fs
adc
pop
push
xor
ret
xchg
roll
call
pop
fimull
adc
jo
add
mov
ret
loop
int3
sbb
or
fnstsw
fisttps
jge
push
stos
ja
subl
inc
push
adc
add
fnstcw
adc
xchg
push
mov
dec
mov
movsl
jle
rorb
push
nop
lds
ret
leave
xor
sbb
dec
jmp
lret
xor
shrb
sbb
or
jnp
imul
inc
stos
push
fwait
pusha
mov
add
adc
and
xor
shrb
sbb
or
jnp
imul
inc
outsl
push
xor
test
mov
lcall
data16
sub
clc
pop
dec
addr16
sub
dec
cmp
repz
lods
or
xor
inc
test
add
shrl
lea
sbb
jle
xor
push
aas
jl
sbb
push
xchg
cli
hlt
imul
mov
rcll
mov
add
cmc
mov
jle
stos
xor
fsubrs
xlat
ret
dec
mov
pop
pop
pop
jo
jge
negb
adc
mov
sbb
icebp
pop
std
mov
push
pop
pop
imul
and
jb
fwait
sahf
repnz
xchg
cmp
xchg
mov
leave
jle
mov
xchg
out
daa
adc
loopne
rorl
push
outsl
test
sub
xor
push
sbbl
push
repz
and
fisubrs
pushf
and
sbb
xchg
fmul
cmp
sahf
dec
popa
jp
push
mov
mov
addb
outsl
jne
ss
imul
popa
xor
jg
inc
pop
gs
jmp
fisubrl
or
call
inc
jnp
sbb
pop
cmc
call
orb
std
cmp
add
and
xchg
adc
icebp
lods
fldl
jecxz
mov
out
cmp
mov
sti
xlat
mov
mov
mov
add
jo
adc
jle
dec
mov
cld
ret
fistl
inc
inc
gs
xor
push
repz
mov
enter
xchg
leave
xchg
out
mov
mov
test
pop
loope
bnd
lret
lea
mov
sbb
cwtl
jae
test
inc
sahf
xor
or
shll
adcl
out
inc
and
lods
sbb
shll
cld
lds
das
insb
inc
adc
add
jno
mov
cmp
ret
sub
pop
das
mov
out
cmp
jno
test
stos
leave
jae
std
sarb
lea
addl
xor
adc
sub
fwait
test
and
fmul
or
mov
popl
mull
and
movsb
shlb
and
clc
lcall
outsl
sub
xchg
cs
jp
pop
lret
loop
jb
cmpsw
lea
enter
dec
stos
aad
jl
or
loope
gs
jae
rorb
push
jg
cmpsb
stos
out
lds
push
js
loop
mov
jae
imul
aas
je
outsb
adc
push
push
ret
faddp
xchg
lock
imul
inc
orl
cltd
test
sbb
push
dec
movsb
test
repnz
int3
lods
jb
lret
or
shlb
daa
incb
mov
xor
jb
xor
mov
mov
pop
loopne
cmp
pusha
negb
dec
mov
shlb
push
mov
nop
inc
sbb
iret
pop
cmp
lahf
dec
test
int3
int
xor
mov
bound
mov
xchg
rorb
push
dec
mov
lods
xchg
repz
jp
pop
das
push
push
adc
sub
or
add
int3
xorb
mov
and
jle
inc
cmp
sub
pusha
mov
outsl
mov
pushf
ss
add
subb
adc
testl
das
out
int
mov
into
mov
je
fadds
outsl
sahf
roll
repnz
mov
subb
lcall
xor
ret
or
cmp
xchg
mov
les
nop
int3
sbb
stos
shlb
cmp
lcall
xchg
push
lcall
lret
mov
jno
xchg
sti
iret
pop
cltd
lcall
test
add
ja
sbb
jo
or
mov
mov
add
mov
sbb
pop
leave
in
sub
push
xor
push
sahf
cmp
int3
hlt
jg
mov
xor
sub
call
dec
orb
out
sub
aaa
fwait
mov
mov
cmp
fmuls
cld
out
je
cwtl
adc
add
mov
popf
imul
sbb
xor
lret
jle
std
mov
sbb
jl
ljmp
sbb
push
mov
mov
in
rcll
xchg
js
and
nop
daa
push
add
or
mov
js
mov
dec
sbb
bound
inc
pop
rorb
cmp
adc
bound
mov
pop
sub
jo
inc
mov
shl
dec
fisttpl
add
icebp
ja
cmp
sub
insl
adc
push
mov
mov
dec
push
enter
bound
add
pop
popf
jp
aaa
fwait
pusha
dec
daa
push
es
pop
fcomps
cld
xchg
subl
pop
int3
outsb
gs
mov
loop
loope
ret
jg
xchg
add
cmp
sbb
push
shrl
lret
icebp
fs
sub
inc
mov
je
repnz
roll
and
sti
stc
mov
addr16
cmpsb
shl
push
jge
fwait
cmpsl
sar
xchg
push
icebp
out
cwtl
loop
nop
lods
jnp
mov
push
cmp
int3
jb
scas
and
pop
shlb
jl
lods
bnd
loop
lds
scas
cmp
into
cmp
push
lods
xor
push
lcall
sub
clc
cmpsb
sahf
xchg
lock
mov
movsl
or
in
adc
leave
push
xor
mov
or
inc
jno
mov
xor
iret
test
daa
xor
rolb
lahf
sbb
pusha
fsubr
xchg
dec
enter
in
mov
mov
inc
push
fldt
mov
cmc
lea
das
cld
jo
mov
cmp
add
cmc
pop
and
xor
push
adc
mov
jbe
fwait
stos
rcl
fnstsw
mov
cmpsb
fwait
leave
into
ja
inc
xchg
jnp
xor
sub
pusha
xchg
faddl
pop
jp
in
mov
xchg
xchg
jae
out
mov
sub
sti
test
mov
cmpsb
adc
cmovl
xchg
lock
mov
cltd
mov
dec
mov
push
inc
xchg
test
inc
pushf
push
stos
lret
push
push
das
mov
and
xchg
adc
ljmp
and
inc
lret
cmpsb
sbb
test
hlt
ja
cmpb
cmp
jle
push
addl
adc
xchg
inc
js
sbb
inc
outsl
push
inc
or
add
sub
int3
hlt
dec
mull
in
jnp
bound
and
lea
mov
in
ret
and
stc
inc
cmp
call
jns
addl
mov
mov
aam
mov
mov
mov
pushf
xchg
pop
xchg
iret
push
mov
gs
mov
jne
inc
mov
std
mov
jecxz
test
sub
pop
repnz
jle
mov
mov
into
push
sbb
test
add
fucom
insl
aaa
xchg
mov
add
mov
icebp
dec
notl
mov
inc
jl
add
in
arpl
insl
sub
or
lahf
mov
call
mulb
add
inc
test
inc
sbb
mov
add
and
xlat
out
mov
das
ret
xor
movsl
je
enter
jns
ja
mov
sub
sub
fidivl
mov
test
jnp
scas
mov
adc
cmp
dec
cmp
jg
push
imul
xor
xlat
dec
scas
pop
test
das
sub
scas
adc
insl
sbb
dec
in
jnp
add
fnstenv
js
sub
loop
iret
mov
lret
jb
jmp
das
push
pop
or
xor
mov
mov
scas
in
mov
adc
xlat
dec
mov
or
pop
shr
jp
xchg
ror
push
sub
sbb
cmp
adc
adc
lret
and
push
mov
sarb
pusha
cmpsl
mov
outsb
sub
xchg
mov
in
das
lea
push
fcos
lea
repnz
lods
neg
jbe
faddl
mov
mov
mov
jb
jp
ja
orb
mov
inc
or
data16
jae
jmp
fldt
stc
push
movsb
xchg
test
shll
jp
xchg
lods
xchg
call
dec
push
or
adcl
cmp
std
cltd
xchg
loopne
sub
push
rcr
icebp
cwtl
jne
adc
dec
mov
mov
out
rorb
xchg
sbb
imul
add
pop
mov
repz
jbe
sti
mov
lds
mov
lods
cld
insb
aas
push
add
lahf
jge
scas
sub
les
push
sub
lret
sbb
mov
sbb
xchg
jne
dec
mov
ret
rol
push
xchg
icebp
push
jb
sub
nop
stos
pop
or
inc
xor
fdivl
les
les
mov
cmpsb
push
shlb
inc
mov
xor
mov
pop
inc
cld
in
sub
add
mov
xchg
repz
xchg
push
jp
jno
mov
int
or
pop
dec
adc
out
das
imul
test
sbb
je
arpl
dec
lock
or
xchg
cs
or
sahf
sahf
test
jg
or
xchg
fnstenv
js
dec
daa
mov
aaa
cmp
inc
testb
jle
ja
adc
cmp
lcall
inc
les
rcll
dec
inc
cmpsb
jnp
mov
pop
jge
cld
setg
dec
mov
or
push
shrl
and
fisubrs
cmp
ss
inc
push
cld
xchg
xchg
or
adc
leave
mov
fstps
lcall
add
imul
adc
scas
cmp
ficomps
add
push
stos
addr16
push
sti
shll
lahf
dec
jae
outsb
xor
cmp
dec
mov
xchg
pop
push
mov
pop
sub
cmpsb
mov
mov
inc
movsl
mov
inc
xchg
movsl
push
ret
lahf
lea
jp
loop
stc
xchg
ret
ss
sbb
sbb
adc
xchg
addr16
fwait
inc
sbb
divl
mov
add
xor
jns
jae
inc
push
xchg
inc
rcll
orl
xor
outsb
ljmp
sti
rclb
sbb
mov
mov
sbb
or
out
and
or
imul
in
lret
sbb
jno
xor
jecxz
aam
repz
inc
jnp
insb
ret
enter
jns
xchg
pop
xlat
std
xchg
inc
loopne
jbe
aaa
fsubs
sub
pop
sbb
push
dec
xchg
add
cld
pop
push
xlat
inc
xchg
ret
mov
sbb
das
or
cli
std
mov
dec
insb
cmc
clc
fisttpll
cmpb
lret
nop
adc
pop
lcall
mov
push
shlb
rcrb
hlt
ljmp
in
add
movsb
lret
mov
gs
adc
xor
pop
lahf
and
mov
dec
or
call
loop
sbb
jl
jp
xor
mov
sbb
cmp
xchg
cmp
dec
add
lods
jne
shll
cmp
inc
or
aam
mov
fnstcw
repz
int3
rclb
sub
stos
push
mov
xchg
out
imul
fnstsw
int3
fs
xchg
pop
mov
inc
sbb
stos
cmp
fmuls
push
mov
bswap
adc
mov
dec
fcoml
cmp
or
dec
lret
into
mov
xchg
mov
jl
push
jmp
jle
rorl
add
mov
pop
sbb
pop
xchg
insl
add
movsl
xor
in
jae
mov
fwait
repz
out
cmp
add
mov
inc
mov
and
pop
mov
fcmovnu
add
fsubs
fsubr
ret
mov
dec
push
hlt
pop
test
stos
test
xor
adcb
pop
push
mov
aam
push
jb
inc
mov
mov
pop
add
out
jmp
shrb
insl
xchg
xchg
push
testb
or
cli
sahf
jp
inc
out
iret
outsl
add
decl
inc
insl
mov
repz
mov
lds
mov
adc
dec
inc
sbb
hlt
add
push
add
add
mov
sbb
out
rcrl
adc
pop
pop
adc
push
adc
cmp
js
jle
sub
add
mov
pop
or
test
pop
lret
add
xchg
or
in
inc
adc
orl
or
dec
dec
cmc
push
mov
cmpsl
aaa
pop
pop
lret
add
sbb
or
orl
imul
mov
in
hlt
ss
iret
test
insl
cmpb
push
lahf
jge
inc
pop
sub
sub
loope
pop
push
cmc
out
sub
mov
or
cmpsl
add
iret
sbb
add
cmp
das
mov
sub
pop
aad
bound
mov
inc
xchg
daa
enter
xor
cmp
pop
pop
push
fidivrl
arpl
outsb
dec
outsb
rolb
pop
adc
pop
gs
dec
ret
bound
mov
out
mov
add
inc
sbb
dec
or
add
sub
cltd
and
leave
push
test
loopne
mov
es
jbe
mov
int3
jae
mov
ret
lea
call
mov
mov
iret
cmc
aaa
pop
pop
into
scas
pop
add
push
jle
outsb
inc
jmp
xor
jne
sub
push
and
or
cmp
cmpsl
test
std
push
push
ds
fiadds
and
add
shrb
std
xchg
push
aas
fmull
aad
test
outsl
clc
gs
cli
imulb
dec
in
ret
adc
dec
mov
shll
in
jmp
pop
mov
xorb
inc
popf
movsb
pop
or
ja,pt
mov
mov
cmpsb
lods
or
jecxz
popa
jle
pusha
sub
and
mov
sub
or
mov
push
aam
jge
call
mov
inc
nop
mov
out
xchg
inc
sbb
push
out
aas
mov
pop
faddl
sbb
sub
inc
aam
idivl
in
push
jg
mov
sub
mov
and
inc
push
rolb
aam
sub
sub
insb
push
movsl
imul
stos
loopne
mov
cmova
ficoms
lret
adcb
pop
sub
js
test
or
pusha
xchg
stos
dec
inc
lahf
inc
cmp
popf
push
sbb
xchg
ret
rcll
pop
mov
inc
push
sbb
aas
and
xor
aas
inc
fwait
push
sti
or
sarl
push
xor
out
jmp
pop
mov
and
shl
cmp
pop
lahf
add
sub
scas
pop
jns
inc
add
push
mov
mov
ret
test
jp
or
mov
test
cmp
nop
jp
jns
sub
data16
dec
roll
adc
add
loope
fwait
es
adc
sbb
pop
cmpsl
push
or
mov
xchg
leave
jmp
mov
cld
jecxz
ret
pop
aam
sbb
in
ljmp
dec
jl
in
jbe
lret
push
loopne
sti
stc
sbb
inc
imul
out
mov
xchg
cltd
push
jp
sbb
or
xor
popa
fisubl
imul
sahf
lods
into
cmp
xchg
popa
sarl
add
jp
pop
mov
sub
mov
fmul
insl
and
mull
ret
stos
test
add
test
jecxz
push
xlat
fcompl
in
test
xor
jbe
xchg
insb
fistpll
in
scas
arpl
xchg
sbb
mov
fdivl
pop
mov
cmc
mov
cwtl
lcall
stc
cmp
jmp
pusha
cmpsl
push
scas
loopne
pop
bound
push
pop
inc
rcrl
add
push
insb
xor
sbb
in
push
cmp
push
jmp
push
ret
aaa
or
and
push
xchg
mov
jne
xrelease
pop
fmuls
push
mov
cmpl
mov
clc
dec
adc
push
pop
cmp
pop
ficomps
xchg
loope
inc
ljmp
add
xchg
dec
aaa
push
int
orl
mov
mov
lea
jns
imul
sbb
sub
cmpsb
sbb
sarl
out
lock
cltd
ja
adc
adcl
and
sbb
aaa
inc
pop
stos
pop
aad
nop
adc
jb
adc
dec
loopne
fnsave
adc
mov
push
ret
mov
sbb
dec
xor
fnstsw
js
aas
inc
mov
popa
pop
cwtl
repz
popf
cmpsb
sbb
and
clc
test
sub
test
mul
insl
add
dec
sbb
pop
fstps
push
lret
jb
mov
pop
jns
push
dec
xor
in
mov
out
push
xchg
ds
mov
lock
or
sub
pop
orb
lods
pushf
or
scas
ret
sbb
dec
les
inc
gs
lcall
aaa
sub
daa
dec
shrl
mov
outsb
xchg
lds
lcall
sbb
stc
xor
and
dec
jge
mov
xorl
sbb
jae
jno
xor
gs
rcl
fstps
and
pop
dec
aam
stos
int
mov
iret
out
pusha
push
inc
stos
and
cmp
popa
aaa
jmp
jle
mov
sbb
push
dec
test
lods
jb
fldl
in
js
imul
addb
adc
mov
push
jecxz
mov
loope
jmp
pop
pop
in
pop
stos
icebp
mov
adc
icebp
sahf
std
or
mulb
xchg
jmp
cmpb
mov
mov
rcr
pushf
notl
lcall
or
insl
bound
push
xchg
sbb
cmp
xor
push
or
lret
mov
sarb
and
repnz
mov
adc
add
or
ret
js
in
pushf
aam
fsubs
xchg
pop
lcall
shl
sbb
or
les
sub
jl
cmp
sub
mov
dec
je
out
dec
cltd
push
jmp
add
icebp
jmp
cld
push
dec
repnz
dec
adc
pop
rcrl
adcb
jbe
inc
negb
stos
inc
or
fildl
popa
push
and
xchg
insb
xchg
inc
hlt
scas
call
stos
push
adc
call
jp
gs
push
mov
or
jmp
lret
xchg
shrb
inc
ret
add
loopne
mov
xchg
filds
or
repz
bound
push
stos
push
push
or
sbb
jg
rol
xlat
ds
cwtl
leave
inc
pop
popa
das
ja
das
imulb
mov
nop
shll
rclb
add
and
sbb
xchg
jl
sbb
loope
test
cltd
or
lahf
jne
jno
leave
clc
jmp
or
jo
xor
daa
outsl
pushf
and
insb
or
popa
int
cmp
fmull
cmp
xchg
pop
aaa
jb
out
adc
inc
shll
sbb
in
jecxz
mov
pusha
loop
jmp
push
icebp
loope
pop
pushl
out
stc
sbb
jae
hlt
test
xchg
int
mov
jecxz
ret
fs
mov
pop
push
sarl
sbb
cmpsb
mov
sub
loop
push
mov
pop
pop
pop
mov
cmp
xlat
push
pop
add
pop
cmp
push
pop
xor
dec
dec
test
sub
xchg
inc
and
icebp
inc
aad
pop
inc
mov
adc
mov
test
mov
jp
ds
mov
mov
mov
jecxz
stc
xor
cli
cmp
rorb
sbbl
arpl
data16
mov
idivl
xor
pop
or
shlb
ret
shll
mov
and
inc
push
pop
outsl
mov
jecxz
clc
mov
inc
sbb
pop
bound
loopne
mov
jo
mov
mov
mov
pop
insb
out
pop
or
hlt
loope
imul
push
inc
jge
jae
movsb
aas
in
lcall
in
mov
loopnew
push
mov
or
lahf
lock
mov
add
out
jb
lds
jnp
sarl
leave
jmp
cld
dec
pop
sub
fs
pop
jo
pop
or
pop
mov
aad
sub
add
insl
push
fstl
jle
insb
add
inc
test
push
xlat
repz
mov
sub
mov
int
shrb
lods
divb
jnp
je
gs
inc
in
pop
ds
mov
gs
xor
aam
adc
or
or
add
cltd
push
mov
lcall
sub
int
cmp
lods
mov
lret
mov
aad
aaa
fldenv
push
jecxz
mov
iret
leave
add
inc
imul
out
int3
in
jmp
imull
ja
arpl
pop
and
pop
ret
dec
add
inc
sub
sub
xchg
and
jb
lret
andb
sti
add
adc
and
xor
shrb
sbb
or
jnp
imul
inc
stos
push
fwait
pusha
mov
add
adc
and
xor
shrb
sbb
or
jnp
imul
inc
test
mov
je
add
jnp
and
xor
shrl
adc
psubw
jb
pop
test
xchg
add
adc
mov
aam
mov
or
movsb
fdivs
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
and
aad
add
add
pop
add
add
add
pop
push
add
add
add
sub
sub
lods
add
add
add
add
add
add
loop
inc
add
push
add
add
add
stos
add
dec
add
add
scas
add
inc
add
add
push
arpl
mov
dec
add
add
pop
add
add
add
add
add
xchg
jg
loop
testb
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
scas
add
add
fadds
jae
and
sub
dec
add
add
mov
add
add
pop
add
pop
add
add
add
add
dec
add
add
stos
add
add
add
add
add
add
xchg
in
add
add
push
add
pop
add
add
add
add
scas
add
add
add
add
jne
push
cmp
add
add
add
add
add
add
pop
add
add
add
add
add
add
or
add
xor
sub
xor
add
add
popa
add
add
add
xchg
add
jae
push
add
add
add
dec
add
add
add
add
add
add
add
add
add
or
movb
add
mov
add
add
and
incl
sbb
push
arpl
outsb
add
add
add
sub
inc
add
sub
add
add
add
add
add
add
dec
add
add
add
add
add
pop
add
add
add
dec
add
add
add
add
add
add
add
dec
add
xor
sub
adc
jnp
and
movb
add
addb
add
cmp
sub
sbb
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
sbb
aaa
add
add
add
add
add
add
add
sub
loop
add
cmp
insl
add
insl
add
add
add
add
mov
add
ja
sub
xchg
add
add
adc
mov
arpl
fwait
add
add
add
add
int
addb
add
add
add
add
push
add
mov
add
or
add
add
add
add
add
add
add
add
xor
and
fwait
add
add
add
stos
add
add
pop
add
add
cmp
or
iret
add
add
sub
dec
add
add
add
add
add
add
add
dec
add
add
nop
add
xor
add
add
xchg
popl
popf
add
and
mov
add
jg
scas
add
add
inc
add
add
push
add
mov
add
add
add
cltd
add
add
add
add
add
add
add
add
add
popl
add
add
sldt
scas
add
add
add
add
add
pushf
mov
mov
dec
or
std
fldcw
adc
cmp
loope
sbb
add
mov
ja
add
xor
sbb
pop
push
mov
test
aam
jbe
stos
push
fistl
lds
adc
push
xor
jb
sbb
push
hlt
popa
iret
mov
and
jae
arpl
int3
push
stc
fcomps
cli
negb
icebp
jno
cli
fdivp
insl
pop
sbb
mov
notb
mov
lahf
leave
in
movsl
xchg
push
popf
test
cmpsl
mov
test
and
mov
hlt
or
cmpsl
out
xchg
cmp
mov
xchg
mov
cs
xor
andl
dec
int
ffreep
lds
jge
adc
mov
cmc
push
xor
outsb
orl
dec
push
icebp
add
xlat
add
xor
jg
sub
push
stc
je
fstl
leave
adc
mov
ficoml
ja
das
adc
stc
adc
lcall
add
fisttps
adc
jb
andl
out
ds
and
hlt
ds
push
fmull
or
sub
xchg
aam
mov
in
inc
jmp
jecxz
outsb
das
adc
hlt
adc
stos
insl
andl
aam
dec
lods
or
sbb
mov
jae
xor
insb
pushf
mov
add
sarb
sbb
adc
dec
fnsave
movsb
mov
jnp
mov
push
pushf
dec
xchg
mov
call
les
filds
adc
hlt
arpl
mov
cmpsb
cs
stos
push
or
sar
aaa
aad
out
pop
mov
mov
pop
mov
sub
nop
imul
and
sti
inc
js
and
lret
pop
movsb
mov
ljmp
push
stos
xchg
inc
iret
push
adc
jge
sub
jb
enter
jl
mov
lahf
add
repnz
test
into
mov
fildll
and
push
dec
mov
es
into
sub
add
sbb
inc
in
je
in
addr16
push
push
je
jmp
out
imul
repz
in
bnd
adc
pop
jns
adc
dec
dec
xor
aaa
fidivrs
adc
ret
out
mov
stc
xor
dec
movsl
mov
enter
dec
loope
daa
mov
ficomps
sub
test
jge
fwait
aaa
dec
pop
mov
inc
sbb
out
outsl
into
xchg
daa
dec
sub
jle,pn
mov
sbb
adc
jl
add
mov
inc
jmp
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
