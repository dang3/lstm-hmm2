call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xchg
push
test
jae
arpl
stos
mov
nop
pop
andb
out
ret
and
or
mov
mov
mov
movsl
arpl
adc
adc
xor
push
adc
repz
xorl
test
imul
cmc
sub
cmp
mov
xchg
cmp
rorl
fcompl
test
push
xlat
add
fcmovnb
ret
push
int3
xlat
or
mov
divl
fisubrs
or
dec
and
leave
inc
jp
xor
arpl
dec
adc
jecxz
sub
stos
repz
fnsave
pop
insl
iret
push
sub
sub
sub
shrl
lret
sbb
ss
cmp
mov
out
or
and
aad
aad
or
cmpsb
adc
or
outsb
stos
scas
sub
mov
icebp
mov
outsb
ror
jbe
cmp
dec
add
or
xchg
loopne
es
mov
jmp
or
outsb
jae
mov
pusha
sbb
mov
or
push
mov
movsl
arpl
adc
add
xor
cmp
ljmp
jne
mov
rclb
rolb
adc
push
mov
dec
xchg
imulb
xor
xor
xchg
cmp
sub
add
or
adc
adc
pop
cmpsb
je
pusha
loope
jecxz
addl
xlat
cld
push
loope
fcoml
movsb
es
lds
cmc
xor
and
repz
xorl
mov
mov
movsl
arpl
adc
add
xor
and
repz
xorl
mov
push
hlt
andl
std
cli
cmp
dec
jb
cmpsl
jmp
mov
hlt
inc
mov
cld
jne
fs
cli
pop
sbb
dec
adc
cmp
pop
cmp
insl
cli
mov
shlb
push
cmc
pop
mov
mov
add
addb
cltd
call
imul
push
dec
mov
xor
ss
jecxz
pop
pop
xor
jae
jg
add
out
pusha
xchg
cmc
pop
in
jo
xchg
addr16
les
push
aad
movl
pop
mov
rorl
dec
push
push
sub
repz
lcall
mov
dec
dec
pop
js
jo
insl
xchg
xchg
pop
out
shrl
push
sbb
es
xlat
inc
mov
sbb
lret
addr16
icebp
sub
lret
push
pop
or
sbb
mov
push
sbb
popf
addr16
inc
out
push
ret
es
mov
leave
jp
insb
lock
popa
xor
mov
lret
loop
fcoml
sub
mov
and
or
mov
or
andl
ret
and
test
and
xchg
stos
xor
mov
sahf
and
mov
loopne
jge
push
and
daa
inc
mov
jecxz
sti
jns
pop
mov
sti
ss
nop
mulb
in
pop
pop
or
adc
out
mov
arpl
add
pop
ljmp
imul
inc
xchg
out
push
dec
call
push
mov
daa
dec
pop
push
lds
pop
lds
mov
loop
push
inc
mov
inc
and
loopne
dec
pusha
movb
inc
fwait
sbbb
fwait
pop
sbb
loope
data16
enter
stc
pop
mov
cltd
in
movl
pop
xorl
adc
sti
je
pop
add
jb
push
popa
pop
mov
idivl
push
push
jg
out
hlt
bound
das
icebp
cmp
dec
call
mov
lahf
lds
cmp
mov
je
std
sbb
sbb
and
bound
mov
dec
dec
arpl
rorl
aas
inc
adc
mov
sti
xor
enter
cmp
adc
in
aam
dec
sub
mov
pop
cli
xlat
sub
jp
test
out
xlat
xor
movsb
negb
push
rorb
inc
dec
outsl
ds
push
fsubrl
scas
inc
pop
push
mov
pop
mov
insb
adc
std
push
loop
mov
push
shl
xchg
fs
loopne
inc
paddsw
jae
ss
insl
movsb
push
and
mov
addl
push
notl
cmp
dec
outsl
xchg
xor
test
stos
lret
in
adc
adc
pop
jg
test
in
mov
aad
daa
adc
sub
jnp
cmpsb
repnz
pop
xor
mov
cmp
rcrb
mov
in
lods
inc
mov
in
jmp
pop
push
clc
jmp
int
mov
mov
cmp
fdivrs
inc
fldl
int3
and
fwait
mov
cmpsb
pop
jecxz
push
jg
insb
insb
add
mov
xchg
xchg
push
ss
sbb
addb
stc
xchg
mov
sti
inc
mov
sarb
fs
xor
jo
dec
jnp
inc
mov
mov
cmp
mov
out
sbbl
push
ljmp
ljmp
lret
movsl
out
les
cs
sahf
mov
or
inc
inc
push
lock
xchg
mov
cmpsb
arpl
loope
sbb
mov
push
aas
mov
test
imul
push
nop
dec
fcoml
cmp
xor
cmpsb
imul
cwtl
test
test
int3
lods
push
lcall
pop
popa
test
ret
or
cli
cmpsl
out
add
dec
xor
ja
sarb
pop
sar
ds
xchg
fildll
add
jmp
out
test
jle
inc
add
mov
pop
loope
rcl
pop
insl
pop
shll
lcall
test
insl
leave
hlt
stc
inc
mov
and
cmp
cmpsl
lahf
pop
cmpsl
scas
testl
lock
cmpsl
cmp
inc
xor
mov
mov
dec
jmp
popf
gs
pop
xchg
addb
jg
dec
pop
daa
xchg
push
sbb
sub
in
inc
test
cmp
mov
add
pop
mov
call
xor
dec
popl
rcrl
inc
adc
call
inc
shrb
mov
push
jnp
lods
adc
in
and
pop
mov
div
sub
or
pop
mov
out
or
call
add
loop
adc
jl
outsl
mov
je
andb
rcrb
js
stc
sahf
sahf
jo
sbb
repnz
inc
inc
sub
cwtl
xor
rcrb
mov
daa
stc
or
fwait
pop
mov
clc
cmpsl
and
imul
sbb
inc
add
sbb
dec
jecxz
pop
out
lret
cli
lahf
test
push
or
inc
mulb
add
imul
xchg
rep
jo
adc
mov
mov
pop
ljmp
pusha
je
dec
mov
aas
idiv
popa
negb
adc
sub
sub
subl
sahf
fisubrl
negl
imul
jne
push
push
cltd
mov
ret
popf
adc
add
inc
loopne
iret
sub
adc
and
lea
pop
pop
call
fisubrs
popf
inc
int3
decb
pop
adc
push
daa
fiaddl
and
es
and
leave
adc
cmp
jb
inc
dec
ret
or
call
popf
ret
cli
dec
dec
xor
sbb
aas
inc
daa
sbb
iret
inc
mov
test
push
test
inc
add
mov
pop
adc
and
inc
pop
repz
es
pop
mov
dec
cwtl
xchg
lea
std
xor
popa
mov
cld
pop
jne
cltd
popa
xor
je
int
nop
xchg
pop
mov
or
les
xchg
push
sbb
insb
enter
fwait
out
out
dec
in
and
movsl
mov
push
int
incb
adc
fistpl
jae
add
push
pusha
test
lcall
stos
lods
outsl
jp
inc
adcl
sub
into
sbb
cmpsb
popl
jle
test
mov
shll
les
aas
push
int
add
lret
movsl
add
pop
aas
add
rcl
les
add
test
dec
aas
xor
adc
sbb
xor
push
pushf
stos
mov
mov
adc
xor
mov
dec
and
cmp
and
xchg
add
addl
iret
mov
inc
lret
mov
iret
lret
lcall
mov
pop
jmp
or
divl
mov
sub
loopne
cltd
sbb
icebp
daa
scas
jg
fdivl
add
fmull
addb
xor
out
inc
or
add
lds
push
rcrl
sbb
pop
pop
shl
lods
cmp
enter
mov
push
pop
pop
add
cli
jg
push
jne
sahf
mov
int
xchg
inc
stc
jne
lods
inc
stos
aas
pop
pop
sar
pop
mov
pop
imul
push
sbb
ljmp
mov
push
rorb
in
xchg
sbbl
dec
sub
ret
rcrl
data16
xchg
cltd
test
add
xchg
repz
xor
sbb
and
test
or
rol
jge
jo
shrb
mov
movsb
sub
ret
mov
mov
rcl
sbb
std
mov
stos
dec
dec
lea
shl
or
add
push
in
pusha
cltd
mov
push
cmpsl
jle
and
cltd
sbb
sbb
jmp
dec
in
sub
jbe
pop
sbb
fildll
sahf
test
je
dec
inc
out
test
add
fisttpl
cmc
pop
into
bound
mov
fcomi
pushf
int3
leave
shll
scas
mov
inc
inc
or
aas
out
xchg
scas
ss
addr16
mov
test
cld
popa
mov
loope
pop
fistpl
les
xchg
mov
pop
jae
inc
imul
push
mov
xchg
push
mov
movb
push
pop
loop
out
mov
stc
pop
inc
fldcw
mov
loopne
xor
xchg
lods
js
add
orl
cmc
pop
jbe
sbb
and
movsb
test
jne
sub
testb
mov
sbb
mov
mov
and
cwtl
cmp
outsl
jns
jmp
rorb
fiaddl
clc
ljmp
scas
and
dec
insb
mov
subl
push
arpl
es
xchg
testb
jle
adc
cmp
mov
stc
sbb
cmp
lcall
aas
shlb
xchg
scas
leave
in
push
lods
lods
fadd
jns
stc
add
int
xor
aad
push
and
mov
stos
mov
dec
xchg
inc
loop
scas
mov
xlat
out
out
insb
sbb
cmp
fsincos
jae
fdivrl
je
out
sub
cmp
mov
sub
mov
in
inc
loop
add
and
push
mov
push
testb
lret
test
push
insb
push
out
cwtl
fimuls
ror
in
addb
lods
xor
jp
ja
mov
mov
cmp
xor
cmp
dec
out
jo
repz
mov
mov
imul
xor
hlt
cmp
lea
or
mov
faddl
js
mov
dec
mov
xor
sub
je
test
inc
pop
aas
lret
xchg
push
enter
leave
lds
fldcw
into
xchg
dec
addl
inc
rcrb
cmp
xor
add
pop
pusha
rcll
xchg
push
stos
outsb
push
lds
jno
cli
inc
sbb
xchg
insw
xchg
into
or
ds
adc
xor
insl
jl
roll
cmpsl
stos
insl
or
sti
dec
incl
inc
loopne
mov
inc
aas
push
inc
cwtl
sbb
pusha
mov
jle
es
fwait
clc
dec
std
sahf
push
aad
ror
roll
push
pop
sti
fstl
scas
push
mov
cltd
add
or
and
adc
mov
jno
lock
sbb
mov
aaa
cmp
into
addr16
push
dec
or
into
cltd
mov
push
jb
xchg
das
pusha
mov
sub
adc
fwait
xor
and
cmp
in
and
and
jmp
inc
stos
out
stos
or
mov
mov
sar
pop
sub
insl
push
xchg
pop
pop
mov
xchg
int
xchg
dec
mov
aad
xor
and
fs
ret
jnp
fistps
pop
jae
mov
mov
cmc
rol
and
sub
mov
test
xchg
dec
jle
dec
jge
mov
push
mov
scas
mov
adc
repz
addl
push
lods
test
xor
sti
mov
sbb
std
inc
and
fisubl
xor
paddb
loopne
std
je
mov
mov
jge
xor
repnz
xor
scas
sub
test
enter
mov
jae
fildll
insl
dec
pop
call
notl
adc
xchg
xchg
adc
cmp
imul
or
add
scas
pop
cmc
cltd
dec
cs
inc
mov
insb
xchg
push
sub
xchg
sahf
pop
jp
test
pop
push
ret
xor
pop
icebp
sahf
dec
inc
push
es
jl
les
xchg
movsl
mov
and
cmp
pop
xor
pop
adc
cmp
hlt
rcll
fisubrl
aaa
dec
jmp
js
mov
scas
emms
lahf
mov
add
sub
movsb
inc
test
movsl
fdivrs
iret
and
pop
fwait
pusha
lret
xchg
cltd
inc
dec
adc
adcb
test
je
mov
mov
and
xor
dec
lcall
lods
sbb
dec
stc
jb
xchg
mov
sbb
mov
arpl
stos
adc
jp
shll
outsl
fs
push
mov
jno
sbb
mov
xor
lock
sub
sahf
push
repz
dec
shll
repz
fldt
cmp
jb
cmp
test
call
into
mov
pusha
lods
popa
sub
pop
test
roll
mov
ljmp
inc
or
dec
mov
mov
mov
test
ror
push
test
pop
rorb
call
pop
fwait
sbb
mov
fs
mov
cmp
loope
adc
mov
insb
and
mov
lcall
out
jno
icebp
xor
cmp
data16
scas
mov
ja
imul
fucomi
mov
add
shrl
mov
push
xor
jmp
pop
or
pop
das
mov
push
int3
divb
add
sahf
mov
fcomip
push
daa
out
in
shlb
fcmovb
mov
cli
into
sbb
push
jns
mov
push
data16
jno
jl
lret
cmp
xchg
push
mov
ljmp
jp
inc
mov
leave
and
ljmp
xchg
fs
dec
enter
cmp
fs
cmp
scas
and
pop
cmp
rcll
fnstcw
xchg
push
or
inc
addr16
mov
pusha
lret
insl
ljmp
inc
lods
mov
push
int
insl
pop
xor
pop
stc
xor
adc
jb,pt
pop
add
scas
arpl
gs
dec
adc
pop
loopne
jne
fimuls
jp
push
mov
mov
ja
or
push
dec
out
or
lret
and
xlat
icebp
aam
pop
or
cli
cmpsb
sub
loop
inc
test
mov
int
push
cmp
imul
cmp
push
fnstcw
xchg
or
call
inc
sarl
imul
fprem
sbb
shrl
dec
mov
jle
sbb
pop
lret
clc
jbe
clc
or
and
int
sbb
iret
mov
lods
testl
in
vunpcklpd
sahf
add
push
lods
push
ret
out
mov
lods
cmp
subl
iret
clc
inc
ljmp
adc
push
mov
gs
adc
jp
fiadds
sbb
lods
sahf
xor
push
dec
test
xchg
add
inc
adc
testl
cmp
ret
cmpsb
and
mov
ljmp
fdivs
fsubrs
push
or
push
pop
add
adc
sbb
xchg
mov
push
rcrb
xchg
mov
xor
push
arpl
add
inc
jne
adc
sub
push
push
scas
xchg
push
jecxz
js
pop
xor
mov
dec
xchg
test
mov
hlt
jno
idivb
fcmovne
xchg
cmc
adc
paddusb
dec
push
push
mov
sub
pop
test
inc
js
movsb
mov
enter
rolb
sbb
jns
or
jbe
leave
ss
jecxz
cmp
pop
jp
xor
and
adc
into
es
pushl
lret
cmpsb
out
add
jno
adc
aam
xchg
das
push
pop
imul
add
mov
push
lods
sub
cmpsl
cmp
inc
int3
sbb
shll
out
xor
test
and
inc
gs
xchg
and
mov
fwait
lods
loope
adc
jg
inc
aam
pop
mov
aas
sub
inc
xor
aaa
and
outsb
cmp
lahf
lock
add
jle
or
jae
fwait
adc
mov
stc
lds
dec
mov
divb
xchg
scas
adc
pusha
mov
repnz
cs
jmp
fistpl
fidivs
and
test
lea
hlt
sub
pop
or
cmp
mov
fistl
mov
cld
mov
inc
mov
les
jmp
gs
int3
jmp
pop
dec
repnz
add
je
xlat
xor
sub
mov
cmp
fbld
and
dec
rclb
in
vpcomq
adc
mov
cld
xchg
rcll
mov
cmp
pushf
mov
xchg
push
clc
int
jb
cwtl
das
xchg
inc
lret
clc
pop
sub
lock
scas
cmp
inc
xchg
orl
jo
push
xchg
loopne
push
sub
adc
repz
adc
push
cmpsb
push
cwtl
add
xor
mov
push
test
push
xor
insb
rclb
push
mov
out
cs
lds
jmp
pop
dec
lret
adc
cmp
jne
xor
in
icebp
or
mov
mov
sahf
inc
xchg
aam
and
ds
rcrb
sahf
cwtl
lcall
lret
leave
test
movsb
xchg
adc
jns
jae
xor
mov
push
and
sbb
dec
pop
push
repnz
jecxz
imul
mov
push
mov
fadd
sbb
insb
sbb
add
bnd
out
in
push
inc
xor
xchg
xchg
xor
pusha
scas
xor
dec
scas
in
xor
mov
push
and
andl
xchg
jecxz
movsb
sarl
popa
push
cltd
shll
push
cmp
push
xchg
stos
jp
dec
clc
ret
push
jg,pn
popf
rclb
cmp
ljmp
pop
jl
out
and
in
lds
int3
mov
mov
adc
cs
cltd
outsl
and
xchg
jp
stos
dec
sbb
ljmp
in
push
scas
repz
lahf
jecxz
xchg
cmp
jecxz
pushf
push
lret
and
icebp
sbb
outsb
mov
out
xchg
push
jbe
dec
xor
out
add
pop
xchg
cmp
faddl
stos
aam
push
iret
in
push
sbb
add
inc
jecxz
fbstp
enter
lret
imul
into
lods
adcl
test
nop
mov
dec
pop
push
mov
sbb
outsb
rolb
inc
jo
jge
jecxz
out
push
adc
pop
js
cmpsb
mov
movsl
sbb
addr16
jg
int
lds
jg
xchg
mov
pop
loop
sarb
fs
insl
filds
pop
xor
add
nop
adc
cs
imull
mov
mov
mov
test
shll
lds
push
pop
sbb
arpl
outsb
xor
into
dec
ret
das
cmp
xor
xchg
movsl
movsb
pop
ficomps
popf
test
sub
mov
nop
xor
add
jb
or
mov
fdivp
mov
mov
aad
hlt
andb
out
xchg
push
cmp
cld
pop
mov
xor
loopne
xor
popa
mov
cmc
push
fsubrl
sub
sahf
repnz
and
mov
dec
inc
xlat
mov
and
sub
pop
fdivl
inc
test
daa
outsb
cmp
sbb
inc
cmp
xor
xor
jne
add
pop
dec
sbbb
in
in
adc
outsl
fiadds
inc
adc
or
mov
insb
pop
dec
mov
jnp
imul
int3
ret
jg
test
clc
mov
stos
loopne
dec
dec
aas
icebp
mov
xlat
add
out
sbb
pop
out
mov
popa
cmp
pop
sbb
cmc
lock
mov
add
shrl
popf
mov
es
fld
lahf
call
pop
sbb
inc
ds
push
lcall
ja
adc
jne
mov
loope
pop
jbe
and
ficoml
xchg
std
dec
cmp
mov
sti
movsb
dec
sarb
loop
push
insl
icebp
mov
or
fistpl
hlt
push
hlt
inc
fstps
cmp
pop
xchg
cmp
icebp
mov
and
roll
sarb
or
xchg
xor
lret
inc
mov
out
andb
stos
push
mov
lods
jl
sbb
ja
insl
repz
mov
xor
mov
pop
jle
pop
in
jbe
fwait
jmp
mov
mov
and
mov
jecxz
outsb
nop
fstpt
test
out
les
jo
sub
xchg
cld
lret
xchg
or
push
mov
enter
push
xorl
jbe
iret
push
xchg
pop
mov
jb
mov
ret
cld
adc
jne
fsubl
inc
fildll
fmuls
and
repz
pop
add
iret
inc
mov
out
mov
int
ds
insl
jnp
mov
and
mov
stos
sbb
test
dec
and
dec
outsl
sub
aas
ret
loopne
icebp
int
fidivl
and
push
xor
mov
jl
lcall
dec
loope
outsb
cmpsb
xor
cmp
jae
arpl
adc
add
xor
and
repz
xorl
mov
mov
movsl
arpl
adc
add
xor
and
repz
xorl
mov
mov
movsl
arpl
adc
add
xor
and
repz
xorl
cmpsl
xchg
push
test
ja
arpl
adc
add
xor
jecxz
roll
xchg
and
int
mov
lcall
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
icebp
push
fwait
pop
hlt
jl
push
jmp
mov
outsb
call
cmp
imul
cwtl
mov
dec
fwait
pop
jmp
sti
cmp
or
sbb
call
imul
cwtl
mov
mov
pop
repnz
cmp
or
sbb
xor
cli
fdivrl
in
xor
sub
mov
out
pop
stc
clc
or
sti
shl
ret
lods
ret
pop
scas
xchg
add
pusha
cmp
rolb
cmp
adc
push
les
xlat
push
fs
scas
ret
xor
jg
mov
movnti
pop
int
sbb
pushf
cltd
jnp
stos
jns
dec
adc
out
sub
loope
dec
pop
fistl
or
inc
daa
out
sti
sub
or
mov
rcrb
cmp
fcomi
lret
dec
and
sbb
shll
mov
add
push
sub
sub
lock
aam
jmp
stos
push
imul
cwtl
imul
mov
pop
sti
sub
cmp
or
sbb
call
add
jae
arpl
fadds
lcall
popl
jns
insl
mov
pop
test
xchg
jns
jne
pop
lds
shrl
ds
stos
sub
setg
push
cmpsl
addr16
sbb
lods
cmp
or
cmp
pop
test
mov
cmp
sub
inc
sti
cmp
or
sbb
call
sbb
imul
cwtl
stos
push
fwait
pop
jmp
sti
cmp
or
sbb
call
sbb
imul
cwtl
stos
push
repz
in
xlat
je,pn
andl
dec
cmp
xchg
sub
xlat
xchg
ljmp
flds
xchg
xchg
add
sub
call
cld
mov
aaa
icebp
shrb
pop
imul
mov
lret
dec
fs
xor
xchg
mov
sub
xchg
pop
adc
lea
inc
enter
or
or
xchg
data16
loop
into
std
test
adc
push
or
scas
add
leave
outsl
loope
call
dec
adcl
sarb
fcmovnbe
xlat
in
or
shll
daa
scas
out
and
je
into
cmp
or
pop
pop
test
inc
dec
rcrl
lods
or
das
fwait
popf
cld
mov
int3
xor
mov
lea
push
fstl
adc
sti
rcl
jecxz
lock
mov
fdivrl
xchg
jg
xor
mov
pop
cmp
mov
out
mov
mov
shlb
or
loopne
push
shll
lods
pop
adc
push
inc
sbbb
xchg
mov
mov
push
outsl
push
outsb
adc
imul
scas
arpl
add
std
jmp
ret
outsb
fistpl
insl
mov
mov
sahf
pop
and
ljmp
xchg
icebp
in
sbbb
lret
jbe
rcll
loopne
adcl
or
jmp
dec
rclb
clc
inc
sti
fmull
popa
jmp
push
or
sub
mov
aas
jno
mov
mov
movl
and
xor
push
repnz
into
mov
arpl
mov
popf
rcll
mov
dec
and
mov
xor
pushf
ret
mov
repnz
repnz
fdivrs
lea
mov
dec
aas
mov
mov
push
bound
mov
fwait
scas
in
ss
sub
push
dec
sbb
inc
cltd
sub
add
sbb
jg
stc
sbb
jb
rcrb
sbb
mov
nop
cld
inc
xchg
mov
xchg
scas
ficoms
ret
loopne
inc
cmp
jge
push
pop
addb
push
xchg
loope
repz
mov
lods
fisttps
lock
xchg
pushf
aaa
fnstcw
cld
xor
rcrb
mov
mov
push
dec
dec
faddl
pop
xchg
adc
movb
sub
and
and
push
pop
cld
fildll
lahf
iret
adc
push
stos
xor
enter
add
dec
adc
out
lret
pop
stc
dec
lret
shlb
ficoml
push
stc
inc
xchg
mov
mov
mov
addr16
les
inc
cltd
pop
fnsave
mov
cmp
cmp
insb
out
cmpsl
stos
lret
xlat
mov
iret
and
ret
fstl
push
xchg
cmpsb
mov
out
xor
push
in
shl
sbb
mov
adc
sbbl
jne
add
pop
mov
in
lret
xor
mov
xchg
inc
lcall
mov
pop
add
call
out
cmp
stos
mov
pop
stos
adc
inc
cmpb
dec
jnp
cld
rclb
test
shlb
pop
mov
dec
cltd
stos
outsb
lahf
cmpsb
inc
fs
cmpsl
idiv
in
jmp
movsb
ja
popa
push
inc
shrl
xchg
pop
xchg
cmp
xchg
enter
aas
out
shlb
fsubrl
mov
mov
sbb
lahf
and
je
in
iret
jmp
out
pusha
xchg
push
xchg
scas
out
in
ja
movsl
jmp
aas
pop
pop
scas
bound
repz
ja
adc
lret
aas
lcall
pop
xor
mov
sbb
fldl
jmp
cltd
js
jbe
iret
loopne
mov
pop
cmp
adcb
ret
sub
and
cmp
pop
cld
or
and
loop
lret
sub
mov
sbb
out
adc
mov
pop
roll
and
sbb
xchg
flds
sbb
scas
adc
mov
ficomps
jp
dec
aaa
add
sub
pop
inc
cmpsl
ljmp
lock
sbb
sarb
shrb
rolb
into
ss
push
adc
outsb
rorb
fwait
test
fdivs
mov
push
dec
sbb
int3
lcall
int
sub
adcb
lret
andb
and
ja
addl
add
sbb
ror
pusha
dec
sti
orl
iret
lcall
pop
and
ret
arpl
arpl
es
mov
and
or
outsl
and
pusha
mov
add
mov
and
dec
dec
and
mov
xchg
fsubrl
outsl
cs
sub
stc
sbb
cmovne
push
dec
inc
ljmp
push
jle
pop
xchg
jno
insb
stos
movb
jg
call
lahf
outsl
scas
cmovo
filds
mov
test
scas
add
outsl
jae
repnz
mov
add
rcl
xchg
pop
mov
adc
out
inc
shl
mov
mov
in
pusha
xor
inc
mov
ret
inc
gs
push
and
sub
jno
fcmovnu
xor
into
les
fadd
cwtl
or
dec
jle
mov
or
pop
dec
add
stos
cmp
ja
mov
imul
or
mov
xor
aad
popl
push
mov
fwait
push
fsubr
pop
cmp
push
lods
xor
enter
incl
filds
push
inc
rorl
jae
inc
mov
int3
aas
pop
add
sub
push
nop
faddl
notl
stos
mov
mov
movsl
pop
add
idivb
push
xor
push
or
jno
call
sub
inc
push
fsubrl
jl
xchg
xor
gs
imul
mov
xchg
aad
int3
mov
xchg
xchg
rcr
outsb
data16
mov
inc
data16
subl
inc
push
test
xchg
rcll
pop
jl
sti
lahf
enter
lret
dec
fdivs
xor
inc
test
cmpsl
xchg
or
jl
cld
ror
mov
jae
mov
push
out
pop
icebp
adc
xchg
rol
jg
cmc
jae
ds
add
cli
jns
or
stc
rol
imul
sti
ljmp
mov
mov
sub
jbe
out
xchg
pop
xchg
insl
xor
cmc
insl
ret
mov
cmc
into
cli
mov
cmp
dec
and
xor
or
stc
sbb
or
inc
xor
sub
mov
mov
xchg
push
mov
mov
jno
dec
jo
mov
call
pop
inc
sbb
ret
mov
or
lret
mov
xchg
inc
js
mov
call
mov
sarb
pop
outsb
mov
out
adc
mov
pushf
in
inc
push
rorb
ja
add
or
inc
inc
add
das
adc
loopne
ficompl
outsl
adc
loopne
jge
out
jp
outsl
cmc
call
lods
loope
mov
mov
jl
push
adc
cmp
cwtl
rol
leave
nop
sbb
insl
out
mov
cmp
inc
mov
hlt
repnz
rol
push
in
adc
sub
jge
gs
ja
jae
negb
xchg
arpl
mov
shl
iret
arpl
push
push
mov
je
lcall
popa
in
add
addr16
mov
fdivl
arpl
push
xchg
repnz
aaa
ret
lret
into
xchg
sbb
xchg
jne
pop
je
mov
jmp
xor
and
jl
in
pop
mov
pop
cmp
pop
imul
xchg
sbb
inc
cmp
pop
push
lock
insb
les
add
and
in
mov
pop
adc
push
push
pushf
test
sti
add
jne
cs
sub
cld
in
jp
int
xchg
dec
adc
lea
dec
adc
out
jle,pt
mov
dec
je
mov
inc
into
outsl
inc
fsub
adc
xorb
pop
inc
fisubrl
sbb
xchg
repnz
jne
neg
data16
xchg
not
rcrl
cmc
int3
sbb
cwtl
subl
sbb
push
xor
sub
mov
rcrb
jne
pop
xor
stos
or
sbb
jecxz
lret
adc
fldl
xor
add
mov
out
sbb
xor
push
pop
out
or
test
fcoml
ja
mov
mov
mov
nop
mov
pop
xchg
push
mov
push
pop
mov
dec
jbe
dec
scas
cmp
les
mov
push
mov
xlat
addr16
dec
mov
xor
nop
jns
mov
jecxz
mov
out
push
in
mov
cmp
cmpb
fwait
pop
rolb
mov
jg
mov
mov
jbe
mov
outsb
add
jb
jbe
add
scas
xchg
push
int3
inc
mov
arpl
das
and
push
out
je
pop
jl
outsl
jmp
add
dec
pop
icebp
std
test
ss
lock
ljmp
andb
dec
xchg
imulb
loop
lcall
and
clc
or
fwait
ret
lea
mov
lods
push
add
stc
pop
es
lods
fstpt
or
mov
lret
ljmp
mov
nop
outsl
call
clc
and
orl
es
incb
xor
pop
and
pop
out
pop
out
mov
or
rorb
div
scas
or
ret
out
add
mov
loope
cmp
fisubrl
xlat
cmpl
lods
sbb
xchg
cltd
adc
popf
iret
enter
fimull
push
jge
mov
pusha
cli
jg
dec
sub
out
mov
jae
cli
inc
dec
inc
jle
inc
mov
xchg
mov
notl
pushf
push
lcall
mov
clc
test
cltd
jae
xchg
or
mov
inc
cld
ret
sbb
sub
pushf
sub
clc
pop
popa
mov
push
pop
loop
sub
loop
loope
rep
push
out
adc
sbb
movsl
sbb
clc
xchg
data16
fsubrs
xor
fwait
and
testb
icebp
in
or
sbb
add
cld
push
and
das
pop
pop
in
push
fdivrs
push
js
in
into
sarb
addl
or
call
sub
insl
adc
sbb
fsubrs
push
rorl
clc
imul
out
xlat
add
xor
push
cwtl
mov
cmc
push
imul
imul
mov
inc
or
sbb
ret
das
and
in
aaa
or
ret
push
imul
scas
ss
les
test
cld
xor
mov
out
jmp
jp
push
or
outsb
or
leave
push
push
jmp
mov
adc
push
or
ss
test
mov
std
and
xchg
sub
xchg
ficomps
mov
or
add
fidivrl
xchg
sub
outsb
lds
sbb
jge
insl
pushl
mov
call
pop
sbb
stos
inc
loopne
inc
fisubl
ret
xchg
dec
dec
stc
lods
ss
mov
outsl
mov
movsb
int3
xor
cmp
and
test
push
imul
inc
xor
sub
cltd
enter
mov
add
sbb
push
or
push
jo
fs
lods
aad
jl
and
fstpt
or
call
or
adc
inc
sbb
cmp
inc
push
rolb
or
jp
stc
lods
aad
lods
stos
push
pop
scas
add
xchg
jl
mov
mov
enter
mov
ljmp
jno
sbb
fisttpll
lahf
push
sbb
adcb
push
jge
xchg
dec
push
js
xor
out
das
sub
cmp
or
cmpsb
add
outsb
and
divb
dec
outsb
push
mov
ja
scas
add
imul
das
aad
sbb
dec
mov
push
xchg
psadbw
test
and
xchg
sub
jnp
cmc
fcompl
push
sbbb
dec
cld
mov
jb
and
mov
repnz
and
bswap
iret
pop
xchg
add
sbb
cmp
sbb
push
mov
cmp
lcall
inc
mov
xchg
arpl
inc
xchg
push
mov
ror
insb
push
aam
sub
loop
hlt
jle
test
out
push
and
mov
mov
push
scas
sbb
iret
fabs
fisubrl
jg
ja
test
pusha
sti
shll
mov
push
mov
je
inc
insb
and
jnp
fdivl
pop
or
xor
or
rcl
push
mov
roll
cld
es
add
shl
lea
jae
std
shr
and
sub
xchg
xchg
in
lds
repnz
cwtl
dec
stos
sbb
push
push
mov
lcall
mov
pop
lret
daa
pop
mov
cmc
mov
lock
call
push
dec
mov
cmp
mov
lds
repnz
mov
push
add
mov
xor
lret
cmpsb
fwait
jo
mov
xchg
fwait
mov
lahf
xor
fcoml
fcoml
add
ss
push
gs
cmpsb
sbb
out
jp
shl
insb
repnz
stc
stos
xor
mov
jne
cli
std
pop
mov
lahf
jnp
lods
mov
fidivrl
fwait
and
lds
decl
out
sub
jne
jmp
fs
nop
lahf
mov
xor
div
xor
bound
and
push
pop
mov
and
or
jb
mov
inc
fbstp
arpl
fidivs
and
cmp
mov
cmp
fsubrl
jo
jg
imul
sub
mov
cmp
lods
loop
sbb
fldt
shrb
sub
into
je
sbb
leave
mov
daa
loopne
inc
sub
inc
dec
mul
mov
leave
jns
and
pop
sbb
es
dec
inc
push
pop
adc
fsubl
fmull
rolb
or
jmp
and
dec
stos
cmp
dec
cmp
pusha
xor
mov
icebp
and
rcrl
push
call
adc
popf
push
cwtl
push
xor
stos
je
rolb
dec
inc
movsl
rclb
jmp
mov
sub
mov
lret
out
xchg
xchg
fldt
rolb
addr16
cwtl
in
adc
fildl
xchg
scas
insl
ss
mov
lahf
cmp
sbb
out
or
xchg
loope
subl
dec
dec
lods
jecxz
jp
dec
fsts
xchg
or
shrl
xor
xlat
outsb
enter
loop
arpl
in
fistpll
or
push
out
pop
xlat
push
jb
jecxz
out
xor
in
movsb
pop
adc
mov
enter
sbb
sbb
inc
xor
jmp
inc
cmp
movsl
mov
repnz
pusha
hlt
sub
sbb
es
lret
and
xchg
imul
jecxz
push
div
or
loopne
divb
and
pop
push
fsub
clc
push
xchg
testb
xchg
pop
sub
inc
xchg
xor
adc
mov
aad
fwait
push
pop
dec
xor
mov
cmp
sbb
dec
add
fisttpl
fisttpll
mov
shr
jae
push
cs
cmpsl
xchg
in
adc
and
in
outsl
and
sbb
sub
add
xlat
push
call
ret
sub
adc
mov
adcl
fnclex
jmp
out
int3
cmp
jecxz
pop
lahf
adc
std
in
enter
test
cwtl
xchg
cmp
pop
or
andb
loopne
or
adc
jl
and
lock
ficompl
outsb
pop
divb
dec
out
loope
jecxz
and
inc
mov
adcl
and
outsl
dec
cmp
mov
pop
cs
imul
cltd
loop
pop
outsl
adc
faddl
push
lods
std
and
and
and
add
sub
pop
mov
cmpsl
mov
or
popa
xor
scas
pop
scas
imul
or
cwtl
or
dec
push
in
mov
mov
mov
jecxz
negl
xchg
repnz
inc
mov
std
add
and
push
ljmp
mov
jb
and
movsb
ljmp
mov
inc
lret
xchg
es
xchg
jmp
xchg
jae
sub
lret
popa
pop
sbb
insl
mov
std
mov
loop
gs
std
and
in
xchg
xor
lcall
in
mov
mov
xor
add
inc
jp
mov
shrb
sar
iret
out
pop
push
imul
cmp
sarb
fcomps
call
push
cli
jo
aam
test
enter
out
and
scas
popf
iret
adc
push
je
sbb
xor
test
cmc
cmp
xchg
xor
stos
xchg
nop
or
mov
fmull
dec
jmp
fisubrl
xlat
out
das
jne
pusha
pop
mov
aam
imull
and
dec
add
pop
dec
adc
jecxz
scas
fistl
test
fisubrs
ss
mov
hlt
push
cmc
aaa
inc
pushf
mov
fisttpll
mov
movsb
or
in
xor
pushf
aaa
jle
ds
add
inc
push
movsl
mov
push
cmp
fs
in
ret
arpl
movsb
adc
mov
inc
les
or
cmp
sub
or
sti
adc
dec
add
test
bound
sub
sar
cmp
jae
fsubs
mov
es
xchg
push
test
jb
add
ds
addr16
imul
in
insl
divl
test
ret
into
and
xlat
add
out
jne
lea
cmp
clc
jmp
xorb
lahf
imul
push
and
mov
jns
inc
iret
xor
dec
push
nop
jnp
inc
xlat
pop
cli
lcall
cltd
insl
cs
sub
inc
and
or
fs
cmp
dec
xor
rcll
stos
cmp
fnstcw
mov
ds
xchg
push
adc
push
pop
xchg
ror
stc
jmp
inc
push
rcl
jns
inc
outsb
cmc
push
lcall
and
push
sbb
movsb
mov
fmuls
and
pop
jo
or
jmp
mov
push
repnz
arpl
pop
mov
mov
les
inc
stc
inc
push
push
test
adc
lret
fiadds
and
es
cwtl
xor
enter
mov
jbe
out
xor
lods
shll
xchg
out
dec
sub
mov
or
push
repz
in
lods
pusha
addr16
fbstp
or
xchg
cmpsb
push
in
xchg
push
dec
mov
stos
inc
inc
sti
jmp
iret
cli
mov
nop
mov
inc
ja
movsb
aaa
dec
pop
out
fstps
aam
out
icebp
lea
sub
xchg
jmp
and
cmp
movsb
sbb
and
xor
or
cmc
sbb
stc
jle
out
jb
and
mov
popa
push
sbb
or
push
jbe
sahf
sub
mov
mov
cmp
test
ja
sahf
js
mov
jmp
mov
or
arpl
test
lcall
cmpsb
xchg
ja
sub
js
dec
xor
dec
mov
xor
mov
popf
cs
testb
mov
fwait
dec
out
add
adc
lret
jecxz
and
scas
out
cwtl
jecxz
xchg
dec
hlt
push
andw
lock
inc
std
stos
pusha
gs
add
divl
andl
outsl
ds
lahf
cs
lds
scas
jmp
inc
mov
cmp
or
jb
inc
mov
aam
sarb
outsb
inc
cmp
fdivrp
daa
push
adc
addr16
or
pop
add
fsubr
adc
aad
dec
stc
mov
lds
fwait
lea
int
sbb
pop
stos
mov
bound
movsb
and
inc
and
repnz
and
inc
xor
mov
shr
movb
sti
xchg
mov
or
jno
dec
jo
xchg
and
xor
loopne
mov
sti
divb
and
xchg
mov
out
sbb
dec
fwait
pop
jmp
sti
cmp
or
sbb
call
sbb
imul
cwtl
stos
push
fwait
pop
jmp
sti
cmp
or
sbb
call
sbb
imul
cwtl
stos
insb
mov
pop
jmp
sti
cmp
or
sbb
call
sbb
imul
cwtl
lahf
push
fwait
pop
jmp
sti
mov
aam
les
enter
and
inc
mov
movsb
addr16
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xchg
shr
cli
loopne
xchg
repz
sbb
pop
dec
push
jp
movups
add
and
and
rcr
shr
cli
loopne
nop
lcall
push
pop
inc
inc
jno
pusha
or
add
xor
and
rcrb
insb
lock
lcall
mov
or
sbb
sub
pop
pop
push
dec
push
mov
test
sub
outsl
scas
mov
movsl
jns
pop
mov
rcrl
or
rorb
insl
fiaddl
ds
inc
cmpsl
mov
popl
mov
mov
add
and
add
jmp
fisubrs
arpl
push
movsl
inc
xchg
jbe
lahf
cmc
out
xchg
cmp
mov
mov
mov
xchg
subb
or
xchg
sbb
aas
inc
lds
dec
adc
aas
adc
sbb
outsl
out
loope
mov
xchg
jns
stc
inc
sbb
jp
dec
rorb
adc
fbld
das
cmp
mov
mov
lahf
popl
sbb
xor
rcr
shr
xchg
loopne
nop
fiadds
mov
jo
pusha
push
add
sub
pop
mov
mov
in
out
hlt
mov
and
pop
cmp
sbb
arpl
pop
inc
jge
lret
lods
lods
mov
sti
leave
mov
sbb
movhps
xor
jg
pop
push
jnp
mov
xchg
mov
subb
pop
inc
push
jp
or
sbb
sub
cmp
lret
shr
cli
loopne
nop
lcall
push
pop
inc
push
jp
or
sbb
sub
cmp
lret
call
gs
add
out
inc
or
pop
dec
add
imul
and
in
dec
inc
push
push
push
lcall
roll
mov
sbb
adc
sar
xchg
push
xchg
scas
mov
mov
xor
outsl
cmp
int
fmul
and
cwtl
or
mov
in
mov
cmp
or
dec
into
pop
adc
inc
mov
rcl
cli
adc
and
sbb
sbb
ret
inc
push
mov
cmp
fdivs
inc
pop
int
inc
mov
adc
xor
jg
wbinvd
les
loop
in
sub
pop
add
int3
sbb
mov
sarl
push
bswap
lahf
mov
and
imul
out
out
out
cmp
jns
push
xchg
lods
leave
push
mov
jns
push
dec
int3
and
jg
out
ljmp
cmpsl
fcom
mov
sbb
mov
lds
stos
or
and
inc
imul
jae
iret
mov
das
jmp
or
xor
arpl
or
mov
dec
lea
out
int
push
pop
test
dec
inc
push
lods
xchg
xor
xchg
sbb
cltd
push
stc
insl
lret
push
pusha
je
imul
mov
xchg
mov
mov
add
jp
adc
push
clc
xchg
pusha
pop
or
dec
ret
mov
or
stos
in
pop
xor
movsb
inc
mov
in
inc
fildl
jmp
jle
in
mov
push
mov
push
js
pushf
mov
cmp
pop
in
push
push
insl
pop
xchg
sub
in
mov
lock
sbb
andl
stos
xchg
xor
in
push
lods
pop
lret
rcrb
shll
or
rcrb
push
xlat
loopew
dec
inc
adc
out
push
cmpsl
push
movsb
dec
cmp
or
fs
es
cltd
mov
lret
bound
mov
mov
pop
add
pop
jno
and
popf
lock
popa
dec
rcr
es
pop
jns
mov
jb
das
ret
pop
mov
mov
push
lahf
jnp
movsb
push
insb
and
xchg
lods
cmpsb
in
pop
cld
xchg
pop
outsl
scas
jl
xor
cmpl
lea
mov
adc
add
test
jb
adc
scas
mov
lret
out
in
addr16
rcr
sub
repz
jmp
ja
dec
movsl
sub
jns
gs
dec
dec
pop
mov
xor
shl
and
movsl
push
mov
fisubrl
or
mov
mov
arpl
sbb
lods
pop
sahf
outsl
fidivl
mov
pushf
shl
xchg
jg
add
lds
or
bound
xchg
lock
aad
push
sbb
mov
shlb
push
jg
sbb
dec
ljmp
bound
andb
xor
cmc
stc
xchg
shlb
fs
push
iret
lods
loop
sbb
or
push
leave
sub
sbb
add
test
shl
push
mov
loopne
out
arpl
gs
cmpsb
aaa
loopne
cld
inc
or
idivl
shrl
insl
stos
mov
dec
and
push
js
popa
mov
jb
jl
and
das
scas
jmp
sbb
jle
stc
clc
mov
jae
mov
inc
test
mov
push
hlt
mov
int
xchg
lods
loopne
push
mov
mov
int3
bound
jnp
ret
ret
je
pop
out
outsl
inc
mov
lods
cmp
add
dec
lahf
dec
sub
xchg
pop
imul
or
mov
or
jmp
jne
jae
pop
sbb
cld
mov
sbb
xchg
push
mov
mov
xchg
xor
aad
int3
gs
cmp
dec
xchg
jge
lcall
pop
icebp
pop
int
mov
shll
das
std
mov
fistpl
sub
int
shrb
scas
mov
in
xor
or
xchg
add
and
xchg
xchg
std
pop
filds
lret
mov
add
adc
jnp
andl
sahf
into
fs
in
call
push
bound
mov
aam
push
roll
push
popf
je
ljmp
imul
pusha
loopne
cmp
jge
int3
jmp
sahf
mov
stc
and
imul
movsb
xchg
pop
sbbl
jmp
daa
mov
lea
jmp
lods
lods
loop
movsl
mov
rolb
push
lds
lds
and
mov
int
jne
rorl
inc
pop
jno
adc
or
sbb
jmp
mov
pop
aas
data16
add
sarb
mov
mov
mov
loop
push
xchg
xor
lods
rcrb
xchg
mov
inc
cwtl
pop
mov
cli
out
cwtl
in
ja
aas
aaa
cmp
mov
mov
icebp
data16
test
jno
in
cmc
jg
push
in
sbb
cmc
jae
pop
into
test
pop
jbe
pop
pop
mov
insl
adc
cmp
or
jo
sub
popa
notl
sub
xor
xor
fsubrs
and
ds
into
shr
fstpl
mov
shr
bound
ret
sub
ficompl
filds
cld
cmp
shll
ljmp
arpl
adc
cs
rorl
outsl
add
jno
xor
int3
jae
int
cmp
sti
sti
inc
mov
dec
sub
pop
sbb
sub
and
mov
je
movsl
mov
mov
jecxz
out
jmp
pop
add
bound
mov
xor
ljmp
gs
lds
into
inc
jbe
inc
adc
inc
mov
imul
push
inc
jb
movsl
jne
bound
mov
aam
mov
mov
sbbb
in
in
test
mov
fdivl
mov
sbb
xlat
mov
hlt
push
push
mov
ret
lcall
movsb
bound
inc
incl
ret
lahf
addb
inc
fisubrl
inc
movsb
sub
adc
into
dec
jne
fisubl
pop
pop
mov
sbb
push
adc
cwtl
sbb
lods
bound
addr16
pop
xchg
mov
adc
pop
dec
lds
cli
adc
orb
jns
mov
daa
cmc
pop
fdivrs
mov
je
adc
dec
adcl
sti
sti
addr16
adc
sub
xchg
adc
mov
cmpsl
xchg
in
inc
adc
sbb
fsubs
aaa
lock
adc
lret
mov
push
std
in
xor
cmp
aad
mov
inc
adc
rcl
addr16
insb
ljmp
jno
dec
jg
rclb
mov
pushf
std
adc
outsb
loope
xor
scas
or
out
pop
das
hlt
and
pushf
call
mov
lcall
xor
dec
addb
cmpsl
sub
mov
jns
dec
xchg
ja
ja
data16
rol
pop
loopne
mov
or
sbb
xchg
xchg
test
inc
xor
pop
sub
and
pusha
bound
xor
pop
outsl
cwtl
mov
out
add
push
sbb
iret
out
mov
insl
ss
cmc
jae
mov
inc
pop
jae
mov
jl
adc
lea
sti
clc
aam
jno
inc
push
jecxz
fcmovu
push
push
cli
pop
adcl
push
ret
dec
out
sbb
sub
fnstenv
sahf
pop
hlt
shrb
sti
call
push
daa
fiaddl
xchg
shlb
mov
mov
lcall
ss
jecxz
call
inc
int3
jmp
push
shrb
adc
and
pusha
cmp
jno
imul
aaa
mov
dec
pop
loope
inc
test
sbb
sbb
dec
cmp
sarl
dec
icebp
outsl
mov
lods
jae
and
push
adc
aas
cmp
les
pop
in
mov
or
sub
jb
pop
xchg
sbb
push
sbb
dec
adc
sbb
push
jecxz
ljmp
test
aam
mov
repz
dec
sahf
mov
bound
mov
jle
add
outsb
popa
jns
xchg
xchg
inc
int
test
enter
xchg
add
in
jb
ficoml
pop
data16
mov
push
sbb
push
pop
adc
arpl
add
sbb
addl
jne
inc
cmp
mov
push
dec
in
lret
xor
shl
mov
add
jnp
clc
stc
mov
lret
test
stc
dec
xchg
sbb
stc
push
mov
mov
inc
ret
or
in
sbb
test
jbe
lods
pushf
sub
ds
mov
mov
arpl
movsb
push
addr16
and
cmpsl
fdivp
imull
arpl
add
movsl
mov
orl
mov
jl
cmp
or
push
test
pop
push
adc
jbe
leave
mov
repnz
or
jne
sub
cmp
mov
mov
mov
mov
aam
push
dec
mov
popa
sub
add
gs
sub
inc
push
shll
dec
inc
jns
pop
daa
mov
or
push
popa
xchg
adc
das
sub
enter
lods
and
test
jb
sbb
jo
mov
lds
popf
pop
dec
push
dec
jae
sub
sub
cli
sbb
cmpsb
fmul
jbe
lock
ret
sub
pop
jmp
adc
pop
in
gs
jmp
cmp
jmp
into
adc
pop
sti
jle
fsubr
fmuls
jae
faddl
xchg
dec
pop
mov
sbb
in
out
aas
mov
mov
push
mov
or
test
sub
imul
divb
stos
fwait
hlt
sahf
add
ds
pop
xchg
das
mov
xor
fildll
sub
sbb
push
sbb
testb
mov
sti
mov
filds
cmp
lahf
int3
cmp
add
mov
push
int
push
or
cmp
add
xchg
sub
inc
dec
mov
pop
sbb
popf
and
push
and
dec
xor
push
fwait
add
pop
ret
mov
sbb
fdivs
repz
jno
xorl
jbe
dec
mov
outsl
mov
sti
out
les
xor
je
test
sahf
lret
pop
test
inc
cmp
rcr
lock
aaa
jns
mov
rcrl
mov
cmp
repz
sub
mov
sbb
and
xor
and
out
xor
pushf
outsb
push
adc
jns
jnp
pop
xchg
jg
mov
scas
sub
popf
fstps
mov
popa
push
jnp
inc
xor
jl
and
and
shll
dec
adc
imull
aas
loop
jne
call
cltd
aaa
in
rol
test
ss
jae
icebp
xchg
pop
xchg
cmp
ljmp
je
gs
xchg
mov
sbb
xor
lea
scas
mull
jns
pushf
sub
xor
jp
inc
in
icebp
xor
data16
mov
or
jnp
jmp
ret
in
mov
jns
xor
and
adc
push
out
aam
lock
imul
cwtl
xchg
in
pop
insb
inc
sahf
divb
xchg
xchg
and
sbb
push
dec
test
xor
es
fcmovbe
and
jno
xor
hlt
push
jl
int
ljmp
aam
or
xchg
xchg
mov
sbb
cmp
outsl
and
ret
popa
mov
sbb
cmp
jl
cmc
cmpl
mov
push
mov
xchg
mov
jo
jp
jmp
cmpsb
js
popf
lahf
mov
lock
cli
inc
xor
and
aas
dec
pop
stc
subb
mov
xchg
sbb
mov
jo
adc
in
enter
sbb
adc
ret
pop
fwait
inc
daa
cwtl
dec
jle
mov
sahf
mov
dec
lods
movsl
sub
push
mov
push
orb
pop
jle
inc
bsr
mov
pushl
adc
js
pop
xchg
call
scas
leave
aad
push
jae
xor
jg
add
xor
out
pop
lcall
pusha
popa
stos
xchg
outsl
sub
movsb
in
adc
or
mov
cmpl
loopne
xchg
mov
inc
addl
push
jge
enter
xor
sub
pop
sbb
mov
rcr
paddd
xchg
sbb
scas
clc
mov
push
dec
or
mov
sub
in
add
jle
cmp
xlat
mov
stos
sti
push
pusha
dec
or
shll
dec
fnsave
popa
ret
rolb
inc
or
or
ja
dec
fstpt
pop
mov
sbb
call
mov
les
jo
in
shrb
f2xm1
mov
mov
jp
jmp
jbe
loope
fsubrs
xor
movsl
push
dec
adc
decb
xor
test
dec
jnp
sbb
mov
add
lods
cmpsl
divb
inc
mov
pushf
cwtl
data16
out
xlat
std
es
stos
sarb
lods
dec
inc
popa
iret
pusha
or
and
and
lahf
fidivs
dec
stos
and
popa
cmpsl
mov
rcrb
xchg
sub
jmp
adc
or
shll
and
push
js
mov
ja
pop
pop
mull
dec
xor
cmp
popf
mov
inc
adc
jp
xlat
test
ja
pop
pop
stos
add
xor
and
sub
and
iret
out
aaa
aaa
pusha
ret
jbe
add
pushf
flds
stos
push
push
and
pusha
xlat
insl
pop
add
stos
xchg
mov
cs
jl
sahf
je
inc
je
and
mov
mov
stc
repnz
into
sbbl
mov
fucomip
xchg
inc
sbb
popf
and
xchg
mov
mov
popa
ficoml
xor
jae
xor
push
ljmp
xchg
inc
mov
jmp
fisubl
test
subb
dec
lock
push
mov
aaa
dec
dec
or
loop
pop
fistpl
inc
pop
ret
and
leave
ret
loope
rolb
sub
int
lock
and
cmp
gs
xchg
sti
push
fdivrl
or
mov
scas
mov
in
mov
outsl
nop
add
inc
or
out
pop
lods
in
xor
mov
mov
add
loopne
ret
mov
push
pop
movsb
xor
inc
ja
xchg
mov
int
jge
inc
insl
jne
mov
inc
popf
dec
add
rcrb
fisubrl
mulb
or
fxch
imul
jl
cmpsb
in
inc
inc
xor
jecxz
pop
faddp
pop
push
cs
pop
sub
dec
sub
std
and
rcr
stc
xorb
pop
and
iret
fcomps
xor
clc
dec
adc
pop
enter
jno
or
push
dec
inc
stos
dec
sub
push
jnp
je
popa
test
push
add
in
stos
shll
lds
xor
addb
imul
mov
jge
add
add
dec
dec
loop
and
or
nop
mov
loop
lds
xchg
stos
sbb
orl
cmp
xlat
inc
pop
cmp
adc
sbb
jmp
dec
daa
gs
xor
test
subb
pop
jmp
cli
in
jg
clc
and
test
pop
jbe
rorl
and
sti
sqrtps
cli
call
fsubp
loop,pn
dec
roll
jo
xor
dec
ja
pop
adc
imul
loope
xchg
and
mov
loope
cmp
js
leave
pop
cmp
jae
xchg
sbb
insb
push
and
js
push
iret
fdivs
aaa
xchg
inc
and
int
lods
fs
sbb
mov
sbb
loop
outsb
inc
inc
paddw
sub
popf
sahf
cmc
mov
push
mov
xchg
dec
sahf
movsl
mov
jg
aaa
pop
je
sub
lahf
jp
adc
jnp
lret
clc
xchg
out
dec
lret
mov
adc
add
sub
cmp
leave
mov
rorl
mov
movsb
ljmp
movhps
pop
push
mov
es
mov
fcoml
jl
xor
sub
sbb
pop
xchg
dec
push
xchg
fisubl
cltd
lahf
add
push
int
mov
mov
iret
or
jns
cmp
jne
mov
daa
add
cltd
pop
mov
fmull
push
xchg
inc
fadds
cmp
test
rorb
xor
jnp
and
mov
mov
daa
repnz
dec
adc
mov
push
arpl
lahf
push
lea
mov
pop
xor
out
mov
and
mov
mov
sub
mov
and
adc
and
rcrl
fistps
repz
sbb
data16
fcmovu
dec
pop
adc
mov
mov
lahf
cmp
xchg
mov
iret
dec
ss
orb
cmpsl
test
cmp
stos
iret
test
fwait
rcrl
push
or
inc
lea
mov
nop
outsl
pop
xchg
ja
rorb
les
fldenv
xor
inc
push
xchg
sub
inc
jnp
mov
add
mov
sti
mov
popf
xchg
sbb
jne
stc
stos
test
push
test
push
shlb
add
enter
cmpl
mov
cmpb
or
mov
cmp
movsb
pop
lret
adc
daa
xor
rcl
arpl
lea
test
cmp
cwtl
dec
andb
mov
out
sbbb
jnp
out
sbb
inc
test
cmp
jo
cmp
pop
mov
int3
repnz
sub
xchg
push
sub
rclb
into
fwait
jmp
iret
std
aas
stos
mov
mov
cs
cli
lahf
sbb
adc
icebp
pop
pusha
stos
mov
push
inc
cmpsl
mov
sti
in
add
inc
dec
push
xchg
pop
adc
xchg
jmp
jbe
xchg
ljmp
fwait
sbb
sub
xchg
mov
fsubrp
sbb
filds
cmpl
mov
xchg
ror
lods
sarb
jbe
sti
les
sbb
imul
and
sahf
add
in
mov
andl
sbb
andb
das
fldenv
inc
mov
movsb
jnp
cltd
xor
stc
push
push
test
arpl
repz
bound
rcrl
iret
gs
xchg
sub
add
pop
repnz
popa
mov
adc
cli
call
cmpsl
add
out
fs
movsl
test
fildll
add
popa
xchg
faddl
push
push
repz
icebp
ret
xor
sub
aaa
popf
sbb
in
sbb
mov
mov
lret
inc
push
movl
sbb
cmp
bound
cmc
jb
push
hlt
mov
jl
pop
pusha
push
ja
fistpll
pop
sub
or
mov
pop
cmpsl
les
test
out
data16
movsb
out
inc
fwait
loope
bswap
xor
dec
jge
lret
add
jb
ds
lds
dec
pop
out
jnp
push
xchg
mov
ja
dec
xchg
roll
fdivrs
add
scas
lret
mov
mov
ja
mov
mov
insl
push
pmulhw
addb
xchg
mov
mov
mull
add
cmpl
dec
sahf
insl
or
push
fcoms
cmpl
fsubs
out
pushf
inc
test
icebp
cmp
add
dec
cld
push
adc
mov
jne
cmpsb
loope
jae
pop
and
cmpsl
dec
insl
repz
xor
mov
dec
lret
pop
insb
sbb
jp
mov
std
inc
imul
ja
pusha
push
add
out
insl
mov
cwtl
jno
pop
xchg
mov
and
fnstsw
shlb
dec
xchg
mov
fbstp
rcll
mov
or
in
sbbb
negb
loopne
test
pop
jecxz
pushf
stos
fsubrl
pushf
enter
mov
andl
insl
lods
or
inc
jnp
loopne
outsb
or
rcr
sbb
mov
cmc
in
mov
test
in
pop
es
cld
inc
push
pop
outsb
push
sbb
test
lock
in
gs
mov
or
jle
stc
movsl
add
sub
pop
add
imul
xchg
cmp
mov
lods
mov
adc
sub
mov
mov
out
fcomi
jo
shll
and
cwtl
mov
ret
dec
mov
mov
inc
popl
push
inc
cmp
test
adcb
lock
mov
mov
inc
push
jp
or
sbb
sub
cmp
lret
shr
cli
loopne
nop
lcall
push
pop
inc
push
jp
or
sbb
sub
cmp
lret
sar
cli
loopne
nop
sahf
subb
pop
inc
arpl
pusha
or
add
xor
and
shl
shlb
loopne
nop
mov
dec
push
movsl
ljmp
xchg
call
iret
dec
push
pop
cs
jge,pt
gs
or
sbb
scas
in
mov
sbb
lods
mov
das
insl
jge,pt
or
jle
mov
sahf
mov
into
ficomps
push
dec
push
pop
cs
jge,pt
or
jle
mov
mov
std
lods
enter
fists
add
outsb
sub
lret
xchg
testl
mov
dec
dec
push
mov
sbb
orb
loop
sub
jge
and
xor
clc
and
std
push
in
mov
pop
adc
aam
in
or
mov
into
and
sub
push
pop
insl
push
mov
fimuls
mov
jb
mov
pop
mov
adc
cs
push
hlt
xor
lods
loope
jge
sub
outsb
cmp
out
jmp
adc
popa
imul
neg
push
mov
scas
js
nop
xchg
pop
mov
fstp
std
xor
mov
mov
push
pop
cs
jge,pt
or
jle
mov
sahf
ficomps
jp
pop
pop
inc
add
adc
popa
cmp
out
sub
roll
out
subl
pop
pop
insl
jbe
sub
jns
pop
push
cmp
mov
xchg
test
lods
idivb
add
push
dec
add
pop
sbb
mov
sahf
ficomps
push
dec
push
pop
cs
jge,pt
or
jle
mov
sahf
ficomps
push
dec
sbb
fildll
rcll
push
mov
cltd
das
movl
lock
jno
or
cli
push
cmpsb
dec
mov
popa
das
xor
and
gs
cmpsb
sub
je
mov
in
sub
cmp
xchg
js
inc
or
jle
sbb
and
jo
jbe
clc
addr16
jbe
push
cmpsl
push
fisubrs
xchg
cmp
lods
ljmp
sbb
fdivr
xor
ret
pop
stos
cltd
ss
ret
fwait
mov
pusha
js
loopne
jecxz
lret
stos
dec
scas
rcll
out
pop
daa
pop
jae
cli
lret
push
mov
and
sub
push
pusha
ktestb
imul
and
cmp
ret
les
inc
lock
cmp
mov
sbb
jmp
cmc
add
sub
call
inc
mov
pop
movb
repz
mov
hlt
in
adc
jae
and
popa
aaa
pop
imul
jnp
and
cltd
loop
mov
call
mov
mov
and
pushf
fcompl
cwtl
jmp
dec
add
sub
fxch
loope
inc
mov
mov
mov
rclb
int
or
sbb
mov
xor
mov
jecxz
cmpsl
sarb
xor
xchg
int
into
jmp
jbe
sbb
or
inc
in
mov
pop
inc
outsb
jg
pop
pop
repz
fcomps
lea
xor
jo
adc
aas
mov
test
mov
int3
aas
push
xchg
inc
jmp
insl
call
dec
sbb
dec
cmp
xchg
cmp
add
inc
mov
popa
insb
in
mov
adc
ja
cli
jno
dec
jo
lods
mov
fisubs
in
pop
cli
or
jb
or
jb
test
int3
out
inc
xchg
cltd
addr16
es
mov
inc
and
sbb
push
mov
scas
push
pop
mov
lea
jl
scas
pop
adc
rclb
jecxz
aas
jp
je
add
data16
ss
mov
pop
test
or
push
and
in
lcall
xchg
js
sub
in
stos
fisttpll
lea
cs
cmpsl
xchg
sub
xchg
mov
cmp
leave
mov
pushf
jae
mov
in
xchg
test
sub
test
aas
popf
ljmp
repnz
pusha
sub
out
xchg
push
adc
adc
adc
push
insb
adc
pop
add
mov
cmc
repnz
sbb
out
and
xchg
icebp
movsb
je
insl
jecxz
cmp
lcall
dec
inc
push
in
cli
cmp
dec
cmpsb
xchg
xchg
and
mov
lret
mov
lahf
lret
push
xchg
in
cmpsb
mov
mov
movsb
jo
xor
stc
inc
int3
out
xchg
cltd
add
mov
jns
jns
mov
inc
test
mov
inc
iret
dec
xorl
cmpb
jne
push
scas
jnp
insb
dec
jno
adcl
xor
mov
popa
jp
mov
das
imul
push
mov
adc
lret
into
or
jle
orb
lcall
mov
xchg
out
adc
fstl
mov
or
add
not
jb
out
arpl
int
jns
push
inc
and
pop
popf
int
push
or
subb
cmp
or
mov
int
test
int3
jb
jl
lock
mov
cmp
stc
push
shr
or
jb
sbb
fisubrs
movsl
enter
lahf
daa
decb
cmp
testb
push
xor
or
das
repnz
into
in
and
mov
sbb
dec
dec
add
fldt
sub
or
xchg
xor
mov
fs
ljmp
dec
pop
stos
xchg
pop
mov
outsb
or
sub
xor
add
lcall
mov
test
dec
ljmp
push
aas
push
es
repz
stos
adc
push
ja
mov
or
jbe
pop
sub
jl
xor
or
sbb
pushf
bound
jne
loopne
add
stos
sbb
out
xchg
pop
in
ja
mov
pop
dec
xchg
xlat
es
in
pop
popa
les
mov
aas
sahf
dec
stc
cmp
adc
lea
fnstsw
or
test
fucomip
push
fdivrl
in
shl
add
inc
icebp
xchg
and
push
pop
ja
jb
mov
orl
xchg
mov
mov
fdivrl
je
inc
orl
sbb
jb
int
push
push
js
movsl
test
sub
dec
sub
in
mov
jle
xchg
icebp
sub
add
movsl
add
mov
push
fidivl
pop
mov
test
fbld
insl
xor
jno
mov
dec
lds
fistps
movsb
cmpsl
jg
mov
in
mov
loopne
ror
add
inc
add
shlb
jae
dec
cmp
push
xchg
popa
adc
sbb
loope
mov
dec
mov
leave
inc
adc
adc
pop
xor
adc
pop
push
ret
adc
pop
sarb
or
mov
pusha
lods
mov
dec
push
fisubs
test
dec
pop
insl
and
cwtl
mov
pop
or
fsubrl
shl
mov
aaa
inc
inc
inc
xchg
xchg
pop
jnp
rcrl
pop
push
mov
icebp
fidivrs
cmp
add
sub
pusha
addb
mov
sub
push
add
ss
scas
hlt
cmp
mov
fidivrl
stos
ja
loope
arpl
inc
mov
or
arpl
aas
push
out
out
jno
mov
std
sub
das
cmc
dec
aas
push
repnz
fisttpl
fwait
mov
pushf
cmpl
inc
das
loop
mov
or
sbb
push
sbb
cmp
or
scas
lret
sub
or
push
push
mov
leave
mov
dec
or
sbb
cmp
xchg
mov
and
inc
adc
jae
enter
test
cmp
sbb
enter
movsb
push
xchg
push
cltd
in
stos
mov
lods
mov
push
pop
pusha
fs
add
pop
push
xor
outsb
push
jg
divl
out
mov
out
mov
mov
mov
fnstsw
sbb
out
jmp
dec
shll
decb
mov
insl
movzwl
in
enter
pop
mov
push
cmp
roll
fstps
mov
and
mov
test
cld
sbb
ljmp
xor
ja
mov
xchg
cmp
repnz
stos
test
mov
xchg
icebp
add
lds
jle
xor
in
dec
movsb
inc
or
leave
ret
push
ret
jnp
int
lods
enter
push
outsl
pushf
test
pushf
outsl
fists
rcr
dec
and
in
jb
jno
xor
imul
push
push
fdivs
dec
inc
into
mov
inc
push
scas
pop
sub
or
popf
pushf
xor
call
out
push
stc
xchg
ja
mov
daa
cmp
adc
test
dec
mov
js
stos
jp
int
scas
test
dec
inc
ret
and
lods
pop
mov
inc
push
xchg
mov
les
pusha
add
mov
sub
fadd
mov
cmpb
or
js
pushl
mov
jl
or
shrb
mov
dec
into
adc
rcll
enter
scas
test
mov
cmp
sti
loope
inc
enter
repnz
mov
xlat
or
insl
loop
dec
loop
in
fwait
dec
rcrl
cmp
xor
test
mov
pop
pop
je
sbb
fmull
pop
xor
mov
jl
mov
test
push
mov
lret
out
sub
sub
jnp
scas
xor
pop
pop
cmp
mov
ja
cmp
or
imul
cld
push
icebp
mov
scas
jne
sarl
and
into
or
lea
gs
jmp
inc
jmp
mov
push
leave
cmp
pop
add
push
xchg
push
bound
sbb
dec
repnz
mov
cmpsb
lret
and
shl
push
or
mov
sub
jmp
and
and
mov
jg
dec
iret
mov
pop
cmc
das
sbb
sub
jo
jb
jmp
cmp
icebp
adc
jmp
bound
inc
pop
sysexit
or
cmp
fs
or
lods
gs
pop
mov
leave
dec
loope
hlt
push
in
out
inc
test
fs
xor
int
ret
lahf
pop
dec
xchg
ret
nop
jg
sbb
mov
in
inc
in
jns
xchg
int3
out
mov
fimuls
xor
testl
test
lret
movsl
jae
pushf
loopne
ja
inc
sub
jmp
out
dec
repnz
icebp
arpl
jnp
imul
jl
xchg
pop
mov
ljmp
mov
lret
or
addb
pop
enter
xlat
ja
out
insb
mov
std
ja
add
add
ja
scas
mov
dec
jno
aaa
xor
icebp
aaa
enter
test
int3
xchg
iret
adc
xchg
cmc
push
inc
icebp
lds
push
mov
cwtl
leave
shll
cmp
pushf
ja
xchg
dec
push
and
das
mov
movl
mov
mov
pop
xor
jecxz
dec
mov
sarl
sbb
mov
jmp
or
cmpsb
push
iret
adc
daa
cld
dec
xchg
xchg
fwait
aaa
adc
adc
popf
adc
jno
fdivr
mov
call
jnp
xlat
ret
or
lods
je
dec
icebp
repnz
inc
int
xchg
test
mov
cli
fsub
sub
mov
mov
sub
jae
ret
ds
sbb
sbb
xor
xchg
jecxz
push
int
sbb
sbb
pop
and
in
andb
pushf
push
subl
inc
adc
pop
mov
push
ljmp
popf
ror
mov
sti
in
rcll
pop
test
or
out
dec
sub
mov
popa
les
iret
bound
ret
jb
inc
inc
push
sub
lea
mov
icebp
fwait
pop
pop
hlt
push
int
or
aad
mov
cmc
mov
jmp
pop
ljmp
mov
mov
gs
ja
ja
add
scas
cmp
cmp
pop
int3
jno
sub
xchg
jne
rol
adc
ja
test
dec
jbe
mov
js
dec
mov
push
xchg
movsb
movsl
aas
dec
roll
cli
push
pop
push
push
mov
push
mov
pop
lods
sub
leave
ja
xchg
push
aaa
push
mov
mov
pushf
mov
sub
ss
pop
mov
mov
movsb
popf
jnp
adc
mov
test
outsl
ss
bound
mov
out
dec
ret
mov
jne
sub
or
push
pop
xchg
add
pushf
outsl
add
xor
inc
jnp
fldcw
cmp
lret
imul
cmp
dec
xchg
pushf
ljmp
pusha
sub
mov
inc
dec
popf
push
lret
push
inc
imul
xchg
xchg
lods
jl
clc
mov
adc
js
ja
or
jp
scas
xor
js
std
mov
xor
popa
fs
adc
jne
or
xchg
cmp
lock
pop
pop
push
sub
outsl
jo
sti
dec
xchg
or
pop
cmp
sub
jle
push
int3
sbb
jecxz
inc
xchg
call
xchg
adc
or
bound
int
or
shrl
add
dec
fadds
inc
push
gs
xchg
stc
sub
mov
aas
and
pop
jne
cltd
xorl
add
adc
xchg
ljmp
repz
adc
xlat
leave
mov
push
out
mov
cld
sub
lahf
cs
add
pushf
in
gs
and
fucomi
cmp
int
out
add
sub
aas
loop
push
dec
adc
jp
stos
pop
add
sbb
sbb
sub
xchg
ret
jb
std
je
lcall
sti
dec
xchg
inc
mov
inc
xor
js
mov
push
enter
jg
and
cmp
mov
sbb
cwtl
mov
mov
mov
mov
dec
adc
movnti
int3
mov
xlat
fwait
mov
adc
cmp
inc
sub
pusha
imul
test
push
out
or
cld
popa
std
jp
out
or
adc
ljmp
iret
fdivrs
jb
push
lock
push
xor
add
lods
dec
out
jno
dec
mov
mov
inc
iret
shlb
add
add
push
cmp
gs
or
fwait
sbb
jnp
stos
out
cwtl
mov
xchg
outsl
mov
push
mov
outsl
and
dec
jp
shll
imul
stc
pop
jg
sub
mov
sub
mov
mov
dec
inc
inc
stos
pop
push
je
sti
adc
jp
sbb
insb
sbb
mov
or
iret
jmp
icebp
xchg
or
out
jmp
or
jo
aaa
lods
stos
dec
and
xchg
push
dec
subb
int
or
push
jl
lcall
sbb
movsb
stos
dec
stos
cmc
mov
mov
mov
inc
fistpl
dec
sbb
adc
leave
cmpsb
rcrb
pop
pusha
repnz
xchg
ret
leave
fidivrs
in
xchg
add
push
sbb
sahf
mov
jns
scas
sub
sarb
imul
xor
mov
mov
and
test
sbb
movsb
sbb
and
mov
mov
stos
iret
out
cwtl
and
fucomp
pop
inc
movsl
leave
mov
push
imul
and
jns
push
push
jne
and
cmpsb
inc
daa
mov
mov
adc
xor
push
ficoms
xlat
xchg
mov
hlt
bound
mov
add
lds
fcomp
sahf
mov
les
pop
inc
jecxz
add
mov
cmp
xchg
mul
fwait
shll
sbb
mov
iret
movsb
fnsave
scas
and
lahf
gs
mov
orl
xchg
call
out
mov
or
daa
mov
aam
jae
mov
dec
and
shll
mov
and
sbb
and
lods
popa
push
mov
rorb
and
add
iret
jb
mov
fcoms
mov
test
movsl
xchg
push
cmp
mov
je
stos
idiv
jmp
mov
add
mov
ret
jge
into
mov
and
ljmp
dec
lods
ficoms
push
leave
inc
adc
adc
movsl
jae
and
pop
push
shlb
mov
adc
jp
mov
sub
aad
movsb
pop
enter
xor
mov
imul
je
test
xorl
mov
mov
ds
jge
les
sub
sub
enter
in
push
xor
xor
lea
das
cmp
ja
shl
and
outsb
pop
or
outsl
xchg
mov
shrb
js
lahf
lret
outsl
ljmp
sub
jnp
fists
addr16
push
into
dec
pop
ds
jl
cmc
push
pop
cltd
or
mov
adc
ja
add
mov
pop
push
dec
ja
nop
testb
aas
mov
rol
scas
push
test
dec
pop
ss
mov
sbb
mov
jp
jae
jb
push
cmp
push
jg
pop
nop
repnz
jno
mov
addl
sbb
mov
adc
jecxz
mov
mov
fldl
aam
outsl
adc
pop
mov
dec
push
das
mov
xor
mov
sbb
mov
add
mov
sbb
shlb
pusha
pop
popf
hlt
les
sub
sbb
stos
in
cmpsb
push
sub
adc
pop
push
dec
cmpsb
push
fistl
adc
lahf
xchg
xor
push
test
push
push
sbb
loope
cmp
sub
push
in
push
and
imul
lret
call
sub
in
xor
push
mov
stc
scas
cmp
push
negb
and
pop
sub
xor
push
lock
adc
add
and
aam
sahf
in
lcall
jge
sar
and
idivl
add
fstpt
mov
push
mov
cs
stos
jecxz
and
push
fcmovbe
lods
jg
pop
xor
mov
jae
cmp
adc
push
mov
test
xor
out
sub
cmp
dec
mov
cmp
int
mov
leave
add
inc
imul
lock
inc
stc
or
xchg
mov
xor
fnstcw
xor
rorb
mov
aaa
lcall
int
pop
fdivrp
mov
dec
push
jge
xlat
das
out
cmpsl
pop
mov
lret
pop
sbb
lahf
lds
dec
and
loop
test
popa
mov
sti
cmp
add
mov
aas
fxch
dec
jae
push
xchg
jno
jp
stos
sbb
aaa
jmp
sarl
rorl
aaa
lea
mov
push
das
mov
test
mov
push
aas
jmp
scas
mov
dec
fmuls
ret
sub
adc
lret
mov
outsb
cmp
je
imul
push
and
mov
mov
mov
scas
xchg
sbb
scas
rclb
or
cmpb
add
fdivrs
lods
adc
jmp
xor
or
dec
mov
sbb
fwait
push
add
mov
mov
adcl
mov
sub
out
push
stc
adc
lock
in
pop
adc
aaa
adc
lcall
ljmp
fcomps
add
jecxz
and
jle
hlt
cmp
cmp
inc
jbe
mov
lods
lcall
into
xchg
lods
sti
xchg
push
je
sbb
rol
pusha
push
lock
xor
mov
fs
repnz
fldenv
sarl
jle
inc
scas
xrelease
lahf
push
fcmovnu
xor
mov
add
xchg
aaa
mov
push
push
sbb
or
fstpl
fwait
dec
out
jmp
push
jmp
imul
gs
imul
addr16
ljmp
lds
iret
mov
lcall
repz
and
sbb
or
bound
push
or
or
xor
jecxz
leave
dec
sub
lret
jns
mov
ret
add
sbb
arpl
mov
cltd
sub
lcall
mov
stc
rorl
mov
popa
mov
insb
fmull
mov
cmp
xchg
and
adc
jne
aaa
arpl
dec
jae
dec
into
dec
add
xor
mov
and
sbb
sbb
leave
stos
lods
sbb
xor
pop
pop
repz
lcall
enter
vshufpd
addl
movsb
call
fs
jns
or
stc
addr16
mov
lods
cmpsb
out
xor
outsl
inc
inc
dec
and
xchg
cmp
push
cmp
cli
or
xchg
loopne
divb
pop
nop
dec
pop
loope
jg
push
inc
cltd
ficomps
fidivrs
push
mov
ds
inc
mov
jno
xor
jbe
hlt
inc
jp
sub
and
lea
adc
popf
sub
mov
shl
jne
jl
shr
xchg
inc
movsl
call
mov
dec
mov
inc
sti
loop
inc
stos
hlt
nop
or
test
mov
movsl
in
and
sahf
mov
jb
mov
fcmovnbe
test
sub
add
and
jae
xor
std
lods
lret
lcall
jns
add
stos
pop
es
leave
xor
pop
xchg
test
xor
ret
mov
pop
xchg
movsl
jb
pop
jecxz
pop
cmp
inc
fs
adc
shlb
daa
cmp
adc
cmp
sbb
dec
inc
mov
cmp
xor
xchg
stc
inc
test
push
sub
push
push
mov
cmpsb
mov
xchg
xlat
and
and
loopne
mov
fnstsw
shrb
ficomps
xor
jecxz
outsl
loop
aas
fistps
fmull
mov
xchg
add
or
nop
cmpsb
cmp
adc
rcrb
jmp
mov
jge
test
pusha
frstor
inc
xorb
dec
adc
int
sub
fistpll
cli
adcl
inc
cld
loope
imul
mov
movsb
or
out
jp
mov
add
aad
add
xor
or
popf
call
je
cmp
negl
insl
jge,pt
or
jle
mov
sahf
ficomps
push
dec
push
pop
cs
jge,pt
or
jle
mov
sahf
ficomps
push
dec
push
in
jge,pt
or
jle
mov
ficomps
cmovge
pop
das
insl
jge,pt
or
jle
mov
sahf
ja
in
mov
bound
push
add
sbb
jb
xlat
adc
or
sahf
and
push
loop
xchg
daa
xorb
pop
mov
ss
negl
xlat
adc
and
xchg
loopw
rolb
mov
mov
mul
fistpll
scas
sub
and
lcall
pop
out
pop
cmp
push
sahf
jb
or
add
sbb
push
xchg
in
icebp
cld
lods
inc
outsl
add
int3
orb
sti
cmpsb
dec
mov
dec
out
cmp
orb
scas
pop
and
mov
ja
push
push
insl
mov
pop
pop
lods
sbb
jo
cwtl
je
fcomi
inc
mov
repz
loop
mov
sti
loop
xorb
aaa
jp
sahf
pop
mov
mov
in
xchg
ja
fbld
push
jbe
sbb
insl
je
enter
jge
fisttps
push
cmp
aaa
out
xchg
xchg
repnz
xlat
dec
cmpb
call
pushf
sbb
popf
jmp
int
pop
sbb
data16
arpl
push
inc
pop
je
inc
mov
mov
loopne
xlat
int
cmpsl
jp
xor
pop
outsl
test
dec
fidivrl
mov
addb
jae
xorb
push
sbb
jge
insb
flds
and
rorb
xchg
seta
xchg
loopne
in
fildl
jp
lahf
daa
testl
aam
test
jecxz
sti
mov
nop
push
repnz
pop
fldt
jb
cmpsb
cs
adc
add
shlb
ja
inc
loop
xchg
daa
xorb
pop
mov
divl
xlat
adc
and
repnz
loop
xchg
daa
xorb
pop
mov
jo
out
fstpl
cmpb
xor
int
pop
minps
imul
filds
push
or
pop
push
scas
outsl
xor
aam
stc
imul
push
or
pause
inc
xor
cmp
cmc
and
xlat
adc
jmp
in
jmp
xchg
mov
mov
sarb
rcll
test
or
aad
jl
jge
adc
dec
ret
test
cs
jmp
cmp
pop
sub
xchg
adc
mov
clc
shrl
out
lods
aaa
fcompl
mov
loop
jecxz
movsb
into
aaa
imull
movsb
push
and
jg
sbb
push
pop
in
sub
mov
fdivl
out
xor
and
add
pushf
pop
out
arpl
ja
aaa
jae
dec
in
push
in
pop
cmp
xor
loope
call
cltd
or
pop
xchg
xor
bnd
es
hlt
or
call
lahf
fidivs
mul
test
cmp
push
filds
mov
or
das
cli
clc
sahf
lahf
test
jle
xchg
adc
scas
push
adc
inc
mov
aad
jo
sbb
pop
or
dec
out
loope
or
pavgb
push
jmp
or
inc
outsl
lea
aam
std
adc
pop
push
xor
push
add
movsb
fs
cltd
outsl
out
xchg
aad
lods
scas
mov
push
jae
inc
sbb
inc
push
daa
mov
dec
iret
mov
push
stos
out
mov
xor
cmp
and
fisubrs
mov
xchg
aam
loopne
xchg
add
scas
je
pop
dec
add
mov
lret
ds
push
clc
loop
orb
sbb
stos
int
sub
pop
ret
xchg
pop
ret
inc
andl
adc
and
or
adc
push
outsb
enter
and
jb
or
mov
lahf
sti
add
dec
loop
jb
or
jecxz
mov
mov
jae
xchg
push
and
xor
and
idivl
mov
fiadds
in
sarl
add
dec
sbb
lahf
and
pushf
xchg
repz
je
mov
std
nop
sbb
adc
pop
mov
inc
test
es
xor
cli
or
xor
lcall
cmp
pop
cmp
mov
jle
imul
fstpt
xchg
inc
sub
sub
adc
or
ja
xor
push
mov
rorb
aad
ja
int3
xchg
call
add
cmc
sti
test
pop
das
lahf
xchg
push
pop
or
stos
xchg
sbb
mov
ja
sbb
mov
ftst
adc
pop
sarl
inc
cmc
pop
lret
inc
xchg
lds
sbb
rcrb
or
xor
and
aaa
inc
bound
mov
mov
sbbb
and
in
in
sbb
aaa
fldenv
add
dec
xchg
cmp
xor
hlt
imul
and
movsl
mov
loop
scas
lahf
mov
fdivrs
jmp
sub
adc
iret
push
dec
ljmp
pop
repz
pop
sti
das
test
and
xor
les
mull
adc
mov
shlb
push
pop
cmp
jnp
xchg
out
int
adc
mov
clc
in
xor
pushf
add
ja
xor
shlb
sub
push
pop
push
xor
in
out
bound
sbbl
je
lcall
or
xchg
scas
fidivrs
mov
test
mov
sbb
adc
pop
mov
and
jle
and
mov
lods
sub
ja
fwait
mov
aaa
outsb
fldenv
cld
sub
fsubrl
stos
fucomip
mov
xchg
xor
pop
add
das
mov
push
loopne
cli
and
out
pop
and
mulb
hlt
call
fdivrs
pop
adc
xchg
pop
pop
mov
cmp
mov
mov
xlat
rcr
sub
jle
ret
pop
mov
lea
repz
test
xchg
jno
nop
adc
mov
sarl
xchg
ljmp
push
inc
jno
addr16
push
sub
lods
lds
dec
and
sub
push
mov
insb
cmp
mov
xor
test
fmull
rclb
sub
pusha
scas
mov
movups
repnz
into
add
mov
ja
stos
cld
mov
and
push
dec
pop
es
pop
cs
icebp
pop
pop
cltd
adc
jbe
sbb
cwtl
sbb
icebp
clc
lods
sbb
loope
inc
cwtl
lods
stc
xchg
pop
out
loopne
in
repnz
ljmp
test
std
push
cld
jo
inc
and
cmp
jle
roll
std
nop
dec
imul
xlat
mov
sbb
je
jg
mov
dec
or
xchg
pop
call
sbb
cmp
fisttps
sub
call
cmpsl
cltd
push
rol
pushf
xchg
sti
pop
mov
in
scas
rolb
int3
fdivrs
into
sahf
ss
add
add
xchg
and
push
push
pop
and
ja
addl
fwait
cmpsl
loope
push
std
mov
repz
mov
mov
daa
imul
fwait
out
shlb
or
cmc
arpl
shlb
data16
hlt
jno
lock
add
in
idivl
mov
sbb
dec
out
loope
mov
pop
xor
bound
cmc
sti
and
mov
sti
pop
lcall
xchg
mov
jmp
inc
and
jmp
jecxz
test
iret
fs
fwait
and
add
in
fsubrl
mov
inc
lods
and
shll
sub
je
xchg
mov
and
xor
cmp
ficompl
add
dec
add
pop
add
mov
mov
push
add
test
shr
pop
cld
daa
mov
jbe
lret
cmpsl
mov
or
outsb
enter
lahf
pop
pop
mov
hlt
jmp
iret
lret
mov
push
sub
repnz
xor
pop
add
in
sti
dec
sti
stc
mov
sbb
loopne
jmp
mov
and
mov
repz
cmp
jo,pt
push
outsl
clc
mov
daa
sahf
add
or
push
jno
xchg
pop
popa
cmp
sti
adc
dec
insb
loopne
aad
ret
insl
xchg
dec
frstor
cmpsl
insb
in
mov
repnz
pusha
sub
push
adc
ljmp
push
rolb
in
inc
aaa
mov
inc
fwait
cmp
sub
sub
int3
cltd
jge
enter
pop
lret
icebp
lahf
cld
ljmp
inc
lods
cld
insl
dec
test
xor
mov
in
jg
jge
push
and
xor
add
xchg
lcall
pop
clc
pop
mov
ret
faddl
sbb
fninit
test
loope
mov
flds
cmp
repnz
sbb
pop
rclb
sub
xchg
dec
mov
insl
pop
mov
mov
pop
jne
push
sub
push
cmpsl
je
mov
xchg
pop
cmp
imul
cmp
inc
out
add
mov
test
mov
adc
out
scas
insl
pop
ljmp
lcall
pushf
add
mov
and
repnz
or
push
and
sbb
lock
cld
or
mov
and
cld
mov
xlat
mov
stos
cltd
in
lret
sbb
xorb
flds
dec
and
in
or
shll
loop
mov
sub
pop
iret
ja
cmp
cld
push
les
fincstp
and
xchg
or
in
xchg
mov
pop
xor
std
mov
shl
loop
aas
add
loop
fildll
lods
mov
in
cmpb
lds
xchg
adc
add
repz
and
inc
mov
mov
leave
jecxz
and
and
sahf
mov
or
cmpsb
mov
pop
or
sub
pop
out
xor
push
push
or
and
xor
or
fs
adc
push
lcall
stos
ror
xchg
lahf
pop
iret
push
scas
mov
mov
sub
ljmp
xor
fmul
mov
out
sti
test
aad
push
mov
xchg
jbe
hlt
mov
pushfw
aad
insb
pop
insl
adc
jmp
sub
repz
inc
adc
fisubrs
jecxz
mov
ficoml
xor
jns
cli
and
sbb
sub
pop
dec
mov
int
rcrl
push
jb
adc
notb
xchg
jne
or
adc
sahf
and
or
fs
mov
and
popf
int
loope
or
mov
xchg
cmp
add
popf
shlb
or
pop
lret
repz
loop
ja
xchg
cmc
out
orb
push
outsl
and
sbb
les
inc
sbb
test
or
dec
xor
pop
sub
or
and
clc
sub
divb
test
jnp
lcall
flds
loope
sbb
test
insl
adc
mov
loopne
mov
ficoml
xor
sbb
daa
dec
sbb
or
and
aam
lods
cmpsl
xlat
mov
lret
push
cld
inc
daa
push
aaa
mov
add
aad
mov
inc
mov
jmp
adc
bound
mov
sbb
cld
scas
xchg
inc
aam
cmc
lahf
cli
aam
adc
fdivs
jle
inc
das
jmp
mov
loope
out
dec
nop
cmp
stos
jp
dec
out
ja
mov
or
fwait
pop
shr
dec
mov
cli
mov
adcl
mov
adc
mov
dec
sahf
xchg
mov
loopne
gs
xor
xor
out
dec
ficomps
mov
mov
mov
inc
push
jl
jb
inc
lret
mov
hlt
inc
rol
enter
clc
add
mov
jmp
dec
jnp
adc
mov
xchg
pop
fisttpll
sub
inc
inc
lret
test
push
sub
lret
mov
aam
insb
dec
cld
mov
aas
or
mov
dec
cmc
jg
movsb
icebp
test
ret
daa
int
mov
xor
imul
or
push
xchg
stos
adc
cs
lods
jns
fstps
add
movsl
xor
mov
xor
and
push
jns
jne
mov
jne
ljmp
push
mov
jecxz
repnz
and
inc
cmpsb
push
cs
jl
subl
rorb
cli
lea
insb
or
adc
imul
pop
dec
sub
or
cli
push
cmp
push
testl
out
dec
test
aas
cli
inc
das
cmp
aad
shrb
jo
sbb
mov
push
jbe
sbbl
sbb
cmp
push
imul
pop
mov
pusha
inc
sub
cmc
enter
and
out
cmp
jno
into
cs
rclb
imul
cmpsl
xor
test
nop
sbb
xor
jns
inc
mov
xchg
xchg
orl
aaa
fnstsw
xor
enter
xchg
iret
mov
push
xor
nop
push
dec
addr16
lods
push
jmp
cmp
cmc
int
rorb
mov
add
es
cmpsl
dec
aaa
dec
loop
stos
mov
lcall
pop
leave
dec
push
mov
jecxz
dec
gs
shlb
sub
lds
mov
adc
mov
adc
cmp
jne
test
mov
xchg
fmull
mov
inc
cmp
pop
xor
add
mov
pop
mov
push
rorl
xchg
mov
inc
push
mulps
cmp
test
insb
sti
dec
icebp
xchg
add
dec
pop
adc
dec
aam
fldt
dec
test
push
addl
jmp
andb
loope
cwtl
dec
jle
mov
jno
adc
mov
or
jb,pn
sub
jne
mov
adc
lcall
leave
and
mov
dec
and
mov
mov
dec
push
movsl
jle
pop
cmp
adc
jmp
scas
mov
jp
and
aam
mov
cmp
sbb
leavew
mov
pop
mov
lea
mov
or
xcrypt-ctr
cmpsl
cltd
cmp
lods
rolb
inc
out
or
inc
and
sub
ss
imul
iret
mov
inc
sbb
lret
popa
mov
jb
pop
xchg
push
jnp
repnz
pop
in
mov
repnz
rclb
add
push
add
jecxz
adc
jg
push
pop
ss
and
and
mov
aam
lret
addb
inc
pop
mov
push
ret
xor
jecxz
jno
xor
jecxz
daa
adc
mov
fidivrl
sbb
subb
cmp
xlat
das
mov
inc
dec
fdivp
mov
jp
daa
cmp
xchg
jno
xchg
cmp
outsl
daa
clc
pop
stc
mov
cmp
out
data16
jnp
sbb
scas
insl
inc
xchg
inc
mov
push
sarb
inc
fsts
dec
pop
repnz
sub
push
sub
push
in
ja
xchg
cli
mov
cld
pusha
je
iret
or
movsl
into
dec
cmpsl
fisttpl
cmp
mov
cmp
xchg
push
sub
adc
jl
xorl
dec
xchg
or
sub
in
ret
dec
jne
js
popa
adc
ja
lahf
jbe
hlt
stc
les
mov
out
lret
mov
sarb
mov
popa
movsl
loope
cli
pop
adc
xchg
xlat
outsl
out
or
xor
mov
fildl
xchg
xorb
or
out
testl
arpl
inc
aas
cmp
mov
in
push
mov
out
repnz
dec
lret
jecxz
in
out
lcall
int3
pop
inc
lods
adcb
orb
fwait
dec
shl
pop
lcall
mov
loopne
cmpsl
or
cmp
or
dec
dec
inc
or
cmc
mov
xlat
cmp
call
movsl
call
bound
nop
and
and
or
adc
adc
jg
or
mov
and
mov
mov
rcrb
mov
int3
xor
push
lahf
dec
xchg
int
push
push
pushf
sbb
and
cmc
loopne
dec
sti
aas
int
adcb
rcll
andb
jb
xlat
push
fidivrl
add
sub
and
cs
in
insb
adc
xor
int
jne
out
dec
pop
movsl
int
int3
shr
mov
fcoms
aam
adc
dec
cmc
jl
jo
aas
xorb
fwait
vmwrite
in
or
in
push
outsb
dec
xchg
or
inc
nop
jge
and
cld
insl
in
sub
stos
xchg
jg
sti
jb
repnz
sbb
int3
ficompl
pop
sub
test
mov
enter
lds
jl
pop
shrb
xchg
jmp
mov
mov
push
call
mov
idiv
mov
sub
outsl
mov
xchg
js
sbb
sbb
fimull
pop
pop
add
add
jo
inc
xor
push
mov
jmp
insl
ljmp
loope
hlt
xchg
cmpsb
daa
lock
jo
sarb
sbb
and
pusha
mov
and
fwait
dec
or
adc
into
ja
sbb
decb
mov
aas
lds
subb
and
cli
clc
mov
movsb
push
mov
idiv
rorl
je
rsqrtps
mov
and
repz
jno
jnp
mov
and
mov
js
inc
add
add
aas
mov
or
es
pop
mov
and
aad
mov
stc
mov
loop
sti
push
outsl
inc
test
fbld
xor
xchg
sbb
push
xor
cmp
xchg
dec
xor
jns
jle
xor
in
aas
cmc
xchg
push
stos
adc
cltd
jge
fsubr
in
sub
mov
jne
inc
jmp
mov
ret
jl
adc
ficompl
fcmovnb
push
cmp
cmp
es
and
dec
jne
xor
and
outsb
sarb
xchg
add
mov
fistpl
xchg
inc
pop
add
test
stos
or
mov
push
cmp
pop
or
xlat
sar
ja
pop
mov
rcr
xchg
popa
cmpsb
push
stos
jge
xor
popa
insl
mov
ljmp
sbb
icebp
inc
adc
add
lea
leave
daa
mov
das
out
mov
sti
mov
fs
sub
xchg
popa
movsl
fwait
pop
jns
test
repnz
mov
push
mov
pop
icebp
mov
cmp
xor
sar
sbb
fisubl
push
lea
jle
nop
test
repnz
push
test
fwait
jmp
jl
rcrl
or
xor
js
sub
push
cmp
ds
xor
inc
sub
dec
add
arpl
pusha
sub
and
lret
inc
mov
xor
rcrl
push
pop
jae
dec
test
add
rorb
insb
mov
shrl
push
mov
sbb
push
stos
jns
mov
sbb
leave
adc
subb
pop
leave
dec
fimuls
sbb
add
lods
cmpsb
lods
mov
cs
out
or
xor
dec
lcall
add
jb
mov
push
leave
out
inc
icebp
in
mov
mov
mov
lar
lods
push
adc
movsl
lret
xor
jbe
lods
pop
cmpsl
dec
dec
jne
or
outsb
push
jne
push
xor
aam
jg
add
lods
mov
push
fs
insl
dec
icebp
jnp
push
jle
or
push
movsb
imul
lret
enter
jnp
push
movsb
orb
stos
jg
stos
out
lods
notl
sbb
call
pop
xor
aad
aas
sbb
cmp
cltd
xchg
cmpsb
bound
and
daa
ljmp
leave
mov
mov
inc
ljmp
dec
shlb
test
fcomps
or
or
aam
inc
imul
xchg
addl
jnp
mov
cmpsl
push
fiaddl
or
push
mov
cwtl
ja
or
mov
xor
pop
adc
orl
dec
ja
and
bound
pop
adc
xor
mov
in
inc
sub
add
icebp
int3
sbb
mov
dec
shll
stos
mov
push
ret
xchg
mov
mov
fimuls
pop
cmp
xor
pushf
iret
jmp
add
scas
aas
xor
fstpl
int3
mov
mov
pop
shlb
cmp
stc
std
pop
add
repz
mov
das
cmpb
jecxz
loop
push
dec
in
pusha
mov
aaa
addr16
addr16
push
fadd
out
in
dec
aam
inc
loopne
mov
loopne
xor
push
xor
repnz
mov
or
push
and
or
sbb
push
pusha
scas
add
push
cmp
mov
cwtl
sub
add
pop
aas
out
ds
fwait
aaa
xchg
xor
cld
push
push
dec
and
nop
rorb
inc
insb
xchg
sub
pop
mov
xchg
stc
pop
inc
sti
jmp
inc
lcall
imul
icebp
shrb
out
xlat
push
or
jle
cs
cmc
and
push
push
mov
sub
lahf
or
pusha
adc
hlt
xor
lods
stos
sbb
sub
xchg
mov
push
cli
repz
into
jecxz
lahf
xor
idivl
outsb
imul
xchg
addr16
loopne
jecxz
and
ficoml
les
add
fwait
int3
mov
lock
cs
mov
js
aas
xor
push
cmp
repnz
push
mov
in
fsts
and
xchg
imul
jbe
in
jecxz
cmp
cmpsl
mov
mov
cli
pop
xorb
fbld
pop
push
out
clc
jbe
loopne
scas
ficoms
xor
sbb
mov
push
aam
and
imul
ficomps
xchg
add
push
push
mov
mov
in
cmp
subl
mov
ljmp
mov
and
jl
aad
adc
and
dec
fwait
gs
test
sbb
cwtl
leave
loope
mov
inc
iret
pop
in
cmp
ljmp
pop
leave
je
test
mov
dec
sbb
mov
adc
or
sarl
out
aad
inc
stc
sbb
jo
daa
adc
scas
mov
inc
popa
dec
sub
cld
or
dec
lea
and
insl
testl
xlat
adc
and
repnz
loop
xchg
daa
xorb
pop
mov
divl
xlat
adc
and
repnz
loop
xchg
daa
xorb
pop
mov
notl
xlat
andb
xchg
shlb
ja
inc
loop
xchg
daa
xchg
aaa
mov
dec
pop
inc
out
imull
movl
xor
cmp
and
scas
or
dec
clc
pop
call
ljmp
sub
aas
mov
dec
fwait
pop
mov
jp
or
sbb
cmp
cmp
lret
or
cmp
sub
jnp
pop
pop
fwait
pop
stos
push
je
or
jmp
mov
or
xchg
loop
xchg
xorb
mov
call
or
jmp
sbb
jle
insb
lcall
cwtl
mov
jmp
daa
sbb
mov
and
xchg
mov
cmp
sub
mov
test
sub
lds
sbb
push
sbb
mov
jae
fnstsw
sbb
mull
or
out
sub
cmp
lret
fcmovne
sbb
sub
xchg
jne
fwait
and
mov
fistpl
test
ficompl
xor
adc
mov
addr16
orb
jae
imul
fwait
imul
mov
lret
sub
fstpt
mov
sub
enter
xchg
mov
xlat
jecxz
inc
sub
sub
cmp
sbb
sti
ljmp
dec
stos
mov
inc
dec
jb
arpl
adc
add
xor
cmp
js
add
out
mov
into
sbb
push
ret
jg
pop
mov
mov
push
out
lcall
aas
cmp
or
pop
subb
xchg
dec
ret
dec
stos
jnp
imul
mov
jp
or
sbb
sub
cmp
lret
or
cmp
sub
jnp
imul
mov
jp
or
sbb
sub
cmp
lret
fcoml
mov
out
clc
push
imul
xchg
addr16
mov
push
mov
dec
push
fwait
add
out
adc
dec
ret
leave
jo
dec
and
sub
mov
and
ficoms
scas
add
sahf
cmpsl
xchg
xor
scas
jns
xor
call
das
xchg
jl
cld
cli
clc
pop
mov
xor
sbb
ret
pushf
jno
add
sbb
lods
cmpb
imul
xchg
pop
in
jecxz
mov
arpl
sbb
call
inc
int
push
add
enter
dec
les
leave
sub
sbb
out
in
sbb
dec
lahf
daa
pop
hlt
cmp
pop
mov
add
stos
daa
aas
jmp
test
push
icebp
and
cltd
loop
cmp
jbe
mov
mov
sbb
movsb
jl
mov
lret
sub
xchg
movzbl
popl
add
cmpsl
scas
aad
push
dec
sbb
vaddsubpd
and
in
mov
ror
std
scas
adc
int
ljmp
xchg
insb
sbb
js
popf
pop
adcl
push
rol
cmp
cmpsl
adc
xchg
xor
clc
test
mov
mov
mov
arpl
mov
popf
aaa
mov
aam
lret
mov
xchg
mov
lods
sub
mov
jp
sti
jnp
inc
adc
pop
lds
scas
in
xchg
cmp
dec
daa
sar
iret
dec
int
inc
lahf
out
iret
jmp
pop
adc
fdivs
cld
mov
push
mov
insl
andb
pop
js
mov
push
pop
cmp
mov
jbe
jmp
jle
dec
enterw
scas
dec
xchg
mov
or
je
repz
jg
lea
add
push
jne
lods
popa
push
fidivrl
stos
xlat
dec
sub
aad
ret
test
data16
imul
addr16
lods
cli
push
and
dec
mov
mov
xor
lret
out
lret
mov
test
push
icebp
add
jecxz
or
mov
pop
cmp
call
cwtl
xlat
sub
cmp
mov
lods
dec
adc
pop
decl
cld
push
int
inc
rolb
jbe
rcll
pop
pop
outsb
mov
je
pop
lods
in
inc
jle
iret
cmp
lock
adcb
inc
sbb
cmp
jl
push
cwtl
inc
push
inc
xchg
into
mov
int3
je
lock
mov
enter
pop
inc
xchg
or
mov
pop
or
sbb
or
stos
incl
lds
xchg
and
mov
ja
testl
leave
cmp
fwait
mov
out
or
xlat
call
stos
cmp
cmp
outsb
push
push
mov
scas
stos
mov
fst
jl
out
sub
repz
adc
es
jne
pop
ljmp
pusha
xchg
in
shrd
loop
adc
ja
clc
jb
sub
push
cmpsl
sti
cmp
pop
mov
inc
push
or
sti
mov
test
stos
aas
sub
jae
cwtl
mov
mov
and
pop
repz
aam
scas
test
leave
ret
loop
shrl
add
ljmp
clc
setg
adc
inc
fisttpl
test
xor
dec
sub
cmp
and
sbb
rcrb
in
addr16
xchg
and
add
aaa
cs
cs
push
int3
add
pop
push
call
inc
push
mov
xor
pop
or
pop
jae
fdivrl
ficoms
cltd
xchg
fdivs
cwtl
test
cmp
faddp
into
movsb
xlat
cltd
fs
jmp
fldenv
shlb
fstpt
outsl
adc
adc
mov
lea
bound
ja
cltd
jecxz
fildl
jbe
add
add
loope
xor
add
rorb
mov
mov
outsl
jno
push
repnz
fisubl
divl
out
push
fnsave
jns
insb
pusha
add
test
mov
cli
orl
and
inc
pop
mov
cld
sub
mov
jb
xor
inc
out
cmc
cwtl
cmp
mov
sbb
es
add
inc
fbstp
xlat
jne
jnp
sbb
outsl
into
sbb
inc
mov
jno
cmp
dec
cmp
pop
mov
fsubs
inc
mov
inc
push
or
bound
inc
data16
mov
clc
pop
lds
xchg
adc
scas
cmpsb
adc
and
and
pop
test
push
or
mov
int
sub
rcr
cmpsb
xor
push
ret
lock
inc
in
cltd
rolb
mov
fldenv
insb
sub
push
dec
test
dec
sbb
adc
gs
ret
pop
inc
jne
pop
sub
outsb
sub
push
and
lds
stc
loop
mov
out
sqrtps
lds
scas
loop
sub
xor
hlt
push
movsl
dec
fimuls
call
dec
loope
lods
rclb
mov
sub
mov
xchg
loope
mov
push
sub
xchg
push
fildll
sarb
lods
lock
or
repnz
mov
cld
adc
imul
out
xchg
test
aad
cmp
out
mull
into
popf
xor
in
jo
sbb
out
cmp
and
jmp
push
or
cltd
mov
pushl
mov
push
inc
rorl
in
add
hlt
sub
xlat
xor
push
cmpsl
jbe
fsubr
mov
fbstp
enter
or
sub
dec
fwait
push
dec
fistps
cmp
cwtl
pop
add
les
cli
inc
arpl
repnz
test
or
add
inc
sbb
xchg
pop
add
fwait
adc
push
sub
mov
mov
adc
divb
xor
lods
xor
dec
gs
stos
insb
push
adc
or
shrl
test
shll
jae
adc
pop
in
lret
test
push
push
sarb
cli
sub
pop
sti
sub
pop
test
push
loope
cmc
cmc
dec
dec
arpl
insl
mov
cmc
stos
push
mov
add
inc
mov
nop
ljmp
movsl
sub
adc
repz
pop
jno
mov
sub
ja
gs
mov
pusha
int3
inc
bound
mov
xor
rcrb
mov
push
inc
lret
sbb
adc
lods
or
pop
ljmp
dec
or
sarl
lods
js
pop
and
and
cli
jmp
xchg
das
jno
adc
mov
xlat
cli
mov
jmp
dec
pop
cmpsb
sbb
inc
fldl
and
mov
mov
mov
mov
in
jbe
bound
pop
popf
push
cmc
dec
test
jae
in
cmpl
repz
cmp
test
leave
or
sub
xchg
jns
sbbl
jne
mov
in
ja
fldcw
xchg
jge
fadds
xor
sub
mov
dec
cmpsb
shll
xchg
jle
aaa
add
dec
dec
fidivrs
mov
jno
push
add
sysenter
sbb
cmc
sub
ret
aaa
jg
loop
or
sub
cwtl
pop
add
cli
aam
mov
or
dec
mov
add
shlb
add
stos
dec
sbb
xchg
xchg
push
cwtl
jbe
mov
or
enter
xor
or
in
and
in
jae
fiadds
in
jnp
or
adc
in
mov
xor
and
adc
scas
ror
lods
push
lds
pop
pop
fstps
int
mov
call
data16
pusha
mov
adc
loope
xchg
test
mov
mov
xor
sbb
xchg
sub
push
hlt
stc
mov
ja
mov
add
imull
or
dec
fmull
pop
nop
mov
outsb
mul
fnstenv
inc
andb
pusha
inc
mov
lcall
cmp
aaa
sub
cmp
popa
outsb
mov
cmp
mov
call
clc
dec
sarb
inc
sub
cmp
xlat
adc
inc
sbb
leave
inc
int
cmp
xor
mov
mov
out
test
outsl
cli
sahf
in
out
ja
lock
cli
and
int3
adc
mov
aaa
es
push
pop
imul
subl
hlt
lds
inc
jecxz
fisubrl
xchg
mov
loope
aaa
jmp
call
lds
dec
pusha
sbb
mov
inc
add
ret
neg
stc
and
pop
xchg
pop
cmpsl
dec
fmull
cmp
stc
fmull
push
aaa
mov
sub
sbb
dec
sbb
roll
lahf
aas
mov
icebp
imul
mov
int3
je
sub
pop
pop
std
cwtl
xchg
out
jne
scas
psubusb
aas
jno
pop
add
pop
dec
movsb
dec
test
fmul
ja
mov
mov
cmpb
xchg
imul
dec
cmpl
xchg
xor
jns
outsb
arpl
jnp
ret
mov
loop
mov
int
jge
lods
test
sub
cmp
scas
xchg
es
out
pop
fsubrl
iret
bound
lea
mov
fucomi
mov
add
mov
lret
loopne
loop
inc
sbb
add
mov
cmp
xor
sub
dec
sbb
lds
insb
dec
aad
sarb
repz
xor
mov
imul
xchg
pop
rcll
test
cs
in
lds
jmp
add
cmpsb
icebp
pusha
lret
push
clc
lcall
test
iret
ficoms
aas
jno
jle
pop
in
push
stos
xor
mov
pusha
mov
cmp
jns
idivl
fwait
mov
daa
scas
mov
push
cmpsb
lock
test
aas
in
ret
fwait
mov
mov
mov
ffree
xor
pop
nop
movsl
adc
hlt
adc
mov
prefetch
mov
mov
or
sbb
cmp
out
jle
inc
xor
je
les
jns
mov
push
mov
adc
sub
pop
jno
mov
xchg
mov
mov
inc
out
or
xchg
or
into
aas
jmp
jb
aas
pop
ja
aas
sbb
andl
aad
mov
mov
inc
fcoms
cltd
into
enter
cmp
test
xchg
lret
mov
fpatan
xor
int3
inc
push
ret
fdivl
inc
xchg
push
sbb
xchg
insb
sub
inc
sahf
mov
dec
lahf
mov
popf
idiv
xor
fists
mov
cmp
andb
into
jno
jg
ret
in
or
add
sub
mov
arpl
lea
xor
jle
mov
in
push
cmp
push
push
fbld
mov
push
jns
adc
xchg
sarl
fcomip
gs
cld
xor
in
add
xor
test
or
inc
std
push
push
push
aas
add
xlat
or
rcl
add
cmpsl
cmp
push
shrb
bound
xor
jo
iret
jns
insb
push
push
je
pop
mov
hlt
iret
ret
jbe
mov
das
push
mov
jo
fwait
shlb
movsl
scas
mov
hlt
insb
arpl
sbb
filds
jb
jns
lea
popa
sbb
push
push
pop
or
jle
pop
mov
xor
bound
ljmp
dec
xor
jle
ficoms
nop
add
xchg
lods
push
sbb
cs
jo
pushf
outsl
pop
cmp
ret
jb
push
lea
sbb
imul
shl
shl
daa
mov
mov
adc
inc
add
jno
aam
or
lahf
fldcw
push
sti
clc
shlb
sbb
add
test
jp
ret
fdivrs
lds
jbe
sti
lea
lahf
das
push
dec
and
xchg
les
mov
scas
add
in
sbb
andl
jnp
mov
cld
mov
std
imul
loop
adc
jne
cmpsb
imul
and
js
scas
fstl
test
repnz
test
or
std
out
ret
stc
stc
and
push
cltd
push
cmp
mov
sbbl
mov
add
std
es
fs
xchg
mov
xor
sbb
pop
dec
sub
mov
aaa
ret
xchg
out
xor
hlt
fucom
loope
imul
dec
inc
iret
xor
jmp
adc
lock
lods
mov
mov
hlt
and
cmp
pop
dec
imul
flds
outsl
cli
insb
cmp
push
es
addr16
add
or
daa
aad
xor
inc
decb
xchg
movsb
out
pop
pushf
cmp
inc
and
lods
jl
fisttpll
lods
inc
outsl
cmpb
sub
ret
mov
lret
mov
lods
repz
fsubrs
sbb
cmp
int
xor
call
ja
sarl
mov
pop
push
neg
aaa
add
jbe
adc
or
daa
notl
in
sahf
std
scas
inc
xchg
xlat
ljmp
xchg
inc
jbe
hlt
and
mov
xchg
pop
addr16
fldcw
jb
xor
cwtl
popa
arpl
mov
xchg
pop
lret
loope
daa
jb
sti
mov
fiaddl
push
pop
orb
mov
into
iret
sub
jbe
dec
xchg
cs
cmp
mov
roll
jmp
mov
fs
sbb
es
popf
inc
dec
das
mov
and
sbb
fstp
icebp
enter
pop
xchg
into
fmuls
das
mov
adc
pop
xorl
nop
xor
out
jecxz
pop
fisttpll
in
dec
or
out
dec
push
jo
and
inc
out
jno
mov
mov
xchg
and
popa
enter
mov
adc
ret
cli
enter
nop
push
popf
test
and
pop
cs
pop
jns
sbb
jae
bound
cwtl
icebp
mov
add
xor
pop
orl
fcomps
mov
aaa
lret
mov
sbb
mov
lret
fs
out
jecxz
fsubs
xor
pushf
enter
mov
pop
movsb
je
cmp
cmc
pop
test
leave
xchg
and
imul
sbb
clc
xchg
mov
stos
stc
int3
mov
das
out
rclb
dec
mov
mov
sub
jae,pn
pop
inc
adc
lcall
sbbl
icebp
addr16
mov
popf
lcall
ficomps
jl
cmp
xor
push
sub
xor
push
add
mov
testl
dec
lahf
jecxz
or
cmpsl
mov
jge
or
dec
jo
and
lea
mov
outsb
je
dec
xor
and
iret
pop
js
ret
test
ret
xchg
pushf
sbb
cmp
test
test
out
mov
cltd
enter
clc
xor
shl
sahf
mov
fs
aas
jo
fdivp
imul
movsb
outsl
lahf
dec
jne
dec
and
popf
ja
xchg
insl
test
loop
adc
loop
ss
movsl
insb
inc
stos
jno
xchg
shlb
dec
dec
pop
fwait
pop
xchg
xlat
xor
cmpsb
and
fdivl
jo
add
xor
push
mov
jb
jp
add
wrmsr
sub
movsb
out
xchg
cmc
and
pop
inc
ds
imull
xchg
test
scas
inc
and
sarl
mov
in
dec
inc
test
adc
push
into
add
icebp
fs
std
notb
les
and
andl
sub
shlb
push
test
rcrb
shlb
into
dec
pop
jmp
enter
popf
jp
ljmp
dec
adc
jge
jmp
adc
sub
mull
pop
popf
out
pusha
outsl
repz
rorl
xchg
cmc
mov
lea
bound
cli
data16
dec
insb
bound
stos
push
dec
xor
inc
repz
stc
mov
bsr
lahf
out
scas
stos
int
aad
adcl
cmpsb
lock
xchg
jle
test
lahf
mov
and
dec
outsl
pop
jp
popa
mov
sub
sbb
in
mov
lock
sbbl
push
xor
sahf
rcll
jne
mov
adc
out
pusha
cmp
fwait
mov
add
sub
outsb
cmp
outsl
jno
jle
mov
call
leave
xlat
mov
enter
cltd
sti
shlb
iret
jne
add
into
dec
jl
enter
mov
js
xchg
dec
mov
pop
out
jnp
cmpsl
loopne
mov
ja
out
mov
mov
sub
sbb
lock
xor
mov
cli
hlt
pop
jecxz
dec
addl
sbb
pusha
and
dec
popf
es
mov
addr16
xchg
cli
jo
repz
addr16
outsl
daa
adc
iret
xlat
out
and
aad
mov
loope
insl
pop
cmpsl
push
shlb
insl
sbb
dec
cmp
and
fildl
in
mov
mov
outsb
nop
xor
iret
into
movsl
push
xor
sub
sub
cmp
inc
cmp
cmp
arpl
je
jbe
pusha
xor
mov
sarl
xor
xchg
bound
jns
and
jb
and
xlat
cmc
lcall
sub
sti
movsb
pop
jp
pop
cmc
push
addr16
xchg
negl
fsub
mov
rorl
repnz
mov
mov
insb
sbb
cmp
adc
dec
shrb
mov
adc
cmpl
aaa
jl
movsb
cwtl
rorl
scas
ljmp
pop
dec
dec
andb
shrl
xchg
aad
dec
xchg
and
mov
dec
mov
sahf
cltd
test
lahf
in
jno
fwait
sbb
cmpsb
jmp
in
dec
shll
lock
daa
les
lea
mov
scas
jl
mov
popa
jae
add
adc
cmc
mov
xchg
test
push
filds
xchg
cmp
fwait
xchg
dec
pop
bound
loope
lret
pop
daa
push
test
iret
pusha
fists
push
jp
pop
stos
xchg
and
push
testl
xchg
iret
aas
xchg
mov
jmp
in
and
imul
cmp
lock
pusha
insl
mov
das
movsb
xchg
xchg
dec
sbb
stos
test
stos
lock
insl
lea
les
mov
pop
xor
mov
xorb
das
jmp
xor
push
xor
lods
sbb
stc
pop
mov
dec
sub
iret
rcl
xor
xor
inc
cmpsl
or
sub
insl
imul
xor
dec
mov
arpl
aas
pop
mov
add
pop
push
cmp
pusha
cmp
pop
jle
in
int
pop
fsubs
add
push
stos
in
mov
arpl
mov
arpl
mov
into
jle
fwait
jge
mov
mov
movsl
fcompl
cwtl
imul
xchg
xor
or
int
xor
aaa
pop
bound
and
incb
int3
shl
add
or
or
gs
pop
jle
xor
fstpt
fucomi
mov
xchg
shll
stos
rcl
jmp
adc
stc
push
pop
push
add
cmc
jae
jne
test
xor
sbb
mov
cmp
movsb
lock
pop
jnp
sahf
sub
sbb
mov
out
stc
test
stc
faddl
push
pop
movsl
adc
lds
add
jbe
mov
hlt
or
pusha
xchg
jp
jecxz
int
mov
scas
aad
scas
adc
xchg
xchg
or
sbb
mov
nop
insl
rclb
aaa
out
icebp
xor
sbb
cmpsb
mov
loopne
mov
outsl
push
aam
addb
out
cmp
sarl
mov
jge
jge
rcl
lods
jo
xchg
jg
aas
cmp
mov
test
aad
lahf
add
sub
ljmp
lret
lock
fldcw
push
mov
sub
pop
insb
xor
or
jp
adc
dec
fnsave
xchg
cmp
pushf
cmp
shrb
xor
loope
das
iret
adc
dec
test
cwtl
insl
pop
out
or
lds
scas
push
sub
cmp
adc
std
gs
dec
and
xor
xor
decb
mull
loopne
push
ds
pop
lods
or
popf
jno
mov
pop
cmpsb
cwtl
mov
cld
movsb
jl
or
popa
push
jns
jo
push
or
xor
xor
es
fildll
mov
or
push
cli
sub
jnp
imul
mov
jp
or
sbb
sub
cmp
lret
or
cmp
sub
jnp
imul
mov
jp
or
sbb
sub
cmp
lret
inc
ljmp
jecxz
jnp
imul
mov
jp
or
sbb
sub
cmp
lret
or
cmp
sub
sti
cmp
movsl
and
mov
xchg
xor
add
adc
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jmp
push
aad
test
hlt
mov
das
jnp
push
sbb
mov
push
sub
lret
movsb
sti
xchg
jmp
fwait
hlt
mov
mov
xor
and
sbb
add
pop
or
sub
lret
sti
push
jmp
fwait
les
negb
push
jbe
daa
add
inc
and
xchg
push
sti
add
cmp
stos
out
pop
lods
dec
push
xchg
mov
cmpsl
loopne
jnp
loope
outsl
inc
sub
cmpsb
lret
into
fadds
or
insb
fbld
std
cld
int
je
sbb
sbb
pop
xor
stos
cli
dec
xchg
pop
subb
test
stos
dec
mov
les
popa
dec
jmp
and
sub
imul
cmp
sbb
hlt
dec
push
hlt
jno
pop
sub
es
xor
cmp
pusha
push
pop
mov
stos
lds
mov
outsb
dec
sbb
and
stos
cs
cmp
test
loopne
test
aam
push
pop
xor
mov
imul
dec
or
lcall
call
fbld
cs
jnp
adc
xor
or
insl
sub
sahf
out
call
ret
mov
sbb
inc
imul
gs
xor
mov
clc
xchg
xlat
mov
stos
les
dec
and
adc
add
je
cmp
test
aam
les
dec
and
adc
add
je
cmp
push
xchg
mov
push
jge
sti
sub
jp
js
push
nop
lahf
xchg
jp
jmp
and
test
and
inc
movsb
fcompl
fxtract
lcall
mov
out
dec
icebp
adc
cmp
mov
jbe
adcl
xchg
pop
or
xor
movsb
scas
hlt
out
inc
cmp
cmp
js
adc
insb
and
adc
mov
sub
pop
loopne
mov
fcomi
sti
loopne
cltd
xchg
inc
cmpl
loopne
subb
stos
fsub
jno
enter
jnp
or
xchg
ds
fnstsw
dec
push
sbb
call
add
sbbb
sbb
rol
stos
and
push
fimuls
decb
pop
lea
adc
shlb
rcll
and
sub
popa
mull
loopne
sub
fcmovne
std
lcall
aam
and
mov
imul
insl
mov
cld
xchg
fldenv
lods
lock
mov
sub
dec
cmpsb
push
xchg
pop
push
adc
inc
arpl
push
pusha
jbe
mov
ds
fsubrl
aad
add
add
test
inc
dec
and
out
pop
mov
loopne
mov
aam
sahf
iret
hlt
or
jp
pop
adc
cmpsb
or
rcrl
fwait
shlb
xchg
arpl
mov
stc
cmpl
stc
jg
adc
mov
or
inc
movsb
gs
dec
inc
xlat
sub
lret
xlat
imul
xlat
das
in
mov
jmp
push
jo
cmc
fwait
sbb
ror
add
sbb
jg
or
inc
ficompl
mov
push
add
adc
enter
ret
inc
push
dec
cmp
in
pop
bound
ret
dec
test
mov
cmpl
loopne
arpl
inc
stos
stc
add
test
jno
push
add
push
fistl
cli
sub
dec
xchg
pushf
cmpsl
sbb
std
frstor
les
push
sbb
sbb
dec
cmp
mov
push
push
sbb
mov
mov
and
pushf
add
mov
add
mov
jmp
adc
sahf
jecxz
data16
or
sub
push
jg
add
sbb
xchg
and
sbb
lret
pop
xor
pop
pop
dec
lock
jne
fsub
lds
jp
ret
push
jecxz
lret
xchg
mov
mov
dec
outsl
xor
or
pusha
cmp
outsb
push
mov
call
std
mov
push
mov
enter
push
jp
in
push
mov
cltd
sub
ret
repnz
push
mov
enter
fwait
insb
push
pop
inc
shrb
jle
xor
mov
mov
mov
push
aam
inc
mov
pop
arpl
imul
xchg
or
jge
jbe
test
test
mov
jle
lret
lods
lahf
add
and
cmp
push
out
out
push
ja
jne
mov
imul
pop
pop
mov
fbstp
out
in
xchg
sub
and
fnsetpm(287
jle
repz
sbb
imul
loope
sti
aad
jg
movsb
rorl
int
xchg
dec
xor
pusha
repnz
dec
or
test
mov
dec
inc
enter
push
jge
jl
mov
or
outsl
and
pop
stc
mov
fs
enter
filds
mov
jo
adc
and
or
cltd
push
mov
pop
les
xlat
stos
pop
xchg
push
inc
js
mov
xor
sub
test
xchg
ljmp
les
fdivp
adc
mov
fistpl
shrl
lret
jns
dec
les
inc
sarl
mov
jbe
ljmp
fsubrl
xchg
outsl
popa
push
mov
enter
ret
ss
repnz
shr
adc
ret
fs
inc
sub
sub
dec
mov
sub
push
pusha
bnd
pop
xchg
sbb
lret
xor
cmp
aas
and
dec
cwtl
mov
icebp
dec
cwtl
sub
pop
mov
movb
test
scas
jbe
push
pop
pop
shlb
std
fimull
xchg
mov
push
cmp
sub
pushf
adc
je
jp
addl
mov
mov
clc
ret
and
insl
test
int3
add
sarl
jg
xchg
popa
xchg
roll
les
enter
xor
popa
cmp
mov
jecxz
and
loope
shlb
jle
add
dec
add
sti
inc
aaa
addr16
insb
cmpsb
cmp
jmp
pop
inc
repnz
sbb
mov
mov
sub
icebp
xchg
out
mov
aas
cmp
popf
adc
jge
outsl
icebp
push
ret
inc
mov
test
js
pop
mov
add
and
movsb
mov
out
imul
dec
fsubrp
mov
movsb
pushf
pop
cmp
in
leave
cmp
popf
divb
xchg
sub
fildl
je
mov
pop
testb
and
jno
stos
outsb
inc
mov
fwait
sub
sbb
ss
pusha
clc
insb
sti
cld
add
ret
push
pop
sub
add
cmp
cld
xchg
sbbl
push
push
and
mov
sar
sbb
sarl
addr16
bnd
mov
xchg
add
int
call
dec
fistpll
int3
rol
and
mov
jbe,pn
mov
sub
xchg
es
popf
enter
mov
cwtl
nop
push
jae
push
stos
pushf
sbb
or
cmp
aas
and
adc
in
loop
test
inc
mov
ficompl
cmp
pop
pop
pop
mov
push
cmp
pop
aad
push
add
mov
push
xor
ret
xchg
stos
ds
cmp
cmp
xchg
aaa
push
jae
mov
shlb
adc
ret
add
push
jne
and
fisttps
ljmp
push
sub
lods
mov
or
add
mov
mov
jbe
xorl
pop
clc
outsb
mov
sub
adc
inc
imul
cld
fcoml
dec
jmp
popf
cmp
cmpsl
jbe
cli
movnti
popf
pushf
pop
jle,pn
shl
adc
popf
js
int3
jg
jmp
mov
mov
aas
xchg
cmp
push
mov
mov
fidivrs
dec
cwtl
fs
mov
cmp
pusha
divb
movlhps
jb
xchg
stos
sbb
sbb
add
std
addb
ret
add
outsb
adc
or
push
pop
dec
sti
add
push
adc
test
clc
mov
and
xchg
push
sahf
xchg
cmpsb
test
loop
jnp
add
leave
mov
sub
adc
addr16
or
xor
mov
icebp
cld
sub
ds
xor
in
pop
and
into
fcoml
into
mov
inc
adc
test
mov
js
std
mov
and
cli
or
inc
add
mov
and
jp
mov
negl
fsub
pop
mov
cltd
sbb
xor
mov
and
jae
loopne
std
std
lock
push
imulb
push
out
jbe
inc
es
push
insl
or
pop
and
xchg
mov
dec
outsl
mov
and
insl
add
das
mov
addr16
mov
jo
adc
add
idiv
outsl
mov
adc
mov
or
cld
cmp
fsubrp
cmp
aam
test
jge
cmp
lods
rcll
add
sbb
jo
dec
pushf
xchg
adc
movsb
movsl
pop
data16
jl
add
aas
rclb
add
leave
adc
fisubs
jge
lea
testb
mov
addr16
in
imul
pop
jo
xlat
call
out
popa
into
adc
mov
xchg
je
jne
in
je
push
lcall
sub
in
in
enter
aad
inc
and
aam
dec
dec
cld
daa
pop
mov
xchg
lcall
pop
mov
push
fists
ja
stc
jns
fwait
pushl
fstp
dec
fiadds
insl
shrl
xlat
in
inc
xor
mov
or
add
stc
sbb
lret
std
sbb
inc
jbe
fcomps
loope
xor
negb
xchg
popa
lahf
jp
mov
std
jbe
fbstp
sbb
stos
dec
out
inc
rcrl
or
les
out
xchg
mov
dec
or
sub
addl
insl
fsts
xchg
cmp
fdiv
call
ret
add
inc
cmp
sbb
movb
push
dec
mov
cwtl
pop
insl
cmp
fiaddl
int
xchg
sub
pushf
mov
and
mov
iret
inc
test
fcom
mov
fdiv
mov
sbb
push
cmp
xchg
cmc
mov
repz
lods
inc
ljmp
inc
sar
cmp
loopne
test
mov
sub
scas
adc
sbb
out
fstpl
lret
aaa
mov
pop
sbb
loop
adc
aaa
push
arpl
movsl
fiadds
js
jo
xor
sbb
xchg
add
inc
and
jge
lret
jbe
mov
jnp
pop
out
shlb
ret
fnstcw
movsl
xor
jne
jae
push
add
mov
shlb
pop
lcall
jns
fnstenv
daa
sub
call
jns
test
lods
push
dec
inc
jno
jbe
repz
pop
scas
mov
das
shlb
les
pusha
sahf
push
stc
xlat
ss
je
jnp
testl
mov
inc
fidivs
in
js
pusha
imul
bound
sbb
mov
sub
inc
sub
adc
adc
sub
lds
jecxz
push
cs
pop
xor
dec
mov
orb
insl
pushf
inc
je
adc
dec
fst
adc
stos
sub
scas
hlt
out
lea
fsts
divb
stc
mov
sbb
inc
lds
movsl
pop
inc
fldcw
xchg
mov
cmc
js
fstps
fcomip
sbb
push
push
fstp
adc
mov
inc
fisttpl
mov
mov
sub
or
sti
mov
mov
pusha
imul
jl
mov
cmp
mov
imul
jg
out
imul
mov
sahf
add
mov
dec
fcmovnb
mov
xchg
fildl
jle
mov
jp
loopne
mov
out
fsubl
xor
shrl
data16
jmp
sahf
in
jae
addl
mov
xor
push
pop
adc
data16
dec
xlat
lods
scas
xchg
cltd
dec
xchg
and
lcall
cld
ret
ss
jo
push
xchg
dec
cmp
mov
fcomps
dec
push
idiv
mov
xchg
xor
and
sub
icebp
btr
cmp
fisubs
jmp
fildl
inc
andnps
fwait
mov
sub
sub
cli
mov
xchg
pop
push
cltd
int
sahf
aad
js
imul
fldt
xchg
jbe
lds
push
cmp
add
push
aad
icebp
cs
dec
ds
pop
dec
mov
movsb
xor
pop
add
jle
loopne
test
sub
xor
cmp
push
push
mov
or
pushf
add
jne
cmp
mov
mov
mov
xor
lds
xor
push
push
cmp
jp
imul
mov
add
test
mov
imul
or
call
inc
addl
inc
test
xor
push
lods
arpl
inc
test
jmp
or
aad
outsb
push
out
sub
addr16
sbb
and
push
daa
xlat
les
mov
ja
pushf
insl
inc
mov
stc
movl
cmp
iret
rcll
inc
rcll
outsl
mov
jge
frstor
lods
mov
jnp
jb
pop
sbb
dec
xor
jmp
loop
cmp
int3
dec
xchg
aad
popa
sbb
dec
mov
sbb
xchg
xor
cs
popa
mov
jb
and
ss
ds
xor
aas
cmpsl
or
push
cmc
orl
dec
imull
jns
or
cmc
lds
xor
pop
enter
arpl
loope
mov
xchg
cs
mov
mov
call
pop
in
adc
add
xchg
jl
cmp
cltd
test
push
ret
xchg
lds
mov
gs
xchg
in
cmp
lods
mov
or
add
sbbl
rcrl
dec
or
das
lahf
ds
pop
stos
sbb
sbb
xchg
bound
repz
enter
or
ficoml
popl
pop
push
or
dec
inc
scas
nop
cmp
ja
js
sbb
pop
cs
sub
jb
inc
add
mov
leave
ja
and
adc
sub
jl
adc
mov
scas
push
sbb
shl
push
or
testb
cmpsl
adc
imul
dec
insl
jne
aas
daa
lock
mov
add
sbb
fstpt
icebp
jo
sbb
xlat
sarb
loop
sbb
push
jmp
enter
jnp
icebp
push
ss
rcrl
out
int3
push
cmp
shll
mov
add
stos
adc
pop
cmc
mov
add
es
mov
xchg
and
mov
arpl
scas
xchg
sbb
inc
fldln2
lret
sub
adc
and
mov
xor
xchg
lcall
lods
cld
call
xchg
dec
ljmp
stos
in
lods
js
and
shlb
cltd
enter
subl
adc
push
or
and
popa
and
push
push
mov
sub
xor
mov
inc
fidivl
mov
shlb
sbb
inc
into
lods
in
cmpsb
push
lods
ficoms
sbb
jg
into
stos
xchg
aaa
adc
adc
clc
std
das
and
lock
push
hlt
xchg
xlat
dec
mov
fwait
mov
cmpsb
sbb
shr
cmp
cmp
es
push
fdivrp
inc
insb
stos
mov
dec
jno
or
inc
or
mov
test
imul
inc
ret
call
int3
adc
xchg
sbb
pop
test
das
div
inc
or
divb
push
pusha
mov
push
push
adc
lret
mov
inc
js
cmpsl
rcrb
inc
fmull
pop
xchg
test
iret
fidivrl
mov
cmp
add
or
mov
out
bound
adc
in
fstps
cmp
xchg
ret
cmp
pop
push
es
push
xor
jl
out
mov
bound
lret
pop
int3
mov
mov
aad
mov
lahf
nop
xchg
insl
pushf
cmp
aad
push
mov
push
pop
dec
mov
addr16
push
push
imulb
dec
movsb
stos
rol
popf
fstps
mov
mov
lods
ret
cmp
dec
dec
sub
sahf
push
call
test
loopne
cmp
pop
jae
mov
mov
xchg
in
lret
jmp
pop
mov
shl
out
mov
xchg
fwait
push
pop
pushf
add
push
inc
andl
pop
pop
inc
inc
jl
xor
push
movsb
mov
arpl
fldcw
ficoms
lahf
cs
push
inc
pop
enter
shlb
insb
gs
cmc
addr16
jb
inc
inc
xchg
or
adc
clc
loopne
pushl
xchg
mov
mov
loopne
pop
pop
orl
jp,pt
dec
sahf
scas
jge
in
je
and
insb
xchg
popf
lret
sahf
pushl
orl
push
cmp
sub
ja
mov
movhps
jae
push
mov
iret
into
fwait
jns
out
xchg
insl
stos
es
ret
movb
pop
test
rorl
out
lods
fsubl
inc
shrl
mov
xchg
test
mov
shrl
in
mov
adc
leave
pop
push
arpl
jl
cltd
je
movsl
mov
or
cs
and
jb
dec
test
push
ficompl
mov
aaa
pop
loop
mov
cmpl
test
iret
andb
lods
ficompl
dec
dec
jno
shrl
fdivrl
ja
pop
dec
and
dec
cs
pop
or
into
inc
push
dec
sbb
cltd
jno
inc
lods
mov
pop
cli
cmp
movsb
in
inc
and
pop
movsb
pop
popa
sub
push
insl
xor
jle
adc
push
add
xchg
dec
jo
cmp
mov
fdivrl
cmp
cld
cli
enter
xor
and
pushf
aad
imul
xor
lods
dec
in
inc
out
in
sar
inc
dec
mov
adc
addb
shll
add
aas
mov
arpl
movsb
clc
shl
inc
imul
gs
dec
xor
xor
jb
jge
adc
jmp
xorb
lahf
cmp
ja
sub
iret
xchg
test
in
mov
fs
fwait
cmp
sub
add
add
dec
cld
inc
sub
out
xor
adc
popf
xchg
push
fnstenv
add
jge
data16
adc
shlb
into
add
and
jnp
dec
dec
xlat
xor
int
push
xor
hlt
inc
xor
cmpsb
test
and
jle
repz
leave
aaa
mov
jo
jns
hlt
mov
loopne
inc
pop
repnz
xor
ja
stos
or
mov
cmp
movsb
pusha
xchg
mov
pop
mov
and
dec
add
sub
push
setb
push
xchg
ss
fs
dec
hlt
adc
popl
arpl
rcl
cld
push
mov
data16
push
and
jle
xchg
jecxz
fsubl
xor
cmp
sub
shlb
xchg
xchg
sbb
and
fwait
aad
jns
add
dec
push
or
and
xor
and
stos
out
daa
fnsave
fildl
pusha
jl
loop
cld
mov
arpl
aad
icebp
sbb
adc
popf
movsb
mov
xchg
fadds
fisttps
xchg
cmc
add
lea
push
jge
sbb
test
arpl
adc
push
adc
cmp
stos
sbb
xchg
enter
cmp
scas
mov
jmp
push
cmpsb
jb
pop
sbb
xchg
push
in
jnp
fs
shlb
cld
ds
lret
sbb
push
fdivrl
popa
js
mov
xchg
xchg
sub
int3
cltd
fwait
das
test
int
add
mov
dec
pop
push
mov
orl
mov
sub
add
fimull
test
add
adc
cmc
lods
leave
icebp
sbb
mov
es
mov
mov
movsb
or
scas
mov
push
negl
movsb
push
imul
pop
lret
xor
mov
or
test
stos
cmpsl
lcall
pop
cli
push
popf
xchg
and
lahf
xor
imul
push
xor
iret
lret
mov
lcall
lods
popa
jle
push
cmc
add
cmp
movsb
das
in
movsb
dec
je
xchg
jmp
fs
sub
in
push
push
add
cwtl
sbb
lahf
inc
mov
test
jne
popa
xchg
repnz
cmp
push
test
test
imul
mov
mov
arpl
mov
add
call
enter
std
inc
cmp
insb
test
add
ss
mov
and
ret
xor
in
mov
nop
repnz
sub
xadd
and
idivl
inc
pusha
and
nop
dec
ds
inc
in
adc
shl
mov
mov
mov
lret
and
xorl
addr16
shr
jmp
repz
mov
ret
sbb
clc
fstpl
xor
and
or
xor
dec
inc
xchg
mov
lret
cmp
incl
lret
xor
fidivl
fnstsw
fstps
push
test
repnz
hlt
mov
mov
adc
pusha
aas
int3
jne
popf
or
adc
int
ds
stos
lock
push
fisttps
inc
repnz
push
out
inc
adcb
mov
movsl
outsw
daa
test
xor
shlb
mov
lahf
jle
lods
mov
shlb
pop
je,pt
xchg
cmc
push
pop
mov
test
insl
lods
scas
call
push
xchg
and
fsubrp
xchg
push
sbb
dec
dec
xchg
lds
mov
clc
add
add
xor
shr
dec
mov
mov
fisubl
mov
pop
cmpsl
cmp
loope
sub
cmp
push
fdivl
cmp
stos
jecxz
in
xchg
push
add
js
ja
popa
rorb
icebp
sbbb
out
movsb
cli
xchg
jmp
fwait
hlt
mov
mov
xor
and
adc
add
je
cmp
test
aam
les
dec
and
adc
add
je
cmp
jmp
sbb
mov
pop
xor
imul
pop
sub
sti
jo
les
push
stos
add
lret
dec
mov
adc
jae
or
sbb
sub
cmp
push
sti
inc
lret
jb
bound
adc
ret
pop
loop
xchg
cmp
jmp
sti
inc
lret
jb
bound
xor
ret
pop
loop
cmp
jmp
sti
inc
lret
jb
bound
xor
loope
cmpb
sub
dec
aad
fdivl
lahf
and
bound
adc
inc
cmp
xlat
mov
jecxz
pop
std
pop
add
xor
es
adc
sub
cmpsb
idivb
jl
cmp
mov
repz
xchg
dec
mov
sbb
inc
rol
aad
outsb
dec
pop
stos
fidivs
mov
sbb
jmp
fsubl
pop
fdivl
rcrb
fcompl
jbe
add
cmp
nop
mov
dec
and
out
push
lcall
push
jae
or
mov
pop
xlat
xlat
add
icebp
bound
adcb
lret
mov
ret
ds
mov
xchg
push
mov
push
sti
inc
lret
jb
bound
xor
ret
pop
loop
xchg
cmp
mov
add
ja
imul
pop
jbe
stos
push
ret
cmp
jp
outsb
lret
imul
aaa
daa
test
lcall
pop
fiadds
cltd
sbb
mov
pop
andl
int
push
sti
or
cmp
add
sarb
dec
repnz
loop
xchg
cmp
jmp
sti
inc
lret
jb
bound
xor
ret
pop
loop
xchg
cmp
jmp
lcall
dec
in
fstpt
test
je
xchg
dec
or
aaa
or
jns
sub
xchg
dec
adc
repz
in
pop
xchg
lods
mov
scas
cltd
xchg
das
pushf
hlt
lcall
popf
mov
sbb
mov
pop
hlt
mov
in
adc
movl
stc
je
das
mov
mov
aaa
xor
push
jmp
push
mov
push
scas
push
insb
sbb
inc
and
jae
dec
insl
mov
pop
arpl
push
cwtl
arpl
cwtl
xor
je
dec
cli
call
mov
aas
mov
aam
rcr
cmp
subb
fs
sbb
in
mov
sbb
inc
jns
rol
xchg
fdivrs
hlt
popa
xor
adc
push
mov
add
cmp
inc
ds
mov
stc
je
std
or
xor
mov
in
jo
shl
add
dec
sub
jmp
repnz
bound
les
gs
ret
inc
test
in
pusha
aad
fcompl
call
push
es
dec
into
sbb
and
xchg
bnd
imulb
repnz
ss
xchg
js
out
repz
sbb
icebp
stc
and
and
cmp
in
int3
dec
sub
lret
dec
pusha
out
lock
stos
outsl
in
fsubs
ja
push
cmp
xchg
imul
stos
and
jmp
mov
inc
and
xorb
mov
out
dec
fistps
je
xchg
out
dec
shrl
push
jo
cmc
ljmp
lods
jno
inc
adcb
add
repz
mov
xor
ds
aas
mov
std
dec
and
push
int
mov
xchg
out
scas
xchg
push
jmp
mov
in
push
fnsave
enter
sahf
or
scas
jb
and
iret
in
or
sub
jg
outsl
sbb
xor
sbbb
pusha
mov
jns
mov
inc
push
out
jno
jne
mov
les
inc
mov
loop
mov
repnz
add
cmpsl
popa
push
xchg
lret
les
and
dec
mov
test
mov
mov
or
mov
or
mov
xchg
insb
es
dec
push
cmpsb
jnp
test
ljmp
imul
sti
adc
popa
dec
sub
cmp
mov
mov
cwtl
call
stc
jnp
out
sub
int3
mov
or
jnp
repz
and
sub
dec
fbstp
aas
adc
sbb
out
add
pop
enter
jp
xor
or
inc
xchg
sub
xor
or
jb
test
add
cli
mov
xchg
outsb
mov
icebp
loopne
push
fstpt
in
inc
scas
out
in
and
xchg
pop
jle
inc
sarl
cmpsb
insl
out
add
push
movsl
jo
andb
imul
sbb
mov
insl
gs
or
xchg
shl
lock
add
sub
sbb
inc
in
test
fdivrs
dec
popa
mov
icebp
fucompp
and
rcrb
aaa
jge
xchg
lods
adc
fcompl
fstl
in
lret
repnz
jecxz
fsubp
xchg
xorb
or
and
cmp
push
test
stos
mov
dec
lcall
insb
jp
out
notl
inc
test
mov
shll
shll
jp
jp
mov
ds
mov
mov
push
mov
cwtl
push
pop
adc
scas
sbb
dec
sbb
ljmp
ja
fidivl
ret
mov
aad
cmp
push
inc
mov
jp
int3
xor
stos
xor
jmp
mov
push
loope
jmp
imul
fisubrs
bound
push
adc
aas
into
mov
inc
jno
and
arpl
jno,pn
sbb
js
loop
inc
mov
pop
mov
jae
xor
push
mov
jge
adc
out
cmpsb
js
mov
into
pop
dec
dec
popl
stos
lcall
pop
mov
outsl
int
pop
shrl
cwtl
push
mov
insl
fcoms
fdivrl
mov
scas
push
push
lock
fwait
inc
repz
sbbb
push
repnz
cmp
xor
notl
xchg
rolb
or
inc
mov
fldenv
fmuls
cld
dec
fidivrs
jp
in
shlb
inc
xor
int3
ljmp
pop
cmp
aaa
pop
cs
inc
cmpsb
sbb
and
sub
cmp
test
adc
jno
cltd
pop
repnz
push
jno
and
sti
inc
mov
xchg
xchg
cmp
sub
scas
into
cld
cmp
cltd
std
mov
shl
mov
mov
cltd
cmpl
adc
test
dec
mov
adc
ljmp
movsb
movd
add
sbb
addr16
movsl
lock
addr16
sub
lcall
insl
sti
cwtl
mov
cli
rcll
or
inc
cmp
sub
addr16
xchg
int3
push
push
push
stc
dec
mov
lahf
sti
mov
mov
push
push
popf
mov
sahf
rol
xlat
dec
imul
lock
xor
subb
or
in
std
repnz
inc
xor
mov
pmaddwd
sub
fldenv
xchg
fstl
lock
or
pop
cld
in
jp
loop
stc
jmp
dec
and
dec
pusha
push
repnz
ljmp
mov
mov
fstl
push
mov
mov
imul
or
jg
sub
push
add
dec
stc
inc
hlt
and
add
push
and
rcr
add
pop
ja
inc
es
sbb
dec
dec
sub
xor
push
push
jne
mov
mov
sbb
fbld
mov
push
loop
push
out
and
or
ljmp
bound
dec
insl
imul
push
sub
sti
and
in
add
cmpsl
xchg
dec
mov
loopne
xchg
jge
sub
lea
inc
xchg
repnz
cmpb
ss
bound
xchg
notl
mov
lret
into
jns
cmp
mov
push
jne
daa
inc
out
inc
mov
pop
stos
popa
bnd
pop
jecxz
mov
int
xor
inc
mov
pop
push
repz
mov
mov
jmp
inc
cs
test
mov
mov
fisubs
adc
lea
inc
lret
rorb
inc
mov
mov
add
mov
dec
fimull
inc
xchg
or
and
and
add
or
push
mov
gs
pop
adc
inc
loop
mov
imul
in
jnp
and
xchg
insb
cmp
or
jle
in
out
mov
imul
outsb
push
cld
jg
sbb
sbb
pop
add
pusha
sub
mov
add
jge
lock
je
fdivr
cmp
loopne
idiv
pop
adc
psadbw
test
add
sub
lods
test
mov
sub
in
imul
ret
sti
pop
gs
jmp
adc
std
in
and
pop
lahf
cmpsb
stos
pop
mov
rorb
pop
inc
stc
mov
data16
push
xor
add
mov
cmpsl
xorb
xor
lret
push
rcl
cmpsl
pop
ss
sbb
cltd
cmpsl
push
stos
movsl
ffree
into
insb
mov
adc
push
popf
fstp
jae
into
out
mov
pusha
mov
push
fucomi
lods
mov
cmpb
cmp
lret
ficomps
add
jb
lds
sbb
in
pop
sub
xchg
sub
dec
shll
dec
call
out
xchg
out
into
sub
pushf
push
imul
cmp
shlb
stos
add
sbb
test
jne
les
lcall
test
xorl
xchg
add
mov
push
mov
subb
xchg
dec
cmp
pop
pop
mov
je
das
pop
and
out
mov
cmp
leave
or
lcall
lea
jb
xor
enter
incl
adc
jp
shrb
pop
imulb
fcmovne
sti
mov
jecxz
jmp
addr16
mov
test
add
orb
sti
icebp
sub
jl
lods
push
mov
repz
lcall
jl
xchg
in
xchg
pop
aas
test
insl
rorb
sbbb
pop
jnp
into
or
mov
xchg
mov
sbbb
xor
cmp
push
jne
bound
push
xchg
cs
movsb
sbb
pop
hlt
xchg
and
pop
sbbb
lds
imul
cmpsb
push
sbb
push
ljmp
test
call
fcmovnb
mov
jle
test
cmp
popa
sbb
add
decl
test
and
mov
mov
jle
lock
enter
jmp
cs
sbb
push
add
sub
jb
or
fisubrs
ret
insl
movsb
pusha
xorl
dec
xchg
idivb
sub
shl
jg
xchg
mov
fsubr
inc
pushf
in
je
test
daa
inc
lods
inc
ret
push
jp
ds
sub
stc
push
xor
inc
add
mov
inc
push
jb
jns
mov
or
sbb
out
sbb
movq
call
insb
sbb
mov
aam
in
pop
or
xorl
mov
mov
adc
aaa
jg
jmp
addr16
cmp
mov
sbb
test
pop
mov
fcoml
mov
push
cmpsl
loop
dec
les
cld
mov
cmp
adc
push
xchg
aaa
pop
test
sti
lods
mov
sub
cmp
bound
fnstcw
cmpsl
xor
mov
pusha
xchg
cmp
jge
inc
js
cmpsl
mov
daa
adc
push
sbb
xor
scas
cld
je
loopne
mov
cli
dec
push
dec
pop
icebp
push
mov
sti
xchg
mov
push
aad
data16
and
adc
iret
dec
loop
adc
or
or
cmpsl
inc
shlb
std
jns
mov
mov
cmp
push
jno
movsl
xchg
iret
adc
std
cmp
push
inc
je
xchg
dec
lret
cmp
inc
fs
ja
pop
enter
loopne
or
jmp
ljmp
jb
or
sbb
insb
pop
xor
push
sub
cli
int
out
into
inc
push
iret
pop
xor
xchg
adc
mov
mov
int
js
jp
jecxz
insl
inc
xor
pop
jne
inc
ja
cs
incl
cld
leave
mov
jp
dec
aam
xchg
mov
jnp
pop
aad
fildl
push
ds
and
xchg
add
lods
in
outsb
adc
xor
sbb
dec
dec
movb
sti
mov
lods
jb
jl
iret
scas
fisttpll
stc
mov
dec
js
jb
inc
pop
push
push
jmp
dec
incl
xor
adc
test
popf
outsb
popw
mov
mov
dec
cmp
mov
enter
pop
mov
mov
mov
sbb
jno
xlat
jo
rdmsr
cmp
subl
psrlw
jo
lret
lret
loopne
dec
adc
jmp
rcll
out
aam
rol
fwait
ss
sbb
test
movsb
and
out
loope
sahf
pushf
sahf
push
mov
xlat
aam
mov
inc
dec
dec
dec
sub
pop
push
test
push
xor
mov
out
adc
loopne
and
jo
lret
inc
scas
out
inc
outsb
mov
fdivr
test
loop
push
into
ljmp
movsb
repz
jp
jns
insl
inc
ret
adc
inc
jmp
jge
or
cmp
sub
pushf
and
pop
inc
jecxz
ds
jae
push
or
push
insl
jno
cltd
jae
push
mov
push
pop
mov
dec
pushf
hlt
popa
lahf
xchg
imul
nop
dec
test
ss
out
xchg
dec
sbb
dec
sub
sub
lods
or
jno
outsl
sub
cmp
pop
repz
jne
cwtl
pop
xchg
sahf
and
dec
popa
call
or
imul
sub
cmp
mov
hlt
adc
jo
or
xchg
push
xlat
jl
mov
pop
rorl
and
and
lcall
inc
insl
xor
push
pop
pop
and
xchg
cmp
loope
mov
lods
jae
cmc
xlat
push
lods
addr16
ror
loope
jb
cmp
xchg
cli
sbb
popf
and
add
xchg
shl
push
in
pop
xchg
or
shl
or
addl
pop
lcall
ja
enter
test
bound
jle
sub
data16
fs
push
outsb
es
enter
frstor
xchg
dec
ror
iret
psubb
lds
pop
cmpsb
sub
add
mov
rorb
loop
xor
and
adc
or
iret
div
jns
mov
rcrl
lret
mov
fucomip
test
loopne
sbb
movsb
dec
mov
add
mov
mov
aam
inc
push
or
insl
dec
or
mov
das
push
shlb
out
xchg
ud0
out
or
jae
nop
xchg
inc
jb
scas
jecxz
mov
pop
or
or
cwtl
popa
ja
xor
sbb
inc
out
mov
cld
mov
pop
fisubs
fldcw
xor
and
or
and
inc
cltd
or
les
icebp
add
xchg
xor
adc
es
xor
fstpl
imul
dec
cmc
xor
mov
in
xchg
xchg
jo
nop
pop
add
pop
ret
mov
xor
testl
jbe
push
jmp
adc
push
mov
cmp
addb
fsubl
push
ja
inc
sub
icebp
xchg
push
pop
adc
inc
jae
dec
push
dec
add
add
cmp
xorl
inc
jge
xchg
or
shrb
sub
mov
enter
fs
sti
sub
addb
xor
push
or
inc
aaa
cmp
popa
lea
inc
adc
lcall
jae
push
imul
sub
out
sub
mov
pop
int
inc
shll
dec
mov
jo
adc
rcl
sar
xor
push
inc
jg
lret
push
mov
pop
aam
add
outsb
pop
pusha
sti
into
movl
xchg
cmp
add
jo
mov
mov
mov
leave
mov
xchg
leave
mov
addr16
out
sbb
sub
movsl
push
in
dec
repz
pop
cmc
push
sub
je
cli
inc
ss
adc
pop
and
xor
ret
xchg
sub
int3
out
sub
iret
scas
mov
xor
adc
push
lods
mov
in
xor
into
jb
sub
sbb
clc
mov
and
jecxz
and
ja
loopne
xchg
cmc
mov
mov
push
dec
ss
repnz
cmp
push
xchg
sub
das
add
push
push
lret
out
sbb
push
inc
sbb
jne
ficoms
fwait
icebp
push
movsb
ret
out
and
sub
scas
out
cmp
test
xor
stc
movsb
add
out
ficompl
xchg
stc
clc
dec
mov
cmp
in
mov
shll
insl
clc
push
jbe
or
pop
mov
sbb
movsb
sbb
jg
cld
adc
cmp
pop
lret
mov
mov
inc
out
mov
scas
insb
xchg
pop
push
add
leave
rcll
sbb
pop
and
push
stos
mov
add
inc
pop
jae
in
int
in
cmovp
clc
jo
jmp
jnp
xlat
pop
dec
sub
aad
jecxz
faddp
dec
jp
icebp
cmc
ja
fidivrl
pop
or
sarb
mov
divb
xor
dec
adc
dec
push
flds
mov
xchg
or
or
sub
pop
mov
push
push
out
dec
sbb
xor
mov
adc
jge
test
pop
push
pop
inc
out
and
push
sti
xchg
or
pop
ret
mov
mov
mov
ljmp
daa
adc
ficomps
xor
add
iret
ss
and
push
idivl
or
cmpb
roll
jae
insb
pop
loop
orb
js
cmp
pushf
std
push
xchg
in
mov
and
jno
push
inc
addr16
lock
push
stos
mov
pop
xor
icebp
ss
sbb
mov
and
mov
pop
push
enter
mov
fsts
dec
ss
stos
xlat
cmp
or
inc
pop
xor
add
into
push
add
mov
mov
mov
add
js
imul
lock
cli
call
std
in
mov
xchg
and
adc
loope
cld
out
mov
mov
mov
rolb
mov
adc
push
outsl
or
or
scas
setno
xorb
cmp
push
ss
in
and
pusha
sarl
popf
dec
inc
sbb
clc
addb
or
stos
out
imul
out
mov
incb
dec
pop
lds
arpl
ret
aad
lds
rclb
xchg
inc
cmc
jl
sub
sub
xchg
push
mov
test
in
xor
in
ljmp
ja
iret
push
jae
out
xor
cmpsl
setb
test
xor
xchg
mov
fidivl
in
movsb
data16
es
adc
std
sub
mov
scas
jno
cmpsl
into
icebp
pop
inc
mov
fs
clc
jnp
mov
sbb
je
fsubl
and
add
and
out
shll
bnd
fisubl
push
addr16
das
addr16
fbld
in
mov
mul
inc
inc
dec
insl
jp
mov
lahf
add
nop
cwtl
mov
fildll
mov
movsb
mov
movsl
lcall
jl
or
sbbl
cmp
xor
scas
inc
aad
fmul
in
cmp
test
mov
incl
mov
xchg
cld
adc
lods
out
mulb
mov
mov
out
lds
aad
push
and
outsl
add
int3
dec
xchg
jb
push
movsb
movsl
jne
push
fdivrs
jp
stc
pop
xchg
divb
cmpsb
dec
cmc
and
mov
jnp
ret
leave
iret
mov
xor
hlt
into
fadd
inc
std
xchg
push
pop
fisttpl
scas
stos
adc
push
push
inc
adc
dec
in
test
hlt
lds
es
ljmp
xor
scas
push
push
fildll
jle
adc
lcall
mov
in
xor
and
in
cmc
outsl
andb
mov
jmp
clc
inc
aam
ljmp
popf
jns
outsb
mov
push
inc
mov
out
ljmp
int
dec
jb
xor
nop
inc
xor
repz
fnsave
dec
imulb
inc
adcl
rcrb
rorb
and
imul
xchg
outsb
cmp
sbb
dec
xor
mov
test
icebp
mov
xchg
inc
inc
ffree
scas
push
pop
fdivrl
scas
add
add
ljmp
lret
jmp
pusha
je
push
or
insl
cltd
insb
es
jl
dec
sbb
pop
cmpsb
mov
push
jns
ret
inc
daa
sbb
outsb
add
sarl
dec
mov
xchg
sahf
push
mov
mov
xchg
rcll
mov
inc
inc
and
sbb
divl
mov
dec
ljmp
cs
loopne
inc
mov
call
mov
stos
shl
xchg
jmp
cmc
lods
lret
xchg
pop
ljmp
and
push
sbb
stc
ret
adc
and
adc
test
add
jb
shr
test
push
adc
inc
ljmp
push
pushf
add
sti
dec
adc
addr16
dec
repnz
movsl
cmp
sub
adc
subb
dec
adc
rcrl
psubd
ficoms
cmpsb
dec
mov
jbe
pop
ffree
mov
xlat
aas
movsb
sbb
dec
cwtl
pop
dec
aad
xor
xor
repnz
mov
mov
in
inc
sbb
icebp
dec
aaa
xor
push
scas
js
outsb
cmp
outsb
imul
and
arpl
mov
fidivrl
sub
mov
xchg
decl
mov
fistl
lods
mov
flds
jb
bound
xor
ret
pop
loop
xchg
cmp
jmp
sti
inc
lret
jb
bound
xor
ret
pop
loop
xchg
cmp
jmp
sti
inc
lret
jb
bound
xor
ret
pop
loop
xchg
cmp
jmp
sti
inc
lret
jb
bound
xor
and
pop
xchg
pop
sbb
pop
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lret
xchg
push
iret
in
fdivrl
inc
add
add
add
add
or
add
sbb
sbb
data16
add
add
add
add
add
sbb
push
add
add
add
add
sub
add
add
add
dec
add
add
add
add
add
add
or
or
add
test
add
push
add
inc
add
add
add
add
add
jmp
add
add
add
arpl
xor
clc
add
add
push
add
lret
add
movl
arpl
int3
add
add
and
xor
fiaddl
fiaddl
push
add
sti
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
inc
add
add
add
add
add
in
fiaddl
fiaddl
add
movl
pop
add
add
add
add
add
add
push
add
jnp
cltd
add
push
test
cltd
add
add
add
add
add
mov
add
add
add
cmp
add
add
add
add
add
test
fadds
fiadds
mov
jge
inc
add
add
add
fadds
roll
jno
test
dec
add
add
add
add
or
pusha
add
add
sbb
mov
add
imul
push
add
add
popf
add
add
add
movb
add
repnz
add
add
add
add
in
push
add
fadds
pop
add
add
add
add
add
add
add
add
lcall
add
add
add
add
add
add
add
add
sub
add
inc
add
add
add
add
sbb
add
add
add
add
rolb
add
add
add
mov
push
imul
add
add
add
add
add
add
add
add
rolb
outsb
add
cwtl
add
sahf
add
add
add
add
add
add
fadds
jae
jnp
add
mov
das
add
push
jecxz
xchg
add
mov
add
add
add
dec
add
add
add
xchg
add
add
add
add
inc
add
add
popl
or
filds
add
outsb
add
add
add
add
add
add
add
add
push
outsl
add
insl
add
add
add
add
add
arpl
insl
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
fadds
fiaddl
fadds
mov
add
mov
leave
add
add
add
add
add
add
add
add
add
add
add
faddl
pop
add
pop
add
add
add
add
pusha
add
add
add
add
add
test
addl
add
add
add
add
adc
call
add
add
rolb
add
fiaddl
dec
push
enter
test
mov
cmp
faddl
inc
add
add
add
add
add
add
add
scas
pusha
sahf
mov
out
dec
lret
mov
out
into
mov
pop
jp
dec
adc
ljmp
in
scas
test
mov
daa
or
cmp
cwtl
mov
mov
jno
clc
mov
dec
xchg
mov
pop
je
mov
inc
repnz
daa
dec
cmp
sti
xchg
ja
js
rcl
push
in
mov
pop
ja
sbb
xor
scas
negb
xchg
outsl
pop
aaa
inc
daa
call
pop
push
mov
nop
jle
sti
leave
std
faddl
pop
js
jg
lret
xchg
test
push
arpl
insb
and
insl
xor
xchg
and
cmpsb
push
push
iret
cltd
sbb
pop
insb
or
mov
sar
cmp
or
dec
add
test
dec
pop
int
xchg
call
fcompl
inc
jecxz
push
aaa
jmp
jmp
sahf
cmp
lods
lods
xchg
jge
sub
xor
push
idivl
popa
fisubs
repz
mov
orl
inc
insl
stc
push
fistpl
cmpsb
imul
sbb
movsb
push
cmp
iret
sub
add
jnp
dec
mov
movsl
call
xor
test
cmpsl
scas
shl
sub
mov
loope
lret
std
mov
repz
scas
xchg
xchg
pop
movsl
shrl
testb
xchg
mov
and
popa
out
lret
sbb
int3
sahf
mov
xchg
imul
and
mov
cmp
imul
jnp
or
pop
cmpsl
xchg
mov
or
std
xchg
mov
add
sti
sarl
cmpsl
jo
andb
cmpsl
std
mov
xor
scas
icebp
sub
iret
and
dec
popf
cmp
imul
cmp
lods
sub
cmp
add
repz
daa
test
mov
out
xchg
ds
push
sti
xchg
jo
icebp
add
cmp
movsl
push
sahf
push
lods
mov
and
jae
fwait
sub
push
andb
jno
in
shl
cmp
pop
jo
aad
movl
inc
cmp
cwtl
push
inc
pop
xor
xchg
int
xchg
mov
cmp
lret
mov
in
rcll
aas
sbb
sti
sbb
aaa
push
xchg
sbb
in
mov
adc
pop
iret
push
lret
test
pop
and
adc
or
cs
xchg
and
dec
xlat
push
xchg
push
xchg
setbe
xor
std
pop
add
sbb
jg
ljmp
mov
outsb
fs
outsl
jecxz
jnp
lcall
pushf
or
sub
jecxz
fstpl
lea
mov
repz
int
jb
into
lret
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
