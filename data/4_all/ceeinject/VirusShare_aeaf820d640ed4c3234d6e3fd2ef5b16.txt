call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
stos
xchg
dec
xchg
mov
cmpsl
test
sahf
cli
out
and
inc
and
and
enter
addr16
xchg
testl
xchg
xchg
xchg
aaa
sbb
imul
push
inc
pop
ja
addr16
scas
adc
stos
out
outsl
std
addr16
sbb
dec
ss
pop
sbb
jo
or
shlb
push
adcl
push
int
dec
dec
xor
and
scas
jb
inc
mov
push
jmp
mov
div
cmpsl
dec
xor
or
sbb
call
mov
sbb
or
in
movl
mov
mov
repnz
and
dec
xor
xlat
dec
xlat
xchg
and
push
enter
imul
bound
or
dec
pop
rcrl
xor
ret
fisttps
mov
push
aaa
push
push
and
loop
push
jb
sub
bound
imulb
lahf
jg
insl
inc
enter
jg
cmpsl
inc
jne
popa
aam
notl
cmpsl
xlat
xrelease
cs
ds
dec
sub
insl
jae
xchg
xchg
xor
leave
aad
cmpsb
xchg
fwait
testb
xor
inc
dec
xor
jae
push
or
jg
add
enter
mov
and
pop
arpl
bound
push
cmp
jb
push
adc
rcll
movl
aaa
push
daa
daa
push
aaa
inc
pop
ja
addr16
testl
xchg
xchg
out
pop
ja
inc
aaa
push
daa
daa
push
aaa
inc
pop
ja
addr16
xor
pop
fcomps
cmp
clc
and
sti
pusha
das
mov
cmpsb
movsb
test
movsb
xor
cwtl
xchg
inc
jno
aaa
push
dec
mov
mov
and
mov
push
dec
pop
sub
mov
arpl
push
fwait
clc
jg
loop
push
int3
insb
mov
sbb
out
addr16
xor
and
jmp
push
add
jg
push
sbb
test
rcll
push
aad
call
mov
in
es
std
jnp
fsubl
sbbb
jge
cmp
in
mov
cmp
mov
cmpsb
div
fdivrs
fisttps
fadd
insl
cmp
mov
xor
push
ja
es
jns
mov
jno
cmp
cmp
or
stc
ret
xchg
sub
out
sbb
mov
push
je
xchg
dec
std
out
mov
data16
fsubl
xchg
repz
int3
sbb
mov
mov
jne
std
sbbl
sbb
int
push
movsl
xchg
dec
jnp
pop
jae
sbb
mov
mov
nop
pop
mov
aad
or
mov
mov
push
loop
mov
mov
push
pushf
cmp
sub
pop
rorb
or
jge
lret
mov
cltd
scas
sbb
push
inc
jg
fsts
outsl
push
mov
xor
mov
add
jne
sub
or
xor
xor
jns
dec
cmp
pop
sbb
mov
scas
push
dec
mov
sub
cmp
imul
call
stos
push
mov
mov
icebp
jns
mov
lret
pop
pop
ljmp
or
movsl
add
js
push
pop
pop
aaa
pop
jp
push
fwait
cwtl
incb
ljmp
jae
pop
mov
fildl
test
popa
ds
pop
test
xor
filds
in
push
int3
mov
fnsave
inc
into
cmp
aaa
sbb
lock
cmc
in
scas
sub
sub
sbb
scas
xchg
stc
sub
xchg
jg
rcl
inc
imul
mov
mov
jecxz
pushf
sub
arpl
data16
mov
xchg
sub
and
dec
psrlw
push
push
pop
push
xchg
lods
dec
adc
loope
xor
xchg
cmp
popf
cltd
ja
loope
repnz
cli
rcrb
loopne
ss
jns
xor
or
pop
mov
xchg
mov
int
fldcw
dec
outsl
enter
loopne
dec
popa
cmp
neg
cmpsb
adc
popa
mov
mov
pop
jg
testl
sub
lcall
mov
inc
fsts
cmpsl
pop
mov
mov
lock
out
mov
pop
dec
jnp
jle
sbb
icebp
fiaddl
push
and
pop
fldl
push
xchg
mov
pop
add
sahf
dec
pushf
sbb
pop
mov
stos
sbb
sbb
xchg
jne
pop
decl
lods
ss
fisttps
xchg
imul
call
imul
sti
sahf
lock
call
aaa
cmc
rcrl
adc
cld
cmp
repz
sbb
inc
inc
sbb
sub
mov
dec
xchg
cld
stos
frstor
ja
popa
inc
mov
mov
inc
mov
pop
lahf
or
xor
pop
pusha
push
inc
lret
sbb
cmpsl
mov
inc
sbb
jmp
fs
push
cli
mov
adc
popa
add
sbb
inc
arpl
daa
jl
rolb
mov
lahf
cmpsb
mov
roll
sbb
loopne
xchg
sbb
int
cmp
pop
xchg
movsb
xor
jmp
nop
movsl
inc
addb
repnz
dec
dec
fwait
repnz
sbb
les
jb
inc
out
arpl
lea
mov
xor
mov
sbb
xor
in
adc
mov
jbe,pn
and
or
pushf
jp
mov
ja
push
jp
xchg
push
lret
call
decl
decl
out
xchg
aas
jae
add
negb
push
lds
cli
push
mov
out
sub
mov
les
lods
in
outsl
lea
cltd
repnz
fisubl
imul
mov
xchg
mov
arpl
push
dec
hlt
addr16
ror
sbb
add
dec
xchg
xlat
push
shl
movsb
inc
adc
sub
mov
xchg
pushl
dec
pop
mov
nop
mov
xor
lea
comiss
push
mov
jmp
je
outsl
or
bound
xor
mov
jge
push
ret
call
sbb
push
push
jle
mov
xor
sbb
jmp
mov
mov
push
filds
mov
movsb
add
mov
scas
fsubs
sbb
push
adc
imul
leave
aad
lea
inc
aas
dec
jns
hlt
orb
xchg
out
sbb
adc
inc
sahf
dec
ss
jge
loop
adc
out
xor
pop
dec
rorb
inc
jecxz
dec
inc
fwait
and
cs
das
mov
aaa
fnstenv
jo
inc
add
lea
popf
sub
mov
pop
pop
mov
inc
in
test
push
push
dec
out
dec
sbb
jecxz
out
mov
notl
scas
out
test
pop
mov
stc
sti
mov
mov
loopne
cmc
push
sub
dec
inc
es
bound
addr16
sti
icebp
jmp
inc
mov
pop
shlb
sti
popa
insb
lret
lea
pop
sbb
outsl
xor
push
inc
int3
and
adc
mov
or
movsl
add
rcrl
nop
pop
adc
hlt
popl
lock
mov
cmp
adc
mov
push
test
leave
pop
int3
rcll
xor
lahf
aas
xchg
fcompl
out
dec
mov
addr16
mov
and
mov
or
mov
sub
mov
inc
add
push
fistpl
fildll
jae
jb
or
clc
xchg
int3
dec
push
push
push
call
xor
xor
stos
insb
add
push
shlb
jle
fnstenv
pushf
push
and
movsb
lods
push
sbb
shl
push
popa
xchg
cmpsl
imul
aas
sahf
xchg
lods
daa
mov
js
xchg
adcl
enter
or
in
push
mov
je
push
fistl
lds
frstor
test
outsl
pop
mov
dec
lcall
lods
cli
cs
add
fwait
out
aad
fadds
inc
stc
dec
sbb
mov
fwait
inc
adc
mov
std
mov
push
sbb
xchg
es
cmpsl
push
stos
cmp
and
stos
pop
lods
fnstenv
fsubl
inc
rcrl
ret
or
jmp
or
pop
mov
fwait
pop
and
jns
dec
bound
cmpsl
xchg
adc
push
sub
lods
fbstp
ror
sbb
or
icebp
mov
movsb
xchg
test
dec
or
ret
jge
pop
inc
and
mov
mov
mov
arpl
fs
nop
insb
ds
cmp
pop
jle
push
ror
mov
mov
jg
scas
cmpsl
dec
cmc
scas
js
jmp
adcl
pop
mov
popf
mov
loopne
dec
mov
in
xorl
mov
cs
sbb
adc
mov
scas
addr16
cmp
jo
mov
leave
xor
push
jg
inc
add
mov
push
adc
add
orb
nop
mov
inc
sbb
jge
inc
lods
push
shlb
adc
cmp
pop
mov
push
or
inc
cwtl
int
and
sbb
push
aas
push
pop
ret
sbbb
xor
cmp
fsubrs
test
sbb
mov
push
aas
dec
xchg
test
push
cmp
pusha
add
and
enter
jmp
or
xor
js
imul
lret
sub
pop
int
and
into
div
cmp
push
in
and
pop
xor
xor
adc
xchg
cmpsb
ret
loop
pop
test
in
es
es
mov
out
jne
fs
and
mov
dec
stos
rol
mov
dec
xorl
shlb
in
sbb
addr16
xchg
pushf
bound
mov
and
cmpb
xor
aas
and
jo
das
xchg
xchg
loopne
insb
outsl
movsb
cmp
fstps
and
mov
xchg
add
imul
or
ret
pop
xchg
adc
add
fdivs
test
mov
jnp
jo
lcall
mov
std
cmp
adcl
movsb
int3
and
cmc
notb
jle
push
mov
pop
xchg
ret
loopne
inc
xlat
inc
sti
pop
inc
inc
neg
push
into
xchg
sti
sahf
jl
or
mov
push
push
mov
mov
pop
cmp
popf
cmp
cmp
pop
and
sahf
xchg
movsb
cld
jo
das
dec
jnp
sub
adc
cmp
xchg
jnp
addr16
push
push
or
fisubrl
in
adc
add
aam
fildll
xlat
int
jp
bound
xchg
mov
sub
fldcw
lahf
sar
in
xor
mov
or
cmp
iret
enter
push
je
pop
movsb
movl
mov
lret
push
shrl
cltd
and
out
std
pop
ficompl
mov
mov
fildl
xchg
mov
sub
jl
xor
mov
mov
sub
nop
jmp
cmpsb
cmp
test
repnz
aas
and
jp
pop
arpl
adc
lret
aam
jmp
fsubs
or
or
lock
mov
sbbb
or
lods
dec
rcll
xlat
sbb
pop
idivb
push
add
xor
sarb
xchg
cmp
xchg
pop
imul
mov
xchg
leave
aam
cmp
not
clc
loope
inc
subb
dec
pop
std
xchg
test
sahf
loope
icebp
sub
mov
push
mov
shrl
cmp
add
jecxz
add
adc
push
repnz
bound
pushf
jb
cmp
adc
lahf
jae
cmc
xchg
mov
mov
insb
jmp
sub
pop
mov
push
push
outsb
mov
cmp
xchg
rcl
pop
push
sbb
and
insl
int
dec
jge
test
adc
add
loop
mov
mov
je
orl
mov
test
sbbl
arpl
mov
fnstsw
sub
mov
test
mov
mov
ljmp
les
xor
push
addb
lcall
push
dec
repz
clc
ljmp
xor
cmp
popf
or
in
lock
jo
inc
movsl
and
in
add
pmaxsw
push
push
outsl
pusha
lcall
jle
pshufw
mov
push
ret
cmpsl
fnstcw
into
mov
sub
pusha
addr16
push
in
xchg
jge
popf
loope
fbstp
clc
pop
loopne
push
jge
inc
mov
xor
add
lock
cmc
mov
sbb
in
into
stc
enterw
in
ja
aaa
pop
adc
lods
sub
push
mov
or
or
add
jecxz
stos
insl
test
es
leave
cld
mov
test
or
iret
sarb
add
sbb
incl
daa
mov
mov
mov
dec
dec
fidivrl
dec
jle
sarb
loop
stos
je
inc
xchg
push
inc
or
icebp
shll
lods
jp
hlt
sub
fdivs
daa
dec
rcrb
mov
pushf
lcall
inc
nop
mov
cmpsl
int3
ret
call
stos
mov
aad
mov
in
subl
or
jbe
xchg
cmp
pop
repnz
orl
push
jns
mov
imul
arpl
xchg
arpl
in
pushf
sti
cli
add
mov
xchg
push
xor
rclb
push
mov
fwait
mov
stos
pop
mov
pop
in
add
enter
loope
gs
cs
add
jp
xchg
mov
stos
inc
loopne
adc
jbe
mov
mov
lret
add
hlt
test
ljmp
pop
mov
jmp
mov
push
enter
mov
dec
adc
mov
cmp
mov
sub
stos
stos
jp
mov
idivl
dec
mov
iret
sub
lods
cmpsb
repz
movsl
and
std
sbb
fcomi
mov
xor
iret
pop
es
bound
xlat
rcll
pusha
data16
hlt
ss
out
aad
xchg
jb
or
popa
push
mov
add
std
mov
repz
mov
sbb
cmp
cwtl
push
arpl
outsb
pop
jne
xchg
jnp
jo
mov
out
stc
scas
jns
adc
or
nop
mov
pop
js
adc
sbb
push
add
adc
sbb
push
in
cmc
outsb
mov
ljmp
pop
push
inc
or
or
mov
pop
cmpsb
push
jmp
lret
xchg
sbb
and
das
stc
fimuls
sarl
sti
xor
loopne
push
int
push
xchg
popf
sahf
mov
adc
daa
scas
stos
fsubrl
cld
mov
bound
inc
mov
shll
popf
leave
cmp
inc
mov
std
or
sub
popa
cmp
test
xchg
or
aad
or
add
imul
jmp
loop
jns
xchg
pop
in
mov
pop
pop
inc
mov
movsb
sub
inc
js
bound
cltd
pop
out
mov
mov
popf
cmpsl
push
aam
test
cmpb
push
add
daa
loop
mulb
lret
movsb
popf
dec
mov
in
jo
fstpl
or
pushl
dec
outsb
not
mov
xchg
movsb
inc
in
dec
lret
mov
enter
jne
or
xchg
and
dec
or
cli
mov
or
xchg
test
divl
xchg
cld
cmpsb
mov
inc
ja
xor
xchg
push
inc
dec
xor
cmc
iret
xchg
addr16
lds
mov
and
bound
mov
and
adc
dec
add
lods
adc
xlat
aam
cmp
jns
aaa
xchg
int3
add
mov
and
mov
xchg
pushf
dec
imul
mov
psubq
fidivrl
and
xor
icebp
out
or
inc
fwait
xlat
and
arpl
mov
call
mov
sbb
imul
int3
pop
xchg
shl
cmpsl
jns
fsubl
xor
scas
and
testb
ret
pop
pop
or
cmpsb
pop
in
scas
sbb
cmp
or
inc
ret
mov
sbb
loope
xchg
xchg
mov
xchg
and
or
cwtl
push
iret
pop
mov
out
add
adc
loopne
adc
xor
mov
ljmp
or
sub
mov
sub
cltd
mov
or
aas
pop
adc
pop
cmp
cli
jnp
pushf
lods
test
jae
push
mov
cmc
out
pop
orb
mov
add
out
ret
sbb
adc
addr16
popa
stos
dec
push
loop
movl
cmp
andb
xchg
std
mov
jne
cmpsb
dec
inc
jnp
fdivl
aam
pop
addr16
loope
out
push
arpl
or
mov
fisttpll
stc
arpl
xchg
call
sbb
addr16
dec
add
je
es
movsl
add
fcomps
stos
mov
add
jae
mov
jp
out
cmp
aam
pushf
and
inc
inc
push
xlat
mov
lea
loop
je
push
or
mov
inc
lods
jl
aaa
adc
mov
and
pop
andb
pop
xor
outsb
rclb
cs
jg
xor
dec
mov
mov
gs
jg
cmpsb
pushf
test
lahf
movl
mov
mov
sarb
sbb
mov
addr16
jecxz
imull
pop
sub
fstpl
das
add
or
ret
xchg
dec
and
inc
push
test
jecxz
push
mov
arpl
sub
mov
loopne
mov
adc
inc
enter
pop
mov
or
and
jge
adc
and
icebp
add
fsubs
add
sbb
xor
repz
adc
movaps
dec
aas
jl
mov
push
out
ds
dec
popf
cmp
mov
sbb
pop
rcrl
lods
inc
std
ljmp
inc
in
cwtl
push
or
pop
lret
mov
sbb
popl
movsl
sub
ds
cld
orb
int3
movsl
sub
mov
neg
dec
aam
pop
rcrb
mov
in
inc
inc
adc
in
ret
std
mov
sub
pop
cmp
dec
push
jmp
xor
xchg
movsl
mov
mov
inc
ficoml
cmp
xchg
out
adc
mov
xchg
inc
mov
mov
stos
imul
das
stos
sarl
out
dec
leave
std
and
dec
aaa
and
add
fisubs
faddl
mov
dec
mov
mov
xor
fdivrl
aam
pop
mov
rolb
pop
add
cmp
cmp
add
lahf
imul
pop
daa
arpl
in
mov
loopne
adc
xchg
lcall
inc
pop
iret
jecxz
jnp
dec
xchg
mov
mov
mov
push
sbb
aad
sub
scas
mov
sti
ss
xlat
cs
enter
outsl
sub
fstl
mov
xlat
ljmp
mov
scas
lock
adc
cmp
hlt
or
pop
adc
mov
out
in
pop
subl
mov
movsl
btc
dec
loope
mov
dec
loop
hlt
mov
sub
int3
icebp
push
lahf
repnz
sti
idivb
aad
lss
cwtl
and
rclb
into
dec
aam
mov
mov
ret
cwtl
js
stos
and
lods
test
jbe
or
push
minps
xchg
mov
or
mov
inc
xorl
mov
sbb
add
jecxz
mov
jnp
mov
aaa
mov
out
mov
sbb
lods
ret
fcomps
ret
push
xor
adc
ror
mov
lcall
dec
loope
lds
jne
push
xchg
mov
push
inc
sub
inc
sbb
fwait
jmp
pop
sub
add
add
push
push
cmp
scas
pop
int3
inc
lea
push
in
ret
cmpsb
je
push
add
pop
or
out
add
imul
sub
mov
lds
rorl
inc
je
in
mov
sub
fstpl
mov
xchg
call
jne
lds
lret
mov
xor
jp
sbb
inc
sbb
lret
push
push
sub
jo
inc
leave
sbb
dec
das
jecxz
lcall
mov
int3
loope
push
jno
data16
mov
subb
dec
ja
movsl
xor
nop
xchg
mov
pop
mov
test
jle
dec
xor
test
push
lret
arpl
ja
adc
and
stos
jae
cmpsb
and
pusha
sub
imul
mov
mov
daa
cmp
aaa
or
out
hlt
and
pop
jno
fs
out
nop
or
adc
imul
and
pop
in
pop
cmp
cmp
ljmp
in
add
out
icebp
mov
xor
jb
mov
pop
repz
loopne
or
cmp
push
stos
std
inc
sahf
add
mov
xor
clc
push
in
movb
or
sahf
dec
lret
es
mov
mov
mov
pop
pop
pop
cmp
mov
mov
sbb
inc
jg
mov
cmp
imull
and
mov
fs
je
imul
mov
adc
dec
inc
sub
pop
insl
popa
loopne
lret
inc
les
dec
repnz
aam
stos
popf
pop
inc
aam
or
sbb
repz
std
xchg
repz
addb
xchg
ret
jecxz
idivb
sbb
iret
and
pushf
add
push
mov
lahf
cmp
or
xor
adc
test
sar
repz
push
mov
lds
mov
fimuls
lock
ljmp
test
int3
lock
pusha
adc
sbb
mov
push
mov
add
inc
fdivl
mov
jae
cmpsb
mov
movsl
push
mov
sub
sbb
jne
enter
dec
outsb
jmp
sbb
add
add
rclb
movsl
jg
push
ficompl
mov
in
mov
pop
inc
sub
add
dec
das
out
stos
cltd
jmp
or
jle
ljmp
cmpsl
xlat
mov
xchg
xchg
out
pop
ja
inc
aaa
push
daa
daa
push
aaa
inc
pop
ja
addr16
testl
xchg
xchg
out
pop
ja
inc
aaa
push
daa
daa
push
aaa
inc
pop
ja
addr16
hlt
xchg
mov
cmpsl
cmpsb
xlat
mov
xchg
xchg
out
pop
ja
dec
aaa
push
and
push
cs
add
arpl
xchg
fildl
cmpsl
xlat
cmpsl
movl
aaa
push
push
push
fistpll
sbb
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
das
jno
popa
push
push
inc
inc
sub
inc
xor
mov
in
mov
in
xchg
xchg
test
gs
inc
inc
xor
adc
loope
roll
shll
test
dec
push
pop
inc
sub
cmp
or
icebp
out
ret
mov
lcall
repnz
cmp
inc
cmp
lcall
sbb
sub
popf
sbb
jmp
repnz
movsb
in
int3
or
enter
repnz
clc
jno
insb
sbb
xchg
cmp
pop
loop
push
mull
cmp
aas
adc
cmp
jns
push
adc
add
push
aad
cltd
and
mov
pop
aad
insb
adcb
xor
gs
adc
lods
shrb
lds
loop
mov
xchg
hlt
gs
sbb
add
sbb
inc
or
sbb
jne
mov
jne
test
push
push
inc
and
adc
in
icebp
std
loope
rcr
shrl
pushf
call
xor
inc
push
push
dec
dec
pop
push
push
loopne
mov
mov
repnz
call
gs
xor
inc
inc
pop
dec
insl
jns
inc
idivl
mov
rcr
mov
sbb
push
sub
and
dec
pop
and
add
icebp
in
aad
mov
mov
jne
gs
push
push
inc
inc
xor
adc
loope
rol
shll
test
or
sub
into
stos
sahf
pop
inc
fistpl
xchg
jp
xchg
repnz
or
and
inc
lods
test
es
xchg
and
subb
and
add
push
pop
sbb
adc
shlb
push
cmp
rolb
xchg
std
ffree
inc
sub
lock
fs
xor
dec
shrl
aad
xchg
pop
fisubrl
pop
mov
lock
xchg
dec
push
in
mov
jl
inc
cmp
negb
scas
push
lahf
add
sbb
jo
adc
pop
cmp
push
xor
addl
in
mov
mov
popa
movsb
mov
inc
mov
mov
call
andl
out
mov
lret
test
rolb
dec
push
push
cmpsl
testl
mov
sarl
in
pop
sbb
orl
scas
xor
and
adc
cs
pop
mov
push
mov
mov
xor
js
pop
mov
loop
fdivrs
clc
xchg
or
lea
push
mov
mov
enter
inc
sbb
int
cmc
xchg
pop
fcoms
xor
mov
xchg
adc
sahf
shll
push
lcall
enter
out
call
outsb
arpl
repnz
je
dec
sub
sbb
xor
ljmp
pop
orl
aad
rolb
cmc
xchg
nop
push
pusha
mov
scas
mov
movsl
mov
inc
mov
push
jns
add
mov
shrb
loope
jae
cld
lcall
fdivs
jp
push
xchg
pop
mov
sub
sbb
mov
xchg
xchg
into
cld
fistpll
fadd
or
xchg
dec
mov
inc
out
std
mov
ret
cmp
jne
inc
loopne
nop
mov
das
inc
insl
cmc
adc
stos
push
and
cmp
jg
or
aas
out
fs
int
push
mov
push
lods
jl
inc
testb
mov
cmp
inc
pop
mov
into
iret
xchg
scas
cli
xchg
fsubs
or
xchg
jg
mov
mov
xchg
cmp
or
jns
lahf
aam
ja
sbb
mov
mov
jle
clc
outsb
lea
bound
jae
sub
shrl
scas
cmpsb
pop
subl
shll
cmp
pop
sbb
and
xchg
add
fsubs
addr16
push
or
sbb
enter
xchg
add
mov
outsl
hlt
jle
sbb
push
das
sbb
mov
mov
insl
push
mov
add
mov
ljmp
xchg
mov
jl
or
mov
jno
xlat
out
push
jmp
push
loopne
popa
stos
add
jp
test
push
dec
js
movsl
dec
mov
adc
fisubrl
inc
notb
jmp
stc
xchg
xchg
pop
or
cmp
jl
es
pop
pop
pop
xor
lret
data16
pop
push
in
mov
push
sbb
push
das
ret
lahf
pop
pop
sub
stos
arpl
mov
rorl
dec
icebp
rcrl
xor
bound
sub
cmp
mov
inc
outsb
xor
test
dec
and
scas
addb
mov
and
cmpb
mov
bound
pop
lret
lods
ficompl
rcl
ret
mov
pop
in
loopne
pop
divb
jo
and
notb
mov
test
aam
push
loop
lock
call
adc
iret
outsl
mov
cwtl
imul
mov
mov
mov
jp
push
je
mov
mov
shl
add
in
int
insb
xor
imul
lret
imul
call
xor
mov
pushf
mov
imul
lcall
mov
or
push
mov
mov
sbb
mov
insl
fdivrl
dec
rorb
pop
or
mov
es
push
jle
int
repz
sbb
cltd
adc
or
cwtl
rolb
in
xchg
dec
inc
clc
inc
ret
pushl
push
and
sahf
pop
sub
xor
mov
lods
test
popf
xor
ret
pushf
and
fcomp
xor
subl
call
cmp
out
xchg
loop
aam
filds
adc
aas
insb
adc
inc
dec
pushf
mov
adc
aad
cmpsl
popa
cli
fcompl
adc
pop
push
fnstcw
into
lea
push
js
test
fldl
xchg
out
xor
and
into
ja
aaa
jns
xchg
sahf
jp
inc
pop
mov
jno
sub
add
push
fmul
sub
stos
add
and
xchg
cmpsl
test
xchg
cmpsb
imul
or
pop
popf
jb
add
xchg
cwtl
subb
inc
mov
and
pop
dec
scas
stc
mov
scas
lahf
lods
mov
repnz
das
test
mov
fiadds
mov
sub
cmp
mov
mov
sbb
in
mov
mov
add
jp
leave
sub
xchg
lret
sarl
push
xchg
or
call
outsb
scas
jbe
sbb
inc
push
xchg
xor
adc
in
cmpsb
dec
dec
addr16
push
pop
test
stc
add
cs
mov
sahf
pop
xor
scas
ret
inc
mov
inc
mov
or
push
xor
lock
push
pop
stos
ja
loop
push
cs
jns
in
adc
shll
out
int3
add
arpl
xor
and
inc
xchg
add
mov
or
push
sbb
das
pop
sbb
sahf
push
sbb
xchg
movsl
sub
ss
xor
mov
sbb
cmp
push
movsb
mov
inc
adcl
or
jg
adc
andb
lods
stc
icebp
rcr
pop
clc
xchg
sahf
mov
sbb
xchg
jl
fcmovbe
sti
stos
je
cld
and
fbld
fwait
mov
je
lcall
andl
test
sbb
mov
out
jp
popf
jnp
push
bound
cltd
and
stos
mov
adc
aas
fiadds
jg
mov
divl
dec
lcall
aaa
std
iret
adc
jl
dec
xor
pop
fmul
ljmp
push
jecxz
or
pop
roll
test
mov
mov
inc
outsl
lds
lcall
mov
jae
scas
xchg
shlb
cld
ret
mov
cld
dec
jg
cmp
xchg
mov
sub
ret
daa
pop
and
jne
shll
hlt
pop
vmread
stos
pop
test
enter
js
incl
call
arpl
or
mov
stos
or
pop
scas
xchg
pushl
js
inc
mov
xor
add
xlat
pop
imul
or
fldl
pop
push
shlb
pop
sub
cmp
inc
mov
imul
add
out
adc
fmul
xchg
insl
xor
mov
xchg
fsubl
mov
jo
jb
js
and
lcall
es
mov
inc
pop
xor
mov
push
cld
leave
aas
mov
in
xor
out
xchg
insb
out
js
scas
xor
sub
gs
mov
data16
mov
cld
hlt
sbb
mov
adc
cmc
jb
mov
loope
rolb
jo
mov
idivl
push
fbld
cmpsb
popf
fs
fwait
enter
stos
xor
ficoml
or
push
lcall
cltd
sub
leave
add
or
sbb
lahf
or
fdivrs
push
arpl
loop
sar
adc
sbb
data16
dec
adc
dec
cmc
and
sbb
cmp
jnp
push
addb
lock
sub
sbb
int3
dec
xor
sub
repz
ja
bound
outsb
xlat
pop
push
in
fdiv
sbb
lods
cmp
mov
stc
sbb
push
out
pop
loop
incb
subl
mov
in
adc
sarl
ror
bound
lahf
push
icebp
fisttpll
mov
cmpb
lods
cmp
push
inc
mov
or
inc
mov
push
inc
test
jns
call
jge
adc
movsb
insb
aam
icebp
cmp
shr
and
dec
or
xor
mov
dec
xchg
in
cmp
mov
xor
xchg
nop
arpl
cmp
xchg
test
stos
cmp
lahf
mov
imul
data16
sar
test
test
mov
push
push
mov
insl
mov
fcompl
pop
jne
pop
out
sub
fcompl
ja
enter
cld
shr
fucomi
adc
and
scas
in
lea
push
inc
nop
add
cmp
stos
add
jns
fistpl
rclb
fsubrs
iret
mov
in
aaa
cmp
jp
mov
subl
out
out
sbb
xchg
fwait
jmp
mov
loop
or
sbb
inc
xor
push
inc
dec
xchg
andl
mov
lock
inc
adc
push
imul
inc
sarb
das
xchg
push
icebp
int
mul
jno
incb
and
push
not
shll
scas
ja
xorl
les
cmp
pop
enter
lahf
scas
add
fsubr
dec
cs
scas
push
push
mov
or
sar
stos
and
pusha
addl
xor
shrb
das
push
add
leave
ljmp
xchg
lock
mov
imul
sbb
addr16
push
in
test
sub
movsb
or
in
or
leave
ljmp
sub
out
fidivrs
sub
scas
jecxz
push
fsts
mov
aaa
mov
push
std
insl
idivl
das
dec
mov
mov
xor
adc
lea
or
negl
dec
adc
xchg
scas
cmp
push
push
dec
adc
out
aam
sub
lods
jl
scas
leave
pop
push
loopne
add
add
inc
fcomip
shlb
push
jae
adc
addr16
popa
mov
in
pop
sub
xchg
xor
mov
jg
sub
bnd
xchg
mov
push
add
mov
mov
or
outsl
add
andb
jp
aaa
cmpsb
loopne
lcall
push
sbb
or
mov
icebp
xchg
cmp
xor
push
data16
inc
lock
out
icebp
jne
rcll
shrl
lret
mov
and
jno
adc
cld
out
in
lods
repnz
cwtl
pop
jmp
aas
out
or
sti
popf
repz
cld
push
sti
pop
push
fnstcw
andb
adc
pop
fdivs
sub
jb
sub
dec
mov
jne
ret
sbb
lahf
push
enter
xchg
sti
outsl
aam
add
in
icebp
repnz
inc
sub
pop
das
std
sub
add
imulb
pop
rol
pop
xor
les
push
sub
stc
xor
out
mov
imul
push
push
jb
inc
test
push
mov
dec
push
adcl
sub
mov
jb
mov
inc
ja
sbbb
sbb
iret
mov
aam
or
mov
cmp
setg
mov
in
or
push
out
call
push
sub
sub
ds
mov
ljmp
sahf
repnz
jo
aaa
xor
out
enter
xchg
add
adc
mov
and
in
icebp
jp
jl
enter
push
or
mov
jmp
fildl
mov
mov
shll
ret
sub
xor
add
push
pushf
popl
xchg
and
jle
push
bound
movsb
lods
add
mov
jle
xorl
cmp
test
xchg
pushl
sub
cmp
jns
pop
inc
imul
popf
push
push
test
push
adc
gs
cmp
ret
mov
jle
cld
sub
add
nop
rol
imul
repz
test
into
fadds
mov
stos
inc
addb
int3
outsl
jmp
adc
mov
adc
mov
push
push
faddp
loopne
add
fldpi
inc
pop
or
xor
notl
cmc
jnp
or
xchg
es
les
cmpsb
sub
jl
cli
mov
mov
shrb
jae
into
rorl
idivl
mov
mov
inc
leave
fisubrl
out
gs
inc
sub
push
xchg
out
push
movl
pop
inc
sub
sub
imul
inc
jl
enter
mov
rorl
lret
mov
mov
mov
imul
repnz
and
push
int
lahf
adcb
jne
pop
sub
push
mov
jge
icebp
nop
ret
ror
pop
mov
mov
fiadds
lea
scas
push
mov
mov
dec
cmp
and
dec
mov
push
pop
inc
adc
sub
mov
cltd
insb
stos
dec
jmp
ret
xchg
add
dec
ficomps
mov
dec
xor
pop
data16
push
mov
dec
fcoms
out
fidivl
nop
stos
leave
or
shl
mov
adc
pop
mov
shr
sbb
dec
fmuls
popf
icebp
fisttpl
iret
xor
push
fs
aad
pop
fdivl
pop
add
pop
jl
push
inc
js
cmp
ret
addr16
into
out
add
js
out
or
pop
cmp
jl
pop
int
pop
mov
mov
fwait
inc
cmp
xor
leave
jmp
pop
xchg
cwtl
shlb
repz
mov
lret
push
cmp
and
push
ret
adc
jne
ljmp
mov
nop
adc
fs
and
adc
inc
xor
hlt
rolb
cli
inc
jp
jne
inc
iret
push
mov
daa
fildl
movsl
jb
and
out
cwtl
mov
imul
mov
and
push
rclb
xchg
lahf
sti
mov
filds
hlt
push
jb
pop
lock
add
mov
jl
les
cs
negl
inc
add
xor
add
mov
cld
insb
out
fcomps
xchg
and
movsb
sub
inc
dec
add
jl
in
xor
add
mov
in
pusha
call
out
test
out
mov
lods
mov
xchg
mov
dec
in
inc
xchg
push
mov
sub
rol
or
xchg
imull
pop
pop
mov
mov
jge
jge
mov
call
into
jbe
xchg
movsb
fsubl
cli
inc
jmp
cmc
add
int3
pop
mov
in
dec
adc
and
xchg
repnz
dec
ret
sbb
lock
dec
push
xchg
push
pop
mov
xor
in
xlat
iret
sub
inc
sub
cli
pop
bound
add
pop
lea
sbb
ja
mov
mull
mov
jmp
popf
fmul
or
aad
test
loopne
push
incl
outsl
pop
add
cmp
out
in
pop
nop
ljmp
and
mov
ret
xor
mov
mov
das
mov
push
fwait
leave
inc
xor
pop
jnp
jecxz
cmp
xchg
jae
cmc
daa
adc
push
push
mov
cmp
and
leave
lods
adc
add
clc
roll
fwait
shl
adc
enter
enter
rolb
push
icebp
mov
mov
imul
scas
and
imul
cmpsb
sub
movsl
fdivs
aaa
jecxz
pop
xchg
call
adc
aam
fiaddl
dec
xchg
test
or
add
popa
insl
out
lahf
dec
inc
lcall
cmp
out
cmp
inc
push
push
data16
insb
leave
ret
dec
push
imul
xor
pop
int
mov
mov
out
scas
out
shll
pop
int3
xorb
pop
mov
in
push
in
rcll
xor
pop
lret
pcmpeqb
add
mov
pop
data16
mov
cmp
mov
in
and
push
cltd
inc
cmp
sub
add
jge
ds
mov
mov
mov
andb
push
movsb
cmp
lods
mov
arpl
fs
push
xchg
mov
cltd
mov
lods
aaa
push
dec
addr16
cli
mov
xchg
mov
lods
pop
push
xchg
pop
push
xchg
xchg
stc
les
outsb
xor
adc
ss
mov
jl
scas
or
mov
or
xchg
or
adc
and
loope
or
sub
mov
mov
add
xchg
xor
lds
int
cli
or
es
ss
js
mov
dec
jnp
test
mov
or
push
popa
pushf
pop
ljmp
mov
or
stos
aam
clc
call
jge
sbb
lret
mov
xchg
xor
mov
outsb
sub
cmp
adc
add
or
insb
dec
push
jae
outsb
and
push
andl
mov
addr16
mov
add
loop
in
pop
in
pusha
cmp
in
xchg
sub
xlat
out
mov
inc
xchg
sub
lods
in
mov
sbb
adc
mov
and
sbb
outsl
jnp
add
jne
push
lods
sahf
inc
sub
daa
mov
push
arpl
sub
popa
jae
fldt
loope
outsb
stc
push
adcb
jl
jp
push
jo
xor
adc
lds
scas
fiaddl
and
add
pop
and
stos
add
in
pop
cmpsl
daa
pop
fdivl
cmpsb
pusha
les
insl
lahf
mov
clc
ja
adc
inc
out
jmp
aam
push
ljmp
vpcmpeqb
insl
fildl
cmp
test
stc
pop
rorb
test
pusha
jns
mov
popf
pushf
pusha
mov
mov
lahf
shrb
xchg
lahf
dec
add
insl
arpl
dec
cmp
xchg
cmp
dec
mov
ds
mov
mov
xchg
dec
test
loop
mov
cld
adcl
jbe
icebp
dec
inc
lock
adc
jb
je
lds
inc
ss
int3
cmp
mov
pushf
xor
in
scas
shlb
xor
and
mov
push
xor
gs
adc
add
loop
sbb
test
scas
dec
sub
pop
lcall
xor
adc
mov
sub
pop
aas
ds
pop
push
bound
aas
ret
cld
test
adcl
leave
rorb
inc
pop
fcomip
mov
test
enter
mov
faddp
mov
jmp
and
pop
cltd
xor
or
cwtl
lret
shll
dec
int3
pop
pop
lods
pushf
push
iret
pop
call
ljmp
mov
popa
and
je
bound
mov
fcoms
push
sub
hlt
das
out
out
dec
xor
imul
sbb
push
mov
inc
adc
adc
testl
out
and
add
mov
imulb
xlat
pop
mul
sbb
movsb
fists
stos
mov
sbb
mov
int
pop
mov
or
add
std
pop
mov
pop
jge
cmc
jle
mov
ja
jl
stos
lea
outsl
fmul
lods
nop
icebp
cmpb
fs
rolb
sub
lds
ss
in
jg
and
js
xlat
les
dec
loopne
scas
mov
xchg
ficompl
jo
push
pop
push
pop
jo
add
cmp
arpl
xor
sub
movsl
test
dec
movsl
jae
mov
sbb
jns
pop
jge
inc
scas
xchg
or
push
sbb
stc
jle
sub
lods
sbb
int3
lds
xchg
jle
mov
dec
xchg
push
les
test
cmovp
in
ja
inc
je
dec
mov
sub
bound
xchg
loopne
sbb
loopne
loopnew
ret
mov
and
adc
jae
lret
pop
cmp
sbb
inc
daa
sub
sbb
xlat
cli
xchg
adc
test
mov
es
mov
test
xor
clc
pop
pop
mov
sbb
dec
aad
adc
repnz
xor
jne
cmpsl
mov
and
inc
outsl
in
pop
add
fs
packsswb
add
repz
popf
cmp
add
sub
inc
ss
sub
push
xchg
inc
es
in
mov
daa
sbb
int3
push
in
cmp
sbb
push
inc
inc
xor
adc
loope
rol
shll
test
push
push
inc
inc
xor
adc
loope
rol
shll
test
push
push
inc
inc
xor
adc
loope
rol
shll
mov
inc
jno
popa
arpl
inc
xor
adc
dec
jg
lds
push
jp
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
rol
mul
out
cwtl
aad
call
bnd
mov
inc
inc
push
jbe
data16
add
push
and
xor
rol
mul
out
xchg
addl
push
add
jno
add
adc
and
xor
rol
mul
out
xchg
addl
or
jle
gs
inc
dec
xor
test
cmp
pop
pushf
add
popa
xor
leave
mov
leave
jp
add
imul
jns
outsb
mov
cld
push
jo
rcll
aaa
and
int
aam
pop
ds
outsb
popf
enter
lret
cmpsb
dec
xor
sub
mov
mov
and
out
xchg
ds
rolb
adcb
push
jb
inc
sti
lahf
inc
mov
push
outsb
inc
fbld
sub
pushf
aaa
fimuls
pop
cmpsl
out
add
push
popfw
out
inc
fwait
leave
add
and
popa
sub
mov
push
test
inc
xchg
dec
push
xor
mov
and
incb
in
xor
xor
loope
icebp
xchg
addl
push
jbe
data16
add
adc
and
ja
lods
scas
add
out
iret
rcl
out
pop
sub
or
jae
outsl
push
aad
mov
cmpsb
loope
cmpsb
shl
ljmp
add
cmp
jae
push
jle
push
es
mov
xchg
out
xchg
in
xchg
push
inc
inc
push
jbe
data16
add
adc
and
xor
rol
mul
out
xchg
addl
push
jbe
data16
add
adc
and
xor
shll
adc
and
xchg
idivb
xchg
in
xor
lahf
das
mov
not
mov
push
jo
cwtl
xchg
mov
fisttpll
sub
mov
popa
add
mov
pop
mov
lods
addr16
and
inc
jg
xor
and
push
cmp
jmp
xchg
ljmp
pop
test
data16
jns
add
in
push
dec
adcl
push
cmp
scas
inc
inc
mov
repnz
mov
jmp
and
rcr
xchg
stos
xor
int
mov
xchg
daa
test
daa
out
bswap
pop
fldenv
ds
hlt
add
mov
or
mov
cmpsb
inc
scas
ficoms
add
adc
jae
nop
and
test
mov
lahf
mov
shrl
out
insl
les
xchg
jno
dec
xchg
add
repz
add
mov
pop
stc
mov
fs
out
lahf
repnz
loopne
jbe
push
ljmp
test
add
cmpsb
or
imul
mov
push
sub
stos
mov
les
pop
sub
sub
mov
sbb
hlt
das
into
sbb
xchg
lahf
ret
dec
mov
iret
xlat
fldenv
or
int
cmp
test
rcll
aaa
test
pop
js
inc
aad
dec
adc
add
ret
in
dec
mov
and
xor
push
push
lds
xchg
mov
stos
mov
je
xchg
mov
scas
dec
filds
mov
lahf
pop
mov
test
or
in
inc
mov
jns
iret
aad
sub
mov
js
je
sub
or
dec
push
or
negl
arpl
jg
xor
pop
and
or
mov
icebp
rcl
mov
loop
jmp
fistpll
jo
addr16
dec
ficoml
or
xchg
push
or
pushl
pop
popa
cmpsl
ret
cmp
sub
jb
test
into
das
inc
scas
mov
shlb
jb
xor
sub
hlt
pop
negl
or
sub
jns
pushf
jp
roll
sbb
out
je
mov
inc
push
and
stos
aas
std
jp
stos
xchg
xor
dec
fcomip
ja
test
mov
xchg
inc
lods
daa
sub
in
or
jge
in
add
test
repz
lds
and
dec
mov
xchg
cmp
inc
push
add
jne
xor
jl
cmp
fcompl
pop
sti
push
jge
push
cmp
mov
xor
mov
dec
xchg
jl
dec
mov
jb
sbb
add
xor
sub
lcall
repz
xor
cmc
imul
jl
inc
adc
and
adc
jbe
mov
test
mov
jge
out
inc
and
fisttpll
pop
jae
pop
pop
sub
sbb
lods
aas
stos
dec
popf
mov
push
aaa
inc
pop
jb
pop
mov
stos
fidivrl
xchg
add
jle
popw
iret
mov
popf
xchg
add
fdivs
pop
inc
or
xor
sbb
jae
add
jge
add
iret
sbb
and
pop
rorb
lcall
cld
sbb
add
jo
mov
sbb
fsts
or
xchg
enter
repz
dec
stos
or
push
mov
fistps
cmp
or
add
push
jmp
or
adcb
daa
xchg
xor
jb
aaa
xor
xchg
stc
lods
pop
dec
fmuls
test
push
mov
mov
outsl
cmp
dec
and
xor
sbb
enter
xchg
dec
movsb
fdivrl
stos
out
jae
cmp
mov
call
imul
loope
inc
xlat
pushl
mov
dec
clc
xchg
adc
fwait
rcll
jmp
hlt
aaa
push
xor
mov
add
fidivl
cmp
lahf
adc
jg
clc
jae
sub
nop
mov
out
xor
inc
sub
call
mov
xchg
cmpsb
sbb
adc
or
pop
or
mov
add
jno
xchg
push
aas
mov
xchg
and
inc
mov
sub
repz
scas
mov
jno
sub
flds
pop
incb
les
mov
lds
lock
xchg
inc
mov
fildll
push
inc
inc
sar
nop
pop
into
test
mov
dec
nop
sbb
lds
scas
out
pop
insl
pop
aad
dec
outsb
mov
int
pop
int3
scas
adc
lret
adcb
sub
sahf
push
orb
in
fistl
insb
dec
mov
xchg
pop
jb
jno
dec
fistl
test
in
adc
sub
xchg
shrd
sahf
sti
in
mov
dec
cmp
pop
cmpsb
js
dec
jno
mov
mov
xchg
push
sub
mov
adc
fcoml
repnz
xor
popf
ret
fwait
and
leave
mov
push
cli
add
mov
or
mov
cmp
inc
inc
push
stc
xchg
xchg
pop
xor
mov
and
push
imul
shrl
mov
sub
ret
jp
aas
data16
and
aas
or
or
jo
pop
pop
clc
pop
ret
das
fdivl
dec
add
mov
lret
adcl
imul
pop
js
loopne
ret
mov
adcl
inc
add
imul
inc
cmpsb
and
pop
jge
insl
mov
mov
stc
sahf
push
sub
bnd
aaa
mov
orb
je
popa
in
rorb
cmpl
add
push
bound
hlt
test
sbb
sti
iret
rorl
in
xchg
aam
push
xchg
pushf
sbb
mov
pop
mov
pop
sarl
insl
rcr
pop
ja
push
test
and
adc
adc
cld
pop
int
out
in
les
jb
fists
sahf
sbb
or
xor
or
or
push
call
cmp
xlat
hlt
fadd
cmp
adc
rcll
push
jle
mov
cmp
aam
mov
push
sub
das
sbbb
sarb
cs
push
outsl
mov
xchg
mov
leave
jmp
dec
movsb
cmc
ja
sub
or
xor
mov
imulb
fiadds
mov
add
mov
je
test
jbe
fwait
lret
mov
and
mov
sub
fstpl
push
pop
and
mov
addr16
fsts
mov
add
sahf
push
aad
dec
inc
out
mov
es
shlb
lret
push
cltd
inc
pop
mov
jg
popa
inc
idivb
mov
in
jns
push
mov
test
mov
pop
imul
orl
dec
dec
int
nop
ret
dec
sbb
mov
out
mov
fldt
stc
mov
xchg
or
aaa
or
cld
push
fisttpl
aas
cltd
sbb
adc
in
dec
imul
fdivrp
or
jmp
je
mov
and
fwait
xchg
push
ljmp
in
sub
cwtl
push
cmp
ljmp
inc
lods
mov
in
scas
dec
cmpsl
lds
in
push
sbb
cmp
or
cmp
cs
mov
cs
xchg
or
pop
dec
xchg
shl
shll
mov
jg
or
adc
push
sbb
not
call
xchg
jle
add
add
push
jg
pop
arpl
jnp
cmp
in
xor
sarb
fwait
in
sub
roll
and
pop
fwait
pop
fnstenv
mov
lahf
clc
fidivs
in
adc
mov
mov
stc
pop
push
xchg
jmp
loop
fs
jmp
repz
or
cmp
rcr
cmp
inc
cmp
push
jbe
jg
scas
mov
rorl
bound
iret
movsb
stos
inc
xchg
outsb
dec
shlb
dec
incb
ljmp
pop
push
push
pop
jnp
and
das
sbb
lret
xlat
shl
push
sbb
mov
dec
es
loop
ret
repz
add
fwait
xchg
popf
and
cmp
testl
or
or
int
test
dec
out
mov
cmp
mov
icebp
add
jne
dec
dec
fdivl
jl
xchg
repnz
rclb
xchg
test
and
pop
lods
pushf
std
mov
lret
mov
cmp
dec
jno
jl
or
add
clc
add
scas
or
in
sub
nop
push
cmpsl
std
scas
cmp
lods
inc
call
mov
je
out
dec
xchg
test
cli
fdivr
loope
jnp
push
cli
fisubrl
sub
popa
or
fstl
mov
or
je
xchg
mov
pop
jmp
push
sbb
sub
mov
pop
arpl
pop
jge
mov
repz
mov
notl
jp
std
dec
fs
orl
out
mov
adc
inc
mov
cmc
lahf
pop
pop
mov
roll
sub
pop
lcall
std
into
jmp
cmp
xlat
out
pop
aad
jnp
inc
std
fdivr
rclb
pop
sbb
mov
scas
sahf
push
push
mov
and
subb
call
jmp
test
jne
mov
jo
push
sub
lcall
xchg
rorb
push
mov
gs
push
and
xchg
dec
jge
dec
push
addr16
jae
repz
insl
hlt
mov
jp
fsubl
jne
xor
xor
insl
insb
cld
dec
cwtl
or
or
fdivrs
push
jge
lret
mov
pop
sub
shlb
fisttpll
jg
lock
notb
add
cmp
sub
gs
jae
sahf
mov
xor
and
popf
dec
popa
imul
pop
jne
js
dec
sub
cmpsb
bound
fcomp
jle
test
jnp,pn
xchg
test
add
loop
sbb
popa
aaa
xchg
int3
xchg
ret
out
dec
mov
xchg
jno
cmp
out
mov
inc
jg
repnz
jae
cltd
in
adc
cli
dec
lahf
cli
stc
inc
cmp
mov
dec
and
cltd
loopne
pushf
int3
mov
loopne
stos
jb
pop
movsl
jl
ret
pushf
dec
push
jae
pusha
vphsubdq
inc
sbb
out
cmpsl
pop
xor
cmp
mov
jnp
out
mov
orl
jle
adc
adc
adc
inc
ljmp
shr
add
cli
jb
xor
inc
sbb
mov
mov
xchg
add
es
mov
ljmp
cld
add
stos
xchg
test
mov
fsubs
jne
popa
aaa
idiv
push
inc
mov
fsubrl
hlt
clc
adcb
mov
or
xchg
push
push
mov
scas
lea
mov
mov
xor
leave
icebp
fistps
xchg
cmp
or
mov
sub
jl
jne
push
stos
rolb
push
leave
pop
mov
bound
sbb
push
cmp
inc
shrl
rol
dec
mov
outsl
lret
cmp
shr
in
mov
add
shrl
mov
pop
loope
inc
outsb
orl
ja
jle
pop
fwait
dec
leave
dec
cwtl
daa
xchg
sahf
stos
push
daa
xacquire
sbb
cmp
mov
jp
or
ss
popa
mov
sbb
pop
push
mov
sahf
daa
imul
inc
clc
test
inc
cmp
push
ret
lahf
js
aad
adc
cmp
push
sbbb
pop
mov
in
imul
hlt
je
jb
mov
out
or
in
mov
pop
xchg
push
sub
test
and
repz
pushl
adc
testb
pushf
xchg
mov
cmp
pop
pop
outsl
mov
mov
cmp
xchg
sbb
adc
or
icebp
cwtl
push
out
movsb
jo
jb
mov
xlat
adc
dec
in
outsb
push
mov
pop
push
inc
outsl
mov
popf
cltd
cld
cmpsb
sbbl
jg
imul
loope
cli
jne
pop
cs
repnz
adc
test
dec
ss
mov
jl
sub
mov
je
xchg
rcrb
sub
adc
adc
iret
dec
inc
dec
cmp
xchg
shlb
dec
rolb
sub
lods
mov
cmc
sbb
rcll
ret
out
adc
hlt
and
cmp
jb
jl
jnp
rcrb
push
xchg
ss
sub
jmp
push
popf
and
or
mov
flds
mov
loopne
xchg
or
mulb
fisubrs
inc
adc
pop
push
push
sub
sarb
mov
mov
out
inc
sub
push
mov
fs
or
in
push
cmpsb
jae
sub
std
cmc
cli
dec
mov
lcall
push
lahf
inc
lods
lock
inc
mov
lcall
ljmp
jb
dec
push
mov
cmp
stc
dec
lcall
xlat
fs
dec
sbb
xchg
fcoml
mov
xor
mov
das
add
fs
cmp
sub
mov
dec
repz
xchg
clc
shlb
pop
adc
mov
xorl
fcmovu
icebp
sub
pushaw
add
mov
movsb
push
mov
push
in
out
sub
shlb
mov
in
mov
dec
scas
mov
mov
in
pop
jnp
mov
xchg
test
fcmove
icebp
repz
fistl
gs
pop
cmp
fidivrs
fwait
in
stc
shll
and
mov
fldl
adc
pop
lret
mov
rcrb
fwait
xor
int
and
inc
shlb
dec
jne
imul
inc
dec
and
jecxz
es
xlat
mov
sar
js
cmc
sti
fcoml
lret
in
lret
push
xor
or
push
jmp
cmp
pop
jae
push
cmc
adc
fstpt
or
pop
push
cli
fs
pop
jp
lahf
dec
loope
lret
pop
xchg
push
jp
flds
or
out
cmp
jo
subb
aaa
test
divl
in
xchg
mov
inc
xchg
dec
bound
in
insl
out
repnz
push
jne
pop
out
cmp
fistpll
xchg
jns
jmp
fwait
xchg
stc
mov
jp
adc
fwait
dec
lds
pop
popf
mov
imul
fwait
orl
test
outsl
pop
arpl
xchg
cwtl
mov
test
mov
pop
mov
sub
jnp
scas
jmp
push
mov
fcomps
dec
jae
fsubp
fisubl
movsl
sbb
mov
movsl
mov
xchg
enter
aad
sbb
call
and
lea
jge
mov
mov
add
mov
xlat
lcall
cli
mov
pop
xchg
ficoml
jle
and
jg
mov
leave
and
mov
cwtl
outsb
lea
jg
xor
stos
in
lahf
rorb
mov
mov
xlat
shlb
cmp
mov
cmp
ret
int
lods
mov
mov
lea
push
sbb
movsl
xor
cltd
dec
cmp
and
stos
lock
jmp
mov
enter
shlb
jns
flds
xchg
nop
pop
dec
call
xor
jo
adc
roll
lret
pop
ds
mov
lds
lds
dec
insb
mov
aam
jno
mov
lock
sbb
push
sbb
inc
add
inc
loop
insl
leave
sbb
pushf
loop
rcrb
xor
fs
mov
add
mov
add
pop
xchg
mov
pop
hlt
and
sub
cvtps2pd
testb
mov
rcll
inc
arpl
ljmp
jo
xchg
mov
jbe
fwait
add
mov
aad
out
into
xchg
mov
inc
pusha
xchg
pop
pusha
push
mov
out
fdivs
and
dec
into
push
out
push
ret
or
std
in
lahf
xor
subl
pop
mov
rorl
mov
lea
or
adc
inc
int3
add
mov
sarb
mov
dec
les
inc
jge
sub
push
mov
shr
cmp
enter
adc
push
push
mov
ss
mov
clc
inc
mov
dec
xor
in
loopne
ja
leave
nop
mov
add
dec
cmp
push
push
dec
mov
lea
orb
pop
loopne
and
inc
adc
mov
in
cwtl
stc
fwait
adc
mov
or
pop
movsl
popf
sbb
fnstcw
mov
test
xchg
fs
cmp
and
jp
leave
push
jge
xor
lret
rcrl
or
lock
cmp
xchg
shl
mov
pop
fimull
mov
pop
push
lock
pop
mov
mov
sbb
sub
out
fsubs
inc
aaa
fwait
dec
fcomi
push
inc
mov
xchg
outsl
mov
adc
add
cltd
sti
adc
pop
sub
cltd
arpl
or
lahf
ljmp
aas
xchg
addb
movsb
push
repz
cmp
lods
adc
mov
ss
pop
gs
jns
add
movsb
out
pop
xchg
and
push
xchg
adc
xorl
cmp
mov
push
hlt
mov
fidivrs
movups
add
mov
push
push
dec
mov
pop
lahf
mov
fisubs
lahf
add
out
iret
add
pop
xor
aas
jmp
cwtl
push
jmp
mov
lret
jecxz
push
aas
sbb
fisubs
mov
aaa
push
call
das
cmp
fldenv
aam
not
mov
aad
xlat
mov
mulb
outsb
mov
jno
dec
in
enter
pop
push
cmp
add
fdivrp
call
sbb
mov
aam
inc
lret
add
and
xchg
movsb
push
outsb
and
jp
pop
add
out
adc
push
cmp
js
dec
fcomps
push
xlat
add
andb
ror
jge
sbb
popa
lods
les
xchg
lock
movsl
insl
rolb
fstpt
out
outsb
jmp
cmc
stos
faddl
fs
jmp
nop
cmp
cmpsb
clc
cmp
or
jno
pop
mov
sti
shlb
loop
mov
and
sub
dec
sbb
sbb
mov
mov
outsl
xlat
orl
push
push
push
ljmp
mov
test
xlat
lea
loopne
test
mov
sti
push
aas
in
mov
xor
cmp
adc
shrl
mov
jb
stc
dec
push
push
add
mov
sbb
and
jbe
dec
dec
lock
mov
cmp
pop
jle
repnz
jmp
sbb
jbe
mov
fidivrs
mov
es
mov
push
jb
add
xor
stc
sub
movsb
ret
in
stos
xor
mov
rorb
test
and
inc
pop
mov
mov
dec
push
lahf
xor
repnz
popa
mov
pop
ss
or
aas
and
inc
or
mov
dec
or
push
pop
jo
mov
inc
xchg
ret
imul
popf
movsb
ljmp
sti
std
pusha
mov
sbb
pcmpgtw
das
test
icebp
pop
mov
or
lcall
popl
mov
cmpsl
and
sbb
ud0
inc
das
pop
adcb
jo
dec
and
mov
jmp
sbb
add
cmovs
mov
adc
sbb
in
arpl
stc
dec
shrl
mov
sbb
push
mov
mov
std
loope
xadd
cld
sbb
repnz
adc
ja
ljmp
cli
arpl
loopne
cltd
loopne
xor
outsb
scas
outsb
lds
sbb
push
popa
repnz
dec
pop
or
jmp
inc
push
lret
pop
iret
in
or
push
mov
xchg
xchg
pop
je
iret
sahf
mov
mov
pop
jae
dec
ficomps
or
mov
leave
jo
sub
push
aas
andl
jge
xchg
insb
mov
xor
xchg
popa
pop
mov
fmul
inc
adc
in
addr16
scas
jo
jp
mov
scas
inc
loopne
ficompl
arpl
mov
jne
mov
mov
xor
lret
movsl
dec
cs
stos
dec
dec
or
xchg
sub
shlb
int3
cmpsl
sbb
ret
shll
sub
dec
xchg
cmp
push
jae
push
lret
inc
inc
and
ficomps
push
insb
iret
push
repnz
out
shll
ret
jo
fwait
or
shll
addl
push
jbe
data16
add
adc
and
xor
rol
mul
out
xchg
addl
push
jbe
data16
add
adc
and
xor
mul
out
xchg
addl
push
jbe
data16
add
adc
and
xor
rol
mul
out
xchg
addl
sti
fsubl
push
popa
mov
into
rorb
mov
xchg
cmp
rcrb
mov
add
jo
bound
push
xor
mov
mov
xchg
lock
mov
xor
adc
arpl
push
pop
add
adc
inc
imul
mov
int3
jecxz
lods
mov
inc
sbb
jae
daa
jno
addr16
inc
mov
in
aad
movl
lcall
add
aaa
adc
aas
mov
lret
mov
nop
andb
lahf
adc
jno
mov
sub
mov
scas
pop
mov
nop
dec
add
popf
arpl
sti
nop
pop
push
pshufw
insb
lock
iret
inc
jo
and
add
sub
into
dec
rol
jle
outsl
aam
movsl
cmp
sub
jae
shlb
xlat
add
add
inc
das
mov
repnz
cmp
xor
cli
out
xchg
sbb
push
and
mov
jecxz
ja
sti
loopne
or
out
add
pop
pop
or
mov
rcrl
pop
mov
adc
fs
imul
inc
and
icebp
andb
mov
adc
jne
addr16
insb
sub
xor
mov
shlb
mov
mov
and
arpl
adc
pusha
xor
inc
shll
jecxz
xchg
lock
shlb
and
arpl
adc
pusha
xor
inc
shll
and
mov
mov
lock
adc
stos
mov
out
ljmp
cmp
clc
inc
and
push
push
fcmove
inc
test
sti
loop
push
fwait
jmp
inc
loope
scas
rol
fldenv
xchg
test
adc
aad
cmp
mov
jnp
mov
push
mov
dec
adc
mov
adc
pop
sahf
xchg
mov
sub
adc
and
jle
mov
popf
dec
andl
rorb
idivb
in
xor
pop
idivb
out
jb
mov
push
add
xchg
push
push
pop
neg
pop
mov
mov
jns
dec
fdivrl
out
xor
fs
adc
outsl
cmp
arpl
ja
mov
inc
pop
pop
data16
cwtl
lods
and
std
in
cmp
and
lods
sub
movsl
mov
ret
test
cld
cmpsb
sub
repnz
sub
aam
adc
sbb
ja
pop
fmuls
pop
add
pop
bound
xorl
sbb
adc
and
fnstcw
daa
mov
mov
push
idivb
dec
clc
loop
cmp
cmp
mov
xchg
jns
mov
and
and
mov
test
fisubl
movsb
xchg
mov
sbb
cmp
mov
mov
xchg
xor
cmpsb
xor
ss
ret
imul
xchg
jle
jmp
sbb
dec
mov
lahf
xchg
sub
adc
push
jmp
insb
and
cmc
sarl
out
test
sbb
repz
scas
or
inc
ret
cmp
pop
xchg
mov
dec
sub
insb
jnp
adc
adc
or
imul
shll
lcall
sti
out
ja
pop
aaa
sbb
ljmp
dec
xchg
stc
int
repz
sbb
mov
cmpsb
jae
in
dec
jle
iret
dec
hlt
std
cmp
xchg
mov
hlt
shlb
lretw
das
es
push
out
mov
adc
dec
aas
pop
pop
jne
or
sahf
inc
fstl
push
lock
inc
mov
xlat
adc
sbb
xchg
testb
out
and
lret
lock
sahf
rol
and
mov
movzbl
aam
cli
sbb
xchg
jmp
mov
insl
xchg
mov
leave
mov
sbb
lcall
repz
sbb
inc
jmp
cli
push
sbb
test
mov
cmc
repz
mov
push
cmp
jb
outsb
movsb
sbb
pop
inc
je
leave
mov
ficomps
int3
xchg
push
lret
fmul
fyl2x
sub
mov
adc
sbb
ja
add
jmp
stc
scas
push
popf
int3
mov
shl
lds
clc
pop
jle
jecxz
pusha
xchg
add
clc
jnp
and
std
adc
ds
inc
int
or
roll
testb
xchg
xchg
xchg
or
cmp
and
in
mov
pop
jl
pop
scas
jbe
pop
jmp
arpl
or
scas
fnstcw
jl
iret
das
pop
add
imul
jae
imul
adc
or
sbb
leave
jg
pusha
sahf
pop
cmp
in
push
cmc
loopne
jb
lret
dec
in
outsb
popa
pop
sarb
sub
flds
rorb
and
and
aad
inc
adc
mov
xor
cmp
aad
int3
clc
lret
mov
xchg
xor
jbe
mov
mulb
arpl
or
pop
xchg
repz
and
rol
xchg
mov
jp
jecxz
stc
cbtw
mov
xchg
icebp
sub
test
pop
mov
fcmovbe
fstps
stc
jbe
mov
and
sub
sbb
push
push
inc
jns
dec
mov
jge
jmp
xorb
sbb
inc
add
ficomps
inc
imul
xchg
dec
push
test
mov
mov
push
or
mov
imul
lcall
arpl
repz
dec
mov
loope
mov
je
int3
inc
cmp
cmp
rclb
or
in
push
inc
imull
jp
mov
pop
les
fmul
test
push
jg
mov
adc
xor
fs
test
jp
cmpsl
and
pushf
sub
push
xchg
adc
popf
jnp
cmpsl
test
inc
neg
rolb
test
ret
push
dec
and
subb
xchg
fimull
mov
in
adc
aaa
add
and
sub
in
popf
stos
outsl
stos
cmp
nop
mov
mov
jne
cmp
imul
inc
out
ljmp
mov
mov
fnstenv
inc
das
stos
or
cltd
popf
jo
and
aas
mov
fisubrl
clc
cmpl
lahf
fnstsw
mov
dec
fstps
xlat
add
clc
call
sub
jo
cld
jle
out
out
push
adc
imul
sar
std
ja
cli
dec
cmp
pusha
xchg
dec
addb
push
xchg
das
push
and
jns
xor
aaa
aaa
out
sub
pop
sarl
call
pop
jle
pop
ljmp
jbe
pop
outsb
add
dec
mov
pop
cmpsl
pop
cld
and
pop
pop
push
pop
std
cli
insl
bound
ja
jmp
std
fwait
jb
je
adc
pop
cld
cmpsb
xchg
ds
das
popf
inc
jecxz
adc
rcrl
mov
pop
push
mov
jne
incb
insl
mov
movsb
cs
xchg
sub
jno
out
test
mov
cmpl
out
xor
ljmp
es
lret
xor
lock
or
pop
imul
fcomi
test
dec
sbb
lret
mov
mov
lea
shrb
in
jmp
mov
lock
movl
jo
mov
mov
cmp
stc
push
repnz
stos
in
ja
or
dec
mov
aas
adc
sbb
loop
aam
lcall
movswl
push
mov
nop
adc
push
icebp
aad
xor
mov
addr16
bound
sub
int
arpl
movaps
push
and
jge
or
xchg
div
push
scas
outsb
mov
test
xchg
sahf
rcll
cld
push
push
cmpsl
mov
dec
lret
dec
xchg
lods
int3
sub
addr16
mov
std
sbb
cmpsl
pop
insl
ret
dec
mov
pop
scas
cmp
or
xchg
sub
lcall
mov
push
into
clc
add
inc
aad
or
loop
xor
xchg
ret
cmp
ds
mov
mov
jg
and
ret
pop
mov
cmpb
jns
scas
mov
and
pop
stc
std
cmp
dec
rorl
mov
hlt
in
dec
nop
out
mov
cmc
rorb
jno
pop
sub
add
ja
jae
scas
aas
push
jno
jb
push
ljmp
lcall
push
addl
ds
jge
test
jae
mov
jmp
in
pushf
mov
lahf
ljmp
daa
js
add
negb
aad
insl
mov
imul
dec
sbb
dec
sbb
cwtl
lods
add
lds
cli
mov
jle
fcmove
jg,pn
test
je
push
mov
fisttps
cmp
filds
js
add
xor
fcomi
xchg
jmp
incb
mov
iret
aad
and
jnp
pop
sbb
inc
js
dec
ljmp
scas
jnp
xor
out
xor
mov
xchg
sbb
je
repz
xchg
int
xchg
stos
pop
lea
xlat
dec
lock
push
mov
js,pt
pop
jge
inc
mov
orl
aaa
in
pop
dec
cmp
int
daa
pop
add
dec
pop
pop
cwtl
call
das
pop
push
iret
push
sti
jnp
fcmovu
pop
sarb
cli
push
arpl
or
rclb
jb
not
cmpsb
andl
fs
dec
mov
jae
fmull
jo
ret
dec
mov
jle
mov
mov
lea
cmpsl
add
push
mov
loopne
fwait
dec
push
push
ret
in
or
and
add
rolb
dec
jmp
dec
inc
or
pushf
ret
sbb
jl
pop
je
push
out
pop
decb
fcoml
sub
pop
clc
nop
scas
loope
push
cld
iret
xchg
ja
pusha
push
in
pop
dec
sbb
std
dec
cld
cld
in
adc
lods
mov
xchg
into
xchg
sub
cmp
xor
inc
aad
inc
xor
push
mov
jge
mov
add
jg
jp
out
in
fldt
adc
adc
xchg
dec
insb
xchg
aad
ds
pusha
sar
sar
idiv
adc
sub
mov
cmp
jl
int3
lds
mov
dec
inc
cmp
lock
sub
mov
mov
repz
outsb
in
popf
xchg
add
fmulp
repnz
mov
sub
jnp
mov
cmp
push
testb
mov
add
fwait
pop
mov
adc
mov
sub
ss
in
mov
cld
mov
lods
mov
push
xor
dec
adc
jbe
js
jb
paddsb
loop
jp
pop
cmp
add
out
hlt
mov
inc
add
in
test
xor
stos
insl
mov
fdivrs
mov
jns
mov
leave
mov
pushf
xchg
fs
jg
mov
ds
add
cwtl
sbb
add
xchg
mov
add
scas
mov
push
ret
cltd
jne
sub
je
adc
fiadds
sub
aad
movsl
int
dec
in
loop
inc
fiadds
gs
aaa
sarl
iret
cmc
test
push
in
ret
pop
adc
push
stc
lods
cmp
pop
xorb
pop
in
push
sub
or
pop
xor
mov
push
cmpsb
or
lods
or
mov
mov
and
adc
pop
test
push
pop
mov
out
cli
sbb
push
sub
add
jmp
out
hlt
or
lret
mov
insl
xchg
mov
stos
cmp
int
xor
jge
pop
push
test
lods
pop
data16
mov
ja
movsb
sbb
pop
clc
fcmovu
dec
cmp
jae
sbb
and
cltd
repnz
push
mov
lock
jecxz
mov
test
lahf
mov
sti
mov
aaa
roll
cmc
popa
push
cltd
dec
cmp
arpl
add
in
pop
aad
icebp
in
dec
movsl
sarl
leave
lahf
pop
push
dec
insb
xor
cmp
pop
iret
gs
push
aad
aad
outsb
shrl
push
loope
inc
popf
sbb
pop
ljmp
ret
aas
jns
mov
add
sarl
mov
gs
cmp
dec
mov
mov
psubw
push
pop
jg
push
cmpsl
xchg
loope
or
and
ret
loopne
adc
test
addr16
popa
lock
mov
add
addr16
ds
mov
adc
adc
mov
subb
sub
sbb
shrb
xchg
test
sub
mov
shl
mov
xchg
jp
popaw
out
jmp
xchg
in
int3
cmpsb
dec
and
jl
mov
jnp
lret
mov
xchg
jns
mov
sub
cmp
pop
rcll
or
pop
leave
test
ljmp
lods
or
dec
sahf
shl
fwait
adc
imul
lods
inc
scas
lcall
inc
pop
test
push
sub
mov
add
mov
mov
call
mov
ret
out
jne
jecxz
or
xorl
sub
mov
pusha
pop
outsl
rolb
jge
mov
jae
inc
clc
fsubrp
ljmp
imul
mov
sbb
sub
int
cmp
jo
push
insl
jp
xor
loope
idivl
inc
inc
subb
nop
ss
adc
pop
dec
mov
scas
or
repz
iret
aas
repz
clc
add
int
push
jb
mov
bound
idivl
cmc
adc
je
popf
inc
je
mov
cmp
mov
push
adc
jnp
push
or
outsb
lods
jge
shrb
cmpsl
sub
inc
in
pop
cmp
das
mov
dec
dec
push
in
stc
add
push
aaa
sbb
fnop
or
fstpt
jl
or
push
xchg
cmp
pop
js,pt
sahf
inc
pop
add
ljmp
jo
push
sar
das
mov
and
sub
ret
inc
dec
sub
out
hlt
fs
nop
push
test
inc
aaa
out
xor
push
adc
adc
or
dec
in
das
jl
test
fwait
cld
mov
or
bound
gs
xor
rorb
scas
outsl
test
repnz
pop
dec
loope
jg
sbb
icebp
xor
xchg
lods
add
repnz
fs
prefetch
or
mov
nop
outsl
into
add
xor
repz
and
sti
inc
fs
cmp
scas
fldl
and
dec
or
outsl
ja
xchg
repz
icebp
je
sti
push
fs
pop
cmp
sahf
jp
xchg
mov
jge
loope
sub
add
inc
jge
lods
sahf
push
jecxz
xchg
outsl
fcompl
inc
dec
xchg
out
cmpsb
or
lock
popf
std
frstor
sahf
jge
ss
and
aam
xor
xor
js
cmpsb
pop
ja
xchg
mov
mov
movsb
popa
aad
pushf
ljmp
call
push
sub
in
pop
out
mov
outsl
fmull
jne
push
push
ljmp
js
insl
test
bound
pop
add
dec
int3
jo
lds
sub
cwtl
cli
pushf
cltd
loop
fcmovnu
andb
insl
aaa
daa
lds
in
xchg
mov
fisubl
and
pop
dec
mov
add
fildl
es
pop
insl
rolb
fisubs
sbb
and
into
es
inc
inc
imul
inc
mov
testb
in
pop
mov
mov
dec
xchg
pop
into
cmp
lods
inc
dec
sbb
lods
cmc
dec
in
mov
pop
negb
sbb
cmp
fs
jl
ror
mov
and
iret
notb
insb
pop
std
or
lock
mov
loopne
outsb
int
lods
push
xor
ret
test
jge
movsl
fmuls
in
outsl
sbb
jle
pop
xor
jno
push
lret
ss
mov
sahf
adcb
inc
sub
add
pop
xchg
scas
cmp
mov
mov
lahf
xor
push
ljmp
push
addr16
stos
hlt
jae
scas
stos
shrl
xor
dec
push
cmp
ja
dec
xchg
jb
cltd
sbb
add
cmp
dec
pop
stc
test
adc
lea
pop
adc
adc
repz
push
add
cmpsb
mov
add
sbb
lods
xchg
pop
js
pop
mov
enter
orl
adc
xor
jge
cmc
sbb
pop
cmp
les
mov
xchg
into
jbe
out
xchg
mov
sub
push
dec
mov
lea
stos
sbb
repz
lret
mov
int
xchg
or
jmp
xchg
mov
stc
lahf
es
jl
jns
jae
push
orb
jp
push
sbb
jle
mov
adc
adcb
lret
lods
in
adc
ja
mov
ljmp
cs
dec
fs
dec
fisubl
push
add
xchg
sbb
out
mov
aad
arpl
repz
jg
push
shlb
pop
xchg
adc
push
fsubl
dec
ds
scas
and
ret
pop
push
fs
lods
mov
out
call
or
jnp
mov
jle
lock
nop
mov
pop
or
jnp
mov
xorb
lret
jge
jo
into
sti
mov
loop
xchg
sbb
mov
aad
lods
scas
stos
add
pop
mov
inc
dec
mov
pusha
dec
mov
push
push
bound
mov
pop
dec
mov
inc
call
pop
cmpsb
mov
jle
mov
xchg
push
sub
inc
mov
pop
sub
cli
mov
sbb
cld
int
or
pop
inc
cmc
push
sub
scas
ljmp
daa
fnstsw
push
mov
xlat
xchg
lea
or
push
mov
push
jo
inc
rclb
inc
xor
sub
std
test
or
mov
add
aas
ror
in
cli
sub
orb
xlat
inc
call
lds
jo
popf
cmp
and
mov
mov
pop
jae
push
insb
in
popa
mov
aad
addb
dec
test
inc
inc
subl
icebp
add
or
adc
push
in
cwtl
jp
add
jnp
sti
popa
lret
mov
getsec
icebp
cmp
movsb
dec
stos
fisttpll
pop
add
loopne
or
adc
xchg
into
lock
jo
jle
mov
ret
add
mov
out
test
adc
xchg
hlt
pop
push
sbb
add
push
lock
das
mov
test
or
loopne
testl
stos
push
mov
xchg
dec
punpckhbw
in
jge
in
sbb
mov
push
cmp
add
in
mov
pusha
sbb
cmpsl
scas
push
pop
stos
ret
arpl
ret
inc
gs
cmpsb
cmpsb
cmpsl
test
xchg
sbb
add
and
mov
out
cltd
andl
push
lea
add
in
xchg
rcrl
xchg
adc
adc
cmc
or
inc
adc
xor
push
stos
inc
orl
jg
loope
ss
ss
iret
adc
sbb
ret
adc
dec
mov
lods
fstp
mov
ds
das
push
cs
rclb
pop
dec
dec
stc
jns
roll
mov
icebp
lods
mov
jns
mov
cmpb
ficomps
mov
cmp
int3
inc
push
inc
rolb
adc
pushf
loopne
fldl
sbb
test
ljmp
mov
cld
mov
cmpb
repz
ja
and
leave
mov
mov
mov
fmul
das
and
cmc
and
js
stos
mulb
cmc
out
into
sbb
stc
outsb
mov
jp
or
push
mov
pop
ss
outsb
push
ss
xor
sub
mov
rolb
xlat
outsb
add
xchg
imul
and
fcomip
lea
or
repnz
ret
cli
scas
sub
pop
data16
sbb
add
mov
add
adc
inc
xchg
ret
mov
mov
pop
pop
aam
sarl
test
xchg
daa
xor
mov
cld
mov
into
imul
or
shll
daa
shlb
lret
fcoml
push
in
mov
sarl
test
mov
xor
out
cmp
and
out
out
inc
loope
jbe
adc
leave
or
mov
dec
jb
lcall
sbb
jno
lret
cmp
or
sbb
jg
adc
cli
mov
adc
dec
popf
mov
mov
mov
je
push
add
adc
mov
pop
movsb
pop
jp
out
mov
test
adc
out
ret
testl
test
and
xchg
pusha
in
jo
mov
cmpsb
xchg
pop
lret
xor
and
mov
loop
out
push
mov
adc
into
dec
ljmp
mov
sub
xchg
pop
jle
imulb
adc
ss
jb
pushf
js
jg
and
adc
cld
fsub
jp
mov
cmpsl
scas
bound
xchg
cs
fwait
jp
cmp
decl
mov
imul
or
cmpl
xor
outsl
or
int3
add
mov
mov
pushf
js
inc
jbe
jle
adc
cmpsb
fbld
inc
dec
data16
jp
shlb
pop
pop
sti
adc
call
and
mov
repnz
push
fimull
bound
out
call
sbb
push
stos
int3
cld
inc
shll
mov
push
mov
sti
push
rorl
out
xchg
dec
jge
push
fistps
stos
icebp
int3
sbb
pusha
push
pop
add
aad
fs
pop
clc
negl
pop
xlat
stos
mov
fucompp
sub
mov
dec
sub
push
adc
add
ljmp
icebp
sbb
cmp
fldcw
mov
ss
pop
cmp
lock
movsl
mov
cltd
pop
mov
inc
jno
loopne
mov
xchg
lock
shlb
and
arpl
adc
pusha
xor
inc
shll
jecxz
xchg
lock
shlb
and
arpl
adc
pusha
xor
inc
shll
jecxz
add
orl
arpl
push
call
arpl
adc
pusha
xor
inc
mov
mov
xchg
lock
loopne
push
and
push
iret
mov
ja
clc
mov
sarl
jno
popa
mov
out
mov
roll
rcrl
aaa
loope
nop
inc
adcb
mov
xchg
jo
popa
mov
movl
not
add
loope
xchg
and
xchg
sahf
inc
xchg
jno
popa
scas
adc
add
xor
and
shl
shrl
push
call
ja
xchg
cmp
sub
push
lret
ss
mov
pushf
and
imul
sub
fcmove
add
and
dec
push
sub
xchg
ljmp
ret
mov
js
adc
add
adc
xchg
push
sbb
adcb
das
push
inc
push
xor
inc
xchg
push
cmpsl
lea
sarl
pop
call
jno
shrb
lods
mov
je
stc
out
sub
mov
idivb
jmp
mov
cmpsl
in
icebp
std
leave
ss
fucom
jp
push
pop
add
andl
push
xchg
jno
popa
lods
adc
add
xor
and
rcrl
rorl
loope,pt
xchg
pop
addl
loop
xchg
sbb
xchg
fs
mov
jb
pop
in
int
fsubl
sbb
incl
xchg
add
mov
in
sbbl
jle
jbe
push
test
repnz
or
repnz
inc
ret
add
xor
and
roll
rcll
daa
loope
xchg
inc
adcl
xchg
jno
popa
mov
movl
not
pop
rcll
daa
loope
xchg
inc
adcl
xchg
xchg
movsb
cli
or
xchg
cwtl
jl
lods
mov
jle
dec
add
adcb
dec
fisubrs
inc
xor
cmp
cltd
inc
outsb
adc
fadds
and
mov
mov
dec
sbb
jmp
jnp
lds
scas
lea
sahf
decb
or
xchg
jns
mov
insl
lcall
dec
sbb
addr16
cld
les
das
mov
mov
cmp
cmpsb
mov
adc
inc
out
js
andb
jle
aaa
mov
outsb
jno
adc
xchg
xchg
mov
pop
jg
in
outsb
cmp
lock
xor
mov
imul
sbb
xchg
mov
push
shl
outsl
xchg
sbb
sub
iret
call
push
daa
hlt
pop
repz
mov
xchg
int
loop
mov
ret
fnstenv
iret
mov
add
fimuls
lret
pop
adc
out
insb
out
push
fstl
mov
push
push
add
inc
dec
enter
das
negb
fmuls
loope
ret
jmp
cld
add
add
add
pop
mov
jp
lock
push
and
pop
jmp
add
push
popa
das
pop
aas
xor
enter
icebp
mov
mov
fdivl
mov
dec
mov
lods
ljmp
sub
jae,pt
mov
sub
jg
cmpsb
enter
int3
pop
jne
adc
inc
insl
inc
out
in
cmp
bound
dec
sbb
xchg
scas
jb
test
add
hlt
jmp
cmpsb
aaa
xlat
ljmp
outsl
fimull
or
aam
cld
lods
stos
pop
mov
mov
cmp
fildl
les
aam
sbb
xor
cltd
scas
mov
inc
rcrl
push
jle
repnz
sub
stos
dec
mov
frstor
adc
dec
cmp
gs
test
xchg
push
dec
dec
push
cmp
stos
xchg
xchg
pop
iret
xchg
out
mov
je
lahf
xchg
loope
inc
out
test
nop
cmc
std
rol
les
shrl
jp
sbb
scas
and
push
insl
add
mov
and
leave
inc
shl
xchg
arpl
cmp
or
lret
fldcw
stos
loop
shrb
jne
aaa
cmp
sbb
repnz
add
or
sbb
lds
lods
gs
daa
adc
out
call
in
cmc
xor
inc
dec
mov
inc
imul
out
lock
add
mov
stos
push
mov
xchg
leave
pop
push
xor
xchg
jne
int3
insb
arpl
xor
lret
jg
or
sbb
cmpsl
lret
dec
xorl
data16
filds
fisttpll
adc
stc
fstl
jge
and
and
push
jge
sbb
push
xchg
loop
lret
rcr
aaa
jo
mov
xlat
inc
xor
hlt
subb
das
xchg
fcmovnu
dec
dec
inc
add
inc
inc
push
mov
sub
or
cmp
sub
adc
gs
arpl
adc
jne
xor
sbb
pop
mov
cmp
mov
cmp
push
dec
xorb
pop
dec
sahf
pop
cmp
mov
cs
pusha
and
test
xchg
popa
sub
cmp
aad
inc
mov
icebp
addr16
out
xorl
sub
push
inc
lret
add
jle
enter
push
ss
xchg
sub
in
add
enter
fwait
inc
or
das
ja
xor
int3
loope
add
negb
movsl
imul
jl
jns
push
push
insb
jl
mov
pop
add
adc
dec
xchg
or
adc
mov
rolb
ss
jecxz
jns
outsl
iret
sub
in
sti
imul
jecxz
mov
xchg
pop
xchg
mov
lcall
xchg
jae
xchg
shlb
mov
out
mov
movsb
jae
push
roll
cwtl
fwait
mov
cmp
aad
sub
pop
xchg
lahf
cmp
ljmp
mov
mov
mov
es
lods
sub
pop
icebp
in
pop
stos
push
mov
sahf
xchg
jl
pop
mov
mov
les
adc
mov
jae
scas
adc
lcall
jnp
rorb
lds
insb
testl
and
push
or
repnz
inc
xchg
mov
std
aam
lcall
mov
push
inc
mov
xchg
outsl
push
decb
mov
add
cmp
mov
push
and
pop
aas
jns
mov
pop
adc
dec
aad
mov
repnz
sub
adc
mov
adc
imul
add
xchg
faddp
stc
popa
pop
inc
add
sti
xchg
es
mov
imulb
and
nop
gs
ret
push
mov
fistl
xor
cs
leave
insl
jle
lret
lahf
insl
pop
mov
shl
in
out
push
dec
mov
cmp
lret
incl
sahf
pop
popf
cmpsb
aam
jno
les
scas
xor
mov
rcll
fisubl
test
mov
rorl
xchg
ret
pop
adc
inc
pop
xor
dec
mov
lret
jne
sub
and
mov
and
xor
test
sbb
mov
addr16
dec
dec
test
jo
cmpsb
lret
lds
mov
into
push
aas
out
or
and
in
xchg
pop
mov
lcall
jae
cmp
in
adc
clc
inc
outsb
popf
cmp
sub
jge
xchg
xor
bound
popf
pop
roll
ja
ret
das
mov
data16
ret
lods
ficompl
aaa
jp
icebp
pusha
inc
xchg
mov
add
aas
xlat
jmp
out
jl
mov
std
fcoml
pop
dec
rorl
scas
or
push
lret
dec
aam
sahf
das
pop
stos
xor
push
jne
add
push
inc
and
js
enter
xchg
test
ss
icebp
xchg
xor
cltd
xchg
inc
sub
mov
mov
add
jb
add
add
sti
cltd
lcall
xchg
fidivl
mov
std
push
mov
xchg
mov
imul
adc
push
jnp
cmp
cmp
jo
dec
shll
pusha
je
inc
in
and
das
fwait
js
push
mov
sbb
lea
mov
pop
or
bound
arpl
push
xchg
popa
mov
insb
ds
push
mov
movsb
je
xchg
ficompl
add
data16
ja
mov
or
adcb
cmpsl
hlt
mov
arpl
cmp
in
movsl
pop
inc
mov
pop
pop
test
mov
sbb
popf
jecxz
cmp
mov
sub
add
daa
repnz
sub
lcall
xchg
pop
fstpt
xor
xor
aam
add
cwtl
lods
outsl
add
jbe
sbb
push
xchg
push
push
shll
sti
mov
mov
pop
in
adc
lods
push
bound
sti
push
xchg
add
aas
mov
cmp
mov
fidivrs
divl
clc
xchg
jb
lds
clc
hlt
xorl
xchg
les
fsubrl
aaa
cmp
inc
aad
pusha
mov
incl
pop
dec
fiaddl
cs
call
adc
inc
popa
jge
fiadds
pop
or
inc
mov
jp
movsl
std
mov
and
mov
mov
into
adc
pop
push
pop
lahf
negl
sti
in
fcomps
imul
das
or
inc
push
xchg
in
insl
or
sub
std
aaa
aas
dec
testb
jae
test
scas
lods
outsl
cmp
mov
adc
adc
jl
mov
imul
adc
sub
fs
aad
inc
addr16
sub
pop
or
rclb
cmpsb
sub
or
enter
push
sahf
sub
arpl
mov
xchg
jne
mov
lret
push
fdivs
cmp
and
add
ljmp
inc
lcall
jle
pop
xor
xchg
jns
sahf
jo
pop
mov
notl
dec
inc
mov
add
cmp
push
out
push
cld
sbb
push
in
mov
adc
xor
jno
lret
aam
pop
mov
xor
mov
xor
lcall
cmp
ficoms
xchg
mov
or
mov
xchg
jne
push
or
dec
addl
fdivl
jmp
mov
into
sahf
lahf
push
sbb
js
add
lcall
sub
das
popf
inc
xchg
data16
dec
mov
int
int
lret
out
adc
jmp
xchg
inc
sbb
jecxz
push
and
or
and
sbb
loope
cmp
shrb
pop
mov
push
cmpsb
lret
cmp
in
mov
add
cmc
imul
xchg
dec
pop
lcall
and
cmpb
dec
cmpsb
pop
lcall
jae
push
mov
fcomp
jg
pop
scas
test
jne
mov
stos
das
dec
les
push
test
adc
sbb
push
push
scas
xchg
stos
add
ret
scas
fidivs
pop
jl
daa
je
pusha
jno
add
add
pop
mov
sbb
pusha
lods
ja
jns
sbb
sub
icebp
stc
mov
adc
packuswb
cmp
jp
fucom
in
dec
xchg
inc
pop
sub
ss
fistpll
jo
sbb
add
xor
cmp
call
inc
roll
aam
mov
mov
mov
test
add
xor
mov
stos
or
call
sub
push
push
cmp
daa
sub
pop
lds
add
and
es
je
scas
rcr
repz
dec
jb
repz
stos
push
add
stc
inc
push
clc
lret
push
fisubs
adc
xor
aam
xor
nop
add
dec
cld
add
mov
scas
dec
ss
push
mov
je
sti
mov
sub
cltd
inc
lea
mov
in
mov
cltd
cmc
dec
and
and
fsubrl
dec
sbb
jecxz
out
mov
adc
fstpt
test
lahf
lock
shll
sub
fwait
or
stos
pop
cmp
fwait
pop
sbb
add
insl
mov
sub
stc
or
fildl
add
popa
stos
jne
pop
dec
js
mov
pop
jno
cmpsl
stos
scas
hlt
xor
and
pop
xchg
pop
das
pop
jno
inc
int
jmp
cwtl
push
and
jecxz
sbb
in
fbld
adc
mov
xor
lahf
sbbb
xor
gs
test
jb
ds
cmpsb
xchg
mov
arpl
push
mov
pop
pop
into
outsl
nop
mov
stos
outsl
lcall
das
ja
enter
rorb
out
es
jmp
pop
sbb
leave
inc
ret
aad
adc
in
lret
and
rorb
push
scas
repz
xchg
xchg
ficomps
nop
out
and
inc
mov
push
mulb
in
jg
ljmp
shll
dec
xor
pop
jo
fwait
enter
aad
adc
mov
scas
mov
mov
icebp
les
sub
jo
out
addl
adc
lea
cmp
fwait
jnp
mov
ret
shll
push
push
jnp
push
push
lea
sub
push
incb
xor
scas
pop
ret
rcr
mov
jbe
jecxz
aad
jns
out
mov
loopne
adc
lahf
mov
mov
ret
cmp
pop
xlat
or
sub
sub
mov
sahf
pop
lahf
pop
paddb
jg
push
pop
mov
iret
mov
mov
repz
out
lds
xchg
xchg
sub
pop
adcl
mov
stos
jmp
arpl
hlt
stos
jle
pop
stc
mov
js
xchg
mov
or
cmp
cmp
mov
cmpsb
leave
test
sub
call
inc
xor
fwait
les
mov
dec
lock
icebp
sahf
dec
inc
dec
push
shrl
std
and
movsb
push
pusha
xor
pusha
ret
or
push
push
mov
inc
sbb
int
jp
sbb
call
push
loop
adc
xor
adc
ljmp
jbe
add
dec
jge
negb
dec
rcll
dec
sahf
ljmp
aam
shlb
clc
hlt
shll
iret
pop
repnz
fdivs
fildl
dec
sub
out
jns
pop
dec
adc
pop
jbe
jmp
and
enter
jp
xchg
or
and
or
imull
pusha
mov
xchg
les
clc
inc
push
movsb
or
sub
sub
sub
inc
lret
icebp
call
leave
roll
xchg
inc
aad
lea
pop
outsb
mov
inc
scas
mov
ss
xchg
ss
flds
dec
sub
push
jns
enter
inc
gs
xchg
in
lcall
pusha
cmp
xor
mov
es
jnp
rclb
xor
xchg
xchg
mov
jmp
mov
outsl
adc
pop
fidivrl
xchg
cmpsb
in
or
ret
js
std
jo
adc
out
cmpsl
add
push
addr16
cltd
or
mov
int
out
sub
fucomp
mov
lea
push
or
int
mov
jl
ss
pushf
or
add
cmp
jle
jno
xor
in
in
stc
jo
pop
daa
mov
sahf
mov
pop
lods
dec
shll
add
stos
arpl
xchg
stos
add
insl
rcll
fbld
outsb
mov
and
nop
adc
add
mov
cmp
popa
inc
shrl
sarb
int
add
add
lds
cmp
imul
out
pop
cmp
push
into
mov
jb
sti
cli
pop
out
cltd
lods
push
jno
insl
bound
inc
addr16
mov
mov
xorb
xchg
sar
incl
cmpsb
mull
cld
xchg
adc
or
out
ss
clc
leave
jbe
in
fstpl
ljmp
or
xor
xor
cmp
jecxz
popl
sub
adc
push
and
or
rcrl
pop
add
mov
popf
add
and
push
mov
lock
fsubs
in
int
testb
cmp
push
push
sub
out
mull
mov
xor
jb
testb
lods
test
movsb
shll
jno
add
in
sti
mov
adc
lret
ficoms
push
pop
push
pop
cmpsb
mov
jno
scas
and
mov
pop
cwtl
je
mov
jmp
fsubl
mov
or
push
rorb
ficomps
outsl
dec
ss
pop
push
iret
cmp
js
mov
jne
enter
or
inc
push
clc
mov
xor
rcr
or
cld
faddp
ss
jp
sub
cmp
jb
loope
and
sahf
cwtl
sbb
push
inc
and
pop
sub
sahf
ds
xor
sbb
lret
nop
pop
sub
dec
jle
adc
rcll
mov
mov
xor
adc
push
push
shlb
push
xor
out
ret
or
pop
push
or
sub
leave
and
fstl
jbe
out
mov
not
push
nop
into
shll
sub
push
fisubrl
scas
andl
fildll
aaa
add
jl
xchg
adc
xchg
jmp
lea
cmpsb
ja
mov
pshufw
add
sub
push
insb
adcl
mov
jmp
dec
push
lret
mov
addb
lds
xchg
pop
dec
aas
mov
in
xlat
and
gs
outsl
fdivrs
ret
out
pop
std
push
je
imul
insl
ficoms
sbb
adc
xchg
push
adc
hlt
sub
adc
fadds
call
pop
pusha
xchg
inc
sahf
mov
push
out
faddl
enter
mov
mov
lock
out
inc
push
jmp
inc
dec
or
nop
push
data16
fsqrt
js
adc
sahf
ret
add
xor
lods
in
aad
jbe
jp
inc
fcoml
or
sub
mov
mov
test
add
lret
mov
mov
sbb
pop
xor
pop
repnz
pop
stos
sbb
inc
xor
xor
cwtd
push
aaa
orl
daa
test
popa
and
movsl
pop
fwait
adc
outsl
jae
insb
and
aaa
fsubrl
mov
shr
aaa
pop
push
dec
sarb
ret
add
inc
cmc
fld
mov
mov
jae
inc
imul
enter
loopne
jnp,pt
fdivr
push
xlat
and
adc
sub
xor
cmc
adc
add
pusha
adc
shl
outsl
xchg
ret
mov
movsl
sub
inc
inc
imul
push
xor
xchg
xor
or
loope
xor
aad
mov
mov
mov
test
push
push
xchg
push
xchg
bound
xor
mov
mov
enter
mov
rcrb
les
pop
ljmp
pop
ficompl
or
insl
jne
push
push
mov
fwait
cmpl
xchg
dec
dec
fs
cmp
pop
adc
pop
inc
daa
mov
jge
out
ficompl
rol
popf
push
aam
sub
popa
sbb
sub
pop
xor
lock
das
int3
sbb
sbb
or
mov
cmp
sahf
dec
inc
orl
xor
jge
pop
pop
mov
stc
jge
decb
and
das
xorl
lret
or
or
out
sbb
xchg
mov
mov
sub
mov
pop
in
mov
daa
lret
add
xor
addr16
cmp
jle
sbb
clc
les
xlat
jecxz
outsb
add
xor
in
xlat
aas
les
sarl
popa
int
cmpsl
pop
int
adc
je
push
icebp
arpl
cmpsb
pop
pushf
in
adc
or
push
jo
out
in
fadd
fisubs
pop
mov
xor
cmp
lcall
out
cmp
in
jge
aaa
sub
aaa
addr16
leave
je
jmp
in
add
aas
sarl
test
out
mov
mov
dec
pop
pop
and
jmp
out
in
jne
les
inc
fisubrl
test
push
pop
test
lret
fwait
in
into
rcr
outsl
addr16
jo
sub
jle
popf
bound
jno
lods
jne
dec
xor
and
cvtpi2ps
shlb
push
adc
cmp
or
sub
mov
and
jo
ds
int
jnp
fwait
call
addl
in
push
or
push
jg
cld
lea
jo
popf
lcall
mov
frstor
mov
adc
or
mov
loop
pop
or
pop
repnz
xor
in
sahf
fisubrs
push
jbe
adc
pop
inc
xchg
dec
cmp
andb
xor
mov
adc
push
xchg
dec
lock
popl
sub
mov
cwtl
pop
stc
shll
aad
jmp
in
cmc
inc
mov
mov
ss
in
xor
cmp
mov
pushf
xchg
dec
test
mov
pop
inc
mov
jb
inc
out
out
mov
jns
mov
imul
sub
jmp
stos
les
push
sub
ret
sub
int
clc
sbb
hlt
add
sub
bnd
jne
fstl
adc
jle
dec
dec
mov
out
sbb
jmp
pop
bnd
fs
mov
cmpsb
out
cmp
popf
js
lods
jbe
sahf
movsl
mov
mov
jae
jle
push
cvtpi2ps
test
push
loopne
gs
cmpb
and
sbb
mov
add
add
shrb
xchg
out
lea
gs
fildll
aaa
add
sbb
or
add
stos
mov
rcr
cmp
fstpl
dec
mov
mov
pop
rcl
nop
test
jbe
and
and
sub
test
dec
stos
loop
mov
xlat
mov
jns
es
jne
cmpsb
leave
loope
mov
aaa
add
adc
fiadds
or
mov
push
adc
aaa
rep
and
loopne
add
lods
sub
loope
add
sbbb
stos
cmc
mov
call
pop
lds
out
into
jae
aam
call
sub
xchg
add
jmp
xor
in
pusha
popf
subb
aad
pop
push
leave
xor
jle
cmpsl
lods
int3
fisubrs
faddp
xor
popf
jle
cmpl
fsubrl
out
movsb
jle
test
into
xchg
sbb
fnstcw
dec
popa
mov
movl
not
pop
rcll
daa
loope
xchg
inc
adcl
xchg
jno
popa
mov
movl
not
pop
rcll
daa
loope
xchg
inc
adcl
xchg
jno
popa
mov
movl
not
pop
rcll
daa
loope
xchg
inc
adcl
xchg
jo
popa
mov
movl
not
pop
sarl
iret
or
adc
pop
and
inc
sbb
outsl
push
xchg
incb
aad
lds
cmc
sahf
in
adc
pop
and
jne,pn
gs
xchg
incb
into
adc
fsub
mov
pop
and
jne,pn
gs
xchg
push
cmpsb
out
fnstcw
stos
roll
popa
xor
stc
into
int
les
out
mov
jns
and
pop
sub
mov
mov
cwtl
dec
push
fistps
sub
les
into
push
jl
test
xor
pop
cmp
xchg
add
adc
mov
in
adc
xchg
and
cs
gs
sbb
iret
sahf
sub
test
popa
rolb
ljmp
mov
aas
inc
cmp
or
lea
sarl
xchg
in
call
cmp
mov
ret
out
dec
into
iret
test
gs
fnstcw
outsb
xor
ds
jne,pn
gs
xchg
incb
into
aad
lds
push
adc
pop
aaa
dec
daa
push
push
aaa
adc
pop
xchg
fwait
loopne
mov
fisttpll
xchg
pushf
mov
insb
push
pop
dec
cmp
jbe
dec
or
xchg
fwait
mov
movsl
mov
cltd
sti
nop
fidivs
add
sub
ds
jne,pn
gs
xchg
incb
into
aad
lds
adc
pop
and
jne,pn
gs
xchg
incb
into
aad
lds
adc
in
or
stos
repnz
xchg
sahf
pusha
xchg
enter
mov
inc
pushf
or
mov
and
mov
scas
je
in
adc
fs
jl
jne
gs
jae
mov
mov
or
mov
mov
xlat
cmp
xchg
cltd
or
cmp
and
and
data16
lds
push
cld
fmuls
sbb
es
sbb
repz
xchg
ss
mov
in
sbb
mov
lods
xchg
ljmp
sbb
fs
divb
frstor
sbb
cmp
pop
notb
popa
pop
jb
push
rorl
mov
pushf
jno
insl
mov
lcall
imul
ret
xchg
sub
cmpsb
mov
push
outsl
cld
xchg
ja
sbb
jg
xor
setne
jne
addr16
int3
popf
test
imul
xor
dec
sub
in
adc
jno
scas
outsl
sub
addl
or
shll
mov
push
push
sahf
jne
push
xor
add
mov
mov
xchg
adc
jne
dec
push
mov
pushw
jo
inc
fchs
push
xchg
cmp
push
pop
mov
bound
jbe
cmp
call
nop
pop
sub
scas
cli
dec
out
pushf
or
outsl
lret
xor
push
movsl
fdivs
mov
mov
test
mov
out
or
loope
sbb
xchg
iret
leave
ret
mov
lds
mov
fadds
jg
cmp
jmp
insb
xchg
mov
loopne
mov
pop
aam
scas
mull
sub
xor
inc
mov
sti
or
sbb
je
out
pop
xchg
add
arpl
xor
out
or
sbb
mov
or
idivb
pop
lcall
push
repnz
rcll
rolb
fsts
in
mov
je
pop
push
pop
pop
push
loopne
lret
in
test
movsb
lcall
cmpsb
test
xor
push
inc
daa
push
lock
or
mov
mov
adc
and
xor
das
mov
lods
clc
mov
mov
pop
sbb
mov
and
or
ret
scas
pop
pop
xchg
sub
cwtl
lock
int
nop
out
adc
clc
rorl
jns
xchg
jl
push
dec
stos
fs
lret
cmp
or
xor
mov
push
daa
xor
jg
cmp
jbe
out
or
add
push
xchg
iret
dec
and
jp
or
xor
xchg
outsl
add
mov
mov
popl
jbe
movsl
cmpsl
sti
je
mov
and
fadds
aad
mov
jg
jbe
inc
and
pusha
andb
dec
jbe
add
cmp
mov
cmpsl
ret
cs
jmp
jle
and
cli
or
in
jmp
cltd
idivl
mov
mov
cmp
les
mov
cs
dec
pop
packsswb
sub
ror
popa
cmpsb
cmp
cmp
xor
cmp
scas
call
mov
ds
add
mov
insl
scas
xor
and
adc
pop
nop
cmp
sub
pop
aam
pop
xor
mov
cmp
inc
jl
jno
insb
outsl
addr16
xchg
mov
inc
lock
mov
shll
aam
pop
push
or
mov
dec
and
add
xchg
push
jecxz
inc
xchg
lcall
ljmp
push
push
adc
xchg
in
imul
ret
xor
test
mov
push
fbstp
je
push
mul
mov
out
inc
lea
adc
push
or
or
insl
push
shll
dec
stos
jp
push
cwtl
cmp
ret
fcmovne
inc
mov
inc
fwait
mov
test
mov
inc
cmpsl
ja
add
movsl
add
shll
das
pop
jp
int
pop
js
lea
jno
xlat
jl
daa
mov
add
dec
in
inc
mov
or
int3
fisubrl
pusha
dec
leave
daa
outsb
sub
and
int3
pop
pushf
add
pop
rcrb
and
xor
shrb
and
notl
daa
arpl
outsl
cmp
scas
dec
cld
dec
aas
mov
mov
addb
stos
cld
mov
shll
push
mov
jns
out
jle
hlt
jns
fcoml
adc
lods
leave
inc
shrb
out
fstl
int3
inc
fiadds
sub
add
or
push
mov
rol
jae
popf
fimull
adc
pop
movsb
jp
add
push
inc
pop
pminub
mov
roll
fsts
pop
adc
nop
sbb
cmp
in
ret
shlb
test
lods
into
xchg
jno
push
xchg
xor
push
mov
adc
into
fwait
sub
mov
cltd
mov
inc
imul
in
gs
jp
daa
mov
mov
fiaddl
inc
mov
cmp
cmp
fcoms
ljmp
outsb
outsl
adc
add
or
xchg
shll
fstpt
xor
dec
lret
aam
lcall
or
insb
jne
add
decb
or
hlt
and
add
push
push
xor
jecxz
fwait
pop
mov
inc
dec
sub
sbb
lock
sub
or
loop
mov
xor
hlt
mov
int
mov
out
out
dec
mov
jg
cld
out
cmp
mov
les
jecxz
or
pop
jno
ljmp
mov
call
pop
add
xor
push
in
fucomp
mov
dec
adc
sti
jecxz
int3
pushf
fcomps
stos
sbb
mov
jo
jo
cltd
rcl
fucomi
ljmp
and
fsts
sub
lea
inc
and
rcrl
cmp
inc
push
push
xor
enter
xchg
mov
add
sub
adc
xchg
shr
repz
xor
test
fcom
std
xor
lahf
outsl
in
xchg
dec
cwtl
fistps
rcrl
repnz
inc
sub
push
int3
incl
rolb
or
adc
jl
mov
adcl
sbb
and
stos
mov
cld
subl
adc
vunpcklps
xchg
pop
mov
test
ficoms
div
dec
ja
mov
sahf
lea
jbe
mov
xchg
xchg
inc
or
scas
or
imul
test
xchg
rcl
arpl
sub
lcall
cmp
cmp
sahf
pusha
imul
lcall
aaa
and
dec
std
stos
out
or
and
sub
dec
sub
mov
or
in
hlt
xchg
dec
mov
pop
push
sbb
mov
adc
cmp
or
cld
fdivl
ja
ds
pop
push
jae
mov
stos
mov
jnp
sti
adc
add
lret
fistpl
adc
inc
sub
and
outsb
hlt
add
push
sbb
popf
add
aam
dec
pop
test
test
aas
or
loopne
push
into
push
inc
in
and
push
sub
jb
xchg
xor
mov
fstl
imul
xor
cs
aad
popf
out
jns
add
stos
das
hlt
mov
inc
test
loope
in
test
add
xchg
lods
icebp
movsl
aad
jne
loopne
out
push
mov
push
lret
xlat
dec
push
mov
repnz
pop
pushf
adc
out
sbbb
cmp
cmp
cmpsl
push
loop
ja
scas
jmp
cmp
mov
shrl
aaa
mov
mov
xchg
mov
jb
xchg
ror
std
adc
push
inc
cmp
sbb
xor
pushf
int
sbb
and
mov
mov
mov
in
or
jbe
push
mov
imull
outsl
push
scas
std
push
push
pop
inc
inc
pop
sub
cmp
imul
ret
adc
addl
incl
pushf
addr16
jmp
stc
adc
push
les
inc
cltd
cmp
in
mov
aaa
push
pop
mov
in
xor
cmp
add
push
push
add
daa
cltd
jmp
push
jg
inc
xchg
xlat
stc
mov
xor
dec
mov
xor
dec
stos
fsts
call
sbb
xchg
fstpl
mov
cmp
in
dec
lea
jge
push
sub
out
add
in
out
movsl
rcl
fldcw
out
mov
adc
sbb
scas
movsb
fidivl
jle
pop
sahf
dec
cmovo
ss
pop
sub
sub
inc
in
push
mov
lods
aas
xchg
and
xchg
stos
repz
outsl
lret
pusha
dec
stos
test
cli
push
pusha
cmp
push
imul
es
jp
add
repz
cmpsb
xchg
test
int3
jge
mov
and
enter
add
pop
mov
fcmovnu
pop
das
gs
push
mov
es
sub
sbb
jne
sub
xchg
sbb
lcall
and
icebp
cs
cwtl
nop
in
mov
in
mov
add
fiadds
gs
rclb
mov
int
cmc
dec
stc
xlat
cmp
imul
and
sub
push
jp
sti
lock
lock
ror
pop
aaa
fucomp
sub
int3
lret
jnp
xor
ja
inc
cs
out
add
mov
imul
push
mov
shlb
push
pop
mov
in
fisubrs
aas
add
cmc
mov
xchg
cwtl
pop
and
mov
add
mov
test
and
fisubrs
or
enter
or
in
test
dec
test
cmp
rolb
cs
cmp
or
loope
xor
jl
je
call
dec
pop
test
mov
adc
pusha
pop
jb
mov
lock
mov
lahf
push
ret
addr16
mov
ret
push
add
add
rcrb
fnstenv
sub
pop
stos
xchg
bound
adc
inc
add
xor
les
out
imul
cmp
jb
cmpsl
push
std
out
mov
add
cmp
jmp
aad
xor
sbb
aaa
pop
pop
fsubl
dec
mov
bound
mov
div
xor
lret
lea
cltd
fadd
outsl
xchg
push
xor
adcb
es
adc
call
in
pop
sarl
xchg
mov
mov
jg
stc
aaa
loopne
es
jg
data16
mov
arpl
xor
push
cmpsl
cmpsl
mov
test
mov
and
inc
lock
inc
mov
cmp
mov
pop
fbstp
mov
adc
sti
mov
insb
fcoml
dec
jge
cmpsl
rcrl
adc
xchg
enter
mov
pop
sub
aaa
mov
push
push
xlat
adc
xor
dec
mov
cmc
mov
add
bound
subb
inc
mov
mov
bnd
sar
mov
xchg
xor
sbb
push
sub
cmpxchg
or
mov
lds
inc
dec
int3
dec
lret
loope
xchg
mov
or
cmp
or
dec
inc
movsw
xchg
jo
loop
jne
loopne
scas
jle,pn
test
dec
lock
jno
out
or
sti
test
pop
push
popf
mov
leave
xchg
out
xor
dec
out
loope
outsl
jge
movsl
rorb
int
out
mov
xor
stos
mov
mov
les
cmp
fisubrl
test
mov
push
loop
rcrl
aam
lods
adc
xchg
ja
lds
push
adc
lret
cmpsb
mov
fisttpll
sbb
cwtl
adc
inc
sbb
popf
push
les
or
stos
rcl
push
xor
lds
lfs
movsl
in
pop
xchg
fildll
ret
xchg
mov
and
sbb
jl
inc
push
or
in
sbb
xor
bound
aad
arpl
add
shll
jl
popa
pop
mov
cmp
dec
adc
pop
sbb
in
out
pop
mov
mov
push
adc
in
movsb
pop
imul
das
and
ret
mov
and
push
mov
imul
or
mov
pop
cmp
dec
xor
xchg
into
hlt
xor
and
outsb
addb
mov
mov
pmulhuw
mov
cmpsb
fists
mov
insb
andb
dec
mov
lret
mov
cmp
adc
out
cwtl
adc
popf
or
mov
sub
xchg
sti
sub
and
xor
pusha
scas
gs
pop
xor
and
clc
xor
movsb
into
pusha
int
dec
pop
mov
or
sub
in
dec
cwtl
leave
and
daa
add
call
imul
dec
xor
xor
mov
dec
lea
push
lds
add
sbb
xchg
cmp
ret
test
std
loope
addb
sbb
mov
test
xor
aas
mov
fdivrl
repz
dec
out
fildl
mov
mov
je
add
clc
rcll
outsb
in
xor
jl
jmp
stos
in
pop
inc
cmp
pop
mov
push
lret
xchg
jecxz
sub
shrb
out
mov
test
int
xlat
push
sub
sbb
rcl
test
es
fbld
movsb
jp
xor
cltd
movsl
or
cmpb
add
pop
mov
cld
xlat
dec
subb
and
insb
cltd
cmpsl
in
lds
mov
rol
jno
xchg
pop
popa
repz
inc
adc
push
xchg
fstpt
sub
inc
dec
pop
xchg
cmp
adcb
jbe
in
or
pop
sti
jbe
ficoms
shrb
xchg
out
or
sbbl
cwtl
pop
pop
arpl
jbe
jbe
push
cli
push
fidivrs
add
xchg
xlat
pop
ret
sbb
add
sbb
dec
insl
lcall
outsb
xor
inc
push
aad
ret
fbld
sub
inc
in
rcll
repnz
or
push
fsubl
pop
stos
or
pop
mov
mov
jmp
xor
lret
incl
cltd
jge
ja
cmp
gs
xchg
adc
xorb
sbb
imul
mov
adc
mov
orl
adc
iret
cmp
scas
fisttpl
lds
dec
cmp
clc
cmp
test
and
jl
hlt
ds
sub
dec
pop
pusha
push
shlb
or
cld
lea
ss
xor
push
jecxz
dec
xor
pop
out
jb
sub
xor
testl
dec
roll
lret
add
aas
test
adc
insl
mov
cmp
popf
outsl
xor
inc
js
mov
lahf
out
mov
sub
lret
push
dec
dec
nop
into
and
lcall
insl
je
aad
lret
mov
sbb
mov
cmp
test
aad
dec
jmp
ja
repnz
aas
lea
xchg
mov
mov
mov
dec
sub
sub
xor
ret
insb
sti
xchg
xor
cmpsb
arpl
nop
js
xor
push
and
outsl
scas
int
and
pop
add
push
cld
lods
fs
nop
mov
cli
dec
fstpl
xor
fsubrp
lods
mov
or
das
out
scas
pop
mov
jae
cltd
and
push
fldenv
or
pop
push
xor
jl
mov
mov
mov
cli
pop
rcrb
or
dec
aaa
adcb
gs
sbb
or
loop
jnp
adc
ss
aam
inc
mov
repnz
rcrb
cmp
mov
testl
sbbl
fcoms
mov
mov
add
insl
push
or
pop
cld
jle
xchg
in
cmp
test
mov
dec
add
mov
imul
cmp
and
andl
shlb
mov
scas
xchg
mov
daa
and
jl
insl
test
lds
mov
push
ljmp
jne
pop
or
aam
and
ss
dec
ret
cmc
push
cmp
shlb
fidivl
fbstp
imul
data16
into
dec
mov
mov
add
xor
dec
les
cmpsb
dec
xchg
ret
ret
and
push
xor
xlat
mov
or
cld
fisubs
xchg
mov
sub
cmp
and
jle
pop
jmp
fists
mov
push
dec
lret
or
mov
stos
jmp
cmpsl
ja
fcompl
and
ret
pop
mov
push
mov
in
push
xorl
neg
insb
push
lret
xor
in
js
arpl
push
pop
out
fs
jnp
in
add
adc
dec
xchg
fdivp
xor
sarb
js
int
into
sub
pushl
inc
push
jbe
pop
mov
jp
push
jp
and
mov
lods
ljmp
push
and
inc
lea
and
cmp
mov
int3
xor
inc
fbstp
cwtl
les
pop
cmpsb
jbe
and
xor
and
add
pop
mov
push
and
loop
mov
push
push
stc
ss
adc
popa
push
and
test
movb
das
add
push
sub
movsb
xchg
into
inc
out
scas
mov
add
push
cmp
in
xor
fs
ljmp
adc
xchg
mov
iret
into
jbe
sub
jne
fisttpll
je
jmpw
push
push
mov
inc
ret
sbb
jns
imul
sub
das
fwait
inc
rolb
add
sbb
shrb
xchg
and
xchg
jo
cmp
jmp
push
and
leave
mov
cmp
sti
cmp
mov
imul
xchg
sub
repnz
popf
ror
and
push
cmpsb
inc
addr16
xchg
fbstp
jno
in
pusha
dec
add
mov
dec
daa
insl
in
mov
push
pop
imul
add
and
sub
sub
aad
mov
cltd
hlt
inc
add
test
mulb
mov
testl
hlt
popa
push
add
rclb
mov
pop
imul
xchg
add
fidivl
xchg
mov
les
addps
mov
addr16
jp
mov
push
testb
dec
mov
mov
mov
rcrb
inc
sub
in
mov
mov
std
cli
fcoms
std
in
jle
jp
push
aaa
out
mov
repz
xchg
ja
insl
out
xchg
jns
fcmove
xor
aaa
inc
lcall
jo
lods
or
push
jp
mov
test
inc
mov
pop
lcall
daa
mov
or
push
add
not
cmpsl
icebp
aam
cmpsl
in
test
fsubl
scas
add
ja
imulb
or
mov
mov
fistpll
xlat
mov
shrl
adc
jp
jp
out
mov
jl
mov
lcall
and
pushf
mov
cmp
mov
mov
cmpsb
lea
lcall
lock
lock
jbe
pop
insb
loopne
lcall
mov
sbbb
cmp
cwtl
xor
mov
fstpl
lret
dec
cld
pop
pop
sub
fs
in
stos
pushf
leave
in
mov
jp
filds
cltd
cmp
daa
decl
std
cmp
sahf
sub
std
fs
mov
fs
cmp
daa
inc
mov
sub
pushf
outsb
js
xchg
enter
or
and
arpl
loopne
dec
push
inc
or
dec
int
stos
dec
jecxz
in
xlat
adc
adc
lods
jp
mov
mov
cmp
sbb
xchg
in
sub
repz
test
sbb
cwtl
cmp
push
into
cmpl
scas
pusha
test
insb
mov
inc
out
xchg
lcall
sub
ret
mov
ss
xorl
sahf
adc
push
push
loop
jno
mov
dec
lcall
push
push
dec
scas
xchg
cwtl
and
push
mov
mov
pop
das
xchg
mov
outsl
pop
jge
add
pop
mov
out
mov
hlt
orl
push
loope
cmpsl
iret
jnp
cmpsb
adcb
sub
xchg
mov
pop
xchg
in
jp
daa
out
pop
mov
push
mov
arpl
outsl
in
lret
test
dec
iret
pop
cltd
cld
and
insb
test
pop
and
scas
xor
ds
arpl
mov
ret
mov
xor
and
jne,pn
gs
xchg
incb
into
aad
lds
adc
pop
and
jne,pn
gs
xchg
incb
into
aad
lds
adc
fisubs
scas
jne
in
xchg
jle
out
mov
movsl
into
aad
lds
adc
pop
and
jne,pn
gs
xchg
incb
mov
test
jno
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
outsb
fdivrs
dec
cld
pop
in
daa
mov
adc
into
dec
fisubrs
mov
sub
fdivrl
dec
cld
pop
in
cs
mov
mov
decb
fisubrs
mov
sub
jp
or
pop
lcall
push
sahf
out
pop
sbb
int
int
testl
scas
aaa
mov
xchg
imul
xlat
aad
les
flds
retw
fldenv
filds
adc
mov
pop
repnz
notb
mov
and
or
popa
xchg
mov
xchg
and
pop
sbb
jo
jne
dec
inc
notl
jmp
fidivrs
xchg
scas
out
xor
jmp
fcompl
clc
pop
in
inc
mov
mov
push
fnstenv
das
andl
decb
mov
push
cmp
add
bnd
push
out
jg
sbb
push
pushf
jbe
sbb
sahf
mov
je
mov
jg
int3
push
lods
test
stos
mov
dec
je
dec
dec
rcrb
dec
mov
cs
mov
mov
in
jle
push
scas
and
push
or
sbb
orb
loope
leave
lcall
fstps
arpl
dec
out
inc
sbb
pop
orb
fimuls
pop
lahf
pushf
cmp
ficomps
fisttpl
pop
hlt
pop
or
cmp
push
mov
decb
fisubrs
mov
sub
fdivrl
dec
cld
pop
in
cs
mov
mov
decb
fisubrs
mov
sub
fcompl
lcall
int3
test
adcl
xchg
mov
fs
shlb
lea
lahf
xor
mov
cli
leave
cwtl
mov
imull
fadds
pop
and
hlt
pop
inc
lea
push
cmp
aam
sbb
icebp
out
cli
adc
int3
fcmove
push
adc
dec
jbe
leave
pushf
outsb
push
and
cld
xchg
pushf
jge
or
daa
sarl
cld
adc
lds
ljmp
add
lcall
jno
pop
scas
dec
xor
pop
mov
enter
fdivl
push
jmp
cmp
push
stc
arpl
mov
cli
pop
add
and
lret
push
idivb
mov
rcr
jno
test
shll
dec
xchg
scas
jg
xor
dec
and
cmp
loop
test
aaa
pop
cmp
int
push
cltd
sbb
arpl
or
jmp
push
and
lea
negl
pop
xchg
repz
fs
repnz
mov
push
jecxz
cmpsl
pop
rcr
cs
jmp
push
stos
frstpm(287
ss
lahf
sti
jge
adc
push
insl
xor
mov
into
and
std
loopne
fsubrl
out
cmp
mov
dec
shll
divb
fst
and
jns
xchg
push
dec
add
repnz
mov
arpl
outsb
jns
mov
push
mov
pop
xor
aaa
dec
push
movsl
pmaxub
jp
mov
leave
pop
jl
hlt
popl
and
and
sub
mov
mov
cmp
adc
cmp
pop
add
imul
xchg
xchg
iret
inc
mov
jl
ret
insb
jb
je
mov
jle
xchg
push
mov
add
out
enter
add
adc
mov
xor
add
mov
lret
aaa
mov
adc
hlt
adc
jnp
push
and
fwait
pop
sub
movsb
sub
and
arpl
add
rcrb
rorl
popa
push
sub
sub
aaa
and
mov
dec
or
aad
xchg
and
xor
sub
subb
loope
addr16
jb
push
fsubrl
cmp
xor
mull
pusha
pop
out
add
stos
xor
adc
adc
orb
push
stc
fisubrl
sbb
pop
push
inc
lea
sbb
xchg
popf
aaa
dec
lods
cmp
fcompl
mov
test
xchg
sub
ds
xchg
mov
sbb
jg
or
mov
in
mov
out
ds
dec
add
xchg
add
shl
std
rol
repz
mov
shl
push
fidivs
test
jbe
or
lea
addr16
je
xchg
pop
stc
cwtl
sub
xchg
push
and
sub
sbb
addr16
push
in
cmp
rorb
mov
pop
rorl
and
inc
cwtl
dec
pop
sub
cmp
push
arpl
and
sbb
pop
sbb
jg
rcll
mov
push
nop
xchg
adc
push
neg
or
or
mov
loope
lea
cmp
and
sub
sub
sub
sub
lcall
adc
movsl
jnp
mov
xchg
xchg
jge
sahf
pop
push
jle
pop
mov
lods
rorl
pop
xchg
test
or
push
decb
pop
pop
xor
sbb
repnz
nop
repnz
mov
push
lret
dec
ret
popa
xor
iret
stos
pop
ljmp
fucom
adc
mov
shll
nop
imul
fmuls
clc
rclb
in
mov
jb
adc
xchg
pop
mov
fbstp
lea
in
push
sub
cwtl
xor
dec
sbb
push
pop
sub
pop
pop
and
jmp
sahf
mov
sbb
push
cmpsb
aad
pop
sbbb
ljmp
or
ja
and
aad
dec
in
cmp
test
int
sbb
bswap
cmp
in
loop
xchg
jnp
addr16
pop
inc
jno
jecxz
lret
sti
pusha
push
pop
fcompl
leave
popf
pop
jnp
pop
mov
fsub
pop
insl
filds
mov
push
jmp
sti
mov
cmp
push
lret
jbe
adc
aas
lcall
cmp
cmp
sbb
cwtl
aas
nop
int3
std
mov
sub
cmp
shlb
add
cld
adc
icebp
sub
add
jo
cmp
inc
add
mov
fiaddl
inc
sahf
xlat
ljmp
loope
int3
mov
scas
cs
add
and
push
divb
ret
orb
stos
aam
mov
lcall
sub
lea
mov
testl
jmp
insb
or
xlat
mov
addr16
shrl
scas
int3
lods
push
test
pop
movsb
jns
test
add
lods
add
in
ret
adc
jl
adc
imul
xchg
sub
pop
sub
mov
psllq
adc
jbe
imul
or
mov
mov
jne
addr16
add
leave
push
mov
into
jae
and
adcb
xchg
and
popf
pop
loop
loope
aaa
inc
pop
mov
pop
imul
inc
aam
aad
or
mov
and
pushf
aaa
idivl
es
mov
mov
dec
ja
cmp
pop
push
pop
dec
popl
int3
orl
into
pop
fadd
in
std
jl
cmp
bound
repz
and
push
out
test
mov
add
inc
sbb
xor
mov
out
adc
sbb
xor
gs
lods
xor
xchg
or
stos
les
std
adc
adc
into
mov
mov
dec
addl
or
fcoml
pushl
mov
movsl
ffreep
push
out
or
hlt
aaa
xchg
imull
cmp
mov
mov
ja
shrl
push
mov
sbb
repz
xchg
mov
cs
int
inc
subb
mov
xchg
divb
xlat
ja
out
sti
pop
popf
out
das
or
mov
data16
xchg
sub
ss
dec
nop
pop
cmc
inc
mov
jns
add
lods
out
and
inc
xor
sbb
or
ja
scas
dec
decl
cmp
ficoms
bnd
adc
cmp
jnp
jne
sub
rcll
jns
mov
ret
inc
jg
and
sbb
adc
dec
ds
mov
push
lret
mov
hlt
add
dec
add
sub
sub
stos
mov
test
xor
add
or
xchg
call
pop
imul
jecxz
xchg
jmp
pop
jne
loop
xchg
pop
mov
sbb
jmp
cmp
mov
das
cmp
fmuls
jno
stos
popa
mov
pop
fs
jl
xor
adc
add
pop
or
ss
mov
pop
mov
xchg
xchg
adc
das
mov
sbb
scas
sbb
lcall
xlat
daa
bound
mov
dec
scas
add
mov
movsl
nop
mov
jnp
aas
es
aas
or
les
fbld
mov
dec
test
inc
imul
ja
inc
lcall
xor
push
je
xchg
call
cmp
cwtl
mov
bound
mov
pushf
add
fs
mov
stos
cmp
xlat
iret
fwait
inc
sbb
dec
and
push
idiv
lea
mov
sbb
inc
inc
inc
sahf
mov
fistpll
push
push
les
and
cmp
jg
dec
cmp
push
push
repnz
addr16
cmp
push
fsubrl
testl
push
sub
out
xchg
roll
int
imul
mov
sub
push
pop
push
rcll
sarb
paddb
cmpsl
or
mov
popa
loop
push
cmpsl
in
andnps
outsb
fld1
ds
sub
movsl
pop
in
add
push
imul
sbb
and
mov
adcl
mov
lock
icebp
stc
pop
inc
sub
ret
js
cli
movsl
enter
pop
neg
push
xchg
mov
and
shl
cs
lock
add
inc
ja
lock
shl
ja
or
sti
out
aad
retw
daa
call
repz
inc
push
add
pop
push
push
push
insb
stos
test
dec
push
xchg
mov
dec
je
xlat
mov
mov
mov
adcl
mov
pop
es
inc
das
rorl
iret
mov
leave
xor
inc
add
cmp
inc
gs
rcrb
test
xor
pop
lret
add
outsb
stos
repz
push
push
mov
add
mov
xor
stos
push
xchg
cmp
js
cmc
xor
jae
rorb
out
mov
pmovmskb
dec
adc
repz
xchg
arpl
jne
xchg
and
xor
xchg
and
xchg
add
xchg
inc
or
sub
push
js
adc
add
pop
repz
jge
xor
pop
inc
arpl
or
into
jl
daa
mov
adc
sbb
aaa
cmpsl
mov
rcl
add
inc
ret
insl
test
stos
fcmovbe
dec
inc
ljmp
insb
push
cltd
mov
sti
sti
jecxz
sbbb
je
or
sub
mov
fisubl
cmpsl
adc
lret
sub
and
cltd
lods
test
mov
xor
int
push
into
add
xor
jmp
rorb
popa
fdivp
add
and
mov
sahf
sub
adc
mov
repz
sarl
mov
lock
pop
shrb
sbb
mov
dec
aas
arpl
aad
pop
pop
shlb
aam
outsb
push
sbb
mov
movsl
inc
loopne
add
pop
inc
dec
jns
cmpsl
inc
andl
les
or
cld
lods
or
mov
js
test
pop
mov
and
and
xor
mov
enter
jnp
push
xchg
lret
push
jecxz
sbb
leave
or
xor
mov
rcr
imul
call
cli
bnd
out
test
sub
push
ret
xor
cmp
ja
mov
and
in
or
iret
test
lds
or
adc
push
dec
jno
cmpsb
in
ror
ss
add
dec
sbb
sar
gs
int
xchg
inc
xor
push
scas
ds
push
mov
adc
mov
pop
test
aad
inc
pusha
scas
pop
pop
testb
lods
insb
xor
jo
cwtl
adc
xor
in
dec
push
jmp
es
push
mov
loope
inc
xchg
roll
into
or
test
daa
sbb
stos
popa
rclb
xor
add
push
adc
mov
fmuls
mov
mov
mov
inc
fdivs
add
add
pop
xchg
adc
push
dec
je,pn
shrb
pop
cs
jp
pop
sbb
jne
dec
push
loope
in
push
xorb
cmp
dec
shr
xchg
outsl
mov
les
and
imul
lods
popf
lock
and
cmp
or
mov
shll
mov
orl
xchg
sbb
movsb
mov
es
aas
lret
xchg
pop
cmp
stos
xchg
dec
jne
dec
mov
aaa
push
andl
inc
xchg
mov
movsl
cwtl
out
lods
mov
lock
leave
fxch
xor
mov
sub
jmp
or
mov
sub
jmp
add
pop
xor
dec
push
push
push
pop
movsl
mov
stc
stc
test
into
adc
xchg
test
sub
lods
stc
sub
stc
out
xor
add
js
xchg
push
push
dec
jp
pop
mov
fistl
pop
gs
mov
not
popf
insl
ret
mov
add
lgs
jp
pop
jnp
into
add
ds
cld
dec
out
jge
sbb
pop
cmpsl
add
outsl
data16
sbb
stc
xlat
jbe
xchg
repnz
mov
mov
scas
test
dec
outsl
mov
xchg
sbb
bound
pop
std
aam
iret
sti
push
aaa
mov
adc
es
xlat
pop
gs
sub
int
jl
lret
mov
or
push
pop
mov
aad
inc
mov
xchg
clc
push
dec
push
sub
xor
jg
xchg
sub
sbb
mov
in
add
movsb
push
pop
add
repnz
pop
push
pop
repnz
cmp
mov
or
mov
test
jp
and
cmp
pop
lea
nop
loope
sarb
test
out
test
push
dec
sbb
xchg
mov
mov
shrl
loop
loopne
out
ret
xlat
inc
mov
iret
jb
imul
out
jne
ret
mov
nop
inc
movl
push
cmp
mov
dec
push
in
out
inc
adc
ret
pop
loop
dec
lods
or
sub
mov
adcb
xor
xor
cmpsb
aaa
test
xchg
nop
inc
or
cli
incb
data16
movsl
mov
mov
aam
push
fs
lahf
cld
add
adc
xchg
or
xchg
decb
ficompl
xchg
mov
mov
ds
clc
push
cmp
mov
cmc
sarl
mov
mov
cli
cmp
push
push
mov
inc
cmp
and
pop
enter
push
fldt
jp
adc
sbb
sbb
out
call
mov
cmc
pusha
lcall
fwait
scas
xchg
ret
pop
push
dec
fimull
cmpsb
sbb
fwait
or
mov
ret
dec
movsb
divb
dec
ljmp
cmp
rorl
inc
mov
sar
push
outsl
data16
and
js
pushl
pop
cmpsl
ret
aas
cmp
mov
mov
mov
or
fidivrl
lahf
jmp
pop
mov
jg
in
xchg
jge
mov
dec
outsl
scas
icebp
lahf
cwtl
out
je
dec
mov
xchg
dec
arpl
jge
jl
lods
cmp
imul
lods
cmpsl
lret
popf
in
mov
cmp
xor
push
cmpsl
nop
pop
push
jb
pop
dec
mov
add
shr
insb
jb
cmp
push
xchg
dec
fimull
out
aad
sub
or
pop
pop
aaa
mov
mov
sbb
cmpsl
bound
inc
adc
add
jmp
and
ficoml
lahf
xlat
xor
jb
mov
shll
lret
out
cmp
mov
loopne
or
sbb
jo
inc
fldenv
orl
mov
pop
push
mov
dec
ss
inc
test
gs
loope
cmp
inc
sbb
out
jne
sub
or
fsub
add
cltd
mov
sahf
fsubl
sub
cli
icebp
mov
in
mov
fisubrs
adc
repz
iret
sub
and
pop
cmc
push
insb
cmp
xchg
jl
jg
loopne
in
xor
aad
push
repnz
ss
sub
mov
add
in
fidivs
lods
sub
fists
loop
je
std
dec
and
xor
fcmovnu
dec
sbb
clc
add
and
pushf
inc
mov
mov
iret
test
lcall
xor
xlat
adc
add
push
test
mov
cmc
sub
jmp
adc
and
jne
mov
pusha
mov
outsl
push
hlt
std
ja
outsl
and
xchg
mov
stc
imul
ss
test
js
cmpb
sbb
shl
mov
pop
mov
push
or
mov
ds
jbe
push
test
repz
stos
testl
xchg
jmp
aad
je
mov
xchg
mov
sbb
out
and
in
cmc
aas
in
lds
add
mov
push
xchg
mov
bound
movsb
xchg
lret
mov
mov
jp
mov
inc
adc
mov
sbb
popf
jns
push
jnp
sahf
sub
jo
jp
frstor
test
push
sub
orb
jnp
cltd
fisttps
mov
data16
in
in
jae
pop
jmp
fisubrs
jmp
mov
iret
pop
mov
das
dec
call
fsts
or
movsl
xchg
andl
jbe
add
aad
outsl
sbb
das
push
mov
sub
xchg
dec
outsb
adc
jp
neg
sub
aad
adc
cmp
imul
xchg
sub
push
lock
dec
clc
jmp
pop
insb
push
jecxz
jmp
lretw
adc
pop
shl
sub
or
pop
test
jle
cmp
xchg
push
cs
inc
je
pop
mov
sti
scas
js
dec
sbb
pusha
ja
jecxz
fistpl
daa
sub
insl
xor
cs
xlat
shrl
pop
notl
sti
les
adc
mov
push
inc
inc
jb
mov
loope
inc
add
jl
push
movsb
mov
cmp
insl
movsb
pop
adc
into
sbb
and
nop
imul
cmpsl
es
jmp
fistpl
push
mov
push
loopne
and
jecxz
lds
in
xchg
rolb
mov
add
and
popf
cmpl
add
shl
adc
fistps
sbb
lfs
mov
jl
movsb
xor
mov
push
mov
cmpsb
arpl
scas
clc
stos
jnp
jge
cltd
add
jge
test
imul
test
popf
mov
pusha
iret
xchg
insb
fcoms
jg
and
stc
bound
pop
loopne
mov
repnz
cld
inc
jge
xor
cmpsl
sub
shlb
es
adc
int3
out
xchg
jne
insb
inc
sbb
sbb
in
mov
insb
cmp
sti
xlat
add
or
or
or
cmp
mov
mov
insl
js
dec
lods
and
jno
stc
sub
sub
jge
stos
cwtl
mov
movsl
or
pop
fadds
aas
xchg
sbb
mov
lds
imul
js
dec
mov
mov
push
push
leave
inc
imul
enter
mov
pop
xchg
mov
es
shll
cmp
mov
mov
mov
pop
push
shll
cmp
jnp
nop
stos
pop
pop
out
mov
loop
push
jne
adc
in
iret
lea
into
in
pushf
outsb
dec
xchg
xchg
jecxz
dec
pop
outsb
or
jae
inc
stos
in
xorl
rclb
mov
mov
cmp
nop
fidivrl
lahf
mov
or
in
dec
das
mov
outsb
push
add
inc
cmp
cmp
dec
jl
test
pop
add
mov
dec
push
mov
fnsetpm(287
mov
xor
or
movsl
xor
out
pop
stos
sub
test
fwait
subb
push
pop
xchg
arpl
faddl
sub
rorl
les
ficoml
fcompl
mov
movsb
inc
sub
out
dec
jbe
or
addr16
mov
pop
pop
push
les
adc
adc
fwait
test
and
or
sbb
pop
mov
mov
xchg
fidivrs
loop
ret
push
jmp
aas
fdivrp
into
imull
adc
outsb
fdivs
and
inc
cmc
mov
mov
push
jge
pop
fcmovnu
jg
mov
in
ljmp
stc
mov
or
cltd
ds
mov
add
inc
std
mov
mov
cltd
pop
xchg
push
mov
int
fistl
or
test
add
xchg
fcmovne
jmp
cmpsb
or
int
cld
jecxz
add
push
pop
mov
dec
bound
jno
popf
inc
add
lds
push
mov
scas
lahf
mov
pop
cmpsl
or
loopne
inc
adc
dec
mov
xor
inc
mov
push
nop
pop
pop
cmc
sbb
add
adc
sub
push
test
fwait
call
inc
sbb
daa
pop
test
fsubs
or
iret
lods
push
sub
lret
push
aad
sub
std
mov
ret
rcr
xor
lds
je
imul
inc
in
sub
xchg
push
jl
imul
push
stc
push
inc
rcl
xchg
loope
ret
mull
cmp
pop
mov
mov
outsl
push
xor
xor
fs
nop
imul
fistpl
fsub
push
sub
repz
imul
sti
xor
fildll
inc
mov
mov
test
add
cmc
sub
cmp
mov
cmp
movb
mov
dec
and
mov
fdivrs
lret
mov
xchg
fs
fdivrl
xor
clc
bound
ret
popa
fmuls
pop
je
add
dec
mov
in
cs
mov
mov
decb
fisubrs
mov
sub
fdivrl
dec
cld
pop
in
cs
mov
mov
decb
fisubrs
mov
sub
fdivrs
dec
in
call
push
mov
decb
jl
gs
sbb
enter
sub
pop
lods
cs
mov
mov
ficomps
fldenv
jbe
push
pop
fimull
jle
outsb
ljmp
and
jp
push
sbb
pop
fimull
jle
outsb
ljmp
cs
into
pop
into
dec
jnp
push
jg
or
ficoml
data16
jbe
pop
lcall
pop
in
imul
pop
stc
pop
aaa
xchg
and
dec
and
gs
mov
xor
and
lds
fiaddl
nop
shlb
mov
pop
mov
dec
out
add
sahf
push
mov
lret
lea
sub
mov
out
imul
in
ss
push
pop
fbstp
fwait
jp
push
cmpsb
iret
mov
mov
mov
xor
sbb
xor
loope
push
gs
fisubrs
incl
mov
inc
push
mov
fdivrl
inc
xchg
loop
aad
add
xor
and
pop
inc
dec
orl
xchg
fisttpl
fstpl
cmp
lret
outsb
ljmp
aaa
stos
pop
dec
out
imull
sbb
insb
xor
sub
insl
jae
cs
sub
sbb
dec
ret
dec
xor
push
mov
push
iret
ds
jge
popf
aas
stos
cmp
sbb
in
enter
cmp
push
xchg
push
test
mov
mov
into
dec
jp
push
sbb
sub
dec
lret
outsb
ljmp
cs
ficomps
dec
jp
push
sbb
sub
popa
loop
xchg
sbb
or
mov
repz
testb
loopne
cmp
and
loop
inc
and
out
movsb
mov
pushf
sub
in
je
push
stos
aad
and
xor
mov
adc
aam
pop
sub
imul
mov
adc
inc
aas
lcall
jnp
push
mov
js
xor
mov
xchg
subl
addl
lock
dec
test
push
jle
test
nop
imul
insl
outsl
fcmove
neg
aaa
mov
jecxz
movsl
out
pop
in
adc
mov
jae
or
aas
icebp
add
sbb
or
scas
or
std
repnz
repnz
rol
mov
outsl
dec
jbe
cltd
arpl
jo
int3
icebp
imul
adc
or
add
pop
inc
or
gs
mov
sub
loopne
adc
push
rcl
push
dec
fwait
pop
aas
decl
xlat
mul
insl
add
sbb
push
test
and
std
mov
lahf
lods
outsb
sub
aad
bound
sbb
adc
int
pop
mov
push
pop
sbb
mov
loopne
sarl
mov
fldt
test
je
popf
out
test
insl
loope
dec
fcomp
xchg
xor
jnp
adc
inc
test
mov
into
sbb
in
les
sbb
je
pop
mov
or
pop
cmp
pop
mov
gs
ja
add
sub
sub
cmp
mov
mov
out
cli
pop
jne
stos
and
jno
sbb
scas
sbbl
push
out
imul
cs
push
aas
fnstsw
sbbl
mov
gs
xchg
rcr
push
mov
jg
rcrb
mov
cld
xchg
inc
jmp
push
lcall
loope
cmc
insb
int3
mov
lods
or
rcll
cmp
test
ret
and
cmc
movsb
jmp
and
std
sti
mov
pop
call
lahf
lods
dec
mov
inc
mov
mov
sbb
pop
divl
jnp,pn
xor
ds
int
lret
iret
aad
pop
pop
mov
iret
adc
les
push
xor
into
fiaddl
mov
mov
mov
inc
mov
call
cmp
xchg
sbb
jbe
xchg
rcrb
js
cmpsb
adc
imul
pop
xchg
adc
adc
ja
inc
sbb
test
dec
mov
daa
out
jbe
xchg
scas
test
pop
daa
pop
adc
dec
fs
mov
shr
mov
test
jo
scas
sbb
mov
call
cli
bound
fdivrl
fwait
xor
iret
popa
mov
inc
iret
rorl
decb
and
inc
lods
adc
push
pusha
and
faddl
in
outsb
adc
mov
xor
inc
inc
sbb
cmp
lds
pop
int
movsl
jno
mov
mov
jo
test
pushf
jno
inc
popf
stc
adc
xor
js
add
jp
adc
movsb
mov
pusha
push
gs
mov
enter
and
fwait
jp
push
push
stos
aam
mov
push
jecxz
pop
movsl
add
jo
nop
fdivrs
dec
inc
jmp
xorl
jne
xlat
sub
out
lret
mov
push
mov
hlt
bound
mov
mov
cmpsb
xor
cltd
xor
push
fsubrs
lods
daa
data16
jns
jnp
xchg
inc
lret
push
jae
out
ljmp
cmp
dec
adc
mov
cmp
mov
das
cli
dec
cli
movsb
sbb
adc
inc
sbb
les
fldcw
mov
cmpl
pop
inc
and
js
mov
pop
cld
stc
hlt
pop
ss
inc
jbe
pop
adc
cwtl
xchg
es
jg
cmp
cmovb
stc
test
adc
insb
movsb
mov
stc
mov
in
lret
mov
lods
mov
sub
test
ds
orb
cwtl
outsl
aad
xor
sbb
cmp
cmp
lret
push
mov
out
inc
aaa
test
sbb
ja
clc
sbb
push
adc
movsb
lock
imul
xchg
or
cmp
daa
mov
push
in
and
outsl
dec
insb
add
leave
outsl
push
int
and
xchg
shlb
jmp
xchg
iret
adc
aas
push
movsb
mov
sar
call
jae
add
stc
cmp
inc
stos
loope
insl
mov
cmp
rcll
sub
jmp
fisubs
inc
mov
fstl
mov
mov
adc
pusha
frstor
aam
lock
sbb
icebp
and
and
popa
sahf
fwait
in
sub
fcmovbe
leave
imul
fldt
push
sahf
sbb
addr16
mov
imul
cli
comiss
xor
adc
push
pop
insb
jno
adc
jae
dec
icebp
or
das
jmp
dec
mov
pop
sub
mov
loop
dec
cmp
lret
sbb
lret
aam
sbb
dec
pushf
shr
cmp
push
daa
dec
stos
test
dec
xrelease
fnstsw
mov
cmp
push
andb
add
jmp
loope
sbbb
push
cmp
cmc
cli
jae
or
xlat
pop
xlat
xchg
insl
add
jae
je
cmp
fcmovbe
pop
xchg
inc
dec
movsl
and
rorl
push
fldl2e
mov
xor
rcrb
push
xor
lods
push
bound
dec
xor
mov
fs
lds
sbb
mov
ss
mov
pop
push
incl
xor
mov
test
in
add
enter
dec
xor
mov
sub
mov
in
or
cld
dec
add
mov
movzbl
push
insb
cmpb
idivl
mov
lea
ljmp
mov
mov
roll
xlat
frstor
data16
cmp
xchg
lcall
pop
jbe
andb
jge
mul
push
push
fildll
loop
fnstsw
cwtl
dec
pop
scas
ficomps
neg
js
in
stos
jnp
mov
cmp
repnz
fildll
call
push
xchg
mov
lea
push
pushl
pop
jns
imul
sbb
jae
pop
fdivrs
mov
hlt
loopne
mov
jno
int
mov
shlb
daa
jp
or
adc
arpl
pop
cmp
pop
das
out
mov
int
and
adc
test
insb
inc
add
popf
bound
nop
xchg
lods
lea
sbb
lahf
fs
movsl
push
jmp
fnsave
repz
js
mov
scas
out
movsl
adc
cmp
inc
inc
xchg
fiadds
iret
es
inc
adc
fcmovnb
flds
mov
mov
xchg
dec
lahf
divb
sbb
and
sub
fiaddl
mov
hlt
lock
xlat
inc
add
jmp
lret
pop
mov
push
flds
lret
rclb
fidivrs
or
jge
data16
and
dec
xor
jns,pn
jmp
or
repnz
mov
mov
mov
mov
adc
and
jl
in
xchg
xorl
xadd
sti
movsb
xchg
dec
daa
push
dec
mov
int3
insb
sub
shlb
fwait
dec
lea
les
pop
cmpsl
test
jle
sub
or
mov
test
jns
xchg
lcall
jg
es
fisubs
mov
and
lcall
es
in
sahf
mov
insl
aaa
cmp
out
jno
hlt
sbb
mov
shll
and
sub
mov
cli
mov
pop
mov
notb
mov
jmp
ret
jl
cmp
add
jp
test
mov
xor
sbb
dec
insl
or
mov
cli
test
scas
push
out
in
xchg
movl
jbe
fucom
ret
gs
loope
xor
sub
aam
icebp
sbb
ret
inc
add
dec
and
mov
arpl
or
cmp
jo
or
xor
hlt
cmp
fstps
push
stos
sti
jbe
in
ljmp
shl
insb
mov
adc
cmp
push
call
stos
nop
pop
or
pop
sub
mov
call
jb
arpl
ret
cmp
cmpsl
mov
xchg
mov
fcompl
inc
ret
adc
fyl2xp1
insl
fld1
sbb
shrb
fnstenv
adc
adc
pushf
and
and
mov
cmp
insl
lods
stc
and
jl
stos
int
fldt
jmp
lea
scas
mov
orl
in
xor
mov
shrb
in
fdiv
mov
call
call
clc
int3
dec
xchg
lcall
fcompl
cmp
cltd
out
sub
jg
mov
add
enter
mov
xchg
adc
lds
push
pop
or
clc
mov
mulb
xor
sub
inc
int3
inc
aam
jae
pop
call
test
aaa
lock
leave
cwtl
and
xchg
xor
dec
into
push
push
pop
frstor
leave
fcomps
int3
mov
lea
xor
imul
inc
cwtl
aad
mov
mov
mov
testb
cmpsl
cli
rclb
fsubrp
fcmovbe
pop
and
in
mov
pop
cltd
pop
xchg
dec
addl
pusha
jbe
xchg
clc
mov
jb
pop
mov
xchg
inc
push
sbb
xchg
or
jns
out
jne
mov
mov
mov
mov
sbb
test
and
nop
sub
iret
pop
inc
mov
gs
inc
je
lret
test
push
or
jae
or
lods
movsl
inc
or
in
pop
lret
mov
adc
call
clc
pushf
aaa
jo
into
xor
ret
dec
ljmp
push
cld
ljmp
scas
aad
ja
cmp
pop
enter
pop
mov
enter
ljmp
les
jl
dec
fs
cmp
jbe
xchg
and
or
cs
test
dec
mov
bound
cltd
scas
les
cld
ljmp
and
mov
ja
push
pop
xchg
sub
sahf
dec
sub
enter
movsb
push
das
aam
xchg
or
fidivrl
dec
or
or
inc
ds
inc
test
push
pop
incb
lret
rcrb
jne
cmpsl
pop
vpmuludq
sbb
ja
and
cmp
push
arpl
outsb
inc
mov
dec
js
inc
xor
ret
pop
stos
dec
ds
xor
insb
popa
xchg
outsl
les
inc
jbe
outsb
and
mov
push
inc
arpl
orb
jne
and
mov
aaa
cmpsb
inc
scas
sub
inc
fnsave
sbb
popa
insl
fdivl
push
ss
xchg
call
fldenv
jae
fsts
inc
cmp
push
jmp
adc
fdivrl
shl
sbb
mov
cmp
fsts
lds
jmp
mov
fldpi
inc
pop
icebp
ljmp
nop
push
in
cmp
push
cli
dec
cltd
adc
mov
or
in
fucomp
sti
push
jnp
aaa
popf
cmp
je
fisubs
dec
cmpsl
jmp
stc
pop
int3
cld
lret
shr
int
je
push
mov
sbb
stc
pop
xlat
dec
les
jae
push
nop
popa
mov
in
fnstsw
repnz
adc
ret
jge
jle
pop
ret
and
enter
ficompl
test
pop
mov
inc
stc
in
mov
cltd
cli
lcall
test
or
inc
jmp
aad
fwait
pop
jmp
mov
inc
in
push
popf
test
dec
mov
add
test
push
imul
cmp
pusha
xchg
and
xchg
adc
mov
pop
pop
dec
out
or
in
pop
pop
sbb
sbb
dec
sbb
sti
divb
xchg
mov
and
dec
adc
dec
popf
ret
sbb
rorb
outsl
int
in
imul
mov
or
call
in
mov
xor
fiaddl
sbb
outsb
add
popf
lret
push
hlt
dec
sbb
xchg
rorb
inc
inc
push
mov
sbb
lcall
or
cltd
mov
rcll
xchg
movsb
pop
mov
shl
lds
stc
jne
pop
or
imul
stc
xor
fadds
insl
mov
sbb
dec
and
xor
inc
push
ja
fbstp
insl
cmp
inc
loopne
scas
inc
mov
mov
pop
fstps
pop
adc
mov
pop
mov
and
push
dec
addr16
shl
dec
xchg
dec
inc
cmpsl
jecxz
andb
cmp
int3
call
daa
mov
inc
adc
repnz
pushl
push
mov
jge
outsl
enter
xchg
ds
insb
sub
mov
in
shrl
dec
aam
ds
testl
cmp
leave
dec
jns
lds
jns
push
in
ret
mov
mov
add
xor
add
repnz
dec
mov
mov
or
and
cltd
mov
dec
lods
lock
adc
pop
sbb
fistpl
popf
gs
clc
dec
sbb
icebp
dec
nop
aad
outsl
lret
jo
xlat
sbb
mov
pop
jno
xor
pop
andl
xlat
ljmp
int3
popa
inc
add
cmp
ds
sub
sarb
xor
or
in
movsb
or
push
rolb
fisttps
sarb
sbb
andb
scas
sbb
lock
push
enter
fisubrl
sub
fdivrl
and
and
sbb
test
fistpll
clc
add
pop
cmp
sbb
test
dec
sub
mov
xor
add
inc
pop
pushf
loop
bound
js
adc
neg
pop
sti
add
loope
xor
hlt
dec
or
test
imul
mov
cwtl
shl
dec
pop
xor
je
jne
inc
fdivp
pop
aas
sub
dec
cld
loopne
jmp
sub
add
add
mov
rcll
cwtl
adc
mov
lahf
dec
or
mov
mov
push
add
inc
insb
xor
push
xchg
adc
xor
push
mov
push
pop
jg
xor
mov
pause
pop
sub
cs
rcrb
push
jecxz
in
mov
add
push
sar
das
or
in
xchg
aam
cmp
cmpl
pop
push
hlt
sbb
in
out
mul
jl
lret
jmp
push
test
sbb
pop
mov
lcall
lock
pop
jbe
lock
and
mov
and
std
cmc
adc
fimull
push
outsb
sub
outsb
cmpsb
xchg
pop
mov
fildll
jecxz
mov
insl
das
sub
xchg
sbb
add
rclb
cmp
mov
out
jne
loope
jae
dec
or
ret
pushf
sub
mov
and
xor
jae
je
test
jne
cmp
mov
iret
sub
aaa
dec
and
sbb
out
xorl
jmp
pop
xchg
mov
aas
mov
xlat
lods
or
add
aas
jnp
pop
inc
inc
into
push
add
push
push
add
inc
out
and
pop
mov
and
add
jne
push
jecxz
jae
movsl
cmp
into
dec
mov
jp
lock
scas
dec
hlt
xchg
lods
sub
sub
and
pop
cmp
push
adc
jmp
cmp
std
int3
push
jo
aad
outsl
call
or
mov
not
out
lret
cmp
pop
mov
scas
cld
insl
jg
in
rcr
lret
push
add
call
jp
fimuls
mov
imulb
xor
dec
jl
out
aaa
iret
dec
add
mov
mov
sbb
xchg
push
pop
sti
mul
push
fnsave
inc
fdivl
leave
pop
jge
aaa
out
lcall
jne
jb
loopne
outsb
pop
and
je
inc
mov
lods
daa
jecxz
inc
add
pop
scas
add
imul
cld
test
sbb
test
dec
cmpsl
push
sub
or
gs
xor
adc
hlt
insl
in
scas
inc
add
adc
les
mov
sbb
xchg
inc
jp
shlb
sbb
cmp
adc
shlb
dec
cmp
mov
lock
aad
pop
push
bound
add
sbb
dec
pop
or
imul
fimuls
push
aas
push
jl
ljmp
add
fmuls
cld
add
popa
mov
popf
cmp
ljmp
stos
mov
or
cmp
jns
dec
in
push
xor
add
jnp
xchg
and
cmpsb
fcmovnbe
sbb
mov
sub
mov
xor
jecxz
and
pop
fwait
pop
hlt
sub
sub
leave
lea
sbb
jg
cmpsl
push
imul
mov
or
pop
loopne
xchg
mov
lods
iret
lea
inc
push
inc
cltd
shrd
repnz
pop
outsl
bound
aas
rcll
dec
lret
cmp
idivb
jmp
mov
scas
or
or
xor
inc
mov
pop
out
scas
popf
clc
shlb
fisubs
out
xchg
cmp
and
in
pop
adc
xor
xchg
pop
xchg
repnz
sub
cmp
and
int
ja
subb
fists
pusha
xchg
pop
mov
call
add
push
jne
adc
mov
daa
movsb
pop
lret
movsb
pop
les
push
mov
sbb
ret
mov
pop
pop
clc
shll
loopne
stos
outsl
add
inc
jp
stos
push
xor
push
push
add
bound
push
jnp
cli
or
sahf
xor
lret
fnstsw
xchg
insl
popa
bound
mov
push
mov
inc
xchg
and
das
adc
and
cwtl
push
or
pushf
dec
pop
and
sub
sbb
repz
mov
sbb
in
popa
sbb
mov
fwait
xor
out
cmp
add
hlt
xchg
cs
mov
xor
cmpsl
mov
pop
mov
push
and
jmp
out
xor
and
out
jbe
jbe
icebp
roll
bound
sbb
sbb
sbbl
mov
clc
or
popa
mov
int3
jmp
rclb
push
push
mov
pop
cmp
inc
arpl
push
adc
shrl
icebp
mov
imul
push
shl
pop
adc
inc
scas
push
jge
iret
repz
fildl
loopne
leave
fcomps
push
in
adc
xchg
sub
mov
repnz
xchg
cld
insl
cli
push
pop
jg
ret
aam
lret
lret
mov
or
in
inc
sub
sahf
jl
sub
bound
imul
inc
ja
jae
push
andl
shll
add
mov
movsl
cmpsl
add
and
mov
rcrb
sub
mov
imul
test
ss
mov
xchg
enter
sbb
dec
pop
mov
push
cltd
int
testb
push
lds
adc
add
test
xlat
fnstenv
and
jmp
es
cmp
xchg
mov
cwtl
jge
lcall
lahf
int3
clc
repnz
flds
addr16
add
insb
mov
std
addr16
cmp
cmp
push
fldenv
sbb
dec
cld
jge
stos
lcall
xchg
mov
dec
std
in
adc
mov
jecxz
mov
or
popa
outsb
jle
lds
xor
push
xor
fisttpl
or
mov
push
or
or
xchg
test
std
out
mov
mov
dec
mov
les
and
test
test
push
in
aad
fucomp
inc
outsl
arpl
mov
inc
dec
cmc
jg
mov
fs
pop
stos
cmc
sbb
pop
test
iret
fsubl
rcrb
clc
roll
ficoml
adc
cmp
out
fs
inc
xchg
add
mov
xor
push
cmpsb
jmp
arpl
ds
jp
mov
clc
mov
aam
mov
inc
pop
stos
popa
adc
leave
pop
push
cmp
xchg
cmc
cwtl
push
add
aad
mov
xchg
fsub
pop
sar
jp
cmc
xchg
loop
stos
pop
pop
sbb
fisubl
cmpsl
inc
xchg
test
jmp
leave
aam
cmp
jmp
inc
jl
test
iret
in
insl
out
mov
test
sbb
dec
xlat
inc
jl
test
imul
sbb
xchg
aam
xchg
out
jns
stc
outsb
insl
imul
je
outsb
ljmp
cs
ficomps
dec
jp
push
sbb
sub
dec
lret
outsb
ljmp
cs
ficomps
dec
jp
push
sbb
sub
dec
lret
outsb
ljmp
cs
ficomps
dec
jp
push
sbb
sub
dec
lret
outsb
ljmp
scas
push
pop
xor
push
jp
sbb
inc
lds
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
out
push
aad
pop
push
jp
mov
jno
add
push
pop
add
add
mov
jl
popl
popl
or
pop
add
xchg
add
add
add
xchg
add
add
je
faddl
add
jns
pop
add
add
add
add
add
add
dec
add
sub
and
cmc
add
add
bound
leave
add
mov
add
add
add
pop
add
bound
enter
cltd
add
add
inc
add
add
add
popa
add
add
add
sub
sbb
movsb
add
mov
add
mov
add
add
add
pop
add
add
and
jns
adc
add
add
cmp
js
js
gs
add
add
pop
add
add
add
fiadds
sub
cmp
pop
add
add
add
add
jnp
sbb
ljmp
add
add
add
addb
add
add
add
add
add
inc
add
add
add
mov
add
add
add
add
add
pop
add
add
add
add
add
add
mov
add
pop
add
add
add
sub
push
add
add
add
add
add
inc
add
add
pop
add
push
add
add
jl
daa
add
js
push
add
add
add
add
add
add
add
add
add
add
add
add
cltd
add
xor
daa
add
jnp
in
xchg
ljmp
add
add
pop
add
imul
sbb
mov
add
jns
pop
add
add
lcall
add
jnp
lods
add
lea
add
dec
add
add
bound
mov
inc
add
sbb
popl
js
lret
add
add
fadds
fiaddl
enter
add
add
add
add
add
daa
add
add
add
add
add
daa
add
jne
in
outsb
add
sbb
pop
add
add
add
push
add
or
add
add
add
add
add
xchg
add
jnp
je
imul
cmp
xchg
add
push
add
add
add
add
add
add
add
jnp
js
pop
add
add
add
add
add
add
add
add
ja
sbb
stc
add
add
imul
or
jg
jne
popa
add
enter
iret
add
add
add
add
add
or
sbb
add
add
add
add
sldt
mov
add
add
push
jne
jnp
cmp
xchg
add
add
adc
add
jnp
adc
stc
add
add
add
add
add
lret
add
add
fiaddl
sbb
mov
outsl
add
jle
add
jl
inc
add
add
add
add
adc
icebp
add
int
pop
add
jnp
in
add
add
add
addb
add
add
add
add
add
add
outsl
add
jle
or
cs
add
xchg
add
add
add
ljmp
add
add
cmp
push
rol
mov
test
repz
insl
jge
lret
sbb
ss
pop
bound
push
scas
inc
iret
sub
xlat
push
outsl
cmpsb
sahf
mov
inc
nop
loopne
or
jne
cs
lret
pop
movups
lret
movsl
and
fidivrl
imul
fs
sub
hlt
repnz
add
xchg
cs
ss
out
push
xor
or
bound
mov
cmp
ja
sbb
xchg
cmp
leave
test
pop
fisubl
jl
ret
mov
sub
and
cli
out
sub
sub
mov
in
movsl
je
dec
stos
insb
test
or
cld
mov
orb
iret
inc
scas
adc
pop
movsl
cmp
mov
pop
pop
in
mov
xchg
fsts
jl
jmp
and
mov
insb
cmp
outsb
sahf
subl
jle
jb
ds
mov
std
sahf
in
pop
js
add
enter
adc
insl
adc
in
pop
aam
pop
gs
push
cmpsl
fisttpll
xor
and
push
mov
orl
xor
mov
mov
pop
mov
mov
mov
push
jmp
xor
jo
sbbl
mov
outsl
and
ret
dec
add
mov
ljmp
ds
add
into
out
dec
push
mov
enter
pop
mov
popf
dec
sub
icebp
xchg
inc
lods
aaa
mov
mov
std
frstor
add
mov
inc
jno
sarb
icebp
aam
mov
xor
and
dec
or
mov
mov
test
sub
adc
test
adc
sub
dec
ss
or
adc
mov
std
fimull
clc
rolb
rolb
add
loop
in
call
jge
decb
cld
mov
shrb
cmp
xchg
or
loopne
sub
pop
pusha
icebp
pop
push
movsl
push
sbb
out
xor
xchg
cmp
adcb
leave
lret
add
xchg
stos
inc
popa
push
pop
mov
push
cmc
enter
das
out
cmc
cwtl
mov
sub
lcall
mov
pop
lods
mov
sbb
xchg
cltd
cmc
mov
dec
cli
pushf
sub
cmp
or
addr16
jp
jg
push
filds
jns
pop
xchg
xchg
mov
fwait
mov
mov
push
add
bound
ret
cmp
jo
push
push
cld
add
js
jne
ret
dec
jb
leave
nop
dec
daa
dec
xor
inc
cli
gs
push
and
out
pop
aaa
pop
out
and
inc
std
out
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
