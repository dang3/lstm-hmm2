call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pop
ret
jnp
imul
ljmp
xchg
inc
sub
jmp
fwait
add
xor
ret
pop
loop
repnz
sub
lcall
adc
ret
jmp
subb
mov
call
jb
inc
stc
jge
push
divl
xor
lea
mov
loope
add
movsb
aaa
neg
lds
lock
mov
sti
test
or
mov
cmpsb
repnz
arpl
jmp
mov
lcall
rorb
dec
inc
xor
sbb
mov
jmp
mov
into
shlb
xchg
mov
sahf
cs
in
or
ficompl
adc
in
mov
and
pop
testb
addl
sti
mov
scas
mov
adc
mov
jp
xchg
or
mul
pop
xlat
push
push
call
jb
jae
pop
fcom
mov
ret
jnp
imul
xorb
mov
push
push
lea
jb
add
pop
xor
adc
dec
in
sub
cwtl
es
or
popa
shlb
into
jae
ret
or
or
into
aad
mov
cmp
sbb
rolb
bound
mov
sbbl
orb
cmp
lret
push
sti
jmp
fwait
add
xor
dec
sarb
imul
orb
cmp
lret
push
sti
jmp
fwait
add
xor
in
fwait
mov
dec
jecxz
push
fmull
or
sti
shlb
push
or
push
adc
rcr
loopne
icebp
inc
xor
add
enter
lret
mov
fs
mov
enter
pop
sbb
push
mov
mov
cmp
xchg
adc
outsb
push
imul
fistl
inc
cmpsl
loop
sbb
fmull
int3
test
jge
cmp
mov
inc
dec
mov
mov
outsl
dec
mov
jbe
mov
xor
xchg
or
cmp
outsb
sbb
out
jecxz
sahf
mov
push
lret
adc
testb
out
add
insl
incl
lea
movsl
adc
or
dec
movsb
pushf
loopne
inc
sub
inc
cltd
mov
and
or
aas
sbb
push
jmp
mov
and
jg
and
adc
mov
or
repnz
xchg
mov
frstor
pop
sub
mov
scas
loopne
dec
xchg
jnp
sarb
mov
and
mov
add
fbld
hlt
je
sti
into
shlb
lahf
aad
push
aad
xchg
cmp
sbb
arpl
fdiv
push
rolb
cmpsl
pushf
iret
rcrl
mov
call
adc
out
std
je
sbbl
pop
popf
pop
push
cmp
jo
call
and
xchg
pushf
add
mov
sbb
pop
inc
enter
xchg
test
ss
fdivrl
or
xchg
sbb
dec
sub
lds
fdivrs
cli
inc
inc
mov
sahf
pop
inc
adc
dec
pop
les
fidivrl
xchg
mov
loop
mov
stos
aaa
ret
push
subl
mov
dec
aam
stos
movsb
pop
movsl
and
mov
xchg
sbb
or
popa
shrb
sub
cltd
xchg
ljmp
cs
mov
scas
jnp
mov
shll
pop
sarb
xchg
in
int3
jne
imull
mov
pop
stos
std
mov
sub
dec
frndint
out
push
daa
ds
aaa
push
ret
lds
lea
adc
in
xchg
adc
add
xor
cmp
sub
ficoms
ja
jle
jp
movsb
mov
in
sub
orb
call
sbb
jg
enter
imul
mov
decl
jl
inc
xchg
cmpl
inc
aad
shrb
sarb
rclb
add
bound
sbb
sahf
std
je
sub
fldl
in
inc
mov
fnstsw
sub
sbb
and
dec
xlat
call
cld
add
pop
aaa
out
cmc
mov
mov
cld
adc
cli
pusha
hlt
cltd
xor
xchg
push
outsl
loop
push
jae
xor
mov
push
cmp
cmp
out
stos
cmp
xchg
cmpsl
pop
push
hlt
test
aam
movsb
mov
and
and
xor
jae
pop
mov
jbe
or
lret
adc
or
lahf
gs
mov
stos
sub
std
cmp
inc
fcompl
ret
lret
loop
or
mov
out
int3
and
insb
mov
adc
sub
fcomps
and
ds
or
mov
mov
and
lcall
in
aaa
shll
pushf
sti
push
cwtl
push
mov
je
sbb
and
dec
mov
sbb
cmp
lcall
xchg
jno
int3
or
popf
pop
mov
in
inc
sub
add
pushf
out
push
xchg
xchg
mov
mov
mov
mov
test
mov
dec
insl
cmpsb
cmp
sbb
pop
jmp
or
scas
inc
xchg
mov
jb
test
push
pop
out
mov
inc
adc
xchg
mov
mov
xor
cmp
cmp
sub
push
jno
jge
add
iret
cmpsb
imul
jle
mov
out
ds
test
push
dec
mov
jmp
cs
mov
push
jae
mov
inc
rorb
popa
sbb
inc
inc
inc
lea
fildl
add
add
leave
mov
lea
mov
les
mov
lea
xor
int
jmp
xlat
mov
inc
roll
jnp
xchg
add
add
out
dec
das
bound
mov
jmp
loop
adc
pop
cltd
repz
mov
repz
xchg
insb
add
mov
fldt
cli
sbb
lock
aad
dec
fwait
js
mov
cmp
mov
insb
stos
insl
ljmp
subb
repnz
fmul
mov
lahf
aad
add
popa
xchg
adc
inc
test
mov
jle
mov
xchg
call
sbb
jl
maskmovq
testl
xor
adc
rcrl
fldcw
shll
stc
xor
jo
or
xor
mov
push
mov
dec
or
mov
out
mov
subb
sbb
mov
dec
dec
mov
pop
jns
flds
repnz
jns
lahf
dec
pusha
or
mov
mov
push
pop
movsb
add
dec
aas
sub
in
aad
into
repz
faddp
in
inc
or
mov
mov
push
adc
dec
adc
push
pusha
dec
fcomps
in
cmpsb
jmp
and
cld
and
repnz
add
fcmovb
lds
or
fs
push
mov
push
adc
shrb
xor
pop
daa
aad
add
sub
movsl
rcrl
inc
shlb
xor
leave
inc
das
lahf
adcb
fldt
mov
cmp
xchg
mov
pop
add
xlat
ret
or
pop
mov
test
fstpl
xchg
jo
fistps
mov
and
loope
daa
sbb
or
push
bound
fsubl
pushf
inc
jmp
mov
push
inc
mov
pop
in
insl
lcall
call
fsub
sti
push
sbb
fdivr
mov
xor
cmp
ss
or
cmp
jo
mov
mov
fnstenv
les
pop
push
pop
iret
pop
hlt
daa
les
jl
push
jmp
imul
stc
jo
dec
dec
mov
arpl
outsl
cs
jmp
adc
push
push
pop
push
push
mov
mov
xor
mov
lods
sbb
mov
sahf
test
sub
sub
bound
mov
fdivrl
xchg
fisubl
mov
and
in
inc
ja
gs
jns
mov
push
ret
cmp
cmp
ds
xor
sbb
cmp
mov
mov
out
test
aas
fs
addr16
jmp
stos
xchg
movsb
jns
arpl
mov
pop
movsb
dec
jbe
jae
clc
mov
out
inc
iret
mov
out
loope
push
dec
push
in
pushf
push
aad
cmp
dec
jae
dec
fsubrp
mov
mov
xor
jl
int
xchg
adc
pop
and
adcl
push
int
add
or
pop
mov
fucomip
push
mov
adcl
iret
mov
std
fwait
shrl
mov
and
scas
scas
mov
shrl
lcall
add
enter
mov
add
or
cmp
push
sahf
pop
es
mov
pop
clc
mov
cmp
movl
leave
lds
xchg
mov
sub
lods
mov
jo
mov
xor
mov
movsb
stos
sub
and
jns
std
add
push
loopne
int
pop
push
in
sbb
cld
add
test
mov
xor
mov
jg
mov
xchg
iret
mov
push
pop
leave
bound
xor
adc
mov
arpl
lret
rorb
stos
enter
into
imul
aas
into
jbe
imul
inc
subl
sarb
pop
fcmove
scas
aam
in
mov
lcall
sub
cmp
test
outsb
xchg
ffreep
push
dec
fstp
inc
aaa
mov
aaa
push
sub
sbb
push
jbe
mov
sbb
jo
jae
jmp
xor
je
xchg
xchg
sbb
mov
inc
and
sub
push
mov
stos
ja
mov
sbb
je
hlt
mov
inc
jecxz
mov
test
xor
or
push
jg
dec
sahf
rcl
cld
into
xor
clc
fcomip
pusha
dec
adc
mov
push
enter
inc
xchg
push
mov
stos
xchg
xor
cmc
mov
int3
int
int3
leave
pop
jno
popa
mov
test
hlt
imul
pop
movsl
add
sub
add
cwtd
lods
jmp
ss
add
int3
mov
inc
addl
mov
fists
sub
fstpl
xchg
push
les
popf
sbb
pop
sbb
dec
cmp
or
fdivl
sub
xchg
mov
clc
and
add
jbe
mov
inc
lods
pop
push
scas
cmc
movsl
iret
scas
lret
inc
mov
fsubs
inc
stc
lahf
jo
fptan
mov
je
jecxz
idivl
out
xchg
and
addr16
jnp
pusha
push
adc
pcmpeqd
cmpsb
adc
pop
mov
cmp
adcb
pop
inc
addb
jp
loopne
scas
popa
add
clc
xchg
scas
fildl
into
mov
shll
fimull
push
iret
fnclex
inc
aam
int
pusha
pop
pop
jp
std
stc
mov
sub
adc
jae
adc
outsb
icebp
insl
mov
xchg
or
bnd
add
scas
lock
mov
lods
lods
out
jnp
sbb
insb
ficoml
mov
xchg
test
dec
mov
aaa
fdiv
add
jns
push
cli
lret
xor
pop
std
loop
call
inc
mov
fnstsw
xchg
dec
pop
subl
jmp
out
jne
test
jnp
xor
out
stos
cmp
movsl
ret
push
cmpl
movsb
je
pop
push
aam
movsb
js
inc
mov
test
in
dec
push
rcrl
out
sub
mov
std
icebp
xor
insl
cmc
add
pop
call
jecxz
outsb
push
push
inc
outsl
ja
fisubrl
insb
mov
in
sub
jp
lods
or
jl
dec
popa
outsl
add
ss
int
adc
test
pop
fsubl
dec
pushf
and
les
ficomps
jge
movsb
out
jecxz
adc
arpl
push
jl
mov
push
sarb
push
insl
fstpl
ret
push
test
and
sbb
aad
in
loope
xor
jns
cwtl
stos
pop
aaa
lods
add
inc
xchg
or
mov
jmp
pusha
ja
jo
push
ret
or
shl
aas
adc
call
in
and
mov
mov
shlb
shlb
js
inc
lock
rcrl
vpcmpgtw
test
mov
sar
or
cmp
in
dec
int3
leave
sbb
dec
sub
lods
test
pop
notb
cmp
iret
add
popf
sbb
adc
push
sbbl
rcll
aaa
cmc
rcr
dec
rcr
ss
jg
push
mov
fwait
xchg
ficoms
push
sbb
mov
mov
inc
mov
xor
xor
xor
js
mov
vcvtpd2uqq
sbb
dec
jl
adc
data16
insb
loop
jp
setl
mov
xchg
fcmovne
or
leave
mov
mov
out
mov
cld
mov
ret
into
insl
cli
ss
mov
ret
mov
push
icebp
popf
push
bound
fldl
fldt
sbbb
ret
scas
aaa
jne
inc
jg
xlat
fsub
inc
jno
or
test
dec
scas
add
lahf
bound
jmp
fdivl
fistpl
push
leave
cmp
xchg
push
popa
pop
lods
cmpsl
out
sbb
fcmove
push
loopne,pt
pop
aad
ljmp
jmp
and
insb
push
adc
call
pop
sbb
test
daa
cmpsb
out
ror
pop
call
cmp
popf
jp
data16
or
mov
fst
jp
mov
cmpsl
add
pop
loopne
outsl
push
stos
jne
test
adc
clc
and
lods
fcoms
psrld
xor
stos
jle
in
lahf
push
jne
sti
or
inc
fiadds
mov
inc
xchg
arpl
push
into
xchg
ss
roll
sbb
cmp
mov
cmpsl
ljmp
xchg
shl
movsb
sub
lret
jno
jmp
jno
adc
mov
out
leave
sub
std
imul
test
mov
ret
lods
add
pusha
les
mov
cmp
int
es
loop
dec
mov
lock
ficomps
imul
pop
sbb
movsb
cld
aaa
or
jbe
pop
or
sbb
iret
lock
shl
leave
cwtl
loopne
fldt
mov
insl
stos
cmc
lret
add
lds
dec
xchg
popa
inc
pop
xchg
or
or
sbbl
div
jno
movsb
test
insb
sub
rcl
andnps
pop
lods
mov
jnp
xlat
xor
aaa
cli
in
jo
pop
jb
incb
decb
jle
movsb
mov
xchg
inc
mov
int
int3
mov
inc
lods
popf
lods
adc
sbb
pop
pop
arpl
xor
pop
mov
out
aam
inc
lods
fdiv
mov
pop
xchg
xchg
and
jb
jae
out
fisubrs
sub
into
cmp
popa
repnz
mov
or
fsub
mov
insb
lcall
xor
xchg
and
sub
repnz
shl
ror
cmp
adc
imul
js
loope
xchg
loopne
mov
jl
or
fstl
movsl
test
cmc
nop
daa
iret
adc
and
sahf
andl
or
mov
mov
add
out
mov
sar
adcl
test
cs
jp
icebp
ret
jg
aaa
xchg
daa
mov
mov
fnstenv
fadds
inc
push
mov
inc
test
je
aas
pop
sbb
sub
aas
cmp
hlt
adc
and
neg
scas
stos
cld
mov
pop
movsl
je
in
es
lods
aas
test
jmp
add
push
inc
xchg
jne
or
lods
clc
dec
push
shll
stos
sub
sarb
add
pop
in
jl
mov
cmp
push
jo
hlt
jae
movsb
test
sub
sub
mov
push
in
rclb
fstpt
jb
nop
icebp
cmpsl
lods
pushf
out
adc
adc
mov
sbb
in
cltd
outsl
jl
mov
testl
movsb
inc
pop
popf
ret
jmp
lahf
push
imull
and
lea
xchg
rol
push
fidivrs
sbb
adc
pop
xchg
or
jge
cmp
or
mov
inc
cmp
mov
jle
jb
push
leave
ljmp
fldl
inc
sbb
add
and
ss
pop
inc
mov
jne
jp
xor
lret
pushf
xchg
mov
jl
fld
xor
call
inc
dec
ja
push
fnstenv
dec
xor
sbb
pop
cmpsb
sbb
test
jno
inc
and
das
out
adc
pop
stos
or
outsb
jg
cwtl
imul
push
fcompl
hlt
push
adc
imul
inc
xchg
push
cmc
insl
mov
ja
ds
inc
cmp
sbb
add
movsb
movsb
mov
adc
pop
adc
inc
pop
mov
xchg
jl
or
lds
in
and
sub
mov
xlat
push
movsl
lea
inc
sub
push
cmp
xchg
mov
pop
les
aad
xchg
jnp
pop
and
shl
or
mov
ljmp
mov
dec
test
sub
lods
enter
cmp
xor
into
cmp
insl
pop
or
mov
sub
jmp
out
loopne
push
shlb
xchg
and
loopne
loope
mov
cmp
inc
jb
ja
in
sbb
les
js
out
fidivrs
mov
mov
inc
mov
push
jmp
and
inc
aad
xchg
mov
xor
pop
mov
icebp
arpl
sub
movsb
dec
stc
or
stos
test
aad
xor
jnp
iret
mov
xorl
test
dec
push
mov
movnti
cld
adc
outsl
sub
test
pop
addl
test
and
inc
jo
xchg
dec
ss
scas
std
dec
mov
int3
insl
cmp
popf
inc
movsb
pop
out
and
lcall
and
jle
adc
test
dec
ljmp
mov
mov
mov
push
scas
cmp
dec
pop
push
out
adc
pop
ss
lret
inc
test
pop
stos
add
jmp
inc
mov
and
xchg
mov
xchg
pmaddwd
mov
out
movsb
repz
fdivrl
pop
cmp
fidivl
in
pop
push
xor
call
fs
sbb
leave
loopw
arpl
ret
adc
fdivs
mov
adc
cmpsb
xor
push
jg
fsubl
jo
lods
sahf
sbb
pusha
and
xchg
mov
repz
dec
mov
push
repnz
inc
and
sbb
jbe
icebp
pop
fidivs
push
and
in
jnp
mov
lret
inc
pop
lods
stos
std
fbstp
xchg
cmp
cli
in
jo
rorb
and
outsl
or
pop
not
fcmove
inc
je
gs
decb
jns
js
xchg
cmc
lock
pop
adc
jae
icebp
mov
repnz
pop
cmp
sub
dec
sbb
sbb
idivb
cmp
pop
or
mov
push
jmp
inc
rorb
aas
add
cltd
lret
mov
push
into
push
sub
mov
mov
sub
aad
mov
scas
mov
fnsave
adc
lea
push
mov
cmovno
sbb
jg
lods
ljmp
push
idivl
sub
dec
add
bound
xlat
out
add
cs
orl
mov
imul
das
and
test
mov
lods
roll
ss
jmp
pop
dec
js
xor
inc
jnp
stos
jmp
test
push
mov
xchg
jmp
sbb
xchg
loope
cli
xchg
push
int
ljmp
rcll
xchg
cmp
sarl
nop
inc
call
mov
xor
int3
scas
and
or
les
popa
loop
mov
cwtl
fcompl
dec
xchg
mov
xchg
ret
fldcw
ja
pop
fstpl
inc
cltd
test
cmp
movsb
cmpsl
push
mov
mov
jecxz
and
lret
cmp
in
xchg
in
in
test
jg
les
pop
xor
fadd
pusha
pushf
out
scas
dec
in
rorl
xchg
mov
cmp
xchg
mov
sub
jno
mov
repnz
jecxz
mov
mov
inc
adc
mov
add
xor
popf
in
ss
daa
xchg
cmp
dec
mov
push
popa
xlat
sar
outsb
lock
or
cmp
icebp
iret
icebp
or
mov
jno
cli
pop
push
pop
les
xchg
int3
sbb
mov
mov
and
bswap
shll
and
rolb
pop
add
xor
jne
js
sbbl
push
out
out
test
pushf
inc
sar
test
jnp
xor
mov
pop
out
push
jbe
adc
sbb
fidivs
xchg
shlb
xor
imul
inc
or
xchg
sub
jns
hlt
icebp
sbb
fsub
ljmp
cmp
add
insb
or
add
arpl
fidivl
aam
sbb
sbb
jle
outsb
out
pop
mov
add
jg
das
pop
dec
sbb
dec
mov
ds
out
loop
cmp
add
aaa
mov
jae
stc
pop
mov
mov
push
mov
pop
jns
pop
loope
push
pop
mov
clc
in
xchg
cs
mov
lahf
jl
push
mov
loop
mov
or
arpl
push
aad
jbe
enter
xor
mov
push
addr16
pop
inc
add
mov
js
xchg
jl
add
push
sti
dec
xlat
cld
loopne
mov
jge
mov
xchg
jle
out
lock
mov
stos
pop
out
add
pushf
loope
rcll
movsb
push
and
jno
dec
test
push
or
pop
imull
pop
in
mov
adc
das
mov
cmp
imul
orb
cmp
lret
push
sti
jmp
fwait
add
xor
dec
sarb
imul
orb
cmp
lret
push
sti
jmp
fwait
add
xor
jnp
sbb
repnz
jmp
fcmovnb
lret
push
or
jb
add
xor
pop
shlb
loop
repnz
stos
mov
inc
xor
push
jmp
in
mov
in
inc
fstl
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
and
xchg
adc
inc
into
xor
dec
out
jnp
imul
mov
dec
cmp
lret
gs
push
jmp
fwait
xor
stos
sub
dec
in
sbb
sub
sti
iret
jmp
fwait
add
stos
aaa
pop
cmc
push
mov
out
ret
js
inc
loope
xor
and
and
xchg
jle
sbb
insb
cs
insl
subb
jbe
cmpsb
add
push
mov
inc
ljmp
test
xchg
xchg
dec
mov
jp
and
mov
mov
fstps
jno
hlt
pop
in
pop
cmc
imul
cmp
inc
sbbb
sub
jne
cmp
inc
repz
aad
mov
sub
ret
push
stc
mov
push
mov
inc
aam
stc
pop
inc
mov
xor
mov
out
xor
mov
add
pop
gs
mov
add
scas
fstpl
cld
jns
out
sbb
lret
inc
sti
and
inc
fwait
xor
stos
xchg
pop
cmc
dec
dec
jnp
imul
mov
dec
cmp
test
mov
nop
in
aam
das
inc
sub
cmpsb
popf
repnz
lret
pop
in
lods
xor
sub
shlb
out
sub
cmc
in
cli
outsb
movsl
push
lock
idivb
mov
fidivrs
and
pop
cmc
dec
in
aad
lds
mov
movsl
cmp
lret
gs
push
jmp
fwait
xor
stos
add
jnp
imul
mov
movsl
cmp
stos
xor
xchg
stos
dec
push
jns
jmp
xor
call
inc
push
push
xor
push
pop
int
adc
pop
sbb
jmp
scas
and
test
pop
cmp
jge
sub
mov
mov
roll
fsubs
sub
sub
xchg
mov
dec
mov
or
cmp
fadd
ret
or
out
bound
xchg
rolb
or
pop
daa
push
insl
jne
pop
mov
test
sbb
daa
push
add
fisttpll
cs
sub
lret
loop
cmpsb
into
xchg
movsb
es
cs
call
loope
and
dec
xchg
xor
jae
loop
mov
sbb
xchg
cld
ljmp
jno
mov
jp
lahf
loopne
mov
jno,pt
arpl
xor
in
leave
cmp
mov
inc
ficoml
mov
es
out
aas
inc
ljmp
dec
pop
inc
mov
jmp
adc
shlb
sub
xchg
inc
xchg
lahf
mov
insb
sbb
push
bound
adc
jo
cmp
push
inc
out
filds
cwtl
cltd
and
mov
or
out
stos
js
add
add
push
sbb
mov
xchg
call
xchg
addr16
sub
pushf
adc
mov
pushf
les
xor
xchg
imul
lret
lahf
mov
idivb
lret
push
test
outsb
lcall
fdivrs
adc
mov
xchg
out
inc
mov
adc
shlb
popf
shrl
mov
push
cmpps
mov
ljmp
push
loopne
mov
or
jb
hlt
imul
lods
ja
lods
pop
xchg
lret
ss
sbb
xor
jne
jnp
aad
xor
aaa
cli
gs
mov
bound
add
xor
pop
mov
in
sbb
mov
sbb
cmovns
add
cmp
lret
mov
iret
subb
adc
rcrb
stc
push
in
xchg
fcoms
jmp
daa
in
in
mov
outsb
mov
pop
mov
mov
andl
stos
nop
sahf
fmul
idivb
decb
loopne
or
mov
adc
xor
mov
jmp
aas
andnps
cli
lea
loopne
and
arpl
xor
aaa
push
popf
xor
adc
lret
jl
or
sub
mov
mov
cld
adc
ss
mov
daa
addb
cmp
dec
cmp
rclb
leave
adc
hlt
lods
fldenv
shrb
in
jae
arpl
add
out
sbb
push
jl
cmc
jge
je
popf
xchg
lcall
cmp
arpl
clc
ficompl
negb
cltd
push
sbb
fs
dec
daa
lock
add
xor
push
jbe
rcrb
iret
outsl
adc
ds
loopne
orl
loope
adc
push
repz
stos
shll
cwtl
xor
jns
jmp
out
sbb
fcomp
pop
es
scas
daa
loope
sbb
aas
ror
mov
pop
or
test
mov
inc
stos
cli
pop
fwait
lcall
leave
jne
ret
movsb
push
subb
outsl
mov
push
nop
movsl
lea
fcoms
sub
jo
std
push
sub
leave
xchg
pop
jb
sbb
insl
shlb
lods
pop
out
imulb
pop
aad
iret
inc
ret
xor
add
mov
fcmovu
stos
dec
pop
orb
ss
outsl
adc
insb
add
movsb
xchg
insl
ljmp
icebp
xor
movsl
adc
mov
or
inc
pop
lock
cmp
add
jns
not
aas
scas
hlt
std
sub
out
aaa
jp
mov
jle
push
and
stos
stos
andl
leave
push
cltd
jne
xor
and
add
pop
inc
lock
or
popf
lret
outsl
mov
out
out
add
movsb
icebp
fdivrl
mov
insb
ret
and
ss
ljmp
mov
xchg
cmp
mov
scas
cwtl
mov
scas
pop
nop
inc
mov
mov
fdivrs
aam
loope
push
push
mov
movsl
xchg
enter
outsl
inc
or
mov
test
aad
sub
cmpsb
cwtl
xchg
push
xchg
pusha
inc
aas
fnsave
dec
xchg
cmpsl
xchg
std
cmpsb
mov
out
push
fists
movsb
mov
xchg
and
loope
pop
nopl
in
sarl
int3
xor
and
push
push
inc
pushf
mov
movsl
bound
ret
out
sbb
fdivrs
lds
pop
jl
xor
lock
dec
daa
sub
inc
sub
jp
test
lock
lods
dec
daa
dec
or
test
inc
fs
mov
mov
js
movsb
xchg
bound
iret
push
xor
testl
mov
mov
mov
pop
mov
hlt
pop
or
sbb
xor
sbb
push
fwait
ja
mov
pop
iret
fs
fstps
xchg
out
jbe
sub
xchg
std
sub
cmpsb
ja
lds
in
xchg
test
cs
fdivrl
pop
scas
xchg
call
cmpsb
xor
xchg
lahf
pop
jmp
pop
test
clc
or
outsl
hlt
shlb
xchg
loopne
sbb
mov
in
enter
fstps
cmp
fsubl
push
sahf
mov
or
in
fidivl
or
sub
mov
cwtl
negl
sbb
popf
stos
mov
lea
cwtl
mov
and
test
outsl
and
filds
lods
fistl
pop
int
push
fwait
add
jp
pushf
or
adc
pushf
loopne
cmp
or
jle
push
int3
inc
mov
sub
fwait
std
push
push
cmp
das
or
xchg
inc
sbb
les
sarb
mov
push
mov
mov
lock
ss
push
jo
mov
shr
cmpsb
push
out
mov
out
inc
xchg
movsl
adc
popl
add
cmp
clc
ss
icebp
jmp
clc
xor
xchg
je
jno
jns
cmp
sahf
adc
lds
adc
pop
shl
leave
jbe
xor
push
and
lret
sbb
xor
pop
pop
pop
loop
xchg
pop
loopne
inc
add
les
dec
xchg
pop
lods
pop
xchg
jmp
add
repnz
scas
cli
inc
and
repz
insb
push
push
fs
push
xor
pop
popa
pop
pop
test
scas
out
call
adc
sbbl
lret
loop
push
aas
xchg
decb
mov
gs
clc
loope
in
roll
je
sbb
and
push
insl
sub
adc
loopne
clc
shrb
in
clc
shr
andl
popa
aaa
out
add
arpl
pop
and
in
jae
lcall
divb
jmp
push
mov
clc
pop
cmp
xchg
stos
adc
dec
jne
add
ret
data16
mov
imul
mov
mov
push
cmp
add
mov
mov
jmp
or
das
sarl
lods
or
std
lret
clc
xchg
sbb
mov
jecxz
inc
jecxz
mov
mov
ret
fimull
dec
mov
cmp
jns
das
pop
mov
jp
lret
push
push
sub
mov
jo
push
mov
push
mov
push
movsl
or
sbb
ds
mov
mov
dec
cli
push
repz
call
add
push
movb
into
push
insl
sbb
test
cmp
gs
scas
insl
push
sub
jns
cmc
loope
dec
mov
mov
inc
or
jl
sarl
std
shll
jns
cwtl
mov
xchg
mov
sub
sbb
ljmp
xor
fs
push
dec
pop
fidivl
pop
adc
ret
stos
pop
pop
dec
std
mov
cmc
mov
push
insl
mov
repz
jae
addr16
jl
popf
adc
addr16
or
and
or
insl
ljmp
popa
nop
gs
xchg
mov
nop
aas
ljmp
mov
mov
aam
mov
jnp
jmp
out
hlt
gs
in
add
enter
or
mov
rorb
inc
adc
pusha
int
push
push
mov
orb
scas
add
sub
dec
xor
mov
mov
insl
daa
xlat
push
cltd
test
inc
inc
xchg
pop
lds
dec
in
and
stos
fsubrs
rolb
nop
cmp
xchg
out
cmp
and
adc
and
sub
sub
add
cmpsl
add
lahf
xor
decb
dec
dec
push
stos
aad
stos
push
xchg
sub
mov
dec
mov
lods
fldt
adc
je
xchg
shll
js
cmp
xor
call
rcrb
push
add
add
adc
sti
fucomi
adc
xchg
sub
and
mov
push
adc
lret
loope
fists
test
sbb
jns
and
data16
or
ss
stos
mov
xchg
call
fdivs
adc
add
test
imul
cmp
scas
adc
sub
push
test
loopne
cmp
xchg
push
xchg
inc
out
loop
fildl
mov
outsl
int
clc
hlt
mov
push
or
mov
sub
or
in
into
rolb
out
js
lret
popf
repz
repnz
imul
mov
sbb
in
dec
call
or
cmp
test
xor
adc
pop
in
jl
mull
add
mov
jbe
and
je
loopne
sti
or
mov
aaa
loopne
inc
inc
in
sbb
jl
and
scas
data16
pop
mov
andb
jecxz
mov
xor
xchg
jle
or
das
call
aam
stc
les
cmc
ja
ror
out
fwait
dec
xor
sbb
add
cmp
dec
cli
push
or
xchg
subl
psrlq
push
int3
test
jae
sub
mov
ja
enter
out
or
aam
jo
repz
test
mov
inc
and
mov
cmp
fcmovne
lock
and
addr16
push
dec
push
adcb
dec
sub
popa
jmp
mov
sbb
mov
mov
popa
addr16
insl
add
rclb
cmpsb
in
pop
cmpsl
mov
outsb
push
addr16
jge
imul
and
gs
inc
jmp
lcall
pop
in
mov
mov
dec
leave
add
cld
adc
pop
scas
cmpsl
inc
sub
jp
popf
mov
stos
adc
pop
das
xor
inc
fucomi
mov
rcll
or
outsl
mov
lret
test
int3
fmul
push
xor
outsb
jb
push
mov
insb
mov
lds
out
sub
sbb
adc
int
fmuls
and
and
fisubs
and
jbe
lea
mov
xchg
lahf
aaa
ljmp
cltd
and
mov
jge
pushf
mov
hlt
inc
mov
aaa
adc
lahf
daa
ret
arpl
fdivl
test
decl
loope
cmp
scas
stos
push
sbb
es
ljmp
dec
rclb
pop
enter
inc
fmuls
inc
xor
xor
xchg
fnstcw
xor
dec
gs
movsl
xchg
and
xor
sbb
dec
pusha
mov
ljmp
or
or
dec
addl
adc
mov
adc
out
shld
lea
or
adc
dec
idivb
ret
xchg
out
pushl
outsl
jbe
jae
movsl
sbb
shr
clc
dec
into
test
jg
mov
lret
dec
mov
and
pushf
xchg
leave
xor
je
pop
or
or
or
lahf
or
pop
data16
lret
mov
pop
mov
pusha
movsw
cmpsl
sbbl
pop
nop
icebp
pop
movsb
add
insb
mov
mov
daa
sti
xor
scas
jne
jnp
push
sub
jecxz
mov
jo
or
add
mov
xlat
test
pusha
cmp
add
movsl
lods
movb
movsl
or
cltd
ja
dec
cli
std
ljmp
addl
mulb
mov
scas
jge
xor
or
add
fildll
fcoms
stc
cmp
jo
into
sbb
je
outsl
lret
jge
aaa
mov
fldt
cli
test
repz
jne
mov
in
xlat
jg
mov
les
and
jle
gs
inc
xor
xchg
sub
nopl
jbe
aam
cmp
cltd
mov
lret
mov
xor
sbb
iret
sarl
xchg
pop
jmp
push
push
cmpsl
adc
out
lcall
dec
xor
arpl
cltd
mov
jno
in
andps
xchg
dec
lods
inc
popa
dec
in
sti
dec
in
int
sub
cmp
adc
add
cmp
fisubrs
xchg
es
add
imul
idivb
inc
mov
xchg
insl
sub
or
ja
cmp
mov
cwtl
insl
sbb
xor
xor
fwait
jl
lea
and
cmpsl
push
pop
dec
ret
fisubs
cmp
shrl
push
cs
ljmp
inc
mov
or
jns
push
sbb
testb
icebp
mov
fsubrl
sarb
ficompl
inc
pop
fdivrl
std
xchg
mov
cmp
add
lret
xchg
adc
repnz
jl
fisubl
fmul
adc
pop
jb
adc
add
lods
pop
popf
into
xor
pop
pop
push
push
sub
pop
and
jl
rcll
fbld
pop
sbb
data16
xchg
icebp
jne
out
xchg
xchg
dec
push
repnz
jnp
pop
fidivl
lods
scas
xor
push
lret
add
cmc
sbb
in
xchg
sbb
pop
dec
mov
pusha
xlat
inc
push
or
maskmovq
js
xchg
cmpsl
mov
mov
insl
sbb
adc
les
daa
test
or
xor
cmp
sbb
sbb
inc
in
lret
scas
adc
lea
cmp
xorl
inc
add
push
mov
and
adc
adc
lcall
mov
invd
push
mov
subb
aad
dec
out
in
adc
addb
ds
lock
shrb
mov
int3
mov
cmp
push
jb
xchg
in
pop
mov
out
cmc
mov
mov
xor
mov
dec
inc
cli
pop
sahf
icebp
pop
lock
cli
bound
mov
inc
mov
add
outsl
jno
pusha
pop
or
jnp
andb
jle
rcrb
xor
xchg
clc
hlt
sub
mov
xchg
inc
lea
lods
push
push
sti
int3
mov
orb
xor
jmp
jl
pushf
cltd
dec
lea
pop
mov
les
adcl
cltd
mov
sbb
icebp
lods
push
and
sub
and
in
mov
jb
mov
rcr
jns
inc
jecxz
sbb
negb
adc
das
lret
mov
xor
and
outsb
jge
jno
dec
inc
scas
fistpl
cmp
dec
mov
push
fwait
mov
lods
popa
and
mov
or
sarb
sti
mov
inc
sbb
pop
test
jp
roll
int
jp
test
xlat
test
dec
fnstsw
mov
sub
xlat
sbb
test
pop
pop
arpl
popa
addr16
mov
push
dec
sbb
xor
cltd
fwait
sub
inc
inc
sbb
dec
insb
ret
ficomps
outsl
jge
cmp
nop
inc
lret
rcll
mov
lret
inc
inc
iret
das
jge
shlb
jo
in
dec
add
mov
xor
dec
mov
in
pop
cmc
or
aad
enter
jbe
in
pop
andb
out
in
sub
cmpb
jae
insb
out
jbe
lret
sbb
cmpsl
xlat
bound
into
mov
fisttpl
inc
inc
or
shll
push
lods
mov
mov
lock
jns
jle
scas
sbb
lret
imul
sub
aas
ds
sub
or
push
mov
idivl
in
stos
cmpsb
or
out
push
jp
jmp
push
sub
or
mov
mov
push
and
jo
lcall
call
mov
sbb
daa
add
gs
insb
stc
clc
fildl
out
fbstp
mov
inc
mov
bound
fimuls
lcall
jg
pop
lcall
ds
jmp
ljmp
and
jbe
aaa
cmp
outsb
je,pt
je
pop
push
cmp
mov
ja
sbb
pop
mov
repnz
dec
stos
dec
inc
inc
ljmp
call
or
pop
fsubs
cld
test
xor
lret
or
cs
std
push
idivb
adcl
ficompl
inc
std
inc
pusha
outsl
in
aam
cmpsb
stc
lods
stos
outsb
jecxz
mov
mov
test
sahf
mov
aad
jne
xor
pushf
ror
jbe
and
in
cmp
or
ja
fcmovnb
push
insb
gs
push
push
nop
xor
andb
bound
out
jns
int
pop
xchg
or
fidivrl
mov
jl
inc
jns,pt
fsubrs
int3
mov
cmp
cmp
mov
call
xor
ja
out
mov
pop
push
into
inc
inc
cmp
arpl
out
dec
ljmp
daa
nop
movsl
cld
popa
pop
test
and
mov
jnp
xchg
es
xchg
mov
mov
pushf
inc
pushf
aaa
mov
mov
or
inc
xchg
xchg
push
and
jle
adc
shl
lods
jp
pop
pop
mov
std
inc
mov
inc
jo
sub
les
mov
mov
jp
out
shl
scas
repz
xchg
lods
push
scas
js
xor
pop
push
jmp
into
into
mov
fcomps
mov
xor
fwait
pop
decb
or
out
into
imul
pop
sarl
add
das
out
addr16
mov
aaa
adc
cwtl
mov
scas
int
inc
xor
push
aam
add
sub
leave
jno
aad
push
pop
xchg
out
pop
in
xchg
int3
or
adc
dec
shlb
xchg
inc
mov
xchg
jl
push
cmp
mov
sub
xchg
ret
aam
mov
mov
xlat
fcompl
sub
call
orb
ljmp
lret
sub
fcmovnb
popa
push
sub
scas
pushf
xor
arpl
add
pop
pop
lods
and
add
dec
mov
pop
nop
fistl
mov
and
pop
adc
sbb
push
mov
adcb
mov
hlt
and
stc
pop
or
out
xchg
or
push
push
ljmp
lcall
lret
in
aad
ja
and
or
push
sbb
into
jle
insl
fsts
jle
jp
add
pop
add
xor
mov
xor
push
scas
icebp
dec
into
jo
out
or
pop
fadds
dec
out
sbb
sahf
outsl
push
out
iret
loop
into
ja
aam
bound
mov
subl
testl
jo
push
adc
sbb
movsb
enter
xlat
das
or
bswap
outsb
cmpsl
fistps
cmp
jo
jecxz
mov
dec
inc
inc
mov
outsb
sbb
inc
fwait
lret
mov
jns
pop
fndisi(8087
mov
dec
mov
and
dec
mov
and
jecxz
cli
jnp
insb
dec
mov
mov
cmp
arpl
sbb
push
test
lock
mov
jge
outsb
jno
or
fucom
js
push
mov
aas
repnz
shll
push
jno
loope
mov
mov
mov
lds
jl
xchg
insb
mov
mov
std
out
aaa
cwtl
std
cmc
mov
aas
ja
cmp
inc
xchg
loope
mov
jns
movsl
mov
scas
das
cmc
mov
cmpl
movsb
sub
iret
rcll
jns
and
loopne
mov
mov
bound
pop
insb
in
outsl
cld
and
inc
mov
pop
inc
add
jbe
mov
repnz
dec
mov
jnp
icebp
shrb
adc
addr16
ret
icebp
xchg
jmp
repz
cmp
rcll
ja
fistl
mov
aam
push
popa
lods
adc
loop
push
cli
add
fwait
lods
cwtl
in
imul
push
jecxz
scas
dec
adc
lods
xor
cli
dec
lcall
inc
repz
dec
jge
add
mov
jb
in
imul
test
shr
mov
mov
mov
in
loopne
cmpsl
icebp
and
xor
movsl
jbe
les
inc
fwait
xor
stos
add
jnp
imul
mov
movsl
cmp
lret
gs
push
jmp
fwait
xor
stos
add
jnp
imul
mov
movsl
cmp
lret
imul
jmp
fwait
xor
stos
add
jnp
push
sbb
sub
xchg
lret
cmp
xor
sub
movsb
or
insb
int
ffree
in
sar
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jbe
idiv
into
ficomps
xchg
shl
sahf
data16
jbe
inc
dec
push
pop
daa
cs
jle
push
push
push
out
idiv
into
fisubs
mov
jle
dec
push
pop
es
push
push
push
out
idiv
into
fisubs
mov
and
xor
jl
pop
imul
out
testb
push
movsl
jge
jb
sub
pop
or
sub
xlat
mov
jnp
mov
xchg
and
and
adc
mov
pop
dec
fistpl
out
leave
mov
push
out
loop
sti
imull
leave
cmp
xor
data16
adcb
test
or
and
idiv
out
cmp
cmpsb
scas
lcall
pop
mov
inc
mov
mov
push
lock
sbb
add
scas
mov
enter
jg
mov
insl
jne
pop
jnp
psubsw
imul
dec
iret
push
stos
inc
gs
jle
push
sbb
dec
fistpl
shll
lret
pop
push
mov
into
fisubs
mov
jle
dec
push
pop
es
push
push
pop
xchg
xorl
in
sar
shr
out
push
add
pop
sub
xor
push
inc
jp
imul
mov
sahf
mov
lret
rclb
xor
sbb
sbb
xor
inc
push
push
jnp
jo
mov
imulb
xchg
jbe
inc
dec
push
pop
es
push
push
push
out
idiv
into
fisubs
mov
jle
dec
push
pop
es
push
push
push
out
repz
cmp
pmullw
test
fldenv
jno
das
mov
daa
add
sbb
mov
out
and
mov
push
adc
ss
orb
xor
cmp
sbb
mov
dec
sub
sbb
arpl
mov
adc
inc
fcoml
pop
jo
iret
sti
xor
dec
int
adc
repnz
pop
ret
mov
enter
rclb
ja
fldl2t
les
pop
loopne
testl
bound
ret
xor
jp
xor
out
add
add
mov
sahf
sbb
jecxz
xor
cs
push
cmpsl
std
pop
and
in
lods
ss
das
stc
mov
and
push
jge
outsb
mov
mov
sbb
ljmp
inc
xchg
xchg
ret
add
mov
pop
out
dec
cvtdq2ps
jp
and
adc
mov
cmp
ja
shlb
mov
loop
sub
inc
movsb
rolb
lcall
sub
and
mov
xor
pop
jae
in
mov
sahf
jmp
stos
mov
push
sbb
cmp
lahf
dec
lods
out
pop
scas
jae
test
and
into
dec
movsl
add
ret
ds
xchg
cli
inc
adc
cmpl
dec
lret
cmp
ja
int3
jno
jmp
push
out
add
dec
pop
jmp
sub
daa
loopne
aaa
adc
movsb
mov
dec
mov
sbb
mov
sbb
movsl
std
xor
ss
es
sbb
mov
mov
cltd
cmp
mov
cli
sub
lock
test
or
or
lock
addr16
pusha
xor
ficoms
xlat
sub
inc
cmp
dec
push
into
and
out
pop
jo
fsin
jbe
orb
push
jne
repz
pop
jecxz
xor
mov
aam
lds
shll
cmp
push
jae
sarb
subl
cmp
rolb
mov
test
jl
mov
out
out
aaa
push
stc
inc
fisttps
lahf
inc
xor
movsl
scas
nop
cmpsb
movsb
jno
adc
xchg
ljmp
mov
dec
or
mov
sahf
cmpl
lahf
into
sti
shlb
les
iret
repz
adc
pop
cltd
adc
and
mov
scas
push
test
mov
sti
repnz
cld
mov
shrl
test
jns
add
lods
nop
movsl
mov
jg
iret
sub
movsl
addl
shl
xchg
mov
pop
lea
cmp
jne
es
lcall
fidivrs
inc
in
xchg
in
jae
cmp
push
daa
fwait
xor
and
xlat
jbe
insl
sub
popa
scas
dec
mov
les
out
jae
inc
sub
fmull
jae
inc
cltd
cmpsl
mov
jl
sarb
jg
dec
xchg
add
or
cltd
mov
jns
or
inc
pop
xor
imul
es
mov
lock
mov
pop
inc
or
cmp
lea
lcall
fstl
jg
hlt
push
out
es
popa
fs
sbb
sub
push
add
dec
in
xchg
push
sub
xor
in
xchg
xorl
mov
dec
mov
dec
adc
enter
mov
and
fidivl
push
push
and
sub
sbb
test
aam
dec
ds
shlb
mov
fisubs
pop
pop
stos
imul
xchg
stc
inc
add
dec
inc
repz
cmovne
sbb
dec
mov
inc
pop
xlat
fs
aad
inc
jo
and
icebp
or
mov
inc
lods
push
xor
cmpsl
shrl
orl
pop
and
pop
mov
pop
or
fmuls
mov
insl
inc
sarb
in
sbb
lods
add
jo
inc
adc
rclb
imul
aas
repnz
hlt
pop
notb
fimull
push
addr16
sub
insb
mov
stc
cld
xchg
sti
into
pop
push
push
dec
adc
subb
ljmp
enter
mov
int
leave
xchg
xor
push
subl
jecxz
xor
fbld
mov
leave
or
sbb
mov
pusha
cmpl
dec
addr16
or
jb
sbb
and
add
jg
mov
test
xchg
push
inc
cs
push
rorl
loopne
imul
jns
cwtl
icebp
aas
push
inc
ficomps
jmp
repz
jnp
std
xchg
inc
xor
mov
inc
mov
lcall
fimuls
sbb
icebp
xchg
fadd
sub
or
gs
xchg
popa
fcmove
test
fstpt
iret
add
pop
mov
fadd
loop
repnz
or
loope
adc
pop
adc
clc
adc
decb
imul
sub
outsb
outsb
lds
jbe
sub
mov
in
stos
push
fldl
or
ficoms
rep
and
adc
ljmp
lods
mov
adc
jg
push
dec
repnz
adc
scas
push
sti
and
jle
push
pop
push
xchg
fs
pop
mov
lret
pusha
shlb
or
cld
add
xchg
dec
fcom
push
ss
inc
or
or
mov
aad
jg
insb
scas
add
in
stc
adc
xor
in
xor
inc
pushf
sub
test
mov
movsb
mov
mov
popf
mov
mov
insb
jns
cmp
jp
xchg
jns
aas
out
sbb
and
and
sub
push
test
dec
lods
outsb
das
rorl
cs
mov
leave
cmp
mov
pop
and
int3
ret
int3
stos
paddusb
jns
sbb
pop
jnp
xchg
adc
inc
mov
sub
cmp
outsw
ja
les
dec
add
cmp
mov
mov
sbb
inc
mov
push
fwait
jmp
orl
inc
pop
push
cmpsb
mov
shlb
lcall
rclb
pop
jmp
pop
dec
icebp
enter
push
add
jg
cmp
xor
inc
mov
dec
mov
push
iret
aad
pop
push
push
divl
inc
mov
sar
push
out
cmp
bound
cmpl
into
popf
inc
jecxz
stos
jecxz
fwait
xor
push
mov
ret
nop
add
mov
dec
xlat
in
push
das
lds
dec
fnstsw
sub
data16
pusha
sbb
lret
push
adc
or
jbe
dec
fisubrl
dec
clc
sti
sbb
imul
into
loopne
cmc
cmpsl
adc
pop
add
data16
jg
outsb
cmp
sub
adc
or
push
mov
shrb
jmp
cli
das
mov
jne,pt
mov
aad
adc
mov
add
or
push
shl
mov
sub
add
int3
nop
fcomip
push
pop
mov
call
mov
add
and
loope
sahf
dec
inc
cmpsl
inc
mov
imul
ss
push
aad
xchg
ljmp
dec
std
adc
jnp
mov
xor
sbb
adc
sub
jge
sub
push
aam
ja
add
mov
xchg
out
jno
mov
shr
pop
mov
jns
cmp
aad
xor
test
das
dec
sub
xchg
mov
adc
or
push
mov
lcall
out
xchg
mov
or
mov
cli
jnp
scas
out
movsb
add
add
xchg
adc
loope
ret
push
aam
and
cmpsb
push
mov
push
rorl
jno
pop
add
push
sub
mov
call
xchg
sbb
push
int
pop
sub
pusha
cli
mov
or
iret
adc
nop
or
mov
cld
cmp
adc
and
ror
cli
push
shll
lret
sbb
adc
add
daa
movsl
lret
daa
push
and
fwait
test
cld
push
subl
add
lret
imul
xchg
xchg
outsl
out
cmp
pop
inc
mov
ret
inc
push
inc
dec
jnp
jge
and
in
mov
lds
or
ljmp
push
and
test
fnsave
push
ja
mov
sahf
mov
bound
dec
cmp
push
cs
shrb
sahf
out
clc
inc
push
mov
int
in
aam
rorb
dec
fisubrs
fisubrs
pop
add
in
xor
dec
inc
xchg
sbb
shrb
pusha
ffreep
lahf
jno
sbb
push
fcmovnbe
pop
out
xchg
cmp
fisubrs
outsb
and
dec
scas
fimull
aam
xor
xor
adc
jnp
pop
sub
lcall
mov
fdivr
repnz
add
stc
inc
pop
aas
daa
inc
loop
loop
add
pop
mov
jnp
cmp
lods
repz
dec
pop
inc
or
cmc
fmuls
aam
jo
ret
imul
popf
sbb
stos
jae
xchg
repz
es
inc
mov
mov
cmc
sti
cmp
ret
scas
jmp
pop
mov
push
xchg
push
adc
roll
jmp
and
jp
mov
cmp
ja
sbb
frstor
fsubrs
dec
mov
sub
daa
dec
mov
ss
xchg
je
sbb
mov
cltd
push
dec
cmc
je
pop
rorl
rolb
orl
je
sub
outsl
pop
movsb
orl
dec
sub
js
lahf
push
push
adc
popf
and
jne
cmp
and
push
in
jb
test
mov
push
fistpl
adc
pop
sbb
push
xchg
jno
sbb
stos
xor
jb
cltd
and
lock
jb
lcall
cmp
cmp
out
pop
loop,pn
fcoml
imull
insb
add
dec
repz
jbe
pop
xchg
bound
out
and
scas
dec
jne
fdivp
pop
outsb
dec
sti
xor
cmp
into
lahf
stc
testb
mov
lock
lods
pop
fildl
inc
les
pusha
in
lcall
dec
in
test
or
lds
or
xchg
iret
rclb
jbe
fwait
or
shll
enter
iretw
lods
and
dec
sbb
cwtl
scas
loope
xchg
pop
addr16
ja
dec
mov
add
adc
inc
dec
clc
xchg
cltd
dec
adc
fmuls
cmp
mov
jle
mov
push
or
xor
mov
mov
pop
lock
rcrb
cmp
int
fwait
cmp
pop
mov
jno
aaa
add
shl
aas
mov
sbb
test
ss
ljmp
xor
test
fwait
sbb
test
inc
pusha
xor
movsl
cltd
ja
and
sbbl
cmpsb
dec
cmp
stos
mov
mov
cwtl
sub
popf
aas
inc
sti
mov
dec
int3
fldcw
sub
testb
cli
dec
ss
sub
mov
mov
adc
xor
jmp
repz
or
enter
pop
ret
jmp
shl
push
inc
sti
push
mov
fmuls
jo
test
or
mov
adc
nop
jmp
and
cmp
in
outsl
std
push
mov
xchg
enter
cld
xor
stos
fldenv
or
jge
inc
push
fcoms
adc
mov
ja
ret
xchg
jne
rcll
in
xor
jne
in
push
sub
enter
mov
adc
xor
fildll
and
testb
test
push
lahf
lret
lea
xchg
cmpsl
dec
push
scas
or
jb
sub
add
add
dec
call
push
insb
stos
movsb
mov
mov
mov
push
dec
and
jns
push
ds
icebp
je
fcomps
dec
and
or
outsb
imul
sub
dec
jge
push
into
in
jge
movsl
loopne
aad
fldcw
mov
xor
dec
sahf
add
xchg
add
sbb
imul
and
add
dec
and
sub
xchg
arpl
mov
fwait
push
cmp
add
mov
xchg
sub
sbb
and
int
shll
mov
addb
sub
cmp
cltd
aaa
fldcw
shlb
stc
mov
push
jae
nop
outsb
adc
mov
sub
sbb
rcrb
cld
xchg
pop
xchg
icebp
and
cwtl
sub
test
ret
push
xchg
sarl
sbb
shrl
mov
fstpt
mov
xchg
andnps
pop
mov
mov
and
jns
and
outsl
lret
mull
repz
scas
jg
xchg
sub
das
jl
aas
in
into
adc
pop
ret
mov
imul
sbb
jmp
stos
loop
mov
xor
sub
cmp
cmpsb
sub
and
lds
or
mov
inc
mov
stos
fsub
dec
sub
inc
push
mov
sahf
std
clc
popl
fbstp
pushf
mov
ljmp
repnz
mov
js
aas
dec
jle
jecxz
and
mov
aad
in
push
les
aam
sbbb
das
cmp
jo
xor
inc
lock
xor
repz
xchg
fildll
pop
cmpsl
outsl
negl
out
out
cmp
or
push
je
adc
add
push
dec
mov
fidivs
mov
lods
cmp
mov
mov
into
cli
mov
arpl
adc
out
repnz
add
lcall
fiadds
mov
mov
and
aas
and
xor
adc
push
add
sbb
xor
inc
outsl
sbb
dec
in
jmp
pushf
out
inc
xor
xor
adc
sbbb
xor
sbb
push
rcr
mov
pop
add
or
push
mov
sub
mov
stc
movsl
xor
xor
dec
add
movsl
mov
insl
shrb
sbb
jp
jle,pt
xor
scas
mov
jle
mov
dec
push
adcb
pop
ds
pushf
sub
shll
xor
stc
pop
int3
and
clc
xor
je
jb
cmp
sub
aam
out
inc
gs
sbb
push
mov
adc
cld
mov
fs
lret
push
ljmpw
adc
fucomp
add
push
sbb
sbb
mov
inc
scas
sahf
das
jle
push
int3
jge
inc
popf
or
sbb
xor
sub
and
lock
xor
outsb
dec
or
jecxz
into
push
xchg
xchg
mov
ret
sti
idivb
enter
lock
sbb
out
pop
popf
mov
mov
movsb
ljmp
mov
orb
sub
ja
sub
pop
dec
push
pop
xchg
and
mov
scas
xor
fiadds
ljmp
test
mov
repz
test
inc
loop
xchg
adc
xchg
mov
insb
mov
aam
jo
arpl
loopne
je,pn
mov
mov
call
cmp
sahf
xlat
out
inc
aaa
dec
ljmp
fldcw
sbb
push
sbb
mov
inc
adc
and
and
adc
repnz
scas
pop
xchg
push
pop
gs
pop
movsb
bnd
ret
dec
ja
add
imull
daa
lret
xchg
sbb
sub
sahf
outsl
or
js
ret
imul
pushl
mov
imul
sub
add
subb
ja
orb
dec
mov
mov
iret
cmpsl
cmp
insl
sub
rcr
imulb
loop
dec
cmpb
adc
xchg
fwait
jno
popf
inc
or
inc
std
int3
sbb
sbb
bsr
test
jbe
pop
scas
cmp
pop
sbb
xchg
movsb
lods
xor
fidivrl
pop
sub
add
daa
repnz
xor
testb
add
rcr
mov
movsl
jle
lret
jno
loopne
xor
mov
sub
adc
fisubrs
sub
mov
or
je
pop
fnstsw
loope
mov
add
in
xor
sub
push
mov
jl
cmpsl
xor
cld
aam
cltd
and
leave
das
pop
ret
pop
lods
stos
xchg
imul
push
push
ljmp
sub
pop
xor
mov
sub
sbb
push
ljmp
jae
or
sbb
mov
rorl
xchg
jbe
xor
xor
push
popa
out
sahf
pop
scas
xlat
stc
jo
sub
jecxz
data16
mov
arpl
push
rclb
or
das
in
xchg
es
and
outsb
sbb
push
fisttpll
xor
xchg
sub
cmp
adc
pop
and
mov
and
sbb
loopne
mov
inc
jl
jae
in
cmp
cwtl
rdpmc
pop
sbb
js
cld
or
cmc
pop
fists
xchg
jmp
sbb
aam
jnp
mov
fidivs
outsl
decb
push
xor
push
jmp
mov
mov
pop
and
dec
jne
test
push
test
pop
scas
adc
jae
jmp
lods
out
mov
in
sbb
movsb
jle
test
mov
jl
xor
nop
push
dec
push
aad
mov
aad
xor
sahf
out
ja
scas
nop
nop
ret
movsl
stc
sub
cli
and
insl
and
dec
cli
clc
mov
loopne
mov
das
dec
add
dec
xchg
ret
out
out
outsl
cld
and
movsl
jmp
rolb
out
movsl
xchg
pop
mov
sub
jp
adc
in
or
hlt
xor
xor
mov
es
xor
push
sub
outsb
lds
mov
xchg
mov
jno
fdivs
cmpsl
popa
mov
pop
out
add
sti
data16
pop
add
mov
fmull
stc
and
shl
xchg
pop
shl
mov
lret
mov
cmp
das
add
add
test
inc
scas
xchg
jbe
insl
add
test
push
jno
inc
lds
cmpsl
sarl
add
cli
stos
pmulhw
test
inc
sub
pop
and
mov
pop
jno
testl
dec
xchg
ljmp
pushf
test
fwait
fs
cmp
in
lock
daa
call
jp
jle
sbbb
shlb
data16
dec
sti
popf
xor
xchg
dec
iret
aas
subb
xchg
daa
idivb
adc
adc
bound
adc
pushf
dec
je
repz
loopne
xchg
pop
cltd
cmpb
stos
sahf
sbb
push
movsb
scas
dec
test
cld
subl
cwtl
add
cmp
inc
sbb
int
pop
and
push
add
mov
mov
xchg
ja
xchg
call
loop
xlat
or
scas
and
popa
int
mov
cmpl
icebp
pop
inc
and
inc
in
stos
sbb
loop
and
add
push
pop
sub
pop
mov
mov
push
out
out
in
pmuludq
out
stc
ret
es
in
pop
inc
mov
xor
mov
lods
outsb
push
mov
cmpsl
sub
pusha
sti
inc
dec
jb
inc
mov
mov
fildl
jg
push
and
mov
cmpsb
int3
xor
mov
lds
outsb
cmpsb
fwait
mov
push
mov
cltd
into
cmp
popf
cmc
fsubr
add
mov
rorl
out
negb
inc
pop
jb
xchg
in
rol
jmp
lea
lods
jle
outsl
ja
push
bound
loope
inc
sub
ss
repz
inc
sub
sbb
xor
dec
cld
outsl
push
cli
xchg
jb
les
cmp
xchg
pushf
mov
subl
leave
clc
ret
sub
mov
add
enter
rcl
and
clc
mov
dec
add
ficomps
sbb
pop
sub
add
pop
xor
pop
push
xchg
inc
cmpl
ljmp
and
fsubs
xor
lcall
into
lods
out
and
lds
leave
divb
and
mov
inc
jns
xchg
mov
std
es
push
mov
lods
in
or
jo
jae
fwait
push
les
inc
mov
xchg
mov
dec
xorl
or
and
sub
add
jbe
pop
adc
sbb
bswap
jecxz
sbb
or
fildl
test
rcl
cmp
lds
xor
lcall
pop
push
cmpsl
jge
xchg
jo
outsb
sub
ret
sub
shrb
pop
sub
or
ficoms
lahf
inc
or
push
pushf
sbb
repz
inc
inc
inc
aam
dec
push
lods
out
outsl
mov
cmpsb
call
pop
adc
add
xor
dec
sbbb
es
cmp
adc
xorl
in
test
into
scas
sbb
fisubs
mov
jle
dec
push
pop
es
push
push
push
out
idiv
into
fisubs
mov
jle
dec
push
pop
es
push
push
push
out
idiv
into
fbld
xchg
sahf
data16
jbe
inc
dec
push
pop
es
ss
push
pop
push
out
idiv
into
fisubl
push
xchg
popa
xchg
jbe
in
dec
push
sub
mov
loope
dec
aaa
movsb
pop
xchg
pop
test
fwait
pop
les
add
push
out
mull
xlat
inc
daa
mov
movsb
pop
xchg
pop
test
ja
inc
aam
les
xor
add
pop
divl
lods
aaa
movsb
pop
mov
popf
addr16
ja
inc
int3
push
fisubs
popa
xchg
add
xor
mov
int
loopne
stmxcsr
cld
cmp
mov
push
push
mov
test
pop
outsl
jmp
call
sbb
mov
int3
js
push
xor
dec
aas
and
lret
loopne
mov
or
cmpsl
mov
in
test
xorl
in
movsb
insl
xchg
pop
mov
aam
and
mov
sub
jns
std
sti
sbb
mov
inc
fsubp
fmuls
fs
sbb
test
lds
loope
add
add
sbb
jmp
fidivrl
pushf
dec
movsl
into
test
lock
mov
adc
mov
mov
test
sahf
addr16
ja
inc
int
frstor
or
divl
push
xlat
and
inc
movsb
outsb
xchg
jle
addr16
and
rcrb
out
imul
divl
movsb
push
xchg
sub
push
movsb
in
andl
add
inc
test
inc
out
cltd
or
cmc
aaa
shrl
icebp
sub
push
les
adc
add
je
fs
push
xlat
inc
daa
mov
movsb
pop
xchg
pop
test
ja
inc
aam
les
adc
add
je
fs
push
xlat
inc
daa
mov
and
leave
jne
lods
push
xchg
sahf
scas
or
xchg
jns
mov
dec
ja
popf
repnz
push
cmp
scas
xor
or
das
xlat
loopne
mov
out
sbb
mov
dec
jp
orb
inc
adc
insb
sub
add
jbe
aam
incl
sub
shll
inc
pop
push
repz
lock
push
int3
inc
lahf
rcr
out
jne
stos
cmpl
xor
fwait
sbb
mov
call
cmpsl
push
out
and
incb
push
int
lods
jo
add
pop
std
fisubl
pop
test
mov
cmp
xor
mov
movsl
in
fstps
in
inc
sbb
cmpsl
scas
mov
test
xchg
mov
add
or
cli
int3
fbstp
arpl
in
sbb
and
and
ficoml
ret
pop
cmp
mov
push
or
pop
mov
sti
mov
and
sbb
dec
or
dec
add
enter
xchg
sahf
and
mov
or
fmuls
jmp
inc
nop
push
icebp
into
vmread
jmp
xor
push
and
mov
mov
in
push
jp
dec
cmpl
test
xor
push
sbb
dec
mov
movq
mov
fadd
test
rol
inc
shld
js
dec
pop
movsb
mov
mov
lahf
dec
cmp
jae
out
out
repnz
pop
push
xchg
dec
adc
mov
iretw
mov
rorb
sbb
pop
daa
and
fstps
jp
fistpll
push
sbb
push
or
iret
fstpl
push
and
cmp
ljmp
lods
sub
push
xor
les
fcoms
jl
sub
xor
xchg
movsb
lcall
cmp
int
or
sub
push
mov
push
mov
loope
subl
sub
shl
xor
mov
fistl
inc
xchg
movsl
inc
loopne
adc
xor
jle
or
jmp
lret
nop
sbb
pop
xor
mov
and
hlt
push
repnz
xlat
mov
fiadds
pop
xchg
stos
pop
adc
jl
sahf
popf
hlt
fs
xchg
xchg
cli
and
aaa
and
scas
xchg
sbb
lahf
cmpsb
and
cmpsb
or
jmp
adc
fisttpl
imul
sub
test
pushl
mov
fdiv
movsb
stc
cmp
fwait
push
cs
xchg
sbb
push
jl
out
sub
mov
sti
sbb
dec
mov
xchg
loopne
pop
stos
push
or
shl
dec
mov
inc
sbb
sbb
jns
cmp
mov
mov
mov
loope
pop
sbb
popf
loop
or
add
fcom
push
mov
aaa
xchg
sbb
jnp
loopne
mov
sub
jns
iret
jge
insl
clc
cmp
xchg
mov
xor
xchg
stos
xor
mov
mov
mov
sub
sbb
adc
jg
sub
nop
xchg
jnp,pt
test
stc
or
ror
out
xchg
push
dec
pop
cwtl
mov
xchg
pop
push
movsb
xchg
addb
mov
jb
pop
mov
adc
dec
jmp
scas
outsb
mov
repz
push
outsb
push
clc
int
ficompl
mov
shlb
pop
shr
jle
inc
dec
xchg
ja
inc
insl
inc
cli
push
and
add
xchg
insb
xchg
or
add
popf
add
or
adc
xchg
jbe
pcmpeqw
and
push
pop
shrb
inc
mov
scas
movsl
aad
andb
adc
movsb
dec
mov
aas
dec
inc
or
pop
mov
adc
sbb
mov
mov
ljmp
in
stos
sub
cmp
mov
dec
test
out
mov
inc
fs
lea
xchg
cmp
sub
mov
jb
shrb
repnz
fcomp
sub
int
pusha
nop
adc
inc
icebp
faddp
xchg
mov
sbbb
shlb
je
lods
aas
fisubrl
jl
dec
mov
cmpsb
jo
test
push
dec
adc
cli
inc
test
pop
daa
xchg
int
add
jl
je
pmaxsw
pop
leave
or
das
cmp
sub
cmpsl
sahf
cmpsl
es
and
xchg
mov
icebp
and
mov
dec
roll
sbb
cwtl
sbb
add
cld
mov
ss
jle
fmull
out
ds
xchg
jns
mov
fsubrl
testl
out
mov
std
mov
mov
fcmovne
cmpsl
and
subb
jge
and
fidivl
mov
cmp
cmpsl
adcb
daa
push
fnsave
dec
jp
mov
sbb
mov
fsubrp
sub
mov
cmp
imul
push
adc
jnp
imul
adc
ds
push
fstps
mov
les
inc
sub
cmp
rorb
dec
sub
aaa
inc
or
adc
lds
out
mov
in
cli
sub
xlat
ss
stos
sbb
es
mov
push
pop
cmpsb
repnz
cmpsl
push
cmpl
mov
movsb
lds
jl
cmp
and
sub
out
inc
jl
aas
aaa
inc
mov
pushf
xor
push
insb
addr16
lea
push
and
or
mov
cltd
pop
jecxz
stos
push
xor
ss
repnz
sbb
sub
cmpb
mov
push
cmc
inc
lcall
addr16
mov
inc
pop
jmp
int
jle
mov
inc
ror
ror
xchg
lds
jmp
mov
push
pop
lahf
jno
in
es
ret
push
test
inc
pop
and
imul
jp
xor
adc
mov
filds
mov
adc
mov
inc
mov
lret
sub
je
into
cli
push
cmp
aaa
sub
scas
xchg
xchg
mov
and
in
cwtl
faddl
movsb
push
mov
movsl
daa
or
fbld
sbb
inc
rorb
fwait
addr16
das
daa
js
scas
scas
fldt
cmp
sahf
inc
sub
jnp
loop
or
cmp
outsb
ss
xchg
je
push
imul
fistps
push
test
jb
popf
cmp
jne
les
dec
dec
ret
xchg
mov
sbb
xchg
rcl
mov
inc
mov
orl
sub
mov
fcmovu
pop
push
inc
and
xchg
jbe
xchg
mov
push
mov
in
pop
insl
mov
push
add
sub
leave
lock
push
or
push
inc
add
aaa
pop
cmc
push
push
into
pusha
xchg
mov
js
pop
adc
sbb
test
rcrb
pusha
inc
push
adc
outsl
cmpsl
fisubl
jae
adc
fdivl
popa
cmpsl
cs
stos
hlt
outsb
dec
test
sub
loop
mov
stos
and
cmp
dec
daa
movsb
xor
ror
mov
mov
xchg
daa
ds
adc
mov
pop
outsb
jbe
sarb
add
leave
int
or
call
mov
fs
and
sahf
fs
push
pop
inc
jae
mov
pop
cltd
add
xchg
fldt
mov
addr16
xor
sti
pop
ljmp
ret
mov
push
push
ja
stc
dec
clc
leave
dec
repz
daa
cmp
inc
fdiv
jle
xchg
loope
aas
addl
inc
pop
aas
out
jmp
aas
dec
push
mov
dec
inc
mov
out
mov
adc
je
test
cld
inc
int
add
pop
lret
jmp
mov
stos
shrl
and
mov
mov
lods
mov
jg
jns
ret
cmpsl
xchg
test
addr16
cli
leave
or
lods
in
aad
adc
scas
mov
and
or
xchg
inc
add
mov
jne
dec
mov
inc
inc
ret
push
lret
loope
adc
or
xor
in
and
daa
cmp
dec
sarb
ret
add
pop
or
mov
addr16
and
sarb
and
ljmp
jb
adcb
out
insb
dec
les
es
js
cltd
stc
add
xchg
popf
adc
jge
shr
sub
cmp
and
scas
push
xor
fwait
divl
lcall
mov
gs
ljmp
xlat
repz
testb
push
ja,pt
movsl
add
nop
mov
scas
rcrl
jecxz
or
pop
xchg
pop
nop
fstps
cmc
cltd
dec
loopne
mov
sub
add
cmpsb
push
fnstsw
jmp
inc
push
xchg
sbb
adc
sbb
pushf
stc
sbb
sti
mov
movhps
sbb
decb
xchg
aaa
fildl
arpl
adc
inc
adc
sbb
mov
xchg
loope
adc
ds
or
jl
scas
and
divl
mov
call
lods
inc
sub
inc
cs
and
push
rcrb
mov
lret
out
andb
cmp
inc
jg
xor
and
sbb
les
scas
push
and
movb
push
hlt
hlt
mov
outsl
adc
lret
das
xor
jmp
lcall
aaa
pop
push
mov
mov
xchg
adc
mov
ret
pop
clc
xor
nop
jecxz
fmuls
or
iret
sub
jno
cmp
mov
jae
call
cwtl
push
inc
xchg
xor
and
fidivrs
cltd
cmp
adc
xor
jge
or
cmp
addr16
psraw
add
pop
inc
inc
and
inc
inc
scas
mov
inc
jb
aas
sbb
xchg
scas
sub
fprem1
mov
fsts
sub
push
lods
mov
call
test
adcb
adc
enter
aad
mov
or
inc
mov
add
push
and
sahf
sub
bound
std
cmp
mov
xchg
mov
outsl
inc
bound
pop
nop
fnsave
cmp
sbb
adc
fwait
push
in
lods
mov
lods
inc
addr16
or
lds
stc
fbstp
mov
jo
loopne
lea
fcmove
subl
cmovge
sub
ficomps
loopne
xor
fidivrl
or
cs
mov
aad
xor
aad
hlt
arpl
nop
cmp
mov
aam
negl
or
jb
dec
xchg
fcomps
xor
dec
aad
loop
shl
mov
xchg
lock
xchg
and
mov
lds
push
cs
cmp
clc
dec
sub
xchg
pop
clc
hlt
test
cld
sbb
xchg
xchg
cmp
sbb
xor
xchg
movsb
mov
push
mov
pop
stc
and
push
pusha
out
dec
mov
aam
xchg
pop
jns
mov
fwait
dec
sbb
loope
pop
movsb
mov
loop
scas
push
jbe
ss
push
add
lds
mov
lods
paddd
adc
adc
push
jge
stos
and
sub
pop
cwtl
xor
sub
sub
lods
dec
mov
sub
test
gs
push
bound
into
jo
push
jbe
stc
ja
sbb
adc
icebp
addl
int3
mov
fldenv
or
pop
mov
out
sbb
add
ja
addr16
ret
xchg
aas
mov
jle
pop
mov
cmp
shl
cmc
lret
mov
sub
inc
xor
lahf
lret
push
ficoms
mov
loope
push
cltd
fists
scas
add
fmull
lods
loope
js
ss
push
ss
xorb
pop
and
or
repnz
xor
and
push
xor
imul
fmul
fldenv
push
das
out
add
jecxz
shlb
cmp
inc
mov
js
les
mov
sbb
aaa
aas
sbb
sahf
pop
outsb
add
stos
mov
ret
sub
xor
stos
sub
push
jne
lds
xor
fdivs
add
leave
lds
cmp
mov
adc
lret
call
mov
out
jae
cmp
inc
xor
xchg
lret
in
mov
sti
xchg
repz
into
push
aam
roll
mov
popa
pushf
pop
fisubl
sbb
cmp
or
inc
mov
out
or
xor
pop
mov
xchg
stos
filds
clc
cs
pop
pushfw
jnp
sbb
push
in
add
fstpl
jbe
out
insb
cmp
out
cs
cmpsb
sbb
lds
push
dec
add
push
in
mov
jae
negb
add
addl
mov
inc
push
ljmp
add
xchg
cmpsb
xchg
jne
loop
int
pusha
push
xor
das
sub
insl
or
jb
cmp
inc
push
push
pop
and
movsl
mov
movsl
and
xor
adc
xor
jb
xchg
push
cwtl
jne
sbb
mov
repnz
lods
pslld
mov
in
sar
mov
cmp
sar
rcrl
cmp
outsl
int3
or
add
int
mov
stos
int3
repz
xchg
mov
subl
xchg
in
push
fcoml
clc
cwtl
pop
dec
testl
lret
sub
cmp
insb
add
jae
mov
jg
lret
and
lods
lahf
cmp
rolb
neg
pushf
jns
imul
inc
out
dec
test
cmp
adc
std
push
repz
mov
xor
xchg
dec
sub
mov
fistpl
adc
pop
mov
iret
cmp
test
cmp
cmpsl
stos
inc
xor
dec
push
jns
pop
scas
movl
push
push
in
stc
out
dec
in
test
add
or
inc
divb
xor
or
stos
lods
jp
fs
xor
pusha
pop
pop
cltd
push
scas
call
mov
push
loope
gs
cmpsl
xchg
repz
push
pop
into
out
test
xor
jmp
pop
jmp
xchg
insb
sub
outsl
jle
lcall
push
pop
jo
xchg
inc
test
cmp
push
mov
sbb
mov
mov
push
pop
adc
xchg
mov
stos
mov
in
push
and
iret
in
xchg
mov
xor
and
sti
xchg
imul
lret
fwait
in
jnp
xchg
sub
xor
cmp
scas
fisubrs
push
cld
pop
or
icebp
ss
inc
popf
sub
das
xchg
ds
stc
in
mov
or
add
ret
rorl
lods
fsubs
arpl
jle
mov
daa
out
mov
or
lahf
mov
or
jmp
inc
scas
gs
dec
cld
sahf
mov
and
add
mov
jno
out
push
popf
lock
aam
movsb
mov
test
in
add
jb,pn
int
mov
leave
cld
shrb
testl
mov
lds
mov
mov
xor
pop
mov
cmc
add
pushf
dec
fcomps
cmp
push
movl
mov
inc
pop
jbe
jae
mov
cmp
xchg
mov
xchg
cltd
push
jge
fcomps
test
pop
stos
dec
mov
add
lods
push
push
fwait
inc
rorl
dec
adc
fxch
pop
jge
mov
jge
adc
test
pop
jnp
cmpsl
jo
dec
lds
inc
int
and
popa
dec
mov
dec
ds
cwtl
or
xor
and
nop
fnsave
repz
mov
lret
es
push
xor
dec
loope
mov
xchg
mov
jns
inc
sub
repnz
pop
push
pop
pop
sbb
mov
xchg
xor
push
or
fnstcw
dec
push
push
pushl
mov
cmp
scas
sbb
mov
jmp
ret
xchg
cmpsb
outsl
cmp
pop
out
cld
sbb
cmp
xchg
add
call
xor
push
pusha
dec
cmp
jno
into
cld
and
cmpsl
pushf
jbe
mov
xchg
dec
and
in
pop
mov
mov
cld
push
icebp
aam
xchg
sbbb
cmc
or
jbe
rorl
pop
out
daa
aaa
into
add
ret
mov
cwtl
push
ret
pushf
sbb
jle
aad
or
push
sub
mov
mov
mov
movl
lea
pop
sbb
inc
cmc
and
or
adc
or
xchg
mov
push
and
fdivs
adc
jle
or
sbb
cld
jb
xor
xchg
pop
cmp
jmp
fsubrl
in
cmp
test
cmp
aaa
int
xlat
xor
inc
inc
dec
mov
sbb
repz
ss
into
pop
jne
icebp
ficoml
mov
sub
push
mov
and
mov
fs
mov
scas
imul
sub
cltd
pop
add
aad
jbe
adc
xor
pop
mov
fwait
incl
add
negl
inc
pop
jns
rcrl
mov
sbb
dec
in
clc
push
insb
fidivrs
mov
xor
stc
ja
pop
fldt
je
jp
js
test
stc
push
mov
dec
push
pop
jo
adc
mov
fs
cli
inc
pop
xchg
out
xchg
iret
js
out
xchg
bnd
mov
outsl
cli
std
sub
repz
push
mov
jne
or
inc
rcrl
pop
or
and
insb
sub
push
push
mov
add
dec
addr16
mov
push
adc
xor
mov
jae
mov
mov
sub
mov
sub
cmp
cwtl
out
sbb
sub
xlat
mov
ret
inc
xorl
dec
xor
or
mov
xchg
out
enter
icebp
stc
sub
jecxz
cmp
push
arpl
and
mov
es
in
shrb
and
dec
cmpsl
adc
pop
mov
popf
sbb
dec
sbb
xorl
idiv
adcl
mov
mov
sub
les
ja
sarl
cmc
repz
jl
lock
cs
mov
adc
mov
cwtl
pop
mov
bound
jg
push
sub
pop
pop
sti
arpl
insl
jo
outsb
dec
push
and
or
add
scas
mov
sub
xchg
add
fbstp
add
push
rol
inc
bound
cmp
imul
notb
cmp
pop
in
xor
mov
push
dec
inc
sub
push
sub
xlat
mov
add
and
mov
daa
cs
stos
call
hlt
ret
inc
inc
mov
mov
jno
xchg
lods
xor
mov
dec
movsb
and
pop
push
roll
jmp
xchg
dec
inc
cmp
les
push
inc
call
fs
fdivs
cmp
pop
xchg
xchg
fnclex
je
lahf
lret
daa
insb
sub
mov
incb
jp
cmpsl
jo
cmp
cmp
mov
xchg
fsts
mov
sti
movsl
lret
es
and
cwtl
xor
out
dec
mov
adc
mov
pusha
and
pop
cld
orl
bound
incb
out
push
jecxz
imul
mov
jmp
bound
and
cmpsb
jo
mov
xor
fistpl
fimuls
cmp
pop
xchg
push
pusha
jo
push
dec
bswap
aad
push
inc
lods
xor
leave
outsl
mov
data16
insb
inc
inc
sub
xchg
inc
mov
insb
jg
sub
fcompl
inc
inc
fidivs
out
int
jecxz
in
mov
mov
out
shlb
iret
mov
adc
sub
cmpsb
lcall
xchg
sub
cltd
xchg
cmp
fdivl
mov
cwtl
jnp
into
subl
loop
aad
aad
mov
icebp
repnz
into
fwait
pop
loopne
jp
cmpsb
orl
mov
mov
mov
nop
lods
jbe
xchg
xchg
mov
xlat
and
out
push
cmp
or
repnz
ja
mov
popa
push
and
rolb
inc
in
cwtl
mov
or
stc
test
les
pop
test
jmp
and
fildl
push
pop
insl
negb
adcb
jle
test
mov
pop
shrb
xlat
xchg
sub
push
and
nop
pusha
mov
shr
dec
jo
mov
jno
loope
mov
push
cmp
out
jb
add
shll
dec
sbb
inc
xor
cmp
inc
inc
xchg
iret
fbstp
test
mov
push
cmc
pop
adc
out
bound
daa
test
arpl
int
sbb
mov
stos
mov
ret
fwait
sbb
ret
dec
imul
xchg
sub
push
ret
adc
xchg
bound
push
jnp
test
ja
inc
aam
les
adc
add
je
fs
push
xlat
inc
daa
mov
movsb
pop
xchg
pop
test
ja
inc
aam
les
adc
add
je
fs
push
xlat
inc
daa
mov
movsb
xchg
in
aam
les
adc
add
push
xlat
inc
daa
mov
movsb
pop
xchg
pop
test
ja
inc
aam
les
adc
jae
cld
xchg
add
adc
and
xor
dec
nop
and
sub
mov
rcll
add
and
and
rcll
shll
xor
inc
xchg
push
andl
xchg
inc
aad
mov
shll
xor
and
rcll
shll
xor
inc
xchg
push
andl
xchg
test
push
lahf
push
dec
popf
adc
add
push
outsb
ljmp
mov
dec
cwtl
shll
in
shrl
insb
imul
sub
mov
je
add
pop
loopne
pshufw
lcall
faddl
sbb
lahf
bound
ja
sahf
popa
out
pop
cmp
inc
pop
adc
push
in
mov
nop
inc
sbbl
mov
in
add
and
adc
dec
push
or
cli
sbb
pusha
loopne
mov
mov
cmp
inc
rcll
add
sar
sub
dec
shr
mov
cmp
sub
push
sti
inc
pop
add
sahf
std
add
push
loope
cltd
ficomps
adc
and
xor
inc
xchg
push
andl
xchg
inc
mov
adc
add
xor
addr16
sarl
inc
mov
mov
add
xor
shlb
pop
ret
adc
movsl
inc
add
push
addb
cmp
in
xchg
xor
push
hlt
xor
icebp
jne
nop
jne
dec
xchg
xor
popa
mov
mov
mov
adc
add
xor
and
rcll
shll
xor
inc
xchg
push
andl
xchg
inc
mov
adc
add
xor
and
shll
fwait
fs
add
out
inc
call
add
mov
jb
push
mov
js
mov
in
int3
jae
in
jae
push
call
sub
out
pusha
lret
mov
xor
jbe
fwait
ja
xchg
adc
fnstsw
jb
mov
mov
out
lahf
loope
test
lods
and
inc
insl
sarl
cmp
fninit
inc
and
add
or
push
lcall
cmp
sbb
push
push
mov
bnd
jae
mov
repnz
pop
sbb
sbb
inc
out
das
cmpsb
sti
test
movsb
ds
pusha
pop
or
mov
outsl
lock
add
or
std
call
mov
loopne
push
fdivp
iret
jo
fidivl
mov
std
and
pop
and
ret
pop
call
adc
les
iret
fmull
movsb
mov
adc
shr
adc
shrb
xchg
jbe
push
push
or
jmp
stc
xchg
arpl
push
pusha
inc
int
cmpsl
mov
mov
rcrb
and
push
je
icebp
cmp
stos
mov
xchg
repz
divl
std
jne
cmp
push
push
enter
fdivrs
ja
mov
imul
repz
xchg
fadds
loopne
pop
mov
mov
mov
and
mov
pushf
mov
mov
arpl
dec
mov
cmc
pop
xchg
mov
sbb
sbb
push
scas
push
mull
or
lock
ret
iret
outsb
add
int3
mov
inc
mov
xchg
push
aas
or
inc
test
ja
dec
add
cmp
shll
fs
push
add
or
xchg
cli
sahf
in
cmp
notb
lds
and
es
add
add
int
fldcw
cmpsb
scas
rcrb
sub
daa
mov
shlb
leave
out
arpl
pop
es
xchg
and
shlb
cli
int
dec
mov
mov
fadd
push
dec
outsb
aas
pop
arpl
cmp
jae
add
out
sbbl
pop
addr16
in
vandps
push
aam
xchg
std
les
mov
pop
xchg
cwtl
int
cmp
movsb
lea
push
jo
popa
mov
imul
call
sub
sub
jmp
fstps
es
ja
ljmp
sbb
adc
xorl
sub
jo
pusha
push
ret
jmp
mov
mov
jmp
add
scas
dec
xor
sbb
pop
arpl
dec
outsl
shll
popa
arpl
pop
or
test
setns
lcall
jmp
mov
sub
cmp
jae
cmpb
mov
imul
mov
mov
adc
fprem
popa
loopne
dec
cmpsb
outsl
mov
data16
aam
pop
and
mov
jbe
insb
push
lret
adc
daa
adc
cmp
xchg
cmp
xchg
sbb
push
push
adc
orl
in
leave
jb
ss
ds
pop
mov
movsl
adc
xchg
outsl
xchg
movl
xor
cmp
dec
mov
push
testl
loop
cmpl
outsb
jb
add
insb
repz
sti
pop
or
push
jl
jns
xor
xchg
jo
dec
push
sub
lods
fs
lds
int3
and
movsb
add
sub
rorb
cmp
jmp
fistps
fnstsw
cld
cmp
adc
cmp
add
and
aad
pop
test
dec
out
and
subl
sahf
lahf
cmp
fdivl
outsl
data16
push
sbb
call
loop
fxch
dec
stos
jge
sbb
sbb
adc
in
pop
mov
cmpb
out
scas
icebp
in
cmp
xor
lods
push
sub
mov
add
scas
ret
movsb
cmp
and
scas
ret
mov
lret
aam
iret
mov
leave
cmp
scas
adc
pop
int3
adc
aaa
mov
jg
fcoml
pop
in
push
push
fistpl
mov
mov
repnz
fistl
mov
shll
or
lods
mov
fmull
jno
add
xchg
cmpsb
inc
ret
cmc
sahf
je
loop
cltd
popa
pushf
rcll
xchg
aad
sarl
xchg
inc
dec
cmp
cmp
cmp
cmpsb
dec
adc
fucomip
fidivl
lea
rcr
sub
push
dec
pop
cli
dec
and
imul
sbb
inc
ret
roll
pop
push
jb
adc
popf
dec
lahf
mov
ret
push
in
loop
rolb
pop
xchg
dec
in
aad
stc
rcr
lods
fsubs
aaa
dec
loopne
sbb
and
fstpt
daa
push
daa
xor
cmp
nopl
push
or
inc
push
lea
mov
outsb
push
pushf
mov
iret
imul
int3
or
push
pop
add
xor
pop
pop
in
gs
adc
rep
cld
mov
xor
gs
fsubs
std
or
pop
stc
jl
cwtl
xlat
arpl
fldenv
in
inc
cmp
sub
pop
add
frstor
fstpt
ja
mov
mov
add
cli
lds
mov
jge
push
inc
movsb
lcall
jmp
xchg
movsb
ja
inc
mov
scas
xchg
xchg
sbb
pop
cmpsl
jb
and
dec
stos
jbe,pt
scas
jmp
shlb
xchg
sub
sbb
pushf
mov
out
aas
xchg
mov
ljmp
cmp
repnz
pop
mov
in
mov
inc
cmpsl
stc
fcoms
jnp
dec
popa
in
mov
pop
pop
dec
jns
mov
xor
xchg
sub
sub
push
das
out
cmp
xchg
add
sbb
jb
xchg
pop
ja
stc
xor
insl
filds
mov
scas
jl
popf
stos
cmp
out
add
push
repnz
out
jp
pop
ret
push
imul
mov
inc
es
mov
pusha
pop
arpl
mov
push
pop
cmp
mov
popa
pop
std
les
cmpsb
testb
into
add
icebp
lcall
dec
mov
ja
gs
lret
mov
hlt
ljmp
pop
inc
imul
aam
sarb
push
dec
xchg
cs
icebp
cmpsl
xor
jg
lock
in
dec
jnp
mov
ja
cld
or
mov
rorl
filds
inc
and
mov
and
cmp
and
push
fadds
in
in
mov
dec
push
mov
popa
cmpsb
jnp
cmp
gs
jnp
mov
dec
mul
je
imul
jns
xor
inc
mov
adc
daa
adc
mov
mov
jae
pop
inc
mov
push
jge
jle
sub
shll
mov
cmp
mov
inc
outsb
mov
loop
and
scas
cmp
push
dec
repnz
out
aaa
std
gs
jb
ret
cltd
icebp
bound
xchg
dec
push
xor
fdivl
test
push
out
adc
insl
mov
fbld
out
xor
dec
movl
sub
adc
stc
jl
and
bound
fistl
gs
push
mov
mov
icebp
mov
pusha
mov
add
sti
mov
sbb
add
pop
icebp
das
mov
push
ss
mov
cld
xorb
push
scas
jae
push
xchg
test
bound
pop
xor
ret
mov
das
inc
sahf
test
jb
mov
popf
push
call
mov
inc
or
add
pop
adc
les
xchg
mov
sbb
mov
aad
mov
subl
nop
aam
nop
ret
pop
clc
xchg
pop
ficompl
mov
out
mov
pop
xor
rcr
mov
lahf
adc
pushf
pop
and
inc
and
leave
cs
popf
addr16
push
pushw
mov
clc
xchg
jno
movsb
scas
jp
daa
icebp
aaa
stos
or
mov
shrb
lahf
dec
push
scas
jne
xor
push
sub
addr16
das
jmp
in
pushf
push
shl
inc
xor
xor
es
jbe
sub
cli
jg
pop
iret
add
or
push
mov
mov
sbb
or
test
push
cmp
lcall
lret
pop
fnstsw
imul
or
faddl
push
clc
repnz
out
or
pop
dec
push
xor
sbb
imul
pop
lds
jecxz
jmp
mov
fcomp
imull
shrb
rcll
cli
jns
aas
cmp
push
je
cli
pop
add
adc
xchg
push
adc
sbb
pop
ficoml
test
adc
xchg
call
dec
jl
mov
test
fwait
mov
jbe
nop
out
outsb
adc
pop
ljmp
dec
loope
push
leave
sarl
out
stos
outsl
call
fimull
xor
jge
dec
ret
aaa
xor
lea
and
cwtl
sbbb
dec
and
fwait
hlt
mov
push
pop
push
cmp
mov
lods
push
loopne
ret
pop
sub
test
dec
add
ja
sahf
mov
sti
jbe
sbb
sub
stc
sub
jb
pop
mov
imul
jne
imul
xor
mov
adc
push
in
inc
jne
lods
and
stos
xlat
pop
mov
out
cwtl
mov
stos
push
sbb
cli
pop
fs
enter
ds
jp
scas
pop
cli
xchg
mov
adc
insb
enter
jbe
sbb
xchg
mov
ret
sub
dec
call
adc
mov
dec
in
mov
scas
and
jae
xlat
nop
lret
cmp
scas
in
add
in
pusha
push
rclb
pop
push
or
push
cmpsl
scas
data16
pushf
or
gs
call
xchg
add
iret
ret
xor
mov
rorl
and
add
data16
push
sti
sbb
sub
pop
mov
insl
imul
sub
addr16
scas
push
and
pop
iret
adc
lcall
push
test
jp
lods
arpl
nop
push
loope
jg
pop
lods
dec
jne
pop
pop
or
nop
mov
adc
jg
sbb
test
sbb
dec
sub
test
std
sbb
jg
jno
cmp
nop
jbe
mov
int
push
add
imul
ja
xor
mov
mov
sbb
gs
out
lods
out
movsl
adc
out
inc
sbb
sahf
pop
shl
push
repnz
rclb
ljmp
scas
das
rclb
in
or
sbb
sbb
sub
dec
mov
imul
divl
fists
out
iret
push
mov
leave
inc
inc
scas
sub
pop
repnz
out
adc
clc
or
sub
aam
hlt
ds
xchg
inc
loope,pn
cmp
inc
test
push
lds
pop
bound
xchg
push
and
dec
stc
push
mov
and
add
shrb
jle
xchg
adc
xchg
lea
imul
orb
mov
sub
cmp
adc
jmp
pop
and
xor
mov
out
les
mov
cwtl
sbb
ret
push
insl
mov
adc
pop
mov
cmpsb
or
lret
aas
push
add
pop
sub
mov
inc
mov
xor
sbb
sub
test
or
out
dec
repnz
pop
cmp
add
inc
xlat
mov
or
les
dec
push
mov
inc
pop
mov
mov
pop
jbe
push
mov
adc
inc
xlat
push
jmp
add
sbb
lods
test
pusha
inc
pop
inc
or
inc
mov
xchg
mov
scas
mulb
in
ja
leave
ja
movsl
pop
xchg
push
insl
pop
push
testl
cli
jl
dec
mov
mov
xchg
push
xchg
mov
xchg
push
mov
sbb
or
rcl
lret
inc
test
stos
sub
push
testb
sbb
rcrb
data16
sub
push
js
sbb
push
xor
push
adc
pop
movl
dec
jbe
add
pop
ret
sub
pop
les
push
and
dec
push
pushf
or
inc
dec
repnz
inc
jne
fwait
dec
arpl
xchg
int3
sub
xchg
mov
push
stos
fidivrs
cli
mov
in
testl
icebp
inc
popa
and
dec
adcl
cltd
lock
dec
xor
dec
jp
mov
pop
clc
and
adc
mov
lods
push
ljmp
pusha
or
add
arpl
push
out
jmp
pop
sub
lds
sbb
mov
lea
lock
cmpsl
xchg
push
and
fiaddl
mov
data16
xchg
inc
jl
adc
pop
jl
mov
daa
movsb
out
cmpsl
inc
mov
icebp
mov
movsl
ss
test
mov
pop
insl
xchg
outsl
push
hlt
mov
dec
sub
fmull
cmp
scas
pop
lahf
sub
in
ror
insl
loopne
sarl
sub
add
inc
dec
or
sub
xor
jg
pop
stos
cmp
or
mov
stc
mov
clc
shlb
mov
idiv
cwtl
insl
sbb
jmp
sarb
sub
push
bound
decl
shll
mov
jp
add
mov
mov
pop
lcall
mov
pop
sbb
jg
movsl
inc
aad
or
or
jecxz
xchg
hlt
xchg
movsl
outsl
mov
popl
push
pop
sub
pusha
imul
push
ljmp
mov
fstpt
ret
pop
xor
out
xchg
out
nop
jecxz
fimull
inc
fdivrl
daa
cmpsb
cmp
jnp
sbb
hlt
xlat
jg
xchg
cmp
xchg
imul
pop
mov
sbb
mov
dec
fstpl
jns
test
imul
mov
pop
adc
mov
insb
inc
cmc
outsl
cld
fisubs
xchg
fmull
sbb
andl
mov
mov
int3
jmp
pop
jns
sarb
jae
outsb
enter
scas
and
sub
xlat
dec
cwtl
push
mov
push
jl
mov
mov
sahf
push
addr16
jae
sti
dec
and
js
inc
call
test
add
out
mov
fistpll
mov
inc
xchg
jp
jb
jno
cli
pop
add
popf
cs
ljmp
adc
adc
pop
or
inc
ret
iret
jmp
popa
cmp
lahf
testb
jp
jmp
mov
int
popf
enter
ret
lret
mov
add
addr16
std
dec
mov
std
fimull
cmp
popa
push
jo
jmp
sub
frstor
int3
mov
mov
das
xor
sbb
adc
mov
sbb
aad
pushf
or
or
adc
xchg
fdivl
mov
fildl
lods
ret
test
inc
mov
mov
push
stc
lds
shll
mov
inc
loopne
bound
insl
push
scas
fwait
adc
hlt
push
push
insl
adc
inc
out
adc
sub
push
and
xchg
xchg
int
inc
dec
jno
mov
xor
sarl
in
sub
iret
mov
fcompl
mov
pushf
inc
lcall
xor
mov
out
inc
fs
push
outsl
and
mov
sbb
pushf
dec
cmp
pop
in
xchg
mov
xor
pushf
mov
ljmp
ss
and
mov
cwtl
addr16
dec
jp
dec
andb
adc
inc
sub
and
fstl
cs
add
imul
das
xchg
stos
jge
rcrl
add
jmp
test
push
outsb
and
mov
sub
subb
jge
pop
mov
mov
mov
dec
cli
inc
add
movups
imulb
adc
push
js
jae
imul
jae
fldcw
jle
ret
pop
arpl
in
loop
andl
repz
divl
add
addr16
loopne
data16
icebp
and
mov
push
add
scas
loope
lcall
mov
mov
dec
jg
xchg
sbb
sub
push
shl
pop
inc
loope
mov
inc
sarb
mov
push
ret
mov
adcl
push
ja
mov
aas
jge,pn
movsl
iret
or
into
push
fs
push
cwtl
cmp
in
inc
mov
shrl
inc
adc
jg
cmp
lcall
fdivrl
imul
and
test
dec
jmp
inc
inc
and
fstpt
or
insb
test
sbb
fisubrs
push
rolb
in
dec
xchg
mov
xor
mov
inc
loop
cwtl
cmp
cmp
sub
sbb
push
mov
xchg
je
inc
xchg
push
dec
lods
jmp
fists
lods
cmp
pop
decl
lods
push
cmp
lret
popf
lods
aas
and
imul
fdivl
jae
cli
out
xchg
sub
pop
lcall
jg
mov
out
out
movsb
push
outsl
addr16
pop
adc
mov
fsubs
adc
mov
rcrb
jb
inc
jmp
les
mov
subb
pop
rcrb
dec
jge
fs
jne
or
mov
mov
loopne
mov
ret
mov
or
test
gs
xchg
cld
push
in
push
test
pop
sub
test
mov
les
movsl
dec
sbbb
mov
xor
pop
push
cld
sbb
cmpsl
push
push
xor
mov
daa
lcall
hlt
jnp
sti
subl
and
pop
fsub
xor
xchg
sub
int
test
dec
xor
jecxz
jmp
cwtl
in
dec
push
xchg
daa
add
cltd
mov
in
nop
loope
shr
lock
jns
dec
sub
cmp
insl
std
fsubr
lahf
inc
xchg
cmpsl
inc
dec
mov
outsb
aaa
inc
test
fsubp
add
pop
test
pop
mov
mov
nop
out
movsl
dec
sub
mov
sbb
sahf
mov
aam
dec
lock
push
mov
jge
cmp
ja
nop
popf
sbb
and
popa
daa
pop
adc
lock
mov
jnp
test
sub
std
enter
fs
jmp
xor
jno
inc
cmc
fcompl
sbb
leave
pop
insb
and
or
cmpsl
cli
sbb
sbb
dec
or
sbbb
aad
aas
pop
jbe
nop
not
xchg
mov
daa
sub
push
dec
push
pop
out
data16
daa
mov
hlt
push
add
inc
stos
mov
rcrl
sbb
cmp
mov
pop
dec
mov
and
inc
adc
pop
pop
push
cmp
lock
jnp
push
test
mov
sti
adc
aam
bound
pop
fidivl
jl
cs
fidivrs
jb
fs
push
push
lods
add
inc
cmp
jo
popw
test
cwtl
lods
jae
mov
xchg
sub
add
dec
jno
mov
cltd
pushf
aas
sub
add
sbb
adc
jns
pop
mov
and
movsb
push
mov
inc
lahf
rorb
jb
sub
add
stos
inc
jp
push
shrl
add
mov
pop
js
lea
arpl
or
negb
pop
lret
and
jg
and
pop
add
outsl
push
mov
dec
mov
mov
lods
xchg
repnz
add
fbld
aad
sub
into
loopne
inc
adc
mov
or
xor
jbe
mov
xchg
pop
aam
pop
movsb
xchg
shl
orl
push
iret
adc
shl
lds
fistpll
inc
mov
dec
xchg
clc
jo
scas
xchg
loopne
xchg
mov
movsb
mov
arpl
cmpsb
in
dec
adc
enter
xor
or
cmp
insl
xchg
int3
rcrb
xor
pop
in
lret
js
mov
lcall
sub
fsubl
push
fdivrl
loop
pop
mov
aam
mov
pusha
dec
test
lea
dec
inc
bound
jnp
cmp
mov
xchg
inc
fsub
xchg
pop
mov
sub
or
loopne
in
pusha
add
jne
cmp
or
out
mov
sub
push
jmp
test
dec
call
into
pop
or
push
in
xor
inc
mov
daa
adc
dec
shl
cmp
stc
or
pop
jnp
jmp
inc
rcrb
push
test
jg
mov
mov
mov
jge
test
mov
push
jnp
jbe
mov
movl
es
adc
je
movsl
sbb
jecxz
sub
ret
add
push
xor
jbe
fwait
mov
xchg
subb
rorl
push
andl
xchg
inc
mov
adc
add
xor
and
rcll
shll
xor
inc
xchg
push
andl
xchg
inc
mov
adc
add
xor
and
rcll
shll
xor
inc
xchg
push
andl
xchg
inc
mov
adc
add
xor
and
rcll
shll
xor
inc
xchg
push
andl
xchg
jmp
jno
push
mov
pop
push
into
push
fisubs
outsb
movsb
pop
xchg
dec
add
cmp
ds
popa
les
adc
add
je
data16
push
mov
outsb
movsb
outsb
xchg
dec
test
hlt
cs
hlt
xor
add
adc
add
sbb
inc
addr16
inc
cmp
xchg
enter
cmp
fdivr
jmp
inc
mov
mov
or
push
mov
lret
and
ss
shrb
enter
aaa
push
sahf
pop
and
push
jmp
jle
jecxz
pop
into
pop
cmp
cmc
rcrl
out
xchg
movl
add
cmpsl
jb
add
repz
mov
jo
das
fmull
push
dec
cld
mov
xor
xor
dec
push
scas
je
mov
test
cmp
hlt
cmp
lret
xchg
xchg
clc
cmp
fidivrs
dec
pop
cmp
outsb
shr
mov
mulb
xor
ror
add
daa
scas
adc
mov
adc
movsl
addr16
xchg
and
dec
and
iret
sbb
jne
fwait
jle
mov
mov
adc
cs
xor
push
push
pop
inc
out
mul
movb
cmpsb
pop
mov
sahf
push
xchg
sub
xlat
sub
sbb
arpl
lods
pusha
mov
adc
adc
outsb
in
cmc
dec
mov
jb
dec
test
push
out
jb
jno
arpl
and
sub
xor
pop
jecxz
les
inc
nop
cs
aam
xor
and
adc
add
je
fs
push
mov
outsb
movsb
pop
xchg
dec
test
hlt
cs
aam
xor
and
adc
add
je
fs
push
mov
lods
jae
aaa
es
insl
add
mov
hlt
popf
dec
and
scas
add
push
je
shlb
sub
arpl
imul
fcmove
cmp
cmp
addr16
loopne
and
mov
pop
in
nop
sti
mov
add
push
imul
push
outsb
xchg
push
sbb
cmp
ret
leave
fwait
movsl
add
leave
lahf
iret
cmp
lahf
shrb
xchg
int3
push
fmuls
rcrb
hlt
push
testl
movzwl
mov
inc
push
push
scas
ret
imul
int
push
into
mov
or
in
mov
dec
dec
shrb
loopne
jge
clc
mov
lods
mov
and
sub
mov
adc
test
inc
fcmovb
push
fisttps
js
or
mov
inc
xlat
or
sub
mov
add
sbb
incl
pop
mov
xchg
pop
dec
xor
out
mov
cmp
push
xor
mov
push
cli
fidivl
ja
rolb
push
aam
aas
dec
pop
test
shll
push
xchg
ror
ds
mov
out
faddp
push
movsb
mov
inc
dec
and
xchg
add
pop
loop
jg
pop
add
out
orl
into
cs
mov
sar
dec
jb
jl
mov
rcrb
bound
sub
ljmp
push
pusha
repz
push
pop
lods
mov
out
cmp
push
fdivl
ret
mov
sti
push
mov
lock
push
push
ja
push
mov
cmp
xchg
adc
adc
jne
pop
fs
insl
test
shll
fs
inc
fwait
decl
in
cmp
and
out
mov
cmp
xlat
fiadds
sbb
clc
cli
pusha
fistpll
mov
and
dec
sbb
xor
jae
and
fwait
pushf
pop
addr16
inc
sbb
mov
mov
rcl
sub
lahf
xchg
and
rcll
adc
xor
shlb
pop
sbb
inc
push
fstpt
popf
repz
stos
cmp
movsl
mov
pop
cmp
test
addr16
pop
jbe
fnstcw
out
je
jno
mov
jmp
ds
dec
dec
cmpsl
insl
mov
aaa
dec
push
nop
imul
pop
mov
push
mov
jl
ja
mov
cltd
stc
cmp
les
nop
test
xchg
mov
xchg
sbb
mov
or
mov
pop
cmpb
dec
fsubrl
movsb
ss
cltd
testb
repz
pop
cltd
pop
adc
inc
enter
lret
mov
nop
insw
push
mov
ss
hlt
pop
ja
adc
pusha
add
jb
lret
das
mov
hlt
inc
jb
jp
add
push
ja
repnz
outsb
test
push
cmp
inc
sbb
fisubrs
push
iret
xor
lret
fiadds
loope
sbb
loop
sti
or
and
loopne
insb
mov
sub
out
mov
movsb
bound
pop
sub
mov
dec
add
loope
test
dec
jge
xchg
cld
pop
lcall
add
stc
bound
testb
out
inc
adc
aaa
mov
std
lahf
shrb
or
mov
daa
fcoml
mov
popa
ds
and
pop
loope
sub
idivl
mov
xchg
or
aam
outsb
cmpsl
fisttpll
mov
adc
and
stc
repnz
sbb
dec
loopne
mov
mov
sub
inc
cltd
popa
popf
or
cmp
inc
and
mov
push
jle
xchg
cs
int
pop
mov
lret
shrl
lds
xlat
xchg
test
and
xchg
lea
ss
ret
mov
cmp
xchg
arpl
jle
inc
jno
inc
pop
cltd
and
sub
mov
push
sbb
xchg
mov
sbb
pop
rorb
dec
xor
andl
and
push
sub
push
icebp
push
in
sbb
adc
push
add
neg
and
shll
cmp
jb
adc
fwait
mov
mov
movsb
mov
dec
mov
shll
arpl
add
hlt
leave
daa
aam
push
and
dec
cwtl
aaa
xchg
call
xor
cmp
add
jbe
insb
out
cmp
subl
outsb
cmp
mov
hlt
adc
xor
cs
xchg
jno
cmpsb
ret
lret
stc
lcall
es
adc
gs
mov
pop
lcall
pop
movsb
xchg
fwait
mov
lods
push
inc
pop
lods
pop
xor
inc
xlat
mov
ja
push
add
ret
mov
pop
adc
negb
inc
xor
lahf
std
or
repz
pusha
cmp
or
inc
dec
xchg
cs
jl
push
cwtl
sub
insl
pushf
popa
cltd
xor
ss
sbb
mov
sub
sbb
dec
imul
filds
popa
outsb
stos
pop
jno
hlt
mov
jmp
push
aaa
add
int
or
and
push
pushf
xchg
sub
or
adc
jns
pop
aas
mov
fcom
stos
cmp
or
cmp
repz
arpl
sbb
jo
lds
clc
push
repz
loope
ret
xchg
mov
or
jae
ret
mov
mov
imull
notb
and
pop
pop
loop
subl
xor
xchg
adc
and
pushf
cli
js
push
lock
out
or
inc
fnstsw
aas
adcl
jnp
out
and
out
mov
push
scas
aam
sbb
pop
lret
add
dec
out
leave
mov
shufps
movb
sub
pusha
repnz
jne
pop
popf
xor
loop
shrb
mov
cmp
test
cmp
cmp
inc
cmp
mov
inc
cwtl
adcl
mov
cmpsb
add
loop
xchg
fmull
pop
push
stos
enter
push
loopne
popa
out
or
xchg
sar
xor
aaa
mov
leave
test
pop
mov
push
xchg
adc
push
xchg
aad
enter
sub
and
mov
mov
std
xchg
lcall
les
jle
pop
xchg
mov
mull
pop
mov
leave
xchg
xchg
out
fildl
cmpsb
cmp
mov
das
lods
test
mov
mov
jb
mov
roll
sbb
shll
movsb
and
mov
adc
xor
jle
hlt
lea
xor
sbb
jmp
jae
sbb
jge
imul
daa
sahf
dec
xchg
jb
sbb
adc
jnp
dec
popf
repnz
mov
fsubp
repz
das
fmuls
in
rorl
out
add
lods
cli
fisttpl
je
stos
int
call
push
aam
popf
xor
dec
dec
add
fs
notl
arpl
outsl
cmp
int3
dec
add
dec
mov
push
push
pop
mov
cmc
dec
sub
lea
mov
dec
push
lret
sub
and
pop
xchg
jecxz
mov
cmp
add
or
test
jnp
arpl
jg
outsb
out
es
dec
iret
mov
shlb
test
bound
stos
add
sti
ss
cmpsl
int
scas
jmp
mov
mov
mov
bound
rcll
lahf
add
add
roll
inc
out
push
stc
cmc
push
fsubrs
mov
xor
fwait
mov
sub
xlat
xchg
divl
jmp
mov
cmpsb
and
icebp
sub
or
movsl
cld
xor
jmp
icebp
xchg
inc
cli
test
dec
sbb
push
mov
test
scas
cltd
pop
mov
int
divl
mov
aaa
cld
jnp
xchg
mov
pushf
push
in
inc
in
add
lahf
lahf
push
xchg
mov
mov
cli
enter
stos
xchg
in
scas
and
xchg
cwtl
push
fs
in
lcall
rolb
shrb
mov
sub
mov
pusha
push
mov
div
jne
cwtl
push
lahf
or
dec
scas
mov
dec
adc
pop
jle
jo
pop
mov
lods
mov
int3
aam
mov
in
mov
mov
jp
stc
aad
xchg
in
push
ret
hlt
cmpsb
mov
and
inc
jo
push
mov
gs
addr16
bts
pop
sbb
mov
fdivrp
pusha
push
decb
add
out
jne
sahf
mov
jne
mov
mov
xchg
mov
loop
sar
jmp
mov
add
mov
inc
daa
pusha
push
cmp
std
imul
lea
mov
and
pop
sbb
mov
repz
jns
and
inc
mov
stos
shlb
int
push
inc
out
pop
jmp
bswap
add
mov
inc
dec
divb
das
es
xchg
roll
stos
xchg
push
aam
icebp
clc
adc
roll
mov
push
sub
ret
pop
lock
movsl
mov
jnp
ret
jge
shl
mov
sub
add
shl
insb
fadd
push
xlat
xchg
loop
mov
jbe
xor
hlt
fwait
xchg
outsl
jbe
aaa
cmpsl
sub
in
dec
cltd
jle
or
cmp
hlt
pop
pop
and
or
jg
adc
xor
push
movsl
imul
pop
orb
xor
sub
int
rclb
js
sub
mov
pop
fcomp
pop
mov
enter
jmp
mov
xchg
dec
mov
and
ja
push
add
cs
jb
ficoml
cmc
xchg
fsubs
push
jo
out
adc
mov
xchg
out
xchg
xchg
jge
arpl
scas
jg
pop
xor
or
fcmovu
jns
aaa
mov
mov
stos
nop
mov
sub
xchg
adc
clc
divb
popl
sub
jecxz
jecxz
sbb
inc
das
add
das
icebp
out
sub
lahf
xchg
xlat
out
sub
add
enter
mov
cmpsb
or
inc
movsl
std
xchg
mov
fsubrl
push
fidivrs
movsb
dec
xchg
xchg
inc
inc
lret
es
inc
sbb
jl
push
ficompl
mov
scas
into
dec
int3
aad
jg
push
push
or
call
add
pop
mov
or
sbb
jecxz
inc
movsl
data16
xor
ret
xor
adc
add
dec
lds
adc
ljmp
fdivp
or
jb
je
pop
xchg
ja
or
xor
jp
push
daa
out
push
cmc
or
ret
xchg
jecxz
lcall
in
xor
dec
sub
jnp
jns
in
lahf
aad
in
pop
jle
fcmovu
out
xchg
pop
sbb
or
out
lock
int3
int
push
pop
fisubrs
fimuls
test
push
adc
jl
lods
lods
sti
icebp
mov
mov
sbb
sahf
out
rorb
sub
and
and
dec
jo
xor
enter
mov
inc
sub
jge
mov
dec
mov
mov
jmp
inc
cmc
ret
lods
daa
outsl
push
inc
jmp
pop
xor
pushf
lret
fwait
ss
stos
mov
fisttps
andb
outsb
pop
out
rclb
pop
add
cvtps2pd
sahf
lahf
xchg
sbb
pop
out
add
in
pushw
sbb
lret
mov
xchg
push
out
je
mov
aas
lea
shr
roll
sbb
mov
in
adc
sahf
testl
outsl
mov
adc
pop
mov
bound
jne
dec
repnz
mov
js
mov
hlt
mov
inc
leave
or
lds
bound
push
jb
int
test
ds
fcoms
adcb
mov
mov
repnz
aas
xor
cmp
sti
loope
inc
push
ja
rcrb
mov
fnstsw
lret
test
xrstors
outsb
lods
xchg
xor
les
adc
sbb
aad
ja
ds
and
inc
fdivl
jg
cmp
jo
cmp
inc
sbb
nop
xor
mov
movsl
adc
xchg
sub
mov
sub
pusha
mov
mov
imul
adc
or
outsl
mov
stc
movsl
scas
stos
in
in
lret
daa
jne
popaw
addr16
xchg
pop
call
pop
js
lcall
mov
lret
jl
xchg
jecxz
xor
jle
ds
mov
mov
cmp
scas
push
jg
pop
adc
call
imul
jae
or
loopne
or
or
fimuls
or
jle
dec
orl
dec
cmpsl
ss
and
lahf
push
mov
sbb
ds
in
mov
xor
rorb
mov
outsb
in
rolb
stos
repnz
or
sub
inc
dec
pop
push
fwait
pusha
jge
mov
gs
fmul
sbb
test
sub
cli
push
xor
xor
mov
out
lcall
mov
lahf
sbb
mov
inc
adc
jp
sub
push
test
pop
in
out
call
push
out
std
iret
mov
sbb
mov
cmp
clc
xor
adc
fld
dec
inc
stos
xor
jae
in
add
rcrl
icebp
scas
mov
jne
ljmp
adc
shrb
movsb
icebp
or
nop
jae
mov
rcr
rclb
loopne
femms
xor
add
inc
push
bound
mov
movsb
pop
xor
push
daa
fsubl
lret
mov
dec
cmp
repz
push
inc
lcall
bound
push
xchg
test
cmp
jae
into
sub
or
dec
cmpsb
leave
stos
cld
jl
mov
notl
hlt
add
aad
insb
add
cwtl
sub
aas
push
inc
cmp
stos
cmp
cld
pop
je
test
ja
cltd
mov
push
inc
mov
in
ljmp
cli
bound
pushf
dec
adc
mul
ss
scas
mov
cwtl
sub
in
pop
les
jl
push
inc
stos
shufps
icebp
dec
lods
xchg
sarb
push
data16
jo
sub
imul
or
sub
add
jecxz
mov
mov
pop
fdivl
add
xchg
js
cmpb
xchg
jne
outsb
fmuls
xor
sbb
mov
or
mov
es
add
je
xor
es
mov
adc
pop
insl
mov
push
loop
outsl
int3
add
xchg
jmp
mov
sahf
loop
jp
adc
lcall
sub
inc
daa
popf
cmp
aam
add
jmp
push
or
imul
sbb
outsb
and
adc
pop
xchg
xchg
shll
mov
fldt
xor
repz
mov
or
cmpsb
push
loop
jmp
cli
pop
cmpsb
pop
add
data16
iret
filds
mov
xchg
shrl
xchg
or
stc
sub
cmp
popa
push
mov
cltd
popf
mov
and
test
fdiv
cs
adc
mov
neg
sbb
and
xchg
mov
je
jecxz
cld
and
hlt
sub
outsb
out
mov
shrl
mov
out
lcall
fsub
mov
icebp
and
jae
jmp
jae
jge
rorl
pop
push
lahf
xrelease
cmp
and
mov
dec
and
int3
movsl
mov
jo
mov
popf
jmp
adc
or
notl
sub
cld
gs
jnp
jmp
aaa
ljmp
sbb
and
pop
push
adc
divb
mov
pop
jo
mov
test
dec
movsl
cmpsb
ds
das
ds
jle
xchg
xchg
xor
or
test
pop
mov
das
jno
adc
ljmp
xchg
dec
cmovno
popf
xlat
jge
dec
cmp
jmp
pop
rclb
xchg
lret
rol
adc
push
jle
adc
mov
addr16
in
jbe
movsb
sub
xchg
js
cmp
dec
jge
jns
dec
lock
movb
out
addr16
jge
add
jl
push
iret
repz
repnz
and
fcoms
adc
je
test
xor
mov
inc
scas
xor
insl
cli
jl
outsb
inc
lods
lods
and
int3
dec
mov
jae
xor
xchg
rorl
pop
movsb
pop
mov
addr16
add
push
dec
into
sbb
xchg
rcl
ja
cmp
fs
testb
dec
xlat
dec
shll
dec
xor
dec
pop
cli
mov
cmp
dec
and
mov
ret
xor
stos
push
loopne
jle
mov
sub
mov
mov
movsl
loope
xchg
xchg
inc
pop
xchg
jbe
bound
in
sbb
sbb
mov
pop
mov
ret
cmpsl
xor
rorb
and
lret
into
inc
jns
xor
jge
mov
daa
mov
popa
mov
inc
cmc
sar
mov
ds
xchg
ss
jnp
cmp
lods
icebp
push
adc
jecxz
mov
pop
or
push
pop
shlb
stc
es
loop
sbb
repz
adc
dec
inc
outsb
mov
pop
inc
ljmp
inc
mov
dec
inc
in
fs
push
subb
scas
add
cmp
jnp
add
xchg
in
cld
ss
dec
pop
mov
dec
cmpsl
and
or
sti
push
pop
loopne
mov
insl
xchg
repnz
sti
mov
inc
cmp
adc
mov
rcrl
repz
adc
cmp
sbbl
fcoml
or
repz
inc
or
in
sbb
test
jg
sbb
dec
add
cmpsb
mov
and
mov
pop
mov
lcall
mov
pushf
nop
pop
test
mov
xor
lahf
sahf
lcall
sub
inc
and
adc
mov
sub
push
pop
in
stc
add
fldt
pop
les
sub
mov
add
stc
jne
ret
pop
incl
pop
ds
push
pop
loopne
and
sbb
aad
xor
mov
add
sbb
repnz
sysenter
adc
pushf
sub
vmaskmovdqu
leave
idivl
insb
aas
pop
pop
cmpl
add
lahf
jne
mov
push
add
dec
loope
jmp
loop
pop
pop
mov
and
add
push
rclb
pusha
push
inc
mov
pop
jae
xchg
cmc
push
js
lock
mov
stc
inc
xor
sub
sahf
xor
xor
cmp
cltd
in
cmovs
xchg
jnp
out
fisubrs
fisubrs
sarl
hlt
call
and
pop
sbbb
fildl
nop
out
in
cld
cmp
cmp
call
out
int
leave
or
je
stos
popa
out
pop
mov
adc
push
rclb
jmp
sub
rorb
repz
inc
xchg
cmp
push
dec
mov
push
cs
pushf
dec
mov
mov
clc
jo
mov
pop
mov
dec
xlat
jl
push
add
push
mov
test
xlat
push
mov
ss
push
jnp
fsubrs
add
add
ds
fwait
daa
pop
or
cld
test
insb
ds
lds
hlt
cli
cs
sar
xor
xchg
add
in
and
scas
stos
out
inc
sub
sub
push
mov
push
mov
inc
lret
sub
inc
jo
aaa
aad
mov
push
in
test
pop
les
fs
ret
in
pushaw
ja
jns
cmp
cmp
js
xchg
pop
cmp
dec
push
mov
push
and
hlt
push
out
xchg
inc
mov
int
lcall
lds
repnz
orb
sahf
mov
jb
push
rorb
fmull
loop
mov
data16
jbe
add
push
or
imul
lds
push
sbb
js
add
das
leave
xchg
push
push
or
or
push
arpl
xchg
sub
xchg
xor
in
jnp
scas
sub
push
mov
lret
adcl
xchg
and
push
leave
dec
jmp
ret
aam
push
testb
js
mov
scas
decl
pop
push
sub
xchg
pop
insl
clc
sbb
or
mov
inc
add
pop
cmp
icebp
cmp
popa
mov
stos
lcall
inc
xor
cwtl
imul
or
outsb
sub
pop
rcl
mov
mov
aas
mov
lock
jmp
stc
fimuls
jnp
add
bound
test
dec
rcl
movsb
in
or
pop
cmpsb
pop
xor
xchg
xchg
dec
aam
cmc
and
adc
and
movsl
in
cmpsl
push
jo
mov
jge
jl
mov
inc
and
cld
lds
adc
sete
lret
out
lahf
push
aaa
sbb
js
cmc
mov
mov
scas
aaa
and
in
add
lcall
movsb
lret
test
hlt
cs
aam
xor
and
adc
add
je
fs
push
mov
outsb
movsb
pop
xchg
dec
test
hlt
cs
aam
xor
and
adc
add
je
fs
push
mov
outsb
in
pop
in
dec
test
hlt
cs
push
aam
in
out
and
adc
add
je
fs
je
inc
dec
mov
movsb
push
hlt
cs
push
mov
add
adc
leave
cld
es
popa
stos
jno
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
test
xchg
and
ds
inc
add
adc
addb
loop
shlb
test
xchg
and
jb
in
cmc
cmp
xchg
cmp
shlb
pushf
xor
fdivl
std
push
cmc
inc
sbb
cmpl
cmp
in
inc
cli
imul
aad
and
xor
adcl
lods
pop
insl
cli
dec
mov
repnz
popa
push
fisttpll
xchg
jb
out
pop
pusha
dec
add
pop
flds
inc
sub
mov
push
js
add
jp
loop
mov
ljmp
out
loop
push
jne
test
push
insb
cmp
arpl
cmp
mov
adc
lret
repnz
sbb
fdivs
aad
sbb
inc
push
cmp
int
test
add
out
and
lds
lcall
scas
loop
dec
inc
cmp
stos
push
pop
std
pop
cli
mov
gs
add
push
mov
shlb
dec
xor
shlb
in
in
inc
sbb
or
sbbb
loop
shlb
jmp
adc
add
adc
push
add
notl
inc
mov
xchg
stos
sbb
ja
add
cmp
pushf
jecxz,pt
test
lods
loopne
stc
push
pusha
frstor
pop
aad
in
cmc
inc
add
xchg
xor
loop
shlb
test
xchg
and
jb
in
cmc
inc
add
xchg
xor
loop
shlb
test
mov
shrb
xor
and
push
cmp
shrb
out
sub
pusha
sub
xor
lds
cmp
add
adc
test
cmc
or
push
cmp
mov
imul
repnz
sub
push
aad
out
or
je
aas
nop
jbe
cmp
dec
add
add
dec
shrb
sub
es
jg
fldl
ret
mov
cmpb
das
movsb
dec
xchg
fdivs
pop
lds
bound
test
imull
add
int3
push
lret
and
out
xchg
push
sbbb
out
xchg
mov
adc
dec
mov
cmp
inc
cmp
addl
subb
jnp
inc
repnz
or
add
test
cs
fistpll
cmp
mov
push
xchg
sub
and
xchg
ljmp
aaa
ljmp
dec
cmp
push
lret
ret
pop
mov
xor
sbb
fwait
adc
sbb
hlt
add
mov
pop
jecxz
aas
push
divl
inc
pusha
mov
push
lds
jmp
inc
pop
and
stos
stc
inc
fs
stc
rcr
bound
nopl
fcoml
movsl
movsb
pusha
jle
rcrl
mov
cmpsl
cmc
push
outsb
and
adc
push
mov
cmpsb
adc
xor
loop
jge
xor
lods
push
push
adc
test
pop
cmpsb
aas
ret
ret
add
xchg
lods
lret
mov
sub
push
adc
inc
xchg
sub
sub
jnp
loope
push
scas
mov
adc
ret
aad
nop
lods
ja
mov
ds
ljmp
pop
jmp
out
mov
fnsave
call
pop
dec
dec
cmp
rol
arpl
and
jp
rcrl
lret
mov
mov
push
xchg
loop
fmul
sarl
inc
inc
rcrb
es
adc
and
push
adc
vpminub
sbb
stc
addr16
outsl
cmc
and
sub
out
and
xchg
jp
scas
push
xcrypt-ecb
lcall
pop
lret
aaa
mov
sub
sub
out
add
dec
mov
cmp
sbb
mov
std
into
sbb
lea
jae
xchg
ss
sarb
movsb
jge
insl
das
pop
xor
jo
js
lods
cmp
jae
xchg
repnz
movsb
jnp
cld
mov
sub
roll
push
and
nop
ja
pop
and
dec
sbb
mov
pop
shll
dec
sub
subl
dec
cli
mov
dec
cmp
add
lods
pop
inc
mov
sub
lods
clc
mov
mov
bnd
icebp
scas
dec
leave
popa
lods
xor
sarb
push
fwait
adc
dec
add
dec
jbe
sahf
test
pusha
dec
mov
nop
popa
pop
mov
adc
xchg
stos
jl
mov
icebp
out
sbb
xor
outsb
das
inc
mov
in
mov
jle
dec
ret
in
into
jne
clc
pop
sbb
adc
int
mov
jmp
adc
mov
adc
add
cli
loope
int
pop
push
roll
jno
inc
mov
inc
jno
push
aad
out
jno
sar
test
fadd
sub
inc
push
cltd
lods
xchg
pop
adc
adc
ds
loope
adc
inc
xor
mov
push
imul
in
sub
addr16
sbb
cmp
push
xor
mov
ret
cltd
out
sbb
enter
or
inc
gs
cli
add
xor
iret
xor
outsl
lods
xor
mov
and
je
inc
loop
dec
inc
push
xor
cmc
mov
sub
mov
xchg
dec
sbb
int3
jns
push
push
in
in
inc
mov
outsl
inc
imul
in
negl
sbb
and
inc
push
jmp
mov
ja
popa
loope
push
mov
mov
or
jmp
cs
in
test
repz
fiaddl
inc
mov
fistl
inc
icebp
jmp
mov
xchg
arpl
cs
stos
mov
enter
pop
cmpsl
push
popf
test
xchg
cwtl
loope
sbb
popa
push
mov
pushf
mov
sbb
dec
mov
push
xor
test
jp
push
mov
pop
icebp
nop
jnp
mov
sbb
sub
cmpsl
pop
nop
adc
cmp
insb
mov
mov
ficomps
mov
jnp
addr16
in
inc
mov
push
out
jg
inc
shrl
imul
xor
enter
and
or
pusha
mov
pop
cmc
jecxz
dec
test
inc
lock
add
inc
sub
and
stos
pop
xchg
mov
ret
add
test
fsubs
push
gs
sbb
push
jmp
xchg
jg
std
ja
mov
pop
repz
notl
sub
pushf
inc
sbb
jp
sti
rcrb
xlat
add
lock
rclb
mov
mov
inc
mov
mov
or
mov
loope
andb
mov
push
add
xchg
popa
cld
mov
sahf
sub
std
jns
xchg
fs
fidivrl
lea
in
int
mov
or
mov
mov
pop
cs
mov
loope
xchg
popa
cmp
adc
pop
movl
test
jmp
xor
addb
ret
xchg
enter
fsubrl
mov
push
push
cmpb
ret
push
push
dec
outsl
out
cmp
xor
in
dec
out
cs
cmpsb
xor
sbb
mov
jp
and
aaa
ljmp
adc
mov
in
xor
pushf
inc
push
mov
test
push
push
cmpsb
dec
xor
add
mov
dec
sub
jb
shl
lahf
in
imul
lods
dec
jae
mov
mov
in
xor
ds
sarl
pop
inc
and
aaa
and
in
adcb
pop
sbb
mov
jo
lods
aas
sbb
into
pop
icebp
add
sbb
cs
xor
ljmp
dec
push
sub
ficompl
add
mov
xor
sbb
inc
andb
aam
dec
xor
loop
cmp
lods
mov
mov
outsl
and
test
icebp
inc
cmp
and
leave
cs
into
pushf
push
xchg
insb
ja
add
or
mov
jnp
cmp
icebp
mov
fiaddl
ss
fwait
jmp
inc
mov
addr16
aas
cltd
test
sub
lea
pop
mov
sub
call
fcomi
and
mov
cld
pushf
push
sbb
nopl
dec
and
adc
sub
adc
pop
movsl
addr16
sbb
ja
lods
push
das
mov
add
std
dec
cmp
lret
addr16
lea
push
mov
out
xor
lea
cltd
mov
gs
sbb
dec
std
jbe
mov
aad
and
popa
idivl
scas
mov
mov
dec
repz
repz
std
gs
iret
mov
rcr
sbb
mov
cs
dec
mov
ret
push
arpl
sbb
push
mov
sahf
pop
mov
movsb
jbe
xchg
loopne
test
pop
hlt
fidivrl
into
fdivl
les
push
mov
xchg
hlt
push
lds
mov
mov
mov
leave
pop
cli
cmc
add
pop
xchg
pop
lret
lret
mov
xor
lcall
inc
pop
inc
mov
js
fcompl
sub
pavgb
aam
inc
push
fucomip
ret
ss
jl
mov
stos
pop
lods
adc
cli
ret
jo
es
sbb
fidivrs
or
or
inc
add
xchg
jae
xor
std
rcrb
inc
incl
clc
mov
ficompl
leave
sbb
sub
sbb
mov
add
inc
out
fstpl
and
xor
and
hlt
pop
pop
aaa
inc
pop
jg
mov
loop
cmc
cs
notb
xlat
push
imul
mov
bound
bound
jne
mov
adc
aaa
xchg
ret
sub
jge
push
fists
outsb
xchg
dec
push
mov
insl
hlt
sub
dec
cmpsl
mov
psubb
sub
pop
sub
paddusb
popf
insb
jecxz
pop
sbb
pop
add
rol
dec
cmp
ds
inc
sbb
and
mov
push
fisttpl
push
xorb
pop
stos
pop
jno
xchg
stos
fs
mov
arpl
test
cmp
adc
cmp
insb
imul
mov
test
sti
mov
incb
add
add
adc
adcb
mov
dec
daa
xchg
cmp
cwtl
lahf
shll
sti
pop
fists
mov
int
movsb
bound
inc
mov
xlat
mov
enter
xchg
test
cmp
scas
mov
jle
mov
lock
lods
je
daa
ds
push
out
bound
sub
fists
sbb
cmc
pop
mov
inc
test
pop
adc
and
xchg
fisttps
sahf
add
cmp
sti
stos
fistps
out
xchg
orl
aas
xchg
dec
shll
imul
faddl
es
sub
decl
addr16
flds
cmp
adc
jns
rorl
cld
pop
xor
adc
ficomps
and
imul
lahf
lret
lock
sub
sbb
sbb
addl
cld
sbb
lret
js
mov
jnp
jl
cld
pop
je
and
shlb
lahf
ss
in
fcmovb
clc
daa
test
insl
sub
sub
cmp
les
bound
push
idivl
adc
jb,pt
gs
jb
mov
repnz
adc
mov
or
shl
fld
add
mov
test
mov
leave
mov
jns
ss
dec
inc
and
xorl
sub
jg
fldl
test
mov
xor
lea
inc
shl
hlt
jp
fnsave
mov
mov
fnsave
std
repz
pushf
je
clc
cmp
pop
data16
cmp
or
mov
clc
sub
ds
stc
daa
mov
bound
lcall
lea
ret
xchg
push
shrb
popf
xorl
and
mov
xor
sub
out
jns
clc
enter
jnp
inc
jecxz
into
adc
std
sub
pop
add
test
movsb
fstp
xor
ret
and
fidivrl
call
jno
and
ss
aaa
fimull
inc
push
clc
or
pop
ja
sti
pop
sbb
scas
sbb
push
and
js
push
xchg
aaa
jo
idivb
mov
mov
cmp
push
fbld
cli
pop
pop
enter
jno
loope
sub
icebp
mov
movsb
mov
clc
fldenv
iret
or
add
popf
inc
sub
insb
push
cmp
mov
rcrl
movsl
cmp
xor
addr16
popa
lods
lock
sub
sbb
adc
pop
enter
jmp
inc
push
push
xor
mov
es
fldcw
xor
adc
xor
or
xchg
jns
xchg
jo
xchg
or
loop
lods
xor
pop
jg
push
ja
out
lock
cmp
jno
xor
add
int
sahf
cmpsl
jl
std
mov
mov
cld
mov
jo
or
inc
or
fisttpll
shrl
sbb
sbb
add
jns
insb
aas
or
add
dec
test
or
push
sub
xchg
xor
call
pop
gs
adc
and
push
mov
scas
mov
mov
adc
mov
cmp
stos
inc
aas
ret
add
rorl
call
and
shrl
fs
hlt
cltd
out
inc
leave
insb
mov
mov
jge
cltd
push
jg
push
jecxz
cmp
jle
lret
jl
mov
into
adc
in
insl
sub
sub
leave
in
sbb
repz
pop
hlt
inc
movsl
scas
jle
shl
push
ret
inc
clc
loop
add
rep
push
int
test
pop
scas
mov
stos
inc
inc
cwtl
xor
outsb
int
push
jg
popf
jg
daa
mov
int
push
popa
addb
jnp
and
add
and
cmp
xor
insb
mov
add
nop
sbb
inc
nop
xor
lds
jne
fdivrl
and
cli
cli
jp
mov
insl
pop
pop
mov
jno
pop
pop
cwtl
in
lods
mov
jbe
adc
in
jecxz
inc
movq
push
jb
cmpsl
xor
loopne
cmpsb
ret
push
test
bound
test
ret
std
cmp
xchg
enter
xlat
fidivs
ds
in
and
cwtl
dec
call
sti
icebp
test
clc
or
add
dec
sbbl
shl
dec
test
xchg
shr
push
clc
mov
add
mov
nop
popa
inc
repnz
insl
in
or
shrl
cmp
jg
mov
mov
inc
inc
xor
inc
xor
loopne
scas
jmp
loope
push
xchg
stos
dec
xchg
add
push
popa
inc
sub
jg
out
adc
xlat
sub
aaa
mov
xor
mov
mov
dec
lods
push
mov
icebp
scas
lret
jb
loopne
pop
repnz
in
lods
add
mov
and
xor
jae
frndint
ret
enter
dec
xchg
push
mov
loop
mov
or
gs
mov
flds
inc
lcall
adc
int3
scas
cmp
shlb
mov
xor
fimull
jp
fbstp
fisubrl
and
lods
ret
pop
or
jp
push
rol
push
add
lods
rolb
adc
in
xor
mov
shlb
mov
add
js
pop
push
or
xchg
js
dec
push
sbb
xor
imul
inc
xor
rcrl
sub
ja
cmpsl
inc
mov
rol
jmp
clc
test
lds
pop
rclb
xor
lods
add
pop
pop
adc
es
jle
lock
enter
or
shll
sahf
popa
mov
jecxz
and
mov
xchg
mov
cld
jecxz
out
mov
insb
xchg
fisttpll
out
add
cmpl
push
inc
xlat
cmp
in
mov
adc
cmpsl
aam
cmp
inc
jmp
leave
aaa
popa
adc
das
jns
movsb
adc
int3
pop
imul
inc
lcall
mov
jl
shlb
movsb
pop
inc
sbb
mov
dec
mov
fmull
add
mov
jnp
sbb
or
sbbb
xor
adc
fldt
push
add
mov
jle
xchg
sub
ret
fwait
int
cmpsl
xor
push
xor
aam
mov
and
test
test
jle
mov
inc
and
hlt
fs
scas
lcall
outsb
mov
test
pop
pushf
xor
fcomps
lcall
sarl
xchg
jns
dec
aaa
add
add
test
add
and
insb
inc
sahf
push
sbb
fcmovnbe
daa
push
pushf
fiadds
fimull
fldt
xchg
icebp
das
std
and
je
pop
stos
repnz
out
xchg
jge
aas
add
mov
shl
cmp
adc
nop
jle
inc
popa
or
jmp
fldl
or
xor
jb
punpcklbw
jmp
cmp
insl
ret
mov
xor
popf
rcll
ret
and
scas
cmp
movsl
fisubrl
sbb
in
shrb
pop
xor
or
push
mov
movsb
lea
xchg
push
adc
cs
rcr
mov
sub
cmpb
xchg
inc
pusha
mov
push
dec
lret
pop
xchg
mov
sub
sbb
pop
jl
outsl
xchg
pop
bound
mov
jb
rolb
and
scas
dec
add
loope
xchg
ljmp
jo
incl
adc
cmpsb
aaa
push
sbb
pop
sarl
dec
out
cltd
push
xchg
mov
jp
push
leave
sub
cld
pop
sub
dec
pop
xchg
cs
pusha
pushf
sbb
mov
push
out
mov
in
sub
arpl
cmp
gs
jno
ficoms
loopne
sbb
inc
sub
dec
je
mov
adc
xor
or
jb
xchg
inc
cmpsb
ds
lds
jmp
ss
rolb
lock
pop
orl
mov
dec
loopne
xchg
popf
mov
jno
insb
andl
xor
movsb
in
into
and
pusha
cmp
xchg
jnp
pop
inc
fistps
loopne
pop
cwtl
mov
cwtl
loop
mov
cmpsb
xchg
fimuls
push
outsb
xchg
lods
adc
sbb
and
mov
nop
in
fwait
mov
mov
jmp
js
cmpsl
jp
or
aad
mov
dec
sub
sbb
ss
mov
mov
inc
sahf
mov
iret
xchg
dec
loop
testl
mov
cmp
out
fnstenv
call
mov
xchg
xor
scas
jg
sbb
in
fsubrs
cltd
sarb
dec
xor
mov
dec
jnp
and
aas
mov
jnp
adc
add
adc
hlt
pop
or
jae
imul
add
jle
nop
jbe
aam
jmp
test
mov
jo
and
jne
sti
movsl
adc
push
lret
mov
nop
jno
inc
jp
sub
flds
add
jbe
xor
out
test
aaa
xlat
inc
je
and
test
mov
shlb
cmpsl
sbb
adc
inc
adc
cmp
dec
icebp
in
xchg
pop
xor
mov
fs
adc
call
fidivrs
stos
addr16
jno
cmp
cmc
pop
push
sub
into
xor
int3
inc
mov
pusha
mov
push
lret
leave
stc
cmpsl
shlb
add
fstpl
ja
push
dec
inc
add
mov
sub
xor
pushf
xor
imul
sub
push
scas
fldcw
scas
mov
lds
insb
jnp
mov
loopne
lock
enter
dec
and
rorl
push
or
imul
out
lcall
sbb
es
push
push
xor
daa
or
xorb
sub
outsl
mov
lock
xor
xchg
dec
add
call
stc
push
sub
popf
fmuls
xlat
scas
mov
mov
jg
in
jnp
cmpsl
jne
insb
decl
sarl
adc
pop
jl
add
leave
sbb
adc
mov
addr16
sarl
fwait
addr16
in
mov
dec
jp
dec
push
in
pop
and
mov
xor
add
sti
sahf
in
push
and
jbe
dec
cmc
and
and
sbb
xchg
out
fidivrl
aad
inc
add
cwtl
frstor
repnz
mul
mov
in
shrb
cmp
push
pop
pop
xchg
inc
out
out
dec
les
stos
arpl
xchg
out
in
cs
pop
jnp
mov
jp
roll
dec
in
lds
push
cmp
sbb
push
ret
sbb
mov
lret
adc
mov
jno
cmp
jp
rorb
jnp
scas
mov
js
nop
nop
mov
xor
or
mov
xchg
add
push
xor
mov
loopne
lret
fldt
sub
sahf
dec
movsb
out
in
stc
push
dec
imul
pop
xchg
and
mov
daa
mov
shrb
iret
and
mov
or
pop
std
lret
std
fimuls
sti
je
sbbl
icebp
and
loope
in
clc
shll
push
dec
pushf
xor
mov
fsts
movsl
cmp
sbb
inc
xor
xor
lods
push
inc
mov
aaa
jmp
dec
dec
leave
outsl
cltd
movsb
lcall
xchg
xchg
xchg
fcompl
xor
xor
and
pop
cwtl
push
push
lret
jne
test
dec
adcb
dec
imul
int
xchg
mov
idivb
repnz
in
mov
cmp
xlat
cltd
fistpl
bound
mov
jnp
imul
jb
mov
repnz
add
bound
push
xor
cli
sahf
add
popa
ss
mov
push
orb
es
pop
cmpsb
push
dec
sbb
ret
ss
dec
outsb
sbb
idivl
movsl
add
push
inc
aam
cmpsb
sbb
push
in
pushf
sbb
push
jo
test
or
cld
out
test
movups
scas
adc
in
cmc
inc
add
xchg
xor
loop
shlb
test
xchg
and
jb
in
cmc
inc
add
xchg
xor
loop
shlb
test
xchg
and
jb
in
cmc
inc
add
xchg
xor
loop
shlb
test
xchg
and
aad
gs
jne
cli
mov
or
jp
sbb
sbb
stc
dec
jno
popa
outsl
pop
cmpsl
push
das
sub
loope
xchg
lahf
addl
pop
pop
inc
dec
jno
popa
outsl
adc
add
xor
and
rol
iret
loope
xchg
in
in
mov
mov
push
mull
ja
push
dec
pop
sbb
fildll
lcall
rol
adc
popa
aas
xor
xlat
inc
into
xor
add
push
dec
les
hlt
inc
nop
pop
pop
push
lds
call
cld
sbb
movsl
rclb
cmp
push
scas
or
adc
adc
xor
push
add
push
and
dec
loope
cltd
xchg
jo
inc
or
jb
fistpll
iret
push
xchg
pop
adc
or
inc
mov
cmp
adc
pop
xor
stos
les
xchg
xor
add
bound
orl
inc
pop
mov
mov
cmpb
imul
pop
loop
bound
aam
aam
inc
cmp
xchg
stc
stos
mov
fdivrs
mov
movsl
lock
adc
subl
dec
inc
pop
jno
or
rdtsc
aas
cltd
ss
push
xlat
sub
push
icebp
xchg
scas
and
cmp
jg
je
and
dec
mov
or
sti
orb
shl
ret
push
ss
es
add
pusha
inc
pop
dec
push
sbb
xchg
lcall
fsub
pop
jb
add
and
push
sub
rdtsc
aas
and
rcr
ror
jmp
out
xchg
lahf
orl
jno
popa
outsl
adc
add
xor
and
rcr
ror
jmp
out
xchg
lahf
orl
fprem
ds
pop
xchg
outsb
xchg
push
icebp
inc
xor
out
mov
fdivp
adc
xchg
jno
and
jns
loopne
push
in
mov
add
sti
push
idiv
mov
jns
shll
dec
test
xor
imul
add
ret
sub
clc
mulb
stos
pusha
add
rolb
or
push
adc
jg
add
xor
scas
cwtl
out
fstpl
lret
mov
inc
iret
dec
or
mov
aad
mov
jbe
lods
gs
jnp
mov
aam
data16
ljmp
adc
lock
pop
fcompl
pop
jmp
repz
dec
or
in
xor
repnz
outsb
js
jae
adc
or
xor
and
or
mov
ret
cvtpi2ps
lock
xor
arpl
cld
out
dec
inc
imul
add
dec
jae
sbb
dec
mov
stos
pop
sbb
mov
pop
and
in
fnstenv
fs
sbb
loope
inc
clc
test
in
mov
int
pusha
cli
lcall
adc
lock
inc
loop
add
xchg
dec
int
insl
mov
out
jno
lret
dec
sub
fstps
mov
das
stc
scas
dec
add
std
and
arpl
inc
push
jbe
notl
sbb
mov
dec
push
xorb
jge
and
xor
testb
pop
xorl
adc
and
mov
add
jg
mov
scas
jno
sahf
xor
popf
push
and
lret
add
sub
dec
xchg
mov
push
inc
mov
stos
mov
xchg
or
xchg
pop
push
sti
data16
fwait
lret
loope
sub
inc
and
adc
popa
call
pop
sbb
pusha
mov
mov
adc
repnz
lret
call
pushf
inc
jae
divb
popa
icebp
adc
test
and
or
dec
jmp
pushf
xrelease
scas
mov
lods
cmpb
sub
test
inc
ret
cltd
push
stc
insb
aaa
ljmp
add
adc
mov
mov
fnstenv
fs
nop
mov
lahf
dec
or
cmp
pop
mov
add
lcall
movsb
insl
pushf
push
mov
stos
and
fdivl
inc
xor
jne
out
cmp
push
loopne
mov
inc
rorl
sbb
inc
pop
push
adc
sub
pop
sarb
inc
rclb
std
inc
test
mov
xor
pushf
and
clc
insl
xlat
outsb
shrl
mov
inc
pop
mov
or
push
outsl
adc
mov
push
mov
pop
sub
jne
andl
cmp
mov
push
ja
enter
mov
arpl
int
ficompl
xor
repnz
mov
les
aaa
mov
cwtl
das
stos
push
xchg
or
pop
mov
ds
or
pop
pushf
xchg
inc
sti
inc
inc
test
add
jmp
jmp
xchg
pop
inc
popf
stc
insb
rorb
jmp
jnp
jle
fs
xor
scas
dec
and
push
dec
insl
sub
push
test
mov
shll
adc
and
popl
mov
cld
xchg
pop
js
xchg
jnp
sub
fistpll
sahf
je
bound
xchg
inc
bound
push
addr16
add
js
arpl
push
call
or
fisttps
pop
shll
inc
gs
jg
jge
in
orb
es
lock
pop
jl
rol
push
sti
popa
inc
test
mov
mov
nop
dec
lahf
int
subl
sbb
mov
ss
mov
js
call
or
leave
cmp
stos
push
lret
cmpsb
and
pushf
jb
or
insl
adc
jne
jo
push
and
mov
jle
js
xor
jbe
add
mov
test
mov
mov
test
xor
xor
or
xchg
push
jmp
dec
dec
push
int3
jecxz
add
mov
cmp
fisttpl
outsl
icebp
push
hlt
ss
lds
mov
sub
xlat
cli
aas
mov
jo
mov
sbb
inc
dec
mov
jnp
mov
xor
outsl
pop
jne
out
jp
aaa
imul
outsb
aas
jns
mov
inc
add
inc
stos
ss
mov
in
sbb
cltd
std
mov
dec
inc
mov
scas
iret
inc
mov
xor
dec
xor
mov
sti
xchg
ds
adc
ljmp
lds
mov
pop
inc
mov
inc
nop
push
sbb
outsl
push
scas
shrb
cltd
fistl
mov
and
jmp
insb
add
xchg
jmp
fiadds
dec
sbb
loop
inc
lcall
ds
xchg
push
loope
pop
stos
cltd
mov
and
push
xor
popf
test
ds
ss
push
or
mov
mov
cmp
and
addr16
jmp
out
ds
out
mov
mov
jmp
push
mov
fsubrl
lds
je
sbb
cmp
out
loope
rcrb
fimuls
cltd
or
and
and
sub
lock
adc
mov
outsb
sbb
fildl
cmp
sahf
xlat
xchg
pop
leave
lret
arpl
inc
push
sbb
lods
js
imul
and
push
add
add
or
pop
dec
mov
cmp
cli
out
push
xchg
sub
clc
push
ret
jge
movsl
or
ficoms
in
cmp
clc
dec
xor
dec
adc
lahf
inc
add
insb
insb
data16
mov
divl
nop
cmpsl
mov
add
outsl
push
int3
daa
loope
or
pushf
ja
aam
aam
and
repnz
pop
mov
mov
cmpsb
xchg
test
mov
push
fisubrs
in
push
loopne
adc
clc
dec
mov
imul
mov
mov
faddp
dec
jno
xor
push
divl
repnz
xchg
xchg
mov
cmp
pop
dec
ror
or
mov
icebp
repnz
outsl
rolb
cli
inc
xchg
scas
out
arpl
or
dec
outsl
mov
in
fidivrs
xor
filds
movsl
add
adc
xchg
fisubrl
mov
decb
mov
rcll
cmp
push
or
sub
mov
stos
out
cmp
mov
adc
mov
and
aad
cmp
push
add
movsb
lods
mov
cmp
rolb
ret
insb
imul
out
lods
aas
mov
aam
inc
and
or
fbstp
cmp
or
and
scas
inc
add
mov
test
push
int3
out
and
mov
insb
dec
daa
or
or
inc
cmp
ds
aad
push
aas
cmp
imul
cwtl
je
and
fiadds
mov
pop
popa
gs
push
jo
jg
test
jno
dec
mov
push
mov
dec
mov
sbb
or
sbb
ret
enter
sbb
push
mov
xor
push
xlat
fucomip
mov
xchg
mov
mov
stos
push
jns
xchg
adc
imul
fsubr
ret
dec
mov
adc
xchg
adc
push
addb
mov
cmp
hlt
mov
out
shlb
fimull
sbb
fucom
inc
sbb
lds
cmpsb
aam
cmp
out
mov
jne
and
cmp
add
cmpsl
and
xor
mov
xor
call
mov
dec
orb
sub
sbb
mov
cmp
leave
ss
push
add
addr16
out
xchg
dec
test
bound
cmp
lods
cltd
jle
dec
cmp
shl
jmp
daa
push
pop
in
adcl
or
test
insl
in
lret
add
out
nop
xchg
imul
or
lea
test
pop
mov
push
scas
stos
fisttpll
test
in
sti
and
lret
jne
mov
hlt
nop
ret
adc
jmp
adc
scas
inc
mov
push
aaa
mov
adc
jmp
imul
inc
xlat
push
pop
adc
mov
sbb
or
xchg
xor
mov
xor
je
push
add
sub
push
mov
add
int3
cmc
mov
movsb
int
lea
cltd
inc
movsb
add
iret
dec
adc
mov
out
fs
loope
test
sub
mov
xchg
test
jo
repnz
out
addr16
ss
lds
xor
jne
cli
cmc
sbb
mov
cmp
pop
shrl
pop
sbb
jne
mov
cmp
mov
fidivl
andl
mov
xor
arpl
pop
roll
cltd
in
mov
loope
in
mov
cmc
sbb
jb
cmpsl
insb
cld
popf
or
arpl
mov
imul
or
js
clc
lods
decb
int3
aam
push
mov
test
sub
and
popf
dec
iret
jne
ljmp
jmp
pop
mov
pusha
fcomi
imul
push
dec
add
div
stos
mov
inc
fisubrs
pop
mov
mov
bnd
pop
rcll
insl
jl
int
xor
ja
cld
or
sub
bound
out
jb
adc
lds
push
cmpsb
sbbl
test
and
es
into
aam
mov
fcoms
mov
cmc
sub
in
adc
lret
xor
out
sbb
cld
in
cmp
pusha
scas
jb
xchg
or
xchg
xchg
pop
lock
mov
bound
dec
inc
jp
rcr
loopne
push
inc
push
xchg
xlat
xchg
out
js
pop
mov
lock
psllw
sbbb
orb
xor
mov
xchg
popf
xor
aaa
jns
jl
das
pop
cmp
mov
jnp
fcompl
fucomp
repz
xlat
or
clc
jnp
arpl
or
jge
cmpl
negl
stos
sub
loope
movb
in
inc
outsl
aaa
jge
iret
mov
lret
popf
mov
or
les
mov
pop
xor
cmc
xor
xchg
cmp
inc
pop
push
push
rcrl
arpl
loopne
push
xor
ret
movsl
push
jg
dec
lods
push
xchg
imul
pop
leave
test
push
sub
fdivl
pop
inc
imul
mov
insb
andl
out
or
cmpb
jno
aad
xchg
xchg
inc
test
dec
jecxz
or
rorl
fdivs
lret
pop
pandn
xor
pop
repnz
int3
sub
test
mov
aaa
lea
insl
mov
test
push
cwtl
lods
adc
lret
cli
and
aad
sahf
pop
mov
sub
jno
xchg
icebp
xor
es
loopne
sub
pop
dec
std
icebp
xor
mov
mov
loopne
and
adc
ljmp
adc
xor
testb
mov
or
roll
mov
cli
loope
ljmp
dec
add
les
int3
insl
aaa
jae
ja
int
push
dec
cmc
push
dec
ret
adc
pop
pop
dec
mov
push
das
add
sub
mov
rorb
sbb
ret
xchg
push
xchg
mov
out
pusha
pop
pop
add
xor
sub
enter
push
xchg
adc
inc
lret
cmpb
add
js
jns
sti
sub
ds
test
xor
pop
or
sbb
lret
imul
or
jns
test
call
mov
lds
rcrl
ja
jmp
and
clc
jnp
out
and
xorb
cmp
test
pusha
cmpsl
addr16
mov
fs
inc
lds
in
or
mov
sbb
int3
push
icebp
fisubrl
icebp
jo
jl
xchg
rclb
adc
out
out
das
mov
cmp
sub
adc
ror
fcmove
rcll
out
mov
xor
push
or
xor
je
imul
inc
push
inc
sub
out
popa
adc
dec
test
sub
ret
add
xchg
sbb
addr16
add
loope
enter
test
and
lock
shll
adc
nop
xchg
xor
xchg
enter
xor
sbb
je
int
out
jns
pop
aaa
arpl
inc
xchg
and
std
dec
loope
xchg
mov
mov
stos
ret
adc
pop
notl
lock
pop
xchg
jecxz
in
push
das
jno
incl
out
aas
mov
xchg
add
imul
es
les
jne
inc
mov
pop
stos
test
and
mov
rol
inc
push
dec
jo
imul
cltd
inc
iret
pop
jae
sub
popf
pop
jp
push
sub
insb
mov
jg
inc
lds
mov
into
jae
test
mov
rcrb
and
and
jl
mov
stos
lods
fucomi
popf
push
xor
sub
pop
pushf
and
in
push
fdivrs
sub
popa
in
fisttps
lcall
in
out
push
xchg
cmpsl
xchg
sbb
pop
xor
sbb
ss
movsl
jno
mov
add
std
ja
sbb
xchg
pop
adc
dec
sbb
inc
cld
ja
add
out
testl
shll
mov
or
enter
mov
inc
xchg
sar
jecxz
in
popa
sbb
fbstp
pop
sub
in
fisttpll
shrb
popf
sbb
sub
lds
loop
xchg
jp
hlt
int3
mov
arpl
aam
add
das
sbb
cwtl
push
mov
xor
jnp
and
push
cld
inc
mov
imul
pop
sbb
adc
gs
adc
mov
jle
sbb
sbb
inc
inc
dec
and
xor
aad
repz
mov
aam
mov
push
dec
sbb
repz
xchg
std
lock
pop
jae
jns
rcll
gs
lds
call
xchg
popa
stos
push
mov
adc
mov
bound
jnp
mov
popa
jnp
jno
call
add
outsb
push
lods
movsl
cmp
mov
je
xor
xchg
jl
pushf
inc
out
mov
xor
mov
dec
lret
fs
sbb
jle
and
lods
sbb
or
jp
in
call
lahf
pop
fsubp
leave
mov
psubd
inc
sarb
and
cld
sub
aas
push
adc
xchg
mov
dec
pusha
dec
in
cmp
loopne
mov
jns
mov
fs
dec
push
add
mov
jbe
scas
dec
ror
cmp
jecxz
sbb
fstpt
mov
and
or
sahf
ss
add
addr16
leave
lods
adc
push
aad
test
sti
jl
shrb
lea
das
jecxz
pusha
push
sbb
int
jle
iret
test
shrb
repz
repz
push
fs
pop
jg
ror
mov
inc
sbb
push
incb
js
or
inc
sbb
call
jnp
add
xchg
xchg
lahf
mov
scas
jle
cmp
jo
scas
xlat
in
mov
add
inc
andb
in
xchg
cwtl
and
jmp
mov
mov
insl
neg
jb
jnp
clc
es
mov
gs
les
movsb
mov
fisubl
aaa
adc
jnp
in
push
outsb
scas
fucomip
nopl
jo
and
bound
gs
loope
clc
loope
gs
push
loop
fdivrs
in
sub
fwait
pop
sub
fcoml
cmp
in
je
pop
xchg
cs
pop
mov
inc
sub
jmp
sar
push
add
mov
xchg
lea
mov
test
in
sti
test
mov
test
out
mov
jbe
push
out
ret
jmp
shrl
int
add
dec
jb
mov
adc
mov
jle
mov
sub
icebp
imul
sub
lock
bound
jecxz
add
div
fstp
xchg
push
sti
push
xchg
test
iret
lcall
push
ja
xor
loop
jp
je
pop
inc
mov
pop
add
and
cmpsl
minps
je
and
test
cmc
mov
std
test
cltd
dec
into
addr16
mov
mov
aas
scas
inc
xchg
sub
rcrl
in
lds
dec
stc
outsl
jae
jmp
nop
add
push
icebp
dec
icebp
outsl
sbb
mov
je
push
cld
jl
call
add
and
jne
mov
dec
sti
pop
out
and
test
scas
xor
cli
and
push
or
xchg
enter
fnsave
and
bound
cmp
jnp
adc
jg
dec
mov
shlb
in
dec
sbb
or
sbb
and
jnp
js
outsl
int
test
adc
cmp
mov
push
rcr
sti
cmc
insl
inc
roll
nop
xor
push
rcrl
add
jp
in
mov
cmp
not
xor
ss
pop
lea
mov
roll
sahf
inc
movsb
add
adc
adcb
adc
cltd
jmp
inc
push
mov
add
sbb
or
fwait
mov
or
add
daa
mov
lock
pop
fidivl
adc
cmp
rol
les
or
in
popf
jge
lret
fists
sbb
pop
scas
push
addr16
pop
mov
cmp
es
mov
loope
lods
aad
movsb
popa
or
pop
call
das
sub
adc
push
mov
out
fwait
add
cli
addr16
cmc
dec
mov
sbb
pop
add
jno
add
mov
mov
jns
lret
out
or
test
sbb
mov
xor
xchg
scas
mov
adc
std
mov
mov
xchg
shrb
fwait
push
adc
xchg
push
and
jmp
aad
subl
xor
dec
in
rolb
ljmp
push
xor
cmpsb
loopne
mov
sarl
stos
jge
sti
test
sub
mov
jne
mov
testb
jecxz
xchg
mov
xchg
pop
scas
test
aad
mov
xchg
xchg
cmc
push
cmc
movl
jl
ret
inc
adc
push
loop
dec
mov
sbb
inc
push
jbe
je
out
pushf
int
jmp
icebp
hlt
push
push
daa
pop
dec
pop
push
pop
xlat
inc
xchg
jmp
jno
cmp
pop
bound
rorb
int
xor
xchg
mov
mov
mov
pop
cs
pop
jb
add
cmp
lods
test
scas
push
cmp
sbb
movsb
adc
stos
es
jno
mov
cli
jb
jmp
imul
mov
inc
jb
sbb
out
js
or
cli
rclb
xor
dec
fstps
aas
jns
insl
js
jge
enter
and
stos
imul
out
and
inc
pop
adc
mov
mov
mov
cmp
arpl
ret
fnstenv
lea
movsl
push
shrl
mov
dec
mov
mov
divl
xchg
pop
sub
xor
int3
push
stos
mov
add
mov
fstpl
outsb
sti
xchg
add
sub
mov
ret
fdivrs
sbb
lret
mov
sbb
jmp
inc
or
fxch
outsb
pop
and
cmp
sub
jae
std
out
and
xorl
mov
arpl
sbb
pop
loope
adc
loope
fucomp
test
mov
aaa
in
dec
jo
cmpsl
movsb
mov
fwait
repnz
jbe
stos
cli
sti
les
sub
mov
push
jg
pop
xchg
push
add
or
out
in
pop
push
loopne
or
lret
pusha
sub
mov
add
cmc
inc
lea
jo
xor
and
jb,pn
adc
sbb
and
iret
mov
imul
cmc
push
into
jne
das
inc
xchg
scas
popa
test
push
mov
movsl
inc
jg
inc
add
adc
loop
lret
push
into
daa
push
inc
movsb
in
orb
and
push
sbb
fidivrl
imulb
mov
leave
outsl
lret
sbb
int
mov
popf
jmp
testb
idivl
mov
inc
ret
add
push
cmp
or
addl
sbb
mov
sub
or
pop
or
sub
mov
ds
cli
xchg
pop
or
insb
sub
cmp
xchg
cmp
loop
adc
fldl
out
dec
in
jge
adc
add
xor
and
rcr
ror
jmp
out
xchg
lahf
orl
jno
popa
outsl
adc
add
xor
and
rcr
ror
jmp
out
xchg
lahf
orl
popa
jg
outsl
adc
add
das
aad
ror
jmp
jmp
lahf
cwtl
mov
xchg
stos
dec
pop
insl
dec
stc
jnp
outsl
adc
adc
xor
mov
gs
jmp
cwtl
out
or
dec
rcrb
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
jg
add
frstor
jge
fstpt
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
les
mov
add
xor
sbb
xor
jns
dec
add
add
mov
sub
adc
sub
pop
add
add
add
add
or
lret
add
mov
add
add
add
jo
mov
add
add
dec
add
pop
add
add
int3
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
push
add
leave
add
add
xor
insb
add
add
add
add
jnp
adc
add
jnp
mov
xchg
add
add
add
add
add
add
add
add
add
add
test
lahf
add
add
add
ret
add
add
or
verr
push
pop
add
add
add
add
add
add
add
add
add
add
xchg
add
aad
int3
add
add
add
mov
jmp
add
test
xchg
add
add
add
add
add
ret
add
add
add
push
add
pop
add
add
add
add
int3
add
add
add
add
add
add
add
aaa
add
xchg
add
add
mov
add
add
add
cmp
adc
add
add
add
outsl
add
add
dec
add
add
adc
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
and
adc
add
movsl
add
add
and
cmp
aas
add
sbb
pop
add
add
add
add
add
add
add
add
and
jns
into
add
pop
add
add
add
add
imul
ret
add
add
add
and
in
push
add
add
push
mov
and
popf
add
add
int3
add
addb
add
xchg
add
add
add
add
add
add
mov
add
pop
add
add
add
add
flds
jle
add
add
faddl
dec
add
xor
roll
add
add
add
jno
xor
ret
add
add
add
add
add
add
add
pop
add
add
xchg
add
add
movsl
add
push
add
add
xchg
add
add
int3
add
add
add
adc
cmp
jnp
xor
xchg
add
add
add
add
add
add
add
add
add
add
xor
sbb
add
add
add
add
add
pop
add
in
add
add
push
or
pusha
add
add
add
add
add
mov
or
cmp
add
xor
cmp
add
or
filds
push
adc
add
add
or
jns
xchg
push
cmp
jle
pop
aam
shll
sub
loope
movsl
jmp
fdivrl
sbb
lock
pop
cmpl
xchg
rcll
stc
shll
xlat
fwait
ja
xchg
aam
or
ja
cmpsb
push
adcb
sahf
insl
mov
aad
push
outsl
cmp
sub
fisttpl
or
jno
cmc
stos
add
das
pop
pop
xor
jmp
mov
mov
fdiv
rorb
lret
mov
push
ret
and
pop
in
adc
xchg
ja
pushf
je
pop
test
add
pop
inc
inc
mull
push
push
xor
hlt
bnd
outsb
loopne
addr16
cmp
inc
add
mov
pop
dec
in
adc
mov
sub
adc
icebp
xor
mov
fnstcw
sbb
fiaddl
sub
mov
jmp
out
pop
neg
loope
jbe
cli
or
addr16
hlt
scas
jne
hlt
subb
icebp
ret
mov
jmp
sbb
lods
sahf
or
repz
das
or
dec
xchg
loop
imul
cmp
sub
xchg
xlat
ja
adc
imul
mov
mov
pop
sub
mov
pop
ja
sub
data16
add
imull
dec
mov
push
xchg
dec
adc
mov
scas
mov
jne
js
adc
aam
lahf
sbb
rolb
jge
lahf
es
orb
addr16
je
je
lods
jl
scas
inc
sahf
push
adc
loop
in
jnp
cmp
or
adc
fistps
push
test
and
test
test
inc
mov
test
jne
ror
test
sub
mov
enter
out
jmp
xchg
jge
jnp
lds
or
loop
xor
shll
dec
ljmp
out
imul
int
pusha
mov
in
jg
mov
inc
or
or
call
push
enter
popa
xor
cs
test
repz
test
movsb
in
mov
addl
mov
mov
jno
inc
sub
std
int3
xor
lret
daa
mov
in
fisubrl
dec
dec
dec
adc
ret
lahf
inc
or
xchg
popf
push
mulb
sub
xlat
push
mov
and
cmpsb
fpatan
jle
je
inc
jo
fistl
int
outsb
xchg
movsl
ret
outsb
addl
push
jo
pushl
gs
loope
inc
mov
shr
subb
push
lods
daa
and
push
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
